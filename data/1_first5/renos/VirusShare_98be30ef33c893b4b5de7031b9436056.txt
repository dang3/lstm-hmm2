push
mov
add
mov
mov
mov
sub
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jo
mov
mov
mov
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
add
mov
mov
mov
mov
mov
lea
push
pushl
mov
push
mov
push
call
mov
mov
add
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
xor
sub
push
call
adc
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
add
mov
sub
push
call
mov
sub
sub
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
subl
mov
push
mov
lea
mov
push
call
mov
mov
add
mov
or
sub
mov
mov
mov
push
call
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
sub
decl
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
xor
xorl
mov
lea
push
call
mov
mov
mov
subl
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
addl
push
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
push
push
push
push
call
mov
mov
or
mov
mov
mov
mov
xorl
mov
mov
mov
push
push
push
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
add
mov
sub
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
xorl
pushl
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
pushl
call
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
add
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
pushl
call
mov
mov
mov
mov
sbb
add
mov
mov
mov
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
orl
push
call
mov
mov
sub
mov
mov
mov
mov
lea
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
adc
mov
mov
mov
mov
mov
lea
push
call
mov
sub
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sbb
add
or
sub
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
xor
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
sub
lea
push
call
mov
add
add
sub
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
cmp
jb
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
sub
mov
add
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
add
mov
mov
mov
lea
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
subl
sbb
push
push
mov
push
mov
mov
push
call
mov
mov
sub
mov
mov
sbb
lea
push
call
mov
mov
mov
mov
mov
mov
add
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
movl
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
mov
add
mov
mov
mov
mov
mov
mov
sbb
push
push
mov
push
push
call
mov
add
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
mov
add
cmp
jg
mov
mov
sub
mov
mov
mov
lea
push
call
mov
add
mov
subl
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
xorl
mov
mov
mov
mov
pushl
push
call
mov
mov
sub
mov
add
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
adc
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
cmp
jbe
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
or
mov
or
mov
mov
lea
mov
mov
mov
mov
push
call
mov
xor
mov
sub
mov
mov
adc
mov
mov
subl
lea
mov
push
push
call
mov
mov
sub
mov
sub
cmp
jae
mov
mov
sub
mov
and
mov
mov
mov
mov
lea
push
mov
pushl
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
movl
push
call
mov
mov
mov
mov
mov
mov
mov
sub
cmp
ja
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
orl
mov
push
call
and
mov
mov
mov
cmp
ja
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
andl
mov
mov
pushl
lea
mov
push
call
mov
mov
add
mov
mov
add
mov
mov
mov
mov
xor
push
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
xorl
sub
push
call
mov
mov
or
mov
mov
mov
mov
mov
push
mov
push
call
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
or
sub
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
add
mov
mov
add
cmp
ja
mov
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
push
push
add
push
push
call
mov
mov
add
mov
mov
add
cmp
jae
mov
mov
mov
add
mov
add
addl
mov
mov
mov
addl
push
mov
push
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
andl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
add
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
cmpl
jl
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
mov
mov
addl
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
add
mov
add
mov
mov
addl
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
cmpl
jl
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
movl
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
call
mov
sub
and
mov
mov
push
call
mov
sub
mov
mov
add
mov
mov
mov
and
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
add
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
cmp
jns
mov
mov
and
mov
add
mov
mov
mov
mov
sub
mov
and
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
adc
mov
mov
push
call
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
add
mov
mov
push
push
push
mov
push
call
mov
mov
mov
add
mov
mov
mov
cmp
je
mov
mov
mov
mov
incl
mov
or
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
sub
push
call
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
xor
mov
mov
sbb
mov
mov
push
call
mov
mov
add
mov
add
mov
or
mov
mov
mov
push
mov
pushl
call
mov
mov
mov
sub
mov
add
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
mov
sub
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jne
and
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
cmp
jnp
mov
mov
sub
mov
mov
mov
mov
mov
pushl
mov
mov
push
call
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
lea
movl
push
call
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
test
je
mov
mov
mov
sub
mov
mov
mov
xor
mov
and
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
add
add
add
mov
mov
mov
mov
pushl
call
mov
mov
and
mov
mov
mov
movl
mov
add
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
push
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
sub
cmp
jbe
mov
mov
or
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
and
mov
mov
mov
sbb
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
subl
mov
mov
push
call
mov
mov
mov
add
mov
mov
add
cmp
jb
mov
mov
mov
sub
mov
movl
mov
mov
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
or
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
sbb
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
sub
cmp
jl
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
or
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
xor
sub
mov
add
mov
adc
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
sub
sub
mov
mov
or
mov
push
push
push
mov
mov
push
call
mov
mov
mov
add
mov
mov
cmp
jg
mov
mov
adc
mov
add
mov
mov
mov
sub
mov
lea
mov
push
push
call
mov
mov
mov
xor
sub
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
and
push
push
push
push
call
mov
sbb
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
sub
mov
add
mov
mov
mov
mov
incl
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
add
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
xor
lea
push
call
xor
and
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
je
sub
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
add
mov
push
call
mov
mov
mov
mov
mov
mov
mov
cmpl
ja
mov
mov
sub
mov
mov
mov
add
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
push
push
mov
push
mov
mov
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
push
push
call
mov
mov
sub
add
orl
mov
mov
mov
push
push
mov
mov
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
sub
mov
mov
and
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
or
cmp
jl
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
orl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
mov
push
push
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
push
call
mov
mov
add
mov
and
mov
mov
mov
pushl
call
mov
adc
add
mov
mov
mov
mov
mov
mov
pushl
pushl
call
adc
mov
mov
sub
incl
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
sub
and
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
addl
mov
mov
mov
mov
push
call
mov
sbb
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
sub
add
and
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
sbb
mov
mov
mov
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
and
mov
mov
mov
orl
push
push
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
sub
sub
or
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
adc
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jl
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
add
cmp
jbe
sbb
mov
sub
mov
sub
andl
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
mov
mov
mov
pushl
pushl
call
mov
mov
mov
mov
mov
add
cmp
ja
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
adc
mov
pushl
call
mov
mov
mov
mov
mov
sub
cmp
ja
mov
mov
mov
add
or
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
or
mov
mov
mov
sbb
mov
push
call
mov
mov
mov
sub
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
push
call
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
add
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
xorl
mov
addl
mov
push
call
mov
mov
mov
mov
add
test
jb
mov
mov
mov
mov
xor
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
call
mov
mov
sub
sub
mov
mov
mov
mov
mov
pushl
lea
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
sub
mov
mov
cmp
jp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
xor
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
and
mov
mov
andl
mov
mov
mov
add
push
pushl
call
mov
mov
sub
mov
cmp
ja
mov
mov
mov
sub
mov
mov
mov
mov
subl
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
subl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
add
mov
xorl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
push
call
mov
add
mov
mov
andl
mov
mov
mov
mov
push
call
mov
mov
add
mov
sub
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
mov
addl
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
sbb
push
call
mov
sub
mov
mov
mov
mov
adc
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
test
jg
and
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
or
or
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
add
cmp
jne
mov
mov
mov
mov
mov
xor
mov
mov
mov
pushl
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
add
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
sub
sub
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
and
mov
mov
push
push
push
push
call
mov
xor
adc
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
sub
mov
mov
mov
or
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
sbb
mov
mov
pushl
call
mov
mov
mov
add
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
and
mov
mov
add
mov
push
call
mov
mov
mov
mov
andl
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
orl
add
mov
add
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
lea
mov
mov
mov
push
push
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
push
mov
add
push
call
mov
add
mov
add
mov
or
mov
mov
push
lea
mov
push
call
mov
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
xor
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
xorl
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
push
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
push
push
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
push
mov
mov
push
push
mov
push
call
mov
mov
add
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
lea
push
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
push
call
mov
mov
mov
xor
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
or
mov
mov
push
call
adc
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
or
cmp
jae
mov
mov
mov
mov
mov
orl
mov
mov
mov
lea
push
call
mov
mov
mov
sub
mov
mov
mov
adc
mov
mov
mov
push
mov
push
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
movl
mov
push
call
mov
sub
mov
mov
mov
mov
push
lea
mov
push
call
xor
mov
mov
mov
mov
mov
mov
mov
pushl
push
call
mov
add
mov
mov
xor
mov
mov
and
push
mov
sub
push
call
mov
mov
sub
mov
add
xor
mov
mov
push
call
mov
mov
add
sub
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
add
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
subl
mov
push
call
mov
sbb
mov
sub
andl
mov
xor
sub
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
lea
push
call
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
sub
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
and
xor
sub
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jbe
mov
mov
mov
mov
sub
mov
xorl
mov
sub
lea
push
call
mov
mov
mov
sub
mov
mov
mov
test
ja
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
push
push
mov
push
mov
push
call
mov
and
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
sbb
add
cmp
jo
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
push
call
mov
mov
mov
mov
sub
cmp
ja
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
decl
mov
mov
add
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
sbb
pushl
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
xor
pushl
pushl
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
add
mov
push
push
mov
push
mov
push
call
mov
sub
or
mov
add
mov
mov
add
mov
mov
push
call
mov
mov
add
mov
mov
cmp
ja
mov
add
mov
mov
add
mov
mov
and
mov
mov
lea
mov
pushl
call
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sbb
xor
mov
mov
xor
mov
lea
push
call
mov
mov
adc
mov
mov
mov
pushl
lea
push
call
mov
mov
add
mov
mov
mov
movl
pushl
mov
pushl
call
mov
mov
mov
mov
sub
mov
sbb
mov
mov
lea
push
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
cmp
jl
mov
mov
mov
add
movl
mov
addl
mov
mov
mov
push
adc
push
call
mov
mov
mov
mov
mov
addl
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
mov
mov
push
mov
mov
push
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
push
orl
pushl
call
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
add
mov
mov
mov
push
mov
pushl
call
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
pushl
call
mov
mov
sub
sbb
mov
andl
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
mov
addl
push
mov
push
push
push
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
sbb
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
and
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
push
pushl
call
mov
mov
add
mov
mov
sub
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
movl
pushl
lea
push
call
mov
sub
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
pushl
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
sub
push
call
mov
sub
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
orl
mov
mov
mov
push
push
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
sub
mov
mov
cmpl
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
sub
sbb
mov
push
call
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
mov
push
push
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
sub
mov
mov
orl
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
or
push
push
mov
push
call
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
xor
add
mov
mov
mov
mov
mov
mov
mov
sub
push
mov
push
call
mov
mov
add
mov
or
add
mov
mov
mov
pushl
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
and
mov
mov
sub
mov
adc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
lea
mov
add
mov
mov
mov
push
call
mov
mov
add
mov
add
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
subl
mov
add
cmp
jae
mov
mov
add
mov
add
mov
mov
mov
mov
sub
push
push
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
adc
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
addl
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
push
call
mov
mov
mov
mov
and
add
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
cmpl
jb
mov
adc
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
sub
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
add
push
call
mov
mov
mov
and
mov
mov
or
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
orl
push
call
mov
mov
sub
mov
orl
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
cmp
jne
mov
orl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
sub
cmp
jb
mov
mov
xor
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sbb
sub
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
or
mov
or
cmp
je
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
push
call
mov
adc
mov
sub
add
mov
mov
mov
mov
pushl
mov
pushl
call
mov
mov
or
mov
sub
cmp
ja
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
add
mov
mov
sub
push
call
mov
sub
mov
mov
mov
mov
mov
push
push
mov
mov
push
push
call
mov
sub
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
or
lea
mov
mov
push
mov
xorl
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
or
pushl
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
add
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
andl
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
sub
push
mov
push
andl
push
mov
push
call
and
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
pushl
call
mov
mov
add
mov
mov
sub
cmp
je
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
pushl
mov
lea
push
call
mov
sub
mov
mov
mov
mov
lea
mov
movl
mov
mov
push
call
mov
mov
mov
sub
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
or
sub
mov
add
mov
mov
mov
sub
push
call
mov
mov
and
mov
mov
mov
mov
mov
sub
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
cmp
jae
mov
mov
add
decl
mov
mov
mov
mov
mov
mov
push
xor
sub
sub
push
call
mov
mov
mov
mov
mov
sub
cmpl
je
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
mov
add
mov
mov
mov
push
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
add
mov
mov
push
push
push
push
call
mov
mov
mov
add
mov
mov
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
mov
mov
add
mov
add
mov
mov
mov
or
push
push
mov
push
xor
mov
push
call
mov
mov
add
mov
sub
mov
or
mov
mov
mov
mov
push
mov
mov
push
call
add
mov
sub
mov
add
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
movl
mov
mov
add
mov
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
orl
mov
mov
mov
add
mov
mov
mov
mov
cmpl
jae
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
mov
cmp
je
mov
mov
add
mov
add
mov
mov
mov
dec
jne
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
xor
push
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
xor
mov
mov
mov
mov
mov
sub
mov
push
call
mov
mov
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
mov
push
call
mov
mov
mov
sub
mov
sub
cmp
ja
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
adc
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
call
mov
mov
sbb
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
movl
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
push
mov
push
push
push
call
mov
mov
add
mov
mov
orl
mov
mov
mov
lea
push
mov
mov
mov
push
call
mov
mov
sub
add
mov
mov
sub
cmp
jbe
mov
mov
mov
mov
sub
mov
mov
mov
push
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
orl
mov
mov
lea
push
call
mov
add
mov
mov
add
sbb
mov
mov
and
push
call
mov
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
adc
push
call
mov
mov
adc
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
sub
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
cmp
jb
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
pushl
call
sbb
add
and
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
push
call
mov
mov
mov
and
mov
mov
mov
mov
mov
cmpl
jae
incl
mov
mov
sub
mov
mov
mov
mov
sub
mov
push
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
call
sbb
mov
sub
mov
mov
subl
and
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
addl
mov
mov
push
push
mov
mov
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
xor
sub
mov
mov
mov
mov
mov
push
mov
or
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
push
addl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
lea
push
lea
mov
push
call
mov
mov
add
mov
mov
cmp
jbe
mov
mov
mov
mov
or
mov
mov
mov
orl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
and
cmp
jnp
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
cmp
jle
mov
mov
mov
add
mov
mov
mov
orl
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
mov
push
call
mov
mov
mov
mov
mov
cmpl
jb
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
xorl
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
sub
mov
cmp
jl
mov
mov
sub
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
mov
mov
mov
push
call
mov
mov
and
mov
mov
sbb
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
sbb
sub
mov
add
mov
mov
mov
push
mov
mov
push
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
mov
or
add
mov
mov
push
push
mov
push
push
call
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
sub
mov
andl
mov
mov
push
call
and
mov
add
mov
mov
mov
mov
mov
lea
push
push
call
mov
add
and
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
or
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
add
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
and
mov
push
pushl
call
mov
mov
mov
add
mov
mov
sub
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
push
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
sbb
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
add
mov
mov
mov
mov
sub
push
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
add
sub
cmp
jl
mov
add
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
or
mov
addl
mov
mov
pushl
call
mov
mov
mov
mov
mov
cmp
jne
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
call
mov
lea
mov
sub
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
add
cmp
jbe
mov
mov
add
mov
and
mov
xor
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
mov
andl
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
and
push
call
mov
mov
mov
mov
decl
mov
mov
mov
mov
movl
push
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
xor
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
sub
add
mov
mov
mov
mov
push
call
outsl
add
add
add
add
add
add
inc
jns
xor
dec
add
data16
add
add
dec
add
add
jne
add
js
push
add
add
add
inc
insb
add
add
mov
sub
mov
mov
mov
push
mov
mov
push
call
mov
sub
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
cmp
jae
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
or
add
mov
mov
orl
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
push
mov
push
push
call
call
mov
mov
sub
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
call
sbb
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
xor
mov
add
mov
sub
sub
call
mov
mov
sub
mov
mov
mov
mov
mov
movl
mov
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
call
mov
pushl
mov
push
call
call
mov
mov
mov
mov
mov
add
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
ret
int3
int3
int3
int3
push
mov
add
or
sub
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
call
mov
xor
mov
test
ja
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
add
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
or
mov
mov
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
mov
mov
add
push
push
call
mov
mov
mov
mov
mov
mov
adc
push
push
call
mov
sub
cmp
jae
mov
mov
add
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
sub
mov
sub
mov
mov
mov
call
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
xor
mov
mov
mov
mov
pushl
push
call
mov
mov
add
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
call
mov
xor
sub
mov
mov
mov
test
je
mov
mov
mov
sub
mov
mov
adc
mov
mov
mov
push
call
mov
mov
adc
add
mov
sub
mov
mov
mov
mov
mov
mov
pop
ret
int3
mov
sub
mov
mov
mov
mov
mov
sub
mov
sub
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
and
mov
ret
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
call
mov
mov
or
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
lea
add
mov
mov
cmp
jg
sub
add
add
mov
mov
add
mov
push
call
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
andl
mov
mov
mov
mov
mov
cmp
jg
mov
add
mov
mov
mov
mov
mov
inc
mov
cmp
jne
mov
lea
mov
mov
mov
mov
mov
mov
mov
push
call
or
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
inc
mov
mov
mov
add
mov
mov
mov
push
call
add
mov
mov
mov
movl
pushl
push
call
mov
mov
mov
add
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
add
mov
adc
push
call
mov
mov
add
sub
mov
mov
mov
push
push
push
push
call
mov
mov
sub
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
jae
mov
and
mov
or
mov
xor
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
and
mov
mov
sub
add
mov
mov
mov
mov
cmpl
jb
mov
mov
mov
dec
jne
mov
sub
mov
sub
cmp
jb
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
pop
ret
int3
push
mov
add
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
jbe
mov
mov
xor
mov
mov
mov
mov
pushl
mov
mov
pushl
mov
lea
push
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
push
call
and
sub
mov
mov
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
mov
pushl
push
add
push
push
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
add
mov
mov
mov
mov
add
mov
cmpl
ja
or
mov
mov
mov
add
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jae
orl
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
sub
add
mov
mov
mov
push
push
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
add
mov
mov
mov
push
mov
push
push
push
call
mov
mov
add
mov
mov
mov
or
call
mov
sub
mov
cmp
je
mov
mov
movl
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
sub
cmp
jbe
adc
mov
mov
add
add
mov
mov
sbb
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
and
add
mov
mov
pop
ret
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
mov
mov
sub
mov
cmp
jg
mov
add
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
adc
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
sub
and
add
add
mov
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
sbb
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
sbb
add
mov
mov
mov
lea
mov
push
mov
push
call
mov
mov
add
sub
mov
mov
mov
mov
push
call
mov
mov
adc
mov
sub
add
mov
mov
mov
mov
inc
cmp
jne
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
push
pushl
call
mov
mov
sub
xor
mov
mov
adc
add
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
push
call
mov
mov
xor
mov
mov
incl
mov
and
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
push
call
mov
sub
or
mov
mov
call
mov
pop
ret
int3
mov
mov
mov
sub
mov
mov
mov
ret
int3
int3
int3
push
mov
mov
mov
sub
mov
mov
mov
push
push
push
and
push
call
mov
add
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
mov
or
mov
mov
pop
ret
add
push
add
fs
push
add
dec
inc
add
ds
sub
dec
adc
jo
sarb
cmp
sub
out
orb
shrl
mov
int3
test
cmp
loopne
push
inc
daa
dec
add
dec
std
dec
inc
ret
rorb
gs
lods
rcll
pop
push
mov
lods
pusha
jnp
mov
cwtl
cmp
in
pushl
rol
dec
sbb
jl
les
dec
dec
notl
imul
inc
lret
mov
sahf
jp
scas
adc
repnz
add
negl
cmp
lahf
inc
adc
push
pop
orl
jg
pushf
push
xor
or
outsl
adc
adc
imul
push
xchg
sub
dec
cmp
lock
les
xchg
enter
fdivrl
cmp
dec
sbb
fistpl
es
cltd
testb
pop
pop
sub
xor
and
dec
push
inc
rol
insl
mov
add
jb
dec
mov
dec
xchg
fdivrs
inc
ljmp
ret
dec
lcall
inc
xchg
out
rcrb
push
inc
dec
int
jp
wrmsr
stos
or
cwtl
or
or
imul
push
ss
push
adc
cwtl
daa
sub
jl
dec
rol
dec
ror
cmp
in
adc
dec
shll
ss
les
jno
push
dec
xchg
rol
rol
mov
ss
inc
add
enter
lock
push
inc
stos
ljmp
rol
popf
rol
bound
es
dec
aam
mov
xor
rol
loop
mov
adc
testl
push
cwtl
xchg
clc
xor
rol
dec
cli
xor
mov
adc
xor
rol
dec
es
sbb
repnz
lcall
sub
enter
loope
dec
or
mov
das
push
dec
mov
out
xchg
push
xor
insb
xchg
inc
adc
lods
xchg
sub
sbb
inc
lock
mov
dec
mov
mov
mov
jg
dec
rol
cmp
push
push
pop
test
adc
or
cmp
ret
dec
inc
lods
stc
dec
add
aas
inc
xchg
rcll
stos
or
push
shll
push
mov
sbb
ret
loop
les
sbb
and
adc
ss
lds
loope
adc
pop
rol
dec
test
push
in
es
aas
dec
add
inc
dec
adc
ss
mov
sarb
xor
les
es
cmp
push
aas
push
ss
lds
divb
es
lds
dec
adc
ss
dec
enter
rol
dec
and
adc
push
rol
dec
ror
dec
adc
adc
push
ret
test
adc
xor
push
ss
les
jbe
push
jp
rol
pop
faddp
adc
test
adc
sbb
fbld
push
rol
dec
daa
xchg
dec
sub
push
es
pop
cld
pop
mov
dec
adc
movsl
jne
xchg
pop
lds
add
adc
dec
adc
fmull
push
sbb
xchg
scas
adc
les
test
cmp
mov
lds
xor
cmpsb
pop
cmpsb
push
jecxz
pushf
dec
mov
cwtl
mov
or
fsts
adc
jns
inc
xor
dec
roll
les
setge
repz
les
dec
adc
push
aas
dec
aam
push
int3
xchg
xor
dec
xchg
jecxz
pop
xchg
pop
or
test
or
xchg
mov
js
mov
dec
inc
xlat
mov
rcrb
dec
aaa
es
push
addl
jge
adc
cmc
dec
adc
aaa
es
iret
xchg
les
dec
adc
cmc
es
dec
jmp
outsb
dec
test
ss
or
scas
test
or
xchg
xor
out
pop
movsb
rol
imul
ss
hlt
movsb
rol
out
inc
push
pop
jb
adc
dec
jg
pop
es
inc
les
clc
roll
lcall
cld
dec
repnz
jns
lret
sub
sub
dec
adc
popa
or
les
clc
inc
mov
xor
les
call
shrb
adc
movsl
and
les
dec
adc
rcrl
dec
test
adc
inc
dec
call
aas
lret
push
ss
rcll
cmp
cmpsl
push
inc
jp
adc
andb
dec
fldenv
ss
pop
jp
dec
push
int3
push
ss
rolb
mov
clc
cmp
cmpsb
push
xor
cmovbe
adc
add
out
roll
xchg
sbb
inc
test
std
filds
xchg
or
adc
ret
mov
adc
call
push
es
stos
test
rcll
cwtl
or
dec
es
or
insl
dec
mov
cltd
repz
pop
mov
es
xchg
dec
icebp
xchg
add
es
rclb
adc
adc
shrl
adc
rorl
cmp
rol
cld
ret
or
mov
stos
xor
adc
sub
dec
fimull
and
rol
call
push
cmp
rorl
dec
mov
stos
cmc
rcrb
dec
pf2id
xchg
dec
add
in
cs
adc
rol
mov
out
sub
dec
lds
cltd
ja
ss
sar
dec
rol
inc
adc
mov
mov
push
cltd
cmp
mov
dec
rol
fwait
adc
orl
push
dec
loope
xor
das
ret
sbb
dec
or
push
sbb
jecxz
test
mov
js
test
sarb
rol
or
shll
mov
fldcw
adc
adc
dec
jp
inc
adc
mov
dec
jns
adc
dec
mov
cwtl
lock
andb
jmp
int3
test
or
sub
loopne
or
std
adc
lret
fistl
ret
add
testl
mov
push
sub
addr16
dec
mov
into
push
fcomi
mov
push
mov
imul
xor
sahf
xor
or
push
mov
adc
ss
int3
sub
jns
xchg
push
jnp
mov
push
sbb
add
fs
lock
sbb
dec
push
push
mov
test
sub
roll
mov
leave
inc
pop
cmp
inc
mov
outsb
mov
pop
push
push
pop
jmp
hlt
test
repnz
sbb
and
imul
and
push
test
sbb
push
test
fs
pop
push
or
mov
mov
pop
ret
mov
jmp
aas
mov
mov
rorl
xchg
popf
add
stc
add
pop
leave
or
pop
cmpsl
or
cmpsb
loopne
xorl
cmp
out
mov
je
xchg
outsb
je
or
mov
jp
sub
mov
xor
cmpsl
jmp
nop
cmpsb
jmp
mov
dec
movsl
addr16
dec
movsl
pop
leave
mov
or
sarb
and
es
dec
rol
pop
xor
les
rol
roll
shll
sbb
push
lcall
push
xchg
push
icebp
xchg
lcall
les
adc
ret
ret
ret
pop
fwait
lret
xor
les
les
cmp
adc
xor
push
hlt
scas
ss
xchg
push
aaa
fwait
mov
ds
lcall
sub
xor
insb
dec
add
xor
and
adc
xor
ret
ret
adc
mov
mov
sub
rcrl
pop
mov
and
cmp
ss
icebp
rol
push
xchg
inc
ss
jo
std
loope
push
ss
adc
xchg
mov
shrl
rol
xor
popf
and
fadd
adc
rcll
les
xor
rcl
xor
ss
or
std
cmpsl
adc
cmpsl
mov
rcll
xor
rcl
insl
adc
cmpsb
mov
les
es
cmp
std
in
xchg
push
ss
dec
adc
and
test
push
sahf
lcall
xor
ret
adc
adc
inc
stos
vunpckhps
fistpl
jecxz
push
inc
rol
adc
icebp
ss
ss
or
cltd
mov
jb
inc
dec
mov
ss
xchg
out
jmp
shl
repz
or
stos
ss
mov
dec
hlt
call
cmp
xor
mov
cld
or
jp
inc
adc
ret
ret
adc
inc
mov
lret
adc
out
ss
cmp
lcall
les
in
rorb
inc
rol
or
inc
mov
aad
dec
rol
jns
and
jp
adc
shlb
add
sub
add
pop
xchg
cmp
mov
ficoms
fidivl
rcll
rcll
movswl
dec
negl
pushf
dec
in
adc
js
lret
inc
and
in
push
inc
fwait
ret
xchg
and
shrb
cltd
pushf
pop
push
es
dec
lcall
outsb
xor
lret
mov
push
ss
adc
push
test
lret
stos
ret
mov
adc
and
lds
imul
aad
dec
rol
fwait
pushf
fwait
jle
rol
roll
addr16
les
dec
pop
and
cld
dec
shll
dec
xchg
aam
scas
jne
adc
rclb
adc
ss
xchg
sahf
std
and
adc
sti
nop
xor
inc
sbb
pop
cli
aaa
xor
std
rol
adc
adc
mov
xchg
xor
test
cmp
dec
idivb
les
dec
adc
ss
xchg
mov
xchg
or
adc
xor
xchg
or
test
pushf
xor
rol
xchg
sbb
jno
lods
roll
ja
add
add
add
bound
add
inc
add
add
add
add
add
add
add
push
add
add
add
js
add
je
add
add
add
add
jno
add
add
push
jp
arpl
add
imul
add
imul
add
add
add
add
add
add
add
add
dec
add
add
xor
inc
push
add
push
add
add
add
add
ja
add
jae
add
add
add
dec
add
add
outsl
add
je
js
add
add
add
jae
imul
add
dec
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
xor
add
add
pop
add
add
add
add
push
add
add
xor
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
imul
push
add
add
add
add
inc
add
add
xor
add
add
add
inc
add
add
add
add
add
add
jp
add
add
add
add
jbe
add
add
add
add
add
push
push
mov
push
in
push
test
pop
outsl
fists
call
scas
jns
pop
out
pop
xor
sahf
fsubrp
mov
sbb
imul
imull
jecxz
add
adc
mov
adc
and
loopne
jge
in
mov
adc
in
push
lret
pop
push
sbb
sub
xor
xor
sti
sub
test
xlat
or
out
subl
add
sub
test
mov
adcb
cmc
xor
inc
mov
and
dec
cld
mov
je
add
jecxz
sbb
cwtd
mov
into
mov
repz
loopne
dec
addr16
cmpsl
sbb
fnstsw
jle
jecxz
mov
push
dec
cmp
cmp
push
in
push
jmp
aas
mov
push
fcomps
jp
or
fwait
xor
stc
dec
loop
or
hlt
jno
call
insl
cmp
rcrb
ret
pop
mov
outsb
ret
mov
into
add
outsb
cmp
sub
xor
mov
cmp
xchg
sti
mov
out
pushl
shr
das
mov
jmp
xchg
jno
mov
xchg
xlat
jne
testb
aas
js
pop
or
fmul
push
into
fnstenv
fwait
in
inc
loop
dec
mov
lret
movsb
dec
outsb
outsl
in
cmp
je
outsl
inc
push
pop
mov
imul
sub
or
clc
test
lods
lret
cmc
push
loop
test
fisubs
jo
repnz
cwtl
push
loop
into
jne
or
stc
incl
cmp
jmp
pop
sub
add
insb
dec
or
pop
dec
pop
mov
scas
xor
int3
sub
rorl
call
jns
mov
addr16
xchg
popa
int3
out
xchg
xor
nop
aaa
addr16
fistps
outsl
scas
lea
sub
inc
mov
cmpsl
mov
add
ja
insl
jmp
xchg
mov
repz
push
cmp
cwtl
cmp
fsubrs
and
jo
imulb
loopne
xchg
test
ror
adc
and
mov
call
jo
mov
repnz
or
imul
repz
loopne
fnsave
test
jne
cwtl
jge
test
push
mov
dec
leave
or
stos
pop
ret
jmp
push
jg
mov
pusha
mov
call
out
mov
clc
clc
dec
daa
data16
sub
enter
push
shl
push
popf
ss
mov
xor
incb
testb
push
jp
sbb
push
push
dec
or
je
push
cld
cmpsb
add
jmp
dec
cld
xor
mov
jp
call
mov
push
mov
cli
iret
pop
lret
call
outsl
into
cmpsb
sbb
jl
popl
add
pop
xchg
push
cmp
das
cwtl
pop
imul
or
sbb
adc
cltd
negl
mov
cmpsl
pop
call
push
xchg
insl
out
scas
sub
jnp
fisubrs
push
dec
ss
mov
sar
fbstp
push
pop
call
aam
lods
pop
cmp
mov
bnd
pop
push
xor
das
mov
pop
test
push
call
jg
leave
add
inc
mov
das
sti
xlat
xlat
mov
sti
loope
jb
popa
mov
lods
or
add
mov
call
xchg
lret
fdivrs
iret
mov
loopne
popf
sti
mov
sbb
dec
mov
dec
loop
pop
mov
cltd
iret
xchg
mov
xchg
push
mov
jmp
fcoms
add
pop
pop
shlb
pop
adc
push
dec
mov
jp
mov
cltd
mov
loopne
sbb
push
cltd
ja
cs
xor
cmp
mov
dec
xchg
out
xor
mov
jl
pop
jle
je
fstpl
das
cld
sub
add
insl
dec
fs
cmp
divb
inc
mov
negl
out
jns
push
sahf
mov
sub
mov
inc
cs
and
and
dec
gs
std
pop
imul
aas
mov
or
mov
outsb
outsb
iret
dec
sbb
jns
sbb
lahf
dec
sbb
mov
or
inc
mov
and
stc
or
cmp
inc
into
dec
lds
or
mov
imul
aam
push
xchg
inc
pop
jb
dec
outsl
cli
xor
dec
sub
xchg
in
dec
jo
pop
push
mov
shrb
das
lret
loopne
inc
jle
cli
jge
aad
jge
pop
add
sub
or
call
cmp
into
movsl
push
pusha
shll
jns
add
arpl
add
hlt
sub
add
stos
test
jle
enter
xchg
xchg
leave
jl
ljmp
xchg
mov
fcmovbe
imul
xor
pop
mov
push
sub
jp
sbbb
mov
cld
loop
loopne
adc
push
jne
and
mov
jl
ja
mov
mov
mov
push
mov
mov
push
dec
xchg
push
scas
mov
enter
push
stos
je
push
mov
stc
lahf
sbb
mov
ret
scas
add
sarl
in
dec
arpl
push
arpl
dec
mulb
xchg
dec
cmp
out
aaa
jecxz
add
cmp
mov
inc
into
lahf
pop
cltd
movsb
loopne
push
push
cmp
loopne
ss
cmp
and
lock
sarl
push
shr
sti
inc
loop
mov
subb
clc
push
ficoms
incl
mov
jns
mov
or
stos
and
and
ret
ja
js
lahf
and
lds
stos
rorl
leave
cmpl
cmp
pop
aam
pop
movsl
out
add
sti
lock
js
mov
call
xchg
into
lahf
rcl
push
ret
aam
adc
mov
mov
iret
std
int3
movsl
mov
fcom
xchg
ret
rclb
es
rcl
mov
bound
dec
fwait
movsl
subl
sbb
pop
or
into
mov
les
dec
mov
jl
sub
jecxz
test
cmc
lret
les
shrb
in
and
or
add
sbb
push
pop
ljmp
mov
imul
cmp
shl
aaa
cld
rcrb
sub
sbb
test
mov
mov
lcall
ss
add
enter
ss
hlt
pushf
icebp
inc
adc
dec
or
bound
jo
xchg
fsub
add
dec
mov
push
fcomp
add
lds
jnp
loope
fsubrp
popa
aam
push
cmp
mov
ficompl
gs
xlat
mov
iret
lar
and
test
xchg
lea
sub
sar
stc
inc
pop
jp
xor
xchg
jg
sub
rcl
stc
push
outsb
orb
aam
dec
lea
jl
test
iret
mov
or
iret
and
sbb
xor
push
mov
xchg
mov
in
add
add
call
sti
in
arpl
iret
ret
push
xchg
pop
fsubrs
loopne
out
in
adc
cli
in
sti
or
jmp
orb
jmp
loopne
cs
ljmp
test
or
jne
imul
pop
xor
je
mov
or
inc
add
cmp
shlb
sub
add
in
les
out
inc
inc
xor
adc
push
ret
call
std
mov
dec
push
test
leave
je
call
lcall
add
imul
divl
test
add
sub
inc
test
or
imul
arpl
outsb
jns
popf
push
jecxz
stos
iret
in
lret
mov
mov
sbb
push
icebp
push
bound
test
lcall
movsl
pop
jecxz
insb
test
repnz
icebp
andl
mov
dec
sub
add
ret
in
pop
cmp
mov
add
push
xbegin
ret
add
mov
stos
pop
je
cltd
jnp
push
jo
insb
cmp
push
mov
sti
dec
shlb
inc
and
repz
mov
push
mov
or
add
lea
mov
test
loop
or
dec
jle
cmp
sbb
in
das
out
inc
sbb
or
shlb
negl
movw
lods
adc
test
aaa
xor
in
and
and
sbb
sbb
adc
adc
lret
pop
jb
pop
leave
push
cs
insb
inc
rclb
jb
dec
shrb
roll
or
in
jg
test
ss
jmp
push
mov
pop
cmc
push
sbb
cmp
pop
push
stc
sbb
outsl
pop
cli
mov
or
gs
add
shl
jne
fldenv
dec
lock
push
mov
dec
push
int3
add
iret
dec
dec
out
push
and
inc
pop
cmp
pop
push
aaa
sar
add
mov
scas
js
lret
jl
push
jecxz
and
bound
push
jmp
sti
je
icebp
cmpb
negb
cmc
in
mov
sbb
scas
inc
jmp
adc
je
or
lods
iret
inc
in
inc
cmp
jmp
popf
jmp
test
ja
mov
movsl
and
fs
mov
andb
fs
loop
inc
cmp
mov
mov
and
scas
es
sub
into
call
and
loope
fcomps
push
cs
adc
dec
aam
jb
mov
and
outsl
adc
leave
mov
inc
shrb
rolb
bnd
push
addr16
pop
call
jmp
mov
and
push
lret
dec
int3
cmp
sub
mov
mov
cmp
push
loopne
mov
fsub
add
rcrb
fsubs
jle
orb
mov
je
fldcw
sub
rcrb
clc
push
adc
loopne
fsubr
notb
inc
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
dec
add
popa
add
xor
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jbe
add
add
jno
add
add
add
push
push
dec
add
add
add
xor
add
add
add
add
add
add
inc
pop
add
add
add
add
js
add
add
js
add
add
add
add
add
cmp
add
add
xor
add
je
add
dec
add
dec
push
add
add
dec
add
inc
add
add
add
arpl
add
aaa
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
inc
add
add
dec
insl
add
dec
add
add
add
add
dec
pop
add
add
dec
add
add
add
add
pop
add
add
add
inc
add
dec
add
add
inc
add
add
add
add
xor
add
add
add
jp
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
push
add
add
add
add
add
add
add
xor
imul
dec
add
add
sbb
shl
jne
sbb
dec
aas
out
enter
inc
gs
sti
fs
clc
mov
inc
sub
mov
sarb
dec
pushf
movsb
in
or
inc
rorb
xor
ss
lret
or
inc
sti
pushl
xchg
das
or
dec
pop
les
jno
aad
je
xor
xchg
scas
sti
int
or
xlat
in
cmpl
sbb
jge
lahf
repz
mov
sub
orb
mov
push
fidivrs
jle
mov
adc
jne
lahf
rclb
cld
das
mov
lahf
out
mov
sbbl
dec
push
dec
lock
pop
mov
sbb
add
sar
pop
or
fsin
sbb
lret
xchg
mov
lock
ret
add
xchg
or
jp
call
out
pop
lahf
gs
jle
mov
mov
das
jecxz
jnp
cmpsl
shlb
push
xchg
jg
xlat
and
std
adc
stc
aad
jb
cmpsl
mov
fcompl
adc
pop
outsb
popa
jmp
pop
mov
and
cmpsb
jl
push
aaa
pop
mov
stc
and
movsb
dec
imul
push
or
lds
dec
lds
out
std
shr
shll
stos
std
jnp
enter
inc
mov
lret
mov
mov
pop
icebp
inc
pop
or
lea
mov
fwait
add
mov
sub
fsub
xlat
test
mov
outsb
sbb
inc
and
outsb
xor
mov
outsl
jg
dec
stc
lcall
cmp
dec
mov
or
lods
and
das
or
dec
xorb
jae
call
jge
push
lcall
inc
jge
loope
out
inc
jae
mov
shrl
orb
xchg
int3
jle
mov
lret
fmul
or
sub
and
clc
mov
inc
mov
enter
sbb
cli
jnp
cltd
insl
test
add
dec
insb
mul
popf
inc
xchg
call
inc
inc
dec
mov
jno
mov
fsubrl
insl
je
cmp
lahf
pop
mov
mov
sub
call
sub
orb
mov
push
cs
lahf
or
cwtl
cs
imull
aas
loop
leave
jns
mov
stc
sbb
or
outsl
cmp
bnd
dec
stos
jno
aad
mov
loop
in
and
dec
pop
jle
mov
out
test
adc
dec
movsl
les
and
iret
cmp
add
mov
cli
jle
bound
pop
mov
ds
fimull
push
orb
dec
std
out
aad
xchg
test
mov
adc
test
push
mov
inc
sbbb
les
test
clc
xchg
push
addr16
dec
jo
mov
xchg
pop
cmpsl
fmuls
jne
stos
ss
xor
lea
cmp
inc
mov
mov
loopne
push
mov
fmul
or
pavgb
fstps
pop
jne
mov
sub
into
frstor
fsubrs
adc
mov
andl
enter
cmp
lods
cmp
inc
push
scas
xor
ljmp
mov
jmp
popa
test
mov
movsl
loopne
out
stc
adc
push
xor
sub
clc
mov
shr
clc
movsl
ss
cmpsl
cmp
jno
ds
dec
out
push
push
addb
es
cmpsb
jmp
mov
adc
jbe
test
xlat
outsl
icebp
shlb
imul
and
jecxz
int
push
sarl
addr16
test
mov
call
repnz
mov
cli
das
imull
cs
pop
push
cli
in
imulb
jo
pop
cwtl
into
shrl
je
cmp
adc
mov
fucomi
mov
ds
xchg
repz
daa
lret
call
cmp
jmp
jb
mov
inc
notb
mov
nop
mov
pushf
stc
call
bound
iret
scas
add
loopne
repz
stc
sub
addl
out
mov
je
orb
in
fdivrp
jp
stos
dec
repz
jne
xor
sub
mov
mov
das
mov
cli
fwait
push
ja
jmp
clc
aam
push
out
sar
push
sbb
pop
push
addl
ror
xchg
pusha
or
mov
inc
mov
pop
lds
mov
pusha
pop
xchg
pop
ret
xchg
negl
jl
dec
adc
fisubrl
jmp
lds
ljmp
cmp
xchg
sub
and
aam
jp
jns
xchg
fidivl
pop
inc
push
scas
loope
into
hlt
add
push
xor
cmp
dec
mov
es
sar
pop
push
push
rclb
mov
mov
fwait
stc
add
and
push
dec
call
push
addr16
inc
das
fldt
icebp
push
fstps
xchg
pop
mov
cmpb
cld
les
cmp
mov
repz
jns
popf
fiadds
loopne
push
icebp
adc
jl
dec
and
push
pushf
ja
cmp
push
cmpsb
jb
adc
adc
jl
mov
sbb
ljmp
lock
sbb
imul
icebp
cmp
je
jge
in
call
stc
inc
testb
mov
sbb
pushf
fbstp
enter
mov
or
es
pushf
cli
jae
aam
inc
out
dec
add
ret
jmp
inc
adc
push
je
insb
push
or
adc
rcll
dec
imul
jns
call
push
inc
jecxz
test
dec
inc
xchg
arpl
mov
test
dec
ret
adc
enter
xor
mov
adc
sbb
add
sbb
aad
cmp
dec
aad
push
movsb
dec
and
push
aam
andl
pop
jbe
ds
add
cmp
arpl
pop
ds
mov
push
imul
mov
call
mov
push
xchg
das
jns
icebp
push
clc
mov
test
lock
ret
sub
mov
call
das
mov
into
ljmp
mov
int3
mov
stc
call
inc
movsb
sbb
push
push
push
outsb
in
jge
push
sbb
adc
pop
test
loope
fistpll
mov
pop
mov
addr16
xor
xor
hlt
push
dec
clc
mov
test
add
xchg
push
das
js
int
inc
ja
popa
sbb
add
and
or
pop
dec
adc
push
push
pop
and
sub
outsb
fiadds
les
cmp
mov
ret
std
inc
pop
mov
dec
faddl
mov
dec
jg
pop
sub
aam
mov
jo
cli
and
xchg
jge
lds
das
arpl
lret
push
lds
and
cltd
loopne
imul
out
or
sti
iret
push
fimuls
into
in
outsb
xor
sbb
xchg
cmp
fisttps
push
lea
data16
push
cmp
movsl
call
dec
push
jp
and
ja
mov
popf
std
mov
and
rcr
mov
call
mov
loopne
ss
jns
mov
pushl
mov
sub
sub
xchg
loopne
inc
pop
add
push
scas
mov
out
popf
fcoml
clc
pop
xor
out
add
jnp
stc
stc
and
mov
mov
test
sbb
xor
clc
sub
cmp
ret
loopne
sbb
arpl
jg
test
jp
inc
lods
inc
into
mov
data16
add
dec
jge
es
and
pusha
and
cld
callw
andb
mov
adc
sub
gs
dec
and
sbb
sub
xor
xchg
cld
popa
jg
jp
push
test
call
inc
sbb
clc
aad
lret
mov
clc
pop
cmp
or
add
cmp
fcomip
call
add
xchg
xchg
sbbb
lock
adc
rcll
adc
mov
int3
lcall
sbb
mov
jecxz
loop
shr
xor
lea
ret
push
addl
lds
sub
cmpb
cli
repnz
adcl
filds
std
dec
fimuls
loope
mov
mov
sub
ds
or
les
cmp
jb
or
add
pop
bound
jb
xchg
xor
inc
xor
jnp
pop
xor
popl
dec
in
leave
adc
mov
lcall
fwait
iret
fsubr
fidivrs
pop
loope
loop
stos
ret
inc
pop
stc
jo
clc
push
or
dec
clc
sti
leave
stc
insw
mov
js
fwait
mov
xchg
aaa
xchg
repnz
lods
cld
xlat
les
inc
push
jmp
and
add
jmp
push
mov
filds
xchg
inc
imul
pushf
cltd
add
scas
pop
stc
push
lds
push
jl
stos
jge
and
test
mov
mov
shll
clc
gs
ljmp
dec
repnz
or
repnz
jle
mov
jl
test
adc
loopne
mov
push
fmull
mov
addr16
jmp
rcr
cwtl
int3
icebp
xor
mov
or
pop
je
sub
dec
push
mov
push
mov
jp
sti
out
push
int
jb
cs
push
push
jb
scas
and
imull
jmp
push
and
aam
int3
cs
lea
ja
lcall
outsl
loop
cltd
or
das
mov
cli
xor
push
lret
push
shlb
pushf
rcl
xor
cmp
jnp
mov
mov
sahf
dec
mov
insb
push
cli
or
or
inc
stos
jmp
mov
inc
mov
jmp
mov
jb
inc
and
add
xor
and
rcrb
cli
pop
mov
or
add
add
cwtl
lret
test
xchg
imull
pop
adc
xor
mov
sbb
add
sbb
and
pushf
push
out
lods
test
pushf
shrb
mov
xchg
mov
fstps
pushf
loope
pushf
fs
icebp
pop
inc
fistps
inc
lcall
mov
push
shr
xchg
xchg
dec
mov
adc
adc
xlat
sub
call
in
dec
cld
adc
aad
ja
cld
arpl
pop
mov
outsl
cmc
sti
adc
adc
xchg
jmp
ret
xchg
lret
lcall
add
out
mov
sti
loope
xchg
cld
in
pushf
cld
add
lret
data16
pushf
sarl
std
test
dec
xchg
dec
inc
ja
mov
std
or
ret
mov
les
sbb
sbb
push
stc
xor
cli
loopne
or
fstpt
push
imul
sti
xchg
lock
cmpb
add
mov
test
push
ficoms
ljmp
ret
scas
push
adc
ds
xchg
jmp
out
sarb
mov
pusha
jmp
insb
inc
lcall
aad
mov
test
pop
mov
adc
sbb
add
je
push
push
enter
mov
or
aad
ret
lahf
pop
mov
popf
movsb
into
mov
xor
dec
pusha
idivl
lret
icebp
leave
aam
cli
sbb
lock
lcall
adc
jle
pushl
ds
and
and
shrl
jge
inc
lret
les
into
fdivrl
test
mov
adc
outsl
push
jmp
add
shll
iret
insb
pop
inc
pop
popa
mov
rolb
adc
fwait
mov
sub
xor
ret
xchg
xchg
sub
mov
sub
xor
mov
jbe
rorb
cmp
sahf
mov
dec
mov
cmp
jno
popa
mov
jmp
lea
push
mov
in
push
and
and
push
mov
bound
jae
and
or
pop
mov
leave
jp
mov
vcomiss
dec
fsub
mov
mov
outsb
int3
lahf
and
daa
add
js
mov
or
jmp
inc
push
xchg
or
mov
testl
js
adc
mov
push
repnz
dec
test
dec
fldenv
nop
push
adc
adc
jle
sarl
adc
sbb
lods
dec
inc
sar
rcl
cmp
call
lret
clts
inc
xor
jecxz
sar
cwtl
push
xor
xor
imul
negl
testb
lret
jecxz
popf
dec
mov
mov
ss
pop
ret
dec
xor
xor
mov
xchg
outsb
or
sar
test
aad
push
repnz
and
dec
lret
mov
cld
jge
xor
xchg
call
sub
cmp
xchg
loop
outsb
into
cmp
pop
sbb
scas
pop
das
inc
and
add
sub
shlb
push
outsb
jnp
jns
dec
push
shrl
jmp
add
fwait
popf
fs
jmp
inc
add
mov
mov
cmp
adc
lods
add
imul
sub
fnstenv
call
push
inc
jle
push
shrl
pop
lret
xchg
fs
lahf
pop
mov
pop
mov
rcll
inc
outsl
lea
loopne
inc
test
stc
lods
sahf
test
int3
mov
jbe
rorl
jmp
repz
nop
inc
fidivl
test
xor
int
add
mov
mov
mov
ds
jmp
xchg
shlb
sarb
mov
mov
cmovnp
push
inc
jo
cli
enter
and
pusha
add
fstl
adc
mov
loopne
rclb
xchg
je
js
adc
dec
xor
dec
sbb
pop
sub
fdivs
jns
push
jp
ret
mov
mov
push
loopne
sbb
pop
adc
push
rclb
jle
std
mov
test
and
cli
rcrb
and
mov
roll
jbe
mov
mov
adc
adc
inc
repz
jne
lods
shl
jge
clc
or
ret
aad
outsb
sbb
int3
inc
cmpsb
adc
sbb
insb
cwtl
outsb
jecxz
push
ss
push
movsb
movsl
lcall
lds
mov
rorb
xorb
test
arpl
jns
push
jns
inc
jnp
dec
or
or
pop
ret
dec
arpl
and
repz
gs
add
ret
cltd
and
inc
cmpsl
push
or
popa
inc
mov
pushf
mov
xor
or
adc
sbb
int3
movsl
cmp
lds
roll
cmpsl
int
outsl
adc
stos
and
and
aaa
push
sarb
mov
xchg
push
adc
sahf
dec
clc
les
mov
mov
idiv
inc
mov
lock
dec
xchg
adc
mov
loope
xchg
test
add
lret
aad
les
rcrb
in
mov
mov
insl
dec
ljmp
outsb
notb
fs
cli
xchg
inc
sahf
jmp
sbb
jno
xchg
push
jae
xchg
inc
or
push
jecxz
outsb
sti
test
adc
enter
lret
pop
orl
inc
pop
gs
mov
sti
push
push
mov
fldcw
mov
cmpsl
ret
jl
call
push
outsb
orl
out
jmp
add
mov
repz
lcall
and
js
mov
and
mov
daa
orl
or
xchg
add
inc
and
pop
sub
ret
pop
out
call
pop
ret
ret
iret
cmp
scas
or
ret
pop
popa
jne
mov
jg
mov
dec
mov
out
xchg
js
xor
adc
lret
scas
xchg
pop
test
test
mov
mov
imul
sub
mov
imul
into
jns
mov
dec
lret
sahf
and
addl
push
es
and
jle
das
and
hlt
arpl
xchg
sub
arpl
xchg
or
cltd
scas
repz
fwait
xchg
jle
fimuls
sbb
in
lds
rclb
sub
xchg
inc
hlt
stos
in
xchg
inc
icebp
add
lods
add
mov
add
add
pop
daa
add
das
addl
gs
in
xchg
inc
push
sti
mov
add
std
mov
nop
out
add
data16
popa
pop
add
inc
ds
lds
cmc
sti
in
xchg
add
xchg
icebp
outsl
and
lret
jecxz
lods
xchg
dec
xor
mov
jle
push
xchg
in
xchg
cmp
adc
lock
cld
gs
mov
imul
in
xchg
inc
outsb
mov
cmc
jnp
ret
mov
cwtl
insl
sbb
pop
add
shll
push
cmp
mov
stos
push
popa
cwtl
adc
mov
push
fsub
inc
mov
in
xchg
inc
adc
xchg
test
xchg
inc
pop
lds
mov
mov
arpl
lcall
push
xor
inc
orl
jo
jecxz
mov
stos
push
testb
push
pop
cld
add
inc
mov
xorb
fisttpl
sub
hlt
les
sti
fdivrs
fcmovne
xor
pop
lcall
imul
movzbl
push
mov
push
in
scas
aam
hlt
js
mov
jge
fmuls
outsl
xchg
mov
aaa
dec
sub
cmp
sti
adc
add
stos
pop
jge
xor
and
inc
or
inc
sti
add
je
push
mov
push
mov
xchg
movsb
mov
mov
push
pop
shll
imul
call
push
mov
ljmp
jl
or
pop
aas
pop
int3
pop
jmp
and
les
lods
outsb
mov
or
iret
inc
pop
popa
imul
jbe
fldl
sbb
pop
ja
in
stos
int
in
or
fdivrl
push
xor
sbb
sbb
jno
sub
jbe
xor
sbb
lcall
jnp
cmp
mov
inc
and
jmp
add
sahf
stos
and
call
xchg
mov
rol
mov
add
loope
cmp
or
or
out
sbb
dec
mov
cmc
test
ja
pop
je
push
sub
call
lock
cmp
jb
icebp
xchg
enter
push
stos
mov
inc
xor
lret
gs
xchg
mov
cltd
sbbb
stos
roll
pop
and
add
add
pop
faddp
mov
inc
aas
cmp
fwait
xchg
cmpsl
jae
int3
fmuls
into
cmp
sbb
leave
repz
ret
inc
push
imul
xchg
push
and
xchg
ret
xor
jmp
jp
pop
or
mov
pusha
mov
clc
mov
adc
jecxz
mov
xor
pushf
pop
dec
std
pop
jb
add
lds
mov
scas
js
ret
pushf
or
xchg
sbb
sbb
xor
bound
xchg
es
add
test
shr
push
and
aas
sub
add
push
push
xchg
sub
arpl
dec
outsb
push
xchg
fisubs
push
cmpsl
int
stos
push
adc
push
fdivp
inc
fwait
das
jmp
test
push
push
and
test
mov
adc
arpl
popf
pop
idivl
cmpl
xchg
pop
push
dec
in
cmpsb
popa
mov
loopne
mov
call
rcr
jno
push
xor
pop
data16
jle
std
mov
loop
or
add
call
add
jmp
cli
mov
push
adc
mov
or
shl
dec
clc
aaa
out
cmp
lret
inc
data16
ret
not
sub
fdivp
add
data16
push
xlat
xchg
lret
loopne
shr
push
add
adc
add
add
add
add
xor
xor
add
add
cmp
add
add
add
jp
add
add
add
add
add
add
jp
add
add
add
ja
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
outsb
add
jbe
jns
add
add
add
add
xor
add
add
add
add
add
dec
add
push
add
pop
push
add
xor
add
add
add
xor
add
add
inc
add
add
add
push
add
add
pop
jne
add
add
add
add
add
push
add
xor
jb
imul
add
add
add
dec
add
add
add
add
add
add
add
jno
push
add
add
add
add
add
add
imul
outsb
arpl
add
imul
add
add
add
inc
je
add
add
add
push
ja
xor
add
add
add
push
add
add
ja
add
add
dec
add
add
add
jp
bound
xor
push
add
add
add
xor
add
push
add
push
add
xor
add
add
add
add
add
add
push
add
add
imul
add
insl
add
add
add
add
add
add
add
add
add
add
pushf
out
call
das
dec
roll
cmp
pop
stos
jnp
inc
shrb
sbb
cli
jmp
and
cli
in
mov
cwtl
pop
iret
pop
movsb
enter
lds
cmp
in
pop
add
xor
shlb
js
add
scas
dec
lds
sbb
fwait
test
jo
lret
adc
out
es
xor
icebp
lret
add
sti
mov
lods
mov
sbb
pushf
xchg
mov
pusha
pop
or
test
cli
xor
mov
add
adc
mov
scas
lret
add
loopne
xchg
sbb
pop
push
popf
btr
or
xchg
test
sbb
test
push
nop
cmp
adc
mov
inc
push
dec
push
clc
sbb
ds
push
inc
inc
pushf
push
enter
inc
cld
scas
addl
push
fidivrs
nop
or
mov
mov
mov
fldl
mov
cmp
enter
es
hlt
xchg
mov
pushf
cs
jg
sbb
dec
xchg
cmpsl
add
or
daa
jb
dec
mov
rolb
and
incb
mov
out
sub
mov
and
mov
jge
shrl
add
dec
and
out
adc
sbb
adc
ret
mov
jecxz
mov
shll
icebp
test
push
sahf
xchg
insb
fcoml
dec
adc
gs
stc
sbb
push
and
mov
jp
sbbb
xor
mov
jg
cld
adc
in
dec
xor
jmp
dec
pop
mov
jne
or
mov
dec
push
inc
cmp
xor
aaa
ret
pop
push
xchg
dec
inc
adc
jecxz
push
lods
push
insl
push
enter
mov
das
sub
jo
lret
scas
adc
test
je
or
inc
rcr
adc
test
push
xchg
stos
outsb
cli
test
xchg
fisubs
mov
pop
mov
or
scas
pop
iret
sar
jl
shlb
or
sbb
loopne
iret
fisttpll
test
lret
clc
and
call
lret
sbb
in
sub
test
xor
cwtl
dec
out
f2xm1
dec
iret
dec
fldenv
inc
repz
inc
out
out
es
insl
test
lret
or
fsubl
dec
test
inc
lret
jp
sti
rcrl
hlt
cld
scas
sub
enter
xor
lret
adc
test
and
push
arpl
sub
arpl
xor
cmp
icebp
jg
cmp
scas
inc
push
test
push
sti
addb
out
test
pusha
repnz
insb
bnd
sub
scas
add
test
leave
mov
cmp
xchg
inc
std
cwtl
stc
mov
out
or
sbb
outsl
iret
lea
les
out
adc
leave
mov
pusha
cmpl
scas
test
and
popa
hlt
out
cmp
fwait
sbb
out
dec
repz
out
repz
and
and
push
repnz
jo
test
lret
push
and
fs
test
in
jnp
and
fcomp
in
mov
loope
and
insb
rol
js
ret
xchg
mov
pop
enter
cmpsl
pusha
mulb
call
les
jl
shll
les
loopne
imul
scas
in
ja
inc
jnp
and
je
mov
cld
daa
add
inc
mov
jecxz
bound
sbb
test
sub
sarl
and
cmp
inc
inc
insl
test
pop
mov
fs
insl
fldcw
jo
in
je
jl
in
orb
lret
dec
mov
sti
lods
in
mov
add
fisubrl
nop
mov
rol
cli
pushf
repz
jecxz
jl
int
leave
movsb
in
mov
mov
rcr
out
xchg
cmpsl
ret
in
fsubs
mov
pop
push
in
ficompl
mov
mov
inc
outsb
rclb
scas
pop
jae
in
call
push
jecxz
mov
data16
cld
lods
movsb
jp
and
rcrl
mov
or
cmp
inc
cld
cmp
inc
add
mov
out
push
gs
cld
call
push
rcll
add
push
dec
xchg
cld
out
lea
sahf
xchg
add
push
int3
cli
outsl
imul
fs
sti
jbe
test
sbb
pop
or
ret
das
xor
mov
cmp
arpl
dec
faddl
xor
dec
test
pop
sti
push
insb
dec
push
cmp
mov
cmp
je
push
pushl
push
loopne
add
aas
push
sbb
lret
negb
clc
mov
fbstp
push
loopne
pop
loopne
pushf
jbe
xchg
mov
pushf
jb
sbb
or
insb
in
jmp
int3
mov
ret
hlt
fnstenv
adc
les
movsb
push
lret
adc
or
push
test
jne
je
mov
xorl
cmp
sub
lock
inc
push
in
lret
sub
arpl
sbb
repz
cmp
jo
test
and
test
push
scas
gs
or
stos
adc
in
xchg
adc
xor
mov
in
adc
test
popf
gs
out
lods
add
dec
jae
fdivrs
pop
imulb
jb
push
mov
sbb
adc
or
into
dec
add
adc
out
rcrb
enter
adc
sahf
add
gs
std
aam
mov
mov
adc
gs
call
push
cli
inc
xchg
and
jl
cmp
or
or
imul
lods
adc
inc
xchg
mov
adc
fs
jnp
imulb
test
jmp
pushf
pop
or
in
mov
test
out
data16
dec
adc
jl
arpl
add
rolb
mov
push
xor
in
adc
leave
dec
fmull
int
adc
adc
lret
sahf
xor
dec
cli
nop
xor
test
sti
inc
xchg
push
mov
xchg
test
xchg
inc
test
xchg
dec
lock
aad
nop
bound
leave
xlat
orl
pop
mov
sbb
pop
inc
dec
arpl
cmp
ja
add
rcrl
or
sbb
sahf
lret
push
sub
jae
stos
fsubrs
push
mull
inc
loope
mov
jecxz
stos
sub
rcrl
fxch
call
imul
mov
shlb
pop
fwait
loopne
cmp
imul
xor
mov
rcrb
push
js
nop
rcrl
push
mov
fistps
or
inc
mov
movsl
mov
fistl
jo
push
sbb
mov
insb
scas
push
xchg
movsl
inc
and
cmp
sti
andb
dec
adc
cmpsl
dec
mov
inc
shl
test
cmp
push
cmp
adc
fcomps
int
jmp
divb
int3
ficoms
jle
addr16
adc
inc
push
jnp
movsl
insb
jmp
sbb
add
cmpw
and
pop
pusha
es
dec
sub
jae
push
adc
mov
push
out
jns
sbb
cmp
rorb
filds
sti
sub
test
jl
jg
leave
xchg
bound
pop
pop
cmpl
je
loop
jmp
sub
pop
mov
sub
mov
jg
push
push
outsl
std
mov
pop
mulb
jl
inc
cmp
addb
or
mov
push
jae
outsl
adc
push
cmp
dec
pop
add
inc
loopne
pop
cmp
add
or
mov
dec
fst
sbb
dec
cmp
outsl
sbb
rorb
mov
xchg
outsb
mov
hlt
int3
scas
jns
xchg
movsl
inc
std
stos
xor
cld
leave
dec
into
enter
jns
jno
mov
ja
int3
push
shrb
fldenv
sti
enter
mov
jbe
push
mov
cmpb
lahf
dec
cmp
in
loope
iret
mov
mov
mov
sbb
call
shlb
ret
mov
lds
dec
push
popa
enter
shr
mov
ret
out
adc
out
addr16
bound
aad
inc
cmp
repnz
and
call
inc
movsl
jae
cmp
imul
and
movsl
sbb
lea
stos
xchg
lock
mov
jmp
sub
dec
int
sub
bound
es
loope
pop
adc
ljmp
aam
outsb
and
add
daa
popa
pushf
fidivrl
fbld
pop
jmp
and
out
pop
lea
mov
mov
inc
sbb
sbb
test
movsl
adc
dec
add
leave
push
add
call
jnp
push
push
fldenv
int3
add
mov
loopne
leave
mov
fstps
cmp
pop
adc
pop
nop
pop
sub
xor
shlb
frstor
sarb
loop
enter
mov
popa
xor
int
adc
pop
mov
std
mov
ficoml
stc
stc
clc
stos
inc
mov
in
mov
das
cmp
sub
fdivs
rcrb
or
pop
rcrl
test
lret
jge
jecxz
jbe
or
dec
fsubl
add
push
sub
adc
sub
popa
movb
aaa
nop
cmp
pop
pop
sti
dec
mov
inc
repz
imul
sbb
paddw
mov
jecxz
addr16
mov
and
movsb
mov
test
sub
jle
test
mov
jle
and
mov
pop
mov
lcall
sbb
push
xchg
scas
pop
nop
es
rol
add
rcrb
jmp
inc
les
dec
mov
int
adc
imul
cmp
inc
cmp
add
aam
sbbl
pop
testb
subb
pop
cmpsl
iret
sbb
jmp
xchg
in
cmp
xor
lds
mov
hlt
mov
push
or
and
jmp
jg
cvtdq2ps
xchg
jle
jns
xchg
adc
push
pop
pop
cli
popf
enter
aaa
aas
mov
add
cld
in
call
inc
data16
add
add
inc
add
add
add
add
push
add
add
add
add
push
add
add
xor
add
push
add
add
dec
add
push
add
add
add
add
add
add
add
add
add
insb
add
add
imul
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
dec
add
pop
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
xor
add
add
cmp
add
add
add
add
add
add
add
xor
dec
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
jae
add
push
add
dec
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
insb
inc
push
add
add
add
je
inc
add
xor
jne
add
imul
add
add
add
add
cmp
add
add
add
add
add
data16
dec
add
insb
inc
add
add
add
add
add
dec
pop
add
add
add
cmp
inc
add
dec
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
dec
add
add
inc
add
jo
add
add
add
add
add
add
add
add
adc
adc
loope
clc
call
addr16
je
jg
fmull
pop
or
data16
test
fcoml
jb
imul
pop
cmp
jne
sti
in
outsb
cltd
je
push
or
leave
inc
jnp
fiaddl
xchg
pushf
jge
repz
jmp
and
cmp
jmp
inc
mov
mov
mov
pop
int3
add
jns
aas
rcrl
xchg
cmp
jmp
cmp
gs
iret
jg
sbb
loope
scas
shll
fldenv
push
mov
mov
cmp
lret
lcall
stos
jl
popa
pop
repnz
or
mov
ja
add
imull
fdivp
add
jmp
sub
fwait
add
rcr
test
jg
stos
or
scas
adc
mov
clc
dec
xchg
jae
hlt
sbb
jb
push
push
add
xchg
hlt
add
in
mov
out
loop
lret
or
loope
ljmp
mov
jns
pop
fucom
flds
adc
leave
push
loopne
or
add
mov
mov
call
fmul
dec
sub
jge
iret
gs
push
icebp
sarb
repz
fsubrl
xchg
and
pop
or
scas
push
xlat
mov
sbb
clc
mov
std
lret
stos
or
jge
dec
cmovno
mov
mov
cmpsl
sbb
push
jg
push
dec
push
ljmp
out
mov
push
sub
lret
fisubs
in
sbb
push
stc
and
movsl
fneni(8087
loopne
lret
dec
cltd
mov
sub
mov
leave
mov
xchg
push
and
aam
scas
rorl
data16
int3
daa
cmp
cwtl
xchg
int3
add
stos
into
jmp
test
cwtl
cmp
hlt
cwtl
cwtl
sbb
mov
lods
aad
arpl
xchg
lea
xchg
test
fdivrl
inc
mov
cwtl
push
push
aam
in
xchg
mov
mov
cltd
xchg
test
pop
jmp
inc
stc
je
add
dec
inc
icebp
sbb
push
adc
aam
sub
loopne
dec
and
or
lret
stos
dec
cmp
in
test
popf
imul
mov
bound
sub
push
mov
cli
add
mov
add
jmp
pop
shlb
mov
inc
iret
mov
push
mov
and
stos
xchg
jecxz
mov
js
movl
adc
add
xchg
addr16
pop
sahf
testl
sbb
mov
mov
scas
jecxz
or
ja
rorl
imul
imul
adc
out
out
mov
sub
xchg
cmpsb
outsl
int3
icebp
daa
sbb
sti
mov
call
inc
testl
pop
jne
stc
scas
and
mov
or
xchg
insl
iret
mov
test
enter
inc
je
inc
shlb
dec
sub
jp
bound
xchg
mov
add
cmp
jnp
int3
jbe
mov
sub
call
data16
adc
jecxz
loop
xchg
and
xchg
aam
in
scas
cmp
adc
out
in
fcomps
push
hlt
mov
lahf
sub
popf
cmc
mov
adc
xchg
pop
jg
imul
adc
cmpsl
sub
sbb
jne
sbb
inc
hlt
add
cmp
call
and
repz
and
in
outsb
jmp
inc
lcall
repnz
pop
pop
mov
into
pop
test
fwait
loop
call
and
lret
jo
jl
into
sar
sbb
pop
push
push
test
incl
addr16
call
ret
sbb
adc
jg
push
pushf
mov
imul
and
cmp
add
ret
fldenv
mov
popa
mov
cmp
inc
popf
loopne
mov
scas
outsl
lahf
lea
mov
aaa
rcrb
mov
test
out
or
sub
ja
sarb
mov
mov
int
loopne
cld
mov
sub
xchg
jg,pt
xlat
push
xor
lods
aam
movsl
and
icebp
pop
cwtl
pop
out
call
nop
insb
lods
mov
add
lahf
push
dec
cmp
subl
jmp
xor
xchg
arpl
mov
and
dec
adc
insl
lds
lret
xlat
out
jecxz
sbb
push
jbe
std
pop
sbb
push
xchg
out
inc
enter
loopne
sub
mov
push
mov
call
imul
xor
jbe
mov
xchg
into
mov
cltd
xorl
outsb
call
dec
and
cs
xchg
and
lds
sub
xorb
outsl
call
xlat
dec
scas
loopne
call
mov
ret
dec
jmp
outsl
stos
les
inc
loopne
cmp
imul
mov
loopne
orb
xchg
push
inc
or
leave
mov
aam
sub
movsb
lea
incl
jbe
jne
imul
jnp
ret
lea
jno
pop
pusha
xchg
aas
jl
cmpsb
or
and
add
add
jbe
or
jl
cmp
je
les
dec
dec
cs
xchg
outsb
call
mov
loopne
loop
loope
jecxz,pt
fldt
pop
out
clc
nop
ret
push
jg
mov
ret
mov
adc
call
mov
popa
mov
scas
and
cmp
push
sahf
icebp
mov
mov
and
les
addr16
dec
sbb
push
push
fs
xor
ret
fistl
xchg
nop
leave
les
lcall
stc
add
int
or
movsl
jmp
mov
loopne
clc
ljmp
test
lea
pushf
cli
inc
sbb
mov
or
mov
cmp
stc
jnp
adc
dec
push
dec
out
movsb
jno
xchg
jns
mov
pop
in
mov
imul
jmp
mov
jle
out
nop/reserved
fldcw
jne
push
mov
inc
fimull
loopne
je
arpl
call
push
aad
xchg
sub
aad
rcrb
arpl
inc
je
sub
sbb
mov
sbb
bound
mov
xor
andb
and
jl
scas
push
loope
inc
or
stc
inc
clc
in
mov
pop
cmp
in
lret
add
loop
addr16
cmp
mov
in
pop
jg
jmp
mov
mov
add
sbb
xor
add
push
pushf
pop
les
push
sbb
pop
jae
enter
inc
aam
fcomp
stos
test
jnp
dec
push
rorb
in
inc
fucomip
lret
inc
and
sar
adc
mov
mov
lea
mov
cmpsb
sbb
jp
sbb
push
rcrb
iret
rorb
stc
push
stos
jmp
push
push
xchg
mov
xchg
rclb
stos
push
aad
adc
mov
cmp
je
lea
loop
mov
call
push
mov
les
pop
push
pop
lcall
bound
jmp
arpl
xchg
vpsubsw
clc
fldz
add
leave
mov
outsb
lds
pop
pop
mulb
dec
aad
test
jle
xchg
scas
call
int3
push
lcall
inc
xchg
pusha
gs
sbb
out
pop
ss
pop
ret
enter
mov
fs
jo
jge
loopne
cmpsl
call
clc
dec
push
mov
xchg
dec
xor
mov
mov
sub
pop
sub
jb
call
mov
push
daa
add
xor
loop
mov
stc
mov
add
lods
adc
je
lret
lods
call
out
add
addr16
adc
xor
call
mov
jne
nop
lds
lea
loop
out
mov
loope
fs
insl
lahf
mov
addr16
or
nop
lds
jge
insl
xor
mov
js
or
stos
fiaddl
lret
and
pop
jns
orl
sub
xor
sub
push
in
dec
push
and
pop
aas
fs
mov
popa
sub
and
and
hlt
jg
add
sahf
adc
leave
mov
shl
scas
int3
sbb
pop
insl
push
loopne
push
call
fsub
jnp
adc
xchg
movsb
scas
shr
cmp
rorl
xor
sub
mov
in
neg
sbb
and
mov
in
dec
call
xchg
inc
rcr
test
dec
in
repnz
adc
jle
xor
std
jbe
adc
notl
push
hlt
lds
sbb
fwait
sti
outsl
push
and
mov
push
pusha
cld
mov
call
push
jmp
mov
mov
sub
je
cmpb
call
outsb
jmp
sbb
test
adc
test
mov
lods
ds
adc
adc
pop
mov
andl
jnp
or
push
fwait
and
jle
adc
mov
cmp
push
fisubl
push
xlat
and
jle
movups
xor
std
jge
pop
outsl
dec
and
jno
in
mov
dec
adc
std
mov
push
lds
mov
push
ret
test
pop
leave
push
add
push
inc
fsubrs
dec
inc
add
pop
xchg
jge
and
and
xchg
mov
dec
pushf
pop
xchg
ds
mov
cmp
jl
int3
ret
addl
mov
or
fnstsw
ret
mov
add
adc
mov
rcrl
cmc
jle
cmp
sbb
mov
add
pushl
jae
mov
push
sub
ret
lcall
pop
jnp
pop
sub
mov
xor
enter
insl
std
jge
cmpsl
dec
loopne
add
inc
mov
jecxz
cmp
je
test
nop
ja
or
gs
and
sbb
hlt
pop
mov
ret
inc
xor
xchg
mov
cltd
rcr
mov
pop
inc
or
ja
dec
into
call
fisttps
insb
xor
xchg
adcb
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
outsb
add
dec
add
add
add
add
add
add
ja
push
add
add
add
add
outsl
add
arpl
add
xor
inc
add
add
add
push
outsb
jns
add
add
add
add
inc
add
add
add
add
add
xor
add
bound
add
add
dec
add
aaa
add
add
add
inc
dec
add
add
add
add
add
add
js
add
inc
jno
cmp
add
add
add
add
add
add
add
push
add
js
add
add
add
add
dec
add
add
add
dec
push
add
popa
add
add
inc
aaa
add
add
insb
add
add
add
add
add
xor
add
add
add
add
add
add
add
pop
add
jbe
add
xor
add
add
add
xor
add
add
add
add
add
add
add
ja
add
add
add
add
inc
add
dec
add
add
add
add
inc
bound
add
jae
add
add
add
xor
add
ss
add
bound
add
add
push
add
add
add
add
add
add
add
push
add
add
imul
add
add
add
add
add
add
add
pop
xor
add
add
add
add
dec
add
ja
push
push
add
add
add
add
add
add
add
pop
add
bound
add
add
add
add
add
add
ret
push
call
and
mov
shlb
clc
cmpl
cmc
and
xor
aas
push
pop
push
mov
ficoms
jecxz
popf
xor
out
lret
xchg
out
push
popf
xchg
adc
xchg
decb
push
pop
test
jge
notb
subb
mov
mov
pop
rclb
cwtl
jecxz
pushf
mov
dec
popf
incb
adc
jo,pn
push
mov
jmp
dec
jnp
bound
sahf
or
out
and
inc
clc
outsl
fwait
inc
sbb
xchg
xchg
and
clc
or
test
adc
mov
mov
loope
bnd
scas
mov
mov
adc
sbb
or
outsl
push
fwait
ret
rolb
xlat
outsl
hlt
lcall
push
lea
leave
mov
lcall
mov
inc
or
cmp
sahf
out
inc
cmp
shrb
sysenter
lret
imul
aam
mov
lcall
imul
imul
push
call
cmp
mov
movsl
sbb
cli
inc
jns
lret
cltd
add
popa
cmp
inc
rclb
ds
aas
lods
in
call
and
mov
mov
or
jle
add
xor
cltd
mov
sub
mov
int3
stos
rclb
adc
xchg
adc
cmc
outsl
cmpsl
xchg
cmp
rclb
cld
mov
rorl
cmp
shll
mov
xchg
xchg
je
cmp
arpl
mov
bound
push
les
loopne
push
sbb
into
xchg
leave
cld
sub
leave
stos
clc
repz
xchg
out
jo
call
mov
imul
daa
sub
xchg
dec
enter
dec
or
jge
repz
jl
fstps
lret
lds
fisubrl
pop
dec
ret
fsubrl
daa
rolb
adc
inc
adc
hlt
add
pop
inc
loopne
arpl
loop
sti
mov
sub
mov
xor
pop
ss
push
push
jmp
out
pusha
mov
icebp
jne
clc
in
dec
push
outsl
add
scas
imul
xchg
fs
xchg
aad
ret
mov
jne
xchg
and
sbb
fisubs
gs
sahf
aaa
adc
stc
mov
dec
xchg
push
mov
and
cmc
into
stc
xchg
add
adc
daa
stc
call
je
push
xor
mov
adc
lods
xchg
pop
sbb
nop
sbb
and
jae
push
xchg
cli
jecxz
jbe
insb
testl
imull
dec
jg
dec
ret
ljmp
shlb
test
xchg
aaa
imul
mov
jecxz
or
mov
ds
aaa
popa
out
mov
mov
inc
js
and
movb
inc
sbb
in
xor
cmp
divb
enter
inc
sub
andb
cmovo
scas
sbb
push
dec
out
mov
sbb
insb
mov
xchg
cmc
push
dec
stc
jne
inc
int3
movsb
xchg
pop
jns
or
sbb
cli
cmp
inc
mov
mov
jae
adc
cmp
lods
ja
push
mov
add
sbb
std
jg
out
call
push
clc
iret
add
out
test
rorl
inc
adc
and
push
push
push
pusha
mov
aaa
or
repnz
cmp
imull
pop
jg
mov
mov
sbb
stc
fdivrs
mov
je
mov
push
jnp
dec
xchg
int
jne
mov
rol
leave
xchg
ret
and
in
cli
lret
scas
aam
fistl
rcl
inc
mov
xchg
out
movl
xchg
scas
daa
adc
cmp
or
ds
jbe
outsl
test
mov
sahf
add
cmp
scas
cmp
cwtl
fs
pop
sub
sbb
push
inc
pusha
into
nop
mov
add
jecxz
out
sbb
and
fistpl
out
dec
test
pushf
xchg
aad
orl
jle
jbe
sbbl
pop
adc
mov
xchg
imulb
popf
add
mov
xchg
movsl
add
push
icebp
push
add
push
mov
dec
xchg
jb
lods
jmp
mov
mov
adc
add
adcb
leave
lret
jno
test
cmp
sar
call
lods
sbb
pop
cmp
push
shr
ret
cltd
mov
lds
into
push
loopne
jge
test
mov
decb
sahf
mov
mull
fadds
into
xor
in
testb
jge
outsb
lret
js
test
push
push
mov
mov
cmp
jno
test
pop
lea
stos
leave
inc
push
je
xchg
mov
add
test
xor
cmp
cmp
lods
sub
pop
xchg
nop
mov
frstor
sti
or
push
out
adc
and
mov
subl
dec
dec
orl
or
push
mov
mov
add
clc
mov
pop
ret
add
gs
xchg
cltd
enter
popf
int3
mov
pop
test
not
popa
mov
stc
sub
xor
pop
inc
cmp
pop
ficompl
das
call
mov
lods
lock
adc
or
cmpsl
test
je
cld
jl
cmc
mov
add
push
push
push
call
in
out
mov
popf
cwtl
cmp
pop
fs
popf
xchg
adc
xor
jbe
stc
push
ljmp
jbe
xchg
rcrl
lods
mov
cmp
inc
push
add
js
jbe
mov
mov
push
mov
pop
add
pop
and
jnp
js,pn
adc
mov
daa
or
enter
pop
fwait
push
or
push
dec
scas
jecxz
mov
pop
into
sahf
sar
js
push
lcall
sub
jne
and
pop
xor
mov
in
push
dec
jecxz
cmpsl
dec
and
adc
loope
in
dec
inc
leave
mov
hlt
push
cli
pop
outsl
out
sub
sbb
outsb
sti
jae
pusha
fs
and
jge
cmp
mov
sbb
push
mov
es
shll
cmp
movsb
lret
jmp
jle
arpl
cli
push
jecxz
addr16
mov
inc
push
push
outsb
and
lret
push
orl
inc
mov
jbe
push
imul
dec
stc
push
mov
add
clc
push
push
mov
iret
int3
mov
pop
inc
jecxz
push
xchg
aam
gs
jo
dec
mov
rcrb
je
jnp
and
ret
pop
outsb
and
lods
arpl
mov
xor
insl
lea
gs
push
jmp
loop
leave
xchg
mov
lahf
push
dec
sahf
inc
aam
repz
and
inc
sbb
jecxz
test
movsl
push
shrl
cmp
in
aaa
and
cmp
jl
popl
out
cld
mov
push
outsl
xchg
and
popa
sub
jp
pop
xor
ljmp
das
cli
or
cmp
inc
into
arpl
xchg
and
out
mov
add
or
lret
leave
int3
in
or
xchg
jl
push
push
test
pop
push
or
imul
mov
xchg
and
in
stc
pop
inc
or
and
mov
mov
mov
dec
add
xor
xlat
stos
sub
arpl
and
adcl
inc
or
mov
nop
in
and
mulb
pop
mov
loope
into
mov
in
inc
data16
incb
sahf
mov
bound
push
ds
bound
xor
mov
push
mov
mov
repz
sub
adc
xor
je
mov
jns
int3
inc
pop
mov
jecxz
add
call
pushf
testl
push
call
inc
xchg
push
aam
mov
mov
fdivrs
xchg
dec
sahf
outsl
imul
dec
mov
dec
into
mov
pusha
sti
and
inc
leave
cmp
pop
out
repz
mov
ret
jp
fildll
insl
push
jmp
xchg
repnz
jmp
xor
icebp
fwait
push
sahf
mov
nop
cmpl
inc
or
call
mov
jecxz
jns
xchg
mov
mov
call
lods
jg
cli
inc
cmc
sti
inc
push
imul
mov
mov
mov
sbb
ja
mov
unpcklps
outsl
dec
mov
inc
adc
insb
cmp
jnp
scas
scas
lds
ja
xchg
mov
lods
adcl
mov
mov
mov
ret
jb
sub
es
outsl
dec
push
shufps
jmp
js
fdivrs
mov
inc
movsl
inc
push
mov
into
iret
xchg
pop
scas
outsl
mov
popa
rolb
jle
daa
xchg
jmp
leave
loopne
loop
adc
pusha
sbb
test
jb
iret
call
lock
adc
mov
or
jle
rolb
in
test
push
outsb
cmp
rorb
xor
xor
cld
adc
and
mov
clc
adc
call
pop
aaa
push
cmc
dec
test
stos
mov
dec
mov
outsl
cmc
fists
pop
cld
jnp
scas
lahf
pop
shlb
add
mov
outsl
mov
leave
sub
jg
mov
decl
or
or
sub
into
clc
add
and
cmp
mov
lods
bound
ret
push
xor
push
dec
xchg
enter
pop
sahf
dec
les
ss
into
ja
pop
dec
mov
pop
jmp
pop
call
rclb
pop
jecxz
fsubrl
sbb
pop
cmp
fisttpl
addb
lahf
stos
inc
pop
push
add
push
add
add
dec
add
add
add
insl
add
add
popa
add
insl
add
push
jno
push
add
dec
add
push
add
add
add
add
xor
push
add
outsl
push
add
imul
add
add
add
add
dec
jno
add
add
add
push
popa
add
add
add
push
add
add
add
jno
dec
add
xor
add
jbe
add
jo
add
jo
add
add
popa
jp
add
add
add
add
add
add
push
add
push
add
add
add
push
aaa
add
add
add
add
add
add
add
add
add
add
xor
jb
add
add
add
add
add
xor
add
add
jno
add
jns
add
popa
add
add
jae
add
outsb
inc
add
xor
add
add
add
dec
add
add
add
add
add
add
add
jne
add
add
dec
add
add
add
jns
add
add
push
add
add
add
add
add
add
add
js
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
inc
add
add
add
add
add
push
insl
add
inc
add
add
dec
add
add
dec
add
add
inc
add
add
add
pop
xor
add
je
add
add
add
add
add
dec
dec
add
push
add
add
add
dec
add
add
popa
add
push
push
add
add
add
add
add
jne
add
inc
add
lret
fcom
push
xor
sarl
sub
adc
inc
lahf
je
mov
mov
sbb
xchg
pop
mov
sbb
dec
push
pushl
mov
lock
pop
sahf
dec
adc
je
gs
std
mov
adc
add
popf
push
push
cmp
push
jmp
or
icebp
testb
push
scas
jecxz
jne
mov
lcall
jne
pop
cmp
fchs
fistpl
loope
mov
adc
add
mov
and
mov
data16
cmp
push
jp
adc
mov
sbb
arpl
ret
fdivs
clc
or
add
sbb
pop
test
or
sub
lea
ljmp
movl
fsubs
ret
sub
and
das
pop
rcrl
dec
adc
cmc
outsl
sbbl
mov
jle
or
cli
adc
add
ss
jns
mov
add
jbe
sbb
mov
shll
pop
push
std
xor
movsb
or
push
rcll
hlt
cld
push
mov
jbe
xchg
push
jg
jbe
push
or
jg
pop
xor
fwait
mov
fdivrl
bound
sub
call
cmp
push
rol
hlt
sub
insl
jge
or
inc
test
les
jmp
popf
fcompl
adc
and
ret
repz
dec
pop
scas
sub
xor
mov
mov
adc
fbstp
jle
clc
or
jne
push
inc
xor
adc
rcr
inc
jp
btc
hlt
cmpl
mov
lods
mov
xchg
es
cltd
aam
call
and
cmp
aam
push
jmp
setne
jnp
mov
mov
inc
and
subl
leave
jb
mov
popf
mov
int3
cwtl
daa
mov
add
popf
lock
lahf
xchg
cmp
outsb
push
push
popa
ja
insb
and
sub
push
mov
cmp
out
fwait
add
loopne
push
push
fwait
sti
js
lock
adc
ss
xor
sub
adc
lahf
push
cmp
sbbl
sbb
outsb
pusha
test
or
jb
xor
add
lds
pop
cs
hlt
movsb
mov
or
leave
cmp
xchg
rcrl
je
mov
cmpsb
inc
or
imul
and
test
sahf
push
mov
jo
pusha
mov
jl
pop
or
sbb
xorl
push
pop
xor
lock
out
in
adc
jmp
xchg
mov
mov
stc
insb
mov
call
and
inc
jno
lea
mov
mov
xchg
mov
inc
shlb
or
xor
outsl
insl
push
push
movsb
andb
into
and
arpl
and
cmp
pop
xchg
pop
sub
xor
jle
add
add
mov
dec
push
adc
mov
xor
push
fiaddl
xorl
xor
dec
push
mov
add
sar
push
ret
push
add
das
fcmovu
test
xchg
push
dec
add
xor
je
loope
sbb
mov
push
mov
aad
aam
int3
test
xchg
adc
and
sub
out
popa
movsb
push
rorl
addr16
fildll
push
stos
movsl
ss
sbb
push
jl
add
or
sti
negb
je
je
fiaddl
xchg
int
cld
mov
ja
push
inc
or
es
xchg
pop
jge
sub
cwtl
add
test
pusha
das
xor
jge
or
push
add
clc
push
adc
jmp
and
scas
jmp
test
cmc
dec
mov
insl
dec
push
sbb
jae
lcall
cmp
divb
or
je
cmpb
sub
sub
dec
mov
adc
mov
loopne
or
adc
cmp
lea
popf
ja
mov
push
cmp
test
rcll
call
xchg
pop
pop
adc
push
xor
xchg
dec
add
pushl
pop
jg
movd
adc
imul
dec
mov
adc
lea
inc
mov
fcomp
sbb
adc
dec
loopne
dec
pop
mov
inc
ss
mov
addr16
call
repz
push
movsl
push
inc
data16
stc
les
test
inc
mov
and
or
popl
adc
rorl
mov
cmp
add
mov
fwait
add
aaa
stc
xlat
adc
data16
or
inc
jp
add
inc
call
mov
fdivp
and
inc
ja
cmp
jo
je
sbb
mov
dec
cwtl
ret
lods
sub
sub
lahf
adcb
int3
xchg
cmove
rol
or
jmp
ss
mov
mov
jp
decb
sub
add
add
std
and
divb
dec
sbbb
fucomip
push
jmp
pushf
pop
aad
cmp
mov
aad
dec
xchg
imul
jns
push
mov
lcall
aad
dec
xchg
outsb
sub
or
and
ss
mov
dec
lods
xor
add
fcomps
ret
jl
dec
test
movsb
jge
push
adc
and
addr16
mov
rcll
mov
cmp
call
and
jns
push
adc
sbb
adc
mov
shr
mov
ret
mov
xchg
stos
fdivrl
push
call
in
pop
filds
ret
je
xchg
orl
shlb
jp
pop
jb
lcall
jle
adc
inc
std
xchg
dec
adc
dec
test
pop
int
and
mov
jecxz
mov
dec
dec
rcll
ss
adc
pushf
cmp
push
push
stos
dec
jecxz
pop
pop
sbb
jmp
mov
push
jmp
out
pop
ret
add
jne
stc
adc
pop
je
mov
xchg
pusha
in
inc
and
sub
pop
aad
test
lea
and
loop
push
ds
aas
jle
push
xor
sbb
jg
popf
sub
push
call
jp
dec
mov
roll
pop
mov
call
dec
hlt
cmp
pusha
or
jmp
mov
jl
test
jecxz
test
pop
dec
imul
or
stc
push
cmp
cmp
pop
add
inc
sahf
mov
mov
aaa
aad
jge
inc
inc
cmp
stc
adc
and
push
add
push
add
xor
bound
test
repz
sbb
mov
lahf
cli
push
add
sti
push
sbb
das
xchg
mov
cld
push
call
pop
mov
cmpl
ss
and
aaa
add
cmp
lcall
call
xchg
mov
jge
inc
xor
or
dec
iret
cmp
ljmp
sbb
call
out
mov
jle
sahf
mov
mov
out
mov
adc
clc
mov
std
fisttpl
add
pusha
add
cltd
clc
cmp
fdivrl
scas
jl
int
je
cmp
jl
pushf
test
push
inc
jne
push
sbb
inc
decl
repnz
mov
push
xor
out
or
clc
int3
and
pop
push
jl
xor
cmpsl
jge
xlat
js
dec
add
mov
popa
mov
lock
jmp
inc
xchg
cmp
cld
add
adc
gs
ss
incb
out
into
mov
lahf
divb
sbb
jno
xchg
sbb
and
insl
push
xchg
dec
sub
or
adc
sub
inc
mov
push
ja
mov
int3
mov
mov
adc
gs
xor
scas
push
lods
aad
jns
pushf
mov
inc
xchg
or
call
in
cmp
insb
jne
jmp
pushf
and
mov
cmpb
out
and
insb
sbb
pop
hlt
lahf
xchg
xchg
mov
jae
popa
pushf
mov
push
and
jns
mov
adc
push
mov
cmpsb
mov
cwtl
lock
test
push
adc
sbb
in
and
adc
dec
inc
loopne
jmp
in
aas
clc
jmp
rolb
inc
mov
push
push
mov
out
jmp
xlat
and
xor
mov
std
sahf
sub
pushf
mov
push
mov
nop
push
adc
cmpsb
inc
es
adc
pop
nop
mov
adc
xor
mov
negl
iret
or
dec
push
rcrb
lcall
inc
cltd
add
shlb
nop
adc
stos
icebp
cmpsl
mov
data16
mov
mov
adc
inc
loopne
popa
into
test
inc
in
aad
xchg
in
inc
add
add
add
imul
imul
jmp
sbb
mov
push
inc
pushf
lods
ljmp
mov
sahf
int3
mov
or
out
push
inc
push
add
add
pop
sub
pushf
mov
sub
es
ret
jle
sub
cmpsb
or
xor
in
mov
imul
sbb
push
mov
cmp
adc
ljmp
mov
cmp
sbb
pushf
inc
popf
push
in
push
es
nop
adc
push
pop
mov
sub
cmp
clc
or
insl
push
fisttps
push
hlt
test
ss
pop
dec
adc
jecxz
dec
icebp
das
test
mov
andl
cmp
cmp
jne
sbb
jb
mov
adc
add
ds
test
push
icebp
jmp
pusha
sub
movsl
xorl
nop
push
in
mov
movsl
aas
ret
ds
add
ds
or
mov
jle
xchg
into
cmp
cmp
cs
js
lds
in
ret
xchg
or
ja
call
js
iret
outsl
mov
lcall
int
stc
jg
jg
pop
imull
ljmp
in
cwtl
mov
jmp
jns
stc
jbe
in
ror
loope
jae
pop
bound
test
leave
jno
jge
mov
sbb
pop
notl
nop
sub
xchg
or
loopne
push
mov
idivb
xchg
sti
movsl
adc
fists
notl
int
test
sti
sbb
inc
bound
dec
std
fistpll
sbb
lret
lock
scas
imul
push
sub
lock
dec
xchg
mov
push
std
or
push
aam
test
sarb
push
repnz
adc
inc
aad
jno
aas
icebp
stos
ret
and
xor
out
fwait
jns
push
lods
jns
adc
ror
rcr
add
aad
pop
or
cld
icebp
mov
in
fisttps
scas
call
mov
gs
or
mov
das
xor
dec
pop
mov
adc
mov
movsl
mov
std
mov
sbb
push
outsb
imul
mov
movb
lds
mov
lds
push
xchg
cmpsb
or
push
das
mov
and
call
xchg
inc
and
jns
fs
call
cmp
cmpl
mov
scas
lea
sub
or
pop
jecxz
pop
aad
popa
push
xchg
push
sub
incl
shld
imul
cmp
lret
push
jbe
xor
and
loopne
sbb
fcmovbe
add
cmp
call
clc
inc
dec
mov
adc
repnz
push
lods
pop
ret
lock
push
pop
mov
icebp
xchg
mov
scas
stos
xchg
call
jp
mov
sub
std
pop
add
cmp
mov
xchg
iret
cli
pop
in
in
stos
xor
mov
mov
jmp
movsl
or
fwait
inc
enter
jae
pop
dec
sahf
pop
xchg
dec
add
push
sarl
mov
mov
cli
mov
or
mov
cmp
insl
test
sti
clc
adc
mov
stos
cmp
std
test
decl
mov
leave
or
mov
add
mov
shlb
rolb
mov
sub
clc
push
mov
dec
sbb
xor
jmp
add
out
sar
outsl
adc
xor
dec
shlb
jno
jbe
jg
jle
adc
jmp
cmp
sub
xchg
sbb
leave
out
mov
inc
adc
mov
cli
cmp
jne
lcall
pop
mov
dec
jae
fwait
dec
or
enter
movsl
sarb
dec
pop
scas
sub
fld
cmp
mov
xor
xchg
pop
repnz
dec
xor
pop
movsl
inc
pushf
js
add
adc
xchg
test
cltd
movsl
pop
sub
ret
por
jno
into
aaa
dec
and
push
rol
push
outsl
mov
mov
movsl
cmp
jecxz
scas
adc
push
mov
in
jo
sti
adc
dec
adc
call
cs
sbb
jns
fs
daa
dec
lret
jl
and
shl
jmp
push
jb
add
inc
es
adc
in
pop
leave
sarl
push
out
pop
cmpsl
inc
stos
rcrb
mov
in
lods
std
xchg
mov
int
inc
xchg
jno
jbe
pusha
xchg
imul
adc
lcall
mov
jg
mov
mov
sti
lcall
stos
shll
aaa
xchg
mov
fstpl
mov
xchg
hlt
call
out
pop
fwait
aam
push
push
sbbb
xchg
je
dec
jae
jbe
into
call
fwait
cli
rolb
test
arpl
stc
adc
lods
mov
mov
lahf
mov
movsl
into
addb
xchg
es
lret
inc
mov
mov
insl
arpl
data16
aam
sbbl
test
mov
or
push
test
mov
jmp
xor
xchg
je
dec
sbb
adc
ret
mov
testb
jg
leave
push
dec
leave
jae
ficoms
cmp
sbb
mov
add
xchg
arpl
scas
and
jnp
cmp
in
push
sti
inc
test
fisttpll
in
push
xchg
push
jge
fcompl
pop
mov
mov
mov
call
pop
jecxz
mov
jp
loopne
mov
test
repz
sub
clc
in
std
call
inc
push
ds
ljmp
orl
je
shlb
mov
cmpl
add
mov
pop
push
jmp
dec
cmp
dec
fsubrs
fsubl
hlt
mov
rorb
add
aaa
stc
scas
add
cli
rcrb
xor
sti
xor
mov
sbb
jge
jecxz
push
mov
cli
jne
clc
pop
mov
mov
xor
stc
hlt
stc
int
scas
addb
inc
mov
popa
dec
xchg
dec
mov
dec
dec
popa
cmpsb
dec
mov
mov
sub
fwait
jae
adc
je
jne
outsl
mov
add
daa
or
mov
adc
inc
andl
push
ljmp
cmpsl
je
jmp
lock
addr16
test
inc
pop
and
inc
mov
xor
mov
xor
pop
cmp
and
and
notl
jo
into
repnz
mov
cmp
jecxz
or
test
addr16
mov
sub
bound
shlb
push
mov
jbe
scas
int
lods
loope
jl
inc
daa
add
jp
push
jle
jb
shlb
sti
das
mov
enter
call
gs
inc
mov
addr16
xor
mov
jb
or
or
or
clc
sub
mov
sub
pop
mov
outsb
je
dec
or
inc
sbb
ljmp
mov
pusha
cmpsl
int3
push
roll
bound
jp
test
jbe
pop
adcb
or
loop
mov
jo
mov
shll
mov
and
dec
mov
and
inc
pop
call
callw
leave
out
push
cmpsb
shl
mov
int3
adc
repz
scas
push
mov
movsl
data16
call
mov
mov
sbb
loope
fisubl
pop
xor
push
sub
jg
addr16
imul
in
mov
jnp
and
adc
enter
fisubrl
mov
rorl
int
nop
mov
mov
fildll
push
cwtl
fsub
into
push
push
push
inc
test
fstpt
test
test
pop
mov
push
jo
dec
cli
mov
mov
pop
dec
scas
push
out
cmp
movsb
fidivrl
lods
mov
jge
sub
xor
aam
pushf
inc
mov
jo
dec
cmp
and
pop
dec
ja
ljmp
lret
icebp
insl
pop
add
jae
addr16
jnp
andb
sbb
sti
int3
call
iret
in
repnz
adc
or
sub
and
add
xchg
or
mov
popf
and
and
mov
xorl
out
sahf
fbstp
cmp
mov
jmp
push
int3
je
lods
push
mov
jecxz
add
cmp
cmp
and
push
fisttpl
push
jg
lods
or
pop
in
inc
loopne
push
and
pusha
push
sub
icebp
jb
jecxz
loope
dec
mov
pushl
call
mov
add
or
add
push
loopne
mov
inc
bound
mov
xor
sub
mov
cmp
mov
in
je
std
mov
ljmp
push
mov
sub
cmp
jne
mov
repnz
cmpsb
jge
lds
or
call
cld
decb
addl
leave
je
cmp
xchg
int
sbb
mov
xor
js
leave
jnp
mov
test
das
rcr
and
jb
int
fnstenv
das
xor
filds
test
jb
or
or
sub
outsb
mov
mov
das
nop
mov
mov
lods
push
clc
mov
lock
call
add
bound
fucomip
mov
jecxz
or
mov
xchg
push
outsb
sti
inc
push
or
cmpsl
push
call
adc
mov
int3
pop
lahf
stos
jno
sbb
push
gs
sahf
mov
mov
mul
test
push
fcmovne
cmc
mov
xchg
push
mov
cs
adc
ja
add
mov
push
scas
adc
jb
jmp
fmull
call
inc
xor
jecxz
mov
mov
push
enter
inc
sti
test
inc
cs
sbb
jl
xchg
mov
das
and
xchg
xor
jb
mov
mov
call
lret
ret
int3
std
push
or
lds
insb
xchg
cltd
jmp
mov
cmp
fsubrs
or
sub
push
dec
adc
or
xchg
movsb
push
sar
xchg
popa
imul
push
and
std
mov
jae
or
or
aad
mov
mov
lods
cmp
push
movsl
and
mov
xchg
scas
push
dec
mov
mov
test
mov
int3
ljmp
push
fcmovne
add
jmp
mov
movsb
shlb
insb
fxch
aam
lahf
xor
fwait
jo
call
pop
je
insb
add
bound
add
xor
add
jns
add
add
js
add
add
imul
add
add
aaa
add
inc
add
add
add
xor
add
add
add
add
aaa
add
add
add
add
add
inc
xor
add
push
push
add
jp
add
add
add
add
add
add
add
add
js
add
add
add
dec
add
add
add
outsl
dec
dec
add
push
add
add
add
add
add
inc
add
add
add
add
add
jb
add
add
add
add
outsl
add
inc
inc
jb
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
inc
add
add
add
add
add
add
dec
push
add
add
add
add
gs
add
add
push
outsl
add
push
add
push
add
data16
add
add
insl
add
inc
add
push
add
add
add
add
add
jno
push
add
add
push
imul
pop
add
add
push
add
add
data16
add
add
dec
push
add
je
add
add
add
add
add
add
add
dec
add
xor
add
add
jp
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
or
sahf
or
mov
inc
psubb
cld
add
loope
push
sarl
int
div
lcall
ljmp
inc
cmp
jecxz
dec
jp
leave
push
scas
pop
pop
bound
or
insl
mov
xor
ja
mov
rclb
lods
mov
sbb
loopne
notb
pop
mov
ret
ret
jle
sbb
jmp
test
xlat
sbb
sub
xor
cmp
negl
aas
add
imull
popa
add
mov
ret
xor
mov
mov
andb
xlat
test
paddusb
shlb
lock
sarl
push
or
stc
mov
das
mov
das
mov
push
add
pop
fdivr
inc
mov
add
mov
cwtl
sbb
jns
and
mov
jle
cmp
pushf
jecxz
movsb
cltd
cmp
lock
push
rcr
enter
mov
adc
lods
cld
cli
add
fs
and
cmp
inc
mov
push
negl
xchg
mov
and
mov
pop
data16
mov
daa
inc
xchg
shlb
icebp
xlat
repnz
shll
pop
add
inc
bound
repz
imul
add
ret
mov
jp
ret
aam
cmp
mov
fdivs
xchg
leave
test
neg
inc
je
add
add
ss
jne
shlb
mov
ljmp
xor
dec
jae
in
fs
outsl
mov
je
insb
lret
in
inc
je
push
jae
test
popa
jne
gs
dec
dec
or
addr16
adc
shr
enter
jae
outsl
outsb
imull
arpl
jne
ret
and
sti
aad
jb
arpl
push
shll
inc
stc
inc
xchg
jne
imull
and
inc
add
fnstsw
cmp
outsl
test
jne
dec
loop
imul
push
or
inc
push
jne
enter
mov
int
mov
and
int3
mov
shlb
mov
gs
xor
js
call
add
hlt
jne
ret
lret
pop
add
jae
jo
lahf
cli
sub
cmc
lahf
inc
aad
inc
imul
fidivs
sti
into
add
imul
push
jns
insb
mov
sub
jmp
les
in
loop
insb
dec
add
outsl
insl
in
inc
cwtl
sub
out
cmp
popa
test
dec
loop
insb
in
int
mov
pop
insl
decl
popa
push
xchg
inc
jbe
inc
adc
clc
dec
imul
xor
cmp
dec
fnstcw
jg
dec
lret
insb
incl
je
cmp
adc
iret
push
jns
xor
or
or
add
mov
add
test
loope
dec
inc
rclb
inc
dec
adc
xchg
add
xor
out
pop
sbb
test
jne
ss
in
in
lods
stos
dec
imul
outsl
ja
stos
testl
or
push
and
ret
jno
mov
dec
popa
icebp
dec
stc
insl
sti
arpl
or
jg,pn
outsl
insb
int3
sub
lret
push
push
gs
push
jo
insl
movl
lods
cmpsl
add
bnd
xchg
mov
int
call
pop
inc
xchg
pop
addr16
xor
fwait
repz
pop
iret
popa
jo
fstp
lahf
mov
dec
dec
outsb
repz
push
push
jnp
dec
icebp
clc
and
inc
dec
ret
pop
shlb
push
popa
push
dec
cmc
and
fdivrs
in
xor
das
ret
dec
push
sub
inc
iret
jge
ds
or
stc
xor
push
bound
jno
subl
mov
inc
inc
rclb
imul
idivl
mov
and
arpl
inc
inc
push
leave
push
cmpsb
maxps
cmp
lret
mov
test
push
adc
lea
insl
repnz
xor
jnp
push
inc
xchg
inc
fistpl
jg
add
sbb
inc
inc
dec
push
add
adc
aas
pop
imul
pop
pop
dec
push
sbb
aas
outsb
cmp
inc
mov
xor
repz
popa
int
aas
sub
lahf
enter
dec
pop
enter
push
movsb
test
iret
sub
pushw
in
push
insb
push
sbb
mov
fiadds
pop
hlt
adc
sbbl
lods
push
inc
fs
push
inc
outsb
stc
fs
cmp
cs
outsl
sbb
stos
pop
aas
jae
ja
mov
inc
and
mov
lods
pop
push
daa
push
pop
arpl
mov
gs
je
dec
lcall
clc
jne
shll
mov
push
dec
mov
fidivl
ss
call
les
rclb
inc
gs
cmp
xor
jecxz
lds
add
pop
cmp
gs
pusha
pop
add
lods
iret
mov
scas
add
out
aaa
shl
ss
rol
shrl
sbb
popf
inc
jle
mov
sub
pusha
imul
sbb
mov
arpl
je
mov
sub
inc
dec
jg
inc
jnp
aaa
aaa
jge
shrb
and
stc
add
insl
test
gs
cwtl
jg
int3
jns
shrb
jnp
push
mov
jp
rorl
push
fsubs
into
sbb
mov
nop
and
mov
frstor
pop
out
pushf
sub
inc
jg
mov
cmp
push
popf
insb
mov
lcall
mov
dec
andb
stc
ret
aad
jnp
push
mov
inc
cmpsl
test
addr16
cmc
dec
and
ja
cmp
sarl
add
push
push
adc
lret
lds
mov
xchg
or
pop
dec
jle
lcall
xchg
inc
pop
dec
repnz
lds
jns
push
loope
pop
subl
repz
popaw
arpl
xlat
leave
and
repz
mov
imul
mov
leave
testl
mov
mov
and
rep
or
cld
push
ret
stc
outsb
pop
sbb
loopne
cmp
inc
gs
push
jb
pushl
movsb
int3
adc
arpl
aam
es
lock
jp
aas
outsb
mov
and
mov
mov
xor
loopne
cmpsl
inc
or
jp
sahf
int
inc
inc
lret
mov
jb
lods
xchg
jg
adc
outsb
add
ljmp
xor
lret
add
fists
arpl
pop
or
js
inc
mov
push
adc
fmul
ret
das
js
pop
jo
ss
mov
jno
mov
int3
loop
mov
xor
cmp
cmpsb
jno
cmpsl
daa
or
xchg
icebp
out
arpl
in
movsb
ja
hlt
add
decl
mov
cs
gs
test
push
std
inc
leave
daa
xchg
cmp
xor
out
lods
flds
jl
push
mov
and
pop
movsl
repnz
sti
mov
rorl
test
cmp
xor
stc
roll
fwait
mov
outsb
out
mov
xchg
popa
push
mov
pushl
jo
jbe
xor
shll
out
fs
jae
stos
xchg
stc
push
push
sbb
lods
pop
popf
lds
lods
lcall
pop
sarl
dec
adc
stos
jo
sti
push
cmc
pop
int3
mov
inc
push
fisubrs
out
pop
sbb
xchg
adc
xchg
jb
jae
lock
lods
mov
jae
jne
lock
push
popf
sahf
fs
int
pushf
data16
adcl
ds
sbb
dec
in
subl
mov
mov
adc
insb
data16
pop
sarl
inc
dec
das
jmp
lahf
push
lret
push
int3
xor
xchg
dec
dec
out
inc
jae
mov
js
jle
pop
jo
jo
stos
loop
pop
add
xchg
mov
jb
fs
fisttpll
popa
sub
xchg
aas
negl
inc
out
adc
jne
fidivl
cli
loop
xchg
xor
sub
arpl
lcall
lods
scas
ljmp
mov
add
pop
scas
jp
jecxz
jp
sti
and
scas
fsubs
pop
push
cli
pop
pop
ljmp
jbe
add
stos
ss
aaa
arpl
insl
imul
shrb
push
or
sub
out
bound
xor
cmp
insb
fwait
sub
imul
adc
icebp
add
mov
iret
adc
rorb
mov
lret
pop
dec
ja
repnz
gs
sbb
out
test
mov
or
addl
push
and
pop
sbb
fisttpl
sub
jo
insb
daa
inc
arpl
bound
or
sub
arpl
dec
ja
jbe
xor
ja
sti
mov
ficoml
testl
jns
and
into
inc
sti
rcrl
inc
out
pop
lret
out
filds
xchg
into
stos
cmp
xor
jp
fnsave
loop
mov
decb
cmp
pop
pop
sti
stc
outsl
bound
aad
add
xor
mov
subl
stc
mov
push
ja
repz
lret
cmp
xchg
imul
cmc
cmp
ds
subb
dec
imul
aam
insb
iret
jb
loope
push
xor
ss
adc
cwtl
ds
cmp
xor
data16
es
xor
dec
clc
and
clc
pushf
je
lret
call
jmp
int3
scas
das
call
je
sti
or
xor
and
dec
jne
insb
and
or
xor
out
lret
dec
dec
push
push
push
push
inc
fwait
inc
cmp
aaa
pushl
xor
pop
aaa
mov
adc
and
jecxz
sbb
and
mov
aas
and
or
aam
mov
jp
cmp
jmp
stos
or
push
mov
mov
gs
sub
sbb
cmovbe
in
xor
pop
add
add
pop
add
add
add
push
add
add
add
js
jb
add
add
add
add
push
add
add
add
add
add
add
imul
add
add
add
add
add
insb
add
pop
add
jno
aaa
inc
add
outsb
add
add
add
push
add
add
add
inc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
dec
add
insl
add
add
add
add
add
add
outsl
add
push
add
add
add
js
add
cmp
push
add
add
add
add
outsb
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
cmp
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
dec
add
push
add
add
add
aaa
add
dec
add
inc
add
push
jno
add
insl
add
push
add
xor
add
add
add
add
add
jno
add
xor
add
push
add
add
add
add
add
add
xor
add
add
cmp
add
add
add
dec
add
add
dec
add
add
push
add
push
add
add
add
add
add
push
add
add
add
outsl
pusha
adc
mov
dec
push
push
aaa
dec
jno
aaa
mov
pusha
xlat
jns
push
add
lcall
jp
lret
add
dec
dec
push
mov
inc
and
in
inc
movb
add
xchg
lret
sub
xor
inc
and
rolb
push
jge,pt
pop
mov
leave
fs
loopne
call
fbstp
cli
mov
sti
inc
loope
jge
and
push
dec
mov
add
pminub
lret
push
sarb
inc
sub
std
cwtl
mov
insl
ror
jns
out
leave
jmp
sub
insb
sbb
add
addr16
jle
arpl
fdivrp
push
or
in
fwait
je
push
jo
adc
cmpl
or
jmp
test
sbb
jbe
mov
pop
adc
sbb
jne
xorb
mov
dec
jmp
aad
adc
ret
sub
push
add
test
mov
adc
and
push
dec
pop
call
imul
dec
aaa
nop
clc
cmpl
mov
lret
push
or
hlt
jae
je
repnz
ror
push
or
lods
adc
sub
aad
decl
in
dec
in
add
std
repnz
shll
call
enter
jne
ficoml
je
jge
mov
ret
cmp
pop
mov
or
cmp
sub
jbe
iret
shl
rcrl
movl
leave
and
jmp
imul
call
ret
jne
dec
dec
pop
jo
or
jno
lods
mov
jle
stc
inc
push
cmp
int3
mov
out
push
jecxz
or
dec
out
leave
mov
bswap
mov
sti
jns
ret
cmc
push
ljmp
mov
adc
mov
in
jp
sub
or
stc
ret
or
out
clc
add
lahf
adc
loopne
push
jecxz
clc
and
dec
pusha
add
out
icebp
stos
std
lret
mov
je
rorb
mov
inc
test
jecxz
cmp
jne
bound
rorl
outsl
lret
call
dec
push
call
dec
fistl
push
hlt
imul
and
adc
push
test
cli
cli
and
scas
add
js
iret
inc
lock
stos
or
dec
ss
out
and
sub
cld
in
and
jle
lcall
int
lret
push
sub
gs
pop
shl
in
mov
fimull
mov
inc
in
fisttps
test
or
scas
sub
cmp
fildll
int
in
loop
mov
dec
sti
sub
imul
stos
pushf
roll
loop
in
fstpl
and
pop
lods
pop
rol
bound
xlat
xchg
insl
push
out
fstpl
aam
cmpsl
cmp
mov
out
lea
scas
adc
lret
xchg
add
add
stc
enter
enter
and
cmpsl
dec
enter
lret
push
sub
repnz
inc
insl
jp
into
loop
aad
lret
push
scas
cmp
roll
dec
cld
hlt
mov
cld
cli
shl
add
outsl
adc
mov
loopne
addl
jno
jg
cmc
gs
test
mov
cmpb
and
iret
push
clc
lret
outsl
push
icebp
push
call
mov
ss
jg
mov
enter
pusha
lods
inc
imulb
and
mov
ljmp
outsb
sti
pop
outsl
pop
mov
inc
arpl
adc
fwait
insl
dec
mov
mov
sbb
iret
cmp
pop
je
pushl
jae
sbb
add
dec
lock
inc
mov
push
mov
int
mov
mov
enter
fwait
mov
outsb
std
inc
dec
arpl
aaa
jg
push
sub
sbb
cmp
push
fcmovne
push
clc
stc
stos
test
aaa
and
push
xor
adc
sub
lock
add
cmpsl
mov
push
dec
data16
fxam
mov
int
int3
cmp
inc
iret
cli
out
data16
lea
add
popa
jge
adc
fwait
sub
mov
mov
adc
clc
in
and
push
test
loope
sar
xor
xlat
push
mov
or
push
mov
or
dec
ja
jo
into
inc
out
jl
mov
jb
iret
repz
pop
clc
pushf
aas
dec
lcall
cmp
je
sub
iret
inc
inc
icebp
loope
stc
and
or
xchg
jnp
iret
stc
loopne
imul
cmc
cmp
out
dec
std
cmp
pop
and
call
cmp
jae
jae
lret
fisttps
pop
nop
movsl
cli
mov
std
add
and
dec
xchg
xchg
xor
ss
xchg
lea
and
notb
pop
scas
push
jno
ret
repz
pusha
and
test
fs
sti
js
inc
cltd
testl
roll
in
lock
ret
rorl
dec
int3
push
mov
xor
jle
mov
xchg
test
lock
test
lahf
cmpxchg
in
test
adc
cmp
imul
xor
inc
scas
xor
call
or
pusha
xchg
jbe
rorl
out
jp
sbb
dec
xchg
dec
add
aas
mov
sbb
mov
cmp
adcl
mov
jge
add
bswap
mov
into
mov
pop
idivb
lcall
pop
sub
ss
mov
pop
mov
push
mov
sbb
les
mov
dec
outsb
sub
test
pop
mov
push
pop
outsl
sub
adc
bound
negl
adc
xor
cmpsl
inc
or
xchg
fisubrs
outsl
scas
push
and
add
testl
or
jns
and
cmp
pop
movsl
into
jmp
pop
movsl
loop
ds
pop
pop
cmp
sub
dec
or
mov
push
pop
push
les
sti
mov
dec
and
ret
fidivl
or
into
pop
sub
cld
jns
jl
inc
mov
jmp
mov
jb
sti
ss
cmpb
bound
test
dec
mov
and
sub
inc
sti
push
jbe
dec
add
jecxz
lock
add
scas
test
mov
dec
in
shlb
adc
les
cmc
call
mov
pop
fidivs
pop
out
es
orb
add
shlb
jge
out
shr
mov
jb
sbb
mov
inc
add
jmp
sbb
cld
lea
push
or
sbb
fildll
aas
or
test
mov
xchg
mov
pop
pushf
ss
pop
mov
jbe
mov
std
add
into
inc
loop
inc
std
xchg
jbe
or
mov
je
testb
mov
test
test
mov
mov
jp
cli
sub
mov
pop
lret
xchg
mov
cmp
and
dec
jne
xor
dec
pop
jge
xor
and
test
cmp
add
adc
fld
test
and
pop
jne
fisubrl
sub
lahf
add
dec
inc
outsl
jl
push
jns
lret
sti
add
jne
mov
outsl
jl
xor
aaa
jbe
mov
or
add
notl
push
xor
aaa
jno
popf
subl
and
je
das
leave
je
aaa
push
arpl
push
ret
push
push
xchg
mov
shl
push
testl
sbb
sub
push
mov
dec
test
out
mov
push
ss
add
jmp
dec
inc
cmpl
popf
jl
pushf
cmpsl
fsubr
sub
daa
mov
out
fisttpl
sbb
les
je
sti
mov
mov
test
testl
mov
jmp
cmp
sahf
jae
or
lods
mov
imul
orb
cwtl
sub
or
jae
shl
push
movsb
fmuls
lock
sbbl
arpl
adc
cltd
add
stos
stos
or
mov
es
sbb
xchg
pop
mov
das
lret
sbbb
pop
xchg
movsb
mov
ret
cltd
xor
mov
into
sbb
mov
adc
popf
out
and
fstl
sbb
push
push
push
xor
mov
mov
jmp
jp
or
aad
adc
jb
mov
sub
pop
sbb
add
mov
dec
pop
insl
xor
jne
into
add
mov
push
pop
xchg
xchg
push
ljmp
xchg
out
add
push
addr16
jb
pop
mov
out
add
or
xchg
lcall
das
lahf
push
mov
iret
inc
push
in
loop
idivl
sbb
jmp
popf
lret
adc
sub
pop
sbb
clc
push
mov
push
push
call
push
xor
and
daa
push
pop
jl
push
mov
jl
cli
mov
push
hlt
das
or
lret
xchg
andb
and
mov
add
call
jge
shrb
int3
sub
sti
shll
je
mov
add
sbb
add
xchg
sti
ljmp
push
cmp
cmp
daa
jl
add
xlat
jle
pop
inc
cli
pop
sub
popa
int3
jp
pop
sub
je
sbb
cmp
cmp
inc
outsl
xchg
outsl
sar
lods
outsl
pop
movb
dec
mov
inc
lret
outsw
pop
lea
push
xor
add
sbb
jne
inc
adc
push
cmp
pushf
cpuid
cld
ss
cmpb
push
mov
scas
outsb
ficoms
imul
xchg
popa
mov
movb
lret
stc
lock
dec
testl
xor
mov
outsl
dec
jbe
inc
roll
lea
jnp
mov
sbbb
ja
std
jmp
scas
clc
push
das
in
sbb
cli
cmp
arpl
imul
jl
lret
cld
roll
cwtl
insb
movsl
push
add
pop
and
cmp
inc
pop
xchg
popa
out
add
add
clc
or
add
add
popf
jnp
cmp
sti
jne
out
pop
jmp
add
mov
pop
out
adc
popf
dec
gs
in
push
hlt
mov
sahf
xor
insb
mov
push
sbb
jmp
jnp
xor
or
outsb
inc
sbb
cld
cmp
sbb
inc
mov
iret
js
dec
adc
push
sub
repz
out
lea
mov
mov
faddl
adc
shrb
jmp
push
push
pusha
loope
and
sbb
leave
loope
scas
sub
sar
mov
sti
push
and
dec
add
enter
cltd
mov
fwait
gs
xorb
inc
lret
pop
fistps
das
jp
push
movsb
dec
mov
sub
jmp
jp
cmp
mov
cmc
jmp
je,pn
loope
or
push
lret
icebp
fldt
pop
dec
lahf
mov
sahf
test
jl
and
icebp
dec
lods
mov
int3
test
je
clc
inc
loop
int3
iret
icebp
mov
cli
jg
das
mov
aam
rcl
aam
enter
aam
sub
pop
shrl
outsb
pop
xor
shl
hlt
lods
sub
loopne
hlt
sti
or
int3
or
mov
cld
inc
cmp
decl
cld
mov
mov
or
stc
push
jns
mov
or
or
inc
dec
aas
shrl
into
jae
ja
loop
cmp
cmp
lret
sub
movsb
out
jmp
call
xor
mov
mov
cmp
jg
mov
lret
shl
dec
and
test
js
and
inc
xchg
sbb
add
jne
lock
movsl
adc
addb
and
pop
mov
jecxz
sub
mov
mov
lcall
or
cmp
loope
adcl
jne
dec
mov
or
pop
add
mov
hlt
jecxz
jne
wrmsr
dec
xchg
outsb
jmp
sub
pushf
ljmp
adc
stc
jl
jns
xchg
pop
cld
xor
call
loopne
jne
mov
mov
clc
dec
push
shl
sbb
outsl
xchg
cld
jmp
leave
jecxz
bound
movsl
xor
stos
std
pop
jecxz
lods
fldt
mov
sbb
mov
in
clc
pop
in
mov
mov
scas
pop
aad
addl
dec
in
lret
jecxz
scas
out
sub
js
mul
jge
lcall
push
push
dec
xchg
lods
loopne
fisttpll
pop
out
dec
jbe
mov
add
xor
lahf
cld
loop
scas
flds
rclb
iret
adc
inc
pusha
and
push
xor
out
adc
or
xchg
mov
add
call
xchg
lods
push
push
out
mov
jge
lods
push
iret
jnp
nop
ret
mov
add
loope
lret
and
mov
testl
push
fildl
cwtl
mov
add
sti
mov
mov
sbb
adcl
pop
push
leave
rolb
mov
dec
js
mov
sbb
loopne
sti
andb
repz
add
jbe
dec
push
adc
test
icebp
jl
in
jge
setne
nop
pop
nop
jg
loop
mov
jl
call
lea
push
les
dec
or
into
int3
scas
rep
mov
mov
pop
test
sbb
add
fsubs
or
jg
or
into
call
cmp
sbb
or
pop
xchg
mov
test
or
adc
xor
dec
in
outsb
mov
dec
arpl
stos
scas
leave
test
sti
jnp
pop
add
cli
dec
lods
jecxz
pop
and
fdivrs
inc
dec
mov
jl
adc
jp
mov
xchg
and
jmp
fwait
add
xor
or
or
int3
je
add
in
stc
pop
dec
int3
mov
fsubrp
lret
fimuls
lds
shrl
mov
stos
icebp
arpl
enter
xor
mov
or
loopne
fwait
out
jle
jo
lea
maxps
cwtl
sbb
in
dec
xlat
lahf
pop
movsb
adc
shll
rol
jmp
jmp
jae
loopne
fidivs
xchg
cmp
and
push
in
inc
or
data16
stos
adcb
sbb
mov
stos
xchg
dec
or
leave
cmp
or
ret
mov
sarl
xchg
inc
stc
mov
arpl
adc
mov
inc
lock
rcll
in
xor
sbb
or
xor
xor
lret
lret
mov
sbb
call
xchg
or
outsb
stos
cmp
je
sbb
add
loop
add
adc
addr16
nop
dec
ss
jo
dec
cmp
stos
jecxz
pop
xchg
lock
dec
xlat
cmp
movsb
cmp
push
pop
dec
icebp
push
add
out
fadds
lret
or
push
cmpsb
fwait
xor
push
dec
stc
jmp
mov
stos
jno
jp
lret
jno
push
bound
cmp
mov
xchg
xchg
or
jmp
cmp
cmp
xchg
ficoml
mov
sbb
jecxz
push
jmp
jb
por
enter
mov
cmp
je
imul
and
cmc
mov
push
push
cs
test
cvttps2pi
inc
add
jo
loope
cld
jbe
cmp
repz
inc
ljmp
loopne
mov
out
dec
xor
pusha
pop
daa
xchg
mov
stos
cltd
dec
sub
dec
test
ds
cmp
fdivrs
inc
int3
or
mov
jmp
lock
imul
sti
icebp
mov
mov
cmpsl
dec
xor
stos
in
stc
lret
and
mov
cli
jmp
adc
stos
cmovne
aad
xor
pop
xor
jbe
mov
inc
mov
jae
out
xchg
add
add
jne
dec
or
pop
ss
and
jne
test
in
rolb
cmp
mov
cmp
mov
sbb
mov
cmp
cmpsl
repz
jne
adc
and
lock
loop
cmp
addr16
mov
shld
pushf
jg
jae
aam
loop
pop
popa
imul
pop
call
and
and
xor
jb
xor
jmp
sub
jnp
repz
mov
dec
cmpsl
mov
mov
jnp
push
or
test
mov
lret
sub
arpl
insb
push
cmp
or
sbb
icebp
fmul
jge
mov
int
push
lods
je
push
mov
mov
mov
xor
fildl
stos
rolb
outsb
cltd
aad
ret
fwait
inc
xchg
aaa
dec
adc
mov
jp
das
movsb
mov
lret
lret
das
cli
test
xlat
fnstsw
jl
jmp
or
xor
test
cld
pop
test
or
cmp
xchg
and
xor
mov
xor
add
add
imul
lcall
xlat
xchg
and
or
and
mov
push
jne
dec
sarb
push
fbstp
stos
inc
sarl
lock
mov
adc
das
mov
push
mov
rcrl
push
mov
in
pop
mov
enter
pop
xchg
pop
inc
inc
test
test
test
dec
adc
test
das
xchg
push
int3
data16
mov
add
pop
or
loopne
adc
push
push
aaa
setb
ret
test
mov
push
loop
jg
jmp
mov
jmp
xor
aad
add
je
cmp
mov
cmp
sub
mov
notb
stos
adc
push
xor
aam
stc
js
mov
loopne
inc
add
xchg
or
ret
andb
xlat
cs
cmp
add
mov
divl
call
xorb
mov
not
push
stc
push
mov
inc
mov
icebp
jne
xchg
sahf
sbb
sub
push
call
or
inc
les
movl
jne
sub
cmp
mov
popa
push
mov
mov
push
loop
test
je
and
mov
jle
shrl
mov
fmuls
out
or
sti
pop
ror
cld
dec
or
or
push
inc
call
lods
loopne
hlt
je
mov
xchg
test
push
jg
mov
std
add
mov
push
jo
iret
xor
xchg
scas
lret
inc
or
jmp
add
data16
add
stos
je
lea
add
lahf
and
fcmovbe
cmpl
ds
pop
es
cmpsb
pop
pusha
adc
rcr
test
and
jl
or
mov
mov
outsl
push
lahf
leave
mov
das
mov
mov
shld
fstpl
iret
cmpsb
lahf
jmp
mov
inc
nop
out
add
sahf
test
repnz
cmp
adc
add
mov
rcll
sahf
outsb
mov
add
add
jp
lahf
je
lret
popf
into
cwtl
je
lret
or
pushf
sbb
int3
test
dec
add
aam
add
sub
fldenv
lds
add
movsb
inc
adc
or
in
mov
fldenv
in
pop
and
lret
cmc
outsb
lcall
fnstenv
stos
xchg
bound
adc
addr16
imul
jecxz
iret
call
scas
stos
mov
add
test
add
aas
add
or
jb
stos
sbb
sbb
js
out
add
dec
in
shl
xor
jmp
xor
jae
cmpb
in
xchg
int
test
lods
xchg
push
mov
or
int
jne
call
xchg
loop
push
pop
mov
mov
or
add
jo
ja
add
mov
or
mov
fsubrs
lret
in
call
xor
insl
fsubrl
mov
or
add
add
fcmove
xchg
sbb
pushf
mov
pusha
out
pop
clc
pop
jne
or
nop
clc
stc
ret
push
and
inc
add
insb
fadds
mov
neg
sbb
and
cmp
repz
je
mov
push
lea
mov
out
jle
repz
and
or
hlt
adc
sbb
mov
add
inc
in
neg
sbb
and
bnd
pop
adc
mov
ss
mov
scas
icebp
out
scas
inc
sbb
gs
in
jns
inc
outsl
mov
dec
aas
pop
xorl
pop
int3
push
das
cltd
cmp
fyl2x
and
loope
xor
je
lea
push
data16
enter
pop
mov
jns
dec
sarl
xchg
mov
daa
xlat
js
push
push
pop
mov
inc
repz
pop
xchg
popa
mov
jne
dec
pop
xchg
pop
xor
xor
xchg
jecxz
fisubs
sbb
inc
sub
shrl
int
mov
flds
jns
add
scas
cmc
push
bound
sarl
test
push
xchg
cmpsl
add
push
ss
xchg
mov
adc
mov
mov
std
dec
add
call
popf
xchg
test
jl
stos
push
mov
in
mov
mov
test
movsb
leave
inc
pop
outsl
ret
push
push
inc
cmp
shlb
jbe
add
jns
pop
out
std
sarl
jb
push
call
scas
pop
mov
push
add
rcrb
cmp
push
adc
shlb
or
popa
je
lds
or
aam
fdivs
hlt
pop
push
imul
jp
mov
lret
pop
in
clc
xchg
push
pop
not
les
push
sbb
and
call
jmp
push
inc
popf
lods
cmpsl
mov
pop
dec
and
jbe
sub
cwtl
pop
xor
sub
leave
xor
mov
sti
mov
fwait
minps
loope
push
push
xor
adc
stos
push
call
pop
mov
mov
xchg
hlt
out
je
cmp
dec
mov
fldcw
ss
std
pop
mov
jo
push
cmp
xchg
jp
sbb
push
adc
push
jbe
arpl
xchg
lock
adc
adc
clc
jo
fdivrs
test
xchg
dec
ret
xchg
jmp
push
ret
lds
push
gs
and
push
dec
inc
stc
sbb
stos
lret
add
jecxz
ds
jl
out
arpl
inc
in
enter
int
xchg
iret
int
push
mov
add
je
ret
shlb
pop
outsb
arpl
mov
xor
popa
jmp
repnz
in
ljmp
and
inc
mov
jge
add
test
dec
ja
insl
scas
ja
out
sbb
sub
inc
pushl
dec
xchg
lret
cli
mov
insl
notl
ljmp
stos
add
mov
insl
fdivrs
cmp
sub
push
call
xor
sbb
aad
sbb
pushf
cwtl
test
cmp
cmp
lods
ret
mov
aad
jp
pop
lds
outsb
loopne
lock
arpl
xchg
cmp
or
dec
in
lcall
ds
mov
cmp
dec
pop
aaa
dec
mov
mov
cmpsl
lock
mov
divb
mov
out
flds
push
dec
inc
rorb
jmp
test
test
lahf
cmp
test
add
inc
aaa
jle
ss
jecxz
inc
adc
iret
into
cmp
test
mov
or
mov
adc
or
pop
cmp
out
mov
pop
mov
mov
jns
xlat
xor
pop
sub
inc
mov
inc
stc
and
jecxz
cmp
jns
repz
cmp
mov
mov
loop
scas
jp
sti
mov
xlat
cmp
enter
jns
idiv
adc
pop
enter
sbb
sub
xchg
incb
in
xor
div
pop
aam
add
mov
loope
repnz
pusha
cmp
xlat
cmp
daa
test
xchg
mov
jle
push
sub
add
ret
scas
lods
aaa
lret
pop
dec
fwait
sub
das
scas
cmp
inc
push
cmp
les
and
inc
int
mov
jne
test
int
add
pop
jns
sub
fsubrs
inc
cmp
sti
mov
ret
outsl
lods
cmp
mov
mov
or
push
imul
je
adc
repz
test
pop
mov
sub
xchg
fcomip
jnp
mov
pop
std
push
movsl
stc
int
repz
jecxz
cwtl
bound
loopne
or
in
adc
dec
aaa
sub
cmp
adc
cmp
ss
sub
xor
adc
outsb
iret
shl
inc
add
xor
outsb
dec
dec
es
mov
xor
aaa
hlt
pop
lret
outsb
test
pushf
push
pop
clc
push
mov
ror
or
stos
sbb
sahf
or
jbe
xorl
lods
mov
sbb
add
sar
push
std
pop
adc
ds
sub
inc
xchg
and
push
sub
inc
in
or
jmp
sti
pushf
inc
and
idiv
test
outsl
push
xchg
loope
aaa
sti
xor
xchg
cmp
cwtl
mov
push
fstps
inc
test
popf
add
std
fstps
popa
xor
das
dec
aaa
test
sbb
add
arpl
mov
outsb
xor
cwtl
mov
out
cmp
mov
test
in
leave
aad
jns
mov
pop
jg
sti
test
sbb
jne
leave
mov
mov
push
test
fwait
pop
xor
jecxz
ss
xor
jnp
pop
je
jns
xchg
mov
call
cmp
jmp
shr
pop
ret
xchg
das
adc
lcall
ss
or
sti
and
pop
xor
outsl
cmp
xchg
sti
ja
dec
faddl
mov
mov
adc
aas
push
test
rclb
push
fdivrl
cmp
mov
push
mov
jnp
popa
mov
lds
sbb
mov
inc
std
fsubp
add
fsubs
sbbb
or
pop
outsl
clc
or
data16
fnsave
sub
mov
xor
shrl
gs
cli
push
xor
sub
stos
xor
sbb
and
pop
test
rorl
or
add
push
add
out
iret
neg
lret
mov
mov
fisubl
aaa
cld
bound
xchg
mov
test
xchg
adcl
in
xor
arpl
repz
data16
sub
xor
dec
out
enter
sub
fdivl
test
scas
or
sub
xor
push
or
mul
mov
jmp
lds
pop
cmp
push
rcll
in
add
lcall
aaa
cmp
cs
jle
lods
decb
enter
xorl
dec
cs
adc
ljmp
mov
or
sub
pop
mov
out
jmp
push
add
or
pop
cmp
dec
mov
adc
fistpll
out
cmp
adc
iret
dec
add
pop
mov
push
mov
iret
sbb
mov
icebp
idivb
push
jne
jns
arpl
jle
fs
jmp
clc
rclb
ja
dec
sub
loope
jp
xchg
lods
dec
mov
lods
das
gs
test
orl
movsb
push
or
add
mov
add
cmp
outsb
push
cmp
inc
cmp
sti
nop
jge
mov
xchg
mov
adc
mov
rol
lock
sub
inc
enter
pop
cmp
cli
or
and
shl
std
divl
dec
cmp
cmp
mov
movsb
imul
mov
iret
push
mov
adc
mov
out
test
dec
xchg
sub
lods
pop
insb
cmp
je
iret
jp
and
rcll
lahf
jmp
frstor
xchg
test
sub
and
and
jne
pop
xchg
dec
jnp
and
jne
xchg
dec
inc
xor
aad
rcrl
inc
shll
jb
aas
lret
dec
or
add
test
jns
sbb
fsub
lret
ljmp
push
sbb
push
inc
loopne
enter
pop
mov
mov
adc
cmpsb
push
lds
jbe
mov
inc
ret
rolb
mov
fistps
and
sbb
fwait
sub
hlt
pop
jns
push
clc
pop
jns
pop
lea
push
aam
sbb
lea
inc
orb
mov
bound
rorl
out
inc
je
das
xchg
aaa
pop
daa
sbb
mov
in
push
call
push
dec
imulb
sub
jge
jne
sarb
fld
out
sbb
in
xchg
xchg
scas
out
xchg
jmp
fsts
in
in
and
imul
imul
add
jne
rorl
jns
mov
xor
les
les
cmpsb
clc
mov
adc
cmpsb
or
mov
jno
mov
pop
adc
push
in
sarb
adc
inc
jae
lret
jne
push
leave
aaa
jle
int
sub
leave
sub
clc
mov
push
sbb
jb
pop
jge
add
push
jmp
pop
cmpl
mulb
jnp
xchg
mov
mov
mov
aam
dec
or
lods
int
jne
pop
jl
add
mov
pushl
mov
fsubrl
enter
je
rcr
jne
call
xor
fwait
cs
mov
popa
cmpsl
cmp
mov
test
sub
sar
xchg
add
dec
mov
add
sti
shll
inc
clc
pop
add
mov
mov
sbb
add
stc
sub
and
jmp
adc
adc
jle
inc
cwtl
ret
mov
add
jmp
gs
adc
cli
adc
shl
rcr
dec
xchg
in
and
cli
fsub
das
xlat
mov
mov
jp
add
jmp
cmpsl
sbb
arpl
sti
sub
mov
push
add
mov
imul
add
fwait
push
mov
xorl
enter
xor
mov
jmp
sub
shl
fprem1
and
mov
mov
ss
mov
es
clc
loopne
mov
mov
mov
dec
jb
das
test
inc
sub
sbb
jmp
jp
mov
gs
or
add
jmp
jnp
call
cli
std
mov
mov
or
jp
in
add
mov
pop
adc
push
scas
add
dec
cli
loope
clc
xchg
or
call
cmp
adc
pop
icebp
jmp
ficoml
icebp
lret
jb
sub
mov
mov
ret
pop
insb
popa
xor
lahf
imul
mov
lds
lods
test
or
mov
jb
in
call
jl
fdivrs
mov
mov
add
cltd
movsl
and
outsl
mov
js
xor
and
hlt
jb
in
cld
js
push
dec
xchg
icebp
call
in
mov
cmp
test
in
test
pop
das
mov
and
imulb
sub
sbb
push
mov
mov
test
sub
popf
subb
mov
dec
or
mov
arpl
or
xor
pop
mov
pop
xchg
jp
xor
adc
sub
popf
into
adc
jne
outsl
mov
inc
arpl
sti
nop
add
frstor
add
pop
fmuls
mov
add
xorl
pop
daa
push
sbb
jnp
lods
pop
jmp
mov
xchg
jmp
test
cmp
push
push
mov
test
je
mov
jae
mov
mov
loopne
sbb
test
mov
lahf
aam
cmp
test
add
xchg
sub
and
ss
jbe
mov
ja
in
push
mov
mov
add
add
xchg
lcall
das
adc
mov
sub
jnp
push
add
or
and
jl
fimuls
je
or
or
adc
lret
orb
ds
lods
xor
popa
or
test
leave
dec
pop
fdecstp
xor
mov
mov
jae
lods
inc
test
pop
push
mov
mov
adc
cmp
add
mov
xchg
or
ffree
jmp
mov
sbbl
iret
mov
sti
sub
mov
adc
mov
mov
and
mov
mov
into
sub
out
incl
sub
add
mov
call
xor
xor
outsl
lods
in
ds
add
lock
stc
or
fldl2t
xchg
sbb
jp
push
inc
add
fst
mov
test
pop
out
movsl
or
cwtl
mov
insb
or
and
mov
cwtl
ja
insl
pop
scas
jg
iret
popa
adc
xchg
es
jno
cli
sti
fildll
cli
mov
mov
je
js
bnd
mov
in
cmp
hlt
inc
xor
lods
or
xor
inc
sub
push
mov
add
movsb
sub
inc
or
daa
loopne
in
leave
addr16
lret
sbb
pop
mov
adc
pop
cmpl
dec
les
dec
les
dec
or
call
cmp
xor
lea
call
mov
scas
into
sbb
xchg
je
je
mov
fisttpl
dec
xchg
cwtl
clc
test
adc
inc
pop
push
dec
mov
negl
cmpsb
cmpsb
leave
out
pop
adc
out
jne
jns
adc
inc
and
popf
dec
jl
fs
int3
call
and
push
cmc
shlb
mov
jg
mov
mov
inc
repz
jle
sub
mov
xchg
aam
mov
adc
xchg
sub
or
pop
cmpsl
jbe
xlat
add
pminsw
enter
add
int3
push
icebp
sub
cmp
sbb
das
movsl
dec
mov
add
fcmovu
hlt
jbe
pop
cmp
add
adc
or
call
aam
fbstp
dec
bound
orl
jmp
mov
push
mov
fcoml
jle
push
inc
das
or
mov
mov
mov
pop
dec
add
clc
adc
popa
xor
nop
and
idivl
jo
popa
out
call
ja
ja
mov
shll
inc
test
cwtl
pop
fdivs
ret
cmp
out
lret
stos
clc
pop
outsb
fcoml
lret
je
rcrb
into
push
jge
pop
std
push
jl
xchg
adc
mov
mov
or
mov
pop
jne
imul
pop
cmp
out
adc
std
leave
push
out
add
cmp
push
cmp
xor
mov
leave
jne
pop
sti
sbb
cmpsl
cmp
push
outsb
loop
lock
popa
cmp
stc
add
fdivrl
pusha
orb
in
gs
or
adc
push
push
faddp
push
xchg
movsb
push
cld
loopne
mov
and
shll
nop
mov
inc
or
fildll
arpl
jne
fidivrl
lock
movb
dec
int3
pop
outsl
pop
push
jbe
cld
pop
inc
xchg
xchg
hlt
lret
xchg
in
jae
mov
push
aad
pop
cmpsl
and
mov
ret
ss
outsl
dec
popa
dec
jecxz
dec
cli
or
outsl
mov
mov
cli
inc
cmpl
jge
dec
in
and
or
fucom
cld
mov
lret
mov
mov
mov
sub
lods
fnstsw
test
aad
sub
push
or
mov
push
push
push
movsb
jne
pop
jl
push
ret
push
or
call
pushf
push
cmp
sub
cmp
stc
inc
sti
mov
test
movsb
or
mov
js
iret
jmp
test
daa
int3
andl
sahf
les
popf
jb
push
daa
arpl
and
data16
movl
arpl
jne
mov
fwait
or
ja
repnz
add
adc
loop
and
es
dec
push
cli
dec
mov
cli
xor
sub
cmpb
adc
cltd
out
outsb
push
movsl
jb
or
push
icebp
or
and
repz
sub
in
pop
adc
call
out
pop
fadds
aam
cld
sub
adc
sub
lea
inc
push
pusha
sub
jne
add
je
and
call
bound
push
repnz
mov
xchg
sbb
xchg
adc
xor
sti
jge
push
lock
addl
add
ss
pop
mov
fidivrs
push
popa
xchg
cli
sti
fiaddl
ds
popa
mov
adc
enter
sbb
int
mov
add
xor
repz
sub
push
lret
dec
fwait
or
adc
push
into
call
push
fcomps
into
push
xor
call
mov
stos
dec
pushl
out
adc
xchg
cmp
je
xchg
pop
xorl
cmp
sbb
iret
pop
push
xor
xchg
decl
movsb
jnp
add
add
xchg
push
cmpsl
in
das
jl
adc
lock
lret
pop
jnp
push
adc
lahf
sti
xchg
aad
pop
mov
pop
inc
add
and
dec
xchg
lret
sahf
adc
cli
cld
roll
inc
cli
and
push
in
test
mov
testl
test
sbb
lret
push
leave
push
pop
icebp
in
xchg
inc
cli
pop
popf
enter
and
pop
sub
xchg
pop
or
push
xor
scas
sbb
data16
imulb
sahf
xchg
out
push
inc
and
cmp
ret
mov
cmp
push
outsl
mov
imul
pop
fcmovb
test
scas
int
pop
push
pop
dec
jg
notb
dec
outsb
loopne
je
in
xor
xor
data16
enter
lret
jp
mov
xlat
std
les
pusha
mov
test
mov
push
or
mov
xchg
sub
adc
sub
dec
mov
mov
lods
mov
cmp
jp
mov
sarb
mov
jae
or
push
and
enter
add
lock
xchg
out
push
cmp
mov
pop
pop
lds
negl
aaa
shrb
push
call
popa
pushf
test
inc
pop
dec
je
push
scas
jmp
mov
push
test
push
rcr
stc
notb
int3
les
mov
icebp
dec
iret
insb
fmul
stc
aas
inc
mov
push
in
fs
gs
fdivrl
pop
jge
jbe
ret
imul
testb
jp
and
push
sbb
jne
jl
dec
hlt
mov
mov
inc
mov
push
aad
fnstcw
test
lods
out
lret
mov
mov
xchg
loope
andl
adc
mov
pop
int
js
iret
call
dec
mov
mov
aam
fsubs
fidivrs
or
jbe
cmpl
stos
mov
ud2
xchg
inc
fdivr
cmp
adc
xor
xchg
mov
add
ljmp
ret
lea
imul
mov
loop
stos
out
mov
roll
cmp
pop
ret
dec
lods
jl
adc
jge
fistl
cmpsl
add
jno
mov
xor
jmp
bound
add
mov
pusha
mov
mov
mov
inc
fs
pop
jno
sbb
push
mov
cmp
add
lods
cmp
jp
mov
mov
push
mov
fstl
cmpsb
jl
ljmp
xchg
mov
push
movsl
push
js
outsb
or
dec
push
loop
and
cmp
cmp
jae
int
aam
cli
test
adc
jmp
cs
pop
mov
mov
adc
popa
sub
je
sbb
sub
data16
bound
push
frstor
sti
cmpsb
mov
xchg
mov
aad
xchg
inc
gs
dec
jp
test
xor
cmp
pop
inc
cmp
add
push
sti
mov
xor
decl
jne
or
xor
aad
in
sti
popf
pop
push
stos
cmp
ret
movsb
in
mov
movsb
add
sbb
gs
jp
and
xchg
pop
push
jecxz
bound
sbb
je
lcall
inc
cwtl
xchg
mov
les
mov
cmp
adc
scas
inc
aad
sbb
loope
out
aad
cmpsl
mov
push
or
pop
dec
sub
jp
in
gs
pop
mov
shr
shll
mov
or
loopne
mov
ds
pop
push
lods
pop
into
and
xchg
mov
fisubs
xor
rol
dec
fdivs
js
xchg
or
fs
add
mov
push
lcall
and
add
add
or
mov
mov
push
pop
adc
leave
lea
fbstp
mov
add
inc
pushf
mov
push
sub
test
sub
popf
lret
iret
popa
jno
jge
mov
pop
lods
loopne
mov
fs
or
cmp
inc
jl
cld
int
sti
je
jl
bound
scas
pop
dec
xchg
scas
or
lahf
add
mull
in
lret
xor
idiv
into
jle
jb
and
pop
cld
pop
push
pop
inc
push
bound
pop
mov
adc
inc
call
dec
add
and
loop
scas
bound
xchg
push
dec
std
cltd
loop
add
mov
dec
push
iret
sbb
loopne
sbb
add
dec
push
ret
imul
fiadds
insb
jge
push
jne
out
cltd
test
dec
cmp
mov
sbb
mov
lods
pop
inc
sub
push
cmp
js
imul
pusha
jl
jecxz
pusha
xor
jg
popa
jge
mov
sub
mov
scas
pusha
push
incb
pop
xchg
push
dec
cmpb
hlt
ficomps
loop
pop
mov
add
fcoms
notb
mov
jbe
scas
lock
add
iret
mov
xor
lret
add
hlt
mov
xor
cmp
lret
pusha
mov
fwait
inc
ret
jnp
lahf
movlps
sbb
aas
pusha
or
negl
into
mov
fidivrs
loop
pop
push
neg
cmp
mov
push
leave
insb
das
mov
addr16
mov
ret
inc
call
xlat
stos
shlb
pop
mov
cmp
xor
call
das
addr16
aad
andb
cwtl
jge
mov
mov
xchg
mov
push
mov
outsl
dec
pop
ret
mov
mov
fistpll
ret
out
std
mov
cmp
jb
adc
in
gs
test
incl
or
xor
out
arpl
push
pop
adc
icebp
pop
xchg
sbb
outsb
xor
xor
pop
jo
sub
xor
lea
xor
jne
loopne
ja
pop
fcompl
add
or
inc
std
test
jmp
mov
mov
jle
push
adc
cmp
jb
cltd
or
dec
pop
loope
std
mov
xchg
sub
ret
mov
int
repz
sbb
adc
sbb
cmpsl
aaa
push
mov
dec
jl
or
dec
imul
pop
incb
xchg
mov
mov
mov
into
pop
fucomi
pop
pop
insb
test
das
mov
ret
add
sbb
shlb
fnsave
add
fsubl
jne
push
aam
pop
lds
inc
testb
ljmp
rorl
mov
aad
adc
cmc
stos
ds
adc
adc
adc
jne
inc
inc
in
inc
psllq
sub
or
jne
lahf
lret
mov
stos
ret
xor
jmp
mov
clc
daa
xchg
or
adc
and
lahf
test
dec
cmc
pop
in
inc
add
xchg
outsl
xchg
jg
adc
sti
lcall
rol
mov
and
push
sbb
fwait
ret
mov
push
mull
xor
leave
je
pop
sub
pop
andnps
rcrl
scas
add
mov
idivl
and
lret
sbb
xor
xchg
mov
inc
outsl
aaa
imul
out
push
lods
inc
jle
movsb
xor
or
cmpb
jne
addr16
jb
dec
sub
adc
ret
push
jno
movsl
push
cmpsl
sti
xchg
inc
int
je
push
insl
and
std
cld
inc
out
mov
pop
mov
jecxz
mov
call
or
pop
ljmp
ret
xchg
popa
pop
outsl
and
rcr
push
push
jg
mov
pushf
call
test
push
fimuls
dec
stos
lds
mov
mov
adc
test
cmp
inc
lret
jo
call
sarb
push
sub
jg
inc
cmp
xchg
insl
xchg
cmp
cld
test
mov
and
outsl
xchg
sbb
lods
add
cmp
or
pushf
cwtl
xchg
mov
jbe
notl
push
sti
inc
inc
test
test
cmp
test
test
es
or
pop
and
push
sti
fldl
pop
and
testb
sbb
xchg
in
cmp
sti
and
insl
push
notb
repnz
enter
jne
dec
fsubrs
enter
xchg
fs
xchg
inc
icebp
stos
push
or
shrb
xchg
gs
jecxz
test
stos
das
xchg
pop
loope
mov
pop
push
nop
push
and
dec
or
sbb
cmp
outsl
inc
pop
icebp
push
mov
sbb
enter
and
enter
and
sbb
adc
sarl
in
jl
fidivrl
xchg
std
sub
int3
and
inc
sarb
mov
and
cmp
nop
add
sti
cmp
test
loope
insb
lods
jge
test
mov
mov
xchg
add
incb
sbb
xchg
outsb
mov
cmp
or
xchg
testb
adc
fists
push
fcomp
ficoms
and
cmp
mov
arpl
sbb
cmp
mov
mov
pop
mov
arpl
sahf
daa
mov
out
dec
decb
xchg
lods
out
mov
adc
aam
std
mov
push
and
mov
cmpb
xchg
xor
icebp
inc
and
call
inc
sti
mov
sub
movsb
pusha
std
sbb
out
xchg
divl
inc
pop
xchg
push
subb
imul
jne
pop
data16
or
scas
or
dec
in
push
push
dec
pop
loopne
icebp
xchg
sub
daa
inc
cld
pop
into
mov
mov
lret
lock
aad
jb
out
dec
push
jg
mov
mulb
xor
test
test
scas
mov
inc
sbb
cmpb
inc
mov
inc
fdivr
xchg
loope
adc
pop
mov
loop
dec
daa
inc
pusha
sbb
cwtl
push
shrl
sbb
hlt
fistps
xchg
jl
xchg
les
sbb
cld
movl
dec
sbb
stos
mov
jbe
pop
push
xor
xchg
test
xor
std
push
scas
adc
and
test
and
sbb
test
and
mov
mov
adc
add
add
mov
jmp
jmp
adc
fmuls
decb
sub
dec
xchg
pop
cmpl
xchg
cwtl
ret
fists
jp
push
or
int3
mov
pushf
sti
add
pop
fs
sub
dec
or
or
lods
jp
jns
movsb
outsb
scas
jae
mov
popl
scas
ds
xchg
lods
mov
mov
out
lcall
mov
fcoml
dec
in
imul
cmp
es
shr
mov
mov
pop
push
rcrb
arpl
das
shll
ja
or
std
enter
add
scas
jns
lahf
lret
test
mov
jmp
ret
movsl
inc
jbe
cli
lods
dec
sbb
push
sub
test
pop
stos
lds
daa
pop
shll
frstor
ja
jbe
ss
hlt
adc
clc
cmp
inc
sbb
jge
xchg
push
test
pop
cwtl
insl
inc
scas
scas
jo
or
pop
dec
push
xor
mov
xor
and
pop
adc
xchg
jg
fistpl
push
loopne
fisttpll
or
gs
push
sti
mov
push
mov
pop
lds
mov
js
out
js
inc
pop
fcompl
std
aas
int3
testb
mov
push
roll
sahf
clc
push
iret
rsqrtps
mov
push
cltd
cmp
int3
or
leave
mov
add
lods
icebp
jecxz
inc
mov
mov
pop
sub
inc
or
ret
dec
sbb
mov
mov
pop
mov
jle
pusha
scas
xchg
cld
mov
fistps
ret
xor
add
sbb
ret
push
inc
sbb
call
xchg
mov
sbb
push
mov
jmp
cltd
mov
mov
into
adc
mov
repz
adc
rclb
cmp
sarl
inc
mov
daa
call
pushf
mov
test
jne
pop
fadd
push
jecxz
dec
push
dec
ljmp
mov
pop
dec
loopne
xor
xor
or
inc
pop
in
imul
push
call
scas
xchg
sub
sub
inc
std
and
push
dec
mov
mov
lret
lret
xor
inc
jbe
outsb
mov
push
fs
mov
inc
addr16
test
in
push
shrl
cld
call
cmp
int3
sub
cmpsl
mov
sub
cmc
or
add
jge
repz
add
lods
imul
jge
push
xchg
in
enter
addl
adc
pop
test
or
imul
sub
jecxz
pop
sbb
in
lock
clc
and
jne
sub
lds
je
in
call
xchg
loopne
nop
push
add
clc
push
add
dec
mov
stos
cli
std
lea
add
in
jae
inc
outsb
ficomps
imul
test
add
jb
mov
repz
xchg
inc
ljmp
int
mov
mov
dec
adcb
jge
pop
lcall
js
jmp
lret
out
fsubr
pop
int3
insb
pop
push
movsb
rolb
inc
add
ret
hlt
sarl
out
dec
outsb
dec
lock
call
repz
int3
out
jp
push
add
cmc
loope
icebp
push
push
int
pop
rolb
dec
jl
ret
cmovbe
and
sub
add
push
mov
scas
movsl
and
lret
shlb
push
add
mov
cltd
cmp
sub
mov
into
addr16
int3
mov
mov
or
shrl
js
push
mov
cld
test
inc
lock
push
rorb
add
xchg
add
lahf
adc
lods
nop
insb
jnp
shl
fadds
cmp
lds
push
movsb
push
cs
aam
incl
outsl
jmp
xor
sbb
dec
jnp
out
cmp
insb
cmp
in
sub
rcll
add
rorb
or
mov
popa
or
add
jbe
inc
stos
mov
in
add
mov
sub
jb,pn
ljmp
and
stos
mov
or
fstps
fildll
cmp
scas
stos
add
je
jle
fldl
sub
push
fcomps
int3
sub
roll
inc
lahf
clc
add
jno
das
mov
or
fwait
mov
incl
adc
out
inc
call
xchg
ljmp
mov
iret
sbb
test
sbb
loopne
test
mov
inc
mov
stos
in
and
loope
mov
or
lret
call
sub
loop
dec
sub
add
xor
lret
add
fsubrl
dec
jns
cmpsl
shrb
cmp
aam
jecxz
mov
jo
incb
ficoml
in
ljmp
mov
or
shll
jecxz
add
ljmp
jmp
fidivrs
stos
inc
int3
stc
lret
add
fcom
pop
sarl
add
ficoms
fistps
std
sbb
cld
lret
jb
push
cmp
xchg
orl
bound
subb
pop
pop
ss
sti
sbb
hlt
mov
xlat
cmp
add
lea
cltd
pushf
bound
xchg
adc
add
inc
pop
adc
xor
hlt
add
push
pop
xor
arpl
xor
lahf
outsb
jmp
add
aas
fwait
stos
dec
int3
or
pop
dec
xor
add
sbb
notl
sti
movlps
out
dec
outsb
jo
lret
lret
or
sbb
add
imul
cmc
cmp
push
xchg
add
mov
or
mov
push
cmp
jbe
sub
lds
fcomi
dec
stos
cmp
push
mov
addl
ss
aad
xchg
sbb
fsubl
push
movaps
ljmp
xor
add
mov
mov
scas
pop
adc
mov
inc
fstpl
jecxz
adc
stos
sbb
sub
outsb
loop
add
clc
add
mov
add
dec
inc
push
and
outsl
dec
dec
ljmp
dec
xchg
mov
pop
xchg
mov
jl
popf
cmp
and
notl
dec
rolb
jg
stos
jae
push
cmp
sub
and
add
pop
or
insl
add
mov
pop
ljmp
enter
mov
cmp
xor
add
dec
dec
rclb
or
pop
jge
push
add
mov
inc
fsubr
and
into
ljmp
sub
jl
add
jge
dec
jmp
add
icebp
jno
mov
xchg
mov
int
xor
data16
sbb
decl
cmp
fwait
ret
inc
mov
fcomi
push
xor
lods
sarl
pop
das
in
subb
push
lret
shl
sbb
jecxz
dec
sarl
lret
fnsave
scas
sbb
jae
mov
jp
inc
test
xchg
xor
lods
push
add
std
or
push
adc
sbb
cmc
cld
into
add
push
loope
shl
push
idiv
addr16
add
inc
jae
ficompl
outsb
out
stos
add
mov
negb
or
test
notl
fldenv
jns
pop
jmp
ja
add
xchg
call
push
inc
icebp
sub
add
xor
add
adc
add
sub
add
jae
jecxz
xchg
lret
add
dec
jg
lock
in
in
iret
add
dec
mov
push
orl
cmc
pop
outsl
pop
xchg
add
cmp
sarl
pop
and
cltd
fldt
jg
imul
add
cmpsb
mov
outsl
repnz
mov
aam
inc
mov
add
cs
std
xchg
out
pusha
add
xlat
imul
popa
xchg
pop
xor
fisubrl
inc
dec
shll
insb
imul
adc
or
test
xchg
jns
test
arpl
rorl
or
push
mov
xor
add
jnp
mov
jmp
ret
leave
addr16
xor
adc
mov
daa
add
and
add
fsubr
int3
sub
inc
jl
stc
cmp
in
jecxz
stos
inc
int3
mov
add
daa
addb
dec
pop
lahf
mov
mov
imul
je
add
cmp
lock
mov
test
add
subl
xchg
add
aaa
mov
test
pop
imul
dec
adc
xor
shll
push
fistpll
clc
mov
pop
popf
loopne
call
add
test
sbb
jecxz
fldl
cli
das
pmulhw
push
lret
add
xor
push
clc
adc
dec
add
scas
or
bound
stc
and
sub
inc
scas
dec
push
bound
je
andb
scas
int3
cld
bound
jp
leave
mov
imul
scas
sub
bound
inc
iret
dec
mov
movsb
scas
in
hlt
arpl
fs
je
nop
mov
shrb
cld
leave
inc
pop
out
les
hlt
push
leave
loop
scas
xor
bound
iret
pop
mov
subb
lods
iret
mov
mov
scas
rcr
in
in
iret
hlt
mov
cmp
loop
bound
stc
and
sub
xor
cmp
inc
scas
dec
push
bound
iret
je
cmpb
cwtl
scas
movsb
lods
bound
int3
jp
leave
in
scas
cld
or
or
loop
bound
iret
js
mov
scas
mov
add
jmp
inc
jp
leave
push
test
iret
fsubs
and
sub
inc
leave
pop
scas
push
mov
jp
leave
lock
add
scas
adc
bound
stc
dec
iret
pop
mov
pushf
scas
mov
fdivr
in
cmpb
loop
bound
iret
pop
mov
nop
scas
movsb
mov
stc
fmul
in
mov
cli
sbb
sub
stc
fs
je
mov
leave
lods
scas
rcr
in
cld
leave
or
out
sbb
inc
scas
pop
push
iret
pushf
mov
in
hlt
add
adc
and
xor
inc
mov
je
test
loopne
hlt
arpl
adc
and
xor
push
pusha
bound
iret
xchg
mov
int3
scas
in
adc
sbb
xor
fs
jl
bound
mov
in
scas
cld
or
adc
bound
dec
iret
pop
mov
mov
stc
ror
fsubl
xchg
loop
sbb
xor
cmp
inc
mov
pop
scas
fs
js
test
nop
mov
shrb
pop
push
jmp
movsb
jp
leave
aam
in
sub
jmp
cmp
push
leave
push
mov
mov
inc
and
and
leave
cmp
stc
or
mov
fsubrs
cmp
and
xor
cmp
dec
mov
js
mov
shlb
scas
loopne
in
stc
clc
leave
add
out
adc
xor
stc
fs
jo
cmpb
xchg
scas
movsb
mov
stc
ror
fsubrl
jp
leave
inc
scas
dec
push
bound
push
jp
leave
mov
enter
fmul
call
sbb
cmp
loop
bound
enter
fsubrl
cli
add
jmp
xor
stc
pop
iret
push
leave
nop
scas
pushf
mov
ficompl
bnd
test
fmul
call
or
jp
sti
mov
inc
or
cmp
daa
aad
adc
in
mov
in
stos
add
add
jp
sbb
aad
xchg
xor
jae
repz
loopne
aaa
imul
add
push
mov
pop
mov
addr16
xchg
bound
or
stos
dec
jmp
dec
imul
ret
adc
loop
stos
push
or
repnz
cmc
mov
cli
repz
cmp
sub
push
repnz
xchg
and
pushf
jp
leave
xor
sub
bound
je
jle
aam
fmuls
leave
loop
lret
inc
scas
test
hlt
cli
push
push
imul
dec
and
test
sti
repz
inc
gs
jb
pop
scas
ja
bound
bound
and
and
iret
shrb
cmp
lret
xchg
es
adc
add
add
adc
shlb
stc
push
add
inc
add
push
add
dec
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
inc
inc
pop
insl
add
dec
add
add
add
add
add
add
add
add
add
add
jne
add
outsb
add
add
inc
add
add
add
add
add
add
add
add
dec
add
push
add
add
pop
xor
add
add
add
add
push
add
add
push
add
add
xor
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
inc
add
add
add
add
add
add
add
js
dec
add
add
imul
add
add
push
dec
add
add
insb
add
add
data16
add
add
add
arpl
jne
inc
dec
push
add
data16
add
add
add
add
add
add
add
add
add
add
imul
add
dec
add
add
add
add
data16
dec
add
inc
add
inc
add
add
aaa
add
push
add
add
add
add
jae
dec
add
add
add
add
add
add
dec
add
add
add
add
je
add
inc
add
add
add
outsl
add
add
push
add
add
je
insl
inc
add
add
inc
dec
xor
add
add
add
add
push
add
add
add
inc
add
add
add
data16
add
add
add
add
jp
inc
add
add
add
add
add
outsl
insb
add
add
dec
add
add
add
add
adc
xchg
js
xlat
je
adc
and
push
lds
dec
dec
loop
in
or
fwait
gs
arpl
imul
les
nop
pusha
pop
adc
mov
test
and
test
leave
adc
sub
inc
xchg
cld
mov
sbb
mov
outsl
sub
sub
rorb
ja
add
adc
cmp
xchg
inc
popa
jne
inc
es
pop
aam
nop
addl
inc
xchg
xchg
movsl
inc
adc
dec
fwait
adc
push
xchg
mov
jns
sub
adc
lea
enter
pop
sti
sti
test
aaa
dec
push
movsl
pop
mov
jmp
lods
popa
pusha
jle
in
add
dec
sbb
mov
jmp
cmp
inc
xchg
out
imul
imul
mov
push
xchg
loop
ret
mov
rolb
or
mov
rclb
jbe
cld
push
inc
sahf
inc
adc
mov
aam
ror
xor
leave
add
scas
lret
ja
call
and
mov
mov
jecxz
cmp
fidivrs
add
xor
xchg
pop
mov
and
jmp
inc
stos
fidivrs
push
call
mov
xchg
or
mov
mov
push
sbb
pop
loop
push
or
repnz
aas
loopne
dec
sub
jg
jl
repnz
jno
adc
jl
stos
repz
adc
outsb
lret
nop
sub
push
out
and
call
pop
iret
sub
push
add
cmc
ljmp
add
and
mov
or
ds
cld
sub
inc
and
pop
lea
mov
or
inc
xor
jge
jne
adcb
lahf
cld
call
mov
jge
jbe
jo
fistpll
outsb
les
jo
cmp
lret
pusha
jecxz
mov
cld
adc
mov
xorb
pop
enter
or
mov
sbb
dec
clc
cmp
pop
pop
jmp
xlat
test
cmp
loope
mov
cmc
sbb
mov
pop
incb
pop
outsl
cld
sub
adc
cmp
out
cmp
out
adc
loop,pn
xchg
cli
mov
jecxz
cmp
adc
scas
subl
xchg
push
push
mov
mov
cmp
dec
mov
pop
cmp
sbb
mov
fnstsw
mov
lret
mov
or
lods
loopne
cmp
sbb
and
enter
sub
mov
mov
add
negl
ss
xchg
and
ret
inc
stos
int3
sbb
jge
sarl
into
cmc
dec
lret
xchg
mov
push
adc
mov
jnp
push
mov
xchg
lods
clc
mov
mov
mov
std
nop
outsl
jne
jmp
mov
stos
dec
mov
mov
ss
sahf
stos
adc
mov
xor
ds
scas
movsl
enter
fdivs
test
jle
outsl
movsb
or
lods
clc
xor
adc
addr16
or
outsl
mov
inc
push
add
pop
or
push
call
pop
mov
in
in
add
add
cmpsl
in
je
lea
push
cmp
int3
sub
rcrl
fcmovb
mov
inc
sub
push
fisubl
das
jbe
enter
xor
movsb
add
rorl
cmp
pop
lock
into
mov
adc
cmp
negb
dec
xor
out
xor
arpl
leave
jb
movntps
imulb
ret
add
xor
ss
call
push
movsl
or
mov
xchg
gs
movsb
pusha
mov
repnz
mov
mov
adc
out
call
leave
lret
pop
rcll
jmp
jae
cmpb
stc
push
jbe
psrlw
xor
pop
mov
cmp
fnstcw
adc
stos
sub
and
repz
sub
mov
mov
pop
cmp
subb
jns
or
dec
and
mov
iret
mov
or
jno
enter
int
pop
or
mov
clc
test
in
mov
sub
stc
inc
pop
dec
add
cli
das
mov
int3
mov
iret
adc
and
iret
mov
sbb
sbb
sub
insl
les
mov
std
js
sbb
sbb
cmpsl
in
pushf
mov
or
in
mov
add
add
jmp
js
pop
and
or
js
pop
clc
test
mov
into
adc
mov
inc
inc
call
mov
leave
repnz
pop
inc
mov
mov
mov
push
test
lretw
and
sub
jne
push
push
sub
push
mov
shlb
test
adc
out
mov
push
daa
aaa
ljmp
sub
xlat
add
or
lock
into
leave
pop
jbe
cltd
insl
cmp
xchg
inc
xchg
cmp
jge
lcall
or
dec
and
cmp
test
gs
inc
dec
adc
mov
loop
insb
adc
mov
loop
sahf
and
leave
js
mov
push
stc
mov
adc
lret
es
mov
les
adc
enter
nop
es
xchg
outsl
stos
jne
xor
ss
sub
adc
sbb
or
or
mov
add
das
dec
shr
int3
jmp
ja
into
adc
stc
in
xor
fcmove
dec
add
push
in
lret
pop
and
fstpt
ffree
in
xlat
mov
mov
dec
mov
jo
es
mov
dec
enter
insb
push
ret
dec
movl
cmpl
sbb
iret
and
or
out
ljmp
add
imul
lea
loop
push
loopne
cmp
pop
or
adc
jmp
roll
sub
mov
lahf
icebp
mov
adc
dec
mov
push
adc
insl
test
leave
sub
lcall
repz
xchg
sarl
test
addr16
sbb
scas
xor
mov
dec
sbb
loop
in
data16
imul
iret
popl
mov
dec
sub
mov
jmp
into
inc
in
xchg
shr
adc
inc
orl
xchg
add
imul
in
call
sub
mov
and
sbb
ret
mov
inc
mov
arpl
insl
loopne
add
ret
jmp
pop
test
scas
adc
jae
in
in
push
stos
adc
fnstcw
into
sbb
cs
push
cs
jmp
jecxz
loopne
scas
adc
insl
stos
sbb
cmpsb
or
mov
add
or
out
or
test
dec
push
push
out
fmuls
sbb
outsl
loope
loope
rcrl
xchg
cmpsl
cld
and
clc
pop
cmp
in
fdivrl
inc
jae
shl
and
shrd
shr
lret
icebp
ret
shlb
pop
jne
inc
cmp
incl
push
orb
sub
orl
jo
rcrl
lock
negl
dec
out
mov
inc
pop
loopne
sbb
in
push
mov
jl
repz
cmp
mov
xor
xor
hlt
mov
xchg
orb
jne
pushf
dec
mov
iret
adc
mov
sub
lods
incl
jmp
gs
inc
cmp
clc
mov
jmp
insl
mov
idivl
jmp
jbe
ds
jne
int3
test
cmc
notb
stc
in
movzwl
aam
push
mov
sub
push
pop
or
sub
call
test
cwtl
int3
xorb
imul
push
push
call
nop
mov
mov
sbb
in
jnp
and
sbb
dec
out
xor
call
jns
out
add
mov
stos
int
add
fisubrl
push
inc
add
mov
je
adc
inc
test
jns
adc
jl
jge
push
mov
jmp
xchg
hlt
xor
std
adc
push
pop
pop
fimull
inc
fiaddl
lods
jl
mov
mov
xchg
fcmovbe
adc
out
push
mov
shr
jl
pop
daa
add
inc
repz
bound
out
repnz
and
je
outsl
int3
outsb
fistps
scas
les
enter
push
test
jg
and
or
out
andb
mov
das
daa
out
out
mov
cmp
push
cmp
stc
shr
cmp
cmpsl
popf
pop
pop
push
ret
call
mov
clc
cli
js
lock
cmp
insl
fimull
js
stos
inc
bound
ret
push
push
push
push
in
push
loope
xor
lock
ror
jg
pop
pop
add
inc
pushf
lahf
mov
add
or
or
jnp
push
arpl
std
xchg
jne
popf
push
or
mov
sahf
lsl
in
or
adc
add
std
xor
push
mov
pop
mov
pop
ja
stos
push
ret
std
inc
lahf
ret
fcompl
enter
outsb
jp
or
pop
sbb
call
or
clc
loopne
movsl
movsl
jbe
clc
mov
insb
mov
roll
or
push
jg
leave
cmp
ret
int3
inc
cmp
and
loop
fsubs
loope
imul
inc
mull
lods
int3
mov
ja
int3
dec
scas
loope
enter
jb
mov
movsb
pop
mov
loopne
sub
cmpsl
in
and
jecxz
lahf
mov
movsl
loop
mov
nop
loopne
mov
xor
mov
shll
cmpsb
scas
mov
mov
rorb
mov
div
dec
fldt
loope
enter
clc
mov
mov
ret
add
loope
sub
cli
mov
sahf
jne
in
dec
fabs
shrl
mov
mov
orl
sbb
bound
fdivs
xor
add
xor
push
add
pop
int3
adc
dec
xchg
mov
mov
sbbl
lret
out
sub
mov
nop
inc
cmc
mov
dec
lcall
add
xor
ss
inc
cmpsb
in
decb
and
add
insl
add
imul
nop
ds
jmp
xorl
mov
subl
push
lea
xlat
fildll
adc
fnstenv
jecxz
cmc
mov
popf
add
jo
stos
ret
stos
ror
add
jns
leave
push
or
sahf
daa
pushf
mov
pop
jmp
iret
call
clc
pop
jae
mov
jmp
out
test
push
in
or
mov
sbb
outsb
add
fdivs
cwtl
hlt
or
sub
outsb
dec
jge
add
stos
in
sahf
sbb
pushf
mov
and
rolb
jge
mov
sarb
decl
mov
popf
jecxz
lret
mov
inc
call
jmp
out
ljmp
pop
sbb
mov
iret
xor
outsl
add
or
test
lret
enter
iret
mov
out
nop
mov
out
jecxz,pn
fildl
sbb
jne
mov
push
jbe
jmp
dec
repnz
xchg
call
int3
jle
add
scas
xor
sub
sbb
jnp
test
push
mov
pop
jae
cmp
adc
rcrb
push
nop
dec
aas
add
mulb
inc
repz
ljmp
xor
jnp
mov
mov
mov
or
imul
jge
push
add
test
lret
xchg
mov
add
pop
pushf
pop
lret
mov
outsl
call
cmpsl
and
sub
rcll
add
sbb
cmc
mov
lret
cwtl
test
add
dec
sahf
inc
shlb
pop
hlt
mov
in
ret
lods
pop
dec
xlat
sti
push
cli
bound
sub
dec
out
not
fcmovnb
stc
mov
dec
imul
pop
lahf
push
jmp
neg
dec
test
push
xchg
sahf
cwtl
mov
lret
sbb
mov
xchg
and
data16
mov
push
pop
xchg
test
sub
cld
push
add
pop
pop
pushf
scas
cmp
and
add
xchg
scas
cmc
fsubrs
lahf
add
push
aam
enter
shlb
jle
sub
mov
inc
xor
push
or
cmp
movsb
imul
call
push
clc
push
dec
in
inc
push
int
nop
jle
push
rolb
xchg
and
adc
jecxz
push
jecxz
mov
out
daa
or
fsubs
fistl
mov
pop
bound
stos
leave
fistpll
call
dec
hlt
adc
lcall
cmp
dec
stc
fs
call
xchg
inc
cltd
push
in
sbb
in
jae
ljmp
adc
sbb
cmp
sti
xchg
outsl
push
scas
ljmp
insb
fdivrs
mov
pop
and
outsl
xchg
mov
mov
sti
sbb
xchg
je
arpl
add
inc
xchg
push
lds
cmp
push
jmp
mov
fcmovnb
rcll
stos
inc
cmc
and
push
into
add
inc
xor
and
pop
mov
xor
inc
mov
adc
inc
mov
int
mov
mov
sub
xorps
je
or
xchg
fmull
sbb
fcompp
xor
cs
scas
adc
ds
dec
push
pop
loop
std
leave
add
mov
ret
sti
bound
xor
and
stos
xchg
jae
int
cmc
scas
and
aaa
jno
faddl
pop
sub
cmp
lods
cmpsb
scas
adc
mov
mov
pop
pop
fwait
dec
xor
mov
orl
add
xor
sbb
dec
or
sbbb
shlb
ljmp
xor
int
xor
push
icebp
adc
int
aaa
test
xor
aas
ljmp
std
pop
xchg
inc
aad
cmpsl
inc
jb
push
mov
mov
in
pop
fs
divb
add
insb
pop
cmp
orb
mov
ljmp
fmul
xchg
stos
sub
ljmp
lahf
loop
mov
jae
push
dec
test
movsb
aas
add
das
std
adc
jbe
mov
leave
sti
out
hlt
push
add
mov
lret
inc
cmpsl
add
stos
setns
stos
mov
pop
sbb
mov
sub
xor
pop
dec
lods
inc
sbb
sub
cli
jae
push
sbb
fwait
xor
mov
mov
add
fistpl
mov
mov
mov
aas
push
add
repnz
sti
sbb
dec
call
in
add
cmp
rol
and
dec
mov
ss
sti
xchg
dec
in
aas
add
ja
ds
jecxz
decl
add
xor
pop
sub
and
push
mov
inc
mov
jae
ret
repz
aad
insb
and
repz
imul
sbb
loopne
jle
bound
sbb
dec
aam
push
push
xchg
mov
add
fs
mov
sbb
xchg
into
dec
lret
mov
imul
adc
pop
and
fwait
fwait
xchg
xchg
sbb
jnp
jae
mov
mov
in
push
stc
sbb
imul
xor
icebp
sub
insb
mov
mov
repz
test
out
mov
mov
lcall
xlat
mov
cld
lret
xchg
sbb
add
push
scas
jg
add
pushf
push
ret
push
mov
lret
mov
cltd
jb
outsb
xchg
mov
add
roll
xchg
lods
xor
adc
out
xchg
out
leave
int
add
jne
xchg
xor
sbb
cltd
iret
pop
ficomps
add
imul
in
jns
and
daa
adc
jge
jmp
pushf
call
loope
add
mov
movl
xor
repz
lret
andl
sbb
cld
pop
jecxz
xchg
push
insb
adc
pop
mov
fs
cmpsl
outsb
inc
add
and
gs
movsb
fnstsw
add
jne
jecxz
mov
mov
loop
aaa
sbb
out
inc
js
repnz
dec
popa
test
aas
imul
call
sbb
jae
dec
push
mov
movsl
adc
inc
xchg
fisubs
clc
dec
or
dec
inc
loope
shll
and
stos
dec
inc
mov
ret
std
mov
adc
cmp
fdivl
jnp
mov
ss
imul
in
fstpt
and
push
push
sbb
sbbl
loope
push
lock
ljmp
pop
fcmovnu
int3
dec
push
sub
mov
lret
add
dec
pop
lahf
loopne
pop
add
sti
ds
mov
cs
dec
push
dec
fdivr
jnp
inc
add
mov
inc
mov
lock
pushf
or
fcoml
and
out
jb
in
push
push
mov
pop
fcmovnu
insl
jle
xchg
rolb
pusha
jmp
pop
lds
notl
xor
mov
dec
inc
std
shll
hlt
cmp
into
cltd
cmp
cs
fildll
cwtl
mov
dec
pop
jns
and
imull
cmp
xor
adc
xor
stos
xchg
cmp
arpl
out
rcrb
loopne
and
add
pop
mov
scas
mov
repz
ss
insb
push
insl
lret
pop
jmp
movsl
jbe
popl
and
sbb
das
and
aam
loopne
push
aaa
ret
dec
xor
pusha
sub
pop
add
jmp
push
and
pop
mov
and
jnp
cmc
or
dec
xchg
test
dec
stos
data16
les
add
pop
sbb
ss
shl
pop
bound
repnz
std
pop
dec
cli
add
out
lods
mov
repz
fs
in
in
outsb
push
and
ljmp
sbb
mov
lds
jp
or
scas
jne
mov
andb
dec
jg
xchg
rcrl
inc
popf
out
add
and
push
or
scas
ljmp
pushf
dec
fbld
dec
rcrl
sarb
jns
pushf
and
fsubrs
aas
in
out
add
push
repz
in
stos
xor
dec
jg
iret
jecxz
inc
fwait
pop
mov
push
rcll
dec
mov
shll
repz
ss
sub
fsts
add
adc
sub
fidivrs
mov
add
add
loop
fnstcw
sahf
repz
aam
call
jns
arpl
je
jecxz
fstpl
ljmp
or
sti
je
loopne
cmpsb
xor
imul
add
mov
inc
in
rclb
and
pop
cmp
push
roll
dec
mov
shrb
and
loop
andb
or
enter
lahf
cmp
dec
inc
add
xchg
inc
xor
subl
inc
sbb
int3
pop
aam
jns
int
sbb
push
jo
mulb
ss
aam
xchg
pop
in
arpl
call
sbb
or
iret
cmp
daa
je
sub
out
ror
mull
mov
stos
jmp
addr16
icebp
stos
iret
mov
in
adc
ret
loopne
add
inc
scas
sbb
ret
adcb
into
in
bnd
out
dec
xlat
dec
push
pop
add
mov
and
loopne
scas
leave
mov
cmp
ror
imul
add
ret
mov
and
cmc
into
mov
adc
lods
adc
xor
mov
outsl
push
fcomi
int
push
popa
push
ljmp
and
mov
inc
add
and
pop
clc
movsb
icebp
and
nop
movsb
sbb
pushf
mov
mov
xchg
fimull
jecxz
out
iret
push
or
add
loop
add
mov
pop
loope
push
out
clc
push
call
pop
ljmp
sbbl
dec
iret
test
mov
aad
std
pop
cmp
leave
push
mov
movsb
aam
mov
adc
add
sbb
mov
fsubrs
roll
jmp
pop
imul
and
pop
std
stos
mov
int
and
testb
dec
add
mov
mov
rcr
mov
pop
shrb
iret
xchg
stc
in
outsl
into
mov
nop
jle
xor
push
loop
xchg
or
jnp
sbb
daa
inc
jecxz
call
mov
dec
add
xchg
bound
jbe
xchg
ljmp
loopne
fidivrl
pop
and
cmp
push
inc
enter
sub
clc
testl
iret
add
sub
outsl
icebp
mov
push
cmp
lret
mov
mov
in
jecxz
int3
scas
xor
cwtl
mov
and
ret
or
cmc
std
aad
enter
dec
les
mov
jmp
add
test
sub
bnd
adcl
jae
imul
mov
lret
or
das
nop
xchg
mov
cs
loop
outsb
mov
mov
cmp
or
cmpsb
aaa
les
xor
pop
in
call
xor
push
scas
sbb
xchg
push
sti
nop
pop
push
jmp
iret
test
pop
pop
pop
test
and
aad
push
stc
shll
jb
jl
jp
adc
push
inc
or
push
push
mov
mov
out
adc
and
mov
push
mov
arpl
xchg
loopne
push
mov
and
xchg
inc
xchg
sub
sbb
shll
ret
jb
cli
test
pop
sbb
sbb
xor
mov
mov
jp
adc
out
mov
jnp
jecxz
push
xor
aam
fdivs
in
adc
shlb
jb
test
sub
jge
jno
std
mov
adc
arpl
sub
mov
add
ss
cwtl
push
lret
sbb
test
dec
and
sti
and
dec
push
test
outsb
add
shrb
ret
lods
jg
dec
sarb
xchg
jle
pop
test
xor
call
pop
stos
and
lock
pushf
add
loope
stos
stc
ret
pop
loopne
fwait
inc
aad
jecxz
jle
push
cmp
call
or
pop
inc
adc
push
hlt
fisubl
cli
test
xchg
stos
sub
mov
and
mov
adc
sub
and
mov
pop
fisubrl
dec
jb
pop
incb
dec
and
lret
push
sbb
aam
add
and
fisttpl
cmp
push
dec
inc
arpl
adc
xchg
insb
mov
push
or
ffree
sbb
dec
and
movl
push
and
mov
cmp
je
pop
call
cmc
adcl
ja
jb
stc
jnp
cld
push
add
inc
rcrl
pop
cld
pop
inc
rcll
mov
test
lret
mov
jmp
test
movsb
outsl
and
ret
jmp
adc
fstpt
pop
jnp
dec
std
jmp
mov
mov
pop
jae
ret
adc
jne
jecxz
iret
mov
jae
push
push
mov
adc
xor
lea
mov
movsl
pop
adc
pop
clc
jb
js
sbb
in
mov
test
sbb
outsl
leave
and
out
push
jle
dec
cwtl
cmp
sbb
lock
fdivp
jmp
push
loope
mov
sar
pop
jmp
outsb
mov
pop
and
xor
mov
callw
repnz
add
add
data16
insb
stos
or
incb
sbb
rcll
orl
mov
pop
sbb
es
aad
adc
mov
in
adc
int3
dec
xchg
jp
push
scas
pop
push
sarb
lea
lret
ss
into
jmp
sbb
loop
adc
push
mov
push
popf
and
in
call
push
mov
push
adc
stc
imul
dec
sbb
stos
add
mov
adc
enter
loopne
fwait
jns
dec
adc
jae
imul
call
mov
rcrb
push
pop
jp
inc
mov
sti
cmp
sub
xor
jne
xor
push
jp
push
xchg
mov
lahf
loopne
inc
punpcklwd
or
cmp
inc
pop
xchg
jecxz
or
in
out
gs
mov
inc
pop
xor
xor
and
and
je
cli
dec
adc
pop
add
and
das
or
lods
repz
cs
add
push
add
push
mov
inc
loopne
in
mov
and
adc
inc
and
inc
inc
push
int3
xchg
mov
addl
scas
mov
cwtl
test
pop
jmp
test
lock
aaa
mov
lods
sbb
mov
call
sbb
pop
push
cmp
cmc
in
xor
sbb
cmp
cmc
or
shll
xchg
fsts
hlt
stos
pop
and
sbb
fistpl
jl
rorb
fs
mov
rorl
into
mov
les
xorb
mov
mov
pop
push
xor
lods
mov
jb
loope
pop
pop
das
cmp
or
mov
xor
mov
adc
ret
cmp
jae
pop
jne
testl
xlat
pusha
dec
xchg
push
sbb
daa
stos
dec
je
xor
das
ja
mov
inc
mov
lods
loopne
add
push
or
enter
cmp
sbb
into
das
lret
xor
mov
jg
adc
add
mov
jns
sbb
out
add
pop
insl
outsb
daa
jle
adc
mov
mov
jle
js
test
add
fst
adcb
push
in
xchg
pop
mov
push
jge
into
je
cwtl
jmp
test
mulb
testb
js
and
mov
cltd
dec
xor
push
mov
out
lahf
add
pop
cmpb
mov
sti
sbb
nop
aaa
filds
sbb
mov
rcrb
xlat
cmp
inc
xor
js
cmp
push
pop
in
ds
mov
cwtl
adc
add
sub
shl
jno
jno
test
icebp
lds
je
sahf
sbb
xchg
daa
js
jbe
jmp
jns
dec
xchg
pusha
or
pop
mov
pop
jno
outsb
pop
push
in
fists
add
mov
cmc
in
loopne
jl
jle
in
lcall
lods
add
aam
push
in
into
aam
cwtl
js
adc
mov
mov
mov
outsb
jecxz
in
mov
gs
incb
out
xchg
shlb
xor
clc
decl
inc
fs
iret
jmp
adc
jns
jnp
xor
cmp
mov
fnsave
jle
ret
pop
in
xchg
xchg
sub
bound
ftst
repnz
test
cmpb
xchg
lds
sub
mov
push
adc
xchg
test
inc
jg
int3
mov
adc
xchg
mov
inc
add
cmp
or
into
pop
std
jns
mov
mov
lea
jbe
add
sbb
adc
lahf
in
and
and
jecxz
ljmp
maskmovq
idivl
cld
add
mov
setno
or
ret
add
popa
pop
add
fnstenv
aad
push
dec
aaa
sub
inc
and
cmp
scas
fistl
push
les
pop
jp
in
insb
les
repz
ds
aam
stc
mov
push
adc
movsb
clc
bound
cmpb
test
mov
cmc
sti
dec
mov
sbb
out
sarb
adc
out
pop
je
adc
shll
repz
jmp
jle
jg
dec
mov
test
cwtl
pop
rcll
enter
cmc
and
lock
idivl
pop
cli
dec
lock
inc
mov
mov
mov
jecxz
mov
adc
ja
jnp
pop
loope
ficoms
lock
popa
loop
or
ret
xchg
ljmp
std
mov
hlt
loopne
out
cmp
ficomps
xchg
nopl
push
xchg
push
hlt
sar
fcomps
std
pop
add
mov
ret
lds
dec
push
push
dec
jbe
mov
in
subl
popf
cmp
mov
or
clc
pop
add
lods
popa
sbb
or
pop
out
pop
mov
pushf
faddl
cld
push
pop
lds
sub
mov
dec
scas
lret
or
xchg
loopne
mov
xchg
xchg
aad
xchg
xchg
sbbb
icebp
pop
pop
pop
lock
pop
loope
mov
push
shrl
push
aad
imulb
jb
jecxz
mov
push
mov
fstpt
xor
mov
adc
test
gs
into
and
sbb
xor
add
test
mov
mov
in
rcrb
lret
pop
mov
pusha
and
das
xchg
xchg
xchg
mov
scas
lret
enter
lret
sub
pushf
push
mov
xchg
and
dec
test
mov
leave
pop
icebp
shl
scas
test
pushf
push
pushf
setl
arpl
mov
or
add
cmp
cwtl
enter
stos
aam
cmpl
xchg
pop
add
sti
loop
sti
ss
add
dec
mov
mov
test
mov
jle
or
xchg
lods
xchg
or
stos
sub
jecxz
xchg
and
lret
insb
add
add
or
jo
cmpsl
lods
stos
mov
call
movl
adc
or
mov
lret
mov
mov
movsl
and
mov
mov
andb
mov
xlat
adc
incl
fbld
jg
cmp
into
lret
cld
scas
mov
icebp
enter
add
mov
cwtl
push
mov
mov
into
xor
fwait
mov
rorl
ret
mov
dec
rclb
scas
cmc
or
or
xchg
cmpsb
aas
inc
pop
aad
xor
pop
lods
movl
jno
xor
enter
inc
xor
lcall
test
fld
mov
xchg
inc
std
mov
pop
dec
or
and
cwtl
subb
cli
aam
scas
jnp
mov
adc
pop
fisttpl
mov
sub
jns
mulb
es
ljmp
ficompl
je
push
jmp
inc
add
and
negl
pop
or
rcll
sbb
dec
loopne
lea
fiaddl
push
stos
out
add
js
mov
in
pop
hlt
sbb
sbb
jmp
cwtl
std
mov
add
xchg
sub
or
out
lods
sahf
or
add
push
mov
scas
jns
push
or
mov
cmpsb
data16
mov
lcall
or
mov
and
bound
jl
je
add
sahf
out
or
or
jne
icebp
hlt
xchg
or
xor
iret
push
testb
jecxz
dec
stos
hlt
bound
mov
outsb
add
fstpt
rolb
ret
sti
pop
ret
or
jae
mov
xlat
stos
addr16
mov
sti
pop
pop
arpl
sti
push
movsb
inc
sub
add
enter
mov
and
scas
leave
aaa
mov
mov
push
stos
mov
outsl
stos
adc
and
pop
shrb
dec
les
das
arpl
push
scas
loope
cld
add
xor
push
and
xchg
fcmovnb
pop
push
adc
inc
add
and
incb
and
loop
push
push
test
stos
xchg
mov
loope
mov
inc
aaa
xor
pop
and
repnz
add
inc
xor
out
aam
out
loope
and
sar
hlt
xor
call
ret
jbe
sub
jmp
xchg
movsb
push
mov
mov
adc
push
rolb
in
adc
pop
pmulhuw
icebp
movsb
push
jo
add
xchg
outsl
cmp
push
popa
mov
leave
mov
dec
gs
scas
int3
fsincos
add
push
outsl
add
or
push
pop
adc
testl
or
mov
jecxz
push
ret
mov
sahf
cmpsb
jge
iret
shlb
ret
mov
cmp
cli
mov
lret
push
faddl
icebp
adc
sbb
leave
pop
loope
divb
push
scas
adc
stos
imul
popa
popf
insl
leave
adc
pushf
lret
cmc
mov
jle
cld
fwait
add
push
cld
mov
outsl
push
dec
sub
mov
or
cmp
inc
out
fld
jecxz
enter
cmp
ss
iret
imul
ljmp
mov
mov
dec
jmp
aad
ret
lret
int3
out
add
mov
jno
outsl
cli
iret
loop
mov
inc
clc
mov
add
jo
mov
cmp
insb
cli
in
jle
sub
xchg
xor
jns
into
fisubrs
push
dec
enter
jmp
ljmp
xor
aam
mov
sub
mov
jg
ret
and
sub
mov
aam
cmp
xor
sar
pop
sub
adc
scas
lea
popa
cmp
pop
push
fnstcw
and
pop
in
sarl
in
adc
or
jbe
rcrl
outsl
scas
lahf
adc
cmp
clc
push
lods
sti
cmpl
xor
imul
hlt
cmpsl
or
mov
inc
and
hlt
cli
sbb
and
ret
movb
push
xchg
ljmp
inc
mov
out
add
int
clc
xor
daa
ret
xchg
dec
jp
pop
out
add
mov
mov
addr16
sbb
dec
add
sbb
out
cmp
adc
adc
loopne
scas
lods
push
ret
stc
iret
insl
inc
push
mov
mov
shr
pop
ret
pop
pop
outsl
stos
sbb
push
pop
mov
ret
mov
in
loope
int
inc
push
and
stos
jge
out
push
and
xor
lods
mov
andl
ja
dec
jle
outsl
cmc
push
aas
cmpsl
push
or
lret
loopne
sub
inc
pop
ljmp
les
jge
aas
fisubl
enter
or
stos
mov
loop
jl
mov
scas
cmp
stos
inc
sub
imul
push
testl
mov
dec
insl
decb
mov
and
imul
outsl
js
incb
lahf
pop
mov
add
sbb
test
pop
stos
incb
push
adc
or
mov
pop
mov
rclb
ja
xchg
orl
pop
shrl
loop
fs
add
xor
scas
rorl
or
cmp
jbe
sub
push
xchg
mov
xor
jo
sub
je
mov
dec
xchg
stos
cmpsb
fwait
aam
jg
pop
cwtl
jmp
or
push
cmp
adc
xchg
inc
dec
js
xor
imul
sbb
add
add
push
lea
xor
ljmp
popf
rorl
or
mov
lods
sbb
mov
mov
or
add
test
push
call
mov
call
mov
push
imul
clc
push
pop
call
mov
jmp
jb
mov
subl
mov
lret
mov
es
pop
cmp
call
or
mulb
cmpsl
cmp
pop
jbe
cmp
adc
andb
sub
lea
ficompl
mov
jae
jle
sub
pop
cmpsl
jbe
into
cltd
mov
mov
arpl
jle
jle
stc
pop
adc
or
jle
icebp
mov
dec
loop
or
addb
mov
push
jo
cld
mov
push
mov
sub
test
sub
mov
outsb
push
aas
dec
leave
lret
arpl
call
cmp
mov
sahf
frstor
popa
in
pop
out
jo
cmp
jae
jne
xor
push
mov
inc
pop
inc
ja
jb
sbbb
popf
stc
andl
aas
mov
xlat
jmp
je
adc
jae
add
dec
test
xchg
mov
lods
movsb
pop
or
or
and
clc
push
es
jne
jns
jbe
and
jge
orb
aam
mov
mov
mov
gs
sub
lahf
lds
pop
jnp
inc
iret
pushf
adc
out
call
and
jns
jmp
testb
cmp
movsb
rcrb
push
jle
dec
jno
sbb
inc
pop
cwtl
mov
jne
ds
out
loopne
sar
nop
movsl
fwait
mov
sbb
adc
pop
insb
cwtl
jb
push
es
repnz
pop
aad
xchg
pop
and
enter
mov
jg
dec
repnz
test
and
jmp
js
inc
bound
or
jbe
sub
or
push
xor
cmpsb
mov
dec
movsl
add
push
sbb
mov
stos
dec
stos
cld
and
in
sub
cmp
int3
jg
xchg
ljmp
call
das
pop
fisubl
sti
mov
mov
jae
call
dec
cmpsb
push
add
daa
das
or
inc
jmp
outsl
pop
inc
add
and
add
and
cmp
cmpb
outsl
mov
sub
add
push
or
leave
in
sub
pushf
nop
daa
sbbb
pop
lock
jmp
xor
and
inc
lea
xchg
jae
dec
outsl
pusha
push
push
bound
sbb
xor
mov
shr
push
call
xor
fadds
add
lcall
pop
add
fwait
pusha
ss
add
push
jge
xchg
mov
js
mov
adc
int
scas
add
jp
inc
addr16
outsb
pop
push
out
les
cmpsl
xor
jmp
insl
pop
cmp
rolb
pop
mov
ds
cmp
inc
jle
push
jle
jnp
lea
jno
inc
leave
and
les
leave
xchg
mov
stc
mov
push
out
push
idivl
xor
or
jo,pn
jmp
cs
mov
dec
fwait
xchg
cmp
xor
imul
dec
test
mov
imul
call
push
sub
lcall
cli
arpl
add
clc
mov
push
xchg
es
mov
pop
ret
pop
inc
push
mov
pop
aaa
scas
cmp
cmp
mov
mov
xor
icebp
pop
iret
jle
pop
int3
enter
lea
stc
mov
lahf
inc
and
dec
mov
sub
hlt
dec
add
jne
clc
pop
push
mov
pop
repz
jo
and
stos
repz
loope
jle
fsubr
cs
stc
adc
stc
pop
sub
popa
and
arpl
adc
inc
xlat
sub
mov
or
xchg
jne
into
xchg
push
push
pop
push
addb
je
dec
xchg
std
in
call
sti
or
ss
ja
mov
into
mov
cltd
lahf
es
test
mov
or
std
pop
arpl
sub
out
insb
jle
jb
or
adc
push
leave
loope
je
int
out
outsb
jnp
lret
mov
and
add
cmp
and
xchg
add
stos
sbb
add
add
xor
add
add
add
add
jae
add
add
add
add
inc
push
pop
push
add
add
xor
add
xor
add
dec
add
add
add
inc
add
add
add
jbe
add
dec
add
add
add
xor
inc
add
jae
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
xor
add
add
add
dec
inc
add
data16
add
dec
add
xor
add
add
add
add
jp
add
add
add
pop
jne
inc
add
dec
add
dec
dec
dec
add
add
add
jbe
add
pop
add
add
jns
push
add
add
add
add
add
add
add
push
inc
add
insb
add
add
insl
cmp
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
jp
add
dec
inc
add
je
add
add
add
dec
push
add
dec
add
add
add
add
add
add
add
jne
inc
inc
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
dec
dec
pop
add
add
add
add
je
dec
add
inc
add
dec
add
add
xor
add
add
add
add
add
jo
add
add
add
jne
insl
add
add
add
push
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
bound
add
dec
add
add
xor
add
xor
add
add
add
pop
pop
mov
rorw
cmp
jg
inc
jmp
mov
into
fcomps
fwait
int3
jl
sbb
push
or
pop
push
dec
into
aas
fdivrl
aas
jecxz
push
inc
inc
push
xchg
or
mov
jg
arpl
push
adc
push
stos
inc
adc
pushf
xor
mov
push
aaa
push
in
lret
dec
arpl
mov
jl
dec
jmp
jns
adc
xchg
dec
test
fwait
cmp
push
testl
mov
out
mov
sti
dec
inc
or
cmp
pop
xor
mov
jg
push
rcrb
jecxz
fdivrs
mov
mov
push
addl
arpl
aam
mov
fcoms
pop
cmp
or
aaa
iret
push
dec
fcomps
adc
in
or
sbb
pop
or
inc
add
xchg
loopne
mov
loop
adc
xchg
rcrb
mov
push
je
js
cmpsb
imul
sbb
mov
cmp
fildll
pop
xor
jl
inc
mov
arpl
cs
sbb
in
ja
leave
or
in
jb
adc
aam
dec
les
arpl
pushf
sbb
adc
xchg
or
idivb
inc
xchg
rcrl
ret
jge
ret
push
add
out
pushf
pop
push
mov
movsl
das
push
jae
call
dec
pushf
xchg
pop
pop
and
aad
mov
dec
into
or
fwait
sub
ja
adc
xchg
mov
popa
scas
test
lods
xor
jb
add
mov
mov
hlt
xchg
mov
movd
stos
or
push
jae
sbb
insb
adc
out
inc
inc
mov
das
ljmp
sub
sbb
out
inc
rol
inc
stos
aas
push
pop
jl
jmp
iret
xchg
hlt
xlat
and
sub
sub
in
fs
insb
stc
mov
jecxz
addb
push
clc
fcoms
or
mov
loopne
push
mov
jo
repnz
jns
dec
mov
shll
aam
push
pmulhw
push
out
xor
push
pusha
mov
mov
psubw
dec
pushf
push
push
pop
in
add
inc
pusha
stc
xchg
adc
xchg
clc
cwtl
sbb
call
push
push
adc
sbb
cmp
inc
test
xchg
pusha
xchg
mov
andl
xlat
enter
inc
lods
push
movsl
pop
dec
push
push
loope
push
or
arpl
mov
push
aad
jmp
mov
test
inc
in
sub
lret
aaa
mov
cmpsb
mov
negl
mov
aas
movb
jno
and
push
xchg
mov
adc
mov
aad
fadds
test
addb
arpl
jg
add
ret
xlat
jo
sbb
or
mov
je
dec
cmp
adc
out
add
jne
aaa
test
outsb
cmp
jle
or
jbe
jb
gs
or
push
fisttps
mov
or
pop
jg
push
mov
addl
push
mov
clc
cmp
scas
adc
adc
sub
and
xor
adc
stc
inc
sahf
mov
sub
sub
jecxz
nop
popf
lret
inc
pop
jge
popa
push
xor
outsb
inc
push
pop
dec
push
andb
scas
xor
sahf
add
sbb
je
andl
add
inc
nop
inc
sub
enter
repz
jbe
push
pop
mov
nop
mov
gs
xor
or
stos
adc
outsl
mov
mov
pop
call
dec
push
lret
pop
and
int
movsb
lods
ja
mov
xor
loop
add
cmp
repz
out
push
icebp
jb
vandnps
rcrb
add
frndint
adc
push
loopne
pop
xchg
pop
imul
adc
xor
outsl
or
xor
outsl
lods
inc
fimuls
xchg
sahf
adc
mov
aas
movsb
jnp
arpl
mov
xchg
fsubp
inc
pop
pop
andps
arpl
call
jl
xchg
in
loope
cmp
shl
mov
push
fdivrl
je
rclb
inc
xchg
arpl
lea
inc
cmp
mov
push
mull
add
jmp
pop
xor
cmpsb
push
lds
and
and
jns
and
or
popf
mov
xor
xorl
xchg
and
cmp
adc
pusha
push
cmp
push
int3
mov
pusha
pop
xchg
inc
adc
or
or
jns,pt
sub
pop
sub
xchg
sbbl
pop
add
lret
les
cwtl
gs
les
mov
in
push
lods
movsl
jns
jg
or
loopne
es
std
or
dec
mov
mov
loopne
mov
call
adc
sub
push
addr16
xor
lods
or
out
push
bound
cmp
cmp
xlat
sbb
adc
inc
fstpt
stc
pushf
sbb
sbb
inc
ss
xor
lcall
dec
rcrl
xchg
xor
lods
in
les
mov
arpl
jmp
hlt
loop
mov
push
pusha
mov
pop
stos
mov
cmp
jle
aas
mov
xchg
bound
mov
movsb
push
incb
xchg
and
lret
mov
fdivrs
shlb
ljmp
cmp
jle
outsl
adc
ljmp
in
xchg
xorb
adc
movsl
or
mov
cmpsl
push
cwtl
cmp
dec
out
sub
mov
push
cmp
clc
jg
jo
and
dec
adc
sbb
pusha
pop
add
test
sarl
xor
clc
adc
xchg
movsb
es
aam
push
sbb
lcall
cwtl
push
aas
stc
xor
hlt
sbb
mov
jecxz
dec
daa
in
xor
cwtl
cmp
cltd
mov
cwtl
adc
jns
aas
push
add
add
cmp
mov
cmp
notb
jns
flds
pop
lret
add
push
push
pop
push
pop
das
push
push
inc
mov
xor
mov
mov
aam
orl
xor
cltd
ljmp
dec
or
sub
cmp
mov
std
test
outsb
dec
inc
pop
adc
ficoml
dec
pop
jl
movsb
sti
jge
push
lcall
jbe
xor
cmp
je
mov
xchg
pop
jmp
jmp
pop
hlt
test
jl
jmp
fdivrs
push
lahf
dec
push
mov
adc
inc
inc
je
jae
jmp
jl
fildll
filds
cs
sub
call
sar
scas
lahf
test
stos
aad
add
inc
mov
mov
stos
push
sub
repz
sbb
xchg
insb
lods
mov
fucomip
xchg
add
stc
add
test
fnsave
or
adc
mov
mov
mov
sub
add
mov
inc
inc
xchg
jae
lret
into
dec
decb
outsb
push
add
call
mov
xor
jp
js
and
jne
aas
jnp
jp
inc
mov
dec
xlat
hlt
test
aaa
iret
mov
rclb
outsb
gs
mov
dec
cmp
fldenv
and
rcrl
lret
popa
fadds
adc
sbb
cli
fs
mov
mov
cs
pusha
ret
lret
inc
mov
lock
xchg
fmulp
jecxz
leave
imul
adc
in
add
add
or
in
dec
push
shrl
jb
fisubrl
and
aam
int
out
lods
addb
mov
test
fidivrs
aas
xchg
scas
pop
inc
pop
movsl
dec
cmp
pop
lds
enter
scas
mov
negl
stc
cltd
mov
call
cli
in
addb
cmc
pop
test
fwait
cmp
dec
call
jmp
mov
mov
jl
call
cmp
mov
xchg
rolb
adc
jns
stc
cmc
das
jno
js
gs
lods
outsl
pop
push
lret
xchg
inc
scas
cmp
pop
repz
icebp
add
sahf
cmp
push
sbb
inc
in
jge
push
rcrb
ret
scas
adc
sahf
pop
push
push
cmp
adc
add
jmp
mov
xor
stc
orb
add
js
mov
gs
push
pop
in
gs
pop
pop
pop
mov
test
inc
cmp
js
mov
jne
rorl
out
pop
inc
fisubrl
add
mov
testb
cmp
pop
mov
jne
inc
cmc
jmp
dec
jmp
out
lock
jne
cmp
jle
or
das
ja
add
cmpsb
repnz
arpl
cmp
mov
outsl
pop
mov
push
push
data16
sbb
jl
ja
aad
adcb
pushf
xchg
mov
xchg
stos
or
iret
mov
aaa
jle
add
ficoml
add
gs
sahf
jge
int3
adc
mov
les
add
xchg
ret
adc
mov
sub
dec
loopne
addb
arpl
in
mov
jl
ret
sti
in
inc
lret
ljmp
cmp
mov
jo
push
pop
xor
sbb
outsl
jle
fs
arpl
sbb
mov
cmpsl
inc
lret
or
testb
jle
sbb
push
cmpsb
sub
and
loop
jl
cmp
push
jo
int3
mov
jnp
rorb
in
sbb
aas
ret
jge
gs
pushf
fmul
fadd
fcompl
lods
jnp
lret
xchg
cmp
and
mov
sti
jp
add
popa
push
shl
mov
and
pop
xorl
add
mov
popa
and
mov
xor
lret
adc
out
inc
popa
icebp
xchg
orl
lods
dec
mov
aad
ret
adc
adc
repz
cs
xor
push
ret
add
add
add
push
add
add
add
add
add
add
add
imul
add
add
add
imul
add
add
add
jns
add
popa
add
add
inc
add
xor
dec
popa
outsl
add
add
add
add
add
add
add
add
add
add
aaa
add
cmp
add
insb
add
add
add
add
aaa
push
add
bound
add
dec
add
xor
add
add
add
arpl
add
imul
add
add
inc
jns
add
push
add
add
add
xor
add
cmp
add
add
add
add
add
add
add
add
xor
add
add
jb
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
dec
add
jo
add
add
add
imul
add
outsl
add
push
add
add
add
inc
add
add
inc
add
add
xor
add
add
add
add
add
add
add
insb
add
aaa
add
jns
add
dec
add
jbe
add
add
add
je
data16
add
add
add
add
dec
add
push
add
add
jne
add
add
add
add
add
add
insb
jb
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
inc
add
cmp
data16
add
pop
rclb
xor
cmp
pop
mov
mov
push
das
mov
ja
push
lods
mov
mov
into
cld
mov
rorb
mov
fmul
lds
mov
and
test
cmp
add
loop
adc
mov
dec
jl
out
pop
dec
cli
xor
addr16
inc
repz
lret
stos
ret
mov
loop
jle
mov
mov
scas
mov
or
lock
xlat
ja
push
shlb
and
xor
iret
aad
rol
jg
xor
mov
out
negl
lock
dec
cli
cld
push
addr16
mov
ljmp
ror
clc
cli
outsb
cld
loope
cmp
or
add
dec
leave
loop
scas
jo
bound
fidivrl
leave
repnz
or
sbb
bound
stc
inc
iret
push
mov
jl
mov
lcall
scas
in
das
loop
sbb
sti
insb
jne
pop
mov
adc
pop
les
lods
jno
and
and
jo
loop
dec
and
or
out
outsl
pop
sub
scas
iret
andb
scas
or
stos
outsb
shlb
stc
or
mov
cli
mov
xor
shrb
pop
bound
loop
ljmp
scas
sub
je
int3
sti
sub
jb
ret
addr16
enter
mov
es
mov
dec
stc
mov
imul
jp
stos
ljmp
push
jp
add
divb
scas
ret
stc
cmpsb
iret
pushf
mov
jle
push
bound
cs
mov
or
scas
out
bound
sarb
leave
lcall
bound
jb
push
loop
stc
es
xor
push
scas
jo
popa
in
ljmp
or
xchg
mov
push
scas
pop
ljmp
jns
xchg
loop
mov
bnd
sub
adc
loop
hlt
lret
scas
fdivrs
and
enter
jo
pusha
dec
mov
xor
jae
inc
imul
jp
add
je
adc
scas
jp
leave
loop
stos
ror
sub
mov
pop
cli
sarb
add
cmc
bound
pop
call
jo
movsl
or
mov
addr16
test
stc
lods
pop
std
data16
mov
ja
ret
call
in
out
add
ret
mov
insb
repz
leave
popa
call
cmp
or
test
mov
jns
mov
cwtl
repnz
jecxz
or
add
jo
in
in
inc
lea
dec
sbb
mov
rcr
xchg
lret
lret
add
xchg
in
sub
imul
cmpsl
add
inc
into
dec
push
sbb
int3
les
out
addr16
push
mov
imul
and
sti
in
ljmp
mov
jbe
int3
add
lds
xchg
sbb
cmp
movsl
fsubrl
leave
lock
or
add
mov
int
nop
idivb
fs
mov
inc
xor
adc
mov
xchg
loop
xor
pop
pop
psrlq
cwtl
jb
mov
push
rolb
mov
loop
add
xor
xor
jne
dec
in
in
push
loop
cmp
push
ret
mov
adc
xor
or
ds
and
add
mov
out
add
inc
cmp
sub
cwtl
sub
dec
popa
add
cmp
in
test
jno
out
imul
idiv
add
shll
xor
iret
and
xchg
dec
ret
jnp
pop
xchg
clc
fmul
pmuludq
shl
pop
lcall
testl
loop
sti
call
in
scas
cmc
mov
stc
arpl
sti
in
dec
jecxz
repz
mov
adc
push
or
jecxz
xchg
mov
push
push
call
add
jecxz
or
lds
cwtl
mov
popa
je
arpl
fsub
jo
mov
jp
mov
dec
loop
sbb
sbbl
roll
lock
test
jnp
std
in
mov
mov
add
push
outsb
loopne
cmp
or
ss
bound
loop
into
and
imul
ds
or
xor
icebp
add
movsl
ret
pop
inc
sbb
in
inc
sarb
fadds
push
lcall
out
jnp
aaa
push
hlt
fisttpl
mov
mov
and
dec
add
ffreep
in
add
js
int3
imul
subl
push
pop
add
and
mov
aad
rcpps
gs
pop
jle
add
jmp
ljmp
or
jb
ret
add
add
dec
sbb
inc
loop
lock
or
pop
fcmovb
clc
loop
je
cmpsb
add
adc
mov
lret
sub
testb
outsb
call
jnp
xchg
popf
iret
add
jge
jbe
ja
mov
fcompl
xchg
jmp
out
add
in
mov
call
push
or
in
mov
int
shl
mov
imul
dec
sahf
hlt
rolb
cmp
add
ljmp
in
fs
movl
jmp
sub
fsts
push
pushf
mov
add
aaa
sarl
jne
mov
out
jp
call
push
add
mov
insb
push
and
es
repnz
movsb
ficoml
pop
in
add
mov
xchg
add
cld
jge
jae
sahf
xchg
mov
movsb
or
cmpl
adc
in
in
jb
jnp
dec
mov
add
jecxz
xchg
add
cmp
and
mov
mov
ljmp
or
pop
add
adc
cmp
imul
mov
inc
lds
out
repnz
mov
or
add
mov
add
jne
testl
mov
inc
iret
std
hlt
pop
in
lret
insl
in
mov
test
push
ljmp
aam
les
mov
cmp
fidivl
les
push
cmp
mov
mov
ds
int3
ret
mov
mov
je
pop
dec
ss
inc
mov
sub
push
icebp
out
and
jmp
filds
sar
inc
cltd
fldt
cmp
mov
outsl
add
shll
loop
jg
ljmp
psubsw
jns
mov
ljmp
push
sub
sbb
pop
aad
mov
sti
pop
mov
into
sarb
lret
jnp
sti
mov
imul
pop
push
sbb
pusha
or
add
jmp
imul
sub
in
push
stos
pusha
mov
jg
mov
cmp
mov
jmp
dec
dec
mov
data16
or
idivl
addr16
add
addr16
mov
outsl
loope
sbb
mov
dec
jo
pushf
push
out
call
lret
fistpl
xlat
in
out
or
sar
dec
fwait
lds
enter
out
sti
sub
sbb
enter
dec
pop
xchg
les
cmp
jmp
xor
pop
push
popf
adc
pop
leave
rol
shr
jmp
sti
mov
jnp
cs
int3
cmp
pop
icebp
popa
mov
dec
ljmp
sub
nop
add
dec
stc
lea
lods
xchg
cmp
sbb
cltd
sti
inc
lahf
dec
stos
cmpsb
into
arpl
imul
in
pop
testl
inc
lods
pop
mov
mov
out
mov
and
pop
bound
test
in
xchg
xchg
loop
lahf
das
sbb
adc
add
cwtl
xchg
fsubr
xor
xor
mov
mov
addr16
add
js
mov
aaa
sub
push
inc
jno
cmc
add
push
add
mov
jo
jecxz
int
push
das
jmp
push
pop
inc
loope
fsubrp
mov
or
cmpb
test
in
pop
adc
push
add
mov
pop
mov
sbb
test
mov
insb
lret
idivl
jbe
or
popf
sahf
es
gs
mov
sbb
pushf
add
sar
std
jno
pop
dec
in
mov
xor
xchg
fimull
shlb
dec
ja
adc
or
popf
push
push
and
and
sub
add
mov
xchg
xchg
sbb
lcall
or
je
popf
adc
lods
mov
add
xor
les
lret
mov
shlb
add
rclb
cmc
add
cld
jmp
sti
lret
mov
cmp
ss
mov
imul
add
jp
cmp
cltd
or
jbe
mov
imul
dec
cwtl
push
cmc
push
add
das
push
cmpsl
rol
add
roll
ret
loop
sti
cmp
jae
jmp
mov
and
lret
xchg
mov
enter
lret
add
loopne
call
out
shlb
jg
roll
pushf
aad
inc
call
pushl
aas
fisttpl
sub
fcoml
int3
add
pusha
aas
ficoml
add
test
test
and
adc
jle
mov
sti
out
mov
sub
cmp
add
lods
cmp
pusha
mov
and
and
push
insl
mov
add
ja
xchg
jmp
lds
add
insl
inc
insb
ja
cmp
pushf
mov
sbb
int
xor
jecxz
clc
js
fildl
pusha
adc
rcrl
arpl
xchg
xchg
cmp
adc
arpl
scas
pop
enter
jecxz
lods
add
loopne
nop
stos
lds
call
fwait
xchg
call
push
ret
fildll
inc
or
pop
je
mov
push
imul
add
jae
add
push
add
add
js
add
xor
xor
add
add
add
add
add
add
add
add
add
add
jbe
add
jno
add
add
add
add
add
add
imul
add
add
push
add
add
inc
jne
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
jo
push
add
add
add
jb
add
add
add
xor
add
add
jbe
jns
add
pop
add
jno
add
add
xor
add
js
add
add
add
add
add
add
add
add
insl
add
add
inc
ja
add
add
fs
dec
add
add
add
add
add
add
add
pop
add
add
push
add
add
inc
add
add
add
add
add
add
dec
pop
add
jae
add
js
add
add
add
ja
add
add
add
add
add
add
jp
add
add
ja
add
add
arpl
add
dec
js
add
cmp
add
add
add
push
arpl
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
cmp
add
add
add
add
popa
add
add
je
add
push
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
outsb
add
inc
push
add
add
add
dec
dec
add
add
add
add
add
add
dec
add
and
or
xor
mov
xchg
jae
in
mov
bound
inc
in
into
ret
cltd
adc
out
cmp
adc
mov
cwtl
icebp
fisttps
xor
loop
outsb
pop
in
sbb
fimuls
cmc
loopne
pmulhw
rorb
call
into
aas
fs
lret
mov
sbbl
loop
idivb
test
jae
call
sbb
or
pop
push
pop
mov
gs
sub
xchg
sub
inc
xor
or
ficoml
rolb
lret
mov
mov
dec
adc
je
scas
sbb
dec
cwtl
inc
ss
cs
push
adc
and
rorl
jbe
add
loopne
push
cmpl
aaa
pop
dec
call
and
out
aam
lods
push
js
int3
sbb
jno
mov
jecxz
loop
inc
mov
fdivp
pushf
adc
push
adc
movsb
movsb
repz
xchg
fwait
movsl
adc
cmc
cmpsl
mov
pop
in
test
int3
je
xchg
pop
unpckhps
push
sbb
pop
repnz
sar
jne
inc
aaa
fcoml
push
xlat
jbe
jo
aaa
popf
cmp
sub
push
lcall
clc
cs
popa
in
std
add
stos
adc
push
mov
call
addl
pop
push
jne
imul
push
and
in
jne
push
lock
push
loop
hlt
jno
orb
sub
push
sbb
cmp
cmp
mov
std
cmpl
xchg
stc
or
test
mov
mov
dec
out
pop
shl
lcall
lods
push
mov
iret
adc
mov
mov
push
repnz
cmp
lods
scas
std
imul
adc
xlat
pop
and
jge
mov
add
popf
jl
dec
push
sbbb
xor
jbe
popl
aam
mov
ja
int3
sub
bound
scas
sahf
std
insb
je
int3
fucomip
cmp
outsb
push
repz
notb
sbb
sub
inc
cli
push
jmp
jecxz
imul
dec
push
inc
imul
jnp
pop
lret
scas
push
adcl
sar
push
popa
dec
pop
jbe
loop
push
jnp
cld
imul
int
jp
mov
stos
repnz
mov
scas
rol
mov
imul
pop
cmp
push
test
mov
add
daa
dec
pop
pop
lcall
mov
jp
sub
lahf
imul
xchg
jns
cltd
mov
mov
lods
imul
cmp
rolb
insl
je
cld
ret
cmpsl
mov
cli
jp
repnz
loop
adcb
cmpsl
xchg
lea
shll
mov
fsubrl
icebp
popf
xor
mov
loope
and
mov
int3
lea
cmp
test
or
lods
lds
mov
lea
pop
mov
inc
adc
imul
push
dec
sbbl
sub
push
decl
mov
sti
and
add
pop
inc
or
leave
sub
stos
xchg
sti
push
inc
insb
inc
and
loopne
ret
aas
fstpt
aad
cmp
out
lahf
sti
pop
decb
ret
les
aad
mov
imul
sbb
loop
lods
das
insl
mov
ss
pop
into
cltd
jae
inc
les
daa
xchg
dec
lret
and
xlat
addr16
push
ja
jmp
lea
dec
test
lret
inc
cmp
push
cmp
imul
push
push
sbb
push
pop
movsl
adc
or
andw
push
aad
push
loop
mov
jecxz
mov
stos
in
out
cmp
fdiv
mov
pushf
xor
jmp
sahf
cmp
std
pop
mov
loop
jle
push
nop
das
cmpsl
mov
aam
in
les
nop
mov
xchg
aad
and
add
push
mov
sahf
jge
aad
test
stos
push
xor
pusha
dec
fs
fldt
ja
xor
xchg
lea
adc
jmp
lret
dec
rcrb
cmp
sbb
xchg
inc
out
repz
jmp
jle
jge
mov
ret
or
fstpt
mov
push
dec
mov
js
lret
mov
js,pn
aam
jl
inc
cli
or
push
lret
and
push
push
sbb
cmp
push
sbb
mov
mov
lock
scas
test
pop
jl
jl
adc
jbe
or
shll
ffreep
test
add
mov
fisubrl
jge
mov
lods
adc
lea
ret
sbb
xor
sarb
loopne
fs
push
mov
mov
loop
mov
js
add
sub
jbe
or
cmpsl
push
arpl
mov
ds
or
jl
inc
mov
mov
cmpsb
popf
jl
adc
mov
fstl
outsl
cmp
sbb
lahf
lods
cli
je
in
push
pop
jl
dec
fsubrp
dec
mov
outsl
cmp
push
ret
adc
pop
ret
int3
xchg
pop
iret
mov
pop
aad
push
pop
sbb
push
cs
xchg
mov
xor
mov
lods
std
mov
push
mov
lock
aaa
bound
xor
push
push
jnp
imull
pop
inc
rclb
jle
or
ljmp
pop
aam
pop
push
mov
cltd
jge
mov
mov
push
or
subb
fnstsw
ret
adc
popa
or
push
stos
sbbb
pop
add
xchg
mov
dec
or
fstpt
lock
or
pop
call
xchg
mov
sub
xchg
lds
or
leave
sahf
jb
movsb
fldl
in
push
mov
xlat
lea
popa
loope
mov
jmp
lret
and
test
jecxz
xchg
push
push
insb
arpl
pop
arpl
jno
xor
test
cmpsl
sbb
push
insl
outsl
std
or
mov
pop
mov
sbb
push
mov
int3
leave
ret
lea
movsl
popf
lret
mov
mov
jbe
sub
movsb
sahf
mov
into
pop
mov
dec
xor
out
lock
cmp
jne
leave
enter
scas
mov
std
lret
and
adc
add
push
movsb
pop
lahf
lea
push
push
scas
xor
xor
inc
movsb
in
leave
mov
outsl
movsl
adc
loope
sbb
push
jne
mov
out
movb
cmp
dec
mov
cmp
push
inc
cmp
je
cs
pop
xor
adc
ss
sbb
pop
adc
bsr
pop
in
cli
fsubrl
lret
cli
aad
mov
mov
inc
andb
and
out
mov
xchg
or
jl
int
stc
mov
sahf
and
sahf
cld
dec
in
mov
mov
sbb
je
lea
stc
int3
push
ret
push
outsb
xor
xchg
sbb
sti
rcrl
mov
xchg
mov
outsl
jns
xor
or
movsb
add
pop
inc
ret
or
sbb
sbb
dec
xchg
or
jnp
faddl
push
stc
call
inc
loopne
aam
push
sbb
adcb
add
jl
cmp
or
mov
das
ret
mov
sti
fldcw
loope
cmpb
outsl
mov
inc
mov
insl
data16
insb
jne
mov
mov
andb
lret
mov
test
sbb
je
jp
dec
xor
stos
mov
mov
push
push
scas
push
mov
adc
lock
fdivrs
pop
pop
xor
inc
inc
mov
pusha
and
or
jne
dec
add
bound
mov
sahf
and
and
rcr
sbb
inc
cmpsl
and
sub
cmp
adc
call
scas
mov
out
call
push
iret
movsl
iret
inc
push
adc
pop
sbb
into
int3
mov
aad
mov
in
imul
add
mov
into
mov
lahf
rolb
jae,pn
je
flds
jmp
pop
sahf
push
aas
iret
lret
imul
ret
test
jl
bound
lcall
lret
ds
stc
cmpb
xchg
leave
jmp
jge
and
mull
ret
push
sbb
call
das
lahf
sbb
imul
repz
ljmp
dec
add
sahf
or
ds
pusha
in
cwtl
outsl
std
mov
insl
int3
mov
and
inc
fs
adc
pop
xchg
cmp
mov
mov
cmp
jmp
xor
xchg
cmc
gs
call
dec
mov
push
mov
sbb
pop
mov
jae
mov
inc
sbb
cmp
iret
je
aas
jecxz
and
pop
adc
idivb
add
jmp
push
push
push
cltd
and
push
bswap
test
loop
push
push
aaa
dec
sbb
imul
jl
arpl
push
cmp
or
imul
mov
pop
adc
call
fdivrl
not
lods
mov
adc
xlat
sti
imul
mov
inc
testb
jne
jae
and
ret
sub
pushf
jbe
repnz
mov
add
addr16
imul
mov
bound
adc
lret
mov
les
fcos
je
pop
pusha
sbb
xchg
jmp
je
fwait
mov
in
mov
lcall
imul
xchg
pop
cwtl
jno
je
repnz
dec
in
test
xchg
xchg
jge
cmp
pop
mov
outsl
adc
or
adc
pop
or
cld
ror
add
inc
cmp
push
mov
sbb
mov
mov
cmpl
inc
cmp
sub
jmp
shlb
insb
pop
inc
add
pop
add
pushf
stos
cltd
mov
inc
dec
shr
xorb
in
repz
jle
divb
fistpll
mov
mov
or
pop
inc
add
add
add
add
inc
inc
add
add
dec
add
imul
jo
add
add
add
add
add
add
jp
push
add
jno
add
inc
add
add
add
xor
add
add
add
jp
add
inc
add
add
add
imul
add
add
js
add
outsb
add
add
inc
push
push
add
inc
add
dec
add
pop
add
push
data16
add
add
push
add
add
add
add
add
bound
add
add
add
add
inc
xor
add
add
xor
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
add
imul
add
add
add
inc
dec
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
push
pop
inc
push
xor
inc
add
add
arpl
add
add
add
add
jbe
js
add
add
add
inc
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
insl
jns
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
arpl
add
jp
xor
jo
push
add
add
dec
add
add
add
insb
add
add
add
add
jns
add
add
add
add
add
push
add
add
add
add
add
xor
add
add
cmp
add
add
add
add
xchg
mov
and
shlb
scas
jmp
push
jle
adc
push
aaa
call
adc
jmp
fiaddl
test
rcll
outsl
jp
in
popf
shr
add
xchg
outsl
adc
dec
sti
shrb
push
mov
movsl
cmp
imul
and
jecxz
mov
fists
jns
pop
mov
lret
scas
cmpsb
jb
xchg
cmpsb
test
inc
aam
aam
or
rolb
and
test
arpl
mov
add
cmovno
mov
out
fstps
insb
mov
mov
fwait
mov
int3
mov
push
mov
outsl
in
and
jbe
outsl
scas
xchg
jb
mov
fnstenv
mov
mov
insb
test
xor
sub
pop
xor
jle
cmp
inc
push
adc
jmp
das
adc
jl
push
jb
and
adc
jmp
dec
repz
aaa
loop
sub
cld
jno
sarb
dec
aaa
cmp
outsl
dec
loopne
mov
push
xor
cmp
add
in
dec
add
adc
subb
ret
imul
jecxz
add
ljmp
mov
pop
pop
cld
test
mov
mov
mov
pushf
imul
sbb
push
cmp
pop
je
cmp
mov
iret
xchg
mov
enter
jnp
mov
imul
out
lock
sbb
enter
adc
sbb
stos
mov
outsl
scas
shlb
cmp
lret
test
jne
out
cmp
inc
stos
inc
insl
test
mov
mov
xor
pushf
aam
fsubrs
gs
xor
jmp
sbb
xor
hlt
sbb
cld
pop
nop
out
lcall
nop
mov
or
loopne
repz
push
repnz
std
sub
out
mov
mov
push
jbe
adc
or
call
or
out
cwtl
cld
loopne
call
inc
pushf
fildll
mov
cltd
mov
bound
sbb
or
test
adcb
jg
mov
mov
adc
xor
je
das
dec
in
xor
inc
push
daa
add
arpl
dec
sub
int3
movsb
loopne
cmp
push
adc
decl
jns
sub
out
jo
addr16
or
stos
or
inc
in
adc
push
xor
sbb
mov
adc
inc
adc
lea
repz
mov
inc
mov
not
pushf
ror
popf
movsl
dec
lret
jnp
arpl
jecxz
mov
stos
bswap
shrl
mov
push
inc
sub
mov
fst
mov
mov
fptan
cmp
adc
cmc
mov
or
mov
test
adc
lret
mov
popf
decl
dec
lret
or
scas
loop
pop
pusha
push
mov
fidivrs
sahf
dec
sahf
sub
and
ja
mov
xchg
jnp
gs
add
mov
gs
outsl
push
inc
and
loopne
adc
stc
inc
mov
fs
scas
dec
in
sahf
addr16
aam
inc
pop
xor
mov
pop
jl
cmp
push
in
ret
or
xor
push
test
popf
adc
frstor
dec
out
or
push
fsubl
xor
fiadds
sti
shll
add
lcall
int
or
mov
and
aad
push
and
pusha
inc
insl
push
les
fs
add
int3
mov
lods
push
jl
jmp
dec
or
int3
ret
les
inc
push
sub
push
jmp
cmpsl
fistps
jp
or
fidivrs
bound
fistpl
test
bound
ret
insl
ja
jecxz
bound
mov
dec
stos
jmp
mov
arpl
arpl
sub
ret
jge
pop
pop
xchg
lods
pop
mov
push
inc
or
jg
dec
fdivr
je
lods
dec
rorb
cs
push
std
aas
ds
bound
pop
pop
call
movsb
inc
jge
adc
lock
call
push
js
jns
loopne
movsl
aaa
clc
or
cmp
inc
or
loope
mov
jne
xor
bound
rcll
mov
out
enter
cld
inc
sti
jo
aam
leave
inc
adc
cmp
movsb
call
mov
leave
dec
mov
out
or
add
bound
mov
xchg
call
mov
stc
xchg
arpl
incl
mov
xchg
lcall
dec
aaa
cmp
scas
aaa
and
and
or
lahf
adc
das
in
push
jno
cli
jecxz
and
mov
sbbb
popa
test
xor
adc
lock
cld
inc
or
jns
clc
cmp
repnz
pop
push
ret
outsb
and
lds
mov
arpl
mov
xor
lds
lahf
pop
jge
cmp
add
mov
or
cltd
clc
xchg
or
push
cld
call
push
aam
jnp
dec
adc
fisttps
mov
adc
xchg
mov
call
fstpt
dec
aam
push
sbb
les
cmc
push
scas
aam
stos
inc
cmp
dec
int
pop
enter
inc
inc
push
test
dec
pop
adc
pop
lret
pop
pop
outsb
lret
cmp
mov
push
mov
lcall
pop
pop
and
push
addr16
pop
inc
push
push
jnp
pop
leave
mov
mov
sbb
fsubrl
mov
sti
pop
push
pusha
xchg
xor
mov
pop
mov
pop
fsubp
mov
pusha
mov
sub
xchg
aam
mov
add
push
push
sub
shrl
imul
mov
inc
mov
stos
mov
loopne
sub
pop
cmp
mov
ss
push
mov
sarl
js
lahf
ror
xchg
jne
pop
dec
cld
faddl
sahf
stc
push
jb
addr16
notb
in
movb
cmp
rorl
mov
inc
mov
call
in
rep
data16
mov
xor
scas
jg
mov
lcall
mov
std
adc
inc
push
mov
mov
or
jmp
jge
fdivr
cld
call
mov
pop
inc
push
push
mov
icebp
ja
andl
ret
push
rolb
xor
push
push
mov
ficoms
pop
inc
inc
jo
jge
mov
aaa
or
iret
pop
sti
jl
and
push
fxch
iret
stos
in
cmc
mov
shll
cmp
jno
xchg
add
sbb
jecxz
ret
mov
daa
xchg
pop
inc
mov
test
jne
dec
push
jne
test
push
cwtl
mov
sbb
xor
pop
test
mov
jge
hlt
aad
pop
xchg
cmpl
jmp
and
mov
push
xor
cld
pop
dec
fsincos
jge
cmp
loopne
bnd
dec
push
mov
mov
adc
es
pop
pop
xchg
xor
ss
lods
pop
cmp
mov
and
xlat
out
inc
pop
scas
pop
mov
insl
and
add
pop
shl
mov
stos
add
rorb
lret
jp
movsb
or
je
mov
jnp
push
sbb
dec
push
pop
adc
mov
outsb
rorb
inc
call
mov
jno
cli
icebp
fdivr
fsubs
xor
push
addl
or
mov
pop
stos
xorb
xor
pop
add
fbstp
rcrb
stc
clc
loope
aam
xor
fstps
imul
sbbl
dec
add
cmc
test
aad
lret
pop
jbe
xor
sbb
and
lcall
les
pushf
int
push
fmuls
aaa
enter
lea
negb
daa
clc
mov
lds
sbb
inc
lods
fidivs
loopne
push
xor
dec
imul
lret
frstor
data16
orb
cmp
push
jl
add
cli
mulb
mov
fsubrs
push
dec
jns
sub
in
movl
das
pop
sbb
add
or
push
call
hlt
sarl
dec
shr
fmuls
inc
negl
cmpsl
jns
push
xor
or
pop
push
add
dec
lock
jne
pop
icebp
xor
lock
jns
in
fsubs
or
aad
jle
lret
clc
sub
pop
mov
xor
fxrstor
xchg
jp
mov
cmp
push
imul
stos
cmc
mov
push
or
xor
mov
jno
aad
mov
and
pop
lahf
lahf
cmpb
rcll
sti
pop
cmp
int3
je
data16
rolb
push
mov
xor
addl
or
push
push
movsl
hlt
adc
sub
popa
sbb
jge
jne
cmpsb
sub
jle
xor
test
cmp
push
push
into
icebp
xchg
outsl
enter
jmp
in
arpl
int3
adc
shlb
jnp
outsl
pop
and
jmp
inc
into
test
ja
dec
inc
push
inc
dec
outsl
lock
shr
rep
xchg
pop
mov
sbb
push
mov
jg
sub
test
jmp
incl
loope
inc
xor
sbb
add
test
es
jne
into
mov
add
sbb
xchg
aas
fwait
inc
loopne
dec
pushf
icebp
notl
adc
in
xor
aaa
ljmp
loop
pop
rorb
xor
add
shl
fstps
leave
and
popf
cmp
je
lea
imul
out
mov
push
notb
aad
or
insb
and
movsl
or
mov
push
int
mov
loopne
fistl
jge
push
xor
ret
std
mov
push
call
ret
cmp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
bound
insl
add
add
add
add
add
add
add
popa
add
add
add
je
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
cmp
add
add
dec
add
add
add
add
add
add
dec
add
add
insl
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
outsl
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
push
add
add
add
outsb
add
xor
add
jns
add
imul
add
add
add
add
push
add
add
add
add
add
add
add
insb
outsb
push
add
add
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xor
jbe
add
pop
add
add
bound
add
add
push
xor
bound
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
jae
add
pop
add
dec
add
add
inc
sahf
out
test
and
cmp
adc
lcall
movsb
sbb
mov
add
cmp
jae
push
cmc
dec
out
xlat
pop
fimull
fnstenv
shrl
xchg
mov
mov
repnz
js
scas
fldenv
inc
mov
insb
cvttps2pi
lret
fistl
nop
imull
mov
sub
mov
shrl
push
movsl
mov
adc
inc
push
iret
mov
mov
push
adc
pop
push
cmovns
cmp
rclw
add
push
cmp
in
or
jne
jmp
cmp
dec
icebp
adc
repz
into
ret
mov
cmp
push
out
mov
cld
sub
pop
jne
mov
jmp
notl
and
sub
sti
mov
les
cwtl
rcr
pushf
pop
scas
sub
je
mov
push
lea
inc
adc
mov
je
and
mov
out
add
mov
test
pop
mov
inc
jns
mov
xor
repz
xchg
gs
clc
test
mov
push
sti
rclb
arpl
or
jl
jmp
dec
test
xor
pop
je
dec
mov
sar
push
loop
mov
xor
dec
adc
mov
push
imul
jle
cmp
inc
rorl
and
sbb
push
and
hlt
ror
push
sub
xor
xchg
inc
push
lods
imul
enter
and
sbb
bound
adc
push
xchg
in
adc
or
fcom
and
ljmp
push
add
push
mov
leave
shl
js
adc
push
rcr
add
mov
sbb
dec
sbb
or
lea
push
jmp
push
mov
sbb
jp
idivl
inc
cs
jne
loope
pop
cli
dec
loop
pop
ficompl
test
call
rorl
mov
xchg
sub
jnp
bound
add
sti
cmp
inc
sahf
movsb
enter
insb
inc
dec
pop
jns
out
sti
mov
dec
mov
add
mov
fidivl
fimuls
int
movsl
push
jl
aaa
pop
lods
add
dec
adc
orb
lret
xchg
out
gs
push
setbe
nop
push
popa
call
and
xchg
sbb
std
rcl
rcll
pop
add
clc
rol
pop
pop
adc
dec
lret
jg
movsl
add
sbb
nop
in
push
pop
mov
mov
adc
and
sahf
or
xchg
push
rcll
cmovg
adcb
add
or
stc
sub
jl
xchg
das
faddl
cmp
cmpsb
cmpxchg
pop
imul
sbb
mov
nop
mov
mov
cmp
into
data16
fs
lcall
arpl
in
call
pop
jbe
cmpsl
push
lea
jp
int3
dec
or
rol
movsb
cmpsl
pop
push
sub
jne
mov
rcrl
je
adc
mov
mov
inc
xor
cmp
jmp
sub
cmp
inc
jb
sbb
je
iret
add
shr
cmp
mov
cmp
leave
sbbl
addb
push
iret
push
outsl
cmp
mov
mov
jb
adc
add
push
pushf
mov
sbb
filds
jnp
fwait
lock
les
jns
pop
mov
orb
sbb
clc
ss
and
lds
inc
cmp
push
arpl
sti
sarb
or
clc
movsl
ds
inc
ret
mov
or
cmp
iret
mov
cmp
mov
mov
adc
pop
lea
mov
pop
cmp
jne
push
lods
lea
and
push
jns
jne
xor
mov
push
push
in
movsb
hlt
add
pop
or
scas
int3
inc
pop
pop
cmp
lds
dec
push
cmp
scas
out
stos
fistpl
push
out
dec
cmp
cltd
icebp
jbe
push
mov
in
jg
jle
ret
fnstsw
mov
popa
mov
or
std
imul
out
mov
and
xor
ss
iret
enter
sti
rcll
push
mov
into
les
cwtl
sub
shrl
mov
aas
jbe
stc
and
jnp
fdivrp
lcall
into
push
mov
loopne
mov
xor
jl
pop
xor
popa
push
mov
and
fidivrl
push
nop
pop
loop
sbb
and
pusha
add
ret
shlb
jl
loopne
jle
inc
sbb
cmc
jl
pop
or
loop
testb
orl
mov
insb
jp
or
gs
popa
cmp
mov
incl
shll
cli
lea
and
mov
mov
push
fsub
js
cmp
adc
pop
adc
insl
sub
nop
pop
lahf
pop
repnz
lcall
js
jno
movsl
push
jp
push
cwtl
dec
int
xchg
stc
add
aaa
push
inc
push
les
cmpsb
data16
and
enter
mov
mov
sti
fisttpl
gs
out
mov
mov
mov
push
mov
push
cmc
jp
xchg
imul
imul
shlb
sub
xchg
jle
push
paddsb
push
lcall
enter
loope
inc
sarb
jns
mov
aam
iret
and
jge
dec
pop
sub
sbb
inc
ss
push
cmpsb
loopne
cmp
push
lods
jecxz
icebp
adc
lock
loope
ja
lret
test
jb
sbb
xchg
dec
nop
xchg
hlt
pop
pop
imul
daa
arpl
jle
jecxz
loopne,pt
mov
mov
mov
call
faddl
pop
pop
mov
leave
adc
xor
fdivrs
ds
das
test
xchg
mov
mov
or
jp
mov
or
jmp
xor
pop
test
push
or
add
dec
jecxz
aad
adc
mov
roll
xchg
mov
cltd
mov
ds
fwait
bsr
mov
mov
test
in
cmp
xchg
push
movsb
cmp
push
hlt
lods
xor
sbb
add
add
jl
fisubl
push
or
and
shll
mov
sbb
jecxz
cmp
je
shl
add
inc
ds
stc
and
leave
mov
xchg
pop
and
lret
jno
add
and
jecxz
test
push
lret
sub
pop
cltd
imul
decb
push
jmp
dec
rcll
and
lret
out
pop
movsl
add
mov
jmp
fistps
out
ret
push
call
repz
roll
test
fsts
jnp
repnz
and
jns
cltd
pop
inc
divl
cmpl
mov
adc
jnp
adc
sub
dec
outsb
in
enter
sar
jp
or
jo
sti
lea
inc
aad
call
enter
das
add
push
push
pop
adcl
xor
out
aad
push
jmp
aam
in
push
mov
or
jbe
pop
into
pop
pop
lret
dec
addb
dec
jl
push
hlt
in
inc
pop
mov
push
cmp
repz
jne
mov
sub
and
fldl
adc
inc
or
js
out
adc
and
push
in
adc
clc
clc
adc
hlt
mov
enter
jle
leave
daa
pop
add
add
mov
dec
add
scas
hlt
or
push
mov
jae
shll
outsb
das
jecxz
dec
push
jo
mov
pop
mov
sub
inc
push
in
insl
repnz
clc
ret
cld
dec
push
insl
loop
dec
outsl
mov
push
je
add
inc
filds
adc
stc
imul
icebp
jmp
jmp
mov
jbe
orb
addr16
test
jns
adc
mov
jge
jns
cmp
rol
ljmp
jne
sub
add
sub
sbbb
ds
inc
movsl
push
rcrb
or
out
sub
or
lahf
arpl
mov
loop
mov
das
int3
jo
loopne
es
adc
sub
pop
pushf
mov
pop
dec
and
ret
scas
push
inc
push
push
jp
mov
scas
leave
mov
test
pop
outsb
mov
lahf
loope
mov
in
dec
cmp
add
cli
lods
mov
fwait
inc
je
sub
ss
add
add
mov
add
mov
mov
shll
pop
push
push
call
in
ret
fs
cmp
jge
out
mov
cmp
sbb
aas
imulb
lea
in
nop
testl
lds
push
jnp
mov
test
ds
sti
mov
clc
ret
adcb
xor
lea
mov
shrb
inc
and
adc
gs
dec
cmp
leave
ret
pop
adc
jg
mov
and
inc
add
mov
icebp
shlb
std
inc
or
xchg
nop
pop
push
xchg
subl
out
and
cmp
mov
pop
mov
das
lock
cld
mov
mov
fwait
stos
or
cmc
adc
fldl
sbb
mov
mov
out
int3
inc
mov
rclb
xor
mov
inc
add
jo
int3
mov
mov
test
test
push
xchg
aas
loop
inc
sbb
scas
jl
imull
call
fucomp
push
xchg
subb
mov
xorb
or
out
in
cmp
fimuls
add
push
push
push
outsb
sarb
call
push
sub
lods
pushf
std
aaa
das
imul
push
cmc
sbb
mov
aad
mov
cmpsl
push
pop
fisubrl
scas
call
aas
mov
aam
mov
push
jl
adc
jl
mov
lea
cltd
xchg
add
ret
xor
sbb
inc
sbb
ljmp
add
mov
xor
test
in
mov
gs
fistl
lods
in
dec
popa
push
or
insl
int
fisttpl
outsb
out
test
push
adc
sbb
pop
daa
inc
aaa
out
ljmp
ror
cmp
out
adc
pop
lcall
stos
or
cli
sbb
imul
pop
sti
lods
sbb
inc
dec
aaa
cmp
mov
jge
adc
mov
sbbl
aad
cmp
xor
inc
jle
inc
enter
or
pop
repnz
ret
mov
rcr
repz
dec
jmp
aad
insb
pusha
test
push
rcl
dec
hlt
in
test
adc
lock
cwtl
mov
lcall
dec
out
and
andb
call
scas
sti
fildl
bound
mov
sti
sarl
cmp
inc
sub
ret
scas
adc
adc
arpl
ljmp
sti
jb
jb
cli
add
shrb
jbe
scas
jg
bound
fsincos
lcall
scas
mov
bound
psubw
push
inc
add
mov
jmp
sti
lods
sti
jle
stos
inc
adc
sub
dec
push
cmp
add
cmovl
mov
fwait
leave
ret
and
jmp
lods
fcomps
xchg
rolb
cld
out
cs
test
mov
mov
add
leave
add
sarb
in
in
jp
leave
add
fdivrs
mov
xlat
and
xor
jp
mov
push
mov
or
scas
or
or
js
jecxz
stc
or
out
out
das
test
mov
mov
cltd
aam
fsubl
stc
in
push
arpl
mov
cld
bound
cli
add
mov
sbb
xchg
sub
addr16
xor
xchg
cmp
xchg
inc
addr16
dec
addr16
push
js
cmc
pop
shlb
enter
pushl
jge
xchg
or
xchg
or
pop
jecxz
xor
mov
fstpt
enter
neg
dec
jecxz
jmp
enter
cs
leave
jecxz
ret
mov
cmp
int
ret
push
das
sbb
divl
cli
jnp
or
mov
mov
mov
loop
addb
cli
or
js
inc
mov
mov
leave
sbb
jle
das
mov
enter
sarl
cltd
ja
jb
fadds
stos
mov
xor
int3
fimull
incb
inc
loopne
jp
push
clc
insb
jp
push
adc
test
and
xor
xor
enter
jmp
ljmp
push
ret
nop
pushw
xlat
mov
add
loopne
shl
jg
fistpl
xor
arpl
or
sbb
fdiv
and
stc
jo
jp
and
ud0
mov
cmc
add
mov
loopne
seto
adc
dec
arpl
fildl
dec
mov
push
adc
fldt
frstor
lsl
leave
push
outsl
pop
mov
ss
lcall
cmp
lds
or
enter
fisubrs
enter
leave
add
popa
out
mov
mov
fdivp
inc
enter
and
pop
mov
push
scas
pop
js
sti
jcxz
or
dec
sti
jcxz
lcall
sti
jcxz
mov
mov
sti
jcxz
int3
enter
leave
sbb
jecxz
test
mov
cli
pop
fbld
movhps
cmp
arpl
wrmsr
cltd
cmp
and
jecxz
dec
cltd
push
rcrb
sub
popa
mov
push
jb
cs
jp
sti
arpl
mov
nop
cwtl
or
mov
mov
shl
les
int3
cltd
aam
add
jecxz
iret
add
mov
daa
sbb
sbb
lret
and
fidivl
or
add
lret
and
push
mov
adc
scas
adc
shr
jecxz
mov
int
and
fwait
in
addr16
cld
push
mov
or
call
addr16
and
sub
cmp
decl
inc
pop
ret
jg
mov
pusha
xchg
jo
and
lods
mov
mov
jecxz
rcl
stc
add
jg
sti
and
jp
enter
or
loop
xor
adc
lcall
push
lods
es
das
push
cmp
mov
popa
push
ret
mov
lock
cwtl
ret
inc
js
in
ljmp
ficoml
cwtl
lds
mov
add
or
or
iret
or
fsubs
jne
iret
add
adc
fimull
or
mov
jge
lods
sbbb
cmc
lods
test
pop
cmc
lods
rcrb
jo
lods
clc
sbb
arpl
add
js
or
fcmovnbe
mov
sbb
cli
pushf
and
and
rclb
lar
clc
inc
arpl
in
cmp
inc
add
add
sub
xor
add
adc
dec
jg
fistpl
fdivrl
and
clc
lock
cli
test
add
dec
push
mov
jecxz
int
sbbl
jg
ret
pop
mov
push
lret
fadds
lods
inc
or
rorl
mov
sbb
inc
ret
pop
test
pop
jp
enter
jmp
jecxz
dec
mov
decl
mov
push
lods
xlat
adc
data16
sub
popa
loopne
mov
icebp
sar
movsb
jae
push
push
add
ret
cmp
xor
lods
loopne
dec
shrb
outsb
mov
adc
lcall
test
enter
in
mov
xchg
enter
fadd
mov
mov
in
inc
aaa
lods
clc
clc
add
sar
cmp
mov
out
adc
enter
xor
sbb
repz
js
stos
jp
and
mov
xchg
mov
cltd
test
mov
xchg
gs
lock
and
cli
inc
push
int3
dec
ret
scas
or
out
fistpl
out
inc
out
mov
stc
gs
jne
mov
bound
xchg
sbb
and
sub
push
or
out
or
add
aas
push
inc
pusha
add
enter
inc
test
dec
call
ret
xchg
jp
cs
adc
insb
jp
and
cmc
test
jnp
xorb
bound
fcmovne
mov
mov
iret
ja
xlat
sbb
mov
sar
testl
adc
stc
pop
iret
push
mov
mov
and
scas
or
dec
repz
outsl
jae
adc
push
imul
add
cmpsl
push
jns
shlb
cmpsl
jecxz
inc
jae
shl
shll
fsubp
and
jae
lock
stc
iret
or
add
leave
fisttpl
jb
adc
bswap
sbb
adc
mov
lock
cmp
mov
mov
or
jp
inc
fs
insb
jecxz
rcrb
jle
cmc
xchg
cmc
nop
int3
testl
mov
lahf
cmc
xchg
dec
test
lods
dec
ret
push
test
call
sbbb
add
or
enter
in
rclb
clc
lock
ljmp
push
pop
insb
jle
ret
inc
jo
mov
jns
xorb
lods
movsb
enter
enter
cmpsl
fcmovne
dec
jecxz
aam
fbstp
sbb
clc
ret
pop
inc
fsubl
in
mov
scas
and
ljmp
push
inc
mov
cltd
pop
iret
call
jp
mov
jne
cmc
test
subl
pop
lahf
movsb
xor
inc
dec
push
mov
lods
mov
repz
rcrb
imul
dec
mov
or
in
ficompl
or
and
xor
cmp
inc
and
push
cltd
pusha
shrb
jb
lods
jnp
test
leave
push
scas
xchg
punpckldq
fpatan
scas
jb
mov
lods
dec
or
push
sub
sub
out
repnz
mov
jb
and
sbb
adc
or
mov
mov
pop
popa
arpl
mov
test
jecxz
ret
cmc
lods
iret
sub
bound
mov
arpl
mov
fstpt
push
clc
gs
das
call
arpl
scas
sbb
ret
popl
enter
enter
mov
insb
popa
in
mov
mov
rclb
stos
mov
mov
aam
loopne
nop
sub
cli
clc
aaa
stc
lock
adc
repz
scas
add
mov
cmovl
sbb
ja
pop
lods
ret
dec
cmpsl
jb
test
in
mov
mov
xchg
das
xor
sahf
sbb
enter
and
filds
rolw
and
cmp
and
enter
mov
cs
sub
lahf
out
fists
push
xor
icebp
add
and
cwtl
lsl
imul
add
push
sbb
fdivrl
and
nop
je
dec
xchg
lods
push
or
repz
mov
sub
int
xlat
cmpsb
lret
popa
aas
jecxz
dec
bound
enter
jmp
jecxz
mov
jb
cwtl
testl
mov
or
bound
data16
lods
push
or
jne
mov
repz
repz
jb
add
cmp
scas
nop
test
dec
jp
and
jp
push
insb
dec
fstpt
jnp
clc
test
nop
ret
test
push
aaa
test
and
test
and
test
and
shlb
lds
add
hlt
mov
jb
or
inc
fdivrl
and
cmc
push
lret
sub
arpl
bound
leave
jns
push
andb
lea
out
jecxz
fcomip
in
xchg
std
sarl
out
ror
cmpsl
jecxz
gs
push
test
sub
fs
fs
and
jecxz
and
mov
shlb
popf
stos
mov
mov
and
pcmpeqb
jmp
lahf
mov
jb
push
add
add
add
data16
add
jno
add
xor
add
pop
add
add
add
add
add
add
add
add
add
dec
add
add
dec
je
add
add
add
add
add
add
xor
add
add
add
add
jp
add
add
add
add
add
add
add
insb
add
inc
add
add
push
add
add
add
add
add
jne
add
add
add
jp
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
insb
add
add
push
add
add
add
add
add
add
add
add
cmp
add
pop
add
add
dec
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
pop
add
add
dec
add
insb
add
add
cmp
add
add
add
add
add
jns
add
add
insl
add
jp
add
add
add
add
add
add
add
add
add
add
inc
add
xor
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
push
add
add
add
xor
add
add
js
add
add
add
add
add
add
xor
add
add
add
add
add
jbe
add
add
push
add
add
mov
addr16
sub
pop
fdivl
or
fimuls
add
movsb
mov
clc
push
sbb
pop
vpperm
les
sbb
xchg
jle
cmpsl
mov
inc
inc
dec
add
jo
into
xchg
cli
mov
idivl
push
mov
mov
xor
jle
xlat
rcrb
mov
sub
and
lea
out
push
dec
jbe
mov
mov
xor
jg
movsl
mov
call
sbb
add
sbb
out
sub
fimull
sub
xchg
xor
std
mov
jne
std
scas
jg
loop
mov
in
push
jp
push
sbb
les
mov
xor
or
inc
pop
jge
outsb
call
pop
jmp
jle
stc
or
in
testb
push
stc
xchg
int
sbb
push
add
xlat
mov
rolb
jl
int
leave
clc
push
mov
sbb
jae
mov
mov
jns
cmpb
call
adc
popf
adc
mov
inc
lock
inc
jmp
mov
pop
jl
hlt
mov
pop
jge
push
add
aad
ds
pop
test
les
lock
add
pusha
or
adc
cmpsb
cmc
mov
push
call
arpl
and
call
push
dec
mov
std
dec
sub
cmp
cmp
dec
mov
arpl
adc
pop
sub
ret
push
push
mov
pop
or
mov
iret
lret
mov
sbb
cmp
stos
mov
sete
dec
xlat
cmp
inc
sti
or
push
outsb
mov
nop
mov
xor
test
in
pop
adc
and
adc
jg
jo
pop
js
inc
subl
mov
nop
mov
pushf
sub
xchg
call
stc
jne
comiss
test
mov
jb
cltd
inc
popa
out
mov
aas
mov
rep
jge
dec
divl
or
push
into
lea
push
lcall
lret
shrb
iret
mov
int3
xor
std
call
push
out
rorb
adc
push
inc
or
cmp
jbe
sub
dec
cmpb
inc
jnp
enter
push
pusha
mov
call
scas
dec
mov
push
xor
add
xchg
les
adc
stc
in
sbb
es
cmpsb
les
lods
lret
xchg
xor
jno
pop
fcoms
test
fsubrl
dec
fsub
scas
cmc
xchg
arpl
stc
call
pop
fadds
jl
xchg
xor
and
insl
fdivrs
addr16
je
dec
pop
lret
bound
test
les
jns
mov
sub
imulb
loope
ret
cmp
cmpb
lret
xor
jp
xchg
adc
mov
subl
add
jl
push
xor
shrb
lods
jns
lds
pop
mov
jecxz
mov
ret
xorb
incb
push
not
scas
movsb
inc
mov
jmp
fsts
sub
dec
popa
dec
out
js
and
mov
jb
mov
lret
pushf
mov
mulb
jp
stos
mov
sti
xchg
cmp
in
inc
dec
fldcw
test
push
test
cld
adc
mov
or
cmpsl
push
xor
outsb
repz
aad
cmpsl
mov
std
and
aas
loop
sahf
cmpsb
jge
je
cmp
adc
mov
nop
xchg
sbbl
ja
push
das
cmc
adc
les
sarb
cmp
push
inc
clc
das
push
cmp
lcall
pop
lods
stc
jecxz
jbe
enter
xchg
sbb
adc
lock
sarb
pop
pop
adc
pushf
pop
add
fldenv
test
stc
das
mov
xchg
cmpsb
mov
sub
test
popa
adc
sub
lock
shrb
adc
inc
pop
mov
mov
pop
cmpsl
cli
int3
les
aaa
add
inc
std
imul
shr
sbb
leave
mov
test
int3
scas
or
repz
push
push
adc
mov
adc
jmp
int
push
cmpsl
jo
shr
jne
mov
jge
out
adc
rcrb
xchg
xor
pop
das
movsl
adc
fcmovnbe
push
leave
xor
sub
cmp
push
lock
arpl
lcall
push
push
stos
cmp
pusha
cld
jecxz
jbe
mov
rclb
cs
loopne
btr
xchg
sub
in
std
add
stc
enter
sbb
xchg
inc
rcll
mov
ret
sar
add
lea
mov
loope
adcl
loop
ds
dec
adc
je
cmp
adc
shr
jae
fs
fcoms
xor
shl
push
push
dec
push
lock
or
test
jge
xor
test
sbb
rcr
ljmp
xchg
aad
or
adcl
push
adc
push
sub
test
add
mov
push
fadds
into
call
push
into
mov
inc
push
push
call
inc
xchg
and
jge
xchg
mov
adc
mov
pop
cmp
jmp
dec
popa
and
cmc
movsl
cmp
jecxz
je
fcmovu
jp
std
xchg
mov
add
cltd
mov
mov
in
pop
cmpl
outsb
aas
jmp
leave
jl
sub
push
popa
outsl
test
fiadds
sbb
pop
shlb
adc
loope
imul
fbld
mov
aam
sub
call
lret
xor
mulb
jb
addr16
xchg
pop
stc
inc
js
cmp
jmp
mov
mov
seto
mov
idiv
popa
jecxz,pt
ja
into
push
aaa
insb
leave
xchg
mov
into
repz
enter
cmp
jnp
inc
stc
call
int3
aam
pop
xor
ds
pop
lods
sub
mov
push
push
sbb
and
addr16
xor
cltd
cmp
ret
jl
mov
adc
movsl
mov
fcomps
jp
loop
int
data16
enter
cmp
and
mov
arpl
adc
mov
in
adc
bound
pop
pop
stos
jns
adc
daa
or
lods
ror
mov
in
stc
clc
cmp
mov
pop
cmp
bnd
mov
jecxz
mov
jne
jne
into
push
call
jl
fcompl
xchg
cmc
xor
mov
cmp
cli
push
add
dec
sbb
gs
hlt
lock
jns
mov
sub
cmp
xor
jge
scas
or
fucomip
ds
mov
inc
jmp
aas
add
dec
adc
mov
jge
ret
pop
push
sub
or
jge
pop
mov
ret
stos
dec
stc
lock
lcall
fisttpll
pop
push
cmp
xchg
jbe
insl
test
sub
clc
movsl
mov
int
in
movsb
std
dec
into
gs
filds
mov
jmp
stc
lds
into
mov
in
loope
in
sbb
cmpl
push
lret
std
or
repz
sbb
xor
imul
pop
add
or
jo
add
mov
aam
cmp
aam
dec
push
mov
int3
out
rclb
and
and
cs
fistpl
jae
add
shll
clc
sbb
pop
jecxz
enter
sbb
imul
aam
mov
mov
mov
xchg
cmpsb
inc
call
jmp
pop
mov
fucomi
ss
mov
lods
das
xchg
imul
addr16
cwtl
jp
and
mov
inc
cmp
adc
ror
pop
jmp
jns
push
lahf
sti
mov
xlat
xchg
mov
xor
inc
jge
jbe
aad
push
scas
data16
pop
adc
imul
repz
push
std
dec
push
cmp
xchg
xchg
mov
jle
xor
in
mov
int
into
pop
jae
add
pop
push
xor
cli
or
add
add
mov
pop
adc
sbb
mov
insl
clc
cwtl
rorl
lret
cld
jbe
cmpl
je
leave
imul
mov
xor
add
jb
dec
aas
xor
test
mov
mov
loop
xor
push
push
call
fdivr
mov
jge
xlat
jne
fdivr
ja
sarl
jecxz
pop
dec
fwait
or
jmp
push
shrb
mov
rorb
jno
cld
ret
insb
std
hlt
dec
inc
into
xchg
in
and
mov
shr
popa
scas
notl
cmp
push
add
sbb
mov
scas
or
out
jno
mov
and
xor
mov
xor
xor
mov
inc
adc
scas
clc
push
outsl
test
pop
add
xchg
add
repnz
int
push
mov
pop
xchg
clc
mov
push
aaa
sbb
jge
sbb
and
xchg
mov
js
jmp
aad
popf
mov
cmp
adc
xorl
shlb
add
shrl
in
adc
inc
jge
pop
mov
fnsave
lcall
inc
xor
movsl
je
sub
popa
in
pop
cmp
add
scas
aam
les
pop
loop
mov
dec
or
sbb
sub
sbb
xchg
or
lock
iret
mov
into
xor
rcrb
movb
pop
mov
push
lret
adc
jbe
loop
imul
push
adcl
mov
dec
xor
adc
add
notb
mov
jg
push
inc
adc
clc
xor
push
fs
and
repz
test
mov
iret
clc
ja
sbb
movsb
dec
stos
push
mov
mov
jno
popf
outsb
dec
cwtl
into
mov
xor
mov
cwtl
xor
push
pushf
iret
add
add
add
add
bound
add
add
dec
add
add
imul
push
add
add
add
add
inc
add
add
jo
add
js
add
add
add
add
xor
add
add
add
add
add
cmp
add
add
add
inc
dec
xor
add
add
add
add
add
jne
add
add
add
push
add
bound
add
add
add
cmp
add
add
add
add
inc
add
add
jns
dec
add
add
add
jno
add
add
add
add
dec
add
add
add
add
xor
add
add
add
dec
add
add
imul
push
add
add
add
add
add
add
add
add
add
jb
add
jae
add
add
aaa
add
push
add
add
arpl
add
add
add
add
add
pop
add
add
inc
add
add
jbe
jbe
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
insb
add
add
jb
add
add
add
inc
inc
imul
cmp
add
js
add
add
cmp
add
add
add
add
add
js
add
add
add
add
add
add
add
je
add
add
imul
add
add
add
insl
add
add
jne
add
add
xor
mov
leave
test
xor
push
andb
mov
xlat
pop
lock
mov
adc
stos
inc
or
or
mov
divb
xchg
push
ret
add
incb
jle
push
ret
cmp
push
pop
or
lcall
pop
push
in
push
sub
idiv
aam
ffree
and
ret
clc
das
stc
fnstcw
std
fidivrs
push
call
rcr
stos
mov
fldcw
mov
icebp
push
outsb
push
mov
stos
into
cld
sbbl
outsl
test
jge
popf
pop
fxch
or
push
mov
push
jp
iret
sar
and
andl
push
dec
sbb
arpl
push
out
rcr
outsl
add
mov
add
push
nop
fucomi
popa
cmp
fdivs
mov
mov
test
xchg
or
cwtl
sub
int
iret
nop
dec
clc
in
jl
jnp
xchg
mov
out
je
add
push
push
push
stos
movzwl
leave
jecxz
dec
shl
or
push
xchg
push
std
bnd
mov
cmpsl
jae,pn
lods
dec
mov
mov
outsb
call
dec
add
mov
sbb
add
and
add
and
mov
sbb
mov
into
mov
pop
cmp
ja
sti
jl
fmull
out
push
xchg
push
pop
mov
push
call
aad
add
je
jecxz
call
jne
jne
jne
xchg
icebp
leave
mov
out
fidivl
xor
add
call
fld
aaa
cmp
shl
adc
lods
mov
daa
jbe
jo
decb
clc
stos
lods
jbe
xchg
push
or
jne
mov
add
mov
dec
ret
xor
fildl
jnp
jns
jne
fwait
insl
dec
jle
dec
lahf
dec
pusha
mov
movsl
loopne
dec
cmpsl
lods
les
es
int3
cmc
scas
roll
push
mov
pop
movsb
jle
jns
cli
xorb
std
bound
mov
ja
cld
dec
push
lods
movsl
push
pop
mov
cli
xchg
jb
and
pop
push
mov
repz
push
call
xor
pusha
cmpsl
movb
call
cmp
mov
mov
and
stos
push
imul
adc
ret
inc
iret
mov
xchg
enter
in
test
add
adc
cmp
fwait
xor
push
ds
pop
mov
lret
push
cli
add
stos
mov
add
jl
mov
mov
call
clc
out
stos
ss
mov
addr16
test
xor
xchg
push
sub
iret
loopne
stos
loop
stos
mov
mov
jo
add
outsb
lods
cmp
ret
iret
mov
les
jle
call
outsl
or
xor
mov
insl
xchg
mov
sub
dec
outsl
mov
int
stos
inc
mov
enter
shl
xchg
das
imul
sbb
adc
test
fildll
das
pop
fisubl
stc
mov
outsl
mov
mov
mov
push
into
pusha
andl
cltd
push
or
xchg
jecxz
call
mov
sti
xchg
push
lcall
cmp
leave
jl
mov
enter
cmp
leave
sub
jecxz
call
add
mov
jno
push
pop
cli
shlb
cmp
and
cmpsl
ret
or
add
or
clc
test
sarb
pop
jge
jo
jne
jae
in
xchg
sub
shlb
sti
cmc
imul
and
gs
test
jge
mov
icebp
in
repnz
in
adc
xchg
xor
loope
in
enter
leave
addr16
aas
mov
cmpsb
std
dec
inc
lds
cs
mov
dec
and
sti
das
test
fdivr
lods
mov
cltd
stos
fdiv
jne
jle
fdivr
xchg
aaa
pop
xor
push
jge
jns
loopne
jb
jae
mov
das
and
sbbb
xlat
mov
add
call
test
or
ret
loope
ret
stos
sub
xlat
cltd
idivl
movsb
shll
lret
repz
loopne
insl
pushf
add
enter
sti
or
push
mov
in
int3
cmp
jle
mov
cltd
add
stc
sub
repnz
mov
fidivrl
jp
popa
jle
ret
lods
jae
sub
ss
lahf
sbb
fs
jge
adc
mov
call
xchg
jb
movsb
in
pushf
jmp
call
add
addr16
popa
mov
pop
xchg
loopne
in
shrl
call
rcr
or
pop
enter
adc
pop
shll
movsl
inc
dec
imul
sarl
or
loop
aam
add
pop
mov
mov
and
jb
mov
fistpll
rcl
aaa
ficoms
add
ret
ret
mov
or
inc
jbe
cwtl
cs
and
sbb
cmp
dec
inc
sub
pop
push
or
and
or
test
adcl
adc
stc
jmp
cwtl
adc
sub
jae
loopne
lea
or
add
cmpsl
stc
hlt
sub
and
xor
lds
pop
call
and
int
mov
fbld
fucomi
or
fdivp
dec
jecxz
hlt
or
ret
pop
arpl
adc
lea
aaa
test
sub
jge
xor
mov
daa
iret
aaa
cmp
mov
fisubs
rclb
push
call
jg
out
outsl
and
loop
aaa
sub
xor
jns
jmp
mov
outsl
mov
push
inc
pop
sub
xor
movl
mov
mov
stc
xchg
or
movsl
out
pop
cmpsb
push
out
and
mov
andb
stos
mov
sbb
fidivs
cli
and
out
mov
mov
or
mov
add
icebp
scas
out
xor
push
imul
repz
mov
lock
cwtl
push
mov
xchg
add
fnstcw
stos
push
call
int3
mov
dec
mov
pop
data16
lret
dec
out
push
dec
loopne
lcall
or
sti
lds
out
pop
loopne
test
xor
or
adc
pusha
aam
pop
outsb
mov
add
pusha
adc
fsts
call
mov
adc
bound
sarb
pop
sbb
repz
inc
jecxz
popa
mov
mov
mov
mov
push
push
test
adc
pop
subb
dec
in
sahf
fisubrs
add
fcomps
sbb
push
jg
mov
lret
push
shlb
cmp
xchg
mov
in
inc
cmp
fisubs
xchg
xor
jle
sti
call
test
mov
mov
out
test
jg
lea
cmp
pop
les
popa
insb
sti
jnp
pop
je
inc
mov
mov
mov
push
mov
sbb
nop
sub
dec
into
push
or
push
hlt
jb
aas
mov
movsl
add
shlb
ffreep
inc
jbe
or
push
imul
dec
or
add
mov
mov
mov
movsl
mov
xchg
or
testb
inc
jns
shrb
ljmp
pop
icebp
ror
rclb
dec
clc
sti
in
out
and
lock
jo
mov
cmp
and
aam
arpl
test
dec
jae
int3
in
call
shrb
int3
shl
mov
adc
xor
cmp
sbb
adc
out
jne
ja
xchg
push
dec
mov
ret
das
int3
movb
test
sbb
add
test
mov
test
sbb
imul
mov
rorb
lock
push
push
push
mov
mov
sbb
es
pop
rcl
in
push
dec
sub
jno
sbb
cwtl
mov
mov
loopne
mov
jp
das
xor
test
xchg
and
inc
sti
cmpsl
pmulhw
sbb
xchg
rcrb
insb
pop
cmpsl
adc
mov
or
push
test
mov
ds
roll
outsb
aas
rcll
mov
les
xchg
jl
inc
ljmp
jo
or
push
or
cli
lea
nop
enter
cmp
jge
repnz
addb
adc
dec
cmp
mov
mov
movb
das
cld
je
roll
dec
dec
jb
jl
pop
mov
js
jecxz
imul
iret
push
push
mov
fisttpll
xor
xchg
stos
add
push
insl
sbb
fmul
mov
and
gs
les
xchg
add
cld
cli
aas
push
and
stos
sbb
aad
fsubrl
test
jnp
in
call
mov
jle
outsl
cld
or
adc
dec
xor
adc
push
popf
mov
and
rorl
sbb
xchg
mov
call
fstpl
sbb
iret
jae
fsubr
fstpt
mov
dec
xchg
nop
xchg
loopne
pushf
nop
inc
push
mov
ret
movsb
xor
sub
cmpl
jecxz
dec
mov
test
jl
loop
cmp
stos
data16
leave
and
stos
iret
rcr
call
sarl
scas
test
lret
push
fldt
jge
push
add
rorb
dec
je
ds
dec
std
fdivrs
push
das
aaa
roll
xor
inc
push
or
cs
jge
imul
push
ja
mul
inc
xor
fucomp
mov
pop
inc
mov
inc
test
aam
inc
inc
push
popf
rorl
notl
sahf
mov
js
add
add
ficompl
adc
hlt
out
stos
mov
arpl
hlt
xorl
jle
jmp
jne
bound
jg
push
add
popa
in
jno
add
jmp
mov
inc
outsb
lcall
cmpsb
jecxz
add
mov
in
add
mov
enter
shl
adc
add
je
and
add
and
mov
dec
ret
xor
mov
into
jbe
jecxz
in
or
ret
xor
pop
pop
hlt
add
push
je
js
leave
xchg
jmp
jb
fucomi
and
pusha
jb,pn
fs
je
stc
mov
pop
cmpb
ljmp
ja
dec
adc
ret
or
loope
xor
xor
add
stos
push
mov
in
mov
shlb
out
sti
pop
ret
push
mov
mov
loope
jmp
mov
jnp
add
mov
pop
rcrl
in
dec
fisttps
mov
mov
mov
mov
std
xchg
leave
mov
out
and
pop
fxch
repnz
out
insl
test
lret
int3
and
rcr
fdiv
aam
fsubrl
fmul
in
jnp
and
loopne
clc
bnd
mov
cmp
sti
xorb
hlt
and
test
mov
clc
fsts
cli
mov
cmp
outsl
test
xchg
sbb
nop
sti
xchg
and
sbb
xchg
cli
cwtl
out
insl
test
pushf
and
and
pushf
cli
mov
sub
mov
sub
movsb
cli
lods
out
insl
test
pop
lret
jnp
arpl
jecxz
outsl
ret
sbb
shrl
repz
inc
out
insl
test
lret
push
and
je
cmp
js
inc
insl
test
lret
test
dec
lods
out
insl
test
lret
mov
fldenv
shl
insl
test
lret
enter
int3
fnstenv
out
insl
test
lret
fsubs
orb
out
insl
test
lret
call
fsts
test
lret
clc
and
lock
or
and
mov
adc
mov
mov
and
fldenv
enter
cld
mov
mov
std
cmp
data16
mov
mov
test
lret
xor
fmull
cmp
in
test
lret
inc
and
repnz
out
insl
test
lret
push
and
pop
fsubr
mov
pop
repnz
pusha
insl
test
lret
or
push
repnz
jo
test
lret
sbb
js
and
jl
and
subb
lret
sub
mov
and
cmp
xchg
insl
test
lret
inc
and
mov
push
out
push
loopne
aad
daa
mov
test
sti
pop
arpl
cli
fs
outsl
test
insb
arpl
scas
jo
les
stc
je
out
js
enter
stos
ret
push
push
push
push
out
xor
add
lods
icebp
repz
add
insl
into
out
mov
sub
or
enter
and
or
mov
sub
ljmp
enter
sbb
add
imul
mov
mov
repz
sbb
push
push
push
call
mov
jae
fmuls
mov
push
push
call
cmp
add
test
fisttpl
dec
mov
adc
fcmovu
mov
jmp
sbb
mov
or
out
shrb
leave
popl
push
adc
shll
addr16
jg
dec
popa
mov
add
insl
dec
ret
sbb
inc
addr16
addr16
inc
jecxz
jmp
push
popf
dec
inc
shlb
sub
xor
and
add
cli
mov
lods
push
call
pop
pop
mov
clc
pop
pop
ret
addr16
sbb
push
mov
repz
mov
add
test
mov
push
mov
inc
subb
lret
or
mov
pop
arpl
rcrl
inc
pushf
in
xor
jecxz
ljmp
mov
cltd
pop
push
mov
dec
cld
int3
push
lea
repz
add
mov
jnp
adcb
xchg
mov
hlt
pop
fs
push
lret
cmp
ret
push
pop
in
rcll
int
jle
jmp
cmp
push
xor
add
movzbl
rolb
es
inc
mov
int3
js
mov
stc
push
push
call
or
mov
test
xchg
dec
xchg
mov
loop
jnp
in
mov
out
bound
push
mov
jg
pop
mov
sbb
xlat
push
das
jecxz
dec
inc
adc
out
sub
jne
xor
xor
rcr
mov
mov
add
inc
lea
mov
dec
and
push
push
pusha
iret
lret
mov
mov
add
adc
push
sbb
in
xor
mov
gs
jo
mov
fs
in
fsubrs
into
call
pop
pop
leave
mov
pushf
imul
je
mov
mov
loopne
add
call
push
dec
mov
in
jb
adc
repz
cmp
xchg
popl
and
jno
test
loopne
mov
mov
push
add
imul
mov
nop
in
pop
pop
fs
sbb
sub
sub
enter
xchg
icebp
and
insl
repz
repnz
pop
scas
mov
add
or
into
in
mov
mov
or
ret
imul
jge
mov
push
mov
sub
imul
dec
in
maxps
icebp
insl
aam
sahf
outsl
repz
sbb
mov
outsl
jmp
sub
ret
mov
jnp
jp
jns
cltd
lret
jg
adc
decb
add
stos
mov
lcall
lret
jae
or
inc
call
int3
cmpl
je
add
inc
loopne
mov
pop
add
jp
cmp
pusha
bound
imull
out
xchg
cmp
dec
inc
and
or
push
mov
incb
subb
jp
sub
push
int
adc
inc
pusha
jmp
push
int
shlb
iret
xchg
pushf
mov
cmp
push
jnp
xchg
xor
cld
push
bound
sub
push
mov
jb
xchg
in
mov
mov
sbb
sub
stos
test
xor
or
mov
dec
xchg
call
lock
adc
in
sub
bound
and
jb
cmp
shl
inc
mov
push
add
decl
jecxz
cli
lcall
out
sti
popf
hlt
sti
sahf
std
sti
lahf
jmp
mov
das
leave
insb
insl
dec
into
mov
cli
push
push
pop
push
test
pushf
in
js
push
jecxz
cwtl
stos
clc
xor
mov
test
cmc
cmp
sub
clc
aaa
je
inc
inc
jecxz
sub
mov
call
cli
push
cmpsl
or
xchg
push
call
add
aaa
in
or
jno
sbb
cltd
or
lret
adc
outsb
cmpsl
movsl
leave
add
andl
mov
add
mov
push
pop
dec
mov
lahf
sbb
cmpsb
enter
subb
dec
inc
outsl
test
pop
jg
ret
stc
jl
push
dec
jl
inc
leave
mov
int3
and
xor
loopne
cmpsb
or
imul
call
mov
imul
aaa
dec
or
jbe
popa
cmp
out
ret
call
aam
leave
outsl
mov
rorl
test
mov
fcmovu
lahf
push
xchg
ret
mov
int
inc
push
stc
xor
cli
mov
clc
mov
mov
repnz
lea
mov
int3
icebp
push
call
lock
sub
add
jo
lods
mov
pop
push
in
push
mov
lock
adc
push
cli
stc
or
push
jle
into
push
fstps
rclb
outsl
xchg
clc
rol
inc
ljmp
sbb
aaa
jnp
inc
dec
int
lahf
outsl
les
leave
sbb
cld
loop
xchg
lret
ror
inc
ljmp
cmp
mov
add
adc
sahf
scas
mov
jns
or
cltd
int3
in
imul
shrb
xor
cld
add
dec
and
dec
movswl
fildll
pop
sub
mov
or
jno
sub
in
ljmp
add
rolb
and
sub
xor
mov
or
mov
push
test
cld
loop
sub
test
inc
sahf
pop
in
mov
sub
add
xchg
xor
sub
xchg
popa
clc
call
xor
fadd
shlb
jne
mov
scas
repz
mov
xor
xor
imul
pop
mov
mov
movsl
loop
ret
or
pop
xor
adc
or
mov
sub
pop
lods
mov
lret
mov
loop
fldt
test
or
and
push
daa
in
mov
mov
xor
sbb
ljmp
into
insb
lods
pop
stos
xchg
cmp
jmp
mov
loope
mov
pusha
jne
sub
out
mov
shl
sbb
test
adc
fisttpll
dec
add
jp
inc
icebp
jle
push
xor
xchg
lret
sbb
hlt
push
decl
inc
lods
outsb
mov
fs
lock
mov
ret
add
push
callw
lods
mov
in
dec
sti
jnp
movsb
cmp
mov
jo
test
in
xchg
dec
into
and
adc
lea
push
scas
test
arpl
or
push
test
insb
xor
push
sti
push
call
sbb
repz
and
fs
insl
lods
jge
cmpsl
std
inc
arpl
xchg
mov
or
pop
sub
mov
sub
incl
pop
jl
xorl
jle
call
add
cmp
and
add
cmp
xor
iret
or
mov
cmp
lret
fs
repz
xor
add
outsb
add
add
push
add
data16
push
add
add
bound
add
add
add
xor
add
add
jb
add
add
add
push
add
jb
add
add
add
add
add
popa
add
add
jbe
add
add
add
add
add
imul
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
insl
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
add
cmp
cmp
add
add
add
insb
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
cmp
jbe
add
add
add
dec
add
dec
add
jb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
add
add
add
add
dec
pop
add
dec
add
xor
add
add
add
pop
add
add
jo
add
add
add
add
add
add
jbe
add
dec
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
xor
imul
add
add
add
add
jno
add
add
add
add
add
inc
add
add
add
add
pop
clc
xchg
ret
sub
inc
jecxz
fadd
mov
xlat
lock
shr
mov
enter
rolb
and
out
mov
add
test
xor
arpl
mulb
mov
xchg
aam
dec
xlat
lret
sar
cmp
mov
mov
jne
lcall
and
pop
cli
or
add
ret
repz
adc
cli
mov
inc
rolb
or
mov
cs
push
negb
sub
mov
xlat
lods
lret
mov
cmpsl
xor
lahf
mov
and
sub
xchg
jnp
mov
xlat
dec
jl
xchg
out
dec
arpl
sbb
sbb
out
pop
inc
dec
fwait
shrb
loope
sub
sub
daa
or
pop
mov
ret
inc
scas
mov
xor
push
and
or
in
sub
mov
pop
insb
dec
jo
mov
fadd
jne
lods
loopne
cmp
lahf
xor
cmpl
jg
dec
xor
enter
das
stos
and
cmp
jnp
pop
mov
hlt
mov
xor
mov
sub
iret
xchg
scas
out
insb
jp
outsb
mov
cs
mov
fwait
sub
iret
cmp
shl
clc
dec
pushl
iret
dec
pop
daa
lock
jge
in
mov
or
repz
lods
test
dec
in
repz
setp
clc
loope
cmc
adc
sti
shlb
loopne
call
call
mov
adc
bound
sti
shrb
adc
sbb
pop
popa
inc
xchg
iret
mov
jo
cmp
test
loop
xor
es
push
adc
ret
idivl
repnz
fcoms
dec
xlat
xor
rorb
les
clc
pop
cltd
push
or
cli
cld
ret
mov
mov
ja
mov
pop
sti
jne
xor
rol
jecxz
dec
cmp
jecxz
outsl
dec
pop
jecxz
xor
ret
dec
mov
fmuls
or
fnstcw
jecxz
ficomps
insb
fbstp
sbb
ss
aaa
fld
jmp
inc
loop
movsb
jmp
inc
push
mov
sub
xor
xor
push
sbb
pop
jne
push
ret
fsubrs
sbb
mov
pop
stc
sub
or
testl
aad
jnp
int
mov
mov
mov
stos
or
pop
loope
push
ret
popa
and
ror
push
mov
or
std
push
or
push
fdivrs
shl
mov
ja
dec
xor
cli
outsl
mov
int
mov
fidivrl
inc
xchg
scas
and
mov
xlat
aas
lahf
inc
sti
mov
add
jmp
out
outsb
enter
and
jmp
sbb
out
dec
out
or
enter
dec
cwtl
jecxz
push
into
cmc
scas
jnp
lods
loopne
or
fildll
mov
sbb
fdivrs
adc
cmp
aad
clc
cld
pop
js
cmpl
push
push
mov
loop
jle
mov
inc
add
dec
mov
cli
in
mov
enter
ret
add
xor
lcall
xchg
xor
mov
arpl
jge
cmp
jmp
pushf
mov
dec
out
repz
test
sub
jmp
cli
mov
add
loopne
test
lods
mov
dec
dec
sbb
das
js
scas
mov
or
sub
jle
jmp
pop
gs
cmp
decl
pop
iret
fwait
repz
das
shr
dec
jg
mov
int
icebp
shl
jae
pop
mov
dec
mov
mov
push
cmp
jmp
adc
jge
mov
shll
mov
mov
test
out
mov
or
or
out
push
ljmp
outsl
jb
mov
outsl
repz
sbb
loope
call
cmp
insl
lret
ret
mov
loopne
lret
and
inc
stos
decl
mov
and
sbb
int3
ffree
das
scas
stc
rclb
lahf
out
movsb
jmp
inc
iret
sti
mov
pop
dec
cwtl
daa
cltd
js
enter
test
xor
das
test
jb
pxor
xor
stos
lcall
push
inc
clc
mov
dec
sub
dec
sub
outsl
les
fbld
push
scas
call
repnz
test
fisubs
rorb
loopne
shrl
movsb
sti
mov
scas
fisttpl
nop
es
jmp
xchg
mov
iret
cmpb
push
jmp
xor
shl
mov
test
mov
stos
clc
inc
dec
xchg
xchg
mov
clc
das
ja
push
ds
leave
daa
icebp
sbb
sub
imul
jnp
scas
inc
clc
mov
clc
cli
in
xlat
jns
jecxz
rcrl
cwtl
jecxz
outsl
inc
xor
mov
popf
mov
add
repz
inc
jnp
or
inc
jecxz
inc
inc
jg
clc
cld
cmp
and
ljmp
shrb
or
rclb
jecxz
jg
mov
sbb
clc
mov
nop
int3
cld
lahf
dec
push
pop
jecxz
mov
lcall
inc
mov
stos
ret
call
pushf
sbb
mov
mov
int3
cli
inc
ret
into
and
and
pop
adc
sbb
xchg
pushf
cli
cltd
jae
xlat
int3
lret
lods
sti
mov
out
jg
ret
and
mov
mov
sar
mov
push
dec
fdivrl
inc
popa
arpl
xchg
roll
xor
aas
sbb
sub
cli
mov
gs
mov
pusha
idiv
push
jp
cmpsl
sbb
loop
pop
xor
dec
mov
mov
mov
bound
fdivrs
mov
pushf
mov
ret
imul
repz
jb
sbb
inc
inc
cli
jp
mov
mov
sti
xchg
dec
test
loopne
dec
stos
int3
in
shlb
ss
add
mov
xchg
icebp
stc
and
inc
lret
cmpsb
in
and
or
add
movb
ret
and
add
mov
sbb
test
test
lahf
add
fsubr
clc
cmp
jb
xor
stc
sbb
pop
xor
jno
cmp
in
jecxz
mov
cli
mov
shrb
test
je
mov
stc
mov
mov
ret
push
call
addr16
lret
jne
pop
out
popa
pusha
jmp
popa
jecxz
and
mov
leave
inc
push
and
std
int3
jne
mov
cld
dec
outsl
push
jecxz
cmovle
popa
mov
loop
xor
dec
arpl
loop
pop
mov
lret
lds
addr16
decl
dec
mov
xlat
pop
push
sub
pop
pop
mov
ja
mov
in
imul
mov
xor
scas
shlb
dec
movsl
loop
nop
push
ss
and
lods
out
loope
aas
rcll
mov
jmp
xlat
not
adc
mov
mov
and
and
pop
dec
scas
add
or
pop
jle
pop
adc
pop
mov
loopne
xchg
mov
scas
sbb
or
bound
and
ret
mov
stos
push
adc
jmp
ja
sub
adc
fwait
leave
lods
mov
iret
adc
lret
in
fbstp
adc
enter
js
xbegin
fsub
cli
stos
xchg
outsl
and
mov
xchg
sbb
inc
nop
loopne
and
outsb
sub
cmpsb
lret
ret
test
fnstsw
iret
mov
ret
ret
mov
inc
mov
mov
dec
fistps
lahf
pop
mov
andb
leave
push
jo
out
or
pop
call
fnstenv
dec
int3
lock
jecxz
call
aam
xchg
fwait
popa
sub
ret
xor
xchg
outsb
jp
mov
stos
incl
add
xor
push
les
popf
adc
dec
lods
cmp
stc
mov
dec
mov
sub
add
pusha
dec
icebp
fldl
mov
test
mov
ret
dec
cmp
or
pop
jns
into
lock
cmc
jge
dec
push
data16
lret
fsts
outsb
fstpl
or
loop
cmc
cli
pop
xor
dec
ret
sub
jnp
adc
fimuls
mov
lock
sub
cwtl
pop
pop
aas
outsl
std
in
inc
bound
hlt
xchg
loopne
push
add
or
xchg
lods
addb
jmp
mov
fldcw
mov
sub
out
lcall
mov
mov
clc
test
inc
ret
jp
stc
fcmovu
ret
jg
test
and
pop
test
fmull
fs
jnp
mov
and
ret
fdivr
scas
popa
enter
push
xchg
mov
sbbl
dec
cmp
mov
sub
and
or
in
daa
mov
sbb
dec
outsl
test
mov
mov
std
pop
mov
mov
daa
xchg
push
mov
xor
outsl
negb
inc
je
sbb
push
stc
inc
ret
std
add
scas
add
sbb
mov
mov
mov
mov
int3
out
dec
inc
add
mov
mov
nop
xchg
mov
into
in
or
mov
mov
inc
jns
js
mov
add
jl
push
int
jae
aad
push
mov
jle
lods
sub
std
add
push
cmc
xor
imul
decl
in
sub
xchg
bound
lods
push
ss
push
fsubrs
mov
cli
push
and
orl
xchg
adc
push
cmp
mov
jnp
stc
mov
cwtl
xor
dec
fadd
inc
fadds
xor
into
xor
decl
mov
test
and
push
xchg
aas
inc
les
mov
cli
cltd
xlat
jecxz
push
mov
adc
jno
cld
icebp
cmc
sti
jnp
mov
scas
jnp
call
jmp
jp
add
add
inc
dec
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
add
outsl
add
add
add
add
add
add
xor
add
jo
jb
add
insb
add
add
add
add
add
add
add
add
imul
xor
add
outsb
add
add
aaa
add
add
add
xor
add
jp
add
add
add
xor
add
imul
outsl
popa
add
add
add
push
add
add
add
inc
add
insb
add
add
push
add
add
add
add
add
add
add
ja
add
add
push
push
arpl
add
add
add
add
add
js
add
add
add
push
add
inc
bound
add
je
aaa
add
inc
jne
add
popa
add
outsl
add
inc
add
inc
aaa
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
dec
add
add
add
jp
add
add
add
pop
add
aaa
add
imul
jo
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
popa
add
add
arpl
add
inc
add
add
add
inc
jp
add
add
add
add
add
add
push
add
add
push
add
arpl
add
add
add
dec
outsb
cli
jo
subb
lret
adc
sti
nop
jbe
cmpsl
xlat
inc
das
xchg
aad
cltd
nop
sti
shlb
push
leave
cwtl
ljmp
adcl
pop
test
shlb
mov
movsl
pop
dec
or
cltd
lock
sti
mov
leave
movsb
ljmp
addl
fwait
xor
and
cmp
insb
mov
daa
push
push
jb
cmp
sbb
fisttpll
les
out
mov
or
add
mov
jg
sub
enter
cld
mov
jl
dec
cmp
scas
or
nop
jmp
sub
lcall
bound
clc
or
xor
rorl
sbb
mov
enter
mov
pop
pop
xor
add
fdivl
repz
std
dec
lcall
imul
mov
pop
cmpsl
scas
pop
repnz
pusha
mov
ret
mov
rorl
push
andb
enter
and
jmp
pop
mov
dec
scas
imul
fstps
iret
bound
les
and
adc
sub
dec
aas
fsts
fwait
scas
or
jp
cld
or
out
mov
frstor
cwtl
dec
out
mov
fidivl
rorb
xor
cmp
and
fists
out
pop
pushf
mov
inc
mov
test
cmpb
jp
dec
pusha
stos
xor
cmp
mov
pop
xchg
fmul
mov
movb
call
loopne
test
data16
in
or
or
jge
jmp
pop
loop
inc
clc
mov
xchg
xor
mov
repz
fucomi
divb
or
jno
rcrb
cmp
mov
aaa
shl
les
mov
mov
or
or
shr
or
popa
jl
add
jg
cli
std
test
inc
mov
inc
inc
mov
add
jl
test
jle
roll
pop
cmp
test
mov
cwtl
dec
xchg
or
mov
and
sub
xor
dec
or
xor
sbbl
push
hlt
jp
jg
pop
pop
sbb
push
popa
cmp
pop
mov
push
mov
outsb
jnp
outsb
lock
inc
rcrl
test
push
hlt
adc
push
sub
je
pop
pop
push
hlt
int3
mulb
xchg
test
cmp
into
mov
loop
mov
inc
sbb
movb
fisubs
add
xchg
cmp
mov
outsl
test
les
xor
icebp
inc
aaa
nop
mov
add
call
inc
mov
push
lds
sbbl
sti
mov
and
out
rclb
fistpll
pop
mov
push
inc
dec
cmp
idivb
jae
or
pop
xchg
andb
loope
jle
dec
popf
push
imul
push
dec
sbb
cld
sub
dec
rcr
jle
leave
cmp
mov
ds
add
mov
sbb
xor
lret
int3
jne
mov
pop
jno
pop
ja
daa
dec
push
jb
push
jg
ja
lea
jg
jle
loop
aad
cli
adc
add
ljmp
ljmp
rolb
jno
std
in
je
jmp
aad
xor
jmp
stos
xchg
cmpsl
jge
sahf
test
bound
inc
jbe
roll
add
call
rcrl
adc
inc
lahf
dec
add
dec
dec
dec
mov
out
add
or
arpl
xchg
test
xor
addb
call
sub
jns
gs
mov
add
dec
add
call
fidivl
inc
repz
jecxz
fsubs
mov
mov
push
jmp
es
xor
jecxz
cmp
push
pop
shl
ljmp
or
mov
mov
sub
jb
std
sbb
aad
push
sbb
ja
call
adc
cmp
push
and
clc
mov
push
les
das
push
cwtl
mov
fstps
je
sbbb
sbb
adc
and
or
fsqrt
sbb
fdivs
jge
adc
mov
outsb
iret
push
xor
sbb
sbbb
mov
push
out
mov
mov
or
stc
pop
inc
cld
fwait
adc
push
mov
add
inc
cmpl
inc
jb
gs
inc
add
add
adc
imul
int
lds
or
icebp
sbb
xor
or
clc
push
mov
pop
stos
hlt
ja
mov
and
pop
xchg
call
sub
pop
decl
jb
mov
add
xchg
jo
outsl
and
mov
rcrl
cmc
dec
jae
adc
sbb
and
jne
push
call
mov
sbb
and
es
jbe
add
aas
or
hlt
push
inc
cmp
sub
mov
dec
mov
pop
clc
int3
mov
aas
xor
sub
pop
xor
fildl
aaa
call
mov
in
into
jmp
shll
inc
inc
cmp
jno
and
pop
adc
pop
jmp
xchg
and
cmp
cmpl
dec
dec
cmc
in
xor
jl
stc
outsl
add
push
mov
inc
mov
mov
push
mov
das
dec
lock
rcrl
xchg
std
jo
sti
cmp
pop
fildll
mov
hlt
push
in
or
andb
cltd
scas
push
add
push
and
push
add
call
cmp
test
ret
jne
xor
push
sbb
imul
aas
xchg
call
mov
or
or
xchg
push
sbb
mov
call
xor
mov
mov
pusha
add
daa
ret
pop
pop
mov
int
push
xor
fldenv
sbb
sbb
add
cmp
into
cmp
inc
cmpsb
movsl
add
mov
mov
mov
inc
lea
aad
push
mov
movl
mov
xchg
outsb
sub
repnz
jno
cmp
push
cmp
adc
sbb
push
pusha
push
xchg
mov
push
cltd
das
pop
jne
into
shl
ret
std
insb
jle
xlat
push
xchg
call
dec
xchg
mov
call
jge
jbe
stos
lock
icebp
ffreep
cmp
push
test
ds
mov
cltd
push
and
std
imul
xchg
enter
xor
xchg
adc
insb
pop
int
inc
xchg
arpl
push
adc
push
adcl
jge
pop
xchg
xor
fs
ds
ja
push
adc
scas
and
test
inc
test
jge
add
dec
pop
jp
xchg
mov
dec
push
shrb
or
push
scas
jmp
enter
aas
mov
aaa
sub
jb
rcrb
or
js
dec
add
std
fsubl
push
cmp
mov
std
xchg
inc
loopne
test
mov
js
into
in
push
insl
jb
xchg
mov
cmpsl
xor
mov
mov
cmp
pop
jno
mov
mov
add
scas
sub
sbb
mov
fidivl
lret
sub
adc
lret
stc
int3
imul
loope
in
push
test
sti
mov
or
imul
lods
push
in
push
xor
sbbl
iret
enter
xor
mov
mov
cmc
stos
adc
and
int3
push
clc
mov
pusha
xor
cwtl
stc
push
adc
cmpsl
mov
dec
push
jbe
addr16
mov
lds
seta
mov
mov
add
movsb
sbb
xchg
add
ret
dec
jbe
dec
jp
daa
inc
cli
insl
mov
and
xor
adc
lods
scas
or
or
xor
inc
out
imul
and
adcb
jecxz
xor
inc
clc
lods
pop
xor
test
add
orb
in
loop
add
push
outsb
jg
mov
dec
adc
mov
jb
and
jl
inc
cltd
cmp
mov
stc
ds
into
push
dec
dec
and
jge
fcompl
fiadds
add
cmpsl
push
or
test
push
pop
mov
je
les
bt
dec
cmpsl
ss
mov
mov
xor
rorl
pushf
jp
push
daa
pusha
or
jne
daa
aam
int
call
clc
mov
stos
dec
mov
push
pop
js
mov
arpl
cmp
stos
sbb
imul
in
xor
lock
leave
adc
cmp
add
rol
cli
idiv
or
cmp
and
in
inc
and
dec
mov
fmull
or
add
jmp
outsl
add
dec
and
in
xchg
jbe
stc
xor
testl
in
push
fstps
dec
mov
xchg
or
cld
test
pop
and
popa
call
in
cmp
nop
push
xor
ljmp
jnp
shlb
pop
sbb
xor
int
lret
or
pop
xor
mov
imul
add
call
adc
nop
xor
jmp
adcb
cld
adc
push
sub
jo
cld
jl
pop
outsb
cmpsb
sbb
sub
fdivrp
push
mov
push
leave
xor
fists
fwait
jecxz
in
lret
mov
cmp
inc
sarl
jns
or
cmp
cmp
jge
ret
fst
mov
sbb
mov
dec
mov
imul
jnp
sbb
stos
push
shll
jae
jle
shr
cmp
jne
testb
and
int
push
fyl2xp1
add
jmp
xor
dec
pop
sbb
add
fidivl
add
int3
outsb
sahf
adc
lods
ljmp
pop
ret
jbe
filds
mov
mov
sub
loope
jae
sub
add
cmp
push
sub
inc
stc
dec
ss
jle
adc
ss
or
cmp
mov
pop
inc
movsl
add
aas
leave
mov
dec
fldt
iret
sar
add
add
cwtl
inc
jbe
fiaddl
push
push
mov
adc
add
jp
add
negl
lcall
mov
rorb
lea
movsb
fwait
and
int3
mov
movsl
xchg
cmp
stos
js
stos
shrl
adc
call
inc
or
or
mov
sbb
xor
mov
mov
das
jnp
push
and
dec
sub
in
or
or
sti
and
cmp
lret
push
dec
outsb
dec
lea
jl
je
jnp
sbb
clc
mov
push
int3
pop
cld
xor
xor
jne
xor
xor
clc
mov
movsl
push
sbbl
sub
cld
js
lret
mov
dec
mov
int3
push
icebp
adc
xchg
or
push
cwtl
sbb
push
dec
cmp
bound
arpl
addb
or
jecxz
insl
subb
popf
or
stos
outsb
dec
popa
sahf
xor
inc
movsl
sbb
xchg
mov
and
outsl
mov
xchg
dec
jne
aam
xor
mov
mov
push
or
sub
mov
adc
jle,pt
arpl
add
push
lock
das
js
arpl
dec
or
pushf
add
dec
xchg
outsb
xlat
sub
sub
jp
jbe
aad
je
dec
icebp
out
lret
call
arpl
xchg
gs
jecxz
outsb
push
sub
bound
aam
aad
iret
push
cmp
roll
add
test
inc
and
xchg
test
in
test
leave
jmp
fisubrs
jae
jl
sub
jbe
dec
mov
aaa
mov
outsl
push
pop
cmp
add
or
inc
or
fmul
inc
mov
pop
pop
jmp
add
in
outsb
scas
add
into
add
jl
pushf
mov
push
iret
or
arpl
in
inc
jecxz
xchg
test
mov
aam
fstps
pop
jp
fucomi
jne
ljmp
and
stc
out
mov
sbb
out
xor
cmc
lcall
add
out
ss
das
add
or
sbb
sub
jle
movsl
jle
inc
lret
sbb
daa
mov
ss
sbb
cwtl
out
xorl
sub
test
jmp
fiaddl
cld
jbe
shl
jbe
jp
or
sbb
out
outsl
pop
jnp
jge
ret
lret
rolb
into
adc
shrb
xchg
mov
into
or
loop
sbb
bound
mov
dec
std
pop
scas
andb
add
mov
loopne
sub
add
lret
adc
outsl
xchg
repz
js
inc
insb
add
inc
shl
xchg
hlt
sbb
js
lods
xchg
insb
jnp
pop
jg
add
leave
sub
hlt
movsl
dec
inc
shlb
mov
xchg
lods
inc
pop
push
jnp
bound
scas
sub
and
mov
iret
in
push
pop
mov
js
xchg
insb
mov
lcall
in
and
pop
dec
fists
loope
mov
cmpsb
mov
arpl
push
jl
cli
dec
add
xchg
inc
pop
test
or
inc
mov
cltd
std
mov
sub
xor
inc
dec
cmc
mov
clc
lea
push
popa
jecxz
push
mov
ret
cmpsl
mov
push
inc
ficompl
and
lock
jmp
bound
sub
nop
pop
test
mov
sub
add
popf
push
mov
mov
jmp
outsl
or
ret
inc
dec
push
arpl
test
adc
add
mov
inc
test
inc
cld
lods
add
rcl
outsl
mov
jg
cmpsl
xchg
popa
lock
xor
nop
sub
call
xor
sbb
ret
mov
adc
ja
sbbl
scas
loopne
cld
call
push
dec
fnsave
aaa
das
rolb
push
inc
dec
dec
stos
fucomp
or
jl
cmc
pop
sub
incl
aad
xor
sbb
ret
shrb
call
and
push
jp
push
fistps
or
cld
mov
mov
dec
mov
lods
aad
mov
jno
and
mov
mov
sti
dec
cs
dec
jo
jle
stc
and
adc
or
dec
xchg
pop
cs
test
pop
sub
into
js
inc
sbb
add
jne
out
notl
dec
push
add
scas
jnp
rclb
aas
mov
test
lock
rclb
pop
push
pop
and
mov
or
and
dec
sub
mov
jecxz
sub
out
sbb
insl
xchg
sbb
lds
and
xor
sbb
loop
cmp
test
jl
adc
inc
js
inc
xchg
or
mov
push
sub
mov
or
or
xor
xor
test
push
or
inc
push
cld
arpl
dec
imul
mov
add
inc
sub
push
cmpsl
pop
je
pop
jl
sbb
lret
cltd
cmp
or
jg
pop
sub
repz
sub
xchg
daa
xor
xor
inc
mov
cmp
sub
xor
mov
data16
adc
jns
add
pop
outsl
std
outsb
fildll
insl
push
subl
rorl
iret
push
jge
mov
in
aad
sbb
fdivr
movb
mov
popa
cwtl
mov
xor
outsl
xchg
or
xchg
mov
pop
cmp
mov
jmp
fs
pop
int3
xchg
jbe
ja
jne
jne
sbb
nop
popa
pushf
add
mov
or
dec
mov
roll
pop
xor
test
jl
movl
sub
ss
add
dec
mov
or
in
jmp
add
repz
or
cmpl
test
add
in
dec
insl
int
mov
add
nop
pop
jge
mov
jno
mov
bound
sub
xor
add
jbe
popf
adc
leave
int
mov
jmp
sub
cmp
out
pushf
iret
movsb
mov
adc
leave
fimull
adc
push
xchg
jo
sti
adc
pop
mov
daa
sti
adc
das
fcoms
arpl
mov
jge
xchg
jmp
jl
loope
clc
push
mov
ss
js
jae
jmp
push
scas
rcrl
stos
add
jl
in
mov
or
inc
and
push
bound
mov
xchg
push
mov
shrl
inc
xor
repz
jp
clc
add
imul
cmp
adc
ja
inc
scas
je
loope
idivb
imul
mov
xchg
rcrl
mov
rep
xchg
xlat
lret
mov
mov
cmc
adc
jno
stos
es
fsubl
mov
sbb
sbb
add
push
dec
push
jg
das
pop
pop
pop
stc
mov
xor
lret
or
adc
stc
frstor
loop
out
shr
inc
js
adc
mov
lret
repnz
or
inc
mov
and
movsb
rclb
mov
push
fwait
mov
sub
and
popf
rorl
call
mov
pop
bnd
cmc
fdivrs
pushf
mov
lret
testb
stc
push
pusha
adc
test
add
pop
movsb
adc
and
gs
insb
scas
and
lahf
das
data16
lahf
arpl
push
and
cwtl
pusha
sbbb
loop
and
jge
push
clc
jbe
out
dec
and
lret
fs
jle
xlat
mov
pop
scas
pop
loopne
data16
loopne
pusha
pop
push
lcall
out
jae
mov
pop
testb
push
pop
pop
fnsave
xadd
jmp
jne
inc
sub
decb
andb
jmp
das
adc
scas
in
dec
sahf
in
and
stc
jmp
push
repz
push
cs
les
cmp
cmpsb
and
sub
and
je
and
js
adc
mov
fisttpl
mov
lds
cmp
pop
jae
inc
and
sbb
xchg
push
cmp
push
add
cmp
jo
and
mov
jle
insl
add
push
jb
adc
movb
pop
jmp
jle
adc
lods
xor
subb
push
mov
mov
andl
inc
xchg
add
mov
mov
mov
jmp
fistpl
mov
push
sbb
popf
iret
dec
lahf
sub
call
adc
or
xor
cli
sub
adc
imul
fisubs
adc
jns
sbb
movsl
adc
pop
outsl
sti
and
stc
aas
and
test
xor
call
rcrl
xchg
fsubrs
dec
adc
xchg
dec
sub
sub
push
xor
add
call
scas
sbb
clc
add
adc
shll
and
mov
and
xchg
fwait
stc
ljmp
mov
arpl
ret
mov
test
arpl
insb
jecxz
outsl
test
je
int3
scas
js
sar
jl
aam
test
test
ret
mov
sbb
jecxz
jbe
cli
mov
dec
leave
jg
into
pop
icebp
pop
popf
or
cmp
and
mov
sub
xchg
nop
call
cli
sbb
jl
adc
sbb
stos
loopne
outsl
sbb
cmp
push
xchg
jne
jle
in
rolb
sarb
xchg
push
loopne
int3
jmp
pushl
inc
pop
mulb
push
mov
or
enter
dec
jnp
arpl
mov
js
aam
push
pop
in
in
jge
das
fstpl
cmp
jmp
dec
mov
lods
shlb
xchg
mov
cmp
in
inc
ds
push
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
jbe
add
pop
dec
add
cmp
add
jns
je
add
add
add
aaa
imul
add
add
jns
add
add
add
inc
add
push
add
add
add
inc
aaa
dec
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
outsl
add
add
outsb
add
add
add
add
dec
add
add
add
add
add
jbe
dec
add
add
xor
push
add
add
add
add
add
add
add
pop
add
popa
add
add
add
push
add
add
dec
add
add
ja
push
imul
add
outsb
add
add
add
inc
add
push
add
push
add
pop
add
add
outsb
add
add
jb
add
add
aaa
xor
jb
add
add
add
add
add
add
dec
add
add
add
inc
xor
add
add
aaa
add
add
add
add
add
add
add
inc
add
jbe
add
xor
add
add
add
add
inc
add
pop
add
add
aaa
add
add
add
add
add
xor
add
add
add
add
add
add
popa
add
add
add
xor
add
add
add
add
push
add
add
jns
imul
add
add
add
dec
add
xor
push
add
dec
add
add
insb
add
add
add
add
add
jns
add
push
add
add
add
push
add
add
push
add
add
add
push
add
insl
add
dec
cmp
dec
jns
add
add
xor
add
add
add
dec
add
add
add
add
xor
add
add
mov
and
jp
rol
add
in
fistpl
add
in
cwtl
cmp
jmp
jnp
mov
es
lods
mov
ret
movsb
pop
outsl
fadd
das
ljmp
enter
movsl
leave
sbb
sbb
popf
sahf
cmp
test
add
mov
int3
subl
pop
jb
mov
aam
mov
std
fdivr
leave
xchg
test
adc
add
push
xchg
inc
jno
adc
push
dec
imul
sti
add
push
int
push
loopne
sbb
xor
and
call
lret
iret
jmp
call
push
sbb
sbb
push
mov
ret
cwtl
xchg
movsb
jmp
lahf
mov
cmp
add
shr
or
inc
enter
inc
xchg
cmp
lock
xor
dec
out
xchg
andl
or
jecxz
addr16
xchg
push
or
inc
xchg
clc
ror
jp
arpl
sbb
sub
call
test
or
lret
cli
cld
outsl
jmp
lcall
je
sti
or
je
mov
or
mov
jae
pop
cmpsb
cmpsl
jp
add
daa
hlt
rcll
or
insl
test
sarl
jp
or
jecxz
daa
mov
daa
arpl
or
hlt
mov
pop
pop
fistps
xor
or
sub
jmp
mov
mov
cli
add
test
repz
fwait
add
cmp
enter
shrb
and
mov
push
xchg
test
enter
dec
cld
in
outsb
mov
add
mov
jae
mov
xor
out
mov
pop
sbb
pop
ret
das
inc
rol
mov
add
or
pop
imul
adc
movsb
push
cld
cwtl
dec
pusha
jp
stos
cmp
punpckhbw
call
add
imul
lcall
lods
mov
pop
sub
pop
por
mov
shll
xchg
mov
jecxz
out
repnz
les
mov
arpl
leave
mov
lret
mov
loopne
pop
jg
and
stc
scas
sbb
rclb
push
pop
ret
mov
inc
out
push
inc
xchg
dec
push
shrb
mov
push
js
xor
push
jae
pop
out
call
inc
fcoml
push
test
arpl
inc
mov
les
add
push
mov
sbb
or
std
leave
add
push
xor
outsl
call
lods
cmp
inc
xor
cmp
fsubrp
ret
loope
push
add
adc
shl
inc
adc
call
xlat
fwait
sbb
cmp
pop
mov
cmc
loop
pop
leave
imul
or
push
dec
dec
mov
decb
shlb
nop
cltd
dec
and
xor
ret
and
gs
subb
mov
dec
movsl
scas
cmpsl
pop
pop
xor
and
jecxz
adc
cmp
xchg
add
data16
adc
fcoms
xchg
jl
lea
sbb
cmpsl
stos
lds
jecxz
push
lcall
dec
push
xor
rclb
jge
std
cmpl
push
dec
mov
repz
inc
xor
inc
aaa
hlt
mov
adc
jecxz
push
push
jecxz
mov
fdivrs
loopne
adc
add
std
mov
adc
nop
push
subb
dec
pop
stc
mov
push
xchg
int3
mov
adc
push
or
jae
adc
mov
push
in
and
sbb
jae
xorl
mov
call
fs
loope
sub
out
insb
aad
fs
aaa
adc
outsb
push
lods
pushw
jmp
jp
inc
push
js
jns
sub
adc
sub
dec
mov
adc
fsubp
sub
inc
js
add
mov
gs
fnstsw
fdivrs
adc
mov
addr16
loop
sbb
or
std
push
mov
arpl
adc
lea
sub
in
into
mov
jne
xor
add
add
or
and
pop
lahf
fcompl
mov
inc
call
sbb
sahf
add
push
call
je
mov
mov
dec
aam
push
sbb
out
cmp
jle
sub
popf
popa
mov
push
mov
mov
push
adc
rolb
loopne
test
leave
xchg
adc
movsl
sub
push
sbb
aam
fsubs
ffreep
push
iret
push
dec
cld
push
lcall
add
push
mov
and
add
sbb
dec
dec
inc
clc
je
sbb
xchg
pop
jns
jbe
sbb
dec
call
roll
push
inc
jl
push
pop
xor
pop
add
sti
ja
aam
inc
fstps
push
push
in
fwait
les
fsubrs
outsb
clc
clc
or
faddl
lds
push
inc
dec
mov
jbe
pop
cmp
dec
out
lret
pop
fldt
push
push
push
or
xchg
mov
dec
and
mov
add
jo
ret
mov
faddl
lahf
cmp
sub
je
scas
lret
ret
test
in
inc
repz
test
push
int3
ds
xlat
lcall
pushf
cli
int3
outsb
jmp
lock
syscall
shr
mov
lret
cli
and
lods
jmp
push
fisttpl
or
test
movsl
inc
cmc
clc
pushf
jmp
mov
jl
aas
mov
cmp
add
adc
lock
test
pop
test
sbb
jo
insl
mov
push
add
aas
jg
call
movsl
scas
stc
notl
or
mov
int3
lods
stos
jbe
shrb
cmp
adc
mul
call
jmp
jge
jp
xchg
inc
xchg
sbb
xchg
movsl
in
in
test
or
or
sti
sub
ja
mov
cmp
pop
dec
mov
inc
into
xor
mov
aaa
push
fwait
call
jmp
stos
jle
ficomps
adc
jne
int3
movsb
loopne
fsubl
into
mov
mov
push
scas
jecxz
or
ficomps
push
fadd
push
rcll
mov
sarl
or
fistl
out
mov
mov
pop
jle
or
sub
dec
ljmp
call
stc
pusha
push
xor
das
iret
add
xor
fstl
mov
mov
xor
cli
or
push
sbb
out
call
dec
or
dec
scas
and
pop
pop
aas
clc
movsl
inc
push
dec
mov
shr
clc
mov
lcall
jbe
inc
add
ja
mov
mov
add
in
or
rorl
pop
in
jmp
cmp
dec
push
jle
aas
cmp
js
inc
cli
sub
js
inc
dec
fnstcw
jle
pop
and
into
mov
loopw
or
push
or
fidivs
mov
wbinvd
cli
ljmp
jecxz
pop
dec
and
in
push
pushl
mov
rolb
shr
add
mov
or
add
xor
mov
iret
inc
outsb
mov
dec
imul
xorl
insl
pop
jno
incl
jae
test
ss
pop
cmc
loop
ret
or
leave
jecxz
scas
jg
bound
cli
jmp
cmpl
lret
push
rorb
outsl
jbe
mov
add
cltd
dec
pop
mov
or
cld
jl
xchg
jle
add
enter
dec
call
dec
clc
lea
shl
popf
fcmovnb
pop
idiv
imul
cmp
fstps
cld
icebp
mov
test
xchg
movsb
adc
or
aam
shr
pop
mov
das
sarl
xor
clc
jne
aam
cli
test
inc
es
sub
ret
mov
fistl
sbb
mov
dec
xchg
leave
pusha
outsl
nop
push
add
push
ret
cmp
jne
mov
push
add
sub
ret
mov
les
test
mov
dec
rolb
iret
test
stos
jmp
enter
cmpsb
fcmovne
dec
jge
add
aaa
stos
add
icebp
stc
xchg
fs
dec
mov
pop
add
adc
sub
xor
arpl
xchg
xor
es
rcrl
lods
mov
xor
sbb
push
cmp
push
push
push
push
dec
pushf
inc
sub
inc
or
iret
adc
xor
leave
dec
test
jmp
mov
push
divl
leave
insb
notb
xchg
sub
icebp
out
push
push
call
pop
jnp
cmp
aas
insb
add
inc
ror
fs
fildl
int3
add
mov
lret
inc
in
jne
orb
push
mov
call
push
jmp
loope
jne
lds
push
call
mov
add
inc
adc
rclb
dec
cmc
jne
push
mov
mov
or
sahf
rclb
imul
mov
xor
mov
sbb
and
arpl
pop
loope
inc
insl
mov
add
arpl
aam
mov
push
call
loopne
inc
pop
jle
aaa
shrb
cmp
je
push
aam
jmp
repnz
rorl
popf
enter
mov
fucom
imull
sbb
jecxz
add
movsb
add
xlat
lret
nop
or
push
imul
mov
leave
sbb
aad
mov
xor
arpl
iret
mov
jns
mov
xor
insl
outsb
mov
sub
lods
das
jl
jnp
in
mov
or
arpl
in
xor
jne
in
cli
cmp
push
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
