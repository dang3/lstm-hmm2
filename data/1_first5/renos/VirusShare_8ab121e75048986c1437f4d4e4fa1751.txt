cmp
imul
inc
add
movsb
pushf
mov
mov
dec
dec
inc
sahf
cld
sar
hlt
lock
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
dec
dec
dec
mov
daa
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
cmp
daa
daa
daa
cmp
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
imulb
das
push
mov
add
mov
mov
push
call
sbb
in
fwait
clc
clc
pop
pop
pop
ret
aas
lock
mov
out
fistpll
fdiv
cmpl
je
repnz
div
ja
les
rorb
test
inc
mov
xor
add
rorb
mov
cmpb
je
sbb
je
repnz
in
jg
mov
and
xor
mov
dec
cld
mov
and
xor
jle
mov
aas
lock
icebp
add
dec
hlt
mov
loopne
dec
mov
js
clc
sub
add
cs
int
xor
decb
jne
mov
mov
fnstsw
int
add
sbb
js
mov
xlat
in
mov
hlt
fbstp
add
push
lock
lea
testb
mov
push
loopne
rcrb
jge
add
mov
lock
jmp
adc
push
aas
enter
lods
test
les
mov
inc
lea
xchg
mov
lea
inc
lea
push
fisttpll
mov
mov
inc
dec
inc
fisttps
push
cmp
clc
jge
inc
dec
lea
lea
mov
mov
sub
mov
sti
mov
mov
dec
dec
dec
inc
inc
cmp
adc
pushf
cld
jg
ljmp
and
mov
cmp
jnp
dec
inc
lea
lock
call
adc
xor
rorl
test
jae
mov
lea
mov
aas
pop
xor
inc
dec
dec
dec
insb
adc
mov
xchg
add
in
inc
cli
fldenv
inc
fldt
push
or
add
mov
pushl
lea
dec
mov
outsb
hlt
lea
mov
or
xchg
lock
adc
mov
sti
loope
sbb
mov
lock
loop
in
call
lock
stc
or
inc
and
ljmp
pushl
mov
inc
xchg
hlt
inc
mov
cld
dec
mov
lea
clc
or
jne
mov
test
mov
iret
dec
dec
inc
addb
test
jg
sub
cmp
jb
mov
into
add
faddl
js
cmpsl
dec
and
add
xor
test
call
mov
cmp
jge
dec
hlt
inc
inc
popa
idiv
in
pmaxsw
mov
mov
inc
inc
mov
int3
clc
inc
add
and
adc
aaa
jb
xchg
fchs
or
iret
xchg
in
lea
adc
lods
dec
inc
pop
nop
cmp
in
push
in
rcll
mov
js
sub
xchg
mov
mov
jnp
inc
sti
lods
dec
mov
call
hlt
jae
lret
jg
imul
mov
inc
xor
push
dec
mov
sbb
push
sbb
mov
adc
subb
cmp
add
arpl
mov
lea
lea
inc
cmp
or
jbe
scas
js
test
mov
and
pop
push
dec
mov
data16
pop
pop
lock
cld
jp
lock
sub
test
ja
add
dec
bound
or
inc
pop
add
sub
mov
xchg
test
fistpl
push
in
and
dec
mov
int3
lea
jl
pop
orl
scas
mov
jno
and
or
ds
aam
dec
mov
lock
loopne
fcompl
or
loopne
pop
cmp
ret
inc
mov
or
out
test
adc
mov
daa
js
add
push
insl
loop
lcall
into
fdivrs
mov
push
push
and
sahf
aam
dec
cmp
or
ljmp
repnz
in
enter
les
rcrb
push
push
enter
adc
add
jbe
out
pop
lahf
xchg
cmp
imul
add
push
mov
mov
adc
xchg
movsb
push
push
test
push
lcall
call
ss
pop
pushf
cwtl
jmp
jl
lds
sarb
mov
mov
stos
mov
mov
jmp
aas
mov
inc
mov
mov
inc
mov
mov
xchg
push
std
mov
xchg
cmp
sub
add
mov
sti
xchg
repz
mov
lea
cmp
in
mov
pushl
pop
lea
push
into
xchg
jb
mov
cmp
cmp
mov
dec
mov
and
aad
xchg
pop
sbb
sbbb
jl
add
adc
pop
sahf
lret
sub
repnz
and
mov
out
mov
push
sbb
js
and
addb
jae
xchg
cmpsl
adc
pop
adc
lret
sbb
stos
mov
in
pop
sbb
cmpsl
or
mov
push
fmull
andl
dec
and
push
inc
pop
sahf
lret
sarl
cmp
cmp
jmp
adc
in
fidivrs
dec
or
xchg
or
mov
xor
push
push
popa
nop
xor
loope
mov
loop
adc
adcb
in
mov
jne
icebp
mov
adc
and
sbb
and
pop
push
mov
pusha
scas
adc
adc
add
adc
cmp
jno
and
stc
mov
js
or
pop
jno
add
sbb
or
push
pop
push
in
push
insb
hlt
cld
cmp
cmp
sbb
mul
push
jle
hlt
lock
iret
in
adc
mov
add
add
in
or
pushf
pusha
hlt
cmp
sbb
cmp
cmpsb
and
loopne
inc
es
hlt
rcll
cld
mov
jg
pop
lock
xor
cmp
xor
cmp
aaa
xor
xor
mov
add
xor
cmp
xor
xor
and
mov
das
or
xor
cmp
idivl
adc
xor
xor
fisubrl
xor
shlb
cmp
add
int3
cwtl
mov
in
aaa
aaa
xor
inc
add
or
or
xor
xor
adc
outsb
cmp
in
in
xor
jl
adc
je
cmp
inc
mov
sub
rcll
aam
mov
movsb
xor
clc
push
inc
mov
add
sub
ljmp
movl
movsl
andb
pop
xchg
in
sub
mov
push
sbb
aam
xchg
outsb
rol
pop
test
in
fwait
add
lea
mov
push
xor
mov
enter
pusha
out
or
lcall
loopne
mov
mov
mov
cltd
mov
mov
js
or
and
loopne
pop
push
imul
fs
xor
test
add
test
in
loopne
mov
lea
nop
pop
pusha
xor
jb
rcrb
fcompl
mov
lods
mov
pop
enter
dec
mov
sbb
add
iret
nop
xchg
jb
adc
leave
pop
or
adc
xchg
aam
jmp
leave
xchg
lahf
mov
clc
lret
cmp
lahf
out
movsb
or
pushl
xchg
dec
mov
add
jl
push
repz
push
xor
cmpsb
inc
pushf
lds
orl
mov
roll
movsb
lret
mov
gs
add
rcll
xor
add
cmp
ds
test
mov
mov
adc
nop
imul
cmp
push
addl
clc
arpl
outsl
sub
xor
push
jb
adc
lock
inc
cwtl
popa
and
lods
push
sub
pusha
jo
sti
nop
and
push
mov
push
jle
add
ds
and
dec
dec
sysenter
cmp
pop
adc
adc
and
movsl
ret
push
xor
or
loop
adc
xor
in
repz
in
xor
filds
sub
mov
ss
cld
push
mov
add
jnp
push
test
xchg
mov
insb
xor
fldl
shl
add
xchg
jmp
out
and
nop
inc
dec
adc
push
inc
push
sbb
push
sub
sub
push
inc
adc
outsl
xor
ja
inc
xor
add
mov
push
jp
add
jge
xor
dec
aaa
das
aaa
ss
xor
xor
jne
sbb
xor
xor
neg
xor
and
inc
add
xor
outsb
pop
mov
dec
add
adc
sub
xor
js
std
push
push
xor
xor
ja
xor
cmpl
repnz
inc
loop
xor
aaa
cmp
pop
push
outsb
bound
ss
mov
cli
pmulhrsw
cmp
mov
fbld
xchg
jp
xlat
xor
ss
cmp
pop
fistl
push
xor
pop
xor
xor
xor
test
jg
push
cmp
popf
inc
outsl
fsubp
pop
or
and
mov
sbb
sub
cmp
mov
xor
mov
je
or
movsl
pop
pop
mov
pop
jp
add
jb
fildll
fcomip
jp
pop
sti
add
jb
adc
dec
cld
mov
rolb
add
movsb
test
daa
je
pcmpeqb
outsl
neg
or
bound
psrld
pop
sti
idivb
jp
fldt
sub
cli
rclb
pushf
and
jp
repz
jg
call
jb
jp
repz
cmpb
mov
sbb
gs
popf
jb
jae
sti
popf
loopne
or
call
jmp
cltd
sbb
div
dec
sub
or
jmp
pop
stc
push
outsb
push
mov
ja
mov
les
adc
mov
xor
outsb
sysenter
cld
jno
jb
test
std
in
decl
or
or
jl
add
stc
in
sbb
fdiv
mov
std
jp
adc
and
push
jnp
adc
sub
adc
pop
sti
jl
out
adc
stc
adc
and
adc
cld
jb
sub
dec
pop
repz
fwait
cmpsb
inc
inc
stos
xchg
sti
xchg
test
sti
sbb
mov
sarl
in
xchg
push
and
stos
sub
adc
xchg
lods
xchg
mov
addr16
into
cmp
js
inc
mov
repz
scas
div
adcb
sbb
and
add
dec
inc
mov
pop
imul
or
or
adc
push
lret
insl
fists
jne
xor
idiv
mov
adc
push
push
jg
pop
pop
insl
testl
in
mov
addr16
sub
stc
iret
das
pop
in
pop
adc
jb
sarl
mov
mov
and
cli
xor
or
pop
push
mov
cmp
adc
int
setge
add
adc
aaa
jp
jge
iret
mov
push
sti
imul
inc
sbb
xlat
sbb
sbb
out
jbe
mov
cmp
jo
imul
mov
xchg
sbb
mov
dec
shrb
in
out
jbe
lcall
lret
lret
push
and
aaa
inc
imul
stc
inc
jp
jo
popa
xchg
bound
push
adc
add
testl
jno
std
mov
mov
cmpsl
pop
rorl
pushf
jno
js
jnp
bound
cmp
jb
cmp
adc
fsubrs
repz
pop
fisttps
pop
mov
dec
nop
dec
or
popf
int3
adc
add
add
lods
js
mov
stos
jecxz
inc
test
aad
ficompl
adc
and
sti
mov
repz
testl
sub
cmc
dec
fcomi
and
je
test
sbb
or
mov
cld
xor
lock
lea
pop
fdivr
and
divl
test
jne
push
adc
jbe
js
daa
inc
imull
loop
mov
aas
call
js
xchg
push
call
loop
ss
inc
push
fs
push
clc
movzwl
dec
test
inc
or
add
lock
mov
push
orb
adc
jp
adc
mov
add
cmp
jbe
loope
push
negb
push
cmpl
je
pop
or
xchg
or
push
and
add
jle
nop
add
iret
insb
shl
jae
iret
inc
dec
shll
jnp
adc
sbb
or
sbb
sub
dec
in
jne
add
ja
incl
dec
outsl
popa
fs
imul
sub
outsb
push
push
pushl
push
push
popa
imul
insb
gs
bound
arpl
std
outsl
in
ljmp
jo
imul
sub
adc
je
popa
insb
inc
insb
insb
outsl
arpl
push
je
dec
outsl
jbe
dec
gs
jo
inc
fistps
bound
outsb
fs
outsb
je
scas
sbb
push
gs
inc
gs
jb
pop
adc
movsb
cltd
mov
adc
test
test
sub
sarb
mov
call
and
inc
push
call
adc
loopne
lea
sbb
sbb
add
call
pop
cmc
hlt
sti
test
call
adc
nop
test
mov
add
lods
jno
stos
xor
cmpl
and
or
loopne
mov
aaa
push
fisubs
pop
test
stc
sbb
dec
push
and
inc
cmp
and
or
or
or
mov
adc
and
mov
adc
test
lret
mov
clc
and
call
in
mov
sub
xor
push
cmp
leave
inc
or
mov
push
lock
stc
bound
inc
jnp
mov
sub
sub
push
and
lock
xor
push
or
hlt
orl
mov
mov
cmp
inc
ret
add
sbb
ret
test
scas
gs
lock
inc
cld
in
sub
mull
pushf
jbe
cmpb
add
sahf
lret
inc
and
subb
dec
and
dec
and
lock
lock
adc
aaa
loop
cmp
movl
in
in
adc
sbb
les
pop
ret
jae
xor
and
mov
insb
cmpsb
lods
fcomi
popa
push
cld
sub
rcll
jbe
scas
shl
call
stos
sub
push
pop
addr16
mov
int3
mov
lea
fadd
mov
adc
xorl
sbb
sbb
rclb
das
pop
in
adc
call
push
sti
adc
jb
jmp
ja
adc
sarb
push
cmp
jne
js
push
push
loopne
or
push
push
ficoms
mov
add
cld
and
inc
mov
sbb
sbb
hlt
or
cltd
movlps
and
add
push
adc
imul
gs
mov
xor
fs
insb
outsb
mov
outsl
cmp
add
popa
insb
push
pushl
sti
jo
je
popa
inc
pop
inc
jo
add
sub
inc
insb
gs
dec
push
hlt
mov
imul
outsl
add
outsb
add
movsl
out
xchg
jo
rol
sti
movsb
hlt
mov
js
inc
hlt
nop
push
cltd
ret
sbb
pop
sbb
rcr
jne
push
add
or
pop
cmpl
or
fmul
mov
pop
xchg
cmp
jp
add
pop
cli
test
push
push
add
out
and
lea
pusha
in
pop
insb
mov
add
je
cld
cmpb
test
rorl
push
data16
cmp
rolb
jbe
push
add
popa
xor
and
mov
mov
pop
daa
jne
decl
sbb
jmp
push
je
rcrl
jbe
mov
dec
clc
mov
clc
xor
mov
popf
std
add
adc
add
fildl
les
pop
mov
add
dec
aas
sub
hlt
sub
mov
hlt
add
scas
and
psubb
inc
pop
add
cmpsb
mov
rcll
rclb
add
add
fistpl
les
mov
scas
ret
clc
xor
cmp
jge
add
cmp
push
icebp
cmpsl
push
jne
jae
inc
cwtl
xchg
mov
and
cmpw
ja
xor
div
cmp
dec
cmpsl
sub
insl
cld
es
lahf
clc
inc
nop
sbbb
jbe
js
call
lods
call
insb
adc
sub
adc
push
aam
and
add
cld
dec
imul
adc
ret
or
add
and
mov
fildll
ret
neg
mov
not
shr
cmp
je
addb
adc
push
push
loopne
fs
cmp
jne
dec
mov
add
sub
sbb
cmovnp
adc
test
add
or
mov
add
or
cmp
mov
pop
mov
inc
inc
das
and
inc
in
ret
nop
add
das
xchg
stos
mov
mov
jge
mov
and
daa
add
and
add
add
or
mov
sbb
pop
dec
mov
imul
cmp
xlat
in
idiv
sub
cmp
add
push
add
jae
add
push
pop
add
mov
icebp
add
dec
pushf
inc
add
inc
add
dec
sbb
fucomip
fists
inc
inc
add
push
push
dec
pop
inc
push
pop
add
add
jnp
fildl
sub
add
add
les
mov
jnp
incl
addb
add
or
sbbl
add
add
addb
add
in
aas
rcrb
out
add
add
mov
adc
jne
ja
lds
sbb
add
xchg
inc
orb
cmpsb
cmp
inc
push
add
xchg
inc
mov
mov
add
push
mov
dec
xor
xchg
ss
ja
imul
adc
aas
xchg
inc
movl
sub
sub
and
sub
outsl
jae
add
and
and
and
fdivs
sub
xor
mov
test
and
in
mov
shll
orl
dec
popf
pop
add
dec
xor
mov
insl
or
push
or
jne
cmp
push
inc
pop
push
sbb
ret
or
lret
loope
lret
adc
jne
or
or
jnp
out
js
daa
adc
inc
sub
aaa
pop
std
cld
frstor
inc
inc
insb
inc
or
xor
mov
and
ja
lods
imul
sub
inc
or
sub
inc
bound
mov
lret
ficoml
add
jns
inc
insb
dec
mov
out
cmc
xchg
ss
sbb
pop
mov
lods
mov
inc
mov
rcll
push
jmp
insl
cmp
push
or
and
push
pop
add
add
iret
add
ds
add
fstpt
daa
jbe
lods
add
pop
test
popl
andl
mov
jae
hlt
adc
test
shlb
xchg
push
push
jle
in
adc
into
cmc
sti
jo
mov
enter
push
std
jb
ror
add
lods
add
jnp
out
mov
dec
xchg
adc
xor
addr16
int3
pop
test
lods
adc
and
pop
and
add
xchg
fidivrs
mov
and
ficompl
scas
mov
in
xchg
and
mov
inc
mov
inc
jecxz
add
fbld
mov
repz
testb
imul
pop
push
dec
mov
add
and
iret
push
stc
dec
sti
xchg
and
test
or
addb
iret
mov
pop
iret
inc
iret
and
mov
in
hlt
fwait
mov
pop
push
outsl
jbe
or
pop
cmp
adc
jecxz
cmpsl
pushf
cmp
in
dec
andb
out
or
inc
mov
xchg
popf
fcmovnu
scas
aad
addr16
xor
jmp
or
cmp
adc
addb
addl
inc
xchg
ja
and
imul
adc
sbb
das
adc
xchg
mov
adc
aaa
dec
sahf
sbb
out
ret
addr16
int
int3
pop
adc
ljmp
andb
punpckhdq
pop
add
xchg
sbb
nop
or
and
dec
push
pop
andb
dec
add
arpl
and
setns
test
maxps
or
push
add
add
sbbb
mov
mov
out
and
shrl
jg
mov
popa
addl
iret
arpl
push
mov
daa
inc
mov
ret
jbe
imul
mov
mov
fcoms
pop
or
les
push
inc
push
aas
mov
lds
sti
xlat
inc
insl
pop
xchg
les
xlat
dec
mov
insl
fadds
and
inc
scas
inc
push
and
jno
ret
stos
sbb
mov
out
arpl
sub
sub
cmpsl
or
mov
xor
mov
popf
jo
fsave
push
mov
orl
push
fsubrl
mov
repnz
xchg
mov
cmpb
cmp
mov
mov
ret
out
inc
fwait
jecxz
adc
add
or
xchg
std
shlb
xchg
mov
test
inc
lahf
int
mov
test
call
rcrl
fwait
pusha
mov
jmp
cwtl
ret
sub
js
adc
ret
jmp
popa
inc
iret
pop
repz
lret
int
and
test
sti
rcr
inc
rcr
and
jmp
ffreep
mov
add
insl
iret
lret
or
mov
sub
gs
cmc
das
dec
jae
in
add
xchg
sub
int
out
sbbb
and
jo
testl
and
xchg
xor
mov
das
fldl
insl
pop
pushf
mull
push
pop
outsl
fsubrs
mov
jmp
out
fcos
inc
inc
pop
pop
pop
out
sti
into
std
inc
mov
inc
pop
aas
cmp
xchg
sub
gs
psllw
cwtl
out
inc
sub
sbb
in
fdivrs
and
pop
nop
inc
adc
mov
pop
shlb
mov
jae
test
push
or
outsl
daa
pop
mov
inc
cmp
sahf
sbb
testb
dec
mov
outsb
xchg
dec
mov
mov
and
cmp
and
inc
pop
jge
cld
add
inc
push
sub
icebp
stos
mov
cmp
fdivrs
inc
cmp
add
adc
or
push
mov
mov
outsb
sti
mul
and
jg
or
flds
and
fwait
jge
aaa
mov
insb
pop
iret
jecxz
es
and
mov
mov
xlat
sbb
cwtl
sub
fdiv
mov
lret
pop
test
lods
scas
cmp
adc
xor
and
pusha
aam
push
ds
test
sti
loopne
ja
scas
add
add
jg
movsb
loopne
or
jle
daa
and
sbb
insl
sub
nop
aam
lea
mov
ja
into
scas
mov
xchg
pusha
or
push
dec
sbb
test
dec
cmp
add
add
mov
jnp
pop
xor
movsl
roll
into
inc
pop
fadds
push
fildll
push
insb
push
mov
in
and
ja
xlat
mov
fisubl
ds
or
cmp
test
negb
arpl
push
in
outsl
dec
jle
js
jl
in
insl
in
push
push
in
and
dec
and
lcall
loop
pushf
fnstenv
je
add
loopne
hlt
jae
jl
add
cmpsb
es
jmp
push
fistpll
daa
ficoml
iret
mov
mov
add
daa
push
dec
scas
aas
pop
fidivrl
dec
or
add
ja
jge
jne
push
dec
lds
pop
and
mov
or
add
mov
and
clts
pop
pop
jg
movsb
inc
fistl
arpl
dec
ljmp
addl
mov
mov
push
mov
mov
stos
mov
aad
lods
mov
inc
fsts
sub
movsl
add
jne
xor
mov
lret
lods
mov
jbe
inc
addl
lret
jb
dec
cmpsl
mov
inc
sbb
mov
lods
sbb
mov
scas
adc
add
mov
and
cmp
fistpll
ret
add
mov
pop
bound
or
and
adc
or
jl
mov
out
push
and
fcmovne
enter
in
in
jmp
icebp
fidivl
pop
jns
dec
loopne
add
fdiv
or
mov
js
push
xlat
mov
mov
lods
pusha
push
add
rcr
and
inc
fsubl
inc
cmp
std
arpl
add
int3
lock
dec
loopne
lock
push
sub
out
add
jae
loopne
cltd
pushl
add
jno
sub
imul
xlat
jp
ffreep
push
call
cmp
fs
mov
cmp
cwtl
sbb
ds
inc
pushf
in
inc
shrl
inc
js
adc
mov
mov
je
call
add
mov
fiaddl
mov
sub
je
jo
inc
pop
push
outsl
pop
ds
scas
jle
scas
jp
xor
divl
in
sbb
adc
mov
or
shll
out
out
push
mov
cltd
add
lods
dec
jnp
jbe
stos
xchg
xchg
fiadds
pop
jp
mov
and
test
imul
push
xorb
testl
imul
xor
or
enter
flds
mov
out
jle
inc
push
cmp
mov
sub
sbb
test
add
and
daa
mov
pushf
add
or
sbb
fidivs
fxch
test
insl
push
lods
out
adc
xor
or
and
daa
xchg
xchg
or
cmpsb
and
add
out
cwtl
jge
lahf
cs
into
in
mov
loop
lock
mov
mov
test
add
sub
idivb
je
std
xor
add
orb
sub
sbb
in
lret
jg
jle
lods
cmp
pop
imul
jne
pusha
ja
cld
insb
add
cmpsl
in
out
fmuls
jmp
push
sbb
lods
push
xchg
ja
int
and
cmpsb
push
xor
adc
leave
adc
mov
insb
jle
sar
pop
stos
add
ret
mov
or
mov
pusha
xchg
outsb
cmp
out
cmpsb
int3
sbb
adc
add
jae
loop
cld
in
sarl
into
jne
cmp
mov
sbb
adc
into
push
xchg
and
or
mov
add
cmp
cmp
lret
jns
xchg
cld
add
xchg
add
cwtl
jns
or
mov
lcall
rcrl
jno
call
aam
cmp
insl
scas
pop
mov
loope
in
fldenv
ja
adc
iret
or
aam
dec
push
sub
xorb
test
add
and
js
leave
push
xor
lods
bound
ljmp
mov
sbb
call
jns
test
gs
ja
fadds
adc
jo
or
xlat
jno
mov
flds
movsl
xchg
movl
addb
cmp
add
imulb
mov
inc
mov
mov
add
sub
cmp
mov
mov
mov
xchg
mov
add
jo
ret
into
shrl
repnz
daa
nop
inc
mov
push
add
int
insb
mov
stc
xor
in
cli
popa
shlb
jl
aad
mov
adc
adc
arpl
push
mov
dec
or
fldl
fnsave
cli
movsl
xchg
stc
add
jl
add
cmpsl
cmpsb
mov
mov
push
sub
fldt
call
push
aad
push
mov
dec
sub
addr16
dec
or
icebp
out
pop
or
call
bound
sub
lcall
pop
mov
add
adc
mov
or
pop
aas
loopne
mov
push
xchg
fists
jle
outsl
rolb
jmp
je
cmpsl
fwait
sub
loope
jno
dec
adc
cmpsb
je
mov
pop
mov
fbld
fcompl
insl
imul
test
fdivl
out
adc
sbb
and
out
jmp
outsl
ret
imul
cmp
xchg
dec
or
dec
decb
aam
nop
les
stos
mov
loopne
es
dec
push
test
hlt
add
es
ss
xchg
lret
jmp
imul
std
cli
add
std
cli
xor
notb
outsb
xor
mov
mov
mov
fwait
lcall
stc
iret
lock
test
shll
daa
jmp
add
xchg
into
and
adc
cmp
bound
daa
jl
les
inc
sbb
icebp
sub
pop
rcll
test
push
fs
fimuls
mov
movsw
jbe
inc
mov
adc
and
not
test
inc
iret
test
dec
xchg
repnz
sub
push
jmp
lahf
leave
add
gs
mov
fcoms
pop
sub
test
mov
push
mov
jp
mov
jnp
sbbb
jmp
add
cld
dec
movsl
sbb
add
xchg
push
adc
jo
loop
xor
std
lret
sarb
lret
in
sti
inc
fmul
inc
loopne
iret
imul
daa
out
aam
adc
idiv
cmp
mov
cmp
push
das
jl
add
ret
sti
mov
pop
dec
cwtl
pop
add
add
dec
rorb
xlat
push
je
push
add
leave
xchg
sbb
daa
insb
stc
mov
or
test
sbb
add
movsb
lret
outsl
test
add
outsl
es
in
or
sti
cmp
shrb
leave
rolb
push
js
maskmovq
idivl
pop
movsb
sub
je
mov
or
cmp
sub
or
add
adc
dec
mov
mov
fcomps
pop
cmp
cmp
jo
jmp
cmp
nop
shll
jno
push
or
or
fsub
scas
jp
sbb
divl
cmp
test
or
push
sbb
sar
scas
adc
ret
and
inc
sarb
mov
popf
xchg
icebp
sbb
mov
pusha
add
hlt
enter
cmp
sahf
loop
pop
jle
mov
jge
xchg
ficompl
or
mov
push
adc
ja
ljmp
int
cmp
ja
in
addl
loop
xchg
iret
das
fldcw
call
pop
aaa
insl
insl
inc
lret
inc
push
cmpsl
flds
lock
pop
xchg
jg
imul
iret
aaa
shrl
ret
test
pop
or
mov
mov
std
outsl
and
jle
fldcw
xchg
add
out
ret
shlb
xor
test
out
mov
dec
scas
roll
rcrl
imul
xor
push
or
js
jbe
sub
shlb
add
fistpll
add
lret
aaa
je
jl
pop
jb
adc
mov
xchg
stos
lahf
sbb
sahf
cld
and
insl
mov
lds
cmpb
sbb
mov
sub
adc
iret
and
cmp
inc
cmp
xchg
lcall
xor
sbb
jle
call
out
pop
mov
cmpsl
ds
aam
je
jle
push
testb
repz
xchg
iret
sbb
lahf
sbb
jmp
cmp
iret
sbb
adc
pop
pop
outsl
aas
adc
jp
outsl
insb
jg
mov
test
cmpsl
cmp
roll
cmp
add
cld
out
ja
and
mov
mov
adc
clc
movb
sub
xchg
sub
push
popa
inc
out
mov
iret
js
daa
rolb
jb
push
add
roll
clc
movsl
nop
add
frndint
or
sbb
int3
xor
aaa
sarl
mov
adc
popa
arpl
fidivrs
xchg
and
cmpsb
jp
sub
movl
cmp
nopl
add
punpckldq
mov
jle
aam
cmp
inc
mov
push
scas
inc
aas
insl
cmpsl
add
adcb
cmc
dec
xchg
stos
hlt
jb
add
add
cmp
dec
inc
sbb
jo
lock
cmp
rcll
sub
mov
xor
push
xor
test
jmp
add
jo,pn
push
xchg
mov
jmp
leave
stos
pop
mov
add
outsl
mov
lcall
cld
add
scas
fldt
lods
aad
pop
cmp
js
push
in
lds
and
and
dec
mov
outsl
jo
lahf
push
cmp
pop
iret
stc
pop
sbbb
fwait
popf
sub
out
jbe
mov
fistl
dec
ja
fistpl
push
shl
imul
and
mov
sub
jns
mov
mov
fs
push
aaa
cmp
and
mul
push
test
lods
pop
ljmp
loopne
out
sbb
cwtl
popa
xor
lcall
xor
mov
dec
jle
inc
add
ret
xchg
mov
ret
push
lods
and
cmpsl
shlb
or
ljmp
push
scas
cmc
mov
ja
jmp
push
inc
inc
sbb
and
push
mov
bound
addr16
mov
and
sarb
shlb
stos
pop
loopne
stos
je
adcl
mov
jbe
jne
dec
jmp
test
data16
pop
push
repz
pushf
loop
pop
aas
bound
ret
adc
aaa
movsl
pop
pop
and
mov
cmp
fsubs
ja
and
lcall
test
sahf
jecxz
sbb
clc
lock
test
mov
insb
mov
xchg
aad
in
loope,pn
daa
int3
movsb
dec
push
ds
into
jo
sbb
in
stos
mov
loop
ja
push
xor
pop
xchg
jge
fcompl
cli
xchg
sbb
push
stc
dec
and
and
hlt
lods
pop
jb
aaa
je
pusha
imul
fucomp
mov
hlt
cmp
loope
adc
pop
stos
add
mov
inc
xchg
mov
movsl
xor
gs
cmp
cmp
ret
xor
and
xor
sbb
pop
es
sub
fildl
addb
and
add
push
pop
and
mov
nop
fstl
fildl
xchg
test
nop
mov
scas
cmp
push
hlt
repz
push
inc
aaa
fsubs
enter
je
shll
ss
stos
rcrb
add
xchg
jmp
sbb
test
sahf
gs
cmp
loop
dec
mov
cmp
or
es
fiaddl
cltd
les
mov
outsb
fcoms
lods
ds
xorl
sbb
stos
imul
imul
pop
aam
das
outsb
jle
subb
insb
push
mulb
mov
cmp
cmpsb
adc
lods
outsl
xchg
sbbl
ja
xor
xor
rcrl
xchg
out
push
mov
scas
cmp
xchg
orl
jb
dec
jg
xor
push
push
sbb
sbb
and
pop
lods
andl
outsl
sub
lods
cmp
nop
in
mov
daa
insb
xlat
adc
mov
arpl
pushl
loope
xchg
pop
in
push
jo
out
bound
lcall
jbe
pop
adc
lahf
lock
inc
loopne
sbb
mov
lea
cmc
icebp
int
and
daa
xchg
pop
or
or
je
xchg
jne
inc
pop
inc
cltd
inc
jl
mov
mov
fisttps
push
and
push
xchg
fdivs
ds
mov
xchg
mov
cwtl
cmp
ss
les
pop
push
dec
movsl
push
cmp
std
xchg
xor
stos
insl
mov
shl
add
inc
xor
repnz
cmpsb
loopne
push
and
gs
mov
ljmp
and
imull
je
sbb
js
jmp
mov
mov
jns
fsubs
mov
pop
cmp
sbb
adc
and
jnp
ds
pushl
pop
add
mov
xchg
sbb
jl
cmp
out
push
inc
lcall
sub
sub
fldl
pop
out
adc
or
cmp
repz
pop
orl
das
fsubrs
and
lcall
fisubs
sahf
fimuls
jge
lret
add
jb
enter
pop
es
cmp
sbb
mov
xchg
mov
push
mov
cltd
test
xchg
roll
sub
or
arpl
xchg
aas
pop
mov
bound
push
addr16
add
xor
mov
loopne
mov
pop
daa
pop
xchg
inc
xchg
lcall
les
adc
test
bound
push
aaa
xor
or
jno
les
inc
je
outsl
sbb
mov
or
xchg
and
dec
dec
test
push
rclb
push
repnz
daa
ja
mov
iret
arpl
sub
lahf
mov
cmp
dec
sbb
sbb
cmpsb
push
mov
loopne
loopne
add
sub
fiaddl
rcr
aad
pop
pop
cmpsl
js
testb
ss
les
pop
push
aaa
pop
in
iret
icebp
loopne
xor
shrb
pop
cmp
sahf
jbe
mov
or
call
les
add
push
js
add
cmp
cmpsl
outsl
scas
mov
incb
iret
clc
rolb
inc
xchg
iret
adcl
fs
or
cmpsl
test
jb
sub
pusha
lock
push
pop
inc
add
push
inc
pop
add
mov
es
lret
call
cmpl
or
and
aas
xor
sub
sub
or
ja
aas
pop
mov
push
xor
sbb
test
call
lret
sbbl
test
mov
lret
cmpl
loope
sti
scas
adc
pushf
dec
inc
or
repnz
push
das
iret
xrelease
loopne
sbb
add
iret
jle
jle
pop
lods
xchg
rcll
ja
and
pop
clc
iret
xor
push
cmp
cmpsb
sbb
loopne
cwtl
pop
xchg
fbld
push
rcrb
lret
arpl
mov
jl
movsl
add
mov
fists
and
repnz
lret
enter
call
loop
aas
mov
or
and
cmp
icebp
pop
or
sub
inc
jne
mov
mov
and
leave
lret
movsl
push
stc
divl
outsl
pop
cld
in
jbe
push
in
leave
and
das
sub
fadds
mov
pop
in
push
sub
mov
dec
iret
and
ds
jp
ljmp
out
pop
pop
das
jno
call
pop
or
pop
add
xorb
pop
sbb
mov
xchg
add
fisttpll
xchg
lock
fiaddl
icebp
lret
and
xlat
or
in
mov
rol
inc
and
in
sahf
int
test
ljmp
push
out
inc
js
cmp
pop
rorb
mov
fucomip
sbb
mov
cmp
sub
mov
loopne
mov
or
mov
pop
jne
js
lret
push
xor
mov
loope
insb
xchg
jbe
aaa
pop
cmpb
mov
cmp
push
push
add
adc
ret
add
cmp
push
in
movsl
cmp
nop
pop
jge
pop
jecxz
xor
pop
jle
xchg
push
jb
jo
shr
jb
loopne
mov
cmp
mov
shll
mov
mov
rolb
sbb
lods
inc
lcall
add
outsl
hlt
add
div
mov
subl
xchg
xor
out
push
call
ljmp
das
jb
dec
test
cmpl
push
pop
js
mov
roll
iret
sub
lock
loopne
mov
stc
push
clc
add
je
xchg
dec
or
cld
adc
sti
and
jno
xor
and
or
mov
inc
or
sbb
int3
mov
mov
das
movl
rcll
dec
loope
je
push
xchg
pop
int3
add
pop
mov
outsb
sub
or
add
xorb
sbb
sahf
addb
inc
loopne
mov
pop
jbe
sbb
mov
icebp
and
add
in
outsl
scas
jge
push
insb
dec
dec
xor
or
fidivs
xchg
rcr
iret
cmc
sbb
sub
repz
or
push
lahf
insb
inc
pop
mov
xor
jecxz
push
lret
notb
jecxz
test
out
sub
pop
mov
xor
mov
xchg
jne
scas
mov
data16
test
popf
inc
xor
outsb
pop
pusha
sub
mov
in
pop
iret
mov
js
mov
xor
sbb
js
insl
jo
fcoms
lahf
divl
imul
mov
loope
cwtl
insl
aad
fsubl
jnp
jno
pop
lods
call
imul
lods
xlat
xchg
jecxz
lock
aam
mov
pop
and
xorl
shrb
lahf
mov
adc
xchg
add
add
jp
adc
add
push
movsb
xor
ja
sbbl
and
mov
pop
cmp
pop
das
or
push
and
dec
and
je
aam
pop
iret
lret
or
sbb
movsl
fwait
mov
and
pusha
xchg
or
adc
push
nop
or
addr16
movb
push
mov
xchg
in
mov
daa
loope
psubb
clc
add
jns
clc
loope
ljmp
out
rcll
jo
stc
shrd
mov
adc
adc
pop
mov
or
inc
movsl
rcl
jno
push
push
ficoml
pop
and
loope
es
fsubl
ds
outsb
pop
sbb
fistpl
xor
imul
jl
sub
mov
add
cmp
enter
add
jecxz
add
cmc
jne
in
ja
cmp
dec
aad
fildll
push
aam
shrl
xchg
push
test
mov
add
add
inc
je
sti
cmp
and
fwait
scas
cmpsl
xor
out
sbb
mov
mov
enter
inc
mov
lds
add
sarb
xor
popa
add
add
or
push
dec
jg
mov
add
clc
rolb
xor
data16
sub
pop
test
cmpsb
inc
mov
js
int3
arpl
and
dec
ret
jmp
sbb
mov
lods
out
push
test
mov
repz
iret
jbe
movsb
mov
push
stos
ret
xchg
jbe
mov
shrl
loopne
push
or
or
nop
fsubl
test
daa
adc
or
mov
sti
movsl
cld
in
add
cmp
xchg
ljmp
test
vpsrlvq
adc
rorl
or
cmp
cmp
inc
negl
jno
roll
jbe
mov
dec
mov
clc
or
xor
bound
lods
orb
pop
xlat
cmpsb
push
and
pop
add
sub
xor
ja
in
ret
sahf
adc
add
shlb
loop
in
adc
add
insl
mov
cmp
jnp
jge
xlat
xlat
sub
jne
ret
mov
daa
je
enter
mov
les
loope
std
push
mov
xor
iret
adc
rorl
jno
int
ss
add
push
mov
pop
dec
push
mov
xorb
aam
ret
jecxz
test
gs
cmp
clc
ss
push
add
aaa
add
sbb
ffree
test
mov
xchg
fnstsw
sub
andb
push
loopne
mov
add
shl
pop
arpl
loop
loop
es
jg
mov
mov
mov
out
inc
xlat
mov
mov
fld
mov
xchg
or
clc
or
ret
xor
cmp
jle
dec
mov
xor
scas
pop
dec
enter
xchg
lahf
lock
inc
incl
pop
xchg
ret
pop
pop
loope
lcall
jge
out
dec
nop
addb
cmp
js
pop
push
sbb
and
sbb
aas
adc
and
mov
push
out
clc
adc
sub
std
xchg
mov
ret
lock
ljmp
adc
cmc
je
jl
stos
jmp
ret
aas
push
cmp
pop
mov
out
shlb
adc
or
rcr
add
cmp
sbb
xorb
dec
test
pop
xor
aaa
icebp
mov
add
mov
sbb
jle
jmp
adc
cwtl
cld
push
xchg
add
sub
pusha
dec
ss
mov
sub
es
mov
add
pop
xor
jns
xor
and
jo
mov
and
and
ds
or
sti
hlt
cmp
pop
inc
xlat
and
pushf
dec
pop
sti
rorl
inc
test
push
lret
xorb
xchg
fmull
faddl
xor
mov
test
scas
xor
xchg
sbb
les
mov
test
and
push
or
lcall
out
fdivl
push
out
jns
or
test
popf
in
push
push
cli
add
ret
pop
mov
js
add
sahf
shrb
imul
adc
std
adc
sarl
and
and
push
lea
sbb
call
popf
jmp
mov
ljmp
lods
jne
test
dec
in
sbb
push
clc
adc
cmp
int3
ret
inc
and
adc
enter
sbb
jg
sti
mov
out
xor
push
xor
pop
call
stos
xor
out
add
mov
xor
adc
sbb
ret
jns
orl
and
popa
xor
lret
push
push
fisubrl
mov
lcall
xchg
and
add
fbld
js
push
pop
stc
mov
aaa
cld
lret
sub
jnp
pop
or
aam
dec
mov
shll
cmp
ret
sub
test
fistl
pop
mov
cld
or
mov
iret
mov
ret
lahf
add
jge
adc
loope
pop
js
pop
int3
clc
imul
xor
lcall
fistpl
out
fwait
pop
cltd
or
xor
or
sub
insb
lods
scas
push
lret
movsb
or
cltd
mov
dec
xchg
cmpsb
imul
aad
scas
lock
mov
jns
scas
stos
sbb
arpl
dec
inc
push
sarb
pop
scas
ss
and
jle
dec
rol
mov
stc
scas
popa
push
enter
sbb
add
lret
shrl
dec
inc
insl
jecxz
sbb
xorl
xor
loopne
push
pop
xchg
pop
cwtl
jp
xor
in
mov
data16
xchg
add
xlat
sub
sbb
outsl
add
jp
and
es
dec
inc
popa
xor
adc
rcll
pmaddwd
fisubl
shll
mov
mov
mov
pop
lds
pop
imul
lret
and
faddl
and
inc
fs
movsl
pop
or
popf
es
xchg
in
movsl
dec
repz
ds
jbe
xchg
ljmp
in
ret
addb
cld
jo
xchg
sub
jo
fst
cs
add
xlat
and
push
mov
insb
cmp
xor
cmp
daa
mov
mov
adc
mov
push
fcom
and
lods
ljmp
pop
clc
movsb
dec
cli
sahf
jne
loop
xchg
rolb
sub
pop
jl
jo
mov
lods
or
or
xor
push
sbb
pushf
jmp
cs
scas
loopne
and
out
mov
cmp
andl
das
sbb
or
pop
cmp
xor
cmpsl
sub
inc
pop
mov
inc
push
cmpsl
cmp
cmpsb
xchg
aaa
jno
imul
fwait
sub
inc
movsb
inc
cmpsb
push
sub
push
outsb
pop
jns
pop
pop
das
into
add
gs
mov
cltd
in
mov
pop
push
cs
outsb
idivb
mov
and
sub
es
outsb
notl
xor
dec
cs
pop
inc
xchg
rolb
fstps
imul
ret
sub
icebp
sub
sub
rcrl
push
into
push
cmp
inc
push
ss
cmp
cmp
cmp
mov
xor
ret
and
inc
pop
xor
inc
popa
fs
cli
jb
xorb
in
ljmp
insl
xor
and
add
ret
scas
xchg
les
xchg
and
stos
pop
jbe,pn
and
stos
outsl
ja
or
sub
or
jmp
jbe
xor
inc
inc
sub
lods
push
cmp
ss
and
rolb
sbbl
pop
add
add
push
or
dec
xchg
fiadds
lods
adcb
fdivs
dec
lret
xor
ljmp
bound
or
sbb
cmp
push
sub
push
stos
adc
or
push
shll
shld
aas
xchg
xchg
loope
les
fs
ja
pop
and
adc
sbb
les
loope
lret
subl
push
pop
test
cmp
insb
lods
xor
cmc
mov
mov
sub
sub
add
add
and
sub
andb
sub
jne
testl
loope
and
sub
xorl
cmpsl
and
rcr
xchg
fs
es
jecxz
push
adc
je
add
cs
mov
outsb
iret
stos
push
out
fcmovnu
out
mov
das
sbbb
pop
cmp
jne
sub
sti
jne
add
pusha
sub
fidivrl
mov
je
mov
cmpsl
pop
ljmp
cmpsl
inc
add
cltd
jo
sub
inc
inc
cwtl
ss
in
cs
add
adc
xchg
pop
mov
dec
test
cmp
es
add
xchg
out
loope
xchg
xor
ret
insb
cmpb
incb
and
lea
sti
mov
loope
rcpps
pop
sub
sub
leave
js
dec
xchg
inc
vpcmpeqd
loope
sbb
sti
fwait
pop
adc
scas
wbinvd
add
sub
aas
jmp
scas
dec
fidivl
adc
imul
push
into
and
imul
lahf
jno
lods
push
add
xchg
pcmpeqd
test
aaa
add
das
jns
add
insl
xor
pinsrw
dec
daa
data16
popa
push
sub
adc
jg
movsl
pop
mov
push
add
sti
xchg
add
inc
push
cwtl
aaa
or
mov
mov
or
cmp
cmp
mov
and
mov
jg
adc
fs
daa
fldl
scas
mov
test
or
cmp
insb
aas
loope
les
popf
adc
cmp
das
int
popl
dec
dec
mov
pop
fs
scas
xor
and
cmp
add
xlat
adc
movb
pop
add
pop
pop
adc
cmp
cmpsl
ljmp
push
cmc
insb
scas
push
pop
fistpll
adc
push
xchg
cmpsb
and
rol
add
lods
xchg
loope
ljmp
movsb
xchg
mov
stc
sti
inc
fdiv
dec
mov
punpckhbw
test
xor
or
and
or
popa
shrl
jb
ret
sub
shlb
icebp
mov
inc
adc
mov
sti
cmp
pop
fnsave
es
push
lcall
mov
out
data16
dec
lret
pop
mov
add
out
out
cltd
dec
es
cmp
add
imul
mov
ret
out
adc
or
scas
and
sub
jmp
shl
pop
cmp
das
fnsave
mov
das
dec
sub
aas
pusha
cmp
jbe
mov
sub
xor
jne
push
outsb
pop
repnz
sub
fs
sbb
pop
into
sub
rcrb
and
test
mov
loopne
cli
adc
add
testl
dec
dec
or
scas
popf
add
pop
sub
bound
inc
jns
cmp
lods
push
repnz
push
mov
push
jne
mov
testl
clc
sub
ja
scas
gs
cmp
sbb
cmovg
adc
mov
fldcw
hlt
loop
mov
repz
and
sub
pop
xor
xchg
addr16
add
das
xor
loopne
or
rcr
inc
outsb
jecxz
push
pop
add
sbb
gs
leave
dec
and
cmp
adc
push
popa
enter
add
xchg
add
inc
jmp
mov
shll
lcall
popf
iret
jne
jle
xchg
pop
pop
loop
and
sub
pop
sbb
pop
jo
pop
loop,pn
cmpsl
jno
dec
call
outsb
out
pop
inc
adc
push
lea
aad
push
out
dec
shr
xor
add
xor
xor
incb
sbb
or
aad
stos
mov
and
push
mov
rorl
mov
fldt
xor
xlat
icebp
icebp
sub
and
push
mov
mov
nop
pushf
loop
in
add
rorb
add
add
xor
loop
cld
sti
insl
push
aad
sub
loope
sbb
lods
fwait
jecxz
push
test
mov
std
xchg
mov
fstsw
xchg
rolb
test
icebp
cmp
stos
shl
pop
and
je
xchg
mov
aam
push
aam
test
dec
jle
add
xlat
adc
jl
pop
lahf
sbb
and
aam
fdivrs
jne
jo
insb
mov
push
pusha
push
mov
jge
dec
mov
mov
insl
push
sub
pop
pop
mov
mov
movl
push
pusha
xchg
inc
xchg
jle
and
push
xchg
mov
mov
jbe
jl
push
sbb
negb
je
sarl
adc
or
je
add
incl
xchg
ss
mov
xor
mov
mov
or
cmp
xchg
mov
pusha
into
mov
push
aam
ja
out
aad
pop
xchg
iret
xchg
mov
xchg
rcll
mov
cmp
cmc
mov
out
lods
pop
lock
sti
pusha
std
fcoms
xchg
or
and
mov
cmpsb
fwait
test
es
xor
frstor
test
mov
and
enter
popf
das
mov
push
jge
xor
and
mov
cld
test
das
or
aas
les
and
add
test
popf
ret
mov
aaa
or
mov
mov
loope
pop
nop
stos
icebp
test
iret
push
repnz
imul
and
xchg
push
add
xchg
add
in
or
jno
fsubrl
add
sub
pop
dec
test
pop
xor
xchg
test
inc
adc
jmp
mov
add
push
sbb
cmpsb
stos
cmpsb
xor
ljmp
fstpl
adcl
test
daa
arpl
in
jl
loope
int
es
insl
repz
movsl
pop
cmp
xchg
or
popf
mov
aad
lret
std
iret
cmp
sbb
repz
in
add
adc
mov
sbb
inc
sbb
rcrb
inc
aad
dec
mov
add
mov
sbb
sub
push
push
push
sub
jmp
add
leave
mov
push
and
popl
sub
xchg
mov
jecxz
ret
or
add
aad
popa
and
jne
sbb
ljmp
insb
mov
gs
ret
in
xchg
ss
sub
push
add
jnp
jecxz
iret
or
addr16
ficompl
mov
shl
sbb
jl
dec
test
mov
sbb
andl
jae
stos
xchg
inc
lahf
and
lret
mov
xor
add
test
daa
lds
mov
add
imul
xchg
loopne
jg
dec
fmulp
xchg
cltd
arpl
lods
pop
jbe
dec
roll
jmp
rolb
mov
cmp
rcll
lret
push
sub
fs
pop
and
or
cmpb
pop
imul
add
sbb
mov
sub
je
testl
lret
je
fdivs
lret
push
ja
ljmp
sub
lahf
lock
adc
sbb
adc
daa
and
and
lahf
cmp
adc
iret
cli
rcr
lea
shll
loopne
jmp
int3
movsl
scas
je
outsb
inc
dec
push
loope
hlt
test
aam
add
sbb
push
push
sub
addr16
dec
sti
or
mov
std
in
jne
dec
mov
xadd
insl
cmp
fwait
inc
pop
mov
enter
mov
xchg
nop
xchg
js
daa
imul
sub
ret
cmp
mov
andl
test
or
inc
xchg
push
negb
jne
ss
inc
mov
push
sbb
add
out
cmp
aam
arpl
xor
pop
sbb
outsb
add
pop
adc
int3
mov
out
and
mov
add
popa
testl
add
lock
or
mov
jg
lock
jle
inc
loope
pop
jl
ss
shlb
int3
cli
adc
cmp
bound
adc
clc
test
jnp
xchg
sbb
std
out
xchg
and
xor
popf
imul
pop
mov
imul
stos
sub
add
es
and
sub
jo
cmp
clc
pop
jecxz
and
fstpl
outsb
cmp
repz
fisttpll
rol
inc
lahf
daa
adc
pop
jno
loope
stc
jno
sub
mov
push
or
rorl
xor
call
imul
and
fimuls
imul
xlat
shll
sti
hlt
mov
mov
and
loop
filds
xor
mov
jle
and
adc
int3
pop
mov
and
fistpll
cmc
dec
lods
js
inc
sbb
push
popa
testl
outsl
lods
outsb
jle
mov
and
icebp
sbb
and
jge
jmp
pxor
mov
pushf
and
sub
xchg
mov
lds
mov
test
mov
adc
iret
sub
cmpsb
xchg
jbe
xlat
xchg
adc
push
jmp
mov
cld
sub
dec
test
lcall
mov
push
mov
mov
std
repz
xor
shrl
aad
shrl
movsl
pop
lret
pop
push
clc
scas
frstor
pop
shlb
dec
insl
jb
push
mov
js
ror
jle
cmp
mov
sbbl
shlb
and
daa
jno
lods
mov
pop
rcr
rcl
mov
push
mov
js
push
xchg
cli
adc
jns
sbb
push
adc
xlat
lret
pop
inc
popf
test
mov
cmp
out
jge
add
sbb
push
addl
rorl
xor
push
rolb
sub
hlt
adcb
aas
js
iret
dec
call
add
setle
stos
lea
fsubl
and
sqrtps
add
adc
es
jno
test
into
test
inc
stos
jp
fisttps
jge
dec
or
sbb
cs
loope
mov
or
jl
xor
into
xchg
pop
add
bnd
call
adc
sub
push
stos
test
jne
jp
fwait
ret
mov
cmp
push
add
into
jo
push
aad
pop
dec
inc
fistpl
lods
fcomps
rcr
adc
inc
mov
push
loop
out
stc
sbb
pop
lods
test
pop
rolb
dec
movsl
pop
mov
je
daa
movsl
ss
fxch
or
inc
fsubl
or
data16
loope
jb
outsb
cs
jecxz
jo
or
mov
xchg
push
push
nop
loop
mov
iret
sub
jmp
pushl
push
mov
add
push
rclb
sub
icebp
js
rorl
cmp
jmp
inc
jecxz
pushl
lds
ficomps
pop
cmpsl
popf
cmp
push
push
ret
loopne
sub
outsl
aaa
add
pop
mov
add
adc
aam
xor
dec
aad
mov
or
nop
push
inc
pop
int3
stos
or
mov
fucomp
nopl
inc
jge
pop
adc
lods
test
and
loopne
add
loopne
js
fstpt
bound
mov
cwtl
inc
and
movsl
mov
add
fcmove
xchg
jne
repz
fldt
cld
xorl
adc
push
insb
inc
push
adc
insl
and
and
sbb
and
sti
dec
les
ret
mov
inc
jg
mov
loop
add
add
sbb
lea
xchg
mov
adc
ss
fdivr
int
or
inc
jge
pop
pop
sbb
cmc
imul
mov
sti
push
outsl
sbb
mov
dec
xchg
and
cs
sub
icebp
xchg
stos
lock
out
test
push
and
sub
add
jp
jmp
jge
cmp
addl
jne
cwtl
loope
xor
fmuls
hlt
addb
adc
fwait
push
pop
sub
mov
mov
xlat
cmp
cmp
dec
adcl
xchg
fcomi
sahf
mov
jne
or
mov
cmpsl
mov
inc
es
je
movsb
push
and
cmpsb
xchg
filds
insl
pop
scas
inc
pop
insb
mov
lea
iret
sbb
sbb
sub
fdivl
mov
or
iret
inc
mov
cmp
pop
cmp
rolb
inc
loopne
cmove
pop
add
adc
repz
cltd
push
dec
pusha
fdivrs
push
pushf
sbb
mov
add
xchg
jg
sub
addl
in
outsl
sti
pop
push
dec
clc
jbe
popa
and
test
fldl
push
push
cmp
aas
in
in
fdivrl
xchg
cmc
mov
cli
mov
dec
ljmp
pusha
rorb
imul
lahf
push
call
mov
push
ret
cld
push
imul
pop
push
sub
dec
pop
pop
scas
xor
or
pop
inc
adc
lods
sub
xor
pusha
push
js
sub
je
jecxz
jo
ret
inc
sub
push
and
int3
and
loope
cmpsl
cmp
push
cltd
je
aad
lret
je
sti
lods
sbb
pop
rorl
jp
stos
sbbb
and
push
andl
and
mov
sahf
xor
push
cltd
dec
repz
mov
push
roll
pop
and
sbb
sbb
xchg
push
sti
rcll
jne
les
iret
pop
push
pop
pop
sbb
jo
lea
mov
fwait
xchg
mov
test
or
sbb
into
out
and
das
lahf
loopne
inc
inc
xor
dec
ljmp
iret
adc
add
jecxz
cmp
jo
push
mov
setne
aad
push
jb
push
xchg
dec
aaa
or
dec
or
mov
test
add
jne
and
rorl
daa
repz
add
ja
subb
inc
sub
testl
sbb
or
add
lods
add
adc
dec
push
add
inc
out
jge
cmp
aaa
out
lea
cs
adc
adc
add
lock
push
pop
adc
loopne
mov
dec
mov
xchg
repz
add
jne
sbb
cld
loopne
rcr
inc
into
sub
sub
or
addb
stos
dec
fld
inc
das
dec
das
pop
out
inc
push
mov
sti
pop
cmp
std
sub
testl
sub
cmpsb
loopne
or
and
sbb
push
cmp
pop
testl
xor
in
jbe
outsl
fsubs
addr16
push
jmp
mov
jmp
inc
and
test
cmpsl
pop
inc
bound
imul
imul
jne
dec
fildl
repnz
cmc
ret
mov
hlt
add
add
and
mov
pop
jecxz
out
frstor
popa
inc
int3
xchg
and
les
or
test
js
ret
push
mov
test
jnp
mov
iret
test
aam
test
push
xchg
js
enter
sbb
pop
jmp
fdivr
ja
add
lock
pop
inc
js
fsts
xor
push
movsb
fisttps
push
mov
ret
lods
enter
mov
push
testl
xchg
out
jl
test
lea
pop
or
xor
aam
lcall
pop
test
push
js
test
adc
ljmp
rol
cmpsl
xor
fldcw
daa
push
iret
sbb
pop
mov
mov
push
and
lahf
jle
data16
stos
loopne
sub
icebp
mov
jle
jae
mov
in
adc
adcl
insl
insb
loope
aaa
push
adc
add
cwtl
popa
xchg
cmpsb
and
or
mov
xchg
not
test
imul
aaa
test
popf
add
and
call
jb
add
add
adc
mov
sti
sbb
inc
lds
les
addb
addr16
shrb
or
push
lds
and
fadds
and
cmp
sub
pusha
add
rcll
test
aas
adc
or
inc
fxtract
xchg
add
xchg
xchg
mov
add
sub
push
and
jbe
dec
lock
or
repnz
push
sub
cs
ljmp
mov
sbb
or
or
repnz
add
lods
jns
shll
adc
cmp
xor
add
fimull
inc
mov
aad
scas
or
jno
scas
sub
or
arpl
ja
hlt
mov
jle
pop
lds
into
adc
mov
test
sbb
jmp
addl
dec
or
add
pop
lods
sbb
lea
cmp
cmp
jecxz
push
mov
mov
pop
shlb
add
loop
scas
inc
xlat
push
and
sbb
sbb
ret
dec
clc
loop
or
xchg
bound
cmpsl
jmp
pop
inc
sbb
mov
dec
cmpl
inc
daa
rorl
sub
popf
lea
xor
xchg
pop
and
testl
enter
push
movsb
jle
lods
stos
minps
js
dec
shrb
mov
shrd
mov
pop
mov
add
hlt
daa
stos
das
xchg
xchg
sbb
mov
cmp
icebp
inc
mov
fcoms
lods
mov
daa
cmp
or
push
repnz
and
push
sub
push
push
jnp
pop
mov
test
imul
and
push
and
push
mov
xchg
adc
dec
sub
pop
sbb
popl
lahf
ds
adc
jecxz
fldt
pop
add
pop
cwtl
out
imul
push
inc
or
xorb
test
inc
mov
mov
push
jmp
push
dec
dec
or
test
mov
test
dec
mov
cs
jmp
adc
dec
and
cld
mov
insl
out
sub
and
add
incl
std
imul
icebp
iret
adc
xchg
sbb
leave
adc
ljmp
inc
add
lods
mov
jp
sbb
xor
add
dec
or
outsl
aad
xor
aaa
int3
mov
inc
lcall
lods
leave
sub
inc
push
int3
add
je
hlt
jns
fsubrs
pop
xchg
addr16
xor
push
and
pop
sbb
in
mov
mov
xchg
mov
je
popf
sub
cmp
stc
jp
sub
add
xlat
or
roll
jmp
xor
aas
int3
add
jne
sub
filds
pusha
cmpsl
sub
loope
adc
cmp
leave
xchg
sbb
add
cmp
pop
cli
ljmp
or
sbb
add
out
add
cmc
or
gs
dec
jno
inc
pop
cmpl
dec
cmp
ljmp
cltd
mov
jno
pusha
lods
cld
add
xchg
cmp
sub
push
stc
bound
lea
push
cmp
add
fistpll
insb
cmp
outsb
stos
push
jp
xchg
in
fildl
pop
add
fldenv
inc
push
xchg
sbb
outsb
ret
dec
fisttpl
add
mov
pop
sbb
add
mov
daa
dec
jmp
add
add
sbb
mov
jnp
pop
jg
and
cmp
fldl
iret
mov
rcl
leave
scas
repnz
add
xchg
orl
xor
addl
stc
mov
aaa
cmp
das
cli
stos
popf
insb
test
jbe
sti
mov
pop
or
dec
ja
repz
lods
std
mov
jne
das
icebp
cwtl
ss
rcrb
or
and
xor
sbb
mov
dec
jl
push
repz
or
ss
sub
rorb
jp
dec
cmc
dec
subl
inc
out
jnp
mov
add
pop
pop
scas
pop
dec
mov
or
sbb
cmpl
call
and
cmp
stos
mov
sbb
addr16
std
mov
loop
mov
push
es
add
mov
cmp
outsb
lea
xchg
cmc
popf
xlat
aad
cmp
jo
int
adc
out
mov
negl
into
xchg
call
jno
add
dec
into
sub
mov
mov
adcb
pop
mov
cmp
xchg
movsl
jno
xor
cmp
add
adc
js
or
sahf
push
cmp
loop
out
pop
repz
cmp
faddl
ljmp
mov
pop
push
pusha
stc
rolb
pusha
mov
sahf
in
addr16
push
sbb
sub
aas
lock
popf
clc
test
int3
loop
jg
xor
ljmp
jecxz
bound
sahf
xchg
xor
cmp
fimuls
jmp
and
les
xor
and
pop
ss
lahf
sub
int
das
xchg
cmpsl
lods
test
push
roll
mov
xchg
jecxz
inc
sbb
test
repnz
sbb
pop
or
jle
cmp
sub
in
loop
cmp
insb
add
outsb
sbb
fmul
xchg
rcl
fists
mov
jmp
pop
pusha
mov
fcomps
push
add
sub
add
in
mov
aas
jne
shrl
mov
or
sti
inc
call
sbb
xchg
sub
icebp
fldz
jg
and
sub
repz
jno
mov
cmp
test
outsl
inc
xchg
fisttpll
les
push
aaa
popa
jle
or
hlt
push
aas
add
or
iret
cmp
mov
xor
jg
xor
aaa
aam
gs
int3
sub
je
fidivs
push
jmp
movb
mov
push
dec
mov
mov
push
iret
stos
xchg
ret
ret
test
sub
cld
xchg
sbb
aaa
daa
mov
jno
cld
jo
xor
and
mov
jmp
or
imul
xor
add
pop
mov
push
sub
ja
push
fdivrl
xor
sahf
mov
sahf
push
mov
lock
je
shrl
stos
sbb
xchg
and
jo
nop
mov
fsubrs
push
xlat
pop
imul
in
ss
cmpsb
sub
mov
sbb
decb
xor
ja
stc
pop
jno,pn
xchg
gs
cli
in
jp
push
mov
mov
fsubl
hlt
cmpsl
rcrl
jo
xchg
cwtl
ljmp
xor
sahf
sub
repz
imul
faddl
cmp
imul
pop
pop
ret
out
add
mov
es
inc
in
scas
fwait
dec
jp
mov
mov
cmpsl
pusha
add
jl
add
cmp
jp
mov
nop
jbe
pop
icebp
shll
add
popa
inc
or
push
xchg
xorb
stos
push
xchg
and
data16
nop
ficoml
ljmp
and
clc
repnz
sbbb
sbb
mov
loopne
push
hlt
dec
cmp
decl
lcall
call
cmp
mov
push
pop
loop
cmp
push
mov
movsl
adc
movb
lods
inc
cmp
add
outsb
or
pop
dec
shlb
fs
pop
movsb
adc
ror
out
xor
push
out
aaa
sbb
pop
cmpsb
sub
jge
lock
icebp
adc
mov
sbb
vpaddsb
loopne
gs
test
test
cmc
lcall
cld
jbe
aam
das
mov
adc
or
jo
xchg
mov
dec
jb
sahf
ss
lcall
inc
mov
dec
fdivrs
std
stos
jmp
push
push
sbb
ljmp
stos
movsl
cmc
inc
push
jbe
ds
loop
test
push
cmp
data16
iret
xor
or
call
and
orl
push
mov
pop
stc
push
fisubs
js
mov
out
jne
jl
add
loopne
push
adc
stos
pop
aaa
bound
push
test
int
or
pusha
xchg
enter
or
rclb
mov
pop
or
fdivs
outsb
mov
arpl
jno
paddw
adc
cmp
and
inc
and
hlt
mov
cmp
sub
mov
add
les
mov
cwtl
aas
xor
jnp,pt
pop
fnstcw
loope
es
add
and
int3
es
xchg
sbb
enter
sub
jmp
sbb
cli
mov
pushf
cli
jp
popf
xorb
cmp
pop
jecxz
push
pop
popa
add
jne
popa
and
andl
mov
adcb
fildl
orb
addr16
add
inc
add
pushf
sahf
mov
jo
popf
jae
es
sub
push
and
sbb
in
in
or
stc
mov
subb
cmp
nop
bound
inc
pusha
mov
test
push
mov
dec
inc
or
aad
mov
xchg
daa
dec
mov
lds
jmp
add
sub
stos
popf
cmc
mov
cmpsl
mov
rol
sub
rcrb
stos
sbb
fmull
mov
and
jo
incl
imul
cmp
fadd
mov
sahf
sub
adc
bound
push
notl
xor
dec
mov
dec
cmp
lret
xchg
cli
popf
mov
fcmovb
ret
roll
scas
sub
test
mov
and
lock
adc
mov
xchg
out
lret
adc
pop
jmp
xlat
push
cmp
xchg
enter
jns
push
jmp
scas
add
cmp
hlt
sahf
dec
jne
adc
lahf
add
daa
lock
add
scas
bound
xchg
and
xchg
in
aad
fcoms
jg
ror
loop
test
cmc
popa
mov
stos
jne
arpl
xchg
rolb
frstpm(287
ret
into
adcb
add
cmp
mov
out
sbb
add
dec
cmpsl
jno
xchg
mov
xor
push
popf
inc
in
add
mov
mov
sbb
cltd
loope
rorb
fimull
add
lea
add
inc
add
fcmovb
mov
pop
push
adc
jle
sub
mov
jbe
es
jmp
push
add
mov
mov
sub
cmpsl
add
pop
fadd
inc
and
les
sbb
adc
pop
pop
orl
rolb
pop
inc
lds
xor
stos
cwtl
push
sbb
jg
cwtl
test
outsl
loope
movsl
loop
sbb
sbb
loope
adc
sub
psubw
scas
jp
push
add
mov
xor
fcoml
add
sub
mov
push
fwait
push
push
dec
sbb
mov
jp
mov
jp
loopne
lret
dec
cmp
aas
pop
xlat
lods
bound
and
test
pop
leave
scas
test
jbe
pandn
push
add
adcb
sub
leave
ds
pop
fdivs
mov
pop
fwait
pop
testl
jne
pop
sub
loope
and
outsb
add
push
ds
testl
add
and
lahf
es
add
shlb
sub
lahf
dec
pop
push
orb
and
jae
or
inc
ljmp
and
pop
and
int3
mov
push
dec
shlb
addl
mov
xchg
push
sbb
sbb
addb
hlt
out
sub
add
aas
jmp
inc
lret
in
inc
lahf
outsl
ja
decl
pop
into
cs
sti
push
loope
inc
dec
xchg
pop
stos
lea
fcompp
aas
jnp
mov
pop
sub
imul
cmp
pop
scas
pop
iret
jp
mov
add
adc
adc
push
mov
cwtl
jo
jae
mov
hlt
jbe
dec
scas
sub
mov
pusha
sti
jne
icebp
test
pop
test
mov
lea
mov
and
sub
jg
sbb
adc
or
xchg
orl
mov
jnp
add
push
dec
dec
inc
jnp
push
push
and
xlat
icebp
add
push
xchg
cmp
call
sbb
shll
ret
sub
cmp
ljmp
fisubl
add
push
mov
and
fldl
xlat
mov
pop
andl
jge
or
scas
jb
mov
adc
mov
push
dec
das
dec
xor
xlat
add
loop
cmp
iret
sub
push
jmp
test
sbb
mov
push
jns
out
iret
jle
lods
loope
rol
jg
roll
pop
in
fiaddl
add
ret
inc
dec
adc
lahf
cmp
pop
ljmp
aaa
push
clc
add
inc
popf
cmc
lods
and
inc
mov
and
mov
xor
jns
push
lock
pop
pop
loope
rorb
xlat
xchg
or
xchg
es
cmp
sbb
shrb
lods
or
jne
jno
fldl
inc
mov
jp
or
lods
xchg
push
jmp
sbb
xchg
jae
and
xchg
gs
dec
dec
or
popw
cmp
and
xor
xor
sarb
or
icebp
pop
xor
add
add
mov
push
mov
out
inc
aaa
push
fsubr
rcl
jo
dec
jo
cmp
and
das
sbb
push
push
andb
sub
pop
cmpsb
pop
push
stos
add
add
push
mov
jl
inc
test
stc
es
push
adc
das
mov
insb
pop
aam
stos
shlb
xor
insb
add
add
cmp
jo
push
out
inc
pop
das
jp
pop
das
add
cmp
add
push
fimuls
jge
pop
movsl
sub
jbe,pn
jne
push
pcmpgtw
mov
in
les
mov
jae
xlat
insl
sub
sub
lahf
sub
and
cmovbe
inc
pop
adc
dec
bound
and
repnz
push
das
lods
xor
scas
adc
scas
popa
daa
data16
dec
shll
dec
jl
mov
rcr
and
lahf
fcoms
sub
xor
mov
add
enter
or
xchg
cmc
mov
jo
das
dec
fld
shl
push
pop
push
stos
mov
cmpsb
xchg
hlt
sub
dec
inc
test
loope
add
push
loop
mov
lods
push
jb
call
or
pop
dec
daa
xchg
fldcw
inc
and
out
fwait
in
pop
ret
movsb
cmp
cmp
inc
fwait
jmp
push
mov
insl
or
movsl
ss
hlt
enter
add
fiadds
mov
push
xchg
ret
or
dec
xchg
and
shl
sub
ret
hlt
in
inc
push
adc
or
cmpsl
aaa
rcll
icebp
lahf
lods
jmp
outsb
scas
cli
add
cmp
cmpsl
cmpsl
outsl
bound
fildl
gs
les
daa
xchg
iret
pop
push
aam
push
jb
ficomps
or
pop
addr16
lret
and
in
and
pop
xchg
fsubrl
lods
fwait
movl
push
cmp
xlat
dec
cmp
pop
pop
fildll
in
test
cmc
aaa
ja
insb
sub
mov
out
xchg
adc
aam
frstor
and
lahf
lahf
mov
loopne
out
push
scas
jbe
test
adc
loope
sbb
es
mov
arpl
or
jmp
add
fldcw
inc
mov
mov
int3
xor
nop
mov
add
ja
xchg
nop
push
sub
or
mov
push
pop
add
jp
int3
and
mov
out
push
sar
jle
out
push
stos
push
add
xor
bound
rol
inc
add
mov
scas
fistpl
mov
repnz
adcb
and
mov
jno
dec
sbb
inc
sti
mov
sub
gs
les
xchg
push
or
imul
cmpl
mov
cli
iret
jle
popf
sbb
mov
mov
sub
and
mov
stc
pop
mull
push
dec
inc
xor
les
pop
or
and
adc
insl
jnp
push
mov
imul
cmp
sub
push
iret
or
xor
sbb
inc
push
cs
iret
sbb
fcmovb
in
push
jg
xchg
data16
lahf
dec
lock
cs
ja
jbe
mov
pusha
les
cmp
or
mov
mov
mov
pop
push
xchg
aaa
mov
adc
sbb
push
cmpsl
pop
mov
jl
divb
xor
sbb
fcoml
add
lods
pushf
jge
adcl
or
add
push
fwait
idivl
or
cmp
mov
into
sar
inc
mov
xchg
out
pop
jae
xchg
mov
out
ret
out
cmc
test
sti
loopne
xchg
sti
push
ss
or
cmp
adc
pop
aaa
sbb
scas
sbb
push
fadds
ret
mov
jne
or
sub
sub
inc
xchg
ljmp
rolb
sti
sub
sub
add
inc
mov
add
shlb
testl
repz
mov
pusha
loop
mov
xor
mov
dec
fldl
lods
inc
imul
test
cmpsl
and
or
fs
mov
subb
cli
int3
push
and
xor
aaa
pop
inc
out
sub
sbb
js
popf
lock
and
lods
loopne
in
pusha
imulb
add
mov
jbe
and
add
cltd
popa
or
fcomps
add
out
sbb
push
aam
jg
xchg
xlat
in
gs
subb
xor
aaa
xor
inc
mov
sbb
xor
daa
dec
xadd
lods
lret
push
mov
nop
push
add
mov
add
das
test
pop
ja
ret
cmp
cmp
adc
pop
bt
cltd
mull
rorl
out
aam
loop
jno
test
es
repnz
inc
cmpl
add
sub
xchg
pop
push
cmpsb
pop
mov
pop
push
pop
cmp
jnp
out
inc
js
inc
sub
fs
dec
mov
mov
js
or
xchg
iret
mov
cmp
fwait
jl
add
in
loopne
nop
test
cmpsl
dec
insb
pop
dec
outsl
stos
ljmp
lds
adc
pusha
popa
mov
mov
out
add
rcll
addr16
pop
mov
ja
cmpsl
or
scas
sbb
es
lret
xor
push
add
sub
dec
cmc
js
mov
lods
sub
push
inc
stos
sub
mov
push
adc
lods
cmc
movsl
nop
es
sbb
sub
sbbl
xor
push
js
les
sbb
xor
or
and
sti
adc
pop
sub
fistps
cmc
jecxz
rolb
imul
popa
in
stos
sbbl
or
xchg
es
orb
into
push
pop
lods
jb
lret
mov
ret
sbb
loope
sub
lcall
push
push
aam
test
inc
push
sub
or
mov
pop
arpl
data16
fldt
fldcw
mov
dec
add
int3
push
sarb
and
mov
push
xchg
jp
push
cmp
iret
mov
and
ficompl
fiadds
inc
adc
lret
mov
lods
jge
andb
add
lock
loope
dec
sbb
mov
pop
fdivrs
out
mov
mov
sub
add
aas
inc
jae
jne
in
mov
ja
ja
sti
mov
jne
cmpsb
in
and
lahf
lret
inc
cmp
adc
loopne
mov
test
inc
jmp
push
jmp
lods
rorb
push
adc
xor
push
add
ret
mov
jp
insb
data16
into
div
scas
cmp
xchg
inc
ljmp
dec
dec
cld
call
add
repz
lret
movsl
xor
aam
jb
cmpsb
push
jmp
pop
push
mov
shr
add
cmp
stos
shlb
ret
movsl
jl
xor
or
push
mov
cmp
add
in
xlat
rcll
sbbl
pusha
jl
fildl
dec
je
xchg
mov
jp
test
xchg
lods
add
adc
add
fsubs
ja
inc
jnp
les
inc
enter
add
popa
mov
and
inc
call
ficompl
sub
aad
sub
ret
adc
xchg
loopne
xchg
loopne
jge
aam
cli
xor
movsb
dec
pop
jnp
cmp
lahf
or
movsb
or
add
pop
xor
fiadds
movsb
cmp
jo
xor
cld
jmp
xor
xchg
andb
out
mov
inc
pop
js
mov
testl
mov
data16
pop
arpl
pop
je
or
xor
pop
in
jl
and
sbb
shll
dec
pop
lcall
loopne
push
nop
gs
imul
or
fcmove
rcll
mov
xchg
push
stos
rcrb
sti
test
add
pop
ret
xchg
addl
out
xchg
pop
adc
mov
mov
and
inc
dec
add
ss
adc
adc
scas
add
popa
mov
insl
sbb
pop
stos
cs
test
int3
inc
pop
push
in
jo
testl
add
mov
sbb
pop
sti
cmp
cmp
dec
mov
jl
cli
cmpsb
or
js
movsb
mov
movsb
push
gs
mov
pop
sbb
adc
inc
fdiv
outsl
or
movsb
out
adc
ret
jno
cmc
cmp
inc
arpl
int3
and
fmuls
pusha
and
xchg
push
scas
and
jns
addl
jnp
xor
jl
aad
jns
dec
adc
loope
pop
js
jno
mov
pop
adc
jne
jo
xchg
iret
push
sbb
push
cmpsb
inc
jle
sbb
or
stos
push
pop
loopne
iret
iret
mov
clc
pop
inc
jbe
ja
testb
loope
fcoms
lret
cmp
and
in
add
fldenv
sub
adc
push
cmpsb
inc
xor
clc
push
xor
dec
jno
or
xchg
inc
scas
push
clc
add
xchg
scas
push
pop
out
jno
cli
loopne
cld
in
sbb
notb
xchg
arpl
add
add
add
sti
xor
mov
sbb
inc
cmp
lea
lods
les
jecxz
popa
leave
iret
call
inc
adc
xchg
ljmp
and
clc
fldt
cmp
mov
rcrl
cwtl
outsb
rcrb
sub
add
add
inc
mov
xchg
test
dec
pop
addr16
out
nop
sti
and
fbstp
and
out
push
shlb
fsubl
adc
sahf
shl
sar
rorb
lock
fucomi
xor
dec
insl
mov
aad
cmp
pop
adc
cmpsl
test
and
loop
mov
adc
movb
clc
sub
pop
jp
push
popa
out
loope
inc
mov
lds
push
push
inc
sbb
and
add
pop
push
push
call
inc
jmp
aas
adc
dec
jnp
xor
addb
pop
fildl
testl
sbb
pop
outsl
fcoms
hlt
jmp
pop
xchg
add
mov
cmpsl
int
repz
stc
loope
cmc
je
faddl
je
js
pop
or
adc
dec
mov
push
dec
cmp
js
aad
and
int3
rcrl
jns
pop
dec
lock
xor
out
out
hlt
ret
faddl
mov
mov
popa
sub
aas
test
jp
inc
out
mov
inc
fcmovu
mov
jmp
int
jp
jo
int
lret
dec
aas
sbbl
mov
andb
mov
xor
mov
int3
icebp
xchg
adc
clc
rep
lahf
fistl
cltd
add
mov
cmpsb
lret
push
cmc
dec
sbb
iret
xchg
add
pop
sub
pop
scas
pop
shrb
cmc
sti
fldenv
arpl
insb
mov
ret
xor
xchg
sub
sub
hlt
cmpsl
int
cmp
cmc
cmp
in
rcrl
push
xor
outsl
mov
out
cmpsl
adc
loopne
push
lcall
cmc
insb
dec
add
pop
pop
xor
ret
test
xor
loope
flds
movsl
icebp
lods
mov
push
dec
cli
or
movsl
and
insl
and
movsl
jl
jo
into
xchg
movsl
xchg
mov
inc
inc
cwtl
and
sahf
daa
gs
cmc
fucom
test
lods
ffree
mov
loopne
dec
add
out
cmc
or
add
das
jns
imul
jmp
add
gs
rcll
test
or
fdivrl
jae
sbb
mov
xchg
movsl
cwtl
fdivs
xorl
out
test
mov
dec
add
lods
enter
cmp
lahf
popf
test
ret
int3
push
sbb
or
push
dec
push
sub
or
jle
in
and
sub
jmp
imul
pop
push
push
cmp
cmp
insb
stos
pop
or
jmp
lods
or
mov
mov
xchg
xchg
xchg
repnz
daa
sti
dec
inc
mov
stos
sub
xor
stc
lahf
mov
pcmpgtw
insl
and
add
enter
and
push
and
cmp
push
jno
mov
add
and
inc
mov
and
add
fstpl
sarb
push
dec
ror
test
fdivrp
rol
push
push
add
mov
sbb
scas
notl
sbb
ret
lret
pop
jo
ds
pop
pop
repz
imul
sbb
sub
pop
xor
or
xchg
add
outsl
jo
push
sub
pop
fcoms
inc
call
cmpsl
sub
mov
push
lret
push
and
inc
mov
mov
sbb
xor
popa
inc
jb
or
xor
push
add
insl
push
xor
rclb
cmp
ret
dec
xchg
inc
or
pusha
repnz
mov
pop
arpl
popa
mov
in
push
mov
jle
ss
or
add
push
or
jne
jae
aam
test
jmp
test
popa
xchg
jge
and
sub
add
mov
add
lods
cmpsl
subl
xor
sbb
or
imul
in
mov
test
nop
add
or
roll
stos
sahf
lea
sub
xorl
scas
cmp
dec
loopne
dec
testl
or
adcl
mov
add
xchg
sub
shrb
shrl
mov
pusha
cmp
jle
mov
addb
js
shll
xchg
and
fsubrs
cmp
outsl
lret
dec
and
nopl
cmp
dec
and
das
sub
push
cmp
fsts
test
inc
and
stos
jg
push
cmp
cltd
je
std
scas
stos
imul
ret
jnp
rolb
iret
lods
das
mov
adc
mov
int
test
push
mov
dec
adc
or
mov
gs
das
mov
je
aaa
xor
jle
sub
push
mov
dec
jns
add
inc
xchg
push
test
mov
or
ljmp
or
insl
imul
cltd
xor
sbbb
fsubl
arpl
cmp
hlt
mov
in
insb
push
mov
test
xchg
cmp
pushf
dec
sbb
iret
addr16
or
nop
adc
inc
xor
std
and
pop
inc
or
lret
push
mov
or
cmp
xchg
movsb
cli
mov
pop
nop
ja
iret
ficomps
xor
or
rclb
dec
jbe
je
aad
mov
adc
adc
push
mov
lcall
xchg
adc
mov
xor
outsl
sub
mov
or
sbb
push
scas
sbb
and
inc
xchg
or
xor
iret
call
mov
xor
shl
jle
dec
and
pop
dec
ret
xlat
inc
adc
xor
jbe
movsl
mov
rcrb
outsb
cmpb
test
fadds
cmp
adc
sub
sti
in
ficompl
rorb
aad
jo
mov
dec
icebp
pop
jp
rcll
mov
lret
cmp
push
and
xchg
mov
std
mov
or
mov
cltd
cmc
mov
adc
loope
popa
scas
aad
cmpsb
loopne
or
loope
cmc
out
or
push
sbb
jecxz
ds
out
push
add
pop
pop
in
dec
jl
xor
ret
lret
sarl
ror
cmp
sub
or
push
cmc
push
and
jne
mov
sub
imul
aad
movsl
int
es
mov
dec
gs
lock
out
bswap
sbb
add
jne
xor
sub
or
or
sti
fdiv
mov
pusha
push
push
iret
in
outsl
and
add
sahf
xlat
inc
mov
addb
out
sarb
pop
dec
sbbl
and
jne
ds
mov
sub
das
push
or
dec
negl
jge
lods
insb
xchg
imul
adc
in
xor
mov
xchg
push
int
mov
xchg
mov
call
add
xchg
loopne
test
out
repnz
movsb
fwait
and
fidivl
pop
loope
pop
test
daa
fcomp
xchg
out
loopne
add
cmp
gs
test
push
mov
jnp
xchg
xor
stos
adc
mov
inc
xchg
loope
inc
test
mov
sub
cs
xor
push
testl
in
cmp
mov
in
jnp
inc
call
sub
push
mov
add
or
mov
push
xchg
add
jne
ss
push
add
cmp
cltd
push
movzwl
sub
test
cmp
xor
roll
mov
adcb
cmpsl
divl
and
push
pop
push
xchg
mov
fs
push
bound
loope
xchg
xchg
push
sub
movsl
xchg
adc
fcomi
and
or
imul
or
outsl
inc
xor
mov
inc
pop
inc
sbb
cmpl
jp
jne
inc
imul
out
or
mov
ss
push
mov
daa
es
xor
repz
adc
add
mov
and
dec
lds
mov
add
jno
xchg
popa
and
lods
adc
pop
movsb
xchg
mov
jmp
mov
push
xor
jo
clc
sbb
insb
scas
xchg
stos
mov
in
and
add
movsl
arpl
into
mov
jo
es
jo
in
pop
test
mov
xor
testl
jmp
ss
add
jg
addl
out
mov
jae
stos
subb
or
adc
test
enter
movsl
mov
scas
cmp
xor
icebp
iret
cwtl
lcall
js
mov
mov
sbb
push
pop
xchg
sub
xlat
cmc
loop
mov
sbb
lahf
imul
lar
push
ljmp
mov
fwait
push
pop
adcb
shlb
push
add
adc
cmp
aaa
push
push
jecxz
sbb
adc
jl
add
movsl
mov
pop
mov
add
jae
mov
lahf
xchg
mov
cmc
daa
push
jns
mov
and
adc
jecxz
imul
xor
fdivl
jae
test
dec
inc
or
clc
xchg
jmp
dec
rcrb
cltd
movsl
call
xor
push
fcoms
mov
fsubr
add
mov
add
mov
imul
sbbb
jmp
pop
cmp
test
adc
movsb
pop
sub
cmp
mov
or
cmp
aad
add
aad
add
adcl
loope
inc
or
sti
subb
lret
insl
insl
adc
cmp
push
mov
mov
inc
iret
mov
cmp
sub
inc
lret
loope
inc
insl
push
popa
and
rcll
pop
es
jecxz
call
xchg
push
push
add
inc
mov
popf
sarb
mov
mov
adc
pop
hlt
inc
shrd
pusha
xor
or
sub
dec
in
push
xchg
push
cs
mov
push
pop
mov
rolb
iret
jo
fisttpll
and
gs
cs
popa
arpl
xor
stos
push
mov
or
xchg
popf
movsl
sbb
xor
lods
test
pop
aas
and
xchg
lds
lds
mov
xchg
cmp
sbb
dec
cmp
xor
pusha
cwtl
sbb
roll
inc
in
shr
test
rclb
pop
push
dec
test
ret
aam
mov
ja
leave
add
rclb
or
add
test
in
lcall
add
sbb
ja
xor
dec
xor
push
rcrl
xor
idivl
and
mov
jnp
xor
dec
icebp
sbb
nop
aad
ret
push
add
or
jge
and
call
outsb
and
push
or
or
mov
sbb
jle
hlt
sbb
sub
arpl
testl
dec
dec
cmp
mov
sahf
lods
add
jmpw
xchg
dec
addl
dec
inc
loope
xor
fmull
cmpsb
lret
into
inc
jp
aas
jno
shrl
jb
clc
loope
popa
cs
push
xchg
xor
mov
xchg
cs
pop
nop
std
add
aad
iret
fstpt
inc
mov
ja
cmp
dec
leave
test
xlat
push
ret
or
iret
sub
fcomps
mov
test
mov
xor
or
or
lods
xor
sbb
inc
test
out
iret
push
insl
out
push
add
sbb
aaa
add
les
js
loopne
and
and
or
scas
mov
loopne
in
fwait
mov
jno
jbe
xchg
sbb
and
mov
mov
jecxz
into
mov
cmp
das
mov
add
jge
and
xor
gs
sub
sbb
jbe
jo
fistps
dec
add
imul
jecxz
push
out
dec
and
imul
jmp
add
mov
or
fiadds
mov
add
lods
jne
and
push
and
jo
push
icebp
icebp
dec
pusha
repnz
xchg
shll
das
sbb
in
jp
cmp
cmp
and
inc
into
fimull
mov
lods
xor
das
scas
dec
jecxz
outsl
push
sub
in
cmpsb
fildl
es
and
push
out
mov
cmp
mov
sbb
es
sub
mov
jmp
jo
and
mov
push
aaa
lock
aas
or
inc
xchg
enter
xor
mov
or
mov
fisttps
dec
ud2
sbb
int3
pop
adc
xor
sub
clc
sbb
push
inc
dec
jg
adc
lods
popa
xor
pop
icebp
rcrl
dec
sub
xchg
xor
out
pushf
in
push
popa
hlt
adc
dec
aaa
rolb
pop
push
pcmpeqd
loope
sbb
dec
mov
loop
jnp
xor
aam
jbe
dec
aaa
dec
test
cmp
mov
mov
repnz
out
movsl
ret
or
sbb
leave
shlb
push
int
aam
and
icebp
pop
paddsb
daa
xchg
movsb
out
aaa
loopne
sti
je
xchg
loop
sti
adc
shll
pushf
xchg
ret
inc
stos
nop
es
pusha
pop
inc
xor
es
inc
push
sbb
call
in
dec
sbb
mov
and
leave
push
es
push
inc
mov
addr16
fstps
lret
mov
ficomps
jb
push
push
or
pop
not
test
daa
pop
push
fcmovu
cmp
cmpsl
ja
pop
push
adc
je
and
xchg
add
pop
cmp
cmp
iret
inc
xor
add
adc
mov
adc
dec
stc
lcall
les
add
loopne
jne
fsubrs
in
jp
loope
mov
add
mov
dec
das
dec
scas
xchg
hlt
xchg
mov
rol
add
outsl
loope
xchg
es
addl
jo
xchg
shrl
test
int3
int3
push
and
rorl
popf
push
inc
push
or
add
je
sarb
in
or
frstor
adc
jp
xchg
push
ret
jno
fisubs
lcall
adc
add
sbb
out
cmpl
sbb
dec
ljmp
test
add
push
test
dec
xor
push
loope
push
addr16
daa
mov
loope
iret
cmp
sarb
das
or
std
cmp
mov
lock
sub
adc
add
jmp
cmp
mov
ss
add
mov
push
add
pop
jnp
and
cld
sub
out
fwait
sbb
pop
shrb
test
gs
fdivrs
stos
and
sbb
mov
subl
shlb
xchg
cmpsl
xor
ret
jmp
mov
dec
jmp
mov
out
lcall
and
and
jge
and
adc
fs
test
roll
das
test
add
mov
lock
push
add
call
mov
orl
mov
inc
mov
dec
pop
into
cltd
jno
adcb
sbb
add
inc
ret
out
fildl
inc
dec
fstl
mov
lock
lret
adc
insb
sbb
pop
call
adc
into
push
sbb
imul
mov
sti
adc
inc
aas
pop
pushf
fstps
jne
and
sbb
pop
pop
xor
mov
adc
lock
stos
and
shrl
inc
cmp
dec
fidivrs
and
mov
fwait
sbb
insl
cwtl
jns
push
or
and
mov
pushf
lock
cwtl
push
jno
add
out
out
and
or
push
jle
cli
adc
ficomps
iret
push
add
sbb
dec
jne
and
popa
cltd
sbb
daa
jge
dec
cli
cmp
test
pop
add
add
add
mov
jb
dec
aaa
push
push
push
jecxz
jecxz
dec
mov
jns
jbe
jae
jne
hlt
lods
pop
or
sub
and
or
mov
movsb
mov
push
cmc
xchg
push
lret
xor
fists
xchg
pop
dec
cmc
aam
and
mov
and
test
jnp
or
push
add
cli
mov
jmp
out
sbb
push
aaa
mov
and
and
push
and
lods
xor
add
jmp
aaa
adc
lcall
outsb
push
dec
jl
movsl
enter
mov
pop
dec
int3
enter
aaa
stos
cmp
cmp
xlat
loopne
in
gs
xchg
movb
mov
mov
in
bound
shl
push
or
lahf
push
fisubrl
dec
cs
popf
pop
jno
add
push
pop
push
daa
and
mov
rcrb
add
jae
add
das
push
loopne
addr16
cmp
stos
dec
cld
into
mov
sbb
das
jae
mov
dec
es
rolb
neg
test
das
gs
add
in
add
inc
adc
cwtl
mov
add
jns
xor
out
adc
shrd
pop
push
lods
out
or
push
push
sub
ficomps
push
mov
pop
mov
push
lret
test
pop
add
sti
ds
jo
notl
adc
scas
sbb
jg
aam
jns
int3
jo
mov
sahf
shlb
lods
jbe
mov
clc
mov
cmp
pop
pop
scas
push
sbb
movsb
mov
mov
cmpsl
dec
pop
mov
inc
jg
mov
into
jl
cmp
ds
stos
xor
rcl
add
aaa
or
lret
aaa
nop
mov
jb
loopne
push
jb
and
pushf
insb
popf
jbe
out
in
add
or
mov
lods
jbe
es
test
aad
add
mov
pop
inc
jne
mov
xchg
mov
lret
test
and
xor
jno
and
sub
daa
aad
cmp
inc
and
mov
cwtl
roll
sbb
inc
push
test
and
js
or
sbb
xor
imul
xor
fbstp
je
sub
dec
add
mov
lds
jle
popa
movsl
add
pop
mov
ljmp
in
scas
push
cmp
aaa
sbb
loop
push
mov
sti
jecxz
aaa
or
test
add
jns
bound
in
push
add
push
push
add
push
cli
or
dec
hlt
jae
inc
dec
mov
xchg
pop
lock
shl
or
adc
in
nop
lea
iret
jnp
int3
les
mov
cmp
jb
inc
jbe
push
in
cmp
pop
pusha
test
add
and
mov
xchg
pop
scas
add
aaa
pop
push
mov
xchg
fbstp
or
stos
dec
pusha
loope
out
shl
sub
adc
frstor
shl
cmp
call
ret
add
and
pushf
mov
ja
pop
dec
sbb
ret
lds
cmp
nop
mov
shl
push
cmc
mov
push
and
call
ds
fmull
scas
cmpsb
sbb
push
ds
cmc
orl
and
or
loopne
push
pop
or
sbb
adc
sbb
ss
xor
imul
mov
add
aam
xor
adc
lret
adc
push
push
xchg
popa
and
inc
xorb
arpl
ret
loop
pop
popa
in
leave
mov
andl
xorl
adc
pop
sub
shr
mov
outsl
insb
mov
outsl
cmp
cmp
shrl
pop
scas
xor
arpl
inc
pusha
mov
sub
jle
dec
fwait
out
scas
or
add
xor
loopne
mov
jge
loopne
jp
sahf
add
je
push
test
fstps
push
jmp
jle
imul
fcoms
fildll
or
dec
fadds
outsb
sbbb
aaa
xchg
or
and
mov
pop
cmp
jo
bound
add
rcrb
test
cmp
adc
rcll
push
fisttpl
cmp
mov
push
hlt
shrb
roll
jne
in
and
rol
adc
mov
sbb
pop
xor
jl
pop
popa
mov
adc
aam
stc
jno
cmp
out
les
adc
lret
mov
fldt
sub
ret
loope
mov
sbb
roll
clc
or
out
cwtl
or
out
pop
pop
call
rorl
popf
daa
jle
sahf
jo
jle
icebp
leave
int3
add
mov
imul
adc
nop
fs
sbb
mov
cmp
push
int
pop
ret
fmuls
aaa
aaa
cmc
mov
sub
fisttps
jb
cmp
jmp
push
loopne
iret
and
xchg
les
jmp
push
fnstsw
jl
enter
iret
mov
adc
pusha
and
ret
cmp
add
fs
mov
bound
aad
sbbl
insl
fs
loope
jl
popf
jl
mov
mov
roll
roll
rsqrtps
dec
cmp
hlt
imul
mov
scas
and
js,pn
sbb
or
inc
pop
out
in
jp
sub
mov
sub
lods
movsb
pop
add
sbb
ret
inc
js
jno
ljmp
pop
sub
xchg
cwtl
mov
and
add
lods
push
sahf
and
dec
or
packsswb
xorb
test
pop
mov
adc
push
inc
pop
push
fcmovnu
and
popa
cmpsl
aas
add
daa
cmc
loopne
sbb
pop
movsl
jno
pop
pusha
fs
push
ljmp
or
mov
in
test
mov
das
jecxz
andb
int3
adc
loop
movsl
push
xlat
mov
and
mov
push
push
pusha
sub
call
pop
das
out
in
jp
pusha
sub
shll
add
out
xor
jns
cmp
icebp
or
jmp
xchg
iret
xchg
aad
sub
xchg
inc
inc
aaa
in
mov
int3
in
mov
xchg
loope
push
outsl
xchg
push
ret
shrl
push
or
add
adc
pop
dec
filds
xor
cwtl
mov
imul
push
js
mov
push
ljmp
scas
xor
insl
push
xchg
pop
clc
jl
fcoms
pop
add
mov
sub
iret
xor
or
repnz
add
or
mov
aam
mov
movsl
add
pop
rcr
jmp
inc
movsb
loope
movb
push
jno
cmp
jne
loopne
cmp
pop
add
fcoms
push
mov
js
xchg
mov
icebp
out
lods
xorb
sarl
es
and
jo
sbb
cmpsb
loop
dec
dec
mov
fistpl
test
mov
add
in
mov
rol
or
push
dec
cmp
jge
add
sbb
dec
or
orl
mov
xor
movl
in
mov
xor
pop
inc
call
mov
jmp
dec
sub
mov
mov
sarl
sub
cmp
mov
xchg
add
or
fdiv
push
push
jg
imul
mov
mov
mov
mov
test
les
pushf
dec
outsl
cmp
add
mov
lods
dec
adc
inc
lret
adc
cmp
jge
in
adc
or
scas
add
ret
dec
add
cmp
scas
lods
and
adc
and
ret
inc
cmp
jecxz
jno
pusha
sbb
fwait
push
out
or
lods
es
in
shlb
mov
fbld
sub
popa
mov
push
push
loop
jo
xorl
int
xchg
and
mov
cmpsb
mov
xchg
and
or
sub
dec
jl
lock
push
dec
mov
daa
inc
xor
popa
pop
fwait
out
sub
std
popa
clc
js
sub
dec
mov
imul
cmp
ror
les
cmp
rcr
and
lcall
lahf
fstpt
dec
cmp
adc
dec
rol
out
pusha
sub
dec
aas
es
out
in
cwtl
mov
adc
jg
in
xor
mov
ret
lods
shl
adc
insb
and
add
cmc
or
and
mov
test
js
fcoms
lea
sbb
je
or
or
rol
and
inc
cmpsl
or
mov
cs
mov
insl
jno
inc
add
xor
arpl
mov
adc
daa
mov
test
pop
jmp
xor
xor
cmpsl
add
sbb
dec
or
sbb
adc
data16
mov
xor
sbb
sub
fistpl
test
push
pop
mov
mov
bound
aaa
pop
out
iret
sbb
xlat
add
cmp
cmpsb
pop
frstor
pop
stos
sbb
addr16
adc
scas
pop
xor
cwtl
in
adc
nop
es
fadd
ret
dec
out
push
sub
mov
out
test
add
iret
sbb
enter
repz
adc
sbb
add
mov
add
cmp
xor
pop
fldcw
cmp
xchg
push
adc
gs
xchg
out
inc
es
or
jle
push
or
adc
inc
inc
and
jecxz
jae
lds
xor
ss
pop
xchg
dec
sbbl
mov
mov
lods
or
orl
adc
cmp
cmp
dec
faddl
ret
ret
mov
or
xchg
lods
or
lock
xor
dec
test
mov
sti
stos
inc
lahf
mov
nop
jo
and
pop
cmc
cmp
rcrl
mov
lret
popf
push
inc
mov
lds
sub
dec
add
in
shrl
js
mov
adc
ret
push
repnz
mov
pop
xchg
mov
jp
or
sub
mov
cmp
lret
push
push
dec
outsb
pop
mov
mov
add
repz
movsl
pushf
and
pop
adcl
xor
pop
fisubl
sub
add
loop
icebp
add
jp
out
pop
loopne
js
adc
lcall
push
mov
inc
cmp
imul
inc
movsl
cmp
cmp
sub
enter
rcrb
loop
les
orb
xchg
movsb
out
das
shr
nop
or
call
loopne
xchg
adc
dec
cmp
loop
pop
mov
cmp
mov
testl
add
pop
cmpsl
repz
das
push
mov
push
popa
mov
push
movsb
xor
ss
popl
enter
or
add
cmpsl
add
dec
push
nop
jne
fadd
movsb
outsl
mov
jne
inc
ja
sahf
pop
lods
out
je
adc
sub
addr16
adc
outsb
fsts
pop
sbb
sbb
xor
inc
ja
sub
mov
rcrb
add
test
loopne
addr16
and
and
adc
cmp
inc
ja
push
data16
xchg
adc
add
inc
pop
mov
scas
ret
dec
lods
adc
push
sbb
das
mov
push
mov
in
push
sub
jecxz
or
mov
mov
mov
dec
lods
mov
sbb
fstpt
cmp
test
adc
loop
jbe
pop
ret
xchg
pop
dec
loopne
cmpsb
sub
push
sbb
and
sbb
add
pop
or
cld
fucomi
jle
xchg
ds
popa
sbb
or
push
push
lods
loopne
imul
jno
popa
mov
pop
orl
xor
push
push
ss
imul
clc
and
add
addl
dec
cmp
gs
mov
inc
data16
js
movsb
add
sahf
fbld
xor
push
adc
repnz
adc
mov
adc
lret
ja
popa
inc
es
pop
cmpl
cmpsb
mov
leave
push
test
cmc
sbb
mov
shll
mov
int
lds
mov
scas
push
or
pop
aaa
rcll
fadds
fistpl
add
jmp
xor
es
out
xor
inc
testb
or
sbb
ret
xor
out
clc
push
push
out
daa
and
lea
dec
push
xor
in
and
adc
mov
testl
jne
pop
or
loope
push
jmp
push
ficoms
pop
push
push
cmp
xchg
and
ret
fucomi
jmp
aad
xchg
lahf
jae
xor
cs
popa
lods
out
inc
sub
rcll
adc
sbbb
icebp
cmpsb
xor
ja
imul
cmp
popf
add
xchg
xchg
lods
scas
pop
das
lods
pop
out
stos
mov
andb
in
mov
push
outsl
out
shll
push
sub
inc
or
sub
scas
das
mov
sarl
adc
outsl
out
popf
jns
test
add
inc
jne
sbb
pop
xchg
bound
nop
popl
cwtl
hlt
xchg
in
sub
pop
sub
hlt
or
in
icebp
add
mov
sub
sahf
loopne
js
and
dec
add
pop
incb
add
lock
icebp
sahf
es
xor
iret
push
mov
or
cwtl
ret
lds
jns
mulb
xor
lds
into
sbb
clc
rol
and
pop
js
adc
hlt
in
xor
cmp
pop
ret
fistl
imul
insl
mov
pop
push
inc
inc
ret
shrl
testl
inc
cmp
adc
fldenv
and
dec
jno
xor
xchg
xor
out
mov
pop
lret
les
movl
sbb
sbbl
sar
jbe
adc
lds
mov
inc
sub
inc
rep
mov
xor
cs
xor
or
push
out
add
inc
sti
add
xchg
add
and
mov
sbb
ja
mov
loope
cmc
sahf
add
fistps
mov
leave
or
sub
movb
sub
cmp
test
adc
loopne
and
dec
sub
inc
movb
icebp
enter
hlt
jb
andl
push
mov
lods
xchg
sbb
js
es
mov
jmp
jmp
adc
sub
pop
icebp
add
adc
and
test
rolb
mov
or
int
scas
mov
in
lret
pop
fwait
movsl
sbb
insb
pop
pop
mov
sahf
inc
sub
sub
sbb
sub
pop
sbb
inc
lods
inc
xchg
push
mov
cmp
jge
xchg
mov
out
inc
dec
sub
sub
fistpll
ret
movsb
mov
pop
push
pop
push
inc
out
or
adc
dec
fwait
xlat
jle
inc
and
pusha
outsb
jmp
lds
orl
mov
sbbl
sub
ja
fimuls
sub
ret
rorb
mov
sbb
test
inc
enter
pop
or
cmp
les
push
popf
nop
clc
js
push
xor
mov
shrl
ds
jmp
xchg
jno
sbb
push
sub
clc
pop
jno
arpl
ja
xlat
dec
or
add
movsl
fcomps
xchg
out
push
add
out
loope
daa
inc
or
and
sahf
jo
dec
dec
insb
mov
xor
xor
lock
and
scas
les
or
test
jmp
dec
cld
add
pop
jmp
icebp
aaa
js
sarl
adc
in
xchg
aam
cs
test
loope
ja
aam
jno
and
and
nop
cmp
adc
push
nop
sbb
repz
adc
xlat
and
xor
aaa
inc
push
adc
adc
scas
mov
sbb
push
shll
call
adc
fwait
in
fcmovnb
jp
iret
in
rolb
fcomps
xor
pop
cmp
les
test
xchg
fidivs
cmp
scas
or
hlt
faddl
sub
mov
and
jbe
add
ret
push
push
sbb
into
add
clc
or
or
xlat
add
push
icebp
mov
xlat
cmp
cmp
ret
popa
jge
inc
outsl
fisubrl
dec
test
pop
sbb
and
pop
add
cmpsl
sbb
jge
push
and
das
pop
aad
lods
fmuls
and
adc
push
mov
aaa
cmp
fsubp
push
mov
jmp
es
subl
rorb
pop
pop
and
je,pt
mov
in
int
jno
rcl
out
dec
xchg
fstps
fsubs
sbb
sbb
pop
stc
icebp
add
int3
add
mov
sarb
in
cmp
je
iret
sbb
je
xchg
jmp
sub
dec
add
fadds
leave
push
ljmp
pusha
adc
dec
hlt
imul
mov
cmp
mov
out
or
cld
rcrl
mov
shrd
roll
xchg
adc
lods
push
jnp
push
sarl
jbe
lret
add
fcmovnbe
pop
add
fistps
movsb
gs
and
pop
imul
mov
cmpb
xchg
gs
jg
fxch
js
mov
xor
nop
push
and
int3
out
ret
mov
aas
shll
loope
pop
mov
jbe
pop
pop
jno
push
xchg
movsl
sbb
ja
push
jle,pn
fimuls
ret
scas
loopne
sub
mov
jbe
nop
mov
orl
sbb
push
ret
sub
xchg
mov
daa
lea
xchg
scas
adc
mov
xchg
pusha
or
lahf
adc
lods
rol
dec
jl
cli
push
inc
jecxz
gs
sub
ja
in
test
call
pop
test
mov
push
push
pushw
testl
ja
sub
repz
sub
sub
jmp
push
or
enter
shrl
movsl
rolb
inc
fstpt
xor
xchg
xchg
je
daa
sbb
jns
jns
push
addb
mov
rorl
pop
add
popa
sub
test
dec
jp
mov
data16
xor
push
ljmp
icebp
inc
mov
pop
js
and
push
rcr
lods
push
push
mov
fcom
dec
fcoms
filds
ret
mov
pop
test
in
and
sub
inc
and
icebp
dec
sbb
mov
sub
sub
sbb
dec
es
jecxz
xor
pop
test
jp
loop
xchg
push
sbb
lcall
add
mov
loop
cmp
push
jb
push
fimull
add
fildll
xchg
in
add
outsl
mov
sub
push
imul
cmc
jle
sub
jo
push
inc
jmp
sub
mov
das
pushf
push
cmpsl
shll
pop
icebp
xor
fnsave
xchg
xchg
xor
sub
cmp
ret
pop
lret
pusha
mov
mov
fidivl
fiaddl
or
inc
dec
aaa
loopne
or
inc
xchg
sti
stc
shrb
cltd
adc
add
cmp
mov
mov
dec
sarb
inc
andb
jo
aaa
jmp
enter
sbb
inc
pop
sub
push
xchg
jno
arpl
ds
push
stos
imul
data16
add
rcl
outsb
add
mov
aam
push
or
xor
mov
lea
imul
cmp
loope
nop
enter
xor
jbe
ja
sarl
in
adc
movsl
addr16
int
int3
mov
xchg
outsl
imul
test
fidivs
ret
mov
mov
rolb
cmp
lea
and
mov
adc
mov
push
jg
sbb
lods
add
in
push
loopne
mov
push
loopne
sbb
or
int
pusha
lahf
add
sbb
pushf
dec
mov
push
push
enter
aad
xchg
ret
in
xchg
dec
jmp
and
inc
pop
scas
push
or
jnp
sbb
nopl
sbb
loop
iret
rcpps
sub
sub
out
add
gs
lods
mov
roll
div
loop
loopne
cltd
insb
ljmp
push
fwait
sbb
scas
push
dec
mov
hlt
xchg
adc
and
sti
testl
dec
pop
push
aas
push
cs
lock
fsubrp
test
jmp
cmp
movsb
scas
pop
testl
xchg
or
mov
clc
and
jbe,pn
and
mov
inc
inc
push
xor
add
cld
es
adc
stos
sbb
sbb
push
pop
dec
adc
jecxz
pop
add
dec
imul
mov
dec
xchg
mov
mov
xor
fisttps
pop
and
repnz
inc
or
pop
sahf
ljmp
mov
jo
mulps
push
call
adc
test
je
into
dec
lcall
jae
pop
mov
mov
dec
mov
out
add
or
mov
lea
ret
shr
addr16
push
sbb
cmp
call
cltd
js
pop
fnstcw
adc
push
add
dec
cmp
outsb
cmpsl
push
jmp
jae
stos
into
loopne
sahf
and
pop
rep
lods
out
push
ja
subb
fimuls
out
sub
imul
lea
cmp
js
test
sub
or
xlat
or
push
jp
mov
out
sub
fucomi
inc
rcll
shll
or
out
push
repz
mov
jne
xor
and
mov
je
movsb
imul
pushf
and
subb
mov
ficoms
lret
iret
fidivrs
mov
jb
mov
xchg
jge
cmp
pop
fnstsw
in
fs
mov
ljmp
test
rclb
mov
pushf
pop
push
mov
cmp
sbb
test
adc
insb
push
shrb
test
mov
mov
cmp
and
lea
aam
mov
sub
pop
cmp
shll
xor
fsts
mov
sbb
loopne
pop
scas
cs
lods
daa
lret
mov
sub
mov
sbb
out
sbb
add
sti
testl
insb
imul
loope
jae
and
sub
rorb
lret
jo
xor
shrl
lods
outsl
insb
es
and
push
leave
lea
lahf
push
test
add
cmc
clc
mov
movsl
mov
arpl
cmpsl
adc
sub
or
adc
imul
js
arpl
jmp
push
clc
mov
fwait
add
leave
rcrb
or
sub
push
daa
jmp
movsl
inc
or
nop
pop
adc
sahf
loop,pn
push
fs
inc
dec
and
mov
dec
xchg
ret
fdiv
movsl
ja
js
add
popa
pop
enter
imul
fdivs
inc
mov
or
or
xchg
xchg
add
push
adc
push
les
in
add
or
lods
aas
std
lcall
arpl
dec
add
mulb
mov
aaa
clc
mov
loope
xorb
mov
push
mov
outsl
pop
and
int
inc
js
pop
mov
push
movsl
adc
sbb
pop
loopne
aaa
test
lret
adc
mov
aas
add
shlb
dec
test
dec
test
in
adc
push
loope
ljmp
sti
insl
sahf
jg
scas
sub
popf
sub
push
xchg
shll
fistps
fnstsw
pop
pop
or
cli
adc
pop
sbb
aam
pushf
mov
inc
lahf
sub
out
sub
imul
or
xchg
sar
add
mov
cs
push
lea
pop
pushf
pushf
loope
jmp
sub
add
add
dec
xchg
inc
dec
pop
sub
shlb
loopne
push
addr16
ss
subl
mov
dec
imul
dec
and
sub
pop
call
adc
xchg
subb
xchg
movsb
popa
gs
into
inc
add
cmpsb
inc
ljmp
sub
test
rcll
push
jecxz
stos
repz
adc
dec
mov
lret
adc
push
xchg
int3
push
cmpb
outsl
add
aad
inc
dec
int
and
outsl
enter
jbe
in
insl
lds
xor
adcb
leave
xchg
inc
dec
inc
sbb
jb
daa
lea
cmp
loope
adc
mov
and
dec
add
popa
inc
mov
pop
add
add
es
fdivrs
cmpsl
mov
mov
pop
mul
shr
loopne
nop
or
loope
xor
inc
jb
xchg
call
outsb
inc
iret
les
jmp
shl
mov
shll
xor
aam
mov
cltd
xchg
cld
sbb
fwait
jne
pop
adc
shl
add
mov
ja
push
data16
xor
ret
jne
mov
lock
int3
xchg
adc
pop
xor
aas
test
outsb
ljmp
xchg
ljmp
xor
sub
add
xor
pop
ret
adc
andb
xchg
lret
or
and
pop
push
or
movb
xchg
dec
pop
fidivl
inc
mov
pop
cld
pop
into
pop
fidivl
jae
shlb
push
or
mov
jge
mov
inc
or
mov
jge
pop
sti
cmp
sar
add
pop
inc
insl
sbb
pushf
clc
sub
out
imul
int
push
js
pop
arpl
popa
push
pop
lea
add
inc
cmovl
out
es
js
rolb
daa
adcl
mov
loope
dec
mov
call
jecxz
add
roll
loope
and
cmpb
movb
scas
pop
ljmp
cmp
mov
aam
hlt
rcrb
sbbb
ret
add
lret
xor
xchg
xlat
aaa
popa
jne
sub
mov
in
push
lret
push
sub
insb
pusha
adc
insb
xorps
js
add
fcmove
addr16
out
or
pop
cs
dec
hlt
xor
adc
rolb
push
mov
pop
push
inc
and
roll
pusha
pop
adc
jnp
push
scas
inc
xchg
sbb
push
pop
pop
push
jno
dec
jp
dec
mov
pushf
push
das
mov
jge
pop
pop
ud1
mov
jne
dec
add
cmp
and
in
scas
jb
test
adc
inc
iret
call
pop
imul
xchg
stc
lods
mov
sbb
adc
fsubs
jne
xor
push
mulb
cmp
add
cmpsl
aas
xor
mov
mov
gs
jbe
lods
jmp
cs
jecxz
clc
xor
inc
daa
ret
popa
and
movsb
pop
fimull
rolb
mov
pop
push
adc
add
dec
es
jmp
cmp
inc
stos
mov
mov
dec
inc
pop
jno
clc
inc
shll
inc
mov
das
pusha
and
mov
je
xor
or
jne
out
mov
scas
xchg
cmp
jmp
sub
lods
cmp
pop
xchg
lret
mov
mov
add
push
sahf
push
pop
mov
ret
inc
out
aam
pusha
xlat
addr16
sub
inc
xchg
inc
out
inc
je
inc
pop
test
imul
hlt
lret
movsl
push
add
add
mov
fadd
repnz
xchg
bound
iret
add
call
rcl
movsl
push
add
add
pop
dec
xor
int
or
mov
or
sub
in
jge
lock
mov
daa
and
das
pop
inc
xchg
and
cmp
lods
inc
push
and
lock
cs
dec
dec
mov
aas
add
xlat
cmpsl
test
mov
dec
fcoms
out
inc
jecxz
shr
rcl
insl
jne
test
push
sbb
add
pop
pop
aad
or
andb
in
dec
sub
pminub
rclb
call
jmp
js
sti
hlt
movsb
insb
mov
sub
pop
mov
outsb
pushf
dec
and
andl
jo
sti
fs
inc
rcl
imul
lock
mov
inc
push
loope
lcall
sahf
lods
mov
cmpb
sbb
outsb
dec
out
add
xchg
out
ljmp
rclb
int
subb
outsb
jmp
jo
add
pop
add
ja
xchg
bound
sbb
push
pop
pop
lds
fnsave
inc
sub
jb
jbe
loope
es
inc
add
sarl
dec
dec
lods
test
and
imul
inc
push
adc
cli
fwait
lods
loope
jg
sub
xor
push
shl
inc
daa
cmpsb
lret
bound
pop
loopne
dec
not
cmpsl
cmp
xor
push
xchg
scas
test
push
cs
or
rclb
jp
int
lock
mov
xchg
xor
es
and
cmp
fsubrs
sbb
popa
movsb
fnstenv
scas
lods
fbld
dec
jb
ss
scas
mov
inc
pop
icebp
andl
sub
cld
adc
push
push
sub
addr16
add
ja
xchg
add
and
ds
mov
mov
lret
mov
sahf
jp
iret
xor
mov
add
addl
jno
jecxz
jg
sub
jo
mov
push
lret
lock
enter
fmull
enter
or
mov
das
jecxz
push
and
sar
movsl
or
xor
sub
mov
sbb
inc
xor
ds
inc
sub
aaa
pop
mov
aas
xlat
addr16
push
cli
xchg
stc
dec
addr16
mov
push
sbb
lcall
inc
sbb
sbb
int3
cltd
and
rolb
push
pop
jb
in
mov
and
cmc
inc
inc
pop
or
xchg
into
movsl
jle
adc
stos
sub
sbb
and
ljmp
jnp
mov
pop
iret
pop
call
aam
mov
shll
sahf
in
pop
loopne
jne
fbld
mov
jmp
add
or
lods
iret
mov
mov
cmp
inc
aam
sub
inc
sahf
ret
cli
inc
pop
xchg
mov
pop
xor
aam
aad
pusha
mov
push
adc
dec
cmp
les
push
mov
test
adc
ja
push
cmpsl
push
dec
pop
adc
mov
clc
popf
sbb
dec
iret
jp
ja
lods
fcmovnb
lds
out
popf
icebp
and
jb
mov
rorb
add
test
testb
stos
popa
xchg
cmpb
and
inc
ret
mov
cmp
iret
std
push
adc
cmp
push
push
xor
clc
mov
lods
mov
pushf
mov
inc
les
fisttpl
or
rolb
les
push
outsl
sahf
or
jl
sub
inc
mov
inc
out
movsl
nop
dec
vminss
mov
jge
jbe
testl
add
xchg
pop
jmp
push
mov
adc
lcall
ficompl
movhps
fnstenv
popa
mov
lea
xor
pop
sarl
loope
ds
cmp
or
dec
call
sub
adcl
fwait
dec
jmp
sub
sbb
push
into
xchg
icebp
rcl
pop
lret
rorl
dec
add
loope
rcrl
add
rorb
iret
mov
inc
inc
movsl
xchg
arpl
or
inc
xchg
addb
test
sbb
add
lods
and
push
add
sbb
mov
arpl
and
pop
cli
sub
mov
jecxz,pn
mov
pop
mov
add
movl
sub
sbb
aaa
push
cmp
cmp
and
cmp
iret
sbb
cmp
push
sbb
lods
aas
mov
sbb
call
arpl
ja
mov
cmp
les
add
arpl
fdivl
sbb
fsubs
loopne
cmp
add
inc
shr
inc
mov
insl
cmp
adc
jo
outsb
dec
rorl
sbb
mov
dec
mov
test
shlb
or
or
test
mov
cltd
test
test
cmp
or
mov
jmp
cld
adc
hlt
je
inc
jmp
loope
dec
jmp
jbe
mov
enter
or
nop
xor
mov
insb
cltd
sbb
popl
or
mov
dec
sbb
popa
nop
or
xor
xchg
pop
xor
add
call
outsl
fiadds
push
or
repnz
xchg
cmp
test
ja
mov
jmp
push
jecxz
mov
pop
ret
lret
push
add
push
xchg
out
mov
orl
dec
add
bound
and
add
dec
mov
mov
lods
loopne
mov
inc
gs
push
or
and
ds
jne
data16
jno
shlb
dec
sbb
inc
and
pop
ret
dec
daa
add
dec
jmp
sarl
imul
mov
add
and
pop
scas
test
and
push
sbb
aad
inc
pop
pop
and
imul
cs
push
add
sbb
outsl
sbb
addl
mov
addr16
mov
adc
int
cmp
fldt
vmread
push
popa
cmp
sub
and
ret
jp
and
shlb
inc
add
pusha
inc
xchg
rol
lret
andb
and
dec
lahf
pusha
cmp
cmp
lock
sub
inc
and
popa
sub
jle
shrb
subb
add
pop
shrb
fnstcw
sbb
lds
mov
mov
sub
ja
loope
inc
js
js
imul
jmp
add
inc
jae
dec
js
add
jo
push
push
xor
add
bndldx
xor
mov
dec
push
sub
mov
inc
aaa
xor
push
pop
xchg
inc
add
sbb
push
sbb
push
xor
mov
test
xor
testl
cmpsb
fucom
and
push
cmp
outsb
pop
test
into
sub
lock
das
pop
jne
add
adc
js
inc
inc
inc
mov
out
test
push
rorb
div
cmpsb
popa
and
jbe
insl
mov
cmc
sub
mov
xlat
ffree
inc
scas
or
or
arpl
repz
dec
mov
mov
data16
inc
mov
into
inc
push
ss
push
push
ja
mov
je
xchg
jno
add
cmp
xlat
adc
push
out
cmp
jno
fsubl
nop
fdivp
mov
out
mov
jp
cmp
out
jbe
hlt
adc
call
adc
or
pop
jo
inc
mov
mov
sbb
mov
add
dec
addb
sbb
sbb
popf
or
pop
push
lock
filds
jecxz
arpl
dec
out
pop
fnstcw
repz
pop
xor
fcoms
mov
inc
or
jne
cmp
xchg
stos
pop
dec
push
or
pop
cltd
aaa
sbb
inc
jns
fstps
mov
jo
adc
test
lods
mov
sub
jo
loopne
inc
les
in
adc
cmp
xchg
movsl
subb
fdivs
mov
pusha
mov
xor
cmp
js
ss
fisubs
pop
shl
ret
jle
jle
pop
fiadds
rorl
add
fisubs
sbb
cmp
adc
sub
add
lods
sbb
and
adc
fdivs
ret
inc
jns
push
shl
dec
or
nop
sarb
pop
inc
cwtl
pop
jnp
loope
or
in
sub
sub
pop
jp
pop
in
call
cmp
mov
jp
push
cmp
repz
jmp
pop
clc
pop
clc
and
lock
add
rolb
ret
shrb
mov
mov
push
xchg
push
mov
pop
mov
out
pop
int
incl
adc
xchg
dec
pop
push
inc
pop
out
mov
dec
or
sbb
ret
mov
pxor
sub
mov
movsl
xrelease
fdivs
and
mov
push
dec
and
mov
in
mov
arpl
pop
in
cwtl
js
test
adc
cmp
rep
push
mov
rclb
and
inc
mov
js
jo
shll
adc
loopne
enter
inc
popa
cmp
clc
cmc
adc
jne
jnp
jo
adc
jb
sub
mov
add
and
in
add
pop
ret
popa
mov
adc
test
pop
scas
adc
adc
mov
ja
or
dec
xchg
add
leave
in
mov
push
pop
rcrl
xchg
jl
ja
decl
lret
add
jle
in
movsb
rolb
pop
inc
sbb
daa
fnstenv
cmpsb
loope
leave
iret
dec
cmpsl
jle
rcrb
dec
in
inc
mov
push
mov
movsl
lret
ret
leave
enter
push
movsl
adc
jnp
fcomi
cltd
rcrb
fldl
adc
push
out
js,pn
enter
mov
lret
adc
fwait
jge
push
fcompl
std
xorb
inc
das
in
andb
cld
inc
cmp
fcmovne
aam
shr
cltd
into
add
mov
lods
cmpsl
lock
xor
cmp
pop
inc
sbb
mov
mov
xchg
sub
xorb
inc
daa
jnp
jge
vpaddw
pushf
les
test
rcr
sub
mov
subb
dec
pop
dec
rcrb
add
pop
int3
ret
cmp
leave
inc
movsb
inc
sub
push
addb
lret
ljmp
out
nop
sbb
and
dec
or
mov
ja
cmp
xlat
repnz
mov
pop
dec
popf
jge
jmp
inc
or
inc
shlb
and
mov
lods
add
outsb
arpl
jp
xchg
insb
mov
xchg
lret
inc
mov
popf
add
jns
cmc
push
sbb
stc
xchg
andb
mov
sbb
pop
pop
jle
jle
pop
cmp
lock
add
scas
add
or
or
call
frstor
lock
leave
js
push
leave
mov
inc
mov
inc
and
pop
movsb
movsl
scas
pop
sbb
cs
sub
and
push
push
sbb
cs
push
fxch
stos
xlat
roll
orl
test
push
pop
out
xchg
mov
and
sbb
arpl
lds
sub
iret
cltd
sub
rclb
movsb
dec
cmpsl
jo
inc
test
adc
js
adc
jo
lods
pop
daa
sbb
pushf
jo
xor
lds
outsb
pop
push
sub
and
in
mov
pop
dec
or
and
sbb
scas
scas
mov
fwait
popa
mov
or
jo
mov
inc
cli
xor
in
inc
mov
sub
lock
add
cmp
jbe
mov
loope
sbb
mov
pop
insb
and
dec
push
gs
mov
and
clc
bound
lea
fwait
cmp
push
mov
push
dec
mov
xor
mov
rclb
mov
push
mov
or
dec
xor
sbb
das
pushf
adcl
pop
sub
cs
add
icebp
pushf
sbb
jmp
mov
push
je
adc
pop
aaa
aad
push
div
icebp
outsb
mov
and
mov
push
stc
cmpsb
mov
sub
ja
cmp
js
fs
or
adc
xchg
or
and
xchg
popf
xchg
decl
cmp
sarl
pop
pop
mov
mov
jae
add
add
sbb
xchg
loop
xchg
mov
xor
mov
daa
adcl
pushf
sub
in
loopne
aad
pop
shl
inc
aad
xchg
fdivrs
cmp
loop
testb
inc
add
scas
adc
sti
adc
or
sub
jecxz
lds
imul
sbb
sahf
xlat
add
cmp
mov
or
xor
loopne
jmp
sub
and
inc
mov
xchg
mov
or
cmp
jo
popa
mov
sub
jns
ffree
inc
mov
cmp
popa
or
shl
cmp
or
cmpsb
and
test
rcrl
pushf
xchg
frstor
test
add
inc
inc
js
or
imul
nop
mov
cvtdq2ps
add
dec
iret
pop
jno
nop
add
ja
stos
sbb
adc
ret
xor
les
es
cwtl
add
pop
icebp
je
pop
cmp
loope
imul
ja
imul
mov
xorb
test
adc
gs
push
out
test
jb
xorl
ja
test
imul
inc
insb
movsl
sub
xor
repnz
push
sub
inc
aad
ret
jecxz
jg
xorb
xor
or
sub
jg
pushf
mov
out
fisttpl
pop
popf
int3
or
adc
sbb
lahf
sub
inc
sbb
push
or
out
dec
adc
inc
mov
daa
out
add
rclb
outsb
jge
lods
jge
or
inc
pop
sub
loope
out
cmpsb
shll
loope
mov
xlat
mov
jge,pt
mov
pop
aaa
scas
incb
enter
and
mov
lahf
sub
jle
inc
ret
and
test
mov
dec
pop
push
push
sbbb
inc
pop
inc
mov
fists
mov
fs
jb
cmp
mov
pop
mov
fsts
andb
in
sub
loopew
and
jae
test
pop
lret
insb
jnp
cmp
outsl
or
pop
mov
add
dec
sbb
cmp
out
cmpsb
imul
aaa
rorb
cmpsl
add
add
lock
dec
xchg
fiadds
cmp
xchg
jmp
sbb
mov
xlat
add
push
or
scas
pop
sub
xchg
arpl
dec
ja
loopne
gs
mov
dec
cmpsl
xchg
xchg
das
ret
dec
fwait
pop
dec
pop
mov
push
int
sbbl
insb
jnp
cli
pop
and
jne
inc
cwtl
and
daa
adc
daa
sti
scas
pop
mov
movb
pop
inc
stc
adc
mov
add
add
popa
movsl
jno
leave
add
mov
mov
add
mov
xor
adc
sbb
cmp
in
das
dec
cmpsb
push
mov
and
leave
outsl
rolb
adc
dec
mov
xchg
jno
jae
imul
cs
cmpsl
mov
xchg
inc
pop
add
xor
nop
mov
lret
jo
stos
dec
aas
pop
mov
pop
push
test
jecxz
pop
mov
mov
popa
push
jns
ret
popf
and
adc
or
jmp
or
rcll
insl
adc
rcr
or
ja
fcmove
mov
shl
ds
sbb
das
stos
int
cmpsl
lock
sbb
out
stos
xchg
jnp
adc
add
xlat
lds
add
add
dec
sbb
sub
jno
aam
lret
test
movsb
rcrl
pop
mov
das
mov
outsb
adc
mov
je
sub
add
lods
jecxz
dec
mov
cmp
or
pusha
push
shlb
out
xor
int
cmp
push
das
mov
pop
outsb
stos
hlt
add
adc
pop
mov
cwtl
inc
sub
pushf
push
test
xchg
mov
rclb
loope
mov
mov
cmp
push
jbe
sub
outsb
test
dec
xor
mov
add
out
sbb
aaa
and
add
jo
sbb
mov
add
or
xor
repz
and
jne
cmp
sbb
loope
cmp
lock
cwtl
or
push
jl
jno
aaa
in
sbb
add
ret
ds
leave
mov
cs
fstl
add
ja
insl
loope
arpl
pop
xor
adc
bound
aas
cmp
adc
cmp
inc
loop
loope
scas
push
mov
repz
pop
xor
or
int3
addl
cmovs
push
xchg
fcmovnbe
xchg
mov
out
xor
jecxz
in
dec
mov
jl
sar
and
and
movb
and
xor
popf
and
test
cltd
and
test
shll
xchg
or
push
call
xchg
add
imul
pop
ss
pushf
ljmp
es
jbe
daa
imul
and
sti
sub
or
push
jbe
adc
iret
mov
and
loope
xor
xchg
mov
pop
add
and
adcl
or
push
js
aas
push
aad
es
mov
lcall
dec
push
jo
cmp
pusha
jl
in
inc
lret
aad
and
mov
inc
lods
adc
test
adc
cmp
sbb
fmull
ret
push
das
les
mov
push
mov
jo
and
pop
cli
push
cli
adc
jnp
mov
call
js
xlat
scas
mov
sub
mov
repz
iret
adc
subb
mov
adc
out
sbb
sbb
dec
xchg
sub
fiadds
jl
cmp
das
addr16
into
dec
ret
and
lea
cli
cmpsb
out
xorl
sbb
dec
arpl
fs
add
push
cmp
insl
sahf
addb
adcb
stos
es
cmp
pop
sub
sbb
movsl
adc
fistpll
bound
rcll
sub
cmp
dec
and
xchg
adc
cmp
sbb
sub
pusha
xor
xchg
or
dec
push
inc
xchg
jno
loop
push
mov
xor
push
gs
jp
out
pop
push
inc
into
es
loopne
or
mov
mov
mov
fs
sti
cmp
mov
xchg
sbb
ss
xor
xchg
mov
mov
subb
or
or
mov
push
sub
int3
xor
adc
dec
and
dec
xor
pop
iret
int
push
inc
cmp
xorb
push
mov
rcr
pop
filds
enter
movb
int3
xchg
loop
pop
inc
fdivrs
loope
or
scas
mov
repnz
pop
cmp
stc
xchg
scas
test
lock
loopne
dec
or
xchg
imul
inc
addl
test
xchg
lret
cmp
enter
imul
movsb
dec
jns
add
cmpsb
push
iret
test
aad
into
jmp
loope
fs
add
add
cmp
mov
pop
jmp
lds
adc
mov
inc
sbb
out
inc
xchg
ret
rol
jne
jae
int3
jne
xor
nop
dec
mov
pusha
sbb
lock
aas
movsl
addr16
loope
das
test
xchg
imul
xchg
ja
push
pextrw
pop
sti
add
push
inc
fildl
iret
dec
add
jns
cmpsl
aaa
cli
popa
iret
adc
push
cmc
lods
adc
add
nop
sbb
xchg
jg
mov
ljmp
mov
xchg
add
mov
add
cmp
push
out
inc
mul
icebp
mov
adc
jae
push
jmp
lea
dec
movsl
push
sbb
xchg
fmuls
xor
pop
mov
mov
mov
or
xor
fldt
xchg
mov
add
add
add
mov
jmp
jbe
fnstenv
call
pop
test
jo
jne
mov
xor
add
add
jno
call
ret
test
popa
aaa
in
lods
add
dec
push
add
pop
mov
xor
sub
xchg
sub
adc
sbb
jp
pop
xor
ror
or
push
pop
add
xor
add
inc
mov
push
dec
pop
xchg
stos
lock
fsubrl
dec
cmpsl
shlb
int3
je
jnp
fcoms
aaa
push
and
sarl
xchg
mov
sub
add
add
popa
shlb
popa
pop
push
test
xchg
ja
shll
and
mov
or
xor
popl
ds
sbb
mov
add
pop
nop
dec
and
js
or
pop
shrl
add
adc
rcrl
jmp
sbb
adc
sbb
adc
loopne
mov
int
xor
imul
mov
jg
mov
or
lahf
or
inc
lock
mov
dec
jne
inc
daa
cmp
ja
sub
pop
aad
adc
iret
xor
dec
hlt
and
cmp
pusha
push
bound
invd
pop
cwtl
mov
adcb
and
or
and
pextrw
andl
test
dec
cmp
aad
adc
sbb
mov
ljmp
jl
and
ja
popa
andl
jmp
ret
cmp
test
add
pop
xor
out
js
bound
or
add
add
shlb
imul
sub
jo
sahf
adc
cmp
insb
inc
xchg
movsl
pop
xor
scas
xchg
add
push
sbbb
sub
jl
jae
mov
negb
js
testl
outsl
imul
inc
push
adc
sbb
pusha
pop
arpl
cmp
mov
mov
mov
gs
xlat
cmp
inc
inc
int
push
mov
std
add
mov
mov
push
jnp
inc
xchg
add
xchg
inc
mov
dec
fstl
or
mov
inc
mov
sub
jo
cmpsl
pop
dec
cmpsl
test
bound
cmp
lds
cmc
xchg
sarl
or
xor
test
cmp
orb
pusha
pop
pop
inc
repz
dec
mov
sub
hlt
jmp
xor
mov
inc
add
or
jno
aaa
mov
outsb
je
jne
inc
and
xchg
scas
and
mov
addb
sub
jo
mov
or
adc
enter
call
jmp
adc
fsts
jnp
add
sbb
sbbl
adc
sub
xlat
dec
jns
jnp
js
sub
arpl
inc
ret
in
popa
fnsave
mov
movsl
popf
bound
add
nop
out
jo
scas
mov
test
inc
shlb
pop
iret
push
imul
mov
ss
xor
push
fisubl
add
mov
ja
pop
loopne
fidivs
inc
mov
gs
inc
and
es
stos
mov
mov
inc
cmpsl
inc
jo
add
dec
leave
shr
cmp
ljmp
test
scas
add
popf
arpl
mov
xchg
insl
outsl
push
add
stos
push
add
jg
jmp
lea
adc
pcmpeqb
lret
cmp
lods
movsl
cmp
push
lds
stos
push
or
insb
xchg
aam
cmp
adc
sti
out
xor
jns
sub
jge
push
dec
loopne
cld
sub
add
lea
push
sub
cmp
or
jp
jmp
add
cmp
hlt
adc
outsl
mov
clc
nop
loopne
sub
mov
mov
mov
mov
sbb
mov
fadd
sub
cmp
pop
and
arpl
fsub
add
ja
call
add
adc
subl
imul
repz
setb
addb
sub
je
mov
cmp
mov
or
js
cmp
or
iret
and
ss
add
cmp
or
lret
xchg
and
stos
popa
push
sbb
cmp
in
or
jge
int
push
jp
jl
xor
sbb
inc
dec
fcoml
cmp
cmp
xor
sub
push
push
sub
jp
xorb
sub
xchg
or
ja
lret
xchg
mov
or
out
fcompl
xchg
ljmp
addl
cmp
fsub
mov
mov
push
lods
daa
icebp
outsb
fcmovnu
push
xchg
cmpsl
dec
lock
and
mov
scas
mov
or
add
into
js
sub
clc
lcall
popa
add
sbb
das
or
xchg
mov
push
xchg
lret
cmp
movl
arpl
in
xchg
test
movsl
or
or
xor
sbb
fadds
mov
dec
out
nop
inc
jns
xor
jae
out
int
loope
push
mov
jo
imul
add
mov
cs
aam
mov
orb
jns
jecxz
or
sub
jo
pop
mov
add
das
push
jo
test
inc
dec
inc
bound
loop
jo
dec
adc
adc
or
ret
mov
sbb
outsb
cmpsl
pop
or
push
imul
stc
adcb
das
dec
push
out
sub
call
add
and
cmp
pop
mov
inc
addb
cmpsl
scas
or
add
es
insl
loope
int3
cmp
stos
mov
inc
sub
xor
mov
bound
pop
popf
loopne
out
push
xchg
loope
xor
and
mov
mov
out
js
popa
out
mov
mov
push
ljmp
repz
popf
test
pop
test
push
xor
leave
xchg
into
lcall
dec
dec
mov
out
ret
push
call
or
loop
mov
rolb
cmp
xlat
mov
and
sahf
adc
jecxz
popf
andl
mov
and
lea
bound
movsb
push
rolb
enter
mov
push
xchg
push
cmp
pop
loop
stc
sti
and
jno
push
sub
cmp
xchg
pop
fucom
popa
neg
out
mov
leave
pop
and
push
push
adcl
or
add
sub
dec
fcoms
push
movsl
shrl
les
mov
mov
into
js
xchg
rclb
fcompl
lahf
lahf
in
mov
loope
inc
lret
les
mov
lcall
sbb
fidivs
insb
add
mov
push
rcll
loopne
mov
out
div
add
hlt
xchg
jmp
mov
lret
mov
or
jl
sub
rorl
and
ror
jns
sub
lea
xchg
xchg
pop
push
ja
in
cmp
rol
xor
gs
push
jne
and
sbb
or
loope
or
aas
xor
xor
mov
adc
movl
stos
pop
mov
jmp
in
and
iret
push
or
add
call
push
dec
pushf
aaa
mov
daa
push
ret
mov
enter
mov
cwtl
cmpsl
scas
in
xorb
lock
into
pop
cli
fnstenv
test
es
mov
shlb
pushf
lds
cmp
sbb
leave
outsl
addb
icebp
ret
ret
pop
pop
sub
sti
xor
sbb
loop
push
je
ds
mov
scas
sbb
int3
cld
dec
cmp
and
adc
adc
cwtl
push
push
xor
mov
mov
and
test
stos
mov
aaa
je
mov
aas
fdivrs
adc
pop
xor
test
inc
fldcw
sar
aas
addr16
insb
xchg
addl
movsb
cmp
ss
sbb
inc
lods
xlat
push
sahf
call
dec
popa
or
fdivrl
dec
and
dec
sbb
push
push
add
jne
push
and
lods
inc
pop
loop,pn
and
adc
scas
popa
pop
insb
loope
lods
hlt
adc
mov
add
pop
ja
loopne
movsl
imul
popa
std
push
out
xor
push
fimull
outsb
xor
add
sbb
mov
mov
movb
inc
xlat
lea
cwtl
mov
stos
sbb
inc
sbb
push
sbb
push
push
pop
add
ja
js
xor
cs
fiadds
push
in
lods
adc
mov
nop
je
mov
fcomps
sbb
call
cmp
mov
jo
mov
lahf
xchg
xor
lods
test
push
sti
pop
xor
jp
idivb
jo
inc
outsl
jle
scas
cmp
dec
aam
test
push
pop
xchg
xlat
or
cmpsb
push
clts
ds
jecxz
rol
outsl
jge
scas
push
out
cmp
das
push
or
movaps
xchg
push
aam
xor
or
int3
int
das
adc
lea
jle
push
sbb
mov
dec
add
jecxz
push
push
cmpl
cmp
les
mov
clc
inc
mov
sbb
icebp
dec
push
icebp
and
push
mov
roll
sbb
xlat
icebp
xor
and
pop
cmp
add
lock
mov
popa
int
fstpt
xchg
add
push
and
pushf
mov
sbb
and
sbb
cwtl
add
add
repz
out
int3
filds
push
test
xor
push
lea
or
cmp
popf
push
push
aaa
sub
je
pop
dec
jbe
lods
adcl
or
shlb
adc
and
rcrb
iret
mov
mov
jno
pop
inc
cmp
popa
addb
clc
lea
mov
pop
mov
add
push
pop
fwait
rcll
mov
out
inc
sbb
xchg
adc
add
in
out
jmpw
call
inc
and
dec
cmc
and
mov
and
inc
jl
cmp
pop
pop
sbb
into
jo
rorb
das
xchg
mov
cld
lret
add
loop
ret
add
push
or
xchg
xorb
cld
rcl
and
test
call
cmp
push
xchg
sbb
loop
xor
mov
aam
fidivrs
sbb
in
sub
es
adc
aaa
ret
xchg
mov
adc
adc
inc
test
inc
jg
push
dec
push
mov
jl
adc
mov
mov
movl
push
loope
rcr
cmpsl
repz
push
jp
mov
sbb
mov
dec
imul
sti
add
sti
sub
push
enter
cmp
cmp
dec
and
mov
test
adc
and
inc
dec
mov
add
mov
xlat
sti
lods
outsl
xor
sti
add
mov
jge
cld
xor
inc
leave
mov
lods
xchg
neg
push
cmpsb
ret
push
stos
mov
rcrb
sub
dec
and
int3
divl
mov
lods
daa
mov
sub
or
pop
push
sub
sub
lods
ja
je
popf
add
cmp
shlb
pop
add
fldt
out
cmpsl
sub
inc
loope
push
xchg
iret
and
dec
sub
jp
jmp
daa
stos
fwait
add
rorb
orl
in
adc
lret
mov
loop
mov
or
sbb
push
jae
fstps
xchg
dec
clc
cmp
xchg
out
add
jno
ja
dec
and
or
cwtl
sbb
pop
add
sbb
das
pop
lret
mov
test
cmpsl
lods
jl
push
jns
inc
int
and
or
dec
in
pop
adc
mulb
bound
sub
mov
loopne
push
daa
adc
push
push
rcrl
and
and
jno
xor
mov
jb
inc
fwait
test
aaa
jge
jno
pop
lahf
sbbl
mov
movsl
sarb
xorl
es
sbb
test
jae
popl
sbb
xchg
roll
dec
push
orb
mov
inc
mov
in
fisubrl
push
rol
xor
adc
inc
test
adc
lahf
xor
dec
sub
lea
loope
mov
jmp
inc
sbb
imul
xor
sub
cmp
xor
out
nop
dec
sub
cmpsl
xor
test
xchg
into
out
outsb
pop
jle
sbb
xor
aaa
xchg
jno
insl
or
ret
inc
cmp
dec
sub
and
lods
cmp
adc
push
push
mov
dec
cmpb
sub
adc
push
cltd
stc
push
rcrl
sbb
rcrb
inc
lods
dec
bound
lods
or
or
xor
lcall
cmpsl
enter
pop
and
push
xchg
dec
or
shrl
popa
xorb
add
push
movsl
lea
lret
out
mov
cmp
adc
and
pop
sarb
fiaddl
lods
mov
xor
aaa
in
pop
push
inc
ret
jecxz
sub
pop
movsb
adcb
or
cmpsl
add
push
repz
add
insb
jno
or
hlt
xor
rorb
jnp
push
add
fs
sub
leave
inc
js
sub
inc
sbb
add
jnp
jl
insl
dec
mov
sarl
out
gs
loope
lahf
xchg
les
pop
js
addb
lock
clc
push
ja
sub
lea
adc
out
mov
and
daa
and
xor
pop
negl
icebp
push
inc
cwtl
and
sarl
mov
arpl
ja
mov
pop
shr
add
mov
loopne
call
pop
pop
sbb
aad
addl
add
inc
lods
jo
das
adc
pop
add
js
cmpsl
outsl
sbb
jno
add
ss
arpl
pop
jl
addr16
and
nop
sbb
lret
hlt
pop
inc
outsl
lds
stos
fwait
xor
pop
je
ret
stos
mull
mov
mov
lods
push
in
insl
xchg
dec
pop
ljmp
pusha
mov
xor
fs
es
sub
add
mov
add
out
arpl
mov
movsb
dec
mov
cmp
gs
test
je
add
mov
wbinvd
cwtl
loope
sbbl
jnp
inc
inc
popa
and
mov
pop
push
jo
or
pop
push
or
mov
push
add
and
subl
test
mov
sahf
push
adc
dec
out
es
xor
std
ljmp
fisttpll
popa
cs
add
pop
or
cmp
jecxz
adcl
lods
mov
pop
and
add
adc
push
mov
pop
ja
scas
call
xor
mov
add
inc
decb
cs
test
jg
sub
sub
or
xchg
ja
inc
sub
popf
shll
sahf
loopne
and
ss
insl
js
outsl
shlb
and
dec
and
in
aas
hlt
sub
xor
or
jmp
fbstp
push
dec
out
and
mov
imul
and
add
cltd
push
rcr
jmp
pop
dec
pop
scas
mov
imul
cmp
push
xor
int
xchg
xor
stc
cltd
add
lret
and
out
jne
mov
add
add
cmpsl
adc
stos
lret
ret
aad
adc
lds
iret
xchg
add
jne
nop
cltd
bndstx
pop
xchg
sub
pop
out
sbb
sub
and
es
dec
dec
pop
loop
and
pop
pop
popa
fwait
pop
mov
out
adc
rcrl
iret
xlat
jmp
and
xor
shlb
push
fnstenv
fcoms
push
and
fsubrs
mov
mov
lret
sub
mov
das
iret
in
jae
sbbl
fiaddl
xor
jne
enter
iret
sub
xchg
stos
int
fstpt
ljmp
mov
movq
xchg
xchg
and
lea
cmp
xchg
mov
inc
daa
aas
and
call
xlat
jg
clc
lods
xor
xlat
jbe
test
fsubrs
cmp
je
jno
out
adc
jnp
sub
sub
insl
test
femms
xor
sbb
and
jmp
adc
adc
sbb
lahf
add
int
mov
or
push
push
xchg
pop
mov
ret
sbb
dec
pop
mov
daa
add
sbb
pop
pop
push
or
inc
aaa
mov
adc
push
test
and
faddp
ret
cmpsl
data16
cmp
fcoms
ja
orb
add
add
mov
mov
inc
loopne
mov
cmc
rcl
xchg
or
xor
cld
inc
sub
xchg
inc
xchg
outsl
dec
add
sbb
negb
push
lock
or
sub
jp
add
ret
xor
jg
outsl
sub
sbb
push
cmpsl
sbb
lea
test
call
stos
push
addr16
mov
enter
push
jl
leave
sub
aas
dec
orl
push
adc
inc
aaa
xchg
arpl
aaa
pop
xchg
dec
cld
inc
sarl
orl
lea
rcl
imul
nop
dec
sbb
cmp
in
add
pop
inc
or
cmp
je
leave
sub
movsb
jbe
dec
insb
aaa
xor
or
andb
jle
out
test
jbe
addr16
push
add
push
insb
lods
iret
js
pop
inc
ret
mov
mov
jg
or
mov
adc
cli
stc
into
dec
adc
sbb
push
mov
fnstsw
inc
sbb
or
in
add
dec
lods
and
and
jo
iret
movsb
pop
cmp
push
and
out
data16
addl
lret
ret
mov
insb
jae
xor
subl
ljmp
inc
ret
or
adc
outsb
ret
jle
pop
aad
lret
js
jno
jae
movb
jp
daa
or
sub
xor
add
mov
loopne
test
outsl
or
shrb
iret
popf
xor
mov
or
hlt
ret
cld
push
ljmp
test
cmp
jo
inc
dec
fwait
pusha
lea
pop
mov
jo
mov
lds
test
xor
xchg
ja
pusha
enter
in
adc
out
es
sub
add
push
add
dec
iret
add
fldenv
lods
mov
add
lods
cmp
scas
and
mov
mov
sbb
cvtps2pi
sti
imul
add
adc
sti
mov
pop
or
dec
mov
bound
jle
test
cmp
sub
in
je
mov
or
and
in
lret
mov
xlat
loopne
mov
jg
and
negl
and
jo
iret
and
lret
mov
inc
out
cmp
out
mov
je
or
ret
and
xchg
xchg
sbb
inc
loop
push
pop
push
je
or
rcr
mov
sub
push
push
xchg
dec
cmpsl
pop
neg
stos
cs
arpl
cwtl
popf
frstor
inc
outsl
stos
inc
and
insl
jg
mov
stos
iret
rcr
popa
int
int3
loopne
frstor
inc
push
jae
ss
adc
mov
add
fisubrl
push
mov
aaa
xchg
mov
fidivrs
and
clc
pop
scas
push
scas
cs
mov
loopne
sahf
sub
pop
lret
shlb
add
xor
sub
mov
cmp
pop
inc
rclb
sub
lock
xchg
jae
scas
pop
ret
dec
dec
dec
outsl
insl
dec
mov
mov
fisubrl
aad
xchg
pop
imul
out
int3
cmp
jbe
setbe
jg
cs
mov
xchg
jle
iret
sbb
lods
and
ja
mov
or
sub
pop
clc
movsl
and
cmpsb
xor
outsb
cmp
loope
int
ja
xchg
adc
imul
out
xchg
dec
jle
mov
arpl
mov
pop
mov
sub
cli
negb
faddp
add
sub
or
lods
cmc
adc
int3
fcompl
or
outsl
pop
aad
out
shl
fwait
rcll
sbb
pop
push
pop
arpl
or
mov
jno
outsb
pop
pusha
pop
stc
sbb
int3
cld
stos
ljmp
mov
inc
ja
push
xor
and
xor
ficoms
fidivrl
es
sbb
mov
and
outsb
pusha
in
push
roll
sbb
shl
add
arpl
mov
dec
xchg
inc
and
sub
xor
in
mov
inc
orb
mov
and
sub
loope
xchg
pop
notb
in
aaa
test
leave
ret
add
sbb
mov
mov
and
add
outsl
das
push
and
and
cwtl
sub
test
stc
sub
add
adc
mov
pop
push
dec
ss
loopne
push
mov
in
pop
repz
mov
push
xor
or
jb
lock
pop
xchg
adc
sub
cmp
mov
pushf
inc
inc
imul
test
fsubr
xchg
xor
orl
cmp
inc
das
lods
shll
mov
sarl
fs
mov
push
and
push
scas
cmpsb
or
sti
adc
sub
roll
js
dec
push
fs
lock
inc
into
call
sbb
pop
sbbl
add
mov
rol
mov
mov
daa
mov
dec
cmp
adc
pop
jge
dec
xchg
arpl
pop
push
inc
adc
mov
push
and
adc
bound
or
mov
sarb
mov
push
aaa
cli
sbb
stos
aaa
icebp
iret
xor
adc
mov
sub
sti
loopne
xor
adc
cs
cltd
dec
dec
dec
mov
jmp
insb
jmp
xchg
test
addb
mov
stos
sbb
iret
jge
fiadds
out
or
xchg
rorb
or
xchg
aad
xchg
xchg
in
in
testb
daa
pop
repz
jo
mov
push
sbb
popf
pop
dec
lret
mov
sahf
jp
xorl
mov
inc
sub
mov
adc
fisttpl
sbb
pop
jbe
pop
mov
jno
jbe
pusha
dec
jl
jnp
scas
ds
push
nop
mov
aad
cmpsl
call
cmp
sub
fdiv
dec
mov
cmp
inc
les
loope
aaa
sbb
push
adc
sub
stc
aam
sub
aaa
addl
jne
add
sbb
pop
iret
cmp
in
jle
push
test
mov
movsl
mov
pusha
push
or
cwtl
lods
jno
pop
or
sub
cwtl
pop
bound
loopne
popa
stc
mov
orl
push
dec
jmp
mov
inc
sahf
mov
adc
xchg
int3
shlb
popl
push
xor
out
test
daa
cmp
stos
add
sbb
inc
xchg
dec
or
std
ja
push
mov
jecxz
push
cmp
adc
fbld
mov
push
xor
add
insb
mov
sarb
or
mov
push
cmp
addl
mov
ret
adc
fiadds
cmp
sub
test
jns
sbb
pop
xchg
ljmp
mov
sbb
flds
pop
xor
movsb
out
push
dec
sti
mov
xor
and
in
xlat
sarb
cmp
ja
push
in
dec
stos
sbb
test
cmp
or
cmpsb
mov
cmc
je
iret
push
rorb
sahf
mov
ret
scas
lret
pop
icebp
pop
add
repz
mov
and
cmc
pusha
add
push
sub
arpl
xchg
jmp
push
jno
out
push
or
jmp
jecxz
xor
and
add
xchg
loope
or
loope
fucom
xchg
cmp
lock
cs
jo
mov
or
in
movlps
or
push
rclb
or
and
scas
lret
iret
out
mov
mov
mov
xlat
or
or
imul
outsl
push
dec
test
movsb
call
aas
loopne
xchg
dec
mov
mov
xor
dec
shll
inc
clc
or
add
mov
add
mov
ds
push
les
add
push
sbb
icebp
sub
js
bound
xor
dec
jmp
xchg
rorb
xor
and
fadd
inc
sbb
cmp
adc
xor
mov
movsb
jge
lcall
cmc
rclb
arpl
push
mov
cmp
rcrl
push
icebp
jbe
pop
sbb
sbb
inc
inc
lret
loopne
xchg
imul
sbb
pop
sbb
xchg
arpl
jo
push
push
sbb
stos
popa
jno
push
ja
jae
sbb
inc
sarl
push
and
je
xor
iret
int3
out
ds
ret
int
popf
xchg
iret
xchg
push
test
fcmovb
arpl
lods
and
jno
cs
jg
cmp
pushf
cmp
push
addr16
or
imul
inc
adcb
jmp
mov
aaa
or
push
pop
mov
cs
adc
push
ljmp
cmp
pusha
push
xor
vpsrad
subb
mov
adc
push
cmpsl
xor
jnp
movsb
repnz
outsl
mov
adc
mov
add
jmp
jecxz
insl
imul
dec
xchg
adc
lods
or
insl
jns
xor
and
adc
mov
pop
add
add
dec
xor
adc
sub
lods
add
jecxz
mov
imul
push
fwait
add
fs
ret
scas
es
dec
inc
mov
push
popa
or
jg
add
test
shll
push
jp
add
enter
mov
push
add
sub
xor
dec
pop
outsl
inc
jno
sarb
mov
js
adc
and
or
popa
aad
scas
push
fwait
sbb
and
mov
xor
or
or
test
fcmovbe
dec
xchg
out
xor
dec
pop
lahf
sub
cmp
add
jae
lock
jecxz
push
or
xchg
push
xor
xadd
lods
inc
jmp
loope
imul
sub
gs
sub
dec
pusha
lock
and
xchg
in
and
iret
inc
add
xchg
mov
test
xchg
pop
cs
pop
push
fcomps
pop
loope
pop
add
inc
idiv
inc
sub
dec
sub
push
std
pop
and
jmp
xchg
inc
xchg
or
test
inc
mov
and
ret
add
ret
xor
cmp
repz
daa
insl
xchg
pop
cmc
jg
cwtl
cmp
das
inc
pop
ret
in
shlb
cmpsl
adc
mov
pop
sbb
jmp
scas
sub
dec
jae
dec
mov
xor
jp
sbb
lods
test
out
aam
popa
and
test
stos
xlat
stos
test
inc
add
mov
pop
scas
mov
sub
stos
inc
cmp
loop
lock
cmp
ds
xchg
mov
imul
mov
inc
movsb
pop
aam
mov
mov
add
add
sub
addb
or
pop
mov
test
xchg
sbb
fdiv
cmc
lock
data16
pop
fldl
mov
rcr
iret
xor
fwait
shrb
ljmp
and
sbb
pop
mov
ss
add
movsl
push
add
add
dec
inc
mov
jnp
inc
inc
cmp
push
fchs
mov
pop
cmp
sub
push
add
filds
je
xor
add
repz
bound
out
stos
sbb
repnz
arpl
xor
lea
fs
scas
out
lret
jo
pop
sub
icebp
popa
roll
insb
push
xor
loopne
hlt
push
test
enter
cmp
shll
push
mov
mov
sbb
add
clc
dec
mov
cmp
iret
loopne
adc
clc
test
add
fcomps
xor
pusha
sti
sub
and
add
aas
sub
ret
cmp
lods
dec
add
les
add
xchg
mov
popa
clc
ret
inc
push
mov
add
or
pop
call
lock
sbb
inc
mov
pop
push
mov
and
inc
cmp
pshufw
fldcw
icebp
sub
dec
xchg
inc
subl
jmp
out
cli
push
dec
popa
aad
aad
loope
adcl
dec
ret
jne
test
je
mov
rolb
push
or
test
cmc
or
pushf
test
adc
pusha
and
pop
std
fdivrs
xchg
lods
push
pop
add
inc
cmc
inc
or
pop
cmp
fldl
es
pop
xchg
cmp
mov
add
movsb
cmpb
cwtl
mov
shll
xlat
push
sbb
and
and
ljmp
xchg
mov
out
mov
lea
lret
sbb
sbb
or
add
nop
int3
aam
xor
cmp
test
dec
orb
or
xor
sbb
daa
sub
sbb
ret
push
add
add
mov
rolb
ja
pop
dec
aam
aad
jbe
and
int
add
rcrl
add
mov
scas
roll
xchg
dec
add
xchg
js
mov
ja
pop
cmp
push
inc
adc
xor
mov
push
cld
push
sub
insl
add
or
int3
add
lds
pop
sub
addr16
cmp
and
mov
outsb
mov
or
jg
or
popl
adcl
xorb
cwtl
pusha
js
push
xchg
pop
je
pop
push
ja
jg
or
sub
test
sub
jo
fdivl
lcall
pop
jns
or
pop
inc
imul
xchg
jl
ret
xchg
ds
data16
es
jge
in
movsl
gs
cwtl
jo
sub
dec
xor
and
outsb
and
mov
cmp
lock
into
cli
adc
cmc
iret
leave
jnp
popa
in
mov
imul
or
cmp
insl
iret
fstl
je
ret
sbb
mov
mov
xchg
inc
pop
mov
xor
iret
sbb
push
jno
adc
xchg
movsl
rolb
add
pop
in
out
and
or
out
dec
pop
mov
add
inc
xor
sbb
cmp
sub
fdivr
add
cmp
pop
pop
sti
xor
push
push
std
insb
sbb
mov
imul
fiadds
or
ret
ret
push
cmp
cmp
scas
fisubrl
cmp
popa
and
xor
scas
inc
aad
leave
add
arpl
loopne
xor
stc
dec
loope
or
and
je
push
lods
and
arpl
and
xorb
stc
leave
jge
jb
mov
push
cmp
inc
jecxz
pop
xor
shlb
jge
insl
sbbb
adc
pop
push
add
or
xor
xchg
ss
dec
cltd
push
lods
and
fldt
jbe
dec
fmulp
mov
lods
pop
fs
inc
adc
add
push
mov
les
popa
sbb
test
mov
mov
icebp
and
fcompl
mov
jnp
sbb
inc
str
dec
sbb
mov
inc
xor
xlat
add
dec
push
inc
dec
push
push
pop
lcall
jmp
and
rclb
add
addr16
cld
inc
mov
cmc
cmp
push
rorl
lret
xor
push
adc
fisubs
lds
lock
loope
in
jg
or
arpl
gs
mov
inc
fsubrl
push
push
adcb
push
rcrl
test
xchg
or
or
jl
sub
mov
add
cld
mov
push
add
xor
outsl
mov
movsb
neg
lock
pop
ret
adc
jge
fs
sahf
cmp
cmp
mov
fldt
jns
popf
lds
outsb
sub
add
pop
fwait
sub
imul
mov
fstpt
inc
rcll
mov
cmp
sub
xchg
mov
mov
dec
fs
add
stos
in
jnp
or
jb
xlat
pop
ret
mov
test
aam
int
push
add
test
jo
pop
insl
inc
cmp
jle
std
icebp
inc
and
adc
test
movsl
test
mov
inc
data16
out
push
add
daa
shll
arpl
and
sbb
or
xchg
add
adc
ret
jo
pop
in
and
js
in
mov
jo
inc
jl
mov
icebp
in
shlb
subl
shrl
mov
sbb
cmpsl
inc
fcoms
inc
pop
add
push
mov
or
repnz
lea
cmovl
mull
push
push
aam
lods
ret
leave
sub
inc
and
pop
lods
and
fwait
jo
imul
leave
fwait
mov
jp
mov
sub
add
sub
cmpsb
shlb
ror
aam
mov
cs
shrl
mov
xor
andb
iret
mov
sub
pop
jp
rcrb
mov
or
sbbb
jbe
movsb
out
pusha
adc
sub
push
mov
adc
leave
stos
cmc
mov
jmp
dec
rcl
cmp
inc
ja
xor
in
inc
cmp
adc
popf
in
sub
sahf
nop
pop
enter
lods
nop
jge
pop
sbb
add
test
cmp
xchg
aaa
push
xchg
mov
lret
jns
es
aam
mov
out
inc
fmuls
movb
js
cmp
push
loope
or
loope
idivl
sub
outsb
or
add
dec
sbb
and
xor
sahf
push
call
incl
imul
std
in
push
int3
insb
adc
pop
rcr
lcall
xchg
xchg
sub
test
mov
mov
push
bound
push
dec
sbb
popa
and
cs
inc
mov
xor
xor
cs
jle
xor
les
ja
mov
imul
mov
jno,pt
arpl
jge
xor
dec
cmpsb
jns
js
jle
cmp
sbb
jo
stos
and
into
adc
pop
pop
sub
jmp
movsl
or
or
and
mov
or
jl
fdiv
mov
shr
sub
xchg
incb
mov
es
or
out
nop
xchg
cmp
aam
add
scas
mov
and
add
sub
in
lret
add
aaa
movsb
out
mov
outsb
jp
data16
lret
loope
add
rclb
mov
xchg
mov
cmpsb
out
push
ljmp
or
sbb
ja
sahf
mov
js
dec
mov
ss
dec
test
lcall
push
enter
xlat
push
es
les
mov
cmp
jo
or
and
cld
and
inc
fsubl
call
and
mov
push
out
add
mov
jp
dec
xor
loope
outsb
xchg
imull
js
js
arpl
ss
loopne
lea
push
sub
sub
cmp
dec
sbb
lret
or
sub
dec
js
jne
scas
xor
pop
push
rcrb
lret
popf
cmp
pop
dec
xlat
cmp
inc
adc
mov
lea
sbb
dec
and
cmp
adc
xchg
icebp
and
pop
adc
les
push
push
inc
popa
inc
lods
dec
cmp
sub
sub
js
lahf
mov
in
jo
xor
addl
adc
test
movb
notb
add
lea
aaa
jl
scas
mov
add
mov
xchg
jno
ret
imul
movsb
cmpsb
outsb
fsubs
iret
cmc
ds
add
out
push
xlat
jmp
dec
sub
xorl
xchg
scas
enter
mov
in
push
adc
adc
xor
lods
jns
in
adc
fimuls
ss
orb
ret
loop
pop
cmp
sub
aaa
iret
dec
bound
cmp
cmp
or
testl
ljmp
in
mov
and
adc
pop
sub
add
sbb
add
fwait
in
mov
push
orl
dec
jmp
lea
test
es
aaa
dec
push
sub
or
sbb
ret
inc
pop
cmpsb
jbe
mov
add
aas
xchg
dec
sub
push
dec
push
imul
inc
ja
cmp
mov
sbb
lea
or
xchg
inc
or
mov
loope
fiadds
andl
push
sub
mov
int
sbb
cmpsl
dec
popa
lods
sbbb
dec
aam
pop
movsb
subb
fcoms
pop
push
pop
mov
fisubs
fisubrl
lret
and
sbb
adc
dec
jns
or
jne
sbb
xor
daa
js
add
sub
ret
mov
xor
sbb
xor
push
xor
enter
pop
ljmp
fsub
adc
pop
adc
and
and
pop
movsb
xchg
add
ds
pop
or
inc
mov
ficoml
jl
inc
mov
inc
jl
cmp
and
dec
loopne
and
test
add
aam
addr16
fsubrl
sbb
jl
add
in
call
loopne
push
jge
jo
cmp
rol
sbbl
mov
xchg
loopne
lcall
popf
cmc
dec
sbb
out
shr
xchg
push
aas
movsb
out
pop
cmp
cmp
pop
cmp
adc
dec
cmp
sbbb
daa
sub
ror
jo
shr
or
xor
dec
jo
flds
xchg
xchg
sbb
or
call
pop
sub
loopne
sbb
xchg
sbbb
sahf
arpl
push
push
mov
xor
insb
mov
movsl
or
mov
xchg
jo
les
xor
push
pop
mov
filds
sbb
outsb
pop
in
fsub
inc
jge
sbb
lahf
and
call
sub
test
xor
ss
mov
loopne
out
push
xchg
cltd
int3
fstps
mov
push
push
lods
pusha
and
hlt
popf
dec
jl
out
push
into
es
cli
dec
cmpsl
xchg
fs
movsl
vmovsldup
or
sbb
adc
xor
shr
xchg
push
lret
mov
loope
fcomip
repz
push
cltd
sub
and
lods
sbb
jo
add
es
sbbb
adc
gs
aas
mov
pop
or
sbb
xor
push
push
pop
dec
pop
cli
fbld
int3
mov
lods
jb
in
xchg
jle
sarl
out
pop
sbb
mov
cmp
incb
add
sub
add
je
aaa
je
xabort
xorl
loop
lcall
and
pop
ret
pop
hlt
nop
xor
push
pusha
xor
xchg
push
xchg
int
bound
mov
test
pop
pop
xor
adc
add
inc
mov
pusha
fsubs
push
mov
xor
adc
jno
jae
pop
jbe
jecxz
outsl
jb
out
ds
jae
adc
test
cmp
pop
cmp
fsub
je
fldt
push
pop
and
adc
adc
pop
subl
adc
sub
cmp
add
dec
sbb
mov
mov
std
sbb
add
mov
jp
je
sub
sub
add
sbb
ret
xor
loope
xchg
test
or
inc
js
int3
push
into
pusha
call
out
and
loope
daa
xor
mov
sbb
add
or
mov
das
sbb
stc
sbb
add
sbb
xchg
ja
cmp
cmp
xchg
mov
shll
xor
lods
stc
pcmpeqb
or
xor
push
aam
pop
mov
insb
daa
out
adc
mov
jle
sub
add
xor
jecxz
lods
cs
fisubrl
pusha
dec
push
jno
lea
stc
sbb
add
pusha
repnz
ljmp
jle
sbb
insl
cmp
cmp
ret
fiaddl
adc
int3
clc
inc
push
das
cmp
pop
ret
int3
std
or
mov
push
lret
ret
mov
dec
enter
mov
lock
adcb
je
add
jge
test
icebp
in
mov
add
les
loop
dec
in
adc
pop
and
push
idivl
add
push
mov
aad
inc
call
and
push
jo
fsubl
inc
inc
jmp
dec
lods
in
mov
add
sub
dec
cli
pop
and
push
jo
subl
pop
add
std
mov
inc
insb
add
ret
adc
xchg
inc
inc
cmpsb
or
xor
add
les
and
cmp
and
in
add
mov
adc
data16
jmp
sub
sub
pop
add
lods
fisttpl
pusha
sub
add
in
and
adc
inc
dec
jle
xor
jb,pn
imul
sbb
or
mov
insb
and
push
jl,pn
pop
or
sub
lret
or
push
adc
clc
ror
mov
add
call
ja
or
and
ljmp
inc
in
test
mov
push
pop
or
jp
test
push
mov
mov
sbb
sbb
push
scas
mov
fildll
cwtl
push
es
adc
xor
sbb
or
lods
xor
rcll
mov
xchg
cmp
into
mov
lcall
add
xchg
insl
cld
addr16
push
inc
xor
lods
fsubs
lods
sarb
jp
jp
fiaddl
push
call
mov
xor
ljmp
fistps
aam
cmp
loope
adc
adc
add
pop
je
das
push
cmp
mov
inc
idivl
push
lods
jae
in
xor
pop
lods
add
pop
or
push
pop
notb
in
out
test
enter
scas
or
test
out
or
arpl
jb
sarb
sbb
into
sub
push
ss
scas
push
movsb
mov
add
out
shll
cmpsb
inc
icebp
or
shrb
lea
scas
inc
pop
andb
sub
xor
pop
sbb
dec
push
and
cmp
insb
add
mov
out
pop
jne
adc
cmp
cmp
popa
jno
dec
lock
mov
scas
out
and
xchg
aaa
sbbl
jp
iret
js
add
jg
pop
mov
insb
sub
dec
lea
sarl
scas
rclb
and
cmpsb
mov
popa
lods
es
add
ds
pusha
push
les
aad
into
push
sub
adc
cmp
es
pop
jle
inc
daa
outsl
flds
mov
in
mov
dec
add
xchg
sbb
inc
add
nop
pop
dec
or
cmc
push
push
xchg
and
jp
pop
mov
scas
ficoml
inc
cmp
or
fildll
add
pop
ljmp
adc
orb
or
rorl
pop
xchg
rcrl
sbb
xor
enter
or
xchg
mov
inc
adc
adc
imul
fwait
push
fs
movsl
pop
ljmp
outsl
mov
xor
mov
out
loopne
stos
imul
lods
repz
mov
push
int
and
xor
adc
int3
stos
jb
sahf
mov
aaa
push
mov
fiadds
lea
inc
shrl
pushf
icebp
add
and
mov
cmpsl
cmpsl
mov
xchg
mov
fcomip
sub
les
fists
lea
push
mov
and
mov
inc
xchg
pushf
lea
add
jns
adc
add
xor
xchg
xor
cmp
sub
cwtl
in
sub
fs
sbb
les
sbb
test
pop
xor
xor
or
mov
cwtl
lret
jle
and
cmp
add
mov
jmp
sbb
xor
fmuls
sub
test
push
sub
push
in
enter
sub
dec
push
add
cmp
add
les
push
push
jge
jmp
dec
sbb
imul
mov
movsl
xor
iret
arpl
gs
daa
mov
sbb
ds
bound
cmp
ret
test
cmpsb
pusha
cwtl
scas
or
sbb
or
ret
add
dec
pusha
and
and
cmc
fists
inc
jp
lcall
popa
arpl
mov
sbb
xor
adc
repnz
mov
imul
dec
or
pop
fsubrs
cmova
push
and
gs
nop
or
out
inc
gs
xchg
mov
mov
cmpsl
adc
mov
mov
aaa
xchg
ret
std
inc
in
push
cld
add
mov
or
loope
rcll
sbb
jno
or
or
shlb
mov
int3
sub
sti
mov
fxch
sahf
xchg
xor
fwait
sarl
jp
jae
pop
leave
ficompl
fs
rcll
mov
pop
scas
sbb
xor
pop
jle
cmp
and
sahf
lods
add
sub
or
xchg
out
cmp
es
lea
push
sub
iret
push
sbb
add
fildl
es
bound
dec
or
adcl
lahf
add
jb
cli
ret
gs
loop
cmp
and
pop
lret
push
pushaw
or
lods
cmp
adc
mov
rcrl
pop
rol
lods
push
mov
and
js
push
add
js
push
pop
push
loopne
add
cltd
loop
sti
adc
fists
arpl
jns
jp
popf
daa
push
pop
mov
xor
mov
ljmp
int3
xor
add
test
mov
loopne
andl
loop
dec
jbe
jge
mov
enter
inc
mov
push
movsl
inc
orl
or
xchg
and
stos
xor
xchg
outsb
and
fs
xor
mov
and
pop
push
and
test
inc
aaa
mov
push
pop
enter
loope
xchg
or
jecxz
ljmp
push
pop
lods
cmp
shrd
pop
add
loop
xor
outsb
fnstenv
aas
or
sbb
and
and
mov
test
mov
add
jmp
insl
das
movsb
icebp
xor
das
call
mov
mov
or
rcr
push
popa
push
or
jl
jae
ds
adc
jno
xchg
outsl
dec
push
mov
scas
add
mov
outsl
mov
inc
mov
mov
jmp
inc
and
push
mov
xor
push
in
jge
and
pushf
es
dec
sub
neg
cwtl
push
add
out
add
enter
fwait
push
and
sub
fs
xor
aaa
nop
jbe
push
or
push
jns,pt
frstor
pop
sub
push
push
jp
add
or
faddl
xchg
out
imul
jae
lods
gs
or
scas
push
das
ret
test
movsl
data16
pop
dec
je
push
push
push
mov
sbb
and
xor
test
sub
cmp
sub
int3
cs
or
inc
stos
scas
and
mov
lods
pusha
in
inc
cmp
roll
jp
add
nop
fnstcw
mov
sub
fadd
mov
int3
sub
scas
faddl
shll
jno
pop
push
pop
arpl
outsb
out
test
roll
sub
and
imul
jl
in
fidivl
lock
push
push
rcr
ret
scas
add
int3
int3
aam
add
and
cld
clc
cwtl
arpl
dec
sarb
in
jne
dec
fwait
xchg
popf
subb
mov
test
test
test
imul
jnp
cmp
jecxz
and
and
adc
push
mov
mov
inc
cwtl
cld
add
ret
pop
mov
mov
cmovg
dec
js
ret
je
gs
xor
jno
pop
mov
push
cmp
push
mov
pop
sub
fwait
cltd
xor
adc
push
and
jb
ss
dec
imul
out
rolb
adc
aad
test
pop
mov
lret
add
add
pop
and
xchg
adc
aas
sbb
lods
add
jns
ret
mov
or
in
lret
outsl
add
mov
lea
pop
mov
aam
xchg
pop
in
scas
es
add
jl
mov
jnp
pop
cs
test
or
and
loope
popf
add
pop
xlat
lea
add
addr16
dec
or
add
aas
cmc
push
in
sar
add
jl
cmp
push
iret
ja
pop
jge
ja
or
imul
cmp
inc
cmpsb
add
scas
ds
sbb
cmp
dec
and
adc
icebp
and
aaa
push
adc
pop
or
lods
or
adc
insb
popa
imul
imul
add
dec
inc
jne
jl
xchg
cli
add
adc
arpl
daa
int
sbb
or
sbb
xor
arpl
enter
cmp
pop
mov
inc
and
add
and
ds
jbe
mov
insl
xor
adc
jge
aaa
inc
xor
ss
fbstp
add
jge
gs
fcmovnu
push
adc
in
add
ds
test
pop
dec
hlt
in
leave
xor
test
dec
shrl
dec
mov
stos
sahf
push
or
fs
add
adc
repnz
add
add
rcll
xor
mov
or
xchg
cmp
adcl
and
shll
jg
and
add
ret
fdivrl
mov
and
sbb
mov
mov
lods
or
scas
pop
into
dec
bound
fs
lods
xor
add
mov
and
rcrl
and
and
imul
loop
lea
sub
les
scas
insl
out
xor
adc
ret
sub
dec
rorb
popa
in
or
cmpsb
cltd
pop
in
cmp
xor
jecxz
popl
dec
scas
mov
psubsw
push
sbb
pop
jno
into
pop
sbb
ss
mov
fstl
pop
push
add
out
cmp
and
or
ja
std
js
pop
pop
cmpb
lds
outsb
cmp
mov
xchg
loop
bswap
test
mov
sbbb
inc
mov
jae
push
jge
js
mov
sbb
xchg
push
push
sbb
cmp
rcrl
mov
pop
test
xchg
jg
cmc
push
jnp
fldl
and
xor
cmp
mov
nop
inc
scas
outsb
pusha
add
and
clc
sbb
and
bound
xor
and
lods
xor
add
daa
out
and
out
xchg
pop
cmp
imull
dec
mov
in
xchg
push
xor
outsl
cwtl
xchg
push
pop
pop
in
arpl
lods
mov
in
lea
lods
sub
or
scas
dec
mov
fmull
shll
in
scas
inc
stc
pusha
push
push
incb
stos
and
add
stos
cmp
inc
xchg
cli
in
xchg
fsubrs
mov
gs
loope
xchg
jmp
jno
shrb
lods
push
sub
and
cs
mov
shl
xchg
int3
push
inc
dec
cmp
das
cmpsl
out
lret
aad
in
adc
sarl
inc
test
aam
xor
or
in
lds
in
mov
pusha
adc
xor
in
adc
call
in
dec
jae
sarl
inc
cs
pop
pop
lea
sti
popa
push
sbb
sub
xor
sub
adc
cwtl
dec
or
int
inc
jne
add
sub
cmp
xchg
jmp
inc
out
sub
push
xchg
push
and
or
and
push
xor
hlt
sub
push
cmp
lea
push
sub
rcrb
mov
and
mov
ret
and
lret
mov
sub
or
pop
icebp
outsb
roll
sub
test
and
addl
or
xor
or
or
lock
adc
xchg
shlb
mov
add
sub
rorl
jmp
cmp
lods
or
je
xchg
adc
outsl
popa
push
fisubrs
or
jns
fnstcw
icebp
mov
push
mov
xor
call
mov
ss
lahf
roll
movsl
dec
push
mov
sub
push
jno
jno
loope
pop
cltd
fsub
sbb
shrl
and
and
in
out
and
popf
fs
sub
jl
jae
filds
dec
xchg
xchg
push
inc
mov
or
and
push
nop
jbe
jno
add
iret
test
cmp
imul
or
jecxz
rep
pop
inc
pusha
ljmp
rcrl
rcll
sbb
add
mov
mov
inc
aad
cmpsb
adcb
xor
bound
test
adc
cmp
sbb
ffreep
jo
adc
add
aas
push
ds
sub
frstor
iret
loopne
sub
loop
mov
adc
lahf
and
pop
out
add
lahf
je
rcll
and
xor
xchg
adc
pop
sub
pop
or
inc
xchg
test
jbe
neg
int
xchg
pop
inc
or
and
xor
mov
mov
and
or
add
push
inc
inc
movsb
or
or
pop
dec
test
inc
nop
lret
mov
cmc
mov
sub
lea
mov
rcrb
faddl
enter
pop
aam
popf
cltd
rorb
loope
leave
sbb
sub
das
push
adc
sbb
rcr
adc
call
mov
add
repz
mov
fnstenv
or
and
add
sub
fiaddl
jl
xchg
popa
adc
cmp
out
pop
lahf
aam
xor
mov
sub
add
mov
cmp
sub
js
jne
stc
push
imul
roll
fndisi(8087
roll
cmpsb
adc
mov
lods
arpl
movsb
loope
loope
sarl
ret
dec
xchg
sbb
bound
jo
icebp
test
cmp
psubsw
data16
cld
cmp
xor
sbb
loope
icebp
push
and
sbb
xchg
sbb
aad
dec
test
xor
addb
out
push
mov
pop
lds
mov
push
imull
sbb
jp
ret
add
sbb
mov
iret
sub
mov
les
in
popa
or
cmpsb
and
dec
xchg
mov
mov
test
xor
loope
and
subb
mov
es
push
jb
lcall
mov
inc
add
dec
js
mov
test
and
repnz
call
std
sbb
psrld
clc
popa
mov
cmpsl
sbb
addl
mov
add
pusha
xor
dec
mov
repz
je
add
or
addl
mov
inc
xchg
or
and
and
mov
stos
fsubl
lods
xchg
mov
shlb
test
jne
cmc
mov
sti
add
mov
xchg
out
cmpsl
push
fsubrs
and
mov
jbe
ret
mov
mov
loope
push
sbb
mov
push
cltd
jo
movsl
test
add
std
in
fiadds
rcr
fisttpll
mov
jne
jno
dec
pop
xorl
sbb
fs
nop
jp
hlt
jo
sbb
clc
jbe
push
mov
inc
cmpsl
and
test
sbb
sbb
pop
cmpsb
out
movd
call
or
jmp
fldt
push
psrld
mov
xor
out
push
sub
xor
lret
inc
insb
jnp
lds
adc
out
fs
popa
xchg
xchg
imul
jno
mov
mov
ret
mov
pop
divl
xchg
pop
dec
inc
shll
cmp
mov
add
add
arpl
sbb
gs
movl
insb
mov
adc
sbb
adc
xor
int
iret
pop
xor
cmc
cmpsb
rolb
dec
sub
data16
xchg
push
sub
mov
add
cmp
rolb
ret
push
xchg
or
sbb
ds
aam
daa
cmpsb
lret
orl
cmp
dec
cmp
insb
push
xor
xchg
add
xor
adc
pop
and
stos
aas
ret
in
stos
pop
rcr
clc
sub
jle
insl
sub
stc
lcall
dec
sahf
pop
pop
cmc
or
mov
bound
adcb
add
add
aaa
repz
jo
int3
popf
add
je
jo
pop
repz
inc
fistpl
adc
sbb
daa
jb
add
and
das
enter
sub
add
mov
sub
pop
push
loopne
fxch
xchg
inc
push
call
mov
rcr
outsl
jb
or
fsubrs
ret
or
sub
int
sbb
mov
pop
adc
mov
fmull
add
or
xor
inc
scas
dec
add
inc
cwtl
inc
add
out
int
lds
popa
sti
mov
scas
iret
sub
test
stos
sbb
movsb
nop
js
add
jb
adc
test
cmp
in
jmp
rcrl
daa
mov
pop
mov
adc
das
test
cmp
mov
adc
mov
aad
push
sub
ja
jo
mov
lea
push
lock
loopne
jne
pop
push
jge
adc
jecxz
push
pushf
mov
xchg
and
daa
mov
aam
dec
in
roll
lds
push
adc
insl
jne
pop
cmp
int3
sbb
dec
jbe
dec
test
aad
test
push
mov
lahf
rsm
sub
mov
shl
pop
push
aam
dec
add
cmpsl
xor
pop
popf
ret
pop
call
call
inc
xor
or
jbe
sbb
add
dec
fstpl
inc
lods
sbbb
filds
je
pop
inc
adc
push
fwait
ret
xlat
jnp
xchg
into
mov
or
add
insb
and
push
cmp
sub
or
stos
jb
movsb
insb
pop
mov
jle
pusha
dec
mov
push
push
lret
pop
mov
jo
xchg
pop
inc
int
jb
pop
and
js
test
push
mov
inc
inc
add
popa
nop
cmp
clc
mov
and
repnz
inc
jb
dec
fadd
inc
scas
jns
and
adc
fistps
and
mov
mov
dec
dec
or
sub
and
jmp
or
xchg
ret
arpl
fnsave
jb
or
js
dec
fcmovu
push
sbb
pop
loopne
lods
decl
pop
mov
push
scas
and
stos
out
mov
jne
add
inc
cmpsl
push
stos
cli
test
xchg
lds
inc
mov
push
mov
xor
test
sub
ss
mov
pop
lret
xor
fisttps
aam
mov
push
dec
mov
push
xchg
xor
sub
incb
mov
jmp
inc
add
jp
add
lods
inc
or
push
push
dec
jp
fldcw
pop
ret
int
fs
ret
clc
fisubrl
out
std
sbb
and
cmp
dec
pop
push
sbb
mov
sbb
rolb
inc
inc
sbb
mov
popa
add
push
shll
push
es
or
enter
nop
mov
xchg
out
and
jmp
sub
lods
out
xchg
xchg
subl
mov
rolb
mov
jno
fs
js
fadds
test
in
push
or
push
pop
push
sahf
jno
aad
test
loope
jno
roll
pmaddwd
ret
lahf
outsb
push
xchg
xor
xchg
dec
pusha
pushf
add
mov
hlt
sub
xlat
xchg
sub
add
ffree
in
std
xchg
pop
aaa
insl
cmc
in
pop
add
add
cmp
sub
jns
lds
pop
insl
cmp
jl
push
ds
fldcw
lret
imul
push
stc
std
outsl
icebp
lock
push
cwtl
js
mov
mov
and
or
jge
ljmp
and
dec
pop
push
mov
rclb
and
imul
xchg
push
rolb
sbb
pop
ja
and
jnp
push
hlt
push
push
xor
lret
inc
stos
and
popf
pop
out
popa
sbb
mov
xor
add
or
xchg
jl
out
cmp
mov
sub
getsec
ds
ja
iret
jl,pt
add
sbb
in
adc
adc
lret
shr
fnstsw
and
adc
inc
inc
test
xchg
lods
dec
sbb
sub
adc
test
mov
icebp
cli
add
add
mov
fs
push
cmp
aaa
push
out
pop
jo
ror
sbb
shrb
sub
cs
sbb
pop
mov
or
and
fcmovnu
sbb
xor
jo
dec
sahf
xchg
cli
movsb
xchg
mov
pusha
es
mov
adc
in
aam
pop
pop
pop
lret
popa
movsb
lret
push
imul
mov
or
mov
sbb
inc
sbb
mov
stos
add
jo
pop
lcall
xorl
cmp
nop
in
ds
ret
or
ds
rcrb
adc
xor
pop
mov
jp
dec
adc
sbb
sbb
inc
cmp
adcl
push
adc
outsl
mov
lcall
jno
dec
dec
loope
imul
xlat
das
xor
ja
fnstsw
out
mov
add
stos
dec
add
sbb
fsubrs
fnstsw
xchg
add
mov
out
jo
cli
lcall
push
cld
aaa
inc
scas
xor
jnp
mov
pop
jno
mov
pop
stos
out
icebp
aas
sbb
sbb
mov
cmp
mov
sub
lods
cli
mov
mov
inc
xchg
dec
mov
movsb
push
fcoms
mov
ljmp
xor
fstpt
test
sbb
dec
push
pop
dec
sbb
push
popf
sbb
push
dec
and
xor
mov
shlb
imul
scas
lcall
sbb
xor
aam
adc
lods
push
push
outsb
jge
out
adc
test
popf
shl
lcall
cwtl
dec
adc
int3
rolb
je
or
aas
jl
pop
push
sbb
xchg
inc
js
xchg
xchg
dec
movsb
jg
add
xor
push
or
xor
rcrl
sub
mul
out
arpl
into
mov
test
xchg
jmp
push
cmpsl
pop
scas
add
iret
pop
jae
loopne
iret
push
or
mov
mov
mov
dec
mov
inc
adc
scas
sarb
xor
or
lods
push
add
or
data16
ret
lahf
ret
out
out
or
cs
pop
jo
adc
mov
ljmp
sub
movsl
cmpb
inc
xor
push
or
pop
xchg
mov
push
sti
cmp
cmp
pop
shll
nop
jle
clc
jg
xor
cmp
push
xlat
arpl
sti
inc
xchg
push
sbb
xchg
xor
cltd
out
sbb
ret
and
popw
js
add
outsb
add
faddp
or
sub
imul
mov
test
ds
shr
fdivs
push
xchg
mov
or
mov
adc
xchg
adc
add
int
fadds
int3
call
fadds
jo
sbbl
cmp
jmp
inc
cmp
mov
mov
insl
mov
sarl
ss
pop
and
sub
js
je
adc
data16
insl
call
jp
fistpll
add
cltd
cmp
jmp
mov
test
nop
daa
ret
jmp
test
ljmp
push
cmpsl
mov
sub
and
add
mov
popa
mov
mov
imul
mov
sub
add
mov
lahf
mov
cmp
lea
or
xchg
pop
or
push
and
xor
mov
enter
pushf
js
inc
outsb
xchg
add
jo
out
mov
fisubrl
std
jo
pusha
add
arpl
adc
neg
nop
sbb
mov
push
ja
add
and
xchg
xor
sub
das
and
dec
daa
xor
in
jge
add
xor
popa
int
and
or
fildl
xor
add
sbb
adc
lahf
cmp
sbb
outsb
jne
jecxz
lahf
jo
shl
pop
stos
jo
ss
adcb
popf
sbbb
add
xor
lods
jmp
or
push
pusha
imul
out
dec
adcb
cld
xor
outsl
or
hlt
leave
cmpsb
sub
push
shlb
push
push
mov
ja
fidivrl
jns
inc
fldl
iret
shlb
mov
dec
mov
fldcw
jmp
jmp
call
lods
cmp
push
fcmovne
loope
push
movsl
int3
cmc
jp
outsl
add
jno
add
push
and
and
sub
xchg
inc
aas
xor
and
or
or
movsb
lods
adc
xchg
sub
mov
je
outsl
mov
sub
or
iret
fisttps
and
sbb
fldl
rcr
ja
cs
cmp
das
loope
and
add
cmp
bound
icebp
lahf
xor
and
loope
add
push
mov
jo
xchg
xchg
int3
aam
jl
rclb
add
jo
loope
mov
inc
xchg
or
inc
pop
inc
dec
stos
add
rclb
add
ds
andb
add
inc
cmp
movsb
rcl
aas
sbb
dec
xor
xchg
pop
fs
pop
hlt
mov
lds
xchg
shlb
xchg
leave
lret
js
push
mov
push
push
dec
push
outsb
and
sbbl
push
cwtl
xchg
adc
mov
movsl
xchg
cmp
jecxz
add
sub
push
and
orb
cmpsl
pop
sbb
push
dec
out
lods
pop
or
jno
enter
iret
gs
roll
jno
sbb
sbbl
sbb
out
add
mov
daa
cmpsl
aad
jo
and
js
test
in
add
add
push
jecxz
daa
mov
cmpsb
loop
xor
int
in
dec
mov
push
inc
stos
push
pop
ror
adc
fistpl
sub
add
push
in
pushf
or
mov
add
add
popa
sub
mov
add
scas
scas
pop
or
dec
test
and
fiadds
sbb
dec
dec
cli
add
mov
roll
addr16
add
inc
jbe
repz
dec
test
cmpl
sub
into
mov
add
lds
jno
adc
flds
sub
jp
cmp
mov
mov
xchg
and
jns
pusha
and
add
sbb
sbb
mov
sbb
cmp
and
xor
push
popa
lods
jno
xchg
cmpsl
or
dec
xorl
int
cwtl
add
add
jo
rcr
test
in
xchg
push
and
stos
jl
pop
aas
pop
pop
push
shll
fsubp
dec
push
mov
ds
or
jae
mov
cmp
aaa
scas
das
jo
xchg
adc
sub
push
sbb
or
or
inc
or
addr16
cli
in
push
rorl
and
cli
push
xchg
in
cmp
xor
adc
xchg
aam
repz
cmp
insb
fwait
ja
jo
push
xchg
mov
les
outsb
push
add
push
dec
bound
fwait
pushf
andl
fcmovnu
repz
or
sbb
push
imul
ret
cmp
sbb
push
push
es
cmpsl
gs
jno
add
mov
shll
clc
es
pop
movsb
push
stos
push
movsl
or
sbb
mov
push
ss
cmp
mov
clc
sbbl
inc
icebp
loope
sub
repnz
cmp
jecxz
into
add
adc
pop
ljmp
sub
adc
cltd
xchg
mov
adc
push
loop
dec
loopne
add
int3
cltd
pop
sub
psllw
xchg
sub
prefetchwt1
outsl
add
frstor
loopne
sub
cltd
or
arpl
test
sbb
repnz
push
nop
push
daa
adc
dec
arpl
sub
pop
inc
iret
pop
pop
pusha
movsl
imull
jecxz
shl
out
out
xor
or
test
sbb
dec
aam
pop
inc
or
push
dec
or
filds
xchg
inc
inc
sbb
push
dec
sub
lahf
sbb
sbb
mov
dec
outsb
dec
out
addr16
mov
and
and
cs
xlat
inc
sbb
adc
rclb
js
enter
scas
pop
or
fidivrs
loope
mov
or
mov
ja
js
lods
lahf
mov
push
or
inc
pop
out
mov
adc
add
or
push
dec
mov
push
imul
outsb
add
pop
jl
and
es
test
push
arpl
and
ss
and
call
mov
mov
add
or
mov
jecxz
push
inc
xor
sbbb
punpckhdq
inc
das
imul
ret
pusha
xchg
xorb
mov
fsub
cs
subl
cmp
stos
fidivl
movsb
movsb
xor
mov
clc
pop
mov
mov
scas
aas
fs
mov
push
mov
xchg
into
xor
test
pop
push
test
pop
enter
enter
aaa
push
sub
enter
enter
xor
xchg
add
jl
dec
xor
sbb
ds
cmp
shlb
sbb
lret
ljmp
cmp
pop
sbbb
push
add
or
cwtl
adc
mov
add
in
or
loope
das
xor
mov
and
and
jecxz
xor
loope
xlat
pop
rolb
adc
mov
or
mov
shll
push
dec
mov
out
jge
lods
hlt
sub
jo
movsb
aam
sbb
mov
pop
sub
jnp
xchg
jp
xchg
add
inc
or
movsl
aas
push
pop
lret
xor
hlt
adc
cwtl
pushf
and
add
fildl
fs
mov
lds
mov
pusha
mov
lcall
sbb
cmp
cmc
sub
shlb
subb
rorb
push
aas
insb
movsb
dec
pusha
imul
cli
out
fwait
mov
fnstcw
sarl
pushf
and
ret
or
jb
dec
mov
push
add
es
and
lret
ret
aam
testl
xor
sbb
jo
in
rclb
add
cmp
and
in
ja
mov
popa
xor
jecxz
fstps
arpl
xor
je
popf
sub
xlat
dec
or
push
fidivl
sub
and
lahf
das
js
xor
mov
cmp
sbb
stos
fcoms
ss
lods
int3
jns
rcll
insl
or
in
and
xlat
or
inc
ljmp
xchg
jecxz
andb
pop
gs
xor
dec
daa
jnp
mov
lret
and
cmp
fwait
jmp
xchg
push
ret
adc
std
adc
xor
and
jb
adc
or
cs
inc
sbb
sbb
sbbb
or
inc
add
fdivs
mov
xor
dec
xchg
movsl
xor
jne
add
pop
mov
inc
fidivl
adc
adc
push
jne
fisubl
sub
ret
fsubs
lods
imul
add
mov
je
pop
test
mov
in
in
shrb
and
or
popa
enter
adcl
mov
testl
add
mov
addr16
jge
clc
ret
cli
cs
mov
mov
push
push
jl
inc
mov
sbb
add
je
mov
imul
or
ret
test
jne
and
outsb
arpl
fwait
movsl
adc
shl
lret
std
push
jnp
xlat
mov
dec
xchg
fs
pushf
mov
xchg
popf
dec
xchg
lods
mov
shlb
imul
movsb
lahf
push
lods
adc
pop
add
sarl
pop
jecxz
ss
mov
in
ret
ret
jp
in
and
add
faddp
lods
sub
add
lds
iret
adc
sbb
loopne
je
lock
or
sbb
or
roll
adc
add
ja
inc
hlt
leave
fstpt
pop
dec
fwait
add
nop
adc
stos
iret
xor
dec
jg
test
test
xchg
cltd
or
sbb
in
add
in
iret
cmc
movsl
dec
and
sub
fcoms
icebp
and
les
roll
inc
push
add
lds
jns
lds
push
add
adc
push
das
mov
push
lods
jae
scas
add
add
rorb
add
jmp
push
sub
or
inc
xchg
inc
sub
popa
aaa
popa
adc
pop
sub
lahf
cmp
aam
pop
jp
shll
cmp
inc
xchg
test
sub
pop
test
test
pusha
jge
dec
inc
xor
mov
pop
movsb
loope
aam
pop
lcall
sbb
testl
inc
dec
dec
mov
sbb
dec
int3
insb
mov
and
or
rcrb
les
adcb
jns
lahf
pop
sbb
jo
cli
fs
iret
movsb
lods
fs
add
imul
outsl
and
cmp
paddusb
insl
ss
popf
outsb
jb
adc
mov
movsb
push
lret
add
push
or
adc
adc
cmp
sbb
cmc
rclb
and
xchg
lds
and
xchg
sbb
test
and
lcall
ja
imul
and
es
call
pop
jp
or
and
and
cmpsl
scas
mov
or
or
sbb
jmp
lret
scas
imul
and
jecxz
out
dec
popf
sub
xor
xlat
cwtl
jo
mov
js
sub
sbb
mov
int3
mov
stc
add
sahf
repnz
add
xor
ljmp
jbe
sub
inc
inc
xor
lret
inc
jno
insl
adc
push
sbb
inc
ljmp
xor
movsb
push
les
fdivs
mov
dec
dec
jns
fildl
xchg
rcr
out
sbb
daa
sub
xor
xor
cmp
push
cmp
movsb
inc
outsl
sub
pop
xchg
cwtl
inc
insl
push
mov
mov
dec
lret
adc
sbb
xlat
mov
mov
ds
dec
xchg
mov
sub
test
jge
push
insl
inc
stos
mov
push
lods
push
mov
adc
pusha
lea
cmp
jp
pop
scas
outsl
push
lock
cli
inc
add
sbb
lret
bound
outsb
into
outsl
sbb
xchg
sub
das
push
push
outsb
movsb
sub
add
or
push
aaa
add
loop
dec
sbb
sahf
pushl
mov
outsb
add
into
push
sbb
sbb
dec
sbb
addr16
cmp
js
xchg
and
mov
push
dec
or
adc
loopne
repnz
adc
cs
imul
xchg
inc
mov
cmp
pop
adc
push
bound
rclb
bound
add
in
cld
add
inc
sub
xchg
or
or
bound
aad
xor
cs
add
repz
push
stc
fiadds
stos
add
mov
mov
add
xor
pop
pop
inc
cmp
mov
div
jle
aaa
adc
dec
arpl
push
add
outsb
ret
sbb
lods
cmp
bound
jl
ds
pop
stos
es
or
jbe
cs
fldl2e
push
hlt
inc
add
and
cs
mov
iret
dec
sub
add
add
inc
repz
test
jmp
mov
fildl
xor
and
stos
dec
dec
test
pop
std
pop
add
sub
adc
dec
scas
popf
add
loope
push
mov
xchg
add
pop
pop
cli
in
sub
add
int3
insb
pop
dec
or
int
or
add
push
add
int3
jmp
inc
lret
or
faddp
pop
push
or
push
mov
add
loopne
roll
rcl
rol
or
popf
les
shll
clc
add
repnz
push
add
leave
addb
or
int3
push
jo
push
std
push
adc
sbb
add
inc
lret
mov
sub
ret
stc
add
fsubl
add
or
imul
push
fldlg2
mov
push
push
imul
add
add
dec
dec
test
or
inc
pop
adc
adc
test
jbe
sbb
add
sbb
mov
popa
nop
fnstsw
push
inc
fildll
jmp
ds
xchg
lret
sub
ljmp
and
jl,pn
cmc
dec
mov
lock
fcomi
stc
pop
clc
or
add
pop
mov
fmull
lret
push
and
adc
push
shlb
and
nop
mov
add
jbe
inc
divb
inc
fs
mov
push
mov
adc
mov
xchg
mov
mov
loope
adc
cmp
add
cmp
xchg
sbb
mov
adc
add
cmc
orb
dec
rorb
mov
add
insb
addb
dec
adc
add
fadds
mov
add
gs
stos
scas
or
pop
rcrb
dec
or
add
pop
push
and
loopne
jecxz
and
jo
fldl
pop
cwtl
mov
psubb
js
or
mov
mov
rolb
hlt
addb
daa
xor
mov
nop
movsb
push
into
sbb
push
inc
mov
add
or
sub
ret
ret
add
pop
mov
shlb
aas
mov
in
push
adc
xchg
mov
sub
cmpsb
cmpsb
aaa
xlat
or
jb
add
xor
dec
push
fs
mov
xchg
dec
xor
mov
dec
push
and
sahf
rorb
nop
mov
and
mov
aad
sub
pop
gs
xor
mov
ret
xor
xor
test
and
addl
inc
aas
test
add
sub
xchg
mov
lret
pop
or
fldenv
ja
sbb
and
das
pop
movsb
aad
hlt
xchg
mov
or
or
mov
jecxz
inc
ljmp
jg
pop
pop
xchg
mov
sbb
sub
icebp
cmpsl
sub
in
add
outsl
adc
lods
test
and
movsl
lds
cmpsl
js
rolb
aad
mov
rcll
shlb
sbb
pop
fistpl
ds
fstl
out
mov
cs
push
test
mov
sbb
push
rorb
push
ja
sub
adcl
loope
add
lods
cmp
fwait
add
or
xchg
push
gs
fimull
lcall
cmp
push
lods
ror
data16
push
push
test
gs
lret
loop
or
add
push
mov
icebp
pop
jbe
or
iret
mov
push
loopne
dec
cmp
loopne
outsl
and
mov
popa
gs
mov
cmp
adc
inc
jmp
mov
jnp
xchg
frstor
mov
mov
add
in
add
lret
test
adc
loop
add
das
pop
jns
pop
dec
mov
scas
scas
js
add
add
or
and
push
gs
subl
adc
cmc
aam
aad
rep
lods
das
sbb
adc
lock
pop
adc
xchg
popf
xchg
jp
cmp
outsb
inc
fmul
imul
cmp
mov
popf
dec
ljmp
movsb
xor
fmul
adc
shl
out
jne
cld
add
data16
add
cmpsb
and
or
xor
sbb
mov
inc
aad
sub
pop
dec
enter
and
push
imul
dec
aam
loopne
ret
loope
mov
int3
add
pop
andb
andb
mov
jmp
sahf
dec
jne
nop
adc
pusha
add
out
je
mov
mov
dec
call
lret
add
cmpsl
push
fisubl
mov
leave
adc
sbb
jmp
sbb
dec
and
add
fadds
stos
add
sub
cmp
pusha
inc
cmp
shr
sbb
pop
sub
and
mov
insl
jns
inc
out
sub
in
and
ljmp
sbb
pop
daa
sub
sub
and
loop
shlb
rcrb
into
mov
jg
mov
sub
mov
adc
cmp
aaa
daa
jle
add
stos
pushf
cmpsb
xchg
sbb
pop
add
aaa
jne
jno
dec
dec
push
cwtl
in
cmpsb
inc
push
jns
daa
push
mov
cmp
sub
sbb
pop
and
mov
sbb
jo
pop
cmp
jp
sbb
leave
adc
push
adcl
dec
or
sbb
ficomps
into
xchg
loope
cs
insl
ret
test
fs
orl
and
or
aaa
pop
pop
rclb
daa
add
shrl
push
cmp
push
ss
scas
jne
push
dec
shlb
jmp
pop
int3
ror
rcl
call
cmp
ficompl
je
imul
add
add
sub
movb
outsb
jnp
sbb
pop
fidivl
add
sbb
shlb
push
cmp
cli
add
fimull
sbb
inc
sub
pushf
mov
int3
adcb
add
mov
loopne
fldl
das
pop
mov
aad
sub
push
mov
add
xlat
xor
jp
push
add
adc
mov
out
inc
pop
sbb
dec
frstor
aaa
leave
xchg
push
add
std
push
push
add
movsb
ss
or
inc
pushf
clc
movsl
mov
sub
mov
imul
icebp
int3
mov
scas
lock
jns
sbb
clc
andl
sub
fidivs
cmp
cmp
js
mov
adc
inc
add
imul
in
in
jo
push
mov
xchg
mov
hlt
mov
or
cmpl
mov
xor
fldl
fisttps
lret
pop
loope
sbbl
mov
and
je
jp
pop
lret
xchg
mov
push
enter
lods
push
mov
mov
popa
stos
test
cmp
add
popf
arpl
dec
xlat
fmull
sarb
aam
mov
jno
imul
dec
and
dec
aas
subl
xor
insb
push
int3
rorb
and
or
xor
or
xchg
push
add
loopne
or
loopne
adcb
cmp
ja
or
daa
orb
movb
push
lea
lods
fbstp
add
mov
mov
and
adc
mov
and
sub
cmp
push
and
add
in
pop
lcall
daa
sbb
push
jb
add
inc
cmp
mov
cmp
jecxz
mov
push
lcall
int
cmp
int3
and
inc
ss
pop
imul
cmp
out
sub
insl
das
add
sarb
jbe
lea
clc
int
push
add
leave
add
out
sbb
in
xchg
adc
enter
cwtl
pop
mov
and
push
mov
mov
jmp
pop
lret
fld
and
imul
leave
rclb
sahf
out
or
pop
addr16
dec
sub
jno
lods
xchg
add
arpl
loope
lods
fwait
int3
rcrl
and
xor
insb
pop
jne
jmp
mov
sarb
and
mov
mov
inc
jecxz
mov
and
push
push
sub
in
jne
fmulp
stos
jmp
sbb
push
leave
mov
mov
add
hlt
insl
pop
sahf
mov
ret
jecxz
pop
fildll
cmc
mov
and
pop
dec
insl
shlb
pop
loopne
xchg
and
cmp
add
gs
xchg
test
add
jns
adc
add
xchg
mov
mov
jge
cmp
lret
xchg
sbb
add
add
push
push
sbb
loopne
les
push
mov
dec
pop
sub
add
jecxz
mov
mov
pop
sub
pop
inc
lods
mov
pop
mov
mov
mov
add
lea
arpl
mov
pop
int3
in
and
xor
and
push
sub
fdivl
and
pop
xchg
roll
movhps
dec
addr16
add
or
cs
call
adc
filds
pushf
pop
add
inc
stos
add
adc
inc
mov
sbb
mov
adc
sar
js
cmc
dec
loopne
mov
push
sub
add
leave
inc
or
dec
pop
rolb
adc
nop
aaa
push
adc
test
ret
in
push
pop
cmpb
aaa
inc
add
aam
inc
add
xor
call
pop
jbe
cs
xchg
cmp
nop
mov
ss
das
cmc
and
mov
aad
push
gs
push
sbb
lods
pop
lret
dec
lods
xor
adc
pop
dec
jo
loopne
sbb
push
add
lret
add
les
add
cmp
adc
pop
lods
aam
shl
add
dec
sbb
mov
push
cmp
in
je
ja
add
pusha
push
repz
and
mov
sbb
andl
cs
mov
push
pcmpgtb
inc
movsb
ret
stos
adc
dec
pop
mov
mov
add
mov
jno
add
push
movsb
cmp
push
lods
jnp
jg
orb
sbb
ja
test
push
daa
and
orl
out
sahf
pop
pop
add
test
data16
pop
andl
cmc
insb
sbb
shll
jmp
jno
test
xor
inc
mov
dec
in
rcll
add
lret
or
dec
cmp
adcb
loopne
add
lahf
cmpsb
jle
aam
xchg
mov
movb
iret
push
loopne
lret
mov
nop
sub
dec
add
das
lahf
or
pusha
cmp
jl
sbb
dec
adc
cmp
scas
inc
jl
outsl
in
mov
negb
loopne
fs
adc
push
in
out
je
and
fldt
inc
stc
jo
ret
aaa
sub
push
cmp
stos
js
pop
aaa
sbb
test
jmp
adc
pop
daa
or
add
sbbl
icebp
icebp
lock
fldcw
adc
cmp
sahf
pop
inc
leave
add
cltd
sbb
out
inc
unpcklps
inc
inc
or
mov
push
lea
dec
leave
dec
loop
add
and
inc
rol
addr16
sbb
loop
repz
mov
push
das
mov
sti
add
or
sub
xchg
mov
mov
push
mov
mov
sub
stos
or
mov
xchg
inc
inc
ljmp
push
sarl
sub
loopne
sub
shll
lods
inc
mov
movsb
pop
mov
jb
mov
leave
test
inc
add
pusha
pop
and
sarl
mov
ret
xor
inc
arpl
out
pop
dec
xchg
xchg
lret
cli
or
aaa
and
xor
ds
rcrb
or
dec
add
push
popa
mov
ljmp
inc
gs
shrb
and
or
shlb
or
popf
cli
adc
pop
jle
cltd
call
inc
pop
add
iret
lods
push
sbb
xor
data16
lret
imul
rol
push
mov
xor
fldcw
bound
jo
sub
sub
nop
jle
andl
jo
push
into
lcall
pop
push
jl
mov
xchg
jae
jg
pop
pop
adc
ficoms
or
inc
or
test
xchg
ror
test
adc
pop
sub
and
mov
rcrl
pop
and
int
daa
cmpsl
xchg
xor
lret
int3
sub
sub
jns
adc
jae
adc
dec
loope
mov
enter
mov
out
xlat
add
jbe
mov
cmp
aaa
ljmp
cmp
iret
movsl
cmp
cmpsl
mov
adc
sbb
inc
popa
iret
outsl
test
ljmp
adc
testb
add
dec
mov
jmp
sti
mov
cltd
scas
inc
sub
jae
les
xlat
cld
pop
cmc
int3
jp
xor
dec
fmull
and
out
insl
cmp
inc
js
sub
mov
fisubl
mov
test
cltd
xor
add
xor
into
push
adc
cmpsb
fsubl
jb
or
clts
sub
sti
lret
rorb
je
inc
cmp
test
pop
xchg
xor
mov
pop
cld
pop
iret
xchg
inc
in
adc
sbb
push
dec
sbb
mov
sub
movsl
aas
dec
movsb
loope
xchg
xchg
xor
popf
aas
ret
add
ja
imul
je
hlt
or
sbb
ss
loopne
sbb
sbb
push
inc
mov
jmp
xchg
sbb
mov
sub
dec
loope
loope
loop
call
rolb
sbb
jb
scas
jbe
loope
lea
cmp
enter
dec
push
jle
and
fldt
lods
pop
jmp
mov
and
pushf
xchg
sub
and
hlt
loope
shrl
mov
and
sub
hlt
inc
sbb
ret
or
sbb
add
sub
pop
fcmovu
mov
add
xchg
movsl
xlat
packuswb
pop
divl
imulb
dec
and
out
je
stos
sbb
sub
or
mov
fwait
push
push
push
sub
dec
mov
and
sbb
xor
adc
xor
add
pusha
xlat
dec
jecxz
dec
adc
aas
es
roll
addr16
jmp
rolb
mov
lods
adc
jge
jge
test
mov
mov
sbb
div
icebp
bound
fs
mov
jg
cs
addl
test
add
inc
sub
xchg
cltd
or
sub
test
loopne
ret
fstps
mov
xchg
add
fs
and
xchg
sar
insb
sub
and
and
cmc
or
xor
es
test
add
lret
xor
and
push
xchg
cmp
inc
cmp
cmp
jne
in
or
adc
and
add
pop
dec
add
sbb
fmull
sub
sbb
ror
sbb
sbb
mov
test
adc
mov
hlt
adc
adc
xor
ficomps
xor
iret
lea
mov
sbb
xor
xor
out
rorl
int
dec
call
xor
ljmp
xchg
pop
xlat
add
out
push
mov
xchg
lods
jecxz
test
push
adc
pop
js
cmp
fnstcw
leave
sbb
xchg
repz
es
jmp
xchg
stos
js
jmp
dec
loope
xchg
dec
push
sbb
loope
cmp
dec
loop
mov
imul
je
sti
cmc
xchg
popf
and
xor
lock
jo
mov
sbb
cmp
cmp
lds
gs
add
jmp
push
add
sbb
loopne
mov
ret
push
into
pusha
and
sub
movsb
pop
pusha
int3
mov
inc
stos
icebp
dec
add
into
dec
or
outsb
add
cmpsl
shll
into
or
xor
xor
mov
jg
mov
js
jge
or
sbb
aas
fs
xor
and
cs
and
push
call
push
adcb
push
inc
push
xor
sub
std
push
fsubp
or
fisttpll
movsl
xchg
fcmovnb
and
push
and
pop
adcb
ffree
xor
ss
xor
call
jnp
shrl
adc
and
movl
cmp
sbb
cltd
lock
sarb
dec
mov
lret
or
out
les
in
fdiv
shl
fnsave
lock
orb
int3
push
sarb
movsb
sbb
push
ret
push
xor
jecxz
shrb
rclb
ds
lock
jmp
scas
movsb
loope
outsl
add
or
xchg
push
mov
inc
xchg
fisttps
push
in
mov
xchg
outsl
arpl
xchg
push
js
or
and
in
cmc
mov
ret
mov
lods
and
push
or
loope,pn
pop
xor
push
sbb
jo
sub
dec
dec
mov
out
loopne
pusha
push
adc
cmc
test
pop
stc
and
push
ret
push
sub
ret
or
decb
and
adc
pusha
aaa
mov
loop
push
adcl
out
inc
mov
mov
pop
inc
imul
ficoml
outsb
add
call
test
ret
mov
js
mov
call
fadd
fimull
outsl
sub
inc
enter
outsl
push
sbb
test
loope
sbb
push
mull
outsl
imul
cltd
xchg
lods
cmp
test
data16
test
mov
sti
mov
sbb
cmp
xor
ret
push
adc
sub
mov
nop
lahf
mov
popf
inc
jmp
iret
subb
add
imul
push
adc
xlat
cmp
add
and
repz
pop
out
sub
pop
xor
cmc
stc
sub
xor
pop
jmp
mull
ret
push
lcall
xor
mov
pop
iret
mov
pop
xchg
mov
push
loopne
popa
scas
bound
pcmpeqd
sub
jns
push
aam
cmp
adc
mov
movsl
adc
pop
pop
iret
and
jle
xor
and
out
sbb
inc
iret
jmp
mov
outsl
gs
and
sub
push
xchg
cmpsl
adc
mov
sub
imul
inc
and
dec
push
inc
or
pop
sbb
push
movsb
and
mov
adc
aam
add
fld
and
ret
arpl
in
pop
push
aad
cli
loop
xlat
daa
inc
mov
pop
add
loop
test
faddl
push
add
dec
jno
mov
mov
xor
imul
dec
adc
sbb
and
xchg
ret
jle
lcall
lock
pop
jge
push
hlt
or
hlt
mov
fmull
mov
push
in
adc
ja
das
dec
push
in
cltd
and
adc
xchg
dec
mov
push
xchg
xor
pop
add
fucomi
cmp
pop
and
cmpl
sbb
push
int3
sbb
dec
sbb
into
cwtl
dec
shrl
or
into
and
xor
pop
mov
sti
push
jle
loope
sar
iret
mov
dec
inc
inc
sbb
test
je
push
mov
xlat
jg
sub
xchg
addl
cmovb
sbb
mov
sub
pop
xchg
cmp
out
call
push
cmp
addb
add
mov
xor
mov
mov
add
xor
cmp
imul
push
bound
std
ret
shll
cmc
or
pushf
inc
les
dec
dec
lea
xor
add
pop
jo
dec
push
pop
divl
inc
arpl
loop
sub
cmp
test
fwait
jno
and
sahf
mov
xor
adc
iret
add
sub
lea
dec
ret
iret
scas
and
xor
outsb
dec
push
xchg
adc
enter
jae
inc
mov
pop
cltd
ljmp
or
adc
sub
repnz
shr
pop
cmp
sbb
add
inc
addb
mov
arpl
inc
add
xor
ja
mov
lea
imul
mov
je
call
loope
add
xchg
es
orb
xor
lock
pop
leave
inc
movsl
lods
pop
inc
popa
cmp
and
or
mov
hlt
fbstp
sub
xor
sbb
or
lea
jns
xor
pop
mov
bound
dec
aad
shrl
sbb
sub
inc
cmp
cmc
roll
cmp
cmp
lea
lods
pop
xchg
ret
jae
xchg
xor
adc
je
cmp
mov
mov
cmp
dec
push
sub
xlat
xchg
arpl
ss
jo
pop
adc
adc
jns
pop
or
and
xor
in
je
subb
test
test
imul
jmp
pop
addr16
adc
mov
pop
mov
stos
in
arpl
aam
daa
xchg
mov
mov
lcall
cmp
jnp
test
xchg
xor
enter
les
jge
sub
or
fwait
inc
mov
aam
inc
push
sbb
pop
andb
stos
adc
lea
dec
lret
rolb
movsb
call
jno
or
cmp
ja
das
or
or
inc
cmc
mov
push
inc
mov
nop
rorb
and
jle
fs
cmp
and
sbb
popa
xchg
pusha
lea
ds
sub
lea
mov
dec
and
stc
dec
pop
push
lock
outsb
rorl
jecxz
rcrb
and
push
lret
jne
pop
aaa
add
or
in
mov
loopne
int
lds
pushf
pop
popl
jns
test
push
push
int
jb
sbbl
mov
popf
sub
add
aaa
mov
cwtl
push
movsb
nop
pushf
jge
movsb
lcall
sub
dec
mov
dec
test
cmp
mov
popf
loope
loopne
jnp
pop
dec
or
fs
in
fidivrs
lods
adc
push
arpl
stos
popa
push
cmpsl
sub
sarb
xchg
es
lea
sbb
pusha
sub
addb
mov
shrb
sbb
dec
push
test
sub
js
sbb
stos
and
out
scas
inc
sbb
inc
sbb
sbb
aad
xor
mov
jae
lods
jmp
rolb
in
sbb
mov
sub
andl
sub
sti
roll
xchg
add
rcr
cmpsb
add
scas
xchg
mov
loopne
arpl
test
xor
push
pop
bnd
daa
jne
loopne
adc
or
mov
je
mov
sub
in
iret
mov
pushf
add
insl
inc
push
rclb
movsb
xchg
adc
aas
lods
inc
dec
js
or
pusha
inc
insb
ret
sub
push
xchg
dec
push
pop
pusha
or
popa
shll
add
add
add
sub
push
or
mov
shll
out
mov
xchg
jnp
push
push
add
test
and
and
lret
mov
xchg
pop
stos
and
push
xchg
ret
pop
xlat
pop
aad
jp
xchg
cmpsb
jle
mov
pop
fiadds
lcall
push
adc
loope
inc
or
bound
add
stc
loopne
bound
aam
fisttpl
push
xor
sbb
or
pop
sub
jb
or
sbb
adc
mov
scas
push
call
push
outsb
out
xor
or
aad
clc
in
or
or
and
jp
pop
icebp
sub
fnstsw
cmpsb
movsl
lods
je
out
in
inc
subl
call
lcall
add
sbb
addr16
iret
xchg
push
cmpsb
dec
lock
pusha
push
mov
pop
or
pop
in
rol
rcrl
cs
lods
scas
insb
mov
or
into
sbb
jno
dec
cmpsb
pop
push
aas
mov
pop
pop
mov
out
pop
adc
stos
outsb
add
out
lcall
add
icebp
mov
femms
divl
lea
xor
mov
lock
shrl
sub
push
cmp
fsubs
lods
and
xor
sub
aaa
fwait
leave
icebp
add
ja
jge
test
test
add
sbb
pop
push
dec
fisubs
adcb
aam
or
jp
das
bound
fcoms
jns
cmp
cmp
hlt
movl
out
xor
pop
js
mov
shlb
cmpsl
daa
jns
in
in
push
cs
subl
cmp
mov
loop
leave
hlt
sbb
lock
sbb
dec
jge
jo
mov
pop
cmp
xchg
test
push
dec
les
imul
mov
sub
adc
jo
jle
push
cs
sub
outsl
out
gs
push
adc
or
insb
sbb
das
push
or
sub
cwtl
addl
sbb
adc
nop
addl
dec
and
sahf
jne
and
inc
add
lds
add
rep
adc
push
or
adc
fisubrl
dec
fmuls
ljmp
jmp
or
mov
adc
insb
xchg
iret
xor
call
test
xchg
icebp
adc
shrb
xor
fwait
cmpb
xor
inc
push
mov
dec
and
and
xlat
addr16
ret
adc
xchg
call
mov
inc
inc
adc
xor
jle
sub
stos
test
mov
adc
add
xchg
jmp
shrb
inc
imul
jne
adc
mov
sbb
mov
rorb
pop
cmp
mov
pop
mov
je
jp
xchg
movsb
sti
outsb
add
xchg
mov
cmc
lahf
int
rcrb
insl
mov
push
cmp
fnstsw
jle
adc
leave
jno
jns
nop
push
rolb
cmp
xchg
stos
adc
aaa
fwait
pop
xor
ret
push
daa
popa
xchg
or
cmp
loope
and
jbe
mov
xor
inc
sub
mov
adc
repz
cs
xchg
jle
and
sbb
or
sbb
push
and
test
sub
test
mov
pusha
shr
es
push
push
gs
or
int3
mov
pop
xchg
pop
xor
add
jno
sbb
lea
frstor
jle
xchg
push
sbb
sub
inc
movsl
mov
xchg
inc
cmp
lea
xchg
mov
mov
stos
dec
loopne
add
lret
push
fs
add
lret
jmp
iret
mov
shlb
xchg
aad
xor
insb
pop
mov
inc
cmp
add
jge
sub
rcl
call
push
outsb
adc
inc
std
iret
jnp
daa
lock
push
ret
dec
loop
xor
jo
in
enter
loop
or
inc
jnp
dec
sub
aam
lods
mov
jno
push
cpuid
sub
jge
pusha
rcll
pop
sub
push
xchg
adc
add
push
loope
dec
aas
hlt
inc
push
mov
and
outsl
loope
pop
push
outsb
cmp
test
clc
inc
jecxz
jp
add
jmp
aas
fsubs
popf
push
cmp
repnz
ret
cli
lods
push
lret
shl
push
das
inc
iret
sbb
inc
cmpsb
movl
movsb
inc
add
sbb
dec
movsl
ss
xchg
adc
std
add
shll
andl
les
loopne
andb
sbb
rorb
enter
pop
js
jecxz
hlt
and
jno
cli
and
rorb
icebp
jle
push
xchg
mov
xchg
push
push
dec
sub
in
mov
addl
inc
pop
dec
lods
loopne
push
js
int
aam
sub
or
pop
sarb
pop
sub
out
jecxz
pop
and
out
rclb
pop
dec
test
and
je
int3
adc
pop
push
pop
jno
adc
popa
aas
xorl
fwait
xchg
shlb
add
sbb
lcall
jo
sub
fildll
clc
xor
push
mov
push
pushf
dec
inc
loop
xor
daa
in
add
push
test
pop
cmp
and
roll
notb
mov
scas
or
scas
into
scas
inc
xlat
pushf
add
test
outsb
mov
and
dec
pop
nop
inc
les
sbb
dec
jge
js
popa
lods
or
rorl
orl
pushf
xchg
or
shlb
movsl
rolb
aas
movsl
fdivrp
rolb
jle
ja
add
mov
je
xchg
jb
ror
scas
jge
xor
in
pop
clc
pop
sub
cli
clc
ret
adc
xchg
adc
push
dec
call
or
push
sbb
xchg
cmpsl
rcrl
pop
je
mov
cmp
or
mov
adc
iret
fisttpl
mov
jge
pop
rcrb
sbb
subl
pop
loop
lds
cmc
pop
sbb
jle
push
stos
dec
adc
ret
iret
hlt
iret
and
call
popa
lret
adc
sbb
mov
cmpsl
lods
aad
push
repz
pop
ljmp
adc
repnz
pop
loope
icebp
jne
dec
xchg
xchg
pop
xor
add
jp
cmpl
dec
xor
cs
mov
mov
add
mov
enter
add
andl
dec
rclb
les
aam
dec
adcb
in
js
mov
insl
sub
loop
test
sbb
pop
divb
xor
or
push
jo
stc
pop
adc
lret
ja
push
lea
adcb
mov
add
sbb
mov
or
rolb
pop
scas
xlat
in
jg
push
cmc
cmp
xor
push
mov
mov
fnclex
in
incb
or
sbb
inc
jmp
test
adc
inc
mov
insl
add
jne
sub
jecxz
and
dec
jno
repz
mov
push
fmuls
testl
dec
test
dec
xor
test
inc
dec
cmp
ss
jle
je
sbb
js
jmp
mov
mov
mov
add
add
xchg
xor
mov
orl
xchg
jle
mov
xlat
lret
pop
add
xor
mov
movsb
mov
mov
das
sub
lods
call
xchg
and
movl
inc
xchg
pop
sbb
or
add
pop
jge
mov
test
sub
dec
loopne
pop
fwait
ret
and
data16
dec
sarl
dec
orb
xchg
jge
ss
imul
inc
push
in
jle
xchg
or
enter
clc
aaa
sahf
sub
xor
dec
loopew
and
aad
mov
inc
mov
xchg
lock
sub
dec
das
popa
cmp
jl
and
mov
jno
orb
bound
gs
pusha
or
and
pusha
adc
add
push
cmpsl
inc
ds
pusha
dec
lea
pop
sbb
sub
adc
jne
lcall
inc
pop
jnp
add
test
pop
test
loopne
fdivrs
in
and
das
call
pusha
xchg
lock
in
adc
test
cmpb
popf
sub
sahf
lea
cmpsl
leave
pop
ss
iret
lret
shrb
sbb
dec
push
jmp
pop
xorb
nop
add
xchg
sbb
insb
mov
mov
pop
out
mov
jno
or
xor
pop
enter
add
sbb
mov
add
add
ljmp
fldl
adc
iret
in
adc
aam
dec
add
insl
dec
gs
jo
add
or
out
add
jo
jo
xchg
cmpsl
in
adc
push
pop
outsb
icebp
das
xor
ret
rcll
add
cmpsb
add
in
mov
in
pop
bnd
add
test
aam
andb
ret
sbbl
bswap
xlat
aad
stos
xor
sub
test
lahf
dec
jmp
add
pushw
jo
adc
repnz
loopne
adc
mov
inc
xchg
loopne
inc
out
stos
or
shlb
rclb
mov
xor
iret
pop
cmp
pop
divl
pop
into
fs
mov
and
clc
mov
push
adc
or
sub
add
ss
sti
nop
sub
adc
push
inc
fdivs
jo
mov
add
sub
sbb
aas
add
aad
mov
dec
sbb
xchg
xchg
arpl
xchg
clc
ret
lock
fs
gs
add
fmuls
xor
incl
jne
dec
dec
out
mov
jo
imul
das
or
test
push
sub
sbb
adc
xor
lret
pop
je
and
adc
cli
cmp
insl
faddl
into
pmaxub
aaa
cs
mov
mov
cs
das
dec
pusha
mov
mov
jns
xchg
push
lock
leave
mov
lock
cmp
je
and
jecxz
jb
sub
or
lock
fs
loopne
xchg
jno
loope
sub
inc
sub
mov
xchg
mov
push
or
mov
sbb
sbb
xchg
shlb
jno
xor
jbe
push
pop
lret
out
cs
push
pop
inc
mov
les
popa
or
mov
les
pop
fs
stc
cmp
or
mov
inc
icebp
les
dec
dec
add
xor
test
loopne
loope
cmp
nop
out
dec
clc
fcoms
dec
add
jle
data16
sbb
fmull
mov
push
cmc
pop
xchg
push
cmp
inc
xchg
sahf
js
jecxz
mov
aaa
mov
add
mov
push
fadd
push
or
mov
cmp
jle
fstl
ret
outsb
add
push
sub
push
negl
loopne
pop
add
and
dec
xchg
add
add
dec
sbb
and
insl
and
xchg
pop
adc
jae
shl
add
mov
roll
and
clc
stos
test
and
lock
es
pop
cvtps2pd
push
outsl
bound
scas
loopne
mov
fnstenv
addl
ds
lea
js
mov
adc
scas
out
xor
push
fwait
push
fsubrs
cmpsb
hlt
xchg
jle
out
rol
pop
jp
scas
ret
push
daa
loope
mov
mov
inc
jl
jg
cmpsb
sbbl
aam
iret
xchg
loop
or
out
adc
sub
mov
push
jmp
or
add
and
mov
mov
add
hlt
jbe
jo
sub
verr
aaa
xor
inc
insb
jge
mov
cs
out
adc
fs
aas
xor
dec
movsl
lret
mov
ja
test
pop
add
test
shll
cltd
mov
lds
mov
inc
sub
lcall
xor
mov
push
out
and
stc
pop
jo
repz
add
add
imul
lods
inc
mov
repz
and
iret
and
push
or
sub
imul
sub
cli
jmp
dec
pop
cmp
jbe
and
sbb
jbe
jecxz
pushf
cmp
rcrl
sub
rclb
adc
add
daa
pop
jl
push
push
mov
and
cltd
ss
ret
sbb
jge
ss
iret
push
movb
ss
out
sub
jle
in
xor
xor
jle
jg
lret
jecxz
mov
pop
xor
sub
js
sti
pop
fdivp
adc
sbb
testl
rclb
mov
or
aaa
push
gs
outsl
sub
inc
dec
icebp
mov
jge
sub
lret
xchg
jno
xor
cmc
push
shlb
cmp
xor
orb
push
add
jo
lock
jae
test
jnp
loop
dec
pop
jne
jo
pcmpeqw
js
mov
xchg
addr16
dec
loope
dec
mov
mov
test
inc
sbb
adcb
jle
add
call
cmp
fisubrl
sar
mov
test
scas
sbb
cwtl
push
pushf
mov
add
adc
inc
xor
sbb
aaa
popa
daa
or
cmpsb
or
fistps
push
mov
and
xor
and
mov
mov
lcall
aam
inc
andb
adc
cmp
mov
mov
movsb
xchg
mov
addb
mov
pop
xor
ret
inc
pop
shlb
stc
mov
fs
adc
pop
fnstenv
lds
inc
mov
orb
ja
or
mov
xor
loope
aam
sub
jmp
ljmp
cs
daa
cmp
and
sub
adcl
mov
aas
imul
stos
jno
add
ret
mov
je
call
inc
pop
push
stos
dec
adc
jecxz
add
fs
lods
sub
icebp
sub
repz
pop
and
cmc
movsl
sbb
imul
xchg
add
popa
add
inc
pusha
inc
cli
pop
inc
insl
add
lds
sbb
push
frstor
test
fldt
fwait
jp
or
nop
xchg
call
mov
jnp
sbb
inc
js
sbb
arpl
cmp
push
leave
ret
cmp
xor
sub
mov
adc
pop
jnp
pushf
imul
xchg
shlb
pop
sbb
mov
push
add
xor
cmpsl
jne
nop
data16
adc
lret
dec
xor
mov
push
insb
push
push
pop
or
and
repz
scas
rclb
lsl
jo
orl
xlat
pop
gs
adc
inc
adc
pop
jnp
or
ret
mov
data16
in
ljmp
lods
cmp
mov
and
add
mov
js
dec
adc
lret
push
inc
in
cmp
loop
jno
pop
push
test
push
lcall
cmc
fiadds
mov
ss
jb
aad
mov
daa
ljmp
mov
add
jne
mov
int
data16
and
mov
add
cmpsl
push
adc
mov
inc
test
add
fisubs
js
or
sbb
mov
mov
add
int
xchg
lods
dec
mov
insl
xchg
and
fisttpll
lods
pop
cmp
mov
push
xchg
loopne
lock
loop
ret
xor
push
xchg
and
imulb
sub
mov
or
dec
xchg
scas
shrb
cltd
mov
idivb
mov
sub
jg
gs
add
fwait
js
push
mov
or
push
js
int
sbb
pop
mov
data16
shlb
mov
mov
jne
add
pop
mov
or
or
gs
sub
pop
lds
xchg
js
dec
in
test
les
scas
daa
paddsw
push
mov
arpl
xchg
test
mov
popa
into
cmp
push
pusha
pop
loope
inc
add
add
mov
arpl
xchg
orb
mov
sub
outsb
xchg
ljmp
adc
xchg
popa
int
imul
insb
push
mov
notl
add
mov
cmpsl
mov
sarl
aad
adc
lds
fcomp
inc
pop
xchg
fdivs
and
imul
scas
popa
je
inc
pushf
movsb
xor
fs
pop
hlt
clc
push
xchg
in
dec
xchg
push
jo
pop
xchg
imul
push
loop
subb
or
jno
and
aas
int
adc
fisubl
lods
fdivrs
outsl
rclb
jns
test
daa
add
out
jo
fcoml
add
sub
scas
inc
fwait
adc
xchg
test
xchg
fstpt
pop
cmpsl
dec
jmp
and
pusha
push
icebp
inc
imul
aad
js
push
shlb
clc
adc
pop
sbbb
xchg
sub
aaa
sbb
dec
add
cltd
push
out
adc
add
js
cld
cld
pop
cmp
xchg
orl
shll
mov
sbb
shlb
mov
int
mov
mov
ret
in
test
mov
jo
xchg
cmpsb
sbb
xchg
or
mov
lods
out
addr16
mov
arpl
inc
fcmovne
imul
lods
pusha
pusha
sbb
icebp
sbb
sub
inc
sbb
jge
add
fstl
shlb
loope
cmpl
daa
fcmovu
add
outsb
cmp
aaa
add
push
mov
cmp
aad
and
or
sbb
ret
or
sbb
adc
xchg
in
cs
push
mov
xchg
xor
pusha
push
jb
add
into
jg
and
fsts
stc
adc
outsb
shll
mov
jne
out
xchg
add
inc
sub
mov
int
inc
mov
movsl
inc
cmp
lock
lock
les
into
jae
mov
in
dec
mov
xor
mov
sbb
jne
sub
or
and
adc
xor
stos
inc
popa
adc
shll
lods
xchg
mov
xchg
movsl
negl
jp
stc
adc
mov
inc
loope
cltd
add
mov
xchg
sub
jecxz
push
loop
je
mov
jno
pusha
gs
inc
and
add
test
hlt
adc
mov
inc
xchg
psubusb
jo
in
add
fsts
into
jno
sub
js
mov
cmp
cmp
fcoml
andb
inc
cmp
jnp
cmc
push
lods
lea
out
pop
push
pop
cmp
add
mov
rcl
jnp
outsb
mov
lods
add
stos
inc
push
sub
stos
shl
lods
add
cltd
push
cmp
stc
aad
mov
repz
mov
jo
xchg
add
and
jo
or
scas
mov
scas
add
dec
sub
push
test
adc
sub
mov
test
dec
filds
es
loop
pusha
pop
push
jecxz
subb
orl
add
std
pop
rol
mov
jnp
sbbl
dec
push
mov
adc
cld
mov
xor
or
pop
stos
push
pop
out
jno
stos
and
loopne
pop
mov
jl
mov
daa
shrl
mov
add
or
xchg
test
out
mov
fcmovnb
cmp
or
sub
jmp
push
in
mov
and
and
xchg
adc
gs
mov
scas
out
sahf
sarb
nop
push
adc
inc
or
or
ss
push
bound
xchg
sub
dec
dec
loopne
jmp
mov
ret
test
pusha
repnz
mov
jne
and
daa
je
mov
inc
fldenv
adc
insb
mov
rcrb
sarl
xchg
push
cmpsb
jmp
pop
dec
shlb
add
lea
or
sbb
xor
inc
adc
rclb
arpl
test
pop
or
ret
and
mov
pop
cmp
test
xchg
xor
fstpt
sub
xchg
adc
push
in
jecxz
jmp
dec
ja
pop
dec
and
pop
push
insl
xor
popf
orb
mov
aas
mov
pop
cli
xchg
or
or
mov
bound
inc
inc
or
mov
fstps
mul
sbb
loop
sub
in
add
sub
imul
mov
cmp
lds
jl
jp
mov
jp
inc
inc
pusha
insl
test
cmp
int
adc
dec
nop
loopne
sbb
sahf
add
jbe
jg
or
stc
stos
inc
fisubs
add
sbb
repnz
push
add
add
pusha
add
xchg
cmp
jo
nop
mov
and
or
or
test
movsl
pushf
jne
xchg
les
inc
mov
jge
iret
cmp
pop
pusha
ret
inc
jno
mov
sbb
add
add
push
adc
mov
mov
mov
dec
lods
mov
paddusb
cmp
into
lret
arpl
jge
jno
std
sub
cmp
enter
adc
pop
in
nop
js
xor
dec
push
mov
cmpsl
lods
je
push
cmpsl
sub
and
and
sub
pop
pushf
cmpsl
gs
adc
arpl
pop
sbb
or
or
xchg
dec
iret
pop
sbb
in
mov
adc
sahf
mov
and
int
mov
mov
rcrl
pushf
and
push
inc
js
insb
faddl
ret
mov
out
mov
out
inc
out
xchg
mov
gs
mov
test
rcl
sub
push
dec
loop,pt
xor
mov
out
pop
cld
or
shlb
mov
xor
fisttps
rcl
mov
inc
and
sbb
call
jmp
es
sbb
ss
jmp
xchg
add
icebp
or
outsb
out
or
jne
int
xchg
adcl
or
pop
out
inc
xchg
push
jnp
sbb
and
sub
loopne
pop
imul
scas
repz
mov
hlt
mov
add
fldl
addr16
pop
or
adc
inc
jb
dec
jmp
ret
or
pop
lds
sbb
lds
sbb
cmp
mov
arpl
popf
jg
cmpl
iret
test
cmp
sub
inc
cwtl
mov
pop
sbb
popl
xor
and
or
mov
mov
adc
xor
and
mov
sub
out
add
out
rolb
jbe
out
aam
ss
or
sbb
cmpsb
jae
movsb
or
or
ret
xchg
lods
lods
xchg
jmp
fs
adc
adc
adc
mov
sbb
lods
lret
rcll
scas
inc
xor
mov
test
roll
and
mov
daa
pop
pop
mov
jle
faddp
andl
add
fs
and
inc
inc
sub
dec
pop
inc
dec
sbb
mov
out
mov
gs
mov
xchg
adc
pop
data16
jp
dec
mov
pop
jp
xchg
pop
adc
lea
xchg
sbb
nop
clc
loopne
cltd
insb
filds
or
test
sub
sub
lods
sti
lahf
movsb
inc
or
sbb
sub
dec
movsl
xchg
icebp
dec
iret
mov
and
cmp
push
pop
mov
cmp
cmovg
aaa
sarb
jb
pop
or
cld
add
pop
mov
outsl
mov
mov
push
mov
lds
cmp
mov
xor
inc
jno
iret
pop
push
xchg
xorb
cli
lahf
xchg
pop
ret
or
dec
fwait
add
cmp
dec
aas
cmpsl
fiaddl
mov
cmp
xor
sbb
cmp
call
jmp
cmp
mov
push
mov
mov
in
mov
mov
cmp
sub
lods
pop
add
push
out
or
js
in
sub
adc
xor
into
fiadds
adc
cwtl
frstor
pop
xchg
lods
inc
jl
or
add
lock
je
cmc
adc
js
cmpsl
pop
mov
call
jmp
cmc
sbb
dec
inc
jp
mov
xchg
inc
sbb
and
jno
in
sbb
xchg
mov
cmpsb
arpl
add
shlb
and
in
ja
data16
push
addr16
add
in
daa
pop
jge
adc
mov
es
test
shrb
shll
push
jns
movsl
push
pusha
mov
ja
les
pop
mov
sbb
out
fwait
test
nop
sub
int3
or
mov
dec
add
jl
orl
out
pop
mov
mov
cmp
and
andl
lods
addb
daa
dec
test
test
sti
cmc
or
call
lds
or
xor
mov
popa
call
push
xor
js
cmp
inc
adc
inc
xor
pusha
or
xlat
pop
sub
mov
addl
xlat
mov
pusha
and
dec
jo
xchg
lock
subl
das
imul
push
add
sbb
inc
add
xor
into
cmpl
popl
mov
inc
fistpl
jno
pop
cmp
sub
pop
fwait
sbb
sahf
and
dec
shll
sahf
jne
sub
push
ds
dec
jmp
sbb
repz
dec
shl
or
jg
or
pop
pop
add
push
xor
dec
sbb
not
xor
pop
push
adc
add
cmpb
adc
fnstsw
mov
in
jecxz
aam
mov
out
xor
mov
movsl
mov
std
scas
sbb
adc
cmp
rcll
imul
xchg
in
cltd
cmp
addr16
xchg
bndstx
das
lock
sbb
mov
inc
mov
and
jle
push
loope
mov
push
dec
adc
test
xchg
xor
add
dec
sub
push
mov
dec
xchg
mov
je
sub
mov
adc
xlat
fsubs
push
js
aaa
pop
sbb
sub
out
and
imul
inc
mov
repz
push
loopne
subb
aam
mov
cltd
icebp
add
xlat
cs
adcb
cs
imul
or
cwtl
cmp
or
leave
mov
jne
push
cmc
inc
sub
lods
sbb
mov
bound
and
xchg
dec
aam
js
jae
test
mov
adc
sbb
das
ja
fbstp
ret
mov
lods
ss
jne
add
mov
sub
loope
mov
pusha
ja
xchg
dec
mov
adcb
inc
jmp
jae
adcb
das
incl
pop
js
xor
lahf
add
push
dec
sbb
lea
xor
ds
push
stos
sub
je
pop
andb
test
imul
mul
test
fs
filds
and
mov
loop
pop
jne
daa
mov
cmp
inc
and
jo
mov
add
lods
sub
add
mov
adc
adc
pop
sub
or
sbb
inc
inc
mov
and
and
push
sub
or
add
mov
pop
adc
cmp
sbb
cltd
scas
and
cmp
fucomip
mov
fldt
mov
xchg
mov
pop
sbb
adc
test
test
jge
cmp
rol
je
sbb
out
pop
add
ret
push
push
addb
jecxz
shr
and
sub
pop
out
sarb
imul
pop
and
sbb
adc
aas
cli
xchg
push
daa
in
mov
es
fsubs
call
mov
xchg
ja
popf
daa
cmp
inc
pop
sub
push
or
and
test
pop
idivl
push
fsubr
mov
cmc
inc
loop
pop
loope
and
nop
mov
jp
sbb
mov
or
mov
and
icebp
sub
xlat
test
clc
inc
xor
insl
subb
jno
adc
fimuls
test
lea
hlt
push
rorb
cmp
rolb
mov
xlat
jmp
and
int3
lea
xchg
jmp
arpl
dec
inc
addr16
sarb
jbe
into
pop
imul
faddl
xchg
mov
jns
mov
pop
les
addl
mov
lock
sbb
shrb
mov
clc
adc
movsb
add
arpl
sti
das
aam
pop
btc
cmp
push
test
rcl
push
lret
iret
cmp
mov
ret
sub
pop
shll
addr16
sbb
movsl
and
imul
pop
lret
xor
sub
add
rcrb
pop
inc
inc
mov
rol
lds
sbbl
dec
add
sub
cmp
mov
test
xor
sbb
pusha
xchg
stos
push
push
cltd
stos
mov
inc
jge
cmpsl
lahf
pop
rep
push
mov
mov
sub
rolb
add
mov
daa
ret
add
cmc
inc
inc
mov
stos
adc
das
add
pop
cs
faddl
xchg
dec
or
loope
jge
cmp
stos
add
adc
mov
ljmp
jle
loopne
inc
jae
lock
je
popf
fidivrs
mov
mov
frstor
jmp
scas
xchg
nop
lods
lret
or
ret
gs
mov
fucom
rclb
sub
addl
inc
dec
cmc
add
mov
pop
rorb
xor
sbb
cmp
sahf
pushf
mov
jb
std
icebp
sub
and
popa
and
add
aas
int
das
cmp
xchg
bound
fiadds
mov
call
ljmp
adc
loope
xchg
mov
dec
cmp
adc
jge
add
cltd
add
rorb
mov
mov
xchg
add
loop
iret
adcl
inc
pushf
mov
fwait
int3
scas
lock
pop
aas
es
loopne
bound
push
je
mov
jnp
sbb
push
mov
fiaddl
int3
data16
and
mov
subl
inc
mov
sbbb
mov
or
and
add
loopne
and
jns
jns
loopne
nop
aaa
dec
adc
pop
sub
popf
sbb
push
or
negl
add
std
mov
mov
dec
popf
dec
sbb
xchg
xor
cmp
jae
inc
shlb
cmc
test
test
add
shlb
mov
add
mov
popf
sbb
sarl
and
jnp
pusha
and
stos
or
mov
push
scas
movsb
mov
xor
adc
ljmp
xchg
inc
mov
rorb
jnp
lods
jb
xchg
adcb
pop
stc
cmpb
mov
jmp
cmpsl
dec
or
jmp
jo
imul
dec
aad
bound
xor
roll
sub
or
push
and
loopne
test
xchg
inc
test
cmpsb
movsb
push
push
inc
xchg
sub
and
ret
loop
sub
or
pop
int3
add
or
mov
ja
imul
jmp
mov
adc
fwait
loope
xchg
push
scas
inc
fists
jo
aam
jp
je
adc
pop
push
sub
pop
ja
or
or
cmp
jnp
sbbb
js
scas
cmpb
cmovnp
ss
je
test
xor
add
sbb
scas
pop
mov
flds
add
mov
xchg
shrb
mov
loop
fldl
lods
ret
mov
sub
gs
outsb
xchg
inc
bound
ss
test
aas
mov
or
mov
pop
div
pop
sarb
sbb
cmc
push
aaa
mov
inc
lock
test
ret
xor
mov
dec
jge
lock
add
dec
xor
add
xor
and
in
add
fadds
or
push
frstor
enter
in
mov
xchg
test
sub
divl
fcmovnbe
add
loopne
adc
rolb
cmpsl
arpl
sarb
movsl
fadds
stos
lds
jo
enter
cli
add
jmp
jo
lods
in
imul
add
into
mov
aaa
xchg
iret
nop
aas
mov
push
cmp
mov
push
test
xor
int3
sub
loope
shrb
dec
mov
popa
cs
dec
add
add
sub
sti
push
add
ret
stos
push
xor
enter
popa
or
lahf
int3
sub
pop
test
dec
jg
xor
mov
pop
test
inc
int3
lods
cmp
js
scas
cmpsl
incl
ss
popa
jge
pop
cmp
sbb
dec
push
mov
add
mov
test
add
cmp
cmp
pop
cmp
add
add
add
aad
dec
adc
out
out
inc
pop
dec
lret
mov
dec
imul
enter
ret
xchg
cmp
and
ret
orl
test
outsl
and
pop
shll
xchg
and
cltd
mov
insl
adc
pop
or
jnp
pop
xlat
rclb
jnp
imul
pusha
mov
push
arpl
adc
mov
aaa
mov
mov
dec
ja
mov
lods
xchg
add
add
jmp
pop
jmp
or
sahf
sub
adc
push
lret
adc
fs
push
fs
add
lret
mov
adc
je
sub
imul
add
cmp
dec
popl
push
out
add
outsl
orl
xor
lcall
lods
add
stos
push
orl
cmp
mov
sub
loope
adc
push
icebp
dec
in
mov
cvtpi2ps
or
inc
inc
cmp
in
push
xorl
shlb
ds
stc
movsl
adc
push
xchg
test
dec
inc
jnp
movsb
nop
adc
lods
sub
sti
sti
add
popa
pop
adc
leave
xor
clc
and
sbb
add
mov
jnp
in
out
push
mov
ja
insl
rorl
mov
fstpt
dec
stos
in
xchg
js
or
inc
push
cmp
sahf
cmp
lret
cmp
or
pop
push
js
inc
and
in
xlat
lock
push
es
mov
cmp
rol
sahf
dec
out
sbb
mov
loop
test
inc
pavgw
xchg
cs
fisubl
mov
pop
and
jecxz
scas
dec
jbe
inc
dec
movsb
cmc
sbb
or
sbb
ss
lods
adc
adc
mov
insb
loopne
addl
fstps
push
rcr
test
lods
in
int3
push
pushf
pop
inc
bound
stos
daa
adc
mov
mov
and
mov
rcrb
pop
jmp
cmp
push
icebp
jbe
and
leave
aaa
movsb
int3
add
adc
and
addr16
pop
and
push
or
mov
sub
mov
push
jbe
jns
ret
addr16
xchg
enter
fiaddl
addr16
incb
inc
movsb
pop
fidivl
aas
les
add
xchg
pop
adc
dec
push
int3
cltd
lods
aad
or
aam
mov
fdivrs
leave
dec
push
pusha
andb
cld
push
rol
cmc
add
and
mov
lcall
or
roll
test
sub
repz
xor
sbb
aas
cmp
pusha
pop
jo
insl
fs
sub
sarb
and
ljmp
out
adc
arpl
pop
int3
cltd
cmp
shrl
mov
pushf
pop
mov
push
xlat
pusha
or
test
loope
ljmp
xlat
out
jl
ds
add
iret
and
shrb
repnz
mov
pop
fcoml
jmp
dec
sahf
int
push
ret
icebp
scas
dec
popf
and
mov
or
adc
ficompl
and
jle
or
inc
push
add
outsl
dec
fmuls
lahf
sbb
cmc
jecxz
xor
mov
or
pop
or
pushf
push
adc
sub
adc
xor
pop
cmpsb
pop
or
popf
sbb
inc
aam
dec
sub
inc
xchg
popa
fs
shrb
pusha
loop
mov
lods
imul
lea
cmp
in
pop
mov
enter
test
js
pop
xchg
fldenv
xorb
and
loopne
adc
xlat
pop
jg
push
shrl
cmp
push
stc
push
add
fbstp
push
xor
addb
xor
adc
nop
xchg
outsl
adc
mov
popa
jmp
das
pop
or
cmp
shlb
frstor
in
adc
js
sub
push
jnp
int3
mov
xor
push
mov
test
scas
movsb
sub
mov
enter
leave
ret
fmull
and
aaa
movl
lods
jno
push
daa
jno
adc
mov
fmull
mov
dec
shrl
jno
dec
jno
data16
arpl
test
add
mov
and
jg
mov
pop
xchg
adc
fwait
jo
int3
jmp
sbb
mov
push
mov
push
pop
subl
add
or
mov
ret
cmpsl
sbb
mov
jno
and
and
add
sbb
cmp
jl
lahf
or
xchg
test
test
or
test
orb
in
out
add
jl
dec
ret
pop
les
lret
mov
cltd
mov
and
ret
add
sbb
and
mov
xor
jmp
dec
and
adc
adc
iret
enter
push
adc
push
mov
mov
jp
sub
lds
sbb
ja
mov
fcomp
mov
insb
pop
je
jmp
cmp
lea
add
xchg
out
inc
out
inc
gs
adc
mov
adc
addl
addl
add
pop
add
dec
push
sbb
sub
and
inc
mov
aam
jae
sbb
ret
into
mov
mov
sbb
cld
pop
pop
in
imul
xchg
les
test
dec
addr16
pushf
shll
ficoms
loopne
push
lahf
lock
arpl
ffreep
popf
push
dec
sub
repz
push
movsb
jle
loopne
mov
add
push
dec
lret
add
mov
movsb
sbb
or
test
inc
test
jg
ja
clc
pop
ja
adc
push
jl
push
mov
xchg
sbb
xor
jmp
push
data16
pop
adc
inc
inc
mov
mov
sbb
lret
fildl
dec
push
movsl
es
adc
mov
addl
add
adc
xchg
test
sarb
xor
add
movsl
sub
test
sub
cld
lods
cmp
xlat
xor
ret
pop
lods
roll
shrl
mov
lahf
mov
sbb
jg
icebp
xor
pop
add
xor
pusha
mov
inc
int
xor
lods
aad
dec
push
pop
out
js
popf
jle
cmpl
sbb
and
popf
daa
inc
sahf
dec
pop
addb
adc
cmp
cmc
inc
dec
incl
sbb
sub
mov
insb
pop
stc
add
test
jecxz
jns
push
cmpsb
sbb
inc
jge
cld
jge
xor
and
push
add
push
and
outsl
mov
add
jg
or
or
add
shrb
jecxz
int3
mov
in
stos
mov
mov
lret
pop
cmp
pop
pop
jne
loopne
lock
std
imul
mov
daa
cmpl
inc
push
or
sahf
jo
push
dec
popf
and
popf
jmp
ljmp
push
push
stos
mov
gs
dec
jmp
add
ss
mov
or
inc
inc
iret
adc
faddl
das
inc
subl
gs
rolb
xor
pop
inc
jae
inc
xchg
inc
cmp
sub
ffree
sub
pop
into
inc
jbe
inc
mov
sbb
and
lret
xchg
rcrb
sub
cmc
cmpsl
es
fwait
mov
dec
les
pusha
sahf
xor
aam
or
xchg
imul
and
or
rclb
sbb
push
xchg
mov
sbb
or
and
je
jne
cmp
loop
repnz
cmpsl
sbb
decl
imulb
in
push
ret
lods
and
mov
add
les
inc
ja
mov
fnstsw
inc
fcmovne
sarb
mov
fcoml
sbb
mov
xchg
push
push
lods
add
and
inc
outsl
xchg
push
arpl
popa
xchg
shll
inc
imul
mov
rcrl
clc
xchg
xor
popa
add
out
inc
call
jne
mov
mov
gs
jl
aas
gs
les
and
mov
call
nop
popa
leave
adc
popa
cmpsb
icebp
add
add
pop
movsb
or
rcrb
xor
or
pop
push
mov
mov
push
add
and
daa
jb
add
andl
jo
insl
lods
mov
mov
jg
cmpsl
push
cmp
les
icebp
push
les
jbe
adc
addr16
push
mov
push
je
roll
cmp
cmp
jns
loop
and
xorb
enter
jb
dec
mov
inc
mov
jae
scas
jecxz
les
ja
and
stos
inc
and
fimuls
mov
jbe
jno
clc
sbb
das
xor
pop
add
sub
xor
icebp
iret
repz
jl
pop
xchg
mov
lea
dec
daa
xchg
pop
mov
outsb
or
call
push
inc
xor
cmp
xor
sbb
outsl
add
add
aam
jae
lock
dec
or
mov
divb
jge
imul
pusha
mov
arpl
lcall
imul
pop
push
add
out
xor
cmc
jns
iret
inc
jno
adc
inc
add
imul
stc
mov
adc
push
fdivrs
je
or
dec
clc
les
je
push
inc
iret
sub
xor
dec
push
ret
inc
or
insb
out
mov
sub
jo
insl
aad
cmp
cs
cli
outsl
dec
fdiv
xor
aaa
in
aad
test
cwtl
cmc
iret
xor
push
adc
xchg
mov
icebp
fnstcw
hlt
mov
fsubs
ret
lods
pop
jne
or
mov
std
adc
ss
in
cmp
push
add
out
fstps
push
push
dec
mov
mov
cli
cs
enter
leave
add
pop
inc
loopne
test
mov
mov
fcompl
flds
mov
mov
sub
add
imul
addr16
xor
jge
popf
test
jne
dec
mov
xor
xor
andl
or
inc
jge
mov
scas
int
in
pop
loop
xchg
sbbb
or
mov
icebp
fwait
ret
and
insb
shlb
or
jne
sbb
imul
jmp
dec
scas
inc
loope
rolb
xor
pop
lods
add
imul
push
jae
ret
ret
jo
jmp
or
test
xlat
adc
lret
loope
ja
and
add
subb
push
or
jae
and
les
or
pop
jle
ret
into
cmpsl
push
push
ja
lock
push
cli
cmp
add
scas
cmp
jle
sbbl
sbbl
dec
pop
xchg
dec
push
fmul
add
mov
pop
pop
pop
or
movsb
mov
and
inc
sbb
push
xlat
mov
pop
lods
rcll
push
sbb
jnp
push
ja
shlb
in
popa
inc
scas
mov
icebp
sub
fcoms
ja
push
or
pop
inc
pop
test
inc
in
cwtl
sub
inc
push
imul
push
add
pop
pop
pop
scas
adc
xchg
rolb
adc
xchg
bound
or
mov
mov
clc
or
leave
jae
sbb
add
cmp
xchg
shlb
or
cwtl
or
test
dec
cltd
popa
pop
aas
aam
add
ror
outsl
sbb
mov
cmp
xor
dec
mov
inc
lret
sub
adc
add
aaa
push
and
xchg
xor
mov
xchg
push
push
xchg
xchg
push
push
mov
mov
jmp
test
push
or
lds
fwait
push
lahf
or
loopne
ljmp
push
pushf
xorl
adc
cmp
push
xor
cmpsb
lret
jmp
mov
lock
insb
fcompl
push
push
adc
add
stos
in
lds
shr
inc
das
pop
push
push
add
xchg
cmp
pop
pop
fnstenv
dec
loope
das
pop
mov
rclb
xchg
jmp
inc
call
adc
pop
pop
or
imul
lret
shlb
sarl
and
adc
adc
dec
ss
xor
adcl
and
jle
inc
or
loope
add
iret
sahf
mov
xor
inc
adc
imul
push
add
xchg
mov
or
dec
mov
imul
pop
int3
mov
fsubs
add
fsubrs
adc
lcall
pop
pop
cltd
popa
inc
cld
fbld
or
inc
xlat
popf
in
arpl
pusha
pop
jo
es
add
dec
sbb
fst
mov
xchg
xchg
push
popa
jecxz
stos
test
scas
sbb
cmp
jno
push
mov
push
test
mov
adc
dec
pop
sub
out
inc
dec
ret
lods
repz
stos
cmp
dec
xchg
sbb
add
and
lret
add
stos
lret
in
add
lret
cmp
fcmovu
add
jo
and
sbb
and
clc
fdivl
sub
dec
cwtl
divb
mov
sub
dec
dec
mov
xor
sbb
popf
dec
arpl
addr16
out
jge
addr16
and
add
add
mov
sti
jle
inc
flds
lods
fidivs
orb
scas
test
and
lods
jl
adc
pop
xlat
xor
sbb
xlat
sbb
mov
pusha
rcrl
divl
data16
into
daa
xor
repz
cs
ja
xor
or
xor
cmc
sub
pop
pop
push
lea
test
rcrl
add
test
jge
ja
and
fstps
or
sbb
adc
arpl
mov
mov
lea
xor
xor
out
mov
movsb
xor
addr16
dec
adcl
mov
fidivrl
cltd
adc
lret
movsb
lock
xchg
mov
lret
stos
jns
mov
popa
mov
pop
mov
cmpsb
mov
ja
mov
sbb
fs
cmp
jle
push
inc
mov
and
sub
dec
sahf
fdivrl
cltd
mov
mov
jae
and
cli
xor
or
xchg
sahf
ficoms
ljmp
sbb
aaa
stc
lret
gs
and
inc
aas
sbb
imul
and
mov
pop
xor
cmpsb
mov
inc
jae
sbb
sbb
push
stc
add
mov
xor
xchg
outsb
dec
lock
push
jmp
mov
int3
popa
pop
sti
inc
xchg
xchg
popf
xor
fs
js
dec
cmp
xchg
fdivrl
jne
out
stos
and
loope
add
lahf
fcompp
pop
inc
mov
loopne
jb
jmp
push
cmp
add
mov
xor
and
xor
jmp
imul
mov
cmpsb
xlat
jne
das
and
fmull
fnstsw
and
pop
mov
divl
das
test
pop
aam
mov
sbb
in
aam
incw
fdivs
popf
leave
and
pop
ret
inc
adc
add
pop
fadd
addr16
ja
jnp
sub
cmp
xor
outsb
jbe
pop
ja
jg
xor
leave
jnp
into
outsb
int
movl
xor
jmp
mov
mov
dec
ret
mov
bound
or
add
testb
movsl
inc
call
adc
das
mov
inc
psubb
orb
lods
xor
orl
popa
pop
cs
gs
popa
loopne
inc
imull
mov
adc
cmp
jmp
orl
push
fwait
sbb
repz
pop
pop
lahf
jo
sbb
lcall
daa
pop
adc
js
fdivl
dec
xchg
inc
and
and
inc
mov
loope
popf
jge
idivl
es
add
fimuls
inc
out
cmp
mov
loope
and
push
adc
lret
popf
jo
lds
lods
daa
add
loope
fisubrs
popa
fcmovnb
adc
aaa
fs
or
inc
mov
into
aaa
dec
outsb
sub
add
fists
xchg
arpl
or
or
push
xchg
inc
idiv
sub
insl
xchg
jmp
lods
enter
dec
adc
leave
iret
xor
dec
inc
loopne
iret
mulb
lock
sub
pop
and
xchg
sbb
fsubrs
notl
fcoml
sub
push
movsl
push
stos
imul
fwait
rcll
test
sub
and
pop
ret
sbb
popa
or
add
pusha
dec
push
test
push
push
sub
sbbl
arpl
mov
add
inc
or
xchg
adc
outsl
imul
daa
xchg
dec
xor
push
adc
pop
sbb
adc
shrb
sub
or
xchg
inc
dec
jbe
push
lods
sbb
mov
mov
sbb
or
xor
call
and
shlb
movsb
les
xchg
xor
aas
adc
and
add
adc
repz
test
loop
dec
jl
jmp
add
push
lods
dec
loop
push
adc
jbe
mov
mov
call
daa
inc
or
push
adc
sbb
daa
push
sarb
inc
call
and
ret
mov
lret
movlps
or
aas
mov
sbb
xchg
das
and
adc
mov
cmp
ficoms
mov
inc
push
mov
jo
pop
cmp
fisttps
mov
adc
jb
scas
sub
dec
scas
cmp
sub
push
in
cmpsb
fs
mov
in
adc
rclb
rcrb
push
jae
xor
repnz
cmpsl
pop
mov
jbe
push
xlat
jo
lock
sbbb
jl
dec
fucomp
mov
xor
jl
and
leave
scas
lods
je
lock
ljmp
popa
addl
stos
pop
fsubl
mov
lret
sbb
jle
lods
fisubs
enter
xorb
push
push
xchg
sub
xchg
rcl
das
popl
inc
sbb
nop
outsb
insl
cwtl
sub
insb
addl
and
lods
data16
insl
loopne
insb
js
xchg
lahf
repnz
shlb
je
push
and
sub
rorl
adc
mov
iret
push
popa
jl
sub
fwait
imul
fwait
test
in
jge
data16
add
adc
iret
mov
lea
insb
adc
xor
dec
sbb
lods
push
mov
push
xchg
and
xor
frstor
mov
push
out
sub
adc
dec
movsb
dec
inc
outsl
adc
out
lods
mov
imul
xor
ja
or
mov
daa
shr
xlat
imul
push
add
ficoml
and
mov
jne
jb
aaa
mov
jae
add
and
popa
dec
cmp
sbb
cltd
add
add
test
cmp
enter
ret
sub
and
jmp
js
out
lcall
add
sub
shrb
dec
or
test
xorb
adc
clc
push
push
jle
or
aam
testl
jno
dec
faddl
movsb
add
test
inc
xor
out
and
add
stos
dec
mov
jnp
pop
popa
sti
ljmp
daa
xchg
daa
xor
cwtl
notb
cwtl
js
jge
seto
push
sub
into
call
inc
lods
scas
int
xorb
insb
or
sbb
ja
mov
cmpsl
cmp
jae
dec
stc
xor
xor
push
outsb
xor
jb
leave
dec
xor
arpl
adc
cld
cmp
add
xor
pop
dec
pusha
loop
lret
fstps
js
pop
xchg
or
mov
jo
addl
cli
out
xchg
xchg
adc
mov
inc
mov
gs
or
jecxz
xchg
adc
pop
mov
or
hlt
dec
push
gs
jns
or
mov
jb
push
hlt
sbb
pop
adc
iret
enter
int
adc
jmp
les
inc
sub
xor
push
imul
mov
scas
or
inc
adc
nop
jae
dec
das
cld
test
mov
and
pop
insl
xchg
mov
dec
jo
int
add
stos
xchg
mov
cmp
popa
rcrl
jns
mov
or
or
pop
adcb
seto
pop
pop
push
ds
sub
mov
sbb
cwtl
cmp
push
or
addb
mov
es
les
aaa
mov
mov
or
int
xor
mov
add
adc
add
dec
dec
sbb
and
push
subb
out
cmp
xor
adc
sub
pop
add
cmp
sub
rolb
lret
add
pop
mov
dec
repnz
pop
aam
add
fadd
add
rcl
pushw
xchg
sub
iret
inc
lds
pop
xor
adc
add
cmp
lods
outsb
push
sub
sbb
jmp
mov
bound
roll
stc
add
sbb
push
iret
xlat
add
xor
lock
add
sub
and
xchg
add
insb
add
mov
xchg
iret
lods
add
adc
and
add
jno
or
outsb
outsl
xor
xchg
pop
adc
push
fcmovnu
inc
daa
movsb
sub
dec
pushf
xor
push
mov
pusha
sbb
fld1
sbb
mov
pop
daa
popa
add
and
add
cmpsl
jmp
dec
pop
jno
mov
xchg
add
xor
inc
fiaddl
scas
dec
pop
sarb
adc
sbb
push
and
or
sbb
jo
icebp
in
jg
pushf
test
je
dec
imul
mov
add
popa
movsb
in
test
mov
insl
fildll
cli
cmp
out
int3
scas
add
mov
adc
pop
addr16
rolb
push
mov
cwtl
sbb
rcrl
andl
popa
dec
pop
nop
lock
jae
push
pop
dec
fcoml
in
add
and
jne
test
add
mov
jmp
add
movsb
loope
inc
xorl
add
and
repz
add
shl
add
fidivs
push
or
adc
fsts
sbb
and
xchg
aaa
sti
xchg
xor
add
in
push
mov
sbb
or
add
sbb
add
dec
push
pusha
hlt
add
adc
mov
cmp
sub
jno
mov
mov
pop
cmp
nop
dec
xor
and
imul
out
or
sub
int3
out
mov
adc
mov
fisubl
cmp
inc
jb
and
inc
fsubl
sbb
pushf
and
popa
shl
aaa
adc
xor
add
out
mov
scas
imul
push
jle
pusha
and
dec
push
lret
pusha
cwtl
fs
add
adc
jne
fsubp
pop
mov
dec
and
aaa
loope
dec
push
or
inc
mov
add
xorb
cltd
mov
add
loope
aad
ror
or
shlb
lods
add
xchg
add
xchg
test
jo
sahf
popa
das
mov
in
mov
push
add
mov
pusha
add
mov
push
stos
addr16
dec
and
xor
loopne
int
pusha
sbb
ret
xchg
addl
mov
sub
scas
cmpsl
cmc
and
jo
or
xor
leave
xchg
or
ss
adc
push
push
pop
outsb
rol
ds
xchg
andl
aaa
xchg
loope
jle
fbstp
outsb
push
icebp
les
dec
push
inc
mov
rclb
testl
add
rorl
clc
push
ret
rclb
and
jp
pop
push
push
cltd
fs
sbb
rcll
or
pop
insl
mov
test
aaa
fs
ret
enter
push
cmp
fwait
pop
out
pop
imul
enter
movl
adc
add
data16
mov
adc
fnstenv
add
pushf
add
and
add
mov
daa
orw
lods
aaa
xor
xor
and
in
mov
push
loope
ret
aam
push
sbb
or
or
lods
out
cs
push
leave
mov
les
add
cmc
lods
add
add
and
dec
in
and
mov
outsl
dec
loope
bound
fsts
scas
push
and
lods
ret
fdivl
cmc
aaa
adc
enter
pop
jo
mov
and
add
and
add
add
lock
jecxz
in
xchg
mov
stos
arpl
mov
fsubp
ret
loope
mov
fdivrl
faddl
scas
fcoms
mov
stos
or
mov
xchg
aaa
roll
jno
mov
push
mov
mov
or
sarl
xchg
outsb
xor
int3
fcom
aad
push
adc
out
cs
les
sub
pop
das
xlat
fdivrl
inc
lods
gs
sub
push
test
mov
inc
dec
test
pop
mov
inc
lahf
popf
mov
dec
jns
lods
xchg
xchg
and
loope
add
loop
movsb
stos
and
and
loop
imull
dec
test
repnz
sub
pop
js
inc
sub
mov
ret
sub
leave
sbb
xor
dec
fs
rcll
ss
and
sub
and
pop
inc
lcall
xchg
loopne
lahf
jmp
arpl
add
push
or
loopne
loopne
out
push
inc
sub
daa
push
add
cli
mov
xchg
test
inc
xor
dec
inc
sub
or
xchg
add
push
inc
mov
mov
aas
mov
cmp
xchg
int
dec
les
popa
faddp
xor
sbb
icebp
add
jecxz
mov
outsb
dec
or
test
mov
jo,pt
cld
in
ret
loopne
mov
mov
movl
xlat
pand
sbb
inc
add
or
gs
sbb
add
shl
jne
pop
lret
incl
cmp
addb
jno
push
sbb
cmpb
or
pusha
sbb
cmp
mov
add
inc
jecxz
jns
fists
add
adc
push
lock
lock
or
xlat
xchg
add
sti
daa
push
outsb
je,pn
xchg
rclb
and
out
mov
dec
fdivrs
add
shl
add
mov
adc
push
or
imul
mov
inc
and
dec
cmpsb
add
test
push
addr16
dec
addl
jl
test
adc
xchg
adc
dec
scas
imul
pop
inc
sbb
inc
fbld
mov
jns
test
dec
cmp
lods
aas
je
ja
pusha
fcomip
add
and
inc
dec
cmpsl
sub
add
sbb
imul
add
adc
mov
sbb
jne
cmp
hlt
test
ljmp
and
push
andnps
push
pop
mov
sbb
sbb
push
mov
addl
ret
aam
adc
adc
push
and
ret
loopne
push
roll
and
imul
inc
bound
push
shll
mov
pop
and
add
xchg
dec
lret
mov
rorb
aad
mov
or
push
dec
js
add
and
cmp
outsb
pop
ljmp
or
mov
sbb
sbb
jge
fsubl
sahf
mov
xchg
or
es
addr16
jp
xchg
mov
sbb
xchg
in
or
or
push
pop
jp
jl
call
fldt
inc
js
adc
scas
mov
sub
fimuls
mov
push
out
adc
lcall
pop
call
or
sbb
mov
lods
addr16
int3
daa
adc
mov
ret
xor
jo
xorl
mov
or
imul
iret
fs
jmp
sbb
mov
test
pop
dec
sbb
adc
cmp
sarb
mov
mov
das
adc
imul
add
aaa
cmpsb
nop
adc
daa
xlat
gs
insb
clc
out
mov
or
es
gs
mov
mov
lock
push
mov
jmp
test
and
daa
and
out
nop
fadd
add
push
xor
lock
sub
lods
test
and
ror
jbe
pop
loope
cmp
inc
sbb
clc
rcr
roll
inc
bound
or
adc
adc
ja
arpl
or
inc
pop
rclb
clc
imul
push
test
fcmovu
lret
loope
and
aam
add
xchg
mov
sub
mov
add
jecxz
push
lods
je
mov
into
push
xchg
cmp
mov
push
shrl
aad
add
lods
mov
or
dec
jle
adc
rolb
movl
iret
out
xchg
aad
or
adc
mov
test
lods
push
repz
fwait
inc
and
jge
mov
pop
movsb
xchg
addl
shrb
fwait
pop
xchg
add
sbb
sbb
lods
and
add
or
mov
jl
leave
push
push
adc
loope
shl
lret
jmp
and
mov
sub
pop
lds
mov
enter
mov
mov
mov
dec
andl
shrd
mov
jecxz
add
iret
popa
jp
shrl
sub
mov
pop
add
inc
daa
test
lahf
add
inc
sbb
mov
mov
sub
test
sub
push
adc
inc
add
add
js
dec
mov
pop
and
jl
adc
add
jl
or
cli
jns
and
add
mov
adc
sbb
aad
jp
dec
daa
add
bound
xchg
xchg
loope
xchg
xchg
sbb
movsl
jne
xor
inc
ficoms
test
dec
or
lock
cltd
and
pop
stos
test
in
repnz
mov
aam
and
add
cltd
stc
xor
outsl
inc
jmp
mov
repz
cmc
lahf
jbe
cwtl
pop
fs
loope
pop
or
mov
dec
add
jle
sbb
pop
aam
js
leave
or
sub
add
mov
pushf
adc
and
pop
loope
ret
mov
and
push
mov
mov
aad
dec
ljmp
ljmp
imul
lea
adc
cmpsb
fs
pop
mov
out
rorl
jl
sub
test
or
cli
jne
mov
sub
mov
or
xlat
pop
adcb
and
inc
loope
aad
das
jmp
sti
movsb
adc
xchg
xor
xor
and
cmp
dec
xlat
push
ret
cmp
xchg
mov
sahf
jge
sub
sbb
sbb
xchg
push
adc
jo
out
dec
push
xchg
push
mov
dec
loope
add
push
jbe
cmp
daa
sub
rorl
das
pop
xor
mov
ret
addl
add
dec
inc
pop
mov
repnz
aam
cld
add
add
mov
cmp
jl
pop
shrb
and
sub
mov
xchg
mov
rorb
pusha
rorl
andb
fildll
xor
cmp
aaa
add
xchg
adc
xor
dec
cltd
adc
in
jmp
xor
or
mul
lds
mov
add
and
fnsave
add
enter
adc
sbb
scas
lret
mov
ret
xchg
popa
mov
pushf
sbb
mov
lret
adc
scas
cmp
std
movsl
cmp
loope
mov
lea
sub
movsl
xor
lods
addr16
jg
inc
push
sbb
lret
fidivs
xor
shrb
call
jge
mov
movsb
addr16
sub
sub
cmpsl
mov
inc
adc
jg
or
xchg
add
pop
or
or
or
xchg
add
and
jmp
pusha
pop
jecxz
jmp
stos
mov
or
lods
xchg
mov
stc
mov
lds
pushl
mov
rclb
inc
lret
adc
jo
dec
and
add
sbb
push
push
aaa
xchg
add
pop
adc
add
js
out
adc
fwait
stc
jg
jge
sub
pop
scas
movsl
cmp
or
inc
jecxz
inc
sahf
ljmp
xor
and
jge
sub
or
subb
rclb
mov
lock
dec
outsb
dec
add
fnsave
inc
jecxz
lods
mov
movsl
adc
and
and
mov
inc
jle
jle
mov
scas
fcompl
mov
jmp
sub
mov
iret
jl,pn
pop
movsl
divl
shrb
sti
inc
or
ret
pop
lret
or
in
and
divl
fimuls
or
cli
sti
iret
push
mov
push
mov
adc
test
popa
movsl
sti
sub
ret
dec
nop
daa
and
add
lods
arpl
mov
es
dec
adc
pop
jecxz
inc
inc
add
xor
aad
sbb
dec
pusha
lea
test
loopne
das
int3
pop
into
adc
xchg
je
adc
ljmp
jae
imul
addr16
movsl
iret
shlb
fadds
or
add
sbb
hlt
imul
pop
mov
mov
dec
push
inc
add
or
pop
add
jo
lock
jnp
add
and
fisubrl
add
sub
es
aam
xchg
movl
or
out
cmpsl
addl
add
xor
iret
xchg
mov
mov
int
daa
shrl
adc
add
popf
cmpsb
iret
int3
je
rorl
add
or
mov
jmp
js
pop
jmp
xor
loope,pn
xorb
mov
pop
lret
into
add
push
xor
xchg
test
std
push
orl
add
inc
test
rol
out
daa
jbe
scas
insl
cmp
inc
shrb
call
inc
cli
inc
fsubp
imul
sbb
adc
push
iret
xchg
je
cmp
outsb
cltd
jle
jns
addb
xor
mov
add
into
dec
movsb
loopne
clc
mov
mov
cmp
adc
push
divl
loopne
sub
sbb
shlb
jns
and
pop
enter
push
test
inc
sub
sahf
je
inc
adc
orb
ss
xlat
push
cwtl
call
inc
test
mov
push
inc
mov
lahf
dec
movb
enter
jne
pop
lret
dec
jmp
pop
inc
in
sub
jmp
icebp
xchg
addr16
insb
movsb
xchg
mov
mov
insb
add
pop
jbe
icebp
jnp
mov
and
cmp
mov
sbb
jnp
sub
sub
jle
mov
leave
pushf
sub
mov
sub
sbb
incb
mov
sbb
pop
popl
adc
subl
scas
loop
or
stos
movsl
push
lock
jg
cmp
jecxz
or
clc
or
sbb
pop
jge
cmpsb
repz
sbb
or
pop
dec
lret
mov
outsl
inc
sub
test
fsubrl
or
je
std
ret
mov
outsl
pop
mov
in
into
or
push
push
pop
jp
or
aad
mov
ss
xchg
xor
faddl
and
movups
nop
hlt
enter
in
pop
add
xor
jle
cltd
mov
insb
das
addl
inc
lret
mov
sub
pop
xor
hlt
loope
inc
enter
daa
int
push
ss
sbb
or
mov
pop
push
or
fbld
into
lock
adc
pop
add
jp
sub
mov
hlt
adc
mov
xor
vmovhpd
lock
shll
int
jbe
rcl
imul
leave
cmc
sub
mov
lea
arpl
enter
and
sub
pop
xlat
rorb
fwait
mov
adc
inc
mov
or
push
adc
pop
mov
les
sbb
daa
je
loope
mov
stos
jno
inc
scas
adc
jl
ficomps
xchg
or
test
jle
insb
mov
cmp
push
roll
sub
xchg
cmpsb
dec
xor
shlb
test
cwtl
pop
rol
enter
xor
or
subl
and
sub
stc
popa
mov
mov
and
mov
adc
dec
mov
xchg
jo
sarb
pop
enter
daa
test
stos
mov
add
cmp
adc
bswap
mov
gs
pop
fwait
mov
andl
scas
jnp
xchg
pop
xor
inc
scas
xor
movsb
adcb
sbb
or
enter
or
out
bndldx
xlat
mov
jnp
pop
mov
adc
fsub
mov
js
lods
sbb
sub
shrb
and
or
lock
xchg
fsubs
call
pop
xor
int3
and
jne
xor
popf
out
and
fucomp
movsb
adc
insl
inc
and
cmp
xor
jno
xor
push
loope
pop
lret
xor
cmp
iret
xchg
fstps
loope
dec
xchg
pushf
test
in
adc
addr16
aam
add
loope
xchg
sbb
bound
movsl
das
leave
adc
or
xlat
sub
xchg
js
incl
and
add
jmp
call
xchg
lds
outsb
xchg
lods
lods
adcl
stc
mov
or
bound
push
imul
sbb
inc
jge
cmp
mov
cwtl
ss
jge
imul
pop
jle
clc
pop
enter
out
push
jmp
cmpl
add
or
pop
inc
sub
inc
imull
pop
loop
cmp
fs
push
popa
inc
xchg
sub
aam
pop
adc
and
iret
jmp
aam
push
imul
andl
xchg
mov
or
sub
lods
jne
sarb
movl
and
xchg
mov
xor
pop
dec
movsl
movb
sarl
and
sbb
cmpsb
jmp
mov
cmpsb
inc
pop
out
jbe
mov
pusha
mov
sbb
and
mov
jecxz,pt
pop
sbb
mov
cltd
dec
or
push
mov
pop
push
or
adc
inc
fucomip
aaa
mov
push
mov
pusha
ret
ret
lods
inc
inc
iret
cmpsb
push
outsl
add
inc
jno
jo
add
das
sub
and
arpl
xchg
addb
js
add
xor
decb
das
add
je
xchg
or
gs
mov
xorb
pop
lds
into
sub
xchg
xchg
pop
fsubrs
dec
and
loopne
fsubp
test
ja
in
xor
popf
adc
pop
push
sub
lock
xor
or
add
cmp
and
cmp
cmp
lock
push
add
adc
out
negb
dec
sbb
jle
arpl
shr
lods
sbb
fsubs
nop
pop
and
ret
sub
or
loopne
dec
mov
or
insb
jo
andb
repz
xlat
adc
xorl
and
jo
mov
sahf
pop
jo
enter
sub
cs
cmp
mov
push
mov
rolb
pop
pop
sar
dec
push
addr16
pop
push
loopne
test
push
adc
pop
inc
xlat
add
fcmovu
or
leave
pop
fisubs
sub
lock
dec
dec
and
cmpsb
mov
add
sbb
scas
or
xor
into
ja
pop
roll
adc
adc
test
pop
add
fists
add
add
jb
mov
movsl
and
cmp
popa
add
hlt
fiadds
frstor
test
xor
andb
test
add
jno
xchg
mov
ret
test
mov
ljmp
loopne
rclb
ss
adc
add
insb
roll
es
loope
mov
insb
cmpl
shr
add
sbb
push
or
lods
xchg
lea
scas
xor
xchg
test
jl
dec
push
call
nop
ret
fnsave
mov
mov
jb
insb
xchg
je
inc
inc
push
or
out
pop
fs
imul
loopne
notl
or
adc
inc
ret
sarb
outsb
or
adc
lcall
ja
lcall
insl
cmp
cltd
mov
add
dec
inc
mov
inc
dec
inc
mov
add
in
jge
cltd
push
jae
inc
push
jmp
cmp
es
inc
inc
icebp
jp
bound
es
sbb
loopne
push
stos
inc
insl
xorl
nop
push
pop
fdivs
mov
jl
arpl
mov
sti
fnsave
test
subb
pusha
pop
pop
loope
xor
movsb
and
imul
or
cmpsl
lcall
iret
stos
stc
or
jne
repz
iret
iret
inc
push
adc
inc
lahf
xor
xor
sbb
and
imul
mov
jns
sbb
mov
jno
and
insl
rcrl
stos
mov
jle
adc
cmp
mov
in
arpl
cmpsb
icebp
fs
xor
sbb
test
adc
inc
int3
and
xor
shlb
dec
jecxz
inc
and
jecxz
mov
xchg
mov
cmp
sub
pop
xorb
dec
loop
mov
aaa
mov
and
mov
add
cmpsb
and
outsl
mov
inc
and
cld
loop
dec
int
mov
sbb
lods
aad
xor
cmpsl
fdivrs
imul
mov
jo
xchg
jmp
xchg
push
add
pop
xchg
decb
in
or
xchg
mov
dec
shlb
jp
jno
mov
test
or
mov
sub
xor
cmp
push
or
insb
xchg
nopl
dec
je
stos
mov
lea
clc
add
sbbb
and
cmp
es
dec
or
mov
iret
fsubl
cmpsl
sbb
aas
inc
enter
int3
add
shrl
or
std
inc
stos
jno
xchg
ficomps
push
push
jnp
inc
pop
pop
test
cmp
sbb
push
sub
out
iret
jno
dec
add
add
out
test
or
leave
mov
out
add
iret
jle
loopne
addb
mov
imul
mov
repz
les
pop
cmp
mov
movsl
les
lods
mov
iret
adcl
jp
pusha
pop
sub
cmp
mov
aas
cmc
les
xchg
fldcw
sahf
scas
add
js
jo
popa
out
dec
xor
scas
lock
gs
scas
adc
cmp
mov
sbb
dec
fucomip
sbb
popf
push
fiadds
outsl
loope
push
or
test
add
and
mov
sbb
mov
mov
add
dec
jbe
add
sub
xchg
push
test
subb
filds
xor
inc
push
push
cwtl
lods
cmc
sub
imul
xor
dec
sbb
aaa
dec
daa
iret
xchg
nop
and
fdiv
aad
inc
aam
imul
jo
cmpsb
mov
sub
ret
cmp
add
mov
mov
repnz
or
cmpl
ret
mov
sarb
add
push
lods
and
js
in
ret
or
cmp
or
adc
add
sub
cmpsl
fst
mov
sub
outsl
add
sub
mov
or
push
arpl
sbb
pushf
add
xchg
cmp
inc
scas
and
and
test
scas
lret
clc
and
lock
inc
loopne
mov
cmp
sub
sbb
popf
adc
test
ss
enter
out
inc
jnp
stos
nop
mov
into
stos
addl
gs
ja
cmpsb
mov
cmp
pop
inc
cmp
xchg
fs
jp
lods
and
cmc
mov
mov
add
int3
test
fadds
fcmovnu
xchg
xor
or
mov
xor
mov
sub
or
mov
sbb
js
xchg
push
loope
das
adc
mov
mov
incb
bound
std
pusha
pop
inc
ljmp
in
dec
xorl
ret
mov
sub
sahf
xchg
cmp
movsl
js
dec
cmp
in
in
or
shrb
sbb
popa
xchg
xor
lahf
in
les
daa
mov
shlb
lea
mov
fcomps
ret
or
es
fnclex
add
repnz
stos
inc
je
push
add
test
adc
inc
cmp
dec
test
out
sbb
es
sbb
fldcw
xorl
jns
inc
cmp
mov
fdivrs
push
pop
sbb
inc
icebp
pop
outsb
and
and
imull
loopne
or
adc
sub
inc
popa
arpl
movsl
cmp
ficomps
pusha
jmp
in
in
arpl
loop
add
push
sbb
jno
inc
sub
scas
fldcw
mov
icebp
pop
jbe
cmpsb
adc
js
out
outsl
adc
ret
stc
jo
pop
ds
mov
push
mov
push
mov
les
adc
or
inc
inc
push
or
push
popf
and
or
or
add
xor
cmp
and
test
mov
sbb
push
xchg
sahf
mov
jmp
pop
or
mov
push
bound
inc
cmpsb
jbe
cmp
and
jl
dec
ret
or
xchg
test
mov
shr
mov
inc
sub
mov
adc
dec
add
lea
loop
pushw
mov
cmp
mov
ret
or
fisubl
inc
inc
pop
imul
mov
lret
adc
ret
dec
adc
add
mov
mov
iret
mov
scas
xchg
and
bound
push
sbb
push
scas
lods
pop
hlt
jmp
sbb
xor
or
mov
dec
sahf
cmpsl
pop
sbbb
leave
lahf
test
dec
inc
mov
push
dec
xor
add
push
fstpt
xchg
out
pusha
and
cmpsl
adc
push
pop
xchg
loop
inc
scas
sbb
sbb
cmp
call
int3
sahf
push
sub
sbb
inc
test
mov
mov
adc
dec
or
nop
add
sbb
and
arpl
ljmp
enter
sbb
int
clc
repnz
or
movsl
je
aas
sub
jne
xor
imul
les
fnstsw
stos
fdivl
cmp
sbb
sbb
ret
adc
lds
sbb
adc
cmp
popa
or
leave
pop
pushf
sbb
jbe
add
lds
mov
ret
jb
and
jnp
jge
aam
ret
mov
iret
add
jecxz
cltd
dec
iret
sub
inc
ja
inc
and
inc
fisttpll
call
pop
out
mov
cmc
test
cmp
lea
lods
int3
and
mov
pop
pop
rorb
fists
xor
adc
rcrb
jp
xor
scas
hlt
stos
jbe
iret
or
loop
lods
jbe
insb
add
repnz
mov
jmp
fistps
pop
lock
out
mov
cltd
lret
mov
sbb
xchg
sub
sbb
jno
and
xchg
sub
loope
inc
pushf
cmp
add
cmp
inc
js
xorl
enter
jo
xor
cli
fdecstp
and
mov
or
sbb
rclb
pop
jl
inc
leave
adc
sub
inc
jmp
push
lahf
sbb
xchg
cmp
imul
dec
dec
js
fcoms
cmp
xor
xchg
mov
jno
add
and
call
movsb
or
push
pop
ret
sbb
or
jl
adc
addr16
gs
and
pop
pushf
and
dec
aam
loopne
cmp
jge
lods
ja
or
add
movsb
mov
inc
pop
or
fwait
rolb
and
test
xor
mov
pusha
mov
add
loop
pusha
push
out
dec
cmp
nop
mov
and
cli
inc
pop
aaa
dec
xor
ret
cmc
or
sub
sub
mov
inc
inc
sbb
or
jmp
cs
shrb
dec
hlt
lahf
movsl
sub
aas
ret
mov
xor
push
push
std
cmc
xorl
gs
mov
cld
test
test
enter
or
xor
xor
xchg
dec
dec
xchg
ret
test
movsl
mov
cmp
push
cmp
aad
xchg
push
xchg
jno
inc
push
mov
ret
imul
out
lret
xor
xchg
add
lea
dec
gs
cmp
push
out
movsl
fucomip
out
insb
dec
sbb
adc
push
pushw
adcb
or
fdivl
inc
mov
dec
mov
push
movsb
lahf
push
outsl
xchg
fsubr
inc
outsl
inc
lea
je
movsb
pop
push
jmp
pop
pop
mov
pusha
dec
mov
je
test
or
lret
cmp
jmp
mov
in
faddp
sbb
or
dec
lock
hlt
add
lods
pusha
and
insl
outsb
sub
loope
scas
popa
add
leave
mov
cwtl
int3
loope
sub
leave
or
mov
jo
sbbl
sbb
iret
sbb
mov
rcll
ret
dec
insl
out
out
add
shlb
mov
add
xor
xor
nop
imul
or
ret
push
data16
icebp
and
add
and
dec
sub
movsb
xor
ja
cmp
add
sbb
andb
pusha
jecxz
adc
or
outsb
and
faddl
adc
pop
popa
js
push
loope
mov
pusha
inc
filds
inc
xchg
inc
xor
jmp
or
imul
mov
das
lcall
arpl
xor
pop
jno
pop
push
and
adc
xchg
mov
adc
test
ljmp
call
pop
lock
xchg
daa
lock
data16
sbb
add
insl
xchg
jne
mov
mov
or
cmp
cmc
je
adc
jbe
mov
pop
lods
add
add
and
je
cmp
shll
js
mov
sub
cmc
ret
sub
push
or
adc
push
stos
cmp
xor
js
movsl
jecxz
jb
adc
sbb
stos
addb
dec
or
adc
adc
mov
das
push
or
or
mov
pop
inc
fs
jp
and
out
push
or
loopne
mov
xor
mov
cs
pop
or
retw
popa
lds
lret
mov
cmp
and
fldenv
push
xlat
jle
das
into
loop
test
ret
sbb
push
xchg
pusha
and
jle
addr16
test
jg
push
dec
fwait
and
push
insb
add
rclb
aas
xor
sub
sub
pop
dec
scas
sbb
inc
dec
imul
jno
sbb
lret
and
mov
inc
adc
mov
pop
addr16
pop
out
add
imul
adc
fwait
xchg
rolb
xor
out
incl
push
or
mov
and
xor
mov
and
or
or
out
jmp
mov
sbb
ja
out
loope
add
ljmp
inc
or
jbe
fadds
popa
mov
push
fmuls
cmpsb
jnp
sbb
sbb
mov
mov
lock
je
push
dec
fists
cmp
jge
std
into
ficompl
loope
lock
lods
jbe
fisubl
dec
jb
jbe
cmp
and
and
push
scas
xlat
lods
icebp
and
or
gs
sbb
push
cmc
xchg
lret
mov
xchg
fwait
pusha
lods
nop
jae
popl
xor
insb
call
fwait
iret
jmp
insb
xor
dec
inc
mov
jo
mov
inc
int
lret
fisubs
sbb
add
xchg
cmpsb
push
pop
jno
adc
sbb
cltd
stos
mov
xor
xor
jecxz
mov
xchg
imul
pop
pushf
fcmovne
sahf
cmp
and
fiadds
pop
aad
cltd
cmpb
sub
pushf
xor
dec
adc
xchg
sti
cmpsb
ret
add
imul
outsb
add
movsl
xchg
xor
cld
ret
inc
cmp
adc
lods
shrd
js
jne
sbb
pop
add
pop
aaa
iret
cs
pusha
rol
jno
stc
add
ljmp
dec
pop
subb
das
ret
popa
or
and
out
popa
and
add
pcmpeqb
stos
xor
addb
mov
or
xlat
sub
test
ja
adc
pop
lods
rorb
aad
gs
test
adc
int
ljmp
gs
lret
sbb
pop
orl
shrl
popa
dec
add
imul
dec
ja
mov
inc
cli
ss
mov
dec
popa
lock
jno
mov
mov
push
pop
sbb
push
push
mov
mov
popf
xlat
mov
xchg
jne
stc
sbb
mov
push
add
test
jmp
sarb
fsubr
or
repnz
sbb
std
mov
rcl
rcl
jp
xlat
mov
aam
je
adc
xor
ds
ss
mov
add
das
pusha
lods
insb
sahf
jp
add
imul
jle
ljmp
push
xchg
sti
pusha
cmp
ror
fnsave
cmp
mov
push
imul
push
outsb
lret
jge
jg
xorl
fisubrl
imul
sbb
lods
add
cmc
xorl
fwait
sub
dec
and
arpl
mull
mov
inc
adc
pop
sub
gs
cmp
adc
dec
or
add
bound
or
lea
jp
push
mov
and
add
push
outsl
push
jbe
lret
mov
loopne
push
pop
sbb
scas
lock
adc
scas
out
sti
call
insb
in
add
dec
pop
push
pop
jno
insl
popf
mov
dec
daa
add
mov
adc
clc
fsubrs
and
cmp
dec
sbb
push
fxch
test
movsl
jne
mov
adc
movsb
add
cld
lock
leave
sarl
sub
fnstcw
cmpl
sbb
push
pop
int
jb
dec
aaa
cmpsl
push
lret
add
imul
pusha
jmp
stos
fadds
push
out
mov
sarb
jl
outsl
faddl
iret
fistl
and
sbb
adc
fs
add
add
fimuls
and
cvtpi2ps
je
cmc
popa
popf
fcompl
movsl
lea
xchg
sub
xchg
push
pop
jg
sub
push
aam
pusha
push
mov
add
jbe
push
dec
sub
sbb
scas
dec
jnp
adc
sbb
push
inc
pop
das
lods
cmpsl
and
fcmovb
dec
imul
movsb
inc
pusha
cmp
cmp
mov
add
cld
lcall
cmpsl
mov
jmp
js
popl
jmp
add
add
jo
xchg
xor
xchg
add
ret
sbb
movsb
xor
movl
mov
xchg
mov
push
add
mov
lahf
out
push
adc
xchg
or
sarl
cmpsl
xlat
or
aaa
lods
jno
ja
das
lret
mov
cmc
rcrl
lock
in
lcall
stos
mov
pop
cli
sub
and
ret
scas
lret
jo
xor
cmc
lods
out
test
pushf
xor
fadd
pop
push
ret
out
dec
in
jp
stos
xor
dec
js
insb
sbb
mov
test
dec
xor
push
das
scas
sub
or
stos
es
sub
pop
inc
in
push
adc
cmp
add
in
sarb
lods
jle
cmp
sbb
popa
enter
roll
out
and
and
pop
add
inc
data16
dec
js
and
cld
xchg
popa
cmp
fs
jmp
adcb
or
dec
inc
ja
dec
sbb
das
or
into
rcr
inc
and
sub
das
add
push
les
sbb
pop
mov
insl
push
enter
pusha
dec
sbb
dec
or
or
mov
adc
mov
and
sbb
xor
sub
cmp
popa
dec
mov
mov
ret
pusha
dec
inc
sbb
gs
lods
push
xchg
mov
arpl
add
lcall
stos
arpl
inc
sub
cmpb
push
pop
inc
int3
lret
fadd
in
dec
mov
push
mov
test
dec
sub
loopne
ds
cld
addr16
adc
or
iret
les
paddd
xor
add
or
in
jg
mov
cli
stos
sub
loopne
and
cwtl
xor
aas
scas
cmp
lods
std
jge
sub
jl
shrb
pop
das
addr16
dec
mov
jno
add
aas
aas
fdivs
jecxz
pop
xchg
add
pop
sub
daa
push
loopne
push
and
and
ja
je
jne
sub
dec
mov
add
dec
bound
inc
add
movsl
adc
push
pop
jae
mov
movsb
jno
int
movsb
test
push
sbb
insl
add
ja
jmp
loop
mov
shrb
scas
lock
je
imul
and
nop
sahf
cmp
mov
cmp
push
loop
mov
pop
imul
dec
jp
lods
ja
test
dec
rolb
dec
addr16
hlt
mov
mov
adc
mov
cmp
scas
jns
imul
movsb
mov
shlb
mov
pop
adc
xchg
adc
sbb
mov
outsl
test
shrl
xchg
xor
add
mov
jp
dec
arpl
inc
fs
ljmp
cmpsb
xorb
fwait
cmpsl
add
and
fnstcw
test
push
nop
mov
movsb
sub
mov
xor
push
lret
scas
adc
or
ret
add
bswap
jbe
leave
push
push
lods
mov
ja
das
pushf
push
pusha
sbb
in
roll
and
sub
inc
push
mov
outsl
pop
pop
and
into
push
daa
jl
lret
cmp
add
mov
into
or
inc
xor
mov
mov
add
inc
inc
cmc
testb
in
jb
or
mov
rclb
and
aas
fs
pop
push
loope
js
imul
repz
add
lods
or
in
frstor
mov
mov
or
jnp
jbe
xor
or
imul
xor
je
dec
xor
xor
jo
xor
jle
sbb
dec
xchg
sbb
xchg
stc
push
or
add
je
dec
jnp
addl
es
pop
out
or
test
pusha
add
lahf
fs
repnz
mov
xlat
and
mov
xchg
rcll
add
std
and
ret
cmp
popf
pop
mov
push
jno
jmp
jbe
fbld
icebp
sub
sbb
lea
hlt
das
sbb
push
lcall
xor
lods
enter
mov
inc
xchg
lods
sti
inc
aam
cmp
add
xor
push
add
nop
or
sbb
pop
mov
sub
imul
lea
adc
and
xor
enter
ljmp
movsb
add
adc
pop
xchg
cmp
movsl
rclb
in
in
add
std
std
push
mov
dec
pop
and
arpl
fwait
insl
loope
loopne
xrelease
nop
or
rol
jmp
enter
cmp
cmpsl
push
inc
arpl
rorb
into
add
xor
fldl
push
loop
call
arpl
add
iret
cmp
repnz
pop
sub
movsb
pop
inc
or
test
add
inc
sbb
inc
bound
sbb
and
or
shll
and
push
lahf
lret
rol
jl
sub
mov
or
xchg
fiaddl
pop
lret
dec
sbb
or
mov
jbe
dec
ret
xchg
lods
mov
add
in
or
mov
mov
flds
data16
lret
addb
adc
xchg
cmp
ret
dec
fldl
push
inc
faddl
mov
leave
pop
push
or
insl
xor
pop
sub
adc
out
enter
lret
popa
in
mov
push
push
and
insl
in
push
push
sahf
cmp
add
mov
outsb
and
sub
push
iret
sub
or
shl
jmp
iret
iret
cwtl
mov
outsl
pop
jno
push
arpl
pop
dec
mov
dec
insl
pop
scas
jne
cmp
push
xor
rorl
stos
inc
popa
xchg
orb
add
add
pop
cltd
rcrb
sub
mov
je
sbb
aaa
lret
cmp
stos
and
daa
loopne
push
xchg
jmp
cwtl
xor
into
cmp
loop
mov
and
or
and
std
jmp
int3
ret
inc
cld
pusha
cmp
xor
or
xchg
dec
jo
aas
push
les
mov
popa
rorb
pminsw
loope
data16
hlt
adc
mov
jno
cmp
int
xchg
ret
sub
leave
fidivl
repz
inc
ljmp
mull
popa
inc
arpl
xor
dec
and
orb
xor
adc
push
gs
es
popf
fistl
loope
mov
iret
out
cmpsl
sub
mov
xchg
sub
sub
xor
test
adc
loopne
in
or
je
jg
pop
and
sub
xchg
xor
mov
out
mov
xchg
je
cmp
add
mov
mov
fwait
daa
lods
xchg
inc
insb
dec
dec
sub
lea
dec
or
inc
mov
dec
dec
push
dec
bound
jmp
es
aam
sub
dec
cs
pop
jl
aad
mov
imul
push
mov
mov
jnp
pop
enter
pop
pop
add
add
out
int
sbb
and
out
jnp
xor
ret
fs
xchg
sahf
xchg
add
lcall
mov
mov
scas
inc
xchg
push
pop
test
fimuls
incb
std
adc
lret
test
cmp
aaa
sbb
sbb
add
lret
fidivs
cmp
mov
pop
jmp
mov
divl
sub
sbb
jecxz
and
or
mov
movlps
bound
push
lcall
push
rcrb
movsl
lds
dec
xchg
cs
pop
cmp
test
xchg
imul
lahf
ret
daa
push
in
sub
mov
fstps
stc
or
ja
shlb
push
fldt
dec
mov
test
stc
bt
xchg
scas
movsl
ret
inc
jp
jmp
in
lret
dec
nop
or
dec
mov
ja
jno
dec
lods
and
addr16
and
dec
pop
icebp
mov
sub
mov
leave
sub
je
push
pop
sbb
andb
data16
mull
ss
ffreep
repz
or
inc
push
inc
adc
cmp
add
push
mov
mov
adc
pop
dec
dec
popf
add
dec
pushf
mov
or
daa
cmc
punpcklwd
adc
addr16
scas
xor
or
sbb
lea
fs
test
mov
roll
ljmp
or
sub
jnp
adc
cmp
js
or
nop
into
xchg
outsb
xchg
test
or
mov
jmp
sbbl
aad
sbb
fwait
sti
cmpsl
fmull
add
mov
inc
or
popl
inc
stc
push
push
aaa
xor
gs
adc
adc
xchg
pop
test
mov
stc
sbb
xor
xchg
push
dec
push
push
movl
xor
ljmp
leave
mov
imul
dec
and
shll
push
add
mov
insl
xchg
mov
dec
xchg
mov
leave
push
mov
in
adc
inc
mov
sbb
push
jb
mov
adc
push
shrb
out
mov
inc
gs
scas
loop
cli
cmp
fiaddl
out
adc
and
stos
leave
js
or
and
and
loopne
dec
push
or
into
jl
sub
fcmovnu
test
add
add
xor
sbb
push
and
mov
cwtl
aaa
jnp
mov
cmpsb
movsb
scas
shr
dec
mov
adc
push
dec
xor
in
pop
es
movsbl
push
mull
xorl
xchg
fiaddl
aaa
mov
shlb
add
jge
rorb
xor
iret
inc
dec
dec
jb
pop
or
js
inc
xchg
lahf
mov
and
loop
xchg
mov
mov
mov
xlat
mov
test
inc
adc
inc
or
cltd
mov
fs
mov
adc
mov
push
pop
ret
inc
adc
pop
push
adc
jae
dec
jae
jae
fdivrp
clc
adc
dec
dec
test
push
fwait
mov
and
xor
imul
sub
stos
and
jecxz
and
cli
sub
mov
lret
data16
loope
mov
dec
into
icebp
mov
rolb
jecxz
or
jno
xchg
pop
movsl
loope
mov
sub
icebp
jo
and
imul
insb
loope
xor
movb
inc
push
sbb
ficoml
mov
in
lock
shlb
mov
ja
dec
add
push
push
or
ret
lock
imul
xor
or
popf
iret
jge
mov
insb
inc
incb
adc
fdivrp
jnp
add
inc
data16
in
jo
inc
iret
push
aas
andb
jg
ja
popf
push
stos
xchg
test
dec
ret
sarl
das
data16
out
add
push
pushf
push
mov
jne
daa
testl
fnstsw
sbb
repnz
inc
jne
nop
stc
cmp
cmp
jb
jbe
inc
add
movsb
cmp
add
sbb
or
inc
icebp
imul
sti
sub
in
rorl
sbb
jbe
jg
mov
xchg
arpl
outsb
mov
notl
sbb
es
dec
mov
mov
xchg
in
dec
std
in
fwait
imul
dec
popf
xchg
mov
ljmp
subb
inc
inc
add
push
push
and
sti
xor
push
xchg
cmp
shll
stc
and
sub
pop
add
in
mov
and
mov
cmp
push
iret
ja
pop
sbb
aas
add
mov
scas
in
and
dec
fwait
mov
pop
sbb
adc
js
lods
sarb
push
sub
sbb
xchg
into
daa
mov
lret
pop
xor
inc
pop
and
jo
jp
js
xchg
daa
mov
and
pop
lods
sti
sub
jne
fisubrl
mov
dec
andl
mov
and
adc
cmp
dec
adc
pop
inc
out
cwtl
rcrb
push
pop
sub
jo
cmp
add
bound
mov
movsl
pop
xchg
xchg
jo
iret
pop
cmpsl
les
jle
xchg
mov
popl
adc
xchg
vunpcklps
sub
and
lahf
or
adc
cwtl
sub
or
mov
inc
inc
dec
pusha
popa
xchg
andps
mov
daa
dec
jl
inc
iret
adc
scas
clc
cli
adc
shlb
xchg
ss
mov
out
push
cs
mov
or
sub
dec
lea
roll
pop
sbb
pop
pop
mov
cmp
add
pop
jbe
push
dec
ret
popf
fs
sbb
popa
hlt
and
or
xchg
loopne
mov
xchg
xchg
outsb
adc
pop
sub
add
cmp
jne
pop
sub
ja
cs
fisubl
xor
iret
lods
sbb
add
adc
sbb
pop
adc
sbb
addr16
sub
hlt
pop
fsubl
aad
xchg
jnp
pop
mov
adc
movsl
jbe
xor
outsl
iret
or
leave
push
lea
movsb
cmove
dec
imul
and
lods
in
sbb
movsb
dec
sbb
pop
cmpsl
and
mov
inc
mov
mov
add
mov
mov
lret
mov
iret
loopne
inc
jl
xor
je
sbb
sbb
hlt
ss
loopne
je
jns
push
js
or
sar
mov
pop
das
into
hlt
cmp
adcb
cltd
sub
push
movsb
jge
ss
outsb
addr16
fcomps
inc
movsl
mov
aaa
loopne
stc
ret
cmpb
pop
sbb
pop
icebp
rcl
nop
push
sbb
cltd
sti
push
add
mov
rol
xchg
push
dec
arpl
and
xlat
add
xchg
mov
jle,pn
fiadds
pop
roll
jne
sub
pop
mov
jo
test
les
xchg
adc
sub
mov
jae
add
jb
pop
ja
sub
and
pop
and
test
sbb
xor
loopne
bound
push
add
and
insl
xchg
scas
cmp
and
xor
adc
push
and
xchg
sbbl
mov
jmp
and
daa
xchg
rcrl
mov
sub
adc
shl
and
lret
dec
pop
mov
movsb
iret
mov
pop
cbtw
sbb
inc
jle
push
pusha
test
jno
sub
lcall
push
xchg
jge
icebp
pop
movq
xchg
cmp
inc
or
loop
sub
pushf
dec
dec
and
es
shll
cmp
pop
movsb
jp
sbb
or
or
insl
gs
pop
pusha
inc
push
add
pop
sub
or
pop
jo
xchg
lret
jmp
andb
icebp
or
pop
sbb
inc
dec
push
jge
and
mov
fistps
pop
mov
ljmp
xor
xor
fstl
pop
pushf
scas
mov
shr
mov
jo
mov
mov
sub
lods
dec
rcll
icebp
rolb
xchg
add
sarb
movsb
adc
mov
inc
xor
mov
push
aam
jmp
aad
dec
sub
leave
cmp
pop
test
adc
cmp
sbb
add
repnz
fcom
add
sub
cmp
js
aam
lret
jle
ljmp
push
add
pop
adc
and
jp
cmc
adc
push
dec
js
inc
push
sahf
sbb
adc
ret
les
adc
add
ja
aaa
ja
xchg
cmp
cltd
jp
ret
add
and
jb
xlat
sbb
adc
mov
and
fiaddl
mov
and
adc
sbb
inc
js
sbb
loope
daa
adc
inc
mov
sbb
and
lods
or
mov
dec
lods
cmpsl
pop
mov
mov
test
cs
push
sub
mov
dec
das
add
push
jl
jo
inc
std
add
or
sub
sub
pusha
shrl
add
inc
xchg
jne
lret
adc
xchg
xchg
mov
ja
sbb
mov
rolb
cmp
sub
je
shlb
or
lret
push
inc
testl
mov
push
std
int
ja
adc
xor
add
test
sub
roll
add
mov
sahf
mov
sub
cltd
cmp
sub
cmc
rcl
aad
inc
push
mov
adc
movsl
loop
jns
mov
loopne
es
popf
jne
arpl
sti
cs
inc
stos
lret
shlb
daa
xchg
mov
jno
add
inc
vunpcklps
add
dec
or
xchg
xor
loopne
push
sbb
adc
or
loop
or
dec
and
push
orb
dec
add
inc
loop
inc
test
adc
adc
sub
jo
add
or
xchg
int3
cmp
mov
cmp
popf
adc
sub
jp
je
xchg
inc
call
pop
mov
or
mov
jg
shlb
mov
cmp
jp
rorl
rcrb
out
mov
add
lea
pop
mov
xchg
push
dec
js
dec
and
sub
stc
add
and
lret
pop
les
movsl
sti
leave
gs
fwait
sbb
les
adc
cmp
sbb
pop
inc
adc
sub
sbb
out
mov
xor
mov
xor
hlt
inc
mov
fdivrp
pop
xchg
add
xor
pop
es
xor
sub
cld
xchg
xchg
scas
mov
push
mov
sub
pop
dec
and
mov
out
sub
mov
icebp
push
test
dec
aaa
movsb
dec
bound
iret
cmp
bound
test
jle
pop
subb
jg
call
adc
lahf
cmc
and
jecxz
and
mov
xlat
push
or
insl
fstps
lret
push
outsl
inc
inc
adc
jbe
push
iret
push
inc
pop
in
and
adc
sbb
addr16
jecxz
jg
dec
sub
nop
adc
and
pop
push
test
mov
fcmove
insb
xchg
or
ljmp
and
jecxz
pop
add
xor
or
arpl
ss
sub
js
or
or
mov
pusha
imul
xchg
xor
jno
adcb
mov
and
xor
stos
stc
adc
int
push
fcmovne
lods
mov
dec
lcall
sarl
jmp
push
xchg
lcall
dec
mov
adc
jmp
push
aam
push
and
push
cmp
les
cmpsl
jle
pop
push
inc
fists
daa
mov
cmp
sbb
and
hlt
or
cmpsl
lret
or
push
push
jmp
insb
and
mov
daa
shrl
cld
dec
rclb
outsb
sub
cltd
cmc
shrl
dec
outsl
iret
cwtl
adc
lock
adc
adc
aam
and
pop
inc
or
insb
ds
out
jnp
vmovdqa
daa
adc
jne
data16
dec
je
in
xor
dec
add
stos
adc
ret
ss
cwtl
sarb
push
rcll
lds
cmp
into
adc
dec
pop
adc
test
addr16
stos
outsl
nop
test
jge
rorb
sub
subb
xor
cmpsl
int3
jecxz
stos
arpl
shlb
xchg
mov
xchg
push
xor
ret
enter
ja
clc
sub
je
xchg
shlb
and
sub
add
addr16
push
into
lahf
movsb
filds
fcoms
dec
xchg
pop
jb
mov
xlat
js
push
mov
pop
xor
cld
mov
inc
xlat
mov
popa
or
xchg
je
sti
shrb
lods
add
mov
cs
cmp
xchg
jno
jbe
jl
adc
jno
jge
and
or
cmpsb
pop
shlb
popl
jns
mov
pop
xchg
lcall
mov
adc
mov
sbb
cmp
inc
push
adc
aam
daa
int3
rclb
and
stos
mov
aas
and
shll
sbb
sarb
into
cltd
jmp
add
std
imul
ljmp
das
imul
imul
stos
pusha
mov
clc
andb
shrl
push
cmp
dec
mov
mov
nop
rclb
icebp
je
pusha
cmpsb
push
das
jno
pop
push
lock
dec
jecxz
iret
dec
jnp
add
or
ja
popa
and
ja
or
dec
in
nop
ret
fistps
dec
test
insb
add
or
or
sub
dec
push
sbb
sarl
xor
mov
inc
or
xor
or
mov
dec
lahf
pop
movl
lods
push
inc
inc
gs
inc
pop
xchg
std
leave
cmp
gs
fistpll
cmp
in
aas
jae
and
movsl
faddl
in
fimull
out
sub
cwtl
dec
xor
or
movsb
mov
add
fbld
dec
sub
adc
add
dec
cmp
sub
repnz
pusha
inc
xor
pop
jmp
add
mov
mov
js
mov
adc
dec
push
out
fistl
add
fimuls
ret
out
js
jb
cmp
inc
xchg
xchg
sub
test
or
out
test
push
rolb
aad
mov
mov
push
add
sub
jno
je
lea
add
test
and
push
nop
loopne
arpl
outsl
inc
cmp
rorl
jmp
add
or
cmc
xorl
int
pop
or
rcrl
in
xor
pop
dec
rorb
aad
rol
mov
xchg
movsl
repz
push
xchg
movhps
shll
mov
lret
adc
add
loope
mov
into
imul
lods
mov
or
mov
add
or
add
adc
jno
in
sub
fistl
lahf
insl
or
and
adc
rolb
add
xchg
xorl
in
ret
mov
test
ret
cmpsl
imul
mull
dec
push
out
mov
pop
sub
test
sub
lcall
jg
fsubl
or
fsubrs
lea
fisubl
or
jns
popa
flds
out
cmp
out
xor
outsb
mov
inc
xlat
xor
xchg
out
sahf
pop
mov
popa
jbe
movsl
nop
js
nop
aam
and
push
cmpsb
mov
bound
adc
dec
xchg
cmp
insl
std
and
push
push
adc
fdivl
jb
invd
daa
pop
and
aam
fwait
add
leave
and
or
in
mov
or
mov
inc
xchg
jnp
or
orb
sbb
xchg
xchg
lahf
sub
enter
ds
out
jnp
pop
psrld
popf
mov
test
or
sarb
cmp
and
add
sub
mov
dec
xchg
sub
cmp
adc
je
stos
movsb
xor
dec
nop
inc
loope
dec
mov
in
adc
push
add
insl
push
stos
mov
lahf
clc
stos
and
js
push
out
jge
inc
dec
das
push
inc
fildl
sti
fldenv
add
and
sub
fistpl
xor
lret
jmp
fmuls
sub
lcall
sbb
loop
orl
mov
add
jns
add
and
es
rolb
fnstsw
ret
std
and
xchg
cmpsl
movsl
pushf
shlb
test
cmp
mov
mov
mov
mov
add
mov
out
int3
xchg
push
sbb
fcmovne
ret
pop
cltd
ficoms
pop
push
add
je
hlt
std
cwtl
push
adc
sub
xlat
jmp
mov
jae
jmp
mov
sbb
mov
sub
cmpsl
jo
and
pop
mov
jb
mov
out
adc
sbb
add
ret
bound
add
and
xchg
xchg
or
movsb
and
cmpl
sarb
or
popa
mov
dec
push
cmp
cltd
cli
push
ds
pop
lahf
pop
jbe
jl
sbb
jns
pop
cmc
xchg
test
sbb
add
xor
sbb
popf
push
or
xchg
and
out
jnp
add
add
ja
movsl
cmp
xor
mov
adc
add
bound
mov
jmp
arpl
inc
scas
scas
xor
popf
adc
dec
jo
repz
or
add
frstor
jb
pop
out
pusha
or
pop
jns
adc
lods
orl
inc
jnp
mov
jnp
das
out
jno
ret
pushf
cmp
subl
cltd
xor
push
adc
push
bound
test
pop
js
iret
fmul
sub
or
loopne
cld
jg
loopne
lret
lahf
cli
lret
fsubrp
ds
inc
lret
inc
or
je
and
adc
stos
out
add
movsb
mov
inc
mov
icebp
add
arpl
mov
push
out
insl
xor
mov
dec
fs
sub
mov
xor
imul
pop
leave
mov
xor
jne
shlb
aaa
in
mov
sub
cwtl
or
push
sub
pop
jbe
bound
cwtl
lods
in
or
and
cmp
fisttps
jo
movsl
push
jmp
das
mov
adc
loopne
fmuls
aam
jmp
lea
mov
mov
loopne
fisubrl
lods
sbb
iret
add
int3
pop
push
es
sub
aas
pop
and
out
fisubrs
and
xchg
add
xlat
stc
inc
fcomip
sub
or
frstor
aaa
lret
push
out
xchg
sarb
and
add
push
scas
pusha
movsl
xchg
adc
or
hlt
add
push
cs
fbld
inc
les
pushf
ljmp
push
aad
sub
imul
mov
adc
add
nop
xor
pop
pop
imul
orl
pushf
rcl
cs
shrb
xor
fnstsw
out
pop
pushf
inc
sbb
and
ds
mov
nop
arpl
daa
bound
cmpsl
add
xchg
push
push
add
or
sbb
sbb
pushf
stos
sub
sbb
adc
loopne
addl
ds
aad
push
or
jg
sub
shrb
mull
into
movsl
lret
aam
xor
dec
mov
jb
mov
push
cmpsl
xchg
mov
inc
pop
jg
cmpsl
into
in
dec
jmp
inc
popf
inc
mov
adc
inc
push
and
adc
ss
dec
inc
int
mov
lds
aaa
ret
xor
push
sti
mov
test
icebp
rol
inc
and
ds
test
shrb
mov
adc
inc
dec
test
cld
mov
cmpsb
or
mov
adc
popa
xchg
movsl
fmuls
clc
inc
mov
in
add
adc
fbstp
clc
add
cmp
addl
xchg
sbb
xor
mov
jg
add
push
pop
aas
pop
mov
xchg
mov
data16
push
adc
add
je
mov
push
rol
mov
scas
insl
lea
insl
push
cmp
adc
mov
cwtl
pop
cmpsl
jne
xor
addb
ss
test
jmp
scas
inc
sub
jae
scas
jb
sub
ret
mov
jb
cmp
and
cmp
pop
add
sub
or
addr16
add
iret
fwait
pusha
and
std
ret
rcrb
add
bound
inc
jge
or
loopne
add
mov
xor
movsl
or
push
repz
and
sub
pop
aad
add
xor
int
dec
aaa
call
sub
iret
jno
pop
add
lds
inc
add
or
das
add
sbb
les
adc
jmp
iret
ret
sar
fld
daa
or
pushf
sub
popa
addb
sub
mov
test
add
clc
dec
adc
pop
dec
call
add
add
mov
and
adc
mov
and
inc
shrl
xchg
rclb
lret
adc
jmp
jg
inc
scas
imul
xchg
mov
pop
cmpsl
ljmp
xor
js
hlt
loope
sub
je
outsb
rcrl
sbb
sub
imul
jp
add
xchg
addl
mov
or
pop
jb
add
sub
test
rcr
dec
lahf
out
mov
and
jle
push
lock
jno
or
and
or
arpl
add
pop
rcll
lods
pop
push
add
or
clc
push
and
addr16
or
jo
sbb
push
andl
out
or
aaa
ss
jae
sbb
jmp
push
jb
or
push
and
dec
xchg
jecxz
sbb
sbb
sbb
aaa
jo
je
dec
mov
inc
ret
sbb
or
dec
push
movsb
xor
xor
pop
mov
lret
inc
aas
loopne
and
mov
bound
xor
loope
push
jne
test
mov
repnz
sbb
popa
nop
add
pop
inc
dec
punpckhbw
stos
sub
rcrb
inc
rcrb
dec
lahf
add
popf
push
add
aaa
add
xchg
adc
in
pop
sbb
xor
xor
jle
enter
loope
test
jb
aad
mov
push
add
js
daa
mov
add
xchg
ss
sti
jae
xchg
ljmp
jne
outsl
push
int3
leave
push
rcrb
add
mull
sbb
fs
sahf
add
incb
cs
add
lret
or
dec
rcll
or
add
adc
push
cmp
lea
outsb
or
pop
movsl
cmc
scas
mov
xchg
and
nop
push
leave
push
jae
dec
and
add
sub
xor
mov
push
push
mov
mov
mov
test
loopne
dec
dec
hlt
out
mov
jnp
push
add
pop
rorb
pop
lea
or
or
xchg
mov
mov
cli
loop
add
shlb
dec
add
addr16
sbb
push
and
insb
dec
hlt
or
iret
mov
mov
push
mov
dec
xchg
pop
sbb
movsl
xor
sbb
rolb
and
push
jo
test
inc
mov
mov
pop
add
imul
je
xchg
test
std
loopne
stos
push
rolb
pop
mov
jmp
sbb
add
jmp
adc
push
xchg
scas
or
insb
ja
sbb
cltd
shr
les
add
lret
imul
sahf
stos
mov
adc
jl
or
sbb
bound
add
add
adc
sbb
inc
sub
jbe
push
test
lock
ds
frstor
scas
pop
pusha
pop
and
cltd
push
imul
and
sbb
push
jecxz
ja
enter
lods
ret
ja
or
insl
out
pop
test
xchg
aaa
inc
sbb
or
ljmp
lcall
sub
mov
inc
in
mov
adc
mov
inc
js
les
xchg
pop
mov
imul
in
xchg
pop
dec
rcl
add
leave
sti
add
or
add
xchg
pop
fcmovnu
add
test
mov
xor
sbb
mov
dec
sub
mov
loopne
pop
cmp
mov
mov
popa
pop
iret
sub
dec
xor
mov
das
imul
test
pop
jo
enter
push
pop
pop
push
lret
jmp
scas
test
pop
mov
push
add
adc
mov
dec
dec
jo
stos
inc
stos
test
je
insl
sbb
stc
push
jnp
aas
lods
push
mov
mulb
sub
mov
outsl
pop
ret
adc
out
inc
sbb
mov
push
mov
xchg
movsb
shl
mov
pusha
sub
ret
mov
sub
fwait
jno
xchg
lods
dec
cld
decb
push
sub
sub
sbb
or
adc
js
lods
shlb
adc
sbb
sub
js
outsb
lods
adc
enter
mov
leave
or
fidivl
push
inc
or
fs
lahf
push
xrelease
roll
das
xor
push
ss
sbb
jmp
cmp
pop
imul
push
es
xor
push
push
les
push
sub
stc
insb
testl
jno
xchg
loop
add
pusha
push
jno
jge
cmp
fcoms
imul
lods
movsb
or
mov
add
mov
stc
lret
mov
mov
mov
sub
xchg
mov
lods
into
ret
scas
mov
dec
add
sub
out
popa
insl
push
add
sub
les
inc
bound
add
add
xchg
movsb
cld
add
jnp
adc
gs
sub
mov
xor
lret
cmp
xor
cwtl
lahf
inc
add
xchg
push
add
add
scas
inc
cmp
pop
bound
sbb
lea
mov
mov
sbb
adcl
mov
pushf
inc
push
sub
cmp
add
add
lods
mov
push
pop
iret
xchg
add
push
add
pop
pop
adc
adc
sarl
xor
mov
ja
add
aas
sub
sub
add
shrl
pop
sub
or
pop
ja
ja
push
popa
dec
mov
or
add
ja
and
push
nop
ja
int
xor
mov
pop
scas
jg
out
mov
add
cmp
jge
dec
push
imul
jmp
add
gs
test
movsb
cmpsl
push
lock
push
push
pop
sub
lea
fs
sub
push
pop
out
jmp
fldenv
shrb
cli
or
sbb
lods
imul
cld
push
out
cmp
add
sti
pusha
jo
or
loop
andb
shrb
mov
dec
push
lret
ds
lods
into
or
add
daa
cmp
push
mov
nop
out
jbe
pop
push
pop
cmc
jmp
pop
mov
xchg
fwait
and
out
sbb
push
lock
icebp
jo
and
cwtl
mov
jbe
movups
xchg
test
fwait
jae
cmp
jbe
cltd
add
ret
loop
lock
scas
test
inc
out
or
stos
push
add
xchg
arpl
daa
pop
cltd
adc
xor
pop
test
or
cmc
cmp
rolb
mov
in
stos
fwait
fstl
mov
std
mov
sub
push
bound
pop
cmpsl
enter
push
inc
ljmp
cmp
fbld
sbb
cmp
mov
lods
jne
push
pusha
cld
scas
push
andb
and
or
and
movntps
repz
ret
xor
push
adcb
pop
fldenv
add
iret
sbb
cwtl
add
add
sbb
push
mov
das
adc
push
push
sbb
shlb
bound
adc
add
es
incl
mov
jne
jge
ja
sub
add
and
add
test
add
andb
ljmp
mov
popf
mov
ds
repz
insl
cld
iret
cli
ret
add
jge
int3
adc
stc
sub
cmc
loopne
aam
sbb
xchg
push
mov
rcll
dec
add
and
cmp
pop
or
or
ljmp
dec
cwtl
aaa
mov
outsl
push
dec
mov
jnp
mov
sbb
jbe
dec
lods
inc
fnsave
sub
sub
xor
pop
and
sarb
imul
jmp
aad
xlat
lods
outsl
or
inc
add
push
dec
sub
add
and
cmp
sbb
sub
cmp
mov
sub
and
in
mov
mov
mov
leave
mov
sub
leave
arpl
adc
sbb
ja
xor
fld
ljmp
xchg
mov
loop
push
sar
addb
jl
sbb
ret
xchg
lods
mov
sbb
mov
out
mov
aaa
mov
pop
push
dec
push
jo
and
repnz
insb
xor
scas
add
mov
lea
push
lahf
push
shlb
fwait
jns
xor
adc
jns
lgs
loope
insl
out
lahf
bound
xchg
add
or
ljmp
add
jg
shlb
and
test
mov
lcall
xchg
lahf
jg
sub
add
arpl
sahf
lret
mov
jns
call
adc
inc
mov
out
clc
mov
jbe
jle
daa
orb
lret
cmpsl
add
and
xor
mov
loopne
mov
aas
stos
movsl
pop
dec
daa
dec
es
data16
movsb
ds
xor
dec
sbb
ja
push
repnz
test
into
ret
and
pop
fwait
pop
inc
mov
or
cmpsl
fneni(8087
cmpsl
test
cs
and
mov
mov
or
jge
and
or
or
bound
ss
movsl
mov
out
xor
push
in
add
shlb
mov
loop
sub
aas
jne
mov
mov
shlb
add
jne
xchg
add
or
and
inc
out
fcmovb
ja
lock
push
lds
add
fimuls
and
sbb
movsb
shll
ss
or
dec
dec
fwait
xchg
pop
add
sbb
add
mov
ret
inc
xor
sbb
je
test
xchg
repnz
and
lcall
dec
rolb
xchg
mov
mov
push
jle
loopne
xor
arpl
cs
jo
cmp
sbb
in
and
test
sbb
or
push
jmp
sbb
lcall
xchg
mov
sub
jnp
mov
dec
aas
int3
and
xlat
outsl
jo
push
scas
or
leave
adc
lock
xor
imul
rcrb
jne
lea
push
ret
add
inc
rorb
pop
int
or
dec
cmp
lcall
dec
and
sbb
mov
pop
cmc
cli
rcll
out
iret
jp
sbb
push
stos
mov
hlt
xchg
adc
jne
xor
mov
lret
jno
jae
mov
pushf
ja
aas
test
push
or
and
xchg
ror
insb
iret
lock
popa
or
and
xchg
test
add
push
and
imul
bound
andl
iret
or
shlb
call
mov
jbe
int
mov
ss
test
mov
xchg
pop
inc
mov
add
shl
mov
xor
mov
inc
mov
imul
gs
test
orb
push
or
push
std
or
push
pop
mov
xor
lret
pop
bt
dec
sub
notl
mov
add
scas
dec
ja
jo
mov
scas
push
push
jl
inc
sbb
mov
xchg
daa
adc
call
gs
push
addr16
adc
mov
popf
lea
cmpsb
fldcw
ret
cmpsb
or
cmc
mov
ljmp
push
sbb
push
iret
mov
subl
out
adc
shlb
mov
push
cmp
mov
daa
punpckhbw
test
je
and
sub
jo
stos
hlt
jae
xchg
sub
pop
lahf
sbb
sbbb
mov
cltd
xor
push
push
lods
ss
and
rolb
or
lret
and
pusha
mov
rolb
bound
mov
imul
lahf
push
inc
shrl
fcoml
hlt
sub
out
cwtl
pop
rolb
jno
mov
sbb
add
in
rorb
push
mov
xor
mov
adc
rorb
or
adc
fstpl
rorl
dec
dec
xchg
insb
jbe
cmp
movl
pop
popf
cld
sbb
or
inc
mov
lea
subl
pop
mov
or
push
push
flds
call
xor
ficompl
xor
inc
imul
push
rcrb
rol
cmpsl
sub
push
leave
sbb
adc
pusha
sbb
xlat
push
lods
add
in
or
rclb
adc
cmc
jl
sub
xchg
jo
cli
xchg
mov
xchg
dec
insb
xchg
mov
push
push
dec
dec
inc
std
xor
mov
repz
sub
sbb
scas
add
fiaddl
inc
clc
fmuls
jnp
sub
or
mov
sti
iret
mov
test
lar
push
ss
gs
add
jae
out
adc
cld
fildll
aad
xor
jo
sbb
add
lcall
sbb
push
lods
imul
movsl
and
or
les
xchg
out
orl
rolb
sti
leave
in
adc
mov
in
cmp
aam
sbb
mov
adc
and
sub
dec
test
mov
sbb
out
lahf
ds
add
push
sbb
or
sbb
cmp
push
or
sub
xor
cmc
jo
pushf
pop
adc
mov
inc
pop
mov
iret
enter
xchg
mov
mov
aaa
add
jmp
sbb
xchg
mov
lods
int
sbb
addr16
or
inc
or
dec
imul
push
sub
pusha
xchg
sub
push
rcll
outsb
scas
stos
hlt
lret
inc
fwait
sub
mov
inc
dec
pop
sbb
loop
add
pop
out
adc
dec
daa
adc
test
adc
loopne
outsb
push
adc
xor
lods
scas
sub
dec
adc
lods
icebp
add
loope
sbb
or
out
int3
pop
xor
scas
sbb
lods
sbb
out
pop
lea
sbb
inc
iret
js
data16
adcb
lcall
sbb
fcoml
mov
mov
loope
sbb
test
rcll
pop
push
callw
cltd
xor
mov
push
xchg
mov
or
sub
sti
push
or
leave
ret
pop
jecxz
sti
pusha
movsb
out
cmc
stos
incb
sbb
nop
mov
pop
xchg
sbb
push
sbb
std
stos
ja
push
popa
call
sub
push
dec
xor
jp
test
mov
ljmp
imul
mov
into
rcr
add
jle
adc
add
loope
mov
mov
aam
mov
ss
push
xor
push
push
xlat
orb
push
add
fsts
push
cmc
mov
arpl
jo
mov
push
fs
push
mov
and
push
rorb
or
outsl
lods
loope
sub
jle
pop
add
sbb
aaa
xor
ja
dec
movsl
add
jl
lret
jmp
popf
outsl
cmpsl
jecxz
push
test
push
loope
add
inc
push
mov
mov
pop
push
das
adc
lods
fidivrs
lods
or
bound
jbe
daa
mov
jp
mov
push
adc
movsl
repz
pop
adc
inc
aam
je
cmp
das
sub
and
xor
sahf
xchg
fyl2xp1
xchg
dec
add
lea
js
daa
dec
cld
xchg
or
or
dec
test
cs
mov
mov
aaa
pop
or
fmuls
fimull
movsb
sub
test
jp
fldl
and
lods
mov
ljmp
pop
adc
rol
out
adc
adc
cltd
addb
enter
daa
ret
in
negb
mov
icebp
pop
or
inc
dec
or
jns
or
inc
pop
cmp
rcll
orb
xlat
adcb
aad
flds
sti
sbb
and
call
sub
data16
xchg
sbb
sbb
jmp
div
mov
sub
sub
cmp
xor
xor
or
icebp
insl
lret
mov
popa
movsl
mov
cmp
push
sarb
dec
and
pop
mov
loop
cs
jo
inc
sub
cmp
mov
mov
int3
adc
into
or
nop
xchg
je
jge
loopne
loop
mov
or
pop
pop
push
lret
fcoml
lods
mov
dec
sbb
sub
sbb
shll
cmp
pop
inc
fsub
ret
xor
jae
push
mov
inc
or
lret
test
das
push
mov
stos
push
arpl
ds
loopne
popf
dec
movsb
cmpsb
icebp
cmp
xchg
mov
jo
inc
call
mov
or
pop
mov
frstor
adc
gs
jecxz
add
sub
or
add
inc
adc
jno
pushl
mov
inc
loopne
ror
mov
jecxz
mov
scas
and
or
pop
add
dec
push
ret
loop
insl
or
sbb
dec
xor
mov
fcoms
dec
nop
mov
push
loope
inc
cltd
push
adc
imul
sti
adc
xor
lds
cmp
ss
clc
mov
sub
lea
sub
pop
sbb
popa
jo
mov
mov
sub
sub
pop
ds
or
addr16
xchg
stc
xchg
sbbl
add
add
clc
pop
pop
add
rolb
stos
dec
test
mov
sbb
push
or
jno
shr
or
jae
sbb
add
mov
loopne
fldl
push
ret
and
sbb
add
flds
iret
daa
push
cmp
test
jnp
inc
jb
dec
pop
pop
sbb
lds
lcall
enter
jge
jp
and
xchg
sbb
mov
lcall
mov
cmp
cwtl
inc
enter
cmp
lret
jle
outsb
mov
fs
jle
or
cmp
test
call
addr16
cltd
or
jo
fs
jp
pop
lods
mov
push
incl
daa
cmpl
cmp
addr16
inc
and
add
mov
and
adc
inc
mov
ficoms
jno
push
stos
push
cli
cmp
sarb
cmp
inc
ja
enter
cltd
add
popf
inc
add
cmpl
pop
pop
xor
xchg
push
add
inc
push
jge
aas
or
add
or
xchg
testl
dec
sbb
lahf
aam
sahf
or
sbb
daa
out
cmp
mov
mov
lahf
fildll
or
stos
aaa
pusha
xchg
or
adc
and
fstps
bound
loope
daa
leave
sub
cmp
cmp
sbb
cmpsb
movsl
dec
xor
sbb
movsb
fildl
outsl
xchg
leave
adc
in
leave
shlb
cmpsl
popa
out
inc
mov
imul
mov
rolb
clc
push
or
or
adc
stos
or
add
xchg
ret
decl
inc
loopne
cltd
insb
in
add
pusha
jns
mov
add
lcall
pushf
add
inc
sub
add
mov
pusha
jl
or
add
mov
mov
or
or
sub
incl
xor
jbe
or
mov
xlat
icebp
sbb
add
aas
add
loope
xor
adc
or
ret
pop
inc
push
lock
xor
mov
mov
add
or
pusha
movsb
pop
mov
add
lods
js
add
enter
or
pop
bound
mov
mov
pop
xor
das
mov
cmp
sbb
mov
aaa
add
jbe
adc
imul
das
add
mov
int3
enter
pop
xor
das
mov
inc
lea
dec
add
xlat
test
add
jmp
inc
xor
test
fadds
and
ljmp
imul
lret
inc
add
mov
outsl
lds
mov
dec
mov
add
xor
xor
in
push
fadd
xor
dec
cmp
bound
rcll
int3
lahf
loopne
sbb
adc
pop
fs
sbb
xchg
xchg
push
rorb
push
dec
hlt
lret
ss
into
into
adc
lahf
shll
and
or
add
call
sub
loopne
jge
je
fwait
and
xchg
adc
add
and
nop
pop
sbb
xlat
sub
add
adc
xor
scas
xor
pop
add
test
data16
repz
mov
push
add
jns
or
inc
js
cmp
dec
les
stos
or
pop
jmp
ret
arpl
repz
push
sub
jg
out
and
pop
mov
cmp
mov
jp
andb
pop
fistl
xor
sub
arpl
imul
insb
xchg
popa
jb
push
jno
mov
arpl
int3
add
stc
mov
and
or
push
push
xor
or
loope
adc
dec
add
push
pop
add
dec
rcl
inc
jo
call
in
mov
rcrb
sbb
xchg
and
jnp
in
lret
xor
add
and
out
xor
cltd
mov
fsubl
fnsave
loopne
call
adc
add
xor
jno
pop
sub
sbb
insb
and
mov
imul
fs
push
pop
in
popf
jmp
adc
xor
xchg
pop
push
sbb
cmp
xchg
imul
test
adc
ja
adc
adc
sbb
decl
adc
dec
add
jnp
push
in
xchg
jae
les
rolb
popa
adc
jo
pop
dec
push
lret
dec
push
mov
mov
sbb
push
add
testb
sbb
push
mulb
add
sub
loop
and
sbb
js
mov
jae
and
pop
orl
cmp
mov
jns
mov
jl
add
and
lock
es
sub
aam
inc
insb
and
daa
pushf
add
fisttps
icebp
ss
stos
sub
orl
xchg
sbb
xor
cltd
fcoms
lods
addr16
ja
loope
and
daa
mov
add
jg
xor
mov
xor
fs
mov
xor
mov
dec
scas
and
and
xchg
fmull
add
cmp
ss
sbb
aam
out
mov
movsl
ret
adc
and
lret
jno
clc
add
add
out
and
add
push
sub
jbe
enter
inc
cwtl
xchg
add
jo
and
xor
in
mov
shlb
adc
das
mov
or
jbe
jg
insb
pusha
sar
stos
out
xchg
adc
add
inc
sbb
or
popa
or
insb
out
jns
sub
or
shrb
push
mov
aad
and
pop
cmp
lea
inc
or
xor
inc
pop
cmp
adc
xor
or
call
dec
cmp
pop
mov
rcrb
push
pop
enter
add
add
add
stc
mov
rolb
jecxz
stc
lds
add
mov
cs
jbe
mov
add
and
int3
cmp
iret
repz
adc
cmc
inc
lret
inc
and
push
cld
andb
cmp
sbb
pusha
arpl
cmpsb
and
int
adc
shlb
sub
sub
out
mov
sbb
add
inc
add
jmp
leave
xor
mov
xchg
js
pop
sbb
rorb
mov
or
sbb
or
vmovups
pop
aas
cs
subb
jo
arpl
cltd
add
std
mov
mov
ret
mov
fcomp
inc
or
inc
sbb
inc
insl
push
xor
repnz
xchg
js
rcrl
sarl
adc
jmp
add
lock
inc
sbb
mov
add
mov
lods
add
cmp
and
test
add
xor
popa
pop
mov
aas
and
mov
lcall
rclb
mov
mov
add
insl
inc
mov
xchg
pop
push
sub
adc
cltd
and
xor
lds
inc
or
cmpsl
popa
jno
jl
sbb
cmc
jge
cmp
mov
mov
mov
jg
andl
jns
dec
cmpsb
and
lret
push
add
xchg
add
aas
inc
dec
cmp
adc
pop
clc
dec
xor
insb
jb
dec
add
out
movb
ret
xor
xor
lahf
dec
jle
cltd
sahf
inc
add
push
add
cmp
add
in
int
mov
std
sti
inc
add
imul
hlt
into
in
inc
add
int3
and
xchg
sbb
roll
push
xor
cmp
outsb
cli
sbb
and
xor
orl
test
and
sbb
xor
lods
sub
add
mov
pop
gs
outsl
cmp
enter
mov
rorl
fs
and
pop
cltd
test
add
addb
adc
mov
ja
lcall
sbb
jno
xchg
hlt
push
sbb
push
aas
sub
mov
sub
je
daa
pop
add
and
ret
imul
add
adc
lcall
jge
repz
cmc
out
xor
mov
xchg
xor
shll
inc
jg
das
xchg
fdivl
add
mov
sub
sub
aaa
cwtl
sahf
and
lret
cmp
cltd
sub
aad
in
stc
fwait
ret
add
pusha
shrb
push
or
or
xchg
rcrl
inc
out
add
dec
sbb
cmc
dec
test
mov
add
inc
jo
push
les
enter
inc
add
sub
mov
flds
fstpt
add
lock
xlat
fs
inc
insl
loopne
fldenv
lock
fldl
xor
sub
push
sub
add
xorb
dec
xchg
jbe
sbb
sbb
inc
xorb
int3
inc
cmp
pop
jmp
and
cwtl
mov
fdivs
mov
stc
and
push
adc
sarl
fs
es
adcb
sbb
addb
rol
push
jno
xchg
and
mov
and
fcompl
xor
pop
adc
jg
add
push
adcb
pop
add
xchg
xor
dec
insb
repz
shl
addl
push
sbb
xor
push
and
push
in
xchg
jno
les
insb
test
mul
push
inc
pushf
inc
or
loopne
imul
insb
and
inc
das
pop
out
push
cmp
fs
push
and
daa
fwait
or
test
sub
lods
add
xor
or
sub
add
stos
mov
dec
or
arpl
imul
enter
call
bound
lea
lods
xor
inc
sti
pop
add
add
jo
push
rolb
lds
jo
test
sub
fmuls
clc
pop
inc
fisubrl
mov
sbb
cmpsb
fsubrl
inc
sub
addb
or
fcomi
jno
lods
mov
fmul
inc
xchg
orl
mov
xor
packuswb
arpl
xchg
push
mov
jecxz
pop
add
xchg
and
push
jb
sbb
inc
jle
add
add
and
dec
xchg
in
jecxz
test
pop
sarb
or
sub
lahf
jne
jbe
popa
sti
outsl
int3
aam
loopne
lcall
rcrb
dec
sub
repnz
cmpl
fdivs
aam
inc
push
push
flds
xchg
lret
sub
dec
xor
adcb
adc
xchg
pop
push
inc
out
xor
int
lahf
pop
add
adc
ds
mov
jo
inc
das
test
imul
or
or
mov
sbb
adc
lret
fsubrl
nop
fstl
xchg
add
xor
xor
sbb
add
or
sbb
cmpl
sbb
xlat
inc
push
sbb
push
xchg
lcall
pop
or
icebp
add
fwait
pushf
test
lahf
scas
lea
stos
or
iret
mov
add
xchg
aam
adc
sbb
fldl
outsl
ret
sbb
in
xor
dec
dec
test
ja
scas
xchg
or
push
rcrb
fwait
jg
inc
xchg
and
cmpsb
pop
lods
cmpl
movsb
fldenv
stos
mov
addb
fs
adc
fcomps
orl
jle
pop
add
hlt
cmp
pop
adc
sub
push
cltd
movsl
adc
push
loopne
mov
insb
test
pop
or
mov
sbb
push
push
imul
nop
push
loopne,pt
sub
pop
adc
sub
mov
ljmp
adc
sbb
cli
je
xor
or
insb
push
pop
mov
inc
add
inc
pop
push
sub
movsb
lret
aas
inc
sub
xchg
xchg
addr16
movsl
xchg
daa
dec
mov
lret
loope
inc
setne
loope
inc
loope
sar
jp
xchg
add
inc
insl
xlat
inc
lret
mov
mov
sbb
add
jb
sbb
jl
ja
lods
nop
in
fwait
clc
and
sti
dec
daa
mov
test
stos
jge
sub
cmp
sti
dec
mov
inc
sub
dec
shl
mov
into
cmpsb
imul
add
mov
sti
push
add
call
add
inc
and
icebp
push
jp
jmp
or
test
xor
cwtl
shl
add
mov
adcl
dec
iret
ds
outsb
pop
inc
xchg
jno
mov
mov
add
mov
mov
sbb
cwtl
clc
ret
dec
das
mov
add
pop
fbld
jle
and
push
lock
mov
ret
xchg
mov
pop
jecxz
lods
sub
dec
add
sub
mov
std
hlt
or
push
add
or
dec
sti
mov
push
add
shrl
hlt
add
lods
iret
dec
ret
or
dec
sub
cmpsl
cwtl
popa
xchg
gs
or
inc
and
push
mov
sarb
es
loop
mov
test
cltd
enter
jmp
cld
es
xor
cmp
icebp
dec
adc
pop
xor
pushl
cmc
push
icebp
sbb
movsl
sbb
sub
pusha
pusha
sahf
jecxz
jmp
mov
xor
dec
ds
and
xlat
xchg
inc
and
jb
add
pop
sbb
add
jae
xchg
cmp
dec
lods
adc
mov
inc
test
js
scas
movsw
mov
pop
pusha
sbb
and
pop
or
popa
dec
cmp
sbb
push
adc
lods
adc
rorb
lods
fcompl
lds
arpl
lea
add
rcll
push
ficomps
mov
divl
mov
loope
inc
fxch
xchg
lret
push
xor
or
dec
pop
cmp
cltd
movsb
and
fs
xchg
test
cmpsl
sub
mov
sbb
std
ja
pop
inc
lcall
mov
push
push
cmp
add
les
nop
rcr
rcr
push
push
cmp
cmp
lock
loopne
jmp
ret
xor
inc
es
add
sub
pop
xor
andnps
orl
or
mov
incl
inc
jecxz
add
mov
neg
add
add
imul
cwtl
inc
mov
es
scas
pop
ja
movsl
adc
pop
mov
mov
pop
cltd
cli
add
dec
xchg
daa
xchg
and
cmp
mov
inc
iret
ret
adc
pop
subb
jle
pop
xchg
or
ret
out
or
dec
jbe
loopne
insl
or
inc
add
insl
add
push
dec
xor
js
dec
mov
nop
addl
lods
and
push
or
popf
andl
scas
andl
jae
jns
jge
cmp
imul
daa
or
das
pop
aaa
adc
add
push
inc
js
pop
es
daa
repz
mov
mov
jecxz
cmp
roll
mov
cmp
xchg
add
pop
add
mov
int3
mov
mov
cwtl
xor
test
test
adc
cs
and
push
fildll
loopne
roll
adc
roll
sbb
jg
sbb
lock
lock
xchg
fidivrl
sub
push
cli
cli
les
push
jnp
fistl
aad
push
dec
or
out
bound
cmpsl
scas
xchg
or
daa
fdivs
movd
add
xor
inc
js
lret
mov
loopne
inc
or
inc
sbb
push
dec
or
mov
or
rcll
arpl
iret
xor
push
pop
ret
bound
dec
inc
das
inc
mov
push
inc
pop
add
or
aaa
imul
add
test
dec
inc
cmp
inc
xorb
mov
add
lahf
fisubl
movsb
jno
movsb
mov
aad
fwait
jg
pop
mov
sarb
and
inc
inc
lcall
shl
lea
fbld
add
cltd
lock
and
fisubrl
jo
xlat
das
pop
xchg
or
or
sub
add
scas
divl
or
ret
aad
inc
pop
sbb
sti
xchg
ss
push
call
int
xchg
lahf
xlat
and
movsb
or
push
mov
and
mov
and
sbb
xchg
mov
je
xchg
adc
nop
sub
xchg
adc
inc
push
mov
jle
sahf
add
ficomps
cs
push
push
inc
clc
stc
stos
in
pop
fprem
clc
in
mov
jnp
cmp
mov
dec
mov
mov
xchg
mov
rcrl
outsb
cmp
ret
add
push
mov
push
addr16
frstor
jnp
xor
add
add
fsubrs
testb
xchg
ret
imul
mov
dec
loopne
ficomps
xchg
clc
jo
jno
subb
mov
xchg
pop
adc
push
pop
dec
lret
pop
or
pop
and
jae
inc
cwtl
and
xchg
mov
push
mov
mov
vfrczps
lret
cmc
sbb
jo
inc
adc
es
leave
outsb
daa
sub
sbb
add
jo
add
mov
sub
add
adc
flds
jb
xchg
movsl
je
test
xor
pop
sbb
icebp
jno
aam
das
loop
out
lds
daa
fwait
add
pop
adc
xchg
mov
add
sbbb
add
jo
fidivrl
jno
mov
popl
je
test
cmp
adc
sub
sub
push
lret
xchg
call
sub
or
std
sti
xchg
mov
in
or
lret
lahf
pusha
lds
movsb
repz
cmpsl
mov
dec
cs
jo
clc
in
mov
add
cmc
add
push
fsubs
sub
or
dec
fs
mov
js
mov
xor
mov
orb
subb
pop
xor
pop
scas
add
jb
loopne
push
adc
or
or
lcall
jno
sbb
adc
jl
push
iret
fiadds
insb
imul
xchg
xor
mov
mov
push
cmp
xor
xor
or
xchg
das
adc
fldt
sbb
aaa
sahf
xchg
or
movsb
dec
xlat
inc
pusha
mov
orb
push
aaa
shrb
add
popf
shr
adc
adc
pop
xlat
inc
add
push
pop
ret
push
xor
add
mov
dec
jge
sarb
test
xchg
add
scas
and
daa
sbb
ss
mov
imulb
and
stc
sub
xor
pop
jmp
mov
dec
cmp
fwait
ja
sub
outsb
adc
push
mov
in
cwtl
mov
aad
mov
adc
pop
pop
or
mov
xor
push
cmp
lcall
mov
imull
sahf
test
out
inc
or
adc
test
cmp
inc
sbb
sbb
lret
xor
cmc
outsb
aad
sbb
cmp
or
outsb
sbb
mov
add
cmc
aad
sub
stc
add
xchg
pop
and
sbb
and
mov
add
shlb
roll
push
nop
mov
add
mov
pusha
cwtl
and
ret
xchg
push
jo
push
push
ja
mov
ret
jge
aam
xchg
dec
xchg
outsb
xchg
jno
jg
sub
sub
adc
inc
inc
sub
test
out
stos
test
or
sbb
jnp
cmpsb
faddl
pop
repnz
inc
push
push
aaa
and
cmp
xor
mov
adcl
rcr
outsb
adc
test
inc
cmp
mov
add
xchg
test
xor
mov
pushf
add
lods
test
dec
sub
or
bound
movsb
ret
adc
mov
xor
and
loop
pop
das
lcall
or
push
sbb
ret
in
and
cmp
cli
into
lods
test
adc
xchg
add
jle
mov
arpl
inc
or
ljmp
adcb
mov
mov
adc
in
push
cmp
xor
push
subb
cmp
ret
shrl
js
add
add
addl
popa
pop
mov
pusha
sarl
out
sbb
mov
fcoml
adc
push
aas
add
loop
mov
xorb
adc
ret
cmpsb
jno
icebp
cmc
and
insb
xor
adc
inc
pop
repnz
fwait
xchg
dec
adc
sbb
sbb
movsl
sti
add
clc
movsb
mov
and
orl
rcrb
push
or
lcall
mov
xor
std
mov
pop
mov
test
xchg
push
icebp
add
jo
fsqrt
add
loope
adc
movsl
loopne
bound
adc
inc
lahf
jns
pop
or
lahf
jno
adc
pop
sub
and
and
mov
sbb
push
and
mov
add
pop
mov
dec
andb
pop
or
push
xor
nop
adc
xlat
add
jl
adc
push
rclb
pop
adc
leave
ja
sbbb
fmuls
add
and
inc
or
inc
add
sub
mov
scas
icebp
das
push
lahf
les
mov
add
test
xchg
adc
test
push
cmp
movsl
outsb
jne
jns
add
sbb
cwtl
pop
orb
mull
shlb
mov
iret
add
movsb
sbbl
dec
cmp
inc
iret
push
mov
daa
cmp
add
sbb
loopne
adc
cmpsl
movsb
cmp
jns
mov
sbbl
mov
mov
adc
jg
popf
andb
lods
add
jno
in
add
imul
cld
int
inc
mov
jb
push
pop
dec
subb
xchg
and
add
add
imul
pusha
ret
pop
xor
cmpsl
sub
or
test
or
inc
pop
cmpsl
adc
inc
mulb
or
xor
mov
and
xlat
sub
pusha
or
add
mov
jns
aaa
cmc
sbb
push
dec
popa
shll
and
push
sahf
dec
xchg
add
xor
popf
pop
xor
outsl
pop
lret
call
test
or
jne
add
lods
adc
roll
mov
jg
popa
jmp
mov
xor
pop
jge
notl
adc
push
mov
adc
mov
xor
add
pop
dec
scas
mov
es
add
jnp
lods
rorb
adc
push
ja
sub
dec
popa
xchg
inc
fmuls
or
push
or
stos
test
and
int3
mov
inc
dec
cmp
inc
movsb
pop
jle
mov
and
xchg
mov
cs
sub
sbb
rorb
ret
and
cmp
lods
xchg
nop
dec
popa
cwtl
or
add
roll
or
sub
mov
scas
mov
push
sub
mov
mov
stos
inc
orl
aad
fiadds
mov
pop
or
fcoms
daa
pushf
pop
inc
inc
adc
insb
jns
or
mov
add
jmp
jge
test
dec
push
enter
mov
insb
loop
cmp
mov
sti
xchg
ret
adc
adc
add
sti
cs
push
ja
loop
les
adc
test
add
mov
jnp
das
test
or
sub
js
pop
ja
stc
aad
ret
cmp
std
jbe
mov
loop
stc
std
inc
push
adc
loop
xchg
bound
sbb
mov
xorb
or
lea
imul
inc
or
pop
push
test
jns
or
inc
or
mov
lods
jecxz
xchg
add
lahf
es
inc
push
in
sub
and
push
add
cmp
lds
ret
fsubrs
mov
rolb
in
js
mov
xor
cli
movsb
out
inc
loopne
xor
loope
addl
inc
sub
dec
adc
or
lea
cltd
pusha
mov
sbb
add
and
scas
cmp
add
mov
ret
or
add
mov
sbb
dec
pop
lea
adc
inc
fcomps
ret
inc
cmp
dec
and
in
lock
xor
jl
shr
pop
xor
aam
enter
or
aam
and
xchg
adc
sbb
divb
push
jg
out
mov
add
fldl2e
xchg
push
dec
push
fnstcw
push
ljmp
shrl
test
fsubrl
sub
add
xor
fimull
pop
mov
rolb
adc
rcrl
andl
rcr
loopne
xor
or
jl
icebp
inc
pop
cmpsb
cmc
sub
jnp
popa
cwtl
clc
pop
xchg
int
lret
xor
mov
xor
in
mov
in
jae
loopne
shl
push
xchg
add
pusha
aam
subl
mov
pop
mov
lods
mov
mov
loopne
and
hlt
shlb
ja
mov
pushf
pusha
mov
outsb
add
movsb
pop
mov
push
xchg
mov
sub
sbb
sub
pop
cltd
adc
movsl
inc
add
sub
jg
xchg
mov
popf
adc
test
and
add
or
adc
fisubrl
xor
sub
pusha
js
dec
push
mov
jo
arpl
inc
adc
test
pop
or
fwait
pushf
push
addr16
testb
leave
inc
dec
scas
jne
mov
jae
xor
test
adcl
cmpsl
jno
fcmovu
push
adc
bound
cmp
mov
hlt
repnz
add
in
rol
push
xchg
call
in
dec
mov
aam
mov
mov
es
inc
into
xor
inc
pop
mov
fidivs
iret
loope
test
inc
jecxz
cwtl
pop
sub
test
inc
jmp
xchg
mov
enter
notl
leave
test
cmc
adc
sub
xor
cmp
jne
test
fisubrs
ss
aaa
jns
out
pop
pop
xchg
inc
add
mov
or
push
xor
mov
rcrl
add
outsl
mov
lret
adc
inc
cmp
inc
imul
loop
or
sbb
rcrb
xchg
shlb
clc
and
jbe
lcall
or
xlat
push
jae
clc
out
lods
imul
mov
push
lock
int3
push
lds
jmp
add
sbb
push
and
push
add
and
scas
flds
sbb
jge
loope
test
addl
out
popa
xor
add
sbb
add
mov
push
cmp
out
and
lcall
sub
dec
addr16
pop
shr
mov
pop
inc
dec
out
add
mov
out
or
cmp
push
subb
push
lcall
xchg
sub
fcmovnb
xchg
repnz
lock
cmpsl
cltd
sub
ret
or
pop
adcb
push
sbb
jo
pop
cmc
xchg
mov
aas
gs
lds
mov
inc
lret
shlb
aas
and
add
xchg
hlt
push
sbb
ds
and
jmp
adc
sub
pushl
sbb
lods
cmpsl
roll
mov
sub
fistpl
lcall
out
inc
add
jno
shr
movsb
mov
ret
xchg
in
sub
dec
pushf
test
sub
mov
jge
ret
sub
mov
and
sub
xor
negl
ds
loope
xchg
cmpsb
and
xor
loope
cs
mov
es
jo
insb
sub
xor
movsb
sbb
bound
xor
add
movb
cmp
ss
push
and
inc
push
sbb
mov
lds
xchg
int3
and
shl
adc
or
lods
cli
stos
jecxz
call
ja
lea
in
mov
push
push
fs
adc
test
ss
popa
sbb
add
mulb
pushf
shlb
add
adc
leave
pop
dec
fcom
xor
jle
dec
jle
sbb
mov
add
pop
js
fistps
fldenv
xor
pop
sbb
mov
dec
lock
into
aam
adc
sbb
negl
jnp
data16
jg
sub
addr16
in
mov
and
add
movsl
jmp
cmp
add
outsb
cmpsl
daa
cmp
loope
pop
popf
cmp
xor
sub
es
inc
pop
je
stos
shrl
insb
iret
mov
add
sbb
mov
and
popa
jg
test
arpl
fdivr
jo
inc
adc
or
mov
popf
and
jo
mov
repz
mov
mov
in
sti
lret
mov
pop
mov
add
jo
mov
popa
das
fdivl
movsb
rclb
sbb
sbb
sub
jge
push
dec
dec
add
cmpsl
mov
push
scas
sbb
mov
addl
mov
aas
push
jno
pop
scas
sbb
or
mov
inc
daa
push
lret
sbb
xchg
mov
mov
lcall
sbb
rcll
dec
push
jbe
hlt
xchg
leave
addr16
and
arpl
mov
ds
in
fwait
push
push
push
test
jle
adc
test
jnp
jl
sbb
mov
push
cltd
jp
inc
jg
ret
addr16
leave
adcb
repz
adc
fldt
jno
mov
mov
loope
sbb
enter
adc
out
lret
add
clc
gs
imul
es
xor
mov
int3
xor
and
sahf
lcall
ja
add
cmp
cmpsb
lods
insl
jno
fldcw
dec
mov
lahf
inc
mov
mov
addb
aas
addb
lret
jmp
push
iret
fsub
push
or
xchg
fdivrl
push
lods
in
add
sub
fstpt
fwait
inc
jnp
cwtl
stos
jl
push
pop
add
movsb
es
in
out
test
imul
out
out
add
xor
and
push
inc
call
mov
jl
jle
add
jmp
lock
ss
mov
cltd
sbb
jge
pusha
jb
cwtl
jno
loopne
insb
out
fbstp
repz
div
lock
out
fdivr
fs
mov
jecxz
addl
aam
mov
fsubrs
hlt
mov
and
or
xor
add
add
inc
lcall
or
pop
push
push
or
cli
decl
pop
pop
pop
add
pop
ljmp
clc
iret
xchg
scas
sbb
add
push
push
femms
dec
and
push
popf
gs
sahf
jmp
addr16
xor
sub
cli
dec
sbb
jo
dec
inc
inc
rorb
ret
repz
and
test
sbb
adc
or
fwait
mov
mov
inc
rorl
lock
loope
mov
xor
mov
add
cwtl
pop
call
cmp
out
jns
sub
loop
fistps
les
je
adc
mov
dec
add
add
out
add
fsubr
in
int3
pusha
add
fsts
push
mov
arpl
out
imul
dec
loope
mov
sbb
xorb
sbb
sti
sub
cmp
xchg
stos
fisubs
xchg
jecxz
push
or
loop
iret
cwtl
jae
xchg
xchg
add
ds
or
ret
xor
loop
cltd
ja
int3
lods
inc
out
pop
push
adc
push
push
or
call
movl
in
adc
ret
dec
ret
inc
pop
inc
add
inc
arpl
mov
dec
add
mov
or
mov
icebp
push
mov
bound
sub
sbb
push
loope
imul
test
mov
add
inc
and
leave
out
cmpsl
outsb
mov
push
movl
scas
or
and
clc
mov
ror
and
push
pop
addl
xor
pushf
fisubs
test
and
add
mov
shl
mov
sar
cmpsl
push
jg
das
xchg
outsb
add
out
popa
idivb
ljmp
ret
cs
jae
mov
mov
in
popa
mov
aam
lret
adc
scas
mov
aam
xchg
xor
xor
add
repnz
inc
cmp
and
loop
pop
lods
out
lahf
jbe
adc
cs
rcrb
xor
lcall
test
xorl
andb
or
inc
sbb
cmp
scas
movsl
push
pop
jmp
sub
sub
mov
sbb
cli
addr16
clc
out
xor
add
sub
and
cmp
stos
inc
fstps
fbstp
sub
add
jbe
add
mov
enter
popa
add
add
inc
jbe
pop
gs
pop
das
and
cmp
and
pop
add
daa
in
popf
hlt
pop
prefetcht0
xchg
into
mov
test
inc
in
and
xor
or
int
rol
mov
pop
cld
dec
mov
aaa
or
add
cmp
and
sbbb
mov
scas
rcrl
dec
xchg
scas
jge
cmp
push
mov
push
cwtl
aas
fwait
in
and
push
lcall
and
pusha
je
ljmp
cmp
cld
xor
xchg
push
aam
imul
and
test
xlat
xchg
cmpsb
rol
or
cmp
xchg
push
and
fucomi
jl
adc
lcall
jg
call
rcrb
add
clc
test
jge
cmp
add
lea
aad
jb
js
in
lds
jl
loopne
or
or
orl
movb
sub
add
lret
add
pop
dec
sbbl
dec
data16
push
push
jo
dec
in
mov
or
mov
pushf
lret
cmp
lock
mov
pop
ret
das
stos
bsf
jns,pn
in
jns
out
push
dec
loop
into
and
xchg
insb
call
mov
rcrl
add
lods
push
mov
cmpsb
push
or
xor
pop
add
push
insl
lea
xchg
adc
fs
jne
pop
and
xor
adc
jne
movl
stos
hlt
ror
cmpb
fisttps
sub
loopne
jo
js
aad
fcom
add
aam
adc
cmp
and
les
or
dec
cmp
dec
gs
lds
or
jo
pop
ret
cmpsl
js
test
aad
aas
fsubr
lock
add
inc
mov
ja
ret
adc
idivl
inc
mov
dec
add
test
imul
xchg
push
mov
imul
repz
adc
lock
stos
mov
adc
loopne
mov
ss
xchg
cwtl
inc
sub
and
xor
mov
in
push
mov
into
loopne
mov
mov
ret
cld
je
pop
lret
shlb
arpl
cmp
and
idivl
push
popf
test
pop
ja
ret
adc
cmpsb
cmp
arpl
push
movsb
inc
cmpsb
rcrl
js
push
xchg
jnp
xor
pushl
pop
xorl
lcall
data16
shrl
ret
fldl
aaa
out
or
mov
fsubl
movsb
aad
iret
fwait
or
push
outsl
addl
loopne
push
je
lock
xchg
jb
sub
pop
ret
rolb
enter
add
insb
add
inc
mov
inc
xor
call
cmp
xor
ja
test
cmp
mov
sub
add
insl
cld
jns
imulb
or
out
f2xm1
dec
leave
in
in
fidivs
adc
dec
stos
es
clc
loop
in
xor
out
mov
loop
stc
insb
add
sub
insl
and
adc
sahf
jmp
mov
inc
add
add
push
daa
jbe
dec
dec
xchg
mov
es
cmpsl
inc
data16
test
push
xchg
enter
stos
inc
add
xchg
aam
inc
adc
sbb
inc
and
pop
or
fcom
push
pusha
cwtl
cltd
push
jbe
inc
sbb
sub
adc
loope
xchg
cmp
add
test
xchg
xchg
or
push
clc
iret
gs
loop
add
imul
sub
cmc
inc
in
and
ds
fldl
insb
int
divb
iret
mov
xchg
imul
inc
dec
add
mov
pop
enter
or
lea
mov
add
fistl
add
cmp
push
mov
mov
shrb
lret
mov
scas
and
xchg
ficoml
add
js
or
mov
repz
push
loopne
ret
add
xor
sbb
inc
clc
jmp
mov
and
xor
repz
jmp
or
xor
imul
mov
or
test
xor
clc
lock
fcmovnu
out
cmpsb
sbb
push
pusha
loopne
mov
cmpsb
fistps
icebp
jo
lock
mov
lock
mov
xor
outsb
push
adcl
add
js
or
pop
cmp
xchg
andb
sub
jecxz
shlb
pop
cwtl
insl
cmp
sbb
mov
xor
fs
aas
pop
sub
mov
inc
mov
loopne
dec
sarb
xorb
scas
push
push
repnz
cmp
mov
cltd
pusha
je
cmp
aad
ret
sarb
movsl
pop
loope
cld
imull
or
fs
xor
sub
mov
inc
int
xchg
and
cmp
sub
lods
call
ud2
popf
pop
sub
add
lcall
sub
test
ss
lods
xor
hlt
int3
out
mov
xor
neg
add
sub
mov
mov
fisttps
mov
or
sub
push
ud2
pop
cwtl
push
jle
nop
sbb
aad
pop
daa
mov
out
es
cmp
ficoml
cmp
inc
adc
cmc
fsubs
je,pt
jle
inc
pusha
popa
loope
sbbl
sbb
or
jmp
inc
shlb
sub
pop
mov
loop
loop
std
aam
fiaddl
aaa
out
mov
xchg
push
test
test
push
xor
roll
sbb
in
sbb
idivb
lock
in
xchg
mov
lock
sub
lock
xor
push
pop
int3
mov
mov
adc
mov
fsubrs
jo
cmp
ds
test
pop
fcompl
movaps
jp
mov
push
stos
xor
data16
mov
pop
ds
sub
push
lahf
add
rorb
in
and
pop
insb
xor
push
or
sub
push
jnp
push
pop
popl
dec
mov
and
shr
inc
scas
sub
push
daa
xlat
femms
outsl
clc
dec
and
lods
aas
cmp
rcll
fwait
lret
or
pop
inc
cmp
dec
out
add
add
adc
jbe
shll
jne
jbe
test
jge
pop
int
test
popf
add
inc
pop
fnstsw
xchg
jmp
test
movsl
lods
mov
je
daa
ss
nopl
jb
add
sub
leave
iret
mov
das
imul
les
add
bound
inc
inc
inc
cmpsb
js
pop
ss
mov
mov
jecxz
adcl
sub
and
xor
push
fcmovnu
lods
inc
mov
movsl
push
hlt
paddsb
mov
dec
sub
mov
sbb
stos
push
jo
or
fidivrs
mov
mov
push
push
cmp
ljmp
lock
in
iret
ljmp
out
cmc
sub
stc
inc
pop
sbb
testb
sbb
fwait
xor
in
pusha
hlt
push
xchg
in
mov
cmp
imul
mov
cltd
loopne
popa
jae
pop
ret
inc
aad
inc
sti
xor
es
add
adc
xor
pop
mov
sbb
push
ds
andb
lock
lcall
jae
das
outsl
and
loop
cwtl
add
mov
arpl
mov
mov
std
inc
sbb
push
addr16
arpl
arpl
sub
jecxz
pusha
sbb
add
fwait
aaa
xchg
xchg
sbb
fstps
andb
mov
cmp
adc
push
mov
inc
dec
es
jno
or
pop
adc
dec
bound
call
inc
and
push
movsl
icebp
mov
inc
ret
cmp
or
pop
pop
add
cmc
imul
shll
push
and
mov
int3
pop
jnp
out
xchg
or
adcl
add
data16
scas
dec
mov
inc
or
nop
add
andl
in
jo
add
popf
and
sub
pop
sbb
cwtl
arpl
scas
jne
scas
imul
push
xor
adc
inc
int
aaa
dec
lret
and
sarl
sub
jae
lods
test
jge
fidivl
hlt
scas
mov
fwait
les
fdiv
shlb
inc
das
sub
fsts
push
scas
and
mov
push
add
adc
add
mov
mov
add
and
aas
xorl
jg
icebp
cltd
shr
and
sub
icebp
in
xchg
dec
and
and
adc
or
aaa
inc
lock
xchg
imul
cmp
or
sub
inc
movsb
in
ja
dec
pop
add
dec
sbb
or
push
xor
sbb
cmpsl
ja
xor
push
push
xor
xor
fstpt
fcmovnu
xchg
scas
jae
jne
scas
push
in
jl
sbb
push
mov
xor
push
adc
dec
sbb
addr16
add
movsb
jae
shll
outsl
mov
aam
les
jno
cltd
adc
pop
push
cs
cmpsl
sub
gs
or
into
add
loop
sub
inc
lods
lods
jge
pop
inc
test
inc
xchg
xchg
daa
mov
xchg
mov
dec
scas
mov
dec
cmp
xor
mov
and
inc
nop
xor
cmp
sarb
dec
mov
iret
das
xchg
mov
add
adc
xchg
push
mov
xchg
je
adc
mov
sbb
mov
es
fcomps
mov
adc
xchg
or
popa
mov
xchg
inc
loopne
cmc
xchg
xor
in
push
jno
and
adc
roll
xchg
mov
xor
je
sbb
and
cmp
cmpsb
jo
sbb
or
xor
aaa
es
xchg
je
ret
xchg
mov
push
cli
pusha
dec
rcl
push
fidivl
pop
push
and
rcrl
mov
es
in
lahf
and
cmp
and
or
add
jp
inc
adc
stc
dec
lea
push
inc
push
xchg
test
popf
idiv
pop
pop
popa
loop
jge
xchg
xor
pop
adc
pop
mov
and
cmp
ds
loop
dec
jo
imul
add
sub
mov
daa
out
inc
push
call
mov
inc
pop
xor
lods
add
out
jbe
cs
and
insl
out
imul
push
daa
pop
das
xchg
ss
mov
or
add
add
insl
out
andl
push
lcall
leave
push
fs
das
inc
movsb
add
adc
push
sub
xchg
push
fwait
ret
in
or
insb
stos
mov
insl
mov
adc
pop
dec
pop
insl
add
or
stos
incl
pop
hlt
or
jmp
rcr
or
mov
mov
mov
mov
jl
sub
push
sbb
incl
mov
daa
jmp
js
pop
and
andl
mov
mov
mov
outsl
addl
xchg
je
xor
pusha
inc
decl
xchg
jo
and
pop
adc
add
andl
adc
lea
cltd
and
inc
sbb
test
mov
push
lods
cmp
stos
flds
add
jo
sub
mov
or
enter
mov
shlb
jmp
push
dec
outsb
leave
mov
mov
add
inc
sbb
sub
jb
aad
ds
sbb
ficomps
mov
mov
and
add
fs
jecxz
mov
icebp
lcall
loope
in
cmp
popf
nop
push
sbb
test
arpl
cmc
lret
lea
jl
lret
mov
adc
mov
add
adc
daa
xor
xchg
mov
xchg
fisubl
push
lahf
ret
cld
mov
sub
cmp
aas
inc
add
movsb
xorl
pop
les
mov
and
mov
sbb
scas
inc
xchg
dec
loope
roll
daa
out
loope
lea
mov
stos
and
xchg
rol
mov
xchg
cmp
daa
xorl
xchg
repz
scas
sub
mov
cli
es
lret
sbb
add
aad
cmpsl
add
or
out
adc
gs
adc
xor
adc
pop
shlb
mov
setg
sbb
add
sbb
insb
sub
in
add
mov
xchg
mov
add
adc
adc
mov
dec
insb
loop
adc
sub
das
cmp
push
rorl
lods
cltd
rorb
addl
mov
ret
mov
or
mov
push
or
cmp
shll
pop
mov
iret
pop
ret
inc
add
lods
add
jo
pop
or
or
add
shlb
adc
insb
dec
and
popf
jb
fsubl
repz
aam
ret
and
push
pop
fcoms
and
popf
bound
adc
lea
movsl
iret
imul
xchg
push
test
in
inc
add
cmp
sub
pop
movb
test
mov
mov
add
les
dec
loop
xor
arpl
pop
rolb
lret
jmp
outsb
pop
sub
fmuls
xchg
and
pop
mov
xor
jno
test
inc
jnp
std
inc
and
hlt
mov
xor
inc
add
mov
sbb
lods
push
adc
xor
add
cs
and
sbb
sarl
lock
fs
pop
or
dec
imul
lcall
sub
rcll
arpl
mov
jbe
pop
js
jns
jae
jge
sub
dec
notb
pop
ss
mov
sbb
movsb
arpl
mov
xchg
dec
mov
jl
pop
sahf
movsl
in
inc
add
rdmsr
in
add
in
fsts
and
sbb
cmp
mov
xchg
dec
inc
fcoms
inc
sbb
ficompl
arpl
xor
jae
xor
adc
jp
out
sbb
popa
inc
or
lcall
inc
sarb
iret
xchg
das
pop
inc
ret
enter
mov
push
inc
or
cmp
add
iret
push
add
adc
xor
hlt
pusha
pop
lods
sub
movsl
sub
cmp
mov
movsb
sti
ds
add
sub
movb
int3
mov
mov
push
sub
aas
inc
sbb
test
imul
fisttpl
sub
movsl
dec
fdivr
xchg
ret
loopne
outsb
rcrl
pop
int3
mov
andl
shlb
subl
pop
sti
dec
jnp
pop
inc
jp
popa
bound
sub
add
add
daa
mov
ror
and
out
push
out
fistl
femms
pop
xor
lea
sbb
movsb
mov
cmp
imul
push
adc
popa
and
push
das
mov
cmpsl
lcall
outsb
lods
test
test
pop
inc
and
popf
les
fbstp
sub
adcb
xor
fs
push
dec
and
loopne
adc
add
jmp
iret
xorb
dec
xor
inc
bound
mov
sbb
rcr
mov
mov
cmp
xor
and
jge
add
mov
ret
ja
push
rolb
orl
lods
out
push
and
or
cmp
frstpm(287
pop
ret
test
addr16
or
shrl
add
dec
lds
rcl
cmpsb
mov
adc
lods
xor
incl
loop
mov
push
mov
add
dec
addb
fldl
jle
add
pop
mov
test
dec
mov
pop
iret
inc
sub
pmaxub
fbstp
or
scas
push
mov
testl
sbb
rol
fstp
or
or
pop
mov
aad
cwtl
mov
dec
in
shlb
mov
out
pop
pushf
mov
and
inc
pop
loop
ret
adc
xchg
imul
add
add
arpl
inc
movsb
shrb
cmp
dec
or
aad
push
mov
or
and
add
jb
sbb
push
xchg
leave
inc
lcall
lock
add
push
jp
jne
cmc
mov
cli
add
inc
int
gs
inc
mov
rolb
ficomps
inc
add
popl
ret
pop
in
fisubrs
push
jns
sbb
lock
lret
cmp
jns
dec
pop
test
jbe
lret
cmc
pusha
xchg
adc
dec
nop
xchg
pop
xchg
and
les
inc
or
insl
mov
mov
push
shll
out
lods
aaa
xor
ljmp
add
sbb
pop
clc
pop
and
sub
inc
cwtl
lahf
dec
sbb
push
push
andl
popa
sub
pop
ret
mov
and
test
imul
add
jne
js
and
mov
jae
add
add
mov
and
sub
mov
movsl
xorb
outsl
lods
add
sbb
push
inc
adc
mov
ss
mov
push
xorl
gs
test
dec
adc
sti
fldl
pop
rclb
sbbl
ret
sbb
push
insl
pop
shlb
shlb
lods
sbb
push
adc
inc
or
push
sbb
test
imul
adc
pop
and
xchg
jl
mov
cmp
xor
mov
dec
pusha
shl
dec
ja
or
lock
andl
push
xchg
cli
cmpl
adc
xor
xor
mov
jns
and
cs
mov
mov
aaa
xchg
mov
or
mov
cmpsl
cltd
out
std
add
imul
and
jle
cld
xor
lea
nop
inc
or
negb
mov
add
and
mov
push
jp
fwait
mov
xor
mov
adc
test
mov
mov
or
push
add
rcll
jg
test
xchg
xchg
mov
dec
test
xor
or
add
cmpb
and
lds
dec
xor
add
pushf
push
or
fwait
inc
and
test
adc
adc
cmp
xchg
mov
repz
xlat
out
fdivrs
sub
push
push
and
stc
add
ret
push
sbb
sub
subl
and
add
bound
cmc
int
icebp
inc
ret
sbb
xchg
xor
ds
sub
and
inc
movb
ret
scas
call
push
sub
and
popa
push
pop
lret
xchg
test
push
xchg
ret
mov
sti
add
adc
ljmp
bound
daa
jle
inc
pusha
dec
sbb
dec
std
sbb
push
psrad
fxtract
fs
cld
push
bound
pop
outsb
mov
daa
push
test
add
add
lea
ljmp
fs
mov
mov
adc
inc
inc
sub
rorl
or
scas
adc
dec
jnp
cmp
sub
mov
test
test
sarl
das
xchg
rcll
jo
sbb
out
adc
clc
loope
adc
pop
add
shld
dec
jle
int3
push
jmp
ss
js
fists
cmpsb
cmp
ja
aaa
rclb
xor
jne
fcmovnbe
xor
enter
sbb
lods
callw
test
cwtl
inc
or
cmc
lock
push
mov
sub
or
or
push
aad
sub
shlb
bound
xor
inc
sub
inc
pop
fcomps
mov
pushf
push
push
mov
jmp
pop
popl
xchg
loop
sti
dec
pop
aam
mov
or
lret
push
add
push
test
mov
push
push
adc
inc
and
dec
iret
test
and
inc
push
into
out
int3
push
ror
rcrl
ror
mov
mov
cltd
int
icebp
nop
xor
aas
ret
add
lea
gs
mov
push
pusha
and
fistpll
pop
lea
mov
cmp
ret
shrl
cmp
adc
dec
pop
mov
pop
scas
fcmovnbe
dec
in
xor
jno
ja
ljmp
ret
sbb
push
pop
inc
stc
adc
insb
add
rorb
lock
xchg
fcmovne
xchg
les
mov
push
into
mov
mov
testb
ja
push
add
jg
outsl
add
pop
or
xchg
movsb
ds
add
add
test
pop
iret
add
cmp
add
push
js
fmuls
cli
pop
sub
push
inc
push
cwtl
out
andl
or
shrl
std
ja
add
pop
mov
imul
test
mov
nop
jmp
jle
sub
cmp
aam
xchg
mov
pcmpeqb
nop
adc
icebp
pop
or
test
add
stc
mov
inc
ljmp
inc
pop
mov
cwtl
gs
inc
punpcklwd
xor
lods
or
ret
add
jnp
gs
scas
aas
ja
sahf
ja
add
gs
push
daa
or
xchg
xchg
pop
pop
jb
push
stos
mov
pusha
loopne
aam
ret
mov
add
push
mov
xchg
sti
lret
or
sbb
mov
mov
aam
adcb
dec
add
pusha
xor
lods
jge
adc
arpl
jp
std
inc
or
adcb
into
int
dec
rorb
adc
sub
mov
stos
fisubl
leave
test
jns
xor
fdivrl
fsubs
mov
es
xor
popa
subb
add
out
jmp
jns
and
popa
fisttpl
sbbl
shrl
pop
add
ljmp
aam
je
aad
lret
xor
lea
xor
pop
in
outsb
and
pop
and
roll
mov
mov
js
sub
and
mov
mov
sbb
and
inc
sbb
addr16
decl
aam
shrl
aaa
ja
push
lock
push
jae
jecxz
jo
inc
jmp
cmpsb
or
ljmp
jno
jmp
xchg
mov
sarb
jmp
dec
sbb
add
loop
aaa
mov
xchg
xor
test
mov
leave
add
movsl
addb
stos
mov
xchg
xchg
jb
lods
sbb
xchg
cmc
mov
xorb
stc
fistl
add
jno
test
mov
test
mov
xchg
loopne
push
das
aaa
xor
mov
push
inc
addl
inc
sahf
pop
mov
xlat
and
xchg
out
or
scas
dec
xor
sbb
cmpsl
ret
rorb
add
jo
in
test
rorb
movb
xchg
sub
nop
pop
add
or
add
rcrb
in
jb
mov
mov
xorl
imul
or
inc
jo
mov
sub
out
test
xorb
orl
mov
pusha
sarb
enter
loop
pop
xchg
jge
dec
add
mov
das
dec
std
xor
push
sbb
cmp
incb
cmp
add
mov
jl
push
rcrl
cld
mov
nop
out
sub
mov
push
dec
frstor
add
jmp
xor
xchg
ljmp
loop
scas
push
xchg
mov
jp
pop
xchg
cmp
or
addr16
roll
cwtl
xchg
push
cmpsl
jbe
test
sub
add
fistps
fstps
cmpsb
xchg
js
pop
scas
push
mov
adc
xorb
and
mov
inc
inc
shr
sbb
mov
movsb
jne
aas
pop
enter
in
out
les
ret
sbbb
add
pop
xchg
add
movsb
scas
lds
out
or
pop
xchg
shlb
xchg
xor
arpl
mov
sbb
cli
lahf
and
push
ret
mov
mov
movb
loope
imul
lods
push
test
addr16
adc
int
dec
jbe
and
sahf
jbe
xor
mov
jae
xor
and
mov
add
mov
ret
fs
cmp
and
mov
loope
gs
jmp
mov
in
dec
popa
sub
jecxz
les
fildl
movsb
rcrb
adc
ja
add
push
incb
je
adc
daa
lcall
and
mov
jmp
mov
icebp
rorl
loopne
xor
and
xchg
dec
gs
inc
sbb
push
movsl
dec
xchg
jmp
test
clc
lahf
lods
fiaddl
push
pop
lods
clc
inc
mov
test
add
sbb
in
sbb
sub
cmp
add
ss
or
lahf
or
or
inc
or
ds
ss
test
pop
and
push
mov
lret
inc
xchg
or
mov
dec
jge
sbb
sbb
sbb
push
mov
jnp
xor
shll
cmp
mov
bound
mov
inc
repnz
loope
rcpps
push
adc
cmp
sbb
pop
sarb
and
popf
xor
xchg
lock
dec
push
cltd
push
xchg
test
add
fwait
dec
insl
sbb
mov
adcl
xchg
scas
mov
jbe
mov
sbbb
ret
sbb
xchg
dec
lods
jmp
lds
xlat
ret
xorb
fstp
les
test
cmp
push
mov
xlat
xor
sbb
sbb
pushf
xor
jne
rcll
jno
adc
aam
xchg
aad
xor
outsl
add
adc
ss
es
jmp
dec
fsubrl
int
inc
fmuls
ja
test
ja
ret
daa
repz
imul
sub
andb
movsl
aam
mov
rolb
pop
sbb
sti
hlt
sahf
xchg
ret
test
xlat
or
or
push
movsb
push
aas
pop
and
test
aam
mov
stos
imul
aas
xchg
inc
sub
xchg
xor
pop
gs
aam
push
pushf
mov
stc
fstpl
cmp
and
add
cmp
xor
andb
adc
push
mov
xchg
inc
sbb
sub
xchg
flds
dec
and
cmpsl
xor
sbb
test
ret
mov
mov
pushw
adc
or
mov
xor
cmp
sub
mov
sbb
push
inc
lret
mov
inc
jo
sahf
insl
loope
inc
push
dec
and
rcrb
pop
js
push
or
ret
mov
in
int3
add
cmp
adc
push
sbb
insl
cmp
or
add
je
mov
gs
jo
mov
pop
lods
inc
imul
mov
xchg
pop
xchg
dec
stos
mov
mov
mov
inc
add
and
mulb
and
aas
dec
fsubl
mov
daa
movsb
fistps
add
cmp
mov
mov
hlt
mov
mov
scas
lods
loopne
jl
ret
int3
push
aas
test
add
mov
sbb
addr16
les
int3
or
xor
dec
inc
inc
mov
std
cmovb
and
popa
andps
bound
inc
mov
out
pop
add
add
aas
add
add
mov
faddl
push
outsl
add
dec
in
jge
mov
push
jns
mov
jmp
sub
jle
jmp
test
out
push
cmp
sbb
or
flds
popf
or
mov
add
push
add
popf
popa
js
shlb
jno
mov
mov
add
and
fistpl
aas
and
inc
mov
mov
dec
mov
mov
aam
mov
jb
mov
push
sub
stos
sub
aam
or
and
jo
fadds
sub
and
jae
pusha
jno
mov
add
sbb
xchg
sbb
bound
sub
and
mov
xchg
hlt
add
jae
fs
imul
jno
sub
cmp
cmp
incb
dec
dec
sbb
dec
cli
lds
or
xchg
adc
add
loop
and
sub
das
xor
or
adc
adc
aaa
lret
sbb
movsb
mov
mov
jecxz
xchg
test
fidivrl
mov
sbb
int3
insb
add
fcmovne
mov
mov
pop
cmp
cmp
sbb
out
add
dec
add
add
add
push
xchg
push
call
adc
mov
scas
test
scas
mov
lahf
and
pop
imul
pop
inc
and
cmp
int
out
imul
pop
or
or
mov
iret
adc
or
mov
add
mov
push
pop
pmulhw
mov
mov
jo
aad
daa
addr16
mov
dec
es
rorl
inc
pop
or
push
mov
dec
pop
sub
xchg
jnp
inc
xchg
stos
xchg
lcall
mov
pop
and
mov
and
xacquire
mov
pushf
fisubrl
les
andb
add
mov
adc
jge
pop
movsl
shl
hlt
mov
pop
xchg
sub
sub
jp
gs
dec
add
sbb
add
nop
mov
add
xor
lock
mov
push
pop
mov
in
dec
mov
or
jge
rolb
mov
sbb
out
pop
add
mov
dec
sub
orl
xchg
test
in
xor
sub
jecxz
inc
or
ljmp
inc
adc
mov
sbb
je
adc
sub
bound
cs
mov
lahf
outsl
ret
imul
push
int
jnp
cwtl
xchg
cmp
nop
dec
pop
call
xor
cmp
daa
pop
cmp
outsl
push
cmp
movsl
loopne
mov
mov
ret
insb
outsb
into
arpl
rorl
push
into
adc
jnp
sbb
out
mov
mov
das
and
arpl
push
mov
rcrl
sbb
loope
int3
inc
or
popa
and
insl
and
and
mov
cltd
jo
lods
imul
add
lds
mov
or
pusha
inc
bound
sub
imul
rcll
push
mov
and
and
add
sahf
insb
pusha
inc
jle
iret
ds
pop
pushl
xor
mov
in
sbb
and
add
and
pop
dec
and
adc
pop
push
pop
xor
jb
mov
dec
add
sbb
cmp
xchg
pusha
cltd
test
sbb
jl
cmp
dec
ja
bound
cmpsb
xchg
cwtl
daa
add
lock
dec
dec
mov
lods
xchg
les
into
insb
add
mov
xchg
dec
and
mov
jg
andl
cmc
insl
rcll
push
ds
orb
pop
xor
inc
xchg
outsb
aas
orb
aaa
fsubs
or
sbb
sub
jp
js
stos
inc
pop
out
jp
mov
test
push
mov
loope
adc
push
shl
inc
sgdtl
adc
loopne
dec
push
loope
push
rcl
pop
sub
push
sbb
cs
add
pop
push
out
sbb
das
push
fs
push
lods
jecxz
inc
mov
dec
clc
push
pop
dec
daa
mov
mov
add
rorb
sbb
jge
dec
fcomp
scas
push
ret
fsin
and
pop
in
pop
add
orl
es
stos
sub
ret
sbb
adc
mov
arpl
iret
xchg
ret
xchg
xor
std
test
sub
jno
pop
inc
cmp
jno
mov
test
mov
rolb
lahf
stc
das
rolb
iret
adc
rorb
rcrl
ret
jo
sub
or
push
repz
orl
jns
sbb
daa
xchg
mov
push
mov
mov
xor
and
push
es
sbb
mov
adc
adc
pop
cmp
add
xchg
jne
xchg
std
hlt
add
les
jns
jp
jo
and
cmp
les
movsl
rclb
cmp
fidivl
adc
pop
fcoms
popa
add
aas
cmpsl
scas
jbe
adc
xchg
jp
faddp
cmp
insl
shll
sub
nop
or
xchg
ret
mov
addl
rorl
das
push
fs
push
xchg
outsl
push
adc
push
call
or
in
push
add
cmp
rolb
jp
jo
pushf
repnz
clc
cld
ret
inc
add
ret
inc
inc
mov
enter
push
fisttpl
or
xchg
int3
iret
xlat
repnz
lock
inc
adc
jbe
and
sbb
ja
push
jle
pop
ds
add
mov
dec
loop
incl
orb
ret
idivl
sbb
xor
cs
test
sub
xchg
cmpsl
lods
daa
add
jmp
ss
dec
xor
scas
into
std
lock
push
iret
cmp
push
pop
push
arpl
cmp
lcall
sbb
ret
xchg
xchg
stos
add
test
sub
sbb
ret
or
mov
mov
sub
mov
push
fldl
inc
cmpsl
sti
scas
sub
add
mov
jle
shr
add
jge
or
dec
sbb
xchg
out
ja
dec
sbb
jp
or
loope
hlt
jo
inc
jmp
mov
lea
xlat
mov
aam
icebp
das
mov
mov
mov
cwtl
push
xlat
and
jae
stos
sbb
adc
jno
jns
lahf
add
add
mov
push
xchg
cmp
test
add
test
aad
int3
sbb
and
xchg
fs
aad
mov
inc
add
inc
dec
dec
cmc
xchg
scas
mov
idivl
sbb
lock
je
dec
lods
push
repnz
fists
out
ret
add
inc
orl
aam
aad
iret
repz
mov
dec
inc
scas
adc
or
add
xlat
imul
jbe
outsb
xor
or
push
sbb
sub
ja
jmp
lds
fwait
push
ja
shrl
cmp
inc
and
adc
popf
and
cltd
mov
push
dec
lret
lods
add
jae
cmpsb
inc
aas
inc
lods
aas
sbb
fidivrl
roll
inc
lahf
icebp
mov
push
popa
pop
or
fwait
clc
outsb
mov
xlat
arpl
or
outsb
jecxz
scas
rolb
xor
subb
mov
inc
cwtl
test
scas
orl
pop
enter
inc
mov
jmp
inc
sub
push
xchg
andl
mov
pushf
sub
lea
sub
nop
sbb
and
xchg
xchg
out
shl
add
filds
ss
rcrl
jp
or
lret
add
aaa
add
sbb
rorb
adc
adc
sbb
rcll
ret
sahf
shll
cmp
mov
mov
shll
test
or
adc
mov
mov
or
and
mov
jae
ficoms
xchg
or
test
aaa
call
xchg
adc
cmp
dec
fnsave
pop
push
cmp
inc
loope,pt
mov
adc
es
pop
xchg
iret
mov
arpl
adc
clc
mov
mov
sbb
in
pop
psubw
fimuls
scas
push
es
fdivs
sbb
movsb
xor
dec
xchg
or
lret
ror
sub
sub
fisttpl
dec
mov
inc
push
aad
xlat
xchg
push
or
cmp
inc
roll
inc
sub
mov
imul
mov
loope
or
mov
push
dec
arpl
push
inc
pusha
in
clc
add
jg
lock
add
ret
imul
adc
jnp
out
push
inc
sub
lods
shrl
fildl
pop
lret
call
xlat
or
das
push
iret
adc
pop
rorl
addl
outsl
pop
inc
clc
add
xchg
push
cwtl
addb
pop
push
dec
mov
jp
arpl
or
js
clc
xchg
orl
leave
jmp
xor
and
arpl
push
add
or
xor
xor
mov
pusha
addb
and
or
xchg
xchg
add
popa
xor
mov
mov
imul
loope
add
pusha
jge
mov
stos
cmp
cmp
popa
sub
mov
jb
cmp
nopl
in
icebp
imul
add
mov
aas
adc
test
data16
jae
and
push
ret
pop
cltd
fwait
xor
in
aaa
inc
cmp
dec
xor
xchg
dec
dec
inc
add
or
scas
fmuls
aam
test
sbb
fsubrs
adc
inc
dec
mov
jno
dec
mov
xor
dec
adc
cld
notl
cmp
sub
test
sar
aad
or
jge
pop
and
aam
cld
fs
pop
sub
pop
movsl
mov
enter
rcrl
test
out
mov
jl
ljmp
mov
add
pop
dec
jbe
outsb
adc
pop
xor
sar
cmp
xlat
cld
mov
lds
sub
sar
ljmp
mov
and
xlat
sbb
js
cmp
mov
sub
pop
sbb
mov
mov
or
lret
pop
popa
jecxz
mov
sarb
sub
xchg
add
push
lahf
push
fwait
sbb
add
mov
loope
sbb
movsl
loope
lret
std
jo
arpl
aaa
mov
inc
stos
xchg
rorl
mov
roll
outsb
fdivr
fisubs
lods
sbb
insb
jae
sub
jmp
fs
leave
cmp
cmp
gs
add
inc
arpl
jae
add
ffreep
fisubrs
push
push
sub
cmpsb
dec
push
dec
stc
adc
imull
adc
add
and
clc
xchg
sbb
jecxz
xor
fidivrl
fwait
adc
xor
enter
std
cmp
movb
ljmp
jnp
rorb
inc
imul
pop
sbb
daa
fldl
negl
or
insl
sbb
cmpb
nop
cmc
pusha
rcr
jne
xor
sbb
dec
aas
ss
push
mov
aam
fnstcw
or
push
into
cmp
fs
xor
shlb
xor
jecxz
xor
dec
jmp
jp
scas
sbb
test
out
cmp
sub
sbb
popa
insb
es
and
push
pop
push
pop
in
xor
xchg
push
inc
movsb
xchg
dec
out
xchg
cmc
xchg
rcrb
and
jno
jb
jne
das
xlat
inc
sti
mov
popa
sarb
sbb
inc
imul
or
xor
lods
dec
adc
sub
shll
lods
sub
sti
pop
xorb
cld
inc
ss
sub
mov
inc
popa
gs
adc
hlt
js
mov
aaa
xlat
jle
insb
lods
fisubrl
popa
cltd
xchg
push
aad
scas
push
aaa
lods
imul
jmp
ret
test
push
aad
jo
fwait
iret
xor
pop
clc
test
repz
or
pusha
push
adc
inc
dec
adc
inc
hlt
inc
jmp
or
cltd
sub
icebp
add
nop
data16
stos
mov
push
mov
add
adc
psraw
jp
movsb
add
sub
add
mov
pop
sub
mov
pop
add
jno
and
and
and
ret
and
andl
pop
int3
fs
adc
push
clc
xor
add
iret
jne
mov
mov
hlt
addb
popa
add
rolb
js
or
and
adc
add
hlt
jae
cmpsb
push
mov
mov
pop
mov
test
shlb
push
mov
sbbb
mov
rolb
mov
cmp
in
add
inc
push
jno
add
xchg
mov
adc
add
push
pop
ret
sbb
adc
and
pop
adc
mov
xchg
adc
mov
outsb
or
and
pop
inc
add
jo
filds
and
cmpsb
cmp
nop
cmpl
fldl
add
sbb
add
loop
cwtl
cmovns
aam
jbe
cmpl
imul
mov
push
push
iret
push
aad
das
dec
es
adc
ja
clc
enter
rorl
lea
dec
push
out
and
movsl
lock
iret
push
inc
mov
sar
sub
cmpb
push
ret
pusha
daa
cmp
outsb
or
insb
and
cmp
ret
and
fisubl
rorb
movsl
fists
jge
adc
fmul
xor
cltd
cmp
ja
pop
adc
sbb
push
loop
xchg
arpl
sti
jl
jge
ret
stos
mov
add
add
sbb
add
subb
lret
ljmp
cmc
and
stos
dec
mov
insl
cmpsl
iret
xchg
sbb
es
pusha
adc
das
popa
sub
mov
jle
bound
lret
jg
icebp
popa
arpl
lret
pop
gs
jl
fldt
jnp
mov
fists
pop
mov
mov
fmuls
jle
inc
movsl
jno
or
lds
in
fidivl
push
stc
adc
cmpsl
mov
push
and
add
subb
jecxz
cs
iret
add
xchg
mov
xchg
mov
adc
aam
insl
mov
inc
outsl
imul
loopne
sub
ds
mov
jae
cli
xchg
jecxz
orl
mov
xchg
push
scas
adc
pop
mov
xor
sbb
popf
jnp
pop
mov
orb
aam
sub
jmp
fprem
adcl
lea
lock
sti
jecxz
mov
hlt
cmc
test
lea
pop
or
gs
sub
xor
iret
add
lahf
adc
adc
std
jmp
movsb
sub
jo
rcrb
sbb
ds
dec
xlat
sbb
dec
dec
outsb
inc
fs
mov
xchg
push
add
jmpw
xchg
rolb
cmc
jmp
jg
dec
sbb
jge
aas
pop
lea
hlt
iret
xchg
push
push
sub
pop
cmpsl
xor
test
pop
jo
test
push
xor
xor
dec
sbb
shrl
fmuls
push
mov
sbbl
xor
pop
jns
cmp
sbb
jns
cld
push
nop
push
inc
mov
xor
in
ja
sbb
inc
lahf
xor
dec
call
sarb
xor
pop
mov
cmpsl
orl
cli
or
dec
xchg
dec
or
jl
add
or
or
addl
rclb
and
mov
xchg
daa
and
sub
pop
jns
dec
sub
add
inc
sbb
iret
clc
cli
fldcw
or
sub
adc
iret
jle
mov
push
adc
in
out
fnstcw
ret
and
stos
insl
dec
or
xchg
xor
pop
mov
adc
add
add
push
insl
inc
push
jns
loope
lods
dec
add
inc
push
pop
xchg
or
or
add
out
pop
inc
scas
push
xor
cmp
loope
mov
push
or
inc
call
sbb
sub
or
adc
adc
jecxz
push
je
cld
jbe
adc
sbb
xor
pop
mov
data16
fdiv
fwait
jecxz
inc
mov
imul
and
shrl
xor
adc
or
movsb
mov
adc
push
sbb
adc
iret
push
sub
xchg
xor
call
fiadds
sbb
ss
lret
xor
dec
pop
ja
sub
inc
sub
pop
sbb
shll
adc
int
xor
mov
loope
inc
cwtl
or
pop
les
loop
repnz
out
mov
push
iret
shlb
movsl
lret
iret
mov
sub
mov
sub
dec
or
lret
mov
arpl
insb
and
fisubs
lahf
loopne
sbb
subl
and
ficoms
pop
pop
std
add
and
cwtl
in
sbb
ja
dec
pop
push
or
jge
mov
mov
out
or
xchg
mov
int3
js
mov
hlt
rolb
hlt
inc
cmp
xorl
sbb
sbb
mov
test
pusha
cmp
imul
pop
mov
cli
push
in
lcall
push
sub
inc
shlb
inc
ljmp
iret
mov
arpl
mov
inc
xor
adc
jl
icebp
xor
mov
stos
sar
pusha
in
stc
add
xor
popa
fcmovb
repnz
lret
les
popa
mov
mov
xor
inc
pop
adc
sbb
xchg
push
or
imul
jne,pt
dec
es
mov
int3
add
xor
stos
outsl
cltd
sub
dec
add
pop
add
stc
popa
push
rol
popw
jae
ret
icebp
aaa
cwtl
loop
jp
dec
pusha
cmp
mov
jno
int
sarl
and
xchg
pop
fnsave
sbb
sti
push
mov
pop
cwtl
and
jmp
sbb
stos
int
add
fnstsw
mov
insb
addr16
pop
mov
out
jecxz,pn
std
jmp
mov
jg
ret
or
sbbl
and
mov
or
or
out
inc
test
test
fidivl
cs
testl
lods
sub
add
lcall
arpl
out
pop
cmp
stos
and
test
stos
adc
xor
and
subb
loope
xor
add
sarl
jne
sbb
xchg
cmp
adc
sbb
sub
nop
add
nop
cli
push
aas
pop
push
xor
lret
jle
and
movsl
and
xchg
mov
jne
xchg
aam
lea
test
cmp
lret
aad
add
and
je
mov
call
lcall
insb
push
imul
inc
scas
divl
ret
aad
cmpsl
xchg
loope
pop
lret
out
pusha
or
sbb
lds
mov
xchg
jle
test
lret
dec
mov
roll
mov
sub
lods
enter
pop
dec
sbb
addb
fstl
mov
std
and
mov
mov
pop
call
icebp
jmp
mov
fdivrs
sbb
mov
push
cltd
or
pop
mov
sub
or
repnz
xchg
or
xchg
mov
fwait
push
mov
add
iret
adc
sbb
push
arpl
xlat
rorb
mov
jmp
sub
push
dec
lea
clc
lret
or
shrb
jo
push
test
mov
scas
fimull
lahf
lcall
jp
int
jbe
or
fisttpll
cmpsl
or
out
push
mov
inc
inc
out
xchg
iret
push
add
sbb
dec
mov
shr
push
fldt
or
add
sti
iret
sbb
imul
ficoms
fmuls
sub
arpl
lock
fld
push
addr16
mov
xchg
outsl
xor
sahf
inc
outsl
adc
adc
mov
mov
fsts
lods
xchg
cwtl
and
mov
lods
or
sbb
test
stos
inc
fisubl
and
arpl
rclb
xchg
dec
cmp
lcall
push
ret
dec
push
adc
not
inc
bound
enter
cmc
aam
sub
jb
jne
adc
lret
and
add
add
xor
and
fadds
andb
inc
mov
loope
add
xchg
push
cs
jp
idivl
lea
pop
push
or
shll
xor
push
fists
dec
push
push
mov
pop
adc
shrb
add
mov
lods
or
inc
std
divl
popf
push
mov
pop
aaa
xchg
add
aam
popf
test
pop
inc
or
adcl
lods
add
jne
les
adc
sub
sub
cltd
divl
inc
or
adcb
fs
xchg
cmp
adc
stos
dec
push
push
lret
and
rorl
xchg
sub
dec
fmull
enter
push
nop
xchg
int
les
sbb
push
mov
cmpsb
mov
xchg
xor
push
clc
ja
xor
iret
es
mov
pusha
and
mov
ljmp
mov
push
into
shlb
rcll
add
jle
gs
lahf
mov
icebp
pavgw
dec
iret
cwtl
pusha
imull
sbb
dec
insb
add
hlt
add
pushf
sarl
push
leave
jmp
shll
lahf
in
add
add
jno
or
mov
jl
xchg
cmc
testl
push
shlb
fcoml
add
shr
or
inc
jecxz
push
cmp
mov
mov
fiaddl
sub
je
imul
cs
daa
push
or
pop
xor
nop
xor
adc
mov
cmc
pushf
add
leave
pushf
loope
cmpsl
jne
sub
xor
out
xor
dec
inc
sub
test
orb
sarl
mov
ss
xchg
xor
and
imul
adc
das
sub
sbb
sub
push
repz
adc
out
aaa
jbe
and
aaa
int3
or
or
mov
sub
sbb
adc
add
in
pop
dec
sub
shrl
pop
xor
dec
push
and
mov
orb
dec
add
rorb
and
ret
and
mov
hlt
inc
mov
or
push
push
scas
add
jle
mov
add
xor
push
or
jmp
add
sbb
jo
pop
sarl
sub
sbb
mov
data16
jne
setb
iret
ss
fldt
dec
xor
pop
nop
lock
jns
push
outsb
or
insb
inc
lret
aaa
loope
add
jnp
dec
xor
or
xchg
movsl
xor
push
leave
dec
subl
inc
lahf
dec
push
loopne
mov
xor
lret
test
jb
inc
mov
pop
sbb
mov
lea
mov
inc
nop
insb
adc
pop
push
fisttpl
movsb
ficoms
xchg
jne
inc
cmp
cmpsb
loope
decl
xor
push
ds
add
mov
out
test
insb
aaa
mov
jns
inc
aad
push
je
and
fistpl
rorb
pop
cmc
mov
mov
push
flds
mov
repnz
jle
movsb
push
js
je
cmpb
mov
repz
mov
imul
cwtl
fucomi
add
or
xchg
pcmpeqb
push
pop
outsl
mov
and
or
lods
loopew
cmp
cmp
int
push
popa
pop
push
das
mov
pusha
daa
scas
js
pop
sub
push
outsb
xor
add
pop
sbb
repnz
mov
enter
sbb
lcall
pop
out
lcall
stos
mov
je
sbb
mov
aam
push
loope
mov
add
ss
mov
in
idivb
lahf
lcall
add
adc
push
xchg
mov
loop
in
xorl
test
ja
lods
or
outsl
jb
imull
add
rcll
jmp
rorb
inc
sbb
add
icebp
cmp
sbb
adc
sub
xchg
inc
cwtl
xor
mov
cmp
inc
movsb
dec
mov
add
ds
notb
dec
cmp
mov
clc
lods
dec
imul
sub
add
adc
mov
mov
arpl
js
dec
nop
nop
movsl
cltd
into
cmp
sbb
push
dec
enter
dec
out
sub
sub
es
push
sbb
cwtl
lcall
outsl
enter
out
adcl
les
push
fldl
push
cmc
add
adc
pop
mov
bound
sub
adcb
dec
add
jo
data16
push
out
or
dec
push
inc
pop
or
adc
nop
add
sbb
mov
dec
popa
jno
or
out
and
xchg
push
xchg
cmp
jmp
xor
or
sti
pop
mov
or
shrb
mov
sbb
xchg
jo
repz
or
ret
jno
add
jp
cmpsb
sbb
dec
jne
or
leave
cmpsb
xor
rolb
data16
cmp
dec
inc
xchg
negl
sub
dec
je
or
dec
add
popa
ficompl
orl
lods
jno
xchg
dec
in
mov
xchg
and
outsb
xchg
rcl
cmc
les
lret
dec
jecxz
rol
inc
jge
or
inc
lcall
hlt
or
daa
loope
push
cmc
jge
adc
aam
rcll
add
pop
cmp
jno
sbb
sbb
push
ja
shrb
enter
fchs
push
and
jp
shl
repz
jb
stos
inc
or
addr16
cmp
les
loop
and
mov
pop
inc
sub
and
pop
push
xchg
jbe
sub
xchg
jp
mov
mov
dec
sbb
mov
ds
dec
call
dec
rcrb
mov
sbb
mov
xchg
and
lret
push
mov
sub
and
ret
sbb
adcb
test
xchg
sbb
push
adc
xchg
add
pop
adc
jecxz
cmp
inc
dec
cvtps2pd
push
andl
sub
sub
insl
popa
dec
pop
loopne
add
inc
daa
push
aaa
daa
jle
mov
fmuls
mov
ja
sbb
sub
or
xlat
rolb
pusha
daa
cmpsl
cltd
dec
xorl
mov
dec
xchg
adc
and
sbb
jmp
sbb
jb
jmp
or
or
jbe
mov
jne
jl
push
or
xor
into
nop
sbb
aad
in
mov
cmp
dec
icebp
aam
test
and
bound
movsl
lods
pusha
dec
jecxz
mov
pop
jae
mov
push
fdivs
mov
in
in
jp
dec
rolb
sahf
pop
xchg
xor
ja
repz
bound
mov
push
ljmp
add
and
aaa
popl
and
add
jo
gs
add
cld
jl
js
mov
mov
gs
aad
sub
add
addb
les
es
dec
pop
xchg
mov
loopne
cmp
sbb
in
jecxz
sub
push
les
imul
pop
dec
and
int3
jnp
decb
shlb
repnz
add
arpl
xorl
sarl
add
test
stos
ss
jne
jo
or
pop
out
push
imul
mov
xor
add
jecxz
and
push
or
adc
mov
lea
shl
mov
cmp
xchg
push
or
pop
pop
inc
dec
sbb
addl
add
inc
clc
add
push
punpckhwd
xchg
mov
popa
xor
cmpsb
push
mov
push
jno
xchg
iret
jp
xchg
mov
pushf
xchg
mov
jns
xor
aam
popl
mov
xchg
xchg
js
out
jnp
adcl
ret
aaa
test
jmp
out
dec
jp
xor
adc
adc
inc
jmp
xchg
scas
je
repz
ret
aas
mov
xor
pop
js
and
sub
xor
sub
fiadds
fists
or
pop
lods
je
jp
call
pop
enter
mov
les
sub
inc
lock
mov
rorb
insl
outsl
mov
pop
sub
and
mov
cltd
push
or
test
adc
mov
pop
xlat
psllq
pop
dec
fdivrs
rolb
or
add
add
inc
inc
maxps
aad
xchg
adc
rcr
pop
stos
and
fiadds
imul
pop
and
insl
xchg
add
push
jnp
jno
sbb
addb
sbb
add
cmpsl
mov
in
xorb
jge
pop
ljmp
rolb
out
push
call
int
inc
push
cmp
pop
jnp
andb
out
inc
pop
out
js
mov
ficompl
and
and
add
sbb
scas
adc
pop
mov
test
pushf
fisttpl
ffree
mov
add
ret
pop
push
dec
inc
mov
push
mov
sub
adc
push
or
divl
xlat
adc
dec
or
add
push
and
daa
frstor
lock
adc
js
leave
push
push
xor
popf
add
rcrb
jmp
xchg
scas
push
addl
mov
push
mov
in
loopne
out
idivl
adc
lock
out
inc
fidivrl
fsubr
adc
iret
test
adc
dec
xchg
xor
sti
loop
add
push
iret
jno
mov
push
mov
ja
mov
mov
nop
sbb
incl
adc
pop
fistpll
js
jle
jecxz
jl
scas
into
xor
out
sub
ds
inc
dec
ljmp
imul
and
inc
movsb
sbb
cmpsb
xchg
mov
ret
jo
in
repz
icebp
xor
sbb
arpl
xcrypt-cfb
cmpsl
arpl
out
push
movb
std
add
popf
push
push
int
xchg
das
stos
pop
mov
jp
xchg
dec
xchg
jo
or
jge
fiaddl
add
shll
xchg
dec
jmp
pop
jg
mov
xor
sahf
fldl
ss
and
and
adc
loop
sub
xchg
lods
imul
das
xchg
movsl
movsb
movsl
popa
sub
aas
cwtl
sbb
lock
fildll
mov
add
aaa
dec
mov
stos
inc
out
shrb
sbb
ret
mov
pop
xchg
outsb
cld
add
loopne
sbb
xor
test
movsb
mov
sbb
dec
add
je
jb
adc
dec
push
test
and
mov
push
mov
lock
int3
icebp
filds
gs
sub
sub
js
xchg
fs
mov
or
jb
je
rorb
sarb
add
xchg
mov
push
jae
fisttps
rclb
dec
inc
mov
mov
sub
outsb
mov
mov
cmpsb
ret
mov
adc
mov
add
pop
cltd
cmpsl
in
ss
sbb
in
out
leave
rclb
dec
jg
adc
sbb
test
sahf
dec
sbb
sub
push
push
inc
mov
fsubl
aas
loope
add
scas
mov
inc
shll
push
in
and
add
mov
dec
inc
inc
iret
jl
or
lods
cmp
adc
sti
pop
fsubl
sahf
xor
hlt
inc
mov
jo
sbb
inc
les
add
push
test
rcrb
orb
adc
cmc
test
hlt
lea
sub
lods
xchg
add
xorb
push
mov
or
push
mov
or
out
adc
xor
add
add
adc
fsubs
add
push
sbb
mov
popa
jl
cmpsb
mov
sbb
pop
xor
test
add
xor
jnp
inc
lahf
test
or
popa
stos
jns
daa
into
add
lret
adcl
les
inc
mov
push
cmp
pusha
cmpsb
cmp
call
hlt
movsl
sbb
pop
and
add
data16
cwtl
iret
push
inc
add
lea
cs
mov
adc
shlb
addl
add
scas
push
xchg
cmp
sub
add
push
mov
and
movsl
jno
cmp
sub
sbb
jmp
push
pop
or
mov
jp
mov
inc
and
mov
inc
inc
cli
cli
ja
data16
sbb
cwtl
or
scas
sub
xchg
jno
adc
mov
and
or
sub
cmpsl
push
stos
in
in
aad
or
push
addr16
sbb
xchg
and
dec
jne
imul
outsl
xchg
out
out
in
lahf
stos
mov
test
cwtl
fiaddl
fcomip
lods
inc
add
add
push
jecxz
sbb
sbb
mov
push
js
jecxz
ds
sbb
sub
add
add
mov
cmp
mov
je
int
cli
ror
test
les
addr16
xor
add
sub
push
ret
and
xor
hlt
enter
add
arpl
pop
push
add
sahf
sub
es
daa
add
or
sbb
add
sub
lods
adc
cmp
jmp
sarl
adc
and
adc
add
add
movsb
add
xor
fsubs
or
mov
push
hlt
js
fidivrl
iret
iret
pop
lret
pop
in
inc
pop
test
dec
les
in
mov
mov
add
inc
mov
popf
call
add
scas
mov
mov
les
sub
lea
xchg
pop
cmp
shlb
test
mov
cmp
cmp
xlat
sbb
mov
cmp
jmp
push
jle
out
ljmp
xchg
xchg
in
cld
rolb
rol
adc
and
stos
iret
sub
push
pop
add
lock
negl
dec
popa
test
and
mov
and
mov
lods
mull
sub
in
cmp
std
mov
xor
fldln2
or
lahf
sub
mov
notl
push
cwtl
shrb
push
test
jo
iret
pop
and
mov
and
add
cmp
add
arpl
and
mov
sub
and
add
jle
push
add
fs
sbb
push
pop
fcmovu
mov
lods
fildll
dec
sbb
jns
bound
inc
mov
in
js
iret
push
sub
in
xchg
or
pop
or
inc
cmove
or
dec
fnsave
fdiv
pop
jne
ja
or
sub
mov
pop
and
stos
sub
addr16
inc
in
sub
movsl
adc
sub
pop
mov
out
cmp
mov
pop
dec
and
lret
fbstp
je
and
arpl
and
add
inc
fs
mov
or
jmp
sub
insl
mov
cmp
pop
mov
dec
bound
sub
iret
push
mov
int3
sti
cmp
popa
and
add
sbb
flds
xchg
adc
lods
decl
clc
and
outsl
or
push
je
fadd
dec
call
xchg
lret
arpl
push
mov
dec
loope
pop
adc
aas
das
repnz
lcall
insl
popf
mov
push
dec
sbb
cwtl
out
flds
mov
add
aaa
nop
jno
ljmp
push
adc
cli
rcll
popa
cmpsb
xchg
aam
aam
imul
outsl
push
cmovnp
mov
inc
int3
xor
insl
jle
les
sbb
add
lods
jnp
les
lds
dec
sub
mov
xchg
mov
rsqrtps
push
imul
push
mov
es
push
loop
subb
push
lret
mov
divl
cmp
adc
push
mov
push
lods
xlat
pop
inc
add
push
ja
push
mov
push
xor
mov
dec
push
je
lods
test
mov
je
popa
add
sbb
js
ror
lds
and
push
loop
aam
push
ret
bnd
loop
add
in
iret
inc
mov
ja
cli
push
jo
xor
push
ret
ret
test
es
mov
hlt
and
dec
push
sbb
dec
jne
push
cltd
mov
rcrb
add
push
hlt
fs
and
add
dec
sbb
mov
xor
push
mov
or
inc
jge
les
rcrl
xor
or
cmpsl
addl
mov
lret
add
cmp
inc
daa
in
pop
gs
adc
jl
add
sub
sub
jmp
repnz
mov
pop
add
pop
addr16
inc
sub
testb
jno
adc
sbb
cmp
push
sbb
aad
xlat
mov
mov
rcll
and
mov
pop
pop
pop
mov
lods
movsb
dec
movsl
dec
popf
ja
fmul
add
cmp
mov
push
enter
cmpsb
jecxz
xchg
lods
mov
xor
mov
arpl
push
mov
cmpsl
addps
jl
or
jns
add
sahf
sti
das
sub
mov
stos
mov
push
imul
pop
bound
inc
xor
jbe
xor
lods
xchg
push
addl
push
jbe
shrb
test
imul
shl
mov
ret
shlb
xor
fsubp
imul
mov
inc
pop
and
dec
push
popa
jo
out
dec
js
data16
aad
mov
jno
out
and
sar
lds
push
fcmovb
add
mov
xchg
dec
pop
pop
mov
movb
pop
pop
adcb
mov
mov
mov
data16
push
mov
xor
add
adc
adc
sbb
cmp
xlat
sbb
cmpsl
or
dec
leave
pop
add
movsl
mov
subl
inc
pop
push
jmp
movsl
cmc
leave
and
push
movsl
xchg
in
out
xor
add
cld
and
push
jg
add
jecxz
pop
add
dec
dec
mov
scas
cltd
push
add
stos
pop
or
in
cmpsb
mov
fwait
xor
mov
daa
aad
sarl
pop
xchg
loope
shlb
push
cmp
lods
xor
aad
dec
icebp
loopne
cmp
add
adc
jg
sbb
cs
cli
out
and
sub
aaa
imul
mov
pop
sub
and
aam
popa
inc
xor
xchg
popa
in
clc
cmp
popf
subb
dec
in
jecxz
rcl
nop
seto
add
mov
adc
add
mov
inc
rorl
xchg
rolb
jmp
stos
sbb
pushf
shrb
dec
les
scas
gs
jg
pop
into
popf
jne
and
inc
pop
xchg
jnp
adc
add
pop
adc
sub
jle
add
cwtl
mov
push
mov
adc
and
mov
jnp
fisttps
dec
xchg
add
sbb
adc
je
jp
aas
push
dec
jns
mov
or
xchg
pop
lcall
dec
inc
loope
dec
adc
cmpsb
stos
xlat
repz
nop
or
cmp
sbbb
mov
cmp
mov
add
xchg
and
cli
inc
insb
sub
sub
in
or
aas
push
orl
pop
dec
decl
jl
icebp
sbb
sub
stc
cmp
filds
or
or
add
and
push
mov
adc
mov
fmuls
fnstcw
scas
adc
gs
pop
push
jno
mov
pop
pop
lea
jecxz
rcl
movsb
mov
outsl
cmp
lea
mov
jo
fwait
push
add
dec
adc
outsl
leave
loope
test
loope
xor
adc
mov
inc
pop
inc
sub
adc
mov
imul
movsl
ret
xor
addl
popf
out
xchg
js
mov
imul
pop
dec
adc
fs
insb
scas
jle
inc
ljmp
aas
sub
rolb
aas
stos
inc
ja
iret
incl
inc
ja
add
inc
stos
or
inc
repz
fcomps
adc
jno
inc
testl
and
or
stos
pop
adc
xchg
sub
jmp
pop
lock
pushf
repz
pop
push
test
lret
mov
pop
and
test
stos
ror
cld
mov
call
ffreep
add
rorl
push
push
pop
pop
ficomps
mov
pop
pop
sbb
outsl
sbb
inc
mov
mov
mov
clc
mov
iret
pushf
or
jecxz
fs
cmc
and
xor
push
mov
inc
mov
js
aad
push
or
inc
push
mov
sbb
aad
jae
add
addl
sti
loopne
cmp
stos
in
lret
testb
sbb
mov
lret
mov
test
and
sub
cmp
adc
xor
and
push
jo
jnp
outsb
jnp
sub
jl
mov
push
add
xor
jb
jmp
cmpsb
adc
jb
push
ret
sbb
lahf
add
push
sub
sub
mov
cmp
lods
add
shll
lcall
mov
sub
ja
sub
dec
pop
add
ja
sub
fdivs
and
cmp
adc
dec
int3
or
cmp
inc
rcll
popa
sub
or
orl
xor
cmpsl
push
inc
pop
stc
cmp
add
or
pop
mov
or
add
add
out
add
xor
out
pushaw
fsts
cmp
xor
inc
and
jae
sbb
movsb
xchg
and
or
sub
scas
push
pop
mov
sbb
push
rclb
fs
popa
loope
jmp
fdivl
xorb
aad
dec
cmc
push
outsl
test
mov
popa
add
cmp
pop
jge
dec
jno
loope
fstps
adc
mov
lret
sahf
push
jne
ss
fistl
dec
out
inc
subl
push
xchg
ds
and
pop
adc
lea
adc
cmp
push
push
xchg
enter
lahf
push
xor
cmpb
cs
mov
jns
pop
rol
aaa
shlb
jno
dec
mov
jp
xor
dec
lock
outsl
sub
ficoms
and
add
es
test
repz
push
push
mov
in
mov
jmp
mov
loop
and
sub
cmp
movsb
loop
push
jne
inc
bound
or
sbb
pushf
mov
inc
not
or
mov
and
and
fadds
test
jns
out
xchg
sbb
xor
lock
and
lea
mov
das
movsl
movsb
jmp
add
add
gs
sbb
jae
daa
stos
ds
inc
scas
jae
or
sarl
vmread
bound
dec
out
xchg
jo
push
mov
jne
loope
insb
mov
mov
add
mov
repnz
mov
push
mov
xor
enter
inc
sub
pop
cmp
xchg
pop
xor
sbb
bound
test
pop
insl
or
adc
and
leave
jns
mov
jecxz
es
imul
sbbb
in
jo
out
and
pop
mov
mov
loope
imul
imul
inc
rcrl
in
push
and
add
pop
jns
dec
prefetch
adc
xor
imul
mov
addr16
cmpsb
mov
jnp
or
xchg
mov
outsl
jmp
ret
and
lods
fmuls
insl
pop
dec
sub
mov
push
mov
shl
inc
sbb
cmpsb
pop
daa
add
mov
sbb
sti
ja
add
stc
pop
daa
inc
sub
xchg
and
mov
mov
cmp
jecxz
mov
sub
test
rcl
movsb
insl
mov
dec
filds
sbb
rolb
push
or
lds
sub
fisubs
add
dec
push
xor
add
push
adc
inc
push
or
ret
push
bound
loopne
fsubl
xchg
pusha
pushf
into
stc
in
rol
push
arpl
cs
jbe
mov
cs
aaa
int3
mov
jp
clc
mov
jne
jp
push
loope
fbld
sbb
xchg
mov
lcall
cltd
push
cmpsl
xchg
ja
xlat
sbb
jo
enter
jo
test
add
rolb
adc
lahf
dec
push
sbb
dec
sbb
jp
cwtl
pop
aam
sub
fs
push
adc
les
mov
std
sbb
sub
popl
fldenv
lahf
and
sti
int
mov
cmp
iret
dec
andl
out
aam
mov
pop
mov
xor
and
test
loopne
pop
pop
mov
add
sbb
rcr
aas
push
mov
gs
daa
pop
add
mov
into
sbb
mov
sbb
sbb
leave
mov
xor
sub
fistpl
roll
mov
adc
test
ret
mov
fidivs
arpl
popa
outsl
mov
lret
pushf
sbb
imul
add
shlb
add
cmc
rorb
xlat
sub
push
popf
scas
icebp
cmp
sub
cltd
mov
lret
jecxz
pop
aaa
lret
push
pop
or
out
and
aaa
lea
jl
or
sbb
shl
inc
mov
mov
sub
cmp
aam
xor
gs
and
loopne
shrb
divb
inc
push
imul
adc
subl
xchg
mov
push
cmp
cs
ret
into
ds
cmp
mov
cwtl
add
clc
insl
inc
das
fsts
push
xchg
aaa
in
push
decb
and
pop
push
imul
mov
pushw
and
loopne
test
add
mov
in
cwtl
outsl
mov
or
mov
adc
mov
popf
or
and
push
rclb
pop
mov
jo
gs
pop
dec
add
mov
outsb
test
add
xor
mov
add
fisttpl
cmp
mov
test
mov
adc
jl
inc
popa
test
or
ja
shlb
pusha
out
jo
ret
jb
jb
imul
mov
cli
sbb
fadd
add
pushf
inc
divb
insb
ds
pusha
add
cld
movsb
popl
icebp
mov
les
inc
out
and
mov
add
and
notb
fcomip
fiaddl
cmp
cwtl
pop
loopne
decb
lret
scas
inc
lods
fs
mov
mov
mov
mov
mov
lock
lds
in
pusha
cmp
mov
dec
mov
fstl
mov
fildl
mov
test
jno
sub
mov
lock
mov
sub
or
inc
and
jbe
fst
or
sysret
ja
push
add
out
cmp
insb
popa
push
repnz
test
vpcmpgtw
lea
in
adc
mov
and
movsl
ret
rclb
orl
addl
jns
out
fnstcw
lret
pop
clc
test
popa
pop
shll
inc
mov
in
and
adc
xchg
xor
add
ss
xchg
daa
cmp
xor
mov
iret
cmp
pop
inc
arpl
call
dec
movsl
mov
jmp
test
mov
in
movsl
dec
add
pushl
cmp
inc
fmuls
jg
and
mov
mov
das
adc
pusha
bound
xor
outsl
add
or
sbb
dec
and
mov
dec
add
fs
and
push
insl
pop
xlat
pop
xor
psubsb
xlat
dec
add
and
cltd
sbb
xchg
xor
les
dec
dec
cltd
sub
rorb
pusha
test
dec
xchg
ret
add
mov
rcrl
sub
add
fidivl
or
andb
mov
sbb
aaa
and
push
bound
dec
ja
mov
jo
adc
daa
cmpsl
mov
jbe
jo
jge
scas
adc
nop
imul
das
movsb
xlat
xchg
scas
dec
loopne
cld
add
fadds
ret
stos
loope
dec
dec
inc
and
pop
mov
jmp
cmp
addl
add
sbb
cmp
leave
sbb
mov
xor
dec
mov
mov
or
xchg
divl
int3
std
add
inc
or
lret
pop
mov
insb
and
out
push
adc
mov
add
mov
aaa
js
pop
and
cmp
lea
sarl
sahf
adc
mov
xor
or
sub
and
adc
jb
xchg
or
or
stc
je
cmp
add
dec
inc
mov
jmp
pop
in
adc
xchg
or
xchg
movsb
xor
lret
faddl
push
add
adc
iret
or
mov
add
pusha
pusha
imul
je
dec
or
roll
sub
mov
and
test
or
and
fistps
jo
pop
stos
pop
add
xchg
xchg
daa
fadds
add
fdivrs
add
shrb
and
inc
cltd
adc
xlat
mov
jl
jns
sub
adc
dec
es
ror
jne
sbb
jns
add
adc
mov
loopne
add
or
add
xchg
clc
ret
das
repz
xchg
aaa
adc
pop
add
mov
in
dec
pop
add
cs
stos
adc
out
daa
int
icebp
push
xchg
aam
mov
into
lret
add
pop
add
push
in
pop
or
and
mov
gs
xchg
movsl
mov
or
xor
xor
popf
lcall
addl
xor
imul
sbb
movsl
sarl
in
pop
dec
mov
inc
pop
sub
mov
test
sbb
rcl
repnz
xchg
adc
pop
mov
fcomps
pop
or
out
iret
mov
jmp
mov
cmp
xor
shrl
sbb
push
scas
incb
shlb
dec
cmp
add
xchg
xor
mov
cmp
pusha
arpl
xchg
dec
push
dec
arpl
add
cltd
dec
and
and
mov
mov
add
fld
ffree
xor
mov
xchg
sbb
xlat
mov
add
ss
dec
lret
xchg
xchg
and
add
pop
pop
inc
mov
inc
dec
jg
push
sbb
xlat
mov
mov
xchg
enter
xor
add
popf
cmp
jo
lock
adc
jnp
and
xchg
pop
gs
daa
lods
add
add
js
loopne
nop
mov
sbb
movsb
lret
scas
je
mov
mov
mov
xor
mov
mov
push
addb
pop
add
stos
popa
add
add
or
or
call
in
mov
sub
xchg
add
stos
repnz
pop
sub
xor
imul
jne
mov
pop
adc
push
cmpsl
ja
jbe
leave
test
add
pop
dec
ret
sahf
andl
pop
mov
xchg
mov
js
xrelease
adc
xchg
daa
movsb
sbb
mov
xchg
sub
and
or
out
cs
push
icebp
es
mov
inc
in
push
cltd
pop
scas
xchg
dec
sbb
inc
cltd
add
out
cli
dec
insb
push
fimuls
add
adc
nop
out
es
pop
sub
adc
sahf
xor
das
sub
and
push
push
mov
fneni(8087
shll
sarl
dec
sub
es
sub
pop
xor
xor
fs
or
les
mov
sub
fiaddl
pop
adc
cwtl
cs
dec
xor
cli
xchg
sbb
xor
mov
sub
inc
imul
cld
fwait
stc
test
sahf
popf
mov
test
movsb
mov
popf
add
ja
sub
xor
sbb
xor
ja
lcall
pop
shlb
add
xchg
sbb
insl
lret
sarl
sbb
leave
push
loopne
sub
xchg
lock
sbb
adc
aas
stos
fidivrs
sub
inc
outsl
popa
and
or
imul
xchg
lock
aam
dec
mov
adc
or
js
aaa
add
lcall
mov
cmp
add
repz
mov
movsl
jne
mull
movsb
icebp
dec
xchg
jo
pushf
and
enter
stc
dec
cmp
dec
cmp
pop
add
or
jmp
and
add
nop
xor
sub
pop
mov
jno
pop
or
into
fs
bound
lret
push
add
mov
scas
addr16
fisubl
pop
inc
fisttps
dec
adc
push
inc
imul
addb
inc
outsb
aaa
inc
push
out
ljmp
out
cmpsl
sbb
or
imul
in
outsl
add
dec
sub
and
mov
sbb
dec
jb
cmp
dec
pusha
mov
dec
inc
sub
daa
movsb
addl
mov
sarl
cmp
mov
cmp
and
pop
sbb
sbb
mov
add
lret
xor
add
pop
push
push
sbb
cmp
icebp
sub
mov
cltd
not
negl
inc
shlb
ds
loope
ss
cmp
fcoml
bound
mov
shlb
or
or
scas
mov
sub
fs
xor
fsubp
sbb
fisubs
popa
cmp
ds
sbb
inc
mov
add
add
loopew
cmp
jmp
ret
mov
mov
jbe
mov
and
and
nop
pop
fcoms
les
fsubs
mov
bound
call
repz
sub
enter
out
mov
cmc
push
sar
cmp
sarl
cmp
jb
xor
sbb
or
mov
dec
loop
pusha
dec
mov
push
outsb
data16
rolb
out
inc
enter
cmpsl
dec
in
push
addb
jno
adc
xor
mov
cwtl
cmpl
lret
lds
aaa
adc
push
stos
pushf
jo
call
mov
cmp
pusha
dec
and
fmull
scas
sub
pop
out
pop
icebp
sbb
dec
pop
mov
lds
es
add
and
mov
insb
pusha
mov
dec
mov
push
std
add
ja
ret
sbb
inc
jge
out
and
mov
jge
add
or
inc
jmp
sub
cmp
add
shll
jo
testl
cmp
daa
mov
mov
and
mov
and
cmp
ja
sbbl
and
ja
gs
stos
ret
adc
push
fidivrs
mov
mov
push
xor
ret
shll
loopne
cmp
shl
lahf
adc
fiaddl
mov
pusha
dec
mov
add
add
aas
cmp
inc
add
jecxz
xchg
push
out
loopne
mov
sbb
fsubrl
lss
xor
gs
loopne
ficompl
test
add
add
ja
sarb
je
ret
and
xchg
cmp
stc
loopne
std
push
inc
add
pusha
repnz
les
fdivl
add
pusha
cmp
cmp
add
sbb
cmpsl
pop
push
test
dec
in
out
loopne
xchg
pop
dec
dec
in
iret
mov
cmpsl
out
pop
jmp
out
pop
cmc
in
jae
push
mov
addl
sbb
mov
mov
sbb
jecxz
fstl
out
or
loop
loopne
in
clc
cmp
mov
pop
idiv
jno
lods
cmp
sbb
mov
add
jnp
xchg
test
jne
addr16
rol
fld
loop
xorb
inc
push
xor
addr16
cmpsb
gs
and
cmp
jecxz
add
lods
jmp
mov
and
xlat
shl
xor
sbb
or
pop
sarl
sbb
lods
mov
arpl
test
xlat
fsubs
jmp
xchg
jecxz
outsl
cmpl
sbbb
push
cwtl
jmp
es
inc
add
sbb
addr16
add
dec
push
shlb
repz
mov
cmp
mov
out
lds
push
jb
sub
lret
and
movb
and
or
xor
mov
outsl
cmp
shll
sub
jbe
cmp
scas
lock
xor
push
leave
cmp
push
insl
lods
and
sbbb
loope
shlb
mov
dec
push
dec
popa
xorl
sub
fnstenv
jmp
mov
or
rol
add
cltd
inc
lods
out
pusha
out
inc
add
frstpm(287
imul
pop
sub
cmp
and
inc
add
and
scas
cmpsl
cmpb
pop
lea
adc
fmull
bound
mov
dec
and
adcl
add
and
repz
movsb
shl
jno
fs
jp
xchg
sbb
sbb
add
jmp
lods
add
xchg
mov
leave
push
push
iret
jle
adc
fistl
push
push
sbb
cwtl
je
dec
mov
add
add
ret
aam
test
dec
or
addl
addr16
mov
pop
pop
ds
aad
or
add
push
xchg
adc
jmp
arpl
xchg
and
lret
sub
cmpsl
insl
ja
jnp
push
pusha
jl
sub
in
mov
jecxz
mov
ret
cmp
mov
or
out
fstl
mov
jg
sub
pop
les
shrl
lret
and
push
rclb
sub
dec
add
jp
ret
and
xchg
mov
mov
cmp
adc
mov
jns
iret
test
add
pop
mov
push
pusha
mov
jle
dec
xchg
mov
mov
xorb
push
cmp
std
lods
mov
inc
sbb
add
push
jl
lea
sbb
add
scas
and
cltd
xchg
mov
loop
frstor
adc
and
icebp
inc
push
push
xchg
dec
popa
dec
or
addb
adc
cmp
pop
in
adcl
cmp
fsts
jne
cmp
push
sub
call
mov
inc
sbb
push
int
mov
pop
inc
push
jno
inc
add
ret
test
shlb
lahf
loop
sbb
sub
dec
add
addr16
push
aas
add
mov
arpl
jl
pop
outsb
pop
inc
cmp
aaa
movsb
mov
cmpb
xchg
rolb
ret
add
sbb
pushf
mov
stc
jnp
mov
pop
inc
mov
cmp
sub
popa
ret
add
stos
and
dec
in
sbb
cmp
pop
lea
rorb
push
js
add
cmpsb
dec
ljmp
stos
fisubrl
les
int3
shrb
add
loope
iret
adc
sub
mov
cmc
sti
outsl
stos
push
jecxz
xchg
fdivrs
pop
out
jmp
jo
cwtl
test
or
mov
iret
push
mov
daa
sbb
loopne
mov
data16
pop
or
sbb
movsl
pop
es
sub
fnstenv
sbb
pop
jno
out
pop
cmp
inc
nop
adc
mov
subl
cltd
cmpsl
mov
cli
dec
mov
sub
arpl
add
adc
and
ja
cmp
hlt
mov
fdivp
lcall
push
sub
sub
test
mov
adc
pop
test
mov
sarl
push
xor
lds
add
aaa
dec
outsl
xchg
adc
dec
pop
inc
inc
inc
inc
sbb
out
cmp
imul
ret
adc
lods
mov
test
sbb
dec
sarb
rol
clc
and
sub
and
xchg
sbb
add
mov
or
dec
dec
lret
add
sbb
add
fstl
nop
pop
and
fs
push
fmulp
push
or
push
add
add
aaa
loop
xor
loopne
mov
xchg
mov
dec
pop
dec
or
out
push
mov
mov
inc
fsubrs
popa
pop
mov
xchg
cmp
mov
cmpl
sbb
xor
iret
jp
ficoml
jno
pop
add
pop
pop
lods
fs
lds
ret
lds
mov
xchg
and
and
int
inc
add
ja
add
adcl
inc
cmp
orl
pop
dec
and
lods
movsb
dec
xchg
push
dec
xor
imulb
cmp
sbbb
or
mov
movsl
mov
sbb
nop
popa
adc
stos
jae
add
es
jge
outsb
push
fiadds
jnp
pop
pop
imul
and
xor
xchg
mov
or
daa
add
cmpsl
outsl
or
hlt
sbb
jge
lods
xchg
jp
loop
iret
mov
mov
cwtl
jmp
ss
push
filds
adc
cmpl
add
cmp
dec
loope
fists
mov
cmpsl
push
xchg
imul
sbb
sbb
dec
or
pop
js
push
xchg
pop
xor
mov
jecxz
xchg
xchg
clc
mov
push
push
add
mov
andl
sub
cltd
sub
xchg
pop
dec
or
jp
rorb
pop
or
lcall
sbb
bound
ja
fists
js
or
or
mov
ret
scas
inc
fdiv
imul
lret
in
jae
push
and
test
clc
sbb
add
cmp
or
jmp
and
mov
aad
sbb
ds
push
adc
xor
les
xchg
imul
js
mov
pop
jge
push
cmp
in
push
inc
shr
push
inc
test
or
cmpb
push
add
add
or
insb
jnp
int
sbb
jo
jns,pn
add
movb
jmp
mov
inc
xchg
jp
rorb
outsb
das
inc
js
xor
sbb
mov
adc
add
pop
sbb
stc
imul
dec
xchg
cmpsl
out
iret
clc
adc
and
push
es
fbstp
inc
stos
cmp
pop
mov
mov
insl
ficoml
insb
cmp
lret
icebp
jne
pushf
repz
and
cli
push
dec
add
pop
adc
cmpsb
mov
dec
mov
pop
sub
das
dec
and
mov
call
lods
sbb
test
pushf
mov
aam
jno
gs
or
xor
int
ret
sbb
jno
sti
data16
jle
add
fdivs
jge
sbb
test
fmuls
add
lods
cmc
xchg
lods
dec
leave
sti
dec
movups
lods
push
popa
adc
outsl
fs
jno
xor
call
lret
xchg
mov
push
add
jmp
add
sti
push
nop
xor
les
shrb
or
inc
mov
mov
daa
or
xor
push
adc
test
mov
push
sbb
inc
ret
jne
and
sub
cmp
adc
cs
adc
cmpsb
or
mov
pusha
stc
mov
gs
xchg
pop
pop
arpl
test
xor
rorl
pop
xor
or
movsb
add
lea
add
orl
mov
out
hlt
roll
sub
push
lret
mov
and
mov
xchg
xchg
push
and
bound
popf
hlt
lahf
orl
push
scas
sti
sub
push
dec
mov
sub
inc
inc
xlat
mov
pop
mov
movaps
into
std
dec
or
pop
and
pop
add
jmp
or
jb
repz
and
pop
iret
jo
daa
mov
out
ret
or
sbb
imul
mov
and
jmp
data16
and
aas
sub
fstl
out
lods
add
test
sbb
rolb
xor
and
fldcw
jo
inc
mov
and
in
mov
sub
mov
jbe
xchg
pop
add
imull
add
aaa
jp
or
add
cltd
ss
push
push
or
jge
addb
jne
scas
push
sbbb
scas
std
mov
cmpsl
push
adc
push
sub
adcb
sub
dec
in
adc
decl
test
pushf
inc
fadd
adc
in
xchg
ret
pusha
adc
inc
or
sub
add
aaa
into
add
pop
jecxz
mov
cli
jmp
mov
dec
lret
xor
or
xchg
jp
add
or
orb
add
insl
loope
popf
int3
xor
cmpl
push
mov
test
mov
jns
sub
fwait
stos
andl
xor
rolb
pop
dec
addr16
cmc
or
js
hlt
loope
stos
and
dec
popf
add
sbb
icebp
xchg
xchg
mov
imul
inc
data16
cltd
addb
sbb
les
jg
dec
push
xchg
mov
cmp
scas
ret
in
add
mov
imul
or
es
jmp
lods
add
clc
subl
push
xchg
xchg
mov
jecxz
ja
xor
lods
sub
xor
out
xor
mov
or
pushf
mov
addl
jne
roll
or
inc
mov
sti
imul
jge
jo
js
add
sbb
adc
or
inc
fildl
cmp
orl
sbb
mov
push
or
jl
and
mov
gs
adc
pop
cmp
stos
ret
pop
popa
sahf
push
pusha
cmp
inc
xlat
push
jmp
pushf
hlt
xchg
mov
jp
int3
push
xchg
push
icebp
xor
xor
ja
mov
imul
sbb
push
sub
mov
out
into
dec
mov
add
inc
mov
mov
xchg
pop
sbb
cmc
fadds
js
add
jnp
mov
dec
sub
je
cmp
inc
mov
inc
sub
mov
les
add
add
dec
fstpl
loopne
xchg
loop
iret
push
movsl
mov
inc
call
add
dec
jle
xor
xor
out
dec
xlat
ret
jbe
jecxz
jecxz
add
scas
dec
jge
pop
or
arpl
cli
add
shrb
pop
scas
decb
inc
test
hlt
hlt
push
loope
mov
adc
rcl
push
sarb
push
cmp
mov
ljmp
xchg
mov
dec
mov
nop
stc
push
push
jmp
pop
inc
and
jne
and
popa
fcoml
lret
dec
push
push
insl
insb
out
xor
pusha
push
js
push
sbb
or
cmpl
in
adc
aaa
pusha
and
movsb
cmp
movsb
lar
xchg
fistpll
ret
sub
in
pop
xor
int
xchg
popa
adc
repnz
jg
test
sub
jle
shrl
popa
cmp
sbb
jmp
mov
xor
aaa
test
lea
inc
xchg
sahf
mov
mov
nop
mov
nop
and
pop
cmp
mov
stos
add
sbb
es
fmuls
mov
sub
lock
mov
adc
inc
pop
xchg
es
int
add
mov
aad
fbld
sbb
in
push
add
xor
inc
dec
cli
xorb
sub
and
lret
rorb
fistl
sub
repnz
addl
nop
aam
fs
mov
loope
pop
push
cmp
pop
push
and
jge
add
or
fdivs
and
xchg
shlb
mov
sub
dec
sbb
fsubl
or
jecxz
mov
aaa
insl
and
jl
adc
les
pop
jl
cmp
enter
test
pop
push
sub
or
adc
cmpsl
or
push
scas
jbe
and
fsubrs
push
sub
xchg
adc
cmpl
stos
and
mov
add
lret
popa
sub
cs
adcl
sub
iret
popf
popa
daa
icebp
in
dec
rolb
or
pop
push
add
dec
aam
mov
fwait
shll
stos
mov
jo
ds
or
push
or
test
xchg
insl
sub
mov
push
fdivrs
daa
cmp
loope
mov
mov
pop
xchg
and
stos
mov
dec
push
les
xor
xchg
add
sub
pop
adc
sub
incl
cmp
push
jb
les
fwait
movl
popa
andb
scas
add
inc
push
sub
adc
or
in
fnstcw
cmp
add
cs
push
jp
and
and
fwait
or
add
rorl
mov
jnp
inc
inc
mov
xchg
lret
cmpsl
jnp
rcrl
ret
and
mov
or
cs
cmp
sub
mov
je
cmp
jnp
fs
push
bound
dec
mov
and
push
push
xlat
mov
popa
out
mov
xlat
add
jle
jp
cmp
jb
add
jns
fnsave
jl
iret
jge
sub
ffreep
add
pop
xor
adc
xchg
sbb
sub
xor
sbb
sysret
aas
pop
pop
andb
rcll
adc
insl
jbe
in
ret
sbb
pop
mov
sbb
sar
lods
inc
or
fsub
in
aas
lods
and
jae
fnstcw
add
mov
push
or
adc
or
clc
loope
repz
ret
cmpb
jle
mov
cmp
add
cli
dec
jecxz
cmpsb
loope
pop
add
repnz
jo
cmp
dec
xor
push
popa
movsb
xchg
dec
and
dec
pop
dec
add
ss
sbb
insb
jl
push
pushf
sahf
out
shlb
outsb
add
jae
les
or
or
mov
sti
lret
sbb
sbb
sub
or
mov
or
mov
popa
jne
arpl
jp
paddb
add
mov
fisubrs
adc
sbb
jns
xlat
daa
or
xor
inc
sub
add
lods
sub
shll
cmpsl
leave
add
out
addb
or
enter
and
pop
mov
pusha
pop
xchg
mov
and
mov
add
jge
sbb
in
adc
xchg
cmpsl
xor
sarb
ficomps
fucom
jmp
ja
inc
jg
imull
repz
inc
add
and
push
jmp
sbb
pop
popf
jecxz
jnp
scas
fxch
testw
out
adc
sarb
outsl
add
xchg
adc
sbb
jecxz
lds
add
lcall
add
cmc
mov
add
cmp
addr16
mov
int3
cmp
sub
mov
add
add
add
dec
roll
xor
or
ljmp
fildll
bnd
jmp
add
aaa
andb
lea
cmpsb
cmpsb
outsl
or
lea
add
xor
rcll
and
test
stos
sbb
int3
ret
aam
xchg
push
pop
pop
add
and
and
cvtdq2ps
outsb
or
adc
xor
das
xor
js
adc
push
ss
jmp
adc
clc
icebp
in
jp
std
and
xchg
hlt
adc
adc
push
nop
movb
dec
or
dec
mov
imul
stos
pop
insl
lcall
xchg
or
mov
fbstp
sub
push
rcr
push
gs
out
pop
or
dec
cmp
fdivrs
dec
sbbb
inc
nop
push
dec
fildl
fadd
rcll
lods
in
cmpsl
jne
fdivrl
cmpl
movsb
and
inc
or
adc
adc
insl
push
inc
dec
xchg
add
or
sub
mov
jb
add
iret
lret
iret
add
cld
dec
imul
aas
xchg
and
or
cld
addr16
push
dec
jo
and
and
js
and
aad
mov
add
loope
popf
dec
pop
shrl
sub
or
movsb
int
les
or
push
fisttpl
ret
and
jp
in
sbb
pop
push
sbbl
jae
jmp
xchg
scas
mov
adc
movsl
imul
add
cmc
add
sbb
dec
fcmovb
into
aas
inc
loope
out
xlat
iret
sub
cmpsl
cmpsl
daa
cmpsl
in
xor
or
fcomps
out
jnp
sarb
sub
rol
mov
loopne
rol
testb
popf
dec
ror
add
sbb
sbb
and
ljmp
ret
popw
rcll
sub
imul
push
add
fiadds
push
and
cs
mov
mov
testl
adc
cmp
iret
add
lret
pop
test
pop
inc
dec
sub
fwait
mov
xchg
mov
xchg
aas
cmp
lret
dec
inc
fs
sbb
je
add
movsb
sub
fisttpll
mov
cld
push
mov
sbb
and
das
fs
jae
arpl
push
push
xchg
add
push
and
xchg
sub
rcl
fwait
daa
and
std
jecxz
or
dec
xchg
xchg
xchg
add
mov
push
stos
push
ja
hlt
or
in
sbb
xchg
ret
push
loope
xchg
scas
lcall
daa
adc
mov
mov
xchg
je
inc
cmpsl
inc
add
rorb
out
add
aad
sbb
mov
aaa
xor
aad
pop
addl
testl
bound
and
and
mov
orl
test
cmp
cld
int3
rorb
jg
cs
lods
cmova
mov
xchg
loop
xchg
mov
push
xor
jg
sub
push
xchg
repnz
jbe
push
cli
out
inc
push
jmp
mov
mov
mov
loope
cs
adc
push
or
mov
xchg
xchg
add
dec
daa
test
data16
in
mov
stos
adc
xchg
ss
xor
pop
fs
dec
sub
mov
mov
outsl
imul
lock
fidivs
pop
adcl
xchg
outsl
and
loopne
jmp
lock
push
scas
and
pop
jns
pop
rolb
xor
dec
mov
arpl
add
sub
jo
shl
mov
or
xor
test
loopne
test
mov
gs
mov
repnz
ret
popf
pusha
mov
addr16
mov
les
mov
mov
adc
inc
in
jo
and
add
jp
mov
cmpsl
inc
lret
xor
xchg
sbb
xor
jns
pop
push
nop
add
ja
icebp
fildll
or
fwait
and
and
mov
inc
dec
mov
pop
loopne
inc
je
mov
call
pop
popa
js
jb
add
sbb
pop
fldenv
sbb
adc
cmp
inc
pop
or
je
jne
les
push
in
add
adc
push
jecxz
bound
xor
adc
imul
dec
jecxz
cmpsl
mov
push
cmpsl
ret
sub
jp
push
lea
inc
jp
add
mov
scas
push
fsubrs
sub
iret
bound
mov
inc
push
and
push
daa
int3
cmp
loop
rorb
arpl
fs
mov
adc
sub
add
pop
sbbb
xchg
sahf
loopne
mov
aad
adc
inc
sub
dec
aas
pop
sbb
push
add
or
cmp
push
dec
sbb
scas
cs
xor
add
mov
xchg
adc
xor
inc
sbb
data16
lds
andl
fsubl
stc
pop
xchg
test
test
mov
ja
push
mov
loopne
negb
pop
pop
push
xchg
lods
das
inc
mov
es
cmc
lods
push
sub
incb
pop
dec
hlt
push
loop
jns
roll
dec
test
jbe
add
push
or
or
push
adc
pop
cli
les
add
sti
movsl
adc
pop
mov
push
or
adc
into
xchg
filds
out
add
push
push
cmp
push
mov
ret
into
jo
xlat
outsb
fdiv
xchg
add
test
adc
imul
shl
adc
pop
sti
cmovnp
jo
xor
aas
lods
sbb
sbb
adcl
adc
pop
jmp
popa
lret
into
xchg
idivb
lods
xor
sbb
push
add
into
jecxz
sbb
inc
sbb
pop
xor
jmp
in
push
in
scas
imul
idivl
or
notl
push
sub
ret
rolb
push
lea
add
call
jb
orl
pop
les
rcrb
daa
iret
outsl
or
insl
subb
xchg
dec
jecxz
mov
and
out
and
jle
push
fdivl
push
cmp
into
ds
sti
mov
push
xchg
xchg
and
mov
andl
divb
xchg
into
add
dec
jmp
ret
jns
cmp
cmp
repnz
sbb
ljmp
jbe
cmp
and
rorl
clc
out
fbstp
roll
fldenv
mov
neg
mov
mov
xor
jecxz
adc
xor
jne
arpl
pop
inc
sarb
push
mov
push
pop
popa
into
or
scas
sbb
insb
xor
and
inc
imul
pop
into
push
sbb
xchg
out
sub
scas
fwait
lret
pop
scas
sbb
pop
cmp
pop
rorl
out
mov
mov
sub
imul
mov
jno
mov
mov
push
pop
pusha
cmp
ret
mov
int
add
sti
ja
or
bound
sbb
push
shl
fwait
insl
lahf
shlb
xchg
jge
sbb
push
xor
test
cmp
xchg
mov
cli
and
jle
out
movsb
inc
mov
fistpl
call
outsb
cmp
in
pop
rclb
push
cmp
xor
mov
mov
push
push
dec
jle
out
out
into
add
jecxz
loopne
sub
jno
or
xchg
dec
pushf
insl
rclb
add
add
outsb
pop
mov
pop
push
inc
in
lds
push
mov
fnsave
jno
sbb
lret
mov
push
lahf
push
repz
push
mov
mov
lds
sbb
push
mov
xchg
sbb
pop
mov
add
mov
outsb
and
into
lods
cli
mov
adcb
xor
je
repz
dec
dec
ffree
xor
lods
das
push
lcall
cmp
scas
lret
sbb
addr16
add
jbe
popa
and
int3
push
inc
aam
dec
sbb
insb
or
mov
dec
out
pop
pushf
jb
stc
push
out
dec
pop
add
outsl
dec
and
mov
jge
daa
movsb
add
and
insb
xor
sbbb
aaa
imul
lock
mov
xchg
adc
sbb
ljmp
jbe
in
outsl
adc
leave
flds
fcmovnu
mov
jo
fdivs
popa
movsb
push
mov
cmp
data16
imul
push
outsl
daa
dec
and
adc
xchg
insl
ss
jo
push
lahf
push
push
cltd
adcl
cmp
test
les
into
pop
mov
lea
icebp
je
dec
int3
mov
cwtl
dec
pop
mov
lahf
xor
jo
pop
cmp
cmp
sub
pop
setbe
sahf
adc
imul
mov
movsb
imull
sub
ja
aam
sub
dec
outsw
cmpsb
fidivs
ret
jno
aam
mov
add
lret
jbe
call
pop
jecxz
ja
sub
call
jmp
int3
outsb
roll
repz
lcall
popf
mov
icebp
in
dec
imul
inc
dec
dec
fwait
out
inc
add
int3
cs
stc
movsl
xchg
xchg
jbe
icebp
insb
repz
xchg
aad
xchg
imul
data16
outsl
pop
lcall
jbe
ja
add
sbb
stos
call
lock
add
insl
xchg
sbb
iret
or
leave
ret
aaa
les
inc
fwait
dec
xor
ss
xchg
adc
mov
fstl
adc
xchg
xchg
lods
jmp
xchg
in
sbb
jne
call
outsl
cmpl
pushf
add
dec
dec
rcl
cs
out
sbb
mov
pop
add
xchg
les
mov
lea
out
adc
cmp
xchg
xchg
adc
xchg
xor
ret
out
incb
lret
fstpt
fsts
dec
mov
into
dec
add
out
add
call
sub
sub
dec
add
pop
push
lea
popl
add
sbbb
jle
pop
cmp
sub
xchg
pop
adc
xchg
inc
inc
out
add
xchg
arpl
into
jo
jge
clc
addr16
imul
mov
sub
and
pop
mov
xchg
out
xor
in
mov
mov
jne
dec
sub
mov
mov
jo
scas
inc
cmp
add
ds
test
into
pop
sub
and
inc
sub
inc
add
out
in
dec
sub
imul
mov
imul
mov
lahf
or
lea
dec
cmp
pop
enter
in
or
nop
push
xchg
fisubs
cmp
mov
stc
les
stos
icebp
push
cs
test
enter
popa
sbb
mov
enter
and
pop
push
lea
sub
mov
push
notl
jle
cmpb
fidivs
pop
inc
mov
cmpsl
pop
aaa
inc
jnp
or
mov
fbstp
or
dec
imull
sbb
jle
push
jo
imul
jb
mov
outsb
or
in
and
mov
fidivrl
insb
pop
cmp
cmp
in
sbb
imul
out
into
mov
jo
jae
push
pop
xor
adc
jmp
mov
lret
xlat
sub
mov
mov
mov
movsl
stc
push
mov
sbb
mov
mov
icebp
add
add
cs
xchg
xor
jge
push
xchg
add
push
jg
fisubrl
inc
cltd
out
lds
pop
mov
ret
push
test
or
out
sub
cmp
inc
sub
loope
add
add
test
jno
shlb
dec
int
mov
adc
in
mov
mov
inc
movsb
xor
cltd
pop
aaa
in
xor
inc
dec
push
pop
lds
arpl
adc
fiaddl
inc
scas
add
jnp
xor
and
test
cmc
push
pop
pop
push
or
and
mov
mov
jge
push
jecxz
or
push
pop
jns
bound
xor
inc
pusha
cwtl
adc
jne
lgs
loop
jg
adc
adc
or
adc
mov
ss
push
rcll
mov
push
sbb
pop
mov
mov
out
jbe
add
ljmp
inc
nop
xchg
lahf
popf
data16
mov
imul
jp
daa
and
imul
sub
out
fcmovbe
jbe
mov
jg
mov
ror
andb
not
ja
xor
inc
push
stc
das
xchg
in
sub
cmp
sbb
mov
fimuls
add
out
push
ret
mov
mov
or
add
movsb
arpl
lret
flds
sub
ds
or
sbb
pop
jle
int
dec
lahf
and
ss
xor
dec
fs
xchg
aad
int
clc
jmp
or
pop
jmp
sahf
sbb
mov
jbe
mov
add
dec
popf
cmp
jle
jle
sbb
mov
inc
mov
fists
mov
push
push
popf
adc
repz
inc
mov
or
push
and
addr16
loopne
push
dec
jge
je
jmp
xor
loope
imul
mov
mov
pop
lret
mov
or
dec
mov
dec
clc
xor
pop
lock
push
dec
lcall
fiadds
xor
fldenv
lea
loopne
cltd
xor
pop
roll
loop
xor
push
mov
imul
hlt
add
xor
popa
dec
pop
jns
lret
jl
sahf
push
cmp
add
add
test
mov
cltd
testb
add
jmp
jnp
pop
shll
sub
jae
jns
jno
adc
jnp
imul
loopne
jne
popa
sub
mov
pop
aaa
lret
pop
inc
lods
subl
je
rorb
fsubr
faddl
xor
les
and
xchg
mov
mov
jo
jl
jnp
shl
add
cwtl
call
data16
or
pop
xor
mov
xchg
insb
cmpsb
push
into
xor
and
pop
xor
outsl
push
insl
xchg
cmpsl
lods
and
pusha
push
mov
inc
lcall
cmp
pop
inc
ret
push
lcall
jmp
inc
mov
addr16
dec
aaa
iret
pop
mov
jne,pt
data16
mov
loope
or
faddl
adc
cmp
into
hlt
xlat
lcall
fcomps
inc
xlat
fwait
inc
aaa
clc
jno
jbe
add
repz
test
leave
iret
add
test
xlat
inc
mov
jns
cld
add
aaa
add
dec
xor
sbb
cmp
mov
xchg
iret
cmp
push
pop
and
in
movsb
push
cmp
mov
push
or
outsl
incl
ret
cmpb
cmp
imul
out
and
shr
push
fidivrl
xchg
xchg
inc
mov
push
sub
stc
pop
in
cmp
mov
cmpl
pop
insb
add
mov
iret
stc
fldcw
shrb
pop
inc
xchg
xchg
add
mov
sbb
js
xchg
xchg
rcrl
test
xlat
sarl
iret
shl
dec
cmp
add
cs
fisubs
inc
lock
rorl
inc
imul
jmp
sbb
rorb
es
xlat
pop
cmp
add
xchg
sbb
push
add
loopne
xor
int3
andb
inc
sub
add
cmp
add
add
pop
outsl
or
mov
pop
push
jmp
push
cwtl
pop
adc
loopne
xor
pop
int3
sub
cmp
ret
shll
shrl
cmp
and
jno
pop
rclb
lods
sbb
fidivl
movsb
sub
xchg
fiaddl
dec
lds
out
js
inc
pop
cltd
aam
mov
or
idivb
lahf
xchg
cmp
cmpsb
int
xor
imul
push
mov
repz
sbb
pop
lahf
pushl
adc
cs
lea
pop
cmp
xor
dec
ret
mov
xor
stc
das
inc
test
jo
imul
xchg
loopne
es
into
sbb
js
sarb
fisttpll
jle
rolb
jbe
das
add
enter
sarl
loop
cmpsl
std
jno
fldenv
pop
mul
cmpsl
xor
xchg
add
xchg
arpl
push
xchg
in
movsb
jne
xor
outsl
rol
mov
sub
mov
rorb
ja
stos
mov
outsl
fldl
push
pop
adc
adc
ret
rcrb
or
hlt
hlt
flds
jae
inc
lods
and
sbb
scas
loope
xchg
sub
into
push
push
imul
push
xchg
fwait
dec
jmp
add
dec
mov
jno
pop
mov
dec
push
xlat
inc
dec
stos
mov
mov
inc
pop
sbb
test
jecxz
pop
nop
movsb
and
lods
pop
sti
sti
dec
into
xor
imul
mov
mov
sub
sub
fnsave
push
xchg
xor
add
inc
pop
inc
mov
dec
dec
shrl
jmp
popa
lahf
lods
je
jbe
jle
inc
cmp
addr16
jno
or
pop
cmp
jo
mov
add
addb
call
push
ret
or
or
xchg
sbb
rclb
aam
das
shlb
push
jo
fildll
js
les
daa
mov
cmp
orb
insl
iret
inc
jl
and
cmp
xchg
mov
jne
cmp
and
mov
cmc
jae
andl
movb
push
loope
add
push
mov
out
loopne
jbe
pop
pop
add
jmp
inc
push
cmpsb
jmp
aaa
inc
inc
add
xchg
inc
imul
pop
pushf
pop
fisubrl
xor
and
test
ret
inc
test
lds
scas
pop
jbe
mov
rol
adcl
cmovo
hlt
add
les
arpl
mov
ja
pop
xchg
add
cmpsb
add
lds
pop
mov
add
lods
mov
fldl
out
mov
shll
cmp
mov
mov
shll
inc
mul
jl
and
xchg
sti
mov
ret
sbbl
mov
movl
cs
fisubl
ljmp
rol
add
in
shr
fldl
sahf
pop
gs
fisubs
int3
xchg
das
push
add
add
lret
add
in
add
mov
jle
jb
jmp
dec
loope
out
add
lods
adc
sbb
jo
mov
sbb
into
mov
cmp
pop
outsl
cwtl
or
push
and
movsb
adc
xchg
lods
ss
je
das
jmp
xor
lods
and
adc
mov
in
cwtl
push
std
pop
mov
adc
bound
mov
xorl
call
fisubrl
xchg
dec
mov
push
mov
outsb
adc
out
inc
adcb
push
clc
xlat
and
into
xchg
in
aaa
test
loope
or
test
pop
stos
inc
add
xor
pop
loop
pop
outsb
lahf
mov
loope
cmp
add
gs
inc
mov
dec
ret
in
rorl
inc
lret
sub
into
push
jnp
dec
ja
fs
ja
aad
push
scas
dec
or
into
dec
popf
inc
or
cmc
aad
cs
pop
xchg
sub
adc
mov
rol
inc
inc
out
xlat
push
gs
lahf
pop
mov
and
or
iret
push
clc
sub
fisttps
dec
js
sbb
xchg
dec
aam
jb
dec
pop
push
cmovl
and
xchg
xchg
cltd
cmp
or
mov
add
movsb
mov
fisubrs
add
jb
xor
pop
fcoms
mov
les
aaa
adc
test
fistpll
push
push
adcl
into
jecxz
sbb
shrl
or
out
inc
in
mov
clc
inc
dec
sub
inc
loopne
jo
movsl
add
adc
inc
and
dec
movsl
push
dec
pop
lods
dec
test
sub
xor
and
xor
lret
xlat
hlt
movsl
cmp
scas
or
iret
jecxz
pop
adc
cmpsl
dec
lock
sbb
popa
bound
dec
jp
out
and
push
mov
or
xchg
mov
push
sub
sbb
js
xor
add
inc
pop
mov
push
pop
stos
dec
andl
or
popf
cltd
dec
in
and
or
icebp
ret
scas
xchg
jp
popf
cmpsb
test
mov
roll
insb
inc
mov
mov
and
in
clc
sub
pop
repnz
xchg
mov
mov
cmp
divl
pushf
inc
add
adc
fwait
std
push
pop
or
xor
sbb
lods
jecxz
leave
testl
push
loopne
mov
ret
pop
jae
fstp
out
jecxz
mov
cwtl
sbb
rorb
pop
outsl
lods
mov
xchg
mov
outsl
add
test
dec
add
push
lret
pop
shrl
fists
mov
or
mov
ret
or
lret
adc
test
push
rcl
dec
cmp
jg
iret
rorb
rcr
fimull
aam
fcom
push
mov
clc
shr
adc
adc
dec
push
dec
movsl
adc
icebp
leave
in
rol
aaa
enter
inc
add
rcrb
enter
shl
btc
out
dec
mov
test
jp
pop
shrl
xchg
test
outsb
cli
pop
flds
test
mov
mov
xchg
xchg
cmc
popa
add
cmp
cmp
test
pop
jecxz
adc
dec
adcl
sub
insb
pop
lcall
ret
push
push
cmp
or
cld
jmp
jno
add
lods
sbb
xchg
cld
pop
faddl
loop
jnp
push
test
mov
add
cmp
cs
stc
xor
push
pop
cmp
popf
push
icebp
sbb
into
pop
stc
jae
pop
jecxz
lret
add
imul
leave
std
mov
push
ret
mov
and
cmpsl
xor
sarl
js
mov
ja
aas
adc
jge
adc
lea
and
pop
aas
inc
add
xchg
xchg
aas
add
mov
notl
and
aad
ja
imul
push
push
mov
cmp
sub
sub
fsubrs
ror
fbstp
mov
lock
xlat
movaps
in
adc
push
pop
mov
or
adc
and
mov
or
imul
lods
dec
inc
cmovp
jbe
mov
lods
popf
sbb
adc
icebp
lahf
push
stos
test
cmc
adcl
mov
mov
push
loop
stos
jne
mov
sbb
jns
add
sub
xchg
mov
fisttpl
aad
popf
ret
bound
popa
aaa
fcmovnu
inc
cmp
xchg
sbb
jb
add
stos
ja
lods
nop
push
sub
or
jecxz
jno
andl
sbb
pop
scas
scas
ret
adc
rolb
or
cmp
or
das
jnp
push
pop
arpl
lock
imul
fcmovnbe
xor
sub
ja
mov
jae
bound
cltd
push
pop
ficoml
push
xor
cmp
scas
out
push
scas
mov
test
xlat
or
adc
mov
repz
jg
test
cmc
dec
push
xor
stos
aas
inc
mov
scas
xor
push
aas
scas
cmp
push
pushf
dec
imul
je
push
cltd
sub
dec
pop
das
jg
mov
lods
mov
adc
outsl
and
inc
imul
mov
or
mov
in
pop
adc
loope
add
sti
pop
sbb
ret
cmpb
fwait
add
lds
lods
pop
inc
mov
mov
mov
lock
mov
and
in
cmp
test
sub
sub
insl
shlb
adc
das
lock
pop
popa
movsl
ss
lock
test
loop
rclb
icebp
dec
fiadds
push
fs
inc
sbbl
jnp
lret
or
lahf
xorl
add
and
jno
mov
lret
adc
pop
ss
sbb
rorb
scas
or
movsb
add
xlat
repnz
pop
cmpsb
jg
test
loopne
xchg
popf
faddl
cltd
fistpl
mov
bound
fucomp
fucomp
pop
push
jg
jl
sbb
cltd
fwait
inc
lahf
jnp
sahf
add
out
data16
mov
cmp
cltd
jo
adc
jmp
sbbl
xchg
sbb
subb
pop
decl
out
and
push
ret
jl
xor
or
ret
push
pop
std
sbb
stos
in
mov
jecxz
dec
inc
sti
inc
ds
add
out
xchg
inc
pop
popa
cmpsl
out
push
sub
push
mov
jnp
scas
inc
mov
inc
mov
inc
mov
dec
iretw
adc
cmp
sub
mov
mov
pop
and
pop
add
xchg
into
roll
dec
mov
pop
das
sbb
das
sbb
je
pop
iret
and
repnz
sbb
fnsave
mov
or
imul
nop
mov
mov
pop
pop
inc
repnz
and
es
sbb
add
dec
push
std
outsl
push
xchg
ret
pop
xchg
sub
cmpsl
push
or
pop
or
xor
lahf
out
aaa
in
popl
push
pop
xchg
mov
push
pop
jnp
cmp
mov
push
sbb
es
pop
push
cmpsb
add
pop
add
daa
sbb
out
aaa
imul
jge
or
test
addr16
mov
movl
add
mov
pop
pop
or
pop
subl
jnp
cmp
sub
push
daa
mov
mov
push
in
imull
adc
imul
sub
scas
or
cli
std
sahf
inc
adc
mov
push
pop
or
std
jbe
fstpt
sbb
lret
test
in
test
pop
inc
in
xchg
jbe
or
or
imul
int
add
test
xchg
fists
or
icebp
stos
cs
add
js
dec
sub
mov
push
mov
or
and
ret
imul
mov
adc
lods
mov
in
in
jbe
out
lods
xchg
pop
mov
xchg
scas
fwait
leave
cmpsb
or
xchg
notl
movsl
or
not
mov
jmp
out
or
adc
sub
sbb
loopne
xchg
mov
mov
jl
adc
mov
mov
pop
jg
daa
xchg
jp
mov
or
mov
add
xorl
or
pop
roll
sti
or
test
jo
xchg
or
fiadds
mov
dec
sbb
mov
jge
outsl
jnp
xor
add
aaa
aaa
or
insl
add
ret
or
mov
aaa
loope
or
add
cltd
and
frstor
imul
data16
xor
add
dec
sbb
jge
negl
imul
and
inc
pop
dec
gs
xor
push
sub
inc
dec
pop
push
mov
and
or
and
and
cmp
pop
sbb
ja
shrb
cmpsl
pop
data16
in
jne
andl
inc
int
fidivrs
cmpsb
mov
sti
shrb
out
je
mov
fwait
dec
insl
dec
dec
cmp
mov
das
addr16
jno
jae
or
shll
push
bound
xor
xor
xor
add
push
add
addb
sbb
mov
jmp
cmpsl
notl
add
fsubl
add
call
ret
loopne
add
add
ret
icebp
int3
mov
fildll
adc
mov
xor
je
push
dec
fdivrl
in
mov
cmp
or
dec
sbb
or
insl
mov
loopne
jnp
and
bound
cli
stc
sub
mov
js
sub
jne
push
push
fimull
lods
push
sbb
jb
jle
stos
xor
push
arpl
fsub
das
sub
adc
add
cld
dec
scas
and
cmpsb
sub
pop
sub
sbb
ret
add
sti
popa
and
sbb
mov
adc
loopne
ret
ret
stos
cmp
add
aaa
adc
pop
dec
cwtl
lock
mov
shlb
adc
adc
enter
sbbb
cmpsb
insl
mov
mov
ds
add
or
inc
sbb
pop
scas
mov
jg
push
out
push
incb
rclb
or
push
jbe
into
mov
mov
enter
lock
out
sbb
cmc
inc
lock
xor
shlb
out
xchg
cmp
mov
or
add
jns
mov
mov
add
data16
pop
inc
pop
jg
dec
mov
jl
mov
add
jne
push
xlat
cwtl
es
jg
push
into
or
lea
pusha
int3
ret
loop
jle
lret
or
push
insl
push
rcrl
xchg
loop
add
adc
inc
testl
out
adc
les
or
je
js
mov
icebp
and
pop
jg
addl
hlt
xchg
xor
xor
and
or
int
shrb
or
cltd
sub
push
leave
adc
push
mov
or
mov
inc
mov
cmp
mov
fsubrs
mov
mov
or
adc
xchg
push
mov
mov
in
rclb
pop
les
ret
inc
jmp
push
adc
mov
test
push
loope
clc
inc
sahf
mov
push
add
dec
xchg
add
and
out
sub
and
fadds
dec
lahf
idiv
xor
ret
cmc
sbb
imul
ficompl
in
fdivrs
or
scas
pop
sub
pop
cmp
test
cld
negb
jecxz
fnstenv
mov
mov
mov
int3
mov
sahf
aaa
add
add
out
inc
repnz
daa
push
xlat
mull
inc
push
or
je
add
ds
rol
mov
inc
fiaddl
ror
cmp
push
jno
jp
lea
push
sub
mov
push
cmp
mov
aad
add
mov
push
negb
test
addr16
loopne
jo
scas
mov
stos
dec
xor
push
movsl
int
add
dec
decb
rcr
js
cwtl
push
mov
add
je
xor
jg
loope
xor
insb
pop
push
xor
mov
cld
cli
inc
into
sbb
inc
into
cmp
jg
sbb
js
cltd
push
mov
and
test
push
xchg
aam
or
xor
hlt
xchg
pop
mov
inc
stos
pop
clc
push
sbbb
adc
in
jne
add
xchg
add
pop
out
mov
pop
push
aad
and
shlb
inc
and
ds
loope,pn
pop
adc
call
or
inc
fisubrl
push
pop
adc
sub
scas
roll
push
or
in
ret
inc
or
mov
ds
jae
jp
mov
jae
nop
je
mov
xor
sbb
ljmp
xchg
out
mov
test
movsb
cmp
mov
push
xchg
xor
repnz
mov
mov
cmp
jle
into
sub
pop
das
mov
lock
scas
testb
movsl
xor
pop
sbb
push
push
mov
push
add
fisubs
sbb
outsb
test
jmp
pop
cmp
pop
pop
das
mov
jge
loopne
shrl
repnz
push
rol
loopne
push
cmp
maxps
fiaddl
add
sub
addr16
cld
inc
pop
mov
push
cmpsb
les
fstpl
adc
cli
addb
or
testb
insl
mov
out
iret
dec
mov
movsb
jg
fprem
pop
and
test
push
aas
loopne
xchg
dec
cwtl
dec
repz
ds
or
add
cmp
aad
adc
jmp
mov
out
fs
andl
mov
adc
gs
pusha
cli
push
mov
push
pop
loopne
repnz
scas
pop
pop
pop
push
jl
jg
sbb
push
sbb
addb
imul
jbe
cmpsb
movsl
rorb
lods
cli
lcall
pop
ss
leave
adc
pop
mov
mov
rclb
cmp
pop
mov
mov
lret
inc
xchg
ret
nop
filds
dec
ds
or
loope
out
xor
fcmovb
gs
sub
loop
mov
sti
std
lahf
mov
and
fiaddl
xchg
add
subl
adc
sbb
jg
inc
test
and
test
mov
mov
in
es
or
sbb
out
ljmp
pop
or
ja
xor
push
sub
in
aaa
adcb
cmp
mov
int
push
dec
loopne
fwait
into
add
pop
lods
sbb
mov
insb
sub
outsl
cli
mov
subb
cmc
jae
jo,pn
pop
push
sbb
mov
lods
ficoml
fs
ror
or
add
sbbl
dec
xchg
mov
or
cmp
test
cmp
cmpb
dec
pop
sbb
mov
call
dec
out
push
cmp
dec
cmovb
add
rcll
push
push
ljmp
sbb
or
push
mov
pop
int
mov
test
xor
decb
mov
idivb
push
sbb
test
test
ds
cmp
sub
mov
pop
xchg
cvtpi2ps
dec
jo
addb
mov
cli
pop
pop
push
mul
aad
xor
pop
mov
mov
push
or
adc
sub
enter
jo
mov
push
push
sub
xchg
loope
and
adc
ljmp
inc
jmp
clc
push
cmp
mov
sti
cmp
in
out
nop
jp
loop
lret
add
push
ret
orb
or
push
or
shr
arpl
add
push
popa
cmpsb
or
leave
push
xor
les
inc
xchg
clc
and
aad
test
shrb
pop
or
dec
dec
leave
andl
sbb
mov
pop
fnstsw
push
sub
sub
or
cmp
fwait
or
cltd
jle
sbb
sbb
test
daa
insb
icebp
push
stos
push
or
loopne
jg
mov
sbb
shlb
sub
in
movsb
dec
xor
mov
das
mov
mov
lods
shlb
mov
or
sub
int
and
inc
out
je,pt
ret
adc
aaa
mov
out
sbb
loope
scas
andb
mov
loop
mov
jo
aam
inc
add
sbb
ret
stc
dec
sarl
loope
xchg
sarb
cmpsb
dec
cld
jno
les
insb
and
lock
out
inc
add
std
sbb
in
mov
mov
shlb
xor
and
cmp
inc
mov
mov
add
push
xchg
sarb
or
pop
cmp
xchg
inc
in
ficoms
mov
fwait
pop
add
loopne
scas
rolb
je
inc
mov
adcl
push
xor
mov
mov
ret
imul
data16
inc
sbb
js
lock
icebp
insb
cmpsb
dec
jo
aaa
sub
loop
xorb
lret
fmulp
pop
mov
je
shll
cmp
xorb
cli
jl
loope
mov
arpl
mov
cmpsl
icebp
mov
mov
cmp
js
cmp
std
mov
repz
insb
sti
cwtl
in
aad
test
notb
push
aas
cmp
insb
dec
mov
jg
push
inc
rcrl
fisubs
inc
push
test
pop
add
jl,pn
mov
push
and
add
daa
sbb
cmp
mov
jo
xchg
dec
dec
enter
jb
cwtl
jb
mov
mov
or
inc
in
stc
pop
pop
dec
mov
or
and
fidivrl
clc
jb
add
jb
sub
add
sbb
cmp
adc
outsb
dec
repnz
clc
mov
add
or
jbe
xlat
fdivrs
mov
xchg
mov
mov
test
es
mov
les
mov
repnz
xor
cld
mov
sbb
inc
sbb
aam
pop
push
incb
xor
adcb
sbb
dec
add
aaa
outsl
push
out
mov
cmpl
mov
mov
push
push
pop
test
inc
jle
dec
in
cmpsb
or
add
inc
jp
jp
fwait
lock
fidivrl
in
mov
fcmovu
xchg
cli
arpl
pop
or
test
push
mov
adc
jne
sarb
mov
test
mov
push
rcl
push
cmp
lods
jns
jbe
pop
mov
pop
test
es
in
shll
mov
fisubl
sahf
sub
cmp
sbb
test
push
daa
sahf
push
jo
add
ss
shll
push
and
mov
pop
fs
push
or
addb
push
adc
sbb
mov
sti
outsl
and
add
or
cmp
mov
adc
in
mov
rcr
test
sub
sbb
in
mov
dec
push
xor
cs
add
cs
outsl
mov
scas
mov
sar
jb
cmp
mov
cmp
loope
jbe
scas
jbe
ds
mov
out
mov
test
inc
sbb
cmp
pop
loope
jbe
cmp
add
xor
inc
fildl
push
mov
int3
cmp
insl
xor
add
movsb
inc
push
test
sbb
cmp
xchg
fs
mov
int
stc
add
add
add
jg
outsb
add
sub
lods
adc
mov
mov
xor
mov
lcall
add
loopne
cmp
hlt
or
lods
adc
mov
mov
add
inc
sub
and
lcall
push
pop
sbb
dec
mov
aam
and
sarb
data16
xchg
xchg
ds
fisubs
lcall
mov
in
and
or
inc
xchg
decl
add
ss
shll
gs
loop
clc
xchg
mov
repnz
or
jge
sbb
mov
fcoml
mov
mov
dec
xor
pop
xor
or
jbe
stos
inc
mov
rorb
shll
fadd
or
cmp
inc
iret
adc
fisttpl
add
ljmp
adc
and
jo
ljmp
pop
sbb
jnp
ljmp
inc
divb
adc
or
add
enter
lea
inc
xchg
xchg
mov
fbld
mov
lods
xor
popa
mov
mov
cmpsb
or
icebp
sbb
and
mov
fwait
push
loopne
mov
push
inc
xor
cmc
sbb
shl
or
cmp
rolb
sub
cmpsb
idivb
iret
xchg
sbb
mov
aam
aad
pop
mov
lock
leave
or
jae
sub
into
pop
fnsave
mulb
push
shll
or
lcall
rcrl
loope
mov
push
cmp
jecxz
jb
dec
mov
ss
outsb
lea
out
add
xchg
add
sub
xor
mov
sub
sbb
mov
pop
pop
add
mov
or
lds
jp
cld
mov
into
inc
jbe
cmp
bound
mov
pop
inc
sub
xor
cmp
addr16
insb
xchg
mov
notb
pop
jbe
scas
add
mov
pop
pop
adc
lret
lds
xchg
sub
or
out
push
sbb
dec
mov
lret
call
xchg
jmp
jge
shlb
mov
int3
mov
push
pop
dec
imul
cmc
mov
test
xor
es
mov
cs
pusha
fisttps
add
add
sbb
lret
fsubrs
int
push
push
cmp
push
add
js
xor
sbb
sbb
in
ljmp
or
cmpb
cmp
scas
nop
fs
lock
add
daa
out
ret
dec
add
mov
xchg
fmuls
xor
jo
loopne
or
call
popa
add
cmp
jbe
mov
xchg
enter
adc
xorl
dec
pop
sbb
pop
push
ret
ljmp
pop
and
push
cmp
push
mov
push
mov
nop
and
mov
push
sub
push
gs
pop
and
les
push
test
mov
adc
imul
fs
insb
sarb
jg
jg
fidivrl
aaa
sub
int3
mov
mov
lret
insb
push
mov
add
cmp
inc
movb
aas
mov
std
test
hlt
cmp
andb
mov
xor
ljmp
jl
xchg
cmp
push
ficomps
sahf
xchg
mov
jle
dec
dec
add
pop
mov
movsl
int
jle
rcr
jg
test
sarb
in
cmp
in
cmp
pop
lock
imul
shld
pop
shll
mov
sahf
lcall
lret
call
dec
ljmp
jge
mov
fcmove
pop
sbb
movsl
ficoml
mov
sbb
les
das
push
pop
push
insl
sub
in
ss
pop
out
push
mov
add
push
cmp
lds
aaa
repnz
sub
hlt
fsubrp
pusha
push
pop
call
enter
hlt
mov
xor
xor
loopne
add
xchg
clc
mov
dec
sbb
lods
rcl
mov
xor
mov
xchg
das
dec
fimuls
mov
lcall
pop
xchg
out
addb
add
subl
mov
call
xchg
jle
into
cltd
iretw
movsb
lahf
add
fisubrl
sbb
das
mov
mov
add
push
lods
push
paddusw
daa
and
push
mov
adc
je
rorb
and
jo
hlt
fxch
mov
pop
int3
pop
xchg
andl
adc
adc
sahf
aaa
icebp
xor
jne
data16
decb
mov
inc
mov
sbb
sbb
mov
inc
xor
push
add
ror
out
aad
imul
and
out
decb
fldl
push
mov
xor
add
xchg
add
adc
cmc
lock
call
sti
clc
mov
dec
bound
push
icebp
add
inc
call
mov
loop
pop
aad
jb
sbbb
sahf
and
or
xchg
xor
push
cmp
add
and
ljmp
rclb
pop
and
hlt
or
xchg
test
inc
insl
mov
sbb
negl
arpl
ja
sti
jmp
mov
fadds
les
add
fisubrl
and
nop
scas
lcall
leave
bound
push
les
mov
scas
movsb
xchg
es
fwait
add
ficoms
add
add
cld
inc
in
ljmp
add
loope
lock
testb
sarb
xor
fwait
dec
insl
popf
loop
sbb
add
add
pop
flds
jl
dec
xchg
mov
out
add
cmp
cmpsl
adc
mov
pop
pop
scas
rclb
fidivs
or
enter
mov
clc
ret
sti
jp
add
lock
mov
lahf
inc
js
loopne
dec
jns
xchg
cmpsb
out
dec
call
sub
pushf
cmp
mov
pop
mov
out
inc
dec
loop
ret
inc
push
dec
sub
in
mov
or
dec
nop
cmp
pop
into
sbb
int3
xor
push
aam
adc
mov
dec
mov
enter
inc
push
inc
scas
mov
sbb
mov
fimuls
and
mov
xchg
xor
jo
inc
aam
ficompl
mov
and
fdivl
inc
push
mov
jmp
mov
jbe
sti
sbb
push
lock
sbb
add
es
lahf
je
sbb
pop
repnz
mov
int3
sbb
push
lcall
add
mov
add
mov
push
sub
add
or
out
sub
pop
cmp
sbb
leave
sub
and
ret
les
push
loopne
aaa
and
ja
data16
mov
push
pop
lods
dec
sahf
sbb
cwtl
mov
adc
dec
repnz
and
cli
xchg
push
xor
ljmp
dec
dec
push
inc
fsubl
mov
jne
les
mov
mov
jae
add
xchg
test
das
stos
cmp
push
in
sbb
sub
push
mov
aam
adc
cs
or
jl
loopne
pop
lock
jp
push
pop
es
aaa
in
adc
cli
inc
fcmovb
xor
test
cmp
jne
or
xchg
ljmp
notl
mov
xchg
jmp
jecxz
mov
test
cli
mov
xchg
loopne
xchg
pusha
cli
push
and
cli
push
and
mov
ja
mov
je
daa
out
lock
cmp
std
push
hlt
and
adc
pop
jl
fidivl
xlat
and
insb
into
test
mov
fwait
adc
sub
xchg
cs
and
cli
or
or
cltd
sbb
sbb
add
mov
mov
pop
or
cmpsb
xor
push
xlat
pop
inc
push
rorb
cld
pop
mov
stos
pop
daa
push
sub
add
pop
add
fcoml
ja
out
frstor
adc
add
int
mov
shll
enter
mov
ret
aas
mov
mov
fisubs
sub
pop
jnp
mov
xchg
sarb
inc
adc
sbb
aaa
add
mov
clc
mov
fiaddl
or
xor
pop
pop
fisubs
mov
ljmp
adc
in
pushf
pop
jbe
adc
ret
pop
mov
clc
sbb
pop
push
or
push
sbb
sahf
add
mov
shrb
gs
push
mov
or
sub
out
jmp
xchg
mov
cmp
enter
fisttpll
in
add
fcmovu
jne
cmp
pusha
jp
negb
push
push
cmp
or
ljmp
ficompl
stos
mov
out
dec
popl
jle
sub
mov
inc
mov
mov
fneni(8087
lret
sub
mov
cmp
add
xchg
sbb
fldl
daa
dec
inc
sti
adc
idivl
inc
addr16
sub
test
outsb
push
lds
push
in
mov
mov
pop
dec
fcoms
add
inc
add
sub
je
sub
add
inc
push
add
inc
inc
sti
dec
sahf
data16
ret
popf
dec
cmpsb
es
outsl
flds
mov
sbb
inc
ds
jbe
mov
and
out
dec
push
fbstp
add
mov
xor
sub
mov
mov
mov
push
push
aad
jbe
jnp
ds
sub
sti
adcb
add
or
add
scas
addr16
jle
sahf
inc
dec
popa
add
popl
repnz
lcall
loopne
jo
or
mov
repnz
xchg
push
hlt
pop
mov
jmp
add
lods
sbb
addb
shlb
pop
and
in
int3
adc
repnz
push
js
cmp
mov
pop
test
lret
mov
adc
cwtl
fwait
inc
pop
sbb
test
rolb
testb
add
jbe
adc
in
lret
mov
pop
inc
scas
inc
jecxz
aam
xor
adc
test
popf
lock
cmp
sahf
inc
adc
add
pop
sarb
sbb
inc
pop
mov
push
inc
add
aad
fimuls
inc
ja
push
mov
call
adc
dec
std
jecxz
shrl
or
outsb
xchg
loop
jecxz
sub
ficoms
mov
in
push
inc
add
mov
jns
dec
push
dec
push
pop
hlt
push
mov
cmp
sbb
pop
add
enter
pop
out
movsl
push
adcb
push
mov
add
xor
rcll
test
mov
aam
adc
pop
cmp
mov
aaa
adc
mov
push
lcall
shlb
pop
mov
mov
and
push
lar
jno
stc
mov
add
loop
ret
mov
insb
in
lea
dec
mov
cmpl
jl
out
mov
dec
add
add
jge
shl
fstps
mov
pop
adc
fimull
aas
rolb
adc
jmp
push
and
adc
and
call
cmc
stos
sub
mov
stos
out
in
into
pop
fcos
ja
out
lcall
shll
out
outsb
out
pushf
popa
sbbb
subl
push
cmp
mov
into
mov
jecxz
jbe
and
jne
rclb
xchg
out
scas
mov
mov
mov
mov
inc
add
xchg
mov
push
cli
insl
adc
sbb
repnz
cld
mov
inc
jnp
xor
add
add
xchg
cmp
pop
sbb
ret
iret
adc
call
xor
sbb
sbb
xor
shlb
fwait
hlt
pop
cmc
flds
ficomps
add
pop
imul
xor
sbb
clc
ljmp
xor
jo
insb
xor
hlt
bound
cmp
sbb
jp
rorb
or
test
shl
fcompl
pop
ljmp
rcrb
test
ljmp
adc
movswl
adc
testl
add
pop
jbe
rcr
test
add
and
inc
xchg
into
or
and
push
xor
mov
testb
test
and
cmp
inc
adc
mov
in
pushl
jbe
jg
dec
daa
mov
frstpm(287
pop
dec
bound
sub
lock
sub
pop
lock
inc
ja
aam
imul
jg
roll
cmp
aad
push
in
popa
mov
jno
mov
mov
mov
js
mov
pop
cmp
xor
mov
or
sbb
adc
fs
stc
ss
xor
das
push
adc
xor
inc
mov
hlt
out
movswl
shrb
mov
call
jno
xchg
mov
push
dec
filds
dec
ja
pop
outsb
adc
mov
push
mov
xchg
push
mov
pop
in
mov
and
mov
ds
aam
mov
cmp
hlt
pop
loop
or
jecxz
ljmp
stos
push
jle
xor
pop
mov
push
or
add
cmpsl
push
sbb
out
jg
aaa
into
shrl
std
cmpsb
dec
rorb
add
lret
sub
or
and
sbb
ret
mov
push
push
outsb
repnz
jl
adc
jbe
aas
cld
orb
or
pop
repz
cmp
mov
xor
mov
pop
cltd
ss
rcll
xchg
fiadds
lods
dec
pushf
jg
fbld
das
xchg
repnz
xchg
js
mov
mov
shlb
rep
cld
adc
dec
mov
mov
sbb
test
pop
xorl
dec
xor
clc
pusha
adc
cs
addr16
push
shl
enter
fs
lcall
mov
sbb
lcall
cltd
push
enter
add
or
adc
dec
movsb
dec
mov
lods
nop
xor
lret
fistpl
les
repnz
idiv
mov
inc
movlhps
dec
cmp
inc
add
cmp
mov
add
addl
xchg
jl
mov
mov
mov
xlat
push
hlt
mov
shll
lock
xchg
push
orl
div
shll
divl
push
sbb
outsl
mov
adc
test
loopne
and
lock
fsubrs
mov
inc
int
leave
daa
sbb
mov
mov
or
mov
in
jecxz
rol
daa
xchg
mov
mov
xor
push
pop
lock
adc
or
xor
shl
dec
fisubrl
aad
xchg
sbb
push
dec
pop
xchg
dec
xchg
fs
loop
inc
sarl
push
and
add
test
add
or
call
mov
lds
or
std
adc
fisubs
les
std
cmp
loop
test
jmp
loop
cmpsb
dec
sub
rolb
mov
dec
or
mov
ja
cwtl
xchg
pop
lods
xor
jns
mov
mov
push
jb
mov
je
ss
sbb
cmp
pop
xor
adc
push
dec
movsl
cmp
pop
pusha
xorl
cmp
clc
xor
daa
push
dec
icebp
imul
aam
pop
adc
mov
mov
shll
scas
jp
jecxz
movsl
js,pn
sbb
and
lret
cs
je
loop
shll
inc
dec
push
sarb
hlt
add
cli
mov
sub
push
in
and
jb
lock
xor
scas
push
xchg
jle
dec
push
cmpsb
pop
cwtl
mov
shlb
mov
adc
into
ficoml
cli
push
mov
mov
not
leave
inc
pop
pusha
jg
xor
in
sahf
pop
mov
mov
mov
aas
aad
push
mov
and
jecxz
jl
jbe
jne
fistl
cld
cmpsl
mov
push
sbb
mov
lock
insb
jmp
mov
jne
jl
inc
or
rcrl
popa
cmpb
push
mov
xor
jge
push
push
sahf
pop
xchg
imul
std
fsub
imul
sti
aam
roll
xchg
push
mov
mov
popf
nop
push
notl
test
add
push
cmc
cld
test
loop
mov
sub
add
xlat
int
aaa
sbb
push
bound
sub
pusha
and
scas
lock
ja
call
xchg
jbe
addl
pop
pop
sahf
loope
inc
cmp
outsb
dec
jg
negl
sub
push
mov
pop
aaa
fwait
arpl
aas
jmp
fcomi
je
sahf
cmp
add
pop
inc
stos
adc
idivb
dec
xor
ret
sbb
or
add
add
jne
cmp
add
inc
or
xchg
or
sbb
cmp
outsl
stos
js
loope
xor
sbb
or
inc
pop
or
stos
pop
cwtl
fwait
jne
movb
sbb
pop
cmp
iret
push
add
inc
sbb
je
jne
testl
add
aaa
test
fildl
dec
xchg
bsr
jo
jne
add
bndstx
imul
mov
or
cld
cvtdq2ps
fldcw
mov
push
addr16
push
jns
xchg
test
call
pushf
jl
jnp
ret
push
cld
jle
lods
and
add
push
and
push
push
cmp
push
call
or
adc
pop
aaa
xor
push
arpl
jnp
jl
into
xor
popa
arpl
cmpsl
int
scas
repnz
scas
mov
mov
mov
gs
cmp
pop
repz
sti
ret
lret
or
push
sub
dec
or
jne
cmpsl
js
into
xor
or
pop
xlat
sub
out
mov
lret
adc
or
or
xchg
cltd
push
lret
sbb
mov
cmc
and
cmp
xchg
push
pushf
or
cmp
xor
scas
adc
in
push
mov
scas
or
pop
idivb
xchg
pop
jecxz
dec
adc
addr16
sub
mov
or
fidivrl
aad
push
sub
mov
mov
sub
stc
or
iret
fldt
insb
or
or
or
push
popf
or
jns
add
stos
push
mov
sti
ds
ret
fwait
rorl
mov
or
dec
or
adc
xchg
imul
adc
sbb
les
sub
addr16
mov
loope
or
or
xlat
or
pop
cmp
inc
and
and
negl
inc
xchg
ja
and
adc
sbb
sub
jbe
int3
mov
nopl
imul
fsubp
push
bound
push
adc
stos
aaa
sbb
in
movntq
out
dec
mov
mov
out
pop
cmp
icebp
or
jmp
das
stos
andl
cmp
jecxz
push
sbb
fists
adc
out
loope
jg
addr16
or
repz
adc
aaa
xchg
in
pop
call
out
cmp
shll
and
or
out
in
adc
adc
jae
or
adc
or
xor
ds
ret
pop
fildll
xlat
cmp
aas
adc
or
int
mov
cmp
dec
adc
jp
scas
pop
or
aas
dec
jns
pop
sbb
xchg
adc
cmp
mov
sub
adc
lods
sahf
loop
pop
sub
idivb
in
mov
xchg
or
and
sar
adc
sub
out
repnz
lds
adc
and
inc
or
pop
ja
sbb
or
mov
repz
imul
fistpll
popl
pop
mov
addr16
jnp
sbb
daa
sbb
pop
and
lcall
xchg
repz
pop
das
rcll
data16
pop
push
jp
pop
arpl
jne
xchg
sbb
push
cmp
dec
or
mov
das
scas
and
sti
mov
and
mov
mov
jge
iret
jne
pop
fisttpl
das
sbb
lahf
leave
jno
or
push
fwait
mov
push
pop
sbb
movsl
popa
push
sbb
pop
mov
or
pop
iret
lcall
test
sbb
sarb
or
inc
ret
sbb
xor
pop
iret
add
cmp
sbb
sbb
pop
sbb
or
pop
sbb
sbb
xor
xlat
jne
sti
xchg
pop
out
ss
je
clc
and
ret
jg
or
das
sbb
sbb
scas
xchg
lock
mov
sbb
dec
je
dec
sub
shlb
std
gs
cmp
iret
mov
jge
sub
or
call
xor
and
cmp
add
cmp
push
je
push
repnz
test
mov
aaa
jmp
cmp
outsl
cmp
xor
cmpsb
insl
mov
addr16
mov
adc
call
dec
int3
leave
add
orl
add
dec
dec
add
ret
cmpsb
cmp
inc
sahf
cs
dec
dec
push
or
jb
xor
xchg
hlt
sub
daa
jmp
test
mov
sbb
xchg
jns
and
outsb
pop
pop
je
das
inc
data16
inc
int
mov
add
add
xchg
daa
icebp
inc
add
jbe
outsb
pushf
inc
sub
add
call
lods
jnp
add
fwait
and
or
xchg
shlb
cwtl
popf
mov
dec
test
or
loope
ja
leave
cltd
es
or
mov
push
gs
push
iret
or
add
sahf
mov
popa
leave
mov
cmp
fwait
sbb
jl
lods
mov
and
sub
adc
xlat
and
cmpsb
and
mov
es
or
and
fistl
lret
jne
test
outsb
stos
jb
xchg
mov
in
dec
es
cvtps2pi
mov
subb
inc
push
dec
xlat
repnz
jnp
sbb
or
dec
into
add
inc
cmp
test
test
shll
arpl
in
add
push
movsb
sahf
push
and
loop
fwait
out
dec
neg
sub
popa
push
popa
add
mov
add
add
lods
jg
jle
adcb
inc
divl
mov
or
adc
dec
push
sub
inc
xor
les
ljmp
adc
lds
xchg
mov
xchg
popf
cmp
adc
pop
fisubrs
add
lea
push
mov
and
aam
cmpsl
xor
xor
pusha
aas
aaa
out
addb
bound
or
cwtl
adc
mov
call
or
mov
mov
jmp
inc
lahf
add
jbe
adc
pop
pop
filds
arpl
fst
sti
iret
adc
lock
daa
fs
das
adc
iret
pusha
or
out
jo
or
xor
adc
aad
or
icebp
test
not
sub
movl
xor
rcr
ja
and
cltd
sbb
lahf
push
aaa
fs
out
jnp
adc
idivl
mov
cmpsb
or
or
mov
scas
andl
sarb
cmp
xchg
data16
das
sarl
cmp
jb
pop
add
outsl
in
cli
arpl
and
int
stos
mov
or
shrb
dec
fwait
popa
xorb
dec
pop
xchg
add
xchg
jmp
adc
cmp
push
ds
out
push
stos
shll
jo
ja
add
jae
or
cmp
push
roll
mov
fbld
xor
pusha
fsubrl
adc
out
adc
pop
bound
push
adc
adc
mov
out
jnp
mov
jne
jp
and
add
push
arpl
adc
mov
out
mull
add
scas
gs
mov
icebp
adc
das
mov
ss
xchg
aaa
pop
inc
int3
andl
out
ds
xchg
adc
popf
push
loopne
mov
gs
mov
movl
cmp
jne
lds
inc
bound
adc
outsl
enter
js
jp
pop
inc
cmpsl
jl,pt
xchg
int
fnsave
call
popa
sbb
stos
mov
aas
fbld
ja
ja
jl
adc
adc
fmuls
data16
scas
adc
push
fisttpl
pop
arpl
fwait
mov
and
mov
fcmovnu
mov
imull
movsl
pop
outsb
add
pop
cltd
fwait
mov
pop
adc
outsl
rcll
mov
es
add
lods
lods
cltd
insb
shl
scas
jnp
push
mov
insl
lods
bound
imul
loope
jb
loope
out
rorl
mov
aas
mov
adcl
and
ja
jmp
xor
jge
sbb
testl
and
adc
jecxz
aad
int3
jb
pop
push
ret
pop
cli
sbb
jo
cld
xor
cs
add
xorl
add
repz
das
outsl
mov
xlat
cmp
and
inc
sub
aas
dec
cltd
loop
idiv
in
push
pop
lcall
cmp
cmpsl
out
fbstp
sub
out
stos
sub
xchg
fucomip
jmp
out
dec
sub
lahf
imull
jecxz
sarl
jmp
jmp
shlb
mov
fs
int
push
sub
imul
mov
fadd
insl
js
adc
iret
faddl
dec
dec
mov
loop
decb
pop
and
pop
daa
and
addr16
or
cs
loope
add
inc
icebp
jnp
sbb
jle
xchg
aaa
and
push
popa
aad
loop
mov
sbb
jp
pop
fmull
cmpsl
icebp
and
adc
fdivl
paddusb
dec
out
xchg
xchg
adc
call
cmp
pushf
inc
in
mov
lcall
sub
lds
int3
inc
sub
addr16
cmp
and
movsb
scas
ja
mov
adc
mov
stc
test
pop
fistpl
outsl
mov
fucomi
bound
jbe
jmp
lods
mov
xchg
adc
jnp
pop
jb
test
mov
and
add
dec
andb
and
je
push
add
mov
gs
popa
pop
xor
out
jnp
push
jne
push
sub
lcall
sbb
shl
insl
out
insl
mov
xchg
fwait
movsl
add
sub
lods
int
sbb
ja
into
arpl
adc
dec
pop
dec
sbb
mov
popf
jne
imul
arpl
push
push
dec
outsl
addr16
imul
xchg
repz
and
subb
ja
xor
test
jecxz
and
cmp
sub
cmp
fisubl
push
lahf
sbbl
imul
jne
cmp
jmp
xchg
inc
pop
loope
xchg
xchg
push
shll
icebp
js
mov
rcr
and
fdivrs
xchg
popf
jae
arpl
add
pop
in
outsb
jno
push
dec
mov
fimuls
cmp
or
sbb
and
sbb
mov
stos
fimull
mov
or
lea
lds
sti
add
mov
ja
xchg
stc
rorb
aam
ds
jbe
or
test
iret
xor
cs
push
pop
xchg
adc
adc
mov
adc
fldenv
push
or
int3
inc
fcomps
add
xchg
fsts
ja
sbb
sub
ss
fdivrs
xor
fnsave
or
out
and
push
inc
or
jge
imul
test
xchg
rcl
mov
out
test
arpl
jb
or
add
jge
pop
pop
mov
or
rclb
dec
lahf
mov
pusha
in
sbb
rolb
mov
add
lahf
call
mov
insb
shll
dec
add
jg
adc
imul
and
lock
cmp
xchg
and
lods
data16
sub
ja
into
add
xchg
test
daa
insb
sub
fadds
cmpsb
loopne
jnp
sbb
xor
dec
std
aas
je
add
popf
cmp
sbbl
mov
out
push
stos
pop
sub
pop
jecxz
fsubs
fcoms
mov
cmp
lods
xchg
sub
idivl
and
cmp
rcr
add
jno
sbb
in
and
inc
stc
pop
scas
repnz
faddl
rorl
sti
aaa
add
lea
jecxz
sub
outsl
hlt
sbb
adcb
xor
fstpt
xor
push
push
imul
popa
insl
or
push
sbb
fucom
arpl
mov
lock
or
outsl
push
sbb
pop
inc
sbb
dec
mov
test
lret
data16
pop
xor
jmp
cmpsb
sub
fisubrs
outsl
loopne
xlat
mov
aas
push
test
out
sub
fisttpl
or
jge
xchg
inc
das
pushf
jns
jge
and
in
xchg
in
pop
shl
loope
jmp
sbb
push
dec
xor
lea
sbb
xor
sbb
ficoml
adc
mov
pop
dec
sub
daa
cmp
inc
or
sub
loopne
and
cs
pop
bt
push
es
pop
data16
jecxz
sbb
notl
rcrb
jne,pn
sub
jns
ret
inc
das
and
ja
dec
push
xor
add
out
dec
std
mov
lock
pop
or
test
lahf
adc
jg
jb
add
lea
mov
jg
out
mov
mov
imulb
dec
movsb
in
and
sbb
arpl
or
dec
mov
orb
aaa
fs
test
imul
jo
mov
and
adc
xor
mov
lods
sysret
roll
sbb
xlat
pop
subb
adc
xchg
outsb
testl
sti
jecxz
filds
je
xchg
xchg
and
ljmp
add
dec
and
mov
sub
ds
mov
and
out
mov
movsb
data16
incl
jno
push
enter
jecxz
jge
mov
mov
jo
out
fsubrl
or
nop
std
rclb
or
outsl
pop
test
sbb
jge
shll
xchg
in
jb
out
and
test
xchg
and
dec
adc
and
push
ja
xor
jns
mov
ss
int
inc
lea
jg
test
ja
jecxz
lods
shll
movsl
inc
inc
mov
ds
sub
shll
sbb
ret
pop
fldpi
pop
mov
cmp
mov
shl
rcrl
loopne
fistps
ljmp
je
out
stc
sub
shrl
fstl
gs
fs
sbb
adc
sbb
pop
mov
xchg
pcmpeqw
es
fs
out
pop
mulps
add
scas
sbb
out
adc
shll
dec
pop
xlat
imul
and
inc
add
mov
dec
adc
push
lahf
and
sub
cvtdq2ps
jnp
sbb
mov
xor
and
outsb
arpl
jae
test
jns
sub
pop
out
dec
jo
mov
xchg
add
lods
push
arpl
ja
hlt
out
fmuls
sbb
loopne
push
out
jbe
ret
mov
pusha
pop
divl
xlat
js
repz
loopne
push
xchg
fucomip
notb
xor
xchg
sub
jge
insb
cmpsb
mov
add
mov
adc
bound
and
cltd
push
out
fwait
sti
sbb
and
mov
jb
das
imul
and
loopne
dec
and
push
push
xor
mov
adc
mov
jg
faddl
mov
sbb
dec
popa
pop
into
outsl
adc
sbb
xchg
sbb
cmc
mov
test
jmp
inc
fisubl
std
call
push
fstpt
add
or
inc
fistl
xchg
add
sub
testl
and
fiaddl
jnp
inc
push
mov
push
imul
ret
push
dec
jnp
subb
sbb
aad
dec
repnz
push
inc
lods
loop
imul
jae
or
push
lods
jae
js
or
pushf
mov
outsl
jno
or
mov
xchg
inc
int
jnp
lea
and
scas
jp
stc
push
stos
push
and
push
sbb
aaa
in
cs
ror
mov
pop
mov
movl
pop
add
lods
mov
jmp
neg
push
lds
push
jp
gs
fisubrs
movl
rcll
and
pop
adc
test
jge
addl
jp
inc
mov
lahf
jnp
outsb
loopne
stc
or
push
sub
test
push
jp
addl
enter
popa
imull
xorl
sub
inc
fwait
dec
and
push
ffree
push
lods
jge
aaa
test
mov
imul
lea
aaa
jns
pop
insb
or
dec
xchg
xor
mov
sbb
rcrl
pop
js
fdivs
cmpsb
pop
sbb
dec
sbb
loopne
mov
loope
imul
mov
das
pop
xchg
stc
imul
les
sub
jle
subl
test
sbb
or
mov
pop
pop
jbe
jmp
push
xor
pop
in
ret
pop
outsl
out
xor
js
cmpsl
js
lcall
icebp
pushf
lods
mov
repz
mov
sub
nop
loopne
aad
insb
ja
sub
stos
mov
imul
rcll
shr
xchg
ret
mov
inc
popa
adc
in
push
fwait
jecxz
mov
test
pop
inc
adc
mov
add
aam
lds
test
sbb
stos
mov
int
lcall
inc
jmp
ret
fidivs
adc
push
dec
or
and
adc
push
or
or
sbb
cmp
aaa
jne
sub
faddl
mov
add
inc
subl
adc
xor
inc
mov
push
mov
mov
pusha
rorb
dec
sub
adc
push
lds
fcmovnu
xchg
fwait
or
fimull
popf
sbb
adc
mov
nop
push
repnz
and
js
and
adc
rcrl
sbb
movsl
xor
pop
xchg
sub
sub
inc
imul
pop
stos
pop
or
test
jns
out
fistpll
mov
push
jl
aaa
cmp
dec
push
cld
movsl
adcl
mov
dec
lret
jb
js
fwait
dec
addr16
cmp
daa
fsubp
sub
sub
cmpsl
adc
fstps
xchg
cmp
push
sarl
mov
jecxz
cmpsl
loopne
dec
pusha
sub
inc
mov
inc
ljmp
jle
movl
addb
mov
sahf
sahf
dec
in
insl
in
stc
lods
fwait
lret
repz
popl
cmp
sbb
sub
loope
mov
dec
xor
pusha
aaa
ja
sbb
aad
lret
pop
sub
fsubrl
dec
push
xchg
int3
loope
andb
insl
ss
sub
and
inc
jne
push
mov
imul
jb
lea
outsl
dec
mov
sbb
out
add
push
std
push
mov
stos
mov
mov
mov
mull
lret
mov
jae
cmp
xchg
sub
jnp
cmovns
in
iret
in
outsl
inc
mull
xor
adc
not
pop
ret
and
pop
add
and
fwait
dec
iret
aam
or
ljmp
xchg
les
popa
popf
push
pop
hlt
aaa
sub
sub
ja
fwait
iret
push
xor
dec
movsb
mov
adc
sbb
or
sbb
sub
cmp
shll
sbb
xor
mov
test
pop
pop
aaa
out
pop
test
inc
xchg
push
inc
xchg
cmp
xchg
cmpsl
pop
test
add
and
dec
out
subb
add
inc
adc
sub
xchg
mov
daa
add
lea
cli
sub
pop
lahf
add
push
push
mov
fbstp
cmc
aad
in
mov
push
fcmovb
js
xchg
test
mov
pop
shrl
sub
sbb
outsl
xor
xor
imul
or
je
fildl
xchg
mov
pop
in
adc
push
pop
adc
mov
cmpsb
adc
xchg
jns
and
mov
and
add
dec
xchg
jno
push
push
faddl
xor
fnstsw
pop
sbb
lods
cwtl
jo
and
inc
add
cmpl
xchg
mov
add
fucomp
sub
stc
in
arpl
mov
inc
ret
mov
int
insb
mov
out
fnsave
pop
sub
pusha
sbb
sub
xchg
popa
pop
jne
inc
shrl
lret
out
pop
fistl
jb
jmp
outsb
lahf
add
and
xor
push
xor
sahf
fnstsw
addr16
or
shll
and
jbe
jle
jge
loope
jle
push
inc
ja
pushf
loopne
in
dec
sbb
pop
adcb
add
adc
cmpsl
aad
mov
add
adc
mov
imul
sbb
adc
clc
mov
sbb
jns
and
dec
xchg
adc
negl
xlat
and
incb
cmc
stos
push
add
jnp
cli
sub
jnp
dec
sbb
mov
cmp
repnz
mov
xlat
aas
out
movsl
xor
jae
sub
cmpsb
xchg
fwait
or
rolb
dec
inc
mov
jg
mov
icebp
addr16
and
dec
and
adc
add
repz
dec
pop
xor
jns
mov
add
fdivs
mov
mov
xchg
jne
and
pop
or
out
jbe
add
ljmp
dec
dec
cmpsb
push
test
fwait
loope
sbb
dec
push
mov
fsubrl
cmp
xchg
mov
xchg
sarl
and
shll
mov
adcl
sub
outsl
adc
je
aaa
cmp
sbb
sub
or
xchg
pop
lods
or
icebp
test
sbb
add
xchg
jne
jg
aaa
decl
imul
inc
aaa
push
push
sbb
pop
xor
imull
adc
xchg
aas
xchg
and
pop
mov
add
xor
mov
jne
cmpsl
sbb
fwait
mov
fsub
lods
mov
xor
popa
lds
xchg
daa
lcall
aaa
jecxz
cmpb
in
add
shrl
out
lret
sbb
notl
mov
pop
and
push
fbstp
jmp
stos
dec
xor
mov
push
or
fidivs
mov
leave
sbb
cltd
popa
xchg
jl,pn
push
fstps
dec
fs
or
test
jno
adc
mov
push
fs
pop
pop
jmp
push
adc
adcl
and
inc
or
into
xchg
ja
mov
pop
or
sub
mov
es
das
add
pop
sbb
ja
push
push
dec
xlat
dec
pushl
loope
mov
das
pop
dec
sbb
adc
pusha
shrd
fisttps
orb
or
add
cmp
xlat
sbb
icebp
fnsave
clc
test
xor
jae
jae
mov
insl
sbb
movsl
pop
aaa
test
mov
shrb
sbb
rorl
sbb
das
adc
jo
mov
mov
dec
dec
jg
dec
pop
sbb
and
mov
fisubs
mul
cmp
stc
lds
dec
xlat
jge
shlb
xlat
push
popf
or
xor
fisttpll
pop
cmp
adc
xchg
add
insl
jge
je
fs
adc
int3
adc
and
sbb
js
pushf
das
mov
or
mov
mov
mov
or
cmp
into
nop
adc
adc
dec
cmp
xchg
pop
mov
daa
xor
sub
adc
out
push
fisttps
inc
dec
or
or
movsl
xorb
out
jp
jmp
jns
scas
pop
pop
xor
jne
loopne
adc
dec
adc
shr
push
mov
cmpsl
movsb
dec
jg
jno
push
lods
sub
adc
shrb
dec
add
out
ret
fisttps
or
loopne
jecxz
adc
dec
and
fidivs
push
xchg
xorb
mov
mov
pop
push
jno
sbb
aaa
dec
lds
decl
mov
fisttps
push
pop
and
and
jae
out
cmpsb
inc
adc
add
dec
arpl
sarb
push
cmp
jae
outsl
adc
testb
jecxz
adc
out
sbb
xchg
addr16
jbe
adc
sbb
mov
shrl
ljmp
jb
sbb
push
sbb
daa
repnz
and
cmp
mov
bound
ret
cs
jnp
fisubl
ficoml
out
jge
aaa
sbb
arpl
pop
and
out
sub
push
pop
push
outsb
fldt
pop
mov
add
addr16
push
adc
pop
xor
sbb
and
add
pop
mov
and
cmp
clc
fdivl
sub
add
test
and
xor
cltd
sub
aaa
jno
or
shrb
xlat
xor
fstp
adc
repnz
push
aaa
and
or
aaa
ja
mov
or
push
arpl
imul
imul
mov
push
sbb
push
cmp
daa
pop
xchg
popf
jp
scas
mov
xor
xor
push
adc
push
and
jge
jnp
outsl
rcll
aaa
sbb
jns
sbb
cltd
sbb
cmp
add
push
mov
dec
out
pop
inc
jecxz
clc
adc
int3
sub
jno
push
mov
mov
sbb
outsb
add
add
test
mov
xor
or
xlat
aad
dec
pop
test
push
int
mov
test
adc
or
ja
add
xlat
add
aaa
cmp
lds
lcall
and
cmpsb
add
add
mov
stos
xor
mov
sbb
test
in
ret
jnp
mov
cltd
xchg
das
ss
pop
das
leave
xor
scas
loope
cmp
arpl
add
xor
mov
stos
pop
and
mov
or
shlb
lret
and
mov
push
mov
mov
inc
xchg
fwait
ss
out
adc
adc
stos
cmp
lcall
add
and
ds
aas
xchg
pop
sbb
dec
pop
addl
inc
test
aas
mov
rorl
daa
mov
add
sti
scas
push
fs
gs
outsb
aaa
inc
mov
int
xchg
inc
aas
scas
inc
cmp
out
gs
jge
mov
pop
xchg
push
pcmpgtb
or
mov
mov
mov
fistpl
push
push
fsubr
bound
xchg
jge
cmp
pcmpgtb
int
dec
das
loop
xchg
sbb
dec
popf
push
pop
test
ja
fstl
ret
repz
push
les
inc
dec
cmp
add
push
cmc
push
shrb
arpl
push
fnstenv
cmpl
bound
stc
movsb
xchg
icebp
cwtl
mov
mov
jnp
hlt
jle
adc
and
ja
and
push
and
ret
pop
in
pop
popf
shlb
mov
pop
fiaddl
stos
xchg
lahf
ljmp
add
insl
cmp
mov
pop
push
add
popa
fwait
jecxz
push
mov
fs
stos
decl
stos
std
jle
and
mov
push
movsb
xlat
dec
xchg
rcrb
inc
and
push
push
mov
stos
hlt
dec
or
xor
rcll
mov
loop
adc
aas
sbb
mov
cmp
loopne
ds
and
pop
pop
and
mov
mov
lods
adc
dec
adc
pop
fwait
insw
imul
addr16
xchg
mov
outsl
out
fwait
sub
lea
lahf
sub
sub
push
test
xor
idivl
ret
sub
es
pop
fldt
cmp
adc
roll
std
sbb
mov
pop
jmp
push
scas
jle
ret
sbb
cmp
add
inc
ret
pusha
sbb
pop
shl
fcmovne
xor
inc
xchg
or
nop
jp
imul
out
pusha
mov
aad
xchg
jno
stos
sbb
jnp
cmp
or
lahf
push
aaa
pop
shlb
xchg
mov
test
xor
pop
lds
das
dec
fcomps
cmp
xor
pop
xchg
roll
xor
imul
movsb
sub
jae
add
ficoms
mov
pop
xlat
ret
filds
pop
and
cmp
add
mov
jae
add
cmpl
xor
xchg
push
popa
inc
inc
idivl
lret
mov
push
or
mov
dec
popa
dec
cwtl
or
pop
adc
push
jmp
inc
cmp
add
jg
mov
sub
jecxz
popf
xchg
jo
inc
push
es
pop
pop
int
movsb
jo
and
and
xchg
out
sti
into
and
or
xchg
mov
or
daa
movsb
loopne
and
cmp
mov
or
daa
or
pop
cmp
adc
lea
out
in
add
gs
cmp
mov
sar
or
ret
mov
arpl
int
scas
cmp
mov
pop
add
jns
sbb
push
xlat
shrl
mov
pop
imul
xor
aaa
test
and
or
add
repz
fldenv
or
repz
stos
stos
stos
sti
add
add
or
xchg
lods
scas
cmp
aam
and
xchg
add
movsl
or
and
movsl
or
movsb
add
xor
mov
mov
jmp
sbb
or
in
repnz
jbe
icebp
mov
jno
pop
or
mov
scas
jg
dec
inc
sub
mov
pop
mov
sub
xor
dec
inc
jns
aas
aaa
mov
pushf
negl
stos
cld
or
daa
out
adc
inc
mov
sbb
jno
test
sti
pop
outsl
push
or
xor
sub
outsl
pop
aaa
and
or
add
or
and
xchg
mov
xchg
das
and
push
int
cmp
movsl
lea
into
insb
pop
or
data16
out
mov
or
cmp
sub
jns
nop
nop
xor
mov
int
ja
adc
and
inc
daa
jnp
mov
outsb
xor
sub
jb
xchg
test
andl
sbb
shll
cmpsl
sti
jnp
sbbl
add
and
xchg
aas
test
lods
jno
idivl
sarl
loopne
inc
cs
push
mov
xor
pop
push
mov
scas
jae
push
cmp
xor
xchg
push
pop
sbb
fldl
popl
push
jmp
sbbl
pusha
add
test
dec
dec
hlt
inc
test
pop
ret
pop
dec
or
data16
sbb
shlb
dec
inc
cmp
mov
ja
add
cmp
push
dec
add
push
cmp
add
inc
inc
mov
dec
push
cmp
jno
push
push
dec
cmp
addr16
push
dec
shr
jmp
jbe
xlat
push
arpl
pushf
push
jb
notb
dec
inc
push
inc
lahf
lods
dec
js
inc
mov
shll
push
imul
arpl
push
jmp
data16
bound
dec
push
adc
lods
cmp
and
pop
push
ja
pusha
sub
inc
inc
sahf
inc
inc
xor
ds
inc
cmp
and
inc
inc
mov
cmpl
ret
jo
inc
dec
inc
push
cli
fidivs
orb
dec
rorb
mov
add
push
push
dec
and
jge
pusha
add
and
jle
cmp
mov
cmpsb
add
ret
popa
imul
pop
outsb
mov
mov
or
fsubl
test
xlat
push
insb
insl
adc
imul
iret
into
cmc
bnd
push
push
pop
loopne
mov
sub
mov
jg
je
lcall
xchg
cmp
inc
pusha
fdivs
fwait
lods
push
push
inc
mov
push
or
dec
xor
jno
mov
dec
inc
inc
dec
and
lods
dec
inc
sbb
les
sar
inc
inc
mov
and
mov
mov
dec
sub
sub
das
insb
mov
mov
imul
sub
inc
xor
mov
inc
stc
adc
dec
adc
inc
daa
popa
enter
pop
ds
ds
fs
dec
sbb
movsl
sarb
inc
ss
ret
js
jl
je
xor
outsl
lods
inc
dec
add
outsb
out
cmp
pop
push
inc
ss
inc
mov
aam
loop
pop
dec
femms
push
adc
outsb
adc
dec
mov
bound
bound
dec
mov
push
add
inc
dec
push
sbb
jo
rcrl
pop
out
mov
into
mov
push
ss
sub
or
pop
inc
ja
test
cmpsl
cmp
call
adc
out
lsl
mov
jecxz
dec
shl
mov
in
push
dec
inc
jno
je
int3
call
aam
in
sahf
outsb
dec
icebp
mov
mov
mov
dec
orb
or
cmpl
mov
mov
inc
mov
insl
cltd
into
mov
and
in
mov
pop
sbb
out
nop
dec
mov
pop
mov
movhps
and
inc
gs
stc
push
mov
lahf
push
add
xor
inc
add
sub
fsubl
sbb
jns
int3
sbb
jb
in
inc
add
daa
mov
pop
push
data16
loop
lahf
push
and
popa
sahf
fldcw
or
cmc
adc
jmp
inc
inc
push
out
inc
inc
inc
sbb
inc
decb
sub
je
test
test
pushl
push
mov
mov
jbe
cmp
clc
cli
xor
negb
cld
aaa
or
data16
adc
dec
cmp
dec
and
sbb
dec
cmpsl
jle
cmp
xchg
icebp
jb
movsb
arpl
or
popa
rorl
pop
cmp
add
and
je
sbbl
lret
daa
ret
jne
test
xchg
dec
outsb
imul
js
data16
xchg
into
and
sbbb
sbb
add
mulb
bound
scas
lods
addr16
je
dec
clc
xor
cmp
or
add
inc
inc
addr16
or
sbb
dec
lcall
cmp
adc
jg
add
xchg
jmp
movl
js
add
rorl
enter
imul
add
inc
add
out
inc
fnstcw
movb
push
mov
jbe
add
add
bound
mov
rorl
push
addr16
and
cwtl
mov
dec
out
pop
addr16
add
add
push
out
in
insb
fdivl
xchg
push
xor
enter
in
push
ja
std
add
add
adc
add
or
clc
jg
imul
imul
inc
dec
cmc
rol
mov
lods
repz
out
sbb
testl
add
adc
fdivrl
jmp
cmp
aaa
mov
mov
jbe
cld
sub
sub
push
jo
outsb
sbb
insb
and
pop
jo,pn
jb
or
inc
add
jo
push
dec
add
rorl
inc
add
insb
sar
aaa
or
add
sub
ljmp
rolb
add
fldcw
or
sub
das
pop
xchg
jno
inc
fnstcw
aas
sub
or
jmp
or
adc
call
pop
popa
jno
out
daa
or
pusha
int
xor
adc
push
mov
in
or
stc
or
add
cmp
pop
lret
add
mul
pusha
test
idiv
add
inc
lock
fs
fcompl
js
popf
outsb
push
gs
int
push
mov
mov
dec
jmp
loopne
sbb
ffree
cmpsl
fstpt
cmp
xchg
test
jge
pusha
je
and
ret
pop
and
cmp
insl
loope
add
jmp
lret
jmp
jmp
lds
fucomi
les
inc
cwtl
cs
fmulp
xchg
or
lret
mov
je
lcall
ret
clc
fstp
notl
clc
sbb
mov
notl
loopne
or
pop
stc
xchg
sub
flds
or
sbb
inc
xor
pusha
push
push
mov
pusha
std
mov
and
xchg
push
inc
push
rorl
sub
dec
iret
int
xchg
stos
insl
inc
lret
sti
rcll
cmp
push
rol
and
and
sbb
inc
ret
mov
lds
mov
lea
icebp
sarl
add
hlt
xor
jbe
in
jae
pusha
cmp
push
mov
orb
imul
sub
aad
add
pusha
or
sbb
das
and
inc
lret
icebp
outsl
hlt
loop
push
addb
push
add
pop
pop
pop
pop
fcmovnu
xlat
sbb
add
add
leave
lock
xchg
add
movb
jbe
bound
icebp
ret
xchg
xor
add
fsubl
outsl
inc
jle
inc
and
lds
dec
insl
add
pop
pop
push
mov
out
notw
push
add
adc
jno
sub
mov
enter
mov
idiv
repz
mov
cmp
mov
add
std
mov
mov
push
push
aam
sbb
shr
popa
stos
sub
mov
lsl
inc
clc
xchg
push
ret
data16
mov
test
push
loop
pop
dec
push
or
js
inc
js
fldl
fyl2xp1
fisubl
add
fucomp
dec
insb
adc
mov
or
xor
je
jbe
call
jb
jg
mov
ret
pop
adc
sbb
mov
adc
out
daa
xchg
or
and
xchg
out
push
xchg
pushf
dec
and
test
xchg
pop
push
lock
jecxz
mov
mov
in
aad
sbb
inc
xor
aad
fcompl
enter
add
inc
add
test
test
pop
jo
lahf
mov
jl
pop
mov
js
pop
pop
lea
cs
mov
mov
xchg
sbb
cmpsb
jbe
in
out
es
loope
ja
lea
xchg
outsb
ja
popa
pop
push
fnstsw
xchg
lods
les
arpl
or
jg
dec
sub
lods
mov
fwait
mov
rclb
out
adc
daa
jp
and
lds
rcrl
loope
outsl
outsl
push
add
pop
dec
jns
jmp
inc
jecxz
sbb
push
aad
movsl
daa
xchg
fildl
or
stos
push
mov
xor
lds
shld
sub
mov
cltd
fwait
add
call
inc
jno
cmp
test
orb
rorb
rcrb
xchg
xchg
add
add
sti
xlat
out
mov
cmp
mov
pop
aam
add
fdivrl
xchg
push
lret
lods
gs
test
cli
mov
test
popa
jo
ss
dec
out
xchg
les
mov
fldt
mov
data16
in
js
mov
stos
sbb
stos
push
mov
arpl
lret
lods
jno
add
sbb
inc
mov
xor
inc
cmp
pop
cmp
mov
xchg
and
and
test
ficoms
mov
jnp
and
mov
and
add
push
jnp
lea
shlb
push
arpl
leave
out
loop
setge
or
hlt
inc
das
icebp
ja
daa
popa
faddl
cli
mov
jg
jge
xor
sub
pop
push
mov
adc
xchg
fwait
cmp
shlb
add
test
insb
jg
push
or
inc
xchg
cmc
repz
mov
sbb
mov
js
stc
jae
sbb
add
xlat
mov
inc
sbb
pop
xor
inc
sub
sbb
or
stos
sbb
jge
lea
adc
add
fwait
jbe
jo
mov
and
js
or
daa
jge
jle
ret
push
jne
cmp
sbb
dec
xor
adc
lret
das
dec
imul
add
push
jbe
mov
aas
aad
rcll
lahf
outsb
jo
sub
lea
pusha
sbb
dec
push
jb
imul
add
inc
movsl
dec
aas
adc
or
cmpsb
inc
lret
movsl
add
ret
outsl
fdivr
jo
dec
push
mov
or
cmp
pop
ret
cwtl
mov
jg
and
jge
mov
ljmp
pop
jae
push
xor
addb
jp
test
jnp
ja
jbe
push
jae
ja
add
rolb
xor
mov
xor
mov
push
dec
ret
mov
xchg
into
pop
ret
dec
cmp
fnstsw
xchg
inc
movq
push
mov
ret
test
cltd
xorl
sar
push
mov
pusha
mov
scas
shll
bound
jecxz
or
pop
daa
add
xor
daa
test
mov
pop
inc
mov
lods
loopne
and
adc
sbb
outsb
sbb
inc
and
dec
or
add
cmc
call
mov
adc
fnstsw
daa
push
or
cmc
mov
fnstcw
sbb
adc
push
pop
sbb
push
shll
addl
leave
das
mov
shl
dec
pop
or
jp
fistpll
rolb
push
daa
sbb
mov
pop
inc
sar
inc
cmc
outsb
push
jge
dec
fnstsw
cmp
cwtl
shrl
add
mov
testl
bnd
outsb
ljmp
cli
out
jmp
stos
daa
jnp
mov
xor
xchg
push
jne
add
loopne
std
addr16
mov
repnz
and
ret
mov
lret
jb
dec
test
into
pop
repz
adc
sbb
and
test
clc
ret
add
test
cmpsl
push
inc
popa
xor
cmc
daa
lods
fs
push
inc
pop
sub
maxps
xchg
outsl
mov
jg
pop
cmpsb
pop
xor
xchg
xor
or
push
dec
add
mov
or
mov
or
loopne
dec
in
gs
mov
test
rorl
aad
add
popa
nop
das
cmp
gs
add
or
comiss
pusha
jg
mov
and
and
sub
movsl
ja
sbb
mov
pop
shr
jg
sbb
mov
push
add
sbb
imul
add
bound
lock
adc
jo
or
es
and
xchg
sub
mov
loopne
adc
push
push
dec
adc
mov
aam
push
push
js
andl
das
dec
xchg
loop
iret
into
inc
xchg
pusha
push
adc
movsb
xorb
mov
daa
mov
inc
roll
dec
clc
cmpl
add
ja
sahf
dec
dec
inc
push
pop
test
push
sbb
ror
inc
pop
xor
jns
jmp
inc
daa
jne
flds
and
pop
jo
adc
mov
ja
adc
data16
pop
push
lock
or
movsb
sbb
sbb
pop
aaa
dec
add
xchg
loopne
jae
push
jns
inc
test
popf
and
ss
xorb
pop
sahf
test
cmp
outsb
and
pop
bound
div
jp
pop
lods
pop
test
loop
ja
sbb
sti
into
sub
mov
cmp
jnp
cwtl
pop
dec
and
shll
sub
cmc
and
dec
push
inc
inc
ret
and
add
mov
aam
cltd
push
jb
js
into
int3
sbb
inc
pop
dec
shll
push
mov
adc
addr16
out
pushf
add
scas
jnp
js
inc
fwait
mov
or
and
jo
mov
or
mov
push
loop
sub
add
rorl
mov
sub
sub
call
loopne
inc
andl
popa
lock
clc
push
shlb
push
fsubs
xchg
sarb
stc
arpl
sbb
pop
push
or
inc
dec
xor
add
idivb
les
dec
sub
jno
lret
out
inc
pop
inc
cs
fwait
mov
inc
sub
add
mov
cmp
mov
nop
sub
dec
vpunpcklwd
daa
ja
dec
fcomps
inc
cmpsl
xchg
adc
call
push
orb
int
dec
push
or
ret
and
inc
dec
ja
dec
xor
nop
je
or
imul
mov
js
or
imul
inc
lret
and
sub
fcoml
pop
mov
aam
and
shl
popa
movsb
inc
sbb
ret
jecxz
inc
inc
sbb
adc
inc
xchg
mov
and
adc
push
outsl
sbb
fwait
rcll
sbb
adc
add
fsubr
ds
or
adc
inc
movsb
outsb
inc
adc
push
cmpsb
test
or
cmpsl
movsb
mov
sti
test
pop
test
sahf
mov
adc
inc
add
lds
rorl
cltd
mov
sbb
and
sub
or
stos
pop
stos
sti
ds
call
sbb
mov
jle
xlat
std
or
cld
push
popa
push
pop
push
popf
xchg
adc
add
cmp
mov
jmp
into
out
in
cld
sbb
or
cmpsl
mov
sti
std
add
xor
popa
cld
xorb
dec
pop
xchg
mov
scas
add
pop
jnp
mov
push
rcrl
pop
xchg
rcrb
inc
daa
mov
add
fimuls
out
notl
pop
add
mov
xor
cmp
cmc
out
or
rcrl
add
shl
xchg
rclb
dec
rolb
push
pop
addr16
mov
movsb
inc
dec
js
daa
sbb
xor
pop
dec
pop
xchg
inc
xchg
pop
inc
add
add
add
push
xchg
cltd
movsl
shr
jno
cmp
or
popf
adc
push
call
add
test
and
push
pop
fwait
insb
or
push
into
jecxz
adc
inc
sub
repz
notl
sbb
shll
jns
jg
repz
loopne
add
xor
adc
imul
jl
daa
arpl
or
adc
incb
fists
test
sbb
push
add
sub
sbb
pop
push
sahf
dec
cmp
adc
mov
push
and
add
insb
mov
add
insl
sub
jno
imul
cmp
ja
push
or
dec
pop
sbb
and
out
mov
adc
ja
adc
cmpsl
add
shrb
add
or
andb
or
nop
test
pop
dec
dec
fadds
cmp
insb
dec
cmc
mov
dec
pop
inc
add
inc
add
pop
xchg
sbb
push
inc
dec
dec
inc
dec
or
dec
dec
push
lcall
xchg
jae
sbb
push
jo
sub
cmpsl
dec
cwtl
adc
clc
sub
push
pop
add
ss
add
cld
pop
lock
sbb
add
xor
ss
out
flds
add
push
add
hlt
sub
out
daa
testl
xchg
jle
mov
in
adc
add
jecxz
es
pop
adc
mov
pop
scas
push
inc
ror
jp
scas
add
add
inc
loope
push
mov
mov
loope
pop
adc
sbb
adc
out
inc
lds
push
jp
pop
or
push
pop
daa
push
push
xor
xchg
dec
pusha
pop
pop
adc
imull
sub
adc
sub
into
jp
sbb
cs
mov
ret
subl
pop
lret
dec
or
pusha
mov
xchg
lock
roll
mov
push
sbb
dec
pusha
push
mov
push
mov
data16
or
sub
or
and
inc
clc
js
cmp
enter
xlat
test
sti
test
or
adc
xchg
mov
insb
mov
push
loopne
mov
push
aaa
imul
or
inc
test
push
mov
imul
xchg
jge
xchg
push
push
pop
rcl
inc
sub
jg
rcll
add
or
popa
insl
out
pop
push
push
dec
add
loope
mov
xorb
add
fisubl
jne
pop
jns
sahf
nop
int
mov
pop
in
mov
add
dec
jnp
addr16
or
add
in
push
push
pop
adc
jg
das
fsubrs
fldcw
and
mov
cmpsb
inc
aaa
ret
daa
dec
imul
jb
fwait
pop
jg
mov
dec
and
and
adc
sub
add
inc
or
xorl
add
fwait
int3
sahf
repnz
push
pop
shlb
push
repnz
stos
ljmp
xchg
lods
pop
jecxz
in
leave
pop
sahf
stc
dec
and
add
adc
add
adc
ds
out
push
add
dec
mov
jnp
lods
xchg
inc
cmpsl
pushf
aas
fxch
dec
in
sbbb
cmpsb
sahf
pop
scas
push
cmp
dec
shll
dec
into
notl
mov
daa
dec
loop
inc
cmp
daa
cmp
pop
repnz
mov
pop
jbe
inc
mov
mov
pop
fistpl
and
mov
push
daa
lock
outsl
and
aam
sti
mov
jns
fwait
push
inc
and
loope
aaa
cmp
add
decl
aas
jb
insl
cmpsl
and
es
popf
mulb
xchg
daa
inc
ds
sbb
mov
cmp
daa
nop
adc
fimull
sbb
scas
xchg
fisubrl
test
cltd
xchg
sub
mov
and
movsl
dec
lods
adc
or
scas
jg
mov
jnp
push
in
sbb
push
xchg
adc
add
mov
sbb
mov
mov
jbe
push
jle
aas
cmpsl
neg
cmpsb
mov
pop
rorl
sbb
pop
leave
aad
jbe
lahf
mov
or
aaa
lods
aas
fadd
scas
nop
mov
aaa
rcrb
fisubrl
daa
dec
inc
add
lret
aaa
sarb
pop
mov
inc
push
cmp
add
insb
and
sahf
out
mov
sbbb
jl
inc
and
test
push
adc
test
add
inc
or
dec
mov
or
dec
imul
adc
pop
push
roll
dec
test
sub
mov
addr16
mov
insb
jae
jb
outsb
inc
jg
push
addb
arpl
fwait
add
insl
stos
dec
add
push
sbb
data16
jae
inc
inc
push
dec
gs
jns
inc
js
fldt
je
jns
gs
mov
imul
popa
jne
je
popa
outsb
addr16
inc
das
ja
ss
fs
insb
inc
gs
or
inc
jne
cmp
outsl
jg
add
outsl
insb
fs
mov
push
push
imul
outsb
jne
jmp
nop
xor
inc
inc
int3
gs
popa
sub
mov
out
inc
jp
mov
add
xchg
fisubrl
cmp
rolb
add
and
jns
adc
sbb
sbb
jae
mov
jns
stos
stc
mov
jne
pop
push
pop
insb
bound
push
pop
aas
add
gs
into
loop
int
sbb
push
add
out
lahf
roll
push
outsl
or
out
adc
push
dec
test
repnz
sbb
pop
imul
cmp
outsl
arpl
fwait
decl
or
jb
dec
outsb
insw
popa
pop
pop
pop
bound
pop
mov
push
data16
and
mov
xor
xor
sbb
mov
inc
jb
push
sub
xchg
pop
rorl
sbb
data16
jp
in
add
jo
and
imul
ja
daa
ja
inc
mov
dec
sub
imul
gs
insl
bound
outsl
js
cmpsl
xor
adcb
sbb
call
inc
and
pop
inc
push
mov
ss
pop
orb
outsb
insb
arpl
in
je
jno
adc
jb
mov
mov
and
out
imul
cmp
sbb
inc
dec
inc
push
shl
cmp
cwtl
imul
cmp
pop
fldt
jns
gs
push
imul
test
addb
push
imul
mov
pushf
dec
adc
push
jecxz
aas
stc
jg
inc
add
dec
add
add
pop
inc
sub
add
sbb
dec
imul
push
adc
inc
pop
add
mulb
fistpl
jo
cmp
jbe
mov
mov
enter
js
loopne
add
pop
jl
adc
dec
inc
inc
mov
orl
inc
add
fiaddl
adc
cld
push
jl
add
in
inc
and
xchg
aaa
rolb
or
push
pop
xchg
add
dec
popa
add
xchg
and
inc
fs
fwait
pusha
add
mul
dec
add
push
jae
jbe
push
mov
jbe
dec
js
loopne
shrl
pop
fs
add
push
dec
xchg
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
