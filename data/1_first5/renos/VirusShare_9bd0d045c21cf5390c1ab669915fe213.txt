jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
xor
bound
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
mov
push
call
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
movl
mov
push
call
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
cmp
cmp
add
add
xor
cmp
aaa
xor
xor
xor
cmp
add
xor
aaa
ss
add
cmp
cmp
add
xor
xor
cmp
xor
xor
xor
xor
xor
ss
cmp
xor
add
add
xor
xor
xor
xor
xor
xor
xor
cmp
add
push
mov
add
movl
mov
push
call
call
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
movl
mov
push
call
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
movl
mov
push
call
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
movl
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
add
xor
cmp
cmp
add
xor
xor
add
aaa
cmp
cmp
xor
xor
add
xor
xor
xor
cmp
xor
add
xor
xor
xor
cmp
add
cmp
cmp
xor
xor
add
add
xor
xor
xor
add
xor
aaa
cmp
cmp
xor
add
push
mov
add
mov
mov
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
mov
cmp
je
call
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
mov
xor
divl
test
jne
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
mov
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
mov
cmp
je
jmp
cmp
jb
mov
xchg
mov
xchg
mov
mov
mov
lea
dec
dec
dec
xchg
mov
mov
mov
xchg
lea
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jae
mov
xchg
mov
mov
mov
mov
xchg
inc
dec
inc
mov
mov
inc
dec
inc
lea
lea
mov
lea
dec
inc
dec
mov
cmp
je
jmp
cmp
jb
mov
xchg
mov
xchg
mov
mov
mov
lea
dec
dec
dec
xchg
mov
mov
mov
xchg
lea
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
mov
sub
mov
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
push
mov
mov
xor
call
mov
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
mov
mov
mov
call
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
push
mov
mov
xor
call
mov
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
lea
mov
push
mov
jmp
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jb
mov
xchg
mov
xchg
mov
mov
mov
lea
dec
dec
dec
xchg
mov
mov
mov
xchg
lea
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jae
mov
xchg
mov
mov
mov
mov
xchg
inc
dec
inc
mov
mov
inc
dec
inc
lea
lea
mov
lea
dec
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
mov
sub
add
add
mov
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
mov
mov
call
mov
mov
mov
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
mov
mov
movl
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
cmp
mov
mov
repnz
call
repnz
mov
mov
xchg
mov
mov
repnz
movsb
repnz
imul
inc
xor
test
mov
xor
mov
mov
xor
add
mov
xor
out
jl
int3
inc
xor
in
imul
xor
shrl
mov
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
dec
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
dec
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
dec
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
dec
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
dec
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
dec
int3
inc
dec
enter
std
push
inc
ffreep
dec
int3
inc
dec
enter
std
or
ret
dec
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jae
mov
xchg
mov
mov
mov
mov
xchg
inc
dec
inc
mov
mov
inc
dec
inc
lea
lea
mov
lea
dec
inc
dec
movl
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
push
call
mov
call
mov
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
mov
mov
call
mov
cmpl
je
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
mov
cmp
je
mov
subb
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
mov
xorb
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
incl
mov
cmp
jne
cmp
jb
mov
xchg
mov
xchg
mov
mov
mov
lea
dec
dec
dec
xchg
mov
mov
mov
xchg
lea
inc
mov
call
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
mov
push
mov
push
call
cmpl
je
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
push
mov
push
call
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
jo
mov
mov
lea
mov
mov
xchg
xchg
xchg
xchg
dec
dec
inc
inc
mov
mov
xchg
mov
mov
mov
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
movb
cmp
jbe
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
xchg
dec
lea
mov
mov
mov
mov
pop
ret
nop
push
mov
add
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
call
test
jne
mov
jmp
movw
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
call
lea
mov
pop
ret
mov
push
mov
add
jmp
lea
mov
xchg
mov
xchg
dec
dec
inc
lea
mov
xchg
mov
lea
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
call
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
call
movl
mov
push
call
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
push
push
push
call
mov
call
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
mov
pop
ret
xor
cmp
cmp
add
xor
aaa
cmp
aaa
xor
xor
add
cmp
aaa
add
add
ss
cmp
xor
add
xor
aaa
xor
xor
xor
add
xor
aaa
aaa
cmp
xor
xor
add
xor
cmp
cmp
xor
add
xor
cmp
xor
aaa
add
xor
xor
xor
cmp
cmp
add
xor
cmp
xor
xor
xor
cmp
xor
cmp
xor
add
cmp
cmp
add
xor
xor
cmp
aaa
aaa
xor
aaa
xor
cmp
add
xor
xor
xor
add
xor
aaa
aaa
cmp
add
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
mov
push
call
cmp
jae
mov
xchg
mov
mov
mov
mov
xchg
inc
dec
inc
mov
mov
inc
dec
inc
lea
lea
mov
lea
dec
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
movl
mov
push
call
call
cmp
jnp
mov
mov
lea
inc
lea
lea
inc
dec
dec
xchg
mov
mov
mov
xchg
xchg
mov
lea
inc
inc
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
js
mov
dec
inc
dec
mov
dec
dec
inc
mov
xchg
mov
xchg
mov
xchg
xchg
inc
inc
dec
je
mov
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jb
mov
xchg
mov
xchg
mov
mov
mov
lea
dec
dec
dec
xchg
mov
mov
mov
xchg
lea
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
je
mov
xchg
lea
mov
mov
dec
inc
mov
xchg
lea
xchg
dec
inc
mov
mov
mov
xchg
dec
dec
dec
movl
mov
push
call
call
mov
pop
ret
xor
xor
xor
xor
add
add
xor
aaa
xor
cmp
xor
cmp
xor
add
add
xor
xor
xor
aaa
xor
add
xor
cmp
xor
xor
add
xor
ss
add
xor
xor
ss
add
add
xor
xor
xor
xor
add
subl
jne
mov
cmp
jb
mov
xchg
mov
xchg
mov
mov
mov
lea
dec
dec
dec
xchg
mov
mov
mov
xchg
lea
inc
mov
mov
mov
lea
call
cmp
jne
xchg
mov
mov
mov
mov
dec
inc
xchg
jmp
mov
mov
xchg
mov
mov
lea
mov
inc
dec
dec
je
xchg
dec
ret
mov
ret
lea
lods
loop
cmpsb
add
mov
cld
and
add
cmpsb
faddl
add
add
mov
cmp
add
or
jmp
cmp
pop
add
aas
mov
stos
hlt
shrl
fs
lods
add
xchg
mov
add
movsb
es
mov
scas
add
mov
jge
add
add
add
xor
or
repz
adc
les
pop
push
add
add
arpl
js
out
fcmovu
insl
mov
lret
pop
test
shrb
sbb
add
stc
mulb
roll
stc
lret
sbb
mov
fdiv
inc
xchg
jbe
in
test
add
xchg
and
mov
sub
dec
or
add
cmp
lock
enter
movsl
add
js
sbb
jl
or
jns
clc
add
outsb
cmp
inc
xor
mov
xchg
add
push
adc
mov
fsubrs
fistpl
stos
inc
popf
loopne
add
inc
lret
add
cmpsb
jl
inc
pop
mov
add
add
add
and
ljmp
outsl
rorl
repz
gs
add
sub
add
or
add
dec
jl
jge
pop
add
cmp
test
add
add
dec
sub
dec
mov
add
rolb
cli
xchg
push
pushf
shlb
in
and
imul
add
cmp
add
jb
push
dec
mov
hlt
or
pop
inc
add
add
sbbl
in
or
inc
add
mov
pop
fcmove
sbb
cld
add
add
sbb
mov
mov
add
insl
mov
add
loopne
add
mov
add
ljmp
aaa
pop
add
add
mov
add
jg
pushf
insb
add
and
or
mov
out
add
mov
shll
into
enter
xor
add
xor
lret
roll
mov
add
xlat
jle
mov
add
sub
add
xor
daa
hlt
pop
add
inc
xchg
pop
cmp
mov
jb
pop
jbe
or
add
pusha
add
add
add
pop
sbb
add
cli
out
dec
adc
add
sub
mov
mov
push
xor
add
push
sbb
push
add
xor
fdivp
push
jns
fbstp
adc
add
or
testb
cwtl
xor
dec
add
aam
add
add
add
ret
stos
add
and
out
cmpsl
lcall
and
je
mov
sbbl
add
inc
push
test
cmp
ljmp
adc
adc
data16
dec
xor
mov
stos
ret
mul
mov
add
pusha
pop
sub
add
sbb
xor
sbb
push
xor
add
jno
add
scas
subl
xor
mov
or
add
add
push
in
pop
sbb
outsl
popa
push
push
imul
xlat
fidivl
add
dec
add
int3
adc
and
sbb
jmp
mov
cmpsl
add
add
mov
xor
add
lcall
sub
adc
dec
aaa
and
add
rcrl
inc
and
pusha
bound
ret
push
add
in
mov
add
mov
movsl
add
pop
cli
dec
popf
sub
lea
add
jl
sar
dec
fstp
xor
jle
push
jb
xchg
es
movsl
mov
roll
das
push
pop
jmp
sub
fcomps
mov
hlt
inc
mov
jns
xor
daa
lret
sarb
mov
neg
out
fcomip
sub
jmp
ret
mov
cmpl
outsb
sub
aad
les
mov
jp
mov
mov
imul
cmp
and
mov
jns
out
jns
inc
test
xchg
in
insb
pop
xchg
inc
lret
jae
subl
popf
popf
mov
xor
inc
mov
ret
xchg
lds
cld
imul
icebp
scas
lock
xchg
push
jmp
sub
cmp
sahf
iret
lret
jne
ret
xor
or
ret
hlt
and
pop
arpl
out
or
cmp
lahf
inc
lahf
ret
out
and
dec
add
lret
rorb
ficoms
push
xchg
shlb
pop
repnz
ss
movsb
roll
leave
jbe
inc
clc
jge
scas
sbbb
xchg
aaa
leave
lcall
fdivrs
add
or
cwtl
loopne
and
imul
adc
negl
test
cmp
cmpsb
mov
inc
inc
enter
daa
ja
xor
add
loope
push
sti
sub
or
lods
int
movsl
push
push
and
xor
push
mov
sub
add
cmc
sub
lods
sbb
pop
out
pop
cmp
js
iretw
pop
test
add
push
jnp
imul
or
sub
clc
adc
push
or
add
push
mov
arpl
and
or
sub
sub
push
aas
lcall
adc
sbbb
adc
test
xchg
jg
loope
mov
in
stc
inc
call
loopne
dec
jmp
pop
cmp
fdivl
adc
cwtl
mov
lret
xorb
in
cmp
pop
les
mov
cmp
std
lcall
insl
pop
xor
outsl
aaa
clc
mov
cmp
imul
sbb
mov
mov
std
out
push
cmp
shrl
sti
sub
push
sbb
nop
int3
loopne
or
cmpsb
adc
scas
cld
fldenv
push
stos
repz
xchg
insl
insb
aaa
sbb
pop
mov
jns
jl
in
jno
fs
mov
pop
jmp
dec
or
mov
push
push
nop
test
cltd
dec
jnp
mov
xchg
xor
jno
lret
jecxz
mov
push
cmp
lea
idivl
pop
sub
pop
jge
hlt
orl
mov
sbb
jmp
add
leave
jle
and
xchg
stos
dec
mov
sbb
lcall
jge
std
mov
in
mov
cmp
xor
mov
ret
mov
cld
cmovg
mov
dec
enter
lock
pushf
aas
das
iret
je
mov
jg
lods
aam
cltd
mov
lret
jl
sub
add
dec
icebp
fsub
cmpsl
jbe
mov
mov
addr16
mov
out
lock
jg
cmp
and
cltd
adc
test
clc
and
cmp
dec
jge
xchg
enter
mov
rcrb
stos
add
push
xchg
add
xor
xor
add
aam
xor
mov
lods
xchg
dec
aas
mov
movsb
xchg
cmpsl
jbe
into
jbe
or
mov
push
imul
add
xchg
outsb
jae
ljmp
jns
popa
insb
in
int
jne
sub
sahf
mov
mov
mov
out
dec
bsf
mov
pusha
lahf
mov
call
aad
jne
pop
push
add
cmpsb
xchg
cmp
jmp
mov
and
out
pushf
and
rcrb
enter
daa
jp
mov
and
andl
jle
push
test
fbld
xchg
xchg
mov
jne
inc
aad
aad
addr16
mov
mov
cmp
adcb
int
imul
mov
push
xor
adc
jl
iret
sub
push
ret
subl
outsl
fwait
ja
cmp
inc
aad
or
mov
and
je
fcmovbe
ret
jle
aam
std
int3
insb
popf
add
imul
aaa
inc
sarb
adc
mov
pop
shlb
xorl
jns
sbb
jnp
or
popa
jno
mov
jl
jge
dec
in
pop
push
or
xor
jns
fisubrs
mov
in
cli
and
push
mov
sbb
cmp
aaa
popf
enter
daa
jbe
mov
xor
in
mov
and
out
rorb
movsl
jno
scas
and
or
mov
push
lea
sbb
movsb
xor
fst
pop
cmpsl
lret
pop
out
ret
call
sub
push
sub
push
shl
sub
xchg
fstps
sub
jle
outsb
mov
lods
adc
sub
addr16
bound
add
outsb
mov
mov
push
and
hlt
test
jbe
sbb
sub
ret
pop
fimuls
arpl
rcrl
xor
push
cli
sahf
cmp
test
pop
inc
andb
jg
sub
sub
cli
sbbb
insl
daa
adc
sbb
cmp
xchg
mov
notl
xchg
lret
cld
xor
cmp
or
stos
push
into
loopne
xor
xor
in
xor
outsb
shrb
lods
loop
or
mull
add
xor
dec
lcall
cli
popa
das
inc
mov
sub
cmpsb
sti
fcomps
mov
gs
xchg
popf
loopne
inc
les
fcom
adc
xor
fcmovu
jno
into
mov
xchg
xor
pop
sbb
xchg
mov
xlat
xlat
and
sub
pop
push
adc
in
inc
pushf
pop
repz
je
cs
insb
in
or
dec
sbb
sbb
enter
cmp
dec
inc
xor
push
jne
lea
call
fstpl
roll
bound
fistl
rolb
fadds
test
aas
ret
jb
popf
mov
dec
xchg
and
movsb
shll
adc
mov
lock
hlt
fstps
addr16
lods
mov
cmp
cld
cmp
lret
fwait
push
in
mov
outsl
xchg
mov
inc
xchg
and
das
scas
sub
push
xor
aam
cwtl
fld
pop
or
insl
inc
in
dec
in
daa
cmpsl
jne
mov
into
or
mov
jle
mov
popa
lods
and
xchg
lahf
fistps
sahf
add
shl
pop
mov
inc
pop
sub
gs
push
xorl
int
test
add
sub
sar
sti
cmp
jecxz
icebp
mov
inc
mov
setb
add
xchg
cld
or
and
xchg
mov
cmpsb
pop
es
cmp
dec
sbb
pushf
cwtl
or
mov
ljmp
stc
sbb
mov
dec
decl
xchg
je
dec
xor
imul
loope
push
mov
jne
gs
sub
dec
add
lock
add
cmp
std
jne
mov
pop
out
test
bound
in
xchg
jmp
pop
test
out
add
fwait
jmp
out
addr16
adc
jnp
xlat
and
lea
jle
mov
aaa
pusha
sbb
shlb
mov
mov
cmc
push
testl
movsl
push
adc
movsl
mov
ja
inc
stos
test
mov
sbb
dec
imul
dec
scas
mov
sbb
pushf
arpl
icebp
daa
repnz
mov
adc
xor
and
cli
mov
mov
xchg
xchg
inc
fcomps
or
xor
fimull
add
pop
cs
in
addl
fmuls
inc
repnz
jb
movsb
jmp
jg
jbe
fcmovb
jge
sub
inc
fidivl
aaa
inc
loopne
or
dec
mov
xchg
jl
stc
imul
fimull
jmp
shlb
aam
inc
scas
popf
lds
test
insb
aaa
hlt
inc
fbld
shl
in
xor
xchg
enter
daa
jne
jle
push
xchg
insb
sub
cmp
cmp
cmp
repz
js
xchg
in
fstpl
pusha
call
out
add
lods
adc
dec
cmc
in
loop
cmpsb
pop
adc
lahf
push
pop
daa
mov
cwtl
push
sub
add
cmp
jge
outsb
out
sbb
adc
pop
push
mov
adc
imul
stc
pop
jae
jns
mov
sub
mov
push
lcall
pop
mov
adc
sahf
filds
and
jg
jl
mov
out
stc
mov
iret
fs
mov
cmp
cmp
push
into
push
notl
ds
lret
xor
cmp
jmp
cmp
ret
inc
mov
xor
arpl
loop
pop
dec
imul
inc
lods
add
lods
push
or
ss
mov
cli
xchg
xor
mov
xchg
inc
xchg
sti
xchg
outsb
gs
pop
adc
std
jbe
adc
push
repz
push
push
xchg
repz
in
sbb
sarb
jmp
sub
sub
pushf
or
loop
inc
fs
cs
in
nop
pop
test
cmp
inc
mov
jle
je
cmp
pop
cmp
mov
out
cld
pop
pop
xchg
mov
sbb
ss
stos
fcmovnb
push
push
pop
sub
testb
push
inc
out
idivl
popa
or
aaa
lds
cli
fisubs
out
rcrl
dec
divb
mov
or
data16
add
mov
xor
icebp
jno
jg
gs
push
lret
or
cs
mov
lock
xchg
sub
dec
aam
jmp
ret
cmpsb
cmp
andb
dec
out
push
cmpsl
je
imul
sbb
lods
push
push
mov
test
mov
mov
aad
cltd
jle
xchg
test
scas
sbb
inc
mov
push
clc
rorb
inc
cmp
rcll
pop
adc
stos
loopne
push
out
and
cs
mov
push
cmc
jne
psllw
pop
add
add
xor
movsl
xor
fistpll
mov
jp
mov
or
outsl
incl
lock
cld
in
or
les
jno
gs
mov
insb
add
int
add
sub
xor
jl
fisubrs
in
gs
cli
mov
pop
xor
shlb
adc
insb
mov
test
or
shll
fs
bound
cmpsb
clc
xchg
and
movl
subb
addr16
mov
mov
push
insb
dec
outsb
lods
jnp
jbe
jle
into
mov
pusha
mov
push
in
xchg
pop
xor
sub
jle
jmp
int
add
lods
jne
adc
mov
out
jl
push
mov
imull
lret
sbb
movsb
dec
imul
push
rolb
int3
out
iret
call
jnp
leave
jno
xor
arpl
xor
inc
fcmovne
jb
xchg
push
sbb
std
fidivrl
mov
add
outsl
pop
pop
repnz
jns
test
shl
xchg
pusha
lods
jnp
pop
sub
movsb
je
push
push
pop
ljmp
fistpll
sbb
push
leave
dec
or
pop
repz
push
mov
in
dec
ret
push
into
nop
push
xor
das
dec
cmc
scas
jl
test
test
aaa
mov
inc
outsb
mov
inc
mov
in
sbb
pushf
enter
daa
je
stc
cmp
in
add
movups
jmp
sub
push
xor
and
xor
xor
mov
sbb
or
xchg
xor
enter
cmpb
pop
cltd
sub
data16
outsb
push
xchg
sbb
fsubr
sbb
fadds
outsb
push
push
sbb
loop
pop
and
fiaddl
out
jns
mov
sbb
jp
jl
das
int
sub
insb
lahf
out
fdivr
popa
lcall
inc
mov
cmp
dec
mov
cmp
shlb
mov
xor
stc
push
bound
ss
sarl
fmuls
inc
mov
xor
lret
in
cmp
outsl
sbb
pushf
into
cmpsb
shll
cmc
ret
xor
test
outsl
aam
shl
hlt
es
imul
mov
data16
insb
lods
cmc
mov
jl
push
lcall
inc
xor
add
push
sti
ss
mov
shrl
test
xchg
std
fstl
dec
jb
flds
repnz
lock
rep
aaa
mov
mov
adc
cmp
adc
aad
cmpsl
adc
iret
pushf
mov
pop
jmp
sbb
aad
ret
cmp
dec
cwtl
cmpsl
or
mov
dec
lods
pop
jb
stos
xor
jecxz
jge
pop
dec
popf
lea
mov
fisttpl
mov
mov
or
insb
mov
hlt
push
dec
pop
lret
ds
inc
mov
fldl
aaa
push
aas
add
sub
mov
mov
sbb
cwtl
pop
sbb
pop
mov
mov
dec
mov
cld
nop
add
mov
jno
lock
das
insb
lahf
clc
mov
fs
mov
ret
xor
sbb
insl
xorps
cmpsl
jae
movsl
mov
call
sub
ret
mov
add
negb
fsubrl
mov
test
xor
push
pop
subb
sti
lea
ljmp
dec
pop
mov
dec
movsb
out
add
xchg
aad
sti
push
rol
dec
movmskps
and
hlt
popf
or
lock
xchg
lods
dec
je
or
sbb
sbb
push
inc
or
sahf
sbb
push
pop
movl
sbb
jns
adc
in
mov
xchg
bound
cld
mov
jmp
adc
xor
lahf
pop
mov
jnp
mov
xor
xchg
jo
cmpsb
add
mov
inc
push
out
inc
mov
fucomip
cmpl
cmp
jns
lds
xchg
sub
shl
shll
xchg
int
and
sub
xlat
jnp
sub
in
mov
push
ffreep
call
push
pop
arpl
inc
idivb
lods
jae
add
popf
cmp
mov
cmc
and
xchg
and
adc
fwait
popf
scas
jl
notl
push
outsl
adc
xlat
sub
pop
gs
hlt
push
adc
repz
stc
inc
fisubs
fisubrs
or
popf
mov
add
push
iret
pop
mov
sbb
sbb
int
mov
push
push
pop
mov
mov
jns
adc
mov
jbe
inc
pop
jge
xor
aaa
lds
dec
jno
out
jl
outsb
cmp
mov
push
jo
add
and
outsb
test
add
fisubl
add
enter
daa
jae
in
cmp
push
loope
adc
repz
jp
cmp
pop
and
sarl
push
push
in
sti
sbb
adc
mov
xor
fidivrs
pop
arpl
dec
pop
movsl
je
push
fsubs
xchg
stc
scas
sub
shrb
repz
mov
out
insl
cmp
enter
out
add
and
inc
mov
jg
mov
cmpsl
arpl
out
mov
lcall
sbb
push
mov
test
push
inc
xorb
jg
sub
stc
pop
sub
add
adc
pop
jnp
rolb
push
fmul
mov
fmul
popa
add
or
in
insl
cmp
into
mov
cmc
mov
imul
mov
lods
loop
and
imul
cmp
inc
jae
popw
loop
lods
fcoml
sub
out
or
cli
cli
pop
cmp
in
insl
lods
xchg
sti
in
xchg
loope
outsl
gs
push
loopne
push
xchg
adc
sbb
sti
gs
repz
xchg
jns
mov
int
jecxz
dec
adc
push
sbb
dec
out
adc
lods
push
pushf
pop
xor
jmp
nop
test
aad
add
nop
adc
nop
dec
testl
rorl
push
movsb
je
test
pop
loope
lea
push
or
pop
dec
lods
mov
fs
dec
and
add
outsb
cwtl
inc
adc
or
lahf
ss
jb
scas
mov
inc
cs
sar
mov
idivb
add
cwtl
pop
add
mov
fnsave
icebp
pop
movsl
sar
mov
cmp
mov
pop
pop
lock
cmp
dec
pusha
pop
mov
pop
bnd
out
xchg
ret
les
mov
arpl
in
dec
fldl
push
mov
call
sbb
mov
lret
and
adc
adcl
outsl
or
xchg
inc
gs
lret
fnsave
cmp
data16
test
pushf
pop
imul
shr
out
out
xchg
sbb
pop
push
stos
daa
int
scas
loopne
add
outsl
dec
or
xchg
xor
push
mov
xchg
cmc
mov
lcall
inc
sub
jbe
jle
mov
push
divl
xchg
pop
xchg
add
out
jmp
cmp
ror
xchg
jns
jmp
in
push
lods
xchg
mov
call
mov
cmpsb
adc
hlt
or
fidivs
data16
dec
sti
adc
jne
lret
outsb
or
and
in
jmp
mov
mov
sub
mov
push
jmp
adc
mov
in
pop
insb
and
in
repz
in
mov
adc
add
mov
lcall
jae
dec
insl
push
pop
pop
mov
mov
xor
loope
add
xchg
js
xchg
lret
std
imul
mov
adc
cmp
imul
hlt
fwait
mov
inc
loope
xlat
or
mov
pop
in
mov
daa
int3
sbb
ficomps
mov
lds
shrb
fidivrs
push
lret
nop
cmp
mov
xchg
adc
mov
stos
jge
mov
jne
adc
test
stos
or
xchg
repz
in
aaa
jl
data16
lods
mov
xor
in
hlt
scas
cmp
in
dec
dec
test
int
in
inc
mov
in
jmp
pop
imul
add
mov
sub
ss
cmp
adc
pop
loopne
movsl
lea
mov
sub
push
fnstcw
sub
mov
jle
fs
out
xor
cs
pop
mov
insl
js
dec
arpl
in
ds
iret
pop
push
cs
pop
fdivrl
lods
out
sub
int
adc
cwtl
pusha
mov
adc
lea
dec
call
xchg
push
adcb
sub
mov
lcall
or
xor
sahf
enter
push
jmp
lds
andl
push
jnp
lea
pusha
ss
pop
push
cmp
adcl
lret
adc
loope
mov
cmc
aad
fcompl
cmc
push
adc
pushf
xor
outsl
xchg
mov
xor
push
icebp
adc
mov
insb
data16
lods
ret
into
mov
pop
lret
out
cli
popa
cli
sub
fdivl
in
fcomps
add
incb
gs
fwait
pop
loopne
lock
pop
jb
pop
adc
divl
les
cmp
cwtl
xchg
cmp
cmc
sbb
sbbl
rcll
xlat
sub
fists
jmp
int3
scas
cs
mov
aad
test
adc
push
insb
addr16
cmc
lds
je
sub
jecxz
leave
ljmp
add
call
mov
sti
inc
and
jle
push
imul
adc
incl
mov
mov
sarl
mov
rorb
rorl
idiv
jge
std
add
add
arpl
stos
mov
or
cld
out
call
mov
xor
xchg
cli
add
mov
push
sub
aam
fisttpl
push
mov
or
insl
fstpl
dec
fcomps
daa
cmpsl
jno
pop
mov
push
inc
pushf
lods
xchg
and
mov
in
and
and
add
pop
sbb
rolb
imul
aaa
mov
push
lea
add
jno
aam
add
ljmp
adc
pop
adc
push
stos
lods
loope
out
dec
jne
xchg
arpl
sbb
femms
in
sbb
cltd
loopne
xor
pminsw
cmpl
test
jnp
xchg
popf
adc
or
addl
jl
imul
sbb
lcall
add
aaa
pusha
incl
pushf
or
push
pop
xchg
add
mov
pop
popa
xor
ja
popa
dec
dec
into
mov
mov
xchg
sbb
adc
mov
mov
loop
out
add
bound
jmp
test
adcl
sbb
lret
sub
inc
test
mov
lods
roll
scas
jp
adc
cld
std
enter
push
jle
push
mul
mov
shll
pushf
pop
filds
and
xchg
xlat
jns
pop
roll
push
inc
or
lahf
jae
fcmovb
push
push
xchg
xchg
movsb
mov
jae
stc
stos
je
aam
iret
add
mov
scas
inc
fsubrs
adc
or
add
aad
leave
test
arpl
cmpsl
push
inc
in
orl
cltd
mov
xchg
add
and
dec
pop
ljmp
mov
inc
sarw
test
cmp
pusha
add
hlt
rolb
ja
jge
lret
xor
aaa
inc
fwait
mov
jno
adc
jl
xor
dec
packsswb
xor
inc
lods
mov
and
cmpsb
test
cwtl
and
int3
xchg
hlt
in
rolb
enter
daa
jno
add
xor
xor
and
insb
sub
xchg
cmp
push
out
jg
shlb
push
insb
xor
lods
mov
mov
xor
xor
pop
mov
push
js
add
pop
and
ret
push
jnp
push
test
jmp
and
adc
jae
add
and
dec
mov
lret
pop
and
mov
xlat
sub
or
pop
pusha
mov
rorl
mov
jle
sbb
fdivrs
imul
test
pop
movb
jecxz
mov
push
mov
sbb
adc
cltd
xor
into
jg
push
push
ds
push
notl
jge
lret
adc
mov
negb
into
dec
cmp
cmc
pop
jo
xor
push
and
imul
inc
add
lods
fldl
pop
mov
or
lods
stos
sub
mov
xor
push
jo
cli
pusha
push
jle
xchg
in
inc
gs
sti
inc
jle
daa
cs
gs
xor
push
lea
adc
or
fldlg2
pop
jmp
repz
xchg
jmp
sbb
cmp
mov
pop
inc
sub
or
pushf
mov
inc
jmp
int3
mov
aad
mov
nop
lret
dec
mov
fadds
mov
dec
adc
jecxz
aad
gs
sub
fcomi
rol
xchg
or
adc
adcl
mov
sbb
sub
push
pop
cmp
jb
push
mov
pop
lds
rcrl
or
fwait
cwtl
lea
rorb
int
adc
repnz
cmpsl
pop
mov
push
mov
cmpsb
or
das
or
in
xor
mov
ret
loop
imul
les
shlb
int
lea
cltd
xor
adc
mov
sbb
mov
cmp
rclb
aam
test
mov
mov
adcl
adc
dec
xchg
inc
mov
imul
mov
rclb
xchg
stos
test
scas
ret
lods
or
iret
aaa
xor
sbb
mov
xchg
test
std
xlat
xchg
outsl
inc
inc
pop
je
or
and
fwait
sub
jle
add
cmp
jno
js
stos
jns
mov
in
xchg
adcl
repz
pop
sbb
lret
ja
cmp
dec
rcl
mov
fcmovnbe
mov
add
dec
shr
jne
subl
loopne
push
mul
lret
jmp
push
push
pop
andl
subb
in
sarb
mov
and
sbb
insb
stc
aaa
das
jnp
aad
jle
or
in
cltd
les
ret
lret
fbld
ret
aam
stos
movsb
cltd
pop
or
leave
inc
pop
mov
test
loope
negb
fistpl
mov
xchg
outsb
lret
sbb
inc
add
cmc
push
scas
movsl
pushf
in
push
mov
cmp
jnp
xchg
pop
in
leave
dec
fsub
hlt
xor
arpl
push
jo
out
mov
push
sbb
fimull
lcall
out
repnz
pop
sbb
pop
fiadds
mov
rcrb
mov
lods
mov
push
movsb
mov
cmp
jbe
inc
aas
jge
in
lcall
jmp
fidivl
add
jno
popa
jl
cmpsl
sarb
push
pop
fs
xor
fwait
sahf
pop
scas
clc
xchg
sub
cld
mov
test
arpl
inc
inc
stos
int
cmpsb
dec
sbb
in
mov
add
sarb
add
addr16
sub
sub
lods
jb
cmpsl
and
mov
cld
and
jmp
jl
dec
xchg
repz
jg
lea
mulb
aaa
add
aaa
xchg
push
mov
std
pop
fsubs
inc
pop
bound
movsb
fisubl
fsubrl
fcoml
dec
outsb
ficomps
adc
dec
jbe
pushf
movsl
dec
xorb
das
mov
mov
pop
and
push
mov
int
addr16
sub
jae
fmuls
mov
mov
cmp
fs
loopne
je
jg
inc
or
stc
inc
xchg
shll
adc
dec
shlb
fdivr
cmc
and
rcll
mov
ror
in
or
fwait
into
cmc
fidivs
xchg
xor
lahf
outsl
push
aaa
shl
inc
push
mov
adc
fxsave
out
cmp
xor
das
xchg
out
push
cli
xchg
fidivl
sahf
sbb
in
scas
jg
sti
repnz
gs
cmp
enter
mov
and
mov
xchg
ret
sbb
stc
mov
pop
sub
scas
and
mov
aad
pop
inc
nop
movsl
ds
dec
adc
mov
sbb
loop
mov
lock
insl
enter
data16
push
fdiv
call
xlat
and
bound
subl
inc
sub
mov
dec
pop
push
pop
in
cmpsb
push
xchg
inc
insl
mov
aas
jl
fidivs
xchg
test
and
mov
shr
xchg
lcall
adc
cwtl
dec
sub
mov
add
mov
sbb
icebp
movsb
push
sahf
cld
cmp
cs
xor
push
xchg
dec
das
call
mov
inc
xor
dec
jne
ret
jno
popf
adc
insl
stos
ljmp
outsl
movsl
pop
mov
inc
adc
imul
mov
pop
inc
mov
pop
daa
or
call
movsb
rolb
pop
push
adc
or
out
std
xchg
subl
adc
pop
hlt
stc
pop
push
loopne
mov
or
cmp
fs
pushf
mov
inc
sbb
or
jle
mov
mov
enter
subb
lock
sbb
test
jno
or
dec
fwait
fwait
pop
mov
aad
sub
incl
adc
lret
fsubrs
in
rcll
jae
sbb
xlat
sub
ja
xchg
dec
mov
adc
out
jge
icebp
xchg
jbe
movsb
inc
push
jne
jbe
mov
shll
bound
inc
adcl
hlt
push
sub
lods
or
or
and
and
pop
adc
loopne
dec
xchg
mov
in
stos
mov
mov
imul
inc
and
jo
adc
movsl
push
movsb
scas
movsl
popf
aad
cmp
icebp
cmp
stos
pop
mov
cmp
fwait
and
push
and
adc
int
ret
js
ret
lods
leave
xlat
test
jl
loope
das
inc
sbb
or
adc
or
mov
fidivrl
mov
pop
dec
lods
dec
fisubrs
push
inc
sarb
mov
push
cmp
push
adcl
jge
jge
hlt
lcall
cmpsb
mov
aaa
rcll
or
das
mov
shrb
rolb
dec
in
sbb
cmp
rcrl
mulb
and
fsubrl
adc
inc
cmp
cmpsb
rclb
xchg
sahf
mov
mov
cmp
mov
mov
push
jbe
lds
add
xchg
lahf
addr16
clc
push
push
arpl
sbb
mov
xor
pop
je
sti
pop
jmp
test
outsb
pop
mov
out
xchg
push
xor
outsl
sub
adc
shrb
pop
loop
sti
xchg
mov
mov
push
mov
mov
push
mov
push
mov
inc
xor
sub
xor
pop
push
aaa
jb
dec
xchg
xchg
sarl
aad
mov
mov
sahf
mov
xor
loope
sarb
cmp
sti
lods
pop
fs
ss
test
cmpsl
notl
jae
xor
pusha
cmp
je
or
bound
adc
push
xorl
sbb
pop
test
shll
sub
adc
adc
lds
add
outsb
adc
lock
jns
out
call
ljmp
outsb
addr16
mov
adc
les
jl
iret
popf
push
adc
or
pop
dec
les
mov
test
imul
lock
nop
jno
sub
aam
sub
pushf
or
fucomip
ficoms
movsl
cs
icebp
call
dec
jae
out
inc
cs
dec
add
pushf
jecxz
mov
lea
jmp
push
das
pop
pop
adc
pop
jns
iret
ror
fcmovnu
mov
pop
cli
xchg
inc
mov
or
sbb
pop
jb
cmc
idivb
jno
mov
cmp
test
fs
cmc
mov
cwtl
add
mov
shlb
xor
icebp
jnp
push
cld
adc
movsb
and
mov
and
mov
mov
push
das
mov
mov
aaa
mov
addr16
add
hlt
es
and
xchg
or
dec
leave
fbld
xor
pop
lods
aam
test
push
inc
adc
sarl
jnp
mov
sbb
test
mov
mov
iret
int3
push
mov
fstl
pushf
jno
and
dec
ljmp
pop
pop
adc
add
out
jb
and
push
pop
jnp
movntps
sub
xchg
push
xor
xor
adc
ja
jb
adc
sbb
std
outsl
inc
xchg
sub
push
adcl
scas
popa
adc
jmp
addl
inc
cmp
mov
in
sub
mov
cmpsl
pop
mov
xchg
push
shll
mov
mov
into
mov
pusha
and
xchg
mov
out
out
sahf
mov
bound
dec
jb
out
push
add
fwait
out
mov
sub
test
mov
jp
mov
jne
iret
adc
jnp
sbb
jle
loope
in
pop
push
pusha
pop
dec
neg
pop
adc
push
xchg
mov
outsl
stos
inc
sub
sbb
popf
cld
or
mov
xor
or
int
xchg
xchg
aam
jo
pusha
or
imul
scas
imul
push
push
sbb
out
or
iret
and
imul
cmp
hlt
mov
inc
inc
in
enter
xor
fwait
inc
push
mov
outsb
cmpl
les
pop
ja
lock
push
jo
mov
xchg
popf
cmpl
js
cmp
mov
stc
jbe
cs
jge
fisubs
aaa
adcb
or
and
addr16
mov
push
and
xorl
mov
hlt
and
out
test
stc
test
inc
enter
push
xchg
in
test
push
daa
outsb
inc
mov
loope
jmp
sub
je
cmp
mov
movsl
test
imul
and
adc
xor
dec
adc
es
js
lcall
mov
enter
shrl
jb
xor
adc
add
stos
pop
mov
sbbb
mov
insl
clc
and
cmp
mov
js
stos
faddp
sub
fiaddl
push
add
mov
pop
adc
push
es
test
sti
cmp
fistpll
sbb
mov
dec
mov
mov
andb
adc
fnsave
fsubrs
pop
testl
lahf
xor
repnz
cwtl
aad
into
clc
ss
cmc
insb
fsubrp
xor
cmp
loop
and
imul
mov
xchg
fnstsw
and
ljmp
int3
in
in
test
cmp
nop
outsl
ja
lret
loopne
fucomi
pop
out
leave
stos
adc
jae
fsts
loope
repz
and
dec
ljmp
sbb
outsl
ds
iret
inc
xor
xchg
lock
xorb
int
bound
sbb
es
nop
pop
scas
fmull
and
jle
ja
je
add
lds
cwtl
lea
aad
out
enter
push
pop
les
xor
push
push
dec
pop
popf
movsb
dec
inc
mov
aas
inc
mov
insl
insb
jb
mov
and
sbb
mov
or
std
pushf
jmp
nop
mov
add
mov
jg
cld
xchg
ret
adc
stos
mov
out
mov
pusha
add
adc
das
cmpsb
pusha
dec
mov
cs
mov
es
dec
and
jns
mov
les
cmpsl
insl
out
mov
jb
int3
lods
aas
or
mov
jns
add
outsb
pop
jbe
xchg
std
xor
mov
cmpsl
cltd
pushl
cmp
pop
xchg
push
cltd
push
dec
fnstsw
mov
clc
pop
dec
mov
decl
shll
stos
imul
push
push
repnz
bound
mov
sub
jne
xorl
mov
jmp
fisubrs
push
test
stc
rolb
push
cmp
fsts
fwait
mov
xor
add
jno
xor
cmpl
mov
xchg
cmp
adc
data16
loopne
dec
jne
ja
fdivrs
lcall
mov
iret
js
dec
push
dec
jne
mov
mov
adc
jge
jne
mov
shr
dec
sti
rclb
shl
xlat
out
sub
mov
cld
pop
jp
add
pushf
insb
cmp
mov
jle
mov
inc
pusha
cmc
scas
adc
jge
fists
lods
xor
inc
cmp
jae
mov
sbb
mov
jbe
inc
or
jg
sbb
sub
imul
scas
into
mov
jnp
leave
push
iret
andl
leave
mov
lret
fsubrl
dec
neg
inc
lock
mov
push
xchg
fisubl
sbb
and
xchg
in
cs
mov
mov
mov
movsl
and
aaa
movsb
inc
mov
xor
jbe
push
fnstcw
lods
sbb
sbb
aas
xchg
sti
or
and
jl
stos
and
push
add
leave
xor
lods
in
mov
and
push
or
or
fsubrs
in
insb
ret
adc
rcrl
insl
ljmp
jge
aas
sub
adc
aas
ds
test
mov
int3
and
out
clc
lock
lods
xor
cli
enter
xchg
ret
js
mov
lret
xor
sbb
fcoml
add
or
fildll
subb
mov
mov
std
and
xor
xchg
into
das
int
jo
sub
scas
jle
push
push
lret
aas
out
shrl
mov
or
sahf
idivl
test
mov
mov
mov
mov
or
stc
imul
lret
pop
lods
ss
pop
idivb
sub
push
cld
es
sahf
xor
movsb
cmp
inc
loop
pop
or
js
xor
inc
xor
shrb
and
pop
imul
pop
add
lahf
xor
inc
mov
mov
sbb
out
jo
cli
sub
add
out
cmp
call
shrb
loopne
push
pop
or
push
dec
fxch
into
int
cmp
loop
xchg
or
sbb
stos
imul
sub
jae
adc
idivb
pusha
or
jmp
jae
subb
nop
ss
dec
xor
mov
je
dec
and
lods
sahf
jno
inc
lea
push
call
push
fadd
pop
jnp
or
movsl
pop
adc
cmp
mov
inc
cmp
xchg
inc
mov
push
mov
iret
dec
sbb
xchg
jb
xlat
decb
std
inc
sub
jns
xchg
mov
lret
mov
jg
sub
cld
mov
mov
mov
lahf
cmp
lock
dec
mov
test
jns
jle
ret
rclb
aam
push
xor
push
inc
int3
es
dec
mov
dec
and
cltd
mov
adc
mov
pushf
insl
ja
xor
mov
mov
and
cltd
ss
test
and
jl
test
pop
add
pusha
mov
clc
cwtl
fwait
adc
ljmp
and
imul
pop
ds
out
cmp
pushf
xchg
cmc
gs
int
test
jmp
cltd
and
in
lock
xor
cltd
jp
js
fadds
inc
scas
xchg
lret
mov
inc
mov
dec
or
les
scas
sbb
leave
add
add
arpl
xor
mov
cs
or
mov
sub
mov
or
ja
rorb
dec
xorb
jnp
mov
xchg
test
or
jne
cmpsl
out
mov
dec
cli
out
pop
pusha
sub
jmp
jl
mov
out
or
sub
sahf
std
sti
addr16
inc
jp
add
and
rep
movsl
inc
dec
jnp
je
jle
xchg
pusha
nop
and
or
pop
in
pop
inc
inc
pop
shll
fwait
sahf
push
in
push
ds
dec
xchg
int3
mov
scas
jbe
stos
mov
jbe
xorb
mov
ljmp
and
adc
clc
mov
adc
push
leave
sub
test
inc
repz
into
push
adc
xor
aam
adc
mov
and
mov
ficoms
orb
jnp
mov
clc
push
lds
adc
mov
push
jg
xor
in
xchg
pusha
test
aaa
sahf
or
std
into
jl
fwait
cmp
push
out
out
xor
pop
xor
je
and
push
test
out
cmpsb
pop
les
in
push
pushf
inc
enter
daa
insb
adc
loope
mov
sub
mov
cmp
dec
ds
movsl
mov
xchg
and
push
lahf
les
push
lret
pop
xchg
sbb
mov
cmpsb
daa
and
xchg
out
xor
mov
push
sub
pop
pop
xor
push
pusha
inc
push
cmp
or
push
call
lahf
adc
mov
jnp
addb
sub
adc
adc
adcb
int
in
sub
pop
aam
or
jmp
mov
xchg
sbb
test
lcall
xorb
outsb
jg
std
fdivs
and
cmp
adc
aad
cmp
in
sbb
int
loop
push
test
cltd
cmp
push
repz
mov
sbb
xor
mov
imul
ficomps
pushfw
aam
lods
sub
dec
out
jp
cli
pop
pop
add
cli
inc
and
sti
scas
add
or
loopne
enter
adcl
push
xchg
les
pop
repz
push
sbb
in
jne
dec
je
sub
and
add
insb
dec
jmp
inc
push
jecxz,pn
mov
sbb
imul
pop
xlat
dec
gs
jecxz
or
push
lea
shr
inc
mov
shll
pop
cs
loopne
test
mov
fldt
pop
jecxz
mov
inc
fstps
or
clc
shl
jb
dec
dec
mov
adc
adc
es
lret
testb
inc
cwtl
xor
movzwl
adc
mov
cmp
call
sbb
and
mov
clc
das
fs
mov
sbb
dec
aam
cwtl
jns
lods
sub
es
mov
or
int3
sub
mov
cmc
mov
mov
cmp
pop
pop
aam
inc
shlb
ss
insl
dec
rolb
inc
ljmp
xchg
je
sarl
xchg
jge
xor
test
imul
inc
add
xchg
or
or
cmovs
add
push
xor
dec
xlat
mov
xchg
mov
dec
lods
adc
pusha
xchg
movb
pop
pop
inc
dec
shlb
jmp
pop
fwait
sbb
mov
inc
mov
add
mov
shlb
pop
ret
cld
enter
clc
hlt
xchg
fisubl
xorl
lret
int3
pop
ret
push
test
dec
sub
mov
dec
dec
mov
lods
outsl
xchg
dec
xor
mov
mov
sahf
out
out
cmp
dec
jmp
jmp
inc
push
adc
lods
sub
cltd
jne
addr16
adc
jns
or
xchg
in
insb
adc
fidivrs
dec
xor
pusha
sub
loopne
leave
xchg
pop
sbb
stos
jae
rcrl
jno
add
jo
in
xchg
subb
xchg
and
imul
mov
aas
loope
adc
inc
iret
aas
pop
cmpsb
ret
cwtl
leave
mov
adc
arpl
adc
or
add
mov
xchg
add
test
pop
add
inc
fidivs
insb
lds
mov
dec
mov
dec
sbb
cmp
xchg
push
or
jbe
cli
xchg
jge
mul
sbb
sub
sub
jl
pop
mov
push
leave
push
pop
xor
bound
or
fstpt
push
pop
fcmovnb
inc
jne
inc
cmpsb
ficoms
jp
mov
pushf
daa
imul
cmp
or
stos
push
mov
dec
aam
cmp
jmp
lea
repnz
cwtl
push
sahf
sbb
cmp
xor
cwtl
or
pop
fwait
pop
fstpt
imul
push
inc
pushf
push
popl
fsubr
mov
xor
int
or
xchg
mov
adcb
mov
pop
add
and
adc
int
add
mov
adc
ffree
xchg
inc
inc
mov
lcall
xor
ret
arpl
inc
aas
jg
jne
mov
sbb
stc
xlat
jo
fs
out
fistl
add
fidivl
and
push
fsubs
shll
stc
and
adc
or
mov
cmc
rcl
xor
unpckhps
outsb
cmp
pop
popa
imul
fists
lods
adc
push
out
or
xchg
adc
mov
lds
sti
pop
cmp
stc
inc
es
pop
loopne
faddl
adc
loope
les
dec
repz
dec
xchg
xchg
lods
sbbl
mov
aaa
sub
pusha
xchg
adc
lahf
jae
lcall
aad
push
pop
nop
in
jmp
dec
out
lcall
fcoml
je
xlat
push
jecxz
mov
ja
cli
fsts
ss
push
xchg
jb
loope
push
sbbl
stc
fistpl
mov
inc
dec
mov
hlt
mov
aas
xchg
mov
jb
jp
mov
popf
push
shll
inc
not
in
xchg
std
xchg
push
bound
pushf
jecxz
mov
dec
dec
cld
adc
fs
pusha
dec
mov
mov
popf
push
lock
mov
adc
inc
ret
cmp
jno
mov
insl
dec
mov
adc
push
and
mov
out
subb
mov
loop
mov
inc
cmp
aas
lods
into
pop
repz
or
cltd
movsb
push
and
ss
and
push
loop
or
clc
push
clc
addr16
mov
pop
push
sarl
dec
sub
in
sti
xchg
push
xchg
jnp
add
fldenv
mov
cwtl
dec
adc
popa
cwtl
test
sub
xchg
xchg
or
mov
fwait
inc
es
loop
lret
jmp
add
xchg
inc
lcall
les
push
mov
in
cmp
mov
sbb
pop
or
xchg
ja
sbb
jae
mov
mov
adc
dec
adc
movsl
adc
mov
add
out
sbb
mov
jmp
adc
stos
out
pop
repz
xchg
andl
push
xchg
and
mov
jae
or
cmp
jecxz
andl
jecxz
xchg
pushf
jmp
inc
pop
lahf
sub
popf
cwtl
lods
push
cmp
xor
stos
cltd
in
sub
or
sti
imul
aad
idivl
or
je
adc
bswap
sahf
fdiv
ret
mov
hlt
repz
arpl
xchg
inc
stc
fcoms
out
xor
addr16
fidivrl
ror
call
sbb
or
aas
rolb
sbb
sahf
gs
subl
pop
jbe
jnp
jge
jno
sbb
es
jl
inc
or
and
jl
idiv
dec
sbb
dec
push
lods
mov
mov
mov
test
xchg
test
and
test
add
and
sbb
mov
ljmp
add
loope
pandn
icebp
sarl
shrl
movsl
lds
lea
xchg
push
jno
sbb
out
add
pop
and
das
mov
fistps
nop
js,pt
sub
pop
fsubrl
push
push
fcoml
cli
cld
outsb
xor
je
clc
test
shlb
into
jge
subb
stos
mov
xor
and
pop
cmp
inc
jl
sub
ds
pop
rclb
lcall
lret
mov
jae
loopne
fiaddl
push
lock
mov
repnz
push
ss
idivb
pop
push
xlat
testl
stos
xor
cs
or
into
test
leave
cmc
mov
inc
xor
outsl
mov
loop
xor
sub
xchg
adc
ds
add
shll
movsb
lods
sti
lods
xchg
dec
sbb
cli
vpminsw
xor
iret
sbb
ss
push
loopne
add
into
adc
loopne
les
jmp
cmpb
sbb
pop
arpl
sub
xchg
faddl
cwtl
jmp
cmp
test
jecxz
nop
jge
dec
dec
pop
inc
inc
insb
dec
push
push
sbb
cltd
sbb
add
push
inc
jno
cmp
shll
sub
xchg
sahf
xorl
jl
pop
sub
ret
inc
punpckldq
aas
ss
int
enter
fdivl
cmp
notb
nop
std
cmp
stos
sbb
pop
ss
mov
adcb
iret
inc
arpl
pop
iret
aaa
lock
das
das
and
cmp
or
lahf
aam
and
ret
lret
leave
mov
and
insl
adc
ret
xchg
cmpsl
imul
dec
lods
jmp
idivl
add
leave
pop
mov
adc
mov
ficoml
push
test
imul
aas
fst
add
clc
dec
add
xchg
sti
adc
rcll
cld
in
pop
insb
or
stos
and
pusha
mov
push
pop
and
mov
mov
int3
or
sub
test
cmc
xchg
nop
imul
dec
jg
mov
push
fisttpl
lods
nop
fwait
jbe
mov
add
testb
xor
pop
and
xchg
js
mov
add
xor
pop
cmp
inc
ja
popf
dec
dec
cmp
mov
mov
dec
mulb
jne
pop
and
mov
add
jmp
fisttpll
jno
jecxz
adc
and
addr16
xor
jp
cmp
and
mov
fs
loope
ljmp
mov
xchg
pop
mov
adc
fsubs
popf
mov
into
fistl
push
mov
xchg
xchg
mov
cli
and
xchg
cs
pop
stos
out
int
jno
xor
bound
push
mov
leave
mov
mov
arpl
ds
push
xchg
push
repz
xchg
scas
add
imul
scas
mov
fidivrs
mov
rcrb
mov
icebp
loop
cmp
outsl
and
add
jbe
jno
jge
rolb
sbb
pop
aaa
cmp
out
andl
lcall
dec
xchg
fs
sbb
scas
adc
xchg
test
lock
scas
cmpsb
in
inc
in
or
enter
daa
imul
jecxz
and
fnstsw
jo
inc
ds
cmpsl
outsb
movsl
int3
xchg
shll
sub
iret
lahf
and
cwtl
sbb
jo
lea
push
mov
js
add
push
mov
mull
inc
cmp
sbb
push
adc
dec
mov
push
cmpb
mov
fsubrl
popf
and
lods
popf
inc
sub
sbb
lcall
pop
mov
scas
adc
sahf
adcl
adc
daa
popa
jg
jo
mov
cli
pusha
stc
inc
stos
hlt
fs
push
adc
mov
cmp
push
bswap
testl
xor
cmp
iret
xchg
or
xchg
jl
addr16
iret
add
outsl
imul
xchg
imul
in
sbb
xlat
bound
and
sub
mov
pop
out
mov
cli
clc
dec
mov
fwait
push
cld
aas
xchg
add
jle
loopne
inc
xor
loop
adc
push
fldenv
jmp
xchg
pop
mov
aaa
cmp
sbb
xor
repz
or
push
js
imul
pop
adc
or
nop
mov
cmpsl
push
inc
mov
testl
adc
repz
jge
rorl
mov
into
push
pop
mov
inc
mov
dec
push
push
lock
pop
int3
test
inc
sub
sbb
jb
jne
mov
mov
sub
adc
notb
push
cwtl
gs
or
xchg
test
cmp
imul
push
lock
add
lods
mov
add
pushf
aam
fs
ret
pop
jle
cmpsb
jmp
insl
cld
jbe
dec
stos
xchg
cmp
push
hlt
push
popa
in
dec
lods
push
or
mov
sub
push
and
jne
adc
shrb
inc
add
pop
insb
push
push
mov
clc
test
ljmp
pop
pop
pop
fwait
loop
adc
outsb
out
mov
push
cmp
pcmpgtw
xchg
or
push
dec
xor
push
xor
sahf
iret
cmpsl
dec
loope
and
nop
rcrb
push
test
or
mov
add
push
ret
mov
adc
xor
adc
in
mov
push
mov
movsl
sahf
mov
hlt
dec
outsb
ja
xchg
mov
or
mov
lahf
decb
imul
xor
sbb
fsubr
push
jmp
test
fildl
cmpw
and
push
pop
addr16
adc
jmp
insb
push
mov
jnp
push
mov
inc
pop
in
adc
sbb
inc
dec
rcrb
xchg
aas
inc
outsl
xor
pushf
push
stc
xchg
out
sub
mov
pop
push
stos
jmp
faddp
mov
imul
test
adc
mov
iret
pop
in
xchg
ret
mov
hlt
mov
arpl
sbb
or
jno
cmpsl
inc
adc
loopne
mov
insl
xchg
int3
inc
sbb
je
ficomps
nop
faddp
aaa
sub
mov
inc
xchg
pop
cmp
fcoms
clc
dec
movsl
push
mov
jge
adc
sbb
push
cmp
cli
jmp
hlt
jno
fadds
dec
testb
jb
fdivs
jae
imul
jp
and
jo
mov
adc
scas
xchg
in
out
out
enter
daa
push
dec
dec
loope
stc
xor
cmp
mov
mov
cmp
and
test
lahf
inc
cmp
lcall
push
lock
popa
dec
leave
mov
pop
adc
je
pop
mov
test
or
sub
fldt
mov
adc
es
orb
cmp
cmp
scas
and
fmulp
adc
push
sub
adcl
rcrl
mov
mov
sbb
outsb
cltd
test
adc
repz
mov
mov
movsb
fs
mov
adc
mov
ss
fcom
stos
pop
test
enter
or
cmp
inc
xor
xchg
push
inc
dec
xor
cltd
mov
dec
es
fdivs
imul
out
int3
add
mov
lods
leave
lea
out
lret
sub
push
test
jb
push
xchg
bound
popa
loopne
xchg
js
test
push
adc
das
lret
je
div
and
and
shr
add
dec
add
cmpsb
adc
xor
outsl
jge
aad
lcall
or
push
inc
mov
mov
je
mov
movb
xor
jnp,pn
iret
add
pop
cli
popf
pop
and
mov
cmp
pop
mov
inc
inc
hlt
mov
je
lahf
jb
inc
adc
ds
shll
inc
negb
leave
ds
and
movsl
mov
addr16
outsl
cmpb
xchg
push
mov
lods
ja
mov
cld
mov
pop
shl
and
lret
adc
sub
jg
aam
sti
jne
jmp
into
shrl
ror
dec
cmpsb
cmc
mov
mov
cld
ljmp
idivb
cmp
adc
push
rolb
outsb
test
dec
mov
cmp
push
sub
frstor
add
xchg
jns
das
ljmp
lahf
pop
ret
stos
add
inc
xchg
sub
jg
adc
sbb
les
inc
or
add
or
mov
fwait
sub
xchg
fdiv
sbb
adc
or
insl
push
fwait
aam
jmp
add
sub
lock
cmp
xor
arpl
andl
cli
sub
mov
mov
scas
xor
ja
add
dec
ja
mov
xchg
mov
lea
cli
sbb
mov
lods
or
mov
jle
and
jb
adc
push
add
jmp
je
or
push
push
and
jle
insb
mov
xor
jle
aad
in
inc
inc
pusha
xchg
mov
pop
xchg
adc
sub
inc
jp
pop
jae
add
mov
xorb
in
add
sub
xchg
xor
pop
sub
pop
lret
push
out
jmp
add
mov
ss
ret
xor
aam
cmp
loopw
add
or
in
jp
inc
stos
mov
push
push
insl
add
pop
jns
rorb
faddp
and
dec
mov
inc
push
xchg
jns
cmp
pop
lea
jl
jbe
mov
jge
cmp
sbb
mov
mov
cmp
imul
gs
rorb
push
inc
sbb
into
cmpsl
adc
daa
pop
push
test
xchg
inc
mov
push
cmpsb
ljmp
enter
daa
addr16
stos
cmp
stc
es
and
sarl
into
fwait
or
fisttpll
movsl
fiaddl
and
stos
lahf
pop
les
ljmp
add
jne
xor
sbb
mov
pop
cltd
or
push
fld
push
jmp
in
fcoml
rcl
outsb
pop
or
adc
add
push
repz
pop
and
push
mov
cmp
mov
mov
pushw
mov
mov
sub
xor
shl
arpl
push
mov
leave
jp
test
gs
mov
jnp
mov
stos
push
stc
mov
xacquire
lcall
mov
fmuls
fcmovne
lds
mov
cmp
mov
or
cmc
fisttpll
inc
outsl
daa
push
shl
imul
imul
inc
xchg
add
cmc
xor
lods
xchg
lods
mov
jge
add
fsub
inc
push
inc
mov
jno
push
incb
loopne
loopne
mull
adc
fsubl
les
ret
repz
hlt
ja
popf
cwtl
rcrl
or
adc
sub
das
pushf
bound
mov
ror
jg
jle
xchg
nop
pop
stos
cld
dec
imul
inc
push
pop
dec
mov
loopne
jecxz
ljmp
jne
xchg
call
dec
xor
pop
lods
xor
cmpl
cmpsb
fistl
mov
and
inc
gs
pusha
fistpl
adc
xor
leave
push
jmp
std
sub
mov
inc
mov
loopne
xor
pop
cld
mov
mov
je
scas
mov
icebp
das
mov
dec
inc
sub
shrl
out
ret
js
and
lods
and
insl
lret
dec
mov
mov
mov
adc
xchg
mov
outsb
ror
and
stos
fcmovnbe
pop
outsl
jmp
jecxz
or
test
inc
mov
movsl
or
xor
fisttpll
mov
xchg
mov
push
rcll
data16
mov
out
mov
xchg
jo
mov
mov
testb
adc
xor
lods
mov
ror
cld
xchg
cld
test
xlat
imul
push
xchg
inc
ds
or
or
fwait
add
push
fsubl
add
inc
rolb
pusha
mov
mov
and
or
in
xchg
gs
xor
mov
push
in
ja
add
mov
cmp
dec
mov
ds
dec
lahf
push
sub
xchg
jb
mov
xchg
out
xchg
iret
stos
bound
mov
xchg
mov
out
je
sub
cmpb
enter
ret
and
add
insb
daa
test
jnp
ficompl
in
xlat
lret
pusha
xor
js
call
imul
push
jp
push
jg
mov
mov
sub
mov
xchg
mov
outsb
imul
in
scas
xorl
cltd
jp
sbb
mov
les
hlt
pop
loopne
arpl
sub
or
addr16
push
aas
test
int3
sbb
pop
out
insb
fisubs
lds
mulb
repnz
movsb
push
mov
jbe
or
cmp
mov
or
jno
push
inc
jl
mov
xor
xor
sub
scas
scas
pop
jae
mov
subb
inc
mov
cmpsb
insl
pop
cmp
mov
aas
and
data16
cmp
arpl
push
je
sub
scas
push
cmp
inc
add
add
stc
xlat
jbe
jle
out
mov
push
aaa
add
out
xor
mov
dec
inc
cmc
pop
pop
push
pushf
js
cld
sub
fcomps
and
push
inc
xchg
outsl
faddl
mov
outsb
mov
inc
ljmp
mov
xor
sbb
shlb
xor
fiaddl
mov
loop
nop
sub
adc
pop
into
test
rorl
scas
sbb
arpl
insb
jnp
test
or
insl
mov
rol
stc
push
dec
fs
or
lea
and
inc
mov
lods
lret
xor
cmc
pusha
jae
subb
into
adc
movsl
cmc
movsb
xor
xor
add
outsl
push
or
andb
or
lock
in
pop
add
mov
mov
mov
inc
mov
mov
fcoml
sar
enter
test
movsb
add
mov
ljmp
pop
out
rcll
sub
dec
inc
in
mov
repz
xor
aad
inc
enter
les
pop
cli
adc
xor
jmp
push
fsubrl
xor
loopne
nop
xor
roll
ds
dec
das
shrb
loop
movb
push
int
mov
orl
in
fildl
loope
inc
in
lds
jnp
int
mov
fidivs
jae
mov
push
jp
roll
dec
jne
and
push
cwtl
xchg
dec
mov
mov
sub
or
aas
cld
ljmp
mov
pop
add
push
jbe
sahf
xchg
les
out
sbb
ret
pop
xor
es
out
stc
insl
mov
fimuls
ja
cmpsl
gs
in
mov
sub
lds
xchg
push
xor
inc
sbb
mov
mov
cltd
mov
jo
insl
loopne
mov
push
mov
fnsave
jbe
xor
mov
ljmp
add
icebp
stos
loope
or
in
mov
xchg
mov
imul
fwait
jb
mov
or
push
call
xchg
ljmp
or
inc
add
aad
push
or
jge
fwait
xor
add
bound
int3
jns
xor
cmp
jns
cmp
in
jae
xchg
mov
pusha
mov
inc
push
pop
and
xchg
pusha
or
mov
testl
outsb
mov
out
jne
fsubl
inc
pop
jmp
or
or
sbb
out
sbb
sub
jnp
inc
lds
stos
scas
inc
and
scas
jns
xchg
hlt
inc
jnp
inc
or
in
shrl
fbstp
fsts
gs
sbb
std
jae
cmp
inc
scas
fistpl
fs
bound
adc
stos
fmul
xor
sbb
or
imul
xchg
push
jmp
test
iret
jns
mov
bound
das
hlt
push
out
lds
inc
or
or
loop
das
inc
lea
int3
fidivrl
or
int3
pop
push
repz
push
pushf
add
das
cmc
cli
rorb
pop
repnz
out
aaa
movsb
cltd
adcb
inc
into
mov
xor
sbb
mov
aaa
aaa
dec
jp
dec
cmp
cmpl
dec
inc
test
push
sbb
xor
test
mov
dec
in
test
sbb
xor
lods
lret
cmpsb
lock
in
movsb
jp
enter
daa
mov
loope,pn
out
sub
lock
sub
idivl
and
and
xchg
lahf
sbb
nop
lds
push
fcompl
rep
xor
add
adc
sbb
mov
jae
xchg
pop
mov
fsubr
sbb
sub
mov
pop
xchg
cmp
mov
int
mov
movsl
addb
leave
mov
xor
mov
or
and
lock
push
test
or
pop
dec
pop
push
lcall
aad
loop
nop
sbb
loopne
pshufw
xor
jmp
mov
sub
and
sub
jno
fsubrl
cwtl
cmp
add
mov
push
mov
sub
int3
inc
xchg
pushf
mov
jg
mov
repz
adc
cmp
and
in
mov
xchg
push
jnp
incl
pop
add
cltd
dec
xor
lods
jle
add
clc
mov
movsl
cli
les
pop
mov
inc
dec
pop
sti
ja
pop
dec
stos
cmp
rol
loopne
cld
push
pop
add
stos
flds
add
repz
xchg
and
sbb
adcb
sub
cmp
mov
orl
push
mov
or
cmp
push
andl
sub
xor
lcall
adc
jecxz
push
popf
mov
fmuls
lahf
fs
dec
sbb
pop
adc
andl
imul
inc
jae
lods
inc
xchg
in
aas
push
xor
mov
cmp
dec
rcl
mulb
adc
jnp
sbbl
dec
ret
enter
cmp
lret
cli
test
or
shll
xor
insb
das
jge
andb
xor
add
cs
xchg
insl
cwtl
cmp
xchg
xchg
daa
cmpsl
fs
ds
inc
mov
lods
add
ret
mov
mov
sahf
and
loope
sbbb
pop
cmp
stc
push
xor
test
mov
and
push
je
mov
clc
jo
sbb
ss
adc
into
lea
pop
ret
and
add
push
in
xchg
movsl
ret
mov
add
xor
xor
push
push
mov
stos
dec
mov
test
es
mov
movsb
sbb
lock
lahf
in
pop
ret
xor
loope
xor
jge
lcall
adcb
pop
lods
mov
or
in
scas
mov
mov
pop
mov
pop
loopne
lea
mov
mov
add
mov
or
jne
lods
cmpsb
mov
or
out
push
mov
sub
cli
cmc
sub
mov
jb
cli
sub
jbe
repz
pop
jp
dec
scas
and
jge
insb
std
adc
jnp
jno
jle
inc
inc
in
cs
pusha
push
xchg
outsl
xchg
mov
pop
pushf
iret
imul
jg
add
push
sbb
cmpsb
enter
scas
push
xchg
cmp
sbb
lahf
in
lods
inc
mov
xor
adc
iret
fdivrs
add
leave
loope
push
hlt
mov
clc
arpl
xor
pop
or
pop
ret
or
inc
fisubrl
add
aas
int3
repnz
fisubrs
fisubs
mov
nop
popa
fwait
cmp
out
movsb
and
adc
jbe
pop
mov
add
xlat
aaa
divb
inc
ss
jno
repz
push
out
push
pop
xorb
adc
insb
dec
addr16
and
test
out
incb
adc
cmpsb
jae
jb
mov
enter
daa
fs
cmp
inc
mov
sub
push
cmp
imul
inc
jb
movsl
out
mov
aas
lahf
mov
in
movsl
sbb
hlt
xor
adc
repnz
lods
fisttpll
push
sub
push
lock
fcompl
or
add
adc
xchg
mov
sbbb
mov
push
lahf
pop
push
lods
mov
jns
sbb
sub
lcall
xor
int
sahf
mov
xchg
test
mov
jg
sub
add
out
hlt
fs
dec
nop
adc
in
ss
int
cltd
sub
pop
test
sub
xor
popa
repz
jae
into
jno
cmc
xor
int3
outsl
std
psrad
or
test
adc
cmp
mov
mov
or
repz
add
inc
pop
cmp
mull
and
mov
mov
adc
gs
or
xor
pop
imul
mov
arpl
mov
xchg
mov
out
pop
sbb
mov
mov
add
arpl
pushf
arpl
mov
and
cs
jle
aad
mov
nop
jmp
lea
ljmp
lcall
cltd
cmp
mov
in
stos
rorl
lret
xchg
pop
and
cmpl
mov
pop
sti
cmp
inc
mov
aas
lock
or
jne
mov
push
rcl
popf
cli
mulb
test
cwtl
or
add
cmp
leave
cld
inc
inc
mov
mov
add
mov
cs
pop
lea
sub
pop
inc
aam
sahf
ja
and
loopne
insl
jg
inc
dec
xchg
dec
in
arpl
adc
pop
mov
lods
insl
sarb
mov
stc
mov
jae
test
jl
or
int3
sbb
ror
xchg
mov
test
ja
push
aaa
ds
mov
jno
xchg
jne
xor
inc
aaa
sbb
stos
mov
sbb
xchg
inc
dec
mov
cmovo
rolb
pslld
sbb
lcall
lock
xchg
pusha
pusha
test
sub
xchg
xor
inc
add
or
fisttpll
push
test
fildl
cwtl
int3
xor
mov
cmpsb
xor
jle
in
cmp
xchg
push
fwait
mov
out
fidivrs
fwait
xchg
bound
sbb
dec
sbb
fbstp
jmp
xchg
mov
aad
jne
push
stos
mov
stc
or
xor
leave
jmp
lahf
add
es
and
jno
sub
add
and
outsl
fsubrl
stos
jnp
arpl
jle
mov
dec
pusha
add
ja
mov
sub
sar
iret
inc
cmpsb
push
jae
jg
push
enter
test
sbb
in
pushf
stos
mov
xchg
imul
das
push
ja
inc
adc
std
iret
aaa
frstor
ret
leave
pop
cltd
sbb
arpl
push
addl
icebp
or
fsubrs
ficompl
inc
adc
or
xchg
int3
fstpl
fimuls
lds
shll
xchg
xor
jecxz
mov
movsb
scas
cmc
rclb
popf
popa
jbe
mov
jge
mov
pop
aaa
mov
orl
jecxz
jno
adc
jl
push
mov
push
loope
shlb
cmp
es
dec
dec
jl
jae
cmc
test
mov
jno
in
mov
add
jb
dec
enter
daa
arpl
xor
arpl
movsl
sub
out
cmpl
mov
movsl
notb
and
push
lahf
fisttpl
or
dec
cltd
sbb
fcoml
xor
imul
cwtl
cli
jne
roll
jle
dec
stos
rcll
xchg
push
add
jnp
faddl
sub
jmp
and
insl
and
outsl
add
bound
xchg
addb
cmp
int
sbb
pop
dec
xchg
inc
lcall
xor
sbb
xor
jp
and
ret
pop
jl
stc
mov
fs
sbb
jp
fbstp
cmp
fdivrs
dec
testl
mov
add
stos
or
loope
mov
xchg
xor
mov
dec
loop
popf
push
imul
jecxz
add
dec
inc
data16
sbb
lods
dec
shll
mov
call
inc
cli
sub
repz
sbb
gs
adc
sbb
loopne
push
int
inc
mov
adc
fcomp
out
lret
stos
ss
pop
xchg
test
inc
sti
cmp
in
xlat
test
js
test
pushf
push
or
shrl
mov
xchg
nop
les
ljmp
dec
mov
cmpsb
sub
popl
or
xchg
cmp
dec
adc
es
rcl
fistl
mov
insl
inc
sbbl
scas
jb
inc
add
cmc
cmpsb
in
lods
shl
jmp
lods
sbbb
jmp
shl
repnz
cld
imul
lret
fsubs
mov
inc
mov
sbb
lock
jo
cmp
push
sub
xor
ret
mov
or
mov
hlt
iret
dec
lea
push
mov
outsl
add
lods
fcoms
mov
and
pop
dec
movsb
pop
jmp
sbb
lahf
or
pop
sub
mov
mov
lock
ror
fucom
xchg
adc
xchg
mov
and
mov
mov
jb
sub
fildll
push
cmp
push
pop
cmc
cmp
add
and
or
dec
xchg
mov
cmp
int3
sahf
test
lds
xchg
inc
lcall
fwait
mov
jg
add
mov
je
push
scas
adc
add
insl
jns
xchg
or
ja
sti
xchg
mov
repnz
push
pop
shlb
sub
mov
push
mov
mov
imul
xor
push
ljmp
adc
push
call
aad
cmpl
out
lret
shlb
insb
mov
addr16
jp
test
and
das
insb
rcl
lret
jnp
sbb
sbb
pusha
sahf
adc
inc
cli
xchg
xor
lods
pop
or
mov
jae
or
mov
stc
popf
shrb
enter
aas
stos
xor
cmp
inc
imul
aad
mov
shll
xchg
jg
ret
out
iret
call
add
mov
mov
lds
cmp
push
sub
inc
or
smsw
cmp
lea
out
cli
mov
rcr
sbb
ss
cmp
mov
push
xchg
iret
outsb
jbe
gs
push
xchg
sbb
push
jg
sub
jnp
or
mov
nop
repz
push
loopne
xor
xchg
adc
push
ss
jge
cmp
jl
daa
cmpsb
jns
ret
in
pop
adc
daa
bound
cmp
xor
loope
sbb
sub
lods
cmp
jne
mov
imul
outsb
fcompl
or
dec
sbb
push
mov
clc
sub
cmpsl
push
pop
lret
cli
pop
dec
js
or
xchg
out
push
sahf
cmpsb
fsubr
jbe
sub
add
rorb
sbb
inc
pop
pop
mov
lret
mov
loopne
jle
xchg
sub
sub
lcall
push
mov
inc
xlat
sahf
clc
add
mov
cmpsb
pop
xchg
mov
jb
stc
inc
and
adc
es
ss
xor
xor
inc
and
lret
xor
push
shrb
int3
mul
into
pushf
in
add
sarb
outsl
addb
loop
setp
inc
movsl
adc
fdivrl
mov
lods
xor
cmp
mov
mov
movsb
sti
test
xor
ret
sub
loopne
sbb
adc
gs
and
dec
pop
repz
cmpsl
arpl
fs
adc
xor
xlat
ret
push
stc
sub
pop
dec
adc
into
jmp
stos
mov
aad
sbb
mov
inc
and
outsb
ja
icebp
or
adc
xchg
dec
je
js
sub
adc
push
pop
sub
mov
imul
dec
mov
mov
or
outsl
inc
out
sbb
cs
mov
and
or
cmp
push
imulb
idiv
jo
stc
cwtl
cmpb
mov
pop
jns
dec
dec
cld
xchg
mov
lret
inc
jbe
mov
insl
xchg
lock
loopne
das
sbb
sbb
ret
aam
push
jns
cmp
orl
ret
clc
mov
xchg
lods
inc
cmp
adc
ds
sbbl
pop
or
shlb
insl
cltd
xchg
dec
pop
test
lods
fists
ffree
fisttpll
cmp
daa
cmpsb
push
ror
out
pop
les
push
out
jns
aam
shl
out
lods
stc
paddd
test
dec
gs
xor
inc
mov
sbb
ljmp
dec
repz
and
inc
xor
or
lea
fwait
out
and
lret
add
into
fsubs
xor
inc
jns
push
xor
add
xchg
lock
mov
imul
jo
pop
adc
xchg
dec
ficoml
mov
mov
mov
add
mov
inc
xor
movsb
shll
les
jmp
xor
gs
out
inc
sbb
or
jecxz
shll
arpl
insb
outsb
jbe
fcoml
mov
and
lahf
fcomip
and
xchg
pop
xchg
inc
aaa
lcall
xlat
push
push
dec
xchg
out
divl
xor
arpl
mov
xchg
aas
imul
mov
scas
jb
mov
adc
and
pop
leave
inc
fdivrl
xchg
fistps
push
rorl
into
cmp
pop
fiaddl
das
cmc
int3
mov
and
ficoms
repz
hlt
push
insl
mov
mov
ja
lds
cwtl
jbe
imul
loopne
sahf
aaa
xor
mov
sbb
jno
ret
sub
iret
dec
jmp
xlat
xor
lock
push
mov
cltd
push
aam
cmp
dec
adc
loopne
cmpsb
cld
jns
in
inc
mov
enter
daa
popa
fimuls
cmp
loope
sbb
call
sub
movsl
add
popf
and
xchg
push
fcompl
add
push
sti
xor
inc
push
push
jbe
and
add
adc
or
jno
fcompl
xor
outsb
stos
adc
and
testb
lret
dec
mov
test
mov
inc
int
mov
and
dec
fcom
lcall
add
sub
sahf
fwait
lret
dec
and
sbbb
jg
std
fbstp
std
das
dec
fs
sbb
xor
mov
test
fsubr
and
testl
xchg
sub
sub
sub
push
test
push
into
jg
dec
cmc
xchg
cmpsl
in
call
loop
mov
imul
sub
dec
setbe
or
lods
sbb
xchg
inc
lock
nop
inc
mov
repz
push
add
loopne
testl
fstps
repz
xchg
mov
das
adc
inc
outsb
cmp
fnsave
sub
pop
adc
mov
jmp
ljmp
sub
nop
jp
decl
jp
inc
cmp
ss
xorb
je
inc
mov
mov
push
filds
mov
dec
push
cmp
imul
add
cmp
test
and
pop
in
aas
inc
pop
mov
ljmp
mov
pop
mov
or
imulb
std
pop
stos
lcall
adc
mov
inc
icebp
cmp
sub
lret
mov
js
cwtl
mov
pop
lock
or
stc
fwait
hlt
mov
mov
dec
aam
shlb
adc
xor
leave
dec
sbb
cmpsl
pusha
pop
out
mov
popf
or
mov
inc
xchg
mov
mov
sub
inc
xchg
sti
cltd
lret
test
adc
sbbb
xor
nop
clc
pop
jbe
xchg
xor
ljmp
adc
stos
mov
mov
fcoml
xchg
sbb
mov
ja
minps
add
mov
adc
xor
xchg
aam
sub
push
xchg
dec
addr16
mov
xchg
lcall
add
jnp
sbb
or
add
jl
call
inc
jns
mov
in
loopne
xchg
aas
dec
ljmp
cltd
pusha
pop
int3
mov
ja
aad
dec
icebp
ss
xchg
cmp
mov
jb
out
icebp
ljmp
aam
scas
out
ror
add
jnp
jmp
add
adcl
push
sub
vpackuswb
fsubr
jp
shlb
insb
test
shlb
in
mov
pusha
aam
and
adc
pop
pop
js
fiadds
jae
jmp
rcrl
lea
mov
inc
into
xchg
xchg
adc
imul
scas
aad
ret
push
dec
mov
adc
dec
adc
ret
pop
leave
mov
inc
fsubs
push
testl
xchg
in
inc
or
data16
xchg
testl
sahf
inc
and
mov
fidivs
insb
and
cmovno
mov
fsubrl
cmp
sbb
xor
into
jbe
je
jge
aaa
cmp
fwait
in
aaa
repnz
pop
or
and
jno
dec
adc
push
jne
dec
outsb
movsb
outsl
push
mov
jmp
mov
fs
scas
call
sbb
test
adc
lcall
in
daa
aas
dec
enter
daa
pusha
aaa
and
xchg
jp
loope
inc
pop
sub
mov
jg
shlb
jns
fwait
mov
lahf
cmp
inc
push
scas
xchg
mov
sub
sub
xor
insl
loope
push
pop
dec
mov
js
lea
push
sbb
aam
push
push
dec
mov
xchg
sub
push
adc
arpl
mov
andb
mov
lret
jae
xchg
pop
cltd
and
mov
mov
ficomps
or
mov
adc
cmpsl
mov
jae
xor
sbb
aam
testb
mov
cmp
mov
das
fs
and
push
add
imul
rcll
push
lahf
xor
lcall
mov
cmp
cmc
dec
pop
cwtl
xor
and
outsl
inc
adc
dec
imul
int3
add
cmp
scas
sub
mov
push
jne
aas
sub
or
sub
pop
sbb
loop
sub
jp
repnz
out
pop
mov
cmp
int3
ja
repz
lret
in
xchg
repnz
test
out
sub
mov
jnp
jo
imul
outsl
adc
nop
push
jl
dec
add
out
inc
dec
jae
dec
stc
pushf
xor
pop
jecxz
inc
aaa
cwtl
inc
loope
inc
jecxz
call
call
jg
cltd
lock
xchg
ss
mov
push
lcall
pop
dec
aas
insb
andb
push
jmp
mov
xchg
cltd
rcr
jbe
divb
jle
cwtl
clc
out
mov
int
mov
ljmp
in
je
lret
and
mov
xlat
lock
inc
das
fsubrs
sbb
mov
jmp
clc
cmpl
inc
xor
insl
sbb
xchg
xor
mov
pushf
lods
sbb
fidivrl
arpl
and
call
cltd
inc
rcrb
movsb
inc
cltd
add
inc
test
repz
fstpl
mov
xchg
dec
mov
jno
cmp
shll
dec
pop
sbb
cmp
jnp
out
aas
dec
xchg
popa
emms
push
in
push
mov
mov
imull
popf
mov
mov
shrw
pop
enter
mov
pop
imul
outsl
lods
push
adc
es
add
test
xor
xor
std
test
in
mov
xchg
mov
lea
jno
dec
in
lds
xchg
pop
and
aam
movsl
jne
ret
pop
mov
xchg
out
scas
faddl
bound
shlb
lret
cmp
andl
ds
pop
sub
xchg
jp
cmc
fwait
and
and
jnp
ror
jle
scas
mov
xor
xor
inc
sub
das
jmp
xchg
lods
nop
mov
inc
rclb
sbb
aas
lret
push
aam
mov
mov
loope
push
stos
mov
cmc
sbb
notl
imul
scas
cmp
push
xchg
nop
ljmp
jle
ret
or
xor
hlt
sub
and
inc
sbb
hlt
or
les
adc
lahf
stos
outsb
inc
add
iret
int3
mov
fstpl
jo
in
sbb
pop
dec
daa
shrb
repnz
das
hlt
and
pop
fs
movsb
fcmovne
in
push
cmp
jbe
icebp
xchg
jge
jle
sbb
je
mov
xchg
or
lahf
xlat
jno
add
jl
sub
frstor
xor
xor
cmpsb
stos
fisubrl
mov
cld
rclb
nop
inc
sub
test
in
push
lods
or
mov
daa
pop
adc
cmp
lret
mov
fstl
ds
adc
ss
fstpl
add
sbb
ss
adc
das
movsb
icebp
push
pop
outsl
mov
js
lods
lcall
lds
mov
inc
repz
fisubrs
pop
xor
add
dec
testl
mov
jae
mulb
inc
pop
xor
mov
out
sub
das
jnp
js
test
stos
mov
mov
sbb
sahf
loope
dec
test
das
adcb
jp
movsb
lea
fisubrs
test
inc
push
xchg
cmp
xor
testl
subl
sbb
into
inc
int
cmc
adc
outsl
iret
outsl
pop
and
lret
imul
ret
insl
loop
inc
enter
adc
ds
dec
mov
leave
hlt
fdivrp
xchg
pop
mov
popf
bound
xor
cmc
loopne
in
or
aas
jo
xchg
repz
fxch
pop
inc
xlat
mov
xchg
mov
dec
sbb
in
xorb
inc
sti
adc
mov
sub
aad
and
mov
arpl
push
dec
jo
or
jecxz
sbb
fwait
jmp
lret
call
inc
aaa
mov
xorl
jns
iret
xchg
adc
rcl
popf
jle
inc
cmp
jno
or
jb
mov
mov
and
add
cmc
fwait
or
gs
js
mov
lea
cli
inc
fcomi
jmp
sub
pop
xchg
mov
mov
mov
mov
adc
mov
push
mov
sub
or
ret
lock
and
les
daa
insl
add
fimull
je
cmpsl
pop
adc
mov
lret
mov
sbb
xchg
and
cmp
pop
addr16
jmp
outsl
cltd
cmp
mov
jnp
push
push
mov
fldl
mov
xchg
mov
shr
adcb
ror
mov
pop
stos
push
jp
mov
mov
pop
nop
movl
outsb
pop
and
sbbb
out
jg
shl
xchg
test
inc
test
or
lret
jnp
dec
push
mov
adc
pop
add
call
cmp
lcall
icebp
inc
xchg
mov
mov
mov
inc
push
cmp
dec
xlat
or
mov
lods
or
pop
aas
dec
mov
scas
jne
pop
pop
mov
fsubl
out
mov
mov
jmp
xchg
pop
out
xorl
sub
pop
sub
mov
int
and
cmp
jle
sarl
pusha
or
outsb
fisttps
lret
xchg
andb
out
push
inc
fst
add
fcomps
popf
insb
jp
push
and
mov
inc
shrb
sbb
test
imul
scas
fwait
addr16
push
fcmovbe
into
adc
xor
ret
cmpsl
leave
stos
mov
ja
mulb
jbe
sbb
pushf
ds
push
mov
ficompl
ret
je
or
out
int3
fidivrs
xchg
cmpsb
rolb
mov
subb
movsb
shrw
jbe
jecxz
jge
test
insl
aaa
jo
sbb
hlt
iret
jno
aam
jl
mov
dec
dec
gs
push
push
daa
xor
add
jae
push
shrb
test
mov
test
movsl
in
cmc
cld
push
jbe
ja
pop
jne
cmp
into
pop
loope
cld
cmp
mov
mov
sbb
movsl
sbb
xchg
lahf
jbe
rclb
pop
sbb
xchg
in
inc
dec
jg
jecxz
jl
addr16
mov
xchg
sahf
inc
js
pop
cmpsl
pop
shlb
push
int3
push
push
cli
jno
fcompl
mov
outsb
aam
push
adc
mov
inc
orb
mov
add
and
xchg
push
mov
aad
sub
jg
pop
mov
cmpsb
mov
mov
sahf
test
ds
ret
incb
and
movsl
mov
push
addr16
and
adc
popa
sub
fcomps
xchg
jge
aas
xchg
stos
lret
lods
xor
fs
or
push
fcomi
fmull
sub
cmp
frstor
adc
or
data16
push
out
iret
pop
cmp
cmp
mov
je
xor
xchg
sti
inc
test
cmp
loopne
add
pop
fisubrs
mov
add
pinsrw
add
ss
xchg
js
enter
popa
cmp
push
push
xlat
mov
bnd
lock
dec
pushf
gs
popf
jmp
inc
cs
cltd
sub
std
lcall
ret
inc
jno
ljmp
out
jecxz
xor
sahf
add
inc
call
lds
ds
clc
push
iret
add
pushf
jbe
pop
int
and
jb
inc
push
jg
aas
stos
push
adc
pop
pop
mov
lods
inc
sarl
jo
cmp
movsb
std
or
lret
or
sti
mov
dec
add
ret
cld
inc
test
lret
add
mov
mov
scas
pushf
shl
stc
data16
xchg
into
mov
sub
jmp
ret
jg
inc
es
xchg
sub
jmp
lahf
inc
cmpsl
pop
aaa
sbb
xchg
push
arpl
mov
cli
mov
test
add
pop
xchg
mov
mov
aam
test
nop
les
leave
mov
addr16
or
loopne
ljmp
jb
jo
stos
pop
sub
out
add
call
stc
sub
or
cmp
xor
jno
mov
mov
inc
loope
cmp
xchg
cmp
loop
fwait
stos
int
push
push
jl
add
cmp
mov
jno
mov
mov
scas
in
js
xchg
sub
shlb
outsb
add
add
ja
xor
dec
lret
mov
pushf
mov
mov
xchg
jne
push
push
mov
inc
adc
insl
add
loopne
xor
mov
rolb
inc
xchg
aaa
out
test
sub
push
mov
pop
jp
pop
cli
and
push
insb
ljmp
jle
in
mov
pusha
movsl
js
fildll
adc
push
push
pop
sbb
in
jae
mov
push
pop
mov
popf
xchg
and
mov
pop
inc
ds
jo
xchg
xchg
fwait
in
sbb
out
imul
or
adc
push
iret
jno
enter
pop
leave
and
jle
ret
arpl
pop
rorb
mov
inc
cmpsb
ficoml
insb
add
pop
push
pop
xchg
xor
push
test
adc
pusha
je
mov
aad
ss
stos
loope
icebp
cs
push
and
sbb
dec
fnstcw
mov
sbb
and
add
jno
int
jl
or
arpl
xor
xor
pop
jae
scas
test
das
test
je
jb
inc
push
and
fdivl
jno
jno
jo
pop
pop
mov
xor
mov
cmp
pop
movsl
and
and
lahf
xchg
out
push
sub
add
scas
cld
xor
movsl
fwait
pop
mov
movsb
push
pop
cmp
sub
faddl
adc
push
adc
outsb
aaa
into
jmp
xchg
je
rorb
adc
lods
mov
jne
and
mov
int
cmpsb
js
jns
mov
inc
xchg
ret
lcall
fimuls
pop
loop
daa
gs
imul
push
jg
mov
addr16
push
fs
mov
mov
cmp
fimull
addr16
cmpsl
xor
aaa
or
mov
in
mov
inc
push
outsl
fstl
loop
push
add
adc
test
push
dec
push
imulb
rcrb
out
lock
cli
pop
mov
pop
in
lahf
int
sti
out
outsl
xchg
jecxz
mov
loopne
xor
pop
std
sbb
cmp
and
in
lods
sbb
add
sbb
sbb
pop
mov
loope
sub
pusha
pushf
adc
jmp
xchg
es
mov
inc
je
nop
out
popf
dec
and
test
lcall
outsl
and
mov
mov
push
dec
call
inc
pusha
rcrl
mov
mov
fldt
jo
inc
stos
leave
mov
aas
dec
dec
mov
fs
mov
aaa
fcoml
mov
pop
std
mov
insb
cwtl
sub
repz
or
icebp
cltd
pop
ljmp
pop
aad
and
bound
or
das
jne
or
xchg
xchg
fcom
pop
push
mov
es
insl
rolb
imul
stc
fisubrs
and
mov
and
cltd
cmpsb
rorb
shlb
lahf
push
mov
nop
fst
movsb
lahf
clc
dec
aas
leave
xchg
sbb
mov
sarl
pop
sbb
cltd
stos
dec
insl
test
push
cmp
jge
std
psubusw
dec
add
clc
mov
mov
ret
dec
mov
addr16
or
test
sbb
cld
dec
or
ret
fldenv
adc
stc
mov
add
push
aad
call
popf
mov
hlt
sahf
out
mov
xor
mov
cwtl
cmp
mov
mov
pop
popf
dec
mov
scas
xor
dec
push
dec
jge
dec
jne
mov
mov
ret
pop
out
dec
push
pop
bound
enter
loope
sub
filds
mov
sub
dec
fst
addr16
xchg
mov
insb
push
call
mov
cmc
stc
mov
pusha
inc
das
popa
fisttps
lahf
pop
push
or
jae
fdiv
push
sbb
pop
mov
push
sahf
sbb
jecxz
mov
sbb
sbb
imul
scas
popa
sbb
push
push
push
mov
ret
push
leave
cltd
cmp
or
mov
inc
and
fildll
inc
mov
pop
cmp
add
test
dec
mov
pop
lds
outsb
faddp
je
xlat
sarb
mov
sub
movsb
jl
jne
outsl
xchg
fbstp
and
jge
stos
popf
sbb
dec
add
jno
ljmp
sub
lods
push
push
inc
adc
mov
shrl
js
pop
test
aas
xlat
mov
cmpsb
mov
ss
ret
dec
add
daa
pop
ret
sub
arpl
push
loope
inc
iret
sub
adc
ds
adc
daa
jge
and
sub
push
sti
jnp
sbb
mov
push
push
je
in
sub
pop
in
fnstsw
jle
pop
dec
in
push
mul
push
test
adc
lock
sub
inc
outsb
lcall
shrb
cmc
xorb
xorb
dec
push
les
int
pop
cli
sub
mov
sti
lcall
rorl
push
xor
lock
and
and
mov
jl
stc
nop
adc
pop
adc
fcmovb
cmp
xchg
sbb
idivl
test
xor
mov
pop
outsl
or
and
out
inc
pop
cmc
push
cwtl
xor
outsl
mov
cld
pop
imul
popf
ss
int3
lods
popf
pushf
inc
mov
inc
lahf
out
cmp
cli
cmp
mov
or
sti
sahf
pop
pop
incb
sbb
gs
push
loopne
jb
pop
sbb
nop
adc
push
sahf
fldcw
pop
clc
mov
lea
dec
push
pop
xlat
cmp
negl
sahf
xlat
pushf
mov
cmpsb
cmp
adc
aad
mov
nop
shrl
inc
xchg
sti
sub
stos
aam
mov
sbb
shrl
ds
movsb
cltd
push
loop
inc
call
ret
cmp
pop
repnz
inc
push
ret
sbb
adc
aas
inc
mov
inc
aas
call
mov
aad
ret
rcll
nop
cmp
mov
mov
sbb
mov
jge
icebp
jo
cmpsl
cld
cwtl
in
lret
loope
inc
mov
mov
shl
fs
xchg
das
push
add
mov
mov
stos
aam
movsl
mov
popf
aad
es
les
insl
mov
inc
dec
push
mov
mov
adc
aas
lods
lds
sarb
stos
lods
andl
fs
cltd
fnsave
test
add
mov
scas
fists
pushf
popf
lds
clc
andl
insl
rcll
push
rcl
mov
mov
aaa
jb
out
lret
ret
leave
xchg
jge
mov
adc
mov
pop
xor
mov
lds
sbb
subb
sahf
aam
imul
or
jl
fwait
or
push
pushf
lea
mov
cmp
jo
dec
ljmp
out
jns
xor
in
sbbl
scas
sarb
jae
inc
ja
or
mov
out
mov
popf
data16
pusha
je
jne
jbe
mov
push
scas
out
sub
bound
lds
xchg
divl
aaa
out
xchg
repnz
dec
xchg
in
mov
mov
and
unpckhps
inc
jnp
andb
dec
pop
call
fildll
adc
mov
inc
incb
daa
jae
ds
push
loopne
outsb
popf
loope
icebp
mov
fnsave
stos
push
dec
gs
dec
jns
sbb
es
imul
mov
in
push
scas
cmc
aad
das
or
ret
leave
adc
push
arpl
inc
inc
es
or
mov
adc
stc
iret
fidivl
lcall
hlt
add
fisubs
lds
push
mov
jnp
xor
cmp
fstl
lahf
bound
outsb
in
cs
aaa
lods
pop
dec
or
lcall
cs
lea
les
push
stc
sub
xor
adc
and
data16
test
or
mov
stos
inc
xchg
enter
daa
pop
mov
cmp
and
sub
or
cmp
xor
adcl
and
push
mov
sbb
xchg
add
jbe
xor
call
mov
rcrl
pop
js
in
or
loop
push
sbb
push
pushl
cmc
sub
push
dec
outsb
std
sub
inc
mov
dec
add
cmpsb
mov
pop
sbb
push
pusha
ror
dec
cmc
inc
sub
add
inc
or
inc
push
pop
lock
dec
ficomps
and
pop
test
pop
cmp
daa
jg
push
jecxz
lock
stc
inc
cld
xor
stos
adc
in
hlt
ss
inc
sbb
push
cmp
test
sub
xor
roll
pop
xchg
popf
or
fsubrp
into
shll
xor
fs
loop
fisubl
imul
mov
push
mov
enter
or
mov
jne
inc
sti
dec
xchg
xor
sub
jle
test
pop
pop
cmp
inc
adc
fiadds
les
pop
in
mov
fnstenv
mov
cmp
dec
xlat
jl
shrl
adc
sub
cmc
xor
pushf
data16
jmp
jle
jbe,pn
adc
push
out
pushf
imul
stos
pop
enter
sahf
je
jnp
jecxz
adc
cmpsl
adc
lea
movsb
call
inc
cltd
repnz
adc
and
sub
fisttpl
out
dec
inc
mov
enter
xor
adc
dec
jecxz
shll
jne
add
aad
add
pop
cwtl
lahf
cld
adc
movsb
xor
inc
cltd
loop
ret
push
mov
push
jne
mov
fwait
into
mov
lcall
xor
insb
sub
jg
ret
sub
jo
rorb
inc
dec
gs
movsl
cmpsl
pop
mov
inc
popa
daa
jge
lods
xor
sub
adc
mov
jecxz
shlb
or
cltd
adc
fildl
inc
repnz
adc
stos
fstpl
lret
xor
mov
adc
shrl
mov
pop
jno
leave
stos
cmp
orl
xor
std
seta
sbb
xor
inc
push
mov
enter
xorl
test
popa
ljmp
xor
mov
stc
fwait
aaa
sbb
push
aas
test
add
or
xor
insl
enter
mov
mov
fdivrl
test
ja
aaa
lea
and
mov
or
lods
dec
inc
shr
jne
popf
ljmp
pop
scas
bound
scas
notl
ljmp
nop
ss
sub
inc
loope
addr16
xor
inc
mov
sub
repz
push
movsl
jle
lock
in
dec
scas
pusha
jbe
ja
lret
xchg
int3
mov
pop
ret
inc
or
dec
jae
call
ret
popf
or
scas
push
sbb
mov
xchg
mov
add
scas
daa
mov
imul
rolb
mov
mov
xor
leave
xchg
mov
jle
inc
sub
aas
push
add
dec
fisubrl
jg
pop
aad
int3
and
aad
and
pop
xor
mov
into
lcall
xchg
cmp
jbe
xor
jge
cmp
std
xchg
ret
push
mov
jl
sbb
dec
or
push
push
faddl
das
xor
insl
ss
and
and
sahf
stos
push
test
aad
addl
int3
cmpsb
xchg
jns
in
xchg
sub
daa
pop
and
out
loope
and
pushw
mov
cmpb
and
xor
pop
fwait
lahf
repnz
push
mov
adc
add
fmuls
xor
insl
aad
jae
pusha
pop
xor
mov
out
jecxz
int3
arpl
push
bnd
push
mov
pop
sub
leave
xor
push
ss
and
mov
fadds
mov
mov
push
lret
int
jb
sub
adc
inc
lcall
test
sbb
imul
adc
ret
jg
lret
inc
jne
stc
incb
adc
je
xchg
and
cmp
or
sbb
cmp
lret
movsb
xor
aas
cmp
mov
je
mov
xor
clc
xchg
scas
xor
mov
loop
jmp
imul
loopne
rclb
sub
imul
ficomps
out
pop
out
cmc
mov
mov
loopne
movsb
sti
cld
lret
dec
push
or
hlt
push
loopne
das
sbbb
jl
mov
sti
repz
push
div
jb
mov
sbb
or
xlat
mov
int3
ja
dec
cmpsb
pushf
adc
cmp
jns
inc
fnstcw
jno
ja
sbb
test
inc
mov
mov
jecxz
cmp
stos
std
pop
lea
xchg
add
sarl
les
fwait
dec
push
pop
add
mov
sbb
cmc
inc
mov
xor
jb
mov
mov
fsub
popf
shll
stc
std
test
mov
dec
sub
mov
adc
out
xchg
adc
mov
jo
mov
or
das
adc
mov
jp
xor
mov
repnz
push
lds
dec
pusha
adc
cmpsl
pop
jmp
mov
ds
lods
fwait
inc
pusha
mov
xor
jmp
mov
rorb
push
sbbb
enter
and
push
aad
call
clc
stc
addr16
jmp
ljmp
int
sbb
xchg
xchg
imul
xor
psadbw
push
add
fstpl
rorl
xor
fidivs
xchg
mov
xchg
add
ljmp
xchg
mov
stos
inc
jmp
insb
imul
outsb
fwait
add
cmpsb
sub
in
dec
inc
xor
adc
jns
dec
out
pop
fcmovu
xchg
push
jge
mov
jmp
jmp
dec
xchg
push
mov
ret
push
mov
jnp
cmpsb
dec
es
jne
daa
fidivs
jmp
call
ja
out
cmpl
out
dec
test
aas
rcl
mov
lea
insb
xchg
and
jle
fldln2
in
cmc
adc
lret
sub
jmp
lea
stc
sarb
jno
jae
aad
push
data16
das
push
dec
mov
pop
mov
int3
xchg
negl
mov
xchg
adc
cmp
stos
lock
in
call
lret
leave
incb
mov
inc
sub
enter
iret
push
cmpl
dec
int3
or
pop
fisubrs
scas
lods
ror
ljmp
pop
xchg
cmp
in
push
pop
mov
cmp
fidivrl
aaa
sub
mov
jl
dec
dec
ja
lea
mov
stos
jp
enter
add
popf
and
and
cmc
iret
rclb
pop
inc
addl
adc
repnz
js
je
pop
test
daa
pop
push
mov
loope
inc
lods
sub
cltd
adc
ds
test
ret
adc
lahf
adc
rclb
or
out
push
add
mov
xor
imul
ss
pop
pop
jle
js
test
pop
or
push
jge
push
lods
in
sbb
inc
sbb
or
lret
jb
scas
pop
xor
sti
movsb
and
subl
shll
lods
xor
int
sbb
lods
mov
lcall
outsb
mov
or
sbb
xor
test
imul
stc
mov
dec
fs
dec
adc
je
cmp
cmp
lret
popf
xor
rcr
cmp
sbbb
xchg
dec
push
mov
xlat
xchg
outsl
pop
fmuls
imul
mov
loopne
push
sub
mov
xor
cli
sub
xchg
mov
dec
outsl
fs
stos
lock
outsl
imul
pop
jns
adc
xlat
sbb
repz
cmpsb
xchg
inc
addr16
clc
fnstsw
inc
xor
xlat
cli
sahf
fsubrs
testb
jge
pushf
mov
jp
cs
adc
shll
push
and
dec
popf
dec
dec
inc
rol
repnz
cmp
je
fsubs
jecxz
cmpsl
xchg
lods
pop
mov
call
inc
loop
pop
ja
leave
cmpl
push
cmp
cld
ds
paddsw
mov
aas
lds
divl
mov
and
cmp
add
dec
testb
cwtl
adc
cltd
or
lods
push
repz
cmc
stos
xchg
cld
sbb
mov
loope
lock
add
icebp
jb
mov
jno
lret
aam
xor
es
jae
insl
insb
add
shlb
mov
popa
push
ret
pop
lods
push
bound
pop
fcomps
and
and
or
adc
cld
sub
aad
dec
push
cwtl
cltd
xchg
insb
cmpl
sub
dec
rcr
adc
pop
movl
out
hlt
fstl
push
jmp
inc
mov
cmc
notb
cmp
xor
lret
or
into
aas
inc
dec
push
cli
movsb
test
nop
mov
sbb
enter
rcrl
dec
add
dec
mov
add
insl
mov
xor
push
in
add
xchg
mov
xchg
mov
or
sbb
inc
pop
movsb
push
and
and
mov
mov
idivl
dec
mov
push
rorl
adc
push
mov
out
enter
mov
push
test
inc
stc
out
fld
sub
cmp
lcall
push
and
dec
xchg
jle
mov
in
add
fisttps
cmpsb
fcoml
xor
cmpsb
inc
pop
es
jae
pop
adcb
rcll
push
fdivrs
mov
lcall
xchg
dec
outsw
sbb
cmp
scas
in
cmc
imul
fwait
jb
dec
mov
ret
ror
aas
dec
hlt
cmp
arpl
pop
mov
lret
or
push
add
int3
fcmovbe
adc
add
push
or
dec
sub
or
shl
xchg
je
and
movsb
test
gs
stos
bound
jge
pop
outsb
sbb
push
or
lds
dec
out
movsl
push
mov
mov
jo
movl
and
iret
loop
in
fisttpl
adc
sbb
pop
xchg
mov
daa
pop
pop
cmp
lods
mov
pusha
mov
cmp
bound
sete
ljmp
and
fstpl
inc
mov
and
cwtl
inc
xor
shrl
js
scas
rcll
repnz
mov
icebp
fcompl
dec
outsb
es
adc
ficompl
popl
mov
repz
mov
mov
pushf
push
shrb
int
sbb
loopne
or
rcrb
ror
scas
mov
sub
sbb
cwtl
pop
test
movl
jmp
mov
cltd
mov
sbb
xchg
cmp
adcl
pop
lret
mov
mov
pushf
cmp
aaa
rorl
and
into
jp
icebp
cmc
xchg
xor
scas
outsl
cmp
loop
stos
xchg
add
adc
stos
dec
add
cmpsb
data16
mov
cmp
or
aaa
mov
pop
cmpsl
into
mov
mov
ss
pop
xchg
xchg
shr
gs
pop
loopne
cmp
pop
cwtl
mov
mov
add
and
in
repz
nop
xchg
or
ljmp
xlat
cmp
cltd
sub
dec
adc
push
ss
addr16
jmp
sahf
imul
cmpsl
mov
dec
cld
sbb
dec
mov
mov
filds
jecxz
push
cltd
mov
aas
lea
cltd
call
mov
cmp
adcl
and
pop
lahf
push
rolb
pop
cmp
lds
jb
xchg
mov
out
jecxz
rcll
shl
dec
add
divb
sbbl
xor
mov
imul
lret
popf
pop
mov
pop
sbb
shl
push
das
rcrb
jne
push
or
pop
xchg
out
push
mov
cmp
enter
insb
pushf
xor
in
mov
mov
mov
inc
push
rcl
sbb
mov
fstl
pop
sub
clc
outsl
mov
insl
ljmp
add
jb
mov
out
push
jns
xchg
cltd
push
xchg
sbb
lfs
or
or
fiadds
mov
xchg
xchg
mov
sbb
jge
inc
pop
push
stos
fwait
les
push
sub
sub
fadd
and
sub
xor
out
cmc
in
and
push
mov
mov
or
shlb
pop
cmp
popa
dec
jl
xorl
and
pop
test
dec
in
mov
call
out
cmpsl
fisttpl
bound
inc
jmp
and
sbbl
cmp
or
dec
in
jp
pop
and
dec
insb
insb
push
std
jnp
outsl
arpl
xchg
jae
pusha
inc
in
inc
fbld
lods
jae
inc
xlat
out
pop
fbld
inc
sub
stos
jae
jge
push
in
add
popf
jge
mov
and
movsl
push
popa
sbb
xchg
sub
iret
fldenv
push
mov
push
lret
lcall
stos
cmpl
hlt
test
arpl
out
or
pushf
ret
jg
lods
fiaddl
pop
adc
loope
xor
fdivp
mov
pusha
rolb
pusha
mov
outsb
loopne
push
loop
movsb
xor
mov
jbe
sub
lret
sbb
xorb
jb
or
xchg
hlt
jl
lcall
test
xor
jle
daa
scas
mov
mov
test
ss
pop
inc
mov
mov
in
inc
and
daa
push
mov
ja
mov
cmpsl
js
cmp
rcrb
movsl
dec
pop
sub
push
mov
stos
push
sbb
sbb
pop
add
mul
xor
mov
cmpsl
loopne
js
outsb
sub
mov
js
fbstp
xchg
faddl
add
jmp
pop
outsb
mov
inc
adc
mov
mov
adc
jg
push
add
scas
push
push
rcll
jmp
xor
pop
aas
sub
adc
ret
shll
mov
aam
stc
in
test
sbb
jnp
cmp
cmp
stc
stc
and
sbb
ss
cs
ss
jne
cmp
cmp
inc
idivl
lret
cmpsl
xor
sarl
pop
mov
add
xor
xor
loop
pop
punpckhwd
inc
add
into
sub
pop
in
lods
and
mov
push
add
and
lret
or
mov
jmp
insb
xor
adc
mov
adc
or
les
repz
jecxz
adc
and
mov
ja
sub
push
xor
push
push
push
pushf
adc
sbb
add
cmp
pop
ljmp
sub
imul
and
in
sti
call
cmp
fisttpll
sub
push
inc
fildl
pop
inc
pop
roll
or
adc
dec
aas
add
jb
aam
mov
jns
pop
shll
cmpsb
inc
std
popf
or
cwtl
mov
pop
mov
push
sub
mov
push
or
fcomip
mov
adc
lock
mov
scas
rcl
mov
pop
add
aam
xor
ret
push
sub
insl
cmp
or
cld
cmp
sti
xchg
cmpsb
popa
sbbl
mov
sahf
hlt
jo
into
mov
mov
pop
fwait
leave
rolb
sub
shll
xor
stos
les
xchg
test
inc
ljmp
leave
pop
sbb
push
push
out
mov
sbb
fistps
or
jecxz
xor
mov
xchg
xchg
adc
sti
test
xchg
daa
sbb
std
imul
mov
fwait
repz
cmp
push
pop
push
add
xor
dec
sbb
xor
pop
lahf
jns
mov
in
push
adc
mov
jge
mov
sbb
mov
fcomps
fisttpl
jp
mov
sbb
mov
jne
dec
iret
shll
jne
and
mov
push
cmp
in
xchg
jmp
out
sub
sub
inc
out
dec
and
xor
mov
call
cmp
imul
add
dec
movsb
in
dec
push
pusha
loop
adc
inc
mov
xchg
sbb
pop
sahf
pop
inc
xor
aaa
mov
popf
movsb
nop
mov
push
sbb
jge
xchg
in
xchg
cld
bound
imul
iret
push
adc
dec
adc
mov
or
jg
test
arpl
dec
arpl
jmp
ds
inc
cmp
ss
inc
int3
int3
cmp
ficoms
test
rcrb
push
sbb
cmc
cmp
rol
movsb
mov
jecxz
jbe
mov
pusha
sbb
popf
pusha
aaa
push
cmpsl
outsb
jno
mov
dec
les
sub
push
in
lock
cmpsl
ss
sahf
stos
hlt
and
les
test
add
out
inc
xor
in
sub
out
mov
push
or
jns
mov
out
cmp
xchg
ds
mov
and
and
push
in
outsb
xchg
mov
mov
xor
rcl
jg
xchg
pop
into
out
js
ror
enter
push
pop
lods
push
mov
fcomp
repnz
cmp
ficompl
outsb
in
mov
mov
xchg
popl
movsl
andb
mov
or
mov
int3
addr16
push
ds
mov
int
push
push
sub
jmp
pop
mov
add
sar
pop
mov
jbe
sahf
pushf
and
inc
addb
mov
xchg
stc
ficompl
in
sarl
adc
inc
mov
push
adc
testl
xor
xor
push
or
add
into
inc
in
cmc
adc
xchg
nop
cltd
test
loop
cmp
js
fists
sub
add
data16
mov
lods
pop
out
lret
rcll
in
mov
iret
sti
mov
dec
ss
fsub
scas
cltd
add
pushf
mov
add
les
cli
fcomip
scas
insl
fcoms
cmp
jno
mov
dec
sub
push
adc
sub
cs
aad
push
push
nop
jecxz
push
mov
pusha
push
dec
lahf
divl
jne
repz
andl
mov
orl
mov
xchg
daa
cmpl
cmpsb
mov
pop
addr16
pop
push
mov
sub
jb
dec
add
add
dec
shl
lods
jge
push
jno
std
inc
leave
aaa
cwtl
inc
test
mov
push
mov
lret
jnp
mov
out
add
das
mov
lahf
sub
sbb
out
out
negl
pop
aaa
mov
dec
dec
jo
push
fildll
popa
lcall
mov
shll
aad
mov
pop
jle
lcall
cmpsb
pop
test
aas
jno
loope
sbb
inc
add
in
aaa
xchg
out
pop
ljmp
jmp
enter
shll
movsl
xchg
daa
dec
jg
jp
sbb
jb
add
jp,pn
or
mov
roll
xchg
lds
dec
mov
xchg
mov
popf
xor
inc
inc
aaa
or
cmp
fwait
and
les
outsb
mov
push
add
mov
ljmp
jb
cmp
jns
and
in
jl
xchg
movsb
cltd
xor
push
sub
pop
aad
jo
xchg
loop
dec
bound
ds
aaa
sub
dec
mov
sbb
cmp
mov
inc
bound
push
jmp
mov
scas
and
pop
xor
sub
sub
es
mov
add
xorb
inc
pop
mov
adc
pop
jle
add
mov
pop
inc
fbld
nop
xchg
jmp
inc
pop
aad
fldl
cmp
xor
mov
lret
ret
adc
cltd
push
push
je
stos
or
push
xchg
lea
les
lods
xor
scas
push
fwait
add
lds
push
jecxz
iret
imul
mov
fidivrl
lahf
arpl
pop
mov
add
insl
push
jge
popa
fucompp
fwait
testl
mov
stos
pop
push
shlb
ss
lds
insl
xchg
mov
insl
push
xchg
cmp
push
push
cwtl
mov
jb
les
cmp
mov
daa
mov
cmp
movsb
aam
xor
jae
dec
lcall
xor
fildll
jge
pusha
test
int3
nop
movb
dec
cmpsb
and
clc
in
adc
push
enter
daa
push
adc
enter
movsl
cmp
jge
mov
sbb
js
push
lret
pop
mov
inc
mov
leave
push
shlb
add
scas
lahf
xor
cvttps2pi
inc
xchg
jl
cmc
shrb
andl
push
mov
push
or
xor
popf
and
cmp
adc
addr16
mov
mov
pop
sbb
int
test
fld
push
push
flds
push
sub
call
lcall
mov
xchg
test
sbb
mov
test
sbb
jg
mov
mov
jo
stc
xchg
fsubrs
fs
movswl
int3
cmp
mov
bound
div
xor
rdtsc
cmp
call
or
mov
cmc
fldt
jl
aad
xchg
loop
dec
fsubrl
mov
adc
push
cs
mov
lods
out
or
mov
mov
cli
hlt
sbb
mov
notl
sti
addr16
mov
gs
out
loopne
xchg
pop
cmc
sub
adc
push
or
lock
mov
repz
aad
push
repnz
pop
xor
xlat
negb
sub
cs
xchg
push
jmp
mov
xor
jl
insl
nop
mov
xchg
cs
sbb
cmp
je
andl
mov
jns
call
cmp
stos
pop
inc
rcr
adcl
fs
movsl
int3
loop
mov
inc
jecxz
outsb
inc
inc
ja
aas
inc
pop
adc
mov
fadd
sarl
jbe
notb
imul
mov
sbb
mov
and
push
jle
cld
lds
ljmp
mov
and
loope
jne
insl
adc
dec
icebp
fcom
mov
movsb
ret
xchg
es
stos
insl
or
cmovs
nop
cmpsl
push
cmpsb
xchg
mov
mov
xor
dec
ret
loopne
and
xchg
and
pop
popf
cmp
cltd
pop
ret
sub
popf
mov
jo
push
movsb
cwtl
sbb
sahf
sub
and
call
shll
fstps
sub
addb
xchg
outsb
fsubl
push
adc
rorl
inc
or
xchg
xor
enter
nop
cli
xchg
mov
and
jl
jnp
push
sbb
fcompl
or
ret
push
pop
pop
push
adc
add
sub
mov
into
jns
xor
ss
repz
ret
mov
mov
ja
sub
dec
push
pop
sbb
mov
cmpsb
movsb
sub
or
jne
mov
dec
out
inc
jge
bound
dec
mov
push
add
add
loope
out
or
int
addr16
mov
push
loope
and
mov
data16
mov
in
push
xchg
pusha
sbb
xchg
mov
inc
stc
inc
dec
inc
jbe
push
xor
fsubs
dec
fs
xchg
insb
push
stos
jnp
pop
xchg
stos
out
cmpsl
sbb
cltd
dec
imul
push
mov
and
ret
mov
hlt
gs
arpl
ss
inc
cmp
or
or
mov
ficompl
pop
int3
mov
clc
jno
fldenv
lds
xchg
popa
rclb
mov
rclb
cmp
mov
sub
jae
jbe
cmp
mov
sbb
aaa
out
fimull
jb
in
jno
loope
jl
insb
dec
mov
sub
lret
jo
fcom
scas
pop
sbb
and
mov
enter
xchg
lea
cmpsb
mov
and
enter
daa
push
fwait
cli
cmp
movsb
movsb
loope
sub
cld
push
cmp
jbe
jbe,pt
add
pop
lahf
lods
ret
push
xchg
or
sbb
or
sbb
stc
popa
outsl
add
mov
jl
inc
aas
bound
ret
push
push
pusha
jmp
fmull
cwtl
sub
jp
adc
inc
jbe
popl
mov
rorl
sbb
and
mov
push
fmul
cmpsl
int
pop
je
int3
dec
or
mov
sarl
shll
cmp
jge
negl
imul
test
dec
loope
mov
test
aas
jle
dec
cmp
xlat
xor
adc
mov
push
cmp
insl
push
popf
divl
daa
mov
cmp
push
mov
into
push
adc
cmc
mov
aam
outsl
mov
push
loop
cltd
subb
add
stc
aad
xchg
jmp
push
lods
aad
outsb
mov
sbb
daa
push
pop
mov
bound
cmp
push
movsl
insl
gs
or
adc
jecxz
les
push
repz
icebp
clc
xchg
push
mov
sbb
insl
xchg
xlat
xor
sub
adc
xchg
pushf
adc
and
adc
repz
icebp
nop
cltd
lret
js
jl
das
int3
xchg
xchg
je
decb
mov
enter
sub
mov
mov
cmp
cwtl
dec
push
fcmovnbe
push
rcrb
add
jno
inc
popa
fimull
jb
lret
xchg
mov
and
mov
push
std
xchg
out
daa
cwtl
mov
cld
mov
push
sub
or
lret
pop
clc
adc
je
mov
das
dec
jnp
mov
inc
pop
js
jl
mov
adc
test
insl
out
repz
dec
inc
sbb
push
icebp
mov
enter
sbb
dec
pop
mov
jecxz
mov
sub
xor
mov
push
ljmp
cmc
lods
mov
in
push
addr16
rcr
das
clc
pop
push
jo
gs
mov
pop
push
lds
scas
sub
out
jecxz
ds
mov
fcoms
loopne
wrmsr
jmp
add
or
pop
repnz
fnstsw
test
and
xchg
or
sbb
mov
lods
or
sbb
fwait
adcb
add
dec
out
sub
cmpsl
setb
fistpll
jns
ljmp
inc
nop
mov
xchg
xor
pop
dec
mov
std
dec
dec
ficomps
jle
push
fwait
out
mov
adc
mov
scas
aad
and
out
popa
pushf
bound
sahf
sbb
and
or
addr16
pop
jp
je
and
lock
jnp
sahf
movd
push
aad
test
fldenv
push
lods
fbld
pop
inc
lods
sub
movsb
jae
cld
add
clc
inc
xor
mov
push
aad
xor
xchg
add
imul
scas
fdivl
push
out
jg
pop
ja
iret
daa
jecxz
ret
leave
enter
mov
and
cwtl
push
inc
cmpsl
enter
cld
push
jnp
inc
fimull
adc
jns
and
lea
pop
pop
insb
loop
fidivrs
lds
xor
mov
adc
cmp
add
pop
into
cmp
jbe
sub
jge
inc
dec
sbb
xor
mov
gs
mov
jl
xor
dec
adc
int3
push
adc
jo
push
shrb
cmp
push
fimuls
inc
fldl
mov
enter
daa
push
test
cmp
gs
rorl
pop
sub
es
jp
push
cltd
xchg
add
jp
lea
data16
push
xor
mov
xor
clc
mov
enter
inc
push
outsb
js
cs
pop
test
stos
xchg
push
mov
loope
repz
and
cmpsl
in
outsb
adc
jae
rcrb
sbb
sbbb
mov
xorl
mov
int
shl
sub
lea
cmp
rol
mov
cmp
sahf
test
adc
negl
mov
inc
sub
incl
bound
ss
mov
sub
push
divl
lret
push
xor
das
pop
cmp
sub
out
into
jmp
repz
xchg
sbb
loop
push
mov
lea
and
insb
lods
mov
test
out
or
cli
pop
inc
pop
mov
int
imul
ror
inc
sarb
cmpb
pop
xor
adc
inc
fstps
cld
les
outsl
repz
cltd
sbb
test
mov
sub
mov
pushf
mov
into
pushf
mov
aad
insl
push
nop
je
jne
xlat
push
inc
inc
rcrb
add
outsb
je
into
and
pop
ret
dec
mov
cli
shr
inc
and
pop
test
sub
fildl
mov
imul
push
fs
jg
data16
fisubrl
and
pop
adc
negb
mov
cmp
cwtl
ja
jae
test
std
mov
nop
icebp
aas
cli
cld
sbb
in
add
fwait
mov
sbb
das
sub
sub
jno
aam
es
ss
insl
add
dec
cmp
rcr
enter
cmc
clc
lods
mov
mov
sub
shlb
and
iret
pop
fwait
cltd
int3
out
test
dec
addr16
popf
cwtl
push
sub
movsb
fstl
clc
xchg
lods
call
ljmp
fstps
call
out
inc
into
adc
or
ret
dec
inc
add
decb
add
mov
xchg
xor
test
jl
jp
int
mov
pop
inc
or
or
dec
negl
push
mov
add
push
incl
in
xor
xchg
jbe
fildl
in
call
pusha
mov
xlat
dec
mov
push
stos
mov
dec
cmp
sbb
sub
mov
jno
dec
jecxz
mov
hlt
cltd
out
add
call
jmp
sbb
subl
out
mov
or
cmpsl
addr16
jno
je
inc
and
push
jl
cmp
jnp
xchg
inc
jle
jmp
lret
pusha
dec
popf
cmp
xchg
fs
fiadds
inc
jae
mov
popf
inc
mov
mov
adc
and
pop
or
sbb
shll
jp
dec
scas
aas
aam
push
jae,pn
adc
fisubs
xchg
nop
ret
lahf
leave
aas
add
hlt
sti
adc
iret
inc
inc
jns
or
add
fstp
add
add
mov
addr16
fwait
nop
rcr
pop
aad
lds
jbe
mov
mov
xor
test
lds
jbe
mov
sbb
in
aaa
fs
or
fidivl
movb
mov
xor
cmpb
push
hlt
jl,pn
lahf
adc
jo
pop
push
scas
sbb
xor
mov
adc
filds
mov
cmpsb
test
aas
mov
cmp
scas
cmp
mov
ljmp
cmp
add
andl
dec
lahf
lahf
ljmp
sbb
aaa
add
mov
je
mov
pop
push
push
js
rcrl
std
push
push
call
sbb
fcompl
mov
outsb
js
push
adc
clc
cmp
xorb
mov
adc
and
pop
lock
loop
int
insl
or
ret
pop
mov
je
rcll
mov
ficomps
pop
xor
ss
xor
idivl
aaa
test
mov
push
fs
js
adc
test
jecxz
ja
xor
lret
add
cmp
ficoml
or
data16
xor
cld
pop
cli
outsl
jb
push
loop
enter
xor
adc
sbb
add
dec
sti
lods
mov
pop
push
out
jp
cli
loop
mov
cmp
fs
adc
mov
lcall
rcr
fsts
pop
mov
xchg
pushf
pushf
push
aam
sahf
cmp
addb
lcall
add
push
jmp
mov
icebp
mov
call
ss
inc
push
or
dec
jnp
call
jecxz
or
call
test
dec
pop
pop
mov
stos
dec
outsb
pop
mov
pop
jno
and
push
push
inc
xchg
fadd
aas
push
cmpsl
xchg
sbb
lret
rorl
addr16
pop
es
hlt
call
mov
add
push
cld
inc
ja
lret
aaa
mov
stos
and
repnz
add
mov
xor
sbb
adc
jg
xor
iret
es
insl
mov
mov
sbb
mulb
les
dec
jmp
out
mov
cli
inc
jp
mov
out
outsb
test
jl
jle
aas
push
in
sbb
fnstsw
stos
clc
rcrl
inc
ljmp
lret
pop
je
lods
stos
lea
jg
inc
jmp
push
out
jg
out
mov
add
push
or
lahf
xor
js
mov
jecxz
add
xor
xchg
dec
push
sbb
addr16
mov
dec
enter
push
push
cli
adc
add
add
in
or
jns
aas
inc
in
pop
and
dec
xchg
mov
rorl
xchg
sbb
cs
test
icebp
inc
pushf
mov
test
dec
add
mov
dec
dec
out
loope
jae
les
xchg
in
incl
sub
sub
pop
xchg
scas
addr16
in
cmpsl
mov
and
andb
aam
jnp
dec
jle
jb
in
dec
das
neg
loope
xchg
aaa
xchg
addr16
mov
mov
insl
jae
aam
push
jle
fistps
add
lods
push
push
insl
lret
adc
inc
sbb
adc
mov
lret
mov
stos
xchg
ficoms
leave
mov
call
arpl
sub
inc
inc
mov
or
add
rcr
mov
push
add
inc
rcrl
add
faddp
sbb
lds
dec
sub
repnz
sub
push
aam
xor
pop
jne
mov
mov
nop
sub
and
or
jae
ret
jl
testl
xor
mov
in
and
aaa
xor
push
clc
jnp
inc
sti
sub
cmpsb
sub
push
in
mov
pop
enter
daa
push
dec
xchg
cmp
ljmp
cmc
pusha
cmp
ljmp
je
inc
and
push
rcll
jp
sbb
push
inc
xor
push
dec
ljmp
outsl
pop
outsl
pop
add
call
push
gs
dec
dec
push
sub
xchg
adc
sarl
sbb
int3
orl
je
and
pop
pop
int
out
pop
sub
push
insl
lcall
movsb
mov
cmp
sbb
jge
sahf
lret
mov
test
or
jg
pop
inc
mov
loop
stc
insl
cmp
fs
adc
ret
ja
out
push
jge
incb
fcomps
je
lret
cld
xor
pop
mov
sub
sbb
scas
imull
xor
lds
cmpsl
jge
or
mov
dec
add
push
sti
lods
mov
ret
test
out
jo
cli
shlb
mov
mov
xor
incb
aaa
shl
mov
or
xchg
push
adc
arpl
les
jmp
mov
mov
xchg
push
fdivl
repnz
mov
adc
loope
adc
pop
jmp
or
cs
or
nop
sub
decb
and
inc
push
stos
cmpsb
je
push
jecxz
xchg
fcmovnb
lds
or
cmp
push
cmp
std
xorl
loopne
popa
test
pop
adc
pop
inc
lcall
inc
mov
pop
aas
mov
xchg
dec
mov
mov
aas
inc
negb
aam
cwtl
in
subl
inc
mov
lods
xchg
cld
jno
out
lret
cmpsb
cmc
push
mov
rclb
lock
or
jmp
mov
sub
addl
ret
ret
es
aaa
mov
int3
jecxz
xor
cmpsl
push
ljmp
or
or
fidivrs
clc
int
mov
sbb
xor
test
mov
fistpl
push
mov
xchg
movsb
cli
mov
xchg
and
xor
lret
rcll
fwait
dec
stos
jl
lcall
or
and
dec
sbb
add
xor
push
mov
out
pop
dec
mov
sub
sbb
mov
or
and
fwait
or
xchg
popf
add
cltd
pop
mov
test
out
fsubrs
jns
loopne
in
sub
xchg
das
add
nop
mov
fcompl
jl
ja
jno
dec
and
imul
jmp
insl
mov
mov
mov
push
adc
jmp
mov
rolb
scas
test
or
movsl
dec
addr16
movsl
jp
gs
and
push
mov
jnp
lret
and
out
nop
in
jp
pusha
test
mov
add
xchg
or
lret
mov
int3
jae
es
push
inc
stc
add
cmp
pop
stos
inc
or
push
mov
push
pop
jae
scas
add
test
cwtl
ljmp
icebp
pop
clc
leave
sub
push
lret
arpl
push
ret
jns
or
stc
jmp
inc
clc
mov
sbb
fstpt
pop
stc
cmp
lds
cmp
mov
stc
cmp
repnz
movsb
add
lods
jbe
test
jge
sbbb
add
aaa
loop
rorb
push
mov
cltd
cmp
jl
sbb
push
mov
add
sti
sub
das
stos
and
test
ret
enter
fists
scas
push
in
xchg
in
jno
xor
out
daa
push
out
cmp
sub
lcall
add
mov
and
xor
fbstp
sbb
mov
arpl
adc
sbb
xchg
js
rcr
pop
inc
int3
and
push
mov
and
je
sub
enter
inc
shrb
jl
iret
adcb
xorb
add
call
push
dec
sub
stc
push
lcall
jge
sub
repz
lods
sbb
es
jg
cli
mov
addl
rcll
dec
lcall
push
pushf
fcomps
shl
mov
xor
lcall
cmp
mov
or
xlat
mov
xor
repz
loop
or
adc
mov
data16
popf
lods
jno
jno
popl
std
cli
repz
fwait
mov
push
or
imul
leave
lahf
gs
push
pop
loopne
xchg
sub
cmp
hlt
daa
ljmp
or
xchg
and
sbb
pop
lret
lock
xor
ret
adc
sbb
iret
dec
fisubrl
mov
cmp
nop
add
or
inc
jnp
and
push
sbb
aas
jecxz
addr16
enter
mov
ret
call
mov
int3
pop
ret
orl
and
es
mov
inc
inc
xchg
int3
inc
int
fdivrs
pop
in
push
ss
lcall
add
lret
mul
mov
mov
mov
cltd
push
mov
mov
adc
pushf
mov
lret
adc
sub
lods
lock
sub
enter
and
jg
aam
mov
ret
push
je
es
cld
insl
mov
into
cmpsl
dec
inc
ja
pusha
dec
and
jne
lods
leave
pushf
out
pop
cli
fs
incl
or
cmp
adc
popa
jle
jno
insb
test
jp
sbb
adc
jae
cli
lret
ljmp
sarb
shl
sahf
les
insl
stos
imul
outsl
movsb
out
rcll
popa
shrd
or
fbstp
out
mov
jmp
cld
add
negl
xchg
inc
iret
fs
fwait
cmp
lds
inc
add
pop
add
xor
and
jns
and
inc
xchg
jle
jno
rcrl
mov
aaa
inc
xchg
ja
dec
orb
sub
mov
sarl
dec
add
sub
movups
lahf
ficompl
jmp
jnp
loope
adc
and
xor
or
mov
mov
insb
les
inc
jnp
or
xchg
in
or
pusha
pop
xchg
movsl
fistps
insl
loopne
fstpl
jns
addb
lock
ds
mov
jno
jbe
push
roll
adc
pop
adc
cltd
pop
scas
push
movsl
cmp
iret
mov
cwtl
lahf
leave
movsb
xchg
arpl
leave
pop
inc
dec
cmpsl
test
push
sbb
stos
inc
ja
xchg
ficompl
stos
insl
add
mov
sbbl
xor
or
jb
fisubrl
mov
cmp
pop
shll
and
add
mov
sbb
insb
mov
mov
push
xlat
jno
sub
pop
dec
int
int
popf
push
cmpsb
xor
push
mov
scas
mov
inc
and
add
test
mov
inc
sbb
pusha
cmpsb
xor
inc
in
jle
or
sub
icebp
daa
dec
add
cmp
insl
sub
das
pop
xlat
sub
adc
ss
ds
addr16
mov
inc
pop
mov
sbb
mov
xor
dec
aam
sub
or
in
pop
pop
cmp
fcoms
outsb
jae
lahf
rorl
arpl
int3
adc
mov
fcmovnb
inc
subb
jl
aaa
lock
pop
mov
int
sahf
dec
sub
fs
pop
aaa
daa
or
sbb
rorl
lods
sahf
adc
lahf
addb
jg
loop
mov
push
ret
les
adc
xchg
sbb
adc
push
jo
fmul
icebp
xorb
aas
lcall
nop
test
cmc
test
mov
or
inc
loop
adc
push
adc
mov
arpl
add
lods
pop
xchg
sti
mov
call
mov
jns
sub
xorl
and
in
aad
pop
scas
loope
adc
and
fnstcw
repz
xchg
repz
loopne
xchg
in
xchg
sbb
xchg
dec
xlat
jo
jg
je
xlat
adc
pop
and
push
jp
sbb
aad
pop
xor
push
std
in
mov
push
dec
loopne
lods
je
push
pop
jecxz
jnp
lret
or
lea
mov
loope
jne
jno
mov
cs
fstpt
sti
or
inc
call
adc
jb
pop
cs
rcrl
push
std
aad
pushf
cwtl
arpl
mov
fdivr
mov
push
cwtl
icebp
pop
jae
cld
adc
adc
mov
mov
lock
loope
cmpsl
out
mov
pop
and
aam
pop
mov
es
xor
es
sub
mov
cmp
xchg
mov
pop
and
xor
or
push
je
rcrb
out
cltd
test
rolb
sub
push
ss
lods
sub
adc
xchg
mov
mov
sarl
inc
stos
pop
jne
lret
stos
pop
pop
xchg
out
rcl
inc
xchg
sbb
push
ja
out
or
insb
add
cmpsb
xor
sbb
mov
in
lea
push
cmp
jo
or
jbe
insb
sbb
push
aas
or
dec
push
fwait
imul
push
jecxz
movsl
add
iret
bound
idivl
jle
xor
or
cmp
push
jo
mov
repnz
dec
ja
lods
das
dec
pop
ljmp
jb
cwtl
mov
fmull
nop
mov
imul
xlat
out
jle
push
bound
mov
xor
mov
inc
stc
faddl
mov
mov
or
iret
jp
loopne
and
jl
das
lret
jnp
adc
ffreep
dec
in
add
pusha
mov
xchg
xor
mov
int3
pop
push
push
mov
jae
xchg
insb
push
or
popf
fcoml
es
adc
ss
mov
adc
pushl
orl
dec
sub
adc
push
iret
add
ret
cs
sbb
xor
jg
inc
dec
dec
jg
roll
aaa
push
not
cmp
into
ja
add
int3
and
sub
push
icebp
insb
fisubrs
les
shl
xchg
mov
mov
iret
cmp
in
inc
push
roll
jge
jae
sbb
imul
imul
jno
inc
mov
pop
aam
dec
cmp
or
andb
jo
dec
sbb
cmpb
push
pop
pop
push
inc
test
or
mov
xchg
in
sub
es
shll
dec
movsl
cmp
push
sub
popa
test
in
int3
ds
xor
shll
sbbl
xor
sbb
add
or
xor
out
xchg
sub
cmp
and
push
jecxz
push
push
lcall
test
adc
fs
cmp
cmpb
mov
xchg
popa
and
ss
out
sti
xchg
mov
ret
push
sub
mov
sbb
mov
loope
push
mov
sahf
mov
sbb
pop
nop
fwait
jg
into
pop
mov
pop
dec
stc
xchg
ljmp
adc
xor
mov
xorl
lret
outsb
xor
xlat
orl
sub
pop
jae
cmc
dec
aaa
in
xor
lods
outsl
out
xchg
loop
xchg
mov
into
je
lods
dec
lret
dec
mov
lods
aas
sbb
mov
push
cli
pop
outsl
fldenv
in
jle
xor
int
lock
lcall
cs
pop
into
lea
fnstenv
loope
xchg
add
xchg
test
fstps
iret
gs
scas
lret
cmp
adc
int3
pushf
adc
and
jge,pn
inc
aad
pshufw
icebp
jmp
mov
xchg
je
lret
push
jecxz
shrl
lea
mov
mov
sbb
and
dec
sbb
fucomi
cltd
push
pop
std
cwtl
jmp
inc
add
dec
aas
lcall
mov
pop
movsl
shrl
fwait
imulb
in
jl
pop
cwtl
push
mov
test
icebp
xor
or
repz
or
push
lock
das
xchg
mov
push
addr16
aam
js
ret
outsl
icebp
data16
test
pop
test
jg
dec
xchg
push
rcr
lods
lahf
aaa
ret
sbb
sub
or
dec
sbbl
loope
shr
mov
or
mov
xor
iret
fstpl
sbb
clc
mov
xor
ljmp
outsb
pop
and
adc
xor
int3
cs
push
pop
punpckhdq
add
jb
or
pop
xor
cmpsb
xchg
mov
out
inc
jb
mov
call
mov
xor
lret
push
or
fwait
rcrb
xchg
jl
push
aas
add
ljmp
xor
das
inc
jns
lcall
sbb
mov
pop
clc
lahf
mov
lods
mov
ja
nop
fisttpl
mov
arpl
data16
lret
jne
and
out
pop
sbbb
adc
shr
sbb
xorl
loop
aaa
rorb
add
lods
mov
jb
cmp
insb
lcall
jle
pop
out
scas
pop
add
inc
cmp
pop
lds
xorl
lea
push
jae
mov
push
mov
iret
popf
add
in
call
mov
or
sbb
mov
push
scas
cs
je
xchg
adc
adc
popa
insl
inc
ret
ror
xchg
imul
arpl
pop
jne
cmp
lret
inc
jne
std
fiaddl
punpckhwd
pop
xchg
fimuls
insb
enter
mov
repnz
daa
xor
dec
lds
cmp
jge
ret
jl
das
aaa
pop
outsb
mov
jno
jnp
jl
jo
dec
stos
bnd
arpl
mov
or
push
scas
jne
test
adc
cmpsl
out
and
das
inc
aaa
fwait
inc
cmpsb
cmp
in
dec
mov
inc
daa
dec
lret
pusha
stos
repz
loope
sub
adcb
imul
movsl
nop
addr16
and
jbe
test
in
push
pop
xchg
xchg
jnp
mov
sti
scas
pop
xor
cmpl
pop
test
pop
fbstp
push
fbld
push
roll
inc
and
outsb
addr16
ret
adc
aas
or
or
fmull
and
stos
push
push
icebp
outsb
lods
int
fsubl
sub
filds
lcall
dec
mov
xor
sbb
dec
xchg
test
lret
ja
test
mov
jne
jp
xor
dec
fisubs
adc
ss
cmpsl
sub
fmuls
repz
jae
fs
sahf
data16
test
or
cmp
cmc
adc
outsl
int
inc
loop
dec
add
iret
lock
repnz
fisubl
cvttps2pi
sbbb
cli
mov
in
dec
aam
sti
fisttps
adc
gs
or
and
aas
adc
psubusw
std
sbb
cmc
sbb
xchg
imul
sbb
or
jmp
sub
imul
rol
jmp
mov
loopne,pn
sub
mov
sub
adc
sub
dec
into
sub
je
xchg
fsub
mov
jle
shll
popf
call
xor
fs
sub
add
jle
pop
mov
bound
push
rcrb
das
jp
mov
out
mov
mov
and
stos
cli
sar
jg
cwtl
flds
dec
mov
lcall
sbb
jmp
mov
pop
push
lock
xchg
pushf
mov
add
jmp
ret
adc
inc
insl
inc
adc
dec
pop
out
fwait
cmpsl
dec
outsb
sarl
imul
dec
mov
cld
mov
and
imul
mov
addb
mov
xchg
fldl
in
clc
clc
loop
xchg
push
lods
test
xchg
subb
add
lret
movsl
repnz
cmp
xchg
cmpsb
jle
push
sub
call
cmp
xor
adcl
mov
bnd
dec
and
cmp
sbb
mov
inc
xchg
mov
or
shll
xchg
iret
push
sub
jg
add
xlat
sub
jns
lret
in
fwait
jb
imul
pushf
hlt
lret
loop
pop
push
clc
jne
in
or
push
mov
push
add
dec
lods
or
idivl
lret
out
cmp
nop
bound
in
mov
inc
aas
out
mov
lret
or
mov
outsl
jp
sub
and
inc
insb
add
push
jle
insb
xchg
in
push
xor
cmp
fistpll
xchg
push
repnz
pop
les
mov
adc
sbbb
fisubs
push
mov
adcl
adc
mov
push
fcomps
adc
addr16
shlb
cmp
ror
hlt
mov
mov
inc
push
jmp
aam
in
jno
hlt
add
fidivl
incb
lcall
pop
mov
cmpsb
fdivp
into
jnp
pop
repz
shrb
test
or
cmp
orb
sub
xor
jbe
push
dec
jge
hlt
jne
aaa
daa
mov
fdivp
dec
or
jge
jno
xlat
xor
mov
nop
dec
sbb
clc
push
inc
adc
xor
addr16
dec
and
arpl
inc
popa
hlt
cmpsb
mov
stc
cmpsl
enter
daa
dec
jae
cmp
fadd
sub
js
cmp
movsb
mov
movsl
xchg
std
pop
and
in
aad
sub
mov
xor
sti
sbb
sub
xchg
ret
ds
jno
rorb
adc
mov
xchg
outsb
lret
adc
sbb
clc
es
and
stos
mov
push
mov
mov
cs
shl
sub
jo
sarl
rcr
jo
aad
lods
sbb
test
out
test
ja
xchg
clc
out
jg
mov
mov
add
das
sub
xchg
and
cmp
inc
mov
imull
cmpsl
xchg
xor
add
cmp
dec
xchg
push
mov
into
push
fistpll
xor
fildll
lods
dec
xor
in
xor
repnz
pop
mov
data16
les
lods
or
movb
insl
andb
mov
or
ss
sbb
or
mov
lods
mov
repz
dec
sbb
inc
push
pop
xlat
sub
pop
inc
adc
mov
imul
cs
enter
movsl
rclb
jo
fwait
inc
pushf
mov
inc
bound
jecxz
dec
movsb
aam
lret
dec
xchg
call
mov
mov
mov
mov
fisttpl
pop
inc
mov
inc
mov
ret
xchg
aas
fsubs
push
mov
jb
rcl
push
jne
imul
dec
jmp
cwtl
xchg
repnz
mov
dec
in
icebp
loopne
std
cld
dec
sub
mov
sub
mov
dec
inc
lock
dec
das
inc
repnz
cld
fisubrs
ret
lea
es
dec
insl
daa
pop
mov
cmpsl
dec
flds
mov
add
lods
jne
aam
sbb
cwtl
mov
sbb
mov
mov
aaa
rclb
rolb
sbb
push
jg
daa
frstor
xabort
inc
mov
ljmp
dec
pop
jbe
sbb
sti
sbb
xchg
in
xchg
push
push
or
pop
movaps
add
mov
fdivl
mov
mov
cmc
adc
dec
mov
test
pop
cs
jne
sbb
ret
cld
or
mov
imul
and
test
lcall
or
jns
lahf
inc
in
or
xchg
mov
fs
mov
and
insl
ja
in
dec
loopne
cld
mov
test
mov
lea
dec
nop
mov
jne
ret
dec
or
bound
sahf
imul
cmpsl
adc
adcl
out
sub
or
mov
stos
rol
jp
pop
repnz
popa
insb
jo
jnp
mov
test
mov
inc
das
fistps
mov
adc
scas
xor
jae
mov
adc
bound
push
int
mov
xchg
xchg
mov
pusha
cltd
imul
movsb
scas
hlt
or
adc
in
iret
pop
data16
ret
and
sbb
hlt
or
andl
out
or
pusha
sbb
inc
jae
xchg
sbb
xor
pop
in
xchg
xchg
into
adc
in
mov
inc
insb
sbb
stos
push
ret
jle
movsb
mov
repnz
scas
movsb
xchg
jbe
jecxz
jge
or
aaa
popf
add
jno
pop
gs
and
dec
mov
mov
sub
ret
scas
xor
shlb
cmp
add
mov
insb
adc
sbb
cwtl
enter
daa
dec
mov
mov
mov
and
stos
inc
dec
cmp
jle
ds
movsb
movsl
sahf
imull
and
in
lahf
ret
jecxz
push
aam
sbb
roll
adc
xchg
xor
stos
loopne
scas
pop
jnp
mov
pop
jge
or
repnz
fmull
subl
sub
lds
cmc
in
push
cmpsb
xchg
xor
cmp
mov
or
push
divl
jb
pop
stos
jle
xor
rol
jbe
rorl
push
popf
aam
test
jae
subb
call
stc
mov
pop
fs
add
orl
mov
insb
lret
sbb
pop
mov
sti
cmp
mov
into
add
call
outsl
mov
inc
imul
xchg
sub
lods
hlt
adc
jbe
xor
cli
repnz
push
mov
and
out
adc
pop
jmp
add
pop
sub
or
push
mov
mov
into
repz
addr16
add
lret
and
sub
jb
cmp
pushf
push
push
out
jmp
sbb
mov
inc
xchg
nop
dec
out
dec
iret
out
inc
fiaddl
dec
mov
and
xlat
xor
mov
xchg
mov
mov
dec
fistpl
nop
pop
out
ret
mov
out
ja
arpl
movsb
sarl
std
pop
das
rcll
in
divb
adc
cmp
jl
and
mov
lcall
pushf
orl
outsl
inc
sub
and
mov
repz
aam
int3
rol
sub
insl
push
mov
cmpsl
dec
enter
ljmp
loopne
or
inc
scas
jge
and
cmpsb
mov
roll
shlb
dec
cltd
test
aaa
test
hlt
iret
push
inc
into
mov
clc
outsb
aas
or
jl
push
rcrl
mov
jecxz
pop
sbb
xchg
xor
sti
push
jecxz
mov
xchg
push
add
test
and
cmp
xchg
sub
dec
repz
je
jb
add
dec
ficomps
or
mov
fwait
daa
or
push
outsl
mov
add
pop
fwait
ds
jnp
lret
jns
sbb
jg
out
xchg
or
mov
dec
push
mov
push
dec
roll
ja
or
adc
mov
jle
dec
jae
out
jne
sub
mov
out
imul
cli
fwait
mov
jmp
jb
lds
rorb
sub
hlt
inc
xchg
mov
and
insb
fisttpl
mov
jle
loop
in
mov
dec
fistpll
addl
xor
scas
inc
mov
movsb
sbb
rcrl
xor
or
les
adc
sbb
jle
imul
test
push
pop
and
sbb
mov
jle
jo
arpl
das
leave
testl
flds
pop
hlt
or
inc
repnz
dec
ficompl
sahf
push
int3
shlb
rcr
aaa
ret
insb
mov
shlb
mov
dec
mov
popa
and
movsb
inc
push
sbb
jbe
in
jge
push
or
aaa
pop
xchg
testb
dec
in
mov
cmp
push
push
or
xor
sbb
inc
sub
into
xchg
scas
test
test
inc
in
mov
add
enter
daa
dec
push
jns
stc
lret
mov
fistps
aam
fsubl
in
xor
lahf
loop
cli
push
roll
and
inc
xor
cmp
pop
mov
mov
pop
mov
or
push
je
fdiv
cmpsb
and
push
cwtl
outsb
nop
push
jmp
fdivs
rcl
jb
mov
jp
or
mov
loopne
push
pop
mov
jle
adc
cli
jg
int
imul
pop
mov
cmpsb
lcall
lods
mov
in
sahf
inc
test
test
es
lock
movsb
and
outsb
push
out
fs
lods
or
les
int
mov
jge
lret
push
xor
jmp
or
pusha
into
in
xchg
cmc
push
test
sbb
adc
inc
adc
mov
add
xor
add
mov
jno
sub
push
mov
nop
lar
in
mov
movl
adc
or
rol
mov
jae
xchg
mov
nop
sbb
mov
cmp
sub
or
pushf
rcr
jmp
stc
loopne
or
mov
mov
cmpsb
nop
daa
stc
loope
cs
inc
in
sbb
dec
xor
je
in
jecxz
fldt
ficompl
lea
aam
call
mov
sbb
hlt
enter
mov
fldt
xchg
roll
mov
add
popf
jb
mov
and
popf
push
shll
xlat
std
sbb
cwtl
or
cmp
mov
mov
scas
adc
mov
dec
dec
lock
das
add
adc
ljmp
ret
stos
sbb
orl
dec
adc
cmpsl
dec
cmp
mov
scas
aas
rep
dec
pop
popf
mov
gs
cmp
jmp
cltd
mov
sub
push
add
data16
clc
test
sub
shl
cmpsb
rcrb
push
stos
add
or
xchg
jnp
iret
push
mov
insb
std
add
iret
sbb
xor
cwtl
xor
adc
sti
mov
dec
pop
mov
sub
add
xor
sub
fwait
push
in
mov
add
push
lret
fdivr
fldl
xor
xor
mov
mov
mov
jg
cltd
cvtps2pi
inc
cmp
mov
mov
loopne
mov
imul
loop
jne
hlt
sti
mov
jmp
push
bound
jmp
cmp
cmp
out
data16
sub
out
pusha
imul
and
aas
loopne
and
jns
inc
stos
pop
jle
or
in
movsl
sti
pusha
rcll
iret
lcall
les
xor
push
xchg
and
popf
lahf
xchg
xor
dec
pop
adc
add
pop
jo
imul
mov
push
lods
xchg
adc
outsb
inc
ret
adc
outsb
fistpll
cmpsb
xor
or
inc
pop
aas
dec
or
push
imul
fimull
fldl
pop
cmp
push
pop
inc
and
test
sarb
in
and
push
int
cmp
insw
movsb
int
gs
dec
or
dec
jge
in
sbb
pop
aaa
sbb
sbb
fdivrs
imul
fs
jo
jp
scas
icebp
stos
inc
and
pop
test
push
adc
jae
dec
cmpsb
inc
push
pop
in
call
cwtl
push
dec
xchg
cmp
mul
mov
push
and
push
shrb
movsl
lods
pop
sbb
mov
lahf
add
push
push
movsb
call
loop
daa
and
fidivrs
pop
inc
pop
leave
push
loopne
inc
mov
push
aad
push
sbb
dec
ret
inc
stc
outsb
repz
adc
stos
adc
adc
adc
mov
and
ret
lea
scas
sub
or
lcall
movsb
mov
daa
sahf
jecxz
inc
test
lods
jno
jecxz
or
movsb
xchg
mov
test
stc
and
insl
cwtl
adc
cmp
cmp
jbe
add
ljmp
xor
fnstcw
xor
mov
cmpsb
pop
cmc
das
aas
mov
outsl
dec
jbe
loop
sub
imul
in
add
popf
jae
ret
mov
out
mov
cli
pop
xor
in
sti
jne
sti
fwait
mov
std
gs
pop
xchg
loopne
adc
cmp
mov
sub
leave
xor
xor
jnp
ja
cltd
sbb
testb
sub
insb
jb
adc
in
pushf
insb
cmp
jmp
cltd
xchg
cs
stos
ja
shlb
nop
add
add
inc
add
cltd
je
std
or
lock
adc
xchg
scas
call
xor
pop
cmpsl
je
subl
adc
pop
sub
roll
cmp
inc
dec
aas
mov
xchg
jb
lahf
xchg
mov
adc
jmp
repz
dec
divb
imul
mov
popf
adc
gs
cld
leave
scas
icebp
lret
push
dec
cs
addr16
pop
dec
lock
and
mov
loope
sahf
aam
mov
es
cld
shrl
xchg
cmpsb
dec
or
adc
lds
popa
lds
mov
mov
and
aad
dec
pop
adc
inc
rorb
or
test
je
enter
fdivl
clc
in
dec
xchg
sbb
pop
rorl
jb
ja
sub
and
push
xchg
ret
push
cltd
jmp
cmovne
pop
add
popa
scas
xor
inc
mov
scas
push
dec
rcll
push
dec
cli
xchg
int3
sbb
mov
or
sub
push
mov
jae
mov
dec
cmp
jl
in
jo
push
jns
test
xchg
dec
xor
test
mov
mov
imul
lds
mov
les
push
rorl
push
mov
out
mov
pusha
cmpsb
jmp
or
cmp
jmp
sub
ljmp
jp
das
and
fmuls
jnp
dec
arpl
sub
in
bnd
pusha
pop
xchg
mov
jns
inc
iret
push
cltd
inc
cmpsl
push
pop
pop
int3
popf
pop
sub
mov
stos
fucomip
sbb
sbb
xor
lret
fsubrl
adc
cmp
cmp
adc
mov
sti
leave
in
ret
hlt
jmp
push
mov
or
shr
test
fiaddl
push
outsb
add
lcall
cmpsb
mov
pop
jno
jae
jge
icebp
lds
or
xchg
mov
test
pop
cmp
dec
rep
pop
jge
push
fwait
daa
mov
flds
jge
cmpsl
lcall
and
xchg
call
sti
jl
jmp
loop
shlb
xor
rorl
and
cmp
test
sbb
aas
inc
add
cmpsb
pop
in
iret
inc
mov
daa
dec
aas
sub
pop
loope
sbb
sub
xchg
dec
cmp
sahf
pop
sbb
or
and
int
and
and
rclb
xor
add
xor
lock
pop
lock
cltd
js
repz
push
push
dec
push
je
stc
fmull
sub
mov
add
rolb
cmp
subb
arpl
pushf
mov
and
test
hlt
cmp
pop
mov
cmp
cmp
push
mov
fstpl
jl
repz
sbb
mov
ret
aas
stc
enter
sbb
iret
cmp
dec
aas
out
cmp
xor
cmpsl
lret
xor
daa
add
cmp
sub
into
stos
es
cmc
negb
sub
loop
in
imul
sbb
inc
cmp
data16
loope
test
inc
dec
out
dec
push
cli
mov
adc
ss
popf
in
data16
sti
dec
mov
adc
push
adc
sub
fwait
pop
mov
scas
adc
xchg
aam
aaa
repz
xchg
cmp
sbb
xor
adc
cltd
fsubs
pushf
pop
push
mov
aad
subl
aam
in
dec
inc
adc
dec
and
xchg
jecxz
ja
loopne
xchg
out
in
out
mov
mov
scas
xchg
rcrl
aam
add
pushf
xchg
fisttpl
outsl
pop
iret
dec
repz
mov
xchg
les
push
mov
ss
sahf
sbb
roll
test
cli
and
std
data16
stos
cwtl
addb
mov
and
cld
hlt
fcomp
lret
lea
mov
fs
enter
sbbb
rorb
sub
jle
aam
adc
insb
mov
insl
ret
outsb
rorl
dec
cmpsl
inc
lods
mov
clc
push
frstor
dec
cmp
and
popf
mov
stos
dec
popf
and
jo
sub
xor
jg
loopne
xor
mov
xor
xchg
push
inc
push
mov
pop
fldl
gs
pop
mov
xor
aad
inc
rcrl
aad
stos
jecxz
xor
xchg
pop
xchg
or
repnz
je
sub
add
mov
or
xchg
shll
rcl
mov
and
dec
sub
xchg
test
jge
xchg
mov
addr16
jo
imul
aam
mov
sbb
pop
ljmp
mov
insb
lcall
dec
pop
xor
xor
das
in
or
xchg
mulb
jb
xor
sti
pop
cmovns
ja
mov
lds
lahf
mov
mov
out
dec
sbb
gs
mov
mov
pop
stos
out
xchg
fldenv
cmc
cmpsl
cli
xchg
rol
push
orl
push
sub
in
push
cmpsl
sub
ret
insb
sbb
add
stos
popf
jle
cmp
pusha
divl
mov
xlat
xchg
clc
inc
ficompl
jae
cli
inc
push
sbb
lods
popf
in
add
mov
leave
repz
stos
push
xor
adc
iret
add
pop
scas
xorb
dec
jge
iret
fwait
xchg
leave
pop
jb
hlt
xor
imul
addr16
or
dec
or
inc
outsl
jnp
fidivl
out
int3
xchg
jbe
pop
mov
push
lds
aas
pop
shlb
fcomi
mull
cmp
adc
jbe
mov
push
sbb
cltd
or
or
inc
cmp
les
inc
lods
add
mov
iret
xor
cs
scas
scas
test
xchg
test
out
cmp
xchg
jbe,pt
dec
sbb
mov
add
add
daa
inc
jl
cmp
movl
xor
ds
stos
and
call
sub
add
ja
xor
in
sti
mov
js
icebp
xor
jns
lahf
push
mov
fdiv
push
sub
lock
outsb
mov
into
cmp
popa
xchg
mov
addb
mov
or
mov
popa
dec
and
movsl
sahf
int
stc
pop
sub
xor
pop
das
and
rcl
jae
insb
call
sahf
sub
test
jbe
sbbb
fdivrl
scas
add
xchg
mov
fs
dec
adc
sub
cmp
in
xor
lret
inc
xor
sbb
jae
sbbl
add
in
test
push
sbb
lret
sarl
icebp
dec
pop
adc
cmp
imul
mov
mov
dec
out
push
je
dec
pusha
pop
in
sarl
fsin
in
inc
faddl
out
cmpsl
mov
adc
adc
repnz
iret
ffreep
out
repz
cs
xchg
std
lock
insb
cmp
xlat
push
stc
call
pushf
ret
jmp
and
icebp
aad
hlt
inc
nop
mov
adc
inc
fldenv
cwtl
sbb
ret
lods
mov
jecxz
lea
inc
call
cs
inc
pop
or
xchg
dec
xchg
jmp
pop
jb
test
and
inc
sar
aas
repz
pushf
mov
sub
rcll
mov
les
js
jo
ret
icebp
adc
cs
cld
add
stos
mov
mov
lock
sub
iret
inc
aam
jg
ret
pop
test
es
push
stos
sub
inc
cmpsl
inc
lods
mov
repz
mov
push
test
mov
ds
mov
or
pop
dec
dec
cwtl
shlb
xchg
daa
test
add
mov
cmp
pop
call
xchg
ljmp
xchg
pop
int
cmp
ljmp
push
dec
jge
lsl
nop
or
xchg
dec
mov
add
xchg
dec
and
test
inc
mov
outsb
fwait
xchg
sbb
test
int
loop
rcrb
lock
add
cmpsl
xchg
and
mov
ret
outsl
arpl
in
push
mov
inc
mov
je
xlat
jo
pop
lret
ja
cmp
mov
clc
dec
mov
mov
dec
sub
mov
dec
imul
jbe
xchg
bound
push
int
sahf
jae
sbb
sbb
int3
and
sub
loopne
dec
cmpsb
or
fsubr
pusha
and
pop
mov
xchg
pop
jnp
shlb
in
mov
daa
fbstp
js
xchg
dec
pop
jl
push
push
add
jae
hlt
lods
push
fbstp
popf
adc
leave
mov
or
stos
lds
xchg
insb
mov
imul
push
push
adcb
es
iret
cli
cltd
inc
ret
movsb
leave
shll
mov
xchg
mov
pusha
or
mov
sbb
xor
and
cwtl
int3
jl
scas
pop
iret
jb
faddp
sbb
ror
enter
popf
repnz
std
cmp
clc
int3
push
cmp
push
jbe
jno
jge
fmul
sbb
incl
jno
clc
inc
jl
in
dec
mov
fimuls
cwtl
dec
mov
mov
subb
scas
sub
mov
rolb
popf
mov
in
popf
ret
sahf
fldenv
inc
cmp
inc
loope
xchg
and
cmp
mov
pusha
xchg
outsl
movsl
shll
lahf
pop
repz
or
sbb
pop
out
dec
imul
scas
jnp
pop
jp,pt
js
cmp
mov
outsl
sahf
push
and
fsubl
jmp
outsb
sbb
adc
mov
cmp
dec
xor
adcb
push
mov
mov
popa
lock
inc
xor
ret
sub
hlt
lods
lcall
sub
mov
int3
iret
arpl
xor
idivl
mov
xchg
stc
dec
in
fs
rclb
insl
pop
mov
cmp
cmpsl
js
mull
insb
lretw
mov
aad
adc
or
scas
push
into
jo
push
test
xor
out
dec
loop
repz
addb
push
cmp
lods
ja
dec
mov
xchg
out
or
cli
icebp
dec
mov
cmp
mov
decb
fnstsw
loopne
ret
ret
jle
adc
add
fldcw
insb
mov
ljmp
xchg
rorb
cmp
in
push
sub
push
pushf
insl
inc
dec
jmp
adc
cs
and
aad
leave
mov
dec
stos
and
inc
cmp
popa
je
ds
jecxz
and
out
ret
xchg
ds
lods
jne
pop
shrb
dec
jb
adc
sub
adc
jbe
inc
fstpt
aas
xchg
xor
sbb
cli
and
jmp
shl
adc
testb
cmp
test
mov
inc
repnz
loopne
cld
dec
test
jge
mov
mov
push
negl
rclb
jle
stos
mov
cmpsb
mov
ret
out
xor
jg
insl
xchg
rorb
cld
push
je
inc
das
out
mov
or
pop
lods
test
fnstcw
inc
xor
mov
outsb
fidivrl
xchg
jmp
mov
sub
push
adc
cmp
push
repz
xchg
les
xchg
xlat
pop
repnz
stc
pop
js
mov
dec
xchg
xchg
dec
notl
fs
bound
or
xor
rorb
hlt
popa
xchg
pop
cld
dec
mulb
test
movsb
add
int
testb
cmp
fwait
adc
pop
push
sahf
jmp
add
ret
lcall
xorl
adc
test
xchg
push
inc
mov
mov
mov
test
shll
test
mov
mov
dec
adc
mov
xchg
jne
pop
ret
mov
xchg
jb
push
roll
jecxz
jge
imul
jno
dec
dec
loopne
jmp
dec
or
test
movsl
insb
or
push
xor
lock
insb
repnz
add
and
out
int
sub
dec
xchg
sbb
pop
pop
inc
mov
inc
lock
enter
aad
mov
add
arpl
fsubs
cmp
ds
ret
cld
sbbl
aam
popf
xor
inc
inc
fs
leave
pop
insb
adc
inc
fmulp
pop
mov
ret
leave
dec
xchg
fdivp
lret
arpl
pop
adc
inc
sti
enter
jp
sbb
add
jo
pop
adc
fisubs
pop
lds
out
shr
mov
repnz
lret
hlt
in
movsb
stc
xor
mov
xor
jge
inc
fistps
push
insl
shll
pop
and
or
push
dec
jl
and
and
jno
mov
cmp
insl
outsl
sti
and
ja
push
jl
lods
inc
scas
aas
or
push
mov
in
test
enter
daa
inc
cmp
clc
mov
mov
cmp
mov
movsl
enter
hlt
ror
lahf
jge
push
push
lock
sbb
arpl
add
scas
xor
sbb
jb
xchg
pop
movsl
mov
pop
negl
pop
push
or
jns
sbb
xor
outsb
jg
ljmp
pop
and
xchg
divb
andb
mov
jmp
mov
mov
and
xchg
stos
push
or
int
js
sub
jmp
pop
sub
sbb
mov
add
sub
push
sahf
outsl
inc
inc
test
iret
orb
jg
lret
adc
int3
fs
mov
adc
inc
cmp
bound
mul
mov
lret
cmpsb
xor
push
or
jp
push
pop
repz
dec
sbb
sub
lds
jno
pop
adc
in
add
dec
push
xchg
imul
pop
or
cmp
out
xor
mov
cmpsl
push
addr16
push
cmp
gs
pop
in
add
add
pop
cs
cmc
movsl
pop
rep
stos
jnp
sbbl
cmp
cmp
xlat
out
jmp
adc
jbe
sbb
dec
jmp
rcll
fsubl
nop
outsb
jle
dec
or
jmp
xchg
push
jo
loop
sub
rol
add
ds
sub
add
sub
dec
pop
adc
das
ja
mov
cs
inc
testb
aas
xor
outsb
mov
aas
shll
test
loope
pop
xchg
sbbl
cmpsl
out
test
das
icebp
rorl
jne
mov
fcmovbe
hlt
mov
mov
popf
loopne
xchg
sub
mov
mov
push
scas
ret
jbe
jecxz
adc
cmp
push
xchg
dec
divl
outsl
mov
and
lods
bound
mov
adc
fwait
and
inc
fiadds
lea
rcrb
ret
movsl
jae
fcoms
fcoms
adc
fnstsw
call
xchg
push
testb
jl
shll
out
stos
mov
lods
out
mov
push
xchg
fisubs
out
add
inc
inc
add
add
xor
cmp
sti
xchg
sub
dec
pop
xchg
xchg
sbb
adc
or
shlb
inc
iret
ja
inc
ficoml
add
daa
clc
repz
jns
pusha
daa
in
aas
add
mov
or
inc
cmc
shlb
push
dec
test
push
mov
xchg
pop
mov
jne
jl
enter
xor
insb
bound
out
jmp
xor
mov
cmp
out
out
sub
lods
lds
push
mov
je
and
orb
scas
addr16
cmp
push
sub
mov
adcb
mov
inc
sti
xor
aad
stos
push
gs
fcompl
call
push
xchg
in
stos
stos
cmp
mov
imul
push
adc
jb
fadd
push
iret
mov
jle
leave
rcrl
adc
aaa
dec
inc
imul
push
in
pop
data16
sub
add
xchg
int3
push
stos
or
sub
jl
lds
js
mov
lock
jbe
stos
pop
add
push
xlat
cmp
in
ret
lcall
int3
data16
into
and
or
push
xchg
loopne
push
pop
sti
mov
adcl
scas
dec
ljmp
cmp
push
inc
cli
addb
pop
cmpsb
shrl
mov
imul
enter
daa
inc
dec
sarl
or
sub
cs
repz
cmp
notb
and
adc
jbe
push
xlat
add
dec
xchg
xor
scas
sbb
xor
mov
js
add
repz
push
shlb
and
clc
cli
add
test
xchg
outsb
loop
nop
adc
repnz
lock
and
mov
lock
shr
or
xchg
int
lea
jl
jbe
lods
and
pop
sahf
mov
mov
repz
adc
out
push
cld
jg
fisubrs
les
mov
sbb
adc
mov
push
loopne
cmp
sbb
jnp
lret
push
xor
inc
and
into
and
into
ss
fs
adc
jnp
imul
push
outsl
movsb
mov
sub
stos
dec
adc
mov
add
shll
push
push
iret
out
cli
push
xchg
xchg
xchg
xchg
adc
std
sti
push
dec
decb
push
gs
add
xchg
lock
pop
add
mov
fdivrs
adc
xchg
jbe
les
xchg
outsl
repz
adcl
pop
jb
sbb
pop
sub
loope
out
xor
xor
call
nop
dec
or
inc
pop
insl
cmpsl
dec
std
cmp
xor
cmp
push
in
jmp
mov
jp
addr16
stos
sub
pop
roll
dec
cmp
mull
pop
pop
sub
inc
inc
adc
jb
and
mov
lret
sarl
pusha
testb
sbb
add
cwtl
insb
push
inc
mov
xchg
cmp
icebp
cwtl
fidivl
mov
fistpll
dec
loopne
mov
cmpsb
pusha
lock
xchg
in
das
cmp
push
mov
mov
dec
aam
mov
pop
es
jo
insl
pop
ret
bnd
jno
les
int3
lods
int
inc
mov
aaa
daa
push
and
fadd
jno
lods
add
sub
dec
cltd
add
aad
mov
push
push
xchg
mov
fstpl
cmp
ljmp
xchg
pop
into
scas
sbb
out
adc
sahf
xchg
and
insl
aad
and
or
test
test
sti
out
push
cwtl
mov
or
lea
xchg
loope
sbb
and
inc
jecxz
push
or
pop
clc
fwait
jo
fcomps
in
fiadds
clc
xchg
mov
jns
push
xchg
dec
dec
jmp
xor
add
sti
stos
mov
dec
js
mov
dec
jns
mov
push
add
call
mov
adc
cmp
shrl
aaa
xchg
mov
dec
out
notl
or
inc
outsl
addr16
jp
inc
frstor
push
bnd
enter
pop
fsqrt
jle
push
icebp
in
dec
pusha
arpl
fists
mov
pop
daa
inc
push
int3
push
jae
jns
push
sub
setge
andl
stos
push
push
and
sbb
imul
scas
or
jnp
push
xchg
sbb
iret
pop
jmp
mov
cmp
hlt
pusha
and
ret
fldenv
outsb
daa
adc
mov
cmp
inc
imul
jg
lds
jmp
mov
xchg
fisubrs
in
push
movsl
repz
inc
add
cmp
mov
push
cmpsl
lret
jbe
popf
hlt
jge
rolb
aaa
xchg
stc
push
jno
outsl
inc
jl
push
ds
add
aaa
push
inc
ret
dec
xchg
and
adc
scas
sub
and
jecxz
test
adc
cmpsb
push
adc
dec
enter
daa
inc
cwtl
cmp
xchg
loope
fdivl
sub
pop
cmp
or
leave
adc
movsl
xlat
ret
and
sahf
xchg
lahf
mov
add
mov
aaa
sbb
mov
mov
pop
mov
inc
js
mov
pop
jne
mov
push
daa
data16
mov
je
outsb
inc
xchg
int
mov
sarl
mov
push
shlb
out
cmp
int
xchg
sub
cmc
aam
sub
add
cs
mov
pop
pop
sbb
or
pop
mov
dec
jg
cmc
or
mov
int
fs
pop
adc
fwait
ss
sub
cmp
fdivrs
aad
icebp
shl
pop
in
and
popa
pusha
mov
cmp
repnz
cmc
fstps
xor
and
cmp
imul
fdivrl
add
sbb
lods
sub
adc
and
mov
mov
in
jge
push
sti
mov
or
jno
int
clc
cmc
int
xor
xor
stos
mov
inc
or
add
or
mov
sbb
pop
lea
sub
cmpb
sbb
ret
repnz
cmp
mov
mov
add
inc
jb
repnz
je
leave
je
jae
jecxz
and
out
inc
jecxz
icebp
inc
adc
sub
xorl
aas
pop
incb
inc
popa
leave
je
sub
cs
outsl
xor
jb
outsl
mov
push
cwtl
sahf
ror
test
std
test
imulb
mov
cld
lret
pop
or
mov
mov
dec
lock
pop
sbb
sbb
into
mov
stos
mov
aam
jb
ret
xchg
pop
mov
sbb
mov
dec
in
scas
xor
inc
shl
mov
dec
out
lods
cmp
mov
pop
mov
mov
lret
cltd
xor
incl
cltd
cmp
mov
mov
dec
cwtl
push
pop
int3
out
ffree
jbe
clc
inc
ror
xchg
xchg
mov
ljmp
scas
pop
jns
lds
jbe
xchg
xchg
insb
icebp
int3
push
mov
sub
xchg
andb
jb
enter
dec
mov
adc
orl
xor
sbb
out
cmovno
pop
or
enter
test
xchg
sub
adc
xor
mov
dec
out
std
in
mov
xchg
andl
xlat
pop
mov
cmp
popa
cld
dec
imul
mov
ud2
mov
je
jmp
mov
mov
out
repnz
bound
add
enter
lret
sbbl
out
jp
sub
int3
jo
addr16
jp
into
push
and
pop
sub
setg
fldt
pusha
es
fbstp
ljmp
adc
and
jmp
iret
popf
mov
lock
add
mov
enter
les
or
xor
outsl
cmp
push
sahf
fcoml
xchg
cld
mov
jbe
push
ret
leave
scas
pop
adc
stos
pop
test
sarb
les
mov
incb
aad
fidivl
hlt
fiaddl
addb
pop
mov
outsb
lds
lret
andb
xchg
push
cmp
ds
movsb
lcall
jbe
cmp
jmp
sbb
stos
mov
mov
push
jl
into
mov
andl
rdtsc
jmp
cmc
sahf
es
or
jmp
data16
divl
inc
pop
mov
pop
in
cmp
enter
daa
inc
imul
sub
lcall
in
repnz
fstl
and
and
fiaddl
push
imul
mov
jns
xor
add
fidivrl
js
xchg
xor
mov
mov
push
jle
lods
fmull
sub
outsl
add
test
js
scas
aam
andb
mov
pop
cmpsb
mov
jmp
push
adc
int
fs
dec
pop
stos
bound
lcall
pop
mov
outsl
mov
sahf
pop
pop
incl
mov
adc
or
stc
es
sub
test
call
xchg
xchg
push
fwait
mull
fwait
repnz
mov
xor
insb
or
mov
xor
pop
loop
addl
adc
push
inc
add
enter
or
dec
pop
jne
and
xchg
mov
call
mov
xchg
popa
push
decl
lret
insl
popf
pop
inc
xlat
call
flds
outsl
repz
xchg
int3
or
sbb
xchg
xchg
pushf
xlat
mov
daa
xchg
adc
pushf
sbb
mov
cs
cmp
nop
call
dec
es
pushf
inc
test
std
dec
jmp
std
je
xlat
shl
lods
xor
repnz
int3
call
test
leave
orl
aam
pop
mov
lods
lcall
xchg
jae
shl
mov
loopne
lods
rcrl
testb
cwtl
loop
addr16
hlt
rorb
inc
fs
daa
inc
xchg
mov
out
lock
outsb
fldenv
mov
sbbl
es
xor
sub
or
inc
arpl
popa
data16
lods
mov
inc
jl
jge
mov
adc
movsb
pop
ljmp
cltd
jae
es
pop
pop
mov
xchg
push
sbb
mov
rclb
adc
shrl
xchg
xchg
stos
jge
test
xchg
mov
movsb
push
xchg
sbb
fisubs
rolb
stos
inc
mov
jmp
lods
mov
adc
dec
xchg
dec
and
jmp
clc
inc
adc
jl
jns
popa
fwait
into
xchg
push
sub
add
cs
call
rcr
mov
push
jns
sub
in
scas
xchg
rorb
pop
mov
mov
mov
jno
add
jne
dec
pop
sbb
mov
jecxz
mov
jne
pop
lock
sub
rol
dec
hlt
in
clc
jmp
xchg
mov
and
cmpsl
out
jb
sub
xor
jp
or
and
insb
sahf
cmp
jnp
or
jle
movsb
mov
add
je
cltd
stc
es
xchg
addr16
and
shll
shll
xlat
mov
mov
inc
sarl
add
lcall
int
imul
scas
ror
push
in
and
insl
mov
pop
ret
jmp
hlt
imul
dec
arpl
jmp
rorl
cs
inc
imul
fadds
pop
inc
test
mov
ss
sub
dec
rclb
frstor
bnd
mov
inc
push
les
jbe
push
sarb
leave
sbb
nop
aaa
adc
cmp
jnp
mov
xor
push
dec
fcomip
clc
push
pop
sub
xor
push
cmp
aad
stc
pusha
lret
mov
mov
jmp
jg
pop
dec
xor
enter
daa
inc
mov
mov
sub
stos
push
cmp
mov
cvtps2pi
and
out
lahf
stc
data16
push
cmp
aam
pmuludq
pand
push
ljmp
jle
insl
pop
add
mov
pop
or
repz
inc
push
orb
pop
jp
stc
push
sub
outsb
or
sub
push
adc
rolb
jl
xorb
mov
out
push
adc
and
addb
enter
pop
jl
pop
outsl
insb
mov
lcall
sti
sahf
xchg
test
dec
loopne
and
daa
pop
stc
fldl
sub
adc
push
add
pop
sbb
fmuls
push
loop
inc
lret
xorb
lods
and
mov
cld
or
mov
into
fists
cmc
addr16
mov
inc
inc
in
cmp
rcrb
add
roll
jns
lods
cli
daa
loope
inc
call
dec
cli
lock
mov
push
jns
sti
adc
push
mov
adc
push
or
pop
popa
mov
adc
rcr
cmp
ret
les
pop
push
test
imul
cmp
das
mov
sub
lds
pushf
in
jmp
sub
test
aad
rclb
nop
ficompl
into
inc
cwtl
aad
dec
bound
jbe
pushf
pop
jecxz
js
cmc
dec
push
lea
sub
and
and
and
lahf
aas
fistl
lcall
hlt
and
or
pushl
stos
imul
scas
scas
shrl
popa
test
imul
jae
popf
std
xor
je
xchg
sbb
xor
mov
cmpsb
mov
sbb
lock
push
stos
das
fincstp
sbb
sub
in
ret
mov
test
push
shlb
pop
loop
jecxz
mov
mov
jge
sbb
mov
mov
cs
lods
in
or
or
js
movsl
mov
test
mov
cmp
push
loope
adc
fwait
clc
mov
jnp
ljmp
mov
stos
insb
pop
inc
out
cmp
je
cli
push
push
push
jno
rorb
shll
or
dec
xor
jp
mov
push
call
xor
push
icebp
or
mov
push
fwait
std
dec
ficomps
int
xchg
dec
inc
lods
pushl
xor
push
sbb
or
in
jno
xchg
pop
mov
mov
pop
mov
sub
lds
or
jb
jae
call
mov
hlt
dec
push
out
jne
test
sahf
out
mov
push
xchg
cmp
jl
out
fisttpll
outsb
in
mov
ret
addr16
jp
stc
inc
and
dec
insb
or
jnp
push
jle
popa
mov
pusha
xor
push
fcomip
mov
pop
pop
xor
inc
daa
es
arpl
fwait
jns
jmp
push
stos
ja
addr16
jbe
fs
xor
imul
scas
xor
pop
pop
adc
test
xor
xor
and
leave
popf
mov
adc
push
roll
mov
mov
inc
call
mov
add
fiadds
jmp
mov
lds
movsb
inc
mov
cmp
jo
xchg
test
mov
jbe
fdivrl
sbb
sbb
rclb
das
jno
sub
dec
dec
xor
push
ljmp
jo
out
push
scas
enter
mov
lret
test
jae
dec
inc
jp
sbb
pop
pushf
jg
loopne
in
daa
inc
xchg
out
cmp
inc
stc
loope
gs
sub
xchg
outsl
cmp
add
xor
or
and
lods
lahf
sbb
sahf
sbb
addb
js
and
pop
pop
sub
aad
pop
adc
xchg
mov
mov
movsb
insl
std
sub
outsb
outsb
jle
adc
pop
aas
xor
lock
mov
sbb
mov
inc
adc
push
sbb
and
pop
test
aaa
lcall
ja
fstps
nop
sahf
sahf
xlat
dec
test
mov
push
mov
xchg
jns
fs
int3
adc
daa
ss
stc
mov
or
or
mov
jmp
cmp
mov
es
ret
cmc
cs
xor
fldcw
rcrl
loop
add
imul
or
data16
scas
mov
push
or
pop
stos
add
and
out
jl
in
mov
jno,pn
fcmovu
inc
gs
cmp
sbbb
fnstenv
cwtl
les
pushf
repz
loopne
push
ds
xchg
fs
cmp
pop
push
xlat
and
sub
mov
adc
add
jmp
lods
push
cs
mov
dec
std
repnz
mov
add
repnz
inc
stos
mov
dec
mov
jecxz
mov
lea
lock
pushw
pop
cmpsl
js
pop
repnz
cmpl
rcr
shlb
negb
jbe
dec
push
mov
xchg
pusha
mov
idivb
pop
sarl
lea
cwtl
pop
pop
mov
mov
push
icebp
hlt
jge
cld
dec
cli
in
lret
add
fwait
sbb
pop
adc
mov
cmpsl
dec
sub
fwait
jb
inc
sbb
ds
sti
push
in
dec
fidivrs
aas
adc
inc
popa
xchg
es
lods
jns
leave
mov
ret
aas
push
and
dec
and
js
out
cltd
loope
cmp
int
push
mov
xor
notl
loope
push
cmpsb
ret
ljmp
pop
pop
jp
jb
pop
aam
out
lahf
cli
les
dec
jno
setl
add
insl
cmpsb
or
aaa
mov
sbb
xchg
stc
hlt
dec
pusha
xchg
sbb
out
and
lcall
out
or
or
sub
mov
add
fs
call
or
xor
inc
jns
nop
dec
in
sar
xchg
outsb
mov
cmc
mov
out
das
ja
sub
mov
sbb
mov
shll
xor
mov
mov
repnz
out
fdivs
bound
mov
dec
xchg
sub
fiadds
popa
mov
and
mov
cwtl
xor
and
sbb
ss
dec
inc
jle
adc
adc
pusha
iret
fidivl
fisttps
out
jl
or
insb
mov
jae
cmp
push
xor
cmp
es
rcll
in
stos
ljmp
sbb
insb
mov
scas
cwtl
mov
jae
hlt
adc
insb
push
iret
xchg
mov
leave
adc
cs
mov
stos
arpl
or
jp
rorl
and
flds
outsl
cld
fimull
dec
add
lcall
testb
and
lds
cmp
rorb
mov
cmp
pop
pop
movsb
cmp
push
bound
mov
ficoml
jb
sub
mov
mov
xchg
aam
or
mov
pop
dec
jl
out
cmp
xor
push
int
cmc
xor
push
mov
scas
cmpsl
mov
and
scas
stos
test
ds
dec
inc
or
shr
out
mov
fistl
jb
sub
jecxz
lahf
xor
sub
dec
push
cmp
push
lahf
ds
adc
jb
xchg
and
lahf
aaa
mov
push
loop
mov
add
aaa
sub
hlt
mov
pop
dec
pop
jnp
xchg
mov
pop
jno
fs
jae
push
and
fmull
jbe
push
cmp
shl
pop
adc
cmp
mov
xchg
sub
test
mov
xchg
push
pusha
sub
sti
add
lcall
in
mov
outsb
ficompl
inc
jecxz
sahf
inc
add
test
cmp
mov
pop
mov
sbb
stc
dec
push
shlb
add
xchg
xor
cmp
les
push
lret
sti
xor
or
insb
into
movsl
mov
cmc
cmc
lcall
jmp
loop
mov
adc
mov
inc
mov
xorps
push
call
xor
sub
dec
sti
jno
stos
std
push
or
stos
mov
pushf
mov
mov
testl
les
sub
repz
jge
xchg
adc
mov
jns
pusha
jge
sub
dec
pushf
sbb
jmp
hlt
mov
dec
aas
push
aad
mov
nop
in
dec
inc
and
mov
cltd
icebp
je
cld
mov
sti
sub
lea
mov
mov
aad
adcl
pop
pop
fldt
xor
and
pop
jl
jmp
mov
mov
mov
adcl
adc
push
les
cwtl
adc
mov
in
mov
or
lret
shrb
cltd
das
mov
mov
lock
les
xchg
adc
mov
xchg
aam
cmpsb
out
sar
dec
es
in
loop
insb
dec
fsts
in
ret
jl
popa
stos
xorl
in
les
out
jae
jbe
push
jecxz
fistpl
inc
es
rorb
and
sbb
inc
mov
aad
push
stos
adc
cmp
cli
insb
xchg
nop
push
push
shrl
and
stos
dec
or
aas
xchg
mov
push
daa
in
psubq
push
add
into
jno
dec
adc
fs
xchg
mov
test
arpl
xchg
cltd
sbb
aas
and
cmp
and
adc
add
jg
pushl
je
jns
mov
xchg
inc
push
ljmp
jmp
mov
mov
outsl
mov
xor
cmp
jne
jb
mov
fwait
out
outsb
push
bound
mov
pop
adcl
sub
mov
cwtl
mov
and
mov
jnp
lea
in
jno
pusha
push
cltd
fildll
pop
mov
pop
dec
xchg
inc
cmp
push
jle
not
or
popa
sti
or
ss
stos
pop
push
adc
jo
subb
sub
mov
arpl
inc
xchg
leave
mov
les
add
or
lahf
cld
mov
out
repnz
push
repnz
aam
and
inc
hlt
rcr
fildl
or
movsl
mov
mov
loop
sub
cmc
lods
das
movsb
movb
mov
xor
dec
les
ds
xchg
xchg
or
jno
scas
pop
jl
notl
sub
mov
xor
popa
nop
insl
scas
xchg
jle
mov
xchg
test
or
inc
cwtl
and
in
cli
in
aad
sbb
jbe
daa
ds
cmp
stos
loope
pop
add
cmp
int
js,pt
arpl
xor
mov
push
fsubrl
sbb
sahf
xor
mov
leave
fcomps
ret
adc
pop
mov
lret
push
sti
cmp
fdivrl
fdivr
push
subb
push
shrl
pop
mov
rclb
push
sub
push
mov
pop
mov
sub
xor
push
push
mov
sub
mov
cmpsb
adc
lcall
aas
mov
xchg
mov
in
ljmp
xchg
pop
jg
test
mov
pop
imul
lret
ss
pop
push
adc
test
cmp
jg
jnp
pop
or
lret
in
lea
cmp
dec
xchg
or
stos
into
mov
xorb
cli
inc
outsl
fdivp
dec
loop
dec
cmpsl
imul
arpl
lods
scas
xor
stos
pop
cli
mov
shlb
xchg
test
sti
and
lcall
pop
mov
outsl
adc
mov
push
les
outsl
repz
mov
pop
sbb
jg
jp
lahf
jns
adc
loopne
pushf
jmp
add
lods
movsl
dec
aad
xor
imul
dec
mov
adc
lret
jge
xchg
je
inc
cs
hlt
fcomp
call
movsl
cltd
js
pop
cmp
and
mov
pop
sub
and
and
aas
mov
addr16
or
push
shrl
or
pop
rcrl
or
cwtl
outsl
cltd
std
in
test
cwtl
into
fidivrs
mov
cmpsl
icebp
mov
or
lret
jecxz
loope
mov
adc
pop
das
jbe
cmpsl
mov
jle
stos
aam
add
ret
pop
sbb
cmpsl
and
dec
aam
dec
cmpsl
cmp
pop
mov
lods
dec
dec
pop
mov
or
and
jle
cmpsl
pop
rorw
push
fidivs
dec
sbb
test
and
sub
add
insl
jbe
xchg
iret
mov
roll
dec
xor
gs
xchg
iret
rcr
push
add
cvtps2pd
jl
mulb
or
enter
ficoml
xchg
ja
dec
outsb
and
in
xor
adc
or
pop
pusha
fwait
mov
jmp
mov
push
add
lcall
xor
aad
jns
test
in
mov
or
jmp
mov
mov
pop
sbb
dec
sub
call
mov
lahf
fstl
dec
cli
adc
jne
in
xorl
add
inc
and
jmp
rorl
out
fmuls
or
sbb
jp
sahf
and
cmc
lds
xchg
add
push
push
in
or
pusha
add
mov
std
lret
dec
inc
push
jae
mov
push
mov
cmpsb
xor
aas
or
rcrb
mov
pop
fsubrl
xor
scas
pop
xchg
rclb
movsb
sbb
fldcw
iret
push
repz
add
shl
and
arpl
pop
mov
sbb
sub
adc
fidivl
movsb
cmp
mov
mov
fidivrs
pop
inc
and
rol
push
mov
xor
mov
repz
add
mov
mov
int3
and
sub
xchg
aaa
pminub
inc
xchg
xchg
jno
sub
cmp
pop
dec
fwait
jns
push
xchg
outsl
push
xor
mov
mov
and
mov
push
aam
inc
inc
daa
in
cmpsb
push
push
fmulp
shr
scas
daa
cmp
int
loope
xor
test
std
cmp
popf
movsl
add
arpl
mov
sbb
les
xor
pop
int
popf
push
adc
pop
out
push
stos
push
mov
cli
mov
movsl
mov
sub
xor
outsb
xchg
mov
mov
out
mov
vphadduwd
xorb
aad
dec
and
push
push
and
sbb
popa
adc
pop
and
loope
sarl
add
mov
cmp
test
repz
push
jg
xlat
sahf
mov
fdivs
stc
mov
or
adc
idivl
cmp
lods
neg
outsl
je
mov
fdivr
cmp
pop
pop
or
rcl
into
imul
xor
in
mov
inc
das
imul
ja
test
lods
xchg
xchg
mov
fsubr
out
lock
mov
movsl
pop
in
fcmove
sti
iret
and
daa
gs
inc
loopne
add
pop
fstpl
adc
leave
and
dec
dec
outsl
repz
test
fwait
je
sbb
mov
and
scas
adc
xchg
jmp
shl
adc
xchg
aad
nop
inc
std
mov
inc
in
cmc
dec
mov
and
add
mov
call
and
jl
or
cmpl
push
fisttpl
in
inc
mov
ljmp
pushf
aas
jb
mov
xchg
int
shll
mov
cwtl
mov
lcall
sub
icebp
jns
cmc
cld
int
lret
cmpsb
mov
add
imul
sub
jne
push
aam
mov
ret
out
jle
sub
lea
jge
cmpsl
cmp
insl
mov
fldcw
inc
mov
sub
jae
test
mov
test
cltd
xchg
cmp
jns
or
fnsave
xchg
xchg
push
inc
and
ja
rcrl
pop
jnp
pop
stos
sub
icebp
out
enter
push
ret
dec
push
fldl
fwait
add
sub
xchg
xor
idivl
xchg
in
dec
xchg
mov
test
repnz
sbb
pop
inc
add
mov
fwait
mov
lahf
inc
add
mov
scas
push
adc
jns
mulb
in
in
xchg
pop
add
int3
pop
call
pop
sbb
inc
ja
xchg
rorb
insl
cmpxchg
push
mov
push
mov
dec
fldl
inc
jne
int3
xor
sub
enter
inc
jmp
mov
and
out
adc
sub
scas
pushf
ss
and
jp
mov
and
lods
jnp
gs
jle
fidivrs
and
inc
rcr
insb
cmp
xchg
xchg
push
pop
xor
add
bound
push
popa
push
jge
push
popf
lcall
push
jle
or
shlb
sbb
adc
add
adc
push
dec
das
test
mov
inc
iret
mov
and
insl
jg
leave
jns
add
insl
pushf
inc
arpl
daa
inc
subl
or
xchg
push
jmp
in
loopne
sub
add
pop
loopne
stos
push
sbbb
mov
push
rcr
mov
clc
cmc
add
mov
push
cmp
test
fmull
dec
push
dec
sbb
jge
aas
xor
out
mov
or
lods
mov
jl
cmp
or
or
jbe
cmp
pop
sub
and
daa
push
test
lahf
mov
inc
mov
mov
mov
hlt
fisubl
cmp
mov
ret
mov
loopne
lock
lea
xor
jns
mov
jle
and
adc
push
pop
mov
sbb
xchg
xor
jmp
dec
gs
les
mov
push
xor
cmp
fcoml
push
sub
aad
outsb
cli
or
lret
adcb
rorb
data16
push
lret
and
ror
enter
push
push
inc
pop
movsb
jg
lcall
xor
cmp
sahf
sub
test
mov
addb
jg
or
stc
jo
outsl
fists
test
cmp
outsb
loop
cmp
cmc
rep
negl
cmpsb
std
xor
sbb
mov
or
into
into
dec
jge
cmc
dec
mov
shrb
jl
sbb
jo
mov
or
adc
add
into
insl
data16
je
jge
lret
inc
out
mov
iret
mov
push
mov
jle
sar
inc
fbld
mov
loopne
vmaxpd
push
mov
jo
push
lret
fnstsw
xchg
pop
sbb
lods
lock
jecxz
xlat
sbb
vmovups
or
fs
dec
or
imul
dec
pusha
int3
fldl
cmp
push
je
adc
dec
movb
ret
call
mov
sub
dec
mov
leave
lcall
ss
inc
jmp
adc
jb
dec
stos
mov
and
in
push
and
std
cmp
hlt
mov
js
mov
sbb
icebp
push
popa
ja
clc
push
lret
rcl
mov
stos
mov
add
adc
xor
stos
mov
insb
ficoms
test
fldenv
lods
push
jmp
dec
lret
cmpsl
cmp
lcall
mov
and
mov
pusha
mov
movsb
cmp
cltd
mov
sbb
scas
adc
fst
sub
jecxz
inc
xchg
dec
jnp
ljmp
in
pop
es
out
sub
xchg
pop
sbb
push
mov
pop
bound
sbb
push
or
imul
and
fdivrs
xchg
dec
jl
lret
pop
dec
inc
fwait
mov
negb
cld
and
add
shlb
push
xor
or
movsb
xchg
sbb
wbinvd
push
mov
shll
sub
dec
adc
add
mov
jge
leave
dec
shl
jne
pcmpeqb
or
xchg
ja
jmp
push
insl
dec
addl
out
ret
xlat
sub
test
mov
jp
xor
xchg
shrl
cmp
idivb
js
sbb
sub
ret
lea
fisttps
cs
pop
imul
jae
cmp
popf
shll
adc
adc
mov
xchg
sub
jno
push
imul
pop
scas
and
inc
push
push
adc
pop
fmul
mov
leave
lock
hlt
mov
jp
inc
xchg
or
adc
inc
arpl
jecxz
pop
push
arpl
mov
add
pop
aam
iret
faddp
push
adc
neg
xchg
mov
xchg
sbb
movsb
addr16
pop
push
sahf
test
fidivrs
xchg
cmp
mov
out
mov
sub
xchg
dec
jns
push
pop
dec
daa
xor
jb
mov
imul
push
push
sbb
xor
adc
mov
daa
cmp
sbb
sub
js
cmp
leave
loope
loope
push
movsl
push
mov
jl
mov
or
xor
sbb
and
ja
xor
int3
lcall
push
add
hlt
imul
lret
jae
pop
push
fbld
loop
shrb
push
dec
adc
movsl
adc
popl
filds
outsb
cmp
and
jbe
daa
add
int
bound
pop
and
mov
out
mov
jo
sbb
add
ficomps
push
cld
push
sbbb
jg
inc
repnz
imul
adc
pop
cmc
ss
aam
pop
fbstp
fdivs
xor
mov
lea
adc
mov
or
into
xor
cmc
adc
mov
sub
subb
daa
loop
int3
lcall
fidivl
scas
movsl
lods
fs
cmp
sbb
xchg
and
mov
aad
fwait
sti
sub
cmp
xor
cmp
adc
ret
flds
rorb
and
mov
push
jns
cmp
testl
jo
outsl
adc
aas
push
pushf
das
jmp
push
xor
aad
mov
push
dec
mov
and
dec
sub
push
je
lds
jecxz
aam
movb
inc
lea
in
call
and
subl
fldt
pop
pop
push
sub
aad
inc
add
cmp
mov
cmp
mov
lods
aam
roll
test
popa
sub
cwtl
push
jp
insb
pop
dec
mov
ret
cmp
daa
xor
cld
and
lret
xor
mov
jecxz
adc
pop
ljmp
xor
arpl
aam
sbb
ret
or
cmp
xor
dec
lds
cld
mov
pop
pusha
pushf
lods
nop
lods
mov
mov
xchg
ficompl
dec
pop
fistpl
ret
repnz
cltd
hlt
jnp
test
and
push
jb
inc
scas
jmp
push
arpl
xchg
mov
pusha
ljmp
and
stos
push
cltd
xor
mov
mov
xchg
ja
emms
sbb
outsl
or
jo
xor
cs
mov
sub
sti
dec
arpl
push
test
rcll
sbb
lods
inc
xor
sbb
pop
mov
pop
decl
lahf
cwtl
push
add
jmp
jecxz
cs
cli
sub
popa
in
xchg
xchg
stc
inc
in
mov
sub
out
pop
mov
ja
outsl
arpl
loope
mov
jne
into
in
mov
mov
dec
mov
mov
mov
in
out
ljmp
jmp
and
adc
shl
out
sub
movsb
mov
push
jp
pop
add
in
dec
xchg
insb
mov
es
dec
push
jle
aam
in
sub
sub
stos
sub
sub
jl
mov
icebp
sub
popa
mov
popf
call
clc
mov
stos
sub
out
xchg
addb
stc
inc
imul
mov
push
jno
adc
in
outsb
scas
xor
xchg
inc
mov
addr16
add
add
inc
mov
jno
frstor
push
push
loop
rcr
lret
add
push
fistpl
xchg
push
dec
rclb
mov
repnz
sub
jnp
jbe
cwtl
jbe
mov
movsl
sbb
mov
dec
rclb
adc
jl
pop
enter
lahf
push
cmp
push
xor
int
push
scas
add
mov
xor
ret
mov
jno
cmp
ret
daa
cmp
inc
loope
inc
mov
push
pop
cmp
or
movsl
adc
push
dec
lahf
shlb
sbbl
int3
pop
shlb
incl
mov
pop
adc
js
jbe
pop
lods
lret
jl
out
xor
sub
fsubl
in
outsb
rorb
rolb
jg
cmpb
cmp
in
jno
mov
std
and
inc
push
sub
adc
sub
jo
mov
gs
mov
adc
das
mull
test
cmpsb
lret
mov
jg
jle
mov
jg
stc
ficomps
cltd
adc
jnp
ss
sub
fsubrs
negl
mov
mov
jmp
xchg
or
adc
adc
out
fsubr
cmpsl
xor
and
inc
pop
fisubrs
cltd
adc
mov
popf
add
dec
call
lods
dec
jmp
pop
out
ficoml
mov
inc
xor
faddl
xor
lods
sub
loopne
addb
push
jbe
fnstcw
testl
xchg
in
xor
imul
sub
lcall
jno
imul
pop
fdivrs
cs
inc
aad
inc
inc
nop
xlat
mov
dec
push
push
jle
sbb
clc
in
test
jl
or
arpl
dec
in
mov
in
addl
xor
mov
adc
inc
pop
push
test
push
push
or
pop
sbb
sub
es
push
pop
rcll
sub
mov
push
cwtl
mov
sbb
icebp
sub
dec
sbb
lret
lahf
ja
mov
test
push
adc
repnz
sub
dec
aam
enter
inc
outsb
es
scas
insl
gs
dec
shlb
mov
push
jno
lods
sti
jae
mov
xchg
cld
inc
and
ljmp
shrb
push
cltd
sub
aas
test
or
xor
sbb
pop
das
jg
lret
jge
ljmp
sti
pop
jl
pop
stos
cmc
movsl
pop
out
icebp
loop
xchg
jmp
xchg
push
outsb
dec
outsb
loop
add
adc
mov
inc
push
mov
sub
jmp
test
push
mov
sbb
outsb
stos
inc
leave
ret
nop
or
jmp
push
inc
add
add
push
insl
sar
int
out
dec
pop
je
mov
jmp
xchg
dec
mov
xchg
push
mov
pushl
mov
and
stc
mov
jg
xchg
jge
mov
test
leave
jg
bound
mov
jae
out
jle
sub
lahf
add
outsl
xor
insb
imul
sbb
sub
cmp
inc
pusha
jno
add
leave
cmpsl
mov
pop
fnstenv
mov
jae
iret
lock
xor
mov
cmp
arpl
sub
imul
es
ljmp
adc
adc
ret
mov
fidivs
popa
hlt
dec
sub
arpl
mov
aas
cmp
inc
mov
inc
popa
mov
iret
inc
outsb
int3
imul
pop
xor
fimuls
inc
arpl
xchg
mov
addl
movsb
jge
js
cmp
sbb
dec
sarl
out
jmp
aaa
or
xor
jae
jl
mov
push
cmp
repz
push
arpl
scas
loope
ljmp
push
ret
aas
push
inc
arpl
mov
pop
lret
mov
idivb
loope
out
sub
pop
add
inc
fwait
add
daa
scas
lcall
inc
sub
aam
insl
sbb
aad
add
addr16
test
xchg
xor
pop
cmp
ret
js
mov
pop
jmp
sahf
push
sub
push
xlat
xor
push
pop
cmp
outsb
and
lcall
inc
sub
pop
lea
add
and
addl
std
inc
cmp
pop
and
rcll
mov
popf
sbb
mov
gs
adcb
xorl
adcb
adc
fidivs
aaa
std
sub
es
clc
neg
cs
outsl
jo
xor
dec
stc
cmp
call
ss
testl
xor
xorb
adc
loop
and
jae
and
bound
cmpsl
insl
js
mov
jp
xor
cmpsb
mov
movntq
xor
mov
mov
stos
jl
sti
mov
iret
or
sub
pop
pop
dec
ds
out
fxtract
jge
les
imul
cmpsl
mov
cmp
cmpsb
mov
adc
xchg
mov
dec
mov
pop
aad
sub
dec
jge
push
inc
xor
cmp
dec
jecxz
push
in
divl
and
push
pop
xlat
iret
test
dec
popa
jbe
fcmovne
sbb
pop
pop
mov
inc
cmpsl
inc
call
aas
movsl
xchg
jb
mov
mov
ret
sub
shl
ss
out
jbe
das
xchg
pop
cwtl
jne
int
ljmp
icebp
aad
mov
jns
pop
lret
push
lock
adc
mov
aad
inc
das
ror
ljmp
and
ret
sub
jbe
dec
and
cmpsl
cmp
adc
xor
shrd
mov
fimuls
test
or
add
sarb
lock
test
mov
sahf
ficoms
xchg
cmp
dec
insw
clc
xchg
inc
lahf
ljmp
fstpl
mov
push
or
xchg
xor
dec
cmp
add
jno
sbb
xor
mov
mov
cs
dec
xor
lret
xchg
lret
push
je
pusha
jge
or
lahf
insl
fwait
jne
rcrb
in
xlat
add
and
in
insb
jmp
xor
and
xchg
xchg
shll
stc
imul
add
inc
ja
pop
out
dec
jmp
and
mov
lret
dec
imul
mov
insb
out
test
xchg
cli
dec
jmp
mov
cmp
out
mov
or
insb
or
and
and
insb
popa
jg
jnp
inc
cmc
jle
lcall
or
sub
call
xor
pop
adc
pop
inc
jg
adc
adcl
popf
fldl
mov
jp
ret
mov
xchg
cs
sbb
xor
rclb
dec
ret
fs
notb
and
sbb
sub
push
ret
imul
cltd
lods
xchg
arpl
push
inc
fsts
or
xor
xor
xor
sahf
add
icebp
int3
push
push
mov
popa
std
mov
xor
inc
mov
xor
mov
cmp
or
movsb
or
jecxz
mov
cld
jbe
ja
jge
bnd
shrl
testb
sbb
jno
mov
inc
dec
xchg
in
add
sbb
adcl
shl
and
mov
int3
lcall
repnz
mov
mull
mov
aas
repz
daa
cmp
adc
jb
loope
scas
hlt
sub
mov
cmp
test
iret
movsl
and
rcrb
cmpsl
sbb
xor
add
sbb
xor
or
pop
pusha
loop
js
aaa
sbb
sub
push
jmp
push
in
and
sub
or
xchg
in
adc
ss
adc
pop
flds
shrl
call
push
xor
pop
sub
mov
mov
xchg
test
stos
pop
mov
sbb
in
mov
subb
cwtl
mov
dec
scas
stc
dec
pop
shll
rclb
mov
inc
mov
fsub
out
fdiv
cltd
sub
mov
xchg
cmp
or
and
into
fcmovb
mov
xor
fimull
outsl
sbb
mov
imul
aas
add
aad
data16
jg
sbb
mov
stos
out
or
cli
mov
or
cmp
cmp
gs
das
jge
add
fldcw
test
les
xchg
push
push
sbb
loope
lods
xlat
sbb
sub
aas
mov
jnp
movl
shrb
decl
insl
aad
ja
nop
lea
push
inc
inc
push
mov
je
into
hlt
jecxz
cwtl
dec
adc
pop
lea
pop
call
lahf
pop
test
outsl
les
dec
mov
adc
pop
decl
inc
cs
inc
push
imul
jb
aas
pop
mov
dec
push
pop
shll
mov
imulb
test
cwtl
xor
xchg
mov
out
dec
icebp
lods
test
cld
movsb
sbb
mov
sarb
xchg
jmp
xor
xlat
das
mov
imul
mov
in
mov
imul
nop
dec
mov
out
cmpsl
aaa
jge
mov
dec
ljmp
sarl
mov
cmp
cmpsl
mulb
mov
and
inc
rclb
std
mov
test
sub
mov
xchg
sub
iret
or
dec
nop
ja
add
pop
cmp
les
mov
out
xchg
jns
ret
cmp
sete
add
mov
xor
jbe
mov
xor
add
pop
fwait
test
jne
xchg
arpl
sbb
pop
xor
fwait
movsb
scas
pop
push
mov
add
leave
decl
lds
jns
or
rclb
mov
push
adc
mov
push
mov
stc
xchg
test
mov
push
mov
cmp
dec
dec
and
jne
add
mov
int
out
xchg
cmp
jmp
andl
jns
xchg
jl
addr16
or
jp
add
fwait
insb
int3
jecxz
jnp
in
jle
in
cmc
in
aam
pusha
cmpsl
jg
filds
mov
xchg
movsl
icebp
inc
pop
inc
inc
jno
mov
adc
dec
sbb
popf
pop
jno
incb
mov
xchg
test
lods
imul
cmp
ret
jne
sti
pop
mov
ret
jge
int3
dec
dec
hlt
in
jg
ja
es
xchg
out
or
cld
push
or
arpl
add
outsl
add
inc
add
and
push
out
or
jno
mov
mov
daa
pop
push
cmp
fsubrs
movsb
xchg
jmp
pop
jbe
adc
jge
fdivs
aaa
mov
or
mov
jno
icebp
js
cmp
dec
xor
insb
sbb
fidivrs
arpl
mov
cmp
ret
lret
xchg
in
insb
inc
addl
movsl
in
add
mov
jnp
aaa
insb
and
ret
loope
cltd
cli
sub
out
cmp
xchg
movsl
sub
jmp
das
jp
push
jp
push
sbb
imul
xor
sbb
cmp
test
js
jne
pop
imul
lds
sahf
dec
fsubl
jg
outsb
jmp
jae
rclb
mov
xor
dec
jb
mov
mov
and
cmc
push
int
scas
pusha
sub
sbb
jo
jnp
inc
ja
mov
adc
mov
mov
mov
jg
dec
int
pushf
cli
push
add
pop
fs
adc
ss
add
shl
cmpsb
jge
push
rcrb
cmp
add
jno
aaa
into
mov
shll
xchg
inc
inc
outsl
imull
loop
dec
and
clc
jnp
jmp
sub
mov
dec
mov
out
push
cltd
mov
addl
adc
rolb
pop
xchg
push
sub
fs
bound
dec
les
lret
adc
icebp
xchg
push
cmp
jl
pop
jg
sub
push
adc
popa
push
jmp
les
bound
cwtl
aad
sub
dec
cmp
test
dec
or
dec
jecxz
or
adc
jbe
mov
dec
lods
pop
cmp
xor
dec
aaa
je
into
sbbl
cmp
inc
jo
imul
xchg
imul
cmp
roll
into
popa
std
jge
aas
cwtl
jmp
adc
repnz
icebp
and
cld
iret
pop
scas
lret
in
sub
mov
add
mov
mov
lock
jle
sub
mov
aas
addb
dec
outsb
pop
es
mov
dec
mov
loope
ss
ret
popa
arpl
cmp
xchg
mov
cmp
mov
aas
ljmp
jecxz
icebp
cltd
shl
dec
test
shlb
sub
lods
and
or
xchg
mov
ljmp
test
mov
ret
out
sbb
notb
dec
pop
psllq
add
and
push
repnz
xor
mov
xchg
mov
stc
movsb
test
jle
xchg
sbbl
mov
xchg
xchg
rcrl
push
push
sub
dec
add
push
cmc
xor
stos
mov
xor
xor
fisttps
mov
pop
out
xchg
xor
inc
std
mov
jp
sti
ja
push
repz
iret
cmp
mov
test
xlat
dec
das
into
sbb
mov
inc
mov
bound
imul
pop
and
xchg
dec
fs
or
aaa
out
cld
in
sub
nop
cwtl
mov
jp
std
cmp
dec
mov
insb
aaa
sbb
jnp
dec
adc
xor
inc
cs
fbld
cmp
xchg
js
add
inc
dec
inc
xchg
insl
xchg
jae
mov
push
xlat
popf
test
push
push
clc
inc
mov
fsubrl
pop
imul
push
repnz
dec
adc
repnz
iret
ljmp
leave
inc
leave
pop
hlt
das
scas
insb
arpl
imul
inc
ficoms
sbb
mov
add
pop
mov
repnz
inc
sarb
mov
jp
lods
cmp
adc
push
sub
jbe
and
pop
sbb
popf
aaa
dec
sub
in
add
cli
jl
or
dec
movsb
xchg
pop
push
enter
arpl
sbb
xor
scas
jle
add
dec
xchg
push
test
popa
roll
adc
cmp
or
dec
xchg
daa
ss
fnstsw
cmc
push
shl
test
sub
adc
cmp
ds
pop
adc
and
gs
dec
dec
test
mov
clc
sub
xor
lcall
scas
or
js
inc
lds
test
mov
mov
inc
push
xchg
mov
fcoml
lods
sub
clc
mov
in
fistl
and
pop
mov
pop
xchg
cmp
push
ss
int
cmp
mov
sahf
sub
lcall
sbb
pop
es
sbb
fwait
es
cld
jns
test
cmp
and
std
jg
xchg
adc
mov
adc
add
cmp
push
fs
notl
test
lret
add
inc
pop
sbb
nop
add
loopne
hlt
into
mov
cmp
outsl
and
loop
lods
test
pop
mov
adc
mov
mov
add
mov
dec
je
and
dec
mov
in
addr16
sti
cwtl
xchg
cmp
gs
fldcw
pop
mov
lcall
jg
les
daa
mov
sbb
push
add
xchg
xor
sub
add
sbb
lock
lds
adc
adc
pop
dec
lcall
dec
jg
xor
sti
jecxz
lds
push
divb
sub
insb
call
popf
mov
dec
sbbl
push
fistl
ficomps
push
fiadds
iret
leave
inc
mov
mov
andb
jb
repnz
movsb
mov
shlb
divb
sahf
and
mov
lea
in
and
pop
outsb
sub
cli
imul
mov
xor
out
out
outsb
loope
mov
ss
inc
lret
inc
ret
xlat
scas
aas
es
pop
aam
lods
or
mov
lods
cmpsl
mov
and
test
pop
pop
int3
pop
shlb
in
sbb
sbb
push
inc
and
shll
xchg
mov
ljmp
sub
adc
jge
fstl
fidivl
rsqrtps
push
add
lods
mov
mov
aaa
cmpsl
dec
data16
test
sbb
xchg
xchg
sbb
or
and
mov
scas
push
into
xor
and
jb
lret
decl
xchg
xor
sti
pop
in
lea
mov
scas
pop
mov
xor
lcall
mov
or
sbb
dec
adc
jne
rcr
mov
int3
mov
fcoms
jmp
sbb
pop
sbbl
cwtl
sub
mov
addr16
int3
or
and
cmpsb
insb
mov
je
jle
push
in
loop
pusha
test
inc
enter
or
inc
mov
cs
push
rcl
enter
dec
mov
aaa
cmp
stos
push
bound
imul
mov
adc
ss
repnz
or
mov
sub
arpl
pop
jecxz
loopne
and
ret
pop
dec
sbb
dec
adc
add
sub
pop
out
push
xchg
ficoms
pop
aaa
rcrb
leave
repnz
xchg
cmp
movsb
test
xchg
inc
jbe
stos
xchg
jge
push
pop
sbb
xorl
nop
cmpsl
or
or
nop
test
push
stos
mov
xor
xchg
ror
pop
std
and
fstpl
test
sub
call
cmpsb
sbbb
enter
daa
xor
loope
sub
adc
cmp
insl
enter
xchg
movsb
in
inc
lahf
insl
adc
push
and
sbb
mov
xor
sub
mov
ja
js
lods
mov
push
bound
jmp
cmp
outsb
scas
cmc
scas
adc
or
popl
stos
and
sub
arpl
cmp
pushf
int
scas
ja
mov
cmpsl
pop
sbb
cmpsb
out
jo
rorl
das
int3
sahf
lahf
cs
test
pushf
push
jg
in
mov
sti
add
jno
adc
push
adc
inc
cmp
adc
not
sub
icebp
xor
push
cmp
mov
or
sbb
cmpl
dec
pop
push
loop
inc
cmp
push
insl
adc
popa
addl
shll
lods
into
push
testb
mov
cli
push
add
jmp
and
sti
inc
adc
pop
and
pop
inc
imul
cmp
aad
dec
adc
jb
les
gs
mov
dec
sbb
xchg
mov
xlat
addr16
sub
jge
adc
leave
mov
enter
add
add
sub
or
pop
mov
nop
push
jl
dec
stc
loop
inc
jl
int3
dec
negb
je
lret
mov
sbb
cmp
sbb
push
scas
fwait
inc
sbb
fstps
xchg
xor
ret
test
push
inc
ret
sbb
lcall
negl
cmp
out
leave
aad
pop
rolb
repz
std
lret
mov
enter
add
xor
dec
cld
and
jns
mov
shl
push
shrl
lcall
sub
push
or
xor
call
inc
sbb
mov
xchg
loop
lods
adc
icebp
mov
inc
and
aas
mov
jge
pop
rorb
mov
mov
leave
rcll
xchg
jo
call
fcom
xchg
push
mov
ljmp
popf
pop
shll
cmpsl
out
loopne
dec
xchg
dec
gs
orl
mov
or
xor
mov
mov
cmp
test
dec
pop
xchg
sbb
lret
or
mov
pop
push
jno
ss
lea
dec
call
pop
lock
mov
in
mov
xchg
rcrl
in
bound
lock
ss
dec
mov
cmp
rcrb
mov
add
jge
js
pop
out
and
movsl
bound
gs
in
stos
subl
out
inc
or
inc
and
xchg
hlt
call
and
insb
or
bound
jle
xchg
mov
pop
jmp
fbld
xchg
push
pop
pop
in
sub
stos
and
jae
lock
push
xchg
fsubp
popf
rcr
cltd
mov
jbe
inc
stos
fildl
xchg
mov
mov
imul
inc
push
sbbb
iret
test
in
xor
arpl
fisttpl
insl
fnstcw
daa
movb
mov
call
fidivrs
mov
shlb
xor
and
hlt
movsb
xor
push
push
std
mov
jge
in
sbb
js
or
ret
mov
sbb
aam
dec
andb
xor
out
arpl
scas
cmp
mov
test
mull
inc
cs
xchg
cmpsb
add
in
fstpt
enter
daa
xor
or
pop
imul
dec
ljmp
cmp
movsl
aas
ds
and
mov
lahf
mov
push
repz
sub
ficoml
add
mov
fsincos
add
pop
cld
cli
js
test
pop
cmpsl
gs
icebp
push
push
inc
push
push
fsubrl
jl
outsb
adc
hlt
adc
mov
addr16
subb
inc
mov
jo
and
rcrb
int
add
sub
js
pushf
fstpt
lcall
ret
xor
sahf
inc
xlat
outsl
test
fimull
sbb
gs
cmp
stc
sub
sbb
aaa
add
cmp
cmp
int
push
notl
es
xor
rolb
cmp
mov
dec
mov
xorb
xor
xchg
loope
mov
add
adc
jae
add
push
inc
mov
fimull
adc
stc
mov
ret
sti
mulb
jle
sub
adc
loopne
lcall
or
mov
les
stos
push
xchg
jbe
xchg
sbb
int
xchg
xlat
adc
stc
pop
adc
mov
pushf
jae
sub
xchg
ds
lods
aad
xchg
or
pop
aas
add
push
cld
dec
insl
cmc
lods
je
sub
sub
popf
sbb
je
cli
aam
call
fwait
cs
orl
lcall
dec
and
aas
rolb
dec
jne
mov
jp
outsb
dec
jns
ss
std
jb
into
cwtl
sbb
mov
pop
add
or
add
push
or
lret
cmp
mov
jg
lea
pushf
cld
mov
mov
and
enter
and
cmc
sti
jnp
lds
les
nop
outsl
dec
mov
xchg
push
popa
test
inc
lods
jge
test
or
ret
mull
pushf
jb
rcrb
cltd
jne
jge
xchg
mov
mov
mov
iret
fisttpll
inc
mov
in
ljmp
dec
pop
jle
shrl
sbb
xchg
xchg
fildl
nop
sti
orb
xlat
mov
or
push
xor
ret
xchg
mov
cmp
and
test
adc
fstpt
repnz
push
cmp
pusha
sti
inc
push
adc
into
add
test
pop
incl
les
jns
rorl
and
mov
fstpt
mov
stos
mov
ja
lods
xchg
sbb
mov
icebp
mov
mov
iret
popf
dec
fmuls
xor
rcrl
movsl
out
add
mov
xchg
scas
sbb
adc
out
jns
sub
iret
or
mov
mov
insb
js
push
jnp
adc
jle
mov
pop
pusha
adc
cmp
icebp
hlt
pop
pop
and
leave
inc
mov
in
jae
testb
stc
push
push
mov
mov
cmc
stos
dec
pop
push
loope
je
leave
mov
pop
scas
cmp
push
test
adc
lods
iret
pop
out
and
sbb
leave
test
div
adc
mov
or
call
cmp
sub
int3
in
dec
cmp
mov
lds
push
stc
mov
jae
mov
movsb
mov
lods
data16
adc
inc
pop
mov
aaa
test
mov
jno
pushf
mov
dec
icebp
aad
push
jno
enter
pop
jo
sbb
scas
sbb
and
shrl
aaa
inc
inc
mov
jge
in
ret
enter
daa
xor
push
loope
lods
xor
cmp
imul
xchg
mulb
fidivl
lods
lahf
stos
mov
test
add
mov
insb
sub
in
pop
and
cli
js
ss
gs
mov
xor
lods
fcoml
loop
xchg
dec
outsb
jne
mov
jge
fmuls
mov
in
scas
mov
stos
fisubs
xlat
test
push
aas
sub
addr16
mov
sbb
lcall
pop
mov
cmc
lret
mov
sbb
xor
cwtl
mov
lret
mov
fistps
fs
adc
pop
ss
outsb
or
nop
insb
xchg
mov
notl
lret
and
cmp
xchg
cmc
or
sarb
cmc
dec
int3
cli
xor
mov
cmp
imul
xlat
jno
mov
adc
mov
mov
sub
jbe
mov
inc
push
loopne
and
popf
sbb
fcmovne
mov
ds
cmpsb
les
rclb
cmp
sbb
or
xlat
push
pusha
fwait
sub
sub
adc
popf
mov
cs
repz
aad
aad
nop
aam
stos
dec
mov
push
mov
xor
je
pop
or
cmp
jle
popa
xchg
sbb
mov
and
jmp
jecxz
fninit
data16
cmpl
inc
fdivl
pop
fsubp
jb
add
mov
add
sbb
idivb
mov
sbb
mov
or
dec
icebp
mov
jnp
inc
lret
test
sti
mov
mov
sbb
ja
idivl
mov
sbb
in
aam
mov
mov
dec
pop
insb
insl
mov
xchg
dec
popf
mov
je
daa
dec
jmp
lods
call
ljmp
lret
mov
mov
add
test
neg
push
mov
scas
fnsave
jmp
inc
xchg
test
push
rol
stos
cmpsb
pop
sub
jbe
jle
push
out
cmpsb
cli
add
fdivl
or
outsl
mov
test
loop
int
jmp
fdivrs
xchg
push
dec
fwait
dec
xor
pop
sbb
sbb
pop
js
ljmp
fwait
js
push
mov
adc
ret
insl
scas
jmp
jns
cltd
outsb
in
jns
xchg
jno
call
mov
inc
dec
ja
jge
dec
fwait
shlb
mov
in
imul
or
jo
loopne,pn
out
loop
fldenv
jnp
jmp
jp
push
out
push
adc
jl
test
rolb
jp
loope
and
inc
xchg
jnp
mov
in
gs
scas
mov
fbld
mov
pop
pop
mov
js
arpl
push
sbb
popf
and
fistl
xor
shll
cmp
sbb
mov
imul
scas
lahf
mov
movsl
adc
sbb
push
adc
leave
pop
das
mov
pop
lahf
clc
arpl
inc
loopne
mov
push
out
arpl
je
in
bound
add
dec
adc
fsubrs
pop
jnp
cld
fidivrs
cmp
adc
repnz
inc
mov
lahf
popa
cmp
idivl
jbe
repnz
jge
mov
sbb
push
or
mov
mov
push
push
lret
xchg
xor
movsl
in
scas
cli
cmp
and
push
jb
lea
dec
enter
push
test
sbb
xor
sub
lret
sub
adc
cmp
push
mov
sbb
push
movsl
dec
push
and
pusha
lahf
lret
push
cltd
mov
sbb
addb
fnstenv
ja
pushf
jmp
sbb
js
pop
sahf
pop
movsb
gs
jle
jb
out
test
push
sub
imulb
movsl
movsb
adc
pop
pop
inc
sahf
sub
adc
scas
mov
cmp
push
inc
fsubr
int
pop
mov
pop
lcall
shll
sbb
add
test
or
push
mov
jg
jmp
mov
adcb
dec
dec
pop
adc
insl
test
inc
aas
push
notl
xlat
xor
xor
rcrb
sub
or
adc
movsb
xor
outsl
push
sbb
fidivrl
push
imul
or
nop
hlt
dec
inc
fisubrl
stc
pop
sub
adc
scas
cli
in
dec
mov
cwtl
cmp
dec
cmp
xrelease
fisttpll
pop
xor
iret
fnstenv
cld
jg
repz
xchg
cld
je
sbb
inc
test
xlat
xchg
and
jnp
ret
adc
hlt
enter
insb
jmp
inc
pop
cs
lret
xor
nop
scas
adc
popa
inc
mov
cmp
adc
je
mov
and
enter
and
mov
pop
mov
out
dec
into
insb
pop
fistl
idivl
ror
adc
add
dec
aas
jp
jb
cmp
in
xchg
and
xor
or
imul
sarb
xchg
imul
inc
call
icebp
mov
sar
cmpsb
cld
jnp
pop
stos
cmp
loop
lock
xchg
ljmp
sub
es
jb
pop
ret
adc
es
jns
insl
popf
xchg
loop
cwtl
pop
mov
mov
or
mov
lods
lods
ret
mov
cwtl
pop
fisubrl
mov
cltd
jecxz
addb
lret
push
dec
xchg
fstpl
loope
xor
xchg
ret
daa
mov
mov
mov
sbb
pop
aam
push
stos
insl
popf
js
or
mov
and
cltd
push
inc
aad
bswap
popf
jle
fidivrl
inc
or
cli
xor
loop
mov
inc
jnp
dec
add
test
pop
repz
cld
sbb
leave
jecxz
inc
addl
mov
add
fidivrs
mov
in
and
in
jo
xchg
rolb
mov
and
ja
rorl
mov
or
push
mov
xchg
push
dec
sahf
jg
jne
movsb
mov
mov
and
and
movsl
jmp
inc
cmp
mov
jl
ja
jmp
test
jp
pop
push
and
cltd
jnp
ret
dec
jle
mul
jb
jb
dec
ret
loop
shrl
xchg
xchg
scas
loope
xchg
rcll
int3
stos
mov
into
int
fidivs
xor
xor
lcall
mov
scas
add
push
push
repz
adc
mov
ret
std
leave
xchg
loop
hlt
cmpsb
insl
inc
arpl
stos
mov
movsb
mov
mov
ficoms
ficoml
dec
scas
int3
ret
bound
fisubs
push
mov
fwait
pop
repnz
repnz
cmp
push
movsb
aad
add
aam
jbe
inc
jg
xchg
hlt
ret
fbld
add
or
lret
cmp
pop
dec
iret
jle
push
aaa
mov
dec
jo
ret
cmp
and
mov
push
pop
aad
inc
fstpt
mov
nop
add
xchg
jg
daa
xor
cmp
hlt
inc
push
loope
mov
mov
cmp
das
bound
adc
stos
lahf
jmp
xor
sbb
in
das
adc
xor
xchg
scas
mov
or
push
pop
pop
jecxz
sbb
push
inc
push
neg
test
pop
jmp
cmp
adc
xor
rolb
adc
out
pop
push
ret
mov
push
inc
sti
out
int
pop
je
popf
push
xor
int3
or
sahf
stc
or
sahf
sub
sahf
subb
jg
dec
sbb
dec
push
das
fs
or
call
fisttps
fidivs
fdivr
cmpsl
stos
not
insb
jno
pop
shlb
cmp
rcrl
or
jbe
lfs
and
mov
mov
loop
mov
adc
mov
jg
int
or
hlt
daa
jns
adc
cli
and
ljmp
addb
ljmp
jbe
loopne
xor
pop
push
fldenv
adc
cmpsl
inc
shrl
pop
xchg
mov
outsb
arpl
jle
xchg
xlat
shrb
sub
cmpsb
mov
pushf
je
dec
jmp
inc
xchg
cs
aad
test
nop
mov
cmp
insb
roll
movsl
dec
rcrb
jecxz
pop
sub
and
cwtl
jo
fwait
xchg
cmp
sbb
xchg
adcl
jb
inc
dec
and
je
imul
lahf
aas
popf
sbb
jb
mov
lds
test
rcrl
idiv
pop
push
std
sub
jns
mov
imulb
icebp
lea
cld
shll
cmp
xchg
mov
sub
xchg
lock
jns
das
leave
movsl
cmp
or
out
aam
mov
ret
mov
dec
aam
test
les
mov
cmpsl
xor
mov
popa
in
pop
or
mov
stc
and
pop
cmpsb
dec
pop
stc
or
cltd
sbb
test
in
push
adc
scas
fldl
add
sub
shll
and
or
insb
xchg
es
push
push
push
and
cvtps2pi
cmp
shr
inc
xor
out
aam
cld
dec
add
inc
pop
push
imul
xchg
fwait
sbb
inc
sbb
or
pop
jge
in
mov
fs
stc
and
jmp
xor
xor
xor
popf
mov
ljmp
leave
jg
fcoml
jmp
xor
enter
mov
mov
je
mov
cmpsb
mov
mov
inc
xchg
jmp
adc
xchg
andl
out
ss
fimuls
out
jb
or
jp
mov
and
and
insb
mov
roll
rcl
in
pop
mov
fnstsw
lret
push
lret
cmpsb
repz
xlat
jg
jae
mov
fistpl
fwait
push
nop
stos
cmpsl
xchg
inc
xchg
out
mov
sub
pop
scas
gs
lods
adc
and
jbe
push
pusha
aam
or
lods
arpl
pop
and
cmpsl
stc
xchg
or
pop
sti
popl
or
fcmove
xchg
push
outsb
ljmp
ds
lds
lds
xchg
rcrb
lahf
mov
insb
mov
movsb
pusha
loop
push
add
jbe
adc
jge
pop
inc
sbb
inc
mov
jno
pop
mov
addr16
loope
ds
into
push
sbb
push
jo
mov
scas
mov
push
call
push
and
and
ja
jno
nop
js
daa
xor
cmp
movsb
cli
loope
notb
cmp
call
movsl
pop
shll
stos
mov
dec
push
aas
in
popa
sbb
cmp
adc
sbb
pop
cwtl
jmp
js
pop
lret
xor
push
aaa
adc
inc
leave
fcoml
sub
outsb
sahf
xor
adc
push
sub
fs
ljmp
push
push
and
mov
int
inc
loope
sbb
lcall
xchg
mov
mov
test
xchg
addb
data16
mov
stc
add
push
fs
sub
aaa
clc
divl
xchg
lds
fdivrs
xchg
lret
sbb
dec
inc
lods
cmp
xchg
sbb
jp
mov
repnz
sahf
loop
xor
gs
loop
cmp
and
icebp
add
xchg
fldcw
out
test
out
push
cli
push
cmpsl
mov
outsb
lcall
or
aad
jge
cmp
mov
mov
std
adc
push
add
into
sbb
repz
sub
sbb
mov
xor
sub
fists
xchg
lds
pop
push
or
scas
or
cs
push
int3
aad
icebp
dec
nop
gs
mov
fistl
dec
dec
ret
iret
je
add
jecxz
test
pop
lea
xor
xchg
inc
cs
and
xchg
dec
movsb
add
or
inc
data16
inc
sub
rolb
xchg
ljmp
cmpsb
jno
shrl
popa
mov
push
mov
pop
mov
xor
icebp
mov
cld
cld
cmp
lret
cmc
lahf
push
mov
or
mov
jb
lock
das
test
mov
add
aam
test
ret
xor
sbb
rorl
lods
dec
mov
das
in
mov
add
insb
lods
sub
jle
ds
fstpt
ffreep
jecxz
clc
sbb
pop
sbb
add
test
xchg
cltd
push
xor
mov
cmp
push
roll
pop
clc
cmpsl
cmc
push
xchg
inc
jp
ljmp
pop
pop
sub
xchg
out
iret
push
xchg
xchg
mov
dec
push
cld
scas
jl
fistps
lret
mov
dec
test
adc
xchg
dec
pop
sbb
or
scas
push
inc
or
dec
inc
fwait
sbb
inc
push
mov
pop
mov
adc
push
incl
or
mov
jns
sti
js
sub
xchg
pop
xchg
adc
fcoms
pop
ja
add
dec
je
sbb
cmpsl
adc
mov
aas
or
test
mov
test
out
jg
lret
bound
adc
sbb
push
xor
xchg
push
lods
sub
insl
mov
js
jp
outsl
sbb
insb
and
sti
jnp
andl
insb
add
and
jo
xchg
cmp
pop
imul
jae
mov
push
fs
popf
xchg
sub
mov
mov
adc
cmp
cmpsl
shrl
xchg
cmpsl
scas
enter
jecxz
movups
dec
stc
iret
adcl
leave
test
ljmp
cmpsl
insl
or
aam
fwait
inc
push
push
jmp
jnp
in
mov
xor
pop
or
lds
xchg
adc
repnz
push
mov
push
push
or
arpl
sbb
hlt
aaa
add
icebp
jno
mov
jl
shr
dec
lods
aaa
dec
push
std
jae
xor
mov
jae
xchg
lcall
jnp
aad
out
ret
stc
imul
ja
enter
daa
das
in
cmp
dec
loope
add
pop
andl
movsl
call
mov
push
adc
lcall
in
push
loope
inc
mov
dec
xor
and
js
aaa
cwtl
pop
popa
loope
push
dec
out
push
repz
push
fdivr
out
sub
jb
add
ficoml
jmp
in
flds
add
fisubs
adc
mov
int
or
xchg
xchg
inc
pop
pop
pop
scas
lcall
mov
sbb
cmc
sahf
jno
dec
test
jge
jg
push
push
mov
frstor
mov
daa
jp
xchg
ss
cmpl
xor
dec
lret
sub
es
push
or
mov
or
xor
jmp
loop
pop
in
sbb
adc
mov
imul
mov
out
call
scas
mov
popa
sub
cli
test
dec
test
ficoms
daa
jnp
fstps
lcall
aaa
sbb
xchg
inc
mov
sbb
hlt
cmc
and
push
orl
adc
arpl
jmp
xchg
pop
jp,pn
cmpsl
aad
ret
or
xor
inc
out
stos
or
rclb
jecxz
cmp
dec
std
cmp
push
dec
mov
aad
xor
mov
pop
mov
out
inc
dec
sbb
aas
fldt
jb
dec
xor
and
add
mov
mov
xchg
cwtl
ret
push
fwait
mov
lock
mov
push
and
daa
sbb
lret
rorb
aaa
mov
lock
jo
sbb
sub
lahf
je
shl
fs
shl
es
inc
repnz
push
inc
or
mov
aad
repz
les
movsb
dec
mov
out
shlb
aaa
fdivs
cltd
mov
adc
lret
addb
shlb
clc
loop
mov
adc
rcrl
jno
pop
aad
les
xor
xor
xlat
mov
por
add
sbbb
adc
aad
xchg
dec
aaa
in
test
lcall
loop
mov
jns
or
inc
fwait
dec
adc
test
add
es
jmp
fyl2xp1
jns
fs
in
dec
daa
xchg
lods
or
mov
cmp
pop
push
xor
lret
dec
addr16
mov
inc
push
mov
and
bound
lea
mov
mov
or
loope
jmp
cmpsb
xor
out
jmp
push
or
mov
jp
push
sub
insb
scas
mov
jle
stos
push
in
loope
pusha
sbb
fistps
sbb
xchg
adc
fstps
cmp
into
jae
paddq
daa
mov
or
lock
and
xchg
inc
inc
sbb
cmc
arpl
add
push
sub
inc
adc
add
ja
xlat
leave
sti
aam
hlt
xchg
test
inc
lods
leave
xor
dec
test
fisubrl
outsb
movl
test
lock
aaa
idiv
fimuls
pusha
rol
xor
cli
mov
adc
cmp
sbb
mov
cmpsl
js
mov
pop
sbb
mov
xchg
or
and
xor
push
loopne
shlb
adc
aad
jbe
or
loop
pop
test
mov
sub
in
inc
mov
enter
daa
cs
and
xor
cmp
pop
xchg
test
andl
shl
lahf
inc
scas
sub
negl
add
mov
mull
pop
out
aad
subb
push
adc
fsubrl
and
outsb
fs
fistl
les
push
sbbb
mov
and
add
sbb
int
mov
lret
dec
scas
lcall
rorl
enter
lods
test
sbb
cmpsl
jg
adc
stc
jb
gs
mov
ss
push
cmp
das
pop
pop
testl
int
xor
push
in
cmp
mov
cs
mov
nop
jl
enter
into
push
es
imul
ret
int3
jl
push
mov
cmpsb
mov
std
cmpsl
out
ljmp
mov
in
inc
dec
int3
sti
adc
push
mov
mov
pop
scas
push
ja
cli
daa
jge
push
or
repnz
xchg
or
push
cmp
lea
xlat
push
pop
sub
xor
inc
es
pushf
jne
fldpi
fisttps
aad
clc
aam
sbb
jb
add
addr16
aaa
add
sub
adc
sahf
lea
call
xchg
loope
pop
mov
adcl
call
insl
pop
pop
lea
jnp
inc
arpl
jp
sbb
fldl
and
add
dec
sub
pop
xchg
das
cwtl
jle
cmc
mov
xor
icebp
adc
gs
shll
mov
push
push
lock
sbb
mov
out
gs
xchg
iret
ret
dec
inc
jg
xlat
imul
cmp
dec
test
sub
xor
subl
data16
and
cs
loopne
push
lds
cltd
mov
mov
mov
pavgb
inc
and
stc
jle
clc
sbb
fsubl
ljmp
rcrl
and
out
xchg
mov
out
mov
mov
dec
pop
sub
es
or
psllw
dec
cmpsl
enter
lcall
mov
sbb
mov
ret
data16
push
out
pop
add
dec
push
incl
aas
xor
jp
jns
jno
in
xchg
jl
cld
mov
cmpb
movsb
ja
dec
dec
dec
pop
loopne
mov
hlt
push
mov
push
mov
sub
aaa
jne
mov
sub
jle
bound
sub
cmp
jno
fadds
xchg
lock
arpl
and
push
jg
sbb
cli
pop
lds
push
cmp
orl
mov
lods
fistpll
xchg
pop
pop
insl
xchg
inc
clc
neg
jae
lods
adc
ljmp
mov
das
outsb
lods
stos
add
mov
sbb
push
mov
das
shrb
cmp
adc
jns
ret
arpl
jb
jo
shr
fwait
arpl
pop
pop
or
lret
inc
push
jl
outsl
push
add
lods
mov
pop
data16
fisubrs
lds
dec
mov
gs
mov
sbb
mov
push
lock
ljmp
xlat
aam
fdivl
lea
ja
jno
aad
jl
xor
loope
ret
std
pop
xor
insb
add
scas
push
inc
sti
and
aad
imul
cmpsb
inc
pop
sub
imul
sub
ljmp
stos
fidivrl
shl
loope
test
sub
lock
je
push
ds
iret
sub
jo
test
jl
fs
gs
in
sbb
pop
add
mov
xor
cmp
mov
test
mov
out
cmp
push
shl
and
outsb
xor
jecxz
push
jns
and
lock
out
mov
repz
xor
push
psubq
rorl
sub
inc
lcall
nop
mov
loope
xchg
pop
hlt
sahf
mov
les
xlat
mov
lret
mov
sbb
xor
add
push
adc
mov
pop
xor
fsubr
adc
test
xor
sbb
or
push
in
repz
xor
ret
outsl
outsl
lods
sub
loop
ds
imul
pop
fildl
pop
shlb
lods
push
xchg
loopne
out
jo
cli
in
jp
mov
scas
loope
sti
mov
or
xchg
lods
call
pop
int
int
int
cmpsl
sahf
pop
repz
mov
lret
and
cmp
dec
xlat
into
test
stos
adc
ja
jmp
out
subl
xchg
xchg
sbb
idiv
in
icebp
xor
jo
scas
pop
sbb
jle
xchg
xor
xor
lret
imul
adc
pop
pop
cmp
dec
sbb
pop
add
and
aas
sbb
and
movsb
jo
ja
inc
and
out
rcll
and
std
add
sbb
fdivrp
orb
jg
cld
jge
bswap
inc
dec
lea
lds
lock
and
inc
icebp
iret
mov
in
add
imul
insl
and
mov
mov
dec
sbb
lods
push
adc
pop
negb
hlt
arpl
jne
loop
and
or
loopne
jp
imul
hlt
frstor
jl
clc
pop
sub
roll
outsb
int3
ror
sub
sub
pop
stos
sbb
int
clc
cmp
push
lea
pop
push
dec
add
pop
sub
lods
push
js
stos
insb
jl
cmp
xchg
test
or
test
js
dec
pop
xchg
sub
or
mov
xchg
push
mov
bound
gs
jmp
dec
xor
test
jns
and
in
sub
xchg
dec
mov
mov
mov
les
cmpsb
mov
xor
mov
enter
cld
mov
insl
arpl
add
arpl
sbb
add
add
jmp
cmp
inc
andl
jg
jp
or
addr16
sub
push
inc
and
add
gs
jnp
pusha
push
jle
push
push
in
imull
pusha
push
dec
cmpsl
fistps
xchg
mov
jns
movsb
arpl
jae
jg
lods
test
mov
outsb
push
movsb
stos
jae
pop
xchg
inc
or
imull
and
scas
icebp
into
pop
push
mov
sub
addr16
ss
jmp
popa
jo
sbb
lret
inc
mov
dec
or
inc
pop
stc
inc
aam
js
xchg
and
ror
pop
mov
arpl
push
adc
ds
rorb
push
repnz
imul
movsb
mov
jge
sub
mov
sbb
dec
jno
push
mov
jl
es
cli
mov
push
cmpsb
mov
xor
movl
and
xchg
mov
push
dec
sbb
imul
jl
push
daa
sub
ret
sbb
loope
sti
push
sub
gs
ds
fnstenv
test
lahf
test
lcall
sub
xor
jge
dec
pop
xor
inc
js
dec
and
push
add
push
mov
jle
add
sub
and
outsb
sub
bound
jp
cmp
inc
push
or
sarb
and
outsl
push
push
jbe
int
mov
adc
xchg
aaa
call
sarl
adc
ror
sahf
pop
insb
mov
xor
sarb
ss
or
stc
loopne
jb
stc
cmp
jae
ss
out
cmp
movsl
pop
pop
testl
pushl
cmp
xor
or
fs
into
jle
push
cmc
mov
or
mov
enter
out
push
leave
adc
shll
add
outsl
pop
mov
lods
in
push
fs
lds
out
jp
cli
pop
aam
mov
sbb
outsb
jo
xchg
push
xor
fwait
cwtl
loopne
outsl
inc
pop
in
mov
adc
sarl
or
rep
pop
xchg
xchg
mov
cwtl
cmp
test
sub
push
fistpl
ret
sub
mov
mov
shll
push
mov
inc
daa
fistps
and
jns
jecxz
xchg
cmp
xor
adc
add
xchg
xchg
xlat
pop
out
ret
sbb
push
push
mov
sub
and
movsb
cmp
push
out
cltd
outsw
aas
mov
lahf
xor
rcr
loope
out
pop
testb
std
stos
clc
cwtl
hlt
imul
icebp
shrb
test
stos
lret
mov
xor
mov
dec
lock
out
das
and
data16
mov
ret
insl
shr
fstpl
insl
pop
clc
dec
dec
jp
jecxz
sub
mov
pusha
and
lods
aad
push
mov
jg
inc
and
fs
ds
sub
cltd
sub
cmpsb
mov
xchg
fldl
test
xchg
cmp
js
shll
mov
arpl
pop
fcoms
push
push
adc
dec
fwait
sbb
and
repz
sbb
in
push
jne
dec
insb
outsl
scas
test
cmovl
sti
ret
les
mov
or
cmp
fcoms
sub
mov
add
inc
nop
xor
push
jle
mov
sbb
lcall
mov
cmpl
dec
inc
insb
ret
mov
shrb
insl
dec
arpl
movsb
jne
pop
lea
sti
xor
jne
stc
orb
xor
out
pop
js
popa
divb
or
push
mov
cmp
and
gs
shlb
jbe
xor
in
cwtl
lds
jmp
xchg
mov
push
inc
push
xchg
xchg
jae
mov
push
jo
mov
xor
repnz
lods
and
stos
out
mov
cltd
sub
sbb
push
imul
iret
scas
push
push
push
push
pushl
inc
adc
mov
cmpsb
ret
or
push
mov
decb
shlb
fiaddl
and
int3
inc
nop
pop
pop
les
fdivp
add
shlb
shl
icebp
jg
mov
movsb
pop
insb
sbb
scas
int
jo
mov
and
sbb
lds
jge
das
or
lahf
jno
mov
jl
ljmp
mov
xor
and
movsb
and
add
sbb
out
cmpsb
sahf
xor
cli
adc
ja
out
sub
ss
xchg
and
scas
insb
cmp
adc
ds
mov
mov
and
pop
pop
sbb
dec
loopne
jno
popf
xor
pop
into
inc
cmp
sub
xor
pop
pop
mov
stos
push
dec
push
fsubrl
lret
lea
adc
push
inc
xchg
push
in
add
sbb
and
fildl
push
push
gs
sbb
fnstenv
lcall
iret
mov
in
sbb
or
sahf
std
test
test
test
or
fdivr
mov
jnp,pn
xchg
sahf
sbb
loope
loope
enter
pusha
inc
ljmp
pop
test
cmp
sub
or
aas
pop
cmc
addl
shl
filds
imul
xlat
faddl
jns
aad
fistps
lods
aam
repnz
pop
das
out
or
push
loope
mov
test
sbb
mov
orl
out
jo
jae
scas
fdecstp
cs
adc
push
xchg
push
pop
push
sbb
loopne
xchg
xlat
dec
loop
sub
inc
test
jmp
pop
jnp
push
push
std
aad
lock
lods
loop
dec
scas
xor
inc
cmp
push
dec
pushf
cs
jecxz
xor
xchg
lea
fs
adc
mov
dec
cmp
mov
pop
pop
jb
inc
sahf
mov
out
test
aas
push
xor
jb
iret
hlt
mov
pop
dec
ljmp
cmp
mov
mov
adc
mov
dec
icebp
xchg
xorl
and
pop
mov
jno
push
jb
iret
or
mov
rorl
xchg
ret
cld
cld
add
pusha
mov
fimuls
shlb
mov
push
jbe
inc
addl
lahf
lea
add
pop
pop
mov
mov
movl
flds
dec
push
push
mov
and
xchg
jl
xchg
ljmp
xor
sahf
stos
testb
mov
cwtl
fcoms
inc
out
addr16
outsl
add
or
and
push
adc
xchg
xchg
mov
inc
xchg
mov
inc
mov
xchg
pop
repnz
push
iret
mov
call
lcall
cmp
sub
and
fistps
xchg
jmp
adc
pop
ds
adc
xor
xor
in
mov
fsubr
mov
jne
inc
mov
out
ficoml
cwtl
bound
mov
xchg
sar
enter
push
out
mov
cmc
or
addr16
pop
jp
imul
pop
lret
cmp
jnp
sarl
gs
popf
pusha
xchg
fistps
push
sub
sbb
jae
push
movsb
push
xor
loopne
pop
mov
mov
in
ret
pop
or
xchg
lock
imul
mov
inc
adc
sub
hlt
clc
ret
jb
xlat
mov
andb
das
inc
mov
mov
inc
rclb
lret
add
push
pushf
pop
repz
rcr
jbe
lds
rol
movsb
mov
pop
cmp
movsb
mov
ror
mov
enter
and
or
in
mov
jno
fmuls
imul
shlb
jge
inc
scas
repnz
and
lcallw
push
in
out
int3
iret
cmpsb
and
in
loope
pusha
enter
daa
sub
push
xchg
sub
int3
xor
ds
mov
and
mov
push
xor
sbb
lahf
cmp
sbb
add
pop
sbb
js
cmp
call
push
cmpsb
fcoml
shrl
out
xor
xor
xor
xchg
aad
subb
mov
cmpsb
mov
test
push
pop
mov
mov
pop
xchg
lcall
in
in
pop
mov
sbb
in
sahf
mov
outsl
rolb
outsb
pop
sbb
dec
jmp
js
adc
addr16
or
outsl
lods
or
sbb
enter
int3
xor
or
stc
ret
cmpsl
test
inc
push
cs
dec
fwait
cmp
xor
push
outsl
dec
lret
jb
jnp
in
mov
add
arpl
bound
mov
fstp
out
sbb
mov
lock
cmp
int3
fwait
test
fdivrl
loopne
lods
daa
pop
sub
sahf
adc
in
fldcw
or
inc
sub
dec
sbb
sbb
subb
cmpb
xchg
mov
and
adc
cs
cmp
dec
push
mov
inc
dec
pop
mov
xor
pop
scas
add
rcrl
lea
loope
call
xchg
push
and
pushl
xorl
out
mov
test
jmp
xor
inc
iret
test
aas
imul
jl
mov
ljmp
push
mov
not
clc
in
std
clc
in
sbb
sbb
mov
adc
outsb
mov
jl
fdivrp
mov
lret
mov
shl
sub
das
loop
adc
lret
aam
push
popf
ret
mov
es
jo
aad
sbb
add
cmpsl
sub
xchg
mov
xchg
mov
lds
and
lcall
rcrb
xchg
test
jmp
mov
ljmp
xchg
lret
jge
or
mov
rcl
push
dec
pop
sub
subl
mov
mov
shufps
jb
cmp
adc
xor
jl
mov
pop
adc
aaa
xchg
stos
xchg
test
sbb
mov
or
test
fwait
ss
mov
jb
fadds
mov
loopne
mov
add
sub
in
hlt
jle
cmp
push
mov
jmp
stos
pop
stc
es
ljmp
sbb
out
xchg
mov
shlb
lea
popa
push
inc
out
mov
rep
jmp
popf
jge
orl
out
xchg
xchg
sub
dec
mov
out
jp
xchg
and
insb
cmpsb
push
mov
and
jle
outsl
lret
push
mull
sub
fistpll
mov
pop
dec
imul
and
cmpsb
jae
int3
cmp
idivb
popf
jg
movsb
mov
sub
jne
int3
addr16
sbb
in
imul
push
scas
sbb
lea
inc
iret
mov
mov
jmp
arpl
sub
mov
xor
push
push
neg
fisubrl
push
mov
sbb
mov
fidivrs
ficoms
rcrl
mov
fsubl
jo
mov
mov
clc
pop
dec
movsb
sub
pop
bound
inc
lret
stc
push
sbb
int
aaa
sti
cmp
inc
push
std
jno
and
xchg
out
sbb
ret
dec
andl
scas
rol
xchg
and
sahf
jmp
inc
scas
scas
push
mov
int3
inc
push
cmpsb
movsb
es
enter
daa
sub
cmp
loope
loope
mov
xor
ds
mov
movsl
mov
jo
loope
scas
push
add
sbb
cltd
jecxz
xchg
adc
js
nop
leave
pop
fcmovnb
mov
push
std
int3
rcr
arpl
push
cs
adc
or
cmc
fdivl
jnp
sti
mov
je
mov
or
push
pop
arpl
sub
out
pop
adc
aad
cmp
test
push
jnp
imulb
jae
dec
int
sahf
inc
out
test
mov
add
fsubrs
es
add
mov
int3
roll
hlt
fcom
mov
js
lahf
das
mov
xor
mov
sub
into
daa
arpl
cmc
prefetchnta
pop
test
mov
loop
sbb
insl
adc
fucomip
add
or
fwait
mov
inc
enter
in
mov
pop
sbb
pop
adc
jnp
fs
gs
shrb
out
call
dec
adc
xchg
call
les
shl
repz
jno
xlat
imul
adc
sub
push
sub
jbe
xchg
jbe
int3
in
sbb
cmp
lret
cs
aaa
cmp
mov
nop
bound
push
dec
insl
aas
push
inc
pusha
out
dec
mov
xorb
jecxz
dec
pop
cmp
jnp
call
adc
pop
pop
sub
dec
adc
mov
mov
inc
pop
fsincos
inc
ljmp
jb
leave
inc
mov
jae
sti
rcl
fistl
notb
sub
lahf
mov
jb
fidivrl
mov
jo
inc
adc
sub
mov
test
loope
cmp
test
mov
rcr
aam
xchg
mov
sbb
cltd
es
insl
mov
rol
cmpsl
sub
mov
movsl
pop
outsb
lods
push
out
mov
call
aas
xchg
mov
icebp
mov
test
rcl
or
lret
mov
push
inc
fnstsw
fists
ret
shrl
push
insb
pop
xlat
inc
shrl
and
push
stc
xchg
bound
or
sub
xchg
aad
mov
mov
xchg
dec
sbb
int
shlb
add
sahf
sbbl
cltd
sub
rcll
mov
xor
cmpsl
ret
dec
push
in
ficomps
xchg
xchg
or
mov
pop
mov
mov
sub
outsl
dec
sbb
mov
mov
fs
repz
mov
loope
out
cwtl
out
bound
and
xchg
push
mov
out
loop
sub
dec
aam
mov
lea
push
xchg
and
es
jnp
ds
jle
or
imul
inc
imul
add
mov
das
clc
push
jns
rcll
mov
popf
cmpsb
pop
mov
push
push
jg
aas
jp
xchg
sahf
push
stos
sbb
sub
imul
xchg
push
aam
jge
shlb
sbb
lcall
add
pop
arpl
inc
inc
mov
mov
sti
inc
rcr
stos
fisubl
addb
xchg
lods
int3
push
push
jno
push
adcb
pop
jb
shl
repz
add
mov
scas
and
mov
jbe
stos
mov
sbb
cltd
ljmp
mov
jl
cs
mov
stos
push
xor
xor
xor
push
scas
mov
mov
test
jnp
ljmp
dec
insb
in
scas
mov
pop
daa
sub
jle
mov
jl
dec
sbbl
jp
mov
sub
lahf
add
sbb
dec
add
pop
sub
mov
push
pop
shl
fistpll
jp
pop
sbb
punpckhdq
sbb
push
fidivs
lods
pop
clc
sub
push
xor
mov
jo
push
call
pop
mov
xchg
mov
fisttps
jl
mov
pusha
lcall
lock
pop
nop
inc
je
in
popa
and
sbb
push
mov
or
jge
rcrb
pop
jo
sbbb
jg
pop
divb
mov
push
fcoml
scas
loop
ss
inc
cmp
xchg
pop
icebp
testl
jmp
cmp
cmpxchg
repnz
pop
into
or
cmc
clc
outsl
xor
out
stc
outsl
or
xor
fimull
adc
loopne
add
outsb
push
pushw
lods
mov
sahf
out
lret
jmp
mov
in
cmp
test
gs
dec
loopne
cmp
pop
push
js
fstps
repnz
dec
xchg
lcall
cmp
adc
ja
dec
test
pushf
ja
jg
daa
mov
test
imull
nop
cmp
lret
push
inc
jae
jne
add
les
lods
jecxz
mov
xchg
into
stc
sub
out
sbb
and
pop
mov
loope
dec
cld
jns
fucomi
mov
pop
das
inc
adc
inc
add
jne
jb
xchg
sub
decb
fdiv
pop
lret
loop
inc
jae
cwtl
loopne
out
cltd
xchg
cmp
das
mov
repnz
push
pop
pop
lret
insl
adc
and
mov
push
mov
das
mov
xor
mov
pusha
cs
ret
test
out
fisubrl
or
data16
cmpsl
daa
dec
pusha
mov
mov
adc
xor
pop
xchg
jmp
adc
jns
or
sahf
test
jg
mov
lock
fucom
leave
xchg
inc
ljmp
or
subb
out
out
mov
push
aam
mov
test
add
and
orl
xchg
mov
or
xchg
iret
cmp
sbb
mov
push
or
push
pop
push
mov
cmpsl
add
sub
sti
ds
xor
addb
cwtl
xor
xchg
xchg
out
dec
imulb
mov
outsl
pusha
sub
dec
or
data16
pop
adc
mov
imul
mov
adcl
loop
in
jmp
xor
daa
out
mov
mov
inc
pushf
call
jp
fldenv
mov
lret
andb
jle
sahf
cmp
mov
leave
mov
divl
iret
xchg
aad
cmp
stc
lea
xchg
jae
hlt
and
popf
int
cmp
test
inc
fists
int
sub
push
aam
loopne
push
sbb
ret
cmp
jnp
enter
adc
cmp
dec
hlt
xchg
mov
arpl
outsl
inc
ret
or
lods
cltd
xchg
inc
dec
dec
xor
adc
repnz
xor
icebp
xchg
arpl
sbb
orb
rclb
and
push
dec
cmp
mov
push
lret
jbe
mov
jge
arpl
sbb
push
loopne
jns
jae
sub
jno
pop
jno
ljmp
push
adc
mov
jo
mov
push
and
stos
inc
test
inc
cltd
icebp
inc
jno
cmc
cmpsb
stos
jmp
in
xchg
out
mov
daa
daa
pop
stos
cmp
test
loope
push
sub
sbb
cmp
pop
mov
and
mov
lahf
pop
or
push
stos
xchg
add
js
xor
dec
mov
pop
not
cmp
stc
add
pop
fstpt
outsl
test
adc
push
sub
sub
in
adc
shr
mov
addl
inc
or
push
arpl
int
dec
sub
jle
lret
dec
in
mov
adc
lahf
ret
and
cmpb
jg
jecxz
mov
mov
je
inc
cmp
adc
push
fbstp
in
inc
es
dec
mov
dec
mov
movsb
xor
cwtl
insb
cmp
pop
bound
popa
leave
mov
cmc
popf
cmp
adc
out
outsl
loop
imulb
cmpsl
jl
cltd
ss
add
mov
jo
jmp
ret
out
push
jae
sub
int3
out
fstps
inc
incb
lret
and
loopne
sahf
jl
xchg
rcll
mov
add
aas
gs
scas
push
int3
sbb
int3
fbstp
dec
cmpl
mov
and
jmp
arpl
cs
call
jle
sbb
xor
fwait
mov
or
je
jae
jecxz
insl
xchg
movb
lea
jle
push
push
lcall
fcmovu
dec
out
or
pop
mov
pop
rorb
inc
and
and
jb
xchg
xlat
mov
mov
shll
xchg
negb
or
mov
jbe
mov
jbe
icebp
repz
cld
jg
add
fcoml
mov
mov
mov
scas
jmp
das
jg
fbld
scas
mov
ret
ret
cmp
es
inc
test
dec
adc
sub
cmpsl
es
fidivrs
shrl
lods
in
cwtl
nop
mov
cs
sbb
imul
pop
das
mov
rclb
pusha
mov
inc
pop
sbb
and
mov
pop
dec
push
scas
and
or
xchg
js
mov
test
mov
mov
push
stos
mov
xchg
out
dec
lret
arpl
scas
sbb
pavgw
jecxz
jbe
push
xor
xorb
fs
dec
outsl
rorb
test
push
xchg
hlt
sbb
sbb
xchg
fisttps
push
or
pop
add
mov
lcall
mov
mov
notb
mov
cli
mov
sub
jge
test
inc
dec
call
mov
dec
mov
mov
cwtl
sbb
dec
pop
dec
add
lds
cmp
bound
imul
int3
icebp
inc
xchg
incb
mov
out
aad
sub
inc
clc
mov
dec
lock
adc
and
inc
fdivrl
aas
jle
and
pusha
repnz
fists
cld
sub
out
ss
inc
inc
fcompp
jae
outsb
pop
push
aas
or
popf
hlt
xchg
xchg
mov
call
mov
jecxz
js
movsb
imul
xor
sti
pop
adc
and
or
fcomip
jnp
jbe
xchg
inc
lds
mov
daa
enter
cmp
sub
add
mov
fsubl
push
fisubs
int
lds
inc
shrb
push
repnz
addr16
cmp
sub
sbb
jge,pt
insl
push
sbb
jo
aaa
cmp
or
aam
adc
fstl
xor
jmp
xchg
nop
and
scas
test
adc
mov
in
jge
enter
daa
es
jnp
and
mov
push
cmp
sbb
and
xchg
lret
inc
xchg
sbb
pop
and
xor
addr16
mov
pop
push
lahf
or
or
pop
cwtl
sub
push
popf
sahf
push
add
faddl
iret
mov
outsb
jl
cmpsl
adc
pushf
dec
in
adc
pop
xorb
mov
mov
and
fs
mov
jb
pop
mov
push
jecxz
rorl
mov
scas
fwait
sahf
sub
jmp
push
mov
jg
outsb
push
mov
out
stc
sub
sarl
adc
insl
xor
ret
push
jle
pop
in
lret
push
xor
jbe
or
pop
pop
into
sarb
cmc
fs
xor
andl
enter
fs
add
data16
jp
lods
push
testl
out
mov
push
scas
push
mov
pushf
cs
sti
mov
sub
push
imul
pop
cmpsb
inc
xchg
adc
xchg
mov
repz
ljmp
hlt
jno
pop
pop
push
xlat
xchg
sub
fwait
cmpsb
adc
dec
xor
iret
cs
cs
test
or
mov
inc
cltd
ret
sahf
dec
out
popf
movsl
je
pop
std
jecxz
gs
inc
push
mov
call
lea
jmp
iret
imulb
rcrb
cs
jne
pop
inc
lods
daa
add
sbb
xchg
jb
jne
js
mov
rol
fsubrl
mul
insl
sar
mov
cwtl
push
cmp
pop
fstps
adc
sti
adc
lret
dec
pop
mov
jmp
jo
lock
popf
mov
pop
dec
mov
sub
push
jo
xlat
es
btc
insl
inc
dec
pop
mov
cmpsl
and
pop
sub
dec
and
adc
mov
and
add
pop
dec
mov
test
sub
push
jbe
jno
fnsave
pop
add
cmc
mov
sbb
shrl
out
outsb
stos
mov
push
out
ja
adc
jg
cmovb
or
jae
xor
sub
mov
addr16
dec
test
xchg
dec
xchg
fidivrs
inc
xchg
sti
mov
sub
jg
push
jg
add
and
stos
xor
int3
jns
out
in
xchg
xchg
xchg
je
cmp
mov
in
push
ja
divb
repnz
divb
push
adc
mov
nop
insl
dec
inc
cs
mov
add
out
xor
stos
jo
ret
shrb
mov
out
jl
sub
cmp
dec
test
xchg
jp
sti
repnz
mov
insb
push
hlt
jnp
das
loopne
jp
jp
xchg
jp
lea
int
jnp
and
inc
push
dec
in
out
dec
push
add
lcall
and
mov
daa
mov
pop
xchg
mov
hlt
xor
cs
scas
cmpsb
lea
push
test
cld
xor
cmp
leave
sub
sub
cmpsl
inc
enter
push
mov
mov
dec
mov
fidivrl
in
add
pop
ficomps
mov
out
push
mov
std
mov
cmp
fildl
movsb
pop
in
push
push
lahf
sub
pop
inc
sbb
adc
psubd
mov
sahf
jl
out
dec
add
xchg
push
fildl
lcall
scas
dec
mov
or
mov
push
fcoml
js
rcrl
sbb
fs
enter
daa
and
add
cmc
sub
sub
lret
mov
in
cmp
movsl
test
in
and
lahf
pop
imul
cmpsb
sbb
ljmp
cli
xor
and
dec
mov
pop
xlat
add
push
mov
mov
lods
inc
inc
sub
imul
hlt
data16
lret
jno
int3
add
push
mov
pop
dec
and
divl
int
in
sub
fs
or
xor
shl
sbb
orb
sbb
icebp
fbstp
scas
ficomps
mov
inc
push
stc
loope
fs
or
ss
mov
fadd
test
test
mov
in
imul
aas
mov
into
mov
xchg
sub
add
sti
sub
push
loop
cmp
imul
cld
jo
icebp
fisttpl
mov
xor
cli
test
mov
pop
gs
sti
aaa
out
inc
decb
adc
loopne
mov
xchg
adc
in
flds
test
inc
stos
repz
in
xchg
jecxz
dec
sbb
inc
loop
xlat
jmp
sub
dec
adc
adc
jno
pop
imul
into
jns
dec
jmp
pop
loop
shlw
je
out
fsub
or
hlt
dec
inc
mov
call
or
aaa
pop
shl
inc
andl
mov
pop
sbb
xor
inc
push
sub
aas
adc
xor
das
ss
lahf
ret
pcmpgtw
std
cmp
adc
mov
mov
addr16
mov
push
inc
lret
mov
outsl
push
mov
xchg
add
icebp
jne
das
cmp
sub
popf
das
js
shr
ret
push
pushf
test
jb
scas
insl
pop
je
dec
push
aad
cmpsl
and
mov
icebp
xchg
fwait
popa
add
ret
mov
je
push
mov
insl
iret
sarb
insb
xchg
test
rcrl
loope
adc
or
adc
xor
negb
hlt
roll
out
stos
nop
xchg
gs
adc
xchg
mov
cli
aas
pop
scas
mov
or
xor
daa
sti
mov
push
pop
dec
cmp
add
sbb
loopne
filds
test
or
mov
add
mov
adc
add
sbb
sbb
iret
jns
mov
in
rcll
mov
out
sub
pop
mov
adc
in
push
mov
jbe
mov
jbe
fisttpl
add
jne
mov
filds
out
adc
jecxz
fwait
sbb
xchg
cld
testb
cwtl
dec
sub
ss
out
test
and
adcb
pop
das
jle
or
in
out
test
sarl
push
pushf
movsb
xchg
dec
mov
pop
pop
popf
jg
pop
adc
jae
sub
gs
inc
pusha
mov
pop
and
cli
sbb
mov
or
push
lock
dec
adc
sub
cwtl
push
or
xor
dec
daa
hlt
jne
arpl
inc
lret
or
push
int3
test
fisubrl
xlat
add
add
cltd
pop
or
xor
jbe
insb
shlb
mov
push
and
mov
xchg
ret
inc
fmul
jge
das
cmp
outsl
insb
pushf
aaa
mov
or
add
stos
jno
test
loope
jb
xor
mov
mov
scas
sub
xchg
mov
adc
push
cmp
cmpsb
xor
in
dec
sub
in
and
fidivrl
mov
mov
sub
loopne
cmp
jnp
movsl
scas
mov
cmp
and
sbb
aas
add
lret
leave
dec
aaa
xchg
cvtdq2ps
fxch
js
jmp
pop
push
pop
lods
push
mov
push
mov
scas
fcompl
push
sub
popf
dec
adc
push
aas
stos
sarb
loop
pop
aas
push
mov
test
push
insb
inc
int
jp
sub
push
sysret
mov
xchg
ja
cmp
sbb
sahf
jb
dec
test
sbb
jg
xchg
cmpsb
mov
into
jae
cwtl
sbb
adc
jmp
inc
ss
xchg
cmp
jge
testl
ds
xchg
sub
or
ljmp
push
adc
das
loop
inc
adc
adc
das
addl
mov
data16
shrd
add
sar
mov
push
mov
jb
xchg
sti
out
cmp
fcomi
shll
pop
loopne
inc
jmp
in
mov
fnstenv
les
stos
repz
fs
cmpsb
jnp
sbb
jge
inc
xlat
add
pusha
mov
cmpsb
jns
pushf
and
cs
mov
dec
dec
and
test
lods
xchg
je
sub
jecxz
and
lea
in
call
mov
rcrb
xchg
mov
test
mov
movsb
cmp
incb
cli
and
dec
push
aas
mov
jb,pt
lret
out
mov
rcrl
mulb
or
loop
js
int3
fidivl
sti
shlb
js
mov
add
lret
sub
inc
mov
pop
shl
dec
bound
mov
xchg
pop
out
mov
pop
ret
in
xor
cmc
add
dec
push
mov
cmpsl
and
mov
sbb
lods
sub
shlb
mov
xor
mov
mov
cltd
in
push
mov
sub
push
imull
jnp
jg
mov
imul
xchg
xor
adc
rcr
imul
stos
jg
shr
jno
xchg
add
mov
add
push
or
push
jg
dec
js
mov
insl
int
dec
movsb
mov
nop
xchg
xchg
hlt
sbb
xor
add
mov
push
scas
jnp
inc
push
mov
cmp
xchg
add
nop
pushl
insb
xor
gs
sub
in
pop
stos
xchg
adc
mov
jg
mov
pop
ret
bound
mov
dec
fdivrs
and
sbb
into
shll
cmpl
repz
bound
mov
int3
xchg
pop
js
subl
aam
cltd
and
add
cmpb
in
dec
and
je
insb
sub
jle
push
in
mov
pusha
ret
sti
fbstp
mov
pop
xchg
push
inc
sub
test
push
mov
es
imul
sbb
xchg
sbb
push
sbb
sbb
repz
imul
scas
insb
ljmp
pop
adc
div
sub
dec
stos
sbb
sbb
fdiv
shrb
arpl
daa
pop
or
cwtl
lret
testb
insl
fcmovu
sub
add
sti
cltd
int3
popf
xlat
push
cmp
lods
fimuls
add
std
or
adc
mov
jae
movsb
outsl
pop
jbe
push
mov
jbe
test
mov
mov
aaa
jne
pop
or
lahf
sub
jl
fisttpl
dec
loope
pop
push
mov
dec
divl
pop
push
scas
or
sbb
jb
filds
loop
cmpsb
mov
test
enter
daa
and
cmp
jg
sub
lret
dec
mov
fisubs
mov
fstps
idivb
cld
add
cmp
lahf
rcl
imul
xchg
dec
xchg
js
mov
fisubrl
or
push
pop
push
enter
subb
xchg
xchg
outsb
movsl
ret
test
fdivrs
das
pop
sub
mov
xchg
push
mov
and
pop
push
outsl
jns
int
repz
push
and
or
insb
jmp
rorl
or
je
sahf
adc
enter
scas
jg
sub
mov
xchg
lret
stc
dec
in
fs
icebp
adc
mov
ss
mov
cmp
cmp
fdivp
inc
rorl
push
aas
sbb
cmp
cmp
lds
or
scas
jge
mov
adc
ja
pop
imul
scas
or
cli
and
scas
out
out
or
mov
fisttpll
sti
xchg
rcr
shll
push
nop
clc
mov
adc
std
mov
les
sub
jmp
dec
xchg
imul
mov
fs
adc
fistps
stos
cs
mov
loop
test
repnz
shlb
dec
push
sub
mov
sub
stos
dec
orb
push
fcomps
or
cmc
adcl
in
pop
mov
ret
xchg
aas
dec
mov
mov
mov
lods
shrl
std
mov
cwtl
xchg
into
mov
sbb
out
pop
cmp
dec
sub
cld
sub
lods
mov
or
adc
sti
inc
xchg
mov
cmpsb
aam
or
ret
je
and
js
nop
insl
es
cmpsl
and
xchg
das
lret
cwtl
out
mov
mov
cmp
push
mov
stos
std
pop
rcrb
imul
scas
popa
mov
movsb
arpl
pop
dec
clc
cmpsb
sbb
je
fsubr
je
xor
pop
std
out
nop
insb
xchg
dec
jp
push
sbb
maxps
inc
add
in
or
ja
cltd
sbb
icebp
xchg
xchg
dec
or
test
movsb
xor
sbb
xchg
inc
pop
add
or
lds
push
out
inc
add
jae
xchg
call
xchg
xchg
xor
sub
in
inc
jle
popa
adc
mov
cmpl
push
mov
ja
cltd
pop
dec
lret
scas
xor
movsl
lret
mov
pop
dec
jmp
cmp
mov
out
shlb
jmpw
push
sub
cmpl
shl
cmp
subb
xor
xor
jp
cmc
fisubl
adc
insb
fdivrs
add
jle
mov
shll
mov
xchg
dec
mov
hlt
test
jno
jae
std
lock
dec
sbb
popf
nop
mov
or
push
loopne
icebp
lods
xchg
test
js
and
cmp
mov
scas
iret
push
mov
adc
aaa
xchg
iret
push
xchg
ffree
pop
or
popl
hlt
or
pushf
arpl
mov
xchg
push
lret
ficoml
push
jp
mov
in
pop
imul
lds
int3
mov
not
xchg
cmp
mov
movsb
cli
pcmpeqd
jecxz
jbe
cmpsb
fdivrl
xor
in
jo
xor
cld
or
add
jno
xadd
mov
push
test
or
out
imul
and
ficoml
push
cmp
shrl
cmpsb
cmp
leave
in
sbb
sub
dec
lret
and
pop
cmp
orb
cmp
sub
xchg
cmp
mov
stos
movsl
mov
aad
lahf
mov
dec
xlat
sbb
cli
xor
push
sbb
xor
mov
sbb
pop
xchg
cltd
iret
push
inc
cmp
cmp
scas
mov
pop
outsb
or
cmp
or
sti
addb
clc
mov
iret
inc
and
or
sub
ds
sub
mov
mov
pop
lcall
repz
call
sahf
mov
rcrl
addb
pop
jg
lds
imul
fs
mov
adc
icebp
xor
repz
lret
mov
cmp
xor
into
pop
dec
cmc
xorb
or
outsl
inc
jns
loop
hlt
cmp
movsb
add
adc
iret
and
sub
data16
ja
xrelease
mov
cmp
sbb
add
in
dec
add
jmp
mov
fildll
loopne
rcr
and
sbb
in
xchg
les
xlat
repz
loope
sbb
repz
stos
sub
cmp
jmp
sbb
adc
popa
nop
pop
shrl
push
push
inc
in
cmpsl
dec
lret
dec
adc
mov
lcall
into
aad
cmp
mov
push
pop
in
or
subl
add
add
dec
js
enter
cmpsl
shll
aas
out
fs
jb
popf
and
push
shll
inc
jmp
sar
xchg
dec
imul
and
inc
cmpsl
pop
mov
mov
icebp
es
cld
push
mov
test
jne
out
push
pop
sbb
add
das
fimull
mov
andb
ret
add
fsubrl
loope
dec
dec
stos
mov
and
mov
inc
cmp
add
leave
mov
inc
fucomi
mov
lret
shlb
test
addl
into
clc
and
clc
loope
xchg
xchg
mov
mov
out
jmp
mov
pop
test
stos
pop
mov
out
cmp
push
mul
mov
mov
sub
xor
push
sbb
jae
cwtl
dec
jb
add
leave
push
out
stc
into
addb
test
xchg
fwait
scas
in
out
push
mov
mov
dec
push
test
mov
pushl
sub
in
js
xchg
mov
das
mov
sti
mov
pop
shr
shlb
sub
adc
add
mov
or
pushl
repz
out
mov
add
mov
movsl
xchg
cmc
imul
mov
mov
cltd
hlt
or
jo
addr16
in
and
clc
jnp
jle
jle
or
loop
aam
stc
mov
mov
xchg
mov
sub
xchg
jae
lret
cmp
push
ret
jg
mov
dec
mov
and
dec
xchg
incl
mov
iret
inc
stc
imul
sbb
lds
gs
mov
adc
outsb
fwait
inc
leave
push
cmp
hlt
push
repnz
imul
aam
mov
push
dec
stos
dec
fiaddl
mov
notl
jae
int
lcall
lds
aad
shlb
repnz
repnz
movsb
test
adc
pop
sahf
jbe
cmp
jge
lcall
aaa
repz
or
adc
cmpl
dec
mov
dec
add
mov
push
scas
leave
mov
and
nop
test
or
test
cmpsb
mov
jo
enter
daa
and
sahf
loope
popa
jmp
cmp
xor
movsl
les
jp
mov
out
jp
add
adc
xor
sbb
pop
loope
inc
js
adc
pop
sarl
push
das
pop
push
mov
xchg
fcompl
add
push
insb
insb
outsb
imul
adc
jecxz
es
in
cmpsl
and
test
mov
repz
and
mov
push
jne
addr16
xchg
aad
dec
xorb
or
and
cmp
mov
int
jbe
sahf
pop
jae
test
iret
in
jg
mov
mov
xchg
cmpsl
adc
sbb
cmp
scas
roll
lret
mov
cmp
je
or
mov
xchg
cmc
inc
push
test
addr16
aam
and
out
fwait
xor
adc
sbb
jmp
jmp
lret
mov
xor
push
adc
mov
mov
sar
repz
gs
stos
loopne
popf
add
sti
scas
adc
sti
ffree
cmp
sbb
dec
shll
cmp
xlat
xlat
ret
sub
into
jecxz
stos
shrb
jmp
data16
in
gs
cmp
dec
gs
inc
clc
xchg
xchg
adc
je
fadds
push
mov
call
or
sbb
fsubr
add
cld
js
xor
pop
inc
dec
and
pushf
aas
lea
jb
aam
mov
lret
mov
jno
das
repnz
std
xlat
push
js
std
hlt
jl
rolb
cwtl
icebp
std
stc
movsl
cld
xorl
mov
lock
lahf
sub
mov
adc
sub
fcmovbe
in
jge
ret
xchg
push
in
es
cmpsb
insl
hlt
ja
dec
inc
sbb
cmpsl
and
movsb
popa
pop
rcrb
lods
outsb
adc
jg
mov
add
pop
and
or
cmp
rolb
inc
mov
mov
bound
shll
clc
sbb
popa
xchg
repnz
icebp
shl
pop
rcrl
stos
dec
mov
int3
xchg
fcmovu
scas
push
shrl
push
add
hlt
in
das
shlb
jbe
sbb
test
xchg
stc
xchg
fistps
lods
inc
mov
or
sbb
lret
push
sub
ds
call
xor
mov
in
add
xchg
lcall
sbb
mov
mov
movsb
ja
inc
mov
mov
scas
push
mov
xor
dec
mov
push
jne
ret
xchg
sbb
out
nop
jecxz
out
add
xchg
shl
adcl
out
mov
sub
and
sbbb
pop
mov
inc
and
insb
imul
jle
inc
jmp
pusha
xchg
repz
rorb
xchg
lcall
inc
xchg
jae
fdiv
push
rcr
jbe
fisubs
push
bound
stos
xlat
pop
rcll
jp
aas
imul
mov
or
data16
call
adc
jge
arpl
mov
pop
mov
or
or
int
enter
clc
xorl
pop
leave
rcll
push
lds
pop
or
repnz
inc
cmp
adc
push
repz
jbe
inc
cli
jge
popa
adc
pop
push
pop
aaa
mov
aad
into
fidivrs
jno
add
jl
add
shlb
imul
jge
loopne
or
scas
test
mov
in
mov
pop
push
rorl
dec
inc
pop
jp
cmpsb
aas
jecxz
in
out
inc
enter
daa
and
lret
pop
mov
push
jle
cmp
xchg
ds
stos
andl
sbb
lahf
clc
sub
pop
sbb
cmp
add
jp
xor
ss
pop
or
js
pushf
sbb
push
into
adc
jns
faddl
mov
inc
jg
outsb
into
ljmp
mov
shll
mov
push
loope
hlt
inc
add
js
inc
int
mov
xchg
pop
mov
cmc
lcall
xlat
mov
fsubrs
cmc
sbb
mov
ss
sti
jg
or
adc
clc
stc
je
push
fs
loopne
daa
int
ss
cmp
imul
imul
lds
xor
mov
or
dec
and
test
ret
outsl
add
mov
push
dec
adc
mov
jne
orb
mov
sub
mov
push
loope
sti
mov
add
in
inc
mov
pop
pusha
pop
out
adc
inc
les
jecxz
mov
cli
sbb
imul
jl
add
sub
lahf
push
cs
flds
aad
out
nop
adc
mov
xchg
jp
je
gs
push
lret
pop
ret
push
std
sub
insl
popf
movl
xchg
cmp
daa
pop
inc
inc
testb
adc
frstor
pop
jb
aas
mov
push
stos
rcrw
xor
ss
mov
std
orl
lods
jg
lret
in
cmp
loopne
mov
mov
pusha
push
mov
jo
das
aam
mov
ret
and
add
insl
fcomi
push
dec
ds
cmpsl
pop
mov
mov
je
dec
lods
fldenv
mov
and
and
test
int3
pop
or
rcr
cwtl
insb
cltd
rcll
outsl
out
push
mov
cmpsb
movsl
push
add
clc
fstpl
arpl
push
fstps
dec
pop
ljmp
add
clc
stos
cmp
pop
xchg
and
mov
lods
mov
jl
aad
xor
or
add
xchg
push
dec
inc
shl
add
daa
sbb
pop
je
inc
pop
push
rorb
sti
fwait
or
cmpsl
push
shlb
add
les
xorb
xchg
scas
jns
addr16
in
loope
xchg
dec
mov
mov
dec
and
inc
and
loopne
dec
movsb
ret
lahf
mov
push
into
mov
mov
jge
jne
hlt
xchg
mov
pop
lahf
out
outsl
aam
bound
pop
jmp
mov
xlat
out
in
fs
sbb
pop
in
popf
inc
pop
and
aam
aam
xchg
jnp
mov
sti
in
pushf
adc
outsb
mov
out
repnz
rcr
inc
xchg
frndint
jae
xor
push
xchg
insb
mov
xchg
push
mov
les
lods
jne
sbb
loop
imul
jb
clc
adc
push
push
loop
adc
xchg
int
xchg
pop
xchg
leave
hlt
or
hlt
in
or
fisttps
jle
mov
cmp
pop
fisubrl
ds
int3
dec
pop
outsl
pop
clc
jnp
ficomps
sub
shr
hlt
mov
out
enter
push
xchg
adc
jbe
ret
push
test
sbb
jg
aaa
jno
repnz
pop
or
jl
mov
dec
popf
ds
xor
ror
xchg
mov
push
sahf
outsl
push
inc
jmp
pop
dec
in
into
gs
enter
daa
pop
aam
cmp
shrl
cmp
in
mov
mov
out
movsl
shrb
xor
inc
xor
sbb
mov
push
pop
das
add
cmc
mov
ret
and
fsubrl
push
sub
xor
dec
adc
cltd
add
stos
add
cmpb
pop
mov
jno
lahf
xor
cld
push
jnp
in
jae
aaa
sub
sbb
pop
xrstors
push
mov
and
jp
and
rcrb
dec
dec
adcb
jg
mov
mov
mov
std
fs
push
inc
adc
je
add
sub
testl
or
xchg
ja
cmp
jb
or
aam
into
add
jae
xor
pushf
inc
loop
adcb
jg
adc
mov
add
test
mov
out
out
cli
mov
jecxz
in
shr
mov
add
pop
stos
test
dec
add
cld
xchg
push
pop
jg
or
push
test
int
repz
mov
xchg
jne
sub
cmp
xchg
sub
mov
pushf
jp
ret
xor
cs
lret
cmp
jbe
or
and
inc
push
mov
dec
xor
jne
data16
push
pop
push
lea
mov
inc
jb
movl
mov
dec
aas
mov
adc
test
and
sub
aas
lret
adc
mov
loope
psrlq
sub
divb
loope
cwtl
jae
sbb
mov
pop
mov
lret
push
out
mov
mov
mov
lods
lret
sub
das
ja
iret
mov
fists
aas
ss
mov
andl
ret
dec
cmp
dec
mov
mov
lods
inc
test
mov
push
inc
stc
mov
daa
mov
shrb
or
jp
cmp
mov
push
clc
xchg
inc
cmp
inc
out
test
pop
test
stos
sub
out
bound
jb
xchg
pand
stc
or
cmp
jecxz
or
xchg
dec
cmpsl
mov
xrelease
jg
adc
inc
mov
pop
or
lds
fwait
cmp
je
jae
sbb
filds
push
push
aas
sub
pop
adc
arpl
xchg
popf
cmp
in
out
xorb
add
pusha
dec
xchg
xchg
mov
adc
dec
dec
ja
jo
mov
mov
out
dec
out
bound
pop
imul
rcrl
sbb
sbb
sbb
and
adc
jnp
and
outsl
pushf
shl
push
sbb
lret
fisttps
fldl
pop
cmpsb
xor
popf
xchg
mov
push
push
outsl
ljmp
loop
push
loopne
mov
mov
data16
sbb
outsl
sbb
shlb
lcall
iret
rorb
ret
stc
leave
imul
hlt
aaa
adc
fldl
mov
push
dec
scas
ficompl
sbb
mov
push
nop
pop
daa
cli
in
cmp
into
lds
push
dec
mov
inc
cmpb
and
xchg
push
push
jbe
mov
jge
rolb
aaa
xor
sbb
mov
ljmp
cmp
dec
or
pop
push
adc
jge
rcrl
scas
mov
adc
test
imul
in
mov
pop
enter
daa
push
xor
psraw
lds
fdivrs
movsl
fnstenv
frstor
xchg
stos
sub
adc
mov
push
xor
add
pop
push
call
pop
nop
inc
cmp
sub
push
mov
mov
sub
icebp
mov
adc
je
arpl
dec
push
dec
mov
push
adc
xchg
mov
jle
test
fisubrl
ja
xchg
lret
adc
andps
sahf
inc
jns
test
xchg
dec
jg
pop
xchg
mov
push
cmp
jg
lds
add
dec
jb
cmp
filds
idiv
xorl
xor
sub
das
xor
dec
mov
call
cmp
xor
cmpsb
outsl
mov
ret
sbbb
mov
sbb
xchg
std
out
sub
cli
jmp
or
hlt
adc
sti
add
mov
orb
sti
mov
loopne
stos
push
pop
sahf
xor
adc
xchg
rcr
rcrl
mov
jb
xchg
cmp
sbb
fbld
stos
sub
xchg
mov
cs
and
mov
inc
aad
insb
sbb
dec
andb
inc
xor
cmpsl
cmp
jecxz
mov
pop
xchg
call
test
ret
pop
mov
jmp
dec
sub
fstpt
pop
clc
inc
in
loopne
adc
add
jb
mov
mov
insb
mov
mov
clc
pop
pop
std
int3
jge
cwtl
cs
shlb
mov
addb
add
fimull
outsb
mov
das
push
xchg
sub
jge
dec
push
es
aas
insb
jno
pop
mov
insl
test
fisubs
mov
mov
jnp
mov
imul
aas
mov
inc
mov
sarb
sti
cltd
das
bound
mov
cld
pushf
push
mov
jae
int
lods
xchg
scas
xor
sarb
xor
ss
lds
xchg
scas
fstps
bound
fildl
push
inc
testb
push
pop
xor
inc
sahf
mov
jg
mov
test
dec
sbb
sbb
jmp
mov
cltd
and
push
movsl
fiadds
cli
scas
pushl
push
fdivs
popa
pop
push
in
lcall
jmp
pop
jne
mov
movsb
inc
dec
mov
sub
lods
sbb
sbb
lea
mov
sbb
out
sub
lods
jmp
and
addl
jl
or
sub
adc
mull
fsubrl
add
pop
insb
stos
ret
pop
or
push
pusha
gs
xchg
sub
lahf
negl
xor
jae
stos
adc
sbb
popf
push
sub
mov
pop
rolb
xchg
pop
jp
sbb
rorl
scas
mov
int3
int
cmp
xlat
iret
xor
ret
js
loop
mov
xorb
std
mov
push
or
jp
test
ficoml
sub
int3
pop
xchg
rcrb
cmp
adc
shlb
mov
repnz
outsl
cwtl
cmp
insb
push
loopne
bound
sbb
mov
xchg
and
out
mov
or
or
cwtl
cwtl
dec
dec
jnp
cmp
xor
sbb
out
scas
inc
shrb
and
test
xor
pop
inc
pop
jbe
cmpsb
enter
pushf
jmp
enter
daa
sbb
adc
sub
cmpsb
dec
cmp
ds
shrl
and
jp
push
das
adc
call
dec
lods
add
mov
xor
addr16
ljmp
js
mov
pop
iret
cmp
push
in
push
adc
jecxz
add
push
push
outsb
mull
jle
dec
adc
sbbb
mov
fnstenv
sbb
dec
int
orb
add
imull
mov
dec
xchg
sbb
or
mov
jg
or
mov
arpl
stc
cltd
add
mov
inc
adc
lods
ss
out
ljmp
idivl
lahf
shlb
inc
push
cwtl
cmp
rcl
mov
xchg
into
lret
dec
and
arpl
xor
cwtl
or
loop
aaa
sub
pop
lcall
sub
or
test
nop
push
sub
cld
out
sbb
stos
mov
pop
call
inc
mov
jge
loopne
fcomps
mov
mov
fprem
outsl
pop
lods
out
adc
lds
xchg
sti
int3
repnz
sbb
xlat
mov
aaa
pop
adc
xchg
dec
pushf
rcl
push
jmp
push
shrl
jo
dec
aad
inc
stos
nop
cmpsb
clc
and
loope
ds
inc
push
and
sbb
shl
test
int3
popa
push
decl
aaa
aaa
jle
add
aaa
pop
imul
sbbl
enter
cmpsb
inc
pop
xor
inc
imul
inc
jne,pn
aas
or
add
mov
idivl
xchg
cmp
enter
das
mov
test
mov
dec
xchg
cld
sub
hlt
cmpsl
mov
xchg
xor
or
xor
in
sub
push
aam
push
ss
into
push
fs
sub
popf
stos
cmpsl
sbb
xor
mov
inc
mov
cmp
xor
fs
mov
jns
enter
pop
rclb
xchg
cltd
pop
aas
test
or
push
fstl
into
pop
xchg
out
addr16
inc
subps
movsl
hlt
stos
or
outsb
out
sub
xchg
testb
cmp
or
add
out
or
pushl
loope
mov
add
dec
jne
je
jbe
movsb
xchg
sbb
inc
in
mov
fwait
cltd
out
lahf
push
mov
test
add
test
jns
dec
mov
xchg
cmp
sub
jg
cmp
jb
ja
int3
pop
dec
jge
dec
mov
and
cmp
cmp
in
mov
lcall
xor
xchg
jmp
in
or
dec
les
push
int
push
pop
in
addr16
lret
jp
in
and
cmpl
mov
and
add
push
xchg
fisttps
xchg
out
aam
adc
cli
inc
mov
mov
push
fst
dec
popf
jp
fstpt
pop
stos
ret
stos
mov
mov
sbb
pop
inc
imul
adc
sub
ret
adc
sub
ret
aas
leave
pop
xchg
pop
hlt
int
hlt
arpl
mov
jecxz
rorl
fs
inc
cld
xchg
fcmovb
and
add
test
loopne
test
fiadds
sbb
sarb
add
call
mov
movsb
cmp
insb
push
das
movsl
cmp
repnz
jge
aam
sbb
scas
cli
inc
or
mov
inc
dec
ljmp
xor
ja
push
scas
and
scas
and
cli
pop
test
decl
mov
addl
sub
pop
daa
sbb
push
cmp
subb
push
pop
cltd
cmp
sbb
movsl
out
call
lahf
je
lods
push
mov
lcall
inc
outsl
sub
lods
popf
mov
bound
pop
push
mov
push
push
push
push
push
mov
sub
jae
outsb
pop
js
adc
sub
and
jb
xchg
orb
push
test
add
mov
jb
test
jmp
shrl
and
sbb
xchg
adc
andb
xlat
mov
xchg
push
inc
sbb
inc
adc
pop
ss
ljmp
push
lret
loope
jge
aad
mulb
cmp
and
mov
scas
mov
call
outsl
jl
pop
loop
loope
imul
jmp
data16
loop
mov
out
cmp
mov
lret
sti
pop
mov
fs
or
pop
fcoml
out
adc
or
fldcw
addr16
les
mov
xchg
mov
repnz
push
or
sub
inc
adc
into
pushf
jnp
mov
pop
and
rcrl
aad
andl
inc
cwtl
insl
inc
push
cmpb
out
jae
cld
jecxz
mov
fs
lea
divl
sbbl
push
pop
sub
add
insb
pop
rcrl
cmp
cmp
aas
test
sub
cmc
in
mov
sbbb
rcl
and
std
sbb
cwtl
movsb
and
loope
xchg
mov
xlat
cld
pop
lock
mov
jae
mov
jge
lock
adc
mov
dec
fstl
ret
pop
jns
es
dec
sub
lret
dec
xor
rcl
adc
mov
scas
pop
or
mov
test
stos
cltd
popf
fwait
test
bound
jge
lock
inc
repnz
ljmp
mov
stos
imull
sbb
sbb
daa
psubb
add
or
shl
mov
test
xchg
ret
std
xor
sub
lock
jnp
pop
or
ja
fwait
enter
pop
mov
add
xor
outsl
mov
fidivrl
loop
in
movsb
cs
mov
ret
push
mov
in
das
pop
xor
ja
ja
dec
jo
xor
mov
pop
inc
rorl
add
test
mov
sub
jmp
ret
sub
jmp
mov
insb
andl
push
out
repz
or
jp
xlat
xchg
and
pop
test
insb
pusha
jle
ret
and
or
sub
fwait
and
fildll
xor
dec
and
inc
mov
xor
push
mov
sti
fs
popf
push
pusha
stos
push
mov
rcll
jne
rcll
scas
test
push
outsl
inc
ficoms
out
jle
iret
out
ja
ret
jge
shlb
hlt
sbb
arpl
cld
lcall
jmp
push
inc
cltd
pop
fidivl
fwait
add
push
jno
mov
lods
fisubs
push
rclb
mov
cmp
lods
cmp
jo
movsb
movl
mov
stos
cmp
add
out
insl
or
loope
jl
int3
mov
loopne
push
mov
cmp
jo
mov
adc
test
lret
inc
and
cltd
inc
in
push
repz
daa
sbb
cmp
add
sub
in
cmp
pop
cs
pop
in
movsl
out
cmp
and
fcomps
mov
loopne
cmp
xor
out
jo
cs
lret
cmc
cmp
sti
sbb
dec
mov
push
ja
push
mov
je
sub
pop
popa
outsb
mov
mov
rolb
call
xor
lret
stos
dec
and
incl
bswap
dec
sub
jno
pop
add
stc
lcall
or
rol
mov
sahf
sub
or
mov
jbe
mov
repz
pop
sub
adc
push
popa
cmp
adc
div
cmp
lock
js
repnz
cli
cmp
pop
cmpsb
or
sbb
insl
xor
add
loop
mov
mov
sbb
sbb
data16
mov
pop
xchg
cli
adcb
mov
in
xor
decl
jmp
aas
lock
insl
jno
sti
ficoms
mov
add
popa
xchg
arpl
pop
xchg
orl
jns
cmp
imul
movsb
test
mov
pop
pushf
es
jmp
cli
test
ss
cld
nop
pop
pusha
dec
lahf
pop
mov
dec
or
lcall
xchg
addr16
pusha
lea
jno
call
add
pop
orl
fisttpl
mov
fcomp
inc
jns
mov
nopl
inc
jb
fs
mov
or
push
ljmp
stos
sub
dec
pop
das
mov
iret
fwait
cld
sbbl
adc
out
mov
mov
jg
sahf
das
repz
sub
lahf
aam
mov
ret
in
in
es
stos
sub
dec
and
clc
and
out
je
lock
mov
mov
jb
cli
mov
mov
std
cwtd
aam
and
cli
add
ret
ficoms
xchg
insb
bound
or
psrlw
or
xor
mov
out
fistpl
test
repz
add
jg
xor
pop
shll
mov
test
xchg
popf
test
inc
mov
out
adc
mov
mul
into
push
ljmp
add
mov
push
hlt
lods
xor
jo
jecxz
mov
es
fldcw
jae
mov
test
mov
ja
cmpsl
dec
dec
arpl
jnp
mov
dec
add
movsl
jne
into
and
lret
bound
sub
in
inc
xchg
adcb
out
xchg
inc
sub
add
xchg
addr16
jae
pushf
jle
and
dec
add
test
gs
adc
mov
dec
pusha
pushl
fisttps
jmp
pop
orb
jae
fcmovne
push
arpl
daa
popf
enter
lods
fistps
push
fsub
dec
stos
mov
xchg
pusha
out
inc
imul
and
out
ljmp
inc
xlat
iret
dec
cmp
ret
leave
inc
rcrb
arpl
cmpb
mov
or
data16
sub
sbb
fcmovne
loopne
xor
lcall
mov
and
repnz
cmp
pushf
push
push
int
pcmpeqd
add
sbb
sbb
or
inc
sarb
dec
enter
pushf
inc
inc
xor
sub
cs
and
fisubrs
xchg
aas
scas
inc
mov
pop
cmpsb
push
sbb
in
push
loop
enter
daa
sbb
xor
mov
repnz
cmp
mov
movsl
cmc
push
pop
and
roll
push
xor
popa
sbb
sbb
es
fucomi
xor
mov
jmp
repnz
movsl
js
xchg
pop
mov
sub
push
push
xchg
rcr
pop
addr16
add
outsb
and
ret
pop
shl
mov
in
cwtl
dec
rorl
push
sbb
push
mov
xchg
int
dec
int
stos
je
pop
subb
mov
jmp
mov
sbb
sbb
fdivs
lcall
mov
fs
out
adc
and
hlt
cmp
lret
mov
ror
fmul
xchg
xor
xor
cmp
insb
xor
add
mov
cmc
mov
push
outsl
cmp
loop,pt
rorb
pop
js
adc
insl
into
add
jnp
xchg
hlt
shrl
sbb
dec
cli
mov
sbb
in
mov
ss
decb
in
pop
ss
add
fcompl
or
adc
push
fstps
sbb
xor
xchg
inc
xchg
rcrl
lret
jnp
cmc
sub
aas
adc
push
jmp
xchg
inc
cs
shrl
aad
sub
dec
sbb
inc
jge
xchg
dec
andl
or
repz
push
movsb
lea
js
test
movl
inc
adc
fcmovu
jp
mov
push
xchg
mov
aas
out
bnd
pop
in
mov
cwtl
push
testb
cwtl
sbb
mov
mov
mov
xchg
icebp
fiadds
cld
scas
mov
dec
mov
std
fdiv
fucompp
pusha
das
rolb
adc
cmp
aam
loope
ret
jnp
mov
adc
movsl
insl
inc
mov
dec
and
cmpsl
sbb
cmc
mov
shl
lods
pop
mov
push
mov
jns
cmpsb
mov
ret
ror
inc
sti
cltd
or
aas
test
xlat
push
xchg
insb
add
add
imul
xchg
stos
and
sub
inc
daa
mov
stos
aad
jle
push
mov
lret
cli
inc
push
into
imul
add
sub
mov
mov
dec
stos
add
test
or
pop
sbb
mov
or
addr16
fwait
xchg
mov
adc
ljmp
test
jns
notl
sbb
pop
xchg
sub
call
pop
test
pop
mov
out
mov
cmp
mov
cmp
push
jne
pop
lods
mov
mov
test
dec
jmp
xchg
dec
pop
addl
lahf
or
aas
mov
jp
fldenv
movsl
imul
les
mov
or
icebp
daa
fildll
ret
mov
xor
lcall
popf
out
pop
xor
sbb
stos
cld
out
lret
xor
sbb
mov
dec
scas
dec
ljmp
movsl
and
ret
push
leave
mov
xor
arpl
dec
adc
aas
orb
rorb
inc
pop
mov
add
clc
rcrb
in
insb
fisubrs
lcall
xchg
mov
loope
sub
push
inc
fwait
push
sbb
jmp
es
jge
add
sbb
mov
or
jl
lret
jl
push
mov
aaa
dec
sub
jg
pop
xor
mov
sub
icebp
movl
inc
inc
sub
in
cmp
adc
sbb
in
cmp
cmp
je
cmp
xor
xchg
outsl
and
adc
push
xor
push
sbb
xchg
jmp
scas
lahf
dec
imul
out
pop
sbb
xor
push
xchg
cmp
push
fidivl
fdivl
jae
outsb
andl
mov
jb
subb
inc
mov
fucom
and
loopne
lea
out
int
lods
sti
sub
je
lcall
sbb
cmpsb
xchg
ds
sahf
jae
mov
inc
imul
icebp
popa
mov
push
push
stc
jne
or
jbe
push
dec
pushl
xchg
test
xchg
xchg
fadds
es
iret
out
jl
mov
dec
adc
jae
fcmovne
push
shll
jg
mov
outsl
sbb
loop
push
ljmp
leave
pop
adc
pop
testl
adc
and
mov
out
das
call
inc
pusha
in
or
push
gs
xchg
xchg
sahf
push
leave
pop
cmp
and
fldenv
mov
xchg
pop
sbb
sbb
push
subl
mov
cmpsl
adc
lock
jl
pop
jmp
testb
and
cwtl
dec
pop
in
inc
nop
dec
lods
dec
cli
dec
push
push
imul
shrb
insl
xlat
inc
repz
add
mov
xchg
jp
mov
fldt
daa
xor
inc
lcall
jb
mov
and
fcomip
inc
mov
pop
cwtl
aad
lods
mov
enter
dec
lods
icebp
mov
pop
cld
fnstenv
add
mov
roll
xor
sub
mov
xor
jp
or
sbb
aas
and
sbb
cmpsl
sbb
cwtl
mov
adc
mov
xchg
mov
sbbb
pop
loope
vfmsubadd132pd
mov
clc
jle
pop
mov
hlt
xchg
bnd
mov
pop
xchg
lret
aam
out
mov
pop
xchg
adc
test
aam
unpckhps
push
or
ja
xor
sahf
mov
fs
inc
dec
adc
bound
xchg
push
sbb
inc
inc
lock
or
popf
imul
or
add
jae
xor
lea
push
js
in
daa
mov
cmp
push
pop
fs
mov
dec
dec
jecxz
mov
fldl
stos
xor
shlb
and
mov
xor
dec
mov
or
push
out
cmp
xchg
les
lods
nop
jp
jmp
shrl
jnp
cmp
inc
jg
in
aad
insb
clc
jbe
enter
xor
rcrl
shll
jae
sti
mov
jmp
loop
mov
pop
xor
stos
outsl
inc
cmp
push
cld
add
imul
xor
in
adc
iret
or
in
sbb
loope
xor
ss
dec
pop
addb
dec
or
loope
add
xchg
add
mov
mov
add
add
or
sub
push
jl
repnz
dec
cmp
xorb
imul
imul
or
xor
call
or
jno
jnp
jl
sar
dec
cmpsb
and
or
jecxz
cltd
scas
mov
je
test
sub
inc
sarb
in
pop
push
addr16
daa
sbb
cmp
cmp
sub
jns
cmp
mov
cmp
xor
lahf
lock
mov
sbb
cmp
inc
fwait
into
xor
sbb
mov
pop
pop
js
mov
mov
push
les
ljmp
cmpsb
scas
outsb
out
cwtl
adc
xchg
xchg
pop
popl
cmpb
arpl
rcrb
inc
repz
sub
std
push
lcall
and
sbb
repnz
push
inc
icebp
test
mov
inc
jg
mov
mov
push
sub
sub
int
imul
lahf
mov
fimull
cmp
inc
cltd
idivl
test
ret
xor
out
cmp
add
or
rclb
cmc
inc
and
outsl
clc
jnp
loop
sub
mov
test
push
pop
imul
lds
out
mov
cli
sbb
xchg
in
jbe
sti
sbb
cltd
push
or
gs
jecxz
pop
pop
adc
lods
sbb
in
psllq
insl
push
xchg
lret
sbb
inc
rclb
stc
fcoms
mov
cmp
jmp
sbb
pop
sbb
aad
pusha
or
mov
dec
gs
jno
addr16
xchg
mov
iret
fimull
lea
add
call
jg
jno
ljmp
dec
lods
push
std
pop
pop
cmp
xchg
inc
mov
js
and
cmpsl
jb
ljmp
scas
mov
testb
jl
nop
mov
mov
arpl
pop
mov
cld
add
aam
pop
cli
adc
mov
or
lods
das
nop
push
out
dec
ds
aam
cmp
ret
and
sbb
add
cmpsl
pop
sbb
jo
sub
lods
xor
mov
xchg
inc
mov
add
rcl
jo
insb
cltd
jns
add
pop
or
fs
cmp
sbb
fstl
inc
clc
das
dec
fcoms
gs
shr
leave
add
push
stos
mov
in
out
pop
sarb
pop
arpl
pcmpeqb
add
or
or
cmpsb
xor
filds
mov
xchg
xor
dec
js
pop
test
roll
imull
aaa
inc
xlat
dec
sub
cmpsl
dec
fwait
test
push
call
negl
add
add
push
movsl
jmp
in
cmpsb
adc
jnp
mov
orb
pop
pop
insb
cmp
dec
add
xchg
lds
scas
insb
xchg
lods
pushf
xchg
jne
fwait
jmp
out
sarl
adc
jmp
jecxz
movl
insl
dec
xor
addr16
inc
jp
lods
std
and
jns
sub
adc
pop
in
fs
ja
sub
iret
mov
xchg
add
lods
dec
inc
ljmp
push
lods
xor
mov
cltd
lahf
cs
loop
and
jge
jge
aad
scas
adc
inc
push
mov
jae
pop
push
sbb
imul
leave
lods
clc
in
hlt
inc
lea
inc
repnz
or
pop
loope
inc
aas
xor
inc
jns
add
addb
jo
pop
fidivs
sub
repz
xchg
cmp
iret
mull
xchg
cmp
cld
nop
jge
in
sub
out
lods
daa
aaa
imul
jno
dec
lea
dec
dec
adc
mov
jo
les
jg
inc
and
push
subl
inc
lret
cltd
sbb
push
enter
daa
pop
dec
mov
and
test
aaa
cmp
sub
push
cmp
jg
int
into
and
lahf
setle
dec
sbb
stc
inc
xor
jl
xchg
pop
sub
jl
pop
dec
iret
sub
lahf
or
xchg
faddl
mov
sub
fildl
std
mov
into
mov
bound
mov
inc
dec
mov
pop
scas
and
mov
int
sbb
sub
negl
decl
movsl
lcall
sbb
jb
sahf
mov
paddusw
cmp
mov
test
mulb
out
data16
sbb
cmp
fdivr
ss
idivl
sahf
jge
mov
pusha
xor
sbb
loopne
into
sbb
stos
push
xor
lock
outsl
xlat
stos
mov
imul
add
lds
mov
iret
out
addr16
cli
dec
xchg
add
loope
cwtl
sti
leave
jne
jne
cld
gs
xor
aam
in
ja
adcb
mov
xor
out
xor
and
rcll
cmp
xlat
cmp
inc
adc
insb
inc
pushf
sar
enter
outsb
cs
aad
xchg
mov
enter
sbb
in
dec
call
pop
pop
jecxz
into
ljmp
mov
pop
pop
or
jns
subl
xchg
dec
pop
add
inc
xchg
insb
jg
shlb
fnstcw
ret
out
jb
sub
mov
cmp
rcl
popa
mov
dec
std
pop
mov
cwtl
dec
lret
dec
andb
test
arpl
sub
int3
jp
mov
pusha
and
jmp
xchg
das
outsl
mov
loopne
pop
sub
inc
aam
gs
es
dec
mov
dec
adc
fldenv
mov
pop
shrl
push
pop
jge
and
sbb
mov
rolb
test
test
addr16
mov
push
xchg
and
push
mov
fsubrs
rcrb
sub
jp
inc
xchg
mov
out
psrlq
fisttpl
out
mov
mov
xchg
into
dec
fbld
sti
xchg
jecxz
sbb
iret
sahf
or
test
mov
ss
mov
sub
add
add
cmpsb
icebp
cwtl
jns
gs
js
xchg
adc
push
imul
es
ja
mov
dec
das
notl
mov
mov
dec
icebp
push
jns
and
popf
out
inc
add
sub
cmp
notb
cmpl
or
push
push
addr16
movsb
jp
and
and
mov
insb
xchg
imul
adc
push
pusha
mov
mov
lods
pop
pop
sub
jae
sub
outsl
aad
popf
fs
fmuls
mov
mov
lods
ret
imul
scas
jae
nop
push
rorb
adc
cs
iret
lret
ret
ds
and
sub
aaa
fbld
inc
jbe
cmc
jmp
aas
push
mov
cmpsb
or
je
js
mov
pop
lahf
jnp
ficoms
daa
lahf
rcr
sbb
ficompl
movsb
jle
add
testl
sbb
orl
fs
jno
inc
sarl
push
dec
test
push
sub
xor
cltd
mov
and
stos
imul
push
rcrl
cmpsb
pop
movsb
shr
in
dec
pop
enter
daa
push
int
cmp
fsub
dec
lret
test
cmp
fdivrl
imul
int
lods
jecxz
sbb
add
stos
xor
xor
aas
push
xchg
pop
mov
and
iret
adc
mov
push
mov
push
jb
jecxz
mov
insl
sub
fs
inc
mov
fisttpll
in
mov
inc
pop
andb
pop
loopne
xchg
hlt
pop
int
sub
sub
pushf
lcall
mov
dec
sbb
rcl
pop
into
sbb
fcmove
add
fimull
mov
jmp
stc
lcall
adc
xor
cmp
mov
cmp
negl
fxch
test
mov
cmp
call
or
pop
ss
aam
outsb
xor
dec
outsl
mov
repnz
push
mov
cmp
add
outsb
data16
repnz
mov
leave
lock
andl
in
dec
cmc
adc
js
icebp
cwtl
xchg
add
xor
or
outsl
inc
jne
xchg
and
adc
dec
xchg
fnstcw
int3
cli
cmp
rep
loope
xchg
push
push
sub
mov
ret
mov
rcll
push
xchg
inc
jmp
lods
out
and
es
mov
push
mov
dec
pop
aad
je
in
push
jecxz
push
cmp
lea
jae
xchg
sahf
mov
jge
dec
pop
push
add
aas
loopne
dec
orb
xchg
inc
pop
movsl
inc
and
inc
jmp
add
hlt
enter
add
call
adc
inc
notb
ret
add
mov
mov
and
dec
icebp
cmp
xchg
lret
cmp
imul
dec
mov
shrl
push
and
lock
mov
and
pop
pop
dec
insl
loope
xchg
dec
or
mulb
out
mov
cmp
mov
mov
mov
ds
rclb
ja
cltd
out
insl
test
ret
stos
mov
repz
push
mov
or
clc
movsl
out
push
xchg
cmpsl
pop
test
dec
sub
rcrl
pop
mov
out
fucom
in
out
mov
cmp
mov
out
repnz
mov
mov
xchg
out
pop
dec
inc
cmpsb
cwtl
test
or
mov
fbld
or
sbbb
lret
sahf
insb
jle
sarb
test
sub
xor
jno
jns
shrb
inc
lahf
leave
xchg
fs
pop
mov
negl
pop
xchg
jne
ja
push
mov
and
dec
mov
mov
cmp
dec
jb
mov
mov
aaa
cmp
and
add
jmp
jns
mov
out
xchg
fs
jmp
test
mov
and
into
insb
add
mov
shr
jle,pt
into
adc
ss
out
cmp
int3
xchg
xchg
stos
and
pop
inc
add
jo
sub
xor
stos
popf
mov
cli
mov
pop
add
stos
enter
adc
push
imul
scas
xor
sbb
stc
adc
pop
jle
sub
ret
aaa
leave
lcall
arpl
fldl
pop
loope
shlb
push
push
add
fisubrl
cmp
int3
ja
into
pop
into
fldl
lds
inc
clc
xor
xor
repnz
push
mov
popf
cmp
xchg
xor
fsubs
sbb
aaa
out
add
aas
jmp
jg
lock
lret
dec
aad
or
mov
jo
int3
add
and
push
cmpsl
push
mov
inc
jg
jmp
loopne
mov
enter
daa
adc
and
push
sub
addb
adc
mov
add
insb
lahf
dec
cmp
push
adcb
sbb
mov
xor
inc
fcom
add
pop
mov
mov
pop
jne
push
adc
leave
filds
pop
push
cltd
sub
loop
adc
daa
push
pop
xor
mov
mov
xor
cltd
add
inc
int
sbb
adc
mov
std
mov
lcall
orb
xchg
sahf
incl
push
popa
call
jg
sbb
stc
push
push
mov
cmp
mov
es
jb
inc
divl
jle
xor
jne
cmp
sbb
into
jecxz
mov
xor
pop
inc
loop
xor
imul
pop
add
push
and
mov
mov
hlt
scas
aaa
cli
mov
jb
lret
pop
pop
in
mov
scas
sti
daa
leave
idiv
mov
in
loopne
or
loop
xchg
or
fnstenv
cwtl
push
repz
mov
adc
repnz
jbe
or
adc
ljmp
jmp
sbb
scas
aad
and
nop
jle
int3
dec
fldcw
inc
inc
faddl
divb
pop
jecxz
xor
jns
aaa
lea
insl
call
cld
ret
sbb
cmp
sub
insl
pop
mov
pop
dec
ss
mov
mov
lcall
lahf
dec
and
mov
jge
push
add
stos
adc
mov
dec
enter
nop
icebp
adc
lret
stos
sahf
mov
popf
cmc
mov
adc
das
sub
dec
fwait
sub
mov
ret
inc
add
cwtl
insl
enter
pop
gs
cmpsl
adc
push
mov
jno
push
lods
jb
xor
mov
dec
mov
pushf
push
out
push
or
pop
add
shr
les
cltd
push
push
push
test
jae
mov
and
addr16
loopne
fsts
mov
lret
icebp
pop
xor
stos
add
out
inc
pop
xchg
xchg
cs
mov
setno
add
sub
mov
mov
mov
jl
dec
lods
mov
test
mov
add
adc
sbb
ds
or
mov
outsb
push
sarl
add
in
int3
gs
mov
loop
sub
sbb
mov
out
mov
push
insl
mov
push
pop
xchg
ja
lcall
addr16
mov
data16
jg
stos
mov
push
mov
lret
mov
jmp
inc
sbb
out
lock
sub
out
addr16
jp,pn
sub
dec
insb
insl
push
popa
jnp
pop
cli
jle
jnp
in
loopne
pusha
fcomp
in
filds
xchg
jle
push
pop
int3
adc
jae
push
push
cmc
jbe
popf
mov
bound
push
cld
test
push
bound
test
imul
cmp
push
adc
cltd
xor
ret
test
and
cmp
inc
sti
dec
enter
shrb
call
jae
pop
push
pushf
add
xchg
sbb
ficomps
js
rclb
les
sub
cmp
nop
mov
push
cmpsl
xchg
jbe
or
jge
jns
sbb
mov
aaa
cmpsb
shlb
xor
push
jno
xchg
add
pop
dec
bound
movsb
xor
dec
out
jge
sbb
pop
and
cs
test
push
inc
inc
inc
push
rcl
arpl
enter
daa
adc
sub
loope
push
mov
cmp
mov
or
lahf
insb
or
push
push
jg
sbb
or
xor
sub
pop
fsubr
jp
jle
or
push
pop
sub
fmull
outsb
jb
lcall
sub
xchg
orb
cli
mov
cltd
je
test
enter
or
loopne
inc
sub
cmp
jmp
push
fmuls
lods
sbb
call
jb,pt
sbb
leave
mov
push
fdivr
or
fs
adc
or
ss
in
leave
jno
fsubrs
scas
jecxz
mov
xor
mov
pushf
or
mov
push
sub
loop
jle
imul
in
add
xchg
data16
test
xlat
mov
push
out
sbb
out
mov
and
and
fsubrp
mov
inc
xor
loopne
in
pop
pop
aam
pop
adc
pop
xor
les
inc
repz
mov
sbb
sub
test
outsl
adc
aas
pushf
sarl
das
jmp
push
cltd
cs
adc
cmpl
pop
shr
cmp
xchg
inc
out
push
inc
dec
dec
and
pop
jecxz
inc
add
jl
sbb
mov
jne
jnp
insb
pop
mov
testl
xchg
loopne
pop
jmp
cmp
shrl
inc
and
addr16
mov
pop
push
mov
fidivl
notb
cwtl
add
mov
notb
mov
mov
xchg
mov
fs
sbb
mov
fcompl
das
or
dec
mov
add
test
cmp
out
aad
xor
and
sub
xchg
cmpsl
adc
loop
push
mov
cltd
lods
fnsave
xchg
mov
mov
mov
pop
jl
outsb
sarb
clc
test
ja
mov
cwtl
cmp
jmp
fucomp
test
clc
sbb
rcll
xor
rorl
and
fisubrs
stos
outsl
in
out
mov
in
push
lock
adc
lock
adc
rorl
pushf
push
xor
sub
mov
popf
jge
dec
adc
push
xchg
fs
inc
xor
or
push
dec
fwait
inc
popa
jae
je
mov
or
jmp
xor
jns
xchg
push
in
call
shlb
lods
int3
pop
or
xchg
ja
and
pop
push
mov
sub
mov
aad
pop
dec
cmp
jne
into
cs
xchg
out
jecxz
xchg
bound
jmpw
mov
addb
or
addr16
aaa
jp
rorl
fmuls
push
jle
sbb
in
loope
pusha
jae
dec
fbld
pop
xchg
push
setns
jp
inc
push
pop
test
lock
popf
repz
xchg
js
stos
scas
imul
sbb
shrl
xchg
shrb
cmpsl
rorl
in
xor
out
ss
scas
leave
mov
data16
jo
je
xchg
pushf
xor
cmpsl
scas
or
dec
adc
or
sbb
cmp
insb
pop
sub
cmp
movsb
lds
mov
mov
shl
push
cmp
xor
push
divb
mov
sbb
mov
lahf
or
test
dec
shl
adc
shr
xor
stos
and
mov
arpl
mov
push
and
cmpsl
cmpsb
out
ss
mov
sub
adc
cmp
icebp
out
loope
push
lahf
sub
add
cmp
add
mov
and
imul
mov
bound
sbb
add
mov
pop
mov
jle
add
and
inc
sub
push
jecxz
push
ja
pop
fdivl
and
adc
fldl
sub
push
mov
repz
leave
aad
inc
stos
stos
sub
mov
enter
mov
rcr
mov
mov
sbb
pop
sahf
inc
dec
arpl
xchg
jo
jg
ret
mov
stc
mov
dec
mov
ss
or
jo
adc
call
mov
ret
xor
clc
cmc
or
mov
xor
outsl
push
xchg
popf
loop
sti
mov
sbb
shlb
add
mov
data16
xor
mov
dec
out
pop
inc
cli
sbb
adc
aam
sti
test
incb
or
loopne
loop
pop
repz
adc
sub
fstps
in
ffreep
sbb
repz
sbb
push
push
ficoml
insl
int
pushf
jle
add
ret
cs
adcb
ds
nop
xor
das
dec
xchg
jmp
inc
add
dec
les
mov
push
popa
inc
jecxz
inc
push
jg
adc
add
cmp
pop
imul
scas
dec
inc
mov
pop
pop
mov
fldl
adc
aas
aas
xor
std
cs
mov
add
rcrl
fcmovnu
std
stc
add
mov
and
fdiv
mov
lahf
daa
lret
mov
mov
stos
lcall
or
mov
sti
outsb
add
pop
pop
or
fs
es
sub
cmp
dec
std
fidivrs
adc
pop
mov
lahf
mov
mov
ljmp
mov
fwait
scas
jnp
cld
outsb
cltd
mov
dec
pop
mov
push
das
push
ljmp
clc
push
cmp
xchg
fs
aam
movsb
call
add
push
stos
pop
into
mov
push
daa
enter
lds
stc
popf
cmovg
add
xchg
ret
xor
adc
mov
mov
cld
pop
test
faddl
cmp
sbb
gs
lret
or
inc
pop
fwait
outsl
pop
test
add
and
nop
incl
push
xorl
sub
out
jno
push
inc
xorl
fnstenv
ja
mov
dec
sti
mov
mov
test
mov
inc
mov
pcmpeqw
lret
or
sbb
test
pusha
dec
out
add
lock
or
mov
jb
scas
jp
or
and
xchg
in
jnp
jg
jle
mov
in
inc
xor
les
filds
push
nop
pop
cmp
sti
jae
mov
cmc
popf
add
int3
push
aam
shrb
sbb
mov
outsl
cltd
scas
ljmp
out
les
mov
leave
lcall
hlt
mov
inc
add
jp
or
ret
rcrl
fcmovb
gs
add
filds
int3
cmp
imul
ss
cmp
inc
dec
sti
push
push
loopne
repnz
cmp
adc
sub
jbe
pop
fdivrl
dec
leave
sbb
cs
mov
jno
jl
jl
lea
push
lock
mov
jns
pop
xchg
fcmovbe
push
and
ret
jae
jbe
popa
push
in
xor
push
cmpsb
imul
enter
daa
adc
mov
loope
outsl
mov
fs
sub
jl,pt
mulb
aad
jb
stos
mov
sti
sbb
in
add
mov
aam
dec
xlat
mov
js
fbstp
pop
test
stos
push
pop
mov
into
out
inc
fcompl
subl
cmp
adc
mov
iret
xorb
jbe
jge
enter
pusha
and
sahf
push
mov
inc
int
andb
jp
mov
rcll
sbb
pop
outsl
test
fwait
cmp
push
lahf
jl
fwait
mov
lods
sbb
adc
inc
ss
jne
cmp
mov
dec
dec
lret
pop
xor
movsl
jbe
jl
ret
into
mov
xor
xchg
cmp
les
or
add
push
data16
xor
mov
push
out
jns
cli
dec
scas
cmpsb
mov
clc
das
sti
xor
mov
and
shll
lcall
jge
adc
xchg
les
mov
push
xchg
pop
dec
les
mov
stos
pusha
sub
faddl
les
pushf
sub
dec
jmp
add
mov
nop
setno
dec
test
inc
adc
adcl
sub
push
lea
dec
movsl
jns
pop
pop
sbb
xor
cs
inc
fcomi
cmp
pop
xor
rolb
mov
inc
push
and
aas
fimuls
jb
jb
mov
lock
ja
sbb
scas
std
mov
loop
mov
fcomps
icebp
xchg
or
cld
push
cmpb
movsl
and
mov
fwait
xor
mov
inc
das
lret
mov
repnz
aam
daa
faddp
rep
lret
sub
int3
insl
jge
xchg
dec
clc
stc
push
cmpsl
adc
mov
mov
int
mov
pop
mov
or
sti
mov
and
mov
shlb
test
or
ds
addr16
lods
or
fnstsw
sub
xchg
mov
cmp
sar
adc
pop
xor
dec
stos
dec
jnp
out
imul
push
cmpsb
lock
fxrstor
std
or
out
xchg
dec
xchg
mov
mov
mov
lods
aaa
sbb
mov
mov
fwait
sahf
pop
add
mov
push
mov
jmp
jnp
jns
in
mul
jb
dec
xchg
mov
and
pop
cmpl
dec
out
jbe
mov
inc
dec
mov
mov
std
dec
sti
push
jne
mov
inc
out
mov
stc
cltd
jmp
movsl
dec
ret
xorl
xchg
xlat
pop
addr16
cmpb
mov
pushf
xchg
scas
outsl
sub
cmp
in
setp
push
push
fbld
enter
cmp
jae
enter
iret
inc
popf
daa
jge
mov
adc
fwait
stos
xchg
xor
sbb
std
sbb
or
mov
adc
mov
movsl
ret
mov
leave
jbe
or
push
ja
arpl
sarb
pop
sub
push
cmp
aad
jne
jno
addr16
mov
and
imul
test
lds
imul
adc
mov
jns
aaa
cmp
push
sbb
fimuls
xor
je
popa
sbb
shlb
jecxz
or
add
in
jl
orb
xchg
lods
xor
pusha
into
subb
fadd
test
mov
dec
shll
jo
sub
cmc
pop
cmpsb
daa
adc
in
cmp
loope
mov
sub
iret
das
cmp
xor
movsl
xor
mov
jo
pop
lahf
leave
pushf
or
out
das
sbb
roll
adc
push
pop
pop
push
mov
js
push
out
pop
ret
repnz
push
xchg
and
jae
sub
mov
fwait
pop
rclb
xchg
repz
fnstsw
adc
mov
pop
inc
push
movsl
fwait
push
int
leave
sbb
std
xchg
call
lcall
fwait
mov
mov
sbb
pop
jo
jge
bound
cmc
jle
mov
imul
stc
sub
cmp
adc
push
xor
scas
addr16
fcomps
jmp
lret
inc
xor
daa
cmp
es
or
push
outsl
jo
cmc
mov
xor
sbb
outsl
adc
xor
int
imul
lcall
sub
and
out
outsl
ljmp
mov
in
arpl
repz
and
jns
loopne
pop
aam
xor
jbe
mov
les
dec
loopne
jns
sbb
sbb
fisubrs
call
mov
subb
cmc
fcoms
sbb
pushf
aam
enter
sbb
adc
xor
pop
in
ja
ljmp
inc
sub
popf
dec
mov
mov
jecxz
sbb
lea
and
outsl
xbegin
xor
xorl
stos
push
adc
inc
mov
ret
jge
insb
jb
jmp
jbe
jnp
inc
sarl
rcrl
pop
xchg
std
inc
jle
cwtl
lods
jo
mov
push
mov
add
scas
icebp
insl
mov
lret
xchg
je
mov
mov
or
add
push
sub
jle
aam
dec
adc
cmpb
insl
fs
ss
repz
cmpsl
adc
lods
mov
int
dec
lods
push
push
sub
mov
sbb
fldcw
shlb
sub
adc
call
push
jo
movsl
frstor
clc
int3
test
xchg
loop
cmp
rcll
xchg
pop
stos
cmp
into
out
int3
shll
pop
jae
cmp
ret
aam
or
fsubs
mov
cmpsb
cmp
dec
call
cmp
inc
clc
int3
xor
fwait
int
addr16
pop
mov
mov
pop
in
incl
xor
mov
xchg
out
rcll
mov
cmp
bnd
loope
dec
loope
mov
or
mov
and
dec
loope
sub
into
popf
mov
xchg
sbb
addb
push
mov
xchg
jo
stos
addl
out
out
sub
shlb
and
cld
mov
and
and
jle
mov
nop
pusha
inc
std
cmc
ffreep
dec
stos
xchg
lret
pop
test
loopne
aaa
popa
sub
loope
or
add
xchg
sti
dec
imul
adc
dec
inc
sbb
and
imul
shrb
xlat
adcb
popa
fwait
iret
add
or
mov
or
push
fisubs
pop
xchg
inc
pop
jp
or
mov
pop
neg
sub
add
add
pop
mov
shll
add
jae
jg
mov
int3
clc
out
xlat
fcomip
movsb
rclb
push
jecxz
aam
cmpl
sbb
outsl
fbstp
mov
or
daa
jl
mov
loop
jp
xor
mov
frstor
sbb
mov
push
cmpl
dec
add
cmpsb
outsl
or
cmpsl
add
lock
pop
daa
adc
sbb
fcomps
jmp
push
jne
cmp
add
ret
movsl
cmp
add
or
lahf
call
test
xchg
cmp
add
mov
in
rcll
pop
js
jmp
push
add
add
push
jl
mov
mov
shrb
xor
sbb
mov
test
outsb
or
cmp
or
imul
and
pop
mov
test
arpl
jl
add
js
and
js
cltd
lcall
cmp
sbb
mov
sahf
cs
xchg
test
push
jg
bound
mov
xchg
jmp
fs
mov
adc
mov
sti
cmp
sbb
jno
xchg
pop
les
cmp
jnp
or
adc
push
push
mov
xor
outsl
lock
loop
lods
sbb
jbe
adc
jnp
add
xchg
lods
xor
mov
out
jmp
push
mov
into
daa
leave
sti
xchg
jg
push
fsubl
pop
mov
pop
push
ror
mov
rcr
cmc
adc
cmp
jb
dec
pushf
lret
add
loop
mov
xlat
icebp
mov
int3
adc
pop
pushf
jg
and
ja
sub
lahf
fisubl
nop
lds
inc
inc
cmp
pop
je
leave
sbb
inc
jmp
mov
sbb
jbe
fwait
ja
lahf
pop
xor
or
loopne
fistl
add
ja
outsl
inc
inc
sub
inc
lea
aas
sbb
mov
notb
and
jecxz
rorl
or
cwtl
push
leave
out
mov
cmc
addr16
inc
cmpsb
mov
pop
ret
aad
jecxz
imul
mov
jmp
lock
dec
dec
mov
loopne
pop
aam
rcll
sbb
xor
mov
dec
out
jmp
cmpsl
jne
out
in
push
lods
mov
gs
push
out
and
pop
jp
rorb
push
jns
xor
test
rcrb
push
xor
xor
mov
clc
xchg
and
ljmp
hlt
or
jns
sub
in
out
das
std
adc
xchg
movsl
jle
pop
sbb
pusha
mov
pusha
shll
sub
mov
mov
mov
mov
xchg
xchg
fbld
inc
pop
mov
add
push
add
je
es
jne
xor
mov
jns
rol
in
push
xchg
ds
mov
divl
ja
mov
fdivs
pop
lds
les
fidivl
pop
rorb
jmp
cmp
adc
stos
out
test
or
lret
in
outsl
cmp
jp
adc
insb
test
jle
sub
pusha
fbstp
push
popf
push
mulps
xchg
inc
inc
or
mov
adcb
clc
loopne
jne
nop
mov
xchg
xchg
and
jp
push
sbb
sbb
imul
add
ret
divb
xor
fcmovb
les
hlt
pushf
pcmpgtd
int3
cmp
or
call
inc
aaa
daa
push
fcmovu
xchg
sub
xchg
fmul
stc
jmp
sub
enter
mov
rcrb
jecxz
pop
mov
adc
pop
pop
jbe
fidivrl
xor
fiaddl
or
lret
xor
push
dec
lea
push
pop
nop
lcall
cmp
and
cltd
popa
push
dec
sbb
inc
fscale
out
xacquire
in
ds
adc
jmp
inc
daa
pinsrw
cli
inc
loope
movsb
ds
out
es
aaa
and
movsl
inc
imul
pop
addr16
jb
sub
int
testl
mov
sti
js
ds
push
stc
rcll
inc
mov
sub
in
outsb
popa
mov
rorb
lea
imul
or
fwait
cwtl
push
stos
cmp
stc
sub
ret
testl
aad
fidivl
dec
mov
or
sahf
roll
test
add
mov
addr16
fwait
repnz
pusha
adc
shll
xor
dec
je
aam
loope
xor
lret
mov
cmp
movsl
rorl
jmp
into
xor
loopne
xor
sbb
repz
stc
imul
mov
add
loope
lods
sbb
xchg
out
out
cli
out
lret
xor
mov
decb
fwait
mov
pop
outsl
imul
fsqrt
inc
push
les
inc
repz
push
dec
xchg
movsl
or
or
cmp
xlat
xor
dec
adc
outsb
pushf
sub
add
jle
push
ficoml
jb
mov
xchg
add
insl
rorb
jg
je
ljmp
mov
jno
icebp
pop
fadd
negb
pop
xor
pop
leave
dec
out
call
mov
inc
int
mov
test
mov
jb
je
mov
xchg
sub
mul
add
std
xchg
mov
cwtl
and
mov
or
ljmp
cld
xchg
push
lret
inc
push
push
mov
push
mov
test
out
addr16
xor
xlat
push
pop
aam
mov
mov
push
push
dec
jmp
fs
mov
sti
push
push
lods
hlt
pop
jns
int
sub
and
pop
cmp
rcr
test
js
mov
fdivr
push
negb
cwtl
clc
inc
adcb
data16
fwait
stc
pop
xor
sbb
xchg
fmuls
bswap
shrl
add
mov
sahf
leave
xor
out
jmp
lods
dec
or
xchg
sbb
ss
cmp
inc
add
inc
es
stos
or
inc
mov
mov
push
filds
sbb
xor
movsb
xchg
jns
mov
bound
add
pop
mov
push
ja
sbb
dec
popaw
mov
call
mov
insl
stc
dec
cmpsl
mov
sub
pop
mov
test
out
ds
bound
sub
xchg
push
insb
filds
je
fldt
enter
outsb
clc
jp
sub
cmp
sti
jnp
xor
lahf
mov
jp
lock
sahf
call
push
and
inc
dec
pop
sti
jae
mov
xchg
mov
jno
test
mov
jecxz
je
add
ljmp
mov
push
or
adc
mov
std
ret
push
leave
fildl
jne
out
jo
fiadds
mov
xchg
pushf
add
xchg
add
mov
mov
sub
xchg
in
add
std
xchg
fisubrs
mov
shlb
push
bnd
je
inc
pop
loopne
dec
fists
cltd
iret
jbe
push
xchg
sbb
sbb
in
cmc
jno
clc
pop
jl
pop
jae
cld
movl
xor
jno
loop
push
or
inc
pop
jnp
push
or
jge
push
js
in
and
test
daa
push
gs
cmp
ds
loope
push
aas
sub
cmp
cmp
ds
movsl
dec
aaa
push
and
sbbb
xor
add
addl
les
xchg
sbb
push
sahf
jae
jp
js
xor
pop
cmpb
stos
inc
xlat
push
sub
in
fmull
jg
sub
rclb
notl
and
pop
cli
mov
cmpb
pop
std
movsb
mov
jmp
popa
push
scas
cmp
int
movsl
push
outsb
mov
pop
jbe
push
lcall
xor
lret
cmp
adc
add
xor
idiv
push
sub
mov
mov
gs
pop
cmp
xor
imul
mov
jl
fstl
cmp
mov
or
in
dec
cmc
or
fwait
xor
mov
std
loop
jnp
imul
cmp
add
xchg
inc
std
cltd
out
imul
insb
lods
push
in
movsb
fsubrs
lock
mov
push
imul
inc
aad
pop
mov
pop
fnstenv
xor
repz
cwtl
xchg
push
sub
cmp
fildl
adc
mov
pushf
aad
es
popf
cmp
cmp
loope
nop
jnp
and
mov
inc
popa
jne
ret
lea
