jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
popa
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
call
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
lea
push
call
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
lea
push
call
lea
push
call
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
lea
push
lea
push
call
lea
push
call
mov
pop
ret
mov
push
mov
add
lea
push
call
call
lea
push
call
lea
push
call
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
lea
push
lea
push
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
call
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
call
lea
push
call
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
push
call
call
lea
push
lea
push
call
mov
pop
ret
lea
push
mov
add
mov
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
mov
cmp
je
call
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
xor
divl
test
jne
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
mov
cmp
je
jmp
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
mov
cmp
je
jmp
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
sub
mov
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
push
mov
mov
xor
call
mov
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
mov
mov
mov
call
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
push
mov
mov
xor
call
mov
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
mov
push
mov
jmp
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
sub
add
add
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
mov
mov
call
mov
mov
mov
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
mov
mov
movl
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
cmpsb
in
mov
sbb
mov
dec
in
mov
push
in
mov
outsb
in
mov
push
in
mov
or
mov
push
in
mov
and
mov
imul
mov
inc
xor
test
jo
int3
inc
xor
mov
jo
int3
inc
xor
add
jo
int3
inc
xor
out
hlt
jo
int3
inc
xor
in
imul
mov
inc
xor
shrl
jo
int3
inc
xor
leave
imul
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
movl
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
push
call
mov
call
mov
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
mov
call
mov
cmpl
je
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
cmp
je
mov
subb
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
xorb
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
incl
mov
cmp
jne
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
call
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
push
mov
push
call
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
movb
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
call
test
jne
mov
jmp
movw
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
call
lea
mov
pop
ret
push
mov
add
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
lea
push
call
call
lea
push
call
call
lea
push
call
lea
push
call
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
lea
push
lea
push
call
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
lea
push
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
push
lea
push
call
lea
push
lea
push
call
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
lea
push
lea
push
call
lea
push
lea
push
call
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
push
push
push
call
mov
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
mov
pop
ret
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
in
add
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
lea
push
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
lea
push
lea
push
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
lea
push
call
lea
push
lea
push
call
call
lea
push
call
call
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
lea
push
lea
push
call
mov
pop
ret
addl
jne
mov
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
mov
mov
lea
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
ret
mov
ret
lea
sahf
or
add
xchg
pop
sub
adc
add
add
add
add
add
mov
ljmp
and
insl
stos
fdivr
or
xchg
add
nop
cwtl
add
int3
add
movb
ret
xchg
add
cwtl
sbb
add
lcall
mov
sahf
dec
xor
push
lret
add
pop
add
add
pop
add
bound
jp
dec
sub
lods
push
add
sbb
lea
dec
add
lret
push
imulb
scas
sub
jbe
add
mov
in
das
outsl
sub
mov
add
stc
add
lret
stos
lcall
add
pop
in
add
xorl
jle
les
out
mov
adc
bound
aad
mov
jp
push
scas
add
leave
add
ud2
ret
push
out
cmp
sub
scas
sbb
add
out
add
xchg
add
or
test
roll
xor
dec
and
sarl
sbb
loope
inc
fldenv
inc
dec
add
sbb
mov
push
add
add
cmp
shrl
mov
test
shlb
jle
iret
int
shl
test
ret
add
enter
ffree
inc
sbb
mov
add
jecxz
iret
ja
mov
jae
add
mov
aad
add
push
mov
test
cmp
add
loope
dec
clc
push
adc
roll
add
mov
push
add
mov
add
pop
jg
add
add
mov
add
lds
aaa
xchg
outsb
out
jmp
add
inc
iret
aad
add
xchg
test
loopne
push
fwait
aad
add
cmc
fstpl
mov
add
adc
movsl
popa
add
rcr
add
mov
mov
add
rclb
mov
addb
inc
add
stc
testb
out
cmp
add
pop
mov
sub
dec
xor
add
add
imul
call
and
lock
imul
lret
or
shr
add
je
ljmp
shll
outsb
fisttpll
add
add
pop
xchg
out
and
es
add
ja
scas
fisubrl
add
lods
repz
sbb
add
inc
mov
inc
dec
test
add
std
movsb
hlt
inc
mov
mov
loopne
adc
cltd
add
inc
add
add
jmp
jg
fimull
popf
cltd
jne
xchg
es
lock
jge
add
mov
xchg
vmovaps
add
push
add
mov
sti
cmp
pop
adc
pop
mov
inc
les
and
sbb
add
cli
add
mov
cmp
es
lcall
gs
test
dec
in
cmpsl
dec
iret
lds
jl
scas
xchg
repnz
add
loope
jnp
add
movsb
mov
add
add
add
pop
sahf
add
add
sbb
in
add
adc
sbb
ficompl
add
out
loop
ds
fcmovne
lret
test
out
in
fnstsw
test
adc
add
dec
pop
ret
adc
add
insb
insb
dec
loopne
aaa
es
je
lahf
add
ret
sub
jge
cmc
outsl
cmp
adcb
popf
jl
cmp
dec
inc
add
add
cmp
add
add
std
and
dec
pop
mov
add
es
inc
add
jnp
add
mov
cmpsl
repnz
int3
leave
test
adc
aas
mov
push
and
jge
inc
sbb
aam
or
mov
add
fidivs
shl
sbb
rolb
or
dec
xor
sbb
test
and
sarl
cmp
out
movsb
inc
xchg
inc
push
std
jbe
cmpsb
shll
add
shlb
dec
xchg
inc
cmp
or
jno
cmp
and
popf
mov
aam
shlb
in
je
lahf
loop
ficoms
test
test
test
rcl
je
pop
mov
repz
pop
mov
dec
sub
mov
pop
imul
nop
xchg
push
adc
shlb
lea
and
popa
add
flds
or
cli
mov
jae
lcall
lcall
dec
fdiv
out
sub
fsubrs
test
mov
jg
in
mov
mov
cmpsb
mov
pushf
stos
and
test
out
cmp
mov
mov
rorl
cmp
into
in
push
jmp
mov
adc
mov
fs
in
icebp
adc
data16
data16
and
mov
sub
sub
add
xor
ss
push
inc
or
sar
fmuls
loopne
cwtl
sub
cmpsb
rcll
out
jge
or
imul
xlat
add
jno
xchg
mov
sbb
mov
jl
sub
mov
in
nop
dec
into
sti
in
movsl
xor
or
mov
nop
daa
cmp
dec
sub
movsl
les
mov
ficompl
sub
cwtl
std
ffree
mov
or
or
mov
sbb
jmp
cmp
inc
mov
fildl
inc
dec
aas
push
pop
mov
dec
xor
test
xor
loope
xchg
je
and
cwtl
or
popf
mov
push
push
mov
push
add
movb
fldt
sahf
inc
mov
mov
lret
das
add
push
mov
mov
shll
and
fsubrl
adc
test
mov
xor
sahf
cwtl
push
lret
scas
push
lds
sub
mov
repnz
dec
sarb
rorb
es
aam
jnp
ret
stos
pop
ljmp
cmpsb
imul
or
xchg
fldt
ljmp
mov
dec
popf
sub
rorl
sub
stos
lods
nop
add
sysret
cltd
mov
imul
xchg
repnz
test
out
xchg
cmp
shl
out
pop
int3
pop
subl
stc
adc
push
or
xor
adc
xor
push
xor
gs
mov
cltd
dec
jne
mov
mov
pop
mov
and
fwait
push
sub
mov
mov
sub
bound
jns
jne
in
and
xchg
pop
xchg
ret
cmpsb
ljmp
mov
xor
and
mov
imul
lret
pusha
rcl
in
xchg
iret
fisubrl
cmp
jp
push
xchg
fs
lahf
aam
mov
dec
pop
dec
stos
insb
cltd
mov
xchg
mov
lds
jmp
scas
mov
aam
adc
scas
cltd
ret
mov
inc
les
jae
adc
or
push
test
dec
fimull
mov
sbb
mov
imul
stc
jmp
xadd
mov
push
or
xor
out
arpl
push
jbe
cltd
sbb
and
sbb
fs
sbb
test
jecxz
insl
add
es
mov
fs
push
out
movsb
mov
jo
mov
hlt
and
jecxz
sbb
mov
dec
and
call
fsubs
dec
mov
jno
push
data16
imul
movsl
lods
push
dec
and
push
cli
push
movsb
sub
gs
fstl
inc
inc
jae
test
cbtw
repnz
leave
nop
imul
sbb
push
adc
xlat
sub
nop
sub
outsb
repz
adc
push
rcrb
push
push
testl
mov
aam
lea
sub
dec
mov
push
sbb
lea
sahf
jecxz
sbb
jecxz
pop
jg
in
mov
les
mov
lahf
shll
lea
push
cmp
jbe
leave
imul
bnd
aas
icebp
pop
shll
sbb
sub
cmc
das
jg
xor
in
mov
loop
push
stc
and
lods
jl
or
test
jno
ret
mov
out
lock
xor
es
jne
or
jnp
gs
pop
mov
mov
pop
imul
imul
and
aad
ja
pop
sbb
test
xlat
ljmp
mov
sti
mov
sti
fwait
loope
cs
jmp
aad
mov
nop
add
dec
lea
and
gs
flds
add
xor
mov
lea
mov
add
mov
adc
inc
lcall
fsts
sub
pop
inc
aaa
call
pop
aas
mov
xchg
jb
fildll
je
cmp
int3
divb
test
inc
mov
fs
mov
fucom
subl
pop
ret
testb
add
cwtl
das
loope
add
mov
adc
shl
ror
es
cmp
insl
decl
repnz
cmpsl
dec
jb
mov
gs
lret
push
mov
mov
sbb
adc
rorb
mov
cmp
cmp
aam
fdivl
mov
sbb
pop
ljmp
push
lods
mov
lret
pop
in
out
and
cmp
push
cltd
sub
inc
ss
add
dec
roll
mov
xchg
out
hlt
dec
rcll
xchg
ja
mov
icebp
rorl
fistps
cmpsb
stos
hlt
xchg
mov
add
lods
or
subb
test
lds
push
and
dec
mov
add
or
loope
fwait
test
int3
dec
cmp
jge
pop
ss
out
mov
mov
mov
xchg
cmpsl
sbb
jno
sub
ljmp
jp
outsl
fdivs
je
sbb
jle
push
xor
daa
dec
xchg
mov
loopne
xchg
or
jmp
pop
pop
mov
mov
mov
nop
and
sbb
xrelease
sbb
scas
hlt
adc
fmul
cmp
arpl
mov
cmpsb
pop
mov
push
push
jae
test
pop
or
shrl
ret
into
test
add
xchg
mov
jne
imul
or
jge
pop
lds
fld
xchg
lret
sarl
movsb
ds
in
leave
hlt
jmp
xchg
js
flds
sub
and
xor
fiaddl
iret
add
aas
aaa
int3
cmpsb
idiv
pop
jno
loop
shlb
jbe
ror
mov
hlt
js
cmp
mov
mov
in
iret
test
daa
dec
jg
cmp
jno,pt
xrelease
inc
dec
push
cmpb
inc
movsl
mov
inc
and
js
lahf
and
pop
push
ja
dec
test
sbb
push
inc
add
sub
pop
pop
lock
xorb
pop
cmp
inc
push
xchg
jp
rcrb
in
aad
cmp
fsubp
outsb
push
arpl
ss
xchg
xor
cs
int
mov
add
sbb
xor
mov
jbe
nop
jo
pop
mov
lcallw
je
out
dec
or
sub
stc
jl
xchg
ljmp
clc
insl
jg
out
mov
add
mov
lods
mov
test
pushf
fisttpll
dec
jg
cmp
xor
and
test
pop
inc
sarl
mov
orl
or
stos
xchg
cmc
neg
push
xor
and
cmp
stc
fcoml
ds
ret
iret
js
data16
lods
test
xchg
cli
mov
xchg
xor
inc
mov
push
or
mov
gs
add
sub
int3
pop
mov
push
adc
push
adc
cmpsl
out
add
call
sbb
xor
xlat
sub
int
cltd
sbb
in
lock
cs
leave
dec
aad
ret
or
dec
in
aas
lahf
inc
adc
push
repz
jo
out
sub
call
scas
aam
pop
pop
adc
adc
je
pop
test
jmp
cmp
mov
jae
inc
movsl
xlat
aam
push
loope
jb
sub
dec
and
in
je
test
cmpsl
idiv
bound
data16
shll
mov
pusha
popl
pushf
faddl
or
mov
lock
mov
sub
dec
roll
or
mov
sbb
aad
cmpsl
inc
in
sti
mov
cmp
aad
hlt
sbb
lea
adc
jo
sbb
xor
shl
jg
sub
mov
stos
ret
leave
or
mov
mov
add
push
xchg
pop
cld
stos
ljmp
stc
lods
and
sub
xchg
xchg
or
push
push
je
or
add
cmc
dec
cltd
sub
mov
xchg
popa
arpl
or
mov
add
sub
lahf
or
pop
and
scas
push
pop
sub
add
mov
cmp
xor
jne
or
aam
xor
add
mov
in
cmpb
mov
ja
sti
push
dec
lods
cmc
push
inc
xchg
inc
fwait
mov
lret
and
mov
push
xchg
sbb
jns
lcall
mul
inc
out
mov
sub
in
push
cmpsl
push
push
mov
or
mov
dec
mov
fxam
fsub
jp
divl
fists
outsb
mov
jne
mov
xchg
roll
stos
orl
fwait
popf
in
inc
push
mov
leave
xor
push
jb
and
inc
pop
insb
sbb
push
jnp
ljmp
cmp
lods
adc
mov
ret
pop
xlat
rorb
ficompl
ljmp
and
push
outsl
mov
stos
xchg
adc
imul
mov
shlb
pop
repnz
sti
hlt
xor
popf
arpl
loopne
jge
mov
fsts
or
test
xchg
mov
pop
mov
sahf
push
xor
repz
xchg
icebp
movsb
jecxz
xor
dec
pop
pushf
in
mov
add
in
cmp
add
jl
mov
mov
movsl
mov
xchg
xchg
dec
or
test
out
push
inc
xchg
jle
in
cmp
pop
jae
js
xor
pop
jns
fwait
push
enter
pop
subb
xchg
cmp
cmp
adc
popa
rcrl
rorl
sti
addb
sbb
xor
add
mov
xor
push
add
mov
sub
jo
pop
das
arpl
lcall
dec
fdiv
push
ret
xor
test
mov
sbbb
sub
mov
jne
mov
dec
movsb
mov
mov
push
ss
stc
aad
test
ja
in
jae
imull
push
lret
pop
rcl
adc
cmp
into
fcmovu
cmc
mov
das
outsl
pop
xchg
mov
lret
adc
stc
xchg
lret
out
adc
push
sahf
lods
nop
adc
mov
add
es
cli
mov
pop
int3
cmp
xor
sbb
mull
shrl
les
pop
pop
cmpsl
repnz
imul
jge
add
out
xchg
std
xor
sbb
insb
js
xlat
push
cmp
mov
sar
lret
sti
stc
movsb
push
aad
xor
nop
mov
push
stc
inc
sbb
filds
mov
iret
outsb
push
jecxz
inc
lea
inc
call
subl
or
ficomps
or
fcomps
inc
inc
arpl
sarb
aas
repz
and
pusha
je
imul
cmp
imull
cmp
divb
ret
sbbl
pop
sub
mov
cmc
pusha
lock
nop
das
lahf
ds
mov
loope
push
and
lcall
or
sub
insl
sub
dec
mov
mov
adc
lret
cld
pop
pop
lret
lret
cld
inc
dec
mov
shlb
aas
pop
dec
sti
shlb
cmpb
pop
lds
jp
clc
pop
sub
ljmp
adc
mov
ljmp
push
dec
mov
aam
dec
mov
cltd
pusha
sarl
arpl
mov
arpl
xchg
cmp
shl
rolb
pop
int
mov
shl
int3
push
sti
xor
add
adc
xor
add
xor
xlat
shll
mov
mov
ja
jp
dec
lahf
cltd
mov
push
arpl
or
dec
sub
jecxz
cmp
repz
in
jo
adc
test
jl
jns
mov
sbb
int3
fs
sub
loopne
test
dec
pop
jp
sub
imul
ja
mov
jle
in
clc
lods
pusha
xchg
in
fbstp
mov
mov
in
xchg
jb
sahf
pop
enter
xchg
push
fbstp
xchg
mov
or
lds
flds
insb
xchg
mov
jecxz
notl
xchg
mov
iret
cli
fsts
pop
push
nop
pop
inc
in
in
jae
xor
inc
gs
mov
inc
out
sub
xchg
insb
enter
jge
imul
mov
ror
pop
mov
dec
cmp
mov
jg
in
xchg
pushl
mov
jge
sbb
sbb
aas
sbb
add
jbe
jl
ficompl
mov
push
cwtl
mov
xor
mov
sub
cmp
cmp
push
cmp
cmpsb
int
push
in
popf
add
daa
inc
jge
cmp
arpl
jl
and
jge
pusha
movsl
shl
and
negb
sbb
jg
push
mov
in
and
repnz
scas
mov
adc
clc
ret
in
mov
scas
shl
bound
fcompl
outsb
sbb
int
hlt
dec
xchg
sarb
test
xor
jl
cld
cwtl
sti
add
test
fwait
push
push
test
ret
sub
xor
lcall
push
fsubl
sub
int3
mov
inc
jg
sti
sbb
push
repz
out
ss
mov
cmpsl
mov
ror
dec
vpunpckhwd
enter
xchg
sbb
enter
inc
mov
test
sub
inc
outsl
je
out
mov
stc
dec
and
mov
insl
fwait
andl
mov
dec
out
dec
xchg
icebp
mov
cmp
rorb
decb
sbb
and
add
pop
mov
xchg
imul
cmpsl
push
add
xchg
rorb
test
movsb
cmp
sub
pop
mov
cmp
outsb
sti
test
jae
xchg
bound
aad
or
xchg
dec
push
dec
stos
fs
inc
cmp
mov
ljmp
out
mov
call
lods
mov
pop
shr
adc
decb
insl
orl
and
push
aas
inc
int3
mov
inc
fstpt
xor
pop
mov
outsl
out
and
fs
addb
cwtl
testb
mov
orl
dec
jb
mov
mov
aaa
pop
lock
jle
fisubs
cwtl
in
and
sub
shl
push
push
es
mov
mov
cmpsl
inc
outsl
cmp
ljmp
lret
imul
mov
inc
jb
mov
outsb
sbb
rolb
out
aam
jle
ret
out
ljmp
xor
xchg
add
xchg
xlat
sahf
insl
ljmp
pop
lods
testl
sub
dec
mov
pop
push
sub
add
negl
int
sbb
pop
lahf
lcall
in
xchg
outsb
sbb
int
sbb
dec
mov
add
rcl
push
sahf
sub
add
ret
lcall
inc
xor
insl
or
add
mov
lret
jle
or
adc
xchg
dec
xchg
icebp
cli
inc
mov
pop
or
cmp
fwait
adc
dec
loop
pop
jne
inc
test
push
add
test
dec
jns
push
arpl
lds
out
mov
jmp
push
movsl
lods
adc
or
fistpll
loop
jle
js
in
jno
pusha
sub
push
outsl
xchg
sbb
xchg
jmp
imul
push
mov
inc
pop
mov
inc
sbb
lock
insb
repnz
add
jge
inc
orl
adc
cmpl
ret
pop
inc
icebp
fwait
inc
lock
jl
push
scas
dec
push
insl
and
ficompl
xchg
ja
ret
cmp
sbb
mov
mov
data16
cmp
call
ds
or
dec
aad
hlt
lret
arpl
testb
xchg
sbb
aaa
pop
fs
or
pop
test
addr16
pop
push
repnz
jnp
divl
in
lret
scas
insl
scas
scas
and
and
movsb
stc
jae
push
mov
cmpsb
push
lock
enter
daa
inc
ret
clc
sti
cmpsb
jno
xchg
jl
popa
jge
and
add
orl
enter
hlt
adc
lahf
jge
xor
lock
or
roll
inc
jb
inc
pop
gs
js
ljmp
cmc
dec
push
loope
lret
sub
jecxz
outsb
jg
push
adc
pop
lahf
test
addr16
xchg
sbb
mov
push
push
or
sub
add
push
pop
sub
pop
cmp
jns
outsb
fmull
or
mov
test
test
orb
jg
or
mov
test
enter
jge
and
rolb
adc
cmp
bound
fcmove
or
dec
mov
in
sbb
sbb
into
push
sahf
cmp
dec
pop
test
fwait
ret
lds
loop
mov
fs
testl
stos
shrb
pop
js
out
jo
cli
and
xor
loop
pop
fsin
sub
insb
loopne
movups
mov
fbld
adcl
mov
sbb
sbb
loop
mov
out
movsl
sub
xchg
dec
mov
cmpsl
xchg
xor
push
js
cs
sbb
aad
inc
mov
dec
or
inc
dec
popf
adc
cmc
in
rep
ljmp
and
push
sub
jmp
jae
add
outsl
test
pushf
sbb
or
adc
pop
pop
mov
outsb
in
testb
xor
jae
movl
jo
xchg
jecxz
and
test
das
std
pop
aam
cwtl
mov
sbb
test
add
pop
push
sbb
xchg
outsl
data16
mov
fucom
lock
push
das
pop
sub
mov
dec
or
inc
shrl
pop
cmp
adc
insl
js
out
dec
div
add
inc
jbe
mov
rorl
lret
ficoml
adc
adc
adc
inc
push
xor
lea
cmp
mov
xchg
inc
ret
jbe
fwait
push
aam
out
fnstsw
icebp
clc
shlb
push
ss
popa
and
lcall
pop
cld
xchg
fisubs
push
add
sbb
jno
out
cltd
into
in
test
shll
add
mov
dec
pop
cmp
insb
xchg
shll
push
mov
sub
inc
sbb
add
frstor
clc
xor
xor
inc
xor
jge
mov
mov
sbb
inc
xor
das
dec
test
arpl
push
dec
or
add
dec
lds
jne
push
ds
xor
cmp
cmp
in
jg
xchg
jecxz
shl
shlb
mov
or
in
std
movsb
xchg
xchg
jp
mov
mov
cld
and
fwait
jg
cmp
dec
pushf
pusha
enter
je
movsl
xchg
out
pop
mov
fcmovbe
and
mov
lret
fwait
push
mov
xchg
stos
stos
jge
and
rorb
pop
mov
hlt
scas
test
add
repnz
mov
mov
addl
push
inc
imul
or
mov
cwtl
rcr
int3
insb
dec
xchg
sbb
int
outsb
aam
imul
lds
mov
sbb
leave
rcrl
jp
arpl
nop
jge
fisubl
sbb
jne
aaa
or
or
mov
int3
push
jmp
pop
sub
cmp
xor
aas
scas
dec
sub
cmp
add
cmpsb
shrl
in
imul
enter
daa
inc
mov
lods
push
mov
or
dec
xchg
and
cmpsb
mov
outsb
add
pushf
push
gs
ret
addr16
cmp
xchg
inc
ds
xor
hlt
cltd
js
movsb
ljmp
lcall
cwtl
xor
outsb
loop
notb
repnz
cmp
push
in
add
mov
push
or
mov
nop
int
sub
pop
lods
arpl
push
shlb
fdivr
cmp
sub
in
pop
test
stc
dec
jg
push
scas
mov
add
mov
xor
and
add
cmp
sbb
mov
arpl
xchg
add
mov
xor
cmc
adc
xor
sub
loop
adc
mov
pop
mov
or
inc
data16
movsb
lods
inc
mov
xchg
and
mov
push
aam
addl
or
popa
pop
decb
pop
gs
inc
pop
loopne
xor
pop
add
das
adc
jns
imul
testb
inc
jecxz
sbb
sbb
sahf
and
gs
mov
adc
lret
mov
pop
lret
push
aad
loopne
nop
dec
dec
stos
dec
push
lods
rcr
xchg
mov
les
aad
repz
stos
in
sub
call
stos
cmpsb
push
pop
es
xor
pushf
ret
scas
and
pop
pop
insl
clc
inc
fimull
je
rcrb
pop
jb
pusha
aam
std
jge
je
mov
test
push
js
std
add
iret
mov
rcrb
fwait
je
sbbl
aaa
adc
in
popa
lock
in
das
cmp
inc
mov
push
fldcw
dec
jp
jle
out
xchg
mov
insl
pop
add
cmpsl
inc
add
icebp
cwtl
sbb
lret
dec
pop
lahf
mov
push
mov
lods
inc
mov
sub
aad
add
test
lahf
push
repz
or
xchg
push
push
icebp
ljmp
mov
mov
test
loopne
mov
and
mov
cltd
add
adc
jbe
or
int
test
pop
ss
and
arpl
sar
incb
pop
into
out
cltd
stos
lahf
fmuls
in
xor
pop
js
add
dec
or
xchg
leave
inc
xor
fildll
sti
add
or
fists
push
mov
sti
jmp
ja
adc
mov
xor
lcall
test
leave
jne
sub
mov
movsl
jae
adc
sub
jns
xchg
jl
dec
mov
xor
adc
sub
roll
jp
xchg
mov
xchg
push
mov
add
inc
daa
in
aaa
pusha
arpl
add
shrl
xchg
decb
push
sub
popf
mov
mov
push
lds
stos
push
xchg
xchg
and
xor
insb
enter
pop
sbb
scas
or
and
aam
adc
sub
call
lahf
jl
push
or
jae
mov
jb
ds
fisubrl
jl
inc
imul
xchg
jno
sbbb
cmc
imul
fisubrs
mov
push
in
mov
inc
inc
clc
leave
cmp
stos
arpl
sbb
jbe
ffree
jge
adc
aaa
xchg
cmp
xchg
add
add
sub
pop
pop
in
push
inc
add
xor
lcall
and
and
cmp
insl
movsb
movntq
push
es
cmpsb
push
push
sub
push
insl
daa
enter
daa
inc
fmul
cmp
push
jno
scas
sarl
pop
dec
add
xlat
ds
push
stc
movsl
pop
cmc
and
fiadds
lahf
mov
inc
push
das
adc
adc
adc
int
clc
repnz
pop
mov
lret
js
repnz
jne
mov
loope
sbb
sub
popf
xor
push
fsubrs
push
out
adc
int
in
dec
jno
orb
xchg
add
ja
xor
sbb
int
ss
xor
dec
lcall
mov
sub
dec
aaa
test
clc
sahf
addb
push
mov
inc
mov
mov
or
adc
aam
cltd
push
cmp
fdivr
mov
or
lret
test
les
push
inc
sbb
xor
push
movsl
arpl
jns
loop
rclb
adc
bound
lret
sub
lods
mov
aam
and
cli
mov
xor
jb
popa
mov
and
jno
andl
mov
pop
and
xlat
adc
push
aam
gs
add
ds
sbb
pop
int
xlat
fs
jo
fadd
sub
test
and
mov
fwait
cs
loope
nop
and
and
inc
jb
sbb
into
mov
les
sbb
repz
out
add
call
sub
pop
fnstcw
adc
add
jmp
lods
sti
pop
incb
movb
ds
outsl
je
jb
scas
and
jnp
je
mov
jecxz
fs
dec
fistps
cwtl
daa
xor
mov
xorl
mov
loope
mov
push
dec
lock
push
sbb
sbb
add
mov
fadds
int
dec
sbb
insl
inc
push
leave
dec
in
out
lods
cmpsl
inc
adc
mov
outsl
int
cld
lret
push
cmpsl
lret
mov
jge
pop
stos
xchg
lret
fsts
sub
mov
ret
xchg
pop
inc
push
pop
or
ffree
mov
clc
inc
adc
ljmp
fisubrl
mov
ja
insb
xor
push
mov
ret
xchg
ret
cmp
aaa
test
lods
xchg
mov
mov
adc
dec
sub
sub
out
xor
push
push
sbb
inc
stos
mov
push
push
xchg
sub
adc
arpl
or
or
mov
cmp
or
mov
xorl
xlat
dec
imul
inc
jp
jl
mov
aas
fwait
lahf
lds
dec
mov
xor
scas
fs
sub
bound
lret
cs
lock
xchg
and
nop
sub
int3
mov
addr16
jp
push
sbb
jbe
pushf
mov
jle
sbb
in
xor
pusha
dec
fbstp
sub
enter
lret
sbbl
push
jmp
mov
mov
add
ret
stos
xchg
pop
add
insb
xor
jnp
dec
scas
scas
outsl
jp
push
sahf
pop
adc
dec
movsb
ret
aaa
pop
ljmp
jae
ret
lret
jns
or
mov
push
inc
ljmp
xchg
enter
les
imul
fimuls
test
movsb
mov
cmp
pop
mov
xchg
stos
jns
scas
push
pop
hlt
stos
lcall
imul
jge
sbb
ljmp
add
int3
sub
xchg
pop
mov
je
and
xchg
xor
cmc
fisubs
and
add
sbb
movsb
lcall
cmpsb
fnstenv
mov
ljmp
cmp
je
jl
push
test
ds
callw
xchg
sbb
lds
lahf
fiaddl
and
es
push
fcom
mov
mov
sbb
mov
sahf
push
push
xchg
loope
jnp
sub
fisubrl
cmp
lret
cmc
outsb
test
addr16
test
fmuls
mov
cltd
lahf
add
mov
int
adc
popf
sub
and
stos
mov
xchg
setnp
dec
dec
cli
sub
lcall
mov
push
shlb
std
jns
pop
out
and
sub
fsubrl
fnstcw
xchg
xchg
arpl
and
dec
lret
mov
mov
scas
movsb
sbb
imul
outsl
std
iret
loop
rorl
clc
test
adc
or
mov
sub
cli
mov
sti
mov
mov
pop
xchg
mov
or
lret
lods
int
inc
pop
mov
jle
je
les
adc
xchg
sbb
mov
dec
inc
sbb
xchg
aam
xlat
mov
andl
in
call
repz
and
aad
inc
or
fisubrs
test
flds
scas
mov
fisubl
sbb
jo
cwtl
test
push
sub
je
mov
sbb
jne
loope
xchg
pop
mov
in
jmp
inc
outsb
aas
push
shll
shlb
dec
jmp
xorl
jecxz
in
xchg
mov
cmp
xor
mov
orb
adc
mov
es
mov
scas
or
das
into
pop
mov
loopne
push
rcrl
dec
es
jno
insl
sub
dec
pushf
cmpsl
inc
mov
inc
icebp
inc
movsb
mov
idivb
lret
daa
test
and
adc
xchg
pop
ljmp
sub
shrl
sbb
lcall
cmp
mov
xchg
data16
lods
mov
xchg
out
fnstenv
add
mov
push
push
xchg
pop
cli
pmaxub
add
sarb
mov
lret
mov
test
and
xchg
in
sbb
rorl
and
adc
sub
push
add
pop
inc
call
add
or
jbe
xor
in
mov
std
add
mov
repz
jno
dec
ja
mov
dec
pop
pop
cmp
or
dec
int
into
lret
add
jne
lcall
roll
cmp
jns
imul
bound
pop
out
mov
sub
jo
addr16
jp
dec
aad
pushf
das
sub
pop
jg
cmpsb
in
in
ds
cltd
cmp
data16
loopew
jmp
xchg
repnz
ljmp
mov
inc
push
inc
adc
dec
and
sahf
jnp
jnp
dec
shrl
in
inc
adc
movsb
iret
aad
pop
ret
xchg
pop
and
outsl
inc
sbb
push
jae
adc
pushl
or
cs
cmp
in
mov
sbb
or
neg
bnd
lds
and
rclb
frstor
inc
leave
es
push
imulb
andb
mov
xchg
mov
sub
sbb
cwtl
aaa
adc
fmuls
jnp
add
pop
adc
adc
push
pop
insb
or
push
jge
scas
jmp
mov
sbb
sbb
and
lahf
enter
daa
inc
jo
les
xor
jl
lcall
xchg
pusha
stc
pop
lahf
stc
cmpsb
jle
cmp
into
test
test
enter
mov
jle
sbb
add
js
dec
pop
pop
repz
cmp
sarb
mov
cmp
cmc
dec
outsb
or
mov
or
popf
sbbl
xor
add
dec
fbstp
push
aas
xchg
push
adc
xor
in
nop
pop
pop
sub
mov
push
aad
addr16
xchg
popa
sub
sub
test
mov
jg
jno
mov
addr16
mov
fbld
add
pop
cmp
dec
mov
mov
rcrl
out
fimull
sbb
adc
into
fists
divl
pop
fdiv
outsl
inc
test
cmp
xchg
clc
xchg
popfw
mov
jp
inc
sub
and
aad
lock
xor
in
jno
mov
fmuls
sbb
inc
mov
lret
dec
cmpsl
loopne
or
pop
popa
idivl
imul
add
xchg
imul
outsl
xlat
loop
dec
sub
dec
push
in
push
mov
popf
test
mov
dec
test
mov
fnstcw
cwtl
les
lcall
cmc
in
lea
insl
xchg
sub
pop
aas
bound
lret
add
or
shrb
pop
inc
xchg
std
inc
outsl
xor
inc
bound
aas
lods
xor
jb
ljmp
pushf
iret
adc
push
or
cwtl
popf
cmp
or
je
pop
and
fucomip
fistl
mov
cmp
std
xchg
stos
das
fnstenv
push
mov
sub
and
out
push
shrl
jmp
insl
adc
cmp
cmp
cmpsl
inc
mov
pop
icebp
sbb
jo
lret
xchg
fcoml
mov
push
sub
pop
or
movsl
int3
sbb
cltd
orb
mov
cmp
loopne
paddusw
lahf
xchg
adc
mov
jge
fldt
adc
out
cmp
pop
xchg
cli
xchg
mov
jno
mov
add
mov
ss
dec
dec
xchg
sub
dec
stc
cmp
test
mov
dec
xor
pop
iret
test
int
fldl
dec
cmpb
imul
pusha
and
lahf
mov
rcrb
rorl
sub
or
dec
push
xor
clc
or
pusha
mov
dec
push
daa
dec
jne
jmp
pop
out
mov
pop
bound
dec
in
in
mov
xchg
pop
cmc
inc
out
sbb
int
ret
addr16
jp
cmp
xor
mov
aam
leave
mov
fldenv
and
xchg
cmp
ljmp
ljmp
jno
mov
mov
sbbb
ja
fisubl
arpl
insb
or
imul
scas
xor
lcall
xor
test
and
dec
inc
daa
iret
push
adc
rorb
test
mov
rcll
sbb
imul
ficoms
sbb
mov
cmp
mov
popf
loop
hlt
inc
or
lock
test
icebp
sbb
jge
or
sbb
pop
dec
aaa
rcl
mov
outsb
rolb
push
je
jmp
push
popf
xor
stos
das
scas
enter
mov
mulb
lret
fucomip
pop
fcompl
loopne
in
inc
xlat
mov
jno
push
jl
cli
jbe
dec
jb
xor
movsl
jmp
andl
sbb
rcll
setns
jae
pop
inc
jp
dec
inc
ds
pop
sub
pop
js
push
repz
xor
subl
movsl
fldt
sarl
ja
shrb
mov
add
pop
jg
insb
stos
add
fcomps
inc
jb
add
cmp
and
ret
sub
pop
sub
or
test
bound
sub
js
movsb
lods
stc
sub
sahf
sahf
pop
and
cmp
jg
xchg
int
mov
mov
hlt
orb
adc
push
bound
push
cmp
or
mull
push
cld
shl
adc
xor
adc
mov
cmc
testb
bound
loop
inc
dec
stc
xchg
mov
mov
inc
arpl
data16
jg
loope
dec
mov
inc
ret
ljmp
filds
and
or
sbb
gs
jnp
pop
sbb
adc
and
test
mov
jle
sbb
or
mov
mov
mov
outsb
add
out
mov
dec
cmp
and
xor
stos
cmc
cmp
jae
insl
les
pusha
repz
pop
xabort
lea
xor
call
cmpsl
mov
and
pushf
outsl
cmc
ja
mov
mov
neg
roll
inc
xchg
dec
xchg
mov
dec
je
fldt
ja
cld
notb
int
std
sahf
xchg
cwtl
pop
lahf
inc
mov
movsl
dec
mov
loopne
jns
jb
hlt
push
insb
fildl
fistpl
mov
imul
lock
push
outsl
das
mov
out
mov
idivb
sarl
add
insl
sti
xchg
inc
dec
fidivrs
mov
hlt
mov
mov
add
jg
and
dec
bound
mov
imul
pop
fildl
ret
inc
pop
lea
add
cmp
notl
xchg
push
out
ljmp
imul
out
lahf
cmp
push
dec
mov
setl
nop
cltd
loope
into
test
outsb
dec
mov
or
xchg
dec
pusha
rcl
test
cmp
mov
sbb
fisttpll
push
xor
pop
jp
out
stos
pop
adc
push
jo
cli
add
fs
fnstenv
pop
mov
xor
fdivl
mov
add
mov
out
ja
add
dec
inc
aas
sahf
or
dec
lds
xor
data16
pushf
out
mov
xor
sbb
sbb
pop
jns
sarb
in
adc
outsb
loop
out
std
out
push
and
or
fadds
cmp
pop
in
mov
shll
in
jl
pusha
iret
sbb
fisttps
das
mov
jmp
sub
xor
xor
daa
popf
and
cs
push
shll
and
xchg
insb
je
cmpl
push
scas
cwtl
pop
pop
push
jae
adc
iret
xchg
lret
xor
adc
lods
cmc
inc
xor
mov
addr16
or
and
icebp
inc
scas
fimull
xor
lds
fidivrs
bound
jnp
rorb
inc
repnz
push
jnp
adc
xor
mov
arpl
dec
push
jbe
sbb
mov
xchg
aaa
xchg
adc
or
faddl
inc
imul
jge
pop
sbb
mov
xor
push
imulb
pop
out
xor
ds
adc
cmp
xchg
cmpsb
bound
dec
enter
daa
aas
xor
cmp
push
movsl
jno
lcall
mov
push
movsl
repnz
fs
lahf
aaa
icebp
mov
mov
ljmp
jecxz
add
sbb
pushf
add
xchg
repz
pop
jno
pusha
push
mov
loope
jo
sub
mov
cmp
xchg
outsb
outsb
shll
rclb
call
mov
sbb
popa
add
ja
xor
enter
lea
sub
cmp
pop
daa
pop
inc
lcall
cmp
sub
jl
inc
inc
test
jp
xor
mov
arpl
mov
int3
xor
and
es
sbb
fadd
leave
repnz
stos
lret
or
mov
scas
sbb
into
movsl
leave
or
cmc
fisubl
xor
mov
repnz
dec
nop
inc
fs
jmp
mov
dec
lock
clc
pop
out
sub
push
mov
xor
dec
cmp
stc
out
std
inc
mov
loopne
call
testl
sub
dec
aam
xchg
adc
loopne
cmp
xlat
pusha
mov
pop
mov
sub
sti
jno
cmp
dec
jg
aad
into
or
nop
and
cmp
or
les
insb
shl
inc
mov
mov
lea
pop
call
xchg
movsl
adc
cmc
pushf
sbb
dec
pop
mov
inc
jge
jno
cwtl
inc
mov
jmp
mov
hlt
xor
fnstenv
xor
jecxz
sbb
notb
std
inc
int3
dec
cwtl
adc
mov
adcl
pushf
add
scas
pushf
clc
mov
repz
mov
lds
xchg
push
dec
mov
cltd
outsl
scas
and
push
cli
rorl
and
insl
loop
lds
rcll
cmpsl
je,pt
mov
lret
add
lret
je
dec
mov
jbe
shlb
data16
rorb
sahf
sub
out
ret
sarb
add
jmp
frstor
mov
xor
aad
nop
xchg
jecxz
loopne
add
ret
lock
in
push
mov
add
pusha
push
daa
and
psubq
add
push
pop
cltd
sbb
lds
sbb
inc
dec
dec
test
mov
inc
sbb
sbb
pop
and
dec
cmc
push
adc
dec
add
cwtl
pushl
mov
or
push
xor
push
sbb
sub
mov
mov
or
inc
jg
or
or
dec
pop
dec
insl
jne
mov
mov
pop
pop
out
outsb
stos
andb
mov
daa
stc
outsl
in
ret
jmp
mov
push
in
sub
mov
fadd
jp
xor
mov
cmpsl
cmp
and
sbb
in
mov
pusha
push
dec
fildll
cltd
les
movsb
cli
repnz
not
jae
xchg
shll
popf
dec
push
outsl
mov
add
stos
pop
nop
test
xchg
mov
jnp
int
scas
sti
jae
push
mov
mov
hlt
ret
xchg
pop
mov
inc
cmp
xchg
and
or
lahf
cmp
inc
out
dec
xor
xchg
and
inc
sbb
mov
imul
sarb
movsl
repnz
mov
loop
inc
leave
mov
pop
hlt
xlat
lret
clc
arpl
inc
jns
ja
xchg
jge
jle
sbb
pop
aaa
push
aad
or
add
xchg
iret
int3
aam
push
pop
inc
xor
push
mov
xor
popa
shr
scas
xchg
and
in
in
movb
or
cmpsb
in
cmp
aad
hlt
enter
daa
ds
insl
jno
out
out
or
xor
js
pop
movsl
stc
jne
and
cmp
lahf
push
sbb
push
mov
dec
test
or
jae
or
js
and
push
cmp
mov
inc
sub
sbb
cmp
or
and
adc
or
in
repnz
add
or
push
push
int3
fcmovne
cli
add
pop
outsl
mov
cmpsb
push
dec
lcall
es
pop
jl
inc
xchg
rcrb
ret
orb
jg
call
inc
mov
inc
fwait
mov
imul
xor
or
arpl
fdivrs
inc
negl
dec
inc
lret
test
sahf
fmull
shl
into
mov
fprem1
mov
cmp
loop
icebp
stc
add
lods
fs
fwait
cli
adc
xchg
mov
ljmp
lea
jo
push
push
gs
jecxz
aaa
cwtl
mov
adc
cli
adc
mov
lds
add
mov
int
loopne
adc
xlat
lahf
dec
inc
sub
add
in
xchg
les
sti
and
cmp
lods
in
aad
ret
xchg
nop
imul
dec
mov
push
mov
loope
sub
repz
stc
jnp
incb
shr
pop
sti
lcall
jge
adc
and
pushf
lds
scas
jmp
inc
pushf
pop
sub
arpl
inc
mov
fnstcw
mov
jb
dec
fisttpl
or
jge
jecxz
mov
negb
call
inc
mov
daa
testl
lret
fcmovnu
cld
outsb
mov
push
insb
lock
add
fisubl
push
adc
rcrl
xchg
cmpsl
arpl
leave
aaa
sub
jle
cmpsl
cmp
lcall
mov
jge
mov
jge
fisubl
adc
sub
nop
aam
inc
popa
ret
pop
pop
mov
inc
in
fisttpll
mov
xchg
iret
enter
mov
fldt
push
lcall
adc
push
add
adc
mulb
addl
dec
xchg
mov
dec
cs
fsubrl
in
fistpl
gs
daa
sti
pop
rorb
jb
mov
stos
add
lcall
xor
adc
sub
sbb
cmp
in
mov
pop
pop
pop
pop
add
dec
sub
jnp
insl
test
or
lcall
cli
push
xchg
jne
sub
pop
out
dec
inc
arpl
fs
jns
mov
stos
xchg
or
xor
sbb
sub
mov
in
addr16
pop
data16
mov
mov
lahf
sbb
push
in
dec
fs
add
pop
scas
xchg
mov
xor
xchg
ror
andl
dec
push
mov
out
mov
aas
dec
xchg
stos
rcr
ret
and
xor
adc
add
cmp
fldcw
sbb
pop
test
mov
xchg
jae
lock
lahf
ljmp
pop
inc
inc
gs
inc
fidivl
out
mov
imul
cmpsb
lds
mov
rclb
repnz
add
hlt
and
or
jge
or
sbb
mov
or
in
jae
push
int3
mov
mulb
xchg
scas
fdivl
mov
testb
lods
loop
movsb
push
and
push
add
mov
in
mov
sub
cmp
push
jne
fwait
mov
xchg
movsl
add
repnz
pop
aam
jne
fsts
scas
cltd
test
aam
push
inc
daa
and
mov
sahf
js
in
rclb
xchg
cmpsb
push
jbe
loope
jb
sub
jns
cmp
hlt
adc
out
cmc
es
cmp
test
add
out
mov
xchg
bound
popa
push
repnz
ss
lcall
mov
sub
jb
sahf
xchg
test
test
mov
sbb
xorb
and
out
sub
fdivrs
daa
jne
fisubrs
out
mov
shr
sbb
int
cmc
adc
xor
outsl
mov
test
mov
dec
xchg
adc
aam
xchg
lea
sbb
mov
xor
cmp
fwait
cmp
xlat
adc
incb
frstor
sbb
loopne
inc
lahf
pop
fstpl
sti
imul
mov
xchg
fwait
mov
sbb
mov
gs
sub
in
in
lcall
fwait
sti
iret
gs
aad
sbb
rolb
inc
in
pop
fstps
or
les
xor
in
iret
movb
pushf
lea
shr
xlat
cmpsl
aas
and
addr16
or
cmp
jo
aam
mov
mov
shlb
inc
mov
cmp
into
xchg
sbb
jb
iret
es
loopne,pt
je
clc
xor
neg
into
jmp
xchg
jmp
and
inc
imul
dec
mov
cmp
or
push
mov
sbb
das
push
andl
xchg
xor
pop
pop
jno
xchg
or
fsubl
sub
dec
insl
mov
out
iret
mov
mov
icebp
jns
add
int
lretw
push
out
mov
test
xchg
pop
test
rcl
icebp
dec
subb
push
xor
ret
out
mov
cmp
mov
es
test
push
xchg
push
sbbb
fldl2t
lcall
out
push
out
enter
push
add
mov
insl
test
xor
shll
and
dec
xchg
icebp
fisubrs
rolb
rcrl
pop
jnp
fwait
stos
sub
jno
pop
fistps
add
push
jb
push
test
fidivl
aaa
mov
dec
mov
idivb
sbb
mov
aam
dec
sbb
scas
or
add
fwait
mov
inc
or
or
mov
out
adc
sub
mov
jns
ss
in
and
xchg
pop
inc
mov
sub
scas
fsubrl
pushf
fs
mov
stos
jmp
js
lock
mull
push
push
mov
and
addb
xchg
jmp
mov
jp
mov
sbb
jge
inc
popf
lcall
push
jle
inc
stos
inc
loope
and
jne
jnp
movsl
mov
push
dec
outsl
movsl
adc
jne
insl
mov
pop
inc
push
imul
subl
es
in
dec
fisubl
xchg
shlb
mov
add
push
fisubs
imul
rcr
inc
mov
mov
leave
jns
or
insl
fdivl
clc
jbe
leave
cmpsb
jge
jg
sbb
add
into
loop
or
in
repz
push
mov
pop
movsl
jl
push
jbe
mov
jo
shrl
xchg
and
loopnew
arpl
fmull
push
dec
pop
or
jmp
daa
in
mov
xor
daa
cmp
cmpl
gs
adc
or
ds
mov
xchg
pop
test
lock
mov
dec
movsl
sub
jge
js
inc
movsl
pop
cs
out
push
data16
test
cltd
cmp
inc
dec
outsb
cli
dec
push
mov
lcall
adc
dec
add
sub
push
and
lock
mov
sub
pop
movsb
mov
cmp
jnp
fcoml
add
and
xor
inc
mov
fdivl
test
andb
or
cmp
cmc
xor
negl
out
rorl
mov
jl
into
dec
mov
cmp
into
xor
outsl
pushf
push
mov
fists
adc
std
jb
jge
arpl
sbb
in
cli
out
loopne
xor
ret
mov
sub
gs
adc
insl
add
pop
adc
push
imul
push
gs
pop
pop
into
sbb
cmc
and
xlat
sbb
add
or
push
cmp
xchg
push
jae,pn
xor
imul
nop
and
dec
pusha
or
inc
idivl
lahf
les
xor
cmp
movb
ret
call
mov
push
mov
jmp
movsb
sbbl
jbe
inc
jmp
push
push
jb
mov
pop
fwait
je
push
sbb
mov
movsl
negb
bound
std
cmp
cmp
lods
mov
bound
mov
or
mov
inc
sbb
les
adc
xor
fisubs
mov
out
shl
cltd
imul
xchg
cmpsl
insl
xchg
imul
cmp
xchg
push
mov
push
lret
rcll
mov
mov
adc
movsb
jns
rol
lods
lea
insb
push
cmp
test
cmp
jge
nop
push
scas
push
push
fst
push
clc
jecxz
test
dec
mov
cmc
popa
lock
lods
and
push
jb
sub
es
mov
pushf
cmc
add
inc
cltd
mov
push
mov
xchg
sbb
xchg
push
dec
xchg
lea
sbb
cwtl
outsl
shll
shrl
cld
popa
mov
shlb
decl
jno
or
test
xorl
shll
ja
decl
inc
fwait
cld
adc
fwait
call
xor
jne
dec
xor
out
or
bound
pop
jns
dec
imul
sarb
stos
aas
mov
sub
test
lock
ja
cmpsb
bound
mov
jge
test
js
push
in
test
pusha
cmp
mov
mov
xchg
pop
outsb
cmpsl
jmp
push
lods
lahf
addl
push
inc
push
sbb
adc
xchg
push
mov
xchg
add
rorb
and
mov
pop
xor
popl
jns
shrd
orb
pop
imul
inc
pop
movsb
pop
jae
js
inc
xchg
add
mov
dec
ficoml
xchg
inc
xchg
sub
imul
xchg
faddp
test
lds
in
negb
jnp
fstpt
mov
hlt
mov
mov
lods
jge
popa
sbb
das
push
or
in
xor
xchg
inc
inc
pop
aam
ds
pop
mov
jo
xlat
or
and
in
and
adc
sbb
jg
sahf
jmp
dec
in
mov
shr
daa
cmp
dec
cmp
cltd
fbstp
cmp
dec
jns
jbe
loope
adc
push
clc
out
add
in
lahf
mov
in
push
jb,pn
test
push
sub
adc
mov
js
xor
pop
insl
or
loope
add
sub
mov
mov
pop
xchg
mov
add
nop
popl
repnz
aaa
add
mov
xor
or
push
daa
inc
xor
das
mov
push
lcall
sbb
sti
sahf
fisubrs
iret
sahf
int
je
push
cmp
sbbb
jg
xorb
outsb
js
mov
inc
andb
popf
or
cmp
mov
cmp
pop
pop
mov
mov
mov
mov
add
add
into
xor
repnz
push
ret
or
stc
daa
push
xchg
fs
es
push
mov
lods
fs
rorb
sbb
cli
and
and
mov
dec
repz
fsubp
loopne
fisubrl
sbb
imul
stos
xchg
and
sbb
xor
out
xlat
pop
push
push
sub
popa
mov
aad
addr16
sub
rolb
nop
cld
movsb
jne
mov
bound
flds
add
repz
xchg
and
int
popf
and
imul
jg
pushf
outsl
cmpsl
jmp
cld
hlt
pop
push
movsb
roll
push
inc
add
dec
aas
addr16
movsb
jb
jp
dec
sub
fnstenv
in
ret
mulb
add
loope
movsb
cwtl
pushl
add
add
insb
data16
adc
imul
mov
rclb
das
adc
mov
jne
pop
and
adc
roll
das
es
mov
dec
cmpsl
cmp
dec
mov
daa
je
cld
and
lods
mov
xchg
sbb
mov
ret
xor
sub
adc
dec
pop
xchg
ret
or
icebp
push
jb
outsl
out
hlt
clc
push
mov
fucomi
lods
decb
lods
nop
in
dec
mov
mov
jb
movsb
adc
push
xchg
mov
emms
pop
push
add
fwait
pop
cltd
hlt
mov
stos
mov
loope
xchg
pop
cltd
dec
arpl
test
adc
xchg
mov
rorl
and
stos
push
fnstenv
add
jmp
mov
shlb
sub
loope
data16
mov
insl
dec
mov
mov
mov
and
or
inc
sbb
pop
aas
decb
push
test
mov
and
stc
scas
mov
add
in
aad
xchg
stc
xorb
es
fdivrs
daa
or
pop
jp
cwtl
push
mov
ds
mov
in
cmc
imul
arpl
xor
pusha
sub
fildll
xchg
mov
orb
adc
cmp
add
mov
dec
cmp
push
cld
fisubs
and
mov
insb
mov
jnp
mov
xchg
push
adc
test
outsb
out
test
xchg
xchg
mov
xor
jmp
fs
mov
or
mov
pop
inc
loop
cmp
xchg
addb
loop
neg
addr16
pop
rclb
xor
cs
mov
jcxz
hlt
add
mov
jge
adc
sbb
mov
or
cmp
add
test
int3
add
pop
add
xlat
push
cmp
xlat
xor
int
scas
add
jecxz
mov
loopne
repnz
call
mov
sub
jno
adc
ret
daa
cmp
std
cmp
out
add
stos
xchg
in
call
dec
mov
and
lock
push
add
jl
fisubs
push
xor
add
rcll
insb
pop
adc
jge
lods
or
out
fs
test
sub
xchg
imul
nop
in
ror
adc
andb
cmpsb
mov
cmpsb
sbb
cltd
xor
inc
and
sub
int
lahf
shrb
add
mov
push
ss
fsubl
cmpsb
in
sahf
jo
cli
test
out
cmpb
jg
mov
inc
mov
shlb
mov
xor
and
fidivs
hlt
push
cmp
imul
negl
stc
sahf
lret
enter
jno
pop
add
das
aaa
xlat
into
adc
sub
xor
xchg
loop
sahf
sub
ficomps
fs
push
jge
and
xchg
lods
dec
sub
push
push
out
sbb
xor
jns
cmp
movb
lods
push
gs
push
adc
pop
cmp
js
jl
cmp
xor
add
mov
xchg
in
mov
cmp
imul
jecxz
mov
inc
push
add
faddl
cmp
addr16
and
xlat
neg
dec
push
xchg
push
inc
sbb
pop
inc
les
shl
push
nop
outsl
or
jne
nop
lcall
mov
and
adc
nop
pushf
jno
mov
pop
sbb
pop
mov
sbb
inc
pop
xchg
xchg
aas
push
inc
push
jb
popf
mov
mov
or
mov
jbe
mov
cwtl
mov
pop
sub
add
jae
lcall
mov
les
jp
adc
repnz
mov
sub
pop
and
xchg
call
xchg
ds
es
insl
insl
sub
shl
cmpsl
cmp
jmp
icebp
push
cld
dec
pop
int3
lret
lahf
mov
mov
cltd
push
mov
loop
out
shrb
shrl
pop
cmpsb
cs
or
ret
fwait
test
frstor
outsl
out
lret
mov
jb
push
mov
lods
sti
mov
mov
icebp
and
push
outsb
mov
and
add
std
cltd
sub
mov
cmp
mov
adc
xchg
nop
xor
xor
push
stos
cmc
in
push
inc
inc
es
push
lods
mov
xor
into
or
xchg
mov
xchg
add
mov
fildl
jnp
lods
dec
imul
mov
leave
add
fwait
inc
pusha
jbe
xchg
das
jne
add
mov
pop
inc
out
leave
mov
bnd
pusha
dec
in
sub
dec
push
or
jae
inc
sub
lahf
inc
int3
addr16
xchg
sarl
jae
mov
cmpsb
mov
pop
sbb
mov
xchg
mov
out
xchg
jmp
jmp
xchg
in
loopne
sbbl
push
jo
popf
ret
sub
cmp
cmp
pushf
and
and
push
insb
imulb
data16
cmpsb
cmp
ljmp
adc
mov
int
sbb
cmpsb
cmp
pop
fnstenv
inc
je
mov
sets
jg
or
push
jno
inc
popa
into
pop
fidivrl
in
xlat
test
sbb
push
imul
fimuls
add
lds
add
sub
and
addl
xor
or
lea
sbb
xor
aaa
or
or
outsl
test
iret
xchg
imul
pop
xor
outsb
xor
sub
scas
loope
popf
and
and
push
cmp
and
pop
or
daa
cmp
mov
pop
div
jno
mov
jl
lret
je
push
jnp
ds
out
nop
movsl
sbb
add
cmp
inc
push
aam
push
push
add
inc
arpl
mov
pop
cmp
js
int3
rcll
jmp
cltd
push
insb
push
loope
daa
jmp
cmp
shrb
clc
jne
out
rcrb
jp
add
out
sbb
adc
imul
lds
sub
xorb
sbb
pop
and
lcall
pop
and
push
cwtl
cmp
in
xchg
rcrl
gs
pushf
adcb
les
pop
int
mov
je
and
sbb
aaa
cmp
push
fsubs
rol
neg
outsb
lretw
mov
adc
lcall
mov
div
lahf
imul
cmp
aad
mov
xchg
or
adcb
jo
movsl
data16
js
xor
mov
out
jo
cli
mov
rorb
or
dec
lahf
gs
loopne
mov
loope
jmp
stos
inc
adc
mov
outsl
xchg
cmpsl
pushl
mov
sbb
xlat
js
push
rcll
mov
stos
mov
mov
pushf
xor
nop
mov
inc
dec
jge
and
adc
hlt
mov
sub
or
hlt
ret
and
and
cli
pop
xlat
adc
shrl
dec
clc
mov
repz
cmpb
cmp
xchg
aas
movsl
xor
hlt
push
sbb
std
jecxz
test
mul
rol
std
das
aam
cwtl
jne
push
mov
lock
and
fcmovne
pop
mov
adc
mov
jno
nop
lock
inc
das
rorl
push
mov
jecxz
hlt
and
imul
jbe
es
mov
add
cmc
jge
icebp
aad
mov
lret
push
xor
mov
mov
or
pop
add
sub
cli
aam
or
push
clc
shll
dec
cmpsb
jbe
xchg
iret
xor
xchg
adc
lods
lods
dec
cmp
push
dec
cmc
xchg
xor
sysexit
in
cltd
add
pop
cltd
bound
out
pop
stos
add
cs
jp
xor
push
test
inc
and
in
xchg
sarl
fildl
stos
in
cmp
add
and
ljmp
xor
test
sub
fcoms
cmpb
out
lea
fwait
leave
dec
jmp
mov
fstps
imul
cmpsb
out
test
jp
pop
cmp
jns
popa
mov
inc
pop
xchg
xchg
iret
xor
test
sub
lcall
jp
add
sub
mov
lret
jle
fisubl
pusha
or
fstp
call
jb
jmp
mov
js
push
mov
lret
scas
hlt
push
jp
stos
psllq
insb
popa
mov
add
dec
add
and
mov
ret
adc
adc
push
jae
sarl
stos
pop
sbb
aaa
mov
fidivl
dec
adcb
jo
imul
rcr
lods
pop
ja
ljmp
mov
aam
push
hlt
cltd
in
enter
sub
mov
jge
xor
aaa
lret
or
pop
and
mov
int3
push
inc
loop
popa
cmp
mov
jo
xchg
cmpsb
scas
shlb
and
cmp
movsb
or
push
mov
cmpsb
mull
in
aas
xor
daa
cmp
loopne
mov
jno
loopne
jl
int3
pop
dec
aad
ds
mov
movsl
and
adc
lahf
adc
push
cmpsl
sbb
adc
inc
repnz
in
pop
dec
rcrl
and
js
ja
pop
sub
ljmp
int3
adc
out
jmp
push
adc
ss
fs
xchg
sbbb
sbb
jae
add
pop
in
popf
mov
push
xor
and
fs
inc
sub
mov
mov
es
in
adc
cld
push
sbb
fmull
sahf
mov
xchg
test
addr16
jg
inc
shrl
mov
or
and
dec
cmp
loope
movsl
negl
push
lahf
shrl
dec
sbb
add
cmc
data16
xor
sbb
sbb
xor
push
pop
inc
or
into
data16
lods
sbb
fs
dec
mov
xor
pop
sbb
add
repnz
gs
outsl
outsb
loopne
iret
jnp
js
test
mov
pop
cltd
adc
adc
ss
lds
loope
push
xlat
sbb
cmpsl
mov
push
aaa
pop
sti
cmp
or
decl
aad
mov
nop
push
dec
fsubl
in
sub
fwait
les
out
adc
aaa
lea
adc
ds
lahf
pushf
outsl
pop
mov
sub
pushf
xchg
pop
decl
icebp
inc
push
test
add
jg
dec
xchg
cmpsl
dec
je
push
test
imulb
aaa
sbb
cwtl
xor
mov
or
xorl
lret
mov
clc
push
mov
mov
aam
lock
fsubrs
mov
pushf
mov
lcall
shll
repz
mov
jge
dec
mov
cmpsw
aaa
mov
pushf
icebp
lods
fdivr
movsb
pop
dec
lret
jge
imul
and
and
and
rclb
cmp
out
mov
js
mov
jecxz
fnsave
xor
iret
ret
xor
add
aas
lods
sarl
sub
gs
jns
and
js
sete
movsl
cltd
cltd
loopne
test
lods
mov
ret
aaa
xchg
adc
test
mov
xchg
mov
pop
rorl
pop
test
sar
inc
stos
rorl
push
mov
icebp
add
cmp
cltd
decl
add
movsl
or
mov
mov
sbb
fs
mov
test
xchg
dec
inc
negl
ds
movsb
out
or
pusha
popf
jne
inc
loop
addr16
xor
int
jns
push
add
rcl
mov
out
cwtl
out
dec
pop
sub
xchg
mov
sbb
inc
test
dec
xchg
mov
mov
jle
sub
in
adc
pusha
cmpsl
mov
iret
xchg
movsl
xor
gs
xchg
andl
xorb
pop
pop
cmp
mov
jns
and
sbbl
int3
and
jnp
and
loop
stos
add
iret
mov
adc
int3
cmp
pop
inc
xchg
inc
mov
lea
mov
inc
xchg
daa
or
cld
xchg
and
mov
in
test
sbb
dec
jmp
ficoms
and
jno
pop
bound
pop
mov
daa
cltd
push
int3
mov
ret
mov
ja
std
jbe
push
pop
jge
sbb
sbb
mov
or
hlt
sbb
std
scas
loopne
inc
inc
push
pop
nop
xchg
push
in
sahf
xor
fdivrp
or
and
sbb
movsb
xchg
sub
push
fcmove
pusha
cmpsb
jp
jecxz
es
cmp
mov
je
aaa
lods
out
cmp
and
jl
mov
fistpll
insl
push
mov
outsb
xor
mov
push
test
xchg
sub
inc
addl
pop
xchg
pusha
js
mov
pop
imul
mul
push
fnstenv
sub
xor
sahf
mov
ret
mov
rclb
jmp
ret
and
jno
loope
xor
aaa
lock
push
xor
cltd
sub
pop
sahf
lcall
cmp
cmpsl
loope
sub
mov
or
leave
faddl
jg
mov
mov
cmp
dec
mov
mov
divb
ss
inc
scas
fcomps
fmul
push
adc
mov
lcall
mov
mov
movsb
xor
scas
mov
sti
mov
add
fs
push
stc
adc
jge
mov
lods
add
pushf
out
test
cli
out
ljmp
data16
jno
xchg
adc
adc
je
push
pop
xchg
xchg
int3
adc
cmp
add
shl
sub
rcrl
xlat
pop
mov
inc
mov
addl
mov
nop
push
jbe
inc
push
cli
test
bound
les
or
adc
add
mov
mov
adc
mov
cmpsl
jmp
add
pop
mov
jnp
inc
jo
jnp
jecxz
insb
jb
aas
mov
je
push
jmp
decb
insl
push
mov
jge
call
mov
stos
push
mov
cmpsb
ja
enter
aaa
mov
push
jno
inc
cmp
mov
das
insb
mov
andb
push
jge
and
adc
xorl
fmuls
pop
pop
cmpsl
ss
ja
pop
pop
add
cld
iret
cltd
dec
lret
in
insb
inc
mov
scas
mov
mov
aas
aas
into
shl
mov
data16
or
ret
dec
scas
adc
fstpl
dec
xchg
xchg
mov
mov
arpl
mov
sbb
xchg
shl
push
decl
jg
jnp
or
jb
inc
mov
in
cmp
cmp
clc
mov
sub
dec
xchg
dec
shll
repnz
jge
xor
sub
mov
add
add
stos
into
shll
inc
mov
push
xor
xor
lret
or
pop
xchg
mov
jp
inc
ja
xchg
into
dec
iret
js
inc
mov
fwait
rcrl
dec
das
push
in
adc
mov
addb
inc
xchg
sarb
test
pop
daa
adc
cld
cmp
sub
nop
fcomp
addr16
push
ds
adc
lcall
jno
in
imul
fbld
jp
xchg
js
cmp
xchg
dec
movsb
xor
or
scas
push
lds
cmp
push
clc
xchg
stos
cmc
mov
and
jge
aaa
pop
pop
jnp
mov
scas
adc
outsb
push
repnz
adc
xor
iret
ljmp
pop
jle
popf
inc
xchg
lods
icebp
xchg
test
jo
ja
or
push
jmp
xchg
lock
xchg
fsubr
aam
enter
sahf
popa
fdivp
xor
clc
pop
push
sarb
mov
jp
leave
inc
or
arpl
gs
jge
jecxz
sbb
cmpsb
aaa
dec
imul
in
inc
sahf
add
mov
push
enter
arpl
jo
jae
scas
jle
mov
dec
xlat
fstpt
lods
mov
movsb
push
push
add
sub
jbe
or
mov
cmc
inc
xorl
xchg
push
dec
movsb
idivl
nop
cwtl
or
or
scas
push
dec
jmp
out
push
popa
add
inc
adc
fists
pop
scas
dec
bound
xchg
push
jbe
outsb
call
adc
outsb
dec
cmp
adc
in
sbb
and
dec
addb
add
imul
push
ss
int
jge
sub
sahf
insb
mov
push
xchg
testl
sub
mov
insb
and
dec
jg
aam
mov
and
mov
xor
sahf
add
fwait
dec
loop
push
movsb
pop
notl
call
adc
mov
dec
sbb
fistl
mov
jns
xor
add
outsl
arpl
mov
repnz
mov
push
xchg
adc
cmp
inc
stos
lods
out
push
mov
mov
cli
and
xor
imul
inc
push
cmp
popf
loopne
sub
cmp
imul
add
xchg
lock
mov
xlat
xchg
jno
sub
in
in
cmpsl
adc
lds
aad
jle
nop
inc
push
cmp
lret
imul
and
repz
push
ss
lea
gs
popf
std
fs
lock
pushf
sbb
xor
cmp
sbb
or
aas
andb
movsb
xor
je
bound
divb
fmulp
cwtl
cmpsb
cmp
mov
int
mov
shl
sbbl
fistl
int
mov
jae
lock
out
outsb
and
adc
mov
rcl
mov
es
pop
sub
cmpsl
xor
fsubl
scas
aaa
cld
cli
stos
pop
lret
pop
xor
and
and
push
adc
pop
or
shlb
out
inc
or
ret
xlat
out
notb
arpl
clc
inc
push
ljmp
call
mov
jge
ret
xchg
pop
xchg
xor
fidivl
out
mov
test
ja
and
xchg
iret
inc
dec
mov
jae
xor
sbb
dec
lahf
sarl
lds
push
into
jne
add
jb
pushf
decl
push
xor
in
call
mov
mov
pusha
push
ja
ficoml
inc
and
stc
sbbb
mov
jne
adc
out
inc
jg
fcoms
adc
xchg
test
out
jg
push
sub
mov
sbb
call
xlat
mov
pop
pop
leave
jle
stos
or
push
and
pusha
fnsave
pop
filds
cs
dec
dec
loope
push
icebp
out
sbb
mov
fwait
popa
jp
rclb
mov
stos
xchg
mov
aaa
jl
stos
push
xor
mov
mov
scas
jbe
pusha
push
cmp
add
mov
lahf
iret
dec
jbe
ret
mov
mov
test
jae
outsb
adc
cwtl
lahf
inc
or
repnz
pop
mov
xchg
xor
push
imul
adc
jg
or
cwtl
nop
push
mov
int
lods
leave
mov
insb
inc
arpl
ljmp
add
mov
pop
rolb
fisttps
add
imul
out
xchg
add
stos
idivb
jo
add
pop
cmp
scas
cmp
movsb
test
rorl
sbb
in
hlt
add
mov
xor
pop
nop
jno
aas
outsl
jl
les
dec
adc
ds
jge
cmp
mov
insl
push
mov
test
sub
std
inc
lahf
enter
mov
pop
aad
dec
js
in
mov
out
adc
and
sbb
sub
push
outsb
cmp
lods
xchg
outsb
scas
xor
gs
dec
into
popl
ljmp
add
xorl
cmp
int
out
mov
mov
jg
sbb
out
push
jmp
jp
sub
outsb
xor
fsubl
mov
cmp
mov
daa
sbb
and
push
cmp
adc
gs
add
jo
outsl
mov
and
into
cmp
cmc
mov
cwtl
test
mov
xlat
loop
addb
mov
pop
shlw
into
inc
lahf
out
lock
cli
push
inc
loope
sbb
fs
hlt
dec
or
ja
pop
bound
gs
test
jns
pop
aad
jmp
xor
push
xchg
adc
mov
mov
sbb
xchg
into
out
cmpsl
cli
sub
mov
and
push
sahf
ja
inc
push
loope
sub
aad
negl
dec
stc
and
fnop
mov
les
pop
sbb
pusha
lea
fcmovnu
sbb
les
jp
fisttps
pop
pushf
enter
add
ret
add
inc
ret
push
insl
inc
cmpsb
fidivrl
and
shlb
pop
rorb
fwait
jp
and
push
sbb
nop
div
sbb
lret
incb
mov
jae
mov
mov
xor
add
test
mov
mov
pop
shl
nop
shrl
fidivl
idivl
mov
or
pop
add
insl
call
test
mov
xor
cld
and
mov
jle
mov
xlat
xor
jge
push
mov
shrl
sub
pop
mov
push
add
sahf
fucomp
ret
sbbb
xchg
push
lret
pop
mov
popa
xchg
and
lods
adc
int
loopne
xor
mov
popa
cmpxchg
test
mov
leave
inc
test
or
dec
int
jge
out
lea
sbb
loope
pop
shll
stos
mov
movsb
mov
lea
call
fwait
dec
or
dec
push
xor
repnz
mov
in
jo
xchg
mov
sbb
mov
int3
inc
mov
inc
fwait
xor
xorl
test
cltd
bound
das
jns
int3
mov
xchg
rcrl
sub
xchg
les
xor
jp
inc
sub
rcrb
xchg
jle
xlat
mov
pusha
js
lret
lcall
dec
and
xchg
in
add
xchg
push
aad
rcrb
add
jbe
subb
sarl
dec
int3
jnp
mov
call
adc
pop
ret
pop
in
imul
lds
dec
inc
fwait
or
or
insl
sbb
inc
faddl
addr16
mov
sbb
iret
fisubrl
inc
sub
cmp
mov
shlb
mov
and
dec
leave
xor
xor
ds
arpl
pop
jge
and
sbb
mov
or
ret
int3
add
adc
push
mov
inc
xor
out
mov
imul
pushf
outsb
cmp
pop
test
push
cmp
mov
enter
daa
xor
xlat
cmp
pop
jno
cld
sub
mov
out
ds
js
movsl
aas
jle
and
enter
cmpsl
adcb
es
mull
leave
xor
pop
cld
push
test
call
pusha
push
xor
sub
sub
cmp
daa
pop
adc
mov
cmpsl
add
stos
in
push
add
lret
fnstcw
insl
push
cmp
push
int
inc
dec
sub
push
pop
pushf
sbb
test
inc
fsubrl
mov
inc
test
sbb
sbbb
mov
cmp
mov
mov
mov
mov
and
adc
xchg
cmp
int
sbb
xchg
ja
lret
test
mov
jno
sbb
imul
xorb
cmpsb
aas
hlt
outsl
xchg
xlat
push
loop
dec
dec
stc
sub
xchg
fs
inc
cltd
adc
mov
sahf
lods
mov
jae
add
lret
fidivl
xor
add
or
or
gs
push
and
inc
ficoml
pop
hlt
adc
addr16
imul
leave
add
std
xchg
jbe
add
int
cmp
adc
cmp
add
fsubr
ret
sti
mulb
rcl
mov
test
inc
dec
flds
dec
les
jmp
sbb
push
cli
adc
call
fwait
outsb
test
push
cmp
ss
fwait
pushf
jae
ds
sar
pop
mov
inc
dec
inc
sarl
jb
mov
dec
insl
xor
sub
divb
dec
cmpsl
std
jb
js
sbb
dec
mov
sahf
sbb
orl
fidivl
jg
xchg
mov
mov
mov
mov
jbe
push
and
addl
lds
insl
iret
ror
dec
mov
shll
icebp
or
paddb
je
cmp
sarb
ret
jle
mov
pushf
mov
rcrb
sub
lods
aam
add
ret
cmc
cmp
push
mov
fisttpll
test
clc
mov
and
push
popa
test
ljmp
in
out
inc
pop
fsts
nop
cmp
adc
dec
add
adc
adc
dec
xor
jb
imul
sbb
adc
imul
fidivrl
push
adc
and
int3
loopne
add
inc
cmp
aas
add
or
xchg
xor
add
mov
daa
sbb
cmp
pop
pop
stos
testl
test
add
jns
or
fsts
pusha
cmp
dec
fmul
aaa
jne
jne
mov
pop
gs
add
inc
and
in
push
add
out
iret
imull
andl
mov
xor
mov
jle
clc
ss
rorb
xorl
xchg
icebp
xor
jmp
scas
pop
enter
aas
push
pop
popf
dec
popf
stc
xchg
xlat
mov
mov
xor
mov
insb
js
push
dec
push
mov
push
call
dec
iret
pop
das
jbe
sbb
push
inc
mov
xor
sub
out
or
call
jge
fisubrl
jbe
sbb
clc
aam
imul
cmc
lds
ror
mov
jae
xlat
leave
test
cld
hlt
adc
arpl
push
xor
fwait
int3
sbb
je
test
push
add
or
mov
dec
test
push
jno
dec
xor
dec
pop
mov
sbb
dec
cmp
mov
movsb
mov
in
insl
cmpsb
xchg
dec
lahf
mov
daa
xor
sub
mov
adc
jl
cmp
icebp
adc
in
movsl
inc
fdivs
and
ja
lahf
stos
loop
mov
aas
push
ret
inc
mov
dec
lcall
jbe
pop
test
loope
in
jb
mov
inc
cmp
cmp
or
adc
jge
cmp
mov
out
add
clc
mov
push
aas
imul
cmpsl
int
pop
sbb
xchg
sbb
sub
mov
test
sub
es
mov
jmp
and
lds
cmp
mov
mov
and
rcrl
mov
js
nop
into
dec
adc
xor
sti
movsl
outsl
jae
mov
inc
dec
cmp
cwtl
stc
fs
adc
movw
pushf
mov
addr16
out
dec
inc
cli
mov
ljmp
sub
movsb
mov
xchg
loopne
push
pop
adc
mov
imul
pop
imul
or
push
sub
push
mov
sub
mov
cs
xor
ljmp
dec
mov
cmp
fnstcw
test
mov
adc
pop
mov
ss
sbb
pop
or
adc
fnsave
dec
pop
pop
cs
shll
mov
aas
pop
push
in
popf
inc
xor
jb
je
push
mov
idivb
add
sbb
sbb
fs
outsl
mov
mov
stos
fninit
cmpsb
pop
mov
mov
lock
mov
or
mov
sub
push
and
mov
pop
sub
pop
out
dec
popf
ljmp
cmpsl
xor
sarb
sbb
cld
jnp
fmul
test
sbb
lret
mov
mov
inc
pop
sub
xor
aam
call
ret
test
push
mov
fstp
sub
clc
divb
ljmp
and
sub
xchg
fdiv
sbb
imul
add
jae
cltd
lods
in
mov
aaa
ret
xchg
lock
fwait
jmp
in
adc
push
lahf
lcall
and
stos
jle
test
mov
imul
es
jg
loop
adc
push
push
mov
fildll
mov
data16
fwait
adc
ds
fwait
mov
push
jne
cmp
mov
and
out
loop
int3
bound
fldenv
xchg
xor
or
pop
or
addr16
adc
jp
and
mov
fs
jle
or
daa
pusha
scas
lock
mov
testl
xchg
jp
mov
push
sbb
in
and
jo
stos
shll
insb
jecxz
jecxz
std
leave
leave
scas
lahf
loopne
push
push
pop
adc
mov
ret
pop
pop
pop
loopne
inc
shrl
arpl
pop
or
arpl
lea
cmp
xor
je
repz
fidivrs
dec
lds
ret
shr
sarl
fistpll
pop
outsl
xchg
hlt
pop
fildll
ret
jbe
xor
jge
cmc
xor
xor
push
mov
mov
mov
int3
fsubrs
imul
or
xor
movsl
and
scas
cli
jns
and
mov
ficoms
fiadds
or
in
test
pop
push
xor
jmp
rcr
jno
loope
jl
xor
dec
pusha
or
sbb
dec
movsl
dec
xchg
outsl
and
rcrl
cltd
lock
xchg
xchg
xlat
push
lea
jmp
lret
pop
dec
push
mov
pop
movsb
movsl
jb
jle
movsb
loope
mov
cmp
push
test
in
adc
pop
push
cmpsb
sahf
push
adc
sbb
dec
sbb
fnsave
ja
add
inc
sbb
int
lcall
lcall
push
out
les
push
push
sub
cmc
sahf
mov
push
dec
repz
jg
sub
popf
movsb
fdivl
mov
adc
inc
jg
notl
pop
xchg
lret
fadd
xor
int
sbb
mov
adc
insl
outsl
push
pop
fidivrl
stc
xchg
ret
das
fs
mov
cltd
gs
dec
sbb
orl
mov
popf
jecxz
adc
cmp
in
mov
xor
add
pushf
cmp
outsl
sbb
in
xor
ret
adc
push
mov
add
mov
sbb
inc
call
xor
jnp
mov
xor
dec
sti
push
mov
cs
or
aad
mov
push
dec
push
inc
xor
mov
fnstenv
rol
mov
add
scas
lods
enter
and
cmp
cltd
out
mov
adc
xor
pushf
leave
inc
sub
roll
test
pop
inc
xchg
inc
idivl
data16
pop
xlat
dec
pop
push
cmp
add
mov
dec
lea
push
mov
sarb
mov
addb
mov
or
into
lods
or
adc
outsl
mov
mov
loop
arpl
push
rcr
das
ljmp
mov
nop
jb
rorl
lock
mov
cmp
lcall
pop
fldl
mov
cmpsb
cmp
lret
pop
jmp
mov
sar
cmp
fisubrl
rolb
lods
sub
mov
dec
fwait
ret
adc
insb
fstpl
ljmp
addr16
ljmp
ljmp
xor
out
or
xchg
xchg
and
push
inc
adc
adc
fidivrl
cltd
jecxz
pop
test
mov
xchg
cmp
lahf
pop
test
lcall
leave
and
pop
aam
shrl
pop
call
roll
std
inc
cli
je
in
jg
pop
ds
xor
and
in
mov
mov
pop
dec
mov
and
imul
rorb
mov
mov
gs
stc
pusha
out
sarl
and
outsl
jns
push
dec
in
mov
xchg
rol
out
lret
idiv
xchg
or
cmp
les
jp
popf
or
push
cmpsb
mov
rcl
das
jle
push
cs
out
jecxz
dec
add
xchg
xchg
out
sbb
das
xchg
jns
inc
iret
lea
fdivp
sbb
pusha
orl
jne
stos
xor
or
mov
loop
jnp
add
add
rclb
sbb
neg
ret
test
xchg
adc
jae
push
jne
movsb
fisttps
aad
pop
xorb
fistl
imul
fisubs
xchg
mov
rolb
repnz
mov
cmpsb
lods
jne
shr
mov
xchg
xchg
xor
sbb
pop
outsl
aaa
add
repz
mov
pop
push
aaa
cli
into
xor
add
mov
and
lret
inc
pop
or
adc
cmpsb
mov
in
nop
inc
xor
xchg
mov
add
hlt
xchg
jno
or
jl
std
jnp
iret
mov
pop
movsl
push
mov
sbb
insb
je
test
pop
adc
scas
loop
pop
jno
xchg
js
dec
out
pop
jecxz
sbb
pop
sub
loope
pop
sub
mov
or
mov
adc
xor
and
jecxz
dec
sbb
cli
add
push
int
inc
dec
out
push
inc
cmp
int
pushf
lods
sub
sbbb
sub
fsubrl
popf
ljmp
jns
subb
jg
mov
mov
mov
pop
mov
cmc
divl
ss
pop
fnstcw
out
not
lods
int3
lret
lret
dec
cmc
mov
arpl
into
pmuludq
xor
and
loop
loopne
stc
dec
xchg
movsb
fsubrs
in
adc
sub
data16
pop
lods
push
jge
hlt
addr16
adc
insb
xor
movsb
cmp
add
or
arpl
out
xor
sbb
loopne
je
pop
push
sbb
adc
inc
cmp
loopne
add
pop
jbe
mov
scas
lods
cmp
cmp
shrb
xchg
mov
add
adc
add
jnp
mov
mov
js
leave
nop
mov
dec
jne
cmpsb
inc
enter
lods
out
shr
add
cltd
cs
jbe,pn
das
fsubrs
fwait
aad
sbb
pop
outsl
mov
repz
je
or
rolb
inc
inc
adc
xlat
aas
popf
pop
and
lcall
fldcw
dec
hlt
jnp
pop
cltd
xor
popf
insb
std
imul
mov
ss
xor
adcl
push
fildl
adc
test
mov
imul
scas
cli
and
call
dec
es
mov
dec
xchg
leave
test
xor
mov
lea
shll
lret
xchg
outsl
and
pop
out
pop
stc
dec
adc
aad
mov
aam
icebp
into
push
adc
fstp
test
cmp
add
ljmp
lods
mov
decl
insb
aad
xchg
push
mov
and
lock
mov
cltd
sbb
lahf
mov
jne
xchg
or
xchg
sub
pop
movsb
inc
sbb
shll
lea
mov
std
out
add
stc
popa
mov
fsubrl
or
sub
xor
das
dec
mov
lock
enter
jmp
ja
jmp
pop
inc
sbb
jmp
dec
andl
jae
mov
xchg
ja
in
cli
les
push
jbe
sub
jb
inc
addr16
cld
cmpsl
jp
int3
and
jl
sbb
stc
adc
in
fwait
sub
fnstsw
or
xchg
push
add
xchg
adc
jmp
xor
mov
pop
mov
jb
lret
stos
cmpsl
mov
shll
insb
mov
add
gs
push
pushf
outsb
into
adc
gs
and
leave
ret
jle
enter
xlat
mov
enter
testb
cmp
fcmove
pop
xchg
out
mov
lret
imul
pop
faddp
dec
mov
and
pop
rcrb
xor
insb
into
ror
or
iret
loopne
loopne
sti
jbe
push
out
jge
push
outsb
sbb
cmpl
sahf
out
lods
add
scas
int3
scas
insl
inc
pop
fnstcw
push
sbb
mov
jo
cmc
sti
scas
mov
xchg
jb
imull
mov
cmpsb
psubq
in
ja
dec
enter
daa
xor
mov
jl
popf
std
dec
cmp
bound
add
stos
test
push
aas
sub
test
and
mov
push
pop
jno
mov
js
cltd
mov
and
fs
loope
shrl
and
addr16
mov
sahf
je
adc
push
insl
popa
pop
cmp
push
sbb
jp
xor
shrb
sub
hlt
jo
cwtl
test
fists
xorl
push
jo
sahf
into
inc
inc
test
and
mov
test
mov
xchg
inc
and
push
ss
add
xchg
fdivrs
cs
das
shll
mov
lret
mov
cmc
sahf
and
outsl
adc
push
loop
jp
stc
add
enter
adc
aaa
cmp
lods
push
test
mov
rsm
sbb
push
out
xor
stc
cmp
clc
or
adc
or
mov
ja
loopne
and
pop
jo
mov
push
inc
test
and
ja
jbe
lds
scas
loope
xchg
subb
add
cmp
jae
sub
shlb
outsb
fisubrl
mov
cs
xchg
repnz
xor
nop
gs
dec
aam
test
xchg
pop
push
repz
fsubrl
repz
and
lea
push
int3
xchg
sbbb
and
push
adc
nop
dec
pop
pop
xchg
inc
mov
sub
add
jb
sub
dec
dec
add
xchg
inc
mov
testb
std
push
jl
or
mov
jno
mov
insb
hlt
dec
movsb
inc
pushf
cld
mov
dec
jecxz
jo
mov
or
cli
mov
push
dec
mov
cmpsb
mov
shrl
lret
imul
mov
mov
fs
daa
cld
cld
jl
lret
cmc
fbstp
repz
popf
and
clc
pop
adc
sbb
push
sub
mov
inc
xor
rcll
rcrl
jo
clc
cmpsl
xor
ljmp
sub
nop
sub
iret
nop
jl
mov
mov
cld
ds
jl
pop
xchg
mov
jns
xchg
mov
imul
xchg
popl
sbb
dec
cwtl
rol
mov
dec
adcl
mov
lcall
add
lea
mov
imul
mov
mov
in
mov
xchg
lcall
je
lods
inc
scas
xchg
bound
mov
fs
jne
call
aam
jg
mov
jns
cmp
sub
pop
out
xchg
sub
insl
int3
xchg
addr16
mov
pop
mov
clc
mov
cmpsl
push
mov
add
je
jg
xchg
pushl
bnd
fistl
rclb
and
mov
mov
dec
stos
sbb
push
and
mov
dec
jnp
ret
mov
enter
jecxz
xor
rorl
pop
ret
or
lcall
inc
loop
dec
jae
cmc
jp
stos
out
or
aam
mov
push
xchg
push
fidivrl
xchg
cmp
out
imul
out
push
jae
sarb
movsl
mov
mov
jne
hlt
cmp
push
arpl
mov
jbe
mov
jge
pop
daa
sbb
cld
aaa
addl
inc
add
or
pop
or
xchg
push
std
mov
xor
mov
repz
xchg
fcmove
and
movsb
cmp
xchg
dec
push
push
dec
aas
cmpsb
xchg
notl
in
pop
mov
enter
daa
das
and
cmp
adc
enter
adc
dec
lods
ja
ds
aas
movsl
bound
cmp
inc
sub
push
adc
cli
test
out
add
xor
rcrl
out
cmc
js
ja
pop
popa
and
xlat
mov
loope
inc
subb
scas
cmp
loop
outsb
add
inc
adc
jmp
sub
orb
pusha
sbb
xchg
testb
mov
dec
fstpl
xchg
rcrl
pop
pop
push
fstps
repz
cmp
sub
jb
jno
and
mov
push
xchg
mov
sbb
inc
mov
and
and
cmp
ss
adc
je
inc
notl
cmpsl
lret
cmp
cli
inc
fisttpl
mulb
aad
push
cmc
gs
mov
outsl
out
mov
das
stc
mov
addr16
adc
mov
lods
cmp
das
mov
mov
out
sub
cli
xchg
xor
cli
mov
mov
std
push
sub
cmp
pop
adcl
sbb
in
adc
clc
add
repz
sbb
hlt
xor
les
aam
popf
mov
fxch
or
popa
lods
lock
int
push
add
dec
xor
fstps
ficompl
repz
pop
and
sub
jl
xchg
lret
push
sahf
pop
aad
xchg
adc
mov
por
scas
lock
in
pop
inc
inc
dec
pop
das
aas
fldt
iret
dec
rcl
je
loopne
jecxz
jge
testb
cmp
pusha
xor
addl
jg
mov
sbb
aaa
lock
das
xchg
iret
mov
xor
sub
stc
inc
mov
push
xorl
cmpsl
test
mov
cmp
cld
daa
pop
fwait
lret
add
and
xchg
in
pop
aaa
sbb
sarb
inc
sub
fistps
shll
stc
ret
shlb
push
xchg
out
fst
movsl
add
loop
repnz
subb
popa
sbb
arpl
xor
xchg
clc
inc
push
por
test
lret
mov
ret
dec
scas
out
dec
aaa
and
push
push
push
sbb
jmp
negl
inc
stos
cmp
cwtl
push
inc
sar
outsl
inc
sbb
jmp
sbb
cmc
inc
xor
inc
nop
mov
jbe
mov
pop
push
jne
ja
and
dec
addr16
dec
or
xchg
fwait
dec
push
xor
int
jne
aas
and
out
pop
call
sbb
movsb
mov
mov
mov
adc
dec
sub
push
clc
xor
inc
das
mov
test
shlb
mov
aas
inc
jle
ljmp
sbb
xor
jmp
cmpsb
jb
addl
popf
mov
scas
jno
lock
pop
stos
xlat
push
and
or
jnp
dec
pop
scas
sub
in
sub
push
iret
loop
mov
pop
ss
inc
in
adc
dec
jnp
lods
or
push
outsl
fisubrl
scas
test
sbb
xor
int3
fimuls
mov
daa
rclb
mov
adc
hlt
xchg
fisubs
shlb
inc
jge
dec
xchg
and
push
aaa
inc
add
or
test
pop
aaa
aaa
push
xor
adc
push
scas
jbe
mov
cmp
shll
dec
sub
inc
enter
inc
daa
cs
cmp
pop
mov
mov
jp
ds
jns
imul
lahf
inc
out
or
test
mov
push
mull
pop
js
jmp
mov
loope
jno
sub
mov
outsb
roll
pushf
and
sbb
xor
and
insl
add
lret
mov
imul
pop
test
push
xchg
push
inc
mov
lcall
call
sub
in
adc
test
mov
rcll
xchg
out
cmp
mov
inc
sbb
jecxz
shll
fsubrs
lcall
loopne
and
xchg
negl
pop
jne
sbb
test
sub
mov
outsl
into
xchg
dec
loop
dec
inc
stc
jb
fisubl
test
aad
scas
push
sbb
pop
fdivrs
mov
cmp
int
mov
xchg
cmp
cld
push
or
push
clc
inc
mov
loopne
rcll
cli
addr16
imul
add
add
mov
sbb
das
int
xlat
xchg
adc
inc
call
pop
in
inc
mov
cs
jne
dec
cmp
sbb
das
dec
xchg
std
inc
inc
add
fsts
inc
repnz
push
mov
lea
call
xchg
and
mov
in
pushf
jne
xchg
jmp
pop
dec
pop
pop
int
inc
je
dec
inc
arpl
jb
sbb
cld
je
aad
jecxz
push
int3
test
adc
pop
rcr
cwtl
jle
jge
pop
jae
mov
pop
adcl
sub
mov
fbld
lock
pop
push
mov
shrb
mov
push
xlat
stos
mov
dec
test
cmpsl
sub
push
xchg
icebp
adc
push
lret
shl
lcall
mov
rcrb
push
add
xchg
sub
movsl
cmpsl
aam
shll
dec
xorl
pop
adcl
sbb
sbb
ljmp
lods
jmp
out
xchg
jecxz
xchg
aas
adc
xchg
cmovp
dec
cltd
mov
repnz
dec
movl
dec
sbb
xchg
repnz
xchg
cmpsb
shll
ds
cmp
stos
sub
mov
out
jne
testb
dec
push
and
inc
cltd
add
xor
xchg
xor
dec
mov
mov
push
sub
or
mov
dec
pop
and
lds
cmpsb
push
dec
sub
jne
cli
xchg
mov
es
out
cmp
mov
jmp
ds
xchg
cld
std
lods
out
xor
xchg
xchg
or
ret
lea
rcll
and
xchg
xchg
jle
ret
jg
mov
mov
fistpll
rcrl
xchg
jno
sub
adc
push
ljmp
mov
das
scas
out
add
and
xchg
add
adc
xchg
dec
scas
mov
push
jno
jecxz
mov
mov
pop
insl
ds
inc
clc
and
in
mov
or
lret
inc
push
mov
xor
sbb
push
imul
mov
shlb
mov
gs
leave
jb
jne
shrb
shlb
cmp
ljmp
sbb
negb
or
ret
add
in
xchg
int3
outsl
fistps
cmp
push
ret
cmp
dec
jo
inc
shrb
jne
pusha
cmp
outsb
movsb
add
push
lock
icebp
cmpsb
cwtl
dec
xor
enter
daa
sub
xor
jl
jne
dec
mov
ds
mov
jo
mov
jl
aad
gs
out
mov
es
test
inc
pop
insl
xchg
mov
and
mov
pop
movsb
push
int
loope
les
xor
adc
outsb
jo
adc
lahf
mov
aaa
subb
aas
sbb
je
pop
lock
xor
dec
sbb
rorl
stos
pop
adc
lods
repnz
mov
add
sub
andl
mov
std
data16
xor
mov
pop
aas
mov
lcall
xor
cmp
ljmp
lret
or
sub
sub
sbb
sub
and
mov
lods
push
loop
jle
stc
sub
xor
and
push
data16
or
or
iret
cli
in
mov
push
cmp
dec
or
jae
add
in
fchs
subb
adc
dec
popa
imul
pop
scas
add
test
lret
pusha
sub
ja
or
push
not
into
jmp
pushf
mov
scas
and
sti
mov
xchg
idivb
add
inc
adc
repz
fcmovnb
xor
out
call
adc
add
hlt
jns
xchg
dec
mov
das
inc
pop
add
and
inc
jle
mov
jb
in
dec
scas
push
popf
je
sbb
arpl
std
add
mov
cmp
subl
xorl
xchg
push
lock
and
inc
xor
mov
ja
jl
inc
push
xchg
rcll
dec
add
and
dec
jg
xor
mov
jmp
xchg
stos
lret
inc
lea
hlt
push
adc
pop
jne
inc
shlb
leave
cs
movntq
out
imul
jne
sbb
and
and
xchg
adc
ljmp
shrb
out
clc
jp
xchg
xchg
push
lea
faddl
cmp
mov
mov
and
xchg
and
dec
adc
jmp
and
dec
inc
test
int3
imul
sub
pushf
stos
sbb
dec
push
mov
add
gs
divl
test
mov
mov
cld
cld
xchg
enter
jo,pn
dec
dec
or
inc
je
inc
or
decb
mov
hlt
jne
sbb
out
sbb
mull
lea
leave
insb
pop
xchg
dec
divl
sub
pop
mov
xor
push
xchg
inc
mov
or
mov
lods
inc
jle
nop
mov
xchg
aaa
lcall
mov
mov
add
imul
rcll
les
mov
outsb
inc
fildll
das
inc
mov
jnp
mov
mov
adc
iret
mov
shl
movsb
mov
sub
iret
es
mov
test
push
aam
jecxz
xchg
gs
dec
xor
pusha
jo
push
ret
ljmp
andb
jg
repnz
aas
loop
sbb
stc
mov
jge
leave
sti
sbb
mov
push
or
int3
pop
loope
pop
xchg
call
push
cmpsb
lock
jo
xchg
scas
xor
xchg
and
rorl
shll
sahf
movsb
mov
aam
aas
and
in
adc
dec
daa
sub
mov
repz
or
repnz
adc
dec
cli
lret
out
sbb
ja
pop
jne
lahf
test
out
push
mov
xchg
test
dec
pop
pop
inc
cmpsb
mov
jge
negb
nop
into
js
mov
pop
push
inc
hlt
push
std
sbb
push
cmp
movsl
mov
and
outsb
sub
leave
adc
jp
cwtl
fcoms
in
addb
sbb
push
xor
cmp
int
jmp
xchg
ja
lcall
imul
stos
test
sahf
pop
lods
xchg
test
fildl
xor
outsl
mov
sbb
sbb
ss
es
and
fsubs
push
clc
lret
das
sarl
add
rorl
into
jle
pushf
cmc
mov
dec
insb
outsl
mov
loop
call
call
adc
pop
cmc
daa
lods
in
xchg
std
mov
add
xlat
cli
pop
adc
xor
jae
or
movsb
test
gs
fisttpl
pop
in
cmc
jae
mov
xchg
out
adc
adc
add
cmpsl
xchg
mov
sbb
movsl
mov
xlat
or
insl
xor
sbb
mov
into
icebp
nop
shll
inc
daa
pop
test
mov
scas
mov
xor
lock
cwtl
jecxz
add
ret
add
out
push
mov
add
pop
mov
dec
aaa
inc
cltd
cmpsb
jg
mov
dec
and
mov
xchg
testb
std
stos
cmp
hlt
test
jno
arpl
mov
dec
push
pop
popa
fldt
adc
mov
push
lock
out
das
and
lcall
and
and
pop
xchg
out
cmpsb
fstpl
pop
cmp
cmpsl
sub
pusha
icebp
shrb
lret
mov
push
mov
sti
into
xchg
mov
xchg
jmp
shl
push
sub
sbb
dec
ret
insl
adc
fldl
mov
xchg
dec
rcll
mov
cmpsl
lods
aad
loope
cli
jp
out
pop
push
mov
push
push
xchg
mov
cltd
sub
out
mov
xor
push
dec
insb
scas
push
xchg
gs
sbb
add
shll
jmp
pop
dec
fildll
sub
clc
add
addb
xor
xchg
fmuls
and
xor
pop
loop
inc
fdivr
mov
in
xlat
mov
cmpl
in
fcmovnbe
dec
inc
lods
push
inc
or
xor
fcoms
jne
fwait
dec
mov
mov
out
sti
jne
bound
mov
in
pop
fists
popf
fwait
imulb
pop
xor
addr16
cmp
inc
scas
mov
add
push
xchg
std
mov
inc
jle
push
pushf
fdivs
pusha
jmp
lcall
sti
xchg
jmp
pop
or
xorl
xor
popf
xor
mov
lods
bound
stos
out
and
inc
adc
insb
shlb
jnp
jno
scas
push
xchg
sti
push
pushl
adc
loope
iret
pushl
sub
lods
lods
inc
push
aad
jae
cmc
mov
mov
pop
or
shl
inc
push
icebp
push
fiaddl
pop
xchg
cltd
imul
imul
pmaxub
inc
mov
shlb
inc
repnz
lcall
or
sti
xor
jge
pusha
lock
int
jge
lret
or
repnz
ja
int3
inc
rolb
push
mov
fnsave
fstp
scas
adc
pop
and
mov
movsb
pop
lods
cmp
mov
aam
sahf
jno
in
cli
push
pop
enter
daa
sub
outsl
cmp
cmp
lods
jl
sub
imul
andb
les
push
pop
iret
push
test
sbb
pushf
inc
xor
jge
pop
pop
jecxz
js
mov
pushf
push
loopne
loope
pop
sub
out
js
rclb
lea
rclb
out
aaa
adc
push
sub
cmc
add
cmp
push
push
xchg
or
pop
lods
sub
push
pop
adc
cmp
dec
push
and
stos
sub
sub
or
sahf
std
call
repz
inc
mov
outsb
push
mov
filds
and
jb
loope
outsl
cmp
pusha
xorb
mov
ljmp
lock
inc
into
popa
jg
cmc
add
push
outsl
imul
loop
test
xchg
fiadds
sbb
lock
insb
mov
lods
aam
mov
or
cli
push
and
xor
insb
add
movsl
arpl
mov
cs
loopne
ret
jge
or
adc
jae
imul
pop
mov
jns
int3
xchg
push
sahf
je
lds
xlat
dec
and
mov
push
in
test
iret
sti
sbb
xchg
and
and
adcb
jb
inc
cmp
fdecstp
outsb
mov
adc
fs
sub
lea
movsb
jno
adc
jne
mov
test
jbe
ja
pop
fwait
cmp
ficomps
inc
or
sti
inc
mov
mov
push
jae
jb
jg
je
stos
sub
mov
daa
notb
inc
dec
cwtl
scas
das
push
mov
push
pop
mov
push
sbb
aaa
fistpl
popa
mov
ja
push
iret
jae
iret
iret
or
mov
in
mov
shll
jecxz
insl
out
out
dec
jne
dec
cmpsl
sub
cltd
mov
xchg
roll
sub
mov
sti
sub
mov
push
rol
inc
clc
sub
iret
cli
aam
movsl
and
push
mov
bound
xchg
jl
or
popa
ja
xor
out
mov
fdivrs
push
inc
test
packuswb
push
cltd
fs
outsl
test
pop
push
mov
mov
xchg
and
sar
shrb
in
sbb
mov
pop
cmpl
enter
fs
fwait
pop
adc
push
jp
xor
rorl
or
arpl
mov
adcb
sbb
mov
ds
ja
lret
out
dec
xor
movl
mov
pop
xor
mov
mov
sbb
ficoml
bound
enter
scas
sbb
fistps
cmp
and
cwtl
sub
push
inc
xor
and
jp
stos
call
mov
fsubrl
jle
push
pushf
in
fldl
pusha
xchg
sbb
lock
lahf
xchg
sarb
sbb
push
xor
popf
pop
testl
in
add
stos
pop
dec
pop
and
ss
cmp
loope
mov
scas
push
inc
push
push
adc
imul
ret
sbb
inc
sbb
dec
inc
mov
leave
cmp
pop
inc
rcl
inc
in
lods
xchg
lock
cltd
imul
lret
ficoms
arpl
shll
repnz
jp
leave
xlat
cli
scas
hlt
mov
mov
cmp
jbe
mov
sbb
sub
or
mov
int3
xor
xor
insb
xor
mov
and
inc
ret
scas
repnz
and
cmpsb
and
inc
xlat
jne
mov
add
cmpsb
and
cmp
jb
adc
sub
cmp
pop
roll
jl
ret
fsubrs
mov
xor
cwtl
movsl
test
cs
ret
push
xor
jne
in
cli
inc
les
add
push
js
jp
pop
pushf
aas
mov
js
loope
xchg
shrb
or
cmp
add
shlb
mov
xchg
adc
push
sbb
fisttps
jl
mov
push
pop
loopne
int
xchg
icebp
sub
fadd
pop
xchg
jbe
lcall
mov
sub
jne
sahf
mov
scas
arpl
outsb
cwtl
pop
mov
les
mov
imul
pop
ss
lcall
cmc
testl
faddp
in
sub
cltd
sbb
dec
sbb
inc
xchg
je
dec
fstpt
xor
inc
outsl
dec
or
stc
dec
sub
movsl
mov
das
bound
mov
sbb
mov
xor
push
cmp
cmp
fdivr
mulb
in
loopne
in
push
pop
sub
adc
test
in
enter
jno
add
mov
mov
in
mov
xlat
mov
sub
ret
call
faddl
imul
int
push
notl
inc
dec
fwait
mov
sub
dec
fdiv
inc
insl
sub
cmp
lea
and
clc
dec
and
xchg
xchg
or
push
aas
xchg
adc
shr
dec
negl
pop
jmp
jno
inc
iret
call
xorb
test
jo
je
out
mov
not
cmp
push
ret
cmpsb
jg
dec
lods
out
jae
sbb
es
fisttpl
jnp
mov
add
lock
loop
inc
mov
pushf
gs
call
mov
cs
aad
jae
jo
scas
cmpsl
sub
sarl
outsb
clc
aam
sbb
sbb
or
jmp
rcrb
and
xor
mov
cmp
xchg
or
xchg
mov
out
popa
mov
in
stos
lret
pop
or
and
sbb
push
pushf
push
shufps
cltd
fwait
movl
xchg
lret
sub
xchg
call
fcmovbe
rcll
ljmp
jb
cs
mov
mov
mov
inc
mov
xor
mov
add
ret
pop
stc
data16
ja
aas
dec
or
cmp
or
call
pusha
dec
mov
xchg
jne
int
mov
xchg
add
mov
xor
jns
dec
mul
push
jecxz
cmp
out
adc
das
push
or
mov
hlt
cli
jp
and
mov
dec
xchg
icebp
jle
scas
add
stos
inc
push
fistpll
cmc
pop
jmp
popf
mov
imul
jl
popf
jg
insl
mov
sub
mov
int3
cmpsl
scas
and
insb
cmpsb
xchg
fidivrl
popa
es
sbb
adc
add
iret
mov
cli
in
dec
stos
jle
and
ljmp
jg
or
mov
xor
fisubrl
push
mov
ja
hlt
imul
xchg
fidivrs
push
imul
fsub
xchg
mov
mov
ror
dec
into
out
hlt
out
dec
arpl
add
sbbl
aaa
sti
rclb
aas
nop
xchg
int3
sbb
jmp
and
jb
dec
shrl
lds
and
fidivs
clc
pushf
std
movsb
sub
push
imul
insl
mov
daa
sub
in
pop
popa
test
dec
inc
add
push
lock
call
inc
xchg
push
add
shrl
stos
loopne
push
pop
xor
push
inc
pop
test
shlb
push
ret
cmpsb
loope
js
sub
std
sarb
cmpsb
out
outsb
push
outsb
mov
decl
inc
rorb
scas
rorb
jnp
sbb
fprem
add
rolb
xor
mov
loope
jne
movl
cmp
push
std
or
faddl
mov
jb
inc
lds
inc
outsb
push
jg
sbb
mov
mov
mov
dec
andl
add
test
fcom
std
dec
test
outsl
leave
roll
sbb
or
daa
mov
xchg
cwtl
lds
repnz
add
sbb
adc
xchg
in
rep
mov
xchg
cli
mov
leave
mov
ficoml
lcall
jg
scas
add
loopne
sub
adc
aam
imul
pop
les
xchg
push
dec
xchg
xlat
stos
dec
sbb
push
insl
push
xlat
lret
sub
sahf
pop
in
pop
ret
popf
sti
jnp
repz
ja
aad
push
js
bound
dec
insl
jg
inc
pusha
daa
pop
fldenv
les
adc
cmp
mov
or
adc
or
repz
and
pop
mov
lods
pop
inc
pop
sbb
ljmp
jb
or
dec
mov
jecxz
mov
pop
push
dec
cwtl
and
jl
mov
inc
orl
gs
fstpt
add
mov
xchg
cmp
test
add
sarl
push
jge
and
fs
rcl
sbb
insl
mov
adc
cmpsl
sub
inc
icebp
inc
push
cmp
hlt
lods
lret
sbb
adc
mov
icebp
loop
shrb
and
rcrl
aam
xlat
sbb
push
sub
fnstsw
inc
xchg
cli
sbb
ret
popa
movsl
push
sub
cmc
int
test
xchg
mov
scas
mov
mov
test
adc
pop
shlb
mov
testl
shrl
xchg
fstps
cmp
push
adc
push
add
push
jae
pop
jns
xor
out
or
imul
mov
jbe
mov
mov
std
ja
aaa
dec
dec
sbb
push
or
fsubrp
fwait
gs
lods
jne
jnp
mov
and
out
cwtl
daa
aaa
bound
out
jns
mov
cmc
push
jg
xchg
sub
dec
adc
mov
jp
xchg
xchg
mov
mov
test
adc
in
adc
pusha
mov
stos
ljmp
jg
xchg
push
icebp
or
popf
cmpsb
lahf
cmpl
iret
mov
and
movsw
jnp
jle
scas
jge
aaa
push
aam
sahf
adc
mov
iret
sbb
in
ret
mov
andb
jae
push
or
xor
adc
rcrb
push
fisubl
fs
sahf
xchg
xlat
sbb
imul
rcrb
fnstsw
lds
xchg
shl
test
add
lret
leave
lds
hlt
dec
mov
arpl
push
jbe
jmp
jge
jl
sbb
flds
add
rorb
pop
push
rolb
xor
inc
int
xor
scas
mov
push
and
cmp
out
ret
push
jnp
lea
scas
loope
enter
daa
sub
dec
cmp
into
nop
jl
outsb
push
dec
mov
dec
jp,pt
andb
sub
add
mov
test
jnp
incl
jne
mov
pop
shlb
js
mov
or
ret
mov
mov
cmp
hlt
mov
mov
cs
out
rorb
mov
sbb
arpl
lcall
pusha
ficompl
int
mov
mov
lcall
arpl
lods
popf
hlt
sub
xchg
das
sahf
out
xor
pop
mov
sbbb
jg
fwait
cmp
inc
xchg
pop
mov
pop
inc
and
ss
xchg
fcoms
and
lret
lods
rcrl
out
mov
dec
popa
sbb
add
or
mov
ljmp
loop
xchg
jle
mov
xchg
rclb
and
pushw
lods
mov
das
mov
test
pop
or
cli
jmp
aas
xor
aas
xor
dec
lea
repnz
gs
aas
loopne
jns
pop
push
mov
mov
add
scas
dec
xchg
lcall
cmp
push
dec
sub
out
mov
jge
sti
sub
cmp
das
into
aad
stos
mov
dec
int3
or
inc
jae
lahf
fstps
xor
movb
into
cmp
call
movsb
pop
mov
call
cmp
daa
sti
imul
stos
inc
sahf
and
inc
add
mov
jb
aad
dec
add
je
jb
jecxz
stc
loope
pop
or
std
inc
mov
cwtl
loopne
jo
cltd
xlat
push
mov
jmp
mov
mov
jo
and
mov
das
mov
jne
mov
dec
pop
shll
fcomps
jmp
dec
pushf
dec
data16
cmpsl
daa
lea
icebp
sbb
cld
push
sahf
cmc
lret
insl
push
insl
mov
pop
xlat
mov
rcr
inc
pop
adc
imul
cli
repz
outsb
lcall
lahf
xor
jecxz
iret
clc
jg
out
xchg
cmp
popa
mov
push
xchg
mov
out
mov
push
aam
outsl
je
xlat
xor
test
mov
mov
or
flds
incb
sarl
jns
sub
stos
ret
mov
cwtl
add
in
push
sti
jle
xor
rcrb
bound
xor
imul
dec
mov
adc
outsl
mov
outsb
dec
or
stc
inc
addr16
cmp
test
fwait
xchg
mov
add
mov
ja
into
cwtl
jno
in
pop
insb
xchg
shrl
sub
inc
fsubl
xchg
repz
sbb
jb
loop
lcall
test
xor
jb
mov
or
fcomip
jno
xchg
aad
je
aad
arpl
cmp
popf
int
add
test
adcb
cmc
insb
jl
fidivrl
pusha
insl
scas
loopne
insl
push
sbb
in
stos
js
iret
jnp
sbb
cld
jp
pop
mov
jecxz
cmp
xor
inc
ret
or
lods
fldcw
adc
xchg
cmc
inc
rcrb
xchg
adc
or
vmovdqa
mov
repnz
mov
leave
cmp
push
hlt
xchg
enter
stos
inc
jbe
enter
mov
call
or
fs
add
push
int3
icebp
rorl
push
adc
repz
jo
pop
scas
loope
and
jmp
cmp
jne
inc
add
push
lret
cmpsb
stos
sub
enter
daa
daa
pushf
jne
repnz
or
jl
xorb
sti
loope
popf
cwtl
mov
lcall
lahf
pop
dec
into
push
stos
mov
xor
add
add
dec
hlt
ficompl
pop
les
cmp
pop
pop
sbb
outsl
jbe
loope
stos
adc
pop
mov
outsb
sbb
data16
sub
mov
xchg
andb
incb
sbb
push
arpl
test
imul
lcall
dec
fcoml
shrl
dec
xchg
sahf
mov
test
pop
cmpb
jg
and
mov
dec
mov
dec
andl
loop
ss
xorl
dec
loop
lret
mov
mov
mov
int3
cld
dec
sbb
je
popf
jge
xor
push
outsl
out
loop
sub
stc
jae
jmp
adc
xchg
cmpsb
data16
jl
jo
test
push
test
cli
push
pop
cmc
xor
fdivrs
or
add
inc
inc
andb
sbb
and
lods
pop
xchg
ja
mov
out
adc
jbe
add
mov
sbb
int3
pop
sbb
dec
ret
jns
insb
xchg
sub
or
sti
fstps
cs
sub
ds
pop
nop
sbb
jb
sub
inc
inc
les
movsl
cs
test
movb
lea
mov
test
fidivs
pushf
and
jmp
mov
pop
inc
and
bound
jb
aam
dec
js
xor
fninit
out
lods
ljmp
dec
inc
cwtl
fwait
push
shlb
and
cmp
mov
pop
icebp
hlt
mov
repnz
outsl
out
ljmp
lcall
rcrl
shll
sbb
insb
test
mov
mov
mov
mov
lret
fcoml
xchg
and
imul
pop
das
icebp
movsb
rclb
mov
mov
sub
ret
cmp
mov
clc
mov
mov
ljmp
aaa
lods
in
fcomps
sbb
dec
or
xor
testl
stos
sbb
cltd
inc
cwtl
mov
and
xor
outsl
adc
test
imulb
sbb
aas
rcl
sti
add
stos
mov
adc
pop
inc
cltd
add
pop
xchg
and
lcall
or
lcall
int
mov
push
mov
sub
ja
mov
dec
call
inc
aad
or
inc
jne
ret
dec
xchg
dec
pop
mov
jne
add
addr16
push
pop
jnp
jne
sarb
adc
or
pop
xchg
and
adc
adc
inc
cmp
xchg
cmp
mov
repz
sub
xchg
mov
arpl
in
fldcw
fists
cmp
xchg
test
imul
int3
xor
xchg
incb
cmp
movhps
dec
mov
hlt
xlat
pop
mov
call
sti
add
mov
subb
xor
dec
scas
inc
fcoms
cmp
xchg
iret
fisubl
ret
sub
out
jbe
inc
inc
push
push
jae
scas
incl
imul
push
into
jnp
fcmovb
imul
js
loopne
mov
cmpsl
fisubs
or
adc
sub
add
leave
mov
push
hlt
fbstp
mov
jbe
insb
jbe
sbb
sbb
mov
aaa
cmp
sbb
add
xchg
int3
fsub
jno
scas
mov
adc
jo
mov
inc
and
cmp
sbb
imul
sub
pop
scas
enter
daa
fldl
and
adc
adc
sbb
movsl
movsl
mov
jle
lahf
xlat
lods
push
jge
nop
test
adc
movsb
inc
add
fcmovbe
pmuludq
pop
push
fists
pop
cwtl
insb
call
loope
stc
xchg
sub
lret
cmp
outsb
or
rcrb
sbb
fcompl
divl
sub
movsl
int
jae
sub
mov
pop
mov
push
add
lahf
sub
roll
push
addr16
scas
xchg
mov
adc
xchg
lret
lcall
cmp
pop
nop
inc
testl
dec
sbb
dec
movsb
int
mov
fcomps
fucomi
lret
jle
cmc
fs
mov
rcl
mov
mov
leave
adc
xor
outsb
mov
movsb
mov
lret
push
out
aad
mov
xchg
cmp
mov
or
pushf
mov
gs
test
stos
pop
cmpsb
cmpb
xchg
push
fsubrl
in
adc
and
add
xchg
and
out
sbb
pop
push
clc
xlat
xchg
cwtl
mov
pushf
outsb
nop
sti
mov
cs
outsb
xor
test
or
dec
mov
stos
inc
cltd
add
rcll
repz
adc
inc
xchg
jg
pushf
loop
call
lea
pop
and
dec
adc
mov
pushf
int
fldpi
add
or
inc
cmp
aas
jb
xchg
jb
pop
adc
je
inc
mov
std
movsl
push
std
xchg
enter
js
mov
sbb
adc
ss
dec
rcr
adc
inc
mov
mov
push
aas
mov
mov
lock
fisttpll
mov
js
repnz
popf
or
rcrb
out
dec
jns
jno
pushf
dec
pop
imulb
mov
lret
cld
stos
outsb
pop
lret
dec
cwtl
sarl
and
inc
aam
dec
cmpsb
shl
jns
sub
xchg
add
pop
inc
push
jno
sub
clc
cmc
lret
adc
mov
mov
popa
ljmp
mov
lods
dec
int
ja
je
mov
xchg
add
rolb
mov
inc
pop
xchg
fs
iret
add
and
movsl
xchg
push
imul
xor
shrl
das
jmp
mov
mov
das
add
xlat
outsb
cmp
xor
in
mov
xor
imul
rcll
dec
mov
in
lahf
ja
ss
dec
repnz
mov
cmp
or
mov
jns
inc
outsb
jne,pn
loopne
mov
inc
movsl
out
xor
ljmp
xchg
cli
xchg
je
test
scas
mov
orb
sub
jp
cmp
mov
ret
repz
pop
rorb
fdivl
pusha
cli
cmpsl
fbstp
pop
pop
jmp
leave
adc
orl
out
popf
sbb
sti
mov
daa
loopne
stos
cwtl
sub
insb
push
iret
inc
jnp
outsl
out
scas
cmpsb
int
push
test
cmp
iret
cmp
in
and
xor
pop
pop
inc
push
imul
enter
push
sti
int3
push
dec
lock
fidivrl
iret
xchg
mov
xor
imul
faddp
inc
movsb
cmp
dec
orb
hlt
js
sub
arpl
jge
pushf
insb
sbb
scas
or
cmp
int3
int
pop
fimull
fildl
jo
xchg
scas
dec
lret
add
cmp
sbb
push
push
rcrb
fs
enter
daa
and
inc
sub
jl
daa
lcall
adc
and
lahf
pop
dec
push
push
jp
test
fcoml
inc
adc
inc
mov
xchg
icebp
adc
xlat
inc
push
push
stc
mov
cmc
insb
mov
cmp
js
outsb
fildll
dec
shlb
sub
jnp
sbb
sub
xor
jne
push
imul
sbb
popa
pop
cmp
or
jb
push
pop
sub
lods
test
sahf
iret
pop
aas
test
pop
add
mov
inc
mov
subb
push
xor
and
rorb
mov
rcr
call
jae
imul
shl
mov
mov
ret
mov
int3
cmc
sub
inc
xor
insl
cmp
movsl
mov
cmp
pop
dec
test
pushf
cmp
data16
sbb
mov
jo
cli
test
xor
test
aas
hlt
fdivr
mov
loopne
jecxz
pop
adc
cmpsl
imul
cmp
xchg
jecxz
mov
cmp
scas
xlat
sub
sub
cmp
pop
mov
in
pop
movsl
sti
aaa
shrb
pop
test
clc
nop
into
mov
or
lods
pop
or
inc
push
int3
les
outsl
repz
and
dec
xchg
call
or
and
and
pushf
js
jae
hlt
xor
mov
pop
inc
push
insb
lea
adc
ss
outsl
rorb
adc
jecxz
loop
mulb
lods
into
std
cmp
mov
mov
mov
andl
fisttpl
std
aad
lock
mov
das
cmp
shl
das
inc
andb
add
shld
es
insl
insl
pop
mov
dec
push
adc
sti
mov
mov
xchg
mov
pop
fbld
mov
punpckldq
mov
outsl
pop
aam
sub
push
fcompl
xor
ret
fstpl
sbb
xor
ljmp
fsubrs
dec
shr
adc
outsl
push
cmp
pop
out
xor
shll
adc
cmp
fnsave
push
cld
dec
cmp
inc
addb
faddl
roll
insb
stos
nop
shl
push
mov
push
push
add
cmpsl
sbb
sub
fs
or
add
mov
adc
cmp
add
int3
mov
es
in
call
or
dec
fwait
and
mov
and
pop
movsb
mov
pop
shr
not
bound
idiv
in
adc
xchg
ret
push
shl
xor
int
mov
bound
lods
pop
addr16
aam
sahf
fimull
mov
mov
mov
jbe
mov
in
das
mulb
adc
fists
xchg
dec
repz
mov
cmp
sbbl
dec
push
lds
popf
inc
mov
pusha
push
cbtw
pop
stos
or
and
ret
mov
popf
ds
or
adc
lods
outsl
adc
lret
iret
cwtl
xchg
pop
ret
pop
pop
fst
inc
pop
push
stos
jae
insl
popl
dec
testb
and
fisubrl
mov
sbb
leave
shrb
daa
fisubrs
pop
lds
shlb
mov
push
jbe
leave
mov
add
inc
sbb
sbb
movsb
aaa
mov
cmpsl
or
xor
add
inc
push
int3
mov
lds
sar
mov
into
add
lahf
imul
cmp
xor
push
mov
pop
cmpsb
xor
pop
enter
daa
and
movsl
cmp
jmp
std
dec
jb
sarl
push
mov
dec
and
and
push
and
and
insb
inc
push
js
xchg
dec
or
sbb
into
sub
push
enter
add
sub
and
cmp
fnsave
rclb
or
fidivrl
push
add
or
push
insb
loopne,pt
jo
hlt
sub
xchg
out
mov
mov
push
mov
pushf
fcompl
dec
sub
inc
and
lret
jg
shr
mov
push
dec
mov
jg
mov
lds
and
sub
cmp
jge
push
testl
mov
mov
pop
test
repnz
imul
test
cwtl
pop
out
out
clc
adc
ja
data16
or
mov
lcall
arpl
cmp
insb
jnp
scas
sqrtps
scas
sbb
cmc
sbbl
in
bound
cmp
mov
ljmp
hlt
mov
sbb
jge
ljmp
mov
pop
in
jb
pusha
sti
out
adc
mov
leave
dec
nop
test
sbb
out
scas
fnstenv
les
outsb
repz
mov
dec
ljmp
fisubl
mov
mov
adc
in
jmp
xor
mov
cmp
jno
bound
mov
inc
jb
or
dec
fucomp
sbb
sub
sbb
mulb
pop
std
loop
and
xchg
push
mov
adc
std
fcmovnb
dec
test
arpl
movsb
jge
mov
pop
shl
dec
mov
mov
mov
sub
es
inc
dec
insl
aas
lahf
hlt
dec
push
enter
mov
movsl
icebp
js
mov
lret
sub
les
xor
loopne
cmp
pop
pop
mov
rorb
lret
aam
adc
ret
in
jmp
imull
fnstsw
mov
xchg
xor
push
dec
popa
sbb
es
jae
and
inc
leave
and
add
sbb
inc
xlat
mov
insl
or
push
test
dec
call
sbb
test
mov
jg
aas
push
inc
xchg
or
pop
xchg
pusha
pushl
das
xor
rorb
xchg
les
mov
xor
lods
repnz
pop
add
dec
fdivr
xchg
inc
ret
jb
or
sbb
dec
or
lcall
adc
repz
bound
std
inc
jns
insb
sub
xchg
adc
push
sub
xor
cmp
rolb
into
into
in
mov
in
stc
jle
stos
cmp
aam
cmp
fbstp
ret
xchg
and
lcall
mov
std
push
mov
adc
mov
movsl
aam
stos
jle
fldenv
mov
insb
sub
mov
sub
insb
sub
push
aaa
std
cmpsb
adc
push
add
ret
ret
push
fs
insw
push
jae
mov
inc
into
addr16
cwtl
or
inc
dec
gs
fildll
push
pop
in
jns
mov
push
hlt
fimuls
pop
sarb
mov
mov
aaa
loop
shrb
mov
lds
jge
and
dec
aaa
jne
cli
or
fistpll
leave
cmp
popf
pop
xchg
pop
cmp
sbb
mov
mov
cli
pop
xchg
xor
cmp
inc
movsb
outsl
cwtl
lcall
and
mov
daa
and
mov
or
dec
loope
stc
sub
movsl
mov
and
nop
xchg
push
idiv
adc
jb
hlt
inc
lods
and
pop
stos
test
js
cli
lahf
pop
push
js
push
dec
stos
loope
mov
and
outsb
movsl
add
adc
sub
popf
jmp
sbb
js
xor
mov
sbb
push
gs
pop
or
push
push
pop
xchg
mov
add
jl
ja
xchg
sahf
adc
or
and
fistpll
imul
xchg
xchg
xorl
repnz
add
inc
fdivrs
push
cmpsb
testl
rorl
cmpsb
mov
cld
sbb
sub
jns
ret
cmc
mov
push
cld
outsl
arpl
cmpsb
stc
dec
and
fs
aad
cmp
idivw
and
scas
daa
out
dec
enter
push
xor
test
cmp
add
adc
shl
test
pop
loopne
cmp
pop
add
adc
cmp
add
out
add
std
or
cmp
movsb
shrb
adc
in
fisttpll
push
push
cli
insl
aad
dec
adcl
add
loopne
scas
pop
mov
mov
jno
dec
ret
rorl
repz
or
pop
cmp
lea
ljmp
inc
cmp
mov
push
aas
dec
enter
fnstenv
push
push
je
cld
das
jecxz
es
test
xchg
xor
push
pop
pusha
mov
cltd
or
xchg
into
mov
rorl
xor
cmpsl
mov
mov
mov
mov
push
shrl
addr16
insl
outsb
stc
dec
dec
cmova
push
shl
icebp
dec
push
out
cwtl
cmp
or
xlat
jo
pop
stos
cmp
out
mov
aam
dec
mov
je
fistl
add
frstor
pop
mov
ljmp
mov
xchg
jecxz
rclb
dec
mov
test
add
and
cltd
sbb
jle
dec
out
in
jg
dec
xchg
xor
test
in
xchg
jmp
shll
xorl
stos
outsb
pop
jl
out
pushf
add
jae
callw
xlat
pop
xor
add
mov
mov
lcall
pop
push
into
cmp
dec
lret
out
movb
and
add
aam
jmp
pushl
enter
adc
lret
aam
jns
test
aaa
and
popa
push
pop
out
imul
subb
xorb
jp
xor
mov
mov
jle
call
fistl
cmp
xchg
mov
xchg
hlt
into
jmp
sub
dec
push
dec
pop
arpl
aad
xor
xchg
sbb
adc
lods
and
in
inc
test
push
jle
repnz
ja
iret
push
xlat
xor
pop
dec
scas
pop
lret
inc
jno
shll
cmp
add
adc
sbb
xchg
sub
test
movsl
sbb
jno
imul
fisubrs
call
mov
notb
leave
popl
shll
add
jge
rcrb
in
js
xor
xchg
or
inc
dec
add
push
int3
mov
pop
imul
push
test
xor
push
push
scas
ljmp
cmp
hlt
cmp
push
push
and
cmp
or
sbb
add
dec
or
cmp
ret
cmp
jl
push
aad
push
dec
pushf
ds
jmp
movsl
mov
adc
push
push
leave
shrl
cmp
adc
sbb
pop
mov
pop
xchg
xchg
fxch
push
subl
sahf
das
sub
fdivrl
stc
loopne
outsb
or
adc
or
xchg
add
bound
mov
cmp
addr16
push
jb
dec
int
xchg
ljmp
ror
push
pop
mov
xor
pop
jp
fsubrl
pop
pop
sahf
mov
adc
jg
add
arpl
mov
dec
push
ss
sarb
push
testl
dec
int
movsl
pop
nop
mov
aam
xchg
roll
into
pop
cmpsb
xchg
cmc
xorb
outsl
inc
mov
xchg
push
pop
fs
repnz
adc
clc
jne
repz
test
jp
cli
sbb
div
cmp
jb
or
push
fildll
adc
adc
pop
shrl
inc
add
maskmovq
testl
sub
outsb
sbb
repz
mov
andl
mov
dec
inc
cmp
inc
sub
adcl
add
push
stos
cld
inc
in
rcr
in
les
fwait
repz
push
mov
cmp
imul
shlb
mov
inc
pop
in
dec
adc
push
jp
pushf
jns
scas
jmp
data16
mov
inc
enter
cmpsl
adc
out
movsb
pop
jb
fnstsw
je
loopne
jecxz
cs
in
bound
cwtl
inc
out
mov
int3
pushf
mov
aam
subl
sbb
fildl
pop
lock
in
mov
lahf
sbb
add
add
mov
inc
sub
sar
aad
es
add
dec
dec
ljmp
mov
icebp
es
into
lret
pop
push
mov
inc
sbb
pop
lret
shlb
jmp
or
and
fadd
add
sbb
fs
clc
loope
add
out
popf
popa
inc
jnp
lods
add
inc
mov
cmp
sbb
push
mulb
push
mov
push
cltd
push
sbb
test
fwait
mov
mov
ss
jb
mov
xchg
xchg
xchg
sbb
push
movsl
rorl
stos
arpl
mov
push
add
mov
dec
xor
add
mov
fnstsw
lret
cltd
in
pop
shrl
ja
insl
les
xchg
movsl
inc
icebp
cmp
fwait
scas
sub
dec
into
jge
jne
xor
cmp
sub
mov
cmc
bound
jns
inc
dec
in
mov
ja
mov
andl
out
mov
push
mov
ret
dec
movsb
jle
dec
nop
in
sahf
inc
pusha
stc
int3
fbstp
sti
cmpsb
jmp
cmc
stos
test
mov
push
push
add
mov
sbb
and
pushf
stos
fs
and
inc
jnp
mov
stos
push
vcmpsd
mov
iret
mov
addr16
lock
add
inc
jl
or
inc
aam
add
mov
fiaddl
insb
xchg
incl
sbb
xorb
push
stos
outsb
lds
adc
jne
mov
xor
leave
push
jp
hlt
push
xor
jbe
jl
jge
aas
leave
sbb
imulb
fistl
add
xchg
data16
jae
stc
pop
lcall
xor
mov
scas
leave
into
loope
pop
repz
mov
lcall
cltd
movsl
cmpsb
mov
mov
enter
daa
and
sbb
and
pusha
jno
mov
test
outsl
jno
movsl
clc
mov
shrb
fxch
sbb
push
subb
inc
mov
fidivrs
int3
js
push
sbb
sarl
mov
push
mov
lret
mov
adc
jecxz
xchg
adc
dec
sbb
mov
rdpmc
ss
mov
jne
xchg
movsl
rorb
sub
or
or
test
mov
sbb
test
sub
imul
sbb
sbb
cmp
mov
icebp
mov
test
loope
in
data16
in
cmp
scas
adc
ret
lret
mov
cmp
add
dec
cwtl
mov
into
aas
push
fcomi
inc
dec
jmp
outsl
and
xor
popf
fnstenv
stc
mov
rorl
data16
sub
movsb
cmpsl
mov
add
mov
xor
addr16
cmp
mov
or
stc
daa
pop
mov
loopne
fnsave
pop
inc
cmp
mov
outsl
imul
mov
xchg
out
add
dec
adc
cs
cmpsl
xlat
ret
sub
push
mov
mov
sahf
sti
repz
cs
mov
call
pop
xchg
dec
gs
scas
inc
clc
xlat
mov
sbb
mov
cmpl
inc
push
into
jae
lahf
sahf
jb
dec
cmp
push
pop
lahf
sbb
stos
adc
fcmovnu
jmp
cmpsb
xor
or
inc
dec
gs
inc
ret
aas
lea
call
je
sbb
jecxz
jp
imulb
xor
cwtl
std
xor
mov
ret
aam
push
ret
dec
imul
mov
push
jne
pop
fildll
das
mov
push
out
or
and
loopne
rorl
clc
es
gs
hlt
mov
dec
inc
pop
mov
and
xor
std
cmp
lret
jbe
cmpsb
mov
dec
das
repnz
jmp
xchg
sub
mov
ret
xchg
xchg
mov
adc
sbb
leave
xchg
repnz
ljmp
fsubrs
ljmp
ficompl
adc
in
adc
sbb
jecxz
cltd
mov
pop
mov
mov
mov
test
rcll
dec
cmp
sbb
cs
das
stos
dec
std
pop
push
sub
jle
add
push
divb
push
xor
xor
movsb
inc
mov
and
xor
mov
in
ja
test
mov
arpl
push
data16
pop
out
fnsave
dec
mov
sbb
add
mov
pop
popf
out
nop
push
xlat
out
sarb
mov
mov
ds
cwtl
sub
and
jp
pop
mov
push
out
and
xchg
icebp
jle
xchg
in
mov
pusha
xchg
xor
dec
cmc
xchg
lcall
xchg
shlb
adcl
push
rcrl
mov
dec
pushf
push
bound
inc
and
bound
popf
jnp
cld
push
scas
xchg
pop
dec
push
or
xchg
test
sub
adc
adc
andl
sbb
sbb
inc
xlat
jns
or
or
inc
enter
clc
rcrl
jp
jnp
sub
fdivp
cmpsb
lds
ror
popf
mov
pushf
adcl
adc
mov
cltd
xchg
jbe
test
jge
mov
pop
aaa
mov
jno
into
push
mov
mov
adc
pop
mov
les
dec
stos
cwtl
xor
or
cmp
cmp
lret
mov
in
cmpsb
aas
and
enter
daa
and
xchg
cmp
jb
jmp
inc
pop
dec
add
ds
jmp
movsl
lret
mov
dec
lahf
clc
insl
nop
push
outsl
dec
push
test
rorl
inc
pop
mov
fstpl
mov
faddl
push
push
inc
loope
enter
mov
bound
sub
jle
mov
dec
adc
roll
add
mov
inc
push
js
pop
int
clc
mov
pop
mov
lcall
sbb
add
mov
inc
mov
pop
test
dec
jg
dec
mov
sti
test
mov
stos
aad
hlt
xchg
cmp
imul
lret
push
rcl
je
cmp
pop
sbb
pop
jns
and
lret
dec
xor
mov
es
mov
stc
je
adc
lds
daa
or
mov
mov
imul
xor
leave
or
pop
cmp
gs
xchg
pop
pusha
lahf
xchg
adc
jo
jmp
sahf
jp
xchg
mov
push
cmp
fst
add
mov
mov
push
and
cs
sbb
aad
es
adc
dec
inc
or
mov
push
mov
inc
repz
jg
pop
add
lea
cmp
xor
pop
push
cwtl
cmp
add
sti
pushf
iret
sub
jmp
stos
sbbb
mov
nop
gs
fucom
std
aas
sub
pop
jb
jg
dec
mov
movsl
fwait
jecxz
or
jb
es
jle
fistps
xchg
cmp
push
dec
push
xor
mov
mov
mov
mov
mov
push
mov
push
ljmp
add
stos
dec
ds
xchg
cmpsl
pop
cmc
leave
mov
aam
pusha
cld
lods
mov
pop
mov
dec
cmpsl
and
pop
or
out
jo
adc
mov
scas
pop
push
add
fstpl
mov
lds
int
shll
leave
or
fldenv
mov
jmp
inc
xchg
and
push
lods
int3
push
stos
push
cltd
rcll
mov
out
xchg
hlt
dec
inc
add
xchg
addr16
sbb
xchg
shll
fildll
fcmovu
je
cmp
fcompl
shlb
xchg
sti
call
xor
push
xorb
movsb
mov
arpl
iret
pop
inc
cmpsb
imul
add
inc
pop
xchg
fisttpll
addr16
or
push
dec
xchg
mov
push
mov
popf
pop
out
outsl
adc
bound
loope
push
cmpsl
inc
in
and
xchg
dec
int3
adc
shrl
or
cwtl
lock
sbbb
xchg
fwait
mov
mov
mov
in
faddl
fucomip
xor
xchg
insl
add
pop
xchg
mov
sub
xchg
lods
js
add
xchg
cmp
in
xchg
stos
dec
add
and
push
insb
aam
loopne
cli
std
xlat
scas
clc
push
outsb
push
push
and
iret
jae
and
xchg
fwait
cmp
adc
inc
xchg
sbb
shlb
fisubl
or
test
inc
inc
jg
fisubrl
mov
sbb
and
imul
mov
cwtl
xchg
sub
sbb
ljmp
repnz
or
hlt
in
dec
mov
in
xchg
add
sbb
mov
lea
rcrl
int3
dec
fwait
fwait
pop
clc
mov
cmc
xor
add
xchg
mov
cmp
xchg
cmp
fwait
outsb
or
push
das
cmpsb
ret
in
into
movsl
ror
cmp
dec
cmp
cmc
jl
hlt
xchg
dec
popf
jle
ds
in
shr
ss
xchg
mov
push
inc
jne
test
sahf
scas
addr16
jmp
mov
lret
js
cli
cld
pop
push
adc
mov
sub
clc
push
cmp
sub
mov
lds
ja
cltd
inc
je
stos
inc
cmpb
les
pop
fldt
add
js
xor
loop
push
jnp
add
jae
jno
inc
imul
pop
dec
repnz
fsubrl
xchg
sub
sbb
xchg
lock
fs
mov
ss
jne
and
mov
cmp
and
testl
sbb
mov
sbb
out
into
add
mov
xor
fdivrl
stc
sub
daa
adc
cmp
jmp
push
mov
daa
cli
mov
xor
mov
or
adc
pop
jmp
gs
mov
loopne
sarb
pop
jg
scas
adc
sbb
mov
cmpsb
add
pop
pushf
sbb
movsb
or
xlat
inc
lds
add
xchg
mov
mov
sti
push
or
stos
or
jbe
lods
nop
lock
scas
dec
inc
push
int3
or
test
lea
sub
push
xchg
dec
pop
add
test
jle
mov
pop
ljmp
inc
clc
push
aas
lret
push
xchg
jb
pop
mov
je
test
jecxz
fisubrs
mov
je
and
mov
mov
out
imul
add
cmpsl
in
lret
lock
ja
add
jns
shll
mov
jmp
mov
insl
ret
dec
cmp
jnp
push
xchg
xchg
mov
stos
fwait
int3
cld
xlat
fstpl
push
daa
iret
mov
push
subl
daa
lret
stos
push
and
addr16
jnp
cmpl
mov
cmp
jecxz
fldl
popa
clc
xchg
andl
popa
mov
dec
mov
cli
xchg
push
mov
pop
add
jecxz
clc
dec
aad
jp
mov
xchg
dec
cmpsl
sti
push
test
adc
pop
sub
adc
sbb
stos
sub
outsl
add
ffreep
xchg
gs
or
jge
xor
cmp
or
repnz
add
ja,pt
inc
cmp
aas
inc
mov
ja
lcall
dec
ja
ss
lret
out
mov
repz
out
dec
es
or
push
inc
in
push
jg
popf
jge
out
add
sub
sbb
lea
sbb
mov
bound
mov
adc
jle
fdiv
in
xchg
lea
cmp
fisttps
sbb
call
xchg
push
pmaddwd
push
scas
fcomps
shll
push
loopne
jmp
mov
mov
jnp
ret
out
scas
pop
inc
dec
push
lcall
iret
rorb
mov
inc
popf
jae
or
inc
sbb
decl
inc
sbb
pop
sub
xchg
add
mov
imul
repz
jp
lds
push
fidivrl
inc
ret
imul
out
inc
mov
xlat
rep
jge
adc
sbb
jle
aaa
xor
cmp
mov
dec
mov
push
adc
into
xor
rcrl
data16
dec
and
mov
cmp
arpl
es
push
xchg
xchg
pop
cmpsb
inc
adc
mov
xor
ss
pop
daa
push
jne
cmp
lret
insl
jl
dec
or
mov
movsl
fnstenv
and
rorb
loop
addr16
imul
daa
inc
jp
push
sub
js
lods
scas
pop
nop
xchg
loope
sbbb
mov
pop
outsb
xchg
or
or
cmp
je
ret
orb
xchg
loope
add
mov
xor
in
mov
sub
shr
jmp
insb
push
mov
hlt
imul
inc
mov
addl
fwait
aam
mov
sbb
ljmp
ss
mov
cmp
filds
mov
adc
add
sbb
into
into
call
jl
xor
out
mov
add
stc
loop
lods
sub
adc
outsl
lret
data16
lods
xchg
orl
jmp
xchg
ja
cwtl
outsl
or
incb
icebp
fsubp
xchg
jmp
pop
sahf
jae
adc
aad
imul
aad
xchg
cmp
rolb
fnstsw
jg
data16
js
cld
dec
inc
in
hlt
push
std
sti
add
inc
cs
lods
mov
dec
andb
xor
les
mov
pop
pop
aam
cmc
call
test
pop
mov
stos
fistpl
inc
pop
lea
inc
in
xor
push
push
aas
push
shlb
repnz
dec
cmpsl
jns
je
mov
push
idiv
push
lods
std
int3
mov
dec
mov
mov
out
addl
inc
jle
outsb
into
cmpsb
lock
shlb
mov
xor
or
stc
pusha
sarl
iret
cmp
pop
hlt
xchg
insl
test
push
sbb
sbb
mov
data16
add
insl
lret
ret
dec
stc
mov
pop
ret
lock
inc
idivl
jle
jne
pop
and
mov
push
mov
jl
int
adc
scas
jo
ljmp
lds
test
out
lds
mov
outsl
add
loopne
das
mov
ret
cmp
xchg
inc
dec
push
fldt
xchg
dec
mov
lds
cmp
in
cmpsb
pop
xor
stos
sbb
mov
push
in
add
cli
cmpsl
jg
xor
ret
xchg
sahf
xor
test
mov
jmp
cwtl
ficomps
outsl
sbb
pop
in
dec
mov
mov
or
pop
fs
push
rorb
int
jne
movb
pop
mov
sub
push
js
mov
fisubrl
in
jb
out
dec
fs
adc
addr16
ja
add
adc
mov
jg
clc
jle
cmc
sahf
in
stos
jne
fbstp
fildll
fbstp
jmp
and
repz
sbb
mov
push
imul
cld
inc
into
push
pop
adc
and
add
jnp
dec
inc
scas
mov
or
adc
imul
aas
sub
mov
jno
inc
test
add
ljmp
mov
fisubrl
scas
roll
xchg
adc
xchg
pop
mov
dec
imul
sbb
push
enter
sbb
and
mov
xchg
scas
mov
loop
mov
arpl
sti
lock
pop
das
jge
and
out
icebp
or
idivl
int3
pop
aad
pop
push
jl
push
repz
push
xor
sbb
outsl
scas
inc
adc
and
fldcw
push
loopne
push
enter
pushf
sub
sbb
push
jg
outsb
ret
push
jl
fsubs
jnp
fdivrl
sti
adc
and
ljmp
push
ficoml
jae
pop
mov
ljmp
js
repz
jnp
push
and
loope
adc
pop
cmp
outsb
mul
addr16
dec
push
loop
imul
ret
icebp
xor
into
push
sbbl
ret
data16
add
aaa
dec
push
adc
iret
sub
nop
push
sahf
out
and
xchg
cmp
orl
mov
sahf
mov
or
and
mov
fcomps
cmpsl
in
lret
in
cwtl
push
sbbb
jmp
into
lret
mov
arpl
dec
outsl
popf
or
jmp
inc
out
mov
sub
adc
jae
or
lods
jbe
imul
sbb
sub
inc
xchg
in
ret
add
mov
mov
mov
jecxz
adc
cmc
cli
imul
mov
xchg
sti
or
sbb
sbb
mov
ja
mov
pop
sub
sti
scas
sbb
jo,pn
outsl
aad
xchg
cmp
loope
adc
nop
dec
fprem
scas
les
mov
popa
push
fisttpll
aaa
ja
movl
call
pop
sar
pushf
rclb
adc
insb
dec
xchg
pop
xor
adc
aas
or
or
stc
and
iret
popf
je
inc
test
test
idivb
idiv
std
jae
jb
jmp
lds
sbbl
or
in
out
mov
movb
leave
dec
outsl
das
xor
and
sub
idiv
ret
roll
shlb
insl
nop
sti
orl
pop
jle
mov
sahf
cld
sub
xor
mov
fs
pop
sub
sub
cmp
sbb
sbb
or
clc
or
enter
gs
sub
lds
xchg
stos
xchg
testb
setns
add
fcomps
nop
arpl
xchg
sahf
sub
xchg
sbb
mov
cmp
jl
frstpm(287
jo
or
push
mov
call
xchg
rol
xorb
jae
or
inc
xor
and
mov
popa
lea
js
mov
push
or
dec
jge
fiaddl
and
or
std
aas
fwait
cltd
cs
dec
cmp
and
pop
out
or
aaa
bound
es
jns
lea
xchg
cmp
sub
push
pushf
and
jl
jp
and
mov
gs
mov
fs
mov
pop
in
sub
fisttps
xchg
out
psubsw
add
in
lods
push
fstl
ds
jp
movsb
mov
pop
ljmp
lahf
inc
insb
adc
fwait
lret
scas
and
loopne
sub
in
adc
into
iret
nop
stc
add
int
jmp
inc
mov
add
or
inc
jecxz
pop
or
cmc
movsb
mov
les
fcmovb
pusha
add
sbb
inc
subl
dec
fiadds
pop
mov
cmp
bnd
xlat
pop
hlt
int
sub
cli
mov
xor
jge
adc
sbb
jecxz
scas
cmp
or
jmp
or
push
mov
in
ja
xlat
scas
and
bound
cmp
out
inc
repz
inc
cmpsb
dec
int
in
addl
xchg
push
daa
sbb
push
cmp
shrb
loopne
jl
or
ljmp
movsl
out
sbb
into
ds
je
xchg
push
mov
inc
notl
aad
xchg
cmp
lods
fnstsw
pop
movsb
mov
add
push
cmc
jge
pusha
xchg
xchg
int3
mov
cmp
pop
cmp
pop
mov
push
shrb
jbe
xorb
sbb
ficoml
stos
fidivl
inc
scas
nop
push
test
xchg
int
jne
sub
adc
push
push
cmc
and
add
jmp
mov
pop
andb
sbb
xlat
adc
mov
iret
jbe
xor
ss
sub
cmp
push
or
lret
add
das
movsb
ret
pop
repnz
stc
fdiv
sub
sub
cs
jmp
jl
mov
jl
push
orl
arpl
and
lea
