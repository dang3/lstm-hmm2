jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
call
cmp
jle
mov
mov
xchg
mov
xchg
xchg
xchg
inc
lea
mov
inc
mov
xchg
mov
xchg
xchg
mov
dec
call
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
call
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
movl
pushl
pushl
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
pushl
pushl
mov
push
call
call
call
call
movl
pushl
pushl
mov
push
call
call
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
lea
push
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
movl
pushl
pushl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
mov
cmp
je
call
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
xor
divl
test
jne
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jo
xchg
xchg
mov
xchg
xchg
lea
dec
dec
lea
lea
mov
mov
mov
mov
lea
mov
inc
mov
cmp
je
jmp
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
push
mov
push
call
mov
mov
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
cmp
jle
mov
mov
xchg
mov
xchg
xchg
xchg
inc
lea
mov
inc
mov
xchg
mov
xchg
xchg
mov
dec
mov
cmp
je
jmp
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
mov
sub
mov
mov
jmp
mov
xchg
xchg
mov
mov
mov
jmp
mov
dec
inc
mov
dec
jne
mov
jmp
xchg
mov
dec
dec
dec
jne
push
mov
mov
xor
call
mov
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
mov
mov
mov
call
cmp
jo
xchg
xchg
mov
xchg
xchg
lea
dec
dec
lea
lea
mov
mov
mov
mov
lea
mov
inc
push
mov
mov
xor
call
mov
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
lea
mov
push
mov
jmp
mov
jmp
mov
xchg
xchg
mov
mov
mov
jmp
mov
dec
inc
mov
dec
jne
mov
jmp
xchg
mov
dec
dec
dec
jne
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jle
mov
mov
xchg
mov
xchg
xchg
xchg
inc
lea
mov
inc
mov
xchg
mov
xchg
xchg
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
sub
add
add
mov
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jo
xchg
xchg
mov
xchg
xchg
lea
dec
dec
lea
lea
mov
mov
mov
mov
lea
mov
inc
mov
call
mov
mov
mov
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
jmp
mov
xchg
xchg
mov
mov
mov
jmp
mov
dec
inc
mov
dec
jne
mov
jmp
xchg
mov
dec
dec
dec
jne
mov
mov
movl
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
mov
pop
ret
mov
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
inc
out
mov
cmpsb
in
mov
in
mov
lock
mov
ljmp
int3
mov
mov
mov
mov
mov
in
mov
imul
mov
inc
xor
test
imul
mov
imul
add
imul
out
hlt
imul
in
imul
mov
inc
xor
shrl
imul
leave
imul
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jle
mov
mov
xchg
mov
xchg
xchg
xchg
inc
lea
mov
inc
mov
xchg
mov
xchg
xchg
mov
dec
movl
mov
jmp
mov
xchg
xchg
mov
mov
mov
jmp
mov
dec
inc
mov
dec
jne
mov
jmp
xchg
mov
dec
dec
dec
jne
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
mov
mov
call
mov
cmpl
je
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
cmp
je
mov
subb
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
xorb
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
incl
mov
cmp
jne
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
mov
call
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
push
mov
push
call
mov
pop
ret
lea
push
mov
add
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
movb
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
mov
mov
pop
ret
lea
push
mov
add
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
jmp
mov
xchg
xchg
mov
mov
mov
jmp
mov
dec
inc
mov
dec
jne
mov
jmp
xchg
mov
dec
dec
dec
jne
call
test
jne
mov
jmp
movw
cmp
jo
xchg
xchg
mov
xchg
xchg
lea
dec
dec
lea
lea
mov
mov
mov
mov
lea
mov
inc
call
lea
mov
pop
ret
nop
push
mov
add
cmp
jae
mov
lea
mov
mov
lea
lea
xchg
xchg
lea
mov
mov
mov
lea
xchg
xchg
dec
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
movl
pushl
pushl
mov
push
call
lea
push
call
call
call
xchg
xchg
mov
mov
mov
mov
lea
jmp
lea
xchg
lea
dec
inc
dec
lea
mov
mov
mov
inc
dec
lea
push
call
call
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
call
call
mov
cmp
jl
lea
xchg
lea
mov
mov
mov
lea
xchg
mov
lea
dec
jne
lea
lea
lea
inc
dec
lea
push
call
cmp
jle
mov
mov
xchg
mov
xchg
xchg
xchg
inc
lea
mov
inc
mov
xchg
mov
xchg
xchg
mov
dec
call
lea
push
call
lea
push
call
lea
push
call
cmp
jle
mov
mov
xchg
mov
xchg
xchg
xchg
inc
lea
mov
inc
mov
xchg
mov
xchg
xchg
mov
dec
movl
pushl
pushl
mov
push
call
call
movl
pushl
pushl
mov
push
call
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
push
call
mov
call
mov
jmp
mov
xchg
xchg
mov
mov
mov
jmp
mov
dec
inc
mov
dec
jne
mov
jmp
xchg
mov
dec
dec
dec
jne
mov
pop
ret
add
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
movl
pushl
pushl
mov
push
call
call
call
call
call
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
cmp
jo
xchg
xchg
mov
xchg
xchg
lea
dec
dec
lea
lea
mov
mov
mov
mov
lea
mov
inc
lea
push
call
lea
push
call
cmp
jno
xchg
lea
lea
mov
jmp
mov
mov
inc
mov
lea
xchg
dec
mov
jmp
dec
dec
lea
mov
mov
inc
lea
push
call
call
mov
pop
ret
subl
jae
mov
cmp
jl
mov
xchg
mov
mov
lea
mov
mov
inc
lea
xchg
mov
mov
mov
xchg
mov
inc
inc
inc
mov
mov
mov
lea
call
cmp
jo
xchg
mov
lea
mov
inc
inc
cmp
jb
lea
dec
xchg
inc
mov
lea
lea
mov
dec
jne
mov
mov
mov
dec
inc
ret
mov
ret
lea
push
bound
add
call
in
pop
mov
add
sbb
enter
lods
sbb
adc
add
fcmovu
shlb
dec
xchg
and
adc
fildll
mov
mov
shrb
aas
add
testb
add
mov
add
add
movsl
ret
ret
out
adc
jo
add
popa
mov
add
lea
dec
xlat
xchg
add
faddl
mov
add
outsl
insl
test
stc
add
sti
dec
add
sahf
adc
dec
push
inc
add
cwtl
out
pop
xchg
add
add
mov
nop
cmp
add
add
cmp
add
testb
lcall
add
xor
inc
in
stos
ss
setg
add
push
mov
add
cmp
add
add
add
gs
add
add
gs
arpl
or
sti
jns
popa
fldl
add
add
add
ds
in
mov
lds
fiadds
mov
inc
add
add
or
xor
loop
jae
push
jnp
out
das
int
add
xor
mov
add
add
push
inc
add
outsb
add
add
xchg
add
lock
fsubrs
iret
add
jbe
mov
ret
and
leave
add
cmp
imul
add
mov
push
add
and
add
xor
mov
push
dec
cld
sti
int3
xchg
push
sbb
or
add
add
fists
add
add
jmp
nop
out
add
xchg
testl
mov
add
adc
in
add
inc
add
push
and
pop
mov
pop
sub
orb
in
out
add
add
inc
add
add
add
cli
mov
out
add
popa
mov
mov
scas
add
add
xor
fldt
add
adc
push
add
sub
inc
aam
mov
fstl
hlt
xor
scas
dec
aad
mov
sldt
push
pop
add
ds
shll
fdivr
add
movb
xchg
cmp
jg
pop
add
out
jno
dec
cld
add
mov
loope
add
pushf
add
and
push
mov
add
mov
lds
outsb
adc
hlt
mov
jno
loopne
into
jecxz
stc
and
mov
push
adc
and
cmp
outsl
movsl
je
push
arpl
mov
add
adc
push
aas
out
lahf
add
pop
jnp
add
xchg
test
xor
cli
testb
jb
add
add
gs
cmp
add
in
lds
or
fwait
add
add
add
stc
fwait
enter
inc
sub
testl
lods
mov
add
xor
mov
jo
imul
scas
or
loop
add
add
jle
dec
imull
aas
popaw
xchg
stc
inc
and
cmp
cmp
add
mov
adc
add
scas
pop
xchg
inc
adc
int3
jmp
add
mov
add
cmp
mov
push
jl
or
add
je
add
add
fstpt
ret
fs
leave
ror
int3
and
mov
stos
mov
fmull
arpl
add
lahf
add
add
out
add
or
roll
test
mov
enter
mov
add
and
push
push
mov
push
add
cmpsl
xchg
into
notb
arpl
das
shll
xchg
jl
xrelease
enter
mov
lahf
call
mov
loop
ret
adc
xchg
pop
jmp
gs
mov
push
inc
xchg
jne
pop
test
jb
clc
sbb
je
scas
mov
xchg
mul
lock
std
shll
test
divb
aaa
jno
orl
popf
sbb
mov
shr
lock
or
enter
and
lods
sub
inc
js
ror
jae
es
mov
pop
jg
movsl
push
cmpsl
dec
fldl
pusha
pop
push
icebp
test
cmp
lret
adc
xchg
popa
and
cwtl
and
rorb
cmpsb
sub
xlat
adc
test
mov
push
mov
mov
rcll
cmp
int
lods
leave
adc
mov
outsl
xchg
shrl
push
pushf
fildl
and
mov
inc
in
pop
lds
xchg
and
lock
test
stc
outsl
xchg
aaa
jmp
iret
ljmp
lret
stos
imul
inc
cmp
jne
mov
or
and
inc
xor
fldt
xor
pop
test
rcll
sahf
pop
aaa
cmp
ja
in
dec
adc
push
inc
iret
mov
xchg
add
jbe
mov
xor
out
lahf
jb
ljmp
in
mov
or
xor
sub
or
push
aad
or
aad
mov
rcll
aad
mov
mov
pop
add
mov
xchg
jnp
adcl
dec
popf
mov
xchg
mov
rcrl
jno
or
out
insb
les
leave
scas
push
jge
adc
cmpsb
iret
mov
push
mov
inc
cmpb
inc
dec
or
je
xchg
pop
ja
sbb
xchg
pop
sbb
movsb
imul
fimuls
ror
leave
sbb
mov
pop
mov
xor
fdivl
psraw
jbe
sahf
test
sbb
adc
mov
movb
stc
icebp
int3
cmp
dec
pop
sub
push
popf
mov
jo
test
scas
mov
fs
mov
xor
push
jb
cmpsb
cmpsb
xor
gs
jle
lret
push
push
daa
dec
pushf
int3
cmp
and
add
inc
dec
int
sbb
and
aas
xchg
and
add
inc
mov
push
mov
pop
test
mov
cmovae
repnz
aam
stc
pop
mov
in
cmp
push
push
imul
decl
pop
outsb
mov
aam
rorb
pop
xchg
subb
and
adc
push
jmp
xchg
int
jbe
sub
pop
cmp
lcall
rcr
dec
cli
sub
mov
lret
mov
addb
jg
jp
mov
or
mov
das
scas
mov
scas
add
xor
ss
int
dec
mov
fcoms
shl
jo
aas
lret
xor
mov
lcall
jecxz
cmc
test
imul
pand
xor
stc
fistpl
mov
adc
cmp
lods
pop
imul
out
adcb
es
xor
mov
or
test
dec
in
pop
movsb
xor
pop
scas
jns
adc
fadd
imul
ss
pop
rol
xchg
in
xor
xchg
inc
dec
xlat
jo
fwait
sub
mov
jns
aas
sti
or
fwait
aad
xor
nop
loopne
xor
xchg
sahf
inc
mov
les
clc
xchg
lret
inc
sahf
lea
mov
xlat
xchg
pop
jne
pushf
adc
mov
pushf
push
sub
mov
xor
or
in
test
jb
xlat
rorl
stc
xchg
cmc
jecxz
xchg
lcall
mov
shll
or
dec
das
cmpsb
fcomp
mov
mov
mov
push
lock
loopne
cmpsl
jg
mov
sub
rcll
mov
insl
jb
rorb
cmp
xchg
icebp
clc
icebp
pop
lret
and
stc
lret
test
mull
xor
leave
pop
push
or
rcrb
lahf
imull
pop
jns
aam
rcrl
push
ss
pop
mov
or
xchg
mov
inc
push
popa
cmp
mov
mov
rorb
dec
xchg
sbb
push
ja
ljmp
aad
cltd
test
jmp
mov
inc
call
dec
push
adc
jo
add
orb
sarl
sahf
dec
pop
jne
mov
jecxz
mov
add
pop
or
ret
xor
sbb
fdivrp
dec
xor
xchg
test
cmp
xchg
mov
test
mov
repnz
ret
ja
inc
addr16
pop
mov
push
or
shll
out
push
jne
mov
fsubrp
jle
push
jge
xor
in
xor
out
jo
sub
or
mov
mov
loope
mov
inc
test
lods
in
fsub
pusha
mov
das
jecxz
mov
pop
jmp
inc
jno
andl
popf
fsubr
out
mov
pop
push
adc
sahf
and
pop
sbb
lock
sub
lret
add
call
dec
ds
iret
add
imul
push
scas
popa
inc
lea
inc
dec
sbb
push
imulb
fcmove
das
cmc
xchg
mov
push
sbb
ja
imul
xchg
stos
jecxz
lds
or
cmc
clc
arpl
mov
add
sbb
ret
mov
xchg
jbe
iret
nop
jge
dec
adc
shll
pusha
add
add
int3
and
push
pop
push
or
push
sbb
xor
mov
sub
xorb
test
sti
movsb
push
fs
push
rcrl
in
add
daa
dec
cmp
data16
lcall
cmp
stc
ds
insl
pusha
movsl
mov
insb
lahf
data16
xchg
test
pop
inc
inc
test
sub
xchg
gs
push
or
and
xchg
pop
rolb
ljmp
sub
fnstenv
cmp
pop
jne
add
sub
fs
decb
mov
outsl
and
xor
push
push
out
xor
sub
jo
lcall
xchg
dec
int3
xchg
sub
push
test
outsb
sbbb
adc
mov
adc
mov
push
xchg
and
ss
pop
xor
iret
jp
imull
mov
addb
mov
outsl
sub
adcl
cmc
dec
cmovo
push
cs
loop
dec
cltd
stc
xchg
push
push
adc
dec
andb
lea
test
out
add
cli
pop
daa
add
sbb
dec
pop
or
ret
lret
mov
fsubs
pop
into
and
mov
es
adc
sarb
in
bound
sbb
iret
pop
test
scas
arpl
sub
xchg
mov
in
in
mov
xor
pop
jge,pn
movsl
aad
out
nop
mov
mov
test
fnstenv
repnz
hlt
out
into
popf
push
lea
lcall
adc
popa
pushf
adc
cmp
inc
xchg
mov
and
jb
ljmp
int
push
jecxz
jmp
imulb
cmp
xchg
add
aas
xor
mov
xchg
fucomi
mov
mov
shlb
pop
xlat
imulb
xchg
mov
mov
pop
pop
rcl
js
es
js
pop
sub
cmpsl
dec
pop
cmpsb
mov
xor
xor
lret
repz
leave
mov
or
inc
fs
jbe
rcl
out
pop
popa
sub
mov
sbb
outsl
or
stc
add
sbb
pop
clc
mov
int3
fwait
ljmp
jb
lahf
scas
jg
mov
das
and
push
push
xchg
push
xchg
add
sub
cltd
lds
dec
cwtl
xchg
jle
dec
mov
loopne
xchg
lcall
xchg
imul
push
xchg
cwtl
add
ljmp
xor
out
or
inc
xor
push
shll
pop
xor
pop
lods
test
dec
cli
pop
cmp
and
fwait
lcall
jne
stc
cmp
out
pop
sbb
jns
repnz
in
clc
or
aaa
clc
es
add
lods
push
mov
arpl
mov
adc
popf
pop
js
scas
jle
jle
push
addr16
xor
push
cmp
fistps
pushf
xchg
subl
jmp
adc
mov
mov
sbb
in
loopne
push
dec
ds
and
sub
insb
lcall
scas
cs
xchg
out
adc
or
ret
adc
inc
cwtl
or
xor
xchg
lock
push
out
jne
and
xorl
imul
sti
push
dec
rclb
movsl
mov
add
rcrl
sub
je
jge
lcall
pop
push
cld
or
pop
push
add
repz
int3
psraw
pop
xchg
fbstp
or
subl
cmp
in
mov
xchg
dec
js
enter
daa
dec
bound
pusha
jno
roll
dec
stos
or
imul
movsl
nop
aas
mulb
sbb
addr16
test
jle
mov
add
inc
aaa
mov
pop
mov
cmc
js
mov
and
loope
cmp
aad
pop
cmp
jge
add
sarb
add
or
sbb
mov
xor
cmpsb
lock
mov
sub
xlat
movsb
pop
xor
push
ficoml
pop
loop
cmc
and
cmp
xchg
test
mov
popf
jg
push
pusha
mov
dec
into
mov
in
mov
ret
push
ret
sti
fbld
cmp
mov
ror
jae
pop
rorl
mov
stos
xchg
mov
mov
cmp
cmc
adc
ret
xcrypt-ofb
cmpsl
outsl
int
or
pop
add
stc
dec
add
pop
adc
data16
push
lods
es
test
sub
in
mov
hlt
test
mov
adc
adc
xchg
mov
aad
adc
dec
imul
sahf
xchg
jnp
jle
imul
sbb
or
adc
out
cmp
sub
andb
dec
lret
leave
loopne,pn
lods
aad
add
nop
xchg
neg
dec
adc
jg
test
adc
popf
jne
repz
xor
shrl
jmp
pop
call
xor
pop
pop
fwait
pushf
sarb
jmp
leave
xchg
pop
mov
cmp
inc
push
mov
mov
das
xor
dec
into
sbbb
mov
xchg
imulb
push
mov
fnstcw
mov
jns
mov
push
outsl
or
xor
fistpl
xor
mov
ss
mov
sub
hlt
mov
out
ret
shll
xor
insl
inc
call
dec
cmpsl
dec
push
jnp
stc
loope
icebp
or
xchg
lret
bound
add
adc
int
imul
rol
inc
adc
add
arpl
push
mov
outsl
xabort
fiaddl
push
inc
dec
ljmp
ljmp
faddl
cwtl
inc
adcl
leave
adcb
mov
cltd
push
or
test
sahf
cmp
and
xor
xchg
sbb
push
pop
pop
lret
sbb
sub
sub
add
add
outsl
call
or
push
sbb
sti
mov
pop
mov
push
mov
push
nop
in
dec
in
lds
or
cmp
fwait
leave
lods
fmull
inc
jne
xchg
movsb
mov
xor
out
cmp
and
jns
and
xchg
imul
mov
int
or
mov
lods
sbb
jp
loop
mov
gs
mov
push
sbb
jle
movsb
xor
mov
aas
pusha
lock
fistpll
xchg
push
stos
cs
fsubrl
push
dec
and
popf
sub
mov
mov
stos
adc
pop
insb
add
or
xchg
cmp
push
fdivs
rcll
add
mov
sar
ret
and
aam
inc
mov
sub
push
or
in
lods
inc
hlt
pushf
xchg
fidivl
clc
xchg
bound
and
imul
fdivp
push
add
lret
in
sub
mov
or
pop
sub
leave
or
cmp
mov
iret
scas
jbe
lea
sbb
pop
dec
aaa
fimuls
or
lcall
pop
mov
fwait
push
inc
dec
mov
jo
mov
scas
push
sbb
test
es
fcomps
sub
jg
pop
outsb
xor
xor
inc
enter
daa
dec
or
jno
das
mov
fmull
adc
aam
xchg
aad
and
test
sub
test
out
mov
push
sbb
add
pop
xor
loope
xor
inc
lock
inc
adc
outsb
lret
adc
sbb
clc
mov
push
sbb
and
xor
roll
hlt
lea
sub
sahf
lcall
inc
fsubl
sahf
sub
pusha
inc
rolb
dec
mov
xchg
and
loope
ds
xchg
cmp
inc
sbb
lods
xor
cmpsb
rcr
enter
pop
sbb
shll
fimull
push
xlat
shrb
cwtl
loop
in
jnp
add
notb
xchg
cmp
data16
cld
jp
or
mov
fdivr
mov
pop
mov
or
sub
gs
adc
mov
inc
sti
imul
shlb
or
xchg
cs
sbb
inc
dec
test
sub
push
andb
ss
mov
cs
add
aad
jge
nop
jno
cmp
jle
inc
push
mov
les
mov
aam
cmc
lea
bnd
mov
dec
pop
mov
adc
in
pushf
imul
jmp
sbb
daa
inc
mov
mov
call
dec
inc
mov
mov
ret
addr16
imul
test
std
lret
cwtl
xchg
ljmp
add
mov
fisttpl
mov
popa
in
lods
and
lock
stos
das
inc
mov
mov
jb
sub
push
lea
es
pop
insl
daa
xor
cmpsl
dec
jno
mov
loopne
cmpsb
cld
dec
mov
sarb
sbb
les
mov
pop
rclb
mov
ret
lea
call
clc
xor
or
ljmp
shrb
std
push
out
sti
push
lcall
pop
push
sub
mov
cltd
dec
in
enter
fwait
mov
xor
dec
mov
xor
repz
pop
roll
lds
cmp
int3
push
add
and
cmc
lcall
les
xor
sub
mov
fistps
pop
and
inc
ja
jl
dec
loopne
mov
or
xor
dec
nop
ljmp
dec
add
out
sbb
mov
jns
testl
out
arpl
or
lods
fisubs
push
jmp
mov
lea
jle
in
in
pusha
mov
pop
fistps
pop
cmpsb
jmp
cmpsl
mov
adcl
push
adc
fwait
popf
push
mov
bound
push
int
jg
xchg
jmp
insb
jo
pop
jnp
ror
scas
hlt
inc
pop
push
pop
loop
adc
ret
cmpsb
pop
sti
pop
mov
scas
stos
sbb
inc
push
pop
cmp
pusha
adc
jae
std
shrb
mov
fadds
add
jg
xchg
push
cmp
in
dec
rolb
mov
stos
mov
cld
hlt
or
cmp
sbb
sbb
ficompl
aaa
popf
fwait
cmp
add
jl
int3
in
out
pop
in
sbb
sub
xor
ret
scas
xor
and
cmp
xor
scas
mov
push
fmul
pop
sbb
dec
cmp
cmp
outsb
divb
mov
jl
pushf
mov
ds
sub
and
push
lahf
ret
jnp
push
decb
push
mov
test
pop
jnp
test
push
cmp
loope
dec
dec
sub
mov
push
sub
popf
shl
frstor
push
ds
add
add
outsl
inc
xor
and
imul
mov
sub
mov
gs
adc
dec
dec
mov
pop
popf
or
test
dec
mov
out
inc
adc
sub
and
lds
add
adc
add
jb
insb
arpl
lret
pop
shll
mov
lahf
bound
adc
into
add
sbb
jns
shrb
test
jg
mov
mov
hlt
fs
sbb
lods
hlt
call
sbb
cli
repnz
xor
aas
xchg
or
or
mov
shlb
pop
sub
adc
les
adc
push
mov
cltd
test
cmc
sbb
sbbb
xlat
insb
jb
sub
lret
mov
and
push
test
cmpsb
add
inc
pop
sbb
dec
iret
jle
inc
rcr
push
loopne
les
jg
xlat
imul
xor
sub
inc
mov
gs
sahf
pushf
push
int
jmp
xor
jbe
sub
and
ja
divb
pop
testl
cwtl
push
jecxz
mov
divb
dec
mov
jno
mov
mov
xchg
jno
imulb
cmp
adc
jnp
cmc
mov
orb
cmp
das
and
mov
add
shrl
es
push
insl
push
bound
dec
adc
pusha
sbb
mov
in
jae
sti
lret
inc
mov
mov
and
lret
mov
rcr
push
shlb
movaps
push
sbb
push
inc
push
popf
fisttpll
aaa
jp
pushf
mov
icebp
popa
xchg
pop
lods
loopne
daa
mov
pop
push
popf
xchg
xor
imul
jg
add
popa
push
cltd
test
test
or
xchg
popa
testl
xchg
call
sbb
xchg
rcrl
sbb
add
outsl
or
stos
adc
add
push
loopne
ds
jbe
lret
or
mov
mov
and
daa
pop
fmulp
pop
ja
jmp
dec
sarl
mov
ss
fwait
daa
and
dec
jae
fnsave
add
out
cli
xor
leave
or
das
in
inc
icebp
xchg
or
out
inc
push
sub
hlt
cmp
stos
cmp
or
in
mov
jns
mov
cld
xchg
sarl
enter
lea
pop
xchg
fistpll
cmp
jmp
jb
stos
and
sub
rcl
push
popf
js
jb
popf
jl
push
or
xor
jge
stos
insb
fildl
fldt
data16
xor
mov
add
arpl
pop
xor
pop
jae
mov
iret
or
fldt
inc
repnz
lcall
sbb
test
repnz
insb
mov
shlb
mov
incb
pop
hlt
push
xor
arpl
add
sbb
jge
fsubp
sbb
sub
or
add
add
testb
sub
or
or
jl
xlat
cli
mov
je
scas
adc
fs
dec
hlt
cmp
into
movsb
inc
lret
std
dec
lods
cmpsb
rcrl
add
enter
daa
dec
jmp
into
jno
push
gs
mov
dec
clc
jne
ds
test
in
sub
lahf
loop
xchg
push
sar
ss
test
mov
mov
lea
pop
mov
shrl
mov
push
mov
mov
mov
rcl
push
mov
ljmp
lock
sbb
adc
rsqrtps
int
inc
scas
sub
pop
adc
daa
rclb
int3
lret
fdiv
push
jno
push
mov
sahf
inc
mov
scas
or
inc
jg
cmp
mov
xor
mov
aam
and
and
fsubrp
cmp
mov
adc
test
or
push
inc
sbb
cld
inc
into
in
adc
push
mov
mov
stc
outsb
stos
sub
and
xor
popa
data16
scas
lods
fildl
enter
jns
sub
pushf
cli
and
xchg
sub
mov
xor
mov
gs
pop
add
repz
push
pop
dec
sub
out
bound
add
adc
das
clc
add
dec
xchg
mov
leave
sbb
mov
aam
sub
enter
xchg
cs
cltd
aad
movsb
lea
adcl
pop
pusha
les
mov
ficoml
lret
mov
mov
repnz
hlt
or
mov
push
xchg
imul
xchg
inc
mov
cmp
std
fwait
aas
push
mov
jb
inc
dec
xor
stc
je
pop
mov
loope
daa
divb
std
sbb
sti
cwtl
or
sub
xchg
loope
dec
ds
fldt
xchg
xchg
lret
das
add
mov
mov
adc
andb
inc
mov
cmc
je
dec
adc
cmpsl
dec
rol
mov
mov
paddb
sub
mov
sub
push
mov
repnz
push
sarb
dec
mov
aam
mov
ret
stos
xor
fnsave
ret
cmp
out
lock
xchg
push
lods
dec
aad
mov
roll
mov
add
add
xchg
test
sub
xchg
ljmp
xlat
sahf
mov
sbb
cmp
icebp
decb
stos
add
icebp
push
add
push
ret
cmp
xor
sub
xor
mov
or
gs
mov
cltd
pop
inc
ja
fists
inc
pop
mov
sbb
push
sbb
mov
loope
out
fstps
xor
xlat
in
pop
loope
pop
imul
sub
out
pop
andl
push
jp
cwtl
repz
cmp
mov
imul
inc
out
in
jge
pusha
rorl
iret
push
mov
xchg
cmp
push
test
xchg
pop
push
popf
lahf
insb
adc
dec
mov
stos
insb
adc
xchg
mov
aas
jnp
ret
call
push
lods
insb
xor
iret
fldl
out
ret
rcrl
pop
popf
inc
les
mov
pop
ja
or
push
popa
cltd
inc
jno
test
dec
shlb
addr16
test
pop
call
aad
add
repz
sarb
in
and
push
test
leave
outsb
aaa
hlt
sahf
push
jns
imul
stc
jge
mov
jp
sbb
or
testl
mov
cmp
push
out
pushf
repz
js
lods
scas
icebp
inc
push
and
mov
movsb
int
rcpps
cmpsb
inc
mov
in
call
nop
mov
dec
push
inc
cmp
jne
jp
adc
adc
addr16
popf
ds
or
mov
lahf
add
push
movsb
mov
push
push
push
mov
xchg
aad
leave
sub
js
cmpl
push
lea
mov
enter
call
add
stos
or
sbbb
jno
push
push
add
pop
adc
ficoms
js
loop
sub
movsb
lcall
cmp
fsubl
pop
cld
sahf
jecxz
outsl
test
test
jg
cmp
mov
cmp
mov
std
stos
mov
xlat
scas
and
jno
cmp
jbe
daa
imul
dec
dec
lret
mov
mov
aas
mov
cmc
das
pop
sub
das
movsl
xor
push
xor
stc
and
in
adc
aad
lods
ret
mov
out
dec
inc
cli
pop
jmp
mov
or
jae
gs
not
loopne
or
adc
xchg
mov
add
dec
repnz
idivb
xlat
ljmp
mov
sti
in
xor
fwait
mov
jns
rorb
nop
add
rorb
movb
and
test
mov
xor
sbb
fnsave
ljmp
add
adc
pushf
insb
mov
jmp
mov
pop
sub
mov
aaa
orb
mov
arpl
push
testl
jne
jecxz
lahf
or
std
mov
mov
mov
mov
rolb
mov
scas
fcmovnu
into
inc
mov
lahf
push
mov
ss
and
mov
and
adc
pop
es
xor
insl
fsubrl
dec
or
cmp
icebp
rcrb
lret
push
popa
or
and
aad
rcrb
adc
inc
rorb
mov
inc
ret
cmp
push
enter
fmull
clc
in
sti
xchg
sbb
ljmp
dec
lods
mov
pushf
mov
and
and
cltd
jecxz
cmovne
loope
repnz
test
cli
xchg
out
dec
shrl
test
inc
scas
xchg
test
rorl
iret
pop
ja
test
push
mov
xor
jno
mov
xor
decb
test
lock
mov
sbb
test
mov
pop
push
ficompl
dec
mov
sbb
or
sbb
test
cmp
adc
jle
pop
out
mov
out
sbb
jns
dec
mul
xchg
lds
cmpsl
repnz
out
imul
or
or
addr16
mov
mov
sbb
mov
fisubl
out
ror
push
pusha
pop
shrl
xchg
mov
clc
sub
xlat
fstl
pop
push
mov
xor
push
mov
xor
and
push
out
jnp
pusha
in
sbb
inc
stos
adc
pop
iret
cmp
pop
ret
fstpl
shll
inc
iret
mov
inc
pop
rol
or
shl
gs
lock
call
sbb
lods
nop
imul
test
jge
jne
jp
test
xchg
or
test
dec
repnz
mov
leave
in
scas
hlt
jmp
outsl
or
jp
jge
jg
sbb
xchg
fcmovu
out
mov
mov
cmpsb
das
js
jno
call
xor
roll
and
lock
iret
cmpsl
movsb
pop
cmc
inc
push
fwait
aas
cltd
cmpsb
ss
in
iret
sbb
enter
daa
dec
xlat
and
pop
sbb
or
jl
popa
repnz
out
sbb
lock
mov
lret
xor
and
push
ja
call
push
sbb
inc
add
sub
pop
pop
lock
inc
js
jmp
pop
cmp
pop
push
or
loope
je
sub
or
subb
pop
adc
xchg
mov
subb
mov
mov
cmc
xor
mov
int
addr16
sub
insl
call
push
je
cmpsb
fmull
sub
shll
sahf
xchg
pop
test
cmp
mov
int3
aas
dec
mov
jnp
mov
jp
pushf
cs
and
test
xor
imull
jg
sarl
in
mov
inc
cmp
stos
pop
or
xor
jp
loop
pushf
scas
stc
fsubrl
inc
fs
cli
outsb
adc
push
and
pop
test
test
ds
out
loop
cli
mov
mov
or
fs
ret
gs
in
loopne
fidivs
mov
ja
cli
xlat
adc
fisttps
inc
push
mov
cmp
sbb
xor
mov
cltd
nop
pop
mov
data16
sti
dec
mov
inc
aad
pop
xchg
nop
fstl
dec
in
xchg
in
adc
arpl
aam
into
repz
loopne
cmp
call
scas
sub
pop
pop
mov
adc
sbb
pop
loopne
jmp
adc
pop
inc
mov
popa
aas
push
cmp
dec
and
mov
jecxz
pop
mov
data16
cwtl
cmpb
mov
fcomps
dec
pushf
adc
fisttpl
xchg
mov
pushf
cmp
adcb
shlb
mov
sahf
xchg
adc
out
mov
xor
lea
mov
cmp
icebp
cld
hlt
push
mov
mov
aaa
cs
mov
xor
loopne
push
sub
jg
add
sbb
pop
popf
fldl
cmp
jo
pop
push
adc
aad
inc
popa
fsubl
sbb
xchg
add
je
adc
movsb
sbb
cltd
sub
test
cs
dec
sub
insl
xchg
and
sbb
pushf
rcrl
dec
cmc
stos
jecxz
mov
add
mov
adc
sbb
aaa
xor
in
xchg
or
in
mov
ret
mov
jmp
xchg
mov
cmovno
dec
lods
insl
ljmp
bound
fwait
mov
dec
dec
sbb
mov
fimull
xchg
out
xchg
jno
bound
mov
in
test
idivb
stos
sub
in
jbe
cmpsl
shr
movsl
ljmp
lahf
sub
mov
push
jle
jno
in
jnp
pusha
imull
pushf
xchg
jne
out
jmp
sarl
lcall
mov
in
fsubrl
push
leave
mov
push
ljmp
sbb
or
ret
sub
push
cmp
out
iret
fwait
pop
cmpsl
ret
push
pop
xlat
ljmp
push
lahf
mov
dec
add
inc
outsl
adc
mov
bound
insl
inc
sub
jo
fisubs
lea
lds
pop
sahf
shlb
sbb
leave
pop
lret
xor
icebp
arpl
fsubs
sbb
xchg
imul
idivb
add
out
pop
mov
xchg
in
sub
jge
cs
aas
scas
scas
sbb
or
xchg
notl
popf
push
cmpsb
dec
push
jge
mov
ret
enter
daa
inc
adc
cmp
sbb
jl
cmc
fimull
lds
cmp
lahf
add
mov
orb
push
add
push
out
or
push
repnz
in
xor
js
jmp
push
push
inc
dec
loope
pop
call
cmp
xor
lods
cmpsb
fcmovbe
popa
mov
addb
sbb
dec
xchg
fisubl
int
shrl
das
mov
cmpsl
push
lret
subb
fisttpl
out
sahf
sub
xchg
imul
insb
in
jae
fisubl
mov
fstps
sbb
icebp
cld
cmp
in
sub
imull
sub
and
mov
mov
sbb
adc
cmc
mov
out
outsl
pop
ljmp
xchg
loop
fs
mov
mov
nop
test
mov
mov
es
cli
mov
jne
cmp
imul
xorl
mov
pop
cmpsl
dec
popa
adc
adc
mov
rolb
mov
add
insb
xor
sub
shll
ss
xor
nop
mov
test
inc
es
repnz
mov
fistpll
movsl
repz
inc
int
jecxz
xor
or
stc
pop
or
mov
pushf
ret
jmp
cmp
mov
inc
shl
aas
repz
cwtl
jne
je
mov
mov
cmp
iret
ret
sbbl
mov
aaa
add
mov
lea
lock
adc
mov
sub
rcll
insl
sbb
add
mov
inc
inc
push
icebp
adc
xchg
pop
dec
sub
cld
sbb
mov
mov
dec
in
shlb
cwtl
add
lret
mull
dec
gs
sub
mov
pop
loopne
xchg
cwtl
jecxz
ljmp
dec
lods
mov
mov
ljmp
push
dec
jne
lsl
push
pusha
jmp
aad
arpl
push
dec
sti
subl
sbb
shl
call
cli
stos
ror
pusha
push
sti
sub
fmulp
add
insb
data16
jp
or
movd
cs
lret
ja
rcrb
adc
jnp
or
andb
jecxz
push
dec
incl
mov
adc
out
jbe
in
adc
mov
cmp
int3
pop
les
loopne
lds
mov
divl
lret
mov
jbe
in
nop
or
pushf
lock
adc
xchg
dec
iret
or
in
stos
mov
sbbl
push
fildll
mov
or
and
pop
push
insb
xchg
jnp
call
and
sub
iret
cli
xor
ret
pop
push
test
inc
in
outsl
jae
or
inc
gs
or
mov
inc
out
andl
insb
loopne
sbb
mov
imul
lds
push
xchg
mov
dec
mov
leave
rorl
scas
hlt
jg
pop
arpl
test
and
cltd
xor
aaa
pop
xchg
and
mov
dec
or
jl
xchg
pop
iret
mov
xor
mov
scas
mov
out
cmp
jo
push
cmp
cmpsb
int
pop
in
popf
lcall
inc
aad
cmp
jno
push
pop
jl
pop
jle
mov
int
pusha
into
xchg
movsl
rorl
lahf
pop
mov
push
sbb
xchg
jo
mov
mov
scas
mov
pop
ds
jne
clc
jnp
pop
mov
daa
dec
loope
out
push
cmp
pop
outsb
sbb
add
cmp
pop
xor
pop
adcb
cld
mov
add
loope
xor
leave
push
push
jl
int
push
sub
mov
push
and
fsubl
add
int3
pop
lock
or
jg
push
and
push
or
mov
fldenv
and
cmp
cmpsl
jo
mull
add
lret
xchg
imul
pop
sbb
mov
push
xor
dec
outsl
out
outsl
loop
stos
add
dec
cmp
arpl
insl
jae
pushw
ret
ja
xlat
mov
push
out
mov
and
cmp
or
lock
sub
or
scas
loopne
mov
and
xor
adc
fcomip
add
xchg
rolb
test
insl
cmp
test
sub
popa
mov
cmp
fdivr
test
jne
xchg
pop
insl
aad
mov
push
dec
stos
mov
inc
fldcw
les
repz
bound
out
lods
lea
and
lods
or
stos
adc
push
xor
sub
pop
adc
dec
sub
jno
aas
xchg
into
loop
je
mov
ja
add
testb
loop
idivb
popa
mov
jnp
dec
jb
or
inc
xlat
mov
iret
aad
ss
jle
cmp
cwtl
std
pop
and
arpl
loopne
mov
insl
xchg
test
dec
cld
push
add
inc
idivl
ljmp
lret
imul
and
cmpsb
add
pop
outsb
jb
rolb
decb
ret
out
pop
push
adc
mov
clc
xchg
mov
adc
popa
or
idivl
adc
dec
lcall
sub
bound
add
pop
cltd
xchg
mov
repz
inc
ljmp
cmp
xchg
sub
int
mov
dec
aam
pop
js
stos
shrl
add
ret
lcall
fwait
xor
pop
or
cmp
mov
ret
jle
jo
test
imul
imul
or
jb
fwait
adc
lds
jmp
gs
mov
bound
push
into
xchg
xchg
es
dec
test
jmp
daa
or
mov
jnp
or
and
mov
movsb
in
or
pusha
sub
pop
lcall
stc
repz
imul
dec
popf
cmp
scas
mov
inc
jo
stos
cmp
add
repnz
jnp
ror
scas
inc
jns
push
leave
xor
adc
cmp
iret
pop
dec
scas
ret
add
inc
lock
jae
dec
and
xchg
lea
inc
repz
insl
js
ficompl
pshufw
idivb
imul
inc
lds
mov
mov
popf
orb
in
test
lret
arpl
out
lahf
jge
pop
aad
push
outsl
aaa
pop
mov
xor
mov
call
fmuls
jnp
xor
in
jp
insl
pop
pop
and
cmp
movsb
stc
stos
xchg
push
mov
mull
test
enter
daa
inc
sbb
cmp
jae
jno
test
mov
into
hlt
addl
enter
hlt
lret
jge
pop
push
lock
add
inc
iret
rcll
inc
scas
push
enter
cmpsb
pop
gs
js
mov
push
push
ret
adc
fidivrl
or
pop
outsb
jg
movsb
adc
pop
push
push
xchg
mov
andb
sbb
mov
shll
sbb
push
or
xchg
add
mov
lcall
push
fmull
cld
sub
jl
test
cmpsl
iret
orb
jg
bound
enter
jge
ret
and
stos
adc
cmp
bound
mul
dec
daa
lret
lcall
pop
xchg
sbb
hlt
dec
into
push
xchg
adc
dec
repnz
aad
loop
add
fs
das
adc
mov
mov
xchg
mov
test
and
sti
cli
and
sub
lods
adc
mov
sub
cmp
cli
fcomps
out
adc
and
pop
mov
xchg
adc
sbb
loop
xor
sub
or
push
cmpsl
iret
mov
cs
adc
aad
fimull
nop
outsb
jbe
dec
or
es
dec
adc
faddp
cmc
sbb
cltd
jmp
sbb
call
sub
cmc
pop
jae
or
outsl
pushf
stos
pushf
sbb
jmp
fld
pop
mov
push
fs
testb
aas
xor
ret
jb
mov
test
mov
test
sahf
std
pop
insb
leave
cwtl
mov
inc
mov
aas
testb
cmp
dec
pop
mov
mov
mov
jne
lock
and
das
pop
test
mov
dec
and
fst
das
xor
adc
insl
js
in
imull
sbb
shll
lret
push
mov
dec
push
out
inc
inc
pop
lea
fwait
rcrb
dec
sub
leave
lret
loop
push
aam
popa
fnstsw
ret
sub
xchg
push
mov
ljmp
jecxz
out
mov
mov
pusha
xchg
fdivrp
adc
add
cltd
into
std
lret
test
or
mov
xchg
fs
dec
pop
pop
fs
mov
fidivs
cmp
shll
in
stos
mov
add
inc
adc
add
fstpl
clc
mov
xor
ret
xor
mov
mov
mov
nop
mov
inc
in
mov
pop
lret
dec
test
inc
dec
push
or
cmp
fwait
inc
out
dec
lds
jp
das
sahf
mov
out
xor
add
lahf
xor
mov
lds
rcrb
hlt
sub
movsb
jge
movsb
in
popf
jp
sub
mov
adc
mov
xchg
jae
jle
pop
leave
in
out
pusha
enter
je
jo
out
shlb
jmp
xor
pop
cmpl
cld
push
gs
bound
lea
xchg
mov
insb
pop
fidivl
scas
test
popf
leave
adc
mov
dec
ret
or
jl
sub
jae
lret
cltd
inc
imul
or
mov
lock
int3
in
xchg
sbb
and
imul
lds
jo
mov
lock
shll
mov
arpl
das
jb
sbb
sub
inc
or
lret
push
and
pop
sub
xor
xor
aas
xchg
scas
scas
dec
sub
inc
stos
sbb
stos
mov
movsb
test
fists
push
les
imul
daa
inc
jecxz
cmp
shlb
es
or
mov
cmpsb
cs
movsl
iret
xchg
pushf
and
lods
fcoms
fisttps
push
inc
jb
inc
ds
xor
mov
js
pop
inc
pop
mov
loope
stc
mov
cwtl
imul
push
sub
repnz
push
lock
jp
clc
sbb
jg
pop
shll
jmp
push
cmc
int
xchg
jl
mov
lcall
dec
fdivr
jb
sub
in
test
mov
jg
jbe
mov
jl
mov
dec
in
enter
fcomp
mov
cmp
sbb
adc
fisubs
xchg
sbb
mov
or
ss
cmc
adc
or
outsl
movsb
push
cld
loop
mov
mov
xchg
jl
or
in
lods
inc
push
cli
mov
xchg
out
jb
cli
push
aas
mov
cmp
mov
adc
dec
out
andl
call
dec
adc
icebp
jb
add
add
fildl
divb
les
sbb
mulb
gs
sbb
adc
sti
push
pusha
pop
cs
ret
mov
xor
nop
dec
add
dec
push
and
add
or
inc
in
and
lea
int3
mov
stos
inc
pop
adc
movb
ret
out
jmp
dec
ret
testb
mov
adc
jb
fdivrs
je
fisubrl
jecxz
clc
or
push
jo
std
add
out
cwtl
insb
dec
adc
mov
and
dec
dec
mov
fcmovnb
mov
int
in
sbb
in
mov
cmp
push
icebp
xorb
jle
xchg
es
test
insl
pop
lcall
inc
pop
mov
icebp
cwtl
xor
cld
mov
idivl
aaa
pop
push
and
fdivrl
jle
sub
cmc
sub
jle
add
out
pop
fstpl
xor
xchg
push
test
aad
cmp
lods
int
inc
mov
adc
or
loopne
cmp
and
add
cs
dec
shlb
movsl
xor
les
test
adc
xchg
jns
sbb
pop
into
daa
cmp
push
in
cmp
clc
pop
pop
call
push
popa
or
sbb
sbb
imull
mov
sti
mov
cwtl
dec
js
das
inc
jecxz
mov
fwait
jo
test
mov
jne
shrb
and
out
adc
into
ret
xchg
lods
shl
dec
int
xor
push
mov
cmp
addr16
jp
call
mov
stos
aam
dec
icebp
rorl
pusha
ds
hlt
daa
jae
arpl
fists
pop
jnp
roll
cld
or
bound
sub
cltd
popf
mov
mov
lds
push
or
and
dec
lock
enter
pop
icebp
fwait
scas
or
lods
push
push
insb
adc
mov
je
pop
addl
inc
push
inc
inc
jae
xchg
scas
inc
outsb
pop
iret
or
cmp
inc
imul
fidivrl
loopne
jno
jp
sbb
pusha
imul
fisubrs
movsb
rcrb
and
inc
mov
mov
arpl
icebp
jmp
sub
popa
jge
test
sbb
mov
or
inc
and
cmp
mov
sbb
lcall
and
fwait
les
aam
movsb
nopl
es
mov
push
add
mov
inc
xor
cmp
shlb
aas
jl
mov
ds
dec
mov
sub
dec
push
xchg
mov
push
push
adc
dec
inc
int
mov
clc
ljmp
test
call
in
inc
xor
sub
aad
cmp
xchg
outsb
inc
push
adcb
je
dec
leave
or
mov
scas
xor
adc
sub
in
cmp
sub
out
lcall
sbb
adc
xchg
mov
test
nop
testb
lea
mov
mov
stc
mov
iret
bound
out
lods
ss
bound
and
hlt
fcomp
mov
mull
lret
sbb
cs
mov
sub
mov
or
sbb
dec
cmc
fnstenv
xor
push
pop
lcall
dec
mov
outsl
and
dec
adc
test
ret
sub
jp
dec
pusha
add
and
add
pop
inc
cmp
fsubs
jno
sbb
loopne
sbb
xchg
adc
insb
mov
gs
adc
adc
add
sbb
test
fs
push
sub
cmp
in
jge
stos
sti
mov
jge
mov
jns
nop
and
orb
pop
inc
jb
add
into
leave
out
les
push
cmp
or
out
jns
icebp
sbb
call
sub
rclb
sbb
cmp
jmp
test
pop
jle
inc
popa
mov
imul
int3
mov
insl
daa
lods
dec
je
and
add
dec
cmp
testb
std
test
out
xchg
mov
cltd
mov
sub
dec
xor
movsb
mov
fsts
stos
in
movsl
lock
setns
sbb
inc
mov
push
adc
ror
sete
sbb
insl
inc
jmp
and
inc
push
mov
cld
lret
popl
mov
pop
inc
sti
mov
lret
xor
sar
mov
mov
imul
xor
xchg
aaa
pop
push
pop
add
ffree
dec
add
inc
leave
ds
xchg
dec
jl
adc
add
aas
nop
lods
cmp
clc
out
jbe
sbb
mov
sbb
cmp
cmp
fiadds
sub
test
sub
mov
out
add
push
outsb
lret
pop
jns
add
push
xchg
push
add
adc
pushl
mov
pop
or
lret
lods
call
mov
repz
out
xor
stc
mov
imul
or
inc
mov
lahf
popf
mov
mov
pop
jne
inc
es
loop
out
repnz
jns
inc
ljmp
mov
or
int3
push
dec
jp
xchg
mov
je
jb
adcl
in
int3
pop
pusha
push
loope
mov
jl
xchg
mov
jbe
lret
sbbl
push
jmp
js
mov
xor
add
rep
xchg
jnp
xor
xchg
iret
jnp
daa
loopne
outsl
jb
push
sahf
lahf
jae
xchg
hlt
aas
iret
jbe
pop
ret
cs
ljmp
jae
fwait
push
inc
jno
lahf
or
mov
jp
ljmp
xchg
enter
les
repz
mov
movsb
es
cmp
pop
mov
xchg
and
leave
scas
outsl
mov
arpl
xlat
pop
jbe
jbe
jge
ret
rcrb
test
aaa
push
inc
aad
mov
add
adc
cmp
and
ret
xor
cmc
xchg
mov
or
cmp
xchg
repnz
lcall
cmpsb
fldcw
mov
daa
inc
add
xchg
je
jno
mov
dec
jo
sarl
in
pop
lcall
sbb
lahf
fcmovu
dec
push
imul
outsl
push
fucom
inc
inc
pop
xlat
cmp
pop
ficoml
js
mov
push
int
loope
xchg
out
sub
adc
sbb
sbb
test
or
mov
mov
add
icebp
outsb
xor
add
pop
cmp
sub
int3
pop
stos
cli
cwtl
lcall
sbb
dec
test
xchg
or
mov
test
lret
mov
push
shlb
add
jge
fcoms
xor
in
loop
lds
test
into
cld
popa
cmp
xor
add
stos
cmp
fs
pop
cmp
test
add
lods
adc
test
and
cli
mov
adc
or
ret
jmp
loopne
negb
outsl
out
jle
pop
imul
into
cmp
mov
inc
or
inc
jo
cmp
jbe
sub
or
call
lret
mov
aad
fimuls
decl
dec
es
test
flds
out
repz
repnz
test
pop
outsl
push
test
mov
sbb
jmp
andb
mov
test
inc
fdivrl
push
sub
dec
jmp
clc
je
dec
stc
jecxz
les
testb
cwtl
loop
jne
xor
orl
mov
mov
mov
push
mov
je
inc
and
icebp
inc
rcrl
cmp
fwait
imul
cmpsl
inc
sti
inc
mov
inc
mov
xor
daa
pop
sarb
popa
jb
mov
ljmp
sub
stc
xchg
ret
and
push
sbb
xchg
or
xchg
shrl
ljmp
lods
mov
pop
jne
fldcw
enter
mov
xchg
mov
adc
stos
ljmp
cltd
jae
pop
test
sarl
mov
lahf
leave
xchg
addl
and
test
fiaddl
jmp
mov
shrl
or
fcompl
sub
sbb
cs
call
pop
js
mov
fmull
jmp
and
iret
mov
jmp
mov
jno
sbb
or
popl
pop
arpl
andb
sahf
or
stc
aas
jne
xor
mov
jnp
out
rcrl
hlt
movsl
push
jns
addl
shlb
jno
pop
stos
add
sub
jp
rorl
pushf
inc
out
mov
jecxz
jle
fmull
pusha
cltd
icebp
lret
mov
mov
xchg
xchg
sub
out
sti
push
scas
loop
popf
xlat
fidivrl
inc
imul
sahf
mov
jnp
and
push
in
push
adc
scas
iret
aad
scas
ret
stos
pop
and
cli
inc
sbb
cmp
jmp
into
or
cs
imul
xchg
pop
mov
pop
sub
fdivp
outsb
adc
sub
mov
jmp
jecxz
hlt
mulb
arpl
add
scas
mov
and
aas
sbb
lods
aaa
adc
or
faddl
pop
lcall
mov
fs
xor
push
xor
mov
stc
sbb
cmp
sti
lcall
addr16
cmpsb
pop
adcb
xchg
cmp
fdivrl
xor
jl
shlb
pcmpgtw
in
pop
and
pop
lahf
stc
rcll
cmovl
test
inc
inc
jmp
mov
pop
add
mov
pop
repz
sarl
loope
push
loop
fldenv
movsb
cmp
int
outsb
or
cmp
and
or
adc
in
add
xchg
xor
jecxz
adc
std
or
in
dec
es
sub
lcall
xchg
stc
lret
jne
xor
sub
inc
push
jg
leave
push
mov
fistpll
movsb
icebp
jnp
test
jmp
pop
push
pop
cmp
dec
je
mul
mov
xlat
enter
mov
sbb
call
cmpsb
cmc
addr16
insl
outsl
inc
loop
pop
xor
fstpl
lock
outsl
sub
mov
lods
cli
decl
out
mov
cli
lock
xor
add
das
or
movsb
fdivrp
mov
movsb
gs
loopne
loopne
ret
popa
dec
cmp
push
enter
sub
adc
fwait
xchg
add
fldenv
mov
mov
into
daa
xlat
loop
outsb
sub
fs
in
push
icebp
popa
sti
adc
mov
aad
test
nop
ficoml
inc
inc
cwtl
lea
cmp
repz
shl
repz
test
call
sub
xchg
pop
aas
fcmovu
adc
sbb
inc
jmp
inc
arpl
mov
outsl
int3
je
bound
shlb
iret
dec
bound
je
pop
mov
test
test
cwtl
popf
cmc
pop
mov
add
and
pop
push
add
clc
ss
lock
dec
push
js
sub
and
daa
push
imul
es
clc
in
adc
mov
jecxz
ljmp
xchg
daa
icebp
sbb
test
lret
xchg
mov
mov
push
in
pop
or
shlb
cwtl
xchg
aam
pop
pop
ret
mov
xchg
push
loopne
add
adc
cmc
clc
mov
adc
ljmp
shrl
in
movsb
out
cmp
ds
cli
sub
jno
orl
imul
test
mov
cmp
and
stc
rcll
xchg
mov
roll
mov
pop
iret
mov
adc
int
inc
add
dec
cmp
pushl
xor
or
or
nop
xor
repnz
rclb
shl
pop
sub
sti
ja
movsl
xchg
dec
push
lods
ja
test
bound
cwtl
je
std
arpl
push
pop
mov
dec
andl
mov
jle
xchg
jns
arpl
in
jmp
cmc
out
adc
stos
or
jl
addr16
jp
mov
mov
dec
sbb
add
or
pusha
xor
fcomip
and
mov
rclb
xchg
movhps
popf
popf
jae
mov
xorb
and
stos
insb
or
scas
xor
xor
adc
jae
xor
jns
and
scas
pop
pop
mov
daa
pop
lods
jae
jnp
inc
ja
lea
test
cli
mov
cwtl
inc
push
jbe
imul
lret
xchg
ljmp
outsl
pushf
sarl
cmp
fs
popf
cli
enter
jp
lock
cmp
adc
jge
movsb
jae
sti
adc
or
jl
scas
jl
int3
push
icebp
pop
jmp
push
or
jo
out
scas
enter
mov
push
movsb
mov
dec
push
adc
mov
enter
daa
inc
das
jmp
jno
orb
dec
dec
lcall
push
add
lahf
sbb
push
ja
mov
testl
or
mov
js
or
lcall
mov
fnstsw
ja
push
outsb
mov
adc
pop
aaa
add
insb
mov
xchg
sbb
test
mov
xor
mov
fldcw
push
dec
in
and
data16
movsb
in
sub
sahf
sahf
seta
icebp
and
in
xchg
mov
mov
enter
add
ss
stc
sbb
adc
xor
mov
jle
shl
dec
mov
adc
adc
lods
mov
cs
xor
mov
and
loop
mov
je
mov
pop
adc
icebp
data16
dec
lods
loope
testl
and
xor
sbb
loop
or
adc
gs
xor
pop
xorb
adc
in
mov
xchg
xchg
push
jbe
sbb
or
xlat
and
jl
xor
out
aam
in
mov
inc
ret
add
aad
aad
nop
mov
fisttpl
mov
fnstenv
push
repz
push
xabort
xor
pushw
sub
cmpsl
adc
pop
repnz
adc
pop
repnz
outsl
sub
cltd
pop
out
hlt
inc
divb
inc
jge
adc
dec
out
sub
dec
in
fldenv
je
adc
jecxz
mov
or
cwtl
pop
push
pop
mov
std
popa
mov
jmp
jns
xchg
dec
hlt
mov
sbb
mov
rcrl
lock
or
mov
pop
bound
divb
xor
mov
sub
stc
cmpsl
aas
lods
adc
nop
or
aad
cld
dec
jb
lret
add
ja
and
dec
sbb
sarb
push
sub
adc
ret
inc
xor
sbb
cmp
sub
testl
cmpsl
ljmp
add
cmp
scas
xchg
inc
lock
push
dec
imul
add
and
mov
loop
or
xchg
xor
pusha
imul
movsl
icebp
iret
xchg
push
sbb
push
jle
push
dec
pop
pop
jp
adc
jo
addb
jo
call
mov
adc
xlat
xchg
xor
adc
mov
add
sbb
out
test
sarl
aas
mov
or
sbbb
xor
out
jne
xor
mov
ljmp
sbb
jns
call
pop
xchg
outsb
mov
shrb
fs
addr16
xor
cmp
jae
mov
rorl
in
adc
pusha
iret
rcr
fisttps
xchg
jmp
sub
addl
inc
popf
and
out
push
sarl
ljmp
insb
je
cmp
sbb
scas
cwtl
jmp
jae
imul
fs
xchg
and
pop
pop
rolb
jae
push
lock
jp
or
fimull
and
mov
addr16
loop
dec
popf
jmp
sbb
in
imul
cld
fidivrs
pop
rol
cmp
rorb
add
xchg
je
adc
mov
arpl
and
jge
imul
mov
call
or
testl
jmp
push
pusha
push
int
or
push
scas
sbb
pop
push
cmp
mov
movsb
cmp
stos
push
bound
push
cmpsb
bound
ss
daa
aas
mov
sub
mov
jl
and
dec
js
push
dec
mov
and
dec
sbb
test
mov
inc
or
cmp
js
stos
xchg
pop
jno
sbb
sub
sub
ret
outsl
test
shrl
aam
in
xchg
cmp
fldl
jge
adc
xchg
scas
pop
xor
mov
int
sub
sub
repz
lcall
popf
fmull
and
sahf
inc
cmp
test
adc
xor
sbb
adc
mov
rclb
xchg
xchg
pop
mov
add
and
sarl
adc
cmp
les
mov
mov
inc
gs
out
sbb
into
movsl
shll
mov
clc
jno
arpl
stc
dec
test
fs
adc
jo
lods
enter
cmp
hlt
cli
push
sub
xor
test
or
mov
fsubs
xorb
pushf
mov
pop
lahf
sbb
test
xor
xchg
adc
js
cmp
xlat
pusha
adc
inc
mov
sub
sti
jno
pushf
cs
ja
aad
data16
inc
mov
or
stos
push
push
aaa
movsb
repz
xchg
xchg
sti
popa
mov
call
fistpll
adc
cmp
jmp
or
pop
mov
inc
jge
mov
cwtl
cmp
jmp
pushf
jb
insb
cmp
icebp
lret
je
je
jecxz
hlt
notb
sub
inc
fs
cwtl
adc
mov
jl
mov
push
adcl
aam
fldt
fs
mov
mov
das
xchg
lods
add
cltd
xchg
and
mov
or
fs
xchg
insl
loop
jl
dec
mov
lret
sbb
ja
adc
je
dec
mov
jbe
mov
jecxz
pushf
pop
inc
mov
imul
mov
xchg
push
data16
frstor
sbb
xor
pop
xchg
nop
in
jmp
loopne
jno
stos
lods
in
bound
add
out
push
daa
faddl
add
xchg
sbb
jg
fucomi
js
sbb
xor
test
pop
mov
sbb
xor
pop
and
and
sub
jg
mov
mov
xchg
xor
xchg
sub
inc
mov
mov
mov
pusha
repz
aaa
andl
fwait
pop
cmp
dec
pop
inc
adc
mov
mov
loop
lods
andb
adc
in
sti
or
in
out
cmp
xlat
or
xor
mov
mov
aad
xor
inc
jle
lock
pop
dec
test
loope
fildll
icebp
dec
xchg
loopne
enter
and
testb
push
testl
addr16
add
add
xchg
mov
jnp
movsl
inc
scas
sti
imul
pop
mov
repnz
sub
inc
aas
or
mov
cld
jae
push
inc
jge
jp
inc
inc
fildll
hlt
mov
out
stos
loope
and
pop
sbb
repnz
imul
and
in
shlb
mov
leave
mov
insl
arpl
sbb
ja
sarl
push
lock
xchg
aaa
push
sub
jge
fsubrl
or
push
mov
xchg
popa
mov
mov
and
add
movsb
jl
push
mov
push
cmpsb
in
cmp
aad
jnp
outsb
inc
daa
ds
pop
cmp
mov
pop
je
or
or
movsl
stc
or
xchg
mov
sub
add
push
or
dec
inc
cwtl
cmp
movl
js
fstl
pop
mov
pop
push
mov
loope
ja
sub
push
sarb
in
outsb
xor
push
adc
adc
mov
sub
mov
add
inc
in
xor
lret
roll
push
loopne
cli
cltd
or
pop
daa
mov
cmpsb
test
lcall
es
xchg
dec
sub
mov
in
jbe
ret
orb
jg
inc
pop
mov
push
out
or
mov
mov
stos
ss
mov
fdivrs
add
pop
mov
mov
mov
stos
push
into
mov
xchg
cmc
mov
repnz
outsl
fimuls
stc
add
repz
shrl
data16
lods
scas
mov
mov
inc
test
xor
ret
push
pop
mov
imul
pop
mov
jb
imul
jnp
xchg
fdivrs
sbb
jg
test
lahf
cmpsl
inc
sub
jns
mov
xchg
cld
jo
and
cmp
lods
fnsave
nop
imul
dec
mov
leave
adc
loope
push
repz
rcl
std
sbb
pop
mov
movsl
xor
pop
pop
cmc
mov
sarb
or
sbb
inc
add
movsb
inc
mov
cmpsb
aas
mov
sbb
rolb
and
jge
xchg
jecxz
mov
std
in
cmpb
dec
mov
jg
mov
les
lret
fcmovnu
aam
mov
in
in
push
mov
xor
jnp
mov
or
jae
pop
cmpsl
pop
push
dec
aam
frstor
notb
adc
mov
sub
jecxz
mov
and
jle
mov
imul
push
xchg
fsubrs
jle
jns
out
jl
ret
pop
xor
fisttpll
outsb
popf
xchg
iret
and
popa
ret
lods
dec
sbb
gs
addr16
add
cvtps2pd
add
sbb
cltd
dec
jae
test
cmp
xchg
scas
push
dec
cs
addr16
pop
push
xchg
repnz
sbb
xor
pop
rol
adc
mov
jo
xchg
inc
add
test
or
and
xor
push
fsubs
mov
mov
ret
adc
jg
cmpsl
dec
sub
inc
insl
popf
push
or
shl
fwait
mov
dec
cli
dec
pop
jne
lds
mov
test
bound
and
in
add
xchg
or
adc
or
mov
jp
mov
mov
cs
mov
lahf
cmc
mov
in
loop
pusha
add
pop
fsts
fwait
andl
andl
cmpsb
push
mov
jle
mov
aas
mov
fisubl
test
dec
insb
dec
insl
or
scas
bound
add
fldenv
iret
push
mov
ret
ret
pop
std
and
jae
enter
xchg
pop
or
sbb
inc
inc
lods
fidivl
pop
jb
sbb
inc
imul
je
inc
cli
fs
ds
xor
sbb
arpl
push
sbb
sub
xor
or
inc
add
dec
int3
mov
into
dec
push
xchg
cmpsl
lods
xor
mov
dec
sub
inc
andl
push
pop
push
push
add
ja
push
out
enter
daa
cmp
test
jl
dec
test
xchg
xlat
ds
add
push
and
xlat
push
lahf
jne
lods
push
mov
xchg
test
aam
dec
inc
daa
cld
mov
sahf
js
movsb
cli
pop
out
jmp
push
out
pop
loope
mov
sub
mov
cmp
dec
adc
out
lods
stc
cmp
enter
mov
xor
ja
int
jmp
sub
out
add
and
cltd
int3
push
xor
fsubl
dec
mov
xchg
test
pushf
andb
dec
jg
outsl
mov
or
mov
xchg
cltd
and
xorb
movsb
in
cmp
cmp
push
neg
pop
sbb
mov
dec
xchg
mov
sbb
mov
xor
sbb
mov
std
pop
stc
mov
test
xor
push
test
lods
xchg
pop
sbb
xor
xchg
out
mov
mov
xor
cmp
rcll
or
jmp
aaa
and
pop
and
popf
adc
adc
sbb
add
inc
xchg
fwait
lods
sbb
mov
mov
enter
call
sti
iret
cmp
sbb
and
clc
nop
inc
cmc
repz
add
sub
inc
fstps
and
les
gs
mov
push
leave
lea
xchg
call
and
jb
or
mov
daa
ffreep
pushf
jo
jmp
call
lds
sarb
aas
sub
jb
inc
jo
ds
aad
enter
movsb
push
pop
std
xchg
sbbl
mov
push
cmpl
loop
fisttpl
bound
push
mov
lock
mov
and
inc
dec
shll
mov
fisttpll
jne
cmpsl
cmp
pop
mov
jns
cld
int
add
mov
test
pop
mov
test
shl
ret
lea
jne
mov
ret
out
xchg
out
in
or
clc
test
push
xchg
push
fsub
ljmp
adc
push
out
enter
push
fwait
jns
insb
ud1
cld
add
in
cltd
xchg
aad
xor
mov
lret
adc
xchg
mov
test
ljmp
sbb
pop
jnp
push
stos
sub
inc
push
pop
xlat
addl
nop
mov
lock
xor
or
push
xor
outsl
sahf
mov
int3
nop
insl
mov
sbb
divb
sub
dec
sbb
mov
fwait
mov
repz
movsb
jae
mov
xor
shrl
jns
dec
int
sbb
pop
sbb
out
dec
lods
sub
scas
xchg
out
addr16
mov
mov
ret
js
push
mov
iret
mov
push
sbb
and
cmp
fildll
xchg
xchg
and
xchg
xchg
in
xchg
mov
xorl
mov
mov
jle
xor
mov
lods
adc
jge
scas
shll
push
dec
pop
fistl
mov
mov
mov
ljmp
dec
add
push
mov
dec
inc
andl
mov
inc
in
cmpsb
fisubl
xchg
sarb
add
cli
push
fisubs
popa
mov
into
xorl
fisttpl
sarb
fiadds
hlt
insl
adc
arpl
pcmpeqd
shll
out
jnp
into
cmp
or
outsb
add
outsl
int3
stos
lret
movsl
push
cwtl
push
jbe
scas
xor
pop
jns
scas
inc
jmp
pop
cmp
cld
movsb
faddl
cmpsb
jmp
push
enter
daa
cmp
das
cmp
jno
jno
sbb
inc
dec
or
cmp
mov
push
add
shll
lds
outsb
loop
lock
mov
jmp
pop
les
pop
cs
push
fisubs
loope
shll
out
cmp
pop
bound
inc
ficoms
lret
adcb
imul
mov
and
popa
in
pushf
push
and
xor
sub
pop
movsb
pop
cwtl
lcall
fcoml
adc
sahf
sub
test
lea
inc
jb
jg
mov
cmp
and
cld
and
out
outsb
sbb
cmp
cmc
jmp
negl
pop
adc
dec
or
sbb
push
sbb
dec
mov
cmc
dec
jns
xor
in
pop
outsl
pushf
shl
sbb
mov
fisttps
lahf
data16
mov
mov
ds
out
push
inc
cli
out
pop
xor
fcmovu
cmp
mov
in
data16
sub
loopne
mov
jne
jo
mov
mov
jb
repnz
xchg
pop
push
pop
sbb
cmc
fstpt
sbb
jge
mov
push
sub
jle
xchg
jae,pn
scas
aad
jb
nop
and
xchg
dec
pusha
fs
div
pop
sbb
pop
push
aad
mov
pusha
movb
ret
call
mov
loopne
adc
loopne
sbb
pop
jae
add
push
inc
jmp
test
jb
add
je
lea
mov
negb
pop
leave
std
cmp
cwtl
inc
cmpsb
ret
adc
mov
aam
adc
cmpsl
leave
fstpt
pop
mov
mov
sbb
shl
vcomisd
ja
mov
pop
stc
and
pop
mov
divb
lods
mov
insl
xchg
add
dec
lret
cmpsl
cmp
mov
push
mov
adc
shr
mov
mov
in
mov
cwtl
pop
movsb
rcr
rol
and
gs
ss
jge
add
fst
add
clc
jecxz
xchg
xchg
dec
adc
cmp
ret
popa
lock
and
sub
out
sub
xchg
push
mov
hlt
bound
sbb
nop
cltd
mov
ds
xchg
mov
test
cmova
lret
adc
shll
popf
je
pop
push
xchg
add
rcrb
decl
jmp
clc
xor
loope
mov
cmovno
mov
shrl
add
push
lret
dec
adc
mov
fwait
call
sub
jne
out
mov
mov
out
or
mov
jns
arpl
in
or
xchg
stos
pop
xchg
out
sti
scas
sub
test
dec
push
mov
jp
mov
jge
mov
js
sub
outsl
pusha
cmp
sti
xchg
pop
out
jmp
push
in
addl
push
inc
dec
mov
rorl
adc
fildll
ljmp
push
sbb
testb
mov
or
addb
inc
pop
faddl
sbb
push
inc
xchg
xor
inc
arpl
ficoml
or
xchg
sub
imul
xor
les
aad
not
sarb
mov
leave
lock
lcall
inc
dec
jge
outsb
outsb
sbb
xchg
sub
add
pop
pop
aam
fs
pop
cmpl
scas
and
scas
cmp
shlb
addr16
push
sahf
rcll
outsb
add
enter
daa
cmp
cltd
cmp
adc
fisubrs
dec
jns
movsl
loope,pt
cmpsb
movsl
push
nop
mov
add
lods
lahf
mov
add
ljmp
push
gs
inc
dec
fcmovbe
adc
popa
pop
jmp
int3
js
in
int
insl
push
subl
pop
lock
loope
outsb
pop
mov
add
shlb
push
mov
and
pop
push
shr
xor
in
push
daa
cmp
sub
cmp
pop
and
mov
fdivr
adc
andps
test
cmp
sbb
push
and
outsb
nop
cmp
jne
ss
or
mov
push
negl
lret
ret
call
jmp
into
xor
jecxz
sub
stc
outsl
jnp
sub
scas
test
stc
daa
imul
shrb
fbld
pop
or
addr16
inc
shl
sbb
push
xor
movsb
js
mov
and
decb
jbe
loopne
xchg
jbe
sbb
adc
inc
imul
add
and
sbb
xor
scas
xlat
pop
jbe
sub
enter
in
aad
xor
sub
enter
xchg
jo
cld
pop
rorb
movsb
loopne
or
add
xchg
inc
repz
pop
mov
call
and
pop
jno
adcl
cmpsl
mov
pop
push
pushf
filds
lods
adc
in
aas
and
jb
repnz
dec
sub
scas
je
cmp
mulb
mov
loope
sbbl
es
subl
fldt
test
jecxz
outsl
lock
loop
das
adc
push
mov
lods
dec
fst
inc
and
xor
adc
jle
push
dec
lds
out
in
icebp
daa
mov
cld
and
lret
xor
sub
xchg
mov
mov
ret
mov
rclb
test
aam
xchg
pop
ret
or
push
push
jb
and
incb
test
mov
arpl
lods
jbe
popa
pop
mov
fstpt
mov
push
xchg
movsb
stos
es
xchg
outsl
mov
ja
popa
add
adc
cltd
hlt
ror
test
in
pop
mov
push
dec
arpl
xchg
scas
sbb
mov
pop
roll
stos
push
mov
push
lahf
rcl
add
jmp
sub
cs
xor
in
or
enter
cmpsb
or
mov
gs
pop
mov
ja
pop
sbb
cltd
rolb
bound
jg
fwait
pop
pop
pushf
dec
mov
lea
push
ffree
out
ljmp
jns
sbb
in
or
cmpsl
out
push
pop
sub
movsb
cwtl
out
addr16
mov
push
addr16
in
int
jle
or
in
add
jne
stos
shll
or
and
add
add
sub
cld
fsubrs
in
mov
lret
jnp
fs
scas
xchg
lret
adc
jo
outsb
inc
cmp
xchg
lcall
mov
imul
mov
or
mov
addb
fcomp
lret
xchg
sbbb
loop
xor
addr16
vcmpps
ss
repnz
add
arpl
or
rolb
jge
test
sbb
mov
dec
pop
xor
add
sar
cmp
pop
add
pop
xor
int
in
add
insl
and
xor
cmp
mov
movsb
repnz
push
in
xchg
push
icebp
add
enter
daa
cmp
in
cmp
data16
jno
ret
xchg
jl
xlat
push
dec
call
inc
insl
movsl
adc
push
lcall
lcall
xor
rorl
das
pop
adc
cmp
outsb
pop
pop
lods
arpl
out
adc
cmp
ret
dec
cs
rolb
pop
mov
cmp
sbb
shll
push
sub
int
aaa
sti
sub
hlt
pop
mov
sbb
jae
cmpsb
jmp
push
sahf
jo
xor
js
xchg
push
gs
aaa
mov
call
scas
and
push
ss
out
cmp
imul
negl
push
lret
lret
or
jge
imul
vunpcklps
cmc
fadd
jp
test
jo
pop
add
loop
push
insb
stc
fidivs
fs
lea
data16
lods
dec
sarl
sbb
cli
push
cmpsl
pusha
xor
xchg
test
in
cmp
and
push
gs
in
shl
jp
pop
cmp
loop
push
cs
imul
add
bound
imulb
jl
sub
imul
sub
push
in
mov
inc
dec
jmp
cs
and
stc
sbb
nop
xlat
scas
pop
dec
push
jmp
in
mov
outsl
push
push
add
dec
pop
and
mov
sub
clc
pushf
jno
iret
jmp
lock
dec
mov
mov
inc
pop
dec
loope
push
sahf
cmp
dec
mov
inc
shl
rcll
std
mov
sub
sub
jecxz
add
into
dec
jbe
inc
fistpl
test
mov
pop
addr16
mov
repnz
or
sub
or
into
cmc
rcll
insl
gs
push
dec
shrb
mov
incb
lret
lret
lahf
lods
mov
cltd
add
pop
loop
repnz
sub
xchg
aam
inc
add
fwait
pop
ficoml
sub
frstor
daa
adc
pop
test
popa
push
leave
mov
xor
push
xchg
jmp
mov
jp
add
mov
push
add
mov
adc
sbb
test
push
xor
loope
ret
sbb
es
pop
jl
mov
push
inc
cmp
sbb
gs
dec
aad
xor
add
mov
mov
sub
push
jp
pop
dec
xchg
adc
dec
mulb
inc
leave
sbb
shll
fwait
inc
cmp
mov
push
sub
leave
pop
imul
inc
jns
js
in
arpl
xchg
dec
ficomps
sub
lahf
clc
stos
addr16
in
mov
mov
push
push
stc
push
cli
mov
cmpsb
jle
jne
in
cs
jno
imul
lcall
jmp
in
sbb
pop
mov
push
fidivrl
cmp
or
and
insb
mulb
jnp
jle
scas
ljmp
adc
ror
mov
cmpsb
mov
pop
stos
jae
out
inc
mov
or
push
sub
popa
es
fidivrl
pop
xchg
xlat
sarb
shll
lds
xor
sub
mov
cmp
stos
hlt
dec
mov
push
jbe
test
pop
pop
sbb
ljmp
adc
pop
add
sahf
std
int3
imul
xor
push
pop
sub
jo
clc
cmpsl
scas
loope
and
cmp
push
cmp
pop
cmpsb
je
in
pop
mov
fldenv
cmp
mov
ljmp
dec
push
push
arpl
daa
out
movsl
sbb
out
cmp
fwait
lahf
icebp
xchg
test
add
mov
pop
cmp
int3
js
test
push
in
loope
aas
cvttps2pi
jg
cmp
int3
outsb
and
dec
adc
pop
mov
cmp
sub
push
xor
popf
movl
std
sbb
pop
and
push
lea
inc
fcoml
lods
sub
insl
xlat
sahf
adc
lea
xchg
in
jg
push
in
mov
addl
and
xor
aaa
xor
rcr
mov
neg
xor
outsl
sub
rcll
mov
scas
sbb
inc
into
idivl
cmc
lahf
add
xor
jp
outsl
cmp
stc
xchg
and
orb
data16
and
sbb
aaa
out
enter
faddl
shlb
or
inc
jns
ds
ja
pop
pop
loopne
adc
sahf
xor
adc
ficoml
cmpsl
test
mov
sar
xlat
fidivrl
cltd
sub
mov
in
stos
hlt
add
mov
aad
add
nop
mov
fisttpll
xor
inc
xor
cmp
hlt
aad
les
fcomip
and
jb
or
mov
and
xchg
adc
or
pop
pop
jmp
inc
cmpsl
sbb
inc
cmp
add
movsl
push
add
insb
xor
sbb
mov
mul
lret
mov
das
insb
in
jne
sti
mov
dec
jp
lcall
fcmovne
xor
into
adc
aad
add
shll
mov
jecxz
inc
and
mov
sahf
es
dec
mov
pop
cmp
aad
cmp
jns
ror
push
or
and
test
mov
add
stc
sarb
js
aam
inc
mov
sub
jno
clc
leave
pop
fisttpll
clc
xchg
xchg
fucom
ljmp
mov
mov
push
inc
fsts
dec
xor
sysexit
inc
out
push
adc
cltd
bound
test
mov
mov
xchg
pop
das
dec
xor
test
clc
jle
pusha
xor
sarl
adc
stos
in
xchg
push
in
xchg
add
and
imul
mov
rcrl
daa
sub
adc
stc
inc
out
pop
add
jnp
cmp
in
jmp
aad
or
pop
fwait
jne
pop
dec
imul
lods
out
test
fwait
bound
mov
jns
jns
in
push
ds
xchg
cmpsl
in
test
sub
lcall
jp
jp
mov
jp
mov
lret
jle
rorb
pusha
or
mov
call
ljmp
mov
push
adc
mov
cmpb
subl
imul
jns
insb
popa
imull
dec
cli
ja
fs
adc
iret
in
sub
fwait
ret
dec
pop
adc
inc
jg
cltd
jae
cltd
addb
xor
sub
ja
xor
sbb
jb
insl
imul
dec
fisubrs
xchg
rol
inc
mov
mov
aam
inc
leave
push
int3
hlt
cltd
and
mov
jge
lret
shll
push
or
rcrb
add
and
push
jle
pop
popa
adc
adc
orl
sarb
pop
cmp
aas
arpl
push
mov
cmpsb
negl
in
aas
lret
fcmovne
mov
xchg
cmp
clc
jl
add
dec
lods
xchg
ds
xorb
rorl
aam
cmpsl
xchg
xchg
test
lret
jecxz
inc
repnz
pop
pusha
mov
ficoml
sub
sti
push
mov
clc
sub
add
cmp
roll
xor
shlb
scas
imul
decb
out
xor
ret
fidivrs
pop
mov
dec
inc
push
in
rcr
cld
mov
sahf
mov
or
scas
xor
mov
add
mov
test
mov
inc
fldenv
mov
fs
push
cmp
loope
and
cltd
rolb
jle
shrl
xchg
sbb
cld
pop
cmc
data16
and
cmp
loopne
sbb
loop
aad
stc
dec
ja
fs
and
mov
push
inc
lods
sbb
lret
mov
mov
jns
mov
fnstcw
cmp
mov
repnz
gs
pop
pop
loopne
xchg
pop
js
inc
adc
pop
adc
pushf
jae
ss
inc
xchg
push
rcrb
loope
jbe
sbb
mov
leave
imull
cmpsb
gs
in
push
outsl
xor
cmp
into
incl
aad
dec
mov
dec
fdivrl
inc
inc
mov
xchg
les
add
lea
repz
lahf
hlt
cltd
pop
mov
iret
adc
cmp
pushf
jp
jmp
je
pop
incl
nop
inc
push
popa
mov
inc
mov
lcall
inc
insl
jecxz
mov
imulb
das
sub
loopne
cwtl
xor
les
xor
jo
dec
add
mov
or
mov
insb
lock
mov
in
jecxz
mov
dec
int
shll
lret
ds
adc
cmpsl
aaa
adc
mov
lods
fdiv
cld
movsb
xchg
lret
jge
leave
mov
cmpsl
into
and
pop
and
call
sub
nop
aam
cltd
mov
push
mov
outsl
and
iret
jnp
xchg
dec
sub
add
push
mov
mov
mov
fsts
and
mov
xchg
adc
push
clc
push
test
inc
mov
fwait
jbe
xor
jne
cwtl
ss
test
insl
xchg
xchg
sti
dec
sbb
ja
pop
shlb
fs
shll
leave
push
mov
ja
mov
mov
cmp
outsb
decl
pop
push
repz
or
out
cmp
sbb
mov
dec
or
cs
dec
fmull
inc
divl
adc
dec
pop
and
mov
vpxor
inc
fidivrs
push
ftst
rorb
xchg
out
jmp
jns
xor
lea
or
mov
clc
mov
ret
dec
mov
sbb
add
ss
lods
cs
cmpsl
ja
filds
dec
mov
jmp
sbbl
dec
push
jmp
pop
lahf
xchg
mov
mov
icebp
xchg
and
fwait
xchg
insb
int3
pop
in
xchg
std
mov
push
stos
fwait
in
adc
push
iret
mov
jg
inc
sahf
xchg
inc
mov
lock
and
pop
insb
or
cld
dec
in
pop
sti
push
xchg
test
sbb
adc
scas
out
inc
ficoms
mov
jno
inc
jp
adc
fs
int3
mov
pop
arpl
jbe,pn
dec
jnp
stos
mov
sbb
loop
or
insb
xor
std
ror
inc
jge
pop
nop
outsl
xor
xor
fidivs
andb
mov
mov
push
fisubl
in
fsubs
enter
daa
aaa
add
cmp
lcall
cmp
and
xor
push
fwait
movsl
sub
and
pushf
lahf
das
adc
push
jp
or
push
xchg
cmp
pop
nop
sbb
or
pop
and
insl
mov
imul
loope
icebp
popf
sub
pop
mov
sahf
xchg
fldcw
es
adc
adc
addl
mov
add
outsl
sbb
insb
addr16
push
xor
mov
mov
mov
lcall
cwtl
fsubl
xchg
add
jae
or
leave
xchg
data16
loope
mov
mov
mov
nop
mov
cs
fwait
imul
cmp
pushf
xlat
daa
negl
in
push
mov
inc
iret
test
sbb
sbb
cmc
sub
cmp
loop
add
stc
add
fs
mov
mov
lods
add
mov
out
add
out
bound
cmp
sahf
je
jno
outsb
adc
stos
loopne
lods
loopne
xchg
in
pop
adc
push
add
mov
add
cwtl
push
xchg
sub
imul
xlat
pop
pop
xchg
sub
sub
cmpl
fcmovbe
into
add
push
into
popa
inc
push
jb
fldenv
mov
repz
repnz
vpsllw
mov
jecxz
pop
cmp
mov
and
fsubl
mov
adc
jecxz
jl
push
mov
dec
or
je
inc
jecxz
and
imulb
jge
inc
cwtl
jmp
jg
push
push
mov
dec
aaa
in
int
daa
out
mov
cmp
mov
mov
lock
jge
pop
outsb
mov
push
xchg
inc
and
dec
mov
es
insb
insl
sbb
dec
mov
push
cmpsl
ss
xchg
mov
cmpl
cld
iret
shrl
mov
scas
dec
imul
jecxz
cmp
aas
fsubrs
ret
dec
xchg
fstpl
add
xchg
mov
jecxz
js
and
arpl
dec
lods
cmp
xor
sbb
xchg
sarb
inc
pop
psllq
or
jnp
stc
cltd
rorb
jb
mov
les
xchg
push
dec
call
dec
test
jbe
xchg
lahf
sbb
mov
pop
jge
jbe
ret
push
sub
dec
add
push
in
cmc
ljmp
fistps
or
dec
pop
xor
add
mov
jle
mov
jp
jno
mov
lock
mov
fwait
shll
and
push
mov
adc
mov
cmp
out
and
inc
or
pop
in
pop
das
xchg
xor
xor
sub
nop
nop
sbb
rclb
fldcw
ret
sti
fidivrs
imul
es
xchg
js
xchg
jmp
dec
faddl
test
push
pcmpeqw
popf
test
mov
clc
fbstp
cmc
sub
insb
aaa
xchg
xor
scas
adc
lcall
ljmp
sbb
fwait
or
pop
jae
leave
mov
mov
ret
cmp
inc
fisubrs
sbb
enter
sahf
cmp
fdivp
sub
and
mov
jp
inc
and
das
es
jbe
pop
pop
jge
jnp
sbb
sbb
dec
ret
loope
in
mov
test
sub
jns
mov
iret
dec
xor
cmp
out
scas
jle
mov
cmp
mov
push
sub
ja
or
inc
adc
ss
lahf
jno
mov
cmc
dec
movsb
scas
inc
ds
nop
cmp
and
pop
std
lahf
dec
pop
loop
dec
popa
mov
popa
cmp
inc
adc
sbb
in
js
aas
pop
test
or
ds
loope
add
jb
mov
dec
sub
outsb
dec
xor
adc
in
shll
and
addb
add
mov
outsb
push
ss
int
adc
mov
sahf
les
and
push
xchg
lsl
push
jl
sub
mov
test
adc
and
sarb
sub
mov
cwtl
dec
mov
mov
mov
insl
std
and
fs
fwait
loope
fcoms
pop
inc
adc
dec
inc
xlat
rcr
xor
mov
into
mov
adc
xor
mov
clc
loop
fs
mov
mov
pop
enter
cmp
or
loop
cli
and
cmp
jnp
or
sbb
and
loopne
in
pop
mov
sbb
bound
add
adc
sbb
xchg
lock
sbb
push
sti
jnp
xchg
leave
fwait
sub
icebp
mov
sti
cwtl
lahf
mov
lds
aad
push
mov
dec
lcall
fstps
xchg
je
mov
push
push
arpl
xor
pusha
popf
push
iret
pop
lock
sbb
or
pop
inc
mov
inc
cmp
cli
inc
mov
lea
cmpb
dec
jg
stos
je
lcall
mov
cld
std
and
lret
cwtl
cmpsb
hlt
push
mov
and
sbbl
dec
fistl
arpl
or
das
outsb
jns
mov
or
and
sbb
rcl
dec
es
testl
mov
pop
xchg
cld
cli
jecxz
lret
pop
or
mov
mov
out
mov
pop
fs
shlb
jle
aam
inc
inc
ret
xlat
sub
pop
jecxz
sarl
inc
and
ljmp
mov
mov
jge
pop
xchg
pop
sub
fisubrl
rsqrtps
lret
inc
aam
jge
push
mov
xor
aaa
pop
dec
push
es
adc
xchg
push
xchg
sbb
rorb
mov
std
lock
mov
lea
into
insl
aaa
add
jb
mov
dec
hlt
scas
xor
add
xor
insl
mov
mov
out
mov
xor
xor
inc
and
xor
dec
adc
xorb
xlat
shll
or
xchg
push
sub
out
pop
xchg
test
das
sub
mov
addr16
fs
cmp
mov
mov
inc
mov
xor
in
mov
xchg
filds
pop
xchg
dec
ret
push
jmp
sbb
sbbl
adc
je
fcoml
aam
stos
push
dec
loop
mov
mov
push
cmp
cwtl
adc
into
xor
repnz
mov
inc
mov
or
repnz
cmp
xchg
xor
subb
ret
ficoms
ss
mov
int
in
mov
movsb
aam
xchg
mov
jbe
loop
jge
sub
aaa
pop
sub
or
ret
sub
popf
pop
out
outsl
ljmp
mov
jo
mov
andl
fs
std
push
js
or
hlt
popf
cmpsl
enter
daa
xor
xchg
int3
jno
push
fwait
jl
cld
xor
push
stos
ds
iret
movsl
cmp
or
movsb
in
lahf
insl
lods
xchg
push
and
je
sub
cmc
inc
lahf
mov
xor
dec
dec
js
movsl
lds
out
or
loope
xor
sub
mov
cmp
test
outsb
scas
sub
rol
add
popl
bound
add
sub
xor
inc
mov
cmp
int
xchg
sub
pop
mov
push
jmp
mov
sub
data16
call
mov
mov
mov
aas
lret
add
ss
push
cmp
fcoms
jne
not
lds
shll
mov
mov
or
xor
cmc
mov
push
lahf
outsl
mov
sub
and
addr16
jno
jo
lods
fmuls
adc
pop
lods
into
ficomps
out
dec
dec
cli
push
mov
js
mov
xor
push
pop
sbb
loopne
xor
aad
adc
push
imul
adc
xchg
mov
sub
xchg
xchg
lcall
mov
push
add
inc
sub
aad
popl
nop
push
je
dec
stc
jp
inc
jl
sahf
fnop
lret
movsl
outsb
dec
repz
filds
lea
xchg
jno
sbb
iret
pop
mov
and
pushf
enter
add
insl
pop
call
sahf
in
inc
cmpsb
xchg
push
and
jb
rcrl
dec
divb
mov
sbb
push
div
adc
popa
mov
mov
lret
adc
mulb
dec
or
stos
hlt
mov
inc
dec
add
dec
xor
cmpsb
outsl
jmp
and
inc
adc
pop
fcomps
insl
call
cmp
ja
roll
cld
and
xchg
enter
loopne
mov
popl
xor
fisubrs
sub
xchg
sub
dec
xor
leave
adc
call
rolb
xchg
push
and
ljmp
xchg
cmp
out
loopne
xchg
xchg
dec
cmp
les
mov
push
add
loope
test
loope
xchg
aam
dec
int
cmpsl
test
inc
xchg
xchg
sbb
stc
jp
rcrl
cli
push
jno
jb
inc
movl
call
adc
hlt
aam
push
sub
mov
in
out
xchg
push
push
pop
lock
imul
and
or
aaa
clc
fwait
xor
dec
cmc
cmp
shlb
xchg
cmp
cmp
jns
in
in
add
xchg
shll
add
sub
xchg
jp
mov
and
sub
jle
iret
sub
pop
xlat
xor
mov
call
dec
cmp
xchg
in
push
subl
add
xchg
push
push
popf
shlb
push
push
jbe
jno
fstpt
insb
or
jp
scas
fsts
push
push
xorb
mov
iret
test
ret
inc
pop
in
addl
lds
xchg
inc
fwait
add
inc
leave
lcall
cwtl
add
cld
ffreep
xchg
mov
imul
cmp
cmpsl
lds
loopne
shlb
push
repnz
cmpsb
leave
xor
hlt
lds
arpl
fdivrs
mov
dec
aaa
adc
sarb
add
adc
sbb
add
xor
out
pop
dec
scas
cmp
mov
jo
ljmp
aam
push
adc
std
in
fistl
enter
daa
xor
test
pop
and
jl
dec
xchg
mov
jg
aas
push
lds
aas
sub
mov
repz
repz
inc
test
neg
out
inc
cs
out
sub
push
mov
stc
push
test
pop
sub
into
cmp
pop
iret
adc
mov
jmp
subb
popa
add
add
xor
adc
push
cmp
push
int
fmull
sub
mov
lcall
sbb
mov
sbb
inc
test
mov
sbbb
jp
cmp
adc
scas
outsl
push
mov
call
outsb
xchg
cmp
int
sbb
xchg
iret
mov
roll
sbb
sahf
pop
into
data16
cmc
orb
xor
das
inc
loop
ret
push
stc
sub
sbb
xchg
sti
jp
inc
icebp
out
mov
mov
out
xor
cli
xchg
xor
sbb
out
dec
or
add
popa
jmp
loopne
xchg
sti
pop
hlt
sbb
adc
filds
imul
test
xchg
jbe
mov
int
fcmovnbe
adc
mov
mov
ret
sti
idivb
mov
aad
insb
mov
stc
cmp
cwtl
inc
pop
in
flds
ffree
mov
stc
repz
shufps
cli
lods
cmp
sub
fwait
push
pop
push
scas
pusha
adc
or
pushf
jae
sbb
rep
dec
pop
mov
inc
dec
cli
icebp
inc
shll
rcr
jb
sub
addr16
aas
and
sub
push
divb
inc
ss
jb
mov
sbb
xchg
mov
divb
orl
mov
mov
xchg
mov
cmp
lock
hlt
sbb
sub
xchg
mov
jbe
mov
shrl
stos
lds
insl
iret
push
xchg
cmpsl
xor
mov
hlt
insb
xor
or
cld
push
test
lret
cmp
scas
mov
ret
push
jl
mov
adc
test
aam
cmp
ret
cmc
adc
fisttpll
sbb
clc
mov
jge
ljmp
adc
mov
inc
push
pop
xchg
xchg
mov
push
nop
repz
adc
add
jbe
xchg
mov
cmp
cld
cmp
imul
push
sbb
vpackssdw
jle
loope
pop
pop
push
adc
sub
test
cmp
fwait
iret
xor
jl
or
mov
sahf
cmp
mov
daa
adc
mov
stos
scas
lcall
aam
inc
push
xchg
dec
or
adc
fadd
aas
jne
or
or
add
fwait
pushf
jns
sbb
cld
dec
adcl
push
sub
sbbl
mov
dec
adc
out
jle
lock
pop
les
stos
jl
orl
jmp
scas
xchg
cmp
pop
xchg
ljmp
lods
scas
push
mov
shrl
mov
insb
js
movsb
jnp
sub
scas
cmp
rcll
push
adc
sbb
pop
xchg
pop
and
inc
mov
adc
push
cmovbe
mov
call
aad
fisubrl
mov
imul
in
jne
in
faddp
into
push
es
jae
push
leave
test
add
adc
inc
jbe
dec
sarb
xor
sbb
dec
aaa
test
or
call
repnz
in
rolb
jno
pop
xor
dec
adc
and
inc
out
ror
inc
movsb
mov
les
xchg
fs
daa
xor
jnp
mov
jno
hlt
pushf
jl
jo
dec
icebp
in
xor
movsl
inc
jo
and
das
fstpl
sbb
test
ret
inc
mov
inc
cmp
js
cs
pop
fdivrl
loope
add
inc
cmp
hlt
outsb
jne
xchg
jge
dec
aas
fists
mov
pushl
sbb
dec
xor
popa
ror
addr16
adc
sbb
mov
push
xchg
xor
push
pushf
adc
xchg
push
sahf
in
add
sbb
xor
daa
ret
mov
adcl
ret
and
xlat
popf
jo
leave
cmpsb
inc
cmp
mov
notl
lret
pop
rcrl
pushf
sbb
fmulp
dec
or
xor
mov
outsl
jae
inc
loop
shll
ret
adc
dec
data16
cli
subl
pop
and
mov
add
sub
pushf
and
push
push
pop
pop
adc
xor
sbb
adc
push
adc
add
push
xchg
cmp
mov
or
xlat
push
clc
sub
loop
mov
sub
mov
aad
lods
aas
nop
aam
and
inc
mov
popf
xchg
les
ljmp
popa
pop
cmp
movsl
call
dec
pop
or
pop
adc
adc
dec
pop
cs
jp
fsubrl
pop
jbe
jb
mov
and
and
cmp
mov
sbb
mov
movsl
mov
andl
push
fninit
jle
mov
fnstenv
divl
mov
sub
mov
sarl
push
fwait
insl
mov
and
cmpsl
xor
mov
fbstp
cld
cld
jnp
mov
mov
lret
mov
mov
mov
pushf
aam
aaa
lcall
add
clc
imul
mov
test
inc
mov
popa
mov
fs
cmpsb
xor
push
imul
outsl
push
cmp
jmp
cltd
lods
add
into
mov
mov
inc
dec
gs
fwait
daa
push
test
fs
sbb
pop
imul
add
pop
sub
stos
jle
cltd
push
mov
popl
ret
gs
jmp
jne
xor
or
xor
mov
jg
push
out
jecxz
insb
pop
data16
adc
out
ljmp
fwait
nop
mov
mov
aam
mov
fdivs
bound
icebp
pop
in
icebp
loope
jno
mov
sub
jl
jge
xchg
push
mov
xor
inc
sbb
imul
pusha
scas
test
fbld
outsl
fsubr
cmp
dec
orl
push
sbb
pop
mov
hlt
enter
sbb
pushf
insb
jecxz
cmp
std
mov
and
adc
movsl
iret
jmpw
sub
pop
pop
clc
push
inc
shll
inc
mov
xor
mov
jmp
bound
mov
je
jg
pop
or
fidivrs
jge
adc
push
shr
mov
push
adc
hlt
pop
pop
and
pop
or
sub
jge
fstpl
xor
outsb
or
movsb
add
fsub
stos
pop
jnp
xor
push
add
jg
jne
movsl
fcompl
and
shll
push
gs
cmpsb
or
in
test
adc
xor
fidivrl
rcll
lret
stc
idivb
inc
dec
pusha
loopne
ds
std
movsl
dec
cs
jne
mov
lret
push
cltd
push
jo
aam
inc
dec
loopne
jmp
mov
jmp
and
movsb
std
dec
push
in
loope
movsb
inc
sub
mov
outsb
fcomp
mov
rcrb
rolb
cwtl
sbb
imul
test
int
xor
sub
test
inc
lcall
aam
decb
sub
pop
sahf
mov
test
jecxz
adcb
jg
addl
cmp
mov
mov
and
xchg
imul
movsl
fnstcw
inc
aaa
pop
notl
outsl
mov
shll
pop
sbb
orb
pop
add
push
mov
loop
repnz
stc
xchg
fcomi
fs
ret
cltd
cmp
popa
lods
andl
out
xchg
sar
in
add
xor
cmp
inc
sub
outsl
mov
loopne
or
adc
imul
add
lods
call
cmp
adc
sub
cmp
cwtl
mov
sti
push
xchg
cs
add
nop
scas
or
cmp
add
jne
mov
idivl
lret
and
mov
and
cs
cltd
inc
movsb
pop
mov
dec
ficomps
pop
bound
push
out
pop
inc
divl
aas
adc
dec
pop
insb
mov
add
jecxz
gs
std
rclb
xchg
arpl
mov
aas
add
aad
adc
test
loop
pop
lock
mov
je
mov
in
jnp
nop
stos
stc
rorl
lret
mov
insl
popf
push
dec
cwtl
push
mov
xor
mov
mov
mov
lret
pop
ret
jns
lods
in
and
ret
pop
fcmovb
and
add
sub
jle
aam
xchg
push
dec
lret
pop
dec
fwait
clc
xor
xchg
ret
mov
ja
popa
inc
lods
push
mull
mov
or
pop
xchg
and
test
inc
int
bswap
xor
mov
test
mov
dec
add
arpl
fsts
rcrl
mov
mov
insl
mov
push
pop
loopne
add
fidivs
dec
xor
call
popf
xor
pop
ret
mov
lods
mov
mov
ss
imul
inc
sbb
iret
fwait
mov
mov
jne
inc
mov
mov
out
rcl
bound
ret
outsb
loop
adc
mov
rcrb
sub
ja
pop
addr16
sbb
jp
adc
outsl
mov
shrl
clc
in
xchg
dec
mov
xchg
xchg
xchg
adc
das
lods
lret
pop
ds
pop
push
fsubrp
hlt
popf
inc
rclb
mov
xor
mov
xor
mov
insb
dec
sbb
lods
fldt
scas
add
in
sbb
dec
xor
ds
mov
inc
int3
and
jae
out
inc
movsb
idivl
mov
push
pop
ficoml
repz
sbb
add
fisubs
mov
lds
and
jle
sbb
sti
hlt
cmpsb
in
arpl
ret
fidivrs
jge
int3
cmp
lock
test
add
test
stos
fmulp
add
fisubrl
pop
stos
mov
push
xor
add
pop
and
inc
stc
cmp
mov
in
js
mov
in
nop
enter
daa
xor
xchg
cmp
call
jno
and
cmp
or
xchg
scas
ds
sub
enter
sbb
insb
in
mov
pop
dec
xchg
inc
fcmovnbe
xchg
scas
fisubrl
js
push
test
push
test
mov
insl
cmp
stos
test
shlb
nop
jbe
std
test
in
sbb
outsb
add
mov
push
inc
xor
sub
fdivrs
lcall
add
test
jne
sahf
sub
adc
popf
adc
subb
jg
jecxz
mov
and
mov
fdivs
iret
dec
ss
pop
sarb
lahf
shl
rolb
lret
sub
int3
pusha
mov
cmp
paddsb
cmc
xlat
stc
out
xor
jnp
loop
pop
dec
stc
dec
stos
or
cmp
call
imul
out
or
xor
cmp
cmp
cmp
out
or
mov
loopne
sub
pop
push
jno
adc
pop
pop
adc
sbb
add
xor
sbb
jle
cmp
rolb
in
out
pop
cmp
add
sbb
add
popf
cs
xchg
aad
pop
scas
nop
mov
repz
jne
dec
inc
enter
lods
ljmp
shll
mov
cltd
push
stc
and
jo
call
sbb
pop
outsl
xor
sti
pushf
je
inc
jmp
pop
jg
je
pop
inc
fbld
adc
bnd
ja
dec
shl
xorl
jecxz
jno
idiv
xchg
pop
std
add
dec
jno
mov
mov
mov
pusha
dec
mov
arpl
mov
adc
lods
jno
das
leave
cmp
or
sbb
repnz
fldenv
dec
addb
rcll
mov
adc
lea
lret
xchg
mov
fsubs
mov
stc
mov
dec
sub
pop
cmp
add
rcr
test
mov
add
andb
mov
mov
insb
int
xchg
push
call
pop
xor
sub
sub
cltd
sbb
sbb
inc
nop
mov
test
sarl
pop
cld
js
jl
cmp
jo
jge
jg
mov
std
fisubs
add
stc
sbb
fs
xor
in
decb
rolb
jg
mov
cld
data16
xor
and
inc
dec
orl
fwait
in
jg
sbbl
jp
mov
dec
jns
pusha
in
xor
out
outsb
mov
fsubp
fisttpll
jb
inc
addr16
push
jp,pn
inc
ja
jecxz
mov
mov
call
in
xor
in
and
loopne
insb
xchg
push
sbb
es
xchg
adc
mov
push
mov
testb
pusha
push
jb
cmp
cmpsl
dec
imul
jns
insb
mov
fxch
scas
gs
push
pushf
push
test
clc
sbb
mov
pop
enter
xlat
negl
add
mov
jecxz
or
repz
inc
fsubs
hlt
xchg
out
sbb
movsl
sub
or
faddp
inc
clc
lds
outsb
rcrb
sub
insb
and
lods
leave
or
pop
adc
jbe
dec
in
jge
out
pop
sbb
or
sbb
scas
movsl
ret
push
jbe
sbb
adc
pop
lods
dec
scas
mov
push
outsb
cmp
shrb
add
cmpsb
psllq
in
ja
xchg
enter
daa
xor
xchg
cmp
pop
cltd
jno
outsl
lea
lods
dec
adc
bound
xchg
stos
mov
lahf
or
aas
movsb
stc
test
and
dec
inc
push
add
jno
mov
js
push
mov
and
jle
fs
and
dec
xchg
sub
incl
outsb
sahf
insb
jbe
push
in
rorb
and
adc
sbb
mov
xor
lret
pushf
sbb
pop
cwtl
add
push
pushf
fwait
jbe
push
xor
sub
sahf
into
cmp
xchg
jg
inc
jno
loope
jbe
mov
inc
and
or
cmp
mov
push
fwait
lret
mov
arpl
insb
mov
mov
add
sahf
mov
xchg
outsl
adc
loop
repnz
stc
add
iret
arpl
adc
adc
push
iret
mov
mov
jge
out
add
cli
push
pop
jbe
dec
cwtl
sub
or
dec
decb
xchg
movlhps
mov
and
xchg
push
adc
imul
jp
add
bound
mov
lret
mov
mov
outsb
adc
cs
mov
aad
leave
jno
gs
lret
push
mov
fsubl
jge
sub
mov
xchg
into
add
push
mov
inc
pop
and
adc
enter
and
inc
push
mov
lret
cmp
jp
xchg
mov
or
jle
sarl
cltd
out
push
xchg
cmp
mov
andnps
movsb
jp
push
mov
inc
arpl
or
das
test
adc
test
mov
cmpsb
jmp
pop
es
subl
sbb
mov
das
jge
mov
fs
cld
cld
mov
lret
cmc
mov
mov
fistps
ret
pop
sbb
mov
aam
and
ret
xor
push
sarl
push
clc
cmpsl
in
es
inc
adc
ljmp
shrb
adc
iret
mov
push
cld
notb
add
xchg
push
cltd
push
mov
test
push
push
xchg
pop
dec
rolb
sbb
xlat
out
sbb
ror
mov
jmp
dec
pop
add
add
adc
ret
incl
sbb
or
push
xor
enter
mov
mov
xchg
push
mov
icebp
pushf
in
je
aas
inc
scas
scas
insb
or
rolb
fs
jne
adcb
aas
mov
andb
outsb
jns
push
inc
in
shll
pop
scas
lods
out
lea
insl
test
jp
daa
xchg
mov
adc
mov
std
jp
addb
sbb
or
cmp
xlat
gs
fcmovne
je
cmc
fstl
sbb
mov
mov
pop
stos
sbb
and
mov
add
fwait
lds
jecxz
xchg
roll
iret
subl
ret
arpl
ja
inc
loop
lods
jae
int
inc
stos
fildll
push
push
out
rcr
jnp
jle
cmp
pop
stc
imul
add
push
or
cmp
or
mov
jecxz
cmp
jb
out
bound
jbe
xchg
loop
mov
sbb
sbbl
add
inc
push
pop
or
cmp
std
stos
dec
xor
mov
bound
dec
xadd
scas
scas
adc
push
push
and
repz
pop
dec
xchg
mov
shll
das
jl
cmp
push
jno
loopne
jl
dec
dec
cwtl
ds
push
movsl
rcrb
mov
lahf
daa
fisttpl
push
adc
mov
out
cmp
stc
sbbl
xor
negb
xchg
pop
popa
jns
push
add
cvtps2pd
sub
stc
das
cmp
mov
push
adc
jmp
test
orb
aas
sbb
scas
test
xor
sub
add
add
lods
sub
scas
sti
lcall
popf
fdivr
pop
and
sahf
jno
mov
andb
mov
xchg
ret
mov
lods
mov
pop
out
and
adc
sub
push
fdivs
notl
mov
in
daa
faddp
cli
pop
mov
je
xchg
sbb
repnz
aad
jmp
fildll
xor
loopne
out
push
popf
loop
mov
mov
out
lahf
in
adc
test
lods
cmp
mov
outsl
outsl
out
adcb
pushf
mov
adc
or
aad
sub
shlb
pop
mov
dec
imul
xor
xchg
inc
jmp
sbb
hlt
in
or
sub
stos
andl
add
popa
test
jp
jmp
nop
inc
pop
jno
xor
movsb
inc
out
bound
out
xor
xor
sub
call
push
out
pop
aad
pop
adc
mov
mov
sahf
stos
mov
cmpsl
mov
lahf
jg
dec
adc
aas
fildl
sbb
dec
shr
je
sbb
jecxz
push
cmp
test
cs
mov
cwtl
cwtl
ret
dec
or
mov
sub
popl
pop
fistpl
adc
mov
mov
jle
das
xchg
pop
mov
or
adc
sbb
mov
dec
mov
ds
cmp
cld
daa
xchg
cli
lret
fsubrs
push
add
xchg
popf
sbbl
jo
sarb
adc
div
mov
ret
sar
push
xchg
fists
sarb
jl
addb
ljmp
mov
xchg
and
and
xchg
clc
fdivp
push
xlat
test
jecxz
adc
jne
mov
cmp
lcall
aaa
mov
push
xchg
push
rcrl
leave
daa
pop
aad
subl
mov
les
das
push
and
mov
xchg
in
mov
jle
mov
jbe
repnz
push
sub
add
pusha
repnz
inc
shl
or
mov
push
dec
inc
dec
xlat
data16
mov
out
pop
inc
pop
fstpl
add
mov
test
out
and
lods
cs
or
sbb
push
stc
jp
mov
enter
arpl
aas
loop
in
mov
push
fistps
mov
xchg
adc
pop
xchg
cmpsb
stos
sbb
daa
fucomi
popf
mov
addr16
push
lock
or
lea
and
and
jnp
and
scas
sub
adc
test
and
loop
out
ret
clc
pop
ss
out
in
popf
xchg
jae
daa
addb
mov
dec
jl
inc
mov
adcb
insl
stos
imul
mov
or
aaa
rclb
mov
adc
jmp
arpl
cwtl
inc
jbe
aaa
xchg
loopne
sbb
fwait
aaa
inc
pop
xor
test
outsl
int3
test
scas
push
loopne
or
adc
in
jbe
and
inc
pop
cmp
xor
daa
inc
cmpsb
adc
pusha
sub
xchg
leave
daa
cs
xor
jno
jne
jl
xchg
inc
dec
sbb
out
ds
stos
movsl
imul
mov
inc
inc
inc
push
in
cmc
test
mov
inc
int3
negl
mov
pop
mov
lret
es
sub
and
lds
outsb
fs
jne
pushf
mov
sbb
sbbb
sbb
rolb
sti
xor
push
mov
push
inc
sub
dec
pop
xchg
loopne
lcall
call
sub
cmp
sahf
adc
cmp
mov
sbb
mov
sbb
mov
hlt
mov
cmp
and
aam
sbb
sub
das
push
fdivp
pmaxub
lret
loop
xchg
psubusw
mov
fcomi
sub
iret
xor
xchg
outsl
into
ljmp
jb
and
xor
aad
lock
mulb
mov
cmc
das
out
and
mov
scas
scas
cmp
xor
or
add
gs
out
mov
adc
fistps
or
popf
add
xchg
lods
xchg
or
adc
das
test
xlat
jmp
sub
sub
mov
inc
in
inc
ret
add
adc
cs
mov
dec
sarb
nop
sbb
lret
inc
add
sbb
push
popa
add
fwait
js
push
scas
cli
cs
mov
or
push
xchg
jns
pop
mov
rclb
inc
jle
pushf
jne
xor
negl
pop
lds
inc
arpl
jp
lret
xchg
inc
dec
aaa
pop
icebp
je
or
in
test
pop
std
pop
imul
jle
xorl
icebp
movsb
adcl
pusha
into
div
mov
xlat
bound
mov
mov
mov
rolb
rorl
scas
xlat
mov
decl
xchg
cmpsl
sub
xchg
mov
cld
push
inc
or
cmp
mov
push
pop
xchg
rorb
subl
mov
int3
ret
dec
pop
imul
mov
clc
sbb
je
ljmp
adc
fmull
out
xchg
fisttpl
aas
lods
jne
mov
dec
repz
push
sub
daa
inc
xchg
jnp
sahf
pop
fisubrs
aad
pop
sbb
adc
pop
xorb
stos
sub
out
out
cmp
dec
mov
pop
xor
xor
or
xchg
mov
mov
mov
pop
or
loopne
dec
pop
cwtl
adc
fstl
adc
jle
dec
sub
jne
xchg
jae
cmc
fisubs
bound
push
jns
leave
add
or
xchg
cld
aad
out
sub
or
and
adc
jp
or
mov
dec
gs
insb
pop
jle
mov
mov
mov
xchg
fistpll
dec
psubsw
xchg
mov
jno
pop
adcl
fsts
ljmp
mov
das
push
cmp
sbb
jnp
push
scas
mov
push
jno
jns
mov
ret
adc
mov
movsb
pop
insl
push
clc
inc
clc
outsb
les
lds
mov
xchg
or
lret
inc
push
adc
daa
cs
jmp
sahf
sbb
mov
imul
mov
mov
in
jo
jmp
dec
movsl
loopne
gs
leave
jb
cmp
shlb
arpl
pop
mov
sbb
scas
xor
or
push
add
add
mov
push
ret
xor
cwtl
jo
cld
subb
lods
mov
movsb
add
lods
cmpsb
cwtl
inc
push
in
sub
ljmp
inc
mov
shrb
jl
lods
xchg
dec
mov
jo
lret
pop
jne
jo
sbb
jl
push
lahf
gs
push
mov
imul
inc
pop
inc
or
mov
mov
xor
push
inc
jp
cmp
push
lahf
outsb
push
inc
rcrb
outsl
mov
das
sub
pop
loopne
add
sub
push
push
inc
ds
and
sub
xchg
push
lcall
enter
aam
and
sahf
mov
jo
mov
mov
jg
mov
mov
mov
mov
imul
pop
push
pop
fsubr
or
lret
out
shrl
inc
mov
jae
xchg
jo
into
fwait
and
and
fsubp
mov
dec
xchg
fs
add
and
xor
fnstenv
cwtl
mov
out
or
xor
jno
cmp
xchg
or
add
jae
pop
gs
test
pop
int
in
adc
shl
pop
xchg
adc
xchg
outsl
add
push
xchg
lret
pop
xchg
sbb
push
jns
into
inc
ja
mov
faddp
in
scas
pop
push
sti
mov
jle
aad
imul
dec
icebp
int
inc
adc
inc
push
push
repz
rol
xor
mov
xchg
je
adc
or
adc
out
jmp
pop
in
pop
add
add
push
inc
jle
aas
sbb
jb
pop
push
dec
scas
outsl
xor
push
jecxz
dec
xchg
or
std
add
mov
xchg
xchg
mov
repnz
pop
ljmp
das
xor
sbb
pop
das
inc
mov
mov
ja
dec
and
ds
xchg
stos
pop
es
inc
xor
dec
jg
insl
cmpsl
sub
cmp
jmp
lret
dec
lret
inc
gs
mov
hlt
sahf
dec
mov
jne
imul
in
jo
imul
dec
push
sbb
xchg
frstor
push
or
pop
and
ljmp
inc
lods
push
lock
clc
jb
xchg
xchg
lea
dec
and
test
push
inc
cltd
not
fs
cli
clc
mov
clc
xor
add
mov
aad
dec
mov
inc
pop
sub
stos
sbb
and
mov
add
gs
jmp
loop
xor
cmp
in
mov
cld
hlt
mov
enter
cs
test
inc
je
cs
sbbb
cmp
cmpsb
mov
sbb
out
sbb
cwtl
bound
add
mov
xchg
dec
iret
ljmp
or
mov
jp
or
mov
and
mov
incb
cmc
in
iret
xor
fistps
xchg
mov
dec
jmp
cmp
jmp
mov
mov
js
xchg
iret
stos
jae
push
and
pop
ljmp
jnp,pn
js
scas
icebp
push
sub
fisttpl
fs
xor
popf
cmp
inc
add
inc
mov
out
jg
jne
inc
push
xor
ficoml
pop
sbb
test
hlt
cmp
mov
in
rorb
inc
repnz
push
inc
hlt
sbb
shll
jge
popa
push
aaa
mov
xchg
xchg
jp
or
xchg
xlat
pop
push
cmpsb
call
cmpsb
jo
ds
xor
or
cmp
dec
cmp
push
aas
clc
fbld
adc
cmp
jl
adc
sub
cmp
repz
jno
or
cli
mov
frstor
pop
sub
arpl
mov
push
dec
xchg
das
inc
cmpsb
mov
jge
jns
xor
outsl
js
inc
arpl
push
cltd
mov
jne
loope
push
mov
cmp
sub
outsb
sub
cmp
sub
push
sarb
mov
inc
into
mov
xchg
out
data16
lods
push
push
scas
dec
int
xchg
lahf
sub
push
pop
xchg
iret
adc
push
clc
enter
jecxz
sub
cmp
sahf
pop
movsb
mov
repnz
xor
shlb
add
shl
int
inc
repz
ss
push
imul
lea
xor
mov
stc
lds
shl
into
jle
xchg
cmc
mov
add
loop
pusha
xor
loopne
outsl
fs
jno
adc
andb
jo
in
das
sub
fstpt
cs
pop
mov
xor
stos
add
ss
xchg
mov
cltd
jae
loopne
addr16
pop
in
dec
adc
stos
das
adc
dec
out
ljmp
sbb
movsl
outsl
loope
or
in
mov
sbb
hlt
sti
outsb
mov
aad
notw
push
dec
mov
fnstcw
out
rep
jno
xor
cmp
call
xchg
sub
out
jnp
adc
outsb
mov
lret
dec
cmc
jmp
pop
mov
out
inc
cltd
pop
mov
mov
push
xor
je
icebp
jle
mov
cs
std
stos
shrb
popf
faddl
addl
out
fldt
out
xchg
cmp
or
je
dec
das
and
xor
cmp
and
push
cmp
out
push
fstl
pop
sarb
dec
jp
mov
sub
aas
mov
rol
cld
test
pop
lret
mov
xor
sti
imul
inc
gs
loop
sub
xor
bnd
insl
call
pop
fldl
and
xchg
push
stos
xchg
cmp
xor
popa
pusha
jl
lods
aad
push
mov
pop
incb
int
scas
push
push
ljmp
sub
push
sub
xchg
cmpsb
dec
insb
inc
xor
sarl
xchg
shll
pop
xor
subb
and
add
cmpb
jg
ljmp
mov
notb
test
je
cs
xorl
dec
inc
and
inc
or
rorb
xchg
fsubrs
lock
sahf
xor
stos
insl
int3
out
sti
int
bound
into
lcall
or
out
xchg
dec
sub
pop
in
fisubs
sub
jp
mov
std
mov
insl
arpl
test
fs
jo
pusha
jmp
adc
jnp
fcoml
stc
fidivrl
xchg
pop
inc
jbe
xor
ds
xor
xchg
mov
lods
mov
jnp
inc
sub
insb
shrb
sub
push
popl
adc
cltd
icebp
iret
decl
cmpps
testl
cwtl
inc
mov
mov
push
push
dec
sbb
inc
inc
inc
xchg
cltd
xorl
imul
stos
fdivp
cmp
shlb
test
or
jg
push
shl
jbe
add
jge
clc
cld
sbb
mov
or
mov
adc
mov
push
mov
addr16
xchg
scas
adc
insb
cmp
in
push
mov
iret
cmpsb
sahf
imul
enter
daa
sub
mov
jno
or
jl
bound
adc
adc
jle
jl
mov
push
lahf
mov
inc
xchg
test
sbb
aad
xor
jne
pop
pop
jnp
js
jo
pop
pop
push
aad
mov
out
inc
sub
daa
jp
shrb
outsb
lea
adc
push
cmp
aaa
push
adcb
sbb
mov
dec
xor
jno
push
push
mov
int
lock
sub
cltd
pop
adc
cld
push
dec
outsb
add
stos
popa
inc
sub
loop
sahf
std
loopne
test
pop
dec
orb
sub
fdivp
jae
sbb
push
and
dec
ss
push
cmp
pusha
cmp
testl
rcll
mov
pop
inc
sbb
and
cmc
sbbl
outsl
imul
xchg
stc
xchg
imulb
sbb
call
ret
data16
pop
mov
call
out
mov
inc
xor
movsb
sbb
movsl
cmp
mov
cmp
mov
xchg
adc
das
imul
dec
mov
jns
mov
sbb
loopne
call
dec
jp
sub
and
test
cltd
sti
sbb
mov
nop
lods
fidivrl
scas
lret
cmp
cmpsl
les
or
repz
fs
aaa
stos
loop
cltd
add
jge
inc
adc
pop
mov
popf
push
pushf
jbe
jb
pop
jae
pop
inc
cmp
or
mov
aas
push
lret
jne
xor
xchg
push
loop
jecxz
dec
sub
xchg
jne
std
push
fldenv
cwtl
scas
out
mov
stos
dec
mov
enter
push
dec
cmp
fistpl
xlat
mov
xchg
mov
addr16
iret
xchg
fs
mov
pop
lds
inc
jns
pusha
fstpt
out
jle
dec
jne
shlb
sub
xchg
fld
cld
rcll
lret
and
sti
mov
add
dec
pop
mov
jp
mov
ret
aam
fucomp
ret
cld
adc
push
mov
cli
mov
into
jle
xchg
jl
xchg
ljmp
jmp
mov
mov
jo
push
inc
cmp
lar
mov
test
xchg
mov
pop
inc
cltd
dec
rcll
mov
sbb
into
dec
pop
xorl
push
iret
fimull
add
sarb
or
fwait
push
mov
orb
sbb
cmc
pop
ds
test
and
dec
xor
inc
mov
sub
roll
mov
shll
out
fisubrl
xchg
jns
adc
xchg
and
adc
push
clc
icebp
mov
jp
and
mov
xor
mov
faddl
jle
incb
mov
insl
outsb
fistps
cmp
lock
xchg
shlb
add
push
push
xor
popf
pop
arpl
push
in
pop
add
pop
rcl
pop
and
insb
cmp
and
fists
scas
mov
pop
push
inc
sahf
lds
sbb
pop
mov
ret
adc
adc
inc
sbb
fbstp
rolb
adc
push
shrb
loopne
cli
fs
xchg
lock
shrb
ficoms
sti
rol
shrl
es
lcall
adc
mov
push
jbe
test
and
bound
aaa
cmp
fmuls
push
popa
pop
add
lret
add
push
insb
sub
jo
call
scas
bnd
and
push
loopne
inc
out
push
movsb
mov
fsubrs
and
inc
enter
daa
sub
cmp
and
xorl
jl
cli
jmp
ds
dec
movsl
test
arpl
dec
loopne
lahf
ret
push
xor
mov
dec
fimuls
push
in
push
inc
in
add
xor
xor
pop
pushf
xchg
pushw
lock
loope
lods
push
sub
inc
arpl
xor
dec
adc
xor
xchg
insl
addl
mull
add
xchg
xorl
jmp
push
pop
fdivrs
int
cs
cli
xchg
jae
xchg
into
insb
lcall
aas
fcoml
and
out
dec
rcrl
dec
inc
pop
subb
fstpt
lock
sarl
mov
clc
mov
std
dec
and
shlb
and
popa
cmp
sbb
push
lret
and
in
inc
mov
or
or
inc
lods
cmc
dec
jae
xor
shl
jb
or
dec
inc
aaa
movsl
testb
bound
mov
aad
out
mov
cli
test
xor
dec
cmp
jno
or
fdivr
fdiv
mov
cmpsl
jge
loopne
movsb
sbbb
pushf
adc
lea
loopne
adc
test
push
xchg
adc
sbbb
stos
test
mov
adc
clc
mov
lock
sti
int3
mov
imul
dec
dec
push
dec
sbb
fldcw
subb
inc
inc
cmp
lea
mov
sbb
xchg
jmp
pop
push
mov
adc
in
jmp
iret
stos
pop
jmp
or
aas
testb
dec
adc
cmp
not
xor
std
clc
lds
cwtl
push
dec
mov
push
mov
mov
jae
decb
pusha
fisttpl
jae
mov
cltd
jmp
sub
int
loop
pop
mov
pushf
jge
and
xchg
test
es
mov
dec
jo
inc
cmpsl
sub
mov
outsb
adc
lret
divb
mov
or
push
mov
sarb
cwtl
rcrb
cmp
sbb
mov
push
fstl
mov
imul
mov
cmp
loopne
out
and
fists
push
push
leave
shufps
add
mov
fbld
mov
add
xchg
pop
dec
cmp
xchg
test
mov
xchg
inc
into
sbb
lret
rcl
test
jecxz
in
cmp
jb
je
adc
xchg
mov
inc
mov
mov
cmp
hlt
add
gs
mov
and
mov
stc
push
jl
imul
inc
cmp
cmc
fwait
imul
sub
xchg
mov
stos
mov
fs
in
insb
mov
out
into
lods
sub
dec
cwtl
push
jp
ds
mov
jae
mov
dec
push
jle
cmpsl
lret
fsubp
pusha
and
jae
mov
insl
push
jmp
popf
cmc
inc
orl
push
divb
jg
test
sub
stos
int3
pop
inc
and
insb
cmpsb
int
jnp
cmp
scas
sbb
lea
lock
mov
jb
pop
dec
ret
or
or
stos
in
inc
mov
or
inc
push
mov
xchg
inc
es
sbb
pop
lahf
imul
jno
cmp
mov
shl
mov
fcompl
jae
mov
mov
dec
out
hlt
daa
arpl
hlt
jbe
jns
jge
ror
sbb
lds
aaa
sti
sbb
aas
test
int3
sbb
pop
and
fmuls
dec
mov
mov
scas
rcrl
and
push
push
cmp
mov
movsb
sub
das
movsb
cmpsb
movsb
pop
pushf
in
enter
insl
outsl
mov
cmp
push
jl
data16
dec
inc
ds
call
add
call
cltd
in
add
aas
test
mov
pop
inc
push
divl
dec
sub
int
js
mov
fistpl
mov
nop
inc
sub
xor
jmp
adc
or
cmc
je
cmpb
sbb
icebp
imul
out
xor
fwait
or
dec
mov
pop
adc
push
std
and
faddl
sub
jl
sahf
inc
sbb
inc
es
or
movl
mov
pop
and
mov
cmp
mov
test
out
roll
sbb
xchg
into
daa
fwait
xchg
cmc
mov
outsl
sub
loop
aad
stc
add
aaa
pusha
adc
mulb
inc
pushf
lods
mov
aas
lock
dec
cmpsl
cli
mov
loope
cmp
adc
or
pop
pop
gs
cwtl
gs
loopne
pop
dec
add
adc
dec
test
jecxz
mov
add
add
mov
pop
cmp
and
lret
sub
mov
in
pop
sti
cmpsb
sti
jnp
adc
aad
mov
nop
bound
push
dec
insl
xlat
iret
inc
pusha
lahf
sbb
sub
repz
mov
addr16
xor
jae
sbb
adc
add
jecxz
adc
sub
out
mov
mov
dec
inc
ljmp
jb
andl
jecxz
popa
lahf
notb
pusha
mov
cwtl
and
aam
mov
sub
dec
adc
push
mov
push
mov
cs
test
mov
push
xchg
clc
and
pushf
mov
shl
and
insl
mov
leave
repnz
sub
mov
icebp
inc
imul
sub
mov
adc
cld
mov
icebp
cmp
sub
aaa
push
aam
mov
sbb
movsl
push
sub
fnstsw
xchg
xchg
cli
jo
ljmp
and
int
out
test
xchg
mov
jle
cli
xchg
add
sub
test
lea
pop
enter
aad
test
scas
jecxz
push
enter
ljmp
xlat
mov
ficomps
adc
add
add
or
lcall
xor
pop
outsb
or
mov
dec
mov
outsb
movsl
mov
mov
jmp
sub
fildl
mov
fwait
gs
rorl
pushf
adc
repz
out
cwtl
jg
bound
arpl
movsb
and
push
pop
xchg
xchg
sbb
push
jb
or
repnz
rorb
fdivrl
xchg
push
in
stos
clc
pusha
mov
add
xchg
add
mov
xchg
push
leave
mov
mov
aaa
cmp
jae
cmp
stos
aas
xor
and
sahf
jnp,pt
push
int3
scas
jge
and
lock
adc
insb
iret
sbb
loop
jmp
mov
icebp
jae
das
inc
mov
xchg
loopne
xor
mov
shlb
fisubl
cld
xchg
sahf
scas
scas
sbb
mov
fnsave
lds
shl
cmpb
and
hlt
dec
ljmp
cmp
mov
adc
sbb
xor
jmp
add
ljmp
push
cwtl
pop
push
xor
xor
xor
and
and
cmp
es
jnp
push
in
scas
jns
enter
daa
sub
jl
mov
out
jl
cmpsb
decl
je
jp,pt
jb
xchg
push
int
and
lahf
add
outsb
test
jnp
xchg
inc
loop
aas
mov
pop
ror
mov
jb
pop
sbb
dec
loope
xchg
jg
dec
sti
push
cmp
int3
dec
outsb
mov
and
out
inc
push
cmp
mov
sbb
jbe
xchg
sarb
xor
rcr
int
push
push
pop
nop
frstor
lcall
and
lods
aad
sub
outsl
rcrl
pop
dec
inc
sbbb
jg
repz
inc
lods
sub
xlat
push
ss
jg
cmp
xchg
push
aaa
testl
cmp
mov
andb
or
xorb
out
outsl
or
jo
cwtl
push
add
mov
lret
adc
dec
pop
lods
mov
mov
cmp
clc
mov
cmp
xchg
repnz
and
in
gs
sub
mov
test
push
xor
adc
pop
in
add
xchg
xchg
lcall
cmp
lods
or
stc
pop
xor
mov
sti
sub
cli
cs
into
lret
inc
inc
nop
cmp
arpl
jae
out
fwait
jo
les
pop
repz
xchg
inc
or
into
rorl
call
mov
pop
adc
stos
pushf
ja
xchg
jmp
shll
pop
das
jnp
inc
sahf
mov
lds
xor
inc
jb
dec
scas
dec
add
je
stos
and
ret
add
inc
dec
push
cwtl
loopne
xor
mov
ja
andl
int3
mov
jns
mov
sub
lock
pop
das
mov
in
out
mov
incb
mov
jmp
jecxz
dec
data16
cmpsl
daa
in
mov
sbb
sbb
push
xor
insl
sub
mov
pop
outsl
add
rclb
scas
rolb
mov
aam
cmpsb
ret
xor
jecxz
mov
xchg
cmp
and
popa
mov
lea
out
out
movsb
xchg
jmp
mov
std
add
sbb
test
testl
dec
or
mov
iret
roll
jbe
sarl
or
cmpsl
stos
ret
xchg
mov
mov
rolb
and
sti
mov
or
jp
xor
mov
xchg
mov
cs
mov
outsl
pop
xorl
sub
lods
mov
lods
inc
or
loopne
fwait
xchg
jns
dec
jl
mov
es
jnp
out
ja
cwtl
mov
adcb
out
fnstenv
sub
inc
xchg
inc
xchg
add
pop
out
call
mov
andl
pusha
push
shll
test
stos
jmp
xor
cmp
insl
adc
int
pop
mov
test
clc
daa
and
inc
xchg
jnp
cmp
loopne
jns
sbb
inc
iret
jnp
mov
cld
repnz
mov
scas
inc
cmp
cmp
inc
ret
or
lods
xchg
jo
dec
jecxz
ficoml
testb
mov
das
fiadds
pop
rclb
iret
mov
push
push
ljmp
add
xorl
rol
sbb
mov
ds
ds
jns
jb
sub
jne
insl
push
add
icebp
or
push
adc
mov
jo
mov
scas
cmp
out
jmp
data16
movsb
inc
cmp
push
lret
cmpsb
stos
and
enter
daa
daa
hlt
inc
cmp
cmp
ljmp
rcll
movsl
lcall
lahf
pop
movsb
popa
push
stos
outsb
test
inc
adc
dec
in
std
pop
imull
in
pop
jae
push
out
adc
mov
and
mov
dec
outsb
sbb
and
shl
mov
rolb
movsl
shll
xor
push
arpl
int
mov
pop
bts
lcall
stos
fcoml
je
mov
pop
push
test
pop
testl
int3
ja
mov
sbbl
in
jns
cmp
dec
add
dec
cmp
lret
pop
shll
mov
lods
mov
into
in
mov
inc
xchg
or
and
in
jae
nop
fs
mov
adc
imul
jo
rorl
push
add
xor
lock
loope
incb
lcall
xchg
xor
adc
incl
adc
scas
call
xchg
pop
andl
int3
xlat
pop
xlat
dec
sbb
sub
mov
xor
fnstenv
aaa
cs
and
ds
dec
dec
sub
call
pop
ffreep
aas
frstor
repz
adcb
and
imul
pop
insl
push
jg
mov
cltd
daa
jmp
jnp
pop
rolb
and
sbb
rcl
jle
orl
cmp
mov
negb
jecxz
cwtl
fwait
mov
pop
push
pop
mov
mov
dec
out
in
pop
leave
ljmp
xchg
lock
jle
jg
lret
mov
shll
shll
jecxz
insb
jge
insl
mov
and
and
mov
repz
jg
dec
fsubrl
mov
push
sub
mov
das
dec
mov
adc
sti
sub
xchg
lahf
ret
cmp
push
scas
pop
jmp
or
cmpsb
clc
mov
or
ljmp
insl
lods
in
adc
mov
dec
add
xor
push
scas
adc
pavgw
mov
cltd
inc
mov
test
mov
adc
outsl
test
test
scas
inc
xchg
adc
jp
rcl
adc
pop
sub
sub
add
pop
dec
pop
lcall
inc
cmp
jbe
xlat
xor
clc
push
mov
mov
mov
sub
repz
or
dec
sti
inc
in
cmpsb
or
jle
fwait
ret
es
pop
test
sbbl
fsubl
es
dec
adc
xchg
and
or
xor
inc
lock
loopne
jp
enter
or
mov
pop
or
mov
scas
push
fists
xchg
ficoml
int3
dec
sbb
mov
lock
hlt
outsl
push
mov
call
jae
and
mov
add
jae
xchg
fmulp
fidivrl
mov
inc
inc
push
mov
inc
lds
or
daa
rclb
jecxz
xchg
dec
sub
sbb
stos
jmp
mov
fisubs
add
and
sub
pop
icebp
repnz
pop
mov
mov
jns
fildll
arpl
cmp
mov
inc
stos
sbb
push
and
add
and
fcompl
das
pop
scas
nop
or
clc
sbb
out
jo
jo
scas
outsb
sub
and
je
sbb
mov
push
cmpsb
sub
divl
daa
es
shll
sub
jl
mov
test
rclb
mov
ss
ds
loope
jge
insl
test
adc
jge
add
mov
pop
push
ja
js
add
pop
cwtl
les
loop
dec
loope
adc
cmp
inc
adc
pushf
inc
add
mov
inc
sbb
mov
add
bound
sub
push
pushfw
stos
int
or
sub
push
pop
mov
mov
push
fwait
outsb
push
add
xlat
faddl
inc
jb
stos
mov
ja
push
les
ljmp
mov
pop
ja
xchg
add
and
call
inc
fadds
dec
add
pop
jl
lret
fcmovb
dec
mov
pop
sbb
cmp
shlb
cmc
fs
pushf
outsl
sbb
stc
sub
ss
ja
dec
sbb
hlt
lods
push
iret
xchg
mov
and
cli
push
addr16
mov
or
out
or
push
inc
inc
loopne
push
push
pop
cmpsb
ficoml
adc
cld
stos
adc
pop
test
xchg
and
cmp
pop
cvtps2pd
xchg
lahf
mov
pushf
cmpsb
stc
sti
mov
mov
aad
mov
nop
repz
dec
mov
push
jmp
les
push
repz
push
lea
xor
lea
ss
mov
je
add
add
pushl
inc
cmp
inc
jb
jg
dec
out
cmc
pop
je
jg
jecxz
jge
mul
movsl
pop
std
xchg
pusha
cwtl
cwtl
push
xor
mov
jno
mov
dec
sub
popa
fildl
mov
jmp
dec
lods
lock
xchg
test
pop
out
mov
js
and
aad
rol
hlt
and
out
inc
mov
inc
repz
pop
scas
cmpsl
and
xlat
cwtl
icebp
lret
cld
stos
cmpsb
fmul
dec
jo
mov
and
clc
les
dec
push
sub
out
in
sub
iret
insb
ret
out
jnp
jno
sbb
xor
clc
cmc
cmpl
sbb
mov
push
push
ds
lods
inc
adc
mov
cmovb
ret
add
call
add
idivl
addr16
popa
xchg
jbe
sbb
jg
pop
fsubs
stos
mov
mov
add
and
lds
leave
test
or
lret
add
mov
addr16
or
pop
in
in
ja
mov
repnz
pop
inc
xchg
push
sbb
xchg
aaa
dec
inc
data16
js
mov
stc
or
xor
bound
jns
aas
and
push
cmp
scas
mov
sub
cmp
out
test
pop
jp
mov
mov
mov
pop
test
jle
aam
in
push
pusha
lea
sbb
jnp
aam
ret
sbb
xchg
leave
dec
ljmp
sbb
sbb
mov
daa
cmp
and
or
insb
push
pop
cmp
inc
inc
scas
cmpsb
vandnpd
hlt
pop
iret
cmp
and
pop
and
lret
inc
xchg
inc
enter
push
xchg
mov
inc
dec
dec
pop
fidivrl
xchg
mov
insb
cltd
imul
faddp
cmp
jmp
mov
std
insb
mov
sub
arpl
xlat
push
jge
xor
sbb
push
or
mov
add
add
rorb
jl
xor
inc
aas
lea
or
xor
push
push
mov
cmpsb
enter
daa
and
mov
pop
jl
pop
test
jecxz,pt
fsubs
push
mov
push
push
repnz
test
fmull
sbb
rcrb
pop
inc
and
xchg
test
dec
push
jno
loope
test
lea
cmp
push
fildll
mov
inc
shlb
decb
repz
adc
add
sub
cli
dec
mov
int
mov
mov
or
ljmp
lods
mov
movsb
sahf
iret
push
adc
subb
out
mov
clc
in
mov
aad
and
lret
mov
cmc
fadd
mov
ror
ja
shl
iret
mov
lcall
sub
divb
sti
and
push
loop
repz
loope
pop
fs
adcl
icebp
adc
mov
enter
lods
aad
mov
pop
or
int3
lock
in
jnp
pop
fwait
mov
lds
mov
gs
sub
adc
push
fiadds
rcll
sbb
inc
fisubrl
xlat
movb
mov
pop
fstpl
sti
aaa
push
je
pop
mov
pop
nop
into
jno
dec
jmp
xlat
mov
inc
push
cmpsl
les
mov
dec
jle
lea
movsl
xor
or
sub
rcrl
inc
pushf
js
das
jmp
push
fstpl
mov
inc
xor
flds
and
aas
adc
jb
out
dec
sub
je
addr16
or
or
and
pop
cwtl
adc
inc
mov
push
mov
or
jl
mov
or
in
mov
insl
push
lock
insl
inc
das
cmp
cmp
das
pop
dec
and
cmp
es
sahf
insl
pop
dec
pushf
dec
push
int
cmpsl
and
pop
mov
mov
int3
jl
mov
incl
sub
lds
insl
addr16
mov
xchg
aam
fcmovb
push
mov
push
xor
fstpl
in
clc
xor
divb
push
popa
add
mov
adc
xchg
mov
repnz
inc
add
shrl
jmp
mov
push
sbb
cmp
std
pop
xchg
sbb
push
xchg
roll
out
stos
nop
test
pop
add
cmp
call
xor
cli
or
xor
lahf
pop
mov
adc
mov
add
test
ja
xchg
mov
xor
inc
sub
adc
add
and
mov
mov
xlat
inc
out
adc
js
fwait
rorl
mov
dec
pop
xchg
ret
sub
xor
push
sub
ss
test
fstpt
push
in
test
add
popf
inc
jle
int
xchg
pusha
sub
sbb
xor
xchg
dec
imul
mov
xchg
je
sbbl
dec
push
lds
popf
inc
cmp
push
lock
stos
or
insb
mov
jne
scas
or
jl
lock
movsl
adc
jne
cwtl
out
aam
xor
cmc
jg
pop
mov
inc
inc
lret
inc
xor
sbb
inc
pop
fisubrl
rcll
into
add
insb
pop
and
imul
shlb
mov
push
out
xchg
leave
mov
cmp
xchg
push
jg
inc
adc
jge
pop
into
sbb
pop
aaa
mov
jmp
add
sub
mov
ret
cltd
orb
iret
sub
lahf
and
sub
andl
jge
cmp
insb
scas
push
mov
mov
xor
and
push
xor
daa
and
push
cmp
add
dec
jb
popa
ds
mov
movsl
scas
xchg
push
and
jl
adc
sbb
test
cmpsl
dec
test
push
insl
xchg
inc
mov
mov
js
jecxz
pop
push
repz
push
inc
fabs
or
das
sub
pop
aam
fwait
scas
dec
outsb
inc
aad
adc
push
aaa
std
rcl
icebp
sbb
mov
dec
jo
add
inc
adc
leave
pusha
or
int
push
out
sub
dec
push
pop
mov
cmpsb
lcall
pop
or
mov
dec
sahf
jb
sbb
lret
jg
sub
mov
xchg
mov
xchg
fs
std
xchg
and
and
fdivrs
push
testl
iret
xchg
mov
xor
cmc
repnz
outsl
test
stc
cwtl
jne
fs
out
jmp
mov
jmp
mov
repnz
mov
mov
cmp
movsb
jb
scas
out
scas
adc
gs
mov
cmc
cmp
in
jge
cmp
les
loop
adc
cmpsl
aaa
add
in
xchg
cmpsb
mov
sbb
jge
mov
add
sbb
mov
jb
or
out
push
cs
popa
push
nop
test
mov
jbe
ja
ffree
pusha
cs
and
dec
loop
lea
dec
call
mov
pop
adc
sbb
jmp
or
inc
mov
inc
outsl
aas
mov
xor
orb
push
je
movsb
outsl
jecxz
cmp
mulb
out
loop
pop
cwtl
int3
mov
cli
mov
mov
cmp
lock
dec
mov
testl
mov
out
inc
and
hlt
xchg
rcrl
or
cmc
cmp
dec
push
xorb
jo
icebp
js
pop
cld
add
lret
sub
movsb
mov
xor
dec
pop
mov
mov
sub
cwtl
ret
in
pusha
push
mull
fnstsw
sub
imul
xchg
xor
int3
sbb
lods
sub
call
movsl
xchg
add
andl
cltd
in
popa
test
cmpsb
mov
inc
mov
dec
movsb
xchg
and
lret
sub
sbb
shll
jg
mov
inc
mov
add
pop
dec
mov
ja
xor
mov
fldt
mov
push
mov
mov
pop
mov
sub
jae
inc
ret
mov
or
push
jb
push
sub
push
mov
mov
enter
dec
cmpsl
bound
jne
jns
test
adc
stos
sub
xor
sbbl
jp
movsl
inc
mov
out
mov
in
add
mov
jns
ret
repz
fbstp
das
xchg
and
push
jmp
pop
lock
cltd
push
mov
mov
imul
jae
movsl
sub
stos
jle
xor
dec
sbb
enter
mov
push
aaa
xchg
jl
pop
or
iret
testl
inc
movsw
xor
inc
into
pop
ret
mov
push
dec
mov
fs
push
je
sbb
imul
pop
cs
fimuls
and
sarb
mov
mov
dec
out
shlb
jbe
mov
fstps
sub
aaa
jne
fimuls
cmc
push
sbb
leave
push
jmp
pop
cmp
inc
push
mov
and
jo
pop
jne
or
cmp
movsb
outsl
shl
push
push
leave
inc
cmpsb
mov
dec
in
xor
pop
enter
daa
and
bound
mov
and
jl
push
jnp
loope
sub
sub
movsl
mov
jp
mov
or
divb
test
jb
sub
lods
cli
lods
pop
mov
popa
js
mov
pop
push
rorb
loope
xlat
jnp
arpl
cmp
sbb
cli
jge
test
shrb
sub
jge
addl
xor
mov
int
lret
mov
push
sbb
ficompl
pop
test
mov
ja
push
sahf
adc
mov
les
rcll
dec
cmpsl
mov
js
and
out
ja
stc
ljmp
cmp
testl
rorl
add
mov
jns
fcomi
mov
or
outsl
arpl
lret
cmp
fs
jecxz
cmp
push
divw
mov
scas
fists
cli
ljmp
cmp
cmp
push
fsubrs
loopne
lock
pop
add
adc
mov
imul
in
xchg
imul
xlat
inc
cld
mov
mov
ffree
jl
xchg
jmp
or
pop
loop
nop
test
sub
sub
fldcw
icebp
pop
repz
test
dec
mov
inc
call
or
pop
pop
cmp
push
pushf
into
out
test
pop
pop
xrelease
roll
jle
aas
dec
and
jb
push
add
add
data16
jecxz
incb
imulb
sets
mov
mov
adc
dec
xchg
push
fs
popa
dec
mov
in
lock
pop
xchg
das
sti
mov
popf
xchg
jp
mov
sub
lods
pop
xchg
es
mov
dec
dec
mov
mov
dec
orb
sub
dec
mov
cmp
xor
stos
xchg
rcrb
xor
mov
push
ret
je
lock
mov
xor
cmpsb
adc
xchg
je
loopne
je
andb
inc
lods
cwtl
data16
mov
enter
push
jge
sbb
maxps
outsb
cltd
sbb
addl
cmp
test
pushf
test
sbb
xchg
xor
cmp
out
ret
cmp
call
das
xchg
xor
jge
or
jns
cltd
xchg
cli
mov
lcall
pop
push
xchg
ja
xor
dec
lret
addr16
inc
pop
pop
dec
or
cmp
jb
jmp
daa
jne
pusha
and
out
rorb
sub
adcb
arpl
add
or
dec
orb
lods
icebp
mov
and
mov
push
mov
std
in
lods
push
pusha
pop
xor
fists
cmp
jmp
sub
and
dec
push
push
popf
nop
nop
insb
mov
in
dec
stos
icebp
fs
adc
in
jnp
sbb
scas
iret
ds
adc
das
push
iret
push
das
out
pop
shll
jno
jae
adc
orb
inc
sti
inc
lret
ficoml
aam
sbb
test
lcall
xchg
daa
rcrb
js
testb
or
mov
divb
fisubrs
pop
pop
int3
sbb
scas
outsb
aaa
xor
sbb
call
outsb
imul
imul
xor
push
and
and
xchg
fstpt
stc
or
movsb
cli
xchg
push
push
sti
add
in
sbb
movsl
daa
and
cmp
cmp
cmp
jl
mov
daa
insb
ds
jecxz
movsl
mov
int
lahf
mov
add
push
push
cmp
jmp
movsl
pop
mov
adc
pop
xchg
xor
loope
mov
sub
std
cmp
mov
push
adc
or
mov
insb
addb
loop
mov
jb
xor
sub
jb
int
sub
sub
or
mov
lcall
mov
scas
sbb
sub
mov
test
lods
lods
jg
pop
inc
mov
aas
test
mov
and
xchg
repz
lret
xadd
and
sbb
sahf
lret
cmc
orb
or
cld
outsl
inc
adc
loop
lods
lret
cmpsl
and
cli
adc
lock
lods
repz
xor
add
sub
xor
push
jmp
or
and
filds
loopne
mov
pop
adc
sarl
adc
inc
pop
add
sbb
sbb
repz
xlat
cmp
sub
pop
pop
in
dec
js
sti
inc
add
orl
dec
nop
pop
lret
dec
push
add
inc
in
in
and
jbe
cs
