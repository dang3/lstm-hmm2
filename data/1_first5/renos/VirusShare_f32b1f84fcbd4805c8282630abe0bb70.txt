cmp
imul
inc
add
lods
cmp
cmp
test
mov
pushf
mov
or
inc
sahf
pushf
pushf
add
cld
sar
dec
dec
dec
dec
hlt
lock
call
in
dec
dec
dec
dec
aam
int3
enter
dec
shlb
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
inc
cmp
test
daa
daa
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
das
daa
daa
daa
push
dec
dec
push
mov
add
mov
mov
push
call
clc
mov
pop
pop
pop
ret
ds
mov
mov
repnz
mov
mov
fucomp
out
xlat
ret
nop
outsl
lock
mov
mov
mov
jge
add
test
add
rorb
mov
xor
add
rorb
cmp
or
lret
or
clc
mov
and
xor
mov
lods
std
outsl
xor
cld
mov
and
xor
jle
pop
aas
lcall
icebp
add
dec
hlt
mov
js
clc
fisttps
pop
sub
cmp
jae
pop
repz
jne
add
addb
push
cwtl
out
fidivrs
sbb
jp
cld
add
pushl
pop
dec
in
mov
test
fbstp
cmp
addl
lea
lea
in
testb
add
sti
add
mov
imull
push
adc
add
nop
incl
mov
jl
adc
and
sahf
sub
fucomi
decl
cwtl
pop
and
mov
mov
inc
sbb
inc
mov
inc
jg
cmp
mov
adc
ret
dec
clc
dec
mov
and
dec
mov
pop
es
inc
lea
dec
inc
xor
fisttpl
insb
mov
mov
dec
inc
dec
dec
xchg
xchg
sbb
mov
pop
inc
in
loopne
push
sub
pop
xor
push
hlt
inc
sti
sbb
insb
cmp
js
push
sub
jg
jg
dec
inc
dec
dec
lea
dec
inc
dec
dec
faddl
dec
inc
add
cld
in
fcos
insl
adc
lea
mov
rorb
dec
dec
mov
data16
push
or
add
insb
out
dec
mov
dec
inc
xor
jbe
loopne
lea
cmp
in
pushl
mov
adc
mov
int3
push
add
fldcw
or
push
sbb
decb
xchg
ljmp
add
aam
mov
xor
sbb
in
mov
fcmovb
mov
push
test
sub
pop
mov
cmp
popf
jae
mov
orb
cmp
jle
xchg
cld
out
add
stos
in
add
cltd
mov
int3
lods
mov
inc
mov
pop
aas
in
mov
ret
mov
call
clc
jo
mov
shl
inc
sbbb
stos
mov
aaa
mov
out
add
or
pop
mov
jne
and
out
jno
inc
rolb
cld
pop
outsl
jg
sti
cmp
js
jns
inc
mov
mov
dec
sbb
ret
pop
ljmp
or
ljmp
lahf
xchg
bound
jne
jle
inc
dec
sbb
mov
push
mov
adc
jge
jbe
popf
add
mov
inc
ret
into
xor
inc
cld
mov
clc
add
jo
insl
jmp
roll
loopne
push
xchg
in
or
lahf
fcomps
iret
rol
movsb
fdivs
or
hlt
jns
mov
rolb
pop
push
mov
test
je
inc
es
ret
data16
mov
outsb
repnz
testb
popa
push
cwtl
lret
sbb
lea
loop
das
mov
sbb
sbb
pop
shrl
jle
loope
pop
clc
mov
xchg
lea
sbb
adc
sbb
inc
es
fwait
rorb
rolb
pusha
movsb
enter
rcl
mov
dec
push
js
sbb
testb
clc
lea
lock
jmp
jle
mov
xor
cmpsb
imul
cmc
mov
outsl
sbb
lock
inc
and
lahf
sub
shl
dec
test
jle
stos
test
push
in
in
mov
sbb
das
sbb
or
inc
fimuls
shrb
mov
sti
scas
clc
bnd
cmpsb
les
fnstsw
mov
cltd
jp
out
lock
inc
into
icebp
ljmp
shl
mov
mov
or
jno
xor
sbbl
push
adc
int
mov
mov
sbb
lea
mov
mov
pop
mov
daa
push
push
add
add
or
add
rcl
and
cltd
cwtl
test
rcr
inc
lahf
or
add
push
xchg
push
leave
xlat
loope
push
enter
mov
leave
rol
mov
push
mov
test
pop
adc
cs
addb
push
je
js
sbb
andb
enter
mov
ja
cmpsb
jmp
and
and
sbb
mov
jp
cld
push
das
dec
mov
cmp
jae
mov
lret
or
pop
jns
jge
jo
dec
sahf
mov
lods
adc
jp
dec
lcall
aam
clc
div
cld
xor
push
jae
xor
sbb
icebp
push
lcall
in
mov
out
dec
mov
fmulp
xlat
sbb
xchg
mov
pop
jl
xchg
cmpsl
fs
fs
loopne
xor
pusha
mov
sbb
dec
xor
insb
add
pushw
pop
push
pop
mov
pop
sahf
pop
push
push
inc
push
push
cmp
leave
out
lea
push
xchg
pop
cld
pop
mov
rcll
scas
inc
and
rolb
jns
dec
dec
sub
push
sahf
pop
jle
jmp
das
or
jp
and
push
inc
mov
cmp
inc
cmp
inc
sbb
mov
add
add
cltd
leave
inc
xor
mov
cmp
pop
rolb
in
movb
mov
fidivrs
or
xor
xor
cmp
cmp
xor
out
out
sbb
xor
xor
cmp
aaa
cmp
xor
sti
fidivrl
xor
push
xor
push
mov
mov
xchg
jo
xor
out
in
mov
aaa
outsb
addr16
xor
push
fnstenv
mov
xor
xor
cmp
cmp
mov
cwtl
scas
mov
lret
sub
cmp
and
cmp
rorb
mov
xor
rol
mov
aas
lock
add
jns
mov
xlat
enter
int
or
jmp
pop
sub
mov
pop
mov
fs
stos
inc
out
fnsave
and
inc
xchg
cs
bound
push
test
in
mov
repnz
or
movsb
test
add
test
pushf
mov
pop
int
lcall
dec
mov
jns
mov
adc
or
add
mov
cld
cmp
out
stc
je
pushl
in
or
dec
push
and
jge
add
out
repnz
push
dec
pusha
jno
dec
and
pop
jns
xor
ds
lea
nop
push
cltd
hlt
mov
push
ja
mov
popa
sub
movsb
aaa
adc
std
mov
mov
add
movsl
sub
dec
rclb
or
push
or
lock
fsubp
movb
cmp
add
adcb
cmp
test
jns
adc
add
push
xchg
pusha
fisttpll
inc
add
movsl
add
adc
loopne
xchg
cmpsl
enter
fsubrl
pop
sub
dec
add
pop
iret
and
out
cs
rclb
in
sbb
cmp
ds
adc
xchg
pop
mov
push
adc
inc
inc
or
and
push
in
cmp
pusha
or
add
movsb
and
roll
imul
inc
cld
sahf
dec
in
cwtl
mov
hlt
mov
enter
push
or
cld
add
add
fistpll
xor
in
mov
psubd
push
sbb
jecxz
in
add
sbb
inc
or
loopne
push
inc
inc
mov
add
pop
or
pop
mov
or
ret
inc
pop
mov
lods
rolb
aaa
inc
enter
add
gs
add
pusha
adc
outsl
fxch
stos
mov
or
enter
adc
mov
daa
adc
dec
or
xor
jg
sub
xchg
movsl
repnz
dec
movsb
mov
xchg
pop
pushf
outsl
mov
pop
subb
inc
enter
loope
call
fisttpll
dec
xor
mov
dec
ss
mov
aaa
add
xor
cmp
jb
jge
cmp
xor
xor
test
arpl
xor
outsb
lods
mov
mov
imul
xor
test
mov
and
fdivrl
or
aaa
aaa
out
dec
xor
xor
xor
aaa
xor
xor
xor
mov
xor
pop
cmp
xor
std
ljmp
sub
sub
cmp
mov
xor
sub
cmpsb
movsl
dec
pop
pop
mov
pop
jp
add
jb
jp
pop
sti
add
jl
pop
nop
jb
adc
dec
cld
jae
add
movsb
movsb
jg
mov
addr16
je
pcmpeqb
sti
bound
psrld
mov
mov
sti
idivb
jp
jnp
cli
ljmp
mov
pushf
and
jp
repz
adc
jp
repz
jge
adc
daa
rcrb
gs
popf
jb
popf
loopne
or
std
dec
mov
cs
div
dec
sub
cmp
pop
cld
jmp
pop
stc
push
outsb
push
mov
les
pop
fcmovnu
ss
mov
xor
jno
jb
test
sbb
cmpsb
or
or
jl
std
jle
mov
sbb
fmuls
mov
std
jp
out
sti
fnstsw
adc
and
push
jnp
adc
div
lds
jmp
rcrl
adc
stc
adc
and
cmpl
adc
cld
jb
outsl
fisttps
adc
dec
pop
repz
inc
stos
push
sti
xchg
test
sti
sbb
jl
movq
fldt
and
stos
sub
adc
xchg
lods
xchg
mov
push
mov
stc
sbbb
js
inc
mov
nop
iret
shr
adcb
mov
or
dec
inc
fistl
adc
mov
jg
fsubr
adc
xor
nop
mov
push
orl
sti
push
jg
pop
pop
mov
xchg
mov
in
mov
addr16
out
repnz
stc
iret
pop
mov
dec
lahf
jb
mov
mov
cmp
out
loopne
cli
xor
mov
add
jecxz
popf
or
out
fwait
data16
adc
aaa
jp
inc
ss
or
imul
mov
cli
rcl
rcrl
sbb
sbb
jo
jp
jo
fbstp
push
imul
adc
push
mov
or
adc
jnp
push
ret
lret
dec
fucomip
pop
push
and
aaa
arpl
push
aas
out
mov
xchg
bound
imul
call
nop
push
jp
into
pushf
or
cmpb
mov
mov
inc
push
aad
mov
hlt
sub
pushf
jno
js
jnp
jb
cmp
adc
fsubs
repz
pop
mov
outsl
sub
mov
sarl
add
add
sbb
jecxz
cs
rclb
test
adc
push
jb
and
sti
xchg
jmp
jp
testl
cmpsl
in
nop
fldenv
mov
and
lds
test
sbb
outsb
cld
xor
lock
push
test
lea
pop
hlt
sti
and
jg
shl
jne
test
jne
push
and
daa
orl
inc
hlt
aaa
mov
loop
mov
push
call
and
cmp
inc
push
out
sub
clc
movzwl
int3
es
dec
test
and
add
int3
mov
outsl
jbe
ret
sbb
mov
add
cmp
jbe
call
push
sub
add
xor
xchg
or
sub
add
push
push
push
cmp
enter
jle
adc
xchg
cmp
iret
jge
inc
dec
rcll
add
cmp
ljmp
decl
jne
loop
mov
mov
adc
fsubrs
and
ljmp
gs
jb
arpl
fs
jae
add
and
sub
lea
jns
nop
mov
inc
loop
and
popa
int3
jle
jmp
bound
jb
inc
fisttpl
outsb
push
push
fistps
inc
insb
outsl
jae
dec
popa
outsb
fs
add
imul
addr16
mov
jg
bound
arpl
insl
popa
jo
imul
inc
adc
je
gs
mov
insb
outsb
arpl
outsl
jbe
dec
gs
jo
rcl
clc
inc
bound
jo
cmp
jno
icebp
bound
or
adc
loopne
les
es
fsubrs
push
test
imul
lcall
inc
cmpsb
fcomp
jo
leave
bound
and
add
xorb
and
pop
cltd
lcall
inc
jne
enter
xchg
in
push
popf
les
mov
enter
nop
imul
push
mov
leave
movsb
inc
or
mov
cmp
mov
mov
or
mov
cld
lret
or
enter
xor
jl
jo
icebp
lods
push
xor
cmp
and
popf
cmpb
mov
sub
push
repnz
test
mov
mov
jo
dec
sahf
daa
jl
xchg
jo
into
jnp
mov
xchg
push
mov
adc
pop
pop
adc
xor
or
pushf
adc
add
mov
mov
add
mov
add
test
mov
mul
jns
xchg
inc
cld
dec
scas
and
outsb
add
imul
cmp
and
lret
inc
and
dec
and
shll
iret
add
and
loopne
adc
les
shlb
inc
fwait
xchg
mov
inc
in
mov
adc
insb
sti
fdivs
dec
cmp
and
lcall
decl
jne
lock
push
cld
pusha
fldl
adc
mov
xor
out
jl
add
call
repz
add
dec
adc
xorl
add
add
adc
das
popf
in
dec
mov
pop
and
push
lock
sti
adc
shr
ja,pt
loop
adc
push
cmp
push
adc
call
adc
gs
sub
pop
pop
xchg
or
xor
inc
fsubrl
push
mov
add
adc
xchg
mov
mov
push
inc
aad
cmpl
or
cmp
fstpt
call
call
gs
gs
xor
in
idiv
xor
fs
insb
jno
je
sbb
and
add
incl
push
ja
insb
push
jo
je
popa
je
pop
inc
jo
add
decl
jb
imul
insb
je
jns
outsl
jb
data16
jno
test
jbe
imul
movb
insb
push
or
hlt
add
xor
cmpsb
pop
int3
popa
mov
inc
imul
outsl
xchg
fdivs
fadds
jmp
faddl
loop
orb
mov
xchg
iret
push
pusha
add
pushf
scas
add
pop
dec
add
cli
imul
mov
ds
or
incl
les
cld
cmpb
xor
add
inc
adc
test
add
dec
xor
mov
out
inc
popf
inc
mov
push
push
jmp
adcb
jne
jecxz
sbb
jmp
je
popf
arpl
aaa
mov
xor
loope
xor
cld
adc
cld
jecxz
jl
std
lcall
fwait
pop
sbbb
xor
or
pop
scas
push
mov
add
jge
jp
pusha
sub
hlt
dec
pusha
or
sub
hlt
lret
mov
je
pop
mov
and
popa
sbb
push
or
pop
in
jl
push
add
test
subb
ret
mov
decb
orl
enter
outsl
outsb
and
lock
mov
and
dec
fwait
pop
push
adc
jge
pop
ja
add
or
xchg
mov
cld
fxtract
les
add
clc
adc
add
loop
cmp
sbb
sbb
and
or
inc
in
lea
les
add
xor
adcb
decl
add
mov
and
daa
add
and
mov
shr
mov
adc
addl
ret
cmp
jne
mov
loop
xor
add
data16
mov
outsl
fadd
xor
test
stos
jae
mov
mov
sub
cmp
push
loope
push
xchg
mov
inc
inc
mov
pop
lds
ljmp
and
ja
pop
lcall
add
dec
add
dec
out
cmp
mov
repz
adc
dec
pop
xor
jg
sub
cmovne
push
add
inc
icebp
pushl
incl
inc
xchg
dec
add
add
and
cmp
cmp
mov
add
imul
and
imul
imul
add
in
mov
push
adc
and
sbb
xor
das
add
add
add
sti
pop
fadds
jecxz
xlat
pop
cmpsb
in
mov
add
or
add
outsl
or
mov
cmp
out
adc
out
sub
or
imulb
add
add
out
add
pop
in
mov
pop
call
or
pop
das
mov
filds
ret
and
bound
outsl
cmc
in
fiaddl
nop
je
pop
sbb
testb
sub
in
adc
push
or
lock
add
push
add
movsl
jg
stos
dec
inc
cmp
dec
sub
pop
testb
cmp
sub
pop
adc
sbbb
xlat
jne
or
jae
dec
add
mov
sub
mov
fisttpll
fidivrs
dec
adc
gs
mov
dec
pop
push
bound
imul
fcmovu
push
loope
sbb
pop
faddl
negl
imul
xor
xor
in
inc
outsb
int
inc
dec
add
sbb
dec
fldt
cmp
lret
jle
repz
pop
jae
sub
or
negl
jl
push
sub
jmp
pop
push
scas
dec
pop
iret
adc
js
mov
in
mov
shlb
test
and
imul
mov
xchg
imul
sub
add
and
inc
or
mov
roll
aaa
push
arpl
mov
xchg
fsubs
mov
mov
fdivrs
sbb
dec
lahf
pusha
pop
pop
or
dec
add
mov
add
aas
cmpsl
fbstp
cmp
mov
and
add
add
jecxz
mov
mov
out
add
call
mov
incl
or
js
or
add
mov
add
repnz
cmp
jp
lcall
sub
or
pop
divl
sahf
sub
inc
sub
add
out
add
cmpsb
cltd
in
dec
das
xor
add
cmp
add
sub
in
mov
dec
repz
or
aaa
xchg
adc
testl
pop
mov
and
xchg
add
push
fadd
jb
adc
outsl
mov
jnp
xchg
sbb
fsubrs
xchg
xlat
out
call
jns
ljmp
fs
ss
inc
addr16
mull
fdivrp
add
dec
aas
mov
ret
inc
pop
nop
mov
jg
nop
addb
adc
ret
call
jae
adc
sti
push
stc
aas
lret
pop
ljmp
mov
and
jl
xor
inc
mov
xchg
xor
or
dec
add
sub
sbb
jg
aad
dec
add
or
fldt
sbb
cmp
xor
dec
dec
addr16
inc
inc
fbstp
out
push
dec
ljmp
stos
or
addl
js
and
ret
leave
pop
in
scas
xchg
xlat
in
pop
add
xlat
fmulp
pop
adc
inc
sarb
pop
loope
dec
push
xor
adc
popf
and
mov
cmp
jg
sbb
mov
jecxz
aas
add
fwait
jne
and
dec
or
iret
fiaddl
and
add
pop
or
in
cmpsb
clc
jae
out
adc
aaa
dec
testb
outsb
adc
je
bound
pop
das
mov
push
inc
and
gs
into
daa
sub
daa
cltd
cmp
sbb
out
aas
and
jno
loop
outsb
fnstsw
sub
mov
test
call
addr16
adc
and
sub
jns
enterw
aam
xchg
iret
and
xchg
test
and
ret
mov
out
push
fldt
jecxz
aad
gs
shr
sarl
sbb
mov
or
pop
cmp
push
repz
inc
jno
out
test
mov
mov
and
pusha
xor
mov
call
adc
mov
pop
jne
cmp
fwait
xor
icebp
ret
test
icebp
mov
orb
loop
cs
xchg
cmp
fs
cmpsb
pop
xchg
dec
scas
add
or
mov
mov
xchg
xchg
aas
mov
xor
dec
mov
faddl
adc
shr
adc
or
nop
sbb
jne
add
mov
mov
jns
add
pop
and
mov
pop
fstps
ret
and
inc
push
sbb
test
push
pop
mov
add
in
in
aad
lds
jmp
inc
rcrb
jae
add
daa
aam
add
and
mov
dec
test
push
dec
xchg
arpl
xchg
arpl
or
insl
insb
mov
jg
fldl
dec
movsb
mov
cmovs
jecxz
test
or
or
mov
add
sbb
stos
ljmp
mov
or
push
sbb
add
pop
ret
into
jbe
aas
pop
das
int
sbb
scas
lods
mov
sbb
mov
fcompl
add
fwait
sub
and
inc
cmc
or
add
loopne
sbb
rcl
rol
sbb
sbb
aaa
pop
pop
pusha
fidivl
cli
inc
out
mov
test
mov
pusha
add
sbb
cmpsl
inc
outsl
mov
push
dec
add
dec
out
fcomip
ds
mov
inc
jb
hlt
push
popf
xchg
cmpsl
loopne
cmpb
push
jl
xorb
jg
sbb
mov
lret
xchg
inc
xchg
std
jbe
orb
xchg
outsb
add
adc
loop
adc
and
iret
mov
out
shll
std
and
mov
fwait
sarl
or
adc
jne
lcall
dec
xchg
push
fld
lret
add
sub
jne
push
je,pn
cmp
sbb
scas
or
inc
enter
and
roll
cmc
mov
jmp
out
scas
or
cmpl
pusha
cld
daa
push
lcall
cmp
mov
adc
roll
xchg
and
jge
loop
fcomps
push
les
outsb
jae
mov
pop
or
dec
mov
add
fiaddl
push
add
into
into
les
lods
rorl
sarb
and
add
mov
adc
mov
mov
mov
lock
and
sub
sbb
decl
sbb
adc
arpl
enter
jp
xor
fchs
dec
or
outsl
cmp
enter
hlt
mov
repnz
push
scas
add
imul
sbb
push
arpl
mov
push
es
dec
sbb
aad
pop
flds
lahf
xchg
and
jg
mov
orb
dec
pop
fs
ds
aas
sbb
roll
xor
jne
jl
aas
push
mov
push
xor
push
shll
subl
push
cld
aam
pop
imul
cmp
push
orb
mov
pop
mov
pop
cli
dec
addr16
inc
std
xchg
enter
fimull
push
outsl
mov
loope
mov
sar
outsb
clc
xchg
popf
fadds
rcrb
mov
and
negb
aam
mov
enter
sbb
mov
push
jne
dec
dec
cmpsb
in
mulb
adc
mov
js
mov
stos
push
jns
xor
mov
dec
add
inc
shl
or
dec
bound
sbb
pushf
sbb
pop
sbb
jbe
imul
xchg
jge
mov
imulb
int
je
mov
lret
pop
xor
stos
cmp
mov
es
mov
jne
xchg
or
pop
pop
shr
or
add
push
or
shrb
push
mov
xor
add
mov
bound
test
outsb
lds
cmpsl
dec
sbb
xchg
ret
cld
aaa
xchg
push
add
loop
orb
movsl
addl
data16
dec
inc
rorl
stos
stos
push
mov
sub
lcall
mov
mov
ljmp
inc
push
adc
test
roll
mov
loop
or
iret
xor
fsub
jecxz
inc
adc
add
cli
push
adc
add
js
sbb
push
stos
pop
aas
dec
ja
mov
scas
int
dec
nop
popl
pop
aas
cmp
mov
jmp
adc
das
ljmp
push
sbb
test
aas
es
pop
dec
inc
add
repz
test
add
mov
jo
adc
mov
mov
dec
sub
mov
cmpsl
mov
pop
adc
cmp
sbb
das
test
scas
int
pop
jno
dec
mov
loop
push
lock
push
out
rcr
inc
in
mov
decb
cmpsl
adc
cwtl
das
rclb
mulb
pop
inc
pop
js
js
dec
mov
addr16
xchg
adc
adc
sar
lods
pop
dec
dec
dec
sbb
rorl
add
mov
adc
and
add
dec
jne
sbb
add
fcoms
stos
lods
push
and
add
lds
adc
sub
jge
add
repnz
divl
scas
sbb
nop
lods
mov
add
ret
xchg
outsb
lahf
dec
add
call
mov
add
mov
jo
xor
sub
imul
test
mov
loope
inc
dec
es
jns
and
xchg
shr
popf
jo
ds
jae
daa
pop
movsl
push
lcall
cmp
dec
add
sub
mov
add
mov
mov
xor
addb
scas
dec
dec
lea
stos
jbe
sbb
int3
fimull
pushf
dec
push
adc
add
dec
mov
ret
paddq
add
dec
loopne
ljmp
enter
dec
cs
lahf
jno
dec
cli
mov
jmp
lahf
into
inc
push
cmp
dec
push
add
pop
gs
xor
dec
xor
xchg
call
push
pop
gs
and
pop
stos
inc
pop
loopne
rorb
adc
dec
je
repz
insb
pop
mov
inc
cmp
inc
mov
ret
pop
test
insb
inc
into
add
loopne
push
push
stc
ds
aad
pop
stos
sbb
inc
jae
fwait
shrl
xchg
fiaddl
xchg
add
push
mov
icebp
subb
dec
movsb
arpl
hlt
pop
out
and
push
xchg
mov
push
xchg
push
hlt
orb
mov
enter
jle
add
idivl
mov
inc
push
addb
xlat
jbe
loop
inc
push
push
mov
jne
mov
xchg
push
and
lods
mov
out
sarl
or
push
lea
rcll
dec
push
rolb
xlat
xor
mov
into
out
add
add
add
xor
popa
imul
hlt
cltd
adc
mov
mov
aas
enter
orb
lret
fdivrs
jo
lret
or
lret
pop
test
dec
out
outsb
mov
shr
pusha
scas
mov
sub
lret
add
fdivrs
pushf
sub
ljmp
ds
add
mov
adc
addb
mov
pusha
addb
ljmp
daa
adc
or
add
into
iret
dec
cwtl
push
enter
push
and
fadd
iret
mov
loopne
add
push
jmp
in
sub
test
loopne
shl
add
mov
mov
add
xchg
or
adc
call
in
pusha
lods
pop
cs
mov
push
pushf
add
mov
inc
cs
jmp
sub
test
cmpl
add
dec
ret
mov
or
mov
mov
sbbb
mov
mov
jmp
lret
adc
test
sbb
loope
pop
int
xor
loope
das
sti
cld
sub
push
cld
xchg
adc
mov
je
mov
movsl
lods
fstpt
cld
cwtl
stos
fmuls
arpl
sbb
adc
dec
dec
jo
mov
repz
outsb
mov
xchg
jnp
push
jle
inc
sbb
insl
cmp
jne
daa
adc
mov
bound
outsl
mov
addr16
negb
out
push
popf
mov
xor
out
mov
xor
cs
xchg
sbb
jo
cld
negl
out
push
sbb
sbb
mov
push
ret
xor
mov
es
sbb
shrd
scas
sub
out
je
fwait
xchg
std
mov
push
mov
shl
mov
mov
std
orl
push
mov
xor
aas
jns
push
sbb
sub
xchg
inc
xchg
push
lret
dec
adc
bound
mov
or
and
jecxz
std
xchg
add
xchg
adc
fldenv
sbb
in
sbb
add
scas
add
sbb
fsubrl
mov
push
sbb
out
sahf
mov
jp
jae
pop
add
jbe
or
fiaddl
add
inc
ret
mov
aas
dec
sbb
cmp
insl
roll
add
sbb
mov
cmp
ret
jbe
xor
adcb
ljmp
jl
je
shll
or
mov
movsb
mov
into
arpl
sar
xchg
pop
mov
test
cmp
add
mov
sub
test
inc
and
adc
or
inc
pop
mov
insl
xlat
add
jg
inc
fs
andl
shl
scas
jl
std
mov
cmp
jmp
xchg
cmc
rcrb
addl
test
sub
xor
and
dec
add
mov
mov
loop
xchg
pop
cmp
pop
mov
out
add
mov
insb
lock
jns
dec
sbb
cmp
mov
xchg
push
testb
add
cwtl
pushf
sub
mov
mov
add
jecxz
inc
xor
add
scas
call
imul
dec
adc
sub
add
lahf
bound
cmp
rcll
mov
pop
imul
mov
daa
mov
addb
mov
std
dec
rolb
movsl
sbb
mov
inc
call
inc
dec
mov
loopne
loop
cld
cmp
cmp
xchg
jmp
sub
out
add
ret
sti
mov
ss
pop
cmpsl
pop
mov
inc
sub
xor
orb
hlt
pop
or
in
mov
mov
mov
imul
xorb
add
xchg
jae
hlt
pop
dec
xchg
sub
xchg
negb
pop
mov
adc
or
and
out
xor
imul
inc
dec
adc
push
sbbb
jp
das
leave
push
add
mov
xor
out
add
pusha
movsl
mov
and
fsubrs
xor
sub
dec
int
mov
push
or
sub
add
fldln2
or
and
test
jl
shrl
mov
cmpsl
cmp
imul
jg
push
add
aaa
add
push
sbb
add
insb
dec
add
add
bsr
dec
jle
add
push
mov
mov
test
jmp
push
sbb
mov
mov
movsl
xor
or
cmp
cmp
pop
jl
cmp
xor
mov
jbe
jnp
cmp
or
xchg
stos
les
mov
stos
sbb
mov
xchg
pop
xchg
pop
es
and
cmp
or
ja
adc
lods
negb
mov
xchg
pop
push
je
jae
lds
loop
sbb
mov
insl
aam
shr
mov
mov
aaa
sub
xor
call
mov
add
sahf
or
ficoml
xor
das
push
sub
js
mov
dec
mov
fadd
jnp
jmp
dec
cmc
dec
push
and
dec
push
js
faddl
push
add
mov
test
ret
mov
fstl
xchg
jp
mov
out
cmpsl
call
and
push
stos
jp
in
dec
hlt
fldt
xlat
cs
push
adc
sbb
push
lea
mov
pop
xchg
or
stos
dec
lods
or
call
jmp
add
sbb
pop
test
fwait
mov
add
loopne
lret
sbb
push
push
push
dec
cld
movsb
mov
std
sahf
sahf
dec
push
in
je
cmp
xchg
xchg
hlt
test
xchg
pop
xchg
arpl
lods
pusha
adc
add
xor
cld
nop
loope
movsl
push
sbb
push
dec
lock
sbb
push
cs
push
mov
adc
or
or
aas
dec
rolb
pop
sbb
ss
cli
push
push
add
pop
xchg
cmp
pop
jg
add
mov
repnz
lea
add
adc
add
movsl
dec
jo
adc
push
xor
imul
movsb
push
popa
pop
ud0
test
jo
mov
lock
test
out
out
test
movsl
xor
bound
mov
xchg
xor
dec
or
xchg
cmpsl
xchg
jp
hlt
lods
dec
or
add
push
test
dec
lea
loop
stos
movsl
insb
sbb
cld
inc
cmp
mov
daa
pushf
test
bound
jnp
mov
xchg
adc
outsb
mov
dec
inc
enter
mov
sbb
mov
mov
mov
lahf
enter
sahf
roll
push
andb
test
jle
mov
scas
sbbb
add
divb
xchg
into
pop
add
movsb
mov
addb
test
cld
sarb
mov
gs
jne
pop
mov
sub
sbb
imul
ds
xor
cmp
sbbl
sbb
popf
push
lret
add
push
rcrl
fadds
fwait
ljmp
ds
and
dec
jno
inc
in
dec
test
add
push
ffreep
negl
cmp
shlb
xchg
dec
outsl
cmpsl
jmp
xor
imul
pop
xor
mov
rcl
dec
ss
add
inc
jp
sbb
roll
outsb
push
fucompp
imul
cwtl
jb
cmp
mov
leave
dec
cmp
sub
mov
add
jne
ret
mov
and
mov
and
pop
adc
hlt
inc
nop
jns
and
mov
cmp
mov
stos
jp
flds
cmp
jnp
push
pop
adc
cmp
add
cmp
subl
and
scas
push
fadds
js
inc
mov
cmp
and
in
pop
jg
fiaddl
jecxz
fs
adc
movsb
test
jp
adc
jge
sbb
rolb
inc
inc
movsb
fidivs
lahf
call
addr16
es
rorb
cltd
je
push
icebp
test
add
add
sbb
movsl
xchg
xor
pop
and
addr16
jl
mov
push
xchg
sbb
mov
roll
mov
out
sbb
stc
sub
add
mov
loopne
or
and
lods
sbb
lret
add
jo
add
cmp
and
call
sbb
andl
popf
sbb
orl
test
dec
xor
loope
pop
gs
mov
es
pop
loope
aad
ss
jbe
dec
sbb
dec
je
addl
mov
xor
push
mov
inc
xchg
and
sub
add
sbb
jmp
pop
insl
sub
sub
fdivrl
mov
into
xor
lods
sti
xchg
pop
and
mov
pushf
lds
addl
loopne
xorb
or
clc
push
data16
jge
push
hlt
loope
mov
push
shl
ss
xchg
clc
push
inc
sbb
pop
das
pop
fadds
mov
push
scas
loop
lcallw
fcompl
and
jo
popa
mov
xchg
fcmovb
faddp
lar
jbe
repnz
sbb
jbe
sbb
adc
or
loopne
je
mov
xchg
pop
jle
adc
std
hlt
addb
inc
test
adc
jge
or
les
push
fiadds
and
inc
cmp
js
cmpsb
ror
scas
aam
mov
test
aas
pop
and
cmpsl
sarb
jmp
es
pop
or
sub
loope
jecxz
lret
jae
pop
sub
mov
mov
popa
stos
sbb
sbb
mov
sbbb
lods
adc
lcall
inc
add
push
pop
sbb
mov
aaa
out
mov
in
adc
js
addr16
icebp
lock
mov
inc
jecxz
sahf
in
dec
jmp
sub
mov
dec
mov
mov
inc
add
test
fadds
push
outsl
test
mov
cmpsl
pop
clc
ror
cmp
out
in
mov
push
icebp
sbb
push
int
jnp
inc
jmp
mov
sbb
pusha
inc
inc
mov
inc
inc
dec
or
sbb
xor
push
rclb
lds
adc
rcrb
or
out
mov
add
or
bound
lods
push
pop
jmp
stos
mov
test
or
mov
lods
test
sbb
call
cmpsb
xchg
scas
push
fistpl
imul
loope
scas
xchg
xorl
in
mov
iret
adc
popa
test
xlat
sub
lret
std
cmp
pushf
jnp
test
add
mov
sub
sub
mov
jle
inc
pop
daa
sub
jo
add
out
test
arpl
fldl
cmp
pop
cmpsl
dec
lahf
ljmp
out
cmovbe
addr16
jp
jo
movsl
mov
popa
dec
ret
insb
fstps
js
add
into
fdivp
fildll
pop
or
mov
rcrl
mov
xchg
push
pop
lret
xlat
or
or
loop
mov
test
xchg
clc
sbb
push
mov
int3
add
or
adc
mov
xchg
mov
pop
sbb
mov
stos
aad
loope
negb
test
dec
push
pop
xchg
xchg
jmp
add
push
ss
or
cld
mov
mov
mov
xchg
lds
inc
xor
test
loopne
cmpsl
xor
xor
paddsw
push
jb
adc
cmp
jne
test
lods
pop
or
cmp
xchg
loop
jecxz
sbb
loope
push
cmp
jbe
mov
retw
jae
shrb
add
cltd
or
fisttpll
add
scas
int3
push
jmp
cmpsl
adc
inc
sub
fldpi
lock
inc
push
movsl
add
xorl
xchg
rorl
push
adc
insl
pop
test
xor
or
call
inc
pop
inc
mov
add
cli
cltd
mov
add
scas
xchg
ret
cmp
pop
js
xchg
or
adc
or
push
fsubrs
das
mov
sbb
gs
pop
in
das
dec
jo
aas
add
rcrb
fstl
add
rol
outsb
or
aas
inc
and
dec
fsubrl
pop
push
xchg
mov
xchg
out
mov
jae
popf
add
cmp
fwait
mov
push
rcrb
cmpsl
outsl
pushf
js
jb
rcl
or
sub
lods
das
xchg
pop
mov
data16
mov
test
push
scas
stos
daa
inc
daa
shrb
or
sub
mov
adc
mov
ret
std
sbb
lahf
imul
mov
cs
xchg
icebp
cs
pop
mov
out
adc
adc
mov
ds
repz
adc
icebp
mov
decl
adc
push
test
and
enter
mov
pushf
stos
dec
xchg
shll
mov
sbb
or
add
dec
jp
or
in
data16
outsb
aad
or
mov
add
lahf
dec
rolb
cwtl
mov
cltd
push
xchg
pop
mov
or
stos
dec
lret
cmp
shl
sbb
ds
add
mov
mov
xchg
pop
ss
xor
ret
add
fwait
mov
push
mov
out
mov
dec
xor
pop
lea
push
rolb
shrb
mov
sahf
cmpsb
aam
insb
lods
test
ret
pop
add
xchg
push
mov
or
scas
xchg
sbb
jecxz
and
add
add
mov
ja
inc
int
push
out
cmp
subb
andb
jo
sub
xchg
aaa
movsb
pop
mov
leave
add
mov
into
sub
fnstsw
stos
sub
lcall
add
inc
enter
pop
outsb
add
enter
sbb
fcompl
adc
cli
movb
mov
sub
dec
cmp
jo
dec
mov
mov
daa
push
in
mov
add
mov
lret
inc
addr16
arpl
mov
xchg
push
push
hlt
cmp
ficomps
xor
insl
pusha
add
cmc
lret
or
pop
mov
mov
adc
jp
roll
mov
mov
add
pop
outsb
loope
mov
sarb
pop
imul
sbb
leave
inc
dec
into
mov
imul
test
fadd
mov
xchg
mov
lods
mov
push
enter
fs
ss
mov
and
repnz
pop
add
mov
sub
ljmp
jno
ds
into
lret
inc
lahf
push
js
adc
adc
lret
sbbb
add
in
shll
aaa
push
adc
fimuls
loopne
loop
xchg
mov
jo
loopne
mov
jb
lods
fistpll
loopne
jbe
add
sub
roll
add
popa
lock
and
mov
rcll
enter
push
xchg
test
pop
aam
loop
in
mov
push
sysenter
adc
daa
and
stos
pop
ja
popl
sub
fnstenv
xor
fwait
enter
add
pusha
imul
adc
dec
jb
lahf
push
mov
pusha
adc
iret
pop
or
scas
xor
test
push
rclb
lea
pop
push
pop
out
pop
fadds
xchg
mov
test
pop
lret
stos
cmpl
mov
sub
fimuls
int3
or
pop
mov
ret
aam
jno
outsb
cmp
sbb
jbe
mov
sahf
xorl
jb
fxch
ja
ljmp
push
jl
mov
mov
push
cli
jno
scas
loope
cltd
je
lods
jno
arpl
jl
sbb
fisubl
pop
out
cmp
movsb
jp
test
dec
pushf
or
mov
dec
cmp
inc
cmc
add
adc
fcmovbe
call
shll
lret
mov
adc
int
push
mov
hlt
fs
fs
sarb
xchg
cmp
sahf
pop
adc
xorb
pop
add
test
sbb
clc
xchg
daa
cmp
and
sbb
pop
aaa
hlt
or
popa
je
shrb
sub
lock
enter
sbb
in
mov
pop
inc
mov
dec
pop
addr16
add
gs
add
sub
fiadds
jmp
jl
xlat
dec
mov
push
mov
add
fldenv
sub
mov
test
addr16
mov
dec
dec
and
cltd
outsl
test
fldenv
neg
xchg
or
jmp
mov
stos
xor
sub
adc
popa
mov
in
push
or
dec
out
push
add
dec
jne
inc
or
movsl
aaa
mov
or
xor
test
std
out
mulb
and
adc
add
rol
jecxz
sti
fsub
pop
loope
and
sub
xchg
ret
mov
aad
mov
push
xchg
outsb
fisubl
daa
mov
ret
mov
jmp
sbb
mov
fldt
jecxz
dec
mov
push
or
fmuls
fadd
pop
in
add
shrl
sub
xchg
lock
mov
pop
add
xor
out
stos
push
add
shlb
pop
out
mov
popf
sub
jp
icebp
in
mov
and
test
push
inc
dec
jge,pt
les
jle
inc
test
in
push
mov
pop
inc
xor
push
outsb
sbb
decb
mov
enter
scas
xchg
inc
sub
push
cmp
ret
rorb
and
mov
lods
cwtl
mov
jns
jbe
push
inc
push
adcb
push
in
cmpsb
dec
cmp
mov
daa
adc
push
mov
icebp
es
push
jmp
cld
sahf
ss
loope
pop
add
fcomps
mov
and
andl
add
repz
inc
inc
daa
pop
jae
add
sahf
icebp
mov
lock
jecxz
jbe
jge
insl
aaa
jbe
pop
ret
lock
and
xchg
xchg
add
pop
lods
lds
aas
push
add
mov
out
stos
push
pop
add
inc
adcb
dec
std
or
test
push
rclb
or
jno
dec
stos
and
fldl
jae
mov
icebp
sub
sbb
add
sbb
cmpsl
jo
sbb
out
orb
add
popf
xchg
mov
dec
insb
in
cltd
ret
enter
jae
adc
fcmovbe
testl
mov
push
mov
xchg
negl
or
add
inc
daa
int
pushf
pop
hlt
add
bound
loopne
sbb
or
add
and
inc
sbbl
or
mov
roll
loop
jb
out
push
loopne
add
subl
in
add
dec
sub
mov
xchg
mov
jo
mov
ss
mov
aam
add
sub
push
jo
and
loopne
jnp
ret
mov
ficompl
xchg
mov
inc
int
icebp
je
sbb
loop
fstpt
aad
cltd
mov
inc
jb
setl
stc
cmp
push
mov
mov
scas
outsl
lret
mov
pop
out
inc
test
mov
in
pop
and
mov
push
mov
shll
cmp
imul
or
mov
test
dec
cmp
repz
xchg
xchg
mov
add
jge
mov
sbb
je
ds
lret
scas
bound
into
sbb
dec
mov
cmp
mov
shrb
dec
sub
inc
cmp
mov
sub
or
mov
mov
adc
fadds
ret
xor
mov
dec
test
mov
sbb
ror
mov
stos
frstor
sbb
inc
js
pop
pop
push
ret
mov
imul
pop
dec
xor
sbb
ja
popa
lret
mov
cmc
cmp
pop
fdivr
lock
mov
rcrb
scas
roll
inc
inc
push
add
lds
loopne
ror
fucomp
fldl
sub
dec
test
jo
or
sub
dec
push
mov
pop
adc
nop
mov
or
or
lcall
cs
cmp
xor
fnstsw
jae
sahf
clc
addr16
xor
mov
insb
inc
rorb
dec
and
cmpsl
clc
push
out
jmp
adc
fwait
scas
sbb
je
andl
sbb
in
xor
adc
test
in
and
or
mov
mov
pop
testl
adc
dec
jl
cltd
jne
push
or
stos
movsb
sbb
subl
cmpsl
xor
aaa
add
stos
jmp
sti
outsb
imull
jno
cs
sub
mov
push
cli
imul
into
adc
inc
jbe
inc
pop
adc
loope
xchg
mov
sti
rcl
jge
sub
inc
mov
add
add
mov
popf
mov
mov
jb
jecxz
add
mov
les
or
xor
or
add
dec
and
jb
ss
addb
mov
xor
push
mov
int3
inc
mov
loopne
rcrb
inc
sbb
fwait
stos
inc
imull
push
dec
aas
xadd
lret
jne
cmp
and
insl
xor
add
adc
push
jge
sbb
inc
or
or
ds
cmp
loop
fadds
clc
pop
shlb
dec
sahf
jne
sbb
ret
popf
cmc
jbe
mov
lds
popf
je
divb
xor
sbb
aaa
add
lret
lock
movsl
es
dec
cld
sub
inc
dec
imul
scas
xor
pop
cmp
lods
es
and
rcrb
out
fs
mov
and
dec
ja
call
mov
sub
push
xchg
adc
and
ja
insb
pop
jae
fcompl
and
inc
or
sub
loop
lds
adc
push
arpl
jge
lds
push
and
pop
cmp
mov
pop
sbb
jns
mov
pop
cmp
add
mov
inc
xor
mov
loope
popf
mov
pop
daa
pop
test
xchg
rclb
nop
ret
inc
push
sbb
test
inc
fcompl
clc
scas
cmpsl
cmp
int3
inc
and
add
pusha
and
mov
cli
call
incb
sub
pusha
and
ds
sbb
addl
add
imul
xchg
pop
jo
mov
ret
ja
sbb
ljmp
inc
sub
lea
lahf
ljmp
ret
dec
addr16
jo
sub
add
in
into
push
nop
test
aad
sbb
add
and
imul
xchg
subl
add
scas
sub
js
xchg
inc
add
mov
lds
sti
mov
aam
pop
call
inc
addr16
dec
popf
ljmp
push
cmp
call
dec
loop
xchg
mov
and
mov
shr
cmpsl
cmpsl
test
or
and
mov
mov
jp
popf
pop
pusha
loop
sbb
sub
fidivrl
push
sti
int3
pop
xchg
push
xchg
test
add
push
add
mov
popf
test
dec
pop
sbb
push
inc
js
dec
dec
pop
push
sbb
jnp
mov
inc
ss
mov
push
add
xchg
inc
fisubrs
push
int3
push
xchg
mov
inc
mov
lock
push
xchg
pushf
testl
push
aaa
pop
sub
adc
test
or
or
int
test
rorl
inc
xchg
sbb
xchg
jecxz
stc
sbb
or
dec
mov
lahf
dec
dec
orb
jp
ret
pop
pop
jg
or
les
fwait
cmp
and
stos
sub
movsb
mov
and
add
rclb
xor
or
mov
xchg
or
lods
ds
dec
ss
or
lods
popa
pop
and
imul
lahf
ljmp
lock
stos
or
ljmp
loopne
daa
push
xor
and
mov
adc
nop
clc
jge
or
aas
pop
or
lret
xorl
loopne
rorb
cld
clc
dec
pop
mov
add
outsb
xor
lods
je
jg
es
into
mov
loope
repz
orl
test
popl
pop
je
pop
lret
jl
adcl
daa
xchg
mov
xor
jo
adc
fnstcw
and
sub
mov
imul
push
sbb
mov
push
mov
xchg
push
lea
push
lock
test
adc
loopne
les
xchg
js
dec
or
das
push
test
pop
xchg
jmp
xchg
insl
orb
imul
and
stc
xchg
insl
or
aaa
loop
push
or
dec
and
sbb
std
imul
in
ljmp
mov
popa
pop
or
mull
mov
mov
ja
adc
mov
repz
push
jns
cmpb
js
repz
cmp
jmp
add
add
loope
fdivl
jbe
outsl
cmp
dec
mov
mov
popa
movsl
mov
test
pop
jecxz
lcall
adc
pop
ret
lret
out
cmp
testl
dec
mov
xchg
add
push
call
pop
mov
or
pop
add
repz
inc
jl
push
or
daa
popa
rcll
add
xchg
sbbl
setno
inc
mov
xchg
mov
scas
arpl
ret
je
bt
sahf
or
ja
roll
dec
scas
ret
fisubrs
dec
xchg
les
pop
enter
sbb
inc
sti
testb
jle
adc
mov
pushf
mov
add
cmp
adc
pop
pop
and
in
mov
mov
jl
aam
add
mov
adc
ret
lret
xor
dec
xchg
outsb
ja
insl
mov
ja
std
push
adc
sub
call
scas
jle
rclb
pushf
out
subb
jns
sub
mov
jle
inc
mov
jnp
dec
popf
push
mov
mov
inc
mull
test
xor
push
or
call
stos
aam
adc
adc
mov
mov
cmpsl
iret
jnp
hlt
jne
jnp
mov
repnz
lcall
imul
adc
jb
cmp
ficoml
imul
ret
add
xlat
jne
subb
insb
xchg
imul
loopne
add
fdivp
dec
pop
loop
rcl
cmpsl
scas
mov
loop
test
cld
jne
xrelease
ds
xchg
sub
sahf
lret
push
dec
mov
jb
movb
mov
xor
xor
popa
add
sahf
lock
pop
out
aad
sbb
test
pop
mov
sub
lods
fildll
push
mov
adc
daa
mov
cmp
mov
mov
mov
pop
pop
jg
inc
int
repnz
clc
mov
and
xor
pusha
adc
fisubrl
aad
jo
lods
pushf
fs
jmp
ret
cmp
jnp
inc
sub
inc
lds
fbstp
cmc
fcmove
js
adc
xchg
daa
push
inc
add
pop
mov
or
in
jmp
stos
mov
adc
fidivs
dec
xor
jmp
pop
mov
hlt
fs
jbe
adc
pop
loopne
adc
das
add
or
cmpsl
mov
jbe
adc
out
xchg
cli
pop
adc
jl
sub
pop
dec
mov
inc
and
sar
adc
fwait
sbb
shrb
fsubs
cmp
aad
dec
mov
mov
jo
ret
mov
xchg
xor
cmp
outsb
cltd
dec
mov
leave
xchg
aam
push
js
mov
mov
leave
jo
rcrb
mov
je
push
cmpl
push
sub
cld
xchg
pop
popf
nopl
push
testl
out
sub
out
xchg
test
push
loop
cltd
mov
fwait
jno
push
pop
push
inc
xlat
scas
mov
lea
outsl
mov
or
les
push
rolb
dec
xchg
shlb
aas
shrb
xchg
aad
cmp
or
mov
test
add
cmpsb
mov
xor
mov
dec
lea
cmp
xor
adc
or
jp
mov
out
loope
mov
arpl
loopne
fisttps
mov
mov
dec
pop
mov
lds
adc
ds
pop
push
mov
sbb
adcb
or
add
pop
cwtl
pop
jmp
adc
outsl
mov
adc
sbb
pop
ljmp
cli
sub
pop
shlb
xor
out
mov
cld
add
sti
push
mov
push
sub
push
add
push
mov
xor
adc
xchg
mull
xor
cmpsb
les
adc
repz
and
aas
add
add
in
in
jo
cmp
outsl
mov
mov
lods
adcl
loopne
xor
or
dec
add
adc
pusha
outsb
sbbb
das
mov
clc
icebp
fwait
sub
inc
ret
mov
jo
in
jmp
out
lods
icebp
stos
xchg
ret
and
and
mov
xor
push
xchg
sbb
ds
sub
jmp
push
pop
sub
push
fs
jmp
ss
cmp
hlt
out
sbb
cs
loop
lods
aad
inc
ror
add
mov
mov
testb
rcr
rclb
pop
pop
add
fwait
aaa
aas
lahf
mov
dec
into
mov
jns
enter
jno
mov
sub
xorb
bound
ror
popa
rcrb
mov
testb
mov
out
inc
popa
sti
out
daa
push
mov
mov
mov
lret
sbb
or
test
aam
lods
pop
add
dec
mov
xor
cmp
in
test
loopne
in
repz
and
aaa
jbe
rorb
fmuls
into
sahf
mov
inc
js
sbb
xlat
lret
sbb
out
or
add
jl
dec
je
mov
inc
adc
pop
pop
ret
inc
xchg
jnp
enter
mulb
test
xchg
jo
mov
test
mov
or
sbb
add
jmp
jno
ljmp
scas
add
outsl
shlb
xchg
gs
movsl
sbb
lods
xorb
pusha
mov
xchg
sbb
dec
lea
lret
jle
divb
sub
pop
lods
push
adc
leave
push
dec
mov
mov
popf
xchg
mov
out
sub
mov
or
inc
add
je
lret
mov
mov
mov
or
out
xchg
enter
mov
push
cli
gs
sbb
jmp
leave
test
dec
enter
cmp
scas
ret
movsb
dec
and
dec
stc
inc
add
or
arpl
xchg
xor
lock
pavgb
sbb
aas
xor
rcrl
fmull
aad
add
sub
iret
aam
pop
mov
inc
jne
jno
fnstcw
inc
cmp
aam
mov
or
daa
pop
adc
imul
pop
or
pusha
popa
lret
mov
push
mov
subl
adc
popa
push
jmp
add
rorb
dec
dec
inc
idiv
loopne
xchg
mov
and
ret
xor
xchg
pop
mov
out
sub
ljmp
inc
mov
call
loop
ds
sub
xlat
mov
jae
movsl
aam
add
jecxz
push
sbb
add
nop
enter
popf
shr
bound
mov
movsl
jnp
adc
gs
insl
mov
ret
mov
std
sub
popa
inc
shlb
arpl
jecxz
in
xor
pop
sti
dec
adc
and
mov
jno
orl
push
jbe
xor
arpl
dec
in
mov
and
lock
xor
inc
sub
dec
jne
xchg
mov
shlb
mov
mov
out
xchg
cmp
in
add
jp
daa
je
mov
mov
push
pop
adc
cmp
mov
sahf
stos
push
cld
cmp
inc
fs
in
jmp
sbb
sbb
test
jle
jb
popf
lret
sahf
dec
mov
sub
add
stos
aad
add
push
or
popa
add
push
and
and
call
inc
cmp
jo
dec
mov
pop
jno
dec
sar
mov
mov
test
xchg
mov
add
in
bound
fcmovnu
lds
sub
add
stos
in
loopne
adc
add
inc
loopne
inc
push
out
clc
cmp
addr16
pop
cmpsl
mov
and
lret
nop
push
lret
fdivl
in
sbb
cmc
xor
test
and
push
push
dec
andl
cmp
xchg
mov
enter
mov
subb
lea
ret
arpl
add
adc
adc
loopne
xor
inc
test
and
scas
lock
xor
lea
ret
cmp
or
inc
adc
sub
mov
jl
movsb
sub
addl
or
scas
inc
xor
xlat
xor
sub
addb
dec
pop
adc
les
push
mov
rolb
mov
std
dec
out
mov
shlb
shll
mov
push
aas
addr16
pop
mov
fwait
add
sbb
inc
jmp
pusha
enter
jmp
mov
pop
sbb
fstl
sti
js
je
test
jecxz
mov
call
add
mov
addl
add
push
ds
jge
adc
adc
scas
aas
mov
inc
lea
mulb
and
and
mov
xchg
xchg
mov
jmp
shr
or
rclb
dec
lahf
xor
loopne
out
lahf
int3
aam
adc
sbb
call
out
mull
out
cmp
leave
dec
pop
add
stc
pop
pushf
push
inc
add
pop
mov
test
cs
or
jge
mov
outsb
ret
shll
fs
scas
inc
gs
add
dec
push
sahf
push
mov
outsb
lock
add
jg
loop
adc
mov
cwtl
mov
cmp
int
adc
fadds
shrl
lret
jmp
mov
add
push
inc
sub
or
push
push
and
inc
pop
pushf
mov
mov
xor
mov
cmp
sub
test
inc
jno
add
jne
add
push
incb
lahf
negb
sbb
mov
lret
insl
push
sti
pop
xchg
mov
sub
inc
adcl
mov
jg
pusha
xchg
ds
push
dec
mov
add
mov
cli
pop
xlat
pop
mov
pop
mov
adc
lods
xchg
dec
jae
lcall
sbb
xchg
mov
push
sub
js
add
mov
lods
cmp
xor
aad
lret
cmp
xlat
dec
divb
scas
loope
jbe
add
dec
loopnew
mov
push
sbbb
xchg
pusha
shlb
in
and
xchg
pushf
cmpb
sbb
jae
les
and
add
mov
lcall
je
jno
mov
lahf
call
pop
insl
add
cmp
pop
imul
mov
dec
and
js
cltd
xor
shr
mov
xchg
ds
loopne
nop
mov
pop
lock
les
lea
addr16
aad
jle
pop
loope,pn
and
movsb
jmp
in
dec
xor
push
fs
sub
mov
fs
cltd
das
inc
mov
add
rolb
popa
jle
pusha
add
dec
lret
sbb
push
xor
xorl
pop
inc
call
popf
xchg
xchg
js
push
lds
sub
lock
in
bound
jb
mov
mov
frstor
sbb
sub
cmp
mov
and
cmp
aas
ljmp
adc
mov
popf
dec
jb
jmp
pop
test
xchg
enter
rol
push
push
mov
lds
adc
mov
and
hlt
pop
pop
pop
inc
adc
pop
add
ret
or
nop
add
pushf
gs
jecxz
clc
xor
sbb
shll
int3
sahf
mov
ss
popa
cmp
jmp
cmpsb
test
mov
adc
popf
popa
sti
mov
pusha
into
mov
ljmp
inc
inc
rolb
jge
cmp
addr16
sbb
fldcw
or
sbb
ret
xchg
sub
loope
mov
inc
cmp
test
pusha
xchg
sbb
inc
push
dec
jmp
xchg
es
pop
call
cmp
xchg
mov
in
dec
aad
push
out
nop
movsl
test
cld
cmpsb
or
xor
push
scas
add
lahf
mov
inc
addb
daa
cmpsl
dec
stc
inc
cmp
movsl
scas
stos
jne
adc
mov
fisttpl
je
jg
mov
sub
add
fs
out
dec
xlat
test
sbb
loope
lods
mov
lahf
addb
lds
pop
mov
sub
add
push
inc
dec
arpl
or
inc
ljmp
mov
ret
inc
mov
rolb
push
inc
insb
arpl
jae
call
ds
pop
mov
call
or
dec
loope
push
add
outsl
dec
movb
sbb
mov
mov
mov
inc
lds
bound
pop
loop
mov
cmpsl
pushf
ret
add
insl
push
repz
sbb
je
cs
dec
cmovnp
aad
icebp
xor
cmp
sar
int
cltd
push
rorb
mov
fists
push
sub
push
cmp
shr
xor
popa
popf
jae
jmp
xor
pop
movb
mov
call
pop
adc
cvttps2pi
mov
jne
sbb
jmp
adc
rcll
nop
dec
dec
push
or
imul
add
pop
jle
push
mov
dec
fildll
xor
mov
es
lds
lods
sbb
pop
pop
xchg
and
push
mov
test
sub
shl
or
pop
enter
add
or
jle
jne
hlt
adcb
mov
sub
or
or
in
sub
sub
cmp
sub
aas
dec
push
pop
mov
add
leave
fmull
adc
jmp
and
jae
js
add
rclb
pop
dec
fdivl
add
gs
adc
stc
aas
mov
cmp
xchg
data16
out
lret
dec
jl
ds
adc
push
scas
fwait
cmp
movsl
shll
loopne
add
xor
sahf
add
inc
and
xchg
loopne
ss
ja
loop
cld
add
jmp
jg
mov
jg
in
rclb
push
jle
mov
dec
cmp
pop
lret
loope
and
dec
jmp
mov
and
inc
sbb
add
bound
leave
mov
push
cmp
add
and
out
imul
std
xor
xlat
shr
push
mov
leave
scas
imul
aam
add
sub
add
sbb
dec
mov
aam
mov
adc
xor
popf
aas
lea
addr16
in
cmp
addr16
xchg
leave
lock
mov
xchg
fistpl
ds
mov
outsl
add
in
imul
jg
sbb
cwtl
push
mov
cmp
or
add
aas
sbbb
imul
cwtl
inc
pushf
outsl
je
sbb
loop
insl
shrb
or
or
push
xor
sbb
mov
adc
mov
jg
sub
je
push
mov
jmp
adc
cld
out
ret
sbb
pop
sbb
sbb
loope
data16
sahf
xor
test
rorl
cmpsb
jae
mov
out
push
push
xchg
jg
xor
pop
je
sahf
ljmp
sbb
jp
push
jns
loopne
push
fldl
xor
sbb
stc
mov
mov
shlb
mov
mov
mov
clc
fiadds
andl
mov
add
loopne
in
jmp
pop
jmp
cmp
movntps
pop
or
in
jg
ret
daa
loop
out
inc
loopw
lret
sub
dec
jmp
cmp
push
scas
mov
mov
test
sbb
push
mov
les
jge
pop
adc
shl
xor
sahf
stc
jo,pn
das
mov
andb
mov
lods
pop
ret
xor
popa
cmp
mov
daa
aam
lcall
or
sbb
mov
jns
mov
cmp
arpl
jmp
and
sti
and
pop
jb
mov
shlb
inc
mov
mov
aam
push
rcrb
shrl
pop
add
roll
mov
xchg
push
mov
and
push
push
les
sbb
loopne
cmc
push
nop
repz
mov
inc
dec
dec
push
lods
in
lods
out
sbb
xor
xchg
adc
pop
pop
cmp
xchg
mov
popa
jb
loope
ss
rorl
inc
mov
cmc
inc
popa
dec
les
sbbb
stos
cmpsl
test
sbb
add
add
xchg
sti
aas
test
out
dec
mov
inc
arpl
pusha
xchg
test
mov
pop
mov
hlt
xchg
test
lock
lahf
aam
push
pop
fwait
inc
je
inc
xchg
in
dec
lea
sub
scas
or
push
mov
mov
int3
sbb
mov
adc
pop
dec
dec
dec
sub
sbb
outsb
pusha
mov
jbe
mov
jo
sbb
and
pushf
rolb
xchg
pop
push
cmp
and
inc
aas
inc
or
and
popaw
out
lods
mov
mov
push
dec
enter
sbb
jle
xor
sbb
jge
je
xchg
inc
aaa
aaa
outsb
sbb
mov
dec
mov
fistpl
inc
mov
inc
rclb
adc
mov
add
pusha
mov
mov
xchg
cmpb
les
sahf
adc
aam
adc
icebp
cmp
das
mov
ljmp
xor
mov
addl
sub
or
lret
xchg
pop
js
xchg
gs
outsb
dec
mov
mov
push
push
icebp
or
imul
push
mov
sub
push
add
mov
loopne
mov
mov
pusha
xchg
mov
jmp
sbb
lods
clc
xor
enter
mov
imul
aad
adc
jmp
outsl
mov
mov
adc
add
pushf
popa
in
lea
lea
rclb
repz
or
inc
mov
ret
cld
xlat
scas
xor
stos
sbb
adc
js
xchg
mov
lret
test
mov
push
cmp
xchg
dec
inc
or
xchg
xchg
lock
inc
ffreep
inc
and
pusha
das
or
sbb
clc
mov
sbb
mov
push
lcall
add
dec
dec
stos
decl
mov
mov
inc
cld
push
jmp
bound
aam
mov
imul
popa
dec
mov
idivl
mov
xor
lock
dec
jp
lods
icebp
adc
and
xchg
loop
xor
jge
out
popf
adc
ret
bound
adc
lret
adc
rorb
ljmp
xchg
loope
jecxz
adc
pinsrw
retw
pop
cmpsb
js
loope
pop
mov
test
cmp
pop
ss
inc
add
call
fsubs
arpl
iret
xchg
jle
sbb
pop
pop
xchg
dec
sub
inc
fildll
loope
push
add
push
idivb
dec
mov
xchg
jb
mov
mov
clc
repnz
fbld
jns
rorl
adc
push
in
mov
dec
dec
and
lea
and
mov
mov
mov
push
ljmp
inc
sbb
inc
or
mov
addl
aas
pop
adc
add
push
sbbb
popa
sbb
lock
mov
mov
xchg
mov
rcrb
pop
stos
dec
scas
rolb
adcl
outsb
xor
add
push
xchg
mov
push
jecxz
sbb
mov
dec
icebp
jns
xchg
dec
xchg
repz
lock
mov
dec
inc
mov
dec
and
push
xchg
clc
lock
sub
xor
stos
out
pop
mov
cmp
inc
mov
cmpl
gs
hlt
push
push
daa
ljmp
mov
xor
filds
scas
call
xor
arpl
xchg
jle
xor
js
sbb
loope
cmp
enter
cmp
jnp
fistps
sti
aam
cmp
sub
xchg
jmp
mov
mov
insb
fildl
lods
add
sbb
mov
insl
sub
jp
push
jg
mov
enter
loope
and
push
andb
cmpsl
icebp
sbb
xorb
sub
jo
cmp
cmpsb
pop
aam
mov
dec
or
mov
sarb
mov
jo
icebp
mov
das
push
mov
pop
pop
or
cwtl
mov
rcrb
cltd
imul
orb
mov
stos
xchg
shl
pusha
loopne
popa
add
dec
xchg
dec
sti
add
rorb
clc
mov
jbe
lret
pop
add
leave
nop
inc
add
and
xchg
pop
sub
cs
push
xchg
loopne
les
adc
popf
out
mov
mov
lods
cmpsb
repz
aaa
je
sbb
loope
sub
inc
lcall
test
push
push
jne
aaa
jo
fs
sub
xor
pop
je
xor
adc
add
add
inc
cmp
das
cmpsb
mov
xchg
inc
push
or
addr16
mov
add
pusha
xchg
lock
jge
scas
fsubs
jno
rcrb
mov
pop
inc
inc
adc
outsb
cli
es
sbbb
mov
rcrl
and
icebp
and
pop
inc
mov
test
pop
scas
sbbl
xor
add
arpl
cmc
pop
dec
arpl
push
iret
subb
or
popa
mov
sbb
xchg
add
mov
fcmovnbe
jp
jle
flds
inc
sub
fdivrl
adc
repz
add
adc
push
dec
dec
dec
cmp
les
ljmp
mov
pop
cs
inc
and
sahf
push
push
pop
out
xchg
lea
inc
inc
dec
fists
push
repz
fadd
push
addr16
call
rorl
sbb
aaa
mov
push
cli
xor
sbb
loopne
mov
dec
add
test
mov
mov
ret
je
arpl
addb
mov
sub
imul
dec
inc
in
sbb
loope,pn
sbb
and
mov
jecxz
and
cs
inc
lcall
popf
divl
mov
mov
cmp
or
sub
pushf
stc
fisubl
dec
jb
cmp
ss
call
adc
xor
in
fnstenv
jge
xor
or
jmp
sub
ds
dec
fs
fildl
and
sub
cld
mov
mov
jne
sub
das
xchg
or
xchg
inc
mov
jmp
inc
mov
bound
stos
sbb
out
int3
test
add
sbb
dec
stos
xor
mov
dec
mov
out
je
pop
stos
mov
idiv
add
lahf
push
add
push
mov
mov
mov
stos
inc
js
adc
xchg
lods
mov
mov
dec
mov
lock
jecxz
adc
ds
mov
inc
dec
pushl
icebp
and
mov
fwait
jne
jmp
add
or
mov
out
xchg
in
int3
popf
add
dec
dec
xor
lea
dec
sub
paddsb
int
sub
mov
je
arpl
xor
and
lds
ror
add
or
inc
lcall
jnp
jp
pop
mov
push
insl
sbb
enter
adc
add
outsb
test
scas
inc
xor
sbb
push
xor
mov
aam
scas
dec
or
scas
dec
movsl
and
mov
hlt
mov
xlat
jp
sbbl
gs
adc
rorb
and
xorb
sarl
inc
sarl
insl
loopne
loop
scas
cmp
aas
inc
fldcw
imul
cwtl
loope
inc
pop
jae
mov
push
divl
orl
dec
in
cmpsl
pop
mov
adc
sub
incb
xchg
and
ret
test
push
cwtl
popf
inc
or
scas
test
mov
dec
xchg
dec
call
addb
mov
pop
aas
cmpsl
inc
or
mov
sti
jp
xor
push
rolb
popa
rorb
test
movsl
pop
lods
dec
dec
xchg
popa
in
sub
xchg
cbtw
data16
mov
leave
imul
xchg
adcl
std
leave
inc
movsl
dec
xchg
mov
ss
jns
out
lds
rorl
insb
call
gs
sbb
in
sbb
xchg
je
dec
add
jbe
cld
adc
js
jp
inc
imul
aam
rol
mov
rorb
xor
xorl
jmp
ret
push
pop
add
xchg
into
jnp
adc
jo
sbb
cs
cs
movsl
repz
dec
add
adc
add
cmp
es
nop
or
adc
shll
add
inc
xchg
push
daa
not
mov
cmp
adcb
and
enter
xor
lret
mov
mov
out
rol
xlat
sbb
sub
add
sbb
inc
ret
sbb
rorl
sbb
jmp
mov
mov
and
inc
repz
mov
mov
bound
lret
jns
sub
outsl
or
sbb
lds
inc
imul
sub
xchg
rcrb
jnp
xor
pushf
adc
movsb
repz
cmp
jb
dec
push
or
mov
add
adc
push
ds
cmp
inc
js
stos
lret
inc
fnsave
dec
push
ljmp
push
cmp
pushf
fildl
lahf
pop
cmp
push
subb
jl
lahf
sbb
jmp
xchg
mov
and
fmulp
insl
aad
pusha
lock
sti
mov
or
daa
jmp
and
jp
cmpsl
jecxz
lahf
jecxz
mov
push
ds
and
mov
sbb
cmpsl
add
and
inc
mov
ja
sbb
lret
cmpsb
mov
les
ja
outsl
ret
sub
xchg
fs
add
lret
sbb
and
push
les
mov
iret
divb
add
and
dec
mov
call
faddl
jne
and
or
lods
xchg
xlat
nop
shrl
lret
push
jne
mov
cmp
mov
sbb
enter
data16
cmc
lahf
cmp
gs
mov
lret
out
mov
repz
mov
call
pop
ffreep
stos
ds
and
stc
push
and
lock
inc
stos
cmp
mov
cltd
imul
cli
sbb
sbb
aam
in
xorl
xorl
or
roll
call
or
imul
jno
xchg
cmc
hlt
inc
xchg
daa
aad
and
inc
addr16
adc
es
loop
in
inc
or
pop
pop
aas
stos
add
iret
adcb
push
inc
inc
mov
dec
sahf
popf
mov
and
mov
xchg
xor
or
add
push
lods
cmpsl
imul
rorb
mov
pushf
and
int
jecxz
stos
jmp
xlat
dec
call
daa
mov
push
xchg
pop
xor
movsl
or
xchg
inc
cmpsl
or
adc
jb
add
or
aaa
pop
mov
pop
mov
inc
loope
inc
ret
dec
cmp
hlt
fadd
dec
or
mov
testl
cmp
aas
pop
loopne
or
mov
addb
add
xchg
jle
fnstcw
daa
movsb
popf
les
jl
mov
adc
pop
loope
lahf
lret
sbb
push
inc
push
jle
fimull
push
mov
adcb
jmp
mov
cmp
cmp
addr16
dec
gs
lcall
push
out
dec
mov
xor
pcmpeqb
loope
pop
insb
mov
sahf
xchg
cmc
adcb
rclb
push
adc
mov
lea
pop
pop
xor
push
xor
fs
repnz
adc
dec
xchg
mov
sbb
loopne
dec
ss
icebp
shll
arpl
xchg
or
dec
and
test
lret
ljmp
inc
int
scas
mov
hlt
mov
out
mov
pop
or
dec
cmp
push
sbb
jnp
mov
pop
push
loop
je
push
fstpl
add
ljmp
dec
lahf
fs
pop
ficoml
xchg
ss
lods
pop
pushf
adc
cwtl
jecxz
out
into
in
xchg
push
push
add
fmul
pop
xor
jo
mov
mov
xchg
adc
mov
orb
add
scas
mov
mov
stos
xor
out
scas
lods
push
popa
pop
mov
in
outsb
xchg
xorb
xlat
jl
cmpsb
cld
cltd
outsl
mov
adc
sub
adc
arpl
dec
xor
or
cmpb
add
cld
cmp
jecxz
sbb
dec
xor
stos
mov
pop
dec
sbb
add
dec
jge
xchg
test
bound
push
and
mov
lods
dec
inc
mov
leave
sbb
shlb
xor
xor
dec
or
scas
fs
cmp
orl
pop
dec
xlat
test
je
pop
jmp
pushf
sahf
inc
mov
or
lock
lret
sbb
mov
in
push
icebp
imul
mov
xor
sbb
push
inc
inc
inc
mov
mov
jne
mov
test
cmp
cmp
add
jmp
jg
sub
mov
push
hlt
add
imul
int
pushf
sbb
add
ds
pop
push
or
add
arpl
popl
orl
bswap
mov
ja
addl
dec
js
dec
ret
add
add
add
inc
push
orl
adc
inc
or
aad
xchg
std
into
ret
jnp
fildl
js
or
adc
mov
inc
push
jmp
adcb
xor
divl
dec
icebp
and
add
mov
mov
push
lahf
add
fiadds
lcall
lcall
xorb
add
lds
add
cmp
aas
mov
nop
xchg
mov
cmpl
push
ds
mov
lea
mov
adc
jecxz
xchg
adc
mov
loopne
jo
inc
push
push
push
jg
cmp
pop
fmull
mov
add
cmp
dec
dec
repz
shrb
cmpsl
pop
data16
aam
add
lret
inc
xor
sbb
loope
cmpsl
daa
mov
sbb
into
cmpl
jns
or
push
xor
add
ja
jnp
subl
mov
push
mov
mov
mov
or
sbb
mov
lahf
sbb
adc
jo
mov
sub
jns
jo
mov
or
or
cld
mov
aaa
cld
dec
dec
xor
cli
adc
fcoml
lahf
lock
rorl
imul
cmp
add
xor
xchg
into
mov
ror
and
mov
push
pusha
insb
add
je
add
pop
inc
loop
cmp
mov
cs
cmp
cmp
xchg
dec
imul
popf
test
loope
sbb
aas
faddp
adc
aaa
loopne
mov
or
aaa
mov
jno
push
mov
add
push
out
outsl
enter
mov
ret
mov
adc
mov
dec
and
sbb
and
and
and
imull
adc
push
mov
and
iret
push
stos
pop
jno
sbbb
orl
repz
or
ss
loop
and
cmp
fists
push
mov
test
mov
int3
push
cli
in
mov
lods
add
and
pop
mov
xor
dec
scas
add
xchg
cmpsl
cltd
sbb
aas
dec
dec
mov
inc
or
or
cmp
and
or
nop
rcrb
inc
ss
or
jne
pop
mov
pusha
mov
jnp
xchg
cmp
add
lock
aas
mov
sbb
jno
sbb
mov
cmp
add
test
sub
mov
adc
add
push
icebp
stc
add
xor
mov
add
cmpsb
sbb
dec
dec
pop
pop
xor
lcall
and
dec
dec
in
push
pop
sbb
outsl
cmp
stc
or
int3
call
sub
out
frstor
mov
xor
xchg
ljmp
sbb
repnz
lret
sbb
in
ds
cmp
pusha
rorl
jmp
test
ds
xchg
ljmp
add
add
ja
cmp
ffreep
stos
scas
lret
cmp
aas
inc
lcall
ja
xor
dec
sub
jl
or
movsl
push
js
mov
sbb
add
pop
pop
lods
and
adc
add
insl
arpl
adc
dec
jae
js
iret
mov
jmp
jb
adc
push
shll
pusha
or
gs
mov
xchg
lcall
sahf
adc
je
mov
or
cwtl
cmp
xchg
sbb
push
gs
cmp
insb
sub
add
aas
inc
cmp
sti
testb
inc
enter
adc
fists
xchg
shrb
les
xchg
mov
mov
xchg
or
outsl
xchg
sbb
test
add
clc
jne
inc
cmc
xchg
jbe
adc
sub
jle
repz
adc
sbb
jle
add
cwtl
mov
xor
xchg
int3
xchg
cmp
xchg
push
add
sub
or
hlt
insb
repz
sbb
sub
or
jno
add
jns
aam
imul
dec
les
pop
shl
es
dec
lods
mov
rcrb
dec
clc
and
jp
mov
mov
mov
ficompl
nop
cmpsl
inc
notl
jno
pop
cmpsb
push
dec
ds
mov
push
add
ss
subb
push
add
or
test
or
adc
add
sahf
lods
aad
pusha
test
out
test
loopne
mov
add
outsb
pop
in
outsl
add
add
insb
aaa
loope
arpl
add
cs
cwtl
aas
jae
fwait
or
popf
es
pop
ret
pusha
sub
push
adc
push
or
pop
sbb
sahf
sbb
sarb
fcoms
jnp
out
cmp
pop
enter
mov
or
add
dec
scas
dec
add
or
lock
xor
test
mov
lods
lods
sbb
in
jecxz
in
cmp
mov
jecxz
fidivrs
lods
in
inc
jb
mov
scas
jb
int3
jae
jmp
push
xchg
cwtl
mov
rep
aad
xorb
lret
jbe
push
xor
pusha
pop
fildl
adc
aad
mov
rorb
sub
mov
mov
adc
out
sbb
in
sbb
repz
sbb
sub
int
rol
call
sbb
aam
pop
adc
lret
gs
jno
add
outsl
push
inc
dec
call
scas
push
mov
hlt
mov
out
dec
cltd
sub
push
jo
adc
dec
fcoms
sbb
pop
inc
add
in
mov
add
mov
rcrl
jmp
mov
mov
es
sbb
inc
cmp
jecxz
call
mov
jge
clc
sbb
jg
dec
sbb
inc
iret
or
or
jo
or
add
add
mov
les
adc
bound
mov
sub
subl
pop
maxps
pop
or
sahf
push
sub
mov
pop
sub
sbb
lahf
es
enter
ficoml
subl
lock
sub
sub
mov
mov
mov
and
faddl
icebp
xor
push
test
add
cmc
fs
xchg
out
jnp
jo
aam
ret
jnp
imul
add
inc
cmpsb
sti
jecxz
xor
gs
cs
and
xchg
sbbl
nop
mov
std
shl
shlb
sub
dec
std
pop
mov
or
call
test
insb
cmp
sub
mov
dec
jl
jbe
cmp
cmp
daa
mov
popa
push
adc
movl
ljmp
pop
mov
sub
jbe
sbb
mov
cmpsb
addr16
mov
push
mov
jp
mov
and
lods
xchg
sarb
lret
es
push
jle
jmp
pop
mov
cs
imul
and
shlb
orb
sub
cmp
xchg
xchg
outsb
shll
loopne
lret
aad
imul
push
inc
push
andb
jecxz
pop
jo
sbb
outsl
xor
and
in
scas
adc
adc
mov
lcall
or
sbb
dec
and
jb
je
jecxz
xchg
sub
xchg
loopne
cmp
pushf
or
jmp
add
imul
fwait
lea
dec
mov
mov
enter
lods
jb
mov
mov
or
pop
sub
mov
lret
push
mov
pop
outsb
outsb
pop
push
cmpsl
lret
mov
cmp
xchg
adc
dec
jne
cmp
ds
imul
xor
and
pop
int3
and
sub
mov
clc
pop
popa
loopne
xchg
clc
in
pop
jecxz
xor
push
pop
cvtpi2ps
sub
add
xchg
sbb
dec
in
add
pop
test
jecxz
mov
push
jle
sub
dec
sbb
mov
sbb
pop
les
sahf
jae
or
cmc
or
cld
jo
dec
mov
cmp
push
mov
inc
mov
std
out
sub
and
xor
imull
sub
pusha
pop
shll
in
or
push
into
cli
bswap
inc
sti
mov
add
add
mov
shl
adc
lods
jns
mov
sbb
setns
movsb
jbe
je
jbe
and
cmp
repz
movsl
push
push
push
jnp,pt
inc
sbb
movsb
adc
cmp
push
sub
xchg
lret
lcall
pop
push
popa
and
xchg
inc
in
add
into
inc
scas
in
push
mov
nop
rol
jg
es
push
mov
imul
movsl
daa
and
lds
jo
in
hlt
fistl
daa
jl
insl
aam
insl
cmp
mov
mov
xchg
inc
xchg
pop
cmp
aam
inc
jp
divb
ret
inc
into
sbb
cs
xchg
dec
mov
inc
inc
lock
push
push
or
push
sar
rcrb
pop
movsl
sbb
test
pop
fistpll
mov
sub
push
lods
out
mov
jb
jp
dec
mov
inc
and
ret
jge
ret
xor
sub
mov
jo
xor
fmull
rorl
mov
sbbl
movsb
xchg
jge
jae
mov
mov
mov
xor
pushf
sub
popa
ret
aam
dec
popf
test
jb
or
or
lock
idivb
mov
mov
dec
jae
mov
push
mov
mov
or
sarb
and
cmc
loop
xchg
sahf
popf
cmc
enter
adc
lock
pushfw
xchg
and
inc
push
mov
js
rdmsr
movsb
or
orb
xor
gs
aam
dec
push
andb
mov
sti
ret
rcrb
fs
in
sbb
and
xor
xchg
xor
jmp
js
out
pop
popf
or
mov
lcall
dec
loop
inc
and
add
pop
xchg
cmp
fadds
clc
inc
pop
int
movsb
dec
xor
pop
mov
xchg
pop
xchg
xchg
rorb
int
mov
pop
cmp
inc
out
push
data16
jae
fwait
inc
xchg
test
xchg
das
shlb
lock
lods
mov
jo
sub
aam
leave
inc
mov
jmp
or
mov
dec
xorl
jmp
or
mov
dec
adc
xor
out
add
push
or
jb
fisubs
mov
icebp
sub
cltd
or
std
cmp
xchg
pop
rcl
and
add
cli
adc
adc
sbb
pop
add
mov
sahf
ds
in
mov
aam
sbb
add
in
movsl
dec
mov
das
lret
mov
mov
jg
jmp
sti
mov
add
cmp
cmp
mov
out
fiaddl
adc
hlt
xorl
movb
scas
xchg
loope
xor
scas
shll
pop
pop
cmpsl
add
add
jae
add
jno
dec
push
insb
rcrb
shlb
jo
popa
mov
and
push
dec
xchg
fildll
icebp
mov
pop
cmp
call
nop
sbb
and
jno
add
xlat
loope
sbb
xorl
dec
sbb
jl
leave
sbb
popf
out
mov
test
rorb
addr16
ds
xchg
test
or
push
xor
pop
test
sbb
push
insl
sbb
and
xlat
ficomps
je
arpl
and
mov
inc
mov
addr16
movsb
ljmp
xor
mov
dec
cmc
xor
aaa
inc
sbb
push
pop
xchg
push
ljmp
xchg
mov
mov
jge
lret
mov
in
daa
into
add
aad
addr16
repnz
daa
mov
loope
shrb
mov
pop
inc
out
xchg
lock
daa
aaa
mov
mov
lock
jle
fldl
jge
das
xor
int3
inc
loopne
mov
inc
add
mov
pop
enter
shlb
sub
sbb
add
push
push
out
mov
mov
adc
sbb
lcall
cmp
cwtl
popf
pop
xor
in
int3
clc
add
in
cmpsl
cmpsl
mov
add
jle
retw
jecxz
ficomps
push
and
mov
ja
lret
pop
inc
cmp
popa
mov
lret
cltd
int3
xchg
fbld
push
shrb
ja
mov
ret
aad
shl
sbbb
mov
cmp
xchg
setg
mov
push
adcl
push
movsb
adc
pop
in
sbb
das
movsb
nop
not
shlb
sahf
rolb
cmp
mov
out
jo
or
mov
inc
repz
mov
push
add
movsl
sarb
and
pop
aad
adc
adcb
pop
cmc
jl
rorl
enter
cmp
clc
dec
fldpi
mov
jge
xchg
pop
imul
js
ret
rcl
rcl
or
jne
or
cmp
in
sub
fwait
loop
sbb
in
lds
push
and
call
outsb
ret
cltd
mov
xor
enter
ja
dec
cs
mov
pop
pop
sub
push
add
lahf
push
sbb
push
and
xchg
sbb
cmp
pop
inc
repnz
gs
mov
leave
arpl
or
shll
xchg
or
imul
std
push
mov
cli
push
cwtl
shlb
ja
cmpb
mov
or
dec
push
inc
mov
es
cmpsl
std
cmpsl
insb
scas
sbb
rcr
or
fldenv
sub
cwtl
pop
pop
lock
sub
push
mov
lods
ds
fildll
scas
dec
pop
jmp
sbb
pop
and
and
inc
insb
mov
movsb
pop
dec
xchg
xor
cs
add
or
or
push
add
pusha
pop
js
inc
imul
push
inc
or
inc
or
mov
push
xor
xchg
outsl
push
imul
mov
or
xor
movsl
testl
cmc
dec
dec
aad
andb
pop
test
inc
mov
xchg
mov
test
mov
mov
mov
xor
dec
inc
dec
push
sub
sahf
jne
test
imul
jge
subl
into
clc
cmpsb
jo
or
adc
inc
rorb
sbb
jp
aam
cmp
scas
inc
jp
jo
lods
leave
sub
cmp
dec
cmp
mov
aam
push
pop
adc
leave
repnz
test
inc
data16
int
rcrl
jo
pop
mov
ret
sbb
mov
cmpsl
adc
xchg
xchg
out
add
or
mov
test
cmc
mov
add
ljmp
loopne
popl
mov
push
outsb
inc
jecxz
clc
sti
pop
dec
sbb
pushf
jmp
xchg
jle
test
or
ret
xchg
scas
push
inc
mov
pusha
mov
fmuls
dec
add
dec
sub
imul
dec
stc
push
jo
loope
dec
lods
jp
arpl
fstp
mov
test
or
into
sbb
jo
les
fisttpll
rorb
mov
adc
ljmp
inc
daa
xor
push
out
or
jne
insl
and
repz
aas
inc
bound
fldenv
pop
dec
mov
fiaddl
dec
inc
dec
repz
mov
adc
call
adc
add
inc
dec
sbb
fsub
push
je
and
push
repz
or
inc
ds
jnp
and
cltd
es
ljmp
add
roll
xor
sub
popa
movsb
cli
orl
push
clc
inc
add
dec
call
xorb
leave
loope
sub
lds
push
xchg
popf
xchg
cmp
inc
pop
xchg
inc
ljmp
fldenv
testl
adc
sbb
popa
mov
nop
in
in
lock
rcrl
enter
mov
inc
lret
pop
xorps
push
dec
rcll
dec
popl
aad
movsl
in
add
mov
add
adc
jp
daa
jo
pop
or
add
xchg
ds
shl
enter
mov
mov
adc
mov
sahf
mov
sbb
subl
dec
pop
mov
cmp
scas
out
xor
and
clc
aaa
push
iret
push
rolb
and
or
rorl
jle
lock
or
sub
enter
pop
and
push
add
inc
imul
inc
sbb
mov
xchg
stc
xchg
or
lods
push
xchg
repz
inc
clc
and
lods
pop
push
dec
enter
shrl
sbb
cs
in
or
cmp
inc
xchg
dec
xchg
xchg
add
loopne
addb
inc
outsl
add
ja
push
andb
lock
fnsave
pushl
mov
sbb
into
jecxz
push
xor
sbb
ss
loope
push
push
xchg
mov
pop
add
and
in
inc
inc
lock
pusha
sub
lds
arpl
je
inc
dec
je
ds
loope
test
cs
aas
push
mov
arpl
pop
imul
push
adc
push
sub
lock
fldcw
dec
mov
lods
adc
sbb
mov
outsl
dec
test
icebp
fsts
outsb
ret
xchg
rolb
push
mov
scas
xlat
inc
add
jne
xchg
gs
mov
and
jg
xor
fadds
int3
fisttpll
push
daa
xor
pusha
xor
xchg
lds
mov
jp
add
cwtl
ss
jle
scas
and
fmul
adc
mov
int
pop
outsl
loope
xor
inc
adc
andb
dec
add
insb
dec
subl
xchg
dec
ret
adc
shrb
out
andb
stos
mov
int
clc
test
rcrl
jp
adc
lea
mov
ds
je
or
mov
shll
or
ja
test
cmp
mov
mov
jle
mull
pop
jle
add
daa
sub
sbb
cmc
repnz
mov
movsl
sbb
add
stos
orl
pusha
notl
jo
repz
or
jnp
repnz
mov
dec
mov
sub
mov
push
mov
inc
mov
cmp
adc
mov
fsubs
inc
sbbl
add
add
xchg
cmpsb
push
xchg
adcb
jmp
js
popf
loope
push
aaa
add
mov
cmpb
jne
addb
xor
jmp
je
mov
mov
inc
push
subb
and
add
dec
leave
add
jbe
cmpsl
and
mov
push
sub
mov
add
xor
ret
xor
fisubl
hlt
fistpll
aam
xchg
push
xor
and
sbb
add
or
mov
mov
sarl
fisttps
dec
sbb
ret
fsubrp
xor
and
test
or
xor
xchg
adc
sub
adc
loopne
mov
nop
loopne
addb
push
dec
rcrb
addl
jbe
push
dec
cmp
pop
popf
push
jnp
sub
and
and
push
jmp
cmp
lock
xchg
mov
and
scas
sub
das
shl
stos
pop
inc
mov
bndldx
push
add
std
adc
mov
ss
fucompp
pop
cmp
leave
dec
jo
inc
enter
add
scas
rcrb
mov
sarb
into
sub
imul
mov
dec
cmp
shlb
mov
std
mov
mov
stos
es
xchg
and
jp
add
fwait
enter
mov
lock
dec
aas
jp
adc
mov
sti
or
mov
mov
rcrb
pop
ljmp
mov
jl
sbb
add
cmp
js
mov
mov
push
aas
push
rorb
insl
dec
lret
mov
cmc
xlat
inc
enter
addr16
push
push
mov
icebp
clc
shlb
aam
lret
movsbl
out
fstpl
cmp
ret
lock
add
mov
sahf
shlb
push
dec
dec
add
scas
mov
xchg
sbb
ja
inc
mov
add
lret
pushf
pusha
ds
or
jo
dec
nop
out
pusha
sub
outsl
or
sbb
sbb
jo
enter
imul
xchg
rolb
pop
inc
and
in
jne
adc
jb
jae
mov
es
ds
jl
sbb
jno
mov
js
add
in
mov
ficompl
push
cmp
inc
movsb
xchg
lcall
mov
mov
aas
push
jae
ret
subb
enter
bsf
jle
popa
push
fwait
aas
inc
shl
or
rclb
mov
xor
add
cmp
fs
sub
push
dec
xor
or
sub
inc
arpl
adc
mov
dec
ret
add
lahf
pop
add
inc
addr16
and
cmp
nop
push
scas
test
shll
dec
cmpsb
xor
cmp
add
ret
ds
and
add
sbb
lock
aas
pop
and
loopne
movsb
inc
inc
popa
in
test
ficoml
out
pop
adc
mov
subb
jno
pop
sub
dec
test
repz
outsb
push
xor
hlt
push
popa
jp
pusha
das
ja
incl
jp
cmp
rcrb
cmp
push
add
call
xchg
dec
mov
js
js
add
inc
adc
lods
sbb
jle
push
andb
fiadds
pop
mov
mov
jns
sub
into
xor
sub
in
bound
stos
ret
loop
xorb
jo
adc
movsl
ds
call
popa
hlt
mov
cmc
shlb
inc
repnz
or
jbe
mov
or
push
imul
or
shlb
lods
mov
sub
pusha
sub
mov
mov
jns
fdivrs
test
mov
mov
xchg
push
ret
hlt
cli
sbb
lock
xlat
push
adc
jecxz
dec
jbe
xor
mov
xchg
dec
and
cmpsl
inc
add
sahf
inc
mov
ds
mov
mov
ljmp
imul
push
pop
adc
and
cltd
pop
popa
push
xor
cmp
inc
rcrb
push
mov
pushf
outsb
pop
inc
movsb
and
lods
push
scas
mov
jno
mov
pop
cmpsb
push
push
pop
pop
fwait
enter
pushf
aas
pop
scas
or
or
int
push
stos
gs
adc
jae
ss
cmpl
bound
lcall
ljmp
add
jmp
push
test
into
ja
out
aad
clc
dec
ds
fisubrl
mov
ret
cmpb
mov
mov
pop
push
jno
sahf
add
pop
add
lods
xor
push
les
pop
xor
adc
lcall
jmp
inc
arpl
mov
or
subb
fiadds
pop
mov
leave
fwait
pop
ss
and
jno
xor
or
movsl
mov
mov
push
pusha
mov
dec
add
dec
adc
aad
adc
mov
xor
addb
add
xor
add
sub
dec
aas
mov
sbb
jge
les
xor
mov
sub
repnz
pop
adc
mov
sub
sahf
cmp
mov
cmp
loope
js
nop
push
ret
xchg
lcall
jbe
adc
push
inc
dec
push
mov
lods
mov
mov
mov
sarb
push
shrb
push
pop
js
adc
vmread
lahf
xor
pop
test
fldcw
cmp
in
ljmp
fimull
js
fdivrl
inc
adc
mov
mov
pop
cmpsl
pop
decl
push
mov
pusha
mov
or
pop
jl
add
daa
cmp
sbb
jg
mov
pop
jns
stos
adc
data16
push
push
jle
fwait
mov
or
or
dec
mov
hlt
clc
pop
sub
les
lods
sbb
mov
sbbb
addl
push
test
pop
jno
loope
push
push
mov
out
add
rcrb
adc
scas
test
dec
cmpsb
xlat
les
mov
xorl
push
adc
sarb
sub
mov
sub
sbb
push
rolb
xlat
mov
cld
aas
mov
xchg
test
xchg
pop
fmull
loopne
addb
ss
inc
test
inc
pop
add
leave
mov
pusha
xchg
xor
xchg
pop
pop
andb
clc
pushf
imul
and
ret
xlat
add
xchg
loopne
or
jmp
lret
and
push
cli
ds
je
fwait
mov
leave
mov
cwtl
data16
dec
aam
pop
loope
adc
push
pop
gs
cwtl
sbb
pusha
cmpsl
roll
mov
loope
jmp
mov
mov
mov
and
push
dec
adc
jl
push
popf
xor
mov
mov
ss
cmp
cmp
leave
cmp
mov
mov
jp
mov
lret
js
hlt
cli
mov
xchg
pop
addr16
mov
push
cmc
or
stos
test
xor
push
add
lods
rorl
jmp
add
shlb
rsqrtps
adc
add
maskmovq
notl
test
pop
popf
or
loopne
fildll
cmp
popa
or
sub
inc
stos
js
and
int
cmp
ljmp
in
fsts
test
mov
xchg
mov
push
pop
sbb
js
add
jo
and
inc
or
sbb
mov
sbb
mov
pop
cltd
sbb
jp
mov
in
adc
jecxz
push
ds
mov
ljmp
sub
xorb
adc
cs
add
mov
xchg
xchg
mov
adc
cmp
push
loopne
adc
push
inc
scas
les
in
popf
stc
insb
xor
fcomps
call
lock
out
mov
js
test
or
mov
mov
push
ja
add
inc
push
sub
add
imul
loopne
mov
dec
dec
inc
xor
sub
in
sbb
mov
add
sar
mov
push
cmp
repz
cltd
js
testl
xchg
and
fisubrl
loopne
int3
sub
mov
jmp
mov
and
js
es
sub
mov
sbb
sub
or
test
jnp
xchg
lret
roll
mov
call
or
ret
inc
add
mov
fisubrs
add
ret
call
add
dec
mov
or
arpl
cs
test
lahf
sub
pop
insl
sbb
sub
add
mov
ja
pop
cltd
rorb
movsl
xor
popf
pop
pop
into
push
and
cltd
pop
sub
xchg
cltd
jecxz
add
mov
int3
adc
ss
sbb
adc
insl
dec
jmp
sub
and
jae
mov
mov
dec
pusha
cmpsl
daa
sub
sub
aas
sub
outsl
inc
loope
xchg
clc
pushf
add
dec
das
mov
mov
imul
jl
scas
xchg
jb
xchg
arpl
sub
rclb
inc
les
push
or
or
ret
cmp
push
sbb
add
jae
dec
or
sub
icebp
mov
adc
add
inc
cmp
int3
dec
les
add
push
add
call
pop
cmp
push
rol
add
repnz
sub
pop
inc
jo
adc
xchg
adc
fwait
in
xchg
xchg
cmpsb
inc
and
dec
mov
fidivrs
test
adc
or
mov
mov
and
sub
xor
or
psubq
outsl
jmp
ret
imul
jns
mov
addr16
call
fadds
cmp
mov
ficomps
and
or
mov
out
leave
push
sub
daa
mov
inc
push
jne
dec
ljmp
sub
str
push
push
cmp
mov
push
adc
jg
addb
movsb
inc
stos
iret
push
or
mov
inc
inc
xor
jge
push
std
sbb
lds
lock
inc
add
mov
or
dec
sysenter
push
mov
sbb
or
iret
psubsw
xorl
pop
rorl
test
loope
push
inc
test
lea
inc
call
sbb
lea
inc
xlat
into
jnp
mov
mov
cmp
pusha
bound
sub
mov
cmc
xor
mov
mov
inc
xorl
sbb
cwtl
lcall
inc
scas
or
repz
lock
cmp
push
jecxz
or
cmp
in
adc
cmpsl
and
cmp
shl
and
mov
add
inc
sub
scas
test
sbb
fs
mul
fimuls
ja
pop
inc
pop
and
or
gs
aaa
push
push
jmp
jo
fs
outsl
jecxz
clc
fimull
lock
mov
adc
aas
mov
or
or
xchg
lea
loop
mov
mov
and
in
mov
pop
std
mov
ret
dec
mov
sbb
call
jmp
js
mov
jb
adc
and
lods
and
inc
ret
push
inc
xor
arpl
mov
push
dec
inc
pop
lret
lock
sti
push
inc
xor
sbb
adc
push
mov
rcl
xchg
fs
lods
gs
movsl
xor
inc
insl
push
pop
adc
add
jnp
sub
mov
into
leave
dec
or
adc
adc
ljmp
daa
add
pop
xor
sbbl
mov
fwait
and
mov
mov
test
add
dec
lret
dec
pop
mov
add
ds
fstpt
mov
fadd
add
cwtl
pop
shlb
add
aaa
dec
out
push
or
inc
ficoms
iret
mov
rorl
test
daa
orb
imul
mov
rclb
pop
lcall
push
inc
mov
fistps
lods
adc
push
lods
in
xchg
or
xor
mov
fmul
sbb
push
inc
js
jbe
ret
jo
push
xchg
jle
mov
fwait
push
push
dec
dec
adcb
pop
imul
pop
ds
lret
inc
fwait
jb
mov
mov
inc
rcl
nop
xchg
popa
inc
adc
sbb
and
mul
dec
stos
repz
ret
xlat
sbb
aad
add
shlb
out
ja
inc
cmp
xchg
ror
loop
push
cltd
test
test
or
enter
xor
cmp
pop
sbb
add
adc
enter
cli
dec
push
imull
and
popf
outsb
inc
shl
mov
jae
bnd
lret
jno
cmp
mov
jbe
mov
push
icebp
and
add
xchg
mov
and
jae
movsl
sub
jecxz
and
cmpsl
cmpsl
loopne
loope
mov
push
dec
mov
or
sti
out
and
pop
xchg
mov
andl
jecxz
mov
sbb
cmp
mov
mov
add
xor
or
mov
add
xchg
les
loopne
xor
mov
orb
sub
das
test
test
push
mov
dec
shlb
add
push
xor
imul
aad
and
jo
outsl
and
push
into
jno
jnp
inc
pop
push
or
mov
xor
mov
inc
es
popf
loop
mov
dec
faddp
pop
sahf
mov
jg
mov
rcll
and
sub
and
add
stc
push
adc
rol
mov
cs
push
repnz
lods
pop
loopne
and
sbb
mov
push
dec
xor
adc
scas
or
add
dec
sbbb
js
mov
popa
jo
daa
add
pushf
xor
jo
xchg
out
add
lds
lods
cltd
call
add
enter
jo
push
into
push
scas
in
rolb
jmp
xor
dec
lods
les
es
pop
cwtl
ret
push
xor
push
jg
mov
push
insl
adc
pop
sbb
push
jecxz
loope
pusha
sahf
fs
sbbb
cs
mov
xorl
inc
ret
movsl
inc
bound
cmp
sub
dec
sub
cmp
jb
movsb
mov
call
inc
or
testb
int3
mov
dec
rcrb
cwtl
jecxz
inc
xchg
ja
add
fistpll
mov
xchg
mov
push
jno
test
inc
dec
in
bt
ss
aam
adc
cmp
or
jo
xlat
aam
jne
ret
jge
inc
mov
fcompl
lcall
sahf
dec
ds
icebp
insb
push
cmpsl
aaa
ret
inc
out
mov
bound
or
cmp
cwtl
push
cmp
dec
mov
test
xchg
lret
leave
mov
repnz
sbb
inc
pusha
cmpl
mov
xchg
shlb
adc
aas
push
scas
sbb
push
inc
aad
ss
mov
movaps
mov
daa
adcb
or
adc
test
popl
mov
inc
mov
int
fyl2x
icebp
dec
adc
loopne
and
enter
cmpsb
mov
mov
or
dec
push
mov
pop
add
cmp
stc
jg
and
cmpsb
sbb
popa
insb
xchg
adc
or
mov
cmc
push
outsb
mov
insb
lods
and
std
icebp
push
pop
ret
jo
or
outsl
sbb
clc
nop
popa
add
inc
sub
movsl
and
call
ret
addb
pusha
lea
sub
scas
hlt
mov
pushf
jne
mov
lret
xchg
dec
movsb
xchg
xchg
xchg
adc
aaa
sub
mov
punpckhbw
add
mov
rcrl
push
daa
or
and
mov
dec
popa
loopne
xor
outsl
sbb
inc
mov
test
add
push
cltd
lea
push
ljmp
xchg
adc
sbb
and
arpl
nop
movsb
push
jnp
sbb
mov
jmp
ljmp
mov
cmp
xchg
divl
mov
loope
xor
mov
pop
leave
lods
mov
cmp
cmpsl
imul
outsl
sbb
roll
sub
xchg
dec
mov
mov
sbb
cwtl
sub
add
movsl
mov
int3
push
dec
orl
pop
and
xchg
ret
sbb
sbb
jge
ret
es
dec
mul
sbb
dec
pusha
mov
cmp
push
nop
sbb
int
pop
es
adc
dec
movb
add
push
ja
arpl
adc
data16
clc
or
fiaddl
jle
add
push
or
mov
pop
add
cmp
add
loopne
rcll
sub
repnz
jl
push
or
xlat
cmp
sub
outsl
push
sbb
fwait
movsb
sbb
push
dec
insb
adc
push
sbb
xor
ds
cmp
adc
xor
fs
orb
hlt
scas
sarl
dec
mov
imul
or
mov
lcall
inc
add
mov
adc
fs
cli
in
cmpsb
fmul
ja
adc
or
xor
pop
pusha
mov
adc
ja
adc
jnp
add
pusha
ljmp
jbe
jecxz
cmpsl
pop
sub
mov
fxch
scas
mov
call
into
mov
jne
aad
mov
and
or
inc
push
or
adc
sbb
outsl
imul
out
mov
add
clc
insl
les
xchg
inc
mov
sbb
scas
cs
mov
adc
xlat
das
jmp
lock
mov
mov
mov
es
dec
fs
jl
cwtl
xchg
mov
pop
jecxz
mov
mov
aam
push
jne
and
or
sbb
in
das
sub
fimuls
test
inc
inc
and
mov
adc
and
daa
dec
addb
dec
mov
or
pop
xchg
cld
add
loope
jbe
movsb
out
stos
xor
inc
leave
add
shll
adc
and
fstp
ss
aad
and
ss
add
and
aas
dec
sbbb
pop
jb
dec
mov
adc
adc
mov
lods
inc
mov
and
inc
inc
add
adc
push
or
adc
inc
sbb
in
inc
push
call
sub
mov
jne
aam
xchg
mov
push
gs
sub
xchg
dec
inc
pop
adc
and
or
push
loope
and
push
jle
iret
xor
popa
xchg
aam
adc
or
mov
dec
lea
inc
lods
cmp
in
dec
je
mov
outsb
jb
imul
nop
xor
xchg
mov
loope
pop
loope
test
or
xor
stc
cmp
adc
dec
jnp
add
arpl
pop
xchg
adc
rcrl
pop
sub
mov
fidivrs
mov
sbb
add
lock
imul
test
ret
push
aam
add
call
or
insl
mov
inc
adcb
adc
jo
add
movsb
xchg
ret
pop
lahf
dec
and
mov
fdivrl
sti
xor
mov
stos
push
aas
andb
cmpsl
aas
push
pop
jp
add
push
jbe
pop
mov
lods
js
pop
stos
dec
and
or
cmp
sub
mov
or
lret
dec
aad
ficoms
ss
mov
add
and
ret
out
jmp
mov
jecxz
cmpsl
repz
jecxz
pop
imul
mov
roll
adc
ja
mov
jno
lahf
orb
xor
xchg
add
cmp
pop
mov
xlat
jno
push
dec
clc
adc
icebp
dec
and
loop
loopne
cmp
adc
cmp
bound
xchg
pop
inc
fxch
add
sbb
adcb
push
movb
in
sbb
xor
je
pop
dec
loopne
loopne
jns
repz
loop
or
das
mov
jecxz
sbb
pusha
inc
push
scas
mov
adc
arpl
hlt
and
or
cmpb
mov
and
imul
es
stos
por
xchg
rorl
xchg
fistpl
ss
movsl
int3
sbb
xchg
pop
stos
add
aas
clts
dec
aad
xor
inc
fldt
imul
fcos
push
jnp
push
pop
mov
pop
clc
push
inc
inc
addl
or
push
popa
sub
aas
sub
fs
arpl
push
sbb
mov
stos
adc
and
xchg
loop
cmpsb
jo
xchg
sub
imul
cmp
pop
sub
loopne
xor
sbb
mov
in
ljmp
neg
sbb
add
cwtl
jo
adc
jne
jne
bound
lock
jnp
scas
fsincos
mov
cmp
xchg
aas
inc
int
dec
lds
orl
dec
in
adc
adc
stos
arpl
add
test
jp
mov
mov
in
dec
aas
lahf
jmp
lods
add
pop
xor
push
and
add
call
fcomps
out
jbe
push
jecxz
icebp
call
std
push
mov
rcll
icebp
aam
daa
jbe
dec
mov
mov
push
sub
or
or
inc
sbb
stos
scas
int3
mov
lahf
cmp
inc
xchg
daa
push
mov
stos
jmp
cmp
das
invd
fbstp
je
loope
sub
mov
sub
loopne
mov
add
dec
mov
pop
sub
push
movsl
call
in
push
xor
stos
nop
mov
dec
jmp
js
lret
int3
loop
sbb
inc
repz
mov
cmpsb
add
add
in
mov
sbb
arpl
sbb
mov
fiaddl
xor
pop
cmpsl
rclb
mov
repnz
add
popa
or
cmp
or
mov
xchg
out
popf
fnstsw
outsl
add
add
bnd
pop
test
xchg
mov
and
sarb
subl
push
rcl
pop
sbb
fwait
imul
lds
lods
pop
and
ret
mov
mov
mov
out
sbbl
mov
repnz
push
mov
imul
cld
inc
push
adc
jl
leave
push
mov
add
xor
je
inc
jge
pop
and
pop
inc
xor
jbe
add
or
addr16
jbe
addr16
js
sbb
sbb
stos
mov
cmp
mov
xor
mov
dec
subl
std
xchg
scas
add
fdivrl
sbb
shrb
pop
and
cmp
call
jbe
ds
xor
lock
xchg
mov
adc
bound
call
mov
and
bound
or
dec
xor
jo
icebp
test
adc
xorb
mov
mov
addb
add
jmp
pop
mov
inc
add
sbb
lods
mov
xchg
add
test
outsl
mov
or
xchg
mov
addr16
loope
dec
jno
cmp
or
mov
cmp
test
aad
adc
mov
mov
add
rcrb
testb
rorb
shl
test
mov
jo
add
push
cmpb
push
dec
adc
cmpsl
xchg
sub
unpckhps
call
jecxz
std
add
and
negl
les
daa
data16
jb
lods
or
cld
loope
jl
outsl
imul
push
cmpsl
pop
mov
adc
sbb
rolb
out
mov
insl
imul
ds
sub
imul
xor
push
mov
xchg
and
push
and
push
pushl
push
sbb
add
add
adcb
enter
or
daa
mov
pop
or
inc
daa
jmp
inc
dec
lock
movsl
inc
mov
jl
enter
int
mov
dec
pop
mov
mov
sbbb
push
push
dec
xor
fistpl
dec
mov
stc
jo
aaa
sbb
adc
roll
mov
orb
mov
mov
testl
rolb
cmovb
ret
enter
push
or
sub
and
xchg
int
sahf
jmp
push
inc
das
cmc
or
mov
mov
loop
dec
dec
inc
addr16
adc
adc
dec
dec
mov
imul
inc
sub
sub
xchg
adc
or
mov
outsb
jmp
arpl
inc
pushf
lahf
add
mov
clc
add
orb
repz
je
into
sbb
xor
add
sbbb
and
jle
xchg
xchg
sbb
fwait
in
cmp
add
add
xchg
cmp
out
lods
lret
fwait
test
sbb
mov
pop
icebp
xchg
add
stos
shlb
mov
push
add
sub
scas
inc
dec
jecxz
movsl
and
and
push
dec
dec
and
cmpb
cmp
sar
lahf
dec
nop
pop
dec
dec
cmp
sub
jmp
xor
popf
xchg
mov
nop
movsb
lahf
inc
sub
xor
and
bound
test
lret
xor
add
ljmp
popa
mov
add
sub
popf
test
in
jnp
aas
pop
inc
pushw
dec
sti
std
shl
and
pop
cmpl
push
lret
and
push
inc
call
mov
add
mov
mov
add
movsb
xchg
mov
push
andb
xchg
jb
sbb
dec
pop
pop
imul
cmc
mov
mov
test
dec
dec
mov
mov
dec
mov
lods
cmpsb
scas
loope
and
ret
mov
arpl
imul
cmp
mov
jmp
dec
in
xorl
or
sub
pop
jnp
add
add
rclb
mov
aas
or
or
jnp
sbbb
xchg
sbb
subb
pop
cmp
rorb
push
dec
and
lods
jp
scas
sub
insb
inc
xchg
fsubl
inc
out
mov
and
sbb
enter
repz
loope
cli
cmpsb
or
addr16
cmp
or
jmp
popa
inc
and
es
add
mov
aam
add
loope
push
or
inc
ret
adc
xchg
aaa
sbb
add
sub
jmp
dec
mov
pop
lret
cmpsl
cwtl
sbb
ret
and
jge
sbb
jns
inc
jp
sbb
mov
fadds
loop
scas
add
loopne
leave
scas
adc
das
push
jmp
popa
xor
fldcw
mov
into
mov
pop
and
les
out
inc
loope
notl
in
nop
xchg
jmp
and
pop
add
mov
subl
pop
repz
push
stos
and
xchg
fldl
inc
lods
dec
lds
jl
stos
pop
call
dec
mov
add
movl
stc
lahf
fnstcw
adc
sbb
xlat
jge
inc
or
cmp
push
adc
shlb
mov
pop
pop
pop
mov
inc
mov
negl
jo
es
dec
jg
xor
fstl
es
inc
rorb
push
jb
and
ret
or
addl
cli
push
adc
xchg
mov
dec
lret
out
sbb
cmpsl
dec
dec
cmc
ficoml
sub
jmp
cmp
push
ret
or
push
jo
lret
pop
fimull
iret
and
push
cmp
das
sbb
and
push
in
rolb
loope
pop
cmp
imul
out
sbb
dec
jb
sbb
loope
adc
or
shrb
in
lret
daa
stos
punpcklbw
or
push
inc
out
bound
cmp
and
and
ja
xor
sub
icebp
outsb
pop
leave
ret
fwait
icebp
mov
jno
and
dec
les
outsb
cmpb
add
mov
lret
adc
call
idivl
in
movsb
rorb
cmp
sub
jecxz
cmp
outsb
jp
pop
shlb
out
mov
add
pop
pusha
out
lea
popa
pop
inc
sbb
cmpsl
sbb
add
in
dec
mov
push
xor
fadds
jg
pop
sarl
pop
int3
cmp
dec
add
sub
mov
push
fyl2x
sub
mov
jns
mov
sub
and
insl
or
cli
ja
or
out
inc
movsl
push
pushf
pop
add
push
stos
sti
and
dec
xchg
lahf
nop
xchg
xor
pop
inc
test
inc
adc
jne
sbb
xor
sar
mov
in
mov
arpl
jne
and
and
loopne
popa
outsl
push
ret
push
ret
movb
int3
inc
sbb
push
bound
xor
ret
xchg
add
push
jnp
pop
add
or
cmpsl
jb
scas
jo
outsl
push
stos
inc
pushf
mov
popa
sub
dec
adc
add
adc
pop
cmp
test
push
rolb
and
push
in
pop
sub
cmp
push
or
dec
dec
leave
mov
cmp
or
rorb
out
jb
ljmp
mov
ds
push
lahf
pop
or
adc
sub
fnsave
push
sbb
mov
loopne
xchg
or
and
mov
andl
push
mov
cmpsl
mov
jbe
arpl
lods
mov
cmc
inc
inc
ficoml
jbe
js
mov
lahf
inc
inc
rcrb
pop
add
jmp
mov
push
ror
push
push
add
or
pop
push
mov
jg
cmp
mov
dec
les
inc
je
mov
jle
dec
ret
inc
sub
sub
dec
ljmp
add
xchg
xor
mov
les
add
pop
xor
lods
cmp
cmpb
jg
or
aaa
pop
imul
loop
lods
test
inc
mov
mov
or
aaa
xor
mov
call
and
test
daa
sbb
test
lods
and
stos
cmp
addl
pop
push
leave
jae
js
test
sub
ret
pusha
nop
xchg
imul
pop
sahf
push
outsl
aaa
mov
test
loope
inc
add
jp
inc
shrl
imul
xchg
pusha
mov
add
loope
push
dec
or
loopne
mov
add
or
pop
enter
pop
dec
sbb
xchg
mov
andb
or
es
dec
leave
lock
dec
xchg
sbb
lds
mov
push
pop
jl
loope
in
orb
loope
out
jmp
xor
sub
ja
mov
mov
jmp
bound
pop
repnz
adc
push
push
mov
mov
xor
xchg
cli
mov
ret
loopne
filds
les
negb
mov
loopne
adc
hlt
dec
sub
les
ret
and
dec
lock
and
pusha
flds
arpl
mov
cli
pop
mull
daa
add
push
out
mov
jmp
scas
cmp
add
out
aam
sub
in
add
jo
lods
sub
sbb
pop
mov
mov
add
jno
mov
or
sub
dec
outsl
inc
subb
js
inc
mov
push
xchg
mov
icebp
push
fwait
test
fmuls
sbb
pop
push
stos
or
push
inc
push
adc
testl
dec
inc
je
push
sub
sbb
adc
jecxz
push
jo
inc
push
fcomps
and
imul
mov
push
mov
dec
jecxz
pop
or
xorl
mov
lahf
xchg
shll
jmp
ret
mov
mov
mov
jb
in
mov
adc
test
sbb
shll
xor
sbb
test
cmpsl
mov
sbb
add
popa
mov
add
mov
out
es
dec
lret
loopne
xchg
add
cld
xor
andb
lahf
sub
pushf
cmpsl
ret
addl
mov
test
and
aad
mov
rorl
mov
loope
sub
cmpsl
mov
jp
inc
xor
ret
jns
mov
call
xor
mov
add
aaa
sub
test
fldl
pop
ret
dec
lcall
orb
jl
pop
js
xor
lods
push
jl
dec
sub
daa
xor
mov
mov
lret
mov
and
dec
dec
sub
mov
add
xchg
dec
lret
js
xchg
inc
addl
push
sbb
pop
lods
mov
leave
ljmp
mov
sbb
adc
dec
pop
test
sub
add
dec
adc
movsb
pop
mov
fdivs
movsb
ss
fs
sub
bound
pop
insl
dec
scas
dec
mov
jle
shll
jo
sub
mov
into
cmp
loopne
faddl
test
add
add
aad
xor
outsb
fbld
popa
or
xor
pop
pop
mov
inc
inc
add
sbb
dec
std
loopne
and
mov
rorb
call
test
mov
xor
add
clc
mov
jne
shl
aaa
scas
rol
push
sbb
mov
ja
sbb
cmp
xchg
nop
clc
mov
roll
and
cwtl
jg
mov
pop
or
mov
lret
in
add
mov
je
bound
mov
les
jnp
adc
xchg
sarb
or
ss
and
push
dec
mov
add
sbb
movl
sbb
and
push
lock
sbb
and
gs
call
xchg
ret
pusha
xor
sbb
outsb
jge
sub
cwtl
mov
jecxz
fdivrs
insb
test
ds
or
xor
xchg
aam
xor
lret
mov
mov
xorl
scas
pop
subb
cltd
mov
out
adc
addb
jo
mov
and
ret
xlat
ds
add
test
inc
push
lods
or
mov
push
cmp
mov
popa
mov
sub
movsl
sbb
cmp
jnp
stos
or
or
mov
push
pop
lret
push
inc
arpl
sbb
dec
pusha
pop
and
xor
sarb
jo
add
lods
xchg
jno
ja
adc
jmp
arpl
rol
dec
nop
mov
and
sahf
xor
push
or
pop
adc
sub
and
std
jae
dec
pushf
add
repz
or
sbb
sub
outsl
pop
lret
mov
mov
push
sbb
or
arpl
mov
fistl
add
mov
or
mov
push
and
cmpb
cmp
test
dec
addr16
cmpl
sub
sub
addr16
stos
sub
fs
rorb
mov
mov
ja
inc
leave
movb
adcl
adc
mov
imul
pop
lds
fs
jne
push
mov
and
xchg
jo
xchg
ficoms
test
das
test
jns
mov
inc
and
data16
insl
je
insl
pop
sub
aaa
mov
xor
insb
ret
sbb
sub
cs
fwait
sbb
sub
stc
lret
arpl
sub
jmp
pop
movsl
or
fidivrs
inc
mov
jno
sbb
inc
imul
add
ljmp
jge
addr16
mov
jmp
mov
bound
je
sti
jne
ret
pop
lea
jae
add
lock
xor
jo
adc
mov
xorb
aam
lock
dec
addr16
fstl
aam
push
or
mov
and
sbbl
cwtl
fidivs
sbb
add
add
dec
sub
jae
pusha
xchg
add
or
int3
add
test
inc
lahf
add
mov
sub
imul
or
and
pop
test
sub
jge
inc
xchg
or
loopne
dec
pop
je
add
dec
in
add
enter
mov
fadd
lds
jae
sbb
cmp
sub
fdivp
test
loopne
mov
rcrb
jbe
mov
sbb
inc
in
insl
sti
or
push
orb
shll
das
xlat
out
sbb
das
popf
pop
lahf
aad
loopne
inc
or
add
add
fs
repnz
loopne
mov
mov
mov
inc
hlt
mov
add
add
nop
push
scas
pop
mov
push
fwait
mov
dec
push
sti
das
loope
data16
or
add
pop
sbb
in
jbe
mov
aad
mov
inc
xchg
rorl
mov
and
daa
cmp
sbb
clc
adc
pop
and
adc
dec
and
adc
jno
movsb
test
pop
mov
insl
fwait
xchg
int3
test
mov
jno
mov
push
adcl
es
andl
cmpsl
gs
fimuls
movsb
sub
xor
xchg
cmp
dec
sbb
dec
jp
pop
lahf
std
imul
mov
sub
movsl
push
arpl
fwait
lds
inc
data16
fisttps
adc
jl
sbb
lock
call
dec
setbe
dec
sbb
dec
xor
fstl
cmp
sbb
or
cmp
jne
add
push
push
inc
shrb
dec
add
movsl
or
jmp
mov
shlb
pop
sbb
jmp
test
aaa
jg
cltd
int3
call
push
lcall
mov
dec
push
adc
adc
push
je
adc
add
insl
int3
je
push
or
or
and
repz
pop
sbb
test
repz
push
push
add
cmc
xorb
sub
and
sbb
adc
and
xchg
clc
dec
jge
adc
sahf
dec
rcrb
rol
mov
stos
add
dec
cwtl
push
psrld
dec
mov
xor
push
imul
in
mov
sbb
xor
test
sub
stc
clc
pop
fs
sbb
pop
sbb
jge
imul
les
sub
mov
in
out
aad
les
mov
xor
cs
pop
pop
sub
loop
adc
out
or
mov
or
xchg
add
lods
and
test
pusha
sbb
and
nop
lret
inc
bound
jmp
add
adcl
dec
popa
mov
or
add
xor
sbb
dec
dec
stc
pusha
sub
outsl
push
imull
ret
shl
add
pop
xor
ret
sbb
or
les
sbb
push
push
pop
mov
data16
daa
jmp
mov
cmc
xor
add
shl
or
pop
cmp
imul
mov
cmp
xchg
add
les
and
ret
hlt
mov
inc
pop
adc
je
inc
mov
loope
ret
addb
mov
loopne
xor
js
add
push
mov
sbb
cltd
scas
in
jp
fcmovbe
fcmovnb
loope
arpl
testb
xchg
xor
jne
adc
push
and
push
dec
lds
sbb
jbe
push
xchg
mov
orb
mov
dec
mov
xchg
sbb
fwait
shlb
ss
shrb
cs
mov
stc
jge
mov
inc
out
scas
lods
inc
sub
ficompl
das
sbb
test
in
arpl
loope
sbb
xchg
test
pop
insb
and
dec
dec
scas
lcall
add
sub
and
stos
pop
fwait
inc
push
or
lret
jno
inc
jl
or
push
push
je
adc
inc
sbb
fwait
movsl
ss
mov
std
adc
in
out
mov
mov
stos
sbb
xchg
inc
clc
cmpsl
loope
mov
or
push
sar
push
adcl
adc
pop
sbb
mov
lret
xor
loope
add
shrb
pop
in
or
mov
jp
in
ja
inc
movsl
inc
ss
loopne
out
or
xor
stos
add
mov
jns
js
and
call
stc
mov
inc
jmp
inc
mov
imul
fwait
mov
call
jl
popa
in
mov
adcl
mov
mov
push
in
pop
or
aam
ret
lods
cmpsl
jmp
nop
hlt
insb
and
add
adcb
jg
sarl
and
test
xchg
aad
add
cmp
or
fldenv
ret
or
dec
xor
sub
stos
or
add
sbb
ret
fnstsw
rol
add
movsl
stc
push
bound
dec
sub
fsubrs
sbb
inc
or
and
insb
ds
or
je
pushf
punpcklbw
bound
mov
mov
fisttpll
jge
inc
mov
into
fdivrs
cmp
add
inc
aas
sarl
jo
inc
syscall
cmp
jge
test
jecxz
mov
cmp
sarl
pop
scas
and
lods
cli
adc
arpl
xor
js
push
movsb
push
mov
aad
inc
aad
js
sbb
stos
cli
mov
mov
xchg
dec
mov
cmp
xor
sub
cmp
add
insb
popa
adc
or
push
pop
icebp
addl
jno
xor
lret
lods
jp
pop
cmp
xchg
and
inc
pop
leave
pop
in
add
sbb
or
sti
stos
push
dec
test
inc
mov
into
ljmp
ret
leave
lret
test
xor
imul
mov
out
xor
xorl
mov
or
jmp
enter
cmc
call
pop
jecxz,pt
rclb
lock
fwait
push
mul
sub
movb
cmp
bound
lcall
xlat
sbb
jl
push
xor
xchg
add
add
pop
push
inc
and
xchg
inc
sub
xorl
daa
addr16
sub
push
dec
inc
mov
mov
push
jmp
xor
add
pop
mov
test
ficoms
mov
pusha
jmp
push
push
inc
pop
and
movsl
pop
xchg
or
test
ret
or
rol
stos
je
cmp
test
rcrl
add
ror
aad
xchg
and
xor
sbbb
gs
stc
inc
in
ret
lret
movsb
add
push
push
xor
pushf
insb
ret
hlt
test
shrl
ret
mov
mov
sbbl
xor
xlat
andl
cmpsl
cmpsb
and
xchg
dec
push
mov
dec
sbb
mov
shlb
cmp
and
sub
test
pop
sbb
inc
sar
daa
stos
or
orb
sbb
jne
xor
je
push
xchg
imulb
sbb
pusha
add
in
jl
negl
les
fstl
sahf
adc
loope
je
popa
and
pop
cs
cmp
inc
mov
test
pop
sahf
jp
and
xchg
adc
mov
js
inc
in
popa
outsl
add
shlb
pop
mov
xchg
fisubl
pop
daa
xor
mov
scas
jl
adc
mov
popf
sub
push
stos
sbb
jmp
or
fadds
add
pop
sbb
jmp
js
ret
adc
sbb
mov
shlb
cmp
mov
sbb
pop
mov
mov
cmpsb
push
iret
or
pop
negb
jecxz
sbb
ja
fldenv
lock
cmp
pop
les
int
jne
mov
test
or
fdivl
and
repnz
pushf
loopne
into
jge
inc
push
add
sub
mov
js
sbb
jbe
das
sub
shlb
xor
jecxz
push
xor
dec
and
cwtl
cwtl
mov
sbb
inc
sarl
sbb
daa
daa
sbb
cmp
cmp
adc
popf
out
lock
inc
xor
jmp
cmp
cmpsb
arpl
inc
test
xor
mov
or
cld
jge
ret
movsb
in
out
sbb
rcrb
lock
cmpsl
sub
or
ret
xchg
jnp
mov
cmpsl
xchg
rcrb
pop
xor
and
sbbb
push
mov
aas
lock
test
rolb
jo
repz
adc
cmp
icebp
loope
push
xor
cmp
mov
xchg
mov
dec
mov
js
aaa
nop
or
ret
call
sbb
xchg
mov
inc
adc
or
pop
fisttps
addr16
mov
int
cmc
jne
jno
push
shll
loop
or
jmp
orl
inc
pop
mov
pop
test
adc
or
mov
xlat
mov
adc
outsb
iret
adc
adc
cmpb
scas
add
mov
fnstsw
clc
sub
adc
cs
inc
arpl
sbbl
add
imul
js
xchg
and
jnp
stos
mov
push
pop
pop
sub
subl
adcl
and
add
add
lret
add
divb
cmp
or
or
lahf
adc
dec
cmp
mov
jae
sbb
jno
inc
mov
jae
aad
sub
push
test
pop
mov
or
jno
scas
cmpsl
nop
cmp
loope
test
cmp
clc
mov
test
sub
mov
adc
xor
mov
jo
daa
jnp
push
xor
lea
daa
arpl
sbb
dec
mov
gs
lahf
sbb
mov
cmpsb
and
jno
push
xchg
mov
pop
sbb
mov
stos
inc
bound
cmc
mov
and
dec
add
mov
lahf
dec
mov
dec
xchg
mov
insl
bound
loope
lahf
jbe
loopne
rcrl
popa
fldt
cs
jae
fmulp
mov
mov
jecxz
add
jmp
xchg
pop
sahf
push
test
xchg
test
cmp
adc
mov
bndstx
push
ret
mov
pop
pop
cmp
fdivs
or
mov
jb
or
jno
or
aaa
mov
nop
imul
fistpl
ljmp
jns
arpl
insb
sub
xchg
adc
add
std
mov
imul
sub
inc
pop
xor
pop
das
pop
mov
loop
dec
mov
sub
add
lods
stos
test
sbb
dec
les
adc
xchg
cltd
pop
fs
jge
xchg
sub
sub
call
insb
loopne
stos
push
mov
add
jb
jae
mov
imul
adc
sahf
sub
inc
popa
or
mov
push
in
mov
test
out
fs
je
es
fwait
inc
cmp
dec
mov
je
pop
mov
add
xchg
lock
insb
inc
sbb
scas
inc
shll
cmpsl
jno
jae
jmp
lock
or
dec
jno
jl
lock
lea
repz
rcl
lret
add
jno
mov
fld
rclb
je
imul
pop
adc
sub
cmp
ret
xlat
cmp
dec
flds
fisttpll
ffreep
mov
popl
push
cs
push
jg
xchg
lock
lods
push
mov
mov
inc
insl
mov
push
dec
cmpb
sbb
jge
cmpl
xor
insl
out
call
sub
out
and
pop
sarb
push
out
jnp
mov
jno
mov
incb
dec
cmp
in
dec
stos
lods
mov
mov
sbb
inc
rorl
and
or
es
sbb
pop
fwait
ret
insl
jnp
rcrl
loope
nop
nop
popf
dec
jnp
mov
pop
mov
jo
arpl
xchg
leave
arpl
inc
mov
in
ret
pop
jo
mov
xor
ret
or
mov
aaa
mov
mov
pop
fwait
lods
jae
jmp
enter
xchg
xlat
push
inc
jne
push
adc
cmpsb
ret
ret
into
dec
lret
cmp
mov
stc
push
pusha
test
adc
fcoms
stos
daa
jge
ja
outsb
or
mov
ja
add
or
xchg
jmp
add
sbb
enter
mov
pop
out
push
sub
and
or
push
pop
repnz
inc
ret
mov
daa
dec
stc
ror
shlb
adcl
enter
push
mov
inc
in
dec
xchg
ret
nop
xchg
xor
loope
cmp
mov
addr16
and
mov
imul
add
and
movsl
fadd
inc
pop
and
sub
cld
xor
sahf
mov
push
push
xor
add
lds
test
push
scas
and
je
test
dec
sti
mov
cs
aad
mov
dec
mov
inc
xlat
xchg
idivb
push
or
xchg
stos
pusha
sub
adc
je
mov
test
add
mov
xor
je
rol
xor
daa
jg
pop
pop
or
popa
orl
shlb
add
movsl
bound
adc
insb
jbe
loop
pop
icebp
mov
add
jb
dec
jnp
popf
in
sub
inc
sbb
scas
test
jno
sbb
mov
lods
dec
sub
loopne
jbe
dec
decl
sets
clc
mov
sbb
ds
pop
rcrb
xorl
sarl
add
je
sti
dec
js
inc
fwait
roll
in
ret
lahf
je
push
or
xchg
and
dec
inc
cwtl
movhps
movsl
stos
cmp
inc
sbb
hlt
or
cmp
add
cmp
fisttps
in
sti
pop
mov
popa
lds
cmpsb
pop
sbb
cltd
ret
into
out
xor
push
jge
jb
mov
cmp
cmp
lret
gs
pop
int
in
jbe
inc
fisttpl
into
push
fwait
add
outsb
int
jnp
and
pop
cmp
insl
rorb
inc
xchg
pop
jo
inc
les
adc
sub
xor
insb
sbb
inc
sbbl
pop
cmp
aas
lret
jge
fcompl
xlat
imul
add
mov
stc
inc
jns
int
test
addr16
or
insl
ss
mov
mov
cmp
scas
cli
dec
enter
pop
jmp
jo
xchg
mov
orb
in
jle
push
fwait
jg
ret
scas
xor
or
jae
into
ja
xchg
mull
sub
hlt
mov
jns
jnp
and
notl
data16
repz
mov
and
dec
testl
shl
popa
cmc
jge
test
adc
pop
out
aad
xchg
adc
cmp
push
pop
dec
mov
xchg
and
pcmpeqb
sbb
outsl
sti
pop
fstpt
out
cmpb
sarl
jl
add
mov
lret
pop
fadds
pop
mov
imul
ss
scas
shlb
cmpsl
js
int3
pop
jge
and
xor
mov
xchg
mov
jl
mov
cltd
lret
dec
mov
jns
push
loopne
adc
pop
push
out
push
adcb
add
nop
lret
xchg
popa
cli
cmpsl
or
rorl
cltd
inc
cmp
push
iret
xor
fcoml
xor
test
movsb
repz
xchg
stos
pop
adc
dec
mov
jnp
sbb
xor
adcl
pop
out
push
push
pop
xchg
push
ret
or
push
adc
inc
ds
fwait
mov
loope
movsl
add
push
add
movsl
push
ljmp
in
lahf
add
push
dec
push
mov
mov
xchg
or
xchg
jge
push
or
sub
xchg
outsl
lods
rol
or
inc
pushf
in
in
loopne
in
faddl
fcmovnbe
sub
mov
xchg
mov
xchg
add
jne
imul
aam
add
pavgw
aam
adc
stc
leave
roll
xchg
test
mov
lds
mov
pop
mov
leave
push
in
add
iret
repnz
divl
callw
inc
popl
mov
bound
jecxz
or
mov
sahf
dec
js
imul
cltd
dec
fcmovnu
pop
call
mov
insb
pop
and
dec
ret
mov
push
rcll
pop
mov
imul
cmp
shl
sbb
lahf
pop
pcmpeqd
inc
fs
add
roll
mov
jno
je
pop
rol
mov
jl
popa
push
dec
fstpt
sub
pop
xchg
push
int3
inc
mov
cmp
pop
popa
sub
mov
outsl
lret
sub
cmpsl
mov
and
jno
push
mov
test
hlt
xor
sub
ffreep
mov
arpl
jnp
push
ret
adc
jge
xchg
sbb
fisubl
jmp
stc
test
cmc
hlt
out
cmp
fcmovnu
inc
js
inc
lods
cmpsl
jge
dec
cmp
call
mov
ds
dec
and
ja
xlat
mov
filds
push
mul
cmp
ja
xchg
xor
cmpsb
adc
fldenv
cmp
xlat
cmp
inc
mov
adc
pop
pop
out
sbb
ret
push
adc
arpl
inc
dec
loope
push
pop
out
stos
adc
daa
vfrczpd
or
cmp
or
loopne
mov
dec
arpl
jne
lret
mov
xchg
mov
and
imul
in
shrb
push
sbb
idivb
xchg
movsl
inc
ret
pop
xchg
loopne
sahf
movsl
pop
loop
mov
mov
or
push
cmpsl
lea
scas
pop
cs
and
add
aad
mov
repz
dec
dec
aad
pop
adc
in
mov
jle
in
rcl
and
inc
inc
insb
mov
jecxz
aaa
sbb
add
xchg
jmp
ret
test
fs
mov
lar
add
cmp
jo
mov
dec
cmp
sub
dec
xchg
lock
add
dec
cmp
add
sub
and
adc
cmp
out
je
fldcw
add
insb
dec
add
push
xchg
dec
fcoml
ss
lds
jle
test
mov
xor
nop
inc
or
or
cli
jmp
or
ds
in
inc
hlt
filds
loopne
adc
xor
sub
aam
fwait
inc
mov
iret
or
xor
les
das
jp
add
mov
daa
inc
sub
cmp
push
push
fadds
lock
aad
aaa
jb
jne
xor
repz
mov
jne
jns
xchg
mov
ds
add
xchg
imulb
into
pop
mov
add
adcl
lods
inc
mov
outsb
pusha
orl
adc
popa
fwait
mov
cs
push
repz
fsub
lea
inc
cmp
scas
or
mov
and
ds
aaa
xor
addl
jecxz
insl
mov
dec
pop
push
push
dec
mov
xchg
inc
dec
test
mov
lods
imul
push
test
xchg
jbe
in
add
mov
sbb
pop
sub
or
dec
std
xor
dec
lock
adc
inc
cmp
add
add
or
cmp
sbb
js
push
xor
mov
dec
addr16
insl
mov
dec
sub
leave
mov
test
add
movsl
outsb
add
fs
adc
mov
in
dec
jmp
rclb
sbb
fnstenv
insl
mov
mov
dec
inc
and
jle
test
or
lahf
pop
cmp
cwtl
sarb
pop
jno
sbb
sbb
and
iret
ret
add
push
imul
sbb
push
popa
mov
cmp
sbb
fdivrl
jbe
lock
js
sbb
cmp
or
ljmp
mov
or
or
cmp
and
daa
xor
or
sbb
pop
test
aas
push
xor
shll
popa
inc
jnp
aaa
adc
mov
xchg
gs
rcrb
add
wrmsr
dec
ljmp
push
xor
push
sbb
dec
push
mov
jb
adc
push
sub
sbb
and
hlt
or
mov
dec
jmp
out
mov
push
mov
mov
pop
test
arpl
or
ss
xor
adc
cld
out
or
mov
jne
push
fimull
stc
aad
push
sub
xor
dec
push
jo
jecxz
mov
test
xchg
insb
or
movsb
xchg
leave
lret
mov
or
stc
int3
xor
les
jbe
add
mov
mov
inc
jnp
aam
mov
cmp
and
sbb
add
pop
in
or
sub
mov
adc
inc
pushl
loopne
aas
pop
ret
es
pusha
add
fisubrs
loope
pop
sbb
push
sub
loope
jmp
add
outsl
mov
in
clc
shll
xor
aam
fwait
iret
aam
sub
leave
sub
dec
das
inc
js
inc
dec
mov
imul
pop
loopne
les
mov
ret
adc
lods
jmp
and
pop
mov
cmp
push
sbb
addl
pop
dec
mov
cmp
lea
pop
loope
inc
aaa
testb
and
aam
data16
bound
inc
dec
dec
je
xchg
loop
jbe
push
jp
and
pop
fbld
inc
xchg
xchg
xchg
addl
pop
mov
dec
inc
ret
popa
int3
xchg
jb
xchg
xchg
pop
ret
es
add
add
in
leave
bnd
daa
mov
or
push
cmp
andl
dec
adc
sub
cmp
push
pop
out
out
inc
mov
imul
fiadds
jns
in
push
les
imul
xchg
repz
adcl
std
lret
push
inc
test
sbb
adc
cmp
ret
fidivrs
std
sub
ret
subl
mov
sub
jmp
shlb
and
lahf
es
aad
xchg
jp
dec
pop
mov
repnz
lret
inc
sarb
mov
mov
out
aaa
scas
mov
stc
movsl
daa
jno
std
mov
or
push
je
shll
adc
les
addr16
ss
sub
iret
add
dec
sub
outsb
push
mov
ljmp
hlt
movsb
add
cmpsl
jle
or
test
inc
lret
xchg
inc
add
xchg
mov
je
xchg
cmp
mov
xchg
mov
cmp
sub
sub
pop
jle
inc
or
lea
inc
dec
jmp
add
mov
push
xchg
loopne
pop
inc
or
movsl
pop
xor
push
xor
sub
xchg
mov
hlt
sbb
push
dec
pusha
sbb
dec
jecxz
jo
cmc
dec
jno
sbbl
fadd
mov
cltd
mov
movsl
cmp
and
adcb
rorb
lahf
fmull
add
sbb
push
faddl
inc
pusha
mov
in
loope
cmp
cmp
or
add
jno
xor
fcmovnbe
cmp
dec
mov
xchg
iret
lock
lock
mov
out
je
gs
sahf
clc
cmp
inc
stos
mov
pusha
jecxz
and
roll
inc
pop
hlt
in
mov
lods
ljmp
loopne
and
and
ret
jns
push
sbb
pop
xlat
jb
cmp
test
jbe
pop
xorb
fpatan
cmpsl
push
scas
xor
and
pop
xchg
xor
lock
push
test
jns
ret
mov
inc
dec
fildl
lret
enter
pusha
xchg
cmpsl
xchg
sbb
scas
inc
mov
js
popa
out
mov
pusha
arpl
sbb
jmp
scas
mov
and
cmp
sbb
pop
sbb
xor
xor
mov
and
mov
adc
mov
push
js
xor
sbb
dec
push
xchg
rcr
and
out
push
movsb
pop
test
cwtl
lods
pop
ss
cmp
pop
popf
or
jb
dec
pop
aam
and
aaa
loopne
sarl
adc
add
mov
xor
jb
push
mov
je
mov
push
or
adc
jo
xlat
loopne
adc
addl
cltd
lcall
dec
adc
adc
roll
push
jno
xchg
mov
inc
mov
dec
cmp
and
jbe
or
nop
dec
cmc
adc
test
icebp
int
pop
jo
and
and
jbe
mov
push
lret
fcompl
xorl
push
sub
into
sub
push
xor
cmp
rol
xor
sub
ret
jmp
dec
inc
call
fadds
in
mov
xchg
icebp
icebp
lock
icebp
ret
cmp
xchg
fdivrs
push
test
in
cltd
pop
add
jo
mov
lahf
jae,pt
lret
lret
fnstenv
dec
mov
adc
jae
popa
gs
push
sub
adcb
lret
pop
or
sti
iret
adc
imul
std
sbb
xchg
ljmp
je
lret
shrb
mov
mov
sbbl
inc
jge
add
lods
fidivrl
repz
and
and
push
sbb
xor
mul
add
cmpsl
jp
push
sbbl
cmc
push
add
xchg
pop
popa
outsb
jecxz
or
xchg
mov
mov
icebp
arpl
and
add
aas
mov
les
xlat
dec
add
test
mov
xchg
leave
xor
fs
or
movsb
and
cmpsb
outsb
decl
mov
mov
lods
pop
xchg
jnp
inc
sbb
loop
push
sbb
jno
sbb
jnp
mov
jl
test
pop
pop
jg
sahf
aam
adc
inc
popa
push
inc
push
sbb
sbb
jno
insl
lcall
sbb
pop
and
lods
jecxz
and
push
and
dec
pop
inc
add
pop
inc
test
push
call
push
cmpsl
push
push
push
cmpl
adc
fcoms
test
rcll
inc
mov
add
lock
sbb
imul
dec
dec
mov
hlt
fwait
inc
mov
inc
aas
sub
jo
mov
lock
push
dec
cmpsl
pop
cmp
sbb
push
insb
enter
adc
inc
cltd
jmp
sbb
adc
and
add
sub
fbld
add
ret
inc
mov
imul
sbb
mov
or
mov
mov
shll
and
push
and
mov
xorb
lret
movsl
adc
int
lahf
mov
xchg
mov
cmp
ljmp
xchg
add
nop
push
cltd
sub
aad
mov
and
loopne
cmp
filds
call
push
dec
inc
sbb
push
adc
cmp
sub
add
add
lret
sbb
das
inc
rolb
add
push
fxch
lock
insl
ficoms
loop
push
inc
pop
cmpsl
cld
mov
rorb
imul
jnp
mov
testl
js
inc
rcll
mov
xchg
push
sbb
test
push
gs
inc
mov
pop
cmp
xchg
outsl
lods
das
ret
dec
fadds
sub
insl
sbb
lret
je
pop
and
out
mov
xchg
mov
iret
push
je
or
push
rsm
mov
imul
ds
inc
cmp
add
stos
jns
dec
scas
xor
and
sbb
mov
xchg
es
popa
dec
shrb
gs
lds
jno
jecxz
fstpt
inc
mov
lods
inc
cmp
lahf
orl
popl
in
pop
pop
ret
mov
insb
mov
icebp
sbb
or
ror
lea
cmp
push
sbb
clc
xor
ja
cltd
incl
push
xchg
imul
js
loope
stos
mov
and
or
or
dec
lret
and
push
fsubp
lahf
rolb
adc
jle
lods
pusha
inc
jmp
xchg
push
ret
add
push
xorl
dec
ret
outsb
add
add
mov
cmp
jb
dec
mov
mov
xor
adc
std
mov
mov
sub
jo
mov
sbb
pop
ljmp
pop
jno
pop
dec
mov
push
push
push
and
push
push
jbe
ds
xchg
jo
adc
jbe
scas
pusha
cltd
add
fiaddl
mov
xor
stos
loop
mov
cmpsb
lock
cmpb
stc
inc
cmp
xor
loop
xchg
movsb
ljmp
das
dec
mov
pop
pop
lretw
ss
lea
push
in
mov
ss
jae
push
outsl
xor
inc
imul
loope
inc
or
lret
fdivrl
add
xor
sbbb
into
cs
cmp
lcall
mov
adc
or
xchg
clc
repz
jnp
es
xchg
add
lcall
hlt
dec
cmpsl
dec
roll
mov
dec
gs
mov
imul
pop
aad
jge
sub
stos
mov
add
in
pusha
sti
sbb
lods
clc
cmc
cmpsb
fcmovb
or
into
addr16
or
add
loope
aas
add
imul
mov
jnp
push
fisubl
pop
pop
push
aam
cmp
or
ds
jb
fwait
mov
push
rolb
mov
pop
pusha
lcall
mov
push
cmp
iret
adc
add
adc
pusha
fdivrs
mov
mov
sub
cmp
and
mov
mov
mov
cmp
dec
sub
adc
aas
dec
dec
cmc
mov
testb
xchg
sub
cmpl
lods
jl
pop
outsl
dec
push
add
adc
dec
out
cmp
cltd
sti
pshufb
lcall
mov
daa
or
and
rcrb
mov
shl
xchg
sahf
xorl
and
mov
loope
pop
pshufw
xchg
mov
add
or
inc
por
xchg
aam
stos
inc
dec
mov
pop
clc
adc
mov
outsb
sbb
and
ret
push
movsb
clc
mov
subl
add
stc
jle
rolb
adc
jmp
and
xchg
jne
pop
or
and
dec
sbb
jo
test
loope
sub
pop
xchg
sbb
push
dec
mov
lcall
xlat
xorps
das
mov
add
dec
add
add
inc
cmp
add
sub
add
mov
out
or
xlat
inc
inc
arpl
arpl
out
push
sbb
adc
xchg
cmpsl
cs
cmp
pop
xchg
and
ret
jb
mov
mov
int
inc
jg
jno
repz
mov
jmp
adc
inc
sbb
adc
dec
les
sbb
ja
push
mov
push
or
ror
orl
stos
push
cmp
out
shll
xchg
pop
imul
xor
mov
jo
add
inc
sbb
xor
mov
ss
xchg
lock
insl
jae
add
pop
inc
mov
ja
cld
mov
jge
jae
fbld
mov
in
iret
jne
xchg
sub
adc
cmp
xor
push
fnstcw
fcmovb
and
and
mov
loopne
inc
mov
xchg
xorb
ret
jbe
rolb
mov
lret
jo
inc
fidivrl
imul
cld
addb
or
xor
pop
fucomip
sub
fs
or
mov
dec
fstp
pusha
jecxz,pn
xchg
add
mov
imul
rol
cmp
xchg
inc
fistps
sub
nop
sbb
jns
jmp
inc
and
imul
call
pop
xor
push
jo
outsl
test
adc
dec
xchg
jl
cmp
push
push
add
jmp
xchg
movsb
cmp
xchg
outsb
adc
out
pusha
andl
ret
aas
cmp
cmp
or
call
push
into
das
dec
add
dec
leave
subl
and
js
ficoml
add
add
mov
mov
adc
imul
fmull
and
adc
sbb
js
dec
adc
sbb
ret
pop
mov
sub
mov
call
mov
pop
andl
aaa
xchg
shl
insl
popa
rorb
xor
sub
cmp
and
pop
fisubs
lods
loopne
lcall
xchg
cmp
mov
or
push
stc
scas
add
add
aas
push
pop
aas
imul
nop
cmpxchg
pop
mov
adc
shlb
iret
inc
push
int
aas
inc
sbb
rolb
pushf
inc
push
cmp
js
rcrl
inc
xor
or
and
jb
inc
xchg
cmp
pop
inc
cmpsl
incl
sub
aaa
rorb
mov
dec
sbb
push
mov
ss
jg
pop
cmp
push
mov
pop
imul
movsl
roll
pusha
and
into
lock
fdivrl
divl
jno
icebp
enter
fucom
push
push
ja
jg
mov
ljmp
sbb
fcoms
adc
mov
adc
pop
or
jg
add
adc
jg
xchg
dec
cmp
dec
enter
mov
scas
cmp
xchg
cmp
loopne
add
push
jb
shll
sub
ss
jmp
add
loopne
push
xchg
add
cmp
xchg
pop
jle
es
xchg
fldcw
or
aas
add
or
cmp
add
pop
pop
dec
outsl
mov
xchg
jnp
sbb
add
jmp
push
imul
sub
mov
inc
add
arpl
adc
inc
cmpps
ja
cmp
push
lea
dec
pop
out
pop
dec
inc
xchg
xchg
cli
add
jns
int
popl
adc
mov
loope
std
out
lods
push
push
dec
push
dec
dec
jnp
das
clc
push
sub
sbb
pusha
and
mov
into
std
cmp
andb
pop
aas
xor
sbb
dec
push
adc
and
sti
push
cli
mov
jno
clc
lahf
into
aaa
js
sub
fsubl
jnp
push
sbb
lret
mov
cltd
lret
inc
mov
lods
leave
iret
lea
and
mov
and
ret
cmp
xor
add
pop
add
dec
orl
xchg
xchg
aas
js
jns
cmpsl
or
xrelease
dec
inc
xchg
ret
sbb
out
scas
pop
xlat
aam
imul
jo
push
and
popf
inc
lret
pop
daa
pop
push
inc
fmuls
inc
ror
mov
inc
inc
ja
adc
xor
arpl
xorb
ds
jnp
cmp
stos
cmpsl
pop
sub
pop
das
out
leave
xchg
pop
out
aaa
push
and
adc
lahf
cwtl
xchg
mov
insl
cmp
fsave
xchg
cmp
inc
lahf
xchg
aad
lret
push
aas
testb
pop
clc
fwait
add
test
lea
xchg
aam
les
push
and
jae
ljmp
mov
jnp
jb
jmp
xchg
dec
xchg
ljmp
outsl
push
jnp
inc
mov
jecxz
ret
mov
call
add
xchg
xor
inc
dec
mov
movsb
push
les
loope
or
outsb
flds
add
out
cli
inc
sbb
ljmp
pop
jl
cwtl
iret
inc
mov
jl
adc
and
sbb
scas
out
stos
movsl
out
sub
jmp
aaa
mov
push
mov
bound
mov
cmp
aam
adc
mov
dec
fcmovne
stos
jno
fdivrl
xchg
sub
rcrb
push
mov
mov
pop
push
fcomps
loop
addb
mov
outsl
xchg
and
add
jmpw
popl
out
dec
adc
fisttpl
or
ficomps
xchg
mov
icebp
mov
mov
popf
sbb
push
test
inc
push
jecxz
jg
pop
adc
dec
cmc
fdivl
add
aam
mov
test
sbb
add
shrl
les
test
pop
ds
push
xchg
mov
lea
out
gs
xchg
popa
cmp
jo
mov
push
dec
dec
sahf
dec
test
lret
push
adc
push
lea
jno
xchg
xchg
xor
es
movb
or
addr16
mov
dec
sub
movsl
and
scas
es
daa
xor
push
inc
push
cmp
push
das
adc
pushf
mov
xor
pop
sub
or
cltd
shlb
mov
add
push
inc
daa
call
add
push
test
xchg
fcoml
into
add
lds
lea
dec
pushf
xchg
scas
sarb
pop
mov
dec
sub
push
push
push
bound
push
xchg
sbb
test
jbe
adc
mov
pop
cltd
jns
rorl
cmpsl
das
adc
mov
stc
cmp
add
pop
and
cmp
subl
mov
and
xor
fs
and
mov
mull
outsl
mov
lock
push
add
xorb
jmp
inc
pop
ljmp
xchg
xor
jae
sbb
pop
cmp
sub
ret
push
pop
idivl
mov
cmp
popf
sub
add
bound
roll
pop
push
in
mov
add
xchg
fiaddl
ret
add
mov
dec
sub
mov
adc
vmovdqa
shll
hlt
inc
mov
jecxz
rorb
in
cmc
push
aad
js
and
loopne
pop
jecxz
dec
mov
imul
js
jbe
mov
jle
push
je
pop
js
mov
orl
js
adc
loope
loope
in
sub
les
sub
jnp
sti
fimull
jo
outsb
mov
incb
push
aas
or
inc
cmp
push
loopne
dec
or
mov
jb,pt
ja
scas
or
shlb
cmc
fwait
mov
inc
dec
addl
imul
mov
shl
jmp
push
fisttps
ret
sub
pushl
dec
loopne
inc
dec
xor
roll
mov
jbe
enter
xor
add
in
add
and
adc
lahf
lods
or
test
mov
jns
inc
or
cld
fmuls
xchg
xchg
inc
pusha
repz
push
dec
cltd
push
push
ficomps
dec
dec
add
push
clc
adc
les
out
leave
mov
add
pop
out
pushl
leave
addr16
xlat
ror
jp
int3
dec
xchg
inc
sub
lods
xchg
inc
outsb
lahf
dec
and
jno
sbbl
sbb
push
ret
sub
mov
xchg
in
and
sbb
mov
leave
ficompl
jno
out
imul
or
xor
pop
or
lahf
pop
mov
push
jo
push
loope
push
adc
scas
cmp
sbb
addb
in
pop
sbb
xchg
dec
sub
movsb
adc
mov
xorl
imul
stos
stos
repz
or
sbb
cmp
addl
pushf
add
shrb
xchg
jo
loopne
jge
das
lret
or
pop
and
adcl
dec
scas
adc
lods
or
bound
int
jb
push
repnz
add
fwait
or
bound
pop
adcl
cmp
jp
pop
jae
sbb
dec
push
cwtl
adc
pop
sbb
cmp
adc
mov
mov
and
sbbl
outsl
cmp
mov
push
leave
push
jmp
mov
jp
aad
cmp
push
lock
loope
inc
dec
call
push
pop
dec
leave
adc
xlat
outsb
dec
test
push
pop
lods
inc
mov
scas
aam
cmp
mov
xchg
iret
or
push
mov
pusha
and
sbb
or
sarl
mov
stc
lods
inc
inc
inc
xchg
aas
mov
sbb
loope
mov
add
sub
dec
sub
push
or
pusha
lret
insb
push
jbe
xchg
icebp
loop
xchg
hlt
or
add
js
fwait
jmp
mov
sbb
popf
outsl
dec
shll
pop
pop
stos
mov
testl
xchg
cmovge
dec
test
out
adc
adc
dec
xor
and
xor
xchg
ret
movsb
ror
add
fiaddl
pop
sub
call
sub
dec
add
lea
adc
out
xchg
out
sbb
ffreep
sbb
scas
lods
inc
stos
dec
mov
mov
stos
hlt
into
pop
xor
push
test
inc
scas
ja
add
je
call
xchg
test
sub
icebp
mov
flds
mov
adcb
xchg
dec
and
jl
xor
mov
pop
test
mov
addl
inc
jl
shrl
mov
inc
push
loopne
add
rcll
sub
dec
adcb
lock
imulb
mov
icebp
xlat
pop
popa
in
sbb
sub
mov
repnz
pop
test
push
sub
dec
or
pop
jp
or
iret
jb
scas
loop
push
push
jle
push
xor
sti
xlat
andl
cmp
cmp
adc
jo
frstor
and
pushl
cmp
dec
push
pop
sub
sarl
add
cwtl
ja
test
lcall
aaa
mov
sub
filds
cmp
jmp
insb
mov
dec
dec
out
adc
movsb
xchg
aaa
mov
leave
fadds
pusha
xor
iret
pop
les
or
or
stc
test
shlb
or
scas
loope
add
repnz
add
adc
ja
and
sbb
xor
mov
pop
bound
adc
addr16
and
popa
pop
jmp
rclb
xor
test
push
xchg
daa
mov
jo
movsl
pop
ret
cmc
pop
outsb
outsb
loop
sub
test
movsb
addr16
les
and
daa
stc
cmc
lahf
sub
andl
leave
lahf
jo
jmp
or
daa
out
sbb
imul
loope
in
andb
ljmp
xchg
adc
sbb
xor
daa
push
add
loop
jno
pop
adc
rcll
into
ret
push
adc
xor
or
daa
mov
inc
sub
fs
ljmp
daa
lods
je
pop
mov
es
pusha
in
xor
push
dec
pusha
cmp
adcb
test
sub
inc
and
sbb
fiaddl
fsubrs
subb
lret
rcr
inc
in
das
daa
xchg
pushf
add
add
mov
mov
rcrb
push
stos
aam
pop
mov
push
sub
mov
leave
mov
daa
aaa
sub
xchg
cmp
and
cltd
leave
ja
scas
add
sbb
fcmovnu
add
dec
call
sub
pop
movsl
and
lcall
dec
dec
popa
or
or
add
mov
mov
clc
sbb
shll
rolb
dec
mov
adc
and
jno
loop
aaa
mov
pushf
mov
jge
dec
inc
mov
dec
dec
pop
test
adc
fadd
inc
test
pop
push
fcmovne
add
rolb
push
mov
jecxz
decb
mov
xchg
ret
dec
dec
fsubl
fwait
dec
lea
test
jb
pusha
adc
inc
add
dec
add
mov
pop
dec
inc
mov
in
dec
aas
add
dec
push
inc
push
sbb
mov
cmp
add
clc
xor
addl
test
aas
adc
add
mov
or
xorb
pop
mov
ss
add
sbb
cmpsl
push
cmp
loopne
ds
daa
push
mov
inc
mov
adc
into
aam
movsl
pop
xchg
adc
push
jne
jae
add
and
mov
into
xor
mov
lods
lods
into
aaa
sub
fidivl
pop
mov
pop
add
ss
xchg
leave
loopne
rorl
insl
leave
add
jo
pop
cmp
cld
inc
cvtps2pi
pop
push
daa
pop
ret
test
mov
push
pop
xor
add
and
xor
ret
mov
inc
jg
addb
loope
movsb
add
inc
cmp
sub
aad
push
pusha
cmp
sub
mov
cmp
cltd
push
daa
dec
or
and
inc
push
push
psrld
movb
mov
or
push
popa
mov
pop
ror
scas
mov
jecxz
sbb
enter
add
gs
stos
inc
sub
enter
mov
cs
rorl
xor
dec
imul
mov
mov
gs
adc
add
or
inc
dec
sub
inc
mov
pop
cwtl
cmp
inc
xor
js
xchg
pusha
popf
add
sahf
out
xchg
inc
add
push
pop
or
push
inc
daa
sub
inc
scas
mov
outsl
in
outsl
inc
enter
js
stos
inc
inc
sub
int
data16
xorb
mov
mov
pop
int
inc
call
jbe
addl
test
and
hlt
jle
outsb
pop
mull
out
pop
pop
mov
test
into
mov
mov
imul
add
push
xor
xchg
ss
sub
xorb
and
stc
adc
add
xor
inc
ret
xchg
push
out
mov
dec
addr16
push
movsb
push
ret
inc
popf
pushaw
imul
dec
mov
sahf
out
arpl
lahf
mov
adc
mov
adc
add
adc
jb
inc
es
sub
and
test
andb
ds
pop
fwait
xor
inc
pop
jb
and
popf
and
and
sub
movl
imul
pop
mov
jbe
add
xor
popa
pop
mov
adc
and
lahf
add
add
ds
sahf
lret
push
inc
add
add
mov
push
cld
js
add
add
shrd
dec
xor
mov
add
sbb
push
fcomps
loopne
mov
push
sbb
sbb
filds
loope
xor
lret
xor
add
add
test
dec
inc
cwtl
inc
xchg
push
jnp
push
add
or
pop
pop
popa
bound
and
mov
jo
cltd
test
push
or
mov
aam
adc
mov
mov
das
pcmpeqw
or
add
cs
das
test
pop
loop
push
arpl
sbb
mov
std
mov
pop
std
mov
push
addr16
mov
adc
push
call
adc
adc
test
push
lret
and
or
std
adc
mov
xchg
mov
adc
inc
adc
pop
sbb
push
jmp
mov
xchg
jo
shr
pop
aaa
mov
sbb
popa
jae
xor
nop
inc
sub
stos
jne
inc
sti
je
adc
inc
mov
push
mov
das
call
xor
sub
fiadds
dec
add
or
cltd
jg
fbld
pop
fs
and
xchg
and
pop
daa
les
pop
jns
push
cmp
idivl
and
mov
or
shlb
ret
fwait
sbb
mov
mov
pop
rcl
inc
ret
shlb
dec
subl
nop
rclb
rep
mov
push
xchg
cli
lods
push
mov
leave
rolb
xchg
mov
adc
sub
inc
dec
decb
in
mov
pop
sahf
outsb
sbb
inc
fs
test
mov
inc
jg
rcl
adc
adc
loopne
mov
mov
into
mov
inc
mov
xor
xchg
adc
adc
pop
mov
mov
push
sahf
push
call
push
std
add
mov
ja
test
add
lds
add
inc
add
cld
lods
adc
loopne
add
cld
cmp
imul
into
sbb
popa
or
and
mov
sbb
rolb
loope
mov
fdivs
out
je
cmovnp
repz
pop
lret
cs
push
imul
mulb
aaa
outsl
hlt
cmp
jne
mov
jmp
outsb
sbb
sub
pop
add
mov
or
and
jge
fnstsw
inc
mov
adc
ret
sbb
mov
push
mov
sub
dec
sbb
insb
test
mov
jmp
mov
out
dec
jl
mov
and
ret
ds
jge
jl
mov
dec
pop
push
pushf
or
lret
sub
add
mov
outsl
int3
inc
cmp
push
repz
loopne
adc
cld
jg
sbb
pop
pop
inc
cmp
inc
fs
aas
pop
test
mov
das
sub
jecxz
inc
pop
push
daa
rclb
mov
jg
push
fimull
jecxz
fmulp
xor
scas
inc
jae
or
mov
jb
addr16
push
data16
or
or
rcll
or
pop
sbb
inc
or
ficompl
insb
inc
xor
aaa
shlb
dec
loope
inc
ja
sub
lcall
cltd
aas
jo
sbbl
enter
stos
inc
inc
inc
push
in
fnstcw
jmp
inc
out
push
icebp
and
mov
mov
inc
orl
add
out
inc
or
xor
push
enter
enter
sub
adc
push
xor
scas
aas
outsl
pop
aam
mov
inc
decb
mov
and
daa
lret
pop
lret
dec
or
sbb
loope
test
mov
dec
repnz
sbb
stos
rolb
mov
dec
cltd
sub
shl
imul
in
scas
repz
movsl
loopne
dec
push
adc
push
push
es
jo
add
cltd
cmp
test
das
lret
dec
outsb
enter
xor
or
mov
fistps
mov
xor
mov
loopne
sbbl
dec
bswap
dec
sbb
int
mov
roll
je
into
cmpsl
mov
pop
mov
adc
mov
nop
add
cmc
lret
in
adc
push
in
add
dec
sub
jle
or
sbb
rcrb
popf
out
test
cmpb
push
xchg
and
int3
xchg
cmpsb
subb
jle
pop
dec
xchg
out
xchg
push
xor
mov
mov
jle
roll
dec
mov
dec
sbbl
and
incb
pop
sub
inc
scas
add
fs
addl
scas
insl
sub
dec
adcb
jp
into
data16
pop
mov
xor
inc
and
pop
call
es
xor
scas
and
inc
movl
mov
in
dec
add
out
add
mov
mov
push
imul
test
pop
out
push
xchg
mov
mov
lcall
jg
lock
lret
sbb
cmp
arpl
out
inc
xchg
adc
dec
imul
pusha
scas
addl
push
roll
xchg
sbb
dec
xchg
sbb
mov
ret
xlat
or
or
mov
mov
push
or
cmpb
pop
push
lea
jnp
pop
cs
xchg
jb
cmpsb
and
bound
cmp
test
ret
xchg
jecxz
cmp
push
inc
ret
xchg
lcall
cmpsb
sti
cmpl
xor
js
adc
dec
rclb
mov
xor
cli
xorb
js
xchg
add
flds
lds
shrb
sysret
pop
loop
fcomps
cwtl
lods
icebp
es
mov
inc
movb
push
cltd
test
in
add
aam
test
divb
dec
cmpsl
add
dec
push
cmpsl
jp
xchg
stos
movsb
sti
outsb
cld
xor
test
ret
push
or
inc
sub
jno
inc
test
mov
push
pop
jge
jbe
mov
adc
xorb
mov
out
mov
jne
data16
rcl
push
aam
push
ds
ds
scas
inc
xlat
pop
das
pop
push
jp
mov
inc
or
adc
pop
mov
push
lds
jge
pop
fisubrl
ss
addb
rcrl
inc
dec
mov
add
sub
ret
sub
rorl
lcall
mov
mov
sbb
mov
sbb
cmp
insb
sub
adc
mov
push
cmpb
add
inc
mov
push
sub
inc
add
sub
fwait
aas
xor
or
xchg
push
cmp
fs
lahf
scas
mov
mov
test
sbb
pop
adc
and
out
mov
test
dec
scas
aaa
icebp
andb
jbe
mov
ret
inc
jp
inc
ret
int
xor
xor
nop
jnp
add
dec
mov
cmp
pop
sub
mov
dec
and
aaa
bound
imul
cmp
scas
sbb
mov
pop
ja
mov
push
mov
push
in
imul
dec
add
loopne
jnp
test
cs
push
rolb
cs
sbb
push
rcrl
outsl
outsb
addb
and
add
push
pop
call
test
mov
push
les
adc
sbb
or
aaa
loopne
pop
inc
xchg
adc
dec
movsb
fwait
rolb
inc
mov
jp
ljmp
xor
mov
dec
cld
sahf
inc
mov
inc
into
inc
push
xchg
and
sbb
fsts
fsubrp
xchg
mov
xor
stos
push
mov
jg
or
pusha
mov
push
mov
xlat
stos
push
sub
sub
push
lods
cmp
sbb
shll
pop
xor
mov
or
sbb
jne
lods
ficompl
in
dec
mov
push
bound
inc
andb
mov
jge
orb
add
pop
nop
fs
and
cmpsl
pop
dec
inc
pop
fcompl
jne
ret
push
addb
dec
mov
push
rol
cmp
addr16
ja
jno
mov
ds
enter
fdivrs
mov
or
lret
pop
iret
arpl
mov
push
iret
mov
lret
mov
fistpl
mov
test
scas
cld
pop
jl
adc
cmc
mov
fdivp
cs
adc
xchg
test
fiaddl
jp
lret
jns
ret
mov
add
icebp
popa
push
pop
push
les
rclb
daa
enter
test
roll
or
int3
pop
flds
test
mov
popf
add
mov
jecxz
nop
mov
add
add
lods
and
movsl
cmp
dec
test
push
and
xor
lods
sti
sbb
adc
shlb
pop
sbb
pop
outsl
xchg
mov
imul
mov
add
insl
push
mov
cltd
mov
cmp
cs
addr16
sbb
dec
js
lea
cmp
ret
add
push
xlat
sbb
mov
xor
popf
jmp
mov
cmp
xchg
sbb
mov
jl
das
scas
pop
lods
stos
ret
push
mov
mov
inc
fimull
aas
repnz
popa
test
push
lahf
int
jbe
lea
add
adc
cvttps2pi
mov
cmpsl
sub
loopne
and
jecxz
orl
mov
iret
mov
aaa
dec
sub
xchg
dec
sbb
sahf
es
lock
mov
xchg
dec
sti
inc
test
bound
into
inc
inc
inc
cmc
xor
lcall
or
fnstcw
add
sbb
push
dec
pushf
or
in
shlb
adc
jle
xor
add
cmp
pop
lea
inc
mov
pop
mov
push
fsubr
hlt
or
lods
pop
lock
lods
adc
sbb
enter
sarl
orl
mov
lods
repz
sbb
sub
push
sbb
xlat
mov
movsb
test
pushf
pop
inc
loopne
lcall
add
lods
inc
add
jae
mov
mov
lods
addr16
xchg
fbld
add
and
test
cmpb
rclb
pop
xor
push
ret
dec
fidivl
aad
jo
mov
push
mov
inc
xchg
aam
loop
icebp
stos
inc
loopne
pop
arpl
aas
pop
cmpl
pop
fimuls
fidivrl
mov
xor
mov
add
adc
mov
jnp
fidivrs
in
push
imul
xor
mov
sahf
cmc
cwtl
push
or
mov
add
inc
add
sub
into
aad
mov
in
ds
mov
pusha
mov
aas
push
sbb
mov
dec
aas
das
inc
aaa
fidivl
jmp
mov
push
pop
mov
test
pusha
cmp
push
mulb
fs
js
and
sbb
gs
enter
pop
loope
pop
ds
mov
xchg
iret
jo
add
jmp
in
sbb
add
pop
outsb
cmpsb
gs
push
femms
cmp
jmp
inc
or
xor
jb
bound
xchg
out
push
movsl
and
rclb
push
enter
xchg
push
jbe
xor
xor
mov
mov
sbb
mov
dec
inc
out
sub
xor
arpl
add
leave
das
shlb
jnp,pn
pop
mov
rcll
leave
nop
mov
aaa
lahf
out
mov
mov
xchg
or
sbb
inc
pop
pop
dec
push
adc
subl
pop
cmp
cmp
fdivl
sbb
sbb
imul
dec
imull
imul
xchg
into
inc
inc
mov
dec
jno
in
push
mov
mov
test
lea
ljmp
dec
adc
sarl
subb
testb
xor
movb
inc
jo
dec
aas
cmp
add
add
xchg
push
push
pop
inc
pop
bound
inc
or
xchg
pop
insb
cmp
cmp
cmpsl
mov
push
dec
jb
sub
push
ret
test
mov
dec
jae
mov
in
dec
pop
out
mov
repz
and
fsubs
sub
xchg
sub
inc
add
xor
mov
ret
sbb
jp
and
in
dec
je
pop
lcall
cmp
sub
daa
adc
inc
cmpsb
mov
fadds
ftst
mov
push
sbb
ja
mov
cmp
dec
jp
xchg
iret
jle
out
ror
adc
dec
out
jnp
mov
xor
das
xchg
mov
adc
inc
daa
sahf
mov
jno
mov
xlat
popa
jmp
aam
fidivs
arpl
int
lds
mull
jmp
pop
and
imulb
mov
xor
test
inc
and
push
outsl
mov
shlb
mov
pop
dec
mov
sarb
ljmp
fnstcw
outsb
sbb
inc
cmp
fld
add
jo
loope
inc
outsl
fiadds
aaa
jle
pusha
cmp
pop
and
dec
and
and
div
push
mov
sub
ss
pop
scas
pop
lods
fcompl
imul
adc
test
mov
les
sbb
mov
mov
push
out
jmp
or
inc
xor
addr16
sbb
sbb
lea
push
add
loop
in
sub
lock
mov
mov
jmp
out
xchg
sbb
mov
out
scas
inc
js
cmpsb
xchg
mov
dec
cmp
into
nop
push
add
xor
or
add
inc
xor
sub
mov
test
dec
inc
sub
in
fs
adc
dec
mov
fucom
lea
mov
daa
mov
lret
dec
loop
sbb
daa
sarb
out
sbb
jo
cmpps
sti
and
addb
or
ljmp
ljmp
cmp
lock
inc
jecxz
les
dec
sahf
mov
js
sarl
movsb
mov
notb
cs
inc
enter
movsb
out
shl
push
mov
sub
aaa
retw
scas
lods
fadd
and
push
rcrl
dec
pop
and
and
test
cmp
test
rorl
or
arpl
add
dec
add
or
sbb
fcmovne
inc
pusha
imul
out
sahf
mov
cmp
add
es
jbe
cmp
lret
and
inc
in
add
pop
dec
sbb
jge
loope
or
pop
cltd
rcrb
cmp
out
or
cmp
mov
je
in
adc
add
je
inc
or
int
jbe
in
dec
fs
test
or
fs
pop
rcrl
jns
sub
and
or
or
jmp
and
cmpl
add
xor
xor
adc
fsts
lods
cmp
stos
mov
push
sbb
cli
clc
xchg
bound
and
adc
cli
dec
jle
inc
and
adc
and
sbb
insb
cmp
ja
fstpl
cltd
sbb
mov
add
enter
push
xchg
loop
sub
repnz
loopne
inc
dec
jmp
jl
aaa
xor
insb
pop
xchg
add
adc
pop
and
xor
add
lret
push
mov
xor
xor
dec
jns
ja
cwtl
cs
lahf
js
mov
dec
cmp
mov
mov
xchg
cltd
les
les
outsb
add
sti
and
xchg
or
pop
mov
mov
add
dec
mov
mov
add
fs
sbb
stos
adc
mov
lods
adc
loopne
mov
test
add
add
pusha
cmp
mov
daa
pop
xchg
push
and
inc
lock
imul
sarl
dec
test
iret
popa
cmpsb
cmpl
stos
lods
dec
and
nop
dec
mov
js
jo
outsl
roll
sbb
loopne
jecxz
fndisi(8087
ds
mov
arpl
adc
repnz
add
mov
push
repz
fldl
or
or
jbe
ja
jl
loop
xchg
mov
xchg
and
icebp
push
xlat
test
bound
add
xor
test
mov
inc
stos
call
enter
iret
cli
adc
push
adc
push
xchg
addl
add
cmp
cmp
jb
mov
sbb
das
scas
sub
push
sub
orb
push
mov
mov
push
cmp
fidivl
dec
jae
xor
add
sbb
notl
mov
aas
lods
cmp
test
mov
mov
sub
pop
jge
add
mov
jnp
adc
xor
or
push
in
popa
add
test
mov
iret
mov
and
enter
movsl
test
loope
push
lret
sbb
push
xor
std
sbb
adc
aaa
cmp
mov
dec
popa
push
lock
xlat
aam
mov
inc
push
push
ljmp
mov
xor
mov
push
dec
int3
icebp
and
filds
roll
orl
ja
or
ds
test
int3
mov
roll
adc
inc
jp
out
loop
pop
push
jp
outsl
outsb
adc
stos
daa
js
data16
inc
ret
les
mov
xchg
mov
and
jns
cmpsb
fidivrs
pop
pop
mov
sbb
int3
pop
test
jecxz
add
fwait
and
mov
scas
or
xor
or
xorb
jmp
or
or
out
add
sbb
sub
aas
pop
pop
or
pop
pop
jno
add
inc
or
les
jb
push
inc
pop
mov
in
jl
mov
push
ret
add
jb
fwait
xor
xorl
movsl
test
adc
inc
lcall
sub
fadds
xor
test
cli
pusha
sbb
rcr
in
push
sbb
push
pop
mov
loopne
sub
inc
orl
xchg
lock
loope
in
inc
ret
adc
icebp
or
xchg
adc
dec
aas
or
cltd
iret
cld
push
test
jno
cmp
xchg
popa
mov
mov
stos
cmp
or
daa
or
xchg
lahf
sbb
movsl
adc
ficoms
push
stc
test
add
pop
xchg
sub
dec
and
gs
or
stos
imul
mov
sti
sub
jno
xor
rorl
cmpb
mov
js
add
movsl
out
sbb
pop
and
fcomps
dec
shlb
aad
pop
pop
aaa
add
mov
mov
sub
adc
mov
inc
xchg
out
addr16
loopne
test
push
sub
call
jecxz
mov
mov
pop
push
inc
jae
imul
in
repz
jp
inc
sub
ficomps
inc
adc
inc
addl
andb
pop
adc
jl
cmp
out
or
push
push
das
lods
dec
rolb
ret
in
inc
push
sub
jecxz
mov
or
outsl
aad
sub
out
shrl
jg
add
inc
push
adc
jnp
rcrb
push
jb
lcall
dec
fwait
mov
inc
jl
cltd
outsb
sub
loop
les
lret
jg
sub
iret
es
lods
mov
push
imul
faddl
std
shll
je
add
fcom
mov
push
cmp
push
pop
mov
sub
test
sub
lret
iret
icebp
sub
xchg
out
movsl
pop
sbb
add
push
outsb
add
or
jnp
push
sbb
mov
dec
mov
outsb
inc
jb
and
add
outsb
das
sub
pop
pop
jmp
insl
sub
adc
cmp
jmp
cmp
dec
test
sbb
cmp
ret
int3
popf
dec
aad
jbe
inc
outsl
cmpsl
in
in
cwtl
ficompl
cwtl
mov
call
jns
out
mov
xor
stos
lret
cmp
pop
stc
xchg
push
and
aad
inc
sldt
inc
mov
sarl
loopne
out
pusha
sbb
xchg
jl
sbb
sbb
xor
mov
cmpsl
inc
gs
loope
jecxz
push
mov
stc
cli
cmp
jge
sbb
add
lret
xlat
fistl
call
inc
xchg
adc
xchg
in
aam
shlb
push
adc
dec
sti
fsts
sbb
pop
test
xor
aas
sub
jbe
mov
das
inc
das
and
gs
and
pause
mov
mov
mov
jno
add
sti
dec
sbb
pop
inc
lods
repnz
push
sysexit
test
pusha
scas
lcall
lods
test
aam
movb
into
out
rol
or
adc
mov
and
jo
jae
and
xchg
shlb
adc
aaa
sbb
mov
je
pop
dec
rolb
sub
adc
fiaddl
sub
clc
xchg
jp
dec
or
sbb
sbb
add
bound
jo
lea
outsl
loope
mov
add
pop
mov
mov
push
leave
js
adc
mov
add
and
scas
or
mov
sbb
movups
test
mov
push
jp
ss
aas
jnp
lods
and
stos
mov
push
leave
bound
insb
sub
fucom
std
fimuls
jmp
pop
cmpb
mov
xor
dec
mov
add
inc
mov
gs
or
mov
jle
jge
add
xchg
xlat
cli
inc
mov
mov
sub
orl
mov
in
or
insb
mov
xchg
mov
test
push
mov
adc
sub
loope
ss
js
sbb
cmp
and
cltd
jne
loop
stc
sbb
adc
sti
cmp
jecxz
fstps
imul
adc
or
or
test
dec
and
cmp
hlt
or
and
in
or
cmp
outsl
cld
pop
movsb
push
mov
popl
imul
adc
inc
dec
test
dec
nop
outsb
and
pop
mov
loopne
jo
aad
incb
gs
push
shlb
enter
mov
or
push
imul
ret
pop
lods
mov
and
dec
out
loope
arpl
les
stos
neg
dec
adc
mov
cmp
fucomp
dec
and
mov
inc
mov
fidivl
arpl
xchg
pop
push
xor
movsb
movsb
std
add
adc
in
movsl
and
cmp
xorl
test
sbb
mov
mov
jge
fimuls
xchg
jmp
add
add
or
lret
add
sbb
cmp
jno
jns
mov
add
cmp
dec
add
push
mov
mov
fsubr
inc
addr16
inc
jp
cs
sub
mov
inc
mov
inc
cs
lea
and
btrl
out
addl
push
and
sbb
imul
add
cmpsb
sbb
or
aaa
push
enter
jno
jns
lds
iret
add
adc
subb
add
xchg
fadds
dec
mov
repz
mov
in
xor
dec
imul
pop
in
lahf
and
insl
dec
add
sbb
pop
clc
and
inc
mov
jmp
pop
mov
jae
lock
mov
test
add
outsl
movsb
fwait
mov
sbb
insl
dec
mov
jne
mov
imul
add
pop
mov
shll
dec
sqrtps
dec
sbb
test
pusha
sbb
insb
mov
add
xor
inc
dec
insb
loopne
loopne
lret
lock
scas
and
sub
mov
insb
mov
and
loope
adc
sahf
xchg
cmp
inc
pusha
movb
mov
cmp
movlhps
je
push
add
ret
imul
nop
push
xor
pop
xchg
sub
mov
inc
add
scas
lods
push
pushl
sub
adc
mov
aaa
pop
add
sbb
lea
popa
int3
adc
add
mov
fstpl
movsl
adc
js
mov
pop
pop
mov
jnp
aas
and
jbe
sbb
and
or
xchg
rorb
es
add
call
add
dec
arpl
pop
stos
loop
inc
or
pop
add
lret
aaa
adc
inc
dec
or
loopne
sbb
sahf
iret
xchg
call
mov
pop
dec
cs
enter
lods
xchg
add
push
push
push
push
dec
xor
sub
loop
out
push
jmp
mov
add
jmp
dec
adc
fidivrl
pop
adc
or
mov
mov
or
push
inc
in
fldcw
xchg
pop
ret
imul
inc
cmp
jge
test
xchg
dec
dec
sbb
and
inc
adc
cmp
sbb
popf
pop
xchg
dec
loopne
mov
mov
and
pop
rol
test
testb
and
dec
aam
or
add
lods
ja
sub
ret
int
scas
lcall
leave
gs
fsubs
mov
xchg
sbb
popa
lods
or
gs
fcmovnbe
or
or
cwtl
popa
test
xor
and
jmp
punpckhwd
cmpsb
popa
js
arpl
js
popa
loopne
aad
push
scas
adc
into
mov
dec
movsl
add
xor
sub
jb
insb
in
stos
lods
jne
push
or
pop
mov
fmull
add
mov
fidivrl
cs
adc
icebp
xor
add
jnp
test
push
subb
mov
adc
ret
pop
lret
ds
pop
jmp
shlb
lret
jno
jmp
out
cmpsl
and
jne
fwait
and
cltd
dec
ret
xor
aad
sbb
in
aas
adc
les
inc
mov
push
lret
cmp
push
add
xchg
jle
icebp
or
lea
mov
pop
dec
mov
das
inc
push
mov
nop
jns
sti
xor
mov
add
dec
add
or
sbb
jp
and
test
sbb
adc
aas
popl
sub
inc
clc
xor
mov
pop
mov
cmp
arpl
inc
psrld
mov
xor
mov
popf
out
into
mov
lds
roll
xchg
jns
jmp
insb
or
inc
mov
pop
push
fnsave
inc
mov
jl
lret
and
sbb
add
loop
enter
jo
xchg
xor
mov
lcall
sti
aas
test
push
dec
ss
mov
mov
rcl
mov
ljmp
ds
jae
ljmp
jmp
jns
jo
cmp
xor
mov
ss
inc
xchg
sub
rolb
pop
mov
inc
add
test
add
sub
and
in
add
jmp
clc
or
jbe
pop
lea
imul
mov
mov
add
mov
push
nop
or
dec
or
test
dec
and
pop
cmp
out
pop
arpl
or
adc
in
jnp
add
dec
and
jo
mov
ret
push
cltd
jmp
or
sbb
inc
and
in
or
pop
fadds
jg
mov
orl
aam
pop
enter
in
rcrb
ja
xchg
pop
int3
mov
lock
pop
xchg
cmpsl
mov
sub
and
inc
das
fdecstp
div
push
ds
stos
rcll
xor
mov
test
aad
mov
push
lret
xchg
jmp
lods
test
push
pop
imul
stos
pop
fs
add
mov
and
loope
stos
sub
fdivr
jl
movsl
push
bound
sbb
cs
and
lahf
scas
cmpl
mov
add
mov
ret
and
je
dec
xchg
sbb
sbb
inc
int
sub
adc
xchg
inc
pusha
es
pop
cmp
cmpb
pop
or
pop
sbb
xor
cmp
outsl
push
sbb
orb
sbb
mov
jmp
xchg
fidivrs
pushf
add
cmc
xchg
sub
add
and
push
fwait
add
icebp
mov
sti
or
outsb
mov
jl
dec
test
sub
outsb
hlt
jge
cmp
xor
insl
and
cmpsb
je
sbb
mov
or
fmuls
inc
lds
sti
push
sub
xchg
push
mov
sbb
pop
jp
sarl
subl
mov
test
mov
push
push
inc
ja
in
xchg
pop
jle
mov
sbb
insb
movzwl
lahf
and
sub
movsl
in
mov
sbb
dec
fs
ret
cmp
rclb
mov
sub
xchg
cmpsl
mov
dec
loope
icebp
inc
jge
jo
jo
push
imul
sbb
push
fstl
jp
fadds
adc
mov
loop
inc
dec
jge
rorl
mov
pop
xchg
inc
mulb
js
fnstsw
ja
inc
iret
ljmp
imul
and
sub
cmp
rclb
in
es
out
sbb
fwait
test
out
mov
dec
iret
sbb
mov
icebp
pop
cmp
shrl
pop
sahf
and
or
xchg
adc
sub
adc
pop
fidivs
outsl
add
xorb
into
jbe
and
lods
inc
sbb
mov
scas
shl
shrl
lret
aad
movsl
test
sbb
mov
or
js
stos
add
lock
inc
pop
fidivrl
mov
enter
insb
xchg
jb
popa
mov
stos
ja
loope
call
or
xchg
xor
mov
mov
adc
jp
les
test
mov
popa
xchg
pop
rolb
or
dec
xchg
cmpb
loopne
xchg
pop
pop
add
sbb
pop
stc
arpl
dec
shrl
shlb
shl
sbb
in
outsb
jnp
cmp
outsl
adc
ljmp
invlpg
lcall
ljmp
aam
daa
test
xor
sub
lcall
dec
jle
ret
shl
push
imul
mov
push
outsb
mov
fisttps
fidivs
inc
aas
sbb
js
jg
xor
mov
es
out
mov
movb
lea
or
mov
rorb
sarb
inc
cwtl
scas
sbb
pop
inc
clc
cmp
std
push
mov
std
sbbb
sti
dec
cmp
out
int
add
test
mov
jae
imul
add
cli
dec
dec
mov
add
jbe
aas
popf
iret
dec
adc
jmp
imul
dec
mov
mov
cmpsl
test
mov
mov
shll
je
loope
add
pop
push
cmpsl
fsubrs
mov
out
imul
cmp
sbb
xor
xchg
test
sbb
jo
adc
jnp
ret
movsl
insb
push
push
add
cltd
push
and
mov
sbb
stos
inc
call
sbb
mov
push
cmpsb
sub
lcall
cmp
nop
hlt
rolb
outsl
inc
and
sub
int
push
xor
lods
xchg
popf
aas
fdivrs
pop
pop
xor
lea
jnp
cwtl
sub
or
insb
xor
jbe
inc
loope
call
cld
int3
mov
dec
cmpl
test
sbb
insb
mov
adc
jo
test
pop
mov
pusha
psrlw
mov
add
mov
mov
mov
lea
test
xchg
jl
adcb
jnp
jne
inc
lret
cmpl
jo
test
add
cmc
xorl
pop
push
sbb
shlb
loopne
and
jno
or
in
pop
int
pop
fs
mov
add
addb
lret
xor
push
sbb
ret
psubusb
jae
sbb
cmpl
and
sub
je
lcall
cmp
adc
sub
add
js
sub
add
and
xlat
cmp
add
out
push
xchg
dec
push
ds
test
cmp
xchg
pop
pop
inc
pop
mov
push
xor
dec
adc
movsl
cltd
andb
test
shll
popf
loope
mov
fcmovb
rolb
loope
ret
mov
jae
xor
les
test
mov
add
sbb
mov
mov
mov
or
inc
lea
ret
testl
mov
xchg
leave
pop
sarb
fstpt
or
xchg
push
cwtl
xlat
xchg
xchg
or
or
xchg
pop
sbb
mov
dec
and
sbb
inc
or
dec
xchg
in
dec
pushf
push
sub
ffreep
or
mov
out
lret
pop
jge
mov
jbe
cli
and
cmpb
shlb
pop
mov
test
add
xor
mov
mov
inc
sbb
cmovnp
add
or
pop
punpckhbw
and
lods
lods
xchg
dec
xchg
mov
inc
xchg
adc
pop
ss
enter
mov
and
lcall
stos
and
xchg
and
pop
inc
adc
push
pop
ss
pop
lahf
inc
push
pop
mov
negl
mov
mov
ja
pop
add
dec
pop
pop
dec
and
shrb
cmp
subl
pop
add
fwait
jle
xchg
mov
movb
in
adc
mov
jne
in
mov
inc
add
mov
mov
jb
add
test
data16
pop
mov
inc
and
inc
arpl
cmp
cmpsb
sti
adc
inc
dec
xlat
std
xchg
imul
popf
sbb
inc
push
xchg
add
sbb
sub
xor
mov
rcll
add
fists
jbe
fsts
sbb
ret
and
mov
sub
mov
sub
incl
decl
movsl
xor
or
scas
or
pusha
pushf
ja
xchg
xor
dec
inc
adc
add
movsl
add
ret
bound
loop
sub
add
push
pop
add
push
fwait
jecxz
mov
add
hlt
out
add
inc
adc
inc
arpl
daa
inc
xorb
out
push
push
xchg
mov
lods
test
stos
add
sti
push
mov
shrl
xor
add
ds
rcrb
or
nop
add
mov
sbb
adc
jo
sbbb
lock
test
mov
inc
daa
lret
or
cltd
insb
add
add
pop
push
pop
inc
xor
xchg
add
lret
xor
sub
dec
mov
std
dec
nop
push
push
jno
sub
add
hlt
mov
repnz
sbb
xchg
cmp
push
mov
pop
dec
add
loopne
loop
popf
xchg
cs
xchg
pop
rorb
lds
in
mov
call
orb
mov
adc
mov
lahf
out
sub
loop
sbb
mov
sti
cltd
lahf
adc
loopne
arpl
sbb
aaa
sub
movsb
mov
dec
mov
or
aas
push
jo
push
inc
or
ret
xor
into
inc
adc
dec
mov
mov
sahf
lods
sub
pop
jnp
dec
pop
mov
push
inc
jecxz
dec
jl
xchg
adc
mov
xlat
sbb
movb
in
daa
cmpsl
sub
or
lcall
inc
into
ret
sbbb
xchg
jb
push
jb
lock
mulb
popl
fisttpl
adc
cs
pop
xor
test
cmp
hlt
or
mov
sbb
hlt
and
rcl
lea
or
cmpxchg
das
sub
inc
xor
icebp
push
xchg
mov
mov
pop
or
enter
je
pusha
xchg
adc
int3
adc
inc
lea
pop
adc
or
cmpsl
mov
daa
ja
sub
add
iret
fs
mov
scas
dec
ljmp
dec
add
sbb
les
fwait
iret
divl
dec
sbb
xchg
pop
dec
mov
jb
xchg
or
sbb
das
int
add
pop
inc
add
arpl
stos
pop
and
sub
xchg
pop
adc
pop
or
add
adc
jne
mov
dec
or
ljmp
add
dec
add
scas
adc
mov
andb
sbb
mov
insb
daa
sbb
add
xor
aaa
aad
adc
loopne
mull
sti
adcl
cmc
add
ds
mull
mov
jle
inc
sbb
mov
movsb
int3
or
sbb
mov
jge
fwait
sbb
and
hlt
addr16
movsb
xor
xor
cmc
lret
sbb
daa
dec
dec
iret
pop
add
sbb
ja
add
adc
fisubrl
push
outsb
lea
cli
or
lds
das
stos
sbb
mov
or
and
pop
arpl
xlat
aaa
mov
icebp
xor
test
mov
jmp
loopne
push
dec
add
push
mov
out
add
mov
or
pop
jl
fsubs
or
fsubrl
xor
mov
loop
int3
push
test
xor
add
jno
dec
jge
outsb
imul
push
mull
pop
iret
xchg
push
iret
adc
sbb
movsl
cmp
xor
ficoml
mov
dec
ja
pop
pop
sub
sub
es
pop
xor
pop
mov
fld
lea
add
sbb
sbb
lret
jae
lcall
mov
dec
and
sub
ljmp
sub
fmull
push
jbe
mov
aaa
sti
and
mov
arpl
out
and
int3
loopne
aam
sub
xor
lret
js
adc
into
cmpsb
xor
cmp
testb
insl
mov
lret
mov
ljmp
stos
shlb
push
loope
aam
jae
aam
mov
adc
adc
lret
mov
in
add
mov
xchg
and
mov
inc
pop
jecxz
pop
out
mov
pop
outsb
adc
or
pop
and
dec
shrb
and
mov
pop
scas
mov
pop
add
add
ret
add
add
jns
lcall
sbb
cltd
jae
lea
adc
dec
movsb
dec
bound
add
add
stos
xlat
test
test
test
push
push
dec
pop
inc
out
dec
mull
pop
test
test
cmp
lret
xor
sub
inc
adc
pop
in
pop
adc
les
aam
push
stos
mov
outsl
adc
push
dec
add
xchg
mov
inc
pop
dec
cmp
data16
pop
inc
and
xchg
loop
adc
sbb
pop
fldenv
jbe
test
lds
add
add
sub
subl
enter
lds
mov
sbb
outsl
inc
mov
lds
repz
xchg
rcll
or
cmpsl
hlt
shlb
rolb
dec
ljmp
cmp
adc
push
pushf
stos
ret
mov
inc
pop
shrl
movsb
mov
out
sarb
stos
xchg
add
xchg
and
inc
jmp
or
push
add
xchg
pop
mov
or
mov
xchg
add
push
pop
sbb
fnsave
pop
mov
pusha
pop
add
mov
lods
imul
jno
mov
xchg
les
pop
dec
inc
add
pop
dec
cmc
js
adc
fstl
add
cwtl
ds
push
push
and
aas
or
xchg
pop
cmpsb
aam
cs
adc
inc
insb
movsb
pop
or
ficoml
dec
dec
aam
jmp
push
and
aad
push
ret
add
pop
inc
inc
push
enter
lret
call
jmp
aaa
hlt
or
mov
pop
xchg
xor
int3
gs
and
add
ret
shrl
or
out
mov
pop
aaa
inc
push
fnsave
test
test
add
movsl
mov
push
mov
and
dec
jb
outsl
rolb
ljmp
test
popa
dec
sbb
cmp
sahf
add
xchg
push
pop
js
es
dec
pop
inc
mov
nop
jp
cmpl
aam
test
nop
cli
inc
lods
add
adc
mov
sub
nop
xor
movsb
mov
and
insb
or
adc
rclb
pop
mov
test
jl
push
stos
xchg
jne
sub
add
cmp
mov
add
and
scas
push
scas
pusha
xor
sahf
add
mov
xchg
jge
ret
xchg
les
cmp
mov
or
xchg
sbb
adc
movsb
hlt
popf
aas
mov
push
or
push
lcall
or
test
ret
out
sbb
rorl
aaa
mov
adc
dec
movsl
mov
sarb
fwait
test
repnz
fmull
enter
push
gs
mov
sarl
xchg
add
xlat
sbb
scas
jb
lock
into
nop
jp
add
push
mov
add
pop
test
stc
pop
xchg
adc
imul
pop
cmp
jns
inc
cmp
sbb
xorl
movsb
pop
sub
dec
test
mov
mov
dec
mov
vcmpordsd
sbb
jb
pop
push
je
ficoms
jnp
inc
out
mov
sbb
rcl
in
pop
mov
repz
cmp
dec
dec
push
fdivs
inc
sar
rcrb
or
jo
adc
inc
jo
push
cwtl
or
sahf
add
mov
mov
popa
mov
arpl
adc
ret
cwtl
inc
xor
mov
daa
add
js
clc
mov
nop
jo
lock
cmp
dec
stc
add
test
lods
js
xor
ret
add
and
cmp
js
and
lcall
xchg
and
push
inc
xchg
add
rolb
add
dec
dec
addb
mov
ljmp
bswap
pop
mov
inc
imul
je
outsl
dec
popa
sbb
jg
push
push
adc
add
addr16
or
sub
into
sbb
cmp
stc
shlb
cmpb
add
dec
or
ss
mov
adc
loopne
mov
add
sahf
xor
dec
mov
mov
lret
add
jecxz
popl
push
add
push
je
cmp
rclb
add
xchg
add
lods
mov
sbb
ds
sbbb
xor
lods
pop
movsb
mov
pop
xor
sub
ret
dec
lds
aam
movsl
mov
mov
clc
mov
and
rorl
jp
sbb
or
sbb
jnp
cwtl
faddl
dec
jle
add
cltd
cmp
jg
icebp
xchg
scas
mov
popa
lods
dec
imul
icebp
dec
or
or
mov
dec
lahf
dec
xchg
xor
lcall
add
stc
add
sbb
add
aas
pop
jno
rolb
addr16
fnstenv
ficompl
jo
pop
repz
mov
outsb
sahf
ret
jp
scas
xchg
cmp
frstor
xchg
xchg
fst
iret
add
add
addr16
in
jne
rcl
cmp
pop
or
stc
test
ja
cmpsl
xchg
dec
jg
mov
sbb
add
test
adc
pusha
or
jne
lock
xchg
cmc
test
in
pop
mov
adc
add
add
sub
xchg
outsb
dec
lods
add
inc
out
ret
aas
pop
inc
cwtl
dec
add
pop
add
push
sbb
cltd
add
xor
mov
adc
orb
push
fnstenv
sete
add
add
adc
add
arpl
xor
mov
push
xchg
stc
movb
pop
xorl
rcrb
loope
mov
lods
xor
data16
sbb
sub
mov
divb
jle
loop
outsl
mov
lcall
cli
or
or
adc
cmpsl
ret
addl
mov
mov
xlat
mov
pop
jnp
dec
out
jo
movsb
adc
sbb
adc
pop
adc
jo
jecxz
dec
xorb
sbb
je
mov
test
scas
pop
in
pushf
into
divb
adc
dec
sbb
mov
fildl
popf
fistpl
jle
lock
add
into
dec
xor
ds
dec
std
fisubrs
loope
pop
outsl
sbb
aam
jg
ljmp
loopne
xchg
sbb
loope
fbstp
lea
xchg
xorl
xchg
lcall
mov
je
xchg
rcrb
adc
loopne
ret
mov
add
mov
movl
xchg
mov
jns
iret
cltd
mov
xchg
jo
xor
icebp
mov
push
popa
xchg
xor
pop
popl
loopne
bound
pop
sub
shl
inc
mov
add
push
lret
adc
subl
ret
hlt
jp
jp
pop
movsb
jbe
push
xchg
sarb
dec
test
lea
sub
push
loope
sbb
mov
in
adc
ret
nop
inc
dec
stos
aaa
or
sarb
sbbb
mov
mov
mov
sbb
mov
insl
push
sub
dec
add
gs
je
sub
fucomp
cli
lods
inc
testb
pop
ret
std
and
sbb
fstl
and
fs
dec
aaa
cmp
bnd
pop
sbb
mov
lods
imul
jg
call
adc
dec
mov
add
daa
gs
popa
icebp
nop
adc
pop
pop
stos
mov
mov
sbb
xor
lret
clc
push
jo
insl
or
push
inc
lcall
pushf
add
jne
push
hlt
stc
mov
ds
pop
imul
nop
int
rolb
mov
into
xor
mov
dec
fadds
ja
adc
faddp
lcall
insb
add
rclb
sbb
mov
dec
ret
and
int
fmuls
mov
shrl
xchg
pop
out
xor
aad
clc
lods
adc
lea
xchg
sbb
shlb
lock
testb
sbb
fisubl
orl
repz
dec
add
pop
mov
les
rorl
add
add
ljmp
adc
gs
fstpt
inc
js
shlb
lods
add
rorl
or
pop
xchg
add
cmp
inc
sbb
insl
cltd
lods
cmp
xchg
loopne
mov
lods
sbb
sub
mov
mov
into
jo
pop
mov
cmp
pop
jmp
xor
mov
and
xchg
popf
mov
nop
add
addr16
orb
scas
in
push
xor
sub
test
ljmp
and
insl
popf
mov
mov
stos
sub
pop
inc
orb
dec
jle
sbb
cltd
jno
jno
addr16
enter
dec
adc
jp
loope
das
sbb
gs
xor
loope
sbb
add
dec
mov
adc
xor
adc
jecxz
add
shll
push
pop
dec
ljmp
sbb
push
out
fwait
rcl
leave
mov
add
add
jmp
das
shll
iret
lock
andl
dec
ja
add
sub
xchg
xchg
sbb
jg
rcl
insl
in
stc
dec
dec
xorb
pop
lods
cltd
rcl
jmp
les
add
mov
imul
dec
sub
bound
incb
sahf
xchg
adc
cmp
call
inc
sub
inc
dec
jl
jne
fisttpl
pop
mov
aam
dec
add
dec
jl
cmc
push
cmp
inc
cmp
xchg
fdivl
adc
pusha
testb
mov
add
mov
stos
daa
push
das
icebp
mov
add
xchg
cmp
push
popa
inc
push
cmp
push
subl
lods
lods
rclb
clc
add
cmp
push
inc
scas
clc
out
cmpsl
mov
inc
sbb
dec
mov
add
add
push
addb
nop
in
mov
sbb
fstps
or
les
aas
adc
adc
mov
jo
lcall
jno
cmc
aam
adc
mov
jns
jo
mov
jl
dec
int
mov
jecxz
jne
inc
mov
mov
ljmp
jmp
loopne
sub
mov
add
je
aas
imul
pop
cltd
jno
xchg
addr16
mov
and
adc
xor
loop
andb
mov
fadd
sub
loopne
orb
cmp
jecxz
cmp
xchg
jg
inc
add
shl
lahf
ret
inc
and
inc
imul
xchg
cmp
stos
cmp
pusha
push
dec
lea
or
adc
push
mov
mov
mov
xchg
mov
mov
ljmp
mov
scas
mov
fstl
pop
scas
add
sbb
or
iret
xchg
ja
insl
sbb
adc
rol
fwait
mov
xor
and
inc
and
out
enter
test
or
cli
fmulp
sub
stos
cmp
sub
mov
jno
dec
ljmp
movsb
cmc
mov
ret
popl
add
outsb
shrb
pop
ror
mov
mov
fwait
lods
addr16
lods
xchg
xor
pop
ret
mov
fldenv
cmp
je
xchg
mov
movsb
out
scas
movsb
mov
sub
cld
into
xor
mov
movsl
inc
jmp
dec
or
add
pop
addr16
sub
lods
stos
addb
sbb
int
test
jne
add
sbb
inc
sahf
out
inc
cli
mov
sbb
mov
dec
sti
mov
or
jge
into
jecxz
add
insb
cmpsl
push
outsb
xchg
movsl
mov
mov
repnz
repz
sti
mov
push
jne
push
addb
push
pop
or
and
xor
mov
fists
mov
lods
mov
jne
pop
or
aas
fdivl
jb
inc
cmp
or
rolb
push
push
or
test
adc
jae
push
sbb
xor
mov
popa
rol
ljmp
rcrl
add
xorb
jle
sbb
add
daa
cmp
pop
pop
pop
ds
add
or
lods
dec
fidivl
sbb
out
jo
orl
adc
and
fs
jge
add
ror
or
test
jecxz
pop
js
jle
and
add
dec
enter
fcoml
or
inc
outsl
cmp
dec
push
sub
ja
jnp
fistl
xor
add
addr16
enter
fildl
clc
popa
lock
pop
bt
xchg
lods
in
add
mov
add
sbb
mov
shll
fwait
push
loopne
aam
out
mov
cmp
je
dec
ja
jecxz
fs
idivb
jb
or
and
and
add
add
outsb
cmp
test
dec
pop
sbb
aas
or
pop
sub
stos
xchg
repnz
mov
repz
adc
push
jns
inc
test
pop
sbb
or
movb
popf
in
jl
rcrb
jo
sahf
scas
and
inc
mov
jge
out
or
cmc
and
add
mov
call
add
lea
pop
les
pusha
call
ret
or
mov
mov
fldl
push
add
sub
addr16
insb
int
sub
inc
cmpb
sbb
cmp
mov
dec
and
add
mov
mov
pop
movlps
aas
push
or
test
add
mov
or
add
fdivrs
add
clc
and
in
in
xor
js
jecxz
push
fistpll
pop
ret
jo
sbb
adc
mov
mov
mov
jecxz
lret
repz
stos
divb
lods
popa
xlat
rolb
ret
cmpsb
and
inc
push
cmp
fmull
mov
out
add
sti
jnp
loopne
sarb
popa
movl
xchg
add
lea
filds
or
insb
inc
shll
test
push
pop
xchg
cmp
add
sub
in
xor
mov
gs
in
xor
mov
cmpsl
mov
repz
imul
aas
rclb
out
in
add
rorl
add
sub
repnz
test
femms
ret
xor
mov
and
test
test
push
fwait
xor
xlat
js
cs
add
andb
inc
dec
in
add
mov
addb
pushf
test
sbb
dec
cmp
xor
or
xchg
test
repz
mov
ret
shl
add
adc
sbb
jmp
dec
pushf
add
stos
dec
jecxz
and
arpl
mov
and
cmp
ret
orl
ss
sbb
pop
jl
or
push
dec
and
mov
mov
inc
or
xchg
adc
jge
movsb
andb
sub
icebp
cmp
inc
push
adc
push
shlb
dec
jae
sbb
adc
inc
pop
push
inc
outsl
pop
test
xor
adc
and
inc
sar
sbb
dec
cmp
jge
fisttpll
pop
in
ret
sbb
sub
rolb
orb
and
push
lods
push
mov
adc
adc
mov
mov
inc
daa
cmpb
shr
inc
fldpi
imul
aaa
pop
popa
cs
dec
dec
cli
cmc
dec
xchg
shlb
imul
leave
rolb
push
dec
mov
fldl
push
lret
and
dec
pop
cmp
jl
inc
cwtl
nop
lret
push
and
jge
daa
movaps
cld
xor
adc
movsl
enter
add
loopne
pop
andb
xchg
xor
add
xchg
insb
add
sbb
cmc
nop
or
andb
sbb
pop
scas
cmp
mov
dec
dec
jmp
push
imul
or
push
push
pop
insl
add
or
rol
push
fs
cld
push
rol
jmp
test
add
and
mov
andb
jo
imul
inc
mov
mov
cmp
dec
fiaddl
ret
mov
xchg
sbbb
inc
loopne
cli
mov
cmpsl
mov
mov
fs
cwtl
push
ds
cmp
and
and
mov
dec
sbb
mov
test
add
xchg
push
pusha
insl
cmc
adc
or
gs
and
out
add
xchg
jbe
or
andb
jmp
ds
mov
in
in
jo
sbb
jnp
in
mov
cmp
push
adc
das
jle
andb
dec
popf
imul
insb
in
jp
hlt
push
les
aas
mov
jg
lret
xor
enter
mov
pop
iret
or
mov
subl
andl
sbb
xor
xchg
xor
mov
js
push
xchg
jp
or
inc
sbb
xchg
and
sbb
adc
ss
inc
jmp
mov
test
sbb
mov
mov
xchg
push
lea
and
sbb
add
add
stos
push
fwait
dec
aam
in
sbb
mov
lea
sbb
push
mov
cmp
das
popf
sbb
pop
frstor
sub
xchg
pop
mov
adc
sbb
pusha
imul
mov
push
and
dec
and
jne
loop
fnstenv
add
pop
cmp
mov
mov
sub
pop
push
imul
dec
xchg
test
cmp
loopne
dec
push
mov
insl
mov
sbb
andb
ret
inc
jmp
mov
mov
push
pop
sarb
int
imul
loopne
or
lret
xor
push
mov
nop
sbb
sbb
mov
and
mov
pop
jmp
jae
mov
mov
xor
inc
cmc
adc
cmpsb
mov
shl
or
adc
mov
dec
push
jmp
push
imul
js
jmp
xchg
loope
dec
cmp
mov
mov
rcll
xchg
or
push
add
test
pusha
adc
xchg
push
movsl
in
orl
mov
loopne
aaa
jecxz
or
sbb
mov
mov
test
shlb
test
pop
push
scas
stos
sub
cmpsl
inc
imul
mov
cwtl
inc
mov
and
add
inc
hlt
movsb
mov
add
enter
dec
jb
mov
fcmovb
popl
or
pop
jae
lea
pop
gs
mov
mov
movsl
scas
sub
add
ret
es
xchg
test
pop
adc
mov
or
pushf
sub
lea
je
cmp
jl
test
lods
jno
add
enter
imul
sarb
pop
or
jo
push
push
jnp
mov
pushf
or
loope
xor
mov
dec
ljmp
push
inc
jno
dec
xor
push
lahf
adc
lea
pop
sbb
cmp
loope
push
popa
sti
pop
shrb
sbb
outsb
sbb
int3
inc
pop
cmpb
or
jno
scas
jnp
pop
sbb
in
xchg
icebp
xchg
cmp
sbb
mov
xor
pop
imul
push
pop
mov
arpl
dec
adc
xor
sbb
adc
insb
adc
mov
hlt
and
mov
fcoms
pop
dec
mov
and
fs
push
inc
xchg
xchg
adcl
or
ljmp
pop
add
adc
out
pop
ffree
add
fs
lds
sub
add
lea
mov
sub
in
rcrl
jo
jo
imul
jo,pn
and
adc
or
sub
test
xchg
adc
stos
dec
xlat
inc
gs
add
sbb
mov
mov
mov
mov
jae
xor
xchg
lods
xchg
mov
sub
or
lods
inc
jmp
push
cmp
ja
mov
xchg
nop
stc
and
lahf
push
es
add
arpl
fwait
ret
movsl
jo
clc
push
shll
rcl
and
inc
shl
lea
adc
imul
mov
pop
subb
fisttps
stos
inc
sbb
imul
mov
and
pop
pop
roll
cmp
js
adc
mov
mov
inc
mov
xchg
dec
lea
pop
rcll
mov
aam
fildl
shl
xchg
mov
enter
dec
jno
pusha
mov
into
inc
int3
loopne
jbe
push
sub
popf
push
fimull
mov
mov
sbb
sbb
add
inc
jne
xor
mov
xor
and
jae
sub
push
push
mov
cmp
fwait
pop
arpl
add
sbb
popa
cmp
pop
cmpb
addb
xor
test
xchg
fs
imul
insb
je
push
adcb
cmpb
or
nop
push
add
jl
mov
int3
aas
or
jns
jbe
xchg
jnp
sub
sbb
mov
stos
add
mov
or
jp
call
push
pop
inc
mov
sub
dec
lea
jmp
mov
je
cwtl
rorb
das
ja
test
add
or
test
rcll
sbbb
sub
dec
outsl
sub
mov
into
mov
push
mov
pop
push
cltd
push
popf
add
sbb
xor
cwtl
shlb
fucomi
inc
inc
or
pop
pop
lock
shll
flds
add
lcall
mov
and
xchg
jns
outsb
pop
cltd
inc
xchg
and
sub
cmp
sbb
inc
stc
pop
add
xchg
and
adc
sub
insb
imul
push
and
dec
push
mov
dec
ja
fwait
imul
add
lret
pop
ret
and
shll
sub
xor
orl
inc
inc
sub
fistps
or
and
repz
mov
inc
sub
sub
test
inc
add
add
loopne
pop
jmp
scas
andb
lods
lret
lahf
pop
or
adc
shll
and
lds
mov
add
inc
sub
pop
xlat
sbb
inc
cs
out
divl
out
xor
inc
adc
or
jno
jbe
inc
adc
iret
mov
jnp
xchg
cs
mov
rcrl
mov
sub
push
push
xlat
mov
adc
cmp
add
scas
mov
add
and
repnz
imul
pop
dec
xor
xchg
arpl
sbb
sbb
cmp
dec
jp
cmp
lahf
fsts
or
or
mov
icebp
adc
loope
hlt
inc
push
stos
sbb
aas
adc
jp
sbb
repz
mov
orl
xorb
call
sub
js
call
rorl
imul
sbb
inc
loopne
lods
push
scas
or
or
sbb
lea
dec
test
cwtl
add
js
loop
pop
cld
rcll
cmp
add
scas
inc
scas
sbb
sbb
lret
out
adc
les
add
and
and
pop
or
cmpsl
or
mov
iret
and
xor
add
sub
push
dec
lret
add
mov
ret
or
outsl
push
or
pop
popf
inc
in
xchg
push
lods
shrl
std
mov
pop
mov
shll
or
mov
sbb
xor
enter
ljmp
mov
fdivr
pop
nopl
in
lret
cmp
dec
mov
out
push
xchg
and
cmp
inc
fwait
outsl
clc
sti
rolb
ret
mov
int3
lds
scas
inc
sub
pop
movsl
pop
shlb
sub
sbb
std
cli
wbinvd
xor
cwtl
or
sbb
popa
ret
clc
fwait
and
xor
daa
pop
push
sbbb
std
arpl
or
and
imul
loopne
dec
push
pop
jne
stos
leave
pusha
je
adc
and
jae
push
fistpll
xor
mov
mov
fildl
adc
xor
sub
lahf
paddusw
pop
das
dec
cmpsb
mov
adc
fcmovnb
addr16
movsb
mov
adc
cmp
add
mov
jo
mov
insl
jnp
mov
mov
sbb
add
cmc
roll
sbb
xor
test
mov
fstpl
lds
mov
or
or
adc
and
mov
pushf
mov
and
sbb
scas
outsl
mov
adc
xlat
fdivrs
and
test
jg
daa
in
repz
sbb
and
sbb
mov
jne
cmpsl
lods
add
cmp
cltd
cs
inc
out
lret
aas
fistps
cmp
notl
cltd
cmp
lock
sbb
outsl
push
cmpb
push
sub
lret
movsl
mov
sub
nop
sbb
inc
and
jnp
and
inc
or
in
jns
pop
cmp
mov
add
popa
inc
adc
jmp
mov
inc
cmp
dec
cli
les
mov
add
mov
xchg
insb
imul
inc
cmp
daa
loope
pop
lods
sub
push
enter
fwait
jo
fisubl
dec
ret
mov
dec
lods
mov
inc
movsl
imul
cmp
sbb
imulb
xchg
loopne
pop
aas
in
lock
outsl
inc
or
test
insb
add
mov
dec
in
sbb
push
xchg
rcll
sub
and
push
jo
jg
fildl
mov
ljmp
add
pop
sahf
repz
in
filds
adc
inc
stos
add
mov
enter
xchg
cltd
inc
adc
jae
sti
push
sub
sub
rorb
in
mov
cmp
loope
fcmovnu
daa
pop
jne
call
movsl
pop
dec
loope
sbb
test
jne
add
dec
ds
in
movsb
pusha
pop
dec
out
mov
lds
mov
adc
sti
add
and
inc
or
call
push
outsb
pop
out
inc
arpl
andl
inc
mov
push
sbb
call
lods
inc
jg
inc
or
inc
mov
inc
lret
add
sbb
inc
or
loope
cmp
test
add
les
cmp
adc
fwait
sub
pusha
mov
rclb
push
sbb
add
mov
es
pop
shr
sub
add
addb
mov
insl
inc
cmp
xchg
cmp
or
lret
rcrl
in
or
push
dec
mov
xchg
xchg
loope
ret
ss
inc
movsl
inc
fadds
or
arpl
dec
adc
pop
clc
cmp
adc
roll
out
mov
xchg
shlb
inc
mov
scas
sub
adc
cmp
movsl
mov
pop
fcomps
sub
pop
add
xchg
or
fstpt
ficomps
clc
mov
lret
std
dec
push
or
bound
inc
jge
scas
gs
inc
xor
out
syscall
pop
fdiv
loopne
pop
enter
inc
test
loopne
push
jb
addl
xor
ficoml
lods
or
push
loop
xor
lret
inc
xchg
dec
mov
sub
testb
mov
jecxz
xor
adc
les
repnz
mov
add
ret
pop
mov
outsl
pop
jle
fwait
bound
je
mov
test
cmp
js
mov
adc
loopne
inc
and
mov
cmp
mov
add
loope
xchg
push
inc
imull
add
jp
inc
or
mov
and
xchg
js
outsb
rcrb
jecxz
aam
sub
cmp
rolb
loop
stos
mov
leave
pop
xchg
push
push
pop
das
pop
mov
add
clc
mov
stos
add
sbb
mov
sub
enter
pusha
push
and
daa
push
and
pushf
lcall
test
inc
pop
js
mov
lods
xor
add
lret
sbb
mov
mov
shlb
loope
loope
mov
iret
inc
mov
adc
testb
movsb
loopne
addr16
lret
bound
loop
sub
or
js
mov
in
arpl
pop
out
js
mov
ret
sbb
or
add
pxor
test
insl
test
andl
sbb
fbstp
adc
jnp
popa
mov
sub
or
insl
pop
insb
pop
mov
fimuls
cwtl
rolb
int3
ret
cmpsl
pop
and
paddw
inc
jae
pop
push
popa
test
adc
fiaddl
jmp
xchg
rolb
pop
inc
xchg
jge
mov
mov
inc
push
pop
sbb
push
ret
add
out
xor
pop
insb
push
cmp
sbb
and
test
ret
jne
bound
js
lods
dec
inc
xor
mov
jp
iret
dec
and
adc
xchg
cli
inc
sbb
andl
das
cmp
cmp
dec
hlt
insl
push
shlb
data16
xchg
pop
dec
xchg
push
add
sbb
and
jo
daa
in
lret
adc
sbb
pop
mov
sbb
es
xorb
pusha
mov
adc
xchg
sbb
repz
add
sbb
test
and
sbb
sub
jecxz
movsb
sbb
sbb
mov
movsb
clc
js
scas
imul
inc
psraw
orl
mov
mov
cld
xor
adc
jmp
addr16
bound
mov
movsb
popf
and
sahf
popf
lods
rclb
nop
dec
popa
test
faddl
stos
rolb
aas
inc
jae
xchg
and
jbe
sub
adc
mov
mov
mov
xchg
repz
mov
add
mov
push
movsl
lods
sbb
jne
pop
icebp
gs
add
aaa
jmp
call
sub
sbbl
or
pop
mov
mov
mov
stc
dec
enter
sub
jbe
les
lcall
push
and
sub
inc
mov
sahf
adc
add
xchg
add
mov
movsb
inc
adc
mov
or
js
sbb
xchg
inc
mov
dec
fdivs
cmp
cwtl
imul
xchg
push
pop
sahf
rorl
dec
mov
inc
dec
pop
push
cmp
aam
clc
lds
or
lea
add
lods
or
xchg
test
les
inc
dec
adc
push
push
jns
in
mov
adc
jno
js
inc
rcrb
adc
sub
and
add
fdivrl
cmp
popa
mov
movsl
add
mov
and
add
mov
inc
dec
lahf
ret
rcrb
outsb
mov
lea
ror
nop
ds
cltd
in
cmc
xlat
ret
test
jbe
sbb
pop
inc
shl
hlt
adc
mov
sbb
aaa
push
add
xor
or
and
sbb
shlb
cli
insl
adc
sbb
sbb
sbb
andl
inc
add
loopne
dec
mov
out
inc
pushl
and
sub
mov
xchg
sub
cmp
sub
sub
test
ret
sub
popa
add
or
jno
ret
jne
ret
add
subl
and
test
arpl
dec
fbstp
es
inc
inc
cltd
adc
xorb
xchg
pop
call
mov
shl
inc
sub
shl
or
or
and
rcrb
xchg
pop
mov
je
rolb
sub
add
aas
inc
sbb
xchg
add
add
pop
dec
pop
orb
pop
scas
jmp
push
sub
jns
jbe
inc
sbb
xchg
cmc
sub
pusha
jge
decl
and
add
sub
imul
push
fsub
push
lret
inc
lods
nop
add
inc
jns
jp
dec
ret
les
mov
inc
add
and
inc
mov
pop
sbb
mov
jle
test
mov
cmovg
dec
adc
orb
sbb
lahf
jp
enter
pusha
adc
add
popa
xor
jmp
sub
adc
mov
cmp
inc
add
pushf
or
shll
xor
xchg
in
loopne
push
cmpsb
jo
xchg
mov
or
sub
fsubrp
or
and
pop
pop
add
and
mov
cmpsb
shlb
sti
mov
sub
push
sub
rclb
jecxz
sbb
aaa
aaa
mov
mov
cmp
mov
loopne
inc
mov
lret
or
or
test
insb
cld
dec
sahf
mov
fisubrl
imul
rcll
pop
sbb
data16
xor
pop
and
out
push
fwait
aad
jae
add
dec
sub
fs
cmc
test
cmc
cmpb
xor
jmp
gs
inc
xor
add
or
cltd
xchg
xor
loop
sub
add
cmpsb
test
ret
imul
pop
test
cltd
pop
jg
mov
mov
ret
mov
das
dec
sub
jle
je
adc
add
out
or
dec
xchg
cmp
movsb
in
jl
pop
fs
push
mov
fisttpl
in
enter
sub
sbb
and
mov
mov
repz
adc
dec
rorb
iret
xchg
cmc
inc
ret
inc
jnp,pn
jecxz
cmp
imul
mov
loopne
inc
mov
fwait
inc
cmp
insl
mov
add
add
mov
dec
mov
in
and
rclb
stos
or
mov
fs
popa
cli
ss
and
jne
or
inc
lahf
popf
divb
mov
movsl
xor
aas
dec
sbb
or
add
test
dec
test
jmp
push
mov
cmp
cmp
nop
movsb
stos
rcll
push
lret
ds
add
mov
inc
mov
or
dec
ds
xchg
jne
mov
jle
push
pop
pusha
adc
mov
cs
nop
dec
test
push
outsb
push
lods
xlat
xchg
add
adc
les
pop
push
adc
pop
shr
out
movsb
xchg
adc
cmp
jge
leave
sti
addb
and
push
scas
lods
icebp
push
push
push
add
test
dec
mov
add
jo
dec
inc
or
adc
or
sbb
push
push
andb
add
sbb
push
xchg
xor
arpl
and
push
lret
sti
sbb
mov
jne
pop
xchg
mov
inc
and
pop
lods
dec
dec
loope
js
mov
movsb
dec
and
test
insb
negb
mov
sbb
jg
daa
jecxz
cwtl
dec
ds
repz
and
push
pop
ljmp
pop
sub
pcmpeqb
dec
dec
push
dec
mov
lcall
jno
mov
xor
xor
aas
and
in
mov
call
je
in
inc
or
imul
es
push
jg
daa
lea
jo
mov
stos
invd
fcom
iret
into
das
push
jl
cmp
pop
or
and
xor
out
cmp
pop
inc
aas
inc
inc
or
out
push
mov
cmc
dec
mov
rorb
adc
in
lds
cmp
xchg
aad
int3
xlat
btc
pop
subb
push
test
sti
or
ds
mov
or
ljmp
hlt
push
inc
inc
pop
in
test
nop
subb
lret
mov
xor
mov
aam
jae
icebp
lods
xlat
in
loope
add
add
scas
sub
sbbl
aaa
cld
aam
push
out
fistl
test
lea
stos
sbb
sub
lods
pop
popl
test
ds
adc
and
sahf
mov
or
pop
xchg
pop
add
xchg
lahf
cmpsl
orl
mov
add
aas
cmp
mov
fsubs
or
jns
lcall
and
xchg
xor
sub
sub
inc
fcoms
rorl
dec
inc
dec
xchg
aam
push
xchg
pop
or
and
mov
lods
cmpsl
cmp
cmp
scas
add
lcall
xchg
aas
sbb
jl
addl
shlb
mov
ficomps
arpl
daa
jmp
and
frstor
add
sbb
ds
mov
push
es
movsl
aaa
clc
ret
enter
scas
xchg
mov
push
js
cmp
mov
popf
push
sbb
sub
add
stos
inc
jge
adc
inc
shll
adc
push
push
add
and
push
adc
jo
lea
xchg
add
mov
xchg
inc
lea
add
jge
and
js
cmp
stc
pop
add
out
adc
dec
stos
xchg
dec
mov
lahf
mov
loope
mov
sahf
push
outsl
adc
pop
add
add
lds
movsb
inc
pop
loope
iret
and
xchg
cmp
dec
nop
lock
mov
or
pusha
jge
outsl
mov
inc
add
xchg
add
rcl
or
loopne
mov
mov
out
subl
and
mov
call
push
inc
add
test
xchg
cmp
test
push
pusha
add
aaa
inc
jnp
inc
push
sbb
inc
xor
jl
dec
scas
or
or
shl
inc
add
inc
mov
and
mov
orl
dec
sbb
jecxz
add
test
test
ret
sbb
jge
rclb
jl
or
outsb
mov
addr16
stc
scas
dec
adc
cmc
xor
mov
ret
lea
push
jne
test
adc
sbb
mov
stos
and
es
sub
lock
jecxz
add
cmp
popl
nop
and
sbb
mov
adc
movsb
mulb
pop
sbb
pusha
cwtl
sub
or
cltd
pop
rclb
mov
jbe
aad
lret
adc
ss
or
push
or
js
or
test
xorl
sbb
lock
adc
fildll
xor
inc
add
insl
add
in
stos
das
pop
ret
xchg
imul
lcall
mov
xacquire
mov
mov
sub
jmp
cmc
arpl
xchg
adc
and
loopne
ds
inc
cmp
and
push
push
jmp
cmc
mov
cwtl
push
imul
adc
fisttpll
notb
and
inc
mov
loopne
xchg
les
pop
push
std
jnp
or
or
push
pop
jp
cmp
jmp
add
add
pop
in
mov
jmp
xchg
rclb
inc
adc
xchg
aas
inc
iret
daa
add
push
shrb
or
aas
jmp
arpl
add
dec
subl
adc
adcb
ja
lods
arpl
rorb
pop
jo
loop
enter
adc
test
mov
inc
aaa
shrb
dec
inc
stc
dec
jbe
nop
adc
movsl
orl
enter
pop
add
movsb
dec
fsubr
es
and
push
jns
or
jo
icebp
inc
enter
mov
pop
inc
jnp
push
jle
ficoml
pop
cli
lret
push
mov
mov
mov
xorl
sbb
popl
xor
add
sti
rcrb
imul
lea
addb
out
icebp
jmp
enter
and
mov
and
popa
xor
lret
roll
rorl
pop
jae
test
xchg
dec
sub
mov
push
sub
inc
push
add
xchg
pop
js,pt
js
add
xchg
lock
push
xchg
add
bound
push
and
shrl
pop
ss
inc
js
mov
ja
inc
pop
adc
cmp
mov
test
cmp
insb
imul
lock
cmp
inc
mov
adc
gs
std
cmp
push
add
add
or
jbe
insb
and
es
adc
inc
pop
ret
add
and
pop
insb
xchg
in
fldl
mov
sbb
or
movsl
das
cmp
mov
sbb
adc
mov
lds
lds
and
xchg
rcrb
fcmovne
cmp
push
rcrb
paddq
sbb
push
aas
lods
and
lahf
sbb
mov
adc
mul
fwait
loope
mov
mov
fists
xchg
inc
dec
pusha
nop
aas
jns
adc
and
mov
or
fcmovu
cmp
stos
push
add
inc
mov
mov
cmp
pop
and
mov
add
mov
popa
cltd
sub
inc
mov
push
add
pop
pusha
push
sub
and
ret
push
or
and
fiaddl
push
sti
inc
subb
jno
dec
pusha
cltd
loopne
xchg
out
xchg
cmp
jbe
add
sbb
cmpsl
mov
in
add
mov
mov
stc
fidivl
xchg
mov
cmovns
test
or
sub
or
sub
inc
out
mov
cmp
fisttpll
cmp
dec
jb
add
xor
jl
adc
ret
xchg
insl
inc
daa
adc
adc
cmpsl
mov
out
jmp
inc
mov
aaa
fnstsw
and
jp
add
fsubl
negb
and
ficompl
dec
push
dec
and
inc
push
jge
scas
xchg
hlt
cld
add
outsl
add
sbb
or
or
xor
mov
pop
xchg
pop
fnstenv
movsbl
stos
pusha
lods
and
orl
mov
stos
pop
sbb
lret
dec
xchg
scas
or
push
pop
sbb
aas
cwtl
sub
dec
inc
mov
xchg
or
add
lea
mov
fidivs
sti
popf
and
sti
cmp
push
mov
or
cmp
mov
pop
and
mov
cmpsb
test
or
dec
pop
clc
cmp
je
rcll
push
sbbl
lret
add
pushf
fwait
mov
shl
jge
out
hlt
sahf
imul
cmp
cmp
popa
push
or
popa
aaa
mov
push
adc
lret
out
dec
sub
repnz
mov
xor
mov
xchg
int3
outsb
adc
mov
dec
stc
xor
mov
jno
adcb
add
adc
arpl
cmc
mov
push
or
mov
repz
pop
pop
cvtpi2ps
mov
ja
add
ret
jne
js
aaa
int
fsts
ret
push
inc
shr
xchg
stc
mov
mov
sti
cmp
gs
out
push
lods
enter
sub
pop
shrl
es
cmpsl
xchg
adc
lcall
xor
rcrb
rcrb
sub
mov
inc
jmp
sbb
loope
mov
inc
fcomps
and
shlb
or
or
add
sub
push
out
ds
and
push
xchg
sub
inc
mov
xor
and
es
push
pop
or
rolb
inc
mov
jo
sbb
xchg
add
sarl
inc
jmp
cld
outsl
or
or
jg
out
cs
push
add
fstp
outsb
fwait
popf
insb
add
add
mov
dec
cwtl
cmp
sbb
push
imul
lea
jnp
inc
lcall
or
mov
cmp
and
fnstenv
fistps
mov
mov
cs
sbb
decb
enter
arpl
xchg
xchg
test
push
xchg
ds
pop
pop
push
dec
out
sbb
cmpsb
sti
test
imul
push
push
ljmp
lahf
adc
cltd
pop
ljmp
jae
lods
jne
iret
paddb
aam
and
arpl
and
ds
xor
or
addl
xchg
jmp
pop
push
push
or
or
push
stos
add
xchg
dec
sbb
flds
sti
rolb
ljmp
cmpsb
scas
movsb
lock
push
jns
loope
addr16
shll
or
push
icebp
pop
xor
ret
fimuls
xor
inc
mov
mov
repnz
jae
xchg
enter
mov
movsl
and
sbb
add
das
push
mov
lahf
aad
add
sbb
and
sbb
inc
cld
test
aam
or
inc
or
adc
jge
mov
adc
xor
push
aam
imul
inc
shlb
or
xor
push
push
cli
dec
int
into
sbb
and
mov
adc
cmp
out
lds
sti
pop
daa
mov
add
je
fwait
jle,pn
and
mov
dec
pop
adc
mov
shrb
outsl
add
xchg
fldt
xchg
filds
dec
rcl
mov
xchg
bnd
pop
mov
aad
rcr
add
and
xlat
mov
int
jl
pop
inc
sub
sub
mov
outsb
or
in
mov
cltd
das
sbb
xchg
dec
lret
aam
sti
adc
mov
jbe
dec
mov
adc
dec
jne
leave
out
mov
stc
out
test
xchg
mov
ret
clc
popa
xchg
push
in
test
jmp
inc
sbbb
mov
outsb
jb
iret
rcrb
sti
sbb
xor
sub
or
pop
jp
inc
mov
test
xchg
push
imul
and
pusha
add
popa
push
leave
imul
dec
cmp
and
inc
ss
loope
sbb
cmp
push
cmc
push
lea
sub
sbb
xchg
lock
jecxz
jle
das
test
push
sbbl
add
dec
lret
add
mov
inc
shrb
outsl
add
repz
xchg
sahf
mov
xor
jnp
outsl
mov
aas
push
pusha
xor
add
or
jo
mov
test
jb
in
pop
sbb
scas
sub
loope
sbb
shr
mov
ret
sub
inc
call
add
fdivrl
cmpsb
stc
push
rcl
pop
inc
sbb
mov
cmp
push
inc
stos
orps
ds
in
jne
popf
fisttpl
sar
mov
push
pop
movsb
dec
push
pop
iret
push
popa
adc
lds
fildl
repnz
add
pop
push
pop
in
pop
faddl
dec
fdivrp
in
jae
add
or
pop
jno
inc
rcl
shl
push
cltd
sbb
js
mov
test
add
es
dec
pop
xor
push
data16
lea
xor
jo
pop
jmp
mov
test
mov
fs
and
push
mov
les
mov
add
test
popl
adc
or
mov
movsb
or
addr16
dec
mov
ja
adc
movsl
test
dec
or
es
dec
jne
cmc
nop
xchg
aas
xlat
push
and
inc
fucomi
aam
in
je
rcr
dec
inc
xlat
addl
pop
mov
xorl
add
xor
push
sub
ja
popf
rolb
inc
sbb
mov
adc
dec
or
sub
sub
ror
test
int3
push
inc
xchg
sub
mov
lret
or
fsts
mov
loope
dec
imul
sbb
dec
stc
mov
push
and
or
inc
clc
mov
iret
jo
mov
pop
and
jmp
dec
addl
ss
jecxz
sar
sub
xor
test
rcll
or
mov
cmc
push
dec
jecxz
add
sbb
xor
jmp
cmpsl
xchg
lret
inc
mov
sub
aas
lcall
and
inc
xchg
inc
add
push
rorb
pop
and
add
push
cmp
ss
mov
jo
testb
add
outsb
stos
inc
jnp
pop
dec
lret
add
cltd
rcrb
pop
leave
popa
sbb
adc
mov
lcall
dec
clc
mov
pusha
mov
clc
or
xchg
iret
ja
rolb
cmp
dec
movsb
jns
xchg
ret
xlat
sub
nop
adc
mov
cwtl
fcompl
in
ljmp
xor
push
jno
jl
pop
outsl
mov
lea
dec
repz
xchg
cmp
adc
adc
pop
push
fwait
ljmp
xchg
xor
stc
or
sarb
pop
inc
jge
call
mov
lea
aas
mov
pop
adc
mov
xor
jnp
pop
neg
xor
fldcw
mov
xor
leave
mov
subb
cmpsl
add
cmp
xor
mov
add
sub
jl
ffreep
aad
sbb
mov
aam
dec
test
dec
mov
in
fstpl
or
dec
cmp
xchg
add
sarb
push
adc
pop
mov
xor
dec
mov
cmp
xor
fimull
arpl
push
ret
sub
cmp
lret
dec
lods
aad
mov
and
test
pop
mov
mov
lret
xor
add
pop
sbb
arpl
incb
cmp
je
jge
inc
xchg
in
js
sbb
mov
sbb
adc
test
imul
pop
add
add
dec
adc
out
lcall
lock
clc
dec
arpl
das
sbb
sbb
or
xchg
xor
inc
std
adc
fnsave
test
lock
jge
mov
dec
lock
jmp
or
std
add
mov
outsl
mov
adc
sbb
mov
fs
sarl
test
jmp
jp
pusha
call
cmp
rcll
lock
roll
jmp
dec
inc
add
insl
inc
cwtl
push
or
adc
movsb
enter
inc
inc
pop
inc
pop
jnp
sbb
fs
cltd
and
lds
inc
pusha
iret
push
xor
popa
xor
xchg
mov
mov
cmc
out
stos
and
cmp
cld
mov
in
dec
aaa
inc
leave
insl
nop
push
in
add
ret
daa
xor
arpl
fiaddl
popf
pop
cmp
and
mov
loopne
push
push
mov
jecxz
fimuls
pusha
add
inc
fildll
or
andl
rcll
ret
sbb
dec
sub
sub
push
cmpl
rol
addr16
mov
dec
add
pop
inc
ds
lcall
lcall
inc
sub
adc
mov
stc
adc
ret
and
xlat
mov
add
inc
lock
test
rol
shl
and
js
sbb
mov
jb
and
add
dec
inc
mov
lds
and
pop
dec
popl
js
insl
lahf
push
inc
jg
adc
nop
popf
and
push
nop
mov
or
xor
lahf
push
inc
adc
mov
adc
sbb
pop
lods
mov
inc
fwait
dec
xlat
shlb
pusha
dec
sub
mov
cmp
dec
or
das
cs
add
pop
pop
sub
aaa
pop
sub
adc
jmp
xchg
sbb
pusha
inc
dec
jg
jns
sbb
test
sbb
cmc
shll
add
push
push
ja
arpl
lret
lods
inc
orl
test
jp
xchg
xchg
inc
cmp
stos
push
int
loop
out
fs
ret
addr16
mov
ss
cmp
iret
sbb
into
nop
push
or
xor
movsb
dec
loop
jmp
and
jns
fadds
xchg
jge
outsb
out
push
sbb
jnp
fld
cmp
cmp
adc
roll
fisubl
jo
pop
bound
pop
sub
call
inc
lods
push
jne
ret
pop
loopne
xchg
or
push
mov
pusha
aas
dec
fucomp
scas
mov
clc
or
dec
dec
int3
dec
inc
xchg
xchg
or
adc
aam
add
nop
and
out
outsl
adc
dec
lods
pop
mov
and
push
fs
in
rol
es
sti
arpl
stos
lds
dec
test
mov
or
in
addb
sub
movb
mov
daa
mov
sbb
or
sbb
jmp
adc
push
shlb
dec
lock
pop
mov
inc
add
pop
cmp
loope
ret
gs
dec
inc
pop
xor
dec
fsubs
test
pop
xor
loop
mov
jbe
push
stos
loope
lcall
xchg
xor
pop
cmp
add
and
leave
dec
mov
hlt
movsl
test
adc
cmp
jmp
push
add
sbb
imulb
outsl
in
aas
sub
jg
insb
mov
ljmp
mov
jb
inc
clc
fsubs
inc
rcll
sbb
adc
add
imul
push
add
add
adc
sub
sub
xchg
sbb
adc
mov
xor
pop
xchg
movsb
bswap
cld
in
xchg
add
mov
mov
add
xchg
and
pop
out
scas
pop
jne
out
loop
xchg
jp
stos
ljmp
sbb
shlb
mov
cmc
mov
or
and
mov
adc
jns
mov
sub
in
int3
xor
sbb
ja
loopne
dec
int
imul
adc
mov
push
adc
add
cmp
dec
adc
movsb
sub
add
fisttpl
pop
sbb
ret
leave
outsl
sbb
adc
stos
pop
mov
and
jnp
pusha
out
sbb
popa
adc
and
add
sbb
mov
xchg
cmp
lods
mov
ljmp
xchg
cli
mov
xchg
dec
and
jo
arpl
das
jp
pop
fwait
push
lds
xor
mov
dec
out
add
gs
aas
mov
cltd
das
mov
shll
imul
mov
jmp
xchg
inc
xor
or
jne
ret
dec
kmovb
loop
mov
sbb
cmpsb
dec
xor
inc
orl
mov
mov
rorb
loope
fildl
mov
arpl
mov
add
add
adc
inc
and
bswap
dec
sbb
mov
xchg
jnp
lock
dec
inc
inc
loope
or
inc
mov
push
xor
orl
sar
lahf
mov
mov
pusha
and
call
jp
fstpt
inc
and
push
push
test
movsb
xchg
stos
test
lcall
xchg
loope
dec
inc
mov
adc
inc
loop
mov
or
add
call
addb
xor
dec
cs
xor
pop
sub
adc
punpcklwd
xchg
test
cmpl
add
subl
jbe
mov
adc
jl
fs
xchg
or
scas
jns
les
mov
stos
pop
cmp
loope
or
xor
push
lods
push
icebp
hlt
push
mov
pop
or
xor
inc
in
mov
js
fs
push
inc
adc
pusha
ds
and
les
adc
imul
xchg
out
pop
js
sarl
sub
test
sbb
movsl
push
mov
stos
aam
jne
push
and
rcr
in
sti
jnp
pop
add
int3
iret
addr16
push
dec
daa
bound
dec
or
leave
lods
push
out
popa
fldt
nop
data16
fldt
sbb
and
in
bound
imul
xchg
and
mov
rcrl
arpl
mov
pop
pop
pop
shll
inc
test
and
mov
xor
dec
loop
fcmovnbe
dec
inc
lds
fnstsw
fistpll
jmp
pop
dec
rclb
ljmp
adc
data16
sub
pop
pop
lret
mov
aad
dec
inc
add
pop
out
mov
dec
scas
push
ret
xchg
sub
movsb
movl
mov
std
cwtl
enter
push
shl
or
or
cmp
lods
aad
or
cwtl
fcmovnbe
scas
lret
sbb
inc
xor
insb
push
cmp
and
dec
fdiv
add
adc
fwait
cmp
mov
loopne
jnp
add
sbb
test
rorb
xchg
movsl
adc
cmpsb
outsl
testl
sbb
les
pop
stos
sbb
lock
shll
xlat
and
cwtl
lods
pop
mov
xor
lods
push
sahf
inc
cmovns
inc
jmp
out
mov
pop
jbe
pop
loopne
popa
popa
sub
jo
push
push
scas
inc
dec
dec
pop
enter
adc
outsb
push
inc
mov
or
insl
xchg
pop
pop
cmpxchg
xchg
lods
cmpsl
jmp
fildl
xorl
push
movsb
push
jno
das
adc
xchg
sbb
jbe
pop
or
sbb
adc
rcl
out
sub
push
cmpsl
arpl
jo
jge,pt
inc
lret
mov
and
cwtl
sbb
sub
arpl
cmc
bound
jp
sbb
jl
xor
dec
arpl
or
push
push
push
repnz
ja
cmc
xchg
aad
pop
lret
sbb
insl
mov
cs
movsl
xlat
rolb
jl
inc
add
or
mov
adc
sbb
sbb
sbb
or
rcrb
push
inc
jbe
mov
adc
into
arpl
xchg
pop
cmpsb
lock
daa
fldl
sub
inc
sti
xchg
notl
cmp
inc
cs
sbb
sahf
inc
pusha
jne
out
mov
inc
xchg
inc
das
ss
test
sbb
dec
dec
cmp
jg
repnz
arpl
stos
xor
mov
pushf
lahf
push
pop
ret
cmpsl
scas
enter
xor
std
ret
flds
sbb
sbb
or
push
mov
inc
push
leave
mov
xor
mov
ss
lret
dec
ds
adc
xchg
add
inc
sahf
outsl
test
mov
rcll
xchg
fidivl
jo
and
sbb
push
arpl
add
sbb
stos
adc
sti
add
dec
inc
int
mov
inc
inc
loope
xor
cmp
or
add
and
js
add
and
lea
bound
std
xor
sbb
negl
or
cmp
xchg
sbb
push
jb
int
push
xor
pop
pop
xchg
push
test
mov
adc
hlt
es
pop
mov
sbb
add
jg
jno
mov
bound
nop
inc
add
loopne
addr16
rolb
pop
subb
push
add
mov
pop
jecxz
mov
jge
data16
push
inc
add
fsubrs
jae
faddp
adc
mov
cmc
adc
dec
push
add
ffree
push
adc
adc
xchg
jecxz
or
pop
mov
mov
add
addr16
cmp
imul
sub
cmp
pop
ss
and
data16
mov
int3
aaa
mov
jb
mov
je
popf
xchg
scas
pusha
mov
movsb
fisttpll
sahf
ja
lret
mov
dec
fs
add
sub
movsl
push
test
std
mov
rorb
loopne
imul
stc
sub
fsubp
sub
imul
lret
gs
fisttpll
fs
sub
or
or
cmp
push
jnp
out
add
subb
movsl
mov
adc
movsl
add
inc
outsb
sbb
jmp
imull
mov
or
or
lea
subb
rcll
pop
mov
cltd
outsl
lock
cmc
and
xor
add
mov
ss
les
and
movb
imul
push
xchg
sub
cmp
test
pop
push
mov
sbb
xor
pop
add
cli
xchg
test
in
ret
nop
add
adc
fisttpl
pop
xor
movsl
add
rcrb
inc
loopne
filds
sub
push
in
lret
inc
xorl
addr16
sub
lock
mov
rclb
out
orl
into
pop
cli
push
stos
mov
data16
adc
adc
dec
fs
inc
sub
sub
add
lea
mov
notl
sbb
mov
fcomi
lahf
sbb
stos
int
cs
daa
negl
clc
and
outsl
loop
push
cs
xor
add
ja
sub
fbstp
mov
aaa
inc
xchg
sbb
lret
cli
jge
or
push
ret
inc
in
lods
jne
xor
imul
scas
insb
add
iret
rorl
mov
fimull
shrb
push
lock
jnp
push
and
pop
clc
int
xor
imul
stos
adc
test
mov
in
dec
lods
xor
mov
inc
mov
jmp
mov
movsl
pop
js
sub
mov
xor
ds
outsl
jmp
or
adc
pop
js
adc
push
cmp
dec
adc
push
popa
xchg
je
sbb
or
sbb
popa
in
mov
outsb
add
lahf
jb
or
adcb
dec
add
adc
test
mov
and
leave
xor
bound
xchg
call
adc
cmc
xchg
dec
or
jecxz
add
mov
sti
popf
mov
xlat
mov
scas
andb
mov
add
xchg
pop
and
adc
pusha
inc
fs
push
or
push
push
jb
add
jb
es
add
xchg
movsl
std
pop
mov
addr16
jb
xor
ljmp
add
idivb
sarl
and
shrl
out
add
mov
imul
push
push
and
rorb
cmp
bswap
in
dec
insb
mov
dec
aas
in
mov
inc
icebp
lahf
sbb
in
xor
or
inc
stos
cmp
cmp
es
push
int3
loope
pushf
fs
shr
clc
add
mov
pop
or
or
stc
push
addb
xchg
pop
push
in
jp
and
enter
dec
shrl
add
shrl
jp
imul
jg
jmp
fldenv
ljmp
insb
pop
cmpsb
xorb
dec
scas
adc
inc
adc
pushf
aas
jnp
loopne
jg
in
jb
xchg
pop
adc
popf
xor
xor
xchg
insb
dec
inc
push
dec
sbb
adc
add
xor
fs
int
jo
hlt
je
nop
lret
andl
xchg
fiaddl
push
push
movsl
lret
xor
cs
orb
js
outsb
call
push
or
mov
mov
mov
sahf
mov
push
adc
scas
roll
mov
rcrb
inc
jmp
add
pushf
push
cmp
add
adc
mov
or
xor
clc
ds
call
ret
mov
or
sub
cmpsb
lahf
sbb
imul
xchg
or
adc
repz
ret
inc
mov
pushf
sbb
mov
jge
cwtl
aaa
sbb
push
pop
inc
daa
mov
fildl
or
push
es
stos
test
dec
mov
jno
hlt
dec
mov
or
inc
xor
loope
sbb
lea
sub
mov
shr
leave
add
movb
mov
ljmp
push
cli
add
popf
sbb
mov
xor
mov
pop
push
push
ss
cmp
lea
mov
pop
cs
inc
xor
iret
pop
mov
add
in
movsb
into
xchg
icebp
sbb
jbe
or
inc
add
aam
lcall
lea
inc
pop
test
aas
cwtl
subb
pop
sbb
insb
push
sbbb
movsb
push
ret
sbb
sbb
xor
cwtl
js
gs
push
adc
sub
push
aam
cmp
outsb
outsl
call
jbe
sbb
fdivrs
mov
fistpll
xchg
imul
and
adc
jno
dec
xor
fcompl
adc
ficoml
adc
in
jne
fadds
adc
shll
or
pop
jb
cmp
dec
push
pop
adc
rol
sub
pop
xchg
dec
add
xor
sahf
mov
xor
add
mov
ljmp
test
dec
cwtl
adc
add
inc
mov
mov
add
lods
lahf
mov
mov
daa
sarl
xor
jle
adc
divb
stos
or
mov
xor
lea
and
xchg
fwait
cmp
gs
std
push
mov
outsb
dec
sbb
sub
mov
test
pushf
testl
loopne
jp
xor
add
ficoml
pop
fucompp
push
lret
xchg
xchg
mov
push
pop
mov
adc
mov
push
outsb
pop
lret
mov
movq
je
xor
and
push
push
icebp
push
enter
mov
pusha
fmuls
dec
enter
fistl
sub
fld
mov
adc
int3
rolb
stos
dec
outsl
pop
mov
lret
jns
or
loope
adcb
or
cmp
xchg
jo
mov
out
adc
movsl
fdivs
mov
rclb
and
sub
mov
add
ret
pop
fbld
lds
dec
dec
or
out
outsl
add
adc
cmpsb
or
aad
adc
dec
call
adc
mov
inc
les
mov
sbb
mov
sbbb
les
into
fst
stos
sarl
push
dec
push
loopne
fcoml
mov
sub
add
sti
push
hlt
add
loopne
fs
repnz
adc
fldt
movsl
int3
inc
imul
push
jo
mov
jecxz
xchg
push
pop
aaa
ret
les
jle
mov
jecxz
mov
dec
fsubl
pop
movsl
jmp
shlb
cmp
mov
push
xchg
out
cmp
nop
loope
aam
ficoml
xor
inc
mov
outsb
mov
jl
xchg
push
pop
mov
iret
sbb
and
lret
push
xlat
push
or
stos
mov
mov
shrb
pusha
ret
insb
jp
push
inc
pop
mov
mov
fbld
or
jg
popa
jbe
lds
sbb
inc
mov
mov
pusha
pop
xchg
sbb
stos
cmp
dec
fistl
or
fldenv
hlt
test
push
out
test
sar
push
inc
fisubrl
cmp
andb
imul
nop
ret
rorl
sbb
xor
xchg
and
mov
pop
adc
cs
outsl
jge
adc
bound
adc
mov
in
xchg
jge
push
mov
add
jo
shr
and
roll
fldl
or
movsl
push
push
and
leave
mov
or
and
cs
icebp
add
vmovss
test
pop
mov
pop
mov
pop
data16
mov
mov
push
sbb
sbb
popa
sbb
push
loope
or
add
add
pop
sbb
inc
and
popa
xor
or
or
outsl
andnps
mov
or
mov
jnp
adc
sub
add
in
push
dec
sbbb
loope
push
sbb
mov
sbb
push
push
inc
dec
xor
adc
pop
jmp
mov
mov
pop
rcll
sbb
pop
xchg
mov
xor
mov
mov
fst
rclb
ficompl
out
inc
mov
pop
mov
add
or
iret
pop
or
daa
mov
sbb
call
jl
fbld
mov
fsubrs
jecxz
xor
jle
lret
arpl
push
ret
sub
iret
add
sbb
pop
pop
jg
sbb
ret
std
dec
je
add
outsb
aad
sbb
mov
mov
or
imul
add
pop
add
mov
add
jno
mov
movsb
loopne
add
push
jbe
jno
and
scas
leave
gs
mov
pop
dec
add
sub
inc
or
fmull
push
mov
add
cmp
push
push
add
fmuls
mov
pop
pop
cwtl
jb
adc
outsl
pop
gs
add
rolb
gs
daa
push
std
jns
jno
add
push
xchg
ss
in
loopne
scas
jmp
movsb
add
jl
ret
test
adc
addr16
fwait
pop
shr
bound
je
jno
lods
out
loope
or
cmpsb
dec
frstor
and
pop
jbe
sbb
scas
clc
cmp
shlb
sbb
clc
pop
mov
mov
and
jp
xchg
daa
add
data16
and
orl
cmpsb
jns
push
push
add
inc
jbe
std
cmp
lods
outsl
mulb
out
mov
negl
mov
rcrb
outsl
pop
inc
jecxz
add
scas
lds
shrl
add
jmp
jp
mov
sbb
push
les
sbb
mov
inc
pop
f2xm1
sbb
aaa
loope
and
inc
inc
xor
inc
jnp
add
or
inc
inc
call
sub
add
and
cmp
pop
lods
cmp
push
mov
fwait
mov
adc
mov
and
inc
gs
mov
jb,pt
push
push
in
add
movsb
sbb
or
inc
inc
enter
push
adc
pusha
andl
movsb
jg
mov
adc
enter
test
clc
or
mov
or
mov
xchg
ret
lock
jge
outsl
mov
pop
pop
pop
xchg
lods
fistpll
sbb
lds
testl
sub
cmpsl
inc
add
push
dec
push
pop
adc
test
pop
adc
adc
jo
and
add
add
leave
push
cmp
lea
js
outsl
adc
sbb
out
add
imul
dec
addb
leave
inc
sarl
in
lods
add
jo
add
mov
push
cmp
mov
rorl
pusha
or
mov
jnp
dec
daa
repnz
ret
jbe
xchg
mov
jp
sub
movsl
in
pop
daa
add
ret
mov
in
push
ss
xchg
or
shrb
push
ret
xchg
ljmp
pop
mov
pop
xor
inc
adc
push
cs
test
mov
daa
add
adc
adc
push
pop
jb
add
or
pop
aas
mov
xchg
scas
jle
mov
mov
jae
fmuls
pop
jmp
lods
shll
pusha
and
fstl
or
sub
mov
push
inc
cmp
jns
xorb
pop
icebp
and
and
cmp
dec
rcrl
mov
call
mov
mov
ficompl
and
lret
test
les
dec
or
jbe
jae
daa
scas
add
sarl
and
xchg
and
xchg
mov
jb
inc
ret
cmpl
xchg
mov
push
or
insb
push
mov
loope
ss
mov
xor
jne
int
sub
inc
cmp
add
insb
mov
dec
xchg
pop
js
fstps
sahf
dec
or
mov
or
mov
imul
nop
adc
xlat
ret
imul
add
xor
outsb
inc
std
lea
cmp
shl
add
mov
adc
mov
mov
push
outsl
fadd
mov
addr16
scas
cld
addr16
sar
outsb
cmp
and
adc
lock
pop
in
gs
mov
and
cmp
mov
or
xchg
lods
fdivp
outsb
mov
add
ds
popa
inc
faddl
aas
xchg
and
mov
imul
mov
and
sti
and
pushl
ret
mov
pop
les
add
or
lods
test
out
sbb
sub
ds
pop
xor
sub
sarl
mov
insb
fwait
pop
pop
sbb
mov
rcr
sbb
aaa
imul
lock
loop
nop
addr16
loop
gs
mov
fcmovnb
adc
addr16
fidivs
div
xor
sti
mov
into
sbb
inc
xor
mov
rclb
mov
pop
imul
pop
and
or
leave
enter
aas
or
adc
dec
lret
or
aaa
fiadds
jg
rol
ss
fucomip
rol
test
lods
inc
jb
repz
dec
or
adc
jno
inc
xor
sbb
stos
mov
jae
repz
negl
fcompl
xlat
push
add
ficomps
scas
scas
test
dec
imul
cmp
mov
or
dec
xchg
std
cmp
and
mov
and
xor
mov
dec
add
insb
lahf
fwait
jmp
add
pop
je
jnp
es
and
mov
movsb
pusha
jmp
and
lret
lock
lock
jecxz
callw
pop
mov
in
adc
xor
in
pop
das
dec
scas
shr
cmp
scas
xchg
push
aad
xchg
push
stc
and
insb
test
pop
sti
insl
push
xor
cmpsb
mov
aad
repz
out
mov
imul
test
popa
fisttps
loop
popl
mov
and
stos
cmp
fbstp
sbb
cli
jge
xor
cs
add
lret
jge
mov
dec
wrmsr
sub
aaa
jmp
sub
pop
std
cmpsb
adc
stos
mov
jmp
loop
push
imul
testb
mov
jg
dec
add
jmp
jae
or
das
ja
add
fstps
sub
sahf
mov
das
adc
xor
loopne
ljmp
aam
jmp
cmc
xchg
cmp
mov
add
inc
inc
leave
add
push
in
sbb
or
push
stos
outsl
iret
push
out
repz
jp
mov
mov
pusha
jbe
pop
ljmp
add
push
dec
or
sub
mov
iret
inc
daa
push
andl
sub
fs
mov
jae
jne
add
ja
insl
rolb
decb
mov
fists
cmp
add
inc
sarl
cmp
add
inc
js
adc
movsb
jae
adc
ja
jmp
test
and
sub
popa
in
mov
scas
sub
fwait
jno
dec
incb
pop
mov
sub
test
mov
mov
addr16
sub
or
mov
jge
lods
gs
inc
enter
scas
mov
mov
and
imul
pop
jb
inc
out
add
stos
lods
arpl
dec
adc
sbb
addr16
icebp
lret
xchg
or
pop
mov
mov
es
or
dec
or
shll
sub
inc
cli
cmpsl
dec
dec
loop
les
cmp
mov
push
and
mov
pop
out
adc
or
repnz
sub
add
out
es
add
push
adc
add
and
outsb
push
fiaddl
cmpl
pusha
cmpb
ja
aaa
sahf
adc
dec
pop
fwait
mov
jb
push
add
clc
xor
push
rcrb
adc
aam
adc
inc
sbb
push
mov
fs
mov
dec
cmp
popa
aaa
sub
addl
insl
mov
jns
sub
push
pop
xchg
adc
mov
out
fwait
adc
xchg
out
stos
dec
jo
pop
adc
push
sti
and
fdivs
pop
ss
jmp
xchg
fisubl
push
push
push
stos
dec
mov
je
ret
mov
push
jno
push
xchg
mov
test
mov
add
inc
or
adc
push
enter
ret
push
movsb
mov
jno
push
adc
test
notb
jg
mov
clc
bound
movsb
movsl
xchg
xchg
clc
or
xchg
lahf
pop
frstor
rolb
mov
inc
scas
jo
rcll
xchg
ja
mov
divl
sbb
nop
mov
xchg
loope
cltd
dec
pop
jl
imul
push
jmp
es
cmpsl
xor
ret
cmp
sbb
or
lock
in
cmp
mov
add
mov
push
push
or
sbb
mov
push
jae
xor
adc
stos
xchg
cwtl
or
adc
cwtl
pop
inc
mov
sub
popa
scas
mov
test
cli
loopne
test
ljmp
divb
mov
mov
repz
add
pop
or
pushf
lea
push
lds
or
out
popa
lret
add
imul
lret
enter
sub
cmc
ret
mov
pop
sub
add
add
jmp
out
mov
dec
xlat
and
sarl
dec
in
mov
dec
cs
incl
incl
fldenv
adc
push
mov
les
leave
sti
push
inc
cli
and
xchg
and
and
add
pop
scas
dec
mov
adc
xor
fldt
mov
std
mov
adc
add
add
mov
jo
leave
mov
test
divb
pop
nop
xor
test
pop
inc
inc
dec
add
icebp
mov
mov
inc
mov
stos
xchg
add
and
lahf
shll
jmp
add
insb
jl
xchg
fsub
testl
imul
adc
add
pop
adc
adc
jecxz,pn
cmp
mov
pop
call
cmc
enter
or
enter
leave
jns
pop
xor
outsb
mov
sub
rcr
dec
ret
stos
adc
dec
push
xchg
cmc
pop
ret
movsb
lret
pop
shll
ret
mov
add
xchg
loope
xchg
sti
fidivs
sbb
ss
mov
add
mov
add
xchg
mov
es
add
push
add
and
pop
addr16
add
negl
ret
add
leave
sbb
fwait
les
rclb
inc
adc
sahf
jge
add
pop
pop
mov
daa
enter
sti
xor
outsb
or
mov
cmp
daa
mov
inc
ss
loope
and
cmpsl
repz
xchg
pop
push
pushf
dec
lods
sbb
adc
dec
fldl
arpl
adc
adc
in
add
div
push
and
xlat
xchg
test
dec
int
add
daa
jge
lods
jmp
imul
mov
test
mov
clc
testl
mov
push
test
mov
aaa
and
add
xor
or
mov
jb
xor
jns
sahf
rolb
out
and
fmul
sub
and
addb
hlt
adc
imulb
in
inc
cmp
and
or
jl
mov
mov
pop
add
dec
jge
aam
or
sub
cmpsb
ret
cmp
inc
ret
inc
add
xchg
es
cmc
gs
addr16
push
mov
outsb
jns
sbb
adc
ret
jae
data16
repnz
or
jne
mov
js
push
or
adc
mov
std
cltd
mov
addb
mov
sub
xlat
cmc
das
mov
stc
adc
nopl
add
decl
and
add
stos
out
ret
mov
movsb
enter
stc
add
xor
add
add
rclb
fwait
out
test
ret
push
add
inc
adc
and
std
add
push
and
es
add
or
pop
lock
mov
add
push
xor
add
add
inc
imul
or
add
ret
xchg
test
out
add
adc
loopne
icebp
gs
jmp
aaa
shlb
add
mov
adc
in
nop
add
push
loope
pop
push
fstpl
add
and
rorb
outsl
adc
pop
aaa
ds
sub
les
add
shll
adc
dec
imul
inc
fisttpl
or
push
inc
jp
test
jns
cli
into
pop
push
lea
iret
mov
subl
pop
gs
in
sar
mov
pop
mov
nop
pushf
fnstcw
in
xor
mov
xchg
out
test
call
adc
nop
movl
add
test
adc
mov
and
nop
push
sbb
xor
xor
add
rcl
js
jecxz
push
add
mov
sbb
mov
xchg
repz
push
or
bound
or
nop
dec
mov
js
stos
test
js
cmp
add
rorl
sub
inc
ret
sub
pushf
pop
sub
push
hlt
loopne
orb
lds
dec
pop
mov
lds
cld
je
pushf
loop
pusha
pop
pop
adc
rcll
inc
loopne
inc
shll
dec
sub
pop
jns
inc
add
imul
sbb
or
cmp
inc
push
add
dec
addr16
aas
dec
xorl
sub
ret
rorb
or
mov
and
ss
dec
addl
mov
or
pop
or
fists
stos
inc
pop
pop
fnstcw
orl
mov
sbb
nopl
dec
or
push
cmp
jmp
movsb
and
pop
mov
call
fldl
mov
fcoml
pop
push
and
test
dec
test
xchg
inc
dec
pop
cmp
lds
dec
test
sub
add
mov
or
loopne
jns
dec
mov
fs
sub
xchg
stc
dec
outsb
dec
xor
mov
into
test
add
in
and
push
add
xor
xchg
sbb
mov
loope
or
ret
xlat
mov
fcmovb
push
pop
sti
mov
imul
mov
xor
in
frstor
lods
push
mov
pop
fnsave
mov
sub
out
fidivl
ja
mov
or
ret
pop
stc
lock
dec
fcmove
add
movsb
push
icebp
loope
fldl
push
loop
jb
mov
jo
and
inc
pop
xor
scas
inc
mov
call
scas
ret
mov
mov
int3
push
sbb
cmp
pop
lock
xorb
cmp
mov
mov
jo
adc
push
rorb
adc
cmp
xor
jo
or
mov
popf
test
lret
std
push
mov
xchg
ja
aaa
push
test
outsl
out
dec
imul
push
dec
ret
xchg
adc
test
or
adc
push
les
out
jge
dec
pop
cmp
and
sbb
xchg
movsl
cmpsl
fisubs
and
push
and
es
push
and
or
lock
adc
imul
sti
and
adc
dec
sbb
mov
dec
ret
pop
ret
jnp
mov
inc
rclb
push
dec
call
and
out
data16
shrl
ret
int3
and
call
mov
and
add
int3
or
popf
gs
pop
sbbl
mov
xchg
push
push
dec
sub
xchg
jo
stc
add
or
pusha
ret
pop
movsb
add
xchg
xchg
and
sbb
mov
add
dec
jo
roll
js
sub
jno
pop
stos
pop
mov
mov
andl
loopne
dec
cmpsb
movsb
in
movsb
cmp
dec
add
movsb
mov
and
rcrb
pop
xor
call
push
jo
cmp
or
fisttpll
mov
and
pop
inc
repnz
rcll
pop
ds
out
push
mov
xchg
xchg
rolb
push
ficoms
test
inc
jo
andb
jg
loopne
mov
sub
jb
jns
popa
jb
mov
xchg
push
fcoml
jb
push
sbb
adc
pop
popa
pushf
jno
inc
into
mov
out
jno
or
orl
xorl
pop
push
or
add
jmp
mov
cli
inc
mov
add
das
lahf
add
or
nop
sbb
sub
mov
add
add
pop
pop
sub
scas
imul
sub
sahf
mov
and
ljmp
or
addl
sbb
dec
sub
mov
and
je
adc
inc
mov
shrb
mov
cwtl
or
pusha
in
and
aaa
movsl
orl
loopne
mov
pop
adc
dec
inc
lahf
fistps
cmp
dec
pop
sarb
pop
clc
xchg
jle
push
sub
in
dec
loope
xchg
mov
and
test
xorb
adc
xchg
push
das
xor
push
add
mov
je
add
testb
mov
sub
out
sbb
push
pushf
sbb
andb
and
outsl
mov
mov
jbe
push
clc
lods
add
dec
ljmp
test
push
sub
jecxz
inc
or
mov
cmovne
test
sub
sti
add
or
es
call
lret
js
sbb
add
or
push
add
sbb
add
dec
loopne
inc
and
ja
or
int3
mov
or
lcall
test
push
push
sub
add
dec
inc
cmp
cli
repz
sub
int
pop
cmc
inc
mov
or
xchg
and
shlb
arpl
jne
pop
mov
inc
cmp
clc
add
adc
ret
out
cmp
mov
fcompl
pop
push
repnz
popa
test
lds
popf
dec
xchg
pop
pop
adc
sub
inc
dec
dec
imul
insl
ljmp
in
ds
cmp
repnz
data16
cmp
cmp
lds
mov
xor
sub
imul
shlb
xchg
aaa
jo
rcll
mov
dec
jl
add
pushf
andb
rorl
test
stc
mov
cmpl
push
sbb
sub
push
js
ret
rorl
and
lock
push
xor
push
push
sbb
lret
dec
mov
out
push
aas
inc
or
fdiv
pop
adc
inc
scas
mov
dec
mov
scas
loopne
inc
and
lds
or
arpl
and
push
inc
sbb
cmp
xchg
orl
mov
jg
out
adc
call
xor
xchg
orl
jl
or
ret
idivl
scas
rorb
cltd
push
ja
xchg
into
xchg
xor
fistpl
jno
mov
adc
loopne
shll
pop
push
add
cmp
imul
jmp
lret
hlt
roll
pushf
and
mov
sbb
stos
mov
cmpb
fwait
mov
cmp
mov
dec
fimull
imul
lret
enter
push
xchg
sahf
in
in
and
cltd
or
adcb
fs
mov
insb
mov
add
ror
mov
push
les
sbb
mov
jmp
addl
push
adc
out
add
jbe
adc
add
ret
lret
cmp
test
in
or
cmc
ret
scas
shlb
cmp
fcmovnb
add
jb
jl
mov
in
jno
pop
mov
xchg
mov
sbb
mov
or
test
ret
or
dec
fiaddl
mov
shlb
pop
or
xor
mov
mov
add
jmp
mov
adc
pop
inc
lds
adc
dec
and
lret
inc
sahf
ljmp
dec
push
xchg
lock
enter
sbb
inc
popa
cmpsb
inc
int
insl
sub
insl
mov
ret
cmpb
lea
jp
adcl
orl
sbb
inc
jae
add
gs
popf
inc
cli
mov
lock
lret
mov
fildl
mov
daa
xor
cmp
clc
popa
sub
mov
call
sbbl
out
rclb
adc
jle
mov
jmp
movsl
in
insb
jae
iret
pop
jl
rcrb
push
imull
js
or
outsb
cmc
jmp
lods
xchg
xchg
pop
flds
test
sub
out
inc
xchg
adc
sbb
test
inc
xchg
loope
adc
imul
cmp
sub
add
lods
jp
pop
std
fimuls
sub
dec
cmp
jge
inc
cmp
xor
imul
mov
jnp
inc
pop
dec
pop
inc
mov
cmpsb
dec
pop
fisttpll
scas
mov
xchg
out
add
in
mov
les
lret
cltd
lods
or
adc
mov
stos
test
xchg
ret
and
loopne
fisttpll
fidivrs
adc
frstor
nop
cmp
popa
add
xor
sbb
mov
sub
sbb
mov
aam
aam
xor
scas
pop
mov
sub
rolb
jb
pop
push
sbb
jnp
and
dec
out
idivb
sarl
add
sbb
mov
xchg
or
pushf
out
pop
push
loop
je
pop
scas
dec
rcrb
icebp
mov
inc
add
inc
inc
dec
jo
push
cvtps2pd
in
sub
push
inc
push
std
or
sbb
mov
pop
int3
jmp
sbb
sbb
test
rcll
and
inc
or
or
and
sahf
adc
imul
in
nop
pop
push
icebp
dec
icebp
dec
in
and
add
daa
in
pushf
stos
aaa
mov
fdivs
es
adc
in
scas
psubsw
andl
cmp
test
cmpsb
push
push
cmp
xchg
pop
adc
pusha
or
add
shrl
rolb
aaa
push
mov
rcrl
lcall
cmc
pop
shrb
pusha
adc
mov
push
lret
or
lock
adc
jl
jb
jno
shrl
daa
sub
lods
cmp
add
movhlps
rolb
push
in
jno
add
jmp
loopne
sbbl
xchg
mov
leave
stc
sub
cmp
sbbl
xor
cmpb
mov
sub
jne
mov
push
jecxz
fst
bound
or
int
pop
inc
into
rolb
subl
push
adc
lea
or
mov
lock
xor
fldcw
add
out
daa
popf
scas
push
push
lret
add
cltd
lcall
and
mov
leave
or
lret
ds
sub
inc
sub
xor
mov
and
fdivrl
pop
rorb
lret
push
jo
xchg
or
mov
add
stos
inc
jo
std
mov
adc
xchg
push
mov
test
xchg
rolb
loop
mov
in
repnz
adc
jmp
mov
or
pop
movsl
enter
mov
xor
cmpb
lock
sub
xor
repnz
pusha
add
mov
lret
mov
dec
enter
cmp
inc
nop
mov
add
mov
dec
das
data16
jno
lcall
jmp
cwtl
rcl
test
push
jg
jb
pop
js
and
pop
jns
test
jg
movsb
repz
inc
movb
mov
das
pop
mov
add
lods
xor
push
ret
das
into
mov
and
inc
or
nop
es
out
push
arpl
iret
add
or
mov
mov
aaa
jnp
add
dec
jns
shll
or
cmp
add
shlb
addb
jo
es
jle
and
xchg
fidivrl
popf
test
xchg
add
fldt
inc
roll
mov
mov
rorb
mov
lds
or
in
jo
rcrl
cmpsl
cmp
mov
int
xchg
cmpsb
cmpb
add
ljmp
fwait
daa
inc
gs
cmp
mov
dec
add
mov
lock
dec
and
mov
movb
movb
xor
mov
das
pop
add
jmp
loopne
data16
jbe
sub
sbbl
test
cmp
jae
mov
dec
fwait
sbb
out
pop
cli
mov
xchg
mov
jg
aaa
or
mov
outsb
sub
sti
xchg
stc
xor
je
mov
pop
dec
sbb
test
insb
lret
cmp
cld
mov
add
lods
pop
mov
add
and
fwait
shrb
add
pop
outsb
mov
jp
daa
repz
out
ljmp
xchg
test
call
dec
rclb
inc
mov
adc
dec
pop
cmp
push
scas
sbb
xchg
sbb
lea
lret
sbb
xor
dec
mov
xor
es
lcall
jno
adc
jle
push
ret
lahf
fwait
nop
inc
pop
or
push
dec
je
sbb
or
sbb
push
testb
sarb
push
or
and
test
sub
mov
add
sbb
inc
push
sub
sbb
or
sti
lods
adc
jl
sarb
rorb
adc
test
jp
mov
out
leave
inc
adc
sbb
cli
fstps
mov
push
lret
jge
push
pop
dec
ret
imul
xchg
popf
adc
cmp
repz
loopne
xchg
mov
inc
or
adc
mov
lods
add
shl
xorl
sbb
adc
jo
lock
pop
decl
cmpsb
mov
jo
popf
leave
xchg
push
rorb
aaa
mov
inc
js
push
fadd
add
jb
jne
sub
loope
push
xchg
ret
adc
pop
pop
adc
xchg
adc
dec
sub
jecxz
inc
and
xor
jle
jbe
pop
sbb
pop
loopne
fistl
ss
movq
rcll
call
aam
rorl
stc
fwait
mov
test
mov
dec
js
jecxz
popf
icebp
push
ret
xorl
inc
rclb
repz
decb
in
push
add
xor
outsb
push
add
mov
mov
mov
and
int3
mov
lcall
inc
insl
cs
and
adc
jl
ficomps
push
and
add
pushf
push
cli
xor
test
mov
imul
hlt
dec
arpl
arpl
cmp
shll
orb
mov
test
pop
lods
dec
hlt
popf
inc
xor
add
ret
adc
and
shlb
out
jle
adc
sbb
dec
mov
ja
xor
push
inc
and
das
leave
push
imul
loop
mov
inc
pop
sbb
subb
sbb
lea
add
mov
in
mov
adc
sub
mov
pop
jbe
mov
dec
adc
rcrb
and
ds
sbb
scas
mov
or
pusha
rcll
inc
sbb
adc
mov
cmpsl
out
jle
popa
dec
jne
push
shrb
inc
imul
cmpb
sbb
mov
rcll
in
push
test
add
data16
fsubl
mov
adc
cmp
daa
loop
test
sbb
lret
pop
inc
push
xor
fdivl
add
aaa
mov
inc
dec
arpl
shlb
mov
test
inc
ss
sbb
movsl
adc
sub
xchg
jae
es
pop
pop
clc
mov
sbb
add
inc
push
inc
mov
mov
mov
out
dec
ja
jb
jae
jnp
cmpb
pop
jnp
sub
movsl
ljmp
les
fs
inc
daa
pop
pop
add
cmpsl
aaa
test
dec
fwait
test
jno
call
nop
mov
dec
pop
cmp
cs
jo
lcall
mov
adc
out
imul
test
mov
xchg
add
jne
test
xchg
jnp
and
and
cs
add
mov
adc
add
adc
fstp
pushf
mov
pop
pop
and
mov
mov
mov
mov
or
xor
rol
pusha
add
dec
pop
mov
xchg
xlat
pop
nop
pop
test
push
mov
packuswb
lods
clc
sub
add
inc
xor
gs
add
or
mov
add
sbb
pop
jo
add
mov
sub
pop
test
repz
jg
cmp
pusha
scas
sub
sbb
cs
xorb
icebp
sbb
stos
add
mov
cmc
rcl
lea
or
pop
adc
adc
push
fistps
inc
mov
insl
call
filds
pop
sbb
mov
sbb
inc
adc
and
xor
push
pand
insb
push
mov
push
popl
mov
pop
pop
add
cmp
pop
in
xor
xor
lods
sbb
test
movsl
xor
mov
rcll
outsb
add
jecxz
inc
mov
jmp
inc
pusha
test
sbb
and
leave
or
and
ds
sbb
inc
add
cmpsl
push
or
insb
icebp
dec
ss
and
dec
test
or
push
adc
ret
mov
inc
addl
push
int
lret
add
jns
imull
jne
jp
scas
pop
in
jb
addr16
or
push
push
jns
cltd
sub
and
mov
sahf
sub
invd
sub
xor
cmc
stos
pushl
adc
sbb
push
dec
or
or
mov
and
cwtl
mov
aad
pop
movsl
or
xlat
jp
jae
filds
inc
mov
or
rep
or
cwtl
pusha
jmp
dec
or
mov
xor
mov
js
orb
insl
inc
adc
lods
push
add
adc
mov
adc
pop
imul
popa
mov
adc
pop
scas
test
push
mov
mov
jl
andb
bound
xchg
xor
fisubrl
inc
loope
jecxz
xorb
lret
mov
scas
mov
scas
imul
and
movsb
pop
xlat
call
mov
pop
xor
add
in
mov
push
inc
movsb
add
ljmp
mov
xchg
mov
inc
adc
jl,pt
jae
orb
jns
sbb
push
andb
pusha
sub
add
lret
mov
push
sub
lahf
pop
inc
sbb
fdivs
pop
mov
push
fcoms
mov
clc
pop
xchg
ret
dec
inc
sub
daa
fnstsw
rolb
cmp
xorb
pop
fcomi
cwtl
shlb
aam
pop
mov
add
adc
lcall
xchg
mov
mov
inc
cmp
stos
outsl
fcmovnbe
sbb
mov
xchg
leave
insb
pop
lods
addl
mov
add
xchg
and
stos
adc
fsubrl
push
and
jg
cmc
jo
mov
andl
mov
mov
sbb
test
xchg
movsb
bound
out
pushf
push
or
ss
xor
xor
push
movsl
jo
xchg
cmpsb
lods
sbbb
sbb
add
clc
mov
pop
sbb
or
adc
inc
dec
ficompl
add
sub
pop
lock
fcmovbe
and
lret
lods
cmpsl
pop
jecxz
idivl
out
testb
adc
insb
cmp
movsl
mov
jae
stos
faddp
add
cmpsb
hlt
pusha
mov
mov
js
cmpsb
loopne
test
flds
add
mov
imul
xlat
aam
sbb
pop
pop
add
pop
andl
cmp
cwtl
dec
mov
test
add
and
les
insb
into
mov
push
nop
add
andb
hlt
and
push
mov
dec
push
loop
roll
push
xchg
xchg
mov
pop
dec
mov
adc
add
sub
adc
lea
sbb
rorl
aas
movsl
testl
inc
mov
dec
xchg
inc
dec
add
or
ret
mov
mov
add
adc
jle
sub
sub
jbe
add
ltr
pop
pusha
icebp
mov
inc
ret
lock
jmp
pop
push
push
cltd
or
mov
dec
cmp
xor
mov
push
pop
test
addr16
xlat
cmp
xchg
adc
das
ja,pt
mov
inc
daa
nop
push
mov
lods
mov
es
stc
mov
scas
jae
cmp
int
lret
bound
jns
sub
sub
lods
mov
or
cmp
adc
iret
xor
cmpsb
sti
jno
sbb
aad
sub
jmp
add
and
and
fldenv
lea
mov
add
dec
cld
adc
pop
push
push
movsb
add
jns
cmpsl
and
push
decb
push
adc
push
pop
dec
push
xchg
push
addr16
pop
push
add
push
pop
cmp
fidivrl
add
rorb
std
or
jbe
sub
sub
adc
pop
call
shl
cmpsl
or
inc
imul
int
lods
xchg
add
mov
push
or
std
out
les
inc
imul
jne
push
cwtl
mov
ret
jns
mov
jae
scas
shll
cmpsl
pop
les
or
adc
fwait
jecxz
inc
mov
xchg
xchg
sbb
lcall
jns
add
lock
insl
jecxz
lods
push
mov
ror
jp
xor
push
movsl
in
test
dec
inc
push
mov
mov
dec
pop
insb
and
dec
or
arpl
fdivrs
outsb
xor
lock
sbbl
scas
enter
fdivrl
pop
mov
xor
pop
ljmp
iret
mov
jg
sbb
dec
xchg
xchg
push
xor
push
shrl
xorb
sbbb
addr16
fstpt
push
outsl
or
xor
and
mov
xorl
pop
mov
imul
push
rorb
lret
fwait
lods
sub
push
add
mov
pushf
test
jo
mov
jo
ret
test
nop
bound
lods
ret
mov
cmp
sbb
mov
iret
inc
pop
lea
mov
aad
popf
push
push
shlb
movsb
xor
adcl
adc
or
adc
mov
loop
mov
loopne
mov
cmc
dec
push
mov
insb
cs
adc
lcall
ds
adc
pop
and
mov
int
mov
rclb
xor
jno
adc
fadds
mov
inc
rorb
push
dec
dec
mov
sub
popf
xlat
mov
xchg
shlb
adc
adc
imul
dec
xsaveopt
jae
call
cmp
dec
in
movsl
and
clc
and
lods
rolb
testl
imul
ja
sbb
outsl
pop
pop
or
inc
cmpsl
test
cwtl
cltd
push
mov
pop
or
popa
in
das
cmp
les
sbb
pushf
push
mov
dec
aaa
or
push
roll
loopne
les
ror
pushf
mov
test
pusha
inc
jecxz
lcall
sbb
icebp
sbb
and
out
dec
push
test
push
imul
stos
repz
adc
inc
test
int
test
pusha
add
xchg
mov
inc
pop
adc
mov
dec
imul
popa
faddp
dec
mov
movd
enter
arpl
mov
cmp
std
lret
xor
xor
or
bound
or
or
inc
mov
sbb
xor
sub
dec
adc
push
pop
sahf
lock
pop
stos
lret
imul
and
mov
and
or
push
push
sbb
mov
subl
fidivl
inc
inc
int
or
pop
dec
ret
pop
push
jno
mov
lret
out
divps
sub
cmp
cs
and
adc
inc
fs
sbb
mov
loope
dec
nop
movsb
and
or
push
sahf
adc
pusha
pop
inc
popa
sbb
insl
adc
pop
mov
movaps
xor
push
in
cmpsb
and
add
push
inc
xchg
popf
mov
dec
xchg
push
jno
cmp
push
ret
enter
pop
adc
inc
das
jg
imul
dec
or
add
adc
inc
std
outsl
fs
pop
stos
pop
xor
ret
mov
popf
mov
jecxz
addr16
and
daa
mov
or
inc
xchg
sbbb
cmp
out
lds
and
call
enter
das
add
jb
inc
clc
mov
mov
rclb
and
adc
jge
test
movsl
test
out
pushf
add
and
test
es
lret
test
jp
icebp
sbb
rcrl
lods
mov
ret
clc
xor
pop
ja
sbb
sub
les
roll
sub
cmp
or
in
das
cmp
push
sbb
sub
sbb
aad
fwait
jmp
out
mov
jl
cmp
ja
inc
jp
cs
inc
sbb
ja
sti
xor
rolb
jg
mov
bound
cmp
ret
adc
adc
push
shlb
popf
das
sub
adc
dec
fadd
dec
addl
mov
sub
lock
clc
sbb
adc
lahf
dec
mov
jae
mov
lcall
test
dec
inc
or
lock
outsb
pop
pop
je
mov
nop
pop
adc
mov
lods
xorl
sbb
jbe
xchg
lahf
sbb
test
dec
pop
scas
shl
test
push
das
add
orb
lds
push
cmpsb
lock
dec
push
out
test
adc
push
pushf
mov
dec
sub
bound
dec
popa
inc
stos
xchg
aam
loopne
je
roll
mov
rcr
arpl
bswap
ret
popf
aaa
mov
jb
shlb
sbb
pop
imul
xorl
push
loop
mov
loopne
or
cmc
jno
enter
sbb
testl
mov
add
mov
inc
jle
or
dec
push
add
add
addr16
cmpsb
mov
jl
mov
aas
sti
jo
and
mov
xchg
xlat
pcmpgtw
xchg
ja
lock
sub
push
mov
ret
daa
and
test
xchg
fwait
and
movl
out
int
and
push
addr16
xor
adc
add
jmp
or
jae
and
sub
aaa
jmp
sub
cwtl
inc
into
pop
mov
xchg
popa
es
mov
pop
subb
pop
outsl
adc
and
pop
test
inc
pop
sbb
outsb
rorl
sahf
push
inc
lahf
push
lcall
or
dec
les
mov
adc
out
sub
and
mov
punpcklbw
dec
cmp
nop
into
add
xchg
jp
sbb
std
xor
stos
lock
and
mov
insb
lock
fcoms
and
or
inc
mov
arpl
pusha
mov
inc
sbb
cs
adc
dec
jbe
inc
ret
mov
xor
lock
dec
outsb
cmpsb
jno
push
cmp
push
add
fiaddl
mov
outsl
jae
out
and
aas
es
das
dec
mov
stos
addb
fadds
xchg
not
inc
jmp
frstor
dec
flds
push
mov
pop
or
iret
das
adc
push
imul
mov
mov
adc
and
sarl
or
pop
dec
mov
inc
jge
cmp
push
jno
enter
dec
mov
or
xchg
icebp
sub
dec
jecxz
dec
sub
fisubrl
xlat
mov
out
insb
lahf
in
xchg
in
push
and
test
sti
data16
add
std
enter
jge
mov
xchg
pusha
jl
add
ret
mov
adc
ljmp
dec
mov
xor
out
xchg
dec
xchg
adc
les
jo
enter
or
add
testb
and
mov
rcll
cmpb
jne
push
stos
dec
sbb
sbb
sbb
out
into
inc
addl
or
sti
mov
jecxz
clc
add
push
test
je
test
leave
jnp
lret
pop
xchg
or
pop
jo
mov
mov
stos
mov
push
inc
std
mov
xor
or
out
mov
sub
or
aaa
push
cmp
mov
adc
mov
or
fdivl
leave
pusha
ret
aas
jbe
lahf
iret
out
xchg
pop
imul
cmpsl
call
xchg
push
inc
pop
sbb
add
jb
xchg
pusha
pop
icebp
xor
scas
ds
jae
imul
repz
xor
ror
test
adc
cmc
xor
push
sbb
ret
popa
pusha
cltd
mov
lcall
xchg
test
xchg
pop
les
in
mov
adc
stos
das
add
imull
out
sbb
lahf
mov
arpl
add
orl
stos
sbb
xchg
hlt
ja
mov
ja
adc
cmpsl
add
adc
mov
add
sub
or
or
iret
pusha
ja
in
push
jo
xor
cmpsl
sub
pop
test
jge
adc
rcrb
cltd
pop
ss
mov
sbb
cmpl
mov
imul
ljmp
xor
loopne
iret
jne
andb
iret
idivb
add
dec
jp
or
shll
or
int
inc
stos
mov
sarb
sub
sub
sub
or
xor
or
cli
push
cltd
pop
pop
aas
iret
bound
rcll
push
add
add
rolb
dec
sub
in
or
sbb
fsts
int
and
incb
pop
xor
sbb
mov
and
xor
cmp
inc
add
add
inc
sub
xchg
test
pop
jmp
imul
mov
or
pop
dec
sbb
test
inc
push
inc
out
bound
pop
mov
push
pop
rorb
addr16
or
jp
jmp
cmp
push
dec
addr16
nop
notb
add
dec
test
stos
push
push
adc
test
les
cmp
shl
out
xor
inc
push
pusha
pop
pop
iret
fidivs
sub
xor
mov
enter
dec
or
adc
xor
push
mov
add
inc
inc
iret
jecxz
and
xor
add
mov
jp
push
ds
scas
add
or
xchg
mov
jnp
idivb
jnp
add
je
add
inc
loopne
or
insb
adc
sbb
aad
push
add
push
dec
mov
rolb
mov
setb
sbb
jecxz
dec
mov
xor
add
mov
lret
mov
mov
inc
cmpsl
jnp
sbb
cmc
dec
or
inc
popl
out
imul
dec
je
popf
xchg
stos
test
mov
cmp
jae
mov
pop
fwait
push
outsl
push
cmp
pop
pop
adc
adc
test
lret
and
add
jmp
adc
adc
ds
inc
adc
das
push
and
aam
push
lods
lods
je
ds
jnp
sub
xchg
jns
push
fadds
mov
rclb
lock
xchg
scas
sub
mov
pop
aas
add
sub
inc
inc
cmp
scas
insl
cld
push
shr
rolb
mov
mov
test
scas
add
dec
jne
mov
test
lods
dec
mov
pop
mov
pop
ret
pop
adc
pop
and
jno
pop
cmc
jbe
icebp
mov
mov
aaa
cmp
insl
pop
mov
dec
mov
pop
test
pop
ret
lods
pop
inc
ret
jg
push
or
add
mov
das
mov
bsr
stos
jge
mov
mov
or
shrl
xchg
mov
pop
adcl
mov
fimull
pop
outsb
inc
mov
cld
inc
pop
aad
jmp
push
cli
das
lret
xor
or
shlb
push
in
mov
sub
pop
aad
pop
pop
adc
pop
adcl
aad
sbb
pop
pop
jmp
repnz
fiadds
fiadds
lret
mov
and
insl
call
icebp
insl
popa
mov
shr
xor
insl
call
xor
ss
mov
sub
xor
int
sbb
sub
add
sbb
aam
jb
lret
pop
sbb
pop
xchg
dec
pop
pop
sbb
sbb
repz
je
in
iret
into
cmp
ret
outsl
push
ds
rolb
mov
mov
dec
mov
rcll
stos
sub
sbb
outsl
scas
fdivr
or
notl
rcll
fnsave
mov
pop
sub
imul
inc
jp
add
mov
sbb
add
out
sbb
add
lods
stc
aaa
andl
cmp
dec
lret
xchg
out
jmp
mov
inc
dec
subl
stos
ret
xor
cltd
adc
xchg
rcll
daa
xchg
sub
pop
sub
hlt
std
and
dec
hlt
add
mov
inc
xor
imul
mov
mov
and
addr16
fisttps
stos
and
stos
mov
or
mov
ret
sub
inc
aas
dec
add
or
repz
jmp
shr
mov
sarl
jnp
cli
add
sbb
mov
inc
xchg
subb
mov
movsl
popl
mov
mov
daa
mov
mov
out
dec
inc
push
add
or
imul
in
mov
imul
dec
mov
arpl
adc
clc
add
adc
inc
push
icebp
sub
das
aaa
addl
and
push
jle
lahf
xchg
jo
sbb
lea
andl
xchg
mov
lds
add
test
jg
mov
popa
test
cltd
out
cmp
mov
bound
or
cmp
or
pop
add
xor
adc
fwait
out
adc
push
mov
mov
dec
pop
test
popa
lea
movb
mov
scas
inc
and
mov
jo
fidivl
aaa
dec
add
adc
jne
sbb
inc
mov
or
hlt
addl
xchg
rcrl
sbb
pop
test
cs
pusha
jae
nop
fs
inc
ja
fnsave
or
popa
lods
adc
daa
inc
aaa
sbb
push
cmc
xor
ret
push
ret
fstps
mov
sbb
and
movsb
outsb
pop
cmp
inc
shl
enter
in
test
cltd
sub
inc
add
sti
jbe
xchg
push
lahf
and
push
or
loopne
adc
enter
test
mov
lea
ret
int3
xchg
sbb
xchg
xchg
lock
xchg
adc
icebp
es
rcrl
inc
jg
pop
imul
mov
jno
xor
xor
pop
cmpsb
sbb
jp
addb
orl
mov
outsb
lods
fmuls
mov
fimuls
add
loopne
cmpsl
cmp
jo
xor
mov
inc
pushf
test
inc
pop
mov
call
enter
mov
mov
pop
popa
or
mov
sub
push
lcall
push
xor
inc
adc
push
dec
add
daa
xchg
sbb
adc
lods
xchg
and
loop
lods
or
adc
push
or
repnz
movsb
jno
xchg
xor
jno
and
or
jb
add
inc
jne
jmp
das
sbb
insl
mov
rorl
and
jne
and
xchg
test
ja
and
scas
dec
ss
out
nop
insb
add
jno
cmp
add
jg
add
cmp
xchg
or
pop
jne
sub
add
imul
xchg
add
andl
push
xchg
jae
adc
ljmp
and
xchg
and
or
lods
fwait
je
add
xor
jno
sub
cltd
xchg
jae
rorl
out
andb
outsb
jmp
loop
jo
fwait
leave
mov
movsl
sub
je
lods
sbb
lods
push
inc
mov
push
cwtl
mov
dec
jecxz
xor
cmpsl
movsb
dec
mov
imul
cmp
mov
sub
push
in
adc
popf
push
inc
sbb
orl
ljmp
inc
loope
lea
shll
add
or
addl
xchg
mov
jnp
mov
rol
syscall
mov
jb
enter
sub
pop
pop
pop
ficomps
lods
fwait
lods
lods
pop
nop
mov
or
mov
mov
xchg
or
xchg
dec
fisubrs
je
mov
sub
ds
addb
rcr
push
outsb
test
xchg
adc
out
leave
sub
loope
inc
xchg
push
rclb
add
ret
mov
cltd
data16
jg
and
icebp
add
pop
pop
jnp
repz
imul
sub
and
call
jmp
lods
mov
push
sti
or
out
jnp
in
jae
movsb
in
mov
out
lods
mov
lahf
outsb
xchg
rcrl
jecxz
mov
sub
mov
dec
and
push
outsl
adcl
call
mov
xchg
enter
or
test
lret
mov
xchg
jne
das
movsb
dec
sahf
add
outsl
cmc
add
sbb
jnp
and
jnp
int3
iret
inc
jmp
loopne
arpl
mov
pop
les
das
or
incl
and
add
pop
in
pop
pop
cmc
ret
push
lret
mov
cmp
xchg
bound
cmc
add
scas
add
loopne
es
das
jg
addr16
es
fdivl
xchg
dec
movsb
je
and
pop
jb
mov
sub
roll
pop
pushf
cmp
imul
sbb
mov
sub
and
push
andl
cvtdq2ps
cmp
add
fwait
out
in
cmp
mov
scas
sahf
mov
lcall
sar
mov
adc
push
sbb
iret
push
sbb
sub
hlt
test
jge
xchg
mov
sbb
ffree
stos
rolb
and
jle
pop
sarb
ret
mov
xor
push
sbb
es
call
js
adc
add
push
scas
mov
or
push
cmp
adc
inc
loope
sbb
adc
outsb
negb
sbb
std
push
push
dec
aam
jae
mov
int3
jne
mov
sbb
stos
mov
xchg
js
std
mov
jmp
out
jnp
push
or
push
sbb
in
mov
add
data16
lcall
shufps
xchg
shl
fsubl
bound
sbb
xor
loopne
sarb
out
fs
mov
lds
jg
pop
sub
adc
cmpsl
mov
cmp
push
xchg
jo
add
mov
jo
mov
dec
daa
ret
data16
dec
rcrb
jae
dec
mov
mov
adc
xchg
jp
adc
test
bound
mov
fwait
movsb
xor
or
aam
aas
inc
lods
addb
push
inc
or
sub
sub
push
cwtl
js
xlat
aas
cmc
jmp
add
xchg
mov
lock
outsb
addb
popa
jecxz
and
sti
inc
xchg
adcb
inc
nop
xchg
out
adc
inc
outsl
in
cltd
or
sti
dec
es
insb
or
bound
jbe
jb
add
dec
add
iret
pop
popf
outsb
arpl
icebp
pop
fcomi
iret
inc
mov
dec
repz
push
xchg
and
pop
push
roll
test
pop
xchg
arpl
popa
push
cli
shlb
mov
mov
icebp
adc
out
and
inc
fdivrs
or
push
js
stc
fs
cmp
jo
dec
fisttps
bound
sub
dec
aam
into
addr16
pop
les
enter
or
ja
loop
dec
test
lret
xchg
inc
mov
lea
inc
imul
or
adc
sbb
mov
movsb
dec
mov
es
int
scas
xorb
xchg
inc
mov
xor
addr16
shrb
aam
bound
cli
dec
dec
mov
outsb
inc
iret
sbb
mov
add
mov
or
addr16
cmp
and
popf
imul
lahf
pushf
mov
jnp
lcall
fcmovnu
js
lret
pop
ret
push
mov
scas
movsl
es
mov
fcompl
mov
testb
addl
sti
sbb
call
lcall
add
aaa
sbb
cmp
or
into
rclb
icebp
add
pop
sarb
fwait
stos
jecxz
inc
mov
sbb
jmp
and
mov
pop
inc
insb
xchg
lret
test
ror
adc
adc
add
inc
push
jb
sub
aam
int3
push
test
mov
add
dec
roll
pop
test
inc
inc
mov
or
fimuls
outsb
sub
dec
lret
pusha
dec
std
or
push
add
mov
sbb
addr16
ss
sbb
sub
dec
dec
and
inc
inc
rcll
or
mov
jmp
aas
or
jmp
mov
lea
and
popa
mov
fildl
dec
push
lahf
add
mov
subl
movsb
popf
pop
sbb
mov
add
or
push
hlt
or
push
imul
fildl
ss
int3
leave
sbb
xchg
add
ret
dec
fs
arpl
mov
cmp
push
pop
pop
dec
inc
pop
nop
sbb
cltd
sbb
pop
or
pop
sub
es
add
mov
mov
dec
adc
xor
jge
xor
sarb
and
lock
cwtl
out
dec
je
push
sub
push
jbe
sbb
repz
push
and
pop
mov
pop
jne
test
aaa
jp
ds
imul
mov
cltd
jo
out
xchg
loope
ret
jecxz
imul
xchg
push
das
xchg
adc
jmp
mov
mov
xchg
fmull
insl
dec
fmuls
adc
add
and
xchg
cmc
push
mov
out
loope
add
int
lret
dec
pop
sub
psubsb
sbb
shll
mov
test
mov
inc
fnsave
jbe
or
loopne
ret
arpl
inc
imul
js
insl
sub
aad
dec
add
fimuls
mov
ja
imul
sbb
cmp
lea
or
shlb
out
les
or
mov
xor
xchg
pushf
stc
adc
das
pop
dec
xchg
hlt
xchg
xchg
inc
dec
clc
xchg
sub
adc
sbb
cmc
imul
dec
dec
lret
pop
push
sub
xchg
or
inc
daa
arpl
fmuls
shrl
lcall
mov
sbb
xor
pop
sub
in
sarb
mov
test
add
sub
dec
test
push
insl
negb
add
clc
and
fisttpll
test
add
inc
fcomps
adc
xor
ds
dec
adc
push
pop
push
adc
mov
push
adc
mov
mov
or
jbe
test
mov
fs
fimuls
mov
add
xchg
mov
cld
shll
sbb
xor
test
jmp
inc
inc
inc
and
inc
sbb
mov
addl
dec
push
sahf
add
insl
hlt
adc
mov
aas
icebp
xchg
add
daa
and
cmp
loope
sbb
mov
out
repnz
outsl
dec
clc
filds
mov
fnstcw
out
sbb
or
push
mov
jmp
imul
in
cmc
sub
in
orl
xchg
or
lock
cmp
cmc
push
push
jl,pt
xchg
jle
pop
mov
pop
loope
out
inc
pop
xchg
adc
js
jl
dec
jns
scas
mov
sti
adc
pop
ja
out
repnz
xchg
pop
dec
jnp
mov
fnstsw
arpl
mov
js
jbe
sub
xchg
mov
mov
nop
rolb
addr16
ja
fimuls
call
ds
push
rolb
lahf
mov
sbb
aaa
sbb
push
je
xchg
cmc
xchg
cmpb
das
mov
jl
hlt
add
push
push
fucomi
mov
sbb
out
jb
and
das
jge
stc
cmpl
cmp
fwait
mov
sbb
mov
pop
in
xchg
pop
xchg
inc
sbb
adc
xor
sub
sub
les
pop
nop
sti
dec
add
jp
out
or
lret
sti
sbb
sbb
push
nop
and
sbb
test
sar
outsb
push
push
mov
pusha
sbb
ret
xlat
mov
dec
or
lods
fidivs
popa
loope
pop
ret
sbbl
add
vpsubq
fsubrl
ja
and
popa
xor
ss
inc
adc
inc
mov
pop
cmp
and
daa
ret
fwait
mov
sahf
xor
xchg
xor
dec
leave
or
pushf
push
dec
mov
les
add
push
enter
imull
xchg
outsl
fistl
mov
sti
cmp
sub
adc
mov
jb
dec
jno
mov
fldenv
fadds
lret
add
xchg
cmpsl
pusha
pushf
and
cltd
and
popa
sub
rol
test
popf
adc
pop
add
add
xor
adc
sbb
push
sub
pop
fwait
xchg
mov
fnstsw
into
add
in
es
mov
sub
jle
ffreep
mov
push
inc
lea
sub
sti
xor
pop
pop
xchg
cmpsl
xor
mov
add
inc
je
mov
mov
fsubrp
xor
mov
inc
xchg
subb
mov
cmp
sub
shll
fwait
movsl
jge
add
ror
dec
and
imul
or
xchg
push
xchg
sbb
pop
ficomps
shll
mov
inc
addr16
fisubs
faddl
inc
or
insb
mov
cltd
mov
sub
xchg
mov
jbe
pop
test
mov
dec
cmp
push
dec
push
jnp
push
inc
dec
ds
adc
movsl
dec
mov
jge
cmp
ret
lods
fiaddl
inc
addr16
mov
insl
les
dec
mov
sbb
leave
or
pop
daa
in
cld
xchg
xchg
and
sbb
pop
adc
add
xchg
sbb
push
dec
pop
pushf
imul
sarl
test
xor
pop
dec
pop
lods
xchg
xchg
mov
flds
aaa
add
loope
rcl
or
jecxz
mov
dec
jmp
add
rorb
xchg
push
fadds
and
xlat
movsb
ljmp
jb
dec
out
mov
sub
add
stos
mov
cmp
mov
mov
jge
je
fbstp
xlat
rorb
cwtl
adc
jl
mov
jmp
inc
pop
dec
mov
mov
jne
sbb
aas
test
add
sub
ret
imul
cmp
cmp
sahf
xchg
adc
jmp
cmp
pop
sbbl
dec
and
dec
popa
call
mov
xchg
movsb
mov
dec
push
adc
stos
xchg
out
subb
or
negl
inc
mov
mov
stos
lods
adc
loopne
sub
dec
xor
adc
cmp
dec
or
or
jmp
pushf
xor
popf
cmp
repnz
dec
pop
adc
cwtl
mov
sub
cmp
sti
push
inc
xchg
xlat
andb
movsl
adc
mov
and
jecxz
jo
aad
out
and
push
jp
es
add
mov
or
add
movsb
insb
dec
leave
push
mov
or
test
jne
sbb
data16
aam
mov
adc
jae
scas
aam
sub
dec
daa
lcall
mov
push
mov
icebp
xchg
xchg
push
jecxz
bound
mov
pop
fdivrp
fisubrs
pminsw
mov
dec
xchg
subl
or
mov
mov
adc
dec
mov
adc
xlat
sub
dec
mov
outsl
cs
mov
repz
xchg
mov
sub
arpl
mov
inc
xchg
and
cmp
dec
mov
roll
shll
add
or
test
arpl
lods
fadds
dec
mov
popf
loop
cmc
mov
and
fldcw
dec
sub
lods
dec
ret
mov
or
adc
add
fstps
mov
inc
or
dec
fwait
jge
jmp
jne
and
dec
inc
dec
dec
or
inc
loop
rclb
or
inc
int3
add
stc
push
sub
add
popl
call
pop
daa
rcrl
mov
cmp
arpl
adc
or
test
dec
cmp
ljmp
addb
xlat
iret
inc
ret
add
stos
add
pop
gs
sub
mov
ja
sti
pop
push
add
sub
xchg
cmpsb
pop
push
fdivrs
rorb
outsl
adc
adc
lahf
jp
shrb
push
cmp
ret
adc
or
xor
mov
cmp
push
mov
test
movsb
cmp
in
mov
and
and
pop
add
push
pop
xor
mov
lahf
mov
test
push
cmp
lahf
push
sar
imul
mov
ret
sbb
add
into
dec
fisubrl
or
rolb
lods
popa
movsb
inc
int3
les
mov
jg
or
lret
mov
add
inc
movsl
add
cli
mov
adc
add
add
and
mov
aaa
sub
pop
out
add
stc
inc
scas
push
push
arpl
xchg
add
jbe
and
mov
dec
out
addr16
add
mov
je
fistpll
inc
jae
dec
dec
sub
xor
pop
pop
jmp
and
rep
add
push
xchg
xchg
aad
mov
sbb
push
add
or
lcall
jle
fisubl
in
inc
and
or
sbb
ret
xor
mov
addb
test
and
call
sbb
add
and
movl
xor
xchg
or
jecxz
sahf
jle
adc
add
in
jecxz
shlb
mov
fwait
adc
call
xor
scas
outsl
in
cmpsl
pop
imul
xchg
cmp
sbb
dec
xor
js
push
test
dec
sbb
dec
adc
es
cmp
cmp
enter
dec
cmp
stos
nop
pop
mov
xor
rol
test
or
int
adc
pop
pop
cmp
popl
sbb
sub
adc
das
xcrypt-ctr
cmpsl
sbb
push
lock
mov
pop
push
bound
pop
orb
shlb
lcall
fwait
stc
pop
daa
movsb
frstor
dec
shrl
movsl
mov
push
lock
inc
imul
insl
in
mov
dec
sbb
cmp
ja
sub
in
repnz
rorb
mov
jae
or
mov
fmull
or
or
es
cs
jmp
cmp
xchg
cmp
mov
cwtl
cmpsb
adc
inc
sbb
leave
and
rol
shrl
testb
das
xchg
xchg
push
lods
loopne
nop
scas
pusha
jb,pn
xor
sahf
add
es
mov
cmp
pop
dec
mov
xchg
mov
in
mov
das
sbb
or
outsl
dec
scas
push
pop
aam
fs
mov
cmpl
popa
in
sub
add
dec
or
repz
mov
push
lock
nop
pusha
add
mov
in
cmc
adc
cmpb
adc
adc
pushf
add
jmp
cld
pop
adc
inc
push
mov
add
shl
mov
je
mov
xchg
es
mov
dec
int3
inc
fwait
lock
dec
sub
nop
and
les
in
add
fsts
sbb
lcall
divl
jns
fsub
push
xchg
jo
jbe
lds
inc
xor
sub
dec
xchg
jecxz
sbb
push
xchg
pop
pop
xor
inc
pop
mov
rolb
jp
movsb
add
mov
sti
mov
inc
adc
rcll
add
jp
or
jo
aad
push
and
push
jbe
sub
mov
xchg
adc
cmp
mov
gs
inc
cli
or
jo
mov
mov
push
jecxz
sub
daa
or
mov
dec
aaa
sbb
inc
and
inc
inc
add
xchg
add
mov
add
int3
xor
xchg
adc
mov
push
jb
fcmovb
dec
fstl
lret
rol
sub
ja,pt
dec
ret
jnp
rcr
sbb
pop
pop
inc
lea
iret
sbb
call
cltd
adc
jb
dec
add
sub
cmc
cmpb
xchg
sub
mov
data16
aad
les
out
xchg
xorb
and
or
adc
pop
add
dec
add
xor
sub
cmp
sbb
ret
add
and
xchg
sub
mov
and
mov
dec
sub
stc
jb
lea
or
jl
dec
ja
dec
aam
imul
cltd
pop
movsb
mov
cltd
xor
xlat
cmp
and
pop
in
adc
jmp
sub
xchg
daa
pop
test
dec
mov
fwait
dec
dec
fs
xchg
ret
pop
or
xor
outsb
jno
adc
and
inc
add
or
popa
ljmp
jno
xor
xchg
add
sbb
cld
xor
imul
icebp
inc
loope
cmp
xchg
subb
inc
mov
inc
cmp
push
jbe
and
xor
and
negb
sub
pop
sahf
cmp
mov
add
add
push
or
addl
test
inc
daa
push
inc
or
xor
jge
xor
xchg
push
sarb
std
dec
mov
stc
or
mov
dec
ret
and
pop
fnsave
inc
aaa
add
push
or
lret
pop
test
popa
mov
pop
cmp
jne
jno
mov
xchg
dec
rclb
adc
mov
repz
push
dec
ret
mov
dec
dec
inc
jmp
sub
or
fadd
aas
cs
mov
loopne
inc
lds
mov
outsb
cmp
inc
jo
pop
pop
mov
pusha
sahf
subl
pop
xchg
or
ja
inc
xchg
pop
mov
mov
mov
cld
push
test
xchg
sbb
fstl
adcl
movsb
pop
pop
lret
mov
adc
pop
subl
lcall
add
pop
fdivrl
inc
pop
daa
xchg
out
adc
dec
int
es
jle
dec
dec
call
and
arpl
shll
movl
dec
sub
jmp
imul
lock
cmp
sbb
adcl
pop
out
xchg
dec
dec
ret
cmp
fwait
push
adc
aad
test
into
and
outsl
sub
sbb
add
lret
jo
in
mov
sub
xor
jo
stos
push
jp
dec
mov
mov
push
dec
or
or
mov
dec
movsl
hlt
and
in
jecxz
fbld
add
push
sbb
mov
or
mov
jmp
scas
cmpsb
cmp
inc
mov
add
pop
xchg
iret
and
pop
add
shr
scas
rclb
dec
dec
pop
push
mov
outsl
lcall
lods
inc
pop
test
test
movsl
inc
sub
sub
add
aam
pop
add
cmpl
ja
cmp
cmp
cmp
jecxz
icebp
adc
push
test
or
pop
mov
xor
adc
add
sbb
pushf
and
loopne
xor
in
or
sbb
mov
subl
bound
rcr
pop
es
stc
je
cmpsl
mov
cltd
dec
out
rcll
fstpt
cmc
mov
add
adc
and
and
push
popf
repnz
or
shll
sub
fwait
push
mov
pop
sbb
fmul
stos
mov
or
sbb
jo
mov
jno
or
int3
addl
jnp
dec
test
mov
pop
jae
cmpl
gs
add
js
push
sbb
pop
subl
shll
mov
lea
clc
insb
jecxz
test
out
or
inc
inc
adc
faddl
push
fs
xchg
cmpsl
pop
pop
and
pop
or
nop
out
jbe
and
mov
lock
mov
imul
fdiv
insl
out
or
repnz
pop
inc
cltd
cmp
pop
rolb
inc
jmp
xor
repz
sbb
xchg
out
mov
pop
mov
lock
xlat
dec
pop
xlat
addb
aas
xchg
or
outsb
shll
in
push
mov
sub
sub
xsha256
cmpsb
pop
or
popa
mov
inc
mov
dec
inc
movsb
push
fisubrs
add
dec
outsl
push
test
push
sbb
adc
movsl
inc
cs
sbb
pop
add
dec
xchg
inc
cmp
xchg
dec
fwait
sbb
jg
add
push
xor
add
mov
ret
and
add
pop
mov
jecxz
pop
jb
add
xor
gs
jle
orl
mov
jmp
sbb
add
inc
adc
mov
mov
inc
dec
or
push
pop
mov
sbb
scas
sub
mov
add
enter
inc
lret
and
andb
aad
or
test
jbe
mov
inc
nop
xor
pop
aas
cmpsb
xchg
scas
movsl
xor
adc
icebp
scas
pop
or
pop
inc
subl
mov
pop
adcb
mov
jmp
mov
fwait
test
mov
jp
and
aaa
lea
ds
pop
lods
insb
sbb
cs
mov
cli
popf
pop
out
fsubrs
jne
add
scas
outsb
or
mov
test
jae
add
jne
fiaddl
aad
cmpsl
into
pop
push
inc
or
lahf
inc
pop
pusha
pop
and
mov
pop
push
mov
add
mov
push
loope
dec
imul
mov
mov
or
adc
or
loop
adc
mov
movsl
mov
dec
jge
add
or
shlb
out
inc
cs
pop
jecxz
lret
pop
ret
mov
and
cmpsl
lret
pop
inc
scas
les
ss
mov
sub
ret
inc
shlb
mov
xchg
add
mov
xchg
inc
xchg
mov
std
rorb
mov
clc
mov
lret
adc
stc
jnp
pop
jne
into
aam
mov
inc
mov
cmp
dec
sbb
add
in
jmp
xchg
lahf
arpl
xchg
jle
push
les
aam
clc
sarb
fs
shlb
in
movb
sbb
roll
adc
lret
jb
xlat
ja
call
or
int3
test
lods
mov
mov
mov
movsb
xchg
fld
aas
xchg
add
push
pop
xor
adc
pop
sbb
sbb
and
adc
inc
jno
inc
adc
ljmp
faddl
mov
dec
clc
in
loopne
or
andb
test
pop
sub
pusha
dec
push
mov
movsl
mov
hlt
mov
aad
fwait
loope
add
imul
add
and
int
inc
lods
or
test
test
inc
inc
gs
orb
add
push
sti
jp
and
jge
in
mov
xor
jmp
and
mov
dec
inc
mov
rolb
addr16
pushf
pop
inc
jne
fs
sub
mov
xor
hlt
ljmp
sbb
ret
rcrb
daa
loopne
lcall
aad
mov
fdivrl
add
sub
pop
stos
jno
sub
mov
dec
add
js
and
sbb
inc
rcr
das
jbe
cmp
mov
daa
test
mov
les
jo
loop
xlat
add
out
imul
cli
xchg
dec
fstpt
pop
mov
test
dec
sub
mov
sbb
and
jae
adc
add
pushf
add
add
adc
mov
inc
repz
push
sti
add
cmp
and
sbb
aad
popfw
xchg
xor
xchg
mov
add
dec
repnz
mov
mov
pop
roll
and
and
xor
sbbl
xor
outsb
out
sub
mov
xor
mov
out
xor
and
nop
xor
sub
ja
pop
sbb
push
call
add
add
aas
lcall
sbb
adc
jo
add
sub
scas
push
je,pn
add
aas
xlat
cmpsb
nop
xchg
push
mov
and
inc
and
dec
sbb
sbb
cmp
xlat
xchg
pushf
add
xchg
icebp
mov
sub
sub
mov
xchg
mov
adc
stos
mov
shrl
fs
es
push
xor
sbb
popa
xchg
out
xchg
es
stos
lods
xchg
dec
or
jns
jb
sub
inc
test
xchg
mov
addl
sub
movsl
aas
or
les
pop
mov
mov
push
clc
jb
stos
mov
inc
adc
add
pushf
inc
jb
das
jge
push
addr16
sbb
jbe
mov
jecxz
cmpsl
jb
xchg
push
ljmp
add
or
dec
ss
dec
cmp
sbb
dec
jl
stc
adc
mov
mov
add
mov
xlat
push
or
push
aaa
or
rolb
cmovg
and
sbb
mov
in
add
lret
icebp
or
inc
je
fdivrp
jmp
jl
or
xlat
dec
lret
outsb
mov
imul
or
inc
pusha
add
call
fidivrl
lods
mov
punpckhbw
inc
loope
ss
jge
mov
jae
scas
add
jo
lds
pop
loop
push
push
mov
ret
jo
test
icebp
xchg
adc
cmp
les
addl
jo
xor
fs
fiaddl
lock
addb
xchg
shrl
hlt
dec
or
sbb
rcrl
mov
jg
or
add
lock
inc
dec
add
jmp
push
ret
test
jg
inc
inc
les
aaa
push
sbb
dec
sahf
shlb
mov
add
ret
push
dec
inc
fwait
loopne
pop
test
das
dec
jmp
or
add
xlat
dec
clc
dec
add
add
mov
or
or
daa
test
inc
add
out
cli
mov
addb
sub
add
inc
lea
test
mov
or
mov
icebp
orb
xchg
cwtl
xchg
and
enter
mov
push
mov
and
bt
stc
add
ret
out
out
inc
mov
xor
ror
stc
or
stc
jge
push
push
loopne
std
jg
fsubrl
push
ja
push
mov
xor
or
in
cmpsb
mov
cmpsl
mov
add
inc
push
cmp
test
xor
inc
insl
or
out
test
orl
les
ja
add
sbb
and
ret
sbb
popa
sub
dec
and
add
cli
xor
lods
pop
xchg
sbb
jnp
mov
adc
icebp
sub
dec
sbbl
loope
xchg
cmp
adc
xor
stc
mov
fs
or
sbb
lret
dec
bound
jo
xchg
lods
jo
push
movsb
lahf
mov
insb
test
add
loope
cmp
adc
dec
or
inc
push
xor
dec
mov
mov
popa
jmp
cmpsb
push
mov
pop
xchg
pop
aaa
push
xor
mov
and
pavgw
mov
push
popa
inc
imul
mov
js
pop
xor
mov
mov
outsb
outsl
setae
sub
int3
push
pop
into
add
push
sbb
testb
inc
cmp
jmp
push
mov
jl
sbb
sbb
mov
mov
test
daa
and
or
or
add
lret
dec
ljmp
lea
lret
pop
jne
loopne
inc
lret
fldcw
frstor
push
adc
cmpl
add
imul
cmp
stos
inc
adc
lret
in
arpl
es
xor
xchg
out
jb
mov
ret
or
mov
loop
daa
xchg
cmp
inc
mov
pop
mov
cmpb
add
int3
iret
in
lea
lea
iret
gs
arpl
push
and
sbb
outsb
stc
cwtl
rcrb
stos
xor
dec
sbb
or
push
test
push
xchg
inc
or
stos
shrb
sarb
pop
fildl
sub
hlt
mov
mov
sysexit
push
sbb
push
lcall
loopne
jmp
sbb
mov
jnp
push
repnz
add
cmp
aaa
imul
aam
push
or
push
mov
shll
test
adc
push
sbb
add
inc
enter
sub
ret
ficompl
inc
add
add
add
pop
sbb
xchg
pop
adc
outsl
stc
or
or
lods
inc
sub
leave
sbb
and
sarl
out
aam
add
cmp
and
ret
les
xchg
add
sub
and
aad
mov
fadd
mov
dec
jp
ret
and
and
push
outsl
mov
pop
inc
sbb
mov
mov
inc
outsl
mov
mov
outsl
ret
les
es
add
mov
aas
fbstp
mov
repnz
call
push
pop
shrb
loopne
mov
push
pop
rolb
mov
and
pop
fld
add
jne
fistpl
les
xchg
mov
lcall
inc
sub
insb
xchg
aas
mov
mov
icebp
stc
inc
and
outsl
inc
into
add
test
mov
inc
sbb
jo
rep
jbe
xchg
pop
fsts
jnp
fisubrl
pop
push
addr16
jmp
pop
mov
or
jle
cmovnp
add
outsl
outsl
in
enter
dec
mov
or
std
mov
xor
xchg
inc
and
outsl
adc
push
dec
push
loope
gs
push
das
add
xor
testl
xor
int3
popa
sub
sbb
rclb
mov
add
mov
sbb
push
ret
xorb
pop
mov
test
lods
icebp
enter
adc
cmpl
mov
inc
mov
pop
fwait
cmp
mov
sbb
dec
js
daa
dec
add
insb
dec
out
or
adc
fcmove
inc
inc
insl
inc
outsl
add
or
inc
rolb
in
loopne
ljmp
mov
dec
outsl
add
nop
adc
xchg
xor
arpl
pop
cmp
xchg
sbb
or
xlat
ds
add
popa
cmp
and
pop
into
sbb
sbb
mov
xlat
push
andb
mov
jmp
add
rorl
pop
mov
or
outsl
adc
adc
pusha
aaa
push
cmp
shlb
cmp
jg
mov
mov
mov
aam
sub
xor
cmp
fucomp
fwait
push
xchg
cmp
hlt
adc
fstpt
popa
pop
ljmp
fnstsw
or
add
data16
dec
pop
je
dec
pop
mov
add
dec
roll
in
ja
lods
pop
mov
cmp
push
inc
pop
mov
jae
insl
inc
fstl
push
out
dec
ret
cmp
scas
xchg
out
enter
push
mov
out
xchg
xor
mov
mov
add
push
xchg
shlb
xchg
inc
aam
adc
inc
xchg
rcll
inc
pop
cwtl
add
inc
sub
pop
adc
mov
pop
mov
loope
divl
mov
mov
pop
mov
sub
test
aaa
xorb
shrl
in
dec
into
push
push
stos
ret
cmc
mov
add
mov
add
pop
lret
add
dec
jno
pusha
dec
mov
repz
aas
arpl
push
das
inc
add
test
imulb
out
inc
cmp
sbb
dec
push
mov
adc
jmp
push
inc
test
mov
inc
cmc
shrl
push
inc
push
loopne
jmp
push
adc
add
mov
cmp
js
pop
add
dec
mov
mov
jns
mov
les
ret
in
fadds
pop
fisubs
jge
inc
inc
daa
or
add
out
jne
out
add
jnp
or
and
cmpsl
xorb
lea
lods
adc
mov
lahf
mov
sub
imul
out
push
add
sub
imul
adc
mov
add
mov
ljmp
inc
addl
cmp
jns
xorl
jo
sbb
out
and
mov
movsb
pop
and
mov
or
cmpsb
add
sub
xlat
fsubrl
dec
mov
pop
xchg
mov
out
mov
mov
sbb
mov
push
mov
dec
movb
inc
popa
inc
sahf
mov
gs
loopne
gs
sbb
call
inc
repz
pop
sub
pop
imul
fcompl
sbb
shll
push
inc
adc
mov
ret
mov
add
js
orl
xor
mov
dec
xchg
enter
add
in
imul
or
pop
or
pop
popa
fs
addr16
dec
jecxz
mov
and
pop
jnp
mov
test
push
push
test
lods
out
sub
sar
dec
mov
pop
arpl
sbb
xchg
lret
sbb
mov
add
pop
cmc
sbb
xor
mov
and
das
scas
push
mov
sbb
push
mov
lock
pop
mov
imull
pop
js
xchg
adcb
mov
pop
lret
inc
dec
imul
jecxz
or
pop
ret
ja
leave
decb
mov
and
or
cwtl
mov
call
jle
inc
mov
add
mov
adc
pop
and
test
push
push
sub
lahf
cmp
push
inc
shrb
lea
xorb
jle
pop
or
or
xlat
sub
dec
jmp
in
rcrb
mov
jbe
movsl
pop
aaa
push
addl
jbe
mov
inc
and
xor
or
rolb
push
pop
aad
pop
xor
adcl
xor
outsl
dec
pop
inc
or
inc
sbb
mov
loopw
mov
push
ret
mov
imul
pop
shrb
dec
mov
inc
dec
or
and
jl
xorl
adc
inc
je
adc
or
pop
inc
subb
inc
cltd
mov
mov
push
push
sti
push
sbb
iret
cmp
mov
mov
jecxz
jmp
es
mov
inc
inc
imul
add
xor
pop
mov
pop
dec
and
add
mov
out
mov
daa
dec
loop
add
push
mov
fcmovnb
push
dec
xchg
cmpsb
or
mov
test
jae
mov
or
aaa
add
lods
adc
in
dec
pop
xor
or
shll
or
pop
jae
pavgw
ljmp
insb
lea
sbb
rcrl
sub
or
aas
or
xchg
add
sbb
mov
stc
ljmp
inc
inc
test
movsb
aad
fnstcw
xchg
or
mov
repz
cmp
stos
pushf
or
pop
pop
mov
and
hlt
lea
mov
or
adc
or
mov
pop
mov
pop
lahf
pop
adc
and
push
mov
add
sub
je
sbb
sbb
mov
cmpsb
shrb
sbb
scas
adc
xchg
test
add
fisubs
add
mov
fadd
push
push
mov
xchg
es
mov
data16
mov
in
add
cmpsl
jmp
cmp
cmp
dec
cltd
pop
je
and
daa
sbb
and
jne
add
cmp
cwtl
sbb
loopne
imull
ljmp
out
movsb
cli
mov
stc
imul
bnd
add
addb
cmp
ret
mov
das
daa
repnz
pop
or
pusha
push
fadds
cmp
mov
bound
xchg
lock
jns
add
pop
mov
aaa
inc
inc
xor
jno
call
mov
mov
clc
inc
inc
xor
inc
mov
mov
mov
push
or
xchg
addb
mov
movsl
or
pop
push
out
dec
sbb
ss
dec
adc
inc
xor
xchg
sub
xchg
push
add
add
pusha
je
sub
fucomp
jl
inc
pop
out
xchg
iret
mov
adc
das
inc
mov
inc
mov
push
lock
pop
lods
sbb
pop
mov
das
fs
cmp
sbb
cmp
add
into
jp
jno
and
adc
mov
xchg
into
dec
pop
test
jmp
mov
mov
cmp
and
js
jne
lahf
nop
push
fiaddl
jbe
pop
loopne
add
or
popa
sbb
add
mov
arpl
dec
mov
push
pop
or
loopne
cmp
mov
out
inc
xor
xchg
fiadds
dec
test
jmp
pop
xchg
aad
or
cs
test
xorl
and
and
sbb
inc
lock
mov
pop
nop
jo
dec
jmp
shll
les
sahf
test
xchg
mov
mov
sahf
outsb
jmp
mov
push
and
sti
xchg
ljmp
sbb
stos
sub
sti
out
int3
dec
ljmp
add
iret
in
mov
mov
adc
dec
mov
sub
mov
xchg
mov
lret
aas
xor
imul
sbb
dec
push
pop
faddl
addr16
popf
xor
imul
movsl
mov
pop
call
lret
or
call
incb
add
add
insb
cvttps2pi
mov
xor
mov
jp
inc
and
inc
rep
movsl
and
outsb
xchg
fwait
jbe
and
mov
popa
mov
xchg
leave
push
test
mov
mov
push
sub
push
xchg
sbb
jo
mov
cmp
push
or
lock
jno
lahf
inc
push
imul
dec
adc
mov
push
popa
fildl
loop
push
das
adc
mov
jmp
imul
mov
sbb
in
movsl
sub
xorb
fwait
inc
or
test
pop
add
adc
jecxz
sahf
es
test
cmp
cltd
ret
xchg
sarb
bound
gs
hlt
shll
dec
js
cmpsl
subb
js
mov
aam
movsb
add
lahf
jmp
orl
push
in
push
lret
push
add
or
jo
sahf
and
outsb
test
push
aam
pop
and
aam
rolb
xlat
mov
xchg
orl
shll
movntq
inc
xchg
mov
flds
add
adc
xor
cmp
sbb
lods
inc
daa
sbb
mov
dec
jp
mov
ret
xorl
xchg
add
loopne
dec
xor
int
cmp
mov
push
rorb
or
insb
jp
mov
xchg
rcrl
fiaddl
movsl
jbe
mov
mov
xor
es
push
int
mov
xor
dec
pop
xchg
mov
jno
push
inc
or
les
loope
sub
ljmp
add
inc
push
sbb
sbb
or
sub
pop
and
and
inc
sub
jg
adc
sub
cmp
xchg
ljmp
and
scas
add
movb
or
inc
mov
pop
addl
ret
or
pop
mov
shl
push
loope
fs
ret
mov
popa
dec
call
adc
nop
add
pop
mov
bound
dec
or
push
inc
mov
imul
mov
rcll
jns,pt
test
cmc
loop
xor
in
psubusb
push
cltd
push
mov
mov
fwait
adc
sub
jae
dec
add
mov
cmpb
dec
psubw
pop
adc
adc
ja
sbb
or
push
dec
arpl
lods
ja
xchg
xor
cltd
jae
xchg
ret
mov
xchg
sub
testl
xchg
jecxz
mov
push
pop
adc
xchg
and
push
dec
push
lods
jg
inc
imul
mov
aas
imul
sub
iret
mov
xorb
cmp
je
sbb
cmpsl
or
mov
mov
add
jnp
mov
lcall
add
or
sub
or
jecxz
add
mov
inc
add
mov
test
leave
dec
das
lahf
adc
inc
sti
stos
sub
sarb
inc
movsb
rolb
xor
mov
pop
bts
inc
fildll
inc
gs
insl
jmp
incl
test
add
mov
scas
aad
inc
or
mov
mov
mov
lods
rcrl
and
mov
fsubl
das
sbb
fstpt
ja
fdivrs
insl
push
push
sbb
js
in
es
ucomiss
lcall
xor
cltd
lock
add
mov
aaa
mov
enter
xor
pop
and
push
inc
mov
sub
jno
add
push
bnd
ds
ret
jp
sub
xor
lcall
add
jbe
mov
cmc
jge
test
sbb
sub
adc
clc
xor
aad
ret
dec
inc
jecxz
popa
dec
pop
fiadds
sbb
das
call
mov
and
cmp
cmpsb
fisttpl
nop
pop
xchg
outsl
and
xchg
jo
push
inc
push
out
nop
xchg
int3
and
adc
ror
insl
pusha
mov
jno
stos
sub
movsb
xchg
in
sub
sbb
mov
daa
xchg
mov
aas
xlat
mov
mov
xchg
lret
and
sub
arpl
push
pushf
adc
mov
dec
inc
inc
add
sbb
xorl
movsl
les
mov
push
rcrb
ss
xor
scas
call
jmp
push
inc
pop
cmp
pop
dec
push
adcb
mov
fisubl
fsts
mov
push
or
pop
cwtl
add
pop
add
les
add
add
and
dec
daa
js
jo
adc
add
xchg
cmpsb
mov
push
xchg
cld
jnp
stc
andb
lods
or
push
sub
adc
stc
inc
jmp
and
ror
push
inc
ja
cmp
movb
push
push
cmc
inc
pop
loopne
mov
add
sub
shrl
lahf
popf
aaa
addl
add
lret
mov
xor
mov
test
outsb
jg
mov
in
push
leave
dec
mov
fmuls
pop
repz
rcll
push
pop
cli
int
inc
add
pop
out
cwtl
andb
adc
dec
ljmp
in
loope
and
jo
inc
sub
loope
ss
adc
add
push
add
mov
add
adc
outsl
jl
sbb
pusha
leave
dec
cmp
adcb
jne
and
push
add
push
add
sbb
sarb
sbb
xor
jae
fadds
xchg
inc
rorl
sbb
push
add
or
and
hlt
jl
or
jb
or
add
cmc
sbb
xchg
out
icebp
mov
sbb
leave
ror
sti
sub
xor
push
add
add
xchg
xorl
sub
dec
lock
loopne
and
lea
loopne
fwait
adc
lock
pop
outsl
sbb
adc
in
mov
xor
mov
jg
or
mov
push
sbb
mov
inc
lea
fildl
push
das
add
xor
sti
pop
add
jmp
sbb
addr16
add
mov
xor
sub
ret
mov
loope
test
repz
xor
cmp
push
push
cwtl
sub
fbld
add
xchg
or
or
stos
shlb
inc
pop
lcall
ret
pop
sbb
xlat
or
bound
jno
ds
out
cmp
mov
or
mov
mov
add
hlt
adc
pop
xor
push
add
mov
mov
in
or
mov
sarl
xor
inc
cli
add
pop
jl
sub
movsb
loope
mov
pop
pop
dec
mov
loope
orl
fwait
sbb
sbb
sub
inc
pop
rolb
push
push
sbb
sti
insb
lods
xor
dec
cmp
enter
lea
push
sub
xchg
sbbb
stos
xor
insb
sub
inc
bound
adc
jg
inc
fmuls
xor
mov
insb
add
clc
cmp
push
ret
fbld
pop
or
sbb
rcrb
and
xchg
cmp
sub
sbbl
adc
cmp
cmp
dec
sbb
sbb
xorl
push
imul
push
into
add
xlat
adc
jge
fldcw
and
dec
xchg
inc
pushf
xor
cwtl
pop
and
push
inc
xor
movsb
mov
mov
add
lods
bound
ret
inc
aaa
pop
pop
mov
push
or
insl
and
add
pop
lods
aaa
cmpsl
adc
mov
sbb
or
lret
inc
pop
sub
xchg
add
fdivrl
mov
xor
inc
inc
adc
pop
imul
lods
add
aas
pop
or
ret
sbb
loop
push
outsb
jg
sbb
ret
pushf
and
vmread
add
aas
rorb
pop
xor
push
lock
sub
loope
and
adc
pop
mov
inc
int
adcl
jo
mov
daa
aad
pushf
sbb
lea
inc
sub
lret
das
add
rorb
es
inc
pop
ret
arpl
bound
das
lods
sbb
dec
pop
and
add
and
orl
push
add
cmp
sub
test
cmp
push
imul
add
xor
add
and
bound
jb
mov
add
and
adc
daa
add
xor
inc
push
fcomps
in
inc
and
push
cmc
add
and
sbb
leave
jb
push
loopne
cmp
add
sbb
out
ficoms
aaa
jp
jae
outsb
add
loope
imul
movsl
dec
mov
dec
lahf
ljmp
dec
icebp
mov
mov
std
mov
js
jnp
pop
gs
aaa
jbe
push
stc
jns
inc
xchg
insl
outsl
imul
pusha
dec
lods
xor
xor
xchg
sahf
xor
add
pop
and
and
fmul
jg
and
in
push
lret
sbb
add
fwait
in
xchg
sbb
xchg
xorl
sbb
loop
dec
xchg
sub
xorb
mov
mov
xor
and
arpl
in
mov
mov
cmp
mov
dec
mov
insl
mov
sbb
inc
mov
adc
in
mov
aad
js
pushf
xor
jmp
or
add
sbb
lea
or
lea
add
jae
int
mov
mov
lea
xchg
sbb
mov
ds
and
adc
clc
add
mov
jge
xchg
jb
add
push
loopne
imul
pop
jecxz
or
dec
add
inc
movsl
adc
movsl
adc
or
add
add
add
pop
inc
repz
pusha
jl
mov
inc
lock
int
jo
add
xor
mov
ret
pusha
or
adc
je
jns
les
push
add
inc
add
movb
ror
int3
adcl
or
movb
mov
cwtl
pusha
inc
in
mov
cmp
sbb
mov
pop
cmpsb
das
add
inc
cmp
pusha
add
sbb
scas
rorb
or
bound
push
comiss
jge
sub
rcl
add
bound
add
ret
jmp
pop
jnp
xchg
xchg
push
jge
lods
nop
test
mov
in
ret
pop
pop
dec
cmp
lret
movsb
mov
or
mov
icebp
int
pop
xchg
sbb
dec
mov
mov
daa
push
cli
cmc
cmpsb
jbe
add
add
popa
and
in
jo
cwtl
xchg
mov
inc
add
sarb
adc
jbe
mov
loopne
xor
xchg
pop
les
lahf
push
inc
add
shlb
jo
psrad
jmp
and
add
or
lea
lods
xchg
pop
inc
fisubl
pop
data16
pop
fdivl
outsb
sbb
mov
mov
pushf
popa
cmp
xchg
or
push
shl
mov
sub
dec
pop
xor
mov
add
push
pop
pop
cmp
in
xchg
nop
add
lcall
xor
mov
dec
push
pop
push
pop
add
mov
push
lret
mov
and
fmulp
mov
hlt
hlt
and
mov
add
push
cmpb
hlt
mov
inc
popf
fs
andl
inc
das
loop
dec
mov
adc
gs
sbb
call
jg
add
add
jge
dec
push
mov
roll
pop
jbe
pop
cwtl
in
rcll
mov
mov
mulb
push
jg
stos
insl
loopne
rcrb
mov
xchg
add
cli
adc
pop
mov
rcrl
imul
push
lods
ja
or
ds
mov
stos
ja
test
add
cmpl
test
std
jecxz
cmp
add
test
into
fstl
icebp
and
or
push
add
arpl
add
add
mov
adc
push
mov
mov
push
push
xor
bound
add
push
or
cmpsb
push
add
push
shll
or
or
dec
mov
in
push
sbb
push
push
cmp
mov
and
and
stc
mov
mov
jecxz
add
adc
jmp
xchg
dec
cmpsl
rcrl
push
push
pusha
cld
add
dec
xchg
add
pop
xor
daa
lahf
sub
add
movsl
mov
stc
rep
insb
add
or
jne
sbb
sbb
sbb
jo
xchg
push
cmp
add
xchg
mov
arpl
mov
fcmovnb
pop
sbb
add
outsl
cmp
mov
mov
xlat
loop
mov
daa
ds
outsb
popf
gs
adcl
xor
stc
jo
add
pop
or
sub
cmp
sbb
in
imul
xorl
shll
lods
das
addb
cmp
rcrl
pop
jo
add
loop
pop
sbb
inc
bound
pop
daa
push
adc
mov
add
sub
add
jo
mov
xchg
shll
cs
or
inc
add
mov
pop
dec
xchg
test
aad
xor
adc
xor
mov
inc
mov
and
loope
jge
pusha
push
pop
sbb
dec
cmp
es
pop
jb
rolb
add
xor
push
pop
shr
cmp
lock
arpl
add
fcompl
ljmp
subl
pop
push
dec
mov
sub
mov
xchg
cmp
cmpsb
test
inc
pop
xor
sbb
jbe
pop
xor
dec
add
jns
jae
adc
jbe
cmc
sbb
icebp
outsl
push
jno
adc
jns
jae
add
cmp
dec
adc
sbb
in
loope
xchg
rorl
rorl
aaa
push
inc
mov
pop
sub
mov
mov
out
test
mov
loop
pop
icebp
jne
pop
add
sub
arpl
xor
jp
std
adc
sbbl
jl
jmp
cmc
or
or
pop
mov
add
pop
clc
leave
inc
fs
add
jge
pop
and
push
inc
add
pop
xchg
pop
cmp
rorb
fsubrs
popa
and
add
arpl
imul
mov
inc
call
orb
js
andb
or
mov
lcall
shl
mov
mov
clc
cmp
inc
inc
xor
ficompl
cwtl
test
mov
pop
and
push
mov
repz
popf
inc
fs
inc
mov
or
ret
js
add
cmp
cmpsb
push
sbbb
rorl
dec
fs
cs
movsl
movsb
lods
mov
sbb
loopne
in
mov
xchg
push
pop
cmp
xchg
push
inc
inc
mov
mov
pop
adc
dec
mov
js
jno
out
add
add
xchg
and
inc
cli
sbb
xor
mov
inc
pop
dec
test
cmp
xchg
cmp
fimull
cmp
inc
mov
jnp
add
pop
push
dec
dec
insb
push
popa
fdivs
arpl
les
out
push
add
insl
pop
loopne
into
adc
mov
hlt
insb
xchg
loop
push
jbe
dec
jb
lods
inc
mov
push
add
inc
sbb
cmpsl
sbb
les
inc
cmpb
xchg
lahf
jl
add
mov
add
or
pop
and
xchg
push
and
mov
ds
xchg
js
sbb
add
iret
sbb
pop
or
cmp
bt
xchg
je
dec
and
cmp
or
xlat
dec
aam
xor
andl
mov
pop
inc
and
pop
mov
sub
pusha
jmp
dec
mov
lods
lret
push
ret
jl
push
or
pop
sub
loopne
mov
mov
and
add
add
adc
or
jecxz
mov
pop
inc
enter
movsl
adcl
inc
adc
add
adc
jmp
push
test
cmp
inc
nop
add
mov
outsb
sahf
xchg
jo
push
xchg
and
mov
adc
test
movsl
loopne
and
icebp
clc
mov
movsl
test
ret
xchg
push
xchg
pop
adc
mov
xchg
popf
lcall
push
jmp
arpl
andb
scas
mov
pop
orb
jmp
arpl
sete
cmpsl
pop
cmp
lret
or
or
cmp
jmp
jo
jmp
fldenv
and
mov
cmp
daa
cmp
mov
mov
jno
mov
push
add
sbb
jg
movsl
and
sub
das
or
jp
out
push
or
testl
cmp
enter
and
adc
mov
jae
or
jecxz
push
adc
insb
cmpsb
xchg
push
lret
add
pop
rolb
dec
gs
push
shr
daa
mov
pop
sbb
xchg
push
push
add
rorl
xchg
fbld
sub
icebp
mov
mov
cmpsl
fs
aas
add
sahf
adc
andb
inc
xor
cwtl
xchg
repz
adc
add
mov
outsl
cltd
popl
cmp
in
and
mov
xlat
sub
dec
add
sbb
cmc
ret
add
nop
push
adc
js
jne
outsb
and
mov
mov
mov
hlt
adc
les
test
cld
sub
sub
inc
inc
fucomp
out
dec
pop
rcrb
jne
je
sub
hlt
arpl
add
test
sbb
jae
jmp
imul
orl
inc
enter
xchg
xchg
repz
cmp
or
push
inc
or
add
cmp
loope
push
mov
xchg
or
add
popa
push
push
push
and
inc
imul
and
dec
push
mov
sub
add
or
in
mov
andb
popf
mov
cmc
cmc
pusha
sbb
loopne
and
mov
imul
adc
push
sub
in
mov
add
adc
test
jg
inc
aam
mov
in
outsl
sub
dec
dec
push
clc
imul
xchg
fmull
or
sbb
push
ja
add
orl
dec
mov
cmpb
add
cmp
mov
arpl
sub
pop
aas
mov
sbb
mov
adc
cmp
sub
mov
loopne
addb
add
dec
test
pop
inc
add
add
mov
nop
stos
loop
sbb
repz
in
orb
mov
gs
pop
inc
les
mov
pop
aam
dec
adc
lret
cmp
test
ret
mov
or
aas
jb
frstor
inc
and
xchg
stos
add
mov
mov
xor
sbb
std
mov
loop
insb
or
add
mov
mov
pop
in
orl
adc
ret
push
popf
mov
inc
sbb
je
mov
and
ds
add
pop
add
ret
inc
inc
sbb
in
movsb
dec
cmpb
pop
pusha
aaa
jne
and
les
insb
lahf
inc
mov
cmpsl
ret
repz
pop
pop
and
push
popa
inc
mov
mov
xchg
adc
jge
add
dec
stc
ret
movsl
ret
mov
sub
inc
adcl
arpl
lcall
ret
sahf
add
and
pop
xor
pushf
mov
lret
arpl
cmc
mov
shlb
dec
fld
test
addr16
loopne
repnz
sub
mov
mov
rcrb
jo
mov
arpl
loopne
add
out
and
test
sub
mov
jae
push
loop
sub
dec
mov
inc
inc
sbb
or
inc
arpl
dec
or
mov
int
or
sub
popa
and
and
les
sub
push
mov
push
leave
cs
mov
iret
lods
lret
push
mov
dec
and
cmpsl
xor
out
and
and
outsb
mov
sub
imul
sub
sub
dec
mov
xor
pop
sbb
test
dec
mov
mov
xor
jo
pop
pop
gs
push
fnstenv
gs
fwait
sub
js
or
push
dec
jne
jo
sbb
xchg
xchg
adc
inc
adc
stos
push
mov
pop
ret
fdivs
negl
add
or
in
xor
pusha
loope
icebp
mov
ret
mov
bnd
and
cmp
ret
xchg
or
out
movsl
sub
ja
rcll
sub
xchg
movb
xchg
in
das
or
test
or
lret
sahf
pop
ds
inc
scas
inc
xlat
jge
lret
fwait
adc
jbe
sub
jne
and
mov
std
push
invlpg
add
pop
rorb
fcoml
lock
xchg
lahf
jp
push
cmp
and
xor
push
push
popf
daa
jmp
mov
lea
mov
test
xchg
sub
mov
mov
or
adc
scas
push
test
in
jns
iret
cs
pop
adc
dec
test
cwtl
pop
shlb
jno,pt
cmp
rol
data16
add
hlt
in
movl
mov
sbb
rol
roll
pop
sbb
adc
sahf
mov
jmp
ljmp
inc
push
dec
xor
popa
cmpsb
sahf
aam
in
and
sti
push
mov
enter
stos
sub
xorl
inc
inc
pop
aam
aam
mov
add
or
push
in
dec
adc
pop
es
add
mov
jae
inc
pop
mov
xlat
push
in
loope
pusha
push
std
xor
hlt
and
adc
inc
insl
fists
roll
jmp
movsl
pop
push
sub
pushf
mov
call
mov
push
sub
ret
lds
cmc
add
xlat
fsubrs
push
popf
add
add
and
je
pop
or
jno
cltd
test
ret
mov
addr16
scas
fwait
lret
repz
xchg
pop
jge
popa
inc
loopne
mov
mov
outsb
ret
shl
add
push
add
stos
sbb
push
inc
mov
pushf
addl
mov
adc
movsb
or
or
mov
enter
pop
stc
sub
inc
mov
mov
rol
data16
xor
pushf
out
or
xor
lds
jecxz
inc
inc
xlat
sbbb
pop
inc
or
dec
loop
xchg
loope
xchg
mov
pop
sbbb
and
jbe
mov
sbb
jmp
test
gs
scas
adc
sbb
xor
out
cwtl
jmp
mov
xchg
xchg
xor
sub
inc
and
sbb
test
dec
or
dec
cmpsl
std
inc
cmpsl
dec
push
add
inc
adc
aaa
sub
fwait
lcall
repz
imull
and
add
or
cmp
adc
adc
mov
push
xlat
inc
adc
dec
bound
adc
xchg
or
aas
mov
and
test
enter
insb
push
in
add
subl
fisttpll
or
outsb
adc
pop
loopne
inc
stos
fwait
cltd
cmp
cmp
adc
or
imul
stc
xor
imul
fiadds
mov
jne
sahf
test
jg
push
add
int
insb
mov
pop
dec
imul
jae
test
dec
loopne
adc
aas
pop
sbb
and
adc
sub
pop
lds
adc
dec
lea
popf
jge
pop
sbbb
sbb
outsb
mov
xor
test
test
or
inc
loope,pn
cmp
pop
add
dec
adc
pusha
mov
shll
jnp
addr16
sbb
add
add
and
mov
xchg
fstpt
mov
xor
daa
push
movsl
nop
les
out
jb
aad
dec
test
mov
dec
fistpll
cwtl
dec
dec
lahf
pushf
add
les
in
dec
test
pushf
sub
dec
lcall
xor
les
loop
push
mov
jo
mov
and
popf
adc
popa
add
and
stos
addr16
sub
pusha
sbb
and
inc
cmp
test
cltd
dec
daa
loope
mov
mov
and
xchg
cmpsb
mov
xor
je
addr16
mov
pop
insb
leave
sub
ret
mov
cltd
cli
push
roll
dec
add
xlat
orb
push
mov
rol
out
cmpb
mov
mov
repnz
je
dec
inc
lods
enter
mov
js
lea
mov
in
ret
xor
gs
shlb
dec
mov
or
out
jecxz
pop
lahf
orb
movsl
daa
inc
pop
jns
shll
push
adcb
divb
out
cmp
popa
xchg
mov
add
add
and
outsb
inc
aad
loopne
sub
popa
add
cmp
push
add
pusha
push
mov
sarb
adc
mov
push
icebp
sbb
inc
jo
cmc
test
les
mov
xchg
inc
jmp
ret
push
call
inc
or
sti
cmpsl
ret
add
xchg
push
movsl
mov
xchg
push
shll
ret
xor
or
int3
adc
and
xorb
pop
sbbb
cmp
cwtl
mov
jmp
test
pushf
lea
mov
mov
or
fsubrs
dec
ja,pn
inc
pusha
xchg
fwait
dec
popa
and
in
cmp
mov
mov
stc
xchg
xorb
adc
nop
idivl
sbbl
dec
adcb
and
push
cwtl
arpl
mov
ret
nop
iret
add
or
mov
divl
inc
xor
and
mov
out
mov
das
cmpb
sub
push
mov
jle
or
cmpsl
imul
adc
test
mov
inc
cmp
jne
sub
cmp
js
ret
mov
mov
inc
nop
lds
and
inc
fadd
adc
sub
add
mov
or
stc
popa
dec
enter
mov
or
inc
sbb
xor
ret
jo
mov
rorl
popa
and
push
xchg
jb
or
dec
add
fs
xchg
loopne
and
sub
dec
add
jne
dec
adc
or
inc
mov
add
popf
push
jne
enter
dec
add
and
jns
add
dec
jge
dec
sbb
add
mov
nop
mov
add
sbb
enter
fsubrs
dec
add
add
push
mov
inc
mov
adc
lret
push
and
adc
xorb
adc
push
mov
sub
rcrl
mov
aas
add
mov
push
pop
out
or
inc
ds
xchg
mov
dec
sbb
xor
pusha
pop
lcall
pop
pop
adc
mov
adc
xor
inc
adc
es
dec
shrl
add
and
scas
add
cmpsl
movsl
adc
loopne
add
inc
mov
sbb
out
mov
add
add
sbb
or
fs
addr16
addb
or
sub
pop
cmc
leave
jo
dec
clc
aas
in
pushf
inc
cmp
scas
add
push
inc
fsubrs
cmp
mov
adc
test
stos
mov
add
push
shlb
inc
add
sbb
jae
mov
inc
lret
aaa
daa
mov
add
and
xor
mov
gs
cli
xchg
fistl
lock
clc
xchg
mov
iret
es
aam
scas
dec
add
push
and
addr16
adc
cmp
add
cmpsl
xchg
add
imul
or
fs
add
repnz
sub
xor
cmpsb
dec
mov
add
mov
and
loope
xchg
and
pop
xchg
ret
arpl
xchg
jg
scas
mov
xor
or
mov
test
rol
pop
pop
sbb
std
sbb
pop
add
nop
add
xchg
add
or
mov
das
out
bound
cmp
add
pusha
dec
xchg
fildl
fsubrs
pop
sub
in
push
sub
fadds
mov
cmc
lahf
sbb
lret
fs
sbb
sbb
enter
arpl
pop
es
mov
mov
lock
mov
push
into
adc
popa
adc
lods
test
add
sarb
xchg
jp
mov
inc
out
push
push
mov
push
jo
cmpb
cltd
fidivl
adc
and
cmp
mov
xchg
xor
xchg
out
push
add
add
sub
or
pop
inc
test
ret
jno
sub
jl
dec
outsb
mov
and
xor
into
lcall
ss
push
rcrb
cmpsl
mov
lcall
mov
andb
mov
out
xchg
cmp
push
popf
mov
inc
arpl
test
cmp
je
or
dec
mov
repz
mov
and
cmp
inc
mov
xchg
sub
cmpsl
movsl
sbb
pop
ss
movsb
mov
mov
sbb
inc
dec
push
cmp
jg
punpckhwd
sbb
xchg
out
xchg
loopne
lret
jns
rolb
loopne
mov
jbe
fsubrs
and
arpl
iret
xchg
shlb
out
sbb
add
jb
push
ljmp
sub
adc
aas
adc
call
repnz
fwait
pop
cmp
cmc
inc
insl
pop
mov
cmp
iret
movsb
pop
push
test
lea
dec
cmp
inc
arpl
pop
sbb
jmp
daa
shll
dec
add
lret
ret
pop
shrb
add
mov
adc
faddl
out
fidivs
sbb
orl
dec
mov
dec
loope
inc
daa
sbb
addl
scas
and
cwtl
add
les
sbb
and
fld
rorl
and
cmp
stos
push
out
dec
stos
repnz
push
push
sub
mov
add
ss
mov
outsb
push
test
mov
sbb
xor
add
shl
aas
stos
ret
gs
popf
add
and
sbb
pop
ja
and
mov
pop
jns
movsl
push
add
xchg
jnp
push
sub
stos
test
pop
inc
adc
push
mov
xlat
rcll
cmp
push
pop
ja
cmp
add
mov
add
and
or
sbb
mov
sub
stos
inc
or
jnp
adc
xchg
scas
add
inc
sbb
push
lods
jle
dec
push
rolb
clc
mov
je
cmpl
add
in
in
mov
sbb
roll
mov
push
mov
faddl
mov
jns
ret
add
loop
in
in
clc
imul
dec
lcall
sub
adc
insl
xor
sub
adc
insl
xchg
orl
mov
or
and
out
inc
or
in
lret
lahf
dec
mov
aaa
or
arpl
stc
leave
add
orl
mov
rclb
pusha
jnp
stc
or
rcrb
adc
mov
push
cmpsb
dec
aam
iret
insl
stos
test
cmp
cwtl
dec
cmp
jl
das
popa
cmpsl
gs
shll
or
push
insb
mov
cmpsl
ljmp
mov
dec
sbb
cs
xchg
lret
adc
push
insb
pop
dec
cmp
dec
stc
fs
jg
fcmovne
mov
enter
js
scas
inc
mov
ret
enter
adc
iret
jae
hlt
dec
jecxz
data16
lret
dec
and
and
sbb
bound
pop
clc
mov
adc
add
enter
dec
inc
in
jne
outsb
in
sbb
dec
rolb
aad
daa
mov
lahf
adc
dec
mov
xchg
push
scas
sbb
sbb
addb
cmp
push
mov
mov
and
out
dec
stos
jo
test
mov
mov
adc
popa
xor
mov
das
movsb
sbb
dec
iret
ret
jae
jl
prefetch
inc
xlat
xchg
sub
lock
push
or
inc
fwait
xchg
dec
sbb
int
jg
je
jo
cmp
xor
pusha
mov
ret
jns
popa
testl
mov
cmp
aaa
stc
sbb
aas
call
push
js
cmpsl
stos
fmull
and
test
jbe
imul
and
inc
orb
pop
dec
xchg
mov
xor
test
imul
mov
fsts
pop
fadds
pop
addb
test
jecxz
mov
push
gs
imul
bts
and
lods
mov
inc
sbb
mov
and
cmpsl
xlat
popf
daa
dec
jl
push
lds
dec
jmp
dec
insl
add
je
push
sahf
mov
cmpb
inc
fcoms
pop
mov
mov
mov
mov
jge
fstpt
arpl
and
js
pop
pusha
popf
movsl
jne
sbb
adcl
outsb
sub
xchg
add
addl
jno
sub
out
pop
cmp
pop
mov
adc
addb
insl
imul
adc
mov
jne
dec
xor
mov
or
fwait
jno
mov
and
and
xor
in
push
movsl
cmpxchg
shll
aad
push
mov
jo
popw
mov
test
popf
sub
xor
sahf
cmc
cmp
push
push
inc
inc
xchg
test
dec
push
lcall
xor
rcrb
lock
push
mov
movsb
push
and
stos
mov
in
pusha
xchg
outsl
pop
dec
push
stc
mov
cld
mov
add
cmp
add
mov
or
add
mov
cmp
lcall
jo
mov
je
adc
cmp
jo
ss
mov
xor
test
or
rcrl
pop
and
or
ja
es
pop
fsubrs
mov
lock
add
fldt
inc
add
rolb
test
inc
lcall
sbb
fs
pop
int3
hlt
inc
mov
cmp
fwait
push
in
or
outsb
jle
fwait
push
addb
stos
pop
hlt
pop
movsb
pop
add
mov
lock
cwtl
add
dec
in
aaa
mov
scas
das
adc
pop
sub
in
mov
lds
push
lcall
mov
dec
popa
push
int3
or
add
loop,pt
inc
xor
inc
xchg
dec
sub
fstpl
arpl
pop
js
or
pushf
xchg
or
mov
jecxz
nop
xchg
jge
stos
jbe
mov
cmp
or
mov
clc
into
inc
les
dec
cmp
push
stos
dec
fisubs
push
dec
jb
test
pop
add
cwtl
loope
stos
add
mov
daa
adc
adc
bnd
or
rcr
push
cmp
mov
push
shll
sub
sbb
xchg
push
xlat
loopne
insl
mov
push
push
imul
lock
xadd
or
gs
hlt
sbb
pop
jae
adcb
icebp
xchg
jno
mov
or
fidivl
inc
stc
dec
cli
adc
pop
les
adcl
mov
int
push
fildl
add
ds
inc
add
pushf
pop
ret
add
sbb
sbb
fstl
inc
jo
or
psadbw
inc
push
dec
leave
test
fildll
rclb
aam
pop
pop
jne
xchg
cli
and
mov
push
pop
xchg
cmp
mov
std
inc
cmp
add
iret
js
stos
es
dec
push
cmp
fs
or
aad
outsl
add
add
xchg
push
aaa
push
ds
xchg
nop
cmp
in
fs
cwtl
nop
push
cmp
fiaddl
cmpsl
rcll
xor
mov
xchg
add
pop
test
dec
push
bound
push
push
inc
inc
sarb
lock
and
pop
mov
pushl
jae
test
and
jne
mov
cmp
js
lret
call
loop
loopne
mov
mov
repz
add
mov
jnp
mov
xorl
adc
cs
clc
pop
sbb
jmp
mulb
call
ret
jp
ficomps
aam
jbe
test
and
mov
inc
shl
push
cmp
jne
ljmp
dec
clc
out
mov
xchg
cmp
or
xchg
jo
ret
test
xlat
movl
sbb
jge
inc
mov
insl
rcrl
inc
jl
inc
adcl
icebp
addl
mov
push
adc
mov
inc
pop
lds
or
cwtl
fcomps
xor
inc
cli
adc
stos
std
mov
std
clc
imul
push
mov
mov
mov
or
mov
orl
jno
mov
fs
mov
loope
or
lock
mov
or
jmp
adc
mov
and
mov
jl
ss
sbb
or
ja
ret
iret
mul
xchg
add
test
mov
push
push
lock
jp
push
fwait
call
inc
hlt
inc
jo
sbb
ret
in
ds
xchg
insl
andb
add
adc
mov
hlt
ror
xor
pop
pop
inc
fldpi
sub
cmp
rolb
pop
pusha
daa
int3
mov
add
lret
mov
test
inc
push
inc
lcall
pusha
push
loope
add
popl
lahf
xorl
cmp
sbb
push
jge
inc
jecxz
mov
cmc
xchg
or
dec
dec
stos
outsb
fwait
test
pop
jle
or
es
ret
lcall
out
mov
test
cmpsl
popa
sarl
cltd
pop
ss
sbb
inc
fwait
cmp
popa
mov
or
ret
mov
lcall
sub
push
push
adc
mov
xchg
jb
test
mov
jnp
cli
js
adc
arpl
dec
es
fldt
sahf
mov
jg
dec
hlt
mov
jae
in
inc
dec
jne
int
lods
xor
int3
mov
sbb
ljmp
loope
mov
in
dec
in
add
sbb
ret
xor
js
ret
scas
stos
push
mov
test
add
or
out
push
mov
xchg
add
leave
fidivs
pop
mov
cli
push
addl
rorl
dec
mov
movsb
jle
sbb
loope
rcrl
push
fcmovnu
mov
iret
cmp
mov
dec
lret
sbb
lret
jo
push
jge
jl
sbb
dec
pop
lcall
pop
pop
cmp
or
xor
fnstenv
cmp
ret
add
movb
mov
loope
ja
test
ret
das
bnd
mov
mov
js
add
out
idivb
xchg
dec
andl
jb
mov
push
addr16
jo
es
fwait
rolb
icebp
jb
adcl
out
js
push
scas
xchg
imul
push
int3
subb
stos
xor
or
incl
jo
add
es
lock
pop
pop
xchg
scas
dec
in
sbb
xchg
xchg
andb
and
cs
adc
cmp
inc
xchg
adc
enter
adc
and
icebp
hlt
push
push
or
mov
out
or
cltd
push
cmp
mov
cmp
out
push
sbb
popa
xor
xlat
xor
push
fs
sbb
mov
lock
or
movsl
jmp
fsubrs
dec
or
inc
js
or
ret
dec
std
pop
popl
push
and
nop
xchg
inc
inc
outsl
les
adc
pop
mov
xchg
push
cwtl
in
mov
sahf
push
add
rcl
test
adc
pusha
sbb
pop
pop
call
jmp
inc
sub
aam
mov
pop
dec
pop
lea
push
rolb
push
mov
out
or
cmp
dec
js
mov
push
setge
ret
hlt
cmc
mov
xchg
sub
scas
add
jns
dec
shlb
xor
xor
push
or
mov
repnz
sub
cmp
stos
add
leave
inc
rclb
dec
fstpt
sbb
mov
jno
loope
cmpb
pusha
jo
ljmp
repnz
xor
add
mov
dec
mov
mov
pop
inc
pop
scas
push
in
lcall
cmc
ret
cmpsl
or
rol
add
xor
sub
lret
or
mov
jno
add
ret
dec
cs
inc
add
loope
sub
xchg
pop
cmp
mov
and
adc
pusha
dec
xchg
jb
or
bound
jo
sbb
test
lods
or
adc
push
clts
dec
inc
mov
outsl
push
inc
sub
mov
jecxz
jbe
subl
pop
pop
lods
jmp
push
jmp
out
jg
daa
push
push
loope
aaa
jmp
add
pop
sub
add
clc
xchg
or
xor
aad
jo
pop
scas
arpl
dec
pop
mov
or
clc
sbb
xchg
pop
xor
cs
out
clc
cmp
mov
push
push
xlat
cmp
out
or
pop
repz
aaa
mov
xchg
cli
rorl
out
pop
in
pop
sub
adc
imul
paddd
dec
add
push
sub
mov
jle
shlb
pop
fwait
test
mov
sbb
adc
aas
pop
jno
mov
mov
cmp
jp
and
pushf
lock
cmpsl
push
jle
jne
add
mov
push
xchg
jo
aas
filds
in
push
pop
jo
mov
jo
ret
inc
add
add
add
push
pop
jb
fdivs
sub
lods
pop
inc
movsl
lret
sbb
movsl
sub
mov
cld
cmp
dec
xor
push
pusha
add
insb
mov
adc
sarb
mov
dec
ja
add
adc
pop
adc
xchg
cmc
push
es
or
cmp
test
sub
flds
test
mov
dec
cmp
mov
mov
push
lret
ja
js
push
cmp
mov
pop
inc
pusha
and
or
mov
mov
jbe
mov
inc
in
in
out
cld
mov
js
adc
cltd
lcall
into
jo
call
adc
ror
out
inc
dec
push
or
iret
sub
dec
imul
cmp
adc
int3
test
jle
mov
jecxz
push
movsl
ret
imul
mov
dec
lock
mov
adc
pop
shl
and
jmp
xor
pop
pop
inc
pop
add
xor
bound
das
lret
aad
mov
sar
sub
imulb
lea
pop
jecxz
mov
xor
aas
mov
or
cmp
clc
lods
xchg
push
fsubs
pop
add
stc
and
add
mov
shrl
pop
aaa
incb
ljmp
std
lock
jp
mov
xor
lcall
lcall
push
ja
mov
mov
mov
shlb
add
pop
lret
add
jp
popf
aas
orb
filds
data16
inc
inc
jp
popa
loop
add
ret
loop
mov
iret
lret
xchg
sti
lock
aaa
roll
or
adc
or
xor
lock
pushf
popa
fxch
ljmp
jecxz
scas
mov
cltd
push
push
mov
lods
addr16
add
xchg
sbb
ficoml
scas
or
das
outsl
mov
push
pusha
stos
jl
mov
movsb
push
or
inc
cmpl
mov
cmp
dec
or
mov
aaa
scas
or
cld
in
jo
or
shlb
dec
add
pop
rorb
inc
xchg
and
sbb
dec
loop
push
enter
and
cwtl
dec
jmp
outsl
leave
data16
push
cltd
cmp
adc
adc
and
mov
xchg
push
sub
mov
addb
adc
es
dec
adc
addb
cmp
cmpb
cmp
pusha
xchg
scas
dec
xor
dec
push
clc
int3
mov
xchg
or
jnp
pop
inc
cs
jb
pop
daa
repz
xchg
dec
addr16
push
mov
mov
push
xor
cmp
or
scas
inc
dec
xchg
aam
jns
and
add
out
cli
ja
jo
add
or
cld
inc
fbstp
out
lahf
mov
popf
jb
sub
pop
lret
das
jae
mov
imul
call
xor
pop
sub
std
inc
cmp
arpl
xor
or
stos
dec
test
cmp
xor
pop
andl
push
sub
cmc
push
adc
lock
sbb
and
pop
sub
adc
pop
cmpl
fs
out
inc
repnz
mov
and
xchg
xor
jae
xchg
hlt
adc
into
dec
jo
inc
pusha
cmp
xchg
mov
and
adc
nop
enter
fldenv
inc
add
adc
xchg
mov
daa
lock
add
or
imul
dec
adc
dec
loopne
cmp
das
and
adc
or
and
fbstp
or
pop
fwait
or
add
cmp
pop
aas
pop
jge
out
sahf
sbb
mov
sbb
cmp
aam
cltd
lret
jae
adc
push
adc
fwait
aaa
fists
xor
lret
filds
pop
movsb
rcrl
dec
notl
ds
sbb
cmp
sbb
movsl
fstps
cli
movsb
adc
add
outsb
jmp
js
cmpsl
and
xchg
mov
rcrl
sbb
loop
sub
dec
sbb
in
fldenv
lods
inc
dec
lret
dec
sbb
outsb
xorb
js
adc
insl
cmp
shr
and
loop
fisubl
insb
pop
cli
daa
pop
inc
rolb
jg
rclb
dec
inc
and
or
mov
addr16
int
adc
rclb
and
jmp
lahf
dec
dec
mov
ja
imul
sub
mov
rol
mov
jmp
add
inc
cmpsb
or
mov
push
lods
test
xor
xor
dec
popf
dec
pop
inc
sbb
sti
nop
sub
fsub
addb
inc
iret
sbb
jo
push
leave
mov
push
out
push
and
sbb
mov
in
mov
pop
loope
add
xor
je
icebp
jnp
imul
fwait
mov
stos
mov
jp
aam
sbb
loope
add
pusha
add
inc
nop
fsub
rorb
pop
xor
xchg
mov
pop
enter
dec
lret
js
shll
sbb
movl
pusha
inc
adc
popa
dec
pop
inc
and
adc
adc
or
and
sarl
cmp
test
and
jmp
dec
imull
loopne
adc
and
xor
push
inc
repnz
movq
cmp
out
movsl
addl
les
jno
dec
mov
mov
orb
outsb
and
std
and
pop
push
xor
push
push
cwtl
outsb
push
imul
imul
insb
sarl
cmpsl
pusha
pop
add
sbb
mov
adc
xchg
add
aaa
movsb
jl
imul
sub
ficoms
push
in
rorl
inc
das
sbb
rorl
xchg
je
and
adc
out
dec
sub
stos
sbb
das
and
pop
add
pushf
int3
addl
dec
jno
ret
push
xor
jl
add
mov
int3
add
popf
icebp
pop
cwtl
leave
rolb
test
or
lods
adc
shrl
add
pop
jb
leave
or
mov
xchg
scas
ds
add
sub
xlat
sbb
nop
add
push
push
mov
mov
insl
push
imul
out
out
cmp
sbb
cmp
jecxz
mov
adc
inc
push
lock
pop
dec
in
loope
subb
xor
bound
jmp
jne
test
stos
adc
pop
mov
lcall
cmp
es
fistl
aas
inc
adc
add
add
xchg
rolb
loope
mov
ljmp
dec
jmp
inc
sub
ss
xor
mov
fs
bound
arpl
fsubrs
mov
cmpps
sub
mov
clc
mov
push
jecxz
xchg
xchg
adcb
xor
cltd
ret
and
divl
stos
iret
outsb
decl
daa
movsb
or
sub
pusha
cltd
push
jmp
adc
pop
das
es
insl
int
xchg
add
inc
sbb
push
loopne
adc
push
push
xor
dec
je
add
sub
jae
dec
ret
add
dec
lahf
bswap
sbb
jp
inc
adc
or
pushf
or
jge
adc
or
pop
and
inc
insb
cmp
cmovp
push
popa
adc
and
test
movsl
sub
sbb
in
clc
mov
scas
cmpsl
arpl
orl
repz
lahf
push
or
mov
xor
mov
repnz
sti
adc
jmp
fcompl
roll
cmp
lds
shll
mov
stc
lret
dec
mov
mov
icebp
lret
mov
push
and
shlb
jo
cmpsl
clc
push
push
das
stos
ret
push
or
jo
xchg
mov
fs
mov
fldl
adc
popf
enter
or
dec
lret
cmp
inc
mov
test
adc
adcb
hlt
inc
cmp
loope
inc
add
loope
stos
popa
lret
push
mov
movsb
iret
jge
xlat
dec
add
test
add
pop
push
test
cmp
stos
and
mov
adc
jbe
out
add
out
mov
sub
pusha
sbb
or
add
dec
out
mov
xchg
xchg
jae
sub
out
push
outsb
jbe
mov
nop
icebp
adc
and
fs
out
cmp
popf
add
sbb
pusha
outsl
cmpsb
pop
mov
mov
dec
das
or
push
dec
sub
stos
pop
jl
push
mov
inc
and
cs
lcall
or
xor
inc
pop
sbb
lcall
mov
or
or
xor
lcall
sahf
cli
shlb
pop
add
push
add
test
sub
rcl
loop
sbb
out
sti
aam
sbb
ret
cmp
pop
inc
and
add
jmp
int
mov
les
repz
cmp
in
sbbl
push
sbb
xor
push
xchg
insb
popa
or
add
or
mov
test
gs
scas
in
jl
aad
pop
icebp
inc
and
xor
sub
call
cwtl
rcll
mov
mov
mov
aad
les
xchg
addl
pushf
or
pop
hlt
leave
mov
adc
decl
cmp
push
sbb
inc
sbb
adc
mov
adc
sbb
mov
sub
cmp
in
rol
subb
pop
add
mov
rorl
cmp
in
ret
insl
mov
aam
xchg
mov
mov
xchg
loop
jecxz
push
cwtl
js
js
dec
pusha
or
adc
dec
xchg
das
add
mov
sbbb
incl
gs
cld
xor
inc
push
stos
add
mov
pop
bound
push
dec
jno
adc
sub
add
mov
test
lcall
hlt
jo
push
aas
stos
pusha
dec
sbb
jge
cmp
ret
addl
js
addr16
dec
test
push
lods
mov
and
mov
sub
nop
dec
xor
les
js
std
loopne
rorb
sub
inc
add
add
mov
adc
xchg
xor
jno
mov
mov
mov
nop
and
cs
jge
aam
cmpsl
lret
sub
dec
fbstp
add
xchg
negl
adc
fnstsw
lock
add
movsl
cmp
testb
loope
adc
cmp
dec
sarl
adc
loope
xor
cli
sub
out
lods
inc
and
subb
call
daa
andl
dec
popa
lods
scas
sbb
add
and
xchg
jae
sub
ss
mov
scas
push
push
push
arpl
ja
loopne
lcall
adc
repz
int
jno
adc
imul
adc
aas
cmovp
jmp
add
xlat
or
sbb
or
xchg
aaa
mov
pop
pop
pop
lods
inc
xchg
vpshad
lsl
ret
jo
sbb
inc
popf
imul
cmp
int3
ja
fstps
lods
leave
shlb
punpcklwd
or
push
and
nop
xchg
mov
mov
pop
push
cmp
in
xor
movsl
and
aam
add
and
xchg
mov
jecxz
jns
adc
push
dec
pop
mov
mov
out
and
imul
cmp
cmpsl
fwait
adc
mov
imul
es
imul
cli
push
mov
jo
sbb
or
and
or
fdivs
div
sbb
lret
push
sub
push
pop
add
ljmp
in
ret
cltd
sbb
in
mov
aam
add
or
mov
sarl
dec
daa
inc
jmp
ror
or
xchg
addr16
sub
inc
inc
xlat
filds
or
mov
jp
xchg
and
push
or
lcall
lods
and
or
pusha
and
pop
dec
test
cmp
xor
sub
mov
and
dec
dec
adc
cmc
dec
and
mov
ret
rcll
call
sbb
xchg
pop
push
sbb
pop
jae
adcb
daa
jns
shlb
xor
push
test
ret
test
rorl
and
mov
je
and
add
dec
xor
add
ror
add
xor
add
ficoms
add
cmp
loopne
movsl
mov
shr
xchg
mov
add
leave
pop
or
arpl
jne
sar
popf
add
sub
mov
sbb
lock
add
shrb
pop
sarb
call
inc
mov
add
aaa
add
daa
add
popl
rclb
mov
aam
xor
sarl
xor
dec
jmp
pop
inc
stos
inc
inc
xchg
sbb
sub
adc
push
les
pop
sub
lcall
cmp
fldl
outsl
inc
test
mov
mov
test
aas
or
rcrl
mov
adc
cmpsl
mov
ljmp
sub
push
rol
adc
clc
cs
mov
push
lds
aas
test
jmp
cmpsl
iret
jo
or
pop
loope
popa
icebp
or
sub
mov
jmp
inc
loope
in
push
xlat
dec
cmp
cwtl
mov
adc
pusha
mov
mov
jne
pop
nop
ret
scas
mov
cmp
dec
pusha
dec
or
ljmp
loope
shr
rcr
fdivrs
stos
dec
mov
cmp
dec
inc
dec
iret
cmc
jo
add
inc
mov
dec
int
loop
movsl
xor
int3
aas
and
out
fsubl
sbb
gs
jg
or
test
xchg
push
jmp
xchg
cs
test
jne
mov
hlt
dec
xchg
mov
mov
or
push
or
cld
adc
shll
adc
push
ja
mov
inc
aam
aad
mov
or
jb
mov
cmp
lret
jbe
test
adc
mov
mov
or
push
mov
nop
lea
xchg
inc
jle
dec
or
cmp
xor
icebp
pop
pushf
sbb
rcrl
and
adc
loopne
pusha
das
gs
mov
push
das
loope
cli
sub
xor
jmp
xor
mov
lods
inc
xlat
mov
xchg
xchg
sub
jnp
pop
mov
xchg
imul
xchg
inc
enter
xchg
pusha
add
ffree
mov
gs
mov
xchg
pop
clc
pop
repnz
pushf
ret
pusha
mov
mov
clc
dec
aas
mov
add
dec
adc
adcl
test
jns
adc
mov
cmp
pop
adc
cmpsb
mov
orl
outsb
sti
andb
out
push
cmc
mov
loopne
lea
mov
jo
out
pop
data16
dec
pusha
hlt
inc
inc
cmp
xchg
pop
mov
jmp
xlat
and
not
fwait
orl
sysenter
iret
xchg
addl
outsb
lcall
xchg
imul
divb
dec
cmp
and
adc
in
ljmp
ds
out
pop
mov
add
or
out
sbb
icebp
and
adc
imul
mov
roll
test
pushf
add
ret
js
fs
movb
dec
xchg
xor
sbb
pop
mov
jnp
sbb
aad
js
adc
inc
push
ret
adc
add
imul
push
pop
call
cwtl
inc
cmp
lret
or
sti
mov
push
push
stos
mov
adc
and
es
jmp
and
and
xchg
xchg
dec
stc
std
push
cmp
addb
inc
pop
xchg
add
add
rcl
sbb
or
movsb
or
scas
in
pop
inc
push
adc
outsl
pop
adcb
pop
or
push
jmp
iret
shrb
arpl
push
fmuls
leave
mov
dec
lret
push
sub
sbb
xchg
dec
adc
ss
mov
or
xor
add
add
sub
dec
pop
sar
xchg
mov
cmp
js
test
mov
lcall
jo
push
xchg
or
dec
cmc
or
xchg
add
inc
mov
sarb
arpl
gs
adc
les
dec
adc
jnp
arpl
cmpsb
test
add
add
mov
add
ffree
mov
not
sbb
add
xor
test
push
lods
dec
cli
mov
mov
cmp
and
sub
iret
adc
outsb
ja
push
sarl
loop
cmp
mov
ret
mov
jb
ret
adc
ss
mov
stos
dec
push
jmp
roll
dec
popf
sbb
lret
out
xor
xor
push
lds
adc
sub
lret
pop
xchg
inc
stos
pop
mov
and
cmp
imul
xor
dec
adc
pop
insb
filds
pop
add
cmp
inc
xor
in
xchg
scas
mov
jns
jmp
dec
rcl
inc
fidivrs
push
popf
xor
or
add
xchg
dec
mov
bound
inc
push
add
loopne
inc
sbb
xor
in
popa
dec
jb
gs
pop
mov
or
fidivl
push
adc
jno
dec
or
add
sub
dec
sbb
sub
dec
ret
fwait
jl
mov
nop
xchg
add
adc
imul
es
aad
mov
test
or
mov
jl
push
or
push
sbb
iret
addb
add
inc
xor
call
adc
inc
cltd
pusha
inc
scas
test
data16
add
icebp
sub
pop
jmp
adc
inc
inc
inc
mov
add
aaa
dec
outsl
xchg
outsb
and
das
inc
ffreep
aad
les
test
adc
mov
mov
add
mov
xchg
fidivrs
cmp
cli
pushf
mov
adc
add
pop
jg
inc
pop
pop
or
jbe
mov
mov
movsl
mov
dec
adc
es
or
cmp
add
mov
pop
xor
or
jmp
arpl
mov
sbb
jo
push
cmpsl
icebp
cmp
inc
add
pop
dec
les
loopne
xchg
add
push
ss
outsb
add
xchg
mov
mov
paddusb
cwtl
inc
call
jge
lods
nop
shl
push
cmp
push
pop
mov
xchg
jae
xchg
mov
and
in
les
scas
jnp
test
jae
sub
bound
jge
jmp
inc
mov
das
js
mov
sub
inc
rclb
jb
or
jmp
mov
lcall
in
lahf
xchg
xchg
add
jno
dec
lods
sbb
sar
dec
jbe
sarb
clc
loopne
shlb
xchg
insl
push
addl
mov
je
mov
add
rol
or
xor
daa
mov
xchg
icebp
adc
in
outsb
push
out
repz
nop
mov
fadds
enter
in
add
sub
xchg
cmp
xor
hlt
inc
sbb
mov
loope
xor
mov
sbb
rolb
sti
or
mull
mov
or
fcmovb
push
lret
rolb
insb
popa
dec
icebp
fdivrl
cmp
lods
add
push
jbe
cmp
push
ja
xor
idivl
push
cltd
cmp
ja
xchg
cs
add
call
js
insl
insl
adc
mov
dec
repz
cmc
in
imul
dec
pop
popa
sbb
sbb
push
xchg
pop
mov
test
enter
insb
push
in
and
shll
xchg
adc
lock
cmp
xchg
xchg
or
outsl
jmp
test
bt
xchg
mov
dec
imulb
cmp
jl
faddl
cmp
lret
fadds
or
pop
push
ret
push
bound
test
xor
out
mov
lock
dec
lret
push
dec
dec
add
adc
push
push
dec
movb
rcrl
add
cmpl
mov
mov
sbb
pop
and
sub
and
xchg
mov
adc
jne
scas
pop
popl
int3
iret
mov
popa
sbb
or
pop
std
and
xor
roll
sbb
lea
loopne
clc
call
sub
sub
frstor
loop
push
pop
icebp
dec
adc
sbb
frstor
in
adc
movsb
adcl
icebp
sbb
movsb
jecxz
cld
pop
mov
xlat
and
cmp
lcall
mov
roll
push
jmp
out
int
add
and
sub
mov
and
jbe
fldl
adc
jge
inc
repz
pop
aas
out
push
push
xchg
inc
in
push
test
mov
add
pop
mov
scas
outsl
xlat
mov
mov
add
sbb
adcl
lret
sub
dec
sub
lods
mov
lock
lretw
dec
movsb
pop
jno
scas
stc
pop
subl
pop
fidivrl
test
fisubs
fldt
push
mov
jae
pop
push
mov
gs
and
pop
dec
test
test
bound
xchg
scas
ret
adc
xchg
jmp
sbb
enter
dec
stos
add
fstps
fwait
mov
mov
stos
mov
inc
dec
call
nop
xor
adcb
adc
test
pop
mov
mov
cmp
xchg
addb
or
add
cli
dec
add
cmp
add
jmp
or
mov
inc
sub
push
add
sub
xorl
jmp
aas
sub
sub
adc
mov
pop
xchg
loop
test
adc
dec
es
or
movsl
or
dec
ret
inc
inc
xor
mov
dec
cmpsl
mov
movsl
add
cs
mov
test
adc
mov
inc
shll
push
push
sbb
notb
rorb
pop
lea
dec
int
cmp
dec
jae
ljmp
scas
arpl
jno
in
test
push
and
inc
push
insl
jecxz
cmp
scas
in
mov
loopne
mov
dec
push
jns
or
shll
push
cltd
cmp
popa
imul
lret
or
inc
and
fisttpl
add
dec
sarl
sbb
mov
push
ss
clc
sub
icebp
inc
inc
jle
leave
flds
aaa
popf
call
ss
dec
cmp
std
icebp
add
adc
daa
rcrl
shlb
leave
fistl
addr16
adc
pop
sub
inc
mov
enter
ss
and
loopne
enter
sahf
dec
add
das
test
imul
sub
and
mov
xchg
aam
nop
mov
insl
add
mov
mov
stos
jge
outsl
pusha
jnp
cwtl
outsb
pop
fsubs
add
je
fiaddl
das
imul
jg
lret
sbb
ja
inc
rcl
test
sub
xor
mov
jbe
mov
insl
xchg
mov
sub
or
add
inc
mov
les
loope
clc
inc
aaa
sbb
cmp
push
cmc
ret
mov
outsb
std
sbb
xchg
movsb
sbb
push
and
and
adcb
mov
and
xchg
mov
push
mov
popa
enter
movsl
jmp
jge
jmp
int
je
adc
inc
pusha
vmaskmovdqu
shl
ja
xchg
cmpsl
mov
orl
popa
stos
jle
cmp
gs
std
and
mov
push
rcrb
dec
addr16
pop
mov
xorl
inc
mov
mov
aad
ljmp
jae
xchg
gs
in
iret
mov
push
inc
insb
sahf
inc
add
mov
inc
in
aad
adc
push
popa
xor
xor
sbb
mov
gs
mov
add
out
test
sub
shll
aas
into
repz
jo
mov
pop
cmp
gs
mov
or
aaa
outsl
inc
rcl
nop
mov
test
mov
cmpsb
inc
adc
pop
cltd
pop
or
sbb
inc
push
pop
add
in
rorl
mov
test
inc
and
testb
test
fldl
popa
sub
jge
inc
nop
or
or
ss
sbb
and
add
push
call
jle
sbb
jo
mov
xchg
aaa
mov
repnz
rcrb
fsts
lock
pop
add
pop
js
into
les
jo
dec
aam
adcl
cmp
lock
mov
cmp
or
adc
lret
cmp
xor
adc
cwtl
je
mov
js
dec
inc
arpl
push
mov
rolb
loop
add
add
sub
insl
jo
imul
mov
movsbl
pop
arpl
mov
mov
cmp
mov
inc
insl
mov
mov
daa
pop
lea
loopne
sbb
orl
xchg
insl
ljmp
push
mov
inc
sbb
pop
jl
dec
rcll
inc
dec
push
arpl
icebp
push
and
out
in
sub
mov
outsl
jo
sbbl
xchg
fwait
push
mov
dec
mov
pusha
sub
push
testb
inc
xchg
sub
iret
mov
jl
sub
cmc
jmp
fstpl
jmp
ret
shll
dec
ss
sarb
insb
inc
inc
inc
insl
xchg
push
adc
pop
fwait
shlb
cmc
adc
or
add
imul
js
cwtl
pushf
pushf
cmc
sbb
push
adc
sbb
je
dec
xchg
addl
mov
dec
call
push
divb
scas
mov
xor
or
js
jne
iret
in
mov
xchg
js
mov
cld
push
maxps
popa
aaa
cmpsl
dec
add
lods
pop
mov
push
or
test
jl
cmp
sub
mov
dec
ljmp
sbb
shlb
add
cmpsl
and
pop
or
add
cmpsl
nop
hlt
imul
inc
push
inc
dec
mov
xor
xchg
jo
mov
cmp
outsl
inc
inc
sbb
and
ja
push
jge
stos
fisubrl
cli
pushf
add
adc
sar
mov
test
mov
mov
mov
xchg
loope
scas
pop
movsl
mov
inc
adc
pop
and
xor
or
mov
jg
dec
arpl
sbb
rcll
in
push
outsb
dec
adc
nop
loope
outsl
pop
mov
cmpsl
sti
xchg
mov
jp
add
mov
push
lahf
sbb
fwait
shlb
or
rol
or
fcoms
in
add
insb
fistpl
cmp
dec
ret
cwtl
sarl
ret
aas
fcmovbe
mov
test
jb
mov
ja
xor
aas
mov
dec
aaa
adc
inc
adc
sbb
or
test
pop
std
sbb
and
xchg
testl
mov
sbb
push
or
push
fldenv
sub
mov
mov
mov
ret
sub
fdivr
rorb
xchg
mov
push
cmpsb
lods
mov
or
cmp
rcrl
jno
inc
scas
jmp
scas
jge
paddd
inc
cmp
sbb
bound
dec
rcl
lods
mov
dec
mov
xor
push
mov
xor
xchg
imul
inc
dec
ljmp
pop
add
scas
sub
fsub
outsb
mov
loopne
fcmovnbe
stos
clc
bound
mov
mov
add
xchg
insb
xchg
dec
sar
mov
and
sub
mov
shrb
sti
xor
into
mov
jb,pt
jecxz
dec
mov
cmp
and
fstps
push
loop
insb
scas
cmpsl
adc
cltd
sbbl
sbb
mov
add
fnsave
mov
and
pop
enter
pop
pushf
into
adc
pop
xchg
setae
sahf
int3
pop
cmp
rorb
mov
and
jb
jnp
add
in
mov
add
es
dec
cmpsl
mov
jo
jg
pop
mov
dec
cld
xchg
fldt
ds
mov
xchg
aas
mov
xchg
mov
sub
mov
icebp
jmp
add
xor
xor
lea
roll
cmpsb
cs
loopne
or
jecxz,pt
sbb
sub
or
sbb
shll
stos
dec
test
pop
nop
in
cmp
mov
xchg
add
dec
push
dec
fldcw
inc
dec
es
mov
scas
or
sub
sbb
movsb
xor
mov
scas
cmp
push
insl
int
pop
mov
jecxz
add
xchg
movsl
add
mov
insl
xchg
jge
test
inc
push
scas
outsb
cmpsb
mov
divb
lahf
stos
mov
push
lret
xchg
int
push
mov
clc
daa
xlat
gs
xchg
push
into
cmp
outsb
rcl
sub
mov
jb
mov
sarl
cwtl
mov
sbb
or
les
xor
lahf
movsl
add
fiadds
aaa
aaa
sbb
stos
jp
lock
sbb
std
sti
jge
sbb
mov
cld
das
test
cmp
loope
jecxz
je
ljmp
and
mov
mov
fisttps
dec
lret
movsl
pop
and
adc
cmp
xor
cmc
xchg
sub
fisubrl
stos
sub
add
testl
xor
mov
outsb
test
cs
shrb
adc
mov
movsl
adc
jnp
lahf
or
int
cmc
sub
sbb
sbbl
or
mov
adc
pop
adc
inc
outsl
es
mov
cmpsl
and
daa
les
push
push
shll
sti
push
movsb
je
shlb
or
dec
out
pop
and
imul
lock
movsb
or
adc
scas
jg
cltd
andb
sub
mov
popa
gs
mov
mov
push
sub
xchg
rclb
push
or
das
hlt
mov
sub
sub
dec
ret
testl
mov
mov
jbe
mov
jg
xchg
mov
insb
add
andl
loopne
out
or
dec
xor
pop
shlb
or
add
mov
and
xor
into
and
xchg
sti
std
dec
or
int
adc
xchg
sbb
xor
jmp
xchg
inc
in
mov
mov
adc
jmp
add
or
pop
or
pmullw
jne
xor
pusha
int3
add
ret
clc
or
imul
add
sub
arpl
push
push
xor
ret
sbb
lret
loopne
mov
inc
pop
or
mov
push
xlat
mov
fisubs
hlt
sub
addr16
jnp
outsb
jl
mov
pop
pop
push
or
adcb
fstpt
in
and
xchg
imul
sub
clc
xchg
sub
xor
xor
test
adc
aas
push
aaa
sbb
jb
clc
and
xor
mov
mov
ja
push
or
sti
or
mov
mov
sbb
out
push
or
adc
add
jmp
mov
and
aad
or
pop
ds
arpl
or
ret
outsb
and
xchg
sub
xchg
push
lock
push
mov
push
rcrb
test
adc
and
dec
inc
and
mov
out
add
xor
xchg
mov
adc
aam
out
pop
mov
add
sahf
test
lods
xchg
mov
push
and
test
pop
mov
cmc
cmp
add
das
sbbl
test
ret
testl
fsubs
mov
cmpsl
or
jnp
in
xor
jle
sub
dec
dec
mov
dec
push
adc
int3
test
mov
sub
int
sbb
jbe
bound
pop
popf
stc
dec
dec
and
int3
mov
dec
sub
sbb
orb
push
inc
xchg
ljmp
pop
push
negb
jo
inc
iret
nop
sbb
and
push
popf
adc
gs
adc
mov
sub
nop
out
jno
mov
xchg
add
add
cltd
pop
adc
xchg
push
mov
sub
dec
xorl
sub
add
push
inc
imul
inc
inc
cwtl
inc
or
adc
mov
cmp
add
std
add
movsl
jne
movsl
and
add
clc
and
push
ja
loopne
pusha
inc
pop
push
mov
ficomps
mov
mov
dec
je
xor
insl
cmp
pop
xchg
and
or
pusha
mov
lret
cmc
jo
xor
scas
mov
sbb
inc
inc
inc
push
push
movsl
lahf
into
mov
cmp
jns
call
cmp
gs
xchg
mov
jno
aaa
fwait
loope
pop
dec
pop
jbe
jbe
pop
mov
xchg
jo
xchg
cld
rolb
jnp
xor
add
sbb
xchg
fs
leave
jecxz
xchg
sahf
adc
shrl
and
shlb
push
push
pop
inc
outsb
stc
push
cmp
inc
out
aas
lahf
les
sub
xchg
mov
fsubr
scas
mov
sbb
jnp
inc
or
dec
jp
mov
aam
out
jo
mov
pop
inc
inc
into
ja
add
aas
push
inc
jnp
dec
and
aam
cli
xor
je
push
out
js
push
subb
mov
in
mov
mov
jbe
fidivs
out
movsb
fs
sahf
xor
and
fwait
xchg
push
add
repz
mov
adc
add
pop
jae
or
inc
or
gs
lea
cmp
xchg
aas
leave
jge
mov
push
xchg
xchg
xchg
test
sbb
stos
dec
xlat
mov
loope
stos
divb
push
cmpb
int3
fnsave
stos
adc
dec
popf
adc
dec
hlt
loope
pusha
sbb
ss
mov
imul
dec
dec
shlb
pop
andb
adc
dec
xor
movsl
aaa
mov
mov
mov
sbb
or
jno
adc
daa
pop
dec
cmpsl
xor
push
push
lcall
flds
inc
add
pop
adc
daa
xchg
pop
add
push
insl
sbb
int
loop
pop
pop
fmul
sub
inc
aad
les
arpl
fmull
pop
movsb
push
sbb
and
jno
lods
adc
loopne
iret
icebp
sub
insb
mov
ret
add
test
sbb
pop
sbb
dec
xchg
cs
ret
and
inc
mov
bound
lods
movsl
subb
adcb
or
ss
xchg
cmc
dec
dec
es
inc
sub
cmp
adc
andb
inc
or
leave
adcb
lea
jnp
nop
bound
add
orb
mov
sub
adc
inc
or
out
xchg
add
inc
lahf
add
add
mov
dec
add
nop
jne
jnp
jp
addl
jmp
mov
gs
push
sbb
movsb
lret
lods
xor
adc
and
sbb
movsl
adc
dec
or
adc
cltd
pop
cltd
ret
test
out
push
add
je
loopne
or
repz
mov
dec
jnp
add
add
add
and
push
inc
adc
mov
out
rcrb
sub
ss
add
inc
movsb
inc
mov
inc
jg
mov
mov
cltd
rorl
rolb
add
xor
dec
xor
mov
movsb
mov
inc
es
stos
imul
push
lret
xlat
xchg
mov
les
mov
pop
test
push
enter
loope
fcoms
nop
js
movsl
stos
lea
rcrb
gs
jo
leave
sub
pusha
cmp
push
adcb
xor
add
mov
js
into
xchg
xor
and
adc
dec
pusha
xchg
dec
sub
jmp
xchg
mov
mov
cmp
mov
lock
or
cmp
lea
aam
pop
add
std
iret
sub
fcomps
and
shl
adc
rclb
inc
sti
js
xor
xchg
aam
sbb
jno
daa
icebp
inc
aaa
stos
push
sbb
imull
mov
push
andb
lcall
xor
in
sub
pusha
cmp
jmp
inc
push
dec
pop
iret
cmp
push
sub
push
adc
es
cmpb
cmp
jl
lcall
jle,pt
mov
adc
push
push
test
adcb
cmp
stc
xor
sub
mov
cmp
aad
rolb
inc
pusha
and
adc
lods
push
testb
dec
sarl
add
mov
sbb
sbb
scas
sbb
into
adc
popl
mov
pop
fnsave
pop
rol
push
dec
rcl
jnp
and
loope
das
xor
mov
jg
mov
and
sub
cmpsb
jbe
ss
hlt
sbb
adc
aam
mov
dec
pop
or
adc
mov
pop
movsb
imul
add
js
rcrb
lods
xchg
sbb
adcl
data16
dec
and
leave
aaa
dec
push
push
sti
pop
imul
pop
mov
adc
cmpsl
jns
xor
mov
sub
bound
int
call
idivl
ss
cli
pop
xchg
and
push
and
and
testl
popf
or
xor
ret
inc
xor
je
add
fstps
shr
pusha
jno
add
or
enter
paddq
fcmovnb
ss
arpl
mov
mov
push
inc
movsl
bound
lods
push
sbb
and
xchg
sbb
dec
das
mov
xchg
mov
loopne
cmp
fadd
jbe
sbb
fsubrs
cmp
xchg
ss
xchg
lret
outsb
xor
out
mov
sbb
jo
fsts
xor
push
scas
ret
lods
cmp
sub
xor
add
add
push
popa
shlb
mov
dec
dec
sub
jne
adc
gs
or
dec
loopne
dec
inc
iret
lea
dec
inc
cmp
jp
ret
jnp
lret
pop
rol
mov
ret
xorb
int
pop
and
mov
xchg
inc
data16
add
pop
sbb
lahf
insl
bound
mov
jbe
jbe
add
xlat
aas
dec
lods
push
xor
inc
movsl
or
adc
mov
fs
incl
add
femms
movsl
pop
and
sbb
cmp
sub
fcompl
mov
xchg
pop
dec
lods
loope
cmpl
jecxz
je
mov
test
adc
inc
lahf
xchg
push
or
pop
cltd
xchg
or
aas
fnsave
cmpsl
movsl
or
xor
ss
add
arpl
js
and
mov
xchg
adc
cmp
out
dec
addl
xchg
xchg
pop
sbb
mov
xor
jg
loop
add
mov
pop
test
push
insl
lds
cmpsl
add
lods
adcb
mov
clc
imul
xor
xor
dec
out
pop
add
xor
adc
divl
inc
mov
mov
cmp
nop
sub
pop
dec
xchg
pusha
je
cmpsl
cmc
push
lret
in
out
cmpsb
orl
push
shlb
xor
xorb
sbb
aam
in
inc
cmp
and
test
sub
jo
xchg
push
inc
push
mov
lret
sbb
adc
sahf
xorb
cld
int
sub
adc
mov
lea
movl
jmp
xchg
mov
xor
lret
cmp
out
in
sbb
pop
js
lret
cmp
mov
ret
inc
cmpsb
dec
ljmp
ds
xor
or
xor
test
adc
xor
mov
adc
and
fstps
loop
and
cmc
inc
fwait
rol
add
and
movsb
outsl
adcb
mov
mov
lds
xor
inc
sub
popf
mov
lods
inc
push
andb
cmpsl
lret
dec
and
ret
negb
xchg
sub
xor
imul
lods
stc
jne
add
mov
test
or
popf
loopne
cmp
xor
mov
push
imul
rorl
and
add
lret
pop
call
mov
popa
loope
mov
push
jno
adc
and
mov
fdivr
xor
jg
dec
lret
mov
imul
loope
sti
inc
movsl
push
je
out
pop
sbb
jo
addr16
inc
ja
xor
fdivl
and
subb
shrl
mov
pop
loopne
or
loope
jmp
lea
pushf
aas
jle
lahf
lods
movsl
pop
xchg
lret
jb
addb
test
and
mov
cmp
or
mov
inc
sbb
lcall
nop
inc
sbb
mov
xorb
daa
gs
ret
movsb
mov
adc
sarb
jnp
and
lcall
test
testl
mov
jne
ja
mov
dec
iret
js
adc
icebp
adc
push
add
inc
in
imul
mov
clc
aad
pusha
adc
pop
sub
scas
mov
enter
and
ret
or
or
dec
and
xchg
mov
and
incl
pop
rcll
ja
xlat
push
inc
add
out
mov
push
sub
or
fidivs
inc
dec
lcall
ss
sub
dec
inc
ds
adc
pinsrw
xor
test
pusha
pop
imul
inc
sarb
insb
mov
cmc
jecxz
mov
xchg
push
repz
lahf
push
stos
push
mov
inc
mov
orb
adc
add
adc
pusha
imul
push
xchg
xchg
add
mov
add
es
and
popa
adc
mov
inc
inc
lret
or
jecxz
push
ss
daa
jp
lret
cmpsb
mov
jecxz
jp
orb
adcl
rcrb
mov
pop
xchg
cmp
subb
lea
xlat
mov
mov
jg
mov
rclb
pop
stos
fidivrl
outsb
xchg
dec
sbb
sti
mov
mov
add
add
inc
js
cltd
mov
jbe
mov
pop
push
mov
lahf
outsb
mov
xor
sbb
pop
leave
sbb
arpl
shl
sub
fdivs
push
nop
sbb
add
test
fstpl
add
mov
gs
loope
sub
add
cmpsb
andb
imull
testl
dec
xor
or
jp
mov
pop
jnp
xchg
inc
inc
imul
push
stos
int3
aam
and
and
fcoml
in
icebp
mov
js
pop
scas
outsb
or
fisttpll
sub
rcrl
mov
cmp
call
fldt
dec
mov
pop
dec
adc
sub
xchg
test
push
mov
shlb
sti
push
mov
rcrb
or
fldt
mov
pop
inc
xor
mov
and
or
aaa
inc
ja
mov
push
and
push
mov
mov
or
repz
jo
xor
xchg
fwait
push
ret
in
inc
xlat
sbb
cmp
sub
xchg
lods
ret
mov
mov
pop
pop
sbb
inc
into
daa
insb
hlt
repnz
sarb
add
shrl
mov
icebp
push
mov
sub
sbb
add
add
xor
fadds
mov
or
sbb
inc
sbb
xor
adc
mov
rep
push
pop
or
inc
aam
or
ret
popf
insb
dec
dec
ffree
dec
push
jge
adc
push
aas
mov
sbb
add
mov
sbbl
outsb
cmp
cmp
adc
cmc
lds
mov
dec
fwait
push
cwtl
and
repnz
lahf
mov
xchg
orb
lods
jns
aam
loop
test
sahf
cmp
and
cmp
insl
lea
or
adc
dec
or
add
popf
faddl
mov
pop
test
mov
outsl
push
movsb
pop
cltd
fwait
xor
adc
dec
inc
mov
movq
adc
xchg
xor
in
mov
push
adc
insl
adc
rcrb
popf
pop
adc
push
loopne
mov
and
cmc
xchg
sbb
inc
cmp
jo
and
dec
rorl
jmp
lock
jmp
inc
jle
test
mov
jae
add
adc
mov
mov
stc
push
pop
cmpsb
inc
xchg
enter
dec
imul
adc
or
out
pop
dec
cmp
inc
bound
adc
iret
sbb
and
sub
mov
and
int
shlb
sbb
sbb
cmpsl
inc
inc
pop
or
ja
sbb
add
lds
outsb
inc
pop
hlt
daa
test
or
push
shrl
orl
push
mov
cltd
fisubs
adc
or
fs
xor
loop
sti
aam
cmp
push
lods
push
sbb
int
xor
xor
imul
cli
jns
sub
xchg
adc
jmp
iret
pop
sbb
pop
mov
in
sub
push
mov
xchg
mov
loope
mov
nop
inc
rorl
add
icebp
mov
rcll
sbb
sub
and
in
jne
dec
rcrl
or
sbb
xchg
ror
sbb
sbb
inc
mov
and
ret
loop
jle
jne
lahf
lcall
mov
aas
test
cmp
lds
mov
sahf
test
dec
inc
sub
adc
shlb
add
shr
inc
jl
pop
dec
cmp
daa
pusha
add
xchg
jo
add
fs
and
cmpsb
inc
xchg
dec
ds
jno
ret
dec
dec
jge
push
xchg
aas
dec
cmp
dec
fucomp
jb
jle
arpl
lahf
test
inc
inc
int
mov
aam
negb
push
insb
jl
cmp
cmpsb
cmp
das
pop
arpl
mov
cltd
outsl
sub
and
shrb
or
dec
dec
fwait
add
andl
inc
xchg
and
or
lods
dec
xchg
adc
sbb
test
adcb
cmpsl
dec
mov
daa
xchg
shll
jmp
in
and
xchg
jb
xchg
repz
imul
sbb
pusha
test
sub
push
or
xor
ss
nop
or
fadds
stos
inc
mov
lock
pop
inc
in
addr16
cli
push
jp
mov
out
add
xchg
xchg
jbe
sbb
test
inc
clc
or
pushf
insb
ds
push
mov
mov
mov
aas
mov
pop
dec
mov
outsb
mov
jge
or
dec
loope
push
xchg
repz
setg
push
iret
addl
cmp
adc
add
scas
aam
in
and
ljmp
test
adc
test
xor
cltd
cmp
and
addr16
jbe
cld
push
add
inc
mov
das
loope
sbb
cmpsl
inc
jmp
test
icebp
or
arpl
pop
inc
adc
dec
adc
sbb
inc
das
rcll
lret
sbb
je
cwtl
cmp
mov
push
aam
cwtl
insb
inc
mov
testl
push
inc
popa
or
push
pop
jb
sbb
mov
add
mov
les
jg
jmp
xor
sub
or
add
dec
mov
dec
sbb
lea
or
mov
dec
imul
inc
pop
xorb
push
inc
jb
jmp
or
mov
pop
push
lahf
cmpsb
xor
xchg
loopne
cmp
enter
cmp
test
lcall
sbb
insb
pop
lock
jecxz
ss
mov
dec
adc
imul
mov
pop
cmp
js
insl
add
nop
mov
add
mov
xor
cmp
xor
lea
lret
adc
push
es
out
add
mov
lea
je
pop
sub
aaa
xchg
sbb
shll
imul
data16
call
mov
sub
neg
pop
fndisi(8087
mov
into
jmp
mov
push
sbb
cmp
xor
dec
jmp
add
xchg
xor
or
and
rcll
pop
mov
inc
jecxz
andl
push
ret
aas
dec
scas
addb
jp
xor
adc
push
sbb
movsb
iret
inc
aaa
jnp
dec
adc
lcall
xchg
cmp
loopne
fwait
inc
lea
mov
dec
shrl
out
cmp
mov
adc
mov
hlt
sbb
push
popa
or
imul
mov
and
stos
imul
popa
fwait
loope
mov
iret
daa
push
push
or
push
aas
or
push
pop
mov
lcall
cwtl
jmp
push
arpl
movsl
dec
shl
sbb
js
mov
cmp
adc
push
pop
fildll
xchg
lock
dec
and
rcll
jo
or
adc
imul
pop
mov
lahf
inc
sbb
loope
jle
cmp
scas
push
push
pop
dec
inc
add
call
sub
mov
in
xor
mov
out
adc
mov
add
hlt
stos
xchg
cmp
sti
lods
sbb
mov
imul
lret
inc
popl
push
dec
xchg
pop
pusha
push
pushl
mov
ss
mov
mov
sub
pop
mov
sub
pop
inc
loop
fcmovbe
sbb
leave
aaa
add
push
aaa
or
and
ret
pusha
mov
ljmp
xchg
pushf
and
jmp
inc
pop
dec
cmp
dec
jns
icebp
pop
mov
shrl
nop
mov
push
cmp
rorb
push
add
lcall
sbb
imul
shrb
insl
mov
test
andl
adc
jne
std
or
sbb
ret
imul
outsb
insb
and
or
lock
arpl
dec
sbb
inc
decl
dec
daa
mov
sbb
sub
inc
and
ret
dec
dec
dec
testl
jne
sub
add
clc
xchg
adc
jge
jp
pushf
mov
mov
loope
inc
and
add
jo
xor
pop
add
push
and
test
mov
inc
lahf
aad
js
sbb
and
sbb
xchg
sbbb
int
sub
add
jl
fmull
cmpsl
mov
dec
test
mov
notl
adc
fadds
pop
inc
mov
lea
push
jne
mov
ret
push
add
shl
sub
sarl
pop
inc
mov
mov
je
pusha
xchg
cmp
or
dec
cmp
mov
test
xchg
ret
mov
xchg
js
or
push
fisubs
lods
icebp
mov
mov
dec
or
xor
ret
dec
jge
rcl
or
xor
cld
add
iret
push
push
out
pop
mov
mov
notl
add
cmp
ret
loop
mov
add
dec
repnz
and
mov
dec
fisttpll
lret
mov
add
pusha
stc
cmp
popa
sbb
and
mov
mov
add
sbb
dec
push
add
push
add
dec
ss
aaa
cli
mov
loope
jo
aaa
push
pop
nopl
inc
push
pop
leave
js
or
mov
in
and
mov
jmp
jo
pop
pop
inc
arpl
sahf
jp
loopne
and
imul
dec
mov
adc
scas
loopne
mov
pop
das
fwait
mov
sub
jo
adc
movsl
push
adcb
adc
push
lods
rcll
mov
ja
adcl
push
pop
mov
bound
popf
sub
cmp
sbb
ss
add
inc
adc
add
jg
or
jmp
cmpl
inc
inc
push
mov
mov
sbb
sbb
inc
test
xor
fwait
stc
sbb
enter
xchg
int
xor
ss
dec
push
xorl
pop
lds
mov
flds
sbb
mov
insl
lods
push
hlt
sti
std
mov
inc
rcrl
jl
bswap
les
add
adc
add
enter
dec
pop
lds
sbb
fisubrl
aaa
xchg
inc
cli
add
adc
test
xchg
sub
les
jge
fcmovb
lahf
popa
pop
add
loope
add
or
sti
sbb
push
sbb
cmp
cmp
inc
fdivs
and
jnp
loopne
ror
xor
sub
scas
adcb
test
or
movsb
rolb
int3
sub
loopne
fst
daa
jmp
repz
pusha
fbstp
xor
push
xchg
cli
lea
sub
dec
add
push
inc
mov
aam
lods
inc
pop
fwait
les
cmpsb
pop
addr16
mov
add
cmp
roll
gs
rol
and
sarb
push
in
dec
push
xchg
ds
or
cmp
mov
mov
and
push
jne
dec
ja
push
js
push
dec
jl
outsb
scas
pop
jp
cmp
cmp
stos
mov
xor
add
jmp
jg
ljmp
sbb
ljmp
ja
sbb
push
or
inc
and
mov
cmp
aas
scas
mov
repnz
ja
test
and
sub
out
xor
in
jo
das
adc
dec
cld
jmp
imul
daa
cmp
xorl
xchg
imulb
xchg
mov
xchg
jmp
imul
roll
adc
loopne
jae
push
xchg
jp
add
fwait
xor
aaa
popf
test
mov
add
and
cmp
sbbl
mov
mov
xchg
jno
andl
cmp
push
popa
fisttpl
inc
adc
out
cmpsb
pushl
xor
add
mov
jmp
mov
or
jecxz
mov
jge
pop
add
add
insl
sub
sbb
cmp
and
xchg
loope
icebp
stc
lods
mov
sti
imul
outsb
lret
imul
inc
cmp
shld
ud2
inc
js
jmp
sub
xchg
ss
xlat
ror
and
mulb
and
mov
jmp
sbb
mov
les
or
mov
out
jo
mov
inc
addb
cmp
and
push
add
xorl
push
fdivs
ljmp
adcb
mov
jo
xlat
mov
push
push
xchg
add
lods
or
fwait
shl
push
pop
les
inc
dec
out
pop
mov
pusha
scas
pushf
dec
xlat
add
add
bnd
lods
call
and
xchg
pop
and
push
inc
stos
xchg
push
and
sbb
add
fimuls
daa
shll
out
test
add
lcall
dec
sbb
xor
xchg
lock
pusha
mov
xchg
js
enter
cmp
add
push
lods
int3
push
adc
sbb
inc
pop
sub
inc
xorl
pop
pop
orb
or
xchg
or
jns
cs
jbe
push
and
xchg
or
add
roll
mov
jne
dec
pop
into
cwtl
test
shll
ds
xor
sub
mov
sub
dec
xchg
fwait
inc
dec
std
ret
imul
lods
cmpsb
addl
lret
cvtpi2ps
mov
daa
mov
jae
repnz
pop
mov
add
pusha
mov
ret
and
sbb
pop
mov
pop
dec
sbb
mov
mov
dec
gs
movsl
mov
pop
jae
xor
adc
rcrb
adc
movsb
test
fwait
gs
adc
or
fsubrl
lret
dec
ret
dec
adc
jmp
imull
cmp
sbb
pop
or
ret
xor
lock
ret
push
mov
mov
sub
dec
xor
addb
pop
mov
push
fisubrl
sbb
pusha
mov
popa
xlat
and
movsl
movsb
rorb
negb
iret
dec
dec
adc
sbb
test
push
push
out
stc
jp
add
cmp
dec
jno
mov
aam
fwait
es
mov
jecxz
and
push
jnp
add
ret
cmpl
mov
mov
xchg
jmp
adcb
jl
outsl
dec
cmp
movl
out
xor
xchg
push
cwtl
and
or
mov
dec
ljmp
fs
testb
xchg
push
pop
push
sub
push
xchg
xor
popa
loop
ror
sub
mov
xchg
xorl
ljmp
loopew
insb
js
fcomip
sub
cmpsl
push
add
mov
mov
icebp
rorb
int3
and
les
inc
mov
gs
dec
sti
or
movsb
jno
xor
jnp
fcoml
ret
fldt
mov
aas
in
or
xor
dec
sbb
adc
mov
test
or
mov
xchg
pusha
mov
xlat
insb
lock
fnstenv
or
loopne
cmp
sbb
loopne
jmp
sub
lock
add
popf
js
mov
push
ss
add
sub
dec
pop
sbb
lahf
jmp
pop
inc
xchg
xchg
inc
fwait
inc
inc
push
and
push
push
inc
inc
sbb
xor
mov
les
mov
mov
popa
out
or
mov
sbb
pop
repz
dec
inc
inc
mov
jbe
dec
mov
jno
pop
sub
int
cmpsl
xor
adc
xchg
js
sarb
pop
addl
pusha
mov
xorb
push
imul
out
mov
sub
cltd
push
int3
dec
sbb
xchg
and
pop
dec
and
push
inc
loop
jnp
or
clc
in
je
aaa
cmp
jl
out
add
sub
add
xchg
mov
mov
das
mov
outsl
outsb
or
test
js
adc
mov
and
cmp
scas
inc
pop
jae
into
mov
cld
push
dec
inc
ret
sarb
xchg
and
lods
inc
add
ret
shrb
push
jecxz
mov
lods
cmpsl
xchg
xor
les
rclb
or
fistpll
inc
popa
or
cmp
lods
xor
aas
out
adc
and
nop
cmpl
rcll
cli
imul
enter
and
hlt
or
push
movsl
sbb
push
mov
inc
inc
enter
ret
ljmp
pop
ret
dec
inc
sbb
xor
stos
test
jge
arpl
jmp
leave
push
or
push
mov
inc
inc
xchg
and
push
add
call
lea
cmp
or
adc
inc
sbb
mov
lret
sbb
daa
daa
leave
popa
ret
fwait
or
movsb
xchg
test
xchg
sub
add
cmp
xlat
shl
loope
dec
fcmovnu
xlat
add
cmp
icebp
fldcw
xlat
sbb
sub
xlat
into
add
mov
mov
push
test
bound
jbe
loope
scas
ds
sarl
xchg
push
popa
fnstcw
outsb
aam
mov
icebp
xchg
add
bts
adc
sub
mov
setl
pusha
cmp
arpl
aam
and
gs
lods
jno
sub
inc
jo
fs
adcb
jae
add
nop
dec
fwait
test
and
xor
pop
fnsave
adc
pop
jp
ret
test
adc
or
cmpb
sbb
push
sbb
push
inc
lret
push
pop
sbb
cli
mov
sbb
and
dec
xchg
mov
insb
jl
jo
aas
jg
or
add
xor
dec
sbb
mov
adc
sub
adc
filds
pop
or
test
sti
aas
inc
sbb
fbld
dec
and
js
ret
inc
sbbb
lahf
xor
and
cwtl
lahf
xor
test
ret
xor
pop
subb
mov
adc
das
sbb
dec
xchg
popf
add
add
and
pop
stos
inc
cmpsl
add
out
stos
stos
subl
sub
inc
stc
push
movsb
lds
stos
add
and
shlb
pop
fdivl
lods
add
sbb
or
xor
cpuid
idivl
loope
pop
mov
push
cmp
pop
aaa
incb
mov
inc
push
and
dec
inc
jo
mov
or
xor
enter
lcall
test
divb
mov
andb
imul
jle
jo
inc
jbe
stc
popf
cmpsl
popa
jl
mov
sbb
sub
jbe
mov
hlt
leave
or
lods
pop
es
arpl
sub
dec
jmp
push
push
dec
xchg
sbb
ljmp
mov
dec
rolb
jmp
imul
or
pop
mov
or
jns
cmp
test
sbb
adc
test
sbb
int3
cmp
mov
push
adc
flds
push
mov
loopne
mov
je
jne
or
lock
iret
push
mov
add
or
cmp
or
insb
or
xor
adc
or
js
mov
xchg
xor
sbb
mov
jb
insl
dec
jno
jge
adc
xor
mov
out
icebp
mov
mov
xchg
mov
iret
mov
ljmp
sbb
js
lods
cmp
cmpb
cmp
cli
sub
adc
pop
push
xor
xlat
and
idivl
cmp
add
insertq
or
shl
imul
nop
mov
aad
loopne
mov
xchg
adc
push
sbb
sbb
andl
fs
sbb
xchg
mov
and
or
and
lret
xor
fimull
ljmp
mov
or
idivl
push
xchg
adc
add
and
loopne
aaa
sub
and
xchg
pop
loop
dec
fcomps
imul
test
movsl
jbe
sub
ss
rorb
sbb
subb
shufps
aam
xchg
mov
push
pop
or
inc
clc
push
inc
pop
ja
xchg
shlb
mov
shlb
mov
mov
or
mov
bound
popf
mov
xchg
stos
sbb
cld
sub
or
or
inc
bound
pushf
rep
xor
test
and
test
leave
adc
aaa
pop
cli
movsl
xor
jo
xor
mov
test
lock
jecxz
push
dec
xchg
pop
sub
mov
out
push
pop
jl
jmp
mov
add
adc
nop
fiaddl
lods
pop
inc
sysenter
push
jae
rcll
mov
call
ret
dec
or
add
imul
add
xchg
cmp
and
jae
add
pop
xor
mov
xor
fdivs
push
ds
mov
fimuls
ljmp
push
jge
lea
jp
outsl
or
mov
or
sahf
pop
lock
inc
inc
addr16
push
sbb
cmp
ljmp
icebp
jo
test
mov
jae
imul
sbb
sub
fsubr
add
pop
inc
or
push
cmp
adc
push
mov
sbb
sbb
clc
xor
insl
adc
add
push
adcb
mov
lods
push
out
stos
imul
add
add
cmc
popa
jmp
insl
bound
imul
pop
lahf
adc
addr16
imul
dec
adcb
inc
mov
subb
aas
inc
aaa
scas
dec
inc
cmpsl
cmc
jb
inc
mov
sbbl
pslld
mov
mov
sbb
in
mov
rolb
daa
testb
addl
mov
add
add
aas
pop
and
sbb
mov
mov
mov
and
sub
repnz
pushf
in
stos
mull
dec
ret
mov
add
cmc
cmp
pop
jge
mov
sar
lcall
jb
dec
ds
and
jae
add
fisubs
testb
test
test
dec
inc
cmp
mov
adc
xchg
xchg
lds
hlt
mov
dec
cmpsl
lret
aad
test
jae
pusha
cmp
fistps
stc
or
mov
cmp
xor
jne
arpl
jecxz
sbb
or
sbbl
sbb
xor
xor
xor
sahf
jo
std
jno
rol
mov
xor
xor
test
and
dec
jmp
mov
mov
add
push
cmp
je
aam
rorb
gs
sbb
insl
seta
cmp
jae
fld
and
adc
sub
rcl
inc
cmp
mov
cmp
addl
pop
mov
rclb
push
ja
dec
dec
cmp
ret
sbb
inc
sub
add
or
xor
mov
bound
xchg
lock
arpl
adc
int
push
jae
push
cltd
mov
mov
addb
and
adc
jecxz
add
mov
int
xor
cmc
jno
adc
or
or
xlat
add
mov
xchg
popa
mov
add
shl
xor
addr16
cltd
stos
mov
loope
scas
sbb
add
mov
cmpsl
jecxz
inc
adc
add
push
sbb
and
adc
adc
pop
orl
mov
rcr
jns
sbb
dec
ret
or
loopne
jbe
lcall
inc
rol
test
lea
mov
dec
lahf
and
xchg
adc
adc
test
loopne
icebp
cmp
aaa
andl
fs
mov
adc
scas
stos
fnstsw
pop
sbb
add
dec
fbld
rolb
inc
jl
sarl
fisubrs
movntps
mov
aad
mov
ffree
testb
sbb
pop
jge
cmp
sbb
mov
ficoml
push
loopne
lods
xor
bound
test
pop
mov
jl
scas
or
mov
adc
xchg
push
push
xchg
test
mov
jns
sbb
jecxz
int3
and
ds
jb
adc
mov
mov
cmp
xchg
popa
pop
mov
add
in
mov
sub
inc
call
shrl
adc
xor
push
or
lret
jmp
mov
sbbb
gs
lods
aas
insb
mov
jecxz
enter
sub
add
jp
adc
jo
dec
sub
addr16
sbb
inc
adc
or
js
pop
lods
and
jmp
cmp
or
sub
or
add
insb
sbb
pop
or
mov
mov
xchg
pop
inc
cs
loop
shlb
scas
ret
jge
sbb
mov
cli
in
pop
outsb
pop
rcrb
push
fcompl
xchg
push
sarl
mov
inc
xlat
mov
adc
add
mov
cmp
mov
icebp
adc
add
cs
jnp
sbb
cltd
cs
mov
ret
rcl
sarl
mov
fistpl
in
mov
adcl
mov
test
pop
xor
ja
je
cli
daa
sbb
jmp
mov
icebp
icebp
adc
inc
orl
loope
push
mov
add
sarb
xchg
pop
testb
xor
bnd
mov
or
mov
sbb
xor
ja
or
pop
sbb
lods
mov
lock
outsl
xor
vpaddd
cmpsb
jg
shlb
rolb
dec
les
and
adc
in
adc
sub
repz
push
push
mov
pop
xchg
imul
loope
lret
outsl
stos
adc
push
fdivr
xchg
mov
dec
add
pusha
sub
orl
loopne
lock
fdivr
outsl
mov
mov
cmp
pop
and
xchg
pop
mov
fldcw
shlb
and
fsts
dec
das
jne
inc
sub
mov
fisubs
sahf
adc
and
ret
mov
mov
sub
fadds
adc
test
jb
sbb
popa
aas
xchg
xlat
adc
dec
push
inc
popa
and
hlt
aad
insl
jmp
inc
int3
adcb
inc
sub
mov
jb
xchg
sbb
ret
dec
mov
mov
inc
fmuls
pop
push
sub
mov
je
in
add
imul
addb
or
inc
loope
xchg
inc
dec
fdivs
in
and
movsb
lock
fnstenv
add
stos
lods
scas
cli
stos
inc
shrl
push
les
addr16
and
xlat
aaa
in
dec
inc
test
xor
sbb
mov
fnstenv
call
sbb
aad
inc
inc
pop
test
add
ss
jl
inc
mov
mov
and
aam
jns
mov
insb
nop
int3
pop
nop
xchg
jae
mov
daa
mov
xor
cmp
push
rol
or
das
inc
push
mov
or
inc
ss
mov
pop
adc
push
leave
inc
sti
movsb
outsb
xor
pop
xchg
rcrl
movsl
inc
push
jp
dec
jne
xchg
mov
and
das
sti
sub
pop
ret
sarb
js
inc
pop
add
nop
adc
dec
hlt
jne
mov
mov
mov
pop
mov
mov
loop
les
in
out
sahf
outsb
cmpsl
push
and
or
test
push
ret
push
xchg
aaa
stos
sub
inc
add
lcall
and
add
hlt
mov
icebp
mov
dec
add
cli
jmp
and
cmp
imul
xor
sbb
popa
jnp
outsl
adc
mov
nop
inc
add
inc
jp
xor
mov
inc
mov
xor
push
jle
dec
adc
sbb
mov
mov
push
mov
rorl
add
or
inc
jno
sub
rorb
sub
loop
cwtl
les
xchg
mov
mov
inc
add
outsb
jo
push
push
push
loop
dec
movsl
pop
notl
lea
add
loope
aaa
dec
or
lea
shrb
inc
dec
loopne
cmp
cs
add
add
inc
mov
inc
mov
aad
add
insl
jb
or
sub
out
push
enter
sub
add
fwait
lret
mov
shlb
adc
sbb
adc
push
fcoms
add
add
aas
push
add
lea
dec
dec
xchg
xchg
and
and
adc
outsb
add
push
lahf
add
stos
or
cmp
dec
call
lret
inc
jecxz
dec
mov
adc
scas
shll
andl
sub
ret
frstor
xchg
push
ret
mov
dec
arpl
adcl
sub
pop
aad
pop
inc
fisubl
inc
pop
mov
dec
arpl
xlat
xchg
add
mov
insb
sub
popa
vcvttsd2si
test
pop
xchg
inc
add
push
adc
dec
orl
insb
cld
sbbl
sbb
scas
push
ds
bnd
push
sub
pop
dec
push
nop
sbb
mov
shrl
in
cltd
in
imul
pop
pusha
jnp
sbb
add
sahf
or
add
adc
push
insb
jl
push
mov
or
push
iret
lcall
bound
fs
sbb
ja
and
movsl
jecxz
mov
add
pop
jae
push
daa
adc
jns
jbe
shrb
add
xor
xchg
pusha
mov
inc
insb
or
add
imul
pop
sbb
mov
daa
in
or
imul
inc
push
insl
lea
jle
ficomps
lret
subb
inc
mov
cs
adc
inc
sbb
iret
je
or
imul
fstpl
aaa
sahf
filds
jg
mov
insl
test
xchg
fwait
jbe
adcb
pop
imul
jecxz
andb
repnz
sbb
xchg
inc
dec
movl
out
pop
jb
rcll
jno
fistpl
and
dec
add
sbb
scas
dec
dec
add
sbb
and
rol
imul
add
cmp
sbb
inc
xor
add
cmpsl
push
inc
mov
div
nop
push
and
add
cmc
inc
sbb
lret
push
add
sbb
push
jecxz
mov
ret
mov
loopne
je
pop
mov
mov
lods
rcrb
fiaddl
in
dec
mov
rcrb
jp
mov
dec
sbb
imul
and
fimull
das
push
lds
inc
xchg
pop
mov
mov
test
rcr
push
mov
or
bound
adc
add
stc
outsl
fistl
push
dec
leave
and
movsb
adcb
xor
or
add
movsb
cs
xchg
cmpsl
insb
es
ret
lcall
pushf
loope
inc
pop
mov
mov
sbb
fld
imul
pop
add
and
lret
ds
cmp
push
loop
mov
dec
mov
push
jnp
rcrb
adcb
out
test
add
pop
sbb
push
inc
jge
mov
imul
lret
test
stc
js
imul
mov
out
add
orl
or
test
test
test
sbb
mov
movsl
dec
popa
push
push
test
mov
jg
cmpsl
and
movsl
inc
test
xor
shl
outsb
xchg
stc
inc
fimull
dec
mov
jl
sub
and
pause
mov
dec
xlat
je
xor
sbb
add
arpl
pop
and
cmpsb
popa
or
adc
or
cmc
icebp
popa
enter
add
aad
add
lds
nop
ss
xor
or
frstpm(287
aad
xor
insb
inc
jo
inc
sub
ret
cwtl
std
enter
add
cli
pop
imul
and
cmc
sbb
add
add
rorb
jns
and
pusha
addl
push
cmp
xchg
push
ret
mov
sbb
shrl
add
rcl
fisttps
xchg
mov
sbb
pcmpeqd
mov
or
outsb
add
rcrb
dec
int
xchg
sub
sbb
pop
sbb
imul
insb
loope
test
pusha
add
inc
or
stc
adc
jno
add
sub
lock
push
push
test
jge
pop
mov
ljmp
movsb
push
inc
loope
xchg
and
leave
pop
aam
mov
roll
and
repz
mov
scas
cmpsl
scas
xchg
mov
sub
fwait
and
pop
shl
push
jb
cmp
outsl
sbb
sbb
ss
push
cmpsl
push
or
mov
pop
push
jge
popf
add
add
push
and
dec
repz
add
gs
push
pop
inc
or
imul
inc
mov
jns
adc
mov
mov
pop
pop
mov
pusha
xor
sub
pop
jmp
add
mov
cmp
js
les
push
adc
addr16
mov
cmp
fisttpll
sbbl
fsub
jle
mov
sub
loope
add
xchg
cwtl
cmp
in
inc
movsl
and
int3
pusha
mov
push
add
insl
adc
decb
imul
rorb
ljmp
or
add
push
push
unpckhps
mov
ret
andb
mov
and
lock
lea
ljmp
addl
rol
not
jo
xor
orb
mov
lods
movsb
mov
hlt
xorb
mov
sbb
xchg
mov
cltd
mov
sbb
xchg
roll
sbb
out
mov
cmp
lret
push
fisttpl
sbb
mov
test
inc
or
and
imul
xor
cmp
or
jo
dec
or
mov
cs
adc
test
rorl
or
aam
jo
cmp
push
sbb
js
xor
shll
adc
mov
xlat
ret
push
push
mov
xorb
and
adc
or
sub
in
mov
mov
jecxz
push
inc
stos
inc
jg
arpl
push
dec
scas
lods
inc
mov
adc
js
imul
sbb
and
or
les
lcall
test
pushf
rorl
xor
movb
sub
dec
aam
sub
add
jo
cmp
rorb
lock
subb
clc
nop
test
mov
xor
cmc
sarb
or
repz
pop
mov
cmp
pop
data16
pop
inc
mov
jmp
jno
orb
xor
cld
movsl
add
daa
fldl
arpl
or
xchg
jne
xchg
ret
push
aas
nop
fbstp
xchg
push
push
fdivs
les
jo
mov
loopne
xchg
lds
sub
dec
or
aaa
push
add
cli
inc
scas
push
pop
add
mov
dec
jns
cmpl
repz
aas
sub
mov
cmp
dec
cmp
mov
mov
inc
push
jmp
lea
icebp
test
adc
hlt
pushf
jne
out
dec
add
lcall
imul
mov
aas
jne
or
mov
movsl
adcb
test
push
xor
mov
loope
push
push
jo
push
ret
and
js
aaa
test
mov
and
pop
xchg
sbb
jae
jb
outsl
mov
insb
mov
mov
or
add
pop
mov
fwait
xchg
outsb
pop
or
mov
xchg
or
add
dec
xor
cmp
test
lea
pop
mov
sbb
adc
loope
popf
ja
xchg
push
insl
negb
inc
ss
pop
push
xchg
pop
dec
cmp
icebp
ss
or
cwtl
rclb
cmp
cmp
add
inc
imul
mov
or
mov
sub
cmp
imul
cmp
or
mov
stos
cmp
add
adc
dec
inc
test
je
cmpsl
inc
mov
mov
in
rclb
add
dec
jmp
por
lds
cmp
cwtl
pop
mov
pop
sbb
cld
mov
cwtl
adc
jge
test
add
loop
cmpl
cmp
imul
repz
adc
std
jecxz
sub
negl
pop
dec
add
sbb
daa
cmp
mov
aas
dec
gs
ja
xor
pushf
xor
out
add
int3
mov
jmp
adc
push
mov
jg
jne
ss
out
pop
xor
lahf
or
mov
cld
push
faddl
jne
mov
xor
pusha
sbbl
pop
arpl
inc
jno
ficoms
lea
dec
sti
lods
mov
ljmp
and
mov
js
stos
fadds
mov
lea
out
jge
ss
mov
xlat
dec
mov
add
pop
add
jo
or
xor
xchg
inc
mov
aam
xchg
imul
xchg
or
push
pop
cmpb
mov
add
rorb
inc
jl
and
movsl
movsb
hlt
fidivrl
idivb
movsb
adc
inc
xor
cmp
test
stos
aaa
pop
lret
sbb
or
sub
lods
cmpsb
xor
sub
push
repnz
jo
or
dec
mov
lds
xor
add
and
lret
xchg
inc
inc
sbb
xchg
daa
add
mov
scas
or
pop
adc
add
adc
fmull
xchg
pop
hlt
movsb
mov
adc
int3
stc
fs
or
sub
jb
pop
jno
out
mov
call
adc
mov
xchg
or
fcoml
pop
clc
arpl
pop
insb
mov
loope
inc
movhlps
sbb
les
data16
sbb
xor
xchg
ret
testb
mov
int
mov
dec
jne
or
out
add
aas
sbb
pop
leave
add
push
pop
sub
es
cmpsl
add
nop
mov
push
popa
aad
clc
mov
pop
sarl
shrb
xchg
or
mov
cmpl
push
cmc
ret
add
andl
lea
cmp
jmp
jb
les
ret
pop
loope
sub
push
les
mov
push
rclb
add
cwtl
sub
push
mov
sbb
sub
pop
xchg
jae
push
ja
push
pop
inc
mov
and
adc
and
cmc
or
jne
mov
pop
dec
rcrl
mov
or
sbb
adc
xor
pusha
sub
inc
mov
clc
mov
and
push
cmp
mov
add
mov
fists
sbb
aam
dec
mov
pop
mov
lret
xor
jb
lods
leave
es
jbe
mov
arpl
dec
rolb
or
in
push
push
shl
rcl
cmp
or
test
mov
cmp
and
pop
dec
mov
clc
push
sahf
push
lret
add
pop
arpl
rcrl
sahf
jmp
push
pop
stc
lret
xor
sbb
inc
ret
jne
xor
out
mov
pop
or
add
mov
arpl
insl
addb
int
cmp
adc
inc
addr16
dec
mov
add
leave
jg
test
test
add
cmp
xchg
xor
mov
fnstsw
movsl
ss
nop
xchg
push
jnp
mov
dec
jmp
ljmp
ja
xchg
faddl
nop
lea
lcall
sub
cmp
xor
mov
pop
sub
inc
insl
cmp
and
adc
cmp
stos
adc
push
movsl
in
jmp
sub
incb
iret
mov
nop
mov
or
and
int
inc
arpl
clc
mov
shll
insb
mov
jae
fs
ret
adc
and
test
dec
das
adc
and
mov
xor
lock
xor
repnz
push
push
fistpl
pop
icebp
sbb
fcoms
testb
dec
scas
subb
sub
addl
sub
ror
dec
and
dec
pop
jnp
mov
sub
mov
xlat
jmp
mov
psllq
insb
xchg
sub
lods
pusha
xchg
pcmpgtd
pop
mov
mov
inc
or
push
gs
push
dec
pop
push
xor
dec
push
mov
notb
ret
jge
or
nop
push
fwait
mov
mov
and
scas
push
or
dec
push
mov
mov
insl
mov
lds
lock
dec
mov
mov
and
dec
pop
dec
jecxz
arpl
jmp
mov
add
insl
leave
jo
jno
stos
sub
push
fcmovnb
subb
add
add
ss
mov
dec
add
jmp
mov
roll
lret
sub
xchg
ret
imul
dec
imul
xchg
mov
sbb
je
lds
jl
sbb
mov
int3
xor
sbb
mov
adc
fld
test
adc
sub
sub
es
dec
push
pop
adc
mov
ficoml
out
das
cmp
sbb
movsb
push
jg
cwtl
les
addr16
out
test
mov
sbb
add
fldcw
pop
push
call
lss
push
nop
inc
push
loop
aad
insb
and
stc
jle
adc
or
add
popf
xchg
inc
iret
mov
xchg
push
inc
stc
add
and
add
subl
fmull
xor
ret
aas
arpl
and
mov
xor
loopne
ret
push
in
movsb
iret
and
sub
add
orl
lock
push
sbb
inc
xor
mov
xlat
fisubl
xlat
sub
leave
xor
adc
adc
pop
xlat
cld
sbb
sbb
xor
cmp
lcall
fistps
jg
mov
ja
xchg
jg
mov
xchg
decl
call
or
popa
inc
xor
mov
andl
inc
mov
int3
rorb
mov
dec
xor
lock
xchg
das
cmpsl
mov
adc
dec
pop
xor
data16
mov
fwait
inc
addl
inc
mov
test
jo
mov
cmp
test
sar
push
or
push
sbb
inc
sub
dec
cmc
push
pop
cltd
or
and
shlb
pop
dec
jecxz
sub
fidivl
cmc
mov
gs
pop
and
cmpsb
xor
push
mov
dec
fisttpll
push
adc
lock
xchg
loope
push
pop
pop
mov
subl
add
in
mov
cmp
inc
mov
adc
and
dec
adcl
xchg
jnp
jno
fdivl
pop
adc
mov
adc
js
pop
scas
fldl
jmp
hlt
xor
test
sub
dec
scas
pop
add
mov
enter
sarl
mov
push
push
fnsave
push
or
mov
loopne
jl
popf
mov
cmp
movups
mov
mov
rol
dec
insb
aad
in
daa
test
inc
fadds
cmp
adc
icebp
inc
das
lods
adc
cmpb
hlt
sub
and
aad
inc
addb
push
xlat
sbb
shrb
into
fisubs
pop
or
sbb
ret
add
xchg
lea
jo
insl
inc
lock
subb
enter
push
leave
jns
movsb
in
cld
adc
dec
int3
ficomps
roll
mov
test
repz
sti
lock
sbb
es
mov
push
or
imul
add
mov
and
xchg
xor
cmpsb
pop
nop
xchg
shll
mov
int
ret
adc
aad
mov
roll
cs
mov
xchg
sbbb
jp
add
pop
adc
shrb
iret
or
xchg
sarb
sarb
adc
mov
xor
or
pop
cmp
jae
cmp
cmovge
test
pusha
jno
add
jle
jmp
dec
int
jmp
dec
dec
mov
addb
sbb
dec
pop
lahf
insb
imul
xrelease
add
in
sbb
outsb
fs
testl
xlat
addb
out
sti
add
sbbb
mov
outsl
cwtl
fwait
aad
inc
jmp
imul
mov
mov
add
dec
or
or
push
mov
and
mov
or
in
push
cmpl
jnp
jo
sbb
gs
hlt
idiv
sahf
mov
push
or
shlb
stos
mov
sub
addr16
test
test
xchg
lret
pop
push
add
or
xor
mov
mov
leave
jmp
popa
cltd
pop
push
pop
or
sbb
dec
js
push
jecxz
fidivrl
lods
or
sbb
pop
lods
add
inc
jo
sbb
mov
mov
mov
add
loopne
mov
inc
jno
sbb
push
xchg
incl
les
ljmp
pop
stos
insl
test
insb
mov
test
push
mov
sbb
mov
sub
test
and
repnz
dec
xchg
fstpt
and
jb
cmc
adc
adc
jl
sub
add
push
push
or
mov
add
jo
lahf
xor
les
sub
or
dec
je
jecxz
or
lcall
imul
adc
sbb
or
mov
pop
ret
jns
cmp
loopne
test
cltd
repnz
insl
inc
enter
jnp
or
ret
inc
push
and
icebp
clc
jl
test
sbb
and
add
cmc
inc
dec
or
jae
loope
mov
sub
jae
mov
sub
adc
ret
js
dec
push
pop
add
subb
outsb
fadds
dec
inc
cmp
das
inc
mov
out
jb
mov
pop
sbbb
inc
sbb
xchg
and
or
push
push
out
jne
mov
adc
test
mov
ret
xor
jmp
aam
jno
push
xchg
add
movsb
das
mov
dec
jg
popa
and
mov
loopne
out
aad
inc
das
cmpsb
cwtl
inc
pusha
push
out
roll
jl
iret
xor
sub
mov
repnz
adc
jmp
inc
sbb
cs
dec
add
mov
out
dec
mov
or
push
mov
inc
dec
or
mov
sub
or
push
cmpsb
sub
push
inc
call
leave
mov
pusha
int
out
dec
mov
cmpsb
jp
pusha
cmc
test
loopne
xchg
mov
inc
lock
sbb
cmp
andb
add
hlt
sub
dec
push
or
add
subb
xchg
inc
add
mov
test
movsl
push
pop
icebp
push
cmp
outsb
sbb
inc
or
sete
mov
mov
xchg
add
pushf
into
pop
addr16
lods
lods
and
les
icebp
add
dec
stc
push
add
jmp
inc
xor
adc
pop
sbb
push
sbb
xchg
imul
mov
add
inc
ljmp
mov
or
inc
or
emms
movsl
xchg
mov
and
movsl
jno
and
int3
jle
lea
mov
jge
repnz
add
bound
and
std
xchg
or
rclb
mov
adcl
enter
mov
add
dec
push
add
or
sbb
adc
or
sbb
nop
mov
push
pop
cltd
pop
imul
dec
pop
dec
sub
add
cltd
test
push
sbb
mov
dec
or
roll
and
pop
sub
cmpsl
xchg
and
pusha
xchg
adc
sahf
inc
sbb
sub
pop
pop
mov
sub
adc
pusha
adc
inc
cld
sub
mov
daa
imul
push
test
pop
aam
or
xchg
scas
andb
pop
add
inc
mov
mov
mov
mov
adc
lahf
dec
cmp
sar
enter
lock
mov
sbb
xchg
add
push
push
inc
push
rcrl
sub
lcall
addr16
xor
push
mov
cmp
pop
pop
dec
cmp
cli
pop
ja
fisubl
xchg
push
dec
scas
inc
popa
xchg
dec
xor
movb
adc
test
lret
mov
out
lcall
jbe
mov
add
dec
xchg
aas
inc
and
std
mov
push
fnstcw
or
cmp
mov
jmp
push
mov
dec
ss
ret
movsl
push
push
fs
inc
data16
pop
inc
bound
fsub
pop
add
ds
daa
mov
ret
mov
add
clc
cmpsb
ds
test
mov
ffreep
js
shlb
inc
stc
xchg
xchg
arpl
and
rolb
mov
adc
pop
and
cmp
js
rcrb
mov
mov
xchg
push
xchg
jbe
mov
jecxz
movsl
int3
jo
mov
mov
adc
dec
pop
push
mov
and
test
add
mov
adc
adc
lcall
push
into
andb
sub
adc
xorb
dec
movsb
push
insb
leave
jbe
mov
nop
testl
mov
inc
jcxz
stc
pusha
insb
xlat
arpl
fildl
fisttpll
sub
into
or
cmpsb
loope
outsl
adc
mov
or
test
or
ret
inc
xchg
xorb
pop
mov
fldenv
or
inc
fsubs
ss
dec
adc
pusha
add
jo
jae
adc
xchg
xchg
adc
xchg
sbb
inc
hlt
fwait
xchg
test
jnp
data16
sbb
or
in
rol
xchg
or
adc
repz
call
xor
push
stos
adc
test
cmp
ret
xor
adcl
mov
add
xor
sbb
shl
out
dec
ret
mov
mov
mov
and
mov
lods
pusha
pop
mov
sbb
mov
lock
adcl
gs
mov
imul
xchg
and
mov
negl
pop
sub
dec
shrl
and
lret
mov
ss
adc
imul
add
insl
or
aaa
and
arpl
mov
sbb
cmpsb
sbb
sbb
mov
dec
cmp
sbbl
mov
aam
and
sarb
or
xor
dec
jo
cmp
lahf
pop
imul
mov
ljmp
sbb
mov
add
es
or
mov
jge
add
add
mov
push
push
data16
into
dec
inc
pop
pop
add
test
dec
mov
pushf
testl
pop
fdivl
cwtl
imul
adc
in
adc
jnp
outsb
jg
jae
imul
pop
arpl
cmc
xchg
dec
pop
sarb
inc
pusha
sub
sub
jmp
and
dec
call
cmp
outsb
pop
repnz
sub
mov
out
loope
or
inc
adc
nop
xor
decb
rcl
imul
adc
test
bound
test
mov
adc
aam
mov
xchg
icebp
ds
pop
mov
cmp
lea
xor
mov
xor
sub
sub
dec
adc
aaa
dec
jne
je
sbb
or
sub
adcb
dec
out
lahf
fwait
ret
outsb
add
adc
inc
rorb
jne
cmp
scas
ret
and
les
add
pushf
push
sbb
gs
sub
mov
and
xor
call
mov
xchg
mov
mov
pop
sbb
mov
inc
or
jp
in
fimull
jecxz
inc
ret
jo
xchg
jo
adc
test
dec
ss
push
sbb
scas
imul
nop
stos
add
add
add
loope
stos
les
pusha
loope
scas
push
xor
inc
rep
xor
ja
or
call
push
adc
inc
push
mov
mov
mov
shll
mov
mov
stos
push
cwtl
jmp
push
test
lea
addr16
in
mov
xchg
jmp
mov
loop
dec
mov
pop
push
ficoms
pusha
adc
add
out
cwtl
mov
adc
mov
mov
movsb
mov
imul
mov
mov
add
jmp
and
push
test
and
xor
cld
sub
adc
adc
fnstsw
shl
ds
sbb
test
clc
sub
jecxz
push
xlat
xchg
imul
xchg
xor
push
je
cmp
shll
xor
stos
imul
je
xchg
inc
xor
or
push
mov
jo
xchg
lds
pop
ffreep
or
das
mov
rol
or
jmp
sub
or
mov
out
dec
stos
mov
push
pop
jge
out
cli
test
jnp
shlb
jno,pt
pusha
xor
add
in
push
cs
imul
or
ljmp
ja
cmp
hlt
sub
call
jmp
es
pop
stc
sbb
lahf
scas
xchg
xchg
add
js
push
cs
dec
adc
pop
insb
jecxz
cmp
push
adc
jp
scas
stos
sarb
dec
push
sbb
add
shr
push
lahf
mov
cmp
inc
adc
insl
push
lret
neg
loopne
aaa
ret
xlat
jmp
ret
andl
dec
or
jne
mov
add
push
xchg
loop
xor
aaa
in
xlat
sbb
xor
mov
and
sbb
out
mov
or
scas
add
stos
jp
movsl
mov
inc
jmp
jp
sub
mov
jmp
and
cmc
pop
imul
mov
pusha
push
test
cmpsl
dec
cmp
mov
lret
repnz
fmull
fs
and
pop
mov
mov
inc
mov
push
xor
ss
inc
pop
pop
pop
inc
aam
imul
xchg
sub
popa
bound
sti
or
or
daa
data16
and
push
loop
mov
leave
out
and
mov
pop
imul
cltd
popf
test
ret
out
mov
add
dec
lret
mov
push
scas
dec
cwtl
or
incl
xchg
jmp
roll
sbb
outsl
or
inc
outsl
stc
jo
mov
and
add
jge
mov
clc
mov
in
xor
xchg
sbb
loope
stc
shrb
xchg
push
adc
and
js
mov
jg
andl
sbb
jbe
movsl
dec
or
lds
dec
pop
repz
je
sbb
pusha
jb
test
in
dec
pop
imul
inc
andb
inc
dec
jmp
push
inc
xchg
adc
jo
dec
pop
and
dec
cmp
inc
adc
adc
aad
jl
mov
push
and
inc
loopne
push
push
mov
cwtl
mov
lret
pop
rolb
lahf
xchg
jo
adc
andl
and
mov
addr16
mov
xor
cmc
push
inc
sbb
mov
je
in
inc
enter
and
mov
hlt
fsubs
push
jae
fbld
sub
out
and
push
dec
js
sbb
in
sub
data16
fs
pop
xchg
icebp
lock
shl
gs
inc
addl
loopne
cmc
sub
pop
xchg
sbb
mov
orl
rorl
aam
add
addr16
cmpsb
out
into
aaa
xor
cs
xor
mov
jmp
aas
xchg
pop
dec
sub
push
xchg
test
in
lahf
fistl
and
inc
mov
test
movd
mov
pop
jb
or
mov
jecxz
sti
out
mov
jae
mov
stos
mov
fsubs
inc
lock
mov
xlat
dec
stc
insl
movsb
or
jg
cmc
jo
mov
sbb
imull
mov
mov
jnp
or
pop
adc
cltd
xorl
pop
sbb
sbb
mov
imul
fnstenv
push
pop
fwait
add
lock
xchg
xor
rcrl
popa
adc
jns
sbb
int3
int
cltd
add
mov
xor
stos
popa
repz
aaa
cmpsl
in
mov
push
fisubl
jp
mov
iret
fidivl
mov
add
jb
push
push
lods
add
js
std
lock
cmc
mov
adc
mov
pmaddwd
fisttpll
inc
repz
mov
test
cmp
mov
out
push
sbb
push
inc
pop
out
loope
pop
jns
dec
js
adc
shlb
loope
and
xchg
push
imull
xchg
add
scas
loope
jp
insb
loopne
mov
push
sahf
loope
cmp
xchg
loope
mov
pop
mov
sti
add
pop
rcrb
ret
mov
and
lret
orl
in
out
ja
sub
mov
adc
pop
ds
insl
dec
insb
xor
xor
xor
je
fwait
jecxz
ret
mov
in
out
sbb
imulb
addl
lds
arpl
xchg
sbb
pushf
jge
loopne
lret
ss
ss
add
loop
outsl
int3
fidivrs
and
push
insb
repz
mov
pop
int3
lahf
mov
out
inc
jo
stos
mov
add
xor
faddl
pop
sbb
repz
mov
mov
mov
inc
jge
loop
dec
mov
mov
mov
mov
adc
imul
push
mov
xchg
sti
sbb
sbb
mov
or
cmpb
or
mov
leave
and
or
cmovg
sbb
inc
mov
push
lea
push
inc
out
ret
mov
adc
mov
inc
sbb
add
fbstp
dec
jns
es
inc
mov
add
decl
fwait
xor
sbb
xor
pop
sub
out
sahf
shlb
repz
repz
cmp
jp
das
add
mov
popa
cmpsb
jecxz
jmp
jge
cmp
jecxz
xchg
pop
sahf
jecxz
adc
xchg
scas
mov
xor
add
add
xor
imul
pusha
ret
and
dec
fiaddl
pop
xlat
stos
std
or
shrb
push
cmp
leavew
jo
daa
fnstenv
dec
mov
mov
sbb
sub
popa
jo
loopne
aad
jge
ja
movl
ss
xor
sbb
popf
xchg
fmull
mov
adc
pusha
scas
mov
add
push
and
lods
sbb
dec
outsl
inc
or
mov
pop
add
push
js
cmpsl
push
lds
sub
imul
imul
xlat
or
inc
jp
cmp
les
pushf
dec
enter
add
inc
sbbl
pop
and
les
out
push
mov
add
cmc
inc
or
inc
push
inc
sbb
cltd
hlt
mov
cmp
testb
add
fadds
lret
shll
aas
sub
xchg
or
xor
mov
cmp
mov
mov
rcrl
jne
jae
or
push
xorb
nop
in
les
add
jae
pushf
mov
and
rcll
xchg
add
insl
pmaddwd
add
int3
add
push
mov
and
inc
jle
mov
imul
es
ror
idiv
mov
scas
sub
inc
clc
popf
test
xchg
mov
xor
stos
mov
add
sub
push
or
xchg
icebp
jge
mov
push
xor
xchg
out
push
sbb
aad
dec
xchg
nop
cmp
or
ds
sbb
repz
loope
xor
cmc
sbb
enter
fdivs
addl
gs
and
mov
aad
ja
xchg
jge
mov
lds
sub
out
ret
cltd
xorl
stos
mov
pop
mov
mov
lock
fisttpl
jnp
into
xchg
add
lcall
sub
lods
pop
mov
into
fiadds
add
inc
add
lds
fidivs
mov
xchg
pop
arpl
jmp
sti
pop
mov
daa
imul
mov
daa
mov
sbb
mov
jns
add
rclb
inc
push
and
dec
bound
inc
pop
sub
adc
int3
jg
cvtps2pi
fdivr
jp
inc
pop
jg
xlat
pop
or
push
inc
or
adc
in
inc
inc
rcrl
dec
mov
or
or
out
insl
stc
ja
mov
sub
movsb
mov
ret
dec
test
fwait
in
shll
sub
pusha
pusha
cltd
sbb
in
dec
pop
xor
adc
push
mov
out
test
or
in
push
and
mov
xor
shll
sub
arpl
mov
push
adc
fmull
or
faddp
scas
xlat
stos
or
outsb
fwait
cmp
push
inc
inc
lods
inc
idivb
push
inc
fstps
js
sub
inc
add
sub
in
mov
sub
fisubrs
push
cli
mov
dec
xchg
add
inc
pop
fsubl
dec
and
dec
test
mov
add
cmp
jbe
pop
mov
sbb
fisubs
pop
or
inc
jnp
jne
mov
sub
push
movsb
sub
ss
ja
push
sahf
fwait
int3
out
push
xchg
xor
enter
testl
inc
lods
and
lahf
xchg
ss
xor
mov
les
sub
ljmp
pusha
test
mov
repz
outsb
int3
mov
movsl
lahf
mov
mov
test
mov
cwtl
mov
ss
push
or
jmp
push
mov
cs
pushf
lock
mulb
into
mov
xor
pop
and
pop
push
xor
fs
test
sbb
and
lea
sub
sub
pop
pop
imul
stos
fwait
mov
loop
stos
enter
inc
sbb
imul
mov
jae
mov
sub
sub
pop
push
lods
add
or
inc
add
lret
sbbl
pop
or
sbb
adc
test
sub
jmp
cwtl
bound
mov
out
dec
pushf
iret
addl
dec
sbb
and
pushw
jbe
mov
cmp
pop
xor
fbld
xor
and
or
pop
xor
push
test
in
xor
aad
cmpsb
jp
test
mov
mov
push
fs
dec
sbb
aam
add
adc
shl
adc
test
ljmp
xchg
out
fstpt
out
xchg
stos
ja
and
aaa
das
add
lods
jmp
daa
test
movsl
insl
add
jae
jge
dec
dec
mov
pop
stos
shll
mov
jae
mov
ret
cmp
push
xchg
iret
xchg
ss
or
into
cmpsl
pop
test
sarl
ja
ds
sub
lcall
fidivrs
jb
sbb
filds
cmp
add
pop
push
push
sahf
movsb
sarl
adc
outsl
jmp
sub
mov
mov
rcl
xor
or
mov
into
pop
pop
mov
mov
aaa
in
cltd
les
add
adc
ret
rcrl
mov
neg
lret
xchg
dec
addl
and
dec
pop
push
jbe
and
dec
pop
cmp
jnp
imul
addr16
imul
sbb
repnz
or
add
je
mov
fistl
inc
repnz
test
aas
pop
pop
loope
enter
jo
jo
sub
xchg
add
pop
push
sub
inc
stos
adc
ljmp
sbb
pop
jns
push
adc
sub
cmp
cmc
push
bound
mov
inc
out
dec
sub
mov
decl
jle
shll
scas
in
sbb
jmp
and
sbb
mov
pusha
lods
push
jge
add
pushf
sbbl
jo
cmpsb
push
outsl
mov
es
mov
dec
lock
inc
cmp
sarl
adcb
pop
sbb
add
add
dec
lds
cltd
xor
mov
cmp
icebp
jecxz
mov
add
sar
add
jmp
fsts
aad
cmp
and
dec
rcr
mov
popa
in
jmp
or
subl
shlb
lea
mov
adc
scas
fimuls
jnp
andb
lahf
xor
xor
lea
sbb
inc
xor
imul
cltd
cmp
js
shlb
jo
clc
add
or
or
push
mov
movsl
push
js
dec
das
pusha
fistl
add
push
adcb
push
push
sarb
movsb
push
push
lret
xchg
test
shll
ficoml
xor
pushf
xchg
dec
filds
mov
enter
inc
xchg
sub
enter
dec
ja
dec
push
push
pop
in
loope
pop
xor
cmpsl
jl
xor
insb
iret
cmpsl
xchg
push
add
mov
lods
lret
pop
loopne
cmp
add
fwait
mov
add
pop
setge
push
rclb
repnz
xchg
add
arpl
or
push
adc
adc
imul
pop
xor
push
mov
lods
lods
lea
cmp
sbb
xchg
dec
push
push
xor
in
call
mov
shlb
ret
popa
leave
ja
add
cmc
push
inc
fsub
xlat
push
cltd
mov
add
mov
jbe
daa
movsl
xor
or
inc
sub
or
sub
jnp
dec
rorl
jecxz
jnp
jae
push
mov
mov
push
add
mov
jle
mov
push
inc
xchg
add
pusha
gs
and
aaa
xor
add
arpl
mov
imul
scas
dec
btc
pushf
lods
adc
mov
jno
mov
xchg
xchg
shll
xlat
scas
fdiv
mov
enter
rclb
add
xor
sub
lock
jo
sub
cmc
lods
popf
ret
test
popf
loopne
sub
lods
cmp
push
and
sarb
unpcklps
adc
jnp
fisubl
pop
jo
jo
mov
notl
add
mov
jmp
jecxz
daa
xchg
xchg
cmp
icebp
pop
je
test
inc
shrb
inc
pop
out
pop
jbe
mov
sbb
xchg
lret
mov
outsb
xchg
pop
test
ret
pusha
insb
ficompl
subl
inc
mov
test
dec
dec
fucomi
ja
int
add
jbe
test
inc
or
mov
sbb
and
fbld
xchg
mov
outsl
ss
sbbb
sbb
cmp
push
dec
subl
imul
push
sbb
shrl
lock
fistpl
xlat
sub
ss
scas
or
loope
mov
push
adc
mov
insl
ret
pushf
scas
sub
mov
inc
add
sub
sub
cwtl
scas
cltd
push
adc
shll
mov
jns
dec
mov
aaa
aad
mov
mov
xchg
lret
add
add
sub
dec
cmpsl
or
das
mov
sbb
scas
movsl
adc
dec
or
pop
negl
push
stos
push
jl
jae
cltd
repnz
mov
pop
es
push
sbb
cs
test
cmpb
repz
sbb
aas
pop
mov
outsb
fmull
test
inc
add
xor
cli
push
dec
sbb
jo
daa
stc
mov
dec
call
rorb
jbe
sbb
push
faddl
and
inc
xor
out
add
sbb
lea
or
sub
adc
sub
xor
je
fwait
popa
sbb
push
jns
stos
xlat
cmpsb
pop
mov
jno
inc
dec
pop
jmp
popf
and
mov
sub
loope
mov
add
pop
iret
sbbl
and
add
fs
xor
inc
mov
mov
cmpl
clc
arpl
mov
loopne
xor
mov
xchg
mov
jecxz
int3
xchg
cmp
shll
and
stos
test
das
or
inc
sub
or
xlat
cmp
ret
sub
inc
pushf
pop
sub
loopne
inc
push
or
test
imul
mov
pop
imul
outsl
lds
mov
loope
mov
fldl
fisttpl
scas
inc
dec
add
ss
outsb
xchg
add
movsl
mov
sub
insb
stos
jmp
mov
mov
mov
test
fucomi
pusha
sbb
lock
adc
inc
ret
imul
mov
das
in
divl
mov
stos
loopne
enter
add
ret
sbb
dec
add
push
and
stos
lds
jnp
push
pop
add
mov
or
imul
jo
cli
inc
scas
adc
ss
mov
mov
xchg
mov
test
loope
and
xchg
mov
in
xchg
sub
push
fistpll
in
xchg
adc
pshufw
arpl
movaps
aam
js
paddusb
push
stc
inc
rcl
mov
mov
and
loop
xor
cmp
imul
and
shr
stos
mov
jae
leave
in
cmp
test
jmp
pop
je
push
gs
inc
or
push
inc
xor
dec
sbb
sub
dec
fistpll
sbb
jg
xchg
sbb
sub
imul
push
or
sahf
xor
sbb
js
xchg
jbe
cli
dec
xrelease
and
adc
dec
push
jle
and
das
xchg
push
push
lods
or
orb
scas
xchg
sub
inc
mov
sbbl
xchg
test
dec
idivl
int
jecxz
ss
sub
hlt
ljmp
mov
push
outsl
xor
fcom
movsl
arpl
adc
cmp
outsl
mov
mov
xchg
xor
xor
mov
or
les
outsl
mov
or
mov
fistps
sub
xchg
xchg
daa
pop
add
das
outsl
daa
inc
dec
cmp
jmp
jmp
mov
jmp
cmp
jg
andb
and
mov
clc
xchg
popf
sarb
sbb
adc
out
loopne
icebp
shrl
mov
stos
cmp
jmp
sub
xchg
rcrb
add
rcrb
mov
fildl
dec
xchg
fildll
pop
pop
ja
pusha
cmp
xchg
add
sbb
mov
xchg
push
out
xor
rclb
hlt
out
pop
add
sbb
mov
jmp
inc
xchg
inc
les
inc
or
in
sbbb
pop
adc
mov
mov
call
mov
and
lea
cmp
sbb
sbb
testl
call
lea
sti
shlb
arpl
cwtl
loopne
jne
add
adc
pop
add
fucom
pusha
loope
and
cmp
aad
and
pusha
xchg
fstpl
inc
pop
add
add
insb
test
add
imul
add
sbb
stos
cmp
jmp
and
xchg
and
imul
xchg
mov
cmp
roll
aam
jmp
ret
and
jg
jmp
push
mov
or
push
xor
adc
or
sub
fdivs
push
ds
test
pop
arpl
or
add
mov
and
jecxz
fldcw
adc
sub
nop
inc
adcl
daa
movsl
mov
add
add
xor
pop
pop
pop
dec
or
mov
push
mov
cmp
out
sub
push
jo
jp
sbb
leave
fildl
push
movsl
insl
scas
int3
mov
inc
xor
or
insl
cmpsb
inc
cs
shll
xorl
cmp
rcl
mov
stos
dec
mov
rcl
sub
push
mov
mov
es
sti
ja
ja
sub
pop
jne
add
xchg
dec
adc
test
dec
fs
popf
pop
jne
xor
insb
sub
and
cmp
bound
mov
inc
shll
add
mov
mov
xor
enter
mov
sub
mov
xlat
mov
ret
xor
jo
aaa
cmp
cmp
dec
mov
dec
cwtl
add
mov
push
popa
fildll
add
js
mov
cmp
xchg
fcoml
arpl
push
pop
sub
imul
into
mov
xchg
lods
out
arpl
mov
add
aad
sbb
popf
mov
mov
outsb
mov
mov
sub
push
mov
fistpll
mov
inc
lods
rolb
xlat
xor
test
loope
cmp
loopne
pop
adc
jo
arpl
mov
dec
scas
mov
js
frstor
cmp
outsb
xchg
iret
inc
sbb
jbe
pop
pusha
dec
cmp
xchg
mov
sub
mov
imul
add
sbb
push
enter
xchg
mov
lds
push
xchg
sub
pop
mov
in
xchg
shll
mov
popa
mov
push
dec
jnp
cmp
mov
xchg
mov
sbb
enter
rcrb
and
test
cld
popa
jne
jo
mov
mov
xchg
rcrl
popa
lods
arpl
ficoms
pop
pop
xor
xor
icebp
shlb
sub
mov
inc
xchg
fistps
mov
mov
fdivrs
fstpt
lcall
fnstsw
cmpsb
cmp
leave
mov
xchg
mov
mov
xchg
loop
jnp
movsl
or
sbb
cmp
shll
push
lea
inc
add
addr16
aas
mov
ja
pop
jg
mov
mov
sbb
adc
xlat
pop
loopne
dec
cmp
data16
sbb
aam
frstor
mov
mov
or
mov
mov
movsl
pushf
cmp
popf
inc
in
insb
xor
loopne
cmp
lahf
ljmp
loope
or
shlb
lret
mov
dec
shrb
test
loopne
push
mov
rorl
dec
jp
sbb
les
push
and
xchg
fistpl
add
enter
push
xor
push
es
jne
and
fidivs
lds
mov
cmp
jmp
inc
jbe
push
out
xor
jmp
ret
out
mov
dec
pop
idiv
out
adc
push
arpl
in
fisubrs
push
push
data16
loopne
lods
jne
lods
inc
sahf
fwait
dec
add
jbe
mov
jmp
mov
and
xor
inc
fucomi
push
add
mov
mov
inc
cmpsb
ljmp
jbe
pop
mov
loopne
iret
lods
outsw
dec
ss
je
cmc
mov
sbbl
xor
sahf
sarl
insb
inc
mov
lcall
push
cltd
add
jmp
mov
pop
rorl
daa
mov
mov
sahf
movsl
imul
pop
cmp
add
fwait
pop
stos
sub
mov
xchg
nop
dec
cmovns
fisubrl
arpl
insl
inc
scas
arpl
pop
xchg
or
dec
pop
jnp
dec
aaa
jnp
dec
and
pop
push
sbb
xor
xor
or
out
jmp
jns
andl
dec
mov
mov
imul
outsb
mov
sub
aas
cmp
std
mov
inc
mov
fwait
xor
into
mov
aaa
mov
inc
lret
and
fdivrs
cmpl
or
and
pop
inc
stos
add
fldt
test
testl
orl
xor
pop
les
insl
adc
loop
or
rorl
sub
popf
or
lret
and
jmp
pop
dec
ffreep
mov
add
scas
cmp
push
jns
inc
xchg
scas
or
bnd
jno
sub
or
jl
fbld
or
xchg
jge
sub
cld
cmp
add
xchg
or
es
call
into
getsec
into
or
popa
int
int
popf
add
iret
mov
and
or
int3
popa
rcrl
xor
jge
loope
and
fimull
adc
push
sti
add
popa
or
pop
or
rcr
in
and
mov
aad
pop
adc
or
pop
fstps
xchg
or
and
std
or
and
daa
sub
iret
sbb
or
lock
sub
pop
xchg
dec
push
mov
outsl
in
or
movsl
scas
sbb
sbb
sti
lea
cmc
fidivl
mov
dec
xor
mov
inc
inc
add
popa
mov
jmp
scas
mov
sbb
cmp
sub
mov
lret
dec
sbb
or
dec
mov
add
dec
dec
adc
shll
dec
jne
sbb
stos
push
dec
lret
in
sbb
lret
push
sub
fidivrs
push
lret
xchg
mov
jnp
xor
dec
stc
cmp
mov
pop
dec
add
scas
and
pop
and
jne
fnstsw
cmp
pop
cmp
outsl
scas
aaa
pop
push
lret
jecxz
lret
push
mov
xor
xchg
lds
add
inc
js
gs
sub
pop
mov
pop
dec
jnp
mov
mov
or
push
lcall
mov
scas
cmp
test
hlt
mov
mov
fbld
mov
ja
mov
inc
sub
lods
cmpsb
das
inc
shll
adc
pop
sti
dec
cli
loopne
adc
inc
or
cmp
mov
skinit
push
out
jbe
jb
insb
movsl
hlt
push
sbbb
or
test
sub
push
sbb
inc
mov
es
adc
jmp
add
shlb
xor
xchg
jbe
jbe
ljmp
sbb
in
pop
add
and
inc
jmp
add
mov
aaa
mov
add
or
decl
inc
jne
mov
lods
iret
cmpsl
in
mov
xor
sub
clc
pop
push
movb
cwtl
inc
add
xchg
rcl
adc
lock
scas
xor
cltd
and
data16
cmovle
cmpsb
push
push
adc
and
mov
mov
pushf
ret
pop
xchg
lock
push
push
sbb
xor
repnz
clc
adc
ret
loop
js
add
ret
test
das
sub
pop
mov
mov
sarl
cmp
xor
inc
loope
or
mov
push
lcall
outsb
adc
fdiv
or
incb
mov
outsl
pushf
jle
or
add
push
out
in
mov
adc
out
adc
addl
mov
test
stc
add
fisttps
test
mov
clc
inc
ret
dec
insl
dec
popa
je
sub
shl
cmpl
cld
push
sub
dec
subb
rcll
pop
add
adc
test
cmc
jg
icebp
sbb
dec
imul
pop
xor
dec
icebp
dec
cld
scas
lcall
adc
lods
cmp
aam
test
sub
and
int
jg
mov
in
jg
pushf
cmp
pop
shll
repnz
imul
inc
inc
daa
push
push
fnstsw
xor
sub
arpl
add
in
pop
mov
cmpsl
pop
sbb
fnsave
inc
js
xor
mov
loopne
or
das
and
mov
popa
std
adc
or
loop
inc
push
fadds
hlt
sbb
cmpb
add
mov
jl
test
lds
fsubrs
cmpsb
mov
mov
push
sub
cmp
orb
jecxz
push
fmull
pop
roll
push
push
into
jb
aaa
sbb
inc
into
mov
dec
ret
mov
push
xchg
jbe
inc
pop
outsl
cli
jp
pop
jecxz
mov
iret
jbe
aad
pop
cmp
jo
sahf
xchg
je
or
es
and
loope
cli
adc
test
aas
ret
push
jo
das
jle
stos
push
mov
pop
icebp
aas
imul
sbbb
jae
push
cmp
fisttpl
lods
test
dec
jecxz
pushf
sub
mov
push
jne
jg
jle
sbb
in
jne
mov
xchg
and
mov
mov
push
jo
jmp
adc
mov
dec
insb
push
pop
inc
aad
adc
pushf
sbb
ret
ljmp
adcl
fnstsw
sar
fadds
pusha
dec
test
push
xchg
or
and
fimull
lea
sbb
imul
imul
jne
popf
fnstsw
add
pop
jnp
into
ret
in
nop
cmpsb
aam
std
push
xchg
xchg
xchg
scas
xor
andl
lock
dec
and
dec
dec
loopne
mov
and
inc
push
mov
push
jl
xor
jb
jmp
stc
js
loopne
push
and
mov
xchg
fcomps
sub
int3
jp
pushf
lods
mov
loop
dec
cmp
xchg
test
jae
faddp
shl
push
lea
sub
in
push
loopne
jne
outsl
dec
pop
inc
shl
cmpsl
pop
pop
pop
add
sbb
imul
test
jae
pop
add
mov
je
outsb
inc
mov
lods
mov
aas
and
ret
sahf
xor
lds
mov
rcll
sarl
xchg
idivl
sub
sar
popa
or
test
fisubl
verw
add
jbe
xchg
xor
lcall
or
fsub
xor
scas
clc
mov
or
lahf
sbb
fidivs
shlb
pop
inc
cmp
sbb
jns
push
andb
push
into
fs
add
sub
push
sti
mov
pop
popf
out
pop
jnp
loope
mov
and
or
or
cmpb
data16
les
jbe
push
sbb
cli
mov
ss
pop
ja
loop
mov
insb
rolb
push
faddl
fs
mov
pop
scas
inc
sbb
ds
cld
mov
test
bound
out
ss
shlb
fnstenv
cmpsb
xchg
fldt
mov
sti
cmc
push
and
lea
add
frstor
loopne
or
jl
lret
nop
add
pop
jl
xchg
lret
sub
ret
cld
xor
ret
jmp
out
aas
cld
cli
or
xor
xlat
mov
fsubrl
push
add
jl
cmp
adc
scas
sbb
push
enter
shlb
jp
repz
fs
loopne
xchg
call
mov
loope
dec
ja
jo
jmp
cmp
xor
sahf
into
incb
scas
loope
adc
mov
jp
iret
hlt
adc
jp
xor
dec
sub
adc
mov
mov
xor
or
push
push
jge
ja
inc
movsb
shr
lock
and
and
dec
rclb
push
lods
lods
xor
mov
data16
mov
std
fs
mov
and
sbb
push
leave
out
cmc
sti
and
add
add
fsubs
xchg
add
cmp
cwtl
mov
outsb
les
cmpsb
adc
push
mov
pop
stc
sub
les
out
xlat
mov
mov
lock
scas
pop
xor
add
arpl
xchg
stos
cmp
lret
mov
dec
sub
adc
je
mov
push
clc
es
dec
lods
pop
js
add
jecxz
data16
mov
push
addr16
ds
test
loopne
dec
je
pop
stos
mov
push
loopne
mov
in
pop
xor
out
mov
in
loop
push
adc
pop
lock
fdivrl
sub
add
out
mov
test
into
std
cs
into
mov
jb
sub
cmp
repz
pushf
movsb
data16
sbb
stos
loope
inc
pop
add
movsl
inc
jp
mov
cmp
test
fdiv
mov
adc
inc
test
mov
xor
imul
nop
fcompl
arpl
jno
xor
ret
out
cmpl
inc
mov
push
shrl
mov
or
mov
jno
cld
pop
daa
jle
icebp
rolb
cs
adc
sub
or
ljmp
and
sbb
adc
inc
jb
mov
scas
das
repnz
or
xor
pop
mov
inc
adc
mov
das
stos
sbb
lret
fdivrl
outsb
cmp
lret
pop
orb
xor
sbb
pusha
js
loopne
dec
adcb
sub
jo
cmp
int
movsb
add
pop
inc
out
imul
pop
add
dec
xor
inc
inc
add
stos
inc
insl
and
jae
loop
cmp
add
mov
jno
inc
or
sbb
imulb
mov
scas
je
add
pushf
add
xchg
outsb
and
push
pop
loop
cmpsb
mov
int3
shlb
adc
mov
pop
lret
aaa
pop
cmp
push
lock
mov
mov
lock
adc
int
aam
adc
push
xor
ds
xchg
pop
dec
mov
sub
cli
xor
shlb
push
mov
sbbl
das
dec
rclb
push
ret
push
pop
inc
rolb
xchg
daa
test
cmp
stc
cmp
lods
ja
xchg
bound
xor
fbstp
jae
les
dec
addb
adc
sub
sub
pop
ss
cmp
imulb
roll
jecxz
gs
clc
int
xor
dec
mov
jns
add
jg
int
test
add
es
inc
aad
adc
mov
mov
push
cmp
imul
jbe
mov
cmp
push
adc
push
sarl
cmc
call
sub
pop
pusha
in
dec
or
icebp
and
cmpsl
outsb
mov
dec
push
loopne
sub
mov
fxtract
test
aas
loop,pt
sbb
mov
icebp
call
dec
je
xchg
or
fdivrs
out
clc
fsubrs
fsubrs
rcrl
and
xor
int3
or
addl
pop
aam
test
sub
ja
ds
add
jmp
cmp
and
and
lret
int
dec
xor
mov
imul
scas
mov
jp
pushf
test
sub
or
mov
xchg
call
inc
test
cmp
mov
mov
std
add
dec
cmpsl
mov
xor
mov
xchg
es
das
add
inc
ficomps
mov
cmp
dec
sbb
dec
int3
mov
xchg
push
inc
push
loopne
sysret
add
add
xchg
ret
fwait
std
adc
dec
rorl
cmp
js
jmp
nop
orb
lahf
mov
add
add
and
outsl
outsb
sub
dec
je
je
push
mov
pop
xchg
dec
cmp
insl
into
dec
lods
out
xorb
lock
jae
pop
aam
test
mov
pop
into
test
fldt
je
pusha
push
sbb
mov
mov
mov
loop
xchg
inc
clc
sub
jne
cmp
lret
xchg
xchg
push
inc
mov
cmp
dec
rolb
in
mov
dec
add
jno
dec
stc
test
test
movsl
mov
outsb
xor
mov
push
scas
or
cmp
mov
adc
in
cmp
aaa
sahf
outsb
je
adc
cmc
or
cmp
jmp
pop
lret
out
sbb
xchg
enter
inc
jb
add
xor
sti
pusha
hlt
or
aaa
or
mov
or
pop
js
push
sbbb
adc
cltd
mov
dec
xor
xor
data16
xchg
gs
pop
scas
xchg
xchg
dec
inc
and
iret
add
insb
mov
pop
ss
add
adc
fidivl
mov
lock
imul
ficompl
testb
clc
jnp
hlt
adc
jl
cld
inc
movb
sub
lea
cs
jle
sahf
call
mov
pushf
mov
movsb
out
mov
mov
cmp
std
cmp
fwait
adc
xlat
or
add
aad
mov
jo
cwtl
into
in
mov
test
mov
inc
push
movsb
xchg
ljmp
lds
loopne
mov
sbb
xchg
inc
add
daa
insb
pop
fidivrl
call
pop
test
scas
xchg
xchg
jp
adc
jge
hlt
shl
data16
sbb
imul
xor
data16
rolb
push
xchg
pusha
cwtl
jmp
inc
lcall
repnz
mov
add
jmp
pop
insl
cs
jl
add
iret
mov
mov
push
aaa
xor
scas
xor
cmp
outsb
jle
movsl
inc
push
jle
fisttps
add
les
xor
or
std
dec
mov
ret
jmp
orb
add
aad
mov
js
pop
test
mov
add
pop
pop
movsl
xor
mov
cld
divb
push
sbb
xchg
mov
fildl
mov
jp
movzwl
mov
mov
enter
adc
aam
add
push
jb
xchg
pop
mov
cmp
xchg
sub
cmp
sahf
sub
lock
sbb
or
in
inc
xchg
mov
xchg
rclb
push
pop
scas
add
icebp
mov
cmp
sub
xlat
inc
sub
ret
das
xlat
cmpsb
out
test
lret
ret
xor
inc
xor
mov
push
jne
cmp
sahf
into
mov
pop
out
ds
mov
aaa
pop
inc
pop
lods
les
inc
loop
pop
js
fisubl
lcall
out
jne
scas
rclb
sti
fisubrs
xchg
add
jb
test
in
and
add
loop
in
push
fbld
pop
ljmp
add
repz
iret
stos
inc
pushf
xor
xor
inc
cli
dec
gs
xor
sub
sub
orl
stmxcsr
enter
mov
clc
jne
jmp
and
xor
jl
lock
insb
xchg
or
mov
out
and
shlb
in
scas
and
gs
jl
dec
mov
xchg
mov
cld
sub
mov
cs
repz
xchg
jmp
adc
and
pusha
sti
arpl
xor
lds
lods
mov
or
push
ss
addb
inc
adcl
or
hlt
mov
push
incb
lahf
sbb
popa
xchg
mov
jl
push
push
dec
jo
into
js
add
out
mov
pop
es
push
mov
icebp
cmp
and
cwtl
xchg
insl
shr
les
and
push
lcall
push
sarb
cli
imul
cmpsl
out
into
mov
sbb
push
icebp
sub
inc
incl
in
bound
add
cmpsl
add
in
sub
cmp
or
pop
jle
ret
repz
pop
add
ljmp
pop
push
and
sub
inc
insl
incb
pop
int3
adc
inc
mov
sbbb
movsb
jle
pop
or
fcomps
push
or
adc
push
adc
shll
add
jne
rorl
xchg
cmp
and
cmpsl
hlt
movsl
cld
jbe
arpl
dec
daa
pop
jmp
leave
and
fsubrs
xor
mov
js
push
js
roll
and
lea
fisttpll
testb
xchg
lahf
push
mov
sahf
jg
jne
pop
stos
push
jge
lods
lds
add
dec
out
in
lods
mov
xor
movsb
int
shrb
sbb
shll
insb
outsb
xor
push
lcall
lock
je
mov
cmp
inc
cmp
pop
in
cmp
xor
shrb
loopne
or
rolb
xor
pop
out
pusha
stc
into
iret
aam
popa
sub
out
mov
sbb
dec
push
push
mov
cmc
popa
pop
pop
mov
jmp
push
movsb
addl
cmc
mov
add
clc
mov
add
insb
sub
aaa
and
or
mov
iret
ret
pop
pop
pop
dec
dec
xchg
inc
or
sbb
call
and
insl
aaa
loopne
sub
mov
push
sbb
jg
in
mov
packuswb
popa
stos
in
mov
std
cmp
push
out
mov
ja
cld
and
add
mov
hlt
cmp
mov
loopne
filds
cltd
inc
dec
add
aas
cmp
dec
mov
xchg
inc
fnstcw
and
cltd
dec
dec
flds
adc
or
lock
dec
xor
fbstp
push
or
cmpsb
push
jbe
add
push
pusha
jge
loopne
lods
hlt
repz
push
repnz
and
xor
xor
jle
push
bound
bound
jl
jp
push
js
xor
or
in
out
in
inc
cwtl
icebp
lock
xor
shll
orb
fwait
xor
jecxz
icebp
add
ss
movzbl
mov
pop
cmp
add
insb
hlt
jle
imul
xchg
adc
jns
mov
jo
cmp
stos
mov
inc
ror
mov
orb
and
ret
lock
cmp
pop
jne
ljmp
mov
adc
repnz
sbb
adc
stos
lret
mov
out
insl
ja
jp
call
lock
stos
mov
fsubs
mov
push
icebp
cs
ljmp
mov
mov
test
push
xor
aaa
adc
sahf
clc
stos
mov
dec
xchg
cmp
cmc
mov
hlt
xchg
rcrb
fs
sbb
or
push
cwtl
mov
cld
mov
lahf
mov
mov
xchg
jl
outsl
subl
and
add
adc
add
ds
push
cltd
and
sub
jbe
or
pop
dec
pop
add
ret
enter
jg
sub
in
mov
push
fsubrl
dec
inc
sti
roll
stos
fldl
or
sbb
cmp
dec
dec
adc
fiadds
xor
loop
sbb
incl
sbb
mov
jns
les
add
je
filds
sbb
pop
roll
imul
pop
icebp
inc
rcll
jns
aad
xlat
lds
inc
xor
test
dec
mov
xor
mov
notb
xor
shl
ret
adc
sbb
cli
add
sbbl
cmp
cmp
les
scas
sub
mov
rcrl
mov
stc
sub
xor
pop
loope
sub
out
ljmp
mov
cs
negb
sbb
and
pop
inc
jo
dec
xchg
pop
lcall
les
hlt
lods
and
pop
jmp
cli
or
jbe
bound
push
push
shl
jl
and
pop
icebp
rcrl
lock
adc
xor
das
sub
push
or
mov
lods
xor
mov
rcl
and
mov
push
jl
jae
adc
xor
push
jnp
mov
pop
subl
jle
cs
xchg
push
scas
filds
mov
sub
insl
ret
out
jno
jl
out
cld
cltd
jge
add
stos
frstor
loop
xchg
loop
ss
or
cmp
jp
push
es
outsb
test
dec
dec
or
data16
cmp
jg
lcall
shll
jg
loope
iret
fcmovb
mov
je
pop
cmp
das
and
into
cli
ljmp
daa
xor
mov
pusha
xor
imul
jo
mov
pop
outsl
jo
fs
rol
jbe
sub
lahf
inc
mov
adc
pop
xor
shl
imul
mov
push
pop
or
mov
cmp
push
hlt
sub
jg
mov
mov
cmp
ror
test
out
cmp
outsl
in
sub
jb
xchg
dec
js
or
dec
enter
xchg
mov
jb
xor
out
mov
stos
nop
mov
mov
in
cmp
test
jge
jne
mov
cmpsb
mov
push
lea
ficoms
jge
or
aad
xchg
jg
mov
pop
test
adc
in
sahf
cmp
call
aas
push
pusha
bound
int3
lock
mov
cmp
inc
xchg
out
push
shll
jae
cmp
sbb
shrb
int
lahf
in
xchg
loope
jge
dec
data16
loop
daa
mov
rclb
xchg
mov
cmp
dec
mov
mov
pop
push
pusha
out
cmpsl
dec
push
cli
fimuls
lcall
add
push
dec
int3
mov
xlat
inc
sbb
push
add
pop
xchg
sbb
adc
mov
pushf
ffree
fildll
cmp
mov
int
jb
lcall
shl
mov
cmpsb
mov
fistps
mov
into
ret
xchg
jns
pushf
outsl
mov
jne
divl
xlat
mov
inc
ds
mov
adc
les
fdivrl
es
jmp
cli
mov
into
xor
pop
in
aas
inc
cmp
add
ja
xchg
in
inc
push
xor
xchg
andb
jbe
jae
add
mov
lahf
add
xchg
ds
xor
xor
sub
inc
in
or
xlat
fisubs
mov
cmp
ss
mov
mov
push
std
aaa
shr
cmp
sti
lcall
mov
stos
add
push
inc
add
add
inc
outsl
add
or
pop
cld
cmp
clc
lods
rcrl
cli
mov
int3
jbe
jecxz
jmp
and
enter
outsb
fldenv
stc
scas
sahf
mov
push
push
std
cli
mulps
mov
mov
std
in
sti
add
and
shrb
xor
insb
add
add
push
xchg
ds
lods
sbb
lret
stos
jae
sub
jmp
in
mov
add
lods
mov
sub
pop
jmp
sub
add
jle
lods
inc
sub
xor
test
cmp
movsb
mov
test
pop
push
into
int3
push
mov
xchg
cmpsb
pop
adc
mov
xor
outsl
lock
jl
outsb
sbb
aam
int3
in
ret
cmp
mov
test
pop
sbbb
xchg
nop
push
clc
fidivrs
in
iret
mov
jno
xchg
cltd
jg
pushf
incb
inc
and
lds
clc
mov
mov
sbb
xor
jmp
dec
mov
inc
inc
jbe
add
jo
jmp
cld
scas
adc
push
lds
aad
aam
xor
add
into
ds
cmp
adc
inc
jecxz
mov
mov
inc
pushf
lret
sbb
sub
mov
push
and
cmp
loop
stos
xchg
xor
mov
cmp
out
add
jl
insb
xor
popf
add
js
or
les
mov
out
and
sbb
inc
fdivrl
arpl
test
cmpsb
aaa
xor
test
lods
rdmsr
fdivs
or
and
fldl
es
xor
add
mov
test
stos
shlb
push
insb
jmp
pop
les
popf
iret
mov
xchg
insl
sbb
ret
fiadds
stos
mov
lock
lock
pusha
mov
mov
ret
xor
test
das
in
ds
push
mov
int3
daa
and
jge
and
ds
xor
jp
sub
mov
sub
push
inc
push
sbb
mov
inc
push
jl
pop
lret
jbe
add
inc
into
jo
push
ret
xor
or
jge
cld
fs
inc
dec
popf
xor
adc
hlt
sahf
popa
pop
sub
dec
add
mov
scas
rolb
mov
subl
xor
fsubl
js
cmp
adc
ds
mul
mov
jmp
in
push
test
mov
fcoms
cs
js
fdivs
lods
popa
push
cmp
test
aaa
push
negl
sub
mov
test
lds
jg
sbb
mov
cwtl
add
mov
cwtl
lods
cli
mov
loop
daa
insl
jb
imulb
ret
aam
lods
sti
mov
gs
push
pop
push
and
fldenv
sbb
js
adc
shrb
fadds
and
clc
push
cmp
outsl
and
add
pop
outsb
push
mov
jg
jo
in
dec
add
rcrl
jle
ret
pop
out
cltd
jmp
shl
loopne
insl
push
mov
insb
shll
push
ret
or
xor
lea
mov
push
ds
mov
sub
adc
pop
inc
mov
sub
mov
cmp
mov
and
rclb
xchg
cmp
jnp
add
les
int
mov
inc
mov
jb
int3
mov
mov
adc
lods
add
adc
push
loope
nop
lds
xor
pusha
cmc
inc
cmp
daa
adc
adc
sbb
dec
inc
das
pusha
and
shl
push
jno
sbb
loopne
and
pop
ret
push
fnstsw
add
test
cwtl
xor
xchg
test
sbb
jl
xchg
sub
scas
adc
push
insl
jnp
scas
and
les
push
push
outsb
incl
jp
mov
lret
fisttpl
xlat
mov
mov
pop
add
pop
cs
lcall
and
inc
test
or
add
shrl
shlb
pop
in
fisttpl
adc
popa
cltd
inc
js
mov
cmp
pop
aad
pushf
jl
or
mov
ret
rcrl
mov
xchg
inc
addl
mov
loopne
mov
je
mov
mov
sub
jg
sbb
stc
in
scas
aad
cmp
sub
insb
push
adc
or
push
pop
test
test
pop
lods
adcb
sub
push
aad
mov
pop
ds
pop
add
dec
popf
in
dec
mov
xor
sbb
jb
xor
loope
fwait
rcll
push
subb
repnz
sahf
mov
bound
add
pusha
xchg
fsubs
fimull
and
jns
mov
mov
add
int3
jg
es
push
scas
or
and
mov
pop
mov
or
cmp
or
movsl
es
mov
add
mov
xor
xchg
ficompl
mov
or
push
jbe
fidivrl
sbb
fidivs
jb
std
push
hlt
cmpl
sub
shl
test
adc
add
shlb
out
and
sub
push
lods
mov
ds
dec
jecxz
in
or
fdivl
addb
mov
pop
lret
cltd
push
insl
data16
shl
cli
adc
push
aad
fcomps
xchg
cmc
and
or
mov
inc
mov
cmc
add
mov
add
repnz
mov
lret
cli
mov
xor
dec
xor
sahf
inc
mov
mov
add
mov
in
add
or
push
loopne
or
ss
inc
shl
and
xchg
push
testb
jmp
mov
dec
jle
inc
jno
mov
mov
shlb
xor
fwait
inc
pop
push
jb
push
lods
push
shll
stos
ljmp
test
cwtl
or
sbb
fdivl
sub
lahf
or
mov
cmp
ds
leave
sub
jnp
out
pop
out
jp
pop
push
pop
lods
jbe
lcall
and
mov
inc
push
sbb
xor
das
lock
ret
push
ret
jbe
fsqrt
cli
mov
jp
insb
mov
push
das
xor
aas
sti
and
xor
mov
pushf
push
test
mov
outsl
cmc
sub
adc
and
add
icebp
lock
bswap
sbb
stos
js
orb
push
push
inc
and
xchg
sub
or
shll
out
and
sub
fsubs
stos
data16
jo
repnz
repnz
scas
mov
add
in
call
push
loop
in
sbb
xchg
pop
jecxz
inc
jo
pop
dec
sbb
jg
int
inc
addl
mov
mov
test
dec
mov
sarb
or
add
ja
push
popa
int3
lods
ds
push
cli
out
imul
das
add
pop
fisttpl
and
nop
data16
dec
aam
rcrl
icebp
push
pop
add
mov
sbb
mov
inc
xchg
xchg
outsb
aam
mov
add
mov
rcr
mov
aas
inc
push
sub
test
mov
arpl
jae
loopne
sbb
jae
sub
out
jmp
xlat
or
and
das
push
cmp
fidivs
jge
fistl
imull
sti
mov
outsl
cmp
cmp
aaa
jmp
outsl
pop
or
pop
scas
cs
push
loope
repz
dec
outsb
or
xchg
fs
cmp
push
mov
or
pop
in
mov
jecxz
pop
mov
das
insl
imulb
aaa
add
and
sbb
cltd
out
or
andl
mov
mov
cld
mov
insb
pop
or
into
movsl
jae
insb
inc
sbb
mov
sti
cs
arpl
arpl
repnz
jg
ja
pop
dec
pop
sub
xor
daa
cmp
xor
jae
and
fisttpl
xlat
jecxz
mov
testl
mov
stos
arpl
xchg
movsl
and
arpl
jl
cmpsb
adc
fwait
adc
outsl
bound
push
sub
push
ja
unpckhps
push
out
pop
pop
pop
pop
inc
das
gs
into
xlat
jge
aas
and
jge
ja
xchg
push
out
fbstp
mov
mov
pop
xchg
and
jmp
cmpsl
das
mov
push
pushf
fidivrs
imul
push
or
jb
fst
pop
fstps
ret
xor
adc
cmp
aaa
mov
aaa
cmpsl
pop
into
push
stc
pop
mov
adc
add
cmp
daa
mull
mov
cmp
sbb
arpl
pop
addr16
mov
jecxz
fisubrs
or
or
pop
mov
push
jmp
mov
popl
xchg
adc
inc
mov
jo
outsb
inc
dec
push
or
mov
sti
les
or
daa
aas
or
xor
shl
aas
mov
outsl
xlat
pop
mov
inc
gs
shlb
fabs
push
ficompl
or
and
sub
xor
gs
das
out
jne
out
mov
arpl
mov
pop
or
jmp
mov
xchg
or
or
adc
dec
pop
in
aaa
iret
or
fistpll
jecxz
or
cmp
lods
xor
out
rorl
fst
pop
ja
cmp
or
ret
jmp
inc
cmpsb
or
lret
inc
jp
push
jp
daa
jp
push
pop
jae
movsb
and
and
stos
push
lock
and
int
mov
cmpsl
cmp
sbb
mov
jns
jns
popa
movsb
jnp
adc
jns
jns
in
pop
xchg
fwait
xor
cmp
and
jge
call
cmp
sub
imul
cmp
lret
or
push
lods
sbb
sti
mov
jecxz
cs
mov
or
int
sub
jg
or
pop
sbb
das
out
sti
test
bound
push
fildll
mov
sti
mov
addl
scas
inc
mov
sub
lea
hlt
jle
jle
out
jnp
xor
add
xorl
cmp
and
mov
add
decl
sbb
mov
pop
inc
jge
push
rep
or
jge
sti
mov
xor
add
das
sti
sbb
mov
cmpsl
sbb
add
iret
loop
jl
adc
addr16
or
adc
movsb
out
sbb
mov
push
lahf
cmp
jecxz
mov
inc
cmpsl
and
notl
push
fwait
jge
iret
std
or
push
notl
xlat
or
scas
aaa
mov
and
bnd
jb
not
xor
out
jnp
lahf
je
das
jb
adc
xor
pushf
inc
cmp
inc
idivl
and
pop
scas
or
inc
mov
jno
jno
sub
jno
data16
fucom
pmuludq
pop
adc
sti
imul
mov
notb
inc
stos
insl
mov
adcl
or
filds
out
jmp
pop
pop
fstpt
and
in
sti
cmp
pop
mov
adc
cwtl
or
arpl
je
jae
emms
cmp
sub
inc
out
scas
sub
mov
jae
xlat
daa
jecxz
ljmp
mov
pop
jp
scas
push
fsubr
std
mov
inc
jbe
outsl
or
lret
and
xchg
jne
jne
loop
xor
xchg
mov
test
inc
cmp
push
dec
add
push
icebp
fists
xor
insb
sahf
rcrb
and
mov
pop
cli
pop
loope
imul
popa
dec
fsubrl
jmp
dec
add
cmp
pop
pop
xor
add
lds
xor
pop
cwtl
add
lret
nop
scas
icebp
test
hlt
ss
and
cmpsb
in
jl
mov
and
sarb
iret
mov
push
leave
or
or
adc
push
lods
cmp
jbe
or
outsl
ret
js
inc
adc
dec
shlb
inc
das
add
rcll
iret
dec
bound
dec
xor
inc
push
add
pop
scas
stos
cmpb
in
xor
mov
or
sub
mov
stc
add
sub
pop
add
mov
sti
jge
inc
es
test
cmpl
mull
inc
push
movsl
and
fisubrs
icebp
push
xchg
int
push
shll
lret
inc
sti
ficoms
cmc
push
and
sub
pop
dec
xor
adc
mov
push
or
dec
jnp
je
sbb
and
or
and
scas
notl
outsb
lods
sbb
xchg
or
adc
sub
or
add
mov
xor
movsl
mov
sbb
or
orb
xchg
shll
ljmp
lds
sub
jnp
mov
out
add
dec
inc
outsl
pop
add
jge
test
inc
and
mov
aaa
sbb
add
push
test
add
outsb
fs
insl
sub
fwait
cwtl
dec
cli
rol
bound
mov
dec
loopne
mov
mov
or
outsl
mov
das
mov
xor
pusha
xchg
pushf
jmp
sub
push
jmp
cs
fnstcw
imul
out
mov
mov
fs
xchg
cwtl
sbb
ljmp
and
loopne
mov
pop
std
xlat
loop
push
dec
iret
sahf
push
imul
sbbb
in
push
mov
cmp
pop
call
adc
sub
sub
mov
pop
push
mov
mov
mov
add
inc
add
mov
popa
je
or
xchg
cld
cmpsl
mov
add
shll
es
repnz
lret
jg
sub
pop
mov
pusha
mov
xchg
jmp
pop
add
xor
push
fistps
test
fcompl
adc
int3
or
shll
outsb
sub
sub
outsl
mov
popa
cmp
mov
les
test
mov
xlat
adc
movsl
mov
add
cld
and
mov
lret
cmpsl
je
push
or
jp
or
fdivl
testb
mov
inc
ret
fnstsw
stos
inc
xchg
mov
adc
xor
fwait
lods
jg
ret
rcr
add
sbb
push
xchg
and
fstl
mov
xlat
ret
pop
pop
sbbl
test
dec
inc
shr
sub
stc
inc
or
xchg
loope
xchg
mov
scas
cwtl
imul
rclb
addl
addr16
mov
into
scas
mov
stc
push
pop
inc
mov
sbb
pop
rcl
and
pop
pop
out
sti
or
push
xor
outsl
xor
mov
mov
adc
xor
movsl
or
sub
je
jl
pop
inc
xchg
cs
sub
cs
and
sbb
sub
add
jnp
jge
jl
ret
fcmovnu
insl
inc
xor
adc
test
roll
mov
mov
mov
in
imulb
out
sub
xor
mov
movl
enter
shr
adc
lds
fnsave
jecxz
ja
sub
inc
jne
xchg
cmp
cltd
jb
dec
arpl
push
or
clc
mov
pop
mov
dec
pop
sub
mov
add
jno
jo
imul
lock
mov
xchg
ret
add
push
rcll
setnp
in
push
pop
les
lret
mov
movsl
ret
add
jbe
jge
popa
fwait
cmpsb
mov
sub
xchg
sti
out
xor
ljmp
dec
fcmovnu
xor
inc
pushf
loope
dec
test
xchg
xchg
test
stc
jnp
push
test
mov
mov
fstpl
test
or
ja
xor
and
or
xor
sbb
pop
stos
xchg
mov
add
xor
mov
and
jp
xchg
movsl
add
scas
sub
add
pop
mov
mov
pop
cmp
in
in
outsl
cs
addr16
ret
js
mov
mov
or
cmp
es
push
adc
andb
lods
push
leave
sbb
out
loopne
mov
cmp
sub
fnsave
sbb
cmp
inc
xor
cmp
lret
sub
ret
scas
jmp
icebp
jno
sti
roll
roll
mov
ret
inc
dec
arpl
inc
dec
jecxz
test
leave
sar
stos
push
mov
dec
bound
adc
jo
stc
ja
arpl
ret
sbb
add
scas
ret
mov
sarl
mov
sbb
ret
das
pop
mov
mov
sub
and
pop
jo
ret
pop
cltd
arpl
inc
jnp
sbb
sbb
jae
add
lods
mov
adc
sbb
dec
pop
test
xor
stos
arpl
mov
mov
faddl
mov
adc
lock
lahf
ret
cmp
sub
xor
dec
jo
stc
pop
sbb
pop
mov
xchg
repz
cmp
jne
sub
cltd
lds
pusha
sar
mov
mov
or
adc
loop
sub
imull
push
cs
ss
push
stc
mov
inc
lds
lcall
pop
imull
mov
inc
dec
jl
ljmp
add
movsl
popa
das
insl
cmp
outsb
cmpsl
pop
xchg
rcrl
mov
icebp
stos
lods
sub
lock
nop
add
lcall
in
mov
out
fidivl
outsl
cli
mov
xchg
shlb
ret
fsts
mov
mov
loopne
jmp
js
mov
push
int
mov
xchg
or
popa
sbb
setno
stos
add
rorl
or
flds
inc
sbb
cmovl
je
pop
loope
sub
xor
and
psllq
push
cwtl
cmp
icebp
add
pop
lcall
pop
in
or
pop
and
repnz
cmp
sti
mov
mov
and
jns
mov
inc
das
fs
and
das
add
inc
outsb
and
jmp
mov
jo
and
sub
fdivrs
ja
popa
sbbl
jnp
rolb
out
arpl
pop
jg
mov
in
xor
cli
jmp
xor
and
cmp
cmp
xor
imul
sub
pop
sbb
jne
jno
push
outsl
mov
push
sarl
adc
ret
cmpl
and
les
jns
adc
lsl
lahf
lods
pop
ds
cmc
adc
sbb
push
or
pop
scas
mov
cmc
inc
mov
mov
std
xchg
push
adc
or
mov
mov
sbbb
aam
mov
inc
lds
hlt
add
insl
sbbl
adc
or
test
xor
andl
hlt
push
mov
ret
or
or
mov
add
test
jecxz
cmpsb
les
cmp
das
loope
iret
inc
test
inc
les
bound
das
sti
mov
stos
inc
ret
loopne
add
and
je
add
sbb
pop
xor
cmp
rclb
pop
fildl
push
aaa
mov
xor
xor
push
sbb
xchg
mov
sub
repnz
rorb
sub
lret
or
inc
add
xchg
jge
inc
xor
sbb
push
arpl
insb
lcall
and
fadds
sub
aaa
add
sbb
sub
mov
sbb
xchg
out
jnp
filds
add
arpl
cmp
mov
jmp
sub
pop
dec
adc
mov
jne
jae
ficomps
lods
xchg
pop
jno
test
sbb
mov
int3
inc
pop
mov
jge
add
or
inc
push
arpl
scas
cmp
pop
pop
push
inc
cmpsl
jne
adc
jns
inc
fistpl
adc
test
subb
xchg
sub
aas
sbb
arpl
xchg
push
testb
sub
sbb
xor
movsl
out
cmp
dec
mov
cmpsl
fcoml
inc
lret
cs
leave
xor
xchg
jge
sbb
sarl
dec
mov
loope
mov
test
sub
lods
xchg
in
adc
idivl
mov
mov
jnp
sbb
sub
push
jns
mov
and
add
xlat
jge
data16
adc
xlat
pop
adc
js
mov
push
ret
cmp
sbb
jp
rcrb
adc
push
lret
cmp
mov
dec
adc
sub
lret
pop
inc
cmp
fcoml
mov
cli
xor
sbb
mov
inc
das
shrl
or
call
jno
test
push
out
dec
addb
stc
inc
mul
dec
mov
subb
testb
icebp
sahf
inc
stos
pop
into
xor
cmc
mov
pop
mov
shr
scas
incb
shll
and
shl
js
pop
inc
dec
push
pop
dec
mov
push
dec
lds
xchg
inc
adc
loope
cmp
test
mov
pusha
sub
fdivrl
sbb
pop
push
out
xchg
adc
sub
repnz
movsb
fwait
sub
outsb
dec
dec
jbe
mov
repz
fidivs
mov
mov
add
pop
adc
pop
jmp
push
sub
fisttpll
idivl
aas
sbb
inc
cmp
mov
nop
cld
fwait
sbb
jnp
add
cmp
xorb
xchg
dec
cmpsl
dec
or
pop
dec
adc
cs
push
jecxz
dec
jo
leave
sub
inc
fidivl
nop
stos
mov
and
les
arpl
lea
and
loopne
pop
sbb
popa
xchg
jmp
sub
stc
and
jne
out
das
inc
popf
stos
or
jp
push
xlat
sub
movsl
mov
dec
mov
out
nop
adc
unpckhps
push
adc
xchg
cmc
out
arpl
cmp
lods
lods
popl
pusha
in
movsb
inc
sbb
aaa
repnz
push
pop
jne
test
roll
scas
push
mov
arpl
xor
pop
sbb
adc
popa
xchg
inc
ja
pop
adc
icebp
jnp
idivl
mov
aaa
sbb
dec
inc
mov
jne
and
cmc
cmp
loopne
lods
nop
sbb
push
ss
push
xchg
cmp
sub
adc
loope
jnp
lods
ja
sbb
jns
xchg
out
inc
cmp
jecxz
jo
dec
outsb
mov
pop
lods
add
repz
movsl
inc
lds
repz
ja
scas
inc
jne
dec
jecxz
add
or
lea
mov
arpl
iret
rolb
adc
jle
call
dec
dec
pop
lcall
jns
sub
mov
mov
out
add
js
jbe
mov
lods
add
push
add
sub
adc
ljmp
and
daa
jg
sti
jl
adc
mov
lret
jo
xchg
cmc
or
lods
inc
jno
xlat
fbstp
clc
pop
dec
and
xchg
fwait
cmp
sbb
sti
push
mov
out
mov
repnz
add
adc
packuswb
aad
aaa
imul
sbb
and
push
mov
and
mov
daa
mov
cmpsl
sbb
pop
cmp
adc
mov
pop
dec
mov
mov
xchg
jbe
popa
jge
inc
sbb
sbb
jl
push
daa
dec
mov
lret
jo
sti
mov
orl
push
roll
movaps
rolb
cmpsb
inc
mov
rorl
mov
mov
test
aas
add
movsl
fimuls
add
addl
mov
xor
pop
dec
jne
push
bts
decl
xchg
xlat
and
das
fimull
fwait
cmp
sbb
dec
xchg
movsb
cmpsb
ja
decb
fwait
push
jmp
cld
adc
push
jns
js
add
jmp
loope
mov
dec
popa
imul
pop
mov
mov
bnd
sti
pop
lods
test
jns
pop
add
push
pop
or
mov
ja
xor
push
xor
andl
mov
fwait
fwait
add
cmpl
test
sub
in
es
mov
mov
daa
or
add
test
call
aas
pop
adc
pop
repz
mov
mov
mov
decb
aaa
lea
or
adc
les
pop
repz
ret
fwait
popf
inc
xorb
rclb
ljmp
add
enter
scas
sub
js
popf
ret
or
mov
or
int3
ret
xorl
add
call
xchg
jo
lret
push
adc
jnp
adc
popl
jnp
loop
sbb
adc
bound
orb
or
pop
jge
xchg
sub
add
add
jns
cmp
jno
aaa
popa
cltd
cmc
xor
outsl
jnp
jmp
cmp
xorb
and
xor
xchg
loopne
mov
sub
add
lea
aaa
nop
push
mov
mov
dec
dec
and
or
xorl
sub
pop
dec
adc
out
push
pop
jbe
mov
ljmp
imul
popa
inc
mov
or
icebp
lods
push
add
ja
insb
fimull
inc
dec
add
jo
pcmpeqb
xor
dec
xchg
mov
pop
test
nop
dec
xor
imul
sub
test
lcall
pop
xchg
and
push
adc
add
pop
mov
imul
jno
mov
sbb
cmpsl
ficoms
mov
jmp
cwtl
ret
loope
xlat
pop
xchg
mov
dec
scas
pop
dec
arpl
lcall
scas
xchg
push
test
push
lods
sbb
pop
inc
jbe
pop
fldz
setnp
sbbl
mov
bound
or
out
mov
pop
icebp
inc
sub
mov
int
ret
mov
add
outsl
inc
mov
xor
or
dec
jae
inc
rclb
fwait
add
inc
stos
shlb
inc
push
xorb
sbbl
sbbl
and
lcall
xchg
lret
mov
ret
fld
mov
jge
stos
mov
pop
roll
fstpt
in
jb
repnz
adc
data16
sbbb
pop
dec
sbb
dec
xor
inc
cs
movsl
fdivr
das
dec
inc
mov
lret
adc
aad
jp
jmp
cmpsl
sarl
mov
je
ja
add
jmp
sub
pop
and
sbb
and
sti
dec
jne
xor
or
fwait
xchg
adc
mov
or
icebp
xor
adc
out
lret
pop
movl
aad
sti
popa
insb
mov
sti
lret
mov
repnz
and
mov
fisubrl
subb
loope
inc
sub
mov
sbb
xchg
mov
mov
pushf
jp
aaa
xorl
lcall
xchg
pop
inc
sbb
test
rcpps
sub
mov
jp
jno
sbb
mov
js
ja
add
andb
call
pusha
in
dec
or
sub
mov
add
mov
scas
add
inc
in
cmp
or
mov
lret
jns
ret
lea
push
jnp
add
fimull
mov
addl
and
mov
shll
xlat
sbb
or
je
ret
add
sbb
inc
sbb
cmc
dec
adcb
mov
or
fimuls
xchg
push
adc
sbb
jo
ja
mov
and
cmc
stos
push
jmp
push
imul
movsl
data16
jnp
cmp
xor
cltd
dec
adc
pop
adc
cmp
mov
mov
push
inc
das
add
pushf
pop
test
add
data16
jl
xlat
sub
adc
fbstp
inc
xor
sub
fwait
stos
add
jl
rcll
xchg
xor
filds
xchg
push
ja
sbb
push
or
inc
insl
or
xorl
mov
subl
je
push
aaa
icebp
mov
push
dec
cmpsl
fwait
add
cs
das
mov
lods
sub
or
subl
sbb
add
xchg
and
loopne
ljmp
fnstsw
in
inc
xor
add
sbb
pop
fsubrl
roll
das
scas
scas
imul
sub
inc
loope
lcall
shrb
pop
movsl
stos
push
xor
imul
out
jle
out
adc
int3
mov
add
fwait
or
rcl
lea
sub
test
add
or
mov
and
push
xor
fnstenv
movsl
push
sbb
mov
dec
out
das
sbb
inc
push
pop
pop
or
dec
adc
inc
stc
or
sbb
loope
roll
jne
incl
dec
test
xchg
cmc
xchg
aas
xor
daa
mov
add
sub
cmp
not
inc
lahf
in
adc
xor
imul
xor
dec
mov
enter
xchg
rorb
mov
add
rcrl
push
adc
movsl
xchg
mov
ljmp
sub
or
jb
jns
pop
ficompl
adc
push
shl
adc
sti
xchg
mov
inc
jg
xlat
ja
ja
popa
mov
sub
cltd
xchg
shl
mov
mov
das
sub
mov
arpl
aaa
aaa
dec
jns
adc
and
lahf
sub
push
jecxz
cmp
and
dec
loopne
inc
adc
testl
and
insl
inc
mov
push
or
fcmovnbe
add
xor
mov
cmc
das
cmpsl
sub
fwait
lahf
test
mov
repnz
xor
adc
add
mov
sbb
jnp
pop
int
pop
pop
and
jbe
loope
dec
add
adc
dec
or
dec
sbb
cltd
jmp
into
xchg
add
rcl
aaa
adc
mov
xor
aas
fwait
push
scas
pusha
adc
cmp
repz
test
test
xchg
or
xorl
mov
adc
shll
stos
jmp
mov
add
arpl
mov
xchg
test
jecxz
mov
cmp
dec
sbb
pop
push
mov
fsubs
pop
cmp
xchg
lds
inc
data16
sub
xchg
pop
or
ss
or
or
cs
rcrl
cmp
xor
scas
add
mov
xchg
or
jmp
popf
pusha
xor
push
adc
daa
jp
mov
push
and
adc
push
mov
ja
mov
mov
jns
push
imul
subl
pop
lds
xchg
push
or
push
pop
jne
mov
in
ds
push
lret
cmp
out
jl
dec
pop
cmp
jo
sti
lds
jae
and
jne
push
jno
imul
lea
mov
fidivl
cwtl
inc
pop
lret
or
lods
and
jg
and
jns
in
mov
fucomip
sub
jp
cmp
lds
push
and
dec
repz
push
and
notb
icebp
jae
lods
ja
pop
fcomi
sti
sbb
mov
imul
sbb
stc
dec
mov
pop
inc
mov
js
xlat
and
xor
add
or
dec
cmp
push
pop
out
ljmp
arpl
aaa
lea
fistps
inc
inc
orl
push
jb
ja
daa
out
jge
imul
mulb
sbb
scas
cmc
adc
shll
lahf
jp
cmp
mov
in
outsb
xchg
dec
out
lods
repz
xor
mov
mov
xchg
stos
push
movsb
and
adc
mov
pop
xchg
mov
stos
add
jb
cmp
mov
mov
mov
or
lea
adc
jbe
incl
jb
or
push
jae
test
mov
cmp
sub
pop
rcrl
fwait
jnp
movsl
xchg
fucomp
addr16
shl
inc
out
and
push
cltd
test
sub
or
aaa
and
jno
aas
lea
je
fidivrs
mov
xor
leave
sar
loope
ja
sti
pandn
xor
jb
in
pop
lock
in
jecxz
inc
pop
in
jae
pop
icebp
cs
mov
cmp
test
sbb
cmp
add
mov
aam
push
adc
sub
adc
sub
cmp
or
insl
mov
pop
xchg
cmpsl
jle
arpl
fidivrs
or
or
pop
push
add
in
pusha
imul
subb
cmpsl
and
ror
ret
into
icebp
lds
rcr
adc
lea
lret
add
sti
out
jmp
sub
lea
out
pop
std
xchg
subb
xor
pop
xchg
frstor
test
popf
pop
xchg
cmc
jns
xchg
adc
aas
and
sbb
add
addl
imul
mov
cwtl
stc
addr16
lods
adc
cmp
mov
push
aam
push
push
xor
jge
rorl
push
push
das
xchg
loopne
adc
add
add
cmp
sub
pop
data16
movb
mov
jmp
fimuls
ret
sbb
imul
lea
test
xchg
xor
out
mov
sti
jns
daa
daa
int
or
pop
sub
test
xchg
jcxz
cmc
test
mov
loope
sbbb
push
add
rcll
sbb
mov
inc
mull
sti
adc
popa
aaa
test
aaa
push
mov
adc
aam
or
pop
or
and
push
stc
shll
ljmp
test
adc
add
addb
lea
test
or
push
push
mov
push
popf
leave
or
add
xcrypt-ofb
cmpsl
sub
pop
mov
mov
dec
in
lds
sbb
dec
arpl
mov
rolb
xchg
inc
mov
inc
and
and
int3
mov
sub
jo
pop
inc
cmp
adc
adc
adc
cld
xor
sbb
sbb
leave
xor
ret
movb
adc
insb
shll
movsb
shrl
or
loopne
add
cmp
inc
or
aaa
sbbl
pop
inc
iret
jns
inc
xor
dec
adc
add
push
out
xorb
pop
dec
movsl
arpl
sbb
xchg
jp
sbb
sub
inc
imul
out
add
fidivrl
stc
adc
outsl
mov
call
jmp
mov
mov
jno
in
test
push
dec
jns
mov
cltd
mov
in
fmul
imul
out
sub
or
sbb
add
dec
dec
stos
add
hlt
jae
jne
ja
and
das
mov
inc
scas
or
and
rcr
je
inc
push
movsl
lea
imul
mov
or
or
push
jg
sub
jne
xorb
sti
stc
xor
test
adc
jge
mov
cmc
fs
rorb
jns
fwait
arpl
sbb
fimuls
cmpsl
mov
xor
sub
int3
mov
push
adc
ret
inc
mov
push
popf
xor
adc
pushf
js
push
loope
sub
popa
mov
daa
fcompl
data16
pop
cmpsl
xchg
add
or
pop
rol
dec
out
jbe
addr16
std
lret
mov
sub
shlb
add
ret
repnz
pop
addr16
loopne
mov
mov
mov
les
xchg
xor
call
sub
jle
inc
imul
adc
test
cmp
imul
in
mov
jb
mov
sub
pop
stc
popf
lret
jns
in
mov
inc
cmc
stos
mov
jecxz
out
or
filds
pop
adc
fstpt
or
imull
insb
jno
add
cmp
push
push
sub
push
daa
call
inc
sub
cmp
push
das
mov
adc
aaa
imul
mov
cmp
sbb
add
xor
test
je
aad
mov
adc
cmpsl
outsl
mov
stc
xlat
in
and
or
xor
jne
out
jge
add
jge
sbb
jns
daa
in
push
fists
loope
mov
xlat
mov
mov
or
add
shr
sbb
daa
adc
ret
inc
pushf
pop
fnstsw
cltd
push
outsl
xor
fdivr
and
sub
jmp
in
inc
inc
in
in
or
dec
rol
sbb
push
mov
or
or
xor
or
pcmpeqw
cmc
xchg
add
add
jns
or
shr
or
or
xor
mov
lret
or
or
test
icebp
add
stos
cld
push
repz
iret
xor
data16
stc
into
xor
into
movsl
jge
xlat
lahf
into
inc
push
int
int
popf
scas
sub
jmp
jl,pt
sub
or
int3
out
push
adc
adc
sub
out
sti
ret
mov
sub
jmp
in
sub
arpl
sub
pop
dec
pop
or
mov
inc
in
adc
mov
sub
in
pop
test
iret
sbb
and
jge
add
inc
outsl
or
js
jmp
movsl
ficompl
or
inc
cmp
mov
adc
fbld
lock
imul
mov
jns
add
pop
or
mov
and
loopne
xchg
lret
sbbl
call
das
add
cmc
ds
dec
inc
imul
sub
lea
sbb
sbb
loopne
fildll
rcrb
pop
lahf
jge
pop
and
lret
xchg
lret
cmpsl
mov
cmp
inc
add
jle
jo
fisubl
add
adc
sbb
addb
loope
sbb
jne
jg
mov
sub
aas
cmp
subb
xchg
push
or
lret
sub
cs
dec
test
data16
das
jnp
adc
aam
and
add
sbb
sub
and
das
inc
das
add
sbb
je
mov
mov
ss
imul
push
xchg
jl
xchg
sub
ficompl
add
and
cmp
out
or
aas
xchg
cmp
cmp
pop
out
imul
scas
lock
push
sub
test
sub
and
pop
sub
or
jle
dec
xorl
fnstenv
sub
es
jge
mov
subb
cmp
fisttpll
push
cs
adc
cmp
jmp
xchg
or
dec
rolb
add
sub
pop
test
daa
and
xor
sbbb
sbb
fistpl
and
or
ret
daa
cmp
cmp
and
sub
xchg
dec
sbb
loope
push
mov
pop
add
pop
fcompl
test
xchg
sahf
pushf
mov
loope
sub
loopne
je
cmp
pop
and
push
js
add
mov
sbb
cs
shlb
cmp
out
movsl
add
xor
xor
repnz
cltd
das
jo
jbe
cs
inc
mov
mov
out
sbb
sbb
push
cvtdq2ps
jl
pop
inc
xchg
shlb
pop
cmp
pop
jo
inc
jecxz
cmp
loope
gs
pop
and
xchg
bound
test
pop
cmp
pop
mov
jae
test
push
divb
push
cs
cs
mov
shrl
lcall
xchg
sbb
xor
out
sbb
and
xor
mov
pop
dec
fisttpll
or
loope
sarb
popl
push
mov
xchg
lods
xor
push
xchg
xchg
xchg
rcr
ret
push
lcall
adc
inc
sbb
mul
add
in
ret
xor
and
and
and
adc
lock
in
ficomps
mov
nop
and
and
push
push
xor
xchg
sahf
cld
inc
jg
push
call
and
cmpsl
or
cmp
lods
shll
push
add
aas
xlat
fsubl
or
pop
pop
call
es
lret
hlt
or
jne
cmp
mulb
mov
or
jnp
out
lods
push
stc
sbb
and
fld1
fldlg2
jo
push
outsb
inc
sbb
mov
out
fstps
rclb
rcr
or
cmp
imul
jecxz
aas
add
sbb
or
lods
push
ret
shl
sbb
push
cmp
sub
pop
sbb
adc
lock
repnz
dec
xor
xchg
sbb
stc
mov
das
scas
test
push
cmp
mov
and
prefetch
jne
sbb
or
cmpsl
xor
fstpt
xchg
adc
rolb
cmp
sbbb
pop
push
push
push
pop
sbb
ret
daa
jne
push
jo
dec
xchg
sub
ds
xor
sub
lods
fldcw
outsb
cmpsb
cs
xor
mov
sbb
gs
sbb
cmp
sub
dec
mov
mov
sbb
sbb
dec
inc
pop
outsb
add
pop
testl
sub
xor
add
add
xor
ja
sub
pop
push
dec
rorb
imul
mov
das
daa
cmp
into
xor
and
dec
mov
push
js
or
sbb
adc
in
enter
xchg
cs
push
xor
mov
adc
sub
aas
cmp
sti
pop
das
or
sbb
dec
lea
cmp
jns
inc
inc
adc
or
mov
ret
push
fisubrs
aam
sub
adc
cmp
out
out
add
es
cld
addr16
into
cs
in
shlb
into
add
lock
lock
shll
out
fdiv
add
shr
fisttpl
add
adc
push
add
jnp
add
xor
ljmp
add
rcrb
mov
xor
cmpsb
jmp
jo
ja
inc
mov
outsb
repz
xor
ja
imul
lods
inc
fsubr
adc
lock
je
shrb
sbb
add
sub
cs
shrl
sbb
xchg
psadbw
mov
fmulp
cld
sbb
or
pop
fs
cmp
fdivrl
and
fdivr
ret
inc
sub
adc
paddd
shll
adc
mov
ret
cmp
ficoml
addr16
das
jmp
fimuls
insl
jo
push
lock
jmp
cmp
out
mov
sbb
iret
loope
loope
or
rorb
add
fsubp
xor
in
or
push
in
push
test
out
dec
je
jp
push
add
movsb
out
stc
std
inc
cmp
cmp
andl
cmp
icebp
adc
loop
loopnew
mov
ss
dec
sti
add
mov
mul
or
je
mov
cmc
inc
repz
cwtl
sbb
jmp
icebp
push
cmpsl
mov
repz
out
roll
aam
add
cmp
cs
mov
das
xor
rcrl
dec
pop
popa
jmp
mov
pushf
add
shl
pop
fmull
pop
jmp
cmp
mov
rcll
or
add
or
gs
cmp
in
testb
xlat
xchg
shr
fisttpll
add
mov
jmp
or
push
loop
jnp
lods
ret
mul
or
cmp
jo
xor
cmp
or
add
call
stos
std
push
in
or
cli
ror
xlat
inc
iret
jmp
out
xor
ja
sbb
call
inc
cmp
pop
pop
in
xchg
test
popa
sti
lds
jmp
add
sub
test
aad
push
pop
add
fimull
sar
dec
pop
inc
add
out
insb
and
enter
or
mov
cld
sti
and
cmpb
mov
loope
in
cmp
pusha
xlat
repz
add
jo
jl
add
cmp
xchg
popa
or
lcall
stc
mov
aas
pop
addl
add
cmpsb
adc
sub
cmp
cmp
add
add
add
and
cli
sub
lock
add
or
adc
xchg
xlat
sbb
std
loope
popa
xchg
or
add
xorb
jnp
lret
vcmpneqps
jnp
stc
add
add
mov
iret
paddsb
shrb
out
sti
daa
add
or
add
sbb
pusha
add
sbb
pop
loope
mov
dec
xchg
sub
mov
pop
bt
mulb
mov
or
outsb
push
call
push
jbe
mov
jne
add
int3
adc
icebp
js
jp
jo
out
outsb
insb
and
push
ficomps
loope
push
cmp
in
leave
adc
jl
pop
adc
add
add
jge
dec
mov
xchg
push
mov
ss
jne
scas
push
shrl
pop
ret
mov
stc
mov
add
fnsave
add
loopne
loope
insb
into
mov
in
or
mov
mov
sarl
mov
mov
mov
mov
adc
in
sbb
xor
mov
cmp
and
sbb
adc
adc
jp
lcall
adc
ja
cmpsl
xor
cltd
popa
and
mov
dec
pop
push
mov
pop
stos
add
test
pop
jnp
push
adc
call
add
xchg
sub
dec
in
andl
loopne
jnp
or
dec
lahf
lcall
daa
shrb
sub
cmp
test
adc
cmpl
jno
sbb
and
scas
cltd
sub
aad
nop
or
cmp
mov
or
inc
xchg
or
rorl
mov
mov
add
sub
stc
mov
dec
add
add
loop
in
sbb
xchg
lds
mov
js
sar
pop
push
fs
outsl
jmp
fildl
testl
fwait
scas
out
jg
dec
push
and
sbb
jb
out
bound
jecxz
inc
pop
arpl
ret
jae
call
outsl
jnp
adc
and
add
in
fnstenv
push
inc
loope
add
cli
shrb
test
stos
push
cmp
ret
or
out
dec
mov
xor
lods
imul
scas
jmp
sbb
jge
in
dec
mov
in
inc
cvtps2pd
jns
xchg
clc
push
sbb
or
lds
popa
add
or
daa
jg
xor
movsl
and
add
xor
shrl
mov
sbb
xchg
ja
sbb
sbb
jae
imul
jecxz
outsb
jo
orl
dec
je
sub
inc
pop
xor
add
or
in
jne
mov
std
cmp
sbb
jns
add
xchg
idivb
mov
adc
sbb
mov
inc
aas
movsl
aaa
pushf
enter
sbb
stos
popf
mov
pop
bound
xchg
push
mov
or
cmp
arpl
inc
pop
cmc
movsb
addl
movb
pop
jmp
mov
ret
pop
lods
sub
cmp
pop
dec
sub
xchg
inc
cmp
adc
jo
or
pop
push
xor
add
add
pop
xor
popa
mov
popa
es
dec
sbbl
cwtl
lcall
aam
jle
aas
rcrl
imul
addb
lea
ljmp
daa
cs
nop
loop
popf
xor
inc
movsb
adc
lret
jnp
mov
loope
add
jp
cmp
sbb
movsl
inc
jmp
out
inc
dec
repz
or
lea
dec
xor
or
jb
pop
xchg
daa
fistpl
or
mov
mov
push
outsb
xor
or
xor
xor
mov
xlat
cs
mov
aaa
adc
clc
dec
je
push
sbb
inc
and
mov
nop
or
in
inc
inc
and
pop
mov
sbb
or
lods
stos
or
and
insl
fisttpll
xor
shrl
and
jo
or
add
enter
or
outsl
pop
lcall
jb
ja
mov
jne
or
or
or
xlat
mov
sti
arpl
lahf
test
insl
and
xorb
clc
testl
hlt
imulb
or
pushf
or
add
add
push
clc
mov
xlat
loopne
xchg
test
stc
ret
aas
arpl
mov
fistpll
dec
in
pop
imul
sub
adc
leave
push
or
sbb
call
out
mov
orb
or
cmp
mov
adc
mov
inc
or
loopne
clc
dec
push
adc
jne
mov
test
add
rolb
lods
jle
sub
rcll
popa
sbb
andb
sbb
aas
adc
mov
push
or
pusha
popf
mov
push
mov
push
out
mov
dec
xchg
push
xlat
mov
adcl
jns
add
pop
sub
push
je
mov
add
xlat
test
adc
cmp
faddl
pop
cmp
mov
addr16
cmc
loop
jae
imul
scas
sub
mov
jo
sbb
xlat
ficoms
mov
rorb
sbb
push
or
dec
dec
add
dec
cmpsl
cmp
adc
add
add
adcl
cs
mov
aas
dec
pop
and
addr16
imul
xor
push
decl
jecxz
sub
sahf
push
clc
rolb
inc
inc
jns
inc
fwait
dec
pop
inc
adc
add
xchg
data16
cmp
inc
sbb
mov
jne
dec
xor
leave
add
jo
dec
fistpll
es
inc
dec
lock
push
xchg
inc
lcall
fisubrl
mov
dec
mov
or
or
in
lods
add
mov
insl
push
jo
fisubl
popa
dec
jb
rolb
cmp
adc
dec
dec
rolb
lea
ja
mov
mov
fs
aaa
fistps
mov
sbb
dec
dec
int3
cmp
mov
and
and
xor
hlt
sbb
inc
xchg
jbe
rclb
sub
mov
and
icebp
ljmp
dec
cmp
push
es
icebp
mov
jo
jmp
sbb
notb
inc
test
jp
push
imul
or
ror
loopne
mov
inc
ds
in
cltd
cwtl
add
loope
push
cltd
filds
adc
pop
aas
or
movsb
lock
leave
mov
dec
cmp
cli
adc
cs
gs
sbb
sub
dec
inc
fs
call
out
enter
lahf
rol
ds
cmp
dec
xor
and
jle
mov
das
and
dec
cs
je
mov
jp
cmp
in
lahf
dec
xlat
insb
jbe
fwait
cs
es
cs
lret
aad
cmp
xor
test
test
jp
frstor
mov
or
sub
pushaw
add
jo
and
sti
mov
or
adc
shlb
pop
dec
out
sbb
xor
sbb
test
add
rolb
stos
mov
mov
vmread
dec
jl
loopne
je
adcl
addl
ret
pop
inc
sbbl
cmpsb
xchg
daa
and
es
and
jp
data16
lea
cmp
cmp
fnsave
push
xor
mov
pop
lds
xchg
xor
sub
cmc
push
xor
rcrb
pop
outsl
test
add
or
add
sti
test
or
jmp
testl
sbb
jp
call
jge
js
fldz
or
out
jae
or
pop
and
adc
or
mov
out
sbb
movb
shrb
or
lahf
pop
inc
add
lods
cmp
fnsave
sbb
aas
push
add
push
mov
pop
scas
xlat
pop
add
fstpt
loop
or
dec
or
ret
nop
stos
adc
mov
xor
lret
inc
add
inc
dec
xor
insl
sub
loope
xchg
add
sub
dec
std
xor
test
sub
test
push
cmp
jbe
jge
sbb
pop
jp
test
and
sbb
cld
jge
pop
inc
hlt
add
je
psadbw
add
imul
mov
pushf
add
sbb
test
add
sbb
pusha
stc
cmp
leave
dec
pop
adcb
mov
dec
loop
dec
loope
jb
lock
push
xchg
rorb
cmp
sbb
sbb
pop
sbb
mov
sbb
add
int
es
dec
xchg
sbb
xor
movsb
imul
jo
bound
push
add
out
sub
adc
xor
and
inc
out
cmp
xor
sbb
daa
jns
pushf
or
sub
cmp
push
dec
ja
cmpsl
fnstcw
add
xchg
imul
add
loop
inc
lcall
rorb
and
jge
sbb
or
jle
fwait
mov
push
jp
mov
or
pop
jae
dec
inc
sub
xor
dec
add
test
or
or
sbb
add
dec
mov
jne
mov
sub
lock
sub
in
aas
sub
lods
sti
jge
jnp
ja
shll
imul
lods
xor
and
orl
fs
sbb
adc
and
leave
dec
push
sub
or
lea
mov
push
sbb
ss
dec
stos
dec
jo
ds
arpl
dec
cld
ret
adc
sub
pop
sub
cmp
xlat
lods
bound
sub
pop
xchg
jo
ja
jne
dec
addl
shrl
or
loop
hlt
mov
jge
cltd
icebp
add
jns
add
rcrl
scas
xor
ret
xor
cs
sub
pop
adc
adc
xorb
cmp
std
or
outsb
add
leave
dec
or
add
stos
inc
push
out
add
xor
inc
fs
pop
xchg
mov
sub
mul
mov
movsl
lea
inc
inc
lea
je
push
and
cli
js
jno
or
dec
mov
int
cmp
jns
jnp
jnp
adcb
add
call
dec
push
jb
jge
sbb
mov
enter
sbb
inc
and
sbbb
adc
push
pop
sbb
lea
movsb
shlb
imul
fsubrs
aas
push
sub
xchg
aam
mov
jne
xor
aaa
mov
sbb
in
imul
dec
outsl
outsb
add
inc
xchg
les
push
pop
lds
shrb
inc
sub
pop
push
loope
mov
and
adc
cmp
or
push
add
pop
add
pusha
xor
sub
insb
je
sub
inc
dec
add
subl
add
insl
insl
mov
movsl
xchg
push
popf
sti
or
test
xor
adc
fisubl
cltd
lods
lea
push
adc
add
test
jp
cmc
sub
in
inc
ds
lds
mov
insb
dec
mov
cmp
stc
aaa
push
cmp
dec
mov
inc
inc
cltd
aaa
arpl
xchg
movsb
mov
pushf
push
pop
mov
pop
dec
out
cmp
mov
pop
cmp
seto
dec
add
data16
push
add
paddsb
cmp
daa
fwait
nop
adc
addb
jns
push
lea
enter
cltd
xor
mov
inc
mov
lods
ret
outsl
stos
out
aaa
xchg
lds
inc
nop
lret
test
aas
sti
push
ds
das
jl
cld
cmp
clc
sub
stos
outsb
add
jno
aas
test
in
les
and
dec
mov
popfw
cmpsl
rcrl
in
enter
mov
fisubrl
in
xchg
adc
popf
hlt
mov
leave
out
mov
dec
movsb
add
pop
or
rorl
mov
aas
cwtl
push
dec
and
das
sti
popf
jbe
mov
pop
inc
xor
xor
or
jb
xchg
dec
xchg
push
pop
pusha
fisttpl
int
push
loope
pop
mov
test
mov
cwtd
in
add
dec
aas
ret
fwait
into
mov
push
add
in
test
in
jle
bound
mov
add
loop
add
mov
push
sbb
fs
popa
or
shrl
aas
insl
dec
cmp
sti
and
and
fs
ja
fs
hlt
gs
dec
in
leave
addb
push
mov
dec
mov
pushf
shlb
popf
fmuls
pop
mov
or
add
mov
push
mov
dec
mov
daa
loopne
xor
dec
sub
cmp
ret
clc
aam
popf
in
ja
hlt
xlat
ja
xlat
cmpsb
jbe
fdivs
stc
daa
insb
jecxz
nop
daa
or
in
push
daa
add
in
cmp
push
or
adc
iret
repz
cmp
lret
rcr
insb
add
scas
inc
add
andb
test
dec
mov
push
js
test
and
and
add
subl
inc
add
fs
add
mov
shlb
rcrb
aas
add
push
jb
je
arpl
or
addl
gs
testb
and
cmp
mov
lods
xlat
sbb
jns
xchg
imul
incl
popa
jne
je
popa
outsb
addr16
inc
das
sbb
cmpb
outsl
fs
outsl
or
dec
outsb
in
add
pop
inc
jne
pop
outsb
adc
es
repnz
mov
push
outsl
dec
jo
je
jne
data16
add
imul
xlat
iret
inc
outsb
jne
inc
outsl
jb
xchg
and
insl
popa
je
push
and
fs
popa
addr16
data16
sub
and
sbb
clc
pop
cmp
mov
inc
inc
push
mov
cmp
cmp
jns
imul
mov
std
push
outsl
sub
pop
pusha
jmp
rcrl
insb
dec
popa
mov
fs
imul
xor
sub
fldt
imul
pusha
bound
sahf
mov
mov
je
inc
out
push
frstor
ds
push
xchg
notb
push
pusha
push
or
fdivrs
fcomi
add
add
insb
popa
call
cmpsb
imul
rolb
jge
add
and
inc
shrb
or
jle
xchg
loop
jb
js
xor
in
rclb
hlt
and
dec
and
jb
inc
int
mov
sbb
mov
pop
pop
sti
and
jbe
fs
and
fadds
jae
scas
and
imul
imul
add
push
imul
fs
inc
xlat
setge
je
push
push
cmp
or
dec
inc
push
jbe
shlb
jo
js
add
sub
jns
popa
rorl
call
jo
mov
fistpl
or
ds
movsl
jmp
and
adc
jo
test
xor
cld
out
inc
jb
ja
arpl
sbb
xor
adc
in
loop
popa
je
cmpsl
data16
notb
sbb
and
ds
in
scas
mov
sbb
jb
test
arpl
cmp
add
mov
pushl
push
inc
add
dec
add
cld
push
add
pop
inc
sub
add
sbb
dec
fs
pop
add
movsl
mov
add
paddusb
jnp
call
packuswb
add
cmp
pusha
cmpsb
pop
xor
cs
sub
push
inc
dec
inc
inc
adc
cs
call
add
in
movl
test
add
pop
push
push
in
inc
rolb
inc
jb
in
rolb
adc
popa
add
rorb
add
and
fwait
loopne
mul
dec
add
push
jae
dec
ja
out
ss
in
mov
ss
shrl
push
hlt
push
add
and
add
add
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
