jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
gs
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
cmp
jno
sub
mov
mov
jmp
mov
mov
xchg
xchg
inc
dec
inc
inc
dec
dec
jne
inc
inc
mov
mov
lea
xchg
mov
mov
dec
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
movl
movl
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
lea
xchg
mov
lea
lea
mov
inc
inc
dec
je
mov
mov
lea
xchg
inc
dec
je
mov
sub
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
pop
ret
add
xor
cmp
xor
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
xor
add
add
aaa
xor
cmp
xor
add
xor
xor
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
in
add
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
movl
mov
mov
mov
push
mov
push
call
call
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
movl
mov
mov
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
mov
mov
lea
xchg
mov
lea
lea
mov
inc
inc
dec
je
mov
mov
lea
xchg
inc
dec
je
mov
sub
inc
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
call
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
mov
pop
ret
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
cmp
xor
xor
add
cmp
xor
add
add
add
add
add
add
add
add
cmp
xor
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
push
mov
add
mov
mov
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
mov
cmp
je
jmp
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
xor
divl
test
jne
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
lea
xchg
mov
lea
lea
mov
inc
inc
dec
je
mov
mov
lea
xchg
inc
dec
je
mov
sub
inc
mov
cmp
je
jmp
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
mov
sub
mov
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
push
mov
mov
xor
call
mov
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
mov
mov
mov
call
lea
cmp
jno
sub
mov
mov
jmp
mov
mov
xchg
xchg
inc
dec
inc
inc
dec
dec
jne
inc
inc
mov
mov
lea
xchg
mov
mov
dec
inc
push
mov
mov
xor
call
mov
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
movb
movb
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
lea
mov
push
add
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
lea
mov
push
mov
jmp
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
mov
lea
xchg
mov
lea
lea
mov
inc
inc
dec
je
mov
mov
lea
xchg
inc
dec
je
mov
sub
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
sub
add
add
mov
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jno
sub
mov
mov
jmp
mov
mov
xchg
xchg
inc
dec
inc
inc
dec
dec
jne
inc
inc
mov
mov
lea
xchg
mov
mov
dec
inc
mov
cmp
je
jmp
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
lea
cmp
jno
sub
mov
mov
jmp
mov
mov
xchg
xchg
inc
dec
inc
inc
dec
dec
jne
inc
inc
mov
mov
lea
xchg
mov
mov
dec
inc
mov
mov
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
movl
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
mov
pop
ret
lea
push
cmp
testb
pop
sbb
addb
jle
sbb
jnp
pop
cmpl
jae
jb
sbb
dec
subl
jle
insb
andl
dec
subl
jle
insb
ja
sbb
pop
subl
insb
jae
sbb
pop
ja
dec
insb
cmpl
insl
insl
sbb
test
xorb
sub
jbe
jle
sbb
sbb
sbb
sbb
sbb
jle
jle
sbb
sbb
inc
movsl
popf
repnz
movsb
push
icebp
popf
repnz
icebp
ss
les
pop
sbb
inc
pop
sbb
cmp
sarb
pop
sbb
cmp
cmp
call
inc
pop
sbb
pop
sbb
inc
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movsl
push
repnz
push
dec
frstor
jecxz
enter
mov
push
fstp
movsl
fcmovu
lahf
pop
sbb
lahf
pop
sbb
popf
loop
push
and
into
dec
test
push
loop
pop
inc
dec
movsl
push
loop
pop
and
push
loop
dec
pop
movsl
push
loop
pop
and
loop
pop
ss
movsl
push
loop
pop
cmp
push
decb
push
loop
dec
push
movsl
push
mov
pop
sub
sbb
movsl
pop
out
mov
movsl
pop
cs
ljmp
sbb
mov
rcrb
xchg
int
sbb
movsl
push
shlb
mov
sbb
sbb
movsl
pop
push
sbb
push
loop
dec
mov
add
and
movsl
push
popf
xor
adc
sbb
mulb
or
cli
add
movsl
pop
or
mulb
or
cli
add
call
push
movsl
push
mulb
sbb
dec
movsl
push
add
push
loop
dec
xor
add
movsl
inc
negb
movsl
push
lret
sbb
movsl
push
add
push
loop
dec
xor
popf
push
cli
push
popf
push
notb
movsl
push
negb
popf
push
movb
push
popf
jb
sbb
xchg
das
icebp
icebp
icebp
movsl
push
ljmp
mov
loop
pop
mov
fisubs
pop
sbb
ficompl
dec
movsl
push
fimuls
push
loop
dec
push
sbbb
sbb
test
movsl
push
loop
pop
cmp
push
loop
dec
inc
sbbb
sbb
test
movsl
push
and
push
loop
dec
inc
movsl
inc
repnz
ja
lahf
xchg
ss
icebp
icebp
test
xor
addr16
fwait
sbb
icebp
icebp
sub
icebp
cld
movsl
testl
pop
sbb
jp
and
out
lods
lcall
jg
sbb
insl
call
sbb
sbb
sub
add
sbb
insl
cmp
or
popa
sbb
sbb
fisubrl
addr16
add
sbb
inc
shll
add
sbb
pop
or
add
cli
and
sbb
sbb
sbb
lcall
jno
sbb
pop
xchg
mov
mov
add
pop
movsb
or
int3
jecxz
add
icebp
icebp
icebp
or
add
icebp
icebp
icebp
insb
in
fnstsw
fsubl
sbb
mov
icebp
icebp
sub
in
shlb
loop
leave
fisttpll
repnz
icebp
mov
and
sbb
fcoms
and
sbb
fcoms
sbb
movsb
inc
cmc
mov
sbb
push
cmc
lcall
push
hlt
sbb
icebp
icebp
icebp
bound
repz
xchg
movsb
sbb
sbb
push
cmc
sbb
movsl
inc
out
movsb
push
sbb
int3
movsb
inc
cmc
mov
icebp
icebp
lock
hlt
movsb
push
hlt
xor
repz
fcoms
sbb
push
cmc
lcall
push
hlt
sbb
push
cmc
sbb
sub
and
icebp
icebp
sbb
inc
cmc
and
sbb
sbb
mov
movsb
push
cmc
movsb
lcall
repz
movsb
inc
repz
sbb
push
cmc
lcall
testl
movsl
decb
push
icebp
sub
pop
sbb
icebp
sbb
sbb
fidivrl
sub
jp
sbb
test
push
jp
sbb
sbb
mov
sub
pop
sbb
mov
mov
movsb
lcall
movsb
pop
and
sbb
sbb
pop
sbb
jp
sbb
pop
sbb
test
push
jp
sbb
jp
sbb
test
push
jp
sbb
sbb
mov
movsb
push
out
movsb
lcall
icebp
mov
lock
dec
fldl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
call
mov
mov
cmpl
ja
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
lea
xchg
mov
lea
lea
mov
inc
inc
dec
je
mov
mov
lea
xchg
inc
dec
je
mov
sub
inc
push
call
mov
lea
mov
subl
movb
movb
movb
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
mov
mov
call
mov
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
mov
mov
call
mov
cmpl
je
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
push
push
mov
sub
push
mov
push
call
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
mov
cmp
je
mov
subb
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
xor
add
mov
xor
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
incl
mov
cmp
jne
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
mov
call
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
mov
push
mov
push
call
cmpl
je
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
push
mov
pushl
xchg
push
jmp
mov
mov
lea
xchg
mov
lea
lea
mov
inc
inc
dec
je
mov
mov
lea
xchg
inc
dec
je
mov
sub
inc
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
push
mov
add
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
cmpb
jne
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
movb
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
push
call
mov
mov
mov
lea
cmp
jno
sub
mov
mov
jmp
mov
mov
xchg
xchg
inc
dec
inc
inc
dec
dec
jne
inc
inc
mov
mov
lea
xchg
mov
mov
dec
inc
jmp
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
movb
cmp
jae
xchg
add
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
pop
ret
add
jae
jae
js
cs
insb
and
add
push
mov
add
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
call
test
jne
mov
jmp
movw
lea
cmp
jno
sub
mov
mov
jmp
mov
mov
xchg
xchg
inc
dec
inc
inc
dec
dec
jne
inc
inc
mov
mov
lea
xchg
mov
mov
dec
inc
call
mov
pop
ret
mov
push
mov
add
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
movl
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
movl
mov
mov
mov
push
mov
push
call
mov
cmp
js
mov
cmp
jno
xchg
xchg
mov
add
dec
mov
xchg
mov
xchg
mov
mov
xchg
xchg
mov
push
call
mov
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
movl
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jge
mov
xchg
mov
lea
lea
add
dec
dec
mov
lea
lea
xchg
mov
mov
inc
inc
inc
mov
lea
dec
inc
movl
mov
mov
mov
push
mov
push
call
call
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
mov
pop
ret
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
xor
add
add
add
add
add
popa
fs
jae
js
cs
insb
add
add
push
mov
add
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
mov
cmp
jae
mov
mov
lea
sub
lea
lea
xchg
inc
add
mov
xchg
xchg
xchg
xchg
lea
lea
dec
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jle
mov
xchg
xchg
mov
lea
lea
mov
lea
add
mov
add
mov
lea
inc
inc
inc
xchg
mov
inc
call
movl
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
mov
pop
ret
add
xor
aaa
xor
add
add
xor
xor
xor
xor
cmp
add
cmp
aaa
xor
cmp
add
add
xor
xor
cmp
add
subl
jae
mov
cmp
ja
xchg
mov
mov
mov
inc
inc
mov
add
xchg
mov
mov
mov
mov
lea
mov
mov
xchg
dec
mov
mov
lea
call
mov
mov
mov
mov
mov
jmp
inc
mov
lea
xchg
xchg
mov
dec
dec
je
xchg
lea
mov
mov
inc
inc
inc
ret
mov
test
mov
gs
fcoml
jl
adc
sub
ss
sub
bnd
insl
aam
adc
dec
push
rcrl
inc
hlt
icebp
faddl
mov
jp
cltd
mov
or
pusha
sbb
shrl
dec
test
cli
cltd
lds
stos
leave
jp
mov
mov
jle
xchg
and
push
add
repnz
mov
xor
into
sub
loop
mov
cwtl
ds
call
and
faddl
pop
add
mov
into
jo
imul
mov
les
sub
js
lahf
gs
pop
pop
dec
push
rol
scas
clc
shl
and
cmp
mov
mov
xor
cmp
xchg
cmpsb
inc
mov
movsl
incb
outsb
sbbb
into
dec
and
inc
mov
aam
pop
fidivl
jae
push
xchg
and
xchg
and
fistl
and
lret
mov
cmp
push
mov
add
pop
xchg
sub
sbb
scas
cmp
fistl
in
imul
popf
add
insl
test
js
adc
in
mov
sub
insb
sub
mov
stc
xchg
mov
push
in
ret
xchg
fisttpl
mov
outsl
loopne
cmp
das
jmp
ret
dec
mov
inc
mov
int3
dec
ss
les
pushw
or
sarb
fildl
pop
fbld
mov
test
fisubrs
in
dec
shlb
lea
xchg
les
fimull
xlat
lea
fisttpl
adc
cmpsb
adc
imull
outsl
loop
scas
jge
inc
repnz
dec
cmp
fldenv
mov
fcomi
jle
arpl
xchg
lret
mov
sub
jb
sbb
jp
or
dec
std
icebp
mov
sbb
sti
push
test
mov
xchg
in
xchg
dec
js
cmp
dec
cmp
mov
mov
stc
insl
xchg
aas
xor
or
jnp
jmp
cs
dec
push
add
xor
xchg
pusha
add
lods
test
push
ss
inc
movsb
insb
std
adc
dec
call
mov
dec
xor
call
push
sbb
cs
xchg
sbb
imul
out
mov
or
jnp
xor
aad
cmpsl
cltd
or
push
sub
fisttps
xorl
pusha
cmp
mov
sub
test
dec
mov
shll
out
call
sbb
pushf
jnp
xchg
dec
into
mov
mov
xorl
jns
mov
mov
mov
es
jl
mov
add
push
add
shl
pop
pop
mov
icebp
lods
cmpl
das
push
add
jle
adc
push
inc
scas
pop
jecxz
int3
ljmp
shll
push
dec
jecxz
loope
pop
cmp
inc
mov
loop
mov
xor
dec
push
inc
lret
push
outsl
dec
cld
clc
mov
adc
mov
cmpsl
aaa
add
fsubp
cmp
leave
scas
sub
mov
aas
addl
repz
dec
nop
aam
jo
and
xchg
jae
push
js
dec
cmp
lret
dec
add
mov
xchg
lods
ljmp
ss
lea
sar
jecxz
cmp
add
stos
adc
cmp
push
jmp
ljmp
or
push
mov
pop
aad
or
or
ljmp
cltd
fsubrs
dec
push
rolb
inc
fsubrs
mul
outsl
shlb
dec
insb
inc
das
xchg
or
pop
xor
imul
cmp
pusha
xlat
xor
cltd
cmc
push
iret
es
adc
sub
mov
mov
xor
clc
orb
mov
push
jmp
sbb
scas
jo
cld
add
push
jno
push
aam
jle
inc
push
fldenv
push
ja
mov
mull
shrl
pop
out
or
popf
insl
push
cmc
xchg
cmp
iretw
jecxz
idivb
jbe
push
sub
xor
jne
mov
pop
adc
jg
imul
inc
in
inc
cli
stc
push
shlb
push
jl
sub
push
iret
pop
adc
sub
sti
jns
loope
add
xor
or
push
in
inc
lret
mov
stos
pop
adc
je
out
mov
cltd
xchg
outsb
dec
stos
pop
inc
sbb
xlat
addr16
inc
insl
mov
and
sbb
or
sbb
jb
icebp
fbld
and
ficompl
inc
mov
and
dec
fwait
ja
mov
mov
leave
nop
aas
lret
iret
pushf
push
call
ljmp
mov
bound
mov
shr
test
cltd
movaps
push
fcoml
lret
pop
xchg
insb
or
repz
repnz
inc
into
out
test
movsb
mov
aas
or
stos
mov
ja
mov
call
sub
insb
mov
mul
leave
aam
roll
adc
xchg
data16
mov
and
inc
add
sbb
addr16
orb
inc
ret
pop
rcrb
dec
xor
aad
mov
sub
mov
jg
loop
enter
inc
repz
add
jbe
jae
push
push
insl
inc
push
stos
int
ljmp
dec
push
sbb
data16
dec
jle
imul
movsb
div
sub
movsl
popf
sub
pop
xor
ss
arpl
mov
incb
xorb
nop
es
roll
sub
jno
jno
sti
stos
inc
cmc
cmp
lds
sub
ja
push
or
mov
lahf
scas
std
lds
mov
cmc
dec
mov
scas
sbb
hlt
jnp
test
inc
jp
push
cwtl
mov
push
sti
push
insl
jle
insb
inc
cltd
mov
adc
arpl
hlt
pop
test
pop
loop
incb
hlt
pop
aam
xor
pop
fildll
mov
dec
jl
and
cmp
xor
sti
imul
rcl
stc
push
movsb
xlat
rolb
stc
dec
clc
dec
jae
xchg
lahf
lret
mov
adc
mov
popa
pop
daa
dec
jge
and
add
dec
cwtl
lods
sbb
add
jmp
xchg
js
sub
sbb
pop
mov
mov
scas
cmp
inc
cwtl
fnsave
in
out
push
sub
push
pop
xchg
jg
or
dec
jnp
xchg
aas
jecxz
lret
adc
iret
loop
leave
rorb
xorl
xchg
cmpsb
movsb
mul
and
jne
push
dec
xor
dec
loope
pop
cld
or
leave
jb
andl
push
enter
jp
data16
iret
or
and
xor
cltd
sub
pop
jp
ja
mov
subl
frstor
xchg
icebp
jo
js
xor
aas
les
dec
je
popa
rclb
lock
mov
cwtl
jbe
popa
dec
cmp
pusha
cmc
mov
fwait
fs
jnp
sub
adc
popl
bound
dec
pop
outsb
sbb
jne
ja
inc
test
xchg
call
jecxz
adc
jg
mov
adcb
inc
xchg
pop
pusha
mov
dec
add
add
clc
int3
arpl
into
jmp
or
pusha
or
insb
pushf
jg
mov
xor
pop
mov
xor
sbb
lea
outsb
inc
cmp
repz
mov
and
mov
aaa
ds
xchg
inc
lcall
ss
js
pop
mov
pop
cwtl
popa
daa
xchg
in
es
negl
xchg
inc
int
cld
imul
insl
roll
mov
and
mov
cmp
loope
fcomi
jmp
test
sub
adc
inc
xchg
adc
sub
data16
cmp
fidivs
add
push
movsb
pop
pop
and
sarl
and
cmp
aas
test
iret
lahf
mov
lods
mov
out
jmp
cmp
sbb
pop
jl
sbb
push
sbb
jnp
fsub
adc
ret
clc
int
test
inc
or
mov
jp
dec
fnstsw
jecxz
ficomps
mov
loopne
stos
les
dec
push
fistl
xchg
mov
out
sub
and
icebp
mov
pop
sub
scas
popw
xchg
std
xor
data16
or
fs
add
cmp
sbb
enter
pop
jnp
pusha
sub
pushf
or
xchg
mov
mov
or
jmp
adc
mov
sbb
loope
int3
mov
pop
ja
fnstcw
jb
mov
hlt
testl
cmp
andb
repnz
pop
xlat
add
jmp
xchg
mov
pop
nop
dec
shr
ror
inc
lds
xchg
sbb
push
data16
pop
in
fdivl
pop
jg
cld
inc
iret
cmpsb
mov
std
into
and
arpl
sub
sbb
mov
dec
mov
fists
pop
fisubrl
ljmp
mov
jmp
inc
inc
or
mov
fsubrs
sub
mov
jecxz
xlat
adc
or
mov
lock
sub
xor
jb
in
sbb
hlt
fmull
mov
rclb
mov
out
mov
je
adc
lea
jnp
lods
xor
push
fsts
aad
dec
loope
and
neg
daa
pop
addl
pop
add
sub
inc
mov
popa
negl
aad
stos
cli
insl
gs
xchg
xor
mov
jecxz
lods
and
lahf
mov
lahf
das
sub
orl
sbb
jg
movsl
movsb
roll
dec
dec
cmovns
in
push
call
mov
mov
fadds
movsb
ret
pop
dec
pop
jbe
xchg
popf
push
lods
mov
or
cld
sahf
ret
cmp
lcall
out
push
call
add
jmp
mov
sbbb
in
inc
mov
push
in
add
movsl
out
mov
pop
push
fisttps
mov
cmpb
or
mov
sahf
lahf
stc
adc
inc
xchg
out
dec
sub
cmc
loop
xor
xlat
out
out
dec
add
mov
in
andl
testl
or
dec
cwtl
cwtl
cmp
std
iret
and
repz
jmp
arpl
pop
es
gs
or
cmp
push
and
je
jno
fldt
jmp
sar
sub
sbb
ffreep
sti
es
jno
xchg
das
mov
push
std
xor
negb
shll
add
push
cltd
stos
jnp
mov
xchg
dec
push
jbe
imul
jae
pop
mov
lret
mov
mov
or
pop
adc
std
stc
in
and
sub
sub
mov
cmpsl
inc
adcl
mov
jbe
fmul
add
cwtl
lods
pop
push
adc
sbb
inc
fsubrl
sbb
pop
cmp
leave
iret
inc
xchg
xor
nop
outsb
int
repz
mov
std
add
or
in
mov
jbe
insb
mov
filds
aaa
xor
outsl
out
fs
insl
push
sub
xchg
or
loopne
xor
addr16
pop
mov
jl
pop
cwtl
push
pop
outsl
inc
mov
rol
loopne
sbb
cmp
iret
testl
or
mov
sub
xchg
and
mov
outsb
add
cld
scas
bound
loop
nop
push
mov
mov
add
xchg
cli
inc
and
xchg
mov
inc
pusha
imull
pop
jle
pop
shll
push
pop
pop
mov
idiv
fstpl
jge
add
jp
in
push
mov
icebp
sub
add
lds
push
dec
mov
push
ljmp
inc
repnz
push
xchg
sub
out
clc
sub
dec
lea
cmpsb
lock
bound
shr
gs
mov
cmp
cltd
pop
in
jno
adc
sbb
mov
decl
cld
push
shll
rcll
add
sbb
xor
cltd
sbb
lret
sti
pop
pop
xchg
mull
dec
mov
mov
pop
push
ss
jmp
cmc
pop
ret
jo
insb
arpl
scas
ret
inc
ss
addl
pop
pop
add
int3
popl
pop
mov
sub
sub
jae
xchg
inc
xchg
sub
sbb
sbb
mov
addr16
sub
test
xor
cmp
inc
dec
mov
rclb
jp
pop
mov
and
movsl
mov
pop
daa
das
mov
icebp
xor
xor
xchg
jecxz
inc
mov
inc
les
pop
adc
imul
sub
jne
lods
or
xor
adc
xor
xchg
adc
mov
cwtl
bound
jnp
pusha
in
dec
leave
sbb
dec
sub
aaa
jp
sub
sub
jno
jle
shlb
lret
add
shrl
mov
ss
mov
mov
pop
mov
pop
add
lretw
out
in
sub
mov
pop
dec
pop
jns
ss
fdivr
mov
push
pusha
aam
out
push
cmp
push
pusha
mov
leave
push
xor
fsubrl
rorl
in
rorb
test
dec
cmpsl
stos
pop
loop,pt
adc
dec
out
or
int
inc
iret
inc
mov
idivl
clc
test
cmpsb
pop
add
mov
loop
bound
mov
gs
and
test
inc
inc
stos
pop
rclb
pushf
jp
cmpsb
sahf
gs
in
test
sub
mov
or
ds
push
pusha
aas
jge
mov
pop
push
adc
jle
fcoms
and
mov
test
lret
mov
and
sbb
sar
dec
mov
mov
cmp
mov
data16
cwtl
aaa
xchg
adc
mov
clc
icebp
inc
sub
and
lds
jg
test
cs
pop
cmp
or
shll
mov
xchg
jns
push
and
mov
mov
rcr
cmpl
repz
sub
adc
dec
aam
or
imul
pushl
cld
mov
jp
dec
divl
push
xor
xchg
lret
mov
mov
out
or
inc
ret
xlat
aam
fwait
daa
into
sub
lret
inc
hlt
push
int3
stos
push
jne
ja
mov
sbb
imul
push
icebp
jmp
and
ja
jns
pop
aam
add
notb
add
sub
inc
cmc
mov
jg
dec
dec
aaa
cmp
ds
sarl
xchg
adc
cmpb
fwait
test
push
push
movl
add
add
pop
jl
xor
add
or
pop
add
dec
rorl
xorb
negl
and
xchg
mov
das
sbb
sbb
xlat
cmp
mov
movsl
fs
sub
addr16
outsb
leave
xlat
out
and
jp
aas
ss
mov
pop
enter
push
ds
mov
popa
and
inc
mov
cs
sbb
inc
stos
jmp
dec
adc
in
scas
push
dec
lods
push
dec
pushf
out
mov
in
cs
add
pop
xor
hlt
cli
lods
das
xor
insl
sti
mov
sbb
andb
mov
adc
mov
sub
mov
jno
cmc
ja
or
fnstsw
pusha
push
cmp
das
adc
or
insl
inc
in
loopne
cmpl
nop
dec
sbb
inc
cmp
int
dec
mov
fsts
push
stos
dec
fildll
out
mov
jmp
fmul
mov
jl
insb
mov
adc
sub
mov
rcrl
fs
imull
push
adc
fwait
int
push
push
es
or
pusha
cmp
fadds
mov
insl
mov
scas
lret
lea
fistps
mov
pushf
mov
mov
mov
cmc
add
push
imul
mov
cli
mov
push
cmc
push
sti
push
iret
pusha
fs
jno
je
and
xor
into
or
pop
js
out
mov
or
inc
lret
cmp
mov
int3
mov
shlb
or
test
add
out
bound
mov
int
int
jecxz
mov
add
int3
jns
xchg
fs
cmpsl
add
in
popa
gs
sub
hlt
xchg
insb
and
adc
push
out
adc
push
fwait
out
add
mov
repz
test
xor
mov
dec
repnz
mov
loope
mov
sbb
fucomip
pop
pushf
repz
in
xchg
dec
pop
jb
scas
jbe
outsl
mov
dec
jge
pop
clc
lds
sub
ds
test
cld
aam
fs
sub
push
jb
in
push
push
mov
jns
icebp
xchg
adc
daa
sbb
testl
sub
or
sub
or
adc
es
imul
insb
pop
xlat
or
lds
inc
jle
push
daa
mov
pop
nop
sarb
dec
mov
and
cmp
fwait
pop
xchg
lcall
addr16
lea
jb
data16
outsb
cmp
shlb
or
bound
js
stc
or
arpl
xor
jae
adc
inc
jnp
addl
push
jno
imul
lock
cmp
pushl
mull
xor
orb
int3
jno
test
inc
inc
sub
sub
clc
mov
aad
cmp
sar
sbbl
fldt
mov
ret
and
test
dec
and
inc
pusha
arpl
rcrl
pushf
push
sub
xorl
nop
jno
insb
insb
dec
arpl
std
push
imull
stc
dec
movsl
pop
aam
into
push
call
je
fwait
out
movsb
push
sti
pop
in
movnti
cmp
pop
mov
icebp
or
rorb
or
jns
mov
lods
sub
lods
lods
jo
mov
xor
mov
insl
and
mov
addr16
cmpsb
lahf
mov
lods
xor
or
mov
fwait
popf
add
aam
stos
add
inc
adc
enter
inc
xchg
hlt
sub
and
data16
out
fidivrs
insb
dec
inc
cmp
xchg
sub
mov
jp
cmc
test
push
leave
cmp
pop
and
popa
adc
pop
mov
and
mov
jge
pop
sbb
push
cmpsl
dec
xor
out
jl
pusha
out
inc
and
cmc
dec
imul
cs
popf
push
ss
mov
sub
jg
imul
pusha
cmpsl
inc
push
out
loop
cmp
xor
not
pop
add
ret
cmpsl
sub
out
imul
rorb
or
jnp
scas
xor
out
jnp
pop
pop
mov
sbb
jne
adcl
into
jnp
ret
jmp
dec
add
pusha
out
xchg
sub
adc
xchg
add
dec
das
push
subb
lahf
xor
hlt
pop
subb
inc
ljmp
or
push
jns
int
cmp
add
push
dec
and
notb
aam
xchg
das
sbbl
dec
mov
or
jge
rolb
xchg
nop
mov
mov
pop
cmp
cli
mov
dec
add
dec
daa
nop
fdivl
pop
cmp
and
test
push
fs
cs
in
pop
jle
aas
mov
in
ja
inc
push
mov
stos
das
dec
mov
jle
lret
scas
test
adc
out
popa
in
mov
dec
mov
mov
jns
in
jno
aad
dec
jmp
fnstenv
es
jne
imul
sbb
mov
mov
in
jp
nop
in
mov
popa
jmp
shr
fistpll
shll
scas
dec
test
rclb
dec
les
loope
mov
adc
pop
lea
test
shr
cmc
int3
push
dec
out
mov
push
sarl
jmp
cmp
aad
add
mov
lret
pushf
imul
fistpl
push
mov
sub
pop
call
cmp
arpl
inc
mull
dec
sti
cmp
fs
out
fistl
es
jp
add
cmp
push
and
mov
jmp
repz
mov
pop
mov
js
pop
jecxz
inc
lret
movups
or
ffree
das
pop
lahf
stc
xchg
adc
cltd
xchg
lcall
andb
xchg
adc
add
aam
and
mov
mov
stc
pusha
dec
inc
pop
mov
and
cmp
and
orb
jg
ftst
jl
adc
add
rolb
insb
ja
cmpsb
dec
fwait
stc
mov
mov
cmp
pushf
mov
pop
sub
cltd
addr16
ja
xchg
push
subl
sbb
fidivrl
mov
mov
psllw
sarl
mov
ljmp
push
mov
inc
leave
addr16
mov
in
call
pop
xchg
cmp
int
pushf
sub
cwtl
outsb
addr16
outsl
or
dec
sub
cmp
mov
pop
imul
push
cmpsb
repnz
jg
sahf
xor
xor
psubw
xchg
arpl
ja
out
cmp
fnstenv
or
pop
sub
cmp
stc
add
hlt
and
ret
pusha
jb
int
bnd
jg
xchg
ss
je
jmp
xor
push
add
pop
mov
stos
test
fidivrs
andb
push
mov
cmpb
into
jno
mov
hlt
push
jns
test
mov
push
sbb
push
subb
int
mov
add
aaa
lret
dec
ficoml
lcall
test
or
cmp
dec
push
enter
adcl
enter
daa
cltd
pop
in
loopne
mov
xchg
fdivp
loopne
push
xchg
mov
into
jnp
jg
fcomps
or
ss
sub
inc
addl
gs
mov
insb
sub
mov
es
mov
mov
xlat
sub
pop
adc
adc
imul
gs
inc
xlat
cwtl
stos
jl
pop
xchg
pusha
cmp
inc
or
inc
das
sbb
test
or
jb
adc
xchg
adc
pmullw
lcall
mov
repnz
pop
inc
jns
mov
call
adc
fldt
cmp
in
aam
xchg
rorl
dec
lahf
into
outsb
and
hlt
lea
xchg
mov
jae
mov
mov
ret
test
cmp
jg
iret
popf
lret
loopne
add
pop
push
or
add
pop
inc
pop
pop
out
mov
mov
mov
mov
mov
sbb
pop
enter
jmp
xchg
lods
mov
mov
lock
fldt
xor
mov
jle
ss
jge
push
into
fdivl
shlb
shlb
cltd
mov
mov
inc
ds
out
dec
add
adc
incl
push
xchg
fsubrl
cmpb
leave
mov
and
test
rcr
scas
mov
and
sub
in
filds
pop
out
iret
movsb
mov
insl
mov
mov
inc
out
js
sub
mov
dec
and
pop
jb
or
add
xchg
in
sahf
xor
sub
jbe
mov
add
test
mov
or
les
and
fsubs
xchg
lret
ljmp
insl
sub
jns
out
enter
mov
jbe
xor
lods
dec
subl
mov
push
sub
cmp
pop
ret
xchg
push
lahf
and
das
icebp
add
push
sbbb
xor
add
add
ficompl
ret
or
pop
ret
fwait
in
inc
notl
add
mov
fidivrs
jbe
mov
rorl
jbe
loopne
fildl
test
cmp
cmp
mov
cmp
lds
lret
sahf
mov
push
shlb
or
pop
addr16
outsl
sarl
fcomp
inc
int
mov
cmp
cmp
lcall
mov
outsl
outsl
push
lods
arpl
fldl
nop
in
clc
pop
adcl
lahf
lret
lcall
ret
lods
jmp
lahf
cmp
adc
adc
hlt
stos
sbb
dec
xchg
aaa
movntps
das
repnz
jecxz
cmp
mov
add
sub
sbb
ret
leave
jle
std
or
mov
lds
sets
clc
fildll
push
insb
xor
popa
dec
xchg
inc
mov
push
or
mov
insb
inc
adc
mov
push
and
stos
mov
stos
cmpsb
arpl
jg
rorb
int
out
addr16
xchg
inc
push
incl
gs
dec
mov
aaa
data16
mov
jbe
jp
mov
nop
ljmp
aam
aad
mov
jbe
xchg
scas
add
cmp
imul
xchg
cmpsb
divl
dec
jmp
mov
sbb
imul
cmp
jl
lock
dec
sti
aad
jle
xlat
adc
lret
call
add
push
call
int
mov
je
test
fiaddl
or
sti
pop
fisubs
jno
es
xor
daa
sahf
lcall
stc
in
pushf
fs
xchg
ja
sub
mov
mov
and
test
push
hlt
and
jmp
shrb
jmp
push
sbb
pop
mov
and
out
loop
cli
test
popf
cmpsb
xchg
bound
imul
stc
sbb
push
jle
cmp
arpl
adc
xor
sbb
jne
pop
loop
stos
fsubs
xchg
cs
push
mov
mov
leave
jecxz
xor
jb
sahf
into
arpl
sarl
add
lods
daa
arpl
jns
inc
fadds
in
or
or
pushf
mov
mov
test
fldt
pop
dec
frstor
cmc
xor
and
lret
sbb
add
test
lret
mov
sbb
nop
xchg
clc
add
ret
lret
xchg
pop
cmpsb
pop
js
pop
inc
mov
ds
inc
stos
retw
imul
and
ja
xchg
sub
sbb
push
xlat
mov
test
add
fisttps
pop
xchg
cltd
cld
mov
ja
push
dec
int
add
push
popa
add
repz
rcrb
pop
sub
es
test
scas
push
lret
and
dec
imulb
sbb
adc
or
mov
out
push
mov
cli
inc
mov
lods
call
addb
popl
xchg
mov
adc
jl
xchg
or
sbb
insl
inc
gs
sbb
mov
out
jmp
addr16
cltd
fnstcw
mov
fstp
lds
mov
icebp
in
push
adc
cmp
cs
bound
mov
jns
sub
ds
mov
dec
call
or
aas
push
sub
jp
cmp
cltd
nop
lahf
jle
xor
jge
fwait
push
mov
xor
mov
test
adc
subb
lea
push
lret
mov
lds
and
mov
inc
pop
outsb
ss
clc
das
cltd
jecxz
adc
icebp
sbb
movsb
xor
pop
cmp
in
gs
inc
fistps
cwtl
mov
sgdtl
dec
loopne
jp
pusha
iret
dec
dec
fprem1
jnp
push
sub
pop
or
ret
xlat
xor
jmp
daa
scas
and
push
sbb
loope
test
xchg
inc
xlat
mov
jmp
sub
sarl
outsl
push
xchg
dec
lret
shlb
mov
stos
xor
sub
in
repnz
repz
cmp
lahf
js
jne
or
mov
inc
mov
lahf
mov
mov
adc
dec
inc
lahf
cmp
adc
repz
fcompp
subb
dec
nop
jbe
mov
cmp
in
aaa
pop
arpl
push
adc
sub
test
arpl
add
xor
mov
xchg
mov
inc
push
mov
and
xchg
inc
inc
sahf
mov
cmp
lods
mov
xor
inc
arpl
dec
mov
test
fmull
ja
xor
loopne
cmpl
gs
in
lret
mov
mov
mov
xlat
adc
movsl
addb
inc
adcb
fsubr
push
repz
mov
mov
push
push
add
or
enter
lods
test
jo
mov
jmp
sbbl
cvtpi2ps
loopne
sub
inc
mov
or
cmp
and
ret
ret
enter
xchg
dec
inc
push
clc
imul
dec
dec
mov
push
fisttps
mov
sarl
cmp
int3
jo
das
daa
xchg
and
jecxz
cmp
or
inc
sub
pushf
mov
inc
push
xor
jp
shll
or
outsl
xchg
ss
mov
ja
in
lahf
jbe
mov
call
dec
lahf
inc
jns
mov
xchg
pop
sbb
js
sbb
sti
cmp
dec
pop
fidivrl
dec
mov
or
mov
out
sbb
or
or
int3
mov
jle
jl
pop
inc
loop
xchg
aam
xchg
dec
push
out
push
adc
stos
addb
lcall
not
add
push
jle
jbe
dec
cmp
mov
repnz
jne
inc
jl
pop
pop
fdivp
push
mov
pop
hlt
movsl
mov
jmp
insl
in
and
pop
stos
dec
rorl
xor
lret
dec
pop
cmp
and
mov
cld
inc
cmpsl
mov
mov
push
jmp
in
bound
push
sti
std
outsb
fldenv
add
rolb
fmull
inc
mov
shrl
push
pop
fcoml
lods
popa
and
cs
adc
jns
jb
xlat
arpl
push
cmpsb
mov
call
lods
jo
ljmp
push
jecxz
inc
in
sbb
xor
out
lret
arpl
movsb
cmp
aas
xor
mov
or
js
shl
mov
and
popa
jb
xchg
jb
out
pop
mov
adc
jp
sub
jb
dec
push
mov
int
lods
cmp
jae
add
xchg
xchg
push
add
mov
pop
mov
rcrl
jmpw
cmp
jo
insb
sahf
fistps
adc
popf
jno
lahf
jge
push
icebp
rorb
mov
jno
xor
sbb
push
enter
nop
inc
jns
jecxz
jp
pop
shlb
sub
xchg
mov
lahf
xchg
sub
add
repnz
adc
test
cmpsl
ret
inc
add
adc
mov
add
out
mov
xor
sub
sarb
jge
cltd
cmp
xor
mov
addr16
sbbl
stos
mov
mov
xor
mov
shl
and
mov
mov
mov
adc
xor
push
push
cmpsl
cmp
stc
icebp
imulb
cpuid
arpl
adc
lret
sbb
mov
outsl
das
mov
out
pop
push
dec
dec
sbb
pop
lret
rcr
jl
push
das
jmp
insl
mov
mov
cmp
aam
push
loopne
push
add
sbb
fwait
sti
cwtl
mov
in
cmc
test
cmp
mov
jge
je
cmp
xor
ficompl
jge
popa
cmp
shr
or
cltd
repz
push
dec
movsb
repz
and
xchg
cwtl
test
jl
xchg
sub
repnz
daa
daa
and
cmp
pop
fs
add
cld
stos
mov
insb
ss
mov
lea
mov
mov
clc
fwait
cld
cltd
insl
nop
aaa
lcall
btc
inc
js
jno
mov
aam
xchg
inc
mov
mov
inc
popa
cmp
cmpb
movsl
vxorps
inc
lahf
mov
jge
xchg
fildl
test
push
les
outsb
imul
lds
lods
fbld
push
icebp
jecxz
rorb
or
inc
adcl
iret
out
xchg
rorl
in
not
fwait
push
stc
mov
movsl
or
inc
lcall
insl
adc
shrl
lock
leave
mul
or
in
xlat
outsl
pop
mov
out
clc
xor
push
pop
inc
arpl
ret
out
mov
pop
in
push
and
cmpsb
ljmp
dec
push
mov
sbb
mov
push
cmp
mov
xor
cltd
jo
and
mov
jmp
out
bound
and
cmc
mov
dec
rolb
xchg
shll
aaa
push
jns
xchg
push
jae
cmpsb
imul
movsl
mov
mov
dec
testb
jg
test
xchg
dec
lods
xchg
pop
mov
in
push
sahf
sahf
daa
cli
stc
pop
jge
ret
sub
xor
jb,pn
jle
dec
rclb
jns
add
ds
xchg
rolb
mov
mov
movsb
pop
xchg
xchg
jmp
push
inc
fnsave
adc
sub
jle,pn
xchg
out
scas
push
xchg
data16
sahf
sti
or
outsb
seta
cmp
test
cmp
jle
rorb
mov
push
cmpsb
lea
lcall
aas
pop
sub
loope
mov
negl
sahf
pushf
dec
inc
sub
and
adc
cli
xchg
data16
mov
rcr
movsb
inc
repnz
pop
push
inc
xor
pusha
test
dec
mov
pop
or
push
mov
dec
shrb
jae
orb
iret
xor
mov
neg
mov
ficomps
dec
int3
push
sbb
push
cmp
mov
and
aas
js
addps
and
push
fildl
xor
in
imul
ret
bound
movsb
add
pop
mov
scas
out
pusha
xchg
xor
fldt
lret
jbe
insl
stos
adc
scas
xchg
dec
push
sub
pop
dec
daa
cmp
jne
push
mov
push
jae
sub
jne
fsubs
or
xor
lock
adc
sub
inc
inc
imul
xlat
iret
inc
adc
mov
ret
and
xor
jge
xor
jns
lcall
jbe
mov
aad
aaa
cmp
repnz
stos
fcomp
push
xorl
ljmp
push
mov
adc
xor
loope
inc
in
outsb
jg
lahf
add
shrb
and
push
pusha
ds
adc
imul
inc
mov
clc
mov
mov
inc
loopne
shll
hlt
add
push
lds
jecxz
dec
sarb
popf
ret
rcll
loope
fnsave
les
inc
xor
jae
or
or
xchg
dec
mov
pop
es
pop
and
dec
cmc
adc
and
xchg
mov
inc
mov
mov
outsl
divl
adc
fs
push
out
sti
sbb
mov
and
and
fists
filds
int
or
cmp
inc
mov
lcall
mov
sti
das
sbb
testl
loope
stos
mov
sbb
mov
lods
dec
ljmp
in
fmul
aam
cmp
push
sbb
cmp
and
imul
jbe
sub
lds
adc
js
xchg
pushf
ret
in
hlt
or
mov
and
or
mov
test
sbb
sar
dec
cmc
in
dec
sarl
arpl
popa
add
pop
pop
lret
add
std
mov
mov
sub
xor
xchg
mov
stos
stc
popa
pop
adc
sbb
scas
pop
orl
icebp
mov
mov
cld
jnp
cmc
lods
dec
jecxz
push
movsl
icebp
jnp
movsl
cmpsl
clc
mov
sub
out
nop
dec
mov
cmp
out
dec
inc
add
pop
xor
clc
insb
ror
push
add
xor
and
mov
mov
pop
inc
rolb
cmp
lret
add
dec
ret
fwait
outsl
cli
jb
out
xchg
cltd
xor
shl
aaa
out
scas
test
mov
daa
hlt
movl
dec
fisubrs
aam
ss
add
xor
mov
mov
rol
cmp
nop
add
jecxz
jo
xchg
rolb
test
movsb
pop
out
invd
xchg
clc
out
push
into
sbb
inc
mov
pop
orb
aaa
add
cmc
add
repz
lret
jns
xchg
rclb
inc
xor
xchg
push
sbb
mov
vaddsd
addr16
adc
inc
fs
data16
es
sbb
dec
mov
imull
imul
test
ljmp
cmpsl
cltd
mov
icebp
std
cli
adc
hlt
into
subl
in
outsb
push
ljmp
mov
inc
adc
outsl
rcrb
add
sub
fcmovnu
mov
pop
lods
int3
jbe
scas
xchg
inc
push
pop
jbe
pushf
movsb
jnp
adc
mov
andb
pop
push
and
lods
adc
popaw
daa
cld
rcll
pop
mov
leave
mov
xchg
fprem1
cmpsl
lods
sbb
and
push
lret
add
xchg
jg
push
scas
inc
xor
jbe
faddl
jle
dec
ss
pop
mov
fs
fcompl
push
inc
cmp
xchg
push
test
lds
inc
out
push
or
cld
ja
cli
das
rol
les
bound
out
loopne
xor
mov
cmpsl
cld
mov
pop
shrb
ds
es
daa
loope
xor
push
sub
stos
xchg
xchg
dec
push
insl
jp
imul
cmc
xchg
imul
out
sbb
decb
mulb
lcall
push
and
sub
fwait
push
dec
bound
add
lods
or
sub
or
lds
fisubl
imul
out
sub
dec
jnp
inc
mov
xchg
fistpll
imul
fiadds
jp
mov
inc
shl
adc
enter
xor
sbb
lods
pop
adc
aas
inc
and
pop
xor
scas
inc
ret
lret
inc
sub
mov
xchg
xor
push
xor
sbb
pop
cli
xor
outsl
push
and
fisttpll
pop
mov
clc
xrelease
aaa
xor
fwait
xor
mov
push
out
cpuid
dec
jb
popf
les
repz
outsl
pop
push
stos
outsl
ret
pop
cmp
lea
and
inc
sub
mov
jns
jl
pop
and
insb
cmpsb
push
jns
shll
iret
ret
xchg
pusha
mov
adcb
jle
push
scas
shrb
pop
adc
cmp
push
sbb
dec
stos
and
mov
sbb
in
xchg
stos
dec
out
ret
lahf
mov
popa
sti
aas
cmp
push
cltd
in
xchg
jmp
jge
repnz
aam
adc
dec
imul
xlat
dec
or
lds
shll
loopne
pop
jmp
inc
inc
clc
mov
imul
push
mov
sahf
cmp
xor
pushf
cmp
inc
in
xor
mov
mov
xor
leave
adc
jg
xchg
dec
xor
cmpsl
jg
aad
popa
movsl
add
fmul
lods
mov
add
push
fmull
mov
int3
fs
pop
jg
repnz
push
ljmp
sbb
mov
idiv
out
dec
dec
test
inc
pusha
loopne
mov
lods
dec
pushf
fsts
mov
popf
jnp
subl
xor
pop
sbb
jae
into
cmp
push
push
sbb
xor
ret
mov
clc
cmp
loope
icebp
gs
das
sbb
popf
mov
and
je
sub
or
das
push
push
int3
add
ja
mov
aad
pop
xlat
add
xchg
xor
out
add
cltd
inc
test
imul
and
sbb
sbb
mov
ss
scas
cli
jge
inc
movb
les
xor
mov
ret
out
imul
lock
mov
jecxz
sti
xchg
xchg
push
inc
mov
xchg
mov
push
dec
push
xor
mov
aas
stos
jecxz
popf
and
loopne
shll
into
jl
icebp
jbe
ret
jmp
push
ja
push
nop
add
add
pop
fisttpl
jne
aas
mov
ja
das
mov
mov
lahf
adc
inc
pop
jno
xlat
push
cmp
add
cmp
pop
jecxz
aad
stos
sti
mov
lcall
adc
iret
add
shlb
lcall
int3
xor
mov
add
push
out
mov
cmc
repnz
repz
aas
ja
inc
sub
iret
xchg
das
jnp
ja
jl
scas
lea
xor
test
mov
out
into
pop
pop
inc
sub
jle
sub
out
iret
dec
jno
shrl
rcrb
pusha
and
sub
sub
stos
ja
xchg
pop
cmp
les
stos
dec
xchg
pop
pop
pop
jnp
js
int3
pop
enter
dec
mov
pop
in
pop
aam
pushf
mov
stos
cmpsl
add
sar
inc
xor
cmp
faddp
sub
fidivrl
xlat
dec
das
xchg
sbb
movsb
inc
out
push
nop
mov
pop
sbb
and
cwtl
daa
mov
ss
pop
int3
inc
insb
xchg
in
mov
and
loope
jp
push
or
mov
mov
push
push
xchg
and
gs
xchg
pop
inc
adc
ret
rol
adc
cmc
xchg
frstor
push
push
std
pop
cltd
sahf
xchg
jae
sahf
sbb
pop
int
idivl
adc
or
fbstp
stc
fs
bound
nop
mov
orb
dec
xor
stos
xchg
mov
cmp
out
leave
out
push
xchg
xchg
loope
cs
mov
shr
clc
xchg
cmp
and
add
addr16
inc
in
je
leave
in
aam
push
cmp
ror
mov
and
pop
sub
mov
es
leave
and
sub
jg
ret
mov
mov
push
lds
xchg
stos
in
cwtl
push
cmc
cmp
sbb
cmpsb
in
jne
push
inc
scas
dec
loop
je
mov
adc
push
lods
sub
test
adc
sbb
push
cvtps2pi
dec
imul
adc
cwtl
pop
repnz
stc
cmpsb
mov
ja
cmp
push
cld
stc
inc
and
mov
inc
add
add
test
js
test
mov
push
sti
mov
jg
mov
xchg
xorl
loop
add
xchg
jg
fistps
mov
push
cld
data16
loop
jnp
xchg
ds
pop
test
or
push
fistl
les
mov
nop
bound
add
leave
xchg
daa
cmp
and
xor
push
jl
loope
int
adc
xor
push
filds
in
sar
mov
pop
sub
scas
and
shlb
popa
jg
push
cltd
test
daa
and
xor
ss
fsubrp
sahf
cmpsl
pop
out
inc
and
sbb
das
xlat
icebp
push
ss
inc
popa
fdivrs
mov
icebp
cwtl
inc
jmp
or
mov
call
cmp
gs
mov
pop
xor
daa
xchg
sti
es
sbb
mov
mov
notl
sub
mov
int3
adc
or
popa
add
shrl
rclb
xor
js
or
push
jns
popa
inc
leave
mov
or
lret
in
outsl
out
mov
or
dec
push
mov
fcom
roll
mov
in
or
incb
fldcw
or
mov
pop
push
subb
int3
dec
pop
adc
das
aaa
xchg
push
out
std
and
movsl
stos
and
stc
pop
push
push
sahf
ss
mov
and
xor
add
shll
pop
xchg
nop
adcb
jp
jg
sub
lods
loope
mov
pop
mov
add
jo
dec
fwait
pop
mov
in
test
dec
mov
xchg
mov
cmp
push
add
gs
or
ds
inc
aas
cs
in
xchg
in
dec
movsb
add
dec
sub
xor
push
aaa
xor
xchg
jmp
repnz
into
ret
dec
mov
pop
xchg
lea
out
les
and
xor
jns
sbb
imul
cmpsb
pop
pop
adc
int
pop
stos
sub
sub
fstp
xor
lcall
xchg
es
insl
push
test
cmp
adc
jecxz
mov
jmp
scas
sbb
and
aaa
mov
pop
incl
dec
mov
rcll
mov
sbb
popf
sbb
mov
test
pop
loope
out
jae
or
popf
mov
dec
int3
jecxz
jmp
es
test
cmpsb
mov
popa
flds
xor
je
add
in
cmpsl
pop
xlat
xor
mov
and
sub
mov
or
xor
and
cmpsb
push
add
add
sbb
sarb
in
imul
adc
mov
mov
mov
sbb
ss
push
xor
mov
insb
jae
cmp
iret
sub
mov
rcr
stos
test
sbb
xchg
pop
push
mov
mov
pop
lret
cltd
jbe
xor
jb
popf
icebp
push
push
fisubrs
mov
pushf
enter
lea
shrl
iret
mov
rcll
daa
add
pop
pop
ret
mov
xchg
push
leave
popf
cmp
dec
popf
stos
or
imul
repnz
push
or
cmpl
xchg
imul
inc
or
rclb
scas
testb
push
adc
std
out
push
ja
andl
and
pop
push
mov
dec
sbb
out
lcall
lret
es
pop
add
xchg
push
dec
dec
frndint
mov
jne
fsts
dec
loope
mov
push
clc
jge
and
add
xor
xor
xor
jle
ds
xchg
movsb
sub
js
mov
andl
cmp
push
cli
mov
scas
in
fs
aas
out
mov
adc
jnp
ret
or
jl
or
xchg
scas
or
mov
fdivrl
pop
sbb
dec
dec
dec
jno
and
fidivrl
dec
dec
les
pop
and
sub
sub
pop
jbe
add
aaa
daa
aaa
test
fldenv
add
insb
int
inc
and
push
pop
outsl
pop
push
xor
outsb
push
mov
inc
add
lret
data16
sbb
pop
movsl
push
pusha
out
mov
pop
push
in
ret
popf
and
mov
idivb
and
push
xchg
jbe
out
pop
shl
movsb
jp
sbb
pop
lods
xchg
sar
mov
fdivs
shlb
dec
es
mov
mov
and
jo
aas
lods
add
repnz
mov
loop
mov
arpl
xchg
jle
orb
pop
cmpsl
cs
pop
fdivl
pusha
shl
mov
push
mov
enter
fwait
leave
pop
stc
lea
jne
pop
push
mov
pop
mov
in
leave
out
dec
lock
inc
loope
loope
cld
mov
outsl
jb
xchg
sbb
loopne
xchg
test
adcb
lahf
iret
sub
xor
mov
pop
stos
ljmp
jge
or
push
rcrl
or
pop
in
sub
mov
leave
ss
clc
cmc
popf
arpl
popa
hlt
aam
xlat
adc
sub
add
stc
push
inc
rcll
adc
mov
mov
or
pop
pop
pop
inc
jg
dec
movb
push
pushf
adc
adc
into
pop
xchg
add
cmp
incl
mov
xor
mov
pusha
data16
mov
lret
cmp
movsb
loopne
mov
or
cld
sbb
or
adc
sbb
add
inc
jg
enter
sbb
das
dec
test
add
aaa
fisubrs
mov
pop
xor
xchg
push
int
out
jo
rclb
stc
xor
or
popa
ss
sbb
pop
push
jecxz
and
mov
and
push
mov
movsl
and
mov
call
fwait
cmp
xchg
leave
add
sbb
hlt
sub
adc
jne
mov
sbb
xor
arpl
jnp
in
pop
mov
mov
xor
fwait
cmpxchg
test
inc
or
mov
adc
inc
jl
jne
or
sub
inc
cmpsb
pop
cmc
mov
or
mov
mov
sbb
xchg
pusha
inc
and
fwait
jg
jmp
jns
xlat
mov
loop
add
daa
and
and
jns
mov
sub
lret
std
and
in
ficoms
sqrtps
enter
jp
inc
pcmpeqb
sti
into
int
popa
sbb
push
sahf
hlt
dec
jl
je
xchg
jns
jno
add
mov
sysenter
fadd
add
out
push
inc
or
sub
imul
mov
call
jp
push
loope
ret
pop
imul
mov
jmp
mov
cs
lret
mov
push
test
push
ja
hlt
lahf
insl
sbb
or
pop
pop
mov
notb
and
bnd
inc
stos
fdivp
xchg
test
mov
push
in
jne
or
jno
movsl
ficoml
scas
pop
xchg
mov
sub
inc
cmp
xchg
iret
les
dec
ret
andb
mov
arpl
push
adcl
or
cmp
adc
jg
push
lods
adc
cmpsl
popf
icebp
xchg
aad
or
mov
push
scas
xorb
sbb
inc
js
xchg
aas
outsl
stos
lds
jl
pop
sahf
and
in
lret
xor
mov
sbb
es
or
sbb
movsl
adc
sub
movsl
jle
jns
test
xchg
or
mov
push
pop
adc
inc
push
add
dec
addr16
enter
mov
and
add
out
mov
filds
ds
ss
jge
pop
movsb
jl
sub
stc
jbe
dec
fwait
dec
rorb
push
ljmp
sub
insb
mov
shll
sub
adc
dec
les
rorb
repz
push
dec
mov
stos
jp
or
mov
gs
inc
das
cwtl
dec
icebp
mov
stos
lds
jne,pt
clc
jle
pop
jge
ds
add
lcall
mov
pop
cmp
push
in
ljmp
dec
add
xor
push
cmc
idiv
ret
js
lret
dec
rol
aam
out
lret
sbb
insb
mov
jne
sbb
inc
mov
jbe
and
and
dec
pop
aas
ret
mov
repz
or
imul
jp
xchg
dec
jecxz
pop
pop
stc
push
lahf
leave
cwtl
movsb
dec
push
stos
inc
xor
icebp
mov
jbe
sbb
xchg
testl
lret
push
push
mov
xor
lods
scas
xor
insl
insl
movsl
repnz
add
or
pop
cs
push
jb
test
das
cmp
add
xor
ja
fstps
in
insl
out
push
out
cmp
push
lcall
pop
out
mov
jae
push
jecxz
sbb
pop
int
enter
aad
aas
out
repz
ficoml
adc
or
dec
andl
out
mov
pop
roll
hlt
cld
test
fs
dec
pusha
fisubs
pop
xlat
aas
jb
leave
mov
mov
mov
dec
fildll
pop
pop
iret
cwtl
sub
dec
inc
subb
jl
xchg
into
adc
push
xchg
jl
adc
andl
icebp
shlb
mov
cli
cmp
mov
inc
jecxz
or
roll
das
sti
js
pop
jmp
mov
inc
fwait
sbb
adc
jnp
pushf
jmp
loope
pop
jp
inc
push
add
loopne
mov
dec
mov
outsl
pop
add
inc
fisttps
mov
cmpl
push
test
inc
push
add
or
inc
lds
popa
ss
inc
dec
fdiv
and
sub
jo
or
cmp
or
dec
aas
push
rcrl
pop
jo
bound
and
outsl
cmpb
xchg
or
fiadds
test
cmp
jle
sbb
in
lock
je
adc
adc
jge
xchg
ds
out
rol
xchg
cmp
repnz
or
jno
xchg
mov
pop
cld
push
test
mov
ret
lds
mov
out
xor
scas
xchg
dec
push
jns
mov
aad
cmpb
cld
mov
test
push
pop
sbb
xchg
fwait
mov
sub
mov
add
daa
test
and
xchg
cmp
add
xchg
mov
jne
leave
rcll
sbb
mov
cs
popa
cmp
mov
jge
cld
ss
lahf
cld
movsl
movsl
cmpsl
jne
pop
daa
movsb
push
mov
leave
sbb
cltd
push
add
fidivrl
popf
xchg
xchg
fwait
xchg
fucomi
in
rcrl
stc
xor
inc
jecxz
dec
les
push
add
aas
push
loopne
popa
ja
cmpsl
cpuid
notl
int3
sbbl
cmpb
adc
stc
es
idivb
fmull
mov
jg
test
sbb
jbe
scas
mov
push
cli
xlat
jae
lock
aad
push
lods
xor
movsl
xor
xchg
pusha
enter
fs
lea
cmp
adc
stos
shrl
sub
xor
push
nop
test
lds
in
mov
push
fdivrp
xor
jnp
dec
mov
out
mov
pop
add
mov
out
mov
addr16
inc
and
fldenv
sub
pop
fnstcw
sarb
dec
mov
in
sub
dec
cltd
mov
stos
stos
or
push
cmpsb
movsl
std
jp
aam
inc
pop
jmp
test
push
sub
fwait
mov
add
lods
and
jo
test
loopne
adc
sbb
cmp
xor
pop
cwtl
push
movl
dec
dec
fcoml
cmp
mov
xor
push
iret
sti
pop
xor
adc
imul
out
incb
popf
jae
pushf
std
mov
cli
lock
push
in
dec
cmpsl
scas
mov
hlt
mov
cs
test
mov
xchg
sub
jg
lcall
push
mov
jge
add
jnp
pusha
adc
jg
pop
inc
mov
mov
pop
fdivrs
push
repnz
xor
imul
cmp
jge
sbb
pop
gs
cmpsl
das
push
add
mov
push
icebp
addr16
out
pusha
rorb
sub
hlt
jl
ret
xchg
add
xor
sar
sti
pop
and
hlt
push
push
pop
xchg
orb
pop
andb
imul
xor
cmpsl
pop
std
push
pop
scas
or
dec
cmp
and
in
add
mov
mov
les
mov
cltd
mov
rol
push
jp
stc
cltd
sbb
mov
movsl
popa
pop
les
jmp
cmpsl
and
rclb
sub
loope
imul
lea
js
scas
out
push
dec
pop
dec
ss
mov
adc
push
lods
add
test
mov
mov
rolb
cltd
sbb
and
stos
adc
sbb
cmpsl
jbe
add
push
pop
movsb
dec
mov
xor
mov
and
aad
in
fmuls
scas
sub
fs
fistps
leave
lretw
xor
pop
mov
cmp
or
fnsave
adc
insb
cmp
push
negb
rclb
out
mov
jg
ret
rcll
sub
lods
hlt
icebp
inc
xchg
cwtl
aaa
mov
out
jge
jae
mov
dec
ret
insb
jae
jl
mov
lahf
add
jae
cltd
mov
add
leave
adc
adc
xlat
mov
xchg
adc
std
pop
or
mov
enter
fistl
mov
int
inc
scas
adc
add
jne
or
aaa
cltd
jnp
cmp
pop
jl
push
rorb
imul
push
fisubrl
or
adc
pop
dec
ja
lret
lods
repz
pop
jnp
ficompl
and
sbb
loopne
test
decl
lcall
jg
jne
mov
pushf
fsts
pusha
hlt
rclb
cmp
lret
out
jg
mov
mov
iret
xlat
sbb
push
push
or
loop
mov
jno
mov
inc
fisubrs
mov
scas
lcall
xchg
mov
cmpsl
test
daa
cmp
jge
outsl
jg
ret
sbb
xchg
fadds
lods
xchg
inc
les
es
in
or
sbb
addr16
fdivr
mov
xor
pop
inc
ret
pop
push
pop
fldl2e
cmp
mov
arpl
aaa
insl
push
dec
cmpsl
push
mov
lock
add
jnp
and
mov
add
mov
das
push
std
or
jle
dec
ja
fidivl
jl
sub
cmc
iret
or
test
sub
nop
mov
jle
mov
lret
scas
les
aaa
fldpi
sub
sbb
adc
xchg
mov
ja
pushf
mov
icebp
mov
and
ja
jns
insl
sbb
cmp
imul
testl
ds
dec
gs
sub
ds
cmp
adc
test
test
into
and
push
dec
int
mov
jne
adc
cmp
push
adc
pusha
rcr
shll
cmp
rcr
mov
cld
sahf
dec
pop
xorb
test
and
popa
lods
jge
loopne
xchg
das
cmp
outsl
and
jg
lea
daa
js
dec
cmpsb
outsl
or
out
das
sbb
pop
xlat
out
orl
and
jmp
sarb
in
divb
test
sub
test
aam
adc
add
push
repz
inc
test
std
sbb
push
ss
push
fnstsw
mov
push
leave
in
pop
inc
movsl
mov
outsb
push
popa
test
lods
aas
das
cmpsb
dec
xchg
je
out
pusha
inc
out
xor
mov
sbb
or
cwtl
adc
adc
cmpsl
fidivs
inc
mov
bound
fadds
pusha
mov
jne
mov
aas
mov
xchg
push
mov
addr16
fwait
cltd
insl
xor
adc
xor
cmp
stos
pusha
arpl
in
and
push
aad
cltd
les
ret
sbb
cwtl
xchg
std
adc
mov
add
fmulp
mov
push
sub
sub
or
lret
add
mov
dec
mov
scas
lahf
xor
jl
in
pop
test
push
push
sub
add
lret
sbbb
xchg
pop
mov
pop
add
data16
or
scas
dec
xchg
loopne
enter
push
pop
sbb
cltd
lret
iret
add
mov
push
pop
movsl
ljmp
adc
and
mov
icebp
lea
sarb
cmp
cli
ds
mov
cmp
jmp
push
pop
outsl
pop
sbb
jns
jle
pop
ja
and
lret
lahf
mov
movl
mov
negl
push
or
adc
jmp
mov
cmpsl
cmp
mov
lds
pop
int3
xchg
push
ret
outsb
scas
aas
xchg
arpl
inc
lock
mov
dec
test
mov
mov
mov
mov
jl
adc
mov
jne
adc
lea
scas
subb
cmc
sar
xchg
das
xlat
fnstsw
push
inc
or
sbb
out
mov
stc
mov
aas
push
mov
inc
ja
mov
nop
lock
xchg
scas
lods
pop
sub
cwtl
mov
xor
inc
lret
inc
mov
jae
jecxz
pop
or
adc
and
fmuls
adc
scas
shr
cmp
adc
sub
test
mov
sub
jno
dec
xor
add
adc
cli
dec
sub
test
ja
xchg
jo
filds
xlat
sbb
push
popa
mov
cmp
fldl
push
add
pushl
out
mov
rcll
mov
jae
aas
push
mov
ss
cmp
insl
lret
push
and
cwtl
adc
divl
mov
jmp
icebp
enter
enter
mov
mov
dec
dec
out
mov
mov
mov
cmp
mov
xchg
stc
call
add
sbb
sub
mov
sbbb
inc
mov
aas
dec
adc
stc
sub
icebp
add
push
and
scas
iret
mov
in
push
sti
sbb
mov
divb
mov
ja
outsl
pop
jb
or
enter
sbb
pop
mov
jns
mov
push
loope
fldcw
jmp
jae
dec
mov
fildll
mov
xor
iret
mov
mov
mov
popf
fildll
fwait
imul
lcall
and
ja
xor
arpl
xchg
imul
mov
pop
stos
mov
push
push
adc
stos
mov
push
inc
frstor
mov
mov
cmp
adc
pop
cmp
rolb
add
push
mov
cmp
add
xchg
push
xchg
imul
pop
mov
aam
idivb
dec
std
pavgb
dec
cmpsb
rcrb
cmp
jge
cmp
imul
mov
sub
rclb
negb
enter
testb
movb
divb
popf
in
aam
pop
out
outsb
adc
dec
aam
inc
xchg
addr16
int
imul
insb
loope
es
add
je
dec
jbe
sti
lcall
sub
mov
icebp
or
mov
int
xor
sbb
jb
sub
das
cmp
call
push
sub
inc
mov
jbe
inc
ja
jo
mov
stos
sub
bound
flds
rclb
xchg
sub
outsl
sbb
pop
add
data16
shrb
es
ficompl
xchg
ljmp
imul
xor
rcrl
adc
stos
sbb
clc
and
pop
inc
lock
stos
nop
xchg
jae
or
icebp
cmp
jnp
in
daa
enter
loop
dec
xor
aaa
cltd
leave
jbe
inc
cmp
iret
mov
pop
sbb
inc
jno
push
in
xchg
insl
stos
dec
mov
sbb
fs
pop
mov
pop
jb
jnp
test
dec
xor
push
dec
or
lock
cwtl
or
push
jg
rorl
sbb
sarb
jle
in
aas
movsl
inc
out
cmp
jo
sbb
aam
in
sbb
lds
movsl
icebp
test
push
jnp
or
jb
pop
push
push
scas
jmp
rorl
aam
in
push
xchg
aas
sar
inc
or
and
mov
iret
and
addr16
push
js
pusha
mov
arpl
leave
jl
sbb
ss
mov
scas
push
ret
ret
push
dec
popf
pop
scas
les
xchg
push
push
sub
lods
scas
push
cmc
movsb
add
or
inc
xor
jo
les
in
dec
mov
push
adc
jl
add
jns
jns
xor
mov
xchg
lea
and
clc
push
pop
lret
cmpsl
adc
out
jmp
push
movsl
sub
shlb
fsubl
adc
pushf
pop
insb
imul
adc
lret
xchg
push
or
sbb
add
and
mov
das
lds
fidivl
inc
es
iret
pop
add
mov
adc
push
add
xor
push
xor
mov
js
shrl
pop
sti
jae
dec
js
inc
cmpl
push
jl
fists
repnz
cwtl
cmp
mov
int3
add
cmp
fwait
cmp
aaa
mov
fiaddl
pop
lea
test
clc
imul
mov
je
inc
cwtl
adc
dec
in
insb
inc
adc
sub
sub
lods
stos
xor
mov
push
aad
pop
add
pop
add
mov
insl
mov
add
ret
lock
adc
std
cmp
xchg
jb
and
ljmp
daa
push
call
ss
ret
mov
inc
adc
outsb
jo
lea
std
les
lea
aad
pop
jg
cwtl
fists
cwtl
adc
mov
imul
in
aas
mov
imul
mov
mov
xchg
mov
loop
cmovns
int3
movsb
jl
insb
stos
adc
dec
sti
jl
and
xchg
jae
mov
sub
ret
cltd
insl
mov
aas
insb
lods
mov
enter
jae
jmp
jbe
fists
adc
sub
cli
adc
xor
jo
dec
scas
jae
mov
test
jo
sub
jnp
fdivs
fstpl
int
mov
mov
xchg
adc
pop
stos
test
xchg
cmpb
and
jp
dec
popf
mov
outsl
add
imul
pop
imul
push
ror
cwtl
jmp
push
imul
mov
adc
mov
loope
push
popa
cli
aam
push
mov
jl
fistps
jbe
bound
mov
mov
dec
aas
mov
jo
push
push
roll
and
adc
cmp
stos
hlt
dec
insb
mov
ss
inc
mov
xchg
shl
add
rorl
add
push
adc
pop
mov
repz
mov
ss
mov
sahf
fisubs
pop
sbb
iret
daa
stc
jbe
hlt
xchg
repz
inc
sub
lret
mov
dec
inc
outsb
shll
sbb
jle
pop
cmpb
add
xchg
xlat
mov
cmp
movsl
mov
into
imul
mov
jl
in
sbb
mov
adc
test
pop
loop
cmpb
leave
ljmp
rcrb
repnz
sub
push
and
jo
push
int
inc
mov
shlb
or
and
jno
in
adc
loope
lret
insb
sbb
aam
clc
scas
loope
lret
sub
gs
adc
or
popa
movswl
xchg
loopne
hlt
or
jmp
jne
sub
cmpsb
cltd
enter
sahf
sahf
jle
inc
mov
aad
jnp
mov
or
dec
test
pop
mov
and
loop
mov
sub
int3
sahf
popa
xor
fldl
aas
outsb
sarb
lret
mov
push
mov
or
cld
ljmp
sbb
andl
xchg
mov
adc
push
sub
sbb
cmp
in
xchg
xor
cld
lods
push
mov
lret
daa
test
cltd
mov
stos
out
mov
ror
outsl
mov
mov
cld
fldcw
pop
dec
out
and
rep
fstl
aas
aam
fisttpl
pop
clc
xchg
and
popa
xor
lcall
test
sub
add
cmp
jle
mov
test
scas
shlb
cli
or
adc
sarb
or
cmp
js
ja
jbe
clc
enter
int
xchg
fs
aam
les
inc
mov
mov
dec
mov
add
mov
and
adc
push
cmp
test
jg
mov
xacquire
rcrb
nop
enter
pusha
mov
nop
sbb
cmp
int
ds
mov
dec
pop
or
inc
daa
lahf
inc
std
mov
rclb
xchg
in
push
cltd
push
mov
xor
adc
sahf
dec
arpl
adc
inc
fstpt
push
cs
push
and
ds
test
dec
add
adc
mov
push
ret
sub
sti
pop
jmp
ret
sub
xchg
test
add
cmp
cmpsb
xor
mov
xor
test
sub
mov
insl
stos
cmpsb
call
stos
fcoms
in
push
ss
xchg
pop
int
inc
sub
popf
rorl
cli
push
je
xchg
pop
pop
fcoms
ss
mov
fwait
push
jae
and
inc
and
jns
and
pusha
mov
mov
jl
in
mov
mov
es
inc
mov
xchg
mov
aas
inc
jns
xchg
aas
bound
lods
repz
lods
dec
shll
je
mov
sbb
adc
sbb
hlt
stc
lea
adc
sub
movsl
pop
js
adc
mov
sbb
movsb
adc
jmp
or
mov
int3
mov
mov
fstps
xchg
imul
xchg
shrb
iret
sti
repz
jmp
push
adc
stos
sbb
sub
xor
or
xchg
ret
inc
push
std
in
enter
das
xlat
aad
mov
imul
shll
aas
sahf
pushf
adcl
sarb
add
pusha
jg
cs
mov
jp
int
jecxz
pop
dec
pop
mov
movsb
repz
pop
movsl
adc
inc
outsl
cmpsb
add
leave
lahf
mov
cmp
aad
sahf
mov
mov
adc
cmp
or
mov
test
sbb
jmp
xor
xorl
sub
test
sbb
outsb
fisubrl
out
dec
sub
xor
stos
and
je
std
icebp
nop
aaa
rorl
in
lods
dec
pop
inc
nop
das
mov
pop
mov
adc
push
mov
out
insl
sub
fbld
lods
into
push
sbb
out
push
inc
sub
push
cmp
inc
sub
shll
loopne
jne
xchg
sbb
sbb
cwtl
scas
mov
push
dec
sbb
jle
add
arpl
xor
mov
inc
xor
jp
daa
sbb
ds
in
mov
inc
dec
daa
rcrl
dec
neg
pop
xchg
in
add
inc
lahf
xor
push
cmp
leave
jbe
in
push
inc
repz
mov
push
imul
fwait
cmp
mov
cmpsb
pop
outsl
outsl
gs
inc
lret
pop
inc
cs
ret
jecxz
push
mov
orb
pusha
dec
jns
aad
and
inc
jg
jp
jmp
adc
roll
jg
lods
mov
add
jmp
xlat
pop
fs
adc
jno
or
sub
push
pop
mov
lcall
rol
pop
push
sbb
pushl
outsb
shlb
cmpsb
cltd
jle
mov
mov
aas
xor
mov
js
xlat
jle
cwtl
aas
pop
je
int3
js
in
call
adc
data16
jnp
xchg
scas
loope
or
pop
mov
add
cmp
xchg
xchg
push
or
rcll
hlt
pop
jge
jl
xchg
pop
cs
cmp
xchg
rcl
out
lea
in
jle
fistpll
mov
mov
stos
dec
scas
rorl
mov
outsl
cmp
scas
fwait
push
sub
pusha
xor
xor
mov
aad
sbb
mov
int
xor
mov
test
dec
mov
pop
pop
sbb
jp
enter
mov
aad
dec
ds
mov
cmp
dec
inc
adc
inc
outsb
lock
repnz
pop
mov
ret
and
cmp
outsb
enter
mov
sti
mov
sub
in
loopne
add
jnp
or
push
mov
mov
js
push
xchg
mov
in
push
fistpl
cld
jo
notl
sub
inc
jae
push
mov
xlat
pop
xchg
sub
push
add
rcll
stc
mov
popf
pusha
js
notl
ret
das
lock
push
xor
xchg
std
addr16
fistl
inc
or
jl
bound
sub
stos
or
or
add
lret
je
cmpsl
and
ss
sbb
in
mov
pop
inc
cmp
cmp
movsl
inc
fbld
lods
xor
or
decl
adc
lds
push
xchg
leave
adc
andl
stos
push
loop
xchg
mov
lret
repz
hlt
sub
add
data16
dec
std
dec
mov
jae
xorb
aam
mov
mull
fstl
sub
sub
out
mov
add
jp
pop
jne
mov
aad
or
jno
pop
testb
leave
push
mov
sbb
int3
and
dec
movsb
adcb
add
ret
dec
cmp
fsubrl
and
test
popf
stos
inc
pop
mov
adc
pop
jl
out
stos
lds
sarb
sbb
inc
push
scas
xor
mov
xor
or
xchg
ja
fs
adc
mov
dec
fdivl
ljmp
mov
or
mov
test
sbb
cmc
cmp
je
sbbb
test
mov
cmp
dec
insb
shr
and
bound
std
inc
shlb
push
fs
inc
mov
lds
int3
adc
stc
inc
aad
rolb
das
cwtl
pop
xchg
rolb
cmp
sbb
fwait
adc
cmp
pop
and
fnstenv
popa
mov
mov
shl
cmp
loope
xchg
lret
lds
dec
mov
test
fwait
push
imul
in
pop
aaa
or
lods
push
stos
lods
jl
je
mov
mov
and
pop
dec
inc
shlb
mov
out
add
and
mov
sti
outsb
xchg
dec
dec
and
or
scas
nop
sub
inc
mov
cmp
je
cltd
mov
xchg
loop
cmp
dec
inc
xchg
mov
dec
nop
and
sub
in
xchg
stc
pop
subl
add
shlb
out
adc
jo
mov
inc
mov
fucomp
mov
inc
mov
inc
push
inc
inc
in
je
jge
inc
cmpsl
push
lret
jb
test
add
push
push
adc
dec
insl
nop
pop
aas
jbe
pusha
rolb
loope
ds
shl
repz
aaa
js
movsl
cmovae
sbb
movsl
mov
push
mov
imul
ja
mov
xor
adc
aaa
jmp
enter
outsl
adc
inc
imul
inc
aam
cmpsb
je
jl
ret
shl
lret
and
into
xchg
adc
dec
cmpsb
pop
inc
out
fsubrs
aas
mov
pop
aaa
push
mov
in
and
mov
mov
adc
jmp
insl
fdivrl
cmpsl
std
ret
jecxz
pop
jnp
imul
icebp
inc
icebp
jecxz
outsl
ja
sbb
sbb
jne
lods
dec
ss
mov
mov
lahf
das
lea
sub
mov
aaa
popf
mov
mov
das
pop
sub
insb
jp
popf
jo
out
jle,pt
push
xlat
xor
push
sub
loop
sub
add
inc
inc
mov
scas
sbb
or
movsl
xor
gs
or
leave
lds
js
in
data16
sbb
aad
fucomp
pop
jne
mov
cmc
sbb
sbb
pusha
fucomi
inc
test
je
ret
sub
dec
mov
out
mov
notb
jbe
mov
or
lods
lds
std
lock
in
int3
push
push
pushf
sub
orb
mov
xor
jbe
loop
clc
add
jo
adc
pop
add
test
in
movsl
pop
out
lahf
leave
jl
loope
insb
ret
int3
out
fistps
pop
sub
xor
pop
std
fldcw
je
sub
jbe
in
jmp
jecxz
xchg
sub
xchg
sahf
and
xchg
fs
aam
cmp
jmp
jbe
push
scas
inc
push
mov
and
add
lret
and
dec
ljmp
mov
xchg
mov
gs
aas
lock
fbstp
jns
lods
adc
add
imulb
sbb
jb
jns
mov
sub
push
inc
add
sbb
push
jo
rol
jp
lock
adc
mov
popa
stos
sbb
cmp
fistps
sti
inc
xor
sbb
mov
push
cmp
mov
int
jle
pop
sub
enter
and
jns
adc
addr16
jb,pn
push
cli
pop
and
add
push
xchg
sahf
cmp
mov
xchg
push
and
dec
xor
sbb
add
inc
pop
adc
daa
shr
and
pushf
aaa
mov
nop
sbb
jge
adc
or
lcall
cmp
and
push
fistps
mov
xchg
adc
sbb
int3
loop
nop
mov
repz
lret
nop
adcb
les
out
insl
cmp
sbb
cmp
lods
push
out
adc
addr16
jne
xor
push
test
es
xor
loope
int
adc
loopne
dec
pop
mov
sahf
stos
icebp
das
repnz
push
not
inc
pop
icebp
sub
jl
imul
pop
pop
js
mov
es
or
pop
xchg
addr16
call
loope
push
mov
inc
dec
ret
call
jno
lds
mov
cmp
fcomi
cmp
mov
sbb
xchg
loop
cltd
pop
adc
jo
sbbl
push
pop
sbbl
inc
jecxz
fs
nop
loope
sbb
xchg
pusha
mov
mov
pop
sbb
mov
adc
mov
jp
or
push
add
arpl
test
cmp
sbb
push
sub
jb
cld
xchg
xchg
mov
fnstcw
dec
sbb
xor
sbb
fisttps
and
enter
outsb
arpl
pslld
xor
mov
push
sub
xchg
and
cli
cmp
repnz
push
sbb
push
fbstp
mov
int3
and
jge
out
jecxz
loope
and
daa
xchg
leave
pop
push
jae
insb
mov
lcall
test
mov
jne
jecxz
or
jae
imul
popa
mov
out
cmc
sbbl
mov
sbb
sbb
std
xchg
jbe
cmpsb
mov
movsb
pop
imul
in
mov
mov
ret
stc
fdivl
faddl
sub
mov
lahf
cwtl
jno
mov
ret
sti
push
fnstcw
cmc
cmpsb
push
mov
adc
mov
dec
pop
add
loope
mov
dec
dec
aaa
jns
stos
loopne
xchg
mov
adc
sub
test
cmpsl
popf
loop
push
outsl
test
cmp
ds
fimuls
sbb
dec
or
xor
shll
decb
jnp
int3
sbb
dec
push
aaa
push
nop
fs
sbb
sub
dec
bound
sub
in
sbb
add
sbb
xor
xor
mov
ljmp
cwtl
jl
and
out
and
inc
test
push
mov
push
sbb
cmpb
lret
xlat
int
insb
jne
cltd
pusha
add
dec
sub
out
lahf
scas
push
sbb
fidivrs
dec
mov
sahf
stc
pop
or
jne
inc
mov
cmpsb
or
inc
lahf
lods
cwtl
cmp
adc
cmc
ret
xor
mov
xchg
mov
test
fldl2t
xor
popf
inc
mov
addr16
int3
sbb
stos
xchg
push
jbe
iret
dec
jb
lods
incb
pushf
jno
cs
or
mov
cs
pop
ja
jge
aas
mov
pop
jecxz
inc
jl
clc
dec
popf
les
outsb
cmp
mov
inc
jns
jp
pushf
adc
or
pop
lcall
add
adc
inc
mov
scas
shlb
fs
push
lcall
mov
cmpsl
adc
popa
fcomps
push
int3
outsl
cmp
and
jl
pushl
repz
shlb
test
xchg
sub
fwait
ret
sub
add
jle
stos
xchg
push
aam
addr16
and
push
xor
lret
jmp
out
insb
nop
jle
jmp
addr16
nop
aaa
outsb
pusha
mov
cmp
adc
fcomps
daa
sbb
clc
fwait
sbb
stos
push
roll
jo
test
cmp
ja
jl
mov
cmpsl
je
inc
adc
mov
add
xlat
push
mov
adc
pop
jecxz
xor
mov
lock
or
mov
ret
aas
and
dec
roll
jbe
inc
xchg
popa
dec
jbe
ljmp
gs
and
ja
int3
and
mov
and
mov
insb
push
lea
daa
dec
fs
scas
jns
ja
xchg
insb
jno
cmp
mov
mov
int
mov
jne
jae
jg
add
aad
sub
cmp
mov
jecxz
imul
cwtl
jg
inc
mov
cmp
into
out
jns
xchg
and
sbb
out
jbe
repz
movsl
loope
jl
imul
mov
cmp
mov
add
or
mov
and
adcb
sar
arpl
mov
out
xchg
sar
dec
insb
or
sti
je
addr16
test
movsb
bound
cltd
imul
add
xchg
mov
pop
adc
shll
outsl
stos
ret
jns
loopne
sub
mov
push
push
jb
mov
insl
fcoml
mulb
sti
push
jbe
add
mov
jo
dec
data16
ret
mov
sbbb
cwtl
lock
in
mov
lds
mov
divb
add
fsubs
pop
xchg
xchg
sbb
xchg
fisubl
orl
cs
fmuls
sarb
loopne
jge
jno
push
and
or
xor
jo
xor
es
add
imul
sar
shrl
push
adc
aam
push
pushf
jg
das
lret
fisubs
sub
sbb
repnz
rorl
cwtl
ljmp
mov
dec
push
inc
adc
mov
mov
inc
sbb
add
add
clc
inc
sahf
add
inc
jo
push
sub
mov
adc
aam
mov
xchg
rcr
cltd
pushf
dec
or
mov
test
mov
out
inc
or
push
std
outsl
out
xor
xchg
lock
jecxz
dec
repz
lcall
cmp
jmp
sub
add
mov
arpl
fmull
fcoms
adc
mov
fldenv
lds
pop
pop
icebp
rclb
aas
imul
pop
push
popf
stc
inc
jg
cmp
cmp
cld
pop
ds
sahf
rol
out
adc
imul
movsb
lods
mov
xor
jo
lcall
stc
cmpb
es
inc
inc
out
or
or
stc
pop
test
mov
ljmp
xchg
stc
lret
out
push
mov
sub
add
test
loope
fsubr
adc
pusha
push
sti
dec
aaa
mov
stos
lret
loopne
sub
pusha
out
push
xchg
and
jne
push
loope
lods
out
cmp
daa
std
jo
stc
xchg
popa
sbb
xor
mov
sub
outsl
mov
out
mov
or
test
shll
div
lret
dec
adc
sub
sub
jg
adc
data16
scas
push
sbb
cmp
jne
jle
daa
hlt
sbb
lds
adc
inc
lcall
jp
pusha
push
mov
idivl
mov
inc
rcrb
imul
movsb
mov
addb
dec
in
push
add
mov
pop
cmp
pop
push
mov
cmp
jl
fnstsw
fimull
sbb
inc
imull
scas
jno
mov
mov
push
dec
mov
int
arpl
arpl
push
mov
mov
adc
add
cmp
dec
xor
into
shlb
inc
ret
scas
int
mov
jge
sbb
adc
sub
pop
in
cmpsl
add
xlat
sbb
cwtl
adc
into
in
aad
lret
call
push
push
clc
aad
or
xchg
sub
mov
pusha
pop
out
pusha
call
jno
sti
or
aam
scas
shl
mov
push
xchg
lret
pop
xor
jnp
xlat
fs
and
ja
fs
dec
ljmp
mov
mov
in
and
ficompl
jg
sbb
mov
pop
push
outsl
out
inc
jle
mov
sub
insl
ja
lcall
dec
rol
in
imul
ja
inc
push
int
jb
lock
ret
call
inc
ljmp
out
xor
in
ret
fldenv
sbb
pusha
gs
mov
gs
jecxz
push
jae
add
sub
xor
xchg
shrb
inc
nop
jecxz
je
ljmp
shll
rclb
psubw
int3
or
std
fistps
mov
mov
lcall
xor
mov
fwait
outsb
push
lret
mov
dec
push
pop
pop
scas
push
push
push
std
sbb
dec
cmp
lock
or
push
imul
fcompl
sub
cmc
negl
push
push
cmpsl
nop
bound
bound
jge
fldt
inc
jne
pop
push
gs
fwait
pop
loopne
or
imul
xchg
mov
dec
pop
pop
push
fcomps
adc
xchg
xor
jp
outsl
aam
rcl
add
daa
mov
xchg
out
dec
adcb
cltd
xchg
ja
adcb
sbb
cltd
mov
sub
out
sti
cwtl
add
cld
pop
mov
sub
addr16
push
repz
cmpsl
repz
scas
daa
mov
xchg
push
cmp
and
std
cmp
xor
mov
sub
imul
pop
jnp
loop
add
movsl
mov
fs
nop
inc
scas
sti
pusha
in
sub
movsl
outsb
xor
adcl
xorl
mov
aam
push
iret
or
dec
add
add
xacquire
popa
adc
fs
imul
and
cltd
imul
daa
pop
fisubrl
dec
call
add
add
ffree
cmp
enter
xchg
dec
or
stos
add
fadd
mov
iret
stos
xchg
cmp
dec
cwtl
addr16
add
xor
stc
add
ret
cmp
lcall
decl
xor
in
lods
push
imull
popa
mov
clc
das
sbb
inc
add
mov
enter
dec
push
lods
fcomip
cmpsl
iret
adc
cmc
mov
and
xor
mov
add
popa
outsb
outsl
in
outsb
aam
jbe
push
sub
daa
jmp
out
add
cmpsb
pop
or
shrb
andb
jno
popa
push
push
xlat
jnp
or
movsl
xchg
add
imul
sub
pop
sbb
add
repnz
mov
pop
add
pusha
insb
lcall
fidivrs
jnp
int3
iret
sub
test
jno
sub
ds
push
jmp
insb
xor
cmp
dec
dec
jnp
mov
mov
iret
jp
mov
xlat
jb
fmuls
rorb
dec
inc
inc
add
imul
sub
cmp
push
fldl
push
fldenv
push
mov
rcrb
iret
rolb
repz
pop
xchg
clc
xor
cmp
int
fildl
and
imul
pop
sbbl
and
popa
jl
insb
ret
jo
mov
jb
loopne
stos
add
dec
int
imul
popa
lods
jecxz
into
xchg
dec
jne
outsl
shlb
cmp
stos
pop
ret
mov
leave
popf
xor
fstl
xchg
and
fnstenv
mov
fbld
lds
sub
pop
cltd
push
jp
test
mov
dec
out
fcoml
enter
mov
lea
scas
sub
adc
mov
std
cmp
push
pushl
adc
sub
jo
and
popf
jae
ja
in
inc
mov
xor
and
add
std
lock
xor
sbb
in
sti
mov
inc
loope
fdivp
leave
in
jge
mov
shll
dec
outsb
jl
adc
add
rorl
ljmp
pop
aas
ds
leave
sti
dec
xor
scas
data16
nop
js
lahf
ja
or
enter
adc
jno
int3
pusha
mov
jmp
mov
mov
das
pop
push
sbb
sbb
mov
popa
mov
pop
sub
ss
fcoml
or
mov
stos
loopne
sti
cld
jmp
loopne
xchg
ss
insl
push
and
cmp
push
out
fcoms
inc
push
xlat
jl
jno
sub
into
dec
jno
inc
je
xchg
or
xor
push
mov
ret
ljmpw
aad
xchg
sub
pop
xchg
cmc
mov
push
or
cltd
mov
mov
sti
inc
insl
neg
pusha
sub
dec
iret
fidivl
push
jecxz
and
addb
mov
xchg
stos
stos
sbb
pop
fsubl
inc
mov
mov
lds
push
lcall
insw
jb
dec
sub
pop
dec
xor
mov
mov
mov
cmp
ljmp
stos
inc
mov
sub
and
push
pusha
cs
popa
fldl
dec
ljmp
js
push
xchg
cmp
out
cld
lcall
imul
lds
jmp
sbb
loopne
daa
das
imul
jg
lock
xlat
and
xchg
mov
adc
out
dec
popa
fwait
add
mov
push
xor
push
loopne
jne
and
sub
cmc
cld
push
mov
xchg
aad
jmp
dec
aad
adc
and
es
rcr
cltd
push
xchg
dec
negl
adc
cmpsl
or
xchg
daa
inc
cli
lcall
mov
inc
cmp
pop
imul
jae
mov
xor
inc
fimuls
mov
and
call
sbb
mov
xchg
jge
pop
mov
fwait
push
xorb
fidivl
adc
mov
out
aas
out
sbb
dec
jg
iret
fdivs
popf
mov
dec
rolb
cwtl
lock
fs
push
test
fnstenv
sub
adc
pop
fsubrs
les
jo
xor
and
jecxz
test
dec
loope
popa
pop
cs
push
mov
jo
sbb
popf
out
xchg
cmc
aas
push
lcall
dec
movsl
fnsave
jp
cmp
scas
nop
pop
aam
and
mov
out
imul
fcoms
xchg
lret
movsl
movsb
jnp
xchg
xchg
inc
loopne
xchg
imul
cmp
bnd
inc
int
les
lahf
loopne
jp
jmp
lret
lret
ret
ja
stos
sub
popa
fs
pushf
adc
mov
std
jl
or
mov
mov
pop
mov
jns
lods
sbb
mov
sbb
push
pop
dec
pushf
xor
test
mov
and
rorb
loopne
gs
js
mov
add
xor
push
mov
int
adcb
sub
int3
cmp
and
out
imul
fcoms
lret
in
test
sbb
push
mov
fnstsw
mov
lahf
sub
cmp
push
mov
pop
repnz
push
les
mov
sbb
std
cwtl
fisubs
insl
bound
sub
imul
xor
loopne
sub
mov
or
mov
hlt
ret
fcomp
imul
adc
gs
addl
cld
adc
xchg
inc
pop
subl
mov
cs
cmp
mov
cli
hlt
movsb
lea
in
enter
dec
mov
lret
jle
cmp
cmpsl
mov
sahf
jne
int3
fbstp
xchg
jb
cmpsl
dec
mov
jne
mov
push
dec
inc
jl
lret
xchg
jb
iret
mov
xor
fs
sbb
pop
int
repnz
cld
xor
mov
mov
mov
adc
pop
cmc
dec
jmp
xchg
sub
aam
jae
jmp
pop
leave
dec
xchg
jns
inc
or
add
dec
rolb
call
xchg
dec
xchg
rclb
jo
or
outsl
add
xchg
seto
jmp
mov
push
pop
push
mov
pop
setnp
adc
mov
imul
movsb
cmp
or
es
es
icebp
sbb
std
incb
test
loop
and
iret
loopne
call
addb
inc
push
ds
mov
dec
push
mov
mov
sarb
jecxz
sbb
insb
fidivrs
adc
icebp
popf
subb
aas
push
cwtl
or
dec
sbb
cmp
pop
pusha
loope
inc
or
pop
into
pop
clc
clc
stos
cmp
enter
repz
cld
dec
mov
xchg
fwait
loopne
jmp
mov
mov
arpl
jns
pop
icebp
inc
sub
in
aam
mov
dec
xor
push
ja
push
xor
lods
fnsave
dec
and
je
push
aam
jge
mov
fiaddl
mov
xchg
adc
inc
push
lret
shrb
call
pop
stos
mov
pop
add
mov
ss
ljmp
sbb
cmp
jg
mov
pop
adc
mov
push
daa
push
and
ljmp
hlt
push
or
mov
popf
sub
rclb
imul
dec
in
dec
push
mov
imul
fimuls
pop
out
xor
sub
dec
or
mov
in
mov
adc
and
sbb
sub
movsl
ret
xchg
or
and
inc
in
push
mov
js
test
or
into
sbb
jns
lds
push
sti
or
push
mov
jmp
sub
dec
fwait
out
enter
add
pop
xor
fs
hlt
das
push
rorl
ret
mov
push
push
sti
mov
push
fwait
cmp
pushf
and
stos
adc
mov
fwait
adc
xchg
test
or
sub
push
jno
cwtl
test
pop
xchg
jl
add
rcll
lea
cmc
inc
mov
adc
and
into
cmp
jp
sub
jge
loop
pop
je
in
jecxz
aam
cmp
daa
push
scas
imul
ljmp
push
jae
adc
movsl
mov
push
insl
jecxz
jnp
xor
dec
jmp
add
inc
orl
enter
add
loop
lds
repnz
sub
xor
and
cmc
sbb
push
inc
lcall
push
cmp
int
xchg
insl
and
jl
lock
pop
pusha
pop
fstl
fistl
xor
andb
insb
call
push
das
mov
lret
mov
mov
xchg
cltd
pop
adcb
pop
push
dec
movsb
mov
inc
cmpsl
fdiv
inc
jge
das
xor
dec
inc
jle
shll
les
fdivrs
dec
lods
cmp
repnz
fcmovbe
out
pop
pop
or
mov
data16
xor
sub
cmpl
cmp
sti
aaa
scas
cmpsb
testb
sub
push
adcl
popa
fiaddl
pop
jmp
pop
int3
mov
mov
mov
or
push
inc
mov
clc
push
addr16
call
es
insl
mov
clc
jecxz
sbb
xor
popa
pop
jo
mov
lods
in
imul
ds
into
aaa
sub
xor
pop
in
mov
lahf
push
xchg
jecxz
inc
call
sti
mov
and
lahf
xor
pop
mov
jae
add
push
mov
jecxz
leave
mov
insb
push
idiv
insl
je
mov
mov
pop
mov
arpl
cs
xchg
out
shll
lret
mov
cmp
add
xlat
pop
or
pop
adc
imul
push
movsb
mov
stos
stc
out
jns
sub
sbb
and
cmpsb
repz
fstps
negb
aas
daa
imul
mov
jo
jge
in
inc
ret
test
int
es
out
fdivl
dec
and
imul
mov
add
sbb
out
ret
add
leave
leave
mov
imull
jae
adc
les
fcmovnb
repnz
dec
fwait
insb
cmpsb
adc
adc
xchg
cmpsl
and
xor
or
dec
sub
pop
jae
add
movsl
ficoml
pop
dec
sbb
and
jb
mov
sahf
scas
fistps
insl
leave
repz
xlat
decb
in
sub
jecxz
js
adc
adc
xchg
fsubrl
lahf
aad
inc
and
cs
add
fidivs
jecxz
inc
aas
fstpt
cmp
iret
cmpsb
and
iret
push
pop
dec
dec
ss
push
daa
arpl
xchg
pop
add
in
sahf
outsb
or
cmpsl
sbb
pusha
imull
mov
insl
jmp
sarl
iret
jl
dec
nop
enter
mov
mov
push
adc
mov
rorb
in
and
ja
daa
mov
push
cmp
jmp
pop
outsb
fs
inc
cwtl
mov
dec
mov
sbb
or
lahf
xor
mov
add
jns
jae
mov
in
cmpl
cs
cmp
cmp
into
stos
or
jbe
stc
test
or
movsl
and
or
call
mov
jl
jg
or
pop
add
ret
mov
push
add
shrb
mov
push
into
sbb
push
sbb
fldl
jae
pushf
jae
es
sbb
jg
push
mov
xlat
cmp
push
lea
test
jno
mov
negb
xlat
inc
cmp
cmp
xor
scas
mov
lea
mov
jl
or
or
jno
mov
loopne
push
inc
nop
stc
test
inc
inc
and
lret
xchg
movsb
and
iret
mov
mov
fcmovnu
mov
in
xor
pushf
rcrb
inc
sbb
pop
fwait
cmp
in
mov
xchg
xor
inc
add
jns
arpl
ja
pop
inc
cltd
adc
jmp
add
cmp
adc
cmpsb
adc
insb
mov
test
jge
cmp
loop
shr
xchg
mov
and
adc
xor
fsubrs
mov
sub
cs
adc
add
leave
stos
lahf
popa
stos
push
pop
sub
jp
in
push
xor
aam
pop
rolb
pop
xor
inc
dec
pop
mov
xchg
pop
cmpsl
inc
outsl
hlt
add
push
cmp
icebp
push
mov
sub
and
sub
loop
js
std
and
mov
lret
shlb
adc
and
push
out
repz
cld
loop
jp
add
insl
loopne
pop
push
mov
aaa
mov
adc
or
iret
mov
mov
adc
stos
shll
cmpsb
jl
shl
fldenv
mov
cltd
and
adc
mov
imul
mov
push
mov
inc
test
xchg
cli
inc
jmp
insb
pop
aaa
nop
pop
out
or
int3
enter
push
adc
jge
loope
fwait
xor
sub
dec
or
inc
jb
xor
aas
nop
inc
sub
int
dec
mov
pop
call
test
add
cltd
push
sbb
xchg
pushw
out
lods
out
in
or
inc
cmp
fcomip
insl
xchg
aad
pop
inc
push
dec
in
notb
outsb
data16
sbb
pop
cmc
call
pop
out
mov
popf
cmpsl
sti
pop
scas
out
mov
outsl
adc
push
pop
ja
adc
std
hlt
lock
jecxz
and
mov
inc
mov
cld
loop
mov
fstl
pop
daa
xchg
out
inc
lret
aam
je
cmp
bound
mov
lods
dec
mov
sub
icebp
xor
xor
sub
rclb
loop
jae
inc
int3
mov
jmp
data16
xchg
add
mov
push
mov
and
adc
cmp
jb
nop
in
iret
mov
jnp
popa
cltd
test
jae
xchg
test
ret
dec
inc
mov
test
jge
cld
cmp
out
sub
scas
shlb
xchg
cs
or
mov
not
movsb
sbb
in
add
mov
mov
jb
mov
nop
jl
pop
shll
mov
movsl
mov
sub
push
in
xchg
mov
xor
fwait
and
pop
inc
pop
inc
mov
jb
sti
shrl
icebp
inc
xor
sbb
aam
aam
mov
mov
mov
add
lock
inc
pop
sub
or
push
gs
les
fbld
pop
lcall
es
sahf
bound
outsb
pusha
pop
dec
inc
cs
cmc
adc
and
cltd
cltd
add
pusha
inc
pop
push
or
fsub
cmp
jbe
in
xchg
mov
lret
cmp
sub
mov
pusha
sbbl
cmp
mov
or
mov
cmp
bound
pop
xchg
mov
sbb
in
sbb
or
pop
cmpsb
push
jae
sbb
xor
jnp
fs
mov
imul
jl
sbb
imul
test
pop
cltd
cmpsl
inc
jns
outsb
pop
outsb
lea
loopne
sbb
pop
shl
push
sub
sbb
outsb
lret
dec
sub
lea
cmp
mov
pop
inc
stos
adc
sub
ja
call
push
cmp
jecxz
jo
push
push
mov
add
imul
adcl
push
loopne
insb
fisubl
adc
xor
push
xor
cmc
push
scas
int
mov
movsb
add
sar
mov
lcall
fnstcw
xchg
jo
jb
div
jne
push
mov
mov
or
popa
stc
pop
mov
insb
sbb
ss
pop
and
outsl
pop
dec
int
cmpsl
cmp
cmp
or
jbe
cmpb
pushf
shrl
rcl
pop
mov
cmp
test
xor
fucomi
sub
lods
lret
cmp
jne
pop
mov
outsb
xchg
jp
fidivl
or
shlb
inc
inc
adc
div
mov
dec
push
mov
outsb
aaa
ja
jl
insb
movsb
pop
dec
pushf
dec
xorb
mov
daa
call
movsb
in
pop
movsb
jg
out
jne
shrl
rcr
xor
lahf
cmp
inc
daa
mov
xlat
sbb
dec
xor
xor
lea
xor
push
mov
ja
mov
out
xchg
inc
jp
jl
mov
adc
test
jp
xor
xchg
das
cmovns
xchg
out
or
sti
test
fidivrl
add
rolb
in
cld
lret
fcmovnb
jl
mov
jmp
pop
push
push
cmpsl
or
inc
shrb
push
jno
xlat
imul
imul
cltd
enter
adc
cmpsl
loop
lock
dec
stos
int
mov
sbb
cmpsl
jge
push
push
daa
add
sbb
mov
fmull
pushf
roll
in
sbb
iret
fistps
xchg
pop
shrl
mov
xchg
imul
sub
sub
shrl
lods
cmp
mov
lock
jae
and
push
lret
aaa
data16
daa
dec
or
add
mov
push
fidivrl
shrb
insb
xlat
ljmp
adc
nop
arpl
cs
adc
in
inc
cmp
push
mov
insb
mov
scas
orl
loopne
in
sub
pusha
xchg
cmp
ret
xchg
cmp
into
push
jbe
stos
or
out
fdivs
jmp
cmp
pop
sbb
add
arpl
fcmovne
push
xor
add
push
inc
push
mov
mov
pop
shr
and
and
pop
jne
fstps
push
test
mov
xor
adc
or
inc
pop
xchg
ljmp
fmul
ret
into
xchg
fcomps
jne
and
iret
stos
mov
jbe
mov
into
mov
ret
scas
divb
out
orb
cmc
adcl
cmp
sbbb
pop
mov
mul
inc
cmp
ljmp
lea
and
xchg
dec
mov
pop
sub
push
adc
pop
jno
dec
mov
mov
adc
jb,pn
add
lahf
js
pop
dec
stc
pop
hlt
rcr
mov
sti
xlat
and
xor
pusha
jne
xchg
jp
insl
jb
cmp
test
push
push
and
out
bndldx
cmp
xor
scas
mov
add
jmp
insb
data16
and
in
cmovl
mov
mov
sbb
add
cld
in
inc
pop
xchg
fists
stc
enter
pop
pop
add
mov
sar
mov
mov
popf
jne
mov
mov
imul
mov
ds
out
outsb
mov
test
sahf
out
xor
xchg
pop
fidivrs
mov
xor
xor
mov
out
mov
scas
or
xor
fmull
daa
jmp
jae
inc
xchg
inc
mov
pop
jl
jg
flds
scas
in
sbb
mov
xchg
xor
mov
mov
mov
rcl
stos
sar
pop
inc
or
inc
mov
mov
in
sbb
cmp
mov
jge
adc
dec
incl
outsl
or
or
cmc
test
jg
push
add
sbb
dec
movsl
sahf
add
mov
sub
ror
ds
inc
mov
data16
fiaddl
dec
push
addr16
cwtl
xchg
decl
out
hlt
adc
mov
mov
and
pop
dec
sub
pop
push
inc
into
dec
loop
or
cmp
push
mov
aam
fwait
and
stos
lret
jp
in
mov
push
cmpsl
cmp
pop
cmp
repnz
int3
in
sbbb
xor
dec
mulb
mov
in
fbstp
xchg
jnp
xchg
inc
pop
cmp
je
sbb
xor
xchg
push
mov
ss
jl
jle
notb
orb
adc
sub
mov
cmpsl
xchg
adc
or
sub
rcll
sbb
cmp
mov
ljmp
jge
gs
lock
push
inc
sbb
idivb
xchg
pop
jne
mov
xchg
inc
addr16
add
jno
xchg
imul
sahf
fmuls
sbbb
ficoms
xor
lret
jp
add
push
add
lahf
jo
sbbb
mov
das
cli
sub
dec
pop
stos
mov
xorl
stc
pop
mov
inc
jae
mov
pop
jno
xor
add
les
adc
cmp
mov
push
out
ja
or
xchg
out
pop
imulb
clc
xchg
ror
divb
imul
mov
jmp
cmpsb
sarb
push
adc
sarl
lods
aas
mov
testb
movsb
xor
rorb
sbb
mov
lea
pushf
jp
decb
pop
lret
test
out
fimull
and
push
mov
cmp
and
js
insb
cmp
lds
and
push
loope
push
xchg
jnp
and
adc
cwtl
js
test
test
lahf
mov
jmp
scas
adc
stos
or
out
push
sub
sub
xchg
lea
sbb
sub
mov
pop
shr
jp
lret
popf
int3
dec
mov
mov
dec
gs
dec
jno
aad
jge
xor
inc
nop
fs
inc
jae
sbb
in
or
fildll
cmp
ret
lahf
inc
jae
add
int3
movsb
jle
xchg
outsl
sub
test
dec
lds
outsl
push
lret
lea
out
mov
mov
push
inc
jbe
mov
mov
daa
cmp
std
mov
lret
nop
adc
sbb
mov
shrb
sub
pop
xchg
scas
out
jne
inc
push
mov
push
jne
jecxz
pop
fldcw
hlt
lds
mulb
dec
jno
outsb
incb
lea
daa
xchg
dec
and
jnp
out
push
pop
jp
fldl
aas
rcll
imul
and
xchg
xchg
lock
dec
ror
jle
jl
lret
popa
daa
bound
inc
leave
adc
cmpsb
pop
cmp
fsub
jae
mov
add
in
sub
ret
mov
push
outsl
aam
test
or
ret
fnstsw
fnstenv
lods
mov
test
loopne
adc
pop
jo
out
call
ss
adc
mov
add
into
negb
outsb
mov
inc
mov
jge
lahf
and
es
mov
adc
xor
jns
inc
mov
mov
mov
in
ss
cmp
dec
insl
test
add
sbbl
mov
or
rolb
or
mov
sarb
mov
loopne
and
sbb
gs
xor
in
in
inc
cmp
sar
push
fisubrs
adc
sub
cmpsb
js
cmpsl
dec
mov
mull
sbb
push
pop
sti
xor
sar
jle
scas
and
lcall
mov
daa
subb
dec
sub
in
decb
loop
sbb
rcrb
stos
mov
mov
scas
stos
cmpsl
or
jns
ja
pop
sbb
lods
push
loopne,pt
xchg
sti
rolb
mov
loopne
movb
adc
push
cli
test
xchg
addb
inc
test
dec
aad
xchg
add
mov
mov
sbb
push
lahf
lret
jae
ret
inc
test
daa
inc
mov
cli
or
adc
pusha
mov
and
jmp
xchg
dec
inc
dec
cmp
cmp
push
sbb
sub
shll
xchg
outsb
xchg
inc
int3
mov
cmpsb
jge
add
lcall
in
jne
and
mov
mov
mov
xchg
fwait
mov
sub
arpl
or
ja
popa
aam
or
push
stc
and
pushf
push
into
iret
aam
xor
movsb
lds
jge
jp
xor
sub
and
inc
pop
inc
adc
dec
xchg
cwtl
jg
fiadds
std
cltd
es
and
dec
dec
jmp
pop
in
into
sub
mov
insl
insl
arpl
aam
pop
pop
jno
ret
mov
sbb
jno
cmc
and
mov
jns
jbe
in
push
jbe
mov
push
xor
test
inc
pushw
cltd
shll
sbb
out
mov
loopne
mov
enter
inc
in
loopne
lds
cs
dec
inc
jmp
push
sub
jl
ja
jne
mov
push
jae
icebp
out
xor
xlat
cmp
add
fs
xor
cmpsl
jno
orb
xor
mov
loope
dec
mov
push
scas
add
or
leave
mov
pop
push
ds
sub
inc
insl
push
push
cli
clc
testb
jmp
dec
jecxz
outsl
aas
jl
dec
inc
in
cmp
add
inc
xchg
push
insl
adc
mov
add
push
inc
addr16
notb
rorl
dec
dec
jp
hlt
outsl
fistl
mov
in
or
and
mov
dec
pop
in
cs
inc
das
mov
cltd
sub
aad
adc
repnz
popa
push
arpl
jae
push
xchg
ds
cmove
push
jecxz
repz
or
test
xchg
movsl
cli
jns
adc
xor
jnp
sub
data16
adc
outsb
out
fs
in
stos
inc
and
js
out
sub
aas
add
inc
loope
mov
mov
pop
and
cmp
movsb
or
jno
mov
xchg
loopne
cmp
lock
call
jle
add
lret
dec
pop
cmp
jb
into
movsl
in
js
mov
push
xlat
push
mov
cmp
jbe
and
sub
add
addr16
cmpsb
mov
mov
cmp
push
jb
adc
inc
insb
insl
fcoml
addr16
sbb
push
sti
xor
jl
rolb
and
sahf
je
push
jl
adcl
inc
cmp
or
xchg
push
sti
in
cwtl
sahf
push
cwtl
pop
das
imul
ljmp
adc
xorl
add
sub
clc
roll
fistpl
push
idiv
ficomps
testl
out
cld
scas
sbbl
adc
push
jbe
mov
lods
fstpt
lahf
and
cs
int
push
inc
dec
add
cwtl
lcall
ja
pushl
fs
push
hlt
sbb
add
push
adc
jg
cwtl
outsb
dec
cmp
push
adc
arpl
enter
mov
loope
sub
test
out
in
jns
mov
jge
adc
dec
xchg
mov
clc
imul
lea
add
lret
sti
mov
mov
inc
sbb
sbb
dec
add
sub
dec
or
inc
test
dec
mov
or
test
dec
xchg
rorb
lods
shrl
fwait
push
cltd
xor
xchg
pop
repz
test
clc
add
mov
pop
out
jo
mov
not
lock
nop
jb
rolb
scas
cwtl
mov
add
andb
adc
cmpsb
push
movsb
mov
lret
insl
mov
xchg
pop
push
daa
scas
adc
mov
into
lfs
cmpsb
lea
xlat
mov
enter
xor
xor
sub
xchg
repz
ljmp
in
pop
mov
push
lods
aas
jecxz
xchg
repz
loop
ljmp
pcmpgtd
add
aam
in
mov
or
sub
mov
jne
adc
mov
add
clc
dec
je
sub
in
dec
aad
jge
xor
and
movsb
or
push
cmpsb
xorl
pop
bound
push
outsl
cmp
xchg
dec
dec
fldenv
out
out
dec
push
adc
sahf
push
popf
leave
pop
les
jg
mov
xlat
enter
clc
inc
mov
sbb
cmc
fcmovnu
jae
fstpl
les
aaa
and
outsl
filds
mov
roll
sbb
push
ror
mov
or
test
xor
leave
mov
jg
adc
mov
mov
dec
sahf
popf
jecxz
push
xor
imull
sub
xlat
add
sub
pop
fildl
out
int3
lret
push
cmp
and
lea
xor
fs
push
stos
scas
pusha
xlat
lods
jne
into
adc
jne
loopne
push
sbb
pop
cld
ret
sub
push
shlb
popf
test
in
std
push
mov
cli
stc
jo
orb
scas
push
and
popf
inc
rorl
outsb
imul
and
xor
aaa
and
push
in
rorb
dec
pop
dec
fildll
cmp
fs
pop
bound
push
cli
lods
mov
mov
out
out
sbb
inc
push
imull
push
ret
and
ficomps
add
sbb
outsl
jmp
std
int3
mov
cmp
insl
lahf
mov
imul
sbb
cwtl
aaa
imul
dec
fcompl
shrl
fcoms
xor
notl
cmp
inc
pop
ja
cmp
jns
cmp
sbb
pop
jge
cmp
es
loope
test
in
or
xor
add
mov
xchg
xor
test
roll
imulb
mov
xchg
les
and
push
nop
stos
dec
jbe
sbb
aas
gs
dec
test
icebp
mov
movd
mov
mov
movsl
push
gs
mov
out
aaa
jno
xchg
stos
cmpl
cmp
lods
mov
sbb
out
mov
sbb
movsb
imulb
and
push
repz
testb
xchg
mov
arpl
stc
dec
fcmovb
push
jle
pop
push
outsb
mov
mov
push
popa
and
frstor
pop
sbb
scas
adc
jle
xor
xchg
xchg
mov
jno
pop
ss
or
mov
scas
fidivs
clc
sub
inc
add
sarl
fisubrl
insl
jg
add
in
lcall
ret
xlat
pusha
aad
dec
rcrl
fcmovnb
test
jmp
mov
fidivrs
loopne
repz
pushf
enter
sub
sbb
aad
add
cmpsb
das
pop
fldcw
cmpsb
imul
add
jecxz
pop
inc
add
pushf
inc
and
and
or
adc
ret
fisttpl
movsb
push
mov
mov
mov
repnz
and
mov
mov
cli
mov
or
xor
fstl
pop
sti
ds
mov
push
mov
inc
pop
test
fcom
enter
or
sti
or
outsb
pop
int3
cmp
xchg
add
cmp
xchg
jbe
inc
test
mov
icebp
jb
iret
cmpsb
gs
decb
aad
sti
arpl
sbb
push
int3
mov
or
loopne
mov
into
int
mov
inc
push
mov
sbb
pop
je
inc
ffree
out
sbb
testb
push
sbb
mov
push
dec
mov
inc
dec
push
addr16
ficoml
mov
fmul
push
fiadds
loop
cmp
dec
cmp
xchg
movsb
add
ret
leave
stc
mov
dec
call
lods
pop
xor
arpl
inc
out
xchg
pop
xor
arpl
movsb
ja
adcl
mov
stos
das
mov
mov
jo
loope
sbb
rcr
imul
outsb
pop
sbb
mov
insl
mov
adc
jae
pop
pop
jbe
mov
ret
inc
jnp
mov
xchg
cs
mov
or
or
jl
stos
dec
mov
js
mov
mov
bound
push
adc
sahf
ds
or
rclb
lods
rcr
int3
popl
lret
add
sub
mov
cltd
arpl
xchg
pop
test
lret
add
adc
mov
cmpl
mov
mov
adc
inc
mov
xchg
adc
sub
adc
add
loop
into
mov
popa
sbb
popa
mov
pop
xchg
pop
cwtl
pushf
gs
ret
cmp
xor
mov
jno
aam
imulb
sub
pop
lods
in
lock
xlat
add
mov
insl
adc
inc
and
shrb
and
inc
dec
inc
or
mov
and
push
mov
cmp
cs
sqrtps
scas
rcrb
mov
fs
cmp
ja
sbb
test
jo
scas
add
bound
loop
inc
lock
imul
mov
add
xor
xchg
mov
jnp
push
xchg
xchg
adc
test
int3
nop
repnz
into
gs
mov
imul
and
mov
cmp
sbb
mov
bound
push
xor
dec
stc
divl
jp
add
and
cmc
pop
lock
in
mov
cwtl
push
test
jmp
inc
movl
cmc
sahf
add
add
popf
push
push
jne
jns
jbe
push
stos
jle
jmp
add
adcl
in
stos
cmp
lds
add
ljmp
or
push
mov
ret
jnp
movsl
je
shlb
fwait
or
fldl
mov
and
outsb
push
push
ret
scas
xchg
adc
fwait
cs
inc
enter
pop
mov
inc
sahf
xlat
add
push
jecxz
xchg
stc
or
pop
decl
pop
push
xor
cmpsl
sub
ss
xchg
xchg
add
xor
sarl
jnp
dec
imul
pop
cs
sbb
adc
or
pop
jb
pop
mov
adc
sbbb
inc
add
imul
shll
mov
cwtl
or
jecxz
xchg
xor
cmpsb
push
pusha
xor
jbe
mov
icebp
add
sbb
jmp
mov
push
loopne
int3
fidivrs
adc
rorb
or
adc
ret
test
xor
fdivs
je
fisubl
push
sbb
sub
dec
xlat
mov
jmp
lret
imul
cmp
or
es
pop
shll
lret
shl
inc
push
pop
mov
or
pop
or
xchg
mov
cmp
loopne
fisubrs
mov
cs
jp
xchg
mov
pop
gs
ficompl
xor
aaa
lods
push
imul
inc
loope
xchg
mov
xorl
repnz
jecxz
out
inc
or
push
imul
imul
pusha
or
sub
xor
pushaw
mov
subb
and
xlat
add
cmp
jecxz
rolb
jo
cmpb
lcall
negl
sbb
test
mov
inc
add
into
add
adc
std
adcb
pushf
in
movsl
rcr
mov
test
out
insl
add
gs
lea
mov
push
and
pop
mov
and
mov
xor
or
lcall
push
dec
push
sahf
ss
jecxz
xor
or
out
leave
cwtl
popf
testb
cwtl
movsw
data16
jnp
bound
adc
cltd
and
or
es
add
xor
jle
or
sub
jp
leave
xchg
and
cmp
repnz
icebp
cmp
mov
sub
cltd
cmp
lds
out
jecxz
xchg
fsubs
ret
scas
ljmp
sbb
add
cwtl
fiadds
xor
lret
sub
into
inc
dec
xchg
pmaddwd
xorl
jbe
and
push
mov
cmp
ret
pop
jne
ret
mov
lret
xorl
jo
xor
pop
cli
dec
aas
cmpsl
or
or
jg
jno
outsb
in
push
mov
and
jl
xor
push
ds
adc
imul
jp
mov
aaa
jo
inc
and
mov
pushf
cmpl
cmp
fcoms
icebp
insb
adc
fsts
pop
xor
sub
mov
lret
pop
insb
fs
push
xchg
rcl
xchg
jg
xchg
das
mov
rcrl
adc
movsb
push
lcall
add
icebp
roll
inc
adc
notl
xchg
sbb
inc
and
push
adc
jns
jmp
add
cmp
cmp
pop
jmp
jl
rol
fildll
ss
out
orb
jne
outsl
mov
adc
cmp
jns
xor
addr16
aaa
lret
pop
mov
vpunpckldq
mov
imul
scas
daa
push
xchg
adc
movsb
mov
sahf
sbb
test
or
icebp
outsl
adc
adc
or
inc
js
cmp
daa
ja
int
into
sbb
mov
sub
cli
shrl
sbb
test
mov
mov
out
sbb
lret
loop
pop
cmpsl
fisubrl
push
dec
fsubrs
cmpsb
add
xor
push
je
xor
fs
mov
push
push
sbb
jmp
jnp
ficoml
gs
pop
push
lcall
mov
divl
xor
lcall
stc
lahf
adc
insb
inc
call
lcall
dec
add
pop
lahf
cld
push
or
test
sarl
inc
xorl
dec
inc
mov
or
scas
xor
je
cmp
or
adc
or
pop
sub
aad
inc
mov
xchg
aam
add
int
loop
das
or
dec
insl
and
data16
stc
outsb
inc
dec
push
pop
mov
addr16
aam
sarb
cwtl
inc
in
enter
push
and
mov
xchg
ds
jg
mov
inc
mov
shll
adc
jno
add
cltd
inc
outsb
mov
in
mov
lds
sub
hlt
pusha
mov
popf
sahf
shlb
inc
lret
cmpl
jmp
daa
pop
mov
push
call
lretw
cmp
clc
cmp
shl
sahf
ffree
inc
fsub
mov
hlt
sub
scas
scas
cmpsl
mov
test
jge
and
push
mov
jecxz
xor
es
push
leave
jge
in
fdivl
push
add
inc
jle
mov
ret
and
sub
xor
pop
dec
subl
or
pop
dec
add
jp
sub
out
inc
add
in
int3
or
mov
or
adc
enter
insl
lcall
out
dec
inc
add
iret
mov
ret
mov
addb
sub
ret
es
jle
adc
arpl
adc
andl
loop
mov
and
ljmp
jp
mov
mov
loop
mov
dec
cmp
pop
enter
iret
aaa
imul
icebp
push
pop
repz
andl
arpl
jmp
dec
jecxz
add
movsl
lock
xchg
lds
or
sbb
inc
sbb
test
sbb
sahf
pop
sbb
ljmp
fldl
cwtl
fcompl
mov
addr16
pop
mov
or
xor
and
cmc
cmpsb
leave
movsl
push
push
test
jle
push
inc
pop
xchg
lods
lods
add
stos
aas
imul
mov
mov
and
jns
pop
pushf
stos
jge
push
mov
adcb
or
cmp
xlat
dec
mov
cltd
jl
fs
sarb
and
imul
daa
pop
sub
scas
or
push
cmp
lds
adc
xor
adc
aas
xchg
inc
sub
mov
arpl
ss
mov
adc
cmp
mov
aaa
aam
sti
push
std
loopne
sub
dec
dec
fisttpl
jne
sahf
push
jbe
test
pop
loop
ret
dec
pop
mov
ss
sub
lock
stos
and
fucomi
mov
mov
push
fisttpl
movsb
sub
out
xorl
push
fwait
xchg
outsl
adc
mov
bound
jb
cmp
dec
faddl
push
pusha
push
pusha
push
push
sbb
sbb
ficoml
jle
xor
fsts
cmp
xchg
insl
flds
loop
fistpl
mov
push
call
or
push
xchg
outsl
sub
daa
sbb
out
mov
sub
insb
sub
add
jne
xor
loop
addr16
in
stos
mov
push
pop
int
mov
std
inc
add
mov
mov
pop
push
inc
mov
dec
scas
ds
andl
mov
inc
ss
dec
push
loop
fistl
movsb
int3
jo
mov
clc
sub
mov
push
inc
sbb
sub
mov
call
test
stos
test
imul
xlat
sub
lods
ficomps
xor
shll
xor
stos
ret
scas
pop
push
sti
cli
jle
inc
into
cmc
jae
jmp
cs
rclb
sub
lcall
pop
pop
pop
ljmp
mov
clc
cwtl
xchg
add
cmovbe
xor
stos
ret
sbb
sub
and
adc
inc
push
pusha
adc
xchg
xorl
sbb
aas
mov
add
aas
aad
gs
test
and
jge
mov
jg
add
jmp
enter
je
fldl
int3
and
pusha
imul
int
cmovbe
outsb
loopne
hlt
jmp
add
movsl
mov
mov
sub
int3
scas
fs
fmuls
test
aas
arpl
xor
dec
frstor
sbb
inc
popf
in
add
adc
cmp
inc
pop
movsb
cmpsl
fs
scas
int
scas
movsl
lods
mov
insl
loope
insl
sarb
jp
outsb
data16
xchg
jns
ds
cmp
jbe
cltd
imul
mov
rorl
inc
iret
arpl
adc
xlat
xchg
test
pushf
fistl
stos
dec
xchg
std
imul
fs
pop
xor
addr16
jns
rcll
sbb
std
pop
add
push
add
addb
iret
es
mov
aaa
loop
mov
test
rorl
inc
xor
sub
mov
push
lret
pop
int3
lcall
sbb
xchg
fs
adc
lea
dec
shrb
xlat
outsb
dec
pop
xor
sbb
or
mov
or
fidivl
jle
push
and
dec
inc
jnp
int3
push
popf
cmpsb
push
outsb
lret
ret
jle
repz
andb
mov
shl
xchg
in
adc
jecxz
cmpsb
fmul
addr16
dec
lret
add
and
cmp
inc
int3
pop
jp
inc
cmp
repnz
sahf
pop
pop
mov
in
loop
push
aas
xchg
ret
or
pop
cmp
dec
ret
ficompl
fsubp
mov
mov
rorl
movb
sti
mov
stc
movsb
sbb
push
movsl
aaa
lock
jmp
pop
and
enter
imul
cmpl
adc
xchg
cli
stos
inc
push
mov
sbb
in
inc
add
into
inc
cwtl
fidivrs
data16
data16
xor
push
push
loop
xor
pop
fwait
cld
lahf
scas
jb
loop
dec
cmp
add
xor
stc
lcall
lods
jmp
insb
aaa
push
mov
and
in
cmp
sub
push
imulb
jmp
call
das
xchg
push
jp
xorl
xor
pusha
pop
add
subl
flds
imul
add
into
jge
orb
test
ja
out
adc
hlt
sub
jno
fstl
mov
push
fwait
cmc
enter
sti
fldcw
ds
inc
adc
jnp
test
add
leave
jae
dec
push
lahf
cwtl
adc
xlat
add
sub
fs
fstps
inc
les
test
test
in
int3
adc
jg
push
pop
into
adc
xor
out
jo
icebp
mov
sbb
xchg
fcoms
inc
xchg
xor
mov
mov
jbe
cs
mov
daa
loop
and
xor
int3
and
fstpt
adc
lret
sbb
hlt
sub
loop
jo
cmp
mov
mov
jo
icebp
sub
push
shrl
jmp
ja
mov
adc
mov
mov
je
rcrb
arpl
fs
mov
push
data16
repz
adc
bound
jo
xlat
das
rorb
fisubs
push
mov
out
jne
pop
jp
stos
aas
leave
test
mov
push
fnsave
mov
sbb
adc
xor
cs
mov
shl
pop
loop
call
cmc
jle
into
mov
fists
xchg
testb
mov
jle
sub
mov
icebp
pop
ficompl
or
cli
jg
sbb
inc
test
scas
jns
shrl
movsb
xchg
fdivs
test
xor
sahf
or
mov
push
lods
cwtl
lea
mov
inc
rorl
sarl
inc
jo
and
jb
imul
les
or
data16
xchg
pop
jno
dec
aas
add
push
aam
mov
shr
dec
cld
iret
adc
inc
sub
jns
xchg
inc
push
aas
mov
ret
pop
and
call
mov
outsb
push
and
dec
pop
cli
mov
pop
xchg
in
inc
iret
sahf
add
ljmp
jo
fnstenv
xor
sub
addb
mov
adc
sahf
aam
in
outsl
addb
cmp
into
or
cmp
scas
adc
and
lock
fs
shr
add
mov
imul
jns
mov
fstpt
dec
push
add
mov
push
and
pop
pop
or
mov
jb
mov
stos
mov
xor
mov
jp
outsb
dec
inc
shr
lock
xor
inc
mov
xchg
mov
push
repz
adc
mov
xor
sahf
imull
pop
lods
inc
cmpsl
jg
imul
xlat
jb
int
out
lea
jnp
neg
fsubrl
rorl
mov
xor
mov
mov
jbe
push
push
roll
fwait
inc
mov
push
pushf
std
in
repnz
in
cltd
insl
mov
mov
loope
lea
mov
pop
in
roll
inc
xchg
gs
test
and
mov
inc
cmpsb
daa
popa
xlat
sbb
ja
push
mov
movsl
hlt
insb
movsl
and
ds
enter
emms
jbe
lock
sub
out
ret
mov
and
inc
pop
push
call
test
sbb
les
push
dec
sbb
dec
xchg
sub
cmp
add
dec
mov
dec
js
in
adc
mov
lret
lret
sub
add
cmpsl
add
leave
mov
ret
subb
push
pop
pop
in
aaa
outsb
cmpsb
cmp
pop
insb
addr16
inc
scas
ja
inc
push
icebp
js
or
je
ljmp
sbb
and
insb
lds
das
out
or
and
hlt
lahf
push
lea
stos
les
jb
gs
leave
shlb
sub
mov
xchg
outsb
cmp
or
shrb
push
add
pop
and
out
lret
dec
jns
jecxz
push
push
scas
mov
pop
pushf
inc
push
xchg
int
xlat
xor
outsb
aad
ret
add
sbb
inc
movsb
sbb
mov
sbb
or
or
lret
addr16
gs
addr16
sbb
jns
repz
jp
sub
add
mov
inc
outsb
jmp
mov
lea
sbb
shrb
push
data16
arpl
mov
shr
scas
out
cmpsb
push
out
inc
xor
adc
mov
sbbl
loop
push
sahf
or
jmp
xchg
fs
xor
xor
ds
or
outsb
jbe
aaa
push
mov
es
xchg
mov
outsb
orl
xor
mov
and
loope
shl
push
inc
loop
fnstsw
stos
pop
stos
push
leave
cmp
icebp
mov
sbb
inc
sbb
jne
pushl
cmpsb
cli
cltd
aas
aaa
insl
imul
pushf
mov
add
sbb
pop
imul
adc
xchg
insb
push
aas
pop
sbb
mov
dec
clc
mov
aas
sbb
filds
data16
jb
es
es
adc
mov
mov
xor
ret
repnz
scas
cmp
imul
and
shlb
jns
or
pop
push
xor
sbb
pop
xlat
out
clc
sub
mov
add
mov
push
lods
pop
fldl
mov
stos
std
aas
fiaddl
movsl
pop
jnp
add
pop
cmp
rolb
add
add
add
call
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
ret
mov
xchg
sldt
add
xor
cmp
mov
into
lret
push
ljmp
and
dec
stos
add
add
imul
mov
add
add
inc
sbb
sbb
mov
add
mov
pop
mov
add
add
mov
in
nop
cmpsb
inc
add
and
add
add
clc
push
aaa
les
add
xchg
sti
aam
sbb
aaa
jg
movl
add
pop
jp
pushf
rcrb
add
jo
or
add
sbb
mov
roll
add
dec
push
ja
je
lret
add
add
popa
push
adc
jmp
sub
add
adc
add
pop
xor
inc
imul
das
xor
add
mov
testl
sar
data16
in
cmpsl
sbb
mov
icebp
pop
xor
adc
add
add
xor
imulb
gs
ret
add
add
sub
adc
sbb
push
add
add
mov
and
xchg
out
bswap
add
add
popa
mov
cvtpi2ps
add
add
fs
push
push
cmp
mov
add
add
cltd
inc
incl
add
push
dec
rcr
fstl
test
push
add
add
sarl
ret
insl
js
add
add
sub
xchg
divb
mov
add
add
or
inc
xor
test
add
jne
mov
ja
je
add
add
inc
in
xor
test
add
add
push
mov
adc
mov
loop
out
or
in
add
add
jns
xor
fiaddl
add
add
cmp
movsb
add
or
add
add
mov
or
pop
add
add
dec
cmp
dec
int3
pusha
add
sgdtl
add
jmp
in
rclb
add
add
out
int3
add
aaa
add
push
pop
push
incb
add
add
lahf
jmp
insb
adc
add
jle
lret
add
adc
nop
popa
pop
add
add
pop
adc
rolb
loopne
add
add
fstp
rcrl
cmc
lods
mov
movsb
movsb
add
add
xchg
mov
negb
iret
add
add
add
sub
sarb
mov
add
add
leave
pop
jg
hlt
int
add
add
inc
jecxz
ret
or
inc
ret
scas
mov
add
ljmp
add
add
fiadds
test
scas
and
mov
add
add
inc
fwait
xor
add
jbe
cli
push
jge
cmp
enter
daa
sbb
nop
add
add
jno
mov
add
add
push
xchg
xor
in
je
lds
add
add
call
add
add
cmpsb
dec
xchg
jmp
js
aad
pop
push
pop
adc
loope
je
sub
and
add
add
ds
and
movsl
out
ja
sub
add
add
sbb
subb
push
xor
add
add
lods
movsl
push
pop
movsb
lret
mov
sbb
add
add
push
push
jge
add
add
outsb
pop
andb
adc
jg
addr16
add
add
mov
mov
sub
push
test
jl
push
adc
idivl
xchg
add
add
shrl
into
mov
out
add
add
sahf
mov
and
cs
jno
add
add
push
sub
add
add
ss
repnz
mov
dec
add
add
xor
cmpsl
cmp
in
push
add
add
into
scas
sarl
sub
loopne
pusha
movsl
pop
fdivrl
add
stos
sub
push
push
mov
add
add
mov
lods
pop
cmpsb
cmp
xlat
std
out
adc
add
add
lret
add
add
inc
insb
fsubl
adc
nop
sub
jae
add
add
das
dec
rol
mov
add
xchg
mov
pop
dec
call
addl
add
add
adc
leave
pushf
jnp
loopne
add
add
shll
aad
jmp
inc
dec
andb
mov
add
add
jo
je
cmpsb
filds
add
add
fs
lea
insl
sub
add
add
xorl
add
pop
shll
cs
cmc
das
adc
fadds
add
add
and
add
add
idivb
cmp
dec
sub
or
add
add
xor
pop
mov
add
cld
in
mov
test
popl
add
add
dec
lds
add
add
or
cs
clc
inc
cmp
xchg
sub
add
popa
sarb
test
mov
imul
psubb
pop
add
add
cltd
popf
out
test
add
push
setne
fnsave
dec
push
xchg
movsl
dec
add
add
rcll
ret
add
add
mov
xchg
cmp
lods
mov
outsl
bound
add
add
xchg
pusha
lcall
add
xchg
insl
das
pop
xor
cmp
add
add
xchg
xor
add
add
push
pop
mov
fdivs
jmp
int3
add
add
jns
lret
add
pop
add
add
mov
pop
sahf
mov
or
jnp
insl
add
add
mov
inc
cmp
add
add
dec
and
jne
adc
fwait
push
push
add
add
jmp
mov
mov
out
sti
repnz
jb
cltd
push
popf
scas
cli
add
add
and
fists
add
add
jle
lret
jbe
or
test
out
je
out
pop
data16
add
pop
dec
or
inc
mov
add
push
mov
arpl
inc
inc
inc
js
add
add
rcr
adc
add
add
outsl
scas
fcmovnb
push
or
ja
pop
add
add
leave
rorb
hlt
sbb
push
add
add
inc
out
into
or
add
imul
add
add
subl
add
and
add
jo
ljmp
add
add
cli
pop
outsb
movsb
or
add
add
jbe
inc
xchg
adc
enter
daa
sbb
ljmp
leave
jmp
add
add
push
mov
mov
into
lahf
xchg
inc
loopne
add
add
lret
add
add
cmpsb
into
mov
jg
loope
js
dec
pop
add
add
loope
dec
aam
mov
add
ds
bound
movsl
out
mov
aam
daa
nop
lea
add
add
cmp
and
add
add
jo
mov
pop
sub
pop
add
add
jae
fcompl
repz
add
outsb
mov
sbb
jg
push
xor
mov
jne
lret
jb
add
add
push
xchg
and
adc
idivl
sldt
add
rol
adc
add
add
sahf
sub
jne
xor
lods
cmp
stc
pop
adc
lret
add
add
adc
cmp
xchg
jno
cli
scas
test
add
add
repnz
dec
cmp
daa
push
add
add
into
xchg
and
iret
loopne
mov
pop
sti
aaa
scas
add
add
imul
add
add
add
lahf
pop
lods
inc
hlt
mov
nop
out
xlat
cmp
mov
add
add
xor
add
jmp
cmpsl
ja
pop
test
dec
lahf
add
add
add
fldenv
mov
add
add
xchg
adcl
test
add
add
add
adc
lods
push
add
add
ss
sub
push
sub
inc
test
or
mov
add
add
addr16
pop
xor
mov
movsl
add
add
orl
add
add
pop
jbe
sbb
outsb
or
jg
xchg
das
repz
add
add
mov
or
add
test
xor
dec
and
mov
add
pop
mov
cld
andl
add
add
mov
repz
pop
mov
add
sub
sbb
scas
jp
add
add
es
mov
insl
pop
sbb
sbb
add
add
sub
add
add
mov
jb
sbb
pop
add
add
add
cltd
aam
mov
add
add
push
ror
repnz
cld
push
test
mov
add
add
shr
repz
roll
add
add
out
jecxz
xchg
test
and
dec
enter
pushf
addb
add
or
scas
xor
add
add
xchg
stc
movsl
pop
out
sti
sub
dec
sbb
add
add
mov
inc
int
add
add
push
pushl
mov
sbb
add
add
jns
add
add
add
mov
std
cmp
add
push
add
add
mov
mov
mov
add
add
rcrl
ss
push
fisttps
add
jmp
sbbb
add
add
push
lahf
mov
lods
daa
sahf
push
fmull
add
int
dec
insb
jmp
push
add
add
jle
rol
adc
adc
mov
iret
dec
loop
add
add
pop
xor
inc
leave
lcall
arpl
imul
push
iret
inc
ret
add
add
xchg
pusha
ja
sbb
mov
add
add
scas
out
pop
push
mov
ljmp
and
add
add
leave
inc
mov
addl
jmp
push
std
sbb
rolb
add
add
sbb
sub
loopne
cmp
add
add
pop
lds
lods
scas
loop
push
add
add
cmp
fs
add
add
jbe
or
xchg
int
enter
daa
sbb
add
sub
loopne
add
add
pushf
dec
mov
daa
loopne
and
or
add
add
test
xchg
pop
incb
add
add
push
dec
pop
js
inc
aam
mov
jg
add
add
repnz
imull
or
ds
lahf
movsl
cmc
mov
popl
add
sbb
add
mov
add
xor
daa
pop
repnz
sub
push
sbb
add
add
jge
faddl
iret
sbb
add
add
ljmp
sbb
and
ficompl
mov
mov
push
loop
add
add
push
mov
push
int
mov
fmul
call
push
add
add
rcrl
mov
add
sahf
rorb
pop
xor
mov
outsl
cmp
push
add
add
stc
mov
scas
in
add
add
push
cmp
andl
add
leave
sbb
cmp
xor
add
add
into
je
shl
mov
push
imul
mov
add
add
pusha
pop
adc
xor
add
cld
pop
lods
sub
enter
mov
add
add
mov
mov
add
decb
or
sahf
mov
dec
inc
aam
add
add
popf
sub
into
loopne
add
add
xchg
inc
lahf
pop
sbb
test
mov
addl
adc
icebp
add
add
cs
fistl
inc
jg
xor
add
add
dec
orl
or
add
add
push
push
lea
dec
cwtl
sbb
push
add
add
and
ficoml
add
add
push
test
add
push
lock
cmp
shrb
add
cwtl
flds
add
add
add
xlat
std
push
lcall
add
add
fisubrs
and
mov
xor
ret
add
add
sub
dec
enter
movl
adc
shrl
lock
mov
int
add
add
popa
mov
bound
add
add
jns
and
movzbl
add
add
cltd
or
pop
test
add
push
xchg
je
fldl
push
es
test
add
add
roll
mov
mov
out
push
xchg
adc
data16
mov
add
add
or
jns
add
add
xchg
push
jmp
add
add
inc
test
das
rolb
add
add
mov
jp
mov
shlb
add
add
fistpll
add
add
mov
adc
jecxz
incl
lahf
add
add
mov
and
mov
add
add
and
jne
rcrl
test
add
jmp
dec
and
add
add
shll
sbb
sbb
enter
add
in
push
insb
push
test
add
add
stos
mov
adc
test
add
add
pop
mov
sti
and
add
add
es
stc
popf
out
ret
dec
push
inc
push
rolb
add
add
daa
push
add
std
mov
in
mov
sub
add
add
mov
cld
mov
inc
in
inc
and
js
pushl
jmp
rolb
add
add
scas
inc
aad
lret
sarb
push
lods
lds
sub
push
jb
sar
add
add
cmp
scas
movsb
fisttpll
jl
add
add
xlat
jge
insb
or
sbb
jle
add
add
jno
mov
jl
sbb
push
jg
test
out
sbbl
cwtl
roll
add
add
pusha
pusha
leave
add
add
cmpsb
aam
pop
in
cmp
vmread
pop
pop
lret
loopne
add
add
loope
jb
sub
cmp
add
add
xchg
pop
sarb
sbb
sbb
pop
call
div
or
xor
sub
sbb
add
add
push
insl
stos
jbe
mov
inc
add
add
outsb
subl
repz
jg
cltd
inc
add
add
mov
add
push
lea
mov
fstl
pushf
idivl
add
shl
in
cmpsb
dec
add
add
sahf
jae
mov
xor
jbe
outsl
sbb
scas
add
add
stc
jne
cmpsb
fs
popl
add
add
xchg
in
cmp
jl
cmp
clc
xlat
xchg
add
add
xor
adc
add
push
leave
ja
jg
loopne
lcall
add
add
mov
adc
and
add
add
into
stc
lods
adc
xlat
mov
add
mov
or
add
add
das
mov
into
nop
adc
dec
pop
lea
or
fldpi
in
add
add
xchg
pop
and
sub
call
add
add
arpl
pushf
jl
add
add
cs
test
and
imul
clc
aas
test
add
xor
je
xor
add
insl
out
xlat
test
pop
mov
jo
add
add
cmpl
lds
add
add
das
ss
xchg
xchg
xor
sar
add
add
mov
and
roll
add
add
inc
les
sqrtps
cmpsl
sbb
add
mov
test
fnstcw
add
add
mov
fnstenv
in
loope
loope
dec
add
add
sub
xchg
aam
sub
add
add
es
pushf
sub
cmpsl
mov
xchg
ljmp
popa
adc
test
add
add
mov
addb
push
test
shl
add
add
mov
add
push
pop
xchg
enter
iret
test
mov
xchg
mov
add
add
cwtl
dec
push
pop
xchg
add
mov
xchg
xchg
adc
add
sbb
add
or
pop
fdivs
imul
add
xchg
mov
and
cmp
add
add
fcoms
sbb
sti
add
add
push
inc
jle
add
insb
lahf
test
add
add
jns
pusha
pop
in
out
push
add
add
mov
mov
jg
cli
sti
pop
addr16
cmc
add
add
mov
test
add
push
jne
mov
pusha
insb
inc
push
push
pop
add
add
jmp
sbb
sbb
out
inc
jl
xchg
sarl
pop
fstpt
add
add
sti
or
insb
rcll
inc
xchg
adc
jae
add
add
pop
lock
mov
push
jmp
dec
shrb
dec
jbe
shrb
add
add
xchg
push
in
sbb
in
xlat
add
add
scas
lods
xchg
fs
inc
push
test
cmpsl
push
daa
add
add
leave
xor
add
add
inc
out
popa
lret
or
xor
or
stos
in
dec
add
add
add
pushf
int3
mov
lret
add
fimuls
xchg
divl
and
jne
add
add
pop
push
movsb
push
add
jbe
out
jge
out
ror
sbb
xor
add
add
arpl
add
add
fidivrl
xor
xor
push
add
add
test
sub
add
pop
mov
mov
add
add
loope
mov
add
add
ds
aam
movsl
add
mov
popl
add
add
sbb
and
add
add
mov
outsl
imul
jg
pop
andb
push
sti
dec
fcompl
add
add
outsb
out
ret
adc
push
xchg
jg
pop
pushf
add
add
mov
mov
add
nop
mov
int
pop
fadds
jae
jns
out
add
add
mov
pop
add
add
sahf
push
dec
fiaddl
lcall
add
add
stc
sub
leave
imul
add
add
ficoml
cmp
ja
sub
divl
dec
add
add
xor
pop
cmp
lret
add
add
cmp
inc
cmc
inc
lea
pop
mov
add
cmpsb
out
jle
lret
add
add
cbtw
adc
cmp
or
add
add
mov
jbe
sub
push
adc
in
pop
addr16
mov
add
xchg
mov
add
add
xchg
lret
sbb
sahf
or
jg
mov
add
add
mov
add
cs
and
aad
enter
push
and
and
inc
add
add
dec
jno
jne
lahf
pop
sbb
add
add
jo
mov
ds
sti
mov
or
add
add
adcl
xor
add
add
pop
pop
inc
cmc
inc
push
and
inc
das
nop
lcall
add
add
mov
scas
mov
add
add
testb
jae
push
dec
mov
pop
lds
add
add
mov
sbb
add
add
sbb
mov
add
sbb
add
add
sub
aam
add
add
add
sbb
mov
das
xchg
inc
xchg
sub
push
add
add
popa
sub
jnp
xor
add
add
xchg
push
pcmpeqb
add
daa
pop
add
add
push
sbb
fstl
mov
mov
add
shr
mov
pop
xor
add
add
out
pop
ficoml
pushf
xchg
pop
jmp
hlt
add
add
or
int3
xor
cmpsl
fwait
add
add
xchg
repz
xorl
out
add
add
inc
xlat
xor
mov
push
call
pop
es
cmpb
add
jns
test
in
outsb
jns
add
add
xorb
cmc
add
addr16
or
add
add
scas
xor
add
add
dec
lods
movsb
lods
jne
add
pop
xchg
add
add
jmp
jecxz
jle
add
add
flds
sub
pop
aaa
in
cltd
inc
dec
add
add
and
scas
fisubrs
push
add
add
jle
pop
dec
in
popf
cmc
adc
enter
or
add
add
xchg
push
inc
ljmp
push
lods
cmp
push
aas
fistpl
add
add
jge
cltd
add
add
scas
adc
pop
push
mov
ret
mov
add
add
lods
loopne
hlt
inc
push
jp
add
add
out
mov
repnz
sub
imul
add
int3
mov
add
fidivs
nop
dec
jo
or
scas
jg
and
add
add
mov
movsb
repz
add
add
jbe
add
jge
push
push
enter
daa
pop
hlt
rolb
add
add
xor
jl
in
add
add
add
inc
xchg
xchg
xor
into
insb
inc
lahf
cmovbe
add
add
testb
cmpsb
ficompl
in
push
inc
js
les
add
add
loope
and
sub
sbb
add
add
int
test
or
shlb
xor
add
add
adc
roll
add
add
jl
outsl
pop
addr16
hlt
sub
aas
sub
pushl
add
jno
faddl
jg
add
add
outsb
dec
jecxz
adc
sub
jg
and
add
mull
mov
push
xchg
popf
jge
stos
test
jle
idivl
inc
sbb
add
add
and
push
sahf
mov
ja
xor
cmp
add
add
stc
jecxz
mov
addb
add
ss
mov
mov
testb
add
add
xor
call
add
add
into
sbb
adc
loopne
iret
adc
inc
rolb
add
add
aas
add
sti
dec
add
add
sbb
jno
loopne
movsl
cmp
xlat
cmp
push
add
add
mov
loope
push
add
add
jne
shll
cmp
sbb
mov
flds
sbb
out
std
sbb
add
add
sarl
sbb
add
add
adc
push
sbb
add
add
cs
aad
stc
pop
inc
sarb
aas
ret
outsb
add
add
dec
call
fistps
jae
dec
lea
adc
add
add
subl
add
pop
add
inc
xchg
aam
lock
or
add
add
mov
cmp
test
fwait
std
pop
push
aaa
dec
adc
loope
add
add
arpl
cld
das
daa
push
add
add
mov
push
mov
pop
pop
or
add
add
sub
out
aam
sub
add
pushf
push
lea
rol
push
fcoms
add
add
inc
outsb
lods
pushf
aaa
pop
add
add
mov
mov
mov
add
add
cltd
mov
mov
add
push
fisubrs
loopne
jp
jge
pop
ss
ds
add
add
roll
ret
pop
fst
out
add
add
out
jp
cmp
add
stos
mov
add
add
out
aas
xor
cmp
add
fisttps
addr16
fisubrl
ja
ss
add
add
mov
or
dec
mov
push
mov
out
pop
push
int
inc
lods
repnz
add
jns
dec
mov
add
add
mov
push
mov
daa
mov
lock
pop
addr16
leave
add
add
mov
js
mov
add
add
rcl
jne
mov
jle
push
data16
add
add
cmp
or
add
out
mov
sub
cltd
add
aaa
and
add
add
sub
xchg
xor
add
add
sbb
mov
ss
iret
lret
add
add
pop
pop
adc
inc
cmc
push
aad
add
add
outsl
fucomp
popf
add
inc
mov
add
xchg
mov
jne
add
add
scas
jae
adcl
mov
fnsave
stc
add
add
leave
and
hlt
call
inc
cmc
icebp
or
test
sub
add
add
add
int3
mov
add
push
scas
fadd
fdiv
mov
scas
pop
mov
add
add
lea
addl
add
jbe
xchg
loope
xor
aam
push
jne
add
add
jno
sub
jl
adc
add
sub
xor
imul
add
add
test
shll
add
add
in
mov
js
pop
into
pop
mov
jnp
add
add
dec
mov
sub
enter
add
ds
movsl
adc
cmp
dec
jmp
popl
or
add
add
sbb
add
jae
add
add
aas
pop
dec
pop
mov
roll
jle
inc
add
add
push
jb
push
fdivl
add
outsb
lods
insb
mov
addb
xchg
add
add
mov
out
add
add
push
xchg
cld
cwtl
int
xchg
cmpsb
fdivs
xlat
add
add
sarl
sldt
add
sahf
pop
lds
push
cmp
outsl
mov
mov
add
add
lcall
add
add
ss
cmp
cmp
insl
inc
out
jno
add
add
xor
mov
add
add
into
add
cmc
aam
scas
loopne
mov
add
add
imul
in
add
add
data16
cli
push
lods
sbb
aaa
xlat
ja
mov
add
add
dec
mov
add
cwtl
fwait
test
nop
mov
out
add
add
jns
adc
cli
add
add
add
xchg
push
pop
fcompl
xchg
out
jge
dec
add
add
adc
outsb
pushf
jge
scas
add
add
cs
mov
inc
jmp
imul
pushf
and
add
add
mov
jne
add
add
jbe
jo
or
ret
cwtl
push
mov
xor
add
add
adc
add
add
pop
movsl
dec
movb
int
inc
lret
cwtl
das
dec
gs
mov
fstpl
add
add
adc
std
add
pop
dec
or
jne
adc
add
icebp
cmp
cld
pop
mov
add
cmpsb
adc
mov
ds
add
add
sub
or
das
add
add
es
pusha
sti
insl
loope
xor
movsl
aaa
jle
cmpsl
add
add
add
popa
pop
push
stc
add
add
mov
xchg
sti
and
aad
rdmsr
mov
add
add
cltd
out
int
fisttpll
add
mov
and
mov
add
rcrl
and
add
out
fucomp
mov
add
andb
add
add
pop
and
add
add
xchg
push
sbbl
cli
bound
add
add
pop
ds
mov
add
add
shlb
add
jge
dec
out
and
add
jns
mov
repnz
add
mov
inc
mov
jmp
mov
add
add
mov
mov
mov
add
add
hlt
xchg
jne
aam
pusha
cmp
je
add
add
jmp
jns
add
add
out
pushf
or
aam
and
lods
sti
add
add
and
rep
add
add
test
ss
jle
adc
adc
add
add
xor
inc
add
mov
add
add
xor
dec
popf
mov
inc
cmp
add
xchg
adc
cli
add
add
scas
cmp
clc
jnp
mov
add
add
lcall
add
add
inc
clc
add
ror
sbb
aaa
out
or
add
add
or
int3
ja
cmp
add
add
mulb
movsb
lds
popa
jo
adc
scas
cmp
add
cmp
movsb
or
add
add
add
fwait
push
jge
into
xor
or
std
add
add
jno
inc
idivb
inc
add
add
push
or
jb
or
jmp
add
mov
add
add
test
mov
or
add
add
aam
push
js
std
ficoms
sbb
add
gs
sub
dec
lea
add
add
adc
sbb
daa
mov
popa
pusha
insl
add
add
sbb
jns
add
add
add
pop
mov
aad
adc
pop
std
pop
xor
add
add
enter
lods
add
add
outsb
pminsw
adc
pop
push
sbb
add
add
cli
incb
add
add
cltd
iret
pop
int
addl
mov
add
add
rcll
mov
add
add
add
popa
push
cmpsl
xor
mov
add
push
out
test
add
add
mov
mov
out
push
insb
add
add
xor
pop
fs
loop
add
add
into
jecxz
test
fwait
inc
fwait
loopne
push
xor
mov
repnz
add
imul
and
add
add
pushf
out
lods
scas
imul
bnd
xlat
mov
add
add
add
mov
in
add
add
mov
dec
ds
jle
test
ljmp
add
les
add
xchg
adc
fucomi
btr
cld
imul
add
adc
jbe
add
add
mov
test
push
jmp
add
add
xor
sbb
add
add
jns
dec
lea
sbb
mov
repz
add
add
insl
out
add
add
pop
dec
cmp
pop
in
lock
sahf
rolb
add
add
dec
orl
add
add
push
or
dec
pop
lods
pop
cmpsl
adc
mov
icebp
adc
add
add
mov
movsl
mov
insl
jp
mov
pop
test
add
or
jg
add
add
mov
push
clc
loopne
out
out
push
add
add
popa
jno
jae
jb
stos
add
add
mov
pushf
mov
cmpsb
setno
add
call
add
push
fs
mov
test
add
mov
shl
mov
pop
xor
add
add
out
inc
fs
xchg
cs
mov
dec
dec
aaa
add
add
or
add
mov
repnz
add
xchg
icebp
ds
push
mov
lret
add
inc
pushf
es
enter
add
add
roll
inc
mov
pushf
test
add
add
jns
lret
xor
shl
push
mov
pop
jne
jne
pop
or
xchg
in
addr16
adc
add
add
xor
add
or
fsubs
dec
filds
add
add
jmp
inc
loope
add
add
out
clc
mov
in
push
push
movsb
mov
and
iret
insb
insl
push
sldt
add
jle
sbbl
in
loope
iret
mov
lods
add
add
pop
int3
clc
jbe
or
or
add
add
cmc
jle
popf
mov
pop
push
mov
add
xchg
push
sub
add
add
scas
cmp
out
rclb
jle
rclb
add
add
leave
adc
aam
and
add
inc
sti
push
lret
es
pop
shl
aaa
cmpsb
js
add
add
add
pop
add
add
ficomps
loopne
jo
aaa
es
sbb
pop
add
add
cmp
js
movsb
xchg
push
or
add
add
adc
jge
loope
enter
daa
adc
push
add
add
jle
jl
loop
add
add
push
out
insl
push
xor
lahf
cmpl
add
add
push
or
add
add
cmpsb
arpl
icebp
js
ja
pop
push
mov
add
add
loope
cmp
cmpsb
add
add
ds
pop
cmpsl
pushf
rolb
jne
pop
mov
add
mov
rcrl
add
add
lds
push
pop
fcoml
sub
movsb
add
add
push
and
sub
add
add
pop
inc
adc
jp
in
sbb
mov
popa
pop
add
add
push
pushf
push
add
loopne
mov
divl
mov
shl
orl
xor
xor
jae
outsl
je
fiaddl
add
add
or
fs
sahf
aas
add
add
ss
fdivrl
arpl
fsub
repz
shll
sub
add
add
nop
shl
clc
fs
xor
int
add
add
loop
adc
mov
add
add
data16
mov
lods
xchg
popf
fwait
cmp
push
xor
mov
and
add
add
fdivp
sbb
pushf
seto
lods
dec
cmp
add
out
cmp
adc
pop
add
add
xchg
outsl
add
mov
fld
jnp
sub
adc
daa
rcrl
add
cs
mov
and
inc
and
aas
mov
add
dec
dec
dec
mov
lret
pop
cli
add
add
jl
or
jl
xchg
mov
sahf
add
add
subl
push
add
add
pop
jmp
fwait
inc
sub
push
lock
lgs
or
stc
add
add
mov
fidivrl
add
add
xchg
mov
jl
add
into
add
add
icebp
call
pop
sub
add
add
xor
aaa
mov
jl
xor
sub
in
add
add
and
xchg
pop
clc
sbb
xchg
and
add
popa
mov
data16
fnstsw
add
add
mov
mov
pop
mov
lock
add
add
cltd
push
clc
pop
test
aas
inc
add
add
push
daa
repz
fucomp
adc
leave
dec
bound
add
add
dec
cmpsl
aaa
pop
fidivs
jmp
out
mov
dec
test
or
fildl
add
add
dec
test
xor
hlt
fwait
add
add
xchg
mov
pop
ja
or
add
adc
or
fidivrs
add
add
je
jecxz
lods
fldcw
xor
xchg
out
jecxz
sahf
add
add
jns
jg
in
mov
add
add
mov
sub
mov
loope
mov
add
add
mov
adc
mov
add
add
adc
jne
ss
pusha
jae
mov
arpl
jmp
setge
add
add
out
or
dec
sbb
and
add
add
outsb
sahf
int3
insb
fcoms
add
add
jle
and
in
dec
cmp
iret
out
in
add
add
pop
add
inc
push
mov
add
add
mov
inc
dec
push
cmp
add
sub
outsb
add
add
scas
pushf
sbb
push
cmpsl
cmp
cs
fidivrl
add
add
mov
movb
add
inc
scas
nop
or
xor
gs
add
add
insl
movsl
int3
dec
cs
add
add
fidivrs
cmc
lds
loope
stos
insl
js
sti
cmp
add
add
cmp
stc
push
add
add
jbe
add
enter
daa
adc
push
add
add
jno
filds
jl
xchg
add
add
push
shl
mov
and
mov
lahf
mov
add
and
add
add
cmpsb
out
xchg
in
mov
test
add
add
loope
cmp
add
add
pop
mov
fwait
rcr
dec
xchg
pop
sbb
add
add
sbb
adc
faddl
add
add
mov
ficompl
pop
or
pop
add
xchg
add
add
push
ja
dec
fdivl
add
outsb
aad
cli
adc
xchg
mov
filds
add
add
and
add
lahf
shrl
fsubr
or
xor
xchg
add
add
sarl
mov
jnp
add
add
sahf
inc
push
lods
test
adc
popa
scas
outsw
push
cmp
add
add
mov
pop
adc
add
add
sub
in
jo
push
mov
mov
repnz
cmp
add
add
stos
or
add
add
into
test
or
sbb
mov
add
add
imul
add
data16
cmp
lods
jl
cmp
clc
xlat
xor
add
add
mov
lea
incb
adc
xor
lret
dec
xchg
xchg
in
add
add
push
aam
les
adc
add
add
xchg
cltd
test
sbb
add
in
add
add
adc
ret
sbb
add
add
dec
mov
aad
cmpsb
pop
inc
cmp
push
aas
aas
add
add
dec
les
mov
add
add
jg
loop
inc
jl
cwtl
aaa
xor
add
add
addl
test
add
add
std
push
inc
mov
shl
push
push
cmpsb
das
jmp
jnp
add
add
gs
add
add
test
dec
std
es
cmpsl
adc
add
mov
addr16
add
add
mov
mov
mov
jno
mov
fwait
push
mov
sub
push
jl
pop
and
add
add
es
jbe
xchg
movsb
dec
clc
push
test
add
add
popa
lahf
mov
xor
add
add
stos
jae
push
lret
inc
repnz
mov
cltd
mov
xchg
mov
add
add
enter
ss
inc
and
xchg
icebp
mov
add
add
mov
add
out
push
das
inc
xchg
mov
jns
incl
stc
push
add
add
or
stos
lret
fcmovu
add
add
xchg
fs
and
ja
pop
movsb
add
add
inc
lret
or
or
add
add
push
pop
mov
xor
ret
add
add
jns
fadds
out
cmp
add
add
ret
mov
or
xlat
mov
mov
add
xchg
add
add
dec
sbb
xchg
jge
pusha
push
or
filds
add
jmp
fisubrl
out
or
mov
aam
int
add
add
test
pop
insb
inc
pop
pop
add
add
jle
mov
call
iret
inc
test
pop
cmp
inc
and
filds
add
add
jnp
cmp
ret
sbb
inc
mov
add
xchg
sbb
or
add
add
out
sub
rorb
mov
add
add
incl
hlt
mov
add
inc
add
rcrl
fwait
pop
aaa
and
mov
add
add
rol
push
int3
cmp
je
add
add
filds
vmaxps
scas
fidivrl
add
add
cmp
aaa
movsb
stos
lock
add
add
bound
cli
sar
adc
add
fistpll
movsb
add
add
push
mov
call
and
testb
gs
add
add
test
in
std
add
add
add
mov
js
daa
jno
test
add
add
loope
push
call
add
add
jl,pt
and
mov
jle
add
add
sbb
int3
or
andl
add
dec
pop
sub
mov
jp
in
add
add
xlat
jmp
add
add
outsb
cmp
xor
mov
jge
push
inc
add
add
add
outsb
sub
add
add
push
mov
scas
add
div
test
add
add
adc
xchg
addb
add
sahf
call
add
mov
jg
add
add
stc
jbe
out
lods
jecxz
add
add
ss
jge
cmp
pop
movsl
lcall
add
xor
insl
movb
add
into
mov
loopne
xor
add
add
imul
adc
data16
cmp
cmp
push
or
add
add
clc
mov
and
clc
gs
data16
ja
add
add
fsts
xchg
les
imul
xchg
pop
push
clc
sbb
adcb
add
add
adc
addr16
sub
cmp
add
add
mov
add
inc
push
imul
fdivp
sub
add
add
imul
dec
sub
add
add
xorb
lea
sub
mov
xorb
add
sbbl
add
pop
xor
repz
cmp
jl
mov
sbb
lret
add
add
mov
lock
add
add
sbb
pop
std
mov
inc
push
cmpsl
adc
imul
xchg
hlt
movsl
cld
push
dec
inc
add
add
mov
add
mov
add
sub
or
aam
out
pushf
add
add
sub
cli
insl
jge
mov
xchg
jo
xchg
mov
add
popa
mov
pop
lods
mov
outsb
add
add
mov
mov
ss
cmpsb
cmp
add
add
or
add
add
adc
cmp
xchg
or
add
add
sar
stc
rcrl
jno
add
add
imul
fdivr
movsl
push
cltd
add
add
or
jne
xor
adc
add
add
loop
scas
pop
add
testl
popa
pop
pop
or
push
aad
add
add
mov
outsb
or
mov
add
jns
aad
in
dec
hlt
add
add
mov
sub
push
das
or
push
pop
addr16
xchg
add
add
mov
sbb
add
add
add
pusha
test
aam
add
add
jmp
movsl
adc
out
ret
xlat
filds
shl
push
adc
add
pushf
outsb
ljmp
add
jle
inc
ja
adc
mov
add
add
pop
jno
mov
add
add
push
xlat
imul
insb
sub
cmp
add
jg
jbe
add
add
xor
pop
dec
mov
add
add
jbe
xchg
push
aas
cmp
add
add
enter
xchg
jmp
aaa
jecxz
jmp
add
add
addr16
cmp
and
add
add
fiadds
mov
jo
push
lret
scas
mov
add
cmp
sahf
movsb
xor
add
jbe
cmp
jge
jno
enter
daa
adc
add
or
xchg
add
add
xchg
fdivrp
xor
jo
adc
add
add
test
mov
add
cmpsb
in
or
js
pop
or
ret
lcall
rcrl
add
add
ds
cmp
movsl
xor
rclb
in
add
add
sbb
jecxz
fstps
push
arpl
pop
push
sbb
sub
fbstp
pop
stc
xlat
popl
add
add
and
and
add
add
sbb
cmpsl
jmp
and
es
add
add
mov
add
push
movsl
mov
mov
pop
inc
jecxz
mov
xor
add
add
lods
and
jle
add
add
sahf
mov
test
fnsave
pop
popa
add
test
stc
sub
add
add
add
ss
outsl
cmpb
out
cmp
lock
lahf
add
add
xor
ss
out
std
add
add
into
outsl
js
cmc
mov
pop
loopne
dec
inc
pop
xor
into
add
add
imul
bound
sub
lods
dec
mov
fidivs
xlat
mov
lea
add
add
arpl
add
add
incb
daa
gs
loope
nop
ljmp
add
add
adc
xchg
pop
jbe
sbb
sti
lods
jb
clc
insl
mov
adc
ds
pushf
aam
xchg
add
add
cs
jae
pop
push
gs
jb
dec
aas
jge
test
add
add
jo
je
lds
add
add
movb
xchg
cwtl
lods
mov
in
add
add
xorl
jae
add
add
pop
aam
dec
inc
mov
or
dec
add
add
mov
jnp
xchg
add
add
negb
outsl
std
inc
out
dec
repz
adc
mov
icebp
insl
scas
cld
xor
add
add
mov
stc
insl
mov
fsts
add
jmp
adc
es
pusha
sti
insl
outsb
mov
int3
lock
loop
lahf
add
add
popa
int
cmp
push
xor
add
add
mov
mov
inc
push
prefetch
add
adc
push
add
add
push
jo
mov
fs
test
xchg
ja
cmp
add
add
rcll
mov
add
add
out
int3
leave
mov
add
or
inc
mov
add
mov
in
xor
mov
add
dec
addr16
pop
cmp
pop
ja
mov
add
add
mov
or
in
add
add
push
pop
ret
hlt
add
inc
fimull
add
add
jns
jbe
in
adc
add
add
mov
push
xchg
shrb
addr16
or
add
add
fdivrl
inc
add
add
dec
loope
pop
jne
ss
pusha
inc
inc
aam
shl
add
add
jmp
jo
addl
outsb
out
xor
mov
xchg
mov
push
lods
int3
add
add
and
call
add
shl
pop
movsb
pop
adc
addr16
add
loope
add
add
jne
inc
aaa
sub
add
add
push
add
mov
mov
add
xchg
mov
jmp
add
add
scas
lds
jo
jl
mov
mov
add
add
in
push
jp
push
loope
add
add
inc
pop
add
ret
jg
sbb
mov
aaa
mov
add
add
call
add
add
add
and
outsl
mov
mov
maxps
add
add
xlat
fsubs
add
jbe
or
enter
daa
adc
add
add
jno
fidivrl
push
add
add
push
jp
sub
and
mov
test
test
addl
add
add
push
shrd
sub
pop
add
add
add
fadds
or
cmp
add
ret
movsl
cmp
shrb
popa
cmp
cmp
add
add
xchg
and
add
cmpl
add
add
rcrl
pop
js
std
sub
dec
pop
js
addb
add
push
jl
adc
mov
inc
add
add
outsb
test
adc
out
inc
jg
or
add
add
add
lock
add
push
test
jl
cld
fcomps
divl
lds
add
add
inc
pcmpgtd
add
sahf
cs
jg
add
sbb
outsl
lock
add
add
in
out
fs
js
add
add
ss
cmp
dec
int
out
xchg
inc
add
add
xor
and
cmp
inc
mov
into
push
pop
fcomip
jle
sti
loopne
orb
add
add
pop
imul
add
data16
fldt
sbb
xlat
icebp
bound
mov
into
out
add
add
push
shll
dec
nop
dec
mov
int
add
add
ret
fstpl
add
add
loop
dec
call
ja
loopne
add
add
jb
fcomps
add
ja,pn
dec
aad
inc
je
lea
push
add
add
dec
sub
and
add
add
mov
test
push
jno
add
add
or
test
add
add
pop
ja
push
inc
inc
xchg
addr16
idivb
add
add
push
stos
pushf
add
add
mulb
cli
jb
out
xor
cvtps2pi
add
add
inc
mov
cld
pop
mov
add
add
push
push
or
clc
jp
add
add
sub
fs
aam
mov
add
add
xor
stos
insl
dec
sub
xchg
and
lods
add
add
popa
in
mov
add
add
mov
mov
bound
insb
or
add
add
pop
cwtl
out
add
add
add
fisttpll
sub
xchg
add
shll
push
pop
add
add
out
das
add
add
jmp
sbb
add
daa
negb
xor
addb
add
add
mov
ficomps
mov
sbb
add
add
xor
add
add
push
add
filds
lahf
pop
mov
pop
jp
add
add
jns
mov
jge
add
add
mov
adc
loopne
add
add
mov
fstpt
pop
incb
add
dec
bound
adc
fistps
add
add
jmp
cmp
test
add
add
icebp
lea
movsl
arpl
push
xchg
cmp
add
add
and
into
int3
insb
test
add
add
xor
adc
dec
xor
arpl
add
add
outsb
movsb
inc
inc
ror
add
add
push
les
lds
xor
das
inc
aaa
iret
inc
add
add
xchg
sbb
in
add
add
scas
sub
push
ret
pop
out
rcrb
das
add
add
leave
fs
fdiv
pushf
xlat
cmp
add
add
mov
or
and
add
add
xchg
scas
dec
int3
stc
mov
add
add
fmulp
clc
lds
cmovbe
add
add
mov
xchg
add
add
jbe
cmp
lcall
add
add
jno
lret
pop
jl
pop
mov
add
add
pop
cwtl
test
and
pshufw
add
test
dec
in
add
add
cmpsb
repnz
adc
ds
add
inc
jno
add
add
loope
mov
add
add
ds
push
movsl
inc
rcl
rorb
icebp
fwait
rorb
int
movl
int
lahf
mov
popl
imull
add
sub
add
add
outsb
popa
faddp
adc
add
jg
repnz
add
add
mov
pop
pusha
mov
push
sub
add
add
stos
inc
cltd
int
fists
aam
lcall
add
rcr
rorl
add
sahf
rorl
test
arpl
bound
fisubl
dec
inc
cmp
add
add
xor
mov
mov
outsb
out
sbb
add
add
push
sbb
mov
add
add
xor
dec
lods
loopne
les
pop
outsl
adc
imul
jns
add
add
xor
mov
push
in
xlat
xor
outsb
add
add
mov
cmp
add
add
decb
add
nop
mov
cmp
add
cli
sub
add
add
xchg
movsl
adc
icebp
mov
add
add
adc
push
push
sub
add
ficompl
pop
inc
test
sub
mov
add
dec
mov
mov
add
add
mov
bound
inc
mov
add
add
andl
jne
add
add
in
aaa
inc
int
mov
ret
sbb
addr16
les
add
add
xchg
dec
cli
add
add
mul
or
xchg
rep
dec
jmp
or
add
add
icebp
sbb
ja
add
add
pop
adc
mov
pop
in
add
add
sub
push
push
aam
push
mov
es
ss
xor
xor
inc
lods
int
pusha
cmp
add
add
aas
ljmp
add
mov
mov
push
aaa
xchg
stos
bswap
jns
add
add
cltd
push
inc
jecxz
add
add
cmpsl
rcr
mov
cmp
ss
xor
add
add
incb
rolb
add
add
xchg
xor
xchg
fdiv
xchg
xor
addb
or
mov
add
add
xchg
mov
ja
movb
add
inc
es
or
or
add
add
push
mov
mov
out
ds
hlt
add
add
jns
mov
stos
add
add
mov
or
mov
enter
outsb
mov
add
xor
add
xchg
cmp
subb
into
mov
incb
add
add
jmp
push
xor
add
add
out
mov
imul
dec
add
add
and
mov
insb
out
jmp
jle
xchg
fxam
sub
adc
add
xchg
add
add
pop
push
or
inc
dec
iret
pop
add
add
push
xchg
popf
pushf
cmpl
mov
das
add
add
xchg
je
or
xorb
scas
mov
push
or
adc
mov
test
mov
mov
leave
fucomi
adc
out
and
add
add
push
clc
or
andl
lret
add
add
pop
int3
in
lea
add
add
imul
adc
sbb
test
insl
add
add
cmp
test
add
jbe
jo
jge
add
sbb
add
add
jno
loopne
jl
daa
or
add
add
inc
jecxz
xor
inc
int
lahf
es
xchg
add
add
sbb
dec
add
add
cmpsb
jne
sahf
in
and
js
pop
andb
add
add
loope
cmp
sub
add
add
add
or
movsl
dec
lahf
and
and
mov
add
add
sbb
pusha
add
add
push
cmpsb
das
pop
loop
sub
movsb
pop
jbe
incb
add
add
in
fmull
inc
add
add
outsb
les
jecxz
jl
ret
fbstp
add
add
mov
pop
mov
mov
add
add
push
scas
inc
push
int
or
addr16
gs
add
add
shll
mov
add
sahf
je
mov
xor
add
outsl
scas
mov
add
add
stc
push
adc
push
add
add
js
xchg
cmp
inc
inc
popa
out
adc
add
add
xor
cmp
add
add
into
sbb
xor
or
fucom
inc
sbb
and
add
add
jae
adc
add
add
add
data16
cmp
cmp
subl
insb
xchg
dec
in
movsb
mov
add
mov
cmc
imul
dec
jb
dec
add
add
fnstenv
sbb
les
flds
add
add
xor
jp
jne
scas
add
add
adc
cltd
jl
aad
xchg
add
add
cs
dec
xlat
inc
ret
pop
sub
pop
xchg
loope
add
add
pop
jne
lea
addb
add
mov
or
fcompp
jo
pushl
add
add
xor
lea
pop
mov
xchg
pusha
lock
mov
pop
add
add
mov
sbb
pop
add
add
imulb
je
std
cmp
inc
dec
in
lods
cmpsl
or
add
icebp
repnz
cld
mov
sbb
add
add
fidivs
xor
ss
lea
add
add
into
dec
aaa
aam
jb
add
add
es
add
insl
sbb
clc
jge
xchg
lahf
sub
add
add
popa
adc
rolb
add
mov
int
pusha
push
adc
or
sub
add
add
cltd
lahf
in
movl
shl
test
cmova
add
add
push
dec
sbb
sub
add
add
cmc
push
cli
xchg
pop
inc
aam
stos
push
inc
jmp
cmc
sub
add
add
adc
inc
cli
add
add
xchg
sbb
ja
test
add
add
inc
mov
pop
xor
add
add
inc
imull
add
push
lcall
add
add
xor
in
imul
add
add
push
cmp
ret
pop
cs
in
add
add
mov
pop
xor
add
dec
mov
jne
mov
icebp
fistps
add
jmp
shl
add
add
add
imull
out
jae
cmpsl
mov
pmaxub
and
mov
or
jle
out
adc
outsb
cmpl
and
add
dec
mov
add
add
push
dec
cli
dec
popf
ret
aad
push
xor
add
xchg
lret
call
add
add
scas
out
mov
push
leave
jp
shlb
sub
inc
add
add
leave
push
scas
cwtl
hlt
xor
aas
add
add
inc
adc
or
cmp
or
ffreep
je
add
add
ret
test
int3
iret
imul
add
add
push
xor
lds
push
imul
cld
cld
aad
popa
mov
add
add
jbe
adc
lret
enter
daa
or
add
jno
sbb
dec
ret
ja
add
add
and
inc
xor
fdivl
inc
jmp
add
in
sbb
add
add
or
jnp
sbb
loop
mov
add
loope
setp
add
ds
mov
push
shrl
incl
and
add
add
cmp
cs
jns
add
add
sbb
sbb
in
pushf
sub
test
cmc
xchg
add
add
push
add
test
add
add
and
int3
xorb
addr16
int
add
add
mov
adc
in
push
add
add
push
mov
xor
mov
loopne
dec
mov
imull
add
rorl
scas
mov
add
sahf
pop
add
cltd
push
mov
xorl
add
add
stc
or
outsb
fs
and
add
add
mov
out
pop
sub
add
add
mov
sub
cmp
add
add
into
sti
scas
sbb
sarl
popa
pop
lods
insl
jnp
add
add
je
adc
loope
add
add
cmp
and
lret
xlat
scas
pop
popa
add
add
mov
movzwl
add
add
shll
pop
nop
push
ds
dec
shrl
repnz
add
fldcw
jecxz
pop
or
add
add
xchg
sub
push
hlt
scas
cmp
add
add
ja
jle
xor
add
add
mov
bound
inc
fimuls
aas
stc
shrl
mov
ljmp
add
xchg
mov
lea
mov
add
orl
add
pop
pusha
sbb
fldt
pop
lock
or
and
add
mov
cmpsl
jg
add
add
imulb
clc
std
jecxz
jo
fbstp
or
call
icebp
leave
add
add
add
movsl
mov
and
push
ret
add
add
lds
or
leave
in
add
add
es
mov
clc
mov
mov
add
out
lods
lret
add
add
mov
aam
int
in
ss
jns
add
cltd
sub
test
fiadds
add
add
dec
mov
add
push
es
pop
xchg
add
add
add
lods
ds
pop
mov
and
add
add
pop
outsl
xchg
xchg
data16
mov
inc
pop
add
add
or
xor
add
add
in
mov
ja
adc
add
add
inc
push
and
and
push
jmp
cmp
mov
dec
out
cld
jnp
add
add
jns
pusha
and
sub
add
lods
xor
or
lods
add
add
mov
imul
mov
imul
insl
or
pusha
mov
in
fistpll
sub
add
add
loop
gs
pushf
out
fildl
add
add
jp
je
pop
xlat
aam
out
pop
push
dec
mulb
and
in
sbb
sub
add
add
cmp
in
inc
cmpsb
adc
mov
iret
andb
add
add
pop
test
inc
inc
arpl
or
add
add
or
or
push
mov
inc
add
add
xchg
and
sbb
leave
add
add
scas
push
mov
xchg
shr
add
add
add
leave
push
jge
add
add
inc
adc
lods
or
neg
imul
add
add
pop
add
add
fidivs
cmp
shrb
add
add
mov
mov
add
add
jbe
cs
xchg
daa
or
movsb
add
add
jno
jne
jl
xor
add
add
push
push
xor
ja
fistps
add
add
scas
mov
add
repz
push
sbb
pop
adc
add
add
loope
push
movsl
sub
sbb
add
add
dec
mov
addr16
fisubrl
mov
add
sbb
stos
add
jae
add
add
ffree
mov
sub
pop
je
fadds
add
add
ret
pop
fsubl
imul
add
outsb
mov
cmpsl
adc
push
inc
push
jg
roll
add
mov
ss
insb
cmpsb
add
add
push
mov
jo
sbb
fadds
xor
add
lahf
and
dec
add
add
sahf
mov
testl
outsl
insb
push
add
add
stc
shlb
out
xchg
sbb
add
add
div
cmp
cmp
inc
add
add
xor
loopne
add
add
into
ficomps
cmc
lcall
pop
int3
and
add
add
sbb
adc
adc
mov
cmp
cmp
mov
add
add
mov
jp
scas
add
add
idivb
gs
fcoml
xor
roll
add
fstps
push
test
add
add
jle
mov
jae
lret
add
add
adc
mov
pushf
sub
or
add
add
add
aad
fildll
inc
stc
push
ret
aas
cwtl
negb
add
add
sub
je
or
xchg
add
push
sub
mov
test
add
add
andl
add
pop
add
out
aam
stc
das
add
pushf
add
add
mov
xor
repz
add
imulb
xor
xchg
add
add
mov
sti
roll
add
add
insb
mov
lret
aaa
sbb
sub
lret
add
es
cld
clc
repz
in
add
add
outsl
xor
add
mov
fstl
movsl
jns
call
add
cltd
or
xor
push
aas
push
inc
frstor
sub
test
inc
aad
mov
outsb
add
add
roll
push
les
pop
add
add
out
mov
push
cmpsb
add
int
lcall
cli
add
add
or
test
xor
dec
int3
add
add
xchg
add
pop
jecxz
scas
ja
sti
mov
add
add
nop
popf
or
jle
add
add
push
mov
mov
sub
fcmovnu
lock
add
jns
xor
push
add
add
mov
std
mov
mov
clc
jmp
add
add
mov
enter
add
mov
jne
pop
sbb
fistps
cmp
add
add
mov
add
add
std
xchg
jnp
inc
sbb
jle
push
lea
add
es
fildll
repz
add
jle
jle
in
popa
dec
adc
and
add
mov
test
add
add
rol
mov
and
inc
xor
push
add
add
xchg
jns
or
adc
add
add
scas
mov
loopne
ffreep
xlat
rolb
sbb
add
add
inc
and
enter
add
add
lock
or
mov
pop
aaa
pop
pop
js
add
add
icebp
xor
int3
movsl
jne
add
add
ficoms
lds
lock
repz
add
add
push
mov
add
add
jbe
mov
ss
daa
or
pop
add
add
jno
mulb
add
add
push
jmp
jl
and
add
add
add
test
jp
rolb
add
add
ficoml
js
sub
add
add
loope
and
add
add
jno,pt
movsl
pop
popa
movsb
shlb
cmpsb
jecxz
add
add
test
shll
add
add
mov
mov
sub
push
enter
inc
add
add
push
das
jmp
iret
add
add
outsb
in
cmp
insl
sbb
scas
mov
add
jnp
mov
add
add
mov
cmp
jg
fstp
rcr
imull
mov
add
add
lds
subb
add
add
cmpsl
std
insb
xor
pop
jecxz
dec
lret
add
add
ja
xor
cmc
add
add
ss
mov
inc
mov
iret
ljmp
xor
xchg
cmp
pop
push
add
add
roll
cmc
popa
ret
ret
loopne
lahf
push
pop
jmp
pop
add
add
imul
cwtl
roll
add
add
xlat
cmp
inc
mov
out
add
add
in
dec
add
add
sbb
xchg
gs
nop
or
cmp
lods
add
add
mov
add
add
xchg
mov
push
sbb
fnstsw
repnz
add
and
xchg
add
add
cs
aad
shrl
aaa
das
out
add
add
dec
jl
mov
add
add
xchg
mov
cwtl
cwtl
comiss
cmp
pop
add
add
cmpl
add
sbb
jmp
and
das
jecxz
lods
add
add
mov
mov
add
div
insl
mov
dec
aad
inc
cmpsl
or
add
ja
dec
cld
xor
add
xor
push
mov
xchg
mov
add
add
sub
nop
add
add
sarb
clc
cs
push
xchg
pop
push
and
popa
push
sbb
lods
mov
add
mov
loop
std
push
mov
addr16
add
add
cltd
inc
mov
add
add
rcr
dec
outsl
into
test
shlb
jge
add
add
rcrl
and
loope
xchg
add
add
out
push
jp
xchg
hlt
mov
add
sub
push
out
add
add
or
into
xor
aam
add
add
xchg
iret
pop
pop
sahf
inc
scas
ja
imul
add
add
ret
testb
add
add
das
mov
pop
mov
push
inc
out
mov
add
jns
scas
mov
add
add
mov
loope
mov
mov
xchg
addr16
out
add
add
mov
jle
mov
add
add
push
in
jne
ret
jns
out
jo
jp
out
add
add
shlb
add
add
out
ja
sub
pop
fwait
stos
push
int3
mov
add
add
and
outsb
adc
jle
mov
in
out
adc
jp
sub
pop
bnd
push
add
add
push
xchg
and
push
mov
inc
add
add
xchg
rcrb
add
add
scas
pop
test
push
xlat
lods
shlb
pop
mov
add
add
mov
dec
hlt
adc
add
bound
sub
jmp
mov
add
add
mov
add
add
fdivp
xor
jo
fcmovb
scas
shlb
add
add
cmp
idiv
movsb
add
add
add
jbe
mov
into
enter
daa
or
add
fwait
lock
push
add
add
push
int3
xchg
sbb
lods
jecxz
lahf
mov
add
test
inc
hlt
sbb
add
add
sarl
int3
or
add
add
loope
pusha
and
addl
xchg
push
movsl
gs
arpl
add
add
loopne
data16
arpl
arpl
mov
pop
jb
nop
add
add
push
xchg
js
mov
test
add
add
xor
mov
dec
mov
add
add
mov
jbe
add
add
push
mov
stos
fdivrs
aas
imul
adc
add
add
ror
mov
add
sahf
add
sub
xchg
dec
mov
add
add
stc
cs
insb
add
add
test
jne
xor
inc
add
add
xor
sbb
hlt
cmpsb
roll
add
into
movsb
fwait
push
sub
mov
xor
or
add
dec
sbb
jb
add
add
retw
lods
fwait
mov
jnp
push
xlat
imul
add
add
mov
push
repnz
add
add
cmp
mov
nop
out
inc
dec
out
sub
icebp
je
add
add
int3
clc
jnp
pop
movsb
inc
jno
mov
add
add
jl
xchg
add
cs
loope
aad
push
repnz
das
xchg
mov
imul
add
dec
repz
je
aas
jge
add
add
lcall
cwtl
lret
mov
movsl
jne
add
add
xchg
add
add
pop
dec
mov
dec
jnp
mov
jg
ret
add
add
mov
dec
dec
fiadds
add
add
xor
test
fsubrs
and
shr
jge
or
xchg
add
add
icebp
dec
mov
sbb
add
add
cli
mov
jbe
mov
adc
add
add
stos
int3
nop
aam
xchg
add
add
inc
ss
mov
iret
clc
imul
add
in
js
or
add
jmp
mov
faddl
add
add
popa
je
add
add
push
lds
stos
test
int
xchg
add
shll
push
je
add
add
subl
add
lcall
add
add
icebp
fmuls
add
add
xchg
jg
pop
pop
xchg
dec
pop
fadds
add
add
sbb
or
in
into
add
add
push
shr
fldl
roll
out
cltd
mov
add
lret
mov
lret
add
add
mov
cmp
or
sbb
add
add
mov
fnstsw
add
dec
push
jecxz
jne
mov
add
cltd
push
adc
add
add
arpl
adc
add
add
add
mov
cmovg
cwtl
dec
push
push
or
add
add
and
insb
push
jmp
add
add
jle
fmull
adc
into
iret
popf
fiadds
add
add
mov
sub
add
add
push
pop
sti
popf
pop
push
shrl
pop
inc
xor
add
add
xchg
daa
orl
add
add
insl
dec
xchg
cmp
jle
movsl
stos
pop
add
add
leave
cs
imul
sbb
jb
xchg
out
sbb
int
aaa
fildl
cmpsb
add
add
add
dec
data16
jnp
mov
ficomps
jno
jo
fldcw
add
add
cmp
cmp
movsb
lea
add
add
jbe
xor
enter
daa
or
cmpsl
add
add
jno
fs
hlt
jnp
add
add
push
scas
movsl
dec
xor
dec
fucomi
lahf
ror
add
add
test
adc
add
test
pop
js
loopne
pop
mov
add
loope
ret
je
inc
repz
ds
movsl
insb
addl
aad
out
add
add
sbb
or
add
add
es
pop
mov
jbe
aad
cmpsb
pop
icebp
xchg
mov
add
add
lahf
dec
fsubl
cmp
add
add
and
adc
mov
mov
add
add
mov
aad
add
add
mov
dec
lret
fdivs
pop
dec
imull
add
shll
push
scas
mov
sahf
mov
lods
xor
dec
fildll
xchg
and
add
add
in
xor
sub
add
add
push
mov
mul
sbb
call
add
xor
in
inc
cmp
enter
add
into
xchg
cmpsb
cmc
out
pop
test
dec
add
pop
sub
add
add
imul
mov
add
xchg
mov
xlat
stos
fidivrl
add
add
mov
add
pop
mov
mov
xchg
nop
ret
dec
dec
xor
flds
les
add
xchg
aaa
int3
or
shll
lock
add
add
adc
add
add
add
cs
adc
nop
scas
ja
dec
shrl
jne
pop
add
add
dec
push
movsl
je
pop
jle
add
add
popf
xchg
cwtl
test
sub
add
add
jno
mov
add
add
jmp
lock
jne
mov
add
mov
rcr
stos
add
add
divb
sub
jg
call
cmpsl
or
das
add
add
icebp
and
sub
mov
mov
mov
shrl
add
mov
clc
pop
add
add
es
and
insl
pushf
xor
push
xchg
fisubrl
add
loop
lods
jbe
in
add
add
lock
push
syscall
jbe
add
add
cltd
mov
movsl
test
add
add
push
mov
mov
test
outsl
jo
xor
pop
add
add
rorl
sub
lods
add
add
out
in
sub
xor
cmp
lcall
addr16
xor
add
add
xchg
adc
adc
mov
add
add
inc
mov
rorb
arpl
push
jne
mov
jns
jl
sbb
icebp
out
js
repz
add
jns
mov
in
cmp
add
add
mov
push
loope
dec
add
or
hlt
jl
add
add
xor
jle
add
add
push
add
fistpll
add
jmp
enter
add
add
xchg
mov
push
dec
jg
add
add
and
pop
insb
jno
add
add
jle
stc
add
xchg
sbb
adc
clc
test
cmp
add
add
pop
pusha
das
lcall
add
push
sbb
popf
xchg
push
push
mov
mov
xchg
jle
rcrb
call
add
mov
aam
push
lcall
add
add
movsl
sbb
hlt
test
add
inc
pop
mov
int3
sbb
inc
sbb
lcall
add
mov
add
cmp
dec
dec
jo
jmp
scas
nop
test
add
add
and
aad
add
add
sbb
jge
cmp
enter
daa
or
add
push
bnd
cmp
add
add
push
xchg
test
xor
jecxz
call
add
add
test
fstpt
add
add
cmpsb
xchg
mov
pop
cli
sbb
add
nop
dec
adc
lods
cmp
ficoml
lret
cmpsl
mov
xor
and
add
add
dec
es
mov
add
jmp
or
pop
jo
cmpsb
add
add
push
xor
in
or
mov
outsb
push
add
adc
mov
mov
add
add
mov
mov
mov
roll
add
add
rol
int
shll
imull
inc
add
add
sar
inc
mov
sbb
add
add
cmp
push
outsl
call
add
stc
pushf
jmp
in
add
add
or
cmp
daa
lea
out
fwait
add
add
xor
loope
cmp
mov
add
push
je
mov
fneni(8087
jmp
sbb
add
add
imul
add
enterw
imul
jmp
add
mov
es
adc
incb
enter
xchg
add
aas
jne
add
add
jnp
rol
fstpt
xchg
cli
add
call
outsl
pop
out
add
add
adc
sbb
pushf
xlat
lcall
xlat
mov
xchg
adc
sbb
dec
loope
mov
add
add
mov
outsb
xchg
cwtl
inc
mov
scas
add
add
addl
add
pop
aas
call
lock
cmp
das
sub
add
add
mov
pop
sahf
add
add
idivb
mov
dec
sbb
pop
xchg
mov
add
add
cld
xchg
xor
mov
imul
add
mov
xor
pop
lock
add
add
sub
pextrw
add
add
es
xchg
fbstp
xchg
sbb
popa
pushf
sti
adc
add
mov
idivl
sub
sub
fs
add
add
cltd
jmp
or
add
add
loopne
ffree
xchg
in
test
movsb
push
xchg
add
rcrl
scas
pop
loop
in
add
add
out
inc
xor
leave
dec
outsb
add
fcmovnu
xor
add
add
fistps
cld
add
add
xchg
jmp
xor
ja
shl
add
add
inc
inc
das
mov
mov
xor
add
add
sbb
inc
add
ja
and
add
add
jns
lock
loopne
aad
add
add
lock
or
push
call
mov
sub
mov
add
add
loop
jne
dec
adc
fnstsw
jmp
xchg
add
out
ficoml
sub
push
imul
sub
add
add
sub
insb
fcompl
add
add
jle
or
cwtl
int
adc
cmp
iret
pop
inc
sbb
add
add
dec
imul
add
add
push
fadd
sbb
or
mov
add
add
xchg
aad
sub
add
add
scas
inc
push
int3
push
sti
push
and
add
add
sbb
outsl
hlt
hlt
pop
mov
add
add
jo
or
sahf
push
add
pop
mov
add
add
add
push
add
add
fsubp
lds
fdivl
adc
scas
outsl
sbb
add
add
inc
mov
movsb
mov
add
jbe
js
jge
fistps
ret
fs
pop
in
add
add
jno
popa
test
movb
add
push
jne
mov
and
pop
lahf
call
lret
add
add
test
cmpsb
mov
add
jbe
loopne
jge
add
cmp
add
add
loope
cmc
jo
pop
push
xor
add
add
std
fs
shlb
nop
mov
xchg
lret
mov
sbb
inc
lods
add
add
lods
je
pop
xlat
in
sub
pop
pop
out
stos
dec
add
add
push
mov
mov
mov
push
outsb
jns
mov
insl
enter
sub
sub
add
cmpsl
jl
add
add
push
ret
in
xchg
int
cmp
fsubrs
bound
add
add
xchg
stos
int3
mov
pusha
add
add
sahf
jmp
dec
xor
jno
add
add
stc
push
mov
inc
add
add
ss
shrb
and
loopne
add
add
mov
xchg
into
dec
sbb
loopne
mov
test
add
add
out
dec
adc
divl
add
add
dec
add
lahf
cmp
stos
xlat
sub
cmpsl
add
add
mov
xchg
mov
add
movsl
scas
out
pushf
sub
dec
or
add
add
fnstenv
into
sub
add
add
inc
mov
jle
out
or
adc
sahf
add
add
add
bnd
aad
cs
inc
orb
add
add
dec
pop
jecxz
je
test
add
add
mov
push
dec
cwtl
sti
or
scas
add
add
sbbl
enter
add
pop
xor
lcall
pop
aaa
add
add
mov
jmp
add
idiv
adc
dec
rcll
add
add
icebp
shll
push
add
add
mov
test
lret
jge
pop
bsr
sub
jp
add
add
es
pop
cmp
push
sbb
sbb
or
add
add
cmp
lods
dec
push
mov
mov
jnp
push
paddb
add
add
cltd
and
mov
add
add
push
push
es
ljmp
xchg
mov
add
mov
push
pop
lea
out
add
add
stos
decl
xchg
adc
add
adc
jp
loop
add
add
push
jo
xor
xor
add
add
xchg
into
push
pop
mov
les
add
add
lock
lret
repz
add
push
mov
adc
shrb
out
ss
add
add
jns
stc
insl
in
or
add
add
mov
cli
xchg
mov
mov
xor
add
add
mov
push
ja
mov
add
add
add
push
sahf
jne
inc
jmp
push
adc
fcomip
daa
sbb
jmp
pop
add
out
lea
lret
dec
fdivs
add
add
cltd
cmc
jg
inc
pop
fiadds
add
add
in
loop
adc
xchg
or
pop
sti
add
add
pop
into
add
mov
push
lahf
test
and
xchg
roll
xor
add
add
xchg
sub
rcrl
out
mov
add
add
inc
or
rorb
cmp
add
add
xchg
testl
add
add
mov
or
pop
lock
sbb
add
add
add
xor
cmp
mov
add
add
orl
jo
dec
pop
scas
dec
fdivr
add
add
cmp
in
movsb
and
jbe
dec
mov
enter
daa
push
movsl
rolb
add
jno
xchg
or
jne
filds
add
add
pop
mov
mov
in
and
cmp
lahf
push
jecxz
add
add
test
jno
outsl
add
add
cmpsb
lea
pop
in
js
ficoml
js
mov
loope
cli
sub
aas
lea
add
add
and
arpl
cld
insb
es
repnz
lahf
add
add
sbb
sti
add
add
outsl
hlt
cs
sub
sub
fldl
outsb
jl
add
add
push
loop
and
bound
add
add
outsb
fsubl
popa
xor
cmp
lret
add
add
bnd
add
add
push
mov
int
mov
mul
add
add
add
shrl
lods
mov
dec
inc
add
add
sahf
mov
inc
xor
into
outsl
cmpsb
in
add
add
stc
or
and
add
add
add
nop
shlb
sbbb
sbb
mov
add
add
xor
and
add
add
xor
mov
pop
xchg
add
imul
and
add
add
data16
jb
lods
aaa
fcompl
xchg
xlat
movsl
lret
add
mov
cld
adcl
enter
mov
inc
cs
push
mov
add
add
jmp
adc
add
push
push
sub
insl
cmp
add
fdivrs
test
cs
inc
mov
inc
fwait
or
add
add
dec
iret
hlt
inc
je
cwtl
pop
add
add
cmpsb
push
orb
notl
negl
xor
add
add
xor
add
add
pop
aad
xlat
inc
mov
lock
lcall
sti
jecxz
je
mov
add
add
inc
push
adc
je
out
dec
mov
pop
dec
add
add
icebp
stos
lahf
cld
or
add
add
push
push
jno
cmp
cs
and
sub
cmp
add
add
dec
test
insl
push
jb
clc
push
fwait
mov
xchg
push
ljmp
cltd
subl
add
add
loop
mov
or
add
add
in
adc
add
add
filds
adc
inc
xchg
add
rorl
lea
add
add
or
enter
and
add
add
or
ljmp
add
add
mov
mov
inc
dec
xor
push
and
inc
jne
rorl
add
push
pop
sbb
add
sub
popa
dec
add
add
jns
movsl
stc
in
outsl
jns
add
add
ds
mov
addr16
mov
add
add
mov
mov
add
add
mov
jne
mov
dec
fists
add
jmp
sub
add
add
out
mov
sub
test
cmp
adc
and
and
add
add
jle
or
in
pop
dec
adc
incl
sbb
add
add
pop
add
js
add
add
push
bound
outsb
popf
sti
jbe
push
sub
add
xchg
cmpl
xorl
add
add
scas
push
loop
push
mov
fadd
test
cmpb
add
leave
or
jmp
add
add
inc
sub
or
adc
shlb
xlat
jnp
add
add
add
push
add
add
fisubs
inc
sbb
jo
lcall
add
add
mov
ret
pop
add
add
jbe
sarb
fstps
daa
add
add
jno
out
cli
jl
je
add
add
push
cmp
xor
mov
push
lahf
cmp
add
test
cmp
inc
add
add
cmpsb
adc
in
inc
jns
js
add
add
add
aad
and
add
ds
fisttpll
movsl
mov
rcl
pop
out
push
test
add
add
repz
in
adc
add
add
xor
sbb
and
xchg
gs
in
sarl
add
add
mov
flds
add
add
pusha
adcl
stos
add
fcmovbe
add
add
mov
iret
cmp
add
add
leave
lahf
loop
jmp
dec
xchg
mull
add
rol
pop
mov
es
add
add
rcrl
xor
loopne
test
add
add
stc
sar
fs
add
shll
and
sbb
out
xlat
dec
add
add
xor
cmp
xchg
dec
add
add
into
adc
scas
cmc
or
pop
movsl
jle
add
add
imul
add
push
push
scas
lods
push
push
cmp
fwait
loop
add
add
cmp
add
jmp
xchg
gs
sbb
push
dec
leave
jl
add
add
fldenv
push
test
add
add
popl
mov
add
add
das
inc
xlat
pushf
fsubs
mov
cs
cmp
inc
mov
and
icebp
rolb
add
dec
inc
stos
lcall
add
test
shl
jno
adc
add
add
addl
xor
add
add
clc
fadds
clc
mov
das
sbb
add
mov
jnp
add
add
testb
dec
dec
mov
cmpsb
cmpsl
add
mov
add
add
subl
add
add
mov
xchg
mov
imul
mov
dec
add
add
jge
and
add
add
shlb
insl
cmp
clc
nop
or
xchg
in
mov
popa
loope
subl
add
or
scas
push
jno
add
cltd
mov
incl
add
push
xchg
or
cs
mov
add
add
shll
pop
jecxz
les
add
add
jo
pop
xchg
sahf
lcall
mov
add
or
xor
fadds
add
add
xchg
hlt
jo
sbb
insb
aaa
ja
fdivp
add
add
inc
or
out
or
cmp
add
add
add
dec
add
mov
jbe
hlt
ficoml
add
add
idivb
add
add
mov
mov
nop
or
jl
add
add
mov
sbb
loopne
addb
add
dec
test
divl
pop
stos
pusha
mov
fbstp
xchg
add
add
jmp
hlt
std
filds
add
add
xchg
push
mov
mov
inc
dec
movsl
add
add
and
insl
stos
insb
sbb
add
jle
cmc
xlat
in
cmp
pushf
jg
iret
js
std
add
add
pop
cmp
cmp
loopne
add
add
and
int
push
lods
mov
add
cs
mov
add
add
sarb
rol
dec
mov
add
add
andl
add
add
inc
sub
sub
iret
jmp
aaa
xchg
and
add
add
add
cmpb
scas
mov
fmulp
in
rol
push
cltd
sub
cld
add
add
add
imul
inc
out
ret
add
add
jbe
dec
lahf
jge
sub
mov
repnz
add
inc
add
add
jno
insb
mov
add
add
push
push
cmp
xor
dec
fldl
pop
add
add
pop
jne
add
add
cmpsb
xchg
rcrl
in
sub
adc
pop
imulb
add
add
loope
into
push
sub
xchg
push
add
add
ds
leave
movsl
daa
icebp
shlb
xchg
sbb
add
add
sub
daa
add
adc
add
add
cmc
dec
inc
pop
dec
mov
pop
insb
stos
in
add
add
push
nop
fidivs
add
add
outsb
mov
test
mov
out
mov
add
add
mov
add
add
push
int3
es
fcomp
mov
mull
mov
rcll
mov
aad
add
add
sahf
rcrb
test
aas
xor
fnstenv
add
add
stc
js
test
inc
add
add
ss
stc
mov
ret
