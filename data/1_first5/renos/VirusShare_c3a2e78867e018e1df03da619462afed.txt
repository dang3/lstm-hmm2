xor
xor
popa
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
movl
movl
mov
push
mov
push
call
call
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
mov
push
mov
push
call
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
movl
lea
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
ret
lea
push
mov
add
mov
mov
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
mov
cmp
je
jmp
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
mov
xor
divl
test
jne
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
mov
sub
mov
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
push
mov
mov
xor
call
mov
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
mov
mov
mov
call
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
push
mov
mov
xor
call
mov
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
mov
mov
movb
movb
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
lea
mov
push
add
jmp
mov
mov
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
lea
mov
push
mov
jmp
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
mov
sub
add
add
mov
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
mov
mov
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
mov
mov
movl
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
pop
ret
mov
push
cmp
testb
pop
sbb
addb
test
xorl
jo
sbb
dec
andl
subw
sbb
dec
andl
data16
sbb
test
push
gs
andl
sbb
pop
jge
dec
xorw
jl
jge
sbb
jg
data16
es
jl
test
sbb
sbb
jge
data16
sbb
sbb
sbb
jl
test
test
sbb
sbb
dec
lahf
add
fdiv
mov
sahf
pop
repz
lock
repz
mov
cmp
loop
pop
sbb
cmp
idivb
pop
sbb
pop
sbb
cmp
sbb
pop
sbb
cmp
or
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
fsubs
lock
push
push
xlat
lahf
fmuls
mov
mov
lahf
fcom
movsl
pop
sbb
movsl
pop
sbb
add
fsub
lahf
pop
and
aam
jle
lahf
pop
loopne
pop
inc
dec
lahf
pop
loopne
pop
and
pop
loopne
dec
fs
pop
loopne
pop
and
loopne
pop
cmp
lahf
pop
loopne
pop
cmp
pop
add
lahf
pop
loopne
dec
push
lahf
pop
add
pop
hlt
jl
sbb
lahf
gs
mov
add
pop
xor
pop
add
pop
call
cwtl
sbb
sbb
rclb
pushf
sbb
sbb
pop
pop
add
pop
int3
add
sbb
lahf
pop
int3
lahf
pop
and
pop
add
lahf
pop
loopne
dec
sub
pop
add
pushf
lea
sbb
lahf
pop
int3
xchg
xor
insb
adc
pop
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
incl
pop
or
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
jmp
pop
cld
ljmp
pop
cld
lahf
sbb
dec
lahf
pop
add
pop
loopne
dec
xor
cmp
cld
pop
push
mov
enter
dec
lahf
pop
add
pop
loopne
dec
xor
xchg
pop
clc
sbb
pop
cld
sbb
pop
cld
xchg
xor
insl
mov
lahf
pop
int3
xchg
jo
sbb
popf
xor
pop
call
pop
add
pop
lock
pop
loopne
pop
inc
mov
in
dec
pop
sbb
lahf
pop
loopne
fsubs
lahf
pop
in
lahf
pop
loopne
dec
push
sbbb
sbb
jle
lahf
pop
loopne
pop
cmp
pop
loopne
dec
dec
sbbb
sbb
jle
lahf
pop
and
pop
loopne
dec
dec
lahf
dec
lock
jge
movsl
pushf
cmp
hlt
repz
xor
insl
out
cltd
add
hlt
repz
repz
sbb
movsl
pop
sbb
add
lahf
insl
and
cwtl
sub
mov
sbb
sbb
sub
add
sbb
sub
add
sbb
addr16
cmpsl
push
pop
test
add
sbb
or
addr16
xor
sbb
sbb
insl
or
push
sbb
sbb
inc
leave
add
loope
adc
pusha
fprem
and
add
sbb
addr16
cwtl
hlt
sbb
jae
push
pop
pop
lea
mov
mov
insl
sbb
xlat
sub
pop
add
repz
add
repz
jns
and
movsl
pop
sbb
repz
ret
repz
loopne
lret
xlat
mov
add
fdiv
repnz
and
sbb
ficompl
sbb
pop
out
sbb
fcomps
out
mov
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
repz
mov
icebp
sbb
pushf
sahf
sbb
sbb
pop
out
sbb
fcomps
hlt
sahf
sbb
daa
sahf
dec
out
mov
repz
out
sahf
pop
out
cs
icebp
insl
sbb
pop
out
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
pop
out
sbb
fcomps
sahf
dec
out
and
repz
daa
sahf
dec
out
and
sbb
cmp
mov
sahf
pop
out
sahf
cwtl
and
pop
sbb
sahf
pop
out
sahf
dec
icebp
mov
sbb
pop
out
cwtl
jne
sbb
lahf
std
push
xlat
movsl
pop
sbb
add
mov
mov
pop
cmp
mov
dec
pop
sbb
fdivrs
daa
sahf
or
and
sbb
cmp
mov
dec
pop
sbb
fdivrs
sahf
cwtl
and
pop
sbb
mov
sahf
cwtl
and
pop
sbb
sahf
or
mov
sbb
fdivrs
sahf
dec
cmc
mov
sbb
fdivrs
and
sbb
sahf
or
and
sbb
cmp
mov
sahf
pop
cmc
sahf
cwtl
and
pop
sbb
pop
repz
repnz
push
xlat
add
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
push
call
mov
lea
mov
subl
movb
movb
movb
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
mov
mov
call
mov
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
mov
mov
call
mov
cmpl
je
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
lea
push
push
mov
sub
push
mov
push
call
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
cmp
je
mov
subb
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
xor
add
mov
xor
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
incl
mov
cmp
jne
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
mov
call
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
push
mov
push
call
cmpl
je
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
push
mov
pushl
xchg
push
jmp
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
push
mov
add
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
cmpb
jne
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
movb
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
push
call
mov
mov
mov
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
jmp
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
movb
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
mov
mov
pop
ret
add
jae
jae
js
cs
insb
and
add
push
mov
add
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
call
test
jne
mov
jmp
movw
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
call
lea
mov
pop
ret
mov
push
mov
add
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
movl
movl
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
movl
lea
push
mov
push
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
mov
push
mov
push
call
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
movl
movl
mov
push
mov
push
call
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
push
call
mov
movl
movl
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
movl
lea
push
mov
push
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
mov
push
mov
push
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
movl
movl
mov
push
mov
push
call
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
movl
movl
mov
push
mov
push
call
mov
lea
mov
lea
mov
mov
jmp
inc
mov
mov
mov
mov
inc
dec
jne
mov
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
mov
cmp
jno
mov
lea
lea
xchg
xchg
lea
mov
dec
lea
lea
mov
lea
dec
je
dec
inc
inc
mov
pop
ret
add
add
jae
jae
js
cs
insb
add
add
push
mov
add
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
movl
movl
mov
push
mov
push
call
cmp
jge
lea
lea
mov
xchg
xchg
xchg
mov
mov
lea
jmp
lea
xchg
dec
dec
inc
dec
dec
movl
movl
mov
push
mov
push
call
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
movl
movl
mov
push
mov
push
call
call
cmp
jae
mov
lea
lea
mov
dec
dec
inc
dec
jne
xchg
inc
inc
mov
lea
lea
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
call
xchg
mov
mov
xchg
xchg
mov
lea
xchg
xchg
xchg
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
lea
mov
mov
xchg
mov
lea
xchg
dec
xchg
inc
mov
mov
mov
xchg
mov
dec
movl
movl
mov
push
mov
push
call
xchg
cmp
jno
mov
lea
xchg
lea
mov
lea
xchg
mov
inc
dec
inc
mov
lea
xchg
lea
xchg
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
pop
ret
mov
subl
jae
mov
mov
cmp
jne
xchg
lea
mov
mov
xchg
mov
lea
mov
xchg
inc
dec
inc
lea
mov
mov
xchg
inc
mov
mov
lea
call
mov
cmp
jp
lea
lea
lea
lea
xchg
xchg
inc
inc
xchg
xchg
lea
xchg
mov
dec
dec
dec
je
lea
dec
dec
ret
nop
ret
lea
mov
push
and
add
lock
add
push
mov
fildl
add
push
mov
ja
scas
dec
mov
loopne
push
add
jb
add
cmp
add
sub
adc
in
xchg
add
push
lret
lea
jo
add
pushf
add
add
or
cmpsb
js
orb
aas
add
lahf
mov
fisttps
or
sub
dec
dec
dec
xchg
mov
roll
cmp
stos
add
out
xor
adc
sub
add
xchg
xchg
ror
pop
pop
add
add
adc
les
sbb
add
mov
dec
push
pop
jo
add
and
cld
inc
add
mov
fildl
mov
fdivr
orb
into
dec
in
cmpsl
sti
adc
add
popf
data16
test
add
jl
add
sub
pop
test
cmc
adc
add
add
push
dec
push
popf
fs
out
pop
adcl
add
add
pop
cmpsl
sbb
lods
cmpsb
aas
add
add
lock
mov
add
dec
movsb
lcall
add
lds
jno
inc
add
push
iretw
popf
jg
add
aas
pop
ret
add
xor
add
ja
xor
arpl
add
gs
cmp
add
ss
mov
fadds
mov
xor
add
fnstenv
add
data16
lret
jl
lea
cmpsl
mov
xchg
add
mov
cwtl
mov
ret
mov
push
jne
mov
pop
aaa
add
repz
int
xchg
sub
or
repnz
adc
add
mov
in
popa
jbe,pt
add
popf
add
cwtl
insb
fwait
mov
add
leave
scas
push
roll
lds
add
lret
clc
and
xor
add
sub
push
or
rolb
push
add
inc
mov
loop
add
cmp
or
add
imul
add
sti
and
add
add
adc
fmull
add
lock
cmc
dec
test
sbb
xor
pop
pop
add
add
push
dec
xor
push
cmp
cli
xchg
xor
mov
add
jno
add
jge
ss
add
enter
stos
cmp
sub
add
add
add
xchg
in
enter
xchg
movsl
sbb
add
sub
jp
clc
push
add
rcrb
loope
add
mov
add
cld
add
xchg
ljmp
add
inc
dec
lock
sbb
fiaddl
sub
insl
add
xor
add
add
into
add
add
add
pop
subb
push
jecxz
movsb
add
rcrl
int
fiaddl
add
add
add
popl
jne
push
add
and
xor
add
out
push
aaa
shll
push
add
aas
sti
cli
ret
add
mov
and
add
add
add
inc
add
mov
adcb
push
sbb
out
mov
xchg
add
xor
lret
pop
add
xor
shl
rcl
fldcw
xchg
xchg
xor
icebp
loop
pop
shlb
mov
adc
add
add
add
ret
push
inc
mov
mov
sbb
jo
add
add
jne
xchg
jp
addr16
aam
lret
mov
or
insl
add
add
adc
add
lea
lret
add
ljmp
inc
popa
in
cmp
add
xor
mov
int3
mov
inc
xor
mov
mov
lret
imul
leave
mov
xlat
and
rcrb
je
adc
mov
jmp
and
stos
aad
cmp
dec
xchg
js
xor
mov
jecxz
inc
xor
scas
jnp
lea
dec
push
ljmp
xorl
enter
mov
inc
in
sub
das
sub
mov
adc
call
sahf
std
imul
aaa
mov
das
cmp
js
or
imul
pop
out
xchg
das
fldt
aaa
sub
sub
mov
add
loopne
fdivs
insl
push
lock
dec
lods
subps
aam
mov
lods
clc
or
mov
sbb
and
aaa
movsl
inc
pop
mov
xchg
add
dec
cltd
cld
insb
loopne
scas
inc
loope
pop
fstpt
push
sbb
clc
clc
push
inc
mov
push
sub
or
adc
pop
cmp
out
ss
mov
sub
jnp
jnp
mov
aas
out
xor
cmp
xor
pop
ja
scas
enter
fwait
dec
jmp
pop
test
mov
xchg
dec
mov
sub
roll
sub
or
mov
fwait
pop
dec
push
push
inc
push
mov
add
adc
push
push
bound
xor
in
movsb
pop
xchg
inc
xlat
lock
idivb
jbe
mov
jle
jp
fs
clc
fisttpll
dec
loope
jne
out
mov
add
xchg
push
dec
dec
jmp
mov
mov
cwtl
adc
sub
mov
dec
bound
push
inc
in
cmc
ret
repz
jle
mov
or
mov
popf
icebp
ret
clc
pop
stos
cvtps2pd
push
push
stos
lods
leave
popf
jo
ljmp
leave
cltd
test
jne
test
imul
cmp
pop
fmulp
adc
and
repnz
call
nop
hlt
imul
xchg
pusha
outsl
inc
xor
cmpsl
or
jae
push
inc
stos
or
filds
inc
pop
jno
call
pushf
jnp
cmpxchg
lds
sar
inc
mov
es
das
cmp
inc
aam
pop
adc
push
xor
mov
sbb
mov
cmp
out
sbb
jl
or
dec
xor
push
in
les
mov
push
scas
lret
push
sub
or
sub
add
in
stc
int3
xor
stos
dec
push
add
and
mov
sub
out
cmp
xor
popf
pop
cmp
test
pop
andb
sbb
int
xor
push
jnp
ret
pop
lcall
pop
je
rcrb
ds
inc
clc
xor
push
cmp
outsb
mov
out
mov
scas
sbb
int3
je
rolb
int
arpl
sub
fsts
push
popf
lret
inc
roll
adc
sahf
sbb
andb
jg
in
loop
iret
cmpsb
stc
out
aas
fs
push
cmp
imul
xchg
push
arpl
mul
aaa
jne
jge
cltd
xor
and
inc
or
into
mov
movsbl
insb
mov
outsl
and
adc
sbb
xlat
adc
add
shll
fldcw
or
out
es
mov
test
imul
pushf
push
ret
scas
gs
adc
push
inc
inc
xchg
cmp
add
mov
sbb
push
les
xlat
arpl
rcrb
or
adc
inc
pushf
flds
xchg
loope,pn
jne
sbbl
jne
xor
dec
stos
sysret
je
jnp
jecxz
int
mov
pop
lea
shr
adc
imul
or
dec
fisubrs
xchg
pop
popa
into
inc
test
or
notb
mov
xor
mov
rcr
mov
aaa
std
adc
out
mov
rclb
icebp
push
cld
mov
stos
lret
out
pop
mov
stos
mov
sbb
inc
das
mov
dec
sub
bound
aam
inc
pop
ret
jecxz
push
es
mov
insl
in
and
test
sub
add
xchg
inc
cli
ds
sarl
lods
arpl
mov
cmp
and
stos
lret
xchg
push
jnp
xor
cmp
push
fnstsw
sbb
clc
inc
insl
inc
xchg
xchg
push
fistps
pop
outsb
ljmp
jo
stos
cmp
sub
xchg
jae
fcoms
mov
pop
xor
mov
xor
xchg
mov
rol
jb
push
out
test
bound
dec
push
pop
add
or
notb
fwait
mov
push
ljmp
add
and
call
mov
jo
and
xchg
nop
cmp
mov
mov
pop
xor
ja
xchg
outsl
jp
lahf
pop
mov
fidivl
popa
dec
sbb
dec
cs
jne
shrl
fwait
daa
incl
xchg
push
mov
andl
xchg
sub
xchg
in
addr16
adc
or
sub
xor
jno
jle
xchg
in
les
pusha
pop
and
fists
push
pop
loope
and
xchg
jae
mov
popf
xchg
and
mov
add
ficoms
das
jmp
jne
xchg
cmp
push
movsl
jne
adc
push
repnz
cmp
and
mov
xor
xor
out
mov
inc
sub
or
jge
add
sbb
int3
sarl
pop
jp
mov
mov
mov
jmp
ffreep
adc
mov
and
cmpsb
mov
in
arpl
rolb
popf
bound
clc
sbb
aam
aaa
sarl
mov
test
lods
jno
inc
jecxz
dec
xchg
rorl
shrb
xor
adc
push
push
cld
hlt
test
xchg
push
push
mov
cmpsb
sbb
mov
enter
daa
add
xchg
out
loope
cmp
cmp
dec
outsl
movsl
movsb
ds
and
and
xorb
sbb
xchg
mov
xor
adc
pop
shr
js
cli
inc
pop
mov
pop
lcall
mov
sub
scas
aaa
adc
inc
bound
int
mov
push
in
mov
mov
lods
push
and
movl
int
and
sub
xchg
lods
lret
jle
sbb
inc
mov
sbb
sahf
mov
xlat
xchg
cmpb
jg
in
loop
hlt
push
stc
popf
mov
fs
or
fbld
fmuls
mov
mull
inc
shlb
enter
ja
inc
or
movsb
fwait
into
lahf
daa
mov
xor
das
nop
outsl
add
clc
adc
out
mov
adc
cmpsl
pushf
add
inc
xor
pop
xchg
push
mov
or
loopne
sub
xchg
mov
adc
jg
ja
dec
gs
dec
fneni(8087
es
pop
and
inc
pop
inc
loopne
cld
ss
in
aaa
repz
dec
sbb
mov
xlat
mov
push
cmp
mov
hlt
pushf
test
xor
inc
inc
jle
enter
lcall
jb
cmpsl
sub
je
xor
sub
cmpsl
lea
and
call
sub
andl
jno
pop
add
out
inc
das
fcmovnu
inc
and
pop
aas
insl
out
mov
jmp
cwtl
and
arpl
testb
loope
pop
dec
sbb
or
loope
sub
mov
push
mov
das
cltd
mov
test
aam
test
ret
jb
dec
ficomps
imulb
cmp
dec
mov
daa
mov
call
and
pop
std
in
mov
sub
and
leave
insb
repz
jmp
test
insl
movsb
mov
cwtl
cmp
fst
sbb
clc
jl
pop
xchg
shl
aas
sbb
pop
rol
jnp
pop
and
sub
pushf
out
cld
mov
xchg
mov
or
paddw
xlat
or
pop
shll
pop
cld
mov
popa
add
jp
test
mov
rorb
sti
adc
or
or
fwait
mov
fiadds
add
dec
je
xor
sub
jnp
jns
into
cmp
lods
xlat
xchg
and
sbb
push
ja
sub
jp
mov
mov
fidivs
mov
adc
dec
jne
and
out
jo
in
cli
jmp
jns
and
jnp
sahf
ja
sub
andb
pusha
or
stos
aaa
cmc
dec
and
pop
pop
insb
leave
aaa
cmpl
fs
inc
fsub
leave
xor
pusha
hlt
pop
outsl
fbstp
dec
mov
xchg
push
inc
out
cld
jae
xor
push
xor
popf
mov
and
push
inc
add
pop
inc
jle
ss
ret
imul
das
scas
cmc
shr
in
jo
adc
rcrb
hlt
add
cld
push
out
pop
push
xchg
add
mov
mov
les
jae
or
imul
les
outsb
decl
mov
les
push
mov
lds
mov
das
in
ds
dec
sti
cmp
popa
movsb
jo
xor
sar
and
es
jge
fistpl
aaa
xchg
hlt
iret
cmp
push
lods
jl
notb
push
stos
pusha
pushl
imul
mov
push
iret
insb
sbb
xor
inc
cmp
push
in
cli
lahf
enter
daa
add
std
push
add
mov
add
jo
aaa
dec
add
repnz
lds
mov
sahf
mov
xchg
sbb
aad
add
dec
repz
mov
add
pop
call
add
lea
in
fsubs
fs
jg
and
sbb
xor
adc
push
mov
sub
sbb
fisttpl
mov
movsb
dec
and
push
push
int
leave
lret
pop
mov
lret
xor
mov
ret
mov
inc
rcrb
je
flds
test
adc
stc
push
mov
add
pop
aam
and
cmp
leave
dec
lods
mull
sbb
jecxz
push
xor
pop
lret
or
push
into
addb
out
lods
dec
xor
out
outsl
loopne
sti
adc
repnz
imul
or
data16
pushf
lods
mov
and
mov
mov
jle
mov
adcb
lcall
loopne
loop
pop
inc
lock
fnstenv
push
and
in
sub
repz
push
xchg
adc
js
push
push
add
leave
mov
xlat
loope
loop
mov
xchg
adc
or
das
push
lcall
mov
scas
nop
jne
xor
pop
loopne
es
mov
ds
cmpsl
aas
push
jecxz
test
cltd
out
shr
pop
and
test
dec
enter
fimuls
lret
fildl
push
pop
cmpsl
int
inc
mov
jnp
cmp
dec
mov
mov
in
rcl
jp
pop
not
push
test
pop
loop
cwtl
sbb
lret
test
icebp
mov
pushf
cld
or
loop
lds
mov
mov
in
lock
jmp
sarb
cmp
sub
rcl
sbb
ret
add
jnp
popa
sbb
insl
mov
fdivl
inc
outsl
ljmp
mov
mov
and
and
or
gs
call
sbb
cltd
mov
add
mov
pop
jp
arpl
mov
mov
cmpsl
xchg
adc
inc
sbb
aas
xchg
pop
cmp
loop
pop
sub
xchg
add
mov
imul
or
jg
mov
fnstenv
dec
and
mov
gs
xchg
mov
inc
clc
hlt
or
divb
in
popf
mov
add
and
inc
call
cmp
fisubrl
jns
push
imul
cs
mov
or
pop
cmpsl
fsubp
ja
inc
cmp
xor
mov
push
mov
mov
push
jnp
rcl
mov
dec
or
dec
fnstsw
int
movsl
jmp
jmp
jb
lds
out
push
add
jge
pushf
addr16
test
and
pop
insb
xor
mov
jle
hlt
push
pusha
popl
pop
ret
mov
dec
iret
push
inc
repnz
mov
jge
popf
in
dec
mov
andl
pop
sbb
mov
pop
cmp
push
xor
jae
jecxz
inc
iret
push
das
pop
repnz
pop
inc
leave
aam
in
hlt
dec
and
lret
inc
cmp
pop
or
in
push
inc
daa
cld
sub
and
push
int3
test
neg
clc
and
dec
imul
pop
push
movsb
sti
mov
push
and
jbe
and
xor
in
push
xor
cmp
out
jno
test
mov
or
div
xor
or
dec
push
mov
fstl
xchg
inc
leave
jecxz
cmpsb
and
dec
in
scas
out
enter
daa
jmp
scas
push
sub
xchg
push
cmp
fstpt
adc
adc
push
mov
sbbb
xor
cltd
jo
les
loopne
ud2
lea
mov
pop
lcall
jmp
outsb
xchg
movsl
xchg
adc
stc
pop
push
mov
push
mov
int
out
inc
and
mov
int
push
ljmp
jmp
lret
mov
dec
add
dec
sbb
jmp
add
test
loopne
xorb
lahf
loop
fadd
stc
or
lret
jecxz
ss
cmp
test
sbb
push
xchg
jbe
mov
mov
stos
cmc
mov
outsb
xor
std
outsl
mov
sub
imul
adc
or
push
mov
mov
xlat
cmp
ficoms
fs
in
jmp
sti
xchg
mov
lock
loopne
outsb
pop
pop
fadd
inc
jle
mov
push
idivl
xchg
aad
xlat
sbb
add
fcom
and
aad
cmp
pushf
xchg
outsb
lods
inc
or
or
push
and
orb
daa
jb
mov
dec
adc
cmp
sbb
inc
std
outsb
mov
xor
out
or
sbb
cmp
fldt
adc
dec
mov
inc
cmp
iret
push
aas
stos
mov
mov
pop
mov
and
lret
leave
rorl
std
add
movsb
cwtl
mov
rorl
mov
cld
aaa
push
jp
xor
sbb
jle
jle
xchg
xchg
jae
inc
das
push
ficoml
rorb
add
sub
lcall
mov
push
insl
mov
repz
cmpsl
loopne
ljmp
cmp
bound
cmpsb
dec
jno
or
pop
pop
mov
aaa
cltd
fsubs
test
jmp
leave
push
es
frstor
and
clc
repnz
sbb
pop
shrl
jae
in
leave
stos
or
lret
out
ret
xchg
dec
sbb
push
out
mov
xor
mov
push
mov
sbb
fdiv
imul
shrl
hlt
call
inc
xchg
ficompl
fwait
sbb
xor
shll
pop
add
aas
int3
adc
jb
mov
jns
jnp
in
jbe
xchg
jge
pop
mov
pop
leave
mov
bound
ja
in
jp
mov
mov
lock
sub
pusha
fwait
jne
jmp
ja
outsl
mov
jmp
mov
add
push
xchg
pop
out
stos
ljmp
js
or
test
stos
sbb
sbb
lahf
xchg
nop
jnp
testb
xlat
aaa
leave
pusha
sub
test
out
sub
clc
pop
xchg
jae
and
add
popf
or
xor
shl
fidivrl
movsl
dec
sbb
xchg
dec
imul
fisubrs
jp
imul
mov
mov
mov
jo
hlt
xchg
scas
or
mov
out
add
sub
mov
mov
adc
sbb
pushf
xor
xchg
pushf
mov
ficomps
arpl
gs
cmp
jb
repz
cmp
jno
mov
jge
dec
and
xor
xchg
aaa
adc
dec
cmp
fcmovb
jl
xor
in
lret
dec
push
jo
push
jmp
push
jo
call
push
jne
mov
push
leave
mov
inc
pop
bound
in
xchg
mov
loopne
incb
mov
pusha
and
lcall
xchg
jbe
cmp
into
movsl
mov
pop
mov
push
icebp
mov
je
jne
pusha
sbb
mov
pop
ss
js
aad
pop
jo
lods
lcall
jge
mov
int3
cmpsb
outsb
hlt
push
xchg
adc
aam
push
mov
sbb
mov
stc
lea
push
addb
test
mov
das
add
data16
jo
mov
mov
test
sahf
movsb
inc
test
sbb
loop
popf
out
stc
ret
fs
insb
adc
repz
cmp
aas
jle
neg
cmpsb
sbb
xor
cmpsl
cmp
lds
or
repz
dec
arpl
fcoms
lret
cwtl
add
push
or
sbb
pop
add
movsl
lods
outsl
js
mov
sbb
sbb
xlat
outsw
mov
push
adc
sti
loopne
aam
loopne
pop
gs
data16
call
jle
pushf
inc
xchg
jg
fldenv
cmpsl
outsl
repz
or
xchg
cwtl
in
cltd
sbb
aas
test
inc
pop
sbb
adc
insb
mov
pop
mov
jmp
popf
sbb
dec
bound
int3
add
xor
or
push
xchg
or
mov
pop
popa
call
cmpsb
test
andl
fistpl
xchg
cmp
or
inc
jae
jecxz
dec
and
mov
adc
and
sti
repz
mov
negb
add
lods
aaa
xor
out
ret
dec
mov
cmp
movsb
lret
mov
ret
add
into
pushf
fldcw
outsl
jbe
fdivrp
xor
ds
push
ret
pop
es
insl
mov
out
dec
xchg
sahf
fldenv
adc
popa
cmp
lods
bndldx
insb
cmp
mov
cmp
mov
pop
es
ja
aad
in
mov
mov
push
jmp
sti
lret
out
xchg
popl
dec
rol
xor
stos
stc
add
and
cmpsl
and
bound
xor
adc
test
cmpsb
xor
mov
movsl
xchg
lock
dec
out
in
test
movsl
cmpsl
sub
ljmp
or
inc
ficompl
jbe
fldl
pop
sub
call
xchg
push
bound
repnz
sahf
dec
mov
xchg
int3
jns
mov
es
mov
sbb
or
mov
shll
or
jbe
dec
mov
fs
add
add
xchg
jmp
orl
pop
sub
jae
sbb
or
and
stos
insb
or
scas
jnp
add
jle
xor
in
ror
pusha
lds
xchg
fisttps
push
cmp
sub
pop
jae
adc
popf
xor
xchg
push
inc
or
jno
rcll
imul
mov
push
push
cmp
mov
popa
iret
adc
mov
ret
hlt
loop
sub
fiaddl
inc
sbb
or
ficompl
pusha
or
flds
add
jg
int3
jg
mov
ss
iret
lds
mov
mov
add
movsl
shll
pop
jbe
jp
jge
fistl
in
stos
xor
iret
mov
push
mov
in
jl
push
call
push
push
add
jo
lds
dec
or
test
xchg
pop
sub
and
cmpsb
sub
scas
in
jl
sub
daa
std
data16
dec
pushf
lahf
loope
lods
and
mov
ds
out
loopne
shrb
lahf
xor
lar
stos
addr16
add
add
push
xor
dec
mov
pop
mov
xor
scas
push
jns
adc
fsubl
and
icebp
stos
add
insb
std
adc
scas
sub
cmp
mov
jbe
xchg
xor
add
loope
sbb
and
or
pop
in
adc
sarl
mov
rcrl
bound
sahf
inc
jnp
test
jp
and
add
mov
dec
xchg
lahf
stc
jns
shlb
cwtl
adc
int
ss
stos
cmp
cli
divb
cli
jl
jg
and
push
cmp
xlat
push
xchg
ljmp
inc
xchg
outsl
jge
ja
pop
cmp
imul
fwait
add
clc
or
loope
lods
push
es
mov
testl
push
mov
mov
push
leave
incb
fwait
shlb
and
lods
cli
pop
popf
mov
inc
movsb
sti
sbb
stos
test
rep
mov
xchg
pop
push
icebp
sbb
jp
jae
sahf
bound
adc
xchg
push
pushf
xor
movsb
cs
lret
aad
jae
nop
push
mov
dec
shll
shrb
jecxz
jno
mov
cmp
xchg
cmpsl
nop
in
pop
mov
out
scas
cmp
push
scas
fcmovne
imul
inc
mov
imul
into
loopne
mov
push
cmpl
std
push
cmp
dec
enter
add
cmp
cld
lea
lret
adc
sbb
mov
adc
das
adc
sub
aam
jnp
ret
scas
aas
cwtl
es
dec
cmpsl
cld
stos
sbb
xchg
popa
cltd
movsb
int3
lods
jp
jb
sbb
fidivrl
inc
in
jle
fldenv
mov
add
fidivl
test
mov
mov
inc
pop
push
lods
mov
or
push
mov
mov
sbb
xor
in
stos
call
push
sub
push
popf
std
pop
vmwrite
test
or
jns
xor
fistl
or
gs
pop
and
xor
jno
xchg
jg
fnsave
inc
les
pop
or
stos
in
fwait
jns
movsl
push
sbb
add
jne
jnp
mov
bound
jns
mov
sbb
mov
mov
fsubrs
ja
mov
jp
push
jb
push
inc
mov
into
dec
sub
popf
pop
imul
mov
das
out
in
sahf
ja
inc
popf
xlat
jmp
dec
aad
xorl
out
lods
js
lret
or
jl
pop
adc
stos
add
sbb
insb
jne
lds
int
jle
rolb
in
pop
pusha
pusha
push
fildll
sbb
sub
push
mov
adc
jl
or
bound
mov
ds
test
and
mov
xchg
repnz
sbb
sub
les
or
adc
iret
jo
mov
leave
cmp
add
sub
pop
popl
jecxz
or
push
adc
adc
add
icebp
inc
int3
push
ja
gs
xchg
loope
inc
lds
pop
scas
mov
cwtl
xor
sbb
pushf
inc
cmp
jbe
rcll
sbb
pushl
jno
lock
jl
mov
scas
push
ss
xor
xlat
fsubr
scas
add
xchg
push
sbb
mov
push
pop
hlt
roll
sub
in
arpl
jecxz
mov
mov
push
mov
sub
mov
insb
jle,pt
xchg
movsl
movl
adc
sub
loop
sbb
cmp
gs
or
in
imul
dec
scas
lcall
out
adc
loopne
pop
outsb
mov
cmp
mov
inc
adc
loopne
or
adc
dec
int
inc
lock
push
pop
fs
ljmp
int3
push
mov
jp
xchg
test
ljmp
addb
mov
loop
mov
js
lahf
test
adc
pushl
cs
pushf
cmp
mov
xchg
negl
clc
cli
scas
mov
xor
in
push
cmp
mov
repz
push
dec
inc
cmc
or
lahf
outsl
pop
lods
xchg
adc
push
into
imul
jge
mov
jae
cmp
gs
iret
sub
pusha
adc
sti
ds
mov
push
loopne
insl
adc
test
inc
mov
mov
les
jno
repz
mov
out
fidivrl
mov
jae
jns
jle
mov
ds
xchg
sbb
fcmovbe
sub
mov
loope
outsl
dec
and
test
dec
jns
jne
popf
je
mov
in
les
and
adc
mov
arpl
push
mov
loope
adcl
push
fstpl
sub
inc
rcrb
inc
test
add
sub
jle
mov
loop
in
shll
jmp
std
cli
sbb
cwtl
add
inc
mov
push
fwait
mov
adc
cld
mov
sub
fdivrl
shl
test
adc
test
mov
ret
cmp
scas
inc
insl
push
or
dec
mov
adc
popa
mov
lods
in
mov
and
je
push
pop
fs
hlt
add
xlat
pop
cltd
jge
push
test
cltd
bound
outsl
lahf
fstl
lcall
mov
push
shll
cmc
pop
out
adc
xlat
dec
scas
out
jmp
ficoms
js
pop
psubusb
mov
or
xorb
xor
in
adc
mov
xchg
xor
dec
rcl
adc
or
in
fwait
test
mov
mov
adc
dec
sti
fbld
inc
add
into
jmp
xchg
push
xor
les
arpl
fdivr
jp
aaa
mov
or
orb
inc
jnp
out
test
mov
xlat
dec
out
lret
cmp
xchg
sbb
xchg
pop
jno
addl
push
out
pop
push
sub
imul
jbe
pusha
and
push
xchg
pop
mov
in
and
mov
fisttps
jmp
inc
mov
pop
sub
inc
push
js
jae
or
popf
and
jl
jge
mov
xchg
jmp
mov
imul
loope
dec
xor
iret
iret
iret
adc
fwait
jns
leave
mov
jae
js
mov
inc
inc
and
push
and
or
mov
sub
pop
xchg
jo
test
lds
and
pusha
and
popa
cmp
jl
movsb
daa
loopne
pop
sbb
jbe
mov
mov
bound
push
aaa
dec
dec
mov
mov
inc
jno
mov
jl
inc
push
dec
cmp
mov
xor
mov
out
iret
push
test
sub
out
mov
xchg
enter
daa
sti
mov
std
loope
aas
jo
sbb
imul
mov
mov
mov
and
sbb
sbb
aas
xor
rorb
pop
stos
jmp
pop
sub
rcr
push
lahf
imul
iret
mov
outsb
sbb
rcrb
daa
popl
mov
jg
sub
sub
and
ds
out
push
int
pusha
lahf
sub
leave
mov
dec
inc
shll
dec
sbb
or
lea
xor
lahf
idivl
stc
out
add
dec
adc
push
sti
cmp
jo
mov
cli
loop
xor
mov
cmp
jne
or
ss
icebp
xor
rorl
xor
cmpsl
popa
outsl
cmp
adc
pop
imul
mov
dec
jmp
outsw
inc
popf
lods
and
or
out
jmp
fidivl
xor
movsb
mov
xchg
std
sti
in
xor
gs
loopne
inc
dec
pop
iret
flds
out
les
push
inc
repz
push
mov
loope
sbb
adc
es
sbb
sbb
loop
adc
lret
jle
sub
cs
addb
push
jg
mov
xor
in
imul
jecxz
cmc
add
mov
call
loop
mov
out
pusha
subl
call
pop
in
inc
pop
mov
sbb
daa
jle
mov
xor
mov
mulb
repz
std
mov
inc
ljmp
xorl
out
push
cld
jecxz
jne
lock
or
in
mov
rcll
roll
rclb
inc
sub
and
aam
fnsave
ret
int3
aam
es
cmp
ja
dec
test
mov
cli
test
ljmp
jne
push
js
mov
xor
and
cmovb
addl
cltd
mov
sbb
push
sarb
xlat
xor
mov
fnstsw
shlb
xchg
dec
mov
sbb
out
ror
sub
pop
xchg
test
jge
dec
loope
xchg
fs
mov
outsl
addr16
subb
imul
loop
xor
adc
add
xchg
xchg
test
and
test
push
xchg
ficoml
ret
out
inc
repnz
repz
xlat
sbb
add
stos
les
out
mov
bound
xchg
xchg
mov
aaa
add
dec
lods
mov
mov
jp
in
iret
mov
jmp
ja
lods
dec
insl
dec
arpl
cmp
sub
mov
std
pop
out
stos
fsubp
xchg
in
scas
shr
inc
popa
adc
repnz
out
adc
cwtl
push
xchg
or
addr16
lods
subl
dec
mov
jle
mov
in
repz
pusha
xchg
adc
fildll
push
ret
imul
and
push
push
ret
xchg
iret
popf
test
or
mov
out
xchg
inc
iret
test
imul
dec
push
xchg
mov
inc
pop
iret
cs
dec
repnz
addb
ret
and
inc
dec
rcrl
dec
mov
pusha
or
aas
or
clc
inc
push
int3
inc
mov
pop
ret
popf
fisubs
sahf
add
pushf
push
rcl
and
mov
pop
dec
movsb
mov
icebp
push
lods
in
lds
loop
jge
ffreep
sbb
sbb
outsb
jno
xchg
xor
stos
dec
test
aas
push
cld
xor
into
jo
sbb
ret
push
sarl
sahf
jns
push
cmc
test
jo
mov
inc
in
xor
mov
andb
push
xchg
sub
mov
cmpb
sub
and
inc
lahf
xchg
clc
aam
sbb
addl
pop
xchg
xchg
cmp
pop
shl
lcall
enter
pop
sub
div
push
fsubl
aaa
sub
cmp
adc
inc
pop
push
fs
mov
cmp
jge
jbe
sbb
push
ljmp
sub
lds
lret
push
cmp
mov
cmp
push
sbb
aas
push
sahf
xor
test
cmp
loop
lods
leave
stc
sahf
pusha
fs
xor
loope
bound
mov
clc
cmp
sub
int3
neg
push
cs
adc
movsb
push
cmp
add
into
aam
dec
cmc
cwtl
in
xor
outsl
sbb
rclb
push
or
sub
adc
js
add
lret
repnz
ljmp
inc
pop
sub
int3
fsubr
add
sti
pushf
jmp
mov
negl
loopne
sub
cli
pushf
mov
frstor
hlt
les
mov
adc
push
sbb
sub
inc
xlat
pop
mov
leave
adc
pop
leave
pushf
xor
in
stc
mov
sbb
fidivs
jb
pop
mov
je
insl
or
xchg
popf
rol
lret
lea
jg
or
inc
mov
jecxz
add
loope
fistpl
inc
pop
jns
mov
loopne
sbb
fistps
mov
mov
in
dec
das
and
or
rcll
mulb
std
dec
xchg
negb
jmp
xor
mov
xlat
lret
ror
mov
pop
xchg
mov
mov
xchg
das
mov
sbb
sub
mov
aam
mov
ret
pop
add
insl
and
adc
cmpsl
stc
aaa
shr
adc
imul
aas
outsb
mov
push
sahf
andl
mov
outsb
and
test
pop
je
cmpsb
mov
push
cmc
fnstsw
in
sbb
repnz
jecxz
shll
outsb
pop
cmp
cld
stos
mov
sahf
out
mov
das
xchg
stos
enter
inc
daa
setbe
xor
or
fisubs
jmp
adc
push
pop
test
sahf
movsb
xchg
scas
ret
inc
mov
or
aad
fwait
push
jmp
mov
add
je
decl
push
jno
jp
xlat
xchg
or
mov
push
iret
loope
adc
pop
or
js
cmp
bnd
leave
push
adc
lcall
je
dec
inc
repnz
aaa
and
mov
jmp
lods
movsb
lds
xor
xor
or
jl
pop
inc
es
pop
push
and
pop
aas
insb
mov
lds
into
call
in
sbb
pusha
xor
cmp
out
pop
cltd
lcall
jp
fists
xchg
popf
iret
inc
aas
mov
sti
aas
push
xchg
xchg
repz
xchg
imul
bound
aas
clc
adc
cltd
xor
inc
ror
sahf
jmp
pop
arpl
imul
dec
stc
pusha
or
lock
and
fmuls
shll
and
int3
sub
mov
outsl
jns
lret
lds
pop
out
shr
push
mov
push
xorl
cmp
add
jbe
xchg
cmp
lods
sbb
rorl
lret
jno
cmp
imul
stos
dec
pop
adc
push
filds
jo
push
cli
scas
mov
arpl
xchg
popa
cwtl
push
rolb
cmpsb
xor
cld
in
sbb
mov
jge
cmp
stc
and
push
xchg
and
jmp
push
pop
cmp
inc
scas
ds
inc
movsl
fcompl
and
lods
jmp
orb
sbb
jecxz
xor
sahf
jge
stc
shll
pop
stos
dec
and
dec
mov
push
sub
imul
rcrb
cmp
pop
sub
mov
xchg
mov
fs
xchg
jl
cmp
mov
int
aas
and
test
lret
pop
loope
test
imul
rcl
jl
push
ss
push
ret
hlt
sahf
rcll
test
je
jg
jb
loop
jno
stc
push
packssdw
adc
rcr
testl
xor
dec
cmp
xor
arpl
or
ror
mov
sub
xor
cwtl
aad
test
std
cmp
adc
fiadds
addr16
push
data16
lods
repnz
fsubl
call
sub
cmp
mov
imul
sti
dec
gs
outsl
out
ss
es
sbb
sbb
mov
daa
les
push
mov
xchg
addr16
cmp
jns
lcall
adc
mov
jmp
jno
cs
jecxz
aad
shl
jb
fisttpl
mov
fimull
nop
add
jecxz
mov
int
inc
lea
and
loopne
mov
sbbl
inc
fisttpl
xor
movb
in
gs
mov
mov
fistpll
shll
pop
std
std
out
and
mov
lea
mov
xchg
lock
lret
into
dec
lea
xor
push
lock
lds
xchg
xchg
mov
sub
repz
ret
ljmp
insl
or
lods
dec
jnp
je
clc
outsb
jno
push
mov
mov
fistpl
mov
pusha
gs
mov
roll
cltd
and
loop
sbb
divb
mov
xchg
out
clc
push
push
xchg
lret
sbb
add
stos
movsb
outsl
add
adc
cs
repnz
cmpsl
push
or
dec
pmaddwd
dec
xor
jne
fcomp
add
cwtl
push
mov
out
cltd
jnp
icebp
and
xor
test
sbb
or
mov
into
sbb
movsl
and
add
loope
mov
sub
adc
ffreep
je
xor
scas
in
mov
push
sar
cwtl
pop
les
jl
bound
mov
or
mov
mov
dec
sub
int
int3
or
push
nop
pusha
jmp
js
push
subl
pushf
sub
pop
xchg
push
addr16
pop
cwtl
stos
iret
fmuls
fistpl
insb
and
in
jle
jl
in
stos
adc
fildll
int
pop
rorb
inc
aas
sbb
dec
push
sahf
push
dec
xchg
in
popf
testb
sbbl
push
cmp
je
out
cmp
sbb
dec
aam
orb
push
and
sbb
loopne
xchg
iret
in
jecxz
repnz
xor
hlt
pop
rol
arpl
stc
sub
or
inc
mov
inc
mov
pop
lods
add
and
int3
push
xor
and
jns
insl
loope
lds
add
adc
in
push
cmp
or
sbb
pop
xor
leave
rol
ret
add
sbb
dec
inc
cmp
arpl
lret
xchg
jl
movl
push
ret
xor
inc
stos
sub
addr16
test
mov
push
cmpsb
mov
int
call
enter
daa
clc
sbb
loope
sub
cmp
push
movsl
jecxz
in
xchg
stc
push
lahf
rolb
sbbb
push
sbb
insl
loop
pop
pop
cmpsl
sbb
pop
and
xchg
pop
ljmp
push
movsb
jae
fdivrl
outsb
inc
mov
xchg
mov
shl
sub
gs
push
call
mov
das
stos
and
push
lock
add
dec
pop
pusha
pop
dec
lret
sbb
imul
mov
aad
sbb
popf
sahf
jbe
xor
outsb
ret
jl
mov
sub
stc
or
cs
fimuls
ss
mov
mov
lds
xor
push
cmp
cwtl
jge
ret
into
lcall
xor
jno
outsl
fadds
jl
aaa
imul
cmpsl
xor
notb
data16
xor
lods
test
xlat
jbe
sub
enter
xorb
cli
movsb
adc
mov
add
jbe
loopne
aaa
pushf
pop
cmp
xchg
fldpi
addr16
cmc
cmp
mov
and
mov
cmp
lea
dec
movsl
fists
lcall
jmp
adc
cs
push
ja
dec
dec
insl
dec
pushf
or
jb
cmp
lahf
je
jno
jecxz
mov
xor
mov
pop
imul
xor
aaa
jno
mov
lret
out
bnd
xor
mov
pop
mov
pop
shl
mov
mov
xchg
xchg
repnz
lock
mov
test
mov
insb
das
or
xlat
cs
cmp
in
mov
lret
lock
rcrb
repz
push
mov
ret
jns
sahf
es
lods
insl
repz
dec
jbe
shlb
push
push
popa
or
and
arpl
mov
addr16
mov
loopne
mov
sub
pop
cltd
pop
ret
roll
mov
jnp
aad
xor
sar
repz
xchg
or
pop
ror
imul
stos
xchg
add
out
ja
cmpsl
xchg
cmp
sub
das
andps
pop
xor
dec
mov
xor
mov
icebp
dec
sbb
fstpl
cmp
mov
dec
pushf
pop
lock
mov
jecxz
addr16
pop
push
dec
jbe
add
cld
adc
dec
stc
mov
pop
sarb
mov
in
mov
cmpsb
int
mov
pop
cmpb
in
ja
mov
jp
fwait
push
mov
stc
or
jne
jns
mov
in
out
inc
fsubr
xchg
gs
push
jmp
inc
sub
out
mov
orb
sbb
addr16
cmc
stos
inc
pop
inc
and
jge
insb
mov
in
jnp
dec
sarl
int
in
fwait
jbe
cmpsl
xchg
ffreep
test
mov
sub
pop
test
mov
push
or
iret
popf
sbb
aaa
adcl
mov
xchg
sbb
and
mov
imul
adc
xor
repnz
ja
mov
mov
movsb
cmpsl
jge
aaa
lret
pop
inc
push
mov
repz
pop
lock
mov
dec
scas
int3
add
xchg
pop
push
pusha
mov
adc
popa
lds
sahf
add
and
movswl
arpl
and
mov
movsb
push
sbb
lods
jbe
pop
push
push
ret
sbb
aaa
dec
cmpsl
or
jno
sbb
jl
fwait
outsb
dec
cmc
mov
movsl
loope
pop
loop
sahf
adc
push
cmp
add
push
xor
cmpsb
cmp
in
out
bswap
jae
mov
push
les
xor
cmp
cmc
ds
mov
cs
sub
xorb
xor
cmc
fcoms
xor
loope
fadd
jne
inc
xor
js
gs
sub
cmpsb
lcall
sbb
std
push
sub
mov
push
rcl
decl
pop
mov
test
and
loope
repz
sub
mov
push
push
lret
je
add
or
jl
ds
sbb
incl
mov
jg
dec
loop
cwtl
xchg
ret
pop
nop
fs
xchg
into
in
and
jge
xchg
pop
out
mov
sbb
cli
scas
rolb
inc
sub
lret
int
jge
cltd
cmc
in
adc
push
frstor
outsl
mov
pop
adc
loopne
and
lcall
outsb
mov
shr
mov
aaa
jg
aam
sub
inc
lods
mov
inc
shrl
sti
test
adc
gs
pop
loopne
pop
cmp
test
and
rol
dec
sub
jg
or
mov
idivl
fdivrl
jecxz
sbb
adc
imul
loop
jmp
jl
and
aad
mov
pop
dec
sti
pop
shll
std
sti
dec
enter
dec
jb
jecxz
sub
ja
test
jns
add
push
cltd
mov
mov
push
jne
bound
jne
addl
dec
aas
mov
mov
mov
cltd
xchg
inc
fs
lock
cwtl
stos
and
mov
inc
xchg
xchg
cld
adc
sti
mov
call
add
dec
icebp
jmp
mov
push
int3
aam
nop
xchg
ret
or
leave
es
xchg
imull
sbb
jno
xchg
cmpsl
imulb
ljmp
add
cld
out
xor
ficompl
outsb
stc
insb
mov
call
sub
test
cli
pop
mov
cmp
mov
pop
fucomi
clc
lret
xchg
dec
fdivl
sbb
lret
es
pop
cmp
pop
dec
out
fisubl
xchg
cmpb
mov
scas
xor
or
fs
jge
xchg
outsl
sbb
mov
pusha
xchg
add
dec
ds
inc
dec
mull
push
jae
fwait
xchg
in
push
jmp
inc
add
pop
std
cmp
ret
adc
add
rorl
sbb
inc
xchg
cmc
push
xor
pop
jp
pop
cmp
xlat
ja
jae
jp
xchg
sub
cmp
lods
dec
out
pop
fidivl
scas
xchg
mov
pop
test
xchg
cmp
jmp
push
push
cmp
mov
cmpsb
mov
push
cmp
stos
mov
jecxz
or
dec
insb
mull
dec
jnp
mov
jle
adc
les
push
inc
push
jns
lahf
xor
testl
cmpsb
push
iret
data16
inc
add
mov
mov
dec
xchg
pushf
cmp
imul
scas
rcrl
push
mov
jne
xchg
sub
iret
stos
test
cmp
xchg
hlt
out
sarl
arpl
mov
and
cmp
xor
aaa
add
inc
sahf
mov
mov
int3
in
add
fidivs
jg
sarb
jge
or
ret
movsb
fiadds
jmp
outsl
gs
mov
sbb
movsl
and
or
adc
xchg
or
nop
dec
outsl
in
push
mov
cmc
xor
stc
mov
scas
mov
or
icebp
pop
push
and
out
mov
dec
dec
enter
daa
negb
aam
cs
sub
pop
hlt
cmp
jp
movsl
icebp
mov
cs
push
fimull
addb
sub
cwtl
add
jge
xor
stos
and
pop
outsb
mov
test
push
lea
push
addb
adc
sub
pop
outsb
or
sub
lods
push
lea
scas
sahf
xlat
mov
pop
xor
push
push
push
test
int
cmp
negb
add
rcrl
or
stos
in
sahf
mov
fists
andb
loop
cli
aaa
stc
jp
add
adc
mov
cmp
pop
je
not
inc
cmpsl
cli
loope
ret
xor
jg
or
repnz
xor
mov
mov
xchg
test
adc
dec
aad
sbb
adc
daa
movl
sbb
mov
sbb
out
sub
push
mov
lods
repz
clc
sarb
loopne
xchg
addr16
jbe
mov
fstps
sub
pop
scas
es
js
xchg
mov
push
sbb
pop
xor
push
outsb
add
mov
jns
dec
push
setl
stc
adc
aad
xchg
test
jne
aad
inc
nop
add
dec
pop
scas
test
lock
dec
aas
cltd
ss
mov
int
in
das
inc
in
pop
sbb
hlt
mov
pop
lret
movsl
push
mov
pop
push
dec
fistl
xlat
mov
sarb
inc
cld
mov
inc
dec
xchg
sarl
inc
adc
mov
and
aad
nop
push
nop
std
in
stos
cwtl
dec
dec
bnd
sbb
sar
mov
dec
mov
xchg
lock
imul
cmpsb
pop
shlb
lret
clc
loope
push
or
es
shrb
std
sbb
lahf
cmpsl
cmc
sub
popa
cmp
int
movsl
pop
mov
loope
imul
outsb
test
push
popa
out
dec
or
test
test
xor
adc
lods
xchg
xchg
or
mov
pushf
jb
call
jp
out
cmp
sub
lcall
xor
lcall
fadds
jno
push
xchg
or
test
pushf
xchg
sbb
sbb
or
movsl
sbb
mov
insb
add
xor
pop
decl
xchg
cmpsl
bound
mov
ficoms
popa
mov
or
cmc
in
ja
mov
jp
cmp
mov
mov
mov
dec
rol
fnstenv
dec
xchg
mov
jecxz
out
add
imul
sbbl
out
jmp
or
sbb
mov
pop
and
cs
bound
jnp
jle
dec
dec
in
test
pop
filds
mov
pop
jne
pop
inc
pusha
mov
jae
dec
push
xchg
std
daa
popf
imul
push
idiv
mov
or
pop
xchg
repz
xor
push
pop
imul
scas
ss
ljmp
cld
iret
or
movsl
repnz
cmp
cmp
arpl
test
pop
sbb
or
mov
xor
sbb
push
inc
add
add
int3
xlat
stos
bound
pusha
movsb
ficoms
add
aas
lds
rcrb
mov
popf
insl
repnz
pusha
movsb
imul
jbe
hlt
loop
mov
sbb
aaa
in
aaa
cmp
mov
jno
sub
dec
rcll
xor
ljmp
scas
sbb
cli
mov
push
in
sub
dec
cmpsb
inc
jb
in
mov
pop
enter
daa
cmc
push
sub
loope
push
lcall
push
addr16
xchg
movsl
clc
dec
and
lahf
sub
fsubrs
sbb
scas
add
add
bound
inc
js
popf
add
cmpsl
mov
xchg
pushf
lcall
xchg
lcall
cmpsl
out
imul
rolb
jno
mov
mov
int3
mov
in
call
push
stc
and
pop
lods
repz
pusha
pop
fisttpll
pop
shll
and
mov
push
sbb
ja
sahf
pop
jo
test
sbb
pop
cltd
outsb
loop
repnz
xor
lock
aam
adc
add
cmp
rorb
cli
adc
fdivl
fsubl
cmp
xor
or
ss
inc
mov
or
dec
outsl
jne
adc
cmc
popl
pop
fcoml
in
add
cmp
es
xchg
inc
out
sbb
sub
and
stos
push
fucomip
pop
ljmp
sbb
loopne
loope
pop
xchg
cmp
mov
les
repnz
hlt
or
push
mov
push
pop
arpl
pushf
mov
push
jmp
cwtl
lcall
dec
outsb
nop
fidivs
or
pop
hlt
jb
pop
out
mov
pcmpeqb
outsb
jecxz,pt
loope
lea
call
fadd
pop
mov
push
push
fildl
cmp
inc
subl
aas
loope
or
inc
mov
scas
jge
rcr
mov
divb
dec
add
and
mov
adc
andl
cld
in
lret
mov
cmp
dec
push
pushf
lock
inc
das
or
call
imul
es
enter
insw
test
test
movsl
xchg
cmpsl
hlt
jb
ljmp
ljmp
dec
cmp
jl
jb
mov
addr16
cmp
jae
cltd
stos
xchg
test
das
mov
pop
or
les
dec
adcl
out
rcl
jmp
pop
xchg
add
stos
pusha
pop
fsubrp
mov
cmp
push
jne
mov
xor
xchg
xor
xchg
das
mov
cli
adc
xor
sbb
enter
dec
inc
jl
sbb
stos
or
xor
loope
add
adc
ljmp
dec
xor
dec
or
xor
xchg
in
mov
xchg
jnp
push
dec
pushf
pop
mov
icebp
ja
jle
jp
popf
sub
nop
sbb
mov
stos
dec
mov
test
mov
addl
faddp
sub
or
rcll
testl
add
or
fisubl
loope
stos
fwait
sub
and
mov
and
lret
adc
sub
jmp
fbld
imul
insl
pop
lods
mov
imul
jae
shll
xchg
dec
cltd
mov
ss
fidivrl
push
sbb
stos
shrb
cmp
push
inc
mov
adc
iret
push
xchg
leave
icebp
data16
test
jg
fldenv
or
sub
fmuls
xchg
or
int3
ret
pop
fldl
aaa
fdivrp
xlat
add
outsb
sbb
jae
arpl
xor
cmp
sbb
movsb
hlt
into
push
xchg
jbe
in
adc
repz
jg
push
aaa
xchg
je
sbb
jno
out
jl
adc
dec
inc
orb
dec
pop
iret
xor
scas
mov
mov
test
mov
xchg
out
movsl
cmpsb
ret
sub
enter
daa
hlt
daa
ss
push
jp
pop
lods
insb
sub
ss
dec
ds
pop
sti
movsl
incl
out
pusha
lahf
dec
jl
subb
sbb
and
jne
js
xchg
push
pop
out
mov
add
lods
fsubrl
or
outsb
rcrb
out
leave
dec
mov
pop
and
cmp
das
and
out
int
add
in
std
xchg
pop
pop
test
lret
dec
rol
mov
iret
push
sahf
add
inc
test
adcb
clc
in
lods
loop
pop
out
call
js
adc
outsb
push
fmuls
aam
cli
inc
sarb
mov
sub
mov
or
mov
cmc
inc
cs
xor
lcall
add
imul
imull
xor
lods
jne
jo
ret
movsl
push
out
push
cld
sub
adc
xorb
sub
pop
push
loopne
inc
aaa
pop
mov
inc
inc
dec
jl
fld
in
adc
jo
repz
sti
pop
xchg
cmp
sbb
fstp
xlat
aad
sbbl
mov
lods
jmp
dec
shrl
dec
add
arpl
add
mov
fs
or
dec
sub
imul
add
lea
mov
mov
mov
push
dec
rorb
pop
dec
test
mov
aas
cmpb
mov
mull
and
mull
shrl
cmp
cld
std
xor
cwtl
fcompl
mov
cmp
icebp
enter
adc
sbb
stc
push
std
mov
pusha
cs
lcall
in
sbb
sub
xor
aam
mov
test
jle
bound
sbb
ljmp
int
cmp
into
imul
dec
movsl
cmpsl
pop
pop
pop
incl
je
fistpl
push
mov
push
xchg
iret
jb
clc
jnp
int3
xchg
add
add
shrl
pop
std
pop
jbe,pt
stos
dec
add
xchg
push
mov
push
push
repz
cmp
incl
xor
xor
cmpsl
jmp
std
xchg
push
dec
hlt
mov
mov
fwait
push
xlat
dec
push
aam
or
test
and
inc
push
aam
rolb
push
cmp
jns
subl
mov
stos
shll
cld
xchg
pop
imul
mov
ss
mov
mov
fdivrl
mov
loope
jne
lods
divb
ret
mov
adc
add
jle
outsl
pop
aam
jns
popa
out
sub
or
push
addr16
lea
and
mov
jnp
jge
jle
lcall
rcr
mov
inc
lds
ret
or
jne
inc
jbe
mov
push
sbb
xor
jne
ljmp
shll
aam
imul
out
scas
cld
xor
ficoml
daa
push
iret
xchg
pop
repnz
push
dec
arpl
inc
pop
popa
into
or
test
or
lret
test
add
dec
and
lods
je
pop
or
ficomps
ja
mov
mov
ret
lcall
jg
sbb
sbb
jbe
pop
and
sbb
mov
or
dec
add
jl
xor
dec
mov
jno
xor
xor
or
scas
fstpt
stc
test
cmpb
jge
out
cmpsb
inc
push
mov
cmpb
pop
sub
daa
repz
push
lcall
jae
mov
sbb
test
mov
lahf
fsubl
lcall
cmpb
sbb
dec
rolb
or
xor
nop
call
test
js
adcl
inc
lcall
cmpsb
mov
sub
std
outsb
xor
adc
cmp
sub
mov
mov
mov
fimuls
orl
and
and
int
cmp
sub
sub
fildl
lret
and
pop
mov
xchg
cmp
cmp
dec
out
xor
pop
jg
inc
int3
loop
push
inc
stc
lahf
fwait
or
push
adc
push
mov
cli
cmp
dec
jp
notl
push
cli
jp
fidivs
mov
imul
mov
into
or
mov
outsl
xor
xchg
fwait
lods
pop
imul
pop
movb
push
jns
xchg
fsubrl
mov
je
sub
iret
mov
in
push
jg
gs
fsin
popa
out
sub
cmp
icebp
enter
loop
daa
jg
jnp
test
mov
icebp
jge
dec
cmp
nop
push
xlat
adc
xchg
dec
jl
dec
int
pushf
fidivrs
aam
mov
in
aad
insb
jbe
xchg
fldt
ja
jb
add
dec
movsb
gs
jbe
xor
cli
movsl
and
fistps
pushf
call
fidivrl
mov
jle
mov
dec
mov
out
pop
pop
out
add
inc
pushf
cmp
aas
pop
sarl
mov
in
cmpsb
pop
and
les
jge
div
cmp
std
fnstcw
in
xchg
inc
jmp
mov
lahf
test
cld
cmp
lret
push
popa
insl
mov
inc
pop
lock
adc
lret
faddl
out
pop
bound
fcmovnb
mov
addr16
inc
leave
xchg
or
insl
jbe
or
pop
out
cmpsl
repnz
ljmp
in
test
pop
mov
dec
cmpl
cld
mov
jnp
js
xchg
xor
test
out
mov
mov
dec
mov
pop
mov
mov
cmp
aam
roll
mov
aaa
out
data16
xchg
pushf
mov
comiss
lahf
or
or
mov
add
test
in
xchg
push
dec
pop
ret
gs
or
xor
push
ja
jo
adc
rolb
xorl
out
ljmp
pop
pop
in
insl
mov
mov
test
mov
ja
lcall
cmc
xlat
sahf
mov
and
out
jnp
js
in
jb
mov
notl
out
mov
adc
push
xchg
cmp
pop
out
in
dec
sub
cmp
xchg
addr16
mov
cltd
and
lahf
insb
mov
repnz
scas
push
sub
pusha
outsb
fdivr
fbld
icebp
ret
stos
pop
sbb
push
inc
cmpl
repnz
loopne
gs
mov
push
fisubl
and
out
xor
lret
imul
cli
scas
pop
adc
push
into
xor
adc
push
lcall
sbb
pop
hlt
sbb
or
loope
inc
popa
mov
or
and
fmull
js
and
int3
cwtl
xchg
and
lahf
inc
fidivrs
mov
in
nop
shrb
mull
push
pushl
dec
jl
movsb
or
pop
push
and
cmp
jge
les
cmc
jmp
aaa
add
out
cmp
int3
aas
jl
sub
dec
and
fnstenv
gs
scas
mov
dec
and
dec
mov
adc
imul
sbb
repnz
mov
clc
sub
pop
mov
fmull
jmp
or
arpl
mov
push
nop
jge
sbb
cmpb
aaa
jle
stos
or
pop
or
and
dec
loop
bound
add
push
scas
dec
sub
mov
movsl
outsb
cwtl
push
cmpsb
adc
sbb
loope
sti
aas
inc
mov
lret
mov
sahf
sub
cmpsb
pop
sbb
add
sbb
mov
sub
mov
pop
pop
addr16
aam
adc
cmc
fcmovnb
mov
rcrl
addr16
sahf
dec
inc
jne
adc
lock
mov
cmp
push
adc
adc
mov
int3
imulb
fadds
dec
ret
not
jae
cli
lods
pop
daa
xor
inc
cmp
cmp
into
in
sbb
cmc
sarb
push
outsl
adc
arpl
mov
in
push
push
fldenv
pop
xchg
lods
inc
rorl
out
data16
cmp
in
pop
lds
incb
cmp
cmp
mov
or
or
xor
adc
repz
xchg
sbb
add
pop
xlat
push
pop
push
pop
jl
xor
movsb
call
mov
cmpsb
adc
nop
outsl
int
dec
sub
jb
lds
je
pop
jmp
or
loop
jg
mov
loopne
mov
pop
mov
out
cmpl
push
fcmovnbe
jg
pop
xchg
push
roll
in
push
inc
mov
jne
mov
movsl
lcall
out
ror
and
idivb
std
addb
cwtl
push
mov
jbe
sbb
jge
jbe
dec
cld
mov
xlat
add
mov
pop
dec
lock
das
stos
mov
pop
sub
clc
or
xor
adc
rcrl
add
mov
js
pop
jno
dec
pop
mov
jge
ja
dec
popa
xchg
add
lods
adc
mov
insl
dec
lds
subb
lcall
cltd
mov
mov
push
or
mov
jbe
andl
fnstenv
jge
sub
xchg
jecxz
sbb
jle
outsb
or
sbb
xor
lds
mov
add
mov
fnstsw
cltd
dec
xor
outsl
inc
inc
sbb
or
mov
fwait
jle
pop
push
sbb
add
sahf
lds
in
in
jns
fstps
in
arpl
xchg
xorb
mov
loope
mov
jp
repnz
adc
mov
rcl
jne
popf
jo
dec
rorl
xchg
push
or
jmp
add
adc
dec
and
sub
aaa
jo
addr16
jno
stos
hlt
dec
inc
and
insb
push
scas
int
insb
sub
jle
mov
test
jmp
filds
mov
inc
mov
movsb
push
sahf
loopne
popf
pop
addr16
repz
repz
jns
aad
in
xchg
dec
rcrl
mov
xchg
scas
ret
push
adc
dec
sub
test
fsqrt
in
leave
push
xchg
xchg
hlt
xchg
and
inc
fs
or
sahf
push
addb
out
or
jge
inc
es
orl
fsubp
push
test
ret
aad
les
fbld
jmp
and
movsb
xchg
divb
push
je
cmp
xchg
mov
push
add
aaa
ret
cmpsl
or
mov
shll
cmc
push
jl
clc
cmp
push
movsl
push
testl
jo
sbb
cltd
inc
rcll
shlb
test
sbb
mov
cmpsb
dec
or
in
push
pusha
gs
daa
icebp
pop
ljmp
mov
cmp
int3
notrack
movsl
adc
pop
and
cmp
test
sbb
sbb
pop
jae
out
arpl
push
sbb
test
js
jmp
mov
push
add
mov
xchg
outsb
sti
and
adc
repz
mov
sub
mov
jae
mov
cmpb
mov
mov
int
pop
test
pop
push
and
push
inc
rorl
sbb
lret
pop
loopne
subb
xchg
jg
jmp
sub
xchg
pop
fs
pop
mov
punpckhwd
fdivrs
or
cli
loopne
mov
cmp
cmp
cmp
cli
into
iret
test
xor
movsl
outsl
icebp
xor
inc
fwait
movsl
imul
and
add
lcall
sub
test
mov
pop
out
fcoml
scas
dec
mov
pop
test
xchg
sti
ret
shrb
gs
je
fcmovnu
pop
adc
ljmp
mov
repz
aas
add
fwait
pop
in
ds
xlat
xchg
movsl
into
pop
das
mov
adc
push
mov
add
je,pn
lock
sbb
dec
xor
mov
push
je
pop
xchg
jecxz
jp
in
rorl
aad
fadd
mov
adcl
stc
add
test
xchg
addl
data16
aas
pop
adc
mov
fistpl
rcrl
jp
idivb
mov
inc
mov
shrl
icebp
dec
xlat
cmp
out
int
inc
pushf
and
imul
ljmp
daa
fldt
leave
shlb
ret
bound
in
inc
enter
jmp
imul
lods
pop
jne
jle
mov
nop
pmullw
sbb
sahf
testl
fiaddl
mov
lds
fldl
clc
sub
aaa
xchg
ret
sbb
cmpsb
shll
xchg
lock
aas
int3
and
out
sub
or
push
loope
mov
in
jmp
xor
jb
or
shll
xchg
rcl
dec
sub
jb
lcall
dec
inc
pop
sti
inc
fdiv
popa
or
or
fwait
lods
xchg
push
mov
cmp
mov
bound
add
stc
into
in
scas
pop
xchg
iret
lcall
icebp
xchg
pop
pushf
mov
aam
cli
and
mov
int
mov
cmp
dec
inc
aaa
jne
sub
mov
mov
jo
sub
cmp
out
push
xchg
ror
jmp
out
iret
test
sahf
sub
xor
addr16
test
mov
xchg
pop
adc
cmp
sub
jle
mov
in
and
mov
dec
and
or
jae
jo
push
popa
mov
push
mov
xor
fimull
mov
imul
stos
scas
and
inc
notl
mov
xchg
repnz
ror
in
hlt
mov
popa
arpl
mov
or
sbb
dec
or
addb
dec
leave
int3
outsb
pop
pop
pop
cltd
inc
rcr
push
cmp
loop
mov
fistps
pop
and
cmp
push
push
push
ret
mov
mov
and
sub
cmp
jns
jno
inc
add
sub
push
fisubrl
xchg
xor
sbb
pop
push
decl
xchg
push
jecxz
cmpsl
inc
sub
stos
cmpsb
iret
xchg
fsubr
aaa
test
call
push
popf
pop
loope
jno
sub
shll
cmp
pop
mov
movsl
sbb
ret
lock
jbe
insl
add
lea
xor
js
dec
push
pop
loop
inc
lcall
hlt
fcoml
add
adc
ret
outsb
pop
out
adc
into
movsb
orl
dec
mov
mov
mov
cmp
or
sub
mov
pop
pop
ss
mov
xor
rcrl
test
jb
addb
jg
arpl
loop
xchg
and
adc
test
ss
dec
sub
jns
xchg
push
and
cli
adc
gs
adc
or
daa
mov
mov
mov
xor
cld
test
adc
push
imul
xchg
and
lods
adc
cli
mov
push
sub
cltd
mov
in
cs
sti
jb
mov
gs
mov
pop
xor
inc
fwait
les
mov
mov
adcb
cmc
mov
xlat
shrl
pop
loop
push
adc
pop
pushf
fucomip
imul
outsl
les
aad
mov
and
std
hlt
jb
call
push
je
movsb
mov
call
xor
or
push
dec
aad
push
sbb
mov
fs
or
xor
sub
loop
es
jecxz
in
cltd
sarb
cld
mov
mov
adc
shrl
pop
testb
adc
into
dec
ss
enter
popa
push
add
and
add
mov
clc
xchg
mov
sbb
mov
test
push
das
push
stc
adc
rclb
enter
icebp
xchg
insl
sub
push
dec
dec
lods
repnz
out
xchg
xchg
ljmp
int3
lods
jmp
js
mov
lahf
dec
out
mov
fadds
dec
cltd
adc
test
je
mov
imul
pop
sub
sub
cltd
sbb
jle
roll
nop
push
stos
or
out
popl
fstl
divb
dec
fstps
xor
xchg
or
repnz
mov
mov
or
int3
dec
nop
test
test
jno
xchg
sub
or
xor
fcoml
push
pusha
pop
cmp
aam
aaa
inc
mov
bound
dec
stos
jns
mov
nop
xchg
push
enter
lods
push
mov
push
ljmp
sub
mov
or
and
jbe
inc
pop
test
aas
fninit
xchg
std
xchg
adc
fstl
aam
mov
push
out
out
aam
test
or
imul
sahf
bound
xchg
jnp
jmp
jle
cmpsb
xor
fistpll
or
mov
mov
in
and
pop
popf
push
xchg
icebp
mov
jno
mov
xchg
std
sbb
sbb
ret
mov
scas
mov
push
mov
cmp
bnd
cmp
inc
call
jo
scas
jmp
inc
push
dec
or
xchg
mov
inc
pop
in
or
pusha
add
mov
pop
clc
inc
pop
enter
sub
mov
mov
pcmpgtw
cmp
out
stos
mov
adc
jbe
cwtl
pop
jge
sub
sbb
repz
aaa
inc
sbb
loopne
adc
stos
dec
insl
adc
mov
sti
mov
scas
push
filds
shlb
test
scas
push
std
inc
mov
xchg
push
fwait
enter
daa
out
adc
xchg
mov
loope
jl
sub
int
cmp
dec
mov
movsl
and
mull
push
es
lahf
out
mov
leave
div
sbb
or
xor
sub
pop
into
js
daa
mov
lcall
xor
mov
inc
sbb
fwait
cmpsl
adc
test
shll
hlt
lcall
scas
inc
stc
and
fidivrl
or
xor
push
xchg
inc
pop
xlat
jecxz
lret
dec
sarl
rcrb
inc
sahf
xor
lret
andb
jg
lret
mov
stc
jnp
outsl
fs
fwait
dec
adc
jle
xchg
test
mov
xor
push
notl
shl
inc
cli
bound
out
push
cmp
mov
jno
xchg
cmp
xor
add
imul
cmp
add
in
in
xchg
mov
lods
clc
sub
mov
push
or
xchg
cltd
dec
mov
cltd
adc
sti
and
in
mov
test
or
dec
pop
dec
jp
inc
scas
sbb
jl
les
push
xchg
add
jno
cmp
test
xchg
out
adc
iret
xor
pop
dec
in
cmp
cmp
pop
fwait
nop
add
cmp
insl
jl
test
ret
jno
mov
pop
mov
jmp
push
mov
lret
pop
pop
mov
roll
aaa
push
fistpl
push
pop
jp
and
lods
scas
jle
or
or
fwait
pop
xchg
mov
leave
int
and
inc
mov
testb
std
jne
cltd
cwtl
andl
mov
sti
mov
je
and
lret
mov
out
lock
das
inc
or
cmp
xor
mov
addr16
mov
ret
andb
insl
adc
adc
add
cmpsl
out
lock
rcrb
popa
fldt
lods
push
jns
mov
imul
cmpsb
jmp
insb
pop
imull
shrl
add
adc
push
xchg
rcr
xchg
xchg
out
clc
mov
out
sbb
mov
shrb
xor
mov
test
push
xor
sub
xor
jmp
xchg
xchg
test
test
sbb
push
or
dec
daa
scas
jb
push
adc
or
xor
push
add
add
out
sub
das
bound
daa
ftst
jae
inc
xchg
insl
cmp
mov
inc
sbb
aas
pop
cmp
ja
add
push
das
pusha
mov
loopne
pop
dec
pop
fists
mov
aad
out
push
lods
in
xchg
shrb
sbb
xchg
ss
addl
aam
ljmp
call
je
dec
mov
push
insb
dec
mov
stos
jle
mov
ficompl
mov
pop
negb
jae
loopne
push
out
cs
jl
out
rcrl
mov
push
mov
out
and
xchg
push
lret
enter
cmp
cmp
scas
jmp
sahf
push
ljmp
iret
mov
lret
mov
hlt
add
and
inc
insl
orl
cmove
xchg
mov
or
add
enter
xchg
pop
idiv
xor
lret
popa
dec
or
adc
push
mov
cmp
push
dec
push
popa
cmpb
push
jge
pop
cmp
loope
aad
add
pop
cmp
sbb
jl
push
arpl
adc
mov
imul
shrl
rcll
sti
test
jns
push
dec
imul
aad
shr
add
push
jne
out
xor
or
loope
stos
out
sub
lcall
push
cmp
icebp
lahf
push
ret
aad
fdivl
ficomps
in
in
adc
pop
xor
cmp
mov
push
pop
cmpsb
add
js
cltd
call
lcall
nop
fsubrl
subl
and
inc
adc
test
add
inc
and
mov
mov
push
and
loope
push
push
push
jge
sub
sub
push
adc
ja
push
rolb
pop
mov
push
sahf
aam
fwait
test
ret
ret
sbb
jg
ss
loop
push
into
stc
xor
adc
cmp
pop
adc
ja
cmp
out
imul
jmp
xor
cmp
or
dec
sub
js
outsb
cmc
in
xchg
mov
outsl
mov
and
imul
inc
inc
add
mov
mov
push
and
