rcrb
inc
add
and
mov
push
call
int3
dec
dec
dec
fimull
enter
daa
daa
and
mov
and
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
mov
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
aam
mov
leave
leave
leave
cmpb
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
dec
leave
leave
inc
cmp
push
mov
add
mov
pop
mov
cld
mov
push
sbb
pop
pop
sti
out
mov
ds
mov
mov
repnz
mov
mov
ret
nop
out
in
outsl
lock
mov
mov
jg
hlt
cmpl
je
repnz
rorb
cmp
outsl
jg
inc
mov
xor
add
rorb
cmp
or
xchg
scas
sbb
je
repnz
mov
and
xor
mov
pop
sti
fbstp
and
xor
jle
pop
aas
lock
fcmovne
and
icebp
add
dec
hlt
mov
js
clc
mov
repnz
jae
pop
repz
jne
inc
push
into
add
push
mov
fidivrs
add
sbb
mov
cmp
xor
mov
and
xlat
cld
add
push
lock
inc
jle
lea
lea
hlt
add
add
or
shll
adc
adc
ljmp
add
hlt
sub
cmp
loop
clc
imull
imul
lock
push
mov
dec
and
sub
pop
sub
sti
fiadds
sbb
mov
push
aad
xchg
bound
adc
aas
jbe
mov
add
stc
std
addr16
in
push
sub
jae
out
aaa
sti
out
in
mov
mov
xchg
and
fisttpll
scas
es
jmp
and
dec
shll
and
adc
mov
sub
cmpsb
and
jno
and
jle
in
mov
cmp
ljmp
mov
enter
aad
push
jge
cs
fbstp
pop
scas
scas
pop
je
fs
dec
mov
pop
outsb
pop
in
jle
addr16
jnp
ja
les
dec
mov
xor
loopne
xor
sub
sub
xlat
cmpsb
fisttps
pop
pop
in
cmpsb
cmpsl
and
pop
mov
lea
loop
jge
fwait
mov
test
loop
jecxz
orb
test
push
and
dec
mov
dec
mov
movsb
dec
mov
stos
dec
cmpsb
mov
imul
adc
sbb
repnz
mov
sbb
jge
adc
add
int3
pop
and
sub
adc
push
cli
into
bound
jl
movsb
sub
dec
sbb
pop
xor
imulb
loop
mov
addb
sbb
jnp
mov
xchg
push
and
dec
mov
mov
insl
xchg
ljmp
aad
push
dec
imul
lcall
push
mov
repnz
mov
mov
lods
movsb
iret
fdivr
ret
orb
sub
mov
in
pop
sub
stos
and
mov
pusha
movl
and
jnp
sub
popf
push
movsl
aaa
adc
outsb
and
cmpsb
rcr
neg
outsl
ja
mov
pop
push
scas
mov
rorl
pop
xor
cmp
lcall
pop
fimuls
jp
lret
lock
loop
iret
add
sub
mov
lcall
lret
xchg
push
jp
xor
cmpsb
jmp
inc
and
dec
cmpsb
push
adc
or
mov
insb
push
jo
pushf
scas
and
sub
stos
mov
nop
aam
loop
pop
mov
mov
sub
sub
out
xchg
mov
dec
mov
sub
xor
out
sub
in
pop
aad
or
aas
pop
inc
dec
add
pop
fimull
adc
xchg
addb
int
adc
pop
mov
jecxz
int3
mov
cwtl
cmp
mov
bound
int3
loope
out
stos
cmpsl
push
pushl
pop
inc
dec
cmpsb
inc
add
mov
add
add
cmpsb
sar
rorb
jne
test
jne
push
sub
xchg
imull
sti
cmp
sahf
add
push
call
in
push
cmp
inc
push
jp
aam
flds
inc
push
dec
test
mov
lock
xchg
lea
mov
inc
ret
push
fdivr
aaa
sbb
mov
add
cmp
jbe
push
cmp
or
cmpl
je
pop
or
rcrb
mov
push
cmp
jle
fs
cs
push
or
pop
lock
jae
iret
inc
dec
enter
rcll
add
cmp
or
cld
ljmp
decl
jne
cld
mov
ret
lock
lret
adc
int
sti
decl
push
inc
gs
jb
arpl
fs
jae
push
dec
outsl
popa
fs
imul
popa
jb
inc
xchg
dec
jo
outsb
push
push
outsb
fnstcw
jo
imul
insb
add
je
popa
insb
inc
insb
insb
adc
std
fists
je
dec
outsl
jbe
dec
gs
outsl
jp
bound
pop
cmpb
or
lea
dec
dec
mov
cmp
jg
call
or
std
xor
dec
dec
mov
lea
mov
sti
lods
inc
mov
in
mov
inc
add
and
mov
cmp
in
idiv
js
lea
dec
mov
mov
cmp
ja
es
pushl
dec
and
lea
adc
mov
mov
outsl
fbld
fcompl
inc
lea
xchg
jnp
mov
fisttpl
sub
mov
dec
inc
inc
in
mov
lcall
mov
xor
mov
dec
lret
shll
mov
sub
and
jb
cmc
div
push
mov
roll
push
mov
mov
inc
cmp
sub
inc
sbb
flds
mov
xchg
data16
dec
mov
mov
int
pop
es
cld
outsl
in
dec
dec
inc
cli
cmp
je
lea
inc
data16
jne
jnp
popa
dec
cld
push
clc
mov
inc
mov
mov
push
movsl
push
inc
xchg
inc
inc
cmp
jge
lea
dec
lcall
lea
mov
lea
xor
add
cmpps
test
mov
call
inc
mov
dec
mov
dec
ljmp
lock
push
xchg
movsb
scas
cmpb
jl
xchg
and
jne
movsb
xchg
nop
ret
bound
lea
adc
push
cmpb
and
jns
inc
lea
lock
lock
cltd
xor
outsl
jp
js
xchg
insl
ret
jg
lea
pushf
movsb
cmpsb
cmp
dec
cmp
fistpl
lods
ja
cmp
imul
fs
xchg
xor
jo
insb
faddl
inc
cmp
fisttps
fiadds
jo
inc
mov
jb
rcrl
xchg
add
push
mov
subl
js
cmp
jecxz
decl
pop
outsb
dec
dec
dec
inc
lcall
insb
in
add
decl
mov
sti
addl
mov
in
push
call
in
lock
xchg
lea
cmc
inc
or
inc
push
or
lret
mov
mov
jg
xbegin
dec
or
cmp
js
les
sbb
push
push
xchg
mov
lcall
enter
cs
cmovg
cmp
pop
mov
mov
push
adcb
iret
inc
adc
sar
add
hlt
mov
cmp
jns
jp
push
pop
xlat
inc
dec
ja
loope
popa
mov
or
testl
lock
dec
lods
neg
in
mov
mov
pop
lock
mov
mov
push
cmpsl
in
dec
mov
mov
fwait
inc
xor
or
sub
pop
xor
int3
loope
int3
push
jp
out
push
rcl
fcomp
loopne
inc
jg
inc
xchg
cmpl
adc
es
pop
je
je
cmp
ds
push
mov
movsb
sbb
ss
es
inc
mov
inc
pop
icebp
jg
mov
xor
out
jecxz
push
xchg
xor
inc
cmp
jl
add
clc
mov
inc
xchg
setg
cli
sub
mov
mov
mov
inc
mov
repz
cmp
jne
inc
mov
push
push
lea
pop
call
dec
aas
insb
xor
sbb
bound
mov
pop
ja
pop
inc
inc
push
hlt
pop
sub
mov
movsl
loopne
mov
push
inc
aam
in
push
add
cmp
xor
js
in
sbb
fiaddl
push
inc
jb
ucomiss
mov
decl
repnz
inc
dec
inc
cmp
jp
mov
lea
jg
orb
mov
inc
inc
inc
es
dec
mov
and
jbe
decb
mov
dec
ss
sub
sub
roll
mov
inc
xchg
mov
ss
call
in
fneni(8087
inc
add
push
dec
push
dec
jmp
jmp
es
mov
in
int
inc
mov
cmp
inc
dec
lods
mov
sub
lea
mov
jp
sbb
les
dec
inc
aaa
push
cltd
popa
sbb
into
mov
lock
xor
in
mov
lock
stc
cwtl
mov
dec
dec
mov
orb
das
iret
cmp
jno
fdivr
cmp
cmp
mov
jg
bnd
movb
xchg
or
add
dec
hlt
jg
push
mov
cmp
mov
fiadds
push
lret
adc
pop
loopne
mov
push
push
adc
sbb
mov
stos
nop
dec
inc
cmp
sti
sbb
sbb
dec
ja
fstpl
sbb
in
mov
push
inc
push
mov
ljmp
add
mov
mov
cmp
jns
mov
loop
sbb
sahf
or
in
movsb
cs
jae
mov
mov
movsl
jg
jge
lcall
popa
sbb
in
xlat
mov
cmc
or
push
lock
mov
inc
dec
clc
dec
mov
inc
or
inc
loopne
popa
mov
inc
pshufw
je
imul
ficoms
xchg
outsb
adc
xor
lds
mov
or
mov
fcomps
mov
mov
pop
mov
push
pop
aad
mov
dec
inc
in
xor
add
xor
std
aaa
loope
cmp
add
xor
xor
xor
cmp
pushf
xchg
xchg
add
add
movd
pop
cmp
shl
inc
fsubrs
push
fimull
fsubrs
int3
add
loopne
pop
mov
fsubs
addb
and
push
sub
lds
gs
popa
adc
je
jle
fbstp
push
push
add
xor
push
push
add
enter
sub
push
les
int3
stos
add
or
decb
push
hlt
mov
adc
push
add
cmp
or
pop
iret
inc
dec
mov
sub
mov
and
bound
add
mov
call
mov
mov
push
xor
test
nop
xchg
mov
mov
mov
dec
push
mov
daa
inc
dec
jnp
mov
and
pop
mov
les
push
or
push
or
push
or
ret
inc
add
mov
pop
lock
mov
cmp
pop
cli
arpl
add
add
cmp
xchg
les
in
ds
or
or
and
js
outsb
test
or
lock
test
filds
aad
and
pop
and
out
cld
add
jp
pop
mov
shll
das
jl
lods
jne
mov
lods
movl
lods
mov
adc
je
pop
inc
cmp
aaa
fdivs
and
lods
jne
add
adc
cld
mov
imul
out
shl
call
sbb
add
call
lds
pop
push
inc
add
dec
adc
xorl
sbb
mov
add
das
fwait
shlb
in
aaa
jge
es
jmp
mov
ja
push
push
mov
test
out
rcrb
subb
andb
sub
call
push
mov
add
jmp
add
int3
mov
pusha
cwtl
aam
sbb
aam
or
loope
or
pop
dec
js
test
out
dec
divl
add
add
xor
cs
insb
adc
fwait
mov
lahf
add
gs
pop
and
je
jmp
insb
add
verr
push
imul
arpl
jmp
push
jo
jbe
popa
jbe
pop
inc
jo
add
jo
imul
jbe
out
inc
jns
insl
jo
data16
arpl
push
push
insl
sti
ss
pusha
push
jo
outsb
insl
jae
dec
data16
sbb
pusha
mov
add
and
add
pop
pop
mov
inc
clc
int3
mov
lock
aas
add
in
dec
call
in
mov
jo
loopne,pn
roll
add
push
dec
pop
mov
xchg
push
cld
fmull
push
rcr
scas
fadds
repnz
jp
in
push
rorl
pop
cs
add
mov
adc
pusha
bound
int3
mov
or
mov
mov
jo
sub
pop
mov
rcrl
adc
add
test
mov
mov
lods
or
movsb
mov
add
push
movsb
dec
cmp
iret
test
imul
cli
xor
cwtl
xor
lds
cwtl
pushf
stos
dec
inc
jns
popa
add
cmp
add
repz
loopne
lret
push
xor
idivl
daa
xor
cmp
add
negl
fdivl
add
xor
xor
cmp
push
inc
les
xor
xor
push
dec
add
xchg
bound
dec
lods
lock
mov
sti
mov
test
cmp
jl
add
pop
sbb
jg
xchg
push
add
or
pop
cmpl
into
mov
cmpxchg
ja
les
add
sbbb
cld
mov
add
mov
mov
movsb
adc
push
or
inc
add
bound
dec
add
ss
aaa
lock
inc
js
dec
lock
lods
or
repnz
lock
sub
js
outsb
mov
in
daa
inc
inc
iret
or
call
jae
out
lret
fdivl
stos
aam
mov
mov
add
sbb
sub
outsb
cmp
icebp
int3
fildl
adc
stc
inc
jle
add
movsl
shlb
insl
out
add
push
xor
xor
cmp
ss
fs
push
pop
rcrb
mov
clc
incl
lods
and
clc
cmpb
jne
mov
sub
pop
push
pop
push
adc
xor
mov
inc
imul
addl
add
and
pushf
cmpsb
sbb
or
sbb
aaa
mov
rorb
clc
cld
pop
std
ljmp
xor
adc
rorl
cmp
sub
enter
rol
add
add
push
stc
pop
jg
sub
popf
sbb
add
add
scas
insb
lds
inc
or
inc
pop
stc
push
add
or
int
inc
das
pop
dec
mov
adc
and
or
out
inc
mov
sidtl
imul
mov
int3
dec
sbb
loop
loope
loopne
test
add
inc
pop
and
sarb
bound
loopne
or
mov
push
int
add
cli
in
test
mov
call
nop
add
addl
das
jnp
mov
cmpw
ja
sub
addr16
sub
jge
push
jle
negl
pushf
xlat
loop
pop
hlt
scas
es
lock
adc
add
pop
push
aam
inc
or
push
inc
sbb
lret
outsb
gs
cltd
int
or
es
imul
xchg
push
dec
sahf
adc
rclb
cmp
int3
notb
mov
and
jns
inc
enter
or
lds
add
inc
jo
lea
jge
mov
decl
adc
clc
jg
dec
cmp
xor
aaa
xor
xor
add
xorb
jo
cltd
xchg
ja
jo
add
xorl
movb
or
mov
mov
mov
mov
fcompl
jge
mov
test
cmc
mov
sbb
jbe
mov
std
aaa
jle
mov
adc
insb
mov
xchg
call
sti
xor
mov
loopne
jb
inc
pusha
adc
daa
inc
imul
sar
cs
iret
aad
cli
mov
movsl
roll
aam
jp
mov
cld
das
push
mov
inc
sahf
inc
mov
mov
jmp
add
sbb
jne
mov
in
mov
nop
jle
xchg
pop
clc
gs
js
inc
cld
lea
dec
inc
dec
mov
mov
dec
sahf
sub
fidivrs
jmp
sub
das
xchg
push
arpl
negl
mov
mov
cli
inc
popa
or
pop
cld
std
dec
sub
inc
cmp
clc
sbb
inc
lea
js
fistpll
jae
mov
dec
push
ret
icebp
sbb
clc
mov
dec
outsb
sub
cs
xor
pusha
js
dec
xor
add
add
adc
mov
mov
movsl
adc
jg
jecxz
cmpb
jge
sbb
testl
jle
cmp
xchg
test
movsl
jbe
cld
div
adc
sbb
adc
xor
mov
pop
sbb
lea
dec
push
xchg
jne
jmp
out
out
mov
and
gs
cld
sbb
push
dec
mov
push
sarl
loope
add
loope
lock
cmp
andl
push
dec
and
add
bswap
or
mov
xor
movb
jge
shrl
pop
in
inc
dec
or
enter
aaa
push
clc
ja
xor
fadd
mov
fidivrl
jge
jle
lea
hlt
sub
lods
fistpll
push
xchg
adc
mov
std
mov
lcall
mov
jnp
push
mov
lea
rcr
inc
mov
push
push
sub
xor
or
jo
pop
sub
pop
cmp
je
cs
imull
shll
loop
dec
cmpsl
movl
mov
fdivp
test
jp
mov
or
loope
mov
ds
cmpsl
dec
inc
adc
insb
sub
inc
inc
int3
add
lahf
jo
mov
cltd
ljmp
push
cld
outsl
adc
ss
and
daa
mov
push
sahf
pop
mov
push
and
add
das
adc
or
mov
push
or
or
mov
cmp
jle
cmp
dec
mov
loopne
or
loop
gs
icebp
sbb
cmp
sbb
xchg
xorb
mov
push
stos
mov
outsb
ljmp
mov
cmpsb
hlt
inc
test
add
test
mov
or
dec
out
icebp
pusha
add
dec
sub
and
dec
xchg
mov
add
inc
mov
add
push
adc
sbb
sub
cmpsb
inc
in
jg
orb
pop
movb
mov
les
push
div
push
xchg
xor
inc
pop
aaa
call
sub
stc
mov
xor
xor
xor
inc
pop
mov
pop
add
inc
mov
lea
gs
je
or
mov
adc
lea
sti
push
add
adc
adc
insb
push
and
rolb
adc
fmuls
jns
sub
les
lock
and
fsubrs
pop
or
fisubs
loop
dec
mov
adc
pop
enter
rolb
out
mov
cmp
xor
cmp
xchg
es
repnz
xor
dec
inc
pop
pop
xcrypt-ofb
cmpsl
in
add
inc
loope
or
push
mov
dec
movhps
push
lock
pusha
test
ljmp
outsl
decb
add
push
pushl
js
mov
jge
addb
add
xor
fdivrp
das
push
add
push
add
or
aaa
lret
cs
sbb
insl
pop
mov
das
pop
add
repz
std
fwait
dec
fisttps
sub
cmp
add
add
scas
adc
jmp
imul
jae
dec
push
pop
push
add
add
inc
add
fidivs
or
dec
push
push
add
push
add
push
push
dec
dec
push
arpl
je
dec
add
inc
or
add
sub
std
outsl
mov
pusha
mov
add
add
add
push
lods
jge
or
sub
insb
js
push
adc
xor
ss
mov
sbb
sbb
js
in
js
cmp
or
cmp
and
stos
shl
test
cltd
add
add
pop
sbb
jns
dec
lock
xor
dec
cmovae
mov
ja
and
and
out
divb
add
push
dec
daa
sub
sub
and
in
jae
and
xchg
and
js
add
xor
add
sbb
push
jmp
dec
jnp
das
ja
sub
outsl
push
sbb
push
aad
arpl
cmpsb
adc
out
mov
mov
jmp
xor
or
insl
pop
popa
gs
fbstp
jmp
xor
mov
sub
sub
sbb
cltd
pop
or
or
inc
xor
andl
dec
incl
stc
insb
out
add
add
jbe
inc
add
fmulp
in
test
add
adc
push
pop
push
pop
mov
lods
popa
das
mov
xchg
mov
mov
insl
subl
xor
insl
rclb
lods
test
cmp
cmp
jne
adc
adc
and
add
or
inc
push
push
dec
jns
sub
rcrl
subb
and
sub
sar
fisttps
bound
jo
adc
fisubrl
pop
add
aad
pop
test
bound
out
mov
fsubs
lods
or
mov
daa
sub
sarb
test
mov
lds
pop
dec
adc
gs
pop
shrl
aad
jmp
dec
insl
adc
push
ret
xchg
test
in
inc
adc
add
lcall
das
aaa
arpl
pop
or
adc
fcmovb
inc
adc
popf
pop
lret
movsb
add
lret
insl
or
insl
jne
push
jg
sub
sub
xchg
add
pop
inc
inc
sbb
mov
inc
add
lcall
movsl
jns
adc
add
mov
add
jae
inc
sub
sub
sbb
lods
cmpsb
aam
sbb
xlat
das
stc
ret
pop
aad
pop
inc
inc
sub
or
rcll
lahf
pop
adc
sub
lods
mov
push
and
das
sub
lods
icebp
dec
dec
mov
push
rcll
mov
lea
mov
out
rorl
sub
lret
insl
mov
push
inc
roll
xor
inc
dec
jno
pop
push
test
push
repz
push
xor
test
push
push
mov
jecxz
add
and
xor
inc
pop
xlat
insl
scas
pop
pop
or
pop
stos
sbb
mov
lods
addb
or
and
test
subl
or
bound
insl
mov
loope
mov
lea
scas
mov
mov
stc
pop
sub
add
sub
xchg
insl
leave
push
pop
add
inc
aad
pop
adc
mov
test
push
sub
test
dec
cmp
mov
cltd
sub
lods
adcb
pop
lods
push
lods
dec
adc
adc
xor
mov
les
mov
mov
lds
and
insl
xor
inc
or
adc
addr16
dec
lods
ss
imul
adc
dec
jmp
bound
add
lods
data16
lods
jns
cltd
push
test
xchg
jg
mov
imul
mov
adc
shrl
mov
push
lahf
pop
imul
aas
adc
jnp
movsl
push
adc
mov
add
test
testl
lods
add
add
decl
adc
add
xor
mov
add
dec
divb
addr16
add
add
aas
add
sahf
insl
and
leave
jb
es
test
inc
fisubl
xchg
mov
add
out
jno
mov
imull
add
add
add
adc
negb
testl
test
data16
sub
addl
add
mov
rep
movsl
inc
and
fidivrl
add
into
mov
test
add
test
stos
inc
fnstsw
ror
mov
stos
mov
inc
fiadds
inc
push
dec
iret
gs
pop
testb
cmp
mov
mov
in
roll
add
xlat
jb
insl
testb
xchg
fidivrs
add
fists
ds
mov
out
mov
sbb
pop
sarl
jmp
insb
mov
aas
adc
mov
cltd
std
subb
add
add
xor
lret
aaa
daa
mov
test
mov
imul
imul
ja
loopne
add
inc
lock
sti
outsb
sub
les
inc
mov
jg
push
pop
xchg
xchg
fisttpl
push
cwtl
out
pusha
das
or
add
pop
jnp
stc
fidivrs
inc
adc
rorb
add
inc
mov
and
and
jmp
sbb
dec
sub
or
push
and
push
fcomps
mov
and
mov
pop
sbb
jae
sahf
sub
scas
mov
dec
dec
jo
sub
xchg
fldenv
jg
dec
and
icebp
repnz
outsl
mov
sub
ret
popf
mov
add
inc
inc
push
iret
sub
shl
arpl
lret
in
outsb
daa
mov
push
add
mov
in
mov
and
fadd
mov
rorl
jg
xchg
sub
mov
sub
inc
jo
jnp
daa
aaa
add
loope
or
xor
inc
mov
in
aas
and
and
mov
cmp
das
out
add
push
xor
xchg
dec
or
outsb
outsl
pop
lahf
dec
adc
sbb
and
cmc
fistps
and
sub
sbb
ss
mov
out
and
arpl
cmp
int
popa
test
andl
in
dec
push
pop
int3
aas
repz
ret
loopne
and
sti
pop
jl
sbb
jnp
inc
ret
cmp
andb
cmp
inc
and
and
test
push
dec
xor
cmp
fbstp
push
shlb
and
pop
pop
cmp
mov
or
pop
jmp
loope
fldenv
mov
outsl
sub
and
and
stos
xor
mov
call
lea
mov
xchg
mov
fstpt
ret
int
mov
jle
pop
xorl
in
cmp
dec
inc
loop
pop
jg
insl
es
sbb
imul
inc
pop
fists
sbbb
fwait
dec
jb
outsb
loope
pop
dec
out
ret
sbb
xor
fsts
cmp
or
ja
jmp
jg
aaa
sbb
jo
imull
jnp
repz
jo
sub
filds
and
dec
test
in
lret
jl
xchg
das
push
push
jg
push
mov
add
fwait
sahf
push
push
iret
aas
in
jp
pop
pop
xchg
cmp
jg
add
int
in
cmpsl
jb
rcll
fbstp
push
stos
pop
pop
pop
outsl
mov
and
in
mov
jae
nop
mov
jb
dec
shlb
pop
mov
out
or
test
mov
or
jns
fiaddl
inc
sub
sbb
adc
into
mov
cltd
lods
cmp
sbb
dec
mov
shll
outsb
cmp
or
shrl
out
jmp
xchg
imulb
cwtl
bound
add
js
ja
je
add
ret
sub
push
ss
divl
daa
mov
loope
mov
or
es
and
dec
cld
cmp
cmp
mov
mov
scas
rcll
dec
lahf
popa
add
mov
dec
inc
fcoms
movl
push
fmuls
loop
jmp
add
jl
iret
and
mov
dec
daa
insb
jg
sub
repnz
int3
ja
pmaxsw
xor
add
pop
outsb
in
mov
jg
dec
add
mov
mov
jbe
lret
mov
pop
mov
insb
mov
jl
outsl
lret
mov
pop
dec
add
mov
adc
add
mov
lret
xor
jns
stos
add
mov
ja
push
data16
push
mov
arpl
dec
inc
fstpt
push
pop
jmp
add
sbb
push
xlat
outsl
mov
cmp
and
movsl
add
inc
push
ss
sahf
mov
cmpsb
int
xchg
add
xchg
xchg
repz
lods
call
sarl
and
out
in
loope
orl
aam
mov
and
adc
fnsave
loope
and
ret
fimuls
and
sbb
cmpl
pop
out
add
adc
jo
ror
add
jmp
icebp
sbb
push
push
push
cld
inc
rolb
es
divl
je
in
add
in
push
loopne
pushf
cltd
loop
insb
iret
lea
inc
test
cmp
jle
out
push
out
iret
xorl
lods
lock
in
push
and
or
cmpb
jo
loopne
push
out
fs
aam
arpl
nop
xlat
dec
fmull
iret
inc
pop
daa
repz
cmp
aad
dec
xor
xchg
das
jo
and
fidivl
aaa
cltd
testb
cld
jecxz
test
imul
or
shrl
jp
emms
testb
dec
fmuls
sbbb
xlat
loop
add
xchg
adc
scas
aaa
or
push
inc
test
sbb
xlat
sbb
ret
push
sub
pushw
or
jno
add
add
lock
xor
aad
testb
adc
jns
sub
scas
push
mov
imul
jbe
aad
jecxz
insb
mov
mov
sbb
cmc
lahf
jecxz
bound
inc
cmpsl
push
adc
xor
fwait
jb
xorl
cmp
mov
fdivl
add
push
sbb
out
loopne
out
sysret
js
aad
daa
das
adc
sbb
xchg
jae
stos
mov
loop
add
mov
pop
fdivl
sub
das
test
das
mov
fdivl
inc
ja
ss
shll
cmc
push
add
insb
rorl
or
hlt
cmpsb
xor
paddsb
stos
or
pushf
movsl
cmp
jge
cmp
std
sti
xchg
dec
sbb
add
out
jnp
or
dec
lret
outsl
add
add
ret
outsl
loopne
lods
mov
push
and
aad
shlb
lahf
or
inc
or
push
add
and
push
call
out
imul
push
adc
xchg
inc
jg
mov
cld
out
adc
dec
in
inc
lods
pop
mov
jle
ret
mov
jae
jle
push
adc
ret
mov
xchg
inc
mov
daa
jg
push
jo
cwtl
push
fs
jne
jge
jnp,pt
mov
int3
add
dec
fs
lods
jbe
push
iret
cmpsb
clc
testb
aad
mov
scas
add
addr16
data16
into
or
jnp
cmpsl
push
push
pop
add
lret
sbbl
call
mov
fnstenv
loopne
and
inc
movsb
pop
sub
push
and
incb
jge
mov
inc
push
aad
iret
cmpsb
dec
cmp
jb
add
pop
lcall
dec
xor
scas
add
add
sbb
cmp
jge
cwtl
pusha
jle
cmp
sub
pop
push
loope
in
mov
aad
mov
data16
mov
push
inc
mov
shlb
cmp
aas
imul
mov
mov
xchg
out
dec
test
inc
daa
mov
aaa
cmp
test
mov
iret
nop
xor
pop
inc
mov
mov
mov
stos
sbb
sub
sub
icebp
mov
mov
mov
test
test
pop
lds
mov
mov
xchg
ret
test
push
and
adc
add
ljmp
add
jae
cwtl
or
pusha
das
adc
add
aad
fisubrs
outsb
inc
mov
pop
jns
sub
inc
pop
cmp
or
shll
ret
push
cmp
loopne
je
data16
repz
push
bound
ret
aad
mov
test
sbb
dec
mov
and
push
push
repz
push
ret
loope
or
int
mov
mov
adc
int
fmulp
add
in
or
pushl
sub
push
add
jecxz
push
add
inc
sbb
sbb
adc
mov
jg
xchg
cmpsb
nop
add
stos
call
cmp
pop
and
xor
dec
adc
aaa
mov
popf
mov
iret
pop
stos
push
xchg
adc
fstl
dec
cmpsl
and
pusha
test
cmp
dec
jnp
negb
test
jo
or
fiadds
shlb
adc
negb
sbb
jmp
std
fadds
fcoms
jae
out
and
daa
dec
data16
add
jae
push
repnz
inc
iret
inc
stos
add
push
and
lds
pop
mov
add
sub
test
sbb
add
test
aas
mov
loop
cltd
cmp
repz
mov
jmp
pop
les
lods
fcmovnb
add
cld
mov
jle
push
loope
outsb
stos
dec
inc
jle
cmp
imul
lock
roll
jle
mov
fsubrs
jg
scas
push
add
rcl
push
loope
cmpsb
xchg
in
lods
cmpsl
jo
andl
shrb
ss
out
or
sub
dec
ljmp
jo
add
pop
push
lods
out
xlat
add
cmp
add
cmc
push
or
movsb
xchg
add
iret
pop
mov
call
add
loopne
test
test
jo
jl
scas
shl
jo
xchg
btc
cmp
mov
lahf
sub
in
lods
dec
aaa
jg
pmaxub
bound
hlt
adc
jle
fcoms
repz
jl
sbb
and
loopne
das
mov
inc
add
lcall
adc
add
pushf
push
inc
cmc
mov
pushf
jo
add
pusha
sbb
mov
adc
stos
or
movsb
scas
sti
call
adc
inc
inc
pop
jle
xor
ss
sti
sub
insb
xor
dec
scas
pop
mov
lock
loopne
mov
xchg
adc
mov
xchg
mov
in
call
jmp
xchg
sub
mov
pop
mov
lret
outsb
test
insl
nop
add
and
cmpsl
or
add
add
in
xchg
inc
adc
jecxz
inc
pop
mov
and
xchg
push
icebp
or
idivb
movsl
sti
iret
ja
popa
mov
push
push
clc
ds
xlat
es
adc
cmp
or
daa
pop
insb
mov
outsb
sbb
mov
push
and
loope
sub
add
xchg
rolb
xchg
lods
and
jo
jmp
adc
pop
movsb
inc
jmp
icebp
jno
jae
or
inc
ret
pop
or
popf
jo
mov
fadds
dec
into
popa
mov
mov
roll
xchg
mov
mov
xchg
or
js
or
lock
xor
mov
sub
aam
pop
test
cmp
movsl
cmpsl
sbb
adc
dec
roll
push
and
add
imul
push
out
test
mov
or
aam
out
mov
cltd
cmp
js,pt
fwait
dec
add
cmpsb
add
scas
outsb
addb
aam
jne
jecxz
jle
mov
repnz
jo
popf
mov
adc
out
lahf
push
iret
mov
add
daa
add
scas
lock
testl
out
sub
cwtl
mov
and
into
push
add
sub
add
movsb
jbe
roll
adc
adc
dec
data16
and
mov
repnz
jmp
cmp
ret
adc
hlt
add
xchg
mov
sub
fmull
pop
out
enter
test
jbe
cmp
xchg
mov
mov
xor
jge
movsl
sarb
push
sbb
or
je
cmp
lcall
jbe
sbb
imul
aaa
xchg
xchg
shll
cmpsl
mov
rclb
out
xor
sbb
test
xlat
ss
negb
pop
into
push
cmp
sub
jmp
sarb
inc
cld
sub
push
cmp
push
sbb
adc
jb
test
adc
inc
sti
jle
addr16
jge
dec
pop
loop
cmp
dec
adc
mov
and
aad
cmp
dec
fistpll
pop
outsb
int3
mov
cmp
mov
popa
cs
icebp
movsl
dec
cmc
aad
lods
push
paddsb
out
in
adc
loop
stos
inc
add
mov
fmull
aas
ljmp
add
mov
popf
fsubr
mov
xchg
fwait
test
iret
cmp
call
xor
jo
ret
rorl
cwtl
push
stc
add
lret
jp
ds
mov
push
bound
dec
mov
fldt
fldt
jg
jne
cli
jns
sti
push
flds
test
xchg
sbb
mov
mov
addr16
cmp
push
add
enter
ds
out
daa
imul
sahf
cmpsb
cmp
adc
jo
and
and
dec
lahf
mov
scas
jns
and
into
aam
fistl
jmp
mov
ja
push
or
push
ljmp
xor
mov
shld
lock
or
mov
shll
xchg
sub
mov
inc
test
les
sbb
stos
add
sub
movsb
roll
outsl
test
daa
inc
pop
les
mull
mov
xchg
jo
sub
mov
iret
mov
andl
mov
fwait
mov
inc
inc
jecxz
out
or
mov
dec
xlat
jmp
in
jp
out
fiaddl
stos
or
push
andl
sbb
insl
enter
bound
jno
adc
or
test
test
and
ret
fdivs
push
xchg
sbb
subb
jp
ficomps
or
pop
jmp
mov
mov
mov
dec
bound
pop
aam
arpl
sbb
ss
jge
adc
xor
mov
imul
cmp
arpl
js
add
add
push
add
stc
cwtl
adc
out
insb
cmp
insb
or
ja
aaa
jo
cmp
icebp
mov
call
loop
sub
xchg
cmp
das
sub
aaa
fwait
xchg
mov
fwait
push
mov
test
out
mov
sub
fadds
std
sbb
clc
push
aas
incb
and
add
loope
jge
pop
jb
jne
fistpll
cmp
out
ja
or
push
in
scas
fimuls
pop
test
and
fcomps
cmp
push
flds
jo
out
and
or
test
fsts
and
cmp
rorb
cmpsb
mov
lock
pusha
and
jae
lods
cmp
mov
and
mov
sbb
pop
jecxz
cmp
fisubs
xchg
pusha
test
outsb
movsb
adc
xor
lods
dec
int3
jecxz
int
jecxz
push
icebp
jno
xchg
out
fdivl
popf
add
push
xchg
pop
js
cmp
pop
lret
adc
mov
adcl
iret
and
jl
fisttpll
jo
call
jo
sbb
getsec
mov
jmp
xor
push
das
je
outsl
fmul
adc
insl
mov
ret
add
pushf
das
lret
add
clc
lock
add
dec
or
sub
test
loop
xchg
xor
jge
je
xor
jbe
inc
jecxz
shll
inc
orl
dec
dec
xchg
sbb
subl
ds
push
or
or
push
or
jae
add
ret
arpl
inc
testl
fs
jp
push
cmp
fcmovne
lcall
add
jb
data16
fs
mov
fwait
fwait
addr16
mov
aas
pushf
aas
cmp
inc
movl
add
cmp
test
adc
inc
mov
pop
lea
xor
stc
add
inc
and
cwtl
lock
mov
lea
sub
jp
ret
add
mov
popa
sub
sbb
fstpl
das
or
lcall
ret
inc
flds
inc
test
mov
lahf
and
iret
jae
lods
xor
rcrb
daa
rcrb
shlb
cld
jecxz
pop
jnp
adc
jmp
sbb
xchg
jg
mov
adc
jmp
lret
fdivs
jae,pn
sbb
dec
mov
lods
sub
xor
sar
fldenv
xchg
pop
push
in
add
xchg
xchg
adc
xorl
inc
data16
cmp
loope
test
js
xchg
sbb
push
adc
sub
add
mov
mov
sti
movsl
sbb
xchg
adc
lahf
mov
adc
pop
xor
test
icebp
sub
mov
fisttpll
mov
cmp
mov
ret
or
or
mov
fldenv
repz
sahf
xchg
rorb
xorb
jbe
add
rcrb
xlat
into
iret
push
adc
dec
fadds
into
lret
faddl
mov
push
add
mov
xchg
mov
in
aas
into
popf
xor
incl
inc
lds
mov
mov
ja
nop
pushf
inc
dec
or
push
add
lods
loope
xor
cmpsb
pop
adcl
imull
push
in
mov
sub
dec
sbb
mov
in
icebp
or
mov
out
pop
outsl
push
jp
jae
jecxz
rorb
xchg
add
loopne
pushf
incb
or
adc
or
aam
shll
bound
inc
ja
xor
jbe
das
xor
adc
rcrl
insb
cmpsb
mov
ret
rorb
cmp
sub
mov
push
das
push
xor
mov
inc
sahf
jno
sub
nop
add
call
and
cwtl
test
sub
pop
mov
mov
pop
lahf
aam
pop
pop
mov
std
xchg
add
out
jle
cmp
push
add
push
jne
fmuls
pop
ss
xchg
in
lock
ret
sub
jne
lret
xlat
adc
iret
jl
xlat
inc
dec
clc
out
out
lret
jecxz
repnz
dec
orb
xchg
mov
daa
adc
lock
push
dec
jae
fsubp
fwait
leave
push
shlb
jo
mov
aas
inc
push
aas
xor
loop
stc
aam
dec
data16
mov
jne
inc
insl
int3
jge
add
test
sbb
mov
sub
push
add
ja
stos
adc
lea
mov
xchg
pop
xor
test
scas
jle
mov
rclb
mov
rorl
push
test
cmp
iret
dec
out
mov
mov
out
pop
and
lock
xchg
out
test
repz
sub
cmpsl
loop
add
xor
or
mov
insb
cmp
shlb
cmp
cmc
and
adc
jae
jnp
or
in
pop
add
sub
cmp
inc
mov
ret
pop
loopne
aaa
iret
test
mov
cmpsb
mov
mov
sbb
mov
out
adc
xor
pop
mov
sub
out
aad
jmp
jl
stos
inc
push
js
bound
push
sub
add
inc
call
jne
pusha
mov
inc
iret
adc
shll
aaa
jo
add
addl
femms
jl
jno
sub
xor
out
xchg
jge
or
sub
sbb
xchg
mov
addb
pusha
loopne
dec
mov
stos
js
push
cld
lock
cmpsl
fs
pop
mov
add
xor
lret
push
xchg
jge
inc
mov
lahf
sahf
cmp
mov
add
fcoms
and
fmulp
or
xchg
adc
popa
hlt
movsl
cld
lcall
mov
aaa
in
add
inc
mov
sub
lock
inc
dec
pop
icebp
fxch
lock
or
mov
dec
adc
dec
int3
or
iret
xor
pop
jl
dec
push
jmp
out
shrb
cmp
push
xor
inc
or
and
push
cmp
repz
cmp
mov
or
stc
sbb
lock
out
shll
push
sbb
ret
add
daa
xchg
cs
lret
xor
sub
cmpsb
jne
ja
scas
ss
aaa
aaa
fs
shll
add
es
into
ret
adc
fsubr
les
hlt
mov
aad
dec
out
data16
jle
bound
jle
cld
xlat
iret
orl
lcall
aam
push
pop
stc
mov
jle
mov
ret
outsl
sbbb
or
sbb
imul
aad
pop
cmp
stos
and
jne
test
inc
push
xchg
out
xchg
cmp
jo
popa
inc
ja
gs
sub
mov
inc
sbb
test
scas
sub
push
inc
add
jnp
xor
jno
push
jl
add
add
cmpsl
or
dec
add
jmp
lcall
lods
test
stos
cmp
and
add
out
in
mov
push
ror
jbe
out
add
shrb
lock
lods
rcr
stos
insb
outsb
mov
lea
push
jmp
cmp
cld
clc
pop
lret
dec
xchg
mov
sub
jbe
pop
mov
adc
mov
dec
test
dec
jge
xor
mov
sub
icebp
movsb
pop
xchg
and
out
push
hlt
stc
xchg
fisubs
xchg
or
mov
adc
aaa
shrb
cs
mov
loopne
cmp
addr16
cmp
push
lea
push
or
dec
mov
mov
sarb
orb
ret
or
aaa
mov
lahf
movsl
out
add
mov
mov
aad
pandn
push
bound
jle
divl
imul
fbstp
aad
iret
es
mov
daa
push
das
pushf
call
mov
outsl
mov
js
in
xor
mov
lret
scas
or
inc
sub
in
adc
push
js
push
mov
lahf
js
lock
scas
clc
sbb
ficoml
test
sub
add
das
xor
mov
fsubrl
ja
sub
jae
and
pop
mov
and
mov
out
ret
mov
sub
mov
push
dec
mov
sub
scas
andl
sub
add
lret
pop
nop
sarb
cmp
cli
shlb
mov
movsb
addr16
mov
rcl
jno
inc
cmpsb
push
loope
mov
xchg
and
lret
pushf
je
and
pusha
iret
xor
fstpt
sar
fwait
mov
add
sti
loop
mov
jo
je
pop
ret
adc
repnz
daa
and
mov
gs
and
push
loop
ds
rcrb
sub
push
sub
icebp
adc
add
imul
push
je
or
mov
ds
jo
jle
cmpsl
mov
xor
ret
mov
lods
int3
jp
gs
loopne
gs
lret
mov
lods
subl
adc
lock
jo
cmp
and
or
subl
inc
js
mov
stos
pop
clc
ret
lods
sbb
cmp
out
inc
adc
pop
ficomps
ret
into
repz
sub
in
push
mov
in
xchg
into
mov
add
adc
push
inc
jnp
out
adc
mov
ret
pop
sub
iret
pop
popf
cltd
xchg
add
bound
int3
mov
dec
jno
push
add
pop
in
push
pushf
adc
gs
push
pop
fistpl
je
fs
add
add
add
testb
inc
xchg
cmc
pop
and
inc
cmp
mov
jns
daa
xchg
push
jne
fsubrs
orl
fwait
push
inc
jl
sub
lcall
int3
insl
mov
push
cld
add
jp
insl
fwait
add
stos
inc
jecxz
add
fadd
cmpsb
push
ljmp
les
ljmp
xor
mov
add
movsb
add
jns
dec
jae
out
adc
jecxz
out
movsb
xchg
xor
out
adc
jmp
test
pop
into
fiadds
jo
or
jnp
ja
sub
and
adc
incl
dec
std
and
out
pop
xchg
or
jp
push
jle
imul
and
ret
push
pop
sti
push
sahf
or
das
sbb
cltd
lods
mov
jo
push
js
mov
ret
mov
jo
pop
aam
add
xor
cmp
loop
das
aam
fucom
and
mov
jl
cmp
add
addb
sub
pavgb
or
mov
sub
loop
push
fwait
loope
ds
push
mov
movsl
jno
loopne
cs
cmp
movsl
mov
popf
in
icebp
cmpsb
pop
add
das
sub
test
call
fsubrs
xchg
add
das
scas
aaa
cmp
cmc
add
es
pop
push
sub
aas
shl
sbb
push
jno
icebp
mov
or
pop
mov
adc
ds
inc
adc
test
mov
mov
lods
mov
push
adc
es
add
test
add
lret
jl
inc
pop
push
or
inc
loope
sti
mov
int3
pop
cmp
daa
or
test
arpl
arpl
test
pop
jb
call
or
add
sbb
ret
mov
sbb
jae
xor
clc
add
ja
inc
popf
mov
push
mov
sahf
gs
lods
xor
inc
push
ss
in
dec
inc
mov
and
or
pop
loopne
inc
rolb
iret
faddl
pop
lahf
xor
add
fdivr
cmp
jge,pn
nop
xchg
mov
dec
push
jmp
sbb
sbb
lods
js
push
and
mov
ljmp
out
mov
ret
push
loopne
scas
lds
aam
or
aam
cmp
mov
adc
inc
aam
sub
lods
mov
mov
cmp
bound
int3
push
xor
cmpsb
sub
sbb
adc
inc
daa
push
mov
push
adc
mov
xlat
call
scas
icebp
jge
arpl
int3
sbb
xchg
add
das
mov
xor
cmp
xorb
adcl
fildll
sbb
mov
pop
sbb
testb
and
mov
mov
movsb
andb
bound
aam
lret
fnstenv
cmp
dec
fiadds
jb
sub
das
andl
inc
repz
mov
push
push
inc
mov
sbb
jmp
inc
sub
and
push
or
in
sub
loop
in
pop
jge
xor
imul
in
xchg
es
jb
js
lfs
daa
and
xchg
mov
jmp
push
push
insb
iret
into
ja
push
scas
jnp
jnp
inc
lret
mov
sbb
add
or
dec
data16
fisubrl
push
cwtl
inc
pop
in
add
aam
pop
pop
cltd
minps
das
test
in
adc
sbbl
das
in
xorl
and
sub
inc
mov
pusha
pxor
dec
sub
mov
sbb
push
es
or
test
test
loop
dec
add
dec
jmp
fsubs
lahf
int
add
inc
mov
pop
lea
mov
pusha
jo
push
xchg
ljmp
inc
sub
pop
or
sbb
bound
cmp
cld
ret
cld
add
xchg
sub
push
testl
repz
scas
iret
loope
rcrb
std
pop
popf
add
xchg
loopne
decl
cwtl
push
iret
push
jno
das
xchg
pusha
mov
fs
shrd
xor
ret
enter
pop
push
in
cmpsl
dec
sbb
and
mov
cmp
or
mov
cmp
jle
aas
stos
inc
add
sti
in
mov
cmp
jbe
dec
rolb
popa
rorl
jne
out
xor
dec
push
das
push
shl
mov
mov
mov
lea
sbb
mov
pop
jl
ja
cmp
pop
mov
sub
decb
pop
test
xchg
push
subl
sub
cli
sub
out
push
or
and
popa
sbb
sahf
xchg
xchg
leave
pop
pop
jge
cmpsl
arpl
jle
js
jmp
fsubl
adc
sub
mov
repz
cmp
sbb
pop
xor
xorb
pop
adc
rcll
ret
les
scas
push
xchg
or
push
xchg
in
pop
push
in
jmp
bound
fildl
jle
push
ret
add
sbb
push
sub
mov
or
in
xchg
or
sbb
push
cmp
and
cmp
mov
push
dec
adc
orb
add
mov
sbb
scas
lret
sbb
call
add
pop
or
and
xor
pop
insl
add
push
mov
jo
aad
xor
lods
mov
mov
popa
je
lock
pop
xor
sub
out
sub
mov
pop
fildl
xor
aad
jbe
xlat
imul
sti
bound
les
lods
es
shll
push
dec
xlat
dec
adc
lods
aaa
jmp
jle
xchg
sbb
jbe
sub
push
addr16
lea
fildll
dec
je
ja
push
loopne
in
je
cmp
mov
xchg
mov
jb
aas
push
iret
jge
pop
out
push
int
cltd
ljmp
xor
push
cwtl
jg
lahf
sbb
push
sbb
sub
sti
inc
stos
filds
es
hlt
test
and
jne
sub
fcomp
mov
cmp
xlat
jb
cli
adc
shll
jae
sub
jae
pop
push
leave
shlb
mov
shlb
rclb
pushw
cmp
sub
mov
lock
push
sub
jno
mov
dec
popf
inc
add
loopne
xchg
iret
jnp
dec
ljmp
test
rolb
fdivl
push
arpl
push
push
clc
cmp
add
fnsave
shlb
or
or
fstpl
int3
cmp
iret
and
jmp
push
daa
sbb
leave
insl
and
xor
mov
addr16
sahf
jg
loopne
sub
loope
outsl
pop
das
iret
inc
dec
mov
roll
bound
xchg
pop
adcb
sub
iret
mov
mov
and
sbb
cwtl
sub
sub
pop
xsavec
sub
rorb
sti
jno
cltd
pop
movsl
pop
and
cmp
bound
pop
pop
dec
movsl
adc
pop
cmp
cmp
insb
gs
jno
sarb
sbb
mov
dec
add
loope
dec
sbb
leave
pop
mov
inc
adc
and
jge
popf
rclb
and
push
movb
add
and
fdivs
lea
pop
lock
inc
popa
and
bound
mov
clc
int3
gs
popa
scas
mov
push
or
int3
push
mov
ss
cmp
daa
add
mov
test
adc
mov
aas
fistpl
and
pushf
jnp
add
and
das
scas
jp
mov
dec
pop
call
add
mov
loope
addl
sbb
mov
jp
int3
pop
bound
xor
jo
adc
or
scas
inc
outsl
jo
mov
popf
mov
loop
fsubs
int3
cmp
iret
jmp
sbb
pop
and
cmp
dec
jl
adc
fdivrl
gs
or
roll
in
jb
andl
jb
ja
shrl
adc
and
decl
rorb
popf
or
cmp
jle
pop
sti
pop
xor
lret
or
sahf
rolb
adc
aaa
sbb
sub
test
mov
ret
mov
sti
jne
inc
add
mov
push
aaa
loopne
jp
cmp
scas
pop
pop
loopne
test
adc
push
cmp
mov
or
push
pushf
test
and
add
loopne
pop
and
or
push
movsb
fbld
or
xchg
pop
and
lock
mov
out
sub
lock
xchg
aas
frstor
ficoms
testb
notl
or
aaa
adc
adc
inc
cmp
pop
movsl
scas
movsb
loope
push
in
mov
mov
adc
jno
movsb
fadds
lods
je
loop
fcmovnu
loope
loopne
lret
and
int3
jnp
hlt
inc
push
and
loope
imul
jle
xchg
jmp
pop
subl
pop
lret
movsl
outsb
xchg
into
xchg
cmp
insb
cmp
jo
mov
daa
sub
sbb
or
stc
test
pop
in
mov
rcll
lret
aaa
test
dec
in
jmp
iret
mov
jno
mov
xchg
inc
sbb
dec
add
popf
mov
pusha
add
aaa
mov
bsr
pop
fisttps
ja
jo
fistps
aad
cmp
sub
xchg
fistpl
test
mov
add
lds
or
sub
mov
adc
dec
sub
xor
or
or
mov
clc
and
xchg
sub
sub
inc
push
lret
mov
dec
insl
adc
jle
xor
cmp
popa
add
sub
dec
adc
and
add
mov
push
mov
cmpsl
inc
cmp
add
push
jle
test
jp
jle
lock
movsb
or
imul
inc
out
push
pi2fd
xchg
lods
rclb
insl
mov
je
cmp
xchg
fdivrs
lahf
jge
scas
inc
push
dec
sub
pop
dec
push
int3
dec
pop
pop
ror
adc
mov
in
pop
jle
mov
add
push
test
pop
jo
imul
sbb
add
inc
adc
pop
adc
or
push
dec
or
push
add
adc
fs
outsl
adc
xor
adc
popa
aam
and
cld
bound
dec
clc
add
outsl
movd
loope
push
jne
push
test
add
push
mov
sbb
xor
jno
addr16
dec
or
and
or
push
test
notb
push
xchg
mov
pushl
adc
shll
mov
add
inc
dec
les
cmp
ja
push
mov
jbe
sbb
movsb
fsubr
jle
pop
stos
xlat
adc
sub
pushf
rolb
pop
fldenv
rclb
pop
push
pop
lahf
cmp
jg
xchg
add
and
ja
or
out
mov
ret
and
dec
pop
pusha
hlt
daa
jl
jbe
and
fistpll
push
lock
pop
ss
mov
shrb
adc
enter
or
dec
int
cmp
mov
fldenv
xchg
mov
jecxz
sbb
insb
adc
test
fistps
popf
clc
or
pop
shll
popf
or
pusha
and
or
dec
or
xchg
sub
push
scas
jbe
dec
cmp
jb
add
mov
ja
sub
ret
popa
push
jne
mov
mov
sbb
mov
inc
push
jns
mov
in
or
add
addps
movsl
fdivl
dec
clc
xchg
xor
pop
add
mov
js
adc
ret
loope
dec
nop
inc
adc
push
ficomps
inc
mov
pop
jne
or
sub
sub
sub
out
loope
jo
scas
lret
popf
mov
or
testb
dec
pop
aam
cmp
mov
test
inc
dec
test
sub
mov
add
iret
dec
xchg
and
xor
xor
lcall
pop
jl
push
add
xor
mov
mov
rcrb
inc
xchg
pop
popf
out
lret
hlt
jmp
test
adc
xchg
inc
push
add
mov
outsl
arpl
push
jo
rorb
fldt
jns
jb
mov
pop
sbb
js
sub
push
pushf
add
pop
mov
hlt
mov
lock
rorb
jno
test
xchg
sbb
jo
or
cmp
or
xchg
sub
or
outsb
adc
pop
and
iret
scas
int
push
add
dec
and
or
popf
shr
dec
mov
iret
mov
outsb
adc
sub
inc
aam
out
push
clc
sbbb
stos
cld
imul
nop
lds
loope
xor
cmp
aad
inc
ljmp
add
jno
in
ljmp
lods
ss
div
pusha
push
push
fimuls
cmp
or
sarb
dec
pop
inc
sub
aam
aam
push
mov
cmpl
pop
add
into
cmp
nop
push
ffreep
add
inc
and
popf
stos
lcall
repz
jle
sub
jnp
ja
pop
push
or
and
shll
je
aaa
cs
int3
and
xchg
test
or
cwtl
jno
out
mov
sub
sub
aad
jns
pusha
divl
pop
sbb
fsub
movsb
mov
mov
cmp
jns
mov
jo
mov
lods
fstpl
add
and
mov
fmuls
mov
test
push
mov
into
jne
fdivs
xor
dec
push
aaa
shll
jl
popl
jo
push
mov
or
sbb
or
mov
aam
leave
daa
mov
xor
loop
adc
orb
sbb
push
sbb
xchg
push
loopne
stc
add
andl
sbb
scas
jp
xor
outsb
popa
inc
inc
jns
xor
movsb
push
mov
add
cmp
adc
mov
push
loopne
aaa
push
or
dec
ss
mov
les
push
imull
add
mov
lods
mov
outsl
stos
xchg
xorl
xlat
sub
xor
xlat
or
xchg
xchg
xor
mov
or
pop
das
lret
imul
pusha
sti
xlat
mov
xor
dec
sbb
jl
popaw
pop
andl
or
add
in
xchg
jle
xor
je
popa
and
jmp
push
adc
sbb
mov
push
in
jge
mov
push
out
aad
sahf
addb
add
insl
rcll
ja
mov
movsb
and
insl
sub
cltd
ficomps
or
inc
sti
jle
dec
mov
pop
add
mov
test
loopne
arpl
popa
movsl
mov
sub
xchg
lock
pop
into
mov
cmp
sbb
jmp
pop
testl
fnstcw
or
push
pushf
xlat
and
cmp
js
test
push
add
cmp
cmp
test
dec
jle
add
lret
movsl
bswap
sub
inc
inc
popa
mov
nop
sbbb
mov
idivl
outsl
test
pop
xlat
ds
inc
inc
enter
out
pusha
in
dec
xor
test
popa
in
adc
lcall
jp
mov
and
jns
pop
xor
int3
cmp
mov
rorl
mov
sub
in
push
lods
test
loopne
xchg
fldenv
loop
xchg
mov
test
xchg
inc
or
aam
sbb
adc
in
or
les
or
mov
jle
aad
xor
add
jmp
add
insl
mov
push
push
jo
pop
mov
sti
enter
jbe
mov
xlat
dec
jb
or
xor
jmp
test
and
mov
sbb
add
shl
sub
jnp
mov
out
aad
push
and
add
xor
mov
addr16
clc
rcll
aaa
test
and
dec
dec
jl
repz
test
cmp
push
and
test
insb
pop
push
and
test
xchg
mov
iret
movl
iret
mov
in
or
adc
enter
inc
inc
cmpsl
adc
sbb
and
pop
cmp
cmp
ret
add
ja
inc
jne
xchg
rcrb
or
push
sub
or
bound
clc
sbbb
fcoml
sub
es
xchg
jae
or
movsb
cmp
bound
mov
cs
call
andl
and
sbb
and
push
daa
mov
out
ret
jne
mov
pop
test
inc
das
mov
jns
sbb
jbe
push
jmp
nop
inc
jo
push
or
or
dec
ljmp
and
stos
mov
xchg
mov
push
or
popa
dec
mov
call
pop
dec
jmp
xchg
inc
adc
lods
in
push
dec
mov
ss
arpl
call
arpl
out
nop
push
sub
mov
add
subb
push
mov
pushf
aam
or
jnp
jmp
mov
std
in
mov
add
inc
out
js
pop
je
outsb
mov
mov
lds
inc
mov
sub
test
cmp
loope
cmp
ret
popf
sbb
pop
js
and
ljmp
cmp
sub
sbbl
iretw
mov
xchg
sub
bound
aam
repnz
mov
xor
imul
add
movsb
enter
or
dec
rclb
pop
fcompl
shll
jbe
cmpsb
fwait
mov
mov
xor
lods
and
test
stos
scas
jnp
push
sub
das
fprem
mov
rcll
inc
sub
pusha
add
mov
and
xchg
sahf
push
add
call
jb
fiadds
cmp
sub
je
sbb
and
pop
xchg
pushf
test
insb
inc
cmpb
test
mov
outsb
adc
or
pop
cmpsl
test
stos
jmp
shrl
push
fwait
dec
jbe
addb
cmp
test
inc
jno
daa
xor
sahf
xchg
shll
loopne
mov
dec
test
loopne
push
jns
ret
jge
sub
mov
sub
jle
push
jp
or
fxch
push
cmp
clc
push
pop
loope
lods
xorl
mov
pop
cmp
loop
rorb
loope
clc
addb
pop
ret
push
in
xlat
inc
mov
fmuls
sti
xor
daa
adcb
movsl
insb
lods
movsl
mov
pop
lcall
inc
into
sbb
mov
jl
add
sub
cs
inc
bound
add
sbb
mov
inc
sbb
cmp
repz
inc
loop
xor
dec
or
das
dec
sar
push
inc
jg
lods
in
jp
push
lods
jb
data16
xlat
mov
adc
sbb
lods
shrb
cli
stos
and
jnp
mov
bound
cmp
add
adc
jecxz
push
data16
cmp
or
xchg
jo
ficoms
mov
loope
faddl
mov
xor
mov
mov
xchg
insl
and
jge
dec
cmp
cmp
les
sbb
sahf
adc
add
aad
dec
hlt
mov
sub
xchg
pop
inc
adc
mov
push
insl
es
sbb
inc
sub
insb
xor
dec
xchg
add
dec
add
jge
shrb
add
popa
xchg
pop
xchg
pop
xor
lret
add
mov
add
test
ljmp
nop
testl
cmp
fadds
xchg
adc
or
xchg
sbb
pop
mov
jns
or
add
mov
mov
mov
roll
fnstsw
mov
and
sub
push
sbb
std
cli
dec
iret
xchg
inc
icebp
idiv
add
jno
mov
mov
into
or
pop
inc
jbe
iret
or
lret
jbe
loope
sbb
nop
out
addb
into
push
mov
push
sbb
nop
iret
int3
push
icebp
daa
mov
or
sbb
mov
jp
fildl
mov
push
jecxz
dec
fwait
movsb
add
test
xor
jne
inc
mov
js
or
pushf
fldcw
inc
and
lcall
jae
add
inc
lods
fcompp
out
xchg
sbb
rcll
push
ss
loopne
add
sub
jnp
inc
dec
mov
add
cmpb
mov
aad
and
cmp
adc
fcoml
mov
mov
xor
push
add
data16
aad
jle
test
call
pop
lock
push
or
das
cwtl
lock
mov
adcb
frstor
jns
ja
inc
xchg
dec
adc
push
adc
and
xor
dec
push
xor
addb
sbb
and
dec
jl
in
inc
sub
orb
iret
push
mov
jmp
les
test
das
lret
or
pop
in
ss
cmpsl
adc
sub
lea
add
dec
mov
add
xor
jo
dec
imul
outsb
stos
loope
or
fmuls
fimull
mov
pop
loope
cmp
fdivrl
imul
and
push
jge
imul
xlat
daa
outsb
popl
add
adc
sub
in
mov
inc
mov
loopne
mov
je
or
adc
dec
test
in
scas
pop
lret
sub
rclb
xchg
mov
addr16
inc
addr16
jle
jne
dec
inc
xor
mov
add
adcl
gs
xchg
xlat
add
repz
jo
and
push
sbb
cli
xchg
lcall
sub
add
icebp
loop
xor
mov
rclb
add
mov
xor
jae
mov
jl
fsubrl
pop
push
xchg
dec
cmp
mov
jecxz
cmp
pop
mov
scas
jnp
movsl
push
mov
inc
pop
ja
sbb
dec
jecxz
cmp
cmp
dec
mov
std
and
adc
add
ljmp
icebp
shr
sub
sbb
xchg
push
adc
and
clc
push
sahf
subb
aad
loop
dec
sbb
inc
dec
xor
adc
cli
test
movsb
data16
scas
add
fs
inc
loope
mov
push
adc
stos
stos
jmp
cmp
jecxz
sbb
in
movaps
xor
jno
into
or
scas
repz
adc
xor
jne
loopne
stos
mov
subl
jne
jg
jo
or
xor
pop
andl
sub
jmp
or
int3
nop
push
mov
js
dec
mov
fcmovne
es
push
add
dec
xchg
xchg
adcb
sbb
mov
mov
imul
and
mov
int3
cmp
xchg
mov
push
jp
add
mov
xchg
mov
fidivl
cmc
aas
dec
cmp
jae
or
push
cld
push
push
daa
lahf
push
add
sbb
xchg
lret
cmp
xor
or
inc
jae
xchg
pop
out
cs
icebp
xor
cmpsb
dec
popa
cltd
push
push
mov
adc
push
or
xchg
jge
lcall
add
jmp
adc
ficoms
and
xor
pop
shrl
mov
ljmp
pop
and
mov
pop
jae
sub
inc
pop
or
jge
fidivl
lret
ffreep
cwtl
fwait
jge
inc
dec
cmp
mov
sub
leave
mov
movsb
jns
mov
mov
stos
mov
mov
test
aas
pop
xor
movsb
fsts
imul
inc
js
movsl
sbb
push
popa
inc
test
cmp
cmpsb
add
sbb
fsts
pop
xor
imul
sub
dec
outsl
push
and
js
pop
cmpl
cmpsb
fsubs
sbb
insl
aaa
mov
xchg
fldcw
push
fcoml
pop
adc
stos
push
incb
aam
nop
lret
mov
or
lea
inc
xor
xchg
mov
mov
xor
rorl
push
and
lods
fldt
push
cmc
sub
push
movsl
imul
in
or
xor
je
add
popf
add
dec
adc
push
pop
add
add
cmp
fisttpll
cld
xchg
mov
mov
adc
lret
dec
aas
xchg
es
pop
nop
rol
inc
jp
cmc
bound
jb
mov
or
push
aas
inc
in
imul
das
test
xor
push
bound
and
iret
int
jae
xchg
hlt
icebp
and
je
dec
sub
pop
mov
add
insl
push
and
or
adc
in
lock
test
jno
or
push
xorps
lcall
push
nop
pop
sahf
jecxz
or
mov
and
sub
call
pop
mov
es
mov
pop
aas
hlt
test
mov
lcall
cmp
jecxz
jnp
mov
iret
out
lods
or
mov
orb
add
popf
cmp
push
je
sbb
inc
inc
jne
inc
inc
inc
jae
jg
mov
add
js
mov
push
add
jl
js
sbb
xor
mov
mov
rclb
mov
push
inc
add
fsubrs
dec
pop
test
leave
push
ja
in
jnp
push
cmp
test
ss
sahf
dec
lods
loopne
adc
jno
mov
pop
or
mov
add
mov
stc
jle
jl
sbb
dec
fs
jge
std
jne
inc
mov
inc
mov
push
cmp
je
js
sarl
pop
cmc
enter
shl
loope
and
sub
xchg
mov
cmp
stc
sub
dec
mov
and
push
and
pop
adc
xchg
mov
data16
movsl
jmp
ds
dec
xchg
push
sbb
dec
cmp
iret
push
iret
es
rorl
mov
test
pop
add
xchg
lods
push
jbe
dec
dec
mov
inc
add
leave
or
push
xchg
inc
test
outsl
jge
dec
lods
loopne
pop
mov
or
pushf
jle
jge
push
pop
or
xor
scas
movsb
ljmp
addb
out
pop
and
adc
push
dec
pop
loope
adc
sub
sub
sarl
sahf
stos
xor
add
xor
and
or
inc
add
stos
adcl
loope
sbb
pop
cs
rorb
and
jno
cld
inc
bound
dec
in
pop
mov
inc
mov
jne
rolb
jge
sti
outsb
loope
movsl
idivl
mov
ds
lea
cmc
jle
push
xor
dec
sub
inc
arpl
ret
addl
ret
jge
xor
pop
inc
stos
mov
or
xchg
in
js
adc
mov
fsubrl
rdpmc
popf
addl
mov
xor
cwtl
aaa
xchg
push
inc
xorl
popa
cli
fstl
pushf
cwtl
dec
je
cmp
pusha
in
pop
in
dec
or
or
aas
add
xchg
nop
xchg
mov
push
popa
push
dec
and
lds
cmpsl
popa
push
inc
in
add
lds
shr
xor
iret
adc
sbb
sti
test
call
jno
mov
fwait
ja
pusha
and
sahf
xchg
and
pop
repz
xorb
or
pusha
jns
jae
es
dec
jno
add
pop
les
les
mov
aaa
push
xor
lea
add
loope
jmp
mov
out
and
cmpsb
adc
or
adc
mov
jne
mov
int
andb
xchg
daa
rcrl
adc
mov
dec
dec
xchg
jo
fdivs
nop
ret
cs
jno
js
push
fsubs
push
aas
add
jge
std
mov
les
sub
mov
add
xorl
push
push
pop
adc
shlb
pop
cmp
push
mov
add
aad
ret
lods
mov
adc
movsl
scas
ret
sub
cltd
add
pushf
jo
shll
aaa
add
int
outsl
pushf
cmc
iret
lret
jo
fwait
rcrl
mov
push
sub
push
push
and
cmp
inc
pop
aam
lods
ret
fcoml
sub
pop
orb
sbb
dec
jno
add
testl
shrb
mov
mov
ret
adcb
mov
and
mov
call
test
dec
push
or
loop
mov
fnstenv
sbb
or
push
sub
dec
mov
xchg
movl
movsl
addr16
ds
jmp
and
inc
pop
fdivrl
push
or
xlat
xchg
xchg
lods
lods
add
cmc
dec
fimull
xor
fcomps
shrb
ret
lods
and
mov
push
push
ret
inc
jno
jnp
pop
sub
test
pop
aas
xchg
stos
je
sub
inc
ret
mov
subb
aam
ja
enter
mov
loop
loop
mov
mov
push
push
jge
xlat
pop
rcrb
sbb
adc
call
pushf
dec
sbb
push
lea
or
add
xor
out
testl
dec
inc
xchg
cmp
jmp
jecxz
push
inc
loope
clc
ljmp
add
mov
cltd
mov
mov
dec
lea
xchg
adc
sbb
loope
adc
movsb
cmp
test
imul
cmp
adcl
cmp
lods
test
and
add
test
fcom
bound
jno
sub
and
add
sub
inc
fldt
aad
loop
push
jo
data16
psubq
cmp
rolb
push
imul
pop
xchg
stos
iret
jb
test
adc
rcl
sbb
xlat
xchg
sti
lock
pop
adc
xchg
js
int
sub
mov
lds
pop
daa
xchg
inc
es
cmpsl
sbbb
mov
insb
push
cmpb
sub
in
or
jg
or
and
movsb
jmp
out
rolb
fildl
or
dec
lret
inc
in
arpl
cmpsl
inc
sbb
arpl
mov
and
inc
cmpsb
bound
pop
imul
push
pop
fs
lods
and
xor
mov
xor
fcompl
adc
lods
imul
push
and
mov
add
inc
sbbb
orb
enter
xchg
add
dec
adc
js
xchg
sar
cmc
popf
push
popa
iret
push
add
jl
jo
push
xor
jns
xchg
xor
movsl
adc
scas
cmp
rorb
xor
rol
icebp
inc
adc
xchg
inc
or
iret
jecxz
dec
rorl
dec
xchg
test
rorb
jp
inc
orl
cmp
lcall
pop
mov
cs
sbb
jge
jae
imul
daa
xchg
arpl
mov
mov
lods
jmp
mov
dec
lahf
and
cmp
xchg
mov
xchg
movl
arpl
and
add
sub
mov
inc
xchg
mov
mov
push
mov
clc
in
mov
pop
xchg
out
and
inc
pushf
cmp
and
xor
lods
popa
pusha
jno
xor
shr
and
rcll
mov
cmp
add
sbb
push
and
xchg
mov
or
xchg
xor
adc
xchg
popa
loopne
mov
and
sar
js
add
pusha
mov
jo
mov
mov
lock
testl
push
in
xor
jns
cli
inc
flds
insl
es
or
lods
and
push
mov
imul
out
sub
cmp
add
or
fsubrs
lock
mov
sbb
sub
sbb
push
push
add
imul
lahf
add
inc
sbb
cmovne
hlt
xor
pop
es
jg
data16
cmp
add
in
add
orl
and
add
inc
add
add
insl
cmp
sarl
bound
adc
lods
mov
mull
das
cld
mov
pop
add
or
sub
xchg
sub
data16
add
xchg
jbe
push
aaa
or
sub
or
cld
dec
jo
cmc
inc
sub
mov
mov
das
jp
inc
push
scas
pusha
cld
mov
fistps
mov
mov
test
jp
pop
mov
lods
insb
xor
test
arpl
cmpsb
sbb
fs
lret
mov
test
fimuls
iret
and
sbb
js
jge
fs
sbb
or
jmp
mov
adcb
ss
add
pop
cs
iret
pop
add
add
mov
roll
into
mov
enter
loope
sbb
xchg
aam
or
fldcw
jo
xchg
xchg
adc
mov
daa
push
add
shrb
sbb
mov
imul
loopne
push
mov
dec
sub
dec
and
rorl
sbb
dec
lea
add
xchg
adc
lcall
test
cmpsb
add
inc
pop
or
pop
shlb
es
add
outsl
shl
pushf
insb
push
dec
inc
rol
or
or
add
rolb
movl
popa
rcll
clc
push
fdivp
push
scas
jno
jo
cmp
and
and
mov
xchg
stc
cmp
es
and
cmp
loop
mov
push
pop
lock
test
adc
add
ljmp
data16
push
or
cmp
out
mov
mov
or
out
jbe
call
aad
inc
jo
sbb
lods
mov
xlat
je
or
mov
popf
xchg
dec
wrmsr
mov
outsl
add
jbe
test
loopne
inc
inc
jnp
pop
xchg
xchg
int
or
movsl
adc
outsb
pop
push
mov
imul
loopne
shl
pop
adc
loope
inc
lret
mov
xchg
add
cmpsb
push
jbe
push
add
and
dec
hlt
addr16
add
fldenv
jle
pushf
and
and
and
or
mov
add
or
and
shrb
nop
adc
insb
sahf
es
cmp
ljmp
mov
lods
and
jno
xor
das
cmp
lds
adc
sbb
and
leave
imul
gs
leave
and
mov
lods
inc
pop
mov
pop
fcmovnu
in
lcall
jo
adc
xor
loope
out
inc
sub
mov
pusha
das
int3
xlat
arpl
pop
sub
mov
loopne
sbb
xchg
or
mov
mov
mov
mov
sub
mov
dec
pop
mov
inc
scas
call
repnz
mov
ret
lahf
and
push
cmc
ret
push
ja
inc
insb
adc
lahf
jle
insb
mov
lret
xchg
ret
lret
out
ror
leave
cmpsb
mov
gs
and
jmp
and
movsl
les
mov
xor
sub
test
std
pop
inc
fwait
xor
sbb
dec
xor
add
push
or
mov
test
jb
js
fnstcw
pop
ret
sbb
sbb
cmp
ret
jle
aam
stos
enter
sbb
pop
cmpsb
or
push
outsl
aaa
loope
add
out
or
add
inc
pop
movsb
mov
push
xor
arpl
jge
test
jno
int3
cmpsb
enter
je
xor
sub
stos
push
add
xor
jno
dec
jo
mov
xorl
orl
jb
jbe
js
mov
add
aaa
pop
or
add
cmp
xchg
sub
pop
and
add
jbe
sahf
icebp
pop
lods
dec
or
mov
fldl
out
das
cmp
ja
iret
add
out
mov
cmp
fsubr
and
lahf
orl
pop
add
lods
and
cmp
es
mov
movsb
lds
rorb
fidivrl
clc
clc
add
mov
rorl
ja
mov
aad
das
js
cwtl
leave
cltd
inc
and
sub
pop
push
rcr
and
xor
jg
sbb
call
lret
jae
mov
mov
push
xlat
cs
adc
subb
cmp
mov
cs
dec
mov
shlb
sbb
out
and
sbb
cmc
pop
pop
ret
neg
mov
jecxz
dec
test
scas
xor
dec
cmp
adc
scas
add
xchg
stos
arpl
lea
out
xchg
div
add
push
add
and
jecxz
push
das
lret
and
add
push
std
mov
push
lock
push
push
idivl
add
jo
div
inc
dec
dec
xchg
mov
push
xchg
test
test
cwtl
mov
mov
adc
pop
inc
outsl
xchg
inc
rcll
test
fisttpl
cmp
xor
sbb
cltd
mov
iret
mov
cmp
out
aas
divl
iret
out
cltd
jle
inc
push
inc
mov
add
shlb
jne
push
mov
sub
and
lods
testl
inc
mov
jnp
das
xchg
inc
test
mov
mov
ja
jns
xchg
cli
ds
jecxz,pn
jecxz
add
lods
out
inc
mov
imul
inc
jo
jnp
mov
je
enter
xchg
mov
mov
add
xchg
ljmp
ret
mov
fsubl
mov
lods
mov
adc
testl
clc
xchg
inc
xor
subb
pusha
daa
sub
cli
icebp
sub
push
cs
adc
xlat
and
rolb
shll
and
outsl
xchg
outsb
add
mov
testl
adc
jmp
jb
push
add
std
sbb
fs
scas
das
out
pop
stos
test
lahf
fdivrl
js
mov
mov
sarb
pop
adc
test
dec
and
cmpb
daa
arpl
cld
dec
sub
fiaddl
sub
xor
or
mov
xor
xor
outsb
lret
das
add
cld
cmc
test
mov
outsl
arpl
push
adc
repnz
iret
decb
popl
and
in
jno
push
pop
das
lock
add
or
mov
adc
popf
scas
gs
xor
and
and
inc
dec
scas
lock
sub
outsb
mov
popa
je
and
add
or
pop
popf
mov
pop
inc
adc
addr16
loopne
cltd
or
mov
loopne
std
ret
and
push
sbb
pop
out
add
aaa
pop
add
cmc
movsb
or
icebp
cwtl
xor
hlt
xchg
mov
jl
pop
iret
pushf
sbb
dec
mov
jmp
notl
pop
sbb
cld
xchg
stos
pop
loopne
test
xor
test
push
inc
ljmp
in
add
jns
add
push
sub
jl
ret
push
xor
push
xor
pop
mov
jo
aas
ret
lds
and
ja
pop
sub
test
repz
out
loopne
andl
scas
mov
pop
leave
pop
lods
mov
stos
adc
call
sahf
cmp
jns
in
fcmovb
stos
mov
mov
mov
int
pop
add
sarb
xlat
jg
mov
daa
rcll
or
mov
inc
test
or
cmpsl
sbb
push
jp
cmp
mov
dec
sti
ss
cmpsl
xchg
orl
into
add
xchg
cmp
popf
jno
sbb
sub
in
movsb
or
dec
sbb
xlat
mov
inc
adc
fdivrl
push
jle
xchg
int
and
mov
insb
cltd
cmp
cmp
and
out
js
mov
push
subl
sub
xor
daa
fsubs
pusha
insl
pop
rcrl
adc
rolb
sub
jmp
add
test
jno
and
sub
mov
clc
dec
pop
mov
sub
mov
sub
pop
and
dec
loopne
outsl
movsl
popf
shlb
fisttpl
loopne
gs
bound
out
jo
cmp
xchg
outsb
adc
and
push
mov
sub
cli
test
les
mov
je
test
xor
aam
push
test
mov
into
lahf
fidivrs
ss
jno
add
cmc
mov
das
nop
mov
mov
xlat
mov
bound
sbb
mov
mov
lods
push
mov
sbb
add
mov
sbb
cmpsl
mov
mov
fiadds
mov
push
inc
mov
out
mov
add
sub
and
addb
inc
enter
or
mov
xor
push
iret
pop
loopne
sbb
push
inc
mov
repnz
inc
pop
pop
inc
ljmp
mov
jbe
leave
pop
aad
adc
or
sbb
inc
fcoms
and
push
icebp
mov
jno
adc
pop
ljmp
or
xor
pop
mov
sbb
outsl
rclb
cmp
add
xorl
gs
ljmp
lcall
jo
cltd
mov
mov
push
je
or
out
shlb
cmpb
or
push
add
mov
mov
pop
add
add
xchg
iret
push
xchg
daa
jne
and
push
jecxz
jno
sub
iret
cwtl
cltd
repnz
popf
jl
sbb
or
lock
cmp
pusha
push
pop
push
sub
pusha
push
out
push
imul
lcall
cmp
mov
cmpsb
cmp
pop
or
adc
push
and
insl
fcoml
into
test
xchg
aam
push
pop
popa
gs
dec
pop
dec
pusha
xorl
mov
dec
mov
leave
shll
sbb
add
push
add
rol
insb
addr16
dec
xchg
add
pop
movsb
aam
lea
mov
mov
in
push
dec
lods
jecxz
adc
sbb
movswl
fiaddl
pop
fstps
pop
jns
lret
push
lods
add
jbe
xchg
adc
aas
shl
xchg
sbb
add
sbb
xchg
jo
pushw
icebp
dec
sbb
adc
movsl
jns
fdivrl
push
sbb
rolb
mov
je
das
and
adc
scas
sub
and
pop
call
aad
fs
pop
mov
lods
ret
sbb
sub
in
add
add
repnz
xchg
pop
add
lcall
sbb
cmc
dec
out
xor
sub
lcall
xchg
test
lods
xor
mov
xor
xor
imul
jp
addl
push
int
cs
aas
or
dec
or
pop
add
cmp
out
or
xor
jmp
xchg
scas
hlt
iret
xor
cmc
mov
add
sub
inc
cmp
int
js
mov
adc
loop
mov
je
xor
push
dec
dec
and
xchg
add
out
jns
test
inc
insl
sbb
adc
xchg
pushf
sub
mov
mov
xor
push
cmp
lret
mov
imul
sbb
xchg
pop
cmp
sti
push
data16
fnsave
or
lahf
aam
sbb
lds
mov
jnp
or
lcall
jmp
xor
fsubrl
push
jge
and
dec
sbb
std
aas
and
add
add
in
iret
push
or
mov
into
sub
loopne
ljmp
pop
dec
cli
add
mov
mov
dec
inc
insb
push
outsb
pop
push
adc
mov
push
mov
inc
dec
dec
xchg
enter
mov
mov
pop
sbb
cmp
dec
or
daa
mov
es
push
sahf
enter
or
les
xor
nop
jle
pop
mov
push
fldenv
mov
jb
pop
dec
popl
sahf
mov
inc
in
dec
js
cltd
nop
inc
xchg
adc
mov
sub
add
inc
or
push
dec
or
test
sub
inc
jo
push
lcall
add
dec
push
add
xor
adc
ret
pop
clc
pop
popf
iret
cmp
xchg
mov
inc
es
mov
rclb
or
mov
out
or
jne
adc
sbb
bound
lret
and
cmp
inc
mov
movsb
add
jo
sub
sarb
sbb
es
push
loopne
sub
sbb
add
test
popa
jmp
cli
xchg
inc
les
insb
pop
dec
pop
aad
or
mov
or
jno
cltd
pop
add
iret
push
inc
ss
orl
mov
sbb
xlat
fcmovu
addb
or
pop
lods
pusha
pop
mov
xor
sti
and
jne
outsb
pop
and
inc
or
or
cmp
hlt
popa
scas
adc
sub
adc
adc
iret
fbld
lds
sbb
inc
aam
push
dec
fimull
pop
mov
sbb
popf
je,pn
mov
and
mov
in
lods
xchg
push
scas
out
sbb
dec
sbb
fcmovb
stc
dec
test
iret
xchg
add
decl
jo
imul
loopne
sub
pop
test
mov
or
les
jl
cmp
push
popa
push
fs
test
jbe
daa
mov
cmp
add
xor
sub
mov
cmp
fimuls
or
pusha
dec
dec
pop
insl
shl
mov
imul
dec
dec
or
mov
ss
or
sarl
xor
xor
xchg
sub
sbb
sbb
outsl
in
and
lds
sub
jg
cmp
imul
cmp
inc
jecxz
cmp
scas
imull
arpl
or
cmpsb
das
les
cli
mov
jnp
add
stos
cld
ds
adcb
adc
mov
or
shlb
andl
xor
sbb
xchg
push
lcall
loopne
data16
add
push
lcall
pminub
sti
push
mov
enter
sbbl
add
push
sub
inc
iret
ret
sub
inc
pop
pop
jo
bound
add
sbbl
push
sub
pop
adc
in
and
cmp
loop
add
push
scas
jg
lock
push
icebp
xor
pusha
sahf
ret
mov
or
mov
insl
pminub
and
push
push
jmp
outsl
adc
sbb
mov
jno
mov
loopne
inc
rcll
cltd
xor
sbb
sahf
sbb
jo
or
fldt
test
push
dec
cli
push
das
lahf
mov
test
mov
mov
sbb
in
shlb
scas
jp
and
cmpsl
add
sbb
sbb
sahf
mov
jp
mov
sub
adc
cmp
xchg
mov
xchg
stos
das
mov
subb
adcb
xor
mov
adc
push
pop
push
mov
and
mov
ja
ret
stos
dec
lret
fildll
push
sbb
mov
add
add
cs
sub
adc
shlb
shlb
xchg
fcoms
lea
push
insb
jl
sbb
cmc
shlb
andb
in
push
mov
cmp
inc
lds
or
push
mov
or
and
bound
sbb
sarb
testb
rcl
inc
inc
mov
stos
pop
pop
inc
js
insl
mov
aad
fbld
shl
xchg
iret
lret
fdivrs
js
and
inc
sub
loope
mov
mov
ja
jns
repz
push
daa
arpl
jmp
aas
jp
xchg
jle
jmp
mov
fs
push
sbb
imul
adc
jne
cs
loope
lock
pusha
add
cmp
pop
lahf
xor
test
mov
dec
or
jo
negb
sbb
adc
mov
insb
push
cmp
fsubrs
mov
mov
mov
call
mov
xor
add
sub
dec
imul
lods
hlt
xchg
or
sbb
pop
outsl
mov
push
xor
inc
mov
push
rclb
jge
loope
xor
sbb
mov
add
popf
xchg
xorb
nop
mov
test
jne
xor
xchg
push
and
mov
test
mov
jo
lahf
jne
test
loop
jne
pop
fcmovbe
push
shl
iret
leave
mov
mov
cs
shlb
aas
cmp
rcrl
push
stos
sub
and
nop
ss
push
rclb
or
adc
jne
sbbb
fcoml
sbb
movsb
jle
add
add
mov
add
mov
or
push
js
mov
roll
or
std
jno
adc
adc
push
push
adc
mov
adc
sbb
testl
testb
and
sbb
xchg
xchg
pop
jo
cmp
lods
ret
inc
add
js
pop
outsl
cwtl
loope
scas
testl
inc
inc
jae
or
scas
subb
pusha
inc
mov
mov
add
lods
push
outsl
loope
dec
sub
cmp
iret
and
pop
jnp
mov
sarb
push
xchg
jp
jecxz
cmc
out
xchg
ds
cld
outsl
lahf
call
cld
divl
add
shrl
lcall
aaa
pavgw
pop
fcmovu
sti
push
aad
scas
test
stos
pop
sbb
rcrl
int3
add
cmp
movb
adc
les
rcrb
fistps
inc
imul
stos
push
xchg
jb
daa
xchg
adc
es
mov
add
sub
jb
adc
aam
mov
xor
adc
add
xor
cltd
mov
jo
or
push
add
adc
mov
aad
in
lcall
int
aaa
insb
into
mov
or
addl
lods
sub
mov
repz
dec
fsubrs
andl
loopne
into
jo
lret
cs
or
fsts
dec
cs
or
ja
loopne
push
fcmovnbe
sbb
mov
les
sbb
or
insb
pushw
in
iret
push
push
or
and
mov
add
dec
sbb
xor
add
dec
es
push
loop
pop
lods
aad
movsl
add
out
int3
push
push
loopne
sub
dec
pop
and
rorl
or
adc
mov
dec
xlat
push
and
out
mov
and
cli
push
fwait
popf
cmp
fcoml
pop
pop
or
add
pusha
and
pop
sbb
imul
push
add
pop
xor
lock
es
and
push
jmp
sub
or
outsl
dec
icebp
dec
mov
push
jns
aam
rorb
data16
add
jge
push
lock
je
jnp
rclb
bound
jne
jo
daa
adc
cmpsb
js
mov
ja
and
and
or
xor
daa
je
fwait
mov
or
sub
jno
push
xchg
adcb
jo
add
loope,pt
fiaddl
adc
xchg
sbb
jmp
and
subb
cs
lds
outsl
or
xchg
loope
das
xchg
addl
pop
aas
and
ja
and
xor
clc
add
add
jbe
in
dec
or
ret
ljmp
or
bound
inc
pop
and
rolb
and
ljmp
mov
sub
das
scas
das
inc
subl
pop
sub
sub
or
sub
or
iret
jb
push
stos
pop
imul
sbb
ret
mov
jbe
and
jg
and
jl
and
jo
cmp
leave
fnsave
inc
movsl
mov
xchg
mov
inc
loopne
adc
xor
lods
pop
add
lock
dec
das
push
push
add
add
xchg
xchg
lods
push
mov
adcb
mov
das
push
dec
data16
jbe
into
pop
push
stos
pop
fdivp
and
jge
mov
push
push
push
icebp
lahf
jge
shl
fwait
pop
xchg
dec
jae
mov
addr16
imul
adc
cmp
dec
daa
mov
ret
stos
rorb
push
pop
sti
lods
jo
orps
js
rol
add
rclb
cli
test
add
repz
dec
inc
fmuls
mov
cmpsb
sbb
shrb
and
mov
push
outsl
mov
jmp
std
arpl
dec
shll
add
pop
fs
sbb
lcall
add
movswl
aaa
sbb
and
xor
and
dec
sbbb
dec
rorl
test
out
fsubr
push
xlat
mov
filds
js
lock
stos
loope
aas
movsl
dec
cmp
daa
fwait
scas
pop
cli
cld
sub
sub
scas
push
int
fldl
sbb
adc
rolb
and
push
movb
push
shrb
loopne
jp
mov
clc
int
out
sub
cmpsl
ss
xor
inc
or
mov
add
add
pushf
sahf
test
and
ss
insl
fistps
and
lcall
cmp
mov
cli
xchg
out
mov
cmpsb
jp
xchg
scas
cmp
and
xor
push
imul
add
pop
add
sub
adc
insl
add
inc
xchg
lcall
xchg
adc
adc
mov
ljmp
loopne
add
jl
sub
push
mov
mov
in
test
xchg
xor
das
cmc
ret
jo
in
push
pop
decl
or
mov
and
loope
sbb
xchg
sbb
push
je
mov
or
xor
push
and
dec
cmp
xchg
mov
mov
ss
jecxz
xchg
dec
loopne
inc
pop
cmc
dec
add
das
imul
dec
shlb
ss
and
push
cmpsl
jmp
mov
sahf
lahf
xchg
or
out
das
cmp
push
dec
lods
ret
pop
jne
pop
fldt
sbb
enter
or
stos
or
movsl
cwtl
push
lret
sub
xchg
lods
add
dec
pop
lahf
cs
cwtl
cs
repz
push
adc
and
push
cwtl
mov
bound
or
pop
xor
jge
loop
or
movsb
out
fdivs
mov
rcrl
and
mov
sub
jo
cmpsl
pop
inc
scas
sub
sbb
jmp
push
leave
mov
mov
or
add
or
sub
sbb
sti
pop
hlt
icebp
shll
mov
stos
fdivs
jo
inc
pop
loope
add
mov
and
addr16
lcall
cmp
sub
popa
pushf
mov
ror
sub
xor
es
nop
pushf
mov
mov
daa
and
in
mov
or
inc
popa
inc
mov
lods
jnp
or
cmp
add
rcl
icebp
pop
lds
jmp
xorb
rorb
inc
sbb
das
std
bound
jne
ficompl
push
adcb
push
fdivl
mov
sbb
outsb
cmp
and
add
pop
push
stos
lea
and
test
inc
scas
jne
sbb
or
popa
xor
mov
inc
add
xchg
leave
cli
jg
cmp
cmp
movsb
mov
mov
mov
xor
jge
dec
jnp
push
test
lahf
mov
push
sarb
add
cmp
sub
jb
rclb
xor
inc
ret
mov
cmp
cmp
cmp
dec
add
mov
sub
add
or
ret
lea
add
sbb
sbb
fwait
adc
fadd
xchg
add
mov
les
sbb
mov
int3
pop
mov
movsl
xor
pop
and
pop
call
push
push
push
mov
add
lock
andl
mov
daa
mov
cwtl
repz
push
stos
add
jp
lock
addr16
cld
cmp
mov
xchg
mov
ljmp
xor
add
adc
adc
and
add
pop
addr16
and
fidivl
fdivrs
mov
dec
sbb
outsb
inc
or
jle
add
mov
lahf
pop
fiaddl
fcompl
add
std
cmp
mov
lahf
lea
dec
jp
pop
pusha
int3
or
mov
rorl
sub
cmp
stos
test
jae
js
push
jge
mov
add
aad
jnp
int
sub
and
dec
mov
cmp
pop
je
int3
je
jae
inc
rcrl
xchg
call
incb
and
iret
xchg
ret
out
and
and
mov
subl
xchg
lgs
xchg
mov
nop
mov
dec
loope
jp
add
push
cmpsl
mov
rcr
test
ss
mov
xchg
outsb
es
add
xor
cmpsl
rcrb
xor
add
jae
jne
and
or
or
mov
sub
mov
popf
sbb
divl
xchg
dec
into
mov
push
mov
jns
push
sub
cmpsb
lock
loope
xor
into
or
mov
jno
pop
jbe
push
iret
add
inc
subb
sub
pop
add
ret
push
pop
les
push
fadd
inc
cmp
inc
or
or
out
sbb
sub
rclb
xor
pop
or
xor
push
push
pop
test
adc
dec
cmp
mov
nop
mov
adc
push
mov
dec
push
and
jnp
cmp
mov
pop
xor
into
je
popa
movsl
icebp
test
xchg
mov
lock
push
sbb
jle
ljmp
je
fistpll
cmp
ret
lds
nop
adc
fnstsw
bound
ja
inc
mov
mov
ss
and
sbb
clc
inc
add
cli
push
adcl
add
jo
movsl
addl
sti
bound
push
add
push
shl
test
mov
es
loopne
mov
sbb
lahf
mov
sub
add
sbb
rolb
test
nop
jno
mov
fidivrl
pusha
xlat
cmp
mov
icebp
mov
dec
inc
or
cld
rcl
fwait
xchg
xorl
jle
sbb
lods
aaa
cmp
lods
mov
push
addr16
lods
mov
lock
pop
orb
sahf
add
add
or
pop
sbb
outsb
adc
adc
xor
and
fstl
mov
lock
cmp
sub
push
xchg
push
lds
aaa
lea
push
clc
xchg
fdivrs
xchg
or
inc
inc
in
mov
pusha
sub
cmp
mov
mov
rol
shrb
flds
stos
out
add
xlat
es
stc
cmp
fbld
jl
xchg
add
sahf
jle
inc
aaa
xchg
mov
or
dec
cld
js
sbb
mov
push
popf
adc
imul
inc
stos
pusha
aaa
ja
mov
mov
imul
pop
filds
sub
scas
popa
sub
cli
fists
lods
adc
scas
popa
adc
daa
or
sbb
test
add
fs
push
inc
daa
xchg
mov
test
mov
jle
jmp
lods
out
daa
iret
insb
push
fidivl
jo
push
push
mov
lea
adcb
sar
pop
inc
sub
fiadds
dec
or
leave
inc
jae
dec
inc
pop
push
sub
ret
fisttpll
mov
mov
loop
roll
mov
add
adc
jae
aas
call
xchg
add
xor
add
add
xor
in
insb
push
cmpsl
cltd
sahf
dec
popa
xchg
int
push
out
fildll
and
mov
das
lea
inc
lods
mov
mov
pop
into
fsqrt
popa
cmp
sbb
pop
or
aas
movsl
mul
and
fs
scas
psraw
mov
pop
fsubrs
rorb
pop
jp
in
jmp
ljmp
test
lret
lds
adcb
nop
or
sbb
shl
iret
js
addb
pop
lock
add
add
aad
ret
and
addr16
scas
xchg
pop
shrl
psllq
push
add
shrl
jnp
mov
jl
sbb
popf
in
and
push
jbe
add
mov
test
xchg
push
movsl
or
pop
pop
and
loop
or
pop
clc
ret
sub
fsub
mov
scas
xor
add
cld
divl
or
pop
inc
test
inc
push
jb
xchg
iret
dec
push
xor
inc
xchg
js
cmp
popa
mov
add
push
fnstenv
xchg
xor
outsl
nop
add
adc
aaa
fs
nop
stos
xchg
dec
dec
inc
or
add
ss
arpl
and
push
and
mov
out
or
iret
js
sbb
jne
sub
lret
pusha
in
xchg
pop
bound
aad
dec
loope
and
pop
jbe
cwtl
mov
les
pop
push
and
mov
cs
filds
lret
leave
sub
adc
sbb
add
movl
mov
int
cmp
xchg
outsl
add
hlt
fmuls
imul
sbb
jle
mov
pop
cltd
js
cltd
pop
jb
test
pop
pop
sbb
rcrb
dec
xchg
dec
jl
add
add
nop
sahf
sub
loopne
and
clc
push
xchg
dec
dec
or
leave
cmp
jo
add
das
push
mov
je
cltd
hlt
xchg
dec
xchg
add
lea
or
stos
jae
adc
mov
and
cmp
push
inc
sbb
icebp
pop
sbb
negl
jo
mov
sahf
add
shll
adc
and
or
je
push
sbb
pop
popl
cmp
xlat
jg
fdivl
adc
stc
ja
pop
xlat
jmp
push
cmp
sti
fwait
sub
gs
lock
sbb
aad
scas
cmp
imul
mov
xchg
pusha
add
mov
cmp
adc
iret
repz
sbb
push
add
lret
lret
or
insb
or
xor
mov
ljmp
mov
pop
out
notl
adc
filds
pop
xchg
lock
lods
or
dec
outsl
test
adc
adcb
add
add
mov
insb
push
movsl
idivl
test
pop
mov
push
into
dec
ret
dec
sub
sub
mov
push
sti
push
jmp
fcoms
xor
pop
call
sub
daa
cmp
mov
gs
lret
adc
cmp
pop
sbb
int
lds
pop
cs
and
arpl
stc
data16
pop
cmovp
add
xchg
cmpb
and
push
fsubrl
pop
xchg
gs
inc
mov
pop
sub
push
cmp
xchg
scas
es
orl
cmp
add
loope
bound
or
add
shll
push
jp
es
add
pop
or
nop
je
push
and
imul
lods
jp
sbb
hlt
jge
test
jge
out
inc
push
bound
stos
add
push
js
mov
inc
lahf
jo
mov
inc
sub
push
imul
add
stos
dec
adc
push
sub
mov
jg
add
inc
fsub
jbe
aaa
insl
xor
shlb
subl
enter
ss
push
push
cmp
pop
mov
js
mov
testb
or
add
subl
bound
fsubrs
adc
pop
notl
and
lret
and
dec
pop
dec
mov
mov
mov
pusha
insb
pop
inc
mov
push
push
fdivrs
loope
pop
dec
xor
es
movsb
jo
in
sbb
fisubrs
push
push
jg
adc
mov
aam
test
jl
mov
ficoml
cmp
mov
ret
xchg
mov
int3
xor
xor
clc
adc
xchg
pop
cmpb
jo
stos
inc
jo
add
dec
sub
pop
lock
mov
lock
das
push
cmp
push
pop
fldenv
cmpl
add
imull
jbe
out
arpl
aad
int
xchg
mov
mov
xchg
sub
sbb
pop
outsb
loopne
push
sbb
clc
fdivp
mov
and
push
push
xor
loope
xchg
push
cmp
xchg
add
and
aam
das
xor
xchg
psrlq
or
sub
xor
fsubs
sbb
and
mov
fstl
or
call
out
cmp
loope
sub
mov
lods
cmp
fmul
or
sarl
add
jge
add
cmc
xor
cmp
jae
add
outsb
xor
fidivl
xor
nop
lds
faddp
gs
jno
inc
add
in
mov
mov
test
jns
pop
add
sub
push
add
xchg
sbb
lea
push
inc
dec
loop
jecxz
mov
sbb
pop
popa
jecxz
and
icebp
stc
es
add
lcall
xchg
jmp
or
stos
outsb
das
or
xor
pop
or
cltd
std
sub
jo
inc
pop
mov
loope
das
je
sub
repz
add
mov
pop
and
dec
lds
out
out
jg
ret
or
or
lock
mov
or
mov
flds
sub
jns
or
popa
je
cmp
stos
xchg
js
rol
xchg
sub
cmp
push
xchg
cwtl
add
inc
daa
lret
out
test
aam
ror
adc
into
fcmovnb
and
inc
cmpsb
sub
hlt
xchg
movsb
psubd
rep
jg
mov
in
loopne
test
xor
jp
jmp
daa
mov
pop
loope
and
ret
rcl
or
or
lds
add
in
dec
out
test
aam
xor
aaa
int
call
rolb
cs
cwtl
loopne
test
loop
rol
stc
lock
cltd
sbb
test
ja
sub
addl
jb
enter
or
ds
xlat
xor
fisttpl
das
or
data16
psrlq
xor
scas
push
ret
pop
and
shrl
call
jnp
fcmovu
adcl
adc
push
and
or
inc
push
and
sub
push
jne
adc
loope
sbb
cmp
pop
inc
aaa
push
jp
aad
out
je
ss
iret
cmp
dec
and
js
push
push
inc
pop
jo
aad
lcall
ss
push
jmp
out
jecxz
pop
jo
into
mov
fimull
push
cmp
and
xchg
jne
sub
push
lods
mov
mov
dec
push
lock
arpl
dec
or
ret
movsb
or
mov
pop
and
xor
aad
mov
sub
xchg
sarb
push
push
and
leave
aad
shll
addr16
cmp
or
stos
pusha
mov
xchg
lahf
ret
sbb
pop
xor
cltd
aas
add
cmp
roll
lcall
ret
xlat
mov
pop
adc
mov
cmp
es
fstps
int
jnp
mov
loopne
xchg
mov
ret
add
push
imul
dec
mov
lret
sbb
nopl
and
iret
rorb
mov
aad
mov
dec
iret
sub
jg
xor
jb
inc
push
rcrl
or
cmp
aad
rol
arpl
fildl
xor
rcl
sbb
loop
shll
dec
and
fdivs
cltd
push
iret
jle
daa
cwtl
insb
lods
ja
lcall
ljmp
daa
and
ftst
sbb
test
lock
cmc
xchg
fwait
sbb
xor
push
mov
mov
mov
push
cmp
inc
rcl
add
xchg
out
ds
ficomps
ror
pusha
inc
sub
sbb
jnp
xchg
and
adcb
xlat
dec
push
cmpsl
jmp
mov
addr16
mov
adc
lock
jno
mov
in
int3
mov
add
hlt
sahf
lods
pop
aam
leave
cwtl
out
fiadds
cwtl
mov
mov
cmp
jno
or
cwtl
jo
sbb
adc
add
psrld
push
sbb
scas
mov
loope
mov
cmp
js
loopne
mov
sub
cmpsl
pop
jo
or
pop
data16
sbb
push
cltd
jmp
mov
jne
int3
inc
jecxz
pop
pop
cmp
jbe
or
imul
pop
int3
ret
or
das
dec
pop
sub
outsl
jno
sub
inc
cmp
and
push
mov
frstpm(287
add
push
js
mov
mov
stos
clc
mov
fcomps
aam
mov
int3
mov
loopne
push
mov
pop
mov
push
mov
out
pop
lods
mov
out
add
jo
lret
pop
int3
sbb
nop
jno
hlt
scas
sub
mov
and
add
fwait
jp
js
jne
lret
xchg
or
leave
mov
push
sbbl
scas
mov
enter
xchg
mov
adc
pop
push
pop
jo
fiaddl
das
mov
inc
push
outsb
and
stc
push
les
in
stos
icebp
idiv
mov
lea
fs
adc
imul
sbb
pop
in
mov
xchg
xchg
lock
xchg
fwait
nop
iret
cmp
push
push
ja
psrlq
mov
fs
push
das
inc
or
ret
or
push
dec
add
adc
mov
xchg
insl
stc
mov
ja
cmpl
adc
push
cmovns
cmp
test
inc
loop,pt
lret
popa
or
add
pushl
adc
and
jecxz
jmp
push
lods
out
sbb
fildll
and
scas
outsl
and
das
adc
push
aaa
scas
outsl
add
aas
sub
test
fcomip
sbb
add
add
rolb
loopne
push
mov
lret
xchg
add
mov
mov
jo
hlt
add
roll
into
stos
mov
cmp
push
lea
jbe
mov
and
and
jbe
mov
scas
push
xchg
shlb
push
in
imul
ret
push
cmp
add
movsl
sbb
stos
ss
mov
sarl
mov
lods
sbbl
push
int3
cmp
cmp
adc
loope
outsl
inc
ja
scas
push
inc
add
or
push
sub
and
add
pop
lods
dec
mov
adc
aaa
pop
jo
jnp
xchg
jb
lcall
and
sub
pop
subb
xlat
lret
push
add
mov
fsubr
push
fistpl
push
cmpsb
sbb
scas
push
push
lcall
shrd
push
dec
adc
lcall
and
into
or
cmp
mulb
enter
syscall
sub
push
fwait
movsb
lcall
ret
push
lahf
movsb
and
stos
inc
cli
test
mov
xor
and
jp
rorl
ja
or
mov
sbb
push
inc
movsb
xchg
cmp
adc
pop
push
cmp
outsl
icebp
fdiv
push
xor
or
cmp
cmp
push
ljmp
mov
xchg
add
jo
adc
sbb
aam
add
divl
clc
dec
mov
inc
je
fs
lret
je
or
mov
mov
push
shrb
cmpb
mov
scas
aad
cs
mov
imul
pop
jnp
imul
jle
pop
mov
inc
push
sahf
or
jns
push
pusha
add
aad
jl
pushf
mov
fidivs
sub
mov
test
mov
cwtl
or
mov
sub
lock
mov
and
ds
mov
sbb
push
jle
cmc
push
rolb
push
xor
out
gs
xchg
xor
testl
scas
pusha
das
jnp
rcrl
mov
push
push
daa
je
pushf
pushf
add
sbb
addr16
add
test
sbb
sub
xor
stos
lock
and
popa
jne
mulps
xor
ds
mov
mov
jb
or
pop
and
out
add
xor
repz
jbe
jl
and
aas
dec
lods
out
fimull
or
push
outsb
cmp
push
loopne
ret
cmp
adc
pop
rolb
inc
sbb
sub
stos
adc
cmp
cmp
adc
adc
lock
add
cmp
push
movsb
xor
or
xor
fs
adc
push
xlat
movsb
pop
jb
adc
loop
lods
xchg
dec
inc
xor
adc
jno
adc
clc
cmp
adc
roll
inc
adc
sub
xor
pop
cmpl
icebp
mov
xlat
js
mov
inc
inc
loopne
fistpl
mov
or
int3
push
pop
dec
push
mov
xor
icebp
test
add
orb
mov
std
ret
mov
push
add
sub
ja
sub
out
leave
ljmp
fwait
insb
iret
or
sbb
test
ljmp
sahf
ret
xor
push
and
sub
bnd
mov
adc
and
or
adc
push
sub
fadds
cmpsl
or
and
mov
icebp
add
int3
jp
sbb
popa
push
add
aas
push
and
xor
jmp
lret
push
dec
in
fsubl
push
dec
adc
dec
divb
jp
arpl
dec
xor
mov
stc
out
ficoml
jbe
aas
fsubrs
jo
arpl
mov
leave
lods
es
dec
mov
inc
pop
and
popa
mov
outsl
enter
sub
ljmp
mov
outsb
js
daa
loopne
mov
fs
lods
fs
push
pop
sarb
fs
and
enter
lret
cmpsb
out
sub
sbb
and
movsl
stos
shrl
inc
xor
imul
jl
push
je
out
adc
lods
fistpl
push
mov
test
outsb
scas
pop
inc
je
cmp
cmpsb
xor
clc
mov
test
loopne
call
pop
jo
xchg
and
lods
cmp
fwait
stos
imul
xchg
scas
sbb
in
pusha
pop
scas
jb
cmpsb
in
mov
movl
push
sbb
je
out
loopne
jne
add
loope
dec
sbbl
mov
add
popf
pop
push
add
mov
pushl
je
xor
push
cmp
stos
push
xchg
pop
lock
scas
push
jmp
pop
shll
mov
mov
ret
sub
cmp
negl
xlat
nop
push
add
jbe
cmp
sub
mov
add
lea
daa
jmp
test
pop
gs
xchg
push
push
je
adcl
fbstp
jl
call
das
jno
sub
jecxz
fmull
int3
or
or
sub
xor
int3
and
ss
mov
in
mov
movsl
outsl
sbb
jl
out
vmread
and
mov
dec
pop
sbb
js
mov
add
pusha
jp
lock
inc
push
enter
pop
movsb
fnstenv
pop
jbe
out
dec
fbld
shlb
iret
and
test
push
shlb
pop
mov
mov
mov
push
ja,pt
pop
adc
out
cmp
dec
pop
dec
fiaddl
ret
jo
imul
add
xabort
out
insb
xor
cmp
adc
divb
push
cmp
push
push
popa
cld
sbb
ret
mov
call
add
aad
or
fs
repz
pop
pop
js
or
repnz
mov
cmp
cltd
sub
rcrb
xor
and
dec
mov
mov
leave
jp
mov
je
jp
or
sub
daa
push
fildll
loopne
adc
pop
rorb
add
cmc
movsb
sub
push
loopne
leave
nop
in
inc
push
icebp
xchg
push
scas
mov
pop
sti
cmp
cs
and
enter
aam
ja
xchg
jne
jo
in
mov
adc
push
scas
sahf
push
push
movsb
mov
cmp
adc
int3
mov
xor
int
pop
pop
loopne
jp
add
aas
xor
enter
scas
and
cmp
lret
push
dec
lock
sbb
ss
cmp
or
mov
popf
sub
cld
and
inc
sub
and
adc
or
and
sbb
inc
pop
xchg
or
adc
loope
and
fwait
mov
scas
xchg
push
dec
and
scas
imul
dec
add
jb
cmp
add
out
push
dec
push
clc
out
cli
testb
addr16
in
add
in
sbb
mov
orb
and
dec
rcll
and
dec
dec
jae
mov
into
in
out
test
out
push
fisubs
jge
push
xchg
ret
test
sahf
or
pop
or
lcall
adc
pop
sbb
das
in
data16
les
jo
sbb
jnp
js
lds
jns
loopne
subl
mov
add
test
xor
xor
pop
int3
into
push
mov
out
xor
cmpsl
dec
sbb
inc
iret
into
out
in
ds
sub
push
xor
notl
jo
mov
cs
cld
lock
pop
mov
sub
das
js
inc
cmp
mov
fwait
xchg
inc
push
mov
xchg
and
jmp
movsl
rorl
add
inc
push
movsl
mov
mov
fisttpl
out
xor
in
popf
xchg
test
bound
ja
js
pop
push
ss
jns
and
xor
lock
sub
sbb
std
les
bound
bound
dec
or
je
inc
mov
sub
mov
fildll
sbb
jle
es
jle
jbe
addr16
jmp
xchg
loop
movsb
sub
push
push
mov
fldt
jbe
lods
xchg
mov
in
das
sub
and
jge
mov
aas
pusha
jmp
sbb
jne
xor
add
loope
lock
leave
cmpsb
push
and
mov
pop
je
test
inc
jno
jle
push
xchg
scas
cwtl
hlt
and
repnz
ds
cmp
jb
les
xchg
mov
add
popf
pop
mov
inc
push
sbb
lock
das
aad
aam
or
gs
pop
dec
cs
mov
sbb
pop
push
lret
adcl
jns
js
movsb
imul
fmulp
fildl
jle
ljmp
outsl
fdivrp
or
das
frstor
or
inc
dec
jbe
fildl
jle
fisubrs
imul
rolb
loopne
clc
mov
xchg
testl
arpl
mov
ret
xchg
icebp
popa
loopne
sub
lea
shlb
add
mov
ds
xchg
cs
fbld
je
sbb
and
xchg
int
jmp
jge
lahf
jle
loopne
shll
enter
xchg
outsb
js
stos
and
sbb
jle
aad
popf
xor
mov
scas
jne
lock
dec
imul
mov
pop
sbb
push
adc
cmp
fs
and
dec
scas
arpl
les
loopne
arpl
es
push
jmp
ficompl
rolb
lods
mov
cmp
push
dec
int3
sub
sbb
cmc
jg
or
mov
rcl
ds
adc
loop
mov
addb
dec
cmc
add
scas
adc
pop
roll
xchg
daa
add
mov
push
cmp
iret
or
pop
xchg
push
cmp
cli
lahf
repnz
loope
out
ret
mov
xlat
push
cmp
pop
repz
das
iret
jle
popa
lods
aaa
imulb
sti
daa
jmp
dec
nop
in
mov
lods
jnp
pop
data16
pop
mov
push
add
dec
cmp
sub
xchg
lods
and
inc
call
or
push
call
mov
jnp
iret
cmp
jbe
or
mov
cmc
outsb
dec
ljmp
dec
jecxz
fcom
add
aaa
pop
es
bound
scas
fnsave
mov
sarb
loopne
rcl
pop
pusha
shlb
ja
mov
pushf
and
push
insb
inc
pusha
int3
jb
sub
lea
ja
push
fimuls
or
out
fadds
ror
repz
loope
and
adc
pusha
add
push
bound
insb
lods
dec
jecxz
jno
jp
or
pop
fs
ret
push
cmpsb
fisubrl
lock
insl
fadds
sbb
mov
jne
jp
jno
dec
mov
sub
mov
mov
add
mov
outsl
sub
bswap
push
sub
push
mov
push
das
je
dec
pusha
jmp
ja
or
pop
aam
jo
clc
mov
enter
and
dec
js
es
jge
xchg
cmpsb
aas
iret
popf
sub
jge
pop
push
cltd
aaa
xor
fwait
xor
mov
xlat
loopne
add
or
movsl
mov
push
jno
sub
inc
dec
dec
sbb
adc
or
pusha
fcomps
ficompl
mov
pop
jge
stos
bound
rol
sti
or
aaa
shlb
jmp
adc
cmp
jne
aaa
cs
jo
add
std
cmp
push
loopne
es
fwait
inc
ror
add
aaa
shl
outsl
mov
sub
mov
jmp
movsl
sub
pop
inc
mov
cmpl
xor
ret
mov
iret
jge
lahf
mov
jle
pop
adc
leave
sub
jne
aad
aas
mov
jmp
xchg
fcmovne
sub
pop
leave
out
clc
iret
movsl
push
dec
jne
gs
clc
adc
out
fsubrs
call
sbb
cmp
int
inc
add
in
in
cltd
or
cvttps2pi
lods
xchg
icebp
jg
pop
and
sub
neg
pop
inc
adc
call
cmp
aaa
add
or
add
cmp
js
cmp
sub
sub
push
in
scas
sub
add
loopne
out
sub
or
rcrl
cli
mov
cli
xor
cmp
scas
push
push
and
shrb
outsl
fs
daa
mov
add
arpl
sbb
xlat
or
add
in
insb
dec
pop
andb
push
insl
jecxz
daa
out
stos
xchg
aad
daa
mov
mov
pop
add
and
push
or
mov
xor
pop
mov
pop
mov
bound
add
jno
mov
or
mov
mov
insb
jne
clc
cs
movsb
loopne
pop
scas
xor
or
xchg
maskmovq
mull
and
pop
mov
addb
call
insl
mov
inc
sbb
and
mov
pop
mov
andl
jnp
stos
adc
lods
push
add
pop
data16
stos
test
aaa
adc
pop
add
add
or
scas
insl
insl
popl
out
test
insb
daa
inc
mov
dec
inc
jnp
xor
shlb
mov
mov
xchg
dec
mov
dec
and
mov
cmpsl
in
fmuls
cmpsl
cmova
push
pop
jne
stc
popa
mov
cltd
inc
sbb
frstor
mov
mov
pop
lahf
fidivl
add
xchg
fwait
cs
mov
mov
popf
jl
sub
ja
inc
mov
sbbl
leave
jmp
and
lea
pusha
loope
mov
mov
psllw
fwait
xchg
adc
fs
mov
ret
mull
xchg
lods
xor
add
out
mov
sub
lods
lret
xchg
inc
iret
or
jmp
and
inc
outsl
fstl
pop
sub
in
iret
rorb
cmp
out
sub
stos
inc
outsb
sbb
push
imul
add
dec
cmc
scas
or
sbb
adc
ret
jp
push
daa
loope
cwtl
outsl
lahf
icebp
mov
cmp
test
mov
cmc
cmp
push
int3
dec
add
stos
sbbl
add
testl
out
sti
adc
push
push
imulb
push
mov
inc
sub
mov
mov
loopne
lock
sbb
out
rolb
pop
adc
mov
add
cmp
lea
fadd
shr
aad
pop
mov
scas
fs
in
js
add
xchg
jl
js
and
pushf
xor
inc
push
pop
xor
or
adc
fildll
mov
out
loop
cwtl
ret
adc
int3
pop
or
rorb
inc
sub
inc
fsubp
xchg
fdivs
cmp
mov
ret
adc
push
movsb
out
mov
scas
add
out
lds
sbbb
dec
movsb
mov
jbe
sbb
sbb
scas
pop
push
adc
cvtpi2ps
movsl
xor
push
in
jp
push
xor
adc
mov
lahf
inc
or
pop
fcomi
outsb
push
faddl
cmp
sbb
add
and
mov
xchg
jb
rcrb
dec
clc
divl
mov
iret
push
and
adc
adc
icebp
push
loope
cmp
stos
xchg
gs
icebp
icebp
in
aam
sub
outsb
das
hlt
cmpsl
xchg
fistpl
ja
lahf
insb
push
aam
or
jbe
pop
test
and
xor
shrl
mov
mov
adc
cwtl
insl
rdmsr
lods
mov
lods
pop
push
xchg
sbb
mov
mov
or
inc
and
stos
jg
dec
je
sbb
add
test
mov
lahf
inc
inc
lods
and
cmpsl
add
mov
adc
jno
jbe
repnz
lods
pop
sub
pop
xchg
fcmovnbe
pop
js,pn
mov
and
pop
idivb
or
and
or
test
sbb
popa
or
cmp
push
and
popa
popa
mov
jbe
dec
and
adc
ja
mov
push
in
push
or
lcall
push
sbbb
lock
insl
xor
pop
scas
mov
jns
outsb
mov
scas
sbb
int
lods
test
jecxz
in
imul
fstpt
push
add
add
add
xchg
mov
xchg
inc
xchg
lea
popa
or
out
jle
clc
and
xchg
or
add
xor
dec
mov
mov
int
cs
jno
or
jo
out
mov
stos
fwait
shll
push
sub
and
dec
in
loope
andb
add
nop
les
and
cmp
adc
lock
jecxz
or
jge
sti
inc
sbb
jp
subb
and
inc
push
xchg
or
inc
subb
and
or
add
mov
into
out
sahf
dec
call
cld
inc
fsubs
movsb
mov
test
mov
or
loope
mov
es
decl
sti
inc
lds
and
call
loop
dec
loope
pop
iret
mov
arpl
outsb
sub
je
test
clc
test
and
sbb
inc
test
xor
scas
rcll
push
sbb
test
pop
add
out
int
mov
or
inc
jne
cmovl
inc
test
xchg
mov
xor
jae
test
gs
xchg
test
inc
movsl
sar
cmp
enter
inc
imul
add
iret
fs
xlat
ret
inc
sbb
xchg
sbb
mov
addl
das
ret
dec
loop
sahf
xchg
and
xchg
mov
shl
clc
negl
dec
mov
outsb
iret
ja
shrb
imul
rcrl
lock
sbb
push
or
out
cmp
cmc
cmpsb
lods
xchg
cmp
sub
jp
add
enter
mov
es
mov
outsb
pop
sarb
inc
fsts
loop
jae
add
mov
add
pop
jecxz
pop
mov
aam
cmpsl
push
scas
aas
pxor
jp
cmpsl
sbb
lods
add
xchg
adc
or
aas
mov
cli
cmpsb
dec
roll
ds
adc
je
mov
sbb
xor
dec
je
jnp
pushf
call
add
jo
sahf
mov
dec
icebp
jb
sub
mov
add
cltd
pop
lcall
sbbb
dec
or
test
add
subl
push
mov
mov
lahf
inc
rcl
ret
jae
mov
xchg
cli
test
pop
lods
rol
and
inc
scas
mov
test
lock
add
xor
sbb
lods
into
push
sahf
jge
mov
ret
push
inc
mov
dec
and
fisttpll
rdtsc
mov
sub
stc
dec
out
sbbb
scas
sub
pop
adcb
lcall
xlat
mov
xor
and
mov
or
and
neg
lahf
adc
iret
adc
test
ja
lahf
test
arpl
out
inc
push
inc
push
dec
jbe
adc
mov
cwtl
rorl
mov
clc
xchg
pop
lret
imul
sti
add
popa
adc
sbb
jle
jecxz
aad
out
and
bnd
and
lds
sub
or
out
enter
xor
out
push
push
jle
or
mov
xlat
test
es
ror
sarb
pusha
lret
and
shrb
xor
sahf
jp
fists
and
cmp
call
add
rcrb
jno
inc
and
inc
pusha
mov
mov
inc
add
rcl
xchg
and
jp
jbe
push
add
adc
sarl
xlat
xchg
add
mov
and
sub
dec
les
sub
rcr
rorb
das
jnp
and
dec
sbb
out
push
pushf
shrl
mov
lahf
ss
xchg
sbb
movsl
pop
xor
adc
pop
das
scas
mov
frstor
pushf
hlt
add
xchg
out
push
popa
stos
adc
insb
scas
int
add
scas
mov
cs
dec
imul
pop
xor
sbb
adc
xor
clc
dec
sub
jbe
mov
movsl
cmp
rolb
add
in
mov
mov
cmp
out
pusha
mov
adc
mov
or
popf
test
cmpsb
syscall
push
mov
jle
daa
or
aas
loopne
and
mov
cmp
add
mov
popa
dec
push
xor
test
lret
lret
mov
add
cmpsb
fldl
inc
fistpll
in
lods
lds
fcoml
dec
add
stos
das
adcb
inc
sub
sub
pavgw
imul
fisttps
out
fldt
aaa
jo
in
adc
xchg
mov
mov
sbb
xor
sub
jo
adc
jmp
fwait
je
and
adc
shlb
mov
inc
mov
push
in
lcall
xor
popf
pop
insb
insb
mov
cmc
sbb
jle
adc
pop
insl
faddl
lahf
jg
mov
in
cmp
mov
leave
pop
scas
xor
sarb
and
jecxz
repnz
testb
mov
rcl
xlat
push
sbb
or
bound
fistps
loope
or
test
ja
shr
pop
jmp
in
aaa
adc
xor
mov
inc
stos
xchg
or
mov
add
loope
iret
inc
rorl
sub
adcl
mov
nop
jo
sbb
shrb
or
add
icebp
or
jb
inc
sbb
and
mov
es
jns
add
adc
call
xor
adc
sbb
pop
mov
fwait
add
push
jmp
inc
rcrb
jbe
jno
mov
fwait
movl
mov
data16
jno
mov
fldt
xor
mov
mov
cwtl
adc
adc
cmp
and
mov
pop
lcall
xchg
mov
pop
js
add
ljmp
jno
jbe
sti
fsubrl
roll
mov
lods
add
and
or
push
push
inc
sbb
mov
aam
cs
std
popa
and
xor
cmpsl
mov
call
cmp
cmc
lcall
daa
mov
pop
sti
jo
cmc
fldt
jecxz
mov
out
pop
fadds
das
pusha
mov
or
xor
imul
test
lcall
or
add
mov
cmpb
jg
dec
adc
ror
jecxz
add
xchg
bound
add
xor
add
daa
cli
mov
aaa
mov
std
test
add
jl
and
pop
inc
mov
psubd
loope
cmp
xchg
or
jge
rcrl
add
lahf
push
popl
loopne
mov
pop
mov
add
push
ret
dec
in
loopne
mov
sub
push
add
dec
push
gs
lret
xchg
call
hlt
fiaddl
inc
test
mov
jo
pop
mov
ret
mov
mov
or
jg
add
clc
repz
push
leave
cmp
nop
cmp
arpl
icebp
enter
popa
push
pushf
sub
aad
dec
mov
fadds
jnp
pop
jo
out
xchg
scas
or
sbb
mov
pushf
std
jne
rolb
imul
enter
mov
xor
jnp
add
daa
scas
add
pop
stos
sub
call
repz
jp
repz
mov
sbb
sub
mov
mov
aaa
adc
testl
clc
lock
mov
ja
push
jno
std
lahf
add
xchg
rorb
or
stos
data16
fstpl
aad
fnstsw
xor
or
adc
mov
rcr
xchg
push
push
movsb
mov
rolb
addr16
mov
fsubl
sahf
scas
sbb
xchg
setp
mov
xchg
or
xor
mov
repz
or
das
scas
loopne
dec
and
arpl
add
push
pushf
enter
mov
mov
dec
adc
and
sub
rolb
push
add
mov
das
ja
push
sub
addl
add
popf
and
inc
fadds
imul
cmp
fisttpl
push
pop
xchg
inc
rcrb
icebp
shlb
push
addl
mov
pushf
nop
sbb
xorb
inc
pop
bound
fidivs
js
xor
scas
test
jl
ljmp
dec
xlat
pop
pop
call
dec
clc
loop
js
and
nop
or
cld
cs
jl
cmc
or
pop
xchg
jno
iret
dec
repz
mov
jbe
mov
xchg
lods
add
iret
inc
xchg
ja
movsb
mov
jmp
pop
ds
add
xchg
and
jmp
fs
test
and
ret
jns
and
sarb
inc
add
inc
pop
pop
pop
dec
dec
push
add
movsl
jnp
and
adc
ds
idivl
inc
xor
icebp
lock
inc
sbb
sbb
xor
add
inc
jo
push
dec
popa
add
mov
sahf
ret
into
xorl
outsl
mov
movzbl
jnp
xchg
stos
mov
and
stos
scas
add
or
negb
rorb
sahf
mov
fcompl
je
orl
inc
and
test
fxch
dec
scas
call
jmp
jg
cmpsb
push
lahf
mov
push
xchg
and
mov
jb
push
or
pop
xchg
push
xchg
loope
or
and
push
jns
dec
out
adc
push
cltd
pop
push
rorb
sub
xchg
gs
ss
or
ret
push
scas
ret
outsb
xor
xor
and
dec
jmp
sti
sbb
rolb
add
daa
test
dec
pop
jmp
cmpl
sti
sub
jl
out
sub
aaa
mov
test
out
xchg
adc
cmpsl
std
xchg
mov
pop
mov
fildl
sub
ja
rsm
sbb
lock
test
inc
test
popa
xchg
push
fnstsw
or
cmp
aas
aaa
xorb
les
in
pop
inc
mov
fdivr
stos
pop
lods
stos
inc
sub
enter
lds
adc
add
test
inc
shll
adc
out
or
push
gs
adc
adc
test
insl
dec
mov
rcr
jbe
bound
add
cmp
ss
push
imul
adc
aam
call
imul
xor
jbe
test
adc
sub
push
out
add
jecxz
mov
shll
sbb
xchg
cmc
cwtl
mov
push
scas
pop
xchg
pop
mov
or
mov
outsl
push
sub
js
loopne
movsl
cmc
push
ja
push
addb
mov
lods
popa
mov
pop
les
js
mov
push
pop
jmp
push
jae
xor
aas
mov
clc
jp
mov
inc
jl
add
mov
adc
test
mov
jo
xor
addl
add
mov
iret
subl
js
mov
jns
lock
test
aaa
cltd
aaa
add
adc
jns
icebp
xchg
sub
push
sub
xchg
cwtl
cmp
add
xor
shll
lods
ljmp
or
jle
arpl
add
push
icebp
hlt
jne
stos
pop
sbb
sti
xlat
push
aaa
data16
cmp
fidivrs
ja
add
out
mov
scas
xor
fiadds
aam
lret
fsub
fs
add
jno
ds
iret
add
and
sub
inc
push
in
int3
in
mov
xor
clc
mov
mov
loop
sbb
int
aaa
add
or
jecxz
adc
mov
jp
cmp
cmp
daa
sub
jbe
or
in
fisubrl
cli
lcall
mov
push
inc
sub
pop
int
push
test
aaa
push
push
sub
mov
ljmp
loope
xchg
jl
lcall
xlat
sub
push
nop
sbb
pop
pop
sbb
test
push
loope
out
dec
mov
loope
ss
aad
addr16
push
aad
add
das
xlat
loope
int3
add
add
ret
or
js
movl
pop
add
lret
arpl
inc
add
mov
xchg
outsb
push
add
pushf
add
jbe
int3
pop
sbb
mov
xchg
fwait
inc
inc
insb
pop
jno
add
fistl
or
popf
push
inc
or
dec
add
fcmovne
jle
sbb
inc
sub
ljmp
push
ffreep
je
imul
xor
add
popa
imul
add
push
jp
adc
hlt
cwtl
dec
out
sub
shlb
sbb
inc
push
xor
push
sbb
gs
dec
add
xchg
push
cmpsl
sbb
xchg
and
ja
xchg
xchg
ror
jmp
sbb
pushl
rcrl
push
mov
sub
fcompl
and
movsb
or
adc
push
mov
jl
out
in
loope
cmc
pusha
ja
push
rorb
mov
xchg
sub
insl
icebp
push
push
push
ds
xor
aas
loop
adc
daa
xor
dec
sbb
loopne
xor
call
mov
shll
mov
repz
lods
nop
call
mov
mov
inc
cmp
jge
xor
ret
int
mov
leave
xchg
shlb
mov
nop
add
cmpsl
add
ljmp
cmp
jg
xor
nop
add
or
mov
add
das
fnstcw
pop
adc
lds
jne
inc
ret
jecxz
cmp
daa
mov
and
sub
js
stos
lock
fldcw
and
lods
icebp
rcr
hlt
les
push
push
jmp
inc
inc
sub
movsl
xor
sbb
xchg
clc
es
add
cli
mul
or
rorl
dec
jbe
sahf
loop
ja
in
xchg
pop
mov
lock
dec
cwtl
cmp
add
jl
daa
sub
add
mov
dec
sub
inc
push
xchg
mov
cmpsl
xchg
in
sbb
imul
pusha
loope
pop
insl
pop
jno
or
sbb
and
cmp
xchg
jo
jo
jo
push
outsb
js
inc
imul
push
push
dec
and
outsl
rdpmc
jl
outsb
push
push
add
fnop
mov
shr
add
mov
lock
shll
and
int3
add
js
dec
sub
jle
ret
jnp
enter
loopne
je,pt
movsb
jno
insl
mov
and
sbbl
lcall
fadds
mov
test
pop
call
and
orb
loopne
ret
adc
mov
jb
daa
or
or
int
fistpll
mov
push
push
nop
ret
inc
in
mov
sbb
test
adc
dec
inc
xchg
dec
das
sbb
push
shl
jmp
ror
leave
call
lds
cmp
dec
push
cmp
jg
xchg
lods
push
mov
sub
je
je
test
call
add
enter
loop
jbe
jl
fiaddl
jbe
cmpsl
scas
add
add
sub
mov
pushf
inc
jecxz
shll
in
jo
loope
adcl
xor
push
cmp
in
bound
or
mov
dec
cmp
aas
popa
push
dec
ret
popf
fstpt
sbb
sub
xchg
inc
push
jno
mov
push
popa
ds
inc
mov
ja
sbb
or
adc
sbb
cld
mov
jp
mov
rol
xchg
sbb
cmp
test
dec
lret
scas
mov
cmp
add
lock
sahf
ja
push
cmp
inc
xadd
aaa
mov
pop
xor
adcb
sub
repnz
push
outsl
sbb
dec
mov
js
rcl
pop
fiadds
inc
pop
dec
mov
adc
and
fs
iret
adc
mov
add
pop
popa
shll
scas
test
dec
mov
in
sbb
or
stc
nop
or
pop
aas
mov
lock
ljmp
adc
lods
call
mov
sti
iret
add
dec
or
jbe
adc
cmp
das
ret
lods
pusha
jle
iret
insb
mov
push
lods
je
imul
test
and
sbb
jbe
and
mov
cmp
pop
add
add
ljmp
pop
in
push
sbbl
das
and
lea
rcrb
andb
mov
lock
scas
jg
push
loopne
das
xor
fistpl
push
xor
nop
mov
jo
sub
out
xor
into
push
mov
cmp
sbb
mov
fadds
int3
popf
jl
pop
push
mov
orl
pop
shlb
jno
mov
test
inc
push
xchg
pop
fwait
lods
rcrb
mov
sbbl
lods
jb
not
lret
es
lret
comiss
adc
sub
dec
xor
jg
xchg
adc
js
dec
push
shrl
sbb
je
das
xor
inc
mov
cld
stos
sbb
mov
in
rorl
pop
push
bound
or
pop
jge
aas
mov
cmp
push
cmp
mov
sbb
ret
dec
jmp
pop
mov
sbb
cmp
push
dec
cmp
pop
xchg
dec
push
pop
add
add
pushf
xor
mov
adc
mov
aad
adc
push
adc
cmp
push
int
pop
call
adc
nop
sar
adc
mov
pop
imul
mov
daa
sbb
aas
xor
xchg
jge
add
add
sub
pop
movsb
adc
mov
std
mov
xlat
sub
push
mov
xlat
icebp
loope
das
adc
xchg
ret
or
movsb
es
or
or
out
jb
sbbb
adcl
popa
fldcw
add
arpl
adc
or
mov
lods
je
enter
adc
jo
loope
lea
outsl
mov
ljmp
out
aam
sbb
push
outsl
pop
push
clc
xor
sbb
int
fmuls
fsubp
jp
pop
mull
or
movl
pop
mov
pop
loopne
xchg
mov
sete
add
cli
xor
mov
add
test
or
mov
xchg
dec
js
shlb
leave
out
cmp
movsl
dec
pop
lret
aam
sbb
push
add
add
andl
add
int
push
xchg
rorl
push
mov
mov
clc
andl
pop
sbb
jg
sub
xor
lds
lcall
pusha
icebp
gs
xchg
push
add
push
dec
orb
addr16
andl
int
mov
xor
mov
dec
pop
jne
xor
sub
cmpsl
jns
xor
add
xchg
mov
mov
lods
imul
sub
lcall
and
daa
addr16
xchg
mov
and
enter
das
lods
inc
roll
or
fwait
or
mov
dec
aad
inc
cld
lock
or
add
jge
jb
xor
jo
adc
pop
fdivl
cs
cmp
push
or
fbld
or
jno,pn
push
pop
jmp
mov
mov
es
fistps
dec
inc
out
jecxz
fstpl
inc
xchg
adcl
add
sbb
adc
cmp
cwtl
cmc
loopne
and
lahf
scas
stos
enter
cmp
lock
aam
pop
push
hlt
iret
inc
shrb
lret
push
orb
test
inc
negb
shrl
mov
push
sub
push
cld
pop
inc
add
aas
pop
fmuls
jb
lea
jno
pop
pop
ljmp
and
das
xor
out
push
pop
mov
add
cmp
pushf
rcrl
sub
in
ja
mov
iret
mov
lahf
icebp
sbb
cld
jo
fidivrs
jp
popf
and
mov
and
jo
xchg
fistpl
scas
lds
mov
and
lret
add
or
movsb
pop
push
dec
ss
loop
mov
pop
lods
ret
or
inc
mov
fadds
adc
andl
mov
xchg
or
add
addl
push
or
sub
sbb
and
push
addps
out
loop
push
sub
xchg
mov
test
pop
sbb
orb
adc
sbb
popa
cmpl
andl
in
movsl
rcll
and
dec
das
iret
jbe
sub
mov
push
lods
adcl
add
js
xor
lock
inc
add
notb
in
fcmovnu
cld
bound
lahf
pop
push
loope
mov
lret
loope
sbb
push
imul
and
iret
out
cmc
in
int3
xchg
xor
mov
mov
push
inc
push
sbb
into
pop
cmp
lods
pop
lahf
dec
or
testl
xor
pop
cwtl
lods
add
jo
daa
sub
sarb
sbb
test
sbb
inc
pop
rol
inc
inc
callw
jno
jp
mov
rcll
xchg
inc
pushf
inc
xchg
js
and
push
lods
dec
push
imul
stos
ds
sub
mov
pop
ss
pop
test
jne
in
lret
push
mov
nop
cmp
add
push
adc
int
pop
movsl
stos
insb
inc
sbb
dec
aad
into
fisubs
sub
and
scas
xchg
jno
insb
out
xor
repnz
imul
lcall
data16
insb
push
xchg
fstp
cmp
pop
inc
push
jb
xchg
dec
test
xlat
cs
shlb
and
and
das
sub
out
lods
jo
mov
xor
loopne
mov
in
lods
enter
mov
add
mov
push
pusha
or
out
test
lods
jne
push
pop
add
sub
shrb
fldcw
icebp
push
int3
stos
fnstenv
es
sbb
pop
std
push
xor
out
sarb
out
inc
fnsave
movsl
movsl
hlt
loop
call
pushf
ficoms
fstpl
xchg
insl
sahf
xchg
out
push
jmp
fstps
js
shlb
jae
mov
insb
pop
outsl
dec
bound
je
enter
ret
fldt
pop
outsl
sub
or
xchg
pop
push
and
movsb
outsb
pushf
cmpl
push
cmp
movsb
hlt
cs
into
jns
stc
inc
and
out
fimull
movsl
mov
push
popa
fsubs
adc
int3
or
lcall
ds
mov
cmp
cwtl
pop
push
fxch
cmp
push
xchg
push
imul
dec
jne
outsl
push
data16
out
icebp
add
inc
out
dec
xor
pop
inc
mov
mov
js
sbb
lods
mov
adc
outsb
outsl
movsb
outsl
sbb
pop
jbe
shrl
in
xor
repz
data16
mov
outsl
das
push
adc
sub
or
popa
lods
mov
xchg
mov
leave
imul
mov
mov
pop
xchg
sbb
andb
mov
ret
inc
pop
add
leave
xor
sahf
movsb
daa
adc
ljmp
fisubrl
rcr
daa
adcb
popa
pop
int3
push
adc
add
sub
xor
or
mov
mov
and
dec
js
stos
out
ds
lcall
jo
sbb
les
xchg
arpl
jne
pop
pusha
jns
add
and
xor
std
loopne
sub
push
lds
std
dec
pop
mov
jbe
add
test
pop
sub
jge
fincstp
sti
jo
push
xor
sbb
push
push
and
push
and
add
shlb
jecxz
loope
insb
ljmp
rolb
popa
or
push
add
lcall
add
push
or
mov
sbb
add
xchg
fiaddl
add
xor
xor
dec
add
and
dec
sub
add
jo
fwait
cmp
pop
cmp
add
adc
and
xchg
scas
jnp
js
mov
add
outsl
jl
mov
sub
mov
xlat
push
push
sub
loopne
jnp
cs
adc
fsubr
xor
or
out
cmp
push
fadds
mov
fildl
rcrl
or
push
out
clc
stos
push
shll
fistpl
push
adc
lods
orb
add
fildl
inc
addb
fstp
fsubs
push
fs
inc
push
add
mov
jecxz
decb
push
jo
pop
mov
xor
pop
orb
add
cld
subl
or
in
and
mov
mov
sbb
aaa
sbb
pop
aad
add
daa
push
nop
cmpsl
add
jno
es
mov
sub
push
lret
push
mov
rolb
dec
sbb
push
push
cmp
add
lea
add
imul
outsb
add
std
jmp
add
popf
or
add
popf
enter
into
push
insb
mov
loopne
pop
or
out
scas
push
sub
mov
add
jp
adc
aad
add
lahf
mov
loopne
inc
adc
mov
fsubs
rolb
roll
push
movsb
rorl
clts
mov
mov
push
outsb
add
add
pop
adc
mov
and
push
subb
xchg
imul
push
mov
frstor
xchg
adc
and
outsb
inc
sarb
push
push
push
xor
fs
lock
pop
add
push
pusha
out
jp
out
jne
mov
aas
enter
pop
aad
push
or
inc
orb
add
xchg
scas
xor
ficompl
mov
sbb
add
rclb
movsl
sub
out
sub
lods
ss
sub
inc
aaa
loop
outsl
fimull
xor
dec
or
sti
imul
pop
popa
gs
push
loop
add
dec
sub
xchg
ds
jle
sub
mov
pushf
fcmovnbe
cs
pop
rcl
sbb
cmp
mov
int3
lods
adc
pop
ljmp
jb
or
inc
xchg
push
mov
xorb
stc
es
aam
jp
orb
loope
insb
dec
addb
jmp
lahf
jl
int3
clc
es
add
adc
pushf
and
lret
je
add
push
stc
and
nop
dec
dec
popa
data16
shlb
jns
insl
mov
aaa
jge
push
pop
inc
ret
or
add
add
inc
mov
add
mov
xor
push
jo
inc
add
call
or
push
cmpsl
popf
sarb
adc
sbb
stos
imul
fsub
andl
lods
push
mov
fsubrs
sahf
push
sbb
xor
mov
xchg
jp
sbb
adc
pop
je
cmpsl
pop
or
leave
adc
cs
lahf
mov
ds
push
sub
inc
mov
mov
verw
sbb
and
fnsave
sbb
push
cmp
test
fcmovne
fisubl
jge
add
loope,pn
es
and
imul
lods
sub
jge
push
adc
clc
push
sbb
add
sahf
inc
inc
cmpsb
push
add
jp
and
inc
jne
adcb
or
sbb
sti
data16
dec
daa
mov
adc
sub
mov
sti
push
sbb
imul
nop
mov
pop
mov
jbe
or
xchg
outsl
test
out
dec
or
push
inc
adc
dec
fsts
adc
xlat
in
je
add
fwait
jp
ret
mov
rcrl
pop
or
repnz
cmpsb
sbb
fsubrl
inc
stc
test
jg
mov
shrb
scas
js
scas
xchg
adc
push
das
std
and
cmp
test
mov
and
push
das
push
sbb
push
fsubrl
fs
and
pop
jns
jbe
fsubrl
jle
pop
ss
inc
mov
scas
mov
loope
or
and
in
sarb
enterw
adc
js
int
das
mov
sbb
pop
outsb
call
mov
xor
repz
and
mov
ja
fistl
push
xchg
push
jbe
shlb
cmpsl
cmp
mov
sub
imul
in
adc
cmpsl
add
mov
pusha
mov
cmp
sub
xor
mov
mov
mov
outsl
or
add
roll
cmp
cmp
push
adc
add
dec
sarb
dec
cmp
inc
pop
xchg
sub
das
rcll
jmp
mov
and
inc
enter
push
mov
repnz
fsubr
inc
mov
roll
out
fs
cmc
mov
mov
stc
xor
push
nop
mov
rorl
cld
xchg
push
mov
aas
fstp
sbb
mov
insb
push
pop
adc
in
js
loopne
add
mov
mov
or
mov
add
jl
lock
cmp
fistps
add
or
add
rolb
js
out
loopne
xchg
add
and
enter
push
jo
in
lea
leave
or
or
inc
enter
clc
rolb
add
ret
xchg
or
push
je
or
cmp
outsl
leave
dec
fwait
or
push
mov
inc
dec
out
cmpsb
adc
or
hlt
scas
xor
leave
lret
cmp
fisubrl
ret
ror
mov
pop
std
sbbb
mov
add
add
sub
mov
or
mov
xchg
imul
mov
and
rcrb
bswap
cmp
xchg
aam
cmc
cmp
mov
shrl
pop
push
pop
int3
js
mov
and
loope
cmp
lock
sub
cmp
and
outsb
cmp
loopne
dec
xor
in
or
jmp
add
jecxz
mov
pop
je
jb
inc
out
sub
shll
push
out
cld
subb
in
fisttpl
pop
xchg
add
inc
call
jns
sub
jp
xor
sbb
xor
push
clc
cmp
jb
mov
xor
pop
or
je
xlat
cld
and
and
jle
lret
call
and
xor
rolb
std
xor
cmp
push
test
and
aaa
popf
add
pop
push
sbb
lods
cs
push
add
in
jmp
push
adc
sbb
jmp
cld
inc
jmp
dec
push
dec
lea
mov
sbb
xor
in
dec
mov
fstpt
add
fldt
push
push
dec
mov
jl
inc
ffree
mov
adc
and
inc
add
inc
imul
push
adc
dec
popl
pusha
add
pop
mov
pusha
pusha
leave
mov
pop
xor
push
and
frstor
push
inc
dec
test
popf
pop
xchg
jns
add
cmpsl
shrb
clc
pop
mov
stos
addr16
cmp
xchg
pop
fiadds
push
stc
jp
pop
lods
and
add
mov
daa
jbe
xchg
sbb
movsb
loopne
jle
mov
int
sub
js
inc
rcl
adc
jne
int3
pop
jo
lahf
mov
sbb
xor
int3
xor
fscale
dec
sbb
or
jo
sub
sub
rcrl
adc
pop
addb
or
xor
es
push
push
cs
in
in
push
or
push
daa
inc
xor
stos
aaa
clc
jae
xchg
adc
bound
mov
lods
xchg
inc
and
and
or
push
add
jb
or
push
lret
loopne
movsl
add
ret
enter
xchg
lods
cmp
das
aam
sub
sub
push
sub
fs
int
add
cmp
inc
pop
or
mov
jno
imul
test
adc
push
jno
jb
insb
inc
insl
das
into
fidivrs
add
push
jbe
adc
pop
leave
int3
cld
mov
cs
xchg
jmp
loop
sbb
test
aaa
and
stos
dec
sbb
outsl
movsl
adc
push
jmp
std
dec
pop
pushf
jb
orl
pop
cs
adc
orl
add
fwait
mov
stos
test
movsb
fnstcw
lcall
xchg
movsb
adc
sub
sub
lds
or
cmp
xor
xchg
or
mov
push
and
rolb
xchg
sub
and
dec
push
leave
arpl
pushf
cmp
out
dec
adcb
mov
sub
int3
icebp
adc
push
pop
test
add
sbb
cmp
pusha
das
xchg
loope
arpl
or
popa
xor
jge
ja
add
add
push
pop
jle
xor
xlat
and
int
or
cmpsl
in
cmp
lahf
fisubrs
mov
push
das
and
bound
stos
and
jo
mov
test
loopne
adc
ret
ja
sub
int3
adc
cmp
mov
daa
push
js
icebp
rcrb
scas
push
popl
xlat
adc
aam
push
or
fimuls
std
into
jnp
mov
aad
insl
xchg
jns
addl
xchg
mov
test
xchg
sarb
ret
sbb
adc
inc
jnp
jge
jbe
cmpsl
and
sti
cld
leave
in
adc
inc
cmp
xlat
xchg
sub
adc
cmp
sub
sbb
push
aam
repz
dec
push
sbb
inc
push
subb
fists
lods
sub
imulb
lods
pop
inc
addr16
jl
lods
xchg
inc
add
bound
mov
in
add
outsb
data16
int3
ret
mov
sti
mov
sbb
pusha
outsb
stos
add
or
pushf
das
inc
xchg
push
mov
adc
dec
rcll
loop
xchg
ss
fstl
or
pushf
inc
aad
ss
xor
je
jne
jecxz
roll
fstp
sbb
ljmp
add
iret
xorl
pop
pop
loop
cmp
add
ret
push
pop
aaa
jno
push
cmpsb
pop
jb
sbb
adc
out
pop
mov
pop
or
cmp
and
loope
ret
int3
pop
push
sbb
clts
jbe
lahf
cmc
cmpsl
mov
push
mov
hlt
sub
inc
mov
outsb
test
repz
or
scas
aaa
or
sub
pop
sahf
xorl
adc
addr16
mov
subb
lods
insl
push
js
sub
rcll
jecxz
mov
mov
and
ja
and
movdqu
mov
imul
test
hlt
pop
sbb
adc
adc
sub
or
adc
xchg
mov
scas
imul
fists
add
es
orl
push
add
add
inc
xor
jo
stc
mov
and
es
or
test
and
movsl
push
andl
ret
pusha
lds
xor
arpl
or
sub
sahf
int3
and
xor
push
push
outsb
jmp
das
inc
je
adc
push
add
xchg
lcall
fucom
jmp
sbb
popa
out
sub
test
outsb
push
sbb
sbbl
cwtl
pop
xor
inc
sbb
and
and
cmc
test
mov
jmp
call
sub
push
or
or
cmp
and
push
and
fldl
cltd
sbb
dec
pop
fs
stos
mov
sbb
les
lea
adc
sub
pop
or
leave
ffree
sbb
sub
mov
arpl
jecxz
push
add
rorb
leave
aaa
jge
mov
mov
fs
xchg
push
jno
or
mov
in
push
add
or
xor
movhps
or
mov
shlb
call
rdtsc
imul
mov
cmp
aas
adc
test
movsl
icebp
adc
outsl
pop
movsl
mov
dec
aaa
aad
int
std
dec
iret
dec
in
xchg
mov
cmp
push
or
lock
ja
sub
xchg
sbb
xchg
je
push
lods
xor
faddl
nop
or
adc
xor
popa
and
mov
cmp
push
or
pop
xchg
mov
mov
loop
mov
mov
and
xchg
fmuls
and
movl
sub
pop
xchg
jnp
lret
fwait
ja
cmp
jo
cmpsl
ljmp
jecxz
mov
mov
js
sub
cltd
push
lcall
inc
leave
jns
pop
pop
sub
cli
pop
popa
ds
insl
dec
outsl
mull
adc
jne
popf
xor
pop
cmpsl
sbb
out
sub
out
inc
mov
add
popa
iret
mov
pushf
sub
sbbb
jge
sub
mov
popf
push
cmp
orb
div
pop
cmpsl
mov
inc
push
scas
dec
fsubr
and
jmp
jp
lock
insl
or
inc
and
pusha
push
xlat
add
cwtl
cmp
adc
ljmp
adc
movsb
inc
add
lock
neg
or
sub
jge
add
pushf
or
jecxz
js
push
xchg
pop
test
js
lods
xchg
rclb
shlb
inc
adc
insb
call
sbb
ret
jnp
out
rorl
add
push
insb
lea
cmp
and
add
lock
add
fnstsw
shrb
test
xor
xor
add
and
and
adc
push
test
rcrb
movsl
mov
aam
and
push
adc
inc
add
mov
aaa
pop
push
out
xchg
imulb
cmp
fs
mov
lods
fdivrl
add
mov
or
sub
ret
pushf
daa
jne
jg
ret
xchg
cmp
push
or
js
rcrl
mov
mov
push
inc
aaa
outsb
dec
dec
sbb
add
sbb
insl
pop
arpl
test
and
push
push
je
pusha
lods
push
cmp
stos
sub
mov
fwait
push
lahf
sub
inc
push
lods
adc
fnstenv
jnp
cwtl
imul
mov
out
lea
pop
test
rcrb
push
scas
and
popa
pusha
ret
push
repz
popf
je
or
sub
inc
popa
lret
popf
sub
movsb
add
push
dec
andl
adc
jbe,pt
addl
push
sbb
enter
fs
lock
loope
mov
cli
mov
push
pop
pusha
add
scas
xor
push
lds
xor
xchg
nop
inc
xchg
inc
pop
xchg
mov
lahf
inc
push
ret
repnz
push
aas
push
jp
push
fisubs
les
inc
add
rol
inc
sub
scas
and
add
subb
test
pop
outsl
or
xor
lea
xlat
dec
int3
out
push
ficoml
pop
pop
cmc
lods
sub
push
push
inc
mov
pop
jb
mov
lock
mov
roll
adcb
shl
xchg
add
and
xor
jmp
sarl
dec
cmp
int3
pop
pop
add
sub
jge
cmp
dec
pushf
iret
loope
cmp
sbb
push
fwait
cld
xchg
add
rol
loop
imul
pop
sub
pop
repz
xor
shll
stc
add
into
loope
loopne
arpl
pop
sbb
sbb
pop
inc
mov
xlat
arpl
cmp
or
outsl
test
das
iret
sub
dec
sub
nop
insl
and
jne
pavgw
mov
popa
mov
mov
inc
mov
aas
aas
sbb
adc
std
pop
das
hlt
orb
in
pop
inc
data16
popa
cmp
iret
movsb
sbb
movsb
push
mov
test
mov
cmp
push
insl
repnz
ret
outsl
loope
jns
insl
movsl
es
fstpt
and
ja
dec
and
insb
push
scas
lds
jae
mov
movl
jge
pusha
je
push
sub
rcll
out
cmp
aaa
push
icebp
arpl
cmp
sbb
sbb
testl
push
inc
xor
test
sarl
inc
adc
add
cmp
mov
scas
jo
jbe
sbb
cli
sub
push
add
imul
mov
sbb
sbb
xor
sbb
and
mov
pusha
dec
mov
test
adc
in
push
push
sub
sbb
mov
jp
jle
popa
xor
and
gs
movb
jmp
push
dec
xchg
movsl
inc
aaa
divl
pop
stos
mov
lods
and
pop
cmp
pop
sbb
imulb
mov
aad
test
mov
rorb
fldcw
js
push
sbb
sbb
push
repnz
push
jne
sub
cwtl
jae
jnp
push
fwait
jb
push
adc
iret
pop
mov
adc
jge
cmp
sbb
xchg
out
and
dec
pop
sbb
or
pushf
jnp
push
test
xor
and
push
test
add
cmovle
adc
test
adc
adcb
sbb
in
adc
xchg
movsl
test
xchg
gs
loope
subl
icebp
xchg
mov
or
inc
inc
inc
inc
cmp
sbb
sahf
movsb
out
push
imul
push
aas
lds
mov
sub
fwait
pop
pop
add
jge
gs
test
sahf
std
addr16
cmp
enter
or
int
add
xchg
mov
adc
mov
ret
adc
je
jbe
mov
pop
leave
in
pusha
out
push
dec
pop
popf
add
sub
dec
sub
mov
addr16
inc
and
inc
stc
sub
add
cmpsl
sbb
inc
ljmp
xchg
lret
stos
imul
and
popf
push
lock
add
xchg
cs
addr16
pop
out
push
test
sti
mov
popa
or
je
sbb
or
shll
dec
add
ss
test
add
add
jo
dec
sbb
push
loope
es
mov
ja
jmp
sbb
dec
and
testl
xchg
mov
and
pop
clc
data16
imul
aam
add
cmp
ja
sub
dec
pop
fisttps
xlat
cwtl
mov
xchg
out
imul
fwait
addb
cmpsl
cmp
mov
inc
or
cld
push
shlb
shrb
rol
xchg
mov
jae
jmp
sbb
sbb
fstps
gs
adc
xor
inc
out
push
xor
ljmp
mov
dec
jno
sbb
cmp
sbb
push
movsl
ret
add
sub
sub
enter
imul
cmp
test
xchg
and
add
dec
out
movsb
scas
add
andl
test
xchg
sbb
mov
jo
sub
inc
and
cs
sub
sbb
sbb
mov
add
inc
loope
sub
mov
mov
xchg
js
ret
imul
andl
insb
popf
ss
test
addr16
int
stc
fidivrs
xor
sub
roll
inc
sahf
mov
out
xchg
das
lods
xor
pop
frstor
pop
subb
cmp
jle
pop
pusha
xlat
es
js
out
dec
and
sub
ja
cli
lahf
jae
xor
jp
loope
sub
popa
or
mov
js
jmp
sbb
push
inc
pop
cmp
sbb
ja
mov
mov
shll
sbb
lods
daa
incl
shlb
insb
mov
mov
test
jb
sbb
es
arpl
outsl
adc
add
imul
xor
bound
xor
push
pop
daa
dec
adc
fs
sbb
sub
shrl
xchg
mov
mov
lods
pushl
loope,pt
or
movsb
add
xor
xchg
push
inc
and
xor
insl
mov
cld
and
ficoml
inc
pop
clc
or
in
scas
gs
int3
aam
sbb
and
dec
sbb
imul
das
popl
and
pop
pop
add
sub
ss
mov
rcr
mov
out
add
push
subb
or
pushf
adc
addl
insb
pusha
stos
out
dec
sbb
push
push
fldenv
mov
pop
adc
and
mov
loope,pn
fstpl
es
and
jle
and
cmp
mov
movsb
push
daa
push
inc
push
shlb
popa
call
or
mov
data16
inc
mov
lock
ret
and
inc
xor
lds
pop
outsb
push
data16
pop
pop
inc
lea
pop
fstl
push
ficompl
adc
adc
sub
or
and
sbb
sub
fstl
xlat
ret
pop
mov
xor
inc
push
call
cmpsb
hlt
outsl
ja
xchg
loop
xor
adc
jnp
frstor
stos
push
cmpsb
scas
lock
das
dec
sbb
loope
in
dec
fsubs
pusha
push
pop
add
rolb
push
outsb
add
add
mov
jns,pt
fstps
pop
aam
mov
mov
sbb
test
scas
es
xor
push
negl
femms
or
aad
mov
sbb
sbb
cwtl
loopne
mov
sbb
add
ficoml
out
push
sub
xor
xchg
sarb
adcb
mov
outsl
imul
out
push
xor
iret
insl
and
out
adcb
or
push
inc
dec
or
adc
push
je
lods
jl
push
jmp
mov
xor
cltd
fldl
add
in
insb
add
add
cmp
or
aad
xchg
xor
int
sbb
cmp
mov
jae,pn
leave
push
shll
scas
fcomps
aaa
js
and
enter
add
or
sbb
sub
push
ret
cmp
add
rol
mov
jle
jo
fs
lcall
test
repz
xchg
stos
push
and
dec
xchg
in
movsb
sti
not
mov
ja
cmp
cmp
out
lret
and
fscale
add
call
add
loop
lods
push
daa
out
xchg
sub
loop
lock
push
aam
cmc
aad
and
jb
subb
mov
sti
push
notl
xor
subb
test
cmp
adc
nop
push
and
inc
fwait
adc
adc
adc
into
movsl
mov
add
add
dec
cld
dec
mov
dec
pop
in
dec
mov
fisttps
mov
ss
xchg
mov
call
cmp
in
adc
adc
mov
pushf
lods
sub
mov
jne
and
adc
adc
jnp
stos
ficoml
sub
push
pop
sbb
clc
add
xor
ss
int3
cltd
xchg
movsb
daa
xor
insb
sub
lea
mov
sbb
inc
push
stos
adcb
enter
testb
jp
sahf
sbb
or
mov
adc
and
xchg
and
das
cwtl
inc
ror
call
push
mov
and
fwait
daa
xor
sub
push
outsl
mov
rorb
xchg
cmp
inc
int3
xchg
addb
cmp
ret
in
push
xchg
in
xor
mov
pop
adc
test
sub
or
inc
fsubs
xchg
pop
lods
xor
xorl
adc
inc
sbb
push
test
jb
shll
xor
or
shl
adc
or
popa
or
fists
dec
add
add
lock
jecxz
outsb
pop
add
repz
icebp
add
inc
and
dec
or
fisttpll
pop
xor
sti
push
push
pop
sub
ja
popa
int3
add
andl
adc
dec
rolb
ja
sub
pop
les
cmp
ret
push
data16
inc
call
loopne
cmovge
inc
fldenv
lahf
es
xor
inc
in
add
lcall
jg
fs
ret
xchg
orl
mov
and
xlat
cmp
aaa
imul
adc
outsl
jecxz
lods
lea
adc
scas
adc
repz
mov
inc
jle
add
inc
mov
and
inc
dec
mov
arpl
int
sbb
dec
mov
loope
pop
leave
gs
xchg
mov
cmp
sarb
jp
sub
jo
aaa
pop
xchg
cmp
loopne
pop
and
in
jecxz
cmp
out
push
inc
loopne
hlt
or
mov
sub
push
xchg
push
ret
inc
imul
cmp
and
mov
xchg
test
or
mov
es
inc
jge
xor
pop
jne
lea
cmp
add
add
add
xorl
sub
jo
jp
adc
push
and
movsl
xor
out
stos
or
and
pop
xor
push
fnstcw
push
jne
inc
out
lods
repz
xchg
or
test
add
addl
flds
lock
test
xchg
fildll
or
cli
out
ret
pop
dec
lea
mov
sbb
dec
xor
sti
sbb
xor
inc
stos
mov
jo
jo
and
mov
sbb
mov
fadds
popa
aas
lcall
xchg
bound
mov
ret
jo
fs
add
fwait
mov
dec
dec
xor
xor
add
mov
mov
iret
sarb
lahf
nop
fidivl
or
sar
fsubs
int3
add
js
test
rclb
jbe
sub
lret
add
aam
pop
pop
clc
ret
xlat
mov
add
out
jne
jnp
push
ss
es
add
xchg
and
mov
mov
cmpsl
jno
arpl
cmp
fnstcw
shrb
aad
dec
and
mov
addb
stos
xchg
jno
add
cwtl
mov
mov
and
mov
mov
fimull
dec
mov
dec
dec
inc
cmp
jnp
sbb
out
add
or
jnp
sub
mov
xchg
pop
lcall
mov
pop
xchg
divl
rep
push
or
addl
jno
sub
gs
sub
dec
insb
fcmovnb
xor
add
dec
push
in
orl
ret
ret
add
out
fnstcw
mov
mov
ja
fs
ror
sbb
push
adc
ret
push
and
add
add
pop
mov
daa
jae
and
mov
mov
adc
call
sub
xchg
out
sbb
cmp
xor
sbb
lock
fs
sbb
es
loopne
int3
in
clc
or
xor
mov
in
cmpl
inc
add
mov
sub
push
xor
add
add
fnstsw
add
les
mov
test
lret
mov
sub
test
jno
test
pushf
call
sub
inc
cmp
jb
add
pop
jl
imul
inc
and
jle
mov
mov
mov
add
dec
and
in
inc
dec
xor
ss
pop
sub
insb
xor
cmpb
test
mov
adc
lock
stos
cmp
adc
ds
out
loope
cmp
das
add
sbb
push
clc
call
iret
and
jl
mov
icebp
jmp
and
or
popf
mov
shrl
push
or
mov
add
dec
sbb
fmul
dec
push
insb
addr16
adc
xchg
jno
adc
jne
jb
sbb
jne
mov
adc
mul
pop
sub
test
comiss
dec
mov
jo
adc
imul
push
repz
je
and
iret
inc
and
leave
push
mov
adc
stc
pop
pop
dec
loope
or
test
rcrl
xor
sbb
int
icebp
sbb
pop
in
ret
or
xchg
add
subb
divl
mov
add
or
fiadds
in
fwait
add
ja
rcrb
inc
or
mov
ljmp
es
sub
mov
scas
push
notb
clc
movsb
push
arpl
mov
push
fnstenv
jo
pop
in
mov
sbb
cmpsl
je
or
add
lock
rol
daa
xchg
aad
cmp
mov
pusha
xor
lret
ret
jo
xor
jmp
push
ret
sub
iret
pop
xor
cmpsb
pop
cmp
xchg
lret
or
mov
scas
mov
adcb
push
js
add
addr16
scas
or
inc
rcll
mov
pavgw
adc
ret
push
notb
jno
sub
pop
mov
icebp
inc
repnz
dec
sbb
iretw
es
int3
jo
adc
cli
jo
ficoml
stos
adc
test
movb
stos
add
mov
fstpl
mov
add
or
ljmp
or
movsb
test
sub
sbbl
jl
rol
xor
shl
pusha
aad
xor
enter
add
and
std
cmpl
inc
push
fwait
dec
add
xchg
insb
xor
mov
xor
cmpsb
pop
mov
push
or
and
outsb
xchg
push
fs
mov
jp
jo
and
rol
jl
sub
xchg
or
push
jns
xchg
and
and
pop
push
inc
push
cmpsl
loope
lret
sbb
and
decl
scas
jns
pop
aas
test
cmp
push
push
and
iret
and
aas
xchg
outsb
lea
pusha
and
popa
jge
dec
insl
push
sti
push
fidivrl
out
cmp
pop
sbb
xor
iret
dec
inc
ljmp
rcrl
sub
push
mov
jo
jno
out
orl
cmp
jmp
sbb
test
fcmovne
push
iret
push
in
sbb
in
dec
adc
fadd
fcoml
dec
or
pop
dec
inc
jnp
daa
pop
jmp
shrl
ds
lret
xor
push
pop
dec
add
aaa
mov
pushf
enter
pop
adc
push
das
cmp
mov
data16
and
movsl
fcmovbe
lahf
arpl
push
push
push
cmc
pop
outsb
nop
jno
loopne
adcl
xor
pop
xchg
popa
mov
mov
loopne
or
cmp
xchg
push
xor
jbe
push
mov
ret
pop
lods
rorl
jmp
sbb
xlat
inc
adc
mov
add
loop
jo
push
adc
inc
jmp
lret
cmp
xor
lods
aad
pop
lret
and
loopne
sub
movl
fstps
inc
sbb
adc
dec
lret
mov
sbb
adc
ja
stos
mov
fsts
fnstsw
pop
cltd
in
insl
sbb
add
mov
cmpsb
mov
xor
cwtl
lock
data16
jne
pusha
add
ret
add
dec
out
lock
xchg
and
sar
sub
sbb
and
mov
out
lret
jne
cmpsl
push
adc
lcall
fdiv
dec
popf
sub
or
js
test
sbb
in
adc
subb
sbb
or
mov
push
stos
movsb
xchg
cmp
ljmp
jo
ja
xor
int3
int3
mov
pop
xchg
mov
xor
gs
test
add
cmp
inc
xorl
and
sbb
cmc
sbb
sarb
inc
xor
ret
sbb
test
iret
pop
mov
and
adc
mov
fmulp
xchg
sbb
nopl
push
or
pop
inc
test
sub
xor
pop
mov
insb
and
daa
mov
add
fisubrl
iret
push
and
jmp
lea
cwtl
mov
stos
rcll
int3
repz
movsb
je
jge
push
push
je
inc
fisubs
inc
xchg
enter
aam
pop
dec
lahf
sbb
and
cmp
lock
arpl
push
addb
pushf
sub
xorb
mov
adc
daa
jno
aaa
add
jo
jle
inc
sub
dec
adc
mov
in
jne
and
repz
or
iret
dec
sub
sub
loopne
leave
cmp
cmp
sbb
daa
pop
mov
pop
mov
sub
lods
sub
xor
and
cmp
or
inc
aas
xchg
cmp
add
cmp
and
js
outsb
inc
out
iret
loopne
js
pop
shr
gs
ss
jno
xsavec
test
outsb
jno
cmpl
sbb
sbb
movl
jno
cmp
push
rclb
sbb
mov
aad
mov
stos
pop
fs
punpckldq
icebp
test
stc
push
mov
lods
mov
xchg
js
sbb
push
icebp
subb
pop
pop
mov
push
leave
mov
mov
add
and
mov
push
aad
pop
pop
adc
cmc
sbb
addr16
mov
xchg
or
pop
je
addr16
or
xor
cmp
pop
add
xor
jb
adc
sub
and
inc
fwait
jmp
pusha
ss
mov
push
jge
push
ss
add
jbe
mov
xchg
sbb
ss
and
xchg
add
andl
mov
out
xchg
test
movsl
in
outsl
add
rcrl
je
popa
data16
ljmp
mov
psrad
mov
iret
jle
xor
sbb
add
sub
sbb
daa
loope
test
das
jo,pn
push
sub
jle
jle
mov
and
gs
fsts
aaa
inc
mov
pusha
js
jecxz
pop
or
dec
mov
and
mov
mov
push
je
pop
mov
test
les
cmp
outsb
daa
addl
int
arpl
rolb
add
mov
jle
push
adc
sarb
xchg
sub
push
mov
push
cmpsb
mov
xor
adc
pop
and
mov
rolb
in
addb
int3
jno
adc
or
fdivrl
or
inc
inc
add
cmp
int
sub
aaa
lods
inc
jae
rcrl
sahf
xlat
and
adc
mov
xchg
out
push
adc
push
mov
pop
in
and
dec
xchg
cmovo
mov
mov
sbb
sub
cmpl
adc
mov
mov
std
movntq
xorb
fidivrl
addb
push
outsl
fld
add
adcl
outsb
xor
adc
push
jge
inc
dec
and
iret
jbe
clc
adc
test
mov
pop
push
or
test
and
or
bswap
adc
pop
cli
jns
mov
sbb
movsl
pushf
add
xor
rorl
sub
pop
shl
sbb
dec
imul
or
or
xor
fcoms
push
push
int
nop
orl
dec
das
fisubrl
clc
scas
mov
mov
and
iret
loop
clc
xor
jno
mov
push
cmp
int
loopne
movsl
sub
and
mov
mov
ret
scas
mov
scas
ja
lret
and
mov
test
sbb
push
data16
sti
push
jp
fs
adc
test
add
and
cmp
ss
dec
inc
pop
dec
mov
mov
lret
addb
cs
dec
or
xorl
mov
sub
xchg
sbb
jb
mov
adc
data16
jecxz
iret
orb
insb
and
je
adc
lcall
stc
fstps
push
xor
mov
add
mov
jo
xor
rclb
dec
add
das
and
stc
push
cmp
verr
xchg
popa
popf
scas
mov
cmp
scas
sub
jo
arpl
push
or
jnp
pop
inc
aas
cli
xor
add
test
add
and
adc
mov
adc
add
test
aas
pop
daa
add
mov
and
pop
push
call
and
pop
shlb
in
test
dec
int3
xchg
dec
fimull
add
es
inc
movsl
lods
cmpsl
or
add
in
mull
aad
loope
adc
dec
or
inc
add
hlt
mov
cs
test
and
ret
fwait
aam
je
das
in
pushf
outsl
pop
mov
inc
mov
sub
fdivr
mov
enter
aam
jp
mov
imul
loope
xchg
mov
imul
mov
mov
pop
popw
mov
sbb
add
and
out
mov
mov
and
ret
subb
mov
test
imul
insb
pop
movsl
sbb
inc
stc
pop
shll
outsl
popf
div
rcrl
mov
mov
inc
fxch
pop
pop
push
aam
int
pop
xlat
adc
cltd
outsb
mov
cmpsl
inc
jno
add
jo
inc
fdivrs
add
andl
in
jp
les
sbb
push
ret
and
mov
out
inc
cmp
sbb
xchg
add
adc
mov
jle
andb
xor
mov
jo
cmp
xor
xor
scas
xchg
or
lods
mov
loopne
mov
mov
data16
xchg
cmpsb
mov
dec
cmpsl
into
jnp
xchg
imul
push
pop
push
cmp
cmp
int
cmpsb
lcall
ja
lea
jno
out
add
stos
pop
ret
pop
icebp
subl
fimull
addr16
jo
insb
rorl
cpuid
mov
push
mov
das
ja
sbb
sub
xchg
or
mov
xor
and
adc
in
inc
sbb
sub
adcb
push
sbb
inc
jmp
push
push
cmp
enter
dec
push
dec
stc
mov
pop
fnstcw
ficompl
les
add
mov
mov
push
cmp
ret
dec
push
dec
lods
jmp
in
jmp
lods
fisttps
jb
insb
je
mov
fstl
pop
jno
and
in
addl
jmp
adc
mov
sahf
repnz
cs
sarb
jno
into
popf
rcrl
gs
sbb
andb
sub
fadds
xchg
les
and
inc
sarl
stos
aad
shrd
mov
aam
push
add
adc
push
in
mov
and
push
iret
inc
pop
xchg
inc
push
sub
add
aas
inc
push
aaa
jo
iret
lock
int3
iret
and
add
dec
mov
adc
push
shl
xchg
cmp
scas
xchg
add
int3
jmp
rclb
fs
mov
cmovb
inc
shl
adc
adc
sbb
and
add
pop
sub
nop
iret
scas
icebp
push
out
xchg
loopne
mov
xor
dec
xor
shll
push
xor
pop
jecxz
mov
xor
xchg
adc
and
lods
adc
lods
ror
fdivrl
cmc
lcall
movsb
jae
push
mov
subl
inc
mov
bound
rcll
fld
adc
xchg
and
push
iret
and
fidivrl
inc
inc
pop
pop
xor
ud2
pop
js
lods
fildll
out
mov
lahf
jo
or
imul
mov
push
pushf
push
push
test
enter
inc
insl
pop
or
mov
sbbb
insl
popa
test
pop
daa
jl
sub
inc
mov
sbb
ss
mov
push
pop
stos
mov
arpl
in
out
pextrw
mov
inc
xchg
mov
stos
push
inc
xchg
jb
lahf
pop
sbb
pop
movsl
lahf
fcomps
in
ficoml
test
adc
enter
ja
add
lret
jl
xchg
add
and
movsl
stos
jle
pop
jne
mov
ja
lcall
dec
ret
popf
rcl
jecxz
add
and
dec
rorb
lret
int3
fmull
aas
sarb
js
dec
lods
dec
add
cwtl
and
jnp
dec
ljmp
mov
je
sub
test
xchg
sbb
cwtl
rcrb
push
shl
or
je
jo
orl
sub
pop
in
xchg
fadd
call
jp
sub
and
ret
sub
sbb
add
arpl
lahf
add
pop
les
push
bound
sbb
pop
subl
ffreep
dec
js
or
fadds
xorb
dec
loopne
lds
aaa
jns
jnp
sub
mov
push
imull
mov
mov
add
mov
dec
lea
pop
mov
inc
add
adcb
stos
mov
gs
ret
sbb
mov
push
push
call
decl
and
jp
icebp
das
inc
out
mov
imul
icebp
iret
or
and
sbb
movsb
adc
sub
loope
dec
mov
and
mov
mov
repz
dec
xchg
lahf
and
pop
xchg
cmpsl
inc
mov
aas
xchg
sub
cmova
test
jb
xor
and
cs
xchg
push
ret
and
and
cli
and
mov
mov
cwtl
mov
sub
jecxz
arpl
scas
dec
push
jle
xchg
jp
fwait
sub
lret
or
mov
pop
pop
add
push
xchg
pop
je
jb
xlat
iret
js
or
iret
jl
xchg
js
repnz
jecxz
inc
sub
or
arpl
pop
adc
pop
or
cltd
mov
jp
aaa
jb
or
int
and
jno
sub
addr16
rorb
push
addr16
inc
sbb
bound
push
push
call
or
mov
mov
adc
add
test
ret
cmpsb
repz
add
test
fsts
inc
insb
xor
dec
flds
mov
or
inc
rolb
or
clc
xchg
loope
adc
test
and
mov
sub
fcomps
adc
or
mov
orb
push
sbb
jle
fsubrs
cmp
mov
popa
xor
adc
add
movsb
add
test
sbb
dec
and
daa
and
sub
sahf
xchg
fisttpl
adc
pop
pop
adc
adc
je
add
sbbl
sub
dec
insl
scas
lds
in
sub
sahf
inc
icebp
add
ja
sub
repnz
adc
pop
add
loopne
test
ja
pusha
cmc
add
mov
add
movsb
or
or
inc
mov
or
mov
cs
and
mov
and
stos
mov
lcall
clc
jge
xchg
rclb
popf
mov
roll
nop
xor
xchg
jecxz
pop
rcrb
push
loopne
loope
rcl
dec
test
popa
xchg
imul
or
xor
xchg
mov
orl
inc
adc
out
clc
or
pop
imul
add
scas
xor
cltd
les
cltd
jle
daa
mov
dec
rcrl
dec
add
leave
and
sbb
add
cmp
stos
sub
and
test
test
and
cmpsl
insl
sbb
add
and
outsb
and
js
mov
sbb
push
movsl
lret
aaa
push
adc
aas
or
mov
cmp
inc
and
js
cmp
push
dec
popf
ret
push
and
push
sub
test
loopne
mov
adc
ss
sbb
ja
cld
subl
dec
jo
sub
fcmove
sbb
movsl
test
push
ja
ja
fstpt
push
pop
gs
ljmp
adc
pop
dec
or
mov
or
movsb
pop
aas
jmp
mov
ret
add
loope
mov
inc
dec
or
lods
push
mov
popa
in
in
pop
xchg
jle
les
mov
sbb
je
dec
jo
xor
outsb
push
push
pop
inc
mov
push
cmp
cmp
out
push
inc
dec
inc
loop
lea
fwait
rolb
int
jno
lods
sub
mov
jnp
and
dec
dec
lods
dec
jo
in
sbb
xor
icebp
insl
jmp
pop
mov
or
jp
push
cs
je
inc
or
sbb
add
insl
test
jo
dec
sbb
mov
inc
inc
fldcw
cmovg
cs
mov
inc
ret
or
pop
js
inc
mov
cmp
push
or
sub
test
adc
sbb
mov
lahf
mov
adc
inc
andb
dec
and
xchg
push
rclb
fs
mov
daa
rorb
pop
xchg
jmp
daa
or
sub
push
and
sub
xor
rolb
mov
sbb
add
pop
push
out
inc
into
ret
sub
or
filds
ds
sub
adc
push
push
sub
mov
mov
add
mov
cmpsb
arpl
jne
pop
add
xor
cmpsl
je
in
into
sub
popf
rorb
sarb
xor
mov
cwtl
es
cmp
sbb
mov
enter
xchg
mov
idiv
mov
or
mov
add
adc
arpl
push
icebp
lock
push
fsubrp
push
inc
or
repz
das
inc
xlat
movsl
sbb
lret
and
xlat
rol
das
insb
int3
pop
pop
sbbl
stos
test
cmp
mov
ds
jb
test
pop
or
jno
dec
call
mov
pop
flds
rorb
in
add
les
stos
and
adc
adc
cmp
or
and
negl
xlat
rorb
call
fistps
jmp
daa
cmp
inc
mov
inc
cmpsl
rcr
xchg
push
mov
popa
leave
ret
aaa
push
mov
mov
repz
fsub
fbstp
xor
daa
cmp
cs
cmp
dec
lds
movsb
adc
rolb
andb
inc
js
mov
sbb
aaa
fists
push
mov
lods
rorb
pop
fwait
mov
loop
jno
xchg
cwtl
jl
mov
inc
test
cmc
pop
aaa
js
js
ja
lahf
mov
pop
enter
in
lea
pop
sub
andb
sahf
and
out
xchg
pop
in
xchg
sub
sbb
sbb
das
insl
gs
icebp
push
and
xor
push
mov
aad
inc
pop
xchg
movsb
adc
and
icebp
pop
js
cmp
mov
in
or
dec
outsb
cmp
lcall
ret
mov
mov
sub
mov
xchg
lods
orb
jmp
inc
inc
mov
cmp
mov
push
jmp
push
add
xlat
mov
lods
loop
leave
outsl
cmpsl
inc
addr16
idivl
mull
xchg
jne
or
push
es
stos
ret
push
jns
push
test
pop
xchg
pop
scas
psllw
or
xchg
and
mov
inc
out
add
enter
lea
fistl
push
dec
add
xor
inc
lods
sub
push
push
jp
daa
sub
mov
movsl
popf
push
popa
sbb
mov
mov
sbb
enter
push
mov
mov
ret
fisttpll
fwait
pop
add
test
popf
cmp
mov
add
repnz
lds
rcr
add
inc
roll
or
aaa
test
aaa
xor
roll
std
jmp
loop
fmuls
jecxz
imul
clc
rcl
mov
push
mov
ds
pusha
fisubrs
clc
push
pusha
cltd
sub
adc
mov
push
js
sub
lahf
push
mov
inc
cmp
scas
cmp
mov
pusha
jno
int3
push
addb
xor
leave
ds
stos
shl
outsb
mov
stos
test
xchg
sbb
sbb
pushf
or
xlat
jmp
imul
aam
mov
jp
bound
dec
jp
jno
xor
pop
sbb
orb
data16
sbb
je
cltd
in
repz
rcrb
popa
cmp
jns
push
dec
js
xchg
pop
jg
jo
sbb
cwtl
into
dec
jne
out
movl
mov
adc
jge
mov
mov
mov
xchg
and
fdivrs
xor
rol
dec
pop
ss
mov
push
rorb
add
adc
fstps
je
lret
push
jmp
cmpsb
inc
subb
add
test
sti
es
movl
repz
ljmp
pop
cmpsb
mov
mov
mov
int3
mov
xchg
jmp
and
cmpsb
movb
push
lods
adc
adc
add
sbb
not
mov
std
int3
call
lahf
iret
test
and
clc
adc
stos
mov
test
fcmovbe
ret
add
sti
rorb
push
int3
hlt
shll
inc
test
stos
mov
shl
mov
dec
add
es
xchg
cmp
sbb
jno
fcmovnbe
add
mov
ret
xchg
xchg
dec
push
inc
cs
inc
push
and
jl
movsl
mov
incb
jp
loop
pop
je
aaa
adc
inc
jge
int
sbb
ret
and
loope
push
xchg
je
icebp
add
pop
dec
mov
in
xchg
out
add
push
xchg
xor
mov
dec
mov
dec
mov
push
enter
loop
cmp
sbb
push
add
lock
loopne
jno
cmp
pop
pop
in
test
add
sub
cmpsb
inc
mov
pop
dec
into
cwtl
push
lret
rcrb
xchg
mov
nop
xor
loopne
inc
cmp
jmp
mov
iret
dec
mov
lahf
mov
inc
xlat
mov
mov
daa
movsl
and
mov
xchg
rclb
dec
jne
add
pop
adc
inc
xchg
lahf
stos
mov
jae
call
stos
daa
rcrl
adc
ja
inc
in
push
stos
movsb
cmp
test
xor
cltd
mov
ficoml
mov
mov
fcoml
pop
xor
jl
subb
test
fmuls
fsubp
test
sahf
jp
stc
sub
add
or
ret
dec
and
or
inc
or
ds
daa
aas
movsl
movsl
or
mov
ds
mov
sub
inc
and
imul
lods
cmp
pusha
lods
or
shl
or
bound
sub
test
or
pop
test
mov
xchg
outsb
sar
cmpsb
imul
fs
pushf
or
popa
nop
cmp
pop
loopne
adc
je
mov
mov
loopne
push
nop
rcrb
add
mov
or
xor
xchg
fmull
dec
or
dec
xor
jle
icebp
or
imul
mov
stc
stos
add
cs
nop
add
xorb
mov
fs
int
or
scas
das
sbb
cltd
cmpsl
xor
ja
adc
mov
push
inc
push
inc
aas
push
iret
add
sbb
std
pop
pop
sub
mov
mov
stc
sti
push
xor
mov
adcl
xor
and
sbb
sarl
and
mov
push
push
sub
sbb
mov
inc
jge
mov
push
enter
je
and
mov
xchg
scas
lret
jne
mov
jmp
cmpb
aas
cmc
and
cmpsb
fdivl
scas
movsb
pop
sub
sbb
shll
add
or
inc
loop
adc
cs
popa
push
push
and
or
push
push
es
push
push
shr
rorb
cmc
dec
dec
dec
rcr
stc
daa
in
push
shll
mov
lcall
and
push
inc
mov
pop
movsl
cmp
and
rolb
js
popf
cmp
cli
xchg
inc
imul
pop
ljmp
mov
mov
or
add
mov
adc
jae
xchg
add
out
dec
xor
mov
lahf
xchg
mov
js
push
and
mov
pop
xor
push
pop
or
shll
stos
stos
dec
ss
shr
inc
sbb
or
jo,pn
mov
nop
std
sbb
sbb
xchg
jp
xor
inc
add
xchg
movsb
xchg
sti
pop
aad
sbb
mov
xorl
dec
dec
and
mov
mov
push
inc
cld
lods
and
fwait
int3
xor
cmpsl
add
or
stos
inc
js
lds
xor
pop
enter
cmp
shlb
or
loope
push
insb
xor
je
rorb
lds
test
cmp
cmpsl
cmp
pop
xchg
dec
xchg
add
dec
lds
subb
jle
mov
push
inc
cmovno
clc
roll
cmp
mov
in
into
pusha
pusha
test
mov
mov
aas
jge
shrb
inc
insb
ret
cmp
cmp
xchg
mov
inc
sub
add
jne
mov
mov
push
loope
add
adc
xlat
lret
xor
dec
pop
push
adc
pop
jbe
loopne
pop
sub
arpl
cmp
cltd
xor
into
shl
outsl
add
and
cmc
cmp
daa
xchg
push
sbb
cmp
inc
inc
das
mov
dec
jno
lds
pop
adc
mov
push
dec
xchg
adc
pushf
addr16
mov
push
pop
sub
jmp
into
in
pop
stos
pop
jb
jne
cmpsl
popf
loopne
dec
mov
mov
aam
cld
pusha
in
aad
jg
adc
push
lret
popf
and
ds
mov
or
adc
insl
pop
test
add
mov
and
sub
xor
clc
imul
pop
daa
rcrl
lods
inc
data16
jns
add
sti
pop
les
sub
cmpsb
stos
push
inc
shl
stos
out
adc
push
push
add
orl
add
mov
mov
xor
sbb
inc
ret
ret
adc
call
mov
xor
or
ss
and
lret
xchg
adc
xorb
data16
mov
add
or
cmp
aam
jnp
loope
dec
clc
lahf
rcl
aas
sub
arpl
call
cwtl
cwtl
sbb
or
and
push
add
imul
mov
lcall
mov
push
jmp
sub
icebp
add
addr16
or
jne
and
inc
push
lahf
sbb
mov
xchg
loopne
adcb
mov
sbb
jmp
inc
xor
lock
adc
dec
test
xor
jmp
pop
scas
les
add
sub
negb
dec
cmpsl
cltd
test
pop
inc
in
adc
jecxz
cwtl
inc
mov
mov
aam
mov
cmp
ficoml
xchg
jb
jne
shll
and
roll
xchg
lds
xchg
adc
lds
pop
pop
cmp
cmpsl
dec
mov
pop
lret
add
xchg
out
in
inc
xchg
sbb
fbld
popa
and
adc
adc
mov
aas
jp
sub
xor
xchg
mov
aas
xor
cli
add
cmp
mov
add
jae
test
jp
add
rorb
repz
dec
psubusw
push
inc
cmp
lods
sbb
shlb
push
iret
lret
xchg
jmp
enter
xor
pop
stc
cmp
mov
xlat
xor
movsb
mov
push
imul
push
negl
dec
rcll
xchg
iret
jno
test
sbb
add
or
mov
dec
xchg
pop
push
adc
fsubrl
pop
or
xchg
scas
outsl
lret
push
iret
inc
adc
sbb
bound
adc
lds
lahf
or
arpl
daa
xchg
clc
add
cmp
xor
mov
testl
and
mov
push
out
out
sbb
out
icebp
loopne
mov
sbb
cs
xor
dec
or
pusha
jecxz
xor
or
das
push
shrl
sbb
movsb
adc
arpl
mov
xchg
jmp
hlt
mov
std
and
in
popa
aaa
sub
loopne
shrb
insb
js
inc
clc
adc
push
out
ficompl
cs
mov
bound
cmpsb
sbb
outsb
or
lret
jg
sbb
cli
or
sub
and
push
mov
movsb
cmp
and
and
fadds
or
pop
xchg
lds
mov
incl
psubusw
movsb
leave
aaa
and
adc
mov
push
inc
dec
pop
stos
mov
or
push
out
ret
and
or
sub
adc
and
sub
insb
pushf
push
jp
and
push
das
add
mov
xor
pop
hlt
push
sub
orb
les
cmc
pop
and
push
js
cmp
cmpl
scas
sbbl
fimull
inc
das
filds
wbinvd
and
mov
nop
inc
roll
cmp
add
insb
sti
bound
jne
add
into
cmc
jae
xchg
ret
or
loopne
jmp
lcall
punpcklwd
pop
mov
sbb
mov
xlat
jno
mov
dec
pusha
aaa
push
test
inc
stos
mov
or
out
call
and
popl
pop
fwait
ja
sub
cli
xchg
std
js
movsb
adc
and
cwtl
sub
loope
cmp
add
xchg
mov
inc
mov
inc
pop
or
and
push
inc
sbb
test
xlat
mov
add
jnp
adc
add
test
addl
jno
or
xchg
stos
pop
sbb
sbbb
push
cmp
cmp
add
and
sbb
sbb
xor
notl
xchg
mov
pop
mov
inc
pop
pop
cmp
push
inc
jle
add
jnp
fimull
loopne
les
and
xchg
push
jmp
xchg
cs
cmc
outsb
mov
jle
adc
stos
repz
dec
stos
adc
mov
aas
addb
pop
subl
pop
inc
cmp
xchg
lcall
pop
inc
mov
leave
pushf
fistpl
out
inc
pop
and
push
lea
adc
xor
adc
stos
lods
push
stos
adc
mov
fiadds
mov
lock
sbb
jmp
fmuls
adc
lock
pushf
fsts
jp
sbb
cmpb
xchg
add
cltd
insl
sarl
pop
mov
test
sub
mov
scas
adc
mov
add
mov
and
jmp
stos
xor
lret
ret
mov
and
fs
adc
add
data16
pop
xchg
mov
js
and
dec
jae
mov
lods
imul
iret
ror
wrmsr
pop
imul
test
lcall
movsb
cwtl
mov
inc
pop
inc
fsubs
shlb
icebp
sti
and
adc
or
into
loopew
ret
nop
sbb
shrb
dec
test
jmp
clc
cmpsb
popa
or
ljmp
js
loope
xor
ret
push
and
inc
fistps
cli
add
sbb
xchg
add
add
mov
and
cli
inc
sub
jne
fcomip
mov
gs
push
lock
imul
test
or
jmp
adc
imul
gs
in
pop
mov
xor
adc
sub
xor
jbe
cmp
xor
shrl
or
es
add
mov
mulb
mov
in
iret
outsb
loope
mov
mov
in
add
add
sbb
jbe
mov
xor
xor
pop
xor
aad
movsb
push
pop
rcrb
dec
mov
mov
jb
xorb
mov
xor
push
and
adcb
xor
mov
ret
inc
dec
ja
xchg
or
cmp
xchg
movsb
call
inc
and
inc
cmp
cmpl
lret
sbb
add
mov
outsl
cmp
jmp
push
mov
push
loop
sbb
jnp
dec
bound
push
fsubrl
sub
and
xchg
jmp
sti
add
and
dec
movsb
scas
leave
add
lret
and
psubsw
call
gs
jne
cmp
sbb
out
loopne
scas
inc
fwait
movsb
xlat
cmc
xor
in
je
into
data16
aad
test
leave
mov
adc
xor
stos
and
out
dec
add
mov
in
mov
insb
stos
push
fwait
test
incl
dec
mov
pop
mov
mov
xchg
sar
jne
nop
xchg
movb
xor
sbb
sub
jne
pop
negl
je
fldl
inc
movsb
jecxz
add
fwait
inc
sub
mov
push
repnz
dec
cmc
in
mov
scas
stos
dec
out
add
or
push
push
lcall
dec
out
add
test
mov
fsubrs
je
mov
loopne
jmp
pop
std
push
adc
push
mov
aad
mov
add
ljmp
mov
inc
xor
aas
lahf
and
mov
add
add
pop
test
xchg
lods
push
mov
inc
mov
daa
xchg
cmpsl
das
addr16
les
pop
idivl
outsl
xchg
dec
mov
or
pop
es
popa
mov
imul
jb
lods
out
std
add
stos
ja
aad
scas
jno
inc
jg
sub
xchg
mov
add
fsubrs
daa
mov
iret
std
fwait
loopne
roll
daa
jno
mov
push
icebp
pop
push
jno
lret
cmp
and
jno
sub
mov
cld
add
mov
add
lea
push
mov
outsl
adc
mov
jb
xchg
xor
enter
push
xorb
test
xchg
incl
cmp
testl
mov
jo
mov
cmp
dec
mov
jo
cs
jmp
push
loope
and
push
jbe
lds
add
xor
mov
or
shrb
iret
adc
pushf
les
jecxz
rolb
sub
mov
test
cmp
lea
xor
pusha
adc
mov
lahf
ret
int3
imul
jno
mov
js
mov
mov
dec
xchg
imul
pop
pop
inc
fsub
and
stos
add
push
pusha
imul
sub
xor
inc
mov
sahf
mov
int3
inc
ret
lret
pop
and
xchg
iret
cmp
test
mov
cwtl
xchg
flds
fildl
push
imul
cmp
adc
invd
sbb
cmpsl
not
sahf
pop
rorb
jae
ret
cmp
loope
cmp
cwtl
jecxz
xor
fsubrl
daa
lock
adc
int3
ret
sbb
push
gs
arpl
filds
push
test
xlat
loope
jns
leave
inc
loope
insl
or
pop
icebp
adc
mov
add
xorl
push
add
xor
arpl
xor
pop
roll
pop
push
out
inc
push
in
add
fldl
and
cmp
or
leave
cmc
or
js
xchg
lahf
cmc
lahf
fiadds
pop
add
mov
lods
in
fsubl
jae
mov
and
pop
imul
inc
pop
push
jb
mov
mov
jnp
fisttpll
jg
add
cmpsb
leave
sbb
std
stos
mov
inc
xchg
xor
shll
rcll
mov
pop
jp
popa
insl
rcll
lds
mov
mov
mov
dec
pop
dec
xchg
cwtl
xor
push
ret
leave
dec
orb
rolb
inc
pop
repz
gs
push
mov
mov
sub
subl
loope
xchg
mov
xor
or
insl
sbbb
xor
push
xchg
mov
jns
loopne
and
add
xor
inc
xchg
xor
movsb
js
jne
test
or
cwtl
andb
xchg
add
in
or
inc
shll
sbb
adc
cmpsl
add
movsl
add
and
mov
arpl
dec
les
adc
aad
add
add
das
fwait
dec
je
or
ud2
add
sub
inc
inc
mov
popa
clc
test
push
jnp
mov
je
xchg
add
addb
arpl
arpl
and
xor
sub
add
icebp
jbe
test
xor
dec
addl
lret
stos
enter
pop
femms
icebp
loopne
pop
hlt
mov
push
mov
out
add
sbb
mov
add
or
xor
fldcw
mov
push
fsts
roll
push
movsb
movsl
daa
arpl
sub
je
sbb
inc
cmp
sbb
movsl
or
adc
je
ret
lret
pop
ja
call
stos
jmp
arpl
xchg
adc
insl
in
mov
shrb
push
add
and
es
stos
add
rorb
cwtl
or
std
cli
cmpl
xchg
xor
adc
and
pop
cmc
dec
adc
pop
add
pop
jbe
pop
dec
cwtl
inc
sbb
jge
mov
cvttps2pi
and
dec
mov
pop
xor
and
inc
stos
mov
cmp
pop
fmuls
ret
xchg
mov
adc
xor
mov
hlt
test
xchg
pop
int3
and
iret
scas
mov
pop
cmp
in
lock
dec
mov
pop
adc
jae
xchg
and
jo
lret
sub
rolb
xor
stos
rcll
adc
pop
fidivrl
cmpsl
fldl
jle
inc
enter
jg
and
sbbl
mulb
jo
xchg
loopne
inc
mov
xor
ret
jne
loope
mov
fwait
mov
mov
fistpl
jnp
sub
xchg
dec
loope
jne
cmpsl
add
cwtl
sbb
xor
xchg
xor
jno
and
and
push
loopne
fdivp
push
dec
sub
andl
and
lods
outsl
mov
int
add
xchg
daa
lret
jle
pusha
xchg
stos
mov
insl
mov
dec
lahf
jae
shll
repnz
jle
cmp
jns
add
imul
pop
rcr
inc
sbb
loop
jmp
test
cmpsl
je
fsubl
hlt
sbb
jecxz
add
fadd
shr
dec
repz
jb
adc
mov
adc
fldcw
mov
cwtl
in
sbb
jns
int
mov
jae
ret
pop
cmpsb
pop
mov
or
push
push
add
rdmsr
adcl
popa
pop
loopne
xchg
push
cmp
into
xchg
outsl
imul
mov
pusha
out
mov
in
in
flds
add
jmp
repz
add
insb
notl
sub
xchg
jnp
ret
fisttpl
lods
fsubrs
xor
xchg
cvtps2pd
and
pop
or
testl
pop
loope
fcoms
dec
xor
or
fld
fwait
dec
pop
sbb
das
popf
out
xor
pop
shrl
divl
inc
fildll
or
push
sub
or
stos
loop
aam
adc
into
shrd
jae
xchg
xor
fdivrl
sti
imul
mov
push
mov
lcall
arpl
outsb
dec
add
jnp
xchg
inc
push
sahf
popf
movsb
inc
mov
lods
inc
inc
es
or
pop
dec
icebp
lock
ret
lahf
outsb
out
mov
mov
push
insl
bound
scas
mov
pop
fs
leave
mov
adc
pop
mov
xchg
xor
faddp
mov
je
push
push
leave
hlt
mov
mov
mull
and
neg
add
push
fcom
gs
jp
sub
pop
adc
lret
pop
movsb
inc
xorb
xchg
sbb
test
jle
shll
inc
pushf
push
cmp
pop
sahf
push
pop
in
cmp
cmpsw
cmp
popa
or
push
bound
jne
push
out
mov
dec
outsb
jae
xlat
jne
jb
sbb
sbb
out
mov
pop
jp
xchg
or
subb
data16
in
sbb
mov
pushf
xor
add
add
push
in
fildl
jne
jo
push
mov
lods
push
mov
sarb
adc
and
popa
sbb
pusha
and
dec
push
cmpsl
add
or
mov
add
bound
add
test
ret
mov
stos
in
loope
cwtl
xchg
dec
push
lea
dec
inc
ljmp
bound
jno
test
loope
dec
adc
test
jbe
jbe
lds
add
ret
adcl
or
and
pop
notl
inc
adc
inc
pusha
add
cmc
or
add
jg
xchg
or
ja
sbb
inc
fcomip
sarl
lods
test
add
dec
pop
mov
jb
test
test
pop
push
pop
and
enter
mov
push
das
imul
nop
xchg
mov
js
pop
jns
adcl
inc
or
mov
xchg
jmp
add
push
les
xor
adc
add
dec
xchg
xchg
and
mov
les
ror
sub
hlt
or
push
sub
jo
fcompl
push
cmp
push
push
pusha
out
and
xor
sbb
pop
push
push
dec
pop
setno
popa
mov
lds
jl
pusha
mov
sbb
mov
push
scas
scas
sub
lods
or
adc
es
jb
subb
push
cmp
ficomps
pop
add
or
in
fisttps
push
rol
xchg
and
lea
lods
je
stos
out
cmp
aam
pop
rep
in
lods
and
dec
cmp
sub
or
cmp
and
ret
cwtl
mulb
pop
fldt
jo
jno
and
add
push
and
xchg
add
ss
xchg
outsb
dec
sbb
arpl
cmp
hlt
call
cmp
jp
and
mov
lds
fstpt
mov
nop
mov
test
mov
or
lods
or
xor
dec
andl
xor
mov
sarb
leave
iret
dec
and
sbb
mov
xor
loop
lock
mov
shlb
lahf
inc
push
test
divl
ljmp
fcmovnbe
sub
inc
adc
sub
andb
xlat
add
adc
inc
cmpsl
cltd
divl
in
mov
mov
mov
scas
mov
mov
mov
sub
mov
in
or
sbb
frstor
add
fcmovne
sub
scas
lods
and
mov
xchg
out
pusha
push
xchg
and
loope
icebp
push
aam
test
jnp
roll
jne
stos
and
sahf
aaa
mov
or
fwait
add
scas
cld
xor
mov
xchg
cmp
or
or
out
insl
mov
popf
push
mov
mov
sahf
jne,pt
jb
push
stos
mov
aaa
mov
lret
push
and
mov
stc
shlb
adc
outsl
adc
cltd
jb
movsl
in
or
jbe
pop
das
jl
push
fstpl
sbb
insl
sub
orb
and
int3
rorb
dec
mov
mov
pop
jg
incb
jno
xchg
add
add
inc
and
pop
jnp
rcrl
les
or
jo
mov
clc
bound
insl
adc
jnp
test
pop
sbb
sarl
mov
jp
outsl
cmp
sbb
sbb
pop
pop
inc
fwait
adc
cmp
ds
cs
cltd
jl
fwait
adc
add
adc
roll
data16
inc
outsb
aad
jge
mov
in
push
jno
push
lcall
nop
push
enter
sbb
mov
inc
sub
jns
cmpsl
rolb
adc
fnstenv
shll
dec
jge
mov
shll
xor
xchg
and
mov
popf
cwtl
aam
add
jno
movsb
pavgw
mov
lret
pop
push
in
add
je
fsubrs
adc
mov
sub
jl
inc
inc
adc
xor
xchg
xorb
inc
sbb
lods
shrb
loopne
mov
ret
iret
les
pusha
lea
pop
push
push
dec
ljmp
test
mov
shlb
cmp
add
push
aas
push
shlb
dec
mov
jle
add
xor
inc
jge
push
pop
cmpsl
adc
adc
adc
add
or
scas
jge
test
adc
add
scas
adc
das
shl
push
or
jnp
fcmovnu
inc
ljmp
and
not
xchg
call
or
call
adc
and
cmp
fs
out
adc
lahf
pop
out
pop
ret
dec
cmp
push
dec
cmp
sub
mov
push
addr16
dec
mov
loopne
or
sbb
orb
sbb
loopne
fadds
sbb
mov
loop
inc
pushf
push
in
or
jmp
into
lods
push
fldenv
xchg
popa
xor
enter
add
or
pusha
or
dec
dec
jo
push
adc
andl
or
xchg
add
add
sti
pop
push
add
or
ja
push
mov
push
ja
sbb
pop
push
loopne
pop
or
push
xor
or
cmp
bound
add
pusha
subl
jmp
mov
jle
push
sbb
pushf
adc
mov
add
add
mov
add
mov
pushf
push
mov
xor
scas
fs
das
sbb
scas
xor
daa
add
inc
xor
fprem1
push
je
bound
cmp
jno
inc
ja
int3
adc
fsubp
jmp
imul
lret
xor
jle
in
sbb
fmull
push
add
popf
and
mov
sarb
add
xor
pop
stos
pusha
add
cmp
pop
rcr
add
push
mov
lcall
mov
mov
and
inc
and
addb
add
aaa
iret
push
sbb
rcrl
ret
sbb
push
les
adc
scas
test
xchg
or
mov
xlat
xor
loopne
outsl
xlat
mov
sbb
mov
and
mov
push
push
inc
adc
cltd
mov
add
cmpsl
test
lcall
push
shrb
xor
in
push
jo
out
or
add
sbbb
sti
les
sbb
adc
gs
jb
out
into
push
stc
jno
xor
and
adc
push
push
pop
hlt
test
cmp
adc
or
mov
jmp
subb
jg
pushl
test
mov
cmp
and
lock
repnz
insb
adcb
pop
jg
push
pusha
dec
gs
add
jmp
scas
stos
in
add
loopne
fcoms
fildll
lock
imulb
int3
add
es
lret
sbb
icebp
inc
loopne
imul
and
test
nopl
sub
in
loopne
cmpsl
mov
insl
cld
ss
inc
sbb
loop
inc
scas
aaa
scas
and
adc
stos
nopl
cmp
cmp
and
cmp
jns
cmpb
test
les
mov
sbb
pushf
movsb
fbstp
or
loopne
loop
dec
lcall
jns
inc
fmull
add
mov
push
pusha
mov
nop
int3
xchg
pushf
inc
or
sbb
add
xchg
push
add
loopne
fstpt
mov
add
frstor
out
cmp
std
inc
fs
pop
xor
push
sbb
cmp
pop
sbb
and
or
movups
fiadds
lahf
push
ret
push
push
sub
add
inc
mov
test
xlat
push
push
scas
cmc
cmp
fcmovb
push
jb,pn
lock
pop
jns
and
push
push
js
sar
jae
enter
add
shll
inc
ds
add
cmp
loope
test
cmp
sbb
int3
and
arpl
pop
add
into
aas
popa
mov
fcomps
or
mov
inc
ret
jo
xchg
sbb
jge
add
mov
cmpsl
push
jne
fdivrs
fcoml
pop
add
aas
mov
push
and
dec
sbb
xchg
push
cmp
xor
aas
sub
in
jo
int3
popa
and
pop
popa
sahf
dec
addb
stos
movsl
push
negl
or
adc
flds
imul
movsl
add
sbb
ljmp
pop
xchg
divl
lea
add
mov
lea
jle
mov
and
push
stc
insb
sub
sub
add
outsb
pop
mov
out
push
addb
mov
mov
outsb
dec
shll
popa
cmp
or
nop
test
push
lock
pushl
pop
add
enter
iret
test
mov
mov
clc
popa
mov
cli
mov
jg
jne
mov
sub
out
add
cmpsl
push
add
mov
dec
xor
pop
lret
cmp
ret
js
adc
pop
rcrb
sub
dec
cwtl
fs
xor
loop
mov
pop
scas
int3
and
loope
push
inc
add
ret
pop
push
xorl
outsl
divl
xchg
cmc
cmpsb
hlt
push
inc
xchg
push
sub
loope
sbb
aaa
jle
adc
imul
mov
or
add
filds
xlat
or
or
fisubl
push
sti
dec
or
mov
ret
loopne
lea
lods
inc
and
add
xor
orl
push
inc
and
lods
ss
sti
add
into
and
je
mov
fisubrl
test
mov
push
popa
popa
adc
jne
push
mov
mov
inc
jmp
xor
cmp
inc
inc
ficoml
pop
ret
xchg
repnz
pop
jbe
lea
and
xlat
repz
cmp
and
shlb
xchg
test
stos
inc
sub
dec
shll
mov
lods
or
loope
pop
inc
and
shll
mov
xchg
lcall
test
cmpl
loopne
aam
mov
jno
jns
push
mov
cmpsl
daa
xchg
pushf
adc
mov
movsb
out
imul
push
add
xchg
pop
add
jecxz
ltr
popa
ljmp
xor
xor
sbb
inc
jns
inc
adc
lret
push
mov
adc
push
out
xchg
mov
mov
xchg
mov
icebp
mov
xchg
out
add
inc
xorb
mov
in
dec
xor
out
mov
popa
jae
push
mov
sbb
pop
mov
mov
mov
xor
push
mov
or
cwtl
xor
scas
cmpsl
mov
or
fnstsw
adc
inc
pop
ja
jmp
push
mov
pop
lahf
add
pop
add
inc
rcrb
pop
dec
jbe
xchg
inc
add
lods
pop
push
dec
pop
mov
pushf
adc
in
pop
pop
and
xor
sub
das
cmpl
jg
xor
aas
xor
lcall
add
or
fnsave
rclb
rcrl
imul
push
add
rorb
push
pop
addl
xchg
stc
into
xchg
in
jmp
icebp
inc
ret
bound
push
or
mov
fcomps
les
jmp
mov
cmp
adc
loopne
mov
repz
cltd
mov
popa
ret
dec
sti
lds
fdiv
sbb
add
subb
sub
shlb
out
icebp
xchg
loop
mov
jge
pop
cmc
adc
sbb
mov
pop
sbb
jno
leave
lods
sub
pop
inc
jle
or
out
add
inc
mov
sbbl
setge
dec
and
stc
sub
ret
add
and
test
hlt
and
jg
inc
add
xchg
xor
bound
xor
cmp
sbb
inc
jg
add
mov
sarb
fidivrl
cmpsl
adcl
movsb
add
out
xchg
inc
hlt
xchg
and
inc
jmp
mov
mov
iret
xchg
or
lock
int
mov
fimuls
dec
xchg
sbb
and
sbb
cmp
cli
cmc
add
mov
inc
jle
aas
ds
subl
sbb
testl
mov
subb
or
jmp
aad
test
andb
scas
daa
push
dec
xchg
test
pop
lods
aad
lds
cmpsl
repnz
dec
or
je
andl
xchg
mov
loopne
fimuls
jno
sti
lahf
push
add
inc
insl
outsl
int3
mov
sbbl
push
dec
sbb
add
mov
mov
test
out
add
sub
xor
pop
dec
lods
ret
fwait
jo
xchg
jnp
push
push
in
test
jle
mov
aad
lcall
pop
dec
xchg
xchg
shr
cmovne
pusha
inc
out
pop
dec
and
cmp
gs
cmc
xor
dec
mov
mov
add
add
push
and
filds
mov
xlat
push
add
pop
or
in
popl
pop
cmp
sub
pop
or
outsb
test
push
in
adc
and
pop
dec
fisttpll
dec
push
inc
outsb
or
loopne
push
insb
push
sbb
outsb
fucomip
pop
clc
and
mov
mov
or
test
lea
sub
lret
inc
add
jl
xchg
add
sub
or
xorb
add
test
xchg
mov
popa
jmp
mov
movsl
addr16
mov
fidivrs
pop
loop
in
and
clc
dec
test
sbb
in
in
add
dec
sub
je
xor
jno
inc
xor
push
mov
sub
mov
or
xor
push
mov
dec
xchg
stc
xchg
ret
fcmovnb
add
or
ds
addr16
jge
push
lock
imul
cmp
lods
hlt
enter
xchg
in
sub
lock
jmp
test
dec
test
add
sbb
mov
jl
cmp
shl
enter
add
repz
rolb
nop
xchg
lahf
jo
cmp
rcrb
push
ret
and
clc
rorl
lret
shl
push
xchg
rolb
xchg
loope
lret
rorl
data16
or
gs
add
pop
xchg
orb
mov
aas
xor
xor
test
roll
out
ljmp
and
dec
ljmp
sbb
lret
into
mov
loopne
stc
add
mov
lods
cmp
loopne
lds
push
mov
addl
cmp
popa
clc
scas
and
xor
inc
scas
xlat
adc
pop
sahf
lods
and
js
mov
les
dec
push
adc
mov
add
dec
aaa
je
pop
rcrb
jle
or
mov
addl
inc
cmp
xchg
loopne
pop
push
cmp
xor
cmp
add
pop
aad
push
or
enter
sbb
adc
sbb
out
and
xchg
cli
add
jge
andl
ja
push
stos
adc
scas
push
loope
icebp
lret
aas
xchg
sbb
or
rorl
dec
jnp
mov
jo
mov
add
fs
mov
sbbl
sbb
mov
push
and
or
and
jge
loop
jmp
jnp
mov
mov
pop
cmpsl
jo
add
pop
bts
xchg
inc
add
mov
mov
rcrb
mov
add
mov
inc
add
mov
loopne
shlb
xchg
test
inc
jae
push
imul
mov
les
fildl
rolb
dec
adc
arpl
lods
movsl
int3
dec
mov
mov
mov
sbb
popf
out
xor
insl
iret
loopne
xor
stc
xchg
mov
scas
sbb
xlat
and
xchg
bound
clc
or
xor
add
and
jbe
xchg
fadds
js
mov
inc
push
mov
sti
sub
cmpsb
or
aaa
jne
arpl
shrl
mov
pushf
xchg
lea
mov
js
ds
fsubs
ljmp
cli
jl
jp
imul
push
popf
hlt
mov
call
pop
inc
loop
enter
sarb
enter
in
pusha
nop
lcall
xor
cmp
xchg
ja
xchg
mov
mov
cmp
fsubrs
or
push
jmp
cld
add
call
sbb
inc
pop
icebp
lods
dec
fistpll
adc
cmp
sbb
je
push
inc
addb
int3
mov
iret
fcmovnb
outsb
out
rolb
sarb
sub
dec
xorl
cs
fists
iret
mov
or
xor
mov
sbb
stos
or
cld
mov
cmp
mov
mov
add
insb
arpl
addr16
mov
movb
pop
and
xor
sub
jbe
and
add
add
mov
inc
js
adc
add
push
sub
push
lods
daa
jnp
cmp
shrb
mov
or
sbb
inc
pop
mov
nop
add
loope
cmc
lods
out
push
fidivrl
xchg
adc
dec
add
sub
pop
sub
cld
pop
cmpsb
or
mov
testl
shrb
movsl
push
scas
fstps
lea
xlat
js
add
cmp
sub
dec
jl
xchg
mov
mov
inc
jp
xor
xchg
adcb
cvtps2pi
add
icebp
fnstsw
pop
dec
aas
popa
jnp
pop
inc
push
or
sub
setns
lods
rol
xor
dec
cltd
pop
sti
add
add
push
add
cmpsb
movb
cmpsb
shll
jge
stos
rol
jle
ljmp
mov
pop
or
xchg
dec
pusha
fsubp
rcl
pop
iret
lods
add
jmp
call
lea
loop
fwait
or
xchg
movsb
je
pop
cmp
loop
mov
and
into
xor
or
and
mov
jo
jbe
sahf
jo
add
sbb
cmp
dec
inc
xchg
inc
imul
inc
pusha
mov
xchg
sub
test
rol
dec
cs
les
pop
xchg
mov
insb
pop
jmp
fcoml
imul
add
loopne
inc
dec
loope
pop
push
push
add
jp
scas
mov
jo
insl
jg
push
stos
cltd
lock
cmp
lods
push
in
mov
addl
xchg
push
pusha
add
movsl
dec
adc
push
adc
jge
inc
inc
cmp
sbb
dec
loope
mov
push
mov
add
inc
cmp
adc
or
or
scas
jp
pop
dec
add
cmpsb
ret
out
out
jmp
inc
xchg
xor
inc
sub
cmp
lock
and
pop
mov
dec
lea
mull
fnstsw
pop
push
or
outsb
adc
lahf
mov
ds
pop
jle
or
cmpsb
sbb
jmp
cmp
xor
popf
jo
xor
jo
in
in
push
or
shrb
movsb
xor
xchg
das
pop
imul
add
xlat
mov
or
add
in
adc
cmp
sub
aaa
inc
test
inc
sahf
jge
leave
add
mov
iret
leave
popa
push
push
fidivl
cld
cli
iret
xchg
lds
shll
ret
test
fbstp
movsb
mov
loop
jecxz
push
adc
push
sahf
loopne
scas
dec
ljmp
sbb
mov
inc
xchg
cmc
and
mov
subl
and
pop
cs
shlb
xchg
cwtl
xor
jmp
or
sub
push
dec
or
mov
xor
nop
pusha
jnp
les
jge
das
xchg
test
mov
ret
push
pushf
test
shlb
rol
inc
in
scas
movsl
xchg
add
push
push
outsb
add
jg
fwait
dec
sub
int3
adcl
fiaddl
add
inc
loop
sarb
mov
inc
xchg
mov
jbe
or
andb
sub
pop
adc
adc
xor
pop
popa
xchg
inc
sbb
adc
fucom
iret
pop
sbb
dec
sahf
or
push
scas
mov
adc
or
pop
iret
pushf
jo
jl
addl
add
push
mov
sbb
scas
aaa
shll
pushf
sub
sub
enter
push
pop
into
fcmovnbe
cwtl
adc
ss
bound
les
or
aas
sbb
add
aad
mov
mov
dec
je
pop
adc
scas
cmp
xor
pop
xchg
addr16
xchg
mov
pop
sahf
fidivrs
push
add
add
dec
or
jp
ret
jg
jle
dec
test
push
sti
xchg
shlb
mov
inc
aaa
or
jmp
inc
add
xchg
pop
jo
loop
mov
and
into
add
push
xchg
cwtl
mov
xor
mov
cmp
jmp
or
scas
repnz
sbb
or
loopne
test
add
call
ljmp
cmpsl
popa
lods
xchg
and
js
jo
jno
aad
xchg
push
shlb
loopne
mov
xor
jne
push
mov
jg
in
add
sarb
add
add
outsb
pop
sbb
dec
inc
add
mov
lds
adc
sub
xchg
lock
pop
nop
cmp
mov
pushf
pusha
xchg
jo
push
push
addb
mov
sbb
divb
or
mov
or
and
test
or
cmp
dec
xchg
mov
sub
fisubs
roll
insb
add
xchg
lcall
cltd
ss
cmc
and
mov
orb
inc
cltd
mov
add
dec
cmp
sbb
push
pop
pop
and
jge
repz
shl
mov
pusha
adc
rolb
push
mov
lret
jb
cwtl
enter
or
fcomip
cmp
dec
inc
mov
push
adc
stos
xor
lods
pop
sbb
mov
dec
popa
push
iret
mov
or
pop
mov
ret
sbb
adc
addr16
repz
push
icebp
and
dec
loopne
and
popf
out
or
dec
les
flds
push
shlb
sub
aad
xor
push
pop
dec
sahf
or
call
lahf
scas
lret
fstpl
aam
push
adc
add
xchg
lcall
outsl
test
adcl
je
cmc
inc
adc
mov
mov
sbb
rcll
iret
mov
cmp
xchg
xlat
fcoms
xlat
stc
fdivs
xor
jns
adc
cmp
mov
outsb
adc
pop
lahf
pop
aaa
lods
jp
xchg
sub
cmpsl
hlt
jo
and
std
ret
pushf
jecxz
push
iret
call
inc
fmuls
adc
or
jp
push
adc
jae
divps
pop
and
ljmp
dec
rcl
push
mov
add
rorl
pop
and
fwait
nop
lds
adc
cmp
andb
mov
addl
ljmp
orl
into
std
es
arpl
adc
jecxz
jmp
pop
jo
fwait
jl
pop
sbb
cld
arpl
popa
adc
aaa
mov
dec
mov
jmp
and
in
loope
dec
lea
dec
inc
xor
scas
mov
outsl
addr16
jae
mov
arpl
adc
add
inc
push
stc
add
and
addr16
out
shll
adc
test
lret
or
sbb
int
mov
pusha
and
inc
cmp
cmp
lahf
or
repnz
bound
sub
or
or
pop
enter
or
movsl
add
inc
nop
dec
mov
cmpsb
pushf
adc
arpl
sbb
fs
cmp
add
sub
adc
shlb
cmpsl
das
and
cmpsl
push
dec
add
bnd
sbb
mov
pop
add
fs
and
add
mov
sbb
mov
pop
movsb
xchg
shrb
movsb
mov
aaa
cld
add
pop
in
mov
push
test
imul
add
ret
inc
pop
mov
mov
out
fldenv
je
pop
outsb
sub
xor
mov
movsl
or
test
in
jmp
add
xchg
test
shrb
xor
loope
enter
sub
cmp
jbe
loope
aam
data16
and
or
sbb
roll
inc
je
add
filds
and
scas
and
addl
jl
adc
test
inc
or
push
mov
shr
xchg
fcomip
test
jo
iret
dec
ja
cli
les
icebp
mov
out
jmp
cld
push
mov
cmpsb
iret
and
add
mov
fidivrl
add
xchg
and
outsb
movsb
or
test
pop
sub
xchg
mov
mov
loopne
xor
das
xor
push
adc
xchg
pop
or
sbb
xor
test
mov
dec
pusha
les
fwait
jo
dec
rcr
jmp
mov
inc
icebp
cmp
mov
push
inc
ljmp
inc
dec
fnsave
jg
dec
js
add
aas
lods
pop
push
mov
mov
push
jbe
sbb
test
repnz
adc
les
das
xlat
pop
insb
add
dec
std
cmp
cmp
push
mov
push
outsb
out
loope
inc
insb
lret
int
cltd
xorb
jbe
arpl
test
mov
ror
clc
js
mov
lret
loopne
ljmp
iret
dec
inc
pop
xlat
pop
xchg
rcl
pusha
dec
test
adc
mov
pop
mov
ret
push
mov
adc
jmp
mov
or
mov
iret
pop
pop
les
push
jno
pop
lea
and
popa
jl
mov
adcl
scas
xor
adc
daa
mov
cmp
lea
xchg
stos
jb
popf
inc
es
loop
js
fwait
rorl
lods
dec
iret
push
sub
xchg
xlat
cmpsl
insl
rol
ds
rclb
outsb
or
ud0
js
cmp
push
mov
cmpsb
aam
out
jbe
add
add
or
dec
and
cmp
in
les
int
pop
inc
ljmp
imul
adc
into
inc
jnp
jo
sub
push
pop
fxrstor
and
je
lods
outsl
ljmp
std
shlb
enter
xor
adc
add
aam
mov
sub
pop
cmpsb
mul
pop
xor
fsubrl
pop
sarl
in
pop
test
add
popf
test
insb
push
mov
rol
push
mov
sbb
xlat
lds
cmp
jo
test
or
push
dec
push
xor
jae
xchg
add
adc
mov
push
call
jo
sub
jnp
push
test
mov
sbb
push
mov
pop
adc
ja
sub
jp
inc
push
inc
and
lods
aam
dec
dec
rcll
pop
jl
push
arpl
test
adc
pop
lock
loope
sbb
arpl
add
dec
jbe
fcoml
and
push
mov
sbb
scas
sub
loopne
xchg
mov
bound
jl
addl
pop
stos
sbbb
aas
fdivs
lahf
les
dec
aaa
fcoml
xchg
sbb
or
or
or
ficoms
or
lahf
and
add
das
shrb
roll
lahf
or
sbb
sub
pop
daa
dec
mov
cmp
in
js
xor
rolb
aad
out
pop
xor
in
imul
je
add
or
sub
mov
aas
xor
and
inc
pop
sarb
xorb
and
add
cmp
les
cltd
push
add
fcompl
pop
cmp
imul
add
or
shll
movsl
shlb
inc
and
xchg
add
ds
xchg
inc
dec
jg
adc
dec
je
test
and
lret
aam
mov
int
xchg
and
daa
or
adc
cmp
daa
js
addl
xchg
sahf
add
sbb
cmp
sub
icebp
and
add
mov
gs
lods
lods
push
imul
mov
add
mov
lcall
das
or
imul
push
arpl
lret
jb
bound
sbb
addb
add
sub
lock
add
aad
call
adc
fidivrs
test
es
data16
and
push
addr16
pop
fidivs
push
xchg
mov
xor
jo
or
ss
lods
xchg
push
mov
pop
adc
movl
inc
dec
insl
dec
fidivrl
orb
shll
cmp
inc
and
ret
loopne
mov
or
das
shll
cmp
lods
iret
jae
xchg
adc
shll
push
xor
jmp
lock
cmc
in
int3
adc
mov
push
mov
sub
and
sbb
push
outsl
inc
ja
and
jl
mov
repz
sarl
jbe
lahf
aas
and
iret
push
add
push
ja
jbe
rclb
test
imul
das
mov
inc
pop
gs
das
dec
or
ret
jae
dec
inc
cmp
outsb
outsl
jle
jno
xchg
leave
or
xlat
mov
mov
shrl
fcmove
add
mov
adc
and
sub
sub
mov
cmp
or
add
loopne
lods
adcb
jmp
shl
cs
lcall
movsb
dec
out
cmp
cmp
in
cwtl
jmp
rclb
inc
or
push
in
or
add
add
mov
xchg
roll
scas
inc
rorl
mov
cmp
xor
lret
pop
fisubrs
iret
pop
mov
cmp
push
xchg
adc
xchg
mov
adc
lea
ret
jg
pop
fildl
add
or
fists
adc
pusha
mov
push
push
jns
jle
out
adc
fwait
inc
das
int3
cmc
sub
sbb
test
int3
cs
sbb
in
lock
jno
dec
sbb
cmp
ret
pop
sbb
jl
outsl
cmp
lods
scas
int3
and
hlt
outsl
fadds
inc
outsb
xor
xor
fisubl
das
sub
lods
add
enter
push
sub
inc
outsb
pusha
inc
pushf
ret
push
lahf
sub
out
fiadds
and
loopne,pn
in
ret
add
cmp
pop
or
xchg
push
inc
sahf
push
inc
mov
mov
out
out
popf
push
enter
lock
add
jns
dec
add
mov
test
push
jle
cmpsb
adc
pop
jne
lret
aas
add
imul
pop
clc
pop
stos
mov
mov
ret
ret
mov
mov
jl
add
lock
sbb
cmpsl
test
arpl
sub
pop
pop
jae
cmp
inc
pop
push
das
cmp
mov
cmp
mov
cmpsb
iret
push
outsl
sub
ret
cmc
outsb
mov
cmp
ss
jge
dec
ret
or
shll
push
out
jp
loope
mov
imul
or
add
push
mov
xor
ds
insb
lods
ja
or
rcl
or
or
push
fadds
xchg
cli
fadd
sub
iret
andb
dec
xchg
push
jbe
ret
and
aaa
sub
movb
or
lea
add
mov
push
xchg
icebp
inc
pop
fs
popa
sbb
dec
mov
mov
push
or
inc
lock
lahf
mov
stc
inc
cmp
in
imul
push
inc
pusha
and
cmp
adc
dec
fcoml
jbe
inc
jae
add
outsl
rol
jecxz
popa
dec
lahf
fsubrs
xchg
dec
mov
fwait
mov
and
adc
lea
add
mov
pop
lahf
adc
sbb
cld
cld
dec
add
adc
mov
shlb
pusha
inc
shrb
enter
inc
push
sbb
xor
fwait
cmpsb
jo
or
ret
andb
inc
repz
inc
dec
mov
mov
shlb
sbb
push
loope
in
loop
inc
mov
sub
or
dec
fisubl
mov
inc
imul
icebp
push
pop
cli
dec
shll
shl
sbb
mov
shrb
test
xor
and
mov
dec
pop
xchg
rcrl
xor
fisubs
and
adc
js
ret
clc
push
fdivrs
xchg
xorl
and
out
std
aad
adc
dec
test
dec
inc
add
inc
into
dec
sub
les
imul
push
adc
dec
imul
cmp
shl
movsb
fdivl
mov
lds
nop
dec
mov
mov
stos
adc
insb
jmp
inc
add
mov
add
ret
lods
mov
lea
push
pop
inc
daa
ret
lea
dec
pushf
repz
jp
loopne
pop
jb
or
push
and
stos
scas
mov
outsb
inc
xchg
adc
imul
mov
and
je
call
dec
pop
sbb
insl
cmpsb
iret
sbb
or
mov
test
movsl
jmp
insb
xor
aad
pop
sub
ja
mov
loop
fs
fmuls
sub
jp
jb
xor
loopne
sbbb
jo
xor
or
and
gs
push
add
sub
mov
dec
mov
ljmp
sub
dec
js
lods
mov
fcoms
add
mov
test
inc
dec
jecxz
jg
mov
les
xchg
or
dec
xchg
addb
inc
adc
out
xchg
movsb
adc
cltd
add
xor
aad
repz
jle
repnz
outsb
push
add
dec
shlb
das
imul
stc
xor
adc
and
dec
cs
dec
jge
dec
push
inc
je
adc
mov
lcall
and
push
nop
push
sbb
mov
rcrl
bound
lods
pop
call
sub
movsb
in
sub
lret
ljmp
iret
cmc
add
shlb
inc
pcmpgtd
fs
into
loop
inc
pushf
rclw
int3
inc
sub
in
mov
and
cmc
aam
sbb
jmp
push
insb
add
loop
xchg
cmp
inc
shl
cmp
cmp
push
inc
pop
and
add
mov
lods
jno
sbb
dec
mov
lcall
fcompl
pop
pop
push
pushf
mov
mov
jb
outsb
insl
mov
push
out
cmp
out
outsb
or
sti
xor
out
and
or
dec
mov
out
or
sbb
cmp
sbb
ja
aam
ljmp
nop
shrl
adc
lahf
xor
cltd
cld
test
nop
dec
jp
jecxz
lods
pop
adc
push
pop
das
stos
mov
lods
cmp
push
push
cmp
movsb
andb
cmp
pushf
add
rorl
shr
mov
dec
jp
data16
shlb
repz
and
shl
lods
adc
inc
xchg
xchg
icebp
xor
add
pusha
adc
adc
jo
mov
adc
jno
sub
sbbl
pop
dec
adc
inc
add
stos
fbstp
jmp
inc
push
jecxz
sti
mov
int3
mov
lea
and
xlat
mov
xorb
mov
adc
lret
mov
imul
push
divl
mov
out
xor
sahf
add
aad
andl
es
mov
inc
adc
add
pop
jmp
mov
cmpsl
add
mov
jmp
add
rcrb
xchg
rcr
popa
or
pop
pop
scas
mulb
inc
sahf
pop
cmp
call
sub
test
xchg
mov
adc
mov
push
pusha
add
mov
lret
sub
outsl
adc
mov
push
shlb
pop
test
adc
js
adcl
icebp
add
dec
inc
sbb
push
push
test
divl
outsb
push
scas
or
push
scas
inc
jbe
add
jb
sbb
sub
push
imul
dec
lods
sub
add
add
push
sbb
test
dec
lcall
mov
add
ja
sbb
outsl
and
xchg
jp
and
insb
mov
push
jl
jo
push
push
scas
dec
add
test
icebp
jo
lret
pop
mov
ja
imul
push
pop
aam
xlat
and
jne
and
and
add
mov
out
dec
inc
cmpps
daa
mov
inc
mov
adc
test
adcl
call
mov
sub
mov
mov
fs
xchg
push
fs
pushf
xchg
cld
and
lods
imul
push
inc
and
aaa
mov
loop
sub
lret
pop
pop
pop
and
adc
add
xchg
je
in
insb
inc
decb
add
dec
lret
push
in
call
pop
test
sbb
fwait
add
orb
sbb
jg
je
xlat
xchg
mov
and
enter
repnz
push
int
jbe
pop
inc
or
pusha
pop
mov
pop
fcomps
outsb
cmp
imul
push
ja
push
orl
out
fldcw
sub
ffree
dec
inc
cmp
add
xor
push
fnstcw
mov
add
xlat
jne
sbb
imul
jne
pop
imul
lea
js
add
addb
xchg
test
aam
jno
sub
pop
orl
es
shlb
dec
xchg
lods
or
jl
adc
je
inc
adc
xchg
in
cld
adc
clc
repnz
adc
out
dec
lods
mov
mull
add
daa
addr16
pusha
call
aaa
add
stos
pop
pop
fldenv
lods
add
sbb
or
sti
adc
movsl
fs
mov
push
pop
int3
add
mov
inc
inc
mov
or
add
sbb
fidivrl
pop
aam
adc
jb
and
ret
inc
ja,pn
adc
add
add
add
adc
xor
add
mov
adc
pusha
prefetcht1
iret
xor
sub
lahf
je
enter
sbb
add
add
lock
cmp
je
add
or
pop
and
arpl
mov
pop
mov
movb
add
fadds
dec
aas
sbbl
xor
xor
popa
sbb
rol
sbb
jo
dec
push
adc
or
sub
or
cmc
insl
ljmp
and
add
xor
pop
push
ret
sti
cmp
and
das
cmpb
or
adcl
das
int3
shl
in
add
inc
dec
pusha
add
jo
test
fwait
push
mov
pop
hlt
sub
sbb
sub
xor
cmc
push
xor
xor
sub
xor
fiadds
lds
and
orl
je
arpl
daa
and
fistpl
mov
xor
and
cmp
rol
loopne
inc
fsubs
pop
add
lds
inc
xlat
push
lods
adc
and
gs
push
jle
rolb
xchg
jo
xor
or
pop
mov
adc
cmp
add
nop
into
fsubs
rcrl
xor
xor
lcall
jnp
je
jl
push
gs
nop
and
cmp
cmp
cmpsb
aaa
xchg
stos
out
and
stc
jbe
sub
and
loopne
out
mov
je
scas
enter
mov
push
add
outsb
cwtl
lods
testb
pop
dec
test
out
cmp
scas
jge
insl
sub
fsub
sbb
dec
arpl
jb
imul
sub
pop
mov
daa
or
fistpll
add
sbb
jbe
mov
xor
or
shl
cmp
int3
mov
inc
sbb
lret
mov
mov
mov
aad
dec
and
cld
mov
sub
push
sbb
gs
and
test
sub
les
mov
notl
lods
jg
insb
iret
into
mov
inc
or
aad
scas
jle
int3
stos
jle
mov
xor
or
imul
dec
push
jge
test
lods
in
jmp
push
enter
and
cltd
test
mov
aas
add
loope
stos
popa
inc
lahf
orl
xchg
and
xor
pop
enter
adc
mov
nop
xor
pop
fidivrl
add
mov
rorb
adc
push
push
add
and
mov
cmpsl
dec
dec
add
stos
push
cmp
out
or
add
add
mov
adc
icebp
nop
cmp
shlb
or
jmp
or
out
mov
mov
inc
inc
xchg
stc
cltd
rclb
in
jecxz
add
movsb
add
cmc
insl
jbe
lds
sarb
add
inc
pop
test
cmp
inc
in
adc
iret
rcl
jne
sub
jno
sbb
pop
or
dec
in
mov
add
icebp
xor
and
stc
mov
out
push
fisubs
mov
jecxz
aad
enter
stc
fistpl
xchg
cmp
or
mov
or
jg
pop
pop
out
mov
and
pop
fsubl
lods
add
int
push
mov
icebp
lods
das
inc
pop
movsl
icebp
or
pop
sbb
lea
mov
es
push
mov
push
push
call
inc
lock
xorl
fstl
dec
push
jge
add
cmp
repnz
cwtl
movsl
je
push
data16
add
sbb
mov
push
lret
fs
adc
add
xchg
and
mov
dec
ror
cmpsl
and
addl
mov
ja
sbb
adc
lret
jl
or
lret
mov
inc
in
jl
xlat
inc
sbb
sub
movlps
and
test
lea
test
imul
ja
jno
out
push
rclb
adc
popf
fldt
mov
int
xor
inc
inc
sub
inc
mov
jge
sbb
mov
cmc
arpl
subb
testl
add
test
aas
xchg
cwtl
cmp
push
mov
pop
jbe
cltd
movsl
lods
add
test
rcrl
fcoms
rclb
xchg
dec
call
and
gs
sub
jb
adc
sbb
or
inc
es
mov
or
cmp
sub
loopne
mov
repnz
push
das
fldenv
rclb
out
out
rclb
cld
imul
addb
xchg
jecxz
add
stos
cmpsl
and
mov
hlt
add
sub
fs
ficoml
test
sti
mov
aam
sbb
arpl
cmp
movsl
push
nop
inc
and
xor
pop
xchg
pop
dec
lods
icebp
dec
and
sbb
xchg
push
rolb
xor
sbb
pop
xor
adc
les
mov
daa
in
cmp
push
clc
inc
cmp
imul
mov
ds
lcall
add
xchg
decl
lret
addl
adc
xchg
mov
clc
movsb
lret
arpl
dec
shlb
aad
rolb
dec
xchg
cmpb
inc
js
jo
xor
mov
insb
cld
adc
cmpsb
lret
ja
scas
or
add
stos
cmp
gs
jo
or
mov
js
sub
fbld
in
daa
jno
lock
insl
lea
in
jo
inc
shrb
dec
dec
sbb
or
shrb
and
mov
add
into
aaa
xchg
push
sbb
jae
bound
pop
insb
jo
fmuls
lock
pop
fistpl
aad
jno
addl
mov
ret
jecxz
or
out
adc
fs
sub
sbb
push
cli
fildl
push
aam
fdivs
rcr
adc
mov
aaa
inc
subl
push
adc
or
test
addr16
xor
call
xlat
js
bound
inc
iret
out
out
scas
push
sbbl
adc
sub
xor
sub
adc
mov
mov
mov
xorb
shlb
xchg
sahf
dec
pop
adc
pop
pop
add
enter
push
lock
ret
mov
cmp
inc
notl
cmc
push
clc
adc
mov
cmp
outsb
and
sahf
adc
mov
pop
je
lock
mov
cmpxchg
idiv
sbb
mov
aam
pop
mov
and
mov
mov
nop
add
or
insl
mov
or
sub
and
fs
dec
out
cmpl
inc
sub
pusha
lahf
clc
inc
push
push
mov
mov
or
sub
xlat
cmp
cmpl
xchg
xchg
adc
and
add
xchg
mov
adc
ljmp
push
and
es
mov
xor
rorb
sub
mov
fimuls
adc
popa
pusha
or
ja
inc
or
loopne
orl
rorb
and
mov
add
ret
push
mov
mov
and
and
dec
outsb
and
mov
add
dec
pop
cmpsl
jp
sbb
mov
add
inc
popa
add
push
inc
xor
xor
push
movsl
inc
pop
das
js
fdivrl
xor
in
outsb
xchg
add
das
ja
mov
pushf
outsl
movsb
out
xor
test
repz
sub
fidivl
sarb
jmp
jnp
xchg
les
dec
push
js
push
fnstenv
pushw
jge
shr
mov
ret
jge
aad
or
js
test
imul
jecxz
pop
sub
fildl
pop
lock
pop
jecxz
xorl
inc
push
cs
pusha
inc
adc
lock
js
add
out
cmp
adcb
enter
and
mov
sub
iret
mov
xor
mov
nop
xor
aas
mov
imul
roll
inc
add
inc
loope
sbb
es
push
sti
push
mov
scas
insb
fucomp
mov
add
pop
test
push
stos
repnz
outsl
cmpsb
dec
mov
or
sub
pusha
push
jg
imul
daa
cmc
or
ja
fnsave
imul
inc
pusha
add
or
fists
aaa
aas
inc
sub
jmp
jae
push
fisubrs
push
dec
ja
dec
push
aaa
test
les
or
adc
pop
mov
adc
pop
scas
xor
xor
xchg
cld
loope
int3
aam
dec
int
fmuls
cs
push
mov
leave
add
ds
jae
xor
dec
mov
stos
pop
xor
clc
mov
jle
dec
stos
add
dec
push
ficoml
or
xlat
sbb
loope
mov
xor
rclb
push
dec
jl
adc
ss
sub
adc
fmuls
insb
xor
push
xchg
mov
add
aam
sbb
and
jno
lds
outsl
add
fs
sbb
cltd
and
or
and
sbb
push
fnstenv
pop
add
leave
jge
mov
icebp
aaa
lret
add
add
sti
and
add
sbb
repnz
fisubrl
jns
jno
pusha
dec
sbb
dec
and
sti
inc
mov
or
orb
inc
lods
xor
sti
out
cmp
insl
int3
movsb
fcompl
lods
mov
pop
push
test
mov
movsb
pop
fldenv
jns
test
or
pop
sbbb
fcmovnbe
nop
or
pop
sbbl
jecxz
sti
enter
das
leave
push
xor
sub
jge
aam
xor
mov
mov
aaa
adc
or
cmp
xchg
adc
or
and
aaa
mov
sub
cmpsl
mov
les
inc
inc
push
or
sbb
jnp
aad
scas
ret
jp
and
movsb
loopne
ss
clc
push
test
push
inc
stos
les
mov
push
and
push
push
daa
or
movsb
mov
jmp
es
testb
xchg
and
aam
jecxz
mov
data16
and
adc
add
and
jg
pop
lea
sbb
mov
lea
aam
aam
jg
sti
push
add
cs
xor
and
sub
inc
movsb
loopne
mov
lods
dec
aam
mov
and
pop
pop
xor
popf
lock
dec
cwtl
lcall
test
je
out
mov
ficoms
dec
dec
jge
sbb
pop
jo
pop
xor
imul
sub
add
jo
imul
or
jne
and
mov
or
jo
xor
lock
loope
push
std
decl
loopne
popa
movsb
adc
cmc
ja
adc
in
jecxz
dec
cmpsl
loopne
shr
std
fcoml
inc
cmp
addr16
insb
xchg
xchg
or
and
fistpll
ljmp
push
adc
inc
xor
ds
addr16
test
adc
push
jno
sub
add
imul
popa
inc
lock
adc
shlb
loop
cwtl
and
xchg
jo
push
adc
pop
subb
or
pop
push
lods
mov
insb
rorl
or
mov
dec
mov
loope
mov
dec
mov
jge
lods
les
push
jo
lahf
into
int3
dec
jns
xorl
mov
add
add
adc
adc
addl
or
and
dec
jno
fldcw
rcll
push
inc
add
shrb
adc
add
lret
shl
xlat
subb
pop
push
jbe
jmp
push
fistpl
aas
push
jl
mov
sbb
mov
push
aaa
push
adc
sub
mov
push
cmp
cltd
jecxz
push
xchg
lret
add
xchg
xchg
call
adc
pop
popf
dec
add
dec
out
cmp
cmp
cmp
sub
pop
sub
inc
pop
pop
fldl
sbb
pop
jne
mov
insb
mov
add
scas
jbe
jb
test
mov
out
imul
cmc
pop
cmp
adc
pop
cld
repz
mov
mov
pop
inc
inc
fidivs
and
std
jb
outsl
add
repz
into
adc
cmc
je
cmp
fiadds
out
gs
fists
loopnew
mov
sti
lret
int
cmpb
add
add
stos
jne
stos
mov
pop
movsl
inc
push
xchg
mov
int
xor
jp
rol
aad
faddl
fsubs
or
mov
rcr
fwait
sub
loope
test
outsl
sti
lcall
add
jo
xor
xor
clc
hlt
jl
dec
and
je
ja
pop
xor
sbb
sub
ds
mov
mov
mov
dec
push
dec
sbb
mov
out
add
mov
ss
rcrb
pop
out
or
lea
xchg
adc
xchg
fldenv
into
mov
imul
inc
lea
ja
and
ljmp
mov
loop
shrl
push
or
in
loope
mov
xor
xchg
out
clc
add
dec
dec
xor
fisubrl
mov
popa
dec
loopne
ret
in
and
mov
test
sbb
hlt
addb
add
rcr
les
cmpsl
or
or
call
dec
dec
popa
jo
mov
out
and
leave
xchg
rcll
mov
and
pop
ljmp
xor
jecxz
aad
jns
ret
or
mov
mov
cmp
gs
cmpsb
or
loop
daa
add
shll
sub
cwtl
or
mov
out
test
add
gs
or
mov
in
fidivs
ret
jl
sbb
push
pusha
cmp
js
push
bound
or
subb
cmp
in
addr16
sub
inc
pop
xor
push
push
imul
jecxz
jno
push
stos
data16
inc
mov
lea
stos
dec
dec
cmpsl
mov
decl
jle
add
es
imul
das
sbb
jmp
or
add
mov
sbb
mov
and
aaa
sbb
sbb
vmwrite
xchg
in
push
bound
mov
pop
test
fnstsw
jmp
loop
je
std
lea
mov
cltd
xchg
lahf
sbbl
adc
test
adc
test
adc
or
dec
outsl
sbb
rorb
inc
das
add
dec
xchg
dec
test
mov
cmc
add
xor
xchg
into
sub
add
xchg
add
add
in
dec
jge
lea
jno
inc
pusha
xchg
test
lods
push
sub
and
xor
inc
bound
mov
test
push
insb
insb
scas
mov
movsl
int3
add
icebp
js
adc
shrb
xchg
add
mov
fsubl
add
xchg
sub
cmpb
cmp
inc
adc
or
into
dec
stos
mov
cmpb
mov
into
scas
lods
jnp
jno
mov
mov
movsb
jge
cmpsb
ljmp
les
lea
incb
test
dec
mov
xchg
aaa
mov
jge
insb
mov
jp
enter
push
shrl
cltd
pop
xchg
rcrb
in
aas
je
std
mov
pop
mov
cmp
jmp
or
xchg
loopne
mov
xor
pop
sbb
fs
arpl
call
ja
mov
dec
cmc
insb
leave
mov
lahf
shrb
add
scas
and
mov
add
jg
and
and
lds
xor
adc
pop
and
or
mov
call
rorb
insb
shrl
fisttpl
cmp
sub
inc
add
inc
or
xorl
push
dec
stos
insb
mov
je
hlt
push
sub
test
sub
pop
adcl
xor
or
mov
nop
cmp
sbb
and
add
cmp
add
add
outsb
jmp
mov
xor
icebp
rorb
or
sub
cmp
push
sub
cmp
add
or
pop
mov
jge
mov
mov
enter
cmp
dec
mov
nop
or
mov
push
add
and
xor
inc
xor
pop
test
shr
push
test
test
into
mov
adc
jg
dec
cmpsl
or
movsb
push
inc
pop
cltd
cmp
repnz
xor
aaa
adc
icebp
ljmp
push
stos
add
adc
xchg
pop
inc
cmp
lahf
add
mov
lds
inc
in
pop
or
adc
scas
rcrl
arpl
push
adc
jmp
loopne
xchg
mov
or
pop
not
out
mov
test
pop
loope
adc
loopne
js
mov
sbb
push
cmp
inc
lea
sbb
pop
sub
lods
sbb
daa
add
lret
sar
lahf
xchg
push
mov
sub
sbb
sbb
pop
jle
lret
cli
xlat
pusha
pop
outsl
xor
push
iret
ror
push
cmp
mov
dec
insb
pop
xor
nop
push
data16
cmc
and
sub
fstps
iret
xor
add
imul
nop
shrl
sub
test
in
ficoms
imul
xchg
mov
push
add
cwtl
std
add
pop
xchg
lahf
mov
insl
jl
or
shll
cmpsl
mov
jno
inc
prefetchnta
imul
push
fs
mov
xchg
sbb
pusha
sub
xchg
push
hlt
add
in
add
sub
and
adc
mov
lods
cmp
mov
and
mov
xor
mov
mov
in
cmp
sub
jl
loopne
pusha
ja
push
insl
push
div
inc
sbb
ss
or
pushfw
lods
sbb
nop
jns
lds
jmp
test
adc
sbb
outsl
test
in
mov
and
or
cmp
push
scas
lods
addl
fadds
adc
xchg
inc
arpl
and
and
sbb
sets
inc
enter
cmp
sbb
add
outsb
inc
pushf
and
inc
cmp
pop
xchg
push
pop
clc
mov
rcll
push
es
test
pop
jae
push
dec
les
jg
or
andb
sbb
ret
dec
and
lcall
push
sub
and
and
das
arpl
fstpl
js
mov
xor
pop
mov
mov
mov
add
iret
aam
cmp
pop
mov
push
xchg
gs
mov
dec
or
ret
test
call
sbb
scas
pop
outsb
ficomps
xchg
test
mov
mov
sub
push
addr16
or
push
cmp
outsb
mov
xchg
sbb
pop
xchg
cmp
push
lahf
test
ficomps
daa
jae
enter
jmp
lahf
pop
in
dec
nop
sysret
or
inc
fldl
int3
add
push
add
dec
ljmp
ja
sbb
ficompl
mov
jmp
mov
roll
cmp
lret
or
jno
iret
or
popa
xchg
cmp
test
xor
add
movsb
lock
or
shrb
cmp
xchg
mov
add
lods
push
lods
dec
adc
xchg
mov
jmp
push
xchg
mov
dec
push
sbb
add
xchg
dec
or
jne
rorb
pusha
push
mov
mov
adc
insb
push
pop
nop
pop
out
and
push
jae
mov
mov
adc
add
loope
pop
shl
repz
adc
inc
mov
in
mov
jg
mov
in
sar
mov
add
and
stos
sarb
test
jo
xor
pusha
lock
testl
jg
mov
mov
mov
cmpsb
sarb
daa
jg
jg
adc
push
inc
and
jo
lock
imul
mov
or
pop
push
xchg
test
mov
notb
sbb
jo
roll
lds
adc
ret
arpl
sub
shl
dec
inc
sbb
mov
add
mov
cmpsb
adcb
testb
sbbb
inc
std
es
push
imul
add
or
sbb
add
in
mov
add
cmc
and
sub
mov
lods
mov
dec
into
js
inc
iret
mov
or
pop
and
pop
add
jo
orb
popf
inc
or
fdivrl
cmp
and
inc
adc
sti
movsb
adc
lcall
sub
fildl
cmp
mov
jecxz
pop
pop
cmpsl
adc
xchg
dec
jnp
adc
adc
jnp
and
pusha
in
mov
mull
int3
add
loop
jecxz
xchg
call
adc
iret
testb
or
fwait
jns
or
xor
sbbl
stos
sahf
mov
cmp
enter
loop
les
jp
loopne
andl
fwait
mov
pusha
cmp
push
fnstenv
jp
ret
sbb
and
xchg
xchg
dec
sbb
mov
lods
mov
sar
sub
xchg
data16
out
cmp
push
enter
cmp
add
cmp
mov
ficoml
or
cwtl
or
insl
sar
jo
cmp
push
outsl
es
rcr
cltd
cmp
and
popf
add
stos
mov
call
cs
sub
and
movsb
les
mov
inc
stos
add
add
xchg
je,pn
cmp
hlt
inc
adc
js
jle
inc
frstor
popf
imul
xchg
add
sar
bound
xor
data16
jmp
or
pop
xor
jno
icebp
xchg
ret
jo
jne
sub
push
addr16
and
xchg
in
out
test
outsl
movb
mov
add
and
add
pushf
or
jge
jg
in
dec
xlat
jge
mov
ds
jecxz
mov
add
aaa
data16
insb
and
inc
pop
xor
fisttpl
cmp
and
xchg
je
ljmp
daa
cmp
ljmp
mov
and
movsl
je
nop
inc
or
add
ret
mov
int3
or
xchg
loopne
push
test
mov
push
inc
daa
inc
test
dec
imul
clc
inc
aas
lret
es
shrb
shrb
xchg
xchg
stos
sub
adcb
add
cli
aam
push
lods
cli
addr16
into
loop
adc
jb
imul
addr16
imul
pop
xchg
movsl
sbb
adc
scas
cmpsl
mov
or
jmp
mov
sub
add
ret
ret
addl
fsubr
mov
imul
les
dec
lea
inc
jp
mov
jp
aad
xlat
mov
add
and
adc
jne
jecxz
add
push
cmp
imul
cmp
shlb
adc
push
movsb
test
bswap
jmp
mov
shll
or
mov
ja
push
out
fstpt
shlb
into
fsubrs
cld
and
aad
mov
daa
dec
loopne
mov
movsl
push
gs
add
fildl
pop
or
or
and
adc
mov
jbe
mov
add
test
push
mov
xchg
cmp
hlt
stos
add
xor
fdivrl
add
and
aam
insb
mov
je
dec
add
lds
mov
ljmp
sub
test
mov
pop
and
sub
sub
adcb
adc
ret
and
inc
dec
pop
imulb
push
inc
and
add
add
push
cs
inc
inc
cmp
mov
fcoms
js
das
daa
dec
jno
shr
rorl
addr16
push
stos
pop
add
test
and
cmp
add
add
or
and
xchg
je
xor
fsts
ret
dec
icebp
push
sbb
mov
push
lahf
pop
mov
outsl
loopne
sbb
add
ja
jp
mov
mull
cmp
leave
or
pop
jg
test
rolb
cmp
or
mov
in
nop
icebp
insb
in
pop
sub
and
mov
in
aam
jno
mov
add
test
pop
std
nop
adc
add
pop
add
xchg
dec
cmp
pop
xchg
jecxz
xchg
pop
pusha
push
shrb
jbe
add
in
adcl
cmp
mov
les
loopne
adc
add
inc
js
adcl
add
es
inc
sbb
js
inc
lea
icebp
int3
dec
ds
test
mov
add
lea
aas
pop
das
mov
cmp
aas
jg
pushf
jno
arpl
xor
dec
stos
mov
inc
mov
dec
push
shlb
int
inc
ret
and
pop
cmp
insb
add
mov
cmp
push
call
cmp
push
rolb
fcoms
fnstenv
lock
sbb
xchg
es
lods
fmuls
xor
aam
adc
push
addl
mov
cmp
inc
push
xor
jmp
adc
sbb
sub
and
nop
out
add
movsb
cmc
push
dec
sub
sbb
xchg
leave
dec
adc
xchg
sub
and
stc
and
lret
iret
xor
fistl
dec
xor
adc
jns
dec
lods
pusha
and
jnp
cmp
pop
jp
fldl
inc
sub
test
out
jno
inc
add
ret
mov
xlat
jg
add
stc
or
mov
xchg
jnp
ret
cmpsl
sbb
xchg
inc
mov
cmp
xchg
dec
xchg
inc
sbb
add
dec
pop
add
inc
pop
aaa
jmp
or
xor
call
cltd
jno
mov
dec
cmp
jns
mov
mov
ds
outsl
cmp
inc
test
pop
mov
pop
add
and
xchg
mov
ljmp
loope
cltd
mov
push
bound
xor
add
sub
jmp
mov
adc
jne
pop
mov
pop
sbb
test
xor
andl
xor
jnp
and
add
jno
xor
pop
inc
add
push
lcall
mul
int3
and
cmp
adc
lock
sahf
xor
sbb
mov
adc
xchg
and
mov
popa
mov
push
je
jge
inc
movsl
xchg
lods
lods
outsl
sbb
inc
cmp
inc
or
fcmovne
les
xchg
jmp
in
mov
incl
lods
call
jae
loopne
scas
dec
adc
out
int3
xchg
cmp
pop
adc
cmp
push
sbb
ds
shlb
das
shl
or
lcall
sub
aas
mov
xchg
fdivs
mov
jno
clc
cmc
test
lods
mov
jge
outsl
jnp
arpl
out
in
rcrl
push
sarb
dec
add
push
or
mov
iret
and
pop
add
test
andb
and
push
jo
adc
lret
js
sbb
pop
cmp
pop
int3
out
cmp
and
pop
pop
ret
jns
lret
xor
add
push
rcrb
lods
in
ret
push
or
lret
adc
mov
dec
dec
cmp
or
jb
lahf
movb
xlat
adc
pushf
add
or
jne
lret
jne
pop
mov
mov
jbe
dec
and
bound
xorb
add
add
and
xchg
xor
sub
pusha
mov
pop
fistps
dec
popl
pusha
sub
add
adc
dec
jl
or
dec
inc
pusha
mov
pop
scas
push
inc
adc
inc
jl
loope
js
xor
jecxz
push
dec
cmp
xchg
lea
and
push
je
cmp
out
ja
and
js
jb
cmp
pop
pop
pop
inc
loopne
jae
jo
adc
lods
xor
nop
mov
cmp
add
pop
lahf
popa
loop
ret
push
dec
jmp
cmp
int
push
lods
jb
and
aaa
dec
cli
sub
lods
xorb
sub
push
in
test
and
jae
std
cmp
mov
and
je
test
shlb
xor
mov
jns
popl
mov
pop
add
sub
cmp
out
pop
xchg
sbb
sub
or
rolb
dec
jecxz
sti
outsl
adc
shll
or
adc
jae
outsb
pusha
xor
xlat
test
push
or
fsub
insb
test
mov
sbb
fwait
aam
mov
mov
xchg
mov
and
add
in
je
sbb
das
adc
add
sbb
jge
push
or
insb
rorb
addl
insl
or
subl
test
xchg
sahf
pop
jne
push
jo
and
inc
jae
sbb
xchg
and
or
inc
daa
dec
add
test
push
into
inc
pop
jo
add
dec
ret
cmp
dec
out
ss
cmp
add
jecxz
ret
adc
sti
dec
rcr
dec
imul
ss
in
or
push
loopne
ja
xchg
xorb
jmp
mov
inc
pop
je
ss
dec
sub
jp
fisttps
adc
xor
push
push
adc
enter
mov
lods
mov
and
mov
xlat
sub
mov
pop
loopne
andl
cmp
jmp
cmp
push
fsubrl
out
insl
xor
movl
inc
in
sub
ljmp
lahf
xor
inc
arpl
pop
mov
repnz
and
sbb
shl
adc
or
pushf
add
lea
addr16
loopne
mov
mov
fxam
push
adc
push
js
arpl
mov
cltd
movsb
dec
insl
in
inc
adc
sbb
das
dec
or
test
bound
out
test
mov
pop
xor
sbb
inc
push
adc
daa
push
pop
call
lods
pop
mov
push
iret
lcall
out
or
rorl
outsl
scas
lea
cwtl
std
add
mov
cwtl
xchg
mov
sbb
jo
orl
mov
mov
cmp
pop
imul
add
add
or
cwtl
pop
add
rcl
nop
sub
xchg
repnz
into
in
fiaddl
popf
cmpsl
pop
inc
mov
leave
rorb
cmp
movsb
jmp
fildl
orl
add
ret
mov
ja
das
cmp
test
sub
adc
sar
xchg
inc
outsl
jmp
add
aaa
push
mov
subl
sub
inc
push
cmpsb
add
das
and
adc
pop
test
sbb
mov
test
xchg
mov
mov
test
leave
xor
in
xlat
mov
adc
adc
stc
push
inc
pop
inc
les
loopne
add
sbb
notb
and
leave
das
add
push
pop
aam
cmp
push
mov
arpl
pop
mov
push
pusha
and
dec
insb
xchg
add
pop
pop
jnp
cmpsb
xor
push
pop
xor
lret
fisubrl
dec
jecxz
lea
adc
push
lcall
mov
shl
push
add
pop
and
rcl
mov
aas
imul
cmpsb
or
mov
adc
enter
inc
pop
sarl
mov
jl
imul
pop
push
inc
mov
clc
mull
or
or
add
pop
scas
dec
jo
sub
loope
and
pop
push
loop
sbb
sbb
dec
jb
fists
rorb
test
sub
adcl
int3
dec
mov
call
cld
aad
idivb
js
add
mov
rcll
shll
cmp
cmp
xorb
xor
mov
add
mov
je
inc
mov
push
sub
lcall
or
jno
mov
imulb
pop
add
loopne
cmc
mov
xchg
test
mov
ja
mov
or
xchg
pusha
cmpsl
xchg
imul
cmp
push
arpl
adc
jo
jno
dec
push
scas
add
and
inc
jp
jo
or
outsl
add
cmpl
out
jge
pop
std
xchg
fisttpll
mov
sbb
mov
adcb
or
and
inc
push
or
dec
int
mov
lods
test
sbb
pop
bound
js
movsl
push
sub
cmp
xor
sti
mov
jbe
pushf
sti
cld
dec
aas
mov
push
and
sub
xchg
push
or
cmc
test
jnp
sub
push
pop
mov
loope
pop
add
roll
and
lds
mov
mov
mov
cwtl
add
movsb
pop
jmp
or
je
mov
daa
xorl
xchg
dec
shrl
and
movsl
push
and
xor
lods
xlat
xor
arpl
xor
sbb
cmovp
test
and
ret
jl
les
aad
test
add
mov
adc
add
pop
fidivs
push
pop
enter
jmp
cmpsb
push
dec
sahf
dec
out
adcb
xor
jge
or
dec
pop
adc
shlb
fs
jbe
dec
or
jne
cmpsl
mov
orl
xor
adc
scas
sbb
loopne
sbb
or
sahf
fisubl
cmp
notb
sub
adc
aaa
ret
mov
jnp
mov
and
mov
fdivrl
sub
jp
cmp
push
packsswb
mov
shr
dec
js
jmp
insl
sub
cwtl
jnp
mov
or
adc
sub
push
adc
insb
sbb
test
dec
jns
inc
push
insl
fcoml
scas
js
fldl
dec
dec
sbb
popf
dec
or
add
and
das
in
daa
inc
in
roll
xor
lods
lock
dec
add
cmp
je
and
sbb
in
jo
push
test
jp
lds
pop
data16
addr16
fnstcw
clc
push
scas
mov
cmp
sbbb
xorb
or
scas
add
and
pop
insb
ret
enter
test
adc
sub
int
pop
ja
shlb
xchg
pop
push
jle
adc
fdivrp
add
shll
mov
inc
stos
out
shl
add
lret
push
ja
xor
arpl
out
sub
insb
xor
inc
xor
push
push
xchg
add
mov
push
push
or
adc
movd
dec
outsl
cmc
adc
fbld
xor
sbb
jno
lret
push
test
in
inc
sbb
adc
push
mov
sub
pop
or
sbb
mov
add
sbb
test
jae
push
xor
jno
hlt
test
or
mov
mov
mov
lret
dec
xchg
mov
jg
dec
cmp
sbb
mov
xchg
mov
xchg
xor
sbb
je
scas
and
imul
imul
jno
movsl
xor
or
out
scas
pop
lea
mov
sub
sbb
push
lcall
xor
enter
inc
nop
cmp
out
jne
hlt
aad
sub
jne
xor
or
adc
xor
mov
add
xor
movsb
fwait
inc
imul
jecxz
mov
jmp
repnz
mov
imul
mov
pushf
cmpsl
dec
test
or
out
jmp
add
xlat
arpl
pop
jnp
ds
sbb
into
imul
push
xor
mov
cmp
sub
or
add
add
dec
mov
and
sub
add
mov
add
outsb
pusha
push
inc
xor
push
sbb
push
cmpsl
ficomps
dec
add
adc
jae
popa
and
dec
cli
sbb
clc
xor
fldl
es
aaa
inc
pop
mov
rolb
decl
sub
push
lret
enter
or
inc
sub
das
jge
mov
roll
adc
jmp
xchg
test
and
mov
cmp
sbb
sub
dec
subb
addr16
lods
dec
push
scas
cmc
iret
xchg
mov
dec
jecxz
movsl
jno
test
push
outsl
inc
outsb
mov
push
add
sbb
lods
push
test
inc
or
loopne
sub
xchg
dec
out
arpl
or
xor
mov
sub
imul
mov
data16
and
mov
cmc
cmp
test
add
pop
aam
pop
jmp
test
cltd
jp
lret
adc
dec
push
call
inc
dec
mov
inc
cmp
in
mov
jno
cmpsb
pop
push
xchg
adc
into
xchg
mov
xchg
adc
addl
adc
sbb
inc
fwait
inc
popa
cli
stc
and
out
and
jle
stc
and
nop
test
sub
cltd
movsl
sahf
in
into
push
shl
xor
fbstp
bound
cmp
shrb
fsubs
repz
jge
dec
add
and
xlat
or
imul
clc
aam
scas
and
mov
mov
sbb
scas
mov
aad
loopne
pop
orw
rolb
iret
and
mov
xchg
sub
data16
xor
hlt
iret
ret
or
push
mov
cmp
mov
cmp
dec
xorb
js
ja
test
xchg
adcb
sub
bound
pop
fistpll
add
fchs
cmpsl
sbb
sbbb
sbb
mov
iret
push
imul
add
xchg
or
dec
adc
test
int3
add
out
test
in
in
dec
and
add
lcall
fnsave
sub
cmp
lock
push
mov
mov
xor
jg
cld
sub
jo
movb
data16
jecxz
push
test
xor
add
sub
sbb
imul
call
sub
and
inc
clc
iret
in
ret
jle
xorb
inc
push
addl
push
or
or
push
scas
jo
cmp
out
fdivr
les
dec
mov
adc
xchg
xchg
inc
push
or
jecxz
lods
out
and
sub
test
or
pop
mov
js
mov
rorl
add
mov
scas
xchg
scas
sbb
sbb
shlb
inc
and
negl
rcll
mov
adc
inc
sbb
wrmsr
mov
adc
loope
lea
mov
inc
inc
mov
inc
fldt
pop
mov
xor
pop
shlb
loop
dec
or
sub
xor
push
pop
or
arpl
aad
out
jo
and
aam
mov
das
and
xor
bound
mul
jmp
je
jne
lcall
lock
loop
pusha
and
pop
lds
dec
movsb
push
adc
add
test
dec
jns
push
cmp
lret
inc
xor
repz
loopne
push
xchg
test
adcl
sarl
shll
jb
or
inc
add
mov
outsl
xchg
orl
pushf
sub
fstpt
addb
xor
push
lds
hlt
add
xchg
es
push
loop
sub
in
ret
or
cmp
jp
ljmp
fsubrs
add
fsubrs
push
push
xchg
rcll
push
loope
lahf
or
and
out
loopne
popa
ret
dec
shrb
xchg
jnp
loope
inc
adc
xchg
sbb
or
adc
mov
rolb
push
jnp
int3
inc
aam
add
ret
push
add
insl
pop
popf
and
stos
pop
cmpl
js
xchg
add
mov
fisubrs
xor
test
pop
xchg
cmpsb
sbb
jp
jle
roll
aad
dec
popa
xor
testl
inc
pop
int
sbbb
inc
leave
iret
aas
and
scas
add
lods
mov
gs
testl
pop
mov
icebp
add
mov
fisttpll
mov
cmp
pop
sbb
xchg
pop
jecxz
jbe
out
andb
adc
push
or
push
mov
pop
test
test
loope
daa
and
xchg
mov
out
push
fdivl
out
push
aaa
xchg
mov
mov
xchg
test
push
and
test
int3
sub
push
jg
push
cmovne
and
xor
fnstcw
xor
mov
pop
cmpsl
lods
outsl
or
ja
aaa
sub
popf
stos
mov
push
fs
push
pop
add
ret
mov
cs
out
sbbl
mov
orl
test
jo
add
rclb
cmp
jbe
pop
call
testl
adc
pop
jno
pop
in
into
daa
dec
daa
rcrb
lahf
adc
call
pop
mov
test
sbb
xchg
sub
cmp
testb
jl
out
xor
lock
aad
add
arpl
sti
push
sbb
dec
lret
cmp
xchg
mov
in
rclb
dec
outsl
mov
inc
ret
sbb
mov
iret
ret
and
fildl
movsl
dec
push
xor
add
xor
rolb
lea
je
imul
sti
sarb
xchg
dec
add
cwtl
lret
ja
pop
jle
popf
test
pop
movsb
add
setno
and
pop
dec
pop
in
je
push
cmp
sahf
mov
xchg
test
push
mov
sub
fimull
movb
gs
imul
mov
jno
xor
mov
or
mov
jno
add
in
push
sbb
cs
and
push
push
popa
ret
mov
xchg
inc
jmp
fucomi
mov
fimull
pop
add
rcrb
test
dec
push
imul
lcall
mov
or
js
push
outsl
movsb
pop
and
test
cmp
or
fiadds
push
test
pop
lods
and
jmp
ljmp
add
adc
sub
cmpsb
adcb
das
pop
inc
inc
mov
test
lds
ret
in
ds
add
sti
sahf
adcb
sbb
push
inc
shlb
jl
dec
mov
jo
out
mov
jge
cmp
loop
inc
cwtl
insl
out
add
sbbl
adc
mov
arpl
inc
jg
push
mov
lods
jb
pop
or
test
hlt
push
push
add
inc
sub
jne
jno
pop
outsb
adc
dec
adc
loop
imul
mov
sub
or
subb
enter
add
repz
jmp
orb
addb
mov
repz
sbb
inc
pop
dec
add
or
sub
sbb
mov
jmp
dec
mov
clc
inc
imul
adc
pop
add
repnz
lret
adc
js
or
sub
and
and
inc
pop
add
add
ret
fsubrs
pop
dec
int3
das
add
add
pop
xchg
cwtl
rcr
out
lret
add
in
pop
es
test
movsb
mov
mov
rorb
rorl
lcall
mov
arpl
mov
subl
mov
rcl
xchg
push
or
jp
sub
add
or
add
fildl
lods
mov
push
ja
scas
push
adc
xchg
mov
shrl
add
out
push
mov
bound
movsl
es
lret
adc
xchg
push
push
insb
in
xor
add
dec
xor
enter
xchg
fsubs
push
jle
push
das
mov
push
roll
orl
dec
icebp
test
popa
mov
and
imul
push
iret
test
pusha
imul
in
pop
pushf
mov
and
pop
aaa
add
mov
flds
inc
push
icebp
dec
adc
imul
rcl
dec
jns
je
adc
loopne
push
pop
xchg
inc
jno
pop
add
xchg
icebp
jg
cmp
xchg
cli
in
fisttpll
add
cmp
jmp
lret
rclb
pusha
add
and
es
or
test
insb
fldl
adc
add
and
fisubrs
mov
and
in
lret
popa
lret
push
sbb
lds
addr16
inc
out
jo
je
fstpl
fsqrt
mov
or
out
xchg
lods
add
sahf
mov
mov
es
mov
sub
lods
jg
subl
and
lods
add
pop
sbb
sahf
push
ljmp
stos
push
in
sub
adc
ds
adc
std
loopne
daa
lods
pop
jo,pn
mov
shl
mov
add
loope
dec
addb
flds
inc
mov
std
add
lcall
adc
lcall
mov
or
testl
aas
jl
lcall
adc
push
arpl
adc
add
sbb
push
xchg
add
add
jo
popa
push
popa
sbb
dec
and
and
pusha
test
aam
mov
ret
test
les
jge
pop
pop
aaa
je
and
shll
sbb
stos
inc
push
lret
and
or
js
cmpsl
cmp
aam
mov
iret
sbb
adc
fnstenv
das
push
sbb
add
loopne
sub
mull
int
pop
and
add
sarb
aam
mov
add
das
adc
mov
adc
inc
or
xchg
mov
add
add
jbe
cwtl
pop
addr16
push
nop
in
gs
add
add
icebp
sbb
jnp
cmp
add
lods
out
mov
mov
xchg
dec
lods
xlat
add
xor
mov
lret
cmpsl
daa
dec
add
sub
test
cmpsl
rol
mov
fs
add
sbb
mov
in
ret
call
mov
xchg
movsb
push
mov
loope
xor
jnp
sub
push
jge
add
push
mov
jbe
je
pop
and
dec
daa
out
fwait
les
mov
and
into
arpl
xchg
sub
add
mov
andb
shl
out
push
inc
insl
cmovs
xor
adc
sub
in
xor
adc
adc
out
push
rolb
rol
xor
cmp
icebp
lcall
or
add
in
sarb
into
pop
insl
xor
jo
ja
push
gs
adc
or
mov
gs
push
xor
add
pusha
cmp
notl
jg
or
push
sub
rorl
adc
lret
loope
lea
or
adc
es
cmp
and
and
sbb
test
xchg
dec
pop
data16
testb
fildl
inc
into
mov
and
lahf
popa
cmpsl
fcmovnu
daa
xchg
add
in
out
sbb
pop
mov
iret
mov
inc
add
push
pusha
mov
sbb
pop
pop
bswap
jo
jp
mov
jo
js
stos
pushf
dec
or
or
push
and
mov
mov
pop
loope
out
mov
add
movsb
shlb
push
test
outsl
mov
mov
loop
dec
pop
cmpsb
mov
push
outsb
sub
xchg
aaa
xor
fs
jno
ljmp
jo
pusha
ja
test
adc
mov
inc
aam
inc
push
es
mov
push
push
and
xor
xchg
push
aam
imul
push
cmpb
jmp
pop
vmwrite
into
inc
sub
mov
dec
mov
add
mov
mov
add
or
in
sbb
popf
adc
cmpsl
mov
ret
dec
rolb
mov
pop
add
adc
cwtl
xchg
adc
add
sbb
out
movsb
dec
gs
popa
inc
arpl
je
push
call
mov
push
add
pop
sub
sub
push
repnz
mov
movsb
mov
jns
aas
jae
outsl
xor
stc
in
outsb
scas
roll
sub
adc
jb
mov
fisubl
add
test
xchg
xorl
loop
imul
test
cmc
insl
out
ret
xlat
xor
xchg
call
mov
push
enter
dec
test
mov
jmp
xchg
and
mov
inc
or
pop
add
xor
mov
or
dec
adc
add
push
add
sbb
adc
inc
xor
or
aad
aam
adc
xor
loope
push
mov
out
jo
push
sub
adc
jp
mov
or
jnp
mov
push
aam
dec
addb
inc
stos
xchg
inc
cmp
mov
or
inc
xor
push
and
ficoms
sub
mov
add
push
jno
sub
mov
sbb
das
push
mov
cmp
add
outsb
test
sbb
push
pop
bound
out
mov
sti
add
ret
ficompl
dec
lret
mov
lods
push
xchg
fsubr
and
push
adc
xor
test
test
or
push
mov
dec
cld
mov
add
add
fldcw
iret
add
test
loop
xlat
daa
roll
arpl
fwait
or
in
lods
movsb
pusha
aam
js
fistpll
in
sub
cmp
xor
das
shlb
adc
sub
frstor
adc
add
jp
shr
es
arpl
shll
and
ss
rcl
rolb
xchg
inc
shrl
bound
and
or
sbb
mov
rsqrtps
push
inc
lret
sarl
icebp
inc
fdivrs
sub
loope
test
iret
push
adc
jnp
js
add
dec
mov
andb
jmp
addl
rclb
cwtl
mov
or
and
jne
js
add
sahf
cmpsb
push
sbb
or
lcall
sbb
fmull
inc
jae
sbb
adc
inc
dec
pop
jo
and
push
xorl
lods
mov
outsl
lret
mov
lret
ret
sbbb
cwtl
inc
js
ror
add
mov
mov
jmp
scas
pop
inc
and
push
sbb
scas
aad
add
mov
daa
nop
rcl
icebp
testb
adc
lret
cmp
sub
push
jne
pop
push
mov
inc
lea
and
test
push
ljmp
mov
jnp
jbe
push
or
add
imul
loopne
sbb
dec
or
inc
mov
push
jl
dec
pushf
pop
xlat
iret
xchg
adc
pop
inc
dec
insl
pusha
push
and
sub
mov
dec
call
cmp
mov
cmp
jp
sub
xor
out
lret
loopne
pop
or
xchg
dec
cmp
iret
mov
add
ret
stos
testb
aas
stos
lcall
xchg
sbb
inc
add
test
mov
mov
jl
push
or
arpl
in
mov
fwait
add
ljmp
insl
jbe
or
ret
rcrl
popa
fmull
jp
jecxz,pn
or
fisttpll
into
je
pushf
rorl
adc
jp
mov
aas
xchg
push
push
add
add
or
cmp
das
ss
xchg
pop
pushf
lret
mov
or
lea
sub
jl
mov
lock
outsl
or
mov
lock
and
dec
mov
sub
popf
mov
nop
testb
js
add
repz
aam
imul
hlt
outsl
aaa
dec
xor
arpl
loope
roll
xor
jecxz
dec
or
popf
out
jo
lahf
imul
or
jno
add
sub
lahf
push
mov
mov
lea
xor
xlat
lret
ja
cwtl
push
adc
iret
jne
leave
mov
repnz
divb
roll
je
jp
mov
or
add
inc
jp
out
cltd
or
imul
add
mov
mov
gs
inc
add
lret
xchg
add
xchg
mov
ds
popa
xor
push
pusha
mov
xchg
pop
fdivrs
push
mov
adc
and
pop
add
cmpsb
inc
test
loopew
cmp
xor
xor
dec
and
and
jb
loope
test
mov
mov
fs
jmp
insl
xor
or
or
xor
ret
mov
enter
push
imul
rorb
jns
adc
mov
rclb
adcl
sbb
int3
clc
add
mov
mov
pop
daa
pop
pop
test
jl
icebp
mov
stos
push
pop
test
dec
add
dec
pop
imul
dec
push
ret
mov
fwait
pop
add
sbb
mov
push
mov
adc
in
mov
movaps
mov
push
xchg
iret
xchg
sbb
pushf
fstl
push
inc
pusha
out
or
mov
mov
std
sahf
inc
mov
xchg
sbb
fmulp
adc
nop
xchg
mov
fistl
mov
insl
lods
xchg
lret
ret
mov
ret
mov
outsl
add
pop
and
das
jl
xor
pop
jmp
lret
cmc
fcompl
or
xor
aaa
insl
pop
sbb
dec
subl
leave
test
fistpll
fs
pop
xchg
std
push
xchg
push
xchg
sahf
cmp
ret
ret
add
gs
enter
cmpsl
enter
xchg
jecxz
dec
jne
mov
xchg
adcl
lret
dec
sti
in
rorb
loop
rorl
arpl
adc
dec
add
addl
inc
lret
mov
fstpt
pusha
mov
aad
leave
lea
jo
cmp
fstpt
jne
test
cmp
aad
outsb
loopne
push
xor
sub
daa
aad
and
outsl
loop
aad
insb
test
sarb
out
lods
mov
xlat
lret
fwait
rorb
dec
xor
leave
sub
and
mov
jne
and
and
in
or
pop
mov
daa
ret
in
jns
jno
mov
mov
arpl
or
rcll
dec
pusha
push
xor
pushf
cli
push
or
xor
dec
scas
sub
nop
adc
aam
movsl
and
and
mov
decl
ret
xchg
dec
jl
call
sbb
adc
imul
adc
outsl
icebp
jle
ja
mov
lahf
int3
lret
or
sub
insl
mov
adc
sahf
rcl
test
test
xchg
mov
and
cmp
sub
pushf
mov
pop
fsubrl
dec
ret
adc
and
pop
in
movsb
cmpsb
aad
jb
pop
cmp
push
and
scas
push
out
mov
xor
nop
arpl
or
cmpl
jl
fwait
push
mov
mov
call
cmpl
imul
ret
push
inc
lahf
js
xchg
sar
adc
add
and
pop
push
mov
lret
insb
iret
fs
inc
cmpsb
rol
inc
loope
iret
sub
inc
mov
mov
dec
aam
xchg
add
test
mov
sbb
icebp
mov
push
loope
pusha
and
pushf
dec
popa
mov
fld
or
push
xlat
add
xlat
adc
ficoml
mov
inc
inc
cmc
mov
pop
dec
xchg
inc
pushl
or
nop
jbe
or
adc
das
mov
xchg
ret
adc
mov
scas
js
cmpsl
sarb
sbb
sbb
inc
add
ret
adc
imul
icebp
shlb
lret
add
add
inc
jmp
dec
push
sub
push
andl
inc
mov
mov
adc
xor
add
into
imul
ret
lret
in
cmpsb
je
xor
inc
cmpsl
mov
dec
jno
mov
lods
ret
xchg
add
lods
pop
sbb
in
push
daa
inc
clc
adc
jl
sub
loopne
jne
jo
test
sahf
adc
stos
pop
add
inc
dec
xchg
cmc
inc
push
dec
unpcklps
test
testl
es
and
cmp
dec
loope
aad
call
push
cmp
movsl
adc
cs
ret
cs
loope
xor
sbb
ret
cmp
jo
es
xor
xchg
sti
iret
pop
iret
movsl
mov
popf
dec
shll
out
pop
push
ret
jno
call
sbb
lea
mov
lcall
xchg
outsl
adc
or
outsb
jmp
les
hlt
dec
jmp
popl
ljmp
ficompl
jno
mov
mov
or
add
aam
mov
mov
sbb
incl
jmp
add
mov
inc
or
pop
xchg
dec
inc
shlb
jo
adc
adc
or
test
mov
add
or
lods
pop
xchg
mov
and
or
inc
inc
and
aaa
or
and
das
dec
out
iret
xor
dec
add
sub
aaa
movsb
sbb
arpl
daa
popa
or
insl
cld
ss
pop
add
add
out
pop
pop
add
loope
inc
mov
add
outsl
iret
shlb
faddp
sti
add
stos
lret
add
bsf
xchg
fwait
bound
bound
or
xor
add
jge
and
cmp
inc
icebp
or
add
xchg
mov
lock
sbb
push
and
sbb
aaa
lods
mov
pop
sbb
imul
sbb
roll
sbb
mov
add
push
nop
lods
dec
mov
lahf
cli
jmp
ret
lea
faddl
adc
and
pop
out
jo
push
test
lret
cwtl
in
adcb
int3
mov
pop
fmuls
ja
and
sub
xchg
xor
and
push
insb
add
push
mov
repz
and
inc
and
repnz
add
add
imul
inc
sbb
dec
or
xor
roll
add
xor
in
popa
jecxz
xchg
inc
sub
scas
add
push
pop
pop
lea
xlat
add
add
adcl
xchg
das
addl
push
jo
adc
sub
dec
shll
addb
test
or
insl
add
pop
adc
sbb
mov
cwtl
inc
sub
popf
scas
cltd
lcall
fsts
sahf
add
sarb
fadds
cltd
test
loope
ret
inc
lods
pusha
xchg
inc
mov
push
loope
rcrb
add
jg
leave
dec
push
pop
xor
xchg
aad
jo
mov
add
add
in
lea
xchg
push
shrl
sahf
out
fldl
xchg
nop
add
cs
jnp
sub
daa
sbb
test
mov
xor
add
mov
mov
ret
js
dec
les
sbb
jns
sub
inc
popa
ret
outsb
adc
ja
fisttpl
sbb
xor
ret
inc
mov
xor
add
mov
jb
jge
loopne
mov
cmpsb
scas
xchg
sub
in
gs
xorl
sbb
dec
mov
xchg
inc
or
xchg
popf
jl
mov
inc
and
jbe
hlt
jp
push
popl
sbb
mov
xchg
mov
mov
and
popf
and
xor
shlb
je
jo
or
or
jecxz
int
inc
xchg
and
or
inc
sbb
jae
xor
and
mov
dec
fcoms
add
xchg
xor
add
insl
mov
and
pop
stc
adc
dec
xor
jb
push
and
outsl
jnp
jae
push
jg
scas
jns
jp
inc
lods
ret
or
push
adc
ss
xor
enter
bound
push
nop
and
mov
test
arpl
add
adc
subb
add
es
jle
nop
fwait
cmp
addr16
add
push
in
pop
or
loope
jbe
jl
fadd
add
jmp
js
repz
sbb
imul
add
jnp
push
pop
dec
mov
and
jo
add
clc
xchg
push
push
fcoms
xor
sub
jmp
push
cltd
mov
insl
sub
push
and
adc
fadds
test
bound
lods
sub
push
and
int3
add
and
adc
and
popa
dec
fsubrl
int3
xor
nop
jmp
mov
packsswb
je
dec
cmpsl
jne
stc
sub
inc
mov
mov
cmp
fcmovb
add
testl
xorl
iret
mov
pop
jb
adc
pop
push
push
add
int3
add
addl
popf
add
xlat
lods
jp
and
jmp
iret
xor
jmp
mov
les
xor
add
jns
sbb
or
add
jge
inc
cld
filds
subb
test
sbb
and
sub
lods
mov
ss
std
add
daa
add
cmpsb
mov
add
mov
inc
movsb
std
mov
lea
pop
add
push
sub
sbb
nop
pop
movsl
sbb
in
add
dec
and
rolb
cmpsl
icebp
addb
daa
adc
in
xor
mov
cmp
in
rorb
mov
add
lea
adc
adc
pop
dec
push
fdivl
inc
inc
adc
arpl
dec
push
dec
push
les
cmp
xchg
inc
inc
pop
fbld
test
add
inc
rcrb
push
into
xorb
or
in
lods
movsl
or
rolb
inc
test
or
lods
daa
cmpsl
cmp
hlt
jb
fsubrs
add
fadds
roll
clc
and
jae
push
or
xchg
sbb
sbb
push
movsb
orl
jl
pop
pushf
mov
rolb
inc
push
sbb
push
rcrb
and
arpl
jg
inc
das
rcll
add
mov
adc
inc
pop
add
inc
add
push
fwait
rolb
test
xor
jo
pop
xor
test
jns
cmp
out
add
mov
fwait
inc
sbbb
clc
or
iret
adc
jecxz
xor
or
or
sub
adc
nop
mov
xorb
outsl
adc
gs
xor
or
clc
shll
popa
jl
xchg
lods
loopne
mov
sub
sbb
les
mov
sub
stc
mov
adc
push
xor
fldl
push
sub
add
adc
insl
add
cwtl
jp
xchg
cmp
ret
sbb
xor
and
xor
adc
jno
aaa
mov
ja
stos
into
les
cmpsl
shl
or
xlat
add
add
add
or
add
add
stos
add
inc
lock
loope
imul
mov
push
push
xchg
inc
aas
ds
sbb
mov
push
lahf
sub
xor
jno
mov
jb
test
daa
icebp
imul
sbb
pushf
popa
add
push
add
jb
dec
cmp
and
pop
push
out
sahf
icebp
pop
add
cmp
pop
inc
pop
testb
mov
cmp
add
sbb
daa
add
je
mov
sti
mov
scas
jmp
ret
and
and
sbb
sbb
cmp
rolb
pop
adc
push
punpcklbw
insl
add
push
jo
ja
adc
push
cmpb
add
adc
ja
dec
mov
mov
inc
movl
test
add
push
inc
js
ret
xor
dec
push
mov
les
or
gs
add
stos
add
inc
sbb
sbb
stos
and
inc
push
cmpb
cmp
dec
and
cmc
mov
clc
cmp
or
sbb
pop
push
or
dec
dec
pop
pop
inc
or
popf
xlat
lods
xor
jp
and
aam
push
add
lahf
popf
pop
cmpsl
add
add
add
lret
xlat
cmp
test
fneni(8087
and
sub
cmpsl
scas
xchg
shll
and
xor
inc
arpl
je
shll
pop
cmp
movlps
stc
shrb
and
cs
cmpsb
stc
testl
sub
push
int
mov
imul
popf
pop
mov
pop
cmc
pop
fwait
cs
add
pop
dec
adc
aad
repnz
cmpsb
pop
pop
popa
add
push
cmp
pop
push
cmp
push
xlat
cli
orb
mov
add
lods
test
cmp
dec
addb
xchg
jecxz
clc
add
lds
sub
add
or
cmpsb
adc
xorl
mov
pop
and
add
inc
mov
sbb
sbb
inc
dec
aaa
sub
adc
mov
rcl
add
mov
sub
les
lret
push
add
jmp
loop
xor
mov
add
bound
movsl
imul
push
andb
fadds
mov
dec
pop
loop
test
or
and
add
popa
leave
mov
xor
add
push
mov
sub
jnp
jge
inc
add
adc
rorl
rolb
push
movsl
loopne
hlt
popa
mov
add
adc
pop
push
and
mov
or
push
mov
jle
inc
inc
add
lahf
fwait
ret
int3
dec
and
xlat
test
arpl
push
add
aaa
dec
mov
xor
dec
popa
mov
or
mov
popf
jno
sub
aaa
add
add
push
jbe
adc
cmp
fs
fdivrl
or
adc
xchg
lods
xor
adc
in
xor
mov
dec
fadds
setle
pop
fists
xchg
mov
lods
fsubs
scas
loope
mov
pop
mov
mov
inc
mov
push
nop
xchg
mov
bound
mov
popa
cmp
jae
out
lock
inc
lods
xor
outsl
jecxz
popa
cmpsl
sbb
test
jo
pop
test
push
outsb
stos
imul
orb
pusha
cli
cmpsl
repnz
popa
add
icebp
fisubl
sub
inc
add
adc
xchg
loope
mov
es
sbb
popa
and
rol
sbb
test
sbb
push
or
imul
inc
add
mov
loope
clc
pop
or
add
mov
inc
push
das
or
imul
xlat
jae
pop
and
outsl
loopne
arpl
push
jae
outsl
add
lret
lds
and
sub
arpl
inc
jno
leave
lds
nop
adc
jo
xchg
mov
xor
mov
mov
add
popf
cmpsb
jl
lea
mov
stos
test
cmp
lods
mov
pop
lock
mov
outsl
add
add
lret
sbb
data16
and
cmpl
inc
cmp
push
add
fcompl
pop
jnp
loopne
mov
cmpb
scas
sub
ret
add
pavgb
mov
sub
inc
dec
gs
leave
leave
pop
leave
cltd
or
aam
push
inc
push
lods
mov
dec
shrb
jnp
pusha
lods
xor
add
push
sub
scas
pop
clc
fsubrs
insl
lods
push
lret
add
mov
and
sbb
scas
das
repnz
sub
xchg
lahf
insb
pop
icebp
aad
insl
iret
sar
pop
mov
xchg
pop
add
push
pusha
or
popf
add
sub
push
xor
or
lcall
push
ss
sbb
out
jae
add
add
adc
adc
fadd
pop
sbb
lods
test
add
xchg
add
ja
test
in
sti
fnstcw
cwtl
push
into
mov
inc
add
jecxz
jl
test
rcrb
dec
push
push
test
shlb
stos
dec
stos
xchg
test
pusha
cmpsb
test
pop
lret
sarl
ret
iret
mov
dec
and
adcl
push
or
fnsave
dec
sbb
sub
adc
add
out
adc
cmpsl
push
jl
and
and
stc
adc
ja
rcrb
mov
repz
das
test
pop
movsl
in
jp
int
daa
and
daa
mov
pop
sbbb
mov
pushf
adc
jge
daa
xor
pop
and
imul
xor
adc
repnz
push
aaa
push
and
adc
pop
sub
mov
clc
lret
repnz
push
popa
inc
pusha
sti
icebp
push
adc
in
sub
cld
xor
aad
pusha
or
insb
out
cmpsl
mov
push
and
mov
imul
xor
sub
ljmp
fadds
xor
aam
ffree
dec
insl
xchg
notb
xor
popa
push
push
repz
loop
mov
popa
or
jo
rorl
sbb
shl
mov
add
outsl
xchg
jg
sti
pop
adc
dec
pop
sbb
subb
out
andb
push
mov
cmpsb
inc
and
sbb
dec
loop
or
jo
and
xor
add
mov
movsb
mov
add
adc
adc
ret
cmp
adc
ret
pusha
mov
pop
inc
stc
and
sti
adc
adc
je
test
or
jo
mov
int3
inc
xchg
orb
mov
cmp
andl
mov
pop
add
cltd
cmp
xchg
xor
rorl
xor
test
pop
movsb
jno
aad
push
cltd
stos
inc
sub
inc
jecxz
leave
dec
jnp
jl
movsl
aam
in
mov
mov
adc
inc
das
daa
add
dec
orl
pop
sub
scas
iret
add
lcall
add
lret
dec
sbb
inc
and
shlb
and
cmp
sub
scas
test
stos
out
mov
and
lods
call
sbb
push
mov
mov
shr
in
test
sub
stos
adc
pop
sbb
nop
push
cmc
test
jmp
imul
nop
adc
mov
pop
lahf
les
cmp
cmp
mov
outsl
subl
push
jmp
jno
mov
lret
stc
push
dec
std
and
pop
xlat
and
and
ss
pop
push
and
fists
and
xchg
orb
movsl
mov
icebp
dec
xchg
add
xchg
sub
lds
arpl
gs
xchg
or
jne
mov
lods
xchg
mov
adc
lods
ss
cmp
shrl
or
add
and
mov
pop
or
sub
push
sbb
xchg
pop
pop
adc
iret
or
xor
hlt
xor
insl
icebp
mov
mov
dec
cmp
mov
data16
testl
insl
jmp
aaa
mov
sbb
sub
fiaddl
add
adc
push
cwtl
xor
fdivs
iret
movl
lcall
inc
xchg
out
adcb
xchg
out
or
ror
pop
add
pop
fst
or
inc
and
ja
push
push
mov
sub
daa
and
rol
es
es
cmc
push
mov
mov
cs
adc
or
ljmp
sbb
add
loope
cmpsl
mov
add
lcall
mov
or
pop
pusha
mov
adc
sbb
shl
mov
lods
fistl
scas
cs
sbb
ret
cmpsl
sbb
jns
bound
or
inc
xchg
jnp
push
pop
jno
push
imul
jmp
and
mov
pop
notb
cmp
loopne
loopne
pusha
js
pop
lcall
shl
add
adc
ficompl
testl
xor
add
xor
outsl
push
sub
popa
pop
movsl
aam
lret
mov
add
into
or
jp
dec
adc
adc
sti
setns
sub
pusha
xchg
lock
test
or
push
ret
dec
push
js
stos
jg
sub
and
mov
daa
pop
mov
mov
aas
and
cmp
pop
and
jo
and
sub
cltd
pop
sbb
leave
mov
xor
or
push
outsl
rcll
ret
fldcw
rorl
mov
mov
push
fs
adc
xor
and
mov
push
lret
neg
ret
loopne
mov
or
and
mov
pop
inc
in
xchg
loop
imul
push
inc
cmp
movb
mov
add
fcomip
push
adc
jmp
mov
mov
movsl
test
cs
jo
sub
jo
lods
xchg
adc
andb
cmc
inc
ja
xchg
shll
xchg
or
bound
ss
push
test
fnstsw
das
add
mov
or
sub
mov
and
fstps
fildll
adc
je
mov
pop
adc
addr16
sub
pop
adc
push
inc
xlat
sahf
lods
xchg
jmp
imul
mov
pop
add
sbbb
or
adc
cs
mov
dec
mov
or
pop
xor
out
sbb
mov
pop
je
loope
adc
jbe
xorl
sti
jnp
bound
rorb
or
pop
psraw
ret
jge
sub
popf
fbstp
push
dec
mov
pushf
adc
int
ss
pop
or
cmpl
cld
hlt
sbb
arpl
popa
daa
add
jmp
sbb
in
aas
add
mov
xor
push
je
test
repnz
push
lret
and
lods
xlat
imul
andl
movsb
sub
dec
subl
lock
in
inc
push
push
idivl
xchg
mov
jno
loopne
in
jo
pop
pop
jo
xor
in
cwtl
xchg
jl
pusha
mov
sub
xchg
mov
dec
or
call
dec
add
pop
sbb
jo
cmp
mov
add
dec
mov
push
dec
mov
arpl
aaa
out
and
mov
popf
fdivrl
fadds
and
and
test
xor
cmp
or
repz
sub
xchg
xchg
sub
inc
or
imul
sbb
mov
dec
fmull
adcl
add
out
mov
iret
and
add
xor
lods
out
ds
inc
dec
cmpsb
cmc
and
movsb
or
and
sub
mov
cmpsb
jb
and
into
enter
gs
fcoml
rorb
hlt
daa
fists
mov
mov
outsl
lret
add
into
and
bswap
shlb
sbb
adc
and
in
dec
mov
pusha
stos
or
mov
inc
loope
jecxz
mov
jmp
jecxz
adc
inc
mov
pop
scas
cld
loope
jo
ljmp
pop
mov
xor
lcall
cmp
test
add
in
stc
iret
aad
insb
lret
sbb
fldl
loope
jo
addr16
xchg
jb,pn
and
lock
movsl
lret
push
adc
jo
repz
adc
sub
call
mov
out
mov
xlat
dec
or
cmpb
popf
lcall
sahf
scas
addr16
cld
and
adcb
add
mov
pop
add
adc
mov
push
les
push
neg
jns
mov
jp
out
mov
xor
pop
dec
xor
jecxz
pop
lock
setg
cmc
jg
add
inc
scas
jecxz
push
das
add
and
add
xor
dec
push
inc
xchg
cmp
cmp
push
push
dec
icebp
in
mov
faddp
sbb
or
add
pop
sbbb
jmp
mov
add
pop
mov
add
sub
ret
ja
lea
sbb
jo
pushf
lcall
scas
cmp
cmp
and
popf
jg
add
insb
out
add
jb
aad
sub
mov
sub
jl
dec
iret
or
dec
xorl
cwtl
or
addb
cmpsl
pcmpeqw
mov
shrl
dec
pop
test
sub
inc
fnsave
jge
jae
adc
fadds
push
sub
mov
xchg
into
enter
aaa
xor
lcall
xlat
add
sub
daa
or
call
adc
xchg
ret
dec
push
push
cmp
call
or
push
loop
dec
ds
add
dec
push
xchg
push
and
fdivrs
ret
push
imul
nop
test
mov
dec
lret
and
inc
pop
pop
cmp
nop
and
sbb
test
dec
jecxz
adc
inc
fdivs
and
mov
adc
and
fidivrs
xor
nop
loope
add
xlat
or
fmuls
testl
dec
push
add
inc
sbb
add
rcrl
add
inc
dec
ss
add
and
xchg
pusha
mov
out
sub
push
sub
leave
jns
inc
adc
or
jp
lds
pop
pop
and
iret
xchg
nop
scas
mov
lods
cmp
test
mov
rcrb
xchg
es
inc
testb
movsb
in
sub
lds
fidivrl
loop
dec
lret
movb
jno
mov
rcr
mov
add
stos
adc
js
or
pop
push
mov
dec
pushf
sub
mov
roll
pushf
test
dec
push
dec
xor
mov
xor
xchg
leave
imul
or
sbb
sub
mov
lahf
push
add
and
push
fcomps
arpl
dec
mov
movsl
mov
xchg
daa
out
sub
loopne
and
in
cmp
sti
test
fiaddl
inc
movsl
add
mov
lea
sbb
mov
cs
js
or
daa
pop
push
imul
xor
xchg
mov
es
add
por
scas
les
pop
adc
add
add
aad
or
xchg
inc
fwait
push
sahf
mov
sti
sbb
adc
in
cmpsb
fadd
jp
pop
pusha
ljmp
fisttpll
std
xchg
mov
mov
adc
lods
fadds
je
push
push
pop
shrb
aam
push
icebp
sbb
xor
ret
pop
sub
sbb
and
roll
and
movsb
fiaddl
add
push
in
jnp
xchg
cmpsb
adc
ficomps
test
lods
fisttpll
add
add
lds
adc
pop
pop
mov
fucomip
sub
jb
push
lods
or
or
push
push
mov
sub
rcrb
mov
popf
and
clc
popa
mov
push
adc
mov
rcrb
lea
jo
clc
sahf
das
je
or
or
addr16
add
dec
mov
mov
add
ror
add
gs
or
lret
aam
xchg
loopne
addl
jg
and
adc
inc
and
fstl
mov
scas
or
or
push
cmp
sar
leave
ffree
pop
mov
and
inc
lods
sbb
cmp
arpl
sarl
pop
add
sbb
cltd
inc
shlb
pushf
add
inc
add
xchg
rorl
fwait
push
push
repz
es
mov
nop
add
sub
pop
out
inc
arpl
out
sub
lock
js
adc
and
push
push
enter
lret
xor
sub
mov
call
jp
xchg
add
sbb
mov
or
adc
arpl
sbb
mov
in
add
iret
cmpsb
ljmp
xchg
add
gs
pop
or
dec
mov
adc
outsl
scas
inc
mov
pop
push
scas
push
outsl
cmp
int
out
and
or
jmp
addl
mov
std
rcrb
and
jecxz
pop
icebp
push
inc
xor
es
push
shrb
xor
cmp
pushf
xchg
iret
cmp
dec
mov
jmp
xchg
popf
imul
or
sbb
movsb
and
sub
dec
pop
out
pop
add
sub
inc
pop
or
mov
icebp
adc
push
jle
add
leave
sub
adc
outsb
subl
hlt
or
movsw
inc
mov
daa
or
jecxz
cmp
roll
stc
adc
pop
sub
adc
pop
adcl
inc
lret
dec
inc
pop
mov
sub
cmp
sbb
sbb
ret
cmp
in
fs
lods
lahf
out
arpl
push
stos
nop
lret
cmp
pop
movl
cmp
dec
cmp
push
shll
add
mov
xchg
or
mov
inc
loope
inc
lock
loope
mov
pop
mov
jbe
cmp
cld
adc
inc
stc
rcll
sbb
inc
es
mov
push
mov
fcoms
lea
mov
das
adc
les
stc
lods
add
mov
mov
sub
dec
roll
data16
cltd
lock
mov
movsl
add
test
push
pop
dec
mov
ljmp
and
xor
add
add
push
cltd
dec
add
sti
add
test
add
adc
jb
cmp
mov
enter
mov
push
repnz
ret
stc
add
stos
mov
rolb
mov
ret
xchg
or
inc
jb
incl
jp
or
lds
lods
arpl
inc
push
mov
add
out
add
inc
or
repnz
out
add
dec
ret
jne
xchg
push
rcl
mov
ds
es
mov
stos
aaa
push
push
lret
lahf
add
xor
imul
mov
sahf
sub
mov
fstps
mov
cmpsl
imul
aaa
dec
ljmp
sbb
mov
mov
add
js
pop
pop
stos
xlat
inc
cmp
loopne
lcall
cmp
popf
sbb
sahf
pop
adc
lods
jbe
add
dec
je
test
and
sub
cmpsl
aam
pop
aaa
lock
movsl
stos
mov
xor
push
test
or
adc
adc
xchg
shrb
jl
cmp
jle
pop
in
pop
xorl
push
cwtl
jmp
push
pop
inc
in
in
sbb
add
popa
dec
sbb
inc
out
lcall
jb
adc
out
jp
add
and
das
ret
inc
adc
and
mov
cli
add
jmp
test
loop
add
ret
iret
iret
out
lahf
pushf
mov
movsl
and
jle
cwtl
iret
imul
scas
adcl
xlat
lret
jle
or
std
loope
mov
adc
and
jno
cmp
sbb
and
cmp
inc
mov
or
scas
negb
pop
scas
xchg
mov
les
sbb
imul
rcrl
add
notl
mov
sahf
jns
push
addr16
jno
lods
xor
mov
add
xchg
shlb
sub
fsub
lods
push
scas
data16
cwtl
leave
pop
mov
loopne
xchg
data16
add
cmp
push
cli
bound
shrl
mov
mov
cmpb
xchg
pop
cmp
pop
mov
aam
pop
cwtl
cmpsb
outsl
lock
in
movsl
jno
xor
sbb
aaa
mov
out
jge
ret
xor
mov
idivb
xchg
mov
mov
mov
lods
adc
call
jge
dec
iret
in
mov
lock
push
shrb
dec
stos
mov
sub
xor
dec
lret
das
mov
inc
push
sub
cmp
xlat
cs
xor
cmp
aas
orl
iret
jne
lds
test
dec
cmp
scas
or
insl
iret
nop
sub
add
int
ss
and
ffree
sub
cmp
pusha
adc
dec
icebp
jecxz
movsb
cmp
pusha
pop
cltd
jno
imul
not
call
loop
insl
rolb
imul
jl
adc
add
add
add
aad
fcmovne
popa
xchg
xchg
fdivs
repnz
xlat
cwtl
inc
xor
sbb
add
inc
adc
sbb
or
out
test
add
adc
js
mov
lcall
loopne
adcl
aas
mov
pop
pop
push
pop
jno
xor
and
jmp
adc
outsb
out
pop
xor
lcall
pop
call
add
popf
xor
cmp
adc
add
jo
adc
out
jle
imul
idivb
push
sbb
lock
aam
jbe
and
or
add
adc
js
in
jo
mov
stos
jae
inc
adcb
sbb
mov
jl
inc
gs
sti
sbb
cmp
fadds
inc
pop
pushf
cmpl
push
jo
daa
jle
pop
and
adc
ss
test
cmc
lock
bound
loope
enter
repnz
jnp
aad
jo
push
mov
push
add
mov
ds
sarb
pop
daa
and
push
ljmp
pop
mov
orl
xor
jbe
xor
and
xor
sbb
dec
dec
mov
xchg
shlb
aad
test
or
shrl
mull
int3
push
leave
cli
rolb
movhps
add
out
mov
or
sub
mov
test
mov
add
inc
ss
cmpsl
sbb
and
inc
push
or
jecxz
les
add
mov
or
or
pop
fnstenv
es
pop
jb
pop
push
loop
or
dec
es
pop
imul
aam
out
xor
pushf
insl
push
cs
pop
and
stos
lahf
test
mov
inc
adc
iret
jns
add
sbb
mov
lret
mov
leave
cmpsl
sub
inc
daa
call
rolb
jnp
ficoml
inc
aad
popa
or
push
or
xor
lret
add
jge
mov
push
arpl
jo
xchg
orb
add
jo
sub
jge
add
xchg
mov
dec
loope
test
mov
sarb
cmove
sbb
add
jne
add
inc
sub
jmp
xchg
sti
addl
hlt
xor
push
adc
rclb
lcall
sbb
mov
or
mov
lods
movsl
add
popf
dec
ret
and
mov
es
cmpb
cli
nop
xlat
adc
aaa
iret
xor
out
clc
iret
js
arpl
or
loop
movsb
pop
jecxz
cs
and
jbe
jmp
ror
data16
jno
outsl
call
inc
adc
push
xchg
lods
lret
add
bound
and
sbb
pop
addl
pop
pop
loopne
mov
stos
movsl
leave
ret
addl
mov
jae
aad
aad
sbb
dec
ficomps
cpuid
les
dec
push
stc
lea
push
cmpsl
pop
imul
or
xlat
pop
add
outsl
cmp
sbb
pop
xchg
add
cmpsb
test
add
cli
in
sbb
fsubl
add
loop
mov
sbb
cld
fildl
mov
mov
mov
repnz
pop
ret
sbb
ss
and
cmp
jl
out
mov
clc
and
xchg
popf
jg
push
pop
adc
imul
sub
fwait
hlt
int
add
shlb
cmp
arpl
mov
test
call
sub
loopne
loop
ficompl
pop
popf
cmp
pop
aam
add
pop
mov
mov
aas
popf
loopne
loopne
orl
aaa
mov
and
inc
fimuls
mov
movsb
sbb
movsb
pushf
fsts
xchg
mov
ficoml
dec
xor
fldl
or
push
cmpsl
xchg
dec
sub
and
sub
mov
and
pop
aas
sarl
adc
sub
outsb
inc
and
sub
xchg
or
int
pop
mov
lret
or
jne
or
loope
pop
adc
fwait
aam
xor
push
shlb
inc
pop
jo
sub
out
gs
push
loop
roll
mov
lods
rcrl
add
or
push
repz
mov
ret
imul
push
repz
jp
adc
call
imul
add
adc
repz
sbb
xlat
scas
cmp
or
imull
mov
pop
push
jp
lret
ja
sub
lods
mov
rorl
movq
and
pop
add
sbb
ret
sahf
mov
xlat
mov
xchg
inc
pand
and
mov
pop
daa
add
and
xor
fsubrs
and
mov
add
mov
cmpb
xchg
xchg
hlt
xchg
push
jmp
inc
out
outsl
adc
push
das
stos
iret
jne
pop
loop
sarb
adc
add
fcoms
lods
sub
xchg
clc
popa
sbb
hlt
sti
or
dec
push
outsb
adc
dec
mov
pop
test
or
and
xchg
inc
pop
insb
sbb
pusha
lock
xchg
nop
inc
add
mov
mov
add
and
pop
test
mov
push
js
sub
dec
jne
xchg
pop
pop
xchg
pop
data16
scas
xor
add
mov
dec
adc
ffree
sub
pop
dec
iret
fcoms
push
inc
test
or
aaa
and
inc
mov
enter
xlat
push
or
cmp
add
js
sub
xor
mov
sti
cwtl
les
sub
daa
insb
fsubs
mov
push
xchg
cvtdq2ps
xchg
mov
add
mov
addb
pop
or
lods
leave
sub
pop
test
pop
add
clc
aam
cld
add
jo
je
cmp
test
xchg
dec
test
adc
xchg
mov
and
adc
push
idiv
xchg
inc
insb
lea
cmp
xor
xorl
stos
nop
xlat
inc
stc
pop
cmp
mov
nopl
jnp
cltd
mov
and
cmp
fldt
xor
push
je
inc
inc
mov
mov
ljmp
inc
or
or
and
pop
lods
sbb
inc
imulb
dec
mov
test
sbb
inc
xor
test
stos
lds
ret
lods
mov
orl
jmp
fistl
gs
cmp
rclb
fsts
xchg
sahf
or
inc
add
addl
or
mov
mov
out
push
mov
pop
inc
int3
and
mov
js
pop
xchg
pop
dec
jg
push
jl
nop
cmpsl
dec
sub
sub
dec
adc
fidivrl
out
clc
rcl
and
lahf
scas
negb
sbb
xlat
pop
cmp
push
xor
jp
jo
pop
dec
fisttpl
adc
adc
sarl
sbb
cmp
xchg
pop
shlb
dec
ds
mov
aaa
aam
xchg
insl
out
xor
out
jle
pop
push
push
dec
sub
or
sub
popf
out
test
xchg
and
pusha
pop
setae
sbb
add
jmp
lods
xlat
clc
pop
pop
add
or
and
shll
xchg
inc
mov
insb
pop
cltd
loop
stos
lock
fdivrs
push
mov
jnp
xchg
push
popf
leave
or
lds
pop
add
test
sub
xchg
xchg
xlat
ret
jb
xchg
inc
loopne
inc
or
insb
add
pop
or
into
repnz
inc
lret
pop
xlat
mov
cmp
mov
sub
or
xor
shrb
mov
xchg
fprem1
and
xlat
push
hlt
cmpsb
cmc
sub
pusha
jl
sub
cmpsb
call
gs
popa
or
addr16
dec
and
and
jge
sbb
push
das
loop
mov
jle
popa
mov
add
cmp
test
xchg
add
cmpsl
and
or
lods
jmp
test
call
sahf
pop
mov
xor
lods
and
repz
cmpsb
add
adc
fldl
bound
imul
inc
jmp
xor
shl
cli
add
xlat
enter
mov
jp
and
icebp
lock
js
ret
mov
ljmp
inc
imul
dec
lods
add
mov
cmp
sbb
mov
stos
add
test
or
mov
or
fisttpll
and
aaa
and
mulb
mov
dec
and
xorl
or
int3
xchg
aas
lea
push
pop
lret
add
repz
add
xchg
jo
jne
sub
xor
mov
pushf
mov
sub
test
adc
mulb
jno
jmp
xor
cltd
push
lea
mov
push
dec
mov
push
sti
mov
aaa
fimull
fstp
sbb
sub
rclb
pop
imul
mov
jle
dec
je
sbb
decl
loopne
jno
xor
cmp
ficompl
mov
repnz
mov
adc
sbb
push
popf
or
in
mov
push
data16
or
pushf
fwait
adc
mov
xchg
add
imul
shlb
sbb
or
lahf
das
pop
loop
fbstp
push
cmp
jo
int3
shl
cmpb
ret
and
pop
xchg
ds
cmp
mov
aad
nop
pop
sarb
and
stos
push
ds
mov
jbe
mov
cmp
cmp
add
xor
subb
sub
lcall
or
xor
jmp
in
imul
xor
xchg
adc
and
test
push
sub
add
cmp
or
leave
faddl
sub
or
inc
dec
mulb
inc
das
in
dec
mov
ret
jecxz
or
andl
fiadds
es
pop
ret
lahf
and
push
in
stos
push
jno
cmp
clc
mov
lcall
cmc
cmp
ds
mov
xchg
subl
jno
stc
dec
adc
add
mov
fldenv
aaa
fcomps
sbb
add
pop
lahf
pusha
cmp
ja
mov
ret
ret
mov
mov
in
test
int
cmp
dec
push
push
dec
sbb
mov
add
js
xor
adc
sub
mov
dec
mov
sub
imul
stos
int
push
ds
push
push
fimull
subb
pop
adcl
mov
int3
mov
pop
sarl
or
jecxz
std
sbb
jecxz
stos
stc
negb
adc
test
push
or
add
sub
repz
push
adc
and
xor
mov
fcomip
mov
loopw
test
mov
mov
das
sub
mov
adc
sub
int3
push
push
or
repz
in
test
push
iret
sub
pop
mov
add
mov
sub
pop
cs
in
jge
andb
xor
jp
int3
or
add
ret
push
pop
and
mov
mov
mov
pop
xchg
or
push
mov
movsl
dec
stos
in
iret
rcrl
test
add
pop
sbbb
pop
push
inc
popa
xor
mov
or
loopne
das
cmpl
iret
xchg
mov
dec
mov
cmpsl
add
orb
aad
ds
inc
pusha
js
pop
dec
push
nop
inc
jg
clc
imul
sbbl
cld
mov
xchg
push
dec
inc
push
lods
hlt
popa
imul
ja
fs
xchg
adc
add
xor
scas
daa
xchg
bound
push
or
fmuls
mov
sub
aaa
icebp
jo
mov
int
xchg
push
arpl
and
lahf
push
fbstp
mov
lds
ljmp
stos
jge
xchg
mov
push
clc
loop
aaa
in
xchg
js
loopne
mov
pop
lcall
scas
popa
imul
daa
adc
cmpsl
notl
shrl
test
inc
jg
scas
ja
mov
add
and
mov
cmpsb
sub
xchg
lock
mov
mov
in
add
dec
jl
pop
movsb
lock
mov
lock
add
inc
sub
pop
lods
es
clc
mov
sbb
icebp
adc
fidivrl
rolb
shll
test
jmp
pop
mov
ret
jb
or
hlt
inc
daa
mov
or
xchg
pop
and
cmp
incl
or
jl
inc
das
lahf
lret
daa
xchg
dec
stos
imul
push
xor
test
push
enter
aas
ret
fstpt
add
sbb
loop
cmp
notl
mov
push
cltd
inc
jge
cs
imul
lahf
jp
mov
and
aaa
or
xor
pop
or
test
xor
flds
test
jp
sub
sub
in
dec
cmp
mov
pop
aaa
fldenv
mov
mov
cmpsl
aas
and
cli
sub
sbb
and
push
lahf
sub
mov
cmp
pop
loope
xlat
data16
addl
add
adc
lret
and
out
jno
je
xor
into
jae
inc
ret
push
push
repz
cmp
or
cmp
sub
xchg
adc
sahf
pop
mov
ds
mov
rol
sub
or
add
push
add
testl
inc
out
or
imul
or
mov
jne
ja
adc
jae
or
push
outsb
mov
xchg
rcrb
jnp
das
iret
or
cld
jo
dec
repz
testl
push
fsubs
push
subl
mov
lds
lock
dec
in
jp
mov
adc
fisttpl
inc
sbb
sub
clc
cmp
ret
or
mov
sbb
lea
add
push
push
fmuls
dec
inc
out
fwait
sub
or
outsl
lods
inc
dec
inc
mov
mov
pop
es
inc
mov
cmpsb
test
push
xor
xchg
nop
xor
mov
add
sbb
mov
imul
gs
iret
aad
adc
inc
cwtl
or
add
mov
cs
add
push
pop
xchg
fs
iret
cld
mov
sub
xor
and
jle
inc
mov
mov
test
add
hlt
jne
sub
scas
icebp
bndstx
push
and
and
or
inc
lea
rcll
inc
ret
adc
mov
addb
sub
stos
sti
test
inc
inc
cmp
jecxz
testb
pop
adc
loopne
subb
inc
xor
lods
sub
or
stos
push
fwait
pusha
mov
repnz
pop
hlt
dec
outsb
jp
int
testl
add
mov
inc
repnz
arpl
pop
or
js
mov
dec
inc
or
add
popf
xor
or
xorb
rorl
push
sub
push
fsts
in
fnstsw
sahf
mov
push
dec
loopne
pop
cmp
sub
js
dec
mov
xchg
test
insb
loop
xor
or
orl
pop
inc
frstor
sahf
into
iret
cmp
aaa
mov
inc
add
and
inc
cmp
add
push
pop
test
adc
mov
cmpl
dec
or
sub
jo
lods
or
lods
movsl
aas
adc
sbb
daa
inc
inc
je
xorl
sbbl
and
shlb
mov
or
xor
js
outsl
push
push
adc
mov
xor
push
cmovle
imul
mov
jo
mov
sub
loopne
out
mov
ret
sub
adc
dec
xbegin
sbb
daa
add
pop
mov
dec
pop
js
test
stos
ror
outsl
xor
andb
push
orb
popa
mov
mov
add
movsl
fwait
movsb
daa
add
adc
movl
or
dec
pop
dec
inc
out
mov
add
loopne
cmp
xchg
sub
mov
lahf
inc
jmp
cli
rorb
enter
loope
sub
test
inc
fsub
lret
sbb
lea
cmp
incl
dec
in
adc
jns
lcall
addl
roll
inc
mov
mov
pop
mov
arpl
add
gs
mov
jmp
icebp
xor
jo
test
sbb
cli
insb
popf
sub
dec
pop
and
dec
loop
sahf
push
xchg
gs
xor
mov
cs
lahf
lcall
xchg
rorb
adc
data16
push
pop
loop
or
roll
dec
xchg
xor
sub
and
ret
hlt
adc
push
pop
imul
test
adcl
cwtl
dec
movsl
xchg
sbb
push
xor
fldenv
mov
inc
xchg
lret
pop
or
sbb
rorb
mov
add
aas
push
sub
scas
cmp
call
inc
jns
test
rolb
push
sub
popa
xchg
push
xor
dec
jecxz
mov
cmovge
xchg
fldenv
sarl
hlt
lock
stos
push
cmp
dec
insb
ss
xchg
push
add
mov
inc
and
and
mov
mov
popf
ss
lea
leave
iret
or
cltd
ret
mov
int
pop
cmp
sbb
aas
push
pop
or
jo
jmp
js
icebp
lahf
mov
lret
mov
mov
iret
test
pop
subl
dec
popa
cmp
mov
or
pop
jmp
mov
movsb
sbb
sub
cmpsb
cmp
call
repnz
xor
gs
das
adc
add
cld
ret
pop
scas
sbb
scas
and
adc
stc
xorb
adc
mov
es
test
and
adc
jmp
add
sbb
add
cmpsl
inc
and
cld
std
xchg
sbbb
ljmp
fidivrs
test
daa
or
inc
insb
adc
mov
pop
adc
push
out
pop
fcmovnb
loopne
inc
adc
and
adc
scas
outsl
pop
mov
loope
stos
xchg
xchg
push
add
leave
test
iret
int
daa
add
push
pop
adc
movsl
enter
push
dec
mov
repz
movsl
mov
test
in
ja
pop
mov
lods
and
xor
mov
or
adc
mov
xor
cmp
xor
rorl
jmp
mov
out
mov
add
push
push
and
mov
add
incb
lods
lret
or
jno
push
sub
nop
push
mov
or
test
rorb
mov
roll
xor
lret
push
inc
and
xor
add
inc
dec
sti
mov
sbb
jne
adcl
sub
incb
pop
sub
rcrl
xchg
std
add
xchg
ret
insl
adc
das
stos
test
je
mov
xor
inc
xchg
or
sbb
rcl
inc
inc
ret
mov
cs
movntps
or
and
in
or
dec
ss
pop
and
xor
call
pusha
shlb
pop
in
mov
cwtl
clc
and
repz
sbb
pop
outsb
roll
jno
push
cmp
sub
stos
or
cmp
cmp
sbb
outsb
fwait
pusha
mov
sub
add
pop
mov
mov
mull
push
mov
subb
sub
lods
dec
fsubrs
cmp
add
shl
mov
loop
and
pop
out
nop
nop
mov
stos
popf
lods
mov
loope
bound
fsts
xor
or
add
mov
mov
cwtl
aad
loope
pusha
cmp
dec
push
gs
shrb
int3
cld
mov
push
xchg
mov
sub
mov
cmp
gs
imul
push
xchg
mov
shr
pop
add
pusha
inc
nop
arpl
enter
shr
inc
out
sub
call
pusha
adc
mov
rol
add
cmp
shl
jmp
push
lret
add
sub
mov
je
aad
mov
ja
mov
mov
loop
mov
ja
xchg
xchg
rclb
xor
push
aaa
push
mov
mov
nop
push
fisubrs
sub
femms
test
loope
dec
out
mov
xor
mov
iret
jbe
fs
es
pop
and
fildl
and
iret
push
push
call
xor
xor
andl
aad
xor
push
push
push
inc
int
movsl
xorb
sbb
or
scas
shl
nop
xchg
iret
mov
inc
lods
xchg
pavgw
out
or
inc
mov
add
jge
pop
xor
jge
mov
push
mov
leave
add
and
sub
add
mov
lock
xlat
push
sub
mov
jmp
inc
iret
mov
insl
inc
mov
inc
add
jo
cmpsb
mov
lahf
sarl
jecxz
jo
sbb
jle
and
test
mov
or
inc
repz
sbb
cmpsb
mov
iret
mov
jmp
push
mov
add
aam
add
dec
cmpsl
adc
dec
add
aas
iret
mov
popf
call
test
add
dec
test
xchg
fidivrs
jmp
xchg
mov
loopne
add
sbb
out
xchg
icebp
jmp
pop
arpl
mov
cmp
ret
rcr
les
nop
adc
jnp
pop
ja
or
pop
adc
movsb
les
cmpsb
addl
mov
clc
das
sub
or
aaa
add
insb
or
insb
dec
xlat
in
js
jle
pop
jno
sahf
ficoms
add
pop
dec
neg
ficoml
test
stc
addb
addb
add
lahf
mov
add
jo
jmp
adc
scas
push
sbb
or
sub
into
pop
les
sub
xchg
ficompl
sub
lods
jp
pop
pop
aas
pop
adc
js
movsl
fisttps
push
jp
cli
enter
add
adc
mov
test
sbb
pop
jecxz
jno
movsl
dec
xor
roll
bound
test
ja
notl
out
pop
push
test
stos
je
add
or
dec
das
mov
fildl
sbb
jne
cmp
mov
push
pop
lds
pop
jnp
decl
rcll
sbb
push
dec
mov
inc
xlat
insl
xor
pusha
dec
in
jno
jmp
pop
inc
iret
popf
push
fstl
jbe
push
xchg
push
jle
dec
push
sub
mov
popf
loopne
or
add
outsb
test
sub
pop
sub
dec
icebp
pop
add
sub
rol
filds
xchg
pop
xor
or
push
and
fcoms
add
fisubs
cmp
sahf
sar
xor
fnstcw
dec
cmpsl
mov
fidivrs
xorl
inc
test
icebp
or
and
enter
and
out
test
mov
adc
mov
imull
mov
loope
mov
pop
fldcw
sub
sub
iret
or
aad
dec
test
shll
push
es
inc
mov
push
mov
js
mov
mov
xor
outsb
gs
lea
ja
mov
mov
dec
inc
out
pop
ret
orb
and
shrl
shll
add
xchg
mov
add
sbb
call
jle
clc
jmp
sbb
jns
xchg
or
cmpsl
or
mov
test
ficoml
inc
and
movsl
pop
adcb
dec
insl
or
lret
loopne
push
add
mov
rol
add
rorb
lahf
lods
mov
xlat
leave
jbe
mov
add
shlb
xchg
adc
mov
mov
mov
fbstp
and
and
cwtl
hlt
push
std
pop
call
or
inc
test
jo
adc
das
insl
xorb
out
fwait
inc
pop
cmp
mov
xchg
or
sarb
add
out
rorl
xchg
cmp
imul
adc
call
add
stos
add
sub
daa
decb
and
out
push
mov
shll
je
xchg
sbb
es
push
stos
xchg
ret
inc
sub
jp
jae
push
shlb
int
mov
int
add
adc
adc
loop
pop
sub
sarb
push
shrl
jo
out
mov
add
cmp
shl
add
ja
cs
je
add
xchg
cmp
addr16
popa
add
sub
sbb
xorb
stos
cmc
and
test
stc
sub
lods
int
add
and
in
mov
call
es
movsl
sub
cmp
test
pusha
je
push
pusha
inc
mov
add
pop
jne
jbe
popf
cmpsb
inc
out
out
add
mov
cmpsl
imul
jl
sbb
and
cmpsb
pop
or
ja
andl
dec
push
push
imulb
or
add
pop
lods
xchg
lock
cmp
or
ljmp
sbb
jp
pop
jge
outsl
test
iret
adc
aaa
out
daa
inc
outsl
hlt
cmp
xchg
iret
dec
mov
sbb
and
xchg
mov
jnp
imul
hlt
arpl
test
lods
inc
cmpb
xor
mulb
inc
es
out
movl
lret
ret
mov
and
inc
adc
test
mov
test
mov
xchg
add
movsl
jp
gs
xor
cmpsl
or
or
cmpsl
repz
add
out
add
jb
ret
pop
cwtl
or
cwtl
sbb
lods
sub
ret
xor
xor
bound
testl
loopne
daa
sub
adc
pop
outsb
and
loope
inc
dec
testl
sub
or
add
or
push
push
dec
sub
mov
jnp
or
fcompl
bound
push
testb
dec
sub
jg
pop
pop
inc
filds
pop
into
and
pop
fstp
out
sbb
test
es
and
mov
aam
ja
sbb
or
scas
adc
xchg
push
xor
sub
add
inc
sbb
arpl
xorb
outsl
aaa
xor
mov
pushl
cmpsl
mov
add
xchg
pop
cld
test
fidivs
add
rclb
mov
xor
adc
clc
adc
dec
pop
add
daa
mov
iret
or
xchg
pop
add
pop
or
push
fs
pop
add
rcrl
mov
mov
pushf
mull
repnz
or
int3
mov
scas
rolb
mov
and
int3
jge
jo
and
pop
idivl
fistl
fimull
pop
fisttpl
add
pop
jl
pop
andl
out
jbe
lds
stos
mov
iret
add
ljmp
loopne
les
je
rcll
outsl
mov
incb
sti
fimuls
ffreep
lods
aad
pop
daa
sarb
sbb
inc
ss
jp
mov
jns
jge
dec
add
jae
pushf
test
push
mov
xorb
mov
jmp
xlat
add
rcll
lock
mov
in
push
outsb
add
mov
insb
shr
jmp
stc
xlat
or
std
sub
outsb
adc
stc
cmp
add
xchg
xor
jecxz
sub
sbb
sub
or
pushf
fsubl
into
xor
add
daa
inc
sbb
add
loopne
repnz
jne
call
sbb
mov
pop
add
mov
in
repnz
xlat
jo
fwait
xor
addr16
fwait
imul
and
or
xchg
in
incb
xchg
addr16
lods
lret
pop
and
push
xchg
arpl
add
or
inc
icebp
fdiv
and
sbb
std
fwait
sbb
bound
cmp
jnp
test
sub
or
ss
cmp
sub
lret
sti
jge
cli
dec
arpl
mov
mov
call
dec
mov
test
add
movsb
adcl
inc
mov
ja
or
sbb
fwait
fwait
stos
push
cmpsl
adc
cmpsl
or
mov
cmp
pushf
cld
out
pop
rol
mov
fwait
scas
add
fistl
call
test
sub
jns
clc
jne
dec
in
mov
jno
mov
mov
adc
popl
pushf
mov
push
repz
shlb
mov
insb
orb
inc
sub
inc
fs
push
jns
push
outsb
pop
mov
xchg
sub
push
clc
lea
addr16
cmp
mov
ss
or
mov
mov
or
xchg
push
in
das
bound
lahf
and
push
add
adc
sub
lcall
je
xorb
scas
pusha
daa
pop
cmp
cmc
jne
movsb
pop
pop
int
fwait
rolb
test
sub
pop
mov
mov
sbb
mov
aam
pop
xor
and
in
lahf
dec
sub
out
icebp
test
and
adc
nop
loope
and
ficoml
out
jno
xor
out
jo
mov
jg
inc
dec
or
pop
lock
mov
mov
nop
and
dec
sub
and
daa
inc
scas
cltd
push
dec
dec
or
sbb
jo
addb
pop
flds
adc
les
push
les
jle
fdivrl
dec
sub
xor
inc
inc
xchg
or
inc
add
mov
mov
insb
cli
or
mov
mov
les
mov
mov
jecxz
and
cmp
mov
cwtl
adcb
test
cmp
bound
and
jb
stc
xchg
push
jo
dec
mov
outsl
add
aaa
jbe
xchg
loop
scas
dec
xlat
xlat
xchg
sbb
xor
sub
dec
jb
in
adc
mov
pop
jbe
and
stc
mov
xor
cmp
dec
mov
mov
push
push
mov
ss
cmpl
jo
pop
icebp
xchg
shlb
aas
pop
outsl
cmp
push
or
outsb
xchg
add
bound
jl
mov
iret
push
iret
pop
push
xlat
mov
push
cmp
je
insb
sbbl
out
stos
mov
dec
fsubrl
out
jle
pop
mov
stos
push
mov
pusha
arpl
ss
cmp
shl
imul
sub
xor
addr16
add
mov
out
scas
out
jmp
sbb
mov
sbb
aas
pop
sub
sbb
loopne
add
cmp
add
lret
adc
mov
mov
jno
pop
adc
test
sbb
and
stc
pop
popa
mov
pop
jge
sub
cmpsl
sub
call
arpl
ret
andb
insb
jo
and
ret
in
and
dec
and
and
shlb
daa
cmp
ja
lahf
fcompl
sub
stos
jl
mov
xor
push
inc
daa
cmc
jne
pop
sub
pop
mov
test
in
and
mov
inc
jo
add
pop
cmp
hlt
loop
out
addb
stos
out
push
shl
loopne
imul
sub
fsubrl
pop
mov
lods
sub
xor
into
div
mov
testl
or
push
in
and
lret
pop
bound
sbb
scas
add
cmpsl
mov
mov
push
out
xchg
in
insb
std
rcl
mov
dec
cld
pop
jp
imul
repz
lock
push
jne
lods
pusha
inc
sar
dec
rcrb
pop
xchg
call
and
xchg
and
push
inc
or
out
inc
enter
pop
dec
rcll
fbld
lcall
dec
and
stc
add
in
or
mov
addl
ret
add
pushf
mov
sub
ror
pop
mov
mov
xchg
stc
cld
enter
loop
sahf
add
pop
mov
loop
add
mov
cmpsl
ja
xchg
pop
movlps
iret
push
jmp
sub
fnstcw
or
loope
add
push
loope
lahf
sub
orl
outsb
mov
pop
stos
mov
out
jo
das
mov
pop
and
adc
push
mov
xor
out
sbb
movsb
outsl
pop
lods
enter
ret
cmp
repnz
mov
jb
lcall
or
cmp
xor
dec
or
add
xchg
push
fcoms
repz
int
xchg
xchg
andb
and
popa
jbe
adc
xchg
pop
enter
jmp
pop
dec
sub
int3
ror
or
jg
mov
adc
mov
add
hlt
sub
or
mov
fldt
push
inc
pop
popa
or
mov
rcl
dec
cmp
lahf
mov
aas
push
stos
insb
cltd
or
sahf
stos
add
and
adc
stos
imul
push
inc
sbb
add
insl
pusha
popf
add
mov
test
xchg
pop
hlt
dec
jp
sbb
insl
and
bound
inc
add
popa
add
mov
hlt
cltd
jle
sbb
popl
jg
addb
jg
popa
in
add
pop
add
cltd
cmp
testl
push
adc
and
dec
mov
jecxz
mov
xor
adc
adc
inc
cmpsb
or
xor
sarb
sbb
int
push
fwait
les
push
icebp
test
jmp
jae
shll
push
ss
and
xchg
out
imulb
stc
xchg
dec
rclb
push
add
jmp
shlb
repz
sbb
and
adc
jge
rolb
movsb
sub
pop
mov
and
pop
loopne
xchg
fisttpl
js
xor
outsb
mov
pop
andb
cmpsl
mov
push
and
test
jg
loopne
in
mov
icebp
sbb
addb
lods
add
jmp
jge
andl
add
jns
jg
xor
jae
movsl
fisubs
dec
sbb
pop
sti
stos
lods
fldenv
aam
fbstp
icebp
add
or
mov
mov
dec
stc
and
ret
dec
sub
lret
daa
push
or
push
cmp
pop
cmp
sub
ljmp
push
add
mov
mov
xor
into
adc
push
insl
fdivl
jge
punpckhwd
dec
sbbb
daa
pop
ret
mov
xchg
daa
push
xchg
arpl
sbb
out
fldcw
mov
out
imul
dec
rolb
cmpsb
shll
inc
inc
dec
outsb
daa
fisttpl
mov
movsb
jo
hlt
or
push
cmp
shrl
fidivl
pop
or
push
lds
pusha
mov
sub
movb
jp
addb
cltd
jge
ja
or
or
test
stc
pop
mov
xchg
clc
and
inc
arpl
cmp
loopne
dec
jae
cmp
cmp
stos
test
and
loop
imul
and
in
pop
imul
sbb
les
nop
outsl
inc
push
loope
cmp
movl
or
aaa
loop
cltd
in
clc
xchg
sub
jecxz
dec
add
rorl
scas
pop
rorl
mov
mov
mov
inc
ja
and
aam
dec
add
insl
into
iret
stos
fadds
iret
ds
mov
mov
pop
sbb
fmuls
cmp
add
fcoml
ss
dec
imul
push
mov
sbb
insl
popa
in
sub
mov
mov
test
in
xor
repz
inc
lea
test
push
hlt
add
lcall
push
pop
add
sbb
adc
sbb
fs
dec
in
cwtl
mov
xchg
ljmp
pop
xor
pusha
jns
or
xchg
adc
adc
sub
sub
dec
push
xchg
mov
mov
addb
add
hlt
push
pop
inc
push
outsb
mov
ss
ret
mov
insl
jno
sarl
aam
or
fisttpl
mov
push
pop
cmp
cmp
push
and
pop
sub
filds
add
subb
sub
fdivs
pop
or
in
jl
push
ljmp
mov
jle
mov
hlt
rol
jbe
mov
adc
push
xchg
xchg
push
sub
flds
add
xchg
xor
mov
mov
cmp
pop
add
lahf
dec
sbb
mov
pop
popf
int
insb
addl
test
push
push
js
scas
xchg
cwtl
cmpsl
mov
fwait
les
popa
and
cmp
sbb
cwtl
and
iret
or
fs
insb
push
cs
ret
dec
pop
fdivrs
daa
movsl
test
icebp
xchg
dec
xor
test
sbb
ds
pop
movsl
jno
faddl
scas
pop
test
or
jle
xor
ja
jl
adc
fnsave
jne
ret
sbb
sub
aam
push
int
dec
iret
mov
jle
out
js
jle
sub
mov
sbb
js
cwtl
dec
dec
cmp
insl
xor
fwait
div
pop
cmpsb
jo
jae
in
lock
sbb
mov
iret
adc
dec
sbb
pop
mov
arpl
xorl
mov
insl
in
push
cwtl
js
mov
xlat
test
dec
aas
stos
push
cs
mov
out
inc
cwtl
jno
aam
les
inc
xor
mov
jbe
fldenv
dec
aaa
add
out
aam
inc
jle
fs
mov
inc
stc
lret
xchg
jmp
or
or
mov
mov
add
jmp
gs
addr16
fnstenv
mov
sti
daa
pop
in
lahf
add
adc
inc
mov
adc
sbb
aam
test
mov
xor
and
outsl
ficoml
push
inc
sbb
mov
pop
test
dec
sbb
xchg
shl
and
add
push
push
jecxz
xlat
cmp
loop
iret
jb
in
sbb
loope
call
and
jnp
jle
jae
mov
sub
mov
adc
scas
mov
add
xor
out
pop
cmp
mov
fldenv
frstor
push
das
dec
or
mov
movsl
mov
sub
inc
scas
push
mov
fsubrs
or
fs
adc
daa
lahf
aam
or
xchg
iret
mov
jecxz
push
rcr
inc
or
clc
inc
jge
mov
rclb
xor
mov
jo
sub
out
in
sbb
adc
mov
jo
fdivl
pop
incl
cmpsb
jo
orb
mov
inc
movsb
xchg
icebp
in
push
jne
and
fistps
fisttpll
and
sahf
fs
sbb
filds
movsb
mov
das
scas
cld
jp
add
mov
arpl
or
sbb
mov
mov
int3
dec
mov
rclb
xchg
push
pcmpeqw
cmpsl
cmc
mov
stos
cmp
dec
inc
aaa
outsl
sub
les
xor
cs
mov
popa
jmp
push
mov
das
adc
and
sbb
in
xor
push
cs
xchg
popa
lcall
imul
pop
ljmp
cs
mov
stos
hlt
and
inc
insb
add
jbe
pop
and
mull
sti
or
jbe
push
stos
add
imul
or
pusha
sub
xchg
jg
mov
jge
and
pop
sub
loope
es
jecxz
xchg
adcl
cmp
lret
enter
mov
sub
xchg
pop
ljmp
cmp
pop
pop
mov
mov
or
jmp
icebp
jle
mov
orb
ror
mov
mov
jb
pusha
sub
imull
add
dec
sarl
hlt
pop
cmc
jno
aam
lret
push
inc
movsb
sbb
loop
ret
adc
loopne
movsl
scas
add
cmpxchg
daa
or
add
xchg
and
dec
sbb
cwtl
dec
aas
rorb
jo
mov
mov
addb
sbb
daa
push
popa
dec
loopne
iret
int
pop
lock
dec
xorb
cmp
jecxz
hlt
inc
jne,pn
sub
gs
faddl
adc
mov
loopne
int3
xlat
push
ret
ficoms
cld
scas
insl
repnz
in
push
pushf
scas
popa
add
stc
jmp
add
inc
or
inc
pop
jge
mov
push
jnp
xchg
pusha
fdivrl
mov
jne
or
enter
and
mov
add
cs
ret
mov
push
and
inc
test
add
jbe
push
es
out
fldcw
jo
iret
push
jns
mov
rorl
sub
outsb
movsl
mov
cmc
scas
xchg
lock
adc
nopl
inc
push
fwait
add
or
mov
aam
scas
daa
add
movsl
push
popa
xchg
cltd
mov
and
push
dec
xorb
cmc
mov
jo
shr
call
mov
icebp
stos
and
jbe
sub
out
inc
push
mov
cmp
ret
push
cmp
out
pop
rcl
popf
cltd
xor
aad
xorl
xlat
add
push
sub
je
loopne
jg
mov
int3
pop
jo
and
mov
push
and
pop
pop
cwtl
xlat
fmul
mov
mov
rcr
aam
inc
or
jbe
into
mov
push
ds
sub
xchg
or
movsb
int
adc
xchg
shrb
adc
jecxz
lahf
push
sub
in
pop
mov
lds
lock
arpl
push
insl
insl
data16
sbb
scas
sti
stos
ror
sub
inc
and
shl
dec
push
popa
cmp
push
jns
adc
dec
or
mull
popa
loope
sahf
inc
loopne
push
shlb
jmp
negl
roll
pop
gs
into
xor
xchg
test
push
in
xor
and
popf
imul
aam
and
and
test
aas
sub
sub
ret
push
xor
movsb
fisubrs
push
stos
pop
repnz
sub
add
sub
mov
jecxz
xor
pusha
idivb
or
aam
xlat
add
xchg
xor
pop
push
das
mov
shll
das
or
test
or
push
jle
rol
xchg
dec
sub
or
cwtl
and
cmp
imul
js
and
xchg
ss
add
and
jo
ss
mov
loope
imul
push
mov
jo
pusha
cwtl
push
jb
ss
and
push
pop
and
add
cmp
sbb
hlt
scas
aad
or
stc
add
add
mov
sub
lahf
aaa
or
aaa
sub
leave
and
shll
mov
inc
xorb
and
sub
pop
je
cmp
outsl
pop
daa
add
insb
xorl
xor
push
iret
aaa
add
in
cmp
add
inc
shll
jg
push
addb
js
and
adc
inc
add
add
or
data16
ret
jo
pop
aaa
pusha
jle
pop
sbb
xor
xlat
mov
sbb
jb
xor
dec
or
mov
dec
or
or
sbb
arpl
std
add
xrelease
add
xchg
sbb
cs
lahf
pop
pop
mov
sbb
call
arpl
xor
mov
xchg
sub
pop
pop
jmp
or
dec
add
jno
xchg
push
and
push
int3
leave
cmp
push
adc
mov
and
mov
ja
jle
cld
push
lods
inc
in
nop
and
iret
dec
mov
mov
push
xchg
xchg
das
das
add
and
es
daa
xor
jmp
xor
sbb
mov
pushf
pushf
sbb
xor
dec
jb
jae
nop
sbb
das
add
rcl
js
pushf
or
push
bound
test
fchs
enter
pop
sbb
std
sbb
test
rcr
dec
pop
popa
out
push
jnp
fisubl
jno
out
pusha
ja
add
inc
sbb
rcrl
sub
sub
and
cmpsb
jnp
or
pop
xchg
test
mov
or
mov
jno
test
or
cwtl
sbb
ror
mov
dec
dec
loope
test
or
lcall
rcr
pop
cwtl
mov
andb
shl
loope
out
jo
popf
mov
out
shlb
pusha
push
mov
lds
mul
mov
mov
enter
mov
rcl
jne
arpl
sbb
fmul
or
mov
lds
cmp
rcrb
popf
or
js
les
xchg
xlat
inc
jo
mov
mov
dec
cwtl
ret
mov
adc
aam
push
xor
jl
stos
shlb
das
das
rcrl
add
jbe
jb
adcb
cmp
jl
add
xchg
rorl
mov
dec
xchg
mov
push
loop
mov
adc
add
subl
or
jbe
adc
dec
les
jg
ds
popa
mov
and
push
and
cmc
ss
mov
push
sub
and
scas
sub
mul
test
push
lods
xorb
dec
push
adc
push
and
inc
inc
or
xchg
filds
sub
push
fidivrl
fwait
jge
jb
les
and
bound
cmc
push
mov
pusha
xor
xor
pusha
orb
inc
lahf
fwait
push
dec
cli
jge
ljmp
sub
aas
mul
scas
add
test
dec
and
xor
scas
gs
jecxz
insb
imul
loopne
pop
and
push
xchg
adc
jne
adc
dec
mov
pop
cmp
xlat
lods
jl
xor
inc
xor
xor
arpl
mov
mov
shll
cmp
out
and
push
loopne
out
mov
loopne
mov
repnz
inc
add
jbe
and
add
adc
push
loopne
and
or
outsb
movsl
adc
lods
sahf
mov
inc
call
jl
pop
or
pop
ret
popf
sti
nop
push
fldenv
xchg
and
movsl
and
cwtl
and
mov
fsubrs
js
xor
loop
xchg
ss
jnp
or
dec
jl
das
add
or
dec
push
enter
xor
xchg
aaa
fldt
jno
ret
sbb
repz
js
lods
fbld
mov
shl
xchg
scas
icebp
and
fistps
or
fisubl
mul
pop
mov
jb
xlat
and
sub
cltd
jne
outsb
inc
add
iret
or
sbb
sarb
add
xor
movsl
dec
rcrl
cmp
cmpsl
adc
add
and
inc
inc
pop
sub
sarl
jae
insl
out
mov
xchg
jno
pop
shrb
lock
rcrl
daa
sbb
fidivrs
lret
popf
push
mov
adc
xor
sbb
jmp
icebp
inc
repnz
or
mulb
pop
mov
push
test
mov
adc
mov
addl
or
mov
and
aad
push
inc
ret
lock
and
pop
xor
addb
negl
pushw
call
lds
sub
imul
push
sbb
ret
sbb
fcmovu
adc
push
pop
pop
dec
popf
orb
and
aad
adc
and
push
dec
jae,pt
rcrl
mov
sub
mov
pop
out
adc
aas
push
cmp
sbb
push
xor
fnstenv
ljmp
clc
and
pop
pop
dec
test
icebp
mov
or
or
rcrl
into
ljmp
dec
imul
mov
jg
dec
loopne
jle
pop
pop
into
adc
xchg
sub
push
nop
cmp
jp
rcr
outsl
mov
lcall
sub
push
mov
shlb
in
add
push
rcrl
movsb
add
lahf
stos
leave
dec
or
cltd
inc
push
dec
jge
arpl
aad
push
outsb
lret
add
test
mov
fisttpll
dec
cs
add
mov
cwtl
xchg
jne
mov
ret
push
xchg
inc
sub
pop
out
inc
xchg
sti
jno
shl
pop
adc
or
sbb
mov
pop
enter
or
stc
sbb
rcl
daa
push
dec
pusha
and
mov
pusha
and
cmp
je
stos
pop
dec
hlt
es
cs
adc
sub
aad
xchg
gs
adc
xchg
das
mov
hlt
adc
sti
popf
mov
xor
xor
inc
sbbb
jo
dec
movsl
or
jne
push
and
push
xor
jae
aaa
enter
add
or
imul
push
dec
adc
dec
adc
cmpsl
loope
mov
adc
sti
xrelease
icebp
jo
sahf
push
fstps
andl
and
das
test
clc
je
fistps
popa
mov
mov
cli
aad
or
add
ljmp
and
lcall
dec
mov
sarb
adc
or
inc
adc
push
lcall
dec
loope
pop
sbb
mov
in
push
inc
xor
push
lea
mov
sub
movsl
arpl
pop
or
insb
xor
fs
push
aam
cs
fsubl
add
xchg
fcmovnb
sbb
lret
sub
add
add
jg
fldz
and
inc
mov
sbb
add
adc
jmp
aad
lret
js
loope
sub
pop
enter
mov
stc
js
push
dec
adc
popf
flds
mov
push
sub
add
jl
rcrb
sbb
outsl
add
insl
insb
add
movsl
jmp
and
daa
pop
push
xor
cwtl
stc
fisubrl
movsb
mov
pop
ljmp
loope
cs
loopne
roll
pop
dec
or
and
jo
addr16
adc
test
shlb
pop
pop
adc
push
ss
and
mov
into
dec
aas
fsubl
fsubrs
orl
iret
movl
daa
fadds
mov
push
clc
dec
xor
or
lock
mov
popf
arpl
or
add
neg
les
pop
add
fldl
push
jae
das
daa
test
mov
imul
notl
jge
add
or
xchg
pop
cld
pushf
iret
sub
cmpsb
int3
shl
loope
cltd
dec
dec
cltd
add
popa
imul
adc
das
and
divb
mov
hlt
jmp
addl
stos
fldt
test
pop
fs
sbb
hlt
scas
sbb
mov
mov
mov
daa
in
and
loopne
cmp
inc
sbb
push
mov
aad
test
dec
cmpsb
mov
and
mov
inc
insl
test
je
xor
pop
pop
or
push
mov
add
addl
shlb
xchg
adc
rorb
dec
loopne
imul
inc
xchg
in
xorb
mov
dec
addb
push
test
push
push
je
xchg
push
bswap
dec
pushl
dec
and
pop
cmp
aas
nop
jge
dec
std
jle
xchg
xchg
enter
xor
adc
ss
je
xchg
inc
loope
and
add
jg
lods
das
ljmp
jl
or
fiadds
daa
mov
daa
cmpsl
add
negb
lock
out
cmove
dec
and
addl
and
push
cmc
add
movsl
sbb
xor
test
lea
inc
sbb
mov
addr16
mov
sahf
xor
mov
es
push
fdivp
xchg
mov
dec
push
push
je
inc
sti
call
in
shll
bound
push
or
or
sub
orl
push
pop
cwtl
fiaddl
push
and
and
and
mov
cmp
shl
add
xchg
and
lahf
push
jno
shll
dec
js
push
dec
adc
sub
and
push
aas
push
les
add
sub
jp
xchg
out
stos
outsb
arpl
pop
inc
cld
add
iret
sub
add
sbb
movzbl
hlt
in
xor
jge
push
or
jb
out
pop
in
cmp
mov
lcall
test
lds
xor
sub
cwtl
testl
cmp
psubq
mov
aas
lock
loopne
add
sub
add
adcl
mov
adc
mov
cmp
pop
in
and
lods
loopne
lret
call
cmpb
pop
adc
ljmp
ss
adc
xor
inc
xor
dec
xchg
inc
and
shlb
jo
sub
sub
femms
sbb
dec
les
sahf
sub
xor
xor
add
ss
in
cmp
mov
ret
loope
jo
ss
jo
outsb
ficoml
mov
mulb
push
add
roll
loop
sub
and
sbb
repz
cwtl
lcall
xorb
jmp
cmp
rcr
add
data16
jo
jo
sar
mov
xchg
ds
filds
jo
aam
arpl
mov
movb
and
jno
dec
ret
mov
and
sarl
das
loop
pop
sub
das
mov
aam
push
push
mov
add
push
xor
cmp
hlt
dec
add
in
cwtl
xlat
lcall
mov
xchg
outsb
dec
pop
mov
jmp
xchg
jl
lldt
dec
pop
jbe
ror
cmpsb
adc
scas
inc
dec
dec
mov
push
mov
mov
mov
cltd
lock
lods
les
inc
jl
mov
scas
icebp
dec
mov
xor
mov
jmp
and
bound
mov
jp
adc
lret
or
test
lahf
and
out
mov
in
hlt
and
addr16
or
cmp
pop
inc
movb
test
pop
fdiv
rcr
les
in
and
push
or
dec
aam
out
cwtl
sbb
mov
pop
and
sbb
add
subl
test
movsb
sbb
lock
lcall
scas
lock
add
movsl
push
arpl
js
frstor
xlat
loopne
push
rcl
add
xchg
jno
call
sbb
cld
fsts
and
stos
or
mov
and
xor
leave
fs
ss
add
mov
add
sbb
sub
test
xlat
repz
mov
enter
pop
iret
sbb
sub
out
popa
daa
push
jp
or
mov
and
add
cmpsl
stos
push
pushf
mov
das
inc
call
nop
movb
pop
gs
xchg
mov
inc
es
mov
test
repz
push
add
sub
inc
add
lret
dec
popa
mov
faddl
sub
lea
ret
cmpsb
pop
clc
xchg
addr16
dec
add
sbb
fmull
mov
in
adc
call
lock
push
cmp
adc
mov
lds
sub
ss
xchg
ficoms
mov
xor
into
insb
aam
movl
les
test
aad
loop
and
mov
pop
sbb
in
ds
xchg
and
and
into
dec
iret
sub
lret
push
add
daa
xor
out
rolb
mov
add
addr16
fiadds
dec
arpl
sub
lods
or
stos
add
adc
adc
clc
in
in
xor
xchg
sti
sahf
ret
andl
ret
shll
mov
popa
shrb
push
ret
out
loope
mov
mov
mov
mov
sbb
sbb
stos
sub
inc
pop
xchg
loope
sbb
dec
ret
add
ret
cmp
xor
and
out
inc
inc
sbb
hlt
hlt
outsl
mov
xchg
mulb
jnp
roll
and
inc
or
xchg
lods
daa
roll
js
data16
test
xor
push
pop
clc
mov
xor
xor
loope
jecxz
test
push
add
fucomip
lea
dec
lahf
and
pop
loope
push
icebp
add
in
sbb
js,pn
xchg
das
cmp
sbb
push
xchg
popa
pop
adc
out
mov
xchg
xchg
movsl
js
inc
call
outsl
jl
ds
gs
mov
xor
js
aad
or
adc
js
test
inc
movups
xor
repz
xor
sets
mov
lock
iret
jae
ss
mov
fdivrl
hlt
popa
and
adc
jp
leave
rorl
les
xor
pop
jecxz
fnop
daa
jmp
xchg
cwtl
xchg
mov
xor
pop
cmpsb
cmp
cmpl
and
int3
push
inc
out
ret
xchg
repz
pop
fadds
cmpb
push
popa
testl
sbb
and
lock
in
add
dec
iret
out
or
mov
push
push
loopne
or
lods
pop
je
out
fsubl
loop
mov
adc
popf
push
sub
xlat
aam
mov
or
push
push
jle
push
stos
sbbb
jne
out
into
jbe
adc
enter
gs
pop
adc
push
popa
adc
or
xlat
lcall
sbb
cmp
cmp
sbb
les
push
fs
sub
mov
or
addb
jnp
lret
adc
adc
sahf
popa
mov
sub
sub
xor
sub
shl
popa
mov
das
pop
add
sub
mov
cmp
das
cltd
notb
jl
mov
stc
push
inc
dec
jne
std
cmpsb
test
cmp
idivb
xchg
lods
test
sub
fdivrs
dec
loop
add
jbe
or
inc
lea
xchg
xchg
sbb
call
ret
lods
jl
les
or
pushf
into
xchg
mov
jmp
in
lahf
and
cmp
arpl
sbb
ror
cmp
xchg
cwtl
or
scas
fcmovnu
scas
in
loopne
sbb
fadds
stc
insb
xor
push
lock
je
sub
loopne
push
add
xor
in
cltd
adc
test
or
jg,pn
dec
inc
loopne
and
lods
mul
ss
sbb
add
test
adc
int3
aaa
fwait
test
xchg
sbb
rcll
or
push
fwait
cwtl
movsb
adc
popl
mov
adc
or
enter
sub
sbbb
imul
xor
movsb
inc
sbbb
dec
sbb
adc
adc
pop
xlat
add
jo
iret
sbb
loopne
sbb
and
push
psraw
and
js
ss
adc
gs
inc
loop
cld
xchg
push
mov
xchg
sbb
push
xor
addl
stos
cmpsl
in
or
into
nop
add
cmp
sbbb
sbb
test
jb
into
dec
add
push
imul
ja
or
dec
por
push
or
cltd
xchg
jmp
loope
pop
jbe
lods
jmp
and
scas
adc
xor
out
adc
test
loopne
and
js
imul
pop
outsl
int
mov
inc
gs
jnp
push
jo
femms
cwtl
gs
jno
icebp
xchg
rcpps
and
sub
push
adc
xlat
lods
daa
shlb
out
inc
ret
fs
enter
sub
adc
jo
outsl
pop
fistps
cmp
testb
add
idiv
in
cs
sub
or
loopne
inc
inc
scas
push
xor
fsubs
mov
outsl
xchg
imul
xchg
in
jl
fwait
arpl
inc
jno
mov
test
insb
lea
dec
orl
and
pop
icebp
rol
or
inc
data16
andb
xchg
push
out
psubq
sub
repnz
jge
add
sub
push
add
shl
addl
cmp
cmpsl
sbbl
mov
loope
mov
or
ficoml
shrl
fdivrl
sub
jge
mov
rol
mov
addb
add
lds
hlt
jo
jl
push
push
push
inc
push
jb
xor
pop
or
push
xchg
notb
xchg
test
ss
shrb
pushf
push
rolb
in
test
ret
jecxz
jle
add
and
loopne
bound
mov
and
pop
lcall
mov
movb
iret
jno
jmp
xorl
mov
adcb
jo
sti
rcrl
repnz
jge
or
and
test
test
loopne
rcl
mov
sbb
cld
loope
cmc
mov
cmc
xchg
jno
jne
sbb
adc
adc
loopne
sub
inc
cwtl
and
mov
push
imul
cmc
inc
int3
cmp
popf
mov
cmp
mov
in
xor
popa
mov
pop
ds
pop
hlt
in
fcmovb
pop
cmp
mov
push
xchg
mov
fucom
jle
loopne
push
setbe
cmpsb
push
call
xchg
or
mov
and
xor
sub
inc
addr16
rclb
add
imul
in
pop
into
pop
push
cmp
rcrl
lods
jl
jmp
add
out
addb
test
mov
dec
into
out
mov
xchg
add
add
mov
imul
xchg
fwait
or
dec
mov
sub
and
dec
xor
pop
mov
mov
verw
xor
mov
imulb
push
push
jecxz
enter
sbb
jmp
push
pop
and
fstl
add
ljmp
lcall
inc
aaa
sub
stc
pusha
test
scas
jp
cmp
pop
mov
sub
jmp
imul
dec
imul
out
lock
out
jmp
xchg
test
in
jge
or
daa
dec
mov
pop
adc
lret
mov
pop
fiaddl
xor
pop
and
stc
cmp
sub
out
xor
inc
mov
or
or
cmp
sbb
mov
xor
loope
addr16
and
lea
dec
pop
sbb
inc
adc
daa
bound
adc
push
add
aad
and
pop
movsl
inc
push
xchg
adc
sbbl
jo
insl
mov
xor
adc
dec
outsb
mov
cmp
push
ljmp
outsb
adc
and
stos
jbe
sub
xorl
lods
movnti
rorb
sahf
fisubs
and
leave
jne
sub
mov
mov
imul
add
in
or
adc
les
es
push
add
and
pop
insl
push
js
and
add
mov
xchg
movsb
in
hlt
lods
pop
dec
pusha
cmp
push
es
adc
inc
add
push
add
push
dec
dec
fldz
sub
xor
sbb
popa
fadds
push
sub
das
adc
mov
adc
push
out
fsubrp
cmpb
addb
popa
ror
lea
pop
aas
and
mov
test
repnz
jge
or
nop
fisttpll
lds
pusha
and
add
je
mov
repnz
cmpl
insb
call
adc
aas
pushf
pop
dec
lret
shrl
mov
pop
mov
sub
mov
inc
pusha
bound
or
jle
sbb
pop
mov
adc
jl
and
mov
addb
and
lods
mov
sbb
sub
adc
and
mov
pop
popa
subl
imul
popa
data16
dec
popa
pusha
adc
dec
dec
bnd
and
xor
and
mov
rorl
inc
inc
sbb
cmpsb
frstor
dec
out
pushf
xor
pop
xor
mov
popf
xchg
xchg
insl
push
fs
pop
mov
mov
xchg
inc
insl
aas
jge
mov
scas
int
hlt
addb
adc
pop
or
mov
sbb
dec
fimull
xchg
inc
add
xchg
mov
xchg
jp
pop
push
mov
cmp
sub
mov
sub
and
das
movsb
sub
je
popa
xchg
mov
push
add
jns
pop
push
inc
test
mov
jno
and
test
inc
pop
inc
inc
add
push
add
clc
mov
cltd
inc
adc
add
pop
mov
ds
je
daa
mov
sbb
or
jae
addb
and
adc
out
adc
fcoms
inc
inc
clc
mov
lods
add
dec
lea
xchg
icebp
je
and
icebp
fadd
aaa
push
int
mov
xchg
xchg
pop
rcrb
repnz
adc
iret
xlat
adcb
push
mov
push
add
push
clc
in
xchg
cmc
addr16
and
iret
cmp
pop
xchg
js
sub
mov
lods
and
pusha
sbb
out
scas
mov
pop
inc
test
add
aam
push
lods
iret
adc
mov
and
or
jmp
ret
cld
jg
nop
xor
lods
xor
sub
dec
movsl
outsl
adc
mov
repnz
pusha
aaa
scas
stos
fidivrs
idivl
ljmp
popf
sub
mov
ret
inc
mov
cmpsl
jns
adc
popa
or
push
subl
testl
inc
mov
pop
inc
cli
push
push
or
push
and
mov
push
insb
imul
pop
andl
push
xchg
test
adcl
adcb
push
jns
inc
leave
pop
sub
pop
jne
adc
and
and
popa
or
insb
jl
fnsave
dec
fdivrs
push
lret
xchg
jo
int3
test
decb
sbb
rol
fdivrs
xchg
xorl
and
mov
jo
adc
sub
inc
shrl
stos
addr16
xorl
add
cs
jne
cmp
lods
inc
lods
iret
push
js
imul
inc
sub
lahf
insl
xor
loop
jle
and
or
ds
and
or
leave
mov
sub
jns
add
and
and
xchg
mov
inc
sub
popa
add
or
mov
adc
and
jp
sub
fcmovnu
push
cltd
push
insb
popa
add
push
push
or
mov
adc
cmp
mov
test
sub
sbb
inc
jg
sub
fwait
dec
add
sarb
lods
es
fwait
mov
push
fcmove
cmp
enter
pop
ljmp
mov
push
inc
xchg
in
push
jmp
mov
pop
sub
jp
fstps
add
cmp
xchg
and
mov
dec
movsb
sub
mov
incl
rcr
xchg
fnstcw
dec
pop
popa
data16
lret
outsb
or
sbb
cmp
jecxz
daa
call
pop
icebp
jns
xor
movsl
or
les
cmpsb
in
mov
push
lods
fisubrs
adc
mov
js
sub
xchg
jnp
add
lea
sub
inc
add
adc
imul
inc
cmp
loope
dec
popa
int3
mov
jnp
push
loopne
fidivs
sub
fidivl
cltd
xor
mov
jno
push
jo
stc
push
sahf
add
in
int
xor
movsb
cmpsl
mov
pop
sbbl
and
ja
xlat
addb
xlat
jle
insl
mov
stos
xchg
adc
dec
cmc
arpl
mov
sbb
arpl
sub
adcb
or
pusha
sub
xchg
jae
and
repz
add
inc
and
and
ss
inc
mov
mov
iret
jae
or
xchg
dec
das
push
hlt
ds
sbb
aas
es
xorb
xchg
mov
mov
inc
jmp
fpatan
jl
ja
sbb
out
mov
sbb
or
dec
sbb
out
jbe
cmp
daa
inc
sbb
add
ljmp
or
es
inc
cmc
arpl
mov
loope
push
cs
sbb
jle
add
push
nop
pushf
cmp
fidivl
xorl
aam
xchg
subb
jne
xor
cmpsl
lea
fcoms
cmc
pop
mov
insb
dec
insl
rol
inc
jnp
inc
ret
je
dec
dec
jge
das
cmp
fisttps
mov
inc
andl
fistps
mov
pop
call
push
mov
and
call
faddl
push
pop
nop
fcomi
inc
lret
inc
les
inc
mov
jp
test
test
ja
dec
mov
cmc
xor
or
jg
push
and
lods
cmp
adc
jg
daa
or
inc
movsl
mov
arpl
into
xchg
inc
xorb
loope
sbb
xor
or
cmp
sahf
les
mov
xchg
inc
jp
jbe
mov
push
clc
ss
pop
lea
mov
mov
shlb
fcoml
or
mov
dec
mov
mov
fadds
pop
inc
iret
push
jle
mov
xchg
xorl
mov
jno
pop
aaa
insb
adc
shll
mov
mov
dec
les
pop
fwait
hlt
and
mov
clc
cwtl
adc
xchg
pop
outsb
xchg
inc
test
jle
adc
popa
rol
or
xor
push
mov
sbb
adc
push
enter
movsb
roll
ret
mov
jno
or
lds
ret
sbb
add
loopne
dec
test
ret
shr
or
adc
daa
mov
or
sbb
sub
cmp
dec
add
aad
int3
pop
or
push
aam
xor
mov
cmpb
jo
mov
mov
dec
mov
shr
outsl
or
xchg
and
inc
popa
test
dec
adc
xchg
xchg
movsl
mov
mov
or
aam
in
add
ljmp
iret
fidivrl
jg
stos
mov
arpl
mov
adc
add
add
aad
out
andl
stc
fdivs
mov
je
rolb
call
loopne
inc
jg
fldcw
pop
call
imul
add
sub
push
inc
cmp
push
sub
add
out
loop
sbbb
xchg
test
dec
or
mov
xchg
cs
mov
ss
xchg
sub
mov
dec
inc
imul
jns
out
or
inc
xor
add
fisubrs
push
call
cmpsb
cld
add
jp
add
cld
xor
jecxz
xchg
jbe
loopne
aaa
jo
int
mov
je
and
xchg
or
inc
adc
xchg
pop
jecxz
mov
and
pop
sub
xor
sub
test
and
test
or
adc
rorl
cmp
jno
push
jmp
pop
sahf
jo
mov
inc
js
inc
adc
into
test
rorb
xchg
hlt
mov
imull
aaa
insl
iret
movsb
mov
sbb
ja
ret
xchg
fs
icebp
push
adcb
jns
cmp
xor
pop
rcrb
or
aad
iret
adc
xorl
jo
pop
pop
ljmp
push
mov
push
cld
aam
add
insb
es
xchg
and
add
in
push
addr16
loopne
adc
xchg
addr16
adcb
rcll
xchg
fwait
mov
pop
xchg
push
fmuls
push
pop
sbb
inc
lcall
sub
nop
push
cmp
dec
sbb
mov
inc
cmpsb
outsl
adc
xor
repz
out
fisttpll
pop
jb
std
data16
imul
mov
sub
mov
das
push
out
cmpsb
xor
mov
mov
jecxz
loop
sub
int
aam
or
mov
mov
xchg
andb
pop
inc
sbb
sub
rclb
sbb
fcoml
sti
and
or
xchg
sub
ret
into
movsb
inc
jmp
mov
mov
ret
xorb
xchg
js
sbb
pop
push
hlt
mov
pushf
cmp
dec
xchg
lret
add
hlt
jns
pushf
mov
and
pop
xor
pop
outsl
or
test
mov
out
aad
ljmp
das
jb
daa
sub
push
sahf
mov
push
arpl
cmp
fistpl
test
addl
mov
adc
add
and
es
sbb
mov
out
in
adc
js
pop
adc
inc
pop
and
jl
pop
mov
repz
cmp
rcrl
push
clc
out
mov
add
lods
je
mov
xchg
call
stos
cs
sub
lahf
fstpl
movb
loope
cmpsl
xor
and
mov
xchg
addr16
hlt
and
ds
inc
add
dec
int
loope
sbb
fwait
dec
mov
fdivs
jno
jmp
subl
adcl
push
xor
push
jb
or
pop
inc
jp
jb
adc
add
sbb
scas
sub
iret
mov
orb
xchg
andb
jl
cmp
add
jae
inc
sbb
inc
sbb
sbb
mov
clc
jbe
gs
mov
xor
and
loopne
js
cmpsb
cld
jle
frstor
mov
or
and
add
and
adc
mov
push
lock
dec
jmp
mov
pusha
xchg
and
imul
out
int
jns
push
addr16
dec
jge
nop
and
xchg
inc
mov
adc
mov
mov
adc
push
lods
sbb
sub
sbb
dec
call
mov
jmp
popf
ret
sub
jbe
ffreep
scas
imul
cmp
pop
outsl
outsl
mov
and
fsubrs
jmp
lret
xchg
dec
scas
lock
xor
and
jnp
std
cmpsl
jb
sbb
sub
rclb
inc
xlat
clc
lock
xchg
insb
js
addr16
loope
add
mov
sbb
gs
jbe
lahf
shlb
mov
cmc
insl
test
sbb
jbe
adc
in
movsl
inc
cld
push
adc
cmp
mov
push
sub
jnp
xchg
dec
add
add
pop
xchg
dec
and
lret
leave
xlat
mov
out
inc
cmpsb
jo
insl
pop
dec
loope
daa
rcrb
divb
nop
es
inc
lea
or
imul
add
push
cld
cmp
inc
dec
dec
add
or
add
xchg
jmp
pop
mov
cmp
fwait
imul
sbb
jne
cmp
xchg
orl
jo
js
inc
hlt
testb
sub
out
or
cmp
or
adc
adc
andb
fidivrl
xor
iret
xor
mov
mov
movsl
add
cmpsb
or
sarl
inc
test
pop
mov
pusha
cli
adc
and
je
add
push
stos
stos
sbb
adc
cmpsl
testl
dec
mov
push
mov
or
cmp
aaa
insb
jl
repz
rorb
shrb
fimull
iret
inc
xor
mov
mov
hlt
sbb
dec
and
mov
add
stc
mov
mov
mov
add
lds
aaa
mov
mov
cmpsb
and
scas
and
dec
push
insb
jmp
and
dec
es
inc
fdivr
jecxz
es
pop
push
iret
iret
push
jo
cmpsl
and
pop
popl
sbb
push
shll
lea
je
orl
pop
jns
inc
jecxz
push
xchg
push
push
or
out
adc
insb
call
mov
btr
sub
outsl
aad
aaa
xchg
dec
dec
call
or
fistpl
add
sbb
pop
add
push
mov
and
mov
int
mov
add
add
pop
imul
dec
mov
or
or
mov
adc
inc
or
add
xchg
hlt
push
sbb
lahf
sbb
movsb
scas
pop
test
mull
push
popa
fcomps
inc
add
shlb
divl
js
cmp
adc
imul
inc
mov
sub
jle
movsb
scas
sbb
repz
inc
xchg
loop
and
sbb
mov
int
movsl
dec
leave
sub
jo
cmc
pusha
cmp
cmp
cli
mov
es
mov
inc
jae
rorb
sub
dec
lret
mov
pusha
dec
cltd
or
xchg
mov
mov
and
push
adc
dec
xchg
mov
push
or
and
and
movsl
jp
mov
adcl
pop
add
jg
movsb
rolb
and
mov
sub
pushf
loopne
jg
cmpl
jno
iret
mov
mov
xor
inc
call
jmp
inc
mov
push
jne
xor
les
push
ret
in
sbb
jmp
adc
xor
push
jge
lcall
adc
adcb
shll
jne
pusha
cmp
daa
outsb
push
outsl
push
movl
mov
push
mov
movsb
pop
cli
outsb
in
add
movsb
dec
xchg
and
lods
dec
repz
sbb
and
aam
repz
dec
das
pusha
jns
jl
xor
orb
loopne
fwait
sbb
push
mov
and
call
xchg
and
cmp
lods
das
mov
jo
subl
bound
xorb
inc
dec
popa
push
jns
dec
cld
ja
jo
sub
pop
xchg
lds
pop
sbb
cmp
jecxz
jge
addr16
pop
inc
mov
call
push
jb
jo
sub
xchg
pop
out
mov
sbb
cs
push
inc
out
push
cmp
cmp
cmp
sub
or
std
dec
and
popa
push
hlt
add
and
pop
and
add
push
xchg
or
xor
sub
adc
nop
push
js
aaa
movsl
pop
pop
pop
jns
and
xchg
sbb
cs
mov
in
ljmp
mov
mov
out
mov
lods
inc
jnp
adc
sub
leave
nop
add
mov
xchg
mov
test
mov
dec
jecxz
call
mov
test
or
js
dec
arpl
loope
xchg
mov
mov
mov
lods
imul
sub
jg
mov
cmp
add
push
out
lods
push
das
push
fs
into
xchg
cs
add
fiaddl
dec
daa
xchg
and
cmp
mov
pop
add
xorl
dec
jae
jmp
fxtract
call
cmp
in
cltd
stos
mov
movsb
das
es
push
push
cwtl
xchg
out
or
jl
mov
jmp
dec
add
jmp
test
mov
gs
jo
sbb
push
nop
cmpsl
lods
xor
sbb
and
push
imul
popf
nop
dec
xor
daa
mov
dec
or
hlt
js
xchg
and
cmpsl
mov
inc
test
js
scas
pop
mov
imul
jns
das
push
jl
sub
fldl
or
push
mov
mov
or
inc
fistl
jge
mov
push
push
mov
dec
fldt
xchg
pop
push
and
stos
xor
add
mov
jg
or
mov
push
ss
dec
sahf
addb
pop
add
or
jno
insl
sbb
inc
imul
xchg
push
pop
dec
insb
cmp
aaa
in
popf
sbb
lods
movb
jno
or
push
adc
orl
lret
mov
js
cmp
ret
test
push
sub
dec
or
mov
mov
mov
push
cmpb
imul
outsb
adc
mov
dec
and
sub
jbe
jns
sbb
stos
shrl
pop
shr
outsl
sbb
mov
or
inc
xchg
sbb
jle
ret
jno
adc
sbb
fwait
imulb
push
fldenv
shlb
add
rcrb
sahf
add
frstor
fcomp
repz
or
pop
test
add
movntps
jno
xchg
inc
inc
mov
push
mov
rcpps
cwtl
call
mov
notl
aad
rol
ja
pushf
mov
roll
xchg
fdivrl
sbb
test
xchg
ja
repz
scas
xchg
adc
arpl
xor
loope
xchg
add
gs
inc
test
lahf
and
stos
pop
inc
push
mov
mov
and
pop
push
and
dec
jno
gs
sbb
pusha
mov
mov
ret
push
push
data16
push
pop
add
xor
or
mov
lods
or
pop
cmpsl
test
pop
ja
aad
dec
roll
sbb
imul
sbb
stc
xchg
mov
fidivl
add
adc
lods
push
mov
sti
and
into
in
or
shlb
lock
sahf
push
cmp
movsl
mov
movsl
popf
jle
clc
mov
cltd
popf
xchg
dec
cmpsl
push
fwait
mov
adc
add
pop
fdivrl
lcall
pusha
cmp
mov
inc
inc
popf
in
repz
inc
jge
push
jmp
in
in
jb
inc
sub
rcrl
or
mov
xchg
enter
xchg
stos
es
xor
cltd
std
imul
pop
and
mov
jp
scas
enter
and
fsts
test
jbe
sbbl
inc
inc
mov
mov
ja
in
push
mov
xchg
bound
imul
jmp
sarl
or
insl
jecxz
stos
inc
fcmovnu
sub
push
test
das
inc
cs
dec
mov
punpckhwd
cltd
cmpsb
fildl
push
and
leave
loope
sbb
jg
mov
ja
fabs
inc
iret
enter
pop
ja
cmp
aam
enter
inc
test
add
loopne
arpl
cmpsl
xchg
mov
test
mov
fbstp
adc
jbe
inc
add
sub
add
aaa
in
cltd
dec
jbe
add
xor
nop
mov
mov
popf
orb
add
inc
lods
inc
adc
mov
stc
sbb
ja
inc
add
pop
test
pop
inc
mov
cmp
or
sbb
rol
inc
arpl
mov
mov
shrl
sub
pusha
mov
loop
fldt
pop
shlb
and
mov
xor
ljmp
mov
jno
imul
xor
lea
inc
movsb
xchg
cmp
fs
mov
js
add
jo
cmp
nop
out
cmp
dec
jo
add
addr16
and
dec
movsb
adc
outsl
movsl
addl
add
enter
popa
adc
arpl
mov
pushf
mov
sbb
stc
xchg
push
mov
les
jecxz
cmpsb
jg
jo
sub
jp
dec
cs
push
and
aaa
lods
push
xchg
icebp
mov
mov
mov
jo
in
movsb
inc
xor
xor
or
and
xor
ss
scas
ret
loope
xor
inc
movsb
xor
movsl
outsl
sub
jecxz
pusha
loop
daa
jno
and
loopne
outsl
int
stos
imul
xor
inc
and
cmp
repz
add
push
xchg
pop
mov
jo
jp
test
pusha
cltd
pop
adc
mov
adc
add
lret
sub
js
hlt
push
aam
pop
loopne
pop
cmp
xlat
cwtl
push
xor
pop
push
dec
dec
mov
lock
cmpsb
push
sbb
mov
imul
fdivs
mov
and
sub
daa
aas
mov
aam
mov
shrb
loope
pop
xor
and
es
or
mov
into
loopne
or
lock
mov
cmp
xor
inc
lods
lods
pop
arpl
ds
mov
mov
out
sahf
cmp
imul
push
out
insb
mov
pop
push
mov
shlb
loop
loopne
xor
das
cmp
and
es
mov
pop
add
pop
mov
lahf
dec
subb
sti
shl
popa
jno
adc
push
xchg
push
addr16
adc
scas
int3
inc
jecxz
dec
jmp
sub
dec
push
mov
dec
insl
rcrl
hlt
sbb
imul
xchg
out
adc
ret
jp
or
xor
xlat
das
cmp
adc
xchg
sbb
dec
mov
int
shrb
cmp
sub
pop
sahf
fdivs
ss
addr16
add
rolb
cs
cwtl
dec
repz
jo
punpckhwd
push
ss
jge
pusha
mov
outsb
cmp
out
enter
inc
pop
push
es
sub
ja
xchg
mov
cmp
inc
movsb
rcll
xchg
shl
call
or
xchg
push
mov
inc
ljmp
add
icebp
out
loopne
push
and
xchg
test
outsl
add
test
jmp
cld
in
sbb
add
pop
setb
icebp
mov
jp
cltd
add
adc
mov
cmp
popf
jle
call
push
mov
inc
mov
inc
mov
ss
ret
xchg
mov
rolb
mov
xchg
out
lret
xor
aad
pop
sbb
push
pop
js
stos
fwait
outsl
imul
outsl
dec
sub
lods
lods
mov
inc
les
lea
cmp
jl
add
pushf
das
mov
sbb
mov
stos
xchg
pop
popf
es
fdivrs
push
ficoml
cmpsl
dec
shrl
jae
jb
xchg
sub
ret
shll
arpl
and
xchg
ss
push
sub
xchg
lods
ret
je
jp
inc
lods
pop
loope
cmp
insl
adc
mov
sbb
xchg
loope
mov
frstor
inc
mov
int
fcomip
test
movsl
sbbb
stc
add
loopne
lds
fidivrl
imul
testl
cmp
fs
shlb
mov
sahf
sti
inc
dec
xchg
or
sbb
push
fcomps
out
cmpsl
sbb
push
clc
test
sbb
test
pop
pushf
inc
adc
push
or
fdivl
xchg
add
addb
adc
aam
cmp
pop
xchg
into
stos
insl
sbb
push
or
icebp
aam
shlb
pusha
nop
jno
lock
rcrl
sub
rorl
jp
daa
pop
cmpb
rolb
leave
push
out
jno
sub
add
pop
pop
rcll
inc
orb
pushf
rclb
sub
xor
jno
jge
dec
sub
mov
xlat
rorb
adc
ss
adc
popa
xchg
fisubl
jne
lcall
jl
popf
mov
and
and
out
xor
push
inc
mov
out
adc
xor
clc
add
push
enter
addl
stos
imul
add
scas
ss
adc
pop
lods
push
lods
rcll
push
pop
shlb
adc
shl
mov
divb
xchg
lea
mov
fwait
orb
pusha
adc
cmp
lods
daa
inc
cmpxchg
push
fisubrl
hlt
push
test
or
cmp
in
ss
add
pop
popa
and
mov
dec
adc
iret
adc
pop
pop
and
jp
popl
insb
popa
daa
adc
sbb
test
inc
inc
orl
adc
lds
insb
sarl
inc
inc
andl
adc
pop
sbb
sbb
cmp
stos
hlt
cmp
mov
dec
and
fstl
mov
and
mov
dec
inc
loop
ljmp
adc
pop
sbb
stos
pushf
stos
pop
flds
outsb
xor
sbb
or
add
mov
xchg
sbb
in
push
inc
ret
xor
mov
les
mov
pop
pop
pusha
subl
test
addr16
sbbl
xor
mov
jo
xchg
adc
inc
outsb
jecxz
jl
push
mov
xchg
xchg
mov
nop
add
loope
sbb
or
push
push
fstl
jl
adc
xor
in
and
pop
addl
test
mov
mov
cmp
dec
and
xor
dec
pusha
adc
ret
sbb
dec
jmp
push
cltd
adc
je
push
sub
loopne
cwtl
sub
ficomps
xlat
push
add
fs
shlb
clc
pusha
inc
divl
xchg
sti
and
loop
cmp
bound
and
push
ret
and
arpl
movsl
xchg
pop
loope
mov
ret
and
mov
and
mov
mov
xchg
mov
lock
jmp
push
sbb
pop
jae
das
jg
aam
push
mov
jns
test
push
sbb
movb
sub
out
rol
mov
iret
dec
sbb
fdivs
add
jmp
or
mov
add
pop
stc
push
addb
push
pop
imul
xor
add
out
xor
mov
jmp
mov
dec
popa
mov
and
sbb
jno
adc
sbb
or
and
cmpsb
jge
cmp
cmc
cmp
jg
sub
insb
clc
add
mov
cmp
ret
popa
loope
gs
xor
loope
cltd
test
cmp
mov
push
or
push
push
dec
inc
leave
adc
rcll
cmpsb
sbb
sub
arpl
jnp
inc
jecxz
icebp
out
inc
dec
into
xchg
ss
xor
mov
pop
mov
dec
loope
adc
mov
fwait
mov
mov
cmp
sub
pop
add
dec
inc
test
pop
cmp
jno
sbb
incl
mov
inc
iret
and
push
pusha
sub
jne
mov
xchg
or
lds
sbb
dec
loop
leave
sbb
mov
push
pop
aam
lcall
movb
fsubr
jbe
push
xchg
leave
fbld
ss
pop
mov
aas
aas
pop
push
sub
pop
inc
push
data16
sub
cmp
cmp
adcl
adc
fwait
dec
cmp
test
push
mov
clc
and
add
xor
and
mov
mov
imul
ret
add
mov
add
inc
popf
pop
xchg
xor
daa
and
lods
add
mov
mov
loopne
daa
mov
mov
nop
push
insl
loopne
popa
pusha
inc
and
test
cltd
jns
dec
jmp
fwait
xor
dec
cld
enter
pop
push
lock
subl
popa
pusha
cmp
xor
adc
jecxz,pn
mov
push
push
sbb
mov
sub
add
push
rcll
jecxz
cmp
adc
adc
and
pop
out
aas
sbb
sbb
cmp
in
test
mov
pop
mov
js
xor
fisubrl
jmp
mov
add
pop
adc
add
mov
sub
int3
ret
ja
or
jae
push
jno
push
xchg
add
xor
fsts
mov
out
xchg
push
imul
sbb
stos
push
std
inc
jno
movsl
and
scas
sub
add
dec
adc
das
cmp
lods
inc
push
or
push
pop
hlt
xchg
xchg
loope
sub
sbb
outsb
inc
and
repz
pushf
call
push
fwait
sbb
push
add
jbe
jbe
lock
lcall
and
and
sub
xchg
loope
sbb
mov
sub
and
mov
push
rcll
pop
js
shlb
xchg
pop
fwait
dec
std
push
xchg
cmp
das
adc
enter
jo
add
nop
loope
sub
xor
adc
xchg
mov
add
and
mov
sub
sti
or
les
mov
lea
cmp
lea
or
mov
mov
in
inc
test
mov
sub
cli
mov
push
rolb
cltd
imul
pop
dec
stos
mov
cmp
gs
lods
xchg
add
rorb
mov
xchg
iret
mov
add
das
jg
das
sub
loopne
popf
mov
xor
cmc
mov
or
and
dec
mov
cmp
add
and
popa
pop
lret
stos
lods
xchg
mov
out
imul
cmp
adc
ja
dec
mov
cmpsb
xchg
sub
outsb
loope
test
mov
pop
push
daa
xchg
dec
mov
adc
movsl
xlat
add
xchg
add
shl
add
aam
xchg
dec
popa
lret
imul
cmpsb
cmp
fadds
fstl
sub
ss
xchg
fcoms
cltd
dec
mov
nop
rcll
out
inc
pop
dec
dec
xchg
mov
push
in
test
and
sbb
stos
pop
icebp
ss
outsb
inc
mov
rcrl
adc
call
cli
jae
sbb
sub
xor
inc
sarb
shll
adc
or
push
or
xchg
lods
fs
lock
insl
or
test
xchg
shrb
notl
test
sbb
mov
incl
push
adc
ljmp
hlt
push
xchg
cmp
adc
fnstenv
mov
mov
xor
mov
popa
sub
call
push
mov
insl
xchg
pop
in
cmp
iret
push
inc
sub
xchg
xorl
sub
pop
mov
push
cmp
add
push
pop
add
pop
xor
mov
bound
lds
push
add
int
xchg
dec
cli
push
and
test
and
or
add
and
aaa
inc
add
jbe
dec
xchg
adc
das
pop
adc
das
add
sub
aas
and
iret
jmp
icebp
lods
mov
cmp
mov
adc
fwait
cld
add
add
or
mov
push
add
push
fs
imul
subb
shr
pop
mov
inc
mov
mov
lret
clc
jo
adc
adc
pusha
shll
aad
dec
imul
adc
adc
iret
xchg
dec
cwtl
inc
addr16
push
sbb
cmc
addr16
xchg
adc
roll
push
inc
rclb
leave
adc
iret
and
leave
ficoml
lahf
fmulp
xchg
add
cmp
xchg
mov
stos
add
jl
pop
sbb
jo
xchg
insb
sarb
adc
shlb
xor
mov
and
pop
jbe
push
add
mov
and
inc
sbb
jbe
cmp
es
divl
jne
push
mov
adc
lods
jb
aad
ret
lods
repz
leave
ljmp
mov
scas
xchg
insl
xchg
in
pop
lret
iret
std
test
into
popa
pop
dec
test
pop
inc
mov
sbb
sub
dec
or
test
rcl
stos
movsl
ss
in
dec
cld
pop
iret
inc
xchg
jl,pn
lea
jecxz
push
jmp
fsubrs
adc
mov
bound
mov
hlt
pusha
xor
or
jnp
popl
add
in
idivl
sbb
push
fcompl
loope
add
loopne
jmp
jb
and
xchg
xor
insb
push
mov
loope
movsl
adc
incl
pop
lods
push
dec
cmp
or
adc
rcr
sbb
adc
ss
clc
ja
adc
mov
pop
rcl
xor
in
jns
mov
mov
inc
aam
dec
leave
jns
int
pusha
pusha
jecxz
cmp
or
movsl
add
arpl
xchg
mov
pop
and
aam
in
cmp
icebp
jle
and
push
push
pusha
push
dec
or
dec
add
and
xchg
inc
mov
es
push
shlb
daa
ret
mov
push
loope
xor
jmp
or
shr
push
iret
pop
enter
rorl
jno
xchg
test
imul
lods
xchg
xchg
rorl
fcoms
iret
ds
sbbb
xchg
mov
movsb
xchg
push
adc
pusha
add
les
mov
nop
sbb
loope
cmp
and
push
inc
repz
jecxz
icebp
and
pop
xchg
adc
jp
add
inc
jo
pop
or
loop
imull
xor
pop
inc
cmp
jmp
mov
sahf
jl
mov
push
inc
dec
addr16
mov
dec
dec
ret
add
lock
lret
jbe
das
mov
je
xchg
push
rorl
xor
push
lahf
inc
out
cmpsl
inc
and
xor
mov
mov
call
mov
add
jg
es
rcr
ficomps
pop
filds
or
scas
and
push
mov
imul
mov
pop
xor
test
or
mov
iret
cmc
adc
loope
test
mov
pop
rolb
inc
cmpsl
call
inc
mov
pop
push
cmp
push
sub
mov
xchg
cwtl
outsb
jo
std
adc
cmp
add
jle
lods
and
push
rcll
push
sti
pop
or
les
dec
inc
ja
stos
push
xorb
push
pop
cwtl
daa
adc
mov
jo
imul
fcmovb
jge
jle
test
inc
ja
cmp
add
scas
jbe
imul
cmpsb
into
inc
xor
mov
xor
xchg
test
addb
mov
mov
cmp
jo
sbb
add
mov
nop
sub
nop
pop
addb
adc
fiadds
and
pushf
inc
lods
adc
es
sub
lods
imul
lret
aaa
scas
adc
shr
in
xorl
imul
xchg
sarb
push
push
cmovo
movsb
mov
popf
fmuls
mov
aas
inc
mov
mov
dec
sub
push
pop
mov
cmp
push
and
inc
ja
arpl
sub
mov
test
lcall
pop
loope
addr16
pop
in
test
or
imul
add
iret
es
push
adc
lcall
sub
xor
nop
jp
sti
sbb
lea
mov
out
push
add
mov
cmc
add
mov
ret
pop
dec
fincstp
sarl
xchg
jl
mov
inc
cmp
mov
inc
mov
sti
in
sbb
dec
test
pop
sbb
adc
ret
sub
aaa
xor
sub
mov
xor
lea
nop
lea
or
addl
aam
and
add
dec
mov
rolb
test
or
stos
adc
xor
dec
or
inc
jns
and
sub
pop
mov
test
sbb
add
xchg
jp
lock
sbb
mov
push
popa
push
inc
clc
jp
jo
jg
js
sbb
push
sub
xchg
mov
inc
call
adc
cmp
jb
sub
test
sbb
je
out
inc
pop
loope
cmc
data16
out
std
jb
adc
pushf
sub
xor
adc
movl
ret
lahf
jns
xor
ret
icebp
push
push
addb
enter
rcll
xchg
mov
mov
jno
cmpsl
adcb
filds
and
xor
test
dec
lahf
ds
xorl
movsb
add
xor
je
mov
pop
notl
mov
mov
add
xlat
xchg
shl
add
les
mov
outsl
aad
addr16
add
push
xor
mov
jecxz
addr16
and
sub
shlb
and
dec
mov
fsubl
push
movsb
imulb
mov
mov
push
adc
inc
loopne
outsl
push
push
xchg
sbb
ss
bound
jmp
rorb
fmul
sbb
jnp
sub
popf
lcall
mov
add
mov
popl
loope
es
and
mov
pop
outsl
jl
add
out
add
mov
adc
lcall
pop
jp
scas
mov
and
mov
jecxz
sbb
mov
test
and
mov
pusha
dec
add
push
es
add
sarl
or
and
cmp
pop
adc
xchg
pop
outsl
adc
xchg
inc
add
xchg
pushf
or
aad
and
outsl
in
mov
lahf
sbb
fildl
arpl
in
jp
pop
cltd
pop
es
xchg
or
and
or
rcrb
xchg
lea
repz
cmpsl
add
mov
push
or
lret
movsl
lahf
push
adc
mov
push
ret
sti
cmpsb
sub
mov
add
cmpl
js
push
add
and
add
jmp
sub
push
lahf
es
mov
mov
sub
or
mov
push
movsb
leave
mov
push
mov
push
push
ror
push
cmc
sbb
sti
push
add
and
xchg
pop
dec
pop
cwtl
push
pop
ret
mov
dec
jmp
test
pop
movsb
push
mov
mov
adc
or
movsb
sbb
lock
pop
or
sbb
in
cmc
jo
movl
sahf
add
lock
into
sub
lret
fldl
fcompl
cld
sub
or
fstpt
ret
cmp
push
or
xchg
fcompl
lcall
jno
mov
add
pop
or
mov
jbe
arpl
mov
cmpsl
movsl
das
sub
add
mov
test
aaa
pop
push
idivl
gs
add
and
rcrb
pop
insl
or
ret
xor
push
mov
mov
sbb
arpl
jecxz
icebp
jb
inc
out
cmp
test
loope
iret
stc
or
or
sub
xlat
stos
lahf
sub
lods
sub
mov
les
dec
cmp
xlat
or
ret
cwtl
inc
aad
adc
xchg
mov
cmp
arpl
cltd
mov
cmp
lahf
int
jns
pop
dec
mov
xchg
adc
in
xchg
jecxz
aaa
dec
jo
mov
pop
xor
or
out
icebp
pop
mov
in
clc
or
movsb
mov
daa
leave
popf
leave
insb
mov
sahf
mov
gs
leave
pop
aas
dec
test
sarb
sub
out
mov
mov
pop
imul
imul
cs
mov
jae
adc
stos
sarb
push
sbb
add
cli
xlat
adc
jecxz
push
add
fmul
inc
lods
and
or
push
dec
dec
xor
aad
mov
inc
sub
sbb
and
pop
jge
cmpb
rol
mov
bound
scas
mov
adc
adc
jmp
adcw
out
test
gs
inc
imul
fiadds
inc
adc
push
cmp
sub
sbb
nop
fsubrs
mov
add
in
daa
add
loopne
or
out
adc
ljmp
arpl
xor
les
scas
orb
add
jmp
xor
test
sbb
jae
loop
test
push
sub
xchg
xor
mov
adc
mov
dec
addl
incl
nop
add
movsl
mov
andb
std
pop
std
inc
cmc
aam
out
outsb
inc
add
dec
inc
sbb
inc
dec
or
and
stos
test
loope
inc
jle
and
xchg
or
arpl
out
mov
invd
sub
dec
jb
jb
add
or
jp
sbb
inc
inc
fldl
mov
cmpsb
aam
sub
mov
lea
xor
rorl
jae
or
iret
lret
xor
push
xor
mov
test
and
cmp
ffree
adc
and
jmp
xor
jns
lahf
rcr
mov
movsb
inc
add
cmp
xchg
std
pop
out
or
xlat
aaa
fsubrs
add
insl
fldcw
cmp
or
or
imul
sbb
gs
pop
in
sub
out
mov
inc
pop
sbb
jp
ret
sbb
mov
jmp
mov
aad
or
cwtl
lods
push
pop
adc
lods
jecxz
push
ret
xchg
ret
pusha
jl
jns
adc
pop
in
imul
xor
icebp
pop
add
adc
cmpsb
lea
jno
mov
cmpsb
shr
cltd
fiaddl
push
inc
stos
add
sarl
addl
adc
cmp
push
push
jbe
add
jge
add
sub
push
add
pop
ret
jno
sahf
add
and
stos
cmpl
and
pop
xchg
nop
adcl
subb
popf
add
insb
cmpsb
mov
and
xor
repz
es
lds
lds
inc
dec
mov
push
adc
mov
jge
daa
out
add
push
pop
repz
dec
lret
inc
inc
nop
lea
push
mov
scas
sbb
or
jp
clc
cmpsb
shlb
iret
add
daa
cmp
push
cs
es
jge
stos
hlt
mov
inc
cmp
dec
pop
imul
push
push
loop
push
loope
loope
sbb
sbb
xor
icebp
cmp
aad
icebp
inc
loopne
jecxz
mov
adc
pop
pop
cmc
inc
std
int
add
lods
mov
or
add
das
pusha
jle
mov
lods
rorb
arpl
mov
inc
in
add
fwait
insl
test
aad
out
aad
scas
test
xchg
ljmp
push
fs
cmp
push
cli
test
sbb
mov
sarl
jbe
adc
mov
jnp
loope
filds
inc
lahf
mov
pop
stc
add
add
loop
mov
xchg
or
aad
add
lods
cmp
cmpsb
out
add
les
push
es
or
mov
mov
mov
movb
out
and
test
pop
dec
imul
pop
pop
inc
add
or
mov
and
or
js
ret
test
inc
add
xorb
pop
sar
dec
sub
fcoml
and
lds
jns
test
cmp
sbb
cmp
inc
pop
mov
dec
xor
test
mov
add
add
bound
cwtl
fmulp
out
sub
loop
pop
or
ja
sub
aad
mov
xor
push
push
jno
outsl
js
sub
fisubs
fdivs
movsb
mov
popa
loop
pop
mov
mov
inc
popl
repnz
dec
arpl
xchg
outsl
dec
mov
cmp
mov
bound
mov
sub
mov
or
loope
mov
fidivl
test
or
pop
sbb
sub
push
lcall
adcl
ffree
xor
ja
or
jne
outsl
adc
cmpb
loopne
jbe
sub
sbb
sbb
cmp
add
xor
or
xor
icebp
sub
lea
pop
ret
fmuls
sub
mov
lds
loopne
add
inc
xchg
add
leave
lcall
and
popf
adc
push
pop
shlb
subb
test
pop
stos
pusha
in
mov
xorb
pop
mov
push
cmp
addl
mov
add
out
lods
imul
aaa
stos
mov
or
sarb
adc
sub
stos
in
xchg
jp
repz
xchg
xor
push
out
mov
addl
popf
es
sub
inc
dec
adc
add
lods
into
scas
test
push
test
cmp
jnp
aaa
pop
cmp
sbb
bswap
or
sub
mov
mov
fcmove
and
dec
xchg
or
sub
fldl
inc
jg
add
fnstenv
jne
aam
pusha
es
xchg
xchg
loop
or
pop
cli
mov
ja
shl
xchg
xchg
mov
mov
or
aad
mov
iret
call
cmp
addr16
and
loop
xchg
jge
mov
in
add
popa
xor
je
dec
dec
cli
insb
add
jb
hlt
ss
mov
add
out
mov
aas
gs
mov
loope
fnstcw
add
mov
mov
repz
mov
jp
mov
xlat
push
and
enter
scas
mov
int3
lea
loope
sbb
rcrl
or
scas
lock
or
sub
mov
nop
in
lds
mov
mov
outsl
pop
push
push
sbb
jns
add
adc
inc
adc
cmp
enter
int3
and
dec
pushf
scas
jp
outsb
enter
xchg
xchg
inc
inc
push
push
sbb
or
lret
fsts
sub
xchg
test
verr
jmp
loopne
push
lock
sarl
popa
je
add
mov
inc
aas
and
cld
bound
xchg
jbe
inc
leave
imul
in
mov
jnp
fld1
and
add
push
mov
icebp
add
pop
xchg
lods
lods
mov
jnp
clc
push
add
loop
adc
push
das
fstps
lods
aad
pop
and
leave
ss
or
pusha
cmpsb
outsb
pop
push
ret
movsl
add
adc
inc
es
in
cmp
movb
and
sahf
imul
out
mov
cltd
mov
fs
pop
jo
bound
xor
sub
imul
scas
call
sub
outsb
aad
inc
or
push
or
push
push
xchg
pand
push
fsubs
inc
inc
cmp
js
add
lock
aam
dec
and
mull
dec
mov
lods
sub
rcrl
fsubs
adc
mov
add
pop
out
adc
sub
cmp
cmc
adc
push
fstpl
adc
scas
and
out
loope
cld
fs
or
insl
adc
ja
je
outsb
or
xor
push
adc
lods
pusha
push
aaa
xor
hlt
mov
fcom
or
inc
fwait
idivb
and
or
add
add
js
xor
cmp
xchg
xchg
or
fdiv
lds
aad
inc
mov
pop
mov
sbb
cwtl
sbb
lods
aad
daa
xor
sub
adc
das
xor
pop
inc
std
add
cs
xchg
fidivs
mov
push
out
int3
fiadds
lahf
icebp
pop
popf
add
and
adc
das
add
xchg
aaa
subb
adc
int3
fistps
pop
mov
and
ja
aam
dec
ret
cltd
dec
repz
xchg
or
add
xchg
pop
mov
and
imul
add
lret
xchg
or
aas
add
aas
push
scas
mov
lahf
or
cmpsl
sbb
push
and
cltd
xlat
lcall
orl
mul
push
dec
sbb
sbb
mov
in
inc
add
xor
js
inc
jb
call
inc
cwtl
cmp
pop
push
push
wbinvd
aaa
fsubrs
xor
xchg
jnp
jo
jmp
xor
pop
adc
add
mov
adc
js
add
mov
repz
inc
dec
xchg
ficoml
and
sbb
repz
nop
ret
sub
inc
out
pop
adc
ds
jmp
sahf
jmp
xlat
inc
js
scas
dec
jp
mov
loopne
jnp
lret
xchg
sbb
pop
scas
cmp
push
ret
rorl
adc
add
inc
xchg
or
sarl
cmpsl
imul
das
dec
push
sub
icebp
popa
loopne
xor
mov
inc
mov
loopne
sbb
push
mov
cmp
mov
cmpl
and
out
sbb
pop
xor
and
xor
adc
push
loopne
or
or
xchg
xor
mov
inc
cmp
pop
pop
xchg
cli
add
xor
adc
outsl
jno
adc
ret
dec
cmp
icebp
mov
les
jge
and
add
lea
ja
loopne
out
add
test
iret
in
outsl
mov
push
aas
fisttpl
sub
sbb
sub
leave
dec
pusha
sub
cltd
sub
outsb
adc
sub
inc
mov
or
sub
xchg
add
inc
cli
orb
xchg
js
in
ret
pop
sbb
mov
or
sub
daa
mov
adcb
jo
lods
mov
cmp
jne
dec
mov
cmpsb
and
call
repnz
mov
sbb
xor
dec
adc
xor
mov
adcb
lea
mov
dec
inc
pop
lea
fisubrs
inc
mov
push
lods
les
pop
xor
dec
rolb
shl
and
lret
in
test
js
dec
shlb
xor
sub
pop
or
jae
pop
mov
jnp
sub
mov
sbb
rolb
jno
adc
add
icebp
loopne
push
mov
adc
femms
push
jb
sahf
pop
outsb
push
scas
es
sbb
jo
lea
inc
les
pop
and
dec
decl
and
sub
add
hlt
sub
es
inc
add
adc
cltd
pop
push
jb
xorb
shll
js
sub
cltd
push
pop
add
int
test
add
jns
dec
push
and
push
add
dec
sub
add
aas
test
addl
xor
dec
test
lret
or
cmc
push
pop
aaa
loop
xor
inc
add
pop
div
sbb
inc
movsb
add
js
shl
push
mov
add
std
xchg
push
dec
add
subb
ret
or
add
je
sub
cmp
xchg
mov
push
pop
mov
fsubrl
add
sbb
push
dec
iret
cmp
inc
cmp
xorl
and
or
mov
das
mov
sbb
addr16
cmp
mov
bswap
adc
adc
lcall
or
mov
sub
dec
rcr
popa
int3
xchg
mov
jge
test
mov
push
xchg
popa
pop
jp
mov
das
add
push
add
sbb
xchg
fdivl
mov
xorl
cmp
mov
inc
or
add
inc
push
xchg
sub
daa
jp
add
xor
jp
push
dec
xchg
inc
cmp
loopne
push
sub
or
pusha
and
aam
paddusw
pusha
loopne
sbb
or
dec
nop
xchg
dec
in
es
mov
add
cmp
test
push
fs
sub
dec
loope
adc
and
mov
dec
xchg
insb
repz
notl
rolb
lret
dec
cmp
ffreep
aas
cmp
pusha
adc
imul
push
or
pop
cmp
fstp
dec
jle
push
hlt
arpl
add
mov
add
and
sbb
mov
dec
pop
inc
adc
sbbb
pop
adc
xchg
push
dec
pop
fcmovbe
pop
pusha
and
xchg
push
mov
mov
repz
movsl
pop
inc
popa
or
sbbb
stc
add
adc
in
xor
adc
mov
mov
add
push
and
popa
dec
pushf
add
lahf
test
pop
dec
jl
cmpsb
ret
sbb
ret
sbb
in
xor
mov
mov
out
sbb
push
inc
movsl
adc
repz
je
add
pop
movsl
scas
push
xor
mov
and
sbb
stos
pop
lock
mov
setbe
cltd
xor
dec
sub
xor
mov
popa
pop
sub
outsb
fwait
imul
lcall
push
ja
dec
daa
add
dec
xchg
les
scas
sub
daa
mov
ret
adc
adc
outsb
call
xchg
out
push
cld
iret
ds
jge
addl
sbb
js
movsl
mov
out
sub
mov
add
mov
xchg
pop
outsb
daa
movsl
nop
sbb
movsl
sub
cmp
cmp
call
shlb
pusha
aam
jp
mov
in
xchg
test
push
xchg
mov
lret
cmp
sub
pop
add
ds
shl
add
add
popa
mov
jl
fimuls
mov
jle
sub
loope
sahf
pop
fistl
add
jecxz
mov
push
in
popa
loopne
sub
adc
lret
push
or
cmp
sbb
xchg
cwtl
lcall
dec
fwait
js
daa
and
iret
imul
and
popf
or
lahf
dec
or
add
pop
js
xchg
movsb
ret
jb
inc
add
pop
loope
std
lret
scas
push
outsb
fcoml
aam
pop
daa
dec
divl
cmc
add
sbb
sub
es
leave
mov
cmp
leave
mov
stc
push
or
lahf
test
fstl
add
and
jg
and
push
jne
add
jecxz
mov
andb
add
add
sbb
pop
movsl
push
jecxz
jbe
sbb
test
xchg
sbb
add
push
jnp
popf
add
and
daa
jne
pop
aad
dec
pop
int
pop
add
pusha
pusha
pop
add
cmpsl
xor
xchg
xchg
xor
dec
ja
add
ss
lret
jns
pop
inc
mov
sbb
cpuid
out
mov
imul
es
dec
cmp
cmpsb
scas
icebp
aaa
adcl
arpl
fnstcw
mov
sbb
xor
lcall
add
imul
aad
adc
int
add
xchg
test
inc
loop
fnstsw
pop
ror
int
xor
out
iret
add
and
mov
mov
iret
push
sbb
inc
mov
ret
shrl
add
mov
xchg
lret
and
or
cmc
jmp
sub
or
stc
fs
dec
daa
mov
adc
shl
aaa
mov
movsl
push
out
jae
inc
mov
bound
popa
loopne
xchg
add
movsl
test
popf
lock
imul
jg
or
mov
sbb
add
pop
cmp
popf
add
jnp
add
sbb
mov
dec
jl
pop
scas
mov
mov
pusha
mov
sbb
xor
loop
push
test
lods
xor
or
sub
push
push
ljmp
sbbl
mov
test
adcb
stos
mov
adc
inc
js
sbb
inc
lods
add
lods
xchg
dec
push
mov
addb
xchg
pop
push
adc
pop
or
mov
dec
inc
and
adc
in
cmp
inc
cmp
bound
mov
mov
scas
rorb
adc
add
hlt
pop
adc
add
sub
jno
inc
lcall
inc
mov
call
adcb
add
out
pop
pop
jnp
add
es
gs
ret
and
and
movsl
mov
cmp
or
pop
out
popf
rorb
push
pop
in
insb
iret
inc
pop
call
adc
xchg
fs
mov
rcrb
dec
call
fisttpll
inc
dec
iret
fisubrs
jbe
xchg
jle
sbb
mov
pop
pop
sub
xlat
xchg
and
rolb
inc
and
add
push
inc
js
push
fldt
push
add
mov
movb
pop
icebp
das
add
adc
test
or
add
inc
add
imul
jg
imul
pmaxsw
in
sub
ret
jecxz
icebp
sub
jecxz
addl
add
pop
cwtl
insl
sbb
or
mov
pusha
adc
mov
inc
pop
mov
out
mov
xor
fcompl
inc
jb
dec
add
insl
add
rolb
stos
sub
xchg
inc
in
test
loopne
cmp
iret
or
mov
cmp
insb
iret
cmp
mov
movsl
lods
inc
fwait
adc
adc
outsb
mov
pop
push
dec
xchg
lret
adc
push
enter
sub
cmp
xor
loopne
pop
stc
cmp
and
adc
lea
xor
and
cmc
cmc
sub
add
inc
insb
js
out
and
adc
push
inc
mov
inc
dec
inc
cvtps2pi
add
jno
jle
imull
jne
call
push
popl
mov
dec
fcmovbe
sub
leave
iret
or
push
mov
test
xor
lods
jbe
push
ror
and
arpl
mov
dec
cmp
movsl
add
mov
xchg
jne
xorb
pop
scas
xor
arpl
lret
jl
roll
xor
mov
pop
out
arpl
loope
push
dec
adc
dec
cltd
sub
imulb
lahf
mov
inc
xchg
divl
fdivs
push
aas
add
into
std
test
lahf
test
nop
imul
and
xor
pop
loope
add
mov
scas
xchg
inc
mov
scas
or
and
out
push
lahf
out
aas
add
loope
out
movsl
push
aaa
loop
push
rorb
cs
out
dec
int3
adcl
imul
and
fwait
jno
and
fldt
fucomi
and
jae
xchg
movsb
push
scas
test
and
das
scas
cmpsb
ss
sub
push
and
loop
sub
xorl
inc
cmpsb
popf
or
stos
pushf
int
iret
iret
rolb
push
push
xchg
push
jmp
sub
add
or
pusha
pop
inc
adc
clc
out
std
xchg
cmc
js
jmp
inc
cmc
lods
adc
mov
push
fneni(8087
lahf
insl
cmc
add
mov
out
jo
roll
fildll
adc
int
adcb
icebp
inc
mov
xor
push
andps
sub
cs
pop
stos
sub
std
dec
pop
add
pusha
rcll
ret
shlb
ja
adc
imulb
loope
lea
dec
test
mov
movsl
xchg
hlt
movsb
iret
ljmp
mov
inc
ror
fdivr
aaa
mov
loope
mov
pop
fcoms
mov
sbb
movsb
adc
adc
dec
movsl
and
stos
cmp
popa
dec
pop
mov
mov
imul
into
push
pop
sub
mov
lods
cli
enter
adc
call
jecxz
arpl
nop
sahf
mov
cmp
pop
push
pop
test
shrb
and
insb
jo
xor
sub
clc
nop
in
cmc
imull
mov
fsts
out
adc
aam
adc
cmp
sbb
leave
push
loope
loopne
pop
roll
fcomps
movsl
std
imul
out
sbb
mov
jg
or
mov
in
mov
inc
adc
add
sbb
dec
inc
sbb
movsb
adc
lods
xchg
popf
xchg
je
jecxz
sti
mov
pop
roll
xor
and
fs
movsl
iret
jnp
jmp
mov
add
or
xchg
cltd
sbb
movsb
std
cmp
or
adc
stc
push
cltd
push
mov
ficomps
cmp
add
in
cwtl
xchg
sbb
dec
dec
inc
pop
add
popa
es
cmpsl
in
pop
out
xchg
xchg
lock
cmpsb
dec
mov
lock
lds
pop
sbb
movsb
inc
pop
addr16
jb
lahf
add
add
andl
xchg
jnp
cmp
rep
jo
or
cmp
sub
test
out
and
sub
in
ret
sbb
and
test
mov
xchg
outsl
or
aaa
pop
stos
out
xor
test
pushf
and
outsl
sbb
xor
mov
add
insb
pop
and
or
mov
push
pop
mov
int3
pop
add
mov
inc
andl
sub
aam
movsb
xor
and
cmp
filds
rcrb
dec
and
adc
addr16
int
cmpsb
fiaddl
mov
push
negl
lret
aam
sti
daa
stc
test
sub
lahf
scas
pop
adc
push
or
dec
adc
add
cmpsl
test
pop
push
mov
lea
dec
sbb
js
sub
pop
mov
mov
and
fisubl
cwtl
aas
shl
mov
sbb
dec
and
jb
xchg
dec
daa
stos
jle
jmp
and
add
cmpsl
push
pop
adc
movsb
ret
cmp
and
fwait
jecxz
movsl
sahf
mov
or
xlat
ss
ret
pop
loope
add
push
sahf
insb
mov
push
sbbb
or
and
pusha
sub
xor
adc
xchg
xor
out
aaa
push
cmp
loopne
test
clc
sbb
in
or
inc
lods
inc
call
dec
jp
scas
sbb
rol
push
insl
das
dec
mov
out
cmp
mov
subb
cwtl
add
ffree
out
cmc
daa
fs
mov
and
push
adc
cld
sahf
and
and
push
inc
add
test
test
or
out
dec
es
and
sbb
iret
mov
push
shlb
sbb
cmc
jecxz
cli
cmpsl
pop
pop
rcrb
in
cli
add
push
sub
gs
popa
icebp
hlt
loop
sarb
adc
test
icebp
pop
repz
pop
mov
loope
iret
bound
mov
jns
pop
dec
add
movsl
mov
xchg
jno
mov
rep
xchg
lock
int
adc
movb
inc
push
fiaddl
rorl
sbb
movsl
pusha
add
fs
xorl
add
add
rclb
push
dec
and
add
pop
testl
push
add
mov
sub
mov
xor
in
rcrl
or
and
sub
mov
push
rolb
cmpl
imul
sahf
xor
imul
mov
or
dec
das
jecxz
jecxz
out
and
or
ljmp
lret
sub
movsb
push
ljmp
aam
sub
adc
es
add
popa
loopne
in
repnz
cltd
jb
inc
sbbb
pop
cltd
dec
gs
push
jno
stos
mov
ljmp
out
fdivl
mov
ja
and
add
pop
dec
loop
and
and
mov
mov
xchg
rcll
cmp
rolb
pop
adc
push
mov
mov
addr16
sub
arpl
shlb
jo
cltd
cmp
sub
insl
mov
fldcw
add
sbb
jl
inc
daa
sbb
add
push
inc
sbb
jecxz
stos
test
int
leave
mov
and
pop
jecxz
test
pop
xor
enter
dec
add
gs
aad
rorl
mov
mov
outsb
shll
loope
fmull
mov
mov
jmp
bound
aad
cmp
cmp
xchg
in
push
and
sbb
push
les
sub
pop
inc
lcall
add
cli
popf
loope
jno
ja
jb
or
jae
lcall
daa
or
nop
jne
lahf
mov
cmpsb
out
ja
lods
leave
push
popa
dec
cs
pusha
xchg
jecxz
jmp
jo
add
gs
roll
fxch
mov
test
push
imul
dec
pop
test
clc
data16
push
dec
iret
in
push
cmp
cmp
adc
movsl
push
bound
mov
hlt
ret
fiaddl
andl
or
pop
sub
mov
sub
adc
sbb
cmp
out
mov
mov
pop
mull
and
mov
fsubl
add
shl
rcll
sbb
jmp
mov
out
xchg
popa
sbb
inc
xor
adc
pop
fisttpll
xchg
addr16
and
int
hlt
cltd
ret
dec
mov
or
push
jne
test
cli
in
outsb
xlat
ret
adc
sub
adc
cmpsl
stc
jmp
add
and
or
cmp
jo
fisubl
sub
push
add
das
dec
lahf
inc
iret
ja
sub
jl
es
add
fldz
test
daa
ljmp
adc
cmp
daa
pop
cwtl
sub
jle
add
cmp
repz
or
dec
and
pop
or
jle
push
add
enter
or
mov
add
jmp
or
xor
cmc
shl
mov
jb
xchg
mov
sbbb
mov
test
or
dec
sub
xchg
nop
leave
push
dec
lods
pop
aas
mul
jmp
daa
xor
fwait
mov
stos
ret
shll
push
xor
and
and
xor
lock
leave
aaa
enter
mov
adc
in
xchg
jp
push
mov
scas
test
sbb
or
daa
in
or
mov
les
xor
push
push
imulb
mov
rcl
mov
ret
sub
nop
xchg
mov
cwtl
das
push
int
cmp
dec
or
fisttpll
fists
sub
or
icebp
pusha
dec
xor
jle
lds
aam
xor
nop
ss
inc
addr16
jo
jo
push
enter
fwait
cwtl
and
sbb
gs
mov
fs
dec
jl
int3
sbb
adc
adc
stc
ja
cmp
mov
pop
inc
popa
add
mov
out
sarb
fcmovnb
es
sti
push
mov
adc
nop
jmp
jmp
sahf
popa
dec
and
shlb
or
xchg
sub
loopne
call
and
lahf
mov
add
sub
dec
inc
cmpsb
and
cmp
imul
cli
xchg
inc
cmp
faddl
lret
push
cmp
push
and
and
mov
push
orb
popf
aad
sbb
pop
sub
mov
je
add
mov
movsb
xchg
cs
push
inc
jo
ljmp
ljmp
cmp
add
adc
push
dec
arpl
daa
pop
sub
inc
and
push
add
or
fdivrs
add
in
sahf
mov
xor
jge
pop
enter
sub
or
or
ret
test
pop
loop
add
dec
js
jbe
mov
inc
sbb
or
xchg
orb
and
arpl
xchg
push
mov
sti
pop
adc
sbb
mov
loop
lret
sbb
sub
sbb
xor
clc
shrb
data16
mov
bound
jno
mov
xor
add
lahf
push
das
mov
test
push
and
xchg
dec
inc
pop
mov
add
pop
and
cmp
sub
mov
add
sbb
and
add
jno
loope
mov
dec
inc
lcall
cmc
cmpb
add
dec
sbb
add
orb
aaa
or
sub
mov
loope
stc
jae
pop
les
inc
test
push
lods
push
pop
adc
sub
lds
or
loope
push
push
mov
add
outsb
lds
xchg
aad
out
iret
clc
iret
in
roll
hlt
xor
scas
xchg
push
int3
jecxz
jecxz
xchg
jb
inc
int
fdivrl
pusha
and
mov
mov
fistpll
mov
and
mov
addr16
sbb
lahf
xlat
iret
jbe
test
jo
jg
inc
add
mov
and
and
xchg
add
rcrl
xchg
popa
cmpsl
sbb
and
icebp
inc
push
sub
adc
test
mov
js
inc
rclb
jle
loope
add
sub
pusha
inc
stc
add
cmp
cmp
xchg
jbe
sbb
mov
fwait
popf
loope
jno
bound
lock
punpckhwd
sbb
sub
aaa
nop
xchg
outsl
fs
orb
arpl
jecxz
je
mov
and
xlat
subl
inc
pop
pop
add
push
dec
or
xchg
dec
push
and
repnz
stos
jb
mov
fmul
sub
loop
fisttps
inc
cmp
mov
mov
rcrl
js
cmpsb
adc
jle,pt
mov
imul
fsubrs
or
dec
aas
add
adcl
add
sub
adcl
nop
jge
pop
cmp
lock
sti
xor
adc
js
mov
xor
add
mov
or
sub
lods
mov
adc
or
aas
add
lock
cmpsl
cmc
and
jp
adc
and
adc
fnstenv
fbld
rorl
bsr
xlat
push
cs
pop
outsb
jns
iret
adc
xchg
mov
dec
call
dec
filds
es
dec
xor
fadd
xor
stos
and
inc
mov
lret
and
loopne
insb
dec
sub
movlps
add
out
rclb
add
cltd
std
adc
cli
push
das
insl
jmp
add
add
dec
std
inc
xchg
ja
mov
xchg
add
dec
pop
stos
or
sub
dec
sbb
aaa
jb
sbbb
or
dec
inc
stos
mov
or
xor
push
push
jo
lahf
or
lods
lods
add
mov
mov
rcll
ds
push
cmp
rorl
daa
and
cmpsl
xchg
jg
faddl
lock
jecxz
xor
push
ret
sub
xchg
cmp
loopne
les
or
lea
nop
xchg
dec
nop
mov
inc
pop
xchg
cs
lea
into
aam
mov
popf
xor
shlb
and
add
cs
inc
sub
aaa
and
lock
popa
mov
or
add
pop
rcrl
sbb
es
mov
adc
pop
jle
adc
pusha
shrl
sub
add
test
and
pop
inc
sahf
or
and
pop
xor
push
sub
add
or
push
push
test
fs
in
add
movsb
push
cmp
mov
movl
sbb
pop
xor
fwait
mov
xchg
pop
movsb
xor
scas
lret
push
fnstsw
push
test
clc
shl
xchg
insl
iret
lea
mov
imul
daa
loope
and
sbb
mov
cmp
xor
sbb
sub
and
add
jmp
movsl
xchg
or
shrl
aas
sub
xchg
sbb
lods
and
sub
std
sub
fstl
hlt
pop
data16
shrl
jnp
dec
jae
aas
idivb
sahf
push
fs
cld
or
pushl
gs
rcl
and
inc
divl
jae
jo
shll
sub
rcl
lock
push
push
pop
and
mov
imul
aad
fnstenv
or
imul
pusha
loope
push
push
out
jnp
sub
and
mov
jnp
pop
push
shlb
clc
shll
pusha
call
hlt
jl
pop
sarb
shlb
jnp
xchg
push
rcrl
mov
jae
iret
mov
mov
sub
or
and
sbb
jno
xlat
mov
js
addr16
pop
push
and
and
push
adc
pop
shl
pusha
fdivrs
loopne
pop
lods
xchg
inc
imul
in
imul
hlt
sbb
arpl
push
std
iret
lods
add
nop
mov
push
xchg
add
andl
push
xor
sti
gs
aam
cmp
mov
stos
scas
mov
xchg
adc
xchg
cmc
ret
pop
imul
jae
mov
cltd
xchg
push
mov
ret
push
sar
dec
ja
cmpsb
andl
xchg
lret
mov
stos
push
out
jmp
push
pop
or
add
dec
pop
mov
daa
iret
or
pop
enter
push
push
lahf
cmp
loope
shrb
testb
add
push
and
imul
add
push
and
fstps
push
aad
div
add
out
repnz
sbb
mov
mull
ret
ret
xor
cmp
pushl
andl
test
or
je
adc
daa
xor
and
sub
pop
gs
cs
push
imul
add
push
sbb
mov
scas
mov
outsl
cmp
andl
cmp
das
or
or
clc
sbb
cmpsb
and
in
call
in
pop
jb
jge
add
rolb
push
inc
mov
ljmp
sub
pop
sbb
pop
jae
ss
ds
bound
nop
xchg
pop
sub
aad
adc
sub
or
enter
jo
xor
xor
sbb
test
enter
std
lods
mov
sbb
imul
sbb
inc
fsubl
sub
xor
jle
fwait
push
test
add
inc
icebp
les
pop
dec
sbb
arpl
inc
ja
sbb
xchg
clc
push
mov
leave
lods
movsb
mov
dec
mov
or
sub
xor
jns
pusha
icebp
and
cmp
mov
icebp
mov
leave
fnstcw
push
jbe
sti
test
lds
je
adc
pop
cmc
std
sbb
pop
js
jne
push
jno
je
fistpl
lret
mov
cmp
adc
ret
iret
lea
mov
loopne
push
push
adc
je
push
pop
adc
cmp
andl
ja
mov
pusha
hlt
sub
lock
mov
jno
ret
pop
add
pop
xor
sbb
imul
jbe
sahf
loopne
and
xor
adc
orl
sub
mov
inc
push
jno
je
test
cmp
daa
sub
cmp
xchg
xor
fists
mov
dec
inc
daa
sarb
xchg
int3
sub
cmp
adcb
sbb
insb
sbb
mov
movsl
dec
push
shrl
push
das
je
inc
dec
cli
adc
daa
xchg
gs
push
aaa
sbbb
out
mov
outsl
and
sub
xor
lahf
out
cltd
aam
cmp
movsb
ret
mov
js
add
ffreep
pop
adc
insb
or
imul
fsub
cwtl
aam
xchg
mov
sbb
and
loopne
das
push
add
add
dec
push
ja
push
sub
xchg
fcmovu
fcoml
jns
jo
jns
loopne
rolb
sbbl
sub
mov
into
imul
cmp
push
jmp
jo
mov
aaa
add
inc
push
sbb
addr16
jp
repz
cmp
pop
popf
outsl
push
into
add
clc
cs
into
out
clc
into
fisttpll
cmp
ret
push
jecxz
sbb
sti
xor
sbb
sbb
pop
xor
jmp
xor
push
fcomps
mov
lret
push
mov
sarb
fmulp
imul
into
arpl
jp
jo
cld
jo
ret
cmpsl
fwait
pusha
and
jmp
sub
aas
push
test
or
mov
xchg
into
pop
xchg
jmp
push
fcoms
xlat
dec
aad
cmp
sarb
mov
sbb
xor
js
repnz
mov
add
add
mov
fcmovu
cmp
fistl
cwtl
mov
jecxz
mov
fcoms
push
add
rolb
jae
pop
out
lock
in
cvtps2pd
shlb
adc
push
sub
add
hlt
dec
data16
enter
cwtl
imul
shrl
jmp
and
test
mov
add
rol
or
jb
lret
pop
das
adc
mov
iret
lret
push
pop
xor
add
scas
push
sti
and
cmp
jae
mov
daa
cs
fcomps
repnz
jecxz
push
mov
push
das
sbb
sbb
dec
mov
jno
push
call
sub
xchg
pop
aas
pop
cs
push
rcl
xchg
mov
cmpsl
mov
dec
or
jle
mov
ja
mov
into
cs
mov
and
push
lcall
mov
das
and
cmp
jp
xchg
ficoms
inc
pop
lahf
jo
push
addr16
rcl
and
add
push
lock
ret
sbb
mov
mov
cmpsl
call
js
add
mov
pop
fisubs
xchg
lahf
inc
sub
adc
mov
sarl
in
nop
push
xchg
xlat
fists
sub
sub
int
add
sbb
sub
sbb
pusha
mov
aad
rcll
adc
stc
xchg
out
sub
insb
xchg
rol
jns
and
sbb
xchg
insb
sbb
push
sub
bound
movsl
push
out
push
mov
mov
or
jge
stc
sbb
pop
sbb
jne
xlat
movsb
cld
dec
mov
into
lret
dec
sbb
xor
into
adc
js
xor
int
lods
ror
stc
imull
mull
sbb
stc
dec
xor
shll
movsl
cld
insl
lret
mov
adc
arpl
enter
cli
jg
testl
lcall
push
insb
push
sti
lahf
outsl
je
mov
aam
mov
push
popf
xlat
gs
ret
mov
lods
cli
pop
data16
subb
add
mov
enter
inc
test
ss
sarb
orl
icebp
add
cmp
push
scas
pop
mov
mov
mov
cmp
pop
xor
jp
std
mov
pop
icebp
stos
sbb
roll
sbb
insl
outsl
dec
and
into
sub
lods
fsubl
fcomps
imul
and
test
movl
cwtl
cwtl
mov
ja
xor
mov
shll
cli
add
ljmp
fwait
outsb
sbb
add
ja
ret
das
xor
in
mov
xchg
xlat
mov
mov
and
pop
adc
dec
push
sub
mov
cltd
push
adc
dec
or
jecxz
lods
add
jecxz
dec
dec
sub
inc
jnp
daa
mov
and
cmp
jbe
pop
jo
inc
jmp
stc
jbe
sbb
cmpl
out
push
add
shrl
stos
xor
test
cmp
cmc
subb
mov
jbe
stos
xchg
repz
lret
ja
xchg
loop
pop
scas
fdivr
adc
cmp
jnp
mov
aaa
inc
arpl
mov
mov
push
insb
push
and
jl
push
mov
mov
or
ret
outsl
add
pop
fmuls
jmp
mov
add
das
and
lock
pop
rcrl
int3
add
fwait
scas
jnp
fwait
cli
int
add
scas
mov
add
xor
cmp
mov
lds
sub
pop
fildll
jmp
push
lahf
cs
fldl
fdivrs
aas
test
popa
sub
mov
push
sarl
add
fst
ret
mov
fistpl
lret
push
iret
and
lds
ds
lret
pop
test
cs
sbb
or
jecxz
cmp
mov
push
aas
idivl
xchg
add
js
push
cmp
xor
cmp
cmp
jne
rorl
rorb
add
pop
aaa
mov
cmpsl
xchg
cmp
test
or
push
mov
aaa
aaa
lods
inc
add
das
adc
inc
sbb
sub
push
aaa
xlat
adc
mov
pop
add
add
or
outsb
xchg
pop
ss
mov
jg
sar
cmp
fwait
and
pop
pop
lock
jl
mov
sbb
test
call
xor
dec
fsubrl
push
fisubrs
addl
add
pop
push
xor
outsb
stos
shl
aad
roll
xor
push
jne
mov
ds
xor
or
xchg
inc
ds
cmp
xor
cld
pop
push
or
dec
push
jns
xchg
mov
sbb
mov
sti
and
sti
imul
js
lret
shrb
push
mov
imull
xchg
pop
outsb
lods
fnstsw
les
jg
mov
ja
leave
dec
mov
mov
outsl
push
arpl
mov
xor
int
out
mov
in
push
pop
in
or
enter
leave
inc
push
into
or
and
jecxz
test
or
js
push
pop
add
rcr
xor
jno
out
mov
push
bound
sub
cmp
nop
lret
loopne
jl
mov
ss
cwtl
sbb
add
arpl
add
mov
and
mov
cwtl
mov
ret
inc
in
imul
xlat
xchg
cs
test
js
rcll
mov
xor
adc
and
sti
pop
pop
sbb
addb
sbbl
insl
jmp
into
push
lret
movzbl
fs
lret
aaa
or
pop
cwtl
mov
ds
mov
sti
push
xchg
push
out
lds
dec
cmpsb
lret
and
jbe
pop
mov
in
jmp
push
xor
test
fldl
xchg
lock
push
clc
mul
mov
xor
mov
dec
repz
sahf
dec
sbb
sub
lret
fwait
inc
inc
sub
xchg
xor
ret
mov
xor
es
outsl
je
pop
xlat
pop
inc
xor
lret
dec
dec
push
jne
push
ret
js
ss
sub
scas
xchg
imull
xchg
rorl
movsl
lahf
xor
xchg
lret
fwait
notl
sub
pop
repnz
cmpsb
inc
jl
gs
sbb
mov
movsl
inc
adc
lock
sbb
add
and
mov
inc
dec
cmp
ljmp
add
jae
movsb
push
mov
and
pop
in
hlt
lcall
cmpsb
gs
add
loope
sub
push
arpl
fldenv
jnp
jne
add
pop
mov
add
sub
ret
call
cli
push
ljmp
in
lods
add
adc
xor
hlt
mov
fs
xchg
test
sbb
xchg
loopne
loope
outsb
stc
test
fadd
into
stos
cmc
xchg
shr
or
xchg
or
push
cmpsb
sbb
cmp
xchg
ljmp
test
mov
fistps
ja
clc
gs
out
adc
stos
mov
in
mull
gs
lret
jg
lea
mov
xor
in
mov
dec
add
xchg
je
dec
or
mov
sbb
sub
scas
mov
pushl
rorb
mov
hlt
push
lret
stos
insl
fwait
inc
imul
mov
and
cwtl
and
pop
mov
inc
sub
dec
inc
into
lods
adc
int3
sbb
ret
mov
das
int
mov
add
or
inc
add
jmp
add
add
adc
and
cmpsl
cmp
dec
lds
jae
ds
jecxz
ds
push
cmp
nop
loopne
imul
mov
cmp
fistpll
cmp
ret
sub
subl
rorb
daa
add
pusha
jae
gs
scas
aaa
and
add
adc
leave
jmp
sarl
cmp
dec
cmpsl
push
fidivl
xlat
cmp
mov
xor
or
cmp
xchg
pop
fimull
sti
int3
lret
jmp
fcomp
jnp
push
or
add
loopne,pn
sbb
insb
sub
fnstenv
cs
insl
daa
sbb
sbb
outsl
ror
mov
ss
sbb
sub
es
mov
sbb
push
es
mov
lret
leave
or
or
cwtl
je
loop
jecxz
pop
mov
pusha
add
cmp
push
cltd
pop
add
cmp
fidivl
dec
mov
cmp
adcb
adc
jl
test
xor
mov
xchg
fs
pop
fwait
dec
mov
push
and
roll
daa
cmp
sbb
data16
movsb
or
jns
imul
dec
cmp
aaa
test
inc
xor
out
and
pop
mov
loope
add
push
jmp
add
mov
pop
inc
mov
dec
stos
test
cmp
add
shll
jg
rcrl
out
jne,pt
repnz
lcall
xchg
arpl
sbb
push
int3
xchg
dec
cmp
mov
and
pop
adc
sti
mov
jmp
mov
outsl
jl
ret
cmp
rol
lea
jecxz
pop
leave
loopne
push
xchg
mov
loope
fsubp
xchg
fwait
cmp
push
cmp
xor
add
rclb
inc
repnz
sbb
push
ljmp
add
push
or
loope
sti
or
mov
push
lods
ret
movsl
divl
push
lods
cmp
pushf
int
or
xor
test
ret
xchg
dec
in
inc
dec
jmp
xchg
dec
inc
hlt
mov
int3
pop
js
cmp
outsb
add
jno
and
lret
lcall
sbbl
push
mov
movsb
rcll
add
add
cmc
repz
mov
sub
ja
cli
add
xchg
or
leave
daa
add
mov
jle
ret
loope
sarl
add
rcrb
or
and
neg
and
mov
cmp
pop
add
gs
xchg
add
lcall
and
pop
jg
push
je
mov
rol
adc
add
ret
sbb
jne
call
jg
mov
push
and
int
imul
jno
lock
rcr
ret
mov
mov
cmp
sbb
subb
add
jge
jne
xchg
pop
mov
mov
cld
shlb
mov
push
ljmp
lock
jns
cmp
xor
test
mov
neg
fsts
fadds
mov
push
add
add
call
scas
and
xchg
push
sub
les
imul
or
sbb
mov
mov
cmp
and
mov
jo
lea
insl
pop
adc
inc
movsl
cmp
pop
mov
loopne
aaa
push
in
jle
inc
les
jle
push
xchg
and
ljmp
int3
xchg
jb
testl
push
jle
jae
sub
pushf
aad
mov
in
aas
ret
addb
pop
aas
xor
jnp
sub
popa
pop
pop
mov
ja
movsb
ffree
add
push
lea
js
stos
inc
mov
dec
pusha
ss
add
call
push
lcall
cmp
mov
ljmp
pop
pop
mov
xchg
and
push
ja
jmp
jno
es
sub
in
fildll
flds
lds
xchg
jnp
arpl
add
into
inc
mov
stos
cmp
ret
pop
xor
shlb
inc
int3
add
in
push
cmpsl
jge
jne
stos
stos
and
xchg
nop
jge
mov
fnstenv
int
jmp
ljmp
mov
movsl
add
pop
ret
xchg
mov
xchg
jns
imull
iret
rolb
inc
lds
movsl
sbb
mov
mov
add
aaa
outsl
add
js
jns
inc
pop
daa
mov
and
inc
sbb
shlb
sbb
push
and
push
and
push
xor
inc
test
pop
xor
xchg
sbb
mov
pop
xchg
lcall
in
out
inc
push
test
lea
mov
rorl
adcl
push
add
test
and
ret
dec
cmp
cmp
mov
daa
lahf
sub
xor
jae
negl
std
out
rcll
cmp
adc
cmp
cmp
out
push
ja
imul
or
jno
mov
andb
loopne
lahf
sbb
rcll
sub
mov
aas
pop
sbb
mov
jle
mov
aas
adc
jge
add
push
xchg
in
jmp
add
mov
enter
push
xchg
loop
leave
mov
jnp
ss
mov
lahf
push
test
pop
pop
out
js
je
mov
out
add
out
adc
fwait
shrl
inc
or
inc
mov
jge
leave
nop
fwait
popf
jge
cli
cmp
repnz
cli
lret
or
fsubr
loopne
iret
xchg
add
jnp
adc
addr16
dec
mov
jmp
sti
xor
sbb
mov
loop
jns
in
cmp
jae
push
sbb
jle
leave
pop
lock
rcll
dec
adc
pop
gs
inc
js
sbb
fdivrl
mov
fdivrs
popa
in
movsl
add
int
scas
xchg
iret
mov
sub
imul
lahf
fisttps
pop
sarb
clc
sub
xorb
pop
cs
es
sbb
fcompl
into
loope
js
enter
icebp
inc
cmp
push
arpl
mov
les
ficoms
and
push
out
ds
mov
push
add
xchg
loope
jo
mov
sbb
mov
add
adc
xchg
xor
mov
aam
jmp
das
imul
loope
push
or
stc
or
das
inc
movsl
mov
dec
jle
sbb
mov
out
sbb
xor
into
push
inc
test
mov
pop
cmpsl
and
sbb
je
lret
aas
jecxz
popa
xor
rcl
push
imul
imul
mov
push
add
loop
jp
lret
loop
and
cli
xor
adc
inc
dec
sbb
mov
ds
fmuls
cmc
lds
adc
fsubl
sbb
fadd
mov
out
into
adc
outsb
popa
push
ret
xchg
add
sub
add
xchg
adc
add
jle
push
in
dec
nop
in
pop
push
sahf
add
pop
dec
js
idivl
or
jae
mov
xchg
xchg
xor
out
pop
jp
faddl
test
push
dec
scas
cli
imul
or
jmp
dec
xchg
dec
pop
lods
mov
loope
cmp
or
or
xor
xchg
and
jne
or
aad
testl
cld
jp
or
sub
inc
test
rolb
mov
sti
cs
jmp
and
xor
xor
ret
xchg
ret
adc
mov
stos
fmuls
fdivs
nop
rcll
sbb
idivl
scas
orb
clc
dec
jmp
adc
and
pop
inc
into
pop
aaa
ret
push
lea
and
roll
fchs
scas
and
popf
ljmp
pop
sbb
mov
jo
mov
les
pop
add
mov
scas
add
xchg
scas
mov
mov
add
mov
fcomi
subb
push
negl
cld
or
pop
std
andl
push
test
cld
loop
mov
daa
lea
les
imul
sbb
jmp
loopne
movsl
fadd
inc
or
inc
mov
js
ja
xor
jne
lds
cmpl
icebp
push
cld
adc
lahf
fwait
sbb
out
lcall
jg
test
cmpsl
cmc
mov
lahf
or
fscale
xor
ret
std
andl
imul
cwtl
inc
mov
mov
outsl
ret
adc
xor
addr16
sbb
inc
fnsave
repz
and
loope
push
mov
mov
aaa
pop
mov
subb
pop
mov
jbe
sub
sbb
into
sbb
sbbb
push
adc
pushl
enter
pop
imul
xor
adc
lods
enter
icebp
mov
mov
cmp
push
popa
test
int
dec
mov
pushf
or
pop
icebp
decb
push
mov
je
out
stos
push
mov
jmp
pushf
sbb
cmp
cmpb
js
mov
mov
movsb
pusha
inc
mov
sbb
les
ret
xor
mov
clc
push
push
movhps
std
stos
inc
push
jecxz
mov
push
add
ret
out
in
sbb
pop
jo
nop
inc
in
mov
stos
out
sub
in
fdivrs
sub
mov
mov
jmp
js
lods
fwait
stc
in
or
push
leave
jne
and
and
dec
mov
loopne
loope
push
jmp
rclb
mov
add
movsl
jb
add
pop
pop
into
adc
dec
or
jno
shrl
in
loope
ja
into
adc
sbb
imul
adc
sbb
gs
pusha
mov
jne
or
mov
ficompl
xor
jns
dec
jae
aas
adc
xchg
pusha
outsl
test
decl
idivl
into
adc
imul
mov
pop
pop
or
push
icebp
addl
inc
adc
outsl
xchg
adc
fistpl
jmp
inc
mov
and
lds
sbb
subb
sbbl
pop
or
push
ficoml
sub
mov
mov
lods
mov
scas
repz
mov
ficoml
mov
cmp
sbb
push
movsl
aam
xchg
daa
xchg
cmp
mov
mov
or
int
mov
or
bound
sub
add
cmp
mov
and
movsb
xchg
push
fwait
add
mov
or
popa
or
add
jns
adc
imul
sbb
sub
adc
jne
or
sbb
out
push
mov
arpl
add
mov
mov
pop
sbb
cltd
xchg
pop
sub
dec
lret
sub
ficompl
adc
insl
xor
mov
scas
adc
add
dec
dec
sbb
xchg
ret
stos
dec
xor
shlb
bound
xor
or
addl
inc
inc
leave
mov
xchg
gs
aad
xchg
pop
shrl
addr16
adc
dec
push
inc
sbb
xchg
push
xor
pop
sub
lods
cmpb
les
push
sarl
push
fidivl
inc
mov
stos
pop
stos
dec
add
adc
in
movsl
xchg
or
jmp
adc
sti
dec
movsl
push
packuswb
adc
push
adc
cld
sbb
scas
shlb
mov
fwait
cmc
jae
sub
into
fisubrs
pop
je
pop
rcll
or
cmpsl
fistl
imul
jg
dec
adc
stos
add
out
jmp
mov
and
jle
mov
or
adc
jbe
test
outsl
pop
adc
or
lahf
or
add
popf
popf
or
dec
mov
popf
jne
xor
dec
add
or
sahf
xor
into
sbb
bound
jmp
or
or
push
pop
jno
pop
ud2
lea
mov
jmp
mov
xchg
or
and
outsb
xlat
adc
xor
or
ljmp
pop
pop
add
and
je
xchg
pop
cltd
xor
sbb
jge
mov
lea
adc
add
sub
and
lock
lahf
sbb
push
mov
mov
mov
cmp
or
sub
imul
pop
imul
or
ret
into
es
or
ret
lret
add
xchg
insb
add
add
xor
or
or
notl
fsubrl
fisubrs
or
and
jecxz
cmp
inc
daa
test
ja
add
imul
pop
add
and
xor
loopne
sub
adc
xlat
xor
stc
or
sub
mov
outsb
add
mov
sti
jno
sub
cmpsb
in
int
imul
push
clc
out
daa
or
cmpsl
and
cmpsl
and
add
mov
inc
jle
fwait
mov
or
or
out
notb
xchg
cs
mov
cmovae
mov
pop
or
fldenv
mov
leave
inc
stc
or
enter
jge
mov
sub
jne
sahf
mov
xchg
or
cmp
outsl
adc
push
or
test
xor
xor
add
pop
xchg
aaa
and
push
add
loop
sbbb
pushf
movsl
jmp
mov
mov
faddl
ret
ds
scas
push
cmc
ficoml
int
mov
sbb
mov
ds
pop
cld
test
jbe
fidivrl
rolb
and
jge
jae
or
inc
jl
mov
scas
fisubrs
dec
inc
mov
fs
ja
jo
aad
es
add
insb
pop
cmc
mov
adc
sahf
pop
push
xor
daa
mov
mov
int
push
loope
dec
fists
inc
jp
and
jp
jle
or
mov
mov
fcomi
pusha
xchg
rclb
dec
add
inc
in
cmp
sahf
inc
rclb
std
inc
popf
add
test
cmp
pop
adc
cmpsl
and
ja
dec
sub
xchg
popf
mov
xlat
ds
gs
add
add
jne
je
aam
rcll
mov
lcall
adc
cmp
push
repz
xor
xchg
cmpsb
xchg
jbe
or
mov
adcb
ret
cmp
inc
sbb
sbb
push
shrb
add
int3
push
adc
pop
aad
cmp
push
mov
pop
aam
sbb
jns
out
das
movsb
enter
xchg
aas
sbb
ljmp
or
cmp
bound
sub
test
fsubl
sti
ficomps
mov
adc
push
cld
cmpsb
stos
aaa
jb
sti
pop
loop
inc
cli
je
repz
into
push
out
dec
adc
sahf
xor
pop
call
inc
js
add
pop
add
sarl
mov
jg
ret
lret
out
push
jl
testb
mov
and
pop
inc
xchg
cmp
push
lret
mov
in
dec
and
jl
add
sbb
sbb
add
ret
lret
xor
dec
je
mov
cmp
inc
jbe
push
add
mov
push
xor
ror
adc
movsl
cmp
inc
inc
sti
and
mov
aam
mov
inc
adc
jl
add
loop
fildl
ss
fsubs
add
mov
pop
mov
call
cmp
loopne
add
dec
pop
lock
cmc
test
inc
outsl
pop
pop
sub
je
test
into
jb
and
sub
cmpsb
js
xchg
add
out
sbb
fwait
pop
daa
push
push
out
push
hlt
movsb
fildll
xchg
int3
sbb
jp
pop
mov
or
fcomp
or
hlt
inc
add
cld
push
pop
pusha
add
xor
xor
popf
hlt
or
clc
pop
mov
lock
adc
nop
dec
dec
inc
mov
xchg
insl
mov
out
nop
out
lods
lods
push
fstpl
rcrb
and
fcomip
xor
jle
or
clc
or
je
in
mov
aad
mov
fidivs
ret
sub
dec
xor
std
mov
inc
mov
cmc
imul
and
mov
jl
cmc
or
sub
inc
test
out
loop
and
mov
xchg
mov
ja
sub
mul
inc
insb
or
popf
cwtl
imul
jne
push
jecxz
or
inc
rorl
or
mov
bswap
fneni(8087
popa
push
jnp
pop
push
in
aas
bound
rcr
dec
inc
xchg
int3
add
popf
and
or
ficoml
scas
mov
xor
bound
bound
lret
mulb
push
push
scas
or
sub
data16
push
pusha
jmp
dec
js
or
mov
push
mov
cmpl
push
sbb
cmp
inc
xchg
jo
pusha
sbb
ret
hlt
scas
xorb
xchg
or
jecxz
xchg
cli
add
jmp
shlb
icebp
mov
cs
xor
xchg
js
test
in
inc
or
push
dec
addr16
arpl
mov
adc
clc
dec
nop
mov
add
pop
inc
popa
pusha
sarb
pop
add
add
sbb
cmpb
sbb
mov
xchg
rorb
cmpsb
or
icebp
sarl
mov
pop
cmpsb
cmp
mov
jo
sbb
sub
add
std
enter
mov
scas
iret
outsb
fcmovbe
xor
shrb
jbe
push
daa
movsb
call
xchg
insl
cwtl
add
ss
cli
or
pusha
add
pop
subb
inc
xorb
mov
dec
pop
and
and
push
cmp
fcoml
test
pushf
add
outsb
push
popf
push
sub
mov
cld
add
mov
sub
xchg
cs
pop
lock
jg
sub
sbb
notb
and
imulb
sbb
outsb
insb
pop
sbb
xor
lea
je
jb
inc
mov
int3
mov
pushf
and
cs
daa
or
repnz
jg
mov
pop
pop
cmpsl
outsl
mov
mov
cmp
lret
and
add
push
mov
push
ret
mov
cmp
xchg
call
into
testb
dec
push
les
or
jne
outsl
add
icebp
mov
scas
push
bound
es
pushl
loope
and
add
mov
in
mov
sbb
push
cmp
je
sub
mov
push
xchg
imul
adc
and
unpckhps
or
repz
mov
push
enter
popl
shll
pop
sahf
jo
mull
xor
sbb
mov
add
push
pop
fldenv
mov
lret
sub
outsl
or
sahf
pop
push
js
shll
adc
push
and
sbb
daa
cs
jle
sbb
adc
pusha
hlt
mov
and
cmp
mov
push
in
in
jno
pop
fldenv
dec
jl
or
pop
sub
xor
adc
ror
js
stos
enter
pop
mov
aad
xlat
mov
es
dec
jb
outsb
inc
dec
push
cmp
mov
imul
pop
jne
les
fmull
ret
insl
push
and
xor
sbb
push
lock
enter
dec
stos
cmpsl
mov
pop
adc
jo
pop
add
push
and
incb
jmp
aad
jbe
mov
fstpt
loope
cmp
stos
arpl
ret
mov
or
push
inc
jns
imul
jo
and
add
sbb
adc
sub
imul
ja
jl
into
inc
in
adc
xlat
jge
subl
adc
adc
js
les
xchg
push
ficomps
shlb
cmp
aam
jle
xor
xor
sub
lods
and
dec
push
shl
adc
loop
xchg
sbb
hlt
sub
scas
ret
add
rcll
jl
xor
scas
push
mov
pop
inc
dec
jg
mov
fnsave
add
mov
inc
push
ret
enter
sarb
dec
inc
scas
adcb
dec
and
and
jo
insb
xchg
icebp
push
lret
sbbb
notb
inc
mov
cli
fs
pop
fdiv
pop
gs
mov
pop
mov
pushf
pusha
xchg
pop
adc
inc
stos
out
push
push
jae
adc
cmp
pop
jb
xchg
xor
dec
pop
adc
fidivrs
push
mov
hlt
pop
mov
and
es
add
jbe
cmpsb
int
imul
cmpsl
jo
add
fbld
data16
push
bndldx
js
das
or
test
lock
inc
mov
and
sbb
bnd
outsb
scas
push
push
jge
in
jmp
clc
jbe
inc
pop
loop
insl
xchg
sbb
push
mov
fstpl
fdivl
imul
mov
test
push
test
in
cltd
inc
mov
dec
push
imul
out
push
mov
push
inc
mov
icebp
pop
addr16
ja
xchg
arpl
xor
mov
mov
cmp
sahf
mov
aaa
pushf
inc
test
inc
lods
out
hlt
jne
dec
inc
insb
lock
shlb
xchg
mov
adc
in
jnp
push
lock
pushf
mul
dec
add
fisubrl
notb
xor
pop
xor
scas
adc
sub
lods
lahf
mov
je
stos
outsb
and
out
popa
jb
sbb
mov
mov
push
dec
adc
push
cmpsb
pop
push
mov
outsb
mov
inc
sub
in
xchg
mov
clc
mov
cmp
cmp
cli
lcall
mov
mov
loop
pop
push
sub
les
mov
push
push
pop
sub
push
outsb
lods
dec
add
nop
mov
push
xchg
mov
sti
push
jnp
cmp
or
rclb
xchg
or
inc
in
adc
xor
xchg
or
adc
shll
clc
add
or
jb
rolb
js
test
test
rorl
xor
or
or
add
mov
sahf
ret
add
cmp
int3
fdivs
or
dec
leave
cs
add
add
push
pushf
mov
add
mov
enter
movsl
das
cmpsb
pop
aam
push
mov
notl
divb
lock
mov
mov
shrl
ss
adc
xchg
push
rclb
out
movsl
or
mov
ljmp
jb
or
push
rorl
lret
lret
cld
cmp
xor
add
push
or
cmp
cmpsl
ret
pop
or
sub
lcallw
roll
mov
push
fwait
add
test
cmpsb
adc
cs
fwait
mov
sub
mov
lret
insb
negb
push
mov
ret
shlb
cmpsb
in
pop
mov
pop
je
cmc
mov
dec
sub
sar
loop
push
and
fs
add
push
jmp
and
mov
lods
fiadds
cmpsl
and
stos
mov
dec
test
jmp
mov
mov
mov
add
mov
push
cmp
and
in
movsl
pop
adc
xor
shll
cmp
addr16
out
sub
outsb
shl
push
add
in
subb
sub
pusha
fsubrl
lcall
stos
test
xchg
or
add
loope
test
popa
mov
cmp
mov
and
push
xchg
ds
inc
in
adc
push
loop
or
iret
cmpl
pop
sbbb
push
cmp
dec
and
movsb
push
ja
and
dec
sbb
in
fwait
and
clc
jbe
xor
lock
add
or
lods
or
xchg
or
and
mov
fwait
das
or
out
sub
add
addr16
leave
andb
imul
and
ret
gs
shll
mov
cwtl
fnstsw
cmp
xor
mov
jbe
pop
jbe
and
cmp
aaa
je
bound
sbb
xor
popa
ss
ljmp
fmuls
add
or
mov
in
into
push
and
add
pusha
jnp
jg
push
sbb
aaa
xchg
jp
scas
sbb
cmpsb
loope
jle
cs
aad
xchg
into
sub
loop
xchg
popf
int3
xor
dec
es
push
fdivl
cmp
popa
mov
jmp
push
and
or
cld
hlt
lods
fadds
dec
bound
xchg
or
mov
mov
push
xchg
adc
fadds
outsl
or
in
ficoms
inc
mov
inc
pop
mov
loope
push
stos
out
iret
push
jg
es
lock
test
insb
out
mov
ds
or
push
fcomps
push
xchg
xor
pop
in
and
movsl
or
into
cmpsb
push
or
cmp
xchg
outsl
or
subb
or
sbb
insb
jb
push
and
insb
push
push
sbb
push
outsl
lods
out
adc
mov
mov
sub
sbb
push
loop
push
fsubs
push
inc
mull
rcrl
cmp
cmp
mov
add
jge
rcll
int3
mov
loop
pop
mov
or
or
cltd
push
jecxz
mov
das
mov
xor
jns
js
jge
cmp
xchg
dec
cwtl
loope
mov
in
lcall
dec
fs
outsl
mov
adc
clc
push
xchg
addl
mov
push
xlat
push
add
cmc
push
jmp
lcall
mov
scas
and
ljmp
bound
adc
cs
mov
in
dec
dec
xor
stos
push
je
cs
cli
cli
add
clc
cli
xor
dec
out
int3
dec
xchg
or
add
lock
dec
adc
and
gs
sbb
jne
out
push
lcall
mov
sbb
loop
test
into
adc
pop
dec
dec
mov
call
push
bound
mov
fucomip
xchg
cmpsb
nop
xlat
lcall
jecxz
cmp
cli
js
lods
pop
cmp
fwait
call
adc
pusha
add
cmpsb
push
push
movsb
mov
insb
ret
ret
test
call
es
cmc
jle
xchg
push
cli
sbb
mov
mov
inc
pop
out
dec
cmp
push
xchg
and
fstpl
mov
or
push
cwtl
rorl
pusha
les
aaa
popa
xchg
insb
cmc
push
nop
adc
push
sbbb
lcall
out
jb
cld
jmp
test
orl
cli
ret
clc
mov
mov
mov
fdiv
sub
cmp
loop
je
pop
in
ljmp
mov
addr16
mov
ret
or
je
aaa
jnp
popa
add
pop
dec
fidivs
call
push
xchg
push
and
mov
imul
add
aaa
orl
loop
pop
push
mov
adc
in
dec
inc
cld
jmp
pop
call
jae
cmp
dec
push
cmc
mov
push
aaa
and
pop
xor
jl
cmp
push
rolb
mov
decl
mov
movsb
pop
mov
dec
or
adc
sbb
push
jp
lods
outsl
and
mov
divb
scas
enter
adcl
ret
inc
xor
stos
repnz
jnp
cmp
mov
push
mov
add
out
in
fidivrl
outsl
push
mov
mov
call
repnz
dec
jo
stc
pop
xor
push
add
cltd
stos
cmp
call
dec
and
bound
sub
push
or
mov
cltd
ds
xor
push
cs
add
scas
in
push
cmp
ficoml
xorb
add
loop
imul
mov
cs
cmp
mov
js
ret
jo
testb
loop
inc
jne
push
mov
mov
sub
pop
jo
mov
outsl
mov
ss
jb
cmp
mov
loopne
adc
and
mov
inc
jb
sub
mov
cmp
sub
cmp
idivb
xor
ljmp
fdiv
mov
sarb
jp
out
jp
sbb
xor
mov
mov
jo
daa
orb
add
adc
loopne
inc
repz
les
push
jge
out
xor
or
rep
mov
ss
push
divb
jns
loop
cs
xor
daa
fildll
mov
pop
mov
clc
mov
dec
cmpsb
pop
push
ss
or
je
mov
out
xor
cmp
jbe
loope
addr16
push
data16
inc
pop
mov
lahf
movsl
int3
setbe
test
mov
int3
inc
jo
mov
mov
or
sbb
mov
stc
inc
mov
dec
call
clc
add
sbb
mov
dec
loop
loopne
jge
mov
jno
pop
cs
aad
push
gs
fsub
add
nop
xchg
movsb
push
sbb
mov
fnsave
pop
jl
adc
ds
sbb
jbe
dec
es
clc
jo
pop
sub
xorb
ljmp
and
cmpl
mov
inc
nop
or
mov
mov
sbb
inc
mov
cld
inc
add
mov
jnp
jecxz
fstps
pushf
cmp
stc
hlt
xor
pop
push
cmp
mov
dec
xor
push
or
push
jle
dec
shlb
or
fucomi
sub
push
sbb
cli
inc
pop
lock
mov
xchg
sub
xchg
sbb
imul
lahf
or
jno
push
stc
out
sbb
push
sbb
mov
stos
jae
pop
testb
mov
add
push
andb
fs
nop
flds
loop
in
hlt
es
push
mov
scas
jo
pop
xchg
jle
cwtl
fs
pop
sahf
mov
sbb
dec
jnp
jae
stos
adc
jl
fdivl
aas
or
push
mov
add
addb
aad
push
xlat
add
fsubp
xchg
rcrb
movsl
mov
loop
mov
in
call
popa
xchg
in
xorb
cmpsb
push
push
jnp
decl
adc
mov
cli
fisttpll
aad
hlt
stos
xorb
lods
inc
ret
aam
popa
ficoms
stos
aad
ds
add
scas
xor
es
push
cld
jno
and
pop
insl
in
and
je
cmp
stos
adc
daa
push
add
mov
xchg
mov
stos
xor
mov
xor
jg
fs
jb
dec
cmp
mov
add
lret
cmp
pop
xchg
adc
inc
nop
js
push
repz
xchg
mov
add
mov
sub
sub
mov
xchg
jo
pop
mov
shl
loopne
xchg
mov
imul
jnp
scas
sub
aad
xor
jbe
and
mov
test
and
inc
stos
btc
mov
test
adcb
rcrl
ds
xor
std
cmpsb
call
pop
jl
lcall
pop
clc
sbb
arpl
enter
cld
sbb
gs
pop
cmp
insb
insb
out
dec
jg
push
or
mov
aas
outsb
sub
mov
mov
movsl
imul
add
fisttpll
xchg
or
gs
dec
les
jp,pn
sub
xor
jne
xor
add
in
fidivl
fs
imul
mov
mov
sbb
or
sub
pop
adc
ljmp
fiadds
enter
push
lods
mov
dec
sahf
dec
lods
fldenv
jl
inc
and
mov
cmc
ja
xchg
sub
or
mov
push
mov
fsubl
arpl
jnp
out
add
jge
outsb
add
aas
add
inc
push
push
arpl
cmp
test
mov
arpl
cmpsb
rcrb
filds
aad
pop
pop
mov
sub
es
push
xchg
or
movsl
bound
test
and
inc
addr16
outsb
mov
inc
adc
adc
adc
ljmp
inc
sub
push
fcoml
adc
sub
fcompl
mov
xor
jno
inc
add
inc
pop
sbb
mov
dec
sub
pop
rolb
dec
imul
dec
pop
inc
fbld
lock
mov
xor
xor
movsb
pop
lcall
push
xor
mov
xchg
or
loopne
or
jae
test
sbb
aam
pushw
and
cmpsb
or
pop
cmp
mov
mov
mov
dec
pop
les
jg
mov
pop
js
add
push
insb
cmp
sub
jecxz
pop
insb
mov
fdivl
cmp
or
loope
data16
jae
inc
and
dec
jnp
pop
loopne
adc
lcall
and
add
add
lods
add
jp
insb
pop
xor
sar
inc
push
loopne
fwait
lret
cmpsl
outsb
pop
or
jnp
addr16
icebp
mov
mov
pushf
ja
fadds
movsl
mov
loop
cmpl
clc
mov
sub
sub
mov
mov
les
and
or
xor
call
loopne
pop
mov
mov
ret
jecxz
dec
add
or
mov
outsb
adc
dec
pop
fldl
scas
sbb
subb
xor
sarl
pusha
add
imul
mov
lods
lret
dec
lods
test
stc
add
jne
fsubr
sbb
arpl
in
test
test
fistl
mov
in
popf
add
inc
xchg
and
mov
stos
pushfw
fistpl
add
mov
dec
dec
and
and
loope
insb
pop
lret
aam
loop
cmp
sbb
push
loop
push
aaa
add
mov
inc
sub
sti
inc
jle
push
int
jo
jp
pop
filds
dec
lret
mull
fidivrl
xor
mov
jbe
ficoml
jmp
lea
push
xlat
insl
sahf
ret
clc
dec
push
sub
mov
dec
and
jg
push
lods
pop
xchg
dec
aad
mov
pop
push
inc
pushf
clc
and
add
mov
jns
add
cmc
pop
and
clc
and
rorl
inc
mov
mov
jmp
mov
xor
xchg
push
movsl
push
adc
cmpsb
cwtl
jge
fwait
test
andb
add
in
mov
jge
cld
cmpsb
repz
cmpb
lahf
jo
adc
or
push
jo
lahf
push
mov
sbb
inc
push
sbb
dec
es
cmp
fs
pop
cmp
jge
ret
add
pop
js
inc
sub
cs
fldcw
ds
in
pop
push
les
popa
aam
sbb
add
out
pop
je
mov
fdivr
xchg
out
dec
aaa
lcall
mov
adc
xchg
in
add
inc
adc
push
push
jbe
mov
or
mov
adc
cmp
pop
add
mov
ds
pop
test
inc
dec
lock
lods
enter
or
push
test
stos
adc
cmp
fsubrl
int
loopne
sub
mov
mov
xchg
xchg
pusha
jo
sub
push
push
pusha
sbb
popa
pop
subl
insl
push
out
adc
add
jbe
fidivl
adc
fdivrs
mov
dec
or
adc
or
inc
mov
cmpl
push
sub
pop
rcrb
cmp
stos
leave
or
sbbb
clc
lahf
int
sub
fsubl
clc
aas
std
or
loopne
aam
mov
inc
xchg
clc
es
mov
adc
sbb
loope
gs
test
lds
ljmp
out
popf
dec
inc
and
cmp
lods
rcr
xchg
lea
lock
mov
or
cmp
ret
inc
xchg
mov
sbb
sub
mov
test
adc
jae
sub
inc
cli
push
clc
mov
lock
insl
xchg
in
xchg
xchg
ret
ss
xor
jbe,pt
sbb
leave
adcl
sbb
clc
sarb
dec
xorb
jae
adc
jg
lahf
fmuls
loopne
pop
add
lret
loop
ja
xor
dec
pop
aam
xor
cmp
movhps
push
clc
shll
cmpsb
mov
adc
mov
mov
fsubrs
xor
pop
push
mov
iret
dec
cmp
dec
sbb
push
stos
adc
add
xchg
inc
mov
out
add
icebp
xor
pop
mov
inc
pmaxub
mov
test
and
clc
and
test
test
mov
paddq
insl
cld
stos
add
popf
daa
inc
stos
xchg
icebp
movsl
fucomp
testb
pop
mov
add
sub
and
call
pop
mov
ds
push
repz
dec
sub
sbbl
add
ljmp
cli
jae
pop
xor
push
inc
push
pop
add
dec
mov
insb
pop
dec
loop
adc
lret
call
outsb
les
mov
inc
loop
push
std
inc
jmp
pop
jne
test
ss
out
aaa
inc
xchg
mov
je
arpl
push
int3
mov
arpl
iret
rcrb
repz
out
cmp
add
fsubrl
pop
add
adc
mov
cs
adc
lods
sbb
mov
xchg
rclb
inc
loop
hlt
aaa
sub
adcb
test
and
and
push
or
push
std
mov
ljmp
mov
cmp
inc
sahf
out
mov
icebp
mov
mov
mov
shll
adc
aad
add
or
mov
pop
mov
js
cmc
inc
ret
imul
push
and
inc
add
push
pop
cmpsb
out
shlb
inc
ret
pop
call
or
movsb
je
lret
bnd
stos
mov
div
push
push
push
inc
xchg
loopne
outsl
mov
sbb
lock
jbe
pop
rcll
fiadds
test
xchg
push
push
mov
xor
mov
push
xchg
loope
or
lret
mov
imul
push
aam
dec
lahf
inc
out
lods
sub
inc
push
lcall
sti
pop
fmulp
rcrb
push
aad
les
mov
jne
in
dec
sbb
jno
jg
in
ja
xchg
push
mov
and
jns
or
add
punpckldq
popa
dec
dec
inc
into
sar
push
jno
sti
jle
and
ja
and
sti
mov
push
inc
repnz
ja
sub
jmp
sbb
pop
sbb
add
dec
inc
outsb
jge
ds
push
jae
dec
pop
ret
sbb
or
pop
sbb
push
sahf
adc
jge
pushf
jecxz
outsl
cli
mov
cmp
mov
mov
lahf
ret
lcall
mov
push
jge
cli
xchg
add
pusha
ja
xor
dec
fdivrl
mov
mov
dec
loope
lret
jg
sahf
mov
insl
daa
leave
fsts
pop
xchg
ss
pop
pop
sub
cld
in
push
orb
mov
dec
aad
or
sbb
pop
cmpsb
das
cmp
and
mov
sub
sub
les
das
lcall
aas
push
pop
movsb
les
ss
js
sarb
addr16
mov
pop
pop
addr16
sbbl
daa
out
ret
xor
pop
outsl
push
mov
outsl
or
xchg
add
es
jmp
aaa
ret
push
mov
mov
cmpl
iret
out
mov
adc
xchg
rorb
shlb
mov
xlat
and
mov
iret
cmpsb
iret
xor
mov
bound
outsl
dec
ja
popf
mov
daa
jae
xor
dec
dec
sbb
jns
push
cmpsl
aaa
stos
btr
idivl
enter
popl
xlat
mov
negl
push
jl
sbb
into
or
add
divl
jnp,pt
or
xchg
sbb
lods
mov
cmp
sti
into
mov
into
jmp
push
push
das
int
aaa
or
inc
imul
add
pop
divl
or
and
mov
or
pop
cmp
int3
outsl
dec
out
ds
int3
test
loope
push
cmp
mov
aaa
mov
jo
outsl
mulb
fwait
sub
mov
cltd
lret
sbb
push
daa
addr16
pop
adc
ja
inc
and
dec
xlat
jge
mov
or
and
dec
mov
mov
push
aas
lret
syscall
mov
ja
sbb
lret
out
shlb
pop
mov
shll
aas
notl
sahf
lret
fst
fxch
leave
popf
add
movaps
ja
mov
inc
cmp
scas
or
xchg
jae
sub
sbb
inc
and
sbb
jge
aaa
enter
and
or
addl
push
or
sti
cs
pop
enter
or
inc
fnsave
xlat
or
stos
sub
out
fildll
ja
pop
push
dec
xlat
es
scas
jmp
push
cmp
xchg
adc
dec
mov
sub
push
push
adc
jp
sbb
dec
imul
adc
addr16
xchg
xchg
out
das
mov
fbstp
aad
aad
inc
out
jno
fimull
push
ds
fs
out
sti
sbb
and
sti
loop
push
mov
and
lret
movhps
cmp
and
pusha
and
negw
das
mov
lahf
sbb
sbb
sbb
mov
testl
or
mov
adc
shl
and
jbe
push
add
and
mov
mov
or
mov
push
divl
rcr
pop
pop
cltd
subl
dec
out
orb
sbb
out
dec
testl
xchg
inc
jecxz
jmp
cmp
xchg
int
rcl
xor
add
add
sub
jnp
pop
dec
inc
sbb
das
mov
sbb
sarl
ja
iretw
sti
pop
iret
jb
lret
out
daa
daa
rorb
rclb
add
daa
or
sbb
mov
ja
mov
fnstsw
jmp
push
inc
pop
or
mov
ret
shll
fucomip
jne
lock
fistps
fisttps
or
sbb
lahf
xchg
or
out
movsl
inc
fildll
cmpsl
or
ss
out
mov
push
xorl
or
xchg
cmp
aas
fsubp
fucomp
sti
test
pop
dec
adc
in
cmp
fst
add
add
shlb
notl
sbb
jmp
fisttpll
dec
push
push
pop
or
xor
adc
pop
jmp
in
ret
cmpb
xchg
aas
fdivrl
and
or
inc
out
sbb
mov
jge
or
adcl
mov
lahf
pop
out
push
and
fsub
and
mov
push
fldt
dec
fstpt
and
pop
mov
pop
cmp
or
test
lret
adc
and
pop
mov
xor
fsubrs
or
mov
sub
xor
test
rep
adc
and
add
cmc
mov
sbb
push
xlat
gs
cmp
dec
shrb
jge
or
pop
or
daa
push
scas
dec
daa
push
adc
jmp
nop
int3
or
fcompl
test
and
popa
and
mull
insb
xor
push
arpl
push
add
notl
subl
add
scas
sub
dec
outsl
sbb
or
cmpsl
or
push
hlt
add
pop
sub
jg
cmpl
xor
jbe
cmpsb
ficoml
arpl
mov
daa
xchg
je
or
sahf
jmp
mov
out
rcrl
mov
das
and
loopne
inc
sbb
dec
ss
push
icebp
and
pop
add
into
mov
jmp
sbbl
lods
pop
xchg
dec
xor
jge
mov
adc
cmp
cli
int
shll
adc
add
out
add
fisttpll
or
ficoms
dec
jnp
add
add
jle
pop
jno
pushf
addr16
data16
addb
fsubr
jbe
add
or
inc
jno
call
ret
dec
movq
sahf
mov
push
or
xchg
push
je
je
enter
fcmove
mov
push
or
nop
daa
das
push
into
loop
jl
sahf
jl
jmp
mov
xor
xchg
bound
dec
and
cmpsl
ja
rcl
lea
jno
test
xorb
cs
icebp
sub
lock
adcb
inc
xor
push
inc
mov
inc
xlat
push
ljmp
mov
lds
xchg
mov
inc
popf
cmp
or
mov
mov
pushf
dec
push
js
cli
jbe
cmp
add
es
jo
dec
sub
fbld
in
fisttpll
inc
adcl
in
cltd
cmpsb
cmc
bound
xchg
xchg
jno
test
imul
add
cs
mov
dec
inc
xor
pop
or
in
sub
mov
addb
movsb
test
test
in
add
jo
sbb
mov
int
insl
jae
lock
add
add
insb
xchg
andl
jp
enter
jbe
adc
icebp
add
fsubrl
insl
adc
mov
popf
out
pop
mov
popa
leave
ss
xchg
xor
call
loopne
iret
repnz
xlat
mov
insl
fnsave
cmc
cmp
pop
add
mov
sub
inc
pushf
sbb
jo
das
outsb
lods
in
into
pusha
and
ret
pop
cmc
and
dec
push
and
inc
add
xchg
ja
fs
movsb
scas
mov
xchg
push
add
xchg
rorb
dec
lock
mov
sbb
dec
jnp
add
sbb
rcrb
adc
pop
add
mov
jo
pop
mov
add
add
rcll
dec
or
leave
mov
scas
xor
mov
pop
sbb
inc
pop
mov
mov
outsl
addl
mov
cmpsl
mov
inc
dec
and
sti
shr
add
out
lock
add
sbb
xor
sti
mov
add
shll
sub
enter
dec
fildll
frstor
sahf
insb
sub
scas
jmp
mov
das
mov
adc
mov
add
ja
cltd
jecxz
push
pop
addr16
ja
jbe
movsl
outsb
sub
adc
jle
or
out
roll
pop
inc
inc
pusha
out
mov
sbb
xlat
or
jae
mov
pop
sbb
not
inc
push
sbb
outsl
hlt
mov
pop
push
adcb
mov
dec
sbb
xchg
pop
xor
dec
jne
pop
jns
xchg
into
subb
enter
fwait
and
adc
jle
push
adc
pop
mov
repz
ljmp
test
aaa
movsl
sub
sarb
or
push
call
je
pusha
and
inc
jge
scas
stos
push
mov
inc
loope
sbb
and
loopne
outsl
push
and
add
mov
sbb
xchg
and
das
std
out
push
movsb
or
shlb
clc
out
and
lret
mov
sbb
call
fsubl
pop
jnp
lea
movsb
or
insl
inc
xchg
daa
mov
sub
sub
fwait
jnp
lods
and
mov
mov
xchg
mov
and
lods
or
dec
add
dec
out
sbb
testl
in
xor
add
jnp
push
les
pushf
adc
ret
ljmp
push
add
pop
xchg
dec
push
jnp
add
mov
in
cld
jg
or
jge
inc
jecxz
cwtl
movsl
fadd
adcb
jg
cmp
push
stos
cmp
jbe
sbb
and
mov
shll
sub
insb
les
push
jns
dec
mov
pop
xchg
pushf
inc
movsl
and
push
mov
ljmp
add
dec
adcl
loop
jno
fwait
gs
mov
fcompl
mov
fsubrp
int3
adc
sub
mov
cmp
adc
adc
loope
fwait
jmp
or
ret
adc
sub
pushf
mov
movsl
jg
inc
fidivrs
and
fwait
ror
fldenv
push
shll
pop
sahf
xchg
dec
sub
push
loopne
dec
add
add
mull
in
orl
aaa
shlb
lahf
std
and
dec
mov
sub
sbb
mov
fnstsw
push
cltd
sub
xor
js
mov
mov
inc
and
call
sub
fnsave
sbb
xor
cmp
outsl
inc
add
push
out
das
xor
adc
mov
dec
aam
push
push
cwtl
mov
sbb
mov
inc
sbb
popl
and
enter
das
stc
pop
sbb
iret
pop
aaa
adc
jae
rolb
inc
jge
nop
jae
mov
mov
addr16
cltd
shll
in
mov
das
cltd
adc
and
cmp
dec
jp
mov
call
and
fisubl
aam
mov
sbb
add
sub
mov
sbb
or
test
fldenv
movsb
push
loopne
xchg
jmp
outsb
out
or
jae
sub
mov
push
xor
cs
scas
sub
cwtl
sbb
loop
sarl
insb
mov
sub
push
lahf
sub
imul
cmp
rclb
sbb
lods
mov
notl
bound
mov
fisubrl
std
fisttpl
fldcw
xor
in
fwait
or
pop
cmp
cwtl
inc
aas
add
add
sbb
sahf
cwtl
cmp
aaa
cmp
and
adc
faddl
push
pop
mov
ja
cmpsl
test
das
out
xchg
sbbb
adc
mov
mov
pop
int
jno
lock
scas
cwtl
cmpsl
xchg
and
push
mov
outsb
pop
jnp
sub
loopne
cmpsl
xchg
movsl
jge
cwtl
shlb
dec
mov
outsb
and
sbb
aas
sub
adc
or
add
faddl
mov
subl
mov
and
popa
push
or
and
add
jmp
adc
xchg
fsubr
xor
push
test
pop
ja
ja
fwait
lds
movntq
push
xchg
push
data16
cmp
out
popf
sbb
shll
jge
xlat
js
pusha
stos
nop
lcall
aad
out
cmp
aaa
aaa
icebp
sub
out
jo
test
imul
sbb
jno
cwtl
insb
adc
scas
sbb
lcall
or
pop
mov
idiv
sbb
test
mov
aad
mov
sbb
rdmsr
dec
mov
inc
and
mov
and
popa
gs
xchg
out
and
or
fs
stc
lahf
push
daa
adc
xor
stos
lret
pop
cmp
jnp
aaa
out
sub
lret
sbbl
imul
and
scas
jecxz
imul
fnstenv
out
pop
adcl
cmpsl
push
loopne
dec
out
mov
xchg
fs
pop
insb
mov
lcall
xchg
loop
into
out
fbstp
mov
adc
adc
adc
shl
data16
test
andb
jae
inc
pop
mov
adc
jg
pop
xor
sbb
mov
dec
or
inc
mov
push
stos
ja
fwait
shrl
lods
cmpsl
loope
icebp
ss
push
xchg
pop
jb
xor
or
xor
out
jecxz
dec
jmp
and
insl
cmp
bnd
xchg
sbb
pop
mov
mov
inc
mov
adc
mov
ja
push
xchg
jne
mov
push
std
cmp
aaa
add
in
push
test
xor
jmp
jge
js
xchg
test
lods
mov
xor
pop
push
jmp
int
push
pop
add
aad
sub
mov
test
pop
mov
inc
in
aaa
iret
sbbl
jae
lahf
fucomp
cmpsb
or
push
jb
pop
adc
push
mov
xor
mov
push
or
out
in
mov
aam
ret
fs
mov
lret
int
imul
xor
out
sarb
xor
adc
repz
push
push
mov
addr16
add
inc
dec
js
add
inc
in
add
shrl
sbb
sub
iret
jnp
pop
in
and
xchg
scas
push
in
pusha
or
in
fildl
outsb
sub
mov
xor
jae
jg
cmp
js
push
inc
xor
scas
and
aad
pop
in
scas
push
push
add
push
pop
add
ret
jl
inc
sub
jmp
mov
pop
xchg
in
jno
lcall
jle
js
push
jecxz
das
xor
popf
add
repnz
sub
xorl
add
cs
cmp
sub
inc
sahf
push
adc
rorl
cmpsl
ljmp
filds
jecxz
mov
sbbb
fadds
loope
pop
push
loope
push
push
outsb
pushw
or
vmovdqa
mov
nop
fldl
popf
add
dec
das
xor
scas
test
mov
insl
add
pop
mov
hlt
ds
mov
outsl
mov
add
add
pop
add
cmp
and
inc
pop
pop
xor
std
xchg
das
inc
mov
lock
jo
push
outsl
sub
jb
add
add
cmpsb
dec
jmp
outsb
add
or
lods
mov
movsl
jle
sbb
adc
push
sbb
fwait
xor
or
jmp
or
adc
in
and
js
sti
mov
or
aaa
aas
lea
adc
xor
sti
ret
test
xor
sbb
adc
jne
push
dec
test
into
sbb
inc
pop
jl
xchg
out
fcoms
loop
das
xchg
int
pop
daa
dec
xor
insl
jne
inc
clc
mov
cli
or
leave
dec
outsl
push
jmp
fnstsw
out
jl
xlat
or
sbb
adc
jp
mov
mov
es
lahf
push
aas
adc
jge
jl
mov
push
push
sub
sbb
xchg
cmpl
int
fstl
shl
fiaddl
outsb
jmp
push
ljmp
loope
lret
popfw
push
inc
les
imull
xor
imull
jo
inc
sti
mov
push
xor
xor
jle
sti
pop
xchg
mov
jne
cmpsb
add
in
xchg
jle
mov
fistpll
movsl
sbbl
enter
repz
and
loopne
xchg
xlat
or
jb
in
stc
adc
insl
pusha
int3
ret
sub
jp
shll
scas
loopne
sub
call
add
xor
iret
test
xchg
loop
cmp
or
cmp
ja
push
xchg
mov
test
pop
push
mov
sbb
movsl
add
ja
mov
or
fwait
jg
inc
pop
xlat
push
pop
pop
jmp
lret
push
add
and
mov
lahf
aas
cmp
std
inc
mov
mov
push
push
adc
aas
adc
push
or
jo
aad
and
ret
fsubrl
movsb
std
inc
lahf
jbe
out
pop
pop
xor
sub
inc
jg
jnp
loope
xor
push
sti
fbld
fs
cltd
fldl
cmp
les
jne
bound
xlat
jb
cmp
test
and
and
shl
pusha
or
or
mov
out
nop
xor
sub
mov
sbb
gs
jbe
cmpsb
pop
out
or
adc
add
rolb
or
lea
xchg
mov
cmp
push
outsl
mov
addr16
std
out
pusha
or
mov
xchg
inc
mov
inc
push
xchg
add
pusha
jns
cmp
pop
dec
jo
lods
in
add
das
lds
insb
and
mov
adc
lea
mov
mov
cmp
aad
je
mov
lock
ja
sbb
out
out
inc
and
add
xorb
jecxz
repz
jbe
adc
xchg
and
add
out
movsl
sbb
mov
pushf
movl
cmp
add
out
loope
or
jae
addl
daa
lods
mov
cmp
mov
shlb
jg
ret
sbb
inc
jp
out
dec
dec
sub
push
xor
inc
pop
push
sahf
pop
jo
sub
shlb
lods
out
and
popa
jo
scas
les
and
pop
xchg
sub
dec
push
bound
out
inc
xchg
andb
cmp
fnstcw
sbb
fldl
filds
paddusw
daa
cmpl
inc
or
orb
lret
or
jg
loop
loope
stc
into
cmpsb
push
pop
or
mov
push
scas
xchg
fwait
mov
or
push
or
in
movsl
push
push
pop
mov
add
xlat
xchg
jbe
or
or
jp
and
xor
sbb
dec
dec
vmovmskpd
out
dec
mov
cmpsl
dec
xchg
scas
sbb
fistpll
in
mov
adc
mov
ret
fwait
xor
push
popa
pop
dec
popa
outsb
cmpsb
rolb
xchg
daa
inc
daa
js
mov
or
sub
insl
sti
sbb
cmp
push
in
jne
sahf
sbb
xchg
mov
js
sti
lock
pop
and
lret
jno
lahf
pop
aaa
sub
mov
fstps
push
jle
arpl
popf
push
jae
mov
shlb
sbb
cmp
add
aaa
mov
test
push
out
push
inc
add
jmp
aam
add
in
mov
xchg
sbb
out
add
test
and
push
sysret
inc
lods
push
out
ret
add
aas
lret
inc
sbb
and
test
cmp
mov
rorl
popf
adc
icebp
sahf
add
test
jns
add
lahf
jo
sub
dec
sub
pop
jbe
jno
dec
sub
mov
add
js
std
ja
inc
jg
call
xchg
bound
mov
pop
jns
lret
loopne
cmc
cmpsl
inc
cmp
xor
and
jg
push
mov
sbb
jno
loope
out
aam
xchg
sbb
popa
rcll
xchg
inc
in
movsl
inc
cltd
lods
xor
lret
sbb
mov
movsb
and
shrb
daa
ljmp
es
fistps
and
aad
sub
imul
adc
pusha
pop
mov
test
sub
cmpsl
add
stc
jp
add
loopne
ret
stos
in
stos
cmp
mov
push
jnp
sbb
push
push
fnstsw
push
mov
adc
jbe
dec
sbb
movsl
jmp
loope
sbb
sub
push
inc
mov
inc
mov
jmp
sbb
mov
lods
or
add
dec
lods
test
jne
ljmp
push
add
es
jnp
insb
jbe
int
iret
jmp
inc
mov
inc
sub
pop
icebp
push
or
jg
inc
pop
mov
stos
out
or
xor
loopne
add
cltd
pop
jne
jns
jo
addr16
or
xchg
loopne
push
push
sarl
add
in
ja
inc
sbb
inc
push
jge
subl
lock
add
dec
aam
stos
aaa
insl
mov
jp
stos
jmp
imul
or
push
xchg
out
test
dec
imul
das
xchg
es
xor
mov
cmp
iret
and
pop
aam
pop
fldcw
dec
dec
call
les
les
popf
xrelease
adc
xchg
outsb
sbb
fadd
stos
stc
imul
add
lret
lods
and
inc
pop
imul
fcomps
pop
filds
adc
add
xchg
jne
fcoms
sahf
xchg
jecxz
call
xchg
or
jb
and
xchg
jne
lcall
loop
push
je
add
sbb
subb
fistps
pop
jo
add
js
and
sub
call
das
xchg
orl
movsb
xorl
xor
cmpsb
ret
xor
mov
pop
cmp
imul
xlat
std
cmpsl
inc
jno
mov
out
andb
cmp
insl
mull
sbb
jmp
lcall
pop
cli
push
dec
and
mov
pop
adcl
dec
test
fs
mov
movsl
pop
and
in
pusha
mov
and
out
mov
adcl
aas
cmp
xchg
jmp
aam
dec
sub
outsl
jmp
out
addr16
scas
insb
mov
data16
scas
or
add
das
sbb
pop
jnp
loopne
mov
adc
push
fwait
mov
inc
add
jnp
and
jmp
cwtl
xchg
outsl
xchg
mov
add
or
dec
jle
sbb
arpl
xchg
pop
imul
jae
xor
push
pop
pop
or
pop
push
sbb
inc
dec
imulb
int
out
pop
shrb
leave
in
xor
mov
mov
jb
idivl
lret
push
mov
add
leave
mov
inc
sbb
clc
add
push
lahf
fwait
xor
jecxz
mov
jmp
add
sbb
repz
sti
out
sbb
xor
xor
faddl
jg
sarb
mov
push
add
lret
adc
out
ss
test
adcb
pop
pop
mov
test
xor
mov
out
jnp
pop
movsl
aaa
movsl
mov
add
and
ret
es
aad
jae
mov
push
pop
stos
inc
and
mov
fwait
andl
jns
inc
outsb
lcall
dec
jo
and
in
inc
jo
dec
rcll
fdivr
dec
cmc
aaa
inc
call
inc
das
jnp
mov
fbld
push
into
xlat
pop
hlt
mov
sub
in
mov
sbb
add
flds
push
incb
or
stos
bound
jg
scas
xorb
mov
jno
popa
add
imul
pop
je
or
mov
cmp
push
aaa
sbb
out
cwtl
out
test
cmp
inc
dec
jmp
or
js
aas
mov
gs
cmp
mov
xor
mov
jp
out
movsb
lods
push
pop
pop
scas
dec
js
mov
fcmovne
rorb
fisubrs
add
mov
mov
sub
aaa
or
or
fnstsw
push
mov
xor
jg
xchg
hlt
and
and
lea
sub
test
xor
jecxz
aas
scas
add
imul
add
inc
pop
mov
or
dec
jp
call
lret
cltd
adc
inc
jecxz
add
and
test
fidivs
or
aas
repz
sub
repz
sub
cmp
into
fldenv
sbb
bound
add
repz
mov
jle
sbb
xor
rcr
inc
mov
ret
inc
or
push
cs
sub
rcll
mov
fstpt
dec
xchg
xchg
lea
daa
inc
adc
int
jnp
jbe
add
fbstp
repz
inc
add
sub
enter
ljmp
sbb
push
sub
cmp
mov
add
leave
or
push
cmp
mov
dec
push
sub
sub
jecxz
adcl
fstl
imul
xchg
jbe
adc
xor
adc
dec
stc
mov
sbb
pop
dec
scas
pop
pop
mov
dec
xor
mov
mov
ffree
out
sub
mov
push
fs
xchg
aas
jmp
out
and
iret
jl
outsb
pop
dec
and
test
pop
and
jg
icebp
inc
xchg
sub
or
jnp
testb
sub
pop
bound
mov
iret
pop
divb
xchg
jp
lods
data16
test
dec
inc
push
jle
ja
push
jno
loop
push
push
je
push
or
test
enter
push
test
cmpl
mov
dec
xor
xchg
add
push
rcll
inc
add
mov
ja
mov
mov
insb
mov
fs
push
mov
ja
xlat
sbb
adc
sbb
popa
jo
adcb
push
or
in
ret
aaa
rorl
pusha
inc
adc
add
or
jl
add
mov
cmc
fwait
push
adcl
pusha
or
mov
mov
std
imul
js
outsb
jmp
add
cmp
add
call
push
imul
icebp
pop
pop
adc
xlat
xchg
lods
mov
mov
hlt
shlb
mov
push
fcoml
push
aaa
rcr
cmp
mov
cltd
sahf
add
dec
movsl
adc
jns
xchg
mov
loope
jmp
push
sub
push
sub
daa
adc
stos
xorl
dec
lock
loopne
sub
daa
xor
imul
outsl
inc
sub
xchg
or
or
mov
add
cmp
rcrb
adc
in
jle
popa
dec
insb
and
add
lahf
jg
dec
inc
fiaddl
mov
dec
rorl
adc
jbe
mov
and
sub
test
sbb
jbe
mov
sub
push
dec
out
rcl
fwait
dec
insl
sbb
notl
xlat
cli
xchg
out
ljmp
sub
sarb
rcrb
xor
pop
mov
leave
mov
fdivrp
pop
push
cmc
adc
pop
leave
pop
and
pop
mov
imul
ja
sbb
divb
and
popa
sbb
leave
outsl
jmp
and
sbb
repz
xor
or
jae
inc
or
scas
movsb
inc
outsb
mov
jl
shlb
out
lds
dec
insl
es
out
arpl
ret
and
jns
sub
xlat
mov
lock
inc
addl
add
mov
stc
sub
and
add
ud2
addr16
dec
js
jnp
or
mull
lods
adc
inc
ret
enter
or
pop
and
add
and
xchg
or
sub
jb
pop
pop
dec
stos
cmp
shlb
xchg
and
pop
mov
mov
movsl
or
or
push
data16
add
jmp
add
dec
or
push
adc
out
mov
int3
scas
nop
lock
add
daa
ss
jmp
xchg
push
xor
jno
xor
and
cli
fsubl
or
adc
pop
sbb
add
or
fs
jmp
pop
push
and
add
xchg
pushf
out
mov
sbb
jge
inc
ret
lea
in
addr16
dec
clc
mov
push
adc
lahf
inc
ret
aaa
fstpl
imul
ret
mov
sbb
sbbl
repz
cmpsb
inc
and
or
outsb
pop
mov
cmpb
test
add
or
ds
add
add
pop
out
xor
arpl
mov
mov
pop
test
jno
adc
arpl
sbb
movsb
js
aas
stos
sub
sub
and
add
cmp
adc
sbb
mov
inc
ret
sti
ja
dec
mov
outsb
add
jg
xlat
ss
lcall
out
test
lock
xchg
jb
cmpsl
and
mov
mov
sub
or
inc
imulb
or
inc
add
mov
lret
sub
in
pop
scas
or
xchg
dec
or
mov
or
push
jo
mov
add
dec
xor
insl
adc
dec
and
mov
xor
aaa
pop
and
jo
jbe
and
in
pop
or
or
fildl
pusha
adc
or
jae
std
pop
je
xchg
decb
dec
push
ss
add
push
imul
bound
dec
push
sub
add
dec
dec
mov
and
dec
fnstenv
mov
andb
xchg
ja
cmp
inc
inc
push
sub
push
leave
ret
xor
or
add
inc
inc
add
mov
ret
cmp
mov
inc
enter
aam
lahf
adc
inc
or
fs
fs
push
push
mov
test
dec
in
outsb
inc
daa
dec
jnp
sbb
dec
and
outsl
sub
jnp
inc
mov
and
push
loope
pop
inc
xchg
push
outsb
pop
jno
xchg
fnstsw
fdivrs
dec
inc
lods
inc
call
shll
cmp
xor
push
jne
imul
clc
loope
sti
and
inc
push
pop
add
les
jge
addl
push
fs
cs
push
ss
pop
dec
inc
jle
je
inc
push
dec
dec
dec
mov
push
inc
dec
push
movsb
push
sub
jo
sbb
ffree
cli
or
daa
jmp
dec
push
push
push
popf
dec
data16
cmp
mov
push
call
fiadds
inc
sahf
sub
jge
in
out
inc
mov
ret
repnz
sahf
in
jl
andl
dec
daa
cltd
pop
fwait
bound
push
jno
push
push
xchg
push
push
bound
mov
test
int3
mov
add
jae
call
ds
daa
ljmp
lock
mulb
inc
push
or
aaa
adc
iret
jne
cmp
aas
data16
pop
sbb
and
loopne
sbb
xchg
in
xor
sub
sub
int3
push
sbb
inc
dec
xor
cs
jno
dec
sbb
xchg
int
cs
outsb
fmuls
push
xchg
jnp
jl
cmp
fcmovu
rcll
dec
add
cwtl
into
pop
pop
cld
inc
insb
bound
imul
add
gs
fbld
fisubs
pop
data16
and
push
shr
pop
out
add
and
xchg
sub
push
inc
ja
orl
in
gs
pop
jnp
shrb
dec
cld
mov
pop
aam
push
jns
stc
popa
addb
insl
lods
push
push
inc
mov
or
inc
push
mov
xor
xchg
adc
push
sub
mov
stos
dec
mov
ret
bound
push
dec
fwait
aam
sarl
sub
mov
in
push
mov
into
in
es
movsl
sub
aaa
je
lahf
xor
or
push
jl
jecxz
fiaddl
xor
jo
push
push
pop
mov
inc
loopne
aas
inc
add
into
jmp
push
push
movl
pop
ja
xor
inc
sbb
jo
cwtl
push
xchg
hlt
dec
or
sti
mov
add
imul
xchg
into
jmp
pop
inc
push
add
daa
test
ror
mov
mov
pop
adc
bound
mov
repnz
fs
mov
insb
inc
pop
fisubs
sbb
jle
cmp
or
sbb
rorb
push
scas
add
xor
imul
out
popa
pusha
cmc
add
loop
or
jmp
mov
je
mov
rcrb
dec
inc
jb
fst
dec
shr
negb
inc
fwait
dec
and
pop
inc
cmc
xchg
sbbl
and
in
push
loopne
popa
sti
push
push
push
add
or
mov
dec
call
or
data16
pop
je
data16
push
das
addr16
adc
mov
addr16
add
dec
pop
into
lods
lss
adc
addr16
pop
loopne
mov
inc
cmp
lret
sahf
jnp
add
fcmovnu
insb
jb
xchg
out
int3
xor
aam
add
in
sbb
and
ror
add
add
add
lods
mov
test
bound
jno
es
arpl
outsb
loopw
and
mov
push
inc
loop
cmp
add
pushf
dec
lret
mov
mov
jb
xor
mov
out
outsb
mov
outsb
stc
rcrl
xor
pop
addr16
add
out
orl
pop
and
inc
in
mov
arpl
sbb
icebp
loope
mov
add
xchg
pop
lds
cmp
adc
cmpl
gs
cmp
repnz
push
dec
roll
cmc
jbe
mov
add
jecxz
decb
jecxz
inc
adcb
mov
push
in
add
cmp
sbb
or
ja
mov
out
mov
loope
mov
add
jmp
icebp
and
add
roll
cmpsl
cld
pusha
jo
push
in
jbe
cmc
add
clc
push
cwtl
ret
out
or
push
cld
push
mov
xchg
mov
cmp
loop
add
mov
sbb
popa
add
pusha
mov
push
lea
icebp
incb
lret
enter
adc
test
or
jmp
shl
pusha
outsl
roll
into
loop
mov
or
xchg
add
add
shll
jg
in
mov
lret
enter
inc
or
aad
mov
or
pop
fnstenv
or
dec
sahf
ret
fildl
int
sti
addr16
clc
pop
mov
std
or
cld
sarl
jecxz
js
insb
clc
js
in
inc
or
pusha
dec
or
sbb
jo
xchg
loopne
pop
dec
or
dec
sbb
pusha
hlt
std
xor
inc
xchg
lock
pusha
pmaxsw
sbb
div
cmpl
jb
pushl
ret
loope
push
stos
lock
add
dec
dec
jmp
sti
jg
popf
cmp
les
adc
add
adc
push
loopne
mov
or
pop
add
arpl
aad
std
jmp
arpl
jnp
jo
loope
bnd
cmpb
insb
dec
add
push
out
sub
adc
add
adc
roll
or
pop
stc
idivl
and
adc
outsl
outsb
outsb
cmpl
or
out
push
loop
pop
sbb
push
call
shl
repz
push
shll
add
cmc
out
xor
mov
add
add
call
sbb
and
insl
out
lahf
push
jle
sbb
adc
stos
push
stc
stc
and
xor
adc
or
mov
loop
addr16
daa
faddl
sub
mov
jmp
in
add
jmp
movsl
jmp
repnz
add
cmc
stc
sti
mov
sub
aam
scas
jo
out
int
mov
fucomi
leave
loope
xor
or
dec
mov
xchg
pop
scas
sbb
gs
orl
inc
cmpsb
lsl
icebp
insb
mov
test
loopne
jb
loope
inc
sbb
xor
and
cmp
in
shrb
cmp
out
imul
test
pop
sbb
or
inc
notl
sti
add
imul
or
push
into
ret
adc
adc
jbe
adc
sbbb
pop
xlat
inc
pop
mov
jmp
dec
rol
pop
add
or
ds
invd
outsb
or
icebp
mov
push
js
out
and
cmp
cmp
fnsave
lods
lcall
adc
repz
daa
ss
loopne
notb
push
clc
xor
add
jg
lcall
pop
inc
add
inc
cmp
aaa
add
ret
mov
jmp
pushf
pop
pop
inc
mov
push
add
lcall
pop
xchg
cmp
mov
jnp
inc
test
or
cmp
sbb
popf
lods
ficoml
dec
xchg
push
lea
mov
push
xchg
test
imul
push
sbb
mov
inc
xor
mov
cmpsl
xor
movl
aas
mov
mov
daa
pop
xor
add
fiadds
cmc
push
dec
ret
inc
imul
mov
loop
sbb
or
and
pusha
stos
add
mov
lahf
dec
xchg
data16
lea
add
add
add
arpl
in
push
xchg
dec
cmp
mov
lds
adc
ficomps
mov
push
fstps
inc
sub
lret
sub
adc
mov
fiadds
xchg
cmp
pusha
add
jo
push
pop
jne
pop
inc
cmpb
xor
arpl
fnsave
push
push
outsb
cmp
rcll
pop
push
inc
subl
xchg
ja
popf
jmp
fs
mov
rcll
addr16
out
popa
rcrb
add
and
es
or
outsl
jl
add
sub
jp
push
jnp
xchg
lock
cmp
ret
mov
inc
mov
cmpsb
push
jecxz
idivl
jge
shrl
push
push
add
orb
mov
cmp
xlat
stos
cmp
mov
cmp
add
push
adc
xchg
js
mov
xchg
movsb
inc
pop
and
cltd
xchg
add
rcll
mov
popa
pop
faddl
and
loop
add
test
inc
or
lret
daa
inc
mov
mov
fwait
insb
int
pop
mov
inc
xchg
fdivl
inc
inc
sub
addr16
subl
dec
insb
clc
je
js
aas
lcall
inc
gs
out
inc
jmp
outsb
dec
repnz
sub
mov
inc
or
int
jmp
call
out
gs
nop
cmpsb
shrl
push
imul
fdivp
sbb
push
push
aam
adc
jge
negl
cmp
mov
add
dec
inc
addr16
loope
ret
push
add
loope
outsb
lret
sbb
imul
imul
jmp
ja
cltd
or
div
xor
clc
mov
stos
je
in
xor
outsb
pop
test
xchg
push
movsb
lahf
add
sub
pop
outsl
xchg
adc
out
cld
push
jle
push
inc
sbb
sbbb
push
dec
subl
cltd
adcl
movsl
xchg
jns
inc
movsb
xor
arpl
fisubl
clc
dec
push
and
cs
es
sbb
or
addl
jne
push
test
jge
pushf
loope
fisttpl
jp
pop
jecxz
jae
ja
or
and
xlat
mov
aad
jg
sub
adc
or
pop
jecxz
add
mov
add
and
push
call
cmp
jae
xlat
xchg
mov
in
and
mov
push
jl
add
dec
dec
and
xor
loop
std
out
pop
and
shrb
movsl
mov
cmc
ja
add
pop
and
pop
push
loopne
sub
inc
dec
xchg
js
gs
push
jae
push
fptan
adc
add
lret
outsl
dec
push
imul
jle
mov
ret
daa
les
leave
pusha
rorb
and
push
or
pop
add
addl
scas
lods
dec
inc
pop
sahf
mov
adc
les
mov
mov
movsb
dec
test
jmp
push
ja
inc
data16
cmp
pop
push
jmp
adc
int
xor
push
mov
cmp
add
je
fs
adc
andb
mov
decb
inc
push
js
fs
add
add
sub
add
int3
pusha
in
adc
les
in
push
mov
dec
loopne
add
mov
je
jp
inc
loopne
fistpll
daa
mov
xchg
out
or
aad
jo
pop
in
ds
jno
imul
adc
sti
ss
shrl
push
push
mov
das
inc
pop
adcb
movsb
push
mov
pop
pop
or
mov
and
push
jp
push
testb
ret
push
dec
cmpl
add
out
mov
push
pusha
bound
imul
mov
push
xchg
mov
dec
roll
dec
scas
hlt
inc
cmp
movb
or
or
jge
xlat
sarl
mov
cli
jnp
dec
inc
push
pop
push
nop
popf
pop
nop
ss
outsb
sarb
ss
sbb
loopne
fnstenv
in
sbb
daa
fstl
mov
pusha
cmp
dec
aaa
rorb
dec
js
cmp
add
or
cmp
stos
sbbb
out
loop
sbb
cmp
pushf
shlb
daa
or
push
rolb
test
or
cmp
cmp
mov
adcl
hlt
jl
and
mov
adc
inc
sbb
cmp
outsb
and
or
pop
test
inc
mov
fidivrs
js
xchg
js
fs
inc
push
pop
pop
imul
aaa
adc
popl
es
std
xor
add
cmpsb
mov
push
sti
adc
add
cmp
scas
out
js
bound
dec
push
int3
fistl
inc
and
notl
and
sbb
nop
cmp
mov
inc
adc
popa
inc
enter
mov
bnd
lret
je
mov
jo
outsb
or
ja
jl
adc
jo
bound
jae
clc
push
into
xchg
mov
xchg
or
push
xchg
jb
test
mov
ret
sbb
cmpsb
push
cwtl
push
mov
push
cmp
inc
push
or
sbb
movsl
sbb
or
xchg
push
and
push
or
test
lea
and
orl
dec
mov
sub
in
shll
daa
xchg
fisubl
loope
mov
lods
adc
sti
movsl
pop
and
inc
sub
push
sub
sub
ret
in
movsl
push
xchg
and
push
jecxz
mov
inc
lahf
mov
jns
jae
inc
bound
popa
testl
push
inc
mov
push
rcll
mov
ja
aad
or
adc
mov
leave
sbb
adc
pop
stos
and
pop
stos
sub
or
pop
push
jmp
cmp
xor
call
cwtl
push
iret
bound
sbb
test
or
push
xchg
xchg
dec
adc
mov
xlat
mov
or
inc
int
lods
scas
xor
adc
push
ljmp
jo
xor
dec
or
xor
mov
out
add
or
or
int3
add
adc
add
push
int
das
add
addr16
or
stc
daa
cmp
xor
popa
popf
jge
mov
pop
cmc
or
fidivrs
aas
popf
jb,pn
popf
mov
mov
and
rorl
iret
add
out
test
cwtl
push
mov
fisttpll
and
movsl
add
ret
pop
sbb
add
xchg
mov
lcall
mov
sub
gs
popa
test
popa
xor
mov
cmpsl
mov
cld
rcrl
ret
mov
mov
movsl
cwtl
xor
sub
fstl
add
add
cmp
in
fnsave
test
sbb
cs
xor
xor
out
ffree
adc
pop
dec
jg
lods
adc
rolb
adc
push
repz
movb
enter
mov
filds
mov
call
inc
daa
dec
arpl
cmpsb
add
sbb
or
daa
pop
dec
sub
test
mov
add
aam
mov
rolb
add
shll
pusha
mov
call
mov
aad
lcall
sub
in
les
adc
nop
or
or
imul
push
adc
and
je
add
ror
add
adc
dec
js
pop
push
jnp
std
add
loope
movsl
orb
inc
popa
push
sub
adc
push
push
mov
enter
push
fs
inc
add
ss
inc
jg
xor
hlt
jnp
fiaddl
mov
lds
and
jbe
xlat
xlat
add
lock
lds
mov
daa
dec
sub
inc
pop
mov
cvtps2pi
das
dec
imul
add
jl
cmp
jns
ja
lock
inc
jne
push
fimull
mov
out
int
cmpsl
jge
daa
or
push
dec
push
dec
inc
dec
into
mov
push
repnz
out
cmp
mov
push
in
xor
dec
mov
pop
daa
xchg
jo
or
jnp
dec
shlb
scas
cmp
je
daa
arpl
dec
cmp
adc
icebp
sub
adc
xor
xchg
mov
or
daa
add
push
stos
mov
es
nop
ret
insb
or
aad
and
out
cmp
xor
orb
adc
dec
imulb
dec
movb
mov
mov
adc
pop
lea
push
cmpl
filds
aam
push
sub
or
ss
lods
arpl
push
inc
dec
dec
inc
pop
push
mov
sahf
sbb
pop
push
push
inc
pop
adc
es
sbb
xchg
jg
sbb
fcmovnb
aad
popf
lock
push
inc
inc
jmp
cmc
jmp
jl
pop
cmpsl
sbb
call
sub
movsb
popf
adc
out
inc
negl
or
pop
xor
xchg
jo
pop
inc
jno
dec
test
mov
es
mov
jg
sbb
test
incb
test
jecxz
or
ds
setns
xchg
iret
stos
test
test
stos
jmp
xorb
cltd
push
pop
add
stos
add
shll
in
cmpsl
pop
xor
mov
stos
adc
test
ja
imul
cmp
push
mov
or
mov
push
pop
inc
sub
cmpsl
push
xchg
mov
mov
arpl
push
test
je
add
test
dec
adc
push
test
sub
xlat
mov
out
and
imul
inc
mov
mov
lds
inc
add
jno
push
inc
adcb
adc
imul
sbb
cmp
ljmp
stos
add
mov
mov
lret
xchg
xor
or
inc
pop
dec
sub
popf
leave
pop
test
ljmp
mov
lret
or
pusha
lods
sbb
test
push
test
adc
adc
dec
adc
fcmovnbe
push
adc
dec
popf
roll
mov
lret
xchg
adc
pusha
mov
push
aad
ret
addr16
aaa
arpl
lds
inc
adc
add
pop
mov
lods
add
mov
xchg
cwtl
mov
push
and
movsl
aad
je
push
stos
adc
jecxz
adc
inc
and
adc
mov
popa
mov
jmp
push
bound
lods
add
fnstsw
mov
cwtl
mov
arpl
push
stos
adc
dec
jno
cmpsl
cmpsl
or
sub
imul
test
movsb
andl
test
in
inc
aad
out
and
in
sbb
add
jmp
shrb
push
test
adc
movsb
mov
aas
roll
pusha
xor
and
inc
roll
sbb
add
xor
sub
xchg
mov
xchg
lods
pop
mov
dec
xchg
mov
sub
or
push
sub
xchg
mov
std
cmp
or
jae
insl
jne
rcrl
mov
push
in
push
aad
mov
lcall
xor
rcrb
dec
imul
add
das
xchg
fildll
add
push
and
nop
add
popf
in
pop
cmpsb
inc
xchg
bound
leave
or
arpl
outsb
insb
pop
xchg
rorl
cmpb
mov
mov
and
daa
xor
lret
movsb
pop
cmp
adc
inc
test
dec
lods
inc
loopne
in
add
scas
pop
popa
test
enter
pop
mov
dec
dec
mov
insl
in
sub
in
in
add
add
das
pop
es
in
aad
data16
fistps
push
pop
ret
subb
fcomp
jbe
aas
cli
lret
loopne
loopne
inc
cmp
addr16
repnz
int3
call
into
dec
insb
dec
mulb
cmp
pop
ja
cmpsl
lods
clc
fwait
sahf
inc
add
add
and
or
dec
stos
insl
pop
push
aaa
aas
repz
add
adc
jns
insb
lahf
inc
in
add
xchg
pop
mov
movsb
pop
inc
jb
popf
xlat
outsl
es
jno
inc
jae
fwait
adc
pushf
je
das
jne
xchg
inc
rorl
dec
sahf
es
dec
mov
cmp
das
add
in
or
cmpb
ljmp
repnz
add
push
jb
push
scas
sub
rcr
cmp
xchg
inc
fisttps
sub
pusha
pop
cmp
loopew
daa
ja
add
pusha
sub
add
in
pop
xchg
outsl
scas
in
dec
jbe
jle
pushf
stos
ss
roll
cmp
cmp
jg
ret
sub
negl
adc
pop
fucomi
jbe
mov
push
add
mov
lds
aam
cmp
mov
push
dec
hlt
pop
aaa
cmpsl
jbe
daa
jne
push
jl
daa
sub
add
and
movl
addr16
push
into
jno
jb
cmpsl
jbe
popf
loop
aas
push
jne
push
addl
outsl
xchg
mov
fistpl
push
mov
outsl
push
in
popf
pop
aaa
cmp
pop
fwait
insl
aaa
mov
cmp
cmp
repz
movsb
mov
aam
int
cmpsb
add
adcb
push
xor
sub
or
add
or
dec
testb
pop
mov
andb
pop
icebp
addb
push
sub
and
adc
nop
sbb
sub
rolb
cmp
mov
add
fdivr
push
jb
je
arpl
pusha
int
mov
dec
or
in
pusha
movups
js
pop
push
sbb
sbb
push
add
mov
outsb
addr16
jns
gs
mov
pop
and
pop
dec
outsl
fs
gs
popa
outsb
or
div
out
and
push
imul
push
outsb
je
in
daa
nop
sbb
daa
xchg
insl
in
mov
lea
insb
roll
cmpb
pop
dec
inc
outsb
jne
inc
popa
mov
insl
jbe
or
push
inc
dec
push
pop
sbb
out
push
adc
dec
popa
or
mov
jbe
inc
sbb
adc
push
outsl
inc
push
adc
sbb
sbb
in
jae
mov
repz
mov
sub
mov
nop
push
rcrb
xor
push
adc
and
add
inc
or
gs
mov
fs
clc
sahf
lahf
testb
and
ljmp
addr16
gs
loopne
hlt
xor
je
jle
push
lods
pop
sbb
arpl
or
fisubl
mov
cmp
cld
mov
jo
pop
cltd
fnsave
daa
cmp
pop
push
xor
insb
clc
push
jns
or
fidivl
fisttpl
push
divb
dec
outsb
mov
xchg
push
push
outsl
bnd
or
js
pop
inc
jg
insl
jo
loopne
addr16
adcb
loopne
pop
jle
jae
imull
enter
dec
imul
jbe
push
push
jo
sbb
or
jae
inc
loop
jo
xchg
jno
in
imull
jge
jo
inc
jbe
dec
clc
jne
test
cmp
int3
sbb
xor
mov
fidivs
sbb
cmp
xor
mov
loopne
cmpsl
xor
push
cmp
add
inc
lods
sub
inc
xlat
lahf
cld
call
add
dec
add
add
pop
inc
sub
add
sbb
push
repnz
inc
mov
imul
add
nop/reserved
dec
cmp
adc
jne
fiaddl
mov
pop
rorb
in
or
rolb
ds
inc
dec
inc
inc
xor
and
add
in
test
push
pusha
inc
inc
push
inc
mov
add
negl
push
insb
dec
inc
push
rolb
sub
mov
or
mov
fwait
pusha
xchg
jecxz
inc
cmp
out
dec
shlb
in
adc
xor
rorb
xchg
insl
mov
jb
jbe
mov
push
mov
mov
dec
js
mov
push
dec
incl
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
