jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
arpl
xor
gs
ss
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jae
mov
mov
mov
mov
inc
inc
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
lea
mov
mov
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jo
mov
mov
mov
mov
mov
dec
mov
mov
mov
lea
lea
inc
dec
mov
lea
lea
dec
dec
inc
mov
pop
ret
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
movl
mov
mov
mov
push
mov
push
call
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
mov
pop
ret
add
add
xor
xor
xor
add
push
mov
add
mov
mov
cmp
jae
mov
mov
mov
mov
inc
inc
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
lea
mov
mov
dec
mov
cmp
je
jmp
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
mov
xor
divl
test
jne
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jo
mov
mov
mov
mov
mov
dec
mov
mov
mov
lea
lea
inc
dec
mov
lea
lea
dec
dec
inc
mov
cmp
je
jmp
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jo
mov
xchg
mov
xchg
lea
mov
dec
inc
xchg
jmp
mov
lea
mov
lea
inc
inc
dec
lea
mov
inc
mov
cmp
je
jmp
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
mov
sub
mov
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
push
mov
mov
xor
call
mov
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
mov
mov
mov
call
cmp
jo
mov
mov
mov
mov
mov
dec
mov
mov
mov
lea
lea
inc
dec
mov
lea
lea
dec
dec
inc
push
mov
mov
xor
call
mov
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
inc
inc
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
lea
mov
mov
dec
lea
mov
push
jmp
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jo
mov
xchg
mov
xchg
lea
mov
dec
inc
xchg
jmp
mov
lea
mov
lea
inc
inc
dec
lea
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jo
mov
mov
mov
mov
mov
dec
mov
mov
mov
lea
lea
inc
dec
mov
lea
lea
dec
dec
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
movl
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
push
fstpt
fstpt
sbb
mov
cld
fidivrs
repnz
pop
sub
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
in
jne
xor
cmp
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
dec
mov
repz
mov
add
mov
je
clc
dec
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
dec
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
dec
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
dec
mov
cld
cld
cld
pop
hlt
dec
mov
repz
mov
out
hlt
dec
mov
clc
dec
mov
or
cld
cld
pop
repz
mov
hlt
dec
mov
dec
mov
int
pop
repz
mov
dec
mov
out
hlt
dec
mov
dec
mov
repz
mov
je
clc
dec
mov
hlt
dec
mov
clc
dec
mov
out
repz
mov
clc
dec
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
dec
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jo
mov
xchg
mov
xchg
lea
mov
dec
inc
xchg
jmp
mov
lea
mov
lea
inc
inc
dec
lea
mov
inc
movl
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
mov
mov
call
mov
cmpl
je
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
mov
cmp
je
mov
subb
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
mov
xorb
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
incl
mov
cmp
jne
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
mov
call
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
inc
inc
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
lea
mov
mov
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
cmp
jae
mov
mov
mov
mov
inc
inc
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
lea
mov
mov
dec
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
movb
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
call
call
call
call
test
jne
mov
jmp
movw
cmp
jo
mov
mov
mov
mov
mov
dec
mov
mov
mov
lea
lea
inc
dec
mov
lea
lea
dec
dec
inc
call
lea
mov
pop
ret
nop
push
mov
add
cmp
jp
mov
mov
inc
mov
lea
inc
mov
lea
mov
lea
lea
lea
mov
lea
xchg
xchg
mov
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
push
push
push
call
mov
call
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
pop
ret
add
push
outsb
je
jae
inc
dec
insb
and
and
add
add
add
jae
movl
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
mov
mov
mov
mov
inc
inc
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
lea
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jo
mov
mov
mov
mov
mov
dec
mov
mov
mov
lea
lea
inc
dec
mov
lea
lea
dec
dec
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jo
mov
xchg
mov
xchg
lea
mov
dec
inc
xchg
jmp
mov
lea
mov
lea
inc
inc
dec
lea
mov
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jae
mov
inc
dec
inc
mov
mov
lea
mov
mov
mov
lea
xchg
dec
dec
jne
mov
mov
mov
mov
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jno
mov
lea
mov
mov
mov
mov
xchg
xchg
dec
dec
dec
mov
lea
mov
xchg
xchg
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jbe
xchg
lea
mov
lea
mov
mov
mov
inc
dec
mov
mov
mov
mov
lea
mov
lea
lea
mov
movl
mov
mov
mov
push
mov
push
call
cmp
jge
dec
dec
dec
dec
cmp
jl
lea
mov
lea
mov
dec
dec
inc
mov
lea
mov
mov
dec
lea
mov
mov
lea
inc
inc
mov
mov
mov
lea
call
cmp
jle
mov
xchg
mov
xchg
dec
dec
lea
mov
mov
inc
inc
inc
mov
xchg
lea
jmp
mov
lea
inc
inc
xchg
mov
ret
add
xor
xor
xor
add
aaa
cmp
xor
cmp
add
add
xor
xor
xor
cmp
add
aaa
cmp
xor
add
add
xor
xor
xor
add
xor
cmp
cmp
aaa
xor
xor
add
xor
xor
xor
ret
lea
add
faddl
loop
push
mulb
cmpsb
cmp
adc
add
push
lret
rol
ret
add
sbb
out
add
gs
test
sub
out
jb
push
add
aam
mov
inc
andb
cltd
lods
and
fldl
xchg
add
pop
int
roll
add
lock
add
add
pusha
ret
flds
lcall
push
add
push
sub
add
add
add
or
pop
jg
js
adc
jmp
cwtl
xor
cltd
sub
mov
push
add
add
mov
add
shrb
add
add
mov
adc
aad
add
addl
push
push
cmp
cvtps2pi
add
pop
add
aam
popf
mov
addr16
dec
add
sbb
rolb
add
and
fwait
adc
outsl
clc
call
in
add
add
add
fistl
add
mov
fcmovnu
int
leave
test
fs
test
mov
sub
dec
add
xor
adc
add
outsl
cmp
js
add
stos
add
testb
add
testl
pop
mov
add
add
add
cmp
fwait
sub
add
sub
add
pop
add
sub
add
insl
popf
lahf
mov
sahf
add
add
fldcw
push
add
jbe
fwait
dec
adc
mov
add
sub
std
add
ja
mov
add
out
mov
in
add
and
addr16
xchg
sbbb
pop
push
mov
hlt
add
ret
cltd
xchg
gs
ret
push
jle
sub
add
clc
scas
lret
insl
sub
mov
mov
adc
sti
add
sti
jmp
pop
add
loop
pop
lods
mov
add
pop
adc
jae
cmp
xor
add
inc
scas
lods
std
add
stc
dec
mov
daa
xchg
loope
push
push
mov
mov
jno
add
incb
add
std
pop
add
sbb
adc
and
sbb
repnz
popl
loopne
jnp
addl
lret
outsl
jnp
mov
jno
stc
dec
add
pop
inc
fcmovne
push
add
add
sbb
popf
lret
mov
add
cmp
add
add
arpl
add
and
lods
scas
push
push
add
xor
inc
cmp
pop
mov
cmc
push
lea
fldenv
add
leave
loop
stos
jl
xchg
outsb
stos
push
jb
cmp
cmp
scas
es
arpl
fucom
add
adc
fsts
xor
cmp
xor
cld
jbe
add
add
loop
push
jmp
scas
push
adc
fwait
jmp
add
imul
push
loop
es
xor
cld
add
leave
push
sub
es
fptan
cmp
add
fsts
into
adc
mov
xor
sbb
inc
and
add
filds
sbb
add
inc
add
sub
test
into
dec
push
add
cmp
in
stos
pop
aad
cmp
icebp
add
add
jb
lahf
fwait
addl
test
push
jecxz
scas
sbb
mov
aaa
aam
dec
jb
adc
and
add
dec
faddl
add
loopne
bound
or
adc
add
push
add
mov
ret
jns
xor
and
xchg
inc
rolb
add
aas
cmp
test
filds
testb
leave
jnp
ds
add
lea
scas
in
add
add
sub
int
shrl
sub
adc
lcall
xchg
fsubr
mov
sahf
jle
jo
leave
mov
mov
xchg
push
mov
mov
jns
mov
cmp
add
imul
lock
lret
sub
mov
adc
or
mov
cmc
imul
xor
and
sub
xchg
aam
stc
and
dec
add
out
andb
lods
jle
pop
mov
inc
push
out
out
cli
in
xor
push
jns
ja
enter
adc
flds
pop
add
test
imul
cltd
mov
lea
xchg
and
cmp
adc
sub
xchg
imul
cmp
jmp
cltd
clc
cs
out
and
or
sbb
sub
inc
in
sbb
flds
xor
jecxz
je
mov
and
lahf
repnz
dec
shrb
adc
and
pop
nop
pushf
mov
call
pop
pop
mov
inc
jae
or
mov
aas
push
sub
jb
fsub
dec
cmpsb
pop
push
je
or
dec
cmpsl
or
arpl
std
jnp
rcrl
mov
andl
lcall
cmp
sub
inc
mov
outsl
jl
and
or
shlb
mov
xor
add
cmpsl
fs
adc
loope
outsl
cld
adc
cli
in
mov
sbb
loope
daa
pop
lods
std
cld
sar
push
les
fstl
insl
mov
sbb
push
je
test
cwtl
icebp
or
jo
popf
xchg
ss
ljmp
sahf
lods
add
pop
out
push
mov
xchg
sbb
push
psraw
add
mov
cltd
out
fldl
cmc
roll
jge
xor
mov
sbb
scas
push
rol
xchg
xchg
ds
popa
jg
push
loope
mov
add
xchg
lcall
jbe
xor
or
cltd
xchg
add
mov
mov
scas
pop
loopne
cmpsl
ja
les
inc
insb
inc
cli
or
mov
mov
test
sbb
push
xor
cli
jns
out
jg
popa
fdivrl
out
adc
jne
jbe
sub
lret
fimuls
inc
mov
daa
pop
mov
iret
pop
mov
fstpl
in
xor
pusha
push
mov
xchg
mov
cli
pop
mov
aam
push
jae
pmullw
add
pushf
push
mov
cmpsb
stos
dec
in
pop
and
and
insb
std
add
imul
push
xor
int
fdivs
pop
pushf
mov
inc
fwait
jg
arpl
mov
inc
or
adc
pop
push
mov
fisubrl
xchg
cmp
sbb
or
cmc
fisubrs
in
shlb
sub
nop
pop
leave
loope
leave
hlt
mov
push
push
testl
sbb
stos
push
add
outsl
int3
repnz
out
mov
add
cld
pop
xor
fbld
scas
insb
les
cmp
int
movsb
and
mov
cmpsb
jae
fsubr
mov
lods
enter
daa
mov
dec
jno
sbb
jl
pop
cmp
add
inc
nop
and
out
ret
das
dec
lret
scas
push
arpl
mov
push
out
mov
aad
sbbb
cltd
js
jmp
pop
push
roll
push
loope
and
sub
hlt
pop
sub
movsl
mov
andb
mov
sbb
sbbb
jle
mov
stos
add
cmc
mov
clc
cmc
movl
mov
stc
sub
inc
lcall
adc
sbb
lods
sahf
mov
bound
or
mov
mov
mov
push
mov
dec
cmp
mov
cmp
lret
jmp
mov
inc
push
or
mov
into
cmovnp
xor
push
outsl
les
loop
fisubs
fcom
dec
fs
jns
add
scas
push
lods
gs
lret
xchg
sahf
out
adc
neg
mov
cmp
iret
add
es
out
mov
gs
mov
xor
push
mov
js
imul
adc
jmp
repz
push
xchg
out
clc
sbb
mov
or
sub
notl
mov
lret
lea
sti
sbb
aad
cmp
call
inc
ljmp
jmp
jecxz
hlt
pop
mov
pop
lea
adc
pop
loop
adc
mov
fnsetpm(287
inc
rcrl
push
pop
inc
cli
sahf
xor
aas
lock
dec
jb
jae
dec
sbb
inc
mov
mulb
lret
or
xor
cmp
je
cmp
dec
das
lret
imul
fbstp
mov
call
mov
es
jae
and
mov
jp
xchg
xlat
mov
arpl
or
icebp
mov
mov
mov
xlat
addb
or
int3
adc
int3
xchg
push
sub
int3
dec
ds
dec
xor
pushf
fnstsw
jg
xchg
jne
loop
inc
jne
popa
pop
pop
jge
insl
scas
and
mov
mov
xchg
inc
aam
push
andb
add
hlt
test
inc
jle
lods
ljmp
pop
mov
pop
sbb
or
rcrl
cmp
nop
js
push
test
add
cwtl
lcall
scas
push
int
sbb
xor
xchg
dec
and
fwait
mov
xor
sbb
inc
add
jecxz
inc
lret
sbb
dec
dec
jae
jne
pop
mov
inc
loopne
xor
inc
bound
mov
in
push
sub
cmc
movsb
sub
or
sub
mov
jp
pop
fdivl
jmp
inc
jnp
stc
xchg
jle
rclb
cmc
imul
fcomp
mov
fists
icebp
jb
xchg
lahf
mov
jae
push
sub
enter
test
daa
js
in
stos
mov
adc
popa
imul
imul
jg
push
out
iret
aaa
push
mov
pop
rcr
or
lret
arpl
lods
sub
add
jmp
inc
mov
or
pop
outsb
xchg
xchg
lods
inc
sbb
jbe
pop
jl
mov
dec
add
push
sarb
or
jecxz
mov
pop
std
hlt
add
mov
jbe
adc
sbb
out
aaa
mov
inc
or
jl
int3
fisttpll
loope
loope
loopne
push
push
insb
scas
dec
ret
clc
and
adc
subb
scas
and
cmpsb
mulb
out
in
jb
ja
arpl
cmp
jg
jno
cmp
jl
mov
imul
lret
lahf
xchg
inc
mov
dec
cli
pop
push
mov
pop
xor
inc
jmp
cwtl
pop
mov
dec
pop
js
mov
jbe
jnp
loope
fisttps
sub
fisttpll
mov
pop
outsb
in
mov
shrb
outsl
outsl
jnp
subb
cmpsl
add
fs
and
jmp
or
pop
loopne
sub
inc
sbb
inc
mov
jmp
test
push
sahf
push
push
and
andb
movsl
mov
jp
mov
sbb
adc
jl
cmp
stc
cmp
js
xchg
testl
out
mov
imul
stc
or
xor
pop
xchg
outsl
mov
sbb
pushf
fisubs
addb
mov
xchg
lods
dec
cltd
push
mov
jbe
out
mov
xchg
xor
sbb
sti
aad
dec
adc
loopne
pop
adc
lods
mov
imul
xchg
cmp
sub
fsts
cmp
repz
test
mov
in
sbb
inc
mov
aad
mov
test
inc
adc
fldz
mov
les
mov
or
xchg
xchg
dec
lret
mov
adc
jnp
fistl
push
lcall
lock
sbbl
sbb
or
mov
je
xlat
jb
in
sbbl
aam
std
leave
repnz
cwtl
or
mov
pop
insb
mov
pop
push
adc
rcl
fdivs
mov
loop
mov
mov
fwait
das
cmp
mov
fnsave
fld
mov
stc
es
mov
jg
bound
mov
sbb
imul
mov
jp
js
pop
sbb
pop
jmp
sub
lahf
or
sub
xchg
sahf
aam
xchg
mov
cwtl
push
cli
xor
clc
out
test
ljmp
xchg
lods
fadds
pop
out
push
sub
pop
inc
popa
setg
cltd
pop
imul
xchg
xchg
cli
test
push
sub
xchg
mov
pop
sbb
jo
mov
popf
int
add
dec
add
movsl
dec
xor
das
lods
or
clc
pop
xchg
mov
push
xlat
mov
push
insl
jp
in
pop
dec
or
inc
lcall
mov
fbstp
fdivrl
push
dec
or
adc
dec
jns
jge
in
dec
xchg
js
push
sub
insb
aas
pop
addr16
jp
data16
mov
jp
mov
sub
adc
lock
sahf
loope
cmp
xchg
xor
push
jmp
push
add
fisttps
push
mov
popf
shl
dec
mov
and
mov
and
loop
sarl
das
scas
lcall
bsf
xchg
cmc
xchg
ret
cmpsl
pop
or
arpl
adc
inc
adc
xchg
push
or
fcmovbe
mov
gs
mov
pop
stos
and
outsb
rcr
sti
mov
ss
clc
leave
iret
dec
dec
hlt
dec
jg
push
xchg
movsl
leave
jbe
xor
jge
pushf
xchg
sbb
mov
sub
scas
int3
enter
nop
or
les
xor
xchg
popa
stos
scas
sub
xchg
push
mov
cmp
lods
adc
add
cmpsb
jns
cmp
pop
xlat
das
enter
daa
bound
outsb
jno
jg
jl
idiv
cmp
or
ds
movsl
std
pop
sub
gs
lahf
cli
cltd
repnz
or
outsl
test
jge
outsl
xor
sub
pop
cli
lahf
leave
js
sbb
push
and
loope
mov
xchg
sub
mov
or
dec
sbb
into
sahf
fildl
clc
cmp
and
and
mov
xchg
jle
loop
adc
pop
lcall
imul
xlat
test
mov
addb
jg
push
pop
mov
jo
mov
jge
sub
leave
cld
mov
cmp
xor
imul
in
outsl
mov
or
into
pushf
mov
xor
outsl
xorb
dec
stc
inc
pop
ds
loope
mov
lods
xor
mov
in
out
out
lock
pop
in
pop
xor
jg
sub
daa
sti
test
mov
gs
xor
loopne
call
notb
push
arpl
imul
mov
repz
jge
xchg
insb
mov
fs
jnp
xlat
ret
mov
jmp
bound
mov
inc
jmp
roll
push
sbb
loope
xchg
nop
lahf
sub
dec
inc
dec
jae
and
shrb
mov
shl
shlb
xchg
sub
lea
jne
adc
jns
leave
lea
pop
sbb
pushf
mov
and
pop
inc
jle
inc
or
test
pop
loop
cs
jb
inc
inc
dec
or
jae
icebp
mov
jg
sub
call
cwtl
add
mov
xchg
das
mov
xchg
adc
mov
mov
mov
xchg
mov
repz
inc
shrb
sbb
sub
xchg
dec
frstor
ss
inc
xor
cmp
insl
dec
insl
mov
stc
inc
cmpsl
popa
jns
mov
outsw
mov
xchg
and
adc
add
mov
clc
pop
or
shlb
adc
ret
aam
push
xchg
mov
addl
cmp
fisttpll
inc
adc
daa
in
popa
xchg
dec
lods
inc
sub
stos
popf
out
out
jns
xchg
shrl
ss
in
mov
add
mov
xchg
xor
mov
mov
lret
loope
test
andl
sbb
loopne
ror
or
pop
les
jle
lret
add
into
cmpsb
pop
push
ret
push
aas
mov
or
mov
xchg
lock
mov
leave
ret
mov
pop
adc
clc
ja
repz
sbb
inc
xor
and
push
jecxz
jne
inc
loop
jns
and
icebp
cmp
bound
push
in
test
out
pop
cmp
addr16
rcrl
jp
and
mov
fsubrl
sti
jle
pop
cmp
pusha
cmp
fcomip
sbb
xchg
pop
test
jmp
xor
lods
insb
push
dec
lock
popf
divl
mov
arpl
sub
insb
gs
insb
ds
mov
scas
jb
out
push
add
dec
push
iret
cmc
fwait
icebp
ret
and
inc
mov
mov
and
into
lret
xor
sarb
sub
std
sbb
in
ficoml
ficoms
stc
mov
hlt
and
mov
leave
inc
inc
sub
xchg
lea
jbe
leave
push
jge
sbb
loopne
ret
cmp
mov
aaa
aad
int3
mov
adc
push
cmpsl
lods
hlt
xor
lock
scas
or
pop
and
xchg
movsb
vmovntps
or
inc
jl
enter
daa
popa
xchg
insb
cmp
jno
call
fs
mov
ds
inc
push
movsl
add
inc
and
push
xchg
lahf
sbb
ficoms
lcall
dec
std
mov
jbe
jl
push
insb
pushf
pop
and
and
adc
pop
adc
daa
push
adc
sub
sub
sub
scas
repnz
and
loop
sub
mov
xor
cmp
and
push
loopne
lea
negl
cmc
xchg
sbb
cltd
stos
xchg
sbb
rcll
dec
sub
inc
repz
les
mov
dec
jge
sbb
ss
out
in
out
xor
add
adc
ja
dec
sarl
mov
mov
cmp
jg
mov
xchg
cmc
xor
jg
loop
xor
std
adc
sbb
cmp
lods
sbb
jnp
in
pop
out
cmpsb
fdivrp
nop
add
sub
cmp
pop
and
push
push
sbb
loopne
lds
subl
imul
fdiv
repz
insl
xlat
xchg
das
outsl
fcompl
outsb
xchg
mov
add
shrb
pop
outsl
cmp
repz
sub
and
push
aad
in
popf
nop
jp
inc
dec
movsl
lock
inc
cmp
test
out
jecxz
or
xchg
jmp
fisttps
loopne
mov
or
dec
aam
pop
fildll
xor
jmp
test
jns
in
dec
inc
add
mov
jge
dec
sbbb
rorl
pop
lock
adc
call
dec
test
fmuls
pop
test
aaa
das
stc
adc
bound
dec
xor
or
and
es
add
dec
subl
pusha
adc
std
adc
icebp
cmp
cwtl
ds
inc
movsl
repnz
dec
inc
sbbl
push
rolb
stos
sub
stc
jb
pop
test
push
cmpb
clc
pop
test
xchg
xor
mov
mov
lods
scas
movsb
inc
stos
mov
lods
out
fdiv
sahf
xchg
sbb
push
adc
push
minps
sub
pop
pop
sbb
movsb
xchg
sub
inc
xchg
adc
mov
mov
sbb
pop
pushf
shll
sub
pop
outsl
pop
inc
fwait
sbb
es
add
jmp
in
xor
cmp
xor
aas
cmp
aas
and
mov
int3
mov
pop
dec
icebp
je
inc
enter
add
loope
jb
icebp
dec
icebp
mov
jne
push
mov
aam
fucomi
rolb
daa
stc
pop
jns
lcall
xchg
loopne
out
or
sub
bound
rclb
nop
push
mov
pop
jp
insb
inc
stos
jnp
pop
jle
fwait
xchg
in
nop
shlb
adc
lds
popl
pop
pop
jae
mov
push
popf
push
mov
pop
stos
pop
jg
and
int3
jmp
scas
aad
cwtl
push
dec
aaa
int
call
inc
ret
ret
sub
xor
fucomi
arpl
lods
xchg
inc
pop
pop
pop
or
dec
jb
inc
or
stos
fidivrl
push
insl
xchg
xchg
cmp
mov
dec
cwtl
fidivs
jb
rorb
inc
mov
fsubrl
mov
out
push
push
xor
js
xchg
rolb
sbb
jne
or
pusha
cltd
add
aaa
stos
int3
sahf
das
pop
dec
outsb
mov
nop
xor
dec
mov
scas
call
cltd
popa
cmp
inc
or
lods
loop
jg
das
in
daa
add
or
pusha
in
lods
cmp
jne
jl
jecxz
cmp
rolb
pop
and
fdivrl
push
scas
xchg
out
xor
dec
push
adc
pop
xor
dec
loope
add
cli
mov
fwait
dec
pop
push
dec
test
scas
stc
loope
call
sub
dec
adc
mov
mov
arpl
adc
and
xchg
push
mov
movsb
jp
or
addb
neg
lcall
or
sbb
mov
and
in
stc
mov
stc
or
mov
lds
addr16
out
add
jae
xor
outsl
iret
test
push
enter
xchg
mov
jge
stos
lahf
mov
cmc
dec
jecxz
xor
jb
outsl
inc
mov
loop
or
stc
mov
sub
dec
add
sub
data16
fists
cli
ret
lret
addr16
in
cmp
sub
sti
loop
and
jp
jb
sub
mov
pop
mov
cmp
adc
jp
repz
mov
inc
sbb
test
sbb
imul
mov
jmp
add
xchg
aad
lcall
add
xchg
inc
dec
icebp
mov
int3
movsl
push
jecxz
pushf
stos
cwtl
pop
jp
inc
test
add
sahf
mov
adc
test
pmaxsw
pop
xchg
inc
push
cmc
popa
inc
sbb
js
jb
jmp
pushl
not
fimull
mov
pop
std
mov
cmc
jnp
roll
mov
sub
sbbl
add
jnp
pop
mov
ret
lcall
push
stos
mov
add
and
cmc
imul
and
es
adc
sbb
dec
jle
je
pop
sub
mov
adc
cmp
outsb
gs
arpl
mov
dec
into
rcrb
mov
and
clc
das
gs
leave
pop
push
inc
stos
fstpl
int
xchg
pop
push
xchg
jno
mov
or
imul
jnp
gs
aas
in
cmp
in
mov
pop
add
in
cltd
add
pop
mov
mov
sub
test
cwtl
xchg
xchg
jle
sbb
outsl
adc
sbb
fwait
dec
add
pop
add
add
lock
or
sti
sti
add
testl
dec
xchg
mov
std
mov
xchg
ja
cmpsl
mov
in
icebp
inc
pop
adc
or
jp
mov
sahf
test
and
mov
aad
out
scas
push
fldenv
insb
sub
nop
lahf
and
in
inc
andl
push
jne
cld
or
or
mov
mov
push
aam
xchg
hlt
jnp
push
je
xor
in
pusha
outsl
adc
pushf
xchg
lods
mov
int
or
adc
mov
xchg
cld
push
loope
xor
lcall
imul
scas
cmp
enter
lds
ret
daa
iret
mov
clc
ret
in
scas
jmp
inc
rolb
pop
fiadds
sbb
stos
push
xchg
sub
xchg
in
add
int3
pop
cmp
sbb
pop
push
add
or
mov
das
repnz
xor
inc
hlt
sub
out
adc
jbe
dec
pop
jge
in
push
push
sub
mov
repnz
fldl
int3
mov
pop
dec
fnstsw
xchg
push
insl
out
xor
cmpsb
clc
inc
scas
out
and
dec
dec
movsb
jecxz
sub
cmpsb
add
in
push
jb
enter
daa
pop
lret
lret
jno
es
jl
xchg
jb
inc
push
cmp
cmc
jp,pn
adc
push
lahf
push
cmp
cmpb
push
fisubrs
xor
mov
std
jge
xor
cmp
inc
add
loope
xor
sub
lret
cmp
jae
iret
outsb
jno
mov
add
lcall
jns
sbb
add
fs
inc
pop
in
mov
lods
and
sbbl
inc
in
lcall
mov
out
mov
sbb
sahf
loope
ret
das
inc
adcb
mov
mov
nop
lret
fsubp
ss
mov
cmp
fs
movsl
testl
pop
or
mov
inc
imul
dec
pop
xor
cmpsl
outsl
pop
fwait
or
add
dec
stc
imul
fs
sahf
add
out
inc
cmpsb
stc
lods
call
and
ds
jbe
testb
cmpsl
jae
lods
adc
sub
popf
andb
loopne
mov
pop
adc
daa
outsl
adc
jo
repz
mov
in
fldenv
pop
cmp
mov
subb
mov
leave
loop
jmp
int3
enter
inc
aad
stos
test
dec
arpl
inc
pop
test
lret
xlat
mov
cmc
fwait
arpl
andl
pop
inc
frstor
pushf
mov
sub
pop
sub
out
inc
popf
test
cmp
mov
dec
jo
inc
je
pusha
cmp
sub
div
stc
xchg
std
gs
cwtl
mov
movsl
mov
add
cli
jle
xorl
in
popf
lret
xchg
popa
outsl
mov
cmp
push
jecxz
das
mov
sbb
mov
push
pop
ret
lock
les
stc
insl
add
cwtl
dec
jns
inc
cmpsl
pop
lret
arpl
cld
pop
add
xchg
lahf
mov
addr16
sub
mov
xor
adc
clc
rol
pop
xchg
mov
dec
ljmp
mov
test
push
out
mov
aas
movsb
push
xchg
mov
add
bound
test
fsubs
mov
daa
jnp
rolb
sbb
insl
ror
and
aas
fwait
jnp
addr16
mov
int3
add
pop
iret
in
shlb
mov
dec
test
or
scas
xor
mov
fnstsw
in
out
stos
mov
inc
pusha
pop
ja
and
xlat
dec
sbb
jb
or
mov
cltd
dec
mov
inc
jne
filds
mov
in
mov
dec
adc
jns
dec
dec
in
pop
lock
sub
pop
mov
addr16
mov
inc
rolb
ret
jnp
sub
add
aaa
xchg
xchg
movsb
mov
dec
lret
dec
xchg
andb
les
das
jae
scas
in
xchg
pushf
push
popf
insb
push
xor
and
stos
std
incl
mov
cmp
mov
inc
ficompl
push
ficompl
adc
cmpsl
add
add
inc
fldl
mov
cs
addr16
sbb
bound
aas
jnp
inc
push
scas
ficompl
div
sbb
repz
test
out
repz
out
inc
sbb
adc
subb
hlt
ja
call
push
sbb
inc
add
cmp
bound
adc
jmp
or
or
loop
je
rorb
jnp
push
push
repnz
add
scas
cmpsb
stc
mov
push
dec
out
cmp
add
test
cmc
ret
jbe
daa
pop
sub
cmp
mov
jno
cli
or
jp
cmc
dec
xor
sbb
dec
and
adc
lahf
jbe
pop
push
push
push
mov
push
test
out
stos
addr16
jae
xchg
in
js
insb
cmp
shrb
loope
mov
mov
outsb
aam
pop
adc
mov
push
orb
add
jbe
and
lock
mov
fwait
inc
sub
or
xor
cli
xchg
sbb
divl
sbb
out
cmp
subb
mov
push
dec
mov
push
insl
mov
mov
adc
mov
inc
fcomps
movsl
stos
idivl
enter
mov
roll
mov
push
or
repz
fcoml
adc
outsl
scas
shl
xchg
pop
sub
and
mov
int
cld
xchg
data16
xor
iret
and
mov
mov
out
loopne
cli
sub
xor
rolb
inc
pop
pop
cmp
loopne
sarb
pop
fisubs
mov
rolb
mov
ljmp
ret
pop
pusha
push
xlat
mov
xor
xor
pop
jmp
pop
or
dec
aaa
push
aad
and
dec
ret
inc
jno
push
flds
mov
jecxz
mov
sahf
jecxz
lea
das
call
lds
pop
adc
jnp
pushf
or
decb
inc
and
dec
inc
push
dec
ret
dec
inc
jb
pop
add
rcrl
sbb
sarl
idivb
and
arpl
dec
test
add
mov
add
lods
mov
and
inc
jns
xchg
inc
xchg
mov
jo
cmp
add
ret
jg
jp
inc
jno
insl
jmp
sub
or
ret
cld
inc
repz
test
pop
jne
push
movsb
xchg
pop
xchg
sarb
sub
cltd
cmp
leave
ljmp
or
push
xchg
repz
popa
loop
lods
out
push
stos
pop
inc
lods
out
add
dec
pop
push
mov
outsl
imul
call
test
mov
out
mov
pop
lds
add
sti
mov
and
call
mov
push
lcall
cmp
mov
mov
lahf
hlt
xor
pop
and
sub
push
mov
std
push
mov
push
dec
lret
inc
clc
iret
or
lret
mov
xor
jne
mov
xchg
xchg
out
insl
jp
loopne
cmp
xchg
push
in
cmpsb
int
inc
jmp
inc
sub
push
inc
outsl
addr16
push
mov
ret
in
inc
in
cwtl
mov
jle
or
ds
std
pusha
movsl
inc
lods
fildll
mov
jmp
popa
jle
jae
mov
popf
xchg
mov
push
pop
js
stos
jo
shll
enter
ljmp
scas
in
push
and
mov
iret
jno
push
ret
inc
pop
sbb
adc
arpl
cmp
or
mov
cli
ficoml
stc
xchg
fwait
or
sbb
push
inc
pop
xchg
dec
ficomps
and
addr16
cmp
pusha
inc
std
mov
aad
pusha
leave
and
hlt
ret
push
and
scas
jge
std
negb
int3
xor
or
repnz
xchg
aaa
lods
int3
pop
dec
fs
mov
icebp
in
xor
pop
shl
test
icebp
and
idivb
int3
xchg
cmp
test
cmpsb
or
popa
in
fdiv
or
jno
push
daa
pop
adc
jno
rep
jl
jnp
cmp
shll
insb
jp
lahf
xchg
fstl
sub
push
xor
add
pop
mov
mov
pop
cpuid
lock
xor
in
xor
xor
push
sub
insb
jp
xchg
cli
rorb
mov
sbbb
rolb
fmull
push
sarl
insb
push
sub
outsl
pop
inc
dec
mov
push
xor
mov
ret
sahf
daa
subl
enter
lret
cltd
in
dec
dec
push
mov
and
adc
ss
inc
sub
xchg
idiv
lods
mov
rcr
add
mov
inc
cmc
mov
nop
jbe
ffree
sbb
sub
xchg
stc
fnstcw
test
mov
int3
dec
xor
cmp
out
cmpsb
movsb
cli
pop
pop
mov
test
ds
out
add
aad
inc
inc
das
loopne
inc
pop
std
adc
imul
aad
xchg
cmp
sbb
pop
lret
mov
sub
fstps
mov
lahf
mov
adc
mov
gs
cli
out
out
decb
mov
or
cmp
movsb
in
fidivrl
jecxz
in
mov
fcompl
call
inc
push
mov
adc
lds
mov
pop
jo
fadds
iret
ds
outsb
cld
jmp
dec
ds
jmp
dec
pop
pop
repz
sbb
stos
idivb
repz
mov
in
cwtl
sub
mov
mov
sbbl
jo
jb
aad
and
in
jne
mov
or
mov
jne
or
daa
lret
aaa
or
ret
push
add
dec
push
insl
rolb
dec
outsl
in
lods
cmpsl
pop
xchg
into
mov
cltd
cmp
adc
jnp
sub
movsb
stos
jnp
mov
push
xchg
rclb
testl
cltd
das
dec
push
mov
fst
ljmp
cs
xor
data16
nop
popa
stc
insb
out
pop
fiaddl
stos
dec
sbbl
push
shlb
fldcw
lds
ror
jo
push
loope
dec
mov
xor
test
cli
sbb
adc
pop
sbb
fstcw
mov
add
xchg
call
xchg
fdivs
hlt
pushf
push
or
xor
mov
sahf
mov
out
sbb
jge
je
mov
xchg
ljmp
mov
test
jge
bnd
cmp
dec
xchg
cmpsl
bound
fdivrs
test
adc
imul
inc
add
dec
imul
lcall
out
aad
mov
inc
add
in
sub
pusha
inc
std
cmp
mov
xor
mov
lods
xchg
sub
mov
insl
scas
xchg
sbb
pop
sbb
sahf
push
scas
stos
jecxz
out
fbld
popf
imul
scas
popa
mov
adc
call
ret
inc
pop
push
out
scas
inc
repz
arpl
inc
and
movsb
push
add
and
add
inc
xchg
repnz
push
sbb
mov
faddp
xchg
stos
call
mov
sub
hlt
hlt
or
sub
jg
jge
lock
xchg
sti
aaa
out
sbb
fimull
xlat
int3
dec
mov
add
push
in
xor
mov
xchg
scas
sub
js
jno
subl
inc
cs
cmpsb
mov
fsubr
ret
adc
daa
pop
jns
cmp
jno,pn
adc
cmp
add
pop
xor
xorl
ja
mov
xlat
push
sti
jns
test
aas
test
in
mov
pop
in
into
js
mov
pop
dec
sbb
mov
in
or
outsl
push
sub
sub
adc
push
lods
xorb
mov
and
repnz
les
aad
call
xor
pop
xchg
sub
test
inc
fdiv
clc
sbb
icebp
lods
cmc
sahf
lret
test
sub
and
test
mov
jp
mov
fwait
xchg
mov
ljmp
push
cmp
fcoms
pop
insb
lret
and
outsl
movsb
pop
mov
cmc
and
out
fidivrs
cmc
push
shll
pop
push
outsl
mov
jp
stc
nop
sti
in
fs
ja
sbb
push
data16
stos
out
lods
popf
bound
out
lock
cli
clc
shll
lods
lret
leave
mov
incb
cmp
loopne
inc
rcrl
icebp
adc
push
mov
scas
push
adc
dec
div
aam
notl
dec
scas
mov
xlat
cmp
xor
sti
in
or
jmp
mov
mov
nop
sar
dec
xorb
xchg
jns
fldcw
push
clc
jmp
push
movsb
ja
loop
cld
call
ret
lock
pop
pop
mov
adc
je
fistpl
pop
adc
pop
inc
xor
mov
jb
sahf
in
dec
aad
inc
je
stc
fcom
push
pop
idivb
pushl
in
lea
sarl
inc
dec
inc
inc
mov
mov
pop
adc
fs
cmp
push
jp
mov
fidivs
mov
es
mov
mov
cmpsl
pop
mov
mov
jo
cmp
sub
mov
stos
mov
mov
les
shlb
sub
xchg
mov
test
push
dec
cli
das
or
clc
xorl
insl
or
fsts
loop
adc
jbe
aaa
mov
out
lret
popa
and
jge
cld
push
pop
out
lahf
add
pop
test
xor
xchg
inc
das
dec
sbb
xor
xor
xlat
sbb
push
rcl
in
pop
mov
aaa
push
pushf
stos
xchg
add
jo
mov
scas
enter
in
or
rorb
lret
mov
push
aas
mov
jae
arpl
and
int3
repnz
mov
push
mov
adc
dec
cld
or
sub
lret
sbb
in
scas
faddl
or
mov
and
cmpsb
pushf
jp
dec
add
inc
or
jle
sbb
in
or
adc
stos
mov
int
test
popa
xchg
jae
adc
push
loopne
arpl
mov
push
and
mov
insb
shrb
adc
scas
les
push
adc
push
iret
das
ja
and
mov
inc
xor
es
imul
pop
sub
scas
mov
cwtl
xchg
dec
lahf
jmp
adc
fisubs
lds
popa
rclb
mov
jnp
imul
imul
xor
jbe
int3
lret
and
inc
xchg
stos
aaa
lods
dec
dec
or
fmuls
xor
push
stc
lret
mov
fidivl
and
in
cmp
imul
gs
in
push
xlat
fucomp
stos
or
inc
daa
pop
adc
xchg
shl
jno
push
dec
jl
mov
cmp
lret
subl
and
inc
jns
into
jne
test
or
pusha
xor
daa
mov
pop
pop
or
xor
sti
stc
pop
lea
or
pop
mov
sub
clc
lds
das
xor
outsb
std
add
adc
inc
push
aas
addr16
jno
lds
loop
jns
in
popa
movsb
xor
jg
lret
ds
dec
mov
dec
pop
inc
ret
inc
lcall
and
fwait
mov
sbb
sub
sahf
insl
mov
cmp
jb
incl
mov
fsubl
mov
push
adc
bnd
shll
push
mov
out
fcoms
ret
add
ret
roll
loop
adc
push
or
hlt
xchg
into
roll
cmc
xor
xchg
xor
mov
outsl
fwait
add
loop
pop
sar
loop
or
add
xchg
js
test
mov
push
mov
cli
ret
xor
imul
cmp
add
dec
sub
mov
gs
add
test
ficomps
dec
adc
fsubl
adc
lcall
aaa
sub
cmp
pop
add
jl
bound
adc
mov
jne
loopne
mov
aad
fcom
nop
pushf
mov
dec
fbstp
adc
fldl
cmpsb
lcall
loop
adc
cmpsl
out
xor
dec
sbb
xchg
movl
les
cmc
pop
push
pushf
callw
mov
pop
mov
xchg
stos
dec
inc
movsb
xchg
in
xchg
fdivs
or
jb
sub
testb
jle
add
cwtl
lahf
or
mov
add
sub
lret
push
mov
mov
and
lock
fwait
lahf
mov
xchg
inc
das
and
adc
shrb
insl
sahf
inc
mov
cmpsl
pop
outsb
dec
mov
inc
mov
jo
fxtract
push
mov
mov
frstor
jecxz
push
shlb
pop
fisubrl
xorl
aam
sub
out
push
adc
adc
clc
mov
dec
mov
popa
daa
and
stos
es
cmp
and
ror
push
xor
popa
seta
es
jbe
cltd
adc
jecxz
out
adc
xchg
xchg
pop
fs
cmp
test
out
xchg
xchg
icebp
out
sub
dec
pop
jno
lcall
mov
xor
decl
xchg
xor
mov
xchg
sbb
out
lret
lea
ja
insl
sub
pusha
cli
inc
push
popa
or
clc
push
mov
cmpsb
dec
inc
jo
jne
and
testb
or
dec
bound
push
jge
iret
xor
lock
or
nop
adc
sub
inc
outsl
mov
mov
out
inc
mov
imul
jnp
in
cmp
push
add
push
push
repz
jbe
loopne
lret
xchg
int3
mov
jmp
ret
jae
mov
inc
popf
or
mov
push
sbb
inc
stos
leave
jno
and
shll
imul
in
scas
daa
aas
and
dec
into
adc
push
sbb
mov
fstpl
and
and
aam
inc
sub
or
sub
inc
add
sbb
stc
and
mov
jno
pop
and
test
cld
jg
shlb
sbb
into
cwtl
aas
leave
xchg
xor
mov
enter
mov
std
movsb
pop
aaa
insb
sahf
orb
fsts
int3
and
mov
push
fsubl
push
jo
test
and
lret
xchg
adc
pop
shlb
xchg
out
jmp
daa
pop
xlat
mov
jno
mov
jl
mov
movsb
mov
add
cmp
add
mov
int
push
aad
divb
pop
inc
movsl
jae
ds
xor
js
std
cwtl
pop
int3
cltd
or
xor
xor
bound
push
aas
sub
fildll
mov
loop
and
pop
dec
std
sbb
mov
add
push
jo
mov
push
lret
int
cmp
ljmp
lcall
fstp
inc
dec
jge
dec
addr16
adc
sbb
sbbb
xlat
jg
shlb
add
jne
adc
stc
ss
sbb
pop
in
fmuls
add
cmp
lret
std
rcrl
sbb
inc
mov
sub
clc
sbb
outsl
jp
inc
loop
imul
fs
jb
add
outsb
dec
data16
ret
lods
imul
mov
insb
test
cmp
imul
inc
rdtsc
or
cmp
sqrtps
cld
pusha
mov
gs
cli
mov
pop
pop
jp
adc
and
sub
jb
pop
xchg
test
pushf
sub
cmp
test
mov
or
mov
loopne
xchg
jns
sub
fstps
aad
fiadds
ja
rorl
sti
nop
inc
mov
fldcw
push
add
jecxz
nop
test
stos
lea
and
xor
adc
pushf
adc
add
mov
cmp
inc
cs
inc
mov
sub
jb
mov
dec
ret
out
divl
pop
shll
sub
test
ret
fs
dec
mov
mov
dec
push
inc
nop
lret
mov
push
add
lret
lock
mov
mov
fcoms
and
mov
mov
sub
mov
in
bound
mov
out
add
mov
mov
mov
loop
pop
add
rorb
push
imul
mov
cli
push
aad
mov
inc
cli
stc
jne
xchg
jmp
aas
ljmp
iret
lods
fwait
xor
stos
adc
aam
xchg
or
push
push
andl
loop
and
icebp
not
mov
lret
pusha
insb
dec
ljmp
xchg
push
push
sbb
push
push
roll
jecxz
fwait
push
cmpsb
push
loop
incb
cmpsb
imul
in
aas
out
in
adc
xor
mov
xchg
push
fildl
jb
jno
jmp
and
dec
xchg
test
inc
jmp
pop
leave
mov
dec
dec
es
fsubrl
call
bound
pusha
jns
das
add
pop
or
cmpl
out
sub
sub
aas
dec
movsl
addr16
dec
test
cltd
and
loop
pop
mul
in
sti
aas
pusha
adc
out
xchg
lahf
mov
jmp
lea
mov
data16
popf
das
cwtl
jge
sub
outsb
stos
cmp
sub
and
sub
xor
icebp
cmpsl
dec
scas
mov
fs
cmp
stc
iret
in
pop
out
ret
aam
stc
mov
inc
adc
xchg
arpl
dec
inc
sub
push
or
cmpsb
das
jae
xorl
test
hlt
pop
push
ja
fisubrs
mov
ror
aam
cmc
push
leave
in
sub
out
iret
sub
pop
mov
jge
and
sbb
jae
or
int3
or
push
mov
xor
jo
inc
cs
add
cmp
adc
pop
or
js
scas
enter
daa
pop
int3
inc
cmp
sub
lret
jl
xor
cmp
jl
mov
test
fsub
cld
lahf
adc
fists
or
test
mov
inc
pop
fisubrl
js
xchg
bound
or
loope
ljmp
or
imul
sar
mov
and
add
add
mov
aam
int
dec
int
lcall
inc
dec
xchg
lcall
out
fdiv
mov
sbb
icebp
sahf
mov
add
xor
xchg
and
xchg
cmp
sbb
mov
into
stc
xlat
shrb
cmp
dec
mov
cli
insb
xchg
lret
inc
xor
xor
aas
xchg
into
xchg
out
cmc
mov
and
loop
jne
push
stc
mov
sbb
addl
adc
lods
push
lock
mov
ret
cld
test
loopne
push
cmp
lock
sti
stos
pop
cmp
pop
push
add
fidivrs
pop
jns
push
adc
jno
adc
push
sahf
repz
jl
xchg
inc
lds
ret
add
inc
inc
cli
xlat
cli
aam
sub
adc
scas
pusha
scas
in
dec
pop
jmp
nop
test
cmp
push
aad
inc
notb
popf
ret
or
inc
sbb
mov
lods
jecxz
std
sahf
lods
cmp
lea
out
shr
arpl
adc
xlat
jp
mov
dec
push
pop
cld
pop
ja
adc
stc
aas
lds
cmc
jb
mov
cmp
inc
je
xchg
testb
out
adc
iret
outsl
mov
pop
dec
add
jne
cs
sub
jne
sti
das
icebp
call
push
mov
arpl
ret
dec
cmp
mov
dec
pop
mov
cmpsl
pop
pop
push
mov
cmc
shlb
mov
pop
div
and
and
add
sub
fst
test
lea
cwtl
divl
clc
xor
ds
sub
ljmp
pop
lods
push
push
mov
out
hlt
jnp
xchg
push
jno
push
jmp
mov
add
je
cltd
orb
test
push
mov
into
sbb
adc
sbbb
sbb
lret
mov
fwait
xchg
mov
push
test
add
sarl
decl
clc
or
shrb
jns
xchg
mov
xchg
mov
mov
fcompl
and
ja
pop
fs
mov
or
nop
addr16
insb
or
or
jne
pushf
or
out
enter
mov
mov
in
xor
out
mov
sub
cmp
stos
addr16
pop
cli
mov
lea
jnp
in
jle
aam
in
or
fisttps
pushf
dec
xchg
jb
sbb
mov
push
jae
fnsave
popf
push
push
push
mov
lcall
and
les
imul
movsb
scas
in
xchg
jle
test
inc
adc
jmp
and
pop
pop
rcrl
in
push
inc
pop
push
les
lods
adc
das
aaa
leave
or
and
inc
add
cmpsl
xchg
dec
mov
pop
orl
repnz
cmp
je
ja
jne
mov
push
stos
cmp
jge
mov
xchg
aaa
ljmp
add
push
xor
sbb
loopne
cmc
aaa
out
jo
adc
cld
and
dec
push
cmp
mov
test
push
inc
adc
jnp
xchg
mov
in
pop
pop
ret
enter
daa
pop
inc
cmp
push
jno
jmp
jl
mov
cmp
sub
ljmp
and
enter
test
mov
push
push
imul
mov
xor
js
mov
mov
loope
xor
sub
lea
sub
adc
or
notb
sbb
sub
popl
pop
sbb
adc
and
outsb
int
fbstp
pop
rcl
lcall
fcompl
insb
sahf
push
mov
test
xor
inc
inc
mov
cmp
mov
inc
mov
adc
cmp
sbb
mov
andl
test
rcrl
add
and
stc
cmc
xchg
inc
xor
cld
mov
cmp
loop
sub
stc
insb
outsb
popf
fs
cmp
push
stc
data16
pop
lods
cmp
jge
aaa
inc
loopne
pop
gs
xor
movsl
aas
sti
pop
sbb
xchg
fisubrs
loopne
or
pop
cwtl
jle
adc
imul
rcrb
sbb
orl
mov
jo
in
mov
test
cs
mov
push
nop
sub
jo
jecxz
je
dec
inc
imul
shrd
mov
sbb
fidivs
aas
pop
sub
xchg
cli
jge
pushf
cmp
fistpl
bound
lahf
jb
inc
dec
popa
pop
inc
cmc
xchg
inc
aas
fs
pusha
dec
mov
mov
rcll
jg
lret
std
idivb
cwtl
rcl
addr16
imul
dec
js
in
fwait
inc
lret
popf
je
mov
mov
adc
mov
mov
adc
jne
es
je
insl
push
in
dec
push
push
cmpsl
push
xchg
jl
enter
int3
arpl
inc
add
mov
jnp
push
and
sarb
inc
dec
mov
mov
shrb
push
mov
mov
jg
push
pop
mov
xchg
js
clc
outsl
lret
imul
or
inc
inc
lods
jno
jmp
repz
lods
out
push
pop
scas
xchg
cltd
xlat
addr16
les
lfs
test
cltd
mov
or
xchg
dec
mov
mov
adc
xchg
imul
shrl
lcall
ficoms
sub
popf
add
fcoml
push
xor
mov
xor
mov
pushf
mov
addr16
pop
pop
dec
shlb
ja
jl
out
inc
pop
push
sub
mov
fisttpll
inc
xor
push
and
out
cmpsl
push
and
pop
jnp
dec
aad
in
mov
sbbl
test
or
sarl
sbb
push
mov
mov
lock
movsl
dec
in
jns
pusha
inc
mov
or
test
xchg
and
mov
push
in
pop
add
sahf
rcll
cmp
and
ja
insb
add
imul
in
scas
push
sub
push
lret
and
adc
divl
ret
or
lds
arpl
lds
subl
jg
pop
fiaddl
js
sbb
add
pop
mov
rcr
lock
lds
xor
adc
insb
cmp
in
add
hlt
test
test
jbe
mov
lret
sbb
dec
jbe
test
adc
add
aad
dec
push
mov
out
mov
sti
int
mov
cs
cmp
enter
data16
lret
sbb
inc
jmp
sbb
cmp
shlb
mov
fidivrs
mov
lock
and
mov
lahf
dec
dec
or
insl
lods
test
ss
stos
xor
daa
pop
cmpsl
es
jl
pop
mov
push
loope
pushf
imull
data16
sub
ja
outsb
mov
adc
jecxz
bound
push
xchg
adc
add
fxch
jmp
jge
pop
test
aas
loope
lcall
int
inc
cli
push
sbb
mov
ljmp
out
jg
or
mov
outsb
adc
mov
mov
inc
ss
shr
cmp
cmp
call
lret
pop
shll
mov
test
dec
jle
xor
stos
lcall
in
fs
ret
and
or
ss
mov
mov
xchg
mov
xor
aaa
iret
loopne
scas
pop
pop
mov
or
das
or
imul
addr16
xchg
int
mov
cmp
popf
sub
movsb
mov
and
test
inc
pushf
imulb
add
aad
inc
enter
test
pusha
mov
divb
flds
and
jecxz
mov
jge
in
cmp
ds
pop
pop
repz
repz
adc
cld
fildl
sti
pop
inc
jl
inc
aad
push
inc
adc
mov
dec
sub
shll
add
std
popf
push
push
cwtl
mov
mov
mov
mov
call
add
lret
or
loope
jbe
mov
aas
sbb
sub
inc
das
scas
inc
les
jno
aad
jns
push
or
dec
push
mov
mov
mov
ret
xchg
das
dec
mov
into
mov
mov
pop
xchg
mov
sub
mov
sbb
aaa
mov
sub
push
push
mov
rolb
ljmp
imulb
sbb
out
mov
mov
mov
add
inc
adc
lock
adc
and
xchg
repz
dec
pop
adc
test
popf
xchg
xchg
repnz
mov
cmp
sbbl
add
add
idiv
jns
lret
xor
pop
aas
or
dec
into
xor
push
xchg
push
pop
shll
addr16
pop
sbb
mov
dec
outsl
mov
aas
or
js
mov
mov
jne
cmpsb
add
bound
push
in
sarb
popf
sbb
sti
addl
sub
jl
pushf
sub
xor
addr16
sti
jp
xchg
ds
inc
adc
jmp
jle
push
in
dec
ss
loop
lcall
dec
ljmp
fcomp
jae
or
lock
movsb
mov
push
sbb
mov
and
and
push
imul
repz
adc
iret
or
and
jg
movsl
pop
sahf
inc
call
arpl
lahf
or
pop
mov
push
fidivl
js
xchg
cld
mov
filds
movsl
lds
scas
sti
rcrb
dec
repnz
push
leave
arpl
mov
push
dec
mov
pop
jge
push
inc
sbb
stos
sbb
push
in
add
test
les
insb
push
push
jae
jo
cmc
movsb
scas
sahf
and
ljmp
movsb
mov
ljmp
sub
jge
daa
push
ret
inc
cmp
mov
jl
xor
xchg
idivb
xor
jmp
push
mov
outsl
lahf
outsb
pop
popa
push
in
insb
or
add
inc
jg
xchg
pop
into
sub
sahf
pop
enter
push
xchg
mov
sub
adc
sub
xor
outsb
in
sub
test
popl
mov
mov
dec
and
insb
fadds
xchg
mov
sub
jns
pop
mov
mov
jnp
repnz
sbb
or
sahf
pushf
inc
dec
test
scas
addb
xlat
dec
mov
aam
mov
jno
mov
jp
adc
imul
add
fdiv
lcall
call
std
pop
mov
outsb
arpl
inc
andb
nop
out
outsl
neg
xchg
loop
mov
in
shrl
xchg
sbb
out
aas
lods
pop
xorb
subb
rcll
gs
cmp
mov
sti
mov
push
xor
scas
addr16
xchg
add
add
iret
adc
fmul
repz
inc
xor
cmp
add
imul
clc
xlat
mov
lahf
sub
shll
mov
shr
xor
mov
lret
nop
jecxz
inc
dec
mov
fdivrp
fnstcw
sub
jecxz
fldcw
mov
push
dec
aad
call
mov
push
icebp
adc
xchg
mov
jbe
addr16
in
dec
inc
pop
and
inc
sub
aad
mov
inc
out
lahf
pop
adc
popa
shl
orl
movups
inc
sub
mov
loopne
dec
ret
lret
jnp
and
out
f2xm1
xchg
das
das
mov
mov
sub
repnz
popa
in
ret
divl
push
insl
and
dec
dec
push
sub
mov
jp
or
lcall
mov
aad
shll
jle
mov
push
sbb
push
lea
pop
popf
mov
adc
inc
fucom
xchg
in
jo
out
ljmp
lea
mov
xor
jp
addr16
stos
jge
cs
gs
daa
mov
sbb
cltd
arpl
xchg
loopne
adc
jl
popf
lock
rcr
int3
ret
sbb
int3
push
outsb
mov
add
ljmp
mov
cmp
cmpsl
or
cmp
xchg
movsb
outsl
sub
push
jb
pop
aad
inc
ja
sbb
dec
shrb
or
sub
aaa
inc
jno
mov
je
clc
rcrb
mov
mov
fwait
jns
or
cmpl
sbb
sub
sarb
insb
mov
push
and
xchg
cmp
and
jbe
pop
pusha
jge
cwtl
fbld
jne
jmp
psubsw
add
or
popf
lret
or
mov
push
stos
cmp
and
dec
pop
imul
scas
push
pop
dec
inc
adc
mov
imul
movl
jbe
cmp
mov
sar
jge
pop
fucompp
pop
lds
adc
out
pop
push
push
fcmovnb
lahf
jae
sarb
popf
mov
insl
push
dec
fisubl
xor
pop
dec
jbe
and
jge
orl
lahf
aaa
aaa
daa
out
dec
or
add
and
mov
cli
dec
xor
push
dec
cmp
xor
xor
push
scas
jge
andb
mov
cmp
sbb
mov
cmpsb
push
in
adc
xor
dec
adc
daa
push
enter
push
mov
jl
sub
jg
push
call
cmp
inc
xchg
push
shlb
push
int3
mov
inc
icebp
add
sbb
pop
pop
fcompl
push
icebp
xchg
loope
fiadds
sub
mov
outsb
dec
cmpsl
out
lret
or
shlb
sbb
xorb
lret
test
add
fsubrl
fsts
xchg
push
fldenv
mov
popa
loop
cmp
dec
rcll
xor
sbb
pop
jno
aas
js
test
out
jg
cmpsb
mov
outsb
xor
int
sub
int3
adc
cmp
mov
fcomip
imulb
lret
pop
nop
xor
add
outsl
add
aaa
cmc
and
aad
mov
ror
stc
xchg
mov
pop
add
dec
out
popa
xchg
and
test
mov
cli
hlt
fsubrs
xor
add
mov
in
sti
fwait
push
gs
das
loopne
xor
pop
cmc
and
adc
push
push
imul
fpatan
jge
xlat
xchg
push
push
sahf
sbb
xor
mov
sub
insb
imul
ds
jmp
mov
and
jl
lret
nop
mov
or
jmp
lock
les
adc
cmp
cmp
mov
aas
or
dec
pop
push
cmp
mov
adc
in
pushf
push
bound
mov
inc
jecxz
dec
inc
inc
inc
js
inc
push
mov
xchg
in
lds
ror
je
das
sbb
aas
dec
pop
notb
scas
rcrb
push
push
push
mov
and
push
popa
inc
dec
lods
push
test
inc
test
lods
cmpsb
and
loope
das
insl
mov
mov
fists
imul
mov
es
int3
insl
or
adc
push
pop
ljmp
movsb
sar
lds
sbb
in
sbb
and
popf
das
push
sub
mov
mov
mov
push
movsb
test
or
data16
and
lock
jns
mov
sbb
rcrb
out
andb
push
push
pop
push
psrlw
inc
add
xor
sub
xchg
mov
ficompl
sub
mov
jl
xchg
sbb
cmp
xor
sbb
lods
fwait
push
repnz
push
adc
add
sub
mov
xor
xor
jbe
xchg
repz
and
mov
repnz
nop
aaa
add
pusha
dec
push
pushf
mov
or
mov
mov
cmpsl
mov
mov
int3
fucomi
inc
repz
add
insl
sbb
and
push
out
insl
in
bound
addr16
adc
lahf
lea
jo
das
jnp
add
jle
rcrl
jge
dec
pusha
sbb
add
push
or
test
in
leave
push
xor
push
sbb
xchg
mov
loopne
xchg
and
insb
lods
test
mov
push
mov
jno
iret
enter
movsl
sti
aam
or
dec
inc
dec
jo
arpl
mov
inc
cmp
hlt
or
or
cmp
pushf
out
xchg
xchg
stos
adc
and
mov
fnstcw
jmp
es
mov
push
adc
mov
rclb
push
jmp
hlt
and
push
out
fidivl
cltd
or
xchg
popa
sbb
ja
out
icebp
or
repz
into
pop
int3
mov
das
out
push
cs
cmpsb
xor
shrl
adc
or
cmp
cmp
repz
cmpsb
mov
out
enter
daa
push
push
fs
bound
jl
std
test
lret
or
jbe,pt
inc
movsl
pop
inc
adc
fbld
inc
push
xchg
or
push
xchg
cmp
add
call
loope
inc
jne
push
add
mov
ljmp
mov
jbe
adc
adc
inc
les
add
xchg
orb
sbb
repz
xor
call
stos
mov
sub
fmul
pop
mov
xchg
pop
push
pusha
adc
sbb
outsb
sahf
loop
loop
sub
cmpb
push
mov
cmp
pop
mov
cmc
sbb
sbb
push
cmp
insl
pusha
fwait
divl
gs
shll
push
mov
popa
or
pusha
into
push
scas
xor
mov
and
mov
jo
push
pop
push
stc
dec
and
xlat
popa
xchg
add
cmpsb
out
aad
sub
xor
int3
cli
daa
adc
adc
push
cmp
ret
push
ret
adc
push
ret
dec
gs
or
mov
adc
mov
or
dec
mov
sbb
insl
xchg
add
xor
imul
jmp
in
sub
cmp
js
incl
dec
cmp
daa
leave
jge
push
xor
jecxz
adc
cltd
lea
mov
lret
mov
jge
adc
movsb
pushf
adc
fcmovnbe
ljmp
push
sub
popa
test
aas
loopne
push
jb
enter
in
jae
or
not
shll
mov
daa
mov
or
cwtl
aaa
inc
lret
pop
push
sti
mov
adc
mov
jo
lock
adc
dec
icebp
shlb
mov
push
ret
adc
xchg
insl
out
mov
xchg
cmpsl
push
cmpsl
jl
xchg
insb
add
sub
daa
cld
lock
jnp
mov
arpl
and
sub
and
mov
dec
add
inc
lds
mov
mov
cmpsb
and
cmp
jno
leave
popa
enter
sbb
aas
jp
jecxz
fsts
xor
sbb
xor
add
cltd
xchg
push
call
xchg
lcall
or
das
sbb
jbe
rorl
xor
fwait
subb
push
mov
jbe
in
aad
add
aam
cmpsl
add
repz
or
xchg
inc
data16
mov
lock
mov
dec
scas
cmpsb
ja
sub
dec
dec
sbb
inc
jae
test
mov
mov
jne
and
out
and
xlat
bound
shlb
in
repz
sbb
dec
out
cmp
mov
and
jecxz
inc
xor
mov
fcompl
mov
outsb
xor
jle
jb
in
and
fbld
fadd
jmp
dec
adc
push
clc
mov
pop
mov
aad
lock
out
mov
and
fimuls
scas
fcoml
cmp
pop
daa
pop
ss
pop
inc
xchg
jecxz
push
leave
jno
shr
jns
test
push
jnp
nop
fimull
out
xchg
add
leave
pop
insb
js
fidivrs
lds
add
adc
lods
leave
enter
mov
inc
push
ss
jbe
xchg
sbb
inc
mov
movsl
inc
repz
int3
add
cmp
lea
ds
adc
or
adc
xor
ljmp
and
data16
fldl
cmpsb
mov
in
loop
push
enter
daa
push
pop
mov
and
jl
mov
sarl
mov
movsl
sbb
jp
pop
lahf
lret
nop
stos
push
data16
add
push
bound
enter
inc
fwait
xchg
cmp
pop
test
pop
loope
mov
sub
adc
sub
jle
adc
sbb
xchg
push
sbbb
sbb
push
dec
add
in
and
cmp
fbld
int
xchg
enter
push
pop
cmp
inc
lcall
mov
sbb
mov
add
jg
push
test
mov
cmp
adc
cmp
imul
sub
sbb
je
enter
out
mov
outsl
or
aad
jmp
jns
xor
xchg
xor
out
push
jmp
xor
js
and
data16
pop
aad
sahf
ss
out
mov
jle
ljmp
sti
lds
incb
and
stos
movsl
loopne
or
pop
xor
adc
lahf
imul
adc
sbb
xchg
sbb
test
adc
mov
sub
fnstsw
jmp
in
mov
adcb
leave
adc
dec
sbb
pop
test
pop
xor
inc
mov
shlb
cmp
fs
test
fstl
add
call
inc
icebp
mov
inc
jl
loop
jg
push
jb
fsubrs
je
jl
rcr
test
negb
jmp
jle
ja
in
mov
sub
pop
push
addl
lret
enter
add
push
lock
mov
mov
dec
shll
and
dec
pop
movsb
mov
es
enter
cs
cmpsl
push
jbe
mov
jmp
cld
sbb
sarb
sub
lcall
fnsave
sub
xlat
ljmp
jae
push
sub
fstl
lcall
shlb
dec
ret
fwait
adc
sub
xchg
cld
mov
push
or
jg
add
cltd
int3
int3
cmp
jnp,pt
mov
loopne
xchg
push
push
jp
cmp
mov
ds
cmpsb
call
fwait
scas
sub
push
push
cmpsl
movsb
add
arpl
incl
movsb
xor
xchg
or
or
xor
in
adc
xchg
inc
push
mov
xor
ficomps
mov
out
dec
cmp
inc
or
test
fidivs
dec
mov
fs
imul
out
add
bound
jnp
fldt
es
push
stos
subl
out
sbbb
lahf
in
addr16
and
jns
mov
pop
in
mov
sbb
pop
in
mov
dec
imul
ret
xchg
sbb
xchg
sbb
pop
jae
pushf
enter
addr16
inc
divl
mov
adc
add
popa
adc
scas
insb
and
imul
scas
aas
jb
push
cs
sbb
loop
jns
xchg
rol
lret
add
pop
jp
add
pop
arpl
xchg
lahf
inc
inc
push
inc
or
add
inc
cli
arpl
add
add
adc
xchg
pop
fwait
es
ficomps
repz
lds
xchg
rorb
mov
xor
leave
aas
data16
sti
ret
adc
jbe
call
pop
sbb
repnz
fs
or
icebp
add
pusha
sub
js
dec
adcb
hlt
int3
xchg
xor
inc
cmpsl
in
sbb
and
popf
cmp
repz
or
cmpsb
test
add
aas
daa
push
out
cmp
mov
jmp
mov
cmp
xchg
pop
ds
pop
and
imul
mov
dec
push
sub
test
push
push
or
fisttps
les
mov
loope
iret
dec
sub
adc
icebp
outsb
js
mov
sar
mov
mov
sub
sbb
xor
out
and
mov
push
loop
jmp
out
xor
sub
jns
mov
xor
push
push
inc
pop
fcompl
lock
ss
lock
jg
sub
test
scas
mov
bound
lods
ret
push
xchg
lret
fsub
jne
divl
xchg
and
mov
popf
rcll
mov
fmuls
mov
test
xorb
lods
cli
outsl
jb
sbb
mov
sti
fs
cmpsb
ja
mov
push
ljmpw
adc
mov
xor
mov
inc
cmp
dec
das
sti
je
mov
fs
add
ret
sbb
daa
pop
push
jmp
adc
cmp
adc
lcall
cli
ljmp
mov
xlat
mov
xchg
sub
jle
mov
cmp
jle
icebp
pop
aaa
aad
sbb
nop
dec
call
scas
inc
push
xchg
les
mul
imul
call
aaa
je
mov
jns
adc
inc
pushf
imul
and
pop
call
aas
push
popf
popf
jb
sbb
dec
jnp
gs
mov
sbb
pop
test
std
loopne
dec
cwtl
xor
sub
push
in
sbb
jge
lret
aaa
repz
in
jno
add
xchg
lock
or
mov
add
dec
and
out
movnti
pop
call
insl
mov
dec
sbb
cli
push
loope
cld
ds
inc
in
mov
dec
pop
aam
icebp
jg
mov
cli
cmp
sub
lea
mov
jo
push
in
ja
fnstsw
lahf
clc
shll
ljmp
popf
lods
repz
mov
out
test
jno
push
out
jmp
out
daa
inc
add
pop
cltd
add
push
test
dec
mov
jecxz
ljmp
clc
mov
sbb
push
sarl
loop
pop
je
add
push
cli
xor
add
cmp
in
in
xor
aad
xor
outsb
xchg
loopne
mov
stos
xor
ja
dec
push
inc
mov
cmp
repz
xor
adc
dec
mov
pushf
xor
loope
jne
les
jmp
in
mov
div
or
sub
out
pop
les
addr16
mov
mov
clc
cmpl
jp
jbe
inc
in
push
inc
pusha
jmp
sbb
xchg
push
jmp
in
call
push
jle
and
add
mov
stos
aam
in
and
es
insb
out
ret
imul
pop
push
jne
adcb
test
iret
in
out
ret
push
pop
mov
adc
lret
jle
inc
inc
popf
or
enter
sbb
sub
mov
sti
xchg
scas
negb
mov
cwtl
cmpsl
faddp
cmp
lds
pop
push
mov
mov
cltd
sbb
inc
adc
mov
stos
jge
and
icebp
aaa
and
xchg
add
xor
out
xchg
xor
mov
pop
jnp
leave
mov
cmp
push
movsb
jne
roll
fldenv
mov
xchg
enter
daa
push
add
cmp
cmp
fsubl
cmp
subb
fisttps
movsl
je
data16
dec
and
js
test
clc
sub
dec
dec
ficomps
lods
sub
pop
add
push
addr16
add
mov
sub
stc
sub
and
adc
rorl
in
addb
in
add
cmp
and
cmp
int
mov
sub
push
adc
inc
xchg
cmpsb
push
gs
int
dec
mov
sbb
adc
lret
rclb
test
fcoms
jg
or
mov
pop
mov
and
or
adc
decb
adc
repnz
mov
cmpsl
pushf
shr
cmpsb
mov
sub
sub
push
into
scas
xchg
outsl
cmc
test
mov
sbb
xchg
stc
insl
and
js
aas
add
mov
pop
lods
mov
mov
or
shl
xor
lret
and
incb
cmp
pop
pop
jno
das
adc
popa
sbb
or
repz
sbb
sbb
push
ljmp
mov
mov
mov
pop
jmp
push
cmpsb
iret
aad
mov
mov
inc
push
out
les
insb
jecxz
in
daa
mov
mov
cmp
cmp
jne
es
adc
outsb
sti
pop
adc
loop
jmp
inc
mov
push
jb
xchg
push
dec
repnz
sarl
xchg
negb
sbb
mov
adc
scas
xorl
hlt
lret
cmpsb
or
mov
outsb
js
leave
and
inc
das
jmp
xor
and
in
ret
ret
es
adc
push
dec
xor
jge
push
mov
adc
lods
mov
cld
jno
cmpsb
mov
jo
mov
clc
rcll
mov
sbb
sub
out
aam
lds
push
mov
repnz
and
lret
popa
or
sti
jae
jl
pmaxsw
jmp
push
rcll
cmovge
negb
push
daa
mov
sbb
rolb
mov
test
cli
cmpsb
xchg
pop
sbb
mov
nop
inc
sub
ljmp
mov
add
cltd
sub
incl
out
lock
ss
mov
xchg
das
xchg
mov
sbb
pop
jl
in
ja
cmpsl
adc
aam
inc
cmp
jecxz
bound
dec
and
add
rolb
bound
mov
dec
adc
cmp
pop
mov
scas
arpl
or
xor
addr16
movsl
jp
and
mov
ss
popa
dec
jle
or
int3
pusha
test
xchg
or
add
cld
rclb
push
int
mov
mov
xchg
stos
push
stos
inc
inc
out
repz
pop
mov
push
mov
cmp
inc
or
ret
dec
pop
call
int3
jno
add
push
or
stc
jns
inc
clc
jo
fisubrl
setno
sbb
cmpsb
pop
pop
stc
into
pop
fisubs
lds
sub
mov
out
xor
or
out
leave
sub
mov
push
and
test
enter
push
mov
or
fldl
orl
dec
pop
cmp
xor
sti
ja
scas
fsubs
xchg
cmp
fsubr
movsb
add
repz
mov
icebp
in
xchg
mov
enter
daa
push
popf
sarl
fwait
loop
cltd
bound
pop
xchg
xchg
sub
movsl
jnp
inc
and
pop
lahf
sub
rsqrtps
scas
ret
mov
push
ret
jbe
xor
inc
dec
pop
mov
fbld
add
push
inc
pop
loope
jp
sub
mov
je
hlt
outsb
ds
adc
scas
lahf
mov
xchg
popf
mov
add
out
and
mov
call
sbb
sub
scas
in
lcall
sbb
nop
movsb
sbb
lret
mov
es
push
jg
lock
mov
jle
mov
fidivrl
adc
scas
xor
adc
pop
fcomi
divl
add
out
sub
jge
lcall
cmc
mov
xchg
loop
inc
add
and
mov
add
lock
mov
mov
shll
outsl
imul
pop
mov
shrb
lahf
gs
sbb
loopne
pop
dec
pop
nop
das
cmpsb
adc
and
lods
adc
aaa
cld
repz
push
xchg
and
imul
fldenv
xlat
xor
mov
add
mov
push
sti
jp
iret
arpl
mov
aad
fisttps
ss
hlt
orb
xchg
neg
add
jno
xchg
xchg
lea
add
mov
movsl
pop
ret
adc
mov
fistl
outsl
push
inc
xchg
xor
cld
lods
aas
pop
loop
jb
ds
imul
cltd
mul
push
int3
std
cs
add
ror
mov
testl
lret
adc
lret
mov
nop
jg
lock
cs
enter
and
cmp
inc
mov
es
insl
mov
dec
cmp
cmpsl
dec
sti
xchg
mov
test
test
xchg
jnp
and
cwtl
negb
pop
cmp
mov
dec
pop
mov
and
aas
aam
cmp
mov
ss
push
jae
in
adc
xchg
popa
or
popa
and
lods
leave
mov
jnp
out
outsl
inc
mov
push
pushf
xor
lods
cmp
mov
shr
test
aad
sub
jmp
ret
cmc
loope
notl
sbb
lock
shl
les
pop
lret
fwait
cmp
mov
add
mov
jmp
test
or
xchg
xchg
mov
jle
pop
mov
mov
rcrb
push
push
ja
adc
adc
fiaddl
or
lahf
mov
es
add
mov
mov
mov
ljmp
in
jne
adcl
inc
sub
or
outsb
lret
jp
xchg
mov
mov
in
jnp
mov
fxam
mov
pop
cmpsb
fistps
arpl
jmp
jnp
pop
jae
xchg
push
push
add
xchg
popf
mov
mov
jbe
sub
aaa
imul
xchg
negl
push
sub
iret
mov
push
stc
pop
pop
lahf
roll
add
pop
loopne
dec
test
push
ja
jle
sbb
xchg
pop
jmp
sbb
mov
push
fimuls
cmpsb
jle
leave
dec
dec
rcr
dec
mov
pop
out
leave
movsb
in
cmpsl
hlt
fsubrl
divb
les
jge
dec
jae
push
jp
aaa
mov
dec
add
int3
cmp
test
xor
push
fildll
out
subb
into
inc
enter
and
xor
in
jle
push
enter
daa
dec
mov
imul
jp
cmp
mov
ret
insl
xor
out
pop
lahf
inc
adc
bound
mov
into
xor
push
aam
ficomps
dec
daa
js
cmp
loopne
ja
pop
loope
add
xchg
sub
mov
adc
mov
decl
test
mov
add
in
and
scas
icebp
push
jmp
dec
int
shrb
xor
add
aaa
lcall
out
fcompl
cmpsb
negl
lret
mov
addb
jg
fadds
mov
cmp
inc
adc
cmc
mov
fcoms
push
divl
inc
lret
xor
sbb
mov
sbb
or
cmp
test
outsl
ud1
fldt
in
add
or
fiadds
mov
sahf
push
cli
es
and
dec
fsin
int
mov
loopne
mov
stc
adc
push
inc
imul
insb
xor
push
mov
xchg
in
scas
sbb
xchg
pop
popa
xlat
jo
in
sub
mov
jns
and
sbb
jp
es
nop
loopne
mov
jae
inc
mov
fnstcw
les
rcrl
lret
out
lea
dec
rol
ss
loope
jne
jae
or
pushf
push
rcr
mov
sbb
inc
call
or
dec
loopne
bound
ret
rcrl
xchg
psadbw
daa
int
arpl
mov
push
out
mov
mov
andl
mov
mov
mov
cmp
stos
das
cmpsl
pop
out
mov
sub
and
lret
adc
loopne
movsl
es
push
sahf
insl
jb
out
dec
sub
add
xchg
imul
icebp
pop
cltd
jnp
movl
mov
xor
fistps
push
push
rcrb
in
sub
xchg
aam
pop
insl
mov
std
push
ss
fwait
clc
and
xchg
mov
gs
cmp
jg
xor
push
stos
pop
je
out
shlb
xchg
sbb
push
ja
stos
ud2
jo
add
lds
mov
in
imul
push
jmp
jo
sbb
adcb
sarl
insb
pop
pop
jne
std
fwait
imul
push
jecxz
loopne
mov
aam
ret
xor
adc
fimuls
xor
lret
int
shll
lahf
sbb
pop
repnz
xchg
ja
loop
dec
pop
sub
data16
inc
or
aaa
enter
mov
out
les
insb
pusha
mov
and
jle
nop
bound
cmp
repz
in
call
inc
out
push
mov
or
pop
popa
scas
cs
jp
sahf
mov
mov
fldcw
sbb
cmpsl
push
aas
pusha
mov
lea
xchg
mov
int
xor
xor
imul
push
dec
mov
adc
stos
sub
insl
dec
insb
das
push
push
ss
cli
scas
lret
imul
dec
xchg
mov
add
mov
pop
push
cmp
inc
lea
arpl
aad
inc
dec
daa
in
ror
lods
push
testb
xchg
mov
pop
sbb
insl
clc
pop
push
xchg
fisubrs
lret
cmc
into
sbb
mov
jno
sbb
hlt
daa
cmc
mov
jbe
cmc
push
jge
mov
je
pusha
lahf
sbb
and
cmp
insb
xor
int3
and
je
cmp
mov
addb
mov
cwtl
scas
xchg
inc
mov
cmp
sbb
inc
test
icebp
cmpsb
mov
stos
in
gs
or
push
insb
daa
dec
pop
and
sub
push
xor
in
push
dec
push
cmpsb
movsl
mov
mov
sub
cld
push
test
cwtl
push
pop
or
xor
mov
lret
pop
push
ja
js
xor
push
and
sub
dec
imulb
push
lcall
mov
add
mov
mov
std
pop
add
lods
and
adc
out
fxch
int
xchg
xor
scas
in
pop
mov
aaa
lcall
jge
dec
ret
adcl
test
loopne
pop
pop
movq
les
daa
push
mov
cltd
fiaddl
cmc
push
fnsave
mov
push
fmul
nop
loopne
das
add
lret
daa
shll
rorb
js
sbb
pop
adc
xor
int3
outsl
out
or
loop
adc
stc
xchg
in
sbb
xor
in
mov
jge
aas
loope
mov
and
xor
inc
ret
mov
lock
gs
push
and
xchg
in
pop
into
sbbl
lcall
adc
imulb
xchg
test
jp
jo
aas
cmp
jae
xlat
scas
add
sub
pop
arpl
in
shr
aaa
mov
jge
in
aad
xchg
es
mov
addr16
inc
mov
enter
xor
jecxz
sub
into
inc
pop
lea
xor
mov
inc
pop
sub
mov
pusha
rorl
and
fucomi
das
jae
std
mov
inc
xchg
rorb
aas
lcall
dec
push
stc
bnd
jns
shrl
ljmp
add
cwtl
push
mov
mov
rol
mov
aad
dec
sbb
dec
lret
repz
loop
jno
xchg
pop
sub
mov
loopne
push
and
mov
and
ja
subb
pop
dec
and
jl
dec
cmp
repz
xor
push
cld
repnz
mov
fnstcw
xchg
jbe
inc
shr
sahf
inc
sub
int
aam
es
push
stc
es
sbb
clc
mov
push
ljmp
ljmp
xor
out
xor
push
pop
push
push
stos
out
punpckhdq
nop
add
lock
cltd
fistps
test
adc
out
and
dec
mov
jbe
xchg
mov
adc
and
fwait
lcall
add
ljmp
xor
sub
xchg
xor
push
push
xchg
sbb
in
mov
push
xchg
mov
lods
lcall
cli
fists
or
mov
dec
lret
jne
cmpsl
call
out
pop
clc
mov
jns
orb
xor
push
out
sahf
dec
sub
add
sahf
lods
jb
jp
imul
jnp
jb
jle
cmp
or
push
adc
fistps
jb
xorl
sub
jge
mov
xor
add
push
dec
fdivl
stos
mov
ja
insb
lcall
scas
mov
xchg
xchg
add
sub
iret
popa
jecxz
ret
cmp
inc
cwtl
ret
xchg
arpl
cmp
add
movsl
rolb
bound
fiaddl
jo
sbb
bswap
pop
xchg
mov
dec
loope
jno
adc
mov
add
iret
movsl
hlt
jb
lods
push
adc
call
jge
or
jl
hlt
aaa
pop
movsb
jmp
pop
loop
add
inc
gs
xorps
push
arpl
xor
or
leave
scas
jne
xchg
and
or
cmp
icebp
iret
cmpsb
cmp
test
enter
daa
dec
xor
pusha
push
mov
push
cmp
clc
movsl
nop
insl
daa
and
stc
lahf
test
fistl
push
test
and
dec
xor
filds
sub
mov
pop
call
data16
xchg
sub
mov
loop
adc
aas
push
testb
into
xchg
jnp
mov
sti
fsubl
and
fiaddl
icebp
dec
jl
icebp
mov
mov
lcall
mov
sbb
insl
cltd
test
rclb
jg
mov
mov
xchg
sahf
mov
repnz
pop
and
sti
add
sahf
fmuls
sub
lret
and
dec
add
mov
and
out
jmp
cmp
es
adc
aam
ret
gs
outsl
int
jge
pop
lret
dec
les
movsb
xchg
std
add
shll
in
stos
lods
es
jno
andb
out
es
cli
mov
xor
les
sti
fnstsw
or
adc
mov
and
pop
in
xor
adc
pushf
imul
aam
repz
icebp
and
xchg
test
cmp
pop
js
out
xlat
sub
sub
dec
ret
pushf
xchg
loopne,pn
pop
aad
scas
leave
nop
xchg
dec
orb
leave
inc
mov
fldcw
sub
rcll
jl
jmp
out
call
xor
mov
fstpt
dec
pushf
shrb
fistpl
dec
scas
inc
sbb
inc
push
mov
aas
cmp
jb
js
dec
into
mov
shll
pop
and
insl
cwtl
lea
into
jne
dec
add
adc
jge
in
push
lock
or
mov
out
mov
imul
inc
and
pop
jl
cmpsl
dec
and
mov
or
sar
sbb
pop
ret
iret
mov
mov
xchg
dec
jg
rorl
or
pusha
push
mov
clc
lock
xchg
push
loop
ljmp
push
lods
or
test
out
cwtl
lods
mov
sub
pop
xlat
add
jns
cltd
push
lcall
pop
fildll
dec
and
enter
mov
sbb
outsb
cmc
shr
es
pop
lret
adc
sub
insb
add
add
int
xor
xor
int3
gs
dec
xor
imul
mov
push
inc
mov
push
cs
dec
in
dec
inc
inc
xchg
pop
inc
or
scas
jl
push
push
push
dec
lods
cmpsb
jae
testl
out
cmp
pop
bound
mov
in
leave
cs
or
mov
mov
xor
cmp
jp
call
mov
jnp
add
in
sbb
pusha
lock
push
xchg
push
lock
jmp
fsubl
jae
jmp
push
dec
dec
outsl
popf
sub
push
mov
mov
ret
sbb
dec
movsl
out
add
mov
and
loopne
adc
sub
ret
xor
bound
inc
mov
or
das
or
in
inc
inc
hlt
mov
adc
push
test
pop
mov
rcr
in
push
shrb
mov
repnz
outsl
push
leave
or
push
hlt
mov
sub
jbe
mov
jge
cmp
aaa
xor
cmpsl
or
mov
add
cli
icebp
gs
sbb
int
inc
mov
xor
or
stc
pop
and
dec
movsb
sub
addl
sub
xor
and
dec
sub
cmp
std
pop
jl
dec
or
mov
movsl
xchg
add
and
loop
push
sub
pop
push
out
icebp
in
jno
sti
sbb
jno
js
rclb
push
int3
ja
je
subb
inc
sub
pushf
outsl
outsb
lret
adc
sbb
mov
sbb
xlat
les
pusha
push
hlt
xor
sub
fistps
sbb
fsubl
aas
sbb
pusha
jae
adcb
cmp
xchg
or
stc
imul
cmp
cmp
inc
xchg
push
imull
in
rcr
jp
aad
push
or
xchg
into
push
jge
cmc
aas
xor
sub
xchg
loop
mov
stc
add
fs
push
add
or
lods
or
push
sub
lret
sub
fidivrs
and
ss
mov
loopne
jmp
adcb
inc
je
push
adc
push
xor
les
xchg
cs
sbb
inc
pop
mov
sub
pushf
adc
mov
sbb
cs
data16
aad
sub
jno
mov
pop
pop
inc
sbb
les
movsl
cmp
aam
add
mov
mov
das
adc
mov
pushf
imul
fisttpl
pop
inc
into
les
arpl
cmp
sti
jb
repz
enter
pop
rcl
push
dec
mov
out
stos
mov
lret
cwtl
xchg
add
mov
mov
andl
mov
mov
push
lock
insl
das
inc
push
sarb
pushf
inc
ret
aam
es
xor
daa
and
cmpsl
dec
pop
mov
loopne
push
cld
dec
xchg
mov
mov
sbb
add
fistps
mov
loop
xchg
scas
in
sub
inc
or
aam
jbe
pop
icebp
in
push
jg
cmp
addr16
xor
xchg
pop
frstor
or
popa
andb
jne
jns
daa
imull
sti
mov
xchg
in
sbb
push
or
movaps
lds
in
lcall
mov
js
addr16
xor
mov
loopne
loope
xchg
xchg
sub
fwait
stos
movsl
roll
das
pop
jbe
and
clc
test
push
int3
jne
add
and
mov
xor
pop
or
and
lret
loopne
mov
ret
xchg
push
adc
xor
ja
sbb
dec
loopne
enter
cmp
test
lds
push
jae
mov
pop
push
out
sbb
add
test
in
aaa
adc
push
push
ds
or
cmp
lds
xchg
mov
stos
es
out
cltd
jle
lret
call
pusha
mov
push
fistps
lahf
iret
jmp
cmpsl
mov
pop
push
adc
xchg
bound
push
int
scas
stos
xchg
imul
imul
or
pop
nop
cmp
fbstp
int3
iret
pop
fdiv
ret
sahf
pop
sti
jmp
inc
scas
popa
add
dec
sbb
lds
ds
push
jae
and
out
jb
mov
into
hlt
pop
in
dec
ficoms
add
mov
stos
add
leave
addb
or
loop
scas
jp
jbe
inc
or
sbb
lock
aaa
popf
cmp
add
lret
in
dec
mov
add
xor
ret
scas
xor
and
fstpt
stos
fs
movsb
mov
mov
ret
ds
aam
sbb
or
mov
daa
dec
push
mov
je
jno
jle
jl
xchg
adc
repnz
ds
stos
movsl
sahf
std
mov
lahf
ret
fstps
push
rol
test
mov
adc
test
inc
adc
pop
jge
mov
xor
loope
cltd
dec
sub
das
xchg
sub
ret
outsb
sub
dec
mov
push
sbb
xor
negl
jmp
and
daa
push
testl
dec
pop
xor
repz
outsl
push
fmull
das
sbb
sti
push
sahf
popf
bnd
out
subb
dec
mov
mov
jmp
mov
fsubrs
cmp
add
xchg
imull
lret
test
sbb
orl
or
into
add
mov
mov
or
outsl
mov
push
loop
shll
mov
fldenv
hlt
add
int3
pop
lods
hlt
dec
mov
pop
out
mov
ja
mov
xor
sar
pop
pop
or
loopne
jle
pop
sub
test
adc
mov
xchg
icebp
arpl
xorb
xlat
insb
adc
sub
inc
mov
and
xor
cmpsb
push
inc
nop
dec
xor
adc
mov
pop
les
leave
lret
xlat
mov
mov
and
xor
pop
inc
pop
adc
ficomps
sub
inc
sub
lods
inc
push
test
aas
ja
xchg
jb
mov
jnp
scas
into
ret
mov
mov
jno
or
jl
mov
div
sub
dec
fildl
push
mov
call
out
outsl
xchg
adc
and
repz
add
mov
ret
sbb
fs
insl
push
push
jno
adc
jle
mov
mov
pop
cld
jae
call
mov
and
mov
lahf
out
mov
shlb
cmpsl
sub
jbe
aam
jp
mov
lret
inc
sub
fisttpll
dec
fsts
jl
movsb
popa
xchg
adc
lods
loopne
imulb
pop
mov
xchg
xor
mov
ja
daa
in
cltd
test
mov
mov
clc
pop
xchg
shll
xchg
scas
sbb
ret
jno
pop
and
mov
outsl
lods
jmp
stos
inc
lcall
mov
into
or
out
xchg
or
pop
mov
cmpsl
fistpll
shlb
mov
sarl
dec
inc
ret
or
ja
mov
xchg
mov
jae
and
scas
daa
mov
cmp
mov
jns
ja
jg
cmp
shr
sub
hlt
into
or
jp
add
mov
inc
test
scas
jle
add
in
ret
xor
fistpll
andl
xchg
jb
cmpsb
jae
jp
push
sar
stos
popf
js
idivl
or
out
stc
mov
add
popa
imul
mov
push
movsl
cmpsb
push
mov
jle
out
ret
mov
xor
adc
arpl
ljmp
addb
add
inc
repnz
xchg
adc
sbb
in
cmpsl
pop
adc
cmp
lds
shlb
mov
dec
jae
div
mov
push
std
or
jbe
inc
xchg
dec
rcrl
lods
inc
push
aaa
pop
lret
lock
add
inc
pop
int3
shlb
cmp
or
sbb
sbb
mov
xchg
cmp
dec
movsb
inc
cmp
in
montmul
cmpsb
sar
in
add
xchg
daa
dec
pop
jae
stc
mov
jno
and
jl
stos
adc
mov
arpl
movsl
pop
ret
add
lahf
loop
popa
push
roll
test
test
inc
xor
adc
mov
sti
cld
js
shll
mov
push
loope
fdivrs
push
int
sub
scas
out
nop
repnz
adc
rol
loopne
mov
inc
orb
sbbl
jle
add
sub
jle
mov
cli
pop
imul
lcall
lcall
loope
notb
sbb
jp
sahf
inc
mov
inc
or
test
lcall
jne
inc
mov
or
xor
les
cmp
mov
mov
lret
sub
or
int
or
das
into
in
or
push
idiv
outsl
push
loop
and
fs
fstpt
sub
aas
lods
fcomi
mov
sub
cli
and
bound
xor
ret
sti
or
jl
add
mov
pop
dec
pop
pop
adc
push
push
adc
gs
bound
xchg
mov
push
sbb
mov
jb
sub
push
cmpsl
in
nop
std
fs
cmove
or
aad
push
std
nop
daa
inc
sbb
popa
iret
inc
in
xchg
sbb
dec
in
in
mov
xor
fidivrl
or
cwtl
dec
or
mov
in
hlt
xchg
adc
neg
stos
pop
jmp
mov
pop
inc
outsl
rol
aas
push
adc
jb
xchg
dec
xor
mov
shll
mov
sbb
cwtl
or
cmc
mov
or
adcl
es
mov
cld
fidivl
lret
das
add
push
mov
mov
lret
push
ret
stos
jno
es
insl
cmc
fmuls
icebp
pop
cmpsl
dec
icebp
inc
mov
mov
push
cld
sahf
addr16
gs
andb
mov
sarb
mov
sub
dec
xchg
aam
jmp
insb
push
add
lods
xchg
clc
test
pop
jno
out
jbe
popa
scas
in
lods
dec
dec
shrb
shrl
push
mov
loop
add
dec
fs
mov
push
lea
sti
nop
inc
dec
pop
sbb
xlat
xor
xchg
scas
rcrb
add
shl
int3
mov
mov
push
adc
sahf
add
push
cltd
push
fnstsw
mov
sbb
cmp
xchg
pop
daa
push
mov
jmp
pop
cltd
sbb
orl
lock
mov
rorl
xorb
add
out
fnstenv
bound
jns
sbb
in
adc
outsl
nop
repz
inc
dec
sub
out
out
mov
jp
sahf
sub
dec
cmp
jnp
inc
les
sub
lret
pusha
shll
fstps
fwait
jmp
cmp
test
push
xchg
orb
lahf
mov
dec
push
pop
stos
insb
xchg
sbb
xchg
pop
sbb
subb
jno
mov
sbb
adc
in
ret
fwait
pop
imul
shlb
pop
out
pop
sbb
cmp
push
mull
jno
mov
xchg
sub
fisubrs
and
repz
sahf
mov
push
lret
xor
hlt
sahf
push
and
jecxz
jbe
mov
jge
sub
sbb
inc
aaa
sbb
mov
add
jo
mov
lret
out
add
xor
js
xchg
scas
icebp
and
and
inc
cmp
dec
in
int
mov
mov
aad
call
es
dec
cmp
cmp
gs
in
ss
xchg
mov
ds
jle
mov
lcall
out
test
push
shlb
dec
rcl
data16
pop
leave
xchg
or
xchg
lcall
adc
mov
ds
sub
pop
pop
outsb
repz
adc
stos
popa
fs
adc
xchg
xor
push
clc
test
mov
pop
push
std
mov
movsl
sub
ret
fcmovbe
xor
or
sbb
cmp
cmc
mov
and
gs
lcall
in
or
adc
xchg
pushf
cmp
jbe
xchg
imul
call
daa
shll
or
inc
pop
cmc
das
lds
xor
sti
subl
loop
test
stc
and
fwait
push
add
jnp
lods
ret
mov
out
data16
cli
pop
out
and
push
xor
cmp
mov
mov
gs
and
pop
imul
imul
xchg
sub
xor
loope
xor
je
ljmp
mov
sti
arpl
jmp
scas
sahf
cs
dec
enter
icebp
nop
add
dec
lea
inc
add
loope
leave
pop
add
lock
fstp
in
xchg
xor
pop
pop
cmpsl
xor
pushf
insb
cmpsb
stos
fcmovnu
dec
add
inc
aaa
scas
cmc
inc
mov
pushf
aas
mov
jnp
loope
stos
dec
mov
shl
addr16
mov
aaa
std
mov
int
mov
pop
out
jne
sub
dec
mov
imul
loopne
ret
in
lock
xchg
repnz
jae
fldenv
popa
xor
es
ficoml
fcompl
dec
or
cmpsl
dec
call
cltd
icebp
gs
mov
mov
mov
inc
mov
adc
aam
loope
das
aam
lods
add
enter
fdivrl
stos
xchg
sbb
enter
mov
lods
mov
mov
out
and
leave
xchg
ret
push
cltd
cmp
cmovne
and
repnz
test
xchg
xchg
lea
dec
rcll
test
mov
jo
sbb
xchg
pop
ja
or
mov
fiadds
jno
jns
jl
sub
or
out
pop
xchg
cmpsl
mov
mov
lret
push
mov
push
lock
cmc
pop
dec
mov
imul
fisubl
adc
push
push
jne
test
out
mov
ficoms
add
into
in
jnp
cmp
push
out
sub
ljmp
jp
in
dec
mov
ljmp
repz
jle
inc
ret
in
clc
push
pusha
pop
test
adc
incb
adcl
jge
popf
mov
mov
stos
fildll
add
stos
lds
insb
mov
pop
imul
sub
hlt
cmc
test
jo
and
cmp
ffreep
mov
mov
inc
hlt
arpl
add
ja
or
sarl
inc
lock
inc
fiaddl
int3
mov
sbb
mov
sub
lds
cmp
xchg
pop
jae
test
leave
in
pushf
hlt
jmp
std
and
mov
xchg
sbb
pushf
aaa
fidivl
or
es
mulb
dec
in
push
rolb
add
rcr
push
and
mov
cmp
xor
call
cmpsb
fcompl
iret
or
or
inc
daa
dec
cmc
je
pop
int
jno
fld
jl
push
ret
cmp
xor
sbb
movsl
mov
arpl
and
cmp
ja
inc
test
sbb
xlat
sub
pop
lock
push
push
xchg
scas
loope
ret
in
subl
xchg
sarl
xchg
sub
xchg
sbb
pop
pop
and
sti
int
push
sbb
pop
mov
dec
lcall
dec
fmull
sbb
loopne
test
cmp
inc
jg
popf
sbb
arpl
pushf
and
iret
push
lods
ss
popf
dec
cmp
xor
sub
xor
mov
or
bound
stos
cmc
mulb
outsl
sub
loop
bound
stc
fdivrl
sbb
inc
xchg
xor
add
lods
test
aam
out
add
daa
sub
sti
dec
aaa
into
inc
lock
gs
sbb
sub
adc
nop
adc
adc
adc
cmp
sarl
xor
lods
xlat
sub
cwtl
sub
xchg
adc
data16
shr
adc
iret
daa
aad
or
dec
in
jne
inc
adc
inc
fnstcw
incb
dec
test
loopne
ljmp
pop
faddp
scas
dec
in
pop
pop
xchg
sub
push
mov
pop
mov
pop
iret
insb
inc
inc
mov
fidivrl
push
xchg
jb
call
cmc
je
pop
out
roll
ret
idiv
xor
data16
cwtl
orb
mov
pop
daa
add
mov
lret
lea
mov
add
enter
subb
mov
sub
mov
ret
leave
push
push
mov
insl
ret
xor
dec
push
and
cmpsl
inc
arpl
mov
cmp
ret
inc
pop
mov
stos
insb
jg
aaa
pop
push
pop
xor
cmpsl
sub
in
aam
ret
mov
push
mov
fldl
stos
jbe
pop
scas
xchg
pop
repnz
ljmp
int3
lods
and
bound
xchg
xchg
or
je
push
add
xor
test
cld
rolb
mov
int
pop
xchg
inc
jp
cmpsb
test
lahf
out
adc
and
fwait
mov
push
push
pop
or
add
mov
int
ret
xor
or
cli
mov
xchg
idivb
mov
or
pop
xorps
dec
lods
repz
xchg
dec
or
fadds
dec
xchg
pusha
dec
sbb
xor
cmp
out
xchg
dec
aaa
bound
inc
pushf
in
cmp
orl
aas
sub
in
cld
cmpsl
fisubs
jp
lock
mov
repnz
jnp
inc
stos
jle
push
daa
in
test
mov
pop
and
xchg
jne
mov
xchg
shll
jae
shlb
popf
in
dec
or
push
leave
sub
and
cmpsl
mov
lcall
push
rcll
daa
adc
mov
fwait
std
mov
pushf
ss
xlat
js
inc
fimull
sub
inc
imul
cwtl
movl
test
sbb
cmp
or
and
lds
inc
jbe
mov
xchg
mull
leave
pop
fdivs
hlt
xor
jmp
ljmp
jge
xchg
iret
sbb
cmpsl
xorl
leave
subl
xchg
fs
dec
inc
ret
push
push
mov
mov
jo
add
scas
sti
push
and
ret
andb
repz
dec
stc
sub
mov
mov
add
dec
daa
inc
xor
sub
sarb
sarl
scas
push
ds
int
and
fdivp
push
dec
lret
push
adc
xor
in
pop
mov
pop
jns
js
mov
push
sub
out
or
popf
hlt
sub
push
pop
outsb
mov
push
adc
popa
roll
addb
sbb
fdivs
add
movsl
cld
and
sbbl
or
lcall
sbb
testl
test
jl
sbbb
enter
push
mov
xor
out
loopne
push
xor
lea
das
cmp
in
inc
fdivp
push
iret
aaa
rcl
test
mov
into
lea
test
mov
cmp
aas
loop
dec
mov
fs
xchg
add
std
push
mov
dec
lods
nop
xchg
icebp
mov
mov
es
dec
cli
mov
inc
inc
cmp
popa
stos
sti
stc
cli
cmp
in
or
xchg
loopne
cwtl
or
test
adc
shrl
scas
es
jmp
repz
add
xchg
std
dec
rcrb
inc
pop
xlat
push
aaa
fisubl
shrl
cs
push
aad
jp
nop
mov
xchg
fptan
inc
sbb
jecxz
add
lea
or
or
test
cmpsb
and
roll
xorl
inc
sub
repz
jb
push
iret
je
xlat
rcll
idivb
std
xor
cmp
inc
mov
xchg
mov
sbbl
xchg
lret
cld
sbb
mov
cmp
lock
lcall
pop
popa
mov
sub
push
es
cld
insl
stos
repz
dec
add
test
adc
and
pop
inc
mov
test
jne
ds
pop
mov
dec
inc
or
mov
loop
iret
cmpsb
aaa
aam
sub
mov
orb
pop
testb
or
popa
repz
mov
ja
ror
push
out
ljmp
push
dec
lret
mov
add
out
cltd
pusha
ja
test
xor
mov
mov
add
pop
dec
dec
aad
xchg
fstpl
sbb
shl
mov
pop
int
stos
fwait
jecxz
push
add
cmpsl
popa
repz
mov
shrb
rol
xor
inc
add
mov
rcrb
xlat
mov
pop
lret
ja
jo
dec
lahf
xchg
adc
leave
adc
divb
mov
in
xorb
push
mov
fwait
jae
jbe
dec
bound
dec
shl
dec
and
int3
add
sub
loopne
repz
mov
in
imul
cmc
jnp
pop
jle
pop
mov
pusha
xchg
jb
fbstp
outsb
xchg
in
mov
je
aaa
lret
ja
adc
xor
or
stos
lds
and
lods
insb
xchg
imulb
js
scas
jecxz
notb
fcomps
and
punpcklbw
scas
inc
inc
pop
push
ss
inc
in
push
arpl
xchg
push
out
mov
pop
xchg
insb
scas
sbb
stos
movsb
pop
iret
or
faddp
ss
ror
mov
dec
sti
sbb
rcll
sub
push
cmp
push
jbe
iret
loop
loope
xor
cltd
inc
icebp
aaa
pop
xor
stc
add
clc
int3
jl
xor
push
cwtl
out
xor
mov
outsl
scas
mov
and
sub
cmp
es
inc
and
loopne
int
outsl
in
popf
mov
enter
daa
inc
repz
cmp
loope
jno
push
fidivrl
lahf
cmp
nop
ds
mov
movsl
sarl
lahf
pop
jmp
push
test
mov
jecxz
dec
mov
and
shrb
push
pop
mov
lods
adc
sub
mov
lret
outsb
sbb
sub
sarb
das
xor
aad
push
or
sbb
ds
xchg
fisubs
mov
and
sub
stos
or
and
mov
mov
push
test
test
fildll
mov
fnstcw
mov
adc
xor
rolb
icebp
fsubs
mov
stos
shrl
mov
decl
lock
ror
mov
add
outsl
out
cltd
loop
jno
stc
dec
lret
movsl
fs
pusha
add
pushw
push
mov
out
rcrb
aad
inc
cmp
das
sti
test
in
decb
sti
or
dec
push
pop
xchg
scas
pop
je
adc
add
adc
adc
je
shrb
test
mov
cmpsl
std
xlat
cmpsl
and
sub
bound
cmp
and
cs
shl
movsl
dec
lcall
lcall
sub
ljmp
out
sub
test
rcrl
test
pushf
insl
mov
scas
pop
adc
jl
inc
fildl
aas
xchg
sub
jb
sbb
setne
shl
call
inc
std
mov
xchg
cwtl
test
mov
ja
mov
leave
cs
jb
ds
imul
mov
jge
lock
das
jle
inc
mov
cwtl
mov
mov
ja
out
sub
pop
or
xchg
xchg
scas
dec
cld
movsb
mov
inc
in
mov
ljmp
mov
icebp
lock
and
cmpsb
ficoml
outsb
rclb
xchg
xchg
xchg
in
mov
push
adc
fstl
dec
clc
xchg
rcr
xchg
xlat
xchg
push
ljmp
mov
stos
shrl
xchg
xchg
aam
push
sub
movsl
add
je
xchg
das
jns
int
mov
xchg
cmp
add
in
in
sbb
fildl
dec
mov
inc
fwait
adc
int
dec
mov
movsl
lcall
inc
xor
cmp
or
outsb
dec
xchg
xchg
in
mov
call
je
test
and
dec
xchg
out
fs
mov
ljmp
mov
jo
push
in
out
push
aaa
bound
imulb
subl
fsubrl
push
movsl
and
jp
adc
mov
add
jle
push
mov
pusha
sub
mov
movsl
jmp
imul
adcl
and
popf
mov
inc
push
dec
stos
cmp
cmp
lock
inc
insb
repnz
sbb
popf
inc
mov
push
leave
adc
sbb
pop
es
ret
insl
pop
inc
xchg
mov
lock
inc
push
xor
push
insl
xchg
neg
sbb
jne
ret
in
fistps
stos
xor
data16
add
paddsb
call
hlt
imul
enter
sti
out
hlt
lret
push
mov
xchg
jbe
adc
jge
lea
sbb
aaa
pop
pop
or
lds
addr16
add
push
jnp
outsb
xor
in
add
lods
mov
cmp
lret
stc
popa
mov
scas
xchg
fldenv
test
sub
inc
cmp
jno
ja
jl
aad
or
inc
ds
movsl
enter
hlt
mov
jg
lock
test
jl
or
sbb
dec
jb
fwait
pop
gs
js
mov
shrb
dec
mov
sub
dec
push
sub
sbb
test
xchg
insb
ret
xchg
adc
xor
add
fnsave
push
or
mov
add
pop
sub
fldl2t
push
jns
or
dec
sahf
push
sub
sahf
outsl
bound
orb
jg
sar
adc
mov
bound
adc
cmp
bound
mul
out
lret
cmpsb
roll
nop
mov
mov
into
push
cld
adc
dec
mov
adc
mov
loop
mov
fs
in
add
mov
xchg
lods
pop
into
rorb
out
cli
and
jae
lods
jecxz
cmp
jo
sti
push
into
aad
sub
gs
pop
in
cli
adc
dec
xor
xchg
jns
insl
cmp
cmp
sbb
loop
fcmovbe
out
call
mov
cmpsl
inc
xor
adc
add
clc
jp
aad
mov
nop
outsb
int3
dec
dec
or
sbb
pusha
add
cmp
sub
in
jmp
push
shr
inc
sbb
sub
nop
pop
jae
repnz
fwait
pushf
sbb
fistl
and
lock
not
fistpll
xor
jb
add
dec
xchg
je
push
sbb
das
icebp
jmp
std
pop
fcmovb
cwtl
mov
cli
mov
test
mov
xchg
loopne
mov
insb
mov
mov
and
xchg
js
das
pop
bound
jbe
mov
and
decl
jbe
test
adc
insl
js
in
testl
mov
shll
jne
iret
mov
adc
adc
mov
lea
rcrb
push
sub
ljmp
add
push
aam
mov
js
movsl
clc
rolb
xchg
push
sub
ljmp
jns
bound
mov
add
mov
test
fisubs
push
sarl
cltd
into
mov
fdivrs
xchg
xchg
or
dec
pop
dec
or
ds
xchg
sbb
mov
pop
and
out
fwait
inc
cmpsl
push
inc
clc
and
cmp
clc
jmp
jne
test
xor
jmp
xchg
jecxz
stos
mov
test
mov
inc
add
ja
cld
pusha
dec
test
aad
dec
mov
mov
dec
lds
repnz
inc
fsubr
xor
jbe
cmp
jns
inc
int3
in
insl
incl
rol
shrb
cmp
movsb
or
xor
mov
scas
std
jmp
in
adc
pusha
enter
je
setb
push
mov
xchg
xor
inc
jae
mov
push
lock
jmp
push
xchg
stos
stos
jnp
and
es
pop
push
mov
scas
test
dec
lds
fmull
push
iret
mov
cld
pop
pop
jl
incb
arpl
dec
or
mov
push
or
int3
ljmp
outsb
add
pop
sub
lcall
add
mov
lock
push
hlt
adc
push
insl
jbe
int
jge
loopne
sbb
inc
fidivs
add
or
sbb
int3
push
cltd
and
xchg
negb
sbb
inc
jno
cmp
icebp
and
jl
cmpsb
roll
pop
in
imul
daa
inc
add
jno
hlt
mov
cmp
adc
movsl
iret
ret
push
and
or
push
ret
and
arpl
and
xor
cli
sarl
out
sub
push
cwtl
add
sub
sub
loope
sub
into
adc
ss
mov
lock
filds
push
addb
sub
fcoms
pop
push
or
sub
nop
push
shrb
jl
mov
lcall
adc
clc
push
hlt
sahf
adc
push
test
xchg
dec
aam
mov
ret
aas
push
movsb
mov
or
adc
fs
push
ds
cmp
sbb
mov
lret
pop
rcll
inc
or
aaa
mov
cmc
adc
inc
outsl
movsb
das
ss
push
jge
mov
dec
lret
fadds
lods
inc
inc
outsl
mov
imul
push
inc
jmp
subl
ss
sti
push
fsubp
decb
mov
icebp
or
loopne
mov
lods
adc
aaa
call
adc
fs
cmp
lods
xchg
inc
add
sbb
sbb
xchg
mov
gs
mov
adc
adc
add
cs
sub
aad
es
nop
dec
push
jae
push
jmp
fsts
ret
cwtl
jecxz
ss
lea
fcmovnb
stos
sbb
pop
sbb
pushf
ret
fsubl
les
roll
dec
xchg
jp
aas
rcl
popa
jb
push
mov
std
mov
mov
jle
aas
testb
std
std
add
ja
mov
call
sbbl
cmc
out
dec
jle
mov
sub
lock
in
das
cmp
mulb
push
jg
and
cmp
es
dec
xchg
insl
pop
mov
bnd
cmpsl
inc
ja
mov
cwtl
add
cld
mov
adc
mov
push
movsb
test
lods
testb
or
out
sub
or
xchg
adc
fstpl
inc
hlt
xchg
push
inc
es
cld
lods
int
sub
adc
xchg
and
mov
pop
add
xchg
test
add
mov
or
push
sub
jmp
sbbl
loope
sar
in
pop
into
sbb
scas
push
in
icebp
add
clc
frstor
xchg
jg
xor
popf
dec
or
sub
out
mov
xchg
mov
xchg
inc
mov
sti
mov
mov
js
xchg
inc
jecxz
xchg
or
dec
xchg
test
out
jne
outsb
stos
mov
mov
out
adc
insl
into
mov
jns
cmp
leave
lods
add
push
aad
sub
rcl
insl
addr16
jp
add
mov
dec
out
jnp
outsl
cmpsl
jle
and
in
push
loop
arpl
push
fists
gs
rcll
adc
dec
push
push
sub
les
cmp
mov
push
cwtl
mov
imul
scas
or
mov
adc
pop
mov
call
inc
popa
inc
push
cli
imul
or
outsb
add
iret
push
imul
fidivrl
and
sbb
push
pop
pop
cmp
sbb
jae
mov
inc
call
leave
cmp
sbb
jge
jbe
sti
cltd
jge
push
mov
aaa
xchg
das
sub
xchg
call
add
mov
cmp
in
push
inc
pusha
nop
xor
lcall
and
popa
mov
movsb
pmullw
inc
int
lods
cmpsb
push
repz
push
repz
out
addr16
cmp
xor
xchg
adc
test
push
fistpll
leave
xor
fstpl
lahf
mov
add
push
adc
jmp
mov
adc
mov
fstpt
rorb
xchg
loope
sbbb
xchg
mov
outsb
inc
je
adc
int
lret
dec
cmpsl
sbb
mov
gs
and
mov
movzwl
int
dec
gs
sbb
sub
negl
daa
mov
fsubl
fs
mov
mov
addb
mov
mov
ljmp
pop
arpl
ss
mov
and
xor
lcall
lret
repz
mov
xchg
daa
into
sbb
shll
push
mov
outsl
subl
stc
outsl
mov
adc
lds
adc
xchg
push
aaa
mov
jle
and
sbb
cmp
into
or
mov
or
jno
mov
clc
sti
pop
loopne
repz
and
jl
stos
mov
push
adc
mov
repz
xchg
or
sbb
pop
fwait
je
fs
add
fadd
dec
mov
jge
jno
repnz
mov
daa
and
out
adc
das
xor
into
push
in
les
push
jne
dec
jp
out
pop
in
icebp
push
ja
cmc
xchg
out
sub
stos
pop
frndint
xchg
sbb
xor
pop
fs
inc
popa
iret
mov
aas
outsl
sub
dec
je
pop
je
and
testb
std
test
add
mov
aaa
mov
xorl
push
mov
aas
jg
stos
lcall
sbb
mov
mov
cwtl
ret
xchg
jne
es
insl
insl
inc
xlat
mov
cmp
or
outsl
mov
cld
lret
test
mov
pop
jo
mov
lret
popl
incl
mov
aam
and
mov
and
sub
ffree
mov
fstl
adc
repz
dec
lea
stos
mov
js
jbe
xor
insb
ja
push
mov
clc
pusha
add
xor
out
fwait
adc
out
mov
fs
sub
into
test
ret
xchg
add
out
jae
push
cmp
pop
jns
push
fwait
lahf
sbb
push
xchg
adc
adc
int3
pushl
sbb
stc
repz
mov
cmp
pop
xchg
cmpl
jae
popa
pop
mov
in
les
xlat
inc
jp
inc
or
mov
mov
dec
mov
call
out
repnz
bound
loopne
dec
aam
in
fisubs
sbbl
out
pop
cmpsb
sub
int3
adc
data16
mov
mov
or
stc
xlat
in
cli
adc
hlt
rcr
mov
cltd
jmp
lret
jae
pop
leave
push
jmp
or
jne
add
add
ljmp
cs
insb
xor
scas
outsl
fsubs
xchg
dec
dec
iret
jbe
adc
sti
test
ljmp
arpl
adc
mov
mov
popf
inc
ljmp
xchg
enter
les
scas
fimuls
stos
lds
lods
mov
xchg
push
pop
hlt
stos
or
jbe
pushf
data16
xor
sbb
loopne
or
sub
int3
sub
push
and
mov
jo
in
xor
or
and
cwtl
cmp
and
movsb
lcall
cmpsb
fsts
in
cmp
enter
daa
inc
pop
fistpll
xchg
jp
jno
pop
push
jl
cmp
cmp
and
movsl
fstpl
and
out
nop
lahf
fidivrl
dec
test
fstpl
not
mov
les
js
mov
mul
pop
loope
sub
mov
sub
or
add
test
jg
scas
dec
push
sbb
aas
push
add
cmpsl
and
inc
ds
adc
int
sub
stos
sbb
lcall
jo
dec
jp
sbb
js
test
jg
jg
pop
dec
mov
jnp
mov
push
or
test
inc
fidivrl
xchg
popa
test
lret
cmpsb
rol
jbe
add
or
jbe
mov
inc
mov
xor
stos
jmp
es
pop
fs
psubusw
mov
cmpsb
or
dec
in
lahf
out
jo
cli
mov
loope
cmp
mov
cmp
xchg
jg
call
loopne
cmp
adc
lahf
imul
add
repz
aas
xchg
int3
rcrw
xchg
mov
inc
sub
stos
mov
call
jle
and
aad
mov
nop
jmp
lock
test
pusha
les
popf
and
add
bnd
lea
push
call
test
xchg
xor
je
arpl
push
pop
mov
mov
inc
inc
cld
inc
aas
push
xchg
jb
lock
dec
jmp
cli
je
test
rcrl
div
mov
mov
cwtl
loop
daa
mov
sub
mov
movsb
pop
dec
push
in
jb
daa
pop
dec
mov
insb
add
mov
in
mov
je
bound
cmpsl
out
ret
and
xchg
insl
sub
cwtl
andb
fsubrs
cld
mulb
dec
mov
popa
mov
mov
rcl
sub
sub
das
jo
outsb
pop
inc
push
sbb
add
lcall
push
shll
jle
lods
mov
imul
fsts
jne
xchg
adc
outsl
add
js
test
xchg
xchg
sub
xchg
push
gs
jo
xchg
pop
in
cltd
mov
shrl
add
into
sbb
push
sub
push
push
add
ljmp
mov
cwtl
or
pushf
shll
pop
pop
xchg
shl
das
mov
adc
pop
jno
jne
subl
inc
adc
jle
jecxz
add
pop
sub
mov
rcll
shll
int3
hlt
imul
add
fsub
bound
stos
out
push
pop
sub
mov
sbb
mov
adc
push
jnp
sahf
mov
in
add
pusha
cltd
push
sbb
xchg
addr16
repz
xchg
pusha
cmpsl
repnz
scas
or
popf
xlat
sti
out
mov
test
inc
pop
add
dec
call
push
imul
scas
shrb
push
in
sub
insl
push
iret
aad
out
ret
mov
and
arpl
aas
lods
inc
je
and
cs
xchg
inc
imul
fcomps
cmp
mov
push
jne
sub
aam
push
or
bnd
icebp
stos
hlt
notb
push
jbe
mov
jge
xor
aaa
adc
dec
add
call
inc
dec
fisttps
mov
jo
mov
scas
jmp
fdivp
cmp
mov
inc
jmp
in
cmpsb
pop
sub
in
and
enter
daa
inc
je
cmp
loop
jno
inc
mov
cmp
dec
movsl
ds
movsl
in
out
and
rcrl
cmp
ljmp
test
das
xor
fs
jle
xchg
pop
add
scas
pop
repz
push
push
mov
mov
fstps
iret
outsb
or
pop
rolb
repnz
mov
and
pminub
jg
dec
and
or
int
jmp
sub
ficomps
pop
sub
lcall
movsl
fdivr
shl
out
daa
sahf
sti
mov
xchg
cmpb
mov
mov
cs
sub
sarl
mov
loop
xlat
dec
mov
mov
mov
or
mov
inc
cmc
addr16
outsl
inc
mov
repz
sub
add
pop
sbb
push
sub
inc
jbe
out
cmpsb
mov
lock
pop
cmp
jl
sti
adc
or
push
push
push
loopne
cwtl
jae
popa
lods
xor
push
push
mov
adc
rorl
repz
mov
cmp
cmp
xor
mov
mov
in
push
addr16
sarb
ret
cs
cmp
nop
fisubrl
dec
test
inc
cwtl
push
inc
fnstcw
add
push
sub
lea
mov
push
pop
aas
loopne
adc
jmp
pushf
les
fistl
inc
pop
inc
je
inc
outsl
cli
and
fistl
adc
fidivl
mov
imul
std
testl
repnz
sub
or
push
mov
pushf
or
std
mov
jle
ret
mov
imul
ret
mov
es
sahf
aaa
insl
adc
rorl
xchg
cmpsl
inc
xor
pop
lcall
and
xchg
push
mov
fcmovnbe
movsl
mov
cltd
cmpsb
jbe
lea
insb
push
loopne
lret
fstl
stc
clc
mov
mov
ljmp
xchg
jne
out
cmp
daa
xchg
cli
xlat
or
inc
jbe
mov
fs
test
inc
mov
push
sbb
test
mov
xchg
adc
roll
push
add
popa
fwait
std
loope
push
int
xor
dec
push
sub
je
xor
dec
imul
dec
or
iret
sub
mov
jge
mov
sub
pushl
inc
dec
dec
push
xor
or
push
mov
dec
push
test
xor
lret
rclb
sub
mov
lahf
pop
xorl
out
mov
pushf
or
adc
jp
mov
mov
sbb
int3
in
xchg
jnp
pop
clc
jle
jg
in
jno
pusha
xor
mov
xchg
cmp
addr16
pusha
pop
cmp
cmp
popf
loope
mov
orb
ja
lea
arpl
shrl
mov
scas
xor
loopne
adc
int
xor
inc
ret
popf
pop
pop
sbb
daa
mov
jno
ja
inc
or
test
sbb
jbe
pop
sbb
mov
imul
rcl
lds
jb
mov
cmp
or
or
hlt
inc
jns
push
adc
jbe
cmp
jge
adc
sbb
sub
aaa
ror
and
add
int3
jg
dec
dec
lahf
push
ljmp
jo
cmp
in
mov
cmp
ja
inc
jp
sub
in
pop
bound
loopne
je
inc
dec
jns
idiv
scas
jno
push
mov
mov
aaa
cmp
sarb
xor
movsl
jmp
fisubs
sti
xor
sbb
shrl
jae
or
inc
pop
pop
pop
sub
daa
js
and
pop
xor
jo
mov
cmp
jg
sub
outsb
outsb
sbb
adc
pop
enter
icebp
add
sbbl
mov
xor
adc
movl
sub
inc
sub
xchg
pop
test
xchg
sub
push
fsubl
mov
sahf
cmc
cmp
lock
dec
cmpsb
mov
add
mov
out
mov
bound
daa
cmp
or
mull
add
shl
popa
mov
mov
mov
into
ret
cmc
cs
xor
jmp
loop
jle
stc
xchg
pop
icebp
fs
or
data16
lods
loope
mov
pop
pusha
xchg
cli
and
hlt
xor
call
inc
sti
ret
shlb
loopne
or
pop
adcb
imul
pop
stos
xchg
push
pushf
rcrb
insl
aad
and
and
mov
ret
out
mov
nop
mov
or
push
fnstenv
mov
jecxz
ficomps
xabort
pop
lea
mov
call
cmpsl
cs
repnz
and
lret
and
fildl
imul
jge
lret
aas
dec
dec
popf
jb
xchg
testb
outsb
je
dec
push
sarl
jmp
std
sahf
cltd
sbb
mov
fwait
jge
addr16
mov
dec
hlt
add
fstpt
add
pop
pop
icebp
das
mov
and
les
data16
inc
jae
mov
sbb
dec
fimuls
xchg
cmpsl
aas
lret
call
icebp
hlt
mov
outsb
mov
ret
pop
xor
dec
lock
sub
sarb
cmpsb
sub
dec
pop
mov
mov
dec
fnstsw
inc
jbe
negl
dec
xchg
push
fcoml
ljmp
jle
jns
into
stos
pop
ljmp
inc
sahf
out
push
dec
mov
fs
jmp
cltd
loope
cmp
xchg
sbb
sbb
outsl
dec
pusha
pop
cs
xchg
xchg
sub
cmpsl
rcll
daa
pop
jp
fcompl
jo
add
fs
cmp
inc
xor
pushf
or
popf
xor
dec
outsb
xchg
outsb
js
mov
pop
pop
mov
out
xor
pop
jnp
inc
ret
jbe
aas
add
or
clc
push
mov
mov
jne
loop
mov
inc
xchg
out
dec
add
pop
ss
jbe
in
pop
addl
xchg
sub
mov
dec
fnstsw
pop
push
mov
inc
repz
sbb
nop
jle
xor
in
inc
adc
fisttps
in
xchg
or
push
loope
sub
push
xor
or
mov
rcrl
stos
ljmp
insb
je
or
scas
cwtl
gs
push
jae
iret
adc
mov
test
push
jp
xor
ret
inc
jp
cs
and
roll
and
int3
xchg
int
cmp
mov
fidivrs
inc
add
cmp
rorb
cmp
fdivrl
adc
scas
hlt
mov
fidivs
cmp
jge
ftst
sbb
or
or
cmp
inc
rcl
int3
jmp
inc
test
int
and
push
add
scas
cmpsl
add
pop
sub
cmp
inc
out
cmp
sbb
out
dec
inc
enter
daa
aas
stos
and
sub
mov
jl
pop
pop
cmp
in
adc
movsl
repnz
rcrl
loop
hlt
test
les
pop
xor
add
mov
js
sarl
leave
push
mov
loope
ljmp
cmp
sub
outsb
outsb
rcll
std
sarb
idivb
fnstenv
incl
incl
sbb
lret
int
sbb
jecxz
das
pop
daa
aad
lcall
dec
fmull
sbbl
jns
sahf
inc
and
test
inc
xchg
arpl
mov
push
xlat
mov
cmp
adc
cmp
cmp
les
cmp
mov
nop
aas
mov
pop
sub
stc
mov
adc
cmc
and
mov
push
loop
or
stc
dec
xor
lea
dec
ljmp
enter
cmp
out
sahf
scas
cli
push
das
icebp
xor
jnp
sti
jno
dec
std
and
gs
jecxz
pushf
leave
pop
lahf
jns
adc
dec
insl
imul
push
sub
mov
xor
xlat
pusha
mov
sub
gs
sub
jmp
or
cs
frstor
nop
nop
xor
inc
mov
lods
xchg
aaa
pop
lahf
jecxz
xor
sti
pop
clc
lea
xor
es
or
xchg
cli
adc
fstpl
repnz
pop
mov
inc
jge
in
inc
cwtl
aad
aas
jmp
xchg
jb
mov
dec
push
jmp
rorl
mov
notb
cmp
inc
rclb
adc
mov
sbb
mov
mov
dec
fisttps
lret
je
fisttps
cmp
das
xchg
mov
mov
cltd
adc
jo
rorb
es
mov
loop
sub
and
ljmp
lret
out
cld
ja
fnstsw
out
sbb
mov
inc
sbb
rorb
loop
xchg
cwtl
aam
push
push
mov
stos
push
push
or
frstor
mov
xor
sahf
xchg
nop
mov
ljmp
insb
lods
in
adc
add
add
daa
xor
psubq
adc
sbb
sub
movsl
dec
aam
test
icebp
push
xchg
and
mov
jl
scas
add
fwait
pop
mov
call
add
xlat
pushl
jb
or
mov
xchg
mov
mov
mov
mov
mov
inc
in
or
mov
mov
ficoms
jne
clc
loop
ljmp
bound
lahf
in
mov
adcl
sub
mov
dec
mov
mov
mov
lea
jnp
and
and
pop
ja
pusha
push
loop
cs
push
xchg
loopne
mov
xchg
testb
scas
sub
push
divl
popf
dec
pop
dec
mov
add
pop
mov
xchg
out
mov
clc
imul
sbb
mov
mov
iret
repnz
ret
lret
das
aam
cmp
push
xchg
inc
jge
add
lahf
mov
out
jno
mov
xchg
and
loopne
jo
test
mov
mov
dec
shlb
jp
loop
dec
leave
mov
inc
hlt
xlat
cmp
push
mov
sub
jge
test
sbb
xchg
aaa
push
lret
sbb
push
insb
cmpsl
add
sti
xchg
int3
aam
in
dec
sub
cmpsl
push
mov
add
jo
ficomps
and
xchg
push
movsb
xor
inc
cwtl
ja
cmpsb
in
nop
in
aad
into
enter
daa
ds
cmp
jb
mov
xor
sarb
arpl
js
push
movsl
stc
cmp
xor
icebp
lahf
push
shl
push
mov
xchg
test
or
mov
ret
mov
daa
xchg
pop
jbe
aaa
js
repz
push
cmp
loope
lds
sbb
add
inc
imul
sbbl
add
sub
je
mov
push
add
mul
and
jne
push
push
int
xchg
sub
mov
lcall
pushf
fdivr
mov
sbb
sub
ret
orb
jg
sahf
jg
push
pop
dec
mov
insl
sbb
pop
bnd
and
jg
test
lret
sbb
and
mov
lock
into
mov
imul
imul
outsl
fisubrs
loop
int
stc
add
out
fdivrl
adc
xor
pusha
jmp
mov
cwtl
xor
mov
hlt
and
sbb
mov
mov
mov
mov
xor
fsubs
cmp
rcl
inc
lahf
sub
dec
mov
xchg
jb
jmp
push
and
lods
inc
js
fisttpll
daa
nop
imul
inc
rorl
dec
les
dec
jecxz
lret
mov
ret
dec
es
movsl
dec
and
sti
enter
jno
lds
cltd
fcmovnu
push
sbb
inc
add
sub
lock
aas
mov
popf
jb
push
out
xor
jge
pop
rcrl
fdiv
cwtl
int
std
in
out
insb
cwtl
into
in
popf
mov
sbb
bound
lret
lret
jecxz
cmp
mov
outsl
das
jbe
andb
mov
mov
cmpsl
add
insl
leave
mov
leave
cmpsl
cmp
sbb
mov
js
mov
or
bound
jle
pop
leavew
and
sub
mov
out
mov
mov
clc
push
sub
fisttpll
test
push
mov
mov
stos
cmp
loopne
imul
push
dec
push
add
mov
cltd
dec
add
mov
pop
push
out
dec
cs
test
out
xchg
xchg
adc
sbb
roll
mov
mov
mov
xchg
add
lcall
xor
rcr
or
fidivl
mov
xchg
or
movsb
mov
jp
mov
pop
es
ja
and
dec
sub
and
insl
jmp
or
dec
sahf
mov
scas
jmp
mov
dec
out
dec
jbe
bound
jns
imul
mov
andl
jne
addr16
sub
mov
bound
rclb
mov
cld
in
mov
js
sahf
jle
outsl
repnz
adc
add
mov
test
fwait
push
xchg
shll
jae
xchg
mov
in
sarb
inc
subl
cmp
insb
dec
jecxz
imul
cmp
adc
mov
dec
ret
push
std
mov
inc
dec
je
arpl
cmp
fisubrs
insl
mov
gs
mov
xor
sbb
lret
jbe
in
jle
je
inc
sub
mov
xor
daa
and
and
arpl
cmpsl
pop
jbe
mov
jge
adc
aaa
movups
or
push
add
inc
int3
mov
hlt
push
xchg
or
mov
mov
sub
and
or
lods
mov
push
push
jp
daa
cmp
mov
jns
daa
cmp
mov
mov
jl
inc
or
ds
jmp
movsl
add
data16
jne
gs
mov
stc
lods
test
xchg
clc
and
mov
push
js
mov
pop
push
je
loope
fadds
sub
daa
sub
dec
je
xchg
pop
sbb
shr
add
cmp
push
jmp
cmp
fstl
push
and
nop
sub
test
lcall
sbb
mov
push
mov
andb
adc
int
mov
sbb
mov
int3
lods
adc
cmp
sub
cs
cmp
mov
lret
adc
mov
out
into
imul
cmc
adcl
xor
dec
outsl
mov
ret
mov
fs
cmp
add
sbb
movsl
aad
xchg
dec
mov
sbb
cmp
xor
cmp
leave
gs
iret
mov
aas
gs
inc
loopne
shlb
fstl
adc
fs
adc
push
jmp
xchg
fwait
shlb
cmp
pop
ret
daa
icebp
mov
dec
fldpi
mov
fildll
adc
adc
add
dec
inc
in
arpl
sbb
nop
jecxz
cmpsb
rol
mov
lea
test
and
dec
pop
or
fcoms
daa
lods
hlt
pushf
jo
pop
fisttpl
add
mov
mov
pop
mov
jb
lea
dec
ds
shlb
shll
in
ss
xchg
out
rcrb
out
mov
faddl
mov
inc
lret
push
mov
or
imul
xor
push
sar
mov
xchg
sti
mov
sub
insl
mov
sbb
iret
or
mov
jns
addr16
int
and
sub
sub
mov
test
shl
or
sub
rcl
gs
mov
mov
fnsave
xchg
lods
xchg
push
jbe
ljmp
out
mov
loope
out
enter
push
dec
mov
ud1
add
stos
dec
cltd
xchg
test
adc
mov
and
jp
xchg
ja
test
subb
fs
mov
sbb
ficomps
pusha
fwait
mov
mov
xor
mov
dec
push
push
xlat
xor
or
lds
int3
mov
mov
sbb
lcall
stos
push
inc
add
adc
out
dec
frstor
mov
cld
popf
out
sub
adc
xor
xchg
faddl
xorl
mov
or
fisubrl
jp
jnp
mov
nop
sub
sti
bnd
cld
in
or
stos
fildll
xchg
xchg
mov
jae
sub
push
jge
mov
mov
jle
pop
stos
inc
fistps
mov
and
add
push
scas
roll
adc
rol
insl
std
push
pop
xor
adc
arpl
push
or
xchg
jecxz
inc
in
call
inc
sbb
jg
pop
movsl
sarb
and
daa
rcr
inc
mov
mov
leave
jns
mov
push
dec
icebp
dec
jbe
out
jge
test
aaa
into
fdiv
or
ljmp
stos
inc
fmuls
ficompl
jbe
xor
pop
iret
stos
scas
inc
cmpsl
and
movsl
test
arpl
movsb
fdivrl
inc
cmpsb
jmp
in
mov
addb
ret
ja
jno
jmp
jl
icebp
hlt
cmp
popf
out
mov
test
and
loopne
xchg
xor
push
pop
mov
test
lahf
pop
jnp
popa
stos
inc
dec
ret
dec
pop
les
loop
cs
add
in
sbb
sub
jmp
outsb
cli
test
insb
ror
test
adcb
repz
jns
add
pop
imul
and
test
sub
pop
movsb
xor
xor
popa
push
push
mov
sbb
rolb
sahf
sub
test
mov
push
jg
add
std
test
imul
es
adc
adc
inc
outsb
cmp
cmc
add
lret
inc
rorl
mov
mov
cmc
cmc
dec
daa
and
into
inc
icebp
outsl
pushf
sahf
pop
loop
in
add
jo
or
in
cli
and
data16
cld
lods
jge
inc
mov
aam
out
jo
cli
out
pop
test
cmp
mov
pop
jg
sub
sbbb
sbb
jo
imul
ret
mov
or
cs
cmp
icebp
pop
xlat
sbb
add
mov
push
push
jmp
jp
jae,pn
inc
aad
and
nop
and
dec
pusha
inc
and
mov
nop
les
sub
mov
movb
ret
call
mov
out
adc
fcomps
pop
mov
enter
cmp
inc
jmp
push
mov
dec
pusha
dec
mov
xorb
shl
das
add
push
orb
inc
mov
cmp
aad
insl
dec
mov
call
mov
sbb
jp
les
mov
xor
shll
mov
aad
ret
jge
bound
lods
xor
xchg
out
test
ficomps
mov
push
xchg
clc
fcomps
or
scas
and
mov
es
movsb
das
in
les
sub
aam
insb
scas
mov
pop
ljmp
jo
clc
jecxz
leave
xchg
dec
mov
ljmp
push
lods
and
data16
out
sub
in
pop
lahf
add
shr
add
push
cltd
mov
hlt
push
mov
and
sahf
outsl
test
movsl
fadds
lret
push
jmp
pop
es
ficomps
cld
aas
mov
shr
iret
decl
das
into
or
pop
sbb
packuswb
mov
sarl
dec
ja
cmc
sub
or
fwait
bound
mov
sbb
mov
cs
adc
or
insl
jns
icebp
ret
rcrb
insl
mov
pop
or
data16
jp
out
push
mov
dec
sarl
mov
js
in
outsb
push
pusha
cmp
fisttps
sub
jmp
push
sbb
push
push
inc
jne
popf
sarl
mov
xchg
fsubl
cmp
cmp
imul
aas
scas
and
ret
push
movsb
mov
adc
iret
psrad
addb
imul
arpl
rorb
xchg
or
adc
mov
ficoml
adc
xchg
sub
sbb
or
pop
aam
adc
les
or
mov
ror
sbb
push
sahf
jg
jbe
mov
jge
fcoml
lea
sbb
mov
out
mov
jns
rorb
pop
out
xor
jb
adc
imul
cmp
pusha
push
movsb
shll
mov
cmpsb
outsb
cmpsl
ds
mov
out
pop
data16
cmp
cmp
pop
cld
jno
lods
mov
cmp
pop
clc
loope,pt
movsb
movsl
push
mov
setg
xor
out
aas
push
push
inc
xor
mov
pop
jmp
fstpt
add
insl
add
loope
push
sub
data16
rsqrtps
pop
out
jmp
shlb
xor
andb
jne
shll
push
daa
fbstp
sub
sub
iret
flds
and
cld
push
ffreep
fdivr
int3
bndstx
into
dec
sahf
int
xor
sbbb
jg
cmp
mov
addr16
outsb
sahf
add
in
shll
mov
sbb
pop
and
div
pop
std
mov
shl
test
jo
mov
mov
cmp
xor
test
adc
outsl
jnp
loop,pn
dec
aaa
stc
daa
stc
and
ljmp
add
lods
fs
sahf
mov
mov
sbb
jo
adc
cmp
addr16
sub
pop
sbb
movsb
mov
pop
sbb
adc
loopne
test
les
fiaddl
and
outsl
cmp
add
sub
shlb
icebp
xor
cs
mov
nop
cld
mov
dec
mov
mov
in
les
mov
movb
orl
or
pop
jno
js
aad
mov
or
inc
cltd
fldt
add
js
addr16
jb
cmp
je
jae
roll
outsb
mulb
pop
std
loope
dec
cwtl
incl
mov
insb
cmp
or
insb
int3
cmp
mov
fmull
jecxz
pusha
lock
cmp
das
adc
dec
mov
jne
add
push
xor
insl
jle
and
cmpsl
cmp
ljmp
xor
jb
sbb
dec
sub
ret
call
test
arpl
dec
mov
ja
push
jb
pop
cmc
mov
xchg
mov
ljmp
jne
nop
lcall
mov
xchg
movsb
pop
loopne
xchg
lds
add
fldcw
cltd
hlt
popa
test
imul
arpl
inc
xchg
cmp
jle
push
rorl
pop
cmc
pop
sarl
push
fwait
pop
xchg
push
push
lahf
mov
add
jmp
adc
jbe,pn
xor
sub
xor
faddl
push
mov
stos
add
ja
movsl
add
pop
push
inc
xor
inc
or
cmc
lds
mov
cmp
push
xor
ljmp
jns
stos
push
in
ret
pop
adc
pop
out
les
sub
movsb
cs
addr16
mov
and
mov
test
call
in
xor
mov
bound
xorb
jmp
mov
popf
call
push
mov
stos
sub
inc
and
out
test
gs
inc
scas
xchg
and
notl
iret
outsb
and
ret
mov
inc
imul
jb
mov
jne
fucomp
fwait
push
loop
pop
fcmove
out
mov
sbb
addr16
add
push
fisubs
xor
fdiv
rclb
lds
cs
leave
addr16
hlt
add
arpl
mul
jge
push
ljmp
idivb
and
xchg
add
push
dec
int3
xorb
call
inc
daa
xor
int
movsb
scas
add
adc
cmp
inc
mov
inc
aam
nop
cmpsb
icebp
cmpsl
mov
enter
daa
cmp
lods
cmp
insb
daa
jno
xchg
outsl
jl
int
cmp
shll
popf
fsubl
push
add
in
fimuls
xor
fmull
pop
adc
dec
pop
lods
add
loope
ljmp
jl
outsb
shrb
adc
subb
cmpsb
cmc
lea
nop
add
and
inc
push
sub
sti
int
and
addb
mov
lcall
or
cmpsb
filds
jo
inc
test
lods
cmpb
jg
je
mov
jge
mov
notb
mov
cmp
and
ss
mov
lcall
mov
sbb
hlt
lret
push
sarl
mov
into
or
pop
into
adc
fdivp
fdivs
test
dec
loop
faddl
fs
inc
mov
sbb
lods
dec
scas
decl
sbb
mov
cmp
hlt
pop
sti
fcoml
inc
gs
sbb
loopne
push
rcrl
ds
adc
je
imul
repz
add
jl
aam
imul
jecxz
int3
mov
inc
les
jmp
out
and
cmp
aad
push
nop
xlat
add
dec
push
adc
mov
add
jecxz
shl
or
call
mov
mov
sbbb
pop
mov
inc
pop
and
loopne
pop
pop
loop
mov
ja
rcll
pop
std
mov
cwtl
mov
push
dec
mov
pop
and
jbe
push
lret
lahf
lea
sub
or
das
repnz
mov
sub
imul
lcall
gs
dec
rolb
cmp
mov
push
paddb
pusha
mov
xchg
sbb
mov
loop
push
shrb
cmp
aam
jbe
mov
shll
frstor
cmp
daa
ljmp
mov
stos
cmc
mov
adc
outsb
pushf
cltd
pop
test
inc
ficompl
push
mov
push
xchg
rcll
lods
adc
sbb
sub
shll
xor
je
inc
mov
push
inc
and
add
push
cmp
dec
xor
or
cmc
mov
dec
pushf
sbb
xchg
and
push
call
mov
jnp
xchg
dec
mul
jge
leave
imul
mov
and
movsl
jne
inc
jmp
mov
sub
leave
cmc
mov
jns
push
jno
mov
leave
xor
jae
and
lahf
mov
cltd
or
outsl
icebp
xorb
dec
pop
jnp
cld
imul
pop
jae
jno
xor
leave
popf
out
jmp
mov
movsl
jle
mov
popf
nopl
mov
cmp
shll
leave
cs
neg
mov
scas
ljmp
adc
mov
int
lock
xchg
pop
fstps
popa
arpl
les
sbb
adc
mov
stc
fidivrl
scas
xchg
xlat
mov
pop
xor
out
fimuls
loop
lds
sti
shrb
mov
addl
hlt
dec
fldcw
cmp
pop
jbe
stos
jge
xor
dec
aaa
or
or
insl
adc
iret
in
adc
dec
push
push
mov
xor
sub
scas
loope
mulb
xchg
repz
les
inc
arpl
das
cmpsb
je
out
in
pop
nop
push
enter
daa
cmp
jno
cltd
jl
stc
sub
inc
xor
daa
int3
xor
cmp
push
aam
fsubrs
add
or
into
pop
mov
xchg
xchg
sbb
imul
xchg
push
push
loope
lea
sub
cmc
pop
sub
imul
sub
rcrb
sub
dec
and
sbb
mov
push
and
and
sub
push
mov
lds
pop
and
lcall
sahf
fcoml
cli
sbb
inc
sahf
adc
movb
mov
mov
test
mov
mov
loop
adc
or
aaa
pop
cmpl
mov
in
outsl
scas
add
mov
lahf
or
mov
cs
sar
outsl
cmp
pop
stc
xchg
mov
addb
ret
data16
lcall
xchg
inc
out
out
cli
mov
outsl
xor
jno
cmp
push
push
sti
mov
mov
iret
sub
gs
ds
gs
pop
ds
adc
in
imul
or
and
lret
sbb
cmpsb
out
xlat
fcmovu
fwait
sub
xchg
stos
push
jmp
into
pop
cs
xor
inc
mov
nop
mov
mov
inc
xor
les
stos
jecxz
mov
xor
call
and
pop
adc
add
fcmovne
scas
lods
pop
pop
rcll
inc
cmp
jb
mov
dec
sbb
fbstp
jecxz
mov
std
das
fidivrl
cwtl
jne
xchg
mov
out
mov
lret
mov
dec
popa
fs
push
push
push
mov
xor
mov
pusha
stos
lock
cmp
mov
jecxz
push
ret
pop
xchg
ret
sub
out
bound
dec
call
out
cmp
mov
aad
ret
cld
jns
nop
mov
mov
in
mov
add
sarb
xchg
aam
js
mov
je
push
clc
out
arpl
dec
lods
or
xchg
popf
stos
xchg
or
ljmp
cwtl
lods
data16
test
out
push
test
xchg
xor
mov
sysexit
and
push
xlat
inc
cltd
sub
sub
xchg
decb
dec
xor
test
mov
xchg
inc
sbb
les
sarl
or
fwait
jne
fistps
in
ret
or
add
jmp
xor
iret
aam
daa
arpl
xchg
gs
fsubrs
lea
add
mov
dec
jmp
and
mov
fcmovu
dec
imul
mov
mov
jno
pop
js
jns
pop
inc
in
les
out
mov
out
sbb
cmpsb
inc
mov
addr16
and
jp
orb
dec
mov
jnp
jle
mov
jns
or
and
xchg
shlb
call
xchg
mov
push
dec
push
mov
inc
popf
and
mov
jp
mov
psllw
insb
popa
insl
xchg
imul
jno
dec
pusha
cli
push
fs
and
mov
pop
adc
adc
js
push
mov
or
addl
push
xchg
xlat
stos
sbb
sahf
sbb
xchg
fcmovu
lods
std
in
jecxz
inc
mov
mov
aam
mov
hlt
cltd
pop
dec
push
mov
out
or
fwait
jge
cmp
aaa
lret
or
push
mov
out
add
push
hlt
sub
push
add
pushl
andl
and
cmp
icebp
xchg
movsb
or
repnz
cmpsb
testl
enter
daa
cmp
sbb
xor
pop
cmp
aas
stos
ds
in
movsl
and
mov
rcrl
lahf
adc
xor
test
lret
sbb
popf
push
mov
pop
push
pop
pusha
sub
js
inc
pop
pop
sub
lahf
loope
push
shrl
jp
sub
push
outsb
xchg
adc
ss
mov
sbbb
sbb
sbb
loop
xlat
and
cld
int
int3
data16
push
pop
mov
push
cmp
in
clc
fdivr
andb
lea
sahf
mov
out
test
sub
gs
div
mov
inc
ret
mov
xchg
pop
mov
jns
adc
mov
loop
loope
mov
lret
cmc
shrl
lods
or
cmp
cmc
push
fidivl
cmp
pop
outsl
sbb
cmp
stc
dec
add
push
add
sub
data16
lods
sbb
mov
out
shr
mov
cmpsl
fnstsw
mov
repnz
gs
xor
sub
inc
push
adc
xchg
adc
rclb
lock
xchg
push
cmpsl
sbb
loope
mov
sub
jge
mov
push
in
jmp
jb
ljmp
cmp
fcompl
inc
inc
test
sub
les
inc
adc
xor
add
lahf
adc
adc
or
pushf
jo
cmpsl
push
pop
jmp
inc
cs
inc
push
aaa
cmpb
add
dec
xchg
int
je
jl
shll
mov
sub
std
dec
rcrb
add
mov
sub
xor
lret
jge
xchg
mov
jo
mov
sbb
lock
lcall
test
jbe
dec
subl
cmp
mov
add
cmpsl
aaa
xor
sub
push
icebp
lods
stos
inc
cld
movsb
mov
rclb
and
and
pop
and
sub
jnp
mov
or
mov
xchg
dec
movb
add
movsl
jns
shrl
shll
xor
mov
imul
xchg
out
cli
add
xchg
cltd
cltd
xchg
addr16
inc
mov
xor
out
test
add
xchg
sbb
xchg
adc
rorl
inc
inc
pop
shrb
adc
mov
push
add
cmp
push
decl
mov
jecxz
popl
xor
and
xchg
out
cli
mov
mov
mov
mov
int3
mov
inc
testl
rorb
mov
pop
mov
sbb
xchg
bound
lods
stc
in
ret
jge
into
out
out
sub
xchg
or
addr16
mov
jle
add
scas
jnp
jnp
jle
or
in
pusha
cmpsl
dec
and
pop
cmpsb
inc
xchg
movsl
out
sti
jmp
adc
jae
dec
lock
dec
js
popf
pop
or
inc
push
mov
ja
and
jmp
cmc
imul
fcoms
dec
nop
adc
test
iret
mov
cmp
int3
ja
pop
inc
sub
inc
mov
scas
inc
xchg
adc
call
inc
pop
sbb
rol
test
sbb
js
pop
nop
in
add
push
or
push
shlb
mov
daa
push
stos
leave
int3
scas
pmuludq
xor
jbe
jb
jge
push
mov
mov
and
mov
mov
std
adc
ljmp
or
jo
push
xor
lahf
or
and
mov
add
pop
adc
es
insb
enter
daa
aaa
and
cmp
mov
daa
jl
into
popf
cmp
hlt
cmp
outsb
mov
fistl
daa
shrl
xchg
lcall
sbb
mov
xchg
push
js
sbb
imul
aas
sub
aam
sub
xchg
lock
jmp
stc
add
adc
hlt
xorb
sbb
and
