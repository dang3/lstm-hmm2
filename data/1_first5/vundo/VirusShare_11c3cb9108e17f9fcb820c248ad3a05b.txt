test
enter
pop
sub
lock
pop
repz
test
sarl
leave
xchg
int
stos
xchg
push
mov
mov
cmpsl
sbb
lea
xchg
ror
leave
loope
mov
sbb
fidivl
and
jno
addr16
cmp
lods
ds
sub
mov
push
insl
outsb
cmpsb
daa
imul
les
movsb
dec
xchg
cmp
mov
stos
enter
repz
lea
movsb
push
mov
mov
movl
xchg
mov
les
frstor
icebp
repz
hlt
sbbb
fistps
je
sti
jle
cmpl
inc
cmp
jl
add
xor
mov
adc
pop
add
add
aaa
jno
test
popf
gs
out
data16
mov
xchg
or
in
jmp
mov
or
pop
push
xchg
scas
les
mov
shlb
and
fimull
mov
test
lcall
not
lcall
sub
mov
shlb
test
subl
sbb
cmp
pop
adc
push
mov
dec
out
nop
add
rclb
pop
adc
dec
es
dec
lcall
dec
xchg
outsb
arpl
lret
jge
inc
pop
dec
dec
std
jb
inc
jle
add
std
aad
mov
xchg
mov
scas
mov
push
setge
aaa
in
ror
xor
shlb
loope
sahf
jae
and
add
jno
xor
sti
out
dec
mov
jnp
sbb
inc
popf
jb
add
jge
and
mov
sti
mov
int3
repnz
pop
jnp
xchg
inc
jno
gs
mov
xchg
bound
shlb
rorb
pop
inc
gs
jbe
pop
mov
imul
data16
push
cli
cld
pop
clc
mov
pop
popa
scas
jl
cmp
mov
mov
push
dec
jmp
out
test
xor
adc
in
and
dec
pushf
pop
in
scas
fldt
dec
in
sahf
iret
cmp
pop
mov
sub
int3
push
lds
shll
mov
imul
test
mov
roll
inc
lock
inc
ror
sbb
inc
add
xchg
in
ret
push
add
add
stc
sub
cmp
mov
pop
cmc
mov
aas
sub
repz
mov
shr
andl
xlat
arpl
push
shlb
aam
jns
dec
jnp
mov
movsb
jns
xchg
pop
mov
movsl
mov
mov
popa
dec
xchg
ss
add
imul
incl
inc
and
es
ficompl
aas
cmp
xor
or
in
push
decb
dec
call
xor
mov
arpl
sub
xlat
or
jle
or
push
imul
pop
ljmp
or
cmp
pop
sub
cs
dec
dec
push
mov
push
cld
icebp
inc
into
in
out
setg
imul
mov
int3
out
les
pop
adc
les
clc
inc
sti
push
inc
mov
xlat
xchg
fistl
cld
push
movsb
mov
imul
sub
sub
pop
push
lahf
clc
or
aad
xor
mov
sbb
fmull
lahf
jl
cmp
sub
inc
mov
jb
lahf
and
push
and
dec
outsb
jg
push
inc
mov
fists
mov
adc
sbb
mov
ja
inc
jmp
outsb
call
test
loopne
xor
imul
mov
fyl2x
mov
cs
add
cwtl
in
lea
push
jmp
shl
inc
test
js
in
stos
cmp
cmp
push
adc
xchg
push
push
sub
xchg
mov
pop
cmc
mov
jle
mov
xchg
add
and
sub
xor
cmpsb
js
xor
cmp
xchg
sub
mov
mov
clc
andb
mov
dec
dec
xor
fildll
scas
jg
aad
push
cmp
stc
lret
push
xchg
sub
scas
movl
push
jge
or
add
mov
pop
and
mov
int3
pop
jae
mov
stos
test
fnstsw
cltd
int
lock
xor
adcl
mov
or
inc
sub
das
mov
dec
push
aaa
inc
inc
sub
or
and
outsl
jp
outsl
mov
je
out
cmp
jl
pop
push
in
and
lea
pop
push
mov
xor
xchg
mov
or
xor
push
and
xlat
addb
insb
push
and
sbb
dec
xorl
adc
cli
lret
call
imul
mov
sbb
arpl
sbb
add
inc
fdivr
push
subps
mov
pop
mull
inc
ljmp
lcall
bound
mov
ljmp
cmc
cmc
dec
xchg
sub
loopne
ds
insl
ss
dec
push
aad
jnp
nop
loop
shlb
pop
clc
out
xor
hlt
shll
sub
mov
insl
fidivl
scas
cmpb
inc
lahf
mov
ret
enter
xor
hlt
cmp
sbb
push
movsb
jo
cli
arpl
sbb
jb
out
mov
mov
or
xchg
push
outsl
adc
mov
pop
push
pop
int3
push
ljmp
cld
mov
ret
repz
hlt
into
test
jns
inc
sub
pop
jle
in
mov
mov
stos
das
sub
loope
mov
rcrb
push
pop
cmp
pop
cmp
popf
aam
inc
adc
mov
lock
add
xor
add
pop
cmp
jno
insb
outsb
add
shlb
jbe
mov
aad
hlt
pop
push
and
mul
adc
test
mov
loop
pop
movsl
inc
add
jge
jge
adc
adc
cli
lret
call
mov
push
sarb
imul
imul
out
fidivs
xor
push
adc
rcrl
xor
je
mov
push
and
int
pop
cmpsb
mov
cmp
mov
test
inc
inc
lret
dec
enter
fwait
push
cmp
outsb
arpl
ja
dec
add
xor
js
sbb
out
push
inc
sub
aad
mov
popa
aam
cld
sub
xor
cmp
xchg
cmpsl
je
shlb
hlt
cli
cwtl
out
push
rorl
pop
pop
push
aaa
cltd
pop
jmp
push
cmpb
cmp
sbb
invd
call
and
cmp
mov
stos
enter
add
call
xchg
lds
stos
cmc
jmp
mov
adc
neg
xchg
iret
jmp
das
jge
iret
mov
sub
lea
pop
test
adc
repnz
ret
xor
push
sub
cli
pop
fxch
loope
and
mov
icebp
mov
imul
push
and
vsubsd
rorl
movsl
dec
mov
jge
cli
pop
lods
movsl
sbb
push
mov
jae
lcall
push
test
and
inc
and
scas
dec
mov
lock
aas
in
mov
repz
loope
xchg
sub
mov
cmp
pop
jbe
sub
jle
jl
xor
mov
jb
mov
sub
push
clc
xchg
repnz
bound
nop
fisubs
imulb
fs
sub
dec
xor
imul
in
mov
xchg
int
loop
dec
pop
xchg
and
pop
sbb
into
dec
sbb
jnp
das
pop
aas
pop
in
fs
ss
fiaddl
lds
insl
test
mov
add
divl
leave
jb
jp
sti
out
dec
mov
dec
push
sub
out
xor
push
push
out
cmp
pop
dec
pop
add
xchg
sbb
push
push
add
insl
lods
cmc
mov
cmp
add
daa
xor
and
inc
pop
jae
cmpsb
mov
jae
insl
stos
nop
ljmp
pop
mov
fs
fnstsw
dec
pusha
cmp
bnd
ja
mov
mull
cmpsl
lcall
jmp
push
leave
jmp
aad
js
inc
xchg
xchg
jnp
test
mov
dec
sbb
pop
repnz
mov
movsb
shrl
pop
pop
out
shlb
imul
shrb
int3
lea
ss
cld
sarl
push
dec
adc
aaa
jl
sbb
mov
idivl
xor
xlat
mov
rorb
push
dec
shl
in
xor
movsb
cmp
sbb
xchg
jp
mov
arpl
cwtl
pop
imul
dec
clc
jle
jge
mov
mov
cmp
jns
aad
outsl
mov
imul
cmp
and
ja
xchg
mov
push
sbb
sub
lcall
addl
stc
mov
hlt
jne
imul
inc
add
or
adc
mov
jl
mov
repnz
sahf
mov
fisubrl
adc
enter
cltd
loop
arpl
lea
les
xchg
push
addr16
dec
cltd
das
jge
mov
inc
mov
test
jecxz
lea
test
or
sub
or
dec
inc
mov
or
jno
daa
mov
ret
icebp
frstor
movsb
xchg
and
lods
mov
mov
or
jmp
jg
stos
push
outsb
test
mov
dec
outsl
loope
inc
mov
lcall
mov
mov
or
sbb
aas
insl
fidivl
fnstsw
sahf
mov
xchg
and
rorl
push
test
or
sahf
xor
or
stc
push
lock
outsl
pop
push
mov
or
lea
ss
cld
sarl
push
dec
adc
adc
jno
lea
xor
push
out
and
loope
jno
es
outsb
fidivl
adc
push
inc
jne
shll
lea
aaa
push
pusha
dec
jns
je
js
in
sbb
call
jb
sub
pop
scas
and
in
mov
xchg
sub
mov
jno
test
daa
mov
or
insl
pop
jp
dec
and
hlt
fwait
inc
mov
mov
sti
push
adc
sub
out
scas
test
test
sbb
lret
jo
pop
jg
adc
sbb
into
xchg
mov
pop
inc
sbb
outsb
mov
adc
jmp
xor
xor
loopne
sbb
arpl
mov
jno
mov
push
negl
pushf
jg
push
fdivl
stos
incb
mov
mov
decb
int3
xchg
daa
repnz
cmp
push
fdivrl
xor
lea
sub
adc
in
das
xor
lcall
mov
cwtl
push
rcl
ss
mov
fiaddl
dec
lock
push
jg
xchg
lods
xchg
and
pop
xchg
sub
leave
in
pushf
lret
xor
lods
jl
jl
adc
mov
push
inc
jmp
mov
jl
xchg
jns
scas
sub
xchg
aad
xchg
aam
xchg
jecxz
lcall
ds
sub
mov
sbb
mov
je
push
jge
sub
pop
inc
iret
cld
stos
mov
and
dec
dec
jg
clc
out
xor
hlt
jne
imul
inc
add
push
into
fwait
sarl
lods
loop
sub
jp
jge
jns,pt
cmp
in
sti
mov
xor
or
mov
lods
jnp
jns
mov
jo
notb
aaa
cmpsl
xor
lcall
cmp
icebp
inc
push
dec
xchg
popa
orb
adc
mov
mov
mov
fdivrs
jmp
mov
shl
sbb
mov
mov
lea
divb
jl
mov
insl
xchg
dec
xor
push
xchg
sub
outsl
sbbl
inc
movl
insl
sbb
into
xchg
shl
mov
mov
add
imul
mov
add
andl
orl
aam
dec
xchg
cmp
xchg
inc
push
dec
inc
addb
lds
mov
mov
lret
and
scas
xchg
jge
bound
adcb
dec
dec
popa
pusha
cmp
pop
ss
ficompl
mov
mov
imul
filds
sbb
add
scas
iret
adc
dec
push
lahf
lds
hlt
fsubrp
popf
mov
pop
call
inc
cmpsl
loop
inc
fldl
sub
inc
ror
into
jp
and
fidivs
sub
mov
or
aam
adc
xchg
push
push
sub
xchg
mov
pop
cmc
mov
sbbl
pop
mov
adc
icebp
sbb
or
std
repnz
bound
adc
sub
aam
jg
stc
adc
into
pop
mov
clc
jmp
mov
inc
xor
pop
lret
in
push
mov
decb
addb
add
pusha
fcomi
es
fidivl
repnz
cmp
sub
mov
divl
dec
or
es
adc
inc
icebp
inc
push
dec
xchg
popa
orb
adc
mov
pop
out
jns
mov
into
lea
ss
out
pop
sub
jbe,pn
pop
push
dec
repnz
cmpsb
push
cli
test
adc
into
jg
notb
lea
pop
rorl
xchg
push
fildl
pop
sarl
scas
arpl
jae
mov
into
fs
les
scas
in
aad
fwait
cmp
jno
clc
jne
lock
les
adc
out
loop
and
and
fimull
mov
repnz
shll
pop
ret
xchg
pop
dec
push
inc
repz
in
sub
push
inc
sbb
mov
pusha
cltd
pop
cmp
pop
jbe
mov
lock
movsb
pusha
fmull
push
aaa
adc
add
sarl
fabs
cs
push
addb
xchg
mov
shlb
or
add
jno
leave
adc
das
aad
adc
cmpsb
xchg
les
push
push
dec
adc
outsb
and
and
imul
nop
xchg
adc
call
pop
pop
pop
in
daa
js
repz
push
lret
jmp
scas
mov
adc
push
cmc
mov
pop
jg
out
mov
and
sub
mov
jae
insl
stos
nop
ljmp
pop
mov
ret
pop
lret
add
mov
cmp
adc
cli
xchg
mov
orb
xchg
mov
jecxz
inc
jge
adc
pop
pop
leave
jo
and
shll
push
xchg
mov
or
xor
cmpsb
jb
rcl
movsb
dec
xchg
into
dec
push
dec
std
loopne
cmp
cli
cmp
inc
dec
lods
aam
iret
pop
outsb
shlb
inc
clc
xchg
cmp
adc
mov
shrb
pushf
in
cs
xor
mov
int3
dec
xchg
sub
add
outsb
in
mov
cmp
rep
clc
cld
stc
mov
cmp
ret
mov
rcrl
cltd
jne
js
mov
pop
xchg
push
test
sbb
pop
mov
mov
add
fsubl
std
lea
push
es
shlb
out
adc
sarl
aas
out
roll
add
pop
repnz
and
fidivrl
test
loop
lods
mov
addr16
mov
repz
test
mov
in
popf
jno
inc
cmpsb
mov
cmp
cld
jbe
gs
out
dec
inc
rcll
or
in
pop
dec
es
xor
std
pusha
adc
addr16
fwait
push
sbb
aam
inc
sbbb
adc
sub
imul
aaa
pop
pusha
push
or
mov
adc
addb
aaa
pop
fdivrl
jae
ja
mov
fdivrl
repnz
daa
mov
push
mov
out
nopl
jno
lds
pop
ss
ficompl
or
enter
push
push
fs
xor
sub
xor
data16
cld
imul
pop
jae
int
and
sbb
mov
or
xchg
pop
inc
nop
neg
sbb
jg
adc
out
push
cmc
in
jnp
sbb
adc
andl
insb
pop
les
int
xchg
inc
mov
je
pop
jmp
jmp
mov
and
out
test
dec
push
repnz
push
pop
out
jecxz
and
xor
pop
mov
outsb
cmp
inc
inc
mov
sti
mov
push
mov
xchg
lcall
shl
push
push
loope
mov
adc
mov
push
cs
ret
adc
add
scas
lcall
push
adc
mov
dec
popf
xor
insl
or
out
sbb
call
mov
xchg
jbe
push
notb
xor
sub
mov
adc
inc
cltd
movsl
mov
and
lret
pop
push
mov
testb
add
stc
fnstsw
mov
jns
lods
adc
pop
push
pop
imul
pusha
addr16
ret
pop
dec
pop
icebp
in
adc
sub
shll
repnz
and
repz
jnp
sbb
adc
andl
insb
pop
les
int
xchg
dec
les
rclb
pop
and
mov
shlb
mov
xchg
dec
or
fidivs
mov
int
adc
inc
jae
pop
sub
sbb
fildll
mov
scas
mov
fwait
sub
and
adc
mov
mov
xor
push
dec
pop
pusha
and
or
gs
jae
scas
cmp
dec
fucomi
cmpsb
push
mov
stos
jg
push
lock
sbb
sbb
arpl
aaa
xor
add
jmp
adc
frstor
aas
int3
lcall
stos
mov
adc
mov
and
xchg
fisubl
out
in
push
rclb
push
mov
rcl
cmpsl
imul
xchg
lock
dec
inc
sahf
mov
lret
add
sbbb
inc
xchg
push
jp
push
xor
mov
aaa
ret
out
lods
sbb
jge
je
xor
fwait
and
add
call
xchg
lds
stos
cmc
jmp
lret
jg
add
popa
test
sub
and
sub
jp
mov
add
imul
xchg
jns
add
scas
jmp
stc
xchg
mov
fildl
shlb
stos
mov
sbb
mov
pop
xchg
push
sbb
xchg
movsl
repnz
stos
cmp
gs
lods
adc
or
ret
xlat
mov
or
getsec
test
mov
mov
aaa
movsl
call
popa
ljmp
pushf
sub
popf
out
push
mov
push
in
add
push
fdivs
mov
or
jg
inc
test
shll
pop
enter
imul
push
sub
adc
inc
cltd
movsl
mov
and
lret
test
and
call
lcall
ret
add
jnp
add
or
negl
pushf
jg
push
fdivl
jo
mov
or
mov
in
dec
test
mov
add
sbb
dec
dec
cld
fcomps
shlb
adc
inc
adc
mov
xor
inc
insb
into
pop
push
mov
cmpsb
jns
inc
add
dec
push
pop
xor
cmp
or
inc
mov
fmulp
jns
xchg
mov
xlat
movsb
int
adc
inc
jae
je
dec
in
adc
into
or
shll
insb
jp
jecxz
cmpl
sub
pop
dec
sub
pusha
fbld
bound
or
mov
dec
aad
pop
sti
cmp
pushf
jl
adc
out
orb
mov
daa
stos
nop
fsin
lahf
call
dec
sarl
ja
or
cmp
sbb
pop
adcl
jge
xor
hlt
jne
imul
add
push
aaa
mov
mov
and
insb
jbe
xor
jp
rcl
lock
mov
and
push
adc
sbb
sarl
das
sub
pop
inc
inc
stc
add
push
sbb
ja
lea
mov
sub
or
mov
pop
jecxz
dec
in
or
xchg
push
data16
fwait
inc
call
insl
fimull
jnp
dec
xchg
sub
rcll
push
les
movsl
loopne
xlat
lock
call
jae
mov
enter
imull
fdivl
mov
dec
iret
dec
pop
out
jns
bound
dec
push
movsb
aam
aam
cmp
shl
cmp
popa
les
test
cmp
dec
jns
leave
fcoml
mov
add
mov
mov
cmp
adc
addb
mov
aaa
fs
add
push
in
jno
mov
pop
xchg
push
sbb
xchg
movsl
repnz
lock
cmpsl
xchg
cmp
sub
mov
jne
je
push
roll
push
push
popa
mov
jno
adc
pop
add
loop
and
xchg
test
sub
nop
jmp
aad
dec
xor
push
nop
fs
ss
fimull
add
push
test
mov
in
adc
ljmp
cmp
insl
mov
xchg
add
push
sbb
cmp
inc
add
xchg
movsl
sub
lahf
adc
mov
xchg
sarb
cmp
dec
sbb
ljmp
ret
das
imul
test
loop
sahf
daa
les
xlat
rcl
lea
xchg
aaa
lret
cmp
dec
stos
pop
mov
loop
mov
scas
in
sub
pop
sub
call
dec
and
push
dec
lcall
test
divb
and
inc
push
sahf
xchg
mov
pop
adcl
sahf
lods
mov
or
jne
shr
rorl
xchg
push
pop
test
lods
das
enter
arpl
jae
into
es
sbb
mov
dec
lock
decl
pushf
ss
xchg
fistl
movsb
mov
aad
mov
scas
jb
addr16
mov
mov
out
sub
call
sbb
rol
mov
rol
mov
sub
push
mov
stos
add
cli
mov
mov
mov
sbb
aaa
xor
and
lea
hlt
mov
cwtl
mov
movsb
mov
call
cmpsb
cmpsl
aam
jno
dec
cmp
out
sub
scas
pop
mov
pop
mov
cmp
jp
mov
dec
sbb
xor
inc
sub
sbb
shrb
pop
scas
leave
mov
fimull
sbb
movsb
es
fimull
mov
mov
test
and
fs
sub
cs
jns
xchg
sub
icebp
divb
and
inc
push
sahf
xchg
mov
pop
ss
mov
mov
fsubs
cmpsb
xchg
pop
data16
cmc
dec
fadd
dec
jl
cmp
inc
pop
mov
shlb
mov
int
mov
push
ret
addr16
pushf
mov
fsubp
add
mov
and
or
mov
push
sbb
pusha
xchg
mov
push
xor
mov
daa
mov
dec
xchg
lods
push
xor
shlb
dec
xchg
sbb
mov
in
xchg
xchg
push
sbb
xchg
movsl
mov
les
xlat
push
inc
and
ror
ret
xlat
mov
or
getsec
test
mov
outsl
ss
lods
adc
xor
mov
fisttpl
mov
in
sbb
test
add
jmp
into
ljmp
out
add
mov
mov
xor
stos
dec
pop
jp
fbld
and
arpl
xor
cmp
xor
cmp
hlt
arpl
notl
jo
inc
aad
xchg
pop
outsb
bound
movsl
out
jne
jbe
scas
pop
lea
cmp
stos
fildll
dec
daa
xor
and
inc
pop
jae
cmpsb
mov
mov
int3
pop
jae
int
and
sbb
mov
or
xchg
and
sbb
mov
out
sbb
sbb
test
lds
or
lea
ss
in
test
repnz
adc
sbb
push
adc
xchg
xchg
sarl
cmc
jge
fsub
xchg
xor
mov
shlb
jmp
test
and
out
test
cs
mov
xchg
and
das
push
rcl
fs
add
push
inc
push
data16
into
xlat
nop
pop
in
cld
sarl
int3
inc
out
jle
push
push
imul
fildll
cmp
mov
sbb
pop
jp
dec
inc
or
gs
jae
daa
or
fsubrs
jmp
push
mov
xor
xor
leave
fstpl
int3
frstor
nop
or
sub
lret
push
jae
mov
pop
sbb
adc
cmpsl
out
jo
pushf
int3
mov
push
mov
ljmp
mov
xor
cmp
ss
dec
movsb
lds
hlt
arpl
sahf
stos
mov
mov
rcrl
jp
jne
jbe
scas
pop
lea
jl
jbe
pop
dec
dec
popa
outsb
ret
orl
mov
adc
mov
fwait
jecxz
add
iret
std
pop
pop
out
fisttps
mov
adc
shlb
loop
rcll
call
xchg
fs
mov
push
je
or
pop
dec
xchg
ljmp
fcomip
sub
add
push
sbb
and
in
xchg
sbb
dec
xchg
and
jne
ja
mov
add
idivl
dec
jl
push
fbstp
test
mov
rclb
add
dec
in
pop
maxps
aaa
in
mov
xchg
and
sbb
nop
loop
xlat
mov
shrb
jg
xchg
mov
fisttps
lcall
jno
sbb
outsl
ret
sarb
jbe
dec
adc
ret
out
das
cld
jmp
push
pop
test
test
xor
cmpb
out
xor
fmull
xor
scas
dec
fucomi
cmpsb
push
mov
mulb
sub
movsb
mov
jbe
gs
cmp
rclb
pop
adc
dec
es
xor
std
pusha
adc
addr16
fwait
push
cli
sbb
push
test
ljmp
in
sub
icebp
cmp
cmp
xchg
adc
enter
dec
adc
ljmp
jmp
scas
mov
lret
pop
push
mov
testb
lea
mov
pop
jnp
shlb
xorl
sub
repz
addr16
sarl
xchg
push
add
repz
push
hlt
dec
insb
movsb
lea
xchg
xchg
enter
sbb
into
xchg
shl
mov
mov
add
imul
xchg
test
cmp
fisubrl
mov
mov
jp
andl
aas
int3
jmp
xchg
lods
xchg
and
pop
xchg
and
sbb
scas
mov
mov
dec
or
shll
stos
pusha
mov
push
inc
jmp
sbb
sub
sub
xchg
daa
lods
inc
pop
fs
mov
xchg
lcall
cmp
sub
mov
adc
fwait
jge
jo
shlb
stos
nop
add
xor
popf
adc
inc
out
jae
mov
jnp
dec
xchg
sub
mov
out
icebp
notl
xor
cmpsl
xor
test
cmpsb
mov
sub
fistpll
inc
or
mov
leave
mov
xor
repnz
daa
cmp
mov
std
xchg
add
pusha
push
or
mov
lods
jnp
scas
mov
pop
or
lods
jge
xor
imul
cmp
movsl
ljmp
sub
data16
inc
ja
neg
sti
push
inc
mov
das
mov
cmp
ss
cltd
mov
push
mov
mov
aaa
rcrl
rcrl
das
xor
loop
adc
add
add
pop
cmc
jno,pt
mov
fcmovu
nop
psrad
cmpsl
jno
int3
dec
xchg
sub
aaa
in
mov
jecxz
push
mov
push
ror
xchg
sub
push
orb
mov
and
dec
and
xchg
test
mov
loop
pop
movsl
inc
add
ss
arpl
sub
es
arpl
inc
lcall
push
stos
pusha
mov
test
mov
shl
adc
inc
lcall
dec
rcrl
jl
lock
cmp
adc
add
movsl
push
xor
cli
dec
add
fwait
push
dec
push
fldenv
push
in
add
mov
cmp
in
stc
mov
jne
in
imul
aad
int3
test
shll
pop
enter
dec
adc
ljmp
addr16
and
stos
xchg
aas
cmpsb
movsb
mov
addl
loopne
sub
mov
andl
out
jne
jbe
scas
pop
lea
jl
jb
xchg
xchg
nop
mulb
sbbb
bound
enter
jle
or
jmp
jg
stos
mov
xor
mov
pop
sub
cs
or
shl
imul
cltd
int3
cmpsb
inc
outsb
sbb
cltd
xor
sbb
jp
adc
mov
mov
add
pop
ljmp
cmc
jge
fsub
xchg
xchg
jns
call
push
xor
or
lahf
jl
fwait
mov
cli
mov
and
pop
push
shl
fmull
xchg
ja
fsubr
test
cmp
lock
xchg
add
mov
sahf
cltd
or
adc
cmp
xchg
jge
mov
mov
xchg
lcall
jge
cmp
mov
xchg
add
inc
cmp
gs
lret
sub
and
popa
dec
mov
mov
out
add
cli
sbb
jle
xchg
sub
ss
inc
jmp
or
shll
pop
ss
fsubl
and
sub
sub
push
sbb
sub
gs
mov
fs
push
sub
push
adcb
or
in
data16
roll
scas
push
sbb
sub
push
lret
jo
ror
mov
add
outsl
mov
pop
and
mov
cmc
dec
inc
push
add
int3
push
ljmp
cld
mov
ret
jbe
cmc
mov
test
sub
push
sbb
xor
aas
cmpsb
loop
arpl
mov
in
cmp
sbb
and
mov
cltd
outsl
jg
shll
lea
enter
faddl
xchg
mov
inc
sub
cmp
inc
cmp
push
mov
movsb
shrl
fs
adc
cli
lret
call
mov
cmp
pop
cmp
mov
mov
mov
mov
cmp
stc
push
packssdw
fucom
mov
movsb
mov
or
lea
push
fdivp
and
fstpl
stos
add
pop
push
pop
dec
data16
xor
dec
lds
clc
mov
inc
addr16
jge
rolb
daa
sbb
shll
mov
cmp
xchg
sarb
cmp
dec
sbb
xchg
and
mov
xchg
mov
pop
dec
push
or
fcompp
adc
shrb
movsb
cmp
stos
inc
addb
shll
shll
pop
xor
scas
push
sub
sti
add
jb
or
call
or
sub
mov
adc
ljmp
cwtl
popf
pop
pop
test
loopne
cld
in
add
add
stc
inc
pop
jae
adc
dec
xchg
ljmp
cwtl
inc
inc
inc
hlt
sbb
fs
pop
push
ss
cmp
inc
xchg
sub
sub
lea
adc
out
sbb
dec
dec
cld
sub
mov
shlb
adc
cwtl
jmp
iret
jmp
push
mov
adc
in
pop
add
js
inc
inc
xchg
cmp
inc
mov
sbb
imul
add
add
daa
xchg
mov
loop
fstl
cmc
sub
cmp
es
sti
mov
sbb
dec
jmp
call
add
scas
xor
mov
inc
adc
cwtl
addr16
scas
outsl
imul
sbb
les
lock
cmp
pop
push
add
mov
add
ja
jb
in
inc
mov
clc
inc
push
pusha
dec
dec
aam
jg
pushl
sbb
loopne
push
dec
adc
and
lahf
in
lds
pop
fxch
dec
es
into
aaa
xor
mov
call
dec
loopne
mov
ss
xor
sbb
push
out
lea
xor
push
imul
stos
sub
inc
pop
dec
or
aaa
lods
sub
xchg
sub
jle
or
jmp
jg
cmc
jno,pt
movb
gs
push
cmp
gs
cwtl
into
inc
cmp
popa
es
push
cld
icebp
sub
idivl
xor
aas
xlat
lcall
mov
xchg
and
fxch
jecxz
sub
sbb
mov
xor
icebp
test
xchg
mov
xlat
movsb
int
adc
inc
jae
je
dec
in
adc
into
or
shll
insb
into
xchg
leave
subl
xchg
xlat
inc
sub
hlt
mov
inc
jl
leave
test
mov
sarb
sub
imull
mov
aaa
jmp
cld
mov
jno
xchg
or
cli
aaa
pop
cmp
mov
sbb
ficoms
mov
push
pop
imul
dec
rcrb
sub
push
add
bound
mov
popa
aam
cld
sub
xor
leave
xchg
pop
inc
or
gs
imul
mov
add
jmp
cmp
rolb
mov
add
pop
clc
jmp
mov
clc
andb
xor
mov
push
pop
add
pop
test
lods
dec
roll
inc
mov
pop
pop
push
jns
cmp
cli
sahf
sbb
iret
pop
cmp
fnstenv
xor
push
pop
jno
dec
pop
sbb
lcall
adc
mov
dec
jge
xchg
loopne
and
mov
aam
cwtl
adc
mov
mov
add
mov
mov
cmp
adc
xchg
mov
cli
push
ja
xchg
add
shlb
dec
push
test
shll
insb
push
and
shlb
pusha
add
cmp
or
push
or
mov
mov
pop
jns
stc
xchg
lods
jecxz
aaa
push
addr16
test
psubsb
xchg
in
out
cmpsl
jmp
call
aas
cmp
rcrl
or
mov
add
sbb
fsubr
mov
and
sub
inc
movsb
adc
fwait
out
mov
sbb
mov
outsl
and
insl
push
dec
test
gs
sbb
push
movsl
inc
and
ja
jl
pop
ljmp
mov
xor
mov
adc
lahf
jmp
cltd
hlt
adc
sub
lret
mov
or
xchg
adc
dec
xchg
andb
les
cmp
cmp
rolb
xchg
xor
xchg
dec
movsl
mov
mov
leave
jge
xchg
pop
push
push
cli
mov
pop
lret
adc
pop
mov
push
int3
inc
push
stos
dec
push
push
out
ficompl
call
jo
and
lock
push
call
xchg
mov
sub
mov
xor
add
ret
outsl
cmp
sub
cmp
sub
icebp
stos
jo
mov
mov
and
add
adc
out
fdivrs
idivl
loope
sbb
jge
fsub
xchg
xchg
jns
call
and
push
push
and
ficoms
push
insl
pop
xchg
ret
jmp
jge
dec
in
rcll
inc
addb
ljmp
mov
pop
xchg
push
sbb
xchg
movsl
adc
jecxz
aaa
jl
dec
sti
cwtl
lock
dec
xor
pusha
add
push
repz
outsl
push
mov
add
lcall
cmpsb
jmp
imul
out
fwait
out
mov
mov
cmp
sbb
ficoms
mov
fs
add
xchg
fldl
mov
movsb
jns
fidivl
rcrl
out
sbb
xor
pop
leave
mov
js
inc
or
pushl
mov
fs
adcl
insb
jl
std
cmp
cmpsb
dec
scas
push
test
icebp
push
stos
in
outsl
or
int
sarl
cmp
add
in
push
lcall
add
add
dec
pusha
dec
xor
adc
daa
push
and
outsb
jge
sbb
lahf
pop
jae
mov
das
in
lea
xchg
or
pop
dec
bound
xor
fwait
in
nop
in
repz
mov
nop
mov
popa
fisttpll
fs
mov
insb
pop
aaa
les
insb
mov
jmp
ja
ds
sbb
fisttpll
imulb
cld
aad
popa
iret
push
repz
add
testl
xor
and
lret
das
roll
fdivs
push
inc
sub
pop
dec
mov
mov
adc
out
cmp
out
pop
jne
ret
ljmp
shlb
lcall
xchg
pushf
sub
popf
out
push
mov
push
in
add
push
fdivs
mov
or
fs
icebp
jg
inc
pop
test
xchg
into
mov
mov
dec
push
sub
adc
inc
cltd
movsl
mov
and
sub
push
cld
in
xchg
ret
cmpb
fsubrl
sti
xchg
mov
mov
shlb
jg
cmp
or
movsb
cmp
loop
leave
call
lea
ss
or
sahf
jl
and
fisubs
test
and
xchg
pop
dec
fbld
mov
inc
sub
or
bnd
ja
mov
out
add
jno
push
je
test
or
mov
rorb
addb
mov
mov
xchg
jno
enter
dec
ja
mov
sahf
mov
popl
mov
dec
xor
dec
repnz
test
fucomip
std
adc
lea
lods
dec
push
cld
add
pop
in
dec
push
pop
sub
mov
daa
mov
and
or
sarb
pop
scas
jb
addr16
xchg
leave
ss
sahf
push
popf
js
sub
cltd
std
in
xor
movsb
cmp
jecxz
push
and
or
out
push
and
in
inc
push
negb
and
lods
lret
shl
xlat
jp
fistpll
pop
fabs
lock
arpl
pop
xchg
enter
mov
addr16
cltd
sbb
or
cmpb
cmp
add
mov
xchg
es
and
adcb
hlt
cmp
sbb
push
movsb
jo
cli
mov
xchg
enter
les
mov
jle
test
mov
push
jns
xchg
sub
icebp
divb
and
inc
push
sahf
xchg
mov
pop
adcl
sahf
lods
mov
or
jne
shr
rorl
xchg
push
pop
jmp
xchg
das
enter
xchg
ds
rclb
rolb
dec
jb
mov
sub
push
and
ret
js
bound
nop
and
lahf
mov
scas
inc
addb
mov
cmp
pop
je
fwait
xchg
test
xor
dec
pop
pushf
push
jg
pop
mov
std
ret
sub
push
mov
insl
cmp
loopne
adc
scas
fbstp
inc
mov
shlb
mov
or
inc
outsb
inc
pop
cmp
and
ja
xchg
mov
or
sbb
fldl
mov
sbb
cwtl
add
loopne
push
dec
adc
and
xor
mov
or
cmp
popf
lds
popl
mov
jo
adc
imul
xchg
loopne
ljmp
addr16
mov
imul
mov
loopne
lea
call
push
dec
dec
inc
iret
nop
out
jl
lahf
rcl
mov
mov
sbbl
push
and
fidivl
lea
insb
shlb
in
xor
xor
aas
mov
fcmovu
nop
movmskps
addb
mov
shlb
cwtl
mov
xchg
xchg
das
mov
jnp
push
xchg
xchg
jns
call
cmp
addb
shl
sbb
jno
mov
push
mov
shlb
pop
sub
or
dec
popa
pusha
mov
repnz
insl
fidivl
add
jg
pop
mov
test
cmp
lock
xchg
add
mov
fidivl
jl
push
cmpsb
xlat
mov
addb
sub
mov
in
popf
jno
inc
cmpsb
xor
and
frstor
int3
frstor
nop
or
sub
lret
push
jae
mov
pop
sbb
adc
cmpsl
out
jo
pushf
int3
mov
push
mov
ljmp
mov
fldl
xor
mov
jbe
gs
test
jmp
out
mov
pop
push
xlat
jbe
scas
pop
lea
jl
jb
xchg
xchg
nop
mulb
sbbb
push
jp
mov
addb
into
pop
inc
stc
mov
cmp
inc
push
xchg
int3
cmp
pop
sbb
sbb
xchg
cmp
push
repz
rcrl
push
je
test
or
xor
stos
fldl
in
test
scas
fidivrl
dec
adc
sahf
xor
or
movsl
push
cmpsl
inc
or
dec
popa
pusha
cmp
cmp
push
sbb
cmp
iret
lock
les
hlt
push
mov
jp
push
push
cmp
cmp
mov
loope
inc
ja
sbb
xor
or
lea
mov
sub
clc
jle
inc
sbb
adc
or
aas
xchg
das
mov
ss
out
jae
mov
je
mov
jge
adc
mov
dec
xorb
insl
fidivl
push
mov
adc
sub
imul
inc
add
inc
ljmp
insb
jns
aas
xor
pop
push
adcl
mov
push
call
leave
jb
jp
sbb
pop
ss
add
jge
into
dec
es
into
aaa
xor
mov
add
loopne
out
push
dec
jbe
inc
cmp
jns
or
cli
cmpsb
xchg
pusha
addr16
and
in
adc
sub
shll
repnz
and
dec
fadd
lcall
popa
insb
pop
les
int
xchg
sub
lea
xor
jns
xor
push
lahf
cmc
pop
adc
leave
jl
jge
sti
jb
fs
mov
nop
arpl
pop
mov
inc
sbb
stc
imul
add
dec
aaa
xchg
ja
fsubr
test
cmp
lock
xchg
lcall
or
inc
test
fs
sti
mov
cmp
jmp
sub
dec
in
icebp
and
loope
mov
adc
fwait
out
mov
cmp
sbb
ficoms
mov
sbb
sbb
xchg
sarb
cmp
dec
sbb
sub
jge
xchg
sbb
in
ror
xchg
int
stos
xchg
push
mov
mov
jns
inc
jo
imul
in
sti
mov
xor
or
loop
mov
adc
pop
mov
jl
sub
sahf
test
or
lea
ss
arpl
mov
call
imul
sar
stos
adc
mov
adc
mov
or
mov
in
dec
test
gs
mov
dec
loop
repnz
imul
pop
mov
ror
scas
nopl
mov
or
lea
ss
rcrb
push
mov
xchg
add
add
xlat
addb
insb
push
and
cmp
inc
add
ss
arpl
jo
sar
test
add
push
or
pop
in
aas
mov
xor
fwait
les
push
cmpb
xor
sub
mov
or
add
inc
adc
subps
mov
pop
jne
enter
sub
mov
adc
dec
imul
stos
test
imul
jb
aas
insl
fidivl
sub
outsl
fwait
mov
data16
aad
mov
or
fdivs
fs
add
adc
jg
dec
bound
jo
pop
xchg
and
mov
sub
push
xchg
das
aad
adc
xchg
iret
xor
push
sti
stos
ljmp
xor
data16
cli
xchg
js
dec
xchg
and
dec
in
or
push
pop
push
sbb
jo
and
es
fimull
mov
rorb
mov
jecxz
aaa
cmpsl
xor
sub
add
lahf
adc
cmp
push
add
repz
xlat
pop
jne
pop
js
mov
sub
add
adc
out
fdivrs
idivl
sbb
das
sub
add
inc
xchg
insb
push
fldl
mov
andl
jle
xchg
movsb
xchg
pusha
xchg
mov
lock
fsubs
fmull
xchg
ja
fsubr
test
cmp
lock
xchg
add
mov
sahf
cltd
or
adc
cmp
xchg
jae
xor
dec
inc
nop
add
call
sbb
pop
in
adc
pop
fwait
sub
inc
incl
inc
addr16
jge
rolb
daa
sbb
xchg
int
test
dec
sahf
and
clc
jno
hlt
jne
imul
inc
call
inc
mov
jae
js
clc
mov
repnz
daa
mov
test
or
maskmovq
xlat
add
mov
mov
jecxz
mov
push
ret
imul
xchg
cmp
ret
dec
pusha
xchg
inc
inc
pop
lret
pop
sub
movsb
dec
ret
dec
test
pop
std
in
adc
sub
xor
mulb
dec
test
mov
iret
pop
js
jne
fldenv
in
xor
xor
lods
mov
inc
push
stos
fsts
and
cld
xchg
push
hlt
add
cmp
inc
iret
hlt
arpl
stc
xchg
and
dec
jae
sbb
cmp
cmpsb
jge
pop
in
seto
mov
leave
lea
ss
adc
mov
or
mov
lock
lret
jno
movb
push
xor
xchg
and
mov
rolb
adc
repnz
ret
xor
push
xchg
and
mov
mov
dec
sub
dec
and
xchg
test
mov
loop
pop
movsl
inc
add
ss
arpl
sbb
push
mov
jae
out
sbb
fwait
lea
mov
mov
bound
xchg
lea
jae
push
mov
cwtl
out
lea
ljmp
push
out
pop
jne
or
movsb
cmp
push
sub
inc
sarl
jne
add
mov
pushf
jl
out
fisubs
add
cmp
shll
sti
xor
cmpsl
loope
fadds
jg
clc
out
xor
hlt
jne
imul
inc
add
push
into
fwait
sarl
mov
xor
repnz
daa
mov
hlt
std
xchg
add
push
mov
mov
jecxz
mov
push
ret
imul
jmp
out
in
int3
insb
jno
mov
push
je
or
pop
dec
xchg
ljmp
cmp
into
das
mov
fstpl
mov
jg
notb
mov
cmc
imul
lock
rcrl
lock
or
pop
add
mov
mul
ljmp
lods
test
mov
dec
mov
hlt
and
lret
das
roll
fdivs
push
inc
sub
pop
dec
mov
push
cmp
push
jns
sub
push
sub
inc
shrl
sub
fmul
fdivs
ljmp
mov
mov
inc
xchg
inc
addr16
jge
rolb
daa
sbb
xchg
int
test
pop
cmp
inc
or
out
mov
shr
shrb
fdivs
and
or
and
mov
add
daa
mov
test
or
fdivp
push
sbb
adc
stos
imul
jmp
cmp
or
mov
ret
fmull
push
addps
int3
inc
xchg
sub
jne
pop
js
mov
sub
sbbl
insl
mov
pop
or
xlat
mov
adc
repnz
test
clc
cmp
pushf
adc
fcoms
fidivrs
aaa
push
pop
and
scas
cvtps2pd
mov
and
aaa
pop
pop
dec
cmp
mov
les
scas
in
aad
fwait
cmp
jno
clc
jne
lock
les
adc
out
loop
and
and
fimull
imul
jbe
jne
leave
cmpsl
mov
mov
add
jl
xchg
ja
and
fdiv
sbb
mov
pusha
cltd
pop
cmp
pop
jbe
mov
lock
movsb
in
sbbb
push
pop
sub
xor
push
push
push
addb
aad
into
jb
and
lods
xor
sbb
int3
inc
xchg
sub
xchg
mov
push
inc
pop
fsubl
test
xchg
jle
mov
mov
sub
sti
outsl
test
or
cltd
in
popf
pop
insb
add
jmp
icebp
mov
xchg
sbb
push
add
shll
push
repnz
mov
and
fwait
adc
cmp
xor
lcall
les
cwtl
push
dec
jno
repnz
push
mov
cmpsl
mov
jp
dec
loopne
sar
stos
lcall
xor
ljmp
lcall
mov
mov
bound
lcall
imul
mov
xchg
and
sbb
mov
cmp
test
jl
aas
cmpsb
jecxz
lds
int
sbb
cli
inc
test
mov
mov
cmp
pop
sub
adc
dec
outsb
jg
xchg
mov
lcall
and
insb
jp
jecxz
and
movsb
sti
mov
add
into
movsb
jle
pop
out
push
mov
fldenv
enter
mov
pop
hlt
pop
add
mov
jne
add
mov
xchg
and
mov
add
add
cmc
and
sbb
mov
lea
pop
push
add
popf
stos
ljmp
inc
mov
fldl
mov
pop
mov
push
fs
addb
call
adc
fbstp
mov
push
mov
sub
icebp
test
xlat
movsl
sub
pop
ss
fidivrl
and
lret
inc
sub
addb
xor
xor
loopne
sbb
aas
mov
and
lcall
call
fs
sub
cs
dec
lcall
cmp
pop
call
test
sarl
lea
pop
sub
cs
jge
pop
mov
push
cld
icebp
inc
into
lahf
cld
jne
enter
xchg
in
test
repnz
adc
add
js
stos
sbb
stc
in
aaa
mov
shlb
dec
cli
insl
imull
jae
pop
sub
adc
dec
outsb
jg
push
xchg
push
lock
push
lock
jp
jecxz
and
push
imull
hlt
mov
and
jo
or
repz
mov
fidivs
sub
mov
add
pop
cmpsb
xor
movsl
sub
adc
push
pop
scas
and
in
mov
cmpl
fnsave
inc
inc
js
sbb
repnz
mov
sub
pop
outsl
shlb
sahf
sub
jecxz
dec
inc
addb
ljmp
les
mov
imul
dec
xchg
push
jno
dec
xchg
cmpsl
je
shlb
mov
shll
mov
shlb
mov
mov
xchg
add
sub
call
adc
enter
out
fisubs
clc
pop
jg
out
mov
and
sub
int
adc
test
dec
pusha
pop
and
mov
pop
or
int3
insb
mov
or
cmpsb
dec
xchg
and
push
push
jns
mov
cmp
xor
jge
or
out
jecxz
dec
std
loopne
and
sbb
arpl
xor
jge
testl
xchg
push
je
pop
jmp
mov
test
and
out
test
dec
push
repnz
ds
es
imul
into
xchg
test
sbb
arpl
sbb
add
inc
fdivr
push
subps
mov
and
push
cmp
jl
lock
stos
cmp
mov
mov
sbb
call
push
inc
inc
lret
dec
enter
fwait
push
test
add
mov
jge
sbb
xchg
sti
mov
and
push
pop
movsl
sahf
mov
pop
dec
rol
fdivs
push
data16
mov
jg
pop
mov
mov
xchg
push
add
nop
insl
negb
inc
test
jns
xor
in
xchg
and
or
pop
das
sbbb
insl
lock
roll
mov
std
xchg
jp
outsb
movsb
inc
addb
or
repnz
loop
or
sub
fidivl
cmpsb
dec
scas
push
fnstenv
push
pop
inc
popl
cmp
mov
add
jnp
add
fsubl
call
test
sub
add
roll
dec
dec
xchg
and
loope
add
clc
push
mov
and
xor
cmpsb
inc
push
mov
shlb
xchg
add
imul
xlat
nop
mov
popa
les
sbb
dec
dec
inc
jle
add
push
int
mov
push
xor
and
xchg
xor
es
sbb
pushf
xor
pop
pushf
ss
ja
pop
xchg
push
js
shll
push
cmpsl
cmp
pop
mov
cmp
pop
inc
dec
pop
ss
ficompl
shlb
je
add
mov
scas
jb
addr16
scas
leave
mov
fs
stc
mov
loopne
mov
or
ja
sbb
fsubr
mov
out
mov
mov
xchg
and
sbbb
adcb
pop
push
out
cmp
add
xchg
mov
dec
sarl
adc
lahf
insb
sub
in
add
repnz
mov
cmp
add
dec
cld
sub
jge
dec
inc
pop
addl
movsb
scas
inc
mov
shll
inc
or
in
test
fildll
cmp
xchg
cmp
cmp
sbb
lds
add
sbb
mov
mov
pshufw
xor
sub
xlat
imul
xchg
cmp
cmc
dec
inc
push
pop
jne
pop
js
add
xor
cmpsb
in
sbb
xchg
ds
add
jmp
mov
icebp
inc
into
xchg
in
fsubrs
add
imul
imul
add
outsb
loopne
and
sbb
sbb
dec
mov
cmp
lea
aad
hlt
pop
push
and
jecxz
lods
ret
shlb
shrb
cmpsl
inc
or
dec
popa
pusha
cmp
cmp
adc
dec
inc
adc
adc
xchg
xlat
inc
sub
push
out
cmp
push
popa
push
xchg
scas
out
mov
inc
jno
adc
and
inc
jne
pop
pop
dec
push
sbb
inc
and
pop
loop
into
jbe
adc
mov
imul
sub
lcall
sarl
leave
sbb
loopne
ds
insl
ss
inc
mov
hlt
ret
test
stos
aad
pop
pusha
push
jae
xlat
xchg
sbb
sbb
shrb
mov
movsb
push
aaa
cltd
pop
jmp
push
cmpb
cmp
dec
imul
xor
in
es
xor
dec
ret
push
jns
mov
add
pop
pop
dec
dec
outsb
inc
cmp
jno
insl
out
sbb
push
sbb
sbb
or
pop
fs
mov
sub
mov
ret
xlat
or
jp
push
lock
rcrb
push
add
push
xchg
jp
jae
add
adc
out
shrb
push
sar
cwtl
and
sub
push
lea
leave
jmp
jg
imul
pop
mov
mov
stos
inc
inc
pop
lret
out
cld
lods
call
jg
orb
fdivrp
dec
xchg
test
push
pop
mov
fistl
movsb
insl
icebp
cmp
push
imul
fucomip
scas
jb
addr16
aaa
pop
dec
jb
mov
pusha
cmp
xchg
jae
xor
out
sbb
push
and
mov
jle
stos
add
inc
data16
popf
stos
test
inc
loope
xchg
int3
cwtl
ljmp
stos
xchg
lea
pop
enter
pop
sbb
pop
ljmp
mov
jg
xor
aaa
pop
pusha
push
or
jecxz
shlb
pop
adc
hlt
fs
fnsave
mov
lea
xchg
and
ss
add
adc
jmp
fdivp
push
sbb
adc
push
jecxz
pushf
push
cmpb
fsubl
call
test
push
retw
push
or
mov
inc
iret
nop
out
jl
add
mov
push
xchg
mov
cmpsb
pop
inc
mov
or
xchg
and
mov
aam
cwtl
adc
mov
mov
add
in
movsl
cmp
fisubrl
jb
data16
mov
and
aam
test
dec
fwait
mov
dec
repnz
jnp
leave
in
push
dec
nop
jno
jo
sub
adc
daa
jl
jmp
and
jb
sub
jbe
arpl
btc
add
jle
pushf
gs
pop
dec
in
icebp
and
test
push
jge
mov
mov
add
pop
fisubrs
sbb
or
dec
bound
jge
daa
stos
nop
fsin
lahf
insb
xor
cmp
lods
scas
out
scas
test
test
sbb
lret
jo
pop
imul
iret
adc
and
xor
mov
or
cmp
jb
bnd
loop
xchg
mov
ret
mov
call
xor
mov
arpl
xor
or
add
ljmp
outsb
test
mov
dec
outsl
loope
lret
in
cmp
cmp
push
add
aas
pushf
jmp
push
subl
iret
jmp
mov
xchg
scas
push
adc
shlb
and
out
sbb
mov
lret
lea
rep
clc
cld
js
jno
push
cmp
pusha
pop
xor
out
jmp
jae
je
dec
in
adc
into
or
shll
cli
insb
daa
inc
inc
add
cmp
icebp
xlat
push
inc
and
lea
int3
lea
movaps
jl
xchg
ja
and
shlb
inc
jae
push
fistl
gs
jb
cs
adc
loope
jg
pop
mov
fdiv
sub
clc
shlb
jbe
adc
out
cltd
dec
or
inc
xchg
sub
je
bnd
inc
push
out
or
jno
js
ja
out
mov
lea
pop
push
adc
les
push
out
cs
in
imul
aad
int3
test
sahf
jnp
dec
xchg
sub
cmpsl
je
pop
mov
push
in
mov
shll
inc
or
out
jg
jae
mov
outsl
cld
test
or
sbb
data16
jmp
xchg
mov
cwtl
adc
in
test
push
xchg
xchg
nop
mulb
sbbb
mov
xchg
pop
dec
inc
popf
xchg
bound
inc
or
in
add
rcrb
dec
xor
pop
sub
xchg
fwait
rcrb
lcall
inc
imul
cwtl
mov
es
cmp
movsb
push
push
push
jl
pop
cmp
sbb
popa
in
inc
lds
ss
in
fildll
sbb
dec
xchg
mov
leave
clc
js
imul
push
repnz
cmp
test
mov
shlb
pop
mov
imul
xchg
rolb
std
pusha
nop
into
pop
and
xchg
inc
rcrb
das
js
scas
sub
cmpsb
inc
addb
ret
xor
cmc
add
imul
dec
sbb
and
mov
push
ljmp
into
sub
mov
pop
out
imul
sub
mov
pop
nop
arpl
pop
mov
inc
sbb
stc
imul
adc
in
lods
fsubrl
lret
call
mov
cmp
pop
cmp
inc
fldl
cltd
or
adc
cmp
js
icebp
mov
mov
pushf
adc
out
test
out
xchg
out
into
mov
lcallw
adc
push
fisubl
mov
mov
mov
inc
out
jb
xchg
fldl
mov
movsb
jns
xchg
pop
mov
ja
push
pop
fldt
nop
dec
cmp
aaa
cmc
mov
lea
pusha
cmp
inc
and
std
pop
sbb
in
sub
ljmp
pop
add
fnstsw
push
std
out
xchg
lret
xor
xchg
enter
and
push
lock
cs
insl
cmp
test
lods
pop
aas
cmpsl
cmp
pop
cld
pop
pop
push
pop
dec
mov
insl
outsb
or
mov
outsl
jg
out
jecxz
repnz
xchg
xchg
repnz
popa
and
lret
inc
inc
push
push
xor
mov
arpl
and
push
mov
jmp
mov
adc
insl
cmp
cmp
fwait
xchg
add
push
insl
fidivl
cmp
and
sub
mov
sbb
jge
fdivs
xor
cmp
jo
shlb
xor
icebp
divl
push
cmp
push
mov
pop
pusha
mov
cmp
ret
mov
dec
insb
sub
inc
sarl
ret
xlat
nop
pop
in
cld
sarl
push
adc
daa
sbb
cs
lahf
test
lods
xor
cmp
stc
lcall
or
sub
into
popa
std
in
xor
movsb
cmp
jecxz
push
and
mov
jle
stos
add
aaa
adc
jb
fadd
dec
xchg
repz
and
dec
mov
ljmp
push
setge
aaa
mov
test
xor
mov
shlb
or
cmp
or
shlb
push
push
lret
loop
test
ret
jge
sub
call
mull
push
push
jnp
push
mov
je
pop
lret
notl
imul
add
jo
fistps
mov
add
jnp
add
jp
dec
loopne
sar
stos
adc
mov
adc
cs
pop
shlb
lea
dec
pop
jmp
popa
out
pop
arpl
movsb
dec
fdivrs
idivl
add
in
jb
cmp
fwait
mov
mov
les
shlb
test
scas
idivl
shlb
dec
push
js
lret
dec
inc
xchg
and
lret
and
or
mov
or
ds
pop
mov
jo
sbbl
pop
out
adc
int
dec
inc
addb
jg
adc
imul
mov
in
loope
les
lods
outsl
xchg
mov
push
add
and
enter
jecxz
ljmp
sub
in
dec
lret
pushf
pop
outsl
and
les
aaa
cs
ficomps
popf
js
sub
imull
sbb
lcall
sbb
or
push
outsl
jge
push
jbe
shrb
dec
and
xchg
loop
test
sub
subl
xchg
addl
cwtl
out
lea
mov
push
mov
and
push
sub
mov
inc
mov
xchg
and
or
xchg
mov
pop
clc
jmp
mov
clc
andb
mov
dec
bound
pop
mov
jbe
aam
xor
call
jnp
out
xor
gs
test
inc
and
sbb
add
shll
mov
int3
pop
out
xchg
cmp
aas
add
lret
push
jmp
divl
in
jns
movsb
push
icebp
cs
shlb
sub
sub
push
jns
mov
inc
shll
lea
mov
pop
and
xchg
cs
jecxz
jo
daa
xor
add
mov
scas
frstor
adc
fdivl
stos
xchg
ds
pop
ljmp
xor
aad
xor
adc
aaa
iret
inc
add
stos
mov
mov
sub
xchg
jns
sub
xor
dec
ja
mov
fs
add
push
inc
testl
xchg
push
sbb
xchg
movsl
repnz
stos
cmp
gs
lods
adc
lods
sbb
fnstsw
dec
aad
test
mov
jg
cs
jmp
fxam
jge
mov
leave
sbb
loopne
imul
sbb
cmp
add
push
push
lcall
frstor
mov
lahf
loopne
dec
jle
pop
xor
popa
outsl
sbb
cwtl
xor
mov
lret
add
sbbb
xor
out
ds
fidivrl
and
cmp
mov
test
insl
shll
cli
xor
fdivrl
jns
mov
jno
daa
inc
movsb
push
dec
sarl
icebp
in
adc
sub
shll
xor
lods
inc
addb
lea
dec
pop
jmp
bound
lcall
sub
dec
fistps
push
mov
dec
mov
add
sbb
dec
jl
cmp
mov
mov
xchg
rcll
sub
and
fcomip
lcall
sarl
fs
in
mov
movsl
sbb
jg
ret
fmuls
addb
mov
lcall
movsl
clc
cld
js
jno
je
popf
sub
lock
outsl
jge
pop
test
pop
into
test
xor
cld
sarl
push
dec
mov
jecxz
aaa
jl
dec
sti
cwtl
lock
dec
xor
mov
imul
stc
in
sub
push
sub
inc
push
ljmp
sbb
mov
pusha
push
mov
and
fwait
push
adc
out
rcll
jge
add
insl
or
mov
sub
daa
mov
inc
mov
insl
push
cmc
ss
fs
icebp
jg
inc
pop
test
xchg
adc
inc
jle
push
fstps
dec
adc
stos
jne
repnz
fidivl
inc
xchg
mov
aas
pop
lds
call
xor
or
mov
push
pusha
dec
xchg
and
mov
pop
sub
mov
push
insl
outsb
cmpsb
daa
xchg
in
cwtl
lea
dec
xchg
and
mov
cmp
loop
leave
call
xchg
cwtl
repnz
xchg
sub
or
int
push
xchg
mov
mov
and
lahf
mov
lea
lcall
mov
pop
dec
sarl
lea
pop
and
cmpsl
sbb
sbb
stos
bnd
xchg
jns
add
scas
jmp
stc
xchg
mov
fildl
xchg
sbb
rorl
divb
dec
add
mov
sarl
add
xchg
aas
movsb
rcll
pop
stos
jnp
inc
jmp
pusha
rorl
dec
xchg
and
xor
in
add
pop
push
mov
lods
push
jl
das
adc
mov
mov
mov
jb
ret
stos
das
pop
stos
test
cmp
out
into
mov
lcallw
adc
cmpsb
cmpsl
aam
jno
dec
xchg
sub
addb
enter
mov
cmp
and
dec
sbb
xor
inc
sub
sbb
shrb
pop
scas
leave
mov
rolb
lcall
call
xchg
mov
pop
mov
mov
jecxz
aaa
cmpsl
xor
sub
cmp
ljmp
inc
jmp
add
rorb
ljmp
lcall
and
inc
fcmovbe
lcall
xchg
lock
xchg
cmp
or
jecxz
dec
std
loopne
and
lret
pop
sub
call
out
push
fbstp
xchg
rorb
xchg
pop
add
stos
fldl
add
sarl
xchg
scas
cmp
rep
clc
cld
js
jno
push
rolb
mov
orb
dec
outsb
jg
push
xchg
push
lock
pop
or
cwtl
pop
shll
or
lock
mov
lock
pop
pop
inc
lock
cli
jbe
jo
int
mov
xchg
add
mov
ljmp
pop
fs
mov
je
lahf
jmp
cltd
hlt
adc
sub
sbb
jno
sahf
cmp
and
xchg
fisubl
rorb
mov
sarb
pop
push
sbb
jbe
dec
lods
pop
xor
out
adc
dec
xchg
imul
ss
jo
jecxz
stos
sahf
adc
ljmp
movsl
mov
and
lret
pop
push
mov
fsubrl
sti
xchg
ret
imul
cld
imul
pop
jae
int
sub
in
popa
lcall
movsl
in
add
rclb
inc
sub
xchg
and
in
add
add
test
sarl
push
add
cltd
rcrl
notl
push
jne
ja
mov
in
or
push
out
lcall
pop
inc
pop
or
xchg
sub
xchg
stos
mov
adc
ret
addr16
pushf
xorb
fidivs
ret
in
inc
xchg
push
dec
dec
push
mov
in
cld
sarl
push
dec
adc
sbb
push
inc
sub
pop
dec
mov
mov
adc
out
xchg
rcl
add
movhps
inc
adcb
pop
push
sbb
mov
lock
movsb
pusha
fmull
ffree
dec
mov
out
xlat
jp
fistpll
pop
fldenv
mov
mov
cli
add
pop
pop
dec
arpl
test
or
jae
out
lea
dec
inc
push
xchg
call
and
cld
sbb
jecxz
pop
pop
cld
lret
sbb
imul
sub
sub
or
scas
dec
xchg
sub
mov
pop
in
add
int
sbb
push
mov
jg
pop
mov
jmp
mov
pop
jg
out
sbb
shrl
xchg
jo
xor
jns
push
cmpl
lcall
pop
cmc
aas
jno
in
add
rclb
subl
rorl
mov
fisubs
int
push
xchg
mov
or
enter
sbb
into
xchg
lret
dec
push
jge
ja
data16
aas
lods
xor
sbb
fcoml
add
push
mov
loopne
xchg
pop
mov
rorb
mov
dec
sbb
or
lea
ss
add
push
sahf
xor
or
stc
jmp
add
push
jbe
data16
cmpsb
pop
inc
xlat
inc
cli
movsb
insl
icebp
cmp
push
imul
imul
scas
jb
addr16
xchg
leave
ss
sahf
push
popf
js
sub
imull
mov
add
push
push
adc
dec
add
negl
sub
xchg
in
sub
ljmp
test
ss
addr16
shl
jge
jge
adc
mov
pop
xor
mov
mov
xchg
in
fisubl
sub
and
in
sub
mov
leave
mov
xor
adc
mov
aas
pop
lds
ljmp
rcll
mov
jecxz
mov
push
ret
jns
mov
push
ds
fs
bound
stos
sub
inc
pop
dec
or
sbb
sub
mov
adc
inc
push
xchg
xchg
ficompl
or
mov
xchg
and
imull
mov
mov
lcall
xor
or
mov
mov
jno
sbb
dec
and
xchg
test
mov
ret
lock
dec
xchg
into
data16
pop
pop
push
shlb
jg
push
xchg
push
lock
pop
or
cwtl
pop
shll
or
lock
in
sbbb
sub
ror
sbb
ret
pmaxub
sub
mov
or
aam
adc
xchg
push
push
sub
xchg
mov
pop
cmc
adc
das
jl
das
pop
call
repnz
mov
popf
lds
xchg
and
xor
dec
xor
insl
or
out
das
cmp
pop
jmp
cmp
aas
mov
test
sbb
cs
cmpsb
nop
xor
mov
fidivs
cltd
pop
jmp
push
cmpb
add
add
jmp
lea
gs
out
mov
in
cli
arpl
mov
add
pop
push
and
push
sbb
aas
xorb
loope
or
mov
fistl
mov
inc
adc
jbe
lea
hlt
jnp
mov
in
pop
mov
push
loope
repz
xor
imul
xor
fwait
in
nop
in
repz
push
idivl
int
pop
fstl
imul
in
ret
imull
add
call
popf
push
mov
ret
pop
jnp
xor
cld
mov
ret
aad
jmp
add
xchg
xor
insl
fidivl
mov
xchg
mov
fisttps
js
push
sbb
xchg
hlt
and
int3
inc
xchg
sub
movsl
sbb
push
aam
jp
lea
mov
fnstenv
sub
in
das
adc
pop
mov
orb
add
inc
sub
pop
pop
aaa
cs
imul
icebp
std
in
xor
movsb
cmp
pop
pop
push
sbb
xchg
jp
xlat
lcall
movsl
dec
xchg
and
loop
push
ja
fwait
addl
mov
lcall
nop
push
adc
daa
lahf
sbb
stos
nop
ret
push
add
add
stc
lea
leave
push
dec
inc
xchg
and
int
iret
int3
jne
cmp
ret
or
jno
lea
faddl
dec
xchg
xchg
cmp
push
sub
stos
mov
and
sub
out
cmp
dec
lods
pop
xor
lretw
bound
xchg
sub
dec
pop
jmp
hlt
arpl
testl
aad
xchg
pop
outsb
bound
movsl
out
jne
jbe
shrl
jmp
sub
dec
daa
xor
and
inc
pop
jae
cmpsb
mov
jae
insl
stos
jge
pop
jae
int
and
sbb
mov
or
das
push
push
arpl
mov
dec
jge
cmc
or
data16
push
in
pop
pop
clc
mov
pop
popa
scas
jl
bound
nop
and
lahf
nop
cmp
xchg
andl
orl
subb
push
loop
addr16
aam
jmp
into
mov
lock
bound
enter
out
add
in
frstor
es
sbb
pushf
xor
test
pusha
or
in
lea
daa
sbb
sbb
imul
add
imul
fs
and
xor
imul
push
lahf
lds
hlt
fsubrp
popf
lahf
jl
cmp
bound
add
adc
fnstsw
pushl
and
outsl
ficoml
sbb
out
or
loop
lea
push
cmp
sbb
scas
mov
ss
sbb
iret
mov
jmp
jo
mov
and
xchg
fisubl
mov
add
inc
sbb
jnp
das
pop
aas
inc
mov
jae
jnp
aad
test
add
inc
addb
hlt
arpl
sahf
stos
mov
mov
lret
sarb
jp
in
jno
addr16
rcrb
push
in
add
mov
and
sub
mov
adc
pop
mov
ljmp
out
fcmovne
insb
jno
in
add
ret
sti
dec
dec
xchg
and
cmp
xorl
or
call
mov
dec
jp
xorb
fidivl
pusha
rcrl
fwait
ror
test
ret
sar
pop
in
cmpsl
popf
push
mov
ret
pop
out
push
mov
adc
outsb
jnp
mov
jb
xchg
dec
push
jmp
or
scas
arpl
inc
dec
fsubrp
cmp
mov
in
cmp
negl
inc
loope
ret
in
cmpsb
mov
xchg
out
bnd
in
imul
fs
add
push
inc
push
push
or
mov
mov
leave
sub
adc
pop
mov
bound
das
push
inc
and
ror
js
jns
aas
push
add
mov
mov
push
mov
jg
push
imul
sub
aad
add
or
arpl
mov
or
leave
sbb
loopne
ds
add
add
or
mov
xchg
int
test
pop
cmp
into
inc
or
out
mov
imul
lcall
and
icebp
mov
pop
mov
es
and
adcb
mov
pop
adc
mov
jle
mov
jmp
popa
pop
out
or
jno
sbb
pop
outsl
sub
dec
or
shlb
pop
bound
dec
xlat
cmp
aad
xchg
push
add
cmpl
aam
push
pop
int3
push
ljmp
xlat
cmp
push
fildll
mov
imulb
or
mov
popf
les
push
mov
adc
jmp
outsb
dec
jge
cmp
mov
or
rorl
xchg
push
pop
test
jne
jmp
ja
ds
sbb
fisttpll
imulb
cld
aad
popa
iret
push
repz
dec
add
fimull
rcrl
pop
je
push
subb
cwtl
mov
cmp
mov
jl
in
out
cmpsl
jmp
call
mov
dec
lods
sub
imull
inc
mov
push
fs
shlb
lea
mov
cmp
xlat
lret
jge
pop
add
xor
js
sbb
repnz
mov
cmp
sbb
lret
xorb
movsl
jnp
outsl
in
fst
mov
rcrl
shll
and
adc
dec
in
or
xchg
cmp
cmp
sbb
lds
add
mov
sbbl
negl
pushf
jg
push
fdivl
add
jbe
pop
mov
imul
data16
call
mov
test
or
add
imul
test
leave
scas
nopl
lods
push
mov
fistpll
push
mov
lret
and
jae
loope
pop
test
dec
add
push
inc
push
push
or
mov
mov
dec
xchg
and
mov
imul
pop
out
cmp
cltd
and
push
inc
inc
mov
sti
mov
lahf
jl
cmp
movl
or
lret
jg
push
lock
cmpsl
jb
mov
js
aaa
xor
add
jmp
ljmp
mov
repz
cli
loopne
call
fwait
mov
mov
call
or
add
icebp
mov
cmp
into
pushf
int3
mov
call
out
cmp
leave
adc
aas
pop
push
mov
jo
pop
enter
dec
adc
sbb
jno
das
sbbb
insl
bound
adc
dec
cmp
mov
pusha
push
fbstp
cmp
in
add
mov
dec
sbb
mov
lret
int3
and
call
lcall
ljmp
into
add
popf
inc
jne
ret
and
in
inc
and
test
cmp
inc
pusha
rcrl
fwait
ror
cmp
ret
xor
mov
in
mov
movsl
sbb
jg
ret
fadds
xchg
mov
push
and
lds
pop
addr16
jno
fucomip
adc
ljmp
push
dec
in
cmp
or
mov
mov
leave
sub
adc
pop
push
iret
lock
les
mov
lods
push
jl
lock
mov
pop
jns
test
mov
mov
push
imul
sub
aad
add
or
arpl
mov
insb
inc
push
sub
test
lret
call
out
ret
test
add
mov
mov
push
inc
push
aaa
pop
fdivrl
inc
push
sbb
pop
jne
test
adc
mov
add
testb
ljmp
inc
and
es
fimull
sbb
mov
jo
notb
aaa
and
outsl
mov
dec
cmp
push
add
jo
dec
inc
push
pop
jne
pop
js
mov
sub
add
adc
out
fdivrs
idivl
call
out
stos
das
sub
add
cmp
dec
cmpsl
push
fldl
mov
andl
jle
xchg
movsb
xchg
lcall
and
imul
add
dec
aaa
xchg
ja
fsubr
test
cmp
lock
xchg
add
mov
sahf
cltd
or
adc
cmp
xchg
jae
push
nop
jl
mov
je
adc
out
testl
dec
pop
and
in
inc
push
negb
and
lods
lret
shl
xlat
jp
fistpll
or
adc
xchg
enter
pop
lea
xchg
mov
xchg
repnz
arpl
or
sub
in
repnz
out
fwait
xor
mov
jbe
gs
test
sub
rcrl
inc
mov
push
jl
jb
xchg
xchg
nop
mulb
sbbb
lock
xchg
mov
shll
and
push
call
shrb
mov
jb
aaa
cmp
mov
sbb
inc
push
dec
inc
adc
movsb
xchg
dec
aad
adc
insl
fidivrl
adc
out
fdivrs
insl
sub
movl
lea
mov
mov
lret
addl
inc
nopl
mov
cmc
xor
ja
ds
sbb
fisttpll
mulb
and
sub
dec
inc
mov
push
sbb
mov
movsl
in
fbld
mov
sahf
xor
or
stc
push
lock
sub
dec
outsb
dec
cmp
ja
loopne
es
popa
and
fimull
mov
or
dec
outsl
xor
pop
ret
xchg
push
repz
push
mov
jg
push
ljmp
xor
mov
movsb
pusha
cmp
sbb
mov
je
bnd
rolb
daa
sbb
xchg
int
test
pop
cmp
mov
adc
sub
pop
xor
popa
outsl
sbb
cwtl
xor
addr16
ret
fwait
mov
inc
dec
xor
adcl
in
fiadds
xchg
sub
setae
inc
dec
leave
je
push
pop
outsl
shlb
in
sti
mov
imul
ss
shll
xchg
int3
inc
xchg
sub
inc
aam
xor
cmp
push
les
cwtl
push
dec
jno
repnz
push
mov
cmp
scas
fsubl
call
test
push
out
jnp
add
mov
repz
mov
mov
daa
sub
cmc
jno,pt
movb
gs
push
cmp
out
sbb
jecxz
dec
std
loopne
and
sub
das
pop
test
or
mov
pop
popa
scas
jl
add
xor
pusha
push
push
inc
add
das
pop
movsl
cli
stos
or
int3
rorb
cmp
mov
addb
mov
popa
mov
push
push
xchg
scas
les
enter
enter
jg
pop
mov
mov
pop
or
ljmp
sbb
push
inc
inc
inc
inc
mov
popf
sti
or
lock
in
mov
pop
ss
fcmovu
call
sub
test
mov
adc
or
mov
leave
xlat
jbe
shll
dec
xchg
and
mov
shrb
dec
es
ficoms
mov
fbstp
cmp
pop
jmp
movb
sub
rorl
das
jecxz
stos
enter
repz
cmpsb
js
xor
sbb
push
mov
sarl
hlt
lret
mov
mov
addr16
rcrb
mov
loopne
and
or
fcmovne
repnz
pop
jnp
xchg
inc
jno
gs
stos
push
shlb
cmc
dec
sbb
cmp
xorl
popf
cmp
mov
push
sbb
pop
inc
xchg
jo
jne
and
sub
jp
cmpsb
xchg
aaa
in
mov
inc
shll
sub
inc
mov
adc
xchg
and
xor
in
ret
add
pop
mov
pop
adc
clc
dec
pop
jecxz
push
mov
pop
sub
dec
addb
dec
add
mov
pop
xchg
push
push
pusha
dec
jnp
dec
xchg
sub
and
jle
lods
jbe
pop
idivl
xor
cli
xor
aaa
cmp
fsubrp
popf
lahf
jl
dec
jmp
stc
sbbb
cmpsl
shrl
test
into
adc
mov
adc
mov
cs
ret
adc
add
scas
lcall
push
adc
mov
dec
xchg
xor
insl
in
and
in
add
mov
cld
nop
adc
xchg
iret
xor
clc
adc
mulb
mov
jno
in
data16
push
sbb
sub
push
lret
ror
in
xchg
xchg
nop
mulb
or
dec
add
mov
enter
jle
insl
mov
rcrl
jo
aas
mov
pop
or
xlat
mov
adc
sar
xchg
lock
pop
push
mov
push
pop
and
cmpsl
hlt
in
stos
jne
scas
push
adc
shlb
and
cltd
jno
lods
fstpt
pushf
insl
inc
xchg
push
and
mov
fldt
ljmp
daa
xchg
mov
loop
fstl
cmc
xor
mov
mov
lahf
jl
cmp
bound
add
adc
or
fidivs
sub
movsl
addl
in
cli
xchg
lods
push
push
xor
les
mov
cmp
jle
push
imul
lods
pop
dec
push
add
cmp
dec
xor
mov
imul
cmp
inc
jg
pop
adc
icebp
ss
arpl
test
lret
cmp
mov
jne
in
imul
aad
int3
test
shll
pop
enter
dec
jmp
push
sub
jb
jp
sti
out
dec
mov
fxch
dec
es
into
aaa
xor
mov
add
jns
xor
sti
sbb
cld
dec
loope
sbbl
movsb
dec
aas
cmp
mov
stos
imul
and
lds
shlb
mov
out
sub
add
pop
pop
mov
cmp
and
lret
cmp
add
movsl
add
aas
pushf
pop
pop
je
ljmp
fisubl
jns
fcoml
inc
clc
xchg
adc
inc
addb
or
push
sbb
sbb
rclb
dec
mov
out
mov
mov
fwait
mov
dec
repnz
frstor
mov
sub
std
pop
dec
int3
jp
xor
imul
pop
mov
loopne
data16
xor
shll
sbb
add
inc
fsubrs
xchg
je
ljmp
pop
lods
inc
xor
test
mov
rol
iret
aad
adc
pusha
call
pop
add
push
push
neg
jmp
xchg
and
dec
test
not
std
inc
repnz
pop
pop
popa
jmp
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
mov
jmp
pushf
movsl
jp
mov
inc
pop
xor
jmp
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
movsb
xorl
jle
jmp
fidivrs
js
xchg
push
push
rcl
cmp
push
pop
cld
pop
pop
pop
jmp
nop
mov
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
shr
jg
xchg
stos
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
cmp
je
push
push
pop
jmp
xchg
popf
adc
loopne
pop
aas
push
jmp
or
push
clc
mov
add
pop
jmp
shll
aaa
movsb
or
jmp
das
cmp
sbb
inc
out
aam
push
pop
jmp
jb
inc
sub
jmp
jns
pop
insb
xor
mov
jmp
in
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
jmp
xlat
les
jmp
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
add
add
push
push
pop
jmp
cmp
jbe
in
notb
add
add
dec
add
adc
dec
outsl
jl
pop
mov
es
push
pop
jmp
mov
add
add
jne
jnp
icebp
push
mov
add
pop
jmp
inc
sub
push
jmp
in
imul
xchg
add
push
loopne
pop
add
add
jecxz
cltd
pop
sub
jmp
aas
or
push
pop
push
push
jmp
ss
movsb
or
jmp
ret
or
das
cmp
sbb
inc
out
jl
add
push
push
mov
xor
add
jne
push
pop
push
pop
xor
cmp
cld
pop
pop
pop
jmp
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
jmp
shr
sub
into
out
cld
test
or
add
jmp
addl
jmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
xor
jmp
mov
test
sub
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
movb
mulb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
xorb
push
push
push
pop
rol
mov
lea
shl
neg
xor
cld
pop
pop
rol
push
push
shl
shl
repnz
pop
pop
inc
push
push
pop
jmp
push
inc
sub
fsubr
add
add
mov
scas
sub
pop
jmp
dec
fsub
mov
inc
je
adc
loopne
add
jmp
or
push
clc
rorl
test
or
add
ss
movsb
or
push
push
pop
jmp
dec
sub
daa
aam
jb
inc
jns
pop
insb
add
jmp
xor
pop
push
push
pop
jmp
and
pushf
movsl
jp
push
mov
jmp
mov
adc
or
add
and
xor
shlb
mov
jmp
mull
inc
adcb
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
in
mov
lea
jmp
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
mov
test
xor
imul
stos
or
adc
add
xor
xchg
mov
cmp
mov
not
neg
repnz
pop
pop
pop
add
jmp
jg
xchg
stos
fwait
cmp
jbe
in
add
push
jmp
outsl
jl
pop
mov
es
mov
cmpb
fs
pop
lods
jne
jnp
icebp
sub
jmp
push
inc
sub
scas
dec
fsub
mov
jmp
je
adc
aaa
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
ret
