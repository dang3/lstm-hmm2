bound
jae
imul
mov
loop
nop
xor
lea
inc
jp
decb
push
sahf
jnp
dec
mov
aas
gs
mov
dec
mov
pop
cwtd
push
sbb
sbb
lret
cmpsl
test
add
icebp
std
lock
mov
lret
push
xchg
movsl
ss
ficomps
jbe
push
les
cmp
pop
lds
inc
sub
out
hlt
orb
nop
or
daa
xchg
mov
aam
pop
sbb
lahf
sti
stos
fmull
push
imul
loop
or
out
mov
push
lods
lods
jecxz
sbbb
mov
inc
jmp
pop
lds
icebp
in
xchg
push
movsb
sbbl
adc
xor
or
xor
jmp
lahf
and
jle
cs
pop
test
mov
fisubrs
movsl
enter
xor
sbb
fwait
cwtl
lcall
push
and
sahf
mov
push
add
into
bnd
xor
lods
and
pop
ret
mov
in
fcmovnbe
dec
push
sbb
popf
fisttpl
sbb
jmp
push
sbb
out
inc
fsts
aas
mov
cmpb
fwait
push
jl
xchg
in
test
sahf
pop
mov
sub
sahf
out
cwtl
or
popa
or
nop
fisubrs
and
insb
mov
mov
mov
xchg
call
xor
inc
mov
ljmp
mov
mov
pop
jno
mov
lahf
push
add
or
jnp
gs
pop
adc
xor
or
jg
enter
mov
and
ret
ret
and
lods
push
repnz
pop
and
lret
mov
mov
inc
xorl
cmpsl
xchg
lods
ror
ja
pop
mov
mov
aas
shlb
cs
sbb
bound
bound
insb
iret
dec
adc
fwait
dec
das
out
ja
loop
push
xor
lds
mov
pop
jmp
adc
jg
pop
lcall
pop
loope
loopne
sbb
jne
pop
outsl
push
lret
xchg
inc
fsub
into
push
inc
mov
xor
sub
rorb
test
add
iret
dec
sub
fs
outsl
stc
xchg
xor
and
dec
push
mov
sub
inc
popf
out
test
sbbl
mov
hlt
sbb
jle
push
mov
lret
pop
jecxz
in
mov
cmp
sub
aad
push
fbld
jno
mov
jno
nop
add
adc
pop
jae
loope
test
out
sahf
enter
cld
fs
shr
sub
mov
lods
cmp
and
jns
mov
ljmp
sbb
and
inc
into
fmull
push
xchg
rcrb
ss
icebp
and
push
sub
pop
pop
inc
adc
rcrl
flds
mov
in
scas
test
gs
mov
cmpsb
mov
sbbl
jp
adc
mov
push
push
outsl
add
xlat
xchg
and
sti
pop
jno
dec
shr
lock
dec
dec
scas
lahf
fwait
xchg
cwtl
adc
sbb
mov
out
cmpsl
orl
dec
and
xchg
push
dec
sub
push
fldt
in
rclb
insb
daa
jge
cmp
inc
mov
or
movzwl
lahf
sbb
inc
and
fsts
sub
xor
mov
sub
xchg
clc
pop
pop
mov
mov
mov
arpl
mov
cli
ja
lock
dec
adc
cmp
or
push
sbb
dec
pop
fdecstp
arpl
cld
dec
repnz
mov
push
or
dec
sub
xchg
lods
and
les
rolb
mov
cmp
ljmp
pusha
mov
pop
xchg
mov
push
adc
test
js
mov
push
jle
lock
ds
xlat
inc
cmpsb
push
xchg
ficoms
xor
in
inc
dec
mov
cli
sbb
js
sub
cltd
adc
test
xchg
fs
pop
mov
jp
retw
jns
jbe
mov
ret
xchg
fidivrs
push
jbe
shll
dec
inc
ret
mov
jge
dec
movl
outsb
data16
mov
dec
and
aaa
dec
aam
adc
cmpsb
inc
pusha
mov
sbb
mov
adc
or
movb
sub
or
push
mov
xchg
cld
push
fwait
xor
push
xor
dec
push
or
out
mov
cwtl
jns
add
hlt
flds
and
jp
jae
addl
test
push
es
pop
dec
shll
xor
std
pop
clc
jecxz
inc
cmc
adc
std
or
das
xchg
or
cmp
shll
imul
cli
pop
push
jge
xor
lods
jne
out
add
inc
data16
mov
movsb
dec
jbe
mov
xor
shrl
cmp
out
push
sbb
mov
in
cmp
inc
out
in
or
pop
adc
pop
sahf
sub
push
fimuls
shll
cmp
mov
nop
in
sbb
rcrb
cmp
cmpb
lock
call
or
push
daa
push
push
push
xor
cmc
scas
sbb
dec
add
xor
mov
jmp
pusha
sub
sbb
clc
adc
add
sbb
aad
mov
addr16
push
xor
add
lret
movsl
or
test
dec
fwait
push
add
fdivrs
mov
xchg
cmp
in
gs
in
sub
pusha
mov
out
lods
inc
movsb
dec
mov
lods
dec
xchg
insl
pop
pop
in
imul
xchg
rolb
ret
les
pop
stos
inc
ja
imull
add
in
inc
dec
lahf
dec
dec
and
mov
inc
xor
rcll
in
outsb
inc
pop
mov
jmp
sub
push
sub
push
clc
pushf
or
mov
jmp
jbe
and
pusha
pop
cmp
popf
xchg
cmpsl
or
lods
jo
push
scas
xchg
push
loopne
push
cmpsl
sahf
cli
xor
test
push
out
outsl
push
xor
movlps
inc
adc
out
mov
and
xor
pop
inc
jne
fwait
outsb
push
pop
mov
setbe
scas
imulb
add
icebp
sub
jns
push
rorb
mov
inc
mov
cld
push
mov
mov
lods
sub
scas
xor
leave
push
xor
pop
sbb
inc
testb
or
sbb
cli
enter
shlb
movsb
insl
lods
addr16
flds
out
mov
xlat
or
sti
movsl
stos
push
push
aaa
mov
iret
ret
cwtl
sbb
sbb
cli
dec
stc
mov
inc
mov
push
xor
popa
cmpb
inc
pop
cmp
sbbb
push
nop
sub
fidivrl
jg
adc
clc
je
mov
adcl
xor
push
fadds
int
pop
sub
mov
mov
and
je
xchg
xlat
rcrb
mov
xchg
xchg
push
mov
lods
pop
dec
mov
dec
movl
fistl
mov
ljmp
aam
ljmp
es
inc
pop
add
hlt
sub
scas
mov
push
ss
pop
les
out
dec
movsl
or
cmpsl
sbb
xlat
cmpsl
inc
or
cld
arpl
into
mov
xchg
test
xor
jmp
shll
pop
out
arpl
popf
xchg
push
shr
pop
mov
mov
inc
xchg
pop
mov
sarl
mov
insb
cmc
cmp
sti
sub
movsb
dec
sarb
mov
mov
popf
inc
pop
es
push
cmp
outsb
mov
rcrl
jnp
adc
out
sti
cmp
mov
loope
adc
in
jge
sbb
pop
jb
js
das
test
cmc
add
pop
js
inc
neg
out
jl
jb
jle
imul
add
xlat
jne
mov
adc
lret
fiadds
sbb
ret
add
das
jp
jp
cmp
call
ljmp
and
scas
je
int3
roll
push
repnz
dec
add
mov
mov
icebp
mov
jo
sbb
roll
sarb
adc
lahf
xchg
sub
jns
loopne
insb
dec
and
call
pop
or
scas
in
mov
ljmp
bound
or
jb
and
inc
push
mov
mov
test
sub
addr16
adc
icebp
pop
dec
mov
repz
push
mov
or
cmc
sbb
jns
jp
dec
adc
iret
or
lret
outsb
sbb
mov
xor
mov
hlt
fidivl
jl
add
push
jae
mov
cmp
or
outsl
loop
js
adc
mov
adc
inc
push
lock
stos
pop
icebp
sbb
ret
inc
mov
or
xor
jl
and
bound
clc
sbb
bound
ja
push
lods
push
fadds
or
mov
cmp
cmp
sti
xchg
iret
daa
cs
push
lahf
dec
jnp
pop
lea
icebp
inc
aas
pop
rclb
les
xor
xor
in
pop
mov
jp
lcall
aas
insb
add
stc
pop
out
cmpsl
outsl
shrl
scas
arpl
jmp
ljmp
sbb
fwait
mov
adc
inc
push
push
push
gs
push
xchg
jns
out
and
add
fisttps
add
lret
lcall
ds
ds
sbb
cmp
lret
inc
mov
unpckhps
negb
pop
test
dec
or
lcall
dec
out
lock
dec
in
pop
out
cld
jns
push
push
cld
xor
outsl
ss
xchg
mov
xchg
cld
loope
jae
jg
or
xlat
cmpsb
sti
push
or
aam
icebp
out
mov
mov
xchg
sub
or
sub
out
scas
lock
stos
xor
es
out
loop
cmp
pop
xlat
fnstenv
mov
mov
push
push
xchg
imul
out
vmread
adc
popf
jo
sbb
push
jmp
rorl
mov
pop
dec
inc
adc
icebp
cmp
mov
loopne
repnz
inc
scas
dec
push
push
dec
out
lret
out
out
mov
into
test
push
sbb
fcmovnb
stos
mov
lret
and
and
push
mov
pop
pusha
and
fwait
mov
xor
ljmp
push
mov
xor
pushf
sbb
insl
clc
xor
lret
cmp
sti
cmp
dec
sub
mov
ja
mov
lea
pop
out
jmp
imul
pop
and
xchg
push
mov
push
std
mov
xchg
sub
mov
dec
xor
xlat
outsl
sbb
bound
scas
pop
mov
xor
push
cmp
xchg
add
ja
jae
pusha
xchg
xchg
jbe
sbb
sti
pop
lods
push
repnz
mov
push
das
mov
aad
mov
cmp
sub
pop
testl
repnz
mov
xchg
sub
mov
and
nop
enter
adc
mov
dec
lret
cmc
mov
add
mov
mov
pop
imul
mov
mov
rcll
or
or
mov
lods
daa
jle
or
loop
adc
scas
mov
in
fs
mov
outsb
fsubrl
subl
jle
push
cltd
inc
stos
jb
pop
pushf
dec
pop
adc
sti
push
push
je
shll
addl
lret
push
stos
jle
cmp
daa
cltd
arpl
xor
stos
push
pop
sbb
xchg
bound
notl
mov
sub
adc
xchg
test
out
cmpsl
je
dec
mov
mov
cmc
pusha
sbb
and
mov
fisubrl
cmc
mov
int
pop
mov
pushf
hlt
gs
xchg
sub
mov
iret
add
dec
pop
push
pop
int3
cs
in
adc
jae
daa
repz
xlat
xor
movsb
mov
xchg
test
inc
pop
insl
dec
pop
push
xchg
ret
mov
addr16
pop
push
enter
popf
lcall
lea
ljmp
xchg
pop
and
out
jl
jp
inc
jp
dec
jno
repnz
fiadds
mov
loop
daa
imul
jae
dec
push
sub
call
pop
mov
jp
call
fistl
ja
nop
push
cs
fld
mov
fstl
js
jg
ret
cmp
mov
fdivs
popf
mov
shrb
cmp
mov
pop
aam
movsb
xchg
add
push
cmp
and
sub
movsb
out
dec
xor
cmp
sarb
scas
lods
push
mov
jb
ss
lret
jecxz
leave
or
xchg
cmc
pop
push
outsl
or
mov
gs
pop
inc
cmp
add
inc
fs
mov
xchg
xchg
in
jg
dec
rolb
lret
add
addr16
adc
inc
jae
push
sbb
enter
pop
pop
ror
xor
and
rolb
xlat
sub
xor
rcrl
test
insl
add
jnp
pop
xor
jge
cmc
mov
cmpsb
es
cmp
dec
mov
pop
xor
pop
loopne
arpl
xor
add
repz
mov
sti
xchg
inc
fcoms
jbe
cmpsb
addl
addr16
jnp
sub
jo
adc
jmp
mov
adc
inc
and
loope
push
pop
sub
dec
sbb
pop
inc
sub
out
add
andl
icebp
in
add
inc
pop
jl
jb
es
shlb
xlat
aas
repz
adc
fldcw
enter
cltd
jmp
xor
call
rcrl
les
push
call
jle
ja
cli
ja
mov
iret
fildl
jnp
and
add
inc
scas
scas
mov
push
and
pop
cmpsl
lea
sahf
cmp
lods
mov
stc
mov
fwait
test
adc
lea
leave
in
pop
or
outsl
fcoml
test
outsb
pusha
std
push
cmp
test
out
mov
repz
test
lahf
inc
scas
je
inc
lock
dec
sbb
inc
or
ret
or
pop
mov
jmp
cwtl
mov
push
cltd
xchg
push
outsl
push
adc
sub
and
pop
test
jl
lea
fmuls
ja
add
adcb
dec
and
mov
mov
push
sub
lock
in
and
xor
es
sub
jge
sub
clc
push
fstps
test
insl
orb
push
xor
cmpl
mov
test
loope
jp
jae
in
out
mov
sub
repz
adc
sbb
mov
loop
cltd
imul
scas
push
xchg
lret
sub
rorb
push
cmc
aad
out
and
dec
add
xchg
shrb
test
push
jmp
popa
notrack
xor
adc
aaa
pushf
inc
jmp
pop
out
pop
lds
nop
iret
fdiv
inc
mov
push
xchg
dec
sahf
shll
adc
mov
or
hlt
sti
or
cwtl
pop
xchg
loopne
in
rcrl
addr16
icebp
cmp
std
jge
sub
int3
mov
sti
mov
loopne,pt
repnz
jo
pop
dec
jge
lcall
cmc
jo
jge
inc
dec
fcmovb
enter
mov
movl
or
dec
fildll
pop
stos
fs
jb
pop
mov
pop
nop
pop
push
sbb
sbb
int
in
dec
mov
inc
int3
daa
idivl
loope
push
test
fs
les
sbb
cmpsb
mov
sbb
mov
in
pop
in
cmpsb
mov
push
sbb
mov
adc
ror
inc
pop
lret
fsubrl
gs
mov
cltd
ret
dec
test
pusha
lret
stos
sbb
cmp
movsb
jb
fcmovnbe
mov
sbb
cmc
fsubr
fucomp
movsl
out
lock
mov
cmp
mov
jmp
jle
pop
mov
das
push
cmp
stos
hlt
outsb
add
ss
aam
pusha
jae
stc
in
xchg
adc
mov
pop
stos
mov
sar
cmp
or
es
push
pop
push
insb
lret
dec
jae
pop
push
nop
jg
add
and
shll
jl
xor
mov
lock
push
call
push
cmp
push
xor
push
jno
mov
outsl
xor
push
pop
test
sbb
mov
xchg
mov
lds
cmp
imul
cmp
sti
es
imull
push
popf
inc
adc
cs
je
dec
pop
mov
jbe
data16
fnsave
out
fidivrs
add
add
xor
cmp
shll
push
adc
leave
sbb
lahf
mul
push
sbb
jmp
lahf
shlb
shlb
scas
aam
lret
xchg
cmp
movsb
icebp
pop
mov
hlt
cmp
jae
lret
pop
cmpsb
sub
mov
mov
jne
out
fsubs
sub
mov
adc
iret
pop
and
notl
rcl
imul
lods
xchg
push
add
outsl
mov
and
inc
les
inc
jg
inc
push
adc
jb
push
xchg
aam
adc
inc
add
imul
mov
dec
lea
and
cltd
out
loop
or
add
out
dec
lret
jge
xlat
out
pop
sbb
jo
mov
cmc
imul
mov
adc
js
pop
or
movsl
ret
mov
or
popf
jbe
out
and
mov
pop
arpl
sarl
mov
and
jno
pop
dec
mov
add
push
add
test
loopne
mov
xchg
cli
shr
ret
push
movb
inc
sub
xor
push
pop
lods
push
cmp
mov
xor
xor
sub
pushf
mov
cmc
imul
aaa
popf
adc
jecxz
and
lds
push
pop
add
xor
mov
mov
shl
icebp
repz
cmpsb
scas
imul
mov
imul
mov
lea
aas
inc
cmp
js
xchg
mov
pushf
fsub
add
cmc
add
pop
sub
and
mov
xchg
and
lds
outsb
adc
push
add
je
insl
cmpsl
sbb
sbb
dec
insl
sbb
outsl
push
xchg
lret
pop
bound
dec
out
aad
mov
cmp
pop
xor
call
or
xor
in
dec
stos
mov
xchg
lock
pop
lret
xchg
mov
subb
cmp
into
add
sub
add
mov
das
in
popa
lret
aad
movsl
fcmovnbe
sbb
ficoml
add
xor
xor
stos
cmp
fs
fisubrs
and
clc
ret
xor
push
imull
pop
stos
pop
cld
repz
xor
sub
fstps
in
aas
xchg
mov
or
and
push
out
inc
enter
mov
jae
push
lods
xchg
push
adc
inc
ror
mov
lret
push
js
test
imul
aas
pop
jp
fs
xor
int3
xor
cltd
xchg
or
orl
insl
cmp
imul
lret
lods
dec
ret
imul
jecxz
test
jl
lods
rcl
sbb
mov
insb
cli
rcrb
push
jo
cmovle
dec
and
add
je
mov
or
and
jmp
imul
cmp
fimull
movsl
mov
repnz
or
sub
push
lret
in
and
aaa
jno
lcall
call
push
imull
cli
into
insl
sti
int3
fbstp
add
stos
or
nop
cs
pop
sub
jns
xor
or
mov
and
xchg
cmpsl
stos
and
popf
loopne
mov
das
ret
cmpsl
sbb
or
adc
push
push
cmp
mov
jl
hlt
fwait
inc
mov
cld
inc
xchg
xor
ds
jp
pop
loopne
and
pusha
jbe
xchg
mov
cmpsl
ret
ret
scas
cmp
xchg
push
mov
bndstx
and
push
mov
xor
xlat
push
mov
adc
or
cmpsb
mov
pop
insb
xchg
ret
fsts
pop
mov
sub
aad
dec
negb
out
or
sbb
lcall
mov
out
daa
imul
in
inc
jle
enter
pop
loope
cmpsb
xchg
ljmp
in
rorb
insl
sbb
mov
adcl
xchg
pop
inc
shlb
aas
sub
lcall
mov
sub
mov
jns
xor
lods
imul
imul
adc
adc
pop
and
dec
into
mov
dec
mov
or
mov
pop
dec
pop
adc
sbb
inc
sbb
ret
cltd
xlat
js
movsb
fsub
fmuls
push
mov
pop
cmpsb
add
ds
ret
dec
push
dec
inc
mov
mov
nop
sarl
push
inc
push
cmp
add
cmp
cltd
jnp
cmc
iret
dec
rcll
sub
xchg
or
cltd
lcall
into
popa
mov
mov
bound
aaa
sub
ret
das
idiv
mov
adc
mov
add
ret
and
test
movsb
mov
inc
push
jnp
pop
test
push
popf
cmpsl
lret
ss
cli
and
sbb
ret
in
jmp
jne
int3
add
outsb
div
ja
add
inc
dec
fsubrl
popa
inc
adc
ljmp
xchg
aad
sub
or
mov
and
sbb
fwait
repnz
clc
pop
dec
lock
aam
cli
inc
mov
mov
add
into
fsub
pop
adc
out
cwtl
fdivrl
inc
and
inc
les
fisubl
pop
add
sub
xchg
mov
outsb
pop
xchg
xor
mov
mov
cmp
mov
push
mov
dec
pop
lea
lea
cmovle
mov
push
mov
cld
pop
nop
pusha
jae
mov
bsf
mov
push
pop
push
xor
mov
mov
mov
pop
add
rcr
mov
mov
lea
call
lods
bsr
mov
rcl
push
mov
cmovge
adc
push
pop
and
js
mov
cmovno
push
push
movsbl
dec
pop
dec
pop
mov
cmovp
pop
pop
js
mov
not
mov
mov
mov
adc
mov
jmp
mov
mov
mov
sbb
push
push
nop
pop
mov
pop
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
jbe
mov
mov
dec
clc
mov
push
cld
pop
mov
mov
cmovnp
mov
mov
mov
jmp
mov
push
cld
pop
mov
mov
and
mov
xor
push
pop
mov
xor
xor
dec
je
mov
mov
inc
mov
shr
mov
dec
xor
cmp
mov
mov
mov
inc
stc
jmp
jmp
call
call
push
push
mov
mov
pop
mov
mov
mov
mov
push
mov
or
mov
push
jb
dec
pop
xor
test
pop
pop
jo
js
mov
je
push
cmovne
pop
push
mov
jmp
mov
inc
inc
pop
push
ja
inc
clc
pop
shl
push
nop
pop
js
push
inc
pop
push
pop
inc
dec
push
pop
push
mov
pop
push
push
mov
pop
mov
pop
lea
push
mov
test
cld
pop
lea
lea
dec
mov
add
lea
lea
lea
lea
push
stc
mov
pop
lea
lea
push
lea
cmova
pop
lea
lea
mov
lea
lea
push
stc
pop
lea
lea
lea
bsf
dec
add
call
sti
mov
mov
push
mov
lea
push
pop
xor
pop
pop
push
lea
inc
pop
call
mov
inc
push
mov
lea
lea
lea
lea
cmp
lea
lea
jno
mov
mov
nop
pop
pop
lea
push
mov
cld
pop
call
fcoml
lea
mov
pop
pop
pop
mov
mov
xchg
call
cmp
add
add
add
add
in
lea
lea
call
stos
lea
test
push
mov
xor
dec
pop
pop
mov
clc
pop
pop
lea
call
xor
in
call
clc
lea
lea
mov
lea
push
mov
pop
pop
lea
test
dec
inc
pop
pop
lea
inc
lea
lea
mov
lea
lea
bsr
push
add
mov
pop
lea
mov
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
ja
lea
lea
jb
mov
mov
ja
push
mov
pop
lea
lea
lea
lea
lea
lea
lea
xor
lea
lea
lea
lea
lea
lea
lea
lea
jbe
mov
lea
lea
lea
lea
lea
lea
mov
test
dec
testl
jne
jmp
js
lea
lea
xor
cmp
dec
cmp
dec
push
add
pop
push
lea
pop
lea
lea
lea
lea
lea
lea
lea
lea
lea
push
xor
pop
push
add
pop
jns
lea
lea
jb
stc
lea
neg
xor
stc
lea
lea
lea
lea
lea
rcl
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
xor
lea
lea
lea
push
mov
xor
pop
lea
lea
lea
lea
not
not
lea
lea
lea
inc
push
mov
push
xchg
movsl
xchg
mov
pop
lea
not
not
lea
neg
dec
inc
push
neg
neg
dec
pop
lea
lea
lea
lea
neg
lea
lea
not
jbe
lea
lea
lea
neg
not
js
xor
xor
xor
lea
lea
xor
xor
xor
xor
not
neg
xor
js
xor
push
xor
dec
pop
xor
not
lea
xor
xor
xor
xor
inc
jae
xor
lea
xor
xor
xor
xor
lea
ja
xor
ja
lea
xor
xor
lea
xor
xor
xor
xor
lea
xor
xor
xor
xor
xor
xor
lea
lea
xor
lea
xor
xor
xor
xor
lea
lea
xor
lea
xor
xor
xor
xor
xor
lea
xor
xor
xor
lea
xor
xor
xor
xor
xor
nop
dec
jne
xor
lea
xor
lea
xor
xor
xor
xor
test
lea
xor
neg
xor
xor
xor
xor
xor
xor
jb
clc
xor
stc
xor
lea
xor
xor
xor
xor
xor
xor
xor
not
push
lea
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lea
xor
js
xor
xor
lea
xor
xor
jne
xor
lea
xor
xor
xor
xor
xor
jae
xor
lea
lea
inc
push
not
xor
inc
pop
push
xor
xor
pop
push
cmp
xor
pop
push
xor
pop
push
pop
push
xor
push
pop
cld
pop
call
pop
push
dec
pop
xor
xor
xor
push
pop
movzbl
xor
cmp
lea
cmp
xor
xor
xor
xor
push
mov
xadd
xor
cmovbe
pop
pop
xor
xor
xor
bts
push
push
dec
pop
inc
pop
push
xor
stc
pop
xor
xor
xor
xor
xor
xor
movzbl
xor
push
xor
lea
inc
pop
movsbl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
movsbl
xor
xor
push
pop
cmp
push
xor
xor
xor
xor
dec
pop
push
xor
xor
pop
push
lea
pop
push
xor
xor
xor
imul
pop
push
xor
pop
push
push
pop
xor
pop
push
xor
xor
xor
pop
push
xor
push
pop
dec
pop
jae
push
xor
xor
dec
pop
lea
xor
xor
xor
xor
cmp
jno
neg
lea
xor
push
xor
pop
xor
xor
xor
xor
btr
xor
jae
xor
xor
push
xor
xor
xor
xor
clc
pop
xor
xor
cmp
xor
xor
cmp
inc
jns
neg
btr
push
xor
xor
xor
xor
pop
jb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jns
xor
xor
je
xor
xor
xor
mov
xor
push
push
xor
xor
xor
pop
pop
jns
test
cmp
test
test
test
xor
push
test
test
test
dec
pop
xor
test
xor
jns
test
test
xor
lea
test
cmp
not
jb
test
test
nop
test
jno
test
test
xor
inc
jno
nop
ja
test
test
test
test
test
test
test
xor
test
test
test
test
test
neg
test
xor
jns
jno
test
xor
test
test
xor
test
test
dec
nop
test
xor
test
cmp
movzbl
dec
test
test
xor
inc
test
test
test
test
jns
inc
xor
test
je
test
xor
test
test
xor
inc
test
push
test
pop
stc
cmp
jns
movzbl
test
cld
xor
jbe
dec
xor
clc
inc
jb
jo
test
cmp
dec
test
cmovl
stc
nop
xor
xor
test
cld
jno
dec
jbe
cmp
xor
jae
test
test
inc
inc
cld
inc
nop
jb
dec
push
cld
xor
inc
test
test
dec
pop
dec
push
pop
dec
mov
stc
cld
dec
mov
inc
dec
inc
jns
xor
dec
dec
inc
dec
jae
stc
xor
test
clc
test
dec
test
push
push
nop
dec
dec
pop
xor
pop
inc
cmovs
inc
stc
dec
test
inc
inc
inc
dec
dec
inc
cld
cmp
xor
jo
mov
mov
xor
inc
dec
stc
cmp
test
inc
dec
inc
test
test
xor
test
inc
test
inc
dec
cld
inc
lea
inc
dec
dec
dec
not
je
dec
dec
nop
stc
inc
inc
dec
inc
inc
inc
nop
clc
inc
jns
stc
inc
cmp
movswl
dec
cld
dec
inc
inc
xor
cld
inc
clc
stc
cmp
dec
neg
xor
clc
xor
dec
xor
dec
xor
neg
nop
inc
jmp
inc
xor
cld
dec
cmove
js
cld
shrd
stc
stc
clc
dec
dec
inc
inc
dec
dec
xor
dec
dec
dec
dec
nop
dec
dec
inc
stc
mov
mulb
sahf
in
daa
dec
jp
les
dec
imul
cmp
cmp
repnz
push
imul
jmp
insb
pushw
dec
push
loop
inc
or
popa
adc
adc
xchg
dec
fisubl
sbb
jecxz
pop
cmp
jne
pop
and
nop
fisubrs
sarl
into
pushf
inc
rorl
stc
push
add
loop
repnz
push
mov
push
cmpb
xor
lcall
and
xor
dec
xor
sbb
or
mov
mov
cmpl
fcompl
inc
dec
pop
push
bound
jo
lret
jnp
lea
ja
sbb
hlt
cmp
pop
test
jns
xor
adc
int3
shll
inc
lcall
dec
in
xlat
aas
mov
xchg
cwtl
jb
rorb
bound
push
aad
cmp
pop
bound
and
xchg
and
ss
xchg
fildl
data16
les
push
dec
push
pop
mov
adc
addb
and
sbb
adc
sbb
xor
or
scas
pop
push
mov
lahf
scas
sbb
in
or
cmpsb
cli
cld
std
das
in
pushf
repnz
push
add
cmp
fwait
mov
pop
adc
xchg
jp
xor
mov
jle
or
mov
cmc
add
clc
xor
dec
clc
mov
sti
inc
aaa
cmpsb
jp
xor
sti
cwtl
ds
jp
icebp
aam
jae
jne
clc
sarl
mov
imul
std
or
add
loop
out
push
pop
push
aas
jle
mov
sbb
cs
sbb
es
mov
xchg
jle
mov
in
cmp
rcrb
mov
mov
les
inc
mov
xchg
es
mov
jo
sbb
cmp
pop
cmpsl
push
test
pop
sub
movsb
movsb
lods
xchg
mov
sbb
push
pusha
cld
out
push
cltd
and
mov
ficoml
adc
daa
mov
loopne
lcall
test
push
addr16
xor
mov
sarb
movsb
out
testb
cmc
repnz
je
push
mov
jle
fidivs
cltd
lret
xchg
shrb
xchg
mov
jle
sahf
or
mov
pusha
test
push
pop
pop
xchg
lret
xchg
rclb
aam
sbb
push
adc
fcmovbe
lcall
leave
xchg
lea
dec
push
and
inc
pushf
push
xchg
rcl
cmp
lcall
cmpsb
mov
adc
xor
push
mov
std
xchg
cmpsb
lods
xchg
cmp
lea
inc
and
add
ss
mov
sahf
push
sbb
cmp
adc
sahf
or
and
adc
movsl
int3
xchg
mov
add
idivb
loope
stc
xor
or
ret
sub
push
jno
movd
mov
out
in
fldenv
es
in
mov
arpl
push
loopne
or
pop
mov
push
fstpt
jp
mov
sbb
cmp
mov
mov
lret
sti
ror
add
mov
ds
mov
ret
inc
mov
inc
into
call
mov
lret
not
mov
pop
mov
fidivl
pop
repz
scas
and
imulb
loopne
or
stos
mov
cmpsb
pop
ret
out
jg
mov
sbb
pushf
in
sbb
mov
or
mov
std
movq
into
lea
hlt
mov
xchg
inc
xchg
push
pop
adc
ja
inc
testb
jbe
imul
ja
inc
data16
iret
or
fcmove
adc
in
out
in
data16
sbb
sub
addr16
jbe
dec
push
push
xor
ficompl
push
insb
dec
xchg
mov
push
pusha
loopne
repnz
lods
mov
push
inc
clc
dec
xor
rolb
insl
out
jle
mov
cmp
mov
jae
test
mov
fcmovne
mov
shlb
cmpsb
jle
sahf
es
mov
es
push
push
es
pop
lret
pop
rclb
xchg
push
xchg
push
out
push
xchg
pop
ficoml
jbe
xchg
loopne
push
and
mov
sbb
sar
push
jno
lcall
push
cmpsb
ja
pop
push
imulb
push
adc
cld
in
jbe
int3
dec
cmc
call
in
call
out
push
out
dec
gs
push
out
cmpsl
ss
push
test
cmp
jmp
push
sahf
dec
push
fadds
inc
or
das
adc
and
xchg
test
mov
int3
cmp
mov
testb
xchg
xchg
add
cmp
push
sbb
mov
fidivl
daa
xchg
cmpsb
mov
push
and
push
cmpsb
clc
lods
jp
mov
sbb
push
xchg
cmp
lret
aaa
rclb
aas
aaa
sahf
xchg
jns
pop
mov
test
jle
or
push
test
mov
shlb
std
cmc
push
std
out
ja
neg
neg
cmc
cli
jne
xor
notl
xchg
xor
out
adcb
data16
push
loop
fisubl
mov
xchg
push
push
sti
xchg
pop
mov
xor
mov
dec
hlt
lods
lds
mov
cli
daa
push
dec
mov
lds
sahf
cmp
stos
cmp
sub
or
and
das
cs
sub
jbe
adc
and
push
xor
sbb
mov
sbb
lcall
or
xchg
out
push
or
dec
xchg
rolb
and
cli
test
lcall
fwait
hlt
js
lret
sbb
mov
sbb
push
add
cmpsb
mov
push
call
mov
shl
adc
pop
popf
out
fcoms
xchg
cli
fstps
pop
push
and
aam
adc
enter
inc
cmpsb
xchg
inc
call
adc
sub
cmpsb
inc
imulb
mov
xor
cmpsb
xor
sbb
mov
push
pop
mov
dec
sub
sub
and
mov
je
ss
punpckhbw
sbb
dec
cmp
inc
and
add
or
fwait
insb
adc
inc
mov
das
sbb
stos
cmp
daa
addb
adc
jp
inc
push
divl
xor
sbb
fidivrl
jno
cmc
sahf
pop
jae
dec
lret
xor
data16
pop
data16
mov
imul
sbb
cmp
push
cmp
rclb
jp
xlat
mov
cmp
dec
les
cmpsb
push
ss
inc
adc
rolb
jbe
ret
xchg
cmp
cmp
fidivl
popf
jg
mov
jae
cmp
or
fnsave
push
test
sub
sbb
in
andl
scas
outsb
xchg
and
cmp
xchg
sbb
jge
adc
mov
or
data16
mov
inc
adc
dec
xchg
jp
push
adc
lret
or
cmp
aam
addr16
lret
shlb
push
adc
or
xchg
sub
sbb
dec
cmp
dec
bnd
out
add
push
cmc
adc
in
loop
push
ss
rcr
ret
fwait
push
jb
pop
sarl
push
lret
js
dec
dec
ret
shll
push
lock
ror
fdivrp
dec
jb
cltd
lret
mov
dec
fadd
mov
fmul
xor
pop
mov
lcall
stos
nop
pop
mov
stos
test
xor
rcr
lret
xor
ffree
sub
in
stos
adc
fistl
mov
arpl
pop
push
add
or
push
adc
daa
arpl
xchg
call
loope
xchg
sub
cmpsl
or
adc
or
fsubs
jne
dec
cmp
cli
pop
pop
push
push
aaa
in
or
or
dec
repz
dec
aaa
xor
sub
imul
jmp
xchg
jno
aam
outsl
push
push
or
rcrl
adc
scas
xchg
xchg
sub
leave
shl
cmp
loopne
aam
inc
test
xor
lret
adc
dec
lods
xchg
pop
lret
jge
cltd
arpl
mov
rcr
xor
test
sub
push
lret
lods
ret
sub
push
or
mov
xor
sub
aaa
mov
dec
jge
sub
jle
adc
mov
popf
adc
mov
or
cmpsl
mov
add
adc
lret
xchg
dec
cmp
adc
cmp
mov
jg
mov
stc
repz
divl
mov
hlt
push
mov
ljmp
jle
test
sbb
inc
fxtract
in
sub
xchg
in
call
jb
ljmp
int
js
mov
shlb
dec
sub
rorb
aam
stos
aaa
push
into
test
cmp
cmp
push
sub
push
add
or
mov
sub
sub
add
xor
mov
mov
xchg
mov
roll
xchg
sub
and
pushf
adc
mov
push
nop
clc
cmp
ret
and
mov
or
decl
adc
xchg
cltd
nop
test
lds
sbb
je
popf
mov
jbe
popf
jo
popf
mov
insb
test
cmpsl
jmp
pusha
mov
shll
cwtl
lock
in
insb
adc
fucomi
mov
adc
xchg
movsl
add
shl
xchg
adc
and
dec
push
mov
cmpsl
shrl
adc
int
sbb
dec
hlt
daa
cmpsl
enter
xor
cli
test
xor
into
inc
sub
leave
dec
stos
cmp
aaa
mov
or
cmp
or
stos
push
sub
or
int
xchg
mov
scas
cmp
frstor
test
xchg
out
adc
lds
cltd
mov
mov
adc
addr16
hlt
aad
mov
lret
push
in
and
addr16
cmpsl
or
jne
add
icebp
inc
std
mov
into
mov
lret
imul
jmp
ss
popf
rcl
cld
mov
iret
cmp
cmpsl
dec
mov
lret
inc
lret
aad
add
push
out
in
iret
shlb
stc
lret
in
mov
dec
push
add
xor
xchg
mov
lds
das
out
mov
lods
test
sbb
jecxz
fldcw
das
or
das
jnp
xchg
scas
xor
daa
sub
int
clc
add
je
aaa
push
jmp
mov
in
dec
psubq
push
popl
popf
mov
dec
cmp
mov
dec
jae
push
xchg
mov
dec
or
shl
adc
out
out
push
shrb
out
adc
cmp
shll
data16
outsb
sbb
out
mov
inc
xchg
out
sahf
std
outsb
pop
push
fwait
out
repnz
pop
insl
movsb
out
out
pop
ficoml
clc
lds
sub
rorl
loopne
iret
jle
lea
js
into
ljmp
into
into
pop
lds
pop
lret
into
or
dec
aam
mov
jbe
popf
cs
mov
cs
xlat
cmpsl
lods
xchg
in
cs
scas
add
cs
pop
scas
out
in
mov
scas
and
xor
fs
xchg
call
mov
sbb
std
push
jns
fwait
and
pop
push
mov
cmpsl
out
insb
adc
cmp
cmc
dec
cmpsl
mov
jmp
pop
lock
aaa
outsb
mov
dec
insl
cmp
out
les
push
lret
popf
in
shrb
lock
outsb
movb
lock
repnz
dec
adc
dec
dec
xchg
sub
dec
push
xchg
cmp
fdivl
dec
arpl
dec
bound
push
ficoms
dec
mov
fxch
fs
addr16
push
aas
aad
mov
xchg
push
scas
movsb
andb
jno
scas
lock
stos
leave
sbb
idivl
sub
push
pushl
scas
sarb
cvtdq2ps
mov
adc
adc
or
pop
rol
out
in
pavgw
cli
lea
cmovg
test
jae
xchg
jo
xor
in
outsb
cmpl
jne
in
loop
fldcw
daa
out
mov
outsb
push
or
in
outsb
add
outsl
add
mov
insb
hlt
or
roll
stos
dec
int3
cli
push
dec
test
popf
dec
subb
push
int3
mov
int
stos
push
dec
adc
adc
xor
xor
sbb
popf
xchg
ja
pop
mov
lods
and
adc
mov
sub
xacquire
and
and
dec
xchg
sub
rclb
mov
out
jle
lea
mov
sti
xchg
push
cltd
or
pop
mov
mov
lds
jno
lret
mov
fwait
rorl
sbb
mov
mov
jno
lahf
adc
insb
sbbb
insb
out
in
in
mov
fwait
stc
in
insb
cmpsb
ja
push
xchg
add
jno
adc
in
adc
xchg
push
scas
movsl
std
sar
xchg
fwait
dec
mov
sub
adc
dec
cmp
adc
test
dec
int
xchg
cmp
and
xor
aaa
dec
insl
inc
mov
push
dec
xor
xor
sub
nop
popf
mov
lea
cs
outsl
cmp
inc
push
push
scas
shrb
or
sub
mov
mov
lods
sbb
adc
dec
cmp
pop
test
arpl
pop
or
jge
call
mov
cmp
or
je
lock
insl
lock
jp
sbb
jp
in
jbe
lds
cmp
icebp
lret
outsl
jl
mov
mov
popf
jno
jle
out
add
insl
mov
inc
adc
int
cmp
dec
fdivrl
iret
data16
dec
sbb
loop
stc
push
insb
ss
push
js
push
aam
pop
int
dec
jge
stc
xor
fldcw
cmc
xor
stos
jle
xchg
xor
or
test
mov
xor
das
cmpl
fsts
aad
mov
cmp
cld
out
mov
mov
enter
imul
push
pop
sbb
fidivrs
push
repz
mov
pop
fcmovne
mov
aam
test
lahf
xor
popf
scas
clc
sub
mov
dec
mov
xlat
je
fisubs
or
jnp
push
stos
add
gs
nop
iret
adc
lcall
and
and
mov
loope
pop
mov
clc
ljmp
jo
aad
xchg
insl
adc
jge
test
mov
scas
jb
lock
xchg
mov
cld
dec
cmp
jo
mov
lret
inc
xacquire
rcrb
scas
sbb
out
xor
xchg
testl
mov
push
sub
xchg
sbb
mov
data16
movsb
pop
add
testl
dec
or
mov
adc
int
cmc
nop
fucomi
lods
dec
mov
imul
and
adc
repz
fmull
fwait
or
test
pop
pop
and
lods
and
popf
or
pop
jno
add
adc
pop
pop
call
dec
lea
out
xchg
data16
inc
pop
and
das
popf
movhps
jae
push
push
leave
rcll
not
cmp
mov
clc
or
cmpsl
dec
add
mov
faddl
subl
mov
adc
push
add
mov
adc
int3
jne
cli
leave
outsl
fimull
mov
cs
mov
repnz
xor
or
lret
cli
aad
adc
ret
adcb
cmp
fstpt
push
lds
bound
in
mov
jns
jl
cmc
clc
add
fwait
pop
mov
roll
sti
ja
into
jg
cmp
fnstcw
sbb
test
push
sub
sub
js
add
push
pop
sub
push
jmp
pop
int
xor
xor
push
sub
add
sub
pop
mov
fcmovnb
dec
mov
call
das
xchg
pop
adc
sbb
rcrl
test
xor
jg
pushf
xchg
mov
add
into
je
in
sti
ret
push
lret
es
and
mov
pusha
aas
ja
jg
cmp
pop
sub
lods
mov
adc
iret
cwtl
dec
fwait
stc
aam
fldt
fisubs
stos
repnz
es
icebp
into
enter
xchg
sbb
fs
loopne
xchg
pop
adc
pop
cwtl
inc
mov
int
out
popf
clc
int
mov
mov
push
jg
imul
call
mov
mov
decl
outsl
inc
jo
out
inc
sub
push
lret
inc
ret
cmp
pushf
and
sub
mov
test
addr16
mov
mov
mov
jp
cmpsb
pop
inc
inc
imul
adc
sbb
adc
into
ljmp
movsl
jne
xchg
and
add
imul
lret
inc
mov
add
insb
or
in
pop
mov
jp
adc
fdivrs
sbb
test
ret
dec
xchg
lret
cmp
xchg
ret
stos
adc
int
ret
scas
xor
push
js
ret
sbb
jecxz
mov
mov
jge
fnsave
orb
xor
sbb
adc
jl
push
xchg
out
out
mov
mov
lds
xor
push
in
jge
subb
int3
xor
xor
pop
fcmovb
add
js
add
movsl
out
xchg
cmpsb
lahf
or
mov
movsl
ficoms
mov
adc
in
add
stos
rcrb
stc
fdivrl
aaa
lods
xchg
push
or
dec
xchg
mov
pop
inc
push
ret
push
mov
jae
xchg
cmp
test
mov
push
jo
test
mov
jge
dec
ss
or
mov
stc
jmp
xchg
lret
frstor
movsl
cwtl
je
pusha
inc
sub
jmp
sbb
out
hlt
cmp
push
aaa
test
ljmp
ret
repnz
push
jbe
sbb
pop
fcmovnbe
inc
inc
sbb
fwait
and
arpl
int
fisubs
out
lods
mov
xchg
fs
sub
sarl
fists
ret
in
std
dec
xchg
mov
ds
out
xchg
push
cmp
cmp
test
in
movsl
xchg
ja
fdivs
jnp
or
aad
mov
fwait
adc
and
nop
and
cmp
test
sbb
out
adc
inc
mov
adc
xchg
dec
movsl
sub
cmp
lock
or
jno
xchg
jle
or
adc
cmp
dec
push
cmpsb
or
cmpsl
scas
aaa
insb
push
in
dec
push
mov
add
in
add
clc
pop
out
push
int3
xchg
cmp
or
xchg
pop
or
pop
loopne
fadds
mov
fsubrs
adc
mov
xor
jge
hlt
lock
call
pushf
fbstp
js
out
inc
enter
test
fstpl
popa
sub
add
movsl
sub
movsb
or
cmpsl
fidivs
icebp
outsb
stos
xor
nop
mov
jle
aaa
call
movsb
push
sbb
mov
jp
jae
enter
int3
xchg
sti
pop
push
enter
sbb
and
lahf
sahf
gs
je
add
sbb
outsl
dec
pop
sarl
icebp
int3
cmpsl
adc
gs
fdivrs
lcall
mov
outsl
cmpsb
cmp
xor
xchg
pushf
gs
cmp
cwtl
loope
nop
movsb
leave
mov
mov
in
pop
push
xor
sub
sbb
stos
lods
or
out
push
insb
pop
insb
mov
adc
pushf
iret
aad
push
adc
cmp
inc
pop
rcrl
sahf
adc
clc
push
or
pop
sbb
dec
sub
std
movsl
or
and
add
add
or
pop
lock
and
xor
or
jns
mov
or
pop
xchg
mov
xchg
pop
dec
adc
mov
lcall
std
xchg
test
imul
rcrl
or
test
xchg
xchg
fs
int3
jns
or
cmc
outsb
dec
cwtl
out
enter
and
cmp
mov
repz
pop
push
call
addr16
push
mov
sub
dec
out
movq
iret
rclb
sti
cmc
fcomip
loope
cmp
push
xchg
jne
push
andl
xor
mov
jb
jmp
popl
pop
sub
pop
shll
mov
add
jp
xchg
cmp
mov
mov
and
sub
pop
mov
mov
dec
cwtl
int3
vmovq
cmp
mov
frstor
insb
adc
mov
push
adc
mov
enter
cs
adc
or
stc
push
and
xor
or
mov
push
ret
adc
int
xchg
mov
les
bound
dec
pop
cmp
xlat
fidivrl
mov
xor
mov
xor
dec
mov
push
mov
addb
gs
jmp
insb
or
push
mov
pushf
jg
pop
xor
cmp
test
and
push
add
lret
push
jns
jae
fcmovnb
push
inc
jl
jae
mov
push
fbstp
imul
jne
pop
mov
fadd
and
and
cvttps2pi
sahf
push
mov
push
sub
clc
aam
aaa
insl
xchg
shll
test
shr
cld
lods
test
paddusw
addr16
dec
mov
cli
xor
aam
xchg
lcall
jnp
popf
lret
add
adc
sub
mov
int3
adc
nop
mov
mov
xchg
jle
adc
mov
xchg
jl
dec
icebp
cmp
divb
stc
ljmp
push
mov
mov
jnp
cli
sub
pop
adc
orl
aam
mov
pop
sub
xor
aas
fsubs
xor
inc
push
in
lock
cmc
daa
int3
push
mov
mov
cmc
mov
mov
jnp
gs
roll
popf
nop
cmpsl
ss
push
pop
xlat
cmp
pop
add
dec
xchg
cmpsb
xor
int3
push
mov
leave
push
mov
mov
addb
loop
je
push
mov
insb
inc
push
inc
mov
pop
arpl
out
test
jl
imul
jl
sbb
sub
add
in
xchg
popa
cld
xchg
popaw
cmpsb
fnstsw
sbb
nop
push
sarl
es
and
fs
mov
dec
add
cmpsl
test
sub
sbb
or
mov
cmp
xor
es
mov
popa
andnps
imul
cltd
test
mov
lds
fbld
dec
test
adcl
sub
jno
sbb
sbb
int3
in
mov
filds
fwait
sub
iret
add
mov
xchg
or
mov
sbb
jae
sub
mov
jg
sti
xor
and
cmp
xor
push
mov
mov
icebp
lahf
cmp
aad
push
jbe
loop
pop
fsts
mov
enter
xchg
fs
lea
pop
cli
dec
pop
lods
pushf
and
jbe
dec
movl
xchg
and
cltd
fwait
push
fistps
mov
loope
and
sub
pop
mov
push
inc
sbb
xchg
pop
adc
cld
mov
push
lcall
sbb
xchg
iret
mov
ja
imul
mov
pusha
push
mov
clc
pop
xchg
sbb
jg
xchg
out
push
popf
test
pop
repz
sahf
or
stc
mov
gs
fstpt
sbb
cmp
adc
inc
or
addr16
cld
sub
cmp
mov
sbb
fnstenv
loop
sbb
roll
sbb
cmpsl
jo
pop
mov
iret
rorb
clc
jp
sub
test
rcll
int3
fidivrl
lock
jae
adc
sahf
or
pop
lcall
loop
add
jno
jp
jmp
lds
imul
movsb
loop
fimuls
fcoms
scas
mov
std
loop
and
mov
mov
push
hlt
push
adc
insl
das
flds
xchg
xchg
lods
testb
faddl
add
and
add
fs
iret
in
ja
cmp
mov
cmp
xor
mov
inc
jmp
fcompl
add
and
dec
push
mov
dec
cmc
aaa
daa
bswap
out
mov
lds
lds
mov
sbb
in
enter
mov
fdiv
and
stc
xor
lods
out
mov
or
mov
je
xor
jle
mov
pop
adc
rsm
cmp
inc
imul
cwtl
xor
cld
or
jne
dec
jb
shrl
leave
inc
mov
int3
mov
mov
loopne
fcmovnu
pop
add
cmc
repnz
cmc
or
data16
push
into
add
dec
lods
gs
add
enter
decb
nop
ror
mov
in
jbe
dec
mov
sub
cmp
pop
fidivs
adc
lock
fimull
loop
mov
add
mov
jl
mov
popa
ret
jne
xchg
lss
pop
sarb
or
xchg
fs
jmpw
jg
insb
enter
sarl
movsl
cmpsb
push
cmp
push
dec
push
adc
mov
out
pop
sub
pop
mov
pop
xchg
xor
fwait
and
push
mov
aaa
push
movsl
push
loope
xchg
insb
xor
sbb
mov
dec
shlb
and
mov
fmul
ret
out
xor
stos
mov
repnz
cmp
push
cmc
ja
mov
loopne
fadds
lds
cmc
test
test
fcomp
loopne
sbb
js
lret
cmc
or
adc
pop
pop
cmpsb
mov
aas
cmpsb
lock
insb
dec
rcl
iret
enter
iret
mov
mov
pop
and
pusha
xorb
movsl
mov
jl
mov
jp
pop
dec
das
and
add
addr16
mov
js
push
push
pop
daa
loope
mov
fwait
inc
push
jg
sbb
test
cmp
mov
aaa
mov
icebp
sbb
ror
jo
mov
cmp
std
jbe
sub
mov
xchg
cmpsl
shll
shll
enter
push
xor
mov
or
outsb
fnstsw
movsb
test
and
hlt
push
pushf
xor
or
outsb
cmp
xchg
dec
lcall
xchg
test
cmp
push
jle
mov
cltd
mov
xor
fsubl
inc
jge
in
aam
pop
lds
popa
pop
cmp
add
mov
push
lock
or
in
mov
mov
scas
in
push
shll
int3
jecxz
test
and
lods
test
popf
push
inc
les
aam
jge
xchg
sbb
pop
clc
pushf
mov
test
out
sti
pusha
jnp
out
mov
mov
add
jle
fs
pushf
push
jmp
xor
into
cmpsb
fisttps
mov
sub
pop
dec
sahf
pop
pop
pop
popl
and
dec
fs
fisttpll
mov
sub
insb
adc
stos
mov
or
out
or
stos
inc
add
sarb
mov
mov
pop
loope
clc
mov
int3
int3
xchg
movsb
dec
scas
ss
or
xchg
lret
dec
sbb
adc
cmp
mov
mov
mov
jb
loopne
jo
sbb
sub
outsl
rorb
sub
in
push
add
insl
cs
rcrb
jae
out
lea
sbb
test
jns
mov
arpl
and
cmp
inc
cld
mov
test
ret
add
mov
data16
xchg
sub
popa
inc
stos
loope
sbb
das
pop
jo
inc
adc
cmp
inc
push
push
xchg
dec
in
push
cmp
sbb
xlat
fadds
mov
stos
loopne
xchg
dec
shrl
in
adc
pop
add
lods
test
mov
jg
add
faddl
daa
jp
adc
dec
ret
mov
popf
or
push
fiaddl
push
dec
pop
cli
adcb
add
xchg
xchg
jo
insl
enter
insb
aam
rorl
and
mov
inc
cmp
data16
std
cs
ficoms
in
arpl
int
jne
xchg
inc
push
push
dec
push
mov
jecxz
movsl
xchg
mov
loop
jge
and
gs
std
ja
in
adc
into
adc
mov
lea
adcl
fs
out
daa
leave
ljmp
xchg
sarl
andl
mov
sub
dec
pop
into
or
addb
xor
flds
dec
loope
pop
in
imul
add
mov
in
arpl
jge
add
jb
sbb
push
fistps
mov
lcall
add
mov
jle
loopne
je
add
loope
test
pop
sub
aam
daa
sahf
imul
cltd
cmp
push
sti
adc
in
popa
xchg
sbb
cmp
push
fdivr
ret
dec
mov
loopne
dec
pop
add
lcall
ljmp
frstor
cmp
clc
andb
jb
add
pusha
fnstcw
fwait
pop
push
loop
ja
addr16
mov
xlat
xchg
jno
loopne
hlt
in
jnp
and
cli
pop
call
data16
scas
push
ret
mov
push
xchg
xchg
mov
add
jmp
push
call
repnz
add
addr16
adc
sub
dec
xor
xor
adc
in
mov
mov
loop
rcrb
inc
push
mov
jp
jb
pop
mov
jae
xchg
fisubl
and
test
mov
hlt
stc
xchg
cmp
xor
mov
push
mov
xchg
dec
iret
adc
pusha
add
xchg
fiadds
pop
inc
mov
repnz
xchg
push
xchg
mov
fstl
shl
sub
or
adc
push
cli
outsb
pop
xor
mov
push
in
add
rol
mov
pop
fsubr
xchg
lret
fneni(8087
out
add
adc
or
lock
add
and
leave
jmp
mov
les
out
dec
nop
xchg
add
or
loope
adc
pushl
les
cmova
idivb
or
pop
xchg
mov
idiv
das
test
into
add
jo
in
hlt
not
mov
idivl
into
fisubs
lcall
test
add
add
jo
cld
movsb
mov
mov
lret
shrb
das
mov
fdivrl
cmp
push
inc
push
jp
add
mov
pop
and
inc
mov
int
fiadds
lods
addr16
pop
xor
mov
in
fnstsw
sbb
mov
xchg
mov
sub
loop
or
xchg
lods
imul
mov
mov
outsl
adc
xor
movl
das
out
mov
movsl
add
mov
dec
xchg
mov
jne
jns
xchg
int
pop
pop
je
std
pop
dec
xchg
or
lcall
lret
and
sub
sub
test
sarl
cmp
mov
pop
daa
jno
subl
sbb
fdivs
rcrl
test
sbb
scas
mov
dec
jle
ror
cmp
ja
jmp
xchg
mov
dec
fdivrp
iret
push
cmp
aas
test
mov
enter
jno
loope
and
jns
mov
adc
movsb
in
loop
sbb
adc
fisubl
sbbl
jl
popa
sub
cld
stos
cltd
sub
push
jecxz
ds
imul
in
rclb
icebp
and
fwait
sub
push
ja
scas
xor
filds
jecxz
xor
jne
ret
imull
pop
pop
pop
daa
popf
cmpsb
lods
andb
pop
inc
mov
jo
into
pop
rolb
mov
mov
ret
pop
lcall
fsubrs
aaa
and
xchg
jns
call
test
and
mov
cmpsb
loope
mov
add
sub
xor
insb
cmp
icebp
cmp
add
pop
push
popf
push
adc
jns
insl
mov
push
mov
jp
out
adc
mov
pop
shll
pop
xor
push
sbb
jns
dec
sbb
lret
and
cmp
pop
inc
loope
pop
and
imull
sub
add
imul
emms
lret
ds
mov
rcrl
ja
mov
push
pop
xor
sub
push
xchg
test
imul
push
pushl
add
pop
arpl
mov
loope
flds
and
push
cld
roll
sbb
mov
mov
jl
insb
sub
push
pop
test
sub
enter
imul
fcmove
rcrb
ja
mov
adc
dec
mov
adcl
jno
mov
jne
aaa
inc
js
pop
mov
dec
mov
neg
sbb
add
aam
call
push
sbb
in
shrd
pop
or
adc
inc
or
adc
dec
jne
pop
stc
repz
lods
mov
jae
mov
frstor
mov
adc
and
fstl
push
std
inc
sti
fdivs
xlat
add
pop
jge
mov
lock
out
add
lahf
push
push
mov
xchg
adc
pusha
sahf
push
into
cmp
rol
jno
loop
mov
jnp
push
lret
mov
divl
pop
mov
shlb
cltd
add
lret
test
xlat
ljmp
or
mov
cld
dec
and
lea
add
or
xor
sbbb
notb
xor
mov
adc
bound
sbb
out
lret
jge
xchg
xor
mov
jge
out
fldt
add
fbstp
or
pusha
add
lahf
inc
dec
clc
xchg
xor
hlt
call
xor
mov
or
jns
adc
std
dec
les
pop
jg
shll
outsb
adc
les
lret
sbb
xchg
mov
sub
mov
sbb
push
cltd
push
mov
sbb
pop
pop
mov
sti
sbb
je
andl
ret
push
sub
loop
adc
cld
aaa
dec
mov
stc
std
mov
je
rorl
pop
das
bound
cmp
das
or
add
pop
rcr
repz
add
call
push
fdivrp
xchg
sub
loop
loopne
jnp
lret
mov
jl
push
das
add
iret
sub
jge
mov
xchg
cwtl
pop
xor
ja
sbb
cld
mov
mov
movb
pop
ds
repz
mov
loope
pushf
test
rorb
or
adc
xchg
add
jno
cmp
and
pop
sbb
mov
jbe
push
xchg
push
int
xchg
rcll
icebp
jecxz
mov
xor
xor
test
bsf
sub
enter
cmp
xchg
jle
inc
xor
ss
pop
mov
fwait
out
xor
lds
xlat
lret
cmc
push
inc
push
or
movsb
mov
outsb
mov
sub
push
and
or
mov
hlt
sub
repz
int
and
jecxz
jle
xchg
cmc
shr
mov
dec
jo
dec
jg
add
push
cmp
in
add
outsb
ljmp
sbbl
cmc
jb
pusha
in
es
insb
cmpsb
mov
or
ret
test
clc
icebp
lret
loopne
je
xchg
mov
inc
ret
fwait
mov
faddp
clc
and
sbb
mov
loopne
out
test
daa
adc
cmpsb
mov
push
into
push
push
xor
mov
mov
xchg
sub
cwtl
fmul
inc
xchg
jl
sbb
clc
fucompp
cmp
mov
mov
fstp
mov
cmc
das
idivb
data16
pop
lods
stos
mulb
push
mov
dec
push
inc
cs
or
add
call
lret
add
les
jg
sub
ljmp
out
insl
gs
out
addr16
lods
out
xchg
jl
insl
jmp
out
out
aas
aam
jle
mov
inc
leave
jb
int3
pop
ror
xchg
fists
jg
jns
push
dec
cmp
ja
fnsave
xchg
xchg
adc
fimuls
pop
mov
out
int
cmp
iret
mov
rorl
inc
mov
mov
dec
pop
pop
cmc
jbe
out
dec
imul
adc
jge
lcall
push
daa
xchg
cltd
add
xchg
push
lss
movq
sbb
daa
mov
mov
repz
push
xor
je
sbb
into
test
std
fidivrs
loope
stos
fistpl
push
in
dec
sbb
mov
scas
fimull
leave
adc
sub
add
fidivl
xlat
jb
inc
loopne
mov
push
mov
popa
incl
pop
or
or
mov
addr16
jge
lret
mov
sub
aaa
test
shl
xlat
jno
cmp
push
xchg
ds
and
dec
cmc
lret
outsl
or
push
sbb
or
stos
sbb
push
mov
stc
cmp
xchg
aam
data16
icebp
mov
add
dec
xlat
push
xor
add
xchg
daa
adc
scas
call
dec
fnstcw
add
icebp
aas
xor
mov
sbb
mov
lret
cwtl
mov
pop
mov
add
scas
incl
aad
repz
movsl
sub
std
ljmp
sub
mov
stos
scas
lea
ds
adc
inc
pop
in
mov
cld
lret
dec
dec
lret
push
loop
add
lret
or
shll
sbb
lea
sbbb
scas
lock
pop
aad
jecxz
mov
mov
mov
add
dec
jle
ljmp
pop
es
repnz
out
mov
int
adc
mov
mov
lods
cli
mov
stos
dec
lods
mov
dec
add
bt
pop
push
rcr
pop
pop
frstor
push
inc
test
insl
mov
mov
fists
jmp
push
sub
iret
lods
xor
mov
cs
push
pusha
dec
jne
jmp
int3
sti
ret
sub
pop
lock
sbb
out
jnp
and
mov
scas
cs
imul
inc
cwtl
sbb
popf
das
iret
sbb
into
jno
pop
push
addr16
add
pop
cmp
lahf
es
push
dec
sti
aas
insl
sbbb
mov
mov
adc
sbbl
add
mov
push
out
pop
outsl
out
enter
es
xor
adc
pmaddwd
add
cmp
das
cld
pop
mov
aam
loope
sahf
ret
cmp
jl
xchg
shrd
jecxz
inc
xchg
inc
sub
std
adc
cmpsl
and
and
icebp
movsl
addr16
in
dec
add
mov
jne
insl
in
or
hlt
dec
add
pop
mov
std
mov
arpl
add
pop
jmp
popf
popl
inc
movsb
or
leave
clc
cmp
inc
mov
mov
pop
aad
sbb
or
inc
fdivrp
inc
push
add
and
push
das
or
mov
pop
sub
or
inc
push
jmp
jmp
pop
sahf
xchg
push
add
pop
gs
dec
out
dec
adc
inc
stc
fistl
les
and
popa
aam
add
dec
and
pop
or
sbb
or
add
lock
jbe
lret
mov
ja
loope
push
pop
stc
mov
jg
cmpsb
daa
jmp
pop
lock
xchg
xchg
push
in
adc
aad
dec
shrb
cmc
jb
mov
xor
mov
imul
dec
outsb
sbb
xor
aas
sqrtss
mov
int
add
rcrb
dec
aas
out
repnz
test
or
paddsw
les
lret
push
cli
pop
ja
out
pop
outsl
push
adc
notb
outsb
mov
lret
pop
arpl
jnp
pop
int
ljmp
loope
incl
or
out
pop
add
push
and
cmpsl
mov
mov
jmp
sbb
xchg
xchg
inc
or
fimuls
clc
inc
call
sbb
jae
mov
ja
jo
cld
mov
adc
or
jl
and
out
push
daa
lret
das
lea
dec
pxor
adc
test
shll
add
inc
lahf
mov
mov
cli
je
fwait
js
add
xor
out
leave
loope
xor
cmpsl
daa
mov
inc
mov
pop
mov
packsswb
cmp
cmc
xlat
adc
sub
jp
negb
mov
int3
imul
stc
sahf
aam
lea
out
in
or
rol
adc
jnp
insb
push
mov
popf
scas
ss
negb
test
lods
popf
ror
mov
fildl
mov
ret
sbb
xor
jp
cmc
dec
sub
imul
xchg
sub
add
push
push
das
mov
jo
xor
insl
xor
inc
repnz
add
imul
imul
pop
scas
mov
mov
jp
jl
mov
test
adc
sub
leave
pushf
lcall
jmp
inc
or
out
movsl
xchg
imul
inc
outsb
sbb
or
enter
cmp
jnp
cmp
icebp
lock
adc
loop
dec
test
daa
jp
cmpb
fistpl
shrb
xchg
jnp
in
adc
push
push
loop
xor
push
mov
mov
xchg
or
sar
aas
mov
ret
je
bound
jbe
fcoml
cmc
out
xor
pop
push
pushf
fstps
rorl
push
xor
je
push
add
sub
mov
xchg
sar
aaa
insb
imul
data16
push
jp
push
hlt
add
xor
and
inc
dec
clc
cmp
mov
xchg
mov
xor
es
lret
pushl
mov
repnz
shlb
jns
sub
jge
push
lock
mov
ja
add
sbb
movsb
mov
jmp
mov
sub
mov
adc
cwtl
hlt
cmp
nop
sub
fwait
sub
ja
mov
fwait
push
add
xchg
xor
outsl
and
sbb
insl
arpl
imul
iret
enter
test
add
mov
decl
and
les
je,pn
jp
push
shll
out
icebp
fdivl
sbb
mov
out
mov
jnp
xchg
mov
sub
jne
push
arpl
jae
imul
xchg
std
lret
sub
xlat
dec
mov
push
lcall
incb
cmp
in
sbb
insl
push
dec
clc
add
ret
clc
sti
imul
inc
adcb
mov
and
stos
imul
xor
jp
lahf
addb
rclb
rcl
enter
cmp
pop
push
mov
pop
pop
fs
cmp
scas
std
scas
je
cmp
jmp
inc
push
pusha
js
popa
or
inc
rol
pop
sti
jo
ret
inc
loope
sub
jns
cmp
in
pop
insl
dec
in
sbb
add
rorb
int3
sbb
mov
sbb
fisubl
repz
sub
adc
adc
fs
loop
in
and
lret
cs
cmpl
int
mov
in
ror
adc
popa
pop
mov
std
popa
pop
enter
or
sub
lea
repnz
les
in
lock
xlat
jg
pop
push
pop
and
mov
or
jo
cmp
mov
jg
loop
push
cli
jno
testb
and
or
movsl
mov
or
leave
mov
mov
cmpb
ret
inc
gs
mov
popf
outsl
or
xchg
es
sbbb
rcrb
outsl
out
inc
push
loopne
jno
arpl
ja
xchg
mov
je
outsb
cltd
and
fmull
jo
iret
or
cmp
mov
clc
mov
lods
sub
outsl
roll
push
clc
cs
out
inc
mov
test
mov
pop
mov
lcall
insl
inc
jg
sub
sahf
mov
mov
inc
js
cmp
adc
push
je
push
fnstsw
adc
mov
mov
sahf
dec
pop
dec
std
sub
xchg
mov
mov
adc
popa
push
jo
dec
movsb
mov
or
imul
enter
loope
dec
ret
push
xor
dec
jle
sbb
jnp
bound
insl
inc
mov
in
imul
mov
repz
cmp
push
imul
add
clc
insb
andb
dec
enter
stos
jb
sbb
push
lock
mov
sbb
inc
jbe
inc
hlt
xor
popa
add
into
js
dec
fnstenv
add
rclb
shlb
int3
adc
shlb
test
and
xchg
mov
daa
add
push
add
sbb
pushf
pop
mov
jle
add
mov
das
cld
or
outsb
je
sbb
stos
pop
and
ss
mov
adc
mov
fcompl
xchg
adcl
test
stc
fcoml
decl
adc
pop
ror
jl
fwait
xchg
pop
popa
roll
insl
imul
xor
cltd
add
mov
mov
dec
in
jbe
xor
rolb
cmpl
or
mov
push
test
xchg
daa
insl
test
add
lret
rcrl
repz
rol
clc
ja
out
out
jmp
push
rorl
xchg
pop
fcompl
xchg
cwtl
pushf
add
push
adcl
data16
jbe
fsub
and
inc
nop
and
in
in
xchg
icebp
scas
xor
push
lods
lods
and
in
pop
mov
sahf
add
outsb
gs
cmc
lds
ret
das
bound
push
push
out
add
sysret
f2xm1
rorb
mov
nop
inc
lahf
mov
mov
orl
dec
pop
add
sub
gs
sub
add
lcall
mov
mov
jb
sub
nop
inc
dec
mov
aad
iret
and
inc
loopne
push
aad
cwtl
jne
cmc
push
jb
cmp
pushw
pop
fs
inc
repz
push
pop
and
cmpsl
jl
in
fcomps
lea
push
fwait
movsl
movsb
cmp
es
scas
pusha
add
scas
cwtl
sub
scas
jmp
repz
repz
pop
test
push
mov
test
push
mov
mov
repz
filds
or
testb
jl
mov
mov
in
adc
stc
or
movsb
sub
aad
insl
lcall
push
add
push
lds
outsb
push
cld
sarb
flds
inc
cmp
and
xchg
mov
push
nop
scas
push
sub
roll
ret
pop
add
push
mov
sti
jl
add
imul
or
das
dec
movsb
aaa
jecxz
xchg
and
xor
pusha
test
jno
or
dec
cmp
xchg
jae
or
and
add
push
sbb
jne
scas
arpl
inc
pushf
aaa
adc
inc
fadd
cmp
mov
mov
jmp
mov
sahf
sub
out
call
pop
ret
cmc
ljmp
shrd
push
mov
adc
loope
mov
lods
in
adc
cmp
stc
enter
hlt
les
ljmp
test
icebp
jae
stos
cmpl
mov
push
sbb
fistpll
mov
mov
pop
jne
or
sti
and
push
adc
das
mov
mov
xor
or
xor
mov
and
pop
test
sub
fiadds
testl
cwtl
popa
adc
add
movsb
in
bound
pop
divl
int3
pop
ret
adc
mov
jo
or
scas
cmpsl
imul
jmp
mov
sarb
and
clc
loopne
pop
nop
pop
adc
clc
push
popa
jl
loopne
or
lock
in
mov
popf
add
and
add
mov
imul
add
inc
mov
adc
roll
adc
icebp
and
addr16
out
or
ror
int3
xchg
jg
inc
test
xchg
fadd
inc
mov
jbe
test
sbb
ficompl
mov
adc
ljmp
scas
pop
sub
ja
aaa
lahf
dec
cmpsb
js
rclb
mov
jne
or
sbb
and
mov
jge
insl
inc
xchg
cwtl
xchg
cmp
dec
lds
xor
push
jl
sbb
or
jo
je
aam
push
addb
or
fldenv
add
dec
jmp
xchg
call
stos
jno
pop
ljmp
outsl
xor
push
mov
jp
icebp
add
cwtl
cli
mov
lret
insb
xor
jle
enter
sti
test
in
cmc
mov
or
push
mov
adc
test
mov
mov
adc
test
mov
jns
jnp
sbb
and
sbb
out
cwtl
icebp
sub
pushf
ret
lret
mov
mov
and
mov
sbb
ja
andl
mov
dec
sbb
arpl
ljmp
sub
mov
std
fistpl
xchg
sbb
xor
andl
sbb
jnp
jge
int3
inc
cltd
jns
mov
jecxz,pn
xchg
mov
push
mov
nop
mov
mov
dec
push
test
in
inc
xor
xchg
ja
add
in
lea
aad
movb
cmpsb
push
je
out
push
movsb
les
push
out
xlat
cld
leave
adc
dec
gs
maskmovq
sbb
cmc
fwait
loopne
pop
pop
sub
adc
or
ret
sbb
push
mov
out
mov
inc
aad
outsb
push
out
inc
xchg
mov
repz
stc
sub
fidivl
shrb
mov
xor
adc
pop
and
testl
xchg
mov
fsubrl
movsb
test
sub
stc
test
cmp
out
add
negl
fwait
xchg
lret
jg
rorb
and
xchg
inc
shll
jl
xor
sarl
aad
mov
push
aam
mov
stc
jbe
lahf
fwait
cmp
mov
xor
repz
adc
arpl
in
xor
test
mov
mov
and
das
mov
adc
cmp
sahf
adc
pushf
add
je
jbe
jmp
xor
popf
xchg
sbb
addr16
cmpsb
and
inc
add
xor
das
out
lahf
push
andb
test
aaa
inc
ret
xor
inc
xchg
mov
enter
mov
js
adc
add
sub
repnz
cmpsl
mov
fs
fcoms
pop
xor
fwait
mov
mov
fwait
pop
mov
out
mov
scas
scas
shlb
stos
ss
pop
xchg
gs
icebp
test
cltd
pop
je
cli
out
or
push
mov
ss
jge
inc
in
mov
mov
loope
test
sar
mov
pop
inc
xlat
xor
add
pop
xor
jmpw
icebp
sti
mov
jmp
enter
xor
lea
xor
mov
mov
push
fildl
gs
sti
jns
fbld
fistps
ror
jae
and
adc
je
mov
clc
sbb
xchg
xchg
push
ficoml
in
jns,pn
inc
loope
and
mov
ficomps
push
dec
jns
mov
insb
push
cmc
orl
in
mov
stc
mov
mov
add
sahf
pop
clc
div
push
push
loopne
ja
mov
sbb
fdivrp
and
adc
cmp
insl
cmp
or
insl
jns
sbb
fnsave
inc
sub
mov
cli
pusha
jne
or
lahf
xchg
sbbb
pushf
pop
pop
leave
or
cmpsl
pop
lret
sbb
test
je
pushf
mov
cltd
stc
jl
mov
rorb
lahf
jmp
xchg
cmpsl
and
and
push
andl
pop
jle
pop
mov
in
mov
cmpl
loopne
inc
push
mov
mov
and
adc
xchg
sbb
push
call
arpl
cmp
aad
and
aas
leave
rcrb
loope
adc
aam
enter
fistpl
fstp
push
fdivrl
int3
jmp
arpl
add
mov
xor
lcall
mov
mov
xlat
popf
lock
mov
mov
insb
cltd
add
loopne
clc
icebp
xchg
jle
mov
fadds
mov
pop
push
and
or
stos
lcall
and
sbb
jnp
sbb
mov
or
jo
xchg
sub
pop
push
jne
inc
lret
dec
out
orb
adc
adc
sub
jb
jecxz
addb
add
or
in
outsl
push
jg
lret
xchg
rcrb
xlat
pushf
cld
pop
mov
and
xacquire
pop
xor
push
pop
popl
xor
push
push
mov
mov
fcoms
gs
or
scas
inc
inc
pop
sti
leave
xchg
fstp
or
les
jae
fstps
sbb
add
sti
cmc
lahf
mov
test
jbe
or
pushl
in
hlt
movsb
sub
push
shrb
ss
out
in
mov
pop
sbb
rcrl
test
and
and
and
mov
leave
mov
scas
mov
ret
out
xchg
rorl
and
in
fistpll
or
loope
jae
cmpl
jge
rorl
in
push
inc
js
cmp
mov
pop
das
sub
xchg
imul
mov
push
xchg
mov
sarl
hlt
or
add
dec
addr16
jnp
fucomip
cld
inc
mov
nop
cmpsb
push
or
pop
xchg
add
sbb
dec
cvtdq2ps
pusha
inc
xchg
push
jl
fnsave
and
loope
dec
ss
shrl
in
call
in
jecxz
imul
ficompl
lods
mov
push
outsb
jg
xchg
dec
enter
mov
push
mov
push
stc
adc
popf
cmpl
cmp
lea
mov
add
dec
or
mov
dec
dec
dec
push
int
mov
sbb
adcl
pop
xor
dec
sbb
push
std
rcrb
dec
push
stc
xchg
hlt
lds
jge
repnz
adc
jl
cmpsl
cmc
lds
push
clc
dec
gs
incl
sub
lcall
mov
add
lcall
fs
lcall
and
or
inc
mov
cmp
add
loop
xchg
xchg
fwait
sub
mov
lea
jne
test
stc
prefetcht0
in
aas
stos
lods
cmp
pop
test
leave
mov
push
and
gs
and
popa
xor
dec
inc
and
stos
daa
aaa
mov
test
add
jge
adc
jno
push
std
mov
xchg
ret
inc
lcall
pop
sub
jle
inc
sbb
lcall
fs
std
mov
and
call
testb
dec
dec
mov
mov
jmp
popf
sahf
pop
test
fmulp
jmp
sub
sbb
xor
or
repz
xchg
mov
rdpmc
dec
jnp
xchg
icebp
mov
fadds
or
mov
daa
inc
rorb
loope
pop
pop
shlb
mov
dec
popa
or
mov
loope
ret
in
xchg
xor
push
shr
andb
or
lea
fwait
mov
jo
out
push
addb
add
adc
xchg
test
inc
out
sbb
fmull
cmpb
adc
mov
jle
ret
or
sbb
loop
in
inc
sahf
loope
sbb
cmp
out
jae
cmp
add
xchg
adcl
and
mov
jne
cld
pop
mov
repnz
adc
repnz
stos
xor
in
es
in
xchg
aad
lea
jns
popa
loop
in
mov
xor
sbbb
ret
cmp
jae
add
or
jbe
pusha
inc
shr
cmpsb
inc
sub
out
in
dec
lret
add
add
mov
jle
xor
xor
jae
inc
test
data16
stos
imulb
dec
hlt
inc
adc
inc
sub
xor
out
mov
ret
cltd
xchg
and
test
int
dec
stos
rcrb
scas
lods
xor
add
add
xor
jecxz
xchg
fs
sar
stos
jle
fsubs
or
add
ds
jecxz
jmp
jmp
dec
add
xchg
or
xor
adc
movsb
cld
pop
push
cltd
xor
mov
aad
bound
pushf
xchg
in
and
xor
pop
repnz
mov
lret
int3
les
lods
sub
rcr
fnstsw
mov
mov
push
js
and
outsl
fcmove
cli
das
mov
aad
pop
iret
jg
mov
imul
cmc
jbe
fisubl
dec
sbb
mov
lds
loopne
leave
sbb
and
jbe
mov
stc
dec
divb
loop
loopne
fs
sbb
sbbl
test
push
dec
mov
cli
in
ficoml
dec
in
push
scas
subl
fs
clc
fwait
das
iret
xlat
cmp
push
iret
enter
fcmovne
dec
sub
aas
in
xlat
pop
sub
rcl
or
sbb
xchg
add
xchg
add
mov
inc
into
jecxz
sbb
jbe
ss
icebp
sti
fisubrs
cltd
mov
push
pop
sub
jne
aam
in
mov
ret
in
mov
mull
push
add
int
xchg
jno
push
xlat
mov
or
xlat
add
or
mov
xor
stos
in
ficoms
xor
xor
mov
les
out
jae
inc
mov
mov
xchg
or
mov
ljmp
mov
pop
pop
push
cwtl
jne
pop
call
loopne
jnp
repz
adc
adc
shll
sub
shlb
insl
push
sub
lahf
fldenv
xchg
pop
loopne
cmp
shrb
pushl
mov
mov
fcmovne
ljmp
scas
lock
repz
add
ret
mov
jle
inc
inc
mulb
jle
sarl
mov
add
mov
das
cmpsl
push
cmp
mov
mov
lret
mov
mov
adc
lods
outsb
stc
xor
pushf
and
or
sub
sbb
and
scas
sbb
sub
lods
rclb
xchg
es
lods
jecxz
aas
cmpb
push
aam
std
mov
outsb
lret
data16
imul
imul
lret
es
inc
mov
out
mov
loop
mov
iret
jo
ss
mov
mov
jle
xchg
shr
ss
mov
das
dec
ja
fs
push
or
pusha
pop
mov
or
xchg
addl
mov
mov
cwtl
inc
adc
or
andl
cmp
fadds
aam
into
andb
cmpsl
sub
sbb
sub
sub
repnz
bound
push
stos
mov
xchg
rcll
test
jne
iret
lods
es
jb
sbb
cltd
inc
popf
adc
sub
mov
pop
pushf
and
mov
das
cwtl
cmp
es
out
pop
inc
test
push
ret
clc
dec
xor
fwait
ljmp
mov
fists
sbb
std
mov
addr16
xlat
shrl
and
pop
ret
xchg
lea
cmc
mov
pop
xchg
jp
adc
push
cmp
inc
sahf
aas
lds
mov
pop
fldenv
jno
arpl
fadds
inc
push
cmpsb
cwtl
xchg
xor
rorb
sbb
aas
pop
mov
or
lret
les
insl
int3
jg
cli
sahf
mov
mov
mov
mov
and
das
das
mov
call
clc
push
lret
sbb
rcl
xor
mov
cwtl
and
mov
popa
out
push
mov
xchg
popf
scas
ffree
add
mov
mov
cs
les
rcl
and
cs
lret
movsl
addl
mov
aam
idivb
ds
fldcw
movsb
movsl
cwtl
push
ds
or
inc
fucomip
setle
aad
mov
sbb
mov
and
jecxz
mov
jo
mov
sahf
jmp
pusha
movsl
ss
sbb
mov
xor
aaa
popf
xor
je
adc
cmp
mov
dec
mov
rcr
xchg
jb
sbb
popa
add
int
cmp
test
lret
fcomps
out
out
push
lcall
pop
sub
pop
sub
mov
sarl
sahf
std
gs
icebp
push
imul
jp
xchg
jbe
xor
xchg
adcb
movsb
sbbb
xor
xchg
cmp
movsb
pop
sub
cltd
xchg
and
repnz
xchg
pop
pop
xor
sub
lcall
leave
rorb
mov
push
jg
xor
repz
xor
ljmp
jne
enter
push
mov
push
pop
add
jae
pop
repnz
xor
fldenv
push
imul
cmpsb
cmpsl
addr16
repz
push
addb
dec
and
inc
cmp
sbb
push
aaa
mov
xchg
lods
cld
in
cwtl
mov
testb
stos
push
xlat
jbe
sub
inc
shlb
dec
mov
mov
and
sub
mov
in
mov
pusha
into
daa
ret
jecxz
mov
cmpsl
ja
outsb
es
or
cmp
shll
add
xor
sti
lods
mov
ret
jl
push
mov
fidivs
pop
jbe
sbbb
cmp
hlt
sbb
dec
ret
pop
dec
push
aaa
mov
mov
lods
cld
loop
fmuls
and
inc
push
lcall
add
leave
mov
adc
dec
and
push
mov
imul
jecxz
iret
jno
push
ss
bound
cmp
andb
cmp
loopne
push
fmuls
out
mov
jmp
xchg
repnz
cmp
cmp
faddl
dec
dec
icebp
xchg
mov
les
sti
mov
fdivs
or
cwtl
lock
cmp
shl
and
sbb
in
mov
cli
lret
movsb
add
es
jbe
xchg
xchg
movsb
mov
adc
xor
mov
addl
cmpsl
xchg
xchg
push
icebp
popf
adc
in
pop
sbb
call
stos
imul
scas
xchg
add
ss
adc
lret
push
pop
mov
cltd
enter
sbb
jp
inc
xor
pop
and
test
mov
lcall
jmp
lock
cld
icebp
scas
imul
test
xor
stos
movsb
and
das
jo
rolb
ret
or
mov
jo
dec
add
shll
pop
subl
dec
ret
xlat
or
pop
fidivrl
pop
cmp
arpl
enter
test
pop
dec
cmp
mov
dec
ja
lret
icebp
outsb
out
mov
jmp
adc
pop
adc
imul
sub
add
or
dec
repnz
jbe
lret
or
popa
jg
test
jle
push
inc
ljmp
addr16
sub
push
cmc
mov
sub
hlt
bnd
nop
pop
cs
lahf
sub
iret
dec
xchg
rclb
cmp
jno
lcall
push
imul
push
adc
loope
push
subl
inc
adc
lret
out
dec
pusha
and
push
icebp
rcll
arpl
and
jmp
jb
and
test
dec
sub
or
stos
inc
daa
cmp
add
adc
out
jmp
push
xor
mov
mov
bnd
test
cmp
mov
pop
das
push
push
insb
jbe
mov
and
xor
lea
les
lods
xchg
subb
and
xor
clc
jbe
es
cld
les
push
stc
adc
jbe
push
imulb
mov
push
cld
mov
out
mov
mov
jmp
gs
xchg
adc
iret
mov
and
fs
add
dec
ret
repnz
mov
out
add
cmpsl
mov
push
int3
inc
inc
cmp
mov
fmull
test
cmpsb
xor
sahf
or
and
sbb
jp
incb
mov
rorb
mov
outsb
jae
adc
aaa
and
sbb
xlat
xchg
das
in
adc
lock
cmp
dec
scas
push
mov
or
lret
lret
lock
icebp
jle
inc
push
pusha
jb
dec
mov
sar
outsb
mov
push
stos
rclb
mov
push
outsb
in
xchg
adc
cmpsb
call
adc
cmc
je
xor
mov
mov
jmp
mov
or
mov
inc
sub
aaa
xchg
hlt
sub
scas
dec
sbb
ljmpw
sbb
lcall
ret
aam
or
mov
ficoml
xchg
into
xchg
sahf
aas
aad
cmp
bound
insl
or
fs
sarb
mov
cmp
xchg
cmpsb
push
pop
dec
pop
lret
lock
adc
lods
jmp
insl
mov
sub
or
mov
inc
sub
pop
mov
mov
int
pop
andps
sub
je,pn
xor
out
repnz
jp
add
ficoml
shlb
mov
xchg
stos
ficomps
mov
scas
dec
gs
jne
xor
stos
add
rorl
stc
mov
je
ds
cwtl
sub
add
cmpsb
fldenv
pminub
push
xlat
or
sub
mov
adc
and
ret
inc
jge
rorb
data16
loopne
push
lret
and
pushf
cmp
stos
lods
in
cmp
add
jae
imul
jg
xchg
xor
cmpsl
into
mov
scas
xchg
push
mov
ljmp
in
or
out
sbb
sbb
add
dec
shr
mov
loope
dec
ret
ds
fwait
or
insl
jae
shlb
cli
testl
mov
xchg
lea
sahf
ds
mov
jnp
scas
push
sub
lods
dec
adc
in
lods
and
push
rcrb
and
push
xchg
in
scas
test
xor
stc
daa
mov
scas
mov
insl
and
addr16
sti
sbb
scas
sub
adcb
gs
es
adc
mov
ljmp
inc
jp
push
cmp
andl
sbb
out
into
js
nop
xchg
mov
adc
push
enter
jne
sbb
mov
xor
mov
push
cmc
push
mov
shlb
out
loop
in
cmp
mov
cmp
ss
pusha
cmc
les
faddp
adc
dec
jp
pop
or
in
jge
or
fmulp
pop
int3
push
arpl
daa
inc
and
out
mov
test
cmp
push
sti
in
fcoml
xchg
add
jo
ror
rol
jmp
scas
ret
cltd
mov
and
sub
out
mov
movsl
dec
loopne
out
test
lods
ds
insl
xlat
fmuls
sbbb
inc
or
mov
mov
mov
mov
mov
cmpsl
inc
movsb
addr16
mov
mov
jno
lahf
cmp
mov
scas
sub
icebp
out
cmpsb
in
mov
lret
xchg
bound
in
outsb
sbb
adcl
scas
test
fsts
mov
cltd
pop
fdiv
jnp
repnz
call
push
bound
fstpt
mov
imul
fisttps
mov
sub
loope
and
push
push
push
xchg
stc
popa
xchg
adc
ficompl
outsb
push
lds
dec
jl
jb
std
cltd
and
mov
mull
add
xor
ret
lods
jle
orb
jae
lods
int3
adc
out
lea
arpl
incl
xchg
push
std
scas
mov
xor
or
enter
push
mov
inc
call
scas
lret
repz
out
fisubrs
in
push
push
int3
sbb
lret
lods
mov
sub
pop
shlb
fdivrl
shl
repnz
push
fldcw
outsl
and
cwtl
shl
sbb
loopne
shl
cmp
pop
imull
int
pop
mov
sbb
adc
flds
lods
in
and
xchg
dec
add
xchg
sbb
xchg
jo
cmpsb
xor
ss
or
mov
scas
insb
pop
incl
push
mov
dec
push
mov
push
hlt
jno
call
sbb
roll
pop
imul
mov
xchg
mov
adc
jmp
out
fisttpll
jecxz
pop
pop
nop
add
push
push
arpl
int
arpl
adc
add
out
pop
sub
sub
ret
movsl
and
adc
jmp
jl
jmp
jns
aad
jmp
xchg
push
fs
pop
in
xchg
into
test
add
inc
fistpl
cwtl
rol
jecxz
insb
push
lods
andb
lcall
fists
jecxz
add
int
jl
out
lods
cmp
adc
push
pop
mov
sub
fucom
or
xchg
repz
push
jnp
cmpsb
sbb
iret
loop
push
stc
sbb
inc
mov
adc
ficomps
push
cli
dec
xchg
int3
add
ret
mov
jo
in
jbe
sbb
and
sbb
jb
add
cmp
inc
repnz
and
sbb
and
and
nop
cli
mov
sarl
mov
xor
mov
dec
jmp
xchg
pop
mov
and
sbb
sub
and
rclb
jns
dec
sbb
sbb
mov
xlat
mov
sub
dec
loop
adc
es
xchg
add
jl
inc
and
movsb
outsl
cmp
ret
cmp
dec
jg
inc
pop
dec
test
loop
lock
sub
cmp
mov
sub
mov
icebp
stos
insl
and
fsubrs
mov
push
mov
nop
daa
aas
jb
mov
fdivl
push
sub
adc
pop
idivl
cli
rcl
adc
sub
std
mov
or
cwtl
xchg
leave
loopne
xchg
adc
pushf
loope
rclb
dec
stos
adc
pop
sbb
ss
loope
mov
arpl
imul
aam
sbb
aam
and
and
jmp
xorb
stos
or
mov
add
fistl
scas
fists
pushf
hlt
push
xor
nop
fnsave
adc
jl
mov
es
icebp
xlat
inc
mov
cmp
xor
test
fsub
jae
lock
mov
movsl
negb
or
push
and
adc
and
clc
out
xor
gs
sahf
lock
mov
scas
xlat
out
cltd
jg
shrb
push
pop
inc
loope
lahf
js
jp
fidivs
in
or
jl
leave
xchg
test
lret
cli
mov
mov
push
push
pushf
mov
jbe
rolb
fldenv
aam
jne
jns
mov
mov
es
popa
sbb
in
cmpsl
sub
sbb
sarb
cs
movsl
sbb
mov
dec
out
sub
arpl
rcrb
xchg
test
mov
or
push
push
mov
mov
jo
or
and
sub
dec
aas
daa
cmpl
xchg
mov
bound
mov
sbb
dec
jns
in
fcompl
pop
xchg
cmp
les
lock
icebp
xor
ret
pop
sbb
mov
test
jg
dec
je
mov
mov
adc
add
jg
sub
test
adc
popf
jecxz
adc
pushl
cmp
mov
arpl
ss
jecxz
mov
inc
into
shl
fdivrl
jne
xchg
mov
pop
pop
loopne
jecxz
sub
lret
mov
frstor
sbb
mov
dec
in
jo
imul
xchg
mov
negb
xchg
pop
test
add
shll
push
movsb
inc
rol
js
fisubrl
sbb
sarl
mov
mov
ljmp
lcall
jno
xchg
out
dec
push
lret
push
xor
push
dec
insl
mov
adc
xchg
lock
inc
mov
in
ljmp
jo
mov
adc
test
xchg
lret
pusha
and
aam
sbb
inc
insb
pop
js
xor
hlt
int3
outsb
sar
push
clc
sahf
ss
xchg
fisttpll
sbbl
int
xor
or
clc
scas
xor
lea
cmc
jmp
aaa
sbb
mov
mov
add
and
cmc
mov
sub
xchg
xor
test
sbb
inc
sarb
xchg
mov
jae
nop
addr16
lock
jl
jp
xor
cmc
sub
dec
bnd
xchg
jecxz
mov
dec
push
xor
faddl
lcall
xchg
idivl
or
data16
outsl
pop
add
popa
jle
and
push
and
lock
repnz
dec
jle
push
sub
cwtl
xorb
xchg
push
stc
push
mov
frstor
daa
loopne
aaa
push
repz
test
iret
fs
pop
dec
sarl
mov
pop
outsb
xchg
cwtl
inc
add
cmpsb
hlt
pop
popa
in
jecxz
adc
lds
jl
ljmp
sbbb
movsb
cmp
sahf
cmp
pusha
ss
sbb
lcall
test
hlt
push
dec
leave
sub
xor
in
scas
jne
pop
and
clc
inc
cli
sub
inc
push
out
ret
add
cmpb
insl
aad
imul
jns
cmpsl
aad
push
filds
push
sub
xchg
cmp
adc
ds
and
and
add
movsl
dec
mov
cmp
or
insl
inc
inc
cltd
mov
mov
shll
lock
or
std
add
push
out
and
or
dec
insl
insb
scas
fldcw
outsl
mov
mov
in
jg
jns
dec
sub
mov
jnp
lds
jbe
rcll
mov
js
mov
out
ret
arpl
mov
nop
repnz
sarb
clc
jb
add
dec
mov
mov
cmc
out
mov
adc
pop
in
cld
gs
mov
fdivrs
int3
rcrb
fists
jge
fisttpll
mov
push
and
ficomps
aad
into
jne
js
test
lahf
es
aad
cltd
push
jo
mov
inc
les
movsb
sub
jecxz
into
lea
call
mov
jo
sbb
dec
add
sub
in
mov
add
jo
sub
mov
cld
and
cmpxchg
dec
clc
adc
xor
push
das
mov
fistl
aaa
sbb
mov
inc
inc
cmc
pop
add
stc
push
mov
push
or
sbb
cmp
in
mov
push
pop
hlt
inc
iret
cmp
xor
or
or
dec
inc
mov
iret
mov
call
or
dec
push
jno
mov
das
mov
rorb
les
outsl
ss
ficomps
inc
aad
pop
ret
int3
out
push
cwtl
rep
rclb
mov
lret
dec
xor
out
shlb
push
cltd
icebp
shlb
pop
pop
loop
pushf
stc
mov
inc
xor
xorl
or
lods
bound
adc
sti
mov
ljmp
arpl
lds
rcll
gs
jo
insb
ljmp
bound
ds
fwait
mov
repnz
fptan
xchg
pushf
and
sub
pop
ljmp
and
jecxz
sub
mov
mov
test
dec
push
or
cld
call
jne
fs
pusha
mov
bound
and
sub
jecxz
in
sbbl
in
inc
shlb
rcrb
fs
mov
in
sbb
mov
int3
jp
test
and
cmpsb
adc
daa
loop
jae
adc
jp
mov
mov
or
cli
rcll
xchg
pusha
in
and
xchg
push
stos
cmp
inc
arpl
stos
xor
dec
mov
adc
and
shrl
lods
imul
clc
xor
jns
rcrb
push
jno
sub
adc
jmp
sub
dec
shl
jmp
inc
adc
or
jo
cwtl
sbb
xchg
sbb
ret
cmp
cld
add
xchg
fwait
xlat
xchg
jecxz
das
xchg
pop
or
ret
test
pusha
in
inc
nop
call
iret
xchg
mov
aam
in
dec
mov
push
fwait
into
mov
pop
mov
mov
lods
xchg
dec
ret
and
xchg
fwait
dec
mov
mov
push
xchg
add
inc
push
cmp
or
fidivl
add
jg
lds
das
cld
jecxz
cs
stc
aad
mov
loopne
in
push
test
in
jns
pop
push
or
dec
jo
mov
sub
mov
movsb
jae
repnz
adc
ljmp
mov
loop
adc
lods
and
push
pusha
adcl
ds
pop
xchg
jae
mov
adc
sbb
or
lock
es
sub
imul
enter
mov
movsl
jo
xor
scas
mov
xchg
ret
aas
out
mov
out
mov
and
push
push
stos
scas
sub
mov
hlt
inc
add
jge
test
aam
push
popf
psubq
push
fsubl
add
imul
shlb
subb
nop
loope
insl
insb
repnz
mov
fs
push
ds
mov
cmpsl
aad
cmp
jbe
movsb
sti
popf
xor
js
sbb
ficoml
sub
push
dec
xchg
pop
fsubr
push
cmp
lock
jne
lods
int
rorb
je
aam
or
mov
jp
or
fimull
sbb
and
and
fidivrs
insl
jmp
push
cmp
inc
pop
and
push
mov
fidivl
mov
sbb
pop
xchg
movsl
repnz
ljmp
dec
rorb
sbb
pushf
adc
push
jge
pop
adc
sub
imul
or
scas
push
nop
mov
dec
hlt
cli
mov
test
mov
test
out
cmpsl
mov
lock
add
xchg
lcall
push
and
pop
cmpsl
sbb
in
divb
testb
test
out
pusha
dec
in
dec
ss
inc
in
sarl
mov
je
push
fwait
xchg
dec
xchg
ds
cmpl
and
ljmp
sub
push
lret
push
loop
or
pop
loope
push
stc
inc
mov
jmp
mov
mov
sub
mov
push
sub
jle
andl
incl
pushf
mov
mov
enter
aad
mov
fs
jg
sbb
pop
push
and
mov
movsl
mov
pop
popa
add
insl
mov
jb
mov
pop
adc
lahf
adc
into
mov
in
gs
ds
and
adc
dec
jge
dec
stc
push
xchg
cld
push
in
movaps
faddp
cmp
cmp
adc
mov
fisttps
xor
push
push
jae
pop
outsl
inc
sub
rol
repnz
cmp
sbb
lret
adc
push
mov
mov
jmp
lahf
mov
out
pop
jg
imul
dec
int
setle
es
add
mov
pop
leave
gs
adc
cltd
jbe
out
lret
cmc
ds
bound
in
jb
mull
sahf
hlt
in
jns
mov
outsb
movsl
cltd
add
fsubrp
fsts
cmpsl
pusha
cmc
movsl
dec
lcall
sbb
push
iret
or
pop
dec
jbe
fstpl
dec
jb
inc
sub
adc
repz
xor
jmp
mov
ret
jmp
mov
cmpsb
adc
dec
pushf
gs
sub
insb
sbb
test
adc
pushf
adc
scas
ljmp
es
add
in
imul
push
mov
cmp
fwait
test
xchg
pushf
dec
and
xchg
pop
popa
das
mov
add
stos
mov
clc
test
aas
sbb
push
in
jl
cwtl
cmp
hlt
add
cld
pop
dec
dec
push
jo
test
xchg
rcll
loop
adc
enter
iret
pop
ja
in
sbb
scas
mov
arpl
sbb
and
jge
add
or
fstl
sub
xlat
and
push
test
push
movb
pushf
mov
mull
dec
popf
pop
jb
push
in
je
cmp
sub
mov
inc
fs
mov
push
push
sarb
stc
icebp
cmovp
scas
mov
or
jmp
std
cmpsl
mov
scas
mov
mov
pop
cwtl
icebp
jg
fdiv
aad
fists
out
cs
loopne
shlb
pop
ret
outsb
mov
cmc
popf
dec
mov
lods
je
cmp
sbb
sarb
les
lods
cmp
adc
iret
and
pop
nop
iret
sub
pop
aas
dec
adc
negb
push
shrl
addr16
js
ficompl
fcompl
jecxz
mov
jmp
push
pop
add
ret
sub
movsb
outsb
int3
or
and
in
jns
dec
clc
mov
adcb
jbe
ljmp
fdivl
aad
popf
pop
sub
sbb
push
scas
inc
ret
xchg
pop
lods
inc
push
and
insl
cmpsl
mov
cs
mov
int3
mov
enter
dec
inc
inc
mov
aam
subps
test
loope
jnp
add
jg
orl
sbb
pushf
adc
lahf
gs
je
outsl
inc
fists
pop
out
cmp
mov
xor
das
call
not
roll
xor
nop
test
cmp
add
pop
add
out
arpl
cmp
popa
mov
lcallw
jle
mov
fimuls
mov
js
in
cld
jb
add
push
xchg
mov
xorl
repnz
xor
daa
out
pop
jecxz
loope
cltd
lods
rolb
xor
push
jns
outsl
orl
fsubrs
ss
jge,pn
test
jg
je
stos
cmp
push
imul
nop
sub
inc
repz
ret
test
fwait
mov
jp
adc
fldl
and
mov
outsl
push
mov
mov
ret
add
dec
or
push
pusha
and
mov
lods
dec
cmp
stos
mov
or
push
xchg
pop
jnp
xchg
movsb
xchg
arpl
sbb
dec
mov
xchg
cmp
jg
add
test
mov
pushf
jle
scas
test
sbb
negb
shl
mov
int3
push
adc
and
xor
rorl
sub
and
sarb
aaa
fisubl
cmp
insb
mov
fs
fisttpl
sarb
repz
mov
xchg
leave
lds
dec
lret
jo
arpl
decb
hlt
fwait
pop
sub
jle
mov
inc
push
gs
fcomps
cli
jecxz
and
push
jae
dec
adc
mov
iret
mov
adc
repz
jns
fstpl
inc
mov
ffree
imul
sbb
sarb
imul
sub
outsb
call
lret
adc
adc
rclb
ret
lcall
mov
adc
xor
mov
sub
loop
andl
dec
leave
inc
add
and
inc
test
jp
and
mov
jo
aas
movsb
out
sub
pmullw
adc
mov
xlat
inc
lret
mov
xchg
push
shll
inc
loop
cmp
and
bound
call
nop
inc
or
inc
mov
pop
pop
stos
push
fldenv
lds
mov
adc
xor
sar
stos
dec
inc
cld
xchg
adc
mov
pop
loop
mov
cli
int3
cmp
or
push
jmp
sub
lods
mov
push
xor
scas
inc
or
inc
roll
fldln2
rorb
jle
xchg
and
mov
mov
scas
fcoms
clc
and
cmpl
loopne
test
and
sub
fstps
das
clc
aas
dec
xor
pushf
jae
inc
jl
jl
outsl
mov
add
sbb
stos
cmp
inc
imul
pushf
out
mov
jge
add
es
nop
out
mov
sub
mov
sbb
outsb
mov
inc
repz
push
icebp
xchg
xor
iret
sub
sub
mov
je
jns
sbb
scas
push
inc
jmp
std
pusha
fmuls
popa
into
xor
dec
push
dec
or
add
rorl
or
xor
xchg
or
mov
aas
ret
fnsave
mov
or
mov
cmp
and
push
aad
aaa
sarl
dec
dec
pop
jecxz
mov
jno
scas
fdivs
xor
aas
repnz
xor
into
push
wbinvd
ret
and
inc
sbb
lahf
bound
rcr
dec
ss
pop
outsb
mov
push
adc
push
xor
push
lea
sub
mov
ljmp
fldt
stos
sub
cmp
jp
mov
push
xor
repz
pop
mov
stos
push
adc
inc
scas
xchg
fcmovnu
push
mov
imul
push
mov
fadd
adc
fmull
xor
pop
bnd
bound
testb
sub
popa
mov
stos
pop
test
sahf
mov
hlt
out
sahf
dec
xor
inc
testb
jo
push
mov
mov
sub
pop
cmpsb
push
ret
dec
fbld
mov
dec
cltd
sub
in
in
inc
jbe
adc
sbb
and
fisubl
gs
jae
xchg
pop
lcall
stc
sbb
daa
test
movsl
imul
sbb
fsubs
xchg
cwtl
push
mov
mov
sbb
mov
shr
addl
dec
inc
xor
cmp
aad
cmc
cli
shll
out
cmp
mov
pop
pop
lds
fbld
dec
fimull
lret
mov
xchg
cmpsl
sub
popa
bound
sahf
mov
mov
out
push
js
cmpsb
fisubs
xchg
ds
dec
cmpsl
fs
daa
xor
pop
lret
aad
jmp
xchg
int3
mov
jo
mov
sbb
pop
aam
loopne
divb
decb
cwtl
cmpsb
and
and
lahf
outsb
push
lds
push
mov
or
xchg
notl
lcall
sub
rcrl
test
sbb
jnp
pop
xor
aas
inc
push
dec
cmp
sub
rolb
xlat
pop
scas
and
xchg
push
out
sahf
xor
stos
icebp
add
jle
dec
sub
pmulhw
movsl
mov
in
push
cmp
sbb
jp
negl
jle
cmc
jmp
movsl
mov
jp
in
test
cwtl
mov
add
movsl
insb
jb
push
cmp
lods
xchg
xor
push
xlat
and
loope
xor
mov
mov
lret
in
adc
inc
lds
fmul
inc
imul
mov
adc
imul
sbb
ss
je
int3
jno
mov
or
xor
push
movsb
mov
mov
jo
cmp
xor
mov
sbb
inc
jo
mov
adc
sub
xchg
enter
out
jne
push
loope
mov
xor
or
or
dec
aam
fstl
insb
rorb
in
into
into
andps
das
rep
xchg
xorl
movsb
push
xor
bound
test
mov
lahf
dec
xlat
adc
addr16
mov
xchg
js
mov
mov
in
jne
lea
mov
cmp
jo
xor
or
push
in
and
mov
jle
stos
iret
je
cmp
and
xchg
mov
shrb
push
daa
sub
xor
adc
adc
cltd
dec
cli
add
xchg
jo
aam
data16
and
fcoml
mov
sub
xchg
sahf
xor
mov
leave
jo
inc
aas
incl
rclb
jbe
or
dec
xchg
jl
dec
jbe
shl
xor
push
xchg
shr
pop
les
sbb
or
sbb
dec
mov
gs
xor
orl
fisubrl
mov
lock
or
scas
xor
stos
std
leave
ret
push
mov
mov
jge
sub
mov
mov
sub
xchg
icebp
mov
mov
inc
pushf
popf
inc
fnstenv
inc
cmc
in
dec
cmp
mov
xchg
scas
lcall
aad
lock
imul
mov
mov
je
cmpsb
repz
popf
sub
mov
into
insl
fisubl
mov
xchg
and
stos
inc
cmp
xor
lds
lcall
mov
fsubl
mov
mov
cli
int3
test
adc
pop
cmpsb
dec
lods
insl
cmp
push
or
pop
push
test
data16
scas
sub
and
xor
cltd
sub
cli
outsb
ffreep
gs
lret
outsl
aad
jp
push
cmp
jae
sahf
mov
mov
inc
xchg
pop
jmp
dec
mov
xchg
test
adcb
pop
adc
fs
out
cli
xchg
out
jnp
arpl
lods
outsb
jecxz
or
inc
fcoms
loope
cltd
and
testl
stos
or
push
fisubrs
xchg
pop
test
insb
jl
fwait
mov
outsb
mov
jge
xchg
push
sub
jle
adc
push
imul
pop
inc
xchg
cmp
popf
lret
int
or
sub
aad
lret
mov
pop
inc
xchg
dec
mov
or
dec
jno
pop
mov
testl
bound
inc
stos
sbb
or
sub
cmp
or
pop
mov
jle
mov
sub
push
test
pop
mov
mov
mov
jmp
adc
mov
add
notl
xchg
push
add
xchg
leave
pop
xchg
cmc
xchg
pop
fistpl
or
or
pop
dec
sbb
jmp
or
push
js
mov
mov
adc
pop
add
mov
int3
outsb
rol
loopne
popa
icebp
mov
add
movsb
pop
and
test
mov
test
ljmp
xchg
pop
jl
mov
add
stos
jno
push
xchg
jmp
lock
test
sahf
loop
bound
xlat
xchg
pusha
cltd
jmp
arpl
mov
or
daa
mov
out
test
aam
mov
jecxz
jl
stos
push
shrl
leave
mov
imull
subb
xor
sub
data16
outsb
clc
insb
bound
jnp
push
je
and
mov
pushf
ret
ja
sub
jecxz
inc
daa
or
sub
pop
sub
cwtl
adc
sbb
mov
inc
push
jnp
push
pop
cmp
jl
dec
stc
mov
aas
jmp
or
cmp
jmp
sub
jnp
pop
inc
mov
mov
xchg
ds
push
add
push
push
stos
insb
hlt
xchg
push
fidivs
push
gs
mov
lds
fldcw
test
loope
or
sub
decb
hlt
mov
sbb
mov
repz
test
lahf
xor
pop
movsl
lods
les
cltd
stos
or
dec
das
popa
dec
cmc
add
adc
xor
push
popa
inc
in
push
ret
pop
inc
mov
mov
cli
int
loopne
leave
outsb
fmul
enter
shr
dec
aad
push
aad
mov
scas
out
mov
mov
repnz
rol
adc
inc
push
cltd
movb
or
stc
adc
iret
push
mov
mov
push
sbb
les
xor
nop
push
cli
jns
mov
stos
jbe
out
mov
fildll
int3
add
rcr
xlat
mov
adc
jmp
addl
inc
jecxz
fnclex
dec
dec
mov
jbe
aas
sub
mov
push
xor
mov
push
sbb
mov
push
cmp
jge
out
xchg
adc
leave
fsubl
shll
mov
mov
jecxz
mov
cld
roll
in
testl
mov
je
pop
inc
pop
pop
stos
jnp
inc
xchg
xchg
sbb
out
scas
out
cmp
dec
js
mov
imul
fucomp
insl
cmpsl
in
xchg
jle
jmp
jno
pop
jns
fbstp
in
push
out
or
pop
ss
inc
xchg
gs
lahf
cmp
scas
add
movsl
xlat
xor
out
mov
aam
push
int
and
push
adc
xor
mov
mov
fistpll
scas
mov
pusha
hlt
insb
lahf
cltd
push
add
and
stos
jle
mov
xchg
dec
xchg
scas
rolb
sbb
ficompl
es
or
ss
out
mov
inc
dec
ss
loope
repz
cwtl
inc
sub
mov
mov
lods
sbb
xorb
push
out
xchg
and
icebp
xor
shl
movsl
push
lret
sub
aas
cmp
inc
cmpsb
jnp
push
inc
dec
dec
dec
arpl
pop
pop
sahf
push
aaa
movsl
push
sbb
nop
stos
stos
imul
add
loop
in
or
in
movsl
or
pop
or
jbe
cmp
ror
rclb
mov
mov
loop
sahf
into
scas
negb
inc
pop
adc
cmp
push
je
jg
scas
add
insl
out
cmp
mov
cmpsb
push
ljmp
scas
popa
cmp
pop
pusha
mov
xchg
mov
sbb
jae
adc
mov
hlt
mov
xchg
outsl
add
xor
add
loope
sub
repnz
sbb
push
fstp
lods
xchg
jmp
enter
cmpsl
mov
loope
fstl
mov
jp
push
push
ss
push
add
push
push
push
adc
sbb
into
lods
repz
into
sub
in
xor
mov
ds
pop
xchg
test
sbb
add
or
loopne
repz
or
add
pop
orb
mov
movsb
pop
cmp
enter
out
cmp
dec
iret
pop
cmp
cld
sarl
insb
and
int
jnp
cli
mov
out
lcall
jg
and
cmc
mov
movsb
jmp
xchg
mov
or
mov
jmp
xor
add
pop
or
decb
adc
mov
test
push
pusha
test
pop
adc
pop
mov
cmpsb
pop
mov
add
pop
cmpsl
xor
pop
idivb
mov
je
dec
dec
fld
pop
and
js
fdivl
xchg
hlt
mov
push
out
daa
pop
xchg
pop
rcll
add
fs
sub
mulb
ret
mov
shrb
pusha
aaa
inc
fildll
pusha
cmpsl
inc
mov
iret
mov
testl
repz
arpl
iret
mov
push
push
fwait
in
or
push
test
mov
lods
ficompl
xor
int3
aas
lods
add
daa
scas
les
and
push
mov
xchg
dec
mov
mov
outsl
fs
mov
dec
in
mov
and
inc
fstsw
mov
addb
bnd
scas
mov
std
rclb
leave
jnp
call
xchg
das
rorb
push
mov
jecxz
int3
push
subps
cmpsl
add
aas
push
jae
shlb
ds
imul
xchg
popa
add
xchg
cmovp
adc
inc
mov
scas
sbb
lods
cmpb
ja
test
xchg
lods
mov
mov
fcmovne
jmp
popf
xorb
push
push
pop
pop
pop
mov
das
mov
std
mov
aad
and
inc
int
mov
push
negb
inc
push
imulb
mov
test
cmc
cwtl
adc
xchg
popa
bound
lods
inc
int
std
mov
leave
jg
cs
in
pop
pop
test
sarb
notl
mov
popl
mov
aas
cmp
cmpsb
jne
xchg
cmp
popf
sbb
out
iret
divl
push
mov
test
sub
scas
call
lea
loopne
xchg
out
test
pop
das
gs
sarl
sub
mov
or
test
mov
imul
mov
sahf
cmp
sub
lea
and
fcom
incb
mov
jns
adc
jns
cwtl
insb
and
sbb
cwtl
test
cmpsb
jb
push
stos
adc
in
loopne
test
xor
and
imul
jp
sbb
sbb
pop
mov
sbb
cld
mov
dec
in
adc
cwtl
loopne
das
jo
scas
fists
ret
lods
mov
push
adc
add
mov
push
jl
mov
push
xchg
add
dec
xchg
sbb
mov
imul
ret
jns
insl
scas
add
mov
outsb
bound
mov
adc
lock
push
xchg
rolb
cmc
jnp
mov
jp
xchg
cwtl
les
lods
fsts
testb
aad
scas
jmp
nop
outsb
mov
rolb
pushf
sbb
push
push
paddb
pop
add
mov
xchg
cmp
xor
in
cmp
or
mov
sbb
cwtl
mov
fnstcw
or
and
aam
lahf
mov
cld
xor
pop
pop
mov
test
fstpt
sar
pusha
jno
and
mov
mov
or
into
mov
xchg
fwait
cmpsl
leave
nop
mov
mov
sti
xor
rorb
mov
or
into
inc
in
leave
xor
stc
cmp
out
sbb
jno
sbb
sbb
lods
mov
in
sbb
nop
call
pop
cmpl
out
pop
cld
neg
pop
push
pop
mov
jecxz
cmp
clc
repz
sbb
xchg
movsl
xor
aad
inc
or
cmp
js
add
mov
xchg
incb
and
jg
daa
dec
popa
or
cmc
les
stos
pop
dec
cwtl
clc
test
mov
idivb
jns
pop
xor
out
testb
rcl
aaa
and
adc
in
inc
ret
mov
cli
sbb
dec
mov
divb
jle
sqrtps
dec
loopne
stc
add
lds
and
inc
ret
dec
sub
dec
mov
int
mov
std
inc
jno
stos
das
or
aam
mov
icebp
in
inc
subb
mov
scas
push
cmp
xchg
dec
mov
cmc
pop
fcoml
jle
inc
mov
into
mov
rorb
fucomp
lret
jo
or
test
insb
or
sbb
fcoml
and
jecxz
aaa
lahf
mov
int
aaa
xor
mov
ljmp
nop
mov
repnz
test
push
mov
lret
cmp
inc
jmp
leave
repnz
dec
sahf
mov
dec
ds
cmp
aaa
shll
xor
dec
or
mov
lea
xchg
jle
dec
lods
mov
fstp
insl
sub
stc
stc
neg
je
sbb
loop
dec
int3
fisttps
mov
pop
or
jo
lods
lcall
fsubrs
inc
iret
ja
scas
fstpl
pop
cli
mov
loopne
inc
lahf
sbb
lret
in
cmpsl
dec
inc
shlb
jmp
push
adcb
cwtl
xor
adc
lock
test
dec
fcoms
jg
push
push
mov
clc
cld
xchg
leave
fsubrs
clc
pusha
sbb
push
mov
je
adc
push
push
inc
stc
push
fs
mov
sti
lock
loop
jmp
loope
jnp
cs
movsb
jp
xor
mov
lret
and
pop
mov
cmp
shl
aad
lret
out
aaa
jo
push
fiadds
divb
mov
loope
scas
cli
jle
cli
jns
ret
cmpb
dec
fcoms
cmpl
int3
cwtl
adc
in
adc
movsb
sub
lds
sbb
adc
sahf
dec
test
jle
mov
cmpsl
enter
mov
pop
xor
dec
sub
xchg
call
in
sub
int3
shlb
xchg
push
cmp
cld
pop
and
enter
lds
movsb
lea
add
or
mov
out
fisubrl
xor
ja
icebp
xchg
mov
cs
mov
lock
push
in
sbb
xor
xchg
fmul
adc
push
arpl
add
sub
sbb
inc
je
and
out
icebp
std
inc
inc
insl
je
fcompl
es
adc
push
outsb
repnz
mov
push
pop
pusha
mov
push
mov
inc
test
idiv
subl
in
out
pusha
xor
ret
rolb
mov
outsl
push
pop
push
adc
push
movb
mov
jae
lret
fmul
jl
jns
outsb
lret
adc
stos
cmp
mov
mul
and
scas
pop
sahf
pop
dec
test
pop
and
sub
xchg
sbb
js
jecxz
andl
sbb
mov
arpl
scas
repnz
mov
lock
lret
fs
outsl
ret
lods
mov
xchg
cmp
pusha
cmp
loope
jmp
sbb
mov
or
das
sahf
daa
call
or
jle
xchg
pop
mov
ja
jns
mov
dec
mov
ljmp
hlt
addr16
add
insb
call
mov
test
cmp
cmp
cs
and
cltd
icebp
cmp
push
sahf
test
mov
mov
fs
dec
out
xchg
mov
add
dec
ss
adc
mov
sbb
adc
dec
lahf
inc
lahf
mov
hlt
inc
enter
int3
sub
nop
scas
push
sti
in
add
dec
pop
mov
movsl
push
loopne
mov
dec
sub
adc
push
cwtl
out
aad
cli
sbb
scas
jp
add
ss
cmp
jb
mov
and
pop
and
jmp
xchg
repnz
lcall
js
push
test
mov
pop
or
dec
ror
cld
mov
sbb
in
jns
dec
roll
adc
jg
fs
pop
sbb
testl
in
mov
data16
mov
mov
pusha
mov
dec
pop
addr16
cmp
iret
inc
jns
xlat
repnz
mov
sub
in
shll
and
test
sbb
test
adc
int3
pop
inc
mov
movsl
push
ret
scas
dec
mov
pop
inc
cmc
loope
mov
inc
pushf
inc
shll
sbb
les
dec
mov
lret
shlb
clc
cmc
pop
mov
push
push
jmp
mov
cltd
fdivrp
mov
dec
xchg
mov
insb
cvttps2pi
push
jge
sub
dec
add
push
sahf
inc
dec
lock
fimull
and
test
idiv
addr16
xchg
fwait
mov
sub
add
inc
adc
mov
push
movsl
mov
mov
scas
icebp
sahf
xor
or
sti
lock
clc
lods
loop
pop
mov
cmp
lret
adc
les
sub
mov
das
stc
cli
mov
filds
in
loopne
add
add
int3
loope
and
sub
sti
xchg
shrl
and
cmp
add
inc
fwait
lods
xor
into
rclb
mov
andl
xchg
stos
xlat
push
jle
push
dec
test
cmpl
leave
ret
xor
ret
test
adc
movsb
mov
sbb
fs
int
enter
mov
hlt
fstpl
lahf
lods
insl
jmp
lcall
ret
icebp
and
in
ljmp
mov
cmp
mov
pushf
mov
mov
sbb
xchg
jl
and
mov
mov
loope
out
cmp
jmp
sahf
xchg
outsb
sbb
lret
push
int
push
int3
and
sub
lods
arpl
test
test
xor
inc
and
mov
cld
js
jl
mov
andb
gs
int3
cmc
outsl
add
movb
insb
fadd
les
cmp
inc
test
xchg
jae
add
adc
insb
cmc
popf
lahf
imul
pop
ljmp
sbbl
lds
push
add
movsb
mov
lods
mov
or
sub
in
and
iret
mov
les
jecxz
adc
lods
sti
adc
ret
or
outsb
fldenv
jle
jp
mov
xchg
push
cltd
sbb
popf
cmp
jb
bound
and
push
scas
and
pushf
jg
xchg
pop
mov
xchg
mov
jl
lods
push
dec
ss
inc
ret
jp
mov
addr16
daa
inc
pop
dec
test
out
stos
test
sbb
test
in
inc
scas
mul
xor
cmp
jb
fcom
test
jecxz
inc
push
or
push
lcall
xchg
and
push
in
cmp
icebp
or
loopne
xchg
inc
sub
mov
mov
ret
mov
pop
push
movsb
fs
dec
pop
or
popa
mov
cmp
loop
cli
repnz
lcall
popa
xchg
out
mov
sbb
push
mov
xor
arpl
mov
cmp
push
lea
test
rol
sub
and
loopne
xor
les
mov
inc
push
lahf
pop
loop
xchg
fdivs
cmp
notl
cmp
mov
pushf
dec
pop
add
cli
mov
lds
adc
icebp
fadds
js
dec
sbb
movsb
add
sbb
cwtl
inc
mov
jg
sti
mov
daa
cmp
mov
mov
push
fdivrl
dec
mov
incl
and
aaa
aas
sub
lods
movsl
inc
decl
xor
mov
fsubs
sub
sub
mov
cwtl
lcall
push
fsub
lods
aaa
je
pop
nop
repz
pop
hlt
mov
inc
or
sbb
xchg
out
stc
fwait
mov
stos
sub
push
push
jb
dec
popa
pop
jno
in
sbb
loopne
push
or
lahf
sbb
iret
icebp
aad
cmpsb
call
xlat
sbb
xorb
xchg
popa
mov
stc
adc
sbb
mov
rcrl
or
adc
inc
and
loop
mov
push
cmpsl
jo
insl
xchg
bound
sbb
aas
aaa
sub
and
and
mov
leave
jae
jno
pop
pop
push
stos
ja
jmp
movsb
pop
push
cld
jbe
pop
cmc
loop
mov
decb
push
xor
mov
mov
repnz
add
add
cmp
mov
sbb
push
ror
mov
addr16
fistpll
pop
add
mov
fdiv
or
sarl
adc
adc
fimuls
jp
mov
ja
fwait
mov
mov
cmp
or
pop
les
dec
fwait
mov
mov
mov
movsl
push
lods
jne
push
shlb
out
cltd
loop
adc
lock
mov
fwait
cltd
jecxz
lret
xor
cld
mov
mov
xor
shr
cmpsb
in
cmp
arpl
inc
mov
xchg
xchg
cmp
inc
stos
and
push
or
mov
pushf
cmp
adc
das
stos
gs
sarl
add
mov
insb
mov
ja
sbb
shlb
fsubs
mov
bound
dec
fadd
xor
aas
lret
scas
inc
leave
dec
scas
dec
push
cmp
cmp
gs
xchg
fcmovnb
pushf
or
mov
fsubs
roll
stc
scas
aad
pop
stos
cmpb
das
icebp
inc
inc
aad
lret
aas
dec
inc
lret
pinsrw
mov
insl
movl
pop
mov
lods
xchg
repz
imul
xor
adc
das
xlat
pop
cmp
xchg
lods
mov
mov
mov
xor
adc
cmp
loopne
dec
push
arpl
push
mov
fstpt
int3
shlb
inc
dec
jecxz
lcall
arpl
inc
pop
filds
fistps
jge
movsb
icebp
scas
xchg
inc
pop
ss
mov
gs
or
aaa
lds
xchg
hlt
js
sub
lock
inc
mov
jae
jp
lods
in
mov
pop
das
test
xchg
in
jecxz
dec
fisubs
ljmp
data16
mov
vcvtsd2si
mov
mov
push
jge
pop
insb
sub
dec
test
loopne
stos
sbb
jo
cmp
or
cld
mov
cmpsl
test
fstpt
rclb
mov
push
push
jle
cs
or
and
addb
sub
cld
test
roll
mov
enter
cwtl
adc
dec
and
inc
in
fistpll
ffree
and
jp
rcl
xlat
inc
mov
fcmovnbe
movsb
push
mov
mov
sbbb
xchg
and
jno
xor
lcall
daa
or
dec
xchg
pop
jmp
push
out
popf
fdiv
add
aas
fdivrp
sbb
mov
icebp
jle
dec
cs
and
fstps
cli
incb
ss
clc
in
test
xor
push
daa
clc
add
or
xchg
sahf
inc
popf
pushf
push
dec
jno
lret
imul
and
mov
cmc
sbb
dec
pop
imul
or
mov
push
int3
cmp
mov
dec
decb
pop
push
repz
in
jmp
loopne
popa
xchg
push
inc
sbb
push
push
sub
mov
add
loop
mov
les
dec
outsl
mov
jns
mov
push
sbb
cmp
jae
mov
mov
arpl
and
ret
adc
nop
dec
iret
leave
les
fmul
sbb
loope
jne
mov
jne
mov
pop
jp
icebp
mov
pmuludq
shr
fwait
shll
mov
mov
lds
xor
jbe
xchg
loop
cli
push
ret
inc
jne
dec
pop
cmp
or
movsl
pop
dec
loop
or
sub
arpl
push
inc
dec
mov
xchg
out
out
xchg
add
lock
repz
pop
jo
sbb
adc
loopne
jge
out
out
int3
lods
add
lods
rorb
aam
xchg
aaa
loopne
cmc
movsb
jle
lea
fsubrl
sbb
ja
outsb
and
lcall
mov
mov
shr
or
mov
sub
sub
les
enter
pop
cmp
cmp
xchg
loop
ss
or
testl
rcrb
in
mov
or
jb
mov
cld
jecxz
add
out
andb
lret
lret
ljmp
adc
pop
out
push
ret
sbb
add
pop
adc
pushf
push
lods
mov
inc
insb
push
jl
in
xor
mov
subl
int
lea
add
std
add
sub
inc
sbb
sbb
sti
bound
incl
mov
xor
clc
xor
andb
imul
adc
popf
inc
outsb
mov
pop
dec
movsb
out
inc
xor
lret
push
icebp
scas
std
pushw
jle
adc
push
insb
push
shl
enter
sti
push
mov
cld
out
push
jbe
jbe
cmpsb
add
pop
popf
xchg
mov
std
leave
mov
int
addb
jns
lcall
lret
push
sub
jp
inc
jno
stc
cmp
enter
loopne
jmp
adc
push
mov
sbb
mov
dec
test
add
jnp
xor
lods
ret
mov
inc
cltd
negb
xlat
jno
pusha
outsl
and
aas
cmpb
fwait
dec
ror
or
fsts
push
test
jbe
dec
jge
adc
xor
ds
jne
inc
inc
imul
in
xchg
inc
stos
cmp
in
bound
jp
in
movsl
mov
stos
shl
pusha
jbe
movsl
je
gs
movsb
addl
xchg
dec
push
xor
sub
stos
xor
icebp
and
out
aam
adc
aas
xchg
repz
call
test
adc
aad
cs
es
jge
cmp
jbe
popf
cmp
inc
sti
idiv
or
sbb
mov
xor
mov
push
pop
mov
xor
lret
mov
dec
xlat
rcrb
out
push
stos
aam
ja
xchg
pop
add
in
cmp
mov
adc
add
push
xchg
xchg
xor
push
rorb
fwait
lahf
movb
adc
mov
scas
outsl
jo
and
cmp
cs
and
fsub
loope
orb
stos
cmc
pop
ja
pop
ja
add
scas
dec
ljmp
dec
jo
repnz
mov
mov
cmp
jmp
movsl
das
xor
stos
outsl
adc
in
nop
loope
lock
test
movsl
mov
popl
gs
fcomps
pop
and
sub
mov
cmp
rcrb
loop
iret
mov
dec
iret
push
cmp
jo
sbb
mov
xlat
daa
repz
int
popf
jb
dec
mov
add
ljmp
sub
jge
int
lsl
into
mov
loop
das
push
jae
ja
into
inc
js
rclb
cmp
inc
nop
lock
shll
scas
imul
or
cli
sub
inc
lahf
sbb
aad
inc
loope
movsl
cmp
mov
mov
inc
clc
adc
sub
sbb
in
push
mov
popf
insb
jecxz
pop
xlat
loopne
jbe
stc
inc
scas
pop
sbb
pop
bound
enter
mov
ds
cmpsb
ss
test
push
mov
sub
and
inc
lahf
inc
pop
cmp
aad
adc
inc
iret
push
mov
lret
fwait
insl
in
push
jle
hlt
adc
nop
mov
add
pop
inc
or
into
push
out
lea
lock
pop
fstps
mov
push
xchg
push
pop
inc
mov
jmp
push
push
fisubrs
lods
icebp
pop
das
dec
add
cltd
sub
mov
imul
push
jecxz
clc
push
dec
fimull
data16
ds
std
rcl
ja
imul
fisttps
add
test
inc
sub
decb
inc
ret
mul
cmp
mov
subl
jae
scas
jbe
call
cld
and
sub
push
pusha
pop
mov
mov
or
mov
xchg
mov
dec
push
inc
xchg
je
cmp
ret
pop
pop
inc
push
mov
test
sahf
rol
fists
or
shl
std
push
mov
mov
outsl
mov
out
push
nopl
and
sbb
lea
call
jno
sub
jae
repz
sub
sbb
std
cli
and
arpl
jo
fbstp
ret
fwait
and
xchg
mov
inc
lcall
stos
push
inc
dec
jl
bound
add
dec
cltd
fcmovu
sub
cmc
inc
test
mov
scas
cld
loopne
pop
push
adc
mov
mov
cs
mov
adc
int3
movsb
push
imul
ret
add
mov
pusha
mov
cwtl
mov
lret
mov
pop
mov
loope
mov
xlat
xor
xchg
stos
outsb
test
inc
adcl
cmp
jecxz
das
decb
dec
popf
out
push
add
dec
into
pop
sbb
cmp
test
xor
rorb
or
pushw
push
sti
jle
cmp
dec
lods
leave
pusha
and
jmp
and
bound
sbb
jp
jecxz
fcomps
pushf
push
mov
in
push
push
in
xchg
xchg
mov
sbb
repnz
ds
pop
sahf
xchg
dec
dec
sub
cmp
xor
add
mov
incb
sti
add
data16
push
scas
sub
jnp
inc
test
movsb
adc
pop
cmpsb
call
fnsave
add
bound
ss
mov
inc
negb
ficoml
out
lea
testl
inc
movsl
cld
push
sbb
cs
sbb
or
and
addr16
fdiv
pop
insl
pop
jl
es
test
xchg
mov
cmpsb
pop
cmp
ja
sar
rcrl
sub
cmp
fimuls
push
and
inc
dec
xchg
mov
repnz
xchg
pop
scas
push
and
out
imul
scas
cmc
loope
add
mov
and
and
int
in
and
xchg
and
mov
add
ret
xor
pushf
sbb
push
imul
pop
ljmp
sbb
cltd
push
xchg
jbe
pop
outsb
sbb
mov
xchg
dec
xor
jne
jl
push
divb
movsb
xchg
add
pop
jbe
cs
cmc
int3
and
jmp
test
sub
dec
xchg
je
inc
mov
add
shrl
push
mov
imul
sub
pop
data16
xlat
iret
cld
rcll
out
ret
ja
xorb
movsl
cmc
mov
mov
sbb
and
xor
or
cmpsb
xchg
mov
sub
pop
js
dec
daa
jmp
les
subl
outsl
loop
mov
adcb
mov
push
and
pop
popf
pop
out
pop
xor
push
bound
jae
into
mov
mov
sbb
outsl
test
sbb
xchg
fisttps
enter
mov
and
adc
scas
add
popf
aaa
mov
leave
ds
stos
ja
int
ficompl
shrb
mov
pop
loopne
push
repz
sbb
cmpsl
imulb
jnp
xchg
add
add
ds
xchg
add
cmp
pusha
add
xchg
or
xchg
ja
jmp
in
add
jne
xor
and
or
pushf
sub
mov
inc
and
stc
popf
pop
mov
test
cmp
orl
sub
jae
pop
mov
push
lret
pop
pop
xor
xchg
sbb
insb
push
xchg
cmp
or
sub
mov
insl
sbb
mov
mov
jo
mov
jns
lock
push
cmc
cld
rep
and
mov
out
jge
test
pop
cld
cwtl
jne
adc
repz
decl
adc
fwait
daa
gs
cwtl
fwait
xor
lcall
jecxz
add
int3
daa
cmc
fsubrl
lock
nop
xor
rcl
or
dec
je
adc
pop
lods
iret
jmp
sar
lcall
inc
dec
test
pusha
cmp
sbb
jne
enter
and
xchg
in
push
pop
mov
mov
adc
js
or
lret
out
shlb
mov
loope
mov
adc
cmpsb
cmpsb
and
mov
pop
pop
or
cli
mov
push
cmpsl
and
mov
inc
iret
movsb
sbb
lret
mov
lds
ret
call
roll
out
adc
jbe
cmp
scas
call
jecxz
xor
hlt
mov
inc
sbb
cmp
mov
cs
pop
out
dec
lods
cld
imul
push
in
int
aam
pop
push
pusha
cmpsl
call
stc
aaa
jl
movl
es
lock
mov
call
sub
fildl
insb
sub
fldenv
shll
inc
ss
dec
std
xchg
mov
sub
or
out
xor
and
dec
xchg
arpl
adc
xor
rclb
scas
mov
bound
in
aad
lock
xchg
fisttps
mov
in
dec
fistl
lcall
lahf
inc
jnp
mov
mov
add
xlat
imul
sbb
pop
xchg
and
mov
inc
outsl
loopne
in
mov
sub
sub
inc
repz
push
arpl
sbb
lret
addr16
aad
stos
call
jmp
repnz
fbld
sub
scas
mov
aam
out
loopne
and
or
testb
dec
sub
fstps
nop
jg
fiadds
pop
jle
sarb
fwait
leave
out
test
mov
jnp
je
add
fbld
xor
in
lret
push
shll
hlt
cmc
mov
adc
add
sti
add
cmp
sub
mull
imul
pop
ja
add
mov
mov
lahf
push
cmp
in
cmp
add
mov
dec
dec
cmp
mov
mov
or
adc
pop
xchg
ror
jno
out
jmp
mov
push
pop
pop
mov
pop
dec
xor
sub
mov
imul
mov
ss
inc
push
aad
xchg
imul
out
push
push
sbb
scas
ret
cs
sahf
pop
scas
push
xlat
gs
ja
cld
push
loop
jecxz
add
xchg
or
dec
fadd
xor
xchg
xchg
aam
dec
add
mov
pop
mov
scas
lods
repnz
jp
aam
sub
push
out
test
add
ror
sub
into
loope
rcll
mov
js
and
cmc
lahf
roll
aas
cmp
std
mov
repnz
sbb
dec
jmp
mov
pushf
inc
roll
jnp
xor
inc
scas
push
pop
add
es
lods
sbb
pop
push
mov
daa
sub
aad
scas
adc
xor
sbb
and
xchg
ds
inc
rorl
ja
or
out
xlat
in
push
mov
adc
lock
das
jl
xchg
test
mov
mov
mov
push
mov
js
outsb
xor
push
sub
xchg
mov
add
imul
sbb
lods
lds
out
push
jo
gs
jae
sarb
sub
fwait
test
imul
cmp
push
pop
sbb
loope
fidivl
or
lds
cld
movsl
ret
pop
cmp
pusha
nop
xor
iret
xor
das
iret
xchg
jne
mov
iret
icebp
add
lods
pop
repz
test
and
cmpsb
xor
lds
sbb
xor
inc
js
mov
xor
mov
rol
movsl
fld
or
push
je
jp
out
rcrb
adc
sahf
es
sbb
push
test
in
pop
test
outsb
xor
sub
xor
cmp
mov
rcll
incb
xor
sub
xchg
add
icebp
addr16
add
int3
popa
xor
push
outsl
in
dec
adc
test
xlat
xchg
pmovmskb
xchg
fstl
xchg
or
cmp
repz
sbb
lods
mov
sbb
test
mov
test
lret
xchg
jns
js
inc
nop
jle
push
call
fiadds
ficompl
push
cmc
jp
cmp
loope
rcrl
lret
jmp
pop
int
aad
or
push
mov
arpl
or
adc
lods
mov
in
sbb
ss
sbb
fnstcw
nop
imul
and
fbld
repz
dec
imul
lock
xchg
jl
jmp
mov
shll
inc
icebp
aad
arpl
cmp
mov
out
and
loope,pt
inc
push
pop
push
inc
or
adc
add
imul
xchg
scas
mov
push
mov
movsl
sbb
pushf
icebp
icebp
mov
in
jg
loopne
adc
mov
mov
sbb
pop
mov
cli
ss
xchg
sub
or
mov
rorl
das
fs
lahf
jg
adc
mov
dec
mov
push
lds
repnz
in
cld
pop
mov
push
sbb
outsb
inc
pop
jmp
sbb
xchg
push
mov
and
popa
xchg
cmp
out
lea
imul
rolb
jl
jmp
imul
into
cmp
cwtl
and
jb
pop
repnz
mov
nop
and
jns
and
mov
scas
ja
sbb
cs
pop
mov
loopne
adcb
ja
mov
push
gs
jl
cmc
push
shl
cmp
push
mov
std
outsl
test
or
out
imul
jbe
xchg
loope
sbbb
mov
xor
mov
or
insb
lds
stos
aaa
js
sub
stos
lea
dec
add
add
pop
and
push
cmp
in
mov
mov
lahf
jmp
cs
enter
mov
sahf
out
and
outsb
loopne
inc
cmp
int
and
rclb
push
xor
cwtl
xchg
xchg
jle
mov
cmc
sbb
pop
mov
sub
out
sub
dec
mov
and
fs
xorb
inc
sbb
in
aam
mov
inc
lcall
mov
cmp
or
andb
outsl
add
sbb
mov
mov
sbb
or
xor
pop
mov
mov
imul
xor
scas
lock
pop
enter
pop
popa
ds
xchg
xor
movsb
cmpsb
push
or
in
repnz
sub
dec
hlt
adc
push
xchg
ljmp
inc
adc
call
and
enter
cmp
pop
inc
cvtdq2ps
cmp
out
jp
imul
jnp
iret
inc
push
adc
into
icebp
sbb
jecxz
ret
xchg
dec
pop
out
xor
aam
cmpl
sub
cmp
in
jmp
inc
std
mov
pop
leave
push
mov
add
lahf
insb
or
fildll
shll
addb
push
pop
inc
leave
scas
add
mov
pusha
inc
scas
xchg
cltd
cmp
cmp
lock
enter
sub
ljmp
sbb
or
outsl
arpl
add
dec
fisubrl
fs
add
clc
int
pop
jge
add
push
push
loope
sbb
xor
or
pop
test
cmp
fmul
sti
adc
nop
or
or
subl
push
pop
stc
test
sub
pop
imulb
and
mov
test
cmp
mov
jb
sbb
mov
test
popa
das
push
lret
adc
dec
cli
orb
ljmp
mov
fimuls
mov
movsb
mov
std
xor
in
pop
sub
das
pusha
push
xchg
negb
cwtl
jns
out
mov
xor
rolb
sub
jb
dec
fwait
xchg
gs
cmp
loop
or
sti
aas
incb
lds
pop
aad
mov
lret
lret
aas
push
xchg
add
mov
inc
or
jns
mov
das
sbb
sub
adc
ds
jnp
roll
jae
shrl
inc
pop
dec
adc
xchg
pop
jg
negl
mov
loopne
aad
mov
lods
adc
push
rorl
dec
jnp
mov
push
in
testl
mov
fsubs
mov
lock
dec
xor
loopne
or
fisubrs
pop
jge
addr16
mov
push
pop
addr16
xchg
adc
sub
jno
jbe
inc
call
jo
cmpsb
inc
mov
stos
daa
add
jg
fimuls
fiadds
mov
out
lret
js
int3
push
xor
xchg
or
in
jl
xchg
cmp
addr16
xor
push
sbb
mov
in
icebp
je
jae
les
add
lods
fadds
and
stos
xor
iret
cmp
mov
and
xor
mov
jp
outsb
fdivs
test
xchg
dec
pushf
jg
cmc
inc
mov
or
inc
push
push
add
fldcw
xchg
pushf
dec
iret
divl
lods
stos
cmp
mov
fs
adc
aaa
push
sub
jmp
xlat
fimuls
dec
insb
clc
xor
test
xchg
jle
push
and
pop
imul
ja
movsb
cmp
shlb
int
out
out
sbb
sbb
xchg
sbb
lods
mov
mov
xchg
lret
daa
sub
push
sbb
add
jno
in
push
inc
mov
sub
jo
pusha
xor
mov
jae
push
dec
jle
adc
shrl
mov
mov
adc
add
pop
jns
movsl
es
pushf
adc
lret
or
scas
push
je
sub
sbb
das
into
sub
into
shlb
add
into
dec
mov
xchg
aam
pop
cmpsb
pop
add
push
hlt
pop
sub
dec
test
cmp
fwait
sub
aas
cmp
jmp
mov
lret
aaa
adc
mov
out
sbb
mov
sbb
cmp
jecxz
rcrb
inc
jecxz
push
sahf
jmp
fsubs
mov
aad
mov
mov
aaa
bound
cmp
pop
test
fwait
mov
scas
xchg
cmp
xor
pushf
mov
aas
xor
xor
xor
dec
inc
in
sbb
or
xorl
adc
adc
add
aas
mov
add
cmp
das
mov
push
jge
ss
ficoms
int3
out
mov
movsb
call
test
cld
adc
sarl
int3
icebp
fidivrl
scas
sub
push
int3
outsb
sbb
subl
cwtl
lock
add
mov
jp
inc
and
test
arpl
lret
cs
cmpsb
adc
ficompl
lods
jae
and
add
aas
sbb
insb
jo
dec
rol
inc
into
pop
mov
xchg
and
pop
shl
repnz
add
ficoms
aad
fs
push
bound
pop
xor
mov
sub
in
mov
iret
inc
push
xchg
push
fdivrl
nop
ljmp
test
jp
cld
test
out
xchg
mov
adc
inc
xchg
lahf
pop
jmp
in
in
dec
sub
add
push
out
sub
push
adc
in
stos
push
inc
popa
cltd
fwait
push
js
addr16
rcr
xchg
fists
sub
xchg
je
cvtps2pd
test
sub
repz
cmp
in
and
dec
pop
mov
rcl
dec
inc
subl
fwait
loopne
lods
out
cld
pop
in
inc
add
jno
fildll
sahf
sub
or
sahf
cmp
outsb
jecxz
push
and
push
call
in
fiadds
scas
push
shl
jl
dec
stos
fimull
push
dec
lea
push
inc
cmp
push
jecxz
loop
test
xor
fisttps
loope
pop
not
not
mov
outsb
jecxz
pop
bnd
popf
jg
cmp
push
js
ljmp
in
filds
cld
jp
stos
push
lret
pop
sub
pop
add
scas
out
ret
andb
add
repz
dec
pop
jo
cmp
pusha
test
pushf
mov
gs
xchg
int3
cmp
and
jmp
in
inc
dec
jp
bound
dec
mov
shrb
aas
call
inc
sub
mov
pop
loopne
jp
cmp
sub
test
sbb
dec
pop
mov
cmp
cwtl
sarb
cmp
jb
mov
mov
into
ja
cmp
fsubrs
sbb
lcall
es
lcall
lcall
push
cmpsl
stc
dec
dec
ficomps
fs
xor
mov
cmpsl
sbb
xlat
daa
jbe
test
mov
sar
repz
mov
das
stos
outsl
loope
sbb
push
push
lods
mov
shll
cli
xchg
loopne
mov
and
bound
shr
inc
sbbb
lcall
sub
and
repnz
jecxz
push
stc
adc
mov
push
sbb
cmp
push
ret
enter
js
in
scas
sbb
pop
push
ret
fstpt
push
push
popa
stc
dec
cmp
lea
xor
sbb
jns
sub
movsl
sahf
sarl
bnd
test
aad
movsb
jp
lret
repz
mov
out
mov
jmp
inc
nop
ja
push
jl
and
jns
jno
aas
jmp
lods
push
xchg
lock
or
mov
mov
ret
xchg
cmp
in
push
not
addr16
push
subb
sub
lret
fucom
test
pushf
fdivrl
push
pop
pop
jmp
repnz
cld
repz
pop
popa
xor
mov
fsubr
fsubr
xchg
aas
push
push
mov
notl
pusha
mov
insb
mov
stos
in
add
cld
push
push
scas
loop
loope
xchg
jg
enter
rcrl
sti
inc
dec
adc
test
xlat
sarl
inc
scas
out
sub
jb
out
lcall
mov
call
pop
jle
sti
cmp
or
xor
pop
je
sbb
sub
test
xchg
fstpt
cmp
daa
call
cmp
dec
outsb
adc
pop
and
outsl
pusha
shll
adc
scas
rcll
call
sar
mul
in
jg
lock
int
sub
dec
jmp
adc
cmpsl
xchg
daa
mov
ja
lods
xchg
jle
ds
decb
dec
jg
add
les
jae
jge
les
mov
xchg
xchg
stos
idivl
inc
aad
into
jp
mov
in
call
cmpsl
aas
push
pop
lcall
sbb
adc
test
in
xchg
mov
ret
pop
add
xor
int
xor
outsb
push
pop
movups
sbb
or
dec
xor
leave
inc
pop
mov
mov
cmc
addr16
or
mov
jl
popl
mov
inc
ret
outsl
jp
fldt
sub
out
pop
sarb
icebp
push
ljmp
push
push
aad
out
jbe
push
xor
push
mov
push
fistpll
imul
lcall
mov
jns
in
stc
dec
add
mov
xor
cli
lahf
mov
int3
add
lcall
pop
popf
pop
sub
mov
sti
in
mov
sbb
push
add
lods
cmc
lods
mov
movsb
std
stos
xlat
out
aad
sub
add
mov
adc
addr16
mov
into
addl
jne
sbb
aam
push
rolb
mov
or
cmpl
scas
pop
adc
or
cmpsl
sub
or
negl
inc
inc
test
hlt
aam
lcall
imul
jbe
scas
aaa
or
ja
clc
and
xor
mov
insb
mov
fidivs
push
inc
push
lret
xchg
mov
test
stc
push
sahf
dec
rcr
xor
rol
mov
mov
pop
xor
fst
hlt
pushf
pusha
fstpl
es
xchg
or
lods
adc
mov
daa
push
cmp
adc
int3
lods
or
mov
add
cmpsl
and
jge
jb
jle
xchg
inc
sub
mov
cmpsb
cltd
inc
je
sbb
loope
imul
cmpsb
adc
xchg
pop
cmp
push
mov
test
sbb
xchg
push
fcompl
xchg
cmpsl
mov
pop
lds
sar
mov
mov
ss
aam
test
icebp
icebp
aad
inc
push
mov
pop
sub
repz
jne
data16
aad
jnp
ds
ss
mov
out
lock
test
push
mull
gs
sub
ds
in
cmp
mov
sub
push
ret
pusha
jo
aas
out
pop
jae
and
xchg
cmp
rcr
lcall
out
jp
push
sub
sbb
scas
push
insl
test
xchg
pop
xor
data16
mov
inc
dec
stc
cmpsl
or
roll
sbbl
adc
inc
mov
add
fs
fadds
xor
je
xchg
jge
lock
xchg
das
and
mov
ja
das
sub
roll
jge
jp
filds
gs
adc
push
add
mov
pop
push
jge
fcoms
lods
pop
pop
lock
push
out
jns
addr16
ja
dec
lods
xor
push
fistpl
aam
mov
shrb
pop
cmp
mov
mov
pusha
negb
inc
cmc
aad
xor
push
sub
jne
cmpsb
adc
mov
addr16
shlb
jo
xor
and
adc
fs
mov
mov
fs
rolb
push
lods
sbb
scas
dec
loopne
lods
and
add
push
dec
addb
fistps
adc
mov
and
outsb
movsl
dec
test
rclb
aad
test
pop
test
inc
xor
mov
pop
lret
lods
ja
sub
fisubs
shlb
push
push
xor
cmpsb
jecxz
ret
mov
mov
jno
repz
pop
adc
mul
iret
jge
or
mov
push
cmp
mov
sti
pop
push
mov
xorb
imul
mov
add
les
fs
push
mov
add
mov
mov
out
xchg
sahf
orl
iret
xchg
cmp
push
popa
cli
hlt
lcall
dec
jle
adc
cmp
mov
add
cmp
dec
push
jae
mov
jnp
outsb
pop
icebp
aas
outsb
frstor
mov
ficoms
pop
out
fmuls
fstpl
imul
pusha
loope
pop
int3
fwait
sub
push
push
pop
lods
cwtl
jns
sahf
out
das
xchg
mov
jl
insl
mov
mov
inc
mov
pushf
sbb
stos
lcall
sbb
es
ja
adcb
cltd
lret
scas
cld
shr
rorb
shl
daa
mov
or
jle
out
mov
int3
stc
sub
jge
bound
movsl
arpl
or
inc
dec
mov
hlt
into
sbb
mov
sahf
pushl
xor
jecxz
nop
test
add
das
fwait
jp
xchg
or
ja
mov
push
inc
dec
push
jp
imul
arpl
sub
int3
es
rcrb
jp
xchg
or
mov
out
push
pop
pusha
stos
jb
pop
aam
sbb
pop
push
in
dec
push
jno
ljmp
push
sub
in
mov
xor
cs
xchg
mov
mov
pop
dec
sbb
push
call
adc
push
or
mov
jp
pop
popf
cmp
jmp
loope
xchg
xor
cmp
sub
in
into
jge
aas
dec
mov
pop
dec
add
mov
stos
aad
scas
popa
mov
jg
sub
sarl
dec
ret
jno
xchg
push
sub
xchg
les
mov
fldt
test
daa
repz
pop
dec
sub
mov
inc
mov
xor
lahf
jg
adc
sar
mov
aam
repz
add
orl
scas
jmp
cmp
stos
in
scas
jb
pop
mov
mov
lock
ret
ds
fildll
sti
loop
mov
scas
ret
mov
jg
adc
sbb
sbb
movsb
cld
scas
hlt
adcb
pop
iret
inc
jle
mov
sub
sbb
adc
in
mov
fwait
mov
fistps
push
sub
and
test
popa
lods
push
xor
stos
cltd
jae
pop
sbb
push
in
stc
or
lods
mov
pop
fwait
adc
sbb
cmp
mov
jg
addl
dec
lock
sbb
lcall
push
pop
adc
cmp
add
sbb
orb
jnp
mov
cmc
icebp
dec
adc
mov
or
lea
jbe
jnp
outsb
and
aad
mov
xchg
nop
adc
inc
add
mov
stos
loop
push
add
mov
mov
or
lea
mov
dec
das
xchg
pop
leave
jno
push
jge
add
xor
js
mov
jo
popa
sbb
hlt
xchg
ss
lret
mov
mov
in
sbb
imul
popa
and
lods
inc
jl
push
pop
mov
ret
mov
mov
and
mov
ret
inc
add
adc
jns
add
jae
push
aas
mov
ljmp
hlt
popa
mov
jo
dec
pop
push
mov
orb
jp,pn
sbb
adc
xorl
cmc
jno
pop
arpl
cmp
xor
mov
daa
and
in
aad
insb
jbe
sub
lods
xor
sbb
sbb
aad
cmc
jns
in
test
sub
or
mov
adc
dec
test
adc
mov
je
push
xchg
adc
std
xchg
adc
jmp
loop
std
sbb
sub
repnz
int
push
orl
ja
mov
dec
insl
mov
loopne
lods
fwait
xor
add
fwait
addr16
loopne
pop
push
jbe
insb
mov
aad
cwtl
cld
push
popf
push
mov
xchg
xchg
rcrl
mov
cmp
aaa
stos
adc
insl
in
sbb
xchg
popl
push
movsl
jl
or
mov
push
mov
jno
bound
or
cwtl
add
aad
mov
pop
push
xchg
ret
insl
fwait
xor
arpl
mov
das
push
int3
push
ljmp
xchg
ljmp
pop
out
lods
aad
les
movsl
mov
lock
mov
or
jecxz
cmpsb
mov
rcr
jl
outsl
and
push
mov
roll
daa
jl
push
xchg
stos
xchg
xchg
addl
hlt
mov
fistps
addl
rcrb
sbbl
pushf
mov
lret
push
cmpb
lahf
enter
cli
je
add
xor
inc
mov
cli
mov
sbb
sbb
adc
sub
in
xchg
rolb
nop
adc
cltd
in
cwtl
xchg
push
dec
fdivr
xchg
fwait
jge
rcrb
adc
push
jge
adc
add
add
outsb
sub
out
cmpsb
xor
test
add
sbb
ss
sbb
mov
push
outsb
idivb
je
mov
add
lds
in
mov
push
int
nop
pop
iret
or
jp
xchg
mov
ss
adc
add
jns
nop
xchg
cmpl
mov
arpl
in
xchg
pop
bound
mov
pop
cwtl
sub
jl
cmp
jne
ljmp
push
sub
mov
negl
orb
cmpsl
cmp
insl
out
mov
jns
or
cmp
cmp
js
es
add
pop
sahf
xor
dec
sahf
push
mov
adc
sbb
jg
cmp
loop
mov
mov
or
sub
jno
jl
movsl
and
mov
repz
push
test
adcb
pusha
cltd
iret
ret
sti
push
adc
pop
out
add
or
bound
into
push
pop
mov
gs
jns
mov
xlat
pop
aam
jns
loopne
int3
cs
in
mov
je
sbb
ud0
xchg
into
in
cmc
loop
stos
sbb
aaa
ss
push
fstpt
movsl
and
or
xchg
test
add
popa
daa
lods
popa
rclb
in
mov
lods
add
jb
enter
add
stos
lret
pop
cmc
enter
cmp
mov
dec
cmp
adc
loop
int
ds
xchg
fs
mov
dec
dec
ja,pt
enter
dec
mov
or
xor
nop
insl
rorl
inc
mov
sti
jnp
cwtl
fldl
fdivrl
dec
adc
push
inc
rol
repnz
add
and
xchg
mov
or
lret
xchg
imul
daa
inc
hlt
lcall
fistps
lock
mov
pop
mov
fwait
cli
dec
inc
push
xchg
lock
icebp
dec
dec
xchg
fnstenv
jg
sarl
push
push
mov
daa
pop
scas
stos
jl
idivb
jmp
hlt
pop
cld
das
or
std
in
add
mov
push
lcall
mov
loope
xlat
jg
mov
inc
lret
test
repnz
or
xchg
xchg
jg
cmp
fists
popa
outsl
cmp
or
arpl
jo
xchg
xor
push
mov
inc
adc
jg
test
or
add
std
nop
and
adc
enter
push
add
jmp
mov
push
insl
inc
stc
loopne
rolb
jecxz
repz
testb
lret
and
icebp
test
jo
xor
mov
scas
jb
and
cmpsl
scas
add
adc
cwtl
push
out
sbb
testb
cmp
push
xchg
sub
cmpsb
out
jns
cmp
jae
push
add
pop
xchg
out
les
lea
pop
std
cmp
std
or
xor
xchg
pop
jbe
inc
cmp
pop
xchg
sbb
shrb
mov
push
iret
shll
inc
clc
mov
pop
inc
subl
out
cmp
ljmp
sar
roll
cli
roll
cmp
in
mov
cmp
mov
lcall
in
lret
adc
aam
mov
sub
or
js
into
xchg
sbb
adc
jge
pop
mov
mov
mov
jne
cmp
testb
jmp
jne,pt
sbb
mov
sbb
mov
jmp
mov
or
mov
cli
inc
sbb
repnz
pop
divl
inc
repnz
insl
clc
fs
in
jge
push
repz
pop
dec
adc
pop
push
jne
xor
cmpsb
dec
xor
mov
fstpl
add
sbbl
lods
lds
shll
push
or
sub
sbb
xor
dec
cltd
mov
dec
jmp
das
repz
imul
stos
mov
jp
xor
add
push
adc
adc
lods
cli
ljmp
cmp
test
or
aaa
fdivs
mov
adc
push
mov
cmc
loop
insb
jbe
mov
lcall
popf
jge
fwait
and
cld
sbb
iret
add
cltd
jp
scas
lock
cmp
push
repz
ja
adc
jp
push
or
in
sbb
bound
inc
fstpl
cmc
xchg
popf
or
pop
out
mov
cwtl
mov
sbb
test
cmp
bound
hlt
and
inc
jno
sti
jnp
mov
pop
jae
jg
lods
cli
sbb
jne
inc
js
sub
mov
jo
repnz
icebp
data16
in
dec
es
jb
aas
out
stos
jge
pushf
mov
adc
sbb
mov
jp
mov
xchg
or
mov
and
mov
test
fcoms
mov
cltd
pop
loopne
je
sbb
inc
mov
push
lods
inc
jmp
pushf
test
xor
xlat
sbb
mov
cmpsb
ss
adc
scas
add
fdiv
push
jmp
add
mov
or
call
loop
dec
out
or
outsb
lea
mov
test
jecxz
xchg
pop
inc
enter
pop
fs
inc
jne
xchg
rorl
mov
scas
pop
jne
jmp
cmc
leave
jns
lea
sbb
call
add
adc
add
xor
addr16
imul
lods
cmp
pop
xor
arpl
mov
cmpsb
adc
out
popa
jno
push
sub
pop
ds
mov
push
dec
ret
pop
sbb
insl
stc
test
lds
pop
add
hlt
mov
or
xor
out
sbb
push
pop
mov
mov
lock
les
push
xor
xchg
jno
adc
adc
jge
sahf
decl
pop
mov
jge
xchg
jp
push
jno
mov
sbbl
dec
orb
hlt
fstl
and
out
xchg
dec
scas
ljmp
in
out
mov
lret
sti
xchg
repz
inc
test
sbb
div
mov
pop
add
loope
imul
add
jnp
xchg
pop
fisubrl
insl
xor
xchg
pop
test
xor
daa
loop
sahf
mov
cmc
mov
in
cmp
push
rcrl
mov
fadd
mov
lods
xor
push
fldt
add
mov
jle
fmul
in
cli
xchg
dec
sbb
cmp
cmpsb
jg
mov
push
shlb
jno
mov
add
shll
pop
mov
arpl
push
push
in
jno
pop
mov
push
sbb
mov
pmaxsw
insb
mov
cs
pop
push
mov
or
cmp
loopne
mov
lods
cltd
fs
out
jne
xchg
cld
inc
dec
or
lods
fstl
pop
jnp
mov
addb
push
jl
xor
xchg
pop
xor
xchg
outsb
jl
aam
adc
push
and
out
jmp
testl
ljmp
jbe
push
int3
pop
lret
dec
lea
aaa
call
dec
and
hlt
push
inc
sar
lahf
jnp
pop
cld
sub
dec
loopne
in
sbb
lahf
sbb
lret
inc
lods
fmuls
ljmp
xlat
jae
jo
pop
xor
lock
mov
pop
inc
adc
dec
or
je
and
xchg
pop
pop
outsl
repz
cwtl
pop
rcll
jecxz
xchg
inc
cld
xor
in
push
icebp
push
jb
and
cmpsb
rcll
cmp
dec
jne
sub
cmpsb
jle
lahf
dec
stos
movsb
pop
dec
mov
jae
xchg
movsb
xor
xor
xor
je
popa
out
inc
fists
daa
or
or
push
sbb
sbb
mov
push
popa
out
cmpsl
dec
out
mov
mov
insb
xor
push
fdivl
cli
rclb
sub
stos
mov
repz
sub
xor
dec
jp
xchg
in
sti
mov
cmpsb
jp
cmpb
dec
jne
mov
jle
enter
push
adc
repnz
add
ds
cwtl
xchg
loop
sub
push
jmp
sbb
xchg
ja
jne
cmp
cmp
push
ljmp
ss
jge
notl
cmpsb
push
xlat
xor
push
cmp
mov
icebp
iret
xor
mov
sbb
mov
sub
mov
mov
or
dec
jge
xor
lcall
fsubrs
jge
out
das
fsub
inc
xorb
push
mov
and
mov
sbb
inc
mov
js
lea
jo
xor
sahf
xor
cmp
push
rolb
sub
lods
popa
movsl
loope
add
pusha
popf
arpl
test
into
addr16
fisubl
aaa
sub
stc
mov
nop
mov
hlt
dec
push
clc
mov
outsw
and
insl
test
fs
gs
jge
add
call
ja
add
cmc
and
insl
lret
insb
jnp
aad
andl
xor
rorl
fadd
mov
inc
je
pop
out
insb
mov
dec
paddusw
xor
lcall
notl
add
in
dec
push
mov
aam
cs
stos
insl
ds
arpl
stc
push
call
rcrl
insb
sbb
xchg
aas
mov
test
mov
jl
pop
add
popa
or
xchg
pop
mov
jmp
fistpl
pop
jmp
scas
fidivs
insl
dec
pop
and
lcall
and
stos
xchg
xchg
adc
popa
dec
scas
jno
lods
sub
gs
mov
push
movsb
adc
faddl
lahf
jbe,pt
aam
das
push
pushf
les
es
jmp
and
or
mov
insb
mov
in
push
lret
lock
sbb
insb
popa
addb
xor
aam
mov
std
xchg
inc
or
js
push
lcall
sahf
sbb
mov
std
sub
mov
push
jae
dec
sbbl
ljmp
xchg
cli
mov
xchg
xlat
push
dec
ret
aaa
ret
nop
mov
pop
jmp
cmp
js
dec
mov
repz
lahf
std
cmp
jg
add
inc
add
or
adc
xchg
call
es
xchg
and
mov
dec
jl
adc
push
pop
sarl
jl
outsl
xchg
jne
leave
dec
movsl
fisubs
sbb
or
push
mov
jge
jl
or
jl
shr
push
jo
cld
cwtl
adc
ret
jp
inc
cmp
mov
and
aam
pop
imul
or
sub
push
sub
mov
mov
xchg
xor
dec
and
mov
add
lcall
lds
fldcw
add
mov
sbb
pop
in
negl
mov
imul
and
pop
addb
pop
cmpsl
jnp
jno
fsts
mov
dec
mov
dec
mov
jl
sub
lods
jl
or
mov
jle
adc
push
jle
jmp
mov
sub
pop
mov
xor
jne
or
rclb
loopne
lret
add
cmp
jmp
dec
mov
cltd
sbbl
lcall
dec
xor
aas
cli
push
and
icebp
insb
movsb
mov
sbb
pop
in
mov
insb
sahf
add
sahf
push
pop
sub
add
mulb
add
jl
push
bound
jnp
inc
stc
and
ja
mov
pusha
add
cltd
push
mov
push
xor
incl
mov
andl
outsl
in
mov
pop
mov
loopne
fs
clc
sbb
js
mov
sub
push
sub
and
or
hlt
loopne
adc
adc
fldcw
push
mov
push
pop
add
cmp
shl
into
test
and
addr16
loope
shll
lds
xor
sbb
dec
pushf
aas
gs
push
and
rorl
push
push
sbb
adc
dec
cld
out
pop
mov
mov
jecxz
lahf
cmpsl
call
mov
inc
sub
lds
in
xchg
push
sahf
xor
jp
or
lock
inc
cmc
out
jmp
add
mov
imul
rcll
addr16
jl
hlt
xor
mov
sahf
je
or
dec
lea
pushf
flds
jle
cmp
aam
rcll
jp
xlat
subb
mov
xchg
ja
dec
dec
push
sti
jo
std
mov
jle
loop
out
mov
or
bnd
iret
adc
je
lods
xchg
addr16
sarb
xor
imul
test
adc
pop
scas
ss
mov
jbe
outsl
pop
lods
xchg
repz
wrmsr
mulb
fsts
and
nop
shlb
pop
negl
pop
push
sub
fiadds
sub
ja
adc
jno
adc
enter
mov
lret
call
inc
cli
icebp
lahf
jae
lahf
adc
mov
push
adc
mov
bound
mov
mov
stos
sub
add
cmp
jbe
addr16
test
pop
adc
lcall
subl
push
sbb
lret
icebp
adc
inc
clc
pop
call
ret
fwait
testb
lret
mov
sbb
sub
or
mov
push
rcrb
pop
imul
jns,pt
push
sub
cmpsb
jno
pop
popf
add
in
mov
fbstp
pop
adc
aam
mov
dec
pop
out
xor
sbb
dec
test
xchg
and
or
ror
xor
test
push
and
lea
shlb
jecxz
inc
aad
out
jmp
insb
out
into
inc
push
ds
outsb
xlat
cmp
leave
pop
stc
mov
xchg
mov
mov
mov
pusha
push
add
in
jl
imul
jo
push
inc
sbb
sub
inc
jecxz
fadd
call
test
pop
mov
shl
lock
adc
inc
hlt
fimuls
jmp
fisubs
add
mov
inc
or
push
jl
sahf
xor
hlt
push
scas
js
cs
nop
jb
lods
je
imul
scas
jmp
imul
dec
cmpb
mov
dec
add
sub
out
jno
sub
dec
sbb
stos
sbb
or
mov
xchg
add
into
cld
jae
pop
inc
xchg
dec
cmpsl
xor
jae
xor
stc
outsl
sbb
je
sbb
push
les
std
je
cwtl
push
jecxz
mov
lods
lock
dec
mov
jmp
mov
mov
pop
hlt
stc
lods
cmc
mov
inc
fisttpl
and
in
cld
into
jnp
icebp
and
lahf
mov
std
les
repz
pop
imul
mov
cs
xchg
enter
inc
cmpsb
cli
incl
or
shrl
fnstcw
mov
aaa
inc
pop
gs
repnz
mov
loopne
fwait
xchg
pop
sti
mov
frstor
outsl
sub
cmpsl
sub
mov
sbb
pop
in
add
int3
test
rcrl
jge
mov
xorl
test
jmp
fcoml
iret
mov
into
out
sub
xor
out
loop
push
cmpsl
subb
jne
or
jns
fsts
je
je
jo
out
test
cmc
loop
pop
pop
fisubs
and
or
sbb
dec
out
int3
test
sarl
es
sbb
aam
out
hlt
jno,pt
xchg
mov
xchg
mov
in
out
jge
addr16
sbb
fs
bound
and
lahf
pop
push
mov
jne
push
aas
ret
je
pop
std
sti
mov
sahf
hlt
jmp
test
int3
cmp
cmpsl
xchg
add
xor
test
stc
ret
repz
lahf
clc
sbb
imul
push
pop
push
gs
negb
inc
das
push
and
xchg
pop
ja
jno
inc
loop
aad
sti
or
scas
xchg
push
and
xor
imul
out
push
jg
jnp
add
or
sub
test
in
test
leave
or
mov
ja
mov
xchg
mov
orb
mov
adc
ret
pusha
test
xchg
sub
rolb
lret
and
cwtl
stc
push
jae
or
inc
and
lock
ss
fdivr
mov
lcall
push
xlat
stc
mov
pop
std
cmpsl
rolb
dec
into
rcrl
or
ljmp
xchg
je
xchg
sbb
cmc
xlat
push
mov
insl
pop
mov
ljmp
iret
mov
lret
sbb
je
pop
loope
scas
xchg
mov
xchg
in
cmp
test
outsl
cmpsl
mov
and
sub
xchg
add
fistps
or
pop
inc
sti
sub
push
inc
je
daa
jp
pusha
dec
jbe
aad
adc
jecxz
xchg
xchg
inc
mov
loope
pop
adc
out
ret
jns
sub
movsb
add
imul
sub
fcoml
inc
aam
in
mov
insb
cld
add
mov
insb
cld
popa
and
pop
leave
stc
cmpsb
and
cld
js
push
fidivrl
cmc
sarl
mov
rcll
gs
lahf
test
iret
filds
push
mov
mov
pushf
scas
pop
and
or
call
cmc
push
add
aam
cltd
jnp
das
popf
popa
mov
mov
jl
ret
imul
push
or
or
out
cltd
scas
mov
mov
dec
jp
inc
rolb
sbb
push
ret
das
jbe
inc
test
filds
xor
xchg
mov
lds
enter
sub
adc
cmp
mov
dec
mov
jae
daa
fdivs
cmc
inc
dec
loopne
icebp
mov
leave
outsl
roll
mov
call
xor
clc
jne
or
mov
push
mov
ficoms
sub
dec
mov
icebp
clc
add
rclb
imul
inc
and
or
xchg
and
jne
push
mov
add
sub
lcall
lods
imul
test
idivl
mov
pop
out
pop
and
push
sbb
adc
dec
mov
sbb
xchg
mov
lret
addr16
repz
sub
rcl
mov
bound
ss
icebp
sbbb
adc
rcrl
mov
inc
push
sub
ljmp
adc
mov
or
dec
insl
int3
sahf
sub
jnp
subl
aad
cli
xor
pop
sti
mov
push
daa
lock
or
pop
loope
imul
inc
pusha
imul
xlat
jnp
lea
sti
xor
jno
cmpsl
clc
adc
sub
addr16
add
les
lea
std
adc
clc
imul
mov
sbb
jne
adc
sub
scas
sti
fsubs
jnp
and
sti
cmp
into
pusha
push
mov
push
orb
jg
out
fldl
jnp
fisubrs
add
or
pop
sbb
mov
in
fsts
leave
pusha
jecxz
cs
int3
inc
movsb
aad
jns
ret
push
pop
lea
lea
int
add
inc
push
adcb
insb
loop
lret
imul
pop
frstor
sysexit
popf
test
nop
inc
rcll
cli
xchg
inc
sub
loope
mov
mov
lret
xchg
mov
mov
dec
dec
mov
aad
movsb
negb
lret
jae
lahf
insb
push
cmp
cmp
cmp
and
rolb
inc
into
roll
cmp
and
adc
or
and
int3
pushf
test
test
out
je
ss
push
mov
fcoms
xchg
jne
xchg
rolw
add
cli
mov
test
arpl
and
imul
push
es
leave
fld
and
mov
jp
and
push
imul
imul
or
push
jp
xor
jg
adc
inc
movsb
jae
xor
mov
dec
dec
cwtl
pop
incb
mov
call
inc
mov
outsl
sub
push
mov
pop
lahf
lcall
cmp
stos
and
divl
sub
cli
in
xor
jnp
xchg
xchg
jno
push
mov
add
popa
cwtl
call
mov
or
dec
push
pop
mov
mov
cmp
inc
jns
mov
mov
mulb
mov
mov
push
cmp
lods
in
sbb
sbb
and
addr16
pushf
pop
xlat
aas
adcb
pop
mov
or
add
movsb
jecxz
mov
js
pop
outsl
mov
xchg
push
addl
outsb
adc
aaa
inc
imul
cmp
mov
arpl
lods
sub
push
lods
hlt
or
clc
repnz
lret
lret
cltd
add
push
sbb
push
adc
std
cwtl
sub
add
loopne
hlt
adc
pop
sbb
pop
mov
pusha
jle
pop
sbb
test
cmp
or
in
or
dec
aad
mov
add
enter
repnz
fdivrl
pop
jg
scas
mov
push
push
or
dec
or
das
sub
das
fcomip
pop
jmp
jno
dec
loopne
call
inc
and
sbb
adc
out
das
incb
cmpsb
outsl
inc
ljmp
and
cmp
adc
pop
mov
mov
iret
lahf
jp
xor
hlt
in
jmp
and
mov
sgdtl
sub
jg
xchg
shrl
mov
push
and
cld
dec
dec
mov
leave
insb
mov
shll
mov
mov
repnz
out
and
jo
hlt
and
decb
and
fwait
xor
mov
push
sub
pop
dec
mov
dec
movsb
add
clc
enter
sarl
pop
jl
or
cld
imul
xchg
inc
sbb
dec
std
clc
imull
in
sahf
mov
lcall
cmc
iret
ror
loopne
jns
sub
xchg
mov
adc
cmp
outsb
xor
std
rcr
loopne
scas
shlb
inc
lcall
jle
fadds
xchg
mov
xchg
dec
in
dec
xor
pop
daa
xlat
out
mov
out
fnstcw
push
adc
sar
adc
adc
sbb
jae
pushf
mov
mov
sti
or
jno
push
test
dec
cmp
test
jl
popf
and
jns
iret
movl
fmul
jecxz
sub
xchg
jno
fldcw
outsl
mov
cltd
out
pop
sarl
rolb
arpl
stos
xchg
dec
in
push
lcall
out
orb
imul
lret
push
dec
sbb
mov
sbb
stc
repnz
jmp
cmc
xor
ja
inc
inc
call
dec
dec
xlat
stc
fbld
int
lock
jmp
and
sub
mov
cmp
cld
xor
push
xchg
jb
je
jns
mov
jnp
ljmp
sbb
pop
loop
dec
add
dec
jle
rcr
xchg
imul
mov
xor
ret
fdivrp
lock
sti
aam
shll
and
or
scas
popf
outsl
inc
nop
les
mov
jnp
test
inc
insl
addr16
aas
std
in
fmulp
stos
mov
jbe
imul
jns
add
inc
xchg
and
xor
pop
xchg
push
enter
dec
push
hlt
popf
or
out
cmpsb
and
cmpsl
and
mov
push
ljmp
inc
sahf
mov
jp
scas
bswap
nop
shrl
scas
pushl
jecxz
lods
xor
adc
and
cmp
pushf
adc
fnstsw
and
inc
xchg
popa
fcoml
nop
sub
pop
aad
mov
jns
xchg
xlat
xor
mov
jge
xor
popf
outsb
subl
repz
rcrb
call
xor
lahf
das
mov
cld
test
div
int3
push
mov
leave
das
xchg
pop
jecxz
dec
sbb
add
lret
pop
lret
inc
movsb
gs
jns
mov
shlb
stos
sub
xor
je
sbb
or
loop
sub
mov
hlt
sbb
mov
adc
push
ds
test
cmpsb
sbb
jns
add
add
loope
adc
insl
xor
inc
inc
cmp
and
cli
adc
aad
imul
test
addr16
mov
adc
aaa
jne
sbb
mov
xor
mov
stos
cld
scas
insl
push
fisubl
adc
mov
add
test
xchg
mov
rolb
pop
into
std
and
das
and
mov
mov
inc
mov
sub
push
push
pusha
ret
xchg
mov
rolb
sbb
sub
pop
bound
lods
mov
cwtl
rcrb
pop
xor
sub
dec
jns
dec
inc
and
fadds
xor
in
fistpll
inc
cmpb
rclb
in
ds
inc
cmp
push
aam
sbbb
mov
lahf
adc
int
repz
repz
fisubs
in
pop
sahf
les
aaa
mov
sub
cmp
jno
int3
fsubrl
ret
jp
sahf
jge
aam
adc
js
pop
jp
and
mov
inc
jno
push
push
mov
lcall
stc
mov
jae
dec
jne
std
cwtl
call
cmp
repnz
ret
sbb
aaa
and
mov
xchg
dec
xchg
outsb
sbb
divl
and
and
jae
pop
test
mov
je
and
iret
shll
ljmp
repnz
push
jg
xchg
sub
mov
pop
arpl
push
mov
lret
loop
mov
out
push
icebp
dec
or
xchg
xor
mov
push
call
jns
js
scas
mov
pop
sub
hlt
rcrb
data16
mov
in
mov
aad
imul
in
es
xlat
cmp
xor
nop
cs
push
cltd
add
shll
lret
xchg
sbb
cmp
push
cmc
or
xchg
ret
push
add
xchg
loop
dec
pop
jmp
pop
push
push
flds
xor
sbb
mov
fcoml
fildl
pop
mov
fs
aaa
pop
mov
push
sbb
insl
and
in
rolb
cwtl
xchg
clc
dec
repnz
js
xor
mov
scas
xchg
stc
sbb
bound
loope
mov
imul
sahf
jp
jl
jg
insl
ret
adc
adc
stos
mov
mov
test
dec
push
sbb
mov
lahf
fisttpll
negl
ss
push
jecxz
out
fxch
movsb
test
mov
ret
pop
bound
sub
lock
sbb
into
mov
out
scas
inc
xchg
pop
fbstp
roll
and
das
jp
mov
mov
sbbl
inc
cs
jae
sbb
addl
aaa
insl
aas
inc
loop
scas
fnstsw
ds
push
and
inc
notb
pop
xchg
subb
add
mov
and
sbbb
xchg
pop
outsl
add
mov
add
adc
jg
pop
jbe
mov
dec
dec
cmp
mov
into
push
test
xchg
pop
dec
mov
sub
rcr
xor
add
cmp
gs
lret
or
or
cmp
insl
push
sbbl
mov
cmp
lahf
cmp
xor
nop
jg
loopne
inc
out
dec
sbb
lcall
inc
sbb
mov
lret
dec
ss
mov
sahf
pushf
outsb
sarb
fwait
call
add
mov
and
jno
rcr
push
and
sahf
xchg
cwtl
push
push
push
or
fmuls
clc
cmpsb
xor
std
jle
ljmp
push
jb
insb
mov
push
sti
or
mov
adc
sti
push
mov
xchg
dec
inc
mov
cltd
cmp
mov
sbb
cmc
xor
sbb
sbb
jg
cmpsb
mov
insl
inc
sbb
in
fsubs
into
mov
fists
xor
out
rcl
push
mov
pop
fisttpll
std
add
in
fsubs
out
in
mov
mov
mov
mov
shlb
divl
aas
lds
loop
mov
dec
mov
xchg
sub
add
mov
mov
push
nop
stos
leave
outsb
cli
pop
push
int3
mov
scas
mov
pop
divb
jbe
mov
addl
fbstp
xchg
mov
cmp
jns
addr16
rcrl
xchg
int3
out
xor
lcall
cmp
outsl
add
aaa
adc
ja
fcmovnb
push
xor
xchg
or
xor
mov
xchg
stos
sub
out
xchg
jecxz
jb
xlat
or
aaa
cvtps2pi
xorl
cmovnp
push
dec
cmp
sub
sti
mov
inc
and
mov
adc
mov
sbb
mov
cmp
or
inc
arpl
xchg
mov
lods
lods
xor
pop
es
lock
sbb
test
rcr
lahf
inc
xor
ss
jl
stos
dec
cmp
or
inc
shlb
lea
and
shlb
cmpsb
push
ljmp
into
jecxz
dec
in
jle
fwait
js
and
jg
cmp
push
decl
fcomps
push
lcall
adc
mov
pop
inc
or
cwtl
pop
cld
xor
out
in
ret
add
mov
pop
jg
mov
lahf
adc
cmp
push
jg
movsb
int3
add
inc
fs
daa
pop
and
pop
test
mov
jns
iret
ret
push
add
and
shll
jbe
push
daa
aas
movsb
push
push
loop
push
nop
popa
pop
icebp
pop
lahf
test
je
ret
sub
mov
inc
inc
push
or
push
ds
pop
sbb
jnp
sub
push
dec
inc
daa
add
dec
cwtl
push
add
in
aam
addr16
fs
dec
pop
and
loop
cwtl
loop
mov
loopne
gs
mov
cwtl
insl
jbe
push
enter
aas
xchg
inc
pop
dec
pop
inc
scas
add
lea
jecxz
inc
das
js
ja
inc
nop
jmp
lcall
scas
in
lea
sub
mov
xlat
out
sti
jl
sti
or
pop
adc
push
cmc
movsb
or
mov
adc
or
adcb
and
cmp
adc
mov
pop
cwtl
sub
int3
test
sbb
fidivs
mov
jecxz
icebp
or
mov
sub
push
cmp
sbb
repz
sbb
icebp
dec
xchg
sti
pop
insl
mov
out
sbb
mov
xchg
pop
jg
and
shrb
xor
sbb
lret
cmp
push
push
pop
sbb
rorb
mov
rorl
mov
ja
xchg
inc
add
jecxz
dec
xchg
fwait
cmc
ret
in
and
lcall
negl
xchg
int
mov
decb
cs
mov
xor
inc
push
stos
push
dec
cld
sbb
push
ret
lds
xor
mov
add
inc
mov
enter
xchg
testb
sti
xchg
mov
ljmp
aam
inc
adc
cmpsl
jmp
or
push
hlt
mov
xchg
inc
imul
stos
outsb
xchg
in
push
mov
jmp
imul
and
fs
rcrb
je
mov
call
sbb
mov
addr16
repnz
and
ret
fadds
sbb
leave
cmp
jmp
pop
bound
xor
loopne
je
aas
adcb
mov
dec
mov
pop
das
sbb
sti
jge
sub
sbb
sbb
cmpsl
sarb
rcll
sub
fdivs
xor
ljmp
cmp
mov
lahf
xchg
push
scas
xchg
fnstenv
repnz
mov
out
icebp
ljmp
or
pop
ret
pop
mov
cmp
movsb
gs
outsl
pop
sbb
lea
mov
sub
andl
or
jmp
imul
imul
es
dec
inc
or
adc
gs
cmp
les
cmp
rcrl
lods
adcl
or
sahf
into
xor
inc
jg
aam
push
xchg
mov
pop
push
mov
adc
pop
int
xor
arpl
imul
icebp
iret
add
in
mov
mov
xchg
mov
clc
cmpsl
iret
mov
and
fcomps
sarl
jns
sub
test
xor
push
xorb
jae
add
pop
mov
pop
inc
aas
adc
mov
xor
jbe
std
pop
orb
int3
pop
push
stc
mov
fstpl
pop
das
adc
push
iret
push
ljmp
xchg
push
or
xchg
movsl
cmp
rcrl
loope
jbe
pop
adc
adc
outsb
jns
fstpl
jecxz
push
push
mov
push
mov
mov
sahf
out
push
push
daa
orl
lds
inc
repnz
lea
push
aad
loop
and
dec
mov
mov
dec
mov
mov
scas
jne
sub
mov
jae
mov
xchg
inc
mov
push
mov
adc
adc
jbe
xchg
push
add
cmpsl
daa
mov
daa
pusha
inc
je
mov
mov
imul
aas
sbb
push
push
ret
add
push
imul
imul
shl
cmp
repnz
fnstenv
aaa
or
shll
cmpsl
bnd
fadds
mov
mov
fildl
nop
pop
loopne
jns
xor
fs
imul
xor
lods
stos
hlt
dec
sbbl
lock
in
mov
jl
mov
xor
ds
xor
dec
cmp
ljmp
xchg
push
movsl
mov
out
dec
pop
in
sti
and
es
js
sti
rcrl
fldcw
xchg
jmp
sahf
push
push
mov
outsb
sub
xor
mov
fimull
shll
pusha
xor
aaa
rolb
pop
dec
push
test
test
pop
inc
cmpsb
jns
jl
scas
pop
push
add
gs
pop
repz
jne
jae
adcb
xchg
mov
lds
jo
ds
enter
sbb
jle
aam
ds
xchg
mov
push
add
stos
mov
adc
sub
and
cmp
fisubl
adc
fchs
aam
dec
ds
fcomp
cld
lret
dec
jmp
shrl
push
fisttpll
push
rcrl
xlat
sub
inc
push
ds
insb
mov
lods
shlb
jmp
hlt
movsb
rcll
pop
jmp
dec
lcall
scas
pop
dec
jno
add
or
mov
or
mov
in
stos
cwtl
int3
mov
es
sub
add
add
mov
in
adc
bound
lahf
mov
mov
sub
nop
inc
insl
xchg
fstpl
xor
shl
mov
sbb
pushf
movsb
test
addr16
stos
ja
pop
dec
ret
xchg
pop
sbbb
xor
adc
popa
ljmp
rorb
popf
ljmp
mov
lret
xor
in
or
mov
push
mov
push
dec
mov
mov
xchg
jnp
sarb
or
add
aam
mov
das
push
mov
mov
jbe
leave
fists
call
jecxz
sub
xchg
scas
dec
jmp
out
push
jl
out
mov
jg
push
cmp
cltd
sub
js
pop
pop
divb
shrb
inc
sar
roll
jg
sub
jp
loop
push
push
push
cmp
dec
xchg
xor
int
ljmp
fdivrl
jnp
jl
call
out
ljmp
jae
lcall
xchg
dec
push
add
pop
inc
mov
cli
pushf
in
je
pop
lods
cmpsb
gs
aaa
test
add
cld
mov
lods
lahf
jecxz
cmc
mov
popa
sub
inc
push
fwait
sub
mov
popf
pop
pushf
movsl
aam
cmp
xchg
outsb
das
repnz
rcr
mov
insb
jno
sbb
cmpsb
outsl
dec
jg
std
nop
js
mov
xor
mov
mov
lahf
mov
iret
dec
leave
lea
push
or
push
pop
lahf
jae
inc
popl
lcall
fwait
cli
mov
lea
je
test
bound
push
in
dec
pop
clc
in
hlt
mov
std
mov
add
movsl
stc
pop
push
xchg
fs
mov
pushf
jmp
inc
stc
pop
das
jle
cmp
sub
jp
mov
cltd
call
stos
mov
mov
pop
xchg
pop
fldcw
mov
fldenv
dec
or
pop
popf
sbb
test
or
mov
xor
lods
loopne
xor
adc
sub
insb
cltd
mov
push
je
mov
sbb
xor
jg
mov
pushf
je
sub
stc
cld
mov
sub
jb
mov
push
or
aad
stc
mov
lds
xor
gs
jae
xor
push
inc
movsl
scas
sti
jno
lods
out
jbe
pop
and
repz
dec
testl
push
jno
cwtl
scas
daa
mov
mov
jae
aas
push
jae
inc
pop
add
stos
xchg
push
stc
jae
fdivs
mov
cmp
sub
jmp
mov
lods
pushf
mov
or
fwait
sbb
mov
stos
leave
insb
dec
xor
sbb
mov
inc
xor
call
mov
push
pop
fimuls
push
lods
popa
add
fistpl
stos
xchg
sahf
jl
sbb
xchg
std
paddq
add
pop
fs
mov
xchg
test
pop
push
repz
fmuls
popa
push
mov
xchg
xchg
lods
add
mov
jno
rcr
jl
inc
hlt
push
cmc
inc
pop
sub
xor
ja
out
dec
jne
lret
int3
insl
lret
pop
pop
in
cwtl
adc
inc
stos
jge
loope
ljmp
clc
or
inc
bound
cmp
jge
adcl
es
repz
movsl
dec
pop
shll
add
sub
mov
sub
mov
fldl
insl
hlt
shll
lods
incl
sub
and
lret
popf
push
addr16
popa
or
icebp
sub
leave
sub
pop
das
repnz
push
adc
mov
mov
dec
push
loopne
pop
enter
cmp
int
cltd
ljmp
jb
push
pop
out
adc
pop
fsubrl
mov
jbe
xchg
test
mov
dec
jne
imul
test
cmp
out
xchg
dec
jg
insl
mov
in
adcb
add
mov
cmp
or
pushf
mov
adc
fs
sahf
scas
cmpsl
std
mov
jae
into
xchg
push
lds
push
gs
ret
scas
dec
setns
fiadds
sub
jbe
loope
inc
out
mov
mov
pop
cmp
inc
lret
test
jmp
push
jo
pop
sub
dec
sbb
lods
into
add
sub
push
testl
cmp
rolb
add
sub
xor
mov
mov
rorl
cmp
or
std
lock
jle
lock
call
inc
add
ficomps
popa
pop
ret
or
xor
ds
addr16
mov
xchg
cld
xor
jge
mov
shrb
popa
lds
push
xchg
jge
xlat
cmp
pop
inc
cmc
push
addr16
sub
jl
lock
fldcw
pop
jns
sbb
wbinvd
arpl
jle
mov
lods
in
mov
repz
js,pt
aam
sti
cmp
scas
lds
adc
jg
cs
adc
imul
mov
mov
jns
cs
sub
adc
ja
lea
dec
movsl
out
sbb
aam
movsb
and
push
push
inc
adc
jmp
clc
jmp
loope
sub
mov
mov
insl
test
mov
lock
adc
repz
addl
outsb
insl
xor
or
notb
dec
insb
cmp
mov
mov
inc
loope
xor
test
add
push
xor
add
lcall
sub
pop
mov
pop
add
insb
out
in
aaa
in
mov
test
and
ja
fistps
cmpsl
mov
mov
and
filds
fneni(8087
ficomps
stc
fistps
push
ficomps
pop
adc
icebp
arpl
or
stos
shlb
popa
and
rolb
dec
add
and
sti
shll
data16
or
cmp
sbb
fnstenv
or
enter
mov
jb
add
xchg
es
ret
jo
add
pop
addr16
in
pop
cmc
xchg
pop
bound
pushf
pop
mov
jnp
add
xchg
dec
loop
dec
pop
out
mov
rcrb
jnp
pop
inc
test
dec
push
pop
fs
mov
roll
xchg
inc
dec
mov
mov
dec
lret
sbb
xchg
and
stc
sub
inc
mov
jne
sbb
outsl
sbb
sahf
dec
or
mov
mov
and
mov
ret
mov
add
les
pop
lret
sbb
cmp
popa
dec
mov
shlb
sub
in
or
mov
push
mov
jns
insb
adc
test
push
fisubl
jb
scas
cmp
add
pop
sub
data16
imul
leave
data16
mov
lret
jmp
sahf
jl
cmp
mov
mov
in
push
mov
enter
xor
lds
mov
sbb
pop
mov
insb
pop
mov
and
push
js
out
mov
lods
rcll
mov
jae
sbb
outsb
stc
mov
mov
nop
adc
sub
mov
dec
mov
test
jmp
fcomp
xchg
call
mov
mov
das
dec
das
push
lret
ljmp
dec
xor
addr16
mov
in
mov
scas
daa
popf
add
mov
xchg
pop
insl
in
add
push
dec
call
dec
jp
pop
cmc
jmp
push
movsl
shlb
lds
ret
dec
in
cld
push
cld
lock
aas
decl
stos
lds
dec
stos
pop
xchg
test
ds
adcb
out
mov
pop
loope
sar
imul
dec
out
leave
pusha
lret
fucomp
and
fnstenv
cmp
jle
mov
push
mov
les
daa
int3
jb
sarl
pop
inc
outsw
addr16
cld
in
and
adc
inc
fdivs
out
ja
fnsave
rcll
jae
mov
sbb
sbb
in
in
adcb
dec
pusha
insb
imul
idiv
shlb
adc
pop
adc
push
dec
cmp
xor
insb
cmc
lcall
inc
fcmovnb
and
outsb
dec
inc
mov
inc
or
scas
xor
inc
les
arpl
aaa
cmp
dec
fadds
out
les
imul
xchg
add
insl
cmp
repz
pusha
push
inc
gs
xchg
pop
mov
mov
ds
leave
nop
jbe
add
sti
fs
ror
movsb
jp
mov
sub
out
sbb
out
adc
pop
sub
xchg
or
xchg
adcl
sub
push
mov
imul
sub
in
repnz
mov
inc
or
inc
shll
pop
mov
fstp
sub
repnz
aaa
rclb
adc
cld
inc
xor
addl
pusha
fists
and
jg
les
mov
repz
sbb
inc
test
movl
cs
xor
data16
mov
mov
pop
push
push
cmp
push
ja
xor
or
push
push
fistpll
sub
inc
ja
mov
and
add
push
stos
pop
daa
mov
mov
xlat
popf
andl
scas
clc
jle
jbe
and
movl
test
shr
pop
xchg
test
bound
mov
icebp
mov
nop
jmp
adc
xchg
insl
sbb
sub
pop
sbb
rorb
inc
jge
inc
cmp
push
xchg
jnp
pop
jno
data16
xchg
pop
test
sar
cmp
repz
ja
xchg
aaa
mov
xlat
insl
dec
mov
mov
adc
and
pop
arpl
outsb
adc
cmp
mov
add
and
stos
cmp
or
ret
arpl
das
pop
loopne
push
les
pop
push
adc
subl
mov
pop
dec
cmp
ret
das
fistps
std
shll
fs
cmpsb
enter
push
inc
icebp
daa
cmp
bound
or
dec
js
out
inc
and
add
and
adc
clc
pop
xlat
ret
dec
mov
jge
bound
mov
pop
and
loopne
fidivs
pop
lret
push
fdivr
xchg
loop
gs
ja
call
sub
ret
pushf
fists
push
ja
in
xchg
xor
cmc
pushf
adc
sbbl
jecxz
pop
and
mov
test
pusha
scas
fisubrl
sub
and
movsb
lds
inc
cmp
pop
add
lcall
mov
imul
mov
mov
daa
mov
fisubrs
bound
jnp
or
mov
dec
push
cmp
fstl
out
iret
in
gs
scas
dec
mov
repz
shlb
in
dec
jne
mov
test
mov
daa
mov
std
cmpb
cltd
leavew
xchg
daa
xor
cwtl
fsubrs
movsl
mov
es
jge
fsubrs
mov
nop
fs
push
shll
dec
rcll
cmc
pop
aam
pop
int3
icebp
rcrb
movsb
aam
mov
mov
popa
mov
popa
arpl
rcr
fs
pop
push
mov
int
add
cmc
and
sbb
call
sub
in
loope
movsb
mov
xor
adc
lock
dec
pop
xor
mov
and
sbb
stos
adc
movsl
scas
sti
je
dec
pusha
pop
inc
or
frstor
inc
ja
or
pop
out
jp
test
inc
or
fs
imul
mov
push
inc
inc
and
mov
in
sub
jle
jmpw
cmp
mov
lret
inc
push
arpl
pop
or
add
xchg
cmp
fisttpl
popa
out
sub
dec
xor
dec
jnp
push
mov
mov
lea
stc
pop
nop
inc
cmp
xor
dec
mov
ja
xchg
adc
imul
jecxz
imul
add
imul
push
pop
pop
scas
adc
cmp
sahf
mov
and
loopne
lret
movsl
or
ret
sbb
repz
jmp
jo
mov
lods
pusha
loope
jae
dec
mov
inc
mov
mov
repnz
gs
movsb
ljmp
add
andps
push
and
or
push
out
lcall
js
cmc
cli
jmp
ljmp
pop
scas
xor
jg
add
mov
out
gs
sbb
test
adc
lods
test
and
dec
inc
dec
out
lahf
in
lcall
mov
invd
fdivs
fists
jne
fs
outsl
adc
jbe
cmp
xchg
adc
pusha
sub
int
xor
mulb
and
push
into
call
lret
pop
add
dec
add
mov
push
jp,pt
imul
sub
mov
scas
jne
mov
mov
add
push
mov
jp
jae
cmp
in
mov
in
mov
adc
mov
repz
jae
xlat
inc
push
jno
das
ficompl
pop
incb
inc
pushf
jb,pt
add
ds
dec
sub
stos
das
mov
pushf
out
xor
push
pushf
mov
cmpsb
and
scas
popf
and
lds
cmc
jo
imul
faddl
inc
jae
ja
mov
xchg
test
divb
gs
std
imul
sar
ret
pop
cmpsl
addr16
cmp
bound
es
cmp
pop
mov
cmp
add
testb
mov
int
pop
inc
push
je
xchg
shlb
cmpsl
add
pop
out
enter
dec
mov
repnz
cmpsb
and
xchg
stos
sub
out
push
stos
jno
insb
mov
pop
stc
insl
push
sbb
aam
jne
out
sub
cmpsb
dec
xchg
jno
popl
push
loopne
lret
xchg
repz
lea
cmp
out
xor
pop
pop
inc
cmp
mov
adc
pop
lret
push
scas
push
and
cmp
mov
nop
iret
or
loopne
pop
mov
sbb
aas
fisttps
and
cmp
dec
mov
jne
inc
scas
fwait
cmp
sub
adc
cmpsb
jne
push
lahf
cmp
or
adc
and
xorb
les
subl
add
inc
pop
pop
and
dec
js
arpl
push
es
cmc
mov
in
push
and
je
lds
mov
and
fsubrs
lods
push
aaa
stos
sub
pop
frstor
repz
cmpsb
pop
ljmp
leave
dec
scas
mov
pop
dec
std
nop
aad
pushf
xchg
out
loopne
push
pop
iret
lahf
int
xchg
lea
mov
or
mov
sub
push
mov
dec
jnp
jo
mov
stc
fs
mov
scas
sbb
cmpsl
aaa
add
rcrl
lods
in
gs
ljmp
xchg
add
inc
mov
fsubp
xchg
mov
adc
push
and
mov
mov
loopne
test
adcb
lret
jp
jmp
pusha
pop
sbb
xchg
xor
push
movsb
in
pop
bound
outsl
xor
out
or
out
xor
sub
stc
js
push
or
sub
stos
gs
stos
outsl
dec
jbe
out
mov
pop
mov
pop
cwtl
enter
pop
mov
test
pop
and
pop
push
mov
inc
inc
xor
dec
in
sti
cwtl
testl
ljmp
cmp
mov
mov
inc
fcompl
or
and
sbb
aaa
mov
arpl
sbb
cld
xchg
cmpsb
cmpsl
cli
adc
outsb
fidivrl
mov
test
sub
in
popa
lret
outsl
inc
ficoms
inc
jne
sahf
or
xchg
ljmp
dec
sub
push
into
sbb
lahf
bound
arpl
cmp
rolb
xlat
hlt
mov
xchg
inc
in
add
cli
mov
test
lock
scas
mov
into
sti
adc
aaa
es
pop
jo
outsb
sub
iret
and
dec
dec
rcrb
mov
popa
fdivrs
lret
jbe
fwait
and
outsl
pusha
dec
test
sbb
push
push
xlat
insl
aaa
or
and
loope
mov
inc
xchg
mov
dec
ret
and
and
loope
dec
cwtl
in
xor
nop
and
clc
mov
xchg
inc
sbb
add
push
push
leave
or
mov
popf
adc
in
addl
popf
pop
jae
xchg
outsb
stc
ds
pop
xchg
repnz
leave
imul
insb
push
lods
dec
xchg
push
pop
mov
mov
rorb
and
xor
pop
out
mov
cmp
dec
ret
rcll
cmp
push
sbb
sub
push
jbe
sahf
mov
pop
aaa
popa
not
rorb
mov
sbb
sub
repnz
dec
cmp
cltd
cmpb
es
mov
xor
mov
push
test
cmp
pop
inc
push
aad
mov
mov
mov
xor
pop
sub
ljmp
into
mov
xchg
dec
lods
xor
pop
xor
popa
sub
jmp
test
mov
mov
int
popa
subb
cs
mov
ds
cli
mov
jb
mov
je
cli
mov
mov
mov
dec
outsl
in
adc
fsubs
pusha
pop
fsubl
sbb
outsb
mov
inc
out
cmp
notl
jge
pop
push
sub
dec
aaa
push
sbb
scas
movsl
sbb
pop
mov
ret
mov
adc
inc
mov
and
test
mov
lret
or
xor
jbe
pop
lock
add
ret
enter
mov
and
push
jg
subl
jmp
mov
and
inc
ret
pop
fs
jnp
jae
sub
xchg
xchg
pop
loope
scas
adc
lret
imul
inc
bound
sub
enter
subl
lods
nop
xchg
mov
rcll
xchg
out
aad
mov
int
stos
rol
std
mov
jl
and
in
cmp
mov
mov
or
loopne
movsb
or
jns
push
in
ror
sub
mov
in
inc
fwait
xchg
lret
mov
jge
jnp
and
les
jmp
lret
lcall
shl
cwtl
shll
mov
pop
mov
inc
lret
dec
fistps
or
icebp
popa
or
mov
lea
popa
ljmp
mov
and
sub
repz
int
fsqrt
push
dec
xor
pop
push
adc
dec
inc
xor
in
sbb
es
adc
push
push
mov
fucompp
cmp
sbb
mov
dec
lds
xlat
xor
repnz
cmp
mov
out
dec
mov
pop
in
cwtl
adc
iret
fldt
fisubrs
push
xor
test
js
jecxz
clc
nop
xchg
xchg
je
xchg
lret
push
push
sahf
jbe
scas
or
cmpsb
insb
inc
gs
stos
push
xchg
jecxz
cmp
out
or
push
pop
sub
mov
fildll
and
sub
jbe
je
addb
arpl
cmpsb
and
xchg
or
orb
cmpsb
lret
add
or
pop
fsts
nop
mov
int3
ret
outsl
in
adc
ficompl
push
rcrb
shll
mov
orl
cmp
bound
or
inc
jnp
out
inc
mov
mov
test
lea
lock
test
out
stos
fistl
in
xorl
and
sub
lret
andb
sahf
cmpsb
pop
ret
pop
movb
mov
data16
mov
jnp
or
push
mov
les
xor
cwtl
aam
aaa
or
mov
pop
lods
mov
adc
das
adc
lods
add
cmp
call
enter
addr16
outsb
call
jecxz
das
push
pop
dec
lods
add
pusha
mov
dec
fst
sub
pop
mov
or
jmp
cmc
fcomps
aas
in
cmp
test
xchg
pop
lds
sub
js
movsbl
decl
fidivrl
nop
loop
push
mov
adc
aad
out
rcr
inc
dec
fmull
loope
arpl
xor
stos
lcall
or
sbb
imul
sub
push
cmp
out
jge
xor
scas
fcompl
push
ja
xor
jnp
xchg
lds
xor
sti
sub
dec
xor
mov
or
aas
cmp
adc
das
dec
mov
rolb
dec
int3
pop
or
pop
cmp
pop
mov
and
jo
fwait
jo
aas
mov
pop
inc
in
xchg
outsb
mov
outsl
jns
push
pop
jp
ud2
popf
outsb
mov
roll
roll
insl
or
and
mov
lock
lcall
mov
negl
insl
sub
dec
aad
stos
fs
ds
lock
dec
fadd
add
dec
popf
xchg
pop
pushf
dec
xchg
inc
int3
btr
jbe
out
into
nop
push
std
filds
push
fstpl
pop
push
inc
dec
mov
push
jecxz
inc
ljmp
fcmovbe
add
stc
pop
es
xchg
out
jmp
lcall
mov
data16
repnz
ja
lods
rcll
adc
mov
pop
lret
cmp
mov
pop
lods
idiv
aam
mov
lcall
mov
fcmovbe
xchg
xor
lds
int3
loope
add
push
add
dec
xor
jle
push
cmp
mov
dec
loop
mov
adc
rolb
testl
aaa
outsb
cmp
or
dec
inc
dec
push
sub
pop
xor
push
xlat
incb
or
push
jl
shl
push
and
insb
ret
sub
inc
test
inc
dec
outsb
jmp
int
inc
orl
stos
sbb
incl
xor
dec
pushf
pop
mov
pusha
push
push
push
xlat
cmp
dec
mov
inc
repnz
jbe
shll
and
adc
add
scas
cmp
pusha
lods
mov
push
sbbb
push
sahf
aaa
in
sub
cltd
adc
inc
adc
movsb
js
push
xchg
and
push
xor
ret
pop
in
jb
or
sbb
fimull
shll
jmp
aad
xchg
or
push
test
mov
daa
inc
mov
scas
push
fiaddl
ljmp
gs
push
and
roll
es
ficomps
fisubrl
out
adc
mov
incl
inc
mov
sbb
loop
shr
outsb
push
fucomi
outsl
or
lods
lret
sahf
orl
fs
sahf
add
mov
sub
xchg
sbb
xchg
sbb
lret
fistpll
xchg
scas
or
rorb
and
lds
jg
out
pop
aas
dec
add
xchg
push
inc
clc
push
cmpsl
push
jnp
jmp
ljmp
popa
subb
add
loop
jecxz
scas
inc
fsubrs
fwait
cltd
push
int
push
or
imul
cmp
out
loopne
add
push
fwait
ret
and
test
loope
fs
inc
lret
cmpsl
data16
push
mov
pop
cmp
pop
movsb
js
mov
jb
ret
jbe
cmp
jl
in
ret
ret
out
aam
sbb
pop
push
jbe
pop
fisttpl
mov
jae
mov
daa
cltd
cmp
xor
loope
mov
sbb
xchg
inc
inc
pop
loope
lcall
mov
mov
add
loope
imul
jl
cwtl
sbb
enter
rcrl
xor
sub
jb
or
inc
dec
cmp
fnclex
sbbl
daa
jg
dec
cmp
js
push
xorb
hlt
add
out
push
push
lret
daa
das
jb
mov
xor
aaa
pop
or
popa
in
xor
add
bound
ficomps
cmp
xlat
adc
outsb
ja
jo
mov
decl
andb
clc
dec
push
ja
cmc
mov
cli
adc
inc
sub
xchg
push
push
mov
xchg
cmp
mov
push
inc
into
cwtl
xchg
aam
mov
fcoms
in
and
sub
int3
iret
adc
int
push
mov
jb
rcll
sar
sti
popa
andb
stc
addr16
add
ljmp
shrl
adcb
xor
popf
mov
ret
jno
outsl
mov
pop
enter
lock
aas
pop
jne
inc
dec
test
movsb
mov
cmp
jp
stos
inc
push
fmuls
ds
fisubrs
out
fwait
movb
es
pop
xor
mov
bound
inc
subb
das
dec
push
into
xor
sub
xor
aas
add
add
inc
pusha
sbb
jne
in
insl
dec
test
fsubrl
push
adc
add
popf
iret
ret
dec
rclb
push
js
mov
iret
sbb
jmp
xor
inc
pop
mov
and
add
cmpsl
mov
adc
mov
movsb
popa
shlb
loope
sub
cmpsl
jne
jne
mov
mov
xor
pop
adc
pop
pushf
jbe
inc
mov
ret
clc
and
shlb
fildl
push
push
fwait
adc
and
dec
dec
jg
ret
pop
gs
out
mov
jmp
mov
les
or
dec
mov
jmp
sbb
xor
mov
lock
nop
aaa
sub
jnp
insb
in
fwait
jae
fs
cmp
xchg
dec
xchg
xchg
inc
sbb
jb
inc
out
mov
xlat
mov
adc
adc
inc
push
sub
lea
fcmove
or
push
add
rcrb
movsl
das
repnz
aaa
adc
xor
add
xor
test
fdivrs
sub
add
insb
inc
push
cmc
lahf
push
inc
xor
push
xor
aaa
xlat
and
repnz
mov
push
jmp
enter
cld
orb
insb
test
cltd
push
test
iret
mov
push
adcl
xchg
out
es
dec
sub
pop
repnz
loop
lods
es
leave
fldenv
ret
imull
repnz
xor
mov
mov
stc
es
push
and
add
rorl
rcr
jo
mov
lock
adc
or
or
insb
pop
lods
or
test
xor
mov
cmp
mov
dec
adc
mov
xor
fs
adc
pop
adc
sub
add
xchg
jae
push
pop
adc
lcall
inc
push
fisttps
cmpsb
and
jnp
in
adc
or
testb
loop
addb
cmpsl
flds
adc
dec
mov
fisubl
xor
jge
call
mov
inc
popf
jbe
sub
fildl
xchg
sub
decw
or
fisubrs
or
jmp
xor
out
cmp
sbb
pusha
push
push
cli
xor
push
test
mov
lea
fs
test
inc
dec
das
cmpsl
or
adc
fs
mov
dec
enter
dec
cwtl
xlat
jb
or
stc
cmp
push
or
das
enter
aas
cs
out
in
dec
mov
lret
jge
cmp
test
inc
push
aas
push
sub
ljmp
in
dec
lods
shr
scas
push
add
movb
and
add
xchg
popf
repz
mov
mov
out
push
fwait
mov
int3
add
push
mov
jp,pn
cwtl
rcll
sub
ss
mov
ror
sub
or
push
mov
push
movb
hlt
push
dec
jae
loop
inc
mov
call
mov
dec
pop
scas
jge
lret
bound
rcl
mov
xor
aas
lahf
icebp
dec
cli
dec
test
inc
ja
or
mov
js
jae
push
jno
les
jp
lcall
daa
stc
out
sub
ret
sbb
int
pop
jnp
jb
repz
stc
sbb
fcoml
data16
push
pop
xchg
out
push
push
adc
dec
fs
cltd
out
add
xor
dec
sub
das
xlat
dec
loop
lret
jmp
iret
pop
pushf
xlat
sub
mov
lods
cmp
or
sbb
push
fildl
dec
adc
int
jnp
add
repz
push
sub
es
or
or
imul
mov
sarb
int3
dec
loop
flds
pop
clc
shrd
test
pop
mov
push
fidivrs
push
orl
or
jns
mov
pushf
sbb
aad
mov
fists
lea
mov
iret
andl
add
lock
cmp
lret
sub
je
and
mov
adc
insl
jl
xchg
adc
xchg
insb
adc
jge
leave
inc
not
sub
push
and
push
clc
sbb
push
loop
and
mov
lea
int
adc
dec
add
sqrtps
inc
das
roll
das
aas
and
out
xor
xchg
in
and
or
push
les
out
shrb
xchg
int3
mov
pushf
mov
mov
lock
cltd
xor
call
mov
cmp
adc
fstpl
call
sar
add
push
mov
mov
mov
mov
mov
push
rcll
dec
jp
mov
scas
mov
add
mov
scas
mov
fistpl
loope
xor
jae
xor
out
fnstenv
jo
jno
push
sti
xlat
pop
insb
push
imul
das
jo
push
push
popf
sbb
push
or
adc
into
mov
test
or
shll
sahf
arpl
sahf
andb
mov
xchg
dec
lret
cmp
popf
adc
in
dec
add
in
pop
push
fimull
lods
lcall
lahf
sbb
adc
test
dec
xor
jo
inc
vucomiss
add
ja
mov
add
cmpsb
inc
scas
ds
call
lea
sti
icebp
sahf
sub
or
cmpsl
sub
jecxz
jp
cs
in
lock
jle
lods
outsb
push
repz
lods
sub
div
stc
sub
arpl
inc
movsl
leave
dec
testb
xchg
jle
jns
fadd
insl
xor
xchg
stc
sbb
and
dec
fwait
mov
popa
xor
push
xchg
sub
dec
scas
and
add
jg
mov
or
push
cmp
stos
xchg
das
int3
and
inc
mov
push
or
and
push
mov
imul
cmp
push
inc
adc
xchg
insl
aam
int3
inc
adc
or
popf
subl
vmovaps
ret
shll
adc
sar
push
pop
xorl
shll
bnd
xor
stc
nop
or
int
je
dec
sub
loop
loopne
insl
into
fistpll
mov
pop
mov
jns
repz
or
pusha
mov
pop
cmp
or
popa
das
inc
inc
fbld
dec
test
push
and
push
push
les
sbb
and
and
jns
rolb
mov
aad
push
mov
cmp
push
call
fisttpl
jno
repz
cmpsl
scas
aam
sbb
inc
add
push
adc
fnsave
pop
fisubl
pop
es
mov
jns
inc
and
inc
outsb
int
repnz
and
add
out
push
leave
dec
xor
iret
pop
push
jl
jmp
sub
cmc
dec
shrb
xchg
in
and
pop
ljmp
cmp
outsl
cwtl
enter
mov
ljmp
fdivs
scas
bnd
adcl
ljmp
and
mov
shll
cmp
pop
inc
push
dec
sub
rolb
inc
leave
mov
inc
push
dec
mov
scas
sbb
pop
dec
fstpl
cmc
mov
push
or
jo
mov
nop
or
iret
sti
jecxz
mov
leave
push
inc
movsl
out
fwait
mov
push
addr16
inc
jnp
lahf
xlat
pop
test
movsl
faddp
and
cmp
loop
sbb
popa
push
mov
sub
pop
cmp
jmp
fsts
test
bound
arpl
xor
cmp
imull
dec
mov
sub
paddsw
sub
lahf
push
add
fwait
inc
push
mov
cld
mov
mov
int
cmpsl
sub
lods
cmp
jnp
sahf
jb
jge
mov
hlt
dec
pusha
dec
jno
xchg
cmp
decl
adc
repz
in
cmp
sub
adc
push
mov
out
xor
cmc
fstl
fsubrl
xchg
addl
cmp
fiaddl
out
fnstenv
xor
jnp
or
push
or
add
testl
add
pop
mov
les
sub
aas
stc
lods
jmp
xor
filds
mov
pusha
dec
repnz
dec
imul
pop
mov
fdivp
cmp
cmp
xchg
lods
push
xchg
xor
push
cld
popa
xchg
cmp
jb
lods
jns
enter
jne
int3
cmpsl
test
mov
jge
xor
push
aas
movsl
sub
mov
cli
push
pop
inc
push
push
sub
xor
jg
lret
and
es
xor
jp
xchg
icebp
jns
das
pushl
inc
repz
sub
jmp
es
pop
pop
popa
dec
xchg
cwtl
adc
jge
push
jnp
mov
xor
mov
lret
mov
push
jmp
int3
inc
sbb
lret
leave
ja
mov
cli
incb
icebp
or
sbbb
fcomi
mov
xchg
pushf
das
inc
mov
xor
imul
inc
es
adc
sub
xor
rorl
sub
pop
jmp
pop
subb
arpl
fsub
xchg
dec
in
dec
stc
sbb
pop
cmc
ret
jne
cltd
stc
inc
lea
add
jl
push
scas
add
xlat
pop
xchg
stos
push
stc
lods
lods
add
or
mov
in
sbb
lea
repz
jo
xchg
mov
sbb
rol
sbb
add
and
mov
and
mov
hlt
cmp
divb
arpl
dec
popa
inc
sub
fidivrs
dec
adc
int3
outsl
fcmovu
xor
pop
push
and
sbb
aaa
push
jbe
jmp
xor
xor
push
lea
adcl
repz
lret
inc
xchg
imul
sbbl
je
jb
int3
cmp
or
or
cli
nop
or
mov
push
lahf
inc
pop
out
and
shr
pop
jne
in
mov
or
cmpsl
ss
aad
push
cltd
and
jle
pop
sbb
sub
js
hlt
and
ficoml
fstpt
cmc
out
mov
cmpsl
fdivr
ds
lods
jae
fsubs
push
sbb
aad
outsl
out
cmp
aaa
jmp
push
sub
jge
ret
int
push
lds
shl
sbb
negb
cmc
adc
push
xor
xor
cmp
shl
cmp
adc
jne
sbb
push
rorb
push
inc
lock
pop
push
sbb
push
cmp
push
add
or
shl
flds
push
int3
mov
hlt
je
movsl
pextrw
cltd
jle
inc
pop
add
shll
mov
mov
aaa
mov
fidivs
or
inc
popf
push
aad
sub
cltd
inc
mov
mov
dec
and
lcall
cmp
cld
add
gs
mov
jae
lcall
cwtl
mov
inc
hlt
cmc
xchg
shll
outsl
dec
mov
imul
add
imul
cmpsb
push
dec
and
js
cmp
scas
stos
push
jl
or
stc
outsb
inc
int
sub
mov
jl
push
popf
or
xchg
into
sub
inc
outsb
cmpsl
mov
xchg
outsb
clc
push
lds
pop
xor
cmp
xor
mov
pop
and
dec
inc
je
jmp
mov
pop
mov
xor
std
call
dec
js
sub
and
adc
pop
inc
inc
adc
cmp
mov
iret
cmp
shlb
int
lods
cmp
lods
jbe
lret
dec
xor
adc
fmuls
aad
test
dec
push
ror
scas
lods
push
push
inc
xchg
mov
les
dec
aam
mov
fs
insb
or
xchg
pop
xchg
cmp
xchg
adc
in
inc
movsb
lahf
inc
mov
xchg
mov
jmp
add
lods
cmp
adc
adc
ret
xor
jl
inc
add
mov
add
push
divl
dec
pop
xchg
pop
dec
stos
pusha
add
push
xchg
ret
cmp
int
aaa
pop
xchg
push
xor
cltd
mov
mov
int
cwtl
xchg
sub
int
gs
in
cmpsb
mov
cld
sub
push
scas
lock
cmc
pop
xor
mov
aad
cmp
hlt
ss
cltd
push
dec
loope
jns
push
add
rorl
mov
xchg
addl
mov
lods
sub
add
dec
out
loope
cmp
pop
fldt
enter
shll
push
pop
sub
jmp
sahf
enter
inc
or
xchg
movsb
mov
sbb
orb
mov
sti
add
inc
pop
dec
xor
mov
pop
arpl
imul
cwtl
inc
mov
pop
aas
pushf
mov
sub
in
stos
adc
fnstcw
inc
in
les
jl
fdivl
xor
cli
mov
dec
inc
mov
pop
aas
cltd
sub
dec
int
ret
cli
xchg
push
xchg
cmp
jno
scas
push
sbbb
jbe
and
jmp
lods
cmp
pop
pop
cli
jne
or
pop
push
lods
fdivl
aad
jmp
jmp
sahf
pop
aaa
push
pand
repz
xor
inc
add
shlb
ret
insl
inc
ljmp
add
aaa
dec
and
pop
mov
mov
mov
leave
mov
hlt
imul
jns
sbb
test
and
iret
or
xchg
xchg
int3
fnstsw
neg
sbb
mov
push
loope
mov
dec
fld
les
push
inc
push
xchg
jl
dec
mov
push
shll
repnz
inc
je
jno
pop
inc
jg
ss
dec
inc
fsubl
push
pop
inc
arpl
shll
loope
out
divb
cmp
enter
mov
imul
arpl
fildl
fmuls
inc
jo
xchg
loopne
jp
cmp
add
cmp
stc
and
ret
adc
or
fdivrl
je
mov
xchg
icebp
sbb
addr16
xlat
dec
clc
add
push
jno
mov
jg
inc
int
mov
in
mov
sysenter
adc
int3
sbb
mov
xchg
out
xor
fcomps
inc
ret
fdiv
mov
push
arpl
dec
xor
adc
sub
xor
fsubs
mov
xor
in
cmpb
lds
popa
inc
in
repnz
aas
pop
shrl
jno
and
inc
lahf
mov
inc
add
mov
aad
mov
pop
out
xor
jmp
dec
add
lcall
pop
test
stc
mov
jg
cmp
mov
push
sub
cmp
mov
pop
or
stc
leave
ret
cli
scas
imul
scas
pop
mov
shr
mov
xor
or
loop
xchg
inc
mov
xchg
aaa
pop
cmc
fninit
mov
jl
sarl
jle
jp
adc
jge
lds
pusha
add
pushf
xchg
div
repnz
das
push
or
push
cmp
jae
push
dec
pop
add
pop
lea
adc
or
inc
or
test
cmp
lds
int3
arpl
test
xor
inc
xor
sti
call
stos
or
xor
ret
shl
scas
xchg
push
jl
mov
xor
push
jp
mov
push
bound
jo
pusha
sbb
push
notl
cmp
shlb
cmp
jno
int3
outsl
and
unpckhps
xor
push
cmp
iret
jmp
sub
mov
cwtl
or
mov
in
push
daa
sub
and
xor
or
das
out
aas
jns
jo
xchg
mov
pop
aad
pop
mov
frstor
mov
mov
jmp
add
sub
mov
adc
push
popa
jp
ror
pop
add
stc
jo
test
imul
hlt
jmp
sub
or
stos
sub
sbb
outsb
cwtl
mov
addr16
pop
and
mov
xorl
add
stc
fdivl
push
mov
dec
mov
inc
sahf
out
or
pusha
outsb
out
add
dec
popf
inc
inc
fisubs
dec
adc
adc
dec
test
or
xlat
jl
repnz
movsl
cmp
aam
jne
add
dec
or
mov
adc
pusha
testb
pop
jnp
test
int3
adc
sbb
lock
xorl
pop
fistpll
xor
ds
fnstcw
pop
jne
xor
lcall
out
xchg
cmp
mov
outsb
pop
arpl
push
inc
test
sbb
fsubs
rol
inc
data16
jg
mov
jae
ljmp
movsb
lods
stos
scas
pusha
push
dec
jnp
mov
das
std
pop
data16
and
push
or
out
push
cwtl
pop
fsubrs
lods
movsb
fimull
sub
xchg
inc
das
pushf
inc
jo
add
lds
mov
mov
adc
xlat
mov
push
xchg
or
pop
lret
sub
pop
xor
sbb
or
lock
fcmovnb
test
enter
pop
add
and
popl
xchg
xchg
mov
ljmp
sub
jbe
sub
add
fcoml
inc
aam
xor
pushf
jb
movsl
repz
loopne
xor
outsb
mov
test
enter
inc
ret
inc
je
pusha
loopne
xchg
ffree
xor
inc
add
xor
mov
addl
cmp
add
daa
je
xchg
mov
aam
push
fmul
push
jbe
popa
lock
ja
fdivrs
lret
or
dec
push
sub
push
les
ret
mov
xorb
out
nop
pop
std
lfs
faddl
daa
pop
mov
jl
and
shrl
dec
test
cmp
mov
stos
lcall
xchg
dec
pop
xor
nop
mov
int
or
add
fsubrl
out
cmp
mov
xchg
jecxz
push
dec
or
cltd
dec
cmp
mov
cld
inc
leave
int
in
test
push
fwait
psrld
dec
fildl
mov
mov
xor
subl
outsb
push
fcmovnbe
xor
popa
pop
sub
mov
jnp
insb
negb
adc
jb
cwtl
push
out
inc
jp
mov
adc
cld
out
cmp
insb
mov
mov
in
dec
aam
cmp
dec
cmp
pop
sub
sub
in
and
xor
arpl
sbb
xlat
mov
nop
call
ljmp
jecxz
mov
sbb
mov
dec
jns
mov
ja
mov
lock
mov
adc
movsl
out
ret
inc
movsl
pushf
roll
sti
jno
sarb
sbbb
xchg
inc
and
pop
daa
shrl
loopne
fnop
enter
pop
cltd
rolb
aad
and
test
mov
mov
les
dec
xlat
inc
ds
lcall
add
mov
outsb
dec
cmp
iret
push
sbb
mov
imul
imul
popf
adc
xor
add
aad
fcompl
cmp
push
mulps
out
stc
clc
imul
les
sbb
pop
pop
mov
jmp
rclb
mov
mov
add
pop
mov
out
or
sub
mov
test
or
add
rcr
cwtl
xor
inc
push
xchg
pop
mov
cmc
jnp
inc
pop
jnp
in
int
inc
mov
xor
mov
cmp
push
xor
cmp
xor
pop
mov
xchg
push
rcll
push
or
mov
negl
mov
pushf
push
mov
data16
xchg
in
jp
int
int3
push
aas
aas
data16
mov
dec
shll
sub
js
mov
ret
ja
push
jg
adc
adc
or
outsb
sbb
xchg
shll
out
iret
aas
aas
mov
cmp
mov
and
clc
xor
iret
mov
rclb
push
sti
adc
xor
mov
jle
call
cmc
xchg
push
leave
mov
mov
outsb
jmp
or
xchg
inc
stos
and
inc
repz
test
pop
das
push
sub
cmp
inc
movsl
mov
cmpsb
neg
xchg
js
sti
cmp
push
subb
fdivp
adcb
cmp
imul
gs
imul
addb
popf
add
jnp
cmp
pop
push
imul
push
popl
inc
push
push
sub
xor
xchg
and
mov
out
cmp
xchg
lea
fstpt
cmp
jmp
jae
out
or
adc
xor
sbb
inc
popa
or
data16
adc
mov
xchg
fnstcw
mov
add
xchg
shll
pop
loope
shll
scas
pop
in
add
leave
xlat
sbb
cmpsl
push
sub
std
xor
lahf
xchg
fsubrs
mov
add
cmp
in
sbb
jecxz
adc
mov
insl
roll
mov
pusha
mov
ljmp
test
cmc
or
hlt
jg
sbb
xchg
push
or
add
sub
add
jno
dec
jb
cli
inc
mov
lret
mov
sub
xor
into
mov
mov
leave
push
ss
dec
mov
mov
andb
call
mov
loope
fidivrl
loope
js
jns
movsl
fwait
mov
movsl
in
sbb
in
sub
xor
jb
sub
sbb
out
addb
mov
xchg
adc
popf
push
lahf
or
movsb
push
push
or
xlat
mov
fsts
push
cli
inc
push
inc
into
pop
stos
enter
ud1
pop
jge
mov
push
mov
pop
inc
adc
push
pop
mov
push
jmp
sti
mov
fidivs
or
dec
enter
loopne
lea
fldcw
mov
lods
sti
jb
cwtl
and
sbb
pop
clc
out
jle
imul
in
jle
mov
mov
sub
repz
xor
lret
push
xchg
dec
daa
lds
aaa
sbb
dec
xchg
inc
jne
stos
push
repnz
andl
jnp
mov
inc
sub
out
dec
cs
add
stc
sub
stos
aam
push
inc
jne
push
mov
jno
bound
lock
mov
xchg
lods
inc
and
rcr
mov
lahf
inc
pop
mov
cmp
lods
addr16
rcrb
jns
cmp
fucomi
dec
cmp
aaa
rol
sahf
inc
jl
nop
push
out
sbb
aam
xor
xchg
cmp
aad
loope
xor
test
cmp
or
mov
jns
pop
sbb
cmp
andl
and
add
add
jl
pop
jne
jbe
fwait
xor
popf
movsl
mov
mov
push
int
movsl
mov
pop
daa
inc
or
cwtl
inc
sub
mov
mov
into
or
xor
pop
mov
leave
jne
lcall
adc
pop
out
ljmp
subl
mov
add
add
xor
jo
rcrl
sbb
cs
clc
or
mov
mov
xor
push
inc
add
lret
add
mov
mov
call
push
aas
push
stc
xchg
mov
rcr
mov
ja
mov
mov
push
ret
push
pop
imul
mov
ljmp
push
cmp
mov
xchg
in
xchg
jae
push
dec
and
dec
mov
or
inc
aas
mov
push
das
push
cwtl
popa
push
xor
push
nop
test
adc
jns
into
aas
add
ljmp
inc
shl
insl
dec
arpl
jae
shr
lds
sub
jp
push
push
in
mov
aas
jne
pop
pop
xlat
lahf
push
or
pop
inc
push
dec
inc
jae
aad
lock
mov
pop
jne
stos
imul
ret
sub
jne
pop
cmp
cmc
dec
frstor
ds
sahf
cltd
pop
mov
sti
sub
das
xchg
xchg
dec
push
scas
sub
cmpsl
test
movsl
xor
lods
mov
cld
lcall
ds
push
sti
jg
outsb
roll
add
fstpt
std
aam
enter
and
jmp
push
imul
fstl
jne
inc
iret
mov
xchg
xor
lcall
lock
int3
or
push
cmc
sahf
add
xchg
addb
push
pop
push
lcall
cmpsb
pusha
stc
popa
push
aad
mov
ret
push
scas
stc
inc
in
mov
std
fidivs
jl
and
pop
out
and
inc
mov
in
xor
je
push
mov
adc
lcall
pop
jb
mov
and
or
mov
inc
popf
insl
mov
inc
push
push
cmpsl
jl
add
and
pop
divl
cli
adc
pop
xor
sub
xor
mov
jnp
jecxz
adc
leave
sbb
les
inc
or
fdivr
xchg
mov
adc
ret
cmp
in
pushw
jl
clc
push
notl
mov
or
lcall
ljmp
movsl
loopne
scas
mulb
dec
or
aam
xchg
cmp
divps
es
add
jp
je
or
mov
adc
not
sbb
cwtl
jo
inc
sbb
aas
mov
jb
or
mov
sbb
jno
and
fstpt
pop
es
movl
adc
adc
xchg
xchg
call
int
out
addr16
adc
xchg
push
sahf
jno
push
xchg
pop
inc
stos
mov
push
daa
mov
mov
sub
out
mov
in
lods
and
dec
push
out
hlt
andl
sub
pop
sti
or
clc
mov
dec
xor
inc
and
cmc
repz
pop
jb
xchg
pop
movsl
outsl
loop
sub
fcmovnb
sbb
cli
add
sub
test
ror
xor
mul
movsb
mov
push
enter
out
call
enter
inc
pop
and
test
dec
mov
push
fists
xor
lock
imul
addl
fwait
or
daa
negb
xchg
cmpsl
test
or
clc
imul
mov
daa
mov
push
inc
and
data16
inc
and
cmp
popf
fcmovbe
inc
or
push
add
loop
mov
cltd
cmp
inc
adc
xchg
fmull
jbe
cmp
push
popl
pop
and
cmp
mov
aam
jo
pop
jle
sub
mov
fs
cld
mov
pop
repnz
addr16
cmp
adc
dec
push
lods
sbb
repnz
push
push
mov
test
pusha
sbb
push
test
ss
mov
adcb
or
enter
sub
pushl
fwait
sbb
push
mov
pop
aam
ljmp
repnz
ja
sbb
in
sbb
and
ja
mov
test
xchg
pop
cmp
arpl
lea
adc
push
xchg
push
int
stos
insl
push
fdivl
adc
mov
push
jb
push
out
ljmp
sbb
mov
push
pop
jmp
insb
inc
adc
push
dec
movsb
addr16
pop
daa
mov
das
stos
ja
in
stos
pusha
stos
sarb
add
inc
push
mov
sub
lds
dec
or
mov
and
mov
out
mov
in
mov
jns
pop
nop
dec
lret
popa
inc
pop
adc
aaa
test
and
pop
pop
in
push
cmp
ljmp
lea
mov
aad
adc
mulb
pop
jo
mov
sahf
flds
or
into
idivl
out
and
xor
repz
pop
xchg
push
in
xor
cli
int
lret
gs
inc
repnz
js
fnstenv
or
cs
leave
dec
jle
pusha
int3
inc
push
imul
js
push
imul
in
int3
scas
inc
sbb
mov
stos
bsr
xor
addr16
jno
lret
in
popa
sub
inc
nop
lret
lret
popa
adc
dec
adc
ret
scas
inc
xor
and
pushf
add
push
xchg
fcomp
rclb
pop
mov
aaa
sub
das
outsb
test
push
ljmp
repz
lock
add
stos
cli
loopne
sub
dec
push
mov
daa
and
cwtl
gs
lret
dec
dec
aam
push
enter
std
scas
movsl
inc
mov
jmp
dec
inc
lcall
pop
rcr
mov
sub
mov
cltd
add
add
sbb
push
and
mov
ds
xchg
movsb
iret
inc
fidivrs
push
imul
xchg
pop
inc
add
fisttpll
push
and
add
cwtl
lret
aaa
mov
pop
bound
mov
ret
or
mov
inc
stos
sbb
inc
movsl
mov
xor
xchg
jmp
xor
inc
aad
jns
xchg
out
add
xor
daa
jne
mov
pushf
fisubs
adc
add
adc
addl
dec
lea
ret
and
push
dec
cmp
dec
aas
push
dec
mov
cli
sub
outsb
mov
mov
ljmp
jge
and
lret
jg
addr16
pop
sbb
pushf
sbb
stos
jns
test
mov
cmp
adc
subb
or
ja
xchg
sub
mov
inc
mov
or
stc
cmpsb
sbb
and
sbbl
daa
jnp
ljmp
insb
aas
ret
repnz
outsb
dec
xchg
adc
adcl
jo
mov
repnz
sarl
aaa
mov
pushf
mov
xchg
sbb
aad
xlat
mov
jo
add
out
sbb
loop
leave
pop
idivl
inc
shl
cmpsb
mov
lahf
testb
adc
pop
cmp
add
xor
inc
sub
jb
imul
sub
jbe
cmp
cmp
aad
or
test
aas
or
add
pop
push
ds
jmp
test
ret
and
repz
fstpt
mov
mov
adc
pop
and
dec
rorl
add
jo,pn
subb
add
mov
mov
xchg
mov
addr16
cmp
getsec
sbb
push
cs
test
pop
push
aas
adc
pop
shlb
pop
dec
and
dec
lret
stc
mov
into
push
inc
fdivl
inc
dec
shl
cmp
scas
imul
inc
cmc
sub
mov
mov
inc
movsb
out
mov
dec
mov
aas
mov
outsb
test
xor
pop
test
rclb
adc
cmp
pop
fs
aad
sub
pop
sbb
mov
sahf
sbb
cmc
stc
xor
test
pop
shl
sbb
jo
icebp
das
data16
cmp
pop
mov
adc
adc
push
insl
jbe
push
iret
jecxz
cmp
push
adc
ja
sti
lods
sahf
das
adc
mov
daa
scas
mov
int3
jbe
int3
and
pushf
mov
push
sarl
fdivrs
popf
sub
stc
inc
mov
jo
sbb
jl
shll
push
js
cmc
cld
pop
imul
test
dec
test
jno
repnz
ljmp
cmp
jno
sti
push
in
mov
push
push
push
out
xor
sub
sahf
aaa
sub
inc
add
sub
sbb
pop
pop
or
xchg
mov
push
dec
dec
jmp
sbb
lods
fists
sbb
add
lret
lock
int3
push
cli
and
pop
notb
push
jb
inc
sub
in
adc
test
fidivrs
stc
fistps
leave
and
movsb
mov
xchg
movsb
ljmp
in
sbb
loopne
fists
lret
pusha
ret
mov
or
rorl
xor
or
sub
xchg
enter
xor
pop
xchg
stos
test
adc
sbb
cmpsl
or
jmp
fs
cli
lret
jecxz
cmp
push
pop
jl
push
mov
lcall
ss
jecxz
and
push
pop
push
aad
mov
or
pop
div
fcmovnbe
mov
fadds
sbb
imul
and
ret
sub
mov
and
dec
jo
mov
popa
and
std
clc
data16
incl
icebp
mov
mov
test
bound
loop
jp
in
aaa
cmp
xchg
inc
sahf
cmp
aas
cmp
jge
cmp
adc
ja
notb
push
aas
insb
repnz
icebp
pop
mov
cli
jle
or
gs
mov
mov
jmp
in
pusha
into
mov
stos
ja
repnz
subl
bound
jo
fidivrs
jmp
stc
jp
loop
divb
movsl
js
jnp
icebp
inc
fcompl
insl
pop
mov
xor
jno
mov
test
addr16
fs
test
dec
or
xchg
jmp
out
call
adc
inc
sbb
push
scas
xchg
sbb
fildll
and
xchg
clc
int3
adc
sub
xor
mov
rcll
or
aad
add
lret
arpl
cld
mov
inc
mov
mov
xor
stc
loopne
sub
outsl
cwtl
xchg
jp
loop
jle
inc
push
bound
mov
pop
filds
rcrb
cmp
fimuls
inc
popf
jno
inc
jns
xchg
ss
jnp
ja
andl
cmc
dec
lret
push
add
add
sti
add
ret
fstpt
mov
dec
stc
sahf
lds
lock
decl
pusha
jno
inc
in
test
xchg
test
push
mov
mov
mov
repz
xor
out
ja
sub
jno
mov
mov
lret
lods
test
lcall
inc
mov
add
filds
jns
mov
ljmp
mov
jns
insl
jnp
ror
pop
sarb
pop
add
add
add
jb
add
xchg
push
mov
popf
lock
aam
loop
pop
lea
pop
icebp
aaa
cmc
aam
mov
push
add
xlat
js
or
cs
shlb
mov
loop
ja
dec
pop
mov
jmp
dec
sub
ret
out
addb
xor
mov
rclb
shrl
je
cld
xchg
pop
push
hlt
or
xor
loop
and
es
jecxz
mov
and
dec
inc
mov
cmp
mulb
movsb
sbb
cld
fisttpll
xchg
fwait
dec
aad
in
pop
and
loope
shlb
jl
mov
mov
fwait
xor
enter
xor
icebp
or
mov
jmp
fmull
pop
mov
jmp
push
mov
pop
fidivrl
add
cmp
lods
ret
dec
adc
lret
fldt
icebp
test
push
jne
popl
testb
ja
cs
gs
or
push
ret
jbe
ficoms
in
cmc
jae
nop
test
push
xchg
fsubs
ret
xchg
mov
dec
ret
xchg
fstps
jge
pop
push
es
cmp
cmp
xchg
add
add
mov
dec
daa
mov
jle
inc
dec
jg
movsl
ds
scas
popf
std
in
jg
cmc
sub
mov
fnstenv
dec
ljmp
jl
cmc
sbb
xchg
and
fdiv
push
and
pusha
out
xchg
clc
loopne
push
jge
sahf
mov
jg
loop
icebp
js
mov
mov
out
mov
and
jnp
jo
mov
test
cmc
std
dec
movsb
pop
jns
sbb
pop
adc
jecxz
xchg
enter
stos
add
insb
and
fisttps
cmc
xchg
test
mov
cmp
pop
mov
xor
sbbb
mov
xchg
sti
incb
pop
pop
add
push
dec
push
bound
subl
xor
and
and
xor
fldl
pusha
mov
xor
and
stos
sarb
jnp
dec
mov
aaa
cs
in
jg
movsb
inc
ret
imul
xchg
pop
dec
cmp
jmp
xchg
pop
leave
scas
in
cmp
mov
out
pop
ljmp
pop
jb
mov
mov
mov
in
fldt
cmp
rorb
ds
fdivrp
loopne
inc
jne
dec
sub
dec
repnz
nop
mov
sbb
shlb
fldl
mov
or
mov
shl
sahf
inc
movsb
out
mov
movsb
int3
shll
or
and
xchg
xor
in
cmp
test
pop
add
inc
jb
cwtl
sbb
dec
rolb
dec
xchg
aad
test
cltd
neg
scas
xchg
and
or
popa
pop
in
push
enter
sbb
mul
fdivl
sub
inc
aad
in
cmc
dec
sub
jnp
outsl
loopne
mov
push
cmp
dec
and
js
lret
jae
push
divb
mov
hlt
mov
sbb
xchg
inc
and
out
adc
mov
and
inc
pushf
nop
xchg
enter
push
insb
or
sbb
push
outsl
xor
sbb
push
jecxz
out
imul
mov
icebp
rcrb
sub
cmp
cmpsl
imul
inc
in
push
inc
ss
fsubrl
and
xlat
sarl
pop
sbb
call
sbb
jo
mov
iret
sbb
pop
mov
cmp
aaa
or
fcomps
enter
and
lods
ret
popa
dec
jle
sub
pusha
pop
ret
sub
ljmp
sub
mov
dec
mov
jbe
aaa
add
lea
dec
sbb
xchg
fbld
push
mov
mov
cwtl
scas
scas
insb
jp
loop
mov
push
pusha
in
mov
arpl
cmpsb
xor
mov
jbe
mov
lods
inc
shll
push
mov
adc
flds
repnz
sbb
jae
repz
divb
lock
cmc
lea
sub
or
mov
mov
xor
das
stos
pusha
add
or
xchg
lods
scas
lods
mov
in
daa
fidivs
mov
inc
mov
add
jns
test
lock
cmp
int3
or
push
rolb
and
cwtl
movsl
mov
xlat
jno
int
rolb
ljmp
jmp
sti
lcall
addb
xor
sub
scas
pop
insl
inc
ret
xor
arpl
aam
mov
lods
pop
outsl
stos
jns
call
push
and
jp
add
movsl
inc
cmpsl
cmp
insl
jae
xor
mov
push
cmpsb
add
add
sbb
aas
js
imul
cwtl
mov
test
mov
sbb
or
sti
stos
std
gs
rol
imulb
mov
loop
xor
cmc
mov
mov
jge
and
es
mov
pop
fwait
fs
mov
loopne
ja
js
lahf
pop
cmp
jnp
ret
sbb
test
cmpsl
xor
test
imul
mov
mov
adc
cmpsb
ds
jns
xchg
fnsave
scas
inc
call
xchg
mov
jne
sti
mov
notl
dec
and
test
or
sbb
mov
rcrl
cmpsb
push
fdivl
ret
imul
mov
xchg
xor
cmp
sbb
rcr
push
insl
push
sti
popa
div
les
jae
pop
mov
xor
ret
cmp
pop
aam
mov
xor
mov
shrl
shrb
fwait
lcall
clc
xchg
sbb
pop
fldcw
xchg
sbb
push
imulb
and
in
pop
rcll
aad
ljmp
sbb
cmp
lret
mov
inc
pop
adc
popa
dec
pop
push
pop
pop
cmp
push
add
stos
into
fxch
mov
jne
jnp
rcrl
jne
lods
repz
push
mov
stc
movsl
insb
stc
clc
push
mov
popf
inc
stos
sbb
repz
in
enter
mov
adcl
in
pop
push
int
fcmovu
and
cmpsb
xchg
add
cltd
gs
bound
out
jp
inc
push
subl
jp
jp
jecxz
ds
scas
sub
mov
repz
jmp
dec
sbbb
sub
aad
out
xor
dec
test
in
mov
jns
and
popf
lods
xchg
adc
imul
out
lods
xchg
popa
jge
ret
xor
jb
mov
pop
xchg
in
mov
cmp
mov
bound
jne
das
pop
jne
push
push
js
xchg
add
push
gs
pop
sbb
aaa
sub
mov
lods
push
hlt
hlt
dec
dec
add
gs
xchg
pop
shll
xchg
sub
mov
aas
sbb
jne
sti
dec
adc
fcmovb
arpl
mov
cltd
rcll
scas
jge
leave
push
out
aaa
sbb
fidivrl
jne
sahf
mov
int
and
stos
cmp
mov
mov
stos
dec
movsl
mulb
and
mov
jnp
addr16
sub
mov
jecxz
sti
and
test
data16
loop
shrl
sub
pop
jne
lock
out
mul
sti
inc
popa
mov
call
pop
add
xchg
pop
lds
and
mov
nop
mov
scas
sbb
mov
adc
shlb
sbb
fcomps
loopne
push
sbb
outsl
mov
scas
leave
pop
mov
insb
cli
ja
xor
ja
lahf
inc
outsb
and
shr
mov
es
cltd
sarl
je
clc
cwtl
sub
push
in
xor
loopne,pn
mov
pop
dec
mov
fsts
xchg
pop
in
xor
fwait
push
inc
loope
adc
frstor
cltd
and
sub
loope,pt
push
pop
pusha
arpl
daa
pop
xlat
cwtl
lods
fldcw
xor
mov
pop
sbb
mov
pop
arpl
js
das
xor
jo
jle
push
mov
lock
pop
cltd
adcl
movsb
ja
call
mov
jle
xchg
pushf
add
movsb
popf
cwtl
add
cwtl
and
sub
mov
or
scas
sbb
cmpsl
and
and
and
and
out
bound
out
sbb
sub
jle
stos
stos
neg
repz
fdivs
sub
addr16
adc
in
and
fdivrl
fstpl
ja
jmp
adc
in
jne
bound
xor
or
xor
pop
pop
adc
inc
arpl
ja
loope
push
cs
and
faddl
xchg
dec
xlat
daa
sbb
and
jo
mov
scas
dec
test
xchg
cmp
sbb
sub
xor
mov
cmp
cmp
mov
clc
cltd
inc
lahf
insl
push
stos
mov
movsb
cmp
pop
lock
scas
dec
ficomps
cmp
cltd
sti
inc
pop
ss
movsl
leave
sub
mov
rolb
fwait
xchg
les
jecxz
or
popa
leave
inc
scas
fists
mov
adc
mov
push
xlat
mov
arpl
xchg
loope
aas
push
fcmovnu
jo,pt
gs
xlat
daa
mov
fistpll
loope
dec
js
xor
push
frstor
js
icebp
lea
mov
xchg
jecxz
ja
popa
mov
push
clc
pop
stos
push
push
fiadds
daa
pop
stc
sub
pop
dec
hlt
push
sahf
jg
aas
push
cmp
pop
lahf
shll
pop
xchg
sahf
cmp
jns
sahf
and
pop
les
lahf
pop
push
push
push
sub
cmp
sbb
lods
cli
daa
push
push
fisubrs
pop
mov
mov
push
insb
and
lock
mov
push
fisubrs
lahf
jne
js
inc
add
sahf
jmp
fiaddl
fildll
pop
pop
add
ja
int
pop
jne
call
pop
inc
arpl
fdivrp
xchg
popa
data16
inc
fs
pop
add
xchg
ficoms
loopne
fimuls
call
and
ficoms
popa
mov
fists
outsb
call
pop
sbb
fisubs
fcmovu
ficomps
in
negl
cmpsb
ljmp
je
jo
sub
push
mov
push
js
mov
push
sub
inc
cmp
sahf
or
aas
popf
divl
xchg
aad
mov
mov
mov
dec
sbb
lahf
cmp
and
icebp
dec
sahf
cmpsl
push
ds
mov
pop
popf
and
mov
fbstp
pop
scas
mov
cmp
jbe
pusha
shl
frstor
inc
xchg
xor
pusha
das
cltd
fstp
rorl
fbstp
in
fstl
out
pop
mov
add
pop
pop
push
sahf
ffreep
add
fisttps
inc
scas
popf
fstpt
and
rcrb
loop
mov
sbb
pop
or
and
in
lahf
fisttpl
jo
fs
negb
bound
popf
jmp
test
lahf
gs
ja
lock
lahf
mov
out
and
rolb
pop
cmp
pop
popf
icebp
stc
negl
sbb
mov
js
sub
sbb
aaa
push
popa
jg
inc
fisttpll
adc
pop
loopne
mov
mov
push
xchg
sub
loopne
xor
pop
pop
pop
push
loope
mov
push
fsub
lcall
dec
sub
pop
jmp
xor
xor
pop
fnsave
mov
loope
xor
js
mov
mov
add
fsubrl
pop
and
sub
dec
and
sbb
cmpsl
out
xchg
out
pushf
sti
cmpsb
xchg
and
and
cwtl
mov
loopne
mov
xchg
mov
push
and
sbb
sub
pushf
mov
mov
adc
mov
pushf
xor
pushf
and
jbe
out
fbld
sub
xchg
daa
mov
pop
scas
pop
out
outsl
pusha
sub
outsl
pop
stc
xor
loopne
and
cmp
mov
bound
repz
pop
mov
push
fstpt
mov
ficoms
adc
iret
pop
pop
std
sub
bound
mov
pop
rcrl
loop,pt
fwait
push
pusha
movsl
push
fstl
cmpsl
pop
sub
push
pop
scas
xor
and
cmp
sbb
fldl
pop
shlb
mov
cli
out
sbb
rcl
pop
dec
lret
scas
dec
or
mov
mov
xchg
fwait
dec
enter
lds
sbb
pop
add
popf
fcmovne
scas
push
leavew
and
frstor
mov
loope
or
fistpl
int
popa
pop
iret
outsl
fucomip
mov
pusha
loope
std
pop
jmp
into
add
loopne
leave
insl
pop
xor
push
popa
jne
lock
cli
pop
pop
jno
mul
cld
adc
mov
xor
pop
add
fistps
aaa
clc
pop
push
add
mov
nop
hlt
mov
pop
push
jo
mov
pop
lcall
sub
nop
xchg
dec
and
sti
and
sbb
xchg
adc
sbb
pop
mov
xlat
subb
jo
mov
cltd
pop
orl
mov
arpl
jp
cld
jno
sbb
mov
mov
pushf
dec
test
loope
mov
xor
pop
je
movsl
lahf
pop
fsub
shl
daa
mov
ficomps
or
data16
pop
fs
addr16
mov
and
outsl
neg
es
insb
pop
loopne
loopne
lcall
fisubs
sbbb
adc
mov
imul
lret
loope
pop
mov
rcrb
and
mov
stc
sbb
sbb
jbe
and
fiaddl
sbb
cltd
out
sbb
xchg
nop
cltd
or
and
fisttpll
and
cmp
lcall
inc
fwait
sahf
jp
and
loopne
fcmovbe
int
movsl
dec
jle
push
outsl
sbb
sub
push
sbb
xchg
push
pandn
shrb
fistps
out
pop
mov
mov
push
jo,pn
mov
xorl
and
add
add
subl
cmp
stc
xor
cmp
icebp
push
mov
jno
xchg
bound
jl
ror
arpl
scas
fnsetpm(287
inc
add
or
fisubl
test
jmp
jo
push
aas
aam
out
cwtl
fwait
jo
add
pop
subb
xor
js
bound
adc
cmpsl
sub
and
jns
hlt
and
insl
clc
out
pop
add
xchg
mov
pop
je
mov
std
mov
dec
xor
repnz
inc
pop
push
cmp
stos
or
cld
sub
adc
push
icebp
jp
rcrl
test
mov
xchg
aas
lcall
sbbb
or
mov
arpl
xlat
mov
mov
xchg
shr
fistl
push
jg
push
cmpsb
jle
mov
pop
sbb
sbb
sbb
mov
das
in
popf
imul
out
arpl
sub
fs
or
pushf
rcl
push
jae
fidivrl
in
bound
cmc
inc
xchg
sti
sub
pop
lahf
xchg
or
jo
mov
pushf
push
test
mov
std
lea
jnp
push
mov
hlt
stos
scas
jb
icebp
jno
in
pop
das
jg
cmp
jmp
xlat
popl
cmpsb
sti
cmp
jp
adc
pop
ret
loope
dec
and
xchg
xor
adc
bound
jge
in
adc
pushf
mov
pop
add
mov
or
mov
or
into
orl
stc
xchg
orb
sarl
jle
adc
pushf
pop
push
adc
stos
imul
mov
and
and
popa
xor
lret
jl
or
fcomip
in
cmp
fstpt
int3
mov
inc
xchg
sbbb
out
or
pop
lea
das
clc
cmpsl
fcmovb
cwtl
push
cld
and
push
fxch
idiv
xorl
xchg
jnp
shl
repz
test
inc
repz
fisubrs
xchg
or
test
shrb
fbld
adc
in
mov
pop
aam
outsl
xchg
imul
pop
push
scas
mov
add
or
push
jae
mov
dec
out
imul
pushl
movsb
aad
xchg
xchg
pop
test
call
cmp
sti
pop
rorl
in
imul
cmp
pop
pop
sub
sti
cld
sbb
inc
mov
pop
push
mov
fwait
mov
divb
lea
push
and
mov
cmp
mov
adc
add
addr16
jne
pop
popa
cmp
jnp
mov
jp
jnp
fwait
inc
es
faddp
dec
jl
jns
add
jns
mov
out
imul
xchg
stc
addr16
jge
aad
sbb
sbb
in
fwait
push
in
rcr
cld
mov
fwait
dec
sbb
out
push
jno
aaa
test
icebp
pop
pushf
bound
imul
mov
mov
imul
daa
addb
outsb
fs
fwait
jno
cmp
or
xor
enter
and
imull
and
ret
jmp
stos
dec
adc
add
inc
xchg
mov
mov
dec
mov
adc
std
or
mov
add
mov
mov
lret
ljmp
ds
in
rorb
add
add
loope
insl
jg
les
jo
jns
mov
std
pop
or
add
aad
xchg
bnd
shl
fimull
loope
dec
stos
push
popa
je
adc
push
or
orl
out
fsubl
cmp
fidivs
out
lods
jmp
cltd
outsl
push
add
mov
cmpl
mov
dec
xchg
icebp
and
popa
xchg
bound
mov
popf
add
dec
fcomps
mov
and
jo
mov
jge
adc
push
imul
pop
pop
cmp
jge
fdivrs
cmp
sarb
xlat
test
xchg
ss
popa
lock
shll
lcall
das
sahf
inc
in
ret
aaa
dec
into
or
nop
loope
movsb
lahf
add
cmpsb
flds
outsb
adc
hlt
cmc
adc
fwait
mov
data16
movsb
dec
jne
popf
jle
jns
out
adc
adc
push
xchg
cmp
jl
sub
and
leave
lret
enter
mov
xchg
sub
cmpsl
fdivs
test
pop
inc
jl
jecxz
pop
fisubs
pop
xor
xchg
stos
mov
mov
fdivl
xor
mov
sub
arpl
clc
xor
inc
pop
xor
mov
ss
sti
fsubrs
mov
jno
cld
stos
mov
inc
imul
mov
std
cltd
dec
mov
xlat
daa
imul
dec
imul
xchg
addb
or
sbb
cmpsl
test
dec
sti
loop
jmp
je
das
cwtl
sbb
cmp
js
push
mov
repnz
pop
jns
testb
imul
clc
repnz
jecxz
cwtl
mov
out
push
mov
adcb
adc
push
jae
pop
mov
lret
loop
inc
enter
adc
jns,pt
int3
sar
push
gs
mov
xor
pushf
push
adc
push
push
push
popa
cli
lea
lret
lcall
sbb
lret
push
icebp
arpl
arpl
sbb
outsl
icebp
in
push
arpl
pop
and
xchg
repz
jl
jg
fisttps
xchg
fidivrs
loop
add
mov
in
out
jge
push
add
arpl
add
sbb
mulb
add
add
mov
xchg
nop
pop
cmp
jb
nop
leave
les
aad
add
cmp
xchg
ss
and
dec
jl
and
mov
insl
xlat
cmc
inc
ret
cli
xor
or
int
cmpsl
mov
push
inc
adc
xorl
xchg
jae
mov
in
pushl
mov
lock
jbe
sub
cmc
jle
in
and
daa
mov
jl
lahf
or
lods
and
add
push
out
pop
in
add
dec
mov
jbe
xor
roll
mov
nop
gs
mov
insl
ficoms
es
das
dec
push
test
xchg
in
mov
cwtl
jo
pop
mov
push
mov
inc
sub
ja
push
sbb
and
icebp
pop
pushf
jb
xor
xor
rep
fistl
pop
inc
push
test
stc
daa
xchg
leave
jge
add
push
notl
rcrb
mov
sbb
mov
stc
mov
and
xchg
leave
popa
cs
pop
jno
mov
clc
aas
mov
jg
or
addr16
jo
imul
lods
or
dec
pop
push
adc
inc
jb
icebp
cmp
jo
inc
repnz
sub
xchg
outsl
jne
adc
jg
xchg
cmp
std
push
not
adc
inc
outsb
call
testl
bound
ja
into
cs
out
lret
jbe
mov
dec
jae
lods
repnz
and
iret
shr
pop
pop
shrb
fdivp
popf
push
pushf
jno
push
cltd
inc
call
jmp
lahf
andl
xchg
add
jb
jle
and
jno
jns
or
push
out
mov
add
add
repnz
xchg
adc
nop
add
mov
daa
or
push
icebp
idivl
inc
jno
sbb
sbb
insb
jge
dec
jmp
mov
cmp
jo
aaa
and
cmpsl
sbb
aas
jmp
sub
inc
and
xor
mov
mov
mov
movsb
mov
xchg
xor
sub
sub
insl
mov
add
xor
pusha
icebp
jns
jle
mov
fsubr
cmp
stos
out
mov
sub
add
sub
lock
sub
call
shrl
scas
adc
sub
nop
arpl
or
mov
mov
test
or
aaa
fists
and
out
ss
mov
or
mov
mov
xor
lock
mov
out
cmp
jge
pop
push
jae
out
add
push
icebp
ret
jge
outsl
jae
inc
in
or
push
cmp
mov
sbb
dec
adc
lods
in
fidivrl
push
push
orb
inc
push
xchg
sbb
cltd
sub
out
jns
nop
insb
loope
sub
addr16
mov
push
xor
rcr
push
xor
outsl
test
dec
popa
push
ds
cmc
add
gs
outsb
std
data16
sub
push
outsb
sub
and
bnd
sub
dec
mov
loope
rorb
dec
add
add
dec
mov
dec
dec
int3
or
mov
pop
pop
xchg
fdivs
and
xchg
xchg
outsl
fisubrs
push
pushf
jmp
xchg
xchg
call
jno
test
out
sbb
inc
add
jno
jle
and
xorb
lea
lods
pop
out
mov
add
push
repnz
mov
popl
pusha
and
mov
adc
push
jbe
inc
outsb
adc
pop
out
cltd
fistpl
jge
dec
out
pop
cld
mov
lahf
xlat
daa
out
add
and
and
pop
inc
out
mov
arpl
out
pop
and
add
setbe
mov
sub
hlt
mov
push
mov
or
aas
jbe
push
sub
mov
js
lods
data16
inc
push
pusha
mov
jge
mov
fldt
ljmp
cmp
in
out
int
xchg
jno
insb
add
inc
insb
mov
out
mov
outsb
outsb
mov
dec
push
outsb
adc
out
loope
and
push
jmp
rorl
call
in
push
xchg
mov
popa
jmp
stos
data16
fnstenv
jbe
je
and
cld
jg
jnp
sbb
outsl
fistpll
out
ret
outsb
mov
loopne
outsb
add
lock
out
mov
inc
insl
dec
sbb
outsb
mov
sub
insl
sbb
lods
adc
bound
sbb
sbb
mov
out
das
hlt
cmp
xor
xorb
mov
cmc
movsl
adc
mov
sbb
fimuls
loopne
shll
jne
jnp
imull
and
std
lret
xchg
mov
xor
and
adc
mov
dec
pop
lret
dec
fcmovbe
int
outsb
int3
mov
in
mov
dec
xor
mov
push
addr16
lea
or
popa
dec
lock
fstl
out
addr16
insl
daa
test
insl
adc
jecxz
lods
enter
aam
in
sbb
test
add
subb
add
cmp
outsb
jmp
xor
arpl
enter
data16
rcr
or
mov
aas
adc
ds
mov
cmp
or
sbb
dec
or
lds
pop
insl
xchg
mov
in
dec
and
jno
and
adc
mov
xor
sub
pop
xchg
ret
and
or
sbb
add
adc
push
push
or
inc
xchg
jo
ss
xlat
xchg
mov
icebp
adc
jo
loopne
in
inc
int
jae
mov
in
or
pop
add
or
dec
addr16
xor
icebp
sub
out
int
sub
in
mov
sub
insb
mov
xor
insb
adc
gs
into
shr
lock
insb
aad
shr
xchg
or
adc
mov
popa
cmp
aaa
loop
in
and
adc
jmp
adc
movsl
add
or
pop
es
cli
mov
mov
lods
cmp
cmp
insb
jmp
in
xchg
inc
in
nop
add
jb
cld
inc
lock
filds
jg
sub
jo
push
ss
test
aas
imul
jg
ficompl
mov
inc
jle
int
adc
mov
jecxz
nop
xchg
aam
or
jns
pop
lock
pop
outsb
gs
jmp
adcl
cmc
fisttpll
imul
mov
dec
inc
jb
int
pop
dec
push
mov
jnp
dec
lahf
pusha
sub
mov
outsl
jno
mov
sub
dec
cmp
mov
dec
mov
into
mov
dec
jle
lods
push
adc
dec
mov
or
dec
in
push
les
push
repnz
testl
icebp
cmpsl
leave
popf
outsl
pop
aam
dec
cltd
call
sub
jecxz
add
pop
lods
pop
mov
out
fldcw
dec
stc
inc
mov
dec
cmc
and
lret
clc
std
js
pop
out
scas
movsl
loop
sub
add
add
sub
imul
xor
cmp
frstor
push
sub
jmp
scas
icebp
jo
push
std
jmp
pop
imul
addr16
pusha
or
jo
mov
adc
mov
mov
lds
repnz
iret
test
mov
inc
cli
hlt
insl
fsubr
aaa
data16
adc
mov
xor
pop
shlb
and
inc
add
add
jecxz
cld
or
mov
adc
lret
out
sub
push
or
lock
push
int
repnz
enter
lds
fsubrs
mov
out
pushf
jb
test
add
mov
repz
xor
cli
fbstp
xchg
les
jae
adc
in
flds
mov
sbb
jecxz
lret
outsl
cmp
das
ss
popf
mov
outsb
addr16
and
xor
mov
test
es
into
xchg
inc
scas
or
push
mov
sbb
sub
jo
leave
dec
dec
and
lock
push
loope
cs
cltd
femms
icebp
add
call
dec
subb
jecxz
mov
xor
xchg
scas
lea
jb
or
xchg
mov
call
fs
cmpl
xchg
jecxz
insl
or
jp
out
movsl
into
aad
xchg
mov
mull
sbb
out
loopne
jle
push
pop
cltd
icebp
or
jmp
mov
and
addps
rclb
xchg
pop
mov
frstor
or
or
sub
cmp
popf
mov
sub
adc
hlt
repnz
sbb
xor
push
test
xchg
mov
inc
daa
pop
jae
insl
inc
dec
lcall
add
inc
add
das
push
add
push
push
mov
xchg
sub
lods
out
pop
or
scas
sbb
scas
mov
sub
insl
push
mov
sub
scas
lret
push
in
xor
dec
dec
pop
adc
sarl
mov
or
xor
jbe
sub
pop
jae
push
outsl
and
cmc
mov
lock
sub
add
fwait
push
loopne
pop
jb
stos
in
push
mov
pop
or
outsl
nop
xchg
mov
lcall
jp
or
xor
outsb
or
add
loope
int3
movsl
lods
mov
push
shl
subl
mov
hlt
lahf
sbb
jo
scas
nop
sub
sbb
xor
inc
sbb
mov
loope
dec
cmp
pop
lock
aaa
clc
pop
mov
js
mov
jmp
gs
in
push
pop
imul
cmp
pop
bnd
sahf
test
pop
mov
xor
insl
clc
jge
xorl
sbb
mov
pop
mov
or
mov
nop
fwait
addl
lahf
pop
jmp
dec
and
cmc
xchg
popa
adc
inc
dec
mov
test
hlt
add
shrl
int3
xchg
stos
jo
mulb
int3
test
lock
fbstp
mov
mov
inc
dec
setnp
push
in
pop
or
sti
xchg
in
or
and
pop
hlt
sub
std
std
jmp
fsubrs
jmp
ja
xchg
in
cmc
dec
xchg
xchg
jno
push
movsl
push
mov
adc
pop
xor
mov
stos
pop
ja
mov
dec
add
ret
test
mov
fistpll
cmp
out
sub
cltd
cmc
out
push
gs
ret
or
xorl
cmp
mov
adc
and
add
jne
out
sahf
sbb
mov
add
jne
dec
popa
mov
stos
pshufw
push
shll
sub
cmp
outsb
shr
sbb
jg
ja
pop
dec
testb
mov
cmp
push
add
testl
jb
pushf
arpl
push
mov
and
push
ficoml
ja
push
imull
xchg
daa
imulb
mov
jecxz
repnz
pop
out
call
sbb
call
pop
inc
jl
xchg
insl
jge
ljmp
idiv
out
call
test
nop
jbe
pop
push
divb
andl
adc
sub
sbb
or
iret
xor
and
and
mov
notb
imul
popa
push
xchg
push
sbbb
loop
loope
xchg
cmc
push
add
jmp
loopne
jg
aam
testl
sub
test
lahf
lods
in
imul
pop
das
pop
lods
ds
loop
mov
dec
cvtps2pi
and
or
int3
lock
jmp
imul
not
movsl
sarl
jg
repnz
testb
pop
jae
mov
ja
lret
arpl
daa
xor
jno
mov
and
lods
jne
ret
stos
roll
loope
pop
mov
and
jns
adc
inc
and
ljmp
repnz
mov
out
add
cmp
outsb
imul
xor
bound
bt
xchg
cmp
mov
adc
arpl
jae
add
ljmp
nop
mov
pop
lods
iret
stos
aas
or
ljmp
scas
sbb
or
sub
ret
stos
cmp
iret
jp
popf
in
fldl
rcl
mov
dec
dec
test
jmp
repnz
fstl
sub
wbinvd
roll
sub
dec
les
jnp
arpl
subl
insb
lods
fists
mov
cmc
xlat
les
mov
push
repz
ret
int
fisubl
mov
leave
les
and
mov
stos
insl
pop
gs
shlb
or
mov
mov
cmp
ja
lahf
cmc
jmp
add
push
xor
out
loope
nop
lds
sub
mov
push
rcrb
jg
pusha
fiadds
hlt
mov
shll
jmp
daa
cmpsb
subb
add
and
add
rol
or
fisubs
loope
xlat
rorl
shr
fucom
shrl
sub
jne
sub
cwtl
aad
cld
pusha
xor
adc
int3
sbb
ss
sbb
leave
test
sub
jge,pn
scas
cli
out
aam
pop
enter
scas
lea
and
shrl
nop
xor
xor
xchg
in
sub
dec
jo
xorl
adc
fwait
mov
insl
call
popa
movaps
shrl
cwtl
push
pop
sub
outsb
ficoml
aas
mov
mov
cs
inc
jne
lods
add
popf
adc
push
push
mov
pop
loop
push
push
ljmp
and
pop
int3
shrl
inc
js
jge
imul
inc
add
sti
pop
adc
pop
fisubrs
cmp
rcrl
mov
xlat
hlt
xor
sbb
repnz
fiaddl
and
jg
jo
mov
pop
sbb
mov
jge
sub
sbb
mov
gs
nop
mov
cmp
ss
cmp
mov
mov
add
mov
call
arpl
push
repnz
insl
adc
out
hlt
jg
insl
test
mov
insl
daa
mov
xlat
popf
fadd
rcrb
adc
push
xor
pop
fistpll
and
int3
outsl
in
or
jge
xchg
mov
mov
mov
mov
mov
jp
ja
aam
movsb
mov
mov
test
pop
xorb
pop
mov
xchg
stos
arpl
dec
out
mov
mov
cltd
adc
sub
xor
or
stc
std
jb
movb
dec
dec
jmp
jecxz
aad
and
inc
cld
cmpsb
push
jne
addb
add
not
adcb
lods
mov
pop
imul
and
lahf
repz
out
jge
inc
push
mov
or
js
jne
es
fidivrl
mov
xchg
je
scas
imul
iret
cli
xorl
fsubrl
nop
pop
pop
aas
popl
aam
and
mov
into
pop
js
inc
insb
adc
out
xchg
and
lea
aad
push
fs
xor
insl
and
insb
jmp
aas
hlt
or
retw
dec
cmp
test
fisttpll
lcall
dec
mov
and
mov
add
dec
pop
out
mov
add
xor
mov
ja
les
mov
add
add
push
fnsave
jge
repz
test
les
inc
insb
xor
adc
cmpsl
or
call
mov
mov
aaa
cwtl
pop
ja
mov
mov
pop
inc
xchg
movsl
xlat
int
push
jne
mov
loope
xchg
sub
lret
dec
fldl
pop
sub
cld
sbb
pop
cmpsl
dec
fdiv
jg
mov
aad
es
jnp
repz
subb
inc
sub
movl
std
stos
int
xor
xor
jo
in
mov
mov
scas
mov
lahf
sahf
sbb
neg
jge
popa
push
push
adcb
and
pop
addb
add
pop
pop
data16
or
call
ljmp
mov
or
out
inc
jnp
pop
jo
mov
imul
ja
test
mov
int
and
mov
loop
push
addb
ss
jl
mov
add
jg
js
mov
lock
outsb
cld
hlt
loope
push
stos
mov
add
idivl
mov
pop
mov
mov
add
mov
push
push
ljmp
mov
jne
pushf
les
call
cmp
add
ret
clc
ja
repz
add
mov
jle
cmpb
sbb
add
js
sub
jl
inc
pop
add
inc
sub
adc
push
test
lea
cmp
mov
js
inc
pop
sbb
jl
pushf
sbb
ljmp
lea
cwtl
pop
fsub
test
pop
or
xor
sbbb
mov
aaa
imul
insl
or
jl
fwait
cmpsl
jmp
mov
sbb
sbb
cmp
jns
faddl
inc
cmp
repz
aaa
mov
loope
loope,pt
rclb
addl
arpl
xchg
add
inc
mov
jbe
mov
lret
int
lret
repnz
dec
stos
fs
or
pop
jmp
iret
push
ret
mov
lcall
es
pop
insb
mov
sub
sub
mov
in
std
in
arpl
mov
sbb
out
mull
loope
idivb
push
cmpsl
and
inc
and
mov
jne
inc
mov
jg
test
push
lock
test
mov
adc
sbb
dec
adc
andl
and
mov
jmp
pop
loope
out
arpl
in
and
xor
gs
jnp
out
pushf
pop
cwtl
push
scas
sbb
jb
dec
dec
inc
xor
aaa
xchg
mov
pop
lahf
jne
jle
fiaddl
in
incl
movsl
jge
cld
daa
repz
jl
jl
mov
inc
clc
push
cmp
testb
testb
sbb
fwait
incl
push
cmp
push
jbe
cmpsb
or
gs
dec
cmpsb
push
stos
mov
jp
stc
jbe
sbb
movsb
jl
and
imul
daa
sti
jecxz
jno
jb
fwait
sub
push
lods
les
shl
insb
sti
divl
jg
jg
pushf
pop
jecxz
jle
clc
jae
addr16
test
add
push
mov
movb
stos
std
pop
and
push
add
add
jns
and
cld
pop
shrb
xlat
movsb
jo
push
fcmovb
dec
mov
lret
movsb
outsl
test
fsubl
jge
sub
pop
lcall
xor
push
push
sub
aaa
daa
ja
andl
jg
addb
ja
loope
mov
sub
std
push
in
mov
ss
add
lea
stc
aad
decl
or
xchg
mov
xchg
push
cmp
sahf
movsl
push
adcb
add
imul
ret
dec
jnp
loope
ljmp
mov
cld
out
je
rcrl
clc
std
loope
jnp
insb
out
inc
fwait
sub
gs
and
dec
std
outsl
pop
hlt
loope
in
std
rcll
jne
test
or
mov
lret
sbb
stc
add
sub
jg
mov
sbb
jbe
jl
inc
push
cmp
dec
cmp
call
sbb
add
mov
sahf
or
and
pop
pop
adc
jns
add
xchg
ja
and
xchg
cltd
inc
or
jns
shrl
pop
test
push
cld
test
fidivrl
jae
std
jmp
xor
xchg
jp
aad
clc
adc
jl
pop
pop
push
xlat
cmp
orb
adc
stos
or
stos
cld
xchg
xor
push
push
sub
pop
sarl
sbb
jb
mov
sub
lret
jne
xor
repz
jns
orl
out
subb
xchg
cmp
cmp
jae
addb
cmpb
push
xchg
cmp
lods
push
sbb
lret
push
pop
movsb
lea
jg
or
add
jb
inc
js
and
jle
jo
sub
enter
call
push
je
pop
add
push
or
sub
pop
jl
ss
inc
mov
mov
js
test
lock
or
enter
add
mov
movl
cli
add
xchg
dec
inc
add
mov
jo
mov
push
jno
xchg
decl
or
inc
hlt
inc
or
in
and
insl
sub
sbb
test
and
push
fstpl
sub
push
pop
insl
jne
inc
insb
mov
sub
add
push
jg
add
xchg
lds
cmpl
test
jecxz
jle
sti
test
fcomps
pop
fimuls
sub
out
or
cmp
inc
push
mov
inc
cmp
mov
pop
fldl
mov
add
mov
sbb
sub
outsl
mov
or
gs
in
shrb
adc
inc
push
jb
inc
jecxz
xchg
xor
mov
xchg
pop
aam
pop
out
stos
mov
dec
sbb
ret
nop
loop
cwtl
repnz
jae
std
mov
aam
pop
ret
add
sbb
jne
mov
add
pop
cmp
add
dec
sbb
ret
fistpl
mov
jno
ret
lahf
adc
adcb
sbb
mov
push
fstl
and
rol
je
leave
xchg
cmpsl
or
mov
add
mov
in
mov
rorl
jge
xor
xor
in
mov
xchg
inc
in
jecxz
and
jne
cld
sbb
cltd
add
mov
mov
xchg
push
rcrl
roll
pop
cwtl
pop
in
mov
dec
xchg
test
inc
data16
test
dec
add
mov
sub
jle
std
lcall
inc
mov
mov
fs
shrb
cmp
icebp
xlat
in
ret
cld
adc
mov
orb
dec
loopne
cmp
ds
mov
xchg
jge
cmp
inc
adc
addr16
loope
ret
fidivrs
ljmp
dec
aam
jg
cmp
mov
mov
jg
jp
rcr
rcr
in
and
push
shll
dec
cmp
ja
test
mov
imul
jae
loope
push
je
mov
imul
repz
push
jnp
ja
filds
ss
fadds
int3
xchg
int
push
mov
lahf
push
aam
js
fimull
les
gs
mov
decb
mov
imul
rorl
dec
icebp
mov
cwtl
sbb
mov
repz
ret
test
ret
push
fistl
jbe
mov
jg
les
sarl
ret
enter
popf
sbb
fstpl
lock
aaa
out
sbb
mov
push
out
mov
cwtl
pop
jmp
test
aam
jle
out
loopne
pop
rcr
mov
sub
push
mov
or
sub
pop
inc
dec
push
inc
push
aaa
ret
jbe,pn
pop
inc
mov
lcall
push
insb
inc
cmp
inc
mov
and
je
popa
push
push
test
stos
mov
lods
inc
pop
mov
xrelease
ret
fadd
dec
sub
cli
push
or
pop
and
mov
ret
jle
lret
in
mov
or
lcall
jge
ret
shrb
mov
mull
cwtl
mov
test
in
enter
mov
rcrb
adc
int
test
jle
dec
mov
cmpb
ja
movsl
jp
mov
adc
rcl
loop
dec
stc
push
ret
sarl
clc
mov
mov
xor
loopne
mov
cmp
rcrb
dec
mov
popa
jb
ret
push
add
mov
mov
dec
mov
clc
icebp
or
hlt
dec
test
outsb
addr16
inc
mov
mov
jnp
jg
js
int
jge
adc
je
lods
or
popf
fdiv
adc
roll
dec
repnz
out
mov
pop
mov
mov
push
fcoml
mov
mov
sub
jo
sub
push
enter
negl
loop
bound
jmp
sbb
adc
mov
lock
cmc
in
aad
test
out
inc
mov
lock
cmp
int
mov
imul
mov
arpl
leave
mov
mov
scas
loop
bound
lret
fincstp
mov
clc
int
cltd
sbb
pop
pop
cmp
jbe
inc
push
in
jecxz
repz
jp
jecxz
imul
in
mov
scas
mov
pop
sti
inc
fstpl
rorb
mov
mov
and
and
mov
jmp
mov
mov
test
mov
test
sbb
mov
jg
aas
mov
ficomps
int3
mov
push
pop
mov
add
ret
pop
lcall
mov
test
xchg
sub
cmp
jnp
cld
in
jne
imull
shlb
jmp
add
arpl
pushf
xor
es
xchg
fidivrs
jecxz
mov
sti
push
aaa
xchg
scas
sahf
mov
push
sbb
pop
cmc
inc
cmp
mov
es
pop
xor
out
cmp
mov
cmp
pop
xchg
movl
out
xor
cmp
stos
or
aaa
ret
movsb
out
xchg
popa
sbb
pop
out
ret
mov
int
andb
sub
mov
or
cmp
adc
shrb
mov
mov
nop
enter
lock
sub
mov
lods
fstps
stos
cli
lds
fdivr
sub
push
cmp
mov
pop
bnd
ds
cmp
cmp
dec
mov
add
ds
mov
jge
inc
sbb
jge
aas
and
sub
mov
sbb
pushf
mov
inc
stc
jmp
mov
ss
push
das
mov
sbbb
ds
push
mov
popf
jne
es
jmp
xchg
out
sbb
cmp
pop
pop
pop
push
lods
popa
loopne
int3
pop
mov
mov
push
dec
movsb
in
test
mov
jmp
mov
lcall
test
mov
pushf
lgs
pop
daa
inc
cwtl
pop
inc
jp
cwtl
call
push
int
lods
das
push
jmp
sub
cltd
jo
negb
lods
sbb
xchg
mov
mov
pop
fimuls
inc
mov
sbb
ficompl
imul
sub
rcrl
dec
in
lahf
enter
ja
xchg
shl
fcoml
mov
cmpb
sub
test
xlat
std
add
ret
fmull
pop
in
test
mov
leave
imul
stos
mov
jnp
adc
inc
pushf
adc
sub
pop
add
lret
cmp
xor
fisubrl
loopne
push
lea
ret
iret
cmp
int
cmp
jo
dec
push
dec
mull
jae
xlat
inc
daa
in
inc
fldl
addl
in
ljmp
mulb
fsts
and
addr16
arpl
je
and
outsl
int3
add
sub
jae
fimuls
stc
arpl
mov
lcall
fwait
repz
mov
js
xchg
cmp
mov
add
xchg
dec
dec
pop
jle
ret
ja,pt
lret
or
out
stos
mov
or
mov
lret
lretw
in
mov
xlat
daa
jge
and
xchg
popa
fiadds
dec
sbb
ds
dec
jg
adc
mov
cmp
push
push
shrl
xor
or
movsl
xchg
or
and
mov
aas
lret
aaa
jl
xchg
mov
mov
dec
push
mov
mov
lret
idivl
xor
enter
rolb
adc
xor
out
jne
ljmp
pop
ljmp
push
fwait
jae
repnz
jo
std
insb
push
les
push
or
test
shlb
call
mov
mull
xor
lea
mov
mov
pop
or
mov
push
lret
mov
inc
mov
mov
adc
lea
dec
jne
stos
fucomip
xor
test
pop
sbb
mov
and
stos
popa
jb
lds
push
mov
out
and
stos
mov
in
in
jle
mov
lea
jne
in
xchg
aaa
sub
je
jnp
mov
ret
imulb
adc
mov
dec
insl
subb
dec
sbb
movsl
dec
inc
sti
inc
pushf
leave
pusha
loop
sub
mov
sub
or
sub
push
rcll
pop
fcomp
imul
loopne
rcll
lods
xor
push
lret
or
insb
test
fdivp
push
sarl
mov
popa
pop
stos
leave
stc
imul
mov
nop
je
or
xor
adc
xchg
test
into
cltd
mov
int3
aas
mov
lods
push
mov
stos
inc
lods
adc
popf
xor
mov
push
push
jge
or
jae
lahf
dec
lea
push
mov
aad
xchg
fnstsw
ds
and
mov
mov
push
mov
lock
movsl
lock
add
stos
pushf
aas
les
sub
negb
repz
mov
loope
std
sahf
lock
xor
cmp
or
cmp
xchg
rorl
fidivl
enter
enter
aam
mov
mov
inc
pop
mov
or
ret
das
mov
push
into
mov
lds
aam
cs
test
xor
ret
xor
jns
mov
mov
aas
mov
enter
lret
add
lods
das
cmp
adc
lcall
dec
push
mov
aaa
adcl
movsb
mov
inc
xor
fldcw
mulb
imul
shlb
sub
inc
jmp
popf
daa
mov
jmp
lcall
xchg
mov
lock
dec
lret
dec
aam
mov
shrl
mov
iret
jmp
or
jae
mov
mov
cli
mov
adc
jne
into
int
cltd
aam
inc
lahf
fcmove
sti
cmp
rolb
add
add
mov
mov
rorb
arpl
push
mov
sbb
lods
popa
lahf
ret
xchg
mov
into
inc
jecxz
push
mov
xchg
push
movsb
loopne
out
xchg
jbe
mov
inc
xchg
mov
jge
mov
jnp
mov
out
pop
mov
dec
stos
cmc
or
loop
insl
outsl
xor
pop
insb
mov
out
xchg
out
jae
cltd
mov
xchg
mov
stc
in
inc
out
xchg
mov
sbb
cmpsl
dec
mov
and
inc
iret
sbb
xlat
imul
and
push
iret
scas
adc
into
pop
notb
iret
arpl
in
into
mov
movsb
into
imul
push
lock
lret
fs
xor
and
xor
loope
jge
out
shll
cmp
cmpl
mov
jl
inc
mov
scas
mov
sti
int
inc
test
shlb
inc
mov
fnstcw
mov
shrl
mov
into
mov
jae
nop
out
gs
pusha
out
sub
add
adc
addr16
out
pop
out
sub
jnp
mov
cmpsb
push
cmp
inc
xor
or
adc
inc
icebp
inc
jmp
stos
addr16
push
push
scas
int
clc
scas
xchg
sub
scas
cmp
scas
ror
subb
mov
scas
and
imul
test
push
ljmp
daa
into
jmp
mov
xor
movsb
mov
iret
sub
add
jecxz
ret
int
xchg
loopne
scas
add
std
push
mov
mov
je
stc
stc
and
mov
addb
nop
std
push
add
leave
sbb
mov
or
sub
adc
shr
mov
shr
pop
fcmovb
in
adc
out
lahf
and
aam
cltd
and
iret
and
push
jbe
mov
push
xchg
int
sahf
lock
daa
stos
into
fists
dec
shrb
xlat
aad
add
je
mov
cs
imul
pop
jle
lods
icebp
dec
lcall
dec
push
lods
stc
sub
lods
xchg
dec
jb
sbb
scas
ret
jle
adc
mov
aam
lods
sbb
and
or
inc
mov
stc
or
outsl
pushf
fcmovnu
mov
mov
mov
nop
mov
cmp
add
sub
pop
in
jne
jmp
pop
hlt
icebp
ret
ret
jnp
or
mov
int
dec
test
fldln2
mov
cmp
mov
inc
call
scas
ret
inc
dec
push
int3
sarl
lret
xchg
mov
sbb
ret
mov
aam
adc
and
push
mov
in
pusha
mov
pop
lds
jmp
adc
sub
aaa
lods
cmp
or
in
mov
mov
rcll
dec
hlt
mov
cmp
sub
das
lods
sub
xchg
xchg
xor
inc
mov
into
inc
mov
jno
sbb
xchg
mov
adc
nop
dec
xchg
inc
mov
faddp
inc
outsb
jle
outsl
repnz
jae
shl
shr
sub
rcll
imul
pop
jmp
shll
mov
rorb
idivb
sub
cmp
sar
sub
int
mov
ret
fsubr
lods
cmc
addl
sarl
ljmp
mov
jns
or
aad
or
int3
xchg
xchg
subl
mov
jecxz
fisttpl
imul
dec
inc
mov
out
scas
and
es
pop
pop
in
stos
mov
lods
jae
pop
outsb
cmp
nop
mov
add
lods
sbb
xchg
aaa
and
call
je
mov
loope
jmp
sub
icebp
lret
loop
jmp
lods
cwtl
pop
ljmp
jno
lds
lods
loop
outsb
push
mov
push
push
pop
fildl
jb
leave
sahf
and
rorb
mov
movsl
js
jmp
fs
xchg
cmp
jecxz
popfw
les
pop
icebp
fidivrl
popf
hlt
add
sub
mov
mov
leave
scas
pusha
lock
inc
xchg
loope
int
leave
mov
dec
push
sti
mov
cmp
cmpsl
lcall
stos
xchg
inc
jg
mov
pop
aad
lea
ror
leave
xchg
into
stos
push
stc
enter
movb
pop
add
mov
not
mov
rcrb
pop
stc
fcoms
cmpsl
jb
xchg
fbstp
int3
imul
sti
ljmp
sbb
imul
shl
data16
jno
mov
sar
sub
cwtl
in
dec
outsl
cs
dec
inc
jmp
cs
pop
loop
addr16
lds
add
sbb
fists
push
ror
jmp
shlb
in
lods
sub
arpl
stos
imul
lret
cmp
cmpsl
and
fwait
pop
inc
insl
cltd
cmc
scas
adc
jecxz
or
inc
addl
je
adcl
lea
sbb
mov
hlt
dec
fwait
minps
cltd
add
outsb
xchg
dec
ja
mov
pop
push
jmp
loopne
lret
mov
lret
xlat
add
xchg
ja
rcrl
imul
sbb
fst
addr16
jns
and
mov
mov
xlat
jb
jmp
xor
jmp
stos
fs
loope
pop
jne
xor
mov
test
inc
aam
in
cwtl
mov
pop
inc
lods
mov
sahf
push
test
shlb
lds
jp
inc
cmpsb
add
xlat
dec
sbb
pushf
add
cmp
lahf
int
cltd
push
mov
xchg
mov
and
pop
imulb
sub
test
cmp
dec
mov
sbb
rcll
cltd
mov
sbb
inc
fsub
in
int
sub
das
rcrl
mov
inc
loopne
ds
loopne
lahf
cltd
fstpl
add
rol
lock
out
aam
sbb
es
pop
or
dec
mov
inc
call
push
mov
loopne
test
pusha
jnp
ja
fsubl
pop
cmpsb
es
rcl
dec
gs
dec
adc
sub
adc
shrb
test
dec
popf
movsb
cmc
xchg
pop
mov
icebp
int3
imul
xchg
xabort
jno
add
lds
xchg
jge
pop
xchg
or
jno
test
lea
xlat
mov
frstor
pop
xor
fwait
adc
cwtl
leave
dec
inc
xchg
gs
xchg
xchg
xchg
xchg
xchg
dec
mov
in
popf
push
sbb
out
mov
in
sub
call
ja
adc
inc
rorb
mov
pushf
in
lds
shrl
jne
add
scas
jmp
pop
shr
pop
arpl
mov
pop
pop
leave
cmc
mov
shl
popa
add
mov
es
mov
mov
cmp
sbb
mov
and
pop
pop
xchg
cmpsl
test
leave
pusha
inc
ret
sbb
aad
push
mov
in
jns
mov
mov
cmpsb
insb
dec
scas
das
pop
add
mov
push
lret
lcall
xor
sub
mov
inc
adc
xchg
mov
adc
mov
jno
inc
test
sub
iret
dec
sub
inc
int
jno
shlb
int
lods
ror
and
mov
int
addr16
lret
leave
mov
dec
movsb
scas
push
ljmp
bound
pop
scas
pushf
xor
mov
pusha
jl
rorb
lods
cmp
push
scas
mov
lods
ret
scas
dec
jg
iret
cs
mov
iret
push
jg
int
jg
iret
dec
inc
scas
rcr
inc
pop
int
inc
iret
push
mov
int
pop
enter
int3
int
jl
iret
dec
cmp
scas
loopne
rep
push
loop
aam
xorb
jl
stos
fiaddl
and
or
mov
mov
adc
lock
mov
in
xor
cmp
cmp
aad
jl
insl
into
ds
loope
js
imul
scas
loopne
les
jl
jle
sbb
into
lret
scas
add
mov
scas
push
clc
cmp
xchg
or
int3
scas
nop
xchg
jecxz
sbb
pop
scas
in
cmp
and
scas
ljmp
iret
cwtl
pop
iret
jo
inc
shll
call
cld
lret
jbe
fs
test
cld
leave
bound
aam
dec
or
mov
shrb
add
add
leave
dec
pop
pop
lret
out
mov
jge
push
and
mov
fistpll
mov
push
stos
fsubs
lods
jp
sub
adc
lods
xchg
fists
xchg
sbb
in
xchg
or
dec
aad
imul
cmpsb
into
lock
out
sub
sub
cmp
imull
jns
mov
pop
into
into
insb
insl
out
es
mov
xlat
jno
mov
mov
sub
jge
mov
aad
ret
push
mov
push
fcompl
inc
out
imul
jno
xchg
mov
mov
lods
leave
push
inc
arpl
sub
ret
or
cmc
std
cmpsb
lret
xor
mov
xchg
push
cmp
xor
pop
das
adc
and
addl
daa
hlt
sub
sub
icebp
mov
cmpsb
rcll
shlb
clc
cmp
mov
sbb
rcl
sub
mov
push
test
lret
stos
xlat
cmp
mov
and
sarl
sub
jns
sub
xchg
out
push
or
pop
orl
push
sbb
stos
mov
orb
into
pop
push
mov
data16
je
push
les
adc
push
aas
push
les
popa
dec
daa
inc
pop
insb
lock
lods
insb
pop
xchg
sub
xlat
movsl
mov
rclb
loopne
push
and
inc
xchg
test
loop
loope
inc
xor
xor
sub
imul
push
cmp
ss
push
xchg
cmp
popa
pop
fmuls
andb
stos
retw
xor
push
add
sbb
aas
les
push
hlt
push
or
sbb
sti
and
mov
mov
out
or
xchg
jae
sbb
jb
fldenv
dec
inc
sub
loope
dec
test
fisubrs
stos
outsl
jge
test
xorl
cmp
sbb
mov
jae
jno
push
sbbb
and
scas
insl
jmp
jb
hlt
jbe
leave
mov
jmp
or
add
nop
mov
jecxz
add
stos
xchg
jg
icebp
imul
jmp
repnz
mov
push
js
mov
flds
das
sahf
cmp
dec
mov
mov
xchg
std
pop
jnp
dec
in
mov
adc
push
mov
les
aas
xor
add
mov
sti
jge
pusha
push
out
fwait
lds
mov
sbbl
adc
inc
cmpsb
js
mov
mov
test
les
pop
and
ret
bound
gs
fstpt
xchg
and
lods
daa
ret
ficoms
adc
int3
outsl
xchg
jne
sub
adc
fs
mov
mov
pop
rolb
stos
jae
lods
mov
imul
and
mov
fmuls
cmp
push
ficoms
fnsave
or
sub
mov
dec
enter
sbb
lahf
jp
cmp
pop
imul
mov
sbb
push
mov
pop
lods
xor
shld
fstps
jecxz
scas
or
sub
cmp
xchg
push
xor
xchg
out
cli
xchg
push
aam
test
std
jo
cmp
mov
cmpsb
jnp
mov
jns
and
int
jge
pop
lods
mov
inc
mov
mov
icebp
cwtl
push
bound
mov
sbb
sub
out
insb
pushf
mov
test
mov
inc
pop
inc
pop
dec
loop
ljmp
mov
xchg
into
dec
int3
cli
daa
clc
adc
or
push
jecxz
cmc
xchg
test
cmpsb
inc
sti
mov
movsl
rcl
xchg
xor
nop
data16
inc
add
inc
xor
add
push
aad
adc
jecxz
xor
cltd
xchg
shll
imul
or
xlat
add
xor
subl
xchg
notl
push
mov
mov
pusha
pop
cmp
enter
dec
fcompl
loop
pop
push
imul
push
lds
popa
jecxz
sub
mov
out
xor
xlat
pop
dec
loopne
add
hlt
int3
or
lds
call
xor
data16
rcll
adc
call
inc
mov
sti
pushf
sub
push
clc
lret
lds
mov
sub
xchg
sarl
inc
xchg
incb
data16
lahf
js
dec
sub
or
mov
or
xor
fnsave
jmp
incl
push
loope
xchg
or
push
dec
pusha
pop
cmp
and
mov
pop
pop
mov
pop
push
xor
jne
or
or
add
xchg
push
stos
iret
lret
pop
and
sub
mov
adc
adcb
cltd
inc
pop
add
xor
cmp
inc
push
adc
test
loopne
movsl
dec
dec
jecxz
jge
call
ret
lss
seto
pop
outsl
arpl
mov
cmc
cltd
cwtl
pop
mov
sub
out
push
mov
dec
roll
call
out
jl
les
adc
loope
inc
outsb
js
inc
push
stc
mov
call
enter
inc
push
ds
stc
rcrb
push
in
jmp
movsl
push
xchg
cmc
pop
sub
pop
aad
mov
shr
add
mov
and
lret
jno
movsb
dec
loope
inc
mov
jns
jmp
cmp
imul
and
sbb
jns
stc
jne
jle
fbld
ss
scas
stos
pop
shrb
bound
and
stos
inc
push
scas
outsl
inc
rclb
out
pop
xchg
cltd
pop
idivb
adcl
fsubrl
xor
dec
xchg
mov
test
jo
shll
inc
rcrl
fs
cmpb
mov
leave
jle
or
fnstenv
addl
imul
pop
rcrb
mov
ret
dec
cmpsb
out
sti
mov
mov
rorb
pop
ja
int3
shlb
fwait
and
xchg
fisubrl
lods
fstp
push
in
sbb
fyl2x
popa
and
roll
fstps
jg
movsb
push
pop
cltd
insl
inc
aad
dec
push
inc
call
inc
xor
sub
arpl
mov
dec
adc
sbb
decl
push
inc
in
clc
inc
mov
xchg
pushf
ficoms
aam
xorl
xlat
lea
or
sub
popf
daa
loope
rorb
outsl
sbb
mov
xlat
mov
popa
out
and
sbb
les
mov
adc
pop
std
push
xor
sub
outsb
ljmp
lret
flds
repnz
aas
jo
inc
ret
sarl
mov
pop
xchg
pop
mov
sbb
xchg
jb
movsl
sbb
and
aam
rol
push
enter
daa
push
out
pop
in
mov
inc
jmp
call
xchg
lock
adc
cwtl
push
xchg
jl
adc
push
shrb
pushf
pop
lret
gs
pop
inc
mov
adc
mov
push
lock
lcall
fwait
andb
scas
movsb
xchg
dec
cs
popf
cmp
xor
in
les
jae
or
sahf
rcrb
sbb
jae
dec
popa
cmc
mov
lahf
dec
lods
pushf
push
sub
fstp
and
into
adc
sub
sub
mov
xor
push
lahf
dec
jne
pop
add
xor
pusha
test
push
add
sbb
nop
movsb
loope
call
adc
cmpsb
shlb
add
xchg
ja
inc
mov
jbe
je
xchg
and
push
push
enter
add
sub
pop
sarb
loope
mov
loope
pop
inc
fsubrl
aas
adc
mov
pop
pushf
pop
mov
cmp
loope
push
mov
sub
movb
mov
push
pushf
outsl
dec
fcomps
mov
ret
std
iret
mov
sti
dec
fcomps
inc
cwtl
mov
mov
scas
mov
test
pushf
adc
pushf
rorl
loopne
lret
mov
fcompl
aad
adc
fstpl
ror
loopne
cmp
mov
iret
pop
loopne
mov
data16
dec
adc
movsl
inc
outsb
loope
int
fdivl
test
sub
pop
loopne
push
sahf
loopne
inc
pop
fdivl
dec
mul
imul
fisttpll
sbb
fstl
rcll
xchg
ss
sahf
sbb
scas
mov
pop
cmc
inc
pushf
adc
mov
cmpsl
cmp
popf
mov
push
mov
lods
out
in
popf
adc
iret
adc
sahf
sbb
push
fwait
scas
mov
mov
aad
mov
cmpsl
sub
popf
cmp
or
das
repnz
popf
rcr
fwait
jns
pop
fbstp
and
loope
in
loope
call
xchg
loop
and
mov
or
ljmp
xchg
loope
fisttpl
mov
fstpl
and
loope
jmp
fistps
lock
fcmovnbe
loope
das
pop
fildll
push
pop
sbb
loope
out
in
mov
frstor
in
fucomi
xor
popf
jmp
mov
loop
lahf
icebp
icebp
jne
test
adc
mov
das
loop
movsb
lret
jmp
movsb
xchg
sbb
mov
sbb
cmp
sahf
dec
mov
cltd
aas
mov
pop
push
mov
movsl
loopne
mov
dec
pushf
stos
loope
inc
mov
dec
mov
mov
xor
adc
insl
jo
fidivrl
sahf
cmpsl
shl
push
shll
repz
sub
cmp
mov
imul
pusha
push
push
push
mov
jle
jle
push
test
mov
xchg
imul
daa
dec
cmp
xchg
repz
out
jb
lds
pop
xor
cmp
fcompl
cmp
fcompl
mov
fbstp
dec
lcall
outsb
popf
insl
pop
ret
je
jno
test
test
jae,pt
rcr
lock
mov
xchg
mov
mov
divl
add
stos
mov
mov
mov
lcall
mov
mov
jl
mov
pop
rorl
lahf
push
roll
inc
cmp
movsb
cmpsl
add
lahf
add
mov
repnz
jnp
ret
xor
xchg
fldcw
inc
mov
js
xchg
loope
cmp
inc
aad
mov
mov
mov
xchg
adc
mov
fcos
in
mov
and
sti
fwait
out
xor
sbb
add
rorl
mov
xchg
jle
ror
mov
jl
sbb
mov
loopne
ds
sarl
loope
ja
movsl
popa
and
inc
pop
sub
aas
aas
leave
repnz
flds
fstpt
ljmp
data16
cmc
add
int
ljmp
xchg
xor
insb
imul
and
inc
inc
jne
jecxz
loop
add
mov
pop
mov
movsl
or
mov
sub
cmc
sbb
add
push
scas
imul
push
cmp
insl
sub
fnsave
test
pop
cmp
inc
fistps
repz
fnstsw
int3
in
jecxz
jg
test
mov
push
rolb
iret
mov
or
jecxz
mov
movl
mov
mov
sahf
les
push
mov
and
mov
sub
mov
xchg
bound
ret
sbb
lret
fcomi
cltd
pop
leave
repnz
aam
dec
pop
rcrb
outsb
sti
int3
cmpsl
inc
addr16
mov
enter
lds
push
jg
test
dec
fwait
mov
scas
ret
idivb
adcl
sbb
lods
mov
xchg
stos
cmp
negl
addps
ret
mov
mov
adc
jp
fiaddl
jne
fcomps
sbb
roll
mov
inc
int
nop
repz
lea
mov
sub
mov
xchg
les
cmpb
sbb
jae
cmp
inc
jg
mov
fwait
fwait
scas
cmpsl
mov
aas
je
test
mov
repz
shrl
xlat
fcmovne
addr16
fsts
fdivrs
imul
rcrl
mov
lds
mov
leave
lret
bound
ret
pop
lods
xlat
rcll
mov
popf
outsb
dec
mov
loope
push
mov
mov
mov
mov
out
sub
stos
in
repz
xor
xchg
mov
fcmovnu
outsl
test
sti
je
xlat
mov
xchg
mov
cmpl
sti
cwtl
cmp
xchg
pop
dec
js
movl
hlt
dec
mov
ds
sbb
xchg
mov
hlt
cmp
arpl
nop
adc
and
mov
push
and
cmpsb
mov
cmpsl
cmpsb
pop
and
cmc
adc
xlat
cmp
jmp
jnp
xchg
inc
sbbl
out
fcmovnb
jg
push
leave
test
insl
test
movb
iret
jae
xlat
or
sti
mov
or
mov
mov
mov
xchg
mov
cmpl
mov
mov
cmpsb
xchg
or
xor
sbb
dec
stos
add
arpl
sti
cmpsl
nop
xlat
jmp
xorl
xchg
or
icebp
jle
stos
or
xor
ja
pop
das
or
mov
sub
sarl
add
xchg
mov
cmp
test
aaa
pop
movsl
bndldx
rcrl
test
jge
cmpsb
xchg
pop
dec
test
pop
aas
movsl
shll
cmp
dec
popf
cmp
fxtract
push
xlat
and
inc
aam
shl
lea
enter
xchg
adc
mov
sbb
lds
mov
jg
cmp
push
mov
out
mov
pop
mov
ja,pt
leave
sub
repz
lds
leave
dec
push
mov
mov
push
xchg
int
mov
sub
mov
xchg
mov
mov
jecxz
fsubs
fists
fisubs
push
adc
in
push
cmpsb
popf
sbb
cwtl
fcomps
stc
leave
and
outsb
mov
cmpb
pop
std
mov
loop
mov
sub
movsl
scas
and
cmpsl
imul
repz
lcall
push
mov
call
idiv
sub
jg
mov
inc
mov
cmp
add
cmp
cmpl
mov
iret
decl
pop
pop
aas
lds
push
cmp
cltd
ficoms
popa
inc
mov
pop
movsl
or
fwait
inc
pop
test
xor
test
fnstenv
rep
daa
dec
mov
fbstp
call
jnp
xchg
ret
int3
sbb
gs
not
leave
push
out
insl
dec
repz
les
into
enter
enter
les
fwait
pop
mov
ffree
mov
jg
lret
sarl
mov
inc
mov
test
int
movsb
adc
test
outsl
ror
pop
inc
dec
movsb
stos
dec
xlat
fdiv
inc
pop
aam
sar
aam
shlb
jmp
push
jae
aaa
cmp
enter
leave
sub
push
les
iret
pop
enter
les
fnsave
mov
aas
cmp
xchg
mov
inc
cld
pop
mov
flds
inc
lret
cmp
mov
sar
inc
cmpsb
adc
aad
fstps
push
and
repz
mov
cmpsl
add
aam
jecxz
lret
sbb
lods
inc
mov
ret
xlat
enter
out
or
lahf
fstpt
cmp
push
mov
xor
mov
push
pop
mov
dec
mull
sub
repnz
dec
sub
movsl
mov
xlat
movsl
dec
sub
cmpsl
aad
lcall
jmp
mov
aas
sub
rcl
and
fldenv
xlat
inc
lock
leave
imul
mov
out
and
into
lds
push
ret
cmc
loop
mov
icebp
and
mov
and
mov
jecxz
mov
lock
test
jge
sbb
icebp
push
ja
sub
stos
cmp
ja
mov
lcall
rol
pop
xchg
sarl
cmp
add
sbb
add
jne
mov
dec
rolb
js
rclb
popf
cmp
lea
lret
pop
mov
pop
inc
mov
add
or
sbb
push
stos
movsl
repz
mov
movsb
cmp
stos
adcl
cmpsl
xchg
mov
stc
imul
gs
sar
clc
lret
test
jmp
repz
leave
sarb
insb
rcl
icebp
dec
rorb
mov
lret
lret
mov
jg
mov
mov
mov
stos
add
mov
stos
outsl
out
or
xlat
mov
inc
and
xchg
mov
stos
sub
stos
popf
shr
shrb
and
jnp
out
and
lret
mov
or
adcl
sarb
push
pusha
shrb
shlb
sti
fldenv
int3
mov
cmp
dec
fstps
cmpl
dec
stos
xchg
jbe
lret
xchg
pop
mov
popa
push
mov
mov
cs
int
mov
aaa
sub
push
push
sbb
shlb
push
out
in
outsl
int3
daa
add
jns
imul
nop
ret
fcmovu
lret
jg
mov
jle
mov
scas
or
xchg
stos
stos
insb
les
stc
or
loopne
dec
imul
int3
mov
stos
pop
jmp
mov
shll
rol
and
lret
leave
out
fcmovne
lret
iret
shll
stc
shr
push
js
push
cmc
not
jmp
xchg
std
lret
push
add
mov
xacquire
jne
mov
add
mov
xchg
pop
sti
lods
mov
mov
add
xchg
mov
pop
xor
jne
mov
rcrl
sti
cmp
cmp
inc
int3
add
leave
dec
aaa
jnp
mov
rcll
pop
adc
aad
int
add
leave
fcmovnu
inc
enter
mov
fucomi
mov
xor
mov
adc
lods
addr16
test
sub
mov
loope
mov
aad
lods
stc
mov
sbb
mov
nop
aam
aas
daa
shll
call
mov
test
mov
enter
aam
dec
stos
aam
dec
lcall
imul
inc
iret
mov
enter
xchg
popa
xchg
aam
add
ljmp
test
mov
call
xchg
in
cltd
cmp
add
jae
xchg
scas
adc
aam
sub
rolb
ret
mov
notl
scas
nop
int
inc
sbb
in
xor
ficomps
rcr
cmp
ror
inc
xchg
mov
jge
int3
sarl
lods
push
add
or
stc
adc
pop
aad
mov
sbb
dec
inc
inc
scas
xlat
mov
rcrb
pop
hlt
cmpsl
fldl
mov
and
cli
rcr
and
int
push
mov
lods
imul
scas
gs
xchg
int3
and
test
xchg
icebp
lret
jge
xor
das
adc
andl
lret
lret
jg
fcoms
rcl
dec
mov
arpl
mov
push
lock
mov
in
pop
aam
in
adc
icebp
dec
mov
lock
fsubr
insl
mov
mov
jmp
push
in
jae
mov
xlat
inc
lods
icebp
jno
sbb
stc
in
fnstsw
and
jne
ror
pop
int3
arpl
xor
xchg
int3
imul
jecxz
cmc
fistpll
scas
adc
inc
aam
ljmp
andb
sahf
adc
cmc
sahf
into
je
sahf
mov
mov
aam
xchg
sahf
push
test
lahf
mov
dec
filds
adcl
nop
scas
fwait
cmpsl
push
das
and
pop
scas
out
cmp
jmp
lods
in
and
scas
and
scas
jae
xchg
mov
fidivrl
mov
out
lea
lret
imul
outsb
into
or
enter
lcall
or
mov
iret
push
lret
xor
out
addl
scas
shll
adcb
pop
scas
and
add
scas
sysret
push
scas
stos
adc
scas
jae
pop
scas
adc
xor
push
iret
popf
xor
scas
aaa
jg
sar
lret
imul
dec
xchg
pop
dec
adc
into
sub
clc
into
rorl
rorb
mov
add
adc
xchg
sahf
cmp
rorb
pop
int
mov
add
sbb
ret
mov
ja
lods
scas
xchg
pusha
cmp
dec
mov
xchg
mov
mov
leave
scas
addr16
mov
fildl
shrb
pushf
shlb
mov
shr
xchg
pop
int
gs
int3
addr16
out
mov
push
iret
in
xchg
aad
jne
or
cmp
mov
icebp
ja
mov
sub
scas
mov
sub
lods
add
inc
sub
jge
lcall
lods
mov
add
lret
call
lds
mov
iret
dec
xor
int
jae
iret
xchg
imul
imul
int
mov
iret
jno
call
int
cli
repz
mul
mov
jg
add
std
sub
jmp
jo
lods
or
mov
pop
mov
adc
xchg
je
xchg
xchg
push
aaa
sbb
sbbl
int
fisttps
pop
fstpt
rcrl
and
or
jns
iret
sub
nop
int3
xchg
call
or
fbld
int3
cltd
xor
int3
sub
and
jb
mov
pop
mov
in
push
mov
sbb
mov
adc
lods
fwait
in
lods
xor
adc
mov
inc
pushf
lods
cmp
lods
decl
mov
int3
test
repnz
int
int3
mov
ret
inc
mov
dec
push
lret
dec
ror
lret
push
leave
mov
int3
push
push
fdivs
mov
leave
mov
rorl
test
push
pop
mov
push
cli
cmpsb
das
fists
jecxz
adc
inc
xor
push
subb
cwtl
cmpsb
rolb
ds
sbb
sbb
or
sbb
xor
xor
movsb
ja
ret
adc
in
inc
fisttps
insl
pop
inc
nop
out
sub
in
or
push
in
jmp
sub
daa
je
xorb
ffree
scas
lcall
in
xchg
and
dec
test
mov
add
mov
sub
sub
jno
je
gs
add
mov
push
push
outsl
add
and
add
mov
loop
dec
inc
xlat
push
push
loopne
sbb
test
popa
sub
sub
popa
dec
ficoml
jge
inc
sti
xchg
add
dec
sub
bound
aam
push
push
adc
pop
jmp
push
mov
test
rorl
add
pop
or
mov
ss
push
sti
loop
sti
push
inc
mov
cmp
jne
fucom
stos
cmpl
mov
sbb
inc
or
out
dec
xor
push
inc
or
iret
and
xlat
pop
inc
push
xor
xchg
icebp
ds
shlb
adc
jb
jge
sbb
int3
sti
ss
mov
xchg
aam
mov
cmpsl
outsl
int3
fdiv
negb
int
xor
xor
push
or
in
push
out
rcr
repz
jne
clc
xor
mov
imul
push
aas
push
jnp
sub
mov
jno
push
xchg
or
test
jmp
push
and
jg
stos
add
pop
sub
js
rcrl
sbb
stos
jge
pop
dec
push
repz
dec
and
stos
xor
sub
or
je
mov
mov
jo
imulb
pop
in
add
lret
adc
clc
sub
imul
sbb
pop
cmp
xchg
mov
xchg
in
dec
loop
cwtl
push
mov
dec
dec
xor
mov
rcrl
sbb
ret
jo
xchg
jg
flds
int3
fisttps
neg
inc
fstpl
cmp
ret
mov
xchg
aad
cmp
ljmp
ret
inc
add
ret
lcall
mov
add
scas
int
stc
mov
mov
scas
aad
inc
scas
stc
lret
in
pushf
int3
xchg
or
leave
out
mov
test
mov
or
xor
mov
adc
mov
fnstenv
pop
mov
mov
stc
dec
lret
mov
jns
leave
fwait
out
ret
daa
daa
jge
out
ss
mov
jne
lea
mov
mov
movsb
sbb
addr16
js
add
in
mov
xor
insl
loope
or
nop
les
sarb
pop
pop
mov
stc
aas
jne
xchg
mov
ret
sbb
int3
mov
inc
cmp
lds
jo
movsl
imul
adc
mov
aaa
out
mov
test
xor
icebp
int3
movsl
dec
int3
aaa
ds
ret
call
sbb
mov
insb
stc
mov
lds
mov
mov
shlb
sar
mov
dec
popf
int
dec
or
or
enter
int
int3
les
push
lds
dec
mov
mov
sbb
pop
dec
push
int3
and
int3
pop
dec
pop
enter
les
enter
push
jno
mov
or
mov
cmp
cwtl
mov
aad
mov
pop
stc
mov
dec
gs
mov
enter
les
xchg
ret
xor
ror
pop
mov
mov
xorl
mov
lds
ret
cmp
inc
lcall
test
fs
ret
out
shrl
adc
imul
mov
ja
mov
pop
aad
mov
mov
int
mov
add
std
arpl
dec
push
jns
icebp
mov
icebp
mov
imull
mov
jno
mov
jno
mov
mov
mov
mov
int
mov
lret
test
pop
jo
lds
rol
mov
rcll
mov
mov
fnsave
mov
insb
dec
mov
mov
scas
jecxz
push
int
cmpsl
fxch
and
push
xchg
ret
stos
mov
lea
mov
test
lods
jp
mov
gs
add
xor
aas
decb
cmp
xchg
mov
mov
dec
mov
xorl
mov
inc
mov
jnp
mov
and
cmp
sub
jno
cmpsl
testb
stos
xchg
xchg
xchg
adc
mov
test
mov
cltd
test
mov
xor
mov
sbb
mov
pop
add
inc
repz
and
push
ffree
dec
hlt
clc
mov
in
inc
xchg
icebp
mov
nop
int
mov
shll
aad
stc
mov
adc
mov
adc
xlat
adc
adc
leave
or
mov
mov
xchg
fnstenv
sbb
int
fists
push
mov
or
mov
pop
pop
in
std
test
sbb
das
or
mov
xchg
mov
sahf
pop
mov
mov
mov
adc
xor
mov
xchg
movb
pop
lds
add
mov
je
push
mov
fstps
inc
mov
jge
mov
loope
pop
adc
icebp
addr16
enter
vpmaddwd
mov
mov
mov
sub
mov
push
jno
pop
orl
in
cwtl
lds
pop
movb
enter
lds
out
int3
mov
xor
mov
xor
mov
das
stc
mov
xor
mov
jb
mov
outsb
mov
xchg
stos
int
popa
mov
lds
mov
popf
out
mov
cmc
fdivs
fldt
mov
aaa
dec
mov
jl
mov
push
mov
jnp
mov
imul
and
icebp
out
hlt
mov
test
in
test
lods
daa
fnsave
jnp
in
xor
xor
cmpl
cmp
or
loope
enter
les
ret
mov
pop
dec
mov
cltd
inc
inc
mov
in
mov
lahf
mov
inc
enter
enter
xchg
leave
xchg
fcoml
sub
mov
test
mov
cmp
mov
jmp
add
movsl
out
sbb
aas
push
ffree
movl
enter
enter
les
rcl
mov
push
push
stc
mov
push
popf
mov
rorb
mov
ret
aad
mov
push
int
loope
ror
pop
vminps
mov
enter
mov
push
push
int
jmp
aam
fstp
pop
mov
leave
cld
mov
pop
imul
imul
sub
enter
rolb
mov
cltd
les
pop
mov
mov
inc
xor
inc
and
xchg
leave
and
movl
dec
lret
je
int
mov
test
inc
mov
or
mov
cmp
pop
push
pop
mov
sbb
lock
gs
adc
push
inc
xchg
lret
sbb
lahf
sbb
ret
aam
and
dec
or
mov
jecxz
cltd
mov
add
in
imul
ret
add
xor
jno
rol
or
aam
push
icebp
clc
mov
icebp
pushf
mov
xor
mov
xor
mov
test
loope
ror
out
sbb
mov
leave
xor
vpunpckhqdq
mov
adc
jmp
push
mov
sub
mov
out
call
leave
xor
inc
les
aaa
test
jae
sbb
das
lock
mov
js
jns
in
xor
test
mov
and
ret
pop
ret
dec
ret
dec
and
mov
inc
sub
and
inc
ret
dec
cmp
xlat
test
ret
pop
mov
pop
test
or
fnstcw
arpl
adc
stos
sbb
mov
mov
push
mov
popf
repnz
cmp
test
aas
cmpsb
fdivrl
sub
ret
bnd
int3
mov
lret
adc
mov
mov
pushf
ret
dec
xchg
or
fsts
mov
push
mov
mov
inc
xchg
mov
ret
fidivrl
insl
push
xor
addr16
aam
fisttpl
mov
popa
mov
cmc
lcall
adc
sbb
lcall
push
cli
mov
cmc
pushl
ret
mov
aas
loope
mov
add
mov
andl
je
int
mov
add
mov
inc
mov
xchg
cmp
pop
pop
rcll
repnz
xchg
sub
ret
and
sbb
pop
imul
mov
jb
fstpl
add
icebp
add
arpl
cltd
mov
mov
jp
imul
repnz
int3
shr
sarb
push
mov
mov
xchg
mov
rcr
mov
jge
mov
pop
repz
mov
cmpl
mov
gs
rorl
fcmovb
mov
mov
dec
mov
repz
fld
sub
jmp
mov
xor
sub
mov
outsl
sbb
shll
mov
inc
popa
mov
incl
mov
loop
mov
inc
ret
dec
leave
fs
lea
roll
mov
adc
inc
mov
push
imul
pop
out
jno
lahf
mov
jecxz
adc
movsl
pop
lcall
cmp
mov
outsl
mov
add
jmp
test
jne
sbb
mov
xlat
stc
mov
ret
shl
les
int3
les
push
aam
std
sar
mov
push
aam
mov
cmp
rcl
int3
rcrb
mov
mov
leave
pop
fcmovb
popa
push
xor
fsts
repz
sarl
in
pop
cld
sarb
shll
mov
jg
or
jnp
add
add
fistps
adc
arpl
pop
mov
mov
cmpsb
xchg
mov
lds
mov
mov
jae
dec
shlb
popl
inc
mov
adc
pop
les
popf
repnz
pop
outsb
adc
gs
sbb
sbb
pushf
sub
imul
mov
notl
mov
mov
lcall
cmpl
xorl
aaa
mov
rol
mov
cli
mov
adc
ret
mov
mov
mov
ret
pop
scas
int3
rcrl
mov
popf
jno
mov
or
mov
jp
mov
icebp
push
mov
sub
lods
ljmp
insb
repnz
daa
ret
mov
mov
fadd
aas
jo
mov
mov
xor
xchg
and
mov
test
pop
mov
shll
mov
movl
inc
mov
push
cmpb
and
push
or
cli
jno
lahf
cs
pop
sbb
mov
fstpl
mov
jecxz
repnz
mov
add
cmc
adc
mov
outsl
sub
mov
inc
adc
mov
adcl
cli
mov
iret
xchg
or
cmp
mov
xlat
adc
mov
rcrl
mov
in
mov
mov
jmp
xor
jmp
fwait
aam
push
sbb
mov
ja
push
fisttpl
adc
jae
jb
std
sbb
mov
jns
add
add
nop
pop
mov
mov
xor
add
xchg
mov
pop
lds
jmp
rorb
mov
sbb
inc
mov
lea
cmp
pop
sub
xlat
sbbl
fwait
pusha
repnz
sbb
adc
gs
mov
mov
mov
xor
icebp
sbb
mov
ja
pop
mov
mov
mov
mov
inc
repz
mov
xor
inc
xor
mov
xchg
jns
mov
add
mov
xchg
fnstcw
aad
mov
lea
dec
mov
jno
push
mov
scas
insl
jl
ja
ljmp
mov
mov
cmp
add
jmp
mov
aas
inc
jp
mov
in
sub
out
mov
cmp
xchg
mov
pop
addr16
mov
push
inc
je
sbb
int
mov
xchg
fs
rorb
mov
xchg
jmp
inc
mov
sbb
pop
xchg
mov
and
cmp
stos
mov
repnz
mov
lock
xlat
sbb
jb
mov
cmp
push
int3
rolb
sarl
push
pushf
ror
or
aad
rclb
mov
xchg
pop
rcrb
mov
inc
fcmovu
shl
ret
mov
dec
int
shr
push
rcrb
pop
shrb
shl
imul
std
dec
or
popa
push
cmpb
lret
fstps
dec
stc
rorb
xor
adc
repz
mov
pop
add
sarb
mov
popf
inc
mov
test
mov
mov
or
mov
sub
pop
ret
inc
mov
pop
and
sub
xchg
mov
lahf
dec
mov
mov
and
std
or
sub
ret
lcall
sbb
cmp
fs
mov
lret
mov
add
aam
cmp
cli
mov
mov
or
int
mov
xchg
ss
mov
push
std
ret
mov
iret
stc
mov
mov
push
aas
mov
or
add
rcrl
mov
scas
cmp
shl
ljmp
add
mov
lahf
sti
add
xorl
shll
fdivrl
mov
jecxz
sub
add
cwtl
aam
dec
xor
out
stc
adc
cwtl
xor
ljmp
vpaddw
test
in
cli
pop
arpl
jmp
lahf
push
aad
pop
mul
dec
cld
ror
xchg
push
pop
fnstsw
mov
pop
xor
pop
js
cmc
adc
jns
repz
adc
or
adc
in
shll
mov
sbb
xchg
or
push
mov
jecxz
jecxz
stc
aaa
push
xor
aad
jle
gs
fldl
dec
stc
add
mov
sahf
movsl
aas
out
mov
xlat
lahf
pop
push
xor
mov
mov
cmp
cwtl
jecxz
sbb
icebp
and
inc
test
or
enter
in
pop
sbb
fbstp
outsb
and
cmp
sub
hlt
ret
mov
jmp
jo
or
call
jge
xchg
test
lret
popf
inc
lods
add
out
sbb
add
xchg
sbb
push
sbb
push
jbe
and
cmpsb
pop
je
push
mov
dec
int
xor
loop
dec
mov
push
lret
adc
mov
adcb
divb
mov
lea
adc
mov
ss
icebp
xchg
pop
xchg
hlt
jg
and
cmpb
cmp
xchg
sub
dec
ja
mov
out
inc
and
mov
jb
bound
xor
fsubs
fstpt
cmp
jne
xor
out
and
movsl
mov
dec
xor
imul
sti
pop
push
inc
pusha
test
xchg
call
idivl
push
push
imul
adcl
xor
test
scas
cmpsl
sub
dec
in
lds
pop
data16
jne
fwait
jle
clc
shrb
xchg
test
push
cmp
push
fisubrl
addb
rorl
cmp
push
jecxz
cmc
in
movsl
jecxz
cld
sbb
mov
les
and
pusha
mov
fdivr
outsl
xchg
rcrb
in
cwtl
xchg
push
leave
fsubs
push
in
loop
mov
sbb
mov
xchg
cmp
shll
lds
fldl
add
xchg
xlat
inc
aas
push
pusha
jge
sbb
rcrl
ja
divb
jno
xor
imul
mov
lcall
sbb
cmp
nop
xor
adc
imul
jl
add
enter
cmpsl
cli
jmp
mov
push
mov
ja
lcall
dec
pop
aaa
xor
jbe
add
xchg
pushf
mov
leave
dec
dec
dec
test
and
mov
xor
bound
jb
hlt
in
mov
add
xchg
mov
fwait
loop
mov
push
in
inc
cld
test
or
testl
xchg
push
dec
add
fwait
inc
jb
int
or
xchg
sbb
cmp
stc
sbb
xchg
pop
mov
cs
cmp
lret
sub
mov
leave
loope
cwtl
push
add
xor
push
cmp
adc
inc
mov
pop
pop
fldlg2
xor
js
inc
xchg
dec
arpl
cmp
adc
lea
sub
lea
push
fsts
insb
dec
mov
cmp
pop
inc
mov
cmpb
mov
or
fsubr
and
pop
enter
leave
sbb
dec
and
push
clc
cmc
jmp
stc
sbb
std
out
scas
pop
jle
push
fcomp
mov
les
aam
scas
lret
dec
rorl
add
inc
rorb
sbb
jge
in
scas
jmp
cmp
mov
inc
xor
mov
pop
xor
add
fs
std
mov
mov
pop
ss
sahf
inc
jbe
pop
mov
mov
pop
lahf
jbe
sahf
pop
mov
sub
sahf
test
pop
push
and
mov
pop
fwait
mov
sbb
fistpl
and
adc
pop
fisubs
mov
cmp
mov
cmpsl
out
sbb
in
inc
test
add
xor
pop
add
push
cltd
test
fildl
dec
arpl
movsl
js
mov
add
xor
dec
xorb
sub
in
imulb
add
dec
loopne
cmpsl
sub
mov
push
jns
cmpsb
imul
rorb
ret
add
mov
or
pop
jle
jno
filds
sub
aas
addr16
adc
xchg
push
js
mov
mov
sbb
in
das
xchg
push
movsb
insb
mov
jmp
xchg
jle
out
inc
idivl
push
scas
xor
cmp
xchg
cmp
dec
sbb
push
adc
dec
stos
inc
fnsave
and
ret
rcrl
mov
sbb
shr
push
adc
xor
mov
mov
add
lret
leave
stos
cmp
add
mov
inc
stc
add
sbb
cmp
inc
jae
and
xor
in
xor
dec
cmp
mov
cmp
or
jmp
cmp
insl
ljmp
push
scas
cmpsl
inc
shr
sbb
call
push
inc
xchg
in
bound
mov
es
loope
nop
mov
cltd
ret
pushf
inc
ds
xor
mov
jecxz
mov
push
push
je
push
jbe
ret
xchg
sbbb
pop
femms
xchg
out
jbe
push
jg
and
or
lcall
mov
inc
inc
pop
negl
lahf
xchg
arpl
js
ds
lret
mov
pop
xchg
xor
xorl
cmp
sub
push
in
out
push
lea
sahf
adc
loopne
ja
sahf
mov
sbb
fwait
shrl
xchg
shll
inc
push
jmp
in
ds
ljmp
push
and
insb
std
enter
mov
or
les
add
xor
or
or
jno
test
xor
mov
in
pop
stos
insl
sub
dec
or
mov
inc
adc
jge
mov
jnp
enter
inc
aad
lahf
psubusb
cmpsb
scas
fs
sti
mov
std
xor
cmpsb
fwait
push
adc
loope
or
mov
sub
in
test
mov
cmp
add
inc
xchg
aam
adc
xchg
xor
push
insb
sbb
mov
and
jno
mov
inc
js
and
fadd
cld
mov
sbb
fcomp
aaa
test
adc
push
or
mov
pop
push
test
dec
push
push
movsb
fistpll
loop
jae
clc
sar
lock
xlat
je
pop
mov
lods
xchg
push
and
xor
or
mov
data16
loop
aaa
jg
pop
rol
jp
imul
fisubrl
xlat
and
lods
jno
jb
idivb
sub
popa
push
dec
add
xor
add
pop
and
mov
movups
mov
fadd
sbb
ljmp
shlb
cmp
orb
in
ds
stos
xor
outsl
add
mov
int
cli
out
out
lods
xchg
or
popa
gs
mov
xor
inc
fstpt
push
mov
inc
mov
hlt
js
jb
fwait
mov
mov
iret
mov
stos
test
sar
inc
push
aad
mov
dec
rclb
das
clc
cmpl
int3
lcall
add
lret
xchg
hlt
mov
popf
sarb
in
sub
xor
imul
cs
nop
mov
push
inc
iret
jp
cmp
dec
mov
pushf
jp
in
xchg
scas
ror
jo
scas
push
scas
pop
test
in
in
inc
dec
jne
aad
or
cmp
outsl
mov
out
clc
or
xor
sub
inc
mov
sub
dec
jbe
push
lds
call
fldt
mov
dec
and
pop
mov
push
hlt
adc
xor
xchg
jnp
sar
adc
mov
adc
cs
or
mov
lds
cmp
addb
out
xor
xor
call
xchg
bound
xchg
lret
push
push
adc
mov
lahf
push
adc
ja
xor
fwait
cmp
lods
sbb
mov
sti
cmpsl
sbb
push
inc
mov
jmp
mov
jbe
je
bound
push
inc
out
push
scas
icebp
outsl
xor
mov
adc
lods
xorl
nop
or
xchg
inc
pop
mov
mov
mov
push
out
jbe
aad
adc
scas
cwtl
loope
out
push
imul
aam
or
stos
lea
dec
sub
dec
inc
sub
outsb
pop
lret
aam
shll
dec
test
int
adc
leave
popf
or
jno
lret
add
test
popa
mov
xor
loopne
push
shlb
xor
sub
push
inc
lods
je
mov
je
and
sub
cmp
or
sub
jg
gs
push
popa
fwait
push
dec
push
arpl
addr16
mov
cli
or
pop
repz
test
fincstp
insb
mov
push
adc
scas
outsl
js
dec
das
ja
or
ret
mov
sub
mov
adc
shrl
adc
xchg
loop
iret
rolb
jo
fnstenv
lds
lods
dec
negl
out
popa
nop
fimull
faddp
lret
test
out
vcmpsd
inc
cwtl
loopne
bnd
or
scas
dec
mov
add
int
gs
insb
js
testb
jo
stc
and
jge
loop
and
iret
and
jg
cmp
lret
mov
imul
xchg
add
push
and
and
cmp
rcll
aad
push
lods
and
shrl
mov
dec
ljmp
test
test
cmp
push
jnp
jg
lahf
cmpsb
fnstsw
fiadds
cmc
in
popf
xchg
scas
test
jns
repz
js
push
mov
rcll
out
loope
ljmp
or
rep
les
hlt
push
mov
adc
adc
pop
xchg
imul
inc
shrl
iret
fsts
adc
sbb
jbe
lods
daa
loope
adc
mov
add
push
shll
lret
lret
lock
mov
push
int3
inc
icebp
test
iret
push
cmp
adc
mov
into
test
or
shlb
adc
in
lods
add
mov
insb
daa
imul
shll
mov
mov
add
imul
jne
sub
sbb
mov
dec
xchg
dec
add
sub
and
or
jae
fld1
icebp
jae
push
mov
mov
icebp
and
jo
pushf
cmp
xchg
adc
and
jge
mov
popf
lahf
dec
scas
faddl
adc
popa
lds
ja
inc
push
jnp
inc
mov
sbb
lcall
dec
mov
dec
push
or
mov
inc
pop
push
or
ja
arpl
repnz
pop
aam
adc
stc
ljmp
fs
inc
cli
jo
mov
lods
imull
pusha
test
stc
push
cs
scas
imul
test
adc
aad
xor
lea
push
popf
mov
out
lds
insl
dec
stos
xor
insb
scas
iret
mov
xor
xorl
adc
out
adc
fs
xchg
mov
mov
loop
jb
sar
rcrb
hlt
push
inc
insb
mov
hlt
ljmp
aaa
jae
fiaddl
pop
test
xor
push
mov
fldt
adc
dec
dec
dec
sbb
rclb
popf
inc
js
mov
sbb
mov
or
jl
pop
adc
rsqrtps
lcall
xchg
out
jbe
jmp
add
dec
lcall
push
loopne
push
mov
push
stos
xchg
xchg
xchg
mov
or
jae
adc
xor
rorb
repnz
inc
push
mov
call
inc
dec
pop
xchg
rcll
out
rcll
fs
gs
sub
out
add
jg
xchg
mov
lret
jbe
jo
inc
nop
mov
stos
xor
cmpsl
xchg
in
mov
sarl
adc
or
push
push
mov
adc
mov
push
cmp
insb
adc
daa
call
xchg
pop
jb
loope
mov
shlb
sub
sub
push
clc
push
pop
jecxz
hlt
sbb
nop
fsubl
pop
fptan
out
jecxz
push
outsl
test
pop
out
xlat
inc
data16
cmp
push
jge
outsl
xor
sbb
mov
cmp
dec
cmovb
dec
or
inc
dec
cltd
jns
iret
pop
les
push
push
ljmp
rolb
push
push
je
into
jg
sub
xlat
adc
mov
dec
xor
popf
scas
sbb
lods
aaa
pop
inc
sub
inc
cmpsl
dec
xor
or
outsl
mov
push
xchg
sbb
js
fsubr
les
daa
das
fs
pop
lods
push
adc
outsb
nop
mov
pop
punpckhwd
mov
shrl
xchg
enter
cmpsl
daa
adc
test
ljmp
movsl
pop
mov
gs
cmc
aam
pop
jne
fs
lock
xor
push
add
pusha
out
imul
faddl
xlat
push
or
and
pop
push
xor
dec
mov
pop
dec
dec
jo
xor
pop
cmp
enter
leave
mov
pop
mov
rcrb
pop
int
sti
loopne
lret
nop
loope
dec
push
pop
pop
mov
pop
push
xor
push
loope
xor
fisubrl
sub
scas
xlat
xchg
push
inc
add
ja
xor
out
adc
inc
sbb
fidivl
pop
pop
out
adc
or
sub
push
and
roll
jmp
xor
and
ret
xchg
pop
pop
into
push
adc
lret
sub
pushf
lock
and
iret
xchg
ljmp
xor
leave
imul
negb
xchg
outsl
jne
add
imul
out
ret
insl
cmp
in
aad
jmp
popl
cmp
lcall
insl
jmp
les
lock
dec
in
repz
popa
fadds
je
push
repnz
pop
jns
arpl
loopne
jmp
aam
xor
mov
js
sub
mov
mov
test
js
inc
mov
leave
inc
dec
pushf
sarb
pop
cmp
fnstsw
or
xchg
pusha
orl
cmpsl
fnstcw
pusha
pop
arpl
jns
bound
enter
lea
sub
or
xchg
stos
bound
out
int
gs
mov
stc
gs
adc
sub
add
ret
gs
push
aad
test
lods
push
in
xor
push
inc
push
int3
push
ficoml
xlat
push
insl
int
shr
out
iret
scas
in
scas
fisubl
sub
rcr
pop
add
jne
dec
add
add
dec
cmc
shl
leave
pop
sarl
notl
and
lret
push
lret
aas
sub
mov
push
call
xor
sbb
sbb
jmp
sub
mov
xchg
xor
sbb
sub
xchg
or
outsl
sbb
sub
pushf
ret
mov
mov
les
rorl
loope
rorl
cmp
inc
sahf
les
push
mov
pop
sbb
mov
outsb
mov
pushf
fnsave
movsb
div
divb
fildll
xchg
jmp
ret
add
mov
lods
push
fnsave
aam
or
in
frstor
xlat
imul
imul
and
arpl
adc
loope
xchg
xor
hlt
push
fldt
xor
push
mov
sub
cs
and
es
mov
and
scas
std
lahf
es
sahf
cltd
xchg
inc
cmc
fwait
and
add
popa
jp
stos
xlat
add
fisubs
pop
int3
xor
sarl
and
mov
push
test
es
sbb
jmp
xchg
movsl
inc
dec
adc
xchg
stos
add
jmp
ljmp
mov
hlt
ljmp
sbb
mov
outsb
jecxz
jge
fidivrl
xor
out
cmp
rorl
inc
rclb
std
aas
push
xor
and
mov
call
mov
jns
pop
jge
push
and
loope
ficoml
lods
adc
xchg
fwait
xlat
aad
test
mov
cmpsl
fiaddl
cmpsl
mov
daa
shrb
and
repnz
xchg
aas
xor
lods
test
xchg
daa
mov
repnz
xchg
shlb
pop
iret
in
adc
add
and
stc
push
adc
add
syscall
addr16
pop
movsl
or
xlat
out
enter
add
repnz
popa
ret
in
adc
xchg
imul
loop
jne
sarl
outsl
jecxz
leave
in
cwtl
popa
xchg
imul
in
jmp
push
rcll
adcb
cmpsl
sub
cmc
test
sub
jmp
fstpt
add
mov
out
mov
insl
sarl
add
or
stc
sub
ret
jnp
add
inc
adcb
mov
aad
or
xchg
roll
mov
push
jle
sub
ret
sub
daa
sbb
mov
sbb
popa
sbb
push
mov
pop
stos
dec
in
xchg
icebp
mov
xchg
xor
std
imul
je
jle
add
xor
or
test
test
mov
outsl
scas
cmp
xlat
xchg
mov
push
jbe
push
adc
dec
out
xor
cwtl
push
dec
out
or
out
adc
inc
mov
xlat
lods
xchg
nop
mov
popf
push
mov
and
scas
sub
cmpsb
cmp
lods
and
dec
movsl
mov
cmc
daa
inc
sbb
cmpsl
add
push
cmp
cmc
pop
scas
xchg
push
stc
popf
mov
enter
jg
std
daa
cmp
add
xchg
xchg
cmpsb
shll
daa
dec
mov
aad
enter
dec
lahf
sbb
xchg
dec
movsb
mov
mov
sub
fcompl
and
data16
sbb
bound
loope
es
push
push
imul
jne
out
stos
imul
and
data16
andl
adc
test
testl
cmp
push
jle
fdivs
xor
cwtl
xor
cmp
push
cmpsb
xlat
je
sub
jo
movsl
ret
daa
pop
mov
test
mov
es
or
xchg
fs
dec
adc
jmp
xchg
dec
pop
cltd
sbb
dec
sbb
pop
push
sub
cmp
cmpsl
fsubrl
and
aas
mov
jge
jp
add
movb
add
cwtl
int3
inc
or
pop
cmp
ds
cli
addl
lea
xchg
out
shrl
lret
stc
aam
xchg
leave
fmuls
add
xlat
lea
mov
adc
test
in
mov
in
mov
popa
out
mov
rcl
sub
in
push
in
stc
mov
mov
push
jmp
push
sub
jne
jge
add
mov
push
test
inc
out
cmp
or
inc
cwtl
mov
jo
cltd
nop
push
insl
sbb
xchg
sti
out
push
sub
fcomps
sbb
dec
inc
movsl
mov
sub
and
dec
cwtl
stos
sbb
xor
cwtl
adc
stc
adc
fldcw
xor
in
arpl
mov
cld
andb
fsubrs
adcb
in
aad
outsb
mov
vshufps
push
in
jmp
dec
jecxz
in
bound
sub
fs
aam
inc
pop
sbb
xchg
and
mov
aam
rcrl
sub
shl
enter
and
push
fcmovu
and
addr16
movsb
popa
insb
loope
and
jmp
insb
cltd
stos
fimull
sbb
jne
out
push
imul
jmp
xchg
cmp
subb
in
movsb
jnp
mov
inc
out
test
add
movsb
leave
xor
sbb
gs
or
push
adc
adc
add
dec
pop
mov
push
dec
adc
sub
push
pop
pop
xor
jmp
jecxz
dec
jecxz
cmp
pop
dec
sub
xlat
jmp
sti
mov
push
jo
xchg
aad
dec
sub
call
mov
cmc
jl
stc
pusha
add
les
fs
and
or
repnz
pop
xchg
stc
xlat
push
inc
std
push
stc
ds
mov
daa
fadds
xchg
movsl
jg
lods
and
add
test
xchg
movsb
sbb
sbb
and
mov
ljmp
adc
leave
xchg
cmpsb
dec
movsl
adc
aaa
pop
cmpsl
cltd
or
pusha
mov
mov
cmp
and
mov
scas
cld
call
sbb
repz
iret
add
cmp
or
xchg
xchg
mov
cmp
xor
inc
pop
cmp
data16
xor
xor
inc
adc
into
mov
dec
pop
leave
xchg
push
fiaddl
mov
jecxz
cwtl
inc
bound
mov
fisubl
sbb
sbb
cmp
arpl
adc
stos
scas
ficompl
test
mov
and
sbbb
negb
mov
aaa
mov
scas
and
mov
shll
add
dec
mov
nop
and
mov
or
pop
fwait
lcall
push
fwait
and
and
pop
mov
pop
sub
and
daa
cs
es
pop
in
fwait
loopne
mov
sub
sbb
stos
sub
push
jbe
insl
and
xor
jle
in
sbb
fidivl
negb
mov
fisubrl
out
pop
cli
cmpsl
mov
mov
xor
loope
xchg
ds
les
pop
xchg
jecxz
shrl
add
push
pop
push
or
mov
sbb
dec
and
cmp
and
xchg
dec
lcall
cwtl
lcall
mov
and
nop
pushf
mov
cld
fwait
cmc
out
sbb
inc
jle
cld
sub
mov
out
add
fiadds
mov
test
clc
mov
je
add
xlat
test
loop
inc
or
inc
loope
jg
pop
cwtl
mov
fsubl
and
shlb
ljmp
pop
and
or
pop
cwtl
stc
fstp
sub
popa
arpl
jecxz
cmp
popa
mov
out
fldt
mov
jge
fldcw
loope
rolb
div
lcall
push
outsb
fdivrl
push
or
icebp
test
rcl
mov
cmp
cltd
push
push
sbb
rep
movsb
rcl
and
aam
mov
enter
push
pop
and
fwait
clc
xor
and
mov
imul
pop
sbb
sub
cltd
fucomi
pop
and
frstor
and
jp
popf
sbb
mov
negb
and
std
gs
xor
cmpsb
imul
fsubrs
mul
iret
gs
popa
xor
fmul
bound
fdivrs
in
push
shl
pop
in
jmp
enter
push
pop
jecxz
and
lret
pop
pop
out
in
loopne
fs
loopne
loope
pop
es
jo
fcomp
push
pop
pop
pop
jmp
mov
fisttpl
jno
outsb
and
pop
or
out
addr16
das
fidivrl
imul
movsb
jo
and
push
mov
clc
jno
movsb
jg
and
aas
lahf
mov
sbb
dec
xchg
outsb
sbb
jl
and
xlat
inc
mov
adc
sbb
lcall
pusha
jno
popa
adc
in
lahf
mov
push
ficompl
mov
in
imul
pop
lret
enter
jbe
daa
mov
jle
jp
add
jbe
in
lcall
mov
or
add
pop
xchg
gs
cmp
popa
push
ret
cmpsb
fstl
nop
pop
stc
subl
pop
jg
mov
xchg
push
mov
xchg
mov
sbb
mov
movsl
mov
and
cmpsb
mov
pop
mov
pusha
sbb
out
sbb
lret
out
mov
movsb
enter
xchg
call
xchg
stos
mov
movsb
jne
add
xor
insl
sahf
les
xchg
mov
mov
fistpll
xchg
push
fimuls
mov
pop
les
push
pop
mov
inc
cmp
pop
rclb
ss
dec
xor
fcoms
cs
sbb
dec
mov
sbb
mov
fbld
cmpsb
pop
lods
pushf
adc
pusha
cmp
pop
in
sub
negb
push
push
pop
cmp
sbb
or
pop
movsl
mov
out
push
hlt
test
push
mov
pop
xor
add
push
es
sahf
mov
and
push
mov
stos
push
pop
loop
and
frstor
cs
dec
test
es
outsl
push
fcomps
push
loopne
cmc
sbb
fsubrl
push
sahf
jo
outsb
fwait
or
scas
jbe
negb
jle
imul
neg
mov
sbbb
out
fiadds
roll
pop
mov
inc
pop
jge
data16
cmc
dec
pop
enter
adcl
or
push
fmulp
xor
or
and
jp
loopne
sarl
pop
cwtl
shrl
pop
xchg
sbb
sahf
push
sets
loop
sbb
pop
and
ds
push
and
cs
stos
enter
jbe
es
call
sahf
jns
add
lods
mov
popf
cmp
add
add
outsb
mov
imul
push
inc
clc
pop
cmp
sahf
icebp
inc
add
lea
pop
clc
test
sbb
jle
enter
push
pop
loope
pop
filds
rcr
inc
cs
or
frstor
jnp
fstl
ficomps
jl
fcomip
mov
rcr
das
mov
mov
mov
jmp
fldl
cmp
pop
mov
outsb
pop
ret
mov
fdivr
js
popa
mov
cmp
dec
pop
ds
add
mov
xlat
dec
popf
xchg
insl
sbb
jbe
mov
mov
popf
dec
repz
mov
sarb
mov
sbb
pushf
dec
data16
in
pop
mov
pop
rcrb
pushf
in
cmpsb
and
dec
scas
sbb
cs
and
shll
jno
and
insb
andb
add
loope
fiaddl
fadd
addr16
pusha
jns
fdivl
in
loopne
in
pusha
mov
lods
fists
or
popa
loopne
in
pop
sbb
pusha
inc
jecxz
imul
loopne
pusha
enter
es
pusha
shr
pop
loopne
loopne
pop
hlt
outsl
data16
outsl
push
pusha
out
pop
outsb
fnstsw
pop
pop
pop
fdivs
cmc
in
sbb
outsl
jle
in
add
jl
mulb
out
loope
mov
push
aaa
xchg
or
cmp
sbb
andps
outsb
sahf
add
push
mov
or
pushf
pushf
pop
and
push
xor
lahf
xor
pop
sbb
mov
xchg
out
in
sbb
aas
push
pusha
sbb
mov
pop
addr16
nop
loope
out
sub
fsubrl
jbe
movsl
cmp
fbstp
and
pop
hlt
adc
loop
sti
jne
aaa
ljmp
xor
fistpll
add
fstpt
or
les
fisttps
inc
nop
loope
inc
scas
pusha
adc
or
lds
popa
jge
enter
push
pop
dec
dec
and
add
pop
lahf
inc
rcrb
or
mov
in
dec
pop
fwait
nop
cmp
and
pusha
lahf
repz
iret
mov
jp
mov
mov
call
sbb
mov
cli
lcall
inc
push
or
jns
pusha
es
outsb
stc
enter
add
and
mov
into
pushf
push
mov
mov
loop
and
lea
pusha
int3
mov
ds
test
mov
mov
movsl
add
lods
jmp
push
call
jns
nop
or
imulb
mov
add
add
add
add
add
loopne
add
add
add
add
add
add
clc
loopne
add
add
add
add
add
loope
add
loopne
add
loope
add
loopne
add
loope
add
loope
add
loopne
add
loope
add
loope
add
loopne
add
loop
add
loope
add
loope
add
add
push
loope
add
add
add
add
add
add
int3
loope
add
add
add
loope
add
add
add
loop
add
add
add
add
addb
add
loope,pn
add
add
push
loope
add
add
add
add
add
add
int3
loope
add
add
add
loope
add
add
add
loop
add
add
add
add
addb
add
dec
outsl
popa
fs
imul
js
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jne
insb
insl
outsl
outsb
cs
insb
add
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
popa
arpl
inc
imul
push
push
xor
fs
insb
add
add
push
jo
push
je
imul
inc
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
gs
popa
insb
jne
inc
js
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
jb
inc
push
push
push
inc
push
xor
cs
insb
add
add
inc
gs
popa
jb
outsb
je
dec
dec
inc
inc
push
push
xor
cs
insb
