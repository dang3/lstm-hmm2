xor
sub
rol
shr
shr
mov
add
mov
mov
push
lea
mov
sub
mov
sub
test
jne
jmp
mov
add
add
add
movb
call
jmp
push
jmp
add
add
out
sub
mov
jmp
mov
sub
loop
mov
repnz
lahf
inc
mov
movzbl
add
mov
lea
sub
ror
sub
mov
shr
mov
shr
jmp
and
jmp
mov
add
add
mov
inc
shl
add
add
mov
add
jmp
mov
nop
xor
adc
or
je
push
push
or
add
mov
sub
shr
jmp
add
xor
cmp
mov
jmp
mov
and
mov
movzwl
movzwl
add
add
mov
and
mov
lea
sub
jmp
cmp
push
jae
call
push
jmp
xorl
push
jmp
ret
push
push
jmp
inc
subl
call
jmp
mov
xor
and
cmp
sete
mov
ret
add
add
add
shlb
and
or
ror
mov
mov
xor
and
and
mov
lea
jmp
in
testb
testb
push
decl
or
add
add
add
mov
pop
add
add
inc
and
mov
mov
add
jne
add
jmp
mov
mov
mov
jmp
mov
adcb
and
and
rol
mov
add
test
je
jns
movzwl
push
jmp
jmp
push
cld
rol
mov
dec
add
mov
shl
sub
mov
jmp
mov
mov
jmp
movl
jle
add
jmp
mov
or
and
xor
or
sub
mov
mov
jmp
mov
lea
push
push
call
add
mov
and
mov
add
jmp
test
jmp
add
std
xor
dec
sub
and
mov
sub
test
jne
push
jmp
dec
leave
ret
ret
inc
jmp
inc
pop
xorl
call
sub
or
mov
sub
sub
mov
jmp
add
cmpl
je
push
push
push
lea
jmp
cld
imul
jmp
pushl
call
jmp
test
lea
jle
jmp
in
std
mov
jmp
add
add
add
push
jmp
cmpl
jne
cmpb
jne
nop
nop
ror
or
xor
mov
nop
jmp
add
mov
jmp
shr
mov
jmp
lea
jmp
xor
jmp
pop
adc
add
push
mov
mov
mov
mov
jmp
push
jmp
call
call
xorl
pushl
call
pushl
ret
sub
add
inc
mov
mov
rol
add
ror
inc
and
mov
shr
lea
jmp
shl
mov
xor
rol
sub
mov
and
cmp
jne
and
add
add
add
jmp
mov
test
jne
cmp
je
jmp
jne
pop
pop
pop
jmp
add
add
pop
add
push
jmp
mov
mov
movl
movl
call
jmp
or
mov
mov
jmp
mov
xor
test
je
movsbl
rol
add
xor
jmp
test
jne
add
ret
dec
mov
rol
dec
mov
jmp
add
sub
jmp
add
add
add
push
dec
mov
test
je
mov
jmp
mov
inc
xor
mov
sub
mov
push
push
push
push
jmp
call
push
subl
push
jmp
push
inc
jmp
int3
push
leave
push
call
subl
push
jmp
mov
mov
mov
mov
jmp
lea
addl
call
jmp
add
add
sub
or
inc
xor
mov
sub
jmp
call
ret
add
add
add
inc
dec
xor
mov
add
sub
test
jne
jmp
daa
adc
lods
outsb
mov
movzbl
add
mov
lea
add
rol
mov
shr
jmp
push
jmp
call
nop
int3
call
int3
addl
call
lea
push
lea
push
movb
jmp
push
movb
jmp
rol
inc
mov
sub
jmp
inc
mov
jmp
add
int
dec
inc
lods
push
and
add
mov
jmp
push
push
jmp
jmp
lea
or
mov
sub
cmpw
jne
mov
shr
mov
mov
jmp
sub
mov
or
or
and
mov
push
push
jmp
push
jmp
call
call
inc
inc
subl
call
jmp
mov
movl
mov
jne
xor
ret
test
jne
jmp
nop
movzwl
jmp
mov
movb
movb
movb
call
test
je
cmp
jmp
test
jne
add
cmpl
jmp
mov
jmp
add
add
arpl
or
mov
in
adc
rol
sub
push
mov
movl
mov
push
sub
and
dec
and
rol
mov
jmp
push
push
jmp
and
rol
xor
mov
test
jmp
add
push
call
shl
sub
mov
cmp
je
or
mov
test
jne
jmp
lea
cltd
and
add
sar
test
jle
jmp
add
push
shr
and
sub
add
mov
jmp
movb
movb
mov
movb
mov
movb
mov
jmp
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
add
jmp
nop
xorl
push
jmp
inc
ret
xorl
push
jmp
inc
ret
jmp
ret
leave
dec
call
nop
xorl
call
test
jmp
inc
repz
mov
dec
mov
mov
jmp
test
jmp
ret
jmp
add
les
pop
add
add
mov
call
call
jmp
je
add
ret
mov
and
cmpw
je
jmp
push
push
mov
mov
jmp
push
jmp
test
jmp
add
add
lea
jmp
add
add
add
test
add
add
adc
pop
add
ret
subl
pop
add
ret
add
add
add
test
incl
call
test
je
lea
cmp
je
xor
ret
jmp
push
push
mov
mov
mov
add
mov
jmp
or
rol
mov
test
jne
add
ret
mov
add
rol
mov
push
jmp
pop
jmp
pop
call
nop
inc
pop
pop
addl
jmp
push
out
mov
les
ja
sub
sub
rol
and
mov
pop
ret
add
add
add
add
add
mov
add
mov
lea
rol
add
ror
mov
shr
and
jmp
mov
dec
jne
pop
pop
pop
mov
pop
ret
add
add
add
mov
decl
adc
jecxz
fimuls
add
and
rol
mov
lea
push
push
jmp
nop
call
dec
subl
push
jmp
add
test
je
sub
mov
jmp
xchg
ret
dec
add
cmp
jl
pop
jmp
jl
cmp
icebp
mov
mov
dec
or
add
add
mov
add
sub
add
or
mov
rol
mov
rep
movzwl
jmp
out
inc
jne
add
cmpl
jmp
sub
test
mov
jne
movzbl
add
mov
ror
mov
mov
jmp
xor
pop
shl
shr
mov
mov
jmp
and
ror
mov
add
add
sub
add
cmp
mov
jmp
jle
and
sub
sub
or
mov
sub
sub
sub
mov
jne
jmp
push
call
push
jmp
ret
call
call
jmp
call
int3
leave
xorl
mov
jmp
mov
xor
and
mov
shr
and
add
test
jmp
pop
ret
and
shl
mov
movzwl
xor
sub
sub
or
mov
mov
pop
jmp
mov
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
add
test
rorb
mov
add
jmp
xchg
loope
mov
inc
jmp
call
jmp
nop
pop
addl
mov
jmp
adc
lret
jb
and
roll
das
mov
add
add
add
xor
or
mov
add
add
sub
jne
test
jmp
call
push
jmp
int3
xorl
mov
call
push
jmp
addl
mov
call
add
jmp
or
mov
inc
sub
mov
pop
ret
add
add
add
mov
cmc
call
movb
sub
mov
mov
mov
push
mov
jmp
sbb
iret
mov
call
push
jmp
jmp
ret
leave
int3
push
subl
push
jmp
jmp
addl
jmp
je
or
and
mov
sub
test
jmp
push
add
xor
and
ror
sub
mov
call
add
and
mov
call
push
jmp
call
jmp
jmp
subl
jmp
mov
orl
loop
ja
cmp
add
loopne
sbb
gs
mov
ror
mov
pop
jmp
mov
jmp
ret
push
jmp
pop
call
dec
call
subl
push
jmp
mov
imul
xor
add
and
mov
xor
add
jmp
push
jmp
call
push
call
nop
int3
addl
jmp
jne
movzbl
jmp
xlat
jle
add
mov
lea
mov
or
rol
add
or
mov
shr
and
jmp
call
add
and
mov
add
add
mov
call
add
sub
ror
shr
xor
mov
call
movl
lea
jmp
push
fdiv
sub
jne
pop
pop
pop
or
mov
xor
or
rol
mov
pop
ret
add
add
add
adc
test
je
add
ret
pop
jmp
cmp
mov
pop
mov
mov
pop
ret
add
add
add
rolb
add
add
inc
inc
and
add
add
jmp
mov
and
rorb
mov
mov
mov
or
mov
mov
mov
jmp
pop
out
add
mov
sub
test
jne
movzbl
add
lea
xor
add
add
or
and
mov
jmp
inc
lds
sbb
test
decl
pop
jmp
rcll
and
add
subl
lea
jne
jmp
mov
mov
pop
mov
pop
or
mov
pop
ret
add
add
add
test
add
add
add
dec
dec
xchg
push
mov
mov
sub
mov
mov
jmp
imul
add
inc
mov
add
add
add
jmp
jmp
pop
mov
sub
sub
dec
mov
and
add
add
jmp
dec
loop
shr
mov
mov
je
test
jmp
cltd
jb
je
shr
and
dec
or
sub
mov
sub
add
sub
mov
mov
jne
xor
add
and
mov
jmp
repz
pop
mov
mov
movl
jmp
movl
mov
jmp
mov
and
add
add
jmp
jmp
adcb
call
cmpl
jne
cmp
jne
call
jmp
cmp
test
mov
je
jmp
fnsave
mov
and
mov
sub
jmp
and
sub
mov
mov
jne
mov
jmp
add
add
jmp
enter
add
add
add
sub
and
add
or
mov
movzbl
shl
jmp
lret
add
add
lea
add
mov
mov
call
cmp
jb
jmp
and
add
add
orb
add
jmp
or
jg
rolb
incb
addl
add
add
test
mov
je
lea
jmp
dec
xchg
stos
and
mov
and
or
and
mov
sub
mov
mov
add
jmp
out
mov
call
icebp
cmp
test
decl
je
adc
repz
pop
and
jmp
xchg
sub
ljmp
mov
mov
ror
shr
shl
and
mov
jmp
add
and
inc
and
add
add
jmp
mov
mov
add
add
mov
jmp
pop
loopne
movl
mov
cmpl
je
pop
or
or
ror
mov
jmp
adc
sub
pop
pop
add
and
and
sub
and
mov
pop
ret
push
xor
add
add
xor
add
add
add
add
xor
add
xor
add
xor
add
add
add
xor
add
add
inc
xor
add
xor
add
add
add
add
xor
add
xor
add
xor
add
add
add
xor
add
add
add
add
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
add
add
add
add
insl
cmp
add
add
add
add
add
fs
bound
out
ss
cmp
inc
aas
adc
sub
xchg
aaa
sub
xor
std
xor
xor
push
aaa
or
adc
cld
aaa
test
ljmp
ds
aas
scas
xor
cmp
cmp
cmp
cmp
jecxz
cmp
fdivs
mov
cmp
add
add
xor
aad
pop
xor
xor
pushl
cmp
fldt
mov
pop
sbb
data16
pop
xlat
push
ja
cmc
jmp
jmp
xchg
loope
scas
push
pop
scas
cmp
in
test
shlb
adc
add
xchg
adc
jmp
mov
xor
addr16
in
pop
lods
dec
inc
aam
and
xchg
mov
adc
cmpl
sbb
int
inc
lds
sub
sbb
fwait
jle
and
add
