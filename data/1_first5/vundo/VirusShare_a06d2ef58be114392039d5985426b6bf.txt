pusha
in
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
orl
mov
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
dec
cmp
jge
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
push
and
push
push
mov
push
pushl
call
mov
push
call
mov
shr
push
not
and
push
push
push
pushl
call
push
call
mov
push
push
push
mov
push
pushl
call
push
xor
pop
mov
cmp
jb
mov
dec
add
in
sub
movl
movl
movl
movl
push
lea
push
push
call
add
cmpl
jne
push
push
push
push
call
leave
ret
les
mov
or
fnstcw
lds
add
pop
add
add
add
inc
add
js
jne
xor
push
add
xchg
add
add
sahf
add
add
nop
add
popf
add
imul
mov
add
add
add
add
add
jne
clc
add
add
pop
add
add
add
add
add
add
add
or
clc
add
inc
add
roll
mov
add
add
add
push
add
add
add
nop
add
add
add
add
fiaddl
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
add
add
add
add
or
add
cmp
jb
jb
movsl
add
adc
int3
add
add
or
jae
and
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
push
add
add
add
add
add
add
rolb
add
add
rolb
add
add
add
add
add
add
mov
fildl
std
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
movl
adc
add
add
adc
push
xor
inc
add
add
add
add
mov
add
add
pop
add
add
push
add
add
add
add
add
add
add
add
add
sub
pop
add
add
sbb
inc
add
add
add
add
push
add
add
dec
add
cmp
add
add
add
add
add
add
clc
add
add
add
popf
add
add
add
add
add
add
add
adc
rolb
mov
add
jno
sbb
add
js
add
dec
add
clc
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
inc
add
addl
out
ret
add
add
add
add
add
add
add
add
add
add
add
sbb
jae
movb
add
add
add
jno
adc
int3
add
add
add
add
add
adc
fiaddl
add
add
add
cmp
add
add
add
inc
add
add
fldl
add
lds
lret
add
repz
add
popa
add
add
add
add
add
xchg
jb
lret
add
add
arpl
lcall
add
jmp
add
add
jae
aam
js
js
mov
add
rolb
add
add
jb
inc
add
add
add
add
add
outsb
add
add
or
data16
xor
imul
nop
add
sbb
or
adc
add
pusha
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
out
dec
pop
adc
aaa
lret
adc
mov
cmc
xchg
call
cmc
test
std
and
sub
cmp
das
inc
push
in
or
xor
cmc
adc
mov
cld
rcr
pop
inc
push
push
push
pop
jg
jbe
dec
adcl
pop
or
sti
lret
sub
mov
mov
sub
cli
rorb
inc
inc
ficoms
cmp
repnz
sub
pushf
rclb
jb
cs
fs
cmpsl
mov
sbb
mov
dec
pop
hlt
dec
outsl
icebp
mov
in
pop
jo
dec
adc
mov
pop
fwait
out
sbb
mov
mov
cmp
xlat
aad
mov
sarl
sahf
clc
dec
dec
xchg
or
adc
pop
mov
mov
jo
sub
xor
dec
cmpsb
xor
jb
loope
rcr
push
push
inc
cltd
mov
pop
cmp
jns
testb
lret
popf
orl
or
lret
mov
into
inc
xor
subb
outsl
push
xchg
das
inc
repz
jmp
mul
jmp
adc
lods
dec
cmp
sti
dec
sti
test
inc
adc
iret
fnsave
fists
jbe
jae
sub
dec
sub
push
out
mov
cmp
std
loope
and
enter
and
mov
jne
fucomi
inc
cs
pushl
lahf
or
or
out
insb
xor
mov
or
xor
in
pop
push
mov
push
mov
pop
cmpl
sahf
and
jns
shrb
icebp
push
mov
mov
jns
mov
adc
negb
pop
pop
rcll
sahf
ret
sub
adc
dec
dec
sub
outsl
test
mov
sub
and
mulb
mov
clc
inc
xor
adc
in
and
fildl
test
xchg
sub
subb
call
and
push
lret
in
ja
popf
jns
es
repz
mov
xor
dec
xchg
es
jb
mov
mov
or
enter
daa
pop
fs
cmpb
std
ljmp
pop
inc
mov
hlt
adc
sub
mov
and
inc
push
jno
mov
dec
mov
xchg
lret
inc
or
insl
out
shll
mov
rorb
out
sub
mov
test
xor
cmpsb
mov
push
paddw
and
mov
ljmp
pusha
orl
fisubrl
push
cmpsl
das
sar
bound
pop
testb
inc
mov
lret
adc
push
loopne
dec
les
add
add
add
add
add
add
add
push
mov
push
push
push
mov
movb
mov
mov
movb
mov
add
push
mov
xor
mov
movb
add
movl
mov
mov
add
mov
mov
add
mov
mov
mov
movb
mov
mov
mov
cmp
je
mov
cmpl
mov
jle
pushl
push
call
mov
pop
pop
movzbl
sub
incl
test
jne
call
mov
mov
mov
movzbl
sub
je
pushl
incl
push
call
pop
pop
jmp
pushl
call
push
push
call
push
push
push
mov
pushl
call
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
jmp
lea
push
pushl
call
pushl
pushl
pushl
pushl
push
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
movl
call
push
mov
call
pop
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jl
ss
push
push
inc
jns
add
add
test
mov
out
mov
movb
gs
push
inc
xor
inc
adc
mov
loop
inc
testl
insb
das
gs
dec
push
pop
jg
outsl
cmp
cmpsb
push
mov
vpmuludq
test
ss
and
outsb
fimull
les
dec
outsb
dec
sarl
xchg
pop
or
sub
mov
mov
lahf
lea
dec
or
pop
xor
enter
loop
or
and
arpl
push
popa
dec
jmp
imul
insb
imul
mulb
popf
jne
adc
push
cli
xchg
movsl
ficomps
xchg
movsl
pop
xchg
aas
out
dec
leave
test
bound
push
inc
inc
add
js
in
nop
xchg
lds
sub
jp,pn
jp
test
fwait
mov
paddw
cmpsb
das
jge
pop
hlt
dec
icebp
jns
xchg
aad
out
shlb
push
xchg
out
ss
inc
add
xor
dec
sbb
in
scas
std
sahf
int3
fdivr
lods
out
mov
xchg
iret
loope
adc
arpl
add
dec
inc
jns
push
hlt
cmp
mov
xchg
mulb
or
adc
adc
pop
sub
imul
test
mov
loopne
xor
add
push
xor
pop
jbe
inc
adc
mov
xchg
xchg
mulb
es
gs
push
push
inc
xor
inc
adc
mov
xchg
xchg
mulb
es
loop
je
push
dec
or
stc
test
lds
ss
movl
adc
add
dec
out
in
push
sub
jae
adc
mov
sub
pop
pop
rcrb
sahf
sub
movsb
mov
or
jecxz
lret
jecxz
pop
aam
clc
in
cs
inc
push
mov
push
movsl
sbb
xchg
lret
xchg
addb
dec
push
and
cmp
aaa
mov
mov
dec
lods
iret
add
and
in
add
mov
gs
sbb
stos
cmp
xor
mov
inc
mov
push
sub
or
mov
push
adc
or
int
out
push
cltd
lahf
test
mov
movsl
jbe
mov
inc
shlb
out
adc
test
adc
and
adc
loop
and
and
test
mov
fs
jmp
ja
ret
xor
mov
addr16
dec
pop
shl
sub
out
rolb
xchg
inc
sbb
es
jne
sub
data16
mov
inc
cmp
scas
adc
cltd
test
dec
push
dec
cmp
sub
mov
mov
lock
jmp
inc
mov
leave
into
sub
in
dec
bound
jmp
jnp
ds
stos
inc
inc
sbb
fwait
jne
test
inc
aaa
lcall
mov
jne
call
out
cmp
mov
push
push
add
sub
in
sbbb
push
push
movsl
pop
mov
stc
cli
rcrb
add
sahf
pop
ret
mov
es
jne
pop
xor
sub
mov
nop
ja
lods
leave
rorl
out
mov
out
xor
pop
mov
inc
inc
pop
lea
mov
pop
push
push
or
ficomps
ret
imul
xlat
hlt
fdivrl
jp
jge
imul
mov
lock
mov
lret
push
arpl
stos
repz
pop
daa
push
add
mov
mov
stos
int3
push
js
mov
sub
jno
pop
out
pop
aas
mov
xor
out
mov
push
movsl
sub
cmp
out
jns
int
in
pop
outsl
out
mov
fnstcw
adc
ja
cmc
pushf
pop
sti
sub
xor
push
insl
push
push
push
insb
lret
clc
ljmp
lret
pop
inc
cmc
jg
jg
jnp
push
pop
lods
lods
push
add
sub
scas
dec
decl
cmp
ficoms
movsb
and
xchg
xor
push
inc
xchg
jge
lret
add
cwtl
push
clc
scas
insl
lock
mov
ret
shrb
pop
fsts
inc
mov
mov
in
gs
pop
mov
xor
daa
stos
jp
andb
jmp
mov
loopne
inc
xorb
lods
std
inc
aaa
sub
imul
cltd
out
xchg
push
ret
dec
xchg
aam
xchg
out
rorb
jne
clc
inc
lret
lret
mov
rclb
xchg
add
mov
mov
cmp
dec
rcrl
mov
mov
push
pop
xchg
mov
push
testl
and
and
jno
lods
push
jbe
inc
mov
jno
std
xchg
out
jmp
xchg
cmc
mov
mov
and
call
cmp
pop
add
sar
insb
jg
xorl
lods
outsb
xchg
movsl
push
imul
jne
in
fxch
popa
mov
mov
xorb
sbb
test
dec
ss
xchg
sub
mov
xlat
jmp
out
and
fistpll
push
jmp
inc
mov
inc
xchg
inc
add
aam
pop
xchg
ficoms
test
js
mov
loop
aad
sarl
xor
test
xchg
xor
insb
out
mov
jbe
jmp
mul
xlat
popf
cli
mov
mov
push
rolb
sub
ss
mov
inc
pop
movsb
pop
and
lods
ud2
in
mov
aas
loop
in
enter
jl
jecxz
xor
jle
iret
push
rolb
dec
jnp
es
cld
jmp
cmp
jns
jp
jmp
xchg
addr16
icebp
push
cwtl
cmc
sahf
sub
inc
fwait
insl
mov
rcr
test
push
cld
pop
jnp
pop
mov
adc
pop
or
xchg
inc
xchg
clc
vmovmskps
outsb
push
stos
sahf
insb
push
dec
loopne
cmp
lret
and
add
out
or
ljmp
cwtl
mov
dec
aas
roll
cltd
nop
push
pop
and
sub
push
test
fiadds
shll
scas
out
mov
mov
cmp
add
lods
pop
and
sti
aas
cmpsb
xchg
ja
xor
mov
out
cs
inc
sbb
and
lcall
lret
repnz
pop
nop
mov
scas
push
mov
nop
mov
adc
fiaddl
adc
xchg
and
mov
add
pop
mov
add
or
ss
dec
lcall
stos
jmp
cmp
lret
test
ja
ja
dec
mov
mov
loopne
pop
lods
mov
jg
test
xor
adc
push
push
in
nop
xchg
or
ret
int3
jne
dec
sub
roll
jns
fsubl
add
lods
xchg
cwtl
or
xlat
pop
cwtl
sub
or
xor
pop
mov
mov
sub
or
loopne
jmp
ficoms
int3
mov
fisubrl
loop
xor
push
mov
push
mov
cli
fsubs
xchg
sti
adc
loope
ljmp
xchg
xor
and
mov
jmp
cmpsl
movl
jmp
enter
sahf
ss
lds
dec
pop
xor
out
inc
cmp
add
xchg
loopne
sub
movsb
jmp
xchg
xor
popf
pop
popf
inc
sbbl
xor
cli
sbb
lcall
cmp
adc
les
ficoms
es
sbb
push
lods
push
mov
test
add
push
data16
movsl
mov
fstl
cwtl
sbbb
jmp
mov
sbb
fiadds
in
adc
fistps
jno
inc
xchg
jp
and
js
int
enter
push
out
dec
lds
dec
sub
sub
lahf
movsb
iret
sbb
test
outsl
mov
adc
mov
add
jecxz
test
cmp
cltd
xor
mov
dec
call
mov
nop
xchg
cmp
lret
add
push
lods
test
arpl
mov
push
adc
popa
orl
aaa
lret
mov
test
test
sub
aad
std
stos
lret
or
popa
push
jbe
mov
add
sti
mov
pop
inc
sub
dec
ret
leave
cmp
jmp
add
jo
xchg
idivl
cs
ljmp
push
mov
mov
mov
xor
dec
inc
lcall
lods
jecxz
test
and
loopne
imul
pop
sub
sub
pop
ds
ljmp
enter
sbb
jne
addr16
sbb
subl
xor
out
into
jmp
stos
shl
fistl
pop
jno
js
pop
sbb
mov
test
pop
xchg
pusha
ja
aam
notl
cltd
out
fs
push
push
ja
and
xor
outsb
aam
aaa
and
xchg
mov
int3
push
inc
mov
mov
repz
ret
inc
mov
jno
or
into
push
rcll
sub
mov
fmuls
cmc
fcmovu
dec
stc
cmp
jp
mov
stos
icebp
dec
sub
pop
sbb
iret
jnp
add
jnp
adc
sub
daa
out
ss
pop
adc
dec
jno
mulb
mov
sub
rorl
loop
jno
inc
cmp
xchg
mov
mov
mov
and
pop
clc
test
adc
aas
jl
aas
test
pop
jae
xchg
sub
cwtl
xchg
lods
ljmp
mov
lds
movsb
nop
mov
int
mov
xchg
or
int
fistl
sub
xor
jne
dec
pushf
mov
add
test
jmp
cmp
xor
pushf
jmp
push
aas
iret
jbe
push
shrb
lcall
pop
cld
ljmp
icebp
xor
out
push
icebp
icebp
loope
das
cmpsb
leave
or
and
pop
jnp
stos
les
out
mov
outsl
lcall
das
mov
jge
fistps
divb
fcmovnbe
push
adc
mov
push
iretw
pop
add
sub
dec
jb
add
aad
fwait
pop
popa
movsl
jae
pop
std
inc
icebp
inc
mov
pop
aaa
push
adc
fistps
aad
stos
test
sub
and
and
dec
lock
jg
mov
scas
pop
push
or
xchg
jle
pop
and
cmpsl
jp
loopne
rorl
imul
lea
mov
pop
orps
imul
xlat
xchg
pushf
or
xor
push
xlat
dec
scas
inc
enter
xor
mov
cmp
xor
and
movsb
dec
fs
adc
xorl
mov
xchg
out
loopne
pop
repz
aad
jmp
pop
es
and
mov
or
scas
mov
faddl
es
push
sarl
or
jge
pop
and
push
sub
or
add
dec
outsl
jp
xchg
adc
data16
inc
pop
mov
lock
xorl
mov
data16
push
outsl
rorb
mov
cmpsl
cwtl
lret
lock
pushf
mov
fisubrl
mov
repnz
mov
dec
xchg
dec
push
and
dec
cmp
popa
cltd
std
jnp
pop
pop
lret
sahf
push
sbb
mov
in
xor
mov
add
ret
loope
push
les
popa
inc
cmpsl
fwait
or
and
fs
inc
cmp
movsb
cwtl
fidivs
in
dec
lret
mov
mov
mov
pushf
xor
out
loope
or
add
jg
out
jne
sub
cmp
cmpsb
test
push
lcall
aas
ficoms
popa
out
fsts
fisttpl
adc
cwtl
es
repz
das
aam
loopne
xor
pushf
gs
push
xchg
popa
mov
into
xchg
cld
dec
inc
mov
cmp
dec
std
fdivrs
xchg
cwtl
dec
lret
mov
push
sbbl
adc
mov
jg
jae
xor
stos
iret
nop
sbb
push
repnz
xchg
sbb
adc
scas
pusha
arpl
fcompp
popf
cld
mov
in
adc
mov
addr16
xchg
sbb
rep
fistpll
idiv
in
xor
and
std
test
cltd
inc
pop
push
mov
jno
or
adc
gs
sub
sub
scas
fucomi
pop
cmp
imul
xchg
pop
daa
and
mov
fldenv
sbb
xchg
mov
push
mov
jne
leave
jl
xor
cmp
mov
inc
pop
mov
scas
orb
aam
mov
in
mov
mov
ret
push
ret
ret
push
scas
enter
scas
jecxz
loopne
ds
loop
arpl
mul
push
xchg
aad
push
stc
push
push
fistpl
dec
cli
inc
fwait
push
xor
in
xchg
sbb
loopne
imulb
clc
xor
sub
mov
jne
jb
in
cmp
out
inc
sbb
aam
ja
lods
jno
jmp
pop
lret
adcb
jecxz
mov
mov
mov
loope
stos
and
and
inc
lret
inc
icebp
imul
sub
pop
and
shl
jb
iret
imul
fdivrp
popf
inc
sahf
lahf
xchg
push
fstpt
push
rolb
pop
sbb
xchg
inc
push
mov
cmpsl
lahf
push
les
add
xchg
jae
mov
sub
ljmp
gs
adcl
sub
daa
mov
mov
dec
int3
adc
mov
mov
das
mov
pop
imul
pop
dec
scas
or
scas
xchg
add
arpl
fst
push
mov
mov
sub
ret
rol
jecxz
jne
jl
ss
mov
ret
repnz
sub
pusha
dec
dec
fmull
mov
mov
mov
dec
pop
mov
jo
lret
pop
pop
test
repz
adc
and
push
cmp
xchg
std
jo
popa
cmp
cmp
jecxz
push
mov
xor
or
mov
jne
int
xor
add
jl
push
inc
mov
pop
dec
pop
rcrb
mov
or
lock
iret
pop
scas
or
popf
dec
xchg
test
sbb
je
scas
pop
popl
aas
icebp
dec
pop
or
cs
lret
adcl
pop
dec
jl
in
in
popf
add
cwtl
in
ret
sub
gs
jg
sub
out
addl
or
das
jge
mov
mov
jnp
sub
jae
cmpsb
fmulp
lret
or
scas
das
jle
test
pop
mov
and
xor
mov
mov
stos
das
sub
adc
xchg
mov
jbe
add
iret
jae
int
ja,pn
and
arpl
push
daa
notl
cmc
inc
sub
mov
std
mov
lcall
mov
mov
arpl
mov
and
push
loop
cltd
pop
pop
mov
mov
or
inc
gs
fsts
xchg
jns
and
push
fistps
out
or
push
xlat
cwtl
pop
sub
push
int3
repz
jns
out
lahf
or
mov
fldcw
repnz
icebp
or
mov
jmp
jle
cmc
jmp
xchg
lcall
dec
jo
jnp
ljmp
pusha
adc
xlat
ret
sub
xchg
push
insl
and
sbb
and
lret
mov
mov
and
int3
xchg
lret
dec
jl
add
dec
movsb
icebp
scas
or
arpl
dec
mov
xor
sahf
jge
clc
mov
xchg
add
xor
and
mov
pusha
mov
stos
movsb
nop
push
leave
add
shl
pop
mov
xchg
pop
cld
mov
dec
mov
call
and
cmc
stos
fcompl
sbb
out
and
mov
adc
dec
sti
mov
stos
int3
push
push
pop
jbe
xor
and
pop
pop
jmp
sub
jne
subb
call
dec
mov
arpl
mov
mov
cmp
pusha
push
adc
out
pop
out
sub
sahf
or
cmp
adc
ret
xchg
dec
sub
repz
sbb
mov
or
into
xor
mov
outsl
leave
sub
add
mov
movsl
out
dec
inc
mov
loop
push
in
cld
sbb
aaa
jns
mov
mov
arpl
jecxz
repz
push
lahf
dec
nop
lret
sub
mov
mov
xor
mov
sbb
xor
cmp
mov
mov
fists
push
mov
iret
icebp
fadds
adc
or
dec
stos
dec
jbe
repnz
aas
jl
js
jns
hlt
cvtps2pi
and
mov
into
andb
mov
dec
decb
out
loopne
hlt
repz
in
cmc
mull
rep
pushf
lods
mov
pop
fcompl
mov
pop
aad
pop
fsubl
mov
aaa
cmp
cmp
ret
test
mov
lock
subb
dec
sbb
dec
xchg
cmp
cmp
xchg
rolb
dec
iret
cmp
xchg
adc
mov
in
mov
fcoms
imul
xchg
int3
mov
pusha
outsl
mov
ret
in
outsb
dec
sbbl
std
lock
dec
ret
jmp
sti
shll
cld
mov
push
pop
fs
testl
outsb
pushf
adc
sub
mov
dec
es
sub
cmpsb
out
mov
sub
sbb
mov
mov
popa
add
enter
loop
push
push
les
hlt
imul
inc
jno
mov
xchg
push
addb
xchg
jbe
dec
mov
es
jbe
mov
lahf
rolb
xchg
out
xor
fdivrp
inc
xor
cld
adcb
add
mov
xor
int3
and
loopne
test
fstp
jbe
mov
push
cmpsl
push
jp
pop
in
dec
jb
push
dec
xchg
lcall
dec
jmp
inc
and
mov
stos
movsl
pop
adc
pop
adc
add
jne
fadd
jecxz
movaps
and
cwtl
inc
mov
ds
mov
test
add
out
cmc
xchg
es
icebp
mov
lods
mov
stos
xor
cmp
mov
and
dec
xor
ret
scas
lods
adc
cmc
push
or
fidivs
imul
inc
or
aam
push
xchg
mov
enter
in
sarl
shrb
call
test
jmp
adcb
sbb
adc
neg
push
mov
xchg
adc
mov
or
cmp
jno
mov
mov
into
mov
xchg
pop
scas
mov
popf
inc
mov
ds
mov
clc
into
clc
sub
rcll
call
lea
adc
loopne
test
bound
je
or
iret
push
fs
in
outsb
pop
inc
icebp
movsb
mov
push
add
dec
repz
outsl
repz
aad
inc
dec
or
addr16
imul
xlat
stc
adc
gs
out
xchg
loope
mov
lret
xchg
inc
cmpsl
inc
or
ret
pop
jbe
cmp
repz
push
xchg
out
fcoml
clc
ljmp
loop
and
popf
sbb
lret
and
das
cmp
test
cmp
adc
add
insb
fistpl
cld
mov
jle
ret
mov
xchg
outsl
fdivl
dec
fbld
push
sbb
and
xor
jp
hlt
mov
sti
xchg
cmc
or
xchg
outsl
jge
push
std
repnz
pop
push
add
pop
pop
or
or
sbb
stos
fdivrs
sbb
inc
fdivl
test
push
mov
cmp
mov
pop
add
lock
xor
xchg
repnz
mov
xchg
lods
or
fdiv
mov
jns
jge
scas
xchg
clc
sub
push
or
add
xor
jno
cltd
cwtl
outsb
mov
data16
mov
shrl
fsub
clc
in
test
ret
stc
fbld
je
inc
mov
fwait
push
imul
mov
daa
insb
mov
jmp
sub
lods
popa
fsubs
push
adc
fldl
jbe
or
cmp
enter
xchg
rorb
aaa
cmp
nop
add
jge
jle
in
mov
pop
ret
sbb
mov
xor
sub
or
inc
mov
inc
and
outsl
test
stos
in
loop
mov
sahf
adc
les
loopne
movsl
dec
sahf
pusha
inc
int3
mov
mov
pop
push
xor
push
sbbb
cmp
pop
dec
mov
sub
repnz
int3
lret
cwtl
pop
sub
cld
or
and
pop
orb
jae
push
enter
mov
push
enter
shll
mov
jbe
fisttps
push
push
push
mov
inc
test
insl
adc
aad
pop
mov
pop
outsb
std
xor
xchg
lret
pop
out
inc
nop
push
repz
ret
dec
fistpl
inc
mov
repnz
imull
push
jo
mov
push
fdivrl
cmpl
add
sbb
or
mov
lds
fst
cmpsb
jne
mov
fisttpll
mov
xor
into
mov
push
mov
dec
icebp
mov
jne
cmp
enter
dec
pop
out
clc
or
sbb
or
daa
xor
mov
cmp
cmp
jae
push
add
dec
inc
in
push
inc
jbe
or
jmp
addr16
fists
push
cmc
jns
xlat
ds
jg
inc
sahf
aam
xor
ficompl
ds
xor
add
adc
mov
mov
bsr
aad
fs
pop
sub
sbb
push
movsl
push
sbb
in
cli
jo
push
cmp
push
sbb
sub
jg
in
mov
push
fs
pop
add
leave
or
adc
pop
xor
push
hlt
leave
xor
jne
scas
loop
mov
in
xorb
dec
fwait
xchg
jle
push
inc
jecxz
lods
int3
adc
add
push
cmpsl
fldl
sub
stos
jae
arpl
mov
dec
xchg
aam
lret
scas
ficomps
js
sbb
iret
sbb
imulb
lods
inc
or
sub
and
pop
leave
jmp
xchg
xchg
adc
xor
mov
hlt
dec
jns
incl
fbstp
mov
mov
jecxz
add
pop
push
out
stos
out
inc
std
mov
inc
iret
cli
jnp
add
mov
in
shr
or
out
cmc
lahf
xor
sub
sbb
packssdw
xchg
fiadds
and
push
rclb
sbb
inc
inc
sub
outsl
xor
push
int
pop
xor
and
pop
xchg
das
addr16
xchg
shll
push
jnp
pusha
cmp
mulb
into
stos
adc
lret
stc
data16
mov
jo
mov
xlat
and
adc
mov
jle
pop
popf
enter
into
mov
cmp
push
imul
cmp
ss
cmp
and
cmc
in
push
pop
cmp
out
add
push
push
pop
cmp
fists
add
jb
cld
jb
sbb
dec
add
enter
mov
mov
xor
sbb
dec
pop
push
aaa
loop
mov
and
je
mov
sbb
xchg
sub
dec
xchg
cltd
iret
mov
pop
inc
mov
mov
add
je
lcall
flds
mov
pop
movsl
pop
dec
add
daa
push
call
inc
das
mov
repz
pop
mov
push
add
mov
sub
fwait
insb
repnz
aas
sub
insl
ljmp
stos
sub
xchg
arpl
inc
xchg
test
ja
mov
dec
inc
jo
setnp
xor
in
lret
jmp
loopne
mov
imul
pop
jb
xor
out
filds
push
dec
fmull
mov
fimuls
inc
push
arpl
xchg
or
out
loop
adc
mov
pop
push
in
mov
stc
imul
jne
dec
xor
jle
dec
rcl
pop
mov
mov
orl
inc
xor
inc
adc
mov
xchg
xchg
mulb
es
gs
push
push
inc
xor
inc
adc
mov
xchg
xchg
mulb
es
gs
push
push
inc
xor
inc
adc
mov
adc
out
repnz
xchg
out
adc
xor
inc
xor
adc
dec
dec
sub
xchg
mov
cmp
sub
int3
int3
int3
int3
sub
xor
arpl
sub
or
ret
dec
jecxz
adc
and
push
in
inc
fnsave
push
cmp
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
push
lahf
jge
and
pusha
fldl
jmp
mov
jg
call
stc
mov
or
daa
call
pop
int3
scas
cld
inc
loop
push
sti
mov
jl
dec
xorb
dec
mov
cmp
lods
ret
xchg
loope
in
push
lea
mov
orb
pop
ret
sub
fidivrs
das
jp
lods
push
mov
push
roll
int
sub
jne
es
ret
and
inc
jecxz
rcll
into
int3
cwtl
cs
and
arpl
pop
xchg
dec
dec
or
rcr
fwait
mov
inc
dec
lods
adc
sbb
stc
or
ret
xchg
sbbb
xchg
pop
repz
sbb
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
movsl
leave
adc
jp
jb
bound
push
test
push
jecxz
lcall
and
jg
outsl
jmp
adc
dec
outsl
testb
aam
icebp
ss
push
or
push
adcl
lods
pop
mov
jae
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
in
cmpsb
out
scas
and
xchg
xorl
push
lahf
or
inc
xchg
and
jns
int
sti
xor
das
xor
mov
fadds
add
scas
and
aam
pop
icebp
or
leave
outsl
and
or
cmp
fcoml
push
add
shrl
and
push
and
fsub
and
add
or
inc
push
xchg
clc
jmp
lods
sbbl
mov
cmp
adc
jp
scas
jno
movsb
movsb
cwtl
mov
cmpsb
scas
shlb
daa
daa
mov
adc
cmpsl
daa
xchg
pop
arpl
mov
push
cmpsb
popf
insb
push
or
and
insl
sub
mov
dec
jo
inc
in
jg
xchg
sahf
push
or
adc
jnp
pusha
std
fisubl
dec
cmpsl
pop
or
mov
jl
pop
sub
fstp
testl
dec
sub
data16
or
adc
test
xchg
jo
repz
jnp
ja
xchg
popa
shlb
and
repz
mov
jnp
and
addr16
or
cmp
inc
hlt
push
mov
bound
clc
jl
pop
adc
adc
scas
test
jg
jg
testl
inc
sarl
mov
stos
mov
add
adc
inc
mov
cs
add
mov
sub
jl
lds
mov
mov
aaa
les
xlat
int3
add
hlt
outsl
rolw
adc
fdivs
imul
sbb
mov
jmp
mov
fs
cmc
cmp
mov
mov
fdivrp
xlat
ret
es
cmp
sti
les
and
mov
adcb
ret
push
test
std
adc
pop
out
adc
push
lcall
in
in
ffreep
imulb
pop
stc
mov
inc
fbld
das
out
into
popa
dec
ds
cmp
xchg
push
xor
push
ret
cmp
adc
jbe
mov
mov
test
loop
iret
xchg
jg
mov
or
daa
push
jecxz
stos
test
mov
pushf
push
int
inc
sarb
push
flds
push
jmp
jecxz
nop
aad
ljmp
adc
cld
mov
mov
add
movsl
aas
and
in
push
jbe
repz
and
adc
sbb
nop
nop
mov
jmp
mov
imul
or
and
inc
jae
ret
outsl
inc
test
mov
sarl
and
pop
mov
aad
test
or
inc
or
cld
gs
jg
out
pusha
mov
cwtl
inc
sbb
js
add
mov
sbb
jp
daa
sub
add
xor
push
mov
daa
pop
jnp
mov
adc
mov
xchg
sahf
repnz
insl
adc
ljmp
push
mov
in
xor
xor
movsb
add
jae
pop
sub
pop
stos
outsb
ror
pop
scas
fistps
and
cmp
je
or
in
cmp
popf
push
and
test
shrl
dec
push
sbb
in
jmp
or
sub
adc
into
repz
cli
adc
adc
inc
in
mov
adc
push
jecxz
or
add
sub
add
data16
ja
xchg
mov
sub
push
rcr
lret
dec
insb
and
js
or
xlat
and
adc
test
cmp
add
imul
push
call
adc
mov
loope
or
int3
add
bound
int
xchg
push
pop
mov
mov
and
inc
dec
and
divb
and
mov
inc
call
jns
mov
pop
mov
lret
sub
insl
outsl
fnstcw
push
test
push
test
call
fcmove
hlt
xor
arpl
inc
push
fistl
lret
sub
outsb
or
jp
sub
mov
idivl
aaa
cld
aad
lock
movsl
sar
aam
mov
dec
loope
dec
iret
xchg
lahf
mov
xchg
xchg
push
hlt
jmp
jle
cmp
xchg
push
jbe
js
jno
aas
push
cltd
popa
pop
mov
js
adc
mov
and
test
andb
or
inc
outsl
in
jecxz
divb
insb
rcl
js
sub
sbb
or
int3
rolb
and
adcb
push
fimuls
push
xchg
mov
insb
in
jns
cld
lahf
jg
or
loopne
nop
out
shl
add
xchg
rcr
mov
and
xchg
xor
dec
fwait
dec
ffree
fisubrl
sub
push
ret
aam
adc
into
sub
movsb
xchg
xchg
or
ss
inc
sbb
js
rcrl
mov
data16
adc
loope
mov
repnz
pop
int
loopne
aas
dec
fs
loope
mov
sub
jl
dec
add
pop
push
cld
ret
fldt
in
inc
and
out
rorb
loop
dec
xchg
mov
adc
in
sbb
hlt
dec
ljmp
out
push
je
loop
xchg
inc
into
xchg
adc
mov
out
sub
mov
cld
add
fwait
and
pushf
and
lds
and
inc
fstps
lods
popa
push
sub
pusha
pop
inc
test
aam
dec
enter
pop
mov
stc
js
cmp
out
mov
adc
dec
rclb
mov
lahf
xchg
in
daa
mov
into
sahf
insb
nop
mov
cmp
mov
mov
add
mov
fimuls
lea
mov
mov
fnstcw
add
and
sub
inc
lods
std
stos
stos
movsb
or
xor
test
iret
fbstp
xlat
lret
or
stc
mov
mov
mov
or
lcall
iret
lock
xchg
and
jbe
in
shl
je
sahf
loop
xor
ficompl
mov
loope
jo
mov
pop
lret
pop
outsl
movsb
inc
dec
mov
insl
sbbl
test
pop
and
out
sub
jae
dec
js
outsb
add
adc
dec
in
or
cmp
popl
jae
test
clc
scas
add
pop
cmp
insb
jbe
out
fcompl
in
lret
iret
dec
dec
dec
hlt
ljmp
mov
stc
das
mov
jno
lods
adc
xor
aad
dec
mov
loope
cmc
scas
adc
jmp
lods
xlat
mov
test
hlt
rorb
in
jae
cmp
or
test
and
jge
pop
ret
push
hlt
push
in
jb
daa
negl
dec
xchg
lds
lcall
shrb
sbb
sbb
out
cmp
fnstsw
imul
clc
cmc
inc
vpcmpgtd
adc
push
pop
sub
jl
mov
in
cmp
jbe
ljmp
into
pop
cmp
ja
repnz
adc
stc
sbb
inc
fimuls
in
inc
mov
jbe
aam
jns
clc
push
rol
cmp
xor
lcall
sbb
mov
lods
cli
cltd
sbb
movsb
out
mov
nop
push
clc
loopne
or
das
loop
pop
jle
dec
cmpsl
dec
add
add
xchg
cmpsb
cmp
mov
xor
inc
in
lods
xchg
sbb
jno
cmpsb
arpl
std
sbb
sarl
scas
cmp
add
int
jns
inc
lret
sti
js
cmp
mov
clc
push
std
leave
sbb
outsl
sub
imul
ds
ret
mov
test
cmp
fnstsw
xchg
std
popl
xor
fwait
xchg
outsb
jo
mov
sbb
jno
sbb
pop
dec
ret
imul
bound
adc
push
add
cmp
jl
test
je
xchg
lcall
daa
xlat
mull
sahf
orb
push
pop
popa
dec
jle
shll
jnp
xchg
clc
clc
and
mov
sbb
insb
add
cwtl
push
jo
pushl
mov
sub
push
rclb
out
jae
ljmp
popf
push
std
in
and
lods
or
xchg
push
pop
cwtl
mov
xchg
leave
iret
sbbl
fsts
test
in
push
add
or
out
jp
movl
cmc
aam
inc
mov
jecxz
jne
cmp
das
das
movsb
rcr
sub
jge
scas
mov
repnz
xlat
stos
push
jg
add
and
pop
or
push
cmpsl
or
mov
lods
sahf
sbb
movsbl
lcall
jbe
cmpsl
ljmp
cmp
loop
cld
pop
pop
xor
or
mov
or
and
jno
mov
icebp
sub
dec
addb
cmp
push
cltd
iret
std
test
in
stos
push
or
ret
sarb
mov
add
lret
popa
pop
rcr
sarb
xor
sbb
outsb
ss
in
xlat
lcall
push
inc
mov
mov
jl
gs
out
pop
lret
pop
enter
sahf
xor
fsts
movsb
icebp
rorl
inc
cmp
sub
and
fnsave
mov
ret
in
push
insb
adcb
xor
xchg
sbb
inc
lret
push
xlat
xor
aas
loopne
sbb
adc
cmp
or
mov
inc
in
xchg
mov
popa
shrl
lds
mov
and
ret
dec
sti
dec
cltd
inc
and
call
das
repnz
repz
divps
rcrb
pop
jno
mov
cmp
sbb
insb
pop
mov
xchg
lock
mov
fcmovnb
push
xlat
sub
mov
jl
pusha
push
outsb
bound
xor
int
lcall
mov
shlb
cmp
repz
push
sub
mov
or
test
jle
out
out
test
sahf
dec
outsb
daa
sub
in
sub
hlt
test
adc
ljmp
iret
cmp
pop
mov
loop
sbb
cli
push
push
loop
add
sahf
pop
hlt
xor
jp
cld
insb
lods
and
jecxz
cld
insl
imul
xor
push
daa
lcall
mov
cld
inc
ss
mov
pop
push
lahf
adc
lods
sub
lods
xor
mov
ja
xor
sahf
dec
jle
sbb
cmp
add
jle
leave
adc
jns
or
inc
sub
adc
jb
pusha
lcall
out
fidivs
or
or
mov
inc
test
pop
popf
mov
inc
xchg
pop
adc
or
xor
mov
aad
jnp
int3
loop
xchg
data16
jb
scas
mov
and
push
xchg
xor
test
mov
jp
test
ret
sub
jne
push
mov
push
icebp
xchg
or
sbb
lret
pop
and
xor
sbb
and
sbb
pop
sbb
aaa
leave
rorb
jmp
cmpsb
xor
lcall
sbb
sahf
hlt
je
jno
test
out
mov
cmp
sub
adc
xchg
sti
insl
add
adc
mov
cs
xchg
lds
mov
dec
lret
cmp
movsb
mov
and
lea
inc
sub
jne
push
jnp
or
pop
cmpsb
push
inc
int3
mov
fisttpl
and
mov
into
movl
cltd
pop
ret
dec
add
stos
imul
scas
jl
or
shrl
aam
or
cwtl
es
cmp
aam
xor
adc
jge
movsl
xor
div
inc
pop
fisubs
and
pushf
inc
negb
ss
xchg
inc
hlt
mov
xchg
mov
sbb
adc
add
push
push
int
fcmovnu
repnz
je
aaa
push
pop
cmc
jo
mov
movsl
out
push
adc
jmp
inc
mov
xchg
sbb
sbb
jmp
lcall
pusha
lret
aam
inc
push
xor
insb
mov
les
movsl
or
scas
or
outsl
add
cli
arpl
jnp
jge
idivb
scas
mov
jae
mov
mov
cmp
xlat
add
inc
outsb
fdivp
mov
and
mov
shufps
popf
adc
rolb
cltd
fnstcw
in
mov
xchg
pop
adc
sbb
or
in
inc
mov
daa
push
jmp
aam
xor
xor
hlt
mov
cmp
xchg
sbb
cmp
push
mov
add
or
and
shrb
popa
mov
inc
rorl
in
lods
divb
jne
mov
stos
cmp
test
sub
cmp
dec
sub
dec
xchg
addb
popf
ljmp
pop
jge
push
sar
push
stos
dec
adc
aam
or
pop
dec
sbb
mov
jl
dec
enter
jno
or
mov
mov
mov
or
cli
add
les
fidivs
dec
push
sbb
xchg
test
rcll
mov
cmp
rorb
sarl
dec
sbb
adc
sbbl
mov
mov
stos
and
in
push
jnp
mov
sub
pop
cld
in
push
xchg
or
iret
aas
dec
xor
in
and
jmp
fcmovnu
in
fldenv
sarl
in
mov
icebp
imul
aas
mov
aas
pop
aaa
pop
xchg
adc
jmp
push
xor
fidivl
testb
movsb
pop
out
enter
mov
pop
inc
xchg
mov
int
adc
jp
daa
mov
hlt
pop
add
sbb
push
mov
fwait
ljmp
xor
imul
pop
popf
pop
or
call
sub
push
mov
aaa
pushf
xchg
or
push
test
cmpsb
mov
or
xchg
xorb
dec
aam
and
lds
jg
and
pusha
repnz
rol
cli
outsb
xor
movsl
cli
int3
ficoms
jle
adc
fsubrl
adc
xchg
je
mov
dec
mov
mov
add
sbb
movsl
add
andb
sbb
test
shlb
cmp
jecxz
cmp
push
daa
les
imul
outsb
icebp
cli
addr16
or
add
pop
movsb
cmc
push
test
add
aam
push
int3
in
loopne
xor
push
xchg
pop
mov
call
add
cwtl
lret
xchg
ljmp
fadds
add
cmp
jecxz
mov
cmpsb
lods
out
dec
jl
nop
inc
adc
inc
mov
add
jl
mov
sbb
xor
stos
les
test
mov
sbb
rorb
pop
fdivrp
mov
add
sub
ret
sbb
ljmp
ss
mov
jbe
pop
icebp
sbb
int
pop
lret
or
add
mov
out
dec
rcll
mov
bound
xor
mov
std
and
mov
mov
mov
or
xchg
mov
fidivs
push
dec
cltd
imul
push
int3
push
loope
jmp
xor
or
add
adc
shrl
mov
cmp
stos
cmp
aad
mov
imul
inc
mov
enter
pop
or
mov
pop
out
repnz
scas
push
je
leave
loopne
or
data16
insb
movsl
cmpsb
aaa
mov
lods
pop
or
pop
jp
gs
mov
mov
enter
sarl
les
mov
xor
sub
xchg
lods
dec
movsb
test
lds
addr16
bound
push
imul
push
repz
rolb
xorl
jg
in
ljmp
or
imul
popa
pop
inc
pop
mov
repz
std
cltd
shll
pop
je
lods
les
sbb
jg
sub
or
in
lods
jl
lcall
sbb
test
lcall
rcll
lret
loopne
cwtl
jp
sub
fidivrs
fcmovu
test
repnz
and
idiv
sub
mov
xchg
dec
jmp
insb
cmpsb
mov
pop
cmp
add
or
pop
std
call
leave
iret
sub
repnz
xchg
xchg
jne
cmp
imul
cs
lods
ret
mov
mov
js
ja
fdiv
jge
jnp
arpl
sbb
hlt
data16
mov
or
out
and
xchg
or
mov
or
out
das
ret
frstor
adcl
sub
aas
xchg
cmp
mov
in
cmp
sub
repz
sbb
jae
sbbb
test
cld
push
outsb
xchg
dec
js
or
in
lcall
xchg
fistpll
lahf
enter
mov
pop
mov
jecxz
xor
or
ljmp
test
jg
ds
out
cmp
pop
insl
movsl
mov
in
push
lods
jg
idivb
jnp,pn
aaa
inc
jno
sub
jmp
push
mov
fs
jnp
cmp
mov
out
pop
jg
stos
mov
push
sbb
pop
out
pop
clc
mov
add
pop
xchg
mov
std
xchg
fisubrs
or
cmp
push
or
test
negl
imulb
stos
bound
push
mov
jo
or
mov
outsl
pop
test
pop
xchg
xchg
aad
outsl
push
pushf
cmpsl
push
dec
xchg
inc
jo
call
xchg
loope
dec
je
xchg
inc
mov
fistpl
icebp
sahf
mov
stos
xchg
mov
jnp
sub
popa
shlb
repz
jmp
movq
movsl
loope
push
mov
jecxz
fmul
adc
fcomi
mov
xor
pop
add
jg
inc
imul
mov
pop
xchg
mov
shll
jge
cmp
popa
enter
xchg
jb
push
les
mov
push
sub
dec
aad
cwtl
mov
and
cmp
push
sbb
mov
jecxz
out
sahf
aad
jb
mov
jbe
dec
mov
or
xchg
dec
movsb
les
sahf
mov
xchg
aaa
scas
or
cmpb
xor
es
push
mov
jae
andb
inc
loope
lret
mov
inc
movsb
inc
xchg
shr
movsl
mov
cmpb
popa
aad
sti
sar
int
xchg
jge
cmp
outsb
test
jns,pt
mov
mov
stos
int3
stos
lods
cmp
test
inc
fidivrs
repnz
mov
sub
inc
test
lods
lods
lahf
or
rcll
mov
aam
fwait
or
inc
cmp
inc
sbbl
out
stos
jmp
lds
sub
mov
rolb
xlat
nop
sbb
sarl
aam
les
addr16
test
movsb
dec
out
inc
jns
fnstsw
pop
xor
cmpsb
dec
shrb
lds
sub
push
popa
dec
imul
test
daa
loopne
cltd
push
pusha
and
aaa
movsl
xor
out
jo
insl
ret
sub
sbb
add
mov
and
fcompl
cmp
call
mov
sub
add
jge
cmp
cli
push
repnz
mov
dec
shll
sbb
push
inc
adc
out
dec
add
or
fisttpl
jno
sahf
lret
or
jmp
inc
add
das
inc
adc
fs
xor
mov
inc
cltd
mov
pusha
daa
and
in
adc
stc
push
mov
add
loopne
sbb
int3
mov
cld
pop
sbb
into
fsubrl
dec
pushf
mov
xchg
push
bound
aad
ret
enter
fisubs
cmp
test
mov
mov
pushw
xor
sbb
lods
sbb
fdivs
and
rclb
mov
test
xchg
or
dec
ljmp
xchg
push
xor
pop
and
leave
jg
bound
xor
stos
fldenv
cmp
jmp
mov
push
cwtl
lock
mov
call
ss
out
xchg
add
mov
lods
dec
mov
sub
add
cmpsl
imul
je
rcll
or
xor
das
std
cmp
jmp
imull
mov
mov
dec
stos
imul
mov
gs
ss
hlt
cld
xchg
ret
jae
insb
loopne
mov
hlt
fsubrs
rcrl
push
pop
arpl
dec
and
int3
push
orl
sti
sub
arpl
scas
mov
pusha
cs
inc
mov
js
int3
fcoml
or
jbe
sub
stos
and
adc
mov
cmc
inc
icebp
xchg
test
in
pop
push
bound
stc
pop
mov
dec
cmpsb
cmpsb
lods
lea
xor
dec
sbb
mov
ror
adc
icebp
andl
bound
sub
adcl
loope
inc
xchg
fs
fnstsw
popa
sub
mov
mov
jp
fwait
inc
mov
xchg
mov
mov
jg
stc
mov
add
popl
pop
in
in
push
cmp
lods
pop
jmp
in
movsb
pop
jl
in
lret
jmp
mov
dec
sub
out
mov
test
call
int
jge
mov
sti
xchg
cmp
int3
jl
xor
sbb
jo
lret
je
gs
add
test
popl
inc
arpl
bound
xchg
sbb
pop
fistl
sub
xor
outsb
lcall
mov
or
loope
add
or
sar
iret
pop
cmpsl
and
lds
icebp
incb
je
imul
clc
les
sbb
push
xchg
subb
xchg
or
scas
mov
jo
cltd
pop
shlb
inc
push
fs
mov
jg
cld
inc
sbb
dec
rcl
dec
adc
pop
test
sar
xchg
mov
push
jno
frstor
pop
xchg
cli
dec
push
dec
adc
leave
fs
dec
cmp
test
lock
xorb
dec
sbb
in
xchg
jge
sbb
mov
popf
inc
pop
jle
jp
pop
cmp
rolb
push
enter
sub
je
add
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
std
push
in
inc
fnsave
mov
mov
or
cmp
or
sbb
int3
int3
int3
int3
mov
insb
hlt
mov
in
icebp
fldenv
fs
add
xor
int3
aad
hlt
in
xchg
xchg
or
push
gs
jne
gs
jo
and
xor
push
inc
push
lds
xor
xchg
test
dec
mov
add
adc
insb
push
inc
inc
and
mov
mov
mov
ja
push
ljmp
jmp
popa
jo
jnp
pop
adc
scas
jge
aam
imul
xor
shlb
fwait
sbb
test
movsl
xor
test
aam
shl
je
or
in
rclb
mov
add
stos
rcrb
cltd
add
adcl
imul
dec
mov
push
stos
pop
adc
mov
cli
xor
lret
jbe
shrb
sbb
pop
shl
cld
movsl
test
add
fwait
mov
testl
fiaddl
aam
sbb
push
fisttps
shrb
cmc
dec
pop
mov
mov
adc
cli
popa
xor
aam
in
cwtl
out
test
or
mov
movb
cmp
std
and
push
dec
mov
mov
lret
ljmp
shlb
adc
jno
je
inc
les
aas
shr
cmc
mov
fcmovnb
leave
jl
adc
add
jno
push
push
jne
mov
out
xchg
movsl
mov
shl
test
push
inc
fs
gs
adc
and
xor
aad
hlt
in
xchg
xchg
test
push
inc
fs
gs
adc
and
xor
aad
adc
leave
enter
jmp
out
pop
xchg
in
push
movsl
aas
xchg
testl
pop
mov
imull
adc
sbb
iret
sahf
pop
das
aam
test
jmp
in
popa
pop
lds
push
xor
add
and
mov
stos
mov
cmp
rcrb
cld
insl
add
sbb
or
nop
mov
mov
ret
rorl
inc
inc
leave
inc
pandn
jecxz
int
insl
call
jmp
insb
aam
sbb
sbb
mov
xchg
sbb
inc
subl
sbb
jno
je
or
jbe
fisubl
lret
mov
subb
in
cmpsl
push
adc
test
lods
pop
mov
subl
loop
outsb
jmp
hlt
lret
jb
rcl
loopne
add
push
testb
mov
xchg
inc
rolb
dec
push
cmp
lea
fucomip
fs
dec
cmpsl
jmp
ret
push
sbb
dec
fiaddl
adc
sub
stos
adc
jae
jbe
inc
rolb
loope
or
jae
xor
jbe
and
fldenv
les
sti
sbb
les
sub
daa
sbb
cli
mov
aaa
scas
pusha
mov
arpl
adc
pop
dec
inc
lret
mov
mov
or
push
or
scas
rcrl
add
mov
mov
insb
push
sbb
sbb
dec
mov
mov
pop
jge
mov
pop
adc
out
out
sub
pop
adc
cmp
inc
inc
aad
pusha
je
jmp
sbb
jno
xor
add
jge
sbb
sbb
xchg
push
push
sbb
dec
lods
inc
adc
std
out
push
xchg
pusha
adc
gs
pop
negb
sub
push
adc
mov
cltd
std
mov
pusha
fdivs
ja
jno
jle
xlat
or
or
call
jmp
shrl
lret
jmp
loope
xchg
iret
mov
addr16
sysenter
jecxz
inc
jno
ds
add
fidivrl
and
xchg
mov
data16
cmp
leave
cmp
or
daa
cmpb
and
jle
addb
or
inc
mov
fs
mov
mov
dec
xor
mov
mov
mov
fldcw
into
push
inc
addr16
and
pusha
leave
aad
mov
pop
push
out
sbb
repnz
jmp
sub
sub
jbe
xchg
adc
andl
popa
sub
fiaddl
jb
jle
mov
lret
add
sbb
stc
cmp
leave
mov
pop
sub
mov
ds
int3
xorb
xor
jne
and
mov
das
adc
int3
adc
jns
adc
rdmsr
xchg
movq
push
mov
lock
jmp
stc
dec
dec
pop
popa
nop
hlt
push
fnstenv
rorl
test
shrb
dec
pop
ljmp
loopne
add
xor
mov
cmpsb
jmp
pop
add
ds
imul
mov
call
movsb
cmp
cwtl
lea
jae
aad
pop
sbb
cltd
lods
mov
push
mov
enter
test
dec
movsb
xchg
and
push
pushf
cmpb
mov
mov
aaa
pop
pushf
or
dec
in
mov
movsb
push
push
sbb
xchg
sub
pusha
jae
inc
jae
mov
in
fisttpll
leave
das
jo
data16
xchg
xchg
mov
lods
insb
jbe
mov
add
sbb
lods
cmp
sti
adc
cltd
pop
inc
jmp
adc
nop
enter
stos
xor
and
es
push
jno
push
outsb
fbstp
es
lahf
dec
adc
test
jb
push
and
stc
cmp
je
cld
js
jp
xchg
pop
mov
jo
inc
add
jecxz
xchg
int
movsb
stos
into
ret
js
xor
sub
fwait
push
lret
icebp
jno
xchg
dec
cmp
repnz
aam
xchg
cmp
iret
aas
sbbb
aad
std
jno
mov
jae
mul
ja
xchg
mov
jecxz
mov
call
and
pop
aaa
xchg
mov
ret
lcall
xchg
faddl
sti
xor
dec
fs
add
fstpt
xchg
icebp
xor
adc
lods
dec
or
es
imul
mov
mov
lret
mov
push
add
shrb
data16
cmp
in
cmp
jge
in
ret
push
push
imul
int3
push
negb
inc
xchg
fildl
or
pop
inc
jae
xchg
pop
add
lods
mov
sbb
push
add
scas
xchg
ss
mov
out
pop
enter
dec
pop
fimull
out
cltd
inc
into
cmpsl
frstor
or
sbb
outsb
cmp
or
mov
mov
hlt
loop
pop
sbb
or
ret
push
and
aas
xlat
outsl
inc
movl
adc
jl
rcrb
jl
mov
iret
mov
pop
lods
xor
add
add
sarb
and
icebp
sub
mov
or
xor
dec
shlb
mov
fiaddl
mov
pop
push
and
or
fdivrs
ret
cmc
out
push
inc
aad
roll
ret
mov
hlt
lods
scas
fwait
inc
icebp
pop
cli
sahf
push
cs
adc
ret
ret
loop
leave
stos
ret
mov
mov
call
mov
lods
adc
out
lock
mov
mov
xor
push
in
pop
out
les
hlt
movl
jle
xchg
out
cmp
pop
into
dec
es
mov
xchg
dec
or
into
js
out
leave
xor
push
lahf
les
add
int3
lahf
cmp
push
aam
jmp
add
pop
hlt
ret
or
das
aaa
pop
adc
cmp
cmpsl
mov
inc
dec
pop
sub
mov
jp
push
into
dec
jae
popf
jp
xchg
xor
jmp
cmp
fwait
outsb
mov
xor
sbb
jno
lret
or
in
inc
push
sbb
lret
adc
or
and
pop
fidivrl
cmpsb
inc
daa
inc
xor
mov
daa
jne
or
addb
sbb
es
adc
cli
lcall
mov
pcmpeqb
roll
xchg
xchg
jno
add
fsubrs
dec
cmc
outsb
data16
test
cmp
push
or
add
ljmp
or
sti
dec
test
dec
mov
sub
movsl
and
aaa
mov
rorb
and
lock
mov
inc
adc
cmpsl
sbb
xchg
ret
adc
mov
mov
scas
xor
int3
test
inc
les
sbb
lret
je
adc
add
fstl
xor
jg
or
out
ds
jge
pushf
mov
fsubr
or
js
sub
xchg
push
cmc
xchg
jns
mov
jge
fnstenv
je
test
das
mov
sbb
sbb
je
test
bnd
shlb
or
fsubp
push
mov
out
sti
pop
cmp
insb
lret
sub
adc
adc
sbb
sub
inc
mov
xor
notb
fdivrs
sub
test
push
pop
pop
or
rcll
ds
pop
pop
in
add
inc
leave
mov
push
movsl
js
mov
loope
fs
add
xchg
add
or
push
add
jno
repnz
inc
mov
jbe
es
notb
mov
punpckhdq
mov
gs
aas
mov
inc
ja
popa
cmpsb
fsubrl
jg
adcb
sbb
fmuls
lods
adc
push
push
xlat
mov
fsubrl
lods
jns
bound
loope
inc
in
sahf
inc
cmpxchg
inc
sub
push
ficomps
sbb
push
xchg
cmpsl
xor
imul
repz
jnp
push
lret
repnz
push
pop
dec
aas
mov
or
cmp
ljmp
testl
mov
and
ja
jb
imul
xor
mov
sub
je
inc
sbb
and
imul
and
fwait
in
push
cmp
dec
sub
jle
movb
xchg
cmp
and
cld
cs
outsl
sub
mov
mov
dec
lret
mov
scas
xlat
iret
movsl
test
mov
jmp
imul
cld
les
jmp
mov
mov
in
repnz
gs
mov
es
jge
outsb
pop
dec
cmp
arpl
sbb
fnstsw
or
movsb
push
cmp
push
lods
fs
sti
adcb
icebp
addw
cmpsl
mov
test
into
xor
test
cwtl
fidivrl
fnstenv
fistl
pushf
std
aad
loope
mov
push
inc
lahf
in
dec
inc
push
inc
pop
mov
pop
xor
xchg
pop
or
lahf
loop
add
push
clc
scas
xchg
xor
insb
inc
add
inc
xor
cmp
pusha
inc
adc
jnp
fxch
mov
dec
or
jecxz
or
xchg
andps
push
adc
lret
shll
mov
xor
add
and
clc
fsubrs
imul
loope
sub
xchg
sbb
push
std
push
je
add
xchg
clc
sarb
push
in
and
adc
sahf
fwait
inc
adc
xor
adc
fwait
jecxz
hlt
mov
cmp
dec
test
cs
out
or
mov
xlat
cltd
mov
dec
loope
pop
adcl
les
xlat
or
stc
lret
sbb
mov
sbb
loope
icebp
enter
and
je
mov
or
rclb
fists
cmp
rclb
fucom
dec
jns
mov
dec
pop
mov
stos
pop
iret
pushf
mov
xchg
dec
outsb
popa
sbb
xor
mov
rcl
pop
test
xor
sbb
mov
sbb
icebp
jbe
jl
fnsave
pop
in
lret
lock
dec
mov
bound
fwait
lcall
not
enter
push
jbe
jp
adcl
mov
pop
fadds
imul
and
gs
insb
jo
jg
sub
pushl
shll
fidivrl
push
xlat
mov
xor
jbe
cmpsl
push
jb
into
sbb
filds
test
out
cwtl
in
mov
in
subb
cmp
ds
add
cmp
adc
movsl
cli
inc
mov
aad
sub
nop
push
ret
push
add
mov
jmp
sub
lret
data16
or
inc
je
pop
push
shlb
test
pop
sbb
sbbb
lods
xorl
out
leave
mov
int3
jae
inc
fstps
or
and
scas
imul
call
adc
insl
test
int
mov
popa
mov
and
xchg
push
scas
mov
popf
lods
pusha
stc
xchg
mov
subb
mov
sti
push
add
inc
mov
sub
inc
dec
add
test
and
pop
and
lcall
mov
lret
mov
out
iret
cld
push
shlb
test
mov
add
data16
mov
pop
test
popa
in
in
xor
insl
js
enter
shrb
cmp
insl
sahf
fimuls
aad
or
push
cmp
inc
lret
in
out
scas
push
cmp
iret
aad
iret
cld
je
xor
sti
jmp
jle
cmp
jo
fdivl
std
mov
outsb
cmc
and
push
jle
clc
outsb
je
stc
fisttpll
scas
fisubrl
je
and
xchg
cli
mov
sub
pusha
rcrl
aam
lcall
repnz
movsb
dec
xor
inc
mov
sbb
and
mov
and
adc
out
and
cmp
fwait
pop
lods
sbb
scas
inc
push
and
arpl
or
std
inc
in
jbe
jae
mov
inc
xchg
ja
mov
xchg
xor
rcrl
xor
rep
pop
mov
imul
call
inc
push
sbb
xchg
xchg
dec
repnz
sahf
les
push
sbb
mov
sbb
ljmp
mov
pop
cmp
lea
fcmovb
loopne
lods
pop
enter
sub
cwtl
cmp
add
lret
adc
mov
and
pop
js
ljmp
jp
or
cs
pop
or
cs
out
jbe
test
pop
ja
mov
adcl
sub
mov
loop
push
call
and
or
in
ljmp
pop
int3
in
pop
mov
jle
arpl
js
out
fidivs
mov
cmp
sub
sbb
fisubs
jns
xorb
cmpsb
cld
dec
pop
nop
shrb
cltd
popl
jle
stos
stos
ss
cmpsb
sahf
fwait
call
loop
ffree
test
mov
inc
cmp
sub
add
xchg
loopne
lock
cmp
out
sbb
shrl
and
jbe
out
call
notb
pop
test
and
rol
stc
arpl
neg
mov
push
sbb
lock
and
mov
sbb
fisttps
add
popl
cwtl
cmp
mov
adc
mov
mov
insl
and
dec
fnsave
xor
push
and
lret
mov
jbe
mulb
mov
sbb
repz
into
or
or
sub
adcb
mov
push
xchg
push
xchg
stos
fs
jle
scas
icebp
mov
add
nop
fcomps
je
jns
popa
push
scas
leave
push
cmp
out
jb
lret
stos
test
aad
out
rorl
push
push
jge
and
stos
xchg
bound
cmp
adc
inc
dec
dec
push
sub
mov
mov
pop
pushf
mov
xor
mov
push
add
xchg
mov
cmc
repz
adc
out
dec
mov
push
dec
mov
jmp
pop
popf
sbb
pop
jns
fdivrs
cmpsb
push
inc
xchg
push
adc
es
cmpsb
mov
mov
call
cmc
inc
adc
pop
scas
sub
jl
inc
adcl
and
and
xchg
ds
negb
loope
mov
dec
mov
jl
add
add
repz
call
iret
dec
mov
aam
and
mov
dec
fwait
pop
int
imul
sbb
out
rclb
lds
test
pop
in
data16
les
mov
test
andb
movsb
sbb
dec
mov
seta
pusha
popa
push
dec
shr
mov
loope
dec
or
aaa
sahf
add
sub
xor
or
or
cwtl
mov
pop
mov
test
mov
call
es
rolb
and
mov
nop
sti
xorl
dec
in
push
popa
push
cmpsb
xchg
pop
pshufw
jl
call
iret
sar
dec
mov
rcll
aad
pop
mov
pop
wbinvd
push
jae
icebp
movsb
fistpll
or
shrl
mov
sti
pop
fcomps
jb
adc
pop
movsl
loop
adc
lods
push
js
adc
pushf
mov
push
xor
inc
xor
mov
repz
push
cmp
mov
xlat
xchg
xchg
jns
test
bound
out
loop
pop
loopne
xchg
loopne
mov
sahf
fcomps
rcl
std
mov
shrl
fmuls
add
jae
repnz
sti
mov
les
out
mov
jl
add
sub
aaa
mov
call
mov
dec
test
sbbb
jmp
punpcklwd
inc
call
mov
shll
outsl
roll
loope
adc
pop
pop
mov
loopne
int
push
stc
mov
fdivp
pop
or
push
push
lds
mov
stos
or
stos
pop
lahf
dec
mov
xor
inc
loop
in
shrl
mov
les
pop
lret
shll
pop
jnp
scas
adc
ja
gs
and
mov
ficoml
add
cmp
hlt
insb
out
mov
dec
outsl
and
aaa
lahf
mov
sbb
sti
mov
ror
mov
xor
mov
mov
jg
cmpsb
add
pop
push
cmp
pop
out
imul
outsl
mov
sub
sbb
cld
in
pop
pop
xchg
cmp
dec
and
adc
push
aam
cmc
imul
into
mov
cmpsl
lret
mov
jl
daa
les
lret
adc
mov
xor
sub
jle
mov
xor
mov
or
pop
imul
xor
into
lods
pusha
pushf
out
and
push
ljmp
lds
les
aas
clc
das
fldt
xor
fmull
fimull
xor
loope
xor
jae
sbb
test
sbb
add
inc
insb
jmp
push
push
std
adcl
pop
mov
pop
insb
mov
cwtl
push
fbstp
mov
rorl
nop
fidivl
ja
mov
xor
add
or
xchg
cmpsb
jle
test
pop
cmp
add
cld
mov
in
cwtl
test
fwait
aad
arpl
enter
les
push
fcompl
xchg
inc
add
cmp
mov
dec
sbb
outsl
push
ret
stc
std
xchg
fdivr
bound
inc
es
sbb
out
xor
mov
mov
daa
dec
call
cmpsl
mov
cmp
out
inc
divb
pop
pusha
adc
aam
mov
loopne
and
push
xchg
pop
sub
mov
outsb
lcall
int3
in
ljmp
cmp
leave
outsl
xor
xchg
aam
scas
jge
pop
rorl
shl
mov
sub
lahf
gs
ja
mov
int
jno
cmp
mov
sahf
pop
and
sbb
sbb
daa
or
dec
mov
idiv
loope
push
pop
fisttpl
jmp
jne
sbb
push
imul
repnz
push
js
push
dec
sbb
jb
outsb
jp
mov
into
mov
xchg
mov
gs
inc
and
jmp
icebp
pusha
lea
pmulhuw
test
jmp
inc
testl
bound
sub
adc
sub
cmpsl
inc
push
and
stc
fstpl
inc
hlt
lret
in
test
inc
shll
lcall
test
cmc
sub
and
sbb
cmp
cli
add
lahf
lods
and
loopne
pop
xor
pop
inc
pop
out
notb
shrl
test
jge
mov
repnz
jge
in
jno
pop
adc
aad
xchg
inc
jecxz
std
adc
and
test
out
xor
in
or
cmpsb
ffreep
aas
jno
in
ficomps
push
ud1
lret
outsb
das
inc
pusha
adc
dec
test
cmc
mov
add
push
test
sbb
mov
data16
fmull
jno
jl
jle
pop
test
dec
sbb
jne
addr16
js
ds
and
dec
in
pop
pusha
xchg
pop
test
mov
int
adc
lahf
adc
xchg
in
mov
gs
jb
pusha
cli
ja
sub
pop
or
push
xor
pushf
push
push
mov
and
lahf
pop
pop
xchg
adc
sub
jne
imul
adc
popa
push
and
and
les
push
js
cli
in
cmp
pop
test
cmp
aaa
xchg
imul
test
ret
push
push
arpl
test
adc
sub
popa
imul
mov
pop
push
inc
xchg
cmp
in
cmp
cmpsl
cmp
cs
push
loop
scas
imul
pushf
mov
aam
and
sbb
mov
add
add
mov
or
cmp
xor
add
fcomps
jne
and
and
cmp
rolb
and
or
dec
and
sbb
icebp
pop
lahf
mov
daa
xor
xlat
movsb
lahf
xor
jecxz
ss
add
cltd
in
and
push
sub
and
xchg
sti
sub
inc
and
and
mov
adc
fcoms
iret
mov
sub
pop
adc
rcll
push
lods
shrl
inc
inc
sbb
cmp
mov
xor
sub
aas
int3
leave
lret
inc
inc
imul
fldcw
cmovp
inc
aas
mov
mov
fcoms
push
inc
xchg
jbe
movsb
xor
mov
in
loope
pop
fwait
leave
push
andl
xor
shl
push
adc
pop
out
sbbb
test
jnp
jno
fcmovnbe
roll
clc
mov
das
daa
js
push
ret
jg
mov
mov
lret
aam
mov
lds
jo
sti
jp
fwait
mov
and
xchg
push
push
lds
xchg
pop
mov
pop
xor
adc
lock
inc
rcll
cltd
stos
jae
jne
cmp
mov
pop
rcrl
push
push
jl
int3
jb
addr16
jne
xor
push
sub
pop
push
jle
adc
xchg
jl
push
lock
mov
push
sbb
and
pop
cmc
mov
xor
mov
cwtl
or
orb
test
fists
jp
inc
xchg
push
add
mov
stc
popa
xchg
and
fwait
cmp
mov
push
rcrl
mov
lret
ficompl
icebp
cmpsl
pop
vsqrtss
fsubrl
in
sub
dec
aam
jle
jne,pt
rclb
cmc
inc
aaa
sbb
jp
push
add
call
push
add
jnp
aaa
cwtl
dec
jmp
fwait
xlat
gs
pop
inc
sahf
fidivl
sahf
cmp
and
pusha
loop
jp
sbb
mov
push
into
cmp
xchg
popa
mov
aam
pop
movsb
test
rcrl
mov
in
ja
push
mov
daa
mov
mov
inc
mov
or
or
dec
hlt
mov
aam
mov
jl
xchg
fldcw
xchg
inc
cmp
in
jo
jp
insb
pop
mov
cli
adc
xchg
iret
into
movsl
push
pop
in
and
aas
xchg
xchg
daa
sbb
sub
or
loope
inc
out
cmovno
test
push
mov
cmpsl
mulb
lea
jbe
inc
rclb
mov
cmp
jmp
jo
xlat
cli
xor
sahf
cltd
call
test
push
inc
fs
gs
adc
and
xor
aad
hlt
in
xchg
xchg
test
push
inc
fs
gs
adc
and
xor
aad
hlt
hlt
in
xchg
nop
sub
inc
lea
jne
gs
or
and
insb
cmc
fsub
test
xor
inc
stos
stos
out
into
jne
adc
pushf
cli
fcmovne
lret
fcmove
int3
int3
int3
int3
addb
mov
mov
pushl
add
adc
and
xor
inc
xchg
jb
jb
addb
mov
push
rolb
loop
repnz
adc
adc
and
cmp
inc
hlt
bound
pop
mov
jle
outsb
fistpl
lret
ds
xor
jge
dec
addl
loop
aam
fldpi
or
mov
into
rcl
and
xor
fwait
stos
loop
cmc
dec
jle
sbb
add
outsl
push
es
fldenv
xchg
cmp
fidivs
inc
enter
dec
jge
outsb
cmp
add
xor
in
sbb
das
bound
subb
push
roll
sbb
adc
pop
sbb
jnp
mov
jb
rol
pop
test
cmp
add
cmp
sub
push
ret
test
popf
cmc
bound
push
jb
in
dec
cld
cmp
daa
cli
data16
scas
lahf
mov
pop
scas
add
movsb
jb
dec
push
mov
jg
jbe
push
ret
es
sbb
or
cmp
sub
pop
sahf
dec
mov
jb
out
inc
mull
add
adc
dec
repnz
add
push
xchg
inc
jecxz
xchg
adc
pop
das
repz
int
ret
push
rcrb
push
mov
mov
xorl
idivb
xchg
adc
push
ret
push
into
add
xor
es
adc
and
xor
inc
xchg
bound
xchg
push
mov
push
rclb
loop
repnz
adc
and
xor
inc
xchg
bound
mov
je
lea
sub
pop
push
sarl
jg
in
cld
fcmovnbe
lret
inc
notl
pop
and
pop
gs
repnz
xchg
xor
lcall
sar
repz
adc
or
dec
nop
or
test
rorl
lahf
scas
mov
std
stc
pop
leave
movsb
mov
mov
xchg
out
fcomps
test
jns
sbb
add
adcb
xor
js
xchg
popa
xor
xchg
inc
push
rcrb
cld
int
xchg
daa
xor
pop
xlat
jl
inc
fsts
scas
adc
xchg
cmpsl
mov
add
push
js
ljmp
pop
ljmp
lock
sub
movsl
jne
iret
ret
jmp
ret
xchg
enter
cmp
clc
pop
mov
push
add
call
sub
call
insl
es
add
imul
in
mulb
lea
push
sub
popf
mov
jecxz
add
imul
hlt
cmpsl
mov
cmp
jl
cmp
psubq
jbe
push
and
jne
sub
leave
cs
xchg
icebp
add
xchg
mov
test
ret
or
arpl
inc
dec
fdivr
xchg
das
or
xor
dec
pop
inc
xor
xor
inc
jge
cmp
in
xor
std
dec
mov
lods
cmp
pop
es
ret
cmp
and
movsb
aam
addl
dec
es
aad
mov
push
fs
xchg
icebp
or
popf
scas
or
mov
push
outsb
push
js
mov
sbb
rcrb
stos
add
orl
or
or
mov
add
test
jne
push
sbb
add
adc
insb
jge
lcall
icebp
mov
fdivl
jbe
add
lret
or
inc
fstp
icebp
push
or
inc
or
mov
fcmovnb
into
mov
push
sub
adc
movsb
sub
cltd
inc
cs
cltd
lcall
add
add
addr16
subl
mov
out
aad
add
aam
leave
iret
cli
mov
in
scas
movsb
mov
pop
inc
mov
fwait
addl
sbb
mov
jo
outsl
sbb
or
pop
ja
cmp
notb
js
xchg
dec
loope
int
mov
sbb
push
popa
and
aas
lds
jmp
jp
pop
or
scas
arpl
jge
fldt
imul
sbb
mov
xchg
cmpsl
xchg
lea
test
or
xor
movsb
mov
out
jg
lcall
decb
and
adc
sub
mov
imul
stos
mov
mov
repz
movb
arpl
pop
pop
clc
or
lods
stos
addl
addr16
imul
pop
std
cmp
adc
or
int3
and
mov
sbbl
ret
and
mov
out
xor
test
shll
es
sub
add
pop
cld
cmpsl
ja
pop
add
adc
sti
pop
push
ljmp
mov
insl
cmpsl
pop
into
jne
rcrl
pop
inc
and
inc
adc
push
aas
xchg
xchg
push
xor
lods
js
cld
xor
pusha
or
pop
es
add
fdivrl
sub
adc
sti
repnz
sub
out
out
xchg
dec
inc
or
ss
xchg
push
in
cli
pop
push
js
cli
jecxz
dec
loop
ret
xchg
andl
dec
and
add
jmp
mov
and
sbbl
sbb
pop
xorb
aam
jp
jge
roll
movsl
stc
mov
inc
add
sub
pop
in
add
je
and
jge
xor
insb
nop
pop
push
js
and
fcomps
adc
stos
inc
inc
imul
mov
ja
jo
push
subl
popa
into
imul
test
popa
popa
fnstsw
sub
mov
sbb
lcall
lods
push
xchg
daa
in
iret
stc
in
jmp
sbb
cmp
push
aaa
and
mov
or
xor
add
sub
jne
push
and
push
mov
sub
lods
push
jae
lcall
loop
xchg
lea
out
es
lea
cld
imul
cmp
jbe
pushf
fidivrs
mov
mov
jp
ljmp
and
lahf
push
jmp
loope
int3
add
sti
js
cltd
sub
call
cld
xor
icebp
repnz
mov
and
fadds
stos
mov
adc
jnp
stc
xchg
cld
sub
lahf
mov
repz
pop
cmpsl
out
mov
sub
xchg
in
addl
andb
dec
and
mov
adcl
out
outsb
icebp
xor
loop
dec
cmc
push
repnz
mov
orb
aam
shrb
ss
aam
bound
movsb
inc
loopne
inc
in
pop
inc
mov
ret
mov
cs
sub
mov
sbb
mov
pop
rcll
scas
fsub
test
add
jmp
cmp
sub
push
pop
sub
mov
jge
stc
enter
and
and
mov
dec
xchg
sahf
xor
sub
lret
addr16
pop
lods
scas
sbb
addr16
mov
push
mov
mov
cltd
movsb
call
idiv
dec
lahf
cmc
sub
jbe
dec
fisubl
insb
and
lock
mov
stos
mov
jl
cmc
cmpl
add
shrb
add
das
ds
sahf
adc
orb
push
or
mov
data16
ss
pop
scas
std
cli
lret
mov
push
shll
and
adc
add
loop
or
mov
mov
sbb
mov
dec
mov
shlb
push
xchg
add
dec
mov
int3
cmp
push
lret
mov
cmpsl
aas
xor
push
js
mov
sbb
or
insb
addl
pop
inc
and
in
adc
insb
sahf
mov
fs
mov
fsqrt
insb
inc
fnstsw
stos
sub
mov
jmp
xchg
sahf
cmpsl
sub
xchg
sbb
aam
ja
cmp
jmp
cmpb
movsb
push
push
rorl
shl
xor
js
mov
sub
ret
push
push
fistps
jecxz
xor
iret
inc
imul
pop
sub
lcall
ficompl
add
movsl
ret
pop
les
leave
cmp
jg
cmp
int
mov
gs
and
or
cmpsw
daa
cmp
mov
movb
push
cmpl
inc
push
mov
xor
ds
dec
test
push
icebp
dec
clc
mov
add
scas
mov
mov
cmpsl
stos
pop
adc
shrb
add
pushf
int3
out
sub
adc
and
xor
add
push
sbb
push
pop
int
je
outsl
stos
and
xchg
jl
and
inc
inc
inc
add
adc
imul
insw
jo
xor
fisttpll
gs
sub
adc
pop
dec
inc
jp
jp
test
stc
cmc
add
xchg
and
jl
add
jb
mov
iret
iret
dec
bnd
lcall
pop
xchg
mov
pusha
ficomps
lods
mov
push
cli
dec
repz
push
mov
popf
adc
lods
sub
pop
or
cs
insb
cwtl
add
aas
adc
sahf
or
push
sub
mov
pusha
xchg
enter
test
pop
push
push
jl
lods
lds
outsb
lahf
movb
jecxz
mov
aaa
cmp
mov
mov
jp
jmp
jecxz
repnz
push
add
dec
test
cmp
mov
xchg
addr16
leave
cmc
fdivs
push
clc
add
out
loope
roll
dec
and
repz
xor
sbb
lods
rcrb
add
loop
push
aaa
add
nop
leave
inc
and
push
inc
pop
dec
mov
ret
push
into
bswap
je
arpl
jg
pop
cmp
stos
sti
test
nop
cld
ret
test
sub
jge
mov
jp
add
push
scas
ds
out
test
mov
aad
les
nop
lea
xlat
jno
pusha
lcall
mov
pop
repz
call
jae
and
adc
xchg
dec
jg
mov
outsl
stos
cld
xchg
pop
or
xchg
push
cmp
dec
lret
add
xor
aad
js
mov
dec
gs
call
pop
loope
push
dec
cmp
adc
sub
xchg
divb
lahf
mov
and
and
scas
push
jb,pt
jle
repnz
rcrb
mov
leave
jb
push
movsl
push
xor
gs
ljmp
mov
sbb
loope
hlt
and
mov
jmp
pop
sub
adc
int3
pop
cmp
out
or
data16
cmc
or
jmp
jp
cmp
xlat
fstps
and
xor
xchg
mulb
xchg
in
jno
xchg
inc
inc
popa
mov
xchg
mov
lods
xchg
gs
fwait
in
xchg
lock
mov
fstpt
xor
lods
pop
sub
inc
xlat
cmpsb
enter
jbe
popa
pushf
adc
dec
fildll
inc
push
push
insl
jge
or
mov
gs
pusha
mov
push
movsb
in
dec
mov
jmp
add
es
mov
adc
sub
inc
outsb
in
xor
xor
push
mov
cmc
stos
out
cmp
xor
sub
fadds
test
xor
pop
xor
push
test
jno
jbe
sti
mov
sbb
bound
pop
insl
push
jle
out
push
das
dec
imul
jbe
cli
aad
push
aas
lock
call
jbe
cmpsl
xor
xchg
push
into
or
add
lahf
sub
xchg
lret
jnp
xchg
xchg
jb
push
pop
jae
leave
pop
cld
jmp
imul
test
sub
insb
shlb
rorl
add
mov
xchg
test
repz
and
out
adc
fldenv
mov
pop
pop
out
clc
and
sub
ljmp
pop
jle
jnp
fidivrs
dec
jo
popf
mov
sub
test
scas
or
push
push
repnz
leave
mov
sbb
mov
xor
pop
xchg
cwtl
cli
nop
loopne
cmpsb
sub
cmp
and
std
test
jp
inc
push
daa
repnz
or
cmp
sub
push
push
ss
int3
shrb
push
xor
jb
outsl
add
adc
mov
inc
aad
push
fstpt
jle
repz
sub
fstpt
outsb
or
dec
dec
or
scas
repnz
cld
adc
nop
orb
mov
adc
cmp
adc
dec
and
xor
rorl
pop
divb
lret
sbb
mov
dec
das
inc
mov
dec
fwait
inc
test
bound
xor
movsb
test
cmp
fwait
jne
xlat
roll
pop
clc
jge
cmp
pop
mov
ljmp
and
jmp
xchg
hlt
push
aaa
rorb
push
ljmp
jle
inc
lret
outsl
mov
setg
add
dec
hlt
das
inc
enter
sub
mov
imul
sub
repz
fdivs
mov
mov
mov
daa
inc
sub
js
mov
fsubrl
imulb
lcall
adc
mov
inc
ja
or
clc
repnz
imul
jnp
lea
mov
pop
icebp
in
lds
outsl
pushf
call
mov
push
dec
pop
xchg
out
xchg
or
pop
nop
popf
push
sbb
pushf
arpl
pop
notl
or
cs
mov
rcrb
mov
imull
pushf
inc
cmp
push
mov
std
inc
fwait
pop
cmp
cmpsl
fnstsw
pop
je
out
pop
cmp
lods
test
loopne
push
hlt
xor
js
dec
mov
or
lods
add
push
cmp
jne
cmc
int3
cmp
int
stos
or
mov
sbb
dec
cmp
adc
xchg
inc
add
push
addr16
cltd
dec
mov
pop
iret
out
pop
aas
push
sbb
fdivl
aad
call
or
std
aad
ret
outsl
lods
xchg
test
dec
mov
repz
fadds
mov
in
cltd
pop
in
sbb
pop
dec
into
sub
stos
sub
les
mov
pop
mov
mov
or
sbb
jecxz
mov
out
push
stc
dec
sub
loope
mov
loope
cmp
sbb
and
fidivl
add
outsl
addr16
aaa
push
iret
stos
data16
add
data16
mov
xchg
adc
int3
jmp
push
jb
push
mov
stc
loope
pushf
bound
sbb
inc
je
mov
jb
fdivr
add
out
pop
test
sahf
cmp
pop
ret
out
loopne
pop
mov
xor
into
xor
or
pop
sahf
sbb
out
jg
addr16
aad
daa
repnz
mov
mov
cmc
push
mov
jmp
xchg
pop
mov
mov
pushf
subb
jo
test
push
ret
mov
in
or
shl
ljmp
in
sbb
inc
movsb
hlt
jb
in
inc
rcrl
add
push
sarb
and
daa
add
enter
mov
jbe
movsb
gs
inc
and
cld
popa
or
adc
leave
test
adc
push
inc
jns
insb
jb
loope
sbb
in
clc
mov
adc
dec
sub
xchg
cmpsb
scas
xchg
cs
cmp
mov
int
in
js
aad
jecxz
lahf
out
insl
xor
and
mov
cwtl
mov
call
out
and
movsl
mov
sub
sbb
outsl
insl
mov
lahf
sbbb
fisubrs
lea
lods
xchg
xchg
addr16
outsl
sub
pop
mov
pop
jle
mov
addb
push
push
out
test
lock
stos
mov
add
clc
and
fcmovu
jge
cwtl
mov
sti
mov
push
or
inc
insl
cmpsl
sbb
push
sarb
jnp
jae
leave
enter
add
cmp
sahf
in
sbb
lock
cltd
mov
adc
mov
mov
add
add
fstpl
pop
scas
cmpsl
je
mov
xor
das
pop
test
push
popf
shlb
lods
jne
in
xor
outsl
insb
jge
xstore-rng
cmpsl
xchg
mov
imul
lret
mov
pop
fwait
mov
push
gs
mov
rclb
sbb
lcall
lahf
stos
jle
and
stos
es
mov
or
pop
mov
add
pop
xor
xor
nop
jnp
and
inc
lea
pop
test
dec
arpl
arpl
daa
sub
jns
loop
in
das
jne
lret
push
pop
inc
iret
add
and
inc
sub
add
inc
xchg
sbb
and
push
mov
mov
adc
pop
sub
inc
bound
or
daa
in
lcall
jle
lods
lds
lret
dec
test
pop
insl
lods
cmp
fists
loope
call
int3
aad
into
lods
mov
jmp
imul
or
pop
call
mov
shr
mov
inc
sti
cwtl
cmp
and
ss
hlt
lahf
sub
and
and
lods
pop
jae
stos
stc
sub
jge
and
jb
ds
jl
lock
mov
sbb
ja
outsb
push
fidivrs
sysenter
or
inc
pop
jmp
sub
fcompl
not
push
mov
loope
pop
jnp
fbld
dec
jnp
fsubrs
xchg
es
pop
cmc
sub
roll
push
cmp
mov
or
divl
test
dec
or
aas
mov
data16
cmpb
imul
sbb
jmp
push
scas
mov
iret
aam
ljmp
enter
inc
call
leave
push
jecxz
xor
leave
lods
gs
test
add
push
sbb
jg
pop
sbb
into
dec
xor
imul
das
lret
or
xor
mov
les
sahf
jae
aas
adc
or
cli
je
and
xchg
daa
rcl
aam
sahf
divl
mov
out
adc
decb
jbe
gs
sbb
jae
jnp
sub
jno
and
xchg
cwtl
lods
mov
jbe
ret
push
mov
stos
inc
sarl
xlat
sub
xor
stos
iret
ss
movsb
in
xchg
add
aad
roll
or
lcall
nop
enter
sub
inc
mov
mov
push
jecxz
xchg
lea
sbb
pop
inc
and
add
sbb
repnz
popa
imul
cmp
mov
adc
int
adc
inc
out
int3
cmp
inc
paddd
adc
lock
xchg
cs
ret
jne
mov
nop
rolb
sub
arpl
mov
cmpsl
xor
lds
xacquire
cli
pop
insb
mov
movsb
xchg
scas
and
shlb
xchg
lret
out
dec
and
dec
lods
add
sbb
push
btc
jno
arpl
cli
sarl
mov
imul
mov
push
pop
iret
pop
cmp
aam
pop
addb
stos
and
mov
push
push
leave
out
push
jno
lods
out
push
mov
fwait
xchg
fsubrl
addl
repz
jno
jne
sbb
sub
stos
inc
in
cld
ffree
inc
not
inc
fwait
mov
fnstsw
dec
mov
sub
pop
adc
xchg
mov
lcall
sbb
hlt
adc
cltd
push
pop
xchg
or
gs
lcall
jb
pop
mov
xchg
ljmp
inc
cld
test
imul
lret
xor
into
cmc
sub
into
xor
popf
ret
decb
nop
mov
adc
sbb
mov
into
cld
xchg
lock
add
or
fnsave
adc
and
sub
cwtl
mov
mov
mov
mov
shr
lret
adc
pop
fmul
cmc
jo
rolb
fs
add
loopne
mov
daa
mov
sub
xchg
mov
and
xchg
call
cmp
cwtl
int3
in
xchg
scas
stos
cmp
pushf
cmp
adc
pop
in
ror
pusha
dec
je
adc
adc
cmpsl
push
inc
fildll
adc
movsl
push
add
push
dec
and
cwtl
jp
leave
js
dec
push
outsl
dec
in
xchg
push
push
mov
cmp
mov
push
pushf
fs
in
push
lods
lods
clc
dec
jnp
data16
jns,pn
or
sarl
inc
xor
into
jmp
sbb
push
mov
pop
out
cmpb
mov
or
xchg
add
and
movb
fiadds
inc
push
dec
insb
jge
fimull
jl
and
in
test
add
cmp
leave
mov
push
sub
add
clc
xchg
adc
testl
sbb
enter
and
out
out
fsubl
lock
data16
jmp
jmp
mov
add
ja
push
lret
push
leave
jbe
loopne
pushf
repnz
jae
mov
pop
imul
ror
sti
dec
inc
mov
pop
mov
inc
js
mov
cmp
int3
jno
push
add
xor
sub
nop
dec
sub
adc
ds
mov
outsb
je
es
ja
inc
nop
pop
scas
mov
cli
idivb
dec
inc
dec
adcb
push
xorb
call
fwait
outsb
mov
scas
pop
cmp
es
mov
loopne
jo
xor
pop
pop
sub
adc
loopne
pop
cmp
cmp
scas
lods
dec
enter
jb
dec
push
in
and
mov
push
inc
adc
test
stos
cmp
scas
insb
inc
ficoms
repnz
jo
shl
mov
leave
lret
jecxz
bound
push
int3
pop
jae
pusha
adc
movsl
leave
jl
jge
cmp
in
lods
ret
clc
icebp
mov
loope
xchg
xchg
divb
mov
shrl
mov
add
xor
cmc
nop
outsl
pusha
mov
out
ljmp
xor
roll
inc
pop
inc
mov
or
addb
dec
adc
pop
idiv
out
or
fst
mov
mov
sub
mov
dec
in
ds
aas
outsl
xchg
sbb
jbe
imul
andl
aas
arpl
js
aam
scas
inc
mov
jne
mov
lods
xchg
aas
inc
ljmp
xor
pop
push
and
fildl
inc
xor
cmpsl
pop
hlt
jle
fidivrl
daa
inc
mull
repz
cmp
dec
pop
jb
sub
push
sbb
pushf
xor
aad
stos
and
insl
or
dec
stc
xchg
lret
inc
or
push
dec
cmp
push
sar
push
jns
pop
jle
mov
repnz
xor
pop
cltd
cmp
incl
imul
jne
call
push
aad
lock
ret
jnp
mov
xchg
movsb
movsb
aas
mov
subb
stos
dec
and
xor
xor
fs
sub
mov
lcall
pop
xchg
scas
loope
sbb
ljmp
xor
popa
loop
mov
pop
and
sbb
xchg
outsb
shll
daa
sahf
push
lock
mov
into
outsb
inc
inc
in
in
jae
mov
mov
insl
ret
imul
jb
xlat
xor
shrb
inc
sub
aam
movsb
jb
add
inc
mov
fnstenv
pusha
pop
xor
je
push
cmp
cli
mov
loope
and
add
xchg
cmp
popf
popf
enter
pop
es
push
out
ds
gs
test
scas
sbbb
cmp
pushf
shlb
xchg
loop
xchg
add
jb
insl
pushf
test
scas
icebp
cli
imul
mov
mov
xor
jl
add
push
mov
inc
insl
dec
or
sbb
inc
out
pusha
push
nop
mov
mov
inc
jecxz
mov
adc
lods
ljmp
aad
imul
hlt
fisubrs
push
mov
orl
imul
fdivrl
out
cmp
aam
and
pop
mov
pop
cltd
nop
dec
call
jo
pop
movsl
pop
fdiv
hlt
data16
sahf
mov
popa
data16
jge
push
test
mov
ret
push
loop
repnz
adc
and
xor
inc
xchg
bound
xchg
push
mov
push
rclb
loop
repnz
adc
and
xor
inc
xchg
bound
xchg
push
mov
push
rclb
loop
repnz
adc
and
xor
inc
xchg
bound
nop
push
mov
push
rclb
bound
jb
std
in
jl
out
xorl
int3
int3
int3
int3
pop
cmc
dec
in
aad
lds
stc
js
sbb
sub
push
ljmp
adc
dec
in
aad
lds
mov
movsl
cmp
lret
push
ljmp
adc
mov
lds
sub
xchg
daa
and
popa
clc
jb
jnp
jbe
xchg
lods
jp
add
push
xchg
or
popf
xchg
stc
adc
jo
xor
mov
mov
cli
mov
inc
xor
mov
mov
cmpsl
sub
mov
and
in
mov
cmc
psubsb
mov
dec
and
mov
lret
or
adc
jb
xchg
mov
lahf
std
xchg
vcvtsi2sdl
mov
lcall
mov
mov
addl
out
subb
mov
sub
stos
scas
inc
fbld
and
movsl
jo
push
in
jecxz
lds
into
ss
push
push
pop
xor
test
in
aad
jb
cmp
push
mov
inc
shlb
stos
insb
xor
cmp
shlb
shrl
rcr
or
fs
xor
inc
shrl
pop
nop
das
orb
or
jae
outsl
jmp
mov
push
xchg
and
pop
in
roll
push
mov
lods
sbb
or
fidivl
gs
push
ljmp
adc
dec
in
aad
lds
mov
movsl
cmp
lret
push
ljmp
adc
in
lea
shl
push
sbb
test
pusha
inc
fildll
rolb
js
mov
inc
outsl
pop
out
sub
cmp
inc
jno
dec
aas
lods
lods
and
ret
xchg
addl
jbe
mov
and
inc
or
pop
adc
outsb
out
jo
lcall
pop
fwait
rorb
inc
cmc
cld
aam
add
mov
dec
and
std
pushf
inc
adc
shl
dec
mov
clc
loopne
xchg
push
lods
dec
push
push
test
add
or
divl
aaa
in
xchg
mov
scas
in
and
cwtl
mov
xchg
xor
dec
stc
into
cmp
jnp
xchg
cld
call
jmp
sbb
fstps
nop
or
pop
stos
mov
sbb
cmpsl
xchg
aam
inc
adc
lods
mov
addb
aas
imul
shlb
pop
jmp
cltd
bound
ficoml
outsb
loope
add
movsw
xchg
ja
pop
clc
mov
mov
dec
das
stc
inc
cltd
fdivs
cld
or
xchg
sti
mov
subl
xor
loop
add
sub
leave
neg
mov
loop
in
cmpsl
mov
loopne
rorb
adc
bound
fstl
or
ds
testb
rorl
fdivl
cs
sbb
dec
or
pop
sti
cmp
insb
outsl
cmp
dec
xchg
mov
inc
add
xchg
call
cmp
or
ja
push
scas
and
xchg
push
aam
daa
dec
cmpsb
push
or
ret
movsb
pusha
loopne
repnz
jno
sub
ja
sbb
dec
xchg
incl
fists
cmpsb
inc
cmpsl
mov
cwtl
shr
aas
and
int3
stos
add
decb
pop
repz
adc
outsb
sub
int3
out
test
cwtl
jae,pt
pop
jns
out
int3
mov
jnp
adc
cltd
bound
inc
mov
rcrl
loopne
cmp
push
push
or
and
jg
mov
pop
andl
dec
mov
and
lods
push
push
sbbl
mov
jecxz
add
jle
add
add
mov
lock
into
cmp
jb
mov
lret
fildll
lds
xchg
inc
je
pushf
aam
xchg
inc
rcll
xchg
mov
and
loopne
cmc
add
lock
mov
xchg
push
hlt
pop
mov
cmp
mov
jae
cmp
cli
jne
mov
in
xor
int3
leave
add
test
inc
not
out
cltd
cmp
push
jp
fmull
and
fwait
lods
cmp
xlat
loopne
jecxz
stos
cmpsl
push
out
aas
ljmp
pop
mov
dec
jb
movsl
inc
mov
mov
pop
aad
scas
lds
lahf
lahf
mov
xor
inc
ss
push
into
jae
sahf
xchg
out
lret
dec
add
lock
lds
add
rorl
mov
xor
add
xchg
sbbb
insb
dec
cli
out
push
pop
dec
xchg
jge
sahf
lods
mov
mov
jnp
sub
lea
pop
pop
pop
leave
outsl
insl
fmulp
arpl
or
xchg
pop
sbb
enter
repnz
lods
test
aaa
fldl
mov
pop
xorb
ja
xchg
mov
loop
cmp
sti
mov
inc
sub
imul
pop
cltd
and
rorl
negb
out
or
int
fldenv
cli
or
lahf
and
aas
out
mov
fdivrs
jl
popa
cmc
mov
loop
pop
or
and
xchg
inc
rclb
xor
cmp
roll
into
jge
sbb
clc
xor
pop
movsb
push
or
adc
sub
pop
fs
cltd
cmp
pop
fiadds
mov
or
or
lcall
in
pop
push
es
cmpsb
cmp
testb
add
jo
cmp
pop
mov
add
lods
push
sbbb
dec
push
shrl
sbb
sahf
push
repz
lcall
iret
inc
sahf
ja
sbbb
pop
mov
mov
mov
fcom
inc
xchg
pop
mov
cmp
or
pop
jbe
lret
jmp
sbb
dec
orb
movsl
clc
and
rcr
xorb
xchg
je
inc
push
icebp
and
xchg
jg
cmp
imul
xor
jnp
cmp
xor
fidivs
inc
mov
xor
lcall
in
xlat
pop
sar
hlt
les
sbb
adc
inc
stos
cmp
scas
stos
add
adc
inc
and
aam
stos
and
movb
lea
sub
cmp
aaa
push
test
loop
mov
mov
mov
subb
shll
mov
jbe
rclb
aam
scas
sbb
out
ds
cltd
or
mov
push
outsb
arpl
mov
dec
sub
add
ret
cmpsb
loopne
cmc
into
lahf
xor
insl
jne
adc
fdivrs
lea
aam
sub
mov
movsb
mov
sar
repz
pop
pop
or
add
xlat
addr16
sbb
pop
adc
jno
cmc
inc
jge
fwait
adc
cli
dec
adc
fucomi
ja
insb
pop
push
sub
cmp
imul
outsb
lods
in
mov
mov
pop
bnd
repz
hlt
adc
jp
pop
sbb
dec
orl
shlb
pop
stos
jecxz
mov
pop
dec
cwtl
faddp
jp
and
dec
adc
test
push
dec
ret
std
mov
fdivrs
shl
mov
push
push
mov
adc
pop
dec
sbb
out
mov
xchg
pop
mov
or
push
mov
mov
jg
mov
pop
inc
cmp
pushf
rcrb
jb
xor
xchg
int3
in
movsl
ret
dec
or
lods
sti
mov
inc
xchg
das
push
jo
jle
xor
lahf
push
inc
sti
lds
inc
fstl
movaps
and
inc
add
mov
jg
es
xchg
mov
ss
xor
add
push
call
push
insl
mov
mov
adc
stos
out
inc
dec
jo
dec
and
daa
ret
call
fadds
in
outsb
adc
dec
js
xor
decl
scas
lea
cmp
push
ds
call
sbb
rorb
addb
rclb
inc
dec
xchg
insb
movsl
add
testl
dec
lods
int3
mov
mov
loope
adcb
cmp
lret
push
scas
adc
push
add
adc
movsb
sbb
aam
push
lret
adc
push
inc
movsl
mov
xchg
pop
stc
push
vandnps
xor
adc
mov
jb
aaa
mov
and
shlb
add
mov
and
stos
movsb
sbb
or
rol
lds
jg
iret
jge
sti
pop
outsl
fcmovbe
xchg
mov
fbld
clc
gs
leave
pop
inc
inc
fndisi(8087
mov
or
mov
lret
lahf
dec
clc
xchg
mov
adc
fldln2
imull
and
add
out
add
xchg
das
scas
test
adc
jg
xor
stos
movsb
xor
sub
iret
lahf
stos
jge
cmp
ss
xor
cmp
loop
sub
decb
cwtl
dec
mov
fisubl
test
jg
sti
roll
movsl
pop
ljmp
push
sbb
xchg
sub
dec
sbb
bnd
dec
out
push
ljmp
sbb
sub
test
ret
mov
xor
rcrl
jmp
cmp
fiaddl
jb
pop
mov
test
fisubrl
sbb
mov
pop
adcl
cmpl
push
mov
inc
and
arpl
stos
pop
add
stos
cld
push
inc
fsubrl
mov
ja
outsl
jnp
bound
pop
rorl
pop
inc
xlat
mov
xchg
push
xchg
and
jo
std
xor
lret
dec
shlb
or
cmpsb
out
add
sub
lea
xor
outsl
and
mov
imulb
loope
sbb
rol
leave
call
or
arpl
out
cmpsl
lret
andb
jle
loop
dec
shlb
test
jge
int
sahf
imul
jns
aad
push
adc
imul
pushf
sbb
xor
sub
scas
adc
aad
push
cmp
dec
fs
imul
pushl
daa
hlt
iret
mov
ja
jne
jo
dec
adc
fs
add
and
xor
stos
dec
push
jg
lock
fcomp
jno
xor
test
jbe
popf
cmp
mov
stos
in
pop
ret
outsl
aas
std
outsl
mov
sbb
jg
mov
aaa
mov
loope
push
loope
jge
or
cmp
inc
insl
movsb
js
popa
dec
ljmp
loop
popl
sub
jl
sti
lock
lret
pop
sbb
repz
stos
call
xor
lock
stos
rep
jg
insl
or
sbb
sub
xchg
popa
arpl
sub
dec
cmp
lret
jae
test
adc
xchg
movsl
fs
scas
jp
pop
lahf
fdivrs
mov
adc
lock
lcall
xchg
and
ret
sub
sub
push
cmpl
leave
push
rorb
xchg
nop
inc
stos
sub
xchg
andl
xchg
das
lock
lcall
pop
adc
dec
mov
push
add
rorl
lods
daa
mov
frstor
or
fs
add
js
les
popf
fimuls
mov
sbb
fwait
pop
and
lret
add
jle
adc
or
je
cmova
xchg
dec
sub
mov
into
movsb
cld
stos
cwtl
cmp
stc
dec
gs
xor
mov
repz
xchg
lret
fidivs
xor
jns
jo
arpl
pop
pop
sub
sahf
sbb
movsb
aas
pusha
cmpsb
jb
int3
mov
cmpsb
mov
push
sbb
push
add
inc
pop
mov
xchg
lea
xchg
ljmp
cs
out
sbb
out
xlat
addb
imul
push
mov
and
in
jns
mov
inc
sarl
and
jnp
xlat
jb
pop
jno
dec
fcoms
test
jg
cmp
inc
mov
add
fcompl
call
outsl
push
adc
inc
mov
push
and
pop
push
mov
imul
cmp
sbb
aad
pop
in
mov
out
repnz
mov
cmp
push
lret
sbb
decb
or
add
xlat
repnz
in
repnz
mov
daa
sub
mov
rol
das
mov
push
add
jbe
or
sti
jns
jne
jle
jo
mov
sbb
mov
das
lods
xor
add
push
pop
or
es
lret
sub
cmp
xchg
mov
int
pop
add
call
lods
pop
cmp
inc
ret
testb
inc
subb
dec
sbb
pop
lods
repz
jae
repnz
jle
loopne
pop
jl
add
add
lcall
test
and
lea
ja
imul
in
and
pop
das
fbstp
mov
into
stc
push
std
int
sub
xchg
shl
push
xor
push
fcomps
stos
xchg
and
sub
mov
ret
xchg
lea
pop
gs
std
test
lods
fs
cmp
sbb
mov
adcb
mov
add
xchg
lds
xor
lods
pop
sbb
xchg
add
les
ret
xchg
cmpb
loopne
xchg
jle
icebp
add
sub
mov
xchg
jnp
xor
pop
leave
mov
push
out
xchg
outsl
xor
xchg
push
adcl
and
mulb
sub
repz
jbe
cmp
in
pop
imul
lret
jmp
insl
sub
or
dec
pushl
inc
pop
mov
lea
test
cmp
stc
cmpsl
jo
sub
jbe
mov
mov
dec
or
shrb
scas
inc
out
cmp
ja
pop
popa
xor
shl
outsb
cmpsl
sahf
add
sbb
repnz
lahf
jae
jmp
test
inc
imul
imul
push
adc
jnp
mov
pop
mov
in
mov
loop
add
std
jnp
mov
imul
push
enter
add
popf
loopne
rorl
push
and
hlt
movsl
cltd
cwtl
lahf
lods
inc
pop
enter
adc
imul
add
shrb
xchg
add
in
inc
call
mov
or
cmp
jg
icebp
cmp
sbb
in
cld
inc
push
imul
or
out
sbb
pop
aam
jno
jbe
cwtl
lock
rcll
aaa
dec
xchg
xor
das
jo
testl
mov
ss
xor
sahf
pop
popa
adc
pushfw
and
pop
jb
xor
mov
inc
gs
xchg
pop
repz
adc
insl
xor
mov
inc
push
jle
jae
sbb
xor
subb
mov
and
sub
jno
inc
mov
lods
xor
dec
cmp
jbe
sbb
mov
jmp
insb
xor
jb
push
pop
bound
popa
rcrl
inc
ror
xor
popa
out
insb
lods
pop
inc
std
sbb
cmc
add
mov
aas
xor
push
mov
shl
xor
and
or
pop
ret
call
repz
dec
test
movsb
ljmp
js
jecxz
iret
andl
sub
adc
in
sub
pop
dec
adc
jnp
cld
cmp
js,pt
add
add
sub
mov
or
in
imul
inc
sti
and
push
sahf
fcomp
mov
imul
movsl
iret
add
vmulps
mov
inc
and
sbb
ficomps
and
adc
push
xor
enter
xchg
push
jp
call
cli
ror
pop
subl
add
pop
dec
or
lods
stos
and
adc
mov
pop
push
js
pop
push
mov
adc
stc
jge
pusha
pop
popa
or
add
xor
inc
jmp
sbb
popa
lods
dec
sub
mov
test
stos
cmp
nop
or
out
mov
jno
pop
xor
pushf
test
jns
adc
loopne
sbb
mov
orl
lds
cmp
int3
int3
jle
jmp
inc
push
jg
adc
cmc
lret
xchg
call
insb
popa
inc
stos
icebp
aam
je
lret
or
or
jb
loop
mov
aad
pop
or
or
fisubl
mov
cmpl
add
xor
xor
sbb
cmp
pop
lcall
lods
out
pop
into
cmp
mov
out
in
test
pop
push
insb
mov
push
jne
xorb
inc
cld
call
mov
fisttps
and
xor
insl
fiadds
inc
clc
mov
es
inc
adc
cltd
in
fisubl
dec
xor
xchg
and
sub
pop
xor
pop
out
and
inc
imul
and
bound
sbb
dec
jmp
push
jo
add
or
shll
cli
cld
pop
je
pop
jbe
add
add
cs
mov
rcll
pop
inc
fidivs
int3
push
int3
pop
or
idivb
aam
pfrsqrt
roll
and
cmpl
in
sbb
out
roll
pop
out
pop
sbb
mov
mov
or
and
fldenv
pop
js
rolb
mov
dec
xchg
fldenv
bound
inc
mov
gs
shl
xchg
sub
sar
inc
dec
xor
cmp
dec
xor
jae
out
loopne
mov
std
mov
lods
jo
sbb
or
mov
mov
loop
rorl
test
fwait
stc
enter
sahf
lahf
roll
ret
mov
inc
lahf
shlb
cmp
jns
je
and
mov
loopne
and
jp
jmp
jp
call
negl
mov
loope
repnz
jbe
pushf
mov
xchg
adc
and
dec
ja
pop
or
adc
test
pop
cld
dec
or
jp
cmp
push
mov
fidivl
std
pusha
adc
scas
sbb
cld
ret
sub
outsb
pusha
adc
loop
dec
xor
xchg
dec
ret
pop
test
rorb
fnsave
lea
in
and
mul
xchg
clc
jg
pop
pop
cmp
mov
out
loopne
or
fstpt
fs
mov
jecxz
std
cmpsb
lahf
lock
adc
xor
add
sub
test
dec
movsl
jo
mov
gs
cs
push
jecxz
lock
mov
repnz
daa
test
push
bnd
rorb
movhlps
rcrb
ja
mov
std
hlt
loopne
bound
repz
dec
and
push
jmp
sbb
xor
fdivl
or
lcall
shlb
mov
jno
retw
adc
push
out
jmp
jo
sbb
jnp
shrb
or
mov
cmc
clc
aam
cs
rcr
cmpsb
ljmp
repz
add
cmp
dec
test
sbb
shlb
cwtl
xchg
fs
jp
pop
lcall
aam
or
in
push
jbe
shl
and
sub
xor
fwait
inc
out
cmpsl
jge
xchg
leave
mov
mull
sbb
inc
jp
mulb
pop
pop
rcr
daa
jl
sbb
test
fsubl
clc
adc
mov
cmp
lds
xor
clc
add
mov
int3
sbb
mov
ds
pop
popf
push
ljmp
mov
sbb
aad
stc
js
shlb
sahf
xchg
cmpsb
in
adc
sbb
stos
pop
push
aas
rep
jge
popa
ficoml
mov
and
insb
mov
testb
xchg
ss
shl
jnp
lcall
push
icebp
dec
sbb
mov
outsl
call
mov
sbb
push
arpl
dec
mov
lods
fmulp
sahf
inc
pop
inc
movsb
in
push
or
xor
lds
hlt
orb
or
fldl
pop
xor
hlt
pop
and
out
inc
xor
lcall
sbb
orb
ret
sahf
in
xchg
add
stos
jno
sub
push
add
outsl
or
shrl
cltd
inc
shlb
pop
gs
ret
dec
aas
lods
xchg
jg
out
in
add
add
in
add
fildl
divb
jne
pop
cmp
mov
nop
out
add
mov
lock
orl
mov
mov
je
adc
stos
cli
xor
dec
lret
xchg
mov
pusha
mov
jbe
pop
gs
test
rcll
xor
in
xor
movsb
gs
xor
push
je
std
adc
sbb
imul
jecxz
jne
shrb
xchg
int
incb
cld
sub
mov
lock
mov
pop
inc
fstpt
dec
dec
push
jge
in
jle
dec
sub
addb
aam
pop
fimull
in
mov
scas
movups
push
dec
sub
in
push
ret
fcmovb
mov
mov
aad
inc
insl
mov
clc
jbe
lcall
inc
shll
ss
jl
sahf
js
out
cmp
pslld
mov
roll
cmpsb
mov
pusha
mov
push
xor
xchg
cltd
shlb
out
jo
jo
pop
jo
cld
stos
lock
dec
addb
rdtsc
sub
frstor
mov
dec
popf
inc
push
adc
dec
cmpl
in
divb
xor
add
cmp
in
insl
int3
xchg
lret
cmp
pusha
rcll
imul
push
in
fnstsw
push
in
jp
stos
enter
inc
ret
jbe
push
push
sub
enter
mov
cltd
push
inc
sub
cmp
lods
lock
jae
pop
mov
or
xor
jmp
mov
adc
jae
jae
add
mov
mov
and
sub
xorl
les
out
popf
ja
mov
add
sar
jo
ss
sbb
sbb
sbb
lret
and
cmp
jmp
pop
mov
lret
fsubr
orl
mov
pop
jp
xchg
ret
cmp
jo
notb
sbb
jge
adc
jbe
xchg
jns
fcoml
ja
int
jg
pop
mov
out
loop
out
cld
mov
lods
sahf
cmpsl
shlb
movsb
sar
arpl
mov
push
mov
popa
and
loop
fiadds
clc
cmpb
cmp
lods
adc
xchg
push
stos
in
cmp
popa
pop
test
icebp
cmp
mov
pop
negl
rcrb
aaa
arpl
inc
repnz
mov
arpl
inc
pop
push
cmp
scas
pop
pop
jecxz
ret
lcall
fwait
nop
loop
and
hlt
mov
xorl
xchg
sti
add
fistpl
sub
jae
xchg
jp
mov
mov
fwait
xchg
out
mov
imul
push
cs
cmp
adc
cli
mov
cmp
add
jl
push
and
test
ret
arpl
cltd
or
cmp
mov
ret
mov
ficompl
pop
xor
adc
ror
mov
add
jns
mov
inc
mov
xchg
push
xor
stos
mov
sub
lods
mov
pop
ja
push
div
or
xorb
shll
gs
jne
leave
fstl
jp
pop
sub
lret
pop
lret
mov
iret
lea
jmp
stos
xor
xchg
and
mov
ja
mov
pop
xchg
lds
cld
push
ss
dec
sub
xchg
jns
sbb
adc
out
rorl
xchg
cmpsb
ljmp
mov
frstor
stos
mov
vmovntdq
scas
sahf
dec
aaa
imul
cmp
out
and
rcll
loop
aaa
or
pop
dec
cmpb
or
fiadds
js
repz
mov
ret
int3
jg
ss
inc
add
cld
scas
iret
out
popa
sub
clc
xchg
out
pop
cmp
in
aad
lds
mov
movsl
cmp
lret
push
ljmp
adc
dec
in
aad
lds
mov
movsl
cmp
lret
push
ljmp
adc
jp
sbb
push
mov
ljmp
push
ljmp
adc
push
in
aad
lds
mov
movsl
cmp
xor
xor
mov
push
cli
int3
int3
int3
int3
int3
or
sbb
sub
cmp
xchg
sub
add
jo
mov
pop
stos
push
jp
or
lahf
ljmp
fisubrl
ljmp
push
jp
mov
cmp
or
sbb
push
sbb
sub
cmp
dec
mov
push
jp
mov
mov
jp
dec
mov
lahf
pop
xchg
cmp
jle
sub
sarl
jo
mov
and
jnp
mov
lahf
xchg
mov
pushf
xchg
pop
jbe
lds
xchg
lods
xchg
ja
pop
movsl
push
imul
jg
idivb
xchg
adc
sub
pop
das
dec
loope
and
mov
jp
lcall
mov
fistps
pop
inc
es
insl
mov
out
and
pop
ss
xchg
shrb
xor
aad
mov
sub
and
adc
aas
cmp
int3
or
cltd
sbb
mov
pop
in
jmp
ljmp
pop
fnstsw
push
push
jp
jnp
pop
push
lret
sub
cmp
dec
mov
push
jp
mov
pop
stos
push
jp
or
sbb
sub
push
dec
movsl
outsb
fiaddl
push
xchg
dec
out
lcall
ljmp
stos
add
cmp
imul
mov
mov
fmuls
push
mov
pop
adc
sub
test
mov
jno
dec
sbb
push
mov
push
jp
mov
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
push
jp
mov
pop
stos
push
jp
or
sbb
sub
cmp
lret
mov
adc
es
stos
inc
sub
ret
aas
dec
mov
aam
and
or
pop
mov
inc
movsl
mov
and
lea
mov
ret
pop
aad
insb
adc
and
test
jne
lock
sub
xchg
dec
and
cmovo
dec
mov
cli
and
ffreep
cmp
mov
mov
xchg
adc
cmp
or
mov
mov
filds
mov
push
adc
sbb
cmp
and
divl
scas
jo
pop
jbe
and
data16
cltd
fs
inc
loopne
cld
xchg
pop
gs
adc
add
shlb
loopw
pop
mov
dec
pop
cmp
outsl
leave
mov
pop
push
xchg
pop
sbb
xor
and
inc
mov
sbb
mov
movsb
xchg
jp
mov
sbb
jo
push
mov
dec
pop
sti
jl
xchg
lods
lods
jo
enter
adc
fisubrl
pop
hlt
xlat
jecxz
es
add
xchg
mov
add
imul
movl
test
insl
stos
lahf
fistl
cs
stos
xchg
subl
add
add
push
cwtl
xor
xorb
push
mov
fimull
jb
push
mov
clc
sbb
pushf
in
jno
push
adc
pop
icebp
add
cvtdq2ps
jp
inc
adc
pop
push
in
inc
js
and
int3
lea
not
inc
cmpsb
push
movsb
ss
and
inc
mov
add
push
and
push
and
inc
inc
das
inc
adc
outsb
sbb
ja
pop
xorb
jecxz
push
cmp
xchg
orb
andl
xor
jle
jb
loopne
inc
mov
pop
cmc
outsb
lock
pop
jge
clc
mov
pop
mov
mov
int3
insb
or
mov
fs
lods
mov
jg
subl
cmc
scas
ror
icebp
inc
mov
and
xchg
lods
pop
inc
cmp
ficompl
movsl
adc
mov
adc
dec
add
and
lret
or
xchg
push
mov
and
vsqrtsd
mov
lfs
gs
lods
adc
dec
test
mov
call
mov
adc
sub
cli
pop
ret
aaa
pop
repz
inc
scas
mov
enter
mov
mov
lods
xchg
lret
cmp
shlb
xchg
or
adc
enter
outsb
dec
or
rcll
sub
fisubs
outsb
ss
test
sbb
pop
sub
dec
inc
not
xor
test
stos
pop
mov
sub
inc
clc
jo
sbb
push
xor
pop
pop
push
imul
adc
enter
cmp
adc
fs
outsl
pop
cmp
sbb
in
xchg
repnz
cs
sahf
mov
lcall
fs
daa
enter
xor
pop
loopne
js
and
das
sbb
andb
fmuls
sub
inc
es
int
enter
push
jb
and
adc
orb
cmpsb
push
in
dec
cmp
mov
pop
insl
add
and
mov
iret
in
fwait
addb
dec
inc
int
lods
mov
data16
scas
pop
lea
xor
shr
adc
shl
lods
inc
in
mov
or
test
xor
rorb
fucomip
inc
push
dec
cmpsl
ftst
adc
pop
push
scas
int3
push
dec
mov
and
call
repz
loope
sbb
mov
fmuls
pop
rcl
jb
mov
test
stc
xchg
pop
out
inc
cmp
add
fwait
shlb
xchg
jmp
cmp
fbstp
xor
xchg
adc
les
fadd
jmp
cltd
pop
daa
mov
dec
xor
fists
ss
int3
in
sti
push
gs
cs
aam
and
xor
jns
loope
mov
daa
jne
jae
stc
sub
and
jno
repnz
insl
in
shlb
pop
stos
lret
adc
mov
cmp
je
push
sub
es
sahf
xor
sub
and
out
adc
jle
xchg
pop
mov
xor
adc
adc
adc
inc
imul
mov
lds
push
loopne
mov
ficompl
cmpsl
xchg
in
js
pop
cwtl
std
outsl
push
cmp
inc
mov
inc
push
adc
pop
mov
pop
jae
imul
and
aad
ret
loopne
mov
jae
repnz
jge
or
movl
mov
sbb
push
ja
mov
lahf
xlat
push
les
fidivl
int
push
and
or
xchg
sub
outsb
bnd
test
aaa
xchg
jno
xor
lret
mov
mov
push
cmp
lock
std
int
push
mov
inc
loop
stc
scas
arpl
es
es
sbb
inc
dec
mov
inc
dec
jecxz
in
mov
inc
imul
mov
outsb
jb
stos
cmc
or
cltd
pop
loopne
jge
mov
andl
js
pop
daa
adc
sbb
out
idivb
ret
orl
stos
or
fs
fwait
bound
cmp
test
fnstsw
test
pushf
or
movsl
jb
mov
mov
insb
sub
mov
and
add
gs
sub
in
mov
sbb
repnz
clc
mov
cmpsb
popa
loop
jne
sti
popa
sbb
mov
xchg
cmp
cmc
inc
push
sub
adc
and
pop
in
adc
xchg
xlat
icebp
aaa
int3
jmp
xor
mov
and
scas
les
inc
popf
mov
gs
push
pop
add
dec
inc
scas
or
stos
push
sbb
test
xor
adc
insb
jae
addr16
sbb
fs
lods
out
leave
inc
out
aaa
sbbb
pop
cmc
mov
lods
fnsave
cmovl
imul
and
sbb
pop
sub
sbb
hlt
jl
cmp
pop
cmp
orl
mov
aaa
or
test
shl
pop
jno
inc
push
in
xchg
rorl
test
outsl
dec
lcall
mov
mov
mov
fsubp
mov
out
mov
mov
add
in
jo
pop
xor
push
pop
cli
adc
cmp
js
and
jmp
sahf
shl
mov
pushf
pop
lea
sti
test
std
rorl
pop
mov
mov
aas
mov
sbb
in
in
mov
add
xor
bts
xchg
jne
pusha
ficompl
xchg
pop
xor
sarb
pop
loope
andl
movsb
pusha
loopne
or
or
test
inc
movsb
jl
push
inc
shlb
mov
add
sbb
mov
and
cmc
subl
mov
adc
incb
or
lock
xor
loopne
mov
pushf
jge
inc
cmp
adc
and
popa
popf
mov
test
rep
into
stos
xchg
das
jp
push
data16
jmp
xchg
jmp
mov
rcl
das
movsl
in
imul
push
ret
pop
lods
mov
mov
sbb
stc
in
xor
rolb
inc
mov
sahf
cs
scas
cmp
xchg
mov
push
in
jle
pop
repnz
jle
push
test
and
sbb
dec
push
and
cmpb
sbb
xchg
sub
aam
xor
dec
push
xchg
out
lcall
rcrl
dec
push
cmp
cltd
out
add
call
imulb
xlat
scas
pop
mov
shrl
dec
subl
dec
not
mov
sbb
sbb
jp
orl
xlat
mov
in
xchg
stos
jbe
xlat
or
loop
sbb
mov
sub
arpl
das
inc
mov
pop
jae
lock
cmp
js
push
int
popa
push
adc
cli
ljmp
or
les
lods
dec
clc
insl
scas
imulb
dec
mov
into
xchg
push
daa
xorb
sub
add
push
shrl
push
addr16
mov
and
jp
dec
and
fcoml
sbb
std
in
sbb
inc
and
shll
push
or
and
fs
push
insl
mov
jns
sahf
in
mov
xor
shrl
cmp
cmp
shl
icebp
jne
popa
sub
mov
mov
fcomip
cld
pusha
das
or
pop
test
sti
pop
mov
xor
cmpsl
or
mov
push
xorb
cs
clc
jmp
inc
xor
cld
xchg
ror
mov
push
push
cmp
or
xchg
shl
lock
inc
pop
jg
adc
adc
ret
xor
jmp
push
pop
jne
and
lahf
dec
ss
cmp
mov
dec
push
aas
sub
push
jmp
mov
stc
or
xor
sub
psubb
rolb
inc
movsb
pop
call
sbb
ja
into
cmc
cmp
es
push
leave
push
jo
iret
call
cmpsl
lock
jne
push
js
sub
leave
sub
ficomps
ljmp
pop
stos
xchg
mov
clc
inc
cmc
or
add
ds
cld
and
cld
repnz
or
ret
into
test
ss
xchg
jns
lret
mov
pop
stos
out
sub
into
sbb
cwtl
push
out
fnstcw
sub
cs
insl
repz
sub
mov
into
push
pop
or
xchg
nop
stc
shr
js
jle
push
cwtl
stos
nop
popf
fildll
cmpsb
add
push
pop
sub
adc
mov
jecxz
mov
adc
or
imul
sub
jb
shrl
pop
xor
mov
inc
enter
mov
cmp
push
clc
mov
fsubs
mov
aaa
int
jg
mov
push
pusha
in
xchg
xchg
enter
je
popa
lret
jmp
dec
sarl
add
les
sbb
xchg
push
dec
jb
sahf
cmp
push
repz
iret
adc
repz
testb
pop
scas
sbb
repz
adc
push
xlat
mulb
cmpsb
aaa
add
out
sub
xlat
test
aad
jg
pop
pop
repnz
out
sarb
fadd
clc
inc
xchg
pop
mov
push
pusha
ficoml
lods
pop
mov
cmp
sub
aaa
xor
icebp
scas
iret
faddl
mov
or
xor
repnz
out
jg
cwtl
enter
es
fnsave
js
scas
push
inc
movsb
iret
imul
and
inc
xchg
clc
insb
or
stc
cmp
andl
data16
leave
jmp
push
push
lahf
adc
mov
jge
add
test
xchg
out
and
out
inc
push
enter
jge
stos
out
mov
xor
popa
insl
loop
lcall
mov
sub
mov
cmpsb
mov
stos
sbb
pop
outsl
jle
mov
xchg
mov
dec
mov
pop
mov
adc
xor
cmc
sti
sub
in
sahf
std
popf
loop
mov
mov
mov
mov
sub
idivl
sbbb
mov
pop
jl
jecxz
mov
test
ret
sbb
pop
lahf
aas
lret
frstor
rolb
sbb
or
cmp
adc
mov
inc
push
jmp
mov
mov
pop
sub
cmp
js
fucomip
xor
dec
inc
cmp
add
orl
into
stos
inc
mov
push
pop
and
lahf
mov
xchg
stos
in
jp
aaa
cmpl
aad
into
scas
mov
pusha
adc
inc
pop
sarl
cld
lock
cwtl
inc
pop
bound
mov
add
sbb
push
add
shll
mov
sub
xlat
dec
loop
icebp
xor
fldenv
jmp
gs
mov
fbld
cmp
inc
dec
jmp
sub
push
push
aaa
and
lea
pusha
test
into
out
xchg
jno
cmc
sbb
xor
mov
sbb
data16
push
pusha
push
cmp
out
sbb
pop
mov
fstl
ss
and
lret
sub
fistpll
loope
xor
sub
add
sbb
addb
mov
xchg
mov
add
or
out
subb
sub
enter
add
fcoms
jnp
shrl
jmp
ds
fdivl
repnz
push
inc
inc
sahf
test
repz
rorl
adc
ljmp
mov
add
shl
sbb
pcmpgtw
sub
mov
mov
push
mov
in
test
lds
int3
mov
add
es
add
cmp
mov
subb
mov
pusha
cmp
xlat
in
add
das
add
jle
ja
and
mov
or
mov
lret
shrl
inc
jp
pop
mov
cmp
std
fs
cmp
mov
into
iret
and
mov
fdivp
dec
jmp
mov
pop
inc
mov
sarb
lods
jmp
fcmovu
in
push
out
mov
push
mov
rol
dec
mov
xchg
adc
pop
cmp
movsb
out
xchg
dec
scas
mov
jns
std
inc
in
cmp
mov
pusha
ljmp
les
addr16
jne
ss
mov
leave
cltd
add
popf
jp
int3
mov
insb
lock
stos
shrb
xlat
mov
push
mov
mov
ss
sub
cli
rcrb
push
test
test
xor
inc
in
lret
mov
icebp
inc
test
out
and
pop
cmpsb
iret
and
andl
inc
iret
decl
jecxz
lds
outsl
in
repz
ret
sub
and
xchg
fs
jbe
xor
test
jns
inc
inc
adc
sub
xor
add
std
pop
movntq
pop
xlat
jb
xor
mov
xchg
sub
cmp
aas
xor
loope
xchg
dec
cmp
stos
icebp
inc
add
movsl
push
mov
xchg
cltd
out
push
add
fdivrl
rorb
iret
out
pop
push
mov
mov
addr16
push
mov
add
mov
pop
into
arpl
dec
and
pop
sahf
add
inc
mov
movsb
mov
sti
cmp
mov
sbb
adc
mov
lahf
mov
out
dec
addr16
and
and
xlat
jns
dec
aas
les
aad
sbb
outsb
insl
mul
sub
push
xor
xlat
add
xor
xor
loop
es
mull
rol
test
call
pop
adc
jg
mov
sub
xchg
and
mov
xor
popf
jbe
movzwl
mov
mov
pop
add
fadds
aas
add
jnp
push
sub
sbb
and
je
adc
js
mov
push
or
pop
in
int
push
stc
cmp
sti
enter
sub
pop
mov
cmp
and
pop
sub
mov
int3
int3
xchg
mov
cld
and
xchg
dec
stos
pop
pop
ret
pop
xchg
fucomip
jl
xchg
scas
sbb
xlat
sbb
or
pop
inc
les
lea
loopne
outsl
aaa
ds
mov
mov
adc
or
lcall
loope
lret
fs
pop
test
pop
pop
in
pop
or
inc
inc
pushf
jle
push
xor
push
or
sbb
out
jb
js
jns
shll
mov
mov
mov
int3
jns
pop
or
rclb
addl
inc
jg
pop
outsb
mov
or
das
insl
inc
dec
orb
pop
jbe
int
dec
mov
xchg
inc
sbb
xchg
mov
sbb
fisubs
push
jns
and
movsl
xchg
adc
mov
mov
ret
cmpsb
xchg
xchg
cmpsl
cwtl
or
sub
xor
bound
insb
lahf
xor
mov
mov
jns
cs
add
ret
cmp
enter
in
adc
add
dec
or
inc
dec
jmp
jno
cmp
cltd
jns
pop
or
sbb
sahf
xchg
dec
loop
xor
inc
xchg
mov
xchg
and
cltd
gs
sbb
mov
adc
fwait
out
gs
mov
mov
stos
ficoml
cs
rcr
jnp
push
push
fdivs
outsl
lods
push
fwait
mov
sbb
adc
fwait
inc
mov
mov
dec
imul
mov
adc
cmp
ja
or
subl
stc
cli
or
cmpsb
jmp
sbb
loop
mov
stc
loop
and
gs
movsl
test
mov
lahf
jecxz
pop
mov
loope
xor
or
inc
movsl
cli
add
pop
repz
cmpsb
lea
fsub
jmp
xor
pop
sbb
cwtl
mov
daa
pusha
outsb
cmc
aad
pop
push
pop
shll
enter
arpl
inc
rorl
test
push
push
xchg
aam
cwtl
xor
test
out
shll
movsl
mov
cmp
adc
mov
cmp
stos
enter
aas
add
clc
sahf
movsl
adc
mov
add
xchg
jae
mov
dec
repz
cli
je
sbb
jmp
std
add
dec
jge
pop
mov
shrl
inc
testl
sbb
lods
mov
dec
adc
cwtl
je
cld
cwtl
and
jb
xor
adc
call
jmp
mov
push
rcll
in
out
inc
cwtl
sub
mov
push
outsl
lret
jnp
inc
faddl
push
cmpl
jo
roll
jnp
lds
pop
cmpsb
dec
jns
dec
mov
mov
dec
xchg
adc
xor
scas
rolb
sbb
mov
xor
test
push
inc
mov
add
ja
add
aaa
adc
add
sbb
fistpl
movsl
mov
pop
mov
mov
xor
add
data16
or
xchg
scas
xor
or
sub
sti
xor
repnz
lahf
ja
sbb
and
cmp
cltd
xchg
sarl
icebp
xchg
mov
or
push
pop
pop
es
cmp
int
push
dec
push
popa
clc
pushf
jno
dec
cmpsl
enter
dec
sarl
jnp,pt
xor
pop
jne
dec
imul
pop
sub
mov
pop
int3
mov
push
test
add
jb
and
dec
jp
adc
and
cli
mov
push
or
repnz
loop
jns
sub
mov
mov
xorb
cmpsb
mov
push
add
rcl
bswap
aaa
adc
cmc
mov
push
popf
adc
or
cmp
or
ret
inc
push
and
or
jae
pop
xlat
xor
xchg
test
cmp
or
xchg
mov
mov
jno
and
inc
mov
pop
mov
fisttpl
sub
das
inc
jnp
imul
jo
mov
push
ja
fsub
es
ljmp
test
adc
xchg
pushf
cs
sub
xchg
lock
les
or
fwait
cltd
push
clc
jnp
sbb
jns
xchg
push
inc
jmp
test
fimull
xchg
push
lds
xchg
fisubl
lret
test
int
or
rolb
loop
ret
mov
or
xchg
subl
pop
and
jnp
mov
clc
out
push
arpl
int
dec
out
leave
add
sti
ret
shr
imul
fdiv
jecxz
push
inc
cmp
cmp
sbb
dec
jnp
add
test
sub
adc
fwait
push
lret
inc
out
xor
adc
icebp
clc
js
movsb
xlat
pop
das
out
xor
or
mov
popf
cmp
xchg
repz
push
lea
icebp
lea
aam
cmpsb
in
scas
xchg
dec
add
jp
adc
orb
jne
cmc
loope
dec
adc
mov
gs
or
out
testb
push
and
fildl
add
add
sbb
or
jns
mov
in
cs
jl,pn
mov
dec
or
in
scas
repz
sbb
icebp
jae
ss
pop
jae
test
aaa
and
adc
pushl
mov
andb
inc
aad
fdivrl
mov
cltd
loop
fs
insb
lcall
xchg
mov
push
mov
sarb
dec
call
add
mov
add
dec
test
clc
fs
jmp
repnz
loope
lods
or
push
add
jecxz
jecxz
ret
xchg
push
xchg
enter
cld
xchg
call
mov
mov
mov
or
pop
dec
es
lcall
jns
hlt
pop
dec
arpl
push
and
sub
jbe
cli
xlat
cmpsl
jmp
sub
idiv
pop
shr
lret
mov
adc
or
mov
scas
dec
or
cld
mov
add
mov
cs
lahf
divb
movsl
rorl
cmc
std
fmull
dec
popl
mull
sbb
xor
bnd
jmp
pop
call
aam
cli
mov
xchg
or
mov
mov
loopne
cs
pop
ljmp
dec
inc
arpl
jo
pop
mov
mov
mov
js
hlt
ss
iret
inc
daa
xchg
jp
push
or
xchg
loopne
fsubrp
mov
and
inc
sbb
shlb
stos
fdivrp
insb
push
movsb
mov
in
in
cltd
inc
ss
fcoml
sub
and
cli
fcomps
xchg
stos
and
imul
jge
dec
cmpsb
roll
stos
mov
mov
loopne
cmp
cmpsb
xor
cmpsl
lea
ror
cmp
lods
popa
cmp
and
fld
sbb
mov
jp
les
jle
sbb
outsl
or
outsb
inc
insb
inc
xor
inc
add
mov
sub
pop
test
sub
mov
add
fwait
push
sub
cmp
dec
pop
mov
test
jle
push
and
lods
pop
and
pop
pop
jle
mov
aad
or
lock
movsb
mov
int
mov
xor
dec
shll
mov
cltd
push
gs
dec
loopne
adc
ljmp
push
jp
mov
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
push
jp
mov
pop
stos
push
jp
or
sbb
sub
cmp
lret
stos
push
cli
lret
sbb
cli
mov
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
push
jp
mov
lock
or
lcall
int3
int3
dec
push
pop
add
je
fs
xor
pop
add
adc
iret
jmp
xchg
cltd
imul
je
or
add
xor
or
aam
les
mov
mov
subb
adc
and
dec
sub
cmp
leave
aam
out
xchg
xlat
xchg
loope
cli
loop
xlat
rolb
pop
add
dec
sbb
std
mov
pop
add
and
mov
ret
xchg
popf
and
iret
fstpt
sub
cmp
mov
orl
mov
clc
or
push
xlat
jg
aad
aam
cmc
xchg
sbb
adc
pusha
jns
or
pop
inc
pop
jo
or
or
hlt
push
test
fs
in
xor
fdivs
mov
mov
adc
fincstp
and
adc
fwait
xchg
dec
out
sub
add
not
inc
mov
cltd
xchg
mov
pop
ror
pop
fcomps
imul
sbb
xor
mov
aam
insb
jmp
test
push
lods
mov
sub
sbb
gs
imul
mov
push
xchg
xchg
shl
jmp
shr
dec
adc
add
pop
sbb
dec
inc
jne
sub
pop
lods
mov
mov
cmpsb
mov
test
sarl
movsb
add
js
or
add
xor
and
aam
jmp
xchg
cltd
test
push
pop
inc
imul
sub
and
aam
jmp
xchg
cltd
test
push
cld
adc
or
shll
or
mov
cmp
push
mov
jne
aas
push
incb
rclb
push
pop
js
mov
sbb
xchg
add
xchg
les
push
mov
push
adc
adc
je
xchg
jg
mov
cmp
insb
fwait
rcrb
cmc
add
xor
gs
mov
pop
ficoml
xchg
mov
push
cs
clc
inc
stos
sub
mov
jecxz
inc
outsl
jp
test
xor
sub
aam
mov
leave
sub
xchg
lret
cmp
and
bndldx
addr16
in
mov
std
mov
adc
cmp
aam
add
push
inc
mov
sbb
out
add
imul
rol
ss
or
adc
aas
rorl
jbe
dec
mov
jbe
sbb
or
xchg
push
fs
cmp
mov
mov
and
inc
addr16
cli
fisubl
test
sbb
les
in
cltd
aaa
cmc
andl
cmc
xchg
jo
jecxz
cli
sub
mov
add
shll
mov
mov
pop
stc
pop
push
pop
sub
or
test
sti
add
push
mov
cmp
popf
sbb
sub
or
test
aam
fnstenv
idivl
adc
sub
sbb
jmp
hlt
pop
fwait
push
mov
or
loopne
dec
test
ret
push
xor
int
aaa
sub
orl
arpl
imul
inc
pushf
cltd
xorl
fists
xchg
imul
ljmp
insb
popf
mov
xchg
or
xchg
push
add
mov
push
aam
subb
out
jle
loopne
nop
mov
fiaddl
outsb
rcrb
dec
mov
push
enter
enter
sbb
sbb
sbb
and
jp
jnp
jp
enter
out
leave
icebp
out
cmp
fnstenv
and
sbb
inc
inc
mov
jle
loop
ret
outsb
aas
xor
movsl
movsl
inc
dec
mov
mov
push
popa
mov
mov
mov
jmp
sbb
push
sbb
addr16
push
test
pop
jae
or
ja
xor
pushf
jg
sub
inc
pop
fistpll
or
ret
scas
ss
adc
cmp
ret
outsb
pop
mov
decl
sbb
cmp
sti
add
jge
rcll
clc
lods
mov
jg
pop
pop
pop
xchg
add
xchg
imul
cmp
mov
cmp
imul
insb
data16
mov
inc
xchg
push
mov
daa
mov
mov
push
fisttps
and
adc
mov
jno
lock
mov
xchg
rcll
insl
push
xlat
into
push
arpl
mov
lret
push
shll
data16
leave
fwait
push
jnp
dec
push
das
pop
inc
cmp
aas
jg
imul
jp
sbb
push
dec
mov
je
mov
xor
add
mov
pusha
or
mov
test
stos
dec
in
xor
aaa
xchg
lock
adc
int3
cmc
outsb
fs
or
xchg
je
adc
xchg
mov
lds
ficoms
sbb
mov
test
push
lock
add
lret
dec
push
mov
imul
inc
and
lea
add
mov
xlat
daa
fldcw
mov
pop
jnp
mov
sub
int3
enter
dec
mov
mull
dec
sbb
pushf
orl
sbb
sbb
xchg
imul
pop
lret
mov
add
push
xchg
push
cmpsl
out
out
adc
jnp
mov
fcom
sbb
or
cld
cmp
test
or
xchg
pop
popa
rorl
movsb
push
inc
leave
in
xor
fidivrs
jnp
jecxz
outsl
sbb
sub
ja
mov
xor
adc
addr16
mov
mov
mov
ret
mov
add
pop
leave
imul
ss
dec
inc
xchg
sbb
pop
and
add
mov
mov
mov
imul
or
add
lret
in
dec
popa
xor
mov
mov
jecxz
inc
aad
outsb
cmp
xchg
addr16
mov
lret
push
aad
mov
xlat
insb
scas
jo
pop
sbb
adc
hlt
icebp
xchg
mov
pop
cmpsb
jne
lret
sub
jp
leave
mov
jns
rcr
xchg
xchg
inc
stc
lds
pushf
push
pop
dec
iret
mov
shl
out
dec
ja
xor
sub
mov
mov
into
repnz
outsb
cmpsl
and
cltd
in
add
imul
int3
in
xchg
sbb
gs
mov
mov
jbe
xchg
dec
adc
shrb
add
int3
sbb
mov
mov
pop
mov
aam
repnz
rcrl
stos
lahf
inc
test
mov
mov
pop
ret
sarb
adc
outsl
push
lock
xor
test
into
push
mov
adc
pusha
stos
xchg
lahf
pusha
aas
jae
jb
and
enter
and
adc
neg
mov
or
pusha
inc
push
aaa
mov
pop
push
mov
leave
mov
push
lock
cmp
sti
mov
aam
sbbl
dec
cmp
pop
jg
jl
mov
push
loope
sahf
cmp
push
enter
push
mov
daa
push
mov
sbb
pop
fcoms
sub
cli
iret
adc
push
orl
add
std
dec
js
test
jmp
or
jge
lcall
add
and
inc
xor
push
sub
inc
out
mov
dec
inc
or
ja
lcall
inc
push
push
xchg
mov
cld
jmp
xor
lahf
jo
push
jge
fs
jge
xchg
es
outsb
cmp
out
fnstenv
push
pop
sub
jl
shlb
fsubr
addr16
lret
or
cmp
push
lock
pop
lretw
push
cli
ds
inc
cmpsb
xchg
push
jno
int3
mov
adc
pop
jo
addr16
sbb
test
mov
push
movsl
push
mov
add
jnp
push
and
call
int
inc
adc
insb
ja
cmp
mov
mov
cwtl
shll
into
mov
mov
xchg
and
les
insb
pop
or
xchg
and
pop
pop
imul
inc
mov
pop
mov
daa
add
cmpsb
cmpsl
inc
mov
jmp
cwtl
jg
mov
cmp
sarb
cwtl
stos
add
popf
cli
push
mov
cltd
sbb
cmp
into
insb
sbbb
cmp
pop
push
pushf
mul
dec
and
inc
mov
arpl
inc
les
mov
ltr
scas
sahf
jno
aas
lret
mov
sbb
jg
or
jne
or
jae
repz
mov
mov
fldcw
fnclex
shrl
les
and
jle
pop
shlb
mov
mov
outsb
aas
add
pop
xchg
push
mov
mov
pop
mov
or
dec
xor
push
inc
and
xor
pop
jo
mov
xchg
lret
mov
xchg
std
pop
iret
mov
mov
pop
sub
add
jnp
or
addr16
dec
stos
mov
dec
add
xchg
mov
adc
in
xchg
js
outsl
hlt
das
jle
fdivrp
jns
fists
fwait
aas
jmp
add
add
inc
sub
dec
pop
mov
add
cltd
mov
cwtl
cmp
push
fnstsw
mov
mov
mov
pop
out
dec
pop
icebp
es
push
inc
sub
jae
or
and
pusha
or
pop
dec
push
movsb
pop
or
ret
and
sub
add
and
mov
out
inc
mov
lds
mov
pop
adc
clc
cmp
or
int
jp
jne
test
pop
arpl
mov
mov
and
jl
ja
xchg
or
or
aam
adc
jp
loope
movsb
dec
jbe
adc
jno
add
js
test
stc
mov
mov
cmp
sub
add
jo
std
sub
pop
jecxz
ror
out
mov
rclb
daa
adc
push
mov
cmp
pop
pop
in
xchg
jne
mov
mov
sub
mov
add
daa
cmp
enter
cmc
mov
cli
or
xor
sub
jnp
sub
xchg
pop
add
jo
dec
in
pop
or
adc
lahf
mov
clc
mov
sbb
test
mov
movsb
push
fnstcw
mov
dec
sbb
aam
sbb
fsubrl
popa
cmp
or
jge
sbb
dec
xor
call
add
jmp
pop
cld
repz
out
xchg
cwtl
mov
push
mov
adc
jae
sub
xor
call
pop
ljmp
and
jmp
pop
loopne
mov
cltd
gs
xchg
xchg
iret
ja
jns
shl
call
xchg
aad
adc
aad
daa
in
or
test
sub
pop
cmp
jl
mov
jbe
gs
xchg
je
cmp
aam
cmp
outsl
ret
cmpl
cmp
cmp
in
xchg
pop
pop
and
pusha
seto
xlat
std
jle
sub
pop
int
ficompl
fnsave
push
mov
loopne
xor
insl
imul
and
and
fiadds
xchg
sbb
lods
xor
jmp
pop
fildll
add
imul
adc
ja
lret
push
out
andl
addr16
mov
push
aad
pop
jmp
sahf
or
imul
or
enter
orb
push
and
cmpsl
mov
jb
cli
fdivrl
dec
cli
dec
xchg
fs
push
mov
ja
dec
sub
dec
cmpsb
add
sub
les
mov
stos
push
scas
mov
cmp
cld
repz
je
fisttpll
or
repz
mov
adc
addr16
fsubrs
inc
pop
push
je
jg
out
jo
out
mov
sub
pop
mov
shll
jl
adc
jmp
mov
out
pop
in
or
adc
dec
mov
out
stos
mov
mov
push
pop
call
lahf
aam
scas
add
arpl
add
mov
cs
cmp
mov
adc
adc
hlt
jp
outsl
jbe
pop
pushf
mov
xchg
jp
and
mov
leave
mov
inc
cmp
repnz
push
int3
addr16
push
mov
and
sub
fwait
ret
addr16
pusha
sub
add
mov
cmp
das
enter
inc
sbb
lock
icebp
into
xchg
cli
pop
sbb
cmpsb
mov
test
inc
enter
dec
jg
xchg
andps
andl
adc
or
es
sarl
negl
mov
dec
rcrl
movsb
xchg
imul
or
imul
fisttps
orb
int3
add
lcall
repnz
dec
sahf
loop
cmp
jo
repnz
sti
mov
sbb
push
mov
mov
test
cmp
test
xor
or
dec
dec
inc
les
das
cs
push
into
jecxz
adc
dec
jae
in
fwait
rorl
test
arpl
xor
dec
nop
mov
pop
mov
fsubs
shll
lods
jb
xchg
arpl
leave
dec
jg
cmc
arpl
mov
jmp
pop
daa
xchg
inc
test
add
xor
push
lret
or
pop
inc
rorb
cld
pushf
add
xor
mov
je
lahf
push
in
pop
sbb
loopne
orb
pop
mov
pop
push
xchg
out
roll
cltd
adc
dec
jmp
mov
fld
mov
andl
insb
leave
adc
ret
loopne
roll
dec
inc
xchg
and
stos
add
sti
stos
adc
xchg
leave
pop
xor
ret
xor
icebp
bound
xchg
add
jo
popa
out
cmp
mov
add
adc
fsubrs
push
mov
sahf
mov
pop
fisttpl
mov
jp
lea
pop
outsl
fsubrs
xchg
cmp
and
int
fcoms
and
out
lret
jmp
arpl
sub
mov
mov
sbb
frstor
pop
or
out
sahf
aas
mov
cld
icebp
lea
cmpsl
or
pop
xor
rolb
out
loope
rcrl
aaa
push
xchg
iret
jbe
fimuls
js
jbe
or
xchg
fdiv
aas
xor
xor
fs
dec
and
jp
push
shrb
push
iret
mov
pop
rcll
mov
add
push
push
mov
int3
cmc
fisubl
fs
push
mov
xchg
leave
fnstsw
xor
push
or
mov
add
in
mov
pop
icebp
pop
mov
cmpsl
cmc
rorl
push
jg
std
mov
scas
mov
cmp
add
lods
imulb
or
push
pusha
add
cmp
inc
sub
mov
pop
repz
adc
aam
ja
or
test
out
dec
jne
repz
or
inc
jmp
or
mov
ret
shlb
dec
repz
popa
jnp
data16
jg
mov
xchg
arpl
cmc
xchg
push
pushf
xchg
push
sub
pop
add
mov
xor
repnz
push
call
ds
iret
fsubrl
jle
inc
scas
loopne
decl
data16
jmp
mov
aad
in
lcall
dec
jns
daa
stc
in
xchg
and
loop
jge
jge
jno
or
lds
add
inc
aas
dec
lret
mov
pushf
xchg
xor
scas
insl
icebp
arpl
pop
stc
imul
mov
pusha
pop
cmp
pushf
mov
sbb
outsb
fcomip
sbb
int
xor
and
mov
test
ret
add
push
lods
or
out
xchg
jns
pop
sbb
push
inc
cmp
movsl
repnz
pop
enter
xor
and
imul
mov
inc
test
clc
nop
xchg
test
adc
les
repnz
ret
je
and
out
add
int3
mov
xor
in
adc
cli
inc
jo
mov
ret
lock
std
lahf
sbb
jl
das
sbb
xor
aas
cmp
gs
jp
and
sbb
ret
mov
cmp
inc
mov
dec
add
xchg
cmp
jg
sarl
dec
out
or
shrl
fwait
and
and
ja
cwtl
out
cmp
cmp
cmp
repz
dec
sbbl
hlt
stc
fsts
outsl
jae
insb
test
adc
jg
aad
jnp
mov
cli
lret
cmpsl
daa
mov
xor
test
inc
fimuls
adc
movsb
xor
loopne
add
lods
mov
xchg
mov
cs
jg
mov
cmp
xchg
jecxz
fdivp
scas
imul
dec
in
add
inc
pop
sti
dec
cmp
sbb
push
pop
imul
xlat
mov
mov
imulb
scas
pop
xchg
xor
mov
xchg
xorl
popa
vcvttps2dq
in
dec
mov
js
shl
scas
call
leave
pusha
sbb
mov
cmp
repz
movsb
into
xor
lret
pop
cwtl
sub
int3
sub
arpl
xor
cld
adc
sbb
cwtl
sub
cmp
and
push
pop
fimull
jns
lret
pop
rcrb
rcl
dec
pop
push
mov
cld
mov
add
push
cmc
sbb
int3
xchg
sub
fwait
cmpsl
es
int
dec
imul
jns
xchg
fcomps
outsb
mov
lods
inc
mov
sbb
adc
inc
inc
std
and
xchg
pop
mov
mov
enter
shrl
push
in
push
xchg
xor
mov
in
sti
cmp
sarl
jecxz
les
dec
pop
xchg
xor
xor
cmc
leave
cltd
int3
cmp
in
movsl
dec
gs
fisubs
and
xor
popf
mov
ljmp
in
xchg
mov
fcomi
mov
jl
lds
mov
jg
lahf
sbb
add
leave
add
push
call
or
scas
xchg
nop
mov
jl
xchg
jbe
cmp
sub
cmp
jmp
adc
pop
mov
arpl
cmc
inc
in
cs
sub
inc
cwtl
daa
aaa
xchg
test
add
outsb
add
stos
aas
movsb
jecxz
out
push
in
psrlq
cmp
sub
call
jmp
mov
add
pusha
inc
xchg
les
and
sahf
jns
iret
xchg
xchg
bnd
pushf
frstor
add
aam
in
or
push
sahf
aam
mov
cmp
lret
mov
mov
xchg
mov
fs
cmpsl
or
inc
sub
xor
sbb
fdivr
js
and
add
fbld
test
repnz
push
sub
mov
std
cmp
mov
ljmp
mov
in
lds
adc
jg
jne
pop
movsb
fistpl
cli
outsb
xchg
mov
fisubl
cwtl
inc
jecxz
repz
jae
cmp
mov
mov
adc
sbb
ja
fisubrs
jb
imul
in
add
xchg
incb
es
insl
or
sbb
cmpl
fdiv
std
xor
jg
in
jne
jecxz
sub
pop
inc
nop
cmp
push
imul
and
int
add
mov
jns
xor
sbb
sub
adc
and
inc
mov
out
lds
fwait
enter
jg
pop
lea
enter
pop
lahf
pop
add
ja
pop
pop
orb
ret
xchg
cmpsl
adc
sub
pushf
adc
stc
sub
xlat
jmp
movsb
ljmp
cmp
xchg
das
xor
out
mov
mov
es
pusha
push
adc
int3
addr16
sub
call
out
mov
test
ljmp
mov
sbb
loopne
scas
hlt
xorb
ret
loop
sub
clc
push
mov
cltd
fimull
add
div
test
cmp
xor
add
mov
sbb
call
icebp
pop
in
mov
add
pop
sbb
xor
outsb
pop
push
and
pop
mov
divb
jg
and
fs
das
icebp
dec
xlat
push
aam
arpl
lret
sub
sub
adc
sti
add
enter
repnz
mov
ret
loope
mov
dec
pop
pusha
push
jb
aam
pushf
mov
xor
ds
jae
out
mov
jg
leave
aam
xchg
xchg
ss
out
mov
fbstp
fcos
jecxz
sub
mov
shrb
sub
jo
and
mov
cltd
adc
stos
int3
inc
fdivl
mov
fsubrs
fisttpll
lret
xchg
iret
scas
xor
dec
repnz
icebp
mov
lods
cmc
pop
cmp
out
mov
push
or
test
xchg
xchg
xor
mov
bound
push
inc
xchg
or
fcmovnu
mov
ljmp
rorl
push
xor
fists
out
pop
sti
into
add
jmp
repz
dec
dec
pushl
repz
jo
test
adc
daa
lods
js
pop
push
sub
pop
lods
popa
into
mov
fisubl
add
pop
sub
ficoml
sbb
adc
in
xorb
xor
jmp
and
xor
repz
sarl
lods
adc
pushf
cmp
add
xchg
hlt
dec
mov
pop
aad
dec
jne
mov
and
nop
cmp
ss
dec
mov
cmp
xchg
adc
mov
mov
cs
or
test
dec
fiaddl
pusha
out
sub
test
popa
fwait
mov
add
jge
sbb
dec
xor
mov
fnsave
jl
outsb
cld
cs
pop
outsl
cmp
add
jae
sbb
pop
data16
mov
push
sahf
je
adc
xchg
in
and
push
orb
inc
mov
mov
push
and
xchg
arpl
sub
out
les
mov
stos
pop
sub
adc
out
mov
pop
inc
sub
adc
lret
fsubrs
divl
jne
arpl
xchg
adc
flds
pop
mov
push
cwtl
and
fisubl
jo
in
int
push
jle
int
and
stos
cmpsb
and
into
pop
inc
or
jns
pusha
sbb
int3
push
xchg
push
lret
xor
cmp
add
add
xchg
push
mov
in
mov
cld
das
inc
ljmp
push
out
adc
or
and
shr
mov
je
lock
cmp
sub
sbb
dec
icebp
or
xchg
fs
aaa
adc
out
inc
in
jno
loopne
sub
mov
inc
xor
sbb
pop
sahf
push
adc
das
pop
jbe
aaa
imul
inc
push
repz
das
push
jo
rclb
pop
adc
lds
std
shl
int3
jmp
lods
into
cli
jno
lea
rorl
insl
test
mov
call
pop
int3
push
pop
es
dec
push
sbb
lcall
clc
aad
xchg
lock
pop
adc
fistpll
fildll
inc
sarb
mov
js
push
sar
cmp
xchg
inc
and
sbb
add
jge
push
fsub
aaa
jne
aas
xchg
push
imul
add
cmp
mov
lea
mov
fildl
js
shrb
mov
pop
rcll
mov
push
outsl
jno
jmp
or
mov
aam
xchg
cld
xor
mov
dec
data16
pop
in
andl
out
les
cs
std
xchg
ret
add
adc
jne
es
jge
mov
test
or
aaa
cltd
sbb
loopne
in
cmp
lea
adc
int3
icebp
out
dec
mov
insl
mov
pop
aas
inc
dec
sub
pop
sahf
cmp
add
sub
adc
push
xchg
lods
xor
lret
mov
shll
xchg
xchg
lcall
mov
cmp
mov
adc
cmc
aaa
cmpsb
add
mov
jno
je
aaa
add
ret
cmp
sbb
cmp
dec
dec
iret
jmp
outsl
jns
xor
cmp
ficoml
push
lcall
xchg
dec
test
and
and
movsb
jb
out
shrb
insl
push
pop
fcmove
add
ds
pop
je
mov
jne
inc
push
jno
or
add
xor
and
aam
jmp
xchg
cltd
test
push
pop
inc
imul
sub
and
aam
jmp
xchg
cltd
test
push
pop
dec
imul
sub
cmp
aad
shr
stc
in
mov
mov
mov
or
add
mov
in
sub
outsb
inc
hlt
stc
xchg
in
adc
push
int3
inc
fmul
int3
int3
int3
int3
popf
ja
addr16
arpl
pop
push
testl
pop
mov
out
xchg
insl
xchg
push
lods
inc
fnsave
int
std
pop
in
pop
sbb
xlat
sub
cmpsl
jge
insl
xchg
push
lods
inc
fnsave
int
std
pop
in
pop
sbb
cmpsl
dec
pop
in
ret
ds
jmp
xor
stos
shl
lcall
jmp
mov
xlat
sub
xchg
sbb
dec
jno
jb
inc
inc
push
mov
add
add
xchg
xlat
rol
or
sub
xchg
cmp
bound
mov
mov
pop
lods
aaa
adc
sbb
mov
xchg
push
stos
data16
stos
push
mov
xor
movsb
in
push
in
les
cmp
imul
fwait
cmp
in
fadds
call
add
hlt
or
xchg
insl
xlat
mov
push
push
xor
cld
inc
and
fdivr
sbbb
test
inc
mov
subb
ja
addr16
aaa
int
std
pop
in
pop
sbb
xlat
sub
cmpsl
jge
insl
sar
out
mov
adc
add
jb
ja
fwait
push
test
sbb
stc
sub
mov
js
pop
outsl
mov
mov
sub
enter
jmp
sti
and
xor
pop
in
pop
sbb
xlat
sub
cmpsl
jge
insl
xchg
push
lods
inc
fnsave
int
std
pop
in
pop
sbb
xlat
sub
cmpsl
jge
insl
xchg
movsl
rclb
lods
inc
jb
scas
out
pop
fadds
dec
dec
in
jno
inc
cmpsl
jl,pt
pop
jnp
loope
mov
call
clc
stos
outsb
lock
and
xchg
fsubs
arpl
cwtd
fisubrl
ja
lock
mov
repz
call
lods
mov
sub
push
xchg
js
xor
xor
clc
pop
ds
mov
dec
fisttpl
fisttpl
jmp
hlt
cli
jmp
inc
fisttpl
aam
aad
ss
iret
pop
jnp
repz
inc
lods
cld
ret
adcl
push
mov
inc
rorl
dec
lret
lds
inc
xlat
sub
int3
pop
or
xchg
sbb
enter
lds
push
mov
adc
out
mov
add
and
inc
jecxz,pt
mov
lods
mov
push
pop
lock
inc
pop
popa
jp
mov
sahf
inc
cmp
lock
cmp
imulb
adc
fstpt
xlat
xchg
mov
push
rcrb
inc
mov
cwtl
mov
push
jmp
mov
scas
jbe
jmp
mov
out
jo
lret
cmpsb
sbb
dec
mov
pop
dec
mov
daa
in
cld
leave
incb
in
or
sahf
cli
pop
adc
fildl
sti
mov
jl
jno
lcall
xchg
dec
mull
stos
pop
addr16
cmc
or
arpl
xor
dec
mov
ds
mov
lcall
leave
mov
push
dec
dec
sub
inc
mov
pushf
pop
ret
loopne
push
xor
rcrb
inc
dec
aam
jnp
hlt
cld
push
lahf
jge
imul
mov
mov
daa
pop
xor
ljmp
cmpsb
push
adc
adc
mov
and
dec
ljmp
jl
scas
jb
out
xchg
cltd
sub
push
push
nop
jnp
jnp
ja
mov
das
pop
lret
lea
clc
test
clc
jge
das
jne
pop
xchg
adcb
jno
je
rcrl
mov
scas
test
push
out
and
rorl
inc
call
xlat
into
out
pop
cmp
mov
leave
psraw
test
add
stos
dec
mov
push
cmpb
loop
sahf
rorl
mov
frstor
into
xchg
jmp
push
mov
iret
fcomip
mov
cmp
mov
adc
out
push
inc
lahf
movups
jne
int
mov
mov
test
pop
jb
lea
inc
mov
mov
es
out
sbb
fldl
aaa
outsl
sti
cmpl
roll
push
pushf
or
pop
in
and
push
adc
lods
negl
je
sbb
lcall
insl
cmp
mov
enter
sub
movsl
lret
mov
imul
jge
mov
jle
xchg
dec
xchg
ljmp
std
push
mov
aaa
xchg
sbb
jle
dec
sub
lea
xor
aaa
and
mov
fwait
test
xor
hlt
adc
cltd
cmpb
sbb
out
in
dec
jp
jae
pushf
xchg
gs
push
dec
mov
popf
push
rol
and
stos
mov
or
pop
pop
jnp
push
pusha
push
or
aas
imul
icebp
or
test
fsub
int3
jno
test
cmp
subb
xchg
cwtl
stos
xchg
jg
pop
sbb
dec
push
icebp
aam
pushf
xor
or
jb
lret
adcb
inc
sahf
aam
leave
push
cmp
cmp
fldenv
outsb
sahf
rcll
out
pop
loopne
dec
outsl
jl
dec
je
frstor
cld
xchg
in
jno
popa
xlat
je
addl
mov
adc
jne
xchg
popa
push
add
mov
mov
addr16
dec
mov
xchg
push
outsb
push
out
and
test
mov
pop
adc
es
outsb
add
pop
pop
dec
mov
lahf
aam
movsb
sti
mov
xchg
and
subb
mov
mov
stos
test
mov
sub
imul
es
dec
flds
popf
jg
pop
mov
mov
cmc
xchg
mov
in
xchg
es
adc
cmp
push
cmp
push
into
shrl
cmp
lock
in
jmp
lcall
jmp
lret
mov
jle
inc
scas
or
bound
and
xchg
mov
cld
ljmp
lock
mov
push
mov
and
stos
xor
mov
mov
jnp
ja
pop
push
dec
insb
mov
fwait
cmp
loope
into
dec
mov
popa
cs
mov
ja
xchg
fsubrs
sti
push
scas
sbb
pop
sbb
ror
das
jmp
test
inc
push
xor
mov
rcrl
and
sahf
dec
mov
xchg
xor
dec
pop
daa
or
mov
pusha
sbbl
out
subl
push
jbe
fcmovnbe
add
pop
rcl
jmp
enter
outsl
hlt
sub
test
ret
sub
cld
shrl
aad
xchg
ret
and
adc
push
ret
mov
jge
push
out
mov
cmp
out
mov
cmp
in
cli
xchg
xor
lcall
mov
cmp
je
out
push
cmp
ja
fxch
stos
adc
mov
jb
test
shlb
daa
and
pop
xchg
jge
pop
or
pop
daa
ret
testb
in
mov
fstpt
pop
stc
and
outsb
mov
aas
sahf
lds
pop
fstpl
add
lods
xor
arpl
fldcw
daa
aad
or
scas
loope
cmp
aam
adc
loope
adc
mov
add
xchg
lret
les
cmp
mov
icebp
push
lcall
cmc
cwtl
lods
xchg
xor
pop
xchg
popf
push
jl
pop
dec
xchg
out
sub
push
mov
iret
xchg
push
aam
jae
mov
lcall
outsl
xchg
popa
pop
add
mov
or
pop
cmpsb
cmpsl
lock
ljmp
std
dec
push
push
cwtl
mov
jae
push
jo
cli
das
and
in
sbb
enter
movsb
nop
cmp
hlt
jbe,pn
pop
and
fs
iret
xor
pop
inc
push
ret
je
or
push
sub
sbb
cmp
mov
loope
rcrl
cmp
inc
mov
or
cmp
xchg
enter
sti
mov
cmp
mov
sub
cmp
inc
sub
test
outsl
sarl
ja
lret
mov
sbb
sbb
sbb
dec
mull
sbb
hlt
push
cs
pop
and
add
enter
call
fsts
mov
repnz
xchg
cltd
push
mov
jmp
jecxz
lock
mov
dec
ljmp
inc
sub
cmp
loopne
leave
mov
loopne
jne,pt
inc
cmp
sub
divb
jno
stos
sub
fwait
inc
insl
sahf
dec
scas
sub
sub
test
shl
mov
inc
mov
sub
stc
mov
mov
jbe
adc
pop
jb
cmp
in
shl
mov
push
xchg
fwait
sbb
adc
mov
aas
inc
mov
loope
xor
jnp
out
xchg
fdivr
push
jl
push
insb
lahf
pop
mov
mov
shrl
test
cmc
les
pop
mov
xchg
xor
pop
call
shll
mov
out
lods
or
jle
pop
pop
xor
xchg
stos
in
add
lahf
cmc
sbb
shll
clc
js
shl
pop
gs
iret
fld
fwait
les
jp
popf
adc
inc
rorl
jmp
repnz
lahf
hlt
pop
dec
mov
mov
xchg
add
pop
ljmp
or
jbe
out
mov
scas
mov
or
out
add
sub
cmp
pop
mov
repz
mov
dec
jmp
rclb
or
cwtl
pop
mov
or
shll
popf
orb
jae
icebp
shl
xchg
push
push
mov
pop
jle
cmpsb
xchg
and
lcall
mov
dec
fcmovne
pusha
sub
xor
mov
xor
mov
outsl
dec
mov
popf
sub
mov
mov
pop
lret
inc
jae
lods
add
jno
clc
lock
jb
xor
cltd
ds
dec
idiv
or
lahf
jne
data16
out
js
sub
leave
fcomi
push
push
adc
or
sbb
cmp
lea
mov
or
add
sbb
xor
or
lcall
mov
adc
xchg
push
and
push
pop
xor
dec
mov
jbe
sbb
jns
movsl
mov
inc
ret
mov
int3
scas
leave
or
pop
inc
push
fidivrl
ret
mov
mov
dec
icebp
imul
insb
arpl
cmp
ret
dec
outsl
inc
fcomi
mov
xchg
or
sub
jnp
mov
pusha
push
clc
xchg
xor
inc
shll
add
mov
dec
cmp
scas
and
dec
xor
roll
xor
lahf
or
loop
push
subl
dec
add
cmc
dec
mov
inc
clc
lods
dec
fwait
stc
jno
push
mov
mov
push
lret
test
jno
push
outsl
sub
pop
aad
push
push
test
add
out
mov
into
push
jbe
adc
cli
out
stos
xchg
xor
mov
ja
push
push
sahf
movsl
pop
jae
sub
xlat
xlat
cld
ret
stos
data16
out
cli
jb
xchg
and
repnz
rorb
pop
popa
aad
cmpsl
xlat
mov
imul
pop
jae
ss
call
shll
aad
pop
fisttps
or
xchg
mov
addr16
ss
mov
sbb
adc
cmp
sub
icebp
sub
cmp
jbe
adc
mov
xlat
xchg
lahf
mov
fwait
leave
dec
je
xchg
add
jmp
inc
dec
add
mov
into
mov
add
mov
push
mov
das
adc
jnp
in
aaa
fwait
pop
mov
insb
icebp
mov
scas
cmp
arpl
hlt
xor
adc
int
outsb
popf
sub
sbb
push
loopne
cmp
xor
cmp
test
loope
sti
pusha
aaa
adc
cmpsb
std
mov
lahf
sbb
inc
rol
lret
xchg
jnp
in
push
jae
inc
test
mov
pop
imul
testb
ss
lds
movsb
loopne
lea
dec
jmp
jne
and
sub
lock
add
sub
jge
mov
jae
fwait
cmpsl
scas
cmp
outsb
ficomps
sbb
pop
shl
mov
call
cwtl
sbb
xchg
fdivs
push
inc
roll
ss
push
sub
pop
loope
call
sbb
mov
mov
sbb
inc
leave
ret
shrl
daa
insb
fsubp
hlt
popa
test
inc
mov
shl
cmp
pop
xchg
cmp
sbbl
mov
adc
jl
daa
fisttpl
in
add
into
sub
fs
inc
xchg
test
dec
test
mov
sbb
push
push
ficompl
push
data16
pop
adc
ss
xor
int
movsb
dec
lds
cmp
mov
xor
mov
inc
jno
repnz
aam
pop
sub
dec
pop
dec
mov
repz
push
subb
in
inc
mov
pop
inc
movsb
notb
pop
pop
adc
xchg
push
fwait
xor
jb
jle
pusha
rolb
or
nop
mov
shlb
std
shlb
movsl
adc
imul
mov
ja
pushf
mov
out
stos
sub
sub
mov
adc
aam
jl
int
sbb
push
flds
xchg
pop
arpl
out
mov
ds
stos
inc
jbe
push
fbld
pop
addr16
fmuls
les
sub
and
nop
pop
or
sub
mov
push
inc
arpl
jne
xor
push
test
loopne
pop
inc
cld
mov
adc
lret
pop
scas
neg
popa
rorb
xchg
fisttpll
movsb
mov
inc
cltd
mov
test
dec
movsb
scas
scas
dec
test
lret
jmp
ret
std
movsl
fildl
rcl
lcall
xor
mov
lea
and
jnp
nop
je
pop
pop
jle
call
push
inc
mov
xlat
pop
out
scas
dec
and
and
mov
cmpb
imul
cmp
fdiv
push
mov
dec
js
std
inc
addr16
je
out
xor
add
inc
push
pop
xor
into
fs
push
xchg
cmp
aas
stos
mov
fnsave
inc
jp
movsb
mov
mov
adc
push
add
sbb
dec
adc
dec
jl
cmp
and
loop
in
xlat
mov
loope
call
stos
dec
cld
pop
xor
dec
andl
mov
rolb
lcall
adc
test
push
into
cli
shlb
inc
adc
cwtl
out
je
push
sbb
xchg
and
dec
sbb
push
xchg
inc
jmp
jns
les
ret
sub
sub
jg
push
pop
mov
icebp
jno
pop
lret
add
mov
xchg
dec
and
ja
jnp
sbb
out
pop
aam
xchg
and
push
in
bound
inc
push
xchg
pop
mov
sub
adc
add
mov
repz
lahf
mov
stos
cltd
imul
hlt
sti
hlt
push
inc
mov
in
lea
mov
das
outsb
testl
xchg
lahf
inc
fwait
push
outsb
xchg
push
stos
xchg
jb
pop
es
adc
adc
loop
cmc
mov
test
push
popa
or
imul
jnp
jl
cmp
loopne
lahf
push
int
icebp
fldcw
mov
jmp
xor
jne
stos
dec
xor
lret
in
pop
xor
jno
inc
sti
xchg
mov
adc
lret
xor
sbb
xchg
sbb
sahf
fstl
repz
arpl
jmp
insl
xchg
sub
push
popf
mov
inc
dec
jns
pop
inc
add
into
dec
scas
pop
jg
pop
push
fs
xchg
adc
bound
cmp
sbb
xlat
ret
adc
aas
call
adc
cmpsl
xchg
add
sbb
jmp
rcrl
sub
push
cltd
mov
test
sarl
cmp
jns
push
int3
mov
fwait
cmp
ss
insl
sub
stos
iret
or
xchg
lds
int
nop
hlt
dec
movsb
adc
mov
sarl
sub
out
pop
dec
shll
ficomps
fcomip
fwait
jnp
rolb
pop
scas
adc
dec
cli
repz
lret
fcoml
ja
inc
out
cmp
mov
lods
stos
movsb
push
pop
fildl
cmp
iret
arpl
jle
adc
push
aas
push
pop
test
jo
scas
jecxz
rorl
mov
push
mov
loop
lock
inc
or
imul
sub
cmp
imul
dec
repz
push
test
mov
ljmp
mov
push
push
fwait
stc
insb
inc
or
pop
rolb
cwtl
fcmovbe
mov
sti
mov
fnstsw
loopne
mov
inc
cli
push
push
shlb
outsb
vpcomq
daa
push
jae
mov
lods
pop
int3
fnstsw
ficoms
adc
xchg
fstpl
sbb
mov
push
mov
in
inc
mov
mov
iret
popf
stos
push
imul
aas
in
rclb
pop
and
repz
pop
xor
popf
mov
push
popa
fists
pop
cltd
and
js
mov
les
sbb
push
pop
lock
mov
add
outsl
fnstsw
lods
or
lahf
jo
arpl
ljmp
cmp
lods
mov
xchg
mov
lods
adc
icebp
into
mov
call
xlat
mov
pop
in
add
ret
fwait
mov
das
pop
mov
mov
call
loope
movsl
roll
int
lock
add
mov
lods
jb
out
gs
push
pop
cmp
cmp
pop
cmp
outsb
pushl
sub
push
sbb
add
sarl
inc
adc
mov
and
aam
inc
inc
scas
and
fimull
test
xchg
lods
sub
lret
das
rolb
mov
pop
pop
pop
cwtl
sti
aas
adc
jmp
xchg
and
sahf
out
rorb
mov
fidivrl
cwtl
sub
mov
movsb
lods
bnd
movsb
fsubrl
inc
mov
jnp
dec
xor
push
mov
xor
pop
jne
decb
cli
addr16
orb
pop
inc
push
inc
sti
and
adc
jo
in
repnz
fidivl
jl
dec
sbb
daa
fucomp
pop
push
ret
rol
pop
sub
jl
dec
jle
jmp
dec
int
mov
call
lret
out
call
or
xchg
es
cmpsb
push
filds
sub
sub
or
mov
scas
mov
mov
add
mov
xchg
hlt
add
cmp
into
jecxz
into
jl
mov
adc
inc
bound
mov
xor
pop
addr16
test
ret
mov
lds
call
iret
jl
add
stc
pushf
lea
mov
mov
jae
and
mov
sbb
push
xor
inc
repz
or
xchg
std
insl
in
xchg
insb
test
insb
les
inc
ret
cmpb
xor
jns
mov
imul
push
fwait
jge
fadds
add
iret
or
push
lret
cmp
or
pop
in
sub
jb
clc
lds
dec
jne
sub
pop
xchg
pop
pop
test
jnp
jp
gs
push
xchg
sbbb
cmpsb
pop
xor
pop
wrmsr
pop
add
in
nop
sbb
sub
jo
cmpsl
mov
mov
sbb
gs
adc
mov
inc
add
sti
hlt
lods
je
in
es
inc
lret
dec
inc
push
inc
mov
xor
or
nop
insl
rclb
pop
cmpsb
movsl
inc
pop
dec
insb
loopne
push
cmc
test
frstor
sbb
add
stc
daa
cmpsl
jp
out
jmp
shll
and
dec
xor
push
mov
stos
lods
mov
sub
ja
add
lock
inc
insl
pop
lret
cwtl
test
cmp
data16
xchg
mov
int3
sahf
data16
movl
pop
test
mov
fcomi
inc
pop
das
dec
jp
idivb
jp
ja
adc
out
int3
jl
sub
dec
and
adc
neg
rorl
leave
int
xor
or
out
inc
add
xor
cli
loope
out
cltd
ljmp
ds
inc
or
scas
bound
push
imul
or
mov
bound
pop
lret
imul
sub
call
ljmp
movsl
xor
leave
pop
lcall
add
fldl
fildll
mov
xor
fs
ficomps
aas
xor
or
scas
stos
mov
fistpl
out
cwtl
test
sub
jg
pop
je
shll
xor
jo
xor
xchg
xlat
xor
iret
xor
sub
ret
int
shr
lret
lods
fisubrl
cmp
push
mov
js
ljmp
dec
adc
lods
sti
shrl
adc
mov
fwait
jbe
inc
mov
loope
and
or
inc
cmp
adc
cmp
cmp
push
jae
cli
fdivs
fildl
xorb
pop
loop
mov
scas
push
ljmp
mov
add
ds
jl
jg
shlb
aad
xor
les
or
dec
iret
adc
inc
mov
push
aaa
pop
sbb
cltd
iret
pop
dec
fsubrl
neg
mov
mov
js
movsb
imul
bound
jge
scas
inc
cmovg
pop
rclb
in
rolb
push
and
insl
dec
mov
rol
es
data16
mov
in
addr16
outsl
mov
out
sbb
push
mov
mov
clc
mov
lahf
adc
xchg
add
or
mov
xor
loope
inc
cmpsb
mov
xor
adc
dec
xor
pushf
pop
mov
mov
in
xor
dec
sti
jge
add
sbb
jmp
stc
loopne
lret
push
inc
aas
cmp
push
pop
or
xchg
push
test
rcll
xchg
div
popa
xchg
sub
jge
jge
mov
xchg
mov
mov
popa
movsb
mov
gs
cld
in
cld
ja
mov
sti
and
fcomi
inc
pop
mov
ret
dec
dec
mov
test
fcmovnbe
dec
sbb
fnstcw
enter
shll
rolb
xchg
mov
cli
add
mov
clc
lea
fdivl
or
dec
sub
into
or
xor
inc
sbb
cmc
ja
rcrl
icebp
push
and
adc
sub
sbb
sahf
pop
mov
sub
into
sub
gs
adc
in
fxtract
add
mov
jecxz
mov
cltd
sbb
loope
push
rcrl
rcl
mov
push
lcall
pop
and
jmp
call
loope
lahf
pop
les
adc
add
cmpsb
and
icebp
std
cmp
inc
xchg
cld
lock
lods
imul
push
xchg
orl
cmp
and
mov
pop
sub
pop
in
mov
xor
data16
pop
fs
push
or
inc
cli
pop
out
pop
nop
pop
and
mov
xor
sti
mov
cmp
jne
cmpl
or
adc
xor
lock
in
jne
inc
dec
cmpl
or
inc
push
inc
icebp
jg
in
inc
and
cmc
xchg
sub
pushf
mov
enter
incl
test
push
or
push
jg
ss
xor
jb
nop
shll
dec
lret
or
or
scas
jge
shlb
mov
adc
fsub
mov
shrb
or
cmp
jle
sbb
lahf
push
cmp
mov
pop
inc
or
inc
cmpsb
sar
daa
jmp
sbb
cmp
movsb
call
sbb
test
push
push
mov
jle
into
test
repz
ds
push
and
rep
insb
dec
ss
mov
adc
jns
nop
loope
pop
sub
test
ss
ja
lret
or
cmp
mov
mov
push
lods
inc
fnsave
int
std
pop
in
pop
sbb
xlat
sub
cmpsl
jge
insl
xchg
push
lods
inc
fnsave
int
std
pop
in
pop
sbb
xlat
sub
cmpsl
jge
insl
xchg
push
lods
inc
fnsave
int3
daa
std
push
in
pop
sbb
or
pop
mov
cmpsl
jl
insl
xchg
push
lods
inc
fnsave
int
jge
insl
clc
loop
repnz
xchg
xlat
sub
pop
test
js
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
push
call
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
push
push
call
add
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
add
add
push
add
add
inc
add
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
pushf
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
push
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
les
add
int3
push
add
aam
add
faddl
add
in
add
in
push
add
hlt
push
add
pop
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
or
add
add
mov
add
test
add
jl
add
je
add
insb
or
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rorb
add
fmull
add
lock
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
or
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
