jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
dec
in
pop
push
pusha
lods
mov
pop
pop
lods
bound
push
pop
add
add
add
push
pop
add
push
add
cmpsl
add
insb
add
add
add
and
xchg
and
daa
add
jae
sub
add
add
add
inc
pop
jae
add
add
add
add
add
add
add
insl
add
xlat
add
add
push
push
add
add
add
jae
and
flds
sub
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jbe
jae
adc
add
add
add
add
add
cmp
push
add
add
add
add
inc
add
add
add
add
adc
add
add
add
add
lret
add
add
add
add
loopne
jbe
push
add
add
add
add
push
add
add
add
add
add
push
add
or
push
add
add
push
add
add
xchg
add
add
addl
jae
or
add
add
push
add
add
add
add
or
pushf
add
add
add
out
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
adc
add
leave
add
add
add
and
sbb
add
add
add
add
adc
add
add
add
xlat
add
add
inc
add
xchg
xchg
add
add
loopne
adc
add
and
enter
addb
add
add
and
xchg
add
jae
and
add
and
add
add
testb
out
add
add
add
add
add
add
verw
add
add
add
jae
sub
add
add
add
add
add
lock
add
push
add
add
add
add
verr
add
add
add
add
add
add
mov
cmp
add
adc
add
cmp
mov
mov
add
add
add
add
add
add
push
add
lahf
add
add
add
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
loopne
jae
sbb
inc
pop
mov
addl
out
add
add
add
add
xchg
add
add
push
add
add
lret
add
add
pop
add
add
mov
add
testl
adc
das
add
adc
add
add
add
xchg
add
add
add
add
add
add
add
add
out
add
sbb
jnp
jae
sub
jbe
mov
add
addb
add
add
add
add
add
add
add
add
sbb
movl
push
add
add
add
add
add
and
pop
add
add
movl
loope
addr16
insl
mov
inc
mov
xor
int3
jmp
jl
cmpsb
hlt
bound
sarl
sbb
xchg
insb
mov
int3
push
jno
sbb
or
js
divb
jmp
cmp
sahf
out
mov
loope
scas
adc
jmp
das
insb
dec
scas
frstor
arpl
test
into
xchg
loope
cmp
adc
arpl
shrl
aaa
sbb
dec
in
and
and
test
jno
dec
cmp
sbb
jae
push
jge
cmp
dec
jl
inc
scas
jbe
loop
shll
popa
js
pop
rcr
call
out
sahf
mov
add
pop
lret
lahf
out
lock
dec
mov
icebp
js
insb
jno
hlt
cltd
clc
lock
es
cmp
inc
jbe
sub
adc
xor
xchg
inc
rcrl
and
push
sub
xchg
xor
int3
out
not
sub
insl
lds
cld
lret
xchg
roll
ret
adc
negb
mov
dec
nop
mov
loop
mov
pop
jecxz
daa
sbb
scas
in
sbb
jns
sbb
add
scas
add
sub
int3
and
jle
add
pop
add
xor
xchg
es
jo
push
loopne
xchg
test
sub
xchg
subb
in
das
cmpsl
rcrl
loope
outsl
push
test
cmp
hlt
cmp
dec
jbe
push
xchg
dec
xchg
fsubs
xor
sbb
movsb
mov
inc
push
xor
sahf
mov
repnz
mul
shll
dec
mov
in
cmp
mov
mov
js
icebp
sbb
dec
push
add
sbb
pop
test
dec
stos
sbb
sub
scas
testb
xor
roll
jae
into
lds
popf
dec
jno
dec
adc
into
and
xor
shrl
bound
sbb
dec
fstl
pusha
jecxz
mov
jge
push
repz
add
push
repz
xor
test
out
mov
nop
leave
adc
sbb
shll
jae
sbb
aaa
scas
mov
fcoms
and
xor
lock
loopne
icebp
cld
cmp
outsb
iret
imul
scas
scas
pop
add
stos
aaa
xchg
mov
xor
test
pop
mov
cmp
or
pop
jmp
push
adc
in
sbb
xor
jl
icebp
test
add
jmp
mov
xchg
outsb
mov
mov
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
add
xor
and
pop
lods
xor
adc
add
dec
movsb
pop
aam
les
adc
add
xor
and
push
lods
inc
mov
xchg
insb
test
movsb
pop
aam
les
or
sbb
in
add
xor
and
push
lods
inc
mov
xchg
insb
test
sub
pusha
mov
mov
push
mov
decl
pop
cmpb
pop
movsl
aam
jns
movsb
fcomps
cmpsb
test
xor
xchg
push
bound
cmp
shll
mov
dec
in
cld
cmp
push
lods
sbb
loope
jb
push
mov
insb
out
jge
dec
into
mov
xchg
andl
inc
fldenv
mov
xchg
nop
xchg
cmpl
sbb
cmp
fdiv
jns
sbb
sub
add
sbb
out
daa
dec
push
jne
gs
test
sub
sub
fs
cld
jmp
cmp
jae
aam
jecxz
aaa
mov
out
adc
dec
cmp
mov
hlt
or
jecxz
in
add
xor
and
push
lods
inc
mov
xchg
insb
test
movsb
pop
aam
les
or
pop
push
in
insl
test
inc
popf
cmp
or
call
xlat
pop
enter
lods
jnp
jle
jns
xorb
test
adc
sub
je
fs
or
push
mov
nop
stos
xchg
dec
jge
pusha
scas
pop
test
inc
mov
xchg
insb
test
movsb
pop
aam
les
or
sbb
in
add
xor
and
push
lods
inc
mov
xchg
insb
test
movsb
pop
aam
les
or
sbb
in
mov
sbb
jg
daa
sbb
fs
xchg
or
cmp
lock
fsubs
subl
scas
inc
stos
xor
aad
sbb
xchg
inc
push
sbbb
jno
adc
std
pop
cmpsl
adc
cs
hlt
jo
inc
rcrb
push
jle
imul
aas
movsl
aaa
stos
inc
fcoms
inc
lds
cmpsl
movsb
outsl
add
ret
or
aam
pop
pop
lret
hlt
jecxz
in
out
cmp
adc
pop
lea
imul
xchg
aaa
mov
in
int
mov
cmpsb
xchg
lds
mull
xchg
imul
xor
or
mov
mov
daa
cwtl
aaa
cmpsl
xor
sbb
bound
mov
lock
ficoms
sub
out
mov
movsl
in
xchg
mov
negl
jge
les
or
and
sahf
insl
nop
mov
mov
ffreep
ffreep
hlt
mov
inc
mov
shll
mov
scas
mov
sub
mov
jmp
and
lock
sub
jae
sbb
dec
mov
or
adc
fsubl
pop
incl
out
dec
lods
es
mov
cmp
je
mov
sbb
add
lret
sbb
mov
rcrl
repz
pushf
arpl
das
addb
jo
lods
mov
or
mov
mov
adc
pop
dec
repnz
aad
cmp
xor
inc
sub
xchg
jl
lds
dec
int
mov
es
fsubrl
or
mov
xchg
ret
push
lds
les
cli
push
lds
movsb
mov
data16
xchg
inc
sbb
xchg
mov
sub
mov
dec
pop
dec
jnp
sbb
cld
scas
mov
push
mov
leave
mov
stos
enter
nop
setb
repz
test
fidivrl
outsb
ret
scas
ret
xchg
mov
mov
cmp
add
in
fnstenv
fidivrs
mov
imul
dec
xchg
ss
mov
jge
popf
xchg
dec
shll
cmp
adc
cmp
adc
ficoml
pushf
cmp
add
push
sbb
jle
aam
sbb
push
jmp
adc
fs
mov
jns
popf
outsl
daa
add
sti
xchg
inc
push
dec
mov
lea
pop
in
scas
rcrb
cmc
sub
pop
push
push
out
mov
mov
cwtl
jns
je
push
inc
jb
push
inc
jg
mov
imul
lahf
inc
jle
add
cwtl
pop
mov
pop
pop
adc
push
inc
xchg
hlt
jmp
and
out
jg
push
adc
and
int
stos
in
cmpsl
fdivrs
jge
mov
inc
xchg
stos
dec
out
xchg
aas
scas
and
mov
jne
xchg
add
dec
cmp
inc
iret
add
jo
dec
adc
xchg
inc
addps
loop
ds
cmp
pop
and
sub
daa
push
inc
mov
mov
je
scas
ret
add
pop
lret
mov
push
push
andb
mov
or
jecxz
fidivs
ret
jp
in
pop
ljmp
push
cwtl
imul
mov
flds
adc
and
addl
loope
jl
sub
dec
push
pop
sbb
pushf
sbb
cmp
mov
addr16
or
or
decl
clc
add
jns
pusha
jo
jo
loop
jno
shr
add
push
adc
sbb
add
bound
adc
mov
icebp
add
pop
mov
or
mov
xchg
sbb
stos
sbb
mov
dec
adc
inc
pop
sbb
test
mov
xlat
cwtl
idivb
fs
lahf
and
movsb
push
frstor
ds
gs
cld
lcall
outsb
leave
mov
adc
test
push
bound
aaa
pop
xor
or
rclb
jae
inc
sbb
pop
in
ret
sbb
cs
pop
ret
inc
inc
push
fs
jmp
dec
cwtl
push
subl
testl
shll
aaa
ret
fisttpl
jmp
sbb
push
cmp
in
cmp
xor
adc
adc
dec
fstp
push
scas
mov
xchg
push
pushf
jns
lahf
jl
xor
push
in
fidivl
add
cmp
out
mov
jns
inc
mov
popf
sti
leave
fisttpll
inc
enter
in
js
cmp
push
imul
sbb
pop
mov
fldt
adc
push
fsubs
jmp
cwtl
stos
add
push
and
lea
cmpsb
pop
or
sti
psllq
hlt
xchg
fsubrp
out
sahf
dec
fisubs
jno
jecxz
aas
faddp
or
mov
fs
pop
es
mov
cmpsl
inc
cmp
cmp
fldl
int
ficompl
dec
sbb
testl
push
add
out
or
push
dec
leave
or
out
adc
sbb
jle
pop
xchg
sub
mov
add
loope
sbb
mov
add
fstl
push
int
les
mov
fs
adc
repz
mov
test
and
cmpsl
mov
fsubl
ljmp
ss
js
dec
dec
cmpsl
in
and
daa
xchg
das
xor
mov
pushf
repnz
loopne
adc
stos
lock
les
cwtl
mov
lods
adc
jnp
push
fs
xor
cwtl
aas
call
xor
cmp
stos
incl
rcrl
jg
fcompl
fisubrl
insb
jne
sbb
fisttpl
ljmp
mov
mov
rcll
mov
cmp
mov
mov
jp
or
outsb
adc
xchg
sub
fbstp
push
dec
mull
imul
psubsb
pop
out
lods
jle
in
insl
lret
xchg
pushf
mov
adc
cmp
movsb
test
sbb
cwtl
cmc
sbb
aas
dec
mov
mov
adc
add
cld
or
inc
add
pop
cmpsl
pop
mov
into
in
xchg
add
xor
in
inc
popl
mov
repnz
bound
cwtl
jg
or
push
mov
adc
jle
adc
push
or
dec
outsl
sahf
stc
icebp
inc
sub
cmp
arpl
mov
loope
push
push
psubq
rcrl
mov
aad
scas
cli
in
fisttpll
loope
lods
test
mov
scas
call
mov
mov
jo
sub
mov
mov
fsubrs
outsl
popa
cli
sub
cmpb
fnstsw
sbb
in
js
outsl
in
ss
shlb
out
test
sti
filds
sti
iret
das
push
xor
les
inc
jecxz
jbe
xor
scas
xchg
dec
lret
cli
pop
mov
cmpsl
decl
pushf
adc
dec
mov
xlat
add
xchg
into
xchg
aas
clc
fmulp
aam
xor
sbb
mov
incb
adc
mov
rcrb
cmp
dec
andb
jmp
mov
loopne
xchg
pop
sahf
lds
popa
mov
mov
subl
in
add
and
mov
leave
push
or
scas
sub
jnp
xor
mov
lret
pop
outsb
jg
xchg
xor
sbb
das
dec
mov
rclb
scas
sub
dec
insb
push
outsb
or
lcall
cmp
imul
sub
shll
test
inc
xor
negb
leave
lret
stc
vmovapd
jle
sahf
jl
and
insb
jo
push
mov
mov
add
std
push
ficompl
dec
imul
popf
dec
sbb
hlt
mov
jbe
out
dec
fmulp
jp
pop
xchg
dec
push
pop
enter
lds
sti
xchg
rcll
inc
jae
mov
call
ja
cmp
scas
movsl
inc
xchg
inc
mov
xor
xchg
das
movsb
lcall
sbb
sti
push
pop
setge
push
fmull
sub
or
call
call
cmp
cmc
sbb
loop
mov
pop
jmp
mov
jbe
jns
and
icebp
pop
push
fistl
pop
lods
mov
lret
dec
ds
test
mov
mov
stos
xor
scas
cmc
test
or
addr16
negb
mov
icebp
mov
pop
enter
mov
mov
push
mov
ljmp
call
lcall
cmp
push
fcoml
mov
lds
pop
arpl
xchg
jle
dec
and
or
sub
inc
pop
push
repz
stos
mov
sbb
cmp
and
and
ficoms
rol
mov
sbb
xor
lcall
dec
shlb
or
add
xchg
iret
jne
inc
pop
call
mov
cltd
or
add
lahf
int3
add
lods
jae
inc
add
fildll
adc
push
movsb
divl
or
push
add
data16
outsl
dec
sub
xor
xchg
mov
pop
dec
dec
dec
hlt
xchg
into
push
aam
lods
inc
mov
movsb
sub
add
or
pop
and
mov
xchg
mov
pusha
push
or
mov
pop
fs
insb
cli
pop
push
int
in
cmpl
pop
push
repnz
xor
out
stos
cli
icebp
ds
lock
push
add
repz
insl
icebp
js
push
jge
pop
lcall
test
jo
int3
pushf
insl
xor
sbb
jge
push
cmc
push
push
and
lods
test
out
cmp
daa
cmp
jae
fwait
test
jg
je
pop
stos
cmp
outsl
jo
and
pop
or
dec
xchg
loop
mov
test
jg
pop
cmp
into
fbld
mov
arpl
jl
gs
mov
add
push
out
imul
and
aam
xchg
mov
loopne
adc
daa
ja
stos
arpl
xor
cmp
and
cmpsb
call
mov
js
jecxz
cmp
lret
js
jbe
mov
xor
sub
mov
and
sbb
mov
mov
jae
sub
pop
pop
fidivrl
add
push
sbb
push
stc
add
jnp
nop
fbld
divl
movsb
test
idivb
inc
mov
mov
js
mov
xchg
xor
jg
fldt
movsb
jmp
adc
adc
adc
js
adc
mov
mov
mov
xchg
ret
or
aas
mov
adc
out
push
cmp
xor
repz
shrb
out
or
push
pushf
mov
pop
ds
sbb
pusha
xlat
xchg
shll
xchg
roll
fwait
pop
bound
push
call
push
xchg
int
fwait
pop
jecxz
hlt
sbb
xor
aad
adcl
in
aaa
imul
or
adc
inc
adc
lret
adc
and
in
fildll
xchg
xchg
cmc
scas
test
stc
aas
lods
push
ljmp
mov
ds
pxor
clc
inc
add
pop
daa
sbb
pop
loopne
movsl
roll
push
ja
out
arpl
fsubl
push
sbb
jb
aam
pop
xor
and
pop
or
imul
push
mov
scas
add
aad
dec
push
in
aas
iret
psubw
in
sarl
lods
dec
push
jp
lret
outsb
lock
int3
aad
and
ljmp
xchg
mov
insb
test
add
cli
jg
jo
outsl
in
loopne
mov
xlat
pop
mov
daa
xor
or
das
push
rcrb
test
fs
push
dec
sbbb
jle
jne
mov
adc
push
xchg
adc
lahf
icebp
pop
adcl
jmp
mov
repnz
fiaddl
test
jp
jg
xor
fldenv
pand
mov
mov
jns
cmpsb
fs
push
andl
cmp
pushf
mov
pushf
jae
sbb
nop
cs
or
mov
or
xor
push
ret
cmp
dec
push
das
dec
or
mov
mov
sub
fwait
and
icebp
iret
mov
sub
jle
sbb
pop
icebp
loope
adc
mov
repz
adc
ja
inc
dec
enter
cmpsb
inc
dec
insl
mov
cmpsl
lret
lret
push
das
scas
ss
andb
inc
mov
cwtl
inc
add
and
loopne
mov
das
mov
je
jecxz
mov
push
mov
cmp
and
mov
inc
xchg
ret
dec
stos
xchg
andl
mov
nop
and
fmull
xor
ja
dec
movsl
lds
cmp
jecxz
jae
imul
xor
sub
mull
sub
nop
adc
mov
mov
movsl
mov
out
inc
cwtl
mov
stc
mov
jae
inc
into
mov
jge
test
testb
mov
cmp
and
test
jno
pusha
or
dec
lea
out
xchg
inc
push
pop
sub
popa
sbb
cmp
loop
movsl
mov
sti
mov
xchg
cmp
jns
pop
aaa
cld
stc
imul
nop
pop
xchg
repnz
xchg
cmp
lahf
adc
xor
pop
imul
sbb
xchg
into
xor
data16
and
out
push
sarb
mov
dec
stc
out
scas
hlt
loope
dec
pop
jo
iret
add
cmp
xchg
mov
mov
fadds
data16
and
sbb
pushf
in
cmc
and
cmp
mov
jne
loopne
movsl
aaa
xor
lret
je
mov
testb
imul
mulb
xchg
sub
add
or
sbbb
js
lds
fidivl
or
fstpl
xlat
xchg
cmp
inc
or
xchg
push
or
push
inc
or
sub
shlw
or
mov
idivb
xchg
mov
mov
mov
cwtl
lock
je
stos
push
sub
call
clc
cmpsb
out
or
rcrb
jmp
inc
sbb
and
lock
jl
mov
xlat
ret
jne
cmp
lcall
pop
jg
test
int
add
imul
das
inc
shll
pushf
mov
or
mov
inc
or
cmp
mov
mov
cwtl
call
mov
push
mov
or
mov
cmp
in
push
fldl
cmp
xor
roll
xchg
add
rcrb
jns
xor
sub
mov
shrl
mov
lods
inc
mov
aam
hlt
test
adc
mov
lahf
xor
scas
sub
ljmp
push
stc
stos
add
push
jb
roll
dec
cld
lahf
xlat
cmp
in
cmpsb
fwait
mov
fs
xor
dec
fisubrs
loop
mov
or
insb
mov
and
je
dec
xchg
inc
xchg
aaa
add
lcall
mov
xor
cmp
aaa
repnz
mov
rcrb
shrl
mov
jle
test
sbb
jo
pop
dec
push
sbb
icebp
mov
lods
push
xchg
rolb
ds
nop
jecxz
mov
outsb
jle
xchg
in
testl
ret
push
jecxz
and
mov
mov
push
push
mov
popf
jne
pop
imul
sub
test
ja
adc
mov
push
movsl
xor
pop
movsl
notl
addb
ss
nop
fadds
testb
imul
inc
insb
jo
pushf
aam
mov
push
out
jb
dec
test
xchg
pop
icebp
mov
mov
shrb
roll
jecxz
in
inc
push
jae
int3
inc
pushf
hlt
dec
adc
pop
adc
push
stos
mov
cs
movsb
shll
push
mov
imul
push
aam
dec
aad
aad
add
add
dec
mov
clc
es
push
inc
mov
movsl
ds
push
dec
mov
lds
inc
mov
out
je
jnp
pop
cmpb
test
push
xor
aam
mov
shr
jle
add
lods
out
push
and
ss
shrl
jne
out
inc
test
sbb
imul
or
jae
xor
and
cmp
push
arpl
cmp
and
loopne
add
mov
jbe
push
loop
mov
aad
pop
daa
jg
in
inc
js
imul
or
xchg
jle
outsb
lea
enter
movsl
sub
or
iret
push
mov
fsubl
dec
xor
xor
cmp
jno
scas
sbb
push
sbb
pop
sahf
lds
sbb
push
mov
arpl
loopne
mov
jp
dec
shlb
jnp
fstl
loope
mov
xor
jl
out
or
outsb
test
dec
pushf
adc
and
inc
cmp
xchg
movsl
push
sbb
popa
out
ljmp
sub
adc
js
and
scas
add
inc
add
mov
dec
jecxz
mov
push
or
ja
inc
mov
stos
popf
sarl
lcall
and
jmp
mov
push
push
jl
pop
js
jbe
decb
adc
or
je
mov
sub
cmpsl
scas
lret
mov
xchg
push
shl
and
aaa
shlb
mov
pop
fldcw
cltd
sbb
hlt
outsb
xor
jg
cmp
fwait
add
in
cmpsb
out
out
mov
pop
test
pmulhuw
mov
add
int3
add
lods
loopne
inc
jne
insl
jbe
adc
fldl
lods
mov
add
test
and
inc
cmpsl
movsb
test
jo
xchg
loopne
ljmp
lods
enter
leave
jmp
xchg
mov
in
hlt
fisubrl
repz
jmp
inc
pop
sbb
xchg
and
lret
jb
mov
mov
nop
mov
mov
scas
push
stc
mov
fisubs
rorb
in
test
jge
jno
in
sbb
cmp
mov
aam
mov
push
orl
mov
es
andb
mov
pop
lret
pop
jp
cli
arpl
mov
mov
ret
lods
icebp
iret
aam
add
ljmp
cmc
pop
push
cmp
cli
mov
loop
pop
push
xchg
loope
dec
call
jno
add
jmp
push
test
mov
aad
inc
sub
rolb
loopne
xchg
xchg
sub
xor
stos
decl
andb
nop
inc
add
pop
xchg
mov
mov
fwait
xor
inc
xor
add
mov
cld
mov
ret
scas
or
enter
xor
lret
jle
addl
inc
lea
mov
xchg
cwtl
divb
mov
sbb
fdivl
arpl
dec
sub
sbb
arpl
pop
cmp
mov
push
mov
dec
adc
fmuls
jbe
scas
addr16
lret
lods
xor
adc
hlt
dec
dec
add
dec
dec
cmp
orb
add
adc
jne
outsb
mov
push
push
lods
in
fdivr
testl
outsb
cli
xchg
movsb
and
or
movb
cmp
in
fidivs
inc
pop
lahf
push
sub
jno
push
mov
xor
mov
jle
push
push
es
xor
jb
sahf
shrl
ljmp
xchg
or
movb
mov
sub
call
sbb
insb
icebp
movq
jmp
ss
loope
xchg
pop
outsl
inc
dec
sbb
dec
jle
push
and
jg
rol
outsl
cld
pop
jp
repnz
pusha
inc
in
mov
pop
ss
repz
imul
into
xor
ret
xchg
mov
mov
andb
sub
inc
xchg
add
fldl2t
adc
pop
lahf
sarb
dec
sub
sub
mov
lds
test
sti
sahf
adc
and
jle
or
pop
add
fwait
lods
shlb
sbb
and
stos
bound
pushf
lods
fcomi
mov
jae
mov
cmp
in
xor
mov
add
mov
sbb
pop
roll
pop
sub
imul
mov
inc
cltd
addr16
enter
inc
cs
movl
cli
jbe
dec
and
adc
in
mov
sbb
jns
lock
mov
sub
outsl
call
inc
imul
aaa
movsl
ljmp
mov
sub
jb
push
cmc
jbe
enter
out
adc
mov
cwtl
sub
lds
push
or
fs
sahf
sub
lea
imul
xor
push
inc
ss
xchg
movsb
stc
fstpt
idivl
lret
test
inc
or
xor
loope
xor
sub
std
pop
inc
popf
sbb
stos
jnp
cltd
fildl
add
and
sub
adc
fcoml
mov
xchg
insb
test
movsb
pop
aam
les
or
sbb
in
add
xor
and
push
lods
inc
mov
xchg
insb
test
movsb
pop
aam
les
or
sbb
in
add
xor
and
push
lods
inc
mov
xchg
insb
test
movsb
pop
aam
les
or
sbb
in
add
xor
and
push
lods
inc
mov
xchg
insb
test
push
dec
movsb
sub
repz
push
xor
and
adc
add
int3
jb
adc
and
nop
hlt
subb
mov
xor
inc
and
adc
add
je
je
push
and
sarb
loopne
rolb
mov
cmp
push
insl
pusha
jl
dec
and
mov
xchg
mov
cld
stos
js,pt
push
jo
or
mov
or
scas
nop
insl
xchg
or
outsl
mov
movsb
mov
lock
adcb
dec
mov
jne
sbb
outsl
xchg
fdivrl
scas
test
dec
add
incl
cmp
sbb
loopne
adcb
js
pushf
orl
add
and
rcll
je
push
or
andb
mov
fistl
std
jo
mov
adc
dec
inc
pop
lock
movsl
cmp
dec
xchg
jno
sahf
mov
jmp
adc
fadd
into
jns
adc
sbb
mov
xor
or
js
xor
push
mov
mov
fsubr
mov
or
lds
xor
push
add
sbb
jbe
add
rcr
xchg
movsb
xchg
nop
test
loop
out
out
mov
and
imul
sub
and
mov
xchg
shl
cwtl
xchg
test
in
mov
mov
xor
and
jo
inc
inc
inc
add
and
shlb
and
aam
les
inc
and
adc
add
je
xor
shlb
test
aam
les
out
mov
mov
cmpsl
enter
lea
std
js
pop
test
xchg
adc
cltd
cmp
loope
outsb
pop
mov
xor
jns
add
sti
dec
out
pop
iret
sti
and
xchg
and
xlat
and
es
fildll
xchg
dec
hlt
mov
cld
jle
xchg
and
popf
fdivl
or
pushf
stc
cli
pop
cltd
in
mov
in
xor
adc
sbb
sti
jp
mov
or
jbe
insl
sub
push
cmpsb
mov
insb
mov
mov
xor
inc
cltd
pushf
adc
dec
test
rcr
movsl
fdiv
nop
jnp
push
cmp
pop
in
inc
testl
icebp
fldenv
inc
xchg
push
testb
push
or
mov
mov
pop
and
mov
out
clc
inc
ja
sub
movsb
cmp
add
adc
inc
scas
inc
sub
mov
mov
or
xor
sub
repnz
jge
sub
popa
adc
mov
xchg
aam
mov
add
xor
jp
cmp
iret
ss
pop
arpl
jge
shrl
test
pop
stc
clc
cmp
dec
in
int3
repnz
or
mov
imul
mov
sub
cmc
dec
lea
mov
push
jmp
mov
jg
mov
push
or
iret
stos
ss
mov
ficoml
leave
dec
mov
xlat
in
xchg
sbb
mov
and
insl
xorb
test
xchg
fildl
into
frstor
aaa
or
add
push
dec
repz
scas
xchg
inc
in
cmc
jecxz
lea
cld
test
imul
or
jle
push
pop
push
add
push
lds
mull
adc
clc
out
inc
aas
add
js
sub
popa
hlt
sub
mov
popa
sub
fidivs
orl
pop
mov
sahf
jge
jns
cli
xor
sbb
rolb
mov
aad
pop
adc
add
xlat
jle
mov
lds
add
in
repnz
scas
mulb
sbb
enter
dec
sub
ficompl
call
cwtl
push
aas
andl
scas
jl
cmp
xchg
jo
xor
daa
sub
addr16
lret
shlb
push
mov
add
pusha
jb
das
push
scas
xchg
mov
cmc
inc
fidivrl
out
fsubrs
std
shll
mov
pop
inc
pop
outsl
mov
dec
cmp
mov
jg
shrl
sub
jmp
push
cwtl
cwtl
xor
fdivrl
mov
sbb
imul
lcall
nop
fdivrs
adc
xchg
into
lea
xchg
pop
and
pushf
call
sarl
repz
mov
mov
mov
jb
sub
aas
pop
lock
ljmp
pop
mov
cld
xor
dec
mov
add
jge
add
iret
sbb
mov
mov
stos
ds
addl
out
or
jbe
ret
push
inc
les
test
cwtd
lret
leave
xchg
and
ffree
scas
sbb
clc
sub
mov
jle
adcb
out
stos
inc
mov
in
lds
mov
in
loop
rcll
mov
js
mov
dec
stc
sub
sbb
mov
mov
in
lcall
push
dec
dec
scas
lret
insl
movsb
mov
jb
adc
add
mov
xchg
in
dec
xor
pop
subl
inc
adc
das
mov
dec
sub
mov
add
adc
rolb
xchg
push
mov
test
mov
pop
shrl
out
lret
loope
testb
scas
mov
les
mov
xor
cmc
sbb
cmc
pop
sti
fildll
mov
cwtl
pop
ret
mov
mov
mov
hlt
mov
mov
stc
sbb
mov
scas
mov
jmp
xchg
adc
and
pop
mov
dec
js
iret
lret
jp
add
push
gs
dec
fwait
mov
rcl
jne
lret
test
test
movsb
jae
in
sbb
mov
es
mov
rclb
enter
pop
xor
roll
adc
xchg
inc
leave
cli
push
fld1
xchg
into
out
imul
nop
and
popa
pop
int3
popf
mov
mov
xor
test
insl
insl
fcompl
popa
lret
cmp
outsl
mov
movsb
ja
add
push
add
push
lds
and
stc
push
mov
int3
xchg
ret
daa
jg
xchg
xchg
fistl
scas
repnz
sbb
inc
and
inc
out
lock
fstpt
fnsave
mov
or
mov
lret
mov
and
in
mov
push
ret
flds
adc
int
loope
int3
and
sbb
xchg
adc
xchg
icebp
in
movsl
iret
push
mov
jmp
rep
jbe
ret
loope
lock
call
jnp
dec
aad
mov
mov
pop
in
pushf
js
std
mov
lcall
insb
push
ss
sbb
and
push
adc
mov
sbb
inc
sar
and
enter
sbb
test
push
jae
jle
and
cltd
mov
push
scas
pusha
scas
cmp
jmp
test
test
cli
sahf
fiaddl
in
cltd
movsl
imul
out
outsl
fsubrl
mov
mov
mov
shrl
lods
test
icebp
push
push
arpl
push
dec
fistps
test
int3
inc
mov
xlat
arpl
xor
xchg
mov
fwait
out
ret
cmp
push
jne
xchg
or
mov
addl
and
sbb
mov
stos
push
adc
sbb
nop
jnp
xor
loop
in
pop
lods
adc
pop
or
jmp
ret
sub
push
inc
xchg
fldenv
loopne
and
cwtl
jns
int
push
imul
or
adc
aas
inc
sub
jno
nop
in
mov
ljmp
add
cmpb
movsb
push
pop
mov
std
lods
iret
xor
pop
lret
jbe
outsb
jmp
xor
bound
xor
jmp
xor
ljmp
sbb
push
test
out
in
and
push
ret
xor
aad
mov
mov
les
insl
test
inc
hlt
xchg
cltd
push
mov
xor
and
stos
fsub
neg
cmpsb
test
sbb
cld
xlat
int
ret
xor
dec
jo
and
test
jmp
adc
inc
faddl
cmpsl
cmp
mov
je
mov
sbbl
loope
je
rcll
ds
cmp
dec
pop
mov
dec
hlt
sbb
jle
lods
outsl
cs
insb
inc
xor
pop
push
adc
les
xor
sarb
into
lret
jl
test
addr16
fwait
dec
fwait
idivl
or
xchg
mov
das
jae
sub
subl
es
lret
es
jmp
xchg
pop
cli
ss
loope,pt
repz
jae
in
add
push
imul
mov
jp
in
mov
jl
jl
ja
jmp
cmpsb
xchg
shlb
pop
mov
adc
loop
movsl
mov
xor
xlat
jo
xchg
push
addb
mov
test
scas
push
movsb
inc
stc
and
in
call
push
inc
movsl
sbb
inc
les
data16
mov
or
mov
pop
loope
push
sub
lahf
push
pop
push
jnp
mov
je
fwait
mov
arpl
inc
int3
mov
nop
push
or
xchg
outsb
mov
ljmp
xchg
out
outsl
mov
mov
test
adc
push
cmp
rol
xchg
jl
pushf
mov
push
icebp
std
mov
fisubs
outsb
imul
adc
xor
fsubl
adc
jp
ds
xorl
sub
add
push
cmp
fldcw
dec
push
test
xor
stos
je
jae
add
fidivl
lods
cmp
out
sbb
mov
and
push
xchg
sbb
inc
mov
fs
nop
scas
mov
or
cmp
push
addr16
mov
lods
imul
fsts
rol
sub
xor
popa
hlt
dec
inc
mov
testb
adc
int3
pushf
cmp
jl
mov
jae
in
aad
cmp
add
add
loop
xlat
sarl
pusha
dec
pop
fxch
sahf
jmp
cmpsl
dec
and
xchg
sbb
push
jmp
push
js
mov
lods
outsb
mov
add
cmpsl
aas
push
xor
lds
push
outsl
xchg
mov
lret
mov
or
pop
inc
push
leave
mov
imul
xor
lock
push
data16
pop
pop
jl
mov
and
filds
movsb
stos
inc
fcmovne
pop
adc
cmc
and
arpl
lods
push
jnp
aad
outsb
adc
testb
femms
mov
lea
lods
idiv
scas
sbb
pusha
add
inc
aad
dec
sahf
push
xchg
adc
scas
subl
dec
inc
lcall
push
add
sub
mov
insb
test
sahf
shrb
or
push
mov
out
popa
pusha
add
mov
lods
repnz
push
pop
outsb
adc
mov
rorl
outsl
or
iret
mov
xchg
sub
push
pop
adc
popf
push
icebp
sbb
bound
pop
adc
mov
cli
clc
push
addl
jne
scas
push
je
push
int
pop
jl
and
fsubrp
in
or
cmpsb
xchg
push
fwait
inc
mov
push
push
push
or
xlat
aam
lds
push
xchg
ds
inc
or
daa
inc
push
xor
inc
lret
cmp
mov
out
adc
nop
iret
mov
pop
addb
into
pop
or
jno
fisubrl
dec
addl
push
inc
mov
cmpsl
xor
mov
cmp
daa
adcb
or
sub
test
sub
xchg
fwait
or
iret
cmp
jmp
testb
popf
movsb
or
or
daa
sbb
mov
or
or
cli
and
inc
pop
inc
aaa
xchg
mov
negl
sbbl
add
mov
sbb
insb
adc
mov
jnp
mov
cwtl
xor
lahf
movsl
les
imul
or
dec
xchg
dec
push
aaa
lcall
push
and
jnp
xorl
cmp
lea
xor
xchg
jnp
repnz
imul
ss
das
insl
gs
xchg
push
push
nop
out
cmp
dec
sbb
adc
mov
in
xor
jo
mov
mov
mov
repz
lret
stos
popf
add
lock
or
push
inc
jle
mov
fsubrs
int3
and
rorb
jg
mov
cmp
dec
inc
mov
mov
cwtl
stos
pushf
xorb
movb
popl
mov
lahf
adc
orb
or
aad
cwtl
clc
pushf
cmp
stos
ljmp
inc
pop
jg
mov
inc
jmp
inc
testb
leave
dec
xor
pop
imul
je
cli
cmc
jg
push
push
ss
jo
dec
mov
pop
push
out
scas
or
fadds
mov
inc
ret
sbb
xor
xchg
arpl
push
or
in
stos
add
jmp
push
and
fadd
stos
das
sub
lods
sbb
cmp
xor
and
mov
fs
fldt
pop
je
pop
xor
lods
push
cmpsb
fwait
pop
mov
jg
dec
dec
icebp
insb
adc
lret
ds
mov
int3
jae
stos
lret
xlat
jns
pop
jne
insb
clc
jecxz
popf
popf
inc
movsl
sub
sbb
lock
mov
xor
or
sbb
mov
lahf
repz
pusha
repnz
cmp
mov
int3
fildll
aas
or
fdiv
sbb
mul
insl
ja
repnz
xor
push
aaa
sbb
out
data16
mov
fwait
cmpsb
aaa
pop
popf
push
nop
faddl
ret
aam
push
fwait
lret
xchg
sarb
cmp
lea
push
repnz
push
cwtl
sbb
add
add
cli
jo
push
xchg
shll
in
inc
lcall
lea
data16
sti
in
cmp
xor
jg
pop
jbe
xor
loop
push
dec
jmp
mov
lods
adc
sub
pop
cmp
adc
push
cmp
or
add
mov
lret
cmpsb
cmpsb
hlt
es
push
pushf
mov
inc
sbb
push
das
sti
insb
jnp
scas
mov
loope
sbb
cwtl
xchg
imul
adc
lret
xchg
mov
push
cmpsb
mov
ret
pop
fistpl
adc
fwait
xor
test
sti
or
adc
scas
pop
mov
inc
cs
lret
push
scas
pop
mov
push
mov
js
enter
mov
push
cmp
je
sarb
pop
lock
test
cwtl
in
sbb
and
fidivrs
popa
xchg
sub
cmp
xchg
push
out
negl
mov
insb
and
mov
push
mov
fsubrs
ja
mov
adc
push
sbb
mov
fs
mov
cld
push
or
imul
mov
dec
outsl
pop
ja
out
or
outsb
add
xor
or
aad
mov
xchg
sarb
sar
cmp
mov
jp
in
addr16
jns
mov
xchg
imul
lcall
cld
pop
mov
test
add
or
mov
mov
aas
ret
jbe
jmp
xor
lds
enter
xor
push
in
fbstp
jae
adc
dec
outsl
loopne
dec
icebp
cld
xchg
xchg
adcb
jns
mov
pop
lcall
leave
sbb
jbe
leave
sbb
jp
pop
cmp
ja
or
xchg
rorl
push
sub
push
adcl
popf
and
pop
ss
mov
ret
xlat
stc
mov
cmp
mov
adc
dec
lret
das
popf
arpl
lahf
test
sub
cmp
in
fstpl
and
cltd
mov
mov
lock
ret
mov
in
cld
outsl
rdmsr
cmp
lea
adc
jo
rorb
aad
and
cmp
bound
cs
mov
jecxz
in
notb
mov
pop
or
jnp
in
in
adc
pop
popf
xor
inc
frstor
idivl
dec
sub
test
pop
gs
sbb
xchg
mov
sub
mov
or
lcall
push
imul
mov
push
add
rcll
push
jne
push
mov
inc
sub
jecxz
cmp
inc
sub
in
arpl
aad
inc
mov
inc
lret
xchg
loop
popa
xor
addr16
lods
std
lods
roll
cmp
mov
adc
mov
mov
add
xchg
mov
clc
out
or
ss
dec
push
adc
xchg
pop
int
mov
xor
dec
outsl
inc
pop
sbb
push
mov
inc
jnp
daa
push
sub
jg
lret
mov
jns
sub
xor
mov
test
repnz
push
outsl
pop
or
sub
mov
adc
ss
jp
xorl
lcall
xor
std
pop
xchg
add
mov
ss
enter
xor
xchg
jae
sub
mov
adc
dec
jo
xchg
outsl
dec
inc
popf
mov
sbb
scas
jb
outsb
jecxz
dec
cmp
mov
or
cmp
jb
test
inc
iret
movsl
shl
dec
punpcklwd
rorl
stc
out
push
or
mov
adc
sub
xchg
dec
add
pop
popf
xor
push
nop
notb
pusha
sbb
repz
dec
sub
mov
pop
push
jno
cmp
inc
imul
out
jmp
sub
aaa
cmpsl
dec
cmpsl
clc
test
dec
lahf
xor
cmp
ret
mov
jl
inc
xchg
aad
repz
enter
into
je
xchg
rorb
loopne
or
fisttpll
sbb
xchg
das
pop
pop
rolb
lods
add
xor
mov
test
jno
cmpsb
jg
insb
fwait
in
movsl
xchg
cmp
mov
jmp
orb
faddp
outsl
outsl
mov
cld
es
dec
cmc
repnz
sub
call
mull
inc
jae
int
bound
nop
pop
mov
jbe
sub
jle
xor
hlt
dec
mov
cmp
jge
push
pop
mov
aas
sbb
gs
jne
jmp
nop
jno
in
cmp
sub
subl
xor
mov
or
pusha
pushf
sub
jns
xchg
loopne
pop
popl
and
mov
mov
pop
jbe
sub
mov
cwtl
pop
adc
mov
pushf
add
fstps
pop
cltd
ss
fistpll
dec
mov
hlt
mov
add
mov
mov
add
cmpsb
push
add
inc
add
sub
popa
ja
xchg
testb
stos
sahf
cmpsb
fstps
daa
fstps
repz
scas
enter
xor
fbstp
jmp
in
xchg
add
cli
lods
pop
jmp
mov
sti
pop
idivl
mov
pop
push
ja
out
mov
fbstp
dec
xchg
push
xor
in
add
xor
lods
repnz
mov
lea
jae
sub
xor
call
fs
cld
pop
mov
test
adc
jmp
repnz
mov
mov
ljmp
loopne
fadd
out
loope
daa
inc
repnz
stos
repz
sub
shr
fdivr
mov
xchg
pop
movsb
xchg
add
addr16
xor
rclb
sub
inc
xchg
mov
push
sub
jns
push
lds
loope
jmp
push
mov
js
adcl
jne
mov
sub
inc
pop
mov
pop
mov
cmp
sbb
mov
lcall
mov
sbb
dec
std
mov
and
xor
cmpb
fidivrl
cmp
dec
enter
dec
sub
sahf
push
mov
lock
subl
imul
sbb
stos
sti
dec
xor
push
negb
mov
push
das
pop
aas
lods
mov
xchg
mov
ret
fs
loop
dec
xor
sbb
xor
aas
inc
ret
jnp,pn
lea
cmp
repnz
lcall
and
es
dec
mov
insb
mov
and
rolb
bound
cmp
popa
divb
push
mov
pushf
scas
xchg
sub
push
mov
or
pop
sbb
and
scas
sahf
inc
jae
lock
int
mov
cmpsl
mov
mov
leave
lods
cmpsb
fs
add
push
push
test
add
adc
mov
in
mov
rcll
loop
repz
mov
mov
xor
and
jbe
push
mov
dec
ds
mov
subl
and
aas
std
and
aas
dec
or
adc
cs
jmp
mov
stos
mov
pop
aam
sarl
mov
push
adc
adc
inc
fcmovu
les
sbb
ret
and
call
xchg
mov
sbb
xchg
push
jne
stos
mov
fldcw
adc
xlat
sbb
jns
popa
cmp
insb
hlt
sbb
int
fsubrl
pop
fadds
and
push
push
inc
pop
nop
cmpsb
jg
lahf
test
out
stos
sbb
mov
jp
mov
fnsave
sti
or
jmp
cmp
dec
pushl
shrl
and
push
fisttpl
mov
lret
int3
mov
lcall
dec
repz
push
mov
test
lret
mov
ljmp
popf
popf
add
flds
mov
mov
std
in
into
xor
push
mov
jmp
outsl
dec
dec
xchg
clc
cmp
adc
jl
out
clc
sahf
cs
push
rclb
lret
loopne
ret
or
aaa
adc
add
je
xor
shlb
test
aam
les
inc
and
adc
add
je
xor
shlb
test
aam
les
jo
adc
add
je
xor
shlb
adcb
dec
rolb
sub
inc
add
je
xor
shlb
repz
or
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
stos
ds
push
loop
pushf
or
sub
cmp
imul
out
dec
ficomps
stos
ds
push
jmp
sti
outsb
lret
pop
sub
sbb
dec
ficomps
stos
ds
push
jmp
sti
outsb
lret
pop
fisttpl
mov
jle
imul
mov
mov
push
in
lods
imul
push
vminsd
fildl
push
sbb
out
lock
mov
insl
inc
cmpsb
je
mov
jle
jmp
push
xor
mov
cmc
mov
ljmp
or
loope
rorb
mov
lods
test
xchg
call
sahf
fisubrs
lock
enter
stos
jnp
or
pushf
pop
sbb
outsl
xchg
xor
mov
inc
mov
ljmp
adc
dec
jle,pt
dec
adcw
out
xor
outsb
sub
loop
popa
nop
mov
lods
sti
out
mov
pop
xor
push
fs
sarb
outsl
push
lret
or
std
sti
data16
sub
push
push
fwait
push
jmp
sti
outsb
lret
pop
fisttpl
mov
sbb
dec
ficomps
into
cmp
outsl
int
fisttpll
mov
xchg
pop
movsb
sbb
pop
pop
scas
js
pop
cli
in
mov
sub
call
adc
sub
pop
xlat
jbe
sbb
pushf
nop
push
out
and
mov
imul
fisttpl
mov
sbb
dec
ficomps
stos
ds
push
jmp
sti
outsb
lret
pop
fisttpl
mov
sbb
dec
ficomps
stos
fiaddl
repz
cmp
repz
repz
std
dec
pop
sub
test
outsl
lods
mov
leave
fnsave
xchg
jnp
inc
mov
inc
sbb
jecxz
xor
cmp
movsb
mov
jbe
fsubrp
mov
call
pop
inc
fmul
mov
test
or
sbbl
pop
jb
adcl
dec
push
leave
mov
inc
js
imul
push
adc
outsb
add
jnp
inc
punpckhdq
jl
outsl
orl
js
stos
mov
pushf
loopne
inc
out
loop
dec
stos
pop
pushl
xchg
in
jb
pushf
push
mov
ljmp
add
xchg
jae
xchg
lock
repz
movsb
mov
mov
movsl
cmpsl
imul
or
push
nop
andb
ret
or
daa
out
adc
mov
sahf
or
divb
mov
in
inc
movsl
dec
dec
clc
xor
pop
sbb
mov
jne
test
jg
and
pop
xor
aaa
outsl
int
jo
cmpsl
pop
fucomip
lods
in
fcmovnbe
jecxz
es
jb
dec
mov
push
test
out
mov
sub
shrl
movsl
mov
pop
and
fldlg2
repz
mov
sbb
xor
sbb
pop
clc
lea
enter
mov
cmp
stos
cmp
xchg
or
movsb
sbb
sub
xor
pop
aas
sbb
jmp
pop
push
stos
sti
mov
or
cltd
leave
xchg
pop
mov
ja
jmp
fstl
shlb
fsubl
std
sbb
mov
fnstsw
and
cmp
jne
fwait
test
out
add
into
int
nop
out
punpckldq
jg
add
fs
mov
sbb
in
pop
test
fsubp
xchg
iret
sbbb
insl
test
cltd
test
sbb
psadbw
in
outsb
pushf
rcl
or
iret
ret
stos
fwait
lret
negl
inc
loopne
btrl
and
cltd
jns
in
fisubrl
clc
pop
and
hlt
xor
call
hlt
inc
mov
imul
adc
rorb
xchg
or
pop
shll
cmpsb
popf
add
xlat
out
cmc
std
loopne
push
es
cmp
adc
cmpl
cmp
mov
lcall
sti
popf
dec
push
mov
fisttpll
in
nop
and
fwait
out
lods
popf
fdivl
movsb
xlat
lds
loope
ja
mov
lahf
in
adc
daa
popa
out
mov
outsl
mov
push
dec
fildl
cmp
notl
lahf
test
cmc
mov
pop
subb
decb
test
scas
jecxz
aad
loopne
imul
xchg
fs
cli
inc
lea
lcall
dec
icebp
sahf
jl
decl
pop
dec
aas
pop
cmp
in
xlat
mov
aaa
adc
mov
loopne
inc
test
jne
jle
mov
dec
std
rol
icebp
aam
std
pop
cmp
jl
cmp
jl
mov
pop
idivl
sub
dec
jne
mov
imul
pop
xor
test
in
jns
rorl
fidivrs
aam
sti
fstpl
jae
es
or
push
add
sahf
mov
and
sub
mov
adc
out
and
arpl
hlt
xchg
adc
adcl
cmp
dec
sti
dec
shl
test
xchg
mov
push
lahf
dec
cltd
and
addr16
cwtl
rcrl
in
adc
test
fists
dec
sub
gs
sub
adc
jmp
jae
fdivrl
popf
repz
in
sti
sub
inc
in
pop
lahf
inc
jne
sbb
lds
mov
stc
or
test
mov
xchg
stos
mov
inc
sbb
repnz
sub
push
dec
lock
sub
push
push
pop
xchg
push
inc
sti
fwait
jnp
in
add
and
xor
loope
pop
repz
jb
jnp
in
xlat
mov
cmp
std
cmp
push
pop
stc
cltd
inc
sarb
sbb
in
mov
jle
dec
repz
mov
push
movsl
in
inc
push
idiv
clc
cld
jb
push
adc
cli
sub
jl
hlt
je
jnp
push
pop
jnp
popf
xchg
mov
mov
inc
sub
mov
push
cmp
out
push
int3
add
jp
adc
dec
pop
fs
mov
ds
pop
loope
inc
movsl
bound
rorb
sub
mov
push
addb
pushf
imul
repz
inc
xchg
sarb
mov
xchg
pushf
mov
push
pop
ss
jb
adc
xor
mov
cmpsb
adc
test
xor
je
or
sub
loopne
adc
in
icebp
mov
or
push
insb
jg
add
and
push
mov
aam
xchg
mov
lret
cltd
or
lds
int3
cmp
lods
sbb
adc
out
outsb
das
jecxz
fwait
pop
sub
outsl
clc
add
les
iret
call
mov
inc
out
pushf
out
mov
cwtl
add
in
push
and
insb
add
idivl
cld
pop
ja
pop
lret
bound
out
mov
cs
and
into
dec
cmp
push
or
nop
aaa
enter
call
sub
inc
dec
sbb
lret
stos
jmp
aam
xor
fistps
mov
and
push
idivl
cmc
adcl
lret
insl
in
lds
lret
mov
and
cmpsl
fcmovu
cmp
icebp
and
insb
xor
jb
shl
fucom
xchg
sbb
mov
or
sahf
cs
into
jb
fnstsw
aaa
inc
sub
int
and
sub
sarb
adc
xor
push
clc
stos
mov
pusha
mov
jge
cwtl
ljmp
and
mov
pusha
jo
jge
mov
ljmp
adc
push
lahf
adc
jno
bound
pusha
scas
jns
mov
clc
movsb
or
aam
mov
or
xchg
loopne
iret
xor
loop
push
cmp
aaa
pop
xchg
mov
mov
seto
push
scas
stos
or
pop
mov
fisubl
mov
mov
cmc
mov
inc
add
mov
je
fs
es
add
mov
out
shr
mov
std
lahf
lcall
data16
imul
ljmp
shll
nop
mov
cmp
dec
inc
sub
sub
sub
cmp
fisttpll
aas
cmp
jne
das
mov
dec
fucomip
lret
jmp
xor
add
enter
inc
lods
xchg
mov
arpl
hlt
mov
out
iret
and
imul
mov
notl
xchg
bound
repnz
sub
pop
jl
stos
lret
or
sbb
in
fxch
ja
jp
and
dec
cmpsb
mov
mov
movsb
mov
xchg
and
pop
inc
outsb
fldcw
mov
es
jmp
pop
ja
push
jns
dec
jle
icebp
xor
hlt
pop
cmp
xchg
shrl
mov
pop
xchg
push
adc
popa
push
add
and
mov
sub
pop
push
xlat
out
sti
movsb
push
pop
xchg
sbbb
mov
inc
jl
lcall
and
dec
cmpsb
xchg
mov
into
lock
cmpsb
mov
push
and
dec
xor
bnd
shrb
out
das
dec
dec
xor
push
dec
fidivrs
jmp
xchg
mov
push
fs
sub
stos
fnsave
mov
pushl
or
movsb
mov
or
xchg
xchg
es
mov
cmp
out
call
popa
gs
adc
sahf
pop
inc
fldcw
inc
iret
popf
lea
mov
addl
inc
fiadds
adc
repz
fimuls
fmul
fs
mov
sbb
lret
out
aam
imul
fsubrs
cmpsl
sahf
or
pop
lret
or
fldenv
jge
jbe
dec
orl
dec
mov
cmpsl
add
mov
lret
loop
and
mov
dec
sbb
and
xor
and
add
pop
les
jmp
test
jne
add
cmpsb
sbb
and
mov
dec
sub
adc
xchg
lret
fimull
vpsubusb
xor
or
fstps
xor
sarb
test
or
inc
stos
pusha
lock
hlt
outsb
loopne
cmc
xor
sbb
or
add
xchg
push
adc
sub
int
pop
adc
mov
and
xor
add
imul
adc
out
xor
mov
arpl
ljmp
xchg
mov
sbb
or
ret
xchg
mov
repnz
add
sbb
cmp
mov
mov
jmp
mov
sarb
xor
sub
xor
push
cs
sti
jo
rcrb
lods
jmp
or
gs
scas
daa
test
or
mov
pop
sbb
adc
cmp
mov
jo
hlt
dec
in
pop
ja
pop
inc
ret
shll
leavew
adc
push
add
out
mov
fidivs
push
aad
stc
stos
lods
arpl
outsl
ret
js
sbb
push
push
je
aam
js
xor
imul
nop
xchg
std
and
push
loope
in
sbb
loope
inc
jge
pushf
push
arpl
sbb
push
mov
fnstsw
int3
test
cwtl
xchg
add
cmp
cmp
jns
add
scas
ret
fsubr
movsl
sbb
mov
scas
add
shr
jo
mov
mov
sbb
cmpsl
test
xor
out
ret
mov
push
add
inc
sbb
fimuls
mov
std
inc
sti
arpl
mov
outsb
ljmp
mov
mov
jecxz
fs
lret
sti
xchg
mov
leave
jge
inc
dec
mov
or
push
mov
loopne
sbb
xchg
lods
mov
pop
sub
mov
or
aam
lahf
pop
lods
mov
repz
scas
push
stc
loop
mov
mov
fsubs
mov
pop
push
ljmp
push
popa
xchg
sbb
sub
test
or
call
mov
cmp
mov
mov
pop
pushf
sub
loopne
test
out
adc
scas
xchg
ja
ds
lods
call
xchg
add
cmp
sahf
lret
stos
prefetch
or
daa
xor
sahf
or
enter
out
or
add
mov
cmovp
aas
daa
imul
cmpsl
push
jl
jnp
add
add
repz
test
mov
dec
movsb
popf
push
cmp
outsb
aad
jmp
icebp
lcall
ret
sahf
mov
mov
and
enter
arpl
negl
sub
sbb
bswap
lcall
dec
and
jbe
lock
xchg
inc
add
daa
neg
xchg
sbb
call
and
adc
xchg
cmp
icebp
xchg
nop
and
rol
sbb
bound
add
xchg
int
xor
int
outsb
aam
sti
mov
cmpsl
clc
aad
orb
mov
mov
xchg
lcall
test
mov
dec
in
idiv
pop
mull
jle
or
fwait
loop
mov
xor
aaa
sbb
cltd
push
fistpl
pop
cmpsb
dec
jbe
shlb
inc
jns
adc
test
sub
cs
jns
rorl
sbb
dec
popa
pop
xor
mov
daa
xchg
and
cmp
dec
je
bound
push
mov
mov
dec
xorl
dec
mov
nop
mov
mov
loop
imul
lds
daa
pop
adc
mov
pop
jbe
push
or
ljmp
movsb
push
sub
xchg
inc
add
sub
xorb
fwait
xor
cmp
iret
ljmp
dec
push
idivl
sub
cli
mov
xchg
fmuls
nop
in
outsb
inc
cwtl
clc
loop
pop
xchg
in
dec
cli
push
flds
xor
orl
test
mov
inc
iret
push
pop
dec
dec
mov
mov
cmp
sub
inc
xchg
test
loope
call
mov
aam
sbb
add
mov
mov
cmp
inc
push
in
fwait
std
xchg
jno
cmp
jns
in
in
out
in
inc
out
sub
mov
jmp
int3
cmpsl
leave
mov
cmpsl
push
mov
mov
push
sbb
cmp
cmp
cli
fildll
jge
mov
inc
inc
rclb
scas
xlat
xchg
pusha
icebp
inc
lret
mov
xor
xor
lea
imulb
jo
lahf
imul
inc
mov
addr16
jbe
iret
test
push
add
js
mov
pop
cmp
adc
dec
ljmp
pop
fucomp
pop
out
das
cmpsb
jo
stos
push
push
nop
mov
mov
cwtl
pop
pop
out
pop
jl
add
sti
stos
xchg
loopne
mov
sbb
out
add
bound
fstl
lods
cmp
bound
push
pop
fists
lds
mov
xchg
rcrb
xchg
mov
jnp
aad
cltd
xchg
mov
iret
jmp
adc
push
push
mov
xchg
out
mov
shlb
ficoms
pop
jp
lods
push
mov
lea
outsl
cwtl
leave
adc
fcoml
pop
mov
xchg
cmc
add
frstor
cmpsl
enter
je
movl
in
adc
test
loope
js
xchg
out
mov
mov
mov
es
mov
sbb
cmp
dec
fisttps
dec
cmp
inc
cmovb
gs
adc
sub
fisubrs
sahf
ss
xchg
cs
jecxz
sbb
scas
movsl
int
dec
and
or
cmp
outsb
fimuls
add
das
iret
sub
jmp
adc
jnp
iret
aaa
adc
jl
inc
mov
sub
outsl
std
lret
enter
inc
shl
cltd
xor
xor
cmc
sarl
fiadds
xchg
cmp
pop
cld
sub
or
mov
ds
jns
ljmp
pop
fildl
xchg
mov
mov
cmp
pusha
jb
or
xchg
mov
aam
push
loopne
test
addl
data16
dec
insl
popf
inc
cmp
das
pop
mov
cld
daa
dec
fs
adc
lahf
pop
shlb
mov
loop
mov
js
insb
fnstcw
cmp
lahf
mov
jnp
mov
or
cmp
sti
arpl
aad
and
push
inc
pop
xchg
sbb
mov
inc
out
adc
sub
shl
dec
xchg
dec
scas
mov
pop
lcall
jbe
mov
pop
test
lret
and
cld
or
lcall
mov
cltd
mov
insb
es
je
loopne
mov
mul
adc
mov
dec
daa
ja
sar
xchg
in
in
mov
dec
bound
add
mov
xchg
into
jp
sub
dec
and
lods
ror
fnsave
sub
adc
clc
sarl
shrb
das
jp
dec
aaa
pop
es
push
mov
mov
movsb
cmpsl
fadd
pop
jnp
dec
push
ljmp
shl
into
lret
xlat
ds
dec
xor
inc
fdivrp
cmpsb
dec
or
and
and
loopne
sbb
inc
or
mov
es
inc
xor
push
xor
and
mov
imul
mov
je
test
mov
sbb
xchg
add
xchg
fistpl
leave
pop
movsl
inc
mov
pop
or
rorl
test
sbb
dec
in
mov
push
cli
mov
adc
iret
push
push
jecxz
push
mov
mov
cmp
lock
and
jb
inc
subb
lret
lret
xchg
push
cmp
jg
lahf
cmp
and
stc
test
pop
lea
pop
cmpsl
icebp
mov
mov
add
mov
sahf
fdivs
idivl
lods
loope
jne
pop
movsl
scas
push
cmp
mov
ja
incb
push
xchg
repnz
and
push
rcrb
andl
jmp
enter
inc
mov
mov
loope
mov
and
pusha
sbb
pop
jmp
push
push
mov
call
ss
adc
ljmp
jnp
loopne
ds
pop
push
xchg
push
xchg
mov
shl
push
cltd
dec
mov
insb
sbb
fisubs
cltd
rorb
std
jecxz
pop
mov
shll
mov
jb
cmp
push
fiadds
test
lcall
fidivs
cwtl
mov
and
jo
push
aam
jge
ficompl
mov
movsl
pop
pushf
push
inc
pop
insl
shll
fmul
dec
add
das
jns
imul
movsl
ljmp
jns
mov
ja
ret
call
ja
push
addr16
call
sarb
xchg
loopne
cwtl
dec
add
fmul
sub
jns
lods
push
scas
jmp
mov
pushf
insb
mov
imul
pop
sbb
je
jmp
and
or
enter
test
xchg
dec
test
or
dec
sbb
pop
inc
pop
pushf
cmpb
sbb
out
aas
adc
pop
imul
rolb
clc
mov
jae
xchg
test
pop
push
aad
inc
out
das
icebp
iret
cmpsb
xchg
jmp
xchg
and
mov
dec
and
inc
add
cwtl
fs
pushf
or
mov
mov
out
ss
add
cmp
mov
jno
leave
out
inc
push
sbb
dec
sbb
in
mov
stos
fdivrl
or
push
int
das
mov
jnp
sti
push
lret
addr16
xchg
fimuls
push
or
cmp
enter
dec
and
push
movsl
movsl
mov
repnz
dec
jo
stc
push
add
xchg
ret
out
jne
cmc
jle
stos
cmp
cmpsb
jne
subl
push
sbb
scas
shr
and
scas
stos
jmp
pusha
jmp
popa
lods
dec
repnz
daa
int
sbb
bound
push
push
inc
mov
mov
test
mov
ret
mov
aam
sti
mov
pop
cmp
lods
in
sbb
or
jecxz
fidivrs
add
andb
out
sub
les
loopne
icebp
dec
mov
movsb
popf
xchg
sti
jne
sbb
jle
xor
add
in
xchg
stos
mov
and
das
fsubrs
sbb
adc
movsl
stos
mov
mov
adc
mov
jle,pt
jmp
xlat
addl
xchg
fistps
sarl
fwait
test
inc
sbb
lret
imul
insb
frstor
and
andl
or
mov
sub
pop
nop
lea
dec
push
pop
loop
imul
dec
shr
jmp
mov
jns
fucomi
xor
fdivr
call
xchg
imul
fcmovne
out
sub
jg
sbb
adc
mov
push
stos
jae
lret
sub
xchg
gs
sbb
stc
dec
pop
sbb
or
mov
sub
gs
cmc
pop
das
xchg
scas
stos
out
call
xchg
aaa
push
int3
ljmp
lret
jmp
fcomip
fldenv
xor
jmp
inc
sarb
inc
pop
ljmp
roll
inc
lea
xor
fcmovne
sub
push
out
xchg
es
roll
jle
sbb
jo
je
mov
in
vmulss
add
jo
mov
cmp
jmp
test
cmp
icebp
xchg
iret
test
jo
sub
loop
inc
cmp
nop
mov
cmp
out
nop
push
lea
std
mov
push
mov
das
dec
out
jb
sbb
jnp
add
rorb
data16
dec
push
mov
test
or
and
add
in
fs
clc
mov
loopne
into
dec
xchg
andl
mov
repz
xchg
ja
sub
into
dec
cmpsl
adc
cmp
daa
and
outsl
adc
pop
ss
je
lret
pop
and
jae
es
pushf
sbb
add
leave
push
jbe
push
repz
push
jb
fcmove
mov
out
imul
jne
push
fbstp
adc
mov
fisttpl
cmc
int
push
mov
or
mov
stos
dec
int3
jo
mov
mov
rcrb
mov
lock
mov
dec
out
out
fisubrs
out
or
mov
push
cs
cmpsl
sti
mov
bound
cli
and
pop
jo
stc
in
sbb
cs
lods
sub
mov
imul
fbld
pop
fs
and
add
ja
outsb
inc
lret
mov
mov
or
das
xchg
mov
into
mov
lods
inc
outsl
xchg
add
adc
int
and
xorb
mov
push
popa
inc
fdivs
incl
sub
call
add
stc
out
pop
insl
jg
ljmp
adc
divb
push
fwait
push
jmp
sti
outsb
lret
pop
fisttpl
mov
sbb
dec
ficomps
stos
ds
push
jmp
sti
outsb
lret
pop
fisttpl
mov
sbb
dec
ficomps
stos
ds
push
jmp
cli
outsb
lret
pop
fisttpl
mov
sbb
dec
ficomps
stos
ds
push
jmp
sti
outsb
dec
pop
pop
dec
aam
les
sahf
sbb
sbb
repz
mov
xchg
xchg
sub
and
xor
adc
xor
push
movsb
mov
xchg
xchg
in
hlt
repz
and
xor
add
adc
movsb
arpl
inc
push
push
movsb
mov
xchg
xchg
in
hlt
repz
and
pop
outsl
push
xor
pop
xor
cmp
mov
clc
jg
and
sub
inc
aas
sti
lea
aad
and
adc
stos
aas
repz
hlt
or
iret
sub
fstps
jmp
fwait
mov
fldcw
xorl
mov
js
les
int
push
aam
xor
or
mov
mov
out
adcb
sub
subl
jle
fwait
xor
mov
push
dec
fs
imul
hlt
or
cmp
test
bound
cmp
mov
adc
push
add
dec
dec
inc
sbbb
sub
lock
or
push
jae
les
sti
pop
cmp
xor
stc
xchg
push
aam
push
adcl
ret
aam
and
xor
add
adc
arpl
inc
push
adc
in
vpmullw
mov
mov
add
insb
jge
push
je
daa
rcll
shl
stc
loope
clc
in
mov
mov
gs
push
push
adc
gs
sbb
and
jmp
clc
out
hlt
repz
and
xor
add
adc
arpl
inc
push
push
movsb
mov
xchg
xchg
in
hlt
repz
and
xor
add
adc
arpl
inc
push
push
movsb
mov
mov
or
fwait
jp
sbb
xchg
dec
rol
aaa
pop
dec
xchg
pop
pop
ja
add
les
cmp
sbb
sub
pushl
mov
xchg
popf
dec
out
pop
fwait
jae
shrb
xor
jne
insb
fmuls
aas
mov
repz
bound
ds
xchg
mov
add
fstp
lds
cmp
pop
xchg
sarb
xor
adc
jge
xchg
mov
push
repz
arpl
mov
int3
mov
adc
xchg
adc
add
sti
stc
arpl
mov
test
cmpsb
mov
sub
jo
xor
xor
rcrl
pushf
dec
push
mov
cli
dec
fidivrs
andl
cmpb
xchg
inc
lret
out
and
inc
into
mov
push
jnp
xchg
in
lock
sbb
xorl
fsubr
enter
sahf
add
stc
mov
loope
icebp
inc
imul
cmp
pop
mov
lock
mov
pop
sahf
test
aaa
adc
sbb
cmp
stc
xor
adc
movsl
in
add
mov
pop
and
mov
sbbb
lret
cmp
add
iret
leave
subl
xchg
mov
mov
pop
fs
mov
sub
pusha
lds
imul
cli
push
insb
out
push
pop
inc
int3
in
mov
and
in
lcall
pop
notb
sbb
cmp
repnz
cld
pop
inc
lods
sub
pop
adc
xchg
dec
push
inc
cmc
push
jecxz
jns
andl
ret
stc
cli
dec
out
xchg
btr
pop
fnsave
add
xor
add
xor
sub
sbb
stos
rcl
push
mov
pop
out
add
lods
mov
pop
fcomps
push
addr16
cmc
ficomps
xor
xor
in
jp
xchg
fadds
and
out
repz
mov
mov
dec
lock
add
pop
int
xchg
cmp
cmp
cmpsb
das
xor
movsl
push
cmp
lock
mov
ret
leave
imul
sbb
rcl
xchg
std
xchg
xchg
xor
pusha
lea
in
movsl
mov
push
jge
inc
or
pop
sbb
mov
repz
out
testl
sarb
js
xchg
adc
mov
sub
mov
push
cmc
repnz
jp
rorb
cli
lahf
adc
pusha
jo
roll
enter
cmp
adc
repz
mov
sub
or
push
xor
mov
les
xchg
int3
fildll
xchg
loopne
xchg
cmp
mov
iret
dec
fcomip
jo
jae
out
lret
sub
test
test
mov
push
sbb
push
leave
add
xor
cmp
push
mov
test
jle
lods
aaa
and
xchg
lds
jle
aad
xchg
sarl
fisttpll
imul
or
mul
and
adc
xor
idivl
add
popf
js
inc
fwait
lock
mov
cld
jb
dec
lock
mov
mov
push
imul
inc
in
rclb
out
jbe
adc
sar
add
pushf
leave
jns
or
popa
les
divl
ljmp
out
or
jge
jb
daa
push
mov
ret
int
push
adc
aas
dec
sub
inc
mov
dec
std
xchg
in
inc
aas
inc
mov
ja
add
loopne
daa
jae
shl
lcall
jle
xchg
std
loopne
push
pop
and
and
or
pusha
lret
dec
out
cs
das
jbe
lods
aad
sbb
cmpsl
clc
insb
lock
sbb
pop
mov
pop
inc
and
or
addb
insb
jp
lods
repnz
pop
cmp
and
sub
and
dec
je
xchg
out
jbe
mov
xlat
or
mov
pop
rorl
push
movsl
adc
sub
stos
pop
xor
decl
in
sub
shrd
add
popa
mov
inc
push
aas
pusha
and
cmp
aam
lods
xor
scas
das
lret
mov
test
sub
xor
jge
mov
cli
pop
divb
popf
xor
les
mov
pop
out
hlt
cld
and
cmpsb
push
sbb
in
clc
and
pop
or
push
dec
cmpsl
mov
aaa
add
repz
pop
xchg
sub
ficomps
test
sub
bt
fbstp
or
jne
stc
xchg
scas
fmuls
or
pop
js
in
jnp
inc
mov
mov
insb
push
jne
mov
insl
cmp
jno
lret
enter
dec
sbb
flds
mov
ljmp
mov
pop
iret
sbb
and
push
ss
xor
xchg
outsl
ret
inc
jo
movsl
adc
xlat
jge
mov
shrl
jmp
hlt
cmp
rep
jne
repz
imul
iret
movsb
jne
pop
inc
push
ficoml
lods
sti
cmp
arpl
bound
pusha
nop
aad
nop
jb
dec
pop
test
jae
enter
nop
icebp
lock
jl
jbe
pop
or
xchg
in
and
into
ficomps
mov
imul
into
push
add
fs
add
std
jae
mov
cmp
xchg
in
mov
out
cmp
xchg
mov
xor
xor
push
sysret
mov
scas
sbb
femms
mov
pop
stos
mov
xor
out
lds
dec
inc
int
adc
pushf
push
push
cmp
mov
jmp
sub
push
insl
cs
arpl
mov
in
pop
into
or
rcl
push
pop
xlat
cltd
and
hlt
clc
notb
mov
int3
or
jmp
popf
sub
mov
fadds
cmp
mov
xor
push
xchg
lea
movb
fwait
inc
sbb
xchg
notb
inc
xor
lds
pop
adc
popf
push
outsb
div
aam
sub
inc
mov
adc
dec
sbb
push
jecxz
mov
adc
adc
cmp
xlat
push
fisttpl
and
mov
popf
lret
dec
outsb
sbb
add
addr16
cli
loope
add
cmp
inc
cmp
sub
jbe
pop
sbb
adc
jbe
daa
xor
std
fcompl
movsb
sub
les
repnz
add
das
xchg
fbld
adc
add
pop
pop
cltd
dec
add
pushf
or
call
cmc
out
sub
hlt
cmp
sbb
adc
cltd
sub
mov
add
jp
icebp
mov
jecxz
cwtl
cwtl
stc
pop
xchg
fidivrl
and
std
adc
stc
ss
dec
lock
push
sub
out
dec
jne
sbb
stc
pop
and
sub
sbb
mov
jae
test
sub
les
out
pop
xlat
add
mov
cli
cmc
sub
push
jnp
shll
xor
mov
sbb
stos
incl
lea
inc
sbb
outsb
gs
add
push
rorb
dec
loop
pop
pop
jae
or
pop
pop
push
xchg
jp
das
repnz
outsl
jae
imul
adc
add
add
fidivs
aam
ljmp
inc
int
outsb
aam
pop
xchg
clc
pop
pop
add
adc
xor
insb
xchg
xorb
sbb
stc
cltd
bound
push
xor
movsb
add
out
fcompl
push
sub
sbb
xor
jmp
stc
xchg
ljmp
sbb
inc
push
jl
iret
push
bound
mov
mov
lcall
pop
or
out
dec
adc
cs
xchg
push
sarl
push
lcall
cmpsb
xchg
jle
push
lods
fnstsw
cs
inc
push
fisubrl
les
pop
testl
aas
jno
cmpsl
jmp
jns
cmp
push
pop
je
inc
push
mov
insb
mov
orb
cld
add
cld
pop
out
movlps
mov
jge
lods
movsb
popa
mov
scas
loopne
cld
fisubrs
push
movsl
movlhps
mov
and
jae
mov
mov
sbb
sbb
lods
divb
jo
insb
jge
test
imul
dec
xchg
pop
lds
outsb
xor
push
or
dec
xor
mov
adc
and
push
jp
mov
jecxz
enter
push
dec
lods
sahf
adc
movsb
add
ret
push
jmp
pop
adc
mov
jae
bound
arpl
addr16
push
sbb
add
pop
mov
js
dec
adc
add
nop
xchg
pushf
add
inc
shrb
mov
mov
icebp
and
adc
mov
and
mov
popf
mov
push
leave
std
mov
gs
lods
dec
adc
lahf
xor
js
sbb
fldl
aam
addr16
out
jae
movsb
push
cmp
fs
xchg
pop
test
cld
inc
lahf
push
fidivl
sub
mul
movsl
ss
in
pop
sbb
ja
out
pop
cmc
cmp
lods
jne
and
subb
xor
out
ret
testl
xchg
or
outsl
jmp
adc
and
mov
push
in
lret
or
sbb
leave
test
int3
js
stc
lock
push
sbb
test
scas
dec
popa
dec
jmp
divl
fistl
loopne
arpl
mov
popa
push
lds
cwtl
rorl
mov
push
rcll
mov
xchg
femms
push
faddp
or
xlat
inc
aas
cmp
mov
mov
sub
dec
and
cmp
sub
push
xchg
ja
push
movsb
movsl
in
adc
out
insl
mov
and
add
wrmsr
call
jmp
xchg
cmpsb
stos
push
ret
stc
ret
cmp
movsb
mov
and
mov
inc
xchg
xor
hlt
out
mulb
push
in
jae
mov
pop
rcll
jno
out
add
std
xor
adc
jl
out
add
test
mov
push
fildll
pop
mov
bound
xchg
cmp
loope
inc
push
mov
pop
stc
aas
cmp
punpckhwd
stos
xchg
test
fidivrs
int3
push
xor
shll
adc
pop
and
sti
inc
push
fiaddl
xchg
daa
xor
aaa
test
leave
cmp
sarb
dec
aam
push
int3
add
mov
aaa
clc
adc
cmp
jno
xchg
dec
into
fcoms
add
lcall
cli
xor
rorl
mov
das
sbb
imul
mov
mov
fwait
loopne
std
or
jo
cld
xchg
insl
jg
fstpt
movsb
dec
ret
movsl
lea
lods
inc
mov
xlat
ss
lods
call
xchg
lea
daa
jle
in
pop
jmp
dec
xchg
and
rcll
add
loop
fcmove
in
insl
adc
xchg
addr16
in
out
mov
gs
pop
push
in
push
or
sub
sbb
std
leave
adc
add
cmp
decb
in
pusha
adc
xchg
aam
adc
out
sub
punpckhwd
daa
cmp
xor
int
or
sti
lea
xor
jg
pop
pop
scas
cmp
xchg
das
pop
cmp
sbb
adc
in
into
iret
shrb
shlb
jl
dec
dec
gs
fisttpl
cmpsl
xchg
add
jle
shlb
ror
aad
add
and
mov
or
dec
cld
push
mov
push
sahf
mov
fcmovnb
lds
cmp
movsb
out
mov
clc
adc
cmpsb
and
pop
push
lcall
aad
pusha
pop
push
pushf
adc
ss
sub
and
mov
addr16
int
and
pop
adc
insl
jns
or
pop
cmp
cmc
sti
fidivs
icebp
call
add
inc
mov
lret
cmp
fistpl
inc
pop
outsl
cltd
add
xchg
pop
mov
xor
out
xlat
jns
pop
cltd
sarb
mov
cmp
out
xlat
sbb
shrb
pop
jo
push
dec
adc
mov
pop
and
cmc
mov
xchg
xor
call
push
jg
and
mov
daa
hlt
dec
mov
add
xor
imul
lcall
hlt
sbb
pop
test
cltd
ficoms
lret
cli
mov
adc
movsb
or
push
push
pop
push
and
mov
pop
xchg
sahf
in
andb
dec
jbe
adc
ret
push
bswap
pop
aas
ret
cmp
loope
pusha
xlat
or
push
loop
rclb
call
hlt
add
rolb
mov
cltd
lods
xor
cmp
pushf
testb
or
xchg
rclb
pop
sub
roll
or
and
xor
add
add
rclb
lea
xchg
out
mov
xor
repnz
cmp
into
shll
mov
in
ret
xor
sub
adc
repnz
cmpsl
fildl
xor
movsl
fisubl
push
sub
jmp
mov
lock
scas
xchg
das
lcall
add
fs
lock
mov
xor
mov
sub
xor
jne
sbb
lcall
lods
jne
repnz
test
sub
lods
mov
ficoml
js,pn
scas
cmpsl
lret
test
sahf
data16
lds
mov
push
lret
call
cmp
outsb
mov
in
mov
pop
mov
mov
scas
loopne
aad
push
cmp
cmc
jle
movsb
out
sub
add
testl
jnp
and
stos
out
lcall
movsb
sbb
orl
sub
xchg
leave
dec
lret
int
xor
dec
dec
cmp
ret
push
xchg
or
mov
cmc
push
stc
pushf
jo
add
mov
popf
pop
daa
cld
mov
or
jb
mov
mov
cmp
or
xchg
jmp
cmp
adc
adc
xchg
mov
movsb
les
mov
adcl
pusha
jecxz
mov
sbb
or
mov
pop
pop
dec
movb
out
jmp
mov
cmp
dec
repz
bound
loop
cmp
std
dec
scas
mov
out
pop
enter
loopne
fdivrp
inc
and
rcll
push
mov
scas
jae
jmp
pop
and
mov
stos
mov
mov
data16
into
xchg
js
dec
dec
jno
mov
std
fwait
jae
mov
aaa
lock
add
das
aas
cs
push
cmp
push
das
push
dec
adc
fimull
out
cmp
xchg
sbb
mov
insb
jo
sbb
test
enter
or
fxch
sbbl
jp
bound
rcr
xchg
iret
lahf
xor
in
xchg
outsl
mov
cmp
fwait
out
lahf
popf
js
test
and
sbb
xor
ds
in
cwtl
mov
ficoms
les
mov
jno
push
xchg
cmp
mov
inc
cwtl
icebp
adc
movsl
xchg
in
jb
push
ret
and
xchg
je
sub
ds
jns
pop
push
in
aaa
jg
and
leave
cmpsl
push
cmp
mov
scas
pop
cs
addr16
notl
pop
leave
or
pushf
jno
push
adc
pop
push
je
mov
or
out
mov
push
setno
or
clc
push
lret
cmp
repnz
sbb
movsb
andl
pop
cmp
or
inc
out
or
mov
push
clc
in
and
mov
jmp
cmp
movsb
mov
sub
jl
data16
push
movsb
mov
std
or
dec
sub
push
shlb
cwtl
ret
outsl
adc
sbb
cs
fsubrl
and
idiv
cmp
sub
inc
xchg
mov
and
jmp
sbb
hlt
jmp
add
or
sahf
adc
adc
xchg
insb
mov
push
mov
dec
add
jecxz
shrb
sub
add
popa
mov
out
pop
int
lcall
xchg
or
idiv
aad
sti
mov
xchg
xchg
cmp
xor
inc
push
daa
into
shll
cmp
ret
dec
ja
cmc
fimuls
xor
outsb
int
push
jbe
xchg
pop
push
inc
cwtl
jns
std
cmpsb
orb
sbb
push
sbb
scas
and
add
nop
cld
sub
fcompl
loop
insb
inc
mov
mov
and
mov
mov
mov
shll
idivb
ljmp
cmpsl
setno
bound
test
iret
xor
loop
ss
dec
mov
push
jl
sub
pop
xor
out
dec
adc
xchg
daa
rorb
jmp
add
mov
add
jmp
xchg
sbb
ds
cli
fisubrs
mov
mov
jo
std
adc
mov
mov
adc
or
test
ret
and
sub
and
and
ss
adc
pop
je
pop
mov
mov
shl
inc
push
leave
xchg
ljmp
bnd
push
jnp
mov
int
mov
je
jno
xchg
push
jmp
mov
dec
mov
pop
stc
out
adc
ds
loopne
push
dec
stos
dec
clc
movsb
push
les
imul
mov
movsl
and
shl
jl
cwtl
xlat
enter
adc
pushf
sub
icebp
js
xchg
out
or
js
jecxz
push
popa
out
pop
stos
jo
repz
adc
adc
inc
or
mov
adc
push
aas
aad
sbb
mov
cmpsb
ja
insb
pop
divl
pop
out
cmp
jns
sbb
dec
push
lock
subb
cltd
pop
cli
xchg
mov
outsb
cmp
jbe
cmp
enter
outsl
sbb
ljmp
in
fcmovu
jl
adc
int3
mov
jne
mov
cmp
and
cltd
fucomp
mov
sbb
out
stos
mov
xchg
push
push
xchg
or
outsb
sbbw
mov
mov
xchg
mov
push
je
cmp
jbe
cmp
subl
mov
jl
cmp
pop
push
fldcw
push
mov
mov
jbe
sbb
lods
cmpsl
or
pop
nop
mov
cs
push
lret
dec
pop
push
push
lea
push
pushf
ret
pop
pop
imul
lea
pop
subb
sbbb
je
movsl
int3
xorb
loope
mulb
test
movsl
push
xchg
leave
and
fs
push
xchg
testb
xchg
decb
and
jmp
addb
adc
bound
pushf
jle
mov
xchg
lret
jno
out
ja
insb
lds
xor
outsl
xchg
movsb
jl
sarb
push
adc
xor
frstor
sub
ja
mov
inc
pop
aas
add
mov
sbb
adc
adc
bound
push
jge
pop
in
ficomps
inc
mov
xchg
movsb
jp
inc
xlat
lea
clc
push
mov
int3
daa
push
adc
cmp
push
in
add
jg
add
test
les
lock
push
loopne
into
aaa
fldt
jge
push
inc
andb
popa
insl
push
loop
mov
popa
rcll
dec
ss
inc
pop
xor
fdivr
push
imul
xchg
xlat
pop
in
lods
fs
push
cli
lea
pop
das
and
push
lea
fwait
iret
jne
mov
cmc
loop
jge
sahf
call
jb
sub
lods
cmpsb
xlat
jb
inc
nop
add
or
hlt
mov
decb
pop
xor
mov
dec
inc
sub
push
mov
push
jne
mov
fdivrl
rcrl
ret
lds
rcrb
int
pop
pop
imul
inc
mov
adc
and
dec
cmp
xchg
mov
or
push
repz
dec
daa
jmp
gs
or
inc
mov
es
xor
scas
cltd
int3
adc
lea
xor
inc
flds
cmp
ffree
push
sub
pop
dec
xor
lret
push
outsl
add
xchg
out
mov
fwait
sbb
test
xor
repz
mov
jae
dec
hlt
xchg
not
pop
jg
lea
and
ja
ja
mov
add
sub
push
mov
jbe
ljmp
cwtl
jno
jne
aam
movl
dec
jnp
dec
leave
mov
and
sbb
mov
adcb
ret
aam
and
xor
add
adc
arpl
inc
push
push
movsb
mov
xchg
xchg
in
hlt
repz
and
xor
add
adc
arpl
inc
push
push
movsb
cmpsl
xor
add
xchg
xchg
fs
repz
and
xor
add
adc
bound
inc
push
push
movsb
mov
xchg
xchg
in
hlt
jae
inc
aam
and
xor
scas
add
adc
add
xor
and
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
gs
jne
inc
dec
push
pop
xchg
inc
pop
push
ja
sbb
vpmullw
movsl
lods
mov
xchg
lea
jge
dec
push
pop
and
or
cmc
popf
vpand
movsl
lods
test
jl
insb
jge
dec
dec
pop
cmp
sub
sbb
lcall
rcr
inc
popf
or
sbb
inc
and
or
ljmp
arpl
cmc
dec
cwtl
lea
push
ss
test
cmp
scas
xor
pop
pusha
add
sub
fsubs
int3
lcall
xor
mov
aad
mov
or
std
or
dec
jge
jb
adc
js
decb
xor
cli
adcb
ss
xchg
lock
lea
mov
push
jb
adc
enter
sub
sub
in
in
xor
pop
mov
test
sti
xchg
addb
stos
movsb
ficompl
mov
js
std
sbb
test
loopne
out
test
insb
jge
dec
push
pop
xor
or
cld
in
in
std
int3
fnstsw
lea
jge
and
xor
inc
push
cmp
in
cltd
mov
int3
ror
testl
and
pop
add
xchg
nop
mov
lods
xchg
mov
into
repz
sbb
sub
xor
sbb
vpmullw
movsl
lods
mov
test
jne
inc
dec
push
pop
and
or
cmc
std
vpmullw
movsl
lods
mov
test
pop
xor
jmp
sbb
inc
int3
or
mov
ss
repz
mov
xlat
xlat
pop
dec
shll
push
pop
js
shll
int
push
xchg
stos
and
xchg
ficompl
inc
enter
xchg
aaa
jp
lcall
dec
cmpsl
stos
xorb
js
dec
mov
cmc
cli
mov
xchg
mov
xchg
lea
insb
out
pop
scas
in
xchg
mov
int3
aaa
and
rep
cld
adc
test
fdivr
aad
mov
or
pop
hlt
sbb
out
rclb
dec
inc
orl
lahf
xor
mov
xor
and
add
fcmovnb
add
cmc
xchg
or
xor
sti
pop
pop
fs
mov
cmp
lahf
jle
cmp
or
jle
std
stc
std
out
push
add
inc
repnz
data16
adc
sbb
sub
pushf
pop
fistpl
addr16
les
mov
stc
xor
xchg
xchg
ss
pop
shlb
in
mov
test
pop
into
nop
jecxz
mov
mov
sub
jns
and
mov
call
and
frstor
daa
js
sbb
fcmovnb
adc
sub
es
dec
scas
push
orl
jnp
notl
dec
lds
mov
icebp
idiv
mov
fwait
mov
mov
lods
push
mov
sub
out
sbb
adc
test
sbb
jbe
cs
cmp
mov
fwait
outsl
outsl
mov
in
push
and
shr
inc
in
jne
mov
mov
cmp
aam
rol
push
bound
push
cmp
out
arpl
insb
sti
sbb
push
call
iret
xchg
push
negb
push
in
movsb
repz
pop
rol
dec
or
jecxz
xchg
adc
jl
fldenv
repz
int
cmpl
or
hlt
mov
add
sbbl
and
xor
les
mov
pop
filds
pop
loopne
inc
lret
sbb
sbb
mov
int
test
outsb
pop
cs
fs
mov
cmp
add
add
scas
inc
add
movsb
fwait
lret
cmpsl
cwtl
test
mov
sbb
add
out
mov
jo
notb
or
mov
lods
shl
stos
lea
inc
pop
pusha
out
imul
sar
mov
das
aaa
mov
jnp
fdivp
dec
sub
hlt
sbb
fdivl
nop
mov
in
dec
add
mov
test
push
jmp
sbbb
push
stc
pop
enter
xor
sub
addr16
inc
sbb
mov
push
mov
jbe
mov
arpl
mov
xchg
push
dec
mov
stc
mov
orb
sbb
cmp
dec
je
sbb
mov
leave
gs
enter
imul
mov
stos
adc
ja
ljmp
test
out
mov
xlat
out
cmpsb
dec
call
fisttps
fbstp
cmp
ret
mov
pushl
or
adc
inc
add
popf
mov
ret
sub
out
xor
pop
sbb
ret
sar
cli
xchg
in
es
jmp
adc
mov
xor
xchg
fisubrl
lcall
pop
push
popa
sbb
enter
aas
add
pop
adc
andb
dec
adc
push
fcoml
adc
int
lret
inc
lods
jo
aaa
cltd
mov
into
in
xchg
stc
fnstsw
js
pop
js
mov
sub
fsubrs
push
push
sbb
mov
mov
call
cmpb
gs
jecxz
mov
rcl
sbb
mov
hlt
cmp
push
or
shl
les
gs
and
loop
inc
fsubr
sub
lahf
test
iret
fimuls
mov
pop
xchg
outsb
sahf
add
sbb
pushl
int3
xchg
and
lcall
lods
addb
xchg
fisubs
repnz
jg
lcall
ja
ss
cmp
fisubs
rcr
jmp
jg
jns
pop
ret
je
pusha
sbb
ja
xchg
pusha
add
inc
inc
outsl
int
mov
bnd
xchg
nop
and
cmp
inc
dec
and
fwait
xchg
adc
jmp
and
nop
jbe
mov
xor
rcll
mov
xchg
xchg
lret
ja
aaa
fdivrl
lods
sub
and
nop
and
mov
aaa
neg
pushf
add
cmp
orb
xor
in
mov
stos
fisttpl
cmp
loop
repnz
jnp
and
or
add
cmp
test
lods
pop
stos
lret
insl
mov
inc
sarb
mov
push
imul
pusha
jl
mull
ljmp
and
jae
mov
xchg
jge
popf
cmp
leave
cmp
subl
pop
jmp
cmp
jnp
adc
push
mov
push
fadds
adc
cmp
inc
int
data16
cmp
mov
mov
inc
sbb
inc
jo
scas
mov
mov
cmp
sub
lret
outsb
push
in
in
mov
inc
xor
mov
dec
pusha
insl
mov
je
adc
cmp
dec
adc
xor
cmp
mov
or
pop
add
push
sbb
repz
lcall
shl
push
push
mov
leave
loope
test
pop
test
jmp
loopne
hlt
sbb
addl
stos
in
mov
cltd
inc
xor
insb
adc
mov
cwtl
or
cmp
ss
inc
sahf
dec
or
jp
sbb
and
pop
filds
imul
mov
inc
leave
sbb
aas
mov
mov
clc
loopne
adc
fidivrl
mov
xor
xchg
std
fnclex
sub
std
jp
sbb
xchg
cmp
jge
fwait
into
mov
shrb
int3
rcrb
int
push
pushf
sbb
add
jb
sbb
mov
jmp
dec
add
imul
push
fisttps
jecxz
cmp
sbb
repz
cmp
mov
add
cmp
push
icebp
dec
mov
dec
clc
mov
in
and
cmp
mov
xchg
pop
movsb
pop
pop
ljmp
sti
dec
pop
leave
jl
jle
in
sbb
mov
jo
add
cmp
ret
pop
or
add
push
cmpsb
xor
xor
fadd
jecxz
ret
mov
pop
lret
rclb
aad
xchg
into
cmc
inc
pop
sbb
xchg
and
ljmp
mov
fsubrl
jle
orb
cmp
jo
mov
xor
cmp
iret
inc
jle
jbe
xchg
out
nop
push
jne
leavew
subl
mov
dec
sub
lahf
lock
add
and
push
mov
movb
pop
dec
cltd
dec
in
xchg
mov
gs
pop
jo
dec
mov
mov
fidivl
sbb
outsl
jmp
bound
ret
lea
subl
xchg
pop
cmpsb
push
loopne
cli
xlat
jnp
insl
mov
jo
pop
push
inc
mov
jnp
sub
jmp
sbb
movlps
jge
sub
lret
dec
dec
ja
jg
pushf
rorb
cvtps2pd
or
subb
mov
or
retw
mov
xor
cltd
test
sti
test
inc
mov
jbe
movsl
push
ljmp
aaa
lods
mov
orb
cs
shll
in
xor
push
and
repz
and
sub
inc
or
int
dec
push
js
pop
cmpsb
sub
mov
mov
inc
std
or
cmp
in
mov
sbb
jecxz
sbb
lods
int
out
mov
xlat
lea
mov
int3
add
inc
rcll
arpl
popl
lret
cmp
stos
es
xchg
pop
inc
jno
xchg
add
pop
dec
lds
pop
or
push
push
outsb
xor
pop
insl
push
imul
cmp
push
in
aas
or
ret
test
andl
add
push
call
fdivrl
add
es
imul
or
xor
std
clc
sbb
lods
pusha
sahf
lods
cmpsl
imul
scas
mov
test
pop
outsb
sti
cwtl
cmp
dec
loopne
sub
sbb
out
mov
xor
cmp
mulb
stc
sbb
shrl
jbe
pop
push
je
dec
mov
dec
fidivs
mov
inc
jno
push
test
jne
movsb
in
xchg
xchg
xchg
adc
sub
mov
jbe
inc
mov
and
aam
pop
mov
cmpsb
fs
and
dec
ljmp
cld
mull
jecxz
stos
sti
idiv
mov
je
sub
cltd
jno
movsl
and
pusha
test
add
cs
in
adcl
cltd
add
push
xlat
jbe
in
arpl
fcoml
in
fadds
and
adc
orl
scas
fbld
out
cmp
in
addr16
fwait
dec
inc
xchg
lret
insb
adc
lcall
fsubl
cmpsb
cmp
xchg
jmp
test
mov
out
or
xchg
stos
stos
push
xchg
aam
sti
sub
sub
inc
sbb
js
ss
mov
adc
cwtl
mov
mov
imul
frstor
mov
jle
es
popf
jmp
insl
mov
pusha
sub
mov
aas
mov
icebp
xor
scas
js
mov
cmpsl
jg
clc
out
divb
paddusw
push
adc
mov
xor
mov
jge
fiadds
out
and
mov
or
push
lods
movsl
in
cli
pushf
xor
stos
adc
addr16
add
movsb
aas
xchg
ja
or
enter
mov
loope
mov
or
sar
jae
inc
popa
mov
mov
test
into
aas
xchg
add
out
cmc
mov
dec
repz
jg
mov
stos
push
pop
mov
cld
mov
std
mov
bnd
outsb
gs
icebp
xchg
or
adc
cmp
add
inc
mov
stos
inc
cmpsb
loope
xor
nop
adc
and
int3
jns
sub
imulb
sahf
pop
push
push
movsl
das
xor
push
mov
jg
repnz
inc
enter
pusha
lcall
mov
ljmp
iret
and
das
int3
ss
push
ljmp
adc
out
mov
mov
fwait
rclb
and
adc
in
gs
mov
xor
jae
mov
dec
imul
aaa
inc
add
imul
call
mov
jb
out
incl
xor
mov
loop
and
sarb
xchg
lods
push
icebp
push
add
jmp
add
les
popa
cvtps2pd
add
mov
cmp
cltd
and
jo
ret
dec
fbstp
push
sbb
mov
mov
push
dec
rcl
adc
sbbl
xorl
dec
pop
pop
cs
lea
xor
jb
mov
ret
pop
inc
jns
push
imul
fmul
bound
mov
loop
dec
dec
add
mov
or
xchg
xor
insl
pusha
inc
lret
xor
rorb
mov
cmp
leave
cmp
test
mov
mov
adc
mov
xor
sbbl
popf
jmp
and
cwtl
rorl
adc
mov
dec
adc
sarl
ret
shrl
lock
jns
rcll
dec
and
cmpsl
sub
adc
into
adc
or
repz
lcall
cltd
push
lfs
fisttpl
scas
fistpll
pop
dec
aad
js
mov
xor
pop
xchg
mov
pop
cmpsb
mov
lea
or
inc
aam
xchg
call
sbb
pop
notl
hlt
cli
and
pmaddwd
lret
int3
mov
testb
xchg
shlb
or
mov
les
fcomps
sbb
jl
xor
xor
xchg
sbb
xor
pop
and
int
clc
shrb
aam
jle
push
jbe
popf
xchg
mov
sub
mov
xchg
pop
push
jecxz
lret
lahf
out
mov
add
sbb
out
dec
xor
or
inc
push
pushf
pop
xor
jns
inc
jecxz
loopne
andl
sub
inc
cmp
gs
mov
dec
xchg
ret
lret
stos
cmpsb
aaa
scas
addb
stos
ljmp
jb
dec
fstps
mov
jmp
outsl
lahf
xor
repz
out
aam
roll
scas
dec
lods
shl
int
jecxz
loop
mov
mov
dec
imul
into
shll
sub
or
decl
or
or
negb
push
daa
out
movsb
insl
mull
pop
dec
xor
push
fnclex
insb
add
adc
mov
jns
pop
ljmp
mov
stc
sahf
cs
jmp
push
in
pop
lret
rcrl
movsl
pop
or
jno
icebp
int
fldenv
jmp
dec
sub
fmulp
sub
push
or
fwait
lahf
into
mov
arpl
in
xor
push
add
nop
pop
rcrl
lret
xchg
xor
add
stc
mov
adc
mov
stc
jmp
push
aam
jnp
lcall
aas
mov
dec
dec
inc
pop
loop
shl
xorb
push
repz
mov
fbld
popa
scas
and
dec
pushf
sbb
cltd
xchg
jne
jl
ja
add
xchg
aam
cs
inc
test
repnz
pop
outsb
jae
push
ja
cmp
mov
adc
lret
fxch
aad
mov
mov
pop
subl
call
push
ret
adc
pop
fistpl
jle
push
xor
fcomps
lods
lods
fistl
mov
adc
mov
pop
and
adc
pop
inc
sbb
stc
and
ret
sarl
adcl
jg
mov
jo
adc
inc
rcrb
lock
push
jge
mov
inc
jmp
idiv
adc
mov
lahf
test
inc
pop
mov
sbb
lods
cmpsb
nop
dec
shrl
mov
lods
enter
lods
xchg
stc
jae
mov
and
test
adc
mov
rcll
in
les
mov
loopne
inc
and
dec
in
sub
cmpsb
adc
ds
loope
setge
hlt
test
mov
mov
inc
in
cmp
loop
pop
lret
sbb
idivb
int3
cmp
cltd
shll
iret
incl
fcompl
repz
mov
movsl
inc
add
pop
inc
outsb
fdivp
ds
sbbl
inc
clc
outsb
je
mov
ja
sbb
fwait
push
scas
inc
arpl
sbb
in
mull
fs
decl
pop
int
dec
hlt
cltd
pop
movsb
lret
xor
push
jne
cmp
push
mov
push
sub
aam
sub
cltd
cmpb
mov
adc
fs
aad
push
pop
cmp
fwait
mov
gs
lea
xchg
test
pop
pop
mov
pop
loopne
mov
or
or
test
xchg
test
or
dec
insb
cmc
mov
push
xchg
adcl
cmp
ja
xor
andl
dec
dec
arpl
leave
popf
sub
pop
cld
nop
incl
popa
adc
add
add
inc
std
inc
jo
flds
jecxz
cli
shrl
jecxz
push
mov
mov
adc
ds
jb
xchg
daa
ds
jne
clc
je
in
aam
out
xor
push
test
push
adc
in
xor
jp
cmp
imul
push
lcall
inc
stos
shr
ffreep
insl
pop
jecxz
xor
jns
pop
out
hlt
popa
pushf
pushf
xchg
sub
mov
aam
mov
stos
jge
jb
repnz
cltd
push
scas
cli
mov
pushl
call
mov
push
xchg
loope
and
pop
push
push
add
ja
jo
outsl
ds
hlt
push
mov
call
adc
sbb
lcall
cmp
lret
cld
xor
jbe
out
int3
dec
mov
pop
stos
inc
mov
sbb
cmpsl
fcmovne
pop
mov
mov
inc
notl
pop
jle
shlb
addr16
push
cmpsl
out
xchg
outsl
cmp
push
out
push
in
aad
ficomps
lret
rorb
inc
scas
aaa
movsb
aam
ret
sub
push
or
dec
push
fwait
jnp
push
mov
pop
out
arpl
sub
test
scas
adc
xchg
lea
into
xchg
repnz
fidivl
jecxz
inc
repz
xor
ljmp
xor
js
xchg
out
gs
mov
pop
pop
ss
in
aad
push
and
cltd
in
adc
loop
arpl
sbb
push
lods
or
xor
dec
pop
add
sub
sub
mov
mov
inc
xchg
mov
stc
stos
push
fistpll
enter
in
je
jns
dec
xchg
fstp
repnz
sbb
pop
iret
cltd
out
sbb
shl
mov
xchg
mov
cmp
mov
cld
sub
cltd
inc
pop
stos
add
xchg
inc
mov
adc
jo
pop
popf
ltr
mov
mov
sahf
lock
iret
or
testb
mov
jb
push
nop
or
or
scas
sbb
gs
jae
cmpsb
jbe
cmpsl
jecxz
mov
bound
mov
dec
cld
ja
dec
loopne
stc
js
mov
sbb
cmp
inc
cwtl
lret
mov
mov
push
pop
cmpsl
sub
push
lcall
out
mov
out
and
ss
insl
dec
iret
pop
nop
mov
in
jmp
mov
dec
imul
cmp
mov
mov
inc
inc
rcll
sub
aaa
sbb
adc
lcall
das
out
xchg
popf
mov
mov
xor
pop
jg
into
add
sub
sub
add
pop
push
xchg
add
popa
pushf
pop
pop
outsl
adc
jp
and
sti
and
orb
xchg
jnp
orb
mov
fistpl
cmpsb
xchg
jge
mov
std
pop
push
dec
mov
jb
movl
lock
fisubrl
pushf
in
sub
nop
test
sbb
insl
or
popf
loope
icebp
leave
popa
add
pop
lock
cld
mov
push
arpl
enter
stos
mov
xchg
scas
or
out
mov
decl
or
xchg
ds
stos
add
sbb
and
shlb
inc
pushf
mov
rclb
mov
pushf
test
ja
imul
hlt
out
pop
sbb
and
xchg
sbb
loop
ljmp
fidivl
lock
dec
loope
lret
push
mov
das
add
cmpl
rorl
cmp
pop
jnp
fucom
outsb
adc
sarb
dec
jae
imul
jle
ds
or
dec
mov
sub
popa
fimuls
pop
fwait
mov
cmp
push
daa
push
pop
and
push
mov
rcrb
decb
scas
add
mov
push
rcrl
xlat
repnz
push
popf
or
mov
sbbb
scas
sbb
pop
pop
xor
add
aas
outsl
test
fstl
ret
jecxz
or
mov
test
push
xor
ss
jmp
adc
pop
mov
pop
sub
ja
adc
insb
rcll
fsubl
fbld
scas
dec
cltd
xchg
testw
adc
pop
and
movsb
cmp
inc
test
shlb
dec
xchg
push
test
jg
jl
iret
jne
xor
adc
fwait
lds
pop
scas
adc
mov
jp
pushf
jmp
int
mov
mov
inc
jmp
cmp
sarb
gs
mov
rolb
insb
mov
jb
pusha
aam
sub
lahf
jne
ja
sbbb
ja
inc
daa
stos
daa
shll
ret
scas
sub
divps
in
ja,pt
icebp
mov
pop
mov
stc
cld
aad
rcrl
jne
push
jl
ret
je
mov
jmp
adc
dec
enter
cld
fsub
pop
xchg
outsl
pop
push
iret
mov
xlat
mov
mov
mov
insl
xchg
aas
pop
data16
out
add
and
testb
jmp
or
into
outsb
cmp
imul
gs
cmp
pop
inc
inc
sub
pop
fdiv
sub
sub
dec
les
cmc
dec
sbb
int3
jle
rorl
or
jp
pop
mov
mov
lock
lds
jl
das
inc
outsl
jnp
fstpl
xchg
jge
dec
push
pop
and
or
cmc
std
vpmullw
movsl
lods
mov
test
jne
inc
dec
push
pop
and
or
cmc
std
vpmullw
movsl
lods
mov
test
jne
inc
int
pop
and
or
cmc
std
vpmullw
movsl
lods
mov
test
ja
inc
dec
push
pop
daa
sub
xchg
sbb
outsl
int
stos
shlb
push
push
scas
pop
inc
insb
jno
loope
fsubrl
or
push
and
icebp
fsub
mov
mov
inc
pop
jno
popa
or
sbb
sub
cmp
rcr
loope
icebp
loope,pt
popf
subl
arpl
fildll
cmp
push
xlat
mov
mov
cmp
pop
das
and
xor
es
pop
sub
and
and
insl
pusha
or
hlt
mov
dec
fcmovbe
push
insb
sub
adc
std
fdivl
arpl
cltd
icebp
icebp
xor
xor
push
pop
inc
and
inc
sbb
stos
into
pop
and
add
flds
pushf
xchg
dec
push
mov
fldcw
adc
imul
cs
in
les
jle
pop
push
repnz
inc
mov
in
xor
sub
les
cld
loope
ret
and
pop
cld
and
pop
mov
xchg
or
pop
fnsave
shll
test
dec
nop
mov
mov
and
insb
cmc
imul
push
add
and
pop
hlt
loope
test
lods
mov
iret
aas
add
inc
or
sbb
gs
cs
push
inc
mov
test
cmc
leave
lock
dec
adc
add
adc
js
jb
inc
pop
jns
into
mov
xchg
test
shr
mov
push
or
jl
je
sbb
sub
cmp
int3
rcr
shr
cld
loope
xchg
pushf
subl
jl
or
sbb
sub
cmp
int3
rcr
shr
cld
loope
xchg
pushf
subl
adc
and
adc
into
push
ret
cmp
out
in
sbb
sub
push
lret
pop
stos
cs
in
ss
sbb
icebp
cltd
push
pop
mov
dec
popf
xlat
xor
enter
jne
add
mov
fisubs
xchg
sub
shrb
cs
jmp
mov
icebp
sub
stc
pop
adcl
testl
test
cmp
shlb
cmp
imul
dec
mov
pop
cmp
fdivs
insb
repnz
lcall
push
sub
rol
sub
mov
rcll
push
popf
pop
ret
mov
adc
fisubrs
mov
aas
xor
dec
leave
or
inc
jno
adc
add
aam
cmpsl
cmp
sub
stc
dec
stos
pop
fs
mov
sub
push
aas
hlt
mov
mov
and
hlt
jae
int
das
sbb
or
mov
sti
push
cmp
inc
push
imul
ret
jle
inc
scas
repz
adc
dec
daa
dec
shl
je
lret
adc
adc
jbe
cli
iret
fs
loop
sub
cmpsl
scas
icebp
iret
fists
inc
ss
nop
movsb
mov
mov
lea
js
ja
cmpsl
mov
mov
std
mov
test
stc
mov
test
scas
and
addb
stos
data16
bound
jmp
lock
enter
in
and
cmp
in
es
addr16
inc
pop
push
mov
add
push
jl
or
adcl
or
out
inc
cli
aam
test
dec
neg
jo
das
mov
dec
pop
daa
sbb
insb
imul
xchg
das
clc
adc
and
mov
out
and
movsb
notl
jle
sub
js
inc
out
imul
test
dec
popf
push
shlb
pop
jle
push
enter
insl
test
cmp
cmc
test
js
in
inc
sub
insl
mov
aad
outsb
push
add
nop
aaa
loopne
push
pop
add
jo
add
or
sub
imul
stos
mov
imul
mov
pop
add
pop
push
dec
add
add
sub
andl
mov
pop
add
test
and
out
push
xchg
mov
mov
cld
xchg
mov
jns
iret
cmp
sbb
ljmp
cmp
mov
xor
jbe
mov
test
jg
insb
or
test
xor
fadd
shll
les
add
push
test
and
mov
daa
clc
xchg
dec
incl
mov
js
pushf
orb
bswap
ret
mov
das
pushf
xchg
int3
dec
rcrb
fsub
cmp
sbb
shll
out
sbb
fstpt
sahf
jmp
inc
fs
dec
mov
test
ljmp
xchg
xor
std
jo
lahf
cmp
jo
add
arpl
loop
scas
ljmp
cmp
mov
mov
jmp
mov
dec
icebp
and
in
cmp
ds
sbb
xchg
xchg
loope
push
sti
xchg
in
jne
test
sbb
push
ljmp
rorb
add
xor
mul
inc
and
mov
xchg
sbb
sti
in
mov
lahf
xchg
or
pop
ljmp
jmp
xchg
testl
outsl
inc
outsb
daa
cmp
sub
mov
sub
out
int3
in
and
enter
push
and
stc
xchg
ljmp
add
movsl
add
jns
mov
decl
xchg
rolb
mov
lds
les
jno
into
lret
push
jge
mov
inc
mov
movl
mov
or
mov
stos
fidivl
mov
ljmp
pop
xor
icebp
pop
pop
inc
cli
mov
lcall
lcall
hlt
mov
fmuls
sub
fmuls
lods
push
cltd
cld
loop
mov
pusha
xor
arpl
cmpsl
push
es
sub
jno
sub
out
mov
xor
arpl
aad
int3
mov
mov
dec
mov
or
fsubrl
das
scas
push
push
leave
lcall
dec
jne
loopw
or
pushf
push
lret
or
leave
or
cmovle
and
sbb
cwtl
fwait
cld
stc
mov
jle
out
sbb
mov
jb
into
mov
frstor
fmull
insl
fsts
adc
inc
sub
adc
mov
mov
loope
pop
push
push
push
pop
outsl
xchg
pop
popa
or
push
ss
cmpsb
add
add
and
mulb
adc
dec
cmp
gs
add
ljmp
adc
xorb
imul
mov
fisubs
mov
imul
dec
xlat
dec
inc
mov
xor
loopne,pt
loop
fnstcw
push
adc
repnz
nop
or
push
pop
mov
scas
lods
in
cmp
lds
pop
xorb
cltd
xchg
pop
mov
mov
inc
cmpsl
enter
ret
inc
iret
push
push
sahf
mov
mov
icebp
sti
dec
loope
add
out
mov
fidivrl
sub
cli
lds
xchg
sahf
jmp
pop
jl
imull
and
std
mov
fstps
sub
or
dec
xor
mov
pusha
xor
jle
and
and
xor
ja
jbe
fistps
add
or
cmc
fs
adc
icebp
dec
mov
add
movsb
aas
test
mov
mov
add
or
lahf
pop
in
sahf
pop
cs
dec
or
cmc
lea
data16
mov
pusha
movsb
cwtl
lods
cmpsb
popa
jns
sub
ret
outsl
jle
jne
sbb
cld
icebp
jbe
aam
pop
outsl
lds
push
inc
mov
outsb
sahf
fs
testl
sbb
pop
verr
sub
shrl
xor
dec
nop
fs
clc
mov
jge
cwtl
xchg
mov
fistpll
pusha
lret
push
xor
sub
pusha
lret
pop
jnp
call
ljmp
cmp
repnz
xchg
or
daa
pop
push
iret
dec
std
cmp
popa
cwtl
push
mov
je
ja
lret
add
in
fbstp
or
pop
push
push
cmp
or
arpl
push
iret
ss
je
pop
mov
cs
inc
les
sbb
outsb
test
in
mov
jl
cs
xchg
stos
mov
pop
bound
xor
lcall
fstpl
pop
shlb
pop
inc
nop
pop
jno
je
notb
test
jnp
stc
sbb
lods
sbb
push
stos
loope
and
dec
pop
rcrb
xor
push
ss
loopne
aam
out
inc
std
pop
or
fimull
add
fidivs
add
mov
adc
pop
out
xor
aam
movsl
rcrl
scas
call
rclb
inc
inc
jge
pop
mov
mov
cmpsl
push
cmp
mov
pop
push
movsb
adc
out
dec
dec
lea
xor
pop
insl
add
sub
push
and
adc
and
pop
xor
out
rol
mov
jge
loopne
xchg
sahf
pop
sarl
mov
xor
out
cwtl
orl
lock
sub
mov
push
daa
push
cmpsl
xor
jo
mov
or
into
leave
mov
xchg
and
sub
xor
jmp
ficoml
popa
xchg
mov
mov
lret
movsb
fists
out
and
outsl
xchg
out
std
clc
hlt
lret
mov
je
ja
xor
cmpsl
add
pop
loope
ret
push
dec
or
jne
cmpsl
out
xchg
sbb
sub
fistl
test
mov
jge
std
pop
pop
add
dec
fsts
shlb
cmp
sbb
aas
push
sbb
jmp
adc
out
addl
lods
xor
jbe
pop
pop
dec
mov
push
rcll
xchg
sub
andb
das
and
adc
sahf
xchg
in
push
rclb
sbb
fistl
sbb
sbb
sbb
in
repnz
push
in
mov
ret
xchg
push
mov
jne
mov
dec
push
aas
fxch
jno
push
jecxz
sub
mov
xor
xchg
stc
sub
mov
imul
lret
inc
inc
dec
rorl
mov
shl
adc
cmc
jno
leave
and
addr16
jne,pt
mov
movsl
xchg
and
xchg
cmpsb
or
and
or
sbb
sbb
imul
movsl
mov
aas
call
shlb
movsb
lock
lahf
fldt
and
dec
inc
mov
subl
cmpsb
adc
xor
out
push
daa
popa
inc
lret
enter
outsb
in
sbb
mov
sub
cmp
xchg
push
aam
pop
mov
mov
je
mov
or
xor
mov
dec
test
popa
inc
sub
insb
adc
push
jecxz
aaa
mov
push
inc
mov
shlb
mov
xorl
lea
pushl
or
pop
aaa
lahf
adc
outsl
jle
js
or
in
lret
hlt
jnp
jmp
insl
gs
imul
addr16
in
aas
repz
insb
mov
xchg
lock
clc
in
xchg
pop
or
add
pushf
cmp
jmp
imul
filds
xor
mov
add
pop
add
xchg
dec
mov
imul
sub
psrld
cmp
jnp
mov
sbb
jle
test
xor
push
fimuls
jecxz
iret
dec
popa
scas
and
cmp
pop
test
adc
in
lock
les
jge
jno
xchg
adcl
mov
sbb
cmp
psraw
jns
sub
inc
mov
xchg
addb
aas
mov
cmc
stos
inc
rcrl
fnstsw
loop
mov
mov
movsl
mov
xor
rolb
lret
dec
popf
xchg
mov
ja
and
and
adc
pop
cltd
imul
imul
push
add
sub
cmp
popf
shll
lahf
fistps
add
add
push
notb
push
or
stos
mov
xor
mov
pop
sbb
test
movsb
sub
add
mov
out
test
nop
pop
sbb
xlat
and
jnp
and
js
pop
adc
push
stos
shll
fdivl
pop
fstpt
inc
imul
lds
pop
out
adc
mov
dec
repz
mov
ja,pn
fildll
sbb
ljmp
push
or
repnz
bound
cltd
ss
sbb
lret
mov
push
push
xchg
testb
lcall
lret
sub
hlt
xchg
push
push
es
ret
out
sahf
jg
cmpsl
jg
das
push
mov
lods
test
mov
shr
cmp
dec
push
test
fs
jp
push
push
xlat
jmp
xchg
adc
scas
mov
mov
push
push
repnz
mov
jle
ret
pop
mov
pop
outsl
sbb
mov
mov
cli
add
push
adc
cmc
xchg
test
test
sbb
sarl
cwtl
daa
in
add
cmp
mov
lds
icebp
ss
fistps
lret
roll
mov
fistps
cmp
xchg
stos
adc
mov
loop
mov
lods
adc
dec
cmpsl
sbb
sbb
push
imul
lret
out
repz
jb
dec
fsts
popa
pusha
stos
pop
pop
push
out
adc
lock
sbb
test
and
inc
pop
sub
add
loopne
outsl
pop
dec
in
repnz
movsl
lea
js
mov
push
negl
add
lods
push
shl
addr16
loop
fwait
mov
cltd
call
mov
mov
sub
push
fwait
leave
pop
mov
mov
cmpsl
cmp
xchg
dec
mov
scas
dec
loop
xchg
pop
inc
mov
out
cmp
mov
shlb
mov
std
movsb
xlat
int3
add
xchg
jo
dec
roll
push
xor
pop
dec
sbb
mov
cmpsl
xor
dec
jecxz
pop
mov
imul
in
dec
sbb
test
mov
icebp
mov
inc
sub
add
movsl
sbb
lds
cwtl
das
aam
dec
mov
bnd
mov
pop
jbe
in
dec
fisttpl
jae
jge
loopne
jmp
hlt
test
mov
lods
loopne
jae
lods
adc
dec
cmp
adc
xorl
add
ss
pop
mov
movsb
mov
push
rolb
in
das
jnp
mov
add
cmp
iret
iret
sbb
pop
jns
cmpsb
cld
xchg
xor
and
scas
jno
imul
cld
jb
bswap
pushf
neg
insl
js
xchg
in
sti
pop
mov
xor
jle
or
fwait
cmp
lret
into
lds
or
dec
dec
adc
pop
or
cmp
aad
mov
lds
orl
mov
mov
jns
aam
imul
or
sbb
es
pop
ljmp
mov
out
repnz
xor
dec
sbb
sub
mov
xchg
xchg
mov
jecxz
xchg
fsubp
or
sub
push
or
insl
fildll
fisttps
mov
pop
and
cs
add
jns
cltd
loope
dec
stc
mov
int3
jno
pop
inc
movsl
insb
push
in
jmp
in
pop
aam
dec
notl
scas
ds
add
clc
aaa
ret
cmp
xor
lret
mov
xchg
fistl
bound
sub
bound
jne
push
cld
mov
push
xor
stos
and
dec
out
movsl
dec
mov
stc
pop
aam
insb
lds
xchg
lods
aad
add
xchg
pop
dec
push
js
hlt
je
xchg
mov
out
cmp
dec
xor
dec
adc
insl
add
mov
in
out
movl
or
hlt
sub
fdivl
sub
lods
sbb
lahf
stos
lea
jg
js
push
repnz
sub
fwait
add
xor
lods
mov
outsl
fdivrl
mov
js
inc
push
xlat
fnstcw
les
inc
mov
push
sbb
mov
lcall
and
insl
push
or
notl
adc
std
notb
add
sbb
or
movsb
mov
or
or
decb
xchg
adc
pushl
stc
sti
pop
pop
inc
imul
inc
jbe
push
inc
out
or
push
pop
out
loopne
jne
lods
sbbb
jg
jnp
pop
dec
iret
inc
daa
mov
sbb
ret
dec
sarl
aaa
lds
hlt
stos
adcb
sahf
orb
sti
and
andb
sub
xor
mov
inc
scas
lahf
cmp
sbb
js
int
xor
push
js
jae
aad
xor
jecxz
into
in
lds
sub
lret
mulb
jle
push
or
out
roll
mov
lahf
movsb
call
pop
mov
push
xor
xchg
xchg
push
xchg
in
dec
pop
in
sbb
add
lods
enter
sub
xchg
shlb
add
std
push
dec
test
dec
sbb
push
fcoml
cli
scas
and
and
cmp
jne
shl
add
sti
clc
sbb
inc
pop
in
xchg
push
push
call
adc
inc
add
rdmsr
pop
movsb
call
add
sbb
push
insl
jmp
stos
stc
dec
adc
adc
jno
lock
mov
inc
daa
inc
repnz
push
insl
sbb
insb
jmp
addr16
cmp
test
ss
push
add
push
mov
lds
mov
or
cmp
jecxz
push
lods
test
das
rorb
lret
iret
cmp
mov
sub
add
adc
or
mov
das
incb
pop
or
dec
push
gs
out
mov
sbb
push
cmp
orb
xor
jb
in
ss
cmc
popf
adc
sbb
std
sub
add
inc
fstpt
cmp
mov
mov
lds
loop
ss
mov
dec
popa
jns
xor
mov
sub
and
pop
out
sbb
jl
jecxz
cmp
nop
icebp
sahf
xor
arpl
sub
rclb
jo
mov
mov
inc
mov
stc
xchg
xchg
out
xchg
push
xchg
cld
xchg
mov
dec
sbbl
xchg
xchg
lahf
xchg
mov
push
push
add
mov
cld
mov
push
inc
into
imul
lcall
bound
fs
or
imul
jp
push
gs
arpl
repz
lock
dec
push
cwtl
cmpb
repz
sub
fwait
adcb
jnp
adcb
and
test
lret
call
rorl
cmp
arpl
push
adc
ret
test
dec
clc
or
pop
dec
sbb
or
pop
push
jae
cs
inc
imul
jl
sar
mov
adc
mov
dec
scas
test
and
outsb
sbbl
jno
lock
cmp
pop
cmp
inc
add
cmp
stos
or
subl
aaa
out
pop
mov
pop
mov
adc
out
mov
inc
iret
inc
sbb
cwtl
lea
fmuls
ficoms
hlt
add
pop
adc
push
push
sbb
or
lods
insl
mov
mov
add
pop
xor
sub
int3
insl
into
jb
or
dec
or
scas
filds
mov
xchg
cli
fldt
test
sub
fcoml
in
xchg
ds
and
cmpsl
add
lds
pop
add
jge
jb
sbb
adc
mov
or
mov
or
add
in
daa
stos
mov
daa
dec
in
aam
in
fiaddl
int3
and
iret
js
sub
mov
mov
pop
cmp
lret
js
rorl
fisubrs
jecxz,pt
ljmp
sub
push
pushf
in
sub
dec
pop
testb
scas
fists
mov
scas
dec
icebp
into
sub
arpl
mov
bound
lods
mov
jge
jmp
into
adc
rcl
xor
sub
mov
or
mov
les
ss
pushl
imull
dec
adcl
pop
jmp
js
ret
stos
pop
pusha
jmp
in
sub
jecxz
movsb
mov
add
mov
add
adc
or
aas
mov
cld
sbb
pop
dec
xlat
es
pop
jb
fprem1
cmp
stc
enter
mov
out
or
add
aad
mov
inc
outsb
or
sti
cmpxchg
movsb
repnz
or
outsb
mov
repz
inc
add
mov
xchg
aam
sub
push
pusha
je
mov
mov
xor
xchg
pop
jmp
mov
stos
inc
jp
fwait
jle
in
aad
fwait
cmp
xlat
cmp
mov
jg
out
pop
jb
popa
mov
xorb
mov
into
out
jp
pusha
loopne
sub
mov
outsl
mov
data16
les
mov
lds
adc
push
dec
and
cmpsb
inc
lret
enter
xor
inc
dec
insb
mov
cmc
xor
xchg
pop
jle
xchg
fdivrs
fstl
sbb
pop
mov
mov
cmp
les
pop
adc
sub
dec
in
add
insl
subl
lock
movsl
mov
stc
dec
mov
mov
and
js
scas
rolb
scas
movsb
ficoml
pop
cmpsl
addr16
cmp
dec
push
jle
inc
das
jb
adc
rorb
adc
xchg
mov
out
inc
jb
mov
and
aas
jmp
call
icebp
add
repz
cs
inc
xor
jge
jle
movsl
dec
sbb
test
mov
aaa
subl
mov
in
mov
int3
imul
lods
cmc
aas
lcall
pop
xlat
mov
jp
adc
add
sub
jns
in
into
mov
xor
xchg
cli
cltd
movsb
repz
jae
mov
ret
cmp
int
test
int3
fisttpl
rolb
aad
xor
xor
xchg
stc
das
in
out
out
jp
or
jg
outsl
fstps
cmpsl
push
mov
mov
test
nop
pushf
shlb
and
dec
sbbb
lahf
movsl
scas
add
pop
mov
jle
xchg
loope
lods
push
inc
fmull
aad
adc
stc
movsb
loop
fstpl
pusha
sbb
sbb
sub
cmp
int3
rcr
shr
cld
loope
xchg
pushf
subl
jl
or
sbb
sub
cmp
int3
rcr
shr
cld
loope
xchg
pushf
subl
jl
or
sbb
sub
cmp
int3
or
shr
cld
loope
xchg
cwtl
subl
jl
or
sbb
lods
mov
and
and
icebp
cld
xchg
sti
sbb
push
dec
inc
pop
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jle
incb
jno
popa
adc
sahf
outsl
in
jle
and
jle
dec
loope
jecxz
xchg
aas
sbbl
push
incb
jno
popa
scas
adc
and
jle
das
rcrl
cs
push
mov
mov
into
imul
sbb
xor
das
test
loope
rclb
cs
mov
addb
fdivs
lods
loopne
pop
jge
inc
cmc
movzwl
jp
mov
mov
stc
lahf
popf
scas
lcall
sbb
sub
loope
loope
adc
aam
mov
in
imul
add
add
push
add
dec
mov
orl
jno
push
scas
xor
fidivrs
mov
push
into
ret
push
cmp
adc
mov
inc
xor
and
pop
or
push
mov
loope
stc
push
or
mov
pop
push
pop
mov
dec
sub
jbe
pop
lods
xchg
shrb
icebp
pop
ret
cmovle
mov
push
push
into
popa
fidivrs
adc
cmp
jle
dec
call
ds
push
mov
lds
jo
pusha
in
inc
fldt
pop
sti
dec
push
mov
cmp
arpl
mov
fs
fidivl
mov
dec
cmp
adc
gs
out
pop
fldl
les
adc
adc
jge
add
sarl
dec
icebp
pop
loope
xchg
orl
push
incb
jno
popa
scas
adc
and
jle
dec
icebp
pop
loope
xchg
orl
push
sti
movb
jb
sub
aaa
aaa
aad
imul
inc
mov
int3
lahf
adc
pop
aam
mov
in
cmp
nop
pop
xchg
in
dec
cld
out
popf
loop
lcall
rorl
arpl
cmp
mov
mov
or
or
sub
jb
xor
jg
dec
fcom
lock
xchg
sarb
cmp
js
iret
pop
mov
push
push
inc
popa
int3
lea
mov
push
int
shrl
jecxz
sti
mov
andl
stos
aas
lods
ret
lcall
roll
push
add
popa
loopnew
cmpsl
inc
xchg
cmp
xchg
jp
stc
push
repz
xchg
pop
xchg
add
repz
mov
data16
add
and
pushf
ljmp
push
jl
imul
fsubl
call
mov
fwait
aaa
push
popf
add
addr16
lcall
sbb
arpl
iret
aaa
fs
ljmp
cmp
loope
mov
or
inc
pop
dec
pop
roll
mov
push
push
repnz
push
lret
jae
push
inc
mov
sub
and
pop
lret
out
scas
mov
divb
push
xlat
sub
movb
dec
outsl
adc
sub
scas
cmc
pop
pop
sub
mov
aas
dec
insl
mov
subb
mov
or
cmpsl
shrl
jecxz
sbb
mov
xlat
push
pop
dec
mov
pop
lods
in
cmp
dec
push
xrelease
lods
xor
aad
jecxz
cmpsb
mov
outsl
scas
mov
scas
adc
or
push
mov
ret
cld
sbb
adc
aam
lods
ficoms
mov
mov
jno
out
push
or
into
jle
bound
ficomps
inc
or
arpl
add
icebp
stos
mov
pop
xchg
push
add
pop
and
or
add
xor
mov
divl
xlat
xor
icebp
xchg
out
pop
aam
xchg
loope
les
xchg
ljmp
mov
repnz
or
pop
mov
xor
clc
mov
push
add
adc
adc
loopne
ss
jae
out
imul
mov
enter
hlt
cmovl
xor
and
pop
push
icebp
lods
rclb
fimuls
push
push
mov
je
pop
mov
xor
mov
fwait
jae
push
push
scas
xorl
and
movsb
pop
kandnb
and
or
and
xor
leave
inc
pushf
xchg
dec
loop
out
enter
sub
std
or
jge
shll
mov
and
mov
fimuls
or
add
cmp
jb
push
pusha
pop
aam
adc
aas
adc
mov
pop
es
xchg
data16
mov
add
jne
dec
pop
stc
cwtl
jge
xchg
fidivrl
fistl
orl
test
inc
sbb
pusha
jne
push
jmp
push
out
and
push
insb
mov
xlat
mov
pop
push
cltd
int3
cmp
loope
and
xor
add
repz
cmp
ja
cmp
call
insb
add
push
dec
sbb
pushf
scas
or
xchg
add
jns
outsl
cli
cmc
jo
fistpll
jmp
movsb
ss
insb
mov
lock
flds
popa
ss
or
mov
jae
std
adc
rclb
jo,pt
iret
lret
ja
jnp
daa
add
test
sbb
clc
js
or
xor
idivb
scas
inc
popa
cmp
shlb
jmp
icebp
cltd
or
lcall
dec
rcrb
int
dec
push
xlat
push
je
mov
int
in
mov
sub
push
cmp
test
ja
outsl
std
aaa
jmp
push
mov
push
mov
and
notb
pop
sub
fstl
mov
xchg
add
imull
xchg
sbb
scas
div
fisubs
mov
sub
xlat
push
pop
sub
fbld
sbb
pop
stos
hlt
fmull
adc
inc
fcoml
pop
adc
int
add
inc
jno
cld
xlat
pop
fcmovnbe
hlt
cmp
mov
cs
mov
aam
add
cmp
mov
lcall
cmp
jp
fsubr
inc
loope
ds
arpl
pop
xchg
mov
add
mov
fisubrs
jae
cmpsl
dec
icebp
pushf
mov
add
push
xchg
or
outsb
out
orl
jge
shlb
push
push
imul
fisttps
pop
add
or
andl
fldenv
cmpsl
dec
imul
push
add
fs
sahf
add
jg
jp
jecxz
or
jno
loope
flds
addb
fstpt
rorb
out
movsb
inc
xchg
push
push
into
xor
add
mov
popl
je
and
xchg
xor
xchg
adc
mov
les
mov
stos
aam
out
pop
mov
mov
mov
push
pop
jne
repz
mov
lods
imul
addr16
ljmp
push
data16
pop
cmp
sbb
cmp
xchg
push
sarl
xor
stos
sub
cmp
mov
cwtl
lcall
stc
lcall
pop
clc
pop
fs
sub
jp
push
out
push
fldt
xchg
clc
pop
mov
fwait
sarl
in
shr
popa
push
xchg
loop
push
cwtl
insl
sbb
loop
lret
pushf
mov
int3
jno
and
xor
loopne
mov
fistpll
push
cmp
or
in
mov
xor
jp
loope,pn
mov
call
int3
mov
sub
fs
stc
mov
sub
pop
rclb
push
leave
inc
push
in
sbb
call
iret
or
ss
xchg
fildll
ds
stc
call
nop
outsb
movsb
lock
mov
cmc
hlt
pop
fldenv
cli
push
push
insb
sahf
sbb
mov
push
push
mov
mov
xor
daa
fwait
jp
jbe
push
je
sbb
cmp
cmp
ja
aaa
fs
jnp
jge
jge
loopne
add
ljmp
cld
and
fstps
mov
and
mov
cmc
cmp
sub
cmpsb
adc
mov
test
push
adc
ljmp
inc
out
leave
popf
mov
call
iret
mov
out
inc
dec
outsb
sbb
pop
jecxz
xor
movsb
loope
stos
fstpl
mov
addb
pop
add
aas
je
add
push
lret
xchg
sub
das
mov
loopne
lock
inc
shll
cmp
pop
jle
fstpl
or
and
mov
fs
cmp
jg
fistps
repnz
adc
scas
sahf
ds
xchg
cs
cmp
jbe
and
sbb
sub
bound
pop
mov
jbe
sub
flds
cmp
test
scas
and
jg
movsl
adc
lahf
bound
outsb
cld
cmpsb
or
and
mov
inc
adcb
and
test
xchg
push
cmp
cmpsb
lock
leave
mov
out
xchg
sub
add
add
lret
out
inc
cld
xchg
insb
add
or
lock
sub
cmpl
cs
pop
xchg
pop
movsb
dec
dec
mov
cli
imul
pop
adc
jae
shrd
or
fisubrs
sub
jae
lret
mov
jmp
jo
xchg
dec
mov
sbb
out
imul
hlt
jecxz
clc
out
push
pop
vcomisd
popf
push
jbe
and
insl
outsl
icebp
cmp
int3
xor
cmc
sbb
mov
inc
xchg
pop
xor
sbb
dec
adc
xchg
pop
sub
mov
scas
inc
andb
inc
scas
and
mov
repz
jne
sub
loope
les
jmp
xor
fidivl
sub
or
mov
out
or
pop
dec
mov
hlt
incl
out
icebp
ds
dec
leave
outsb
add
add
lock
test
aaa
loop
fs
adc
aaa
add
xor
push
rcrb
test
dec
dec
loopne
je
hlt
pop
or
push
shrl
call
out
pop
mov
jl
sbb
outsb
jmp
xchg
int3
bound
adc
push
sahf
popf
int3
cmova
mov
cmp
dec
arpl
outsb
repz
jo
dec
xchg
jmp
lods
xor
in
add
bound
shr
in
pop
jne
ret
inc
dec
vpandn
aas
mov
jle
stos
les
xor
int3
mov
adc
ds
dec
dec
lea
movsb
insl
xchg
or
add
fsubl
fmull
and
inc
add
pop
inc
sbb
lds
sar
sbb
aaa
jle
jnp
add
das
mov
mov
lods
pop
push
imul
inc
jns
daa
mov
insb
jne
cwtl
scas
scas
jo
lea
push
inc
cmp
inc
mov
or
addr16
mov
jbe
cltd
and
inc
lods
add
sbb
sbb
repz
out
push
cmpsb
popa
sbb
dec
testl
or
mov
lock
pop
lret
test
xorl
mov
and
push
cmp
pop
in
stos
sarb
pop
fsubl
jg
fidivrl
psubsb
pop
jo,pn
or
cmpsb
or
push
jecxz
mov
aaa
bound
push
inc
orl
lret
and
mov
cli
sbb
add
int
scas
mov
and
pop
lahf
xchg
les
sub
repnz
in
les
cmp
js
cmp
fcoms
sub
cs
loope
scas
ret
insb
andl
push
add
js
pop
cmc
inc
addr16
fidivrs
jle
aas
cmp
mov
cmpsl
clc
xor
pop
ja
lea
xlat
hlt
shll
cmp
push
mov
adc
fs
sbb
lea
mov
jmp
sub
pop
xor
pop
sarl
loopne
mov
xchg
add
push
pop
dec
jb
test
xor
mov
cmp
jge
mov
push
inc
popa
cmp
or
lock
fwait
ret
std
adc
ss
rclb
cmp
icebp
jg
mov
out
jecxz
cld
fldl
aad
cmp
add
call
xor
cmp
out
mov
jecxz
and
pop
shrb
lret
jbe
jmp
and
jle
or
adc
out
dec
jmp
lret
aas
inc
stos
rep
fdivrs
mov
bound
and
or
push
or
sahf
movsl
push
ret
cmpsb
mov
mov
insl
xchg
xor
fsts
popa
rcr
loop
movsb
aas
cmp
hlt
adc
or
sbb
cld
cs
sbb
mov
pop
test
pop
test
cmp
pop
jge
fldcw
dec
cmp
in
scas
test
jno
addb
out
iret
dec
imul
mov
jne
and
fwait
xchg
push
push
je
sbb
ljmp
mov
mov
cltd
subb
mov
mov
pop
hlt
inc
cmp
shrl
jmp
out
mov
test
push
mov
cli
enter
rolb
sub
lcall
jmp
adc
add
repz
and
xchg
das
mov
shl
pop
or
pusha
dec
push
shll
jg
xorb
mov
movsb
stos
inc
mov
cmp
pop
xor
add
pusha
xchg
xchg
popf
push
jecxz
out
sti
pop
adc
adc
add
shll
rcrl
inc
mov
inc
adc
arpl
addr16
push
pop
sub
sti
insb
mov
imul
fcoml
or
and
es
stos
add
jo
shlb
scas
xchg
jnp
sti
inc
iret
filds
ret
dec
mov
iret
add
and
cmc
sbb
sbb
xchg
clc
ret
pusha
test
fwait
mov
adc
adc
xor
inc
andb
or
outsl
push
or
int
dec
xlat
je
xor
fstpl
pop
mov
jmp
cld
xor
adc
pop
cmp
jns
mov
rcrl
inc
jno
outsb
xor
scas
idivb
or
jo
and
nop
scas
cmp
loope
sbb
sbb
loopne
testl
add
push
fwait
pop
mov
int3
mov
pop
andb
decb
pushw
cmp
mov
and
lods
dec
and
dec
aam
xchg
cmc
je
mov
and
xchg
andl
mov
dec
or
pop
mov
lods
and
insb
les
call
mov
sbb
add
outsl
test
add
xchg
js
cmp
dec
jp
fs
test
pop
xchg
or
rcll
pop
and
push
push
es
pop
aaa
jp
jo
bound
stc
push
and
dec
push
ret
mov
jp
push
subb
orb
jmp
jl
shrb
inc
sahf
dec
sbb
fistpll
lea
push
mov
fwait
inc
add
mov
fxch
rorl
lret
and
mov
je
cmp
imul
mov
ljmp
adc
jg
bound
pop
test
sbb
sti
lcall
or
into
fwait
add
xchg
dec
rclb
or
inc
dec
mov
adcl
adcl
xchg
pop
leave
lret
scas
sbb
xchg
test
xor
imul
mov
mov
ss
sbb
push
popf
int3
cmp
in
mov
jne
sbb
sahf
adc
lods
mov
pop
aas
push
sbb
adc
shll
or
jmp
push
mov
mov
out
stc
fnstcw
fs
and
push
fdivl
and
mov
movq
popf
mov
xchg
mov
lods
pop
push
stos
xchg
mov
rcr
jmp
pop
inc
cld
cmp
pop
popf
cli
mov
inc
xchg
dec
cwtl
les
dec
cmpsb
subl
pop
sahf
into
in
js
mov
jmp
lods
arpl
mov
fisubrl
mov
mov
les
shl
call
add
cmc
xlat
inc
scas
mov
pop
aad
sbb
clc
sarl
out
stc
outsb
cmp
iret
cltd
fisttpl
jl
xchg
mov
mov
cmpsb
xchg
sarl
mov
jle
jmp
mov
jne
xor
popa
outsl
es
test
decb
or
mov
shll
rcll
xchg
adc
lods
mov
iret
int3
insl
mov
pop
fs
sub
out
inc
or
mov
mov
pop
sub
scas
das
fidivs
pop
jmp
pop
outsb
adc
das
xchg
jbe
scas
jecxz
add
fldt
scas
imul
and
daa
mov
arpl
cli
mov
ljmp
pop
shl
cmp
sub
inc
pushf
loop
push
sti
std
add
mov
pop
fwait
leave
ds
or
arpl
jae
mov
scas
cmp
cs
fnstcw
stos
das
push
mov
xorb
in
test
xchg
xor
pop
lods
add
mov
xchg
cmp
adc
dec
fcoml
das
movsb
push
jno
leave
push
or
clc
das
and
cmpsb
jmp
inc
clc
cmp
incb
cli
mov
outsl
mov
loope
pop
out
jl
cmp
cwtl
mov
mov
push
dec
xchg
rcrl
ficomps
inc
mov
pop
dec
inc
jg
stc
nop
insb
stc
sub
popf
repz
mov
mov
jo
adc
inc
pusha
filds
push
popf
fst
pusha
icebp
mov
adc
in
add
test
push
or
inc
sbb
ss
push
fsubs
rcrb
pop
pusha
and
popf
sub
cli
icebp
add
out
inc
mov
cmp
and
xchg
jmp
pop
mov
mov
mov
sbb
pop
xor
or
ljmp
dec
arpl
cli
clc
pop
xor
xchg
or
test
add
push
dec
aam
pop
pop
popf
aaa
es
popf
ficoms
clc
push
jnp
iret
sbb
jo
pop
mov
pop
mov
mov
jb
dec
pushf
loope
push
stos
icebp
push
push
std
sbb
mov
lds
cmp
adc
jns
fidivrl
sbb
out
loope
movsl
sbb
and
or
call
in
int3
pushf
pop
test
int3
mov
push
mov
mov
lods
mov
xchg
lcall
add
mov
inc
or
sbb
je
inc
cmp
pop
jmp
mov
sbb
ret
and
xchg
push
mov
or
fldl
icebp
rcrb
popa
jb
mov
sub
rolb
push
and
sbb
cmp
xchg
mov
imul
js
call
insl
lret
add
xor
pop
sarl
sahf
out
adc
add
mov
push
and
les
fstpt
pop
lods
xchg
mov
in
pop
ja
outsl
jmp
stos
mov
inc
subb
pop
xchg
call
jecxz
mov
add
lcall
leave
add
adc
cmp
inc
ss
jns
fisttpl
jns
dec
inc
pop
outsb
push
in
lcall
je
andl
sub
jle
sbb
mov
orb
mov
mov
fwait
scas
xchg
arpl
pop
add
cmc
gs
cmp
daa
sub
inc
fisubl
xor
sbb
lahf
adcl
out
push
dec
push
cmpsb
sbb
idivl
shr
mov
out
pop
movsb
push
outsb
out
and
jnp
add
jge
push
pop
iret
jnp
adc
cmpsl
cwtl
xchg
xchg
fcmovnb
shrb
add
inc
stos
rcr
pop
xor
in
adc
nop
clc
and
into
pop
pop
cmp
std
lds
movsb
cmp
or
add
xchg
inc
testb
jnp
sbb
pushf
pusha
ret
jb
push
mov
add
fistps
xchg
int
ja
dec
and
xlat
pop
cmp
nop
mov
enter
or
sbb
cld
fsub
fmul
mov
push
gs
adc
scas
sub
dec
cltd
cmp
adc
rcll
fucomip
les
push
insb
lock
int
and
cmp
stos
push
pop
lds
enter
imul
jno
test
leave
aaa
sub
xchg
or
fnsave
aas
ja
mov
bound
cmp
mov
insb
fwait
mov
jne
ljmp
fidivs
leave
arpl
adc
push
sub
dec
mov
mov
pop
mov
add
xchg
jp
dec
add
xor
shrl
mov
adc
movsl
add
fsubl
cltd
jnp
adc
loope
ljmp
inc
std
addr16
ljmp
fucomp
movsb
pop
cltd
iret
inc
addl
pop
push
test
add
mov
push
inc
mov
jp
push
or
cld
in
jnp
iret
cmpb
decb
jns
adc
iret
out
scas
xchg
loope
movsb
mov
stos
add
outsl
mov
iret
and
imul
pop
mov
ficomps
add
enter
push
enter
mov
or
lods
out
dec
in
test
sbb
mov
push
aam
jnp
scas
cmp
xor
inc
mov
and
sbb
stc
mov
add
lods
pop
lcall
daa
scas
out
lret
xchg
es
xor
mov
dec
push
nop
or
xlat
std
push
dec
lret
xor
das
and
sub
fisttpl
test
xchg
pop
push
mov
pop
aad
std
xor
fistps
test
xor
mov
mov
mov
push
iret
or
inc
popf
and
jbe
cmp
xchg
ficoms
inc
out
cmpsb
rol
mov
mov
cmp
xchg
cmc
mov
outsb
mov
cmp
rorl
pop
test
sbb
pop
in
shlb
iret
pop
sbb
pusha
push
jle
lret
push
add
shll
sbb
fcomp
roll
aad
fisubs
adc
and
jle
dec
icebp
pop
loope
xchg
orl
push
incb
jno
popa
scas
adc
and
jle
dec
icebp
pop
loope
xchg
orl
push
incb
jno
popa
scas
adc
and
jle
dec
icebp
pop
loopne
xchg
orl
push
incl
jno
popa
scas
adc
and
jle
in
pop
xchg
pop
sbb
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
out
nop
or
xorl
mov
mov
lsl
and
push
jae
inc
je
fs
xchg
mov
xorl
ret
hlt
ror
jae
xor
jp
inc
inc
je
fs
xor
cs
shl
in
mov
sub
and
daa
gs
jb
inc
pop
das
and
and
loop
xchg
in
push
ja
and
or
cwtl
iret
mov
mov
scas
xchg
in
mov
rorl
or
cmpsl
jmp
clc
cld
lret
clc
je
inc
loop
ret
sub
cld
mov
push
imul
cmp
arpl
in
ficompl
or
out
lret
test
mov
movsb
loop
or
ret
imul
lret
in
and
push
mov
jl
push
pop
sbb
jo
xchg
arpl
aam
aam
jae,pt
adc
es
jl
ss
fwait
or
inc
test
in
inc
lret
push
add
adc
cmp
add
cwtl
inc
push
nop
sbb
movsb
jecxz
mov
ret
hlt
imul
mov
sbb
push
aaa
push
rcll
enter
test
inc
push
jb
push
xchg
jb
or
sbb
or
pop
enter
xchg
scas
popf
mov
jno
data16
adc
push
inc
adc
pop
shl
andb
enter
in
adc
add
xor
and
push
jae
inc
je
mov
mov
movsb
jecxz
repz
in
adc
add
xor
and
push
jae
inc
je
mov
leave
int3
dec
scas
mov
daa
out
dec
xchg
mov
xor
aas
shll
jnp
sub
jmp
mov
inc
mov
outsb
stos
mov
out
out
stc
fidivs
jge
in
mull
push
decb
xor
je
clc
test
mov
xchg
ret
mov
lahf
jae
or
pop
push
jg
imul
cmp
jnp
fwait
cmp
scas
imul
sti
xchg
ret
inc
xor
add
enter
dec
xchg
add
cmp
dec
orl
inc
sub
mov
or
test
test
dec
jns
mov
pop
jmp
or
mov
adcl
xchg
jno
sahf
push
push
cwtl
daa
hlt
and
arpl
stc
jmp
cltd
cmp
mov
sbb
xchg
sbb
sbb
test
in
mov
jnp
mov
pop
dec
cmp
pop
sub
push
cmp
pop
pop
pop
xlat
imul
or
adc
jge
xor
jno
mov
aad
adc
lea
pusha
out
push
ds
push
scas
jp
mov
xlat
xor
pop
ret
pop
stos
ja
pop
xchg
movl
or
xor
lahf
outsb
xlat
cmpsl
movsl
fisubl
push
add
adcl
out
aaa
jge
jo
dec
xor
aad
addr16
jae
mov
jnp
mov
sahf
jmp
add
jne
fistps
mov
or
pop
cmpsb
mov
into
testb
mov
mov
scas
add
sbb
inc
mov
jg
xor
sub
cs
enter
into
stos
cmp
inc
jle
adc
bound
cmpsl
vmwrite
cmc
dec
lret
cmc
aaa
jnp
and
fst
test
pop
shlb
xor
popa
jnp
pop
test
push
and
add
int3
roll
dec
mov
mov
in
cltd
add
rorb
popa
into
bound
outsb
loope
test
repz
clc
add
or
and
out
lock
jmp
idiv
add
xchg
mov
sarl
or
inc
jle
xor
sbb
mov
out
xorl
adc
scas
dec
jmp
xchg
sbb
aas
add
ror
push
aam
push
add
dec
push
stc
mov
or
cmp
repz
sub
jo
lahf
sahf
xchg
cltd
xchg
dec
xor
nop
mov
loope
imul
jg
sub
aam
xchg
jle
inc
mov
hlt
jp
mov
jp
test
adc
mov
pop
mov
imul
jb
or
sub
mov
lcall
test
xor
sub
das
cmp
mov
lret
in
pop
stos
clc
pop
repz
cld
popa
jl
pop
pop
push
mov
push
cli
paddsw
mov
mov
into
inc
ret
sbb
repz
dec
cmpsl
pop
xorb
in
cld
outsl
pop
or
mov
xchg
xchg
cmp
rorb
sub
inc
mov
add
lds
scas
movsb
lds
ljmp
into
and
sbb
bound
sub
in
adc
movsb
out
rorl
lods
sbb
vcvttsd2si
lds
and
scas
jnp
es
in
pop
or
lods
xchg
adc
sub
xchg
std
cmp
mov
adc
pop
aad
and
lock
jecxz
jno
or
pusha
aad
add
sbb
cmc
enter
arpl
or
ror
dec
sbb
imul
cmp
lret
mov
orb
mov
loope
mov
mov
pop
rcll
addr16
aam
push
jno
jne
mov
das
xor
sbb
push
ret
push
adc
repnz
and
jbe
rolb
adc
mov
xchg
add
jne
sbb
and
in
pop
xchg
jns
pminsw
mov
mov
push
or
cs
mov
adc
mov
jns
and
sbb
xor
mov
xchg
aas
jbe
popf
dec
pop
dec
int3
pusha
int
inc
rep
jae
jns
repnz
add
filds
scas
cmp
lea
mov
xor
jecxz
hlt
shll
jge
movsb
xchg
leave
iret
jns
ret
add
sub
jp
dec
xor
loop
inc
mov
xchg
xor
xchg
popf
jno,pt
ds
clc
popa
cmpsb
push
les
jge
inc
pop
incb
pushl
sbb
cmp
mov
sbb
dec
mov
mov
cmp
mov
lods
les
ds
fwait
jge
int
outsb
sbbb
dec
add
in
push
cmp
xchg
sub
addr16
popf
xchg
test
push
inc
in
loopne
pop
into
mov
push
bound
xchg
inc
pop
ljmp
dec
repz
xchg
int
or
cmp
push
pop
mov
push
aas
xchg
call
sbb
lods
js
adc
fidivrl
mov
lret
ror
xchg
push
cld
shl
daa
xchg
pop
xchg
sbb
jno
out
cmp
pop
pxor
imul
sbb
cmp
lock
push
je
xchg
ret
nop
push
imul
xchg
icebp
imul
fsubrs
mov
sbb
dec
mov
xor
add
push
insb
jb
pop
fs
insl
lods
push
aas
scas
test
xchg
data16
xlat
xchg
dec
daa
jno
jge
inc
ficomps
fwait
in
cmp
fidivrl
push
and
fistpl
push
shll
pop
lea
iret
popf
mov
in
cs
sub
mov
fisttpll
adc
in
rcrb
daa
mov
in
mov
shrb
sub
int
pop
add
das
lods
xor
scas
or
out
loope
out
cmpsl
and
ffree
xchg
inc
daa
sub
call
sarl
loope
je
aas
lret
jns
lock
out
cmp
cs
bound
mov
dec
sbb
int3
jne
mov
and
neg
xor
adc
cmp
dec
cmp
push
jne
ret
repz
dec
dec
mov
mov
mov
jnp
outsl
cmp
cmp
mov
push
inc
mov
jle
jecxz
pop
lods
fcomip
mov
cmpsb
sub
loopne
fildll
lods
adc
je
pop
popa
mov
add
lds
mov
sub
faddl
pop
repnz
xor
int
sbb
ds
jmp
sbb
movsb
rcr
stos
jbe
jmp
mov
shr
fwait
popa
popf
cmpsl
lahf
mov
mov
dec
in
ljmp
xchg
jle
mov
dec
fs
into
sbb
out
cmpsb
mul
xor
scas
adc
mov
sbb
es
dec
adc
add
inc
sbb
sarb
repz
mov
rcll
add
std
sahf
add
xchg
iret
inc
mov
fs
add
lea
adc
cmp
and
mov
xchg
dec
xchg
jg
sub
cltd
iret
test
imul
popf
aam
inc
leave
sub
fwait
mov
stos
movsb
xor
in
pop
cmp
mov
inc
sub
pop
call
clts
mov
cmc
push
pop
fcmovnu
pushf
popf
stos
pop
aam
arpl
mov
sub
loop
mov
out
movb
xor
out
add
mov
cmc
gs
sbbl
cwtl
xchg
mov
push
std
xchg
int
fidivrs
shll
aaa
inc
pop
test
stos
inc
scas
lods
loop
fldenv
leave
movsl
inc
and
call
mov
negb
icebp
xchg
icebp
fistps
aam
addr16
jp
adc
mov
jnp
jb
add
and
jae
and
pusha
sub
jmp
clc
or
cmpsl
in
add
or
xchg
in
rcrb
adc
mov
add
testb
and
in
cmp
mov
xor
xchg
pop
ficomps
bound
mov
roll
or
jp
add
mov
pop
jg
xor
out
out
mov
call
push
das
mov
pop
pushf
stc
add
or
rcll
sbb
mov
das
aas
les
jmp
vmread
sbb
or
sbbb
enter
loope
mov
ret
in
sub
das
imulb
icebp
mov
mov
rorl
jp
mov
and
mov
loopne
jl
int
push
xchg
popa
push
sub
push
loop
xor
mov
mov
push
adc
xor
dec
sbb
insb
aaa
push
cli
inc
xchg
xchg
inc
adc
mov
cwtl
inc
ja
scas
pop
idivl
add
push
in
js
in
pop
jb
sar
mov
push
cmp
test
ja
lea
cmp
lea
xlat
sub
xchg
and
jl
scas
movsl
pushf
bound
cmp
inc
pop
ds
notl
lahf
add
rclb
xor
mov
add
xor
mov
lods
int
sti
cmp
outsl
sub
or
fiadds
mov
movsb
mov
stos
icebp
add
into
stos
aam
and
xor
xor
mov
arpl
into
mov
mov
outsl
pop
sbb
and
mul
addr16
sbb
mov
clc
jo
xor
mov
sub
jmp
sti
pusha
xorl
dec
out
jnp
pop
mov
test
dec
inc
push
cmpsb
pop
inc
mov
xor
and
bound
ss
push
add
lock
fisttps
bound
orb
or
push
mov
js
subl
inc
mov
jp
pop
inc
notl
and
mov
xchg
testb
iret
out
xor
cmc
adc
xor
enter
push
shrb
sbb
mov
nop
adc
cmp
mov
push
jge
test
mov
sub
jae
mov
xor
andb
js
popl
push
push
int
or
lea
push
push
xor
mov
or
stc
adc
xchg
fcompl
pop
pop
pushf
gs
cltd
pop
sub
add
cmp
ljmp
cmc
or
add
or
push
jno
ljmp
xorb
ljmp
add
mov
xchg
cmc
jnp
iret
push
arpl
iret
cmpsl
xchg
loopne
mov
sub
cmpsb
test
jo
and
push
cmp
inc
add
cs
mov
add
scas
aad
pop
mov
or
ja
or
mov
add
ljmp
sbb
ficoms
mov
inc
jl
sub
loope
sub
out
cli
add
inc
cltd
popfw
mov
std
cltd
or
loope
jmp
stos
cli
pop
pusha
pop
ret
cld
clc
pop
sbb
mov
push
test
jmp
test
xlat
sub
inc
fisttpl
out
pusha
jg
mov
xlat
sbb
pop
out
and
hlt
test
mov
movsl
mov
sbb
pop
out
pop
pop
xchg
mov
inc
add
notb
cmp
add
xchg
ljmp
sti
mov
filds
xlat
lret
out
arpl
xchg
mov
pop
and
push
test
test
lcall
pop
aam
loope
mov
mov
lret
dec
xchg
dec
adc
mov
and
mov
insb
lahf
leave
adc
leave
cltd
mov
mov
and
sub
sub
xchg
popf
fdivl
pushf
leave
xchg
inc
out
xchg
and
sbb
addr16
insb
add
fistpll
ljmp
out
sub
scas
xor
imul
cs
xchg
and
dec
lods
arpl
mov
mov
dec
and
shlb
rclb
fcomi
and
icebp
jp
add
repnz
es
cmpsb
fst
adc
test
test
addr16
lea
inc
mov
cmp
clc
shl
pop
imul
rcll
mov
mov
imul
es
mov
mov
and
mov
xchg
push
push
or
fsubp
int3
add
jae
sbb
jo
mov
in
and
adcl
cld
insl
insl
and
and
dec
out
mov
mov
test
add
ficoms
add
jmp
insb
shlb
lods
or
lahf
cli
outsb
cmc
inc
imul
xor
sbb
adcb
decl
and
cwtl
sub
ss
cmpsl
pop
pop
xlat
pop
in
pop
dec
int3
and
leave
shrl
test
test
mov
data16
or
mov
pushf
inc
add
outsb
jmp
xchg
outsl
mov
mov
lea
push
fwait
inc
jo
nop
mov
mov
and
xchg
xchg
sar
sbb
adc
daa
andb
inc
jno
dec
mov
mov
pop
test
fistpll
pop
js
pop
stc
push
cmp
fildl
hlt
jb
xchg
repz
dec
sub
jne
pop
aas
mov
jo
pop
into
xor
repz
inc
cmp
xor
jp
cmp
mov
xor
or
dec
int
popa
ds
and
les
push
sub
sti
cmpb
mov
adc
mov
mov
icebp
pop
lea
xchg
jmp
nop
test
rolb
pop
pop
popf
lds
sub
popa
sub
stos
push
xchg
aaa
cmp
lret
jle
jb
fidivl
jge
aad
or
lock
sub
pusha
mov
fmul
inc
ret
stos
mov
inc
sbb
or
mov
fsubl
xor
push
mov
xor
or
lock
or
imul
or
andb
pop
push
lock
pop
mov
push
xchg
into
leave
dec
push
dec
pop
pop
mov
xor
hlt
dec
inc
sub
jae
in
mov
jno
out
loopne
les
xor
stc
add
es
mov
adc
lds
rolb
pusha
scas
orl
and
cmp
mov
jae
push
pop
lcall
jne
or
or
mov
mov
lods
mov
xchg
popa
inc
lret
cmc
mov
stos
jno
inc
fiaddl
cmp
and
icebp
sbb
aad
sbb
in
out
or
adc
in
in
push
ljmp
mov
mov
pop
add
push
aam
xchg
fsub
arpl
aas
push
test
push
movsb
es
shl
gs
fnstcw
mov
out
sbb
xorl
sbb
or
sbb
jg
pop
aad
and
roll
mov
in
mov
idivl
add
inc
mov
int3
cmc
data16
sbb
fsts
inc
sub
outsl
stc
call
xor
push
in
mov
lock
pop
push
jb
imul
xchg
leave
jnp
popa
shrl
jbe
inc
lock
aas
lret
xor
push
lds
fucomip
xchg
aam
int
dec
ljmp
ret
inc
pop
daa
or
call
push
jnp
fidivrs
in
or
and
push
mov
pusha
ss
xor
loopne
sub
lahf
leave
adc
sub
js
dec
dec
cmp
pop
pop
mov
lods
bound
xor
cs
loopne
push
aam
imul
xchg
add
setge
push
inc
add
push
and
pop
fildl
psrad
push
out
sub
mov
fstps
cli
lret
imul
test
dec
fcoml
call
push
sub
imul
jl
xchg
enter
test
pop
mul
insb
xor
push
xor
bound
sub
sbb
test
scas
mov
sub
and
pop
jb
inc
out
clc
or
adc
fninit
test
loope
or
adc
adc
rol
push
sti
mov
clc
cmpsb
les
pop
gs
repz
repnz
fwait
inc
or
sbb
jl
popa
adc
sbb
jge
fwait
pop
int3
add
lds
cmp
jne
les
popf
xchg
mov
mov
mov
fldl
leave
movsl
dec
roll
mov
jae
sub
test
imul
inc
add
lret
sar
sbb
stos
adc
in
in
stc
dec
and
lds
mov
je
push
outsl
or
mov
cmp
cmpsb
test
cmp
filds
outsl
mov
pushf
jp
sub
int
push
mov
mov
adc
push
and
mov
in
jmp
mov
aaa
pop
inc
add
adc
out
fdivrl
xor
jmp
rclb
jg
push
lea
mov
xchg
cld
push
mov
pop
inc
lcall
mov
inc
sub
inc
test
ss
popf
mov
lret
clc
lret
ds
adcb
sti
cltd
pop
or
movb
and
pop
aas
std
jb
rcrl
jno
cs
out
xchg
adc
pop
mov
test
dec
push
push
xchg
and
subb
outsl
cmpsl
mov
cmp
jo
das
fmull
outsl
pop
insb
imulb
or
add
sub
xchg
cwtl
jbe
inc
push
push
mov
in
cmp
adc
pushl
xor
sub
mov
push
jle
pop
cltd
outsb
ljmp
dec
pop
pop
mov
pop
sub
insb
xchg
sub
push
lds
push
xlat
push
test
cmp
pushl
push
movsb
or
stos
sub
adc
outsl
fdivr
test
jne
scas
mov
fadd
lods
sbb
adc
cltd
sub
mov
adc
pop
mov
cld
xchg
adc
aad
stos
andl
xlat
lmsw
mov
add
imul
outsb
xor
ret
lcall
shll
inc
lret
icebp
das
fwait
jl
push
cmp
test
scas
sti
fisttpl
push
and
sbb
in
int
dec
mov
ljmp
outsb
push
dec
int3
mov
scas
pushl
cwtd
mov
mov
pop
inc
aad
arpl
fcomip
dec
seta
cmpsl
mov
addl
fnstenv
and
push
fisubl
inc
cld
mov
clc
aad
shrl
stos
sub
insb
inc
jo
cmp
out
add
mov
mov
add
sbb
inc
popf
lret
mov
sub
and
rorb
cwtl
push
pop
jle
adc
mov
lret
adc
hlt
mov
dec
int
cltd
jno
xchg
pusha
stos
adc
dec
xor
clc
in
xchg
out
adc
test
xor
lret
les
stc
mov
sbb
mov
stos
test
push
sbb
inc
sbb
lret
into
mov
cmp
xchg
pop
cmp
add
pop
aas
out
jno
mov
sub
mov
add
inc
out
sub
leave
fistpl
jbe
lea
lods
sbb
test
adc
fisubl
vcvttps2dq
xor
xchg
push
xor
mov
and
loop
test
aam
sub
fldl
mov
addr16
daa
inc
xchg
pushf
pop
test
xchg
loop
sti
aad
dec
cmpb
mov
jle
nop
test
dec
sub
pop
rcrb
pop
sbb
test
jo
add
shrb
imul
out
or
mov
insl
in
test
jns
jg
imul
and
xor
pop
adc
pop
jae
inc
mov
addl
nop
sbb
adc
mov
loop
inc
jmp
add
fldcw
and
lret
enter
shlb
lret
cmpsl
xor
aaa
into
test
dec
jo
pop
mov
jnp
sub
test
bound
aam
and
shlb
fwait
lods
mov
rorl
dec
jbe
popf
cmp
sbb
xor
in
sti
repnz
out
push
ficoml
mov
xchg
imul
sub
lods
cmpsb
and
cmp
cli
iret
and
loop
push
cmpsl
sub
out
or
aas
rorb
dec
mov
repnz
sub
ret
and
sub
mov
dec
mov
test
inc
aad
dec
imul
dec
imul
aad
add
mov
xlat
aaa
xor
mov
dec
or
dec
shr
and
and
push
orl
mov
inc
inc
ds
or
cmp
adc
cmp
mov
int3
inc
movsb
sub
or
sbb
push
data16
filds
xchg
fiadds
cmp
and
mov
in
cmp
inc
ret
add
insb
pushf
test
aam
in
adc
add
xor
and
push
jae
inc
je
mov
mov
movsb
jecxz
repz
in
adc
add
xor
and
push
jae
inc
je
mov
lods
xchg
mov
ret
lock
daa
adc
pop
sub
inc
jge
cmpb
mov
and
jmp
scas
test
sub
cmp
or
sbb
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
