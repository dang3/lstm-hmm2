not
push
lea
mov
pop
lea
xor
movzbl
bswap
xor
shl
mov
mov
sub
lea
add
push
mov
push
push
lea
push
and
and
push
or
push
or
push
inc
xor
and
push
mov
jmp
push
jmp
call
lea
mov
lea
sub
mov
lea
lea
sub
and
and
mov
or
dec
add
add
xor
and
dec
je
bswap
add
lea
jmp
add
bswap
sub
lea
lea
sub
lea
push
or
inc
push
lea
push
mov
and
lea
mov
push
mov
mov
sub
add
add
and
mov
sub
mov
mov
add
mov
add
push
inc
mov
push
xor
inc
push
lea
inc
neg
inc
sub
lea
push
lea
mov
push
movzbl
push
inc
addl
lea
push
movzwl
addl
and
mov
addl
neg
addl
and
addl
push
lea
and
push
add
and
push
lea
bswap
push
sub
sub
push
bswap
inc
push
mov
xor
push
or
inc
addl
sub
inc
push
add
sub
addl
add
inc
inc
add
mov
mov
and
movzbl
push
lea
add
addl
and
lea
push
movzbl
bswap
addl
add
and
addl
inc
add
addl
and
and
mov
lea
add
push
lea
call
sub
xor
and
sub
lea
sub
add
sub
xor
cmpb
je
mov
mov
or
lea
push
lea
add
and
inc
mov
mov
push
sub
or
and
mov
movsbl
add
movsbl
add
call
sub
sub
sub
or
mov
add
or
mov
mov
or
sub
je
mov
push
mov
lea
push
inc
xor
call
imul
sub
call
mov
and
add
add
and
pop
and
jmp
and
push
and
mov
push
mov
mov
push
and
neg
push
and
mov
pushl
and
neg
pushl
sub
mov
mov
lea
neg
push
lea
imul
call
lea
inc
and
sub
add
add
and
pop
add
mov
pop
not
mov
pop
add
neg
sub
and
mov
mov
lea
and
mov
and
imul
mov
lea
neg
mov
lea
inc
xor
mov
lea
dec
movswl
inc
mov
imul
xor
incb
and
and
add
and
lea
not
inc
movzbl
mov
or
bswap
or
lea
mov
inc
add
add
or
lea
add
lea
mov
not
movsbl
add
bswap
xor
bswap
inc
sub
lea
cmp
jb
lea
and
lea
inc
mov
sub
movzwl
imul
mov
push
sub
lea
push
add
sub
push
xor
inc
lea
mov
sub
mov
inc
neg
xor
lea
movsbl
xor
lea
bswap
xor
sub
sub
push
movswl
or
mov
and
mov
mov
imul
lea
movzbl
not
mov
push
add
not
movzbl
movzwl
lea
add
bswap
or
add
or
lea
pop
sub
neg
movzbl
not
lea
inc
add
xor
mov
mov
or
cmp
jb
lea
xor
mov
sub
mov
add
bswap
mov
xor
not
inc
lea
bswap
push
xor
add
lea
sub
not
mov
or
lea
pop
movsbl
and
cmp
jb
add
mov
and
bswap
xor
inc
xor
xor
mov
and
pop
and
mov
test
jbe
inc
inc
and
and
movzbl
add
add
mov
and
mov
movzbl
not
xor
add
add
sub
movzbl
lea
lea
mov
or
imul
mov
mov
lea
mov
and
lea
mov
not
lea
dec
jne
xor
mov
and
xor
mov
and
movzwl
test
jbe
mov
inc
mov
mov
movzbl
and
bswap
mov
mov
and
movzbl
add
inc
add
and
lea
movzbl
and
xor
mov
bswap
and
movzbl
mov
not
mov
add
add
mov
mov
sub
mov
imul
or
mov
xor
add
mov
and
movzbl
and
lea
lea
and
mov
mov
mov
lea
lea
mov
xor
and
mov
inc
lea
sub
dec
jne
inc
pop
mov
mov
pop
lea
mov
pop
lea
lea
add
inc
xor
pop
inc
add
add
sub
inc
push
inc
ret
add
mov
mov
movsbl
shr
mov
lea
mov
bswap
mov
shl
inc
and
mov
and
movsbl
mov
mov
not
pushl
mov
and
push
xor
lea
xor
xor
movzwl
mov
inc
and
add
lea
inc
cmp
je
lea
add
and
jmp
sub
xor
not
not
mov
lea
sub
lea
mov
not
lea
sub
and
mov
add
and
mov
inc
add
lea
imul
add
push
and
bswap
push
and
lea
push
and
and
push
movsbl
xor
call
lea
inc
pop
and
mov
mov
sub
sub
pop
add
or
mov
inc
and
cmpb
je
and
call
not
or
ret
and
mov
add
and
mov
ret
mov
not
inc
jne
ljmp
sub
jl
push
or
lods
or
int3
out
jb
cs
jbe
shl
insl
inc
out
xchg
or
das
adc
inc
cmc
pop
stos
lds
xchg
jnp
in
or
mov
int3
ja
mov
add
xchg
dec
mov
call
nop
ret
xchg
addr16
test
out
cmc
push
cli
popf
ds
enter
sbb
cmpsb
push
dec
insb
out
sub
mov
inc
cs
test
adc
lock
adc
mov
cld
rcll
dec
fwait
bound
sbb
fldt
dec
ret
xchg
loop
inc
pushf
adc
ja
lea
adc
sub
outsb
inc
sti
jo
out
roll
decb
and
daa
inc
ss
ja
inc
sbb
leave
hlt
xchg
jg
cmpl
sub
outsl
aad
dec
adcb
aam
gs
or
jae
add
dec
das
iret
mov
push
jbe
insl
outsl
ret
dec
pop
jecxz
mov
stc
push
jg
jns
mov
xchg
push
xor
out
pop
movl
jge
aad
fcmovbe
ret
and
aam
mov
or
sbb
cmc
jb
cltd
popa
mov
inc
mov
jb
sub
stc
adc
call
loop
cmp
sahf
xchg
pop
stc
add
xchg
cmp
std
shlb
inc
mov
push
push
adc
test
mov
dec
jae
inc
fsubr
inc
xchg
fdivrl
pop
jnp
push
int3
imul
and
dec
xchg
jle
or
lret
xchg
mov
iret
mov
out
or
dec
cmp
or
adc
in
imul
ljmp
mov
jmp
add
mov
icebp
int3
dec
movsb
jns
loope
push
add
sub
mov
mov
mov
push
mov
inc
pushf
mov
shl
mov
fnstsw
push
pop
cwtl
test
repnz
cmpsb
cmp
inc
push
push
out
jne
cmp
dec
test
sub
stos
lahf
mov
xchg
clc
or
mov
fidivrs
les
dec
ffreep
test
mov
or
or
addl
cltd
push
in
adc
cmp
rorb
sahf
xor
pop
test
sbbl
rorl
and
stc
mov
cltd
in
mov
xor
pop
imul
lds
mov
icebp
int
es
mov
daa
ret
adc
adc
mov
icebp
out
adc
adc
dec
sub
fs
movsb
mov
imul
inc
imul
mov
mov
xor
arpl
and
aad
imul
cmc
inc
sub
sub
adc
rcl
loope
test
testl
ret
xor
movsl
cld
fcompl
rcrb
jmp
jbe
adc
lock
lea
ret
popf
arpl
test
push
xorl
ja
test
outsl
in
scas
jl
in
jo
shlb
cltd
lcall
icebp
xchg
or
xor
push
cmpsb
dec
imul
adc
in
int3
test
mov
push
pop
inc
movsl
das
sub
scas
jae
pusha
and
sub
cmp
inc
popa
insb
push
orl
call
cwtl
sub
add
loop
mov
ja
pop
pop
lret
or
aas
inc
dec
enter
bound
add
mov
lock
xor
sahf
loope
mov
psraw
add
jnp
or
loope
add
shrb
gs
adc
les
leave
enter
in
ret
ja
jge
lock
xchg
lds
out
aaa
sub
pop
push
addr16
jnp
enter
pusha
push
xlat
adc
aas
fstps
inc
stc
cld
adc
enter
sahf
inc
movsl
data16
lahf
fisubrl
push
punpckldq
mov
cmp
jl
divb
push
cmp
icebp
inc
ret
idiv
add
imul
cli
push
jbe
test
ja
in
xchg
xchg
out
or
scas
adc
or
jge
jne
shll
push
nop
mov
fimull
inc
sbb
pop
mov
adc
shrb
dec
xchg
dec
jne
mov
ret
aas
cwtl
sbb
jg
aas
inc
push
push
repnz
push
mov
sbb
push
xchg
scas
add
ss
aas
or
mov
jp
insl
shll
jle
arpl
push
xchg
in
repnz
mov
xor
jecxz
pop
mov
adc
push
rclb
sub
out
or
in
test
cmpsl
push
and
vcvtpd2psy
add
ja
cmp
pop
es
in
jmp
add
inc
mov
fs
rol
mov
bound
pop
aad
lock
es
fnstsw
sbb
push
adc
jp
dec
adc
dec
out
adc
pushf
jmp
push
pushf
pop
mov
insb
orl
icebp
xor
and
mov
cmpsb
push
mov
imul
inc
xor
sbb
jmp
sahf
sub
fs
mov
aas
add
shl
frstor
out
fisubl
andl
enter
aad
ja
mov
inc
lahf
cs
mov
scas
xchg
jnp
call
or
inc
pusha
sbb
xchg
into
ljmp
clc
xchg
mov
dec
xchg
mov
push
push
mov
aas
or
and
mov
push
adc
xor
mov
sub
and
out
popf
ret
fildll
stos
mov
shlb
pop
cmp
fwait
xchg
ret
push
subb
leave
adcb
rcll
cli
cmpsl
loope
jbe
dec
sub
inc
sbb
push
push
ret
pushl
add
pop
unpckhps
sub
lods
icebp
or
ljmp
pop
and
mov
jbe
jnp
xor
sahf
push
adc
and
jae
arpl
loop
int3
mov
je
sti
imul
ljmp
sti
jmp
sbb
sbb
pop
insb
jae
out
hlt
sysenter
jl
inc
adc
mov
lea
loopne
out
sub
scas
xor
dec
fsubl
fbstp
scas
adc
xor
shlb
xor
sub
or
outsb
add
mov
stos
jge
les
and
insb
in
add
push
sub
cltd
or
pop
pop
in
push
aas
cwtl
arpl
imul
sub
test
imul
mov
jmp
sti
sub
imul
cmc
cmp
jge
std
cmpb
sub
fwait
lcall
aad
movsl
scas
aas
dec
dec
add
dec
xor
push
xor
popa
xchg
lods
mov
add
js
inc
movsl
add
ds
mov
outsb
dec
daa
inc
xchg
push
outsb
sbb
sbb
jno
cmpsb
les
sub
add
xchg
imul
cmc
in
ret
insb
sbb
dec
shlb
or
andb
add
faddl
push
stos
jnp
add
push
pop
rcrb
jne
or
cmp
out
jg
add
imull
int
sub
pusha
sbb
jecxz
inc
outsl
loope
pushf
test
mov
and
and
adc
jbe
xchg
and
pop
test
mov
pop
es
or
das
mov
inc
fcmovbe
lcall
xchg
push
push
cmp
sti
push
pop
pop
out
ss
cmp
daa
cmp
xor
jne
repz
cmp
mov
or
insl
inc
mov
mov
shll
dec
push
add
or
add
ljmp
jg
mov
test
mov
sbb
test
nop
mov
push
ficoml
cltd
in
jmp
xchg
mov
ror
leave
lret
and
sub
cmp
cltd
test
add
inc
jg
aam
inc
outsb
jmp
enter
insl
sbb
jmp
mov
divb
jl
scas
inc
ljmp
xchg
pop
call
cmp
into
jge
scas
push
add
pop
inc
movsl
xchg
mov
pusha
fstps
cmc
mov
clc
push
mov
gs
popa
push
rcrb
in
jp
or
mov
or
jbe
andl
pushf
repz
test
jge
int
push
inc
outsb
cld
jmp
pop
or
add
cli
xor
out
leave
sbb
jl
mov
xlat
js
inc
mov
sbb
push
imul
fnstenv
push
gs
adc
xchg
mov
lgdtl
jnp
inc
fsts
lcall
dec
aaa
push
and
or
mov
and
in
cld
xchg
push
sti
mov
pop
lods
ljmp
mov
out
add
mov
ss
dec
pop
push
in
fbld
iret
fcmovnbe
in
pushf
xor
iret
jno
mov
push
pop
jge
mov
dec
jnp
imul
mov
mov
sahf
and
out
movb
mov
les
push
popa
xchg
lods
out
sarl
int
mov
cld
xor
movsl
mov
loopne
fimull
arpl
mov
jo
std
inc
xor
jnp
icebp
mov
pop
adc
or
mov
dec
inc
cltd
jo
stos
ljmp
movsl
xor
mov
inc
insl
call
repnz
iret
daa
scas
mov
add
add
mov
or
lcall
lahf
pop
fs
mov
lret
call
ds
push
dec
js
cld
xchg
test
shlb
lods
cmp
sbb
jl
shl
outsb
sbb
sub
mov
mov
adc
faddl
jnp
ficomps
fisubl
daa
sub
mov
jne
insl
mov
pusha
out
sub
xchg
fwait
or
push
in
mov
pop
jb
lcall
fdivrl
dec
inc
out
ljmp
popa
sbb
fcmove
fsubl
out
addb
repz
add
data16
add
loope
jo,pt
sub
adcl
mov
loope
cwtl
mov
cmpsb
out
js
push
jg
mov
cwtl
in
push
and
or
jno
lret
iret
pop
lea
or
inc
out
sbb
mov
and
enter
movsb
insb
jo
mov
out
out
jp
fwait
aam
jo
inc
sarl
out
or
mov
pop
jle
xchg
jl
xchg
adc
ljmp
fcom
sub
cmpsl
adc
sub
jl
cmp
out
imul
shlb
pop
pop
cmp
repz
psadbw
rclw
inc
insb
add
mov
cli
lea
pop
ljmp
mov
ljmp
dec
mov
xor
lds
push
pop
into
add
adc
pop
mov
fadd
adc
stc
adcl
inc
pop
xchg
xchg
adc
lea
sbb
popa
push
jnp
fistpll
add
dec
add
cmp
fmull
loopne
popf
enter
insb
nop
fyl2xp1
ret
jge
mov
lcall
pop
scas
pop
test
fsubrp
inc
aas
adc
adc
sbb
fcmove
inc
or
bnd
lock
mov
or
mov
popf
iretw
xchg
mov
aaa
or
mov
and
lret
shr
dec
fcomip
lods
inc
mov
inc
rcr
outsb
je
repnz
jecxz
mov
jp
xor
push
loopne
mov
xchg
inc
ret
insb
mov
lds
xor
and
inc
pushf
aam
scas
jo
sub
mov
lcall
lret
mov
out
cli
xchg
adc
push
pop
and
jp
and
mov
clc
cmp
int3
mov
cli
test
mov
aad
int3
sbb
sbbl
mov
push
negl
mov
loope
mov
or
mov
xor
jne
jmp
lcall
jg
mov
push
in
test
stos
push
mov
jno
ljmp
dec
sub
dec
jg
inc
mov
imul
negb
push
sub
js
scas
fcomi
inc
push
stc
movsl
andb
movsb
sbb
cmp
cmpl
sub
add
dec
dec
aaa
adcb
xchg
mov
jmp
mov
jle
dec
or
mov
inc
sub
movsb
xlat
dec
mov
push
mov
mov
jbe
fidivrl
dec
enter
ds
sbb
lret
xchg
fwait
mov
aam
add
movsb
push
push
nop
test
test
ret
mov
clc
cld
xchg
pop
inc
ret
imul
push
inc
sbb
or
pusha
jmp
fnstcw
outsb
mov
xor
jp
jl
out
cmpsb
std
out
pop
paddusb
jb
or
loope
adc
lret
mov
pop
shr
sub
std
jnp
lret
and
stos
or
cwtl
ja
clc
das
jmp
dec
and
mov
cmc
add
push
stc
or
fiaddl
movsb
mov
jo
push
xlat
push
stos
pop
mov
pop
xor
xchg
pop
xor
in
in
sti
and
push
cwtl
inc
int3
push
mov
mov
into
adc
ret
push
push
insb
or
add
insl
push
jne
fidivrs
and
loope
gs
sbb
inc
shrb
mov
aad
push
or
ds
adc
lds
data16
and
sbb
and
jge
inc
shll
cltd
out
sub
ret
dec
out
repnz
mov
out
mov
sbb
jb
and
fisubl
jbe
jns
int
pop
push
pop
lahf
cwtl
inc
rcrl
inc
sub
jmp
out
call
cli
mov
insl
xchg
lods
add
push
dec
push
and
sub
dec
push
test
int
jg
push
pop
push
jo
xchg
push
push
inc
movsb
sbb
push
add
leave
sub
stc
mov
lret
leave
jle
push
add
sbb
mov
ja
push
popa
cmp
or
ficomps
popf
xchg
sub
jne
inc
jo
loop
inc
int3
frndint
inc
push
dec
fldl
out
push
in
loop
sub
mov
js
sbb
icebp
jmp
ffreep
test
test
ss
test
movsl
xchg
popa
xchg
xchg
xchg
rcr
push
add
pop
push
repz
jne
divb
addr16
scas
sbb
xchg
jl
xorl
fnsave
outsl
dec
mov
ficompl
mov
popa
push
rcll
les
ds
sbb
add
cmp
adc
ret
cwtl
or
sbb
cmp
bound
test
pop
stos
mov
sar
and
rorb
pop
fsubs
repz
cmpsb
fnsave
cli
leave
cs
gs
mov
inc
fs
cli
mov
pop
movsl
jecxz
outsl
inc
movsl
imul
cs
cmp
sub
pop
insl
in
arpl
and
inc
in
mov
fcoms
add
testl
sub
test
in
fs
jp
test
xor
fcomp
fdiv
lret
mov
sub
push
std
in
movsl
fcomp
fldenv
push
enter
lret
out
fiaddl
jnp
and
fsubrl
mov
adc
jge
adc
mov
sbb
fsub
add
mov
sub
icebp
pop
fildll
das
lds
pop
jge
aas
mov
mov
lods
nop
psubw
xor
jno
xchg
imul
lods
sub
mov
inc
xor
pop
jmp
ja
fisubl
sub
out
call
mov
fistpl
xchg
fstl
dec
outsb
or
push
sarl
pop
mov
int3
or
pop
fistpll
adc
cli
loope
int3
pop
jmp
negb
inc
test
into
aam
pop
xor
fsubl
mov
or
and
dec
inc
popl
cmp
sahf
sahf
in
add
mov
mov
mov
leave
push
int
xlat
xchg
xchg
lock
mov
test
inc
cld
lods
pop
sub
xor
dec
rclb
sarl
inc
sub
adc
and
sbb
stc
pop
iret
add
mov
stos
push
sbb
mov
filds
inc
popf
mov
inc
test
fisttps
adc
push
decb
xchg
cmpsb
bound
hlt
js
adc
data16
leave
dec
xchg
inc
fsts
xor
sbb
fldl
jmp
call
push
dec
xchg
hlt
sub
jecxz
incl
mov
and
jbe
sub
jns
js
dec
mov
inc
out
lods
or
ds
es
push
jo
iret
and
push
ror
and
cmp
pop
sub
insb
add
addr16
out
cmpb
out
xchg
xchg
cmp
jae
add
fldcw
pop
loope
arpl
push
pusha
cmpsb
and
pop
inc
mov
scas
sbb
and
sub
push
pushf
outsb
mov
call
and
inc
add
cmpsl
mov
sbb
add
jmp
sbb
call
test
mov
clc
inc
ss
fnstcw
xchg
inc
repz
inc
mov
xchg
pop
mov
clc
mov
repnz
mov
adc
jns
inc
lock
push
lahf
mov
jg
imul
sub
in
xor
pop
das
jae
lret
fcoml
xchg
cmp
sub
sbb
sub
inc
xor
lret
jnp
lret
sub
jne
mov
inc
dec
shlb
test
notb
jns
icebp
or
adc
push
cmc
dec
pop
iret
lret
int3
mov
inc
sti
mov
inc
push
inc
rorb
loopne
pop
push
dec
inc
outsl
push
cmp
mov
scas
jne
jbe
pop
es
ds
lock
dec
nopl
inc
pusha
adc
jmp
and
fisubl
cmc
shll
into
xor
sub
mov
push
fcmovnb
xchg
jno
xchg
lea
shll
push
shrl
icebp
mov
adc
pop
xchg
add
add
pop
xchg
aaa
sub
in
sbb
adc
and
test
adc
scas
sbb
mov
out
loope
in
adc
xchg
or
jmp
popa
imul
push
jle
mull
push
js
dec
mov
mov
fcomip
fidivs
cmc
lock
mov
outsb
fmul
dec
cmp
cmp
pop
sbb
jnp
mov
sbb
add
mov
mov
push
sbb
lret
leave
adc
imul
jno
out
push
lret
fldl
test
and
mov
jae
mov
movsl
xlat
xor
cmc
shl
in
fildl
xor
push
push
xor
jge
add
insl
adc
ss
jmp
inc
pop
je
daa
mov
data16
out
adc
and
add
pushf
aam
lcall
mov
cwtl
mov
or
call
mov
sbb
xchg
and
push
and
xorb
out
cli
cld
stos
arpl
ret
jne
mov
adc
mov
lahf
inc
jae
xchg
insl
out
sbb
mov
lcall
dec
icebp
fstps
insl
jp
mov
xchg
lods
into
sbb
sbb
pusha
fiadds
and
or
xchg
loope
shr
xchg
ja
rcll
loope
push
insl
jp
xchg
int3
mov
test
call
mov
std
xchg
jbe
leave
cs
pop
jbe
add
or
or
sub
cwtl
jle
in
cmp
test
xchg
rcrl
in
lds
outsb
pop
insl
aam
data16
add
jbe
fcmovnu
push
xorb
ret
fbstp
push
jp
shl
sbb
dec
push
fcmovnu
lock
icebp
cmpsb
mov
jmp
inc
mov
mov
add
pop
xorl
push
in
daa
jge
adc
adc
bound
icebp
mov
add
dec
std
out
lods
cmpsb
dec
cwtl
arpl
sbb
pop
xchg
sbb
dec
xchg
in
push
jnp
dec
and
ret
jno
pop
jge
js
lcall
push
mov
jne
shlb
and
mov
enter
lahf
jnp
idivl
loop
cltd
test
fwait
aam
dec
xor
aam
outsl
xor
data16
test
into
push
clc
fisubl
mov
mov
addr16
subb
sbb
imul
loop
pop
call
cmp
shlb
xor
lcall
outsb
mov
cmp
shrl
add
in
inc
sbb
out
and
mov
int
lcall
sub
test
ss
in
aaa
faddp
add
or
add
aad
mov
mov
sub
daa
jb
sub
xchg
fdiv
out
dec
cmp
idivl
or
and
incl
insb
jle
sub
aad
leave
jecxz
in
imul
loopnew
aad
cmp
imul
pop
cmp
mov
add
add
dec
adc
and
addb
sbb
sub
inc
stos
ljmp
cltd
out
jl
jo
aad
ret
dec
inc
pop
jns
sbb
cltd
cmpsb
pop
lea
js
and
rorb
xor
jecxz
jno
push
les
mov
sub
sbb
idivl
in
mov
test
adc
ds
sub
je
sbb
push
movsb
dec
and
and
dec
mov
aaa
ja
mov
jp
pop
dec
mov
cmp
mov
push
ljmp
mov
and
jl
loop
cmpsl
lea
mov
iret
and
push
dec
inc
push
pop
mov
add
jle
inc
pop
xchg
lods
xchg
xor
sub
or
mov
xorl
nop
or
mov
adc
sbb
jne
cld
push
xor
adc
shl
push
pushf
enter
mov
add
inc
rorb
cltd
mov
xchg
sbb
fdivrl
fmull
xor
cmp
xchg
imul
mov
psubw
cltd
in
sbb
test
mov
lods
xor
adc
push
and
mov
sbb
sub
push
test
mov
inc
inc
lock
xor
cmc
pop
jmp
scas
jnp
mov
mov
xchg
cs
cwtl
push
pop
xor
push
cmp
mov
lods
dec
roll
sahf
mov
mov
jno
lret
cmp
movsb
sbb
hlt
int
ret
add
sbb
pushf
adc
aaa
xor
push
fldenv
xchg
ss
dec
sbb
add
sbb
jae
mov
dec
sbb
out
xor
rorl
lcall
push
adc
mov
pop
jne
adc
push
jmp
ficompl
lock
lcall
sub
scas
aad
mov
push
xor
ds
aas
jns
push
test
mov
call
jne
cmpsb
mov
ljmp
rclb
shll
cs
or
jns
aam
adc
xor
xchg
arpl
movsb
jno
mov
scas
in
push
loopne
sub
push
mov
push
test
add
lahf
std
push
jnp
stc
ret
mov
pop
insb
shlb
mov
fstpl
cmpsb
dec
dec
je
cmp
lea
dec
add
cmp
mov
adcb
mov
in
fistl
pop
dec
inc
push
daa
in
lret
add
mov
mov
or
dec
push
sbb
mov
ds
push
push
incb
push
lods
jo
test
xor
mov
lea
jle
cmp
fwait
enter
and
jae
das
push
push
sahf
pop
mov
fmull
sbb
cmp
cmp
pop
and
cs
in
int3
inc
or
adc
ds
jecxz
pop
pop
add
add
and
cli
in
dec
xor
or
subl
outsl
repnz
pop
scas
lods
xchg
xchg
cmc
nop
mov
cmpsb
pop
lahf
popa
mov
adc
scas
movsb
icebp
enter
or
mov
and
leave
xchg
or
sarb
adc
pop
jmp
lods
pop
out
sub
stc
test
adc
fwait
push
xchg
pop
cmp
mov
mov
and
icebp
scas
xchg
out
mov
add
push
sbb
es
idivb
scas
xchg
rcl
xor
and
bound
inc
dec
fcomi
inc
jae
mov
sub
js
fisttpll
ljmp
sub
mov
add
call
call
push
fisttpll
adc
inc
fbld
into
fidivrl
cs
jb
jmp
sbb
dec
arpl
lret
xor
cmpsl
jno
jl
jnp
cs
dec
mov
in
jg
add
mov
cwtl
mov
inc
rcrl
fwait
mov
shr
es
mov
enter
lock
idiv
sub
mov
jbe
incl
mov
test
cmp
push
mov
outsl
je
stc
dec
test
sub
sbb
sub
ret
adc
lock
ljmp
aam
dec
jbe
adc
mov
fstps
cld
xlat
call
add
pushf
test
xchg
mov
push
ljmp
les
jbe
std
adc
sub
js
adc
mov
push
inc
mov
adc
aaa
jge
pop
sti
xchg
jns
or
js
jmp
fcomip
cmp
cmp
icebp
dec
mov
xor
mov
stos
nop
scas
ret
dec
cmp
mov
dec
hlt
and
inc
ror
or
fldl2e
fnstsw
and
subb
in
xor
sti
in
lock
test
add
jge
negb
sbb
push
or
popf
pop
pop
dec
cli
mov
jnp
mov
divb
fnstenv
xchg
ret
gs
out
pusha
mov
outsb
mov
ret
fsts
outsb
or
xchg
mov
add
stos
pop
mov
movb
sti
pop
js
or
insl
enter
mov
lcall
aas
loop
mov
push
or
or
sbb
mov
adc
mov
insb
xchg
mov
movsb
ja
lahf
push
scas
mov
push
insl
scas
aad
dec
pop
out
rorb
arpl
fcoml
cmp
loope
sub
or
orb
loopne
lahf
pop
mov
rcrl
ret
ljmp
out
dec
mov
aam
push
push
dec
xor
pop
xor
pusha
cmp
nop
mov
mov
cmpsl
das
enter
push
ret
incb
mov
sbb
dec
push
pop
cmp
dec
repnz
mov
aam
es
inc
pop
cmp
mov
leave
add
lock
cltd
pusha
adc
imul
mov
std
mov
inc
mov
push
dec
repnz
ss
fdivrp
cmp
cmpsb
inc
and
add
dec
out
mov
stos
cltd
arpl
and
addr16
stos
mov
stos
clc
fwait
xchg
dec
cmp
rcrl
fnsave
insb
rcrl
jns
sahf
jle
xchg
jg
xchg
cmp
push
lods
mov
mov
add
hlt
inc
push
inc
insl
outsb
mov
and
in
bound
mov
lret
xchg
out
and
