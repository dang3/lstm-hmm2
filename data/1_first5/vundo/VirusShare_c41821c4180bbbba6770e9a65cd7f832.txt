jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
or
mov
mov
cmpl
or
add
add
add
add
push
add
add
pop
add
add
add
mov
add
cmp
push
add
pop
add
add
rolb
add
insl
add
xor
push
add
stos
add
loope
pushf
add
testb
add
jae
pop
add
add
add
mov
add
add
cmp
in
fadds
in
testb
add
sbb
cmp
cmpsb
add
add
add
sbb
add
pop
add
add
inc
add
add
add
jmp
pop
add
dec
add
add
add
mov
add
pop
add
add
add
add
add
add
add
mov
add
test
mov
pop
add
jle
into
add
add
add
add
add
add
add
jmp
add
add
fwait
add
pop
add
xchg
sub
rolb
add
dec
add
xchg
add
add
add
mov
add
add
pop
add
add
add
nop
add
add
add
add
add
call
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
inc
add
mov
add
push
add
add
lods
add
add
pusha
add
add
dec
add
or
push
add
add
sbb
pop
add
add
add
add
push
dec
add
add
add
jmp
add
movb
add
add
add
add
add
pop
add
xor
fadds
pop
add
mov
push
add
add
add
enter
cmp
cmp
inc
add
mov
add
pop
add
add
add
or
add
stos
add
into
add
add
lret
add
popf
add
add
loope
enter
pop
add
add
add
add
add
add
flds
les
pop
add
add
sbb
add
aam
push
add
add
add
add
add
add
mov
add
out
add
mov
add
add
lahf
add
add
push
add
add
xchg
add
add
mov
add
adc
mov
in
cmp
mov
add
movb
add
data16
add
mov
add
push
add
xor
jmp
add
add
add
push
add
add
add
xor
out
pop
add
mov
add
add
add
popf
add
add
add
add
add
add
add
add
dec
add
add
mov
add
add
add
add
add
add
mov
push
add
pop
add
add
add
add
add
jmp
js
add
pop
add
add
and
push
add
jne
gs
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
xchg
cmp
jb
dec
movsb
jno
ljmp
mov
mov
adc
inc
sti
pop
cmp
mov
add
sbb
fcomp
lods
sub
dec
in
lock
orb
lahf
xor
inc
les
xchg
rclb
rcrb
sbb
mov
cs
jmp
out
hlt
mov
and
ds
notl
add
jns
lret
hlt
sub
ja
xchg
ja
push
mov
sub
sbb
fidivs
aaa
push
jo
and
sbb
call
inc
add
aaa
sub
xor
movsb
add
mov
jae
fld
xchg
aaa
popa
dec
xor
and
mov
aad
xor
sahf
inc
cmp
add
push
out
into
jo
dec
outsl
lret
ja
xor
mov
add
sbb
incl
cmpsl
jmp
mov
push
inc
sti
cmp
test
in
cmc
popa
ljmp
mov
pop
cmp
jmp
adc
pop
testl
into
xchg
or
mov
shl
sbb
add
mov
into
and
lcall
movb
inc
lods
xor
and
push
in
lahf
cmp
stc
addr16
fidivs
iret
je
shrl
mov
inc
mov
out
hlt
test
jecxz
clc
data16
aas
sub
xchg
cmp
xchg
daa
in
out
push
pop
adc
push
fwait
cmpsl
ret
sbb
je
fcmove
mov
js
enter
jp
rorl
popf
inc
push
sbb
mov
scas
sub
dec
frstor
push
or
movb
mul
mov
sub
jne
inc
add
fldl
jo
negl
scas
dec
test
push
arpl
add
test
xlat
dec
pop
jae
add
inc
pushf
pop
cmp
sbb
mov
pop
adc
jg
adc
pusha
int3
cs
out
dec
inc
aas
jl
jmp
mov
sbb
push
pop
dec
dec
insl
fsub
rep
mov
push
enter
sub
mov
push
gs
cmp
jbe
jmp
xor
popa
loop
repnz
pusha
or
mov
xor
je
loopne
sub
xor
dec
mov
ja
add
int3
data16
pop
data16
in
pop
cmpsl
dec
hlt
shl
and
nop
jb
sub
push
js
rcll
dec
sahf
or
icebp
pop
or
mov
js
scas
sbb
popf
mov
mov
fistl
mov
mov
stos
mulb
mov
inc
aas
in
sub
inc
cmp
mov
push
das
cld
sbb
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
or
sbb
sub
cmp
dec
ret
dec
stos
push
lcall
mov
mov
outsl
ljmp
dec
stos
pop
mov
mov
sbb
dec
mov
cmp
dec
sti
sbb
lret
push
stos
cmp
out
ret
ret
ficomps
outsl
test
sbb
push
movsl
sub
pop
pop
mov
push
sahf
int3
hlt
test
hlt
pop
fisttps
add
fsub
mov
mov
inc
out
neg
jge
out
test
dec
inc
xlat
xor
xchg
jmp
add
cmc
mov
call
andb
imul
jbe
xchg
fwait
test
sub
xchg
xlat
pushl
into
push
xlat
fidivl
jnp
mov
inc
or
fcmovnb
ljmp
add
mov
shrl
stos
xchg
sbb
mov
fcmovnb
adc
notl
sub
aaa
xchg
decl
mov
pop
dec
pop
inc
aas
mov
jmp
clc
sbb
dec
cli
sub
cmp
scas
stos
and
dec
push
jp
dec
mov
sub
cmp
or
jae
test
pop
mov
xor
lret
enter
ficomps
dec
mov
orb
pop
inc
ljmp
and
ficomps
adc
bts
ret
xor
subb
addr16
dec
mov
pop
mov
mov
jp
dec
mov
cmp
or
sbb
ljmp
dec
stos
pop
mov
mov
jp
dec
mov
cmp
or
sbb
ljmp
test
dec
xchg
lods
xor
mov
je
mov
mov
sbb
sbb
jne
add
in
in
into
adc
decl
jae
jo
dec
pop
enter
popa
lahf
sub
xor
lods
pop
dec
dec
ficoms
mov
adc
aas
rorb
adc
ljmp
cmpsb
sub
aad
mov
loope
jecxz
xorl
mov
ret
cmc
push
lret
lods
cmpsl
adcl
fldt
loope
xor
loop
loop
and
push
push
inc
push
jmp
in
jae
jbe
mov
adcb
mov
xor
std
scas
lret
lds
push
fsubl
cmp
jle
rcrl
sub
ja
jge
xchg
sbb
in
pop
cltd
mov
jb
sub
call
jae
repnz
cli
xchg
roll
repz
scas
icebp
sbb
xlat
push
add
into
in
iret
cmp
cwtl
iret
and
mov
add
jbe
popa
sub
sub
leave
lret
in
cmp
stc
es
mov
add
mov
in
mov
das
icebp
shll
sbb
inc
adcl
mov
jmp
push
push
mov
xor
addr16
inc
stos
sbb
pop
dec
mov
mov
inc
pop
rorl
enter
dec
cmpsb
pusha
pop
jle
add
inc
jg
sub
ret
sbb
aam
scas
out
inc
cmp
adc
leave
pusha
icebp
dec
js
push
push
mov
mov
push
imul
test
jne
in
addb
dec
add
jp
mov
cltd
xchg
inc
sub
leave
cmp
mov
pop
mov
insb
cmpsb
or
test
xlat
inc
lods
cli
mov
imul
gs
mov
rcl
xor
std
les
and
lret
ja
gs
cmp
jle
icebp
add
and
push
leave
jo
sub
mov
test
adc
mov
movsl
pop
gs
inc
shll
jle
leave
jno
pop
ret
jne
or
dec
mulb
pop
aaa
dec
out
scas
push
rcrl
dec
dec
and
sbb
xor
int
je
push
inc
inc
aas
fistl
sub
xor
sub
iret
dec
sbb
movsl
mov
test
das
aad
repz
xor
adc
jecxz
outsl
fs
ret
inc
cld
adc
xor
out
jg
into
mov
or
mov
faddl
jns
shlb
test
or
jb
ja
inc
jnp
push
cmpsb
adc
dec
pop
test
add
push
sbb
leave
jae
outsl
mov
leave
mov
lods
dec
or
sti
mov
jno
add
test
and
xor
cld
xor
add
dec
sbb
scas
negb
movb
arpl
shll
aam
movsb
xlat
lret
mov
mov
scas
iret
cli
cmpsb
inc
sbb
sahf
xchg
ljmp
cli
dec
lret
add
pop
pusha
sub
imul
aas
push
leave
stos
scas
fildl
push
fwait
outsl
lret
fnsave
sbb
xor
pop
mov
xchg
out
ss
loope
inc
cmp
frstor
outsb
or
ss
add
sbb
mov
and
mov
mov
ljmp
jecxz
push
aad
cmp
cmp
jg
add
adc
pop
incl
fldl
out
pop
test
cmp
aaa
push
nop
cmpsb
aam
mov
mov
in
push
fmul
loope
mov
decb
inc
into
mov
push
cmp
cmp
ret
fildll
pop
push
push
push
jo
jne
fmulp
pop
jle
xlat
imul
mov
das
or
ds
sub
xor
add
xchg
daa
add
xchg
jp
cmpl
movsl
xchg
lar
loope
mov
xor
test
sub
dec
insb
call
les
xlat
fstpl
add
cmp
add
xor
ret
mov
xor
push
xor
adc
xchg
inc
in
mov
mov
lea
sarb
fdivrs
incl
jle
pushf
mov
jg
jl
add
xchg
xor
sub
lahf
pop
daa
mov
push
jmp
addr16
mov
cmc
adc
pop
or
cmp
jl
mov
shl
int3
fcmovbe
inc
and
pop
jl
aad
xchg
and
xchg
gs
rclb
jge
mov
inc
cmp
xchg
push
cmpl
pop
dec
pop
jmp
cmp
xor
mov
push
cmp
cltd
mov
shlb
xchg
xchg
call
cmp
xor
adc
pop
inc
mov
dec
push
popa
data16
aam
rcrb
fstl
scas
cmp
ds
scas
and
or
jo
outsl
xor
sbb
jno
aaa
jg
int
popa
notl
movsb
mov
or
push
jle
into
insb
add
leave
push
loop
xor
cmpsb
jg
sbb
or
xchg
mov
adc
nop
xor
or
cltd
popf
mov
es
mov
js
cwtl
or
dec
aad
call
pop
repnz
xchg
push
jge
mov
inc
mov
sub
inc
loop
outsb
jnp
lret
ss
and
nop
enter
sub
rcl
out
xor
add
jecxz
or
test
mov
xor
leave
sub
xor
nop
mov
das
shrl
mov
lret
dec
aam
mov
push
mov
arpl
in
xor
push
cs
mov
fbld
out
bound
lcall
mov
inc
sub
jmp
aas
dec
aas
xchg
mov
dec
test
rclb
movsb
out
out
je
mov
jbe
sub
jmp
inc
dec
dec
mov
mov
and
sti
and
iret
adc
sarb
dec
mov
mov
inc
mov
loope
xor
and
and
xchg
imull
hlt
jmp
push
icebp
lock
dec
stos
test
mov
sbb
jae
scas
es
mov
aaa
xchg
dec
imul
jg
mov
rol
call
scas
pop
add
dec
cs
push
mov
addl
fdivp
mov
jle
or
push
pop
jae
mov
mov
xchg
jnp
in
jo
xchg
jbe
mov
xlat
test
pop
fs
outsb
pop
lahf
pcmpgtb
dec
push
cld
cmp
add
test
popf
xlat
dec
out
sbb
ss
loope
mov
mov
push
in
outsl
xor
jecxz
push
jo
rclb
cli
push
jno
iret
xlat
add
mov
xor
dec
lods
popa
lock
call
mov
insl
sub
push
es
addb
push
add
sahf
jecxz
xor
adc
mov
xor
or
pop
cs
mov
and
jp
out
dec
xchg
and
rcrl
mov
data16
xchg
aaa
jnp
insl
sbb
mov
dec
ror
je
cmc
stos
jo
fs
orl
jns
iret
xor
xor
jnp
outsl
aad
stos
cltd
int3
or
cmp
or
cmp
xchg
xor
nop
mov
in
jae
lock
insl
jge
dec
xor
inc
adc
inc
mov
xlat
cmc
in
fs
enter
js
xchg
gs
inc
mov
cmc
out
sbb
adc
fistpll
mov
std
pop
dec
sbb
sti
jg
sub
mov
pop
mov
testb
ret
adc
push
jl
icebp
jb
jno
aam
lea
fsts
icebp
pop
xor
leave
ficompl
loope
cli
fsubr
cltd
sub
shll
mov
mov
stos
push
cmp
pop
enter
pop
jnp
push
mov
aam
ret
dec
pop
mov
shrb
enter
out
bnd
loope
ja
hlt
cmp
sub
push
stos
fwait
add
std
shll
test
loope
xor
jle
pop
dec
inc
fstps
shrl
dec
test
push
hlt
loope
mov
fdivrl
inc
jae
in
fnsave
mov
lods
mov
or
xchg
sub
iret
fmull
aad
or
das
or
jne
jge
mov
lret
js
fld
dec
sbb
xor
adc
cmp
xor
sti
mov
faddp
imul
mov
pop
pop
pop
aaa
fidivs
cmc
jecxz,pn
aas
sbb
xor
nop
in
adc
jo
sub
pop
push
sub
dec
mov
leave
sbb
mov
mov
maskmovq
testl
incl
ss
fisubs
dec
or
les
or
ret
test
push
cmp
subb
mov
fistpll
sub
das
fmuls
mov
pop
sbb
jle
scas
lds
mov
lcall
cmpsl
into
call
popa
addr16
dec
lock
xchg
push
pop
pop
repnz
cld
jno
mov
sbb
cmc
inc
ret
out
xchg
cmp
jns
mov
or
jmp
js
jp
or
push
inc
push
mov
test
loopne
call
test
out
popf
jle
and
xchg
lea
pop
scas
in
in
popf
or
loop
fdivl
and
cmp
mov
add
sub
imul
jmp
jb
xchg
adc
ja
sub
fildl
pop
pushf
xchg
shrl
test
int3
rol
loope
in
xchg
sti
or
sbb
daa
arpl
add
or
cmpsl
push
adc
jecxz
xor
aam
jle
mov
pushf
xlat
sub
sub
adcl
sub
cwtl
sbb
mov
xchg
and
data16
dec
pusha
cmp
jo
xor
in
fdivrl
popa
stc
xor
das
or
lock
mov
lret
cmpb
imul
js
lret
pop
sti
cli
adc
sub
stos
fwait
into
rolb
out
ror
lahf
inc
xchg
or
pop
adc
aad
insb
into
lahf
roll
push
fcoml
shrb
sbbl
popf
lods
mov
cmp
adc
adc
cmp
ret
cmpl
lcall
shll
movhlps
pop
clc
xchg
jne
ret
mov
imul
ja
data16
jecxz
dec
rolb
inc
jmp
into
lret
xor
lea
lahf
jbe
dec
inc
in
loopne
mov
xchg
stos
dec
lock
pop
cmpsl
xchg
nop
jecxz
gs
sub
push
xchg
sbbl
arpl
xchg
push
dec
fisttpl
or
mov
into
push
addr16
jmpw
pop
dec
mov
cmc
je
jbe
lock
subb
cmpsl
xchg
or
dec
cmp
xchg
push
sub
or
mov
jl
push
stc
ret
pop
das
sti
jge
xchg
movsb
xchg
or
dec
or
jns
add
xchg
flds
inc
fsubl
aaa
es
cwtl
xchg
push
shl
sub
pop
out
into
cmp
jbe
gs
loopne
jae
pop
aam
std
jmp
sub
sbb
ljmp
repz
push
mov
fbld
dec
dec
mov
notl
dec
fptan
fiadds
popf
jae
cmpb
insb
jecxz
out
and
dec
dec
pusha
push
adc
inc
popf
hlt
xor
jg
aam
daa
xlat
xor
repz
push
dec
out
adc
dec
lret
xor
mov
out
ret
jmp
add
xorl
xchg
xor
add
and
mov
movsb
xor
pop
push
add
mov
mov
hlt
in
pop
sub
mov
adc
sti
or
lock
adc
fiaddl
push
jns
ds
mov
mov
lahf
fistpl
and
dec
leave
push
cli
cli
pop
hlt
xchg
sbb
mov
popa
out
je
bound
ljmp
jecxz
scas
nop
dec
mov
daa
and
pusha
add
call
ds
sbb
cmc
repnz
fs
sub
cmpb
push
insb
mov
into
cmp
test
repnz
and
inc
daa
pop
adc
or
push
xor
les
inc
jb
adc
jg
jne
dec
inc
mov
inc
push
sbb
sbb
out
int
cmpb
xbegin
and
cwtl
xchg
and
test
mov
out
inc
test
mulb
lods
mov
incb
out
inc
mov
cmpsb
add
mov
push
int3
frstor
loop
arpl
repnz
movsb
jecxz
mov
inc
sbb
loop
cmpsb
mov
push
cwtl
mov
out
dec
xchg
cmp
sub
mov
mov
insb
bound
push
mov
outsl
cmpsl
dec
xchg
sarb
sbb
lods
jno
lods
jb
or
test
mov
out
into
pop
cld
add
aad
cmovb
cmp
popa
fisubrl
jecxz
xor
fisttpl
push
arpl
out
push
pop
push
ljmp
mov
or
das
inc
ljmp
push
xor
and
lret
sar
cmp
jno
fstpl
int3
outsl
dec
roll
inc
aad
std
btr
rep
aad
cmc
jne
jle
stc
jae
jge
pop
pop
mov
sahf
mov
ss
lock
sbb
lock
imulb
stos
out
fwait
ret
lret
in
mov
or
add
jmp
jg
mov
adc
push
mov
outsl
sahf
shll
lret
int
iret
ror
xor
jecxz
je
repz
negl
and
mov
adc
mov
push
cmp
ficompl
add
ret
adc
and
mov
adc
insl
sahf
inc
jb
inc
fdivs
fstpl
add
je
jmp
call
xorb
mov
cli
ja
dec
xor
ds
stos
and
dec
imul
fnsave
mov
xor
in
and
push
push
push
jne
sub
inc
imul
out
sbb
fwait
inc
stos
sub
fucom
cwtl
jmp
cmpsb
dec
mov
mov
mov
movsb
cwtl
bound
or
cli
pop
pop
mov
outsb
xor
test
mov
jnp
mov
cmpsl
movsl
stc
fstpl
popf
enter
ret
iret
into
lea
dec
sbb
lods
stos
lret
shll
ss
stos
jmp
sub
or
add
ud2
mov
xchg
or
mov
jmp
cmp
cwtl
jle
sbb
push
sarl
adc
sub
mov
xlat
push
sbb
dec
dec
ljmp
mov
aas
repnz
sbb
adc
fidivs
ret
cld
jne
cmc
mov
xchg
in
cmpsb
fwait
push
sub
or
sbb
and
gs
aad
lock
jp
jo
sbb
das
sub
or
add
push
es
ja
scas
arpl
sahf
jl
je
lods
insl
xchg
fucomp
aaa
mov
sti
mov
test
pop
adc
repnz
dec
pop
rcr
pusha
cmp
jns
cmp
clc
lods
jno
je
mov
push
mov
dec
hlt
movsl
mov
mov
out
jp
loope
fiaddl
cmp
mov
in
dec
in
sbb
fdiv
push
xchg
sbb
and
sbb
xorb
cmpsl
in
shll
add
fstpt
in
das
popa
lock
sub
adc
in
sbb
fcomip
test
push
rorl
shlb
not
sub
push
mov
loop
unpcklps
iret
xchg
insl
out
inc
daa
loopne
in
int
js
ret
inc
pop
int
aam
lods
pop
shl
in
pop
or
cmc
pop
movsl
lret
push
scas
mov
mov
push
or
mov
dec
aaa
sub
and
sub
clc
sub
push
movd
mov
jb
or
js
lret
outsl
xor
out
xchg
in
dec
dec
mov
lods
jg
fnsave
mov
mov
std
out
jae
and
push
out
mov
or
data16
sarb
loope
aam
xchg
cmp
cmp
fmul
int
in
mov
dec
mov
dec
cmp
fnsave
cli
fcompl
adc
and
pop
fsub
lahf
rcr
or
mov
popf
pop
dec
xor
cmp
out
and
repnz
xchg
mov
push
mov
cmp
mov
lret
insl
push
sub
push
jbe
push
cmc
xchg
or
push
inc
xchg
es
jno
cmp
mov
xor
or
test
xor
loope
popa
fcoms
or
mov
push
cmpsb
fimuls
mov
pop
sub
lock
mov
mov
fsub
icebp
pop
lahf
pushf
push
sbb
rorl
out
xor
xor
xchg
nop
ds
bound
sarl
clc
fsubrs
in
jl
jo
push
std
jns
loopne
and
into
inc
mov
pop
mov
imul
push
pop
xlat
pop
lret
aaa
push
arpl
push
fnsave
adc
pop
das
cli
xor
cli
pop
out
push
fsubrl
sub
lret
xchg
je,pn
xor
cwtl
dec
shl
fmuls
add
pop
bnd
ljmp
add
jl
faddp
inc
imul
mov
xor
pop
xchg
pop
shll
jb
out
pop
sbb
dec
out
jp
pusha
inc
mov
mov
xchg
sbb
insb
notb
mov
sub
test
mov
adc
daa
pop
mov
not
xor
jae
ret
stc
cmc
pop
xlat
inc
mov
xor
or
cmp
pushf
hlt
pop
or
pop
out
jns
pop
pop
cmp
mov
insb
mov
ret
ljmp
xchg
subl
cmp
mov
and
push
shrl
and
std
pop
cmp
dec
lock
jae
push
xor
lcall
repnz
push
mov
sub
leave
sbb
cli
fs
lock
pop
jle
into
fstps
aad
mov
es
loopne
ss
sub
ljmp
mov
jmp
mov
fisubrl
hlt
dec
movsb
xor
ficoms
test
adc
movsl
xor
stos
dec
je
dec
pop
lret
pusha
test
dec
in
cmpsb
je
mov
dec
loop
and
or
mov
sub
cwtl
cmp
movl
ljmp
mov
push
xor
pop
test
je
inc
mov
jecxz
das
jbe
std
mov
xchg
clc
icebp
sub
data16
scas
or
xor
scas
push
fwait
mov
lods
lock
mov
xor
out
mov
dec
and
les
sbb
push
pushw
and
sbb
lahf
into
mov
mov
xchg
enter
cmp
js
call
sbb
cmp
lods
add
cltd
mov
loopne
nop
jno
in
inc
pushf
lret
pop
add
mov
int3
lock
mov
dec
xchg
jne
add
push
dec
jl
test
hlt
xor
inc
xor
insl
cmp
lock
testb
mov
rcl
jg
cmp
rcr
adc
aas
rolb
bnd
lock
fwait
mov
mov
push
cmp
adc
dec
dec
repz
subl
mov
inc
sbb
into
xor
cmp
mov
subl
arpl
imul
into
and
cmc
es
movsl
mov
cmp
popf
lahf
mov
jl
push
pop
mov
sub
cld
inc
gs
out
xor
jno
subb
andl
fs
les
dec
mov
pusha
cli
add
and
sub
inc
fldt
sbb
mov
inc
inc
xor
mov
lock
pop
xor
scas
icebp
nop
jle
lods
jl
jae
mov
inc
clc
push
sbb
xor
out
lock
pusha
test
bound
push
adc
mov
pavgw
or
inc
inc
leave
pop
add
mov
xchg
xor
rcrb
lret
xor
xchg
adcb
test
sub
mov
imul
mov
clc
rcll
push
rcrl
jg
sbb
adc
inc
inc
lahf
insb
cmp
lcall
xchg
xchg
repnz
dec
mov
dec
mov
adc
cmp
xchg
test
xorb
scas
fldl
add
xor
adcb
mov
push
jmp
dec
data16
out
jns
push
pop
rcrb
mov
pop
movsb
iret
mov
push
jmp
xchg
mov
jecxz
mov
push
aas
pop
faddl
push
in
out
dec
lret
into
pusha
clc
fisubl
mov
mov
mov
xor
lock
mov
cmp
lods
inc
xchg
adcl
sub
inc
jge
sub
mov
insb
lret
dec
stos
pop
mov
mov
jp
dec
mov
cmp
or
sbb
ljmp
dec
stos
pop
mov
mov
jp
dec
mov
cmp
or
sbb
ljmp
fldt
mov
jp
dec
mov
cmp
or
sbb
ljmp
dec
stos
dec
mov
mov
rolb
dec
mov
lds
xlat
dec
out
imull
mov
lds
sub
jmp
ja
push
pushf
push
add
mov
xlat
dec
out
imull
xchg
sbb
cmp
pop
inc
rclb
push
cld
ja
pop
out
pop
mov
mov
xlat
push
out
divl
xchg
adc
and
ss
fcoml
push
test
cltd
sarl
pop
into
pop
ret
mov
xlat
cmp
sbb
int
filds
push
addl
inc
mov
xchg
jne
cmp
insb
cwtl
ljmp
and
adc
cld
call
push
inc
rcl
call
xchg
sbb
jno
faddl
int3
xor
xlat
xor
add
xlat
mov
sbbl
xchg
sbb
dec
mov
push
cmp
xor
lahf
popa
out
inc
or
inc
cmp
mov
and
outsl
fcompl
inc
das
and
xor
add
push
push
sahf
jg
mov
mov
jb
addr16
pop
test
mov
add
adc
pop
insb
es
xlat
pop
out
imull
xchg
or
cmp
xor
addr16
cmc
pop
test
xchg
daa
cmpsb
aaa
lods
mov
xchg
mov
mov
insl
loopne
rorb
mov
int3
or
adc
dec
roll
cwtl
xor
mov
inc
cmpsl
dec
iret
push
adc
cltd
adc
dec
in
mov
sub
mov
stc
dec
test
xlat
sub
das
xchg
or
cmp
sub
fcoml
addr16
ja
pop
pushf
pop
mov
mov
xlat
dec
out
imull
xchg
or
cmp
sub
fcoml
addr16
ja
pop
pushf
pop
mov
mov
rcrb
sti
movsl
outsb
hlt
xchg
jecxz
push
cmpsb
push
add
pop
subl
out
and
in
cmp
push
xchg
int3
cmc
in
sbb
rol
mov
ret
ss
dec
outsl
jl
sub
pop
out
in
inc
movsb
in
insl
add
lahf
mov
mov
aas
xor
je
rcll
sbb
push
cs
and
push
icebp
testb
inc
xchg
and
test
fsubs
jl
pop
sbb
imul
aam
ret
push
mov
lahf
add
shlb
jo
cli
gs
jnp
pop
fldcw
fnstenv
clc
cmp
in
das
fstp
cltd
sub
mov
dec
aam
movsl
xorl
jp
dec
pop
clc
lds
cmp
sub
loop
push
pusha
addr16
jl
in
test
rclb
mov
cwtl
fwait
pop
cltd
call
add
xchg
sbb
lcall
enter
pop
lret
inc
mov
fstps
jp
pop
test
inc
xor
rcll
insb
mov
and
cmp
clc
sub
jl
rcrl
lods
sbb
std
xchg
push
sbb
ja
pop
xchg
sbb
jns
sub
cltd
jae
xchg
xor
out
in
je
fwait
ret
jp
xor
mov
or
adc
ficoml
dec
fdivp
shlb
or
dec
add
xor
inc
mov
stos
out
sti
xchg
inc
in
pop
pushf
fs
jmp
out
sbb
mov
lds
fcmovb
insl
mov
xorl
ret
das
test
and
fsts
clc
sub
xchg
push
xchg
mov
xchg
pop
data16
or
scas
and
jns
xor
loopne
xor
add
cmp
push
push
imul
jp
shlb
add
sbb
int3
arpl
aaa
jmp
mov
test
insl
fstps
push
out
loop
jo
pusha
sbb
dec
push
aas
mov
out
cmp
lahf
pop
sub
cmpsl
ss
movsl
insb
in
push
into
lret
sub
inc
repz
cmp
inc
xor
out
je
push
outsl
in
mov
and
sti
mov
into
insb
ds
push
xchg
lods
adc
xor
fisttpll
push
ret
cmp
inc
stc
arpl
icebp
fistl
mov
fstps
push
mov
dec
xchg
and
std
aaa
push
xor
pop
fstpl
xlat
mov
push
pop
adc
mov
jns
dec
insb
xor
mov
icebp
sbb
sub
push
push
cmpl
aas
xor
enter
in
in
xchg
or
cmpsb
or
push
imul
jnp
popa
bound
fnsave
fisubs
jg
add
mov
sarl
aaa
test
mov
add
jl
stc
leave
lock
in
fiadds
sbb
cmp
jmp
jns
aas
pop
lcall
shlb
xchg
mov
cmp
sbb
insl
pop
mov
mov
ja
out
push
xchg
ds
cld
out
xor
loopne
xchg
aaa
icebp
call
jecxz
aaa
std
test
cmpb
mov
into
adc
pop
cmpsb
and
sti
jo
mov
push
aam
xor
jnp
mov
rolb
lret
dec
sbb
stos
out
or
adc
push
mov
outsl
xchg
mov
in
scas
mov
test
push
mov
int
jl
cmp
jo
xchg
insl
jge
cmp
movsl
xor
jns
or
in
mov
xor
jl
mulb
add
mov
fwait
bound
sbb
adc
scas
pop
xchg
mov
push
jmp
pop
daa
sub
ja
or
cmpsl
cli
inc
or
outsl
mov
mov
out
dec
in
scas
fnsave
push
das
or
shll
push
xchg
xor
cld
cld
stos
xor
inc
int3
sub
int3
mov
ret
arpl
mov
out
sbb
jb
pop
dec
scas
xlat
add
lret
lds
into
adc
cmpsl
add
scas
in
sbb
xchg
js
jo
dec
lret
mov
rorl
xchg
ljmp
clc
mov
mov
push
add
mov
imul
ljmp
mov
adc
nop
aaa
jge
xchg
in
sbb
sti
imul
icebp
hlt
cmp
insb
ret
push
mov
lcall
das
outsb
out
lret
mov
lods
repz
dec
push
dec
in
daa
out
sbb
adc
push
out
pushl
push
sbb
pop
addr16
bnd
jb
sbb
push
out
jp
dec
xchg
repz
and
adc
dec
shl
push
adc
aam
mov
sbb
mov
insl
and
or
test
dec
push
addr16
lock
xchg
in
in
xchg
mov
insl
cmpsb
call
xchg
pop
push
push
xlat
adc
jbe
inc
pop
inc
sub
lcall
mov
mov
idivb
mov
cld
push
test
add
cmp
aas
and
cmp
call
shlb
notb
insb
mov
test
in
fs
inc
nop
pusha
lcall
push
daa
cmp
gs
lret
in
sahf
lock
sbb
scas
out
mov
fisubrs
stos
dec
bound
pushf
jo
jae
and
jnp
jnp
das
aad
cmpsl
sub
gs
outsb
cmpb
dec
and
icebp
add
push
lahf
adc
mov
jg
mov
clc
or
push
pop
in
pop
or
loope
mov
aad
xchg
inc
xchg
sbb
pusha
test
push
cmpsl
mov
aaa
mov
sub
inc
iret
subl
mov
push
mov
fsubl
mov
jns
pop
push
sbb
sbb
adc
dec
fistl
pop
inc
mov
sub
mov
jl
repz
sbb
cltd
fsubrp
inc
xorb
ljmp
sbb
xchg
xor
and
push
jp
jle
and
fcmovu
mov
add
mov
mov
fnsave
lds
loopne
clc
mov
pushf
mov
das
popf
jge
xchg
ret
jl
mov
iret
les
push
sbb
pop
das
nop
push
xchg
adc
push
mov
jp
fnstsw
scas
jge
mov
lds
out
pop
and
pushf
xlat
hlt
mov
and
sbb
cs
nop
aam
loope
xor
xchg
mov
mov
mov
inc
sarl
sbb
arpl
mov
mov
or
shll
mov
xor
cmp
loope
aaa
and
dec
cmpsl
inc
pop
add
pop
push
inc
sbb
stos
fsubrl
int
cld
jb
scas
ds
fistpll
in
je
xchg
push
icebp
fdivs
pop
adcl
xchg
insl
dec
or
shrl
imul
shl
mov
les
xor
sub
xchg
arpl
arpl
and
imul
mov
mov
jae
mov
dec
mov
jo
js
xor
pop
repnz
mov
cltd
repnz
sub
add
adc
pop
ljmp
imul
movsb
xchg
sahf
push
inc
rorl
outsb
cmc
jbe
and
das
xlat
out
jg
hlt
lods
or
cld
or
and
into
rolb
adc
lds
pop
sbb
fnstenv
push
fidivrs
rcll
sbb
sbb
inc
xor
push
mov
stos
mov
add
jmp
mov
xchg
addb
sbb
cmp
cli
push
popa
hlt
cmp
pop
mov
inc
jae
push
dec
les
lcall
lea
fiaddl
ret
int
mov
dec
les
push
pop
jnp
add
popa
cmp
enter
in
icebp
jbe
shlb
push
adc
repnz
jge
testb
push
jle
and
pop
pop
imul
xchg
fwait
adcb
mov
shrb
jns
int3
ret
adc
or
stc
adc
xchg
shll
imul
mov
and
push
push
test
imul
add
test
insl
sbb
adc
icebp
rcll
push
and
push
in
mov
and
or
es
pushf
cmp
nop
mov
aas
xchg
iret
pop
inc
xchg
mov
les
scas
test
scas
mov
xchg
adc
mov
sub
adc
mov
inc
adc
adc
ja
nop
fwait
dec
and
push
push
xlat
jnp
leave
leave
int3
les
jo
and
daa
nop
in
inc
popa
stc
push
cmp
pop
loop
cwtl
loopne
inc
inc
pop
loope
in
je
inc
fbstp
mov
cmp
mov
ficoml
cmc
jbe
jno
scas
stos
lret
call
loopne
sti
jl
and
jl
adc
dec
jp
aam
outsb
sahf
out
mov
pop
pop
fstps
pop
xchg
and
test
xchg
add
sbb
sub
jge
jno
ja
out
inc
mov
add
dec
enter
enter
popf
dec
sub
movsb
int3
psllq
add
mov
add
sub
jge
int
leave
or
cmpsb
sbbl
out
mov
jg
into
sbb
push
jne
adc
call
in
xor
cmp
das
popa
pop
xchg
in
xchg
sti
pop
cmp
dec
mov
mov
into
and
and
mov
jecxz
int
push
xchg
cmp
adc
gs
lcall
xor
mov
cmpsb
lahf
stos
cmp
mov
mov
cli
jmp
xchg
sbb
jbe
jmp
imul
adc
and
jns
daa
sarb
cld
pop
dec
dec
enter
push
std
jmp
pushf
mov
rcrb
js
dec
add
clc
lods
out
xlat
xorb
adc
das
add
cmc
in
ret
clc
jo
sbb
and
inc
rorb
cmc
xchg
jno
fistpll
jns
fdivrs
mov
push
and
dec
jno
xor
push
lods
rcll
cmpb
mov
je
mov
into
push
nop
mov
aas
clc
adc
outsl
ret
dec
into
add
adc
les
js
xor
pop
adc
rorl
fs
xchg
push
push
lds
rorb
mov
inc
mov
mov
pop
insb
jne
enter
fldz
sahf
add
cmp
cld
cmp
rcrb
pop
sub
dec
jns
add
or
sbbb
rcll
popa
jno
jo
in
mov
cmp
adc
inc
arpl
shrl
test
cmp
sub
add
adc
inc
mov
dec
sbb
gs
int
dec
pop
and
fcomi
jg
daa
cmpsb
fistl
push
or
loop
notl
mov
fcoms
pop
aad
cmp
test
outsb
cmp
repz
fidivs
push
mov
aad
push
out
mov
lds
in
roll
cltd
sbb
inc
inc
rcrb
mov
cmp
pop
mov
push
call
aam
mov
les
push
mov
inc
les
pushf
xorl
jmp
push
jge
mov
jae
jbe
jmp
inc
push
push
hlt
or
jl
inc
xor
and
pusha
in
pop
pop
into
fisubl
xor
into
fs
bound
aam
mov
or
mov
mov
xchg
fadds
hlt
jge
push
aaa
cmpsb
pushl
xchg
int
pop
push
pop
mov
lret
add
jno
aam
push
call
jns
push
mov
sub
jae
jmp
std
mov
inc
jns
sub
dec
sbb
mov
sbb
xchg
in
sub
jbe
mov
sub
js
sbb
idiv
mov
out
lahf
repnz
xchg
add
jne
cld
push
cwtl
push
add
fidivrl
hlt
cmc
inc
sbb
negl
jns
push
int3
icebp
ja
orb
mov
cmp
adc
xchg
pop
in
call
loop
sub
mov
xor
aaa
popf
sub
faddl
mov
pop
repz
shll
mov
shl
push
push
add
test
mov
push
or
repnz
pop
jns
mov
rcrl
mov
and
in
pop
pushf
add
and
iret
test
imul
pusha
inc
in
inc
jle
leave
mov
fsubrs
push
popf
mov
mov
fisttpl
std
sbb
inc
dec
jnp
push
fcom
or
popa
cmp
inc
outsl
add
nop
insl
pusha
jge
insb
test
ds
aas
sub
pushf
js
jbe
nop
or
or
cmp
ret
pop
and
xchg
sahf
fsubrl
fcoms
inc
outsl
in
and
stos
pop
aam
xchg
repnz
fistpl
daa
repz
iret
imul
in
lds
or
das
lahf
sub
jg
adc
mov
outsb
mov
movsl
lcall
and
test
jl
loop
pop
push
inc
pop
sahf
cwtl
xor
sub
test
fnstcw
jmp
fiaddl
lahf
icebp
shl
mov
dec
push
outsl
ljmp
pop
mov
js
jg
aam
andb
or
add
or
mov
pcmpeqw
insl
mov
or
cld
shrl
xor
push
dec
test
or
mov
push
cmpps
push
jnp
call
frstor
jmp
jge
ficoms
testb
pop
int3
mov
icebp
fisttps
mov
loopne
rcrb
adc
mov
add
pop
pop
mov
and
sbb
xchg
fnstenv
xor
out
ror
add
xor
insb
mov
inc
test
pop
and
in
sbb
cmp
sbb
mov
shlb
or
stc
inc
pop
scas
ret
adc
or
jo
cwtl
mov
jno
daa
test
sbb
pop
mov
cld
mov
pushf
jg
lret
jns
sub
pop
push
int3
push
dec
aaa
mov
cmp
mov
arpl
out
jns
add
mov
xlat
sbb
dec
ret
push
jo
lds
cmpl
subb
pop
lret
int3
xor
or
mov
daa
loop
mov
lock
cmp
pop
fbstp
pusha
lods
sbb
cmp
cwtl
dec
lahf
dec
pop
adc
pop
sub
and
or
dec
sbb
and
scas
dec
sahf
or
stc
dec
out
or
jg
rorl
pop
jns
add
mov
push
adc
jbe
repnz
imul
cmc
dec
lods
pop
pop
and
cmp
mov
fwait
push
cld
out
inc
push
arpl
push
imul
loop
leave
scas
jp
push
push
insl
decb
addr16
cmc
xchg
sbb
dec
fwait
jp
sub
lret
sub
mov
arpl
popa
lock
dec
int
out
pop
sbb
lea
inc
mov
lea
jnp
or
fisttpl
bound
lret
cmpsb
cltd
mov
mov
ret
cwtl
sub
mov
stos
adc
cwtl
loope
mov
hlt
div
xchg
mov
xor
cltd
icebp
lret
aas
and
add
add
jp
rcrb
adc
mov
jecxz
jae
in
jne
arpl
jg
test
inc
sbb
xchg
sahf
fwait
dec
ds
das
mov
pop
and
adc
adc
mov
scas
lret
pop
fsubrl
jnp
xor
push
mov
mov
mov
popa
das
pop
pop
inc
inc
push
mov
fwait
fs
clc
xor
mov
push
and
cmp
and
int
jg
mov
aas
cmp
sub
pop
push
lret
adc
movsb
add
mov
xlat
adc
call
jns
or
cmc
lret
mov
aam
or
fcos
sbb
pop
mov
nop
cmp
sbb
jp
arpl
fdivrs
arpl
add
or
add
mov
adc
jle
fbld
jmp
or
pop
inc
push
out
lods
push
and
dec
ret
in
out
repnz
mov
add
int3
cmp
int3
cmp
out
inc
sub
popa
xchg
jne
ljmp
cltd
pusha
outsb
in
mulps
icebp
nop
stc
shlb
fisttpll
stos
sub
adc
mov
les
pop
cmc
test
loopne
lea
jecxz
scas
pop
mov
lds
sbb
sahf
in
outsw
aad
xor
dec
mov
sub
adc
dec
mov
scas
ret
xor
xchg
inc
jnp
xor
fdivr
mov
cli
adc
clc
xchg
jle
pop
aas
adc
lret
into
ss
std
xchg
fxtract
das
sub
lods
inc
xchg
cmpsb
cmp
mov
mov
mov
into
mov
pop
dec
shlb
les
jp
stos
or
iret
icebp
or
shlb
adc
out
lret
clc
xchg
push
cmp
xor
mov
repz
lret
xchg
pop
inc
add
mov
mov
jno
pop
stc
xchg
add
inc
xchg
add
leave
push
inc
std
hlt
aam
mov
push
push
xlat
test
sub
sub
pop
js
mov
adc
xchg
addr16
xlat
and
cmpsb
adc
sbb
cmp
inc
jo
mov
xchg
test
or
mov
push
mov
fimull
push
ds
mov
mov
aad
xor
fwait
out
imul
push
fnsave
dec
pop
or
nop
test
sbb
xchg
lret
shlb
mov
js
sbbl
das
dec
mov
or
mov
dec
or
fwait
jmp
cmp
fisttpl
fsubl
and
call
jnp
sub
flds
ljmp
inc
int3
mull
insl
insl
cwtl
int3
push
lret
fsubrl
jae
mov
push
ret
dec
loop
shll
pop
sub
insb
or
rcl
pop
adc
movsb
scas
les
and
test
fstpt
mov
xchg
and
mov
mov
sarl
pop
push
mov
sub
enter
jl
cmp
add
dec
or
insb
mov
push
cmp
pushf
jae
xchg
jecxz
data16
xor
imul
rcrl
int
lods
out
dec
div
jns
das
js
or
push
xorb
cmp
adc
test
movsl
mov
repnz
push
jge
movsb
jmp
fstpl
push
inc
and
mov
clc
jecxz
add
xor
pop
loopne
sub
in
test
sahf
or
mov
push
in
stos
nop
out
clc
mov
mov
cld
cs
arpl
js
pusha
inc
inc
sub
or
daa
sarb
xor
xchg
iret
dec
rol
out
test
jp
add
push
lret
lcall
push
inc
push
xchg
mov
or
push
mov
add
mov
rorl
aaa
inc
sub
insb
sub
or
pop
test
out
mov
cmp
xchg
sbb
cmp
or
fucom
pop
loopne
out
add
fdivrl
push
pop
jo
aas
in
xchg
dec
test
jno
pop
and
jo
imul
lcall
add
dec
mov
sbb
push
ficomps
mov
in
or
jne
into
leave
push
sbb
xchg
xchg
push
inc
dec
jb
sbb
cld
mov
mov
push
push
pusha
out
push
addb
ja
ficoms
mov
mov
add
testb
hlt
scas
lds
mov
fists
xchg
dec
xor
mov
pop
inc
rcrl
test
lea
out
sbb
test
jbe
gs
mov
pop
jg
add
seta
outsb
add
in
xchg
mov
pushf
and
sbb
aam
js
lods
cltd
das
jbe
pushf
leave
lock
mov
repnz
mov
mov
sti
sti
lret
popf
push
pop
and
cmc
inc
mov
mov
push
adc
das
mov
mov
cmp
pop
outsl
ret
sbb
push
repnz
xchg
fidivs
cli
mov
lock
inc
cwtl
mov
test
pop
jp
mov
pop
aad
jge
fimuls
cmp
and
push
adc
xchg
aam
inc
xor
loopne
sub
stos
sahf
mov
xchg
mov
ljmp
sub
bound
in
movsb
lea
dec
jne
imull
xchg
or
cmp
sub
fcoml
addr16
ja
pop
pushf
pop
mov
mov
xlat
dec
out
imull
xchg
or
cmp
sub
fcoml
addr16
ja
pop
pushf
pop
mov
mov
xlat
dec
out
imull
xchg
or
cmp
sub
fcoml
addr16
ja
pop
pushf
pop
mov
mov
dec
out
imull
xchg
or
cmp
in
inc
fcoml
int
ja
jo
lahf
repz
enter
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
or
sbb
sub
cmp
xchg
jno
mov
lcall
push
fildl
jmp
sti
daa
or
sbb
sub
cmp
dec
xchg
pop
xchg
jnp
mov
inc
stos
jbe
or
pop
jmp
sti
daa
or
sbb
sub
cmp
dec
xchg
pop
xchg
jnp
mov
fs
adc
pop
sahf
push
xchg
push
push
fwait
jg
sub
push
ljmp
sub
sahf
sahf
jb
enter
xlat
nop
xlat
ja
les
xchg
xchg
aas
xchg
push
mov
pop
ficompl
jbe
pop
adc
sub
dec
and
fisubrl
dec
loopne
and
inc
stos
jno
cwtl
fwait
call
sti
jmp
pop
sbb
inc
loop
mov
xchg
dec
xchg
mov
push
mov
xor
fwait
out
inc
into
daa
hlt
pop
sti
cmp
or
ljmp
cmpsl
arpl
addr16
inc
and
mov
mov
shr
dec
mov
mov
test
fcoml
inc
push
add
push
scas
aaa
jnp
xlat
sbb
sub
cmp
dec
xchg
pop
xchg
jnp
mov
inc
stos
ja
addr16
pop
fildl
jmp
sti
popa
dec
xlat
outsl
mov
dec
shrb
repz
jns
mov
pop
stos
and
pop
lret
inc
mov
inc
outsb
mov
push
test
push
ret
sub
test
jb
xchg
xchg
jae
xchg
sbb
movsl
pop
xchg
jnp
mov
inc
stos
ja
addr16
pop
fildl
jmp
sti
daa
or
sbb
sub
cmp
dec
xchg
pop
xchg
jnp
mov
inc
stos
ja
addr16
pop
fildl
jmp
sti
daa
or
ds
mov
adc
mov
sub
inc
jo
xor
sbb
xor
mov
outsl
rcrl
xor
dec
pop
dec
jae
out
enter
mov
dec
pop
ja
xchg
push
adc
gs
mov
stos
pop
inc
mov
fisttpll
inc
cmp
pop
mov
mov
test
ret
and
subl
ret
orb
mov
aas
lret
test
xorb
flds
scas
cmp
xchg
dec
popl
hlt
adc
jg
jl
notl
xchg
xchg
push
push
clc
rorl
nop
in
imul
mov
dec
jg
aaa
xor
arpl
shll
imul
popf
cmovb
stc
cmp
orb
or
sbb
pop
daa
adc
mov
ret
bound
ret
lahf
bound
add
adc
leave
pop
lret
add
es
subl
repnz
lahf
sub
shr
shrb
inc
pop
sahf
fstl
inc
push
ljmp
ds
fwait
pop
pusha
mov
jecxz
iret
xchg
icebp
sbb
pop
sbb
mov
xor
sub
sub
je
lds
insb
stc
test
sub
fistpll
dec
dec
shll
mov
out
iret
popa
out
jbe
fwait
dec
cld
inc
test
mov
cmp
in
gs
gs
fidivrl
jmp
cmp
outsb
imul
xchg
pop
lock
sarl
test
rcr
insl
fwait
xchg
ja
mov
jnp
ficoml
push
repnz
mov
xor
jne
cwtl
mov
mov
iret
mov
nop
orl
daa
out
xor
insl
sti
cmp
bnd
jge
push
out
stos
mov
sbb
adc
cltd
fwait
lea
rcll
ret
pop
mov
scas
loope
pop
cmp
divl
mov
xor
in
push
rorb
jge
lret
into
mov
pop
xor
pusha
cmpsl
rcll
push
lds
clc
iret
imul
fisubrl
push
push
push
lcall
mov
in
pushf
sbb
mov
jnp
dec
jne
adcl
or
test
scas
pop
pop
sbbb
sarb
push
xchg
add
mov
rcll
cs
mov
sub
lret
mov
pop
loopne
pop
in
pop
mov
int
sbb
insb
cmc
rcr
xchg
inc
mov
add
sub
push
shl
mov
xor
inc
lea
adc
push
mov
mov
pop
movsb
mov
daa
inc
jmp
mov
adc
pop
cmp
xchg
mulb
sub
stos
insb
mov
inc
push
pushf
test
daa
lock
hlt
dec
jbe
dec
inc
mov
popa
stc
cs
sub
iret
xchg
and
fidivrs
out
stc
fildl
lcall
inc
push
cmpb
mov
push
hlt
pop
inc
lret
arpl
rol
sub
sub
fstpt
test
in
test
sub
pop
ss
mov
lea
adc
das
jnp
adc
adc
push
outsb
adc
mulb
push
clc
xchg
insl
fstl
bound
push
outsb
push
cmc
push
and
enter
mov
pop
xor
dec
mov
push
mov
pop
outsb
jbe
test
sbb
out
cltd
out
sbb
pop
jge
std
xor
cmp
adc
inc
std
clc
pop
push
xchg
mov
pushf
mov
push
aam
xor
fnstsw
pop
jge
jno
sub
dec
sub
hlt
mov
sub
hlt
mov
dec
test
mov
aam
jae
mov
pop
enter
faddp
aam
loopne
pusha
leave
aam
decb
mov
mov
std
mov
in
add
jae
cmp
xor
fs
call
push
fidivrl
mov
sub
cwtl
outsb
cwtl
scas
cmpsl
ljmp
faddp
int3
or
insl
jae
sub
cmpsl
adc
mov
ss
jb
and
scas
jnp
and
fsubrs
adc
dec
or
sub
stos
scas
mov
or
jecxz
popf
cwtl
fmul
xchg
shrl
mov
sub
sti
ds
test
out
inc
mov
cmp
add
sub
into
jnp
rorl
lret
cmp
or
movdq2q
stos
int3
das
sahf
repz
xor
xor
out
pop
movaps
pop
in
pushw
pop
rolb
fnstcw
sbb
repnz
sbb
sbb
push
inc
sub
mulb
mov
movsb
es
lret
dec
loopne
inc
xchg
adc
test
jp
pushf
dec
push
push
add
sub
jo
sub
outsl
fs
icebp
lods
adc
cmp
movsl
repz
pop
adc
data16
sub
push
pusha
fld
inc
mov
test
cmc
xchg
dec
cltd
das
jnp
mov
sub
pop
sbb
and
test
dec
testb
imul
dec
xor
shlb
adc
xchg
data16
inc
in
mov
mov
rcrl
iret
push
add
test
sbb
adc
movsl
cwtl
lods
mov
mov
mov
inc
stc
mov
add
outsb
mov
mov
inc
cmp
sahf
push
scas
mov
mov
mov
daa
loop
pop
inc
out
shll
subb
or
cmp
jge
add
addr16
mov
xchg
jecxz
or
push
aad
stos
dec
or
dec
xchg
mov
data16
cmp
add
push
and
pop
adc
roll
insl
popf
bound
inc
fldenv
arpl
push
movb
sub
arpl
stos
dec
push
inc
sbb
mov
inc
aad
repnz
add
pushf
jp
sar
roll
mov
add
das
mov
loope
lahf
cmp
mov
insb
ss
mov
orb
and
in
movsb
aam
test
cmp
push
mov
out
es
das
push
inc
add
and
in
lock
dec
ljmp
xor
add
subb
jle
jb
popf
push
es
inc
ret
cli
fadd
mov
lret
jg
outsb
movsl
push
dec
js
insb
push
mov
mov
cmp
add
mov
lret
push
adc
pop
clc
daa
fwait
pop
arpl
js
dec
test
cmp
popl
mov
stos
clc
test
push
add
jo
cmpb
stc
fxtract
orb
gs
nop
lret
mov
jecxz
jl
ret
scas
xor
ror
ljmp
push
pop
cmc
sbb
add
mov
pop
in
ficoms
sub
shl
pop
mov
jmp
dec
sbb
loopne
mov
mov
iret
push
pop
push
rolb
mov
insb
insb
or
sbb
or
fwait
xlat
sub
xor
push
sub
sub
sahf
or
pop
jb
jp
cmpsl
push
lahf
mov
dec
mov
js
xlat
xor
pop
test
into
mov
add
cmp
in
adc
mov
sub
ja
push
add
leave
cwtl
mov
mov
imul
loop
mov
daa
call
inc
js
mov
cmpsl
in
xchg
and
pushf
in
lock
outsl
sbb
xchg
lods
jne
or
movsl
xchg
mov
cmp
popf
push
jae
imul
add
aaa
pop
loopnew
sahf
pop
sarb
and
shl
movsl
adc
sub
inc
adc
lock
movsb
loop
mov
test
mov
xchg
pop
loopne
inc
out
sbb
sbb
sbb
cmp
adc
and
std
mov
xor
push
or
sub
mov
sbb
std
lcall
aam
pusha
test
cmp
aam
in
xor
push
xor
xor
and
pop
jnp
popa
add
add
dec
aas
jp
push
mov
xor
ret
dec
and
insb
cwtl
addr16
cmp
sarl
mov
gs
xor
xchg
test
jnp
fwait
data16
mov
mov
ljmp
stc
push
pop
leave
int3
sub
std
stos
sarl
xor
ret
mov
les
xor
pop
jl
bound
sarb
loopne
ja
jne
push
icebp
or
mov
jp
in
mov
inc
mov
jge
mov
inc
ds
loop
cwtl
mov
xchg
pop
insb
pop
out
mov
ja
mov
jl
push
mov
sub
adc
or
lahf
in
rclb
int3
or
adc
cli
xchg
js
pop
insl
dec
popf
pop
call
pop
jb
push
adc
or
stc
sub
ss
outsb
sbb
int
sub
sbb
stc
stos
xor
idiv
orl
mov
sbb
xor
nop
mov
lret
jns
xchg
roll
cmpb
mov
lock
stos
sub
xchg
jmp
test
and
jp
and
or
mov
mov
sbb
lods
xchg
lret
sub
pop
mov
test
pop
call
pop
not
js
pusha
test
cmp
loop
inc
stc
clc
lds
loope
add
ss
in
jmp
imul
jmp
and
add
iret
push
sbb
cltd
push
fmulp
add
cmp
jmp
jmp
or
jle
fists
cltd
stos
or
sbb
jns
mov
jmp
add
xchg
xchg
xchg
loop
mov
cs
lret
adc
cltd
loop
cmpsl
xchg
mov
pop
mov
adc
dec
mov
mov
push
mov
sbb
into
pop
push
jmp
sbb
icebp
stos
sar
subb
jge
mov
dec
pop
mov
mov
mov
xor
fidivl
push
mov
mov
jecxz
push
mov
pusha
test
sbb
cmp
stc
lea
mov
xor
and
mov
or
cld
push
inc
lods
push
mov
stos
fwait
ja
jle
out
add
mov
cmpsb
push
xchg
pandn
fidivrl
decb
test
pop
jbe
inc
pop
ret
xchg
out
jge
dec
xor
mov
test
or
dec
jl
sub
xor
jae
outsl
adc
lret
mov
nop
jae
pop
das
dec
adc
xor
mov
mov
iret
sarb
insb
repnz
push
das
out
cmp
adc
mov
jg
ret
in
enter
sub
cmc
loope
lock
mov
adc
lahf
sub
mov
sbb
mov
mov
push
test
add
aas
or
sub
mov
dec
mov
jp
cs
cmc
mov
cmc
dec
jns
adc
or
aam
inc
lret
icebp
lods
and
repnz
mov
push
jge
dec
mov
pop
cmpsb
mov
call
pop
test
dec
jmp
ja
pop
adc
test
dec
fsubrp
xchg
into
pop
cmpsl
cltd
mov
shlb
imul
or
cli
movsb
rclb
les
out
gs
sbb
sub
aad
test
int
sti
pop
loop
jne
add
fistpl
mov
shrb
mov
aam
push
and
stc
and
mov
jg
dec
in
cmpsb
or
mov
or
js
lahf
int
aad
popa
mov
sbb
xchg
xlat
mov
insl
insl
aaa
dec
lods
and
cmpl
fldcw
adc
fsts
adc
push
push
xor
leave
jg
icebp
mov
add
imul
xchg
pop
fstps
jns
jle
sbb
mov
scas
decl
dec
and
mov
cmpsl
insb
jo
js
jns
shrb
sbb
iret
push
mov
push
cli
in
push
pop
push
cmp
or
dec
add
inc
xchg
push
mov
mov
cmpsl
stc
inc
adc
pop
push
shll
and
fnstenv
scas
and
es
add
into
in
inc
mov
mov
mov
mov
fidivs
add
sarb
test
dec
mov
test
mov
or
push
jl
in
sbb
push
aam
fcoml
inc
jns
push
in
movsl
cmp
adc
sub
push
pop
cli
jg
sti
fwait
and
jae
ja
cmp
push
data16
sbb
repz
cmp
pop
inc
and
test
inc
push
imul
xchg
sub
or
ljmp
call
addl
movsb
call
sbb
mov
sub
ja
dec
push
mov
pop
or
fistl
dec
cmpsl
in
lret
push
movl
out
push
loop
stc
imul
insl
pop
aaa
push
fsts
jmp
test
lds
dec
orl
in
or
add
push
pop
xchg
scas
mov
pop
and
jmp
inc
pushl
sub
add
std
lods
push
mov
movsb
outsb
xchg
iret
pop
mov
icebp
cwtl
or
inc
add
out
mov
jne
iret
loopne
shlb
lock
roll
cmp
fisubs
in
dec
jns
dec
dec
mov
or
sbb
jg
shll
cmp
imull
movsb
jg
jmp
pop
pop
lret
out
adc
xchg
sub
outsb
inc
in
pshufw
dec
ljmp
sbb
ficomps
push
stos
sbb
popa
scas
xchg
jne
pusha
repnz
dec
dec
mov
cli
dec
xchg
cli
xchg
or
das
mov
jp
mov
inc
sahf
adc
dec
xor
and
mov
das
aad
outsb
push
jmp
add
ja
loopne
mov
int
sbb
cld
aaa
pop
push
pop
fwait
fwait
pop
fdecstp
sti
sbb
sti
ret
cmpsl
sub
mov
push
mov
mov
leave
jae
pop
mov
daa
push
jmp
push
and
std
dec
jae
push
sub
adc
add
test
mov
dec
shrb
loop
adc
push
or
imul
pop
push
cli
jmp
stc
or
pop
das
and
cmc
cmp
fimuls
jae
sub
movsb
repnz
rep
idivb
jne
hlt
jno
adc
sti
je
xchg
popa
inc
pop
xor
repz
mov
push
hlt
xchg
pushf
insl
mov
sbb
or
and
and
das
cwtl
sti
mov
cmpsb
push
loope
sbb
into
adc
xchg
cltd
cltd
adc
jne
push
fdivl
xor
sbb
test
lea
inc
addr16
data16
jo
cmp
test
dec
out
lock
jecxz
add
xor
xor
ret
sub
pushl
mov
pop
mov
mov
push
stos
inc
test
orb
xchg
movsb
aaa
pop
movsb
lahf
fnstcw
add
xchg
and
jns
enter
inc
mov
popf
push
pop
stc
cmp
inc
and
or
roll
cld
stos
dec
and
sub
ljmp
xchg
lds
cltd
test
shr
mov
lret
cmp
std
cwtl
sarl
push
sbb
jle
add
xchg
and
xor
adc
xor
leave
bound
add
movsl
aas
fistps
andl
loope
dec
dec
mov
fcompl
mov
sub
sub
loopne
iret
rclb
sti
add
mov
je
fiaddl
dec
mov
jnp
sti
xor
rcrl
xorl
and
xchg
inc
nop
mov
or
leave
sub
jne
mov
shl
dec
mov
leave
push
popf
out
in
enter
xor
test
mov
xor
pop
push
imul
cmp
aaa
stos
insl
mov
xchg
fidivs
fadds
jb
mulps
lock
inc
inc
and
dec
je
inc
mov
xor
fists
bound
ljmp
jo
xor
ljmp
aad
push
fsubrs
imulb
mov
xor
out
push
sub
jecxz
aas
sarb
fistps
mov
jp
inc
dec
mov
inc
hlt
push
add
cld
jb
mov
cmpxchg
mov
scas
dec
and
adc
xchg
pop
out
cmp
push
outsb
ljmp
and
cmp
enter
push
test
mov
jmp
movsl
and
add
movsb
xor
stos
aaa
mov
add
incl
cld
cli
inc
sub
div
std
arpl
add
out
sbb
lcall
cwtl
repnz
or
push
mov
in
int
pop
inc
repz
mov
dec
lock
xor
and
push
pop
or
inc
ljmp
shrb
aam
sub
out
rolb
jbe
test
sub
stc
sub
lcall
adc
sbb
rclb
lods
mov
or
fwait
xor
mov
push
adc
mov
addr16
pop
push
mov
sub
jp
pop
add
out
das
divb
stc
push
aam
jne
jne
xor
push
mov
pop
xor
inc
dec
data16
imul
xor
les
sbb
adc
dec
js
add
dec
sbb
mov
aaa
popl
lret
inc
scas
mov
icebp
das
out
incl
into
xchg
xchg
mov
lret
cmp
xchg
push
scas
inc
push
add
aam
mov
cmp
imul
push
fisttpll
sub
jmp
inc
flds
into
or
rcrl
out
clc
push
inc
leave
sub
adc
roll
add
pop
lahf
bound
xor
adc
push
shll
cmp
adc
jo
data16
jecxz
in
push
cmpsb
outsl
pop
xchg
adc
pop
cmp
jmp
cmp
and
adc
lods
rcrb
mov
dec
loope
divb
out
das
aaa
pop
outsl
aad
cmp
lcall
fs
xchg
inc
or
stc
xor
call
add
lahf
xor
mov
adc
jp
not
pop
inc
rcl
jp
lcall
jae
lret
sub
xor
cltd
fld
or
es
shr
cmp
into
mov
es
jbe
xor
ret
clts
test
test
js
out
push
pop
jl
mov
scas
rep
iret
jb
test
aas
cmp
out
andl
lret
movsb
add
adc
add
subb
or
adc
scas
insb
std
loopne
pop
push
dec
mov
icebp
pop
out
inc
imul
and
fldenv
fnstsw
cltd
sbb
cld
sub
xor
mov
sub
jp
xchg
jmp
mov
sub
mov
mov
call
and
mov
out
ret
or
ds
mov
pop
pop
clc
loope
adc
insb
pop
sub
sub
or
cli
daa
mov
jmp
insl
mov
xor
mov
pop
inc
shl
add
push
sbb
dec
push
cld
mov
dec
dec
add
test
mov
outsb
leave
div
mov
in
cmp
rcr
xlat
xor
dec
js
mov
push
mov
loopne
test
hlt
fcoml
out
jb
adc
cmp
and
mov
jne
leave
add
inc
or
add
rorb
roll
pop
insb
pushf
sbb
orb
jg
push
pop
push
hlt
notb
pslld
lret
xchg
or
ljmp
popa
xchg
idivb
scas
or
pop
inc
mov
or
popf
push
sub
jecxz
cld
mov
inc
push
test
je
inc
push
mov
push
jbe
fs
mov
daa
rcrl
loopne
jnp
lret
cld
sbb
cltd
loope
daa
test
daa
pop
push
inc
jge
call
mov
and
je
push
call
ja
cli
pushf
push
das
aam
mov
fnstcw
fisttpll
and
cli
and
cld
repnz
daa
adc
add
mov
pop
ja
push
pusha
mov
clc
add
dec
leave
or
jno
push
inc
nop
jns
lock
add
lret
pop
add
mov
dec
dec
std
pushf
push
adc
repz
loop
insl
sub
out
mov
sub
out
cmpsb
jne
pop
fs
inc
cltd
scas
mov
aas
rorb
popf
and
xor
mov
push
pop
cmpsl
xlat
push
cmp
mov
data16
fsts
sub
xor
test
test
sub
cwtl
pop
lret
clc
add
sbb
flds
ljmp
pushf
sub
adcl
nop
jg
icebp
aam
flds
mov
inc
pusha
mov
sbb
ss
rclb
test
adc
push
out
jecxz
stos
shrb
mov
outsl
xlat
sub
pushf
pop
push
call
sub
cmp
dec
xchg
pop
xchg
jnp
mov
inc
stos
ja
addr16
pop
fildl
jmp
sti
daa
or
sbb
sub
cmp
dec
xchg
pop
xchg
jnp
mov
inc
stos
ja
addr16
pop
fildl
jmp
sti
daa
or
fwait
stos
idivl
out
xchg
pop
xchg
sti
cmpsl
mov
inc
stos
ja
addr16
pop
fildl
jmp
sti
daa
or
sbb
sub
cmp
dec
xchg
pop
xchg
jnp
mov
in
add
adc
enter
nop
push
jg
dec
es
loop
pop
add
imul
out
xchg
mov
cmpsb
scas
les
push
outsl
push
jg
dec
es
push
das
inc
mov
pcmpgtd
out
xchg
mov
test
shl
test
lahf
paddw
jg
out
pop
dec
adc
outsb
loope
pop
xor
lods
clc
test
lahf
jg
imul
add
adc
inc
aas
or
xor
lret
xchg
in
outsb
dec
adc
inc
ret
repz
repz
adc
scas
scas
dec
cmpsl
pop
iret
xchg
sbb
jmp
push
pusha
jno
jl
pop
std
test
jns
mov
push
cmp
pop
scas
push
outsl
lcall
out
das
inc
push
mov
loopnew
adc
and
scas
movb
out
inc
jp
xchg
mov
or
cmp
xchg
pop
xchg
mov
push
fildll
cld
mov
scas
out
jno
fldenv
push
outsb
jecxz
out
or
xchg
scas
xchg
inc
testb
ss
es
inc
das
push
aas
jbe
jg
scas
fistpll
inc
in
out
jp
arpl
or
jno
pop
and
data16
test
ret
shlb
jns
addr16
cs
jp
inc
inc
or
popa
xor
test
ljmp
hlt
jae
push
pop
pop
dec
cmp
dec
inc
aas
jbe
popw
xchg
out
xchg
mov
cmpsb
scas
mov
push
outsl
push
jg
dec
es
push
das
inc
aas
jbe
popw
xchg
out
xchg
mov
cmpsb
scas
mov
push
outsl
sub
cmp
pop
ret
pop
push
es
incl
adc
loopne
movsb
shrb
bound
and
mov
push
clc
lret
inc
hlt
jmp
cli
jo
mov
mov
rolb
cmp
cld
xchg
cmc
push
ret
jne
sub
lods
mov
mov
clc
andb
dec
loop
stc
lret
jae
sub
arpl
fnstcw
add
add
ror
in
fnsave
scas
mov
dec
pop
insl
sub
frstor
daa
mov
push
daa
mov
adc
and
or
cs
xor
lret
push
bound
fldenv
insl
cmp
mov
lcall
push
nop
pop
bnd
test
cmpl
jbe
fs
xorl
pop
fisubl
fcmovnu
push
les
nop
jne
inc
subps
xchg
cltd
jae
jmp
cltd
loopne
mov
ret
stos
xor
test
dec
scas
jle
or
ret
ja
stos
hlt
pavgb
fbld
jle
xor
cld
xchg
in
inc
adc
mov
pop
out
stc
repnz
xor
adc
inc
icebp
push
popa
test
bnd
imul
pop
cmpb
pop
cmpl
mov
inc
int3
pop
push
imul
into
lods
pop
inc
rcrl
xlat
cmc
push
mov
mov
sar
dec
ljmp
add
mov
leave
pop
int3
or
fidivrl
ret
sub
mov
leave
imul
leave
inc
cmp
cmp
and
or
cltd
das
or
mov
sbb
out
xorl
outsb
fstpl
cltd
ret
cmpsl
jl
sti
sti
scas
adc
mov
icebp
clc
add
outsb
mov
or
aam
jbe
or
inc
aaa
xchg
lret
stos
sbb
loopne
and
mov
dec
mov
pop
jmp
int
lcall
mov
fcomps
pop
out
iret
pop
dec
fwait
jns
lcall
push
mov
ljmp
dec
arpl
xchg
mov
lods
stos
xchg
cmc
js
dec
orl
leave
ss
std
icebp
das
adc
sbb
cmovno
fbstp
or
cwtl
jle
test
sti
fcmovnb
je
lahf
stos
mov
mov
ret
push
addr16
nop
mov
andl
or
shl
pop
data16
or
mov
mov
xchg
in
lret
dec
pop
push
mov
iret
pop
aaa
pushf
dec
dec
leave
adc
jg
std
mov
mov
mov
adc
mov
pop
dec
out
sub
out
jmp
pop
push
int3
lock
or
imul
push
push
std
scas
cmpsb
xchg
pop
mov
or
xlat
clc
leave
test
call
cmp
fwait
push
into
in
cmp
inc
jp
lods
pop
pop
xchg
pop
xor
addr16
mov
xor
sbb
pop
popf
cli
jge
or
lahf
sbb
push
mov
lahf
xchg
loopne
jg
ss
fdiv
xorl
insw
lock
lret
sar
xor
clc
bound
inc
fcomps
enter
push
adc
push
xchg
lea
stos
das
mov
outsl
sbb
ljmp
ret
stos
out
jns
inc
mov
addr16
jg
inc
js
add
inc
mov
ja
roll
mov
int
push
fildll
flds
mov
mov
mov
mov
xchg
jo
leave
repz
or
sbb
ds
pop
aaa
push
dec
data16
mov
push
test
int3
fadds
jl
or
jl
dec
xor
int3
adc
pop
jle
and
mov
dec
mov
outsl
sub
cmpsl
pop
lret
filds
pop
ljmp
shll
aas
mov
inc
cwtl
sub
jne
mov
out
mov
sub
and
pop
adc
test
mov
loopne
mov
jmp
fisubrs
inc
inc
inc
sbb
inc
mov
dec
sti
sti
ja
movsb
mov
jno
leave
pop
scas
mov
sub
xor
jp
ds
das
mov
pop
push
jne
stos
cmp
and
lods
rol
and
fsub
ficompl
sti
in
pushf
pop
sub
jge
or
xchg
pop
pop
stos
push
bound
cmc
out
push
mov
mov
xor
pop
jo
bound
add
cmovp
or
pusha
adc
xchg
fbstp
shrb
dec
add
iret
jmp
leave
inc
mov
cmpsb
mov
movsl
sbb
dec
mov
push
enter
loopne
int
and
jle
push
push
dec
sbb
push
xchg
test
sub
and
sbb
xchg
je
dec
fidivrl
sub
dec
jno
das
cmp
cmp
adc
ret
sbb
bound
inc
cld
and
jbe
cmp
sti
std
xlat
push
pushf
jg
nop/reserved
das
jg
test
mov
dec
and
adc
in
cld
cmpsl
mov
pushf
push
and
fildll
sbb
pop
adc
push
int3
in
cmp
fnsave
mov
jge
loope
adc
cli
mov
mov
stos
sarb
jb
and
sbb
rorb
jmp
mov
sti
fwait
mov
push
and
xor
mov
jecxz
shrl
popa
add
pop
das
xchg
push
push
mov
call
pushf
xchg
andl
push
outsl
nop
push
icebp
lcall
xchg
adc
insl
adc
sub
pop
adcb
test
xchg
dec
sub
aad
push
jecxz
pop
addr16
test
cmc
jb
nop
mov
cli
lods
xor
sub
inc
or
insl
xor
lahf
into
sub
in
pop
in
rclb
js
xchg
cmpsb
rolb
into
jne
ret
ret
pop
aas
xchg
les
fsts
dec
adc
push
jle
test
sub
sbb
lret
pop
movsb
std
aaa
xor
ss
fcmove
mov
jg
mov
aad
sbb
pop
xchg
stos
sbb
mov
cmpsl
sarb
mov
nop
je
xor
test
jb
test
adc
into
rcll
addr16
mov
shrb
and
cli
jmp
insl
imull
rorb
sub
pop
sbb
popf
popa
adc
sarb
dec
pop
dec
stos
aaa
mov
push
push
leave
jne
dec
xchg
scas
aam
sbb
stc
mov
nop
dec
jmp
mov
inc
lea
adc
cmpsb
cmpsb
adc
aas
fs
mov
mov
es
test
or
mov
push
pop
iret
sbb
cmp
add
push
mov
pop
pop
sahf
mov
rcr
cld
call
sti
stc
test
cmc
sbb
out
push
xor
add
jae
popa
mov
adc
or
insb
iret
sar
or
push
es
jns
pushf
in
add
pop
je
mov
xor
pop
jnp
test
int3
nop
jge
outsl
mov
mov
imul
add
insl
pop
push
fnsave
cmp
or
xchg
inc
iret
pop
loopne
insl
clc
call
imulb
and
sbb
adc
mov
addl
mov
subb
shlb
outsl
sbb
xchg
or
jns
pusha
mull
cmp
mov
sub
roll
push
sub
sub
into
push
xchg
hlt
dec
sbb
in
das
sbb
sub
inc
jmp
loop
lock
jle
and
mov
sbb
pushl
inc
inc
dec
dec
adc
jp
ret
aad
adc
cli
test
push
mov
fwait
int3
push
add
jne
add
sbb
xlat
and
xlat
out
jae
push
sbb
iret
cmp
shl
mov
packuswb
xchg
xchg
xchg
jmp
or
mov
loope
cs
sbbb
push
outsb
les
xchg
jecxz
add
rcl
sub
ds
adc
out
add
out
lds
pop
fcmovbe
bnd
sbb
cmp
movsb
jge
mov
rclb
fs
iret
jge
xchg
push
pop
push
test
lods
subb
jne
rcrl
sbb
fmull
dec
add
pop
adc
and
pop
mov
scas
les
push
mov
popa
sti
xchg
jl
mov
or
test
adcb
cmp
loope
pop
out
and
or
sbb
xor
jmp
jb
mov
mov
scas
les
pop
aaa
repnz
and
mov
adc
jp
mov
xchg
sti
fstpl
lahf
or
repz
pop
lret
fmul
jg
stos
cmpsl
dec
cmp
pop
cmp
popf
fsubp
xor
mov
subl
lock
and
xor
pushl
adc
dec
pop
cmc
mov
jnp
test
nop
std
pop
es
jge,pn
mov
repnz
sub
xor
xchg
js
sbb
outsl
shll
sahf
sub
fsubrl
mov
jecxz
and
nop
ljmp
movsb
xor
mov
or
test
movb
leave
mov
sti
mov
pinsrw
jmp
pop
cmp
dec
in
enter
xchg
pop
ss
add
jne
aaa
push
mov
movl
pop
cli
fsubr
jle
cmp
cmp
andl
inc
pop
mov
inc
stos
orb
pushf
add
call
je
add
mov
aad
stos
xchg
xchg
int3
mov
bound
aam
or
mov
mov
pop
mov
xchg
fistps
movsb
aad
jb
insb
sti
dec
and
mov
aad
lret
loop
sbb
pusha
movsb
mov
out
pop
fimull
mov
pop
rcll
dec
dec
mov
and
adc
mov
and
pop
imul
xchg
sbb
mov
pusha
je
mov
int3
je
mov
lds
xor
lds
sbb
push
fidivrl
les
insl
jp
mov
cltd
clc
pop
jecxz
rcl
in
mov
mov
cld
leave
cmp
sbb
repz
cmp
pusha
mov
ror
xchg
popf
sahf
sbb
xchg
jp
jl
cmpsl
jle
xchg
adc
or
xchg
lods
fldl
jecxz
xchg
jo
bound
subb
and
mov
pop
mov
or
stos
dec
pop
loopne
push
mov
pop
push
cmp
mov
and
das
push
negb
push
popl
pop
pop
inc
in
mov
xor
fidivrs
dec
sub
mov
call
xor
dec
call
jo
adc
mov
call
or
cmp
lods
sti
lods
sub
loope
jns
xchg
inc
pop
pushf
out
push
in
jle,pt
jae
xchg
outsl
testl
and
das
mov
fnsave
das
sub
les
push
jle
mov
popf
lcall
notb
je
cs
pop
push
sub
or
loope
in
ficompl
test
mov
addr16
lcall
roll
adc
add
call
or
mov
dec
or
inc
dec
mov
test
inc
dec
cmp
popa
cltd
mov
pop
enter
adc
pop
sbb
sub
dec
push
fisubs
cltd
ret
in
invd
dec
bound
xrelease
jecxz
aaa
into
cmpl
out
sbb
or
fisubrs
jge
outsl
cmpsb
jnp
sti
ds
imul
repz
lahf
xor
in
add
cmovb
daa
in
jecxz
movsb
push
shlb
mov
rorl
inc
and
xchg
jmp
adc
call
sahf
dec
jb
xor
in
lahf
fmull
mov
fs
pop
add
repz
push
inc
cmpsb
pusha
in
fldcw
add
sub
imul
fisttpl
mov
imul
fwait
mov
pop
push
add
pop
dec
jmp
std
subb
jo
mov
pop
push
pop
sahf
test
movsl
cld
mov
xor
mov
sub
dec
rcll
jle
fdivs
xor
pop
insl
mov
and
hlt
cmpsb
sbbb
lret
test
lock
lahf
inc
mov
pop
insl
adc
push
ljmp
int
push
test
ds
in
sbb
xor
pop
xor
push
aaa
test
arpl
shlb
flds
in
jns
jne
fdivs
sbb
xchg
push
or
push
movsb
dec
xchg
or
in
sbb
mov
mov
push
cmpsb
int3
insb
push
dec
mov
dec
in
stos
je
jge
pop
pop
dec
loope
lock
mov
inc
mov
jp
jb
mov
mov
lock
bound
dec
jge
dec
daa
ss
scas
inc
add
insb
jb
cmp
shl
clc
push
xchg
add
andl
pop
je
mov
jne
int
and
daa
adc
and
fiadds
pop
xor
sub
ret
movsb
aad
int3
test
jbe
push
enter
jae
mov
pop
sub
jl
add
xchg
lahf
jge
push
and
mov
sub
out
dec
jecxz
sbb
fisubs
cwtl
insl
and
popa
mov
orl
adc
pop
mov
ror
jb
pop
xchg
ljmp
and
arpl
add
hlt
jmp
shll
ljmp
repnz
imul
push
fs
in
imulb
fimuls
inc
jl
jl
add
xor
push
dec
popf
test
sbb
cmp
cmp
psrld
scas
mov
xchg
and
in
int3
movsl
jmp
or
inc
mov
sahf
into
cmp
and
cmp
icebp
cmp
out
jb
cmc
sbb
out
sub
rolb
xchg
jae
dec
arpl
cmp
or
stos
push
fadds
das
mov
rclb
and
mov
shrl
imul
sbb
cmp
cmc
pop
or
dec
or
repnz
adc
out
adc
mov
or
jecxz
cmpl
or
jge
pop
and
and
jl
es
xchg
xchg
es
jle
or
pop
adc
notl
das
cltd
add
mov
jmp
stos
jle
adcl
jae
leave
dec
mov
cmp
jl
aaa
dec
mov
in
ljmp
aam
mov
fistpl
popf
pop
out
pop
xor
add
inc
lds
push
inc
add
fidivl
xorb
cmpsb
xor
repnz
cmp
push
in
aaa
push
popl
stc
mov
mov
jnp
stc
ss
xchg
fwait
and
div
fdivrs
shlb
aas
xor
xor
inc
push
fadds
xor
sbb
stc
sti
dec
jbe
lods
add
push
xchg
push
int
xor
pop
std
rorl
stos
and
outsl
mov
cmp
adc
std
insl
sbb
loopne
rcrl
je
mov
mov
movsb
adc
shl
data16
aam
pop
lds
push
out
loope
push
in
std
ja
mov
add
mov
and
sub
adc
cld
mov
xchg
and
outsb
test
or
sub
imul
fists
sbb
or
add
movsl
lods
mov
or
pop
push
sub
enter
aaa
dec
xchg
lods
fstl
or
in
rcr
xchg
push
xchg
popw
nop
add
cwtl
dec
popf
loopne
icebp
in
pop
imul
pop
or
leave
mov
xchg
xchg
mov
cmp
int
icebp
subb
shll
or
inc
retw
inc
loop
in
and
in
movl
cmp
mov
sub
mov
test
int3
lcall
inc
call
and
lods
cmpl
orb
in
jle
int3
int
les
sbb
aas
test
mov
push
xchg
mov
dec
jg
stos
xlat
fxch
scas
repz
mov
inc
fsubs
or
outsl
notl
pop
jge
xor
pop
lds
jne
push
ljmp
mov
fidivs
fisubrl
adc
lret
mov
push
or
shl
adc
pusha
mov
js
mov
pop
sub
sbb
or
pushf
adc
sbb
jge
jge
cmp
sub
push
pop
and
cmpsb
pop
add
or
lock
out
push
gs
arpl
shr
push
jg
jp
shl
sbb
gs
sub
dec
jmp
shll
call
cs
or
test
and
lahf
in
cmp
cmpsl
pop
mov
add
mov
ja
xor
jmp
adc
loop
dec
pop
or
lods
es
xor
iret
outsl
dec
mov
rorl
sub
push
sbb
pop
cli
pop
mov
mov
and
or
dec
aaa
nop
mov
xchg
outsl
jge
mov
inc
xor
sbb
sub
cmp
ss
xchg
filds
cwtl
ja
leave
cmc
sbb
mov
sbb
mov
inc
rclb
jl
xor
add
sub
or
clc
arpl
xchg
and
pop
icebp
arpl
add
push
mov
mov
fnstsw
sbbl
adc
mov
inc
dec
fdivs
mov
cltd
loop
scas
cmp
in
push
outsb
ljmp
push
ret
mov
or
mov
xor
jg
hlt
daa
push
inc
xor
adc
hlt
xchg
xchg
mov
int3
cli
ljmp
ss
add
lahf
jmp
inc
pushf
pop
sub
inc
in
pushf
cwtl
push
je
lods
cli
jmp
movsb
out
movsl
adc
xor
sarb
cmp
mov
ret
insl
xchg
rclb
mov
and
repz
pop
mov
add
rcpps
into
fldt
inc
ret
lcall
jae
push
xchg
or
es
dec
mov
cmp
pop
xor
lea
lds
cs
mov
ja
rcrl
sahf
lods
nop
les
repz
xor
mov
xor
ja
jno
dec
rcrl
lret
dec
scas
outsb
mulb
fildll
or
push
iret
imul
mov
mov
in
sti
ljmp
sub
push
mov
call
xchg
insl
mov
xchg
fistpll
outsb
lea
rolb
mov
xchg
pop
int
loope
cmpl
dec
inc
icebp
test
or
sbb
adc
mov
mov
xorl
jb
outsl
outsl
push
pusha
push
sbbl
or
sub
pop
sub
jge
repz
inc
xor
movsl
loop
call
iret
out
in
addr16
sarb
mov
xor
shrb
fsubrl
out
push
aaa
inc
sbb
inc
das
or
inc
and
call
sarb
inc
cmpsb
jmp
addl
inc
pop
push
int
push
push
add
popf
mov
xor
test
sbb
push
jnp
in
movsl
cmp
jae
mov
ljmp
mov
call
pop
fidivs
pop
sbb
pop
dec
add
aas
scas
std
pop
jmp
testb
ret
nop
insb
addr16
jb
pusha
movsb
scas
and
aad
mov
xorb
pop
sbb
mov
xchg
jp
decb
jnp
sbb
jp
push
mov
sbb
rol
jns
stos
cmp
lods
dec
mov
sti
shrb
mov
lahf
sbb
loop
cld
sbb
data16
sub
dec
and
jg
pop
xlat
sbbb
pop
mov
cmp
aas
imul
adc
pusha
test
out
lods
mov
nop
arpl
insb
jge
scas
push
add
ss
mov
pop
adc
icebp
pop
mov
xchg
icebp
sub
cld
push
push
stos
xchg
adc
dec
fists
popa
aas
xchg
mov
xchg
mov
shll
scas
fnsave
std
xor
mov
add
cmp
cmp
in
call
push
jl
push
fcmovnbe
inc
jb
pushf
shrb
nop
jns
je
cmpsb
and
pop
es
insl
add
int
mov
push
lods
pop
shr
xchg
inc
adc
xor
stc
add
icebp
push
scas
scas
mov
xchg
cmp
sbb
std
jle
in
cmpsl
dec
pop
out
jb
cs
mov
stc
cmp
aaa
pop
push
fisubl
jmp
inc
sub
es
push
das
inc
aas
jbe
popw
xchg
out
xchg
mov
cmpsb
scas
mov
push
outsl
push
jg
dec
es
push
das
inc
aas
jbe
popw
xchg
out
xchg
mov
cmpsb
scas
mov
push
outsl
push
aaa
ss
es
push
das
inc
xchg
jbe
popw
xchg
aaa
xchg
mov
cmpsb
scas
mov
push
outsl
add
aaa
dec
es
push
das
inc
aas
testb
push
sbb
cmpsb
test
daa
dec
inc
or
pusha
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
test
mov
int
mov
xchg
lock
rolb
push
and
xor
inc
jo
pusha
fs
je
test
mov
lock
in
hlt
mov
and
xor
inc
sbb
pusha
fs
je
test
mov
lock
in
hlt
rolb
add
popa
inc
and
aaa
daa
ds
jmp
lret
rolb
dec
int3
sarl
push
fnstenv
js
xor
xor
push
int3
dec
add
sbb
sbb
mov
add
push
test
jnp
lods
into
cli
std
xchg
and
lods
xor
mov
inc
fbld
aad
clc
test
mov
addr16
sub
mov
iret
cltd
ffreep
xchg
lret
loopne
jo
sahf
pushf
pop
incl
les
lock
dec
or
sbb
sbb
test
and
pusha
fwait
push
je
mov
orb
icebp
pop
sub
in
inc
and
aam
pop
adc
mov
mov
mov
lock
in
hlt
rolb
and
xor
inc
jo
pusha
fs
je
loope
mul
loop
repnz
jo
je
jno
push
jne
je
xor
push
repnz
cmc
andb
mov
jbe
jae
pop
inc
xor
mov
xor
push
push
das
jecxz
xchg
call
sbb
hlt
rolb
and
xor
inc
jo
pusha
fs
je
test
mov
lock
in
hlt
rolb
and
xor
inc
jo
pusha
fs
je
test
lret
inc
adc
jmp
lods
sbb
fdivrl
sub
aad
fs
cmp
jecxz
xor
pushl
push
add
mov
mov
repz
xor
push
sbb
mov
add
mov
cmp
sbb
sahf
ss
data16
mulb
fldl
mov
ja
lahf
in
xor
fisttpll
inc
sbb
mov
sbb
xor
and
jl
inc
cmpl
jmp
sbb
rorb
lahf
xlat
aas
aam
push
mov
test
mov
fdivrl
sub
aaa
add
jecxz
and
xchg
cmp
inc
push
in
arpl
mov
std
sub
cmpsb
push
jg
sub
xchg
jmp
cmpl
rcll
jne
push
stos
cwtl
imul
pop
xchg
iret
mov
nop
in
inc
cmp
xchg
stos
mov
movsb
pushf
fsubs
mov
pop
ja
clc
repz
jmp
pop
gs
jno
out
lahf
stc
mov
lea
sub
mov
pop
sub
popa
mov
imul
adcl
test
inc
icebp
ljmp
inc
and
mov
ljmp
aaa
and
je
push
jl
inc
jp
shll
mov
repnz
cli
inc
sbb
jle
in
fdivs
xchg
xchg
xchg
inc
xchg
hlt
xchg
mov
fsubs
dec
mov
cltd
out
movsb
sbb
jo
fmull
adcb
int
scas
or
out
sub
stos
push
imul
addl
jge
and
pcmpgtb
addr16
dec
psadbw
push
cmp
movsb
pop
mov
aas
xchg
jbe
push
outsb
dec
sub
mov
xor
xorps
sahf
xchg
pop
adc
stos
aas
repz
mov
mov
and
adc
and
gs
inc
fwait
cmc
out
sub
jo
andb
xlat
inc
bound
inc
popf
mov
out
ja
ss
or
cli
pop
xorl
mov
js
mov
sub
sbb
jg
gs
nop
popf
jne
cmp
int
xchg
imul
cmp
sahf
shll
sbb
in
inc
mov
fisubrs
cmpsb
mov
adc
ds
pop
jmp
in
jno
add
push
push
test
imul
jmp
stos
pusha
jo
push
jb
stos
jbe
jge
test
xchg
ds
and
and
add
xchg
mov
pop
outsb
cmp
jmp
sbb
out
aam
lret
jle
dec
shr
jp
outsl
movsb
call
or
test
jmp
jmp
jp
push
movsw
inc
cmc
pop
dec
shl
cmp
xchg
mov
jmp
and
and
ja
cwtl
inc
mov
std
outsl
mov
or
xchg
mov
imul
lock
pop
out
lret
pop
lahf
frstor
popa
repnz
sti
mov
rcrl
cld
sarl
ljmp
mov
or
sub
roll
add
mov
pop
repz
sbb
stos
outsb
pop
cmp
pop
pop
xor
push
jb
mov
mov
or
jns
mov
pushf
scas
push
cmp
dec
and
add
sarl
xor
xchg
js
push
fwait
stos
cmc
popa
rep
mov
jmp
stos
pop
adc
cmp
scas
mov
jne
mov
jg
jmp
into
xchg
test
pop
lods
repnz
add
nop
xor
ja
jl
cld
lods
mov
sbb
gs
hlt
sbb
pop
sub
push
lods
lods
lret
push
push
cmp
hlt
addr16
inc
mov
std
or
push
fisttpl
stos
push
nop
fisubrl
and
outsb
call
in
les
aas
push
adc
jb
loopne
push
and
cmp
xlat
jmp
sub
in
sahf
pop
jl
rcll
lods
adc
inc
or
mov
aam
pop
pop
pop
mov
mov
shr
in
std
les
ljmp
dec
cmp
popf
je
mov
into
xor
cmp
pop
int3
jno
pop
aaa
outsb
jns
xlat
dec
push
xchg
ficompl
repnz
in
lret
mov
push
fwait
push
aam
mov
mov
mov
cmpsl
test
dec
adc
xchg
int3
xchg
fs
test
jne
dec
test
stc
xor
movsl
inc
jno
xchg
cmp
mov
push
push
and
mov
test
ret
in
mov
mov
loopne
lods
aaa
cli
xor
push
sbb
call
xor
inc
mov
add
pop
jle
inc
imul
inc
mov
andl
add
jle
and
mov
mov
enter
mov
ja
lahf
dec
push
into
sub
dec
fwait
xorb
bound
in
xor
insb
push
pop
bound
cmp
dec
dec
in
pop
aaa
scas
jecxz
mov
cmpsb
aam
pop
sub
pop
popa
data16
negb
push
jg
pop
cmp
cltd
out
imul
mov
rcll
cmc
pop
mov
mov
cli
dec
xor
shll
jne
sarl
shld
shl
repz
shrl
je
imul
add
inc
pop
jge
mov
and
or
dec
fidivrl
insl
jo
push
jno
insl
ret
clc
sbb
cmp
out
je
and
in
stc
add
out
xchg
pop
mov
sub
shrb
push
sahf
pop
jne
jne
int
push
pop
pop
clc
sahf
jnp
dec
inc
dec
mov
or
cmp
inc
lods
xor
jmp
imul
inc
adc
stos
int3
lcall
inc
stc
test
mov
add
add
and
lds
dec
mov
rclb
xchg
aas
dec
int
dec
fld
sub
je
mov
mov
sti
pop
pop
push
out
gs
lods
push
jp
push
pop
mov
fwait
aam
mov
cmpsb
sbb
loop
mov
mov
mov
fs
sbb
ljmp
pop
cmc
xchg
ficompl
xchg
or
out
out
outsb
aam
push
es
mov
mov
jno
adc
in
aad
dec
jge
mov
xchg
mov
arpl
lock
call
std
test
mov
dec
mov
push
cmc
adc
pop
dec
out
pop
mov
fadds
out
mov
xchg
pusha
data16
rolb
loopne
sub
sbb
sbb
mov
dec
xchg
add
adc
movsl
dec
loope
dec
clc
ljmp
lock
mov
scas
inc
int
cld
vandpd
cli
pop
es
pop
sub
lods
adc
sub
mov
and
inc
js
cmp
pop
fiaddl
sar
cmp
dec
mov
out
enter
sub
push
int
fs
aas
mov
jg
push
sub
jns
pop
mov
mov
push
sbb
movsl
loopne
add
outsl
insl
xchg
jmp
repz
jne
mov
aas
stos
lds
nop
push
mov
cmp
push
mov
or
inc
test
adc
jg
in
jnp
cmpsl
rol
and
mov
subb
sub
push
sbb
in
mov
or
lock
inc
and
lret
stc
mov
jle
sbb
fld
outsb
ja
mov
and
ds
int3
andl
ja
shll
loopne
in
sbb
iret
pop
das
dec
push
push
shrb
nop
mov
mov
movups
cwtl
rorb
mov
out
xchg
sub
mov
scas
mov
cmp
xor
sub
decb
pop
insb
mov
lahf
stos
incl
or
xor
add
push
pop
dec
and
es
stos
mov
sbb
xlat
sub
add
jb
pop
aad
and
cmp
loopne
xor
out
pop
cmpsb
jmp
test
in
inc
ret
icebp
inc
xorl
mov
push
cmp
mov
cmp
xor
mov
add
fwait
sbb
popl
pushf
inc
gs
inc
mov
mov
pop
mov
movsb
fst
roll
lods
pop
std
mov
es
clc
push
xlat
fdivl
jmp
mov
rol
hlt
add
dec
shll
sbb
and
fcomip
or
push
and
fistpl
popf
andb
add
mov
inc
xchg
aad
dec
repnz
inc
add
fmul
in
mov
xor
mov
ss
xor
lods
mov
scas
adc
mov
adc
leave
adc
sub
push
js
xor
cmp
xchg
out
cmc
push
dec
sti
push
repz
jns
das
das
rcr
aaa
jae
push
outsb
rolb
subl
mov
mov
xchg
es
cwtl
xchg
dec
push
sub
mov
int3
push
and
int3
push
pop
fisubrl
inc
shl
and
mov
pushf
cwtl
xchg
in
and
pop
dec
loop
mov
pop
in
je
and
xchg
roll
push
mov
ljmp
jne
inc
mov
ret
lcall
xchg
in
cmc
cli
cs
xlat
insb
sub
fwait
cmpsb
movsb
rorb
mov
jb
mov
dec
cli
lds
xor
cs
jo
in
push
ret
mov
push
xorb
movsb
hlt
mov
add
out
mov
stos
lds
lea
sbb
scas
jecxz
xchg
xor
es
loopne
fwait
push
xor
into
xchg
push
mov
jns
lret
mov
push
bound
lahf
sub
or
es
stc
xor
clc
stc
test
or
inc
fsubrl
std
in
scas
movsl
inc
sahf
sbb
xchg
pushf
jmp
inc
int3
and
arpl
int3
pop
std
or
pop
test
dec
xor
ret
sti
int
dec
rclb
mov
stos
inc
out
pop
daa
fstl
mov
rcrb
adc
sarl
sub
and
popa
sub
cmp
and
sbb
enter
clc
aaa
sub
add
push
cwtl
lret
shrb
dec
mull
test
pop
pop
loop
dec
test
and
into
pop
sbb
add
mov
popa
enter
movsl
xor
mov
cmp
mov
sahf
ret
shll
jg
scas
pop
mov
cmc
mov
in
loop
mov
xor
lcall
popf
leave
pop
jns
lods
jnp
add
into
dec
inc
pop
leave
dec
lret
mov
xchg
ret
inc
outsl
in
shrb
fstpl
xchg
ret
fsin
sub
lea
roll
push
sub
lods
or
dec
int3
sbb
fildl
addr16
dec
out
jg
adc
mov
insl
test
subb
popa
lds
and
push
repz
mov
sbb
rclb
cmpsb
lods
add
lret
sahf
mov
test
fistpl
in
sbb
hlt
fwait
and
test
dec
mov
or
fdivrl
popw
fwait
xlat
and
repnz
inc
test
pop
mov
test
push
or
pop
out
call
xor
subb
ja
push
clc
cmpsb
loopne
mov
arpl
std
gs
pop
push
xor
sub
mov
stc
push
test
add
pusha
xor
push
lahf
jb
inc
jbe
enter
loop
pop
les
jo
in
or
ficoms
subb
add
div
mov
sbb
int
push
addl
rcrl
push
arpl
adc
mov
outsb
fldenv
int3
xchg
imul
int
add
ret
out
addb
mov
pop
mov
dec
adc
push
std
inc
adc
in
mov
inc
pop
inc
mov
cltd
and
int
mov
je
push
xor
out
testl
movsl
cmp
in
dec
push
cli
xchg
add
xchg
in
mov
dec
sahf
ss
fsubr
push
adc
adc
mov
es
test
nop
std
mov
dec
or
mov
pop
pop
daa
fcmovne
inc
sti
loopne
cmp
xor
adc
cmpsb
cmc
mov
ffreep
ret
das
push
push
sub
push
jecxz
and
orb
popa
fcoms
int
call
pushf
jecxz
jno
jns
enter
ds
push
adc
dec
loop
fisttpl
ret
xor
pop
out
jl
xor
es
sti
mov
adc
jo
lea
cld
mov
outsb
xor
mov
dec
addb
xorl
cli
stos
arpl
call
lret
xor
push
pop
sbb
xor
inc
insl
cmp
mov
sbb
push
xor
pop
imul
out
jle
popa
in
fmul
cmpsl
sbb
mov
mov
adc
and
fidivrl
mov
add
jmp
xor
nop
aam
mov
jnp
int3
sarb
out
lods
mov
pop
lret
leave
cld
ja
sub
fidivrs
add
add
mulb
push
daa
cmp
lods
dec
jge
mov
nop
adc
cld
in
xchg
lods
pop
push
dec
insl
mov
mov
dec
pushf
xlat
and
les
inc
cltd
aam
in
jmp
idivl
cmp
rolb
cltd
jno
out
mov
lock
fadd
in
jle
pop
outsb
jns
dec
pop
mov
push
xchg
rclb
adc
loope
xchg
movsb
data16
ret
ja
insl
rolb
and
jl
pop
adc
mov
mov
das
iret
dec
cld
pop
mov
xchg
pop
aam
in
and
test
dec
les
jae
adc
data16
pushf
mov
icebp
inc
lret
inc
into
in
or
inc
dec
xor
test
rorb
inc
sub
jecxz
loopne
xchg
dec
mov
ror
pop
push
jle
ret
jns
push
and
push
movsb
jnp
ja
sub
sub
movsl
lods
stc
mov
xchg
jns
jbe
dec
xorl
xor
push
xor
jp
addb
sbb
push
mov
dec
jno
push
leave
jl
cmpsl
scas
mov
std
pop
in
test
popf
mov
outsb
inc
les
adc
pop
setne
cli
test
mov
cmc
mov
ret
push
cmpsb
inc
inc
dec
out
jo
faddl
add
sbb
pop
inc
aad
aas
mov
ret
xor
je
cmp
xor
and
mov
mov
mov
iret
in
xchg
icebp
clc
cmpsl
pop
mov
mov
pop
pushf
cmp
xor
mov
cli
add
std
gs
lds
mov
sub
call
ljmp
leave
clc
cmpsb
loop
cmp
xor
insl
ljmp
sbb
and
jnp
ret
cmpsb
test
mov
lods
scas
sbb
inc
cmp
imulb
jns
cmp
ljmp
iret
outsb
mov
test
aaa
sbb
or
flds
into
cli
jp
mov
pop
cmp
cmp
loop
mov
std
fdivrp
inc
mov
push
pop
mov
push
aad
fs
adc
shl
clc
movsb
dec
insl
dec
inc
es
dec
ss
mov
outsb
cmpsb
mov
mov
rcrb
xlat
fildl
cmp
outsb
je
cmp
dec
mov
cs
cmp
loope
mov
cmpsb
or
iret
dec
or
mov
xor
xchg
lock
mov
and
jge
mov
pop
mov
in
imull
mov
shll
aam
cmp
push
cld
xchg
mov
fs
and
or
lret
repnz
dec
add
add
adc
nop
cld
mov
adc
cld
iret
inc
cpuid
lahf
push
push
mov
fdivrs
aaa
jmp
imul
xor
mov
cs
push
nop
aaa
mov
faddl
sub
mov
xor
inc
cmc
rcrb
pop
jne
scas
xchg
bound
les
pop
push
inc
ljmp
loopne
push
repnz
cmpsb
mov
xor
sub
xor
xchg
and
es
cli
push
jne
lret
inc
test
mov
jle
ret
sub
gs
xor
js
sub
daa
std
or
dec
clc
repnz
pop
es
jb
in
mov
js
outsl
pushf
jp
inc
data16
ret
in
push
in
repz
mov
outsb
aaa
imul
loopne
cmp
cmp
lods
jno
pusha
add
adc
lret
jmp
push
je
fidivl
out
adc
mov
mov
repz
call
fidivrl
adc
jo
imul
pop
flds
adc
add
cli
mov
scas
in
jbe
xor
adc
aad
dec
sub
aam
push
jne
jg
mov
and
loope
stos
gs
popf
movsl
mov
mov
cmp
add
mov
and
adc
test
in
arpl
push
pop
cmp
call
gs
gs
and
mov
mov
es
cmpsl
dec
sub
inc
mov
sbb
stos
cmp
clc
jae
push
mov
mov
cmp
out
rorl
pop
mov
mov
xor
cmpsb
es
scas
fldenv
fs
dec
mov
insb
mov
scas
or
xchg
rclb
mov
xor
addr16
lret
pop
dec
xchg
cmp
fs
cmp
lock
leave
xchg
push
mov
mov
jl
xchg
jne
mov
pop
xchg
cmp
clc
adc
jmp
adcl
xor
nop
jg
xor
aam
icebp
mov
mov
jecxz
in
mov
push
int3
sbb
mov
fisttpll
icebp
push
adc
pushf
xor
stos
out
cmp
push
imul
sub
cmp
lea
push
xchg
mov
xchg
mov
xor
fstl
xchg
scas
ljmp
jg
or
stos
sti
stc
cmp
lea
or
repz
and
cmpsb
pop
xor
insb
mov
sub
sbb
push
stos
dec
dec
test
cltd
popf
xor
inc
lods
repz
nop
insl
sub
std
inc
out
gs
pop
leave
rcrl
xor
add
int3
lds
xor
pop
icebp
dec
hlt
push
inc
pop
xchg
paddq
out
in
xor
fdivrl
sub
out
jns
push
call
pop
jno
mov
movsb
xlat
or
sub
orb
or
xlat
pop
xchg
mov
mov
pop
pop
bnd
mov
mov
jp
out
cmp
add
lock
mov
in
jmp
popa
aas
insl
dec
shr
sahf
aad
push
dec
xor
add
dec
lcall
pop
mov
ror
loopne
dec
ds
mov
es
push
and
movsb
pop
sub
jle
lods
jb
out
mov
dec
sbb
fsub
sub
push
inc
or
movsb
mov
push
mov
ret
inc
pushl
daa
pop
add
pop
push
mov
dec
mov
pushf
pop
add
les
push
imul
add
dec
adc
xor
ret
push
repz
inc
divb
stos
daa
loop
ret
push
dec
xor
test
push
add
lea
shlb
adc
inc
xor
cli
and
ret
fsubl
xor
mov
rsm
push
mov
daa
sbb
rorl
test
and
out
mov
push
push
adc
fmull
subl
out
cmp
pusha
movsb
xor
mov
sub
iret
mov
mov
shrl
movsb
or
push
dec
ficoms
xchg
stc
in
jno
popa
leave
mull
ljmp
je
pop
jp
test
mov
cltd
jno
rolb
inc
enter
pop
and
gs
push
fstps
ljmp
fdivrs
lock
iret
jne
in
mov
scas
jne
inc
or
jns
arpl
pop
pop
loopne,pt
jne
pop
xor
int
das
mov
pop
decb
ljmp
dec
repz
lock
loopne
mov
ror
sbb
push
loope
ljmp
icebp
sti
lret
roll
jb
ret
push
rcrl
repnz
lods
mov
push
test
insl
int3
dec
gs
and
shlb
push
pusha
bound
add
inc
inc
sbb
jecxz
iret
enter
test
cmp
dec
mov
jno
daa
push
dec
loopne
jno
sub
push
pop
out
gs
cmp
fs
xor
test
xor
mov
mov
lock
in
hlt
rolb
and
xor
inc
jo
pusha
fs
je
test
mov
lock
in
hlt
rolb
and
xor
inc
jo
pusha
fs
je
test
mov
lock
in
hlt
rolb
xor
pusha
gs
je
test
mov
lock
shlb
xor
mov
clc
fcompl
shlb
pushf
mov
in
movsb
mov
mov
or
ds
dec
dec
pop
jge
insl
jl
mov
mov
std
in
in
cld
dec
push
or
cmp
das
sub
xchg
or
movsl
int
test
shl
adc
es
pop
dec
cmp
or
push
jl
mov
aaa
push
and
cmp
xor
cmpsb
push
cmpsl
or
nop
pop
daa
xchg
rcr
fldl
inc
xor
imul
ret
cmp
leave
fmull
cld
insb
loopne
int
popf
sbb
lcall
pop
mov
fadd
nop
sarl
mov
cmc
pushf
shrb
cld
mov
add
pop
pop
jecxz
int3
rol
rcrb
dec
mov
sbb
pop
and
dec
and
sbbl
scas
and
shrl
orl
push
divb
jno
or
sub
sub
xchg
jge
scas
mov
cmpsb
mov
std
cmc
push
in
adc
add
xor
push
dec
jge
or
out
jmp
ret
mov
out
orb
jns
push
xor
and
or
popf
hlt
add
mov
xchg
mov
jge
pop
inc
jg
sub
or
sub
out
int
stc
int
in
leave
cwtl
mov
in
cld
sbb
sub
cmp
dec
dec
pop
jge
insl
jl
mov
mov
std
in
in
cld
sbb
sub
cmp
dec
dec
pop
jge
insl
jl
mov
adc
icebp
out
ljmp
push
xchg
push
mov
mov
inc
dec
shlb
das
out
dec
pusha
and
sahf
popa
sbb
mov
add
ret
xlat
jne
mov
push
lret
lds
mov
aam
outsl
push
or
std
sbb
mov
test
lods
in
push
add
movsl
mov
add
dec
gs
out
lcall
adc
scas
ja
add
lahf
cmp
aas
xor
into
lahf
pop
orl
and
jno
jg,pn
mov
cmp
cmpb
sub
mov
scas
jmp
stos
ss
cmp
sub
push
iret
rolb
fldt
lods
clc
int3
lods
pop
int
fildl
fsubr
cmp
inc
loopne
cld
outsb
xor
adc
pop
inc
inc
cmpsb
sahf
dec
aaa
push
rcl
pop
andb
jno
sbb
in
dec
test
and
cmp
push
rol
out
adc
mov
inc
mov
xor
cmp
xlat
or
xchg
mov
enter
cmpsb
das
scas
scas
sbbl
dec
iret
sub
enter
setle
insl
sbb
pop
ja
or
cs
ficoms
std
inc
nop
je
rcr
inc
push
ret
xlat
mov
scas
movsl
pop
fsubrs
shl
loopne
jnp
xor
outsl
sti
shl
pop
adc
dec
mov
mov
lods
or
sbb
das
jb
jle
es
js
pop
mov
jnp
add
xchg
ret
push
mov
ret
add
pop
ret
or
or
inc
fs
sub
xchg
shll
mov
add
out
cmc
mov
add
hlt
jae
cwtl
aam
push
add
lcall
pop
or
js
sub
out
and
or
or
jae
lock
into
add
dec
fwait
lods
sahf
repnz
jl
icebp
xor
adc
mov
fwait
cmp
mov
fisubrl
dec
or
ljmp
ret
add
pop
cmp
pop
xor
cltd
dec
pop
sbb
pop
jl
push
cmp
add
test
es
popf
repnz
jnp
mov
adcl
out
fimuls
pop
pop
ss
pop
ljmp
cs
jle
and
jnp
loope
or
xchg
inc
dec
xor
dec
adc
or
adc
and
loop
add
add
hlt
cmp
push
jge
xchg
and
mov
daa
mov
jne
scas
popf
dec
ret
inc
push
mov
sub
stos
stc
pop
rorb
sbb
ret
sub
add
add
xor
push
sbbl
dec
sbb
add
fcmovnb
xchg
sub
sbb
es
mov
add
movsb
out
insl
push
and
loopne
sbb
insl
jge
addr16
xchg
ja
imul
mov
in
jle
aas
jae
std
daa
jnp
cmp
scas
push
inc
sub
mov
jp
pop
test
push
mov
repnz
add
xchg
out
in
repz
flds
fld
imul
mov
out
aas
sbb
nop
add
scas
or
dec
repz
out
xchg
mov
adc
or
movsl
add
or
sbb
cmp
repz
jle
lods
or
scas
add
xor
fistpll
add
jl
or
mov
mov
sbb
js
subb
loop
jl
jns
push
xchg
test
push
arpl
push
xchg
adc
pop
inc
xor
mov
sbb
inc
jmp
xchg
push
push
add
sar
xor
testb
je
pop
loop
shrd
cld
jbe
imul
fstpt
fs
ret
addr16
hlt
pushf
sub
jne
or
xor
mov
or
out
lods
dec
sbb
stc
inc
add
aad
fucomip
mov
mov
out
outsl
xchg
xchg
shl
and
lods
loopne
lret
inc
inc
xor
add
push
ret
pop
fistpll
mov
lods
pop
push
sub
dec
sub
fistl
cs
cmc
and
xor
fwait
lret
sub
out
inc
lcall
push
xor
mov
pushf
sahf
dec
shrl
ret
ss
adc
xor
mov
dec
rorl
jge
mov
in
bound
xor
leave
insb
add
add
daa
sarb
test
jb
sbb
adc
xchg
test
add
leave
xchg
sbb
shrb
add
push
pop
int3
or
lcall
jnp
and
sub
pushf
gs
pushf
or
and
fmull
movsb
pop
adc
fmull
lods
rcr
aam
cmp
xchg
sbb
xchg
sub
xorb
outsb
jno
adc
cmp
clc
jge
pop
or
sub
mov
in
or
push
cmpsb
cmp
mov
mov
scas
shll
movsl
ret
jmp
push
ds
sbb
sub
mov
dec
add
push
sbb
test
jecxz
test
cmp
xor
push
mov
xchg
xchg
and
dec
idivb
andl
ljmp
inc
xchg
dec
pop
dec
xchg
mov
gs
jg
dec
rcrb
inc
xchg
xchg
mov
push
sbb
flds
je
mov
incb
and
mov
sub
push
aad
mov
push
inc
loope
outsl
mov
mov
fs
sahf
loopne
adc
aaa
cmp
mov
push
push
stos
dec
out
dec
xor
cmp
or
rcrl
aas
insb
popf
sahf
sahf
stos
sub
insl
fildl
repnz
push
mov
std
icebp
lds
in
xchg
mov
push
xor
rcll
ret
test
mov
inc
inc
sub
dec
ds
xor
inc
dec
sbb
push
in
jg
xchg
pop
out
xchg
out
push
jbe
out
incb
fidivrl
fs
into
pop
adc
les
hlt
in
inc
icebp
bound
mov
repnz
cmp
mov
mov
or
inc
sub
fbstp
inc
ljmp
divl
cmp
push
subl
aaa
dec
cmpsb
xchg
adc
cwtl
scas
mov
daa
mov
adc
aas
dec
scas
pusha
rcll
adc
popa
adc
dec
nop
shlb
mov
out
scas
cmp
fidivrs
into
push
in
repnz
test
mov
dec
push
sti
movsl
mov
test
movsb
enter
push
lret
imul
addl
pop
mov
pop
and
sbb
adc
push
or
int
pop
cld
sub
popf
pop
mul
push
cmp
dec
into
mov
or
std
test
sbb
pop
sub
stc
or
iret
inc
xor
inc
or
xchg
or
sbb
mov
jnp
adc
bound
pop
pop
out
inc
mov
push
jno
push
fbstp
rcll
pop
or
adc
push
pop
cs
adc
sub
jno
int
lea
arpl
jl,pt
daa
mov
cltd
mov
ds
dec
xchg
inc
comiss
and
mov
xchg
inc
cmp
inc
sahf
pop
dec
xchg
sub
ret
in
xor
mov
inc
daa
or
jo
call
ljmp
fnstenv
push
ja
pop
loop
xchg
aad
inc
push
mov
pop
ret
jne
lret
adc
ljmp
inc
and
int
xorl
push
or
arpl
jecxz
dec
adc
sarl
dec
and
push
mov
adc
lret
dec
gs
xor
xor
std
in
lret
ret
jb
insb
lock
test
out
flds
mov
add
sub
lods
cmp
lret
cmp
cs
mov
stos
mov
arpl
cmp
out
rcl
test
inc
add
fdivrp
mov
sahf
je
mov
out
xchg
push
in
jge
test
mov
sbb
mul
enter
rcr
lds
incb
hlt
loope
mov
sub
sbb
mov
mov
incb
fcomi
pop
mov
pusha
jecxz
push
adc
push
jo
lock
hlt
fnstsw
xor
rolb
jbe
enter
loopne
lret
mov
mov
xchg
leave
sarb
fsts
outsb
add
add
add
dec
lcall
or
cmp
test
lret
add
add
fistps
push
jg
push
xchg
rcrb
pop
inc
lock
fisttpl
nop
adc
sbb
mov
cmp
loope
sbb
pop
mov
mov
pop
cld
cltd
jo
fsubrs
inc
cmp
xchg
inc
fldenv
add
or
cmp
shrl
add
movsb
or
out
test
inc
aam
mov
in
cmp
test
adc
test
mov
pop
mov
fwait
jmp
mov
mov
cmp
mov
mov
and
stc
bound
add
insl
sarb
cli
xor
data16
mov
pop
cmp
test
mov
cmpsb
xchg
fwait
xlat
and
cwtl
lahf
bound
fdivl
push
mov
cmpsb
adc
jecxz
xor
sahf
out
sbb
aas
lock
jno
fistpl
aas
lahf
mov
lahf
or
pop
inc
mov
xchg
adc
lahf
push
sar
and
repz
jecxz
add
adc
push
aaa
call
mov
mov
sub
push
orl
dec
jge
mov
jl
lret
mov
mov
adc
sbb
xor
jecxz
sbb
mov
inc
xor
cli
jg
sub
xor
sbb
out
sub
push
jne
sbb
push
fs
mov
jl
lea
mov
jb
dec
cld
mov
jnp
movsw
xchg
arpl
add
dec
ljmp
jg
jge
jge
push
and
cld
lds
subl
xor
xor
rorb
pop
enter
mov
jecxz
or
nop
mov
sbb
and
add
push
imul
push
inc
push
cwtl
stc
les
movsl
sbbl
icebp
insb
jno
repnz
repnz
insb
int3
push
loopne
xchg
mov
cmp
dec
xor
nop
rcr
pop
sbb
cwtl
fldlg2
aad
xor
cmp
inc
cmp
and
inc
les
gs
rorl
add
shll
mov
or
pop
xchg
sub
ss
xchg
and
or
cmp
gs
aaa
mov
clc
xor
mov
sbb
or
cmp
sbb
xchg
fdivrs
push
rolb
ja
out
sub
add
popf
jne
xor
lcall
adc
mov
shrl
push
cltd
sub
out
cmp
xchg
addr16
mov
xchg
aas
or
cmp
mov
dec
ficomps
hlt
pop
add
data16
adc
sbb
xchg
ret
outsb
mov
dec
cwtl
cltd
mov
jl
nop
cmp
jmp
je
mov
test
inc
push
dec
dec
xchg
sub
loopne
dec
rcll
jl
scas
pop
shrl
push
test
and
lods
pop
ss
sub
mov
in
add
mov
pop
lret
push
popa
daa
fildl
fldt
cmpsb
xchg
jno
mov
mov
mov
and
in
xchg
inc
in
push
icebp
stos
rcrl
pop
das
mov
int
retw
mov
test
jl
clc
in
xchg
fidivrs
cmpsb
fadds
das
push
movsb
sub
push
xchg
int3
adc
aaa
xor
mov
cli
arpl
sbb
adcb
lock
filds
call
movsl
and
test
int
pop
sub
fiaddl
insb
jnp
and
mov
adc
sub
imul
push
call
std
pminub
ret
xchg
ss
jle
mov
jno
faddl
sub
das
mov
rcrb
inc
fnsave
movsl
shll
xchg
loope
pop
popa
leave
sub
mov
ret
jle
lock
sbb
sbb
dec
jl
idivb
mov
sahf
mul
fsubrs
and
lahf
add
cmp
movsl
jb
dec
das
push
jo
ds
clc
or
xchg
test
push
dec
cmp
lret
mov
dec
mov
lahf
idivl
rorb
repz
dec
cmp
jge
jbe
push
mov
inc
ds
mov
clc
out
inc
xor
stos
mov
pop
xor
int3
das
fnstenv
add
cs
in
loope
xlat
jbe
or
imul
into
sbb
shl
int3
jne
jne
push
out
mov
push
shrb
cmpsb
imul
js
rcll
xor
xor
xor
les
adc
enter
mov
rclb
mov
push
ljmp
loopne
jl
cli
loop
ret
loopne
scas
mov
imul
sub
pop
adc
jo
pop
xchg
icebp
jmp
cmp
push
mov
mov
or
push
sahf
xlat
fcomps
cmp
outsl
cwtl
in
mov
addb
pushf
cmp
andl
dec
and
sbb
es
adc
mov
sbb
stos
mov
outsl
test
add
jae
jecxz
push
push
cmp
aaa
cmp
pop
cmp
mov
jmp
xor
inc
and
rolb
scas
in
xor
push
add
aas
in
xchg
aas
xlat
loopne
jno
in
rorb
test
lcall
push
aas
jmp
cmp
icebp
adc
and
mov
mov
jg
dec
xchg
es
dec
in
jmp
aad
fs
jecxz
ljmp
jb
scas
leave
test
xchg
lcall
lock
mov
loopne
cwtl
das
ret
pop
fidivrs
ret
sbb
and
testl
loopne
lock
push
mov
push
ljmp
mov
sbb
and
mov
clc
mov
mov
fdivs
fisttpl
adc
dec
shll
enter
adc
pushf
fdivr
fstpl
stc
adc
sbb
shrl
push
fimull
adc
jl
rcr
adcl
jns
add
inc
dec
push
mov
sub
mov
outsb
mov
sbb
int3
jo
jne
pushf
cld
or
outsl
ds
push
stos
sub
stc
aam
adc
jmp
shlb
push
dec
xchg
lcall
cmp
divl
sarl
mov
pop
pusha
sub
shll
fisubs
sub
pushf
ljmp
xor
outsb
test
in
mov
push
call
mov
jb
cmpsb
pop
out
fisubl
mov
push
pop
pop
xchg
sub
inc
or
stc
mov
push
mov
lods
add
into
mov
sbb
xor
addr16
ja
sub
icebp
adc
xchg
fisubrs
or
inc
loop
inc
stc
clc
bswap
and
aad
jmp
cmp
scas
sbb
fstl
mov
mov
cmp
jmp
push
fidivl
mov
mov
mov
and
insb
lds
cmc
shl
jno
dec
pop
pop
out
mov
in
jmp
ds
jle
or
inc
repnz
inc
push
arpl
adc
stos
jne
jae
fisttps
inc
push
sub
sub
sbb
jns
push
in
sbb
idivb
cmp
pop
jns
gs
mov
push
jo
mov
mov
in
and
es
xor
dec
push
scas
pop
xchg
lahf
xchg
popf
out
lcall
and
ficoms
scas
xchg
dec
dec
xlat
xor
andb
iret
rol
mov
or
xor
leave
mov
inc
xor
add
adc
cmc
arpl
inc
repnz
sub
out
lds
push
xor
stos
jecxz
sbb
and
pusha
andb
lret
mov
imul
jo
fs
popf
mov
outsl
push
pop
mov
stos
sbb
and
pop
pop
cmpsb
push
jns
loopne
lret
or
gs
nop
nop
bound
scas
fildll
lds
lods
in
cmpsb
and
adc
cmc
xchg
inc
pop
cmp
jnp
in
sbbb
jmp
add
mov
mov
push
mov
bound
and
lret
push
add
cld
cmp
insb
lods
push
sbb
mov
xor
mov
xor
jne
shrb
mov
cmp
sbb
enter
inc
lods
inc
mov
pop
xor
add
ss
sub
pop
inc
and
sahf
jno
fs
inc
pop
and
adc
inc
xchg
popl
dec
pop
js
sbb
lret
jle
xor
icebp
push
push
push
and
pop
mov
shlb
fs
gs
and
dec
cmp
and
in
push
pop
push
stos
pop
arpl
dec
push
pop
dec
inc
inc
sbb
or
rdtsc
pushf
and
imul
add
jbe
cmp
adc
push
sbbl
call
or
test
push
push
loope
pop
aad
dec
add
insl
setno
sti
xchg
cmc
lahf
dec
add
nop
imul
insb
mov
xchg
mov
shl
into
cltd
pop
fldenv
mov
sub
outsl
mov
movsb
fistps
test
out
push
or
or
mov
shrb
mov
jecxz
lret
dec
jmp
ss
mov
pop
add
adc
sti
mov
mov
clc
rorl
fisttps
xlat
push
popf
jmp
pop
inc
stos
int3
or
icebp
adc
adc
ss
stc
sbb
rcrb
aaa
mov
mov
out
xchg
lret
test
add
and
inc
nop
add
cld
jb
lock
add
push
std
pusha
test
jnp
jp
daa
sti
rolb
scas
push
xor
test
xchg
push
ficompl
xchg
stc
repnz
cmp
cs
adcb
mov
or
push
aam
adc
int
and
lods
out
cmp
insl
add
cld
mov
popf
enter
push
jb
inc
jo
cmp
test
inc
cmp
or
enter
daa
dec
repz
jp
rol
mov
pop
push
add
push
xor
pop
gs
frstor
int
pop
in
xor
jno
adc
xchg
add
dec
cmp
dec
jmp
shlb
push
xlat
xchg
iret
aaa
fsubl
xor
sti
xchg
frstpm(287
js
scas
shr
xchg
sbbl
pop
mov
xchg
cmpb
xchg
sbb
mov
jnp
loope
mov
xchg
pop
xor
call
mov
add
or
xchg
or
dec
aas
pop
adc
mov
xchg
popa
mov
or
fcompl
ret
hlt
cmp
cmp
mov
sub
insb
dec
jns
leave
dec
xchg
xor
out
mov
sub
subb
mov
mov
inc
lahf
adc
negl
test
xchg
movsb
push
in
xor
ret
insb
andl
hlt
and
outsl
cmpsl
push
loope
xchg
popa
movsl
ljmp
outsl
jmp
push
loopne
cwtl
outsl
mov
mov
push
aaa
ljmp
jmp
mov
xchg
movsl
cltd
repz
stos
movsb
popf
pop
scas
cmpsl
push
mov
call
fistpl
in
ds
or
lea
sub
rolb
cmp
leave
and
push
scas
ja
clc
or
or
sbb
fxch
clc
jbe
push
or
rolb
stos
jnp
pop
pop
and
insl
sub
pop
pop
fwait
bound
xchg
lcall
or
sub
lock
xlat
stc
stc
lds
sub
push
adcl
mov
push
mov
roll
enter
pop
out
in
mov
inc
jp
int
iret
out
mov
push
imul
jnp
pop
sarl
fbstp
sbb
add
jbe
rcll
bound
icebp
sub
mov
movsb
xchg
xor
push
ret
sbb
xchg
cmpxchg
scas
cmp
cmpb
divb
push
sbb
adc
mov
pop
scas
rolb
clc
pop
repnz
sub
adc
xchg
adc
dec
test
scas
jp
lods
push
xor
mov
movsb
mov
cmp
addr16
clc
dec
orl
inc
xchg
sub
ret
mov
jg
sub
cmpl
out
inc
add
or
push
or
dec
inc
pop
pop
int3
stc
loope
imul
jno
aad
add
mov
xchg
clc
cld
bound
int3
int
std
in
in
cld
sbb
sub
cmp
dec
dec
pop
jge
insl
jl
mov
mov
std
in
in
cld
sbb
sub
cmp
dec
dec
pop
jge
insl
jl
mov
mov
std
in
in
cld
sbb
cmp
jns
pop
jl
mov
mov
std
in
insl
cld
sbb
sub
dec
sub
lds
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
xor
cmp
or
adc
mov
movsl
scas
xchg
popf
test
cmc
popf
movsl
in
aad
lds
xor
cmp
gs
push
jge
xchg
jg
int
fsub
in
aad
lds
and
gs
push
lea
leave
test
cmpsl
nop
sbbl
jno
jmp
pop
push
test
fs
push
sarb
pop
repnz
cmp
sub
lcall
lds
mov
jno
mov
aad
cmp
loop
imul
push
les
nop
inc
inc
xor
cwtl
inc
sub
or
adc
dec
jne
mov
cmc
mov
imul
dec
cmpsb
mov
in
test
fnstenv
clc
sbb
stos
insl
adc
imul
xchg
in
mov
frstor
mov
lock
push
shlb
mov
xchg
mov
adc
xor
sub
insl
push
fs
xchg
mov
movsl
mov
movsb
test
cmc
vpaddsw
in
jle
js
dec
push
pop
inc
sub
xor
xor
xor
shr
mov
push
cwtl
mov
dec
adc
xor
cmp
inc
lock
leave
call
lcall
fs
push
dec
popa
cmp
gs
push
jge
lea
mov
in
aad
lds
adc
pop
gs
push
jge
lea
mov
in
aad
lds
out
aam
mov
fwait
in
cmp
in
fimuls
dec
aam
fmul
push
dec
mov
pop
cwtl
and
add
cmp
dec
stos
std
mov
and
iret
icebp
jno
add
sti
lret
sti
ud0
cmp
cli
fnstsw
test
jo
sbb
nop
popa
lods
imul
nop
popa
cltd
mov
pop
shrl
xchg
adc
inc
jae
or
call
lret
sub
lret
push
loop
scas
stos
stc
fs
vpunpcklbw
jp
sahf
xchg
scas
inc
sbb
popa
inc
dec
xchg
repz
repnz
add
jecxz
lods
cmp
mov
mov
cmp
jecxz
push
movsb
and
cmp
push
out
mov
call
loope
and
sbb
sbb
mov
adc
mov
jge
mov
cmp
xor
xchg
fwait
ret
mov
js
loopne
or
or
push
fs
aam
lcall
or
clc
xor
sahf
fcompl
xorb
aam
push
jmp
mov
inc
lods
xchg
je
mov
and
cmpb
mov
sti
lods
mov
push
jo
outsl
out
loopne
rcr
fcom
in
xor
mov
xlat
arpl
jne
push
int3
jo
xchg
inc
add
imul
sbb
rcr
adc
cmp
xchg
pop
add
push
add
xor
cmpsl
or
or
pop
out
in
pop
loop
repnz
add
add
fdivp
inc
adc
jge
in
dec
popa
sub
mov
scas
xor
mov
push
into
cmpsl
xlat
test
imul
mov
xor
xchg
xlat
jmp
push
pop
jmp
add
sbb
pop
loope
mov
icebp
inc
cld
int3
je
lcall
repnz
xchg
inc
push
int
adc
mov
add
daa
bound
jge
pop
cwtl
leave
add
dec
mov
fsubrp
in
mov
xchg
inc
pop
mov
enter
std
icebp
jne
add
sub
xor
dec
push
push
jp
pop
add
mov
xchg
mov
or
ljmp
sti
lret
sti
mov
mov
insb
addr16
xchg
fwait
push
dec
movsl
jle
popa
adc
xlat
add
mov
adc
cwtl
push
cmp
leave
pusha
lcall
mov
push
jo
jp
not
sbb
xchg
in
xor
adc
lcall
insb
mov
mov
add
jae
fs
dec
rep
jmp
mov
pop
mov
mov
jecxz
sbbb
and
fwait
adcb
das
subb
jno
cmp
lods
rorl
xchg
inc
sub
insb
jp
fildl
xor
mov
insl
push
fwait
hlt
cltd
xor
js
loope
push
xchg
mov
fmuls
cmp
xchg
xorb
es
xor
addb
inc
test
inc
sub
cmp
push
xchg
mov
lods
out
cmc
imul
adc
lret
push
xchg
mov
xor
or
mov
movsl
mov
sub
add
nop
outsl
push
push
test
xor
cmp
push
lret
ds
hlt
les
nop
mov
test
add
pop
sbb
loope
xchg
shrl
xor
getsec
dec
sarb
push
lds
subb
lret
scas
push
sub
sahf
adc
mov
adc
xor
pop
movsl
and
jo
into
mov
enter
mov
clc
pop
addr16
cmp
or
cmp
push
push
cltd
fcompl
xor
lea
insl
hlt
lea
popf
lea
or
sub
inc
pop
dec
out
cmp
xor
add
sarb
call
mov
out
daa
xchg
xor
and
xchg
imul
jnp
not
in
into
adc
and
cmp
jle
pop
mov
and
test
fwait
cs
aam
sbb
and
push
fwait
into
push
iret
xchg
mov
clc
idivb
xchg
and
js
lock
cli
test
push
mov
outsl
shll
test
shl
and
imul
lret
xchg
std
daa
ja
push
pop
push
imul
outsl
mov
sub
test
ja
mov
mov
out
int
push
jnp
enter
outsl
xor
jbe
add
sub
call
imul
sub
iret
xlat
data16
mov
mov
ljmp
mov
pop
jp
mov
int
sub
test
dec
inc
je
sub
push
mov
rorl
jecxz
xor
mov
push
andb
out
icebp
adc
xchg
push
call
pop
jp
jecxz
xchg
mov
dec
sub
push
mov
test
mov
les
xchg
cmpsl
stos
arpl
xor
mov
popa
fcmovnb
lds
imul
mov
dec
sub
test
or
mov
sbb
movsl
in
xor
xor
cmp
mov
jno
add
mov
movsb
mov
lds
dec
mov
jb
mov
inc
int3
decl
mov
dec
arpl
les
dec
cmp
mov
ljmp
movsl
js
fucomp
sbb
push
add
dec
jbe
xchg
inc
fst
cmc
notb
xchg
bnd
sbb
push
lods
mov
xchg
mov
in
out
out
pop
shrb
cmp
les
pop
xor
shlb
sub
xor
rcll
dec
or
into
xlat
add
test
je
emms
mov
jmp
aam
xor
sarl
mov
cltd
jge
stos
out
imul
cwtl
vaddsubps
test
mov
mov
mov
xchg
stos
scas
into
jecxz
repz
lods
cld
stos
jecxz
call
or
push
out
test
sub
or
xchg
push
in
cld
add
cmpsl
dec
cmc
cmp
mov
nop
je
test
dec
in
popf
fstpl
push
not
imul
jnp
cmc
inc
pop
lea
mov
stos
pop
pop
outsb
sub
pop
xor
adc
push
push
jl
stc
cmp
ja
imul
sub
jg
adc
mov
test
orb
scas
cmp
stc
nop
aaa
xor
or
push
cmp
pop
ficoms
or
pop
mov
sti
mov
dec
jmp
in
movsb
scas
mov
fidivs
clc
dec
sub
mov
ja
int3
sbb
rcrb
ss
dec
and
jnp
sbb
loopne
test
cmpsb
fildll
imul
add
adc
cmp
mov
xchg
pop
push
roll
test
mov
xor
pop
push
adc
cmc
sub
inc
icebp
imul
dec
mov
xlat
lahf
lock
clc
mov
cmp
jo
aaa
mov
xor
xchg
or
imul
xchg
sub
pop
andb
sub
xchg
int3
addr16
cmp
out
push
inc
and
push
inc
js
adc
mov
ja
jmp
xor
lods
cmp
iret
out
mov
xchg
inc
mov
jno
push
mov
loop
push
adc
xor
jae
incb
faddl
push
test
lods
push
xchg
lock
inc
pop
jp
or
push
jle
fwait
xchg
iret
popf
push
cwtl
dec
xor
repnz
cmc
cs
mov
or
dec
andl
or
push
mov
popa
mov
cs
sahf
sub
and
add
leave
adc
scas
add
pop
repnz
data16
push
mov
xor
lret
sub
outsl
xchg
in
and
pop
xchg
cmp
adc
addr16
out
sbb
dec
jl
adc
sub
xchg
or
push
mov
jnp
test
jmp
pop
xchg
adc
pop
add
lock
pop
in
mov
pop
into
jb
cmp
jo,pt
nop
mov
cmpsb
loopne
cmp
and
fsubl
rol
pop
pushf
pop
mov
pop
mov
or
mov
test
mov
int3
mov
enter
lret
rcl
jae
or
xor
pop
aas
adc
sbb
xchg
jle
cli
js
frstor
pop
jecxz
lret
ret
xchg
idivl
rcrb
es
ljmp
adc
hlt
push
nop
je
pop
push
roll
clc
xor
pop
int3
jo
xorb
inc
loope
jmp
fidivrs
jge
js
frstor
insb
xor
inc
pop
addl
mov
out
and
mov
add
jb
mov
push
mov
sub
mov
sub
pop
sbb
xchg
xor
fiadds
jns
movsl
jge
dec
ljmp
inc
adc
pop
mov
cld
adc
in
out
xchg
outsl
or
movsl
dec
rcrl
divb
mov
dec
xchg
jne
shll
add
xor
into
loope
add
ss
roll
stc
mov
dec
or
xchg
ja
fwait
dec
stos
mov
pop
jnp
test
or
cmp
mov
sub
dec
dec
or
sbb
cmpl
mov
pusha
or
ret
push
pop
or
les
pop
pop
or
rorb
gs
sbb
loope
movsb
movsl
lea
mov
cmovo
bound
fists
test
inc
pop
cs
adc
sbb
leave
mov
out
sub
lds
lret
jns
in
mov
negl
int
cwtl
aam
inc
xor
and
and
fsubrl
and
mov
xor
dec
clc
aaa
and
mov
pop
push
jne
negb
xchg
imul
mov
shrl
fs
pop
flds
sbb
hlt
push
sbb
popa
push
mov
pminsw
test
mov
push
mov
loop
push
frstor
ret
stos
loopne
cmpsb
test
add
and
jbe
dec
ficoms
cmpxchg
push
loopne
jnp,pn
dec
into
ficoms
push
movsl
shl
sub
inc
jno
sbb
adc
or
mov
cmp
rorb
notb
fsubrl
into
andl
insl
daa
rclb
mov
sub
mov
xor
lds
add
pusha
outsl
xchg
in
jae
xor
clc
add
shl
sarb
lock
jnp
rol
or
dec
mov
stc
jle
imul
push
inc
pop
int3
scas
sbb
dec
mov
insl
ss
jo
sub
pop
popa
jbe
lahf
or
dec
bound
add
mov
dec
jmp
inc
nop
lret
cmp
les
es
fsubr
mov
daa
mov
ds
frstor
xor
lahf
shll
or
cmp
nop
pop
mov
sbb
sub
insl
cmc
cli
je
ljmp
in
incl
test
jle
imul
xchg
out
or
cmc
push
pop
popf
jl
pop
dec
sub
push
fimull
mov
lods
or
mov
sbbl
imul
arpl
cmp
xorl
inc
push
or
outsl
mov
movsl
subb
mov
int3
xor
xchg
cli
add
and
scas
sti
mov
and
jnp
stos
sbb
inc
push
lea
add
outsb
push
xor
pop
insb
cmp
inc
sub
inc
popf
adc
ret
mov
pusha
cmpsb
pop
insl
subb
cmp
add
jge
mov
fdivrl
gs
inc
in
push
test
in
lods
mov
fs
in
inc
pop
xchg
arpl
sti
mov
inc
inc
xlat
data16
rcrb
or
or
jnp
xor
and
cmovns
std
std
jno
mov
sbb
and
jg
xor
cmp
iret
sbb
or
cmpl
xorb
adc
inc
mov
stos
jmp
pop
jbe
xchg
cltd
fldt
xchg
xchg
aam
lods
es
jb
sbb
imul
fistl
sub
iret
cmp
dec
jmp
push
inc
out
and
cmc
shlb
ficompl
or
mov
push
dec
mov
movsl
push
fs
jo
jns
je
xchg
xchg
sbb
cmp
xchg
orb
and
and
shl
icebp
adc
testl
les
and
les
add
jmp
xchg
push
xchg
xlat
in
sub
cmp
and
scas
or
mov
movsb
sub
push
ss
mov
mov
pop
xor
xchg
push
ds
and
ss
inc
sbbb
scas
test
push
and
cmp
sbb
sub
sbb
call
inc
imul
orl
push
xchg
into
sbbl
or
cmpsb
dec
ja
pushf
enter
sbbl
dec
mov
inc
cmpsl
repz
dec
and
mov
mov
cmc
add
add
cmp
rcrb
fstl
adc
lock
add
inc
inc
sbb
repz
and
xchg
dec
mov
push
mov
test
stc
wbinvd
xor
jbe
enter
lods
xchg
stos
xchg
out
jne
push
cli
adc
mov
call
inc
imul
mov
push
jb
push
sar
outsb
das
sar
lcall
pusha
xor
icebp
jl
in
mov
je
xor
push
pop
lds
mulb
mov
data16
xchg
dec
fisubrl
jmp
mov
jne
lock
push
sub
or
and
shll
sbb
or
adc
push
mov
jmp
in
insb
mov
adc
cmpsl
mov
pop
stos
dec
jo
dec
mov
add
or
jp
push
in
or
dec
jmp
or
popa
cmp
insl
sahf
dec
xor
jecxz
fs
push
out
pop
out
push
outsb
outsb
xchg
popa
sub
adc
cmovno
dec
out
clc
lock
pop
xchg
inc
xor
pop
push
jl
and
or
daa
jmp
fnstenv
inc
lcall
pop
cltd
sbbl
xor
les
inc
out
and
aad
jns
loop
mov
xchg
repnz
push
or
sbb
test
xchg
mov
dec
pop
cmpsl
addr16
push
dec
lods
test
pop
add
inc
mov
loop
stos
fidivrs
xlat
cmp
jo
clc
xlat
add
iret
mov
aaa
aas
loope
mov
cmp
and
cmpsl
dec
sbb
inc
inc
xchg
fbld
mov
dec
xchg
addr16
jl
lea
js
aad
xchg
lcall
mov
inc
call
jg
pushf
cwtl
mov
jge
lcall
fmulp
fdivl
in
push
mov
cmpsl
lock
xor
mov
or
in
dec
mov
ss
xor
daa
stos
jmp
push
add
scas
push
dec
mov
lock
jo
inc
scas
and
pop
hlt
jmp
fdivrs
cs
and
rcll
repz
bound
bound
test
movsl
aam
pusha
hlt
fidivrl
mov
mov
lods
jge
mov
pop
ss
sbb
movsl
lods
roll
jl
cmp
repnz
mov
or
cmp
cmc
in
add
nop
fldl
ljmp
mov
cmc
jle
shl
inc
xchg
filds
or
add
mov
xor
mov
test
xor
sti
jg
iret
insl
fdivrs
cltd
and
inc
mov
inc
mov
loop
mov
push
fwait
test
mov
int
icebp
loopne
arpl
aas
mov
mov
sarl
pusha
mov
push
imul
rcrl
push
js
je
sbb
sbb
stos
sub
add
ror
call
adc
xchg
andl
fdivs
mov
mov
enter
pop
jecxz
in
mov
and
cli
fwait
or
aam
sub
adc
xchg
mov
adc
jae
or
ss
inc
cmp
mov
shlb
pop
cltd
xchg
pop
stos
mov
jnp
pop
hlt
je
adc
or
test
push
mov
jmp
test
sbb
mull
sub
xor
test
add
and
mov
inc
dec
lahf
mov
sbb
cwtl
push
xchg
pop
jbe
xchg
insb
xchg
xchg
addr16
jns
push
les
outsl
add
adc
call
jno
mov
add
out
mov
or
repnz
pop
pusha
dec
and
mov
repnz
or
cmc
and
cld
scas
sbb
xor
cmp
outsl
fsubrl
and
cltd
mov
lcall
and
mov
jno
shl
jl
pop
mov
xor
cmp
push
sub
mov
std
popa
adc
xor
sub
pusha
jnp
dec
mov
sbb
push
jl
mov
out
push
dec
cli
xchg
inc
inc
inc
pop
in
rcll
fcomip
mov
arpl
inc
jl
inc
scas
pop
push
aas
insl
sbb
or
sarb
sbb
sub
fdivs
sub
outsb
ja
mov
rolb
jp
in
ss
push
jl
mov
in
lcall
pop
aas
mov
nop
mov
sub
lcall
lock
mov
scas
fnstenv
pusha
lods
int3
dec
cmpb
lahf
imul
fistpl
daa
inc
out
sub
test
or
inc
adc
mov
sub
les
sar
or
loop
ljmp
pop
in
jl
shl
mov
lea
imul
pop
fs
jbe
fimull
cmp
mov
mov
fidivrs
push
xchg
mov
das
dec
mov
mov
push
cwtl
xchg
add
jl
rorb
and
stos
std
sub
inc
dec
mov
scas
mov
push
fstpl
in
cmpsb
and
popf
add
loop
push
in
sub
mov
test
leave
xchg
and
test
jp
mov
pusha
pop
cmp
add
aaa
cmp
sar
xchg
pop
or
add
aam
aaa
lods
jle
mov
add
mov
mov
inc
xor
and
movb
pop
arpl
xor
orl
inc
loope
pop
adcl
jle
xor
add
xor
enter
jl
inc
daa
sub
lds
rolb
mov
fxch
cld
dec
jl
dec
in
jge
sbb
cmp
or
cmp
lods
dec
pop
fmuls
neg
sbb
adc
push
jb
add
or
mov
lods
addr16
fimull
pop
mov
adc
int
sbb
sarl
ret
cmpsb
jno
jg
push
sti
jno
jbe
les
mov
fucomip
mov
lods
push
scas
pop
decl
add
xor
sub
xchg
mov
mov
test
adc
lods
cmp
aam
inc
xchg
xchg
rclb
xor
sbb
dec
leave
fnsaves
jae
mov
pop
in
sbb
scas
sub
inc
aaa
stos
lods
les
and
dec
aam
sbb
scas
into
add
xor
cmc
dec
aaa
insl
nop
das
xor
adc
xor
in
leave
imul
mov
sub
dec
jb
jno
push
dec
mov
push
aas
sub
and
push
stos
add
ret
stos
hlt
addr16
or
cmc
pop
lahf
lcall
nop
pop
leave
xor
and
inc
xlat
dec
push
lcall
js
mov
inc
mov
jae
in
mov
mov
sbb
insb
or
pop
xchg
mov
lret
shlb
pop
adc
enter
mov
cmp
sbb
mov
sahf
add
cmp
lock
adc
pop
and
out
dec
rcl
arpl
push
mov
xchg
outsl
add
les
xor
xchg
pop
fcompl
js
ljmp
jb
fists
popf
movsl
ds
aad
sbb
sub
sub
dec
xor
sub
add
jno
insl
pop
adc
mov
and
sub
or
adc
repz
imul
pusha
in
mov
and
and
inc
enter
pop
pop
jbe
push
movhps
push
push
push
or
adc
cmp
add
in
call
jle
push
insl
loope
inc
pop
jns
mov
jne
gs
push
jge
lea
mov
in
aad
lds
adc
pop
gs
push
jge
lea
mov
in
aad
lds
adc
pop
gs
push
jge
lea
mov
in
aad
lds
xor
cmp
in
aad
mov
pop
xchg
mov
sbb
sub
cmp
in
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
mov
cltd
mov
in
sub
sbb
or
jp
push
pop
dec
dec
pop
mov
mov
clc
fcmove
lret
sub
cmp
or
jp
push
pop
dec
dec
pop
mov
adc
mov
ret
cmp
sub
imul
push
adc
and
repz
stos
stc
jmp
out
add
xor
clc
mov
pop
repz
mov
je
mov
adc
stos
push
jnp
cld
pop
addr16
outsb
jae
aaa
cmp
int3
xlat
add
xchg
testl
adc
push
roll
push
cmpsl
cmp
cmp
inc
sub
or
ficompl
mov
in
mov
cwtl
cli
cld
cli
enter
push
cmp
sub
test
cmc
pop
mov
and
jle
inc
lock
addr16
fndisi(8087
stc
fisttpl
lret
and
or
outsl
or
sub
add
mov
push
xchg
inc
push
add
inc
fldcw
inc
push
inc
add
pop
movsb
and
in
stos
cwtl
lcall
clc
fcmove
lret
sub
nop
sbb
or
push
push
pop
push
dec
push
test
xlat
jmp
out
hlt
xchg
dec
mov
lahf
jnp
cs
jns
data16
das
add
push
cmp
xor
sti
out
hlt
mov
mov
sub
pop
dec
sub
daa
js,pt
sub
into
pop
repz
hlt
cli
movsb
ljmp
sub
cmp
or
sbb
push
pop
dec
dec
pop
mov
mov
clc
fcmove
lret
sub
cmp
or
sbb
push
pop
dec
dec
pop
mov
cmc
scas
jbe
jb
in
call
mov
push
in
pop
mov
jbe
push
mov
jb
daa
imul
jge
ljmp
and
xor
pop
jle
lds
dec
and
jne
out
and
inc
mov
inc
dec
push
sub
adc
pushf
gs
pop
daa
jg
gs
cmc
leave
imul
fs
and
mov
ja
lods
jbe
inc
pusha
mov
leave
add
xor
lea
test
out
data16
lret
cmc
daa
push
sbb
jmp
test
jg
xor
push
sbb
scas
dec
gs
lret
xchg
sbb
sti
mov
cmp
mov
dec
ds
out
scas
loopne,pt
idivb
aas
push
test
jnp
sbb
inc
out
js
sub
push
sbb
js
scas
iret
sarl
push
outsb
out
lcall
cmp
sub
pop
fiadds
lock
cmpsb
lahf
rcll
xchg
mov
sub
fs
adc
mov
out
xlat
cmp
test
hlt
stc
push
add
dec
ds
jae
and
ja
cmp
jbe
adcl
aaa
mov
push
stos
mov
or
stc
pop
sbb
dec
cmp
add
aaa
sbb
inc
jb
mov
or
xchg
pop
stos
sti
mov
insl
aam
sti
cld
in
std
cmp
out
push
es
xor
aaa
jne
das
ret
outsl
cmp
lcall
mov
lahf
ret
fdivl
mov
out
or
pop
xacquire
mov
xlat
fnstsw
and
dec
mov
les
adc
add
inc
mov
in
xchg
cwtl
fistl
push
sub
imul
xor
sub
cmp
jl
out
mov
in
cld
xor
cmpsb
loope
push
mov
enter
xor
rorb
sub
cmp
dec
bound
push
pop
rcr
jne
cmc
aaa
call
stc
into
test
adc
dec
sub
mov
jle
adc
out
iret
xchg
sti
dec
or
aad
cwtl
mov
les
xchg
ret
sbbl
pop
shrb
mov
cmp
xchg
inc
nop
loop
in
mov
cmp
cltd
mov
das
popf
sbbl
nop
int3
addb
mov
or
or
dec
mov
fbstp
cltd
push
insl
and
jl
lods
mov
out
icebp
pop
jb
movsl
ljmp
xchg
add
outsb
xchg
repnz
lcall
xor
jg
mov
negl
push
loop
push
add
lea
mov
fisttps
sbb
fnstenv
lret
or
mov
std
jae
add
testb
jns
stos
shrl
inc
or
stos
dec
insl
cld
mov
mov
pop
dec
inc
fdivrs
mov
dec
dec
stos
das
and
cmp
aaa
fisttpl
adc
mov
jl
rol
adc
mov
mov
push
mov
filds
pusha
push
test
or
in
adc
jb
sbb
out
and
mov
insb
mov
pusha
xchg
shll
and
xor
or
pop
clc
push
mov
push
pop
fucomi
push
jno
divb
sbb
scas
pop
leave
dec
sbb
mov
xor
xor
fisttps
loopne
in
mov
mov
neg
lret
mov
inc
cmp
mov
jb
pop
mov
mov
sub
cmc
sbb
icebp
sbb
sbb
outsl
push
fcmovb
sub
cmp
aad
cmpsb
mov
fsts
sub
mov
mov
out
jge
test
int3
jb
mov
and
adc
push
mov
sbb
adc
sub
addr16
divb
and
sub
stos
xchg
inc
cwtl
push
pop
mov
call
int3
ficoml
mov
cli
mov
icebp
jg
push
enter
jg
xor
loopne
icebp
sub
mov
movsl
cmp
div
and
pop
pop
or
in
push
sahf
adc
jne
jmp
jg
inc
shl
aam
mov
sahf
pushf
add
jmp
in
mov
xor
lods
dec
sub
mov
mov
xchg
fcmovbe
inc
je
or
pop
cmpsw
lock
ficomps
mov
enter
int3
fsubs
xlat
mov
mov
push
pushf
imul
sub
enter
inc
sahf
les
das
mov
inc
daa
add
dec
jle
pop
repz
mov
nop
pop
mov
movsl
lods
jnp
fldl
or
daa
cwtl
jno
data16
mov
int3
test
jecxz
push
popf
lods
imul
roll
or
stc
es
inc
gs
mov
lock
fs
in
incb
mov
sbb
jne
adc
jae
addb
cmp
or
sti
repnz
lret
xchg
call
cmp
in
pushf
pop
mov
addr16
inc
data16
test
sub
mov
push
out
sbb
fwait
sub
cmp
cwtl
xor
stos
add
popa
add
jmp
mov
imulb
adc
and
xchg
inc
notl
or
inc
scas
lods
decb
aad
push
pop
push
gs
jae
cbtw
in
sbb
mov
test
popa
in
and
xchg
je
mov
aas
push
and
mov
xor
sbb
jecxz
pop
jmp
push
movb
lret
sub
adc
stos
loope
and
pop
imul
movsl
fldl2t
adc
xchg
add
lea
mov
add
add
loop
sti
test
push
je
rcrl
sbb
repnz
mov
mov
dec
xchg
popa
out
aad
inc
daa
inc
daa
jp
daa
gs
or
test
sub
fisubl
loopne
pop
and
lds
lcall
xchg
or
fidivs
pop
roll
push
add
or
ss
and
add
sub
mov
cltd
mov
mov
fldcw
add
addl
add
xor
pop
jnp
mov
add
adc
popf
mov
enter
push
mov
inc
testb
loope
xchg
lahf
jae
popf
out
or
sbbl
or
mov
inc
nop
sbb
inc
dec
cmp
inc
cmp
dec
sbb
jns
pop
and
test
xlat
pop
sahf
adc
and
mov
les
cmpxchg
xor
test
xorb
or
ds
pop
mov
movsb
mov
loop
xor
jo
xchg
add
xchg
add
mov
mov
or
pop
out
not
ljmp
out
pop
nop
sub
movsl
imul
push
jb
das
push
cmpsb
sysexit
adc
subl
push
mov
inc
lods
mov
xchg
sub
mov
add
adc
jecxz
in
jge
add
out
jle
mov
add
hlt
in
mov
andb
icebp
push
scas
inc
dec
lds
daa
pop
sti
in
pop
and
lock
mov
xor
testb
roll
movsb
pop
mov
jbe
fidivs
pop
aad
xor
imul
flds
pop
popa
mov
pop
cmp
outsb
sub
icebp
aad
lods
push
movsb
xchg
xor
in
fnstsw
aas
ret
sub
setne
push
sub
fsubs
stos
lcall
mov
inc
repz
pop
xchg
cmpsb
loop
jecxz
in
xor
mov
idivl
mov
pushf
adc
bound
iret
add
sahf
jmp
fistps
stos
jb
push
outsl
insb
dec
pop
xorb
xor
fdiv
ret
sti
or
jnp
lret
push
in
out
lods
ret
sarl
cwtl
xchg
scas
rol
jmp
adc
out
or
lret
adc
add
add
adc
jns
fstpt
das
movsb
inc
jmp
add
push
mov
cmc
fs
clc
mov
push
xchg
mov
mov
xchg
test
ja
fwait
ret
lds
jnp
outsl
push
push
js
shrl
int
data16
jle
cmp
add
pop
xor
jns
and
outsb
lea
or
out
adc
xlat
xchg
fcom
sub
negl
icebp
and
jb
stos
sub
sbb
pop
xchg
push
jo
leave
adc
mov
adc
int
fists
pop
ret
xor
test
sub
mov
je
mov
movsb
mov
ret
add
xchg
lods
into
ficoms
rolb
mov
mov
jmp
sub
nop
dec
rolb
fsubl
push
mov
popf
mov
fcom
push
xor
push
adc
sbb
sbb
pop
pop
sub
xchg
inc
add
xor
jg
rorb
xor
lock
test
mov
sbb
enter
out
mov
mov
mov
pop
jno
add
rcrl
lret
scas
dec
mull
sub
fcomps
data16
lds
sbb
sub
pop
cmp
rcll
xchg
xchg
xchg
repnz
imul
inc
jle
enter
or
jo
mov
dec
out
mov
cmp
aas
sbb
fnclex
sbb
movsl
xor
lock
in
orb
adc
jne
jae
out
or
mov
cltd
add
das
mov
sbb
pop
cmp
xchg
lret
data16
xchg
pop
movsl
leave
mov
imul
inc
insb
arpl
mov
shll
nop
jns
dec
jmp
pop
jecxz
xor
mov
sub
jle
movsl
jbe
mov
fists
cmpl
inc
xchg
daa
cld
fsubrs
in
jnp
xor
nop
pop
xchg
adc
jl
jmp
or
lcall
pop
dec
out
jge
jp
xchg
lods
jb
in
sbb
mov
and
aas
cmp
or
ja
mov
sti
arpl
push
inc
xchg
inc
mov
push
mov
inc
outsb
mov
test
in
mov
rcrb
push
cmp
jbe
cmpsb
jle
inc
sarl
add
ja
inc
inc
xor
jmp
xchg
int3
je
jae
out
cltd
push
mov
popa
daa
andb
add
lods
cmpsb
pop
inc
xchg
outsl
imul
mov
push
repz
mov
pop
or
lods
sarb
sbb
hlt
push
lret
push
sbb
xor
pop
push
jb
out
pop
cmp
fs
test
jns
push
adc
mov
aam
mov
xchg
call
scas
push
inc
fidivs
jne
push
pop
lea
pushf
jp
add
jae
sub
mov
lds
jecxz
adc
adc
adc
arpl
movsb
out
push
in
lock
jnp
jg
pop
or
xchg
es
sbb
mov
in
shlb
jp
int3
add
je
in
mov
fwait
es
bound
dec
inc
pop
cmpsl
fsts
sbb
test
out
imul
sahf
mov
stos
and
cs
cmp
sub
xchg
loope
pop
sub
std
adc
cs
outsl
jg
cmp
incb
test
jno
dec
ljmp
pusha
push
cmpsl
and
sbb
add
sbb
and
enter
test
cmc
cs
or
js
cmp
lret
lock
andl
dec
pop
nop
rclb
add
ss
je
movsb
cmp
or
add
jecxz
lcall
les
mov
jp
inc
jmp
mov
out
adc
sub
out
cmc
mov
iret
daa
sbb
in
xor
xor
pushf
lock
xchg
aas
subb
popa
les
insl
in
ret
sbb
int
loope
faddl
fnstcw
add
mov
repz
jle
push
pop
inc
jl
and
sahf
and
inc
push
xchg
mov
pop
test
sub
int
xchg
jns
mov
inc
push
icebp
fcoms
bound
pushf
jmp
xchg
lods
mov
aam
in
cmp
fwait
xor
pop
xlat
adc
cli
aaa
sub
dec
pop
xor
mov
aas
sub
dec
pop
mov
bound
js
fmuls
std
inc
mov
sbb
insb
test
vpsubsw
xor
push
cld
es
out
sti
adc
pop
rolb
push
ljmp
and
sbb
out
and
jae
xor
and
aas
mov
xchg
or
lock
and
jecxz
xchg
sub
clc
push
shrb
sahf
test
pop
pushf
adc
xchg
cwtl
in
cmpb
mov
push
push
jp
in
add
inc
push
jecxz
xchg
lods
jl
jmp
rorl
sbb
jnp
popf
and
ret
push
imul
roll
jae
push
cmp
test
push
jno
movsb
les
lret
shrb
adc
xchg
cli
and
test
and
sbb
pop
out
iret
insl
repz
out
inc
int3
xchg
xor
add
dec
push
cmp
pop
push
fcmovnb
mov
outsl
iret
mov
js
out
sub
iret
testl
test
int3
in
cmp
mov
push
and
adc
and
mov
scas
xchg
out
and
int3
jb
mov
mov
cmp
push
xor
jmp
mov
add
dec
test
mov
mov
int3
mov
inc
icebp
pusha
fiaddl
aaa
inc
sbb
mov
inc
mov
scas
fisubrl
pop
loop
jb
int3
xchg
jmp
ss
loopne
sahf
outsl
mov
cmp
es
pusha
jo
int3
mov
push
shr
or
inc
testl
std
pop
out
out
sub
xlat
popa
mov
scas
pushf
inc
cmpsb
popa
dec
jae
lea
aaa
mov
sbb
aaa
push
nop
addl
popf
ds
adc
pop
outsb
and
sub
cld
jg
cmpsb
jne
adc
mov
ljmp
xor
sub
fiadds
mov
lahf
add
addb
fldenv
pop
lahf
movsl
icebp
cmp
sub
popa
vpaddsb
ljmp
ret
arpl
push
mov
push
lds
mov
and
xchg
mov
outsb
repz
adc
loop
add
push
sbbb
mov
fldcw
fidivrs
hlt
data16
jp
lods
mov
ffreep
in
pop
and
loope
xor
ja
mov
xorl
adc
in
in
fidivs
ds
pop
xchg
popa
mov
push
adc
mov
sarb
push
mov
test
and
pusha
testb
pop
icebp
call
bound
shl
inc
imul
stos
pop
sub
xchg
hlt
adc
fs
dec
xor
cmp
int3
sub
xor
dec
inc
mov
inc
push
adc
popa
clc
dec
int
incl
int
sbb
mov
adc
add
or
ret
arpl
fwait
and
repz
pop
out
jns
mov
enter
cs
adc
cmpb
mov
inc
in
xlat
test
out
mov
ret
add
fxch
es
ret
iret
xchg
mov
loopne
ljmp
mov
test
stc
xchg
inc
stos
adc
pop
cs
mov
or
jbe
push
pop
lret
aas
jg
pop
jno
xchg
inc
adc
pop
jmp
insb
mov
out
push
xchg
lds
scas
dec
xchg
mov
mov
add
lods
mov
adc
std
rcll
cmpsl
jno
mov
out
dec
nop
enter
jp
sbb
pop
inc
out
rcrl
dec
out
dec
aaa
mov
das
shlb
mov
inc
test
ds
daa
and
xor
sub
arpl
mov
xor
inc
xchg
mov
mov
jmp
out
stos
or
aas
mov
orb
sub
in
popa
sbb
or
sub
sbb
mov
aad
cltd
fs
mov
pop
cmp
jnp
and
sbb
shrl
push
xor
scas
or
pop
sbb
sbb
aam
in
xchg
sub
stos
das
cmc
sahf
pop
jp
lods
inc
jmp
xor
enter
es
loop
add
imul
push
sbb
and
daa
fidivl
scas
fwait
mov
mov
mov
in
xor
or
ret
and
xor
adc
xchg
stos
push
push
or
xchg
cmp
xchg
jno
cmpsb
cli
lcall
dec
cmp
sbb
lret
ffreep
jp
sahf
dec
imul
xchg
loop
aad
xchg
gs
lret
mov
adc
xchg
fistpll
sbb
xchg
roll
jg
imul
bound
pop
fsubrp
and
cmpsb
push
xor
cmp
xchg
adc
jg
sub
pop
lods
cmp
icebp
jle
sub
lods
shrl
push
adc
dec
inc
pop
scas
cmpsl
mov
sbb
xchg
xor
cs
push
xchg
lods
je
jo
into
test
inc
pop
jmp
negl
movups
inc
xchg
ficompl
mov
lcall
inc
stos
pop
xchg
adc
mov
pop
fndisi(8087
jl
jbe
or
ret
mov
adc
jns
xor
test
xchg
jg
cmp
js
add
cmp
mov
rorl
fdivrs
push
ret
or
or
lds
pop
cmpl
dec
mov
push
aad
int
repz
push
push
adc
repnz
popa
lret
addr16
fldl
push
push
sti
jecxz
scas
push
cmc
sbb
lret
dec
mov
int3
ss
jl
lds
call
add
mov
sub
ret
pop
xchg
aam
in
add
or
in
xchg
mov
je
sbb
repz
or
shrb
or
pop
jp
jnp
mov
mov
inc
call
adc
mov
sub
aam
aam
push
cld
add
jno
sub
data16
lcall
push
mov
scas
push
shlb
out
fcomps
shlb
insl
pop
push
test
fsubs
cmp
adc
mov
push
sub
aas
scas
pop
jne
rclb
pop
in
out
mov
add
and
xor
xchg
sbb
or
inc
dec
or
aas
and
inc
movsl
lret
dec
or
sub
iret
dec
lock
push
sahf
lods
xor
scas
fdivrs
stos
cs
dec
pop
cld
outsl
cmp
xor
fisubrs
push
cmp
loopne
shrl
hlt
jo
lds
pop
dec
add
out
cmpl
mov
cmp
xor
xor
pop
lods
and
cmp
xor
leave
aam
lods
das
push
cwtl
outsb
dec
movsb
push
jne
or
jns
adc
push
movsb
mul
inc
pop
aad
addb
mov
cmp
xor
pop
lret
push
dec
mov
leave
mov
dec
push
mov
xor
sub
adc
cwtl
stos
clc
insb
pop
mov
in
pop
ss
add
pusha
rol
aaa
jbe
mov
pop
sub
mov
cmp
push
mov
test
dec
leave
out
shl
pop
jbe
daa
sti
and
xor
inc
imul
ss
push
jne
incb
popf
int3
adc
insb
jecxz
mov
or
cltd
dec
rorl
mov
fnstsw
movsl
xchg
dec
sbb
cmp
mov
fsubp
or
cmp
ret
sbb
in
dec
roll
or
int
xor
push
add
pop
std
test
sbb
pop
sub
aas
sub
icebp
mov
mov
and
xchg
push
xor
cmp
cmpsl
adc
xor
mov
mov
enter
push
mov
xchg
das
jg
and
jecxz
ja
ljmp
mov
leave
push
xchg
push
sbb
jo
pop
fwait
test
ljmp
mov
cmp
lret
mov
jns
and
pop
jp
ret
out
xchg
or
cmc
or
jp
push
loope
popf
xor
push
cli
jp
sbb
cmpsb
idivl
pushf
jns
xchg
ja
repnz
jnp
out
shrb
jae,pt
fnsave
add
jns
cmc
leave
fidivs
push
mov
arpl
pop
mov
mov
cmp
das
scas
jge
jnp
ror
push
shlb
xchg
fs
xor
xchg
nopl
aam
add
aad
jp
out
shrl
repnz
mov
xor
loop
push
lahf
int3
dec
mov
pushf
outsb
dec
push
mov
gs
sub
jnp
in
inc
bound
jb
rolb
dec
lea
clc
fcmove
lret
sub
cmp
or
sbb
push
pop
dec
dec
pop
mov
mov
clc
fcmove
lret
sub
cmp
or
sbb
push
pop
dec
dec
pop
mov
nop
mov
int3
lret
sub
cmp
or
adc
push
pop
inc
dec
mov
lcall
clc
fimull
sbb
xlat
sub
or
xor
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
