or
or
rol
and
mov
shr
add
mov
jmp
mov
mov
add
jmp
mov
movl
jmp
jne
nop
nop
inc
xor
inc
dec
shr
mov
jmp
add
add
push
or
mov
and
sub
jmp
cmp
push
jae
call
push
jmp
addl
push
jmp
int3
push
call
inc
addl
call
push
jmp
push
pop
leave
call
call
nop
addl
jmp
and
shl
dec
shl
mov
mov
xor
mov
add
add
push
mov
jmp
push
push
mov
mov
mov
add
add
mov
jmp
push
jmp
push
push
inc
call
call
ret
call
call
subl
push
jmp
push
addl
push
push
jmp
call
pop
dec
push
addl
call
mov
or
sub
shl
xor
mov
jmp
mov
movl
mov
jne
xor
ret
test
jmp
movl
call
lea
addl
call
mov
jmp
mov
and
cmpw
je
jmp
lea
sub
mov
shr
or
add
mov
sub
cmpw
jmp
pusha
mov
call
popa
jmp
mov
ret
add
add
add
loopne
ret
and
movb
jmp
push
gs
rorb
add
add
mov
and
sub
mov
mov
jmp
lea
nop
movzwl
and
add
mov
mov
jmp
jne
push
jmp
call
call
int3
dec
call
addl
jmp
xor
cmp
mov
mov
jmp
adc
shr
mov
shr
and
add
test
je
add
and
inc
mov
sub
test
jmp
jle
jmp
or
mov
mov
add
jne
jmp
pop
pop
pop
mov
jmp
pop
jmp
add
add
popa
add
add
les
add
mov
call
cmpl
jne
cmpb
jmp
push
push
call
jmp
add
mov
lea
sub
mov
shr
and
lea
ror
xor
sub
ror
inc
mov
add
jmp
nop
push
nop
jmp
pushl
call
add
jmp
push
push
ror
mov
mov
sub
shr
jmp
mov
jmp
add
push
sub
xor
add
or
mov
sub
mov
jmp
test
jmp
movzwl
movzwl
jmp
je
mov
shl
mov
test
jne
shl
ror
add
shr
mov
mov
inc
mov
lea
nop
nop
nop
nop
nop
sub
sub
xor
mov
add
test
je
jns
movzwl
jmp
jne
add
ret
and
shl
mov
mov
sub
shr
and
and
sub
mov
test
jmp
jne
xor
xor
inc
add
sub
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
mov
dec
add
cmp
jne
jmp
call
pushl
ret
jmp
add
mov
test
je
push
jmp
call
jmp
mov
push
lea
shr
inc
xor
mov
sub
test
jne
add
and
shr
mov
mov
movzbl
jmp
push
jmp
call
lea
push
jmp
push
call
or
or
mov
mov
cmp
jmp
mov
jmp
add
add
ret
scas
xor
add
mov
mov
test
je
mov
jmp
mov
movl
mov
push
inc
or
mov
xor
mov
push
mov
jmp
push
push
xor
dec
xor
mov
test
push
jmp
push
push
jmp
movzbl
jmp
add
ret
mov
xor
test
jmp
add
jmp
add
add
roll
add
jmp
push
call
int3
jmp
pop
push
push
pop
dec
addl
call
ret
add
add
add
add
add
jmp
call
call
jmp
leave
xorl
call
xor
xor
mov
jmp
call
test
jne
push
call
add
ret
add
add
add
lea
sub
shl
or
shr
mov
shr
and
add
jmp
movzbl
jmp
add
push
dec
ror
or
and
shr
mov
sub
mov
push
jmp
mov
sub
dec
shr
mov
mov
push
push
jmp
add
cmpl
je
push
push
push
lea
jmp
and
cmp
jne
and
add
add
add
add
jmp
pushl
jmp
mov
or
mov
sub
test
jne
movzbl
add
mov
lea
jmp
add
sub
xor
add
mov
mov
lea
sub
test
mov
mov
mov
jmp
xor
test
jne
mov
mov
pop
ret
add
add
add
inc
hlt
add
add
jle
add
jmp
mov
or
rol
sub
mov
mov
ror
add
shl
rol
mov
jmp
push
jmp
mov
lea
push
push
call
jmp
add
and
movb
movb
call
jmp
sub
test
jne
ror
xor
xor
mov
jmp
sub
mov
and
mov
test
jmp
add
jmp
test
jmp
add
add
push
jmp
push
call
call
push
ret
subl
push
jmp
subl
push
jmp
leave
call
addl
jmp
and
shl
or
add
mov
sub
jmp
mov
jmp
add
add
add
pop
jmp
push
mov
dec
rol
mov
jmp
out
fsubrs
in
or
mov
sub
jmp
sub
cmpl
lea
je
jmp
call
ret
add
test
clc
incl
aad
incl
jne
add
ret
sub
shr
and
or
mov
push
jmp
dec
leave
jmp
call
call
push
xorl
call
jmp
dec
test
jne
sub
sub
sub
rol
xor
mov
sub
mov
jmp
add
mov
dec
shr
mov
add
test
jne
add
cmpl
jmp
mov
or
inc
mov
sub
mov
shr
lea
lea
cltd
and
add
sar
jmp
mov
mov
sub
mov
mov
mov
mov
add
rol
mov
lea
push
jmp
jne
movzbl
jmp
je
movsbl
rol
add
xor
mov
jmp
sub
shr
sub
mov
rep
movzwl
xor
rol
add
inc
mov
add
jmp
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
test
idiv
lcall
pop
mov
pop
ret
add
add
add
add
add
jecxz
xor
shr
mov
test
jle
or
ror
mov
sub
sub
jmp
and
push
call
leave
call
inc
addl
push
jmp
dec
bound
jmp
push
mov
mov
jmp
iret
scas
push
test
jne
cmp
jmp
adc
out
add
jmp
sub
mov
jne
sub
sub
jne
test
mov
jmp
sub
push
call
push
jmp
call
addl
mov
call
push
jmp
inc
dec
call
call
addl
jmp
iret
inc
mov
and
mov
mov
shr
jmp
fidivl
add
add
cmp
jl
jmp
mov
mov
jl
dec
mov
mov
jmp
sbb
jle
jmp
sub
stc
mov
call
push
jmp
push
inc
nop
nop
push
addl
mov
jmp
jl
inc
and
add
test
mov
je
sub
mov
sub
jmp
mov
push
mov
push
add
and
sub
mov
jmp
or
mov
and
mov
add
add
sub
jne
jmp
call
push
jmp
push
dec
push
pop
call
leave
jmp
dec
xorl
mov
call
add
mov
movb
nop
nop
nop
nop
nop
movb
movb
call
cmp
push
jae
jmp
xor
pop
inc
shl
and
mov
pop
ret
mov
mov
jmp
call
add
xor
rol
mov
call
push
jmp
nop
jmp
push
call
ret
push
addl
push
jmp
call
push
push
call
call
addl
jmp
test
mov
jle
and
xor
shl
or
or
mov
lea
push
sub
shl
inc
mov
nop
nop
nop
nop
nop
ror
mov
pop
rol
mov
xor
add
jmp
call
push
jmp
push
call
jmp
inc
call
xorl
push
jmp
call
call
push
nop
call
int3
addl
call
push
jmp
call
push
call
leave
inc
nop
xorl
jmp
jne
jmp
sbb
pop
rol
and
xor
and
mov
mov
pop
add
pop
and
inc
mov
mov
pop
ret
add
add
add
adc
or
add
mov
mov
call
and
mov
call
movl
lea
jmp
mov
push
add
mov
lea
mov
or
mov
jmp
addr16
call
mov
shr
shl
sub
mov
ror
mov
jmp
inc
dec
int
ljmp
lcall
pop
mov
xor
or
ror
mov
pop
ret
add
add
add
adc
lea
push
call
test
jmp
push
jle
shr
and
add
test
je
xor
movl
mov
or
mov
jmp
push
dec
xchg
mov
mov
jmp
aad
sbb
add
test
add
add
adc
push
jmp
nop
jmp
dec
dec
xorl
push
jmp
int3
ret
addl
jmp
inc
in
mov
cmp
jne
mov
add
jmp
push
outsl
call
test
jmp
ljmp
rorb
or
add
movzbl
add
lea
mov
dec
and
mov
mov
shr
nop
nop
nop
nop
nop
and
add
subl
lea
jmp
xchg
aam
pop
mov
mov
pop
mov
pop
shl
add
mov
sub
mov
pop
ret
add
add
add
test
add
add
ret
pop
pop
mov
nop
nop
nop
nop
nop
pop
dec
dec
mov
add
mov
pop
ret
add
add
add
test
incl
sbb
test
add
add
fmuls
shrl
mov
mov
nop
nop
nop
nop
nop
add
jmp
nop
nop
nop
nop
nop
movb
add
jmp
jmp
dec
sub
shl
mov
and
nop
nop
nop
nop
nop
add
add
shr
mov
mov
je
test
nop
nop
nop
nop
nop
je
shl
mov
add
mov
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
jne
and
and
mov
mov
mov
movl
jmp
nop
nop
nop
nop
nop
movl
mov
movl
jmp
lea
call
cmpl
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
cmp
jne
call
test
mov
je
nop
nop
nop
nop
nop
xor
mov
sub
add
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
sub
dec
shr
or
mov
movzbl
shl
add
jmp
lea
xor
mov
mov
call
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jb
add
cmp
jae
add
nop
nop
nop
nop
nop
test
mov
je
lea
nop
nop
nop
nop
nop
rol
sub
add
and
ror
mov
sub
mov
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
mov
mov
mov
xor
xor
mov
shl
mov
movl
jmp
nop
nop
nop
nop
nop
mov
mov
add
add
mov
movl
mov
cmpl
je
nop
nop
nop
nop
nop
pop
xor
dec
mov
sub
pop
pop
add
add
sub
mov
pop
ret
add
add
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
add
add
sbb
add
add
add
cmp
out
xchg
xor
cmp
mov
cmp
cmp
aaa
sub
ljmp
aaa
mov
xchg
xor
xor
cmp
cmp
inc
ds
ds
aas
pop
aas
adc
fnsave
add
dec
aaa
jns
mov
xor
push
aaa
cmc
xor
mov
xor
xor
xor
sbb
add
fnstenv
xchg
xor
xor
pop
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
inc
add
enter
dec
cmp
fsub
dec
push
mov
dec
or
add
mov
mov
cmpsl
and
or
lock
daa
in
sahf
lods
mov
decl
fcoml
pop
out
pop
push
movsl
inc
inc
add
and
jae
rcr
mov
in
xchg
shlb
xlat
aaa
pushf
dec
push
fcomps
and
out
aam
dec
and
mov
call
mov
pop
loopne
and
loope
rcl
outsb
fnstenv
adc
stos
or
mov
lret
inc
mov
jl
aas
adc
or
rcll
add
pop
pop
xchg
loope
sarl
ds
int3
outsl
test
add
pop
mov
cmp
sbb
inc
xor
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
