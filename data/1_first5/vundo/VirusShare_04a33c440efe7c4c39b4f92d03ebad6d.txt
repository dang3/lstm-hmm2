mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pop
push
push
push
push
lea
or
fwait
push
call
nop
add
cmp
adc
loopne
pop
andnps
cmc
xchg
sub
and
repnz
in
pop
push
jg
add
cmp
lds
shlb
in
flds
pop
push
push
add
push
lea
mov
outsl
mov
andb
cli
xor
sub
lea
mov
mov
push
adc
out
push
pushf
sub
ror
dec
not
sub
or
mov
add
arpl
les
fstpl
fstl
int
sti
jl
add
icebp
xor
lea
push
add
pop
add
adc
push
mov
sti
push
push
mov
jo
addl
addr16
jecxz
add
repz
add
push
push
xchg
xchg
jmp
ss
add
add
or
add
loop
xor
shlb
push
or
adc
or
lcall
dec
rcrb
pop
scas
out
pop
sahf
sbb
xor
and
divb
sbb
lret
add
rclb
insb
xor
mov
jmp
out
add
lea
lret
mov
push
dec
ss
pop
stos
shl
not
sub
outsb
aam
jo
insl
inc
or
sbb
pop
push
cmp
xchg
add
add
push
push
push
xchg
lea
std
inc
fldl
in
push
loop
dec
sub
jmp
cld
lea
pop
adc
jno
and
mov
fwait
repz
gs
and
lcall
testb
sub
add
lea
mov
enter
dec
frstpm(287
movsb
shlb
push
add
not
add
aas
call
sbb
push
shrl
mov
loopne
cli
or
dec
lods
fcompl
mov
lds
test
testb
loope
mov
pop
pusha
inc
add
icebp
and
loopne
xchg
mov
xor
mov
and
dec
add
pop
cmp
xchg
add
push
inc
mov
insb
fildl
jbe
les
add
lea
stos
push
push
or
pushf
in
add
sub
xchg
rolb
sub
shr
push
rclb
aaa
mov
inc
pushf
mov
popl
les
in
pusha
in
mov
mov
dec
mov
rcrb
shr
and
or
sub
loope,pt
inc
pop
pop
ret
out
or
jp
inc
or
dec
hlt
jbe
sub
lds
shlb
rcrb
ret
mov
sbb
jmp
mov
int
mov
notl
or
adc
add
inc
xor
jmp
push
call
nop
add
and
or
mov
mov
arpl
enter
lea
jmp
mov
loopne
jl
mov
pop
les
push
push
aam
inc
sub
enter
mov
rcrb
add
jne
les
jbe
mov
cmp
push
adc
or
cmp
push
push
add
mov
sbb
push
xor
pop
push
push
xchg
mov
clc
faddl
jecxz
pop
push
push
fnstsw
stos
sbb
sbb
xor
shll
lds
and
and
pop
stc
pop
jg
or
test
int3
scas
dec
mov
jo
shll
and
add
dec
dec
add
into
mov
iret
inc
out
cmp
test
mov
lea
xchg
nop
jnp
push
push
mov
or
jle
movsb
mov
imul
clts
rolb
xchg
pop
push
push
mov
push
jno
jb
es
test
push
mov
scas
inc
xor
or
dec
sub
into
outsb
push
or
mov
cmpsb
movsl
inc
movsb
mov
js
int3
push
mov
add
dec
pop
jecxz
pop
push
loopne
ficomps
testl
nop
std
jae
inc
push
cld
push
fs
push
cmp
mov
mov
jl
add
xchg
int3
and
rol
test
add
rclb
bound
call
std
in
mov
pop
and
in
in
fs
add
not
lea
or
sub
clc
xor
in
dec
pop
add
push
je
das
aam
jns
dec
or
aas
lcall
dec
inc
jae
cltd
cmp
call
push
push
push
inc
lea
and
jnp
pop
push
push
movsb
or
push
test
cmp
in
loopne
mov
mov
loopne
in
jecxz
ror
inc
ja
push
ror
int
jmp
push
push
lock
sub
cmp
jle
addb
cs
pop
adc
cld
cmp
pop
cmp
xchg
cltd
xchg
inc
adc
cli
or
out
add
into
inc
shl
fmul
xor
lret
mov
jl
scas
inc
sbb
adc
jbe
add
nop
arpl
enter
fs
cmovb
lret
adcb
mov
mov
push
and
inc
mov
xchg
hlt
adc
cmp
adcb
pop
lea
pop
enter
xor
lods
pushf
mov
inc
adc
inc
sub
mov
dec
mov
adc
or
or
push
nop
adc
xchg
in
mov
mov
push
add
in
pmaddwd
rorl
push
push
sub
scas
adc
scas
rol
inc
dec
inc
xchg
sti
push
cld
out
xor
sarb
push
test
sbb
outsl
add
loopne
movsb
push
or
pop
adcl
adc
push
shll
call
jno
or
mov
jle
test
or
xchg
push
shl
xchg
jb
icebp
and
xor
inc
dec
pop
add
int
or
ficoml
out
sub
cli
pop
enter
or
mov
pop
ja
xchg
add
push
push
push
test
adc
sub
movsl
sub
ds
xchg
inc
mov
add
inc
test
aas
call
es
pop
push
mov
adc
xor
lds
xchg
mov
sbb
loop
lea
sbb
dec
xchg
pop
push
xchg
mov
pop
pushf
mov
mov
sbbb
xor
push
test
pop
inc
sbb
mov
scas
subl
jge
negb
xchg
xor
scas
rcrl
sub
rolb
lret
xor
inc
dec
add
pop
lock
rclb
xor
add
xlat
lea
sbb
mov
and
adc
out
std
cli
jge
add
or
sub
adc
popa
push
sbb
sub
rcrl
arpl
push
inc
xor
add
mov
arpl
cmp
push
sbb
enter
mov
pop
push
jecxz
into
lods
icebp
pusha
mov
cwtl
push
sub
xor
push
not
pop
loope
pop
xor
lahf
mov
push
std
sbb
sub
add
mov
jae
out
jl
divl
cmp
cs
xor
push
and
loop
pop
jo
mov
mov
xlat
iretw
adc
pusha
push
mov
mov
and
jbe
adc
jnp
dec
inc
sub
pop
or
fisubs
in
das
out
loopne
aam
mov
nop
in
rorb
test
ret
gs
arpl
jecxz
mov
dec
mov
inc
adc
sub
jo
lcall
mov
add
push
sbb
cmp
push
push
mov
mov
inc
sub
lea
sarl
iret
pusha
push
or
idivb
mov
sub
sub
cs
mov
add
lds
or
push
cld
rclb
into
sub
hlt
cmp
js
push
out
scas
add
lea
push
cld
mov
inc
adc
scas
pop
or
sbb
add
push
add
sub
lea
mov
lret
test
mov
push
gs
in
jp
add
and
shrl
outsb
call
inc
inc
and
xchg
pop
add
andps
mov
jp
cmovne
and
rcrl
ss
movsb
dec
push
sbb
add
add
mov
aas
adc
pop
loope
mov
xor
and
adc
lock
dec
dec
lods
test
pop
xor
add
not
pusha
movsw
out
out
dec
push
ljmp
out
aam
out
dec
loopne
sbb
pusha
lock
arpl
mov
mov
xor
push
inc
push
inc
inc
lods
mov
sbb
ljmp
sarl
repz
out
std
in
or
pop
push
nop
mov
out
cld
ret
jle
sub
lds
sub
into
sbb
mov
push
daa
push
clc
mov
adc
into
sbb
push
add
add
mov
sub
push
push
dec
inc
in
cld
pop
js
lea
xchg
cmc
cld
push
push
sbb
dec
jno
lods
test
movsl
lahf
lahf
call
leave
jne
add
xchg
inc
jbe
es
jo
sbb
jp
enter
cwtl
adc
xchg
xchg
test
mov
push
mov
inc
imul
fsubs
daa
or
in
fnstenv
push
in
popa
jmp
xor
adc
push
test
xchg
pop
push
arpl
nop
sub
mov
xor
mov
addb
mov
out
or
cli
push
and
and
mov
add
inc
add
sub
add
mov
das
jb
xor
mov
mov
lret
or
icebp
repnz
daa
add
push
xor
sbb
shlb
push
sub
pusha
ret
and
icebp
jge
push
lea
or
stos
lock
sub
cli
shl
dec
repnz
add
js
pop
ret
mov
push
rep
push
lret
out
mov
inc
pop
pop
sbb
mov
leave
cmp
insb
enter
sub
daa
mov
cmp
loope
cmp
inc
mov
and
cwtl
call
test
enter
push
lret
popf
xchg
clc
lret
shlb
or
pop
out
cmpsb
imul
mov
mov
repnz
inc
sbb
push
push
pop
cwtl
arpl
hlt
add
cmp
stos
in
repz
push
rcll
dec
add
dec
pop
pusha
push
push
jmp
inc
mov
mov
and
in
int3
int3
mov
imul
push
jg
or
movsb
add
jo
je
in
add
divb
sub
bound
bound
or
call
sbb
and
pusha
inc
push
push
pop
enter
xchg
push
imul
std
and
loop
mov
in
dec
mov
jbe
rclb
enter
insl
sub
js
push
fbld
hlt
test
inc
adc
add
inc
aad
in
lods
call
cltd
jae
and
jmp
mov
or
pop
loopne
push
inc
loop
test
cmp
dec
pop
mov
inc
popa
lret
outsl
je
mov
js
aam
lcall
cltd
ja
mov
and
movsl
and
or
cmp
sub
sbb
into
push
inc
push
lea
ret
dec
loopne
and
mov
push
inc
and
loopne
mov
test
add
movsb
pop
push
push
add
not
xor
sbbl
int
adc
add
mov
or
mov
rol
call
mov
pop
jo
dec
xor
lahf
mov
jle
lock
pop
mov
push
push
mov
daa
push
or
and
sub
out
sbb
loopne
add
and
sub
fwait
lret
incl
scas
mov
ret
mov
inc
sarl
mov
fimull
out
push
jns
pop
mov
sti
or
push
pushf
sub
and
push
jbe
adcb
mov
push
enter
mov
js
mov
xlat
fiaddl
fdivrs
ret
fdivrs
push
cmp
das
je
mov
cld
xchg
fbld
ss
add
fildl
mov
and
lahf
jg
mov
in
rcl
stc
jge
pop
or
pop
sub
push
cmp
xchg
lea
cmc
mov
adc
imul
add
or
push
add
lret
mov
imul
testl
subb
orl
push
xor
dec
mov
add
dec
inc
adc
out
insl
popf
xorl
pop
cmp
pcmpeqb
push
push
xchg
loopne
push
movsb
into
adc
fists
repnz
loop
lea
in
add
mov
push
stc
bound
dec
dec
cmp
aaa
push
dec
inc
mov
sti
cltd
mov
add
and
jmp
inc
sub
jo
stc
and
sbb
test
imul
push
add
add
mov
mov
aas
xlat
loopne
inc
in
add
sbbl
cld
push
sbb
push
xchg
xor
inc
movsl
push
push
rclb
pop
adc
adc
outsl
dec
loopne
cltd
mov
data16
pop
bound
ss
jl
jmp
loope
test
cmp
add
cs
adc
push
or
aam
lea
pop
loope
dec
cmp
or
push
jge
jns
xchg
adc
cmp
lock
movsb
and
add
test
push
dec
sbb
and
int3
push
sub
les
clc
std
fsubrs
or
mov
lsl
push
and
fmuls
cmp
jge
rclb
mov
and
dec
jbe
mov
jae,pn
popa
mov
mov
or
pop
adc
push
mov
mov
js
push
mov
inc
adc
dec
pop
xorl
xchg
adc
xlat
ds
in
sub
repnz
pushl
popl
pop
mov
push
inc
out
cld
xchg
std
add
cmp
into
mov
xlat
add
jo
add
push
in
iret
dec
hlt
jmp
pushaw
loopne
pop
lock
xor
mov
push
mov
ret
xlat
and
jp
inc
shr
and
jl
jns
in
jp
push
pop
add
push
add
jle
xor
loop
add
pop
mulb
lea
adc
lret
xchg
lock
shl
xor
int
adc
rcll
add
pop
push
out
insl
xchg
mov
shlb
repnz
mov
andl
sbb
out
jmp
pop
push
out
in
mov
add
clc
cmp
push
pop
hlt
repz
lahf
xor
rcl
not
sub
nop
push
lea
mov
xchg
aaa
daa
pop
lock
rclb
test
mov
xor
sahf
jae
rcll
push
add
fisubs
adc
mov
add
inc
mov
sub
loope
adc
push
mov
aaa
xor
jge
nop
and
push
out
cmp
add
fcmove
push
adc
nop
add
stos
mov
loopne
orb
daa
jne
inc
xor
jo
sub
mov
stos
cli
xchg
mov
shrb
push
out
add
lea
jnp
xor
mov
inc
pop
dec
int
adc
std
repz
adc
inc
sbb
test
xlat
ja
cmp
aad
inc
lods
jge
push
and
jmp
leave
or
dec
add
loope
cmpsb
sub
outsl
xor
add
xchg
add
xor
ror
adc
lods
adc
xorb
jne
sbb
xlat
xchg
call
mov
mov
jmp
test
mov
or
test
adc
scas
pop
mov
call
fildl
mov
jecxz
fidivl
insl
rclb
test
xchg
xchg
push
aad
mov
popf
mov
leave
mov
les
fadd
ret
and
add
pop
push
and
push
jb
fistl
push
mov
aaa
ret
icebp
adc
cltd
cli
rorl
call
stos
fdivl
pop
in
and
gs
and
jne
jb
daa
pusha
cmp
push
fmuls
or
pop
int3
iret
and
addb
ss
aaa
sahf
xchg
add
pusha
or
std
ret
push
add
fiaddl
aaa
sbb
shr
pusha
enter
adc
mov
push
xchg
cmp
sub
in
pusha
add
movzwl
mov
popf
xorl
sbb
ljmp
push
inc
out
xor
out
pop
leave
and
jae
shl
out
jae
aaa
in
fisttps
jecxz
push
pusha
repnz
adc
cli
iret
cmp
cmc
dec
cmp
add
shl
xor
mov
xchg
in
xchg
leave
mov
js
adc
sbb
or
popa
xor
and
ret
xor
push
addb
repnz
mov
cmp
fwait
pop
push
push
dec
dec
hlt
mov
xor
or
sbbl
mov
pop
popa
ror
jecxz
orl
hlt
sbb
add
les
dec
lea
sub
aam
adcl
jbe
adc
out
pusha
inc
xor
sbb
js
inc
lea
push
push
call
add
pop
lea
shll
push
stos
rcll
pop
mov
sarb
and
arpl
push
mov
sub
int
rolb
fisttps
sbb
mov
add
mov
sub
xor
clc
outsl
push
adc
shl
das
popf
addl
in
fnsave
orl
adc
pmaxsw
adc
nop
test
leave
testb
cmp
jmp
and
push
out
ljmp
mov
cmp
mov
outsb
or
cmp
and
rcl
push
mov
cvtps2pd
incl
lea
clc
jmp
xor
ja
jnp,pn
xor
push
repnz
cmc
add
lods
jno
push
inc
sarl
hlt
xchg
loop
out
adc
jle
shlb
bound
pop
push
hlt
inc
mov
add
dec
hlt
fisttpl
xor
lock
or
or
and
xchg
clc
rolb
hlt
push
mov
or
sub
sbb
shr
xor
scas
xchg
in
rcl
mov
sub
add
das
loop
loop
and
fdivrl
or
cmp
and
fsubl
mov
outsl
dec
push
icebp
cmp
mov
cmp
loop
add
add
inc
adc
add
not
sub
pop
jl
and
adc
inc
addr16
mov
or
or
call
jae
scas
jo
add
sahf
rcrb
push
jg
mov
cld
arpl
ficomps
and
fsubr
pop
mov
add
aam
aaa
or
dec
mov
cs
rolb
push
push
subb
xchg
mov
push
add
fs
clc
shl
mov
push
rolb
xor
mov
pop
and
sbb
add
mov
xor
int3
sub
add
push
cmc
and
mov
sbb
jae
and
jo
dec
xor
or
in
inc
pop
cmpl
push
xchg
icebp
add
rol
lock
loop
xor
dec
or
add
lea
xchg
subb
repnz
dec
ret
push
push
lea
or
clc
aam
jno
jg
sar
push
push
mov
or
ja
push
mov
inc
mov
dec
inc
add
dec
pop
push
sub
jl
lahf
adc
loopne
add
xchg
mov
and
repnz
mov
addr16
dec
rcll
shrb
inc
pushf
ret
jns
add
adc
insb
pop
lahf
jns
out
add
dec
in
add
call
xor
jecxz
add
pop
pop
inc
jge
add
in
mov
jl
aas
push
xlat
push
push
pop
mov
jmp
mov
andl
xchg
xor
cmpb
repnz
xorb
xchg
stos
mov
sarb
ud2
call
xor
mov
movsl
sub
pop
je
xor
mov
sub
jo
std
loop
dec
popl
lds
out
aas
xchg
cmp
call
rolb
cli
roll
dec
cmp
jne
or
es
dec
rorb
in
mov
add
inc
or
jmp
bound
incb
mov
inc
jno
pop
pop
cli
push
repnz
jge
sub
add
mov
ficompl
or
xchg
mov
call
sbb
inc
or
dec
jno
ret
call
add
cmp
push
mov
push
movsb
mov
add
rorl
add
rorb
cli
icebp
and
push
dec
jbe
fisttpl
xor
dec
pusha
je
outsb
push
aam
xor
daa
stos
in
repnz
sub
inc
sub
sub
cwtl
fwait
adc
rcrl
addl
mov
mov
xor
ret
push
stos
xlat
add
int3
push
out
and
test
push
clc
add
mov
rol
cltd
imulb
add
inc
adc
cld
mov
incb
pusha
jle
cmpb
fucomi
add
in
jecxz
inc
pop
mov
or
add
jne
popf
test
cmp
popa
or
mov
popf
outsb
pusha
add
in
add
mov
inc
ds
call
sbb
push
test
jle
push
xchg
dec
dec
jmp
icebp
mov
and
test
jbe
pop
push
sar
iret
cmpb
mov
add
add
cltd
xlat
mov
inc
fsubrl
or
in
push
enter
jg
mov
mov
or
in
ds
out
inc
iret
xorl
push
sub
xlat
sbb
or
clc
call
popf
sbb
pop
call
or
out
movsb
adc
decl
testb
cs
scas
cmp
mov
int
or
pop
xchg
and
mov
sahf
bound
jecxz
inc
imul
xor
mov
cmc
inc
pusha
shrb
fldl
insb
cmp
pop
pop
pop
xor
cs
pop
or
inc
pop
push
lods
lds
lea
add
pop
mov
subl
lea
push
testl
dec
cmc
sub
lock
and
inc
in
add
pop
shlb
mov
xchg
js
dec
dec
in
sbb
push
dec
mov
mov
cli
xchg
clc
leave
add
push
and
push
and
lds
mov
call
movsl
repz
cmpl
add
iret
lea
mov
sub
push
or
cmc
mov
stc
imul
fcoms
jmp
cmp
inc
push
lcall
out
mov
fsts
test
push
cld
sbb
cmpsl
mov
pop
fdivrl
arpl
sbb
push
fcomi
jnp
sub
add
mov
aas
mov
call
lret
dec
fisttpl
std
mov
mov
xor
lock
adc
cmp
call
test
stc
mov
ret
or
inc
dec
sti
cld
or
jmp
jne
aas
addb
shlb
jnp
push
pop
mov
imul
dec
daa
push
push
xchg
push
sbb
jecxz
xor
fsubrl
ja
jmp
pop
add
push
and
mov
mov
xchg
cli
sarl
jmp
out
dec
sub
xor
jo
mov
push
push
xor
testl
mov
lret
push
mov
ret
lcall
mov
aad
mov
mov
shl
adc
loop
lret
pop
inc
lea
ror
dec
pop
call
push
int3
hlt
dec
lock
dec
in
xor
sbb
dec
mov
sti
sub
pop
hlt
rclb
mov
push
sub
movsb
je,pt
jmp
push
std
clc
push
gs
call
lea
add
dec
pop
dec
mov
rcr
icebp
jmp
test
andl
fnsave
jp
jmp
xchg
hlt
and
out
cld
mov
call
adc
outsl
test
jp
repz
dec
andb
or
pop
sbb
push
in
or
call
xchg
shrl
dec
ret
mov
add
stos
scas
jo
xor
mov
addb
mov
mov
sbb
leave
pop
not
adc
repz
dec
pop
test
add
shll
fcmove
add
neg
or
jmp
mov
sub
lret
push
ja
add
push
fsub
lea
or
cmc
pop
and
cmc
dec
push
cmp
in
sti
rorb
push
and
int3
jno
rclb
mov
fisttpl
repz
bnd
mov
xor
inc
jle
cmpsl
lock
into
push
sti
mov
lahf
push
je
ret
cmpsb
pop
cmp
js
pop
fdivr
add
repz
hlt
xlat
add
popf
icebp
inc
stc
ljmp
jg
or
popa
movsb
mov
in
sbb
mov
scas
popf
pop
dec
pop
sub
mov
mov
shr
cmp
lds
insb
icebp
das
aam
clc
clc
or
std
popf
mov
push
sbb
nop
add
mov
mov
out
dec
or
fsubrl
pop
push
push
lea
push
push
pushf
cli
movnti
and
in
or
mov
push
call
dec
cmp
jle
ret
aaa
sub
enter
add
sub
adc
clc
imulb
call
sti
fisttps
les
lcall
pop
push
popf
lret
rclb
stos
xlat
test
sti
inc
cmp
cli
cmpsb
dec
orb
sbb
mov
std
inc
inc
mov
fwait
hlt
sarl
clc
pop
rep
push
loopne
lea
or
pop
pop
add
roll
push
cmp
push
lock
push
mov
rolb
int
loopne
mov
aaa
and
adc
add
push
cs
sub
popf
aaa
pop
cmc
fcomip
inc
negb
ret
add
push
push
repnz
and
ds
je
or
filds
hlt
not
mov
or
enter
sahf
loopne
xlat
mov
push
dec
stos
jmp
insb
dec
add
push
push
mov
sub
addr16
add
xchg
lock
movb
cs
dec
jnp
dec
adc
sbb
fstl
sbb
push
push
std
xchg
call
adc
push
sub
fimull
flds
repz
lcall
int
enter
subl
flds
mov
shl
and
fst
push
cmpl
push
outsl
add
xor
xchg
dec
push
pop
xor
adc
lea
imul
jns
add
mov
jl
or
inc
data16
int3
cmp
imulb
cmpsb
hlt
or
dec
cld
pop
addr16
mov
xchg
or
add
cld
mov
shrb
mov
rcll
push
out
test
dec
mov
shrl
rclb
icebp
add
xor
js
test
add
mov
cmp
mov
ja
dec
inc
stos
push
in
in
cmp
mov
dec
mov
enter
xor
adc
adc
notl
mov
or
sub
into
inc
inc
push
in
xchg
pushf
ret
fcoms
dec
jne
cmp
ds
pusha
dec
outsl
and
push
ret
pusha
arpl
xor
ret
mov
xlat
pushf
and
fsubrs
push
push
push
loop
inc
rol
pusha
test
ss
xor
sub
xchg
roll
add
mov
imul
xchg
jl
cmp
push
mov
data16
or
push
out
sub
call
inc
nop
cmp
cmp
in
pop
sbb
mov
and
inc
lea
fdivrs
sub
pop
sbb
ret
sbb
push
shrl
dec
sub
sarb
xor
inc
cld
jb
or
adc
xchg
sbb
add
pop
push
dec
pop
mov
jmp
pop
mov
add
sbb
loopne
ret
adc
or
cmp
pop
xor
adc
outsl
scas
adc
add
inc
roll
pop
cmp
xor
and
lret
pop
fcompl
shl
movsl
add
ret
mov
jnp
sub
push
loopne
ficomps
xorl
or
jmp
xor
xchg
sub
enter
push
ret
pop
ja
sti
popa
mov
fldl
je
xor
fstl
hlt
rol
stos
sarl
push
loope
lea
xchg
test
scas
push
adc
adc
mov
inc
add
mov
test
inc
or
insb
adc
inc
adc
pop
lea
cli
pop
dec
pop
add
aad
mov
out
pop
je
movsb
cltd
ret
sub
push
push
cmpsl
lret
pop
jmp
lock
xchg
mov
stc
adc
orb
ret
nop
mov
xor
in
adc
fwait
mov
inc
mov
sbb
fsubrl
sti
inc
mov
xor
out
in
adc
lret
js
test
nop
pushf
sqrtps
push
push
mov
dec
pusha
mov
icebp
adc
enter
inc
or
push
add
insl
lahf
push
add
cld
pop
push
sbb
add
push
add
xor
cmp
ds
mov
jns
jno
imul
adc
in
push
ds
ljmp
lret
sbb
mov
add
ljmp
or
cmc
mov
mov
mov
sbb
pop
mov
push
sub
iret
pop
jmp
adc
jmp
xor
clc
push
xchg
xor
xor
in
roll
rcrb
mov
adc
ret
push
cmp
loopne
jle
pop
lea
xchg
add
in
jno
jmp
or
xor
sub
add
inc
ret
push
cmp
shlb
pop
jmp
lds
aad
inc
sub
not
mov
mov
int3
xchg
sbbb
sbb
adc
push
sub
add
cmp
add
pushf
inc
push
push
and
jp
mov
lret
imul
jmp
inc
mov
stos
mov
ret
addb
out
push
repz
loopne
sub
cwtl
mov
add
inc
hlt
stos
add
or
push
push
ud2
xor
repnz
xor
dec
shl
test
addb
mov
and
sbb
ret
pop
stos
dec
xor
xchg
dec
cmp
fcmovbe
stos
hlt
insl
add
mov
add
pop
push
icebp
scas
outsb
ret
into
push
mov
shl
cmp
cmp
jle
jo
push
sub
cli
cwtl
cmp
out
dec
xor
add
xor
push
cmp
cmpsb
iret
xchg
xchg
mov
mov
dec
cwtl
orl
inc
jb
test
cmpsb
cmp
fistpl
pusha
rolb
mov
xor
les
int
divl
lea
adc
cltd
pop
mov
cmp
and
cwtl
scas
cld
rorl
add
cli
jmp
insl
add
and
or
hlt
adc
dec
stc
sbbb
pop
adc
sti
out
sub
or
sub
jl
adc
rol
ror
out
jg
dec
dec
mov
fsubrs
frstor
pop
mov
dec
test
andb
add
fdivp
adcl
test
or
push
aad
sbb
cld
imul
notb
gs
mov
mov
negb
test
cmc
inc
ret
ds
sarl
push
mov
repz
or
inc
pop
cmp
sbb
inc
mov
and
daa
cmpsl
adc
jmp
js
add
leave
mov
mov
push
push
push
test
gs
jp
pop
jne
mov
mov
or
mov
cmc
jecxz
rcll
hlt
jb
xchg
push
push
push
fsubrl
mov
out
add
insl
imul
jmp
dec
movsl
aas
cmp
dec
add
xchg
call
ror
fwait
add
xchg
push
adc
jne
nop
sub
nopl
push
xor
jne
pusha
and
rolb
jbe
loopne
sub
xor
add
sub
add
push
pop
jg
scas
xor
shr
dec
fdivp
sbb
xlat
pushf
sbb
call
ljmp
cli
outsb
jne
or
add
add
stc
pop
cli
sub
and
mov
mov
xchg
loopne
xchg
jae
pop
pop
cmpsb
push
dec
ror
push
add
add
lcall
or
iret
cmp
setno
pushf
rcll
mov
aam
lods
aad
pusha
dec
sbb
xchg
roll
xchg
sbb
jnp
enter
sbb
push
call
aad
xor
nop
xor
sbb
sahf
in
repnz
or
xor
mov
jnp
cmp
or
ret
and
rorl
outsl
inc
inc
fimull
pop
pop
mov
repz
lahf
pop
jbe
add
inc
xchg
outsb
sub
pop
dec
lret
sbb
push
and
add
lea
js
add
mov
cmp
jmp
push
add
or
inc
mov
sub
test
outsl
push
jmp
ds
push
fnstsw
enter
push
add
or
lret
orl
push
imull
ficoms
pop
jl
pop
push
dec
add
lea
loopne
mov
mov
jb
shrb
push
add
data16
and
sbb
jnp
xor
jns
cs
inc
or
rorb
je
ret
cmc
push
jns
out
xlat
cwtl
jno
sub
ret
enter
popf
xchg
push
shlb
add
push
push
push
push
pop
mov
push
into
popa
add
outsb
ror
and
jp
pop
les
mov
and
xor
add
push
adc
lea
pop
mov
dec
add
jmp
xor
hlt
add
ljmp
pop
mov
call
dec
cmp
jp
out
sahf
mov
mov
scas
mov
lahf
xor
or
js
jmp
jb
add
jmp
cld
mov
repz
loop
repz
shrb
jbe
cmpsl
mov
in
enter
gs
inc
mov
fimuls
add
data16
pop
push
pop
shr
or
add
mov
aas
enter
ror
add
pop
jmp
mov
jl
sahf
in
mov
jne
ss
inc
cmp
jle
repnz
shrl
lcall
mov
jge
add
add
jmp
inc
lea
xor
push
push
cmpb
pop
icebp
mov
daa
push
lds
adc
mov
xor
jne
sbb
add
jno
sub
not
gs
mov
lds
test
jb
pop
jge
xchg
enter
xchg
in
cmp
out
mov
repz
test
lock
dec
int3
push
ret
sub
in
push
out
pop
dec
xchg
push
push
adc
push
loop
subl
std
lret
jae
pop
cld
xchg
in
cmpsl
add
add
push
aam
fidivrs
inc
rclb
notl
in
inc
add
mov
pop
imul
comiss
ds
sbb
adc
popa
push
push
inc
push
sub
int
mov
lock
mov
xor
iret
fs
repz
xchg
mov
push
pop
subb
pop
pop
push
les
fldenv
push
and
mov
leave
hlt
fisttpll
push
inc
idiv
or
push
cmc
mov
shl
adc
in
sti
or
pop
adc
sub
mov
mov
movsl
scas
orl
inc
add
in
sub
mov
inc
cmp
jp
jne
mov
roll
mov
das
insb
daa
pop
push
clc
sarl
sub
push
test
popf
jg
jge
adc
push
out
out
dec
test
mov
orb
mov
xor
add
mov
outsl
in
mov
stos
add
mov
jne
cmp
pop
dec
cmp
cwtl
mov
clc
and
jne
add
not
sub
cld
lret
jl
sbb
cmp
int
lcall
or
test
mov
or
mov
pop
adc
idivb
or
sub
repnz
lea
sti
lods
or
incb
xor
pop
hlt
cmpb
insl
add
lahf
call
jp
sarb
mov
loopne
lea
xor
inc
movsb
inc
or
inc
pop
dec
test
mov
sbb
sti
xchg
aas
push
push
push
jno
mov
mov
xor
insb
mov
mov
push
sub
fcomps
sbb
jbe
xor
and
cwtl
sti
mov
ss
testl
push
add
outsb
xorl
mov
fadd
leave
push
orl
hlt
xor
sbb
pop
cmp
cwtl
mov
loopne
jne
jo
dec
push
dec
cmp
hlt
cmp
xchg
out
inc
add
push
shl
dec
jmp
mov
in
push
out
mov
sbb
roll
cmp
push
add
mov
inc
cmp
dec
std
sub
pusha
push
push
loopne
jecxz
sub
outsb
add
xchg
cs
mov
and
or
mov
fmulp
jnp
daa
cmp
into
sub
jmp
dec
jns
fs
xlat
jns
push
repz
add
add
add
sub
pop
or
nop
and
xorl
daa
testl
adc
pop
cld
int3
or
jg
mov
mov
sahf
lahf
movsl
cld
or
out
pop
mov
push
mov
fistpl
mov
pop
mov
dec
stos
push
and
stos
lret
pop
test
loopne
inc
cld
dec
push
test
add
ret
mov
test
adc
and
jecxz
xor
pop
cld
push
xchg
ja
and
push
ret
xchg
lret
mov
fsub
xlat
lret
cld
inc
lret
das
sub
cmp
outsl
push
test
lea
mov
jbe
outsl
dec
cmp
pop
cmp
add
enter
stos
xor
xor
xor
or
mov
lahf
out
cmp
inc
xchg
push
lcall
or
mov
mov
in
dec
jl
stos
mov
lret
adc
nop
add
pop
je
cmpsl
dec
inc
add
mov
sti
xor
sub
jae
jp
sub
addb
cmp
in
sbb
or
pop
loop
adc
popa
pop
mov
sub
add
in
pop
mull
dec
mov
pop
call
clc
push
fs
jo
fistl
je
addr16
and
add
sub
mov
xchg
jp
cmp
iret
shl
out
jbe
jbe
cmp
cmp
sarl
mov
xor
pop
and
add
mov
jg
test
icebp
jns
dec
and
lea
xchg
mov
lods
mov
sbbb
cmp
push
push
test
mov
pop
and
or
divb
jmp
xor
dec
mov
xchg
js
pushl
push
mov
mov
add
out
inc
mov
les
push
dec
inc
mov
xor
arpl
add
add
cmp
push
jns
xchg
fs
adc
xchg
pop
pop
dec
dec
shlb
loope
mov
xchg
data16
mov
dec
push
cmpsl
aam
dec
std
cld
int3
daa
push
pop
push
in
xchg
pop
lods
arpl
push
insb
and
push
push
add
pop
sti
sub
in
and
outsb
cmc
inc
lahf
push
xchg
fwait
or
sub
and
xchg
daa
xor
push
adc
loopne
pop
mov
jg
out
out
punpckhbw
pop
xor
stos
sub
cmp
inc
lea
out
push
add
ret
shr
std
fcompl
xchg
sub
push
add
lcall
push
das
fnstsw
cmp
add
add
cmp
popf
adcb
shrl
or
outsl
lahf
push
xor
imul
xchg
fstpl
incl
clc
inc
add
push
inc
xchg
push
clc
cmp
and
pop
and
xor
push
iret
xchg
inc
pop
imul
loopne
fstpt
lret
jbe
inc
sahf
mov
ds
lea
mov
stc
mov
and
ds
mov
mov
sbb
push
das
mov
xor
rorb
leave
inc
push
das
xchg
sub
clc
sarl
out
loop
mov
lahf
out
xor
push
push
adc
enter
into
test
cs
sbb
fsubrs
add
lret
push
or
sahf
xor
sub
jb
mov
mov
and
dec
lea
xchg
mov
jg
popf
outsb
pusha
add
mov
push
clc
cmp
add
or
clc
out
or
daa
push
jle
es
rolb
push
fcomp
daa
adc
jbe
std
leave
jne
das
cs
movl
mov
pop
inc
lea
adc
inc
pop
or
rorb
jno
pop
mov
imul
fidivs
iret
scas
jnp
testl
push
das
je
loope
sub
jns
pop
call
and
scas
push
mov
pop
in
push
jbe
fldl2t
mov
mov
dec
stc
mov
sub
ljmp
stos
mov
add
mov
aam
repnz
pop
mov
jnp
mov
sbb
push
cld
xchg
push
into
dec
pop
leave
rcl
or
adc
adc
loopne
mov
push
push
pusha
xchg
lock
push
ljmp
or
xchg
push
inc
test
stos
hlt
idiv
push
lea
pusha
movsb
lock
leave
nop
xchg
dec
les
mov
sbb
cwtl
lret
mov
pop
fmuls
mov
jmp
scas
or
add
gs
es
test
ret
mov
add
bound
mov
test
or
xor
pop
fs
test
add
mov
and
inc
xor
test
lahf
shr
notb
sub
jne
add
jae
jb
shlb
jmp
inc
imulb
cmpsl
push
fxch
daa
pop
and
out
xor
cmp
enter
xchg
in
add
cmp
and
mov
push
imul
jle
jnp
stc
push
imul
jp
mov
adc
add
inc
dec
mov
add
and
ret
arpl
ds
cmp
cmpl
fldl
cmp
dec
test
stos
in
andl
adc
pminub
movsb
icebp
and
push
outsb
fbld
pop
pop
push
xor
dec
popf
clc
inc
cmp
push
push
fmull
ds
test
cmp
in
pop
ds
inc
fstp
mov
jmp
push
in
lods
or
es
jns
add
cld
inc
pop
daa
pop
rclb
push
test
dec
pusha
xlat
cmp
jbe
cmp
dec
add
inc
or
rcr
push
ret
push
mov
xlat
xor
icebp
or
movsl
xor
or
std
sub
sbb
in
sbb
test
jg
loop
sbbb
mov
mov
xlat
je
sbb
push
andl
daa
in
test
fsubs
xor
loope
mov
das
add
mov
xor
in
xchg
lods
pusha
push
js
or
loope
ss
mov
push
incl
shl
push
inc
aas
sub
into
dec
and
add
sub
stos
daa
pop
mov
scas
dec
push
mov
mov
cmpsl
mov
out
ret
movsb
ja
push
xchg
adc
idivl
mov
inc
movl
hlt
test
inc
or
cmp
push
lea
mov
pop
lret
or
in
repz
scas
mov
das
fcomps
dec
adc
aaa
jmp
mov
sub
push
movsl
push
hlt
sbb
test
ror
not
add
xchg
push
dec
cmp
push
mov
out
mov
lds
sahf
iret
jmp
push
rorb
mov
or
stc
dec
push
cmp
push
lea
cmpsb
cmp
loop
cltd
xlat
enter
fwait
mov
mov
lea
sbb
push
rol
inc
in
cmp
push
push
shlb
mov
lea
hlt
lock
clc
dec
pop
aaa
ret
mov
enter
mov
sub
push
cmpb
int
push
push
test
push
inc
cmpsl
lea
std
cmp
jnp
sub
pop
push
and
sbb
in
fmul
bsf
lret
xchg
adc
scas
add
lea
push
or
push
pop
test
rolb
subb
mov
scas
mov
jecxz
addl
verw
push
push
sub
pop
rorl
sbb
push
push
xchg
aas
adc
cld
add
stc
mov
das
fnstsw
mov
push
inc
and
imul
mov
cli
xchg
jecxz
std
mov
mov
inc
imul
stos
cmp
xor
pop
fildll
jne
mov
lea
orb
repz
mov
adc
jge
xor
adc
sti
inc
dec
and
jle
push
jg
add
lcall
sub
jno
lea
outsl
out
pop
pusha
mov
and
leave
pop
and
inc
sub
jae
scas
lock
or
neg
pop
mov
test
pop
push
in
adc
push
rolb
out
aas
aad
shr
mov
xor
adc
popf
mov
test
ret
mov
jmp
test
inc
and
and
mov
mov
stos
add
jmp
add
pop
orl
xor
xchg
and
ret
push
cmpsb
call
je
jnp
add
test
imulb
insl
andb
push
adcl
xlat
subb
sbb
not
mov
pop
push
add
and
jno
pop
push
insl
pop
mov
ret
push
push
pop
push
cmpsb
enter
leave
imul
nop
or
dec
xor
or
mov
lock
mov
mov
inc
and
call
jae
xchg
jle
push
imul
in
jge
cs
adc
lea
out
aad
mov
or
shrl
bound
int
push
pop
or
push
cli
jmp
xchg
push
aad
shlb
scas
push
outsl
jmp
outsb
jnp
movsb
jmp
les
ror
add
push
rol
shrb
pop
pop
sub
pop
insb
cli
pcmpeqb
scas
test
sub
jbe
push
outsb
testl
imul
mov
rcrl
pop
or
lret
shll
add
cmp
aas
je
dec
mov
mov
pop
es
mov
lods
push
push
push
add
jl
push
lds
xchg
sbb
sub
fwait
or
jecxz
xor
pop
add
es
cmp
je
cli
add
add
or
mov
insl
xor
lahf
imul
pop
mov
imul
outsl
jb
shll
movsb
cli
and
cmc
aas
or
std
es
sahf
push
mull
and
push
js
lds
inc
adc
xchg
mov
push
push
push
ljmp
rolb
arpl
pushl
jne
push
sbb
dec
aad
cmp
sahf
ret
roll
sub
adc
popf
add
inc
push
mov
mov
ss
pop
pop
repnz
lods
lods
insl
icebp
mov
mov
dec
cmc
loope
call
jnp
hlt
fdivl
clc
push
in
test
loopne
insb
inc
sub
jge
mov
int3
push
xchg
adc
xchg
push
enter
add
jne
and
in
mov
int
cwtl
sub
xor
int3
push
push
aam
movsb
mov
les
cmp
in
xor
dec
sub
push
mov
mov
inc
mov
push
cmp
test
add
mov
rcll
adc
leave
xchg
test
inc
jbe
repnz
and
rcll
pop
push
sub
jmp
inc
imul
sub
cltd
sbb
loop
out
imul
shlb
enter
pop
leave
js
push
imull
enter
out
lahf
sbb
ds
insl
in
sbb
inc
dec
inc
add
mov
mov
sub
jnp
dec
cwtl
mov
je
add
insb
jae
add
mov
push
xchg
or
js
out
sbb
out
jne
add
cmpsb
sub
push
lds
mov
or
or
call
sti
lret
push
call
pop
loop,pt
mov
cmpsb
fsubs
pushf
add
data16
xor
and
and
inc
mov
nop
loopne
add
inc
mov
inc
mov
add
clc
iret
xchg
or
je
push
scas
bound
rclb
mov
mov
cmc
jl
add
and
mov
push
iret
sbb
dec
mov
push
sahf
cmc
xor
cltd
sub
into
mov
add
cmp
fmull
es
add
daa
ljmp
add
xchg
sbb
jg
adc
adc
sbb
cmp
jle
stc
movsb
sbb
das
nop
add
push
xor
ficoml
test
ja
push
test
pop
loopne
imul
loop
add
sub
sbb
je
mov
add
std
lock
insl
add
push
mov
add
jge
add
xchg
les
mov
cltd
inc
jle
inc
dec
sub
bsf
adc
add
push
mov
in
mov
fiaddl
cli
mov
stc
xor
lock
push
dec
fnstcw
xchg
add
xchg
mov
xlat
jp
lret
imul
adc
aas
out
and
mov
add
mov
testb
enter
or
fcom
push
aam
clc
mov
popf
cmp
xchg
add
out
sbb
sbb
sarl
pusha
ret
aaa
lods
and
fdivs
add
mov
nop
repnz
addr16
cmp
and
sbb
mov
and
std
add
pusha
adc
arpl
sub
fisttpl
stc
test
jns
jb
orl
inc
add
lods
loopne
mov
shlb
movsl
add
imul
das
adc
mov
jnp
sbb
test
roll
fnstcw
pop
shrb
aam
lods
jle
push
in
push
pop
dec
xchg
ret
cmp
mov
scas
imul
dec
in
inc
add
mov
jmp
inc
repnz
clc
add
jmp
ss
cld
lahf
add
inc
addl
out
sub
push
mov
dec
xchg
nop
sub
pop
cmpb
add
cmp
inc
or
inc
dec
xchg
jge
or
aam
shr
repnz
mov
add
lods
rorb
aas
lods
inc
in
pop
cmp
cmovbe
hlt
pusha
pop
push
adc
subb
jecxz
mov
sbb
ret
mov
imul
lock
mov
mov
scas
add
inc
mov
pop
xchg
sub
xor
in
sbb
iret
xor
pop
sub
insl
mov
cmp
ror
and
pusha
ret
add
repnz
aaa
xchg
jne
jle
je
cmpsb
cmp
jb
add
or
pusha
jmp
push
inc
and
aas
movsb
pop
leave
add
cmp
pop
add
add
in
inc
mov
ds
mov
pop
inc
lea
jle
roll
insl
test
out
ljmp
mov
std
fwait
adcb
jae
jmp
scas
add
sub
sub
push
cmpsb
pop
mov
cmp
rorb
cmp
rclb
add
xchg
add
cld
enter
add
jnp
lea
call
add
rcrb
scas
js
pop
test
dec
sbb
sahf
jo
enter
push
xlat
add
and
shlb
or
ficompl
imul
data16
sbb
xor
adc
leave
xchg
outsb
dec
xor
add
jo
push
cmpxchg
xor
mov
movsb
adc
push
imul
cmp
pop
dec
adc
fidivrl
cld
je
cwtl
aam
sub
in
and
jno
jns
dec
pusha
push
loopne
inc
add
dec
gs
aaa
jnp
aam
rcr
mov
adc
add
jne
fidivl
loop
lret
add
mov
add
sarb
stos
call
incl
cmp
jnp
add
mov
lcall
rol
addr16
jp
in
cwtl
cmp
fildl
inc
push
add
inc
or
xlat
aaa
dec
cmp
insl
lret
andl
int
jle
pop
xchg
jl
adc
mov
loope
add
inc
inc
push
add
lcall
add
scas
ds
add
fcmove
add
push
test
es
or
xchg
cmp
pushf
push
daa
add
adc
mov
add
fildll
aaa
cwtl
cmp
add
fildl
pop
or
add
xchg
mov
and
in
enter
add
mov
mov
outsl
xor
pop
push
mov
xchg
or
pop
subl
pop
add
xor
fmuls
lcall
jl
fnstsw
xchg
pop
cmpb
pop
cmp
in
sub
dec
add
sbb
pop
nop
xchg
add
pusha
movsb
icebp
stos
jecxz
add
xlat
mov
mov
mov
jl
lds
and
jle
sbb
lods
or
mov
pop
rcll
inc
movsl
or
and
add
dec
js
and
push
test
cmpsb
aaa
sbb
in
gs
fisttpl
inc
jl
add
fs
or
mov
xlat
cmp
cld
add
and
int3
xchg
add
xor
add
adc
mov
cmp
icebp
pop
ja
adc
testb
mov
pop
cmp
orb
and
addr16
add
testl
popa
in
pop
sub
add
imul
xor
or
cmp
adc
sbb
movsl
add
xor
pop
pop
or
add
add
adc
sbb
adcl
cmp
xchg
mov
inc
daa
push
incl
sub
mov
add
pop
xchg
sbb
inc
loop
add
hlt
icebp
cld
pop
add
add
xchg
push
inc
push
fldl2t
cmp
push
mov
testl
cmp
sbb
sbb
pop
push
mov
add
dec
fisubs
js
stc
lods
pop
orb
xchg
into
pop
test
dec
orl
ret
sub
pop
cwtl
subb
lock
sbb
jp
or
xor
cwtl
pusha
xlat
arpl
js
cld
mov
sub
jae
subb
movsl
loop
aam
cmc
add
sbb
dec
add
pushf
lods
fldenv
add
lret
je
lea
add
gs
pop
enter
or
into
push
add
loope
shr
dec
inc
std
cmp
mov
xor
adc
pop
in
xchg
add
sbb
mov
aam
add
cltd
add
clc
cmpsb
xchg
add
or
jo
xchg
cwtl
xchg
add
push
ss
cmpb
int
loopne
fwait
daa
pop
jno
shll
push
inc
ja
add
aas
mov
jns
jp
xchg
dec
add
cld
lfs
adc
call
lods
pop
jns
add
in
fisubrs
cltd
lock
xor
pop
sub
sub
es
str
popa
cmp
dec
add
ja
out
xchg
and
add
jmp
stc
pop
xchg
pusha
fsubrl
imul
sbb
jge
sahf
fiaddl
mov
dec
jecxz
add
dec
xor
add
sub
add
xchg
and
xchg
jle
jne
sbb
icebp
xor
add
xchg
cmpsl
add
lahf
test
xorb
imul
and
and
lods
cltd
stos
pop
push
xchg
ljmp
and
js
xchg
add
mov
scas
adc
filds
add
mov
mov
mov
xchg
clc
add
sbb
dec
out
cmp
mov
xlat
les
mov
sbb
push
cld
push
js
add
add
mov
outsl
lea
addr16
xchg
add
push
xor
add
mov
mov
pop
xchg
add
out
ljmp
or
fcmovne
lahf
pop
lock
fisubrl
shr
pop
out
add
mov
stos
xor
jo
lret
pop
adc
or
xchg
inc
stos
clc
subb
iret
cwtl
add
dec
loop
add
jle
adc
ret
sub
pop
add
fwait
pop
xchg
inc
bswap
mov
sub
pop
dec
xchg
cmc
add
int3
sbb
lahf
push
pop
out
jp
or
lock
ret
lock
jb
pop
inc
add
adc
std
add
fisubrl
adc
or
cmc
push
jns
sbb
cmp
inc
inc
addr16
rcrb
push
icebp
sbb
inc
ret
adc
ss
popf
imul
xor
xchg
test
std
jne
xor
loopne
daa
add
subb
sbb
xor
cmp
das
mov
stos
add
fldenv
cmp
test
pusha
xchg
pop
movsb
xor
xchg
jb
push
nop
sub
xchg
adc
or
add
xor
insb
stos
or
add
cmp
out
jnp
add
test
jno
pop
jle
gs
cmp
adc
pop
mov
inc
cld
loope
mov
out
andl
sbb
push
mov
ret
mov
add
roll
in
push
lds
popf
and
cmpb
sbb
negl
aam
dec
sub
les
subb
add
pusha
leave
lock
incb
or
xor
icebp
add
jo
push
imul
test
ret
iret
add
push
xor
push
iret
and
call
mov
icebp
push
in
or
adc
wrmsr
jl
cld
mov
pusha
pop
imul
cmpsl
push
xor
movsl
jnp
ds
inc
inc
add
fisubs
mov
fistps
pop
rcrb
add
filds
sbb
test
push
ja
jle
adc
cmp
jge
pop
lods
cld
in
call
or
pusha
enter
add
hlt
push
xlat
cmp
add
fdivs
pop
sarb
rcrb
out
mov
inc
xchg
dec
add
les
add
jno
add
mov
hlt
sarb
sub
sti
addb
in
jmp
inc
sub
ss
stos
cmp
dec
lods
add
inc
rorb
xchg
and
xchg
adc
adc
in
add
out
int3
adcl
outsl
jmp
ret
adc
mov
sub
cwtd
and
sbb
cmp
mov
andb
mov
cmp
imul
sbbl
rol
dec
xchg
and
xchg
jo
pop
mov
test
pop
add
lock
mov
add
or
insb
flds
or
stos
lret
aad
movl
mov
inc
sbb
mov
cli
ds
orb
popf
gs
pusha
mov
xor
ja
xchg
popw
mov
or
loop
add
mov
pop
adc
and
or
jecxz
jle
repnz
sub
push
add
jb
push
pushf
mov
call
test
jecxz
je
mov
xchg
jns
mov
shl
adc
push
loop
bnd
jno,pt
push
xorb
sub
addl
push
lock
test
gs
fwait
rcr
cmp
mov
negb
rcll
out
add
add
mov
lods
adc
das
add
arpl
inc
ret
mov
and
adc
push
xor
sbb
dec
xor
pop
add
rclb
in
jle
out
mov
add
pop
nop
cmc
jnp
inc
add
andb
xor
xor
dec
dec
in
pop
lds
cltd
inc
mov
mov
mov
mov
dec
int3
xor
jl
jg
repz
roll
cld
and
add
xlat
pop
ljmp
mov
mov
aam
jg
jnp
pushf
add
sbb
xchg
sbb
mov
test
cmp
loopne
xchg
fdivrs
int
add
int3
call
mov
sahf
jg
inc
pop
mov
cmp
add
out
adc
push
addb
ret
dec
mov
add
or
add
aaa
mov
testl
xchg
sbb
ja
rcrb
add
sbb
pop
pop
and
lds
movsb
ja
xchg
add
and
xor
leave
stc
dec
test
dec
cwtl
shlb
add
js
ss
jnp
add
add
add
push
mov
mov
shll
adc
push
add
sub
mov
lret
xchg
sub
add
mov
pusha
call
mulb
cmp
or
test
push
orb
and
add
pop
and
add
inc
xor
loope
jb
dec
push
add
pushf
adc
xor
jle
or
sub
inc
pop
imul
push
jge
add
or
cmp
add
jecxz
clc
add
push
xorb
aaa
sbb
add
mov
and
addr16
out
das
jno
loop
or
xchg
pop
push
adc
add
adc
mov
or
stos
addr16
cs
add
xchg
push
mov
mov
pop
add
xchg
mov
repz
fdivrs
add
int3
mov
and
shll
popf
mov
fs
inc
sahf
sub
cmpsl
rcrb
pop
and
pop
add
mov
pop
pop
mov
xor
jb
shll
fwait
add
stos
outsb
push
pop
pushf
sub
lock
xor
or
cmp
sub
mov
fwait
mov
js
mov
xor
arpl
add
daa
add
or
mov
push
pop
les
testb
sbbb
inc
hlt
or
mov
and
dec
xchg
rorl
add
cli
jl
rcll
pusha
sub
mov
adc
adc
or
cmp
add
push
lock
jno
add
or
push
cmpsl
dec
cltd
call
scas
pop
xor
xor
popa
shr
mov
add
cld
lock
dec
mov
sbbb
push
push
lret
dec
popa
int3
out
rcrb
adc
aaa
stos
add
repnz
push
int
pop
inc
mov
push
add
cld
jno
jle
repnz
add
jmp
mov
cmp
adc
mov
push
fstpt
lea
dec
and
push
fstpl
cmp
icebp
fldl
cwtl
push
jecxz
xchg
add
jmp
add
lahf
jbe
and
sub
mov
mov
xchg
xchg
div
or
mov
movsl
xor
sbbl
pop
inc
mov
js
push
cmc
add
out
add
das
loopne
xchg
outsb
punpckhwd
fnstenv
xchg
test
mov
push
lret
push
dec
xchg
jge
clc
in
out
add
mov
fwait
add
lret
sbb
jb
push
aas
popf
xchg
add
sub
cmp
lods
lods
cld
add
inc
and
add
push
filds
add
roll
add
dec
jg
xor
jns
mov
addb
inc
push
mov
sbb
repnz
fisttps
xchg
cmp
test
pop
pop
test
xor
insb
push
or
pop
cmpps
leave
add
mov
mov
movl
pop
xlat
es
and
push
stos
add
jmp
popf
jle
sub
ror
and
mov
mov
daa
loop
push
jne
inc
sbb
jb
or
sarb
or
sbbb
adc
add
xchg
or
cmp
add
mov
out
mov
jmp
std
shlb
mov
into
xchg
add
inc
in
or
pushf
inc
add
aas
push
xor
mov
inc
aad
sti
mov
jns
movsb
daa
jbe
fcmovb
push
addb
sbb
sub
ljmp
add
pop
rsqrtps
mov
mov
jp
cmpsb
inc
pop
fsub
stos
lock
add
and
hlt
add
xlat
ljmp
fiadds
in
xchg
or
xchg
or
addr16
jno
rolb
lea
mov
add
stos
repnz
dec
pop
lds
mov
jge
mov
in
add
sbb
pop
mov
stos
add
jle
sbb
decl
sbb
and
mov
add
mov
push
mov
cwtl
in
addb
mov
and
mov
movsb
std
jl
mov
jne
subb
and
pop
xchg
cmp
rolb
popa
cmp
movsl
cmp
mov
test
xor
sbb
add
ss
mov
add
inc
loope
push
xchg
jb
add
lock
add
fldcw
sbb
addb
inc
outsl
mov
subl
add
cmp
dec
lahf
pop
jne
add
jmp
mov
stos
insl
xchg
push
add
sbb
loop
and
test
pop
insb
into
rcrb
jl
inc
cmp
xor
stos
fistpl
out
mov
addr16
lret
clc
adc
and
sbb
test
pop
add
sahf
lahf
nop
lea
and
mov
call
push
lock
daa
xlat
lret
mov
mov
add
push
stos
jp
or
and
or
cmp
or
shlb
lock
arpl
add
in
rcrl
mov
pusha
insb
inc
sarb
nop
push
frstor
add
fsubrl
call
dec
dec
cmp
pusha
andb
add
in
or
mov
add
xor
repz
xor
xchg
roll
add
stc
sub
cmp
rcl
xor
sbb
add
dec
push
push
scas
lock
jns
fcomps
inc
nop
cld
mov
lods
add
pop
rorb
arpl
cli
add
push
call
sub
xchg
and
adc
xchg
xchg
cmc
daa
cli
in
mov
ret
insb
test
out
in
inc
faddl
jns
cmpsl
pop
dec
push
outsl
repz
jp
add
jl
popa
mov
mov
int3
mov
mov
jno
inc
mov
psrlq
fstl
mov
fwait
xor
fcom
add
xchg
es
push
mov
pop
aam
inc
in
mov
add
sbb
mov
pushf
mov
das
add
push
xchg
adc
cmp
adc
sbbl
jge
mov
push
mov
shll
dec
add
cmp
popf
push
stc
mov
jecxz
andb
add
add
pop
and
outsb
inc
loope
inc
dec
dec
mov
jmp
add
dec
sbb
sub
dec
sar
sti
xchg
hlt
cmp
lds
aas
rcll
add
or
int3
gs
loop
cmp
mov
add
adc
dec
mov
adc
jecxz
cmc
stos
nop
add
dec
and
add
pop
mov
push
clc
add
cmp
add
aaa
lcall
lret
cmp
iret
sbb
mov
inc
cwtl
movsl
fwait
add
sub
pop
in
inc
out
cmpsl
add
fcmovu
push
ficoms
add
repz
jbe
cmp
or
jae
hlt
addl
adc
lods
add
xchg
jg
mov
test
add
imulb
jnp
xchg
jo
sub
push
out
adc
push
adc
ljmp
xor
aaa
jno
or
pop
es
mov
add
mov
add
add
adc
lcall
push
imul
and
cmp
mov
push
lahf
imulb
out
cmp
mov
scas
pop
dec
xchg
push
fst
loopne
cld
aam
add
rcll
loopne
add
adc
xchg
add
test
mov
dec
shl
int3
ss
add
mov
orb
iret
xchg
pop
push
mov
dec
inc
cli
mov
or
fistl
ss
push
aaa
mov
xor
imul
call
add
ja
inc
movsb
xchg
jle
add
fisttpll
insl
lock
repz
pusha
mov
cmp
jl
add
or
test
lods
rolb
pop
pop
sti
lret
push
or
jo
push
daa
in
add
push
imull
mov
xchg
dec
jl
aaa
testb
fisubl
and
in
jae
push
xor
hlt
sbb
pop
negl
inc
hlt
and
pop
adc
cmpsl
in
into
mov
push
dec
jl
iret
push
xchg
add
and
pop
inc
ds
lcall
sbb
push
dec
or
fidivrs
pushf
xorb
pop
jmp
addb
pandn
or
in
add
add
iret
add
fdecstp
lea
push
mov
stos
and
aaa
xchg
hlt
iret
add
lahf
in
add
inc
fcom
jno
add
andb
push
xchg
in
out
add
repz
rolb
jno
ret
add
cmp
jmp
out
mov
lds
notb
xchg
mov
or
xor
xchg
cltd
sbb
add
inc
loope
push
out
add
sub
rcl
dec
push
add
ljmp
lret
cwtl
mov
mov
mov
fmuls
add
out
push
aam
repnz
jb
add
cmp
cmp
mov
inc
adc
pusha
jno
sub
add
pop
jnp
sbb
stc
jge
rcrb
out
vmovshdup
clc
add
fistl
sbb
lock
dec
ljmp
rolb
jg
jnp
into
jbe
adc
lods
repnz
pop
mov
or
sbb
cmp
or
lret
aas
xchg
inc
mov
fs
xchg
dec
add
call
add
add
aam
add
xchg
or
jp
lea
add
add
add
addl
adc
cmpsb
inc
dec
test
jg
add
aam
cld
ds
add
mov
lea
cmp
dec
mov
outsl
inc
pop
add
mov
gs
shll
add
testl
ja
test
cwtl
and
clc
sbb
mov
sarb
les
lds
xlat
sti
add
addl
adc
mov
sub
push
or
mov
xor
pop
fnsave
adc
lea
in
sti
cmpb
push
inc
mov
sub
add
pop
es
call
andl
pop
pop
sti
pop
into
ffreep
push
mov
aad
in
out
jae
sbb
jnp
pop
jns
cld
xchg
aad
and
jmp
jnp
add
jle
sbb
popf
add
popa
pop
add
ss
sub
lcall
inc
enter
pop
lret
pop
loop
fiadds
jmp
mov
xchg
mov
fcomps
out
jecxz
dec
in
and
enter
mov
mov
mov
addb
aas
mov
pop
xchg
mov
js
dec
jmp
push
add
insl
push
or
cmp
add
push
mov
in
adc
pop
loope
jo
inc
imul
leave
popf
add
dec
sbb
and
push
inc
arpl
call
mov
and
out
fisubs
cmp
ficoml
push
push
pop
gs
add
cmpsb
push
loopne
mov
add
call
push
add
fcomps
arpl
nop
enter
mov
mov
outsb
loop
clc
out
popf
sahf
add
addb
stos
fwait
or
outsb
test
in
out
or
sti
inc
pop
cmp
inc
and
xor
jo
push
imul
xchg
dec
add
push
jb
scas
cli
cmp
dec
inc
jg
add
push
dec
data16
adc
mov
jle
add
jge
add
inc
sbb
add
dec
movsl
pusha
fidivl
out
jnp
inc
cmc
ja
in
add
push
adc
inc
jl
rol
movsb
icebp
cmp
scas
cwtl
pop
push
inc
adc
fistps
pop
sbb
lret
lea
add
andb
das
fwait
xor
add
push
movb
add
cmpsb
popf
addr16
ret
mov
sbb
xchg
popf
adc
gs
mov
and
flds
sbbb
inc
inc
andl
xchg
leave
mov
in
xlat
add
je
xchg
cli
pop
add
mov
sub
je
jecxz
jae
mov
in
jmp
inc
test
hlt
nop
dec
aad
add
shrb
imul
cmp
inc
pushf
dec
add
movsl
push
cmp
xchg
lock
cmp
push
idivl
into
icebp
cli
add
cwtl
arpl
ja
testb
dec
push
or
incl
stos
dec
xchg
lods
jmp
cmpsl
addr16
rorl
test
add
xlat
mov
es
sub
inc
cmp
sub
out
je
pop
mov
xchg
das
and
pop
pop
ljmp
push
cmp
idivl
push
push
xor
add
add
adc
dec
add
lods
push
xor
nop
inc
jp
xor
add
mov
push
dec
inc
insb
ljmp
gs
les
loop
jne
pop
addr16
xor
or
loopne
test
xlat
add
lret
arpl
cmp
icebp
repz
mov
imul
test
cld
out
add
pop
sub
fwait
arpl
xchg
sti
or
pop
adc
add
mov
incl
in
push
mov
mov
icebp
and
jo
loope
and
dec
and
pop
or
int
mov
mov
pop
or
jb
inc
movsb
add
push
xchg
jmp
add
dec
or
aam
pop
and
loop
mov
inc
or
sahf
xorb
pushf
add
movsb
clc
outsb
shl
sub
cmp
lret
add
mov
sub
add
push
inc
stc
adc
cmp
fsub
xchg
pop
stos
mov
je
cs
out
dec
add
jecxz
fiadds
shll
mov
sbb
push
jmp
arpl
outsb
movsb
jmp
xchg
icebp
insb
adc
outsl
push
add
sub
add
movsb
nop
fmuls
rcrl
add
lods
in
out
adc
andb
jecxz
xlat
add
fsub
cwtl
mov
add
push
sub
pushf
dec
call
push
arpl
add
in
jmp
pusha
add
js
sbb
pop
ja
add
push
add
xchg
jp
and
repz
add
pusha
xor
out
fisubs
scas
aad
push
jae
dec
or
fdivrs
add
std
rolb
pop
pop
xorl
pop
pop
add
pop
adc
add
push
pop
dec
mov
aam
cmp
pusha
call
lahf
lock
fwait
mov
sub
mov
pop
mov
movsb
test
rep
xor
adc
cld
nop
sub
movsb
flds
pushf
mov
mov
testb
test
jbe
inc
inc
lahf
xor
add
dec
add
lahf
cmpsl
enter
xchg
xchg
js
popf
add
jb
rclb
call
jmp
sub
jbe
dec
jnp
movsl
lea
add
xchg
push
and
arpl
jg
dec
addr16
add
mov
or
add
out
and
add
std
cmp
mov
cld
mov
or
js
fdivrs
clc
lea
inc
push
lds
in
jnp
add
ds
add
clc
mov
pop
push
sti
sub
nop
test
icebp
add
lret
fadds
aas
lea
inc
insb
push
pop
shl
cli
mov
mul
lret
add
push
mov
inc
jl
pop
jb
and
xor
rcr
add
push
iret
xchg
jae
add
out
lret
in
or
pop
mov
jg
add
sbb
jb
dec
int
add
out
pop
sbb
lea
orb
roll
loopne
out
and
push
adc
jb
aas
insl
gs
mov
push
cmp
xchg
mov
xlat
aaa
add
ds
or
xchg
add
test
scas
xor
gs
xchg
add
pusha
cmp
inc
je
jae
add
out
dec
push
pop
int3
cli
cmp
mov
mov
aas
and
lahf
push
rclb
pop
ljmp
jb
into
pop
add
scas
push
inc
iret
jmp
adc
stos
jp
add
int
ja
dec
add
xor
imul
lcall
add
incb
push
loope
jge
out
cmovl
aam
cli
cmpsl
int3
verw
aaa
mov
mov
xchg
pop
loopne
jno
push
xor
repnz
mov
mov
shl
push
lret
imul
pop
and
push
das
fdivrs
sub
sti
mov
add
sub
xchg
leave
add
and
les
add
mov
push
les
aad
rdpmc
cld
cmp
ffreep
stc
fdivrs
jae
pop
cli
mov
mov
push
add
pop
rorb
fiaddl
das
or
into
mov
loopne
mov
jno
mov
push
cs
push
mov
int
add
imul
mov
dec
ljmp
sbb
xchg
xorb
adc
mov
movl
aad
dec
push
test
repnz
cmpsl
adc
and
jno
push
push
pop
or
add
imul
mov
fldl
pop
sbb
xchg
add
jbe
fisubs
out
insl
adc
ja
arpl
inc
pop
push
push
add
cwtl
ret
lret
or
add
sbb
cli
int3
sbb
add
and
push
pop
cmp
mov
sub
inc
fidivrl
jnp
rorl
pop
sub
cmp
and
jg
mov
repz
cmp
add
jno
add
cmp
testl
rcrb
sub
sbb
jne
pusha
mov
pop
bound
popw
lea
jnp,pt
push
add
mov
cld
add
dec
shlb
movsb
outsb
add
ljmp
clc
xor
rcl
push
mov
mov
pushf
loopne
psubq
cmpsb
scas
ret
jle
mov
add
lahf
pusha
inc
ss
and
pop
in
dec
je
add
jp
int3
insl
xchg
aam
in
decb
cli
push
adc
out
add
hlt
xchg
pop
clc
aam
and
xor
nop
adc
jl
mov
dec
hlt
in
sbb
jbe
iret
inc
cmp
jle
adc
cltd
or
add
push
pop
loopne
or
popf
xchg
adc
sub
or
cmp
push
xor
and
in
std
cmp
push
stos
pop
arpl
pusha
addr16
rorb
jge
into
pop
add
out
or
add
out
dec
mov
aaa
test
and
jl
or
inc
out
js
mov
xchg
fdivrs
shl
inc
push
add
xor
xor
pop
scas
fstps
cs
or
adc
mov
arpl
inc
lock
jae
adc
jge
insb
shll
outsb
cs
and
sbb
inc
lock
sbb
rcrl
movsb
fwait
add
or
fdivl
mov
pop
add
mov
leave
xor
mov
sarb
clc
push
jae
sbb
loopne
add
popf
filds
add
and
pop
mov
sub
add
pop
and
mov
imul
lret
lret
dec
js
das
add
testl
jle
jno
gs
mov
pop
adc
jl
insb
and
xor
mov
xor
mov
add
je
xorb
leave
das
paddsb
add
cmp
fisubl
clc
push
add
das
sbb
dec
xchg
sbb
jno
adc
cmp
sbb
fildl
ss
frstor
jno
jb
cmp
inc
hlt
add
decb
sub
mov
and
add
cmpsl
add
outsb
stos
add
and
lret
stc
test
fidivrl
sbb
cmpb
xchg
shlb
add
movsb
int
jmp
sbb
xor
subb
add
mov
dec
add
popf
and
push
push
out
mov
or
lds
push
add
add
lret
pop
dec
adcb
std
mov
pop
clc
fs
das
adc
ljmp
add
and
push
and
adc
leave
inc
inc
jp
xchg
std
xchg
shll
jae
push
cmc
mov
xlat
mov
fsubs
icebp
add
rorb
aad
sar
subb
pop
jmp
mov
js
sbb
add
mov
std
add
es
jg
out
in
lods
mov
lret
dec
hlt
mov
test
dec
fstl
addr16
test
and
out
cmovle
sbb
cli
jecxz
pop
inc
and
pop
sbb
and
in
mov
lahf
loop
and
mov
add
add
cmp
sbb
and
xchg
dec
xchg
dec
add
or
inc
jbe
mov
adc
in
out
push
popl
pop
add
cvtps2pd
stos
jge
cmpsb
iret
lret
pop
int
add
js
leave
fidivrs
arpl
dec
vmaxps
pop
mov
cmp
popa
aam
push
mov
xor
outsb
add
pop
or
out
movsl
nopl
add
popa
adc
push
xchg
test
pop
xchg
cmp
ja
imulb
mov
adc
or
rcl
fs
sbb
mov
lret
fsts
cmp
pop
fnstsw
add
pop
mov
pop
or
iret
add
ja
mov
ljmp
decb
add
jae
in
and
sub
lods
aaa
int
daa
inc
mov
add
aas
add
adc
sub
push
xchg
addr16
cmp
adc
insl
inc
sysenter
jmp
icebp
imul
dec
add
rcrb
cmp
js
movsb
add
cmc
test
cmp
and
enter
sub
or
push
pusha
or
cmp
xchg
test
movsb
out
pop
fucomip
rcrb
or
es
lods
in
sbb
push
out
stos
movsl
and
mov
dec
xchg
sub
ret
jp
in
cmpsb
inc
aas
mov
add
pop
xchg
test
in
adc
mov
movsl
dec
jmp
ret
in
in
push
or
shr
js
sub
rcl
jg
arpl
sub
or
inc
add
xchg
mov
rclb
mov
adc
push
mov
push
fiadds
shl
add
add
leave
jmp
test
in
mov
mov
cmp
mov
cmp
or
pop
pop
hlt
xor
mov
cld
orl
mov
shl
pusha
add
bnd
cli
lret
add
xchg
sbb
fcomip
pop
jge
pop
add
mov
push
popl
ja
mov
scas
dec
imul
add
sbb
mov
xor
rol
mov
cwtl
clc
jno
sarb
mov
adc
in
int
mov
addb
xor
loop
pop
test
sbb
fiadds
mov
sarl
and
jp
add
adc
xchg
push
lods
mov
cld
inc
mov
sarb
xlat
loopne
into
stos
hlt
loope
fisubs
dec
adc
sbb
aad
add
in
movsl
add
mov
sahf
movsb
sub
add
pop
xchg
out
inc
push
clc
lret
pop
es
stc
lret
add
aaa
add
or
imul
mov
add
cmpsl
insl
xchg
and
mov
pushf
pop
dec
testb
push
fucom
movsl
lcall
push
test
out
pop
jg
lds
out
inc
add
lock
lods
add
fldt
movsl
pop
fdivs
shll
ud1
cltd
pop
faddl
xchg
std
clc
dec
test
and
add
pop
adc
sbb
pop
add
inc
testb
movsb
push
add
pop
clc
xchg
ret
hlt
add
imul
icebp
fwait
add
pop
sti
pop
jb
test
dec
into
xchg
add
and
aad
ret
mov
movl
aaa
lahf
icebp
sarl
add
sub
mov
xchg
cs
cmp
pusha
xor
cmpsl
test
mov
xchg
xor
jg
add
sbb
movsb
cmp
add
addl
mov
add
rcl
add
and
sbb
push
mov
xchg
sahf
add
or
mov
pop
inc
test
sub
fnsave
cmp
in
jbe
add
dec
jo
xchg
dec
pusha
add
cmpsl
push
roll
add
jo
std
add
jno
pusha
sti
int
addb
stos
xor
cmpb
loop
in
or
mov
cmp
dec
mov
mov
dec
or
or
sub
mov
add
jbe
pop
mov
pop
add
es
je
push
fdivs
add
pop
rcl
sbb
popf
jle
jmp
add
xlat
sbbl
icebp
lret
inc
pop
add
fs
pop
add
call
dec
xor
cmpsb
xlat
add
lcall
pop
dec
les
pop
xchg
repnz
out
cwtl
or
gs
pop
addr16
out
loope
cmp
mov
mov
inc
mov
cs
sbb
in
sarl
cmp
ds
addr16
loopne
jbe
aaa
cmp
jae
in
add
push
push
adc
xor
xchg
js
stos
dec
jmp
int3
pop
push
xor
aas
loop
je
jnp
add
jno
cmp
repnz
mov
sub
ja
int3
pop
add
in
mov
add
jo
cli
clc
add
add
int3
jp
mov
roll
adc
cmp
cld
push
sub
jmp
or
mulb
in
in
je
rol
add
enter
test
or
or
xchg
add
pop
cmovae
cmp
jle
pop
lret
inc
pop
mov
push
add
push
out
dec
or
loopne
mov
imul
out
add
push
inc
iret
sbb
add
int3
fisttpl
add
adc
fldl
sbb
cmp
pop
inc
cltd
mov
xchg
pop
jo
lret
mov
cs
mov
mov
add
insb
push
dec
out
paddb
fiadds
das
push
push
roll
jo
into
or
adc
fildll
imul
sbb
add
pop
push
add
mov
inc
in
mov
cli
cmp
lods
lods
fadds
mov
je
aam
pop
push
test
or
dec
add
pop
mov
add
out
lock
js
in
pop
jmp
cmpsb
fistl
sub
mov
push
adc
xor
add
bound
pop
pop
rclb
je
cmp
pop
js
into
aam
icebp
add
repz
pop
loop
add
inc
fcomi
in
push
and
paddsb
insl
test
stos
lock
in
lcall
into
ljmp
int
adc
mov
mov
dec
pop
inc
or
test
fisubl
fstl
sti
cmpsl
add
sub
testl
xor
mov
pop
scas
iret
cwtl
subb
jnp
xor
inc
int3
loop
adcl
add
icebp
or
jl
jne
xor
mov
popa
pop
adc
lret
repnz
sar
inc
lock
add
sbb
sbbb
sbb
cmpsl
add
jno
or
mov
add
jmp
xor
mov
loop
add
and
fcomps
jae
push
stos
leave
scas
push
mov
xchg
int3
and
mov
mov
or
clc
loopne
fstl
push
into
mov
or
outsb
mov
movb
out
ja
aaa
imull
pop
adc
in
jl
fsubrs
cmpsl
outsl
ja
mov
add
dec
mov
jle
pop
fnsave
mov
push
in
and
mov
jns
add
ja
cmc
add
or
fdivrl
lods
add
sub
mov
sub
shlb
cltd
add
mov
arpl
js
cmp
sub
cmpb
jge
inc
dec
add
cltd
cmc
sbb
inc
add
lahf
mov
addr16
stos
sub
cli
scas
jle
add
push
fnstsw
jo
add
sub
cmp
mov
push
add
repz
xchg
inc
outsl
popa
pop
imul
ret
dec
aaa
pushf
aam
lods
add
out
xchg
sub
jp
add
cs
or
push
jl
jge
mov
sbb
mov
pop
stos
shll
leave
cmp
call
mov
push
push
xor
jp
cmp
push
sahf
cmpl
jmp
shlb
inc
test
sub
lret
add
cmp
push
mov
pop
jg
jo
ljmp
fstp
loop
lds
inc
add
mov
sbb
mov
xor
flds
add
popf
mov
outsl
add
scas
jmp
add
divb
pusha
sub
hlt
add
mov
sub
out
popf
rolb
leave
push
loopne
ret
inc
mov
nop
xor
pop
pop
and
sbb
ja
gs
pop
adc
sti
pop
dec
cmpsb
add
or
add
cmp
sbb
fadds
addb
in
xchg
push
cmp
mov
add
adc
insb
add
hlt
bound
sub
jp
add
mov
jg
sbb
icebp
mov
repz
insl
sbb
inc
add
test
jmp
cltd
stc
adc
mov
and
xorb
push
push
lods
out
xchg
dec
mov
roll
leave
aad
scas
xchg
adc
pop
sub
aas
in
mov
add
jecxz
outsl
fcompl
mov
std
or
mov
cmp
shrb
insl
repnz
xorps
xchg
adcb
mov
add
xchg
adc
and
decl
inc
add
xor
std
xchg
lret
and
push
sbb
daa
add
pop
fistpl
sub
cmp
add
cmp
loopne
jl
adc
shlb
fists
pushf
lret
pusha
mov
mov
push
das
add
jle
add
xor
call
cmc
and
cld
insb
ret
inc
add
adc
out
add
cmp
shlb
pop
adc
xchg
add
popa
ficomps
jl
aas
repnz
icebp
into
or
leave
or
add
cmp
jle
mov
mov
adc
call
add
mov
in
push
inc
xchg
testl
xlat
fsubl
adc
lods
mov
outsl
std
mov
mov
add
sbb
push
nop
scas
add
stos
in
add
repz
pop
inc
xchg
xorl
mov
rcl
push
xor
inc
sub
mov
fmuls
push
add
popf
in
pop
jecxz
add
mov
das
int
add
out
in
cmovb
scas
and
fxch
mov
mov
jae
and
mov
add
fildll
cwtl
lret
mov
xor
push
cmp
adcl
add
pop
push
jbe
xlat
pop
add
sbb
stos
or
fcoml
jmp
inc
push
dec
aas
jne
cltd
shlb
dec
xchg
mov
daa
jo
in
imul
int3
lret
hlt
inc
add
push
loop
mov
add
xor
sbb
scas
dec
sub
sahf
sbb
out
mov
sub
push
xchg
add
lods
inc
popl
stos
mov
and
out
cs
enter
jb
subb
rorl
jp
add
add
cmp
add
sbb
iret
jp
add
inc
or
sub
int3
bound
adc
adc
sub
mov
jno
mov
les
clc
jbe
add
je
rorl
sub
jmp
or
jnp
mov
dec
cmp
cmp
enter
mov
ret
add
push
adc
outsb
loopne
cli
pop
mov
nop
testb
inc
scas
pushw
stos
outsl
and
and
mov
push
mov
dec
andb
fs
es
lcall
ficomps
pop
addl
mov
xlat
adc
lea
mov
movsl
dec
stc
xchg
mov
add
xchg
mov
jecxz
ss
leave
xor
lret
test
push
pop
mov
or
add
insl
ja
adc
push
test
inc
sbb
frstor
mov
in
icebp
add
mov
jb
orb
and
je
jno
cld
jns
jmp
mov
das
loopne
jmp
cmc
add
xchg
add
dec
rcr
add
add
arpl
adc
test
pop
mov
imul
in
or
mov
je
mov
jnp
add
scas
aam
mov
sahf
add
jnp
pop
mov
or
shrb
mov
add
mov
pusha
loop
mov
lret
add
sbb
jbe
add
jp
mov
push
lock
jb
push
push
and
movsb
scas
fs
push
cmp
jl
add
push
repz
xchg
cli
jb
jg
cmp
add
sbb
sub
test
fimull
fucom
push
mov
push
jns
cmp
lods
add
insb
sbb
jne
mov
cld
add
mov
dec
add
add
mov
adc
stos
add
sar
mov
imul
mov
or
push
inc
ja
xor
mov
add
cmp
enter
ja
mov
adc
sbb
or
dec
loopne
xor
sarl
leave
pop
dec
pop
subb
enter
iret
fildl
jbe
and
mov
or
xlat
mov
pop
rcrb
jecxz
and
out
insb
in
sti
adc
loop
ret
add
xchg
push
adc
add
iret
sub
leave
jp
adc
xor
call
jmp
data16
mov
iret
movsl
jno
loopne
scas
xchg
jge
xchg
les
iret
sbb
loopne
jbe
outsl
push
bswap
ljmp
ljmp
jne
data16
mov
addr16
xchg
stc
idivb
and
sbb
js
xchg
icebp
subb
movsl
mov
or
scas
std
sub
aam
cltd
add
mov
pop
in
cmp
subb
leave
inc
out
push
jmp
insl
mov
pop
inc
and
loope
aas
cmp
sahf
push
adc
push
add
iret
adc
dec
stos
adc
fsubrs
inc
aas
jg
popa
add
adcb
jbe
mov
pop
pop
ja
shrb
pop
hlt
pop
inc
pop
imul
call
and
add
insb
and
mov
add
xorb
mov
jmp
and
push
jnp
add
loop
lret
dec
call
enter
scas
adc
mov
ljmp
xchg
xchg
fcmovu
mov
or
push
and
outsb
add
inc
inc
adc
pusha
test
add
jnp
pop
jns
sti
lds
fmul
rcrb
xor
or
fiaddl
pop
sbb
scas
jp
mov
xchg
fidivl
stos
cwtl
push
add
xchg
pop
add
incl
xchg
addl
sarl
mov
xchg
cmp
add
pop
pop
jmp
push
adc
test
arpl
imul
mov
push
pushf
mov
mov
sbb
add
mov
mov
add
jo
rcrb
sub
fs
test
pop
xor
mov
push
pop
inc
loope
in
pop
inc
mov
sub
add
cs
scas
or
fucomi
or
mov
stos
mov
pop
add
sub
sub
into
add
push
je
addr16
xchg
add
jmp
rcrl
stc
add
repz
scas
pop
jno
hlt
mov
jl
out
push
call
cmp
xlat
testb
sti
pusha
iret
add
push
mov
in
arpl
add
inc
and
lret
jbe
add
xor
adc
std
int
lea
testb
fdivrs
lods
shr
adc
add
or
leave
add
inc
nop
sti
je
sahf
mov
inc
jnp
or
and
jp
add
lcall
mov
adcl
shrb
or
out
pop
loopne
jns
cmp
or
data16
add
and
add
sbb
pop
js
add
push
cmpsl
movsl
pop
mov
aam
push
pop
xchg
sbb
cld
dec
inc
hlt
jmp
and
add
lea
loop
and
clc
mov
aaa
add
jp
sub
lock
add
pop
fs
push
lds
mov
mov
or
add
test
xor
add
xchg
cwtl
sbb
insl
std
or
ss
into
leave
js
and
addb
iret
push
jae
mov
subb
insl
add
cmpsb
aad
sbb
add
sbb
lea
xor
jb
addr16
jnp
inc
sbb
or
xlat
cmp
sub
aam
jge
sbb
and
nop
fsubl
inc
fistps
scas
in
int3
fiaddl
mov
pop
xor
jnp
stos
push
sub
jge
jbe
add
mov
fildl
dec
cmp
pop
add
and
inc
and
dec
add
xchg
jmp
pop
in
push
ret
sbb
je
cmpsl
xchg
popf
add
and
sub
lds
and
jno
add
shll
fdivrl
pop
jo
mov
in
or
pop
adc
lret
ja
std
dec
call
cwtl
inc
mov
mov
lea
or
push
fimull
pop
les
pushf
outsl
xchg
inc
cwtl
pop
xor
fsubr
in
insb
mov
add
adc
ljmp
xchg
dec
subb
jl
add
mov
dec
in
add
dec
std
xchg
cmp
test
sti
lock
rclb
orl
xchg
in
flds
or
cmpb
xor
adc
and
jo
cld
ja
notb
push
pusha
enter
add
es
cld
sub
mov
lods
insl
push
jge
add
push
bound
fsubl
pop
push
test
pop
addl
ja
jbe
add
cwtl
xorb
outsl
add
mov
push
add
lret
sahf
or
add
mov
push
jns
test
loope
iret
rcrb
dec
add
push
dec
pop
add
push
das
aas
add
push
or
add
sub
std
pop
push
mov
or
jno
jne
add
cmp
lods
xlat
add
dec
adc
xchg
push
icebp
lock
hlt
jae
mov
sbb
add
pop
lods
sti
push
add
incb
add
int3
inc
dec
add
movntps
add
lret
xor
sub
jl
cld
subl
push
clc
pop
insl
mov
cmpsl
inc
orl
cmp
dec
add
cmpsb
add
cld
leave
hlt
add
rorb
add
and
sub
jmp
xorl
repz
outsl
push
frstor
cld
push
mov
adc
jns
shr
adc
inc
loopne
out
mov
popa
mov
sbb
testl
fdivr
sub
or
fs
add
mov
mov
lahf
dec
add
fdiv
js
jp
testl
add
pop
sbb
mov
xlat
add
pop
lds
scas
test
cltd
cld
orb
cmp
jmp
mov
sbb
ljmp
ja
adc
lods
imul
inc
addr16
dec
inc
call
cld
jno
sbb
insl
push
popa
cmp
lods
scas
add
push
xor
pop
push
roll
add
loop
lret
add
in
add
xor
push
rol
cmp
ss
pop
add
jmp
sbb
and
push
push
or
add
test
and
add
enter
cltd
or
call
cmc
loop
cmp
add
or
add
sub
daa
lock
add
xchg
movsb
adc
inc
loopne
mov
sbb
add
xor
push
mov
dec
mov
fistps
push
lret
inc
daa
sub
push
out
cmpsl
pop
out
stos
jne
pusha
dec
arpl
mov
or
sub
mov
xor
cmpsl
add
mov
imul
shr
push
ret
mov
push
add
xchg
inc
or
pushf
xchg
dec
push
jno
or
imulb
mov
call
jge
fbld
cmp
add
ja
jg
rorb
js
adc
jne
mov
fucomi
mov
push
jns
in
sub
mov
add
and
add
sbb
or
add
cmp
pushf
dec
mov
scas
mov
add
cmp
loopne
or
dec
aas
inc
andb
inc
mov
mov
daa
fcmovbe
add
push
aas
and
xorb
insl
mov
lcall
repz
pop
mov
sub
dec
jl
nop
movsl
aam
xchg
cmp
mov
dec
mov
or
mov
testl
dec
push
mov
add
sub
idivb
inc
mov
mov
add
insl
jg
add
lds
add
insb
push
shlb
jmp
push
add
cmp
or
and
sahf
dec
push
xchg
cmpsb
jne
out
je
add
adc
addb
or
cmp
sbb
cmp
test
mov
push
add
dec
dec
xor
loopne
data16
mov
jb
dec
movb
ret
pop
push
fimuls
push
out
subb
mov
or
icebp
insl
popa
sub
mov
adc
stos
or
cmp
andb
scas
pop
mov
es
enter
mov
iret
add
mov
test
jno
cmp
ds
stos
int3
dec
inc
xor
fwait
add
jae
cmp
and
loope
shrb
add
les
pushf
mov
add
test
push
and
sub
push
add
xchg
and
cs
sub
push
adc
aam
sbb
or
and
jecxz
rolb
or
int
xchg
push
sbb
lret
adc
fdivrl
sbb
inc
mov
add
pop
or
adc
in
incb
addl
cmp
mov
dec
add
adc
inc
xchg
and
jp
or
jo
adc
jns
mov
sbb
lods
test
inc
sarb
xor
push
sahf
cmp
add
imulb
mov
xchg
loop
ret
add
arpl
cmp
enter
aam
pop
add
inc
fidivl
roll
xchg
or
je
pusha
pop
repz
mov
pop
adc
add
les
jg
and
imul
jae
mov
dec
add
or
shlb
sti
rol
clc
inc
fcos
arpl
in
xlat
mov
adc
push
xor
mov
jno
add
mov
xchg
pop
sbb
add
arpl
or
std
stos
sub
mov
mov
adc
push
sbb
sbb
push
or
lret
mov
and
repnz
jmp
push
mov
add
dec
mov
testb
imul
cmp
pop
insb
cmp
or
dec
out
and
ss
int
push
stc
icebp
jo
add
xor
inc
add
cli
cmp
jecxz
add
mov
aas
fwait
add
enter
fdivr
je
add
xchg
bswap
xor
add
xchg
ljmp
mov
add
and
ljmp
xchg
fisttps
rcrb
cmp
movsl
leave
sbb
and
add
orb
jae
rolb
int3
jns
loop
pop
xor
outsb
dec
insl
notl
push
pop
loope
ds
fsubrl
lods
and
inc
lret
flds
push
adc
enter
push
pop
ret
rorb
add
push
idivl
jo
dec
add
lea
push
add
daa
or
lahf
rol
cmp
in
cmp
popf
and
push
add
mov
jae
sub
out
inc
dec
pop
add
lods
mov
jp
rcll
dec
pop
decb
inc
xchg
ror
and
sbb
mov
cwtl
jb
inc
cmp
mov
push
add
sarb
cli
add
hlt
dec
mov
sub
popf
andb
das
mov
mov
sbb
rclb
cmp
mov
test
cmpsl
jno
incl
andl
add
mov
into
pop
sbb
xor
jmp
lock
cmpsb
fnstenv
loope
add
cli
adc
push
aad
lods
inc
push
hlt
call
dec
in
sbb
jo
xchg
push
clc
test
jl
mov
pop
pop
sbb
xchg
mov
add
outsl
xor
push
adc
rolb
add
lock
sti
xchg
loopne
insl
cli
aas
xor
bswap
dec
jo
add
add
xor
cmpsb
call
jge
fisubs
cmp
shrb
and
add
dec
jecxz
add
pop
jb
add
inc
je
gs
mov
add
add
xchg
mov
popa
inc
stos
mov
push
jo
rolb
aaa
scas
sti
push
add
xchg
xchg
movsb
lea
cmp
ret
mov
adc
cmp
inc
mov
fimull
add
mov
ljmp
loop
add
int3
cli
mov
loopne
push
sbb
and
push
add
xchg
das
jnp
pop
enter
mull
fisubs
add
cmc
and
add
mov
pop
add
jl
daa
nop
movl
sub
jo
test
pop
std
add
pop
pop
out
dec
leave
cltd
and
add
sub
call
aas
adc
mov
add
jbe
cmp
add
cwtl
dec
aas
imul
mull
ds
dec
rorb
jno
jmp
pop
adcb
orb
pop
inc
push
aad
rcll
add
or
ja
add
jnp
scas
lahf
clc
adc
dec
fisubl
adcb
push
adc
rorb
jmp
jmp
xor
mov
add
sbb
aas
or
xchg
add
cltd
xchg
hlt
insl
sub
sub
loope
xchg
movsl
cld
lods
pop
xchg
cmp
in
cmc
push
pop
cwtl
xchg
shlb
aaa
dec
xchg
add
movsl
xchg
jbe
paddw
ret
in
gs
sbb
mov
aad
hlt
add
mov
sbb
popf
add
enter
inc
jne
cmp
mov
mov
test
loope
dec
stc
addr16
sub
mov
inc
fbld
ret
and
push
inc
push
and
call
lahf
into
or
dec
jns
idivl
mov
fldt
jb
add
push
xor
scas
ret
jecxz
test
shlb
dec
cmp
or
jg
xor
add
pop
add
sub
mov
in
loopne
dec
sub
add
jnp
roll
push
inc
xchg
inc
pop
scas
add
jl
ficoml
cmp
jge
loop
push
mov
in
add
int3
mov
and
stos
aam
push
pop
es
sbbl
add
jne
dec
or
int3
jo
add
ds
call
push
rolb
jae
dec
les
js
mov
add
fucom
mov
rcl
add
daa
sbbb
add
or
testl
call
inc
lds
lret
jnp
xchg
mov
nop
enter
fcomps
or
add
aas
inc
add
shrl
jbe
xchg
lock
fmuls
xchg
push
and
cli
add
mov
add
test
push
hlt
or
pop
loope
add
xchg
incb
insb
lods
andb
fwait
add
push
pop
inc
icebp
jmp
psubb
add
aam
shlb
scas
aaa
xchg
iret
inc
shlb
xchg
add
and
call
xchg
comiss
out
roll
jmp
mov
es
int
jo
add
fidivs
xchg
add
scas
movsl
xchg
icebp
dec
sbb
push
loopne
push
add
push
inc
clc
dec
cwtl
nop
xchg
mov
add
pop
inc
sbbb
enter
add
sbb
lret
subb
mov
popf
mov
xchg
adc
mov
xchg
out
faddl
sub
dec
add
lret
aaa
aam
iret
enter
adc
adc
add
lods
cmp
dec
mov
pop
pop
mov
add
add
test
test
cmc
pop
shlb
into
es
shrb
pushw
mov
or
xchg
jmp
mov
jns
jnp
add
xchg
into
stos
in
add
fisttpl
add
imul
jno
adc
in
push
aas
add
sbb
jnp
add
mov
test
sub
add
dec
and
mov
push
mov
and
xor
fisubrl
and
mov
inc
enter
add
out
nop
cmp
add
cmp
add
xchg
add
add
imulb
add
adc
cmp
jle
cmp
lret
xor
aad
lds
xor
adc
inc
js
push
jne
add
jl
push
rorl
rcl
add
inc
rol
xchg
xor
add
pop
fucom
inc
dec
repz
xchg
or
dec
mov
ficoms
mov
mov
sub
xchg
add
add
add
faddl
data16
xchg
mov
mov
add
leave
sbb
jnp
cmp
ret
bound
or
js
repnz
fldcw
pop
adc
or
add
inc
push
xchg
jle
out
push
das
loopne
test
cli
fistpl
call
insl
sbb
or
mov
xor
mov
sbb
adcb
or
mov
rclb
shlb
adc
dec
movl
add
dec
mov
add
leave
fiaddl
xchg
inc
pushf
ret
pop
push
inc
add
adc
sbb
sub
push
and
xlat
pusha
addr16
pop
scas
mul
out
sub
je
add
mov
lahf
jae
push
add
in
aaa
xchg
add
leave
jl
add
sub
setg
cltd
int3
rclb
xchg
js
jbe
out
outsb
add
adc
adc
adc
add
stc
and
shrb
inc
leave
xorl
mov
jbe
movsl
add
clc
push
cwtl
shl
pop
add
adc
test
out
jbe
pop
or
add
push
iret
mov
cmpsl
xchg
push
adc
cs
add
insl
or
and
fs
jae
add
pop
arpl
inc
xor
ds
ret
mov
dec
xchg
pop
jae
mov
mov
mov
mov
or
gs
jno
pop
add
inc
out
inc
dec
push
cmp
or
sbb
mov
pop
ss
aas
pop
or
jb
subl
mov
lods
cmp
pop
add
xchg
enter
cld
mov
mov
push
pop
add
jle
push
sbb
xchg
movsb
inc
les
mov
inc
lds
pop
lods
mov
data16
shlb
add
jbe
rcrl
add
xor
add
jecxz
rorb
add
aaa
xorb
subb
cmp
iret
xchg
jbe
add
xchg
ljmp
mov
incl
or
dec
stos
in
pop
dec
and
xchg
hlt
inc
and
mov
adc
sub
lret
push
outsl
push
pop
mov
push
inc
insl
es
push
add
test
inc
add
jb
pop
inc
xchg
int3
into
lea
cmp
dec
pop
adc
add
cld
pushf
incl
aas
push
clc
loopne
call
into
pop
pop
hlt
mov
mov
add
pop
or
addr16
mov
jb
rol
xlat
add
fstpl
pusha
adc
pop
sti
push
ds
push
scas
adc
jp
and
aam
add
fld
pop
call
add
rcll
into
test
inc
imul
jb
decl
sbb
lods
fwait
sub
or
mov
popa
bound
mov
cmp
sbb
fucomip
push
mov
add
jne
mov
add
je
cmp
lahf
jno
add
mov
cmp
lcall
dec
push
insb
xchg
out
fucomp
xor
lds
sub
fadds
sub
in
push
lods
jg
add
jge
loope
lahf
sbbb
stc
jge
add
xor
add
add
clc
add
add
cvtps2pd
cmc
add
hlt
xor
enter
inc
xchg
push
lahf
sub
add
and
ljmp
loop
pusha
add
test
jmp
push
scas
add
pop
xchg
stos
add
hlt
or
insl
call
jle
pop
movsb
xor
push
add
jmp
in
add
in
mov
mov
out
push
cmp
incl
adcb
xchg
add
cmc
xchg
adc
add
mov
xchg
jl
inc
imul
xchg
and
jns
test
xchg
sbb
mov
push
mov
dec
stc
dec
dec
int3
push
inc
add
lock
addr16
mov
addb
lahf
inc
je
in
popa
add
inc
pop
jns
or
loopne
add
xor
add
enter
stc
dec
jae
add
xchg
out
mov
inc
hlt
add
lock
pop
or
push
sbb
and
jmp
mov
cmpsl
xor
add
and
push
or
or
aad
stos
xchg
dec
push
leave
sbb
in
ret
fnstsw
icebp
or
pop
ret
dec
fisubrs
sbb
push
push
inc
sub
mov
xorl
loop
add
fwait
mov
sub
push
rorl
xor
out
pusha
inc
mov
inc
xchg
lods
popf
add
arpl
add
inc
dec
repz
loopne
js
ds
inc
jbe
inc
add
pop
filds
mov
mov
add
add
shr
cmp
dec
push
insl
push
xor
pop
add
xor
or
jne
repz
sbb
mov
hlt
divl
adc
adc
push
jns
add
mov
lods
pusha
add
or
dec
add
mov
adc
inc
xchg
push
inc
insl
stos
adc
das
out
loopne
fnstcw
push
jae
add
mov
sub
cmp
inc
rorl
inc
cltd
loope
jl
test
test
add
lea
pop
or
cmp
dec
mov
add
ror
and
ds
jl
add
add
nop
push
pcmpgtb
rorb
int3
or
enter
add
mov
out
xchg
mov
mov
js
and
sbbb
xor
pop
sub
cli
add
incl
rolb
push
insl
mov
movsb
add
test
mov
add
nop
xlat
in
inc
pop
jecxz
cmp
pop
mov
jo
add
out
pop
push
pop
fadd
push
jns
icebp
add
test
movsb
mov
adc
call
popf
add
mov
mov
lret
adc
faddl
push
test
out
jp
push
add
rcrl
pop
cmp
pop
cli
mov
add
adc
out
sbb
add
mov
mov
add
xchg
sahf
cmp
popa
shlb
inc
adc
push
repnz
cli
add
jecxz
dec
push
stos
or
add
mull
stc
ret
xchg
push
sbb
fcoml
or
and
pop
shlb
or
adc
push
ret
xchg
in
sub
pop
fisubrl
push
pop
std
add
adcl
filds
xor
and
add
and
jbe
test
fcomi
push
aas
mov
into
out
and
int
add
cs
ljmp
mov
inc
jmp
imul
dec
push
inc
rolb
adc
mov
orb
lret
mov
shrb
jns
add
cmp
ret
mov
push
sbb
xchg
add
xlat
adc
cli
roll
cmc
test
mov
dec
xchg
push
sbb
cmp
mov
inc
mov
cli
jl
add
lahf
in
pop
add
pop
test
jge
adc
ja
xor
pusha
imul
xor
dec
push
sub
add
push
or
lock
icebp
add
mov
dec
jbe
mov
push
push
in
ret
pusha
shrl
fiadds
lods
push
in
test
mov
ds
std
cmc
sbb
push
add
fs
dec
outsl
xor
jge
and
aaa
dec
add
mov
mov
pop
push
rolb
fwait
js
adc
mov
add
andb
fwait
mov
ret
lods
xor
push
ds
add
lahf
fwait
xchg
mov
fistpl
aaa
and
inc
pop
dec
mov
add
arpl
inc
push
roll
or
jnp
cs
add
pop
popf
pop
loope
clc
shl
iret
lods
in
add
mov
pop
add
movsb
add
cmp
dec
add
mov
out
pop
in
mov
jne
dec
xchg
fwait
out
data16
hlt
inc
sub
or
add
cld
fnstenv
jno
add
xor
aad
push
jg
inc
add
sti
xchg
cmp
add
and
lds
mov
data16
aaa
jb
add
popa
dec
cli
js
and
sbb
test
dec
add
mov
mov
push
sbb
imul
and
cmp
xor
fmull
mov
sub
es
cmp
or
adc
cmpsb
cmp
add
std
lock
arpl
push
jno
mov
xor
jecxz
jne
mov
pop
pop
add
push
dec
pop
sub
imul
mov
push
loop
pop
rorl
jnp
sub
ss
dec
outsl
dec
and
add
and
test
dec
jmp
lahf
cld
mov
add
push
sbb
in
push
sbb
arpl
call
cmp
sarl
add
or
orb
sbb
int3
mov
xlat
cmp
jbe
les
fimuls
ret
jnp
pop
cwtl
test
into
pop
push
andl
dec
push
sub
cmpsb
mov
push
data16
cmp
imul
jo
cmovl
add
subl
or
inc
push
and
cs
je
test
sar
das
xor
movsl
push
dec
les
add
repz
pusha
iret
cs
je
inc
aas
xlat
mov
mov
and
or
adc
mov
xor
cmpsl
add
jecxz
ret
movsb
add
or
aad
and
add
fwait
and
in
mov
popf
dec
lar
xchg
pop
cltd
push
add
outsb
adc
mov
sarl
or
rcll
sbb
orl
sub
jg
in
stc
aaa
add
out
addr16
or
in
adc
add
hlt
enter
shll
lret
cli
push
xchg
inc
jecxz
inc
jnp
cld
clc
test
dec
ljmp
js
add
jns
fildl
dec
add
jg
out
push
pop
sahf
xchg
add
dec
outsl
les
lods
sbb
jmp
adc
jo
es
inc
cmp
ror
pop
dec
pushf
add
cmpsb
pop
popa
or
adc
dec
lea
cmp
or
clc
pusha
mov
test
into
add
sbb
aas
dec
push
rcr
add
lahf
imul
cwtl
iret
aaa
add
aam
out
pop
add
ljmp
jp
decb
sbb
subl
mov
mov
ljmp
loopne
adc
jp
add
inc
mov
outsb
mov
lods
add
lock
fbld
pop
sahf
movd
mov
movsl
xchg
xor
xchg
out
or
sub
add
mov
mov
or
inc
add
movsb
les
add
icebp
hlt
dec
ja
leave
scas
add
jp
test
lahf
testb
sbb
std
mov
fidivrl
mov
fstp
popf
add
mov
shrl
jne
pop
test
or
fwait
add
xchg
movsl
add
inc
add
pop
mov
xlat
mov
dec
fs
les
jle
add
test
clc
cld
dec
mov
and
cmp
cltd
out
shrl
mov
or
xor
add
add
jns
movl
add
mov
mov
jp
cmp
pop
call
push
jg
arpl
add
cltd
pop
mov
inc
xchg
repz
xchg
jl
mov
pop
add
mov
or
push
xchg
frstor
add
push
js
xlat
jbe
dec
add
test
lods
push
movsb
sarl
add
add
leave
insl
inc
cltd
mov
test
jl
arpl
add
pop
mov
add
or
jae
cmpl
adc
mov
xchg
icebp
push
xchg
int3
add
pop
and
mov
sub
sub
rcrb
les
std
orl
hlt
imul
add
mov
lock
mov
xor
ds
lret
mov
mov
mov
jo
negl
jb
xchg
sub
cmc
out
popa
or
clc
adc
add
sbb
divl
cmp
pop
int3
and
push
mov
add
xor
pop
jae
dec
add
xchg
inc
xor
aad
ljmp
adc
mov
fs
outsb
inc
adc
jno
add
sub
icebp
in
cmpsl
push
aas
mov
cli
fisubs
lret
insb
add
out
mov
leave
cmpsl
fdiv
rolb
push
lock
insl
mov
dec
lcall
cmp
stos
pop
xchg
add
lret
decb
jbe
shrl
rclb
clc
or
jle
fwait
mov
adc
jecxz
addl
loop
push
mov
ss
scas
cmp
push
mov
mov
inc
add
and
mov
add
adc
cmp
push
add
sbb
das
add
xor
dec
sahf
push
cmpsb
or
mov
mov
shll
xchg
push
sbb
subb
dec
add
or
outsl
xchg
cmpb
xlat
add
lcall
jne
movb
dec
push
loopne
leave
xor
push
dec
in
test
xchg
add
dec
push
cwtl
add
and
cltd
sub
add
dec
outsl
mov
or
add
mov
sub
sbb
jg
push
fildl
int3
int
roll
movl
push
rol
mov
test
xor
iret
add
pop
inc
leave
fmuls
outsl
jnp
xor
or
orb
jecxz
insb
gs
fwait
aam
jno
mov
dec
push
push
aad
pop
push
lock
xor
lret
jno
sbbb
data16
hlt
adc
int3
and
aas
iret
leave
add
fcomps
ret
loop
lds
mov
aad
test
jge
add
roll
mov
inc
sub
lods
add
push
daa
add
xor
add
aas
fisubrl
sbb
ss
mov
movsb
jo
and
mov
mov
add
lds
les
aad
repz
je
or
mov
and
mov
jge
mov
xchg
add
flds
push
repz
mov
mov
mov
fsubrp
jne
inc
fcmove
mov
mov
or
dec
xor
cmpl
es
adc
testb
loopne
jl
mov
bound
sub
adc
cmp
addb
push
add
dec
pop
shlb
add
or
clc
testb
repz
addb
mov
sbb
leave
xchg
pop
adc
aam
cs
imul
mov
and
add
xchg
stos
mov
arpl
sbb
addb
add
pushf
test
jne
pop
or
cmp
xchg
sub
mov
outsb
add
dec
jge
flds
pop
pop
add
cmc
aaa
imul
or
add
and
adc
dec
jge
out
es
push
add
cmp
inc
add
adc
int3
lcall
jb
in
adc
adc
push
cli
add
xchg
ljmp
jne
repz
lea
and
rol
add
jne
cmp
sub
stc
push
mov
nop
stos
test
push
xor
xlat
scas
add
xchg
add
cld
jnp
add
sub
jg
stos
xchg
xchg
in
pop
add
shll
add
xor
stos
and
xchg
dec
pusha
iret
jl
cld
mov
les
inc
xchg
add
rcll
pop
add
fsubr
add
popa
in
mov
out
add
mov
cmp
mov
dec
push
sub
add
dec
push
scas
aaa
sbb
scas
cmp
in
push
popf
pop
cs
and
add
xchg
cmp
jge
add
je
add
test
mov
inc
lea
pop
add
ljmp
pop
dec
fs
add
lods
mov
mov
add
cwtl
aaa
int3
and
push
add
inc
loop
add
and
pushf
pslld
cmp
push
fs
add
xor
xchg
add
xchg
inc
std
add
aaa
jle
add
mov
loopne
sarb
jno
aad
add
int3
sbb
mov
fmuls
decl
dec
add
or
idivl
add
fistps
pop
out
add
mov
xchg
add
das
test
push
jmp
mov
fildl
mov
insl
stos
add
cmp
push
mov
stos
add
test
and
xchg
sub
add
aad
mov
clc
cmpsb
sbb
imul
sub
shll
mov
add
movsl
push
push
imul
popa
fwait
sub
mov
jl
es
cli
mov
in
insl
ret
cs
and
cmp
js
in
aaa
xor
and
lret
scas
and
cltd
adc
mov
fcoms
xor
scas
add
xor
mov
lods
pop
je
sub
sbb
push
xchg
add
roll
hlt
and
dec
loope
cmp
aad
xchg
xchg
push
pop
int3
jle
pop
dec
add
xchg
repz
rclb
daa
xchg
icebp
ja
sbb
pop
mov
out
pop
outsb
fcmovb
lods
cmp
cmp
and
mov
mov
sbb
cmp
clc
xchg
cs
mov
jns
or
ds
mov
fistpll
add
mov
mov
cmp
sahf
leave
push
out
fwait
mov
dec
popa
outsb
cld
jbe
mov
add
pop
mov
insb
sti
xchg
fcompl
nop
push
and
add
imul
subb
sbb
sbb
test
ja
push
jns
pop
mov
ds
cli
push
pop
xor
add
data16
adc
cmp
xchg
inc
mov
clc
add
add
enter
pop
dec
push
sbb
shl
push
adc
mul
xchg
xor
rol
std
add
loop
repz
fadds
inc
inc
loope
pop
xchg
jl
repnz
mov
dec
cmp
pop
enter
ret
sub
mov
lds
and
mov
cmp
push
fidivrs
hlt
andb
int3
das
mov
sbb
ficompl
push
lds
add
faddl
lock
mov
loope
sbb
cs
imulb
add
xchg
push
fsubrs
in
add
dec
jnp
add
mov
test
mov
stc
xchg
add
xchg
mov
incb
and
je
add
push
mov
add
sbb
mov
pusha
push
add
push
rcrl
add
loope
push
xchg
lcall
scas
push
and
mov
ss
repnz
in
cmp
pusha
xchg
call
and
stc
call
sti
sub
mov
xor
pop
xchg
inc
mov
push
mov
mov
fnstenv
jg
push
sbb
or
xor
xorb
lds
jae
fs
ret
jns
xchg
jge
xlat
push
cld
dec
or
jbe
add
int
sbb
sbb
mov
inc
and
add
into
outsl
push
sbb
fbstp
in
xor
cmpsl
sarl
ret
sahf
mov
loopne
dec
add
je
sbb
push
mov
pop
add
icebp
ret
dec
fldl
jne
rorb
mov
loop
popf
mov
ljmp
xchg
add
xor
cmpsl
packuswb
dec
cmp
testl
lock
add
lret
aaa
sub
add
adc
rcl
cld
mov
add
loopne
or
jl
dec
in
push
add
je
add
stc
fcmovnu
les
outsb
shlb
clc
mov
jae
std
stc
repz
add
scas
in
mov
add
xchg
push
push
add
mov
pop
cmp
add
clc
jno
into
fprem1
add
mov
add
mov
mov
es
fdivl
add
or
flds
imulb
fwait
inc
or
add
scas
out
sbb
xchg
adc
pop
add
jns
sbb
pop
mov
out
jbe
loopne
and
aad
sar
out
popf
add
dec
cmc
inc
jnp
ret
add
sarl
mov
sbb
cwtl
stos
jecxz
orb
jo
insl
cmp
lea
xor
mov
pop
jns
cwtl
ficomps
mov
lock
add
pusha
lcall
push
mov
xchg
adc
ret
sbb
lret
push
pop
mov
push
pop
test
and
xchg
int
mov
push
test
pop
jmp
nop
or
add
xchg
mulb
add
pop
outsl
jnp
sbb
aaa
fs
dec
orl
or
xchg
iret
push
add
jb
add
movsb
mov
xchg
cmc
orb
mov
dec
inc
popa
jo
loopne
lcall
and
mov
dec
pop
dec
out
add
js
mov
es
add
push
sub
fcmovnbe
ss
lahf
push
out
xchg
mov
flds
dec
pop
shl
call
sahf
clc
addr16
inc
in
cmp
mov
cwtl
xor
cltd
pop
lods
xor
push
mov
icebp
add
mov
inc
shrb
scas
mov
xchg
push
dec
push
push
movsl
cltd
add
in
scas
xorb
add
loopne
lock
ret
jo
mov
sub
pop
mov
stc
popf
in
inc
inc
lods
sbb
cmpb
add
dec
mov
scas
xchg
sbb
pop
add
or
data16
outsb
call
scas
jnp
lea
jb
adc
mov
jecxz
pop
and
fidivl
add
adc
push
inc
jp
inc
stos
inc
xchg
push
or
add
in
inc
add
adc
test
clc
xchg
pop
lock
or
mov
jns
add
in
jns
sub
cmp
mov
xor
add
movsl
sbb
sbb
adc
add
mov
xchg
dec
les
clc
sbb
es
nop
adc
fisttpl
cld
lods
add
sti
mov
dec
inc
sbb
push
jbe
leave
push
add
dec
mov
add
loope
xchg
mov
mov
jp
push
xor
add
test
add
inc
or
data16
add
push
jno
ds
repnz
lods
sbb
dec
fs
setb
orb
dec
pop
dec
push
cmp
pop
popa
add
comiss
mov
cmpb
adc
adc
push
imul
mov
cli
fwait
jge
lret
iret
and
cmc
pop
sti
loopne
andb
leave
in
pop
mov
fadds
imul
add
sub
sbb
insb
add
es
jl
inc
add
and
cld
mov
test
out
ret
roll
in
fwait
in
ljmp
iret
dec
aam
add
jmp
xor
fsubs
nop
add
pop
add
xor
mov
repnz
add
push
or
adc
pop
inc
mov
mov
leave
mov
add
cld
mull
hlt
jnp
add
inc
leave
sub
add
stos
pop
in
jns
add
mov
int
js
repnz
add
mov
out
or
jl
sub
dec
cld
push
mov
sub
add
repz
pop
add
fiadds
jno
lods
pop
shll
mov
push
mov
call
sbb
add
cmpsb
out
mov
test
mov
add
aam
or
into
xor
dec
adc
movaps
mov
mov
iret
popa
push
add
fwait
daa
movsl
inc
flds
dec
add
mov
sarb
mov
clc
daa
push
mov
rcr
push
inc
pusha
pop
fwait
unpcklps
xchg
dec
arpl
data16
mov
sti
and
movb
sub
jbe
add
jb
mul
sub
cwtl
popf
add
cli
xchg
bound
ret
and
icebp
inc
xlat
loopne
jp
sbb
ds
jae
add
pop
sub
int3
dec
in
sub
sbb
sub
ss
leave
ret
adc
add
mov
in
jle
xchg
xorps
movl
add
out
aas
fcmovnb
mov
push
pop
lds
cmp
adc
ljmp
out
mov
add
es
xor
xchg
hlt
or
mov
cmp
jne
cmp
mov
add
andl
xchg
pop
jno
add
hlt
std
inc
sbb
popf
add
fnstsw
cltd
push
scas
stos
pop
mov
int3
or
shl
jno
cmpsl
dec
add
jg
cmp
mov
testb
add
pop
and
nop
rcrl
mov
xchg
imul
popa
movlps
out
divb
push
mov
js
mov
shlb
add
sub
fiaddl
fcoml
test
sub
shl
jae
jno
add
push
pop
xlat
outsl
clc
dec
int3
cmp
pop
test
mov
lret
outsb
in
adc
add
leave
mov
flds
in
in
ljmp
pop
aaa
xchg
sbbb
ret
lds
jle
dec
dec
mov
push
cmp
roll
shlb
mov
aad
add
mov
xorb
add
sbb
add
pop
mov
icebp
cmc
int
adc
enter
dec
add
cmp
pop
and
into
add
imul
mov
in
les
std
fs
push
clc
insb
pop
add
lcall
mov
xchg
int
mov
push
mov
and
rcrb
xor
aam
pushf
xchg
adc
dec
cmpsb
mov
inc
icebp
cmp
sub
cmp
or
push
add
xor
cld
mov
out
jp
mov
movsb
cmp
sbb
mov
lods
ret
cmpsl
nop
mov
add
pusha
push
stc
push
fdiv
push
add
pop
jecxz
sbb
xlat
lds
cmp
add
mov
add
or
add
mov
xor
adc
xchg
add
pushw
cmpsl
jae
add
movsl
sub
jecxz
jl
add
ret
rorb
int
shlb
lods
add
inc
adc
stos
xor
cmp
add
int3
mov
sub
test
mov
mov
imul
cld
pavgb
mov
inc
dec
lds
add
push
hlt
dec
and
out
add
pop
leave
mov
lret
mov
push
xor
in
rcl
aaa
cmpsb
cs
sbb
add
bound
sahf
add
sub
cmpsb
xor
xchg
mov
sbb
sub
insl
add
sub
xchg
jnp
in
faddl
les
ficompl
fildll
jnp
add
jns
add
xor
repnz
sbb
aaa
push
dec
add
stos
mov
dec
ljmp
pop
add
pop
insl
mov
dec
popa
push
add
arpl
mov
mov
fwait
add
movsb
mov
cld
scas
popa
popl
shrb
inc
addl
lds
fiaddl
inc
rolb
add
sbb
shlb
pop
jp
and
sarb
add
push
xchg
jno
sbb
xchg
inc
in
mov
stos
aam
mov
test
and
mov
add
sbb
adc
add
ret
xchg
dec
add
cmpsb
out
jge
dec
push
ja
addr16
or
add
fsts
add
sub
test
into
adc
sbb
mov
add
xor
dec
cmc
in
test
adc
add
inc
and
xchg
cmp
sbb
xorb
arpl
pop
mov
outsb
sbb
call
jp
lret
pop
shr
adc
add
shlb
cwtl
add
ficoms
add
dec
stc
movsl
adc
in
dec
mov
pushl
add
cmpsb
lock
aas
xchg
or
dec
cmp
stos
add
xchg
cmp
inc
and
pop
and
popa
lret
mov
cli
icebp
orb
mov
pop
fwait
enter
sub
and
test
push
out
dec
fcomps
inc
jno
enter
xor
rcll
test
add
dec
outsb
xor
lock
lock
sarb
test
scas
test
sbb
xlat
add
push
je
lcall
and
cmp
outsl
dec
loopne
fstl
xchg
xlat
shlb
mov
movsl
adc
xchg
pop
add
movsb
add
lods
add
in
scas
aaa
cmp
fs
xor
out
add
lahf
sbb
push
add
std
jno
push
je
in
ds
out
in
mov
in
xchg
add
xor
xor
or
rcll
in
stos
pop
notb
jnp
push
cmp
cmc
fsubl
hlt
movsb
bound
mov
aam
push
add
push
mov
js
add
jg
xor
pop
push
filds
ret
mov
jo
testb
sbb
ficomps
fucom
cli
push
mov
stos
cmp
jmp
add
cltd
pop
mov
add
add
lods
xor
clc
aas
mov
ljmp
popa
mov
mov
enter
mov
and
sbbb
test
movsb
shl
add
cli
js
cmp
ds
or
fdivrl
lock
jne
out
xchg
mov
lcall
mov
mov
std
les
das
ret
dec
pop
cmpl
adc
clc
add
fsts
and
cmc
je
in
adc
inc
add
fmuls
mov
add
testb
das
or
mov
inc
enter
orl
push
add
sbb
insb
cmp
sub
lcall
cmpsl
dec
lock
lea
pop
xor
rcr
loopne
add
popf
sbb
ror
sti
dec
scas
push
jl
add
gs
inc
mov
and
xor
add
popa
cmc
pop
out
shl
xor
mov
es
in
mov
mov
fldl
lods
loope
add
push
scas
cltd
add
dec
out
or
add
fidivrl
in
pop
fsub
sbb
jg
add
jb
loopne
pop
sbb
adc
and
sbb
add
shl
jmp
imul
insb
xor
fisubl
pop
dec
xor
xchg
scas
jmp
rolb
icebp
jbe
es
jnp
in
js
das
mov
adcb
cmp
add
cmc
shrl
mov
shlb
sbb
cmp
pop
mov
jno
jle
fnstsw
add
nop
in
mov
ret
or
xchg
sub
add
pop
sbb
add
mov
adc
mov
sub
mov
dec
int3
push
pushf
insl
ret
mov
aas
faddl
loope
sub
pop
sbb
fildl
bound
cmpsl
push
cltd
xchg
add
mov
in
incl
nop
fstpl
addl
xchg
mov
push
add
pop
sbb
ds
addl
test
dec
add
fnstsw
inc
add
test
pushf
xchg
aaa
add
dec
out
xchg
sahf
lldt
and
lcall
xor
add
dec
test
jbe
loopne
cltd
test
bnd
push
xor
and
push
pop
mov
in
in
add
xchg
jl
sahf
rcrl
enter
nop
sbb
or
insl
notb
inc
mov
pop
rcrl
add
in
jno
add
and
add
divb
mov
add
mov
push
shrb
mov
pop
add
mov
dec
push
fildl
sbb
xchg
or
xchg
push
push
ret
fmuls
or
repz
xor
inc
or
push
or
icebp
add
and
add
inc
mov
loope
stos
scas
add
pop
pop
bound
dec
outsb
add
dec
sub
mov
mov
stos
std
jo
cwtl
out
xchg
call
out
jp
pusha
test
mov
cmpsl
test
inc
xchg
sub
adcb
inc
add
or
lea
testb
xor
add
aaa
sub
mov
movsl
add
rcrl
jp
add
in
call
sbbb
cmp
jmp
stos
cmpsl
fsubrs
add
sbb
cmp
adc
or
mov
add
fnstsw
imul
cmp
add
cmp
sar
add
sbbl
es
lret
shlb
add
dec
jne
stc
stos
pop
add
dec
or
sti
xchg
ret
xchg
mov
pop
lea
add
mov
stos
ret
sbb
stos
psllq
mov
ljmp
add
push
xor
ja
rcr
loope
sub
icebp
sub
mov
jg
mov
pop
lods
jl
inc
dec
add
rcll
enter
loopne
add
pop
sub
cmp
cmpsb
xchg
pop
sarb
add
out
dec
es
dec
xor
push
fimuls
aas
and
sub
inc
and
xchg
adc
cmc
xor
pop
cmpl
ret
loopne
xchg
shll
add
mov
ds
mov
mov
loope
in
clc
sub
add
mov
add
std
xchg
dec
sub
mov
and
add
pop
in
adc
fadds
lds
xchg
xchg
add
jl
xor
inc
add
les
xchg
aas
sub
scas
xchg
add
or
push
add
pop
out
sub
inc
bndldx
jp
call
lods
out
loopne
add
hlt
pop
pop
add
cmpsl
stc
push
js
jae
push
mov
xchg
add
adc
add
in
lcall
test
ret
sbb
add
adc
add
outsb
ja
test
shlb
ljmp
or
insl
mov
add
cmp
faddl
lods
add
sbb
add
xchg
les
or
dec
jno
add
imul
call
or
cmpsb
in
add
cmp
leave
mov
les
cwtl
sahf
xor
add
push
in
sub
ljmp
add
imul
mov
cmp
les
popf
aam
loopne
cmp
pop
push
and
add
mov
clc
jl
add
push
popf
loopne
fwait
xor
test
stos
js
add
pop
jecxz
add
xor
mov
jle
mov
add
dec
cmpsl
xchg
add
dec
clc
pop
int
adc
push
loopne
rcll
pop
fldl
push
add
in
cmp
movsl
popa
repnz
push
jg
pop
fs
mov
or
adc
push
sahf
inc
add
sub
dec
pop
push
je
add
lods
lret
xchg
add
jge
add
lahf
cmp
adc
inc
mull
sbbl
aam
loop
loopne
cmp
popl
sub
sub
add
and
sti
sarb
dec
roll
mov
cmp
sbb
add
xor
rclb
or
cmp
js
xchg
mov
cmpsl
sahf
push
mov
ja
popf
and
jb
inc
shl
add
add
stos
sbbl
loopne
clc
icebp
or
outsb
and
mov
dec
sbbb
dec
movl
pop
pop
jns
js
xor
mov
add
shrl
outsb
push
add
stc
xchg
mov
mov
mov
mov
mov
scas
xlat
dec
pop
add
test
cld
or
adc
inc
add
clc
in
xchg
inc
add
mov
adc
or
pop
jg
rol
cwtl
or
shlb
pop
inc
jmp
jbe
pop
dec
push
xchg
jle
add
imul
int
inc
mov
std
shll
add
pop
and
sub
xor
jb
add
insl
mov
int3
sbb
or
sub
incl
scas
mov
jl
inc
ss
addb
notb
je
push
nop
fistpll
add
push
hlt
jp
cld
push
cld
jle
add
out
das
leave
dec
jg
mov
push
mov
ds
mov
es
incb
or
mov
add
xor
xchg
lds
stos
les
fstpt
push
pop
add
cmc
xchg
add
dec
fwait
cmpsb
sub
out
push
rolb
cmc
mov
xlat
xchg
cmp
mov
scas
add
loop
xchg
pusha
mov
xor
fs
jnp
cmp
mull
out
test
testb
cmp
lret
sub
mov
add
enter
loope
and
cmp
testl
cmpsl
lods
push
dec
jecxz
stos
jg
lea
in
mov
sub
mov
mov
filds
mov
cmp
adc
inc
push
fwait
inc
int
sub
lods
jmp
jb
out
add
xor
subl
ljmp
in
add
ret
std
lcall
rcrb
xchg
mov
add
and
mov
add
in
repz
sub
lret
push
fimull
push
cwtl
pop
cld
lret
sbb
cmp
pusha
aaa
push
mov
fldenv
xchg
and
add
rclb
loop
fs
jl
mov
sbb
shll
xchg
lret
call
shll
in
addb
repz
xor
sbb
inc
add
outsb
movl
push
mov
addb
sbb
std
mov
out
stos
cmpsl
or
add
jns
mov
hlt
outsl
sub
mov
je
mov
pop
rolb
or
insb
cmp
add
movsl
sarb
sub
aad
xor
add
insb
scas
mov
arpl
jl
xchg
inc
and
out
iret
loopne
cmp
cmp
push
jb
repz
adc
add
fst
mov
aaa
and
mov
pop
add
fildll
add
lcall
add
ja
mov
cwtl
shrl
addb
pop
repnz
scas
xchg
aaa
add
xor
push
add
inc
sarb
cmp
dec
add
pop
add
push
add
arpl
add
or
jl
add
dec
imul
add
lahf
stos
mov
add
add
inc
push
insb
jg
icebp
outsb
sahf
pusha
cmp
add
movsb
mov
cmp
jae
in
inc
mov
fildl
adc
mov
into
imul
jne
or
inc
rcrl
in
scas
mov
add
push
adc
add
les
cmp
xor
loopne
add
scas
xchg
sahf
or
add
loopne
fadd
cmc
mov
pop
push
and
mov
in
leave
insl
mov
add
je
js
or
pop
das
xor
pop
and
add
cs
les
add
push
mov
stc
bound
xchg
add
aad
mov
push
jecxz
and
cmp
adc
or
in
inc
adc
push
ds
ss
dec
testb
pop
mov
cmp
adc
std
sub
push
add
cmp
fnsave
insl
lods
xchg
add
sub
mov
sarl
mov
flds
fsubrs
mov
outsb
fcmovne
add
or
stos
or
movl
sbb
jns
daa
mov
popa
nop
lcall
lret
test
std
scas
popf
bound
insb
and
divb
add
gs
std
add
push
fcmovu
lock
imul
and
adc
push
insb
loope
xor
mov
add
nop
mov
adc
fisttpll
lods
inc
scas
mul
add
int3
or
bound
enter
rcrb
sbb
xchg
clc
push
xchg
sub
add
xor
xchg
and
xchg
imul
je
adcb
add
jns
add
test
mov
cld
add
lret
cmp
adc
aad
aas
pusha
jmp
enter
out
and
sbb
xchg
add
add
push
inc
hlt
aaa
shll
faddp
mov
add
test
ret
pop
in
pop
dec
das
adc
or
cld
iret
icebp
sbb
cmp
mov
cmpsl
mov
lahf
sub
pop
mov
push
pop
mov
or
sarl
xchg
add
into
jno
push
adcl
dec
add
lcall
jnp
add
sbb
cmp
fwait
std
orl
popf
movl
out
xor
test
push
arpl
pushl
js
add
adc
add
jl
inc
add
or
dec
or
test
jl
incb
mov
gs
enter
jns
add
fs
adc
into
jle
mov
pop
and
test
fdiv
mov
add
mov
push
xchg
das
fiadds
xchg
into
sbb
xlat
cmpl
xchg
jo
fsubs
adc
mov
lcall
add
wbinvd
lcall
add
jb
add
lret
loope
divb
test
push
jnp
or
sarb
repz
ja
loopne
int3
or
cmp
not
add
xor
mov
jo
out
adc
hlt
cltd
in
stos
jae
pop
mov
add
jno
add
lret
loop
push
addl
enter
jp
in
dec
outsb
lods
mov
cld
adc
fildl
xchg
jle
xor
outsl
xchg
cmp
push
add
test
testl
dec
or
pop
filds
xor
lods
out
sbb
mov
mov
rclb
add
movsb
out
add
scas
xchg
xlat
stos
nop
adc
cmp
add
lret
pop
sub
fs
cwtl
callw
out
push
mov
mov
push
sbbb
pop
leave
add
scas
in
dec
adc
jns
mov
movsl
add
or
scas
mov
adc
mov
push
push
aad
or
add
in
cmc
fildl
rcr
mov
stos
and
lods
xchg
pop
xchg
ds
or
sbb
or
add
test
inc
mulb
xorl
je
movb
ret
jne
pop
push
repz
or
add
add
mov
fcom
push
add
in
stc
jle
daa
add
hlt
mov
xor
inc
dec
add
xor
add
cmc
mov
outsb
sahf
fiaddl
jge
shr
push
ds
test
nop
dec
xchg
xor
mov
adc
cmp
adc
add
fiaddl
nop
jns
add
inc
repz
sbb
iret
pop
fimull
ljmp
add
out
cmp
fcoms
and
fnstsw
add
sbb
out
ret
lsl
push
nop
push
mov
test
push
mov
orb
dec
ficompl
popa
inc
cmpsl
int
or
dec
mov
test
adc
daa
add
lea
jle
rol
add
pop
or
add
stc
ret
clc
mov
addl
in
xor
shlb
push
jnp
add
cmp
pop
bound
mov
mov
adc
cmp
pop
sub
mov
mov
adc
pop
mov
mov
jb
add
cli
aas
hlt
popa
mov
pop
fstpt
stc
sbb
pop
push
or
jl
fidivrs
inc
add
push
adc
or
aad
in
mov
icebp
xorb
dec
repnz
and
mov
inc
adcl
mov
sub
sub
ja
push
scas
lods
mov
mov
mov
sbb
ret
adc
pop
movl
adc
sub
jmp
push
pusha
rclb
int
xchg
sbb
add
and
loopne
sbb
shlb
jnp
adc
cli
jmp
jns
pop
mov
pop
and
mov
xchg
insl
or
rcrb
ds
mulb
pop
pop
nop
mov
mov
andb
adc
test
les
add
lahf
sub
fisubs
xchg
mov
jae
int
fucomip
js
dec
test
cs
inc
test
mov
add
into
loopne
xchg
mov
mov
int3
pop
leave
cwtl
inc
add
inc
dec
cmp
push
and
jbe
xor
cmp
mov
scas
add
pushf
and
sub
mov
negb
in
arpl
js
push
mov
adc
and
xchg
sbb
sub
dec
add
in
mov
sub
out
ja
pop
sub
jecxz
fcomps
push
out
jg
add
dec
ja
add
pop
imul
inc
sahf
enter
adc
out
push
xlat
es
mov
data16
scas
fcompl
xchg
add
add
add
lods
nop
cmpsl
psrld
fidivs
dec
pop
rolb
in
push
add
cmp
clc
push
add
or
dec
jmp
cmp
test
ret
subb
cmp
adc
xchg
mov
sub
fcompl
add
mov
mov
aas
pop
add
pop
cwtl
jo
pop
call
push
and
repnz
inc
jb
out
add
movsl
hlt
add
xchg
sahf
lcall
dec
insb
mov
loop
xor
add
xor
mov
into
cmp
xchg
pop
inc
test
lret
dec
add
lcall
pop
mov
mov
insl
out
add
punpckhbw
add
jnp
fiadds
jmp
xchg
jbe
add
push
jge
cwtl
add
pop
pop
cmp
inc
daa
ret
mov
data16
sub
ss
test
divl
fistps
bound
popa
cmpb
xchg
in
add
pop
xor
sbb
popa
xchg
out
jg
fsubrs
incb
ljmp
add
inc
jnp
andl
aaa
and
add
mov
add
or
jle
int
stos
dec
add
add
repnz
xlat
and
scas
xor
add
sahf
pop
lret
mov
in
jp
mov
and
jno
cmp
fsubrl
inc
mov
and
mov
inc
push
mov
add
movl
xlat
sti
xchg
in
fisttps
inc
push
out
test
fxch
and
mov
fiadds
inc
mov
mov
pop
sbb
xchg
dec
add
mov
rorb
push
icebp
push
enter
pushf
inc
fisubl
ds
xor
adc
mov
mov
lahf
sti
xor
add
shrb
in
pop
cli
add
sub
add
adc
pop
add
sbb
pop
mov
push
or
or
or
fistps
icebp
add
pop
adc
rcr
outsl
lods
lock
add
or
add
icebp
or
and
adcb
dec
or
loop
push
shrb
sbb
sub
fst
xchg
cmp
decl
pop
jnp
jg
cld
insl
in
shrb
out
add
dec
jnp
mov
clc
repnz
je
jge
dec
mov
add
stc
les
adc
mov
add
pusha
sub
sbb
int3
jne
in
mov
out
xchg
out
sbb
js
iret
xor
mov
push
aad
add
imul
xchg
andl
mov
and
mov
shlb
adc
pusha
and
jl
push
nop
inc
inc
cmp
jae
les
arpl
add
sub
pusha
ja
add
outsb
adc
andb
jmp
in
sub
cwtl
mov
sbb
pop
dec
add
ret
dec
and
mov
cmp
insl
xor
add
dec
sahf
movsb
jne
inc
sbb
add
popf
cmp
insl
mov
movsl
fiaddl
sbb
shll
insb
add
stc
or
fwait
hlt
xchg
pusha
add
jmp
push
add
cmp
mov
loopne
out
std
pop
addl
popf
xchg
je
xor
sahf
data16
mov
shlb
sub
and
or
rolb
xchg
ss
shlb
mov
mov
add
pop
add
xorb
push
inc
je
add
mov
pop
nop
cmp
imul
mov
xlat
push
insl
cld
jle
jge
mov
std
sbb
clc
mov
jl
mov
xor
cmp
push
das
pop
mov
mov
adcb
fs
cwtl
ds
sete
cmpb
adc
add
push
jg
push
inc
jl
cld
ret
xor
loope
stos
ds
in
mov
ss
fmul
into
out
mov
mov
pop
pushf
add
mov
mov
mov
into
or
inc
cld
jmp
mov
pop
loop
adc
or
add
hlt
sub
cmp
arpl
int
mov
mov
shlb
inc
xchg
add
sub
fbld
sti
aas
add
mov
lcall
add
movsb
punpckldq
fwait
xorl
add
loope
out
inc
ss
xchg
mov
lock
dec
scas
std
outsl
and
add
ret
or
test
xor
xchg
inc
out
and
out
call
mov
fisubrl
xchg
call
out
aaa
in
mov
mov
add
arpl
mov
cwtl
sub
jecxz
add
and
add
pusha
aas
lcall
pop
xchg
xor
ret
add
mov
fbld
roll
xor
icebp
add
adc
adc
inc
add
xlat
sar
jno
cmp
add
ljmp
add
jmp
and
in
sub
arpl
mov
jae
mov
push
add
inc
lea
adc
mov
std
inc
push
fwait
mov
popa
mov
cmp
les
sub
mov
push
or
pop
fstl
pop
lods
in
or
mov
cmp
sbb
insb
std
fidivs
inc
add
hlt
mov
and
enter
mov
push
in
mov
fimull
loop
lods
xchg
mov
xlat
sahf
int3
adc
mov
mov
add
testl
sbb
test
add
rclb
add
xchg
mov
cwtl
sbb
fidivrs
dec
mov
into
sub
aad
push
mov
sub
call
add
cmp
rcrb
sbb
cwtl
dec
push
imul
push
mov
cmp
mov
xchg
inc
ret
addb
or
inc
test
faddl
inc
jmp
rcl
sarb
add
out
out
add
imul
and
mov
sbb
dec
jae
xor
gs
add
push
sub
cli
mov
mov
add
movsl
mov
icebp
mov
adc
add
sahf
mov
or
mov
add
inc
je
repnz
push
imul
jae
cmp
rorb
sbb
scas
jno
out
fsubr
pop
add
stos
and
clc
push
mov
add
sbb
iret
cmp
sub
rorb
push
jecxz
mov
pop
lret
imul
jle
jge
cmpsb
je
int3
sarb
aas
ss
jno
pop
sbb
out
adc
jmp
add
inc
cmp
ret
add
fwait
xor
in
les
aaa
incb
mov
mov
scas
int3
das
test
or
push
sub
add
stc
mov
xchg
pop
mov
pop
mov
xchg
data16
pushf
icebp
inc
cld
mov
sbbb
inc
mov
leave
jne
add
jg
jge
pop
cmc
add
ss
out
test
lods
int
stos
cmp
pop
inc
inc
add
push
sbb
repz
mov
outsb
cs
and
add
out
cmc
xlat
xchg
subb
ret
dec
pop
add
push
in
push
mov
add
xchg
push
jnp
enter
clc
cmp
add
add
in
addb
pop
add
dec
xlat
inc
mov
pop
aas
mov
popf
nop
mov
nop
mov
out
cld
les
scas
jecxz
mov
loopne
dec
xor
sbb
sbb
sub
mov
daa
stos
es
sti
mov
mov
fimull
add
adc
mov
add
daa
adc
xlat
sbbb
cwtl
xor
nop
mov
push
cmc
dec
cltd
pop
xchg
gs
push
and
add
inc
xchg
in
jno
repz
in
das
mov
std
loop
push
in
jnp
iret
int
mov
lods
inc
cltd
bound
aas
ret
jl
add
push
inc
popa
push
fisttpl
stos
jmp
dec
pop
and
nop
lret
lret
dec
sarl
fadd
daa
mov
jne
pop
or
lds
pop
popl
mov
adc
lret
inc
cwtl
and
enter
sbbb
jbe
dec
pop
adc
hlt
inc
inc
xchg
dec
ds
add
mov
lret
and
out
add
push
add
enter
mov
leave
lret
mov
movb
xor
insl
add
int3
outsb
and
jg
add
xor
repz
fs
xchg
cmp
addr16
pop
and
add
mov
mov
mov
lret
std
adc
div
dec
dec
shl
arpl
cmpsl
lock
cmc
add
lods
imul
pop
outsb
test
cmpl
mov
push
out
add
xor
loopne
add
jg
add
insb
inc
add
push
shlb
loopne
mov
push
decb
jbe
add
and
inc
xlat
add
les
add
dec
push
jmp
mov
mov
loop
add
mov
or
jnp
pop
jo
add
dec
push
sub
sti
inc
cmp
test
and
iret
test
mov
repnz
cmp
call
ja
xchg
jno
inc
lock
sbb
add
or
incl
ds
mov
sub
add
test
cld
fildl
cmpsb
push
lods
aad
push
sti
imul
jecxz
pusha
cli
loop
jg
add
sub
push
mov
loope
xchg
adc
mov
sub
je
pop
ja
lock
rclb
rcrl
cwtl
lcall
pop
popf
aad
filds
inc
stc
adc
xlat
jge
jns
pop
shlb
and
mov
sbb
sub
pop
loop
add
fucomi
add
mov
cmc
cld
cmp
push
xor
loopne
popf
fadds
mov
sbb
or
push
mov
xor
push
sub
add
aam
inc
out
insb
fmull
mov
jae
pop
adc
mov
or
add
or
std
add
jns
incl
jno
add
pop
lds
ja
nop
out
lahf
ret
test
push
sbbb
insb
ds
loopne
add
or
arpl
add
sbb
add
outsb
cltd
shll
mov
mov
add
or
loope
mov
and
jge
push
dec
pop
pop
lock
outsl
and
in
fmuls
add
xchg
jg
cmc
xor
and
xor
iret
mov
pop
lock
cmp
add
add
pop
mov
lods
add
in
dec
or
pushf
sbb
add
dec
jle
push
je
and
xchg
jl
stc
mov
inc
test
jmp
mov
movsb
mov
pop
nop
subb
scas
add
or
push
mov
sub
add
loope
add
push
xchg
cmpsl
add
outsl
xchg
in
outsb
jns
add
scas
mov
mov
add
les
xor
pop
loop
push
cmp
push
mov
je
add
pop
dec
add
and
cmp
test
das
add
or
data16
and
pop
int
in
add
scas
and
add
xor
pop
xchg
stos
in
push
gs
add
loopne
fildll
add
or
insb
push
jge
add
sub
add
adc
lahf
inc
add
sub
add
es
stos
inc
rcrb
cmpl
sbb
mov
mov
or
sbbb
shrb
or
push
sbb
addr16
xor
xlat
sbb
fistps
sbb
lock
xor
adc
movsb
add
jle
cmp
and
ret
sub
ss
mov
insl
pop
add
inc
imul
push
int
pop
rorb
xor
add
leave
mov
push
iret
lock
repnz
int
jg
cmp
roll
xchg
sti
xchg
add
or
pusha
aam
sbb
add
cmpb
add
iret
xchg
pop
inc
std
inc
jae
int
add
lahf
pop
inc
mov
daa
xchg
cmc
inc
imul
scas
mov
icebp
add
nop
mov
in
sub
mov
add
in
mov
add
pop
and
jg
pusha
outsl
inc
pop
pop
add
movsb
mov
test
aas
and
cmpsb
ss
inc
pop
ret
lcall
leave
loope
out
xchg
test
jo
push
das
mov
ljmp
xchg
jg
pop
mov
aas
push
push
inc
push
mov
popa
sub
mov
divb
push
mov
sub
mov
add
aam
mov
dec
mov
mov
pop
sbb
mov
pop
inc
mov
out
and
data16
lcall
add
ja
add
xchg
das
jo
ljmp
xor
push
mov
lods
mov
cmp
in
pop
push
sahf
movsl
xlat
adc
ret
andb
arpl
loope
movsb
pop
inc
jp
clc
negl
push
lods
adc
fidivl
jo
add
and
add
push
jp
push
jl
ljmp
pusha
ss
gs
shr
nop
and
push
or
add
push
jg
push
pop
jp
mov
lret
aas
jl
jo
add
cmpsl
sbb
sbb
add
sbb
or
add
dec
xchg
add
data16
repnz
icebp
add
out
pop
and
add
pushf
sarb
xor
cmp
sbb
cmc
sub
or
jns
cmpsl
add
add
pusha
or
mov
fildl
or
mov
aaa
dec
adc
mov
and
addb
sahf
sbb
call
fstpt
push
mov
xor
cld
inc
jp
push
dec
add
xor
iret
cli
add
pusha
aam
add
stos
add
lea
ds
adc
into
es
aaa
add
add
jno
mov
pop
add
sti
adc
lods
dec
jbe
cwtl
out
pop
lods
dec
sbb
add
ss
mov
ja
add
xchg
rol
add
lret
aas
jge
outsl
pop
in
cmp
jecxz
ficoml
add
and
out
popl
and
test
mov
addr16
mov
push
sar
mov
ljmp
jle
scas
stos
mov
jo
cmpsb
sub
movsl
nop
leave
inc
cmpb
mov
add
les
ja
add
push
sbb
mov
sbb
imul
out
sub
pop
pusha
and
xor
xchg
in
adc
add
popf
mov
negb
dec
lods
lods
pop
in
push
dec
loope
and
aad
stc
pusha
fcoms
out
mov
sub
and
cmp
mov
mov
lcall
add
fnsave
fs
xchg
inc
jle
jp
les
add
mov
sub
cmovp
add
xor
push
ja
add
pop
cmp
jno
fidivrs
gs
add
fiaddl
adc
insb
jb
hlt
inc
es
add
dec
ret
pop
xor
rclb
add
cmp
cmpsl
mov
inc
aam
nop
sub
jno
loopne
pop
cmpsl
pop
std
xor
into
insl
add
cmp
add
adc
dec
add
cmc
push
push
cmp
lahf
insl
lock
dec
mov
lret
test
cltd
cmp
xchg
flds
out
cmp
jge
push
xor
mov
pusha
idivb
inc
lret
add
and
addr16
push
or
jle
add
stc
push
lods
pop
fucomip
stos
mov
inc
dec
test
add
push
clc
enter
add
xor
aam
int
push
inc
loopne
inc
mov
imul
ljmp
jle
push
testl
jo
mov
cmpsb
lods
push
repnz
xor
cmp
out
xor
filds
pop
cmp
xchg
mov
xor
dec
add
dec
add
jns
movsb
mov
push
inc
or
nop
sub
repz
insb
or
pop
out
pusha
psllw
movd
xor
push
mull
stc
lods
push
add
loop
inc
xor
sbb
or
fstp
test
add
sub
push
mov
fistps
xor
clc
outsl
sub
fistpl
xchg
push
cmpb
nop
xchg
addr16
add
push
icebp
rorb
cmpsl
lea
jb
leave
push
add
les
addr16
inc
aam
add
inc
push
add
outsb
pop
xor
lods
mov
xlat
mov
stc
pop
add
or
add
rcrb
mov
add
add
inc
pop
pop
jecxz
out
mov
add
fstpt
xchg
xchg
push
aas
add
notl
daa
inc
and
push
jo
ds
adcl
add
xor
and
dec
add
cmpsb
push
mov
out
lahf
lods
arpl
cs
pop
pusha
push
cltd
add
cli
mov
add
dec
shll
mov
add
adc
jp
stos
sub
mov
adc
cmp
add
inc
mov
cmp
inc
arpl
insb
mov
ss
call
add
out
add
fs
mov
dec
lret
shlb
mov
aaa
sbb
fcom
stos
or
hlt
add
popa
gs
push
in
dec
add
popf
pop
inc
in
repnz
xorb
xchg
roll
stos
mov
mov
add
dec
and
aas
xor
andb
add
aam
jge
inc
insb
mov
les
roll
ds
add
xchg
and
fcmovnu
push
push
mov
push
cmp
xchg
addb
and
add
pop
test
nop
movb
jge
add
xchg
xchg
or
mov
and
pop
add
leave
sbb
pop
mov
adc
sub
aad
sub
sub
jg
cmp
add
fndisi(8087
pop
and
or
aas
add
add
out
add
fwait
and
shufps
xchg
andb
inc
int
roll
shlb
pop
popa
add
push
lcall
mov
in
loopne
adc
push
pop
stos
push
iret
or
xchg
or
cmp
add
loopne
cltd
pop
add
and
pop
push
sbb
cmpsl
mov
add
push
xlat
sub
add
push
mov
fstpl
jle
add
inc
in
add
rcrl
mov
cs
in
mov
pop
fistpl
jp
add
leave
jmp
push
repnz
mov
mov
add
xchg
in
cmp
hlt
mov
pop
cmp
sub
call
insb
add
test
outsl
xor
add
or
jno
mul
mov
aaa
add
movb
imul
add
jo
add
dec
dec
mov
cmp
roll
sbb
stos
cmp
add
push
aas
mov
pop
or
nop
xchg
arpl
sub
bound
aas
insb
ret
repnz
add
xchg
int
arpl
mov
jl
bound
mov
cmpb
jbe
adc
add
pop
pop
arpl
jb
or
pop
addl
aaa
push
cld
add
arpl
add
xchg
imul
add
and
adc
rcrb
add
xor
cmpsl
pop
jl
rorb
in
inc
add
mov
add
ljmp
and
adc
add
fbstp
xchg
clc
out
int
inc
push
add
xor
inc
ds
or
inc
add
or
mov
xor
mov
in
jmp
xchg
ret
and
out
mov
add
push
inc
mov
cmp
sub
and
movsb
into
add
mov
mov
pop
lods
inc
mov
pushf
jnp
clc
cmp
jp
call
cmpsl
sbb
aam
add
inc
aaa
xor
and
sub
jg
jp
je
inc
and
subl
adc
xor
and
cld
dec
pop
into
rolb
jne
push
mov
subl
add
pop
fmull
xorl
add
lahf
mov
push
push
loop
and
inc
lods
xchg
fbld
clc
addr16
repnz
testl
addl
dec
enter
popa
loopne
inc
test
mov
ret
add
cmp
cmp
into
clc
fidivs
cli
das
fs
mov
add
cmp
test
push
cli
addl
cmpsl
or
outsb
add
pop
pop
sti
cmpsb
lret
andl
test
pop
loop,pt
fbstp
dec
imul
lock
add
cmc
pop
adcb
dec
out
push
inc
iret
add
sbb
call
jo
sahf
xchg
repnz
daa
fldenv
add
shlb
cmp
add
enter
dec
add
fcompl
add
dec
dec
imul
pop
sarb
pop
push
cs
fistpll
adc
jne
mov
mov
es
add
negl
mov
sbb
jae
add
xorb
cmc
push
stos
je
add
mov
in
cld
or
and
pop
jnp
mov
daa
and
push
aas
push
adc
xchg
shll
dec
pusha
add
pop
push
dec
dec
xchg
add
jl
call
jp
add
fldenv
outsl
mov
inc
hlt
jmp
xor
add
sbb
cmp
cli
mov
loop
int3
fldt
dec
lock
ds
add
jecxz
outsl
sbb
xor
ficoml
and
add
cli
cmp
pop
sbb
add
ds
f2xm1
aas
sub
orb
insb
add
rcll
psrld
or
stos
loop
jge
fwait
mov
adc
cmp
outsb
inc
jb
int3
xor
or
cmp
xchg
ljmp
add
and
iret
and
lock
xchg
jne
add
add
mov
mov
stos
push
in
outsl
mov
push
jge
subb
inc
mov
std
mov
xchg
jne
imul
jns
or
dec
ret
pop
sbb
loop
inc
add
pop
sbb
into
jg
fwait
cmpsl
add
mov
dec
sbb
push
push
or
xor
arpl
popa
jne
std
outsb
xchg
scas
push
call
push
sarl
fs
mov
cltd
sub
add
inc
int
xor
sub
add
add
test
lahf
insl
add
push
pop
sbb
fcoms
pop
add
mov
add
xchg
dec
dec
inc
arpl
adc
imul
clc
jecxz
add
mov
adc
push
inc
dec
mov
mov
adc
incl
mov
out
or
mov
inc
outsl
add
test
xor
and
xchg
pop
and
cmc
lcall
lret
cwtl
inc
jae
cli
mov
push
push
jmp
xchg
jb
int
nop
imul
imul
aam
pop
inc
add
push
push
test
mov
sbb
ja
sbb
cmc
adc
dec
and
pop
das
loope
xchg
addb
xor
fldcw
js
inc
aas
dec
repnz
loopne
mov
movsb
mulb
call
lcall
push
addr16
dec
xor
cmp
les
lahf
mov
roll
jge
in
stc
xchg
lea
cmp
add
lods
psrld
push
mov
inc
out
iret
int
xor
mov
test
leave
das
lds
add
dec
ja
and
aad
lods
add
inc
xchg
je
hlt
add
cs
clc
or
mov
std
push
sbb
inc
mov
pop
sti
dec
in
ficoml
pop
out
xor
mov
rcll
inc
hlt
xor
mov
jo
pop
jb
add
test
outsb
jg
or
into
sub
add
loop
xchg
repnz
add
xor
test
xor
add
lods
arpl
xchg
ja
cmp
scas
lahf
addl
pop
jo
imul
add
outsl
mov
ret
add
pop
add
jl
mov
or
push
or
xor
add
jbe
jnp
dec
cs
add
mov
mov
mov
rcll
dec
adc
add
dec
sbb
out
inc
mov
faddl
ror
cli
sub
add
xchg
pop
cmp
in
addr16
adc
test
rcrb
hlt
jl
pop
rcrl
pop
sbb
and
roll
cmp
scas
add
and
xchg
outsb
fs
negl
ret
xchg
cmp
fadds
lahf
mov
lret
mov
pusha
lock
test
pop
stc
fdivrl
fistpl
pusha
adc
mov
jo
add
push
movsl
pop
out
mull
xchg
add
adc
or
add
adc
pushf
ds
lcall
in
jno
nop
mov
std
xor
add
cwtl
hlt
add
sub
dec
and
clc
lods
add
fmul
jno
aam
repnz
pop
push
mov
sub
stc
ret
out
cmp
push
push
fmuls
push
mov
push
pop
mov
ret
sub
and
nop
add
inc
xor
add
cmp
pop
iret
sbb
mov
sbb
pop
in
xchg
cmp
int3
subb
or
xor
rcrl
lahf
xorl
fildl
push
popf
push
push
dec
add
decb
imul
cs
push
fs
ret
mov
pusha
add
iret
lcall
pushf
adc
cmp
out
das
add
mov
pop
pop
iret
fdivl
add
das
add
dec
ljmp
mov
sahf
jecxz
lds
xchg
nop
jne
xchg
mov
add
mov
imul
xor
jne
add
mov
imul
cwtl
int
std
sub
add
xchg
negb
pop
add
mov
or
inc
es
jmp
and
mov
mov
mov
add
dec
xlat
sahf
fisubl
add
fsts
jae
xchg
pop
and
xchg
insl
mov
add
movsb
stos
enter
add
and
add
sub
push
fwait
pop
xchg
add
andb
cwtl
pop
mov
outsb
ljmp
testb
cmp
add
mov
and
add
adc
imul
add
frstor
add
inc
repnz
and
in
xorb
addr16
dec
add
and
add
pop
iret
orb
add
sub
jp
xchg
roll
xchg
inc
mov
mov
int3
sbb
mov
rolb
scas
or
fwait
les
addl
sub
aam
adc
clc
push
add
test
in
pop
daa
cmc
pop
int
push
mov
sahf
fidivs
mov
cli
in
sbb
add
push
mov
mov
cmpsl
pop
out
jmp
mov
imulb
shlb
xlat
test
mov
loopne
pop
xor
ret
nop
xchg
adc
add
adc
rcrb
lods
mov
push
cmpsb
add
pop
xor
lret
jl
fnstsw
and
sbb
pushf
jg
call
lods
dec
mov
in
repz
jae
add
jmp
jp
andb
shr
lahf
loopne
pop
dec
and
or
pusha
shl
or
add
cwtl
ljmp
dec
or
dec
jg
pop
cmpsb
adc
mov
xchg
in
pushf
jmp
daa
jae
stos
popa
add
push
mov
int
ljmp
jle
rcll
adc
jo
aam
mov
dec
movb
push
fs
push
add
arpl
roll
adc
push
inc
add
dec
lret
mov
add
mov
sub
inc
ficompl
push
pop
push
pop
mov
mov
repz
mov
je
sbb
mov
sub
mov
std
or
add
push
push
pop
dec
cmp
add
fdivp
ss
lock
and
imull
test
in
adc
sub
mov
add
jo
insl
add
repz
aaa
jno
cmpsl
add
inc
mov
add
shll
jg
icebp
loope
push
clc
add
data16
pushf
cwtl
mov
and
sub
cli
add
loopne
jo
add
push
adc
xchg
loopne
aam
push
popa
or
mov
imul
sbb
add
jne
sbb
inc
adc
xchg
sbb
pusha
stos
jo
push
add
pusha
cmp
dec
inc
mov
fs
lcall
ds
xchg
dec
dec
add
fisubrs
mov
jns
pop
aaa
mov
lds
out
out
add
dec
mov
add
lahf
enter
push
ja
push
icebp
xor
shll
or
add
fldt
cmp
pop
enter
dec
ja
add
daa
fdivp
call
sqrtps
stos
jge,pt
add
xor
push
sbb
pusha
add
mov
enter
js
push
adc
or
add
clc
mov
dec
adc
ret
add
divb
dec
test
mov
hlt
aam
push
addr16
scas
and
fdivl
and
andb
add
cmp
nop
cmp
movsl
add
jmp
addb
push
ror
jns
pop
or
add
sbb
add
out
inc
repz
mov
je
mov
cmc
add
cmp
push
jae
test
pop
int3
and
cmp
and
insb
movsl
add
jnp
icebp
out
sar
add
in
ficompl
shl
add
rcrl
mov
xchg
or
cmp
lahf
clc
inc
nop
and
mov
pushl
pmulhuw
cld
add
cwtl
mov
cmp
cmp
mov
gs
jge
fmul
add
pop
mov
push
adc
mov
xchg
or
jae
jmp
sbbb
sbb
sbb
in
jbe
add
pop
clc
pushf
fwait
test
in
outsb
push
mov
les
jmp
scas
fs
fwait
je
add
xchg
jmp
add
cmp
add
add
pop
pop
inc
sbb
int
add
and
bound
jmp
addr16
fstps
add
add
notl
into
les
enter
jg
out
mov
cwtl
movsb
jnp
xchg
loope
cmpsb
ds
add
out
mov
jp
add
mov
inc
movl
fisttpl
fisubrs
xor
in
das
sbb
mov
mov
int3
mov
mov
mov
cmp
bound
xchg
push
mov
mov
sahf
xorb
fildl
incl
mov
add
test
xchg
mov
stos
rcrl
shrb
out
and
rolb
in
add
mov
les
repnz
add
add
adc
jb
movsb
pop
lods
lahf
inc
dec
mov
cmp
dec
rcrb
pop
imul
testb
fisttps
add
dec
jo
shll
add
mov
adc
xor
and
les
xor
and
das
xchg
loope
nop
in
mov
pop
mov
sbbl
call
adc
shld
sub
dec
loope
mov
mov
scas
mov
or
movsb
lret
mov
roll
push
push
popf
imul
fisttps
sub
add
in
sti
jle
shl
ret
and
add
adc
pop
gs
jo
add
cmp
inc
jmp
pop
add
mov
lds
das
cmp
jl
fcmovnbe
mov
xchg
in
cld
add
xor
add
faddl
ds
xchg
rcll
add
pop
xor
pushf
sub
std
stc
jno
mov
inc
xor
psllw
dec
lret
loop
or
cmp
sub
add
push
mov
add
or
add
lods
pop
sbb
and
testb
mov
cmp
mov
cmp
scas
cld
inc
mov
inc
rorb
mov
je
sarl
or
shl
sbb
jge
int3
add
inc
cmp
ljmp
inc
push
adc
mov
bound
out
cmovbe
call
add
or
adc
aas
jp
mov
movsl
xchg
add
push
and
nop
pop
add
out
xchg
adc
ret
movsb
inc
inc
mov
mov
in
or
bound
pop
lret
aaa
jne
pop
ds
add
stos
outsl
cmp
lcall
cwtl
test
js
test
jne
add
out
lods
fildl
pop
fdivr
pop
and
out
lock
nop
stc
jnp
sbb
xor
pop
pop
xchg
fmuls
push
add
pop
in
cmp
add
jmp
mov
add
lahf
sbb
fldl
sub
xor
andb
aas
mov
add
dec
xchg
stos
aam
jge
add
stc
push
pop
xchg
jne
sub
add
mov
dec
das
cmc
sbb
adc
js
pop
addr16
shlb
mov
cmpsb
sti
add
mov
test
add
push
enter
daa
mov
dec
popf
enter
arpl
sbb
jb
adc
lock
jns
icebp
inc
pop
ret
bound
dec
scas
add
mov
insl
jb
or
cli
add
xchg
xor
ja
scas
sbbb
add
lcall
stos
push
xchg
fcoms
mov
loop
add
xchg
mov
inc
flds
xchg
insb
in
daa
add
mov
int
jecxz
scas
sti
sbb
or
mov
pop
sbb
add
outsb
add
push
fs
add
gs
scas
or
mov
mov
aaa
dec
loopne
lods
add
cmp
mov
add
popa
stc
xchg
shlb
add
xor
sbb
sub
sbbb
pop
pop
push
sbb
lods
fs
dec
test
add
rcll
xchg
add
xchg
leave
imul
xlat
jg
inc
int
aas
ds
or
sub
mov
add
dec
sub
cmp
lahf
into
inc
and
test
daa
shl
add
fstpl
sbb
sub
add
ror
and
dec
dec
jmp
xor
add
jge
sub
add
cld
push
aaa
add
pop
xor
jp
adc
xchg
into
fs
ljmp
fnstenv
repnz
jl
inc
xor
test
mov
movsb
pop
rcrl
int3
add
adc
lea
jp
sarb
pop
add
pop
stos
lahf
dec
dec
lcall
sub
test
push
pop
mov
leave
dec
add
aas
stos
cld
lret
xor
mov
cmp
scas
jno
pop
rolb
cmp
enter
insl
add
xor
hlt
lret
ljmp
jae
sub
pop
out
sub
jge
xor
dec
add
shl
repz
scas
imul
rcrb
xchg
inc
xor
xchg
mov
sub
jmp
sbb
daa
sub
add
fiaddl
or
adc
sahf
es
and
push
dec
pop
std
xor
pop
aas
mov
rolb
stos
jmp
cmp
add
inc
pop
and
std
push
adc
aaa
incb
add
int
mov
cli
pop
add
jno
dec
push
or
in
add
into
dec
insb
add
stos
mov
repnz
cmpsl
roll
mov
pop
imul
cwtl
jb
xchg
out
push
add
fldcw
jb
add
push
dec
test
add
jae
pop
ret
cmp
outsl
loopne
int
lods
add
mov
sbb
xchg
adc
add
cmp
jmp
clc
cltd
pop
ss
add
mov
cs
insl
mov
mov
rcll
xor
or
sub
test
cmp
adc
into
inc
arpl
sbbb
cli
mov
pop
std
pop
sbb
rcrb
jnp
nopl
jbe
inc
add
mov
sahf
jp
pop
in
cld
jp
and
xchg
adc
fldl
mov
cli
add
aam
clc
cmp
xchg
adc
dec
dec
loope
mov
cli
idivl
add
cmpb
lods
fmuls
mov
pop
push
les
movsb
and
push
mov
ja
add
je
add
mov
mov
push
push
out
add
mov
dec
faddl
das
es
jo
rolb
loopne
cmp
pusha
pop
mov
loopne
std
fistpll
sldt
mov
xor
dec
mov
sub
popl
dec
sbb
and
and
fnstsw
movsb
xchg
notb
stos
pop
mov
sub
jmp
popa
xchg
ljmp
stc
mov
in
add
inc
shll
les
and
popa
mov
shll
outsl
rcrb
adc
arpl
aas
inc
in
adc
inc
lods
inc
popf
jecxz
xchg
loop
push
aam
mov
add
sub
jle
test
out
push
add
dec
mov
xchg
mull
pop
and
decb
mov
icebp
iret
call
cli
inc
les
sub
mov
shlb
out
cli
mov
inc
xchg
pop
rorb
pop
test
and
nop
push
inc
mov
dec
dec
pop
pushf
sbb
pop
mov
xor
cmp
add
mov
or
js
add
dec
fisubs
inc
add
xlat
inc
push
mov
jmp
sbbb
xor
dec
in
xor
add
ja
jge
add
popf
arpl
hlt
ljmp
pop
pop
xor
push
dec
nop
adc
shlb
add
xor
shrl
dec
push
xor
cmc
lods
loopne
rolb
pop
or
xorl
jne
sub
jo
shrd
les
sbb
jl
sbb
mov
add
movsb
into
in
stos
insl
hlt
add
mov
loopne
pop
xchg
fimull
add
pop
movb
scas
test
call
adc
imul
sbb
cwtl
and
inc
xchg
xor
push
adc
jg
adc
add
jb
jne
aad
inc
sbb
lret
aaa
add
jbe
loopne
dec
sub
mov
clc
cmp
pusha
aam
mov
push
dec
sbb
sbb
mov
outsl
add
mov
fucomip
add
mov
sbb
jecxz
std
sub
jo
cli
cmp
cmp
scas
mov
addb
decl
push
lahf
jmp
pop
sub
inc
add
fidivrs
call
push
pop
add
jge
cmc
add
xchg
dec
iret
pop
xor
in
adc
or
in
movsb
inc
jmp
pushf
add
pop
roll
and
xlat
push
jo
clc
sbb
iret
xchg
fstl
not
and
cmpsb
pop
ret
pop
or
push
loop
sarb
mov
out
sub
das
daa
pop
jl,pn
and
mov
xor
fwait
inc
xlat
sbb
inc
add
mov
imul
mov
add
stos
add
pop
stos
jae
mov
push
cmpsl
push
in
aam
xchg
cmp
fwait
addb
sti
mov
adc
iret
xor
subb
jp
push
daa
imul
enter
mov
rclb
add
clc
paddd
addb
and
call
mov
mov
loope
sbb
jl
scas
scas
or
push
clc
ljmp
popa
push
divps
icebp
xchg
pop
loop
adc
je
insb
std
mul
hlt
add
adc
cmp
dec
mov
aas
sahf
sub
insb
xor
cmp
add
cmp
andnps
or
xchg
clc
dec
push
push
cmc
push
add
xchg
int3
push
repnz
mov
pop
xor
xor
add
inc
movsl
test
inc
ret
mov
dec
add
cwtl
mov
es
nop
xchg
and
push
fs
shlb
xor
in
and
pop
sbb
pop
int3
call
bswap
loopne
sub
xchg
popa
iret
cmc
outsb
sbbl
shrb
and
out
faddl
inc
iret
js
pop
lahf
nop
icebp
add
lods
sbb
add
cli
jne
cmp
cmpl
pop
dec
jle
add
cmp
loop
scas
in
mov
push
adc
add
xor
call
add
loopne
scas
cmpsb
add
cmp
andb
fsubrl
sbb
dec
dec
pushf
hlt
or
xchg
test
pop
lret
mov
cmpsb
data16
xor
add
pop
lcall
loopne
pop
mov
fcoml
add
lret
pop
das
pop
add
or
sub
jle,pt
cmp
inc
mov
lret
fdivl
and
movsb
scas
fcompl
pushf
jecxz
aam
outsl
adc
add
cmp
movsl
in
fcmovnb
hlt
inc
pop
add
lods
push
scas
cmpsl
rolb
adc
push
cmp
cmp
roll
xor
adc
bound
xchg
sbb
ss
dec
push
add
mov
mov
idiv
cmp
es
xor
add
jb
add
aam
aas
mov
ltr
mov
cmp
adc
int3
in
sbb
jo
shrb
cmp
sub
dec
movsb
shrl
or
xorb
add
and
and
mov
lret
inc
jle
add
or
sub
add
jno
cmp
push
dec
sarl
mov
lret
xchg
ror
add
dec
mov
pop
xor
test
inc
adc
cmpsb
ds
loopne
pop
adc
add
mov
and
cs
sbb
cwtl
add
stc
push
adc
pop
add
test
orb
jecxz
das
jg
loopne
test
ja
xor
sub
jmp
mov
add
ljmp
add
or
xchg
add
jl
push
into
addb
pop
add
mov
std
sahf
popl
adc
xchg
adc
out
scas
add
inc
jp
add
xchg
jl
push
inc
add
dec
ret
rclb
lods
das
loop
filds
aad
xchg
jle
lahf
pop
dec
add
nop
inc
xchg
dec
sbb
pop
mov
pop
jnp
pusha
push
or
fistpll
pop
popa
jne
dec
add
lea
pop
inc
ja
jp
jmp
adc
test
flds
add
jae
mov
xchg
mov
add
mov
adc
insl
test
neg
mov
in
add
jb
adc
add
or
add
sbb
xchg
adc
hlt
aaa
xchg
repnz
add
sti
test
jns
enter
lods
adc
and
cmpb
mov
sbb
add
push
add
xchg
test
sarb
pop
cmc
jbe
and
ds
daa
insb
lds
cmp
aaa
lea
stos
cmpsb
mov
adc
mov
xor
clc
and
lea
xchg
adc
roll
push
mov
inc
lret
or
xor
cmp
sbb
or
shl
ljmp
sub
jbe
jg
xor
imul
cmp
mov
push
pop
out
pop
dec
imul
mov
test
sbb
loopne
jnp
bound
inc
add
push
testl
imul
add
xor
jle
xor
xchg
js
outsl
imul
pop
movsl
cld
arpl
mov
imul
xchg
pushf
sbb
push
sub
jne
cmpsl
xor
pop
adc
push
jle
sub
sti
in
push
mov
or
mov
fsubrp
add
jnp
nop
pop
dec
mov
jl
in
add
or
test
push
jae
xor
nop
and
add
movsb
cmpsb
adc
pushl
aad
fistl
mov
add
jecxz
mov
test
jnp
inc
pop
add
and
xchg
cld
jmp
add
into
jle
outsl
add
dec
add
repnz
ret
mov
dec
pop
loop
cs
dec
add
mov
testb
mov
repnz
out
and
iret
xor
fnsave
inc
mov
arpl
dec
push
add
mov
xor
or
or
adc
mov
add
mov
sbb
push
mov
insb
popf
mov
test
and
pushf
xchg
add
sbb
les
sub
enter
sub
pop
es
mov
push
test
push
stos
lea
clc
int3
inc
mov
pop
add
pop
pop
mov
je
add
mov
lcall
dec
mov
mov
stos
mov
dec
add
sarl
adc
xor
out
mov
cmp
shrb
or
addb
outsl
loopne
add
int3
and
iret
out
lods
call
xor
push
add
add
and
push
into
xor
add
clc
adc
ret
aaa
mov
xchg
lcall
add
lock
or
add
ss
push
add
jno
jp
xor
add
inc
add
pop
js
xor
jnp
jo
jne
and
pop
xor
es
aad
xchg
inc
fdivl
add
xor
adc
sahf
jecxz
in
sub
pop
cs
popa
cmpb
sub
dec
pop
add
mov
insl
sbb
cmp
xchg
pop
cmp
inc
jl
cwtl
add
aad
fcompl
rolb
push
push
rcll
shlb
mov
ljmp
lock
pusha
xchg
add
dec
mov
sti
add
dec
loopne
mov
inc
mov
push
rolb
or
das
fstpt
cmpsl
mov
subb
inc
pusha
iret
repnz
add
fsts
dec
add
dec
sbb
and
inc
shll
add
popf
dec
mov
outsl
pop
mov
shl
pusha
inc
add
push
mov
inc
mov
or
mov
dec
add
mov
xor
test
add
clc
pop
cmp
cmpsb
cmp
push
movzbl
shrb
add
adc
subb
add
cmp
mov
test
add
inc
jl
mov
cmp
pop
int
xchg
mov
sub
mov
lods
pusha
mov
add
icebp
cmp
push
test
xchg
add
popa
and
ljmp
repnz
dec
popf
add
mov
cmp
lock
add
ss
pop
sub
pop
decb
fists
or
cmp
cmp
pusha
push
add
fsubp
mov
pop
out
addr16
in
xchg
js
add
sub
jb
mov
lret
add
inc
sbb
sub
add
call
sbb
cmp
xlat
sbbl
fstpl
and
sarb
clc
lods
nop
add
test
lds
xchg
daa
aas
inc
push
pop
mov
sub
int
movsl
shll
movb
repz
add
jne
leave
jle
orb
add
imul
lcall
mov
or
insb
jp
add
shll
sub
xor
data16
xchg
nop
lods
jl
bound
jmp
add
pop
add
mov
sub
jge
add
jmp
xlat
xor
add
or
sub
data16
out
adc
sub
push
push
std
cwtl
add
mov
lock
sbb
sbbl
filds
leave
mov
or
cli
jmp
in
push
sub
add
scas
lods
dec
jb
add
push
cs
add
fidivl
add
mov
dec
mov
dec
sub
pop
roll
mov
arpl
mov
bound
add
mov
sahf
std
insb
out
or
jns
inc
xor
jae
add
push
imull
cli
roll
cmpl
testb
aas
mov
dec
fwait
in
add
bnd
mov
jge
add
add
imul
dec
jo
arpl
loopne
add
aaa
jae
test
pop
out
pop
jb
and
push
lcall
pop
adc
add
xchg
add
stc
add
mov
rcr
mov
push
fidivrs
das
pop
sub
int
pop
add
xchg
insl
add
fists
add
inc
cmp
jle
cmovae
xor
fwait
pop
mov
bound
shlb
test
cld
punpckhbw
push
cmp
jg
jae
add
mov
jle
and
lds
xchg
pop
subb
mov
jle
add
fwait
loopne
clc
push
add
or
mov
sub
jp
icebp
mov
dec
inc
and
xchg
mov
add
or
jmp
push
fwait
xchg
cld
cmc
mov
and
sub
add
jl
sub
pop
inc
cld
xor
lea
lret
or
add
orl
pusha
xchg
jl
push
add
js
aad
arpl
or
ss
jne
sbb
movsl
bound
push
adc
jg
les
lods
ss
repnz
inc
push
dec
push
cli
add
jle
shl
mov
sbb
mov
int
add
mov
outsb
xchg
imul
aam
mov
popl
mov
mov
fcoms
sbb
adc
scas
sub
mov
out
aas
in
xchg
pop
setb
xor
jb
pushf
sbb
std
add
dec
dec
out
int
and
fnstsw
pop
xchg
sub
popa
add
loopne
add
mov
xchg
cmp
hlt
add
daa
add
sub
adc
stc
pop
clc
ds
aas
shlb
inc
sub
in
test
insb
add
push
lea
je
aam
dec
sbb
fdivrl
xor
add
cld
mov
add
fs
out
stos
adc
loopne
pop
into
lahf
sbb
das
js
incl
mov
clc
xchg
sbbb
movsb
sbb
das
add
mov
ljmp
push
lock
mov
out
add
imul
push
cmp
cmp
cmp
mov
add
lcall
pusha
aam
adc
inc
rolb
clc
hlt
inc
pop
aas
sahf
mov
sti
add
or
push
cmp
insb
enter
add
mov
mov
add
mov
sbb
je
sbb
cmp
in
mov
push
and
mov
pop
push
bound
mov
sahf
pusha
push
test
add
arpl
pop
int3
arpl
fwait
je
jbe
adc
add
leave
jmp
add
in
inc
add
push
dec
inc
and
in
mov
test
mov
shrl
out
mov
lock
xor
sub
inc
lds
sti
outsb
mov
adc
sbb
inc
lahf
jns
mov
je
add
shrb
add
int
mov
cltd
and
mov
mov
cmp
mov
mov
das
daa
loopne
gs
inc
sub
rolb
test
fwait
mov
mov
call
popf
add
mov
add
jo
xorps
push
add
adc
into
mov
pop
sahf
mov
pop
mov
mov
and
xchg
out
xor
dec
add
pusha
lret
or
sub
ret
lret
fildl
iret
aaa
addl
push
inc
sub
cmpsl
or
pop
and
adc
orb
scas
dec
and
out
xchg
mov
icebp
mov
aas
inc
xlat
pop
inc
jle
mov
add
mov
stos
add
and
std
pop
jecxz
add
mov
sub
data16
in
push
fisubs
pop
jg
push
cmp
sub
sub
std
sbb
xchg
add
jle
push
scas
fcmovnbe
or
adc
out
lret
mov
jbe
xchg
sbb
icebp
out
movsl
push
add
and
cmp
aaa
and
sub
and
sahf
mov
jnp
dec
dec
test
sbb
push
dec
out
dec
add
sbb
xchg
hlt
shlb
xor
test
cmpb
jno
inc
jne
mov
adc
push
and
scas
and
rcrl
push
pop
in
add
push
inc
rcrl
or
dec
stos
xchg
adc
pop
cmc
pop
push
adc
ja
or
fisttpl
inc
fsts
std
add
and
push
adc
add
push
inc
push
shll
add
push
es
in
jno
xchg
bound
sbb
leave
mov
jecxz
push
shlb
pop
pop
sub
faddl
dec
add
or
js
out
lcall
inc
xchg
mov
in
pop
daa
add
add
ret
imul
add
pusha
fcmovnu
outsl
call
jno
add
std
mov
imul
daa
inc
add
xor
sub
ficoms
dec
and
lods
jge
into
or
mov
fcmovne
dec
add
ds
leave
add
aaa
imul
aad
dec
scas
cmp
jmp
jns
shrb
or
pop
add
xchg
fidivl
in
stos
mov
jl
decl
loope
add
push
daa
mov
xchg
inc
sub
lret
dec
fstpt
push
xor
pop
std
iret
jne
pop
xor
arpl
into
in
repnz
add
popf
mov
or
lret
push
ret
xchg
rclb
gs
sti
call
push
mov
jp
mov
inc
ffree
movsl
add
iret
popf
lods
cmp
int3
xorb
stc
rcll
jg
add
mov
mov
jge
add
loop
rolb
mov
int
mov
push
dec
call
xor
add
push
pop
iret
push
jl
add
and
nop
mov
dec
cmp
lock
mov
add
add
sbb
outsb
test
add
adc
add
lods
sti
sbb
in
mov
inc
sarb
test
inc
icebp
ja
clc
add
fisttpll
lcall
mov
mov
jbe
fldt
and
push
xchg
test
xchg
and
test
pop
movsb
sahf
fs
push
out
adc
jge
pusha
add
and
int3
adc
add
jecxz
jbe
bound
xor
add
lret
adc
pop
cmc
jbe
pop
add
jmp
cwtl
iret
mov
test
jno
push
mov
push
add
lret
in
mov
jg
outsl
test
cltd
pop
inc
addl
mov
inc
pop
inc
pop
jbe
sbb
sbb
fwait
and
push
jl
inc
pmaxsw
sahf
dec
and
mov
enter
aaa
clc
add
mull
cmpsl
lea
enter
push
or
aad
stc
push
pusha
ret
mov
jne
fstpt
in
and
push
test
loope
cmp
pusha
fiaddl
stos
mov
mov
adc
add
shr
daa
jbe
push
mov
mov
btr
cmp
ss
add
loop
stos
adc
ljmp
inc
xor
aas
call
shlb
cli
insl
loope
es
adc
std
repnz
mov
mov
adc
adc
dec
add
in
xchg
ficomps
das
xchg
pop
aad
pop
les
fwait
pop
push
adc
jns
shlb
enter
push
lret
add
cmp
je
cli
adc
add
lahf
sti
mov
or
add
add
mov
cmp
inc
pop
mov
inc
insb
dec
aaa
add
fwait
clc
or
addr16
clc
xor
adc
inc
push
mov
cmpb
jle
sarb
jmp
enter
dec
inc
fsubs
sub
mul
into
xor
adc
mov
pop
push
jo,pn
cmpsb
les
add
movsl
push
sub
addr16
jo
dec
pop
hlt
cmp
add
mov
mov
repnz
pop
xchg
and
and
xchg
and
dec
aad
sahf
pusha
popf
jp
cwtl
addr16
inc
ja
in
add
push
jg
ds
stos
fldl
testb
lret
mov
jno
xchg
into
pusha
xor
orb
jmp
pop
add
inc
mov
add
adc
rcl
jl
jg
mov
add
out
cld
mov
bts
andb
dec
flds
mov
lea
cmpsl
inc
add
add
sub
bts
mov
cmp
cmp
fwait
subb
arpl
loop
dec
add
pop
jns
movsb
adc
cmp
adc
dec
insl
sub
add
add
mov
xchg
loop
xor
cmp
xchg
jmp
jbe
mov
mov
leave
fiadds
sub
sbb
call
test
add
jb
cmp
dec
enter
cmp
test
lods
add
and
adcb
inc
cmp
mov
add
lods
xor
pop
add
and
sti
add
inc
add
into
dec
mov
add
jno
inc
add
inc
daa
aam
pop
sub
int
fnsave
xchg
inc
ret
lret
jo
pop
jmp
and
adc
pop
dec
rorb
inc
ss
pop
sbb
repz
cmp
add
mov
mov
daa
mov
popa
cmc
data16
mov
cmp
movsb
add
mov
imul
sbb
or
add
jle
lea
dec
ficompl
cld
add
fnsave
cmpsb
add
loope
rcl
call
add
xchg
inc
add
xor
jl
dec
pop
imul
loopne
and
push
add
add
xchg
cmp
mov
xchg
add
notb
lahf
inc
das
jae
push
aad
popa
pop
pusha
mov
add
mov
or
add
test
gs
scas
cmpsb
push
int
dec
add
int3
mov
lock
sbb
hlt
cmc
add
repnz
fistps
mov
lcall
sahf
loopne
es
jmp
dec
scas
enter
adc
mov
fsubr
mov
jl
adc
jns
scas
xchg
clc
inc
repz
inc
pop
movb
cmp
addr16
add
and
xor
dec
int3
test
sub
xor
test
je
pop
mov
add
xchg
push
mov
add
xchg
mov
ss
pushf
inc
in
std
ds
inc
jo
add
push
int
and
or
xor
mov
and
add
jecxz
mov
fldcw
inc
inc
add
enter
out
call
and
outsb
jns,pt
cmp
push
sub
ja
rolb
push
add
rcrl
cli
lock
fnsave
add
xchg
cmpl
call
mov
out
add
mov
xor
pop
clc
arpl
add
add
add
dec
or
inc
add
and
add
addr16
ret
inc
add
jecxz
cmp
cld
cltd
arpl
dec
cmp
in
inc
loopne
jmp
add
pop
sub
push
dec
and
sbb
dec
mov
jb
cmp
out
xor
cmp
nop
mov
sub
lock
and
jle
inc
adc
fstpt
inc
mov
jle
and
rolb
call
jbe
int3
aaa
in
xchg
push
ja
add
or
icebp
adc
add
push
dec
lret
loopne
add
adc
xchg
call
push
nop
inc
mov
ret
push
ret
cwtl
lods
rorl
add
ds
ljmp
adc
mov
add
pop
popf
movsl
xchg
rclb
vmread
lods
mov
ja
or
arpl
pop
pop
cmpb
movsl
jl
add
sbb
out
enter
add
cltd
pop
in
dec
add
movsb
int3
popf
cmp
xchg
cwtl
aas
shlb
iret
xchg
imul
test
dec
out
cwtl
push
add
and
stos
jle
mov
inc
jmp
pop
rcrb
xor
mov
stc
and
mov
and
xchg
xchg
ret
das
xor
add
adc
ja
add
dec
push
cmc
and
pop
push
pop
bound
jle
and
xchg
add
out
je
add
pop
mov
pop
or
inc
xor
repnz
lea
sbb
aas
inc
push
add
adcl
fisubs
jl
mov
pop
dec
mov
mov
int3
rolb
mov
and
pop
imul
insb
mov
jb
ret
mov
jg
adc
or
xchg
test
in
jae
fdiv
int3
inc
lds
hlt
inc
inc
stc
in
aam
aam
dec
test
fmuls
cld
sub
mov
nop
xchg
scas
incb
add
inc
sar
add
jbe
das
call
negb
add
cmp
push
daa
cmp
pop
jno
push
mov
mov
dec
rolb
cmp
outsb
mov
push
adc
add
mov
sub
lods
in
add
pop
ja
movsl
pop
xchg
and
jg
nop
cmp
xor
add
sub
dec
cmp
mov
and
add
and
rcr
mov
popf
fwait
ret
add
lds
test
xchg
add
lods
push
shrl
mov
xor
add
lret
add
adcl
add
loop
mov
adc
lahf
inc
inc
pop
push
repnz
mov
sar
dec
mov
sub
xchg
adc
mov
and
xchg
mov
loope
pop
xchg
mov
clc
jecxz
lods
xor
sbb
dec
and
jae
sub
mov
add
setbe
insb
clc
inc
imul
fnstenv
xor
pop
mov
in
xchg
mov
jp
lcall
mov
or
cmp
stos
pop
push
cmc
movsl
mov
pop
pop
add
add
imul
xlat
lret
mov
pop
mov
and
push
vmovq
adc
out
xchg
ret
add
daa
adc
add
ds
into
lods
mov
or
inc
scas
pushf
push
fistps
out
js
add
mov
loopne
xchg
mov
lret
mov
add
pop
int
scas
fstp
test
aad
orl
mov
cmp
aaa
cmp
sbbb
int3
pusha
dec
jl
jb
add
mov
flds
jne
shll
sarl
in
adc
pushf
add
and
inc
call
repnz
movq
popa
mov
cwtl
jl
cmpsb
rcll
jne
add
xchg
pushl
add
call
adc
add
dec
ljmp
repnz
xor
pop
sbbb
aas
pop
popl
outsb
or
mov
call
mov
xchg
sbb
sbb
inc
jmp
fidivrl
repnz
add
out
pop
notb
sbb
movsl
test
add
scas
mov
jle
pop
notl
inc
out
sub
pop
and
cld
popf
jmp
sub
or
call
int3
filds
gs
sbbb
fwait
fimull
sbb
aam
outsl
jnp
add
dec
sbb
cmp
cmpsb
mov
mov
pop
add
scas
lods
loopne
faddl
fs
dec
xchg
rcrb
fwait
movd
sub
add
insl
inc
fsubs
loop
mov
dec
pop
call
xor
in
mov
rcr
pop
lahf
mov
or
sbb
push
xor
clc
fbstp
pop
jle
pop
mov
test
inc
loope
inc
andl
xchg
add
pop
xchg
arpl
ret
rcr
adc
sbb
add
cmpl
pop
dec
add
cwtl
pop
jbe
leave
adc
clc
aam
arpl
lods
movsb
test
loop
jne
js
mov
add
lret
es
xchg
inc
mov
loope
sahf
adc
add
sbb
inc
sub
inc
sbb
mov
outsb
xlat
popa
addr16
in
les
jns
push
sbb
nop
lods
mov
test
popa
cli
into
cmp
add
lcall
sbb
mov
cmp
xchg
dec
lret
iret
xor
ret
mov
adc
mov
into
jbe
in
sbb
mov
dec
cmp
call
mov
jmp
sub
jbe
cld
fldl
lds
and
sub
out
pop
ror
ret
pusha
mov
rolb
pop
pop
icebp
lcall
jne
push
mov
out
imul
add
mov
ss
cmp
aas
mov
xor
dec
mov
add
and
mov
mov
add
cmpsb
call
push
and
filds
mov
xor
nop
in
orb
ljmp
loopne
hlt
scas
add
int
imul
cld
sti
mov
adc
dec
jb
sub
mov
or
dec
faddl
mov
jl
fldt
pop
xchg
cmpsl
add
jmp
roll
dec
jbe
cmp
sbb
adc
fwait
jns
sub
int3
add
add
or
test
add
add
or
sbbb
outsl
out
cmp
cmp
add
lret
add
test
int3
lcall
mov
clc
movsl
je
add
push
cld
cmp
sti
and
fisubrs
lds
ret
pop
lods
outsl
call
xor
mov
add
jno
rolb
fnstcw
std
loopne
add
setp
fdivrs
lods
repnz
xchg
addr16
sbb
xorl
cmp
push
mov
push
lea
xor
loopne
fiadds
jbe
fsts
shl
imul
adc
cld
ret
jl
add
test
mov
add
cltd
loop
add
into
xchg
xorl
pusha
add
xchg
sbb
gs
add
xor
stos
ffreep
sahf
xor
add
add
sub
stc
add
rcll
xor
hlt
mov
emms
leave
mov
mov
and
aam
cmp
jbe
sbb
mov
stc
das
or
stos
enter
adc
jle
fs
shl
add
jge
dec
scas
ror
addb
pop
vmaxpd
aad
stos
in
pop
nop
or
testl
movsl
mov
push
popa
sahf
bound
rorb
add
imul
push
xchg
jge
and
push
inc
in
sbb
pop
in
mov
test
xchg
sbb
xchg
add
add
adc
lods
add
cmp
jp
sbb
and
call
rorb
inc
cltd
data16
xchg
stos
jg
add
movsb
arpl
pop
cld
push
xor
push
lock
aaa
fwait
xor
loopne
add
cmpl
jg
adc
inc
push
add
cltd
lea
insb
sahf
rcl
add
pop
xchg
add
adc
insl
addl
stos
push
add
jno
cwtl
cmovno
add
mov
sub
jp
add
xchg
push
jo
imul
mov
pop
xor
cs
scas
push
adc
xor
dec
xchg
aam
rcll
arpl
push
xchg
pushf
aad
add
in
xor
xor
mov
inc
jno
rcl
xor
jmp
and
std
data16
ret
sbb
add
std
rorb
xchg
add
clc
shll
fdivr
jge
add
sbb
aad
add
xchg
in
xor
inc
add
shll
mov
neg
loopne
push
pop
in
mov
xchg
dec
or
push
pop
les
jo
pop
mov
sbb
dec
popa
add
test
scas
add
push
loope
insb
sbb
loop
add
adc
cwtl
fyl2xp1
cmp
fsubp
cmp
push
loopne
mov
imul
add
mov
push
add
ja
popa
dec
mov
pop
jae
jo
add
fsubl
push
or
sti
add
xchg
push
int
out
test
push
pop
pop
inc
and
dec
xchg
add
mov
lods
add
sbb
add
popf
adcb
add
in
movsl
sub
dec
mov
add
outsl
jns
inc
rcrb
jecxz
cld
and
outsl
mov
push
add
sbb
cs
aas
rolb
cmpsb
xlat
xor
dec
or
sti
aas
push
adcb
hlt
cltd
cmp
lea
add
arpl
inc
andb
add
insb
jne
cwtl
orb
and
xorb
repz
lahf
iret
or
xchg
dec
orb
push
mov
test
cmp
xor
addr16
pop
cwtl
popf
pop
cmp
data16
loopne
jo
sysexit
add
std
enter
ficoml
xchg
jmp
lds
pop
and
ficoms
lea
jmp
test
leave
outsl
add
jnp
repnz
lock
addl
add
fmull
mov
into
iret
das
add
sbb
in
sbb
ja
lock
inc
add
incl
sti
mov
ds
sub
outsb
adcb
pop
add
lods
push
sbb
cmp
mov
push
inc
add
push
lcall
jns
xchg
pop
inc
cmp
add
mov
ss
pop
hlt
cli
repnz
xchg
std
lea
add
faddl
xor
popf
neg
add
icebp
lock
and
dec
jbe
test
data16
dec
ja
in
vmread
jle
adc
mov
sbb
rolb
xchg
movd
jecxz
mov
stos
ds
mov
mov
lods
push
insb
sbbl
fldln2
movsl
fdivrs
ret
add
jnp
jle
sahf
test
loopne
sub
fstp
dec
daa
sub
push
cld
je
add
xchg
mov
cmpsl
dec
lahf
sbb
pop
xor
loopne
sub
mov
mov
icebp
fucomi
xor
xor
lcall
adc
add
iret
lock
aas
jo
add
cmp
sahf
or
sbb
not
sbb
add
fidivrl
push
lock
mov
dec
rolb
cmp
ss
jns
add
scas
test
adc
or
shl
repnz
faddl
jae
add
mov
ds
andb
icebp
ret
in
pop
add
xor
mov
bound
aaa
jbe
inc
add
ret
push
push
mov
xchg
dec
add
pop
shrl
xor
sbb
clc
stos
scas
mov
add
iret
shlb
inc
inc
push
testl
add
add
loopne
push
out
ja
insb
add
push
imul
out
pop
popw
sbb
nop
mov
or
mov
cwtl
xchg
cmpsl
fadds
mov
lods
mov
pop
and
pop
lahf
std
mov
das
mov
nop
inc
cli
scas
mov
call
pop
lret
add
inc
push
lods
mov
imul
int3
add
mov
xchg
pop
add
adc
jo
jle
cli
xor
std
sbb
jmp
add
jl
add
movb
push
xor
and
mov
mov
inc
add
jo
inc
xor
xchg
add
je
pop
mov
outsl
add
adc
jmp
cmp
in
mov
xchg
lds
enter
popf
call
push
andl
push
repnz
add
sbb
fwait
hlt
loop
add
cmp
in
add
jnp
fsubp
adc
inc
cmp
aad
pop
call
push
lods
in
dec
cmp
stos
pusha
nop
loop
ror
pop
sbb
xchg
add
push
adc
add
xor
add
in
mov
cwtl
iret
xor
mov
pop
jge
mov
jecxz
sbb
out
add
jp
loop
fcoml
add
movsl
pop
daa
aas
jge
repnz
jmp
clc
jge
add
ss
aad
adc
add
mov
test
cmp
adc
adc
adc
fstpt
and
jl
iret
add
shl
icebp
adc
incb
add
jo
mov
rorb
jle
add
push
inc
ror
test
sub
adc
bound
mov
rcl
or
and
ss
movsl
cmp
adc
lcall
in
cmpsb
sub
pusha
bound
arpl
sub
repz
add
stos
mov
sub
lods
cmpsb
add
into
jnp
js
add
cmpl
cli
sbb
test
sub
lock
popf
xor
jns
shl
cli
stos
ljmp
mov
roll
inc
push
xor
xlat
out
lock
jbe
sbb
xchg
add
movsl
push
hlt
add
adc
iret
xor
push
lea
outsl
das
ret
sub
add
cmc
pusha
lea
mov
add
repz
inc
add
ds
mov
decb
inc
outsb
ja
fisttpll
add
scas
inc
jnp
mov
add
bound
xchg
lret
js
je
add
mov
jb
outsb
xor
subb
nop
les
icebp
and
test
dec
push
bound
push
mov
repnz
int3
add
adc
insb
adc
cmc
push
adc
les
dec
xchg
out
push
inc
or
shll
jl
add
daa
inc
repz
scas
sbb
mov
add
mov
xor
insb
mov
mov
add
or
pop
mov
repz
dec
pop
cwtl
push
mov
shlb
sub
add
sbb
add
test
mov
movsbl
cwtl
lds
add
fsubl
pop
pop
out
inc
or
xchg
jns
add
adc
aaa
cmp
push
neg
push
ret
out
add
mov
add
cld
imul
cmp
data16
push
sub
sub
add
adc
mov
add
sbb
dec
dec
sub
iret
insl
add
add
aaa
adc
mov
testl
lods
pop
jns
add
shll
add
xchg
pop
or
movsb
cmp
mov
add
sub
xchg
adc
into
dec
pop
mov
loop
pop
mov
mov
xchg
in
outsb
out
adc
sarl
dec
cmp
inc
mov
into
push
inc
add
std
or
mov
xor
into
cmp
pop
add
cmp
ret
xchg
mov
popf
add
loopne
sbb
mov
in
sbbl
xchg
push
sbb
mov
orb
add
out
dec
ror
into
mov
add
rcll
repnz
lods
mov
test
jl
add
push
xlat
xor
mov
pop
popf
lret
outsl
lods
hlt
and
inc
jno
inc
pop
cmpsb
rcrb
add
dec
sbb
mov
add
pushl
movsb
cli
in
add
imul
add
mov
mov
insl
jmp
fnstenv
mov
std
add
fistps
in
jmp
out
popa
jo
popf
js
add
pusha
xor
popf
fdivrl
pop
jp
mov
add
jns
cmpsl
cmp
pop
ljmp
jle
aad
add
xor
rorb
add
cltd
sbb
out
sbb
sbb
stc
out
ja
add
in
mov
fnsave
add
add
insl
adc
pop
inc
or
and
outsl
inc
push
add
cmc
mov
lret
out
clc
mov
mov
mov
popa
scas
scas
cmp
loop
icebp
inc
inc
nop
pop
inc
or
hlt
jne
inc
mov
pushf
mov
add
loop
xchg
faddl
lret
daa
shrb
leave
imul
pop
fwait
gs
std
add
xchg
adc
xorl
mov
add
adc
sub
sti
fs
push
mov
arpl
jb
fldenv
mov
adc
add
shll
dec
xchg
xchg
loopne
movsb
dec
push
loop
jecxz
cmp
fcmovnbe
jmp
pop
bound
fidivs
mov
add
fmul
adc
loope
mov
push
pop
sbb
push
pop
outsb
lretw
rolb
push
int
adc
cld
clc
cmp
popf
sbbb
push
fwait
or
jbe
adc
mulb
fsub
sti
sub
jmp
add
pop
mov
add
les
add
lcall
fs
sbb
pop
xor
sub
adc
jmp
push
dec
push
jno
lods
je
add
rcrl
push
test
add
dec
push
cwtl
adc
movsb
jle
mov
cmp
jg
data16
xor
cmp
lret
aaa
sbb
leave
rorb
mov
xchg
movsb
add
aam
add
push
mov
push
ss
setge
or
mov
dec
cld
jns
sub
ret
out
pusha
push
lock
mov
insb
xchg
lods
xchg
add
and
add
mov
push
leave
jo
or
jbe
and
jmp
fisttpl
add
push
in
push
add
xchg
outsb
scas
dec
xchg
add
xchg
dec
sahf
iret
mov
adc
jno
sub
orl
add
inc
xor
sub
mov
add
xor
xor
and
cmp
fcoms
iret
loop
add
push
cmc
rorb
xor
or
ror
add
mov
call
xor
cmp
hlt
addb
repnz
add
xorl
inc
inc
mov
sbb
cltd
jae
imul
cmp
pusha
sbb
add
fst
das
sti
enter
fistl
mov
daa
push
call
inc
in
xchg
xorb
std
push
add
lcall
movl
dec
xor
pushf
add
push
pop
cmc
pop
leave
sub
mov
dec
jmp
add
aad
mov
cmpb
mov
mov
repnz
and
cmpsb
xchg
data16
fs
push
and
fstpl
imul
shrb
add
mov
pop
add
stos
scas
and
inc
add
push
fdivs
inc
add
sub
outsl
add
add
test
jns
add
mov
leave
movsb
loop
je
insb
sub
sgdtl
push
int3
addr16
loop
push
push
jnp
adc
div
addl
push
imul
lret
icebp
and
das
cmp
rcll
cmp
leave
adc
xchg
lahf
hlt
xor
jl
insb
testb
orb
mov
lods
mov
add
sub
push
mov
loopne
sbb
das
cmp
rcrb
fs
add
scas
jg
push
cmp
mov
dec
shl
daa
add
push
mov
sbb
adc
add
fdiv
or
dec
adc
loop
int3
mov
cmpsl
and
jp
arpl
mov
pop
add
popa
popf
jnp
jp
fcomps
fstpt
andb
sbb
clc
cmpl
arpl
int
pop
add
shr
xchg
jge
jnp
and
mov
aam
sbb
add
xchg
fnstenv
popa
adc
outsl
add
loopne
xor
sbb
fcoml
add
sub
sub
mov
mov
add
mov
loop
adc
inc
pop
jp
shll
add
cmpsl
ficoms
pop
push
lret
dec
adc
les
add
mov
cmc
mov
mov
dec
lcall
pop
jae
cmp
dec
adc
dec
add
or
mov
adc
push
call
xchg
xor
push
aas
add
inc
mov
dec
popa
push
out
dec
push
in
or
lret
fldenv
test
aad
pop
lret
add
sahf
xchg
push
outsb
add
dec
lret
mov
int
add
push
scas
mov
hlt
fucomp
enter
dec
lcall
aam
add
into
cmp
add
imull
inc
pop
sub
mov
scas
sbbl
dec
test
andb
stos
sbb
xchg
jne
mov
fwait
sub
call
add
jle
out
aaa
xor
arpl
cli
test
out
or
xchg
add
popa
stc
insb
enter
cwtl
sahf
hlt
xlat
jne
add
testl
std
out
cmp
outsl
sahf
insl
sbb
push
add
push
scas
jle
sbbl
movsl
test
ds
fsubrl
mov
and
insb
pop
rorb
out
aaa
mov
shlb
gs
jl
pop
push
mov
pop
inc
sahf
in
lcall
rorb
aas
fnstenv
not
test
data16
aam
pushf
loop
mov
xor
test
and
xchg
movb
adc
mov
popl
loope
popf
push
arpl
nop
sbb
add
dec
lret
outsl
ffree
mov
jnp
pop
sar
mov
pusha
clc
sbb
fadds
xlat
inc
jne
sub
fldcw
cmp
ret
or
orb
jb
dec
mov
in
or
ret
add
mov
dec
sub
das
jne
ja
push
jns
sarb
pop
aas
xor
add
aad
mov
lock
add
pusha
ret
rcll
pop
sbb
xchg
add
stos
pop
pop
pop
rclb
push
inc
add
ljmp
push
add
fldenv
push
add
mov
sub
xlat
addb
sbb
adc
insb
add
dec
test
inc
in
ja
mov
mov
xor
loop
mov
add
and
mov
add
sbbl
mov
and
add
pop
adc
stos
lods
add
or
sarb
add
int3
lret
adc
adc
jne
push
mov
add
stc
cmp
loope
push
ljmp
add
std
adcl
push
and
jo
mov
add
pop
xor
mov
sub
push
ja
add
push
add
hlt
sub
push
inc
or
sub
out
ficoms
dec
aad
pop
add
inc
adc
add
xchg
adc
cmp
lock
jmp
cmp
or
pop
shl
nop
andl
add
sub
faddl
adc
test
xor
std
loop
pop
fs
repnz
sbb
mov
push
mov
call
jno
hlt
jge
mov
mov
sub
pop
aas
push
add
adc
out
or
push
inc
repz
loop
mov
mov
mov
add
or
add
xor
push
mov
inc
push
mov
add
or
sahf
mov
sub
cmpl
fcmovu
xor
add
cmp
dec
push
cmp
jge
aas
test
int
add
push
jo
add
stc
pop
iret
pop
jp
inc
add
push
ret
dec
repz
lock
loopne
add
lds
roll
xor
call
int3
icebp
jnp
dec
aaa
jmp
ret
pushf
into
out
cmpsl
and
push
sub
adc
cmp
cltd
cwtl
add
insb
push
divb
add
gs
mov
add
xor
or
add
mov
ljmp
and
lahf
outsb
cmp
test
das
sub
xor
sub
cmp
mov
daa
add
lahf
adc
in
sbbb
mov
arpl
push
sub
inc
dec
loop
pop
outsl
add
mov
push
sub
inc
add
or
in
sarl
stos
mov
cld
and
subb
mov
iret
mov
scas
mov
jecxz
out
jno,pt
lock
cmpb
inc
mov
push
nop
push
adc
ror
or
add
xchg
cmp
pop
add
pop
aaa
dec
aam
jge
dec
pop
dec
add
mov
lods
lock
mov
clc
out
popf
cmp
cmp
mov
sub
add
pop
adc
incb
jo
cmp
xchg
and
and
aas
push
ret
add
adc
js
aaa
inc
enter
xchg
sbb
jg
xchg
dec
mov
repnz
and
das
out
std
pop
xchg
add
incl
rcrb
movsl
add
jb
jbe
jg
cmp
call
pop
adc
push
jmp
ljmp
add
stc
xchg
fiaddl
jb
psrlq
out
loope
in
aad
add
stc
lock
add
inc
jmp
cltd
mov
cmp
cmp
inc
xchg
xor
inc
add
cld
sahf
faddl
test
movb
mov
out
imull
int
scas
sbbb
lea
and
pushf
add
pop
out
data16
shlb
add
mov
xchg
sub
add
dec
fcomps
fst
jge
out
outsl
xlat
nop
jns
pusha
pop
popa
push
add
mov
cmpsb
dec
add
pop
dec
inc
sbb
mov
add
jns
out
add
and
call
add
pop
fisubs
add
in
pop
push
call
push
xchg
out
and
add
lret
mov
jl
hlt
add
jns
mov
xchg
inc
sub
into
pop
push
adc
pop
imul
jg
ja
fadds
sbb
mov
adc
cmp
inc
cmp
lods
aas
add
add
push
mov
sub
shl
cmp
push
pusha
jb
add
js
or
cmpsb
test
fsubs
ja
add
adc
fnsave
add
nop
pop
in
test
and
dec
xchg
in
leave
clc
cmp
fcomps
mov
push
pop
mov
addr16
cmp
add
dec
inc
dec
and
xlat
add
sub
mov
test
scas
ljmp
jae
addb
sbbb
popa
sub
scas
cmpsb
add
imul
arpl
fnstcw
adcl
in
pop
xchg
mov
adc
mov
popa
fistpl
out
into
outsl
in
add
mov
mov
in
fildl
stos
push
xor
jge
mov
mov
pusha
ss
mov
dec
fisttpll
mov
cmp
cmpsl
shll
out
add
add
std
adc
out
pop
add
push
hlt
cld
mov
sidtl
pop
push
push
add
incl
or
lods
stos
aam
lcall
daa
lahf
shr
add
dec
std
push
movsl
mov
inc
je
mov
pop
adc
xlat
xchg
sbb
lods
dec
add
sahf
inc
push
push
inc
sub
inc
addr16
mov
and
movsb
roll
adcl
loopne
inc
mov
out
jge
jl
mov
pop
js
add
jb
ficoml
repz
mov
inc
enter
dec
add
sbb
lea
outsl
jae
hlt
xchg
inc
or
int3
cmp
in
push
sbb
mov
test
test
add
sub
daa
dec
or
jnp
clc
xchg
das
bound
fs
insl
xchg
loop
push
cmp
add
roll
shrb
jle
bound
loop
xchg
pop
add
sub
adc
scas
add
add
je
sbb
lcall
jns
cli
add
push
shrb
add
mov
mov
lods
add
iret
sbb
add
cmp
fwait
andb
xor
daa
testb
pop
and
sub
xorb
push
aad
xor
pop
adc
nop
adc
loope
add
dec
pop
cmp
jns
mov
or
pop
add
lock
addr16
add
hlt
mov
add
in
rcl
xchg
pop
add
adc
push
or
jae
ss
out
dec
dec
xchg
out
inc
mov
lock
jmp
mov
dec
fdivrl
adc
cmp
push
clc
mov
pop
xor
xchg
add
divl
repz
add
movsl
or
das
loop
add
push
mov
cmc
icebp
push
cld
or
aaa
test
push
mov
xchg
inc
and
push
or
cmpsl
les
mov
aas
and
add
cmp
dec
sbb
lcall
fmul
mov
add
mov
fiaddl
adc
xor
sub
filds
sbb
dec
sarb
jg
pusha
ret
push
jo
lock
imul
mov
xor
in
push
mov
mov
add
cmp
jo
dec
fstpl
add
mov
xor
mov
lock
and
ds
xchg
add
in
rolb
sbb
jl
enter
push
cmpsb
add
adc
pop
fstpl
loop
dec
sbb
inc
adcb
push
pop
repnz
cwtl
sbb
push
std
pushf
jmp
or
jmp
xor
or
add
xor
mov
push
inc
cli
push
xor
cld
mov
lahf
jge
adc
iret
xor
push
lods
xor
xchg
dec
add
push
mov
shll
or
add
mov
push
mov
cli
daa
cmpl
mov
adc
mov
pop
das
mov
inc
repnz
idivb
jle
lods
mov
decb
jl
mov
pop
mov
or
out
or
ret
lret
cmp
and
cltd
mov
xchg
cmp
add
jle
or
fsubr
fiadds
jns
xor
in
mov
mov
out
jb
leave
int
pop
lods
lods
add
mov
add
fidivl
ss
outsb
jno
add
pusha
enter
bound
call
rorl
add
fwait
es
pop
shll
add
shlb
inc
or
xlat
jmp
popl
les
cmp
lahf
add
ret
and
les
loop
jns
xor
mov
xor
add
pop
sbb
dec
add
hlt
clc
jmp
pop
gs
addl
mov
push
push
movsb
aas
add
stc
cmp
mov
rcl
loopne
in
push
push
imul
stos
xor
sahf
add
pop
outsb
add
jb
add
mov
dec
lock
fwait
xor
jb
xchg
aam
les
or
jns
pop
push
mov
jo
add
mov
dec
out
jno
or
sbbb
lea
cmp
mov
fldenv
sub
cmp
jns
aad
int3
out
push
xor
testb
cs
mov
stos
cmp
dec
nop
or
jecxz
roll
aas
jnp
mov
add
inc
loopne
or
cmp
stos
adc
rcll
push
andl
subb
inc
add
dec
icebp
ljmp
add
cmpsb
jno
mov
je
std
faddl
std
xchg
nop
repnz
stos
aas
dec
mov
add
dec
mov
xchg
cmpsl
rolb
loope
adc
das
cmpb
imul
clc
add
fstps
xorb
dec
inc
push
and
mov
ds
negl
in
mov
imul
add
push
sti
push
outsl
nop
add
call
jmp
mov
cmp
je
ret
xchg
xlat
and
push
loop
xor
add
fcomp
sbb
mov
xor
cmpsl
addl
cli
xor
push
adc
and
icebp
mov
jb
add
imull
jp
add
push
std
cmpsl
add
shrb
inc
jl
je
inc
add
out
push
test
sbb
pop
dec
mov
xor
mov
or
mov
add
mov
ljmp
pop
arpl
add
xor
add
fmuls
jge
iret
hlt
call
inc
repz
aad
add
mov
jmp
aam
in
pop
pop
fwait
add
mov
mov
adc
jnp
cmp
add
sahf
pop
pop
sbb
out
dec
adc
imul
cmc
cmpsb
pmullw
repz
dec
inc
add
mov
cmpsb
pusha
pop
fdivr
je
test
push
cmp
add
fldt
lahf
cmc
or
xchg
ss
jg
pop
jae
gs
mov
scas
jp
sbb
adc
or
sub
lcall
iret
call
je
rcll
sbb
sbb
and
mov
lret
sub
cltd
jno
call
ss
fwait
bnd
in
dec
scas
xchg
jbe
fcmovu
bound
outsb
andb
inc
or
or
add
bound
jl
cld
dec
into
add
xor
jne
push
testl
mov
lods
push
cmp
adc
inc
xchg
scas
aam
xor
pusha
xchg
mov
or
xchg
out
push
add
inc
inc
push
mov
ljmp
sub
rorl
mov
dec
fwait
lret
lahf
testb
or
push
cmp
paddw
pop
fcomps
mov
pop
sub
nop
aas
mov
andb
cli
sti
fisttps
loop
int
jp
pusha
dec
jle
icebp
and
add
cwtl
xchg
add
stos
pop
dec
scas
jb
dec
pop
add
repnz
adc
jmp
jne
pusha
and
xchg
pop
stos
push
fistpl
pop
je
negb
push
popf
cld
call
fistl
pop
or
lods
mov
jns
dec
pop
adc
and
sbb
mov
cmp
xchg
sbb
and
lahf
adc
insl
popa
and
test
inc
inc
into
popf
mov
nop
call
in
add
sub
pop
add
sbb
outsb
out
sti
sbb
aad
inc
lcall
sbb
ljmp
mov
inc
xchg
jbe
je
add
push
stos
repnz
je
add
fwait
mov
jmp
xor
outsl
jno
add
or
sbb
xchg
je
aad
push
fdivl
jo
mov
aas
fisubl
in
add
and
add
rclb
adc
cwtl
add
mov
incl
inc
lret
pop
xchg
jne
mov
add
out
scas
je
mov
lcall
jbe
fadd
dec
jne
mov
xchg
cli
mov
enter
push
xchg
inc
jnp
mov
movb
mov
sar
shrl
lds
jg
and
add
je
mov
shll
xor
sbb
inc
test
cltd
cmp
mov
incb
aaa
jno
popa
pop
add
mov
cmp
pop
pusha
dec
fidivrs
imul
push
sub
inc
jnp
mov
mov
push
dec
and
push
push
jb
shl
push
iret
enter
out
sti
jne
aaa
mov
test
push
xor
and
mov
add
lock
pop
adc
add
push
add
in
shll
cmp
mov
add
jp
xor
push
dec
pop
add
adc
js
movl
mov
xor
xor
ds
xchg
cltd
dec
jmp
jnp
jae
add
cmp
push
or
rolb
xor
mov
xchg
xor
std
add
test
stos
jno
cmp
lds
lret
push
dec
shl
arpl
add
dec
xor
or
idivl
mov
loope
fldl
es
loop
shlb
add
push
in
pop
add
add
lret
cmp
stos
dec
add
or
sub
mov
add
ret
mov
inc
mov
push
dec
aas
push
div
add
js
sysret
xor
mov
add
mov
xchg
lahf
sub
jmp
aad
or
inc
adc
mov
lds
filds
es
divb
call
inc
shrb
test
in
cltd
push
mov
xchg
cmp
fstpl
add
popl
clc
xor
jo
add
or
mov
xchg
pop
shlb
pop
pop
loopne
add
jne
and
sahf
sbb
add
or
mov
mov
das
sbb
pop
push
outsb
add
rorl
test
lods
pop
ret
cmp
dec
jae
xor
jmp
aas
mov
in
and
loopne
icebp
jecxz
inc
pop
inc
in
push
pop
add
jmp
enter
jge
add
and
lea
push
xchg
adc
sti
mov
or
adc
inc
or
cmpsb
adc
pusha
lea
dec
stos
out
inc
sbb
mov
sbbb
add
addr16
or
lret
add
and
mov
fcom
repz
mov
in
movsb
push
pusha
jmp
cmpsl
xchg
add
and
push
pop
add
cmp
mov
sbb
in
fistpll
testb
test
push
sub
add
inc
adc
mov
jp
clc
dec
cmp
jle
mov
call
cmc
sbb
pusha
xchg
add
jno
add
xorb
fsubrl
in
inc
add
xor
gs
mov
ret
xlat
cmpsl
aaa
sub
ljmp
or
inc
pusha
add
std
aas
dec
jg
pop
rcr
les
fnstsw
icebp
add
push
cltd
cmp
mov
in
and
mov
add
rclb
lcall
sahf
push
pop
mov
vmulss
mov
inc
pop
cld
jnp
sbb
add
rcl
mov
popa
test
pop
jnp
pop
fbstp
and
lods
jg
test
pop
pop
mov
sahf
add
lcall
mov
lock
addl
jbe
inc
in
gs
adc
add
mov
push
add
imul
mov
and
add
ficoml
mov
scas
imul
or
add
sbb
pop
mov
sti
xor
pop
add
js
jno
fwait
add
mov
loopne
jp
bound
loop
add
in
xchg
testb
push
pop
inc
enter
add
pop
pop
or
xchg
cmpb
inc
scas
mov
daa
iret
and
cli
pop
add
add
out
adc
add
pop
clc
fcompl
jno
repnz
test
jne
lock
push
mov
mov
lea
push
cmp
mov
insl
or
in
sbb
andb
sbb
push
mov
sbb
cmc
pusha
cmp
inc
add
adc
inc
bound
les
push
sub
repz
pop
sbb
jae
mov
les
pop
sbb
cmp
jae
insl
push
inc
push
test
es
decb
mov
jmp
add
xchg
pop
xor
test
out
lds
in
cltd
and
xlat
add
pop
rorb
add
lea
dec
loop
sub
shrl
dec
mov
inc
and
xchg
add
and
add
add
cmp
mov
add
lcall
mov
xor
add
mov
lods
imul
mov
std
in
inc
push
je
xchg
cmp
cmp
test
leave
das
pusha
push
sub
ficomps
xchg
clc
xchg
adcb
sbb
sbb
dec
jg
add
shl
aas
or
xor
and
rcll
pop
sbbl
push
lcall
cmp
jecxz
sbb
jbe
add
stc
iret
cs
jb
roll
push
push
nop
fistps
es
adc
jns
add
mov
sbbb
pop
shlb
pop
hlt
shlb
inc
lgdtl
clc
xchg
pusha
lock
dec
sti
push
xor
or
push
jp
cs
xor
mov
out
mov
aam
ret
mov
cmp
push
rolb
adc
clc
gs
enter
or
int
cmp
add
cmp
pop
jb
ret
lret
add
xchg
add
cwtl
js
jecxz
add
insl
xlat
xor
int
pop
out
addr16
jns
and
xor
add
push
iret
pop
scas
leave
mov
sbb
mov
adc
aas
inc
fidivl
sti
mov
add
movsb
push
ret
popa
and
sti
add
mov
jl
rcll
push
sbb
or
add
mov
sbb
repz
fnstsw
jecxz
mov
push
in
mov
mov
mov
lock
movsb
inc
addr16
sbb
mov
loope
clc
mov
add
xchg
test
sbb
push
testl
mov
inc
sbb
insl
ljmp
mov
loopne
inc
dec
out
add
aad
test
insl
js
add
lret
add
or
movsb
stos
adc
mov
into
xor
adc
test
notb
ja
sarl
pop
pop
stos
scas
add
iret
push
andb
loopne
add
push
pop
add
or
inc
shrl
insl
cli
add
outsl
and
dec
and
loopne
xchg
repnz
dec
cmp
or
fcomi
cli
pop
sbb
lahf
insb
filds
clc
insl
pop
add
in
enter
xlat
dec
add
sbb
das
hlt
push
test
fmuls
adc
loop
enter
int3
in
cwtl
test
shrb
mov
add
fs
mov
syscall
pop
std
sbbl
inc
adc
or
pop
je
cmpsb
cwtl
adcl
push
std
bnd
xorb
rorl
out
xlat
cmc
xlat
adcb
aam
xchg
add
push
mov
push
mov
add
ljmp
lods
xor
nop
lods
add
outsl
push
out
aam
add
sbb
es
aaa
ds
cmpsl
subl
fadds
mov
pop
nop
inc
pop
popf
mov
pop
add
xchg
orb
dec
loope
jns
pop
or
fwait
arpl
mov
sbb
das
inc
pushf
mov
adc
fcoms
js
jle
add
cmp
outsl
push
and
sub
jge
je
sbb
xchg
add
cmp
add
inc
cmp
sbb
jle
xchg
aas
lods
test
xchg
and
add
movsl
xchg
pushf
mov
addr16
cmpsl
fimull
loopne
sub
lock
lods
add
pushf
mov
jb
sbb
cmovg
adc
popf
mov
mov
iret
fdivr
hlt
dec
add
popa
jmp
mov
ret
lcall
in
jg
cmp
or
ja
add
push
out
jno
subb
std
mov
pusha
hlt
push
pop
add
xor
jae
jne
movsl
mov
loopne
subl
les
inc
rcrb
lods
xchg
subb
jmp
repnz
dec
sar
mov
in
add
scas
clc
xchg
add
stc
and
cmp
rcll
inc
fucomi
push
mov
movsl
push
adc
call
sbb
adc
inc
stos
filds
mov
lret
push
shrb
sbb
pop
push
jg
les
fnstcw
adc
mov
add
push
fnsave
pop
mov
add
repz
jge
loopne
outsl
add
dec
ret
pop
sbb
pushf
bound
insl
dec
xor
add
daa
scas
push
out
leave
add
mov
pop
lcall
in
jne
add
dec
orl
jae
je
add
out
gs
into
mov
cmp
ljmp
in
jmp
jecxz
orl
stc
add
hlt
in
cltd
mov
push
mov
push
or
sbb
aad
add
inc
into
insl
mov
mov
das
inc
jle
mov
jmp
xor
setbe
sbb
pop
sub
rorb
test
lcall
imul
sbb
and
and
fadds
inc
loopne
mov
add
lret
testb
stos
mov
int3
stc
pusha
or
add
bound
push
or
icebp
dec
add
mov
dec
adc
add
scas
loope
adc
jae
adc
int3
dec
cmp
insb
fiadds
fsubrs
add
add
dec
xor
add
push
mov
add
cs
lea
adc
add
mov
inc
add
push
popf
lock
aad
js
jecxz
push
cmp
das
andb
jo
jle
outsb
cli
scas
mov
imul
dec
loopne
stos
dec
add
sbb
jo
xchg
jge
adc
in
mov
xchg
fcmovb
jno
sti
mov
sub
call
and
loopne
jle
or
fimuls
inc
adc
scas
pushf
loopne
clc
push
xchg
or
adc
inc
mov
add
stc
xchg
divb
xchg
rcl
jb
add
lds
add
out
shrl
mov
ficoms
adc
outsl
add
jecxz
jns
addb
push
add
imul
popf
push
mov
add
rorl
add
and
cmp
fs
arpl
repnz
mov
mov
cmpsb
add
jo
add
push
cli
addb
cmp
enter
and
arpl
add
xor
cmpsl
sub
add
jne
stos
movsb
or
pop
xchg
stc
inc
sbbl
lods
outsl
les
or
das
xor
add
jge
add
xchg
lock
xor
mov
xchg
int
scas
fadd
sbbl
leave
inc
dec
out
xchg
shlb
add
scas
adc
sbb
sbb
jno
sbbb
cmp
push
orl
mov
rorb
mov
pushf
dec
or
mov
add
fnstenv
data16
mov
test
add
scas
int3
lahf
mov
and
enter
into
and
add
in
mov
push
movsb
cmpsl
mov
and
or
push
xor
xor
in
push
leave
or
call
add
ficoml
lahf
sbb
orl
or
arpl
lret
adc
xor
add
imul
jge
add
xchg
ljmp
or
test
pusha
into
rcr
jae
push
or
lea
ficoms
stos
bound
mov
fdivl
cltd
cmp
lea
rcrb
fs
xor
adcl
aam
mov
clc
pop
xchg
jo
xor
aad
dec
or
add
loope
dec
sbb
int3
aam
inc
rcrb
add
inc
mov
mov
mov
or
push
roll
lock
mov
int
addl
aas
imul
aaa
mov
push
add
and
pop
in
xchg
cmc
dec
js
out
fsubs
mov
push
xlat
mov
push
mov
test
call
xchg
add
loop
inc
cmp
jl
add
xor
sub
add
or
mov
push
push
cmpsb
shlb
add
sub
pop
pop
pop
jae
push
std
popl
xlat
mov
cmp
and
dec
ss
sbb
rolb
iret
cmp
inc
push
adcl
ss
jmp
loopne
sub
dec
mov
mov
add
cltd
dec
push
cmp
push
mov
sahf
or
inc
cli
mov
bound
or
adcb
cmp
enter
mov
sbb
addr16
mov
cmp
jecxz
add
dec
addl
cmp
insb
add
push
fisttpl
loope
jbe
mov
insl
lock
jl
rclb
pop
sarl
sub
out
add
jmp
adc
sub
fimull
pop
cmp
inc
movsb
in
cmpsb
inc
add
mov
xor
add
pop
out
push
loop
into
jnp
push
xorl
mov
jae
cmp
jae
lcall
inc
sub
lods
ljmp
leave
out
inc
rolb
sti
ds
add
jns
dec
dec
xchg
filds
cmpsl
add
fcompl
mov
scas
clc
and
loop
or
mov
and
dec
flds
arpl
cs
idiv
mov
repz
test
roll
cli
or
inc
repz
add
fisubl
imul
iret
mov
icebp
xor
sahf
or
push
jo
pop
lods
out
jle
cmp
cmc
hlt
lds
push
out
xor
fs
jg
push
pushf
in
xchg
fisttpll
add
sbb
filds
scas
cmc
inc
xor
movsl
push
xchg
sti
pop
sbb
enter
pop
lods
mov
aam
cmc
popf
sarb
testl
loope
jmp
loopne,pt
dec
push
rcll
daa
pusha
popa
pop
add
js
in
or
add
add
lds
call
mov
add
inc
jns
into
ret
cmp
xor
mov
xor
sbb
fsubp
cmpxchg
jmp
inc
movsl
sub
xchg
in
add
or
inc
les
ds
sbb
data16
add
pop
xor
fxam
std
aaa
add
mov
push
pop
rcll
in
and
or
xchg
test
jno
add
iret
xlat
popa
xchg
rclb
test
mov
xchg
mov
cmpsl
xor
es
sub
jle
pop
pop
lahf
add
jl
dec
bound
lcall
push
push
aad
cltd
xor
pushf
mov
lock
add
push
sbb
out
add
xchg
cld
jg
outsb
add
sbb
addr16
subl
add
inc
cltd
cmp
test
ret
mov
or
xchg
cltd
inc
inc
xor
testb
cmpsb
sbb
add
dec
add
shrb
push
push
add
cs
and
add
shll
add
int
lahf
jl
fdivs
lea
dec
stos
je
mov
call
cltd
mov
jns
add
cmpsl
cld
sub
out
imul
add
aad
cmp
incl
and
inc
ljmp
mov
fimull
inc
dec
sahf
xor
shr
cmp
jbe
and
inc
mov
lahf
fnstenv
cmpsb
mov
sbb
jne
add
pop
ret
pop
in
cli
or
hlt
in
lds
sbb
lods
push
jecxz
add
jg
push
inc
outsb
mov
pop
rcrl
add
rcrl
push
inc
xchg
jb
adc
lcall
loopne
stos
sbb
sub
add
and
xor
mov
mov
dec
push
jns
or
call
fidivrs
xlat
dec
push
loopne
je
lds
adc
jmp
add
scas
in
jg
add
stc
pop
fildl
adc
xorb
cmp
dec
add
sbb
sub
pop
das
shr
ss
pusha
fnstenv
pop
mov
andb
add
push
scas
add
adc
add
xor
aas
outsb
add
roll
mov
jo
sub
inc
xor
cltd
jmp
cmp
add
add
fisubs
aad
mov
pop
ror
jg
mov
cmpsl
xchg
dec
lods
shrb
lret
popl
inc
add
fldcw
cwtl
stos
xchg
fiadds
xor
push
adc
push
pop
adc
mov
jno
push
add
push
aad
cld
inc
add
iret
mov
inc
mov
xor
add
imul
insl
add
xor
emms
cld
mov
pusha
xor
mov
pop
mov
bound
pop
out
cmpsb
fmull
mov
and
mov
in
into
add
inc
ret
adc
add
scas
addr16
test
cmp
scas
cmpb
push
sbb
fsts
or
add
xor
repz
mov
addb
imul
and
or
add
inc
mov
es
out
out
stos
dec
push
pop
xchg
adc
pop
aad
jae
jle
pushf
cwtl
mov
shlb
add
cmp
pop
xchg
pusha
adcl
xchg
sbb
push
inc
les
lret
add
sub
into
mov
fdivs
aas
test
jge
pop
add
loopne
add
or
outsb
ficoml
add
cmp
add
inc
add
add
pusha
dec
stos
nop
pop
stos
or
roll
add
sub
xchg
decb
add
jg
loope
pop
add
add
xor
mov
xchg
fildl
lods
jmp
mov
push
dec
cld
ljmp
out
dec
pusha
push
imul
add
xchg
mov
fiaddl
mov
mov
stc
int
sahf
add
out
inc
add
cmpsl
and
pop
pop
dec
add
jp
xor
dec
jae
ucomiss
pop
negl
dec
pop
push
add
scas
jmp
and
lret
in
mov
sub
lcall
lock
cmc
fnstsw
or
imull
sbb
and
jp
add
hlt
or
cmp
push
add
sbb
rcl
addl
test
push
push
pop
fstl
add
gs
pusha
lret
jbe
pop
add
js
in
add
inc
sahf
aam
jns
shrb
lret
inc
pop
mov
add
jle
mov
iret
xchg
rolb
aad
jg
outsl
shll
stc
pop
jne
imul
or
add
nop
cmpsb
xchg
or
lea
mov
notl
out
add
xchg
xor
fcmovnu
xchg
push
jb
cmp
mov
inc
addr16
dec
add
gs
imul
cwtl
mov
ja
mov
sbb
jno
or
bound
mov
mov
add
add
cmp
inc
add
or
adc
fidivrl
cmp
pop
dec
rorl
inc
movl
or
sahf
cwtl
add
fsubl
add
popa
cld
pop
mov
add
and
and
les
or
sbb
push
adc
sub
loope
ret
fwait
add
and
dec
push
rolb
mov
cmc
inc
call
inc
negl
stos
pop
lock
cli
jge
in
shl
jns
add
add
push
icebp
inc
andl
shrl
jns
or
and
call
jle
dec
clc
das
leave
add
aas
sub
xor
xor
or
fstps
adcb
jbe
bound
push
mov
xchg
jb
add
inc
mov
popl
cmp
outsl
add
aam
pop
cs
repnz
jmp
sub
add
xchg
es
and
or
jo
jae
jo
and
add
enter
add
imul
and
or
inc
mov
and
inc
xor
dec
das
sbb
push
sub
xor
insl
adc
mov
push
pop
jge
dec
mov
adc
shll
push
mov
inc
add
bswap
insl
pop
insb
lahf
ror
inc
pop
add
andl
cmp
imul
and
sub
xchg
or
outsl
add
pop
lret
add
dec
xor
add
adcl
pop
inc
addl
loopne
cli
addr16
into
jne
and
jnp
lret
sarb
jo
mov
notb
loop
inc
aam
mov
loope
rol
add
sbb
or
nop
mov
les
mov
xchg
aaa
icebp
pop
add
adc
xchg
pop
cmc
and
xor
fiaddl
lock
clc
xchg
int
pop
insb
add
xor
cmp
jbe
pusha
jp
insl
push
ljmp
cmp
mov
cltd
das
je
aam
stc
fnsave
roll
push
mov
andb
pop
adc
hlt
or
pusha
testb
out
sub
mov
inc
loopne
roll
cmp
js
pop
pop
sub
enter
inc
xchg
ret
xor
cmpsb
and
push
mov
add
xchg
in
sbb
jb
js
mov
xchg
sub
mov
inc
adcb
adc
repz
std
shll
mov
sub
jns
pop
add
pop
lret
jae
jle
in
push
push
pop
cs
in
js
loopne
sub
push
sub
jmp
sbb
mov
pop
jne
mov
jge
or
out
inc
add
mov
jb
push
xor
and
lds
stos
pop
mov
dec
mov
cmp
push
les
xchg
out
jecxz
xor
or
sti
out
icebp
jle
loopne
fwait
add
pushl
ret
add
popa
mov
out
nop
add
ja
sahf
xchg
adc
rcrb
dec
fisttps
ja
add
js
mov
mov
scas
jb
ret
mov
lods
loope
cmp
inc
xorl
aad
cld
nop
mov
jge
pop
inc
lods
rcrb
add
xor
repz
and
fimull
jbe
jo
rcr
jg
aas
add
push
fwait
mov
stc
inc
pop
xchg
rolb
pop
loope
lret
shll
mov
xor
add
fidivrl
repnz
push
jno
mov
fmuls
int3
mov
decb
out
mov
add
cmp
jo
add
lea
outsl
push
nop
pop
push
idivb
nop
mov
sbb
loop
lahf
dec
inc
insb
es
int
incb
addl
testl
scas
mov
add
push
pop
jle
mov
dec
lea
pusha
leave
pop
in
arpl
add
nop
shll
add
sub
add
mov
pusha
mov
and
das
jo
xchg
jl
push
outsb
jnp
add
in
cmp
sub
fsub
jmp
ljmp
lock
jbe
add
cmp
divl
cld
clc
ja
add
add
aaa
add
push
inc
pop
push
sbb
add
jns
inc
dec
rolb
fucom
add
mov
cli
cld
add
jo
mov
adc
add
outsb
sbbl
js
addr16
mov
sub
push
in
jp
adc
mov
pop
fildll
lret
mov
add
add
dec
test
mov
add
pop
mov
outsl
mov
pop
fsubp
sbb
addl
jmp
xor
nop
test
std
loop
repnz
ljmp
push
sbb
or
xor
mov
loop
lds
out
jp
fcmove
lock
add
nop
pop
jmp
push
outsb
mov
push
lock
imul
mov
mov
xor
fwait
push
and
pop
aad
insl
lcall
push
dec
mov
mov
movsl
pop
mov
hlt
pusha
idivl
mov
add
push
outsl
lods
movsl
repz
sub
add
rcrl
add
cmp
ret
mov
rolb
mov
outsb
imul
clc
daa
xor
xchg
or
add
cmp
aas
add
loope
cld
add
jbe
ret
xchg
sub
aaa
add
sbb
fnop
cli
dec
sub
filds
cmc
pusha
add
sub
insb
cwtl
loopne
lock
mov
std
adc
pop
add
inc
popf
cmc
push
dec
subb
add
loopne
jnp
mov
in
add
fwait
xchg
into
xor
mov
push
lods
fldenv
lahf
loopne
sbb
and
testl
leave
lods
xor
inc
push
cmp
loop
mov
and
add
xor
adc
mov
cs
repnz
scas
add
mov
jg
popa
add
push
adc
dec
push
push
pop
fnstenv
mov
dec
movsb
andb
add
xor
sar
jle
jl
out
jnp
lds
aad
add
cmpsb
xor
lock
and
rcll
ljmp
pop
in
push
add
adc
add
cmpsb
data16
cwtl
or
in
xor
subb
jns
jp
les
imul
add
test
and
jle
add
lahf
shll
xchg
add
sbb
jge
add
adc
cmc
mov
jp
in
pop
cld
btc
xlat
std
loopne
mov
push
pop
decb
movsl
mov
add
jge
nop
add
xchg
dec
add
lds
pop
movb
or
lret
incl
add
mull
mov
pusha
in
add
subb
inc
pushl
into
jno
das
movsl
adc
push
add
xchg
test
bound
gs
add
or
leave
ja
add
insl
int
cmpb
jb
stos
ljmp
jae
add
inc
iret
das
ss
test
call
sub
negl
xchg
cld
add
rol
dec
mov
lods
xchg
mov
roll
pop
sbb
stos
mov
inc
loopne
je
in
add
push
adc
sbb
xchg
mov
fimuls
std
movsl
in
add
lods
adc
push
pop
out
sbb
iret
andb
popf
fwait
incb
add
fmuls
dec
lock
add
push
mov
inc
movsb
or
cwtl
lods
add
or
cmpb
inc
testl
sbb
enter
add
pop
xor
add
adc
fnsave
cwtl
mov
cmp
mov
mov
dec
fldt
sbb
lds
dec
push
fldt
loopne
mov
inc
or
out
and
iret
ja
mov
jns
jnp
add
add
and
pop
pushf
jmp
mov
jne
xlat
add
push
add
mov
add
cmpl
mov
jns
sbb
xor
add
sub
int
jl
les
sahf
or
cmc
aam
sbb
loope
lea
cmp
imul
dec
fdivl
cwtl
test
push
add
inc
jecxz
xor
jo
ret
out
sub
sub
cmc
rorb
rcrb
inc
inc
ss
jae
arpl
iret
or
push
lock
jno
add
andl
shll
or
jo
scas
inc
cli
insl
sub
mov
rclb
pop
push
sbb
rclb
add
jmp
adc
out
popf
cmp
xchg
dec
jmp
pop
fucomi
or
mov
lods
call
gs
adc
dec
add
mov
push
sbb
cmp
sti
dec
push
adc
test
fcmove
or
mov
mov
and
sahf
mov
lock
dec
xchg
into
jl
sbb
cmp
inc
pop
mov
cmp
rolb
outsb
loop
lods
pop
negb
insl
add
inc
adcl
cmp
test
mov
xor
fwait
nop
xor
stos
aad
repnz
cmp
mov
call
jne
add
iret
mov
mov
push
add
test
aad
out
and
fidivl
pushf
pop
adc
sbb
inc
xchg
jae
hlt
and
sub
fildll
lret
jge
push
mov
das
fimuls
lcall
mov
add
cmpsb
pop
cmpsl
push
sub
xor
pop
add
mov
cmpsb
add
popa
mov
add
stc
addl
sbb
add
idiv
pop
bound
add
pushf
scas
into
add
push
add
je
in
lret
icebp
add
xor
mov
xor
mov
out
pop
sub
xor
gs
xchg
xchg
xchg
loop
mov
fistps
js
ss
add
imul
leave
push
mov
cmp
push
xor
pop
push
push
ss
push
add
clc
push
mov
add
lea
jle
pop
or
lods
imul
pop
mov
loop
add
dec
sbb
cli
movl
inc
decl
iret
pop
popa
mov
sub
nop
aad
push
push
loopne
insl
pop
or
cwtl
or
pop
mov
add
pop
in
add
stos
mov
cltd
sub
adc
data16
mov
ja
pop
js
stc
jle
std
push
add
out
push
mov
insl
sub
lret
add
mov
rolb
add
fiaddl
mov
data16
and
je
add
insl
inc
push
pop
mov
or
and
sub
jae
mov
xchg
or
pusha
es
add
lret
xchg
mov
cld
dec
jnp
sub
test
ret
mov
inc
inc
ja
arpl
stos
pop
xor
jmp
pusha
jno
mov
test
add
inc
jb
loopne
les
repz
adc
mov
and
clc
mov
std
and
xor
lcall
sbb
pop
adc
ficomps
cmp
xchg
jnp
shl
dec
add
leave
test
dec
mov
xchg
mov
adc
add
call
and
or
test
add
jge
cmp
call
push
movsl
rorb
add
jmp
sub
arpl
pushf
pop
xor
in
mov
add
inc
jno
cmp
outsb
arpl
push
mov
dec
pop
iret
add
insl
into
add
sub
lods
mov
in
in
pop
stos
dec
mov
inc
xchg
push
push
cli
inc
movsl
inc
lock
or
dec
shll
dec
pop
stos
add
push
and
push
mov
add
data16
add
mov
loopne
mov
nop
fnsave
or
cld
add
jle
test
pop
push
fists
push
insl
add
ret
sbbl
repnz
xor
sbb
rorl
orl
fwait
arpl
jo
add
sbb
sbb
dec
jno
lock
jb
xor
xor
repz
add
push
insb
add
push
xor
lods
mov
add
push
xor
cltd
or
lods
out
mov
std
sub
fstpt
or
push
push
popf
into
icebp
hlt
loope
jg
add
push
inc
aaa
inc
int3
shlb
pusha
sbb
ja
inc
push
sbb
lock
scas
add
notb
jo
inc
cli
ds
or
and
xchg
jae
cmc
jmp
dec
dec
push
mov
js
sbb
add
fucomi
iret
add
sub
negl
lcall
push
out
pop
push
insb
or
and
jle
push
cmpb
sub
jae
push
add
inc
loope
dec
jl
rcl
nop
aaa
xor
or
pop
jmp
fisubrs
addb
inc
fst
cmc
test
test
pop
dec
dec
mov
add
repnz
push
inc
mov
xchg
orb
dec
rclb
rcr
xor
mov
punpckhdq
dec
xchg
loopne
ret
stc
add
dec
jl
jne
add
hlt
loopne
jns
mov
sbb
popl
aam
in
cmp
add
pop
fstpl
cltd
push
jmp
fcomp
and
mov
sbb
add
pop
ret
push
shll
iret
mov
xchg
cs
fwait
jb
popa
xor
add
dec
test
mov
lea
xchg
add
inc
fucomi
jecxz
sub
add
cmp
xchg
add
stos
movsbl
cmp
add
dec
jnp
cmp
mov
inc
add
addl
out
sbb
pop
loope
mov
xor
mov
dec
popa
add
jnp
or
mov
add
repz
pop
out
sub
je
lea
mov
lock
ror
mov
clc
add
insl
xchg
lcall
cwtl
dec
add
mov
jge
or
cmp
adcb
inc
ss
add
jbe
dec
jo
add
pusha
pop
insb
mov
add
dec
jne
push
jnp
add
cld
mov
ss
rcl
fiaddl
adc
test
jb
or
xor
mov
fwait
ja
pop
cmp
and
or
inc
testb
test
jo
scas
cmp
inc
mov
hlt
xor
inc
cmp
les
jne
add
loopne
xchg
mov
adc
jo
cmpb
dec
jno
xchg
sbb
mov
push
xlat
cmp
cmp
xchg
inc
into
jo
jbe
mov
add
jnp
push
push
cmp
add
pop
pusha
stos
add
xor
mov
mov
dec
adc
insb
cmp
xchg
je
pop
mov
mulb
hlt
nop
and
addr16
loop
sbb
stos
std
fdivl
cmpsl
adc
clc
scas
jns
repz
les
add
loop
add
negb
arpl
push
add
pushl
sarb
clc
jle
movb
inc
bound
add
cmp
cmp
sbb
aad
clc
lret
add
adc
and
out
xchg
add
add
fistpll
cmp
inc
jb
les
ret
int
mov
adc
fucomip
cmovne
lods
add
cmp
enter
sbb
inc
nop
dec
add
inc
inc
pusha
insb
testb
loop
push
xchg
xchg
in
or
adc
xchg
add
mov
pop
cli
sub
push
ss
xor
les
loopne
xchg
fnsave
in
imul
nop
add
das
out
add
rorb
cli
jo
fcmovu
add
test
cmp
fildl
imul
sub
iret
ljmp
rclb
add
int
testl
add
dec
ret
in
shll
loopne
pop
jns
xor
in
add
push
push
add
cld
out
adc
pop
cli
imul
repz
mov
nop
or
cmp
loope
aam
add
mov
xor
mov
jnp
lret
cld
and
adc
addl
cmpb
and
int
dec
cmc
lret
test
sub
pushf
xchg
sub
mov
add
in
push
es
mov
ds
jbe
mov
fisttps
mov
std
sub
mov
test
in
mov
and
out
push
insl
mov
orb
pop
inc
test
sbb
loop
cmp
cmp
outsb
add
mov
push
pop
cli
icebp
jae
push
fistpl
add
fdivrs
sbb
in
movsl
adc
adc
lds
xor
out
hlt
add
mov
js
or
adc
add
jecxz
sbb
ja
mov
mov
insb
clc
add
rcll
int3
inc
fdivl
es
imul
call
fidivs
mov
pop
pop
add
jbe
mov
out
push
test
mov
xchg
jge
dec
add
pop
pop
sub
lahf
jg
clc
xor
mov
inc
sbb
lock
dec
mov
add
aam
lods
aad
cwtl
add
out
stc
icebp
jno
add
adc
in
dec
mov
add
sbb
in
or
cmp
into
sahf
test
jne
add
ret
in
imul
mov
cmpsl
adc
call
add
and
add
and
adc
pop
mov
xor
test
js
ret
pop
bound
pop
add
das
jns
pop
call
ret
jmp
mov
ljmp
clc
mov
adc
gs
lods
add
sub
xor
dec
add
adc
lahf
xor
mov
pop
out
test
stc
sub
push
push
lock
push
dec
repnz
pop
jle
fwait
sbb
sub
add
repz
stos
int
add
add
fadds
cmpsl
testl
orb
jle
mov
mov
repz
add
ja
es
clc
inc
add
mov
add
ljmp
cltd
sub
orl
mov
bound
or
popa
pusha
fidivs
push
add
xchg
sbb
mov
push
or
mov
pop
cmp
lds
fwait
sub
add
stc
push
mov
out
mov
dec
add
sbb
insb
or
ljmp
cmp
push
jg
jb
out
inc
jnp
lahf
add
mov
add
fs
insb
jmp
mov
cwtl
out
pop
sti
dec
push
aaa
pop
test
jo
adc
add
out
int3
cmp
sbb
xchg
inc
mov
dec
push
pop
gs
or
add
or
pop
mov
xlat
inc
cli
xor
loop
jecxz
lods
adc
xchg
pop
dec
or
pop
push
test
fdivrs
add
jae
in
push
outsb
add
out
addr16
nop
xor
lds
cld
mov
pop
cmpb
stc
cmp
and
lods
add
jnp
cmp
add
leave
call
mov
loopne
add
fdiv
sub
mov
jb
insl
out
lods
or
inc
xchg
insb
stos
ret
outsl
pop
testb
inc
ret
orb
xchg
in
add
pop
inc
pop
aas
dec
jo,pn
sbb
pop
pop
or
mov
push
lock
push
jle
sbb
popf
mov
mov
or
add
mov
popa
add
jl
pop
add
stos
mov
add
ret
mov
es
int3
test
push
dec
add
dec
cmp
xor
aad
add
sbb
roll
mov
jo
inc
add
mov
jge
jmp
xor
sbb
je
ret
repz
lods
jne
divl
cli
inc
push
sahf
outsl
push
jnp
mov
and
pop
hlt
add
popa
int3
mov
mov
testb
aaa
pop
popa
js
int3
push
cmp
and
dec
dec
add
icebp
jg
jl
and
inc
pop
std
pop
mov
lahf
shlb
inc
jnp
ja
xorb
cmp
in
xor
push
dec
jb
mov
push
inc
shrl
incl
mov
pop
std
adc
lock
dec
in
push
fucomp
inc
add
ja
pop
sbb
rolb
add
fwait
push
cwtl
loope
jne
in
pop
and
mov
shrb
sub
outsl
jb
ljmp
jp
cmpsl
notb
lock
mov
xchg
xsaves
xchg
push
mov
add
cmp
add
jg
cli
js
inc
shlb
add
cs
int3
and
sbb
xchg
xchg
hlt
jbe
mov
add
lods
xchg
pop
add
pop
and
mov
jp
cwtl
cs
in
int3
js
pop
cwtl
cmovg
xor
or
add
mov
sahf
adc
test
pop
jg
sub
lea
mov
jp
add
hlt
imul
divb
add
iret
loopne
or
dec
push
pop
test
pop
dec
data16
cs
cli
add
out
inc
xchg
add
in
cli
sbb
add
cltd
or
mov
xlat
out
add
aad
or
or
rcrb
jns
add
xchg
loop
inc
dec
popf
push
and
xor
add
cmp
jno
mulb
call
or
sbb
add
lock
add
mov
sub
add
es
xchg
in
or
add
mov
add
add
jae
js
or
filds
pop
adc
daa
push
inc
sar
mov
jo
rolb
jb
cmp
sub
jg
pop
push
inc
cmp
mov
aad
sub
hlt
adc
stos
stc
sub
add
shll
imul
sbb
repnz
inc
in
mov
sbb
inc
or
aas
jne
or
js
mov
roll
movl
ror
add
pop
sub
imul
cmpsb
ss
add
sarb
std
sub
jle
jmp
push
and
sbb
addr16
inc
stos
push
pusha
mov
add
add
jecxz
stos
cmp
jg
xlat
lock
lret
insl
lds
jo
iret
add
les
call
xchg
push
push
add
int3
add
add
sbb
mov
or
and
pop
imul
mov
cld
jae
jo
add
cmp
cli
out
and
adc
mov
mov
ljmp
dec
jo
je
cld
flds
test
xchg
call
add
add
xchg
arpl
add
inc
jg
dec
jno
inc
push
orb
scas
rolb
or
add
repz
add
fnstsw
add
xor
rclb
inc
jne
xor
sbb
add
movsl
div
inc
rcrb
aam
jbe
in
pop
cmp
dec
inc
jge
add
popfw
add
into
ret
mov
push
es
sbb
movsb
cmovo
sbb
or
repnz
in
adc
outsl
fs
add
cmp
in
loope
cmp
cld
xchg
xor
jecxz
das
push
add
fs
in
add
jo
subb
or
pop
std
test
push
or
add
inc
and
sbbb
scas
sarl
add
sub
or
add
andl
mov
add
sahf
and
add
jp
add
leave
pop
icebp
xchg
mov
cmp
jno
xlat
pop
add
xor
dec
fs
adc
add
filds
jb
daa
movl
shrl
dec
add
sub
add
imul
sbb
sub
je
dec
cwtl
aam
scas
rol
movsb
or
xchg
pop
in
add
inc
in
inc
or
sub
adc
orl
sarb
adc
xchg
push
sarl
sub
cmpsb
add
aas
mov
jae
repz
fadd
fdivrs
sbb
lods
aas
mov
adc
add
sti
ja
in
mov
repz
ror
ss
sbb
push
je
cmp
jg
add
jmp
mov
jns
orl
add
jne
lods
jecxz
insb
add
shl
inc
sub
cmp
stos
pushf
jb
inc
shl
lcall
in
cltd
add
push
sysenter
fnstenv
dec
add
add
cwtl
jbe
add
sbb
ljmp
mov
add
lahf
les
hlt
push
data16
mov
loope
movsl
inc
ret
or
sbb
cwtl
jg
lods
mov
sbb
push
je
xor
clc
andl
hlt
insb
mov
out
pop
jo
add
inc
cmpb
adc
inc
add
leave
xor
xchg
jp
cmc
add
addr16
jno
cwtl
lock
lahf
enter
ror
data16
hlt
mov
cwtl
add
imul
add
loopne
andb
sbb
fisubs
add
inc
sub
nop
xchg
andb
mov
je
add
stos
movb
addb
cwtl
add
lcall
push
mov
push
ds
das
mov
or
xchg
pop
pop
jb
repz
inc
cmp
xor
int3
jg
pop
add
lcall
cmpsb
daa
mov
xchg
ss
sub
std
dec
add
ror
xchg
roll
inc
sbb
movsb
add
lock
push
cs
sub
lds
mov
imull
fdiv
inc
cld
push
outsl
movswl
or
addl
xor
pop
add
addr16
push
xchg
fcmovne
mov
fldl2e
jmp
sbb
mov
incb
hlt
jo
shll
inc
cli
add
out
pushf
push
add
add
sub
pop
stos
pusha
jl
ret
dec
pusha
test
sub
jae
mov
mov
add
jecxz
jp
cmp
add
test
aad
test
sub
in
shll
add
xchg
dec
stc
mov
pop
push
xchg
add
fildl
test
cmp
mov
negl
lcall
dec
roll
dec
xor
adc
lods
cmp
icebp
outsb
addr16
sub
push
push
ret
cld
push
cmp
icebp
repnz
or
jmp
lahf
jbe
push
mov
add
sub
les
xor
dec
sbb
cmp
add
cmp
aas
andb
out
add
incb
adc
push
xor
mov
mov
lahf
mov
loop
lret
sti
lock
add
adc
adc
adc
jg
movd
mov
rcl
ss
cli
add
sbb
xchg
pop
je
jns
and
sbb
and
jbe
pop
inc
xor
xchg
jle
jmp
sub
fwait
movsl
mov
sbb
sub
int3
addl
icebp
stc
push
jecxz
jb
push
xchg
jo
xorb
pop
sbb
addl
aaa
pop
test
xchg
add
add
nop
ret
add
add
cmp
je
jae
inc
push
stos
addb
dec
add
push
enter
pop
daa
cmp
fucom
rorb
mov
xor
pop
nop
dec
add
jg
add
loopne
scas
test
add
mov
xchg
push
test
shlb
notb
mov
add
mov
or
cmp
sbb
add
mov
imul
add
out
mov
inc
add
inc
add
data16
stc
or
pushf
cmp
add
mov
and
add
pop
push
adc
and
add
sti
cld
arpl
inc
push
mov
outsl
inc
xchg
add
add
insb
mov
mov
dec
lahf
syscall
loop
popf
xchg
pop
xor
in
ja
add
js
int
sub
std
mov
ss
mov
arpl
add
pop
ror
fisubs
sub
mov
lods
cmp
dec
add
mov
repnz
add
xchg
lcall
xlat
mov
inc
mov
sub
jle
push
movsl
add
dec
sbb
sub
repnz
jecxz
cmp
pop
inc
inc
dec
out
xchg
stos
add
std
lock
jmp
gs
mov
mov
mov
adcb
push
add
mov
leave
lds
call
push
test
dec
in
mov
repz
mov
test
add
das
sbb
std
imul
push
mov
add
dec
xchg
gs
fistps
add
add
in
sti
add
or
ss
rclb
divb
cmp
sbb
out
cli
sub
testb
pop
gs
cwtl
lret
ja
aas
cmpsb
jp
cmovp
and
int3
mov
ret
push
data16
mov
and
sub
mov
add
data16
mov
lock
sbbl
outsl
loopne
call
adc
mov
xchg
out
sbbb
xor
cltd
mov
aas
lock
xor
add
xchg
pop
mov
add
sbb
call
cmpsb
or
insb
in
mov
add
lods
js
and
mov
add
push
test
scas
push
mov
in
mov
xchg
jmp
es
adc
add
hlt
and
enter
enter
aas
ret
pop
xor
cmpsl
call
add
jne
mov
pop
rolb
or
mov
mov
sbb
pop
push
jl
clc
cli
mov
add
pop
or
icebp
mov
pushf
pop
inc
das
add
cmp
sbb
sbb
add
icebp
insb
sti
add
pusha
push
cwtl
call
or
jecxz
pop
lods
pop
jns
out
xor
push
or
or
and
loopne
adc
int3
int3
sbb
adc
add
pop
enter
cmp
bound
sbb
cwtl
jno
add
mov
les
sub
mov
fcompl
and
inc
js
je
xchg
jb
xor
sbb
add
xlat
inc
scas
jg
inc
outsl
jb
xor
inc
and
dec
jo
outsb
cld
imul
jecxz
jnp
mov
push
push
popa
ja
into
bswap
fistpl
fdivs
jo
jns
ss
inc
push
jae
add
cs
mov
roll
lcall
addl
push
and
mov
sbb
add
inc
arpl
mull
inc
je
cmp
pop
out
ss
ds
js
push
imul
sahf
jae
jg
jne
mov
add
addr16
shrl
es
sub
orl
mov
insl
sbb
fs
push
sbbb
cltd
and
iret
sbb
jbe,pn
aam
dec
enter
xor
xor
dec
lds
dec
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
push
add
insb
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
xor
or
add
add
add
aas
add
add
add
add
add
add
add
int3
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
jb
popa
add
push
add
and
dec
add
outsb
add
add
jb
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
cmp
add
sub
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
inc
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
sub
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
dec
add
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
dec
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
sbb
add
inc
add
imul
inc
add
je
add
add
add
outsl
add
and
dec
add
jns
and
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
imul
push
add
jb
jae
imul
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
clc
push
add
hlt
push
add
add
add
or
or
push
adc
add
adc
add
ja
imul
movsb
push
add
mov
add
enter
fcoms
add
add
hlt
push
add
add
add
sbb
add
add
add
and
add
add
call
add
xor
add
add
add
call
push
add
cmp
add
add
add
decl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
outsb
imul
add
popa
fs
jo
xor
cs
insb
add
add
add
push
gs
jo
outsb
dec
gs
js
add
push
pop
mov
push
pop
pop
push
sub
loop
ljmp
cltd
xor
mov
inc
add
sub
add
mov
cmp
cld
mov
xor
movsb
or
add
insl
sub
leave
push
or
shl
test
ss
mov
icebp
dec
sbb
rol
jne
stos
jmp
aam
dec
sbb
inc
inc
jmp
sub
leave
enter
pop
shl
mov
cmpl
or
cmp
outsb
ja
and
jne
add
sub
rep
pop
jmp
add
shlb
mov
inc
adc
ret
shr
call
xchg
jb
ret
sub
popa
xor
or
push
addb
mov
push
add
shlb
add
and
or
pop
pop
bound
add
push
and
xor
sub
xchg
push
xor
rcrb
cmpsb
clc
loopne
or
les
push
rep
dec
add
inc
sahf
jo
pop
pop
jo
mov
or
movsb
rcrl
or
push
push
push
push
push
call
in
dec
adc
mov
or
add
sbb
lahf
push
or
lea
lods
stos
dec
add
add
jae
inc
test
push
mov
mov
test
repnz
sbb
add
xchg
outsl
add
push
or
push
call
cmpsb
add
mov
mov
inc
push
nop
or
aaa
and
push
call
jb
inc
sbb
mov
shrl
inc
mov
dec
xor
test
je
or
cmp
pusha
outsb
je
mov
lea
mov
mov
sub
xorb
dec
loope
add
lea
push
aas
pop
adc
mov
sbb
enter
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
or
dec
inc
loopne
add
movb
jmp
lcall
cmp
add
adc
push
and
cmpsb
cmp
or
pop
pop
pop
pop
ret
jnp
or
add
daa
mov
sub
loopne
push
add
lret
push
call
inc
mov
jle
cmp
sub
push
cmp
add
out
mov
jne
inc
xor
stos
pop
orl
add
in
lods
push
xor
scas
leave
jo
test
jge
addr16
sbbb
ret
je
cli
ja
cmp
rsqrtps
repz
sub
mov
clc
lods
jbe
and
aas
repnz
or
pop
inc
in
movw
fldcw
adc
add
add
in
push
test
mov
addl
outsl
or
insb
js
mov
add
dec
xchg
shr
mov
jbe
jae
shll
pop
push
pop
add
adcb
or
nop
add
cld
xchg
call
push
push
ds
and
pop
cmp
je
or
xor
pop
scas
mov
movzwl
test
jge
or
mov
stos
movl
idiv
cmp
jge
repnz
push
inc
imul
call
dec
mov
jne
sbb
cmp
mov
dec
pop
or
rclb
xchg
push
fwait
push
inc
cmp
add
out
or
enter
push
xchg
pop
push
mov
sub
add
jbe
push
push
call
pop
mov
sarl
xor
in
inc
pop
jg
cli
daa
fwait
push
xchg
fmulp
sub
mov
or
dec
loopne
cwtl
push
bound
dec
or
clc
rol
add
movsl
sub
inc
jnp
or
jno
mov
or
cmp
xor
ret
add
pop
mov
pushf
sbbb
push
push
push
and
push
mov
in
xor
adc
js
push
ss
pop
gs
and
add
xor
dec
mov
hlt
push
daa
dec
or
dec
enter
das
push
push
std
popf
push
in
xchg
rolb
adc
je
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
pop
add
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
push
xchg
nop
add
mov
or
cmpb
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
call
xor
dec
xchg
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
inc
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
or
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
and
dec
rcl
je
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
cmp
xchg
sbb
sbb
inc
mov
dec
adc
jl
sbb
iret
shr
pusha
loope
push
lea
jbe
push
out
or
push
orb
je
js
push
pop
sbb
sub
sub
or
in
xor
and
movsb
ja
inc
jo
insb
imul
outsb
and
cmp
cmp
and
jne
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
dec
push
int
arpl
sub
push
jae
xor
jbe
icebp
in
testb
js
push
ja
pop
js
data16
imul
fsubrs
js
imul
pusha
shrb
outsb
fs
sti
orl
inc
stc
je
ljmp
orps
je
mov
arpl
lcall
stos
mov
cltd
cmp
or
adc
cmp
dec
xor
jno
sbb
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
nop
push
add
xchg
add
add
add
sub
sub
add
add
add
and
and
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
