mov
cwtl
lock
add
mov
add
add
dec
push
call
push
push
push
push
push
or
add
xor
push
call
mov
ljmp
inc
and
mov
sub
mov
mov
shl
shr
or
xor
sub
fistps
filds
pop
sub
mov
shl
mov
shr
or
mov
inc
add
cmp
mov
jl,pt
pop
pop
pop
pop
add
jmp
ret
push
mov
push
movl
ljmp
add
or
rolb
test
je
push
mov
shr
shl
movzbl
idivb
decl
repnz
cmp
cmp
pop
je
adc
aaa
mov
xor
adc
scas
mov
inc
pop
ficoml
je
test
je
xor
push
xchg
mov
outsl
pop
je
push
inc
neg
mov
outsl
jle
or
adc
je
mov
subl
cmp
incl
test
push
push
push
mov
andl
add
pop
xor
inc
ret
mov
orl
sbb
adc
ja
or
push
or
int3
prefetch
or
mov
mov
cld
mov
push
lea
loopne
scas
ret
jp
out
mov
add
mov
call
or
leave
push
ret
push
inc
xor
pop
inc
xor
imul
fisttps
push
sub
jle
cld
mov
jp
testl
in
out
jne
into
mov
jg
pusha
dec
jae
pop
sub
adc
shlb
add
je
lea
push
pop
pop
push
push
lea
xor
xor
std
out
adc
mov
scas
xor
js
xlat
jl
mov
push
sbb
or
imul
push
orb
push
add
or
mov
ja
js
xor
jmp
mov
in
mov
add
mov
push
movsl
pop
aas
ds
sub
pop
push
dec
and
mov
mov
push
pop
icebp
pop
fildl
sbb
ret
cmpl
add
sub
mov
or
pushl
imul
pop
pop
fs
push
mov
clc
fidivrl
jl
adc
hlt
mov
push
push
sbb
dec
addr16
outsb
push
or
inc
add
adc
push
or
jo
jbe
out
jg
xor
add
testl
shl
add
mov
jg
inc
cmp
cmpw
jne
mov
add
cmpl
push
mov
mov
cmp
or
movl
push
daa
cmpl
jb
imul
pop
push
cmpl
loop
clc
or
rorb
test
jne
clc
push
jo
in
push
jmp
sti
fisubl
out
adc
cld
push
adc
adc
sti
push
lock
xor
inc
push
setp
fists
and
or
mov
pop
or
mov
sub
pop
push
sub
mov
adc
mov
addr16
mov
inc
shr
xor
pop
cmp
push
xlat
add
pop
adc
cmp
jne
push
addr16
or
jmp
sbb
mov
or
movsl
fdivr
cmpsl
inc
imull
mov
cmpl
pop
pop
cltd
scas
jo
aaa
ret
jle
gs
xor
popf
dec
scas
push
add
add
lock
mov
hlt
jne
cmp
jmp
inc
sub
jmp
push
add
mov
call
push
push
xor
movsl
loop
xor
mov
jo
pop
cmp
pop
hlt
sbb
lea
or
mov
dec
movsb
jmp
mov
mov
mov
xchg
sti
jbe
push
adc
ret
popl
fdivrp
push
ret
pushf
mov
jne
mov
and
cmp
xchg
aaa
adc
push
je
mov
adc
ret
stos
rcr
add
add
imul
loopne
and
lret
or
ret
add
cmpsb
sbb
cmpb
or
add
push
push
jo
sub
insb
cmpsl
mov
stos
sbb
xor
cmpsb
sub
push
push
mov
add
cmpsb
lret
inc
xchg
in
idiv
cmpl
add
mov
sarb
loopne
mov
and
clc
cmp
sti
pop
lahf
cmpsb
clc
push
sbb
and
sti
sbb
adc
cmp
mov
mov
inc
jg
inc
cmp
jl
cs
push
push
cmp
cli
lcall
cmpl
add
sbb
int3
je
dec
in
inc
xor
cmp
aas
test
cmp
cmpl
sbb
pusha
ja
add
ljmp
fldenv
xchg
mov
mov
std
dec
add
jbe
jb
or
add
cmp
jae
testb
jne
fs
jno
cli
and
loope
rcr
test
mov
jle
lea
fstpt
add
sarb
push
jne
push
pop
cmp
jg
mov
dec
lock
testb
lods
mov
inc
cmp
mov
mov
jle
nop
idivb
data16
inc
mov
outsl
clc
mov
rol
jg
testb
xchg
fistpl
adc
rorl
jp
mov
jle
lcall
adc
jmp
jnp
add
hlt
push
jge
cmp
push
inc
mov
cmpl
push
lea
inc
cmp
rcr
cwtl
cli
pop
sar
or
sti
movsl
loopne
inc
ret
push
je
push
inc
ficoml
sub
push
call
or
mov
shrl
or
mov
xchg
icebp
jae
hlt
aas
mov
jp
add
sar
aad
stos
jbe
divl
and
push
sbb
std
pop
mov
mov
pop
jae
push
movsb
pop
sarb
nop
ss
out
fs
cmp
cs
xor
imull
xor
or
outsb
jmp
jle
sub
sub
shr
mov
mov
daa
add
jecxz
sbb
pop
or
adc
in
adc
dec
mov
dec
mov
add
inc
or
add
mov
or
push
add
mov
or
rcr
je
add
inc
sbb
add
lods
clc
movb
popf
xchg
jo
lea
push
mov
pop
cmp
push
call
pop
inc
sar
add
mov
shl
cmp
pop
fcoml
jae
xor
test
mov
mov
jne
cmpl
stc
cld
or
push
imull
out
add
sbb
push
sbb
sub
addl
cmp
pop
pop
pop
lea
mov
sbb
mov
or
jg
cmp
jbe
sbb
mov
add
clc
push
push
pop
adc
pop
add
aas
pushl
lea
pop
mov
add
loopne
push
xchg
or
insb
push
sub
adc
pop
push
ret
and
in
adcb
pushl
pop
push
adc
je
xchg
movsl
je
cmpsb
sti
mul
lock
add
cmp
or
je
lock
and
dec
andl
mov
push
setnp
pop
arpl
jg
jl
push
or
shrb
cmp
je
lea
push
mov
or
xor
mov
sbb
jae
inc
add
inc
jae
andb
pop
or
lock
sti
add
or
sbb
and
test
push
adc
loopne
mov
pop
or
lret
ds
aaa
dec
dec
adc
jge
mov
neg
sub
stos
or
jne
mov
ljmp
int3
jbe
ficoml
cmp
andl
dec
push
sbb
in
cmpsb
dec
xchg
test
lea
lret
es
sbb
xchg
or
rcll
push
rcrl
adc
pusha
or
pop
int
adc
or
nop
xchg
mov
clc
xor
cmp
pusha
inc
lds
sahf
xor
negb
ljmp
push
cmp
ja
test
test
cmp
jne
sar
sete
mov
movzbl
pop
sbb
jge
mov
rcll
bound
cmc
pop
fmull
add
dec
fstpt
sbb
int3
lret
in
repz
jmp
cmp
outsb
inc
push
lds
push
mov
ljmp
aas
add
pushf
cmp
mov
in
pop
pop
test
sub
call
hlt
negb
sbb
cmp
pop
pop
je
push
leave
mov
add
cmp
jne
ljmp
xchg
mov
mov
fsubl
jno
pop
into
insl
into
push
mov
dec
rorl
jecxz
test
push
cmp
mov
push
hlt
movl
or
add
cmp
ud0
rolb
shll
push
bound
inc
or
std
push
push
flds
and
mov
sbb
sbbl
cmp
sub
cltd
jle
or
jne
cmp
movb
sbb
mov
into
testl
jp
xor
sbbb
add
inc
pop
jmp
inc
lods
ljmp
stc
cmp
test
pop
push
cld
ret
outsb
outsl
xor
and
mov
inc
push
cmp
insb
xchg
shr
pop
push
sti
push
outsb
or
push
int3
repz
outsl
aam
cmp
mov
shl
cmpb
adc
fucomip
pcmpeqd
testb
ds
fucom
int3
mov
ljmp
pop
sbb
andl
add
pusha
adc
sbb
fsubrs
add
cmp
movb
lcall
pop
cmp
ss
and
fdivs
mov
xchg
push
push
lea
int
cmp
mov
dec
or
sbb
hlt
shl
add
mov
int3
and
stos
and
gs
stc
cmp
and
sbb
and
inc
cmp
pusha
icebp
xor
dec
inc
mov
stos
mov
add
out
mov
mov
push
test
push
dec
push
loopne
outsb
cli
aam
js
mov
mov
cmpsb
fistps
adc
imul
push
push
divb
lds
sbb
or
add
xchg
push
jge
push
sar
insb
push
adc
xor
data16
enter
jmp
jmp
jbe
test
je
cmp
jo
inc
push
scas
add
push
sbb
lahf
inc
pop
call
insb
push
or
push
cmp
imul
inc
sub
dec
cmovle
lock
je
inc
cmp
sti
ss
lods
jne
div
inc
push
sbb
ja
push
or
pop
mov
inc
mov
sub
push
stc
gs
insb
adc
adc
and
cmp
jo
loope
shll
lea
add
out
mov
add
add
add
loop
inc
add
or
cmpw
lea
inc
mov
mov
dec
mov
lea
jl
out
fstpl
sarl
mov
dec
push
xor
orl
add
sbbb
add
clc
inc
iret
pop
xchg
adc
jg
rcrl
outsb
clc
shlb
dec
add
roll
dec
fmull
or
repnz
stos
ss
sub
mov
pop
mov
jge
mov
mov
mov
pop
mov
inc
inc
add
fbstp
add
andb
ds
dec
pop
mov
inc
add
cs
pop
jmp
ret
dec
idivl
cmp
push
cmc
mov
insb
jmp
or
insb
pop
push
int
and
push
lods
jmp
xor
sbb
pop
fcmovb
fstl
jmp
or
jl
pushl
pop
ljmp
inc
lahf
dec
das
push
push
inc
in
pop
inc
adc
jmp
insb
or
fldl
inc
or
shl
subl
jmp
and
and
icebp
movsl
pop
and
out
das
sbb
add
push
pop
pop
sub
xchg
cmp
add
loop
sarb
shlb
push
lock
sub
pop
dec
out
loopne
add
jne
push
cld
icebp
and
mov
shlb
cmp
jbe
fldcw
xchg
mov
test
movb
test
dec
popa
rclb
in
sub
sbb
add
cmp
push
inc
jno
and
mov
cmp
add
mov
shrl
mov
jae
mov
pushf
pop
pop
push
into
add
push
push
push
sub
fnstenv
add
xchg
sub
mov
sbb
mov
mov
push
test
xor
adc
ret
push
inc
mov
inc
push
shrl
jbe
mov
xor
movsl
adc
fs
stos
movsl
arpl
push
mov
xchg
xchg
inc
push
push
sbb
pop
je
push
ret
push
fsubr
bt
sbb
insb
insl
std
sbb
addr16
push
xor
out
sbb
or
cmp
sbb
mov
lock
pusha
testb
adc
add
dec
adc
jmp
inc
xor
jbe
pop
mov
popf
pop
test
adc
mov
and
shlb
int3
or
sbb
rcrl
addr16
add
test
jp
test
lea
inc
jge
push
test
rclb
fidivrs
add
add
inc
fldt
mov
cmp
test
call
lcall
je
and
push
or
jae
pop
pop
add
int
jns
jmp
or
jmp
std
jmp
sub
pop
cld
enter
mov
shlb
push
int
sti
insl
movl
mov
xlat
in
sti
ja
mov
bound
divb
ret
bswap
out
popa
lahf
ffree
jo
pop
ret
adc
inc
add
sub
xor
adc
push
push
mov
mov
adc
or
adc
icebp
jmp
daa
mov
bound
mov
addr16
add
les
fisubrs
push
jne
aaa
jbe
outsb
dec
jne
and
push
inc
fcomps
loop
sub
in
rcrb
ljmp
jmp
sub
ljmp
enter
pop
out
and
leave
repz
cmp
add
sub
sbb
in
enter
jbe
sbb
mov
add
mov
xchg
scas
or
mov
ljmp
ja
imul
cmp
aas
cmp
fs
in
xchg
repnz
je
or
pop
dec
xor
inc
or
rol
incb
cld
loopne
and
mov
mov
mov
add
and
call
roll
movzbl
loope
adc
pop
pop
cwtl
je
mov
cmp
push
mov
clc
sub
xchg
pop
loopne
sahf
popw
add
xchg
push
jl
sbb
movsb
lock
or
xlat
or
or
mov
add
repnz
push
push
adc
data16
nop
mov
stos
lahf
testl
in
and
insl
or
mov
jnp
stos
add
push
xchg
fimuls
xchg
mov
pushl
add
mov
mov
mov
jb
cmpb
mov
lret
pop
and
lea
push
in
test
cmp
ja
sub
inc
jecxz
mov
out
mov
lret
and
rep
inc
mov
inc
lods
sbb
jbe
pop
pop
in
cmp
xchg
in
mov
add
push
fnsave
jecxz
das
lret
mov
cmp
add
push
xor
dec
test
andb
mov
push
xorb
mov
add
sbb
add
jle
test
cmpb
mov
fisttpl
sbb
pop
ja
mov
add
test
in
jbe
xor
adc
jp
push
cmp
and
loopne
shl
imul
pop
roll
out
popf
cwtl
add
sbb
test
jo
pop
cs
sub
inc
inc
ret
mov
add
smsw
jl
sub
sub
js
cld
jne
mov
xchg
adc
cmp
inc
mov
mov
repz
push
mov
adc
mov
out
je
add
inc
cmp
sub
dec
inc
cmp
rclb
or
or
lahf
cmp
incl
jge
mov
dec
jge
xchg
cmpb
mov
cmc
dec
out
mov
jle
jl
lahf
lcall
sbb
call
push
shl
mov
stos
lea
repz
mov
fninit
add
mov
fdivs
std
mov
mov
scas
inc
es
inc
fldl
lahf
psrlq
inc
in
ret
or
add
lock
lcall
movsl
sub
jmp
inc
add
ret
inc
inc
cmpb
addr16
add
dec
xor
inc
cmp
stos
push
mov
cmp
shr
in
sub
jmp
pop
test
push
push
leave
or
sub
mov
pop
pop
pop
ficomps
push
stos
pop
rolb
dec
add
lea
sub
ret
push
aas
ret
push
or
fiaddl
push
jne
js
mov
or
and
or
out
jo
cld
mov
int3
ret
pop
jge
adc
mov
outsb
ja
push
dec
sub
and
add
mov
mov
out
push
mov
add
ja
std
sbb
jae
mov
or
daa
xor
fmulp
cmpl
push
jb
insl
fisubrs
sbb
add
or
cmp
and
lock
roll
scas
and
cmp
jbe
cmp
jb
dec
push
hlt
jg
and
stc
or
rep
jmp
int3
in
push
in
cmp
loopne
add
cs
sub
cmp
mov
es
push
scas
std
cmp
push
mov
mov
mov
or
lods
push
repnz
mov
cmpsb
stc
rclb
add
add
nop
inc
add
add
jae
push
mov
cmpb
jns
jo
pusha
mov
repz
xrelease
call
repz
lock
hlt
clc
clc
add
lock
cld
and
pusha
sbb
add
add
sbb
jmp
je
shl
pop
pop
mov
inc
pop
sti
and
push
andl
sbb
lea
into
jl
cld
pop
and
std
pop
mov
adc
xor
clc
das
sub
inc
mov
stc
sub
sub
addb
ficoml
jl
mov
add
sahf
inc
push
cs
mov
loop
addr16
add
pop
adc
lcall
repz
jnp
or
adc
and
cmp
repz
xor
sbb
sbb
repz
repz
adc
or
repz
or
or
lahf
mull
inc
pop
or
jo
xor
push
add
add
sub
pop
push
jne
push
ja
inc
inc
xor
pop
mov
movsl
sub
cmp
mov
rolb
pop
adc
sub
inc
ret
mov
mov
test
adc
add
push
xchg
incb
add
clc
ljmp
mov
outsl
push
mov
sub
xorl
jg
cld
shr
mov
imul
add
xor
mov
push
dec
mov
filds
sbb
mov
mov
push
cld
or
jmp
xchg
adc
mov
jne
sar
dec
cmp
jbe
push
das
mov
cld
pop
mov
cmp
inc
push
and
xorb
lret
lea
not
and
decb
dec
fidivrs
aas
add
sbb
sbb
dec
loopne
pushf
mov
sub
adc
add
push
dec
pop
adc
lcall
and
push
rcrl
cs
test
clc
and
pop
hlt
mov
jmp
fcmove
mulb
sar
xor
lret
cmp
jbe
fstpl
xchg
mov
imul
andb
cmp
je
lret
aaa
add
data16
cmp
mov
pop
fsubr
not
and
add
or
lea
das
mov
xor
push
jle
pop
dec
test
cltd
imul
jmp
push
adc
inc
pop
outsb
hlt
lods
or
je
ret
lea
mov
pop
or
dec
or
adc
mov
dec
paddd
mov
jge
jle
fisubs
xor
pop
xchg
add
or
jmp
dec
adc
push
mov
pop
inc
stos
cmc
or
and
dec
adc
pop
neg
inc
mov
cmpsl
push
fmull
cmp
shl
add
scas
jp
outsl
das
sti
push
push
call
aas
gs
push
or
fnsave
mov
add
decb
adc
dec
adc
add
and
test
in
shrl
adc
or
and
mov
adc
loopne
or
sub
push
inc
adcb
push
or
add
cmp
or
scas
pop
inc
les
jbe
sahf
sahf
ss
or
xchg
fnsave
pop
pop
adc
fwait
or
cmp
xor
int3
mov
lret
push
mov
shlb
mov
outsb
mov
movsl
jp
pop
ret
addl
adcl
scas
or
xor
imul
jo
mov
ja
inc
push
push
stos
push
jge
mov
push
icebp
jmp
orl
mov
mov
incl
pop
inc
pop
sub
fwait
out
or
fcomps
mov
or
mov
imul
in
aas
sub
inc
clc
pop
mov
add
repz
sub
and
jne
add
sti
mov
out
nop
add
add
adc
outsb
shll
mov
push
push
loop
ja
fsubrs
iret
dec
pop
mov
decl
dec
clc
incl
lea
mov
inc
inc
cld
lock
call
jne
add
xchg
cli
xor
mov
or
dec
out
adc
dec
jb
adc
fs
inc
aaa
loopne
outsb
sbb
mov
enter
dec
add
jne
or
xlat
or
adc
shlb
faddp
jl
add
test
shrb
mov
xlat
sub
pop
shr
add
imul
sti
test
sub
cmp
mov
and
jb
push
ret
mov
ret
shrb
inc
add
je
cmp
loope
add
stc
add
cmp
xorb
push
subb
int3
pop
inc
cmp
add
clc
into
add
es
nop
cmp
add
or
mov
add
adc
and
stos
loopne
fmul
add
pop
sub
pusha
sti
mov
sar
dec
cmp
mov
cld
imul
sbb
pop
hlt
lea
loop
jg
mov
cwtl
pop
imul
imul
or
loopne
and
roll
dec
test
rclb
fstl
push
mov
insb
xor
in
lahf
repnz
and
clc
js
mov
aam
mov
movsb
sub
pop
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
cmp
insb
jo
scas
xor
movsl
pop
divb
fwait
mov
push
add
cld
xor
cmp
dec
jno
sbb
je
fisttps
scas
pusha
add
aam
mov
call
adc
arpl
imul
add
mov
loope
xchg
icebp
mov
mov
mov
and
push
mov
jb
sahf
paddd
bswap
mov
out
cmp
setb
xor
jns
dec
movsl
or
sbbb
sbb
enter
add
mov
push
inc
xor
icebp
inc
pop
push
cmp
lea
mov
or
xchg
jecxz
out
sbb
hlt
roll
std
nop
xor
shr
cld
mov
fisttpl
jnp
cmp
jmp
dec
cmp
dec
and
or
jne
ret
sti
out
or
adc
push
adc
jb
push
jne
mov
jmp
inc
je
sub
or
inc
call
or
clc
fcomps
cli
pushl
out
mov
clc
ljmp
clc
pop
mov
mov
xor
add
mov
jne
mov
mov
mov
jmp
fcomip
cs
into
jne
lret
ret
pop
jmp
cmpl
or
cmp
out
andl
cmpsb
loopne
or
jae
jne
or
and
and
sbb
fistpl
ljmp
pushf
call
sub
leave
and
push
cwtl
cli
push
rorb
inc
or
imul
push
cmp
dec
push
pop
ret
dec
inc
dec
pop
xchg
enter
add
jg
std
ss
or
adc
in
and
mov
push
dec
out
inc
jae
jne
in
sub
or
sub
mov
daa
int3
dec
mov
mov
adc
and
je
pop
clc
into
pop
jp
xor
sub
jp
fs
rcll
inc
mov
or
and
pop
das
pop
popa
or
rorl
xchg
jo
cwtl
out
or
ja
pop
add
cld
or
inc
or
outsl
or
push
mov
mov
aaa
mov
aam
mov
push
adc
pop
mov
rcr
and
faddl
negb
lea
jne,pt
cmp
das
cmp
cmp
pop
fildl
sahf
lea
notl
and
adc
push
push
outsb
push
icebp
mov
sub
shlb
or
and
es
jle
sbb
sub
push
rcll
dec
cmpsl
clc
or
xchg
lock
movsb
arpl
push
pop
and
xorl
mov
mov
pop
je
adc
dec
mov
or
push
push
cmp
rclb
outsb
xor
xchg
test
fidivl
push
adc
insl
pusha
mov
push
mov
jne
cmp
xor
aas
jp
je
xchg
jbe
mov
jmp
test
sarb
cmp
ds
or
iret
pop
pop
int3
pop
pop
imul
sbb
mov
mov
and
jbe
sub
rorb
call
jmp
add
adc
arpl
mov
dec
out
mov
push
inc
mov
mov
jne
push
pushf
push
pop
dec
push
cwtl
xchg
dec
lock
or
sub
xor
and
popf
pop
push
setge
sbb
push
push
pop
mov
inc
in
mov
ret
adc
mov
add
rolb
push
ret
mov
add
xchg
jmp
mov
mov
and
movl
pop
add
adc
pop
push
sub
lahf
mov
test
sub
push
mov
adc
mov
pop
fsubrs
ret
adc
ret
test
nop
mov
and
sbb
fists
add
push
push
mov
inc
xor
fistpl
push
push
mov
mov
lods
push
push
push
or
push
mov
mov
rolb
cmp
push
dec
js
cmc
cmp
mov
mov
out
push
push
scas
pop
mov
xor
mov
or
ss
aas
dec
cmp
jle
or
dec
cmp
sbb
inc
cmp
add
jmp
sub
sbb
inc
adc
push
sahf
neg
add
push
aam
add
mov
cwtl
mov
mov
les
adc
and
lods
and
andl
fldl
lea
xor
mov
cwtl
add
mov
mov
jecxz
push
ss
cmp
mov
inc
adc
sbb
ljmp
fsubrl
ret
sbb
jge
xlat
push
mov
dec
arpl
shr
push
in
push
add
add
inc
dec
out
cmp
dec
addr16
fisubrl
add
testb
je
les
mov
mov
scas
mov
push
push
jne
xor
dec
leave
in
add
loopne
add
loopne
scas
jbe
dec
inc
mov
xchg
enter
mov
out
les
mov
pop
inc
jne
or
push
xor
ret
push
xlat
push
mov
sub
xchg
sbb
in
mov
xor
or
lcall
rorb
or
jns
subl
mov
dec
cwtl
or
aad
cmp
lret
pushf
repnz
or
push
mov
or
aam
push
ja
or
bound
sub
sbb
mov
pop
inc
bound
jmp
outsl
pop
insl
add
fimull
push
jne
mov
inc
fcmovu
sbb
xor
shlb
cld
js
push
or
add
or
xor
jmp
lea
push
sbb
js
and
dec
shl
adc
ficomps
mulb
test
add
fs
push
jns
sbb
movsb
rclb
fdivrs
xor
lock
rorb
or
inc
sbb
mov
outsl
sbb
nop
stos
adcl
jle
cmp
push
pushf
sbb
ljmp
cmp
xchg
movsb
mov
adc
fnstcw
loop
dec
mov
add
cmp
stos
add
mov
pop
jne
lcall
fdivrs
mov
push
sbb
mov
flds
aam
push
icebp
cwtl
call
test
inc
ret
out
inc
pop
push
push
sub
pusha
pop
or
push
sub
dec
mov
loopne
shl
and
jae
sub
push
jns
mov
jge
les
cmpsb
adc
mov
fisubrs
xor
dec
sbb
cmp
lds
popa
mov
cmp
je
push
push
pop
test
aam
aad
fldl
add
movsb
mov
loope
sar
adc
mov
xchg
movsl
jo
out
jns
adc
repz
add
inc
sbb
mov
pop
xor
pop
push
addb
jns
pushf
or
or
cmp
mov
lock
call
or
ror
rolb
loopne
add
jmp
add
cmp
inc
lods
inc
or
fimuls
nop
mov
inc
jns
jb
mov
jns
mov
mov
or
push
insb
lock
out
jl
mov
adc
lahf
testl
inc
mov
jle
or
dec
loop
xchg
sbb
mov
ret
stc
cmp
xor
inc
subb
je
sub
pop
jmp
mov
sub
or
loop
lcall
or
imull
pushf
ljmp
enter
push
insl
mov
push
inc
cli
jne
rcll
outsl
cmp
xchg
sarb
stos
mov
push
xlat
sub
lods
adc
pop
dec
shlb
pusha
int3
add
mov
pop
mov
dec
sti
xor
mov
push
dec
rclb
fiaddl
test
rclb
popf
push
xchg
shlb
mov
dec
loop
jne
movsb
enter
sbb
push
or
add
lcall
jne
push
push
mov
adc
mov
test
les
divl
in
cmp
cwtl
push
bswap
inc
pop
pushl
fcmovnu
push
loopne
xchg
mov
jne
push
xchg
fcomps
cmp
cld
das
daa
cmp
inc
mov
cld
mov
add
subl
cmpb
rcl
xchg
xor
jmp
mov
push
add
dec
cmp
xchg
enter
test
dec
push
dec
es
xchg
jl
int3
addr16
test
sub
push
adc
mov
add
loopne
pop
lods
mov
pop
push
mov
lea
cld
mov
mov
fmull
push
pop
movsl
hlt
inc
or
fcmovnb
fcom
push
and
mov
mov
nop
fsubl
mov
rolb
pop
or
not
and
sub
jmp
dec
jl
out
add
imul
add
cmp
test
xor
jb
sub
fadd
cmp
mov
aam
lods
jmp
add
test
je
testb
inc
inc
dec
sub
cmp
and
icebp
and
clc
jae
cmp
jae
push
cmp
clc
jnp
add
push
add
arpl
aas
mov
dec
mov
cli
inc
mov
loopne
rcrb
icebp
adc
test
push
xor
popl
sub
test
push
mov
ja
sub
jae
jne
jecxz
sbb
imul
in
or
sub
push
dec
outsb
pop
mov
loopne
add
mov
push
push
cmp
icebp
sbb
inc
rclb
mov
roll
sub
pop
dec
adc
add
jbe
jl
or
jg
jmp
add
mov
inc
sub
out
fiaddl
fstpl
jne
adc
fadds
lock
xchg
loop
jge
stos
mov
shr
or
mov
int3
pop
enter
pop
mov
cld
mov
push
sti
add
push
push
mov
jne
hlt
and
je
inc
jl
repz
and
or
push
dec
cmp
add
add
ret
and
lcall
loopne
icebp
adc
enter
sub
loope
addr16
ret
or
add
or
xor
test
ret
jo
xchg
fadds
cmp
loop
or
jmp
cli
cmp
ret
stc
or
inc
push
add
add
xor
stos
std
cld
movsb
dec
adc
es
sbb
dec
pop
imul
dec
or
cwtl
xor
cld
add
sarb
out
push
mov
and
sub
sbb
push
adc
push
pop
ljmp
jo
inc
outsl
jb
js
pushl
jb
arpl
jae
insl
jae
outsl
jb
gs
insb
add
outsb
je
insl
outsl
mov
jb
fimuls
dec
push
xchg
out
mov
and
inc
add
inc
push
outsl
int
and
push
xor
cmp
sub
jae
popa
jge
std
jo
insb
imul
or
outsb
outsl
je
shlb
jne
imul
and
popa
arpl
jbe
add
jae
outsl
data16
xor
movsb
jae
pop
cs
inc
push
and
or
dec
aaa
or
gs
jae
push
jbe
push
shll
jae
sbb
xor
pop
mov
insl
and
insl
mov
or
cs
inc
cmp
fisubrl
scas
popa
bound
ds
xchg
jp
add
jnp
stos
test
dec
aaa
outsl
imulb
jne
push
mov
outsl
ja
jno
enter
outsl
ss
sub
je
xor
xchg
mov
imul
add
dec
jg
mov
pop
push
gs
or
dec
add
sbb
mov
jo
lahf
rol
mov
out
push
inc
imul
cwtl
xor
in
aaa
insl
jne
push
xor
fs
arpl
push
or
pop
das
imul
pop
add
push
mov
inc
jno
jbe
cli
xor
sub
pusha
xchg
and
cmpsb
movl
into
and
popa
jns
ja
mov
shll
xchg
push
or
into
add
lret
cmp
std
popa
jb
jne
jae
xor
adc
or
xchg
mov
xchg
subl
sub
cmovl
jb
jns
fdivs
or
inc
add
outsb
push
lock
cmp
add
cmp
and
pop
enter
imul
outsb
add
ret
scas
jns
and
and
inc
xchg
fs
je
outsl
call
jb
bound
dec
lods
js
or
dec
add
xor
pop
fists
fisubl
pop
xlat
adc
mov
outsl
js
jne
imul
shlb
xor
push
inc
testb
popl
bound
push
xchg
mov
js
xchg
fs
cwtl
enter
nop
arpl
bound
sahf
cli
inc
jo
sti
pop
xor
sarb
insb
add
cld
subb
js
in
arpl
test
lret
sbbl
js
jne
ds
je
in
je
jl
adc
sbb
sub
les
scas
inc
mov
jb
jns
loop
dec
push
add
repnz
push
or
or
mov
add
and
push
aas
or
clc
adc
popa
imul
pop
add
add
sbb
and
and
adc
xchg
sbb
adc
add
insb
add
addb
xchg
push
aad
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
adc
adc
data16
or
push
pop
pop
inc
or
push
cmp
aad
dec
rolb
inc
lcall
dec
dec
mov
outsb
add
in
mov
daa
xchg
adc
mov
test
pop
inc
pusha
cmp
call
jnp
inc
xchg
rorb
sarb
cmp
xor
lcall
cmp
xor
or
dec
sub
xchg
adc
sub
gs
add
and
mov
subl
dec
sahf
loopne
or
add
or
pusha
cmp
jo
pushl
dec
les
test
jns
push
sbbb
fsts
inc
xlat
fldenv
or
aaa
ljmp
test
xchg
cmp
cmp
adc
xchg
lods
loopne
and
decl
mov
rcr
push
xchg
and
aad
push
mov
jns
int3
aad
out
dec
popa
jmp
push
mov
jnp
mov
dec
outsl
push
xchg
in
jg
js
jecxz
inc
shll
mov
movsb
inc
jns
rolb
cmp
ja
mov
xchg
stc
push
xor
fdivl
fs
fwait
loopne
incl
out
aas
insl
cmp
movsb
cmp
cmp
xorl
arpl
jg
or
and
pop
jmp
mov
out
stos
lahf
loope
dec
push
jb
nop
loopne
inc
sbb
jmp
daa
dec
xlat
imul
addb
imul
push
inc
mov
mov
shll
nop
or
lret
inc
cmp
jg
inc
gs
cld
push
stos
xchg
or
push
adc
mov
jge
jo
mov
movsb
lds
or
jmp
popf
xor
sbb
push
mov
xchg
test
ret
outsb
cltd
mov
mov
andb
or
xlat
inc
sub
mov
xchg
sub
cmp
jmp
mov
in
lods
ljmp
dec
and
popa
out
and
pop
inc
jne
ljmp
pop
mov
mov
call
js
push
sbb
cmc
cwtl
jp
pop
fsub
adc
push
jg
incl
mov
xchg
jmp
sbb
rcr
or
outsl
pop
inc
shlb
cmp
jns
rcrl
imul
decl
call
addl
sub
sbb
loopne
fsub
adc
in
sbb
js
xchg
flds
unpckhps
dec
movl
pop
cli
push
lcall
dec
inc
mov
jge
cmp
lret
test
ds
mov
push
fcmovu
in
push
iret
imul
inc
mov
pushf
cmp
add
orb
pop
fisttpll
mov
outsb
jo
cmpsb
mov
add
jmp
in
jecxz
outsl
addr16
aas
cmpl
jmp
add
test
jns
pusha
jecxz
jge
sbb
pop
jae
pop
cmpsb
xchg
xor
sbb
decl
add
sti
pop
and
push
push
ds
hlt
xchg
sub
jmp
hlt
pop
mov
xchg
in
rorl
mov
subb
call
out
cmp
pop
out
sbb
into
fwait
outsb
mov
push
mov
daa
and
subb
cmp
push
fcmovb
dec
das
xor
stos
decl
adc
add
imul
sub
repz
adc
repnz
pusha
push
xor
cmp
incl
aaa
cmp
clts
cld
dec
dec
push
push
aad
outsb
jp
icebp
pop
xor
pop
das
jae
incl
add
cmp
sbb
stc
repnz
jno
clc
cwtl
inc
cmp
ss
loop
fdivs
pop
sbb
jl
fildll
je
arpl
mov
incl
sub
jo
xor
hlt
mul
xchg
jo
xchg
mov
jne
cld
insl
xlat
jmp
out
mov
mov
xchg
pop
mov
out
es
push
jmp
stos
in
pop
popl
pop
popa
jle
mov
push
fimull
adc
and
jmp
dec
dec
out
pop
inc
ss
pusha
out
call
push
fs
cs
pop
mov
xor
stos
sbb
notb
or
xor
cmp
and
jge
adc
xchg
sbb
pop
mov
push
and
fidivs
mov
fcomip
call
ds
jae
mov
inc
xlat
mov
fcmovbe
sti
adc
fs
nop
push
sub
lds
insl
pop
das
sub
ret
dec
push
pushl
rorl
fsubl
add
iret
dec
aad
shrb
mov
cld
cmpsl
xchg
mov
je
adc
xchg
push
ljmp
imul
mov
jnp
inc
adc
pop
sti
ds
repnz
out
dec
mov
std
ljmp
push
xchg
pop
arpl
xchg
das
push
int
cwtl
mov
dec
inc
or
movsl
mov
out
nop
lods
inc
mov
gs
mov
and
xchg
dec
mov
sub
ljmp
dec
jbe
and
decl
fldl
int
mov
test
adc
fldcw
loopne
mov
fs
test
sbb
in
adc
add
ficomps
pop
popa
in
call
insb
push
hlt
and
pop
fwait
cmpsb
outsb
adc
sbb
fsubr
pushl
add
push
sub
int
out
mov
mov
add
loope
fs
inc
lcall
add
cmp
mov
dec
cmp
jp
dec
sahf
mov
pop
xchg
mov
jne
adc
cmc
pop
shlb
das
lahf
xor
scas
pop
sbb
call
pusha
jl
xchg
rol
xchg
lods
mov
pop
mov
pop
adc
ret
jg
loopne
movsl
sbb
and
iret
ds
xchg
test
pop
sti
popa
call
mov
jmp
sbb
jo
add
test
orl
mov
jmp
popa
das
jp
icebp
sub
adc
xchg
insb
or
sbb
aas
add
adc
fcomip
pushl
ror
cmp
pop
xor
pushf
mov
jle
sub
mov
pushl
mov
jmp
fdivr
xchg
inc
mov
addr16
int3
jmp
pop
mov
xor
movsl
sub
or
fsubrp
popf
stos
daa
sbb
jg
int3
aad
ljmp
adc
out
jg
pop
imul
lret
push
bound
fildll
adc
push
leave
inc
sbbb
leave
or
jo
pop
jg
cmpsb
mov
lcall
test
fsts
cmp
sahf
out
xchg
or
push
data16
pushw
add
aad
sar
loope
mov
cltd
jle
push
in
ficoml
iret
inc
mov
js
es
call
out
insb
rcll
adc
repz
and
lcall
push
subb
jmp
aaa
js
sub
cmp
roll
inc
fs
les
cltd
filds
jg
pushl
xor
jl
adc
adc
mov
jae
mov
incl
aam
outsl
sbb
sarb
stos
popa
fwait
jbe
loope
addr16
cmpsl
cmp
mov
or
das
cli
jmp
or
shlb
push
cwtl
jge
sub
dec
cltd
test
xchg
add
call
cld
sub
outsl
mov
je
repz
xlat
sub
shrl
out
shrl
fsin
push
add
fildll
stc
repz
adc
cli
idivl
call
cld
decl
sbb
xor
inc
ja
jae
and
iret
adc
pushl
add
in
add
adc
jo
rclb
je
addr16
push
loope
rolb
std
push
sbb
jg
cmp
sbb
jne
daa
inc
pop
repz
mov
pop
jge
cmpsl
jne
incl
mov
jmp
rolb
outsl
adc
inc
xchg
cmc
pop
pop
cltd
rcrb
mov
call
sarl
addl
or
xor
inc
mov
jmp
orb
mov
mov
sub
sbb
idivb
shll
mov
decl
clc
pusha
nop
idivb
xorb
test
jecxz
sbb
pop
cmp
cld
cli
add
lcall
sub
cmp
fs
pop
ds
mov
loop,pn
cmp
fcmovnbe
mov
and
jae
sub
ss
fnstcw
sbb
hlt
and
imul
incl
lret
popl
push
int
push
push
xor
repz
movsb
add
fiadds
call
fbld
popf
mov
mov
incl
push
sub
sbbl
bnd
mov
or
cmp
lahf
into
imul
add
mov
sbb
jle
ljmp
insb
pushf
pop
cmp
out
lahf
fidivs
scas
or
inc
sub
jnp
pop
jb
inc
mov
std
mov
push
adc
add
clc
push
dec
cmpsb
fcomps
notl
sub
lcall
rclb
xor
push
sti
imul
push
pop
aam
xchg
sbb
movsl
loope
sbb
lcall
mov
xor
cmpsl
pop
or
and
ret
jns
cmp
jmp
jmp
pop
add
cwtl
cmp
adc
sbb
mov
sti
incl
idivb
mov
addl
push
jg
enter
pushl
xchg
icebp
adc
fisubs
inc
and
jp
ret
mov
inc
mov
mov
jb
lret
lock
xchg
mov
loope
jmp
mov
call
cld
jmp
loope
sub
lcall
mov
jge
movsl
pusha
mov
lahf
test
lcall
or
dec
and
into
out
stos
mov
xor
xchg
ljmp
mov
jno
mov
sub
shlb
les
adc
imul
dec
add
pop
dec
loop
cmc
incl
mov
jae
xchg
adc
pop
pop
xchg
fcoml
pushl
push
daa
cmp
inc
xor
movsb
mov
cmpsb
ret
pop
mov
cmc
push
call
push
ret
rcrb
into
es
insb
xchg
cmp
dec
sbb
pop
sub
cltd
fdivrp
dec
ljmp
mov
pushf
push
dec
sarl
sub
lcall
int3
mul
jnp
or
incl
cmp
sbb
lods
testl
das
adcb
jle
je
test
ljmp
and
into
mov
into
xchg
loop
sbb
fdivrl
jl
xor
jg
sub
ret
adc
daa
imul
daa
jle
jno
jp
push
sbb
in
call
xorl
mov
cmp
inc
negl
std
inc
repnz
add
jmp
push
adc
mov
add
sbb
inc
lret
xchg
aad
fidivs
incl
icebp
cmpsl
sub
cli
outsl
jg
testb
icebp
push
xlat
pop
adc
sbb
push
cmp
movl
stos
repnz
test
push
mov
cmp
clc
mov
in
jne
xchg
cmc
clc
dec
cmp
aad
in
out
jge
sbb
jl
mov
loop
out
decl
cmc
pushf
and
mov
sbb
push
inc
scas
push
imul
lcall
cmp
rcr
lahf
push
js
fists
xor
lret
push
mov
or
pop
jae
das
clc
jmp
xor
sbb
mov
mov
fimuls
pop
adc
mull
mov
pop
lcall
loopne
loope
andl
pop
sub
cld
xchg
jae
push
mov
push
loopne
mov
push
xchg
pop
cld
mov
mov
jbe
xor
jmp
mov
popa
mov
aad
aam
push
sub
and
insl
cmp
je
movl
call
cmp
lea
and
popf
cwtl
in
jb
call
mov
call
dec
push
rorl
arpl
jp
in
mov
imul
ret
cmp
inc
xor
fdivl
in
repnz
ljmp
out
in
arpl
mov
inc
jmp
outsl
loopw
adc
add
das
cli
cmp
les
rcl
js
xchg
sahf
addr16
push
sbb
icebp
jo
jb
mov
jle
loop
adc
ss
mov
lods
es
mov
inc
jbe
test
rorb
call
push
xchg
test
inc
cli
cmp
xchg
adc
mov
push
test
mov
scas
push
out
bound
testl
dec
mov
pushl
sarl
mov
mov
xor
push
inc
push
sub
call
cmp
testb
lea
inc
data16
shrb
jno
sbb
dec
xchg
mov
jnp
xor
call
movsb
dec
leave
mov
cmp
sub
xorl
and
lcall
mov
xor
dec
push
sub
or
cld
fstl
notb
sbb
lahf
fwait
or
jmp
push
fdivrs
cld
inc
dec
rorb
xorl
inc
rolb
ljmp
repz
mov
ljmp
mov
sub
stos
test
xchg
leave
jno
inc
xlat
mov
scas
icebp
jg
pop
stos
push
pop
es
jecxz
dec
xor
ret
mov
inc
and
and
rcll
adc
or
sub
mov
push
pop
arpl
mov
in
icebp
mov
test
jbe,pt
push
adc
lods
sbb
and
push
lret
pop
push
adc
rol
xchg
pop
js
incl
mov
movsb
mov
xchg
scas
adcl
nop
les
jns
push
lods
ljmp
xor
cmp
inc
into
int3
cwtl
lods
inc
dec
into
scas
andl
sbb
xor
sti
icebp
sbb
je
xchg
cmc
hlt
inc
out
jp
out
sarl
cmpsb
push
in
sub
add
idiv
call
pop
xchg
add
push
icebp
sub
mov
dec
aam
aam
lcall
push
inc
mov
rcrl
lds
scas
mov
mov
mov
jmp
mov
test
pushl
in
or
xchg
or
dec
inc
cmp
aam
push
testl
cli
scas
incl
gs
pop
mov
jecxz
stos
clc
sub
push
push
mov
not
subb
js
out
push
div
lods
ljmp
mov
loopne
je
adc
adc
jecxz
pop
loopne
test
cmp
and
adc
into
mov
pushl
mov
outsl
push
cmc
pop
mov
xor
inc
mulb
jge
pushl
cld
daa
sarb
push
rdpmc
out
sahf
inc
outsl
sti
push
adc
pop
jmp
pop
mov
or
or
adc
es
rclb
loopne
lcall
dec
and
mov
sti
lds
sub
scas
negl
or
or
fisttps
and
std
frstpm(287
je
dec
sbb
cmp
mov
jmp
mov
mov
lods
std
enter
adc
pop
popf
pop
inc
ret
pop
dec
mov
push
adc
add
out
aaa
pop
pop
pop
mov
push
repz
xchg
fdivr
lcall
sub
aad
jmp
sub
mov
test
and
dec
ja
jge
cmpsl
mov
call
scas
ljmp
cmp
mov
enter
xor
cwtl
xor
roll
lcall
mov
std
adc
ret
inc
sub
sbb
sbb
faddl
cmp
mov
in
jbe
fwait
mov
ss
pop
jno
cmp
in
mov
fs
inc
push
push
mov
neg
clc
xchg
jnp
push
jmp
incl
bound
pop
push
xor
adc
push
jo
aam
std
pushl
mov
cltd
lret
testl
adc
add
jno
rorl
inc
or
lcall
dec
xlat
pop
pop
sbb
int3
das
enter
cmpl
jnp
scas
popf
ss
jge
decl
jmp
imul
stc
nop
stos
pop
fdiv
and
push
cmp
jp
or
out
xacquire
sub
daa
test
and
rcrb
xor
mov
test
js
mov
jle
xor
xchg
sbb
push
addr16
dec
sbb
sbb
repnz
and
fisttps
inc
inc
popf
cmc
jnp
push
mov
call
or
xchg
aam
les
jae
push
mov
or
or
mov
pop
jle
mov
rcrb
dec
cmp
jns
xor
xchg
repz
mov
lock
mov
adc
shll
xchg
fstpl
das
push
push
dec
outsl
incl
rcrb
inc
inc
lods
jge
into
push
jg
xchg
in
push
int
addl
or
mov
aas
and
enter
push
pop
ret
sub
jmp
pop
dec
mov
inc
lcall
js
fldl2t
or
hlt
in
add
xor
aad
gs
pop
mov
jns
pushl
cmp
ss
int
imul
fsubr
dec
sahf
add
jle,pt
sub
cmp
push
call
cld
push
add
and
xlat
aad
notl
mov
mov
insl
aad
xchg
xchg
push
sbb
aaa
cld
decl
jle
xchg
mov
scas
test
fdivrp
decl
aas
inc
mov
js
jae
jmp
dec
inc
loop
push
mov
cld
jmp
in
push
fcmovne
xor
jo
jbe
mov
cmpsb
add
mull
dec
imul
pushl
sbbb
in
jns
in
es
ss
push
mov
mov
ljmp
xchg
cltd
pop
adc
call
xor
lret
mov
lods
add
push
and
jp
aaa
dec
repz
jo,pn
pop
push
pop
fiaddl
call
push
into
sbb
or
mov
ja
add
inc
mov
push
or
incl
or
jl
ret
mov
outsb
mov
mov
pop
pusha
or
call
sbb
fidivs
add
popa
int
pop
divps
inc
xchg
cs
mov
dec
and
jp
and
inc
xor
lret
insb
cmp
or
xchg
pop
ljmp
mov
or
fists
int
jge
mov
dec
dec
jle
or
mov
and
lcall
sahf
cld
adc
push
adc
adc
xchg
jg
clc
inc
nop
or
fcomip
and
incl
xor
adc
test
mov
or
mov
sub
pushf
lods
jg
call
out
xor
rorl
xor
fistps
push
mov
xchg
xchg
mov
jecxz
or
sub
mov
pop
xor
loopne
lahf
mov
shr
ds
inc
jae
adc
inc
outsl
dec
adc
shll
rolb
inc
fdivrl
pop
inc
and
push
pop
std
jmp
stos
insb
aas
pop
jns
cmp
jg
pusha
pop
push
and
inc
call
adc
jge
sbb
cmc
imul
fwait
daa
adc
jbe
lcall
lods
push
cmp
out
sub
xchg
mov
lea
push
mov
call
ss
inc
jae
add
add
and
or
clc
fcmovbe
mov
fwait
out
jl
dec
int3
fs
sbb
movl
cmpb
nop
setb
sahf
mov
pop
adc
rorb
inc
mov
sub
push
stc
pushf
sahf
push
into
xchg
mov
fwait
scas
and
xchg
ljmp
pop
inc
push
insb
jns
dec
sahf
mov
stos
stos
dec
hlt
lods
stos
fiaddl
xor
pop
dec
add
inc
je
repnz
pop
fcmovu
fisttpll
inc
mov
lret
mov
loop
divb
mov
fdivrl
sbb
dec
ljmp
and
adc
ljmp
pushf
fs
jno
adc
pop
or
adc
push
jecxz
faddl
xchg
sbb
jmp
pusha
or
sysenter
dec
xchg
divb
jecxz
mov
mov
out
mov
incl
jl
fucom
idiv
add
and
rorl
jp
add
or
adc
add
jns
aaa
sbb
inc
loopne
aaa
push
xor
test
add
jns
xor
ret
cmp
cltd
inc
cli
incl
cli
xchg
das
and
lcall
mov
pushf
dec
dec
push
pop
clc
stos
nop
jg
ljmp
jbe
fisttps
iret
mov
adc
mov
fdivl
mov
jmp
fstpt
and
mov
cld
fistps
pop
xchg
xlat
mov
sbb
ret
divl
decl
ljmp
xchg
fwait
adc
movsb
enter
fidivs
in
xor
adc
dec
jae
ljmp
clc
fimuls
xor
mov
and
loop
lret
jmp
and
roll
lcall
aaa
xlat
inc
stos
xchg
mov
jo
fidivrs
test
pop
adc
add
das
clc
popa
adc
push
cmp
cmpsl
sbb
mov
xchg
xor
test
xlat
xor
mov
faddp
call
sti
mov
cld
or
xchg
sub
xor
rcrl
jmp
pop
icebp
and
pop
addr16
popa
fiadds
repz
decl
bnd
push
sub
movsl
dec
test
orl
loopne
pushf
mov
mov
les
mov
or
mov
mov
int
shll
xlat
add
xor
push
aad
jmp
fdivrl
loopne
jmp
cli
lods
mov
mov
sti
fcmovnbe
sbb
add
cwtl
xlat
stos
mov
push
xchg
pop
jecxz
decl
fsts
xchg
fdivl
out
imul
in
sub
insl
sti
movsb
or
jmp
sub
leave
test
jge
add
rolb
push
into
push
lahf
test
icebp
clc
decl
icebp
ss
pop
and
adc
pop
popa
inc
mov
aam
cmp
dec
cmp
pushl
push
paddsw
push
push
jmp
mull
ljmp
inc
jb
stc
mov
lcall
addb
pop
cmp
iret
and
cld
mov
sbb
jl
jbe
cmp
sbb
sub
adc
jmp
insl
sar
push
movsb
out
and
jnp
out
sbb
fs
les
cmp
sti
js
movsl
in
imul
pushl
xchg
adc
stc
sbb
jge
cmp
arpl
ret
repnz
jmp
iret
cwtl
or
test
stos
test
movsl
outsb
or
mov
jmp
ljmp
sarb
xor
lcall
mov
outsl
fwait
pop
lds
pop
or
sbb
cs
inc
cmp
test
dec
sarb
pushl
cld
mov
pop
mov
mov
dec
mov
mov
inc
int3
sub
bound
call
lahf
mov
test
mov
movsb
adc
test
pop
bound
sarl
hlt
add
lods
or
add
lods
mov
lahf
std
and
aaa
xor
inc
aaa
dec
pushl
outsl
push
inc
mov
clc
mov
mov
pusha
cmpsl
sbb
cmp
imull
ja
rclb
incl
dec
and
xchg
filds
cmp
add
jmp
jle
dec
mov
faddl
jl
push
sub
dec
ffree
out
mov
loope
push
rcrl
lcall
xor
add
push
ret
or
cwtl
or
mov
add
mov
add
cmp
push
or
rol
pop
mov
pop
jbe
repz
xor
jmp
pop
mov
lds
pop
hlt
sub
repnz
shl
inc
hlt
xchg
xchg
mov
lcall
mov
mov
xchg
cltd
jnp
out
test
sbb
mov
jp
lcall
fisttpll
sbb
movsl
test
ja
add
out
push
subl
decl
sub
das
pusha
fisubs
out
and
bound
in
fwait
ds
jb
inc
out
shrl
ljmp
es
cmp
andl
dec
inc
outsl
mov
jo
sbb
lcall
dec
pop
cmp
lret
cmc
or
cli
lock
imul
lea
add
jne
xlat
dec
add
sub
or
call
loope
xor
xorb
test
sbb
rcll
sub
ret
inc
out
push
jo
push
mov
mov
and
pop
mov
jae
mov
idiv
jmp
push
out
mov
fistpl
jne
or
mov
fwait
cmp
lcall
fldl
lock
sub
mov
jbe
and
add
xchg
arpl
ljmp
sbb
lock
jmp
out
and
outsl
clc
mov
daa
xor
adc
dec
jecxz
insl
and
cmp
push
cld
call
push
mov
add
testb
or
popf
outsl
lcall
cmc
jp
mov
jae
cs
add
sub
push
int3
dec
jmp
outsl
mov
les
sub
or
das
jnp
pop
adc
cmp
addr16
inc
pop
nop
or
fldl
fwait
sub
outsl
scas
xor
fs
lods
mov
adc
push
jmp
ljmp
add
cmp
add
xlat
mov
popa
testb
fwait
or
inc
cmp
or
pushf
gs
and
mov
mulb
jne
into
leave
ljmp
mov
into
xlat
ja
adc
jb
cmp
or
pop
pushf
bound
sar
mov
popa
jg
mov
push
lea
pop
adc
aam
mov
shlb
dec
inc
mov
or
jg
push
sti
cmp
cmp
inc
mov
jbe
sbb
les
ljmp
stos
push
mov
pop
lods
imul
sbb
xor
inc
in
push
jmp
lret
xchg
pop
sar
jns
movsb
jecxz
adc
mov
lods
cwtl
andl
mov
sbb
fs
int
jmp
outsl
mov
loop
jb
pop
insl
lods
xchg
inc
repz
jmp
pop
jl
dec
fidivrs
imul
adc
cmp
add
cmpsl
gs
dec
into
jecxz
sbb
jg
jmp
push
jnp
repnz
jns
mov
pop
test
push
cmp
add
xlat
push
inc
or
stos
xchg
fsubl
repz
addr16
adc
fistps
mov
lock
cs
and
test
add
call
mov
fisubl
test
inc
adc
mov
mov
pop
jmp
scas
clc
call
mov
movsb
xor
mov
sbb
rclb
sar
lcall
stos
fldl
push
iret
or
or
or
mov
decl
push
rcrl
lods
xchg
pop
jg
nop
and
stos
pop
mov
insl
icebp
pop
fwait
rclb
idiv
incb
mov
addr16
mov
mov
push
shll
iret
lea
xchg
push
lcall
aam
out
fidivl
mov
push
xchg
lahf
scas
sbb
ljmp
jbe
decl
insl
imul
arpl
xchg
xor
out
mov
cmp
insb
lcall
or
xor
ds
xor
icebp
adc
xor
test
or
and
jo
fidivl
jmp
inc
push
cltd
xchg
testb
outsl
mov
cwtl
cs
sub
aaa
mov
push
sub
sbb
jmp
pop
mov
and
stos
rcr
test
mov
movsb
jns
mov
sbb
les
aam
mov
add
daa
hlt
or
int
xchg
pop
or
mov
pushl
or
je
shlb
or
mov
in
mov
mov
in
stos
dec
scas
in
xchg
inc
dec
scas
xor
mov
dec
jo
fsubrl
cmpsl
xchg
lcall
jg
mov
retw
pop
pusha
cli
mov
push
ljmp
mov
xor
pop
mov
jmp
xchg
sub
and
in
inc
add
adc
adc
icebp
gs
mov
sarb
mov
bound
sbb
xlat
popa
ror
jp
jg
incl
xor
jg
cmpsb
sbb
mov
rcll
call
jbe
pop
jo
mov
andl
mov
int3
mul
xor
inc
pop
xor
mov
call
xorb
sarb
scas
push
aam
mov
fisttpl
sbb
lcall
sub
out
sub
loop
sub
inc
fdivs
out
xor
sub
inc
push
mov
fimull
xchg
test
xchg
cmpsb
fldcw
mov
add
lret
xchg
mov
dec
lock
jmp
aas
test
pop
push
push
out
outsl
mov
jl
out
mov
or
out
cli
lahf
testb
ljmp
xor
jno
inc
sahf
cmp
test
das
pushl
pop
push
inc
push
cmp
stc
push
jbe
mov
mov
dec
pop
insb
icebp
pop
jp
in
xchg
xor
pop
mov
and
push
int
push
push
mov
les
push
das
in
insl
mov
out
int3
pop
inc
fidivrs
test
jecxz
pushl
popf
push
jo
mov
adc
dec
push
or
rcrl
decl
hlt
lods
outsl
push
jmp
xchg
inc
sbb
negl
aad
jecxz
cmp
decl
jle
aaa
std
or
in
xchg
xchg
addb
repnz
mov
leave
sub
pushl
imul
lea
or
dec
vmread
outsb
sbb
sbb
js
ljmp
std
adc
pop
xchg
cmpsb
dec
mov
xchg
aam
sub
outsl
mov
incl
jo
aad
js
leave
or
pop
push
pop
insb
fidivrl
lcall
mov
out
jmp
bound
cmp
mov
dec
jmp
out
pushf
cmp
decl
sbb
adc
pop
rolb
test
cli
jb
push
sti
inc
mov
and
ud0
jle
in
fldcw
cmp
push
mov
scas
mov
packsswb
adcb
jmp
ret
jp
cmp
mov
sub
cmpsl
scas
stc
cs
jmp
loope
aam
xor
add
push
jg
lock
mov
dec
leave
adc
add
std
jmp
xor
add
push
outsl
ljmp
cmc
sbb
jle
xchg
cmp
jle
cmpsl
call
cmp
sbb
cmp
xchg
cltd
xor
outsl
cmp
adc
fmuls
pop
xlat
sbb
ljmp
out
xor
imul
rcl
jecxz
mov
push
mov
xor
stos
add
xor
iret
xchg
cmpsb
jmp
ja
sar
mov
mov
lcall
xchg
push
adc
or
pop
cmpb
into
fmul
cmp
cmp
popa
lcall
inc
xchg
pop
sbb
inc
jb
adc
rolb
and
call
mov
pop
and
or
xlat
gs
movsl
jl
jnp
cmp
push
movsb
int
fs
dec
cmp
xor
cmpsl
shr
pop
mov
cs
loop
jae
into
stos
xor
ljmp
imul
and
cmpsl
sbb
clc
pusha
outsb
arpl
mov
adc
cmp
ds
or
or
jnp
sub
pop
and
inc
cld
repz
shll
decl
or
iret
pop
popa
icebp
sbb
push
push
sti
cs
mov
int3
jne
outsb
int
movsb
or
sub
push
jne
test
adc
cwtl
pop
push
das
pop
out
inc
xlat
xor
inc
cmp
dec
mov
incl
pop
out
in
mov
in
inc
sbb
insb
sbb
and
jnp
in
or
or
ret
xchg
xchg
cwtl
std
les
or
aas
cmp
mov
xchg
das
cli
fsub
mov
xlat
jns
call
push
ss
out
fisttps
stc
pop
sti
enter
jns
pop
in
push
cmp
xor
fisubs
or
ljmp
shl
jo
jb
cmpsl
xchg
stc
enter
test
jp
cmpsl
add
jmp
xchg
cmp
loope
jns
movsb
stc
sub
add
jg
dec
jg
daa
lea
aad
lret
adc
stc
testb
lret
aad
xchg
ljmp
out
rcrb
sub
leave
add
push
pop
cld
icebp
sbb
jmp
pop
push
test
lret
imulb
in
out
mov
call
jg
popf
jmp
add
push
insl
push
jne
xor
cmpsl
pop
push
cmp
test
jmp
add
pop
lods
push
ja
lds
push
pop
add
stc
rcrl
inc
ficoml
pop
incl
and
jno
mov
sub
pop
cmpsb
xchg
inc
shll
cmp
jecxz
decl
lock
cmp
cltd
loop
add
mov
into
dec
in
adc
ljmp
fldt
push
loopne
sti
outsl
pop
mov
aam
insb
hlt
xor
sahf
and
aaa
cmp
inc
push
lods
sbb
mov
es
pop
push
jg
shrl
gs
lea
pop
mov
lods
pop
dec
xchg
or
push
repz
xlat
in
fcomi
fcmovu
lahf
loopne
and
ret
push
fstps
daa
jge
jecxz
xor
fsubl
addb
pop
lahf
inc
add
and
mov
push
outsb
cmpl
xor
sub
sbb
pop
pop
mov
jmp
icebp
mov
clc
imulb
shlb
mov
outsl
enter
push
xor
std
iret
pusha
jnp
idiv
ljmp
stos
lods
jae
jmp
mov
mov
cmpsl
mov
shrl
call
jne
mov
cmpsb
and
mov
push
sub
pop
push
outsb
lods
cmpsl
arpl
jmp
ds
dec
mov
popf
and
pushf
movsb
pop
cmp
aas
mov
bnd
adc
imul
incl
and
add
in
or
cmpsb
xor
jg
mov
adc
push
icebp
lcall
test
cmpsl
fnstenv
mov
pushf
lea
sahf
cmp
fildll
mov
cmp
mov
xor
mov
jno
mov
push
sar
fsubl
mov
stc
gs
mov
sarb
xchg
cmpb
jbe
xor
cmp
sbb
data16
ja
cmp
cmp
add
cmp
call
pop
xchg
int
mov
aaa
movsl
test
cs
adc
mov
call
mov
or
stos
fiadds
imul
adc
xchg
stos
into
mov
ljmp
lahf
lcall
pop
sub
mov
dec
out
dec
cwtl
dec
or
mov
fldenv
jge
push
sbb
and
repz
and
movsl
call
pop
adc
mov
movsl
loopne
popf
cs
and
aaa
cwtl
add
lahf
xchg
push
jmp
lds
add
test
shll
loope
jecxz
xor
lods
jb
insb
sahf
cmc
xlat
or
mov
lgs
data16
rcll
push
inc
dec
jbe
push
xchg
dec
and
incl
lea
cwtl
pop
xor
shll
xchg
outsl
push
pop
fstps
mov
insl
lcall
jmp
sarb
jne
scas
je
loop
movsl
sbb
je
icebp
and
addb
sub
call
cmp
sahf
cltd
clc
sbb
pop
xchg
dec
pop
aaa
xor
dec
lcall
sub
mov
shrb
xchg
mov
hlt
dec
js
outsl
inc
pop
mov
xchg
test
mov
and
sarb
pop
les
cltd
or
dec
bound
mov
xchg
lahf
cmp
gs
test
lods
mov
ds
idiv
jmp
call
mov
and
jp
cmpsb
mov
cltd
decl
pop
xor
pop
aad
mov
pop
inc
out
fnstenv
mov
xchg
movsb
shlb
push
jno
ror
or
ret
icebp
js
and
ljmp
xorl
cltd
shlb
pop
std
fistpl
push
stc
lock
call
sbb
dec
fbstp
add
sbb
xor
insb
jns
call
mov
pop
mov
or
aaa
cmp
dec
out
iret
out
inc
and
ret
push
jbe
push
sbb
xchg
iret
mov
fimull
jnp
cmp
sbb
out
dec
push
pushl
in
les
xor
repnz
ss
pop
sub
mov
mov
sub
mov
cwtl
mov
mov
jl
mov
test
fs
xlat
out
movsb
mov
js
mov
sbb
cmp
pop
pushf
cmp
decl
loopne
mov
shl
cmpsl
fisubrs
decl
in
and
xor
cmp
jp
aam
stc
jg
fmulp
popa
xchg
fidivl
pop
scas
incl
nop
jae
iret
repnz
cmc
int3
test
adc
xchg
push
pop
fcmove
and
ljmp
xchg
push
lret
popa
adc
xorb
loope
fwait
cltd
dec
pop
dec
mov
and
mov
dec
ret
loopne
daa
pop
adc
sbb
dec
dec
cmp
xor
sbb
xchg
adc
into
lret
dec
adcb
jecxz
lahf
sub
xchg
cmp
sub
pop
mov
incl
sub
int3
aaa
sbb
clc
lret
popf
jle
stos
inc
je
stc
lods
xchg
movsb
jg
ljmp
inc
outsb
sbb
sub
push
movsb
xchg
test
in
lret
sbb
dec
xchg
jmp
sbb
cli
and
je
xchg
sub
incl
mov
push
xchg
sub
or
add
incl
jge
mov
xor
daa
idivl
icebp
shrb
ljmp
call
js
out
inc
xor
jp
mov
ret
sub
sub
pushl
cld
sub
sbb
pop
and
cld
bound
add
test
ret
mov
je
insl
sub
popf
adc
insb
stos
or
lahf
roll
push
mov
insb
out
jg
xchg
cmpsb
xchg
andl
scas
icebp
fiaddl
dec
ficoml
lcall
sarb
into
or
rcll
add
stos
sarl
rorb
aam
or
lock
xor
lods
sub
mov
stos
dec
mov
in
sub
in
mov
sub
xchg
cmp
dec
push
sub
mov
pop
or
je
sub
rcrl
test
ljmp
cli
or
js
mov
rorb
aad
jmp
and
out
push
imul
in
pop
data16
sti
loopne
sbb
outsl
call
xor
inc
js
sti
lcall
in
test
cli
mov
xlat
add
sar
int
subb
mov
mov
mov
cwtl
lcall
cmpsl
ret
xor
leave
sti
mov
call
lcall
jnp
rcl
jb
mov
mov
mov
and
es
loope
incl
es
sbb
aam
mov
loope
pop
inc
mov
cmp
fs
test
mov
sti
cld
data16
sbbb
aam
sarb
divb
mov
sbbl
cld
pushl
les
inc
jbe
enter
xchg
arpl
pop
adc
sbb
xor
incl
xchg
mov
inc
cmp
jo
cmp
imul
ret
dec
add
pushl
xchg
into
sub
inc
clc
dec
shll
mov
push
ss
arpl
sub
lcall
xor
adc
sbb
and
cli
pushf
mov
fistps
call
adc
and
outsl
cmp
int
repnz
dec
incl
cwtl
cli
push
push
and
pop
xchg
pop
adc
fisttpll
cwtl
xchg
movsl
add
arpl
leave
inc
cmp
adc
pop
push
pop
test
mov
or
mov
daa
dec
cltd
addr16
sub
mov
hlt
lock
call
bound
movsb
pop
pusha
dec
pop
adc
jl
lock
fsubrl
mov
sbb
arpl
ljmp
sahf
pop
sub
sbb
adc
jge
mov
call
push
in
inc
jge
aaa
icebp
mov
add
adc
sub
sti
xor
addr16
jle
inc
fdivrp
jmp
sbb
aas
sbb
mov
mov
fsubr
jb
mov
mov
ffree
insl
push
push
cmp
sbb
push
xchg
cmp
push
enter
callw
or
test
rolb
aam
mov
jnp
jb
mov
jg
das
adc
dec
mov
into
cmpsl
arpl
into
repnz
in
jnp
jnp
mov
lcall
movsb
in
add
cmpsl
or
add
xchg
orb
incl
mov
cmpsb
loopne
in
dec
int
inc
sbb
jp
loopne,pt
sti
pushl
orb
aam
cmp
sbb
add
ret
repnz
jg
shll
cmp
pop
sahf
add
lock
xchg
jo
ljmp
sbb
adc
dec
dec
or
sarl
movsl
pop
ud1
mov
pushl
addb
adc
mov
and
or
inc
push
dec
ds
or
pop
popf
xor
jbe
mov
decl
add
adc
jae
lcall
jo
and
cmp
jne
xchg
enter
pusha
je
push
mov
push
jge
lds
xor
fadd
and
jle
xor
sahf
sbb
xor
xrelease
and
push
mov
out
lcall
xor
add
fs
sub
scas
cmpps
jg
mov
incl
scas
enter
jb
mov
push
dec
test
mov
test
sub
repnz
pushl
addl
mov
or
push
pop
lahf
xchg
shl
arpl
gs
push
jmp
or
addb
lret
mov
mov
add
push
jo
loop
clc
aas
mov
inc
iret
mov
xchg
jno
cmp
sub
fdivr
clc
push
gs
into
call
and
push
ljmp
mov
dec
mov
fidivl
sbb
jnp
cmp
lcall
and
fcoms
sub
cmp
pop
icebp
ds
mov
jg
pop
addl
flds
in
mov
lcall
lret
sub
mov
ror
fwait
lods
jl
push
aaa
jne
movl
dec
rcr
push
in
scas
push
mov
lret
loopne
lcall
sti
std
adc
cmpsl
mov
loop
lahf
rorl
mov
cmc
call
out
lret
call
adc
fs
xlat
fldt
shl
das
ja
call
dec
push
push
aad
fmul
sub
mov
fnsave
inc
dec
jno
mov
aas
mov
call
jne
pop
jmp
cmp
or
add
and
lods
popa
push
push
fcomps
mov
lcall
pushf
xchg
stos
xlat
pusha
sti
add
in
addr16
test
pop
in
push
sti
inc
dec
out
clc
mov
jp
add
inc
mov
movsl
pushl
stos
popa
es
adc
add
xchg
cmpsl
cltd
lock
loope
cmc
xchg
cmp
shlb
xchg
xor
mov
insb
addl
leave
stos
or
jle
xor
repnz
aam
aad
loop
push
int3
outsb
dec
mov
imul
push
mov
cmp
insb
ljmp
push
push
insl
test
sbb
pusha
xchg
push
fnstenv
les
lret
cmp
ljmp
inc
cmc
fcmovu
xchg
movsb
xor
je
iret
repz
jle
negl
fs
lcall
out
cmp
stos
adc
xlat
and
sahf
jl
insl
insb
mov
and
ret
ljmp
js
call
pop
imul
jnp
pop
jae
xor
sbb
fldenv
xor
loopne
das
pushl
std
jp
jne
pop
movsb
mov
inc
test
or
or
inc
nop
popf
shlb
inc
cld
jge
cld
flds
pushf
mov
stos
jg
aad
lods
mov
popa
lcall
jmp
lahf
sbb
sub
sarb
adc
rcrl
dec
jg
ljmp
mov
mov
into
dec
xor
dec
sbb
inc
pop
addr16
idivl
sbb
jle
hlt
bnd
xchg
aas
iret
dec
push
arpl
lret
mov
cmpsl
fistpll
mov
std
cmpsl
addr16
sbb
in
pop
lret
lods
movsl
jmp
or
ja
aaa
lret
ds
call
mov
fabs
cld
aas
in
pop
push
dec
cmpsb
push
xor
loope
sub
jp
stos
pop
mov
inc
addr16
xor
ud0
in
sbb
lock
in
or
roll
pop
addr16
jg
js
pop
lcall
sub
outsb
mov
test
cmc
cmp
out
rcrb
sub
clc
pushf
lds
in
orl
lcall
xor
jae
stos
mov
add
aad
lock
ljmp
pop
xchg
xor
popf
into
push
sahf
in
pop
push
cmp
aam
pusha
pop
cmpsl
loopne
push
outsl
pop
mov
cmpsb
lcall
nop
in
out
pop
inc
ja
call
fcoml
in
jbe
popf
inc
out
mov
jno
out
test
add
jnp
mov
insb
jmp
es
push
sbb
out
lcall
aam
in
int
add
jbe
xchg
arpl
mov
pop
clc
nop
push
jle
cli
mov
ljmp
incl
mov
and
mov
into
subb
fucomp
out
jmp
cmp
jmp
imul
outsb
pop
mov
push
and
push
push
inc
popf
aad
mov
rcl
lcall
call
arpl
push
call
cmpb
mov
call
incb
into
lret
dec
sarb
xor
fistl
jae
pop
repnz
mov
lods
jle
xor
add
pop
push
xchg
dec
loopne
lock
aaa
inc
cld
xchg
fdivrl
lcall
push
shrb
in
mov
fnstenv
xor
test
in
mov
jg
inc
mov
in
or
test
into
jb
test
rcrb
repnz
incl
daa
pop
frstor
mov
push
and
out
enter
xchg
pop
jnp
fidivs
jmp
jmp
test
gs
pop
out
and
jae
push
shlb
xchg
cld
pop
pop
ret
dec
mov
icebp
lods
mov
pop
mov
popf
xchg
movsl
shrb
cmpsl
inc
call
sub
cmp
jns
std
mov
roll
sbb
in
jle
std
push
js
jne
dec
jg
outsb
and
pushf
lahf
pop
icebp
jmp
lcall
test
ljmp
dec
pop
and
outsl
hlt
pop
cmp
lcall
jae
sub
dec
sbbb
leave
out
rcll
rolb
or
int
cwtl
test
lock
call
adc
add
pop
or
nop
clc
movsb
xor
rorb
loope
ljmp
fwait
adc
push
iret
in
inc
jg
fldlg2
pop
movl
sub
jns
ljmp
jecxz
mov
inc
dec
aaa
ret
mov
dec
add
test
jmp
mov
leave
mov
bound
and
pushl
sahf
adc
pop
ret
add
inc
mov
popa
jbe
test
aas
cmp
stc
mov
pushf
jp
incl
iret
test
out
pop
lahf
push
ret
mov
cmp
mov
push
iret
push
js
jle
call
test
mov
clc
cmpsl
fiadds
pop
sbb
sub
inc
cld
cmp
mov
stos
xchg
add
mov
popf
or
mov
xor
lock
mov
mov
int
fcomip
push
and
dec
fdivrs
mov
ja
cmp
fwait
jno
sub
dec
insl
mov
dec
jp
sti
out
or
pushf
xor
xchg
fsubs
mov
mov
fcomp
inc
xchg
int
flds
pop
jge
aas
sub
cltd
int3
adc
int
push
xlat
call
ret
clc
push
sbb
cmc
adc
push
push
cwtl
and
jg
mov
scas
insl
repz
repz
xor
cmp
push
adc
mov
lods
dec
enter
cmc
pushl
or
std
lcall
inc
imul
enter
xchg
nop
lods
xlat
fiaddl
cmp
pop
out
and
hlt
in
dec
xchg
call
pop
out
xchg
cmp
rcrb
sub
movsl
shl
jg
mov
shll
js
sub
mov
jge
nop
nop
jl
pop
dec
fisttps
and
or
cld
xor
sbb
icebp
insl
xor
inc
test
push
icebp
movsl
pushl
std
dec
psraw
mov
mov
imul
cmp
mov
sbb
decb
push
and
call
cmp
mov
std
sbb
mov
mov
and
or
pop
cld
lcall
xlat
jb
mov
push
dec
fldcw
sub
int3
js
dec
call
shrb
xor
lods
sbb
sarl
sub
sub
fsubrp
aam
lds
mov
arpl
xlat
or
mov
fxch
vdivps
call
ljmp
jns
jl
adcl
mov
pop
sbb
jbe
xlat
mov
lea
idiv
fwait
out
pxor
pop
out
out
negl
cmp
dec
loope
ss
jg
xchg
mov
dec
in
scas
fldcw
data16
ret
and
int
cmp
data16
bound
pop
insb
cli
stos
mov
incl
fisubl
loopne
cs
jae
es
dec
adc
mov
mov
iret
and
jge
mov
sub
dec
push
adc
pushl
jecxz
repnz
pop
adc
mov
mov
lret
movsb
jmp
mov
push
sbb
test
sub
setno
mov
int3
xor
mov
sbb
add
test
ljmp
xchg
loop
sub
mov
leave
jnp
out
xor
mov
inc
sub
in
and
decl
mull
lret
sub
lcall
cltd
in
icebp
jl
xor
jg
mov
jne
xchg
in
and
mov
in
mov
lea
lock
inc
cmp
imul
out
fstpl
xor
and
adc
jno
outsl
clc
decl
xchg
and
sbb
gs
int
stos
ficoms
cmp
stos
mov
jmp
mov
pop
out
stos
addr16
sbb
ds
lods
movsb
fisubrl
jg
decl
inc
sahf
aas
jb
and
cmp
mov
test
inc
sub
mov
stc
sub
pusha
jb
dec
dec
ja
inc
out
shrl
sub
ret
incl
xor
in
cmp
xchg
ljmp
mov
cmpsl
inc
les
jg
in
pusha
xor
jne
std
mov
out
xchg
andl
das
inc
lret
mov
ss
jmp
mov
sbb
xor
bound
jb
loopne
movsb
daa
sbb
cmc
adc
push
call
repz
rcll
int
daa
or
les
xchg
cmc
call
push
imul
pushl
scas
test
cmpsl
fcompl
into
loope
pop
pusha
push
mov
cmpsl
mov
inc
fistps
ljmp
pop
dec
aad
fwait
xchg
lods
xor
or
sahf
sub
rorl
mov
inc
mov
rcll
out
inc
jnp
insb
mov
ja
out
ret
idiv
jmp
insl
or
dec
and
fsub
dec
push
sub
jae
mov
roll
push
fisubrl
aad
ljmp
test
cmpsb
xchg
fdivrs
insb
pusha
and
enter
adc
xchg
addl
scas
ljmp
cld
cli
push
and
imul
stos
mov
jb
pop
fisubs
decl
aam
and
mov
pop
mov
lret
arpl
ret
jne
cltd
push
decl
mov
inc
push
fs
imul
or
push
rolb
jmp
imul
and
or
mov
xchg
out
pusha
ljmp
dec
sub
jne
scas
dec
stc
jle
sbb
jle
mov
pop
pushf
lret
sub
jae
idiv
ljmp
fldenv
and
push
pop
pop
cmp
push
jmp
push
insb
push
pop
or
cmp
push
outsb
aaa
mov
push
jbe
jno
jmp
imul
xchg
dec
mov
ret
es
shrl
inc
add
lea
ficomps
fimull
pop
jp
loop
sbb
sar
and
ljmp
mov
push
sub
jae
dec
fldlg2
cmp
in
push
call
enter
lods
ljmp
jg
scas
push
xor
bnd
fwait
inc
mov
adc
cmp
mov
das
out
xchg
and
push
xor
sub
pop
jmp
decl
lods
add
in
mov
faddp
dec
loopne
div
jg
add
fcompl
jb
lcall
push
lcall
or
mov
cld
test
mov
iret
cmp
iret
mov
es
lcall
outsb
jge
add
cmp
jbe
movb
out
mov
inc
incl
jecxz
cmp
int
insl
movl
ret
outsl
sbb
adc
js
or
xchg
out
pushl
js
jnp
je
loope
and
sbb
arpl
or
mov
incl
xchg
gs
test
iret
adc
cmc
add
push
cmpsb
jno
in
outsl
fdivl
test
into
push
gs
push
out
cltd
mov
cmp
jnp
stos
repz
jb
mov
jmp
call
dec
xchg
clc
scas
int3
nop
andb
and
rclb
das
movsl
imul
xchg
pushl
std
out
pop
pushf
movsb
pop
jmp
jno
loope
fcomps
mov
out
jg
idiv
call
popf
inc
sub
sub
sbbb
int
ds
mov
inc
mov
sub
inc
xor
mov
or
cld
mov
out
xor
icebp
hlt
ss
icebp
mov
or
mov
loopne
add
test
pop
fnstsw
jo
cmp
sbb
push
stos
jo
mov
rcrl
repz
dec
adc
add
data16
jg
call
ja
cld
inc
adc
mov
in
das
jb
lods
and
int3
and
pop
mov
pop
pop
mov
xor
mov
hlt
jmp
mov
cli
adc
pushl
les
adc
or
out
and
sar
movb
inc
sbb
mov
pop
pop
adc
ljmp
mov
in
out
aas
incl
das
push
es
push
aaa
jb
into
clc
call
or
sub
sbb
hlt
icebp
repz
mov
and
gs
ljmp
mov
test
lds
gs
ret
sti
push
cmp
out
mov
sub
mov
cli
xor
ja
ret
cmovbe
pop
in
or
sarb
jmp
decl
push
adc
inc
test
nop
loopne
pusha
data16
jo
fiaddl
test
pop
cmc
fsubrl
vpunpcklwd
adc
mov
pop
xchg
insl
xchg
mov
pop
cmpps
jo
iret
fmul
cmpsb
lock
std
or
mov
je
inc
idiv
jg
lret
add
sbb
outsb
lods
adc
bound
jmp
jb
inc
inc
mov
pushl
xchg
or
test
dec
bound
mov
jbe
adc
pop
xchg
sub
sub
xchg
inc
pop
imul
xor
addr16
add
call
dec
or
xor
ss
inc
and
or
mov
clc
jle
cmpsb
dec
jge
lret
mov
lret
lods
and
mov
inc
test
aas
addr16
xor
decl
push
inc
into
movsb
aaa
fistpl
sub
data16
pop
lea
sbb
dec
decl
or
out
iret
add
mov
lea
stos
or
enter
jecxz
loope
fwait
es
push
frstor
cmc
ret
xor
jno
xchg
shrb
xchg
out
or
mov
inc
and
and
ljmp
push
sbb
flds
popa
mov
dec
sub
push
sar
dec
mov
out
inc
out
lcall
sbb
xor
sbb
lcall
test
enter
push
push
scas
inc
xchg
inc
cmp
jnp
fwait
nop
mov
decl
push
mov
dec
loop
sarb
or
sub
decl
je
mov
mov
rcr
lahf
mov
or
fisttpll
aaa
sub
ss
pop
decl
xor
sahf
movsl
es
add
ret
popa
lock
cmp
sbb
call
sbb
aaa
push
mov
div
outsb
xlat
mov
sti
ja
pop
in
adc
in
xor
cmp
sbb
outsb
lods
sbb
aas
pop
pop
jg
jbe
ljmp
inc
and
xchg
push
aad
pushl
cmc
lock
xchg
xor
sbb
push
jl
inc
xchg
lcall
pop
mov
cmp
pop
pusha
outsl
xchg
xchg
pushf
stos
sbb
call
daa
out
adc
daa
jl
pop
stos
sarb
rorl
jmp
cli
xchg
imul
or
lods
lods
scas
add
test
cmp
scas
cld
andb
mov
dec
into
ror
inc
jecxz
scas
in
imul
cmpsl
xor
aaa
sbb
ret
jmp
mov
pushf
inc
sarl
js
int3
cld
movsl
mov
add
push
sbb
loope
test
hlt
daa
jge
imul
sbb
in
xchg
cmc
cwtl
cli
jns
push
jg
sub
xchg
add
dec
xchg
cmp
fwait
pop
pop
sub
pushl
outsb
cmp
hlt
or
inc
popf
iret
dec
xor
fsubs
jmp
lods
ljmp
test
mov
lahf
fstl
test
jp
movb
rol
ljmp
jg
mov
pop
dec
bound
dec
mov
in
pop
dec
movsl
mov
push
das
adc
lahf
xchg
insb
xlat
dec
mov
and
sbb
sarl
or
scas
scas
lods
inc
and
out
sub
jg
bnd
arpl
stc
loope
iret
or
shll
fistpll
orl
pop
mov
dec
aam
lret
cli
xor
jle
imul
xlat
cmpsb
rol
bnd
cs
lahf
sub
ljmp
clc
dec
and
inc
js
outsb
sub
addr16
push
jb
bound
inc
mov
jmp
mov
or
fisubs
inc
push
push
push
inc
insb
push
push
pop
andl
jns
jns
sub
fbstp
push
inc
ss
arpl
sub
pop
fimuls
inc
lcall
ljmp
dec
xchg
or
repz
mov
lret
aad
jmp
fs
sbb
ds
pushl
add
clc
mov
add
pop
loope
ja
ljmp
idiv
call
cmc
inc
mov
xchg
dec
mov
push
ljmp
cmpb
mov
push
add
inc
decl
mov
arpl
aam
dec
loope
mov
sub
call
ret
imul
lcall
mov
or
sub
movsb
pop
in
adc
push
and
cwtl
test
incl
sbb
cmp
push
mov
xchg
xor
jmp
jge
push
scas
lods
lds
pop
cmp
hlt
adc
dec
adc
mov
decl
inc
jb
adc
pop
mov
hlt
jnp
dec
sbb
repnz
or
pushf
inc
decl
movsb
enter
addr16
loope
xlat
clc
or
and
mov
mov
jne
mov
lret
cli
call
dec
add
mov
insl
push
lock
sbbl
or
xchg
cmp
imul
xchg
jae
imul
inc
pop
push
add
test
pushf
into
lret
xlat
popa
push
xor
out
jae
jge
aaa
enter
jl
stc
cmpsb
pop
mov
sbb
xchg
mov
dec
insb
cmp
cmpsb
sbb
ljmp
or
sbb
cltd
in
jecxz
fdivs
cltd
ss
loope
jmp
add
leave
fs
cmp
pop
cld
cmp
ficompl
mov
inc
fisubrs
sub
mov
jmp
sahf
addr16
int
imul
pop
das
testb
adc
dec
cmp
mov
push
jbe
jp
in
add
fwait
lods
jmp
addr16
decl
push
inc
xchg
mov
rcl
inc
out
inc
ret
xchg
ljmp
nop
xchg
out
ljmp
mov
mov
and
dec
adc
mov
bnd
jg
call
sub
or
dec
out
aam
test
inc
jecxz
idiv
mov
stos
xchg
xor
jle
and
insl
inc
jge
decl
cmpsb
mov
aad
cmpsb
mov
repnz
mov
mov
cmpl
decl
pushf
inc
xor
insb
in
clc
sahf
dec
stos
lods
test
sarb
loop
xor
jmp
clc
std
push
insb
int3
nop
clc
sbb
mov
ja
in
xor
in
call
pop
push
xchg
jmp
mov
in
gs
fidivl
aad
dec
je
mov
jg
xchg
pop
test
test
std
xor
lock
leave
in
popa
fdivrs
mov
pushf
dec
incl
insb
add
fs
add
mov
repnz
xchg
dec
xor
decl
sbb
add
repz
ret
stc
cs
adc
add
decl
push
mov
pop
inc
pop
fidivl
mov
or
sar
ljmp
push
jo
aas
push
pop
lods
xchg
mov
pop
icebp
dec
int
loopne
or
bound
jg
icebp
jg
scas
sub
testl
mov
lods
jae
ljmp
lcall
mov
stos
orb
dec
and
xchg
mov
xor
cmp
loope
pushf
std
push
pop
ret
mov
sub
pop
jl
push
jmp
out
jb
orb
mov
xchg
push
mov
popa
aas
movsb
push
mov
add
in
mov
push
and
xor
in
int3
inc
int3
fdivr
pop
incl
scas
pop
fcmovnu
lods
movb
xchg
inc
mov
scas
mov
adc
mov
ljmp
loope
adc
inc
dec
adc
mov
pusha
push
stos
mov
jl
je
lret
data16
mov
pop
push
sbb
ja
pop
cmpsl
cld
sub
dec
push
icebp
mov
aam
stc
lcall
outsb
scas
andb
mov
cmpsb
push
jmp
aam
dec
mov
ret
adc
mov
inc
sbb
lret
lret
outsl
mov
or
decl
adc
or
rolb
repz
loope
ljmp
xor
mov
and
mov
dec
movl
cmp
out
dec
sbb
pushl
cmpsb
cld
fldenv
pop
push
imul
in
add
mov
test
jbe
jg
in
lcall
sbb
add
jle
sarl
rol
or
push
adc
cmp
cmp
fstpl
in
xorl
jbe
mov
fcomip
mov
lahf
decl
repz
lret
cmp
mov
fwait
jo
hlt
packsswb
jmp
decl
push
aas
popa
jmp
pusha
dec
xchg
jle
xor
es
mov
loop
mov
mov
inc
mov
sub
sbb
repz
jecxz
mov
out
fstl
ljmp
sbb
push
add
add
and
xor
mov
decl
cmp
lock
jecxz
xchg
xor
inc
gs
test
mov
decl
add
clc
ret
or
fsubrs
shld
cltd
les
sbb
in
fcoml
xlat
xor
inc
and
roll
push
xchg
jle
push
shll
inc
pop
add
sar
xor
pushl
jge
lcall
xchg
int3
lahf
dec
xor
fcompl
repz
es
pushl
and
mov
mov
ret
mov
push
cwtl
add
call
pop
std
xorb
mov
scas
jp
xchg
mov
insl
aas
stc
fmuls
xchg
stos
incl
stos
push
adc
das
ss
xor
cmc
aaa
stos
mov
ja
mov
decl
lret
xor
ja
jecxz
clc
js
push
ret
hlt
add
std
push
mov
mov
push
push
mov
fimuls
push
mov
cmp
pop
sub
and
inc
cld
or
lods
stc
inc
and
xlat
pushf
stos
incl
mov
dec
dec
or
sub
mov
loopne
shll
sti
push
aas
cltd
lods
dec
jg
test
stos
out
xchg
or
pop
jecxz
mov
pop
jns
mov
jbe
int
cmp
dec
fidivrl
push
jp
inc
sub
sbb
imul
iret
outsl
ljmp
adc
xchg
fs
and
mov
xor
jp
push
das
cmpl
mov
push
mov
call
mov
sub
das
loopne
cltd
loop
adc
into
sbb
ja
les
lcall
inc
pushf
mov
adc
fcomip
decl
imul
aas
and
sahf
jle
adc
xchg
jmp
out
pop
mov
pop
push
test
or
inc
loope
jae
fdivl
repz
cmp
inc
add
movsl
cmp
ljmp
push
push
inc
shlb
scas
mov
dec
and
mov
inc
cmp
ljmp
add
aaa
cld
cmpsb
movsl
and
loope
movsb
and
lcall
jmp
inc
test
mov
push
push
inc
lds
dec
sub
push
lcall
pop
ljmp
lods
mov
iret
cli
mov
imul
decl
call
test
pop
leave
jo
shll
pusha
or
dec
mov
in
lea
and
cld
popf
inc
and
pop
leave
cli
cmp
in
call
push
jnp
mov
lock
out
iret
aad
cld
fdivr
dec
sbb
aam
enter
rorb
or
jmp
aad
fidivrl
inc
jg
ljmp
sub
and
in
xor
cmp
enter
addr16
cmpsl
or
xchg
jmp
cmc
aam
pop
lods
lahf
xor
mov
pusha
sub
pusha
movsl
mov
xchg
lahf
xchg
pop
ds
dec
pop
outsl
movsl
inc
call
fwait
adc
aaa
mov
iret
mov
jl
inc
les
push
mov
push
xlat
insb
test
pop
xor
fcomip
movsb
xor
out
pop
inc
dec
cmp
clc
mov
push
mov
pop
clc
call
cmp
ss
adc
lods
out
push
pop
mov
cwtl
pop
test
add
out
mov
jg
leave
mov
int3
in
xorl
int
xchg
fndisi(8087
sbb
and
push
pop
movsl
jno
mov
mov
sub
jge,pn
push
mov
inc
cmpsb
adc
les
mov
mov
sbb
mov
push
xchg
dec
jne
lahf
mov
icebp
cli
add
call
mov
push
xchg
stos
dec
lcallw
fsubl
jmp
call
jns
or
gs
push
dec
dec
push
xor
inc
fs
test
sbb
mov
sub
inc
mov
cld
sahf
push
ljmp
push
cmp
or
jl
jns
ss
pop
cmpsb
or
aas
inc
jl
inc
rolb
dec
inc
mov
shl
sbb
cmpsl
dec
std
lods
iret
lods
dec
mov
ljmp
add
loopne
dec
je
adc
dec
insb
sbb
xchg
test
xchg
cmp
jg
into
cmp
xchg
mov
imul
xchg
add
cmpsl
pop
cmc
incl
shlb
lds
cld
cmp
pop
dec
mov
add
push
icebp
sbb
jne
xchg
stos
rcr
cmp
jle
mov
inc
jmp
pop
mov
ja
mov
adc
push
sar
fistps
ss
gs
add
jecxz
mov
jg
roll
jnp
stc
jno
mov
inc
mov
int
mov
outsb
mov
adc
scas
jecxz
loope
orb
ljmp
shlb
mov
mov
dec
addr16
pushf
fisttps
outsl
out
xchg
scas
in
pusha
daa
push
jg
jnp
add
add
incb
lret
mov
ds
jbe
pop
arpl
mov
daa
mov
xor
test
inc
dec
adc
pop
sub
movsl
popf
lock
ret
incl
in
sub
xchg
xchg
clc
push
xor
data16
cmpb
mov
mov
mov
gs
jmp
arpl
rcrl
xchg
jecxz
aaa
fdivrl
push
bnd
out
push
lret
xchg
jnp
pushl
movsb
daa
inc
and
sbb
push
jnp
pop
repnz
and
xchg
pop
xchg
pushl
std
stos
ljmp
insl
pop
push
and
push
xor
cmp
cltd
flds
mov
pushl
dec
and
fstps
stc
int
or
add
decl
sub
push
pop
cli
cmp
dec
clc
roll
lret
aaa
std
add
pushl
mull
mov
dec
shlb
push
mov
mov
cli
ljmp
xor
arpl
xor
icebp
jmp
mov
pop
bound
cld
sar
pushl
mov
cmc
mov
jge
out
in
rorl
sbb
cmc
dec
ds
and
jg
ret
pop
mov
out
mov
sbb
mov
cld
push
js
push
je
sbb
sahf
out
leave
cld
stos
and
popa
call
dec
cwtl
aad
jg
mov
add
sti
pop
cli
pop
adc
dec
pushf
enter
ljmp
popf
mov
dec
call
xchg
jnp
rcl
imul
xchg
dec
sti
ret
stos
hlt
inc
sub
aaa
dec
pop
mov
popf
ljmp
hlt
cld
cs
mov
pushl
mov
jmp
mov
dec
popa
mov
push
and
cwtl
ljmp
stc
inc
or
rorl
sub
xor
sbb
sub
cmp
incl
and
pop
sbb
mov
push
addb
shll
out
incl
push
fdivrl
shll
mov
and
iret
shr
xchg
jo
adc
and
std
fcomip
call
mov
push
pop
stos
andb
sar
jg
dec
add
xor
call
fcoml
inc
arpl
ret
lahf
mov
jmp
mov
mov
pop
fisubs
jl
push
ljmp
push
popf
bound
arpl
aas
cmp
in
cmpsb
clc
aam
call
inc
cld
pop
cmp
push
into
out
xor
pusha
rorb
mov
xorb
aad
test
mov
xor
addl
call
mov
cmp
and
xchg
imul
dec
add
cs
negl
lods
ljmp
lds
out
es
jae
mov
addr16
mov
inc
pop
pop
cmc
jp
aas
les
sbb
stos
icebp
inc
scas
mov
cwtl
dec
xchg
aad
test
jmp
jmp
ljmp
xchg
lods
test
mov
je
or
fistl
fdivl
inc
std
xchg
jbe
mov
ret
add
fisubrs
xchg
lret
add
cli
in
push
scas
aad
add
inc
sbb
loope
stos
arpl
or
xchg
jp
je
xor
das
mov
lret
inc
inc
inc
ljmp
test
daa
movsl
cmpsb
ds
xor
and
sbb
mov
incl
ja
mov
stos
dec
call
jbe
ret
add
std
call
cmpsl
test
or
cwtl
cmp
add
test
cwtl
popf
aas
cli
sub
test
int3
pop
sub
test
cmp
pushl
rcr
out
jmp
sub
shll
jecxz
mov
xchg
cwtl
in
shr
sbb
pop
cli
dec
sub
jnp
jnp
and
movsl
test
push
jbe
inc
cmpsb
decl
insb
xchg
clc
pop
in
es
pushw
popw
ret
jmp
pushl
pop
mov
mov
jno
mov
adc
clc
sub
mov
mov
xchg
scas
sahf
or
rol
addr16
xor
adc
lret
das
jno
push
mov
subb
lret
aas
push
enter
xchg
daa
aam
or
xor
mov
add
cltd
test
pop
andb
ret
mov
push
jecxz
jge
das
aas
jae
xchg
and
pop
mov
jo
pop
cmc
scas
sbb
dec
lds
adc
rcll
clc
leave
jmp
movsb
and
mov
rcl
stc
adc
and
mov
and
inc
and
sbb
insl
or
xor
jmp
arpl
dec
ja
add
call
add
popf
or
pop
ret
daa
jp
dec
in
fdivl
repnz
xor
loopne
cld
incl
mov
cmp
scas
in
or
jbe
sbb
mov
mov
sbb
jnp
ljmp
mov
addl
pushl
jnp
jge
mov
jae
mov
frstor
test
aaa
jl
pop
nop
push
ljmp
hlt
stos
in
test
dec
jmp
outsl
adc
enter
pop
leave
jo
cltd
mov
sbb
daa
mov
das
clc
incl
pop
mov
loopne
inc
in
test
in
enter
pushl
push
mov
pop
leave
test
repz
rol
aam
jecxz
loope
fdivrs
je
xorl
stc
push
fsubrl
mov
push
arpl
std
mov
das
shrb
int
mov
pop
pop
push
arpl
outsb
pushl
es
mov
mov
imul
cmp
sahf
sbb
mov
sub
or
fcmovne
out
add
shl
in
mov
ja
shl
fwait
bound
or
jmp
xchg
pop
test
shr
or
jne
mov
clc
mov
cmp
call
dec
les
cli
iret
mov
stc
insb
popa
pushf
stos
jb
push
xchg
jle
pop
int
pop
mov
mov
lret
inc
xor
fwait
jo
sbb
pop
lcall
aas
icebp
add
ret
or
out
jmp
cmp
jecxz
lahf
mov
pushl
cld
fbstp
adc
push
in
data16
aaa
pop
rcrb
call
mov
cltd
sahf
pop
pop
add
push
jge
xchg
lods
mov
outsb
and
scas
incl
add
push
cwtl
call
mov
lods
fs
sti
lcall
add
inc
and
cs
lods
out
test
ljmp
clc
push
movsb
or
fnstsw
int3
cli
aad
push
stos
test
inc
int3
lcall
inc
outsl
lods
popl
pop
adc
in
pop
cmp
mov
or
jg
push
outsl
lock
xor
das
mov
xor
pushf
and
shll
mov
decl
cld
jge
pop
out
mov
scas
mov
lahf
out
add
pop
cmc
jo
out
xchg
sbbb
mov
mov
rcll
xchg
add
ljmp
repz
aad
test
stc
daa
ret
in
daa
repnz
sbb
int
call
aam
xor
push
mov
dec
in
icebp
jae
xor
fmulp
out
lcall
call
push
jmp
aad
imulb
shrb
pop
dec
xor
sub
jne
call
imul
xchg
pop
xchg
mov
je
stc
xor
add
int
pop
jg
loope
and
mov
push
fmuls
fsubr
in
pusha
outsb
imul
push
pop
aaa
mov
mov
es
jmp
add
insb
aad
jo
ficoms
shll
mov
rorl
mov
inc
mov
dec
xchg
cmpps
fxrstor
int3
cmp
ljmp
data16
aaa
xor
dec
push
icebp
adc
xlat
lahf
mov
out
mull
xchg
hlt
das
dec
pop
jecxz
ljmp
sbb
inc
jnp
mov
push
jmp
fs
lret
in
pop
cmp
mov
push
popa
js
dec
cmc
jbe
mov
imul
mov
lcall
adc
mov
leave
jge
nop
pop
in
jo
adc
adc
pusha
sbb
and
iret
push
sbb
pop
lds
mov
sbb
jmp
cmp
jnp
xor
lahf
cltd
test
xor
insl
sbb
sbb
pushf
sub
repnz
ljmp
ljmp
fiaddl
outsl
mov
push
ja
jl
pop
mov
pop
adc
call
dec
dec
adc
flds
pop
push
push
xor
jb
xor
jmp
sbb
incl
mov
or
and
adc
jecxz
test
xlat
lcall
cmp
shll
lock
push
inc
mov
lahf
fidivrs
push
pop
imul
data16
ss
out
mov
add
dec
les
subl
adc
push
divl
adc
aaa
add
pushl
cmp
insb
outsb
mov
cmp
imul
dec
out
cwtl
cltd
ret
imul
pop
push
pusha
xchg
lcall
push
in
les
jnp
dec
bound
push
jb
leave
les
mov
mov
test
mov
jecxz
fxch
mov
scas
or
mov
pop
mov
add
repz
pop
stos
or
jnp
test
call
jb
sahf
lods
cmp
mov
sbb
xor
mov
xchg
cmpl
addb
pop
cld
pop
sti
pop
out
rorl
add
inc
cmp
in
sbb
outsb
inc
push
mov
scas
pop
sti
mov
sbb
push
fldt
jg
cld
pusha
cmp
pushl
sub
popf
adc
inc
jbe
lock
in
jmp
jo
fildll
pop
mov
jns
loop
add
clc
fwait
or
rol
stos
pusha
imul
aad
pushl
es
and
or
scas
outsl
xchg
pop
dec
sbb
test
or
sbb
adc
out
cli
jg
xlat
push
mov
xor
add
sbb
jo
cmc
test
movq
dec
ljmp
out
jo
sub
call
add
push
xor
inc
cmpsb
mov
xchg
inc
sub
incl
idivb
rorb
mov
pop
sub
jecxz
pop
fiaddl
stc
mov
add
aas
jl,pt
cmp
xchg
leave
inc
jno
dec
lret
icebp
or
repnz
in
sbb
mov
jmp
andb
lcall
loopne
ljmp
jmp
icebp
out
ds
lods
inc
shlb
test
or
es
inc
inc
insl
ljmp
or
aas
bnd
ds
inc
incl
jae
insb
test
cmp
mov
mov
in
divb
rolb
decl
mov
mov
ret
cs
push
aaa
out
orl
aas
bound
adc
out
loope
sbb
push
xor
xchg
mov
repnz
pop
push
and
sub
cmc
mov
cmp
dec
pop
jg
jmp
daa
adc
gs
or
add
icebp
inc
cltd
push
add
popf
or
inc
aaa
cld
xor
fiaddl
or
xor
xor
mov
dec
rclb
pusha
cmpsl
test
add
pusha
ljmp
xor
jno
in
jns
mov
or
fldl
sbb
ljmp
push
mov
mov
jl
pop
sarb
int3
dec
add
or
jnp
addr16
xchg
cmp
sub
mov
jae
push
add
and
ljmp
xchg
cwtl
fs
jno
pop
scas
testb
pop
inc
mov
das
inc
push
dec
dec
mov
ljmp
cli
inc
jnp
jns
pushf
push
adcb
xor
dec
decl
mov
roll
and
out
mov
sahf
mov
or
test
or
sub
push
pop
cld
add
jmp
inc
mov
leave
mov
push
push
hlt
mov
je
adc
out
or
repz
or
cmpsb
pushf
jmp
imul
add
sbbl
pusha
sahf
cmp
lods
adc
movsb
iret
and
xchg
es
ret
jecxz
adc
fstps
inc
aaa
sbbl
es
in
dec
and
shr
inc
pushf
enter
adc
or
ss
and
lret
out
pushl
je
cli
mov
cltd
mov
sub
add
sub
mov
movsb
push
es
dec
xchg
pop
mov
rclb
or
decl
pop
rcrl
fdivrs
cmc
mov
stos
pop
out
push
jbe
adc
sub
adc
mov
pop
je
or
in
cmpsb
ret
aas
mov
lock
cmp
int
pop
push
pusha
negl
adc
cli
cmp
pop
mov
popf
out
mull
mov
imul
pop
mov
mov
jne
cli
ljmp
jg
xor
mov
test
inc
jo
push
lret
iret
mov
hlt
cmp
jno
dec
sbb
outsb
push
loopne
hlt
cmpb
sbb
sub
decl
mov
in
loopne
in
int3
mov
pop
popf
pop
xchg
add
incl
sbb
mov
mov
add
fildl
sub
out
addr16
jbe
xor
js
daa
dec
mov
ret
call
jno
fimull
jp
xor
repnz
sub
push
out
out
test
inc
imul
and
jmp
cmp
pop
mov
aam
pop
scas
les
dec
test
scas
leave
jl
sub
inc
sbb
in
test
push
ljmp
sub
adc
lcall
jmp
aad
scas
sub
ss
jmp
mov
adc
int
pop
test
call
jbe
inc
mov
les
cmp
repz
stc
cli
popl
cltd
pop
notb
ret
call
sbb
orb
mov
out
loope
jecxz
nop
clc
popa
rcll
mov
movsb
insb
cmpb
cld
jg
jmp
xor
xor
mov
aas
sub
mov
pushl
call
sbb
and
sub
mov
mov
imul
in
lcall
xchg
cmp
xchg
lcall
lods
mov
xchg
ret
shl
aad
call
adc
pop
or
fisubl
mov
mov
or
pop
icebp
jg
out
dec
xchg
xchg
cmpsl
loopne
ret
lock
mov
inc
sub
dec
sub
jmp
sti
dec
lods
pop
add
js
sbb
mov
fcomps
sub
lods
sti
add
repz
cwtl
jo
cmp
mov
mov
ja
and
xchg
ljmp
nop
xchg
inc
sarb
jge
enter
add
xor
dec
jno
clc
incl
cmp
cld
sahf
lock
push
push
jecxz
push
jae
mov
scas
loop
dec
mov
in
lahf
mov
nop
and
popf
mov
push
sarb
jmp
decl
jp
mov
aas
in
and
cmpsl
js
aas
pop
mov
data16
mov
sbb
lcall
inc
scas
sub
dec
bound
push
or
ljmp
push
jmp
daa
xchg
push
or
jno
mov
or
sub
lcall
cmpsb
imul
dec
adc
cmc
ficompl
cmc
adc
mov
inc
fstpt
ljmp
div
shll
test
iret
push
popf
or
scas
inc
mov
lock
sub
imul
call
sti
mov
xchg
rorl
loope
push
mov
outsb
mov
mov
sub
loop
cmp
dec
sub
test
aaa
mov
cmpsb
lods
jg
movb
cmpl
ja
ljmp
push
leave
jge
sub
test
ja
scas
jnp
cmp
fwait
icebp
push
insl
enter
out
in
decl
adc
ret
jae
lret
cwtl
mov
push
xchg
adc
sub
or
inc
dec
mov
das
fsubrs
inc
cmp
js
gs
cmp
pop
inc
or
out
mov
popf
cmp
neg
in
imul
push
out
xchg
cwtl
cmp
mov
decl
das
fsubrl
bound
stc
lahf
adc
enter
pop
movsl
or
cmp
inc
sub
decl
and
cmp
outsl
out
push
adc
lock
cmp
gs
ja
jmp
jmp
imul
stos
xor
nop
daa
sub
xchg
adc
xor
push
add
outsl
mov
in
and
mov
int
lock
cmp
mov
lcall
push
inc
stos
pop
cmc
orb
xor
push
sbb
jp
xor
mov
call
push
or
loop
aad
add
or
adc
xorps
mov
call
dec
pop
mov
pxor
sub
push
cmp
loopne
pop
mov
inc
xchg
dec
xor
or
movsb
incl
loope
iret
test
pop
stos
push
mov
inc
test
test
addr16
lcall
notb
cmp
ja
xor
sbb
je
mov
dec
test
jb
fistps
mov
push
in
xchg
dec
sub
and
sahf
sub
fnsaves
mov
or
dec
testb
lcall
arpl
pop
and
insl
shr
or
adc
mov
mov
push
add
push
stos
call
mov
cli
pop
mov
mov
add
hlt
dec
daa
push
jne
pop
call
fisubrl
inc
pop
sysret
inc
add
outsl
movsb
iret
xor
cmc
lret
jae
adc
cmp
leave
stc
push
pop
mov
inc
pop
aaa
jmp
decl
xchg
lea
xchg
jns
popf
sub
push
add
inc
psrld
xor
out
sahf
pop
mov
mov
cltd
enter
pop
shll
mov
in
iret
ja
fisubrl
xor
repnz
je
loope
cmpsb
mov
loop
ljmp
adc
jle
sbb
xchg
in
xor
mov
in
pushl
jnp
fidivrs
pushf
pop
sub
bound
cmc
push
popa
mov
xchg
fists
mov
mov
lcall
adc
rorb
popa
jnp
pop
mov
dec
fcompl
aaa
outsl
mov
hlt
ja
test
decl
inc
mov
jl
fcomps
sbb
jg
xchg
pop
stos
in
fwait
mov
push
mov
sar
decl
out
mov
mov
sub
negb
and
and
test
decl
pop
mov
in
pop
jle
adc
cs
jnp
xchg
out
mov
xchg
fs
mov
out
cli
push
fstl
jg
inc
shr
xor
pusha
int
ret
leave
jp
mov
mov
ljmp
sub
mov
insl
mov
aam
xor
dec
jno
add
ljmp
scas
and
sbb
fmuls
add
movaps
dec
mov
pop
shll
inc
push
incl
push
fwait
jecxz
adc
mov
lret
sub
ljmp
lcall
repnz
jl
xchg
cmc
xchg
xor
adc
in
adc
push
and
xchg
stos
test
call
pop
popa
mov
push
mov
and
test
push
leave
lods
fidivrs
add
dec
fwait
add
hlt
cld
mov
add
adc
inc
outsl
adc
xor
pusha
lods
outsl
adc
pushl
and
scas
mov
jmp
nop
pop
in
push
mov
mov
rorb
mov
push
test
or
adc
mov
in
call
inc
sub
or
sbb
mov
shlb
push
fucomp
loope
mov
scas
dec
ljmp
pop
iret
pop
ret
mov
mov
mov
leave
sbb
pop
or
aam
fcom
lcall
call
xor
add
fsts
mov
sub
ljmp
push
dec
fstps
filds
pusha
mov
inc
lods
sbb
faddp
pop
jl
xor
cmpsl
lret
incl
fwait
sub
adc
sub
stos
pop
movb
inc
and
jbe
incl
shlb
xchg
enter
push
adc
sbb
cmp
cmp
call
jmp
jae
sub
push
mov
ret
in
setno
xchg
aas
push
push
mov
mov
pop
insl
add
mov
lods
nop
pop
mov
ljmp
xchg
jo
mov
xchg
std
cltd
cmp
mov
andl
add
out
fwait
movsl
push
mov
cmp
fstps
add
fs
lcall
push
adc
mov
shl
jecxz
leave
or
and
dec
xchg
cld
mov
shlb
mov
cmp
pop
mov
adc
push
fidivl
mov
fcomip
pop
or
fnsave
pop
lds
lods
fisttps
fwait
lret
mov
faddl
fxch
add
clc
ds
jmp
arpl
adcb
das
dec
add
pop
jmp
popf
test
stos
outsb
cmp
out
inc
jae
je
push
test
and
fcmovb
sbb
decl
les
cmp
test
stos
call
mov
xor
test
fcomip
scas
xchg
mov
dec
jge
adc
dec
lock
cld
mov
aaa
xchg
xchg
adc
and
adc
jmp
dec
jecxz
mov
test
adc
mov
xchg
icebp
je
push
jne
jnp
jmp
jnp
inc
ja
mov
lret
loope
test
pop
pand
test
lock
cmpsl
fs
lcall
loop
jle
sub
pop
push
out
dec
imul
maxps
jg
leave
mov
ljmp
int
adc
or
add
pop
dec
cmpsb
loop
mov
iret
loope
lret
nop
dec
jne
mov
mov
imul
call
sub
or
mov
xlat
cmp
pop
jl
sub
popf
dec
add
lret
decl
sbbl
push
cmpsb
sub
add
dec
psubusb
and
mov
incl
ljmp
es
stos
mov
jmp
mov
sbb
push
outsb
popf
std
ljmp
push
dec
insb
jmp
xchg
repz
dec
push
aam
lods
out
xchg
add
xchg
test
cltd
jge
adc
push
nop
mov
ljmp
fptan
fwait
mov
leave
or
in
add
lea
jge
xchg
gs
pop
jae
jg
pop
stos
int3
or
or
sbb
pushf
push
adc
mov
fs
mov
pusha
je
jnp
iret
sbb
xchg
mov
sbb
jmp
in
jle
lcall
fisubs
or
push
inc
xchg
push
xorl
mov
cmp
push
loopne
frstor
cmp
cmp
adc
xor
insb
pop
xchg
xor
decl
out
addr16
icebp
jg
cltd
jne
movsb
jge
adc
adc
xchg
lahf
dec
xchg
loopne
cmpsb
jmp
push
cmpsb
inc
lcall
mov
fs
rclb
jge
push
hlt
sbb
es
cs
add
adc
mov
scas
jb
in
clc
xor
xchg
repnz
jmp
xor
hlt
sbb
mov
inc
and
add
jle
into
inc
push
stc
xor
ljmp
cmp
add
push
push
add
sub
push
cmp
xor
push
or
mov
pop
push
cmpsb
push
mov
pop
pop
pushl
cmpsb
jge
icebp
lods
aas
mov
int
fmull
mov
pop
push
lock
idiv
testl
cmpl
shl
xchg
int
mov
mov
jae
scas
jp
lahf
inc
inc
sbb
call
and
pop
pop
mov
mov
divl
aad
andb
cmp
bound
ljmp
jno
mov
imul
push
xchg
jecxz
mov
test
lcall
pusha
lahf
lret
sarl
mov
inc
insb
mov
lock
jmp
mov
or
inc
lods
sub
in
jbe
mov
jmp
enter
addr16
decl
cmc
xchg
shlb
mov
or
jb
sbb
pop
outsb
mov
fimuls
sti
xor
lcall
inc
insb
movsb
jne
and
xlat
sub
fnstcw
push
xor
out
cmp
loopne
int3
jmp
popl
decl
jbe
jns
int3
mov
inc
jns
inc
xor
adc
jno
jae
pop
arpl
xor
js
and
adc
push
xchg
enter
lahf
pushf
std
mov
xchg
push
data16
sar
jg
lcall
inc
cli
jbe
rcr
sub
mov
push
fists
jge
inc
cmp
cli
mov
mov
mov
xchg
xchg
rcl
fsubrs
cld
pop
int3
loop
fistl
rcl
pushf
or
nop
xor
ja
or
outsb
sub
das
insb
outsl
sub
fiaddl
jmp
mov
lcall
xor
aas
jae
xor
rcl
sbb
out
lahf
sbb
das
loopne
inc
imulb
test
test
pusha
xchg
call
or
mov
lahf
adc
aas
jbe
mov
paddb
adc
cmp
mov
nop
popf
push
imul
inc
add
sub
out
mov
xor
lcall
jb
fistps
popa
lahf
xchg
out
and
push
sub
decl
addr16
scas
insb
dec
cmp
enter
jecxz
add
push
fldt
cs
rorb
lds
in
adc
sar
dec
sahf
pushf
lods
xlat
push
fisubl
es
fmul
add
cld
call
negl
fsubs
jp
cmp
dec
in
xchg
mov
or
cmp
out
push
movsb
mov
icebp
int3
jl
out
jp
dec
add
jmp
aas
sub
adc
cmp
scas
fistpll
mov
push
aam
popf
xor
shlb
incl
popa
shll
sbbl
push
xorb
or
mov
pusha
and
into
pop
aaa
movsl
dec
mov
pop
hlt
ljmp
aad
dec
mov
mov
pop
xchg
fsubrs
lock
lcall
mov
imul
cmp
int3
mov
cmc
dec
xor
mov
lcall
scas
pushf
jmp
jae
inc
mov
or
daa
scas
enter
adc
jmp
add
testb
mov
jecxz
push
scas
orb
rcl
or
adc
incl
mov
jnp
jns
sbb
inc
push
jno
or
jae
jmp
cmc
mov
cmp
push
cmp
cwtl
movmskps
and
jo
pop
sbbl
adc
stos
mov
out
clc
sbb
out
out
add
loope
push
push
das
inc
test
lcall
push
fwait
xchg
mov
cmp
xor
push
inc
pop
mov
pop
sub
in
call
adc
push
fists
loop
cmp
dec
inc
cmp
call
pop
neg
xor
jmp
clc
add
test
sbb
fstl
loope
jg
mov
xor
gs
addr16
dec
jne
xchg
pop
sbb
pop
push
mov
sbb
stos
decb
fisubrs
adc
lock
aam
dec
pushl
mov
call
scas
jg
sahf
mov
je
mov
mov
shr
or
ljmp
decl
insl
dec
popf
repz
fldt
sbb
pop
arpl
push
fildll
incl
fld
aaa
scas
popa
dec
xchg
jnp
cld
jae
push
lds
cmpsl
popf
call
aas
adc
mov
cwtl
lock
add
mov
add
add
dec
push
call
push
push
push
push
push
or
add
xor
push
call
mov
ljmp
inc
and
mov
sub
mov
mov
shl
shr
or
xor
sub
fistps
filds
pop
sub
mov
shl
mov
shr
or
mov
inc
add
cmp
mov
jl,pt
pop
pop
pop
pop
add
jmp
ret
push
mov
push
movl
ljmp
add
or
rolb
test
je
push
mov
shr
shl
movzbl
idivb
decl
repnz
cmp
cmp
pop
je
adc
aaa
mov
xor
adc
scas
mov
inc
pop
ficoml
je
test
je
xor
push
xchg
mov
outsl
pop
je
push
inc
neg
mov
outsl
jle
or
adc
je
mov
subl
cmp
incl
test
push
push
push
mov
andl
add
pop
xor
inc
ret
mov
orl
sbb
adc
ja
or
push
or
int3
prefetch
or
mov
mov
cld
mov
push
lea
loopne
scas
ret
jp
out
mov
add
mov
call
or
leave
push
ret
push
inc
xor
pop
inc
xor
imul
fisttps
push
sub
jle
cld
mov
jp
testl
in
out
jne
into
mov
jg
pusha
dec
jae
pop
sub
adc
shlb
add
je
lea
push
pop
pop
push
push
lea
xor
xor
std
out
adc
mov
scas
xor
js
xlat
jl
mov
push
sbb
or
imul
push
orb
push
add
or
mov
ja
js
xor
jmp
mov
in
mov
add
mov
push
movsl
pop
aas
ds
sub
pop
push
dec
and
mov
mov
push
pop
icebp
pop
fildl
sbb
ret
cmpl
add
sub
mov
or
pushl
imul
pop
pop
fs
push
mov
clc
fidivrl
jl
adc
hlt
mov
push
push
sbb
dec
addr16
outsb
push
or
inc
add
adc
push
or
jo
jbe
out
jg
xor
add
testl
shl
add
mov
jg
inc
cmp
cmpw
jne
mov
add
cmpl
push
mov
mov
cmp
or
movl
push
daa
cmpl
jb
imul
pop
push
cmpl
loop
clc
or
rorb
test
jne
clc
push
jo
in
push
jmp
sti
fisubl
out
adc
cld
push
adc
adc
sti
push
lock
xor
inc
push
setp
fists
and
or
mov
pop
or
mov
sub
pop
push
sub
mov
adc
mov
addr16
mov
inc
shr
xor
pop
cmp
push
xlat
add
pop
adc
cmp
jne
push
addr16
or
jmp
sbb
mov
or
movsl
fdivr
cmpsl
inc
imull
mov
cmpl
pop
pop
cltd
scas
jo
aaa
ret
jle
gs
xor
popf
dec
scas
push
add
add
lock
mov
hlt
jne
cmp
jmp
inc
sub
jmp
push
add
mov
call
push
push
xor
movsl
loop
xor
mov
jo
pop
cmp
pop
hlt
sbb
lea
or
mov
dec
movsb
jmp
mov
mov
mov
xchg
sti
jbe
push
adc
ret
popl
fdivrp
push
ret
pushf
mov
jne
mov
and
cmp
xchg
aaa
adc
push
je
mov
adc
ret
stos
rcr
add
add
imul
loopne
and
lret
or
ret
add
cmpsb
sbb
cmpb
or
add
push
push
jo
sub
insb
cmpsl
mov
stos
sbb
xor
cmpsb
sub
push
push
mov
add
cmpsb
lret
inc
xchg
in
idiv
cmpl
add
mov
sarb
loopne
mov
and
clc
cmp
sti
pop
lahf
cmpsb
clc
push
sbb
and
sti
sbb
adc
cmp
mov
mov
inc
jg
inc
cmp
jl
cs
push
push
cmp
cli
lcall
cmpl
add
sbb
int3
je
dec
in
inc
xor
cmp
aas
test
cmp
cmpl
sbb
pusha
ja
add
ljmp
fldenv
xchg
mov
mov
std
dec
add
jbe
jb
or
add
cmp
jae
testb
jne
fs
jno
cli
and
loope
rcr
test
mov
jle
lea
fstpt
add
sarb
push
jne
push
pop
cmp
jg
mov
dec
lock
testb
lods
mov
inc
cmp
mov
mov
jle
nop
idivb
data16
inc
mov
outsl
clc
mov
rol
jg
testb
xchg
fistpl
adc
rorl
jp
mov
jle
lcall
adc
jmp
jnp
add
hlt
push
jge
cmp
push
inc
mov
cmpl
push
lea
inc
cmp
rcr
cwtl
cli
pop
sar
or
sti
movsl
loopne
inc
ret
push
je
push
inc
ficoml
sub
push
call
or
mov
shrl
or
mov
xchg
icebp
jae
hlt
aas
mov
jp
add
sar
aad
stos
jbe
divl
and
push
sbb
std
pop
mov
mov
pop
jae
push
movsb
pop
sarb
nop
ss
out
fs
cmp
cs
xor
imull
xor
or
outsb
jmp
jle
sub
sub
shr
mov
mov
daa
add
jecxz
sbb
pop
or
adc
in
adc
dec
mov
dec
mov
add
inc
or
add
mov
or
push
add
mov
or
rcr
je
add
inc
sbb
add
lods
clc
movb
popf
xchg
jo
lea
push
mov
pop
cmp
push
call
pop
inc
sar
add
mov
shl
cmp
pop
fcoml
jae
xor
test
mov
mov
jne
cmpl
stc
cld
or
push
imull
out
add
sbb
push
sbb
sub
addl
cmp
pop
pop
pop
lea
mov
sbb
mov
or
jg
cmp
jbe
sbb
mov
add
clc
push
push
pop
adc
pop
add
aas
pushl
lea
pop
mov
add
loopne
push
xchg
or
insb
push
sub
adc
pop
push
ret
and
in
adcb
pushl
pop
push
adc
je
xchg
movsl
je
cmpsb
sti
mul
lock
add
cmp
or
je
lock
and
dec
andl
mov
push
setnp
pop
arpl
jg
jl
push
or
shrb
cmp
je
lea
push
mov
or
xor
mov
sbb
jae
inc
add
inc
jae
andb
pop
or
lock
sti
add
or
sbb
and
test
push
adc
loopne
mov
pop
or
lret
ds
aaa
dec
dec
adc
jge
mov
neg
sub
stos
or
jne
mov
ljmp
int3
jbe
ficoml
cmp
andl
dec
push
sbb
in
cmpsb
dec
xchg
test
lea
lret
es
sbb
xchg
or
rcll
push
rcrl
adc
pusha
or
pop
int
adc
or
nop
xchg
mov
clc
xor
cmp
pusha
inc
lds
sahf
xor
negb
ljmp
push
cmp
ja
test
test
cmp
jne
sar
sete
mov
movzbl
pop
sbb
jge
mov
rcll
bound
cmc
pop
fmull
add
dec
fstpt
sbb
int3
lret
in
repz
jmp
cmp
outsb
inc
push
lds
push
mov
ljmp
aas
add
pushf
cmp
mov
in
pop
pop
test
sub
call
hlt
negb
sbb
cmp
pop
pop
je
push
leave
mov
add
cmp
jne
ljmp
xchg
mov
mov
fsubl
jno
pop
into
insl
into
push
mov
dec
rorl
jecxz
test
push
cmp
mov
push
hlt
movl
or
add
cmp
ud0
rolb
shll
push
bound
inc
or
std
push
push
flds
and
mov
sbb
sbbl
cmp
sub
cltd
jle
or
jne
cmp
movb
sbb
mov
into
testl
jp
xor
sbbb
add
inc
pop
jmp
inc
lods
ljmp
stc
cmp
test
pop
push
cld
ret
outsb
outsl
xor
and
mov
inc
push
cmp
insb
xchg
shr
pop
push
sti
push
outsb
or
push
int3
repz
outsl
aam
cmp
mov
shl
cmpb
adc
fucomip
pcmpeqd
testb
ds
fucom
int3
mov
ljmp
pop
sbb
andl
add
pusha
adc
sbb
fsubrs
add
cmp
movb
lcall
pop
cmp
ss
and
fdivs
mov
xchg
push
push
lea
int
cmp
mov
dec
or
sbb
hlt
shl
add
mov
int3
and
stos
and
gs
stc
cmp
and
sbb
and
inc
cmp
pusha
icebp
xor
dec
inc
mov
stos
mov
add
out
mov
mov
push
test
push
dec
push
loopne
outsb
cli
aam
js
mov
mov
cmpsb
fistps
adc
imul
push
push
divb
lds
sbb
or
add
xchg
push
jge
push
sar
insb
push
adc
xor
data16
enter
jmp
jmp
jbe
test
je
cmp
jo
inc
push
scas
add
push
sbb
lahf
inc
pop
call
insb
push
or
push
cmp
imul
inc
sub
dec
cmovle
lock
je
inc
cmp
sti
ss
lods
jne
div
inc
push
sbb
ja
push
or
pop
mov
inc
mov
sub
push
stc
gs
insb
adc
adc
and
cmp
jo
loope
shll
lea
add
out
mov
add
add
add
loop
inc
add
or
cmpw
lea
inc
mov
mov
dec
mov
lea
jl
out
fstpl
sarl
mov
dec
push
xor
orl
add
sbbb
add
clc
inc
iret
pop
xchg
adc
jg
rcrl
outsb
clc
shlb
dec
add
roll
dec
fmull
or
repnz
stos
ss
sub
mov
pop
mov
jge
mov
mov
mov
pop
mov
inc
inc
add
fbstp
add
andb
ds
dec
pop
mov
inc
add
cs
pop
jmp
ret
dec
idivl
cmp
push
cmc
mov
insb
jmp
or
insb
pop
push
int
and
push
lods
jmp
xor
sbb
pop
fcmovb
fstl
jmp
or
jl
pushl
pop
ljmp
inc
lahf
dec
das
push
push
inc
in
pop
inc
adc
jmp
insb
or
fldl
inc
or
shl
subl
jmp
and
and
icebp
movsl
pop
and
out
das
sbb
add
push
pop
pop
sub
xchg
cmp
add
loop
sarb
shlb
push
lock
sub
pop
dec
out
loopne
add
jne
push
cld
icebp
and
mov
shlb
cmp
jbe
fldcw
xchg
mov
test
movb
test
dec
popa
rclb
in
sub
sbb
add
cmp
push
inc
jno
and
mov
cmp
add
mov
shrl
mov
jae
mov
pushf
pop
pop
push
into
add
push
push
push
sub
fnstenv
add
xchg
sub
mov
sbb
mov
mov
push
test
xor
adc
ret
push
inc
mov
inc
push
shrl
jbe
mov
xor
movsl
adc
fs
stos
movsl
arpl
push
mov
xchg
xchg
inc
push
push
sbb
pop
je
push
ret
push
fsubr
bt
sbb
insb
insl
std
sbb
addr16
push
xor
out
sbb
or
cmp
sbb
mov
lock
pusha
testb
adc
add
dec
adc
jmp
inc
xor
jbe
pop
mov
popf
pop
test
adc
mov
and
shlb
int3
or
sbb
rcrl
addr16
add
test
jp
test
lea
inc
jge
push
test
rclb
fidivrs
add
add
inc
fldt
mov
cmp
test
call
lcall
je
and
push
or
jae
pop
pop
add
int
jns
jmp
or
jmp
std
jmp
sub
pop
cld
enter
mov
shlb
push
int
sti
insl
movl
mov
xlat
in
sti
ja
mov
bound
divb
ret
bswap
out
popa
lahf
ffree
jo
pop
ret
adc
inc
add
sub
xor
adc
push
push
mov
mov
adc
or
adc
icebp
jmp
daa
mov
bound
mov
addr16
add
les
fisubrs
push
jne
aaa
jbe
outsb
dec
jne
and
push
inc
fcomps
loop
sub
in
rcrb
ljmp
jmp
sub
ljmp
enter
pop
out
and
leave
repz
cmp
add
sub
sbb
in
enter
jbe
sbb
mov
add
mov
xchg
scas
or
mov
ljmp
ja
imul
cmp
aas
cmp
fs
in
xchg
repnz
je
or
pop
dec
xor
inc
or
rol
incb
cld
loopne
and
mov
mov
mov
add
and
call
roll
movzbl
loope
adc
pop
pop
cwtl
je
mov
cmp
push
mov
clc
sub
xchg
pop
loopne
sahf
popw
add
xchg
push
jl
sbb
movsb
lock
or
xlat
or
or
mov
add
repnz
push
push
adc
data16
nop
mov
stos
lahf
testl
in
and
insl
or
mov
jnp
stos
add
push
xchg
fimuls
xchg
mov
pushl
add
mov
mov
mov
jb
cmpb
mov
lret
pop
and
lea
push
in
test
cmp
ja
sub
inc
jecxz
mov
out
mov
lret
and
rep
inc
mov
inc
lods
sbb
jbe
pop
pop
in
cmp
xchg
in
mov
add
push
fnsave
jecxz
das
lret
mov
cmp
add
push
xor
dec
test
andb
mov
push
xorb
mov
add
sbb
add
jle
test
cmpb
mov
fisttpl
sbb
pop
ja
mov
add
test
in
jbe
xor
adc
jp
push
cmp
and
loopne
shl
imul
pop
roll
out
popf
cwtl
add
sbb
test
jo
pop
cs
sub
inc
inc
ret
mov
add
smsw
jl
sub
sub
js
cld
jne
mov
xchg
adc
cmp
inc
mov
mov
repz
push
mov
adc
mov
out
je
add
inc
cmp
sub
dec
inc
cmp
rclb
or
or
lahf
cmp
incl
jge
mov
dec
jge
xchg
cmpb
mov
cmc
dec
out
mov
jle
jl
lahf
lcall
sbb
call
push
shl
mov
stos
lea
repz
mov
fninit
add
mov
fdivs
std
mov
mov
scas
inc
es
inc
fldl
lahf
psrlq
inc
in
ret
or
add
lock
lcall
movsl
sub
jmp
inc
add
ret
inc
inc
cmpb
addr16
add
dec
xor
inc
cmp
stos
push
mov
cmp
shr
in
sub
jmp
pop
test
push
push
leave
or
sub
mov
pop
pop
pop
ficomps
push
stos
pop
rolb
dec
add
lea
sub
ret
push
aas
ret
push
or
fiaddl
push
jne
js
mov
or
and
or
out
jo
cld
mov
int3
ret
pop
jge
adc
mov
outsb
ja
push
dec
sub
and
add
mov
mov
out
push
mov
add
ja
std
sbb
jae
mov
or
daa
xor
fmulp
cmpl
push
jb
insl
fisubrs
sbb
add
or
cmp
and
lock
roll
scas
and
cmp
jbe
cmp
jb
dec
push
hlt
jg
and
stc
or
rep
jmp
int3
in
push
in
cmp
loopne
add
cs
sub
cmp
mov
es
push
scas
std
cmp
push
mov
mov
mov
or
lods
push
repnz
mov
cmpsb
stc
rclb
add
add
nop
inc
add
add
jae
push
mov
cmpb
jns
jo
pusha
mov
repz
xrelease
call
repz
lock
hlt
clc
clc
add
lock
cld
and
pusha
sbb
add
add
sbb
jmp
je
shl
pop
pop
mov
inc
pop
sti
and
push
andl
sbb
lea
into
jl
cld
pop
and
std
pop
mov
adc
xor
clc
das
sub
inc
mov
stc
sub
sub
addb
ficoml
jl
mov
add
sahf
inc
push
cs
mov
loop
addr16
add
pop
adc
lcall
repz
jnp
or
adc
and
cmp
repz
xor
sbb
sbb
repz
repz
adc
or
repz
or
or
lahf
mull
inc
pop
or
jo
xor
push
add
add
sub
pop
push
jne
push
ja
inc
inc
xor
pop
mov
movsl
sub
cmp
mov
rolb
pop
adc
sub
inc
ret
mov
mov
test
adc
add
push
xchg
incb
add
clc
ljmp
mov
outsl
push
mov
sub
xorl
jg
cld
shr
mov
imul
add
xor
mov
push
dec
mov
filds
sbb
mov
mov
push
cld
or
jmp
xchg
adc
mov
jne
sar
dec
cmp
jbe
push
das
mov
cld
pop
mov
cmp
inc
push
and
xorb
lret
lea
not
and
decb
dec
fidivrs
aas
add
sbb
sbb
dec
loopne
pushf
mov
sub
adc
add
push
dec
pop
adc
lcall
and
push
rcrl
cs
test
clc
and
pop
hlt
mov
jmp
fcmove
mulb
sar
xor
lret
cmp
jbe
fstpl
xchg
mov
imul
andb
cmp
je
lret
aaa
add
data16
cmp
mov
pop
fsubr
not
and
add
or
lea
das
mov
xor
push
jle
pop
dec
test
cltd
imul
jmp
push
adc
inc
pop
outsb
hlt
lods
or
je
ret
lea
mov
pop
or
dec
or
adc
mov
dec
paddd
mov
jge
jle
fisubs
xor
pop
xchg
add
or
jmp
dec
adc
push
mov
pop
inc
stos
cmc
or
and
dec
adc
pop
neg
inc
mov
cmpsl
push
fmull
cmp
shl
add
scas
jp
outsl
das
sti
push
push
call
aas
gs
push
or
fnsave
mov
add
decb
adc
dec
adc
add
and
test
in
shrl
adc
or
and
mov
adc
loopne
or
sub
push
inc
adcb
push
or
add
cmp
or
scas
pop
inc
les
jbe
sahf
sahf
ss
or
xchg
fnsave
pop
pop
adc
fwait
or
cmp
xor
int3
mov
lret
push
mov
shlb
mov
outsb
mov
movsl
jp
pop
ret
addl
adcl
scas
or
xor
imul
jo
mov
ja
inc
push
push
stos
push
jge
mov
push
icebp
jmp
orl
mov
mov
incl
pop
inc
pop
sub
fwait
out
or
fcomps
mov
or
mov
imul
in
aas
sub
inc
clc
pop
mov
add
repz
sub
and
jne
add
sti
mov
out
nop
add
add
adc
outsb
shll
mov
push
push
loop
ja
fsubrs
iret
dec
pop
mov
decl
dec
clc
incl
lea
mov
inc
inc
cld
lock
call
jne
add
xchg
cli
xor
mov
or
dec
out
adc
dec
jb
adc
fs
inc
aaa
loopne
outsb
sbb
mov
enter
dec
add
jne
or
xlat
or
adc
shlb
faddp
jl
add
test
shrb
mov
xlat
sub
pop
shr
add
imul
sti
test
sub
cmp
mov
and
jb
push
ret
mov
ret
shrb
inc
add
je
cmp
loope
add
stc
add
cmp
xorb
push
subb
int3
pop
inc
cmp
add
clc
into
add
es
nop
cmp
add
or
mov
add
adc
and
stos
loopne
fmul
add
pop
sub
pusha
sti
mov
sar
dec
cmp
mov
cld
imul
sbb
pop
hlt
lea
loop
jg
mov
cwtl
pop
imul
imul
or
loopne
and
roll
dec
test
rclb
fstl
push
mov
insb
xor
in
lahf
repnz
and
clc
js
mov
aam
mov
movsb
sub
pop
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
cmp
insb
jo
scas
xor
movsl
pop
divb
fwait
mov
push
add
cld
xor
cmp
dec
jno
sbb
je
fisttps
scas
pusha
add
aam
mov
call
adc
arpl
imul
add
mov
loope
xchg
icebp
mov
mov
mov
and
push
mov
jb
sahf
paddd
bswap
mov
out
cmp
setb
xor
jns
dec
movsl
or
sbbb
sbb
enter
add
mov
push
inc
xor
icebp
inc
pop
push
cmp
lea
mov
or
xchg
jecxz
out
sbb
hlt
roll
std
nop
xor
shr
cld
mov
fisttpl
jnp
cmp
jmp
dec
cmp
dec
and
or
jne
ret
sti
out
or
adc
push
adc
jb
push
jne
mov
jmp
inc
je
sub
or
inc
call
or
clc
fcomps
cli
pushl
out
mov
clc
ljmp
clc
pop
mov
mov
xor
add
mov
jne
mov
mov
mov
jmp
fcomip
cs
into
jne
lret
ret
pop
jmp
cmpl
or
cmp
out
andl
cmpsb
loopne
or
jae
jne
or
and
and
sbb
fistpl
ljmp
pushf
call
sub
leave
and
push
cwtl
cli
push
rorb
inc
or
imul
push
cmp
dec
push
pop
ret
dec
inc
dec
pop
xchg
enter
add
jg
std
ss
or
adc
in
and
mov
push
dec
out
inc
jae
jne
in
sub
or
sub
mov
daa
int3
dec
mov
mov
adc
and
je
pop
clc
into
pop
jp
xor
sub
jp
fs
rcll
inc
mov
or
and
pop
das
pop
popa
or
rorl
xchg
jo
cwtl
out
or
ja
pop
add
cld
or
inc
or
outsl
or
push
mov
mov
aaa
mov
aam
mov
push
adc
pop
mov
rcr
and
faddl
negb
lea
jne,pt
cmp
das
cmp
cmp
pop
fildl
sahf
lea
notl
and
adc
push
push
outsb
push
icebp
mov
sub
shlb
or
and
es
jle
sbb
sub
push
rcll
dec
cmpsl
clc
or
xchg
lock
movsb
arpl
push
pop
and
xorl
mov
mov
pop
je
adc
dec
mov
or
push
push
cmp
rclb
outsb
xor
xchg
test
fidivl
push
adc
insl
pusha
mov
push
mov
jne
cmp
xor
aas
jp
je
xchg
jbe
mov
jmp
test
sarb
cmp
ds
or
iret
pop
pop
int3
pop
pop
imul
sbb
mov
mov
and
jbe
sub
rorb
call
jmp
add
adc
arpl
mov
dec
out
mov
push
inc
mov
mov
jne
push
pushf
push
pop
dec
push
cwtl
xchg
dec
lock
or
sub
xor
and
popf
pop
push
setge
sbb
push
push
pop
mov
inc
in
mov
ret
adc
mov
add
rolb
push
ret
mov
add
xchg
jmp
mov
mov
and
movl
pop
add
adc
pop
push
sub
lahf
mov
test
sub
push
mov
adc
mov
pop
fsubrs
ret
adc
ret
test
nop
mov
and
sbb
fists
add
push
push
mov
inc
xor
fistpl
push
push
mov
mov
lods
push
push
push
or
push
mov
mov
rolb
cmp
push
dec
js
cmc
cmp
mov
mov
out
push
push
scas
pop
mov
xor
mov
or
ss
aas
dec
cmp
jle
or
dec
cmp
sbb
inc
cmp
add
jmp
sub
sbb
inc
adc
push
sahf
neg
add
push
aam
add
mov
cwtl
mov
mov
les
adc
and
lods
and
andl
fldl
lea
xor
mov
cwtl
add
mov
mov
jecxz
push
ss
cmp
mov
inc
adc
sbb
ljmp
fsubrl
ret
sbb
jge
xlat
push
mov
dec
arpl
shr
push
in
push
add
add
inc
dec
out
cmp
dec
addr16
fisubrl
add
testb
je
les
mov
mov
scas
mov
push
push
jne
xor
dec
leave
in
add
loopne
add
loopne
scas
jbe
dec
inc
mov
xchg
enter
mov
out
les
mov
pop
inc
jne
or
push
xor
ret
push
xlat
push
mov
sub
xchg
sbb
in
mov
xor
or
lcall
rorb
or
jns
subl
mov
dec
cwtl
or
aad
cmp
lret
pushf
repnz
or
push
mov
or
aam
push
ja
or
bound
sub
sbb
mov
pop
inc
bound
jmp
outsl
pop
insl
add
fimull
push
jne
mov
inc
fcmovu
sbb
xor
shlb
cld
js
push
or
add
or
xor
jmp
lea
push
sbb
js
and
dec
shl
adc
ficomps
mulb
test
add
fs
push
jns
sbb
movsb
rclb
fdivrs
xor
lock
rorb
or
inc
sbb
mov
outsl
sbb
nop
stos
adcl
jle
cmp
push
pushf
sbb
ljmp
cmp
xchg
movsb
mov
adc
fnstcw
loop
dec
mov
add
cmp
stos
add
mov
pop
jne
lcall
fdivrs
mov
push
sbb
mov
flds
aam
push
icebp
cwtl
call
test
inc
ret
out
inc
pop
push
push
sub
pusha
pop
or
push
sub
dec
mov
loopne
shl
and
jae
sub
push
jns
mov
jge
les
cmpsb
adc
mov
fisubrs
xor
dec
sbb
cmp
lds
popa
mov
cmp
je
push
push
pop
test
aam
aad
fldl
add
movsb
mov
loope
sar
adc
mov
xchg
movsl
jo
out
jns
adc
repz
add
inc
sbb
mov
pop
xor
pop
push
addb
jns
pushf
or
or
cmp
mov
lock
call
or
ror
rolb
loopne
add
jmp
add
cmp
inc
lods
inc
or
fimuls
nop
mov
inc
jns
jb
mov
jns
mov
mov
or
push
insb
lock
out
jl
mov
adc
lahf
testl
inc
mov
jle
or
dec
loop
xchg
sbb
mov
ret
stc
cmp
xor
inc
subb
je
sub
pop
jmp
mov
sub
or
loop
lcall
or
imull
pushf
ljmp
enter
push
insl
mov
push
inc
cli
jne
rcll
outsl
cmp
xchg
sarb
stos
mov
push
xlat
sub
lods
adc
pop
dec
shlb
pusha
int3
add
mov
pop
mov
dec
sti
xor
mov
push
dec
rclb
fiaddl
test
rclb
popf
push
xchg
shlb
mov
dec
loop
jne
movsb
enter
sbb
push
or
add
lcall
jne
push
push
mov
adc
mov
test
les
divl
in
cmp
cwtl
push
bswap
inc
pop
pushl
fcmovnu
push
loopne
xchg
mov
jne
push
xchg
fcomps
cmp
cld
das
daa
cmp
inc
mov
cld
mov
add
subl
cmpb
rcl
xchg
xor
jmp
mov
push
add
dec
cmp
xchg
enter
test
dec
push
dec
es
xchg
jl
int3
addr16
test
sub
push
adc
mov
add
loopne
pop
lods
mov
pop
push
mov
lea
cld
mov
mov
fmull
push
pop
movsl
hlt
inc
or
fcmovnb
fcom
push
and
mov
mov
nop
fsubl
mov
rolb
pop
or
not
and
sub
jmp
dec
jl
out
add
imul
add
cmp
test
xor
jb
sub
fadd
cmp
mov
aam
lods
jmp
add
test
je
testb
inc
inc
dec
sub
cmp
and
icebp
and
clc
jae
cmp
jae
push
cmp
clc
jnp
add
push
add
arpl
aas
mov
dec
mov
cli
inc
mov
loopne
rcrb
icebp
adc
test
push
xor
popl
sub
test
push
mov
ja
sub
jae
jne
jecxz
sbb
imul
in
or
sub
push
dec
outsb
pop
mov
loopne
add
mov
push
push
cmp
icebp
sbb
inc
rclb
mov
roll
sub
pop
dec
adc
add
jbe
jl
or
jg
jmp
add
mov
inc
sub
out
fiaddl
fstpl
jne
adc
fadds
lock
xchg
loop
jge
stos
mov
shr
or
mov
int3
pop
enter
pop
mov
cld
mov
push
sti
add
push
push
mov
jne
hlt
and
je
inc
jl
repz
and
or
push
dec
cmp
add
add
ret
and
lcall
loopne
icebp
adc
enter
sub
loope
addr16
ret
or
add
or
xor
test
ret
jo
xchg
fadds
cmp
loop
or
jmp
cli
cmp
ret
stc
or
inc
push
add
add
xor
stos
std
cld
movsb
dec
adc
es
sbb
dec
pop
imul
dec
or
cwtl
xor
cld
add
sarb
out
push
mov
and
sub
sbb
push
adc
push
pop
ljmp
jo
inc
outsl
jb
js
pushl
jb
arpl
jae
insl
jae
outsl
jb
gs
insb
add
outsb
je
insl
outsl
mov
jb
fimuls
dec
push
xchg
out
mov
and
inc
add
inc
push
outsl
int
and
push
xor
cmp
sub
jae
popa
jge
std
jo
insb
imul
or
outsb
outsl
je
shlb
jne
imul
and
popa
arpl
jbe
add
jae
outsl
data16
xor
movsb
jae
pop
cs
inc
push
and
or
dec
aaa
or
gs
jae
push
jbe
push
shll
jae
sbb
xor
pop
mov
insl
and
insl
mov
or
cs
inc
cmp
fisubrl
scas
popa
bound
ds
xchg
jp
add
jnp
stos
test
dec
aaa
outsl
imulb
jne
push
mov
outsl
ja
jno
enter
outsl
ss
sub
je
xor
xchg
mov
imul
add
dec
jg
mov
pop
push
gs
or
dec
add
sbb
mov
jo
lahf
rol
mov
out
push
inc
imul
cwtl
xor
in
aaa
insl
jne
push
xor
fs
arpl
push
or
pop
das
imul
pop
add
push
mov
inc
jno
jbe
cli
xor
sub
pusha
xchg
and
cmpsb
movl
into
and
popa
jns
ja
mov
shll
xchg
push
or
into
add
lret
cmp
std
popa
jb
jne
jae
xor
adc
or
xchg
mov
xchg
subl
sub
cmovl
jb
jns
fdivs
or
inc
add
outsb
push
lock
cmp
add
cmp
and
pop
enter
imul
outsb
add
ret
scas
jns
and
and
inc
xchg
fs
je
outsl
call
jb
bound
dec
lods
js
or
dec
add
xor
pop
fists
fisubl
pop
xlat
adc
mov
outsl
js
jne
imul
shlb
xor
push
inc
testb
popl
bound
push
xchg
mov
js
xchg
fs
cwtl
enter
nop
arpl
bound
sahf
cli
inc
jo
sti
pop
xor
sarb
insb
add
cld
subb
js
in
arpl
test
lret
sbbl
js
jne
ds
je
in
je
jl
adc
sbb
sub
les
scas
inc
mov
jb
jns
loop
dec
push
add
repnz
push
or
or
mov
add
and
push
aas
or
clc
adc
popa
imul
pop
add
add
sbb
and
and
adc
xchg
sbb
adc
add
insb
add
addb
xchg
push
aad
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
adc
adc
data16
or
push
pop
pop
inc
or
push
cmp
aad
dec
rolb
inc
lcall
dec
dec
mov
outsb
add
in
mov
daa
xchg
adc
mov
test
pop
inc
pusha
cmp
call
jnp
inc
xchg
rorb
sarb
cmp
xor
lcall
cmp
xor
or
dec
sub
xchg
adc
sub
gs
add
and
mov
subl
dec
sahf
loopne
or
add
or
pusha
cmp
jo
pushl
dec
les
test
jns
push
sbbb
fsts
inc
xlat
fldenv
or
aaa
ljmp
test
xchg
cmp
cmp
adc
xchg
lods
loopne
and
decl
mov
rcr
push
xchg
and
aad
push
mov
jns
int3
aad
out
dec
popa
jmp
push
mov
jnp
mov
dec
outsl
push
xchg
in
jg
js
jecxz
inc
shll
mov
movsb
inc
jns
rolb
cmp
ja
mov
xchg
stc
push
xor
fdivl
fs
fwait
loopne
incl
out
aas
insl
cmp
movsb
cmp
cmp
xorl
arpl
jg
or
and
pop
jmp
mov
out
stos
lahf
loope
dec
push
jb
nop
loopne
inc
sbb
jmp
daa
dec
xlat
imul
addb
imul
push
inc
mov
mov
shll
nop
or
lret
inc
cmp
jg
inc
gs
cld
push
stos
xchg
or
push
adc
mov
jge
jo
mov
movsb
lds
or
jmp
popf
xor
sbb
push
mov
xchg
test
ret
outsb
cltd
mov
mov
andb
or
xlat
inc
sub
mov
xchg
sub
cmp
jmp
mov
in
lods
ljmp
dec
and
popa
out
and
pop
inc
jne
ljmp
pop
mov
mov
call
js
push
sbb
cmc
cwtl
jp
pop
fsub
adc
push
jg
incl
mov
xchg
jmp
sbb
rcr
or
outsl
pop
inc
shlb
cmp
jns
rcrl
imul
decl
call
addl
sub
sbb
loopne
fsub
adc
in
sbb
js
xchg
flds
unpckhps
dec
movl
pop
cli
push
lcall
dec
inc
mov
jge
cmp
lret
test
ds
mov
push
fcmovu
in
push
iret
imul
inc
mov
pushf
cmp
add
orb
pop
fisttpll
mov
outsb
jo
cmpsb
mov
add
jmp
in
jecxz
outsl
addr16
aas
cmpl
jmp
add
test
jns
pusha
jecxz
jge
sbb
pop
jae
pop
cmpsb
xchg
xor
sbb
decl
add
sti
pop
and
push
push
ds
hlt
xchg
sub
jmp
hlt
pop
mov
xchg
in
rorl
mov
subb
call
out
cmp
pop
out
sbb
into
fwait
outsb
mov
push
mov
daa
and
subb
cmp
push
fcmovb
dec
das
xor
stos
decl
adc
add
imul
sub
repz
adc
repnz
pusha
push
xor
cmp
incl
aaa
cmp
clts
cld
dec
dec
push
push
aad
outsb
jp
icebp
pop
xor
pop
das
jae
incl
add
cmp
sbb
stc
repnz
jno
clc
cwtl
inc
cmp
ss
loop
fdivs
pop
sbb
jl
fildll
je
arpl
mov
incl
sub
jo
xor
hlt
mul
xchg
jo
xchg
mov
jne
cld
insl
xlat
jmp
out
mov
mov
xchg
pop
mov
out
es
push
jmp
stos
in
pop
popl
pop
popa
jle
mov
push
fimull
adc
and
jmp
dec
dec
out
pop
inc
ss
pusha
out
call
push
fs
cs
pop
mov
xor
stos
sbb
notb
or
xor
cmp
and
jge
adc
xchg
sbb
pop
mov
push
and
fidivs
mov
fcomip
call
ds
jae
mov
inc
xlat
mov
fcmovbe
sti
adc
fs
nop
push
sub
lds
insl
pop
das
sub
ret
dec
push
pushl
rorl
fsubl
add
iret
dec
aad
shrb
mov
cld
cmpsl
xchg
mov
je
adc
xchg
push
ljmp
imul
mov
jnp
inc
adc
pop
sti
ds
repnz
out
dec
mov
std
ljmp
push
xchg
pop
arpl
xchg
das
push
int
cwtl
mov
dec
inc
or
movsl
mov
out
nop
lods
inc
mov
gs
mov
and
xchg
dec
mov
sub
ljmp
dec
jbe
and
decl
fldl
int
mov
test
adc
fldcw
loopne
mov
fs
test
sbb
in
adc
add
ficomps
pop
popa
in
call
insb
push
hlt
and
pop
fwait
cmpsb
outsb
adc
sbb
fsubr
pushl
add
push
sub
int
out
mov
mov
add
loope
fs
inc
lcall
add
cmp
mov
dec
cmp
jp
dec
sahf
mov
pop
xchg
mov
jne
adc
cmc
pop
shlb
das
lahf
xor
scas
pop
sbb
call
pusha
jl
xchg
rol
xchg
lods
mov
pop
mov
pop
adc
ret
jg
loopne
movsl
sbb
and
iret
ds
xchg
test
pop
sti
popa
call
mov
jmp
sbb
jo
add
test
orl
mov
jmp
popa
das
jp
icebp
sub
adc
xchg
insb
or
sbb
aas
add
adc
fcomip
pushl
ror
cmp
pop
xor
pushf
mov
jle
sub
mov
pushl
mov
jmp
fdivr
xchg
inc
mov
addr16
int3
jmp
pop
mov
xor
movsl
sub
or
fsubrp
popf
stos
daa
sbb
jg
int3
aad
ljmp
adc
out
jg
pop
imul
lret
push
bound
fildll
adc
push
leave
inc
sbbb
leave
or
jo
pop
jg
cmpsb
mov
lcall
test
fsts
cmp
sahf
out
xchg
or
push
data16
pushw
add
aad
sar
loope
mov
cltd
jle
push
in
ficoml
iret
inc
mov
js
es
call
out
insb
rcll
adc
repz
and
lcall
push
subb
jmp
aaa
js
sub
cmp
roll
inc
fs
les
cltd
filds
jg
pushl
xor
jl
adc
adc
mov
jae
mov
incl
aam
outsl
sbb
sarb
stos
popa
fwait
jbe
loope
addr16
cmpsl
cmp
mov
or
das
cli
jmp
or
shlb
push
cwtl
jge
sub
dec
cltd
test
xchg
add
call
cld
sub
outsl
mov
je
repz
xlat
sub
shrl
out
shrl
fsin
push
add
fildll
stc
repz
adc
cli
idivl
call
cld
decl
sbb
xor
inc
ja
jae
and
iret
adc
pushl
add
in
add
adc
jo
rclb
je
addr16
push
loope
rolb
std
push
sbb
jg
cmp
sbb
jne
daa
inc
pop
repz
mov
pop
jge
cmpsl
jne
incl
mov
jmp
rolb
outsl
adc
inc
xchg
cmc
pop
pop
cltd
rcrb
mov
call
sarl
addl
or
xor
inc
mov
jmp
orb
mov
mov
sub
sbb
idivb
shll
mov
decl
clc
pusha
nop
idivb
xorb
test
jecxz
sbb
pop
cmp
cld
cli
add
lcall
sub
cmp
fs
pop
ds
mov
loop,pn
cmp
fcmovnbe
mov
and
jae
sub
ss
fnstcw
sbb
hlt
and
imul
incl
lret
popl
push
int
push
push
xor
repz
movsb
add
fiadds
call
fbld
popf
mov
mov
incl
push
sub
sbbl
bnd
mov
or
cmp
lahf
into
imul
add
mov
sbb
jle
ljmp
insb
pushf
pop
cmp
out
lahf
fidivs
scas
or
inc
sub
jnp
pop
jb
inc
mov
std
mov
push
adc
add
clc
push
dec
cmpsb
fcomps
notl
sub
lcall
rclb
xor
push
sti
imul
push
pop
aam
xchg
sbb
movsl
loope
sbb
lcall
mov
xor
cmpsl
pop
or
and
ret
jns
cmp
jmp
jmp
pop
add
cwtl
cmp
adc
sbb
mov
sti
incl
idivb
mov
addl
push
jg
enter
pushl
xchg
icebp
adc
fisubs
inc
and
jp
ret
mov
inc
mov
mov
jb
lret
lock
xchg
mov
loope
jmp
mov
call
cld
jmp
loope
sub
lcall
mov
jge
movsl
pusha
mov
lahf
test
lcall
or
dec
and
into
out
stos
mov
xor
xchg
ljmp
mov
jno
mov
sub
shlb
les
adc
imul
dec
add
pop
dec
loop
cmc
incl
mov
jae
xchg
adc
pop
pop
xchg
fcoml
pushl
push
daa
cmp
inc
xor
movsb
mov
cmpsb
ret
pop
mov
cmc
push
call
push
ret
rcrb
into
es
insb
xchg
cmp
dec
sbb
pop
sub
cltd
fdivrp
dec
ljmp
mov
pushf
push
dec
sarl
sub
lcall
int3
mul
jnp
or
incl
cmp
sbb
lods
testl
das
adcb
jle
je
test
ljmp
and
into
mov
into
xchg
loop
sbb
fdivrl
jl
xor
jg
sub
ret
adc
daa
imul
daa
jle
jno
jp
push
sbb
in
call
xorl
mov
cmp
inc
negl
std
inc
repnz
add
jmp
push
adc
mov
add
sbb
inc
lret
xchg
aad
fidivs
incl
icebp
cmpsl
sub
cli
outsl
jg
testb
icebp
push
xlat
pop
adc
sbb
push
cmp
movl
stos
repnz
test
push
mov
cmp
clc
mov
in
jne
xchg
cmc
clc
dec
cmp
aad
in
out
jge
sbb
jl
mov
loop
out
decl
cmc
pushf
and
mov
sbb
push
inc
scas
push
imul
lcall
cmp
rcr
lahf
push
js
fists
xor
lret
push
mov
or
pop
jae
das
clc
jmp
xor
sbb
mov
mov
fimuls
pop
adc
mull
mov
pop
lcall
loopne
loope
andl
pop
sub
cld
xchg
jae
push
mov
push
loopne
mov
push
xchg
pop
cld
mov
mov
jbe
xor
jmp
mov
popa
mov
aad
aam
push
sub
and
insl
cmp
je
movl
call
cmp
lea
and
popf
cwtl
in
jb
call
mov
call
dec
push
rorl
arpl
jp
in
mov
imul
ret
cmp
inc
xor
fdivl
in
repnz
ljmp
out
in
arpl
mov
inc
jmp
outsl
loopw
adc
add
das
cli
cmp
les
rcl
js
xchg
sahf
addr16
push
sbb
icebp
jo
jb
mov
jle
loop
adc
ss
mov
lods
es
mov
inc
jbe
test
rorb
call
push
xchg
test
inc
cli
cmp
xchg
adc
mov
push
test
mov
scas
push
out
bound
testl
dec
mov
pushl
sarl
mov
mov
xor
push
inc
push
sub
call
cmp
testb
lea
inc
data16
shrb
jno
sbb
dec
xchg
mov
jnp
xor
call
movsb
dec
leave
mov
cmp
sub
xorl
and
lcall
mov
xor
dec
push
sub
or
cld
fstl
notb
sbb
lahf
fwait
or
jmp
push
fdivrs
cld
inc
dec
rorb
xorl
inc
rolb
ljmp
repz
mov
ljmp
mov
sub
stos
test
xchg
leave
jno
inc
xlat
mov
scas
icebp
jg
pop
stos
push
pop
es
jecxz
dec
xor
ret
mov
inc
and
and
rcll
adc
or
sub
mov
push
pop
arpl
mov
in
icebp
mov
test
jbe,pt
push
adc
lods
sbb
and
push
lret
pop
push
adc
rol
xchg
pop
js
incl
mov
movsb
mov
xchg
scas
adcl
nop
les
jns
push
lods
ljmp
xor
cmp
inc
into
int3
cwtl
lods
inc
dec
into
scas
andl
sbb
xor
sti
icebp
sbb
je
xchg
cmc
hlt
inc
out
jp
out
sarl
cmpsb
push
in
sub
add
idiv
call
pop
xchg
add
push
icebp
sub
mov
dec
aam
aam
lcall
push
inc
mov
rcrl
lds
scas
mov
mov
mov
jmp
mov
test
pushl
in
or
xchg
or
dec
inc
cmp
aam
push
testl
cli
scas
incl
gs
pop
mov
jecxz
stos
clc
sub
push
push
mov
not
subb
js
out
push
div
lods
ljmp
mov
loopne
je
adc
adc
jecxz
pop
loopne
test
cmp
and
adc
into
mov
pushl
mov
outsl
push
cmc
pop
mov
xor
inc
mulb
jge
pushl
cld
daa
sarb
push
rdpmc
out
sahf
inc
outsl
sti
push
adc
pop
jmp
pop
mov
or
or
adc
es
rclb
loopne
lcall
dec
and
mov
sti
lds
sub
scas
negl
or
or
fisttps
and
std
frstpm(287
je
dec
sbb
cmp
mov
jmp
mov
mov
lods
std
enter
adc
pop
popf
pop
inc
ret
pop
dec
mov
push
adc
add
out
aaa
pop
pop
pop
mov
push
repz
xchg
fdivr
lcall
sub
aad
jmp
sub
mov
test
and
dec
ja
jge
cmpsl
mov
call
scas
ljmp
cmp
mov
enter
xor
cwtl
xor
roll
lcall
mov
std
adc
ret
inc
sub
sbb
sbb
faddl
cmp
mov
in
jbe
fwait
mov
ss
pop
jno
cmp
in
mov
fs
inc
push
push
mov
neg
clc
xchg
jnp
push
jmp
incl
bound
pop
push
xor
adc
push
jo
aam
std
pushl
mov
cltd
lret
testl
adc
add
jno
rorl
inc
or
lcall
dec
xlat
pop
pop
sbb
int3
das
enter
cmpl
jnp
scas
popf
ss
jge
decl
jmp
imul
stc
nop
stos
pop
fdiv
and
push
cmp
jp
or
out
xacquire
sub
daa
test
and
rcrb
xor
mov
test
js
mov
jle
xor
xchg
sbb
push
addr16
dec
sbb
sbb
repnz
and
fisttps
inc
inc
popf
cmc
jnp
push
mov
call
or
xchg
aam
les
jae
push
mov
or
or
mov
pop
jle
mov
rcrb
dec
cmp
jns
xor
xchg
repz
mov
lock
mov
adc
shll
xchg
fstpl
das
push
push
dec
outsl
incl
rcrb
inc
inc
lods
jge
into
push
jg
xchg
in
push
int
addl
or
mov
aas
and
enter
push
pop
ret
sub
jmp
pop
dec
mov
inc
lcall
js
fldl2t
or
hlt
in
add
xor
aad
gs
pop
mov
jns
pushl
cmp
ss
int
imul
fsubr
dec
sahf
add
jle,pt
sub
cmp
push
call
cld
push
add
and
xlat
aad
notl
mov
mov
insl
aad
xchg
xchg
push
sbb
aaa
cld
decl
jle
xchg
mov
scas
test
fdivrp
decl
aas
inc
mov
js
jae
jmp
dec
inc
loop
push
mov
cld
jmp
in
push
fcmovne
xor
jo
jbe
mov
cmpsb
add
mull
dec
imul
pushl
sbbb
in
jns
in
es
ss
push
mov
mov
ljmp
xchg
cltd
pop
adc
call
xor
lret
mov
lods
add
push
and
jp
aaa
dec
repz
jo,pn
pop
push
pop
fiaddl
call
push
into
sbb
or
mov
ja
add
inc
mov
push
or
incl
or
jl
ret
mov
outsb
mov
mov
pop
pusha
or
call
sbb
fidivs
add
popa
int
pop
divps
inc
xchg
cs
mov
dec
and
jp
and
inc
xor
lret
insb
cmp
or
xchg
pop
ljmp
mov
or
fists
int
jge
mov
dec
dec
jle
or
mov
and
lcall
sahf
cld
adc
push
adc
adc
xchg
jg
clc
inc
nop
or
fcomip
and
incl
xor
adc
test
mov
or
mov
sub
pushf
lods
jg
call
out
xor
rorl
xor
fistps
push
mov
xchg
xchg
mov
jecxz
or
sub
mov
pop
xor
loopne
lahf
mov
shr
ds
inc
jae
adc
inc
outsl
dec
adc
shll
rolb
inc
fdivrl
pop
inc
and
push
pop
std
jmp
stos
insb
aas
pop
jns
cmp
jg
pusha
pop
push
and
inc
call
adc
jge
sbb
cmc
imul
fwait
daa
adc
jbe
lcall
lods
push
cmp
out
sub
xchg
mov
lea
push
mov
call
ss
inc
jae
add
add
and
or
clc
fcmovbe
mov
fwait
out
jl
dec
int3
fs
sbb
movl
cmpb
nop
setb
sahf
mov
pop
adc
rorb
inc
mov
sub
push
stc
pushf
sahf
push
into
xchg
mov
fwait
scas
and
xchg
ljmp
pop
inc
push
insb
jns
dec
sahf
mov
stos
stos
dec
hlt
lods
stos
fiaddl
xor
pop
dec
add
inc
je
repnz
pop
fcmovu
fisttpll
inc
mov
lret
mov
loop
divb
mov
fdivrl
sbb
dec
ljmp
and
adc
ljmp
pushf
fs
jno
adc
pop
or
adc
push
jecxz
faddl
xchg
sbb
jmp
pusha
or
sysenter
dec
xchg
divb
jecxz
mov
mov
out
mov
incl
jl
fucom
idiv
add
and
rorl
jp
add
or
adc
add
jns
aaa
sbb
inc
loopne
aaa
push
xor
test
add
jns
xor
ret
cmp
cltd
inc
cli
incl
cli
xchg
das
and
lcall
mov
pushf
dec
dec
push
pop
clc
stos
nop
jg
ljmp
jbe
fisttps
iret
mov
adc
mov
fdivl
mov
jmp
fstpt
and
mov
cld
fistps
pop
xchg
xlat
mov
sbb
ret
divl
decl
ljmp
xchg
fwait
adc
movsb
enter
fidivs
in
xor
adc
dec
jae
ljmp
clc
fimuls
xor
mov
and
loop
lret
jmp
and
roll
lcall
aaa
xlat
inc
stos
xchg
mov
jo
fidivrs
test
pop
adc
add
das
clc
popa
adc
push
cmp
cmpsl
sbb
mov
xchg
xor
test
xlat
xor
mov
faddp
call
sti
mov
cld
or
xchg
sub
xor
rcrl
jmp
pop
icebp
and
pop
addr16
popa
fiadds
repz
decl
bnd
push
sub
movsl
dec
test
orl
loopne
pushf
mov
mov
les
mov
or
mov
mov
int
shll
xlat
add
xor
push
aad
jmp
fdivrl
loopne
jmp
cli
lods
mov
mov
sti
fcmovnbe
sbb
add
cwtl
xlat
stos
mov
push
xchg
pop
jecxz
decl
fsts
xchg
fdivl
out
imul
in
sub
insl
sti
movsb
or
jmp
sub
leave
test
jge
add
rolb
push
into
push
lahf
test
icebp
clc
decl
icebp
ss
pop
and
adc
pop
popa
inc
mov
aam
cmp
dec
cmp
pushl
push
paddsw
push
push
jmp
mull
ljmp
inc
jb
stc
mov
lcall
addb
pop
cmp
iret
and
cld
mov
sbb
jl
jbe
cmp
sbb
sub
adc
jmp
insl
sar
push
movsb
out
and
jnp
out
sbb
fs
les
cmp
sti
js
movsl
in
imul
pushl
xchg
adc
stc
sbb
jge
cmp
arpl
ret
repnz
jmp
iret
cwtl
or
test
stos
test
movsl
outsb
or
mov
jmp
ljmp
sarb
xor
lcall
mov
outsl
fwait
pop
lds
pop
or
sbb
cs
inc
cmp
test
dec
sarb
pushl
cld
mov
pop
mov
mov
dec
mov
mov
inc
int3
sub
bound
call
lahf
mov
test
mov
movsb
adc
test
pop
bound
sarl
hlt
add
lods
or
add
lods
mov
lahf
std
and
aaa
xor
inc
aaa
dec
pushl
outsl
push
inc
mov
clc
mov
mov
pusha
cmpsl
sbb
cmp
imull
ja
rclb
incl
dec
and
xchg
filds
cmp
add
jmp
jle
dec
mov
faddl
jl
push
sub
dec
ffree
out
mov
loope
push
rcrl
lcall
xor
add
push
ret
or
cwtl
or
mov
add
mov
add
cmp
push
or
rol
pop
mov
pop
jbe
repz
xor
jmp
pop
mov
lds
pop
hlt
sub
repnz
shl
inc
hlt
xchg
xchg
mov
lcall
mov
mov
xchg
cltd
jnp
out
test
sbb
mov
jp
lcall
fisttpll
sbb
movsl
test
ja
add
out
push
subl
decl
sub
das
pusha
fisubs
out
and
bound
in
fwait
ds
jb
inc
out
shrl
ljmp
es
cmp
andl
dec
inc
outsl
mov
jo
sbb
lcall
dec
pop
cmp
lret
cmc
or
cli
lock
imul
lea
add
jne
xlat
dec
add
sub
or
call
loope
xor
xorb
test
sbb
rcll
sub
ret
inc
out
push
jo
push
mov
mov
and
pop
mov
jae
mov
idiv
jmp
push
out
mov
fistpl
jne
or
mov
fwait
cmp
lcall
fldl
lock
sub
mov
jbe
and
add
xchg
arpl
ljmp
sbb
lock
jmp
out
and
outsl
clc
mov
daa
xor
adc
dec
jecxz
insl
and
cmp
push
cld
call
push
mov
add
testb
or
popf
outsl
lcall
cmc
jp
mov
jae
cs
add
sub
push
int3
dec
jmp
outsl
mov
les
sub
or
das
jnp
pop
adc
cmp
addr16
inc
pop
nop
or
fldl
fwait
sub
outsl
scas
xor
fs
lods
mov
adc
push
jmp
ljmp
add
cmp
add
xlat
mov
popa
testb
fwait
or
inc
cmp
or
pushf
gs
and
mov
mulb
jne
into
leave
ljmp
mov
into
xlat
ja
adc
jb
cmp
or
pop
pushf
bound
sar
mov
popa
jg
mov
push
lea
pop
adc
aam
mov
shlb
dec
inc
mov
or
jg
push
sti
cmp
cmp
inc
mov
jbe
sbb
les
ljmp
stos
push
mov
pop
lods
imul
sbb
xor
inc
in
push
jmp
lret
xchg
pop
sar
jns
movsb
jecxz
adc
mov
lods
cwtl
andl
mov
sbb
fs
int
jmp
outsl
mov
loop
jb
pop
insl
lods
xchg
inc
repz
jmp
pop
jl
dec
fidivrs
imul
adc
cmp
add
cmpsl
gs
dec
into
jecxz
sbb
jg
jmp
push
jnp
repnz
jns
mov
pop
test
push
cmp
add
xlat
push
inc
or
stos
xchg
fsubl
repz
addr16
adc
fistps
mov
lock
cs
and
test
add
call
mov
fisubl
test
inc
adc
mov
mov
pop
jmp
scas
clc
call
mov
movsb
xor
mov
sbb
rclb
sar
lcall
stos
fldl
push
iret
or
or
or
mov
decl
push
rcrl
lods
xchg
pop
jg
nop
and
stos
pop
mov
insl
icebp
pop
fwait
rclb
idiv
incb
mov
addr16
mov
mov
push
shll
iret
lea
xchg
push
lcall
aam
out
fidivl
mov
push
xchg
lahf
scas
sbb
ljmp
jbe
decl
insl
imul
arpl
xchg
xor
out
mov
cmp
insb
lcall
or
xor
ds
xor
icebp
adc
xor
test
or
and
jo
fidivl
jmp
inc
push
cltd
xchg
testb
outsl
mov
cwtl
cs
sub
aaa
mov
push
sub
sbb
jmp
pop
mov
and
stos
rcr
test
mov
movsb
jns
mov
sbb
les
aam
mov
add
daa
hlt
or
int
xchg
pop
or
mov
pushl
or
je
shlb
or
mov
in
mov
mov
in
stos
dec
scas
in
xchg
inc
dec
scas
xor
mov
dec
jo
fsubrl
cmpsl
xchg
lcall
jg
mov
retw
pop
pusha
cli
mov
push
ljmp
mov
xor
pop
mov
jmp
xchg
sub
and
in
inc
add
adc
adc
icebp
gs
mov
sarb
mov
bound
sbb
xlat
popa
ror
jp
jg
incl
xor
jg
cmpsb
sbb
mov
rcll
call
jbe
pop
jo
mov
andl
mov
int3
mul
xor
inc
pop
xor
mov
call
xorb
sarb
scas
push
aam
mov
fisttpl
sbb
lcall
sub
out
sub
loop
sub
inc
fdivs
out
xor
sub
inc
push
mov
fimull
xchg
test
xchg
cmpsb
fldcw
mov
add
lret
xchg
mov
dec
lock
jmp
aas
test
pop
push
push
out
outsl
mov
jl
out
mov
or
out
cli
lahf
testb
ljmp
xor
jno
inc
sahf
cmp
test
das
pushl
pop
push
inc
push
cmp
stc
push
jbe
mov
mov
dec
pop
insb
icebp
pop
jp
in
xchg
xor
pop
mov
and
push
int
push
push
mov
les
push
das
in
insl
mov
out
int3
pop
inc
fidivrs
test
jecxz
pushl
popf
push
jo
mov
adc
dec
push
or
rcrl
decl
hlt
lods
outsl
push
jmp
xchg
inc
sbb
negl
aad
jecxz
cmp
decl
jle
aaa
std
or
in
xchg
xchg
addb
repnz
mov
leave
sub
pushl
imul
lea
or
dec
vmread
outsb
sbb
sbb
js
ljmp
std
adc
pop
xchg
cmpsb
dec
mov
xchg
aam
sub
outsl
mov
incl
jo
aad
js
leave
or
pop
push
pop
insb
fidivrl
lcall
mov
out
jmp
bound
cmp
mov
dec
jmp
out
pushf
cmp
decl
sbb
adc
pop
rolb
test
cli
jb
push
sti
inc
mov
and
ud0
jle
in
fldcw
cmp
push
mov
scas
mov
packsswb
adcb
jmp
ret
jp
cmp
mov
sub
cmpsl
scas
stc
cs
jmp
loope
aam
xor
add
push
jg
lock
mov
dec
leave
adc
add
std
jmp
xor
add
push
outsl
ljmp
cmc
sbb
jle
xchg
cmp
jle
cmpsl
call
cmp
sbb
cmp
xchg
cltd
xor
outsl
cmp
adc
fmuls
pop
xlat
sbb
ljmp
out
xor
imul
rcl
jecxz
mov
push
mov
xor
stos
add
xor
iret
xchg
cmpsb
jmp
ja
sar
mov
mov
lcall
xchg
push
adc
or
pop
cmpb
into
fmul
cmp
cmp
popa
lcall
inc
xchg
pop
sbb
inc
jb
adc
rolb
and
call
mov
pop
and
or
xlat
gs
movsl
jl
jnp
cmp
push
movsb
int
fs
dec
cmp
xor
cmpsl
shr
pop
mov
cs
loop
jae
into
stos
xor
ljmp
imul
and
cmpsl
sbb
clc
pusha
outsb
arpl
mov
adc
cmp
ds
or
or
jnp
sub
pop
and
inc
cld
repz
shll
decl
or
iret
pop
popa
icebp
sbb
push
push
sti
cs
mov
int3
jne
outsb
int
movsb
or
sub
push
jne
test
adc
cwtl
pop
push
das
pop
out
inc
xlat
xor
inc
cmp
dec
mov
incl
pop
out
in
mov
in
inc
sbb
insb
sbb
and
jnp
in
or
or
ret
xchg
xchg
cwtl
std
les
or
aas
cmp
mov
xchg
das
cli
fsub
mov
xlat
jns
call
push
ss
out
fisttps
stc
pop
sti
enter
jns
pop
in
push
cmp
xor
fisubs
or
ljmp
shl
jo
jb
cmpsl
xchg
stc
enter
test
jp
cmpsl
add
jmp
xchg
cmp
loope
jns
movsb
stc
sub
add
jg
dec
jg
daa
lea
aad
lret
adc
stc
testb
lret
aad
xchg
ljmp
out
rcrb
sub
leave
add
push
pop
cld
icebp
sbb
jmp
pop
push
test
lret
imulb
in
out
mov
call
jg
popf
jmp
add
push
insl
push
jne
xor
cmpsl
pop
push
cmp
test
jmp
add
pop
lods
push
ja
lds
push
pop
add
stc
rcrl
inc
ficoml
pop
incl
and
jno
mov
sub
pop
cmpsb
xchg
inc
shll
cmp
jecxz
decl
lock
cmp
cltd
loop
add
mov
into
dec
in
adc
ljmp
fldt
push
loopne
sti
outsl
pop
mov
aam
insb
hlt
xor
sahf
and
aaa
cmp
inc
push
lods
sbb
mov
es
pop
push
jg
shrl
gs
lea
pop
mov
lods
pop
dec
xchg
or
push
repz
xlat
in
fcomi
fcmovu
lahf
loopne
and
ret
push
fstps
daa
jge
jecxz
xor
fsubl
addb
pop
lahf
inc
add
and
mov
push
outsb
cmpl
xor
sub
sbb
pop
pop
mov
jmp
icebp
mov
clc
imulb
shlb
mov
outsl
enter
push
xor
std
iret
pusha
jnp
idiv
ljmp
stos
lods
jae
jmp
mov
mov
cmpsl
mov
shrl
call
jne
mov
cmpsb
and
mov
push
sub
pop
push
outsb
lods
cmpsl
arpl
jmp
ds
dec
mov
popf
and
pushf
movsb
pop
cmp
aas
mov
bnd
adc
imul
incl
and
add
in
or
cmpsb
xor
jg
mov
adc
push
icebp
lcall
test
cmpsl
fnstenv
mov
pushf
lea
sahf
cmp
fildll
mov
cmp
mov
xor
mov
jno
mov
push
sar
fsubl
mov
stc
gs
mov
sarb
xchg
cmpb
jbe
xor
cmp
sbb
data16
ja
cmp
cmp
add
cmp
call
pop
xchg
int
mov
aaa
movsl
test
cs
adc
mov
call
mov
or
stos
fiadds
imul
adc
xchg
stos
into
mov
ljmp
lahf
lcall
pop
sub
mov
dec
out
dec
cwtl
dec
or
mov
fldenv
jge
push
sbb
and
repz
and
movsl
call
pop
adc
mov
movsl
loopne
popf
cs
and
aaa
cwtl
add
lahf
xchg
push
jmp
lds
add
test
shll
loope
jecxz
xor
lods
jb
insb
sahf
cmc
xlat
or
mov
lgs
data16
rcll
push
inc
dec
jbe
push
xchg
dec
and
incl
lea
cwtl
pop
xor
shll
xchg
outsl
push
pop
fstps
mov
insl
lcall
jmp
sarb
jne
scas
je
loop
movsl
sbb
je
icebp
and
addb
sub
call
cmp
sahf
cltd
clc
sbb
pop
xchg
dec
pop
aaa
xor
dec
lcall
sub
mov
shrb
xchg
mov
hlt
dec
js
outsl
inc
pop
mov
xchg
test
mov
and
sarb
pop
les
cltd
or
dec
bound
mov
xchg
lahf
cmp
gs
test
lods
mov
ds
idiv
jmp
call
mov
and
jp
cmpsb
mov
cltd
decl
pop
xor
pop
aad
mov
pop
inc
out
fnstenv
mov
xchg
movsb
shlb
push
jno
ror
or
ret
icebp
js
and
ljmp
xorl
cltd
shlb
pop
std
fistpl
push
stc
lock
call
sbb
dec
fbstp
add
sbb
xor
insb
jns
call
mov
pop
mov
or
aaa
cmp
dec
out
iret
out
inc
and
ret
push
jbe
push
sbb
xchg
iret
mov
fimull
jnp
cmp
sbb
out
dec
push
pushl
in
les
xor
repnz
ss
pop
sub
mov
mov
sub
mov
cwtl
mov
mov
jl
mov
test
fs
xlat
out
movsb
mov
js
mov
sbb
cmp
pop
pushf
cmp
decl
loopne
mov
shl
cmpsl
fisubrs
decl
in
and
xor
cmp
jp
aam
stc
jg
fmulp
popa
xchg
fidivl
pop
scas
incl
nop
jae
iret
repnz
cmc
int3
test
adc
xchg
push
pop
fcmove
and
ljmp
xchg
push
lret
popa
adc
xorb
loope
fwait
cltd
dec
pop
dec
mov
and
mov
dec
ret
loopne
daa
pop
adc
sbb
dec
dec
cmp
xor
sbb
xchg
adc
into
lret
dec
adcb
jecxz
lahf
sub
xchg
cmp
sub
pop
mov
incl
sub
int3
aaa
sbb
clc
lret
popf
jle
stos
inc
je
stc
lods
xchg
movsb
jg
ljmp
inc
outsb
sbb
sub
push
movsb
xchg
test
in
lret
sbb
dec
xchg
jmp
sbb
cli
and
je
xchg
sub
incl
mov
push
xchg
sub
or
add
incl
jge
mov
xor
daa
idivl
icebp
shrb
ljmp
call
js
out
inc
xor
jp
mov
ret
sub
sub
pushl
cld
sub
sbb
pop
and
cld
bound
add
test
ret
mov
je
insl
sub
popf
adc
insb
stos
or
lahf
roll
push
mov
insb
out
jg
xchg
cmpsb
xchg
andl
scas
icebp
fiaddl
dec
ficoml
lcall
sarb
into
or
rcll
add
stos
sarl
rorb
aam
or
lock
xor
lods
sub
mov
stos
dec
mov
in
sub
in
mov
sub
xchg
cmp
dec
push
sub
mov
pop
or
je
sub
rcrl
test
ljmp
cli
or
js
mov
rorb
aad
jmp
and
out
push
imul
in
pop
data16
sti
loopne
sbb
outsl
call
xor
inc
js
sti
lcall
in
test
cli
mov
xlat
add
sar
int
subb
mov
mov
mov
cwtl
lcall
cmpsl
ret
xor
leave
sti
mov
call
lcall
jnp
rcl
jb
mov
mov
mov
and
es
loope
incl
es
sbb
aam
mov
loope
pop
inc
mov
cmp
fs
test
mov
sti
cld
data16
sbbb
aam
sarb
divb
mov
sbbl
cld
pushl
les
inc
jbe
enter
xchg
arpl
pop
adc
sbb
xor
incl
xchg
mov
inc
cmp
jo
cmp
imul
ret
dec
add
pushl
xchg
into
sub
inc
clc
dec
shll
mov
push
ss
arpl
sub
lcall
xor
adc
sbb
and
cli
pushf
mov
fistps
call
adc
and
outsl
cmp
int
repnz
dec
incl
cwtl
cli
push
push
and
pop
xchg
pop
adc
fisttpll
cwtl
xchg
movsl
add
arpl
leave
inc
cmp
adc
pop
push
pop
test
mov
or
mov
daa
dec
cltd
addr16
sub
mov
hlt
lock
call
bound
movsb
pop
pusha
dec
pop
adc
jl
lock
fsubrl
mov
sbb
arpl
ljmp
sahf
pop
sub
sbb
adc
jge
mov
call
push
in
inc
jge
aaa
icebp
mov
add
adc
sub
sti
xor
addr16
jle
inc
fdivrp
jmp
sbb
aas
sbb
mov
mov
fsubr
jb
mov
mov
ffree
insl
push
push
cmp
sbb
push
xchg
cmp
push
enter
callw
or
test
rolb
aam
mov
jnp
jb
mov
jg
das
adc
dec
mov
into
cmpsl
arpl
into
repnz
in
jnp
jnp
mov
lcall
movsb
in
add
cmpsl
or
add
xchg
orb
incl
mov
cmpsb
loopne
in
dec
int
inc
sbb
jp
loopne,pt
sti
pushl
orb
aam
cmp
sbb
add
ret
repnz
jg
shll
cmp
pop
sahf
add
lock
xchg
jo
ljmp
sbb
adc
dec
dec
or
sarl
movsl
pop
ud1
mov
pushl
addb
adc
mov
and
or
inc
push
dec
ds
or
pop
popf
xor
jbe
mov
decl
add
adc
jae
lcall
jo
and
cmp
jne
xchg
enter
pusha
je
push
mov
push
jge
lds
xor
fadd
and
jle
xor
sahf
sbb
xor
xrelease
and
push
mov
out
lcall
xor
add
fs
sub
scas
cmpps
jg
mov
incl
scas
enter
jb
mov
push
dec
test
mov
test
sub
repnz
pushl
addl
mov
or
push
pop
lahf
xchg
shl
arpl
gs
push
jmp
or
addb
lret
mov
mov
add
push
jo
loop
clc
aas
mov
inc
iret
mov
xchg
jno
cmp
sub
fdivr
clc
push
gs
into
call
and
push
ljmp
mov
dec
mov
fidivl
sbb
jnp
cmp
lcall
and
fcoms
sub
cmp
pop
icebp
ds
mov
jg
pop
addl
flds
in
mov
lcall
lret
sub
mov
ror
fwait
lods
jl
push
aaa
jne
movl
dec
rcr
push
in
scas
push
mov
lret
loopne
lcall
sti
std
adc
cmpsl
mov
loop
lahf
rorl
mov
cmc
call
out
lret
call
adc
fs
xlat
fldt
shl
das
ja
call
dec
push
push
aad
fmul
sub
mov
fnsave
inc
dec
jno
mov
aas
mov
call
jne
pop
jmp
cmp
or
add
and
lods
popa
push
push
fcomps
mov
lcall
pushf
xchg
stos
xlat
pusha
sti
add
in
addr16
test
pop
in
push
sti
inc
dec
out
clc
mov
jp
add
inc
mov
movsl
pushl
stos
popa
es
adc
add
xchg
cmpsl
cltd
lock
loope
cmc
xchg
cmp
shlb
xchg
xor
mov
insb
addl
leave
stos
or
jle
xor
repnz
aam
aad
loop
push
int3
outsb
dec
mov
imul
push
mov
cmp
insb
ljmp
push
push
insl
test
sbb
pusha
xchg
push
fnstenv
les
lret
cmp
ljmp
inc
cmc
fcmovu
xchg
movsb
xor
je
iret
repz
jle
negl
fs
lcall
out
cmp
stos
adc
xlat
and
sahf
jl
insl
insb
mov
and
ret
ljmp
js
call
pop
imul
jnp
pop
jae
xor
sbb
fldenv
xor
loopne
das
pushl
std
jp
jne
pop
movsb
mov
inc
test
or
or
inc
nop
popf
shlb
inc
cld
jge
cld
flds
pushf
mov
stos
jg
aad
lods
mov
popa
lcall
jmp
lahf
sbb
sub
sarb
adc
rcrl
dec
jg
ljmp
mov
mov
into
dec
xor
dec
sbb
inc
pop
addr16
idivl
sbb
jle
hlt
bnd
xchg
aas
iret
dec
push
arpl
lret
mov
cmpsl
fistpll
mov
std
cmpsl
addr16
sbb
in
pop
lret
lods
movsl
jmp
or
ja
aaa
lret
ds
call
mov
fabs
cld
aas
in
pop
push
dec
cmpsb
push
xor
loope
sub
jp
stos
pop
mov
inc
addr16
xor
ud0
in
sbb
lock
in
or
roll
pop
addr16
jg
js
pop
lcall
sub
outsb
mov
test
cmc
cmp
out
rcrb
sub
clc
pushf
lds
in
orl
lcall
xor
jae
stos
mov
add
aad
lock
ljmp
pop
xchg
xor
popf
into
push
sahf
in
pop
push
cmp
aam
pusha
pop
cmpsl
loopne
push
outsl
pop
mov
cmpsb
lcall
nop
in
out
pop
inc
ja
call
fcoml
in
jbe
popf
inc
out
mov
jno
out
test
add
jnp
mov
insb
jmp
es
push
sbb
out
lcall
aam
in
int
add
jbe
xchg
arpl
mov
pop
clc
nop
push
jle
cli
mov
ljmp
incl
mov
and
mov
into
subb
fucomp
out
jmp
cmp
jmp
imul
outsb
pop
mov
push
and
push
push
inc
popf
aad
mov
rcl
lcall
call
arpl
push
call
cmpb
mov
call
incb
into
lret
dec
sarb
xor
fistl
jae
pop
repnz
mov
lods
jle
xor
add
pop
push
xchg
dec
loopne
lock
aaa
inc
cld
xchg
fdivrl
lcall
push
shrb
in
mov
fnstenv
xor
test
in
mov
jg
inc
mov
in
or
test
into
jb
test
rcrb
repnz
incl
daa
pop
frstor
mov
push
and
out
enter
xchg
pop
jnp
fidivs
jmp
jmp
test
gs
pop
out
and
jae
push
shlb
xchg
cld
pop
pop
ret
dec
mov
icebp
lods
mov
pop
mov
popf
xchg
movsl
shrb
cmpsl
inc
call
sub
cmp
jns
std
mov
roll
sbb
in
jle
std
push
js
jne
dec
jg
outsb
and
pushf
lahf
pop
icebp
jmp
lcall
test
ljmp
dec
pop
and
outsl
hlt
pop
cmp
lcall
jae
sub
dec
sbbb
leave
out
rcll
rolb
or
int
cwtl
test
lock
call
adc
add
pop
or
nop
clc
movsb
xor
rorb
loope
ljmp
fwait
adc
push
iret
in
inc
jg
fldlg2
pop
movl
sub
jns
ljmp
jecxz
mov
inc
dec
aaa
ret
mov
dec
add
test
jmp
mov
leave
mov
bound
and
pushl
sahf
adc
pop
ret
add
inc
mov
popa
jbe
test
aas
cmp
stc
mov
pushf
jp
incl
iret
test
out
pop
lahf
push
ret
mov
cmp
mov
push
iret
push
js
jle
call
test
mov
clc
cmpsl
fiadds
pop
sbb
sub
inc
cld
cmp
mov
stos
xchg
add
mov
popf
or
mov
xor
lock
mov
mov
int
fcomip
push
and
dec
fdivrs
mov
ja
cmp
fwait
jno
sub
dec
insl
mov
dec
jp
sti
out
or
pushf
xor
xchg
fsubs
mov
mov
fcomp
inc
xchg
int
flds
pop
jge
aas
sub
cltd
int3
adc
int
push
xlat
call
ret
clc
push
sbb
cmc
adc
push
push
cwtl
and
jg
mov
scas
insl
repz
repz
xor
cmp
push
adc
mov
lods
dec
enter
cmc
pushl
or
std
lcall
inc
imul
enter
xchg
nop
lods
xlat
fiaddl
cmp
pop
out
and
hlt
in
dec
xchg
call
pop
out
xchg
cmp
rcrb
sub
movsl
shl
jg
mov
shll
js
sub
mov
jge
nop
nop
jl
pop
dec
fisttps
and
or
cld
xor
sbb
icebp
insl
xor
inc
test
push
icebp
movsl
pushl
std
dec
psraw
mov
mov
imul
cmp
mov
sbb
decb
push
and
call
cmp
mov
std
sbb
mov
mov
and
or
pop
cld
lcall
xlat
jb
mov
push
dec
fldcw
sub
int3
js
dec
call
shrb
xor
lods
sbb
sarl
sub
sub
fsubrp
aam
lds
mov
arpl
xlat
or
mov
fxch
vdivps
call
ljmp
jns
jl
adcl
mov
pop
sbb
jbe
xlat
mov
lea
idiv
fwait
out
pxor
pop
out
out
negl
cmp
dec
loope
ss
jg
xchg
mov
dec
in
scas
fldcw
data16
ret
and
int
cmp
data16
bound
pop
insb
cli
stos
mov
incl
fisubl
loopne
cs
jae
es
dec
adc
mov
mov
iret
and
jge
mov
sub
dec
push
adc
pushl
jecxz
repnz
pop
adc
mov
mov
lret
movsb
jmp
mov
push
sbb
test
sub
setno
mov
int3
xor
mov
sbb
add
test
ljmp
xchg
loop
sub
mov
leave
jnp
out
xor
mov
inc
sub
in
and
decl
mull
lret
sub
lcall
cltd
in
icebp
jl
xor
jg
mov
jne
xchg
in
and
mov
in
mov
lea
lock
inc
cmp
imul
out
fstpl
xor
and
adc
jno
outsl
clc
decl
xchg
and
sbb
gs
int
stos
ficoms
cmp
stos
mov
jmp
mov
pop
out
stos
addr16
sbb
ds
lods
movsb
fisubrl
jg
decl
inc
sahf
aas
jb
and
cmp
mov
test
inc
sub
mov
stc
sub
pusha
jb
dec
dec
ja
inc
out
shrl
sub
ret
incl
xor
in
cmp
xchg
ljmp
mov
cmpsl
inc
les
jg
in
pusha
xor
jne
std
mov
out
xchg
andl
das
inc
lret
mov
ss
jmp
mov
sbb
xor
bound
jb
loopne
movsb
daa
sbb
cmc
adc
push
call
repz
rcll
int
daa
or
les
xchg
cmc
call
push
imul
pushl
scas
test
cmpsl
fcompl
into
loope
pop
pusha
push
mov
cmpsl
mov
inc
fistps
ljmp
pop
dec
aad
fwait
xchg
lods
xor
or
sahf
sub
rorl
mov
inc
mov
rcll
out
inc
jnp
insb
mov
ja
out
ret
idiv
jmp
insl
or
dec
and
fsub
dec
push
sub
jae
mov
roll
push
fisubrl
aad
ljmp
test
cmpsb
xchg
fdivrs
insb
pusha
and
enter
adc
xchg
addl
scas
ljmp
cld
cli
push
and
imul
stos
mov
jb
pop
fisubs
decl
aam
and
mov
pop
mov
lret
arpl
ret
jne
cltd
push
decl
mov
inc
push
fs
imul
or
push
rolb
jmp
imul
and
or
mov
xchg
out
pusha
ljmp
dec
sub
jne
scas
dec
stc
jle
sbb
jle
mov
pop
pushf
lret
sub
jae
idiv
ljmp
fldenv
and
push
pop
pop
cmp
push
jmp
push
insb
push
pop
or
cmp
push
outsb
aaa
mov
push
jbe
jno
jmp
imul
xchg
dec
mov
ret
es
shrl
inc
add
lea
ficomps
fimull
pop
jp
loop
sbb
sar
and
ljmp
mov
push
sub
jae
dec
fldlg2
cmp
in
push
call
enter
lods
ljmp
jg
scas
push
xor
bnd
fwait
inc
mov
adc
cmp
mov
das
out
xchg
and
push
xor
sub
pop
jmp
decl
lods
add
in
mov
faddp
dec
loopne
div
jg
add
fcompl
jb
lcall
push
lcall
or
mov
cld
test
mov
iret
cmp
iret
mov
es
lcall
outsb
jge
add
cmp
jbe
movb
out
mov
inc
incl
jecxz
cmp
int
insl
movl
ret
outsl
sbb
adc
js
or
xchg
out
pushl
js
jnp
je
loope
and
sbb
arpl
or
mov
incl
xchg
gs
test
iret
adc
cmc
add
push
cmpsb
jno
in
outsl
fdivl
test
into
push
gs
push
out
cltd
mov
cmp
jnp
stos
repz
jb
mov
jmp
call
dec
xchg
clc
scas
int3
nop
andb
and
rclb
das
movsl
imul
xchg
pushl
std
out
pop
pushf
movsb
pop
jmp
jno
loope
fcomps
mov
out
jg
idiv
call
popf
inc
sub
sub
sbbb
int
ds
mov
inc
mov
sub
inc
xor
mov
or
cld
mov
out
xor
icebp
hlt
ss
icebp
mov
or
mov
loopne
add
test
pop
fnstsw
jo
cmp
sbb
push
stos
jo
mov
rcrl
repz
dec
adc
add
data16
jg
call
ja
cld
inc
adc
mov
in
das
jb
lods
and
int3
and
pop
mov
pop
pop
mov
xor
mov
hlt
jmp
mov
cli
adc
pushl
les
adc
or
out
and
sar
movb
inc
sbb
mov
pop
pop
adc
ljmp
mov
in
out
aas
incl
das
push
es
push
aaa
jb
into
clc
call
or
sub
sbb
hlt
icebp
repz
mov
and
gs
ljmp
mov
test
lds
gs
ret
sti
push
cmp
out
mov
sub
mov
cli
xor
ja
ret
cmovbe
pop
in
or
sarb
jmp
decl
push
adc
inc
test
nop
loopne
pusha
data16
jo
fiaddl
test
pop
cmc
fsubrl
vpunpcklwd
adc
mov
pop
xchg
insl
xchg
mov
pop
cmpps
jo
iret
fmul
cmpsb
lock
std
or
mov
je
inc
idiv
jg
lret
add
sbb
outsb
lods
adc
bound
jmp
jb
inc
inc
mov
pushl
xchg
or
test
dec
bound
mov
jbe
adc
pop
xchg
sub
sub
xchg
inc
pop
imul
xor
addr16
add
call
dec
or
xor
ss
inc
and
or
mov
clc
jle
cmpsb
dec
jge
lret
mov
lret
lods
and
mov
inc
test
aas
addr16
xor
decl
push
inc
into
movsb
aaa
fistpl
sub
data16
pop
lea
sbb
dec
decl
or
out
iret
add
mov
lea
stos
or
enter
jecxz
loope
fwait
es
push
frstor
cmc
ret
xor
jno
xchg
shrb
xchg
out
or
mov
inc
and
and
ljmp
push
sbb
flds
popa
mov
dec
sub
push
sar
dec
mov
out
inc
out
lcall
sbb
xor
sbb
lcall
test
enter
push
push
scas
inc
xchg
inc
cmp
jnp
fwait
nop
mov
decl
push
mov
dec
loop
sarb
or
sub
decl
je
mov
mov
rcr
lahf
mov
or
fisttpll
aaa
sub
ss
pop
decl
xor
sahf
movsl
es
add
ret
popa
lock
cmp
sbb
call
sbb
aaa
push
mov
div
outsb
xlat
mov
sti
ja
pop
in
adc
in
xor
cmp
sbb
outsb
lods
sbb
aas
pop
pop
jg
jbe
ljmp
inc
and
xchg
push
aad
pushl
cmc
lock
xchg
xor
sbb
push
jl
inc
xchg
lcall
pop
mov
cmp
pop
pusha
outsl
xchg
xchg
pushf
stos
sbb
call
daa
out
adc
daa
jl
pop
stos
sarb
rorl
jmp
cli
xchg
imul
or
lods
lods
scas
add
test
cmp
scas
cld
andb
mov
dec
into
ror
inc
jecxz
scas
in
imul
cmpsl
xor
aaa
sbb
ret
jmp
mov
pushf
inc
sarl
js
int3
cld
movsl
mov
add
push
sbb
loope
test
hlt
daa
jge
imul
sbb
in
xchg
cmc
cwtl
cli
jns
push
jg
sub
xchg
add
dec
xchg
cmp
fwait
pop
pop
sub
pushl
outsb
cmp
hlt
or
inc
popf
iret
dec
xor
fsubs
jmp
lods
ljmp
test
mov
lahf
fstl
test
jp
movb
rol
ljmp
jg
mov
pop
dec
bound
dec
mov
in
pop
dec
movsl
mov
push
das
adc
lahf
xchg
insb
xlat
dec
mov
and
sbb
sarl
or
scas
scas
lods
inc
and
out
sub
jg
bnd
arpl
stc
loope
iret
or
shll
fistpll
orl
pop
mov
dec
aam
lret
cli
xor
jle
imul
xlat
cmpsb
rol
bnd
cs
lahf
sub
ljmp
clc
dec
and
inc
js
outsb
sub
addr16
push
jb
bound
inc
mov
jmp
mov
or
fisubs
inc
push
push
push
inc
insb
push
push
pop
andl
jns
jns
sub
fbstp
push
inc
ss
arpl
sub
pop
fimuls
inc
lcall
ljmp
dec
xchg
or
repz
mov
lret
aad
jmp
fs
sbb
ds
pushl
add
clc
mov
add
pop
loope
ja
ljmp
idiv
call
cmc
inc
mov
xchg
dec
mov
push
ljmp
cmpb
mov
push
add
inc
decl
mov
arpl
aam
dec
loope
mov
sub
call
ret
imul
lcall
mov
or
sub
movsb
pop
in
adc
push
and
cwtl
test
incl
sbb
cmp
push
mov
xchg
xor
jmp
jge
push
scas
lods
lds
pop
cmp
hlt
adc
dec
adc
mov
decl
inc
jb
adc
pop
mov
hlt
jnp
dec
sbb
repnz
or
pushf
inc
decl
movsb
enter
addr16
loope
xlat
clc
or
and
mov
mov
jne
mov
lret
cli
call
dec
add
mov
insl
push
lock
sbbl
or
xchg
cmp
imul
xchg
jae
imul
inc
pop
push
add
test
pushf
into
lret
xlat
popa
push
xor
out
jae
jge
aaa
enter
jl
stc
cmpsb
pop
mov
sbb
xchg
mov
dec
insb
cmp
cmpsb
sbb
ljmp
or
sbb
cltd
in
jecxz
fdivs
cltd
ss
loope
jmp
add
leave
fs
cmp
pop
cld
cmp
ficompl
mov
inc
fisubrs
sub
mov
jmp
sahf
addr16
int
imul
pop
das
testb
adc
dec
cmp
mov
push
jbe
jp
in
add
fwait
lods
jmp
addr16
decl
push
inc
xchg
mov
rcl
inc
out
inc
ret
xchg
ljmp
nop
xchg
out
ljmp
mov
mov
and
dec
adc
mov
bnd
jg
call
sub
or
dec
out
aam
test
inc
jecxz
idiv
mov
stos
xchg
xor
jle
and
insl
inc
jge
decl
cmpsb
mov
aad
cmpsb
mov
repnz
mov
mov
cmpl
decl
pushf
inc
xor
insb
in
clc
sahf
dec
stos
lods
test
sarb
loop
xor
jmp
clc
std
push
insb
int3
nop
clc
sbb
mov
ja
in
xor
in
call
pop
push
xchg
jmp
mov
in
gs
fidivl
aad
dec
je
mov
jg
xchg
pop
test
test
std
xor
lock
leave
in
popa
fdivrs
mov
pushf
dec
incl
insb
add
fs
add
mov
repnz
xchg
dec
xor
decl
sbb
add
repz
ret
stc
cs
adc
add
decl
push
mov
pop
inc
pop
fidivl
mov
or
sar
ljmp
push
jo
aas
push
pop
lods
xchg
mov
pop
icebp
dec
int
loopne
or
bound
jg
icebp
jg
scas
sub
testl
mov
lods
jae
ljmp
lcall
mov
stos
orb
dec
and
xchg
mov
xor
cmp
loope
pushf
std
push
pop
ret
mov
sub
pop
jl
push
jmp
out
jb
orb
mov
xchg
push
mov
popa
aas
movsb
push
mov
add
in
mov
push
and
xor
in
int3
inc
int3
fdivr
pop
incl
scas
pop
fcmovnu
lods
movb
xchg
inc
mov
scas
mov
adc
mov
ljmp
loope
adc
inc
dec
adc
mov
pusha
push
stos
mov
jl
je
lret
data16
mov
pop
push
sbb
ja
pop
cmpsl
cld
sub
dec
push
icebp
mov
aam
stc
lcall
outsb
scas
andb
mov
cmpsb
push
jmp
aam
dec
mov
ret
adc
mov
inc
sbb
lret
lret
outsl
mov
or
decl
adc
or
rolb
repz
loope
ljmp
xor
mov
and
mov
dec
movl
cmp
out
dec
sbb
pushl
cmpsb
cld
fldenv
pop
push
imul
in
add
mov
test
jbe
jg
in
lcall
sbb
add
jle
sarl
rol
or
push
adc
cmp
cmp
fstpl
in
xorl
jbe
mov
fcomip
mov
lahf
decl
repz
lret
cmp
mov
fwait
jo
hlt
packsswb
jmp
decl
push
aas
popa
jmp
pusha
dec
xchg
jle
xor
es
mov
loop
mov
mov
inc
mov
sub
sbb
repz
jecxz
mov
out
fstl
ljmp
sbb
push
add
add
and
xor
mov
decl
cmp
lock
jecxz
xchg
xor
inc
gs
test
mov
decl
add
clc
ret
or
fsubrs
shld
cltd
les
sbb
in
fcoml
xlat
xor
inc
and
roll
push
xchg
jle
push
shll
inc
pop
add
sar
xor
pushl
jge
lcall
xchg
int3
lahf
dec
xor
fcompl
repz
es
pushl
and
mov
mov
ret
mov
push
cwtl
add
call
pop
std
xorb
mov
scas
jp
xchg
mov
insl
aas
stc
fmuls
xchg
stos
incl
stos
push
adc
das
ss
xor
cmc
aaa
stos
mov
ja
mov
decl
lret
xor
ja
jecxz
clc
js
push
ret
hlt
add
std
push
mov
mov
push
push
mov
fimuls
push
mov
cmp
pop
sub
and
inc
cld
or
lods
stc
inc
and
xlat
pushf
stos
incl
mov
dec
dec
or
sub
mov
loopne
shll
sti
push
aas
cltd
lods
dec
jg
test
stos
out
xchg
or
pop
jecxz
mov
pop
jns
mov
jbe
int
cmp
dec
fidivrl
push
jp
inc
sub
sbb
imul
iret
outsl
ljmp
adc
xchg
fs
and
mov
xor
jp
push
das
cmpl
mov
push
mov
call
mov
sub
das
loopne
cltd
loop
adc
into
sbb
ja
les
lcall
inc
pushf
mov
adc
fcomip
decl
imul
aas
and
sahf
jle
adc
xchg
jmp
out
pop
mov
pop
push
test
or
inc
loope
jae
fdivl
repz
cmp
inc
add
movsl
cmp
ljmp
push
push
inc
shlb
scas
mov
dec
and
mov
inc
cmp
ljmp
add
aaa
cld
cmpsb
movsl
and
loope
movsb
and
lcall
jmp
inc
test
mov
push
push
inc
lds
dec
sub
push
lcall
pop
ljmp
lods
mov
iret
cli
mov
imul
decl
call
test
pop
leave
jo
shll
pusha
or
dec
mov
in
lea
and
cld
popf
inc
and
pop
leave
cli
cmp
in
call
push
jnp
mov
lock
out
iret
aad
cld
fdivr
dec
sbb
aam
enter
rorb
or
jmp
aad
fidivrl
inc
jg
ljmp
sub
and
in
xor
cmp
enter
addr16
cmpsl
or
xchg
jmp
cmc
aam
pop
lods
lahf
xor
mov
pusha
sub
pusha
movsl
mov
xchg
lahf
xchg
pop
ds
dec
pop
outsl
movsl
inc
call
fwait
adc
aaa
mov
iret
mov
jl
inc
les
push
mov
push
xlat
insb
test
pop
xor
fcomip
movsb
xor
out
pop
inc
dec
cmp
clc
mov
push
mov
pop
clc
call
cmp
ss
adc
lods
out
push
pop
mov
cwtl
pop
test
add
out
mov
jg
leave
mov
int3
in
xorl
int
xchg
fndisi(8087
sbb
and
push
pop
movsl
jno
mov
mov
sub
jge,pn
push
mov
inc
cmpsb
adc
les
mov
mov
sbb
mov
push
xchg
dec
jne
lahf
mov
icebp
cli
add
call
mov
push
xchg
stos
dec
lcallw
fsubl
jmp
call
jns
or
gs
push
dec
dec
push
xor
inc
fs
test
sbb
mov
sub
inc
mov
cld
sahf
push
ljmp
push
cmp
or
jl
jns
ss
pop
cmpsb
or
aas
inc
jl
inc
rolb
dec
inc
mov
shl
sbb
cmpsl
dec
std
lods
iret
lods
dec
mov
ljmp
add
loopne
dec
je
adc
dec
insb
sbb
xchg
test
xchg
cmp
jg
into
cmp
xchg
mov
imul
xchg
add
cmpsl
pop
cmc
incl
shlb
lds
cld
cmp
pop
dec
mov
add
push
icebp
sbb
jne
xchg
stos
rcr
cmp
jle
mov
inc
jmp
pop
mov
ja
mov
adc
push
sar
fistps
ss
gs
add
jecxz
mov
jg
roll
jnp
stc
jno
mov
inc
mov
int
mov
outsb
mov
adc
scas
jecxz
loope
orb
ljmp
shlb
mov
mov
dec
addr16
pushf
fisttps
outsl
out
xchg
scas
in
pusha
daa
push
jg
jnp
add
add
incb
lret
mov
ds
jbe
pop
arpl
mov
daa
mov
xor
test
inc
dec
adc
pop
sub
movsl
popf
lock
ret
incl
in
sub
xchg
xchg
clc
push
xor
data16
cmpb
mov
mov
mov
gs
jmp
arpl
rcrl
xchg
jecxz
aaa
fdivrl
push
bnd
out
push
lret
xchg
jnp
pushl
movsb
daa
inc
and
sbb
push
jnp
pop
repnz
and
xchg
pop
xchg
pushl
std
stos
ljmp
insl
pop
push
and
push
xor
cmp
cltd
flds
mov
pushl
dec
and
fstps
stc
int
or
add
decl
sub
push
pop
cli
cmp
dec
clc
roll
lret
aaa
std
add
pushl
mull
mov
dec
shlb
push
mov
mov
cli
ljmp
xor
arpl
xor
icebp
jmp
mov
pop
bound
cld
sar
pushl
mov
cmc
mov
jge
out
in
rorl
sbb
cmc
dec
ds
and
jg
ret
pop
mov
out
mov
sbb
mov
cld
push
js
push
je
sbb
sahf
out
leave
cld
stos
and
popa
call
dec
cwtl
aad
jg
mov
add
sti
pop
cli
pop
adc
dec
pushf
enter
ljmp
popf
mov
dec
call
xchg
jnp
rcl
imul
xchg
dec
sti
ret
stos
hlt
inc
sub
aaa
dec
pop
mov
popf
ljmp
hlt
cld
cs
mov
pushl
mov
jmp
mov
dec
popa
mov
push
and
cwtl
ljmp
stc
inc
or
rorl
sub
xor
sbb
sub
cmp
incl
and
pop
sbb
mov
push
addb
shll
out
incl
push
fdivrl
shll
mov
and
iret
shr
xchg
jo
adc
and
std
fcomip
call
mov
push
pop
stos
andb
sar
jg
dec
add
xor
call
fcoml
inc
arpl
ret
lahf
mov
jmp
mov
mov
pop
fisubs
jl
push
ljmp
push
popf
bound
arpl
aas
cmp
in
cmpsb
clc
aam
call
inc
cld
pop
cmp
push
into
out
xor
pusha
rorb
mov
xorb
aad
test
mov
xor
addl
call
mov
cmp
and
xchg
imul
dec
add
cs
negl
lods
ljmp
lds
out
es
jae
mov
addr16
mov
inc
pop
pop
cmc
jp
aas
les
sbb
stos
icebp
inc
scas
mov
cwtl
dec
xchg
aad
test
jmp
jmp
ljmp
xchg
lods
test
mov
je
or
fistl
fdivl
inc
std
xchg
jbe
mov
ret
add
fisubrs
xchg
lret
add
cli
in
push
scas
aad
add
inc
sbb
loope
stos
arpl
or
xchg
jp
je
xor
das
mov
lret
inc
inc
inc
ljmp
test
daa
movsl
cmpsb
ds
xor
and
sbb
mov
incl
ja
mov
stos
dec
call
jbe
ret
add
std
call
cmpsl
test
or
cwtl
cmp
add
test
cwtl
popf
aas
cli
sub
test
int3
pop
sub
test
cmp
pushl
rcr
out
jmp
sub
shll
jecxz
mov
xchg
cwtl
in
shr
sbb
pop
cli
dec
sub
jnp
jnp
and
movsl
test
push
jbe
inc
cmpsb
decl
insb
xchg
clc
pop
in
es
pushw
popw
ret
jmp
pushl
pop
mov
mov
jno
mov
adc
clc
sub
mov
mov
xchg
scas
sahf
or
rol
addr16
xor
adc
lret
das
jno
push
mov
subb
lret
aas
push
enter
xchg
daa
aam
or
xor
mov
add
cltd
test
pop
andb
ret
mov
push
jecxz
jge
das
aas
jae
xchg
and
pop
mov
jo
pop
cmc
scas
sbb
dec
lds
adc
rcll
clc
leave
jmp
movsb
and
mov
rcl
stc
adc
and
mov
and
inc
and
sbb
insl
or
xor
jmp
arpl
dec
ja
add
call
add
popf
or
pop
ret
daa
jp
dec
in
fdivl
repnz
xor
loopne
cld
incl
mov
cmp
scas
in
or
jbe
sbb
mov
mov
sbb
jnp
ljmp
mov
addl
pushl
jnp
jge
mov
jae
mov
frstor
test
aaa
jl
pop
nop
push
ljmp
hlt
stos
in
test
dec
jmp
outsl
adc
enter
pop
leave
jo
cltd
mov
sbb
daa
mov
das
clc
incl
pop
mov
loopne
inc
in
test
in
enter
pushl
push
mov
pop
leave
test
repz
rol
aam
jecxz
loope
fdivrs
je
xorl
stc
push
fsubrl
mov
push
arpl
std
mov
das
shrb
int
mov
pop
pop
push
arpl
outsb
pushl
es
mov
mov
imul
cmp
sahf
sbb
mov
sub
or
fcmovne
out
add
shl
in
mov
ja
shl
fwait
bound
or
jmp
xchg
pop
test
shr
or
jne
mov
clc
mov
cmp
call
dec
les
cli
iret
mov
stc
insb
popa
pushf
stos
jb
push
xchg
jle
pop
int
pop
mov
mov
lret
inc
xor
fwait
jo
sbb
pop
lcall
aas
icebp
add
ret
or
out
jmp
cmp
jecxz
lahf
mov
pushl
cld
fbstp
adc
push
in
data16
aaa
pop
rcrb
call
mov
cltd
sahf
pop
pop
add
push
jge
xchg
lods
mov
outsb
and
scas
incl
add
push
cwtl
call
mov
lods
fs
sti
lcall
add
inc
and
cs
lods
out
test
ljmp
clc
push
movsb
or
fnstsw
int3
cli
aad
push
stos
test
inc
int3
lcall
inc
outsl
lods
popl
pop
adc
in
pop
cmp
mov
or
jg
push
outsl
lock
xor
das
mov
xor
pushf
and
shll
mov
decl
cld
jge
pop
out
mov
scas
mov
lahf
out
add
pop
cmc
jo
out
xchg
sbbb
mov
mov
rcll
xchg
add
ljmp
repz
aad
test
stc
daa
ret
in
daa
repnz
sbb
int
call
aam
xor
push
mov
dec
in
icebp
jae
xor
fmulp
out
lcall
call
push
jmp
aad
imulb
shrb
pop
dec
xor
sub
jne
call
imul
xchg
pop
xchg
mov
je
stc
xor
add
int
pop
jg
loope
and
mov
push
fmuls
fsubr
in
pusha
outsb
imul
push
pop
aaa
mov
mov
es
jmp
add
insb
aad
jo
ficoms
shll
mov
rorl
mov
inc
mov
dec
xchg
cmpps
fxrstor
int3
cmp
ljmp
data16
aaa
xor
dec
push
icebp
adc
xlat
lahf
mov
out
mull
xchg
hlt
das
dec
pop
jecxz
ljmp
sbb
inc
jnp
mov
push
jmp
fs
lret
in
pop
cmp
mov
push
popa
js
dec
cmc
jbe
mov
imul
mov
lcall
adc
mov
leave
jge
nop
pop
in
jo
adc
adc
pusha
sbb
and
iret
push
sbb
pop
lds
mov
sbb
jmp
cmp
jnp
xor
lahf
cltd
test
xor
insl
sbb
sbb
pushf
sub
repnz
ljmp
ljmp
fiaddl
outsl
mov
push
ja
jl
pop
mov
pop
adc
call
dec
dec
adc
flds
pop
push
push
xor
jb
xor
jmp
sbb
incl
mov
or
and
adc
jecxz
test
xlat
lcall
cmp
shll
lock
push
inc
mov
lahf
fidivrs
push
pop
imul
data16
ss
out
mov
add
dec
les
subl
adc
push
divl
adc
aaa
add
pushl
cmp
insb
outsb
mov
cmp
imul
dec
out
cwtl
cltd
ret
imul
pop
push
pusha
xchg
lcall
push
in
les
jnp
dec
bound
push
jb
leave
les
mov
mov
test
mov
jecxz
fxch
mov
scas
or
mov
pop
mov
add
repz
pop
stos
or
jnp
test
call
jb
sahf
lods
cmp
mov
sbb
xor
mov
xchg
cmpl
addb
pop
cld
pop
sti
pop
out
rorl
add
inc
cmp
in
sbb
outsb
inc
push
mov
scas
pop
sti
mov
sbb
push
fldt
jg
cld
pusha
cmp
pushl
sub
popf
adc
inc
jbe
lock
in
jmp
jo
fildll
pop
mov
jns
loop
add
clc
fwait
or
rol
stos
pusha
imul
aad
pushl
es
and
or
scas
outsl
xchg
pop
dec
sbb
test
or
sbb
adc
out
cli
jg
xlat
push
mov
xor
add
sbb
jo
cmc
test
movq
dec
ljmp
out
jo
sub
call
add
push
xor
inc
cmpsb
mov
xchg
inc
sub
incl
idivb
rorb
mov
pop
sub
jecxz
pop
fiaddl
stc
mov
add
aas
jl,pt
cmp
xchg
leave
inc
jno
dec
lret
icebp
or
repnz
in
sbb
mov
jmp
andb
lcall
loopne
ljmp
jmp
icebp
out
ds
lods
inc
shlb
test
or
es
inc
inc
insl
ljmp
or
aas
bnd
ds
inc
incl
jae
insb
test
cmp
mov
mov
in
divb
rolb
decl
mov
mov
ret
cs
push
aaa
out
orl
aas
bound
adc
out
loope
sbb
push
xor
xchg
mov
repnz
pop
push
and
sub
cmc
mov
cmp
dec
pop
jg
jmp
daa
adc
gs
or
add
icebp
inc
cltd
push
add
popf
or
inc
aaa
cld
xor
fiaddl
or
xor
xor
mov
dec
rclb
pusha
cmpsl
test
add
pusha
ljmp
xor
jno
in
jns
mov
or
fldl
sbb
ljmp
push
mov
mov
jl
pop
sarb
int3
dec
add
or
jnp
addr16
xchg
cmp
sub
mov
jae
push
add
and
ljmp
xchg
cwtl
fs
jno
pop
scas
testb
pop
inc
mov
das
inc
push
dec
dec
mov
ljmp
cli
inc
jnp
jns
pushf
push
adcb
xor
dec
decl
mov
roll
and
out
mov
sahf
mov
or
test
or
sub
push
pop
cld
add
jmp
inc
mov
leave
mov
push
push
hlt
mov
je
adc
out
or
repz
or
cmpsb
pushf
jmp
imul
add
sbbl
pusha
sahf
cmp
lods
adc
movsb
iret
and
xchg
es
ret
jecxz
adc
fstps
inc
aaa
sbbl
es
in
dec
and
shr
inc
pushf
enter
adc
or
ss
and
lret
out
pushl
je
cli
mov
cltd
mov
sub
add
sub
mov
movsb
push
es
dec
xchg
pop
mov
rclb
or
decl
pop
rcrl
fdivrs
cmc
mov
stos
pop
out
push
jbe
adc
sub
adc
mov
pop
je
or
in
cmpsb
ret
aas
mov
lock
cmp
int
pop
push
pusha
negl
adc
cli
cmp
pop
mov
popf
out
mull
mov
imul
pop
mov
mov
jne
cli
ljmp
jg
xor
mov
test
inc
jo
push
lret
iret
mov
hlt
cmp
jno
dec
sbb
outsb
push
loopne
hlt
cmpb
sbb
sub
decl
mov
in
loopne
in
int3
mov
pop
popf
pop
xchg
add
incl
sbb
mov
mov
add
fildl
sub
out
addr16
jbe
xor
js
daa
dec
mov
ret
call
jno
fimull
jp
xor
repnz
sub
push
out
out
test
inc
imul
and
jmp
cmp
pop
mov
aam
pop
scas
les
dec
test
scas
leave
jl
sub
inc
sbb
in
test
push
ljmp
sub
adc
lcall
jmp
aad
scas
sub
ss
jmp
mov
adc
int
pop
test
call
jbe
inc
mov
les
cmp
repz
stc
cli
popl
cltd
pop
notb
ret
call
sbb
orb
mov
out
loope
jecxz
nop
clc
popa
rcll
mov
movsb
insb
cmpb
cld
jg
jmp
xor
xor
mov
aas
sub
mov
pushl
call
sbb
and
sub
mov
mov
imul
in
lcall
xchg
cmp
xchg
lcall
lods
mov
xchg
ret
shl
aad
call
adc
pop
or
fisubl
mov
mov
or
pop
icebp
jg
out
dec
xchg
xchg
cmpsl
loopne
ret
lock
mov
inc
sub
dec
sub
jmp
sti
dec
lods
pop
add
js
sbb
mov
fcomps
sub
lods
sti
add
repz
cwtl
jo
cmp
mov
mov
ja
and
xchg
ljmp
nop
xchg
inc
sarb
jge
enter
add
xor
dec
jno
clc
incl
cmp
cld
sahf
lock
push
push
jecxz
push
jae
mov
scas
loop
dec
mov
in
lahf
mov
nop
and
popf
mov
push
sarb
jmp
decl
jp
mov
aas
in
and
cmpsl
js
aas
pop
mov
data16
mov
sbb
lcall
inc
scas
sub
dec
bound
push
or
ljmp
push
jmp
daa
xchg
push
or
jno
mov
or
sub
lcall
cmpsb
imul
dec
adc
cmc
ficompl
cmc
adc
mov
inc
fstpt
ljmp
div
shll
test
iret
push
popf
or
scas
inc
mov
lock
sub
imul
call
sti
mov
xchg
rorl
loope
push
mov
outsb
mov
mov
sub
loop
cmp
dec
sub
test
aaa
mov
cmpsb
lods
jg
movb
cmpl
ja
ljmp
push
leave
jge
sub
test
ja
scas
jnp
cmp
fwait
icebp
push
insl
enter
out
in
decl
adc
ret
jae
lret
cwtl
mov
push
xchg
adc
sub
or
inc
dec
mov
das
fsubrs
inc
cmp
js
gs
cmp
pop
inc
or
out
mov
popf
cmp
neg
in
imul
push
out
xchg
cwtl
cmp
mov
decl
das
fsubrl
bound
stc
lahf
adc
enter
pop
movsl
or
cmp
inc
sub
decl
and
cmp
outsl
out
push
adc
lock
cmp
gs
ja
jmp
jmp
imul
stos
xor
nop
daa
sub
xchg
adc
xor
push
add
outsl
mov
in
and
mov
int
lock
cmp
mov
lcall
push
inc
stos
pop
cmc
orb
xor
push
sbb
jp
xor
mov
call
push
or
loop
aad
add
or
adc
xorps
mov
call
dec
pop
mov
pxor
sub
push
cmp
loopne
pop
mov
inc
xchg
dec
xor
or
movsb
incl
loope
iret
test
pop
stos
push
mov
inc
test
test
addr16
lcall
notb
cmp
ja
xor
sbb
je
mov
dec
test
jb
fistps
mov
push
in
xchg
dec
sub
and
sahf
sub
fnsaves
mov
or
dec
testb
lcall
arpl
pop
and
insl
shr
or
adc
mov
mov
push
add
push
stos
call
mov
cli
pop
mov
mov
add
hlt
dec
daa
push
jne
pop
call
fisubrl
inc
pop
sysret
inc
add
outsl
movsb
iret
xor
cmc
lret
jae
adc
cmp
leave
stc
push
pop
mov
inc
pop
aaa
jmp
decl
xchg
lea
xchg
jns
popf
sub
push
add
inc
psrld
xor
out
sahf
pop
mov
mov
cltd
enter
pop
shll
mov
in
iret
ja
fisubrl
xor
repnz
je
loope
cmpsb
mov
loop
ljmp
adc
jle
sbb
xchg
in
xor
mov
in
pushl
jnp
fidivrs
pushf
pop
sub
bound
cmc
push
popa
mov
xchg
fists
mov
mov
lcall
adc
rorb
popa
jnp
pop
mov
dec
fcompl
aaa
outsl
mov
hlt
ja
test
decl
inc
mov
jl
fcomps
sbb
jg
xchg
pop
stos
in
fwait
mov
push
mov
sar
decl
out
mov
mov
sub
negb
and
and
test
decl
pop
mov
in
pop
jle
adc
cs
jnp
xchg
out
mov
xchg
fs
mov
out
cli
push
fstl
jg
inc
shr
xor
pusha
int
ret
leave
jp
mov
mov
ljmp
sub
mov
insl
mov
aam
xor
dec
jno
add
ljmp
scas
and
sbb
fmuls
add
movaps
dec
mov
pop
shll
inc
push
incl
push
fwait
jecxz
adc
mov
lret
sub
ljmp
lcall
repnz
jl
xchg
cmc
xchg
xor
adc
in
adc
push
and
xchg
stos
test
call
pop
popa
mov
push
mov
and
test
push
leave
lods
fidivrs
add
dec
fwait
add
hlt
cld
mov
add
adc
inc
outsl
adc
xor
pusha
lods
outsl
adc
pushl
and
scas
mov
jmp
nop
pop
in
push
mov
mov
rorb
mov
push
test
or
adc
mov
in
call
inc
sub
or
sbb
mov
shlb
push
fucomp
loope
mov
scas
dec
ljmp
pop
iret
pop
ret
mov
mov
mov
leave
sbb
pop
or
aam
fcom
lcall
call
xor
add
fsts
mov
sub
ljmp
push
dec
fstps
filds
pusha
mov
inc
lods
sbb
faddp
pop
jl
xor
cmpsl
lret
incl
fwait
sub
adc
sub
stos
pop
movb
inc
and
jbe
incl
shlb
xchg
enter
push
adc
sbb
cmp
cmp
call
jmp
jae
sub
push
mov
ret
in
setno
xchg
aas
push
push
mov
mov
pop
insl
add
mov
lods
nop
pop
mov
ljmp
xchg
jo
mov
xchg
std
cltd
cmp
mov
andl
add
out
fwait
movsl
push
mov
cmp
fstps
add
fs
lcall
push
adc
mov
shl
jecxz
leave
or
and
dec
xchg
cld
mov
shlb
mov
cmp
pop
mov
adc
push
fidivl
mov
fcomip
pop
or
fnsave
pop
lds
lods
fisttps
fwait
lret
mov
faddl
fxch
add
clc
ds
jmp
arpl
adcb
das
dec
add
pop
jmp
popf
test
stos
outsb
cmp
out
inc
jae
je
push
test
and
fcmovb
sbb
decl
les
cmp
test
stos
call
mov
xor
test
fcomip
scas
xchg
mov
dec
jge
adc
dec
lock
cld
mov
aaa
xchg
xchg
adc
and
adc
jmp
dec
jecxz
mov
test
adc
mov
xchg
icebp
je
push
jne
jnp
jmp
jnp
inc
ja
mov
lret
loope
test
pop
pand
test
lock
cmpsl
fs
lcall
loop
jle
sub
pop
push
out
dec
imul
maxps
jg
leave
mov
ljmp
int
adc
or
add
pop
dec
cmpsb
loop
mov
iret
loope
lret
nop
dec
jne
mov
mov
imul
call
sub
or
mov
xlat
cmp
pop
jl
sub
popf
dec
add
lret
decl
sbbl
push
cmpsb
sub
add
dec
psubusb
and
mov
incl
ljmp
es
stos
mov
jmp
mov
sbb
push
outsb
popf
std
ljmp
push
dec
insb
jmp
xchg
repz
dec
push
aam
lods
out
xchg
add
xchg
test
cltd
jge
adc
push
nop
mov
ljmp
fptan
fwait
mov
leave
or
in
add
lea
jge
xchg
gs
pop
jae
jg
pop
stos
int3
or
or
sbb
pushf
push
adc
mov
fs
mov
pusha
je
jnp
iret
sbb
xchg
mov
sbb
jmp
in
jle
lcall
fisubs
or
push
inc
xchg
push
xorl
mov
cmp
push
loopne
frstor
cmp
cmp
adc
xor
insb
pop
xchg
xor
decl
out
addr16
icebp
jg
cltd
jne
movsb
jge
adc
adc
xchg
lahf
dec
xchg
loopne
cmpsb
jmp
push
cmpsb
inc
lcall
mov
fs
rclb
jge
push
hlt
sbb
es
cs
add
adc
mov
scas
jb
in
clc
xor
xchg
repnz
jmp
xor
hlt
sbb
mov
inc
and
add
jle
into
inc
push
stc
xor
ljmp
cmp
add
push
push
add
sub
push
cmp
xor
push
or
mov
pop
push
cmpsb
push
mov
pop
pop
pushl
cmpsb
jge
icebp
lods
aas
mov
int
fmull
mov
pop
push
lock
idiv
testl
cmpl
shl
xchg
int
mov
mov
jae
scas
jp
lahf
inc
inc
sbb
call
and
pop
pop
mov
mov
divl
aad
andb
cmp
bound
ljmp
jno
mov
imul
push
xchg
jecxz
mov
test
lcall
pusha
lahf
lret
sarl
mov
inc
insb
mov
lock
jmp
mov
or
inc
lods
sub
in
jbe
mov
jmp
enter
addr16
decl
cmc
xchg
shlb
mov
or
jb
sbb
pop
outsb
mov
fimuls
sti
xor
lcall
inc
insb
movsb
jne
and
xlat
sub
fnstcw
push
xor
out
cmp
loopne
int3
jmp
popl
decl
jbe
jns
int3
mov
inc
jns
inc
xor
adc
jno
jae
pop
arpl
xor
js
and
adc
push
xchg
enter
lahf
pushf
std
mov
xchg
push
data16
sar
jg
lcall
inc
cli
jbe
rcr
sub
mov
push
fists
jge
inc
cmp
cli
mov
mov
mov
xchg
xchg
rcl
fsubrs
cld
pop
int3
loop
fistl
rcl
pushf
or
nop
xor
ja
or
outsb
sub
das
insb
outsl
sub
fiaddl
jmp
mov
lcall
xor
aas
jae
xor
rcl
sbb
out
lahf
sbb
das
loopne
inc
imulb
test
test
pusha
xchg
call
or
mov
lahf
adc
aas
jbe
mov
paddb
adc
cmp
mov
nop
popf
push
imul
inc
add
sub
out
mov
xor
lcall
jb
fistps
popa
lahf
xchg
out
and
push
sub
decl
addr16
scas
insb
dec
cmp
enter
jecxz
add
push
fldt
cs
rorb
lds
in
adc
sar
dec
sahf
pushf
lods
xlat
push
fisubl
es
fmul
add
cld
call
negl
fsubs
jp
cmp
dec
in
xchg
mov
or
cmp
out
push
movsb
mov
icebp
int3
jl
out
jp
dec
add
jmp
aas
sub
adc
cmp
scas
fistpll
mov
push
aam
popf
xor
shlb
incl
popa
shll
sbbl
push
xorb
or
mov
pusha
and
into
pop
aaa
movsl
dec
mov
pop
hlt
ljmp
aad
dec
mov
mov
pop
xchg
fsubrs
lock
lcall
mov
imul
cmp
int3
mov
cmc
dec
xor
mov
lcall
scas
pushf
jmp
jae
inc
mov
or
daa
scas
enter
adc
jmp
add
testb
mov
jecxz
push
scas
orb
rcl
or
adc
incl
mov
jnp
jns
sbb
inc
push
jno
or
jae
jmp
cmc
mov
cmp
push
cmp
cwtl
movmskps
and
jo
pop
sbbl
adc
stos
mov
out
clc
sbb
out
out
add
loope
push
push
das
inc
test
lcall
push
fwait
xchg
mov
cmp
xor
push
inc
pop
mov
pop
sub
in
call
adc
push
fists
loop
cmp
dec
inc
cmp
call
pop
neg
xor
jmp
clc
add
test
sbb
fstl
loope
jg
mov
xor
gs
addr16
dec
jne
xchg
pop
sbb
pop
push
mov
sbb
stos
decb
fisubrs
adc
lock
aam
dec
pushl
mov
call
scas
jg
sahf
mov
je
mov
mov
shr
or
ljmp
decl
insl
dec
popf
repz
fldt
sbb
pop
arpl
push
fildll
incl
fld
aaa
scas
popa
dec
xchg
jnp
cld
jae
push
lds
cmpsl
popf
call
aas
adc
lahf
sub
stos
inc
xor
in
sbb
out
jg
js
lcall
scas
mov
hlt
incl
fldcw
mov
sahf
in
jl
mov
mov
jmp
ljmp
adc
pusha
add
pop
lahf
dec
add
or
xchg
lcall
addr16
decl
cmc
sub
ds
ja
and
in
pop
cmpb
movsl
mov
shrl
pushl
adc
in
dec
xchg
ret
cmpsb
jno
cmpsl
adc
jne
inc
pop
fnstcw
mov
das
mov
lcall
mov
pop
rcrl
decl
and
stc
aam
xlat
test
jl
pop
cli
sbb
mov
jmp
out
cmp
lret
cmp
int
rorb
mov
mov
test
hlt
dec
lea
sbb
push
repnz
sub
enter
lcall
loope
push
js
mov
insb
mov
ret
or
push
scas
sbb
ds
lcall
call
addr16
dec
js
xor
lahf
data16
pop
scas
or
inc
pop
mov
clc
sub
xor
xor
ret
lods
xchg
ljmp
je
and
daa
inc
rorl
out
cmc
xchg
idiv
fists
pop
js
mov
out
mov
cld
adcb
das
ljmp
mov
cmpsb
add
adc
lds
lds
pop
add
inc
dec
cli
shr
and
decl
push
rolb
push
sbb
stos
out
inc
or
decl
inc
jo
daa
xor
push
pop
and
jmp
add
xlat
movl
out
js
jnp
jecxz
std
sbb
mov
mov
stc
in
and
xor
or
inc
xchg
pop
inc
bound
sbb
or
cld
adc
inc
cmp
in
cmc
pop
inc
jp
inc
xchg
pop
iret
jno
jae
jns
scas
lret
jmp
imul
add
mov
rorl
data16
popa
out
out
xor
icebp
incl
xchg
push
sbb
outsb
xor
jmp
lds
mov
jno
call
decl
inc
mov
sub
data16
fldcw
dec
addb
jecxz
mov
int
pop
ss
hlt
mov
mov
cmp
jnp
sub
test
sarl
and
cmp
mov
mov
xchg
sbb
into
sbb
pop
je
fsubrl
ljmp
pushl
jne
faddl
fiadds
and
addb
xor
xor
jmp
ljmp
mov
mov
mov
popl
dec
std
in
sbb
test
outsl
decl
sbb
mov
dec
mov
add
add
cld
xchg
fs
sbb
jecxz
jg
pushl
imul
imul
mov
sub
out
cld
insb
test
add
jge
roll
jne
inc
pop
cmpsl
mov
sub
incl
imul
dec
pop
stos
sar
out
sbb
jnp
adc
cli
lahf
xor
sub
scas
sbb
push
dec
mov
pop
std
pushl
test
inc
add
jnp
pop
pop
xchg
dec
mov
cmp
ljmp
shlb
sub
lret
mov
jmp
mov
lock
lahf
mov
int3
loopne
arpl
mov
fmuls
in
sbb
jmp
es
mov
cmp
js
jl
arpl
fdiv
fidivrs
cmpsb
enter
fsubl
cmp
add
inc
fldl
mov
cmp
push
mov
xor
push
cmp
cli
inc
cltd
popf
inc
jne
xchg
or
sub
decl
ljmp
mov
jl
mov
das
cmc
jne
jge
jmp
push
xorl
loopne
sti
sub
and
mov
adc
nop
fcomip
cmp
sub
pop
cmpsl
pop
ret
pop
imul
fmull
mov
enter
cmp
rcrb
frstor
sbb
jno
rcr
gs
int3
shr
cmp
xor
les
and
dec
mov
mov
sti
mov
mov
shr
cs
xor
dec
sub
imul
sub
lret
out
aam
push
xchg
call
subb
enter
mov
int3
out
cmpsl
clc
sar
xor
aad
stos
push
cwtl
rcr
in
jg
pushl
add
push
sti
dec
and
cld
int3
mov
add
test
pop
pop
fcomip
das
rorb
push
mov
pop
dec
or
cli
lcall
sbb
rorb
pop
jecxz
add
jmp
push
lahf
adc
out
imul
lods
lock
out
xchg
jae
push
pusha
xchg
mov
adc
adc
inc
test
jnp
sub
jmp
je
stos
popa
rolb
sbb
mov
sbb
js
sbb
dec
ret
add
sbb
jns
lds
fwait
sahf
loop
pop
xchg
scas
stc
adc
or
adc
jl
mov
inc
fisubs
jg
jg
cmp
mov
adc
cmpsb
repz
sub
jmp
cmc
decl
loope
jle
movsl
add
dec
pop
movsb
mov
xor
ja
into
fwait
popa
adcl
ljmp
roll
loope
insl
adc
addr16
mov
in
sub
stos
loopne
push
loope
call
loop
xchg
in
add
jae
mov
js
test
xchg
xchg
xor
ret
mov
cmp
insb
hlt
lcall
data16
je
push
scas
mov
add
jl
adc
jmp
or
cli
stc
jbe
cs
mov
loopne
cli
outsb
sbb
scas
jl
popa
sbb
xor
sbb
idivl
pusha
jb
adc
ret
or
mov
jmp
mov
xchg
ljmp
test
dec
mov
cmc
or
xchg
mov
and
dec
add
incl
addr16
iret
mov
shll
add
and
or
mov
ret
push
pushl
les
xor
mov
and
das
call
nop
cltd
lea
xor
pushl
hlt
repz
xor
mov
push
mov
dec
insb
cmpsb
xor
sbb
enter
aaa
std
pushl
pop
pop
xor
nop
arpl
sub
mov
inc
jb
and
sbb
cmp
xor
push
mov
xor
xor
jo
push
ljmp
xchg
xchg
pop
push
jl
pop
shll
lea
fdivr
sarb
mov
inc
sbb
xor
dec
in
incl
mov
ja
jo
jae
or
jmp
adcl
dec
psubsw
js
mov
mov
ljmp
sbb
mov
mov
lret
cli
ds
call
mov
cld
cwtl
ss
add
in
mov
testl
xchg
push
sbb
push
std
cli
lahf
sub
pop
pushf
fs
mov
dec
scas
lret
jmp
jge
incl
pop
push
add
add
popf
mov
iret
add
or
lcall
in
outsb
andb
xchg
or
push
ljmp
lods
mov
sub
ljmp
jp
movsl
mov
mov
repnz
psubb
cmpb
or
xor
nop
pop
test
lcall
cmpb
xchg
daa
addb
lahf
iret
insl
stc
incb
pop
out
imul
pushl
lea
pop
pop
ss
imul
dec
xlat
pusha
pop
int3
enter
decl
fwait
inc
sahf
mov
cmpsl
frstor
int3
cld
push
sub
cmp
xchg
rcll
mov
decl
in
addr16
push
ret
dec
inc
or
and
inc
adc
decl
gs
jecxz
loop
xchg
push
mov
adc
mov
testb
push
es
pushl
mov
scas
test
mov
mov
push
add
xchg
and
cmp
push
cmp
or
ljmp
rol
fxtract
xor
mov
xchg
in
ljmp
repnz
cmp
push
mov
xadd
mov
xor
in
sbb
xor
and
dec
sub
mov
addr16
lods
adc
sarb
xor
roll
and
pop
hlt
ljmp
jnp
sbb
loop
fcmovnb
pop
js
insb
mov
lcall
dec
loope
sbb
dec
lds
sbbb
cmp
dec
add
iret
inc
mov
incl
sti
sbb
dec
imul
inc
mov
mov
sub
mulb
outsl
cltd
rcl
jmp
jne
add
fs
or
xchg
jg
addr16
test
or
cmp
mov
call
cmpsb
xor
fcomi
mov
loope
or
sub
sub
adc
fists
lea
mov
xor
ljmp
xor
pop
cmp
cld
and
fistpll
jg
fistpl
push
mov
ljmp
mov
insl
pop
cltd
shll
aad
inc
shrb
and
push
int
mov
decl
mov
xor
inc
dec
or
inc
dec
cld
aam
xchg
rorl
ret
decl
rcrl
adc
inc
mov
mov
pop
mov
pop
jl
cmp
mov
or
stc
roll
or
cli
test
push
loopne
push
jnp
dec
pop
cmc
roll
fistpl
stos
les
inc
clc
mov
idiv
mov
cmpsb
xchg
decl
cmc
insl
dec
arpl
add
movsb
jge
mov
pop
mov
or
jg
decl
cmp
gs
mov
lahf
xchg
sti
cld
roll
or
mov
and
std
lcall
cmp
cmc
jle
push
std
aam
mov
or
jge
sahf
mov
and
cmp
sbb
mov
jmp
inc
pop
push
push
pushf
stc
push
adc
aad
push
mov
into
jno,pt
cmpsb
loope
jns
lods
repnz
mov
lcall
clc
in
incb
pop
loopne
in
lods
les
cmp
push
cmc
test
xchg
jb
adc
into
loope
ficoms
push
fmuls
iret
int
inc
outsb
add
and
test
in
sarl
push
sub
int3
imul
les
push
shll
mov
dec
je
inc
popf
call
cmp
in
lret
shrb
mov
sbb
cmc
inc
jecxz
in
push
xor
roll
jl
aad
push
fiadds
adc
ret
nop
imul
push
mov
xchg
stos
sbb
out
aad
addr16
sbb
cmp
aas
scas
cmc
scas
and
lcall
cmc
dec
push
cmp
push
insl
loop
mov
mov
test
adc
das
cli
cmp
and
aam
inc
jbe
insb
inc
test
adc
add
add
jg
jne
xor
sub
pop
lret
adcb
push
cld
fildl
aas
ret
sub
ficompl
push
lret
loope
xor
in
mov
cltd
enter
add
sbb
pusha
add
scas
xor
xor
jp
repz
ljmp
jmp
popf
fucomi
mov
aam
push
pushf
loopne
mov
xchg
in
pop
mov
ljmp
mov
lock
jmp
imul
lds
dec
sbb
sbb
jo
sub
dec
je
jg
movsb
inc
dec
add
cltd
xchg
icebp
sahf
xor
ljmp
inc
lea
aam
mov
insb
add
add
scas
sub
fcomip
decl
hlt
sti
mov
dec
cltd
movsl
loop
ss
mov
inc
sbb
lcall
repnz
jno
jo
mov
lret
fimuls
cltd
inc
nop
push
xor
shrb
dec
sub
jmp
jne
es
xchg
lcall
xchg
inc
loopne
mov
mov
mov
incl
pop
pop
sbb
mov
lods
pushf
bound
fsubl
mov
xchg
sbb
sti
sbb
fcompl
dec
shlb
pop
pop
jge
je
lds
mov
adc
sub
mov
pop
fdivrl
inc
mov
in
sbb
sbb
xor
pushl
and
in
and
push
sbb
pop
jno
jmp
int3
enter
in
fmul
add
sbb
xchg
in
mov
inc
out
mov
cmpsb
icebp
in
push
shrb
mov
in
outsb
mov
add
sub
cmp
xchg
jbe
mov
and
mov
xlat
push
jo
mov
std
push
call
jge
aad
cli
xchg
outsl
sbb
add
popa
lret
xchg
in
cmp
icebp
mov
ljmp
pop
xchg
pop
cltd
inc
xchg
mov
ljmp
mov
cmp
pop
scas
sub
inc
fcompl
lcall
andl
mov
nop
xor
sti
std
test
cmpb
scas
mov
daa
icebp
ljmp
push
push
std
mov
rorl
cmpsl
pop
mov
jg
outsb
pop
rcll
jge
push
mov
in
outsl
mov
outsb
xorb
call
add
jmp
push
cmc
aas
fdivr
jne
jle
xchg
lcall
mov
mov
mov
xchg
aas
lock
negl
das
or
dec
add
ljmp
jl
push
mov
fldenv
pop
lret
jnp
xchg
not
pop
pop
outsl
lret
xor
decl
icebp
rcl
rcrb
and
loop
jb
push
jnp
pop
fs
jmp
mov
decl
cli
mov
fiadds
xor
jmp
in
mov
jmp
fld
in
pop
aas
sub
mov
mov
xchg
lret
inc
mov
test
loop
or
xchg
xor
gs
es
and
mov
loope
shrb
ja
sbb
sub
outsl
sbb
cmpsl
push
ds
out
pushf
pop
jmp
xchg
push
inc
add
out
ljmp
and
or
flds
sarl
flds
inc
mov
ja
jmp
ja
inc
imul
jbe
aaa
push
or
cmp
inc
test
cmp
iret
xchg
out
mov
scas
lret
clc
call
xchg
orb
incl
mov
pop
and
fistps
lock
repz
add
sub
add
repnz
pop
dec
call
jecxz
decl
cwtl
nop
lcall
push
mov
and
repz
xchg
pushl
add
mov
push
mov
ret
je
out
push
aas
or
ljmp
sub
sbb
mov
loopne
cwtl
aad
les
dec
cmp
mov
mov
pop
cli
add
call
cld
lcall
or
cltd
scas
jbe
js
lods
xchg
hlt
dec
fs
scas
arpl
inc
test
incl
mov
push
or
test
pop
cmp
xor
cmc
mov
ret
push
faddl
loopne
pop
cmpsl
sbb
pop
fbld
adc
xor
aam
sbb
decl
sbb
mov
int
sub
clc
movsw
popl
adc
aam
cmp
call
add
leave
imul
gs
mov
adc
popa
fwait
push
daa
dec
or
or
dec
cmp
mov
rcll
call
lret
icebp
inc
fndisi(8087
fldt
mov
xor
loopne
call
pop
in
pcmpeqd
insl
cmp
push
jp
or
fimuls
push
mov
sbb
aaa
pop
xchg
leave
nop
arpl
ljmp
push
rolb
sbb
jno
fdivp
pop
xchg
arpl
ss
pop
or
cld
decl
fiadds
cmp
inc
test
dec
inc
inc
jl
incl
outsb
add
popa
lret
sub
scas
mov
jmp
mov
push
ds
repz
push
test
mov
insb
sti
test
sbb
mov
cmp
dec
push
and
xchg
sub
xor
cli
inc
jo
idivb
and
fisubl
push
xor
mov
xor
fldenv
insl
pop
pop
pop
sbb
xchg
sbb
lds
cwtl
sbb
push
mov
ja
mov
jmp
jge
int
out
jae
cltd
in
ret
ljmp
sub
jle
pop
jne
jg
xor
add
mov
or
leave
addb
jg
je
inc
loope
mov
sub
outsl
es
cli
sarl
outsl
je
aad
sbb
mov
push
xor
mov
lcall
shlb
inc
loope
les
call
pop
test
push
xor
sub
lock
xor
pusha
loopne
bound
cmpsb
xchg
mov
xor
pushl
cmp
jp
mov
sbb
cld
out
fmull
mov
in
jmp
inc
mov
xchg
xor
xorl
dec
mov
into
push
negl
xor
push
movsb
xor
dec
lods
jne
ret
lcall
dec
inc
and
pop
call
je
into
push
decl
fdivr
pop
scas
les
ret
mov
stos
mov
scas
lahf
cs
lret
shrb
jmp
cmpsb
cmpsl
mov
cmp
mov
mov
or
hlt
in
mov
cwtl
mov
in
or
jmp
mov
roll
jns
ss
imul
mov
dec
fs
lret
sbb
ljmp
jbe
sub
push
jo
loop
cmp
les
xchg
out
jg
ja
xchg
mov
sbb
xchg
jns
out
jmp
sbb
nop
jnp
loop
sub
push
testb
ret
mov
gs
push
push
cs
mov
sub
jbe
push
xor
xchg
lock
add
fwait
out
pop
sbb
adc
data16
or
jmp
scas
pushl
xor
enter
add
push
aad
pop
and
xchg
je
stos
dec
popa
or
clc
call
sbb
mov
or
push
notl
dec
cmp
mov
pop
jl
pop
mov
arpl
pop
shll
es
jmp
xor
xor
je
jne
add
dec
push
push
jp
cltd
push
push
loop
call
negb
push
jecxz
lret
jnp
mov
fs
repz
aaa
pop
mov
push
test
sbb
xchg
std
dec
push
sub
mov
mov
push
lcall
insl
sbb
imulb
lds
xchg
jg
lcall
add
or
mov
push
daa
daa
adc
xchg
sbb
lcall
shr
nop
punpckhdq
push
sub
ret
stos
and
bound
inc
lahf
push
mov
inc
jge
adc
movsl
hlt
adc
or
subl
pop
repnz
dec
stos
xor
fldt
mov
fisubrl
iret
stos
cmp
insl
adc
mov
and
inc
hlt
mov
sub
xchg
add
add
push
rorl
cmpl
aaa
decl
cltd
dec
mov
sub
push
jp
mov
or
lods
jg
jmp
stos
sub
mov
inc
xchg
jns
into
inc
subb
call
insb
lret
in
pop
jb
mov
bound
jbe
loope
insb
push
out
and
repnz
mov
mov
cmp
enter
je
jmp
outsl
push
jns
call
sbb
cld
dec
sbb
add
pusha
ret
mov
sahf
sub
cli
js
mov
jo
push
pop
fistpl
int3
cltd
insb
inc
adc
inc
daa
sar
or
not
call
sbb
test
pop
mov
mov
xor
loop
das
loope
cmc
lock
incl
xor
mov
aam
lods
push
std
repz
inc
fidivs
subl
decl
fdivl
xchg
frstor
mov
fsub
and
adc
dec
call
sti
xor
cli
call
cmp
movsl
les
mov
fst
js
cmpsb
push
jae
mov
incl
scas
xor
outsb
adc
fs
push
push
jle
lahf
cltd
mov
mov
dec
or
push
inc
in
jp
popf
pushf
scas
mov
push
push
aas
aas
xor
ja
out
adc
setbe
jmp
mov
mov
mov
ficompl
push
out
fstl
arpl
adc
aad
cmp
fcomps
adc
cmp
push
mov
ret
cld
dec
out
aas
adc
mov
sub
ljmp
dec
sbb
push
nop
mul
lock
mov
and
pop
adc
popl
mov
test
dec
iret
negl
jge
xchg
pop
sti
outsb
push
inc
and
ljmp
adc
xchg
inc
imul
scas
nop
lods
addr16
pop
data16
jg
fisttps
fmul
pop
push
pop
mov
lcall
enter
ja
loop
sar
jmp
addr16
loope
hlt
mov
and
dec
dec
jl
mov
and
pop
int3
sbb
incl
in
test
adc
sbb
cs
iret
sbb
pusha
lds
inc
addr16
inc
sbb
hlt
add
stos
movsb
jle
cmpsb
call
loopne
xor
cmp
cmp
push
fs
dec
mov
in
mov
mov
xor
dec
pop
frstor
mov
repz
inc
loope
fdivrl
dec
rol
test
xor
in
shl
cmpsl
call
cmp
dec
sbb
xchg
sahf
fs
idiv
mov
pushl
shl
out
mov
xor
and
mov
stc
add
pop
rcrl
jle
pushl
mov
sbb
pop
jb
mov
push
push
push
cmp
lds
adc
dec
adc
les
decl
stos
clc
outsb
mov
rcrl
rorl
xor
sub
cmc
repz
in
sub
ss
cmp
fsub
aad
das
adc
mov
mov
call
pushl
lahf
mov
push
sbbl
stos
insb
js
dec
call
jb
ss
test
xchg
pop
sbb
inc
mov
shlb
xor
push
mov
incl
push
out
mov
jecxz
mov
pop
sub
arpl
int3
and
jecxz
cmc
pop
xor
jmp
mov
pusha
test
outsl
dec
jle
hlt
mov
movl
mov
inc
scas
call
mov
adc
add
jp
dec
add
enter
push
mov
lahf
lods
push
roll
pushl
stc
hlt
xchg
sbb
mov
sub
inc
pop
fbld
add
js
dec
repnz
out
or
dec
outsl
pop
in
aad
fstpt
and
rcr
jle
cmp
xor
mov
push
loopne
mov
jne
pusha
lock
adc
out
bound
lahf
cs
fsubl
lcall
into
add
es
out
lock
mov
and
xlat
jl
arpl
jg
fbstp
adc
clc
lcall
sbbb
inc
add
ljmp
pop
mov
sub
imul
js
fsub
mov
cmp
jbe
fisttpl
sbb
aad
je
subl
jo
xchg
xor
int3
repz
cmp
xchg
mov
lds
decl
repz
push
div
mulb
scas
pop
sarl
cmp
andl
inc
pop
lahf
add
push
ss
jp
popa
or
incl
pop
push
push
mov
fists
lods
call
lret
adc
xlat
shrb
sbb
pushl
or
jbe
push
push
imul
pop
fcomip
pop
cld
xchg
out
ds
out
std
mov
mov
mov
sbb
adc
adc
ljmp
lods
mov
push
rol
lret
ss
pop
cs
pop
add
push
loop
cmp
dec
push
inc
push
inc
je
inc
cmp
rcll
data16
and
arpl
dec
mov
mov
incl
mov
lods
popf
shll
lret
mov
mov
mov
jg
xchg
xor
scas
loopne
ja
adc
mov
out
cli
outsb
adc
lods
out
decl
repnz
mov
cmp
dec
jl
cmp
sahf
in
add
aad
and
decl
andnps
mov
es
sbb
jb
cmpsl
xchg
mov
rcrl
pop
mov
push
xor
xor
mov
testb
movsb
fcomip
call
fidivs
jo
sbbb
gs
clc
push
icebp
or
incb
jnp
sub
dec
and
mov
out
and
call
out
lcall
stos
xchg
jl
popf
divl
mov
pop
cmpsl
pop
push
cld
ljmp
in
mov
or
sahf
sbbb
imull
pop
xchg
loope
mov
cmc
decl
and
std
and
or
add
push
cld
push
insl
mov
mov
push
push
scas
mov
mov
sbb
xor
push
test
arpl
sar
incl
inc
push
pop
inc
mov
lods
addb
inc
jns
jg
dec
sbb
mov
ficomps
icebp
lods
mov
cmpsl
lcall
mov
adc
jae
daa
jmp
rcrl
xlat
adc
sub
outsb
notl
xor
call
cld
xchg
or
cs
dec
mov
loopne
decl
cld
and
pop
not
out
mov
jb
pop
or
nop
lret
pushl
fcompl
or
add
mov
mov
out
push
mov
dec
hlt
sub
decl
pop
outsb
aas
add
pop
push
ljmp
in
mov
push
xchg
andb
mov
ljmp
and
movsl
daa
push
cmpsb
int
xorb
push
jno
xchg
dec
and
dec
inc
insl
js
loope
lret
mov
and
icebp
dec
jp
or
cwtl
arpl
sahf
adc
pushl
std
cs
add
and
fadds
dec
out
or
movsl
enter
cld
inc
and
cmp
jecxz
clc
sub
push
and
hlt
lea
in
jp
push
xor
add
sbb
jmp
mov
stos
rcrb
in
xchg
mov
test
pop
nop
and
mov
jp
out
xor
mov
xchg
jle
pop
stc
pop
aad
add
mov
out
fcomip
outsl
clc
lea
mov
push
or
cmpsl
pop
js
dec
cld
or
stos
decl
adc
push
inc
xor
xlat
mov
push
fwait
xor
push
in
sbb
out
aam
gs
int
sub
adc
push
popf
or
movsl
and
or
shll
or
fnsave
test
jge
std
xchg
bound
lcall
mov
daa
pop
sti
test
addr16
in
xor
push
xchg
jnp
std
jg
pushl
rorb
and
pop
xchg
movsl
xchg
faddl
push
out
xor
idivl
cmp
sbb
inc
dec
push
loope
or
jne
pushl
and
push
cmp
lret
xor
and
scas
sbb
jae
mov
call
cs
inc
xchg
cmc
cmp
out
cmc
mov
hlt
loop
inc
or
add
pop
inc
mov
test
inc
loopne
cs
into
in
cwtl
negl
sahf
push
push
in
faddl
aaa
push
clc
inc
pop
push
pop
or
scas
xchg
popa
test
ds
call
adc
cltd
push
cmpsb
pusha
jecxz
inc
shlb
imul
ss
clc
push
mov
mov
enter
lea
jle
pop
inc
inc
pop
lods
loopne
idivb
jmp
icebp
call
fisttps
notl
lds
daa
xchg
fs
or
jg
ljmp
cs
int3
out
add
dec
push
dec
in
mov
add
cmp
mov
xchg
mov
bound
cs
arpl
arpl
adc
lock
incl
ret
jbe
call
shlb
xor
or
fdivrp
lret
call
cli
sub
dec
jle
mov
jg
insb
in
addr16
fdivl
les
call
pop
hlt
add
ficoms
stc
daa
adcl
lock
jbe
mov
mov
decl
filds
push
outsl
add
fwait
es
mov
xor
aaa
icebp
xor
xchg
incl
bound
xor
pop
bnd
data16
shlb
mov
arpl
pop
push
popa
dec
mov
pushf
sbb
fdivrs
bound
cli
gs
jecxz
jno
call
or
adc
xor
or
pop
fwait
jg
idivb
ljmp
jmp
jl
mov
out
xchg
out
andb
in
les
sbb
imul
gs
rcrl
ret
in
jmp
les
mov
fidivl
imul
addr16
sub
mov
inc
mov
adc
push
sub
jne
repnz
mov
test
std
scas
scas
adc
sahf
das
mov
push
cmp
decl
sbb
fstpt
cld
and
das
sarl
test
sbbb
clc
inc
test
je
out
in
nop
mov
mov
adc
push
popa
incl
ret
or
sub
jp
ja
decb
lods
jg
jmp
pop
mov
pushl
lret
les
popf
jl
mov
cmpsb
arpl
add
loope
cmp
pop
mov
incl
popf
pop
sub
inc
outsb
daa
pop
arpl
push
jbe
mov
in
push
in
aas
fsubrs
pop
movsl
fldt
sbb
xchg
aad
loope
add
sbb
jg
paddusw
sbb
leave
pop
jecxz
test
cmp
push
setbe
ja
sbb
xor
mov
mov
mov
sub
mov
and
fs
lds
adc
aad
scas
sub
fld
mov
xlat
idiv
call
loopne
or
jg
push
out
test
inc
add
cmp
lock
mov
mov
pop
loopne
mov
pop
loopne
fiadds
cmc
cltd
mov
pop
or
and
in
call
jmp
cmp
mov
js
lret
leave
xor
pop
inc
pop
imul
and
call
xlat
and
adc
push
pop
fmuls
push
dec
iret
xchg
and
in
bound
incl
push
bnd
outsl
out
rclb
out
bswap
sbb
xor
inc
jecxz
sbb
jmp
cmpb
test
loope
das
dec
mov
addb
pop
jbe
push
adc
dec
shr
das
pop
xlat
into
lea
xor
pop
mov
fbstp
xchg
and
cmp
iret
or
jmp
push
inc
and
in
test
add
xor
jl
mov
mov
incb
ljmp
xlat
inc
xor
movsb
mov
adc
iret
bound
mulps
push
out
sub
sbb
sub
ds
fdivrp
incl
pop
clc
fbld
push
outsl
cwtl
mov
cmp
lea
pop
mov
sbb
pop
fisttpll
ljmp
mov
in
pop
imul
popf
mov
in
ljmp
enter
imul
adc
xor
inc
pop
add
pop
scas
mov
pop
pop
shlb
decl
add
add
add
loope
ljmp
mov
cmp
dec
outsl
mov
xor
push
push
sbb
and
rorb
pushl
jg
mov
out
cmpsl
ret
lcall
sub
mov
pop
scas
jmp
stc
sar
adc
test
xchg
icebp
push
flds
xchg
cmp
js
daa
lds
lcall
add
lret
or
je
daa
aaa
test
bnd
jp
lds
fwait
mov
jmp
dec
and
out
cmpsl
insl
sbb
xchg
data16
add
leave
add
insl
lret
cmc
jnp
lahf
jae
ljmp
lret
lods
dec
cmp
adc
aad
dec
mov
into
push
push
incl
stos
in
and
xor
in
mov
mov
add
jmp
les
aaa
fiadds
cmp
xchg
insb
ljmp
mov
dec
and
sarl
lods
arpl
cltd
sbb
push
cmc
leave
fsubr
fyl2xp1
shrl
inc
push
lcall
sub
into
pop
inc
lods
adc
outsb
dec
std
outsl
push
cmp
iret
xchg
pop
in
push
jmp
jno
into
cmp
rcrb
jo
sbb
xchg
bound
aad
icebp
iret
rcl
hlt
mov
mov
ljmp
inc
lret
mov
push
insb
push
push
aad
push
in
shrb
push
gs
push
mov
sub
inc
cltd
pop
xlat
out
es
fistpll
cwtl
cmp
mov
pop
shr
out
add
mull
out
clc
decl
mov
pop
jle
jg
aaa
cmp
fldl
shl
in
push
ja
inc
pushl
negb
imul
decb
cmp
mov
adc
popa
or
cli
cs
jmp
es
stos
scas
fdivrs
nop
jns
add
loope
xor
push
sbb
xchg
incl
cld
add
mov
cmp
aaa
jne
mov
inc
push
adc
pop
decl
jb
pcmpgtb
mov
stos
mov
and
inc
fmul
loopne
jns
stos
ljmp
clc
cld
xchg
es
and
jge
sub
repnz
arpl
sbbl
loopne
rcrb
test
gs
ds
ret
cmpsb
popa
mov
xor
test
sbb
cmp
cmp
ficoml
pop
cmp
cli
rclb
pop
std
push
add
sub
mov
inc
inc
mov
mov
pop
or
ds
sub
icebp
jns
les
add
ljmp
mov
add
dec
pop
mov
mov
mov
out
and
lcall
sub
push
rcrl
push
test
push
xchg
cmp
aad
outsl
inc
jg
icebp
jmp
add
mov
jecxz
xchg
imul
incl
add
arpl
jge
add
push
sub
aam
or
rclb
cmpsl
mov
adc
or
stc
scas
inc
testl
sahf
iret
aad
cmp
loop
lret
pop
aad
scas
into
repz
call
icebp
jge
sbb
inc
sub
or
and
sarl
cwtl
out
scas
push
pop
xor
mov
push
ret
mov
lret
sahf
dec
adc
test
call
insl
adcb
ss
pop
notb
iret
cmp
in
jae
add
jns
rcll
ljmp
xchg
test
fidivrs
pop
sarb
jmp
out
je
aaa
mov
les
add
cmp
dec
cmp
mov
mov
lret
cmp
test
loope
adc
call
ficomps
push
push
rolb
les
out
cmp
leave
imul
inc
jo
ret
out
enter
xchg
xor
adc
incl
mov
jns
pusha
test
mov
test
mov
pop
inc
insl
in
mov
cmp
or
mov
pop
adc
xchg
mov
fbstp
inc
je
icebp
cmp
dec
js
fmull
cwtl
arpl
mov
incl
adc
pushf
jbe
sti
test
lahf
mov
je
xchg
xchg
and
sahf
xorl
clc
adc
fistps
scas
jmp
outsb
idivb
and
pop
rclb
sbb
call
mov
cltd
and
jge
jge
repnz
xchg
xor
ds
xchg
imul
pop
mov
fcomip
decl
fcomps
imul
mov
pusha
xor
scas
clc
ljmp
call
aam
or
call
cs
repz
loope
decl
jl
inc
inc
ja
testl
push
add
pop
jnp
sti
sti
push
xor
sub
lahf
idiv
dec
iret
xor
push
adc
call
ds
mov
xchg
xor
mov
aad
gs
adc
das
inc
or
pushl
gs
outsw
sub
push
cmp
arpl
sub
adc
nop
test
test
sub
jae
pop
push
mov
frstor
adc
dec
into
sbb
decl
fcmovu
sarl
add
xchg
negl
or
lret
daa
gs
and
jg
sbb
call
inc
push
and
repz
sbb
hlt
ljmp
pop
jp
rolb
xchg
icebp
into
jns
outsb
sub
or
pop
and
cs
popf
mov
jmp
shl
mov
lret
inc
sub
cltd
daa
outsb
push
sbb
xlat
add
sbb
or
clc
pop
adc
incl
mov
cmp
cmp
loop
int
mov
mov
ljmp
in
sbb
insl
es
jne
sti
std
mov
repz
aas
or
push
test
lcall
gs
shl
sahf
cmc
mov
lret
xlat
mov
addr16
or
sahf
pusha
adc
cmp
call
pusha
int3
loopne
and
stos
sbb
out
repz
jmp
push
sub
mov
pop
pop
stc
test
aaa
data16
jl
aaa
daa
out
repz
cmp
push
mov
mov
xchg
xchg
popa
inc
mov
push
addb
mov
sbb
icebp
ljmp
mov
into
decb
call
jb
cmp
cmp
pop
cmpsl
shl
loop
pushl
dec
roll
sbb
es
xchg
pop
jmp
into
dec
rclb
lcall
xchg
push
fisubrs
idivl
lahf
ror
dec
out
clc
ljmp
xor
sahf
ss
sahf
je
push
aas
add
xor
outsl
mov
loope
test
mov
mov
mov
xchg
and
sbb
imul
or
ror
jl
mov
cmp
mov
call
jbe
inc
jmp
aaa
mov
inc
ds
mov
mov
mov
aam
push
xchg
xchg
pop
jno
incl
jb
lret
ds
xchg
pop
sbbl
mov
mov
adc
mov
and
inc
mov
das
sar
push
cli
jmp
shlb
xchg
mov
lods
mov
jmp
push
roll
sub
lcall
and
hlt
sub
fcomp
mov
xchg
movsb
lds
mov
jmp
imul
mov
mov
in
lea
out
ret
fxch
sub
cmp
xchg
xchg
pop
mov
ljmp
mov
iret
xor
mov
cmpsb
repnz
sbb
cltd
dec
and
jo
lcall
mov
and
enter
out
xchg
inc
icebp
sub
aaa
mov
jb
divl
lea
jns
or
aas
fdivs
stos
sti
call
push
push
sbbb
push
xchg
fists
data16
js
insl
loope,pt
sbb
mov
call
enter
and
cwtl
fsubp
xor
sub
notl
test
stc
popa
add
nop
cmc
ljmp
jnp
pop
addl
cli
mov
push
inc
negl
xor
pop
pushf
dec
hlt
test
push
xor
pop
sbb
add
in
shll
jge
cmpsb
stos
adc
add
jmp
jbe
in
or
aaa
inc
daa
pop
mov
addr16
incl
aad
adc
call
dec
inc
pop
es
cld
arpl
xor
dec
hlt
ficoml
sub
jnp
xchg
nop
adc
push
leave
fnsave
inc
push
lea
cmp
aam
xchg
and
mov
cmp
mov
pop
sti
rclb
in
sbb
test
jae
add
repnz
add
xchg
jns
dec
sbb
or
hlt
sbb
dec
out
roll
lcall
pop
mov
inc
loop
cmpsb
fimull
out
mov
pop
inc
loopne
jnp
bound
insb
jbe
inc
popf
imul
nop
xchg
push
adc
cmpsb
out
clc
mov
sbb
add
iret
and
mov
lods
negl
xchg
mov
lock
pop
sar
fcmovu
or
ret
test
cmp
or
decb
mov
outsl
adcb
jne
mov
in
dec
in
lock
bnd
test
xchg
fstpl
pop
cltd
fisttpl
lcall
mov
filds
imulb
sub
inc
push
lds
outsb
mov
inc
mov
mov
stos
ficoms
jnp
cmp
mov
das
or
adc
push
push
xchg
cmp
cld
fwait
mov
ds
popf
or
ljmp
xor
xchg
aam
test
jb
ja
lret
mov
pop
add
ds
mov
les
inc
jecxz
xchg
sahf
add
mov
xchg
mov
pushl
push
inc
mov
mov
lock
xchg
mov
movsb
inc
jmp
mov
and
int
jmp
incl
rclb
sahf
pop
mov
stc
data16
mov
cli
in
adc
mov
les
sti
orb
inc
bound
mov
sbb
jnp
mov
sti
divb
and
nop
lock
mov
lock
sbb
adc
rorb
jg
and
jp
popf
repnz
fists
rol
fmull
cmpsl
sub
int3
sub
mull
bsf
adc
inc
sub
sbb
das
rcl
cmpsb
outsb
mov
int3
xor
js
or
or
aas
push
in
push
in
mov
xchg
cli
mov
xchg
clc
out
cwtl
cltd
inc
dec
xchg
and
mov
pop
sub
push
ret
rcrl
lea
cmp
jge
mov
aas
pushl
push
jge
sbb
sbb
ret
jne
lea
leave
cmp
sbb
mov
lcall
sbb
sub
sarb
sub
test
push
fsub
jbe
xchg
jge
mov
pop
inc
fldcw
lcall
jmp
out
mov
dec
add
push
in
mov
push
inc
sbb
inc
mov
call
add
pop
scas
rorl
shlb
xchg
std
insl
and
inc
mov
lahf
sbb
push
push
ljmp
out
int3
iret
sub
lock
cld
ja
add
clc
aaa
cld
mov
push
jbe
sub
fstpt
pushf
adc
nop
or
adc
aaa
cld
ljmp
icebp
fisttpl
cwtl
imul
xor
or
stos
fs
arpl
jmp
inc
adc
aad
mov
rep
dec
xor
adc
das
and
decl
mov
bound
loopne,pn
jb
fists
repnz
shll
inc
insb
push
outsb
stos
cld
es
iret
push
inc
sub
call
lret
adc
lcall
rclb
hlt
scas
jmp
jbe
or
and
lcall
pop
cld
lret
aad
and
push
add
xchg
out
rclb
loope
incl
xchg
imul
pop
and
xor
jmp
insb
adc
push
mov
xchg
gs
test
mov
ds
loopne
gs
pop
lcall
ret
push
xchg
call
test
inc
jg
xor
movsb
outsl
stos
dec
and
push
inc
mov
enter
jecxz
add
inc
cwtl
ror
cmp
bound
in
arpl
addb
std
mov
xor
rcrb
ljmp
lea
push
push
fmul
and
xchg
js
inc
imulb
jge
jg
mov
repnz
sub
jb
ret
jl
mov
xor
fsts
incl
sub
sbb
test
mov
push
outsb
data16
dec
xchg
mov
lahf
movsl
decl
mov
mov
leave
in
sti
jge
in
mov
in
or
outsl
dec
fisubrs
mov
sahf
outsb
out
lock
or
fsubrs
call
mov
cld
mov
mov
fstps
popa
push
int
push
xchg
bound
mov
and
mov
adc
int3
pop
push
mov
add
inc
out
fidivrl
mov
push
in
test
jno
das
das
jb
outsb
out
or
lret
jbe
mov
ret
stos
pushl
daa
xor
ljmp
nop
add
pop
cwtl
scas
test
call
pop
push
lds
adc
jmp
scas
or
jl
xchg
fwait
lcall
add
or
jne
test
xchg
push
sbb
dec
inc
adc
cmp
or
sub
cmpsl
mov
jns
push
xor
jmp
pop
das
add
stos
sub
adc
xchg
in
lret
les
iret
loop
push
pop
jl
aas
aad
addr16
hlt
fldcw
jmp
call
enter
int3
out
test
push
and
es
out
pop
sub
out
and
pushl
xor
or
cs
int3
mov
pusha
and
or
loopne
inc
mov
dec
sbb
push
adc
add
test
lods
sub
imul
xchg
jecxz
jg
and
xor
mov
data16
loope
xor
cmp
mov
imul
cmp
repnz
imulb
nop
outsl
lcall
or
pop
pop
aaa
std
decl
inc
out
add
enter
pushf
shlb
lds
xchg
add
push
nop
sub
minps
arpl
mov
cli
pop
xchg
or
jmp
mov
pop
fwait
fs
cs
pusha
repz
ljmp
or
jp
mov
stc
adc
mov
insb
pop
gs
lds
dec
pop
enter
jae
inc
dec
mov
jp,pn
inc
incl
lods
inc
shlb
push
inc
loope
push
jecxz
sbb
mov
jecxz
push
cmc
bound
jno
outsl
cli
cmp
push
pop
cmc
push
xchg
faddl
call
repz
pushl
rclb
int
popa
loop
js
pop
mov
aam
stos
xlat
add
push
cmpsb
and
stos
adc
pop
imul
outsb
add
sub
sahf
add
cmp
lock
lcall
mov
adc
mov
mov
aas
mov
xor
xchg
aas
rorl
and
std
dec
jne
je
andl
sbb
mov
test
push
mov
loopne
push
push
pushf
andb
shl
in
pop
das
mov
clc
in
adc
call
rolb
xchg
pop
cmp
cwtl
inc
mov
push
fs
jnp
fisubs
pop
xchg
push
xchg
jne
test
idiv
mov
lret
mov
mov
bound
jmp
jmp
adc
adc
dec
sbb
insb
pop
sbb
inc
adc
mov
scas
or
or
nop
in
pop
int3
lahf
loop
add
jmp
adc
in
jmp
movsl
pop
xchg
cmovbe
xor
add
pop
jnp
dec
inc
lods
cli
imul
mov
and
sbb
pop
mov
rorb
jnp
into
push
push
push
iret
xor
jg
jnp
push
sbb
mov
mov
sarl
nop
vandps
pand
clc
ljmp
iret
mov
jmp
addr16
xor
sti
jae
cmpsl
pop
inc
mov
add
lods
adc
mov
mov
in
or
adc
decl
inc
cmpsl
mov
cwtl
aas
pop
push
mov
jmp
mov
stos
test
call
cld
jae
scas
inc
bound
cmc
add
shll
cli
jp
mov
in
sahf
adc
nop
sub
je
mov
div
ficoms
loope
push
movsl
repz
adcb
jge
pop
ss
add
les
iret
dec
lods
dec
nop
push
insb
in
insb
test
call
pop
pop
arpl
cmpsl
cmc
push
shrl
inc
test
nop
ljmp
mov
adc
jae
adcl
adc
fistl
pop
imul
cld
jmp
dec
pop
adc
js
in
ficomps
xor
push
cli
mov
call
dec
iret
dec
add
jno
mov
mov
leave
sub
add
sar
sahf
mov
jge
jne
add
sti
mov
pop
mov
pop
test
iret
addb
jmp
or
adc
add
lods
ja
cmp
or
rorb
ljmp
cld
outsl
and
mov
xchg
cwtl
stc
int3
repz
mov
gs
jnp
add
mov
fcomip
mov
lods
cmp
dec
and
xchg
lcall
dec
pushf
sbb
call
jmp
push
jo
push
stos
jmp
dec
js
test
jno
jmp
cld
cmp
inc
sub
pushf
rolb
xchg
mov
shlb
cli
sub
aas
mov
jmp
push
cwtl
dec
lods
push
dec
cmp
aam
enter
lahf
imul
xchg
dec
shl
dec
cmpb
dec
les
arpl
test
mov
lcall
jmp
add
jae
pop
int3
cmp
mov
and
jp
test
pop
add
mov
cmc
in
or
decb
loopne
outsb
mov
sub
out
adc
decl
push
sbb
popa
xlat
lock
stos
outsl
adc
adc
inc
das
push
cmp
add
dec
hlt
ret
lcall
aam
je
sbb
pushf
pop
cmc
inc
inc
pop
aam
xchg
push
fldl
enter
mov
push
js
and
jle
nop
xlat
in
jg
ljmp
inc
pop
mov
fistl
cmc
jb
lahf
cli
sub
push
loop
adc
decl
outsb
xchg
xor
addr16
jb
inc
jp
and
xor
pop
xchg
push
imul
orl
fdivl
mov
push
shrb
adc
add
adc
fiaddl
ljmp
inc
mov
jb
jno
mov
jecxz
repnz
add
nop
adc
lods
mov
or
cld
jle
xchg
jns
adc
xor
sbb
xor
mov
call
in
sbb
mov
popa
cmpsl
inc
adc
push
divl
mov
pop
shlb
dec
jmp
ljmp
insl
outsl
js
adc
out
push
xor
inc
cmp
incl
test
adc
jns
pcmpgtd
ss
outsb
add
lds
xor
enter
call
xchg
xchg
mov
cmpl
pop
xchg
mov
jg
mov
push
jb
mov
mov
cmp
clc
add
jne
push
sahf
pop
sar
jmp
test
mov
add
adc
es
test
cli
lcall
jg
add
xchg
xchg
out
scas
mov
mov
cmpsl
lahf
sbb
imul
int3
inc
push
push
in
lock
jbe
mov
aas
sub
daa
sarl
adc
lods
int3
jno
in
call
pop
mov
xchg
mov
inc
cmp
incl
mov
pop
push
adc
rolb
cmp
shll
mov
incl
loope
cmova
xor
dec
jl
call
pushf
int
xchg
incl
rcll
mov
rcr
in
or
sub
mov
cltd
stos
push
mov
decl
pop
jns
ja
lcall
int
dec
push
repz
mov
cmp
aas
push
insl
inc
clc
mov
cmpsb
lahf
movsl
xchg
mov
sbb
arpl
loope
cmp
xchg
lock
mov
call
test
jno
push
inc
orb
jl
cmc
cs
mov
mov
incl
xor
test
int3
xchg
outsl
jg
jb
jp
push
loope
sub
add
dec
or
push
std
pushl
and
test
sub
xor
loopne
or
in
pop
pop
pop
sub
arpl
sub
mov
test
xchg
jg
icebp
pushl
jno
cmp
mov
loopne
into
ljmp
add
fcomi
pop
or
ljmp
les
add
fcomip
inc
inc
enter
mov
lcall
addb
sub
lcall
dec
in
in
pop
daa
push
inc
sbb
call
int
lea
jno
ljmp
faddl
test
js
mov
adc
mov
popf
iret
in
xlat
or
xchg
cmp
cmpsb
gs
xor
int
fs
clc
in
es
mov
add
xchg
or
aam
cmp
fistpll
sub
pushl
push
mov
stc
mov
push
push
pushf
jge
jnp
xor
icebp
inc
sub
push
inc
mov
adc
aaa
inc
xor
mov
mov
pop
sbbl
cmp
decl
inc
pop
cmpsb
mov
into
js
orl
jg
nop
ss
mov
ret
out
mov
mov
insl
ret
popf
sub
mov
inc
decl
sarl
mov
inc
cmc
loop
fs
xchg
pop
mov
decb
add
jecxz
je
push
add
fld
shlb
push
fwait
adc
movsl
add
fisubrl
call
addl
sbb
mov
mov
push
or
scas
outsl
imul
lcall
int
repnz
out
mov
pop
sti
push
std
mov
or
push
dec
push
mov
lcall
mov
repz
inc
les
mov
and
cmpsl
mov
loope
popf
mov
out
dec
push
jg
es
call
push
mov
insl
jecxz
int
lock
les
nop
xchg
push
mov
jmp
xchg
es
xor
leave
mov
pop
add
sub
ret
or
mov
pushl
jns
xor
addr16
or
mov
jae
dec
mov
lock
incl
xchg
sbb
in
dec
fisttpll
dec
js
xchg
xor
xchg
pop
lods
mov
mov
jmp
adc
mov
leave
hlt
les
push
inc
or
outsb
pop
push
test
jg
push
inc
aas
fwait
decb
lock
pop
jb
dec
pop
jp
cmp
jmp
dec
mov
mov
movb
aam
or
cmp
sarl
push
loop
jmp
cld
mov
int3
setno
dec
stos
push
scas
pop
mov
sbb
pushl
aam
insl
ds
adc
lcall
fs
inc
out
xor
ret
fwait
popl
and
pop
icebp
or
cli
xchg
jb
jp
add
popl
shr
iret
mov
inc
stos
or
fmull
pop
decl
test
push
out
cmpsb
push
in
icebp
lock
pop
cmc
push
repnz
xchg
in
ljmp
rcl
pusha
fldln2
mov
ds
sub
aaa
or
les
or
inc
jb
into
push
add
inc
jmp
inc
popf
jmp
dec
test
add
sbb
lret
push
mov
pop
or
fiaddl
popa
pop
rclb
xor
mov
jbe
pushf
ret
test
outsb
lret
push
sbb
xchg
adc
jo
fistpll
jb
push
mov
insl
imul
push
data16
jg
ljmp
fxch
jne
pop
adc
lahf
pop
fs
je
aad
sbb
test
cltd
dec
rcr
icebp
cmp
sub
adc
cmpsl
jg
fistpll
das
out
in
jmp
lea
dec
in
or
pop
jne
test
jl
push
ja
lds
enter
adc
hlt
rcrb
push
jmp
jbe
adc
lcall
cmp
or
daa
xorl
je
mov
adc
dec
sub
decl
sub
pop
dec
das
dec
add
test
xor
add
fwait
lret
decl
push
mov
mov
adc
shr
cs
pop
sub
pop
imul
incl
sub
xchg
or
pop
xchg
imul
repnz
ljmp
in
insb
mov
xor
or
aad
pop
aad
movsb
add
daa
pop
jecxz
mov
rcrl
add
dec
adc
clc
inc
out
xchg
cmp
hlt
call
int
gs
mov
or
xchg
add
movsb
sub
mov
jg
mov
adc
shlb
jmp
lods
pop
int
ret
jnp
data16
xor
incl
add
stos
xor
loope
sub
push
sbb
pop
xchg
add
enter
pop
icebp
out
lock
jbe
push
mov
sub
dec
push
jp
and
cmp
fldenv
shll
pushf
inc
cmp
inc
xchg
add
lods
es
in
dec
push
lds
cld
movsb
out
ja
dec
shrl
push
incl
dec
or
aaa
and
and
sub
xor
je
mov
rcrl
cmp
out
push
sbb
sub
int3
mov
movsb
jg
jns
sub
mov
mov
mov
xchg
jl
jne
stos
imul
fwait
out
rolb
fs
fdivr
decl
ljmp
insl
add
cmpsl
sub
pop
push
mov
jl
jle
xchg
xchg
pop
jmp
cmp
sub
xorl
bound
pop
nop
incl
dec
inc
jno
std
repz
xor
jnp
std
and
pop
or
test
mov
ljmp
incb
popf
mov
out
leave
insb
sbb
add
lcall
push
cld
pop
popa
sbb
insb
push
sbb
jb
call
lods
fidivrs
decl
loopne
jnp
stos
hlt
mov
xor
int
insl
inc
frstor
out
push
pop
lds
movsb
decl
sub
add
mov
push
into
test
lahf
and
hlt
ljmp
or
pop
cltd
daa
dec
jae
push
sbb
popa
mov
lcall
inc
xchg
mov
xchg
add
sub
jo
adc
bound
jg
mov
sbb
sbb
push
jle
bnd
add
mov
or
mov
cmpsb
mov
sbb
subl
mov
or
out
ljmp
shl
adc
lret
dec
pusha
sbb
fwait
cmp
adc
lods
mov
std
jg
pop
mov
dec
jmp
mov
jl
jp
in
movsl
test
and
xchg
ret
xor
int
pop
shl
xchg
jb
in
nop
pop
loope
lods
jbe
outsl
xor
cmp
call
or
sbb
sarl
movsb
sbb
lods
in
jns
mov
xchg
pop
pushl
clc
into
in
in
nop
push
scas
imul
xchg
js
dec
int3
ds
dec
leave
data16
rcrl
out
repz
xlat
outsb
mov
pop
andl
inc
cli
call
ljmp
xchg
dec
push
in
stc
fstpt
push
sbb
in
mov
jmp
loop
sbb
stc
xchg
push
call
loop
inc
data16
ja
push
xabort
jo
ss
cs
pushl
or
jbe
jno
ret
loope
out
xchg
cmp
cmp
and
or
lods
push
jae
dec
push
jge
das
popf
cmpsb
cmpb
pop
ds
xchg
cwtl
inc
push
adc
nop
lds
in
daa
es
lcall
or
out
xor
push
inc
xchg
add
mov
xchg
sbbb
inc
sbb
stc
out
lahf
jne
push
ret
push
xor
sub
push
push
test
xlat
or
std
mov
incl
outsb
arpl
sbb
fistpll
adc
xlat
pop
decl
gs
xor
add
fisttpl
jl
mov
and
inc
sbb
mov
mov
fldcw
push
mov
icebp
mov
in
lahf
jo
in
pop
ljmp
mov
fwait
adc
in
mov
insb
int3
pop
fistl
inc
outsl
mov
fbstp
mov
cmp
fs
mov
aas
mov
jo
adc
fists
out
test
pop
push
push
movsb
mov
jns
mov
xor
leave
cmp
jmp
test
adc
push
pop
js
cmp
adc
jne
pop
mov
xchg
dec
fldenv
xchg
loop
jo
push
mov
decl
shll
or
imul
lret
adc
dec
push
lret
out
shl
sar
scas
cli
incl
xor
jns
insb
rcll
add
adcl
movsb
mov
inc
add
sbb
loop
arpl
ret
or
mov
aad
std
jg
xlat
sub
rclb
push
push
cmc
cmp
sarb
das
add
xor
inc
xchg
std
mov
roll
xchg
pop
and
pop
dec
sbb
ret
in
ds
mov
ljmp
lea
fistpll
jle
subl
hlt
int3
cld
rcrl
decl
xchg
mov
js
shlb
movsl
in
jno
enter
fmul
jo
pusha
sub
inc
xor
jmp
movsb
arpl
cmp
inc
ret
js
pusha
in
movsb
out
inc
cmp
pop
jbe
sbb
pop
das
cli
call
ss
sti
xchg
pop
xchg
divl
inc
sbb
out
int3
loopne
push
cmp
adc
aaa
cld
fstl
mov
fstps
adc
test
sbb
aad
rclb
pusha
lcall
fcompl
mov
jns
adc
fists
stos
imul
inc
cmp
dec
xor
ljmp
jmp
popf
fadd
jl
add
inc
ret
out
pop
fisubs
cwtl
mov
in
mov
clc
jg
call
push
rcrl
and
jecxz
dec
dec
sub
ret
je
cmovno
pop
lahf
clc
xchg
inc
ret
and
lds
fwait
stos
sub
test
jb
call
decl
cwtl
aam
lret
sbb
add
imul
sub
and
jl
inc
inc
das
jae
jno
shrl
pusha
cs
push
add
or
incl
movsb
out
dec
add
sbb
xchg
aad
xchg
mov
stos
call
popa
mov
push
push
mov
jge
cmp
adc
es
call
push
sbb
cs
cltd
popa
sub
ds
outsb
mov
pop
cmp
fists
repz
jns
push
pop
mov
aaa
sbb
loopne
mov
pushf
movsb
clc
mov
push
out
jmp
mov
and
pushl
mov
lret
pop
rclb
cmp
mov
loop
jecxz
std
call
pusha
shll
xor
sbb
in
aam
xchg
jmp
push
sub
push
ret
push
addr16
xor
push
xor
or
cmp
lds
ficompl
sbb
stc
push
pop
lcall
or
jo
int3
jge
das
cmc
sbb
addl
cmp
loopnew
call
mov
sbb
jge
lcall
mov
roll
pop
sub
loop
call
push
leave
add
ret
imul
mov
mov
movsb
lcall
subb
lods
mov
dec
adc
add
pushl
sbb
imul
push
sar
sub
ja
mov
jg
add
popa
and
cmp
cmp
mov
pop
push
rol
jae
test
ljmp
gs
decl
or
lods
mov
cltd
in
les
cmp
add
andl
lcall
inc
dec
push
fidivrs
dec
and
es
loopne
xor
sub
orl
decb
in
popl
add
push
lods
and
lods
cmp
xor
divb
inc
mov
ljmp
adcl
or
fdivs
fldl
outsb
lret
jl
dec
scas
dec
lods
push
sbb
jg
mov
fs
sub
mov
fcmovnbe
cmp
push
imul
xchg
call
pop
sti
lahf
xor
pushf
xchg
test
repz
ret
insl
adc
mov
xor
das
mov
and
mov
leave
int3
popf
sub
ret
inc
jb
mov
stc
pushf
cmc
xor
cmc
stos
cmpsl
out
movsb
in
mov
adc
jnp
bound
repz
arpl
jo
and
fmulp
mov
lcall
dec
sar
jmp
lret
jmp
pop
or
call
test
lods
inc
xor
ljmp
inc
sub
repnz
fs
or
add
push
ljmp
addr16
mov
pop
inc
sti
and
inc
std
or
xlat
fcmovne
sub
std
loope
fstp
sarl
add
or
test
push
cs
inc
xor
cmp
mov
xchg
mov
decl
lods
jg,pt
mov
inc
sbbl
mov
ror
je
jne
aaa
popa
in
jg
cld
and
outsb
and
jo
add
fmuls
sub
into
or
push
decl
dec
into
nop
fldcw
pop
cmpsl
leave
loopne
push
jg
add
mov
dec
add
adc
int
fdivr
dec
ljmp
push
lret
mov
dec
mov
sbb
shr
pushl
call
push
imul
mov
inc
dec
xchg
cmc
bound
loopne
pop
std
cltd
mov
loopne
push
sub
sbb
inc
mov
push
mov
mov
aaa
pop
pop
imul
jl
or
ljmp
fcompl
incl
push
das
pop
loopne
stos
ljmp
xor
std
outsb
enter
mov
iret
fisubrl
pop
push
arpl
xchg
iret
xchg
xchg
xor
imul
add
pop
or
fs
incl
addr16
stos
aaa
arpl
je
jb
push
jns
add
mov
movsb
push
add
aad
mov
scas
push
insb
xchg
jge
test
out
jle
bound
dec
dec
mov
jg
outsb
xchg
add
rep
mov
sub
daa
sub
loopne
mov
lcall
out
pop
mov
mov
pop
xchg
unpckhps
hlt
adc
mov
nop
in
jg
xchg
add
loope
roll
mov
xor
and
jmp
ja
stc
jmp
or
and
jbe
jo
adc
sub
dec
jns
imul
sbb
cwtl
mov
imul
pop
jle
movsl
xor
xor
call
jmp
divb
stos
ret
lcall
ss
xor
ds
imull
jnp
or
push
fsts
movsl
iret
in
push
mov
enter
cltd
adc
sbb
pop
loope
jo
pushl
out
ret
mov
test
xchg
mov
push
rcl
jl
xchg
inc
in
xchg
adc
jle
fnsave
fadds
repz
rolb
lcall
int3
in
data16
add
in
ret
inc
test
and
pop
scas
sbb
ljmp
sub
lret
rcll
sub
jnp
mov
out
stos
or
jle
pop
pushl
test
loop
in
js
dec
mov
inc
gs
fs
xchg
push
sahf
sti
cmp
scas
stc
ja
cmp
imulb
push
push
dec
mov
xchg
andb
jae
sub
mov
data16
fs
and
push
jne
jle
cmp
loop
jmp
jbe
pusha
in
in
movsl
repz
stos
cltd
jge
mov
mov
iret
add
aaa
cld
call
add
sbbb
mov
pop
imulb
test
lods
iret
dec
loope
mov
out
adc
cmp
fwait
jbe
xchg
and
idiv
ljmp
daa
mov
outsl
xchg
and
cmc
imul
test
cmc
pop
or
sbb
lcall
dec
cmp
fnstenv
push
xor
push
fnclex
fucomip
lcall
aaa
fs
sbbb
mov
aam
stos
adc
and
add
inc
push
push
dec
push
push
cli
or
test
je
cltd
testl
ljmp
cltd
inc
cmpsb
and
lock
and
dec
cmp
add
daa
jne
pushl
fiadds
mov
cmp
icebp
loope
orb
andb
or
pushl
adc
and
push
std
jno
hlt
pusha
stc
sub
adc
sti
inc
mov
outsl
test
push
cmp
dec
fldcw
int3
xor
iret
add
sti
pop
adc
dec
fsubrs
loop
cs
test
jg
xchg
pop
jb
adc
cmp
pop
cld
ret
popa
mov
outsl
or
adc
mov
pop
xchg
or
das
adc
or
enter
inc
pop
sbb
int3
jecxz
pop
fcmovb
ret
aaa
pop
push
push
sahf
mov
shll
stos
push
mov
inc
js
aaa
mov
cltd
ret
arpl
popf
enter
and
xor
mov
push
test
mov
sub
pop
repnz
cmp
dec
inc
add
repnz
jmp
jecxz
push
out
add
shlb
test
push
adc
cmp
inc
ljmp
dec
imul
stos
fldl
mov
data16
mov
mov
int3
sub
into
hlt
jge
mov
pushl
mov
cs
xchg
mov
nop
sbb
lea
call
add
shl
mov
and
pusha
pop
insl
mov
mov
pop
xchg
jg
cmpsb
push
and
and
call
mov
mov
xorl
cs
imul
lds
mov
pop
push
jnp
sub
pop
ret
push
mov
or
mov
call
inc
scas
mov
ss
jae
rclb
mov
mov
inc
cmc
push
data16
jo
lcall
and
mov
sahf
insb
gs
popf
fcomps
mov
adc
xchg
xor
jl
cld
fwait
repz
dec
lds
or
shlb
aad
int3
jo
jno
dec
sbb
xchg
decl
cmp
mov
sahf
inc
mov
xchg
xor
in
push
es
inc
jmp
cmp
and
fldt
adc
dec
aad
cmpsb
out
push
adc
outsl
jg
cmp
jmp
pop
xor
pop
cmp
cltd
sub
in
shlb
mov
js
jg,pn
sbb
sbb
test
mov
mov
sti
sarb
mov
mov
ret
or
in
push
and
imul
xlat
jmp
xchg
addb
ret
lods
fcomi
pop
add
xchg
daa
push
int3
iret
hlt
xor
jmp
xor
add
xorl
int
je
and
or
mov
jl
lock
push
jno
xchg
jecxz
jb
mov
dec
or
aas
xor
rclb
pop
mov
fildll
jl
ret
imul
sarl
jg
incl
clc
loope
lret
pop
clc
test
mov
mov
push
adc
decl
jb
lahf
jno
out
lds
out
stos
lock
push
outsb
call
xor
jge
ret
jno
pop
sbb
and
jmp
cli
fdivr
andl
in
cmp
insb
cmc
mov
jmp
ljmp
pop
in
test
mov
jmp
mov
push
pop
xchg
cmp
xchg
out
xlat
test
fildl
dec
mov
mov
icebp
push
fdivrl
cli
fcom
mov
das
mov
jmp
test
outsb
hlt
out
ficomps
lret
pop
dec
dec
jecxz
jo
add
adc
cmc
movsl
cmc
pop
pop
incl
fcmovbe
rdmsr
lret
cmp
mov
lods
imul
push
shl
mov
sbb
pusha
call
xchg
inc
pop
mov
scas
sbbb
cmp
add
xchg
loopne
testb
ss
pushl
cld
movsl
aas
pop
movsb
xchg
add
cmp
outsl
jbe
iret
sbb
or
inc
cmp
and
loope
sub
mov
roll
xchg
fdivs
jns
outsb
ret
lds
jmp
xor
sbb
shl
scas
jne
add
push
test
mov
jb
cwtl
jle
mov
mov
ss
lret
sbb
jmp
fidivrs
in
mov
cmpsl
imul
add
mov
leave
cltd
test
pop
ret
sub
lcall
dec
xchg
mov
aad
dec
pop
xchg
cmp
and
ljmp
and
jns
shll
jl
sub
call
outsb
imul
scas
outsl
push
cltd
je,pn
add
jmp
adc
shl
aad
push
pushf
out
cmp
insl
enter
scas
mov
enter
incl
sbb
popa
push
push
xor
adc
jmp
sub
xchg
push
inc
sbb
adc
sub
lahf
bound
sub
addr16
mov
cwtl
push
mov
jnp
mov
pop
cld
in
mov
scas
mov
sahf
sahf
sub
scas
lahf
or
pusha
fcoms
mov
ljmp
scas
cmpsb
hlt
pop
enter
lds
fsubrl
push
imul
jns
movsb
incl
insb
add
sub
xchg
imul
add
lret
in
pop
setnp
xchg
jp
add
jmp
dec
ljmp
mov
push
adc
or
sub
add
in
xchg
xlat
inc
addr16
sub
out
lcall
jp
push
cltd
dec
adc
pop
call
pushf
or
xor
inc
mov
dec
ja
inc
cmpl
lcall
test
call
dec
push
mov
gs
fldenv
ss
addl
xor
leave
popa
stc
mov
enter
pop
shl
sti
in
adc
mov
stos
mov
ja
inc
lcall
daa
stos
sti
push
lods
sbb
pop
pop
out
pop
movsl
add
loopne
lahf
mov
jg
lcall
stc
push
pusha
popa
imul
mov
shll
repnz
ljmp
sub
fistps
lods
mov
mov
sub
mov
repz
incl
mov
sahf
dec
inc
push
inc
scas
loope
dec
cmp
push
sbb
test
out
call
lahf
xchg
add
aad
mov
push
div
fildll
in
dec
xchg
mov
jb
aad
push
jmp
lcall
sub
sub
imulb
not
fistpl
enter
cmc
push
cmp
jns
leave
aad
xor
mulps
mov
mov
adc
hlt
jmp
int3
or
cld
xor
jno
rorl
xor
dec
sub
fildll
addr16
rcl
xchg
or
dec
or
sbb
or
add
add
sub
add
pop
fisubrs
mov
cmp
push
sub
pushl
xlat
add
mov
sub
mov
out
jle
pop
mov
enter
ljmp
aaa
or
call
jecxz
incl
pop
or
or
divps
xchg
mov
ja
decb
xchg
dec
add
pop
add
jae
pop
push
sbb
mov
inc
loopne
mov
orb
rorl
gs
cmpsb
xor
fdivl
in
lock
sub
decl
push
movsb
mov
jne
pop
mov
xor
cmp
mov
and
push
or
fdivr
jg
call
dec
in
mov
xchg
roll
aas
add
xchg
cmp
pushl
test
in
lcall
std
imul
adc
gs
pop
dec
push
ret
mov
incl
dec
mov
in
pop
insb
cmpsb
outsl
mov
in
test
lcall
ljmp
fcmovnb
arpl
xchg
lret
lods
pop
mov
idivb
fld
adc
jmp
and
les
mov
xor
adc
inc
cmp
sub
fcoml
shll
ficoml
cs
loope
fdivs
sbb
jno
dec
cmc
add
iret
sti
pop
nop
cmp
push
ficompl
dec
push
addr16
push
dec
aad
idivb
stc
ds
das
pop
mov
push
adc
pushl
sub
add
daa
shrl
inc
and
and
repz
jp
inc
adc
incl
adc
xchg
pop
mov
cmp
std
cmpsl
dec
arpl
ljmp
sbb
stos
xchg
or
jae
sub
mov
jmp
mov
dec
ljmp
inc
lds
jno
xlat
das
xchg
cmp
je
adc
mov
sar
jmp
loop
mov
xor
push
or
das
or
jnp
mov
dec
push
ljmp
dec
nop
rcr
fmul
jbe
fcomip
ljmp
add
dec
push
cmp
scas
sbbl
jp
sbb
gs
call
icebp
ss
scas
popa
or
leave
mov
mov
hlt
dec
add
pop
das
cmp
shlb
xor
mov
cmp
dec
in
pushl
pop
scas
jle
call
add
test
sub
pusha
hlt
mov
jge
add
sub
mov
add
fisttps
fstl
mov
jb
jae
lcall
hlt
mov
scas
jno
movsl
sbb
cmp
cmp
cmpsb
fisubs
call
jl
repnz
cmpsb
imul
xchg
es
xchg
push
push
call
ljmp
decl
jle
imul
push
sbb
ffree
cmp
xor
jno
sbb
push
popl
or
dec
cld
add
pop
pushf
fdivp
sub
cli
sahf
aaa
mov
cli
iret
sbb
shr
xor
xchg
aaa
push
lret
or
or
adc
mov
dec
popf
test
loope
pop
push
std
pop
std
call
sub
push
cmp
xchg
fwait
addb
cltd
adc
pushl
clc
add
sbb
enter
or
icebp
mov
pop
push
sub
in
movsl
adc
mov
int
das
sbb
es
pop
push
cmc
jmp
cltd
rolb
adc
fs
xchg
aad
clc
pushl
mov
xlat
out
dec
dec
insl
dec
mov
dec
mov
mov
das
adc
xchg
movsl
ret
mov
test
repnz
mov
out
out
dec
cli
inc
cmpsl
xchg
mov
xlat
fisubrs
or
sub
mov
mov
out
xchg
pushf
pop
inc
repz
jb
or
dec
mov
rcr
sub
jnp
test
cmp
mov
dec
jbe
jns
push
lods
fwait
push
rcrb
xor
sahf
jne
mov
sub
cmp
mov
test
xlat
psubsw
xor
cmc
dec
lea
jbe
test
xchg
andl
cmp
jno
xor
scas
sub
mov
mov
popf
jo
push
aas
scas
push
stc
and
mov
in
mov
repnz
dec
mov
pop
out
inc
scas
sbb
out
fcmovbe
les
sub
out
inc
stos
cli
mov
push
dec
cmp
cs
mov
call
push
push
sbb
pop
xchg
hlt
or
pop
or
mov
call
jo
mov
lea
cmp
mov
dec
repz
out
insl
jge
pop
sbbb
fists
sbb
popa
and
xchg
popf
or
fcoms
dec
cmp
jg
cltd
test
sub
in
dec
jp
or
pushl
addr16
dec
push
decb
pop
divl
sub
cmpb
clc
cmpsb
out
or
test
mov
ja
pop
test
test
dec
in
cmp
mov
loop
jp
jge
and
push
dec
subl
push
loope
lcall
cwtl
sbb
pushl
or
sbb
aam
pop
and
mov
mov
xor
cmpsl
fcmovbe
iret
rorl
mov
xor
xor
push
jmp
std
inc
pop
mov
add
or
adc
in
movsl
pop
movsb
scas
cs
popf
mov
dec
mov
outsl
inc
xchg
lret
lret
pop
jb
pop
mov
adc
lock
mov
daa
jns
push
mov
clc
ljmp
or
clc
daa
stos
lret
sub
scas
cmp
push
xor
jge
movsl
and
scas
shlb
jae
sub
test
jmp
xchg
daa
pop
pusha
dec
jecxz
decl
dec
sbb
in
add
iret
stos
push
aam
in
test
popa
test
mov
mov
jmp
sbb
es
jecxz
mov
sbb
push
cld
xlat
into
inc
ljmp
retw
incb
mov
xchg
or
lods
adc
call
and
clc
jno
aas
shr
mov
loop
xchg
js
es
push
pop
jne
inc
cmp
scas
cli
call
jg
adc
repnz
mov
testl
int3
jle
movsb
lock
out
in
mull
pop
ret
sub
dec
aad
ljmp
push
lahf
inc
cli
out
xor
sub
mov
add
push
aam
sbb
mov
inc
or
lock
aam
add
inc
ret
xchg
subb
je
jp
int3
adc
loop
stc
mov
mov
fwait
aas
fimull
std
xor
xchg
icebp
push
ljmp
adc
cmp
daa
or
jg
pop
add
fwait
or
mov
pusha
jb
mov
decl
lret
jg
mov
test
mov
cwtl
in
mov
decl
jne
xchg
cmpsl
iret
pop
sahf
test
fmul
hlt
lds
sub
adc
mov
mov
jnp
mov
cld
pop
and
pushl
mov
sbb
jns
call
js
pop
mov
pushl
pushl
test
mov
cmp
push
rorb
mov
lds
sub
push
rcll
rcr
ja
xchg
sahf
shl
push
lcall
sub
add
cltd
xchg
pop
lret
bnd
std
mov
pusha
adc
and
sbb
aas
add
add
push
pop
sub
jo,pt
ds
adc
pop
sub
sbb
call
mov
add
inc
fcomps
inc
cmp
mov
inc
mov
test
pop
mov
lret
jg
add
mov
ret
jmp
cli
insl
dec
or
test
push
mov
lcall
fcmovne
cmp
and
call
fcomps
aaa
and
push
sub
push
ljmp
das
push
cmp
and
cmc
mov
cmp
xor
xchg
gs
fmull
push
int
divl
mov
imul
call
fucomp
pop
lds
inc
mov
lods
mov
xchg
mov
cmc
inc
cmpsb
in
cmp
pushl
mov
jmp
cwtl
out
aaa
into
mov
xor
mov
or
out
loopne
adc
jmp
sbb
adc
jle
sbb
or
xor
or
xchg
fxch
lret
cmpsb
test
loopne
mov
incl
fdiv
add
sbb
mov
in
sarb
scas
pushf
xchg
and
fcomp
leave
sbb
jp
data16
cltd
jae
push
push
xchg
iret
and
fistpl
or
lcall
scas
add
pop
push
outsb
mov
push
xor
fnstenv
ljmp
dec
push
popf
loopne
or
and
mov
push
in
mov
movsb
std
pop
loop
cmp
inc
aad
jnp
xor
push
rep
enter
mov
or
mov
push
pop
and
mov
mov
push
pop
shlb
pushf
or
fs
mov
cmpsl
mov
outsl
dec
cmc
je
xor
clc
jmp
cmpsl
sub
jno
gs
push
mov
ja
sub
js
mov
xlat
sbb
mov
mov
mov
fs
mov
xchg
hlt
clc
cmpsl
sub
jle
lcall
imul
pop
clc
decl
jae
int
inc
mov
mov
outsl
push
and
mov
sbb
add
ljmp
sub
sub
mov
loop
pop
hlt
sahf
xor
cli
sar
call
dec
clc
xchg
data16
mov
add
pop
cld
adc
data16
mov
dec
and
sar
incl
test
mov
cmp
or
fldl2e
rcll
in
cli
pusha
sub
int3
dec
and
dec
inc
rcrl
sarl
enter
loop
jg
add
mov
cmpsl
push
inc
add
or
xor
jo
ret
jmp
sub
pop
and
jmp
jne
jg
les
push
lods
rorl
add
movsl
jecxz
mov
jmp
mov
loopne
fcoms
pop
add
xchg
cltd
ret
pop
sub
lret
push
incb
inc
xchg
mov
idiv
mov
or
sbb
mov
add
mov
push
fsubrs
out
adc
push
icebp
mov
sbb
and
aas
outsb
shlb
arpl
pop
es
sbb
inc
js
or
adc
sub
iret
push
ds
ljmp
sub
push
mov
xor
ja
xchg
loope
or
iret
enter
mov
add
adc
aad
arpl
and
scas
pushf
jne
pop
cmp
mov
xchg
mov
ss
ja
push
stos
xchg
call
jge
jp
lret
rcll
mov
sub
add
jmp
decl
nop
xor
test
in
lods
int
bound
push
sbb
dec
decl
lahf
mov
jecxz
push
xor
mov
pushl
stos
ret
outsb
push
mov
subl
lea
jp
mov
ret
or
lcall
out
outsb
pinsrw
xor
mov
mov
testb
call
mov
cmpsb
add
jbe
pop
push
mov
insl
lds
xchg
dec
mov
call
adc
cwtl
mov
pop
jns
sub
into
enter
pop
repz
out
xchg
ljmp
adc
mov
push
shrb
repz
adc
in
push
les
jne
out
rolb
xchg
repz
mov
call
and
ljmp
jnp
lods
adc
jmp
pop
es
mov
jle
mov
ljmp
ds
adc
sbb
gs
pop
inc
ljmp
cld
cli
mov
or
mov
int
push
mov
sub
jae
mov
mov
mov
ljmp
jae
add
mov
js
push
pop
fimull
xchg
sub
int
push
jge
int
cmp
pop
das
dec
mov
faddl
aaa
loopne
subb
mov
lea
loopne
adc
sbb
mov
mov
mov
jecxz
inc
mov
sub
popf
pusha
jbe
jmp
sahf
les
icebp
rcll
xchg
fiadds
push
daa
and
mov
and
gs
push
popa
lods
xchg
stc
adc
incl
es
add
or
add
mov
and
inc
lcall
outsb
xor
lret
add
jle
in
xchg
cmp
test
sbb
loop
mov
or
push
sub
pushl
jnp
xorl
stos
pop
leave
jbe
jb
fisubrl
lods
ja
sahf
xchg
pop
loopne
cld
test
sub
push
push
psadbw
enter
mulb
push
and
add
ds
leave
xor
mov
and
push
scas
mov
loopne
jp
incl
test
add
mov
rclb
jns
aaa
cld
ljmp
and
ljmp
fdivrl
or
cltd
jbe
mov
jmp
js
xchg
bound
jno
sbb
clc
rorl
int
mov
fldenv
pop
test
std
lcall
xor
jp
cmc
das
inc
mov
repnz
iret
out
cli
cmpsb
or
mov
jge
repz
dec
inc
adc
decl
mov
scas
dec
imul
push
add
pop
in
gs
mov
push
dec
fsubl
pop
std
adc
es
dec
pusha
push
inc
addr16
xchg
xor
lock
ret
cwtl
adc
jmp
call
les
jg
cmp
mov
jae
test
cmp
outsl
das
xlat
lods
jae
push
rorb
into
lret
push
cmpsl
loope
ljmp
pop
aas
jle
mov
mov
iret
lahf
ret
mov
xchg
xchg
xchg
int
lods
mov
mov
decl
cmp
mov
mov
jmp
xchg
adc
mov
or
jne
add
movsb
inc
incl
and
mov
mov
insb
adc
add
iret
jp
cli
loope
retw
pushl
push
fsub
mov
shlb
dec
es
inc
jo
and
in
mov
mov
adc
call
add
lret
enter
mov
pop
jg
fcompl
mov
or
jg
pushl
push
dec
mov
stos
jae
lock
cmp
cld
mov
dec
into
jne
decl
jge
xchg
xor
repnz
inc
jne
les
outsl
sub
loop
movsb
xor
incl
mov
adc
mov
mov
pop
mov
lods
xchg
in
fcomi
imul
in
and
mov
adc
jp
mov
xchg
jmp
pop
lods
divl
sub
insb
jb
ljmp
aad
int
inc
ss
test
inc
outsl
xor
mov
adc
test
sbb
enter
ds
xor
int3
addr16
fisubrl
sbb
push
cmpsb
idiv
jmp
lret
stos
lock
lcall
xor
sbb
lahf
jmp
incb
gs
and
rorl
jo
xor
mov
xchg
sbb
leave
outsb
fdivrl
mov
jne
pushl
loopne
fstpl
xchg
dec
leave
xchg
mov
leave
jo
jno
mov
dec
sbb
and
ret
xor
jg
ljmp
mov
push
insb
inc
jbe
pop
add
cmp
add
mov
idivl
lock
ficoms
inc
add
ss
ret
sub
adc
push
dec
lcall
add
cld
pop
push
mov
fbstp
add
lcall
push
clc
mov
repz
or
mov
cmpsl
in
or
les
loopne
xchg
bound
bound
sub
nop
call
mov
jae
je
push
pop
mov
adc
popf
incb
es
and
jnp
adc
call
mov
inc
add
icebp
leave
mov
sbb
mov
in
fs
incl
sti
add
sbb
nop
dec
roll
sbb
push
int
mov
nop
stos
sub
mov
jmp
ds
negb
pop
add
lahf
popa
push
pop
sbb
addr16
mov
dec
sbb
addb
int
rcr
xchg
mov
inc
inc
lods
jbe
jg
jg
int3
xorb
dec
incb
xchg
mov
adc
lahf
lahf
mov
cmpsl
sub
insl
pop
inc
mov
lods
shr
call
testl
rcr
test
cli
addl
xor
aad
mov
pop
rolw
xor
jle
pop
add
pop
push
dec
inc
call
orl
int3
outsl
daa
xor
jnp
jbe
ljmp
jae
pop
ret
ss
push
rcrl
ss
imul
mov
pop
jne
sbb
decl
ljmp
je
mov
cwtl
or
js
test
stc
xorb
out
das
cli
jmp
mov
xor
lock
or
fbstp
dec
push
or
outsl
mov
push
sub
rorb
push
sbb
or
add
mov
jle
rclb
pop
or
jmp
xchg
cld
sti
lea
push
pusha
and
andb
ljmp
idiv
xchg
pushf
cmp
or
ret
fimuls
jp
in
ja
aam
lret
rclb
popa
jg
fists
lar
mov
xchg
cmp
jmp
dec
inc
pushl
pop
shufps
cli
pop
add
mov
sbb
inc
adc
iret
loope
nop
cmpsl
mov
rorb
decl
jge
nop
bound
jg
faddl
loop
adc
stos
mov
std
mov
outsb
push
ljmp
or
test
icebp
fnsave
mov
aaa
cld
ljmp
push
std
imul
pop
testl
pop
dec
mov
hlt
mov
std
jle
inc
mov
mov
adc
incl
lods
daa
pusha
and
js
inc
dec
out
lods
cmp
out
jmp
push
data16
sbb
jp
push
dec
pop
sarl
shll
pop
dec
lret
or
dec
sbb
jmp
and
add
fs
adc
add
sti
adc
jno
fildll
call
sahf
mov
xchg
mov
das
pop
ljmp
jbe
sub
cmp
sti
daa
jmp
add
loopne
sbb
hlt
mov
jl
std
pop
sub
sbb
push
jecxz
push
pushf
sbb
call
getsec
xchg
loop
and
cmp
and
popa
ret
sub
leave
sbb
fcompl
pushl
inc
scas
inc
inc
out
lock
adc
enter
and
arpl
jg
ljmp
adc
out
push
movsl
xor
sub
jo
cmp
or
popl
call
xchg
inc
lret
int
jecxz
test
jb
fwait
mov
sbb
in
mov
cmc
lahf
mov
decl
jne
ss
and
insl
jnp
pushf
lods
lods
ss
jle
ds
test
mov
decl
mov
and
movsl
mov
dec
jb
lret
ds
imulb
cmp
repnz
xchg
pop
mov
nop
pushl
pusha
mov
sub
iret
jge
sub
xor
rorl
xor
sbb
jae,pn
mov
xor
jne
xor
jg
xor
fcoms
inc
xchg
lahf
fidivl
nop
popa
mov
jge
jg
or
pop
push
mov
nop
pop
aaa
pop
adc
sbb
pop
ret
xor
or
mov
ljmp
jle
adc
std
fildll
inc
andl
cmpsb
jnp
insl
jne
test
cmpb
popa
cmc
fadds
les
fs
xchg
test
cltd
ss
leave
jp
mov
ljmp
cs
dec
dec
lret
pop
loop
inc
dec
loop
mov
pop
sub
stos
cmc
jns
pop
xor
jo
adc
aaa
jns
push
push
mov
lcall
lcall
sbbb
xchg
mov
push
push
or
jg
xchg
pop
xchg
sbb
adc
jns
into
xchg
outsl
mov
pop
nop
imul
fisubrl
mov
ffree
shl
cld
daa
adc
jge
lcall
lcall
cs
pop
mov
push
mov
push
add
or
decl
pop
pop
lret
dec
pop
pop
and
inc
adc
dec
icebp
cli
decl
lods
sub
pop
mov
out
mov
into
mov
dec
push
lret
mov
push
push
push
ljmp
sbb
pop
jle
sub
push
mov
pop
das
shl
mov
sbb
pushf
cmp
das
add
outsb
pop
lahf
movsl
mov
out
out
in
mov
sbb
fwait
or
repnz
fnstsw
pop
sub
loopne
or
das
push
call
cld
adc
inc
aaa
add
xchg
sahf
xor
imul
xchg
sbb
inc
repz
add
outsb
push
inc
sbb
call
xchg
add
add
es
push
jg
cmp
jecxz
mov
xchg
sub
in
lcall
jle
movsb
fisttps
test
insb
add
mov
aad
dec
gs
jmp
into
rol
pusha
and
pushf
cmp
or
xor
mov
pop
out
jle
lret
lcall
dec
jbe
mov
lret
inc
xor
das
xor
push
in
popf
mov
fisttpll
shlb
mov
xchg
bound
shll
or
pop
sub
mov
call
mov
cld
pushf
fwait
cmpsb
inc
pop
repz
xchg
xchg
mov
sbb
shl
cmp
mov
xor
or
lret
dec
jg
inc
std
xor
in
fneni(8087
out
test
pop
test
pusha
fcomip
cmpsb
cltd
add
ljmp
ss
stos
std
in
adc
aas
jne
jge
mov
push
push
xor
adc
adc
fnsetpm(287
mov
insl
inc
pop
push
test
es
mov
jmp
fisttpll
mov
iret
jg
rcpps
or
in
push
xor
mov
jne
jecxz
outsb
loopne
adc
and
int
stc
in
pop
sub
sbb
inc
addb
ljmp
pop
fmulp
out
mov
and
movsl
test
cmp
push
cltd
in
jae
inc
inc
je
mov
rcll
pop
push
insb
adc
and
sti
mov
mov
mov
jle
cmp
mov
in
lods
xor
pop
cmpsl
pushf
cmpb
lfs
cmp
add
fnsave
mov
loopne
movsb
ljmp
sbb
xchg
lcall
out
out
sahf
adc
cld
mov
scas
jg
cmp
out
push
xor
add
add
sub
ljmp
ds
dec
mov
sub
lock
ja
xchg
fs
jmp
add
jmp
loope
jp
mov
scas
adc
sbb
rolb
popa
dec
call
dec
lahf
aam
cld
jge
sbb
int3
stos
adc
sub
pop
je
sub
fisubrl
out
call
pushl
push
inc
cmp
stos
pop
decl
dec
cmp
mov
xchg
out
mov
jmp
or
test
sub
loopne
mov
xor
mov
call
sar
pushl
in
jb
decl
fnstcw
repnz
cmp
inc
inc
gs
or
in
fcomip
or
ret
dec
sahf
cmp
test
mulb
inc
mov
in
mov
fldl
mov
add
sub
inc
jecxz
lds
hlt
stc
lret
call
xchg
sbb
aad
jbe
mov
jb
lds
loopne
mov
mov
and
cld
decl
mov
push
hlt
cmp
adc
xor
mov
es
je
add
dec
and
cmpb
and
xor
xchg
cmpsl
out
insb
dec
mov
pop
test
negb
mov
adc
sub
add
push
push
popf
dec
insl
clc
jmp
cli
stc
mov
jge
pop
jle
mov
idivb
push
xchg
or
xchg
stos
pop
dec
inc
xchg
loop
sbb
js
or
pop
dec
dec
add
pusha
sar
std
xchg
adc
in
jbe
cmp
fcomip
lcall
adc
mov
inc
imul
jmp
sbb
loopne
pushl
push
cmp
mov
cmpsb
mov
xchg
int
cmp
mov
push
jns
jmp
mov
subl
sbb
sbb
or
xchg
lea
mov
mov
mov
out
cmpsb
xchg
add
pop
cld
fldcw
fs
mov
rolb
xchg
aam
pop
cltd
or
jns
rolb
jmp
ja
adc
xor
jnp
jno
cs
inc
loop
mov
sbb
mov
xchg
outsb
inc
jecxz
movsl
cmp
or
mov
fs
xchg
dec
mov
shr
ljmp
xor
mov
fisubs
mov
mov
iret
sahf
ljmp
xchg
stc
mov
pop
dec
test
out
test
std
or
incl
stos
scas
sbb
adc
sbb
dec
out
testb
loopne
scas
fcomip
out
ljmp
fisubrs
nop
imul
mov
or
pushl
stos
sub
test
jo
out
popa
pushl
add
fwait
mov
push
out
pop
int
mov
mov
shlb
fdivrs
sti
sub
test
sti
mov
inc
pushf
je
cmp
jmp
dec
in
data16
sbb
aam
lock
inc
clc
cmp
adc
xlat
cmp
dec
pop
sahf
add
cmp
xor
sub
les
adc
sub
out
adc
mov
cld
mov
cmp
ss
into
sub
pop
fxch
jns
push
test
xchg
mov
cmp
leave
and
roll
xor
or
xor
cmpsl
mov
pop
sbb
jmp
jg
test
push
jp
xor
packssdw
or
loop
sti
or
xor
outsb
push
js
push
in
shl
push
add
movsl
popf
xor
js
mov
adc
inc
fnstcw
mov
int
test
mov
ror
lds
cmp
push
pusha
mov
pushl
repnz
mov
mov
repz
mov
mov
jo
incl
outsb
test
je
lds
out
mov
out
mov
xor
mov
nop
bnd
cmp
data16
cld
imul
jmp
in
daa
push
push
jne
xchg
dec
cmc
cmp
inc
mov
incl
sub
sbb
ds
xor
adc
jle
cmp
hlt
call
cld
mov
push
sarl
add
sbb
lret
mov
push
test
lcall
pop
aas
jbe
pop
adc
sbb
push
mov
jnp
bound
sub
xchg
sarl
xchg
dec
into
jmp
pop
jne
fs
or
pop
push
stos
cmp
push
enter
push
outsl
mov
ds
aad
mov
orb
pop
push
sub
rcrb
pop
and
sbb
out
inc
xor
cs
and
sbb
push
adc
call
push
sbb
iret
imul
cmp
jg
sbb
sbb
inc
cmpsl
jns
fcomps
mov
clc
adc
movsl
cmp
and
in
adc
lret
sbb
and
xor
mov
lcall
shl
sbb
cmc
pop
push
ss
pusha
addr16
sbb
push
pop
sub
das
hlt
cmp
leave
xchg
inc
cmc
pushf
mov
mov
cmp
pop
xor
cmp
decl
lock
orb
pop
and
cmpsb
mov
mov
gs
mov
shlb
icebp
dec
jns
mov
and
mov
jg
cmp
sub
ljmp
loope
lret
mov
or
mov
stos
sbbl
scas
jns
fdiv
into
pop
xchg
mov
push
mov
pop
and
sub
outsl
push
pop
lock
icebp
pop
adc
test
mov
incl
dec
insb
outsl
orl
stos
jmp
sub
mov
cmpsb
movsb
aam
inc
test
jl
xor
addr16
jg
cmpsb
and
loope
cmp
xchg
dec
call
dec
imul
push
call
loop
outsl
mov
popf
cmp
mov
push
adc
insl
mov
mov
jg
jp
jle
push
push
sbb
les
mov
ja
and
ljmp
out
mov
adc
je
add
sbb
or
mov
pushl
mov
imul
or
inc
mov
cltd
xchg
mov
pop
inc
movsl
mov
ljmp
cli
loope
push
pushf
cwtl
stos
push
jae
mov
inc
insl
fwait
jb
ljmp
jl
loopne
std
cmp
mov
push
cld
mov
adc
int
pushf
xchg
xor
incl
jg
imul
shlb
mov
repz
inc
dec
std
lret
push
or
inc
dec
lcall
push
add
lret
add
addr16
pushl
aam
rcrb
or
dec
enter
mov
into
div
jg
xor
jp
orl
cld
mov
cld
cmp
outsl
cmp
push
adc
call
mov
add
jp
cmp
cld
cs
jo
xor
inc
fnstenv
fdivrp
lcall
inc
pop
repnz
push
daa
dec
ss
jno
ja
jo
push
std
lea
and
or
and
dec
xchg
dec
mov
push
les
hlt
out
insb
xlat
inc
incl
popa
jg
loopne
mov
mov
mov
sub
int3
jmp
lret
decl
lock
leave
dec
jge
cmp
jl
pushf
repnz
cld
mov
jle
lret
jmp
mov
jle
inc
stos
call
popf
fwait
xchg
nop
inc
jge
push
cmp
dec
adc
or
mov
or
cs
and
lods
xchg
xorl
cmp
xchg
inc
push
cld
or
test
insb
adc
js
ds
nop
enter
decl
or
lcall
xlat
xchg
imul
adc
ljmp
cld
push
lods
enter
testl
outsb
ljmp
pop
std
incl
cli
sub
mull
sub
push
xchg
insb
sub
push
push
sti
in
incl
shrb
stos
push
pop
push
cmp
cmp
jne
outsl
and
ljmp
cmp
rolb
int3
sub
xchg
adc
inc
xchg
fsin
call
loope
shrl
push
mov
adc
mov
fcmovbe
sbb
fmuls
pop
fistps
js
mov
mov
xchg
addr16
and
fwait
cmp
push
lods
inc
movsl
push
cmp
sub
push
xchg
inc
out
pop
cmpsb
inc
mov
out
addl
mov
mov
test
popa
dec
leave
or
test
dec
orl
cmp
das
xbegin
dec
add
fmull
stos
xchg
sbb
push
mov
pop
xchg
mov
or
jecxz
in
mov
mov
out
jp
jb
cld
jmp
icebp
cld
int3
incl
mov
jo
cmp
lcall
push
mov
ljmp
xchg
jp
jno
movsb
pop
mov
dec
fsubrl
fsubs
jge
lahf
ss
sbb
push
mov
out
or
test
lods
sub
inc
sub
fimuls
popf
pop
insb
and
lret
lcall
sbb
push
je
pop
movsl
cmp
xchg
in
mov
jbe
imul
call
xchg
adc
sbb
rol
xlat
ljmp
jl
cld
mov
cli
in
ljmp
jae
daa
jp
adc
xchg
outsb
mov
cmpsb
cmp
xchg
popf
cs
sbb
mov
aaa
iret
mov
fcmovbe
inc
mov
outsb
push
sbb
pop
loopne
imul
cltd
or
leave
xor
xchg
cltd
hlt
jmp
push
roll
sbb
dec
cvttps2pi
dec
and
pop
fildll
pop
negl
xchg
test
adc
dec
cli
out
cli
pushl
in
xchg
cmpsb
pop
cwtl
insb
mov
dec
mov
adc
test
fcomip
dec
xchg
xchg
pop
sti
lret
sub
and
sbbl
fdivr
lcall
add
add
mov
sbb
rcrb
inc
jl
mov
mov
icebp
cmpsl
push
shl
cmovns
into
movsl
pop
aas
mov
out
sahf
in
sbb
cmpsl
mov
cmpsb
inc
les
xchg
mov
mov
xchg
ret
push
stc
ret
aam
lods
jae
add
orb
dec
push
fcomip
lret
out
push
loopne
test
retw
and
loopne
mov
jmp
imul
imul
rorl
sti
xchg
fistpl
pop
jecxz
out
jb
mov
mov
lea
add
cmp
jbe
cwtl
adc
inc
ret
mov
cmc
cmp
cld
pop
sbb
xchg
or
dec
or
lret
jg
mov
lea
sub
insb
dec
pusha
lods
adc
and
ds
imul
xchg
fstpl
xor
sti
mov
lea
aad
xor
pop
decl
lret
jp
adc
dec
rolb
mov
adc
mov
mov
adc
scas
insb
xor
jecxz
out
xchg
xor
xor
pop
in
cltd
sar
lcall
repnz
adc
aam
imul
sbb
scas
push
subl
popf
pop
clc
das
xchg
fs
out
cli
add
jmp
jb
add
xor
jg
xchg
sub
dec
pop
cwtl
pushf
sbb
inc
lahf
add
sbb
mov
sbb
clc
xor
pop
jmp
xchg
fcomp
aaa
sub
sub
lods
cld
decl
cmc
call
mov
shlb
scas
mov
int
in
mov
outsb
repnz
cmp
fcomip
pushl
inc
mov
or
stos
lock
cld
sub
fsubs
mov
jmp
inc
cmp
stos
mov
cmp
cwtl
leave
call
test
cmc
mov
ljmp
subl
jle
sub
idiv
lods
jmp
sbb
adc
adc
push
jp
lcall
mov
mov
lcall
aad
lahf
cmp
jnp
push
add
addb
loop
push
dec
std
js
mov
xor
jns
inc
sub
or
pop
repnz
dec
outsb
fsin
mov
mov
and
faddl
ds
cld
push
int
xlat
push
mov
fisttps
bound
mov
inc
jne
inc
push
mov
cwtl
rcll
dec
in
mov
incl
dec
aam
mov
jnp
sbb
fistpl
and
dec
movl
decl
ret
sbb
mov
fists
loopne
in
hlt
cmp
cmpb
push
stos
fmul
andb
sbb
add
repz
mov
mov
hlt
mov
push
adc
insl
pushl
out
jmp
cmp
pushl
lea
inc
mov
repz
xchg
jnp
mov
cmp
addr16
ret
in
sbb
pop
cmp
or
fistpl
adc
fidivrl
dec
ljmp
nop
inc
ds
scas
mov
ljmp
sbb
in
fcmovb
sbb
test
out
adc
out
shl
dec
mov
mov
imul
lcall
jbe
pop
hlt
add
jnp
push
mov
or
out
push
sub
push
cs
incl
aam
leave
sti
imul
inc
sbb
mov
sbb
sub
mov
call
xchg
popf
pop
adc
dec
mov
adc
cmc
das
or
or
loope
xchg
dec
mov
mov
es
insl
dec
sti
pop
pop
movsb
std
das
sub
adc
inc
sub
inc
test
lcall
push
jp
push
mov
adc
mov
and
incl
imulw
shrl
push
shr
cmp
es
ss
stc
out
mov
test
fwait
movzbl
xlat
xchg
outsb
lcall
mov
xchg
jle
mov
adc
lcall
and
nop
ja
or
call
adc
xor
pop
outsb
in
call
add
sbb
xchg
mov
les
and
fwait
push
add
push
ljmp
mov
imul
mov
rcrb
mov
jg
xor
and
insl
xor
jle
inc
loope
popf
and
jp
in
int
add
stos
sti
pop
das
dec
pop
xchg
call
adc
inc
jne
incl
fisubrs
or
imul
ffreep
sub
scas
push
or
outsb
popf
lahf
push
ror
sbb
jne
clc
push
repnz
dec
stos
pop
and
jmp
cwtl
add
jno
popa
dec
mov
adc
sub
mov
push
pusha
and
sbb
int3
dec
cli
lcall
in
inc
jo
pop
shrl
fmulp
jecxz
in
std
sub
sbb
jo
and
testb
call
cld
xor
sub
jmp
leave
jle
and
out
in
mov
lret
addr16
sub
cmp
in
lods
les
popf
push
add
sub
xchg
inc
into
lock
pushf
fs
lahf
clc
ljmp
mov
lods
test
inc
dec
mov
inc
sbb
and
popf
cmc
add
call
js
imul
cmp
jns
cmp
ret
push
add
stos
stos
push
test
cmpsl
push
loopne
insl
cs
dec
xchg
daa
xchg
leave
xchg
mov
stos
cmp
push
repnz
push
pop
enter
jg
push
fldl
xchg
stos
lods
movsl
aaa
arpl
push
lods
cmpsb
pusha
into
push
pop
xchg
notb
test
fiadds
pop
scas
call
add
mov
fcmovnb
mov
pop
incl
loop
dec
jecxz
scas
test
and
pop
jmp
push
scas
dec
rcll
xlat
jo
mov
cmp
xchg
divb
int3
jns
add
cli
test
fs
dec
add
add
lcall
inc
daa
inc
out
mov
push
sub
adc
dec
xorl
lret
outsb
add
or
jmp
sub
cltd
sub
dec
or
popa
je
jno
mov
jmp
out
fwait
and
stc
pop
ficoml
fdivl
xor
xchg
dec
addr16
in
cmp
mov
decl
pushl
je
and
sub
inc
push
adc
jp
rcll
fdivl
jmp
adc
ficompl
xchg
popl
imul
and
cmpsb
push
pop
and
addr16
jne
mov
rclb
lahf
std
outsl
ljmp
andl
ja
mov
adc
ljmp
fs
shr
jecxz
outsl
ret
aad
icebp
mov
std
lcall
and
xchg
push
lret
dec
lea
jmp
test
adc
pop
movsb
sub
les
frstor
lods
adc
adcb
ljmp
or
das
lock
cmp
jnp
fbstp
cmp
mov
nop
sbb
cltd
sbb
ja
clc
pushl
lret
cmp
sti
dec
pop
test
push
frstor
mov
cs
sub
cwtl
in
stos
aaa
call
sbb
xchg
decl
mov
jle
cmp
pop
roll
or
jecxz
xor
inc
repz
lret
pop
std
in
scas
pop
xor
cld
int
cmp
inc
sbb
stos
lock
js
pop
xor
icebp
leave
cmp
jmp
stos
lds
in
pop
inc
lods
movsb
clc
adc
loopne
add
or
mull
movsb
ljmp
mov
inc
xchg
and
or
repnz
add
push
mov
or
movsl
outsl
inc
sub
xchg
ret
push
call
enter
pop
js
fcompl
mov
dec
adc
out
leave
outsb
xor
push
cmp
xchg
or
daa
scas
testb
sbb
fs
mov
das
in
arpl
sub
pushl
ja
ret
sbb
aam
insl
int
shl
pop
add
sbb
pop
mov
sahf
aam
fistpll
lret
mov
fcomip
jmp
or
rol
pop
cltd
daa
pop
fcoml
xchg
add
push
lret
sub
mov
inc
inc
pop
push
mov
mov
mov
incl
inc
jmp
sti
jge
das
pop
fldpi
pusha
sarl
cltd
cltd
jl
or
inc
nop
inc
dec
xchg
xor
decl
dec
leave
repnz
pusha
sbb
stos
daa
daa
in
jmp
push
lret
in
or
dec
nop
jmp
cmp
scas
cmp
cmp
jbe
and
add
or
lret
sbbb
mov
lcall
mov
nop
pop
cmp
fistpl
sbb
stc
sub
mov
call
jbe
xchg
xchg
das
repnz
pop
cmp
imul
in
jg
push
mov
pop
in
sub
and
pop
enter
jg
adc
xchg
gs
scas
cmp
dec
add
clc
rcl
sub
decl
cs
loopne
fdivrp
mov
jnp
cwtl
sub
sbb
pop
in
fs
jmp
push
dec
out
cmpsb
cmc
test
xchg
xchg
lods
xor
mov
insb
push
hlt
jmp
orl
or
call
lcall
dec
sbb
clc
cwtl
xor
cld
incl
xlat
scas
xor
mov
mov
jg
pop
push
outsl
cmp
test
addr16
xchg
out
mov
call
cs
sbb
fnstsw
xchg
fs
incb
xchg
xor
iret
xchg
decl
gs
outsb
pop
dec
dec
icebp
call
out
mov
dec
pop
test
imul
nop
jmp
mov
or
pop
popf
aad
orl
inc
enterw
adc
jmp
rclb
rorb
push
mov
or
mov
lcall
aad
shlb
inc
sub
mov
xchg
js
leave
inc
lret
xchg
or
or
loopne
call
xchg
lods
jp
xor
add
pushf
xchg
rcll
decl
insb
xor
push
testl
stos
fistl
dec
lea
mov
jmp
mov
or
xchg
xchg
jp
mov
or
inc
push
or
std
ljmp
lret
mov
pop
sbb
or
xor
and
das
pop
je
lcall
mov
push
xchg
sahf
insl
mov
aad
pushf
ds
rcl
add
mov
call
fimull
mov
sub
das
shl
xchg
enter
pop
scas
dec
mov
jecxz
jg
mov
or
daa
push
inc
sbb
std
sbb
inc
ror
xor
push
mov
repnz
cmp
jne
test
sub
out
icebp
lret
insl
cmp
cld
jecxz
jae
inc
test
cmp
bswap
add
inc
ljmp
dec
mov
push
adc
inc
in
lcall
enter
repnz
sbb
xchg
call
lds
inc
pop
das
lahf
push
push
jns
xor
incl
aas
stc
jge
sahf
sub
mov
mov
mov
sahf
mov
mov
jmp
sbb
dec
jo
mov
stc
movsl
mov
hlt
data16
add
lock
mov
call
test
mov
push
sub
jecxz
inc
imul
mov
test
call
sub
stos
cli
fidivs
cmp
and
jb
mov
mov
mov
mov
test
out
jle
je
push
sub
into
imul
call
icebp
idivl
sbb
mov
je
pop
inc
adc
fcmove
ret
cmc
sbb
incl
sub
mov
inc
jle
cli
nop
xchg
js
js
pop
xchg
js
mov
clc
push
xchg
repz
adc
jbe
inc
loopne
jns
cmpsl
and
add
pop
push
xor
mov
fdivs
bound
stos
mov
or
sbb
mov
pop
xor
mov
and
sub
call
fnsave
add
out
xchg
inc
mull
mov
mov
dec
in
cmp
test
popf
ss
xchg
mov
sbb
js
enter
rcll
das
xor
les
sbb
cmp
dec
cwtl
jg
jbe
das
jnp
lahf
pop
mov
int3
movsl
divl
ds
loope
dec
fnstenv
aas
icebp
jmp
mov
jecxz
inc
pop
lods
mov
sbb
mov
scas
test
shrb
mov
popf
inc
inc
out
filds
test
xor
dec
movsl
test
mov
push
lcall
fidivs
xor
rsqrtps
movl
sbb
sub
nop
mov
lcall
fs
mov
out
xor
sbb
or
test
lods
mov
decl
das
iret
rolb
clc
inc
arpl
cmp
xchg
xchg
icebp
mov
add
or
loopne
inc
adc
and
mov
pop
inc
sbb
dec
jo
ret
jmp
sub
xlat
mov
push
jae
sarl
or
push
push
mov
jl
call
in
imul
dec
in
aad
call
std
pushl
add
mov
hlt
pop
mov
sti
out
sbb
pushl
out
sub
add
out
mov
xorb
and
cmpsl
cmc
and
mov
mov
cmp
ficoms
aad
lret
call
inc
dec
inc
icebp
jnp
cmp
push
ljmp
jne
int3
mov
ljmp
lods
jge
fisubl
pop
in
cmpsl
dec
push
dec
push
ret
push
leave
jno
stc
lea
pop
decl
in
xchg
sub
scas
daa
adcb
pop
cmp
repnz
add
xchg
loop
jmp
in
cmpsb
push
sbb
shl
and
mov
ljmp
sti
xor
cmp
mov
add
incl
inc
aam
push
das
push
cmp
aam
je
leave
mov
insb
mov
ljmp
add
test
dec
pop
pop
jae
dec
push
mov
jecxz
je
cmp
int
sbb
adc
movsb
lret
fstps
mov
push
mov
outsl
movsl
in
cmpsb
cs
ret
adc
icebp
fisttpl
xor
inc
dec
subl
incl
adc
xor
call
mov
mov
mov
pop
pop
push
lock
xchg
test
inc
mov
pop
pop
mov
push
push
mov
in
inc
ljmp
test
sbb
notl
ljmp
ss
mov
dec
push
ljmp
dec
mov
xchg
mov
decl
bound
add
fisubs
dec
fisubl
sub
jb
ss
push
push
mov
and
inc
into
pusha
sub
scas
cli
jp
scas
repz
push
jno
pushf
or
push
jbe
test
sbb
cs
loopne
or
ljmp
adc
mov
cltd
mov
sbb
gs
pop
in
pop
iret
add
jg
loope
repnz
sbb
rcll
xor
xlat
cmp
dec
ret
mov
clc
mov
repz
daa
sub
dec
push
dec
ficompl
jg
sahf
mov
jmp
jae
nop
insb
ret
fildl
xlat
mov
subl
pop
ja
out
adc
lret
incl
sbb
lods
frstor
pop
push
inc
data16
outsb
rolb
push
int
or
jecxz
xor
testb
call
push
data16
lock
push
out
push
inc
iret
jle
mov
incl
test
cmp
ret
ret
jnp
push
pop
das
out
sub
sub
call
dec
fldt
mov
mov
in
sbb
loopne,pt
cli
mov
lret
lock
out
filds
xchg
cld
incb
es
xor
push
sbb
aaa
jmp
ljmp
shll
movsb
jnp
and
xchg
fcompl
insb
jmp
inc
jg
out
jno
scas
cli
pushl
imul
jae
and
shrb
ss
or
outsb
dec
shr
cld
jbe
push
loop
lock
test
adc
mov
outsl
mov
fdivrl
repnz
xor
jno
imul
lock
es
push
add
dec
ljmp
dec
cmp
rol
cld
sti
sub
dec
popf
les
mov
inc
mov
cmp
lcall
mov
and
arpl
mov
dec
std
cmpl
xchg
and
popa
dec
jae
cltd
push
lret
rcrb
fildll
xchg
sbb
lock
lret
sbb
aaa
mov
mov
insl
sti
xor
incl
push
fsubr
mov
xor
mov
incl
daa
movsb
mov
jg
xchg
or
mov
cltd
imul
sbb
mov
lods
into
out
mov
fsts
add
mov
popf
pusha
pop
scas
pop
scas
jb
pop
ja
jp
inc
mov
decl
leave
pop
repz
mov
test
or
enter
adc
scas
jmp
xchg
mov
idivb
mov
rorb
jecxz
call
xchg
or
ljmp
add
cli
shufps
add
rcll
sub
adc
add
fucomi
lcall
pop
jg
mov
mov
ret
push
cmpb
in
daa
or
dec
and
jmp
mov
cltd
clc
in
push
dec
js
cmpsb
out
xchg
xor
jmp
jmp
cld
call
dec
out
dec
mov
sbb
mov
mov
lods
cwtl
leave
cmpl
jae
ljmp
arpl
lods
aas
stos
fwait
adc
and
dec
adc
jmp
inc
add
and
pushf
mulb
subb
mov
mov
dec
aad
sbb
xor
mov
sbb
inc
sub
pushf
xchg
mov
jae
push
nop
sbb
sar
scas
dec
popf
fldenv
out
hlt
push
adc
mov
sub
mov
dec
scas
mov
mov
and
out
pop
lcall
mov
mull
and
pushl
call
mov
dec
cltd
mov
mov
lret
xchg
adc
stos
out
pushl
adc
sbb
out
fbstp
in
xchg
scas
jecxz
add
sbb
dec
jo
call
mov
cltd
mov
mov
pusha
adc
and
dec
pop
in
jno
adc
in
push
fsubr
dec
call
testl
dec
push
popa
xchg
sub
int3
repnz
std
aaa
mov
ljmp
lods
les
test
stc
jg
call
pushf
pop
mov
push
mov
sub
sbb
push
bnd
sbbb
clc
lea
mov
stos
mov
loopne
incl
and
out
in
dec
into
lret
lahf
lret
clc
jno
in
mov
lret
inc
pushl
inc
dec
dec
out
and
loop
sarl
inc
cld
xor
jae
ljmp
lcall
call
jge
jecxz
push
sub
and
mov
sahf
and
clc
sti
and
inc
mov
fs
aaa
ss
movsl
int
dec
mov
hlt
or
dec
jmp
adc
add
leave
or
fcmovnb
add
fmull
rol
push
fstps
mov
sub
incl
call
in
jp
fneni(8087
cltd
mov
mov
lea
test
incl
push
pop
dec
cmp
push
and
cwtl
add
imulb
or
jle
push
jmp
ja
pushl
in
xor
jle
decb
loope
ret
jp
loopne
mov
mov
inc
pop
mov
and
lahf
pop
jl
movsb
add
jmp
mov
orl
test
mov
dec
cmp
ficoms
push
sbb
pop
dec
mov
sub
pop
cltd
int3
jg
or
stc
cli
xchg
xor
stc
or
pushf
out
jecxz
cmpsb
call
cmc
stos
int
and
test
js
pop
in
fwait
xchg
ja
pop
data16
lcall
and
jbe
pop
lds
daa
or
adc
aaa
decb
mov
ljmp
shll
push
addr16
pop
jp
lcall
add
push
mov
xchg
decl
repnz
out
mov
sub
sar
push
mov
mov
push
incl
push
xor
and
mov
mov
sti
or
xor
imul
jns
imul
cmpsl
out
icebp
jne
xor
lods
aaa
in
out
test
push
ret
dec
push
push
sbb
mov
xchg
lock
xchg
push
cli
dec
and
dec
push
mov
incl
mov
sarl
ss
mov
cmc
or
push
pop
out
ja
incl
fldcw
mov
xor
lods
js
lea
std
decl
mov
int
mov
insb
fstl
dec
xchg
data16
cmp
jle
jbe
pop
mov
dec
jne
cmp
inc
xchg
dec
loopne
add
mov
cmp
xor
call
loope
adc
sbb
pop
scas
sbb
dec
fs
insl
cmp
inc
stc
test
call
xchg
add
jle
pop
mov
xlat
inc
push
cmpsb
fcomps
xor
jns
js
lds
push
fdivrs
push
dec
mov
xor
repz
inc
push
add
xchg
in
pop
xchg
add
incl
fsubr
unpckhps
in
std
inc
sbb
imul
sbb
stos
out
out
dec
jmp
cmpsl
add
mov
nop
xchg
sub
int3
xor
pusha
xor
test
outsb
lods
adc
jmp
mov
cli
mov
sti
filds
sbb
movsb
xchg
mov
pop
out
cli
movsb
leave
out
mov
rcl
mov
and
enter
les
push
push
push
cmpsl
cmp
mov
jne
pop
lcall
cmp
mov
push
subl
leave
jbe
fidivs
outsb
rolb
ud0
xor
out
sbb
inc
out
add
push
sahf
sub
push
lock
xor
sbb
aam
les
or
cli
das
adc
sbb
loop
xlat
mov
hlt
jnp
mov
fmull
push
sbb
inc
lcall
btr
rclb
addb
pop
mov
lcall
lods
xchg
cmpb
jmp
data16
rcrb
cli
push
daa
fiaddl
pop
push
mov
jne
lcall
ljmp
add
addr16
dec
pop
inc
stos
enter
xchg
push
xor
fisttpll
or
add
sahf
inc
adc
adc
xor
cmp
dec
ja
and
into
movsl
jne
push
xor
cmpsb
jne
jp
xlat
cltd
bound
imul
mov
shlb
mov
std
adc
test
mov
imul
push
pop
push
push
add
into
out
and
add
push
out
nop
mov
push
pusha
and
out
pushl
pop
sub
mov
pop
fs
sbb
sub
cmpsl
cmp
push
std
incl
popf
clc
push
stos
imul
lret
imul
push
inc
jno
ljmp
decb
sti
dec
movsb
mov
pushf
jmp
outsl
icebp
jno
iret
adc
call
ficoms
jp
inc
lcall
mov
and
pop
jmp
filds
inc
mull
jne
daa
mov
inc
or
lock
pushl
or
dec
xor
aad
adc
fs
stos
lret
lcall
stc
adc
ret
xchg
jle
lret
mov
sbb
inc
push
faddl
dec
mov
ljmp
sbb
xor
mov
sbb
dec
cli
mov
dec
ficoml
jnp
jne
shrb
jne
cmp
pushl
fsubrl
jecxz
loope
cwtl
jnp
fmull
in
dec
lret
inc
andl
pushl
sahf
push
aam
cmp
inc
fyl2x
and
call
push
rorb
addl
lods
xlat
pushl
push
adc
aaa
outsb
sub
add
xchg
jmp
dec
fcompl
icebp
shlb
idiv
cmp
int3
and
or
fwait
mov
test
jo
incl
push
jno
pop
inc
loope
mov
js
call
lret
inc
rolb
fadds
pop
sbb
jmp
inc
jbe
sbb
lcall
adc
aas
std
sub
mov
fcomip
decl
cmpsb
adc
inc
sbb
sub
dec
xlat
rol
leave
and
jmp
stos
je
push
fs
loop
sub
mov
or
out
mov
and
xchg
into
mov
mov
cld
gs
mov
mov
jle
cmp
cwtl
js
fs
ja
fadd
cld
shll
ss
cmp
inc
call
out
or
orb
fnstenv
lahf
fildl
ljmp
out
ret
dec
cmp
push
fsubr
test
out
mov
call
and
pop
cmpsl
popa
or
push
imul
ja
popa
add
inc
mov
lcall
popa
dec
mov
loope
jo
or
lahf
inc
mov
pop
dec
dec
cmp
inc
das
or
or
insb
inc
or
push
cmpsl
lret
imul
mov
push
mov
rclb
jnp
jb
mov
loope
dec
data16
lcall
cmp
add
les
inc
xchg
int3
mov
jnp
popf
popf
add
mov
cmp
ds
fdivs
popf
pushf
les
stos
mov
in
jmp
sub
or
loop
push
mov
lcall
sub
data16
loope
pop
push
mov
push
mov
decl
hlt
inc
aaa
call
mov
pop
rcrb
ja
xor
js
fsubrs
call
in
jno
xchg
adc
in
scas
cli
call
icebp
inc
fwait
jge
ja
mov
sbb
inc
std
jnp
ss
mov
xor
add
out
cltd
xor
stos
decl
dec
jbe
lods
sbb
int
xchg
rcr
movsl
fwait
data16
xchg
imul
xchg
lret
jnp
cld
call
xchg
or
or
mov
lea
int3
lods
fwait
add
push
ljmp
std
out
jbe
loope
outsb
in
jge
fs
out
jb
sar
in
es
push
and
lcall
xor
loope
sub
mov
and
clc
pushl
jb
in
pop
ljmp
arpl
and
dec
jge
cmp
adc
push
fistps
lea
adc
decb
nop
outsl
inc
test
aaa
scas
push
sti
add
icebp
jo
mov
dec
into
test
stos
stos
add
movsl
adc
fdiv
lcall
dec
in
call
inc
push
push
aaa
sbb
imul
xchg
pop
das
sar
movsb
pusha
cmp
mov
xchg
jl
add
pushl
dec
aam
mov
leave
and
mov
cmpb
call
jle
test
int
lock
mov
mov
bound
adc
xchg
stc
clc
push
hlt
cmp
jp
shlb
push
cmpsb
mov
inc
test
imul
xor
mov
cmpsl
mov
jle
dec
inc
adc
pop
call
xchg
das
lea
lret
jbe
mov
dec
mov
pop
aam
in
dec
mov
mov
inc
cmp
jne
lods
dec
sbb
cmp
incl
jp
ljmp
out
je
add
cmp
cli
enter
add
es
and
ljmp
movsl
shll
sti
stos
sbb
mov
incl
outsl
jb
push
jmp
and
sbb
and
cwtl
std
loopne
inc
dec
lea
pop
push
jmp
lret
or
mov
aam
outsl
mov
add
dec
mov
dec
jecxz
inc
call
jb
add
dec
dec
je
cs
pop
mov
or
lods
adc
push
mov
and
mov
lcall
push
or
and
xor
test
dec
add
addr16
int3
inc
sarl
in
adc
jmp
add
xchg
inc
push
mov
subl
jg
sti
test
test
xchg
dec
sbb
leave
repz
mov
mov
xchg
js
jmp
mov
mov
pusha
add
daa
mov
push
xor
aas
lds
mov
pop
mov
adc
lcall
jne
cmp
cmc
ljmp
jb
or
mov
cmp
adc
insl
out
xchg
inc
scas
ljmp
or
xor
stc
xchg
orb
mov
lret
jle
sahf
ja
add
in
adc
mov
cmp
push
pop
lcall
push
sbb
add
mov
lret
ja
in
sbb
test
ljmp
ficoms
inc
cmp
fsts
lret
jnp
scas
pop
scas
sub
fadds
mov
lcall
pop
xchg
jg
ljmp
test
inc
xor
cmp
aas
pusha
or
mov
jl
sbb
inc
jne
cmp
xchg
cmpsb
xorb
inc
push
dec
imul
push
sbb
pop
incl
out
mov
mov
cli
cmp
shrl
imul
sti
aad
test
mov
jmp
sub
stos
and
leave
sbb
mov
ss
frndint
fcmovnu
out
arpl
jg
adc
inc
fcomps
mov
nop
cmp
pop
xchg
mov
jge
lahf
xor
cmp
call
rcrl
push
popf
stos
and
mov
lds
lods
clc
in
daa
push
pop
cmp
movsl
xchg
in
test
add
and
hlt
mov
fisubrl
mov
lahf
test
cmc
mov
jne
mov
aas
push
mov
fnstcw
mov
cwtl
push
mov
xor
in
pop
jle
pop
mov
mov
lock
subb
mov
and
xor
incl
add
mov
out
jp
adc
sub
cli
std
pop
icebp
popa
vmovsd
adc
lcall
inc
jo
pop
out
test
fwait
es
mov
mov
jnp
loopne
out
cmc
dec
loopne
add
ljmp
dec
pop
stos
repz
and
dec
or
jge
mov
sub
ficoml
test
mov
fnstsw
xor
fwait
int3
jg
push
hlt
dec
add
sub
call
and
out
xor
sbb
mov
arpl
int
scas
or
fwait
adc
incl
inc
jne
pushf
mov
push
sub
xchg
mov
lcall
cmp
icebp
sub
testl
aaa
popf
mov
xor
mov
in
fwait
repnz
fldln2
xchg
mov
sub
sub
inc
subl
xor
nop
mov
std
inc
call
fcmovnu
pop
cmp
xchg
jo
hlt
add
mov
xchg
out
mov
jne
loopne
mov
shr
icebp
inc
dec
adc
inc
mov
test
aam
xlat
push
roll
into
dec
pusha
sub
jmp
imul
adc
insb
dec
lds
mov
xchg
cld
lcall
out
xor
dec
movsb
mov
jno
mov
imul
mov
jbe
push
mov
xor
jg
fwait
mov
xor
pop
ljmp
fst
shll
jb
pushl
les
jl
fwait
fwait
push
dec
xchg
fistpll
mov
mov
jo
sarb
fs
outsl
cli
lret
rclb
jge
mov
movsb
dec
inc
or
lret
mov
fisttpl
dec
inc
xor
lret
fld
push
xchg
cmpb
ljmp
lret
sbb
shll
cli
cmp
push
pop
cmpb
jmp
fmuls
popa
add
loope
mov
aas
mov
cmc
inc
cmp
into
lea
call
mulb
and
incb
cwtl
movsl
mov
mov
pop
stos
xchg
sbbb
ret
std
ljmp
and
scas
pusha
inc
push
sbb
push
lods
scas
jle
mov
dec
xchg
test
fwait
push
ljmp
mov
dec
mov
and
ljmp
jg
pushl
scas
aad
aas
lret
mov
dec
lock
jno
jle
lods
mov
ljmp
push
je
loope
lods
mov
mov
jmp
sti
testw
lock
incl
pop
push
push
scas
ljmp
daa
sbb
lahf
jbe
out
inc
inc
and
rcrb
mov
jp
sahf
js
sahf
push
mov
aam
sbb
stos
mov
xchg
push
dec
mov
leave
and
out
add
jmp
sbb
cmp
pop
out
in
insb
in
or
pop
xlat
nop
scas
pop
mov
add
cmp
int3
ja
stos
icebp
mov
ss
add
addl
mov
sbb
hlt
and
sub
stos
dec
sbb
test
inc
movsl
incl
in
cmc
mov
fst
daa
out
dec
mov
and
or
pop
mov
jno
in
push
jp
xchg
movsl
xor
adcl
xchg
xlat
and
add
stc
imul
or
int
shlb
orb
xor
js
das
jmp
popf
jg
lcall
dec
inc
xor
movsl
adc
lcall
sub
add
out
or
pop
icebp
cmp
iret
mov
xchg
and
jle
repnz
lods
pop
out
pop
popa
repnz
lcall
push
mov
dec
or
es
rorl
ds
ljmp
mov
pop
mov
jno
push
int
mov
rorl
loope
fcmovbe
cld
cmpsb
dec
or
lcall
loop
mov
cmp
push
xchg
loop
repnz
jb
scas
xchg
je
out
mov
shl
push
push
mov
push
pop
dec
jb
mov
test
push
push
xor
shll
andl
or
out
test
mov
jl
ljmp
loopne
int3
sub
insl
loopne
fimuls
adc
adc
rorl
outsb
and
pushl
icebp
jle
jg
shrl
pop
cltd
add
pop
insl
stos
jno
cmovs
hlt
fdivs
and
add
call
clc
sub
jno
shl
adc
pop
push
pop
das
cmp
xchg
and
iret
movsl
mov
push
cmpsl
bound
jns
lods
push
imul
call
inc
int3
mov
jb
cltd
stos
pushf
push
and
divb
mov
mov
cmpsb
aaa
xchg
sahf
sarb
out
icebp
cli
xchg
add
ljmp
dec
movsb
cmp
xorl
es
ficomps
dec
pop
jg
out
orb
mov
int3
pushl
jne
jnp
cmpsb
pop
imul
adc
cli
mov
insb
pop
push
lock
cwtl
mov
roll
es
cwtl
test
loop
subl
adc
mov
mov
loop
pusha
jo
das
imul
or
xor
push
icebp
pop
xchg
push
push
arpl
sub
mov
imul
cmp
int
aad
sub
adc
aaa
mov
push
mov
cmp
sub
popf
jle
hlt
ljmp
xor
adc
sbb
cmp
movsb
inc
inc
pusha
into
scas
call
and
jo
stc
or
je
push
out
jo
cld
movsb
and
sar
ljmp
xchg
adc
in
cltd
add
fimull
in
in
div
lcall
inc
movsl
test
mov
push
aaa
jns
cmpsb
add
shlb
mov
or
jo
add
js
lcall
shr
lods
mov
or
add
cld
mov
pop
ljmp
fcoms
mov
cmc
andb
mov
aad
in
loop
in
cmc
inc
push
loopne
test
pop
push
mov
addl
sub
ljmp
call
sbb
fst
fisubs
lods
push
jecxz
and
outsl
ljmp
cs
testb
decl
sbb
push
sbb
scas
jae
repnz
push
cmp
int
out
jle
scas
sar
lcall
out
jae
mov
daa
hlt
iret
push
lcall
and
sbb
ret
sbb
cmp
add
ret
mov
js
imul
incl
jge
adcb
pop
xor
pop
je
pop
arpl
shrl
jecxz
ljmp
fcoms
nop
ss
mov
je
pop
enter
mov
pop
iret
mov
or
pop
pop
mull
icebp
inc
jno
lds
out
loop
ljmp
je
inc
imul
popf
inc
add
shlb
out
je
mov
cmpb
push
imul
inc
add
mov
inc
call
add
fistpll
mov
in
cmpsb
rorb
sbb
fstp
mov
mov
dec
jg
cmc
cmpsb
mov
sub
clc
out
cld
int
jecxz
jae
sbb
jmp
je
mov
decl
out
adc
and
nop
pop
add
dec
xlat
cld
fwait
sti
push
imulb
pop
pop
rolb
adc
dec
testl
jle
hlt
lcall
imul
out
sbb
lea
js
and
lcall
add
add
sbb
pop
pop
mov
push
add
mov
repz
lcall
mov
push
or
mov
push
sti
andl
xchg
test
push
lcall
push
push
in
je
test
ds
dec
pop
int
mov
or
mov
jmp
push
pop
add
jl
repz
pushf
or
insl
nop
scas
ljmp
stos
leave
ds
jmp
or
test
add
rol
xlat
add
dec
lock
lds
arpl
mov
jle
ljmp
clc
out
dec
sbb
inc
in
cmp
mov
fnstcw
decl
mov
or
fstp
movsb
mov
push
mov
jne
mov
push
push
jnp
aas
stc
aam
stos
pop
mov
adc
fcmove
lock
dec
ja
xor
adc
pop
cli
dec
daa
dec
ja
ret
sarb
iret
arpl
and
faddl
call
aaa
push
or
xchg
or
push
sub
aad
mov
fisubl
adc
mov
mov
push
out
or
ret
sub
ret
cli
repz
or
pushf
mov
jecxz
ljmp
sarl
pop
psubusw
push
movsl
cmp
fldt
jmp
shlb
mov
jo
int
loope
lret
inc
xor
imul
fldl
mov
mov
mov
pop
std
decl
stos
iret
test
mov
jo
add
dec
ret
lock
pushl
and
push
jb
push
cmpsl
into
ds
mov
push
push
mov
cld
orl
ret
in
lret
dec
push
leave
scas
lcall
mov
dec
mov
inc
into
lret
jne
xchg
add
icebp
push
outsb
xor
ljmp
jne
mov
pop
or
decl
mov
arpl
aad
aam
dec
addb
fisttps
jp
outsl
sub
push
mov
rol
or
test
cmc
cs
je
mov
mov
sbb
inc
or
push
ror
inc
xor
add
outsb
iret
les
lock
mov
das
and
ficoms
das
mov
lcall
inc
mov
jecxz
sar
inc
mov
adc
mov
sub
je
jl
xor
sbb
jmp
xor
cmp
cmp
test
xor
aam
sbb
stc
sub
cmp
or
lcall
sbb
cmp
sub
repz
int
inc
mov
sar
xchg
and
or
push
and
movsl
and
mov
push
sub
sbb
mov
xchg
cwtl
gs
loop
cmc
mov
adc
into
addr16
sbb
cmpsl
pop
mov
add
or
lods
test
pushl
ljmp
fsubs
xchg
push
into
mov
fidivl
cmc
ljmp
cli
dec
out
mov
mov
jae
popa
xchg
inc
insl
pusha
sub
push
mov
outsl
mov
call
popa
into
mov
enter
dec
push
or
cld
stos
aad
imul
inc
aad
iret
mov
cld
pushl
int3
pop
and
lock
cli
dec
lret
repnz
cmp
jmp
rcrb
mov
fidivs
pushl
pop
jge
dec
fstl
clc
test
xchg
add
clc
in
add
mov
push
inc
div
arpl
mov
dec
adc
pop
test
jmp
mov
fs
insl
movsb
cwtl
out
push
lret
fdivrs
mov
jg
les
dec
dec
cmpsl
inc
cs
xchg
or
xor
stos
jl
mov
mov
sub
add
xchg
or
adc
mov
mov
mov
jne
sub
jo
dec
or
xchg
jnp
adcl
or
pop
hlt
pushl
daa
pop
mov
push
sbb
cmp
push
cltd
mov
or
dec
jmp
xchg
jo
movl
dec
nop
sub
add
jnp
dec
bound
inc
mov
stc
jmp
imul
and
loope
shrb
lcall
loopne
ret
or
adc
test
lahf
fwait
xor
js
ljmp
and
xchg
pop
decl
lahf
stos
inc
push
push
pop
and
jge
sub
jg
adc
cmp
ljmp
scas
ds
mov
inc
cld
xor
xchg
add
or
les
ljmp
cli
dec
je
xor
pop
test
and
lret
jle
dec
inc
adc
ljmp
sub
push
sub
imul
popa
fistpl
jp
adc
arpl
lock
cmp
cld
movsb
out
sub
ds
lock
out
jnp
xlat
jmp
rclb
adc
dec
inc
sbb
insl
popf
xchg
or
ljmp
clc
mov
mov
cmp
adcb
mov
pop
loopne
das
in
add
mov
mov
jl
cmp
push
shlb
out
jl
mov
leave
pop
push
out
rcrb
cmp
mov
shl
iret
call
sub
pop
mov
loop
mov
es
bound
imul
imul
call
jae
sub
jle
jp
mov
mov
ror
jge
mov
shll
mov
movsb
sbb
xchg
jg
repnz
nop
adc
into
mov
jnp
fwait
mov
icebp
pushl
mov
pusha
jg
insb
jnp
jg
xor
loope
jg
pop
mov
pop
ss
mov
or
ret
and
cltd
cmp
pop
sub
andb
sti
test
je
push
dec
jle
sub
mov
std
dec
movsb
and
fidivrs
cmp
push
cmp
mov
cmp
lods
mov
xor
jle
sbb
lcall
push
scas
test
mov
hlt
sub
sub
add
gs
clc
xor
decl
adc
fld
pop
mov
loopne
outsb
mov
ss
mov
fisubrl
cmc
xor
dec
inc
cltd
and
inc
and
adc
bswap
je
int3
jnp
movsl
lcall
popa
leave
sbb
mov
test
lds
pop
movsb
and
outsb
mov
add
push
xlat
inc
std
nop
cmp
lds
dec
dec
in
out
loope
push
cltd
clc
jg
mov
sub
pop
jno
jne
addb
aaa
iret
out
jmp
mov
outsl
mov
call
cltd
int3
and
xor
inc
mov
ret
xlat
bound
pop
ljmp
push
pusha
xlat
pop
or
cmp
je
stc
test
mov
int3
loop
jne
ljmp
in
jl
inc
popf
and
nop
push
cmpsb
jbe
pop
pop
stos
jg
lcall
fdiv
add
ljmp
push
xor
sbb
sub
fistpll
dec
or
mov
ss
pushl
and
sub
icebp
cmp
movsl
push
in
add
pop
mov
subb
jp
stc
idiv
incl
call
or
cmp
mov
cmpsl
adc
das
cmpl
int3
ja
mov
shll
lock
mov
adc
jecxz
leave
incl
stos
mov
cmp
jecxz
fxch
test
pusha
aam
lods
in
daa
jmp
sarl
loop
enter
sahf
repnz
inc
shlb
xor
push
mov
push
mov
ror
cltd
push
stc
pop
and
push
cmpsb
xchg
dec
stos
test
jae
or
incl
iret
lods
mov
in
jecxz
inc
jb
pop
js
in
enter
call
pop
sbb
inc
bound
ja
and
dec
mov
outsb
arpl
pop
fs
std
jae
das
dec
jo
stos
loopne
sub
cwtl
test
xor
sbb
cmp
call
mov
decl
rcll
jmp
into
ficoms
xchg
jg
sub
jge
cmp
sbb
inc
inc
out
sti
in
int3
push
adc
pop
fs
mov
cmp
fadds
pop
dec
push
jo
ljmp
es
cld
jecxz
ja
sti
sub
decl
shl
iret
xlat
ljmp
sbb
in
nop
mov
push
mov
sarb
rclb
jns
mov
pop
and
inc
pop
scas
test
repnz
clc
clc
dec
lcall
push
sbb
decl
xor
imul
das
cmpsb
loope
insl
jmp
cli
popf
push
jge
mov
inc
adc
jg
icebp
je
daa
cmp
clc
lea
mov
fs
inc
sar
jg
xchg
sarb
cmpsb
in
mov
lret
and
pop
xchg
mov
jmp
in
lcall
int
fninit
pop
scas
mov
out
xor
fists
or
push
std
cmc
fwait
mov
push
mov
ja
or
push
pushf
in
inc
xchg
test
jg
stc
sub
xor
xor
test
adc
xlat
jno
push
fcmovb
negb
cmp
je
jnp
call
adc
popa
xor
sub
lods
addb
testl
ljmp
es
ds
mov
push
js
pop
xlat
push
rorl
mov
adc
ljmp
mov
mov
insl
cwtl
xlat
dec
jnp
add
imul
sbb
ds
rorb
jge
mov
imul
push
jg
incb
cmp
sub
inc
outsl
mov
jg
decl
fisubs
test
insl
int3
cmp
add
lods
sub
cs
jmp
add
push
les
inc
or
mov
adc
ss
dec
push
out
jg
jmp
dec
sub
xor
push
into
mov
or
push
test
je
movsl
sbb
decl
jmp
push
pop
les
dec
fnstsw
push
scas
adc
xor
jl
push
std
mov
js
loopne
repnz
aad
int
and
pop
xchg
rcrl
push
cmp
lret
xor
int
into
loope
xchg
cmp
daa
inc
sar
scas
pushl
inc
jns
das
xchg
pop
fildl
ja
orb
cwtl
sub
ror
push
cld
jmp
push
movsb
divl
push
cltd
xor
jmp
add
sti
or
push
mov
movsb
cltd
lret
mov
incl
inc
dec
push
vfmadd213ss
mov
push
das
and
mov
rcl
mov
xchg
std
lret
xor
js
test
push
mov
out
sbb
xor
inc
and
pop
cmp
adc
pop
insb
sub
jns
out
hlt
sarl
jmp
xchg
xor
mov
mov
fnstenv
adcl
mov
push
leave
loopne
pop
mov
in
arpl
addr16
lret
ljmp
jnp
fnstsw
jb
aad
mov
pop
repz
pushl
movsb
in
jae
leave
in
arpl
jecxz
jnp
jg
repz
das
mov
call
ret
sub
pushf
mov
aad
sub
xlat
mov
inc
ss
movsb
pop
aaa
mov
outsl
ss
int3
fiadds
pop
xchg
out
cmc
sbb
ds
sahf
mov
fucomp
test
leave
mov
stc
je
adc
cmp
sbb
dec
arpl
inc
or
cmp
das
dec
add
jg
xchg
outsb
fidivrs
ljmp
xchg
pop
xchg
dec
imul
jne
pushf
rcrb
jg
sbb
imul
gs
cli
fildl
cmpsb
push
lods
cmp
cmp
std
jmp
aam
leave
fsubrl
test
pop
shlb
popa
scas
mov
cld
dec
incl
hlt
in
mov
movsb
int
mov
and
mov
arpl
shrl
ljmp
mov
fs
inc
mov
outsb
repz
stos
mov
repz
push
and
outsb
cmp
mov
insb
jnp
dec
jmp
shll
pop
pop
add
xchg
jg
outsb
js
pop
fisubrs
cmc
movl
dec
adc
ficompl
call
mov
push
cmp
cmp
mov
and
roll
incl
xchg
ja
test
xor
sbb
mov
outsb
lods
daa
xchg
lock
pushl
daa
daa
dec
packssdw
loop
arpl
push
nopl
in
lods
xlat
test
ljmp
jno
lea
and
mov
sub
aam
cmp
dec
jge
jmp
in
push
dec
ds
imul
sbb
pushf
pop
xor
rcll
mov
cmpsb
and
push
dec
call
daa
sbb
cmp
jmp
cltd
or
imul
enter
lcall
incl
cltd
arpl
xchg
stc
rolb
dec
cwtl
push
sub
lahf
xchg
orb
pusha
out
inc
mov
jmp
out
dec
mov
mov
jae
cltd
mov
dec
in
bound
lcall
cltd
ret
outsb
stos
dec
xchg
in
sbbb
mov
add
mov
xchg
loopne
incl
filds
jae
pushf
fisttpl
mov
cwtl
loop
lods
mov
lods
dec
xlat
mov
dec
arpl
loopne
dec
call
out
outsl
mov
mov
out
imul
icebp
xchg
push
inc
bound
jmp
jne
pop
or
or
mov
enter
add
and
push
sub
std
call
ss
les
adc
mov
aam
lcall
xor
js
shll
clc
sub
inc
shr
jle
cmp
mov
dec
sub
loope
imull
xchg
notl
cld
pop
inc
inc
sti
mov
or
jmp
lock
inc
jle
xchg
loopne
push
stos
adc
inc
data16
fisttpll
or
decl
shll
aam
add
mov
popl
push
inc
leave
add
stos
dec
pop
pop
clc
gs
jnp
push
rcrl
pushl
pop
adc
outsb
jmp
outsl
mov
xor
mov
sub
and
aaa
pop
imul
push
lods
lret
data16
test
adc
inc
data16
decb
lcall
push
sub
mov
call
dec
out
sub
add
cmp
inc
test
fcomps
jb
jg
mov
pushl
jp
filds
loopne
loopne
xchg
out
pop
jmp
sub
dec
xor
dec
dec
dec
add
or
iret
cmp
dec
sbb
push
xchg
mov
pop
mov
mov
mov
std
lcall
mov
hlt
dec
xchg
sbb
ja
inc
not
cltd
neg
fadds
pop
jg
jmp
xor
fisttpl
xchg
xchg
test
in
int3
mov
jmp
push
mov
cmpsl
jp
and
jae
mull
popf
outsl
cmp
jp
xchg
cmp
jmp
clc
shrb
mov
push
aad
rorl
or
ss
lds
sti
call
fdivp
imul
cwtl
or
push
cmp
add
mov
jmp
daa
mov
add
mov
pop
dec
inc
dec
dec
sub
enter
jge
cli
decl
int3
pop
daa
scas
addps
dec
jl
out
mov
jmp
adc
cmc
push
mov
mov
inc
mov
xchg
xchg
aam
mov
dec
mov
jmp
mov
lods
lds
int3
ja
mov
and
mov
push
pop
dec
aam
mov
movsb
sub
imul
cltd
outsl
sbb
push
sub
fisubs
iret
mov
decl
out
xlat
jbe
inc
jns
xchg
and
xor
gs
sub
aad
or
lods
mov
fnstcw
jp
adc
lret
movups
daa
test
xchg
mov
jmp
insl
in
mov
sbb
ss
repz
pop
inc
adc
or
in
in
mov
test
push
xorb
hlt
adc
ret
jl
into
sub
ljmp
es
jmp
pop
shlb
mov
jmp
loop
ror
ret
sbb
ljmp
jmp
test
data16
out
cmp
push
mov
ds
jae
movsl
push
sahf
inc
jge
cmp
sub
lahf
sub
std
mov
outsl
nop
cmc
gs
push
bound
psrlw
pop
adc
lret
mov
outsl
cli
pushl
add
push
out
sti
jbe
adc
lcall
call
push
cmp
sbb
ficoms
push
cmp
xor
sti
popa
les
pusha
xchg
mov
jmp
fcoml
and
jp
xchg
add
push
push
adc
lock
and
int
popf
sub
aaa
iret
inc
mov
pop
jle
pop
and
js
out
aaa
imul
incl
xchg
inc
fisubrs
scas
mov
rclb
lea
popl
std
sbb
call
xchg
sbb
stos
clc
jnp
hlt
scas
add
xchg
sub
shl
mov
repz
ljmp
fdivrl
push
rorl
xor
arpl
sbb
sub
faddp
into
mov
aam
fisubrs
cmp
addr16
into
inc
ljmp
outsl
in
movsl
js
jmp
fcompl
jp
jns
and
roll
sarb
fmuls
decl
cmp
call
mov
imull
mov
xchg
mov
aad
insl
mov
jae
sub
mov
sub
lahf
rol
sub
fs
daa
sbb
inc
push
pop
add
inc
inc
inc
add
pop
inc
adc
and
outsb
sahf
push
or
dec
cld
nop
aad
ljmp
push
test
lret
call
icebp
pop
orb
xchg
jno
xor
imul
ljmp
push
arpl
pop
loopne
lea
out
fwait
push
cltd
shrb
push
rcr
and
mov
decb
and
mov
xor
fldcw
rolb
xor
add
call
lahf
jle
in
es
orb
xor
les
pop
mov
cli
in
in
ds
ljmp
sarb
lret
or
addb
enter
pop
js
imul
loop
jecxz
fstpl
idiv
jmp
mov
insl
pop
mov
movsb
jns
pushf
les
cld
xchg
mov
sbb
cmp
xlat
jg
sahf
inc
lahf
mov
in
sbb
sub
mov
jl
mov
or
cwtl
out
cmpsl
pusha
idivb
cwtl
or
sbb
mov
cmp
mov
adc
mov
call
imul
xchg
pop
rorb
or
out
rorl
fmull
lcall
lcall
xlat
and
adc
jne
sbb
jb
mov
loopne
cmp
ret
dec
out
inc
dec
shlb
xchg
xor
sub
lahf
dec
pop
jnp
sub
decl
push
shlb
xor
les
sbb
mov
inc
pop
add
jp
push
stc
stos
and
adc
and
xchg
test
ret
lods
rcrb
pop
decl
inc
mov
aam
ds
sarl
xlat
lret
mov
mov
cmpsl
push
inc
icebp
incl
adc
hlt
repnz
jl
insb
sti
lahf
mov
push
xorb
xor
cmp
in
out
in
movups
sahf
inc
scas
sbb
stos
push
mov
and
pop
std
or
xchg
cmp
jno
xchg
call
je
testl
lock
sub
icebp
add
fisubrs
aad
dec
add
decl
enter
or
pop
xchg
fsubrl
or
jno
bound
xchg
push
jge
call
aad
adc
gs
mov
fs
scas
ret
push
jns
das
sti
sar
jmp
lret
aad
icebp
test
pop
scas
jb
xor
sub
test
leave
pop
outsl
push
std
lcall
add
loop
mov
movsl
sbb
in
jnp
jl
test
decl
mov
pushf
mov
ljmp
mov
sahf
or
push
incl
mov
dec
clc
stos
stos
gs
loope
mov
in
lcall
push
aam
dec
jmp
push
pop
scas
dec
cmp
mov
out
lods
sub
loopne
mov
mov
dec
in
imul
cmp
popf
jns
or
push
xor
daa
dec
sar
mov
push
outsb
pusha
jbe
test
js
add
aam
sub
fidivl
fdivrl
stos
nop
dec
xor
in
jp
push
scas
dec
rolb
ret
lea
insl
or
add
jg
mov
add
jne
mov
ljmp
decl
clc
out
lret
jbe
jmp
jecxz
dec
jnp
movsb
ret
push
jecxz
mov
cmpsl
add
call
clc
jne
mov
aas
dec
add
jnp
flds
push
roll
test
jne
push
push
push
ret
push
ljmp
divb
sbb
push
ss
and
sub
incl
xorb
outsb
cli
cmp
jne
popa
daa
rclb
dec
ffreep
mov
lods
ficomps
shlb
xor
mov
mov
or
sti
jl
mov
xchg
inc
mov
negb
sbb
mov
add
lcall
pop
les
xor
adc
lret
imul
ret
movsl
inc
sub
add
ljmp
sub
or
fs
roll
pop
or
je
inc
cwtl
xchg
pushl
jg
out
push
addb
inc
lea
mov
push
jmp
or
pusha
jmp
push
xor
faddl
gs
loop
cld
jecxz
adc
sub
adc
fcomip
call
clc
push
dec
adc
bound
arpl
cmc
and
mov
cmp
call
icebp
mov
out
and
fisttpll
pop
daa
inc
sbb
adc
xchg
lcall
and
aam
ss
lret
adc
into
xchg
push
aad
ja
mov
test
lock
fcomi
inc
lret
sbb
adc
mov
lret
jp
push
or
repnz
jg
lret
lods
mov
stc
insb
dec
data16
fmuls
xchg
rcll
lcall
pushf
push
pusha
sub
adcb
add
mov
and
mov
mov
pop
mov
pop
or
inc
cmp
lods
ja
lds
cmp
cmp
loopne
clc
mov
leave
cmpsb
cld
rcl
fidivl
in
inc
decl
incl
test
rcrb
or
roll
out
fs
fsubs
push
sub
mov
sub
cmp
movsl
popf
inc
mov
addl
loopne
mov
inc
add
sbb
mov
fdivrs
adc
xchg
push
push
fadd
cmc
add
divl
mov
ret
jg
cld
cmp
sbb
fldl
mov
sub
xlat
ljmp
dec
xchg
add
cli
jo
mov
rol
pop
push
popf
fidivs
jo
fadds
jg
sbb
jnp
pusha
jno
popf
movsb
pop
mov
test
push
push
xor
cmp
dec
std
sub
les
push
and
xor
int
push
push
movsb
cmp
cwtl
lret
call
in
xchg
notb
mov
xchg
dec
popa
iret
dec
jno
sbbb
cmp
cmpsl
sti
cmpsb
fidivrs
jae
cld
out
pop
rcrb
cmp
mov
pop
adc
and
jns
hlt
or
xlat
es
mov
std
mov
jnp
gs
jg
movsb
jecxz
out
movsb
test
mov
mov
inc
call
xchg
adc
stc
sub
movsl
add
stos
les
mov
xchg
fucomi
enter
aam
mov
adc
xor
pusha
sub
add
push
es
lcall
cwtl
jecxz
jmp
les
push
mov
cwtl
mov
call
decl
shr
inc
mov
xchg
mulb
call
sub
aas
nop
jp
or
adcl
cmpsl
inc
into
out
mov
add
pop
call
scas
lahf
loop
pop
and
or
dec
jno
sbb
push
or
sub
call
xlat
das
cmpsl
mov
cmp
push
testl
aas
mov
mov
mov
fadds
sbb
pop
xchg
push
pop
mov
cs
mov
int3
jmp
incb
lret
je
fisubrs
mov
shll
add
call
sarl
ds
mov
int3
pop
push
pop
adc
hlt
fld
mov
fists
mov
imul
ror
jle
lcall
es
in
jp
sbb
jecxz
cld
mov
pop
mov
inc
xor
inc
cmp
decl
lret
mov
into
and
lds
aam
jae
dec
or
ret
test
decl
sbb
shll
sti
and
fcoms
jmp
ja
and
pop
mov
popf
in
dec
and
lods
jno
sub
inc
push
jne
stos
inc
sbb
scas
pop
arpl
in
jns
xchg
filds
popa
lds
cmc
insl
sub
add
lret
jg
lahf
lods
cmpsb
push
push
enter
int
scas
cmp
push
mov
setg
mov
jnp
adc
mov
lahf
stos
jl
adc
inc
jle
shrb
pop
mov
xchg
hlt
aas
imul
movsl
jo
and
call
out
inc
div
pop
mov
out
push
mov
icebp
jecxz
dec
jl
in
cmp
addb
cwtl
cwtl
push
adc
fnstcw
insl
fmull
mov
jae
into
jecxz
aaa
popf
out
jbe
ljmp
dec
roll
repz
popl
scas
jge
sbb
ret
dec
test
sbb
jge
xor
inc
mov
xchg
xchg
mov
jb
ror
fisubrl
repz
lds
jl
call
sbb
cli
push
cmpsl
les
sbb
jmp
mov
jmp
jbe
and
repz
or
jmp
js
mov
mov
fstps
add
mov
jne
or
int3
mov
pushl
lods
sbb
loopne
sub
repnz
dec
cli
xor
fsubs
fstl
mov
jmp
in
insb
pop
pop
push
shrl
cmp
fmull
push
sub
or
jge
aas
lcall
repnz
or
add
xor
jbe
in
mov
dec
repz
call
fcomip
adc
or
inc
pusha
adc
movsl
scas
ret
jg
bound
jle
push
adc
aaa
lcall
cmp
aaa
shll
mov
test
lahf
sbbl
and
jno
subl
stos
pop
mov
scas
stos
cmp
inc
fsubrs
fnstsw
ljmp
mov
lods
adc
shrb
pop
ljmp
sarl
inc
call
sub
call
push
xor
jl
xor
sub
arpl
xlat
adc
xor
data16
incl
jbe
fidivl
add
and
cwtl
imul
jecxz
mov
adc
inc
jle
aaa
push
mov
and
xchg
pushl
lock
mov
jb
stos
sub
sub
cmp
sti
out
mov
mov
pop
aaa
pop
cmpsb
ret
mov
call
jge
sub
cmp
sub
mov
cmp
push
ljmp
and
clc
mov
movsb
into
or
push
mov
addr16
lea
mov
push
fdivs
sub
pop
movsl
popa
ss
filds
jmp
call
inc
sahf
es
xchg
inc
fildll
mov
jecxz
cmp
cmp
dec
sbb
jbe
mov
pusha
mov
mov
mov
add
pushf
addr16
std
adc
imul
sbb
cli
mov
mov
dec
lods
in
mov
fstpt
in
push
ljmp
sub
mov
sbb
jnp
shll
sub
sub
pusha
out
iret
pop
xor
ljmp
nop
jecxz
in
xchg
call
movsl
xlat
out
mov
test
sub
or
jmp
sahf
arpl
scas
jnp
pushf
jo
lock
jns
jmp
imul
and
dec
jne
xchg
notb
adc
and
pop
and
cmc
xchg
lret
ljmp
dec
and
sub
popa
xchg
jns
dec
inc
loope
mov
scas
fimull
decl
mov
inc
and
loopnew
jmp
adc
test
pop
xor
mov
inc
jo
call
or
loopne
inc
add
or
inc
loope
stos
addr16
lcall
jns
decl
test
stos
out
aad
xchg
test
sbb
lcall
mov
push
lea
mov
jge
xor
fnstenv
imul
sub
push
inc
adcl
jo
mov
cmp
sub
jge
sbb
out
inc
in
mov
sub
call
mov
mov
rcrb
loop
pop
dec
sub
daa
dec
mov
sbb
inc
decl
xchg
mov
je
sbb
mov
mov
sti
xor
stos
std
fildl
mov
pushl
xchg
jne
adc
xchg
pop
pop
inc
js
or
jle
jg
cld
mov
rol
aaa
or
out
mov
jb
std
sub
inc
push
decl
test
mov
add
mov
clc
jb
outsb
push
aam
adc
call
mov
mov
xchg
xlat
ja
mov
repnz
add
std
push
mov
pop
arpl
jmp
lcall
mov
dec
mov
add
daa
mov
pop
scas
cmpsb
xchg
mov
xchg
ja
incl
push
stos
jbe
sbb
notl
int
adc
std
pop
xchg
jae
cmc
lcall
fldt
or
call
xor
sbb
clc
in
lret
inc
pop
lods
adc
fcomps
mov
loopne
enter
jg
add
pushf
inc
push
xlat
jg
mov
pop
outsl
cli
jmp
sahf
outsl
pop
jb
mov
cld
xor
ret
outsl
cli
call
inc
jecxz
test
push
sbb
loope
dec
adc
fcmovnb
mov
call
leave
lcall
sbb
std
scas
pushf
push
pushf
mov
jmp
decl
or
int
lods
push
ss
subl
or
inc
xor
ljmp
cmp
mov
mov
in
rolb
or
xor
and
aas
mov
add
bound
mov
cmp
mov
push
int3
daa
imul
cmp
sbb
push
jecxz
mov
xchg
hlt
sbbl
mov
and
andl
ljmp
bound
out
outsl
ja
loope
lcall
mov
rorb
lock
dec
shlb
mov
aaa
pop
popa
imull
daa
inc
push
in
adc
jmp
ja
adc
iret
sbb
push
aaa
mov
adc
shlb
orl
fucom
jl
mov
push
push
jb
ja
scas
scas
or
mov
aaa
mov
jno
push
pushl
pushf
cmp
nop
mov
test
pop
mov
xchg
mov
pop
xorb
xchg
dec
lahf
incl
gs
outsl
inc
push
ss
inc
pop
push
ja
hlt
insl
outsl
cmp
add
xchg
sti
dec
fst
and
push
jmp
push
pushf
stos
xchg
mov
daa
ljmp
push
shl
dec
fsub
push
sub
fidivs
cmp
sub
cmp
int3
stos
cld
test
aad
inc
xchg
sbb
bound
cld
jb
addb
xor
dec
cmp
psubq
ret
inc
xor
in
pop
pop
in
dec
in
mov
scas
or
dec
sbb
fistpl
pop
fs
pop
dec
ljmp
movb
dec
mov
stc
enter
repnz
sbb
jg
call
push
sbb
xor
imul
fwait
pop
std
test
mov
jp
incl
xchg
fwait
scas
add
jne
push
inc
add
stc
aas
inc
push
adc
leave
xlat
xchg
lcall
fcoms
sbb
addr16
or
popf
int
jne
fwait
jp
mov
gs
call
lds
divl
cmpsl
push
push
inc
sbb
sbb
adcb
add
jg
lcall
and
pop
dec
mov
in
inc
push
out
sar
incl
ds
jb
or
cmp
loopne
push
mov
xchg
xor
mov
int
inc
pusha
pop
mov
or
mov
pusha
inc
pop
pop
jne
lock
ljmp
inc
jp
outsb
mov
fistpll
mov
mov
movb
decl
sbb
imul
int3
cli
enter
stos
fdivs
fwait
jb
pusha
bndldx
js
stc
call
std
adc
mov
jp
imull
hlt
push
icebp
push
dec
cmp
pop
pop
out
cli
cmpsb
icebp
test
decl
lock
xor
push
push
fiadds
hlt
dec
addl
ljmp
outsl
inc
call
mov
push
mov
add
cld
fdivs
js
xchg
jle
push
jbe
xor
decl
in
mov
je
sbb
xlat
rcll
jecxz
cmp
les
pop
add
and
out
cwtl
jle
or
scas
adc
in
enter
in
rcrl
xor
jae
xchg
xor
scas
inc
insb
cmpsb
or
imul
jle
cmp
add
divl
outsl
sbb
es
mov
fcoms
push
xor
jp
mov
or
sbb
das
popa
fsubrs
insl
mov
cmp
cmpsb
decl
jmp
cli
xor
cmp
ljmp
cmp
inc
in
rclb
xchg
imull
imul
pop
jmp
mov
mov
or
pop
xchg
pop
cmp
or
cmp
or
pushl
pop
outsl
jle
or
sub
fsts
aam
sub
jae
mov
cmpsb
call
add
cmc
mov
mov
test
rcll
incl
arpl
sub
jbe
jns
push
rolb
or
pop
mov
cld
in
outsl
add
frstor
mov
out
sbb
dec
xor
inc
xor
jo
test
push
mov
sub
dec
imul
sbbb
test
push
arpl
pop
stos
xor
fwait
dec
xor
add
incl
push
je
pop
pop
xchg
sub
std
jo
icebp
sbb
lock
ja
movsb
and
push
push
jno
mov
decl
adc
cmp
imul
nop
mov
pop
cwtl
in
add
popf
mov
mov
decl
push
xchg
fildl
push
or
loop
aad
mov
fdivrs
xor
jg
dec
xchg
sub
pop
inc
push
adc
mov
adc
cwtl
into
rcll
aad
mov
aas
cmpsb
add
out
adc
push
es
imul
ljmp
or
xchg
fldcw
xchg
inc
rsqrtps
outsl
cli
decl
or
inc
xor
pop
rcrb
inc
push
add
mov
push
mov
fbstp
mov
cld
and
es
or
shr
sbb
inc
inc
mov
loope
jg
jg
adc
sbb
inc
js
sbbb
or
mov
jmp
stos
ljmp
jo
sbb
scas
rcl
outsb
aaa
enter
dec
ficoms
sub
xor
lcall
fsts
or
cwtl
and
lods
es
sar
call
pop
jmp
cltd
sub
adc
lds
jns
push
in
pushf
mov
fs
adcb
dec
out
incl
cld
push
ljmp
push
cmpb
inc
ret
pop
push
sar
mov
fiadds
fdivp
adc
ja
push
jp
mov
and
cld
decl
adc
xor
mov
in
adc
cld
arpl
mov
fdivrp
cltd
decl
xor
mov
int
mov
mov
jg
gs
enter
inc
fiadds
or
xor
jl
dec
inc
push
push
sbb
add
lcall
cmp
sub
jne
in
loopne
mov
xchg
lcall
mov
jae
mov
cmpsl
push
decl
push
pop
pushf
bound
mov
sbb
andb
xorl
push
push
incl
cwtl
sub
adc
sbb
cmpsl
add
pop
int3
ljmp
out
shrb
mov
ja
mov
gs
insl
mov
andl
lcall
adc
mov
push
push
ja
add
aas
in
inc
xchg
jo
jge
call
outsb
inc
test
push
inc
clc
out
jo
ds
mov
fwait
jecxz
rcr
pushf
ficoml
out
ljmp
shrb
out
mov
mov
fcmovne
mov
dec
sarb
pop
push
dec
pop
cwtl
icebp
lds
cmc
test
dec
push
xchg
lods
das
mull
aaa
or
incl
mul
test
push
jmp
mov
xor
lds
int3
pop
jp
ds
pusha
rcrb
mov
xchg
test
sahf
cli
xor
mov
mov
pop
lods
sbb
jl
ror
sbb
subl
pop
push
jnp
insl
daa
aam
push
shrb
nop
sub
jge
shrl
xor
je
call
shll
jnp
pop
repnz
je
inc
mov
dec
push
nop
mov
pushl
pop
pushf
push
mov
int3
xor
push
or
lods
ja
push
stc
rol
aad
pushl
aad
add
mov
scas
outsb
nop
lds
push
ficoml
pop
sbb
add
jmp
or
clc
push
adc
mov
sub
xor
jge
ljmp
xchg
aad
jl
decl
push
add
aad
push
xchg
jg
xchg
cmp
sub
jle
pop
lock
call
pop
pop
mov
div
fs
lea
mov
ficomps
dec
lea
adc
ljmp
add
cmpsl
cs
cmc
xchg
mov
cmp
ficompl
xchg
fidivl
mov
call
xlat
and
inc
lret
sbb
insw
dec
test
adc
jle
mov
hlt
mov
xor
push
ljmp
jae
subb
xchg
xchg
mov
jle
cmpsb
sbb
loope
dec
repz
xchg
scas
mov
fildl
out
clc
pushl
xchg
aaa
icebp
sub
out
push
push
rcrl
mov
and
incl
and
movsl
rclb
rcrl
adc
ljmp
shl
scas
jmp
inc
pop
jnp
push
fiaddl
pop
sub
icebp
or
adc
cmpb
pop
popf
mov
nop
sub
in
dec
push
xor
out
jp
adc
jmp
popa
mov
push
jnp
loop
mov
lods
xor
sbb
into
push
rorb
scas
xchg
mov
out
ljmp
pop
cld
mov
repz
mov
sarl
popa
and
sbb
xor
nop
mov
das
enter
ljmp
outsl
cwtl
sub
call
pop
add
sbb
jbe
mov
ret
pop
lock
decl
orl
out
or
pop
xor
pop
mov
or
pusha
mov
pushl
popa
jno
xor
stos
in
adc
pop
lock
insb
and
xor
pop
insl
add
push
ljmp
and
pop
rcll
xlat
lret
mov
rol
dec
hlt
popa
ss
xor
jg
lods
decl
stos
js
xor
adc
or
incl
pop
add
nop
cmpsb
mov
inc
outsl
and
mov
rolb
xor
incl
sub
cmpsl
jae
into
sbb
xchg
mov
sub
mov
std
cmp
les
cmc
push
mov
pop
adc
lods
and
aam
fidivrs
dec
jno
lret
adc
and
sbb
sbb
mov
lret
test
sti
int
or
add
int
jge
notl
jb
testb
icebp
pushl
push
out
stc
or
in
mov
lds
fadds
lods
repz
jmp
push
nop
sbb
jno
ja
test
fcoms
and
add
incl
jbe
dec
clc
mov
push
xchg
outsb
cmpsb
cltd
push
or
add
iret
iret
movsl
jb
cmp
xor
xchg
fisubs
add
mov
jnp
addr16
hlt
lcall
decb
add
lret
in
das
mov
xchg
inc
mov
jb
cmc
pushl
xor
movsb
icebp
pushf
adc
or
pop
lods
add
push
iret
pop
sbb
ds
std
cmp
pushl
ret
dec
fsts
add
addb
stc
out
mov
adcb
cwtl
mov
cmpsl
aaa
mov
or
std
test
mov
add
rorl
lcall
lret
jle
jmp
mov
dec
mov
lahf
sti
inc
sbbl
cmc
jmp
lods
hlt
mov
sub
shl
pushf
xchg
jb
lcall
xchg
cmpsl
dec
sbb
fildl
aaa
xlat
stos
das
shlb
xor
loopne
out
out
pushl
cli
sti
pop
andl
inc
push
insl
xchg
rcl
lahf
jmp
outsb
fisubrs
or
mov
ljmp
add
out
xchg
or
ja
mov
xor
mov
stos
dec
out
or
push
cwtl
or
cmc
gs
xor
sbb
push
lcall
lret
fwait
repnz
shll
in
dec
mov
push
test
xchg
mov
mov
xchg
push
das
xchg
xchg
clc
hlt
into
xchg
mov
pop
cmp
inc
cmc
cmp
xchg
es
mov
add
mov
test
test
sbb
xchg
push
ret
inc
add
xchg
add
addr16
sbb
dec
push
pop
or
addb
int3
je
pushl
push
inc
loopne
adcl
lret
pop
daa
mov
pop
cltd
nop
iret
inc
call
add
int
push
loop
je
in
dec
stos
dec
mov
sbb
cli
mov
mov
mov
or
adc
cmpsb
fstpt
add
lcall
fcompl
mov
fdivr
rsm
sub
jno
mov
nop
jg
std
or
jno
inc
fs
inc
in
sti
aam
mov
add
scas
sti
push
pop
add
lahf
xchg
lcall
xor
xchg
bound
lahf
repz
ret
pop
clc
bswap
fwait
mov
dec
mov
xor
jo
xchg
push
or
ss
mov
imul
lock
jae
loope
and
in
aaa
jmp
push
jo
rcrb
ret
into
push
out
inc
xor
std
inc
shrl
cs
les
test
rcr
mov
mov
imul
mov
mov
das
push
sbb
inc
divl
loopne
dec
lds
push
cmp
mov
cmp
loop
inc
enter
jno
repz
sar
loope
nop
add
bound
mov
inc
cmpsb
xchg
rcrl
jg
das
cs
popa
into
mov
lods
inc
vmovups
ret
and
xor
jp
decl
out
js
and
int3
or
push
stc
xchg
and
and
push
clc
in
lcall
test
imul
add
mov
jg
call
or
jns
or
xor
cmp
push
and
jnp
pop
adc
pushl
xchg
sub
push
mov
cltd
xor
mov
push
fildl
push
and
jmp
ljmp
cwtl
leave
icebp
adc
mov
es
cmc
sbb
inc
mov
inc
add
xchg
cmp
aad
add
cld
popa
call
lock
ss
mov
ds
push
sub
push
and
sbb
leave
int
mov
jnp
in
pushf
icebp
pop
lods
pop
adc
jl
incl
jns
and
dec
sbb
fcomi
mov
aam
ja
sub
or
push
std
lcall
int
cmp
insb
sbb
shlb
sub
call
cmpb
mov
pop
cmc
dec
jle
push
pop
stos
xor
insl
mov
jg
mov
jle
mov
add
fwait
aas
imul
mov
nop
sub
shlb
push
lock
out
imul
das
enter
aas
int
push
push
test
xchg
mov
add
sti
pop
jmp
sbb
lret
insl
mov
ljmp
mov
jbe
les
lcall
bound
rorl
push
repz
outsb
adc
jo
xchg
cli
xor
or
fsubl
js
cmpsl
sub
insb
mov
push
adc
inc
in
xchg
mov
xor
inc
ljmp
xchg
cld
xchg
jnp
jno
jmp
mov
ficoml
decl
mov
pop
test
mov
push
sub
sbb
orb
ss
mov
call
ret
cwtl
sub
pop
sub
ss
fdivs
xchg
mov
cmpsl
icebp
dec
pushl
xor
sbb
addl
sub
icebp
lcall
mov
mov
mov
je
scas
push
pop
mov
loope,pn
add
and
cmpsb
xor
imul
out
mov
jmp
mov
into
clc
ds
mov
dec
adc
stos
ljmp
cli
shlb
pusha
fldt
mov
imul
adc
push
addr16
ljmp
mov
stos
jp
pop
es
subb
inc
sub
stc
fmull
call
xchg
cmp
pop
dec
repnz
ret
shll
add
push
ljmp
icebp
push
call
jb
aaa
scas
pop
jnp
rcll
xor
push
jmp
xor
xchg
adcb
les
fcoms
into
ljmp
sub
and
mov
out
lret
dec
adc
sub
out
jle
fcmovne
enter
fnstcw
jl
push
inc
or
xchg
xchg
mov
or
or
dec
mov
push
push
daa
dec
movsl
jnp
call
loop
movsl
or
mov
fsubs
fs
lock
sub
pop
xor
mov
add
add
push
adc
nop
mov
mov
pop
sahf
cmp
int
lret
mov
push
into
or
ljmp
adc
push
popf
xchg
add
inc
mov
add
into
xor
in
aam
lcall
arpl
adc
sub
cmp
out
insb
dec
repnz
jmp
mov
lret
icebp
je
stc
push
xchg
inc
out
cmpsl
push
aas
pop
cmp
lods
in
in
int3
adc
and
cmc
xlat
xchg
xor
jbe
jg
mov
xchg
mov
sub
decl
mov
ljmpw
xchg
mov
mov
movsb
push
sub
fildl
jnp
jmp
subb
or
scas
mov
mov
cmp
xchg
cwtl
cmovne
leave
rol
imul
inc
sub
pop
push
jnp
lea
push
dec
and
mov
call
sub
push
or
inc
inc
insl
lods
dec
add
arpl
sarl
adc
jg
mov
fbld
frstor
cli
lcall
lcall
loopne
jg
cmp
sbb
sbb
stos
xor
fadds
sub
pushl
adc
out
and
inc
add
adc
fisubrl
fstpl
scas
repz
sbb
test
push
fisubrs
add
test
dec
ret
pop
aaa
imul
das
clc
push
popf
or
cmp
xor
sbb
pop
push
dec
cmp
std
incl
inc
idiv
cmpsl
loop
mov
pop
inc
push
mov
sti
es
jl
mov
jmp
std
ret
incb
pop
lods
cltd
jp
mov
or
rcrl
xlat
fimull
xor
outsl
xor
fbstp
in
push
loop
inc
enter
addr16
pusha
lcall
pop
fwait
in
pop
shll
inc
enter
push
inc
adc
jp
pop
inc
shrb
sahf
int
jmp
add
aaa
add
ja
adc
sbb
pop
hlt
cmp
insl
lods
cmc
or
fstps
adc
sub
call
jae
jne
ja
movsl
mov
jg
incb
cwtl
daa
std
adc
and
mov
push
inc
push
scas
sbb
sub
cmpsd
xor
aas
rcl
scas
jle
pop
je
mov
ret
and
out
push
dec
mov
dec
and
fsubl
cltd
std
aaa
adc
jne
mov
sub
add
xchg
movb
call
xchg
shlb
push
cmc
inc
adc
inc
pop
popf
jmp
inc
jne
mov
int
clc
mov
je
jle
or
je
mov
lds
notl
sub
mov
scas
out
lahf
or
incl
and
pop
icebp
xorb
pop
jb
js
jnp
cmp
aas
sub
fsub
outsl
int
aam
out
adc
shl
jmp
jg
jle
shll
jg
mov
hlt
mov
aas
movsb
pusha
faddl
or
stos
nop
pop
and
mov
call
and
data16
pop
pop
inc
lea
mov
mov
jae
fnstsw
test
lcall
jmp
xchg
nop
push
jo
sar
xchg
stc
push
xchg
insl
mov
imul
les
stos
test
fadds
mov
push
jne
or
aad
sbb
dec
xchg
aaa
std
incl
lret
sarl
in
adc
or
adc
jae
xor
add
es
xor
decl
lods
sub
cmp
adc
pop
hlt
stc
mov
sti
adc
cli
cli
mov
mov
ljmp
loope
lds
in
in
jns
call
xor
fdivrs
push
imul
test
aam
cs
call
popa
rcrb
int3
jae
cltd
inc
jb
cli
or
dec
mov
imul
call
push
lea
aam
adc
sub
dec
pusha
jno
mov
addr16
push
xchg
xchg
dec
pop
inc
lea
je
jmp
mov
addr16
push
push
dec
bound
sbb
sub
fdivl
incl
jmp
jp
pushf
in
pop
inc
xorb
bound
pop
ljmp
neg
pusha
pop
adc
lds
cli
imul
pop
popf
popf
and
xchg
lcall
jb
rorb
rcrb
addr16
or
or
cmp
jmp
inc
push
test
push
cs
jmp
mov
pusha
lret
imul
adc
arpl
dec
fnsetpm(287
pop
pop
in
test
cmp
std
and
insl
jl
pop
sbb
pushf
jmp
scas
and
out
inc
movsb
sbb
sbb
mov
xchg
inc
cmp
add
add
call
add
pop
pop
into
aam
sbb
cmp
push
mov
add
shrl
fbld
in
outsl
clc
fwait
cmp
adc
and
test
jg
dec
repnz
add
ret
pushl
test
mov
jmp
push
adc
ret
xor
push
adcl
call
inc
pop
das
mov
mov
cmp
mov
sub
in
or
ss
mov
jmp
push
push
imul
inc
mov
aas
mov
call
xor
sbb
mov
push
ja
pop
cli
incl
imul
dec
icebp
inc
imul
outsl
mov
out
adc
and
out
jbe
iret
xchg
jae
jle
adc
or
ret
gs
cmp
mov
jg
jmp
mov
sub
pop
mov
cmp
push
jnp
xchg
lea
lcall
ljmp
xlat
repz
and
inc
or
ljmp
adc
mov
pop
outsb
pusha
rolb
ljmp
jb
das
lret
add
outsl
clc
frstpm(287
cmp
inc
pop
call
lock
idiv
call
push
add
pop
mov
movsb
test
lahf
imulb
pop
jmp
or
hlt
or
clc
arpl
stos
ljmp
cmp
or
sub
inc
mov
sbb
repnz
lret
jg
sahf
add
enter
mov
mov
dec
pop
jo
scas
jmp
jmp
pushl
sub
xchg
jmp
push
lea
frstor
sahf
gs
mov
cld
dec
jle
push
pop
mov
fwait
jae
and
pop
mov
lea
ja
pop
xchg
xorl
cmp
inc
outsl
das
addr16
iret
sub
gs
push
jmp
or
ret
in
or
push
or
mov
push
jae
das
mov
cltd
shll
outsl
shlb
xor
sub
movl
nop
mov
inc
jb
mov
sub
fsubrs
stos
fidivrs
imul
dec
cwtl
stos
jno
inc
pop
clc
jmp
push
mov
in
and
mov
leave
adc
sar
call
ret
jmp
popa
sub
repz
inc
insl
imul
push
inc
decl
and
dec
mov
mov
mov
dec
xor
or
loopne
stc
repz
push
or
out
clc
std
loop
cmp
dec
sti
ret
ret
mov
test
push
mov
ljmp
adc
pop
in
int3
loop
out
bound
lds
pushl
daa
testb
sbb
dec
cmpsb
test
push
sbb
loop
shl
xchg
mov
adc
jecxz
mov
imul
ret
xor
aas
loopne
pushl
push
ljmp
jge
adc
cltd
mov
fidivs
ret
negl
dec
xchg
lea
insb
in
sub
and
xchg
ja
ds
popa
xor
mov
mov
fnstsw
imull
fs
sub
incl
inc
rcrl
shlb
sbb
sub
mov
fs
sub
cmp
ret
in
push
ljmp
push
or
pop
or
add
jb
ret
mull
xchg
das
sub
jecxz
jg
lds
fidivl
outsl
and
rep
gs
imul
stos
fstl
pushf
lcall
jmp
pop
gs
xor
sarb
mov
jnp
mov
jbe
cmp
popf
pop
sbb
pop
mov
or
fidivs
xchg
je
jle
jmp
mov
mov
mov
out
push
lret
fsubrl
aad
jg
lock
insb
push
or
inc
sub
daa
sub
scas
jo
int
xchg
lods
and
cmp
sbbl
lahf
je
addl
mov
mov
xchg
aas
jnp
lcall
aaa
ret
jl
ret
xchg
js
arpl
jns
cmp
adc
xchg
pop
xchg
cmp
mov
add
mov
xor
test
shll
ret
clc
ljmp
mov
mov
sub
jg
testb
cmc
call
and
and
test
jae
stc
dec
push
fcmovbe
test
std
xchg
and
ljmp
mov
push
shr
fidivrs
lret
xor
js
mov
lahf
xor
sub
hlt
out
sbb
rcl
jae
shll
mov
and
mov
cmc
mov
hlt
imul
fmuls
fiaddl
adc
jae
jp
daa
push
lahf
mov
adc
pop
add
lods
ds
aam
jmp
mov
data16
pushl
adc
iret
push
sbb
dec
rclb
push
jl
sbb
mov
jmp
add
decl
fwait
cmp
xchg
jae
jg
stos
fisttps
push
mov
inc
push
mov
out
lcall
shlb
push
push
push
mov
shrb
scas
loop
pop
fstpl
mov
inc
xchg
xor
mov
call
xchg
popa
cwtl
push
mov
out
fnsave
outsb
test
inc
adc
int
adc
pop
mov
pop
or
mov
push
stc
jnp
jae
xor
decl
inc
mov
inc
push
jno
adc
out
stc
dec
dec
or
push
jns
scas
mov
push
test
test
pop
mov
push
and
out
sbb
xor
das
mov
cmp
jmp
clc
push
out
cmpsb
push
aas
pop
pop
lea
les
stos
mov
adc
xor
and
jmp
jne
les
sarb
leave
mov
dec
mov
or
call
xor
cmp
rcrl
nop
sub
sbb
cwtl
sub
or
shrb
mov
in
fnstsw
mov
cmp
out
mov
jl
idiv
sar
call
mov
xor
scas
mov
pop
test
cld
mov
inc
incl
push
fwait
push
ljmp
xchg
cmc
lods
inc
in
dec
jo
popa
into
scas
shll
frstor
shrb
mov
test
push
fcomp
push
jmp
dec
in
cmpsb
cmp
jl
bound
test
lock
sub
jmp
test
hlt
mov
xchg
push
pop
sahf
xor
sbb
jbe
pop
cmc
call
ljmp
inc
aad
xor
xor
lea
push
xchg
jg
dec
lock
jnp
outsl
inc
lahf
push
hlt
xchg
mov
dec
dec
out
lock
mov
pushl
inc
xchg
test
fmul
or
pushf
cld
lods
sahf
xchg
cli
cmpsl
adcl
add
mov
and
pop
jmp
mov
in
ja
push
add
dec
cmp
jno
or
cmp
add
mov
pushl
push
fnsave
inc
push
repnz
xchg
mov
xor
jae
out
dec
xchg
inc
inc
aas
jp
jnp
scas
insb
cmp
insl
ds
jg
adc
pop
mov
das
out
mov
jne
jb
add
inc
ds
sti
arpl
jae
sbb
cmp
lds
mov
cmp
jb
sub
cmp
test
sbb
call
xor
pop
orl
jnp
inc
repnz
lds
arpl
cltd
inc
inc
pushl
scas
or
pop
mov
fs
xchg
push
movsl
jae
add
pop
aas
fucomi
lods
jnp
lret
decl
sbb
adc
negb
out
sub
and
add
xchg
push
sub
es
mov
pushl
fmull
sbb
aaa
mov
jne
pop
mov
mov
mov
and
sti
das
dec
cmpsl
test
xchg
add
fwait
cs
sbbb
rcrb
adc
decl
mov
mov
out
sub
fcmove
xor
test
mov
and
ljmp
cli
adc
push
jne
jl
iret
fimuls
roll
jae
arpl
in
ljmp
pushl
jns
dec
insl
xchg
jmp
pop
jbe
cmp
outsb
or
jo
jp
sub
pushl
add
and
xor
adc
mov
movsl
fdivrs
push
sti
leave
jae
mov
mov
lods
mov
cwtl
mov
cmp
sbb
je
insl
lcall
ror
jl
jbe
and
or
jmp
shrb
or
cmp
mov
cmp
mov
cmp
addr16
ljmp
test
cmpsb
mov
cli
jno
mov
inc
cmp
sub
lret
dec
push
cld
ljmp
push
cltd
and
push
adc
insb
mov
ud1
pop
pushl
push
aam
js
mov
xorl
or
mov
push
ret
mov
inc
stos
jne
or
pushl
cmp
xor
xchg
sub
addl
iret
cs
mov
pusha
mov
incl
xchg
push
in
lret
push
aas
pop
adc
cld
mov
xchg
dec
or
xchg
fcompl
ret
pop
in
je
mov
out
outsb
aad
fs
or
test
cwtl
push
addl
pop
fdivl
cs
xor
sbb
popa
cmp
lret
pop
std
popf
test
mov
cli
ja
stos
lahf
gs
lcall
mov
cmpsb
mov
inc
cwtl
push
in
add
cli
out
dec
add
xor
daa
mov
icebp
movsb
adc
rolb
xchg
add
push
push
jbe
int
fwait
jno
ljmp
sbb
int
or
push
insl
cmpl
jmp
inc
push
fstpl
sub
ljmp
adc
lcall
push
xor
lret
flds
incl
adc
mov
push
call
pop
popf
xchg
mov
lock
call
xchg
addr16
push
add
and
mov
aaa
push
int
jg
outsl
es
add
int3
aaa
test
into
jmp
and
insl
scas
pop
addl
fbld
pushf
xchg
leave
xchg
dec
xchg
test
jns
cltd
adc
enter
call
push
jp
in
lahf
and
add
out
mov
cmp
and
xor
incl
fwait
inc
and
inc
mov
stc
bound
jnp
addb
in
pop
ljmp
sbb
dec
insb
pop
adc
gs
xchg
pop
sub
lret
jg
ljmp
mov
aaa
int
jno
add
mov
inc
mov
sbb
mov
fisubrs
sbb
aad
ljmp
cvtdq2ps
test
dec
loopne
int
loopne
test
test
xor
dec
pop
dec
jmp
mov
lock
mov
lock
sbb
aas
add
call
les
xchg
inc
fildll
imul
mov
jg
mov
mov
fstps
lcall
sub
dec
dec
mov
add
mov
setnp
inc
movsb
addr16
adc
jg
mov
push
push
call
pop
dec
mov
lahf
clc
adc
mov
pusha
mov
movsl
pop
mov
in
aas
in
xchg
xor
jns
xor
scas
das
xchg
push
xchg
or
int3
cmp
or
aad
ljmp
out
fwait
xchg
fadds
push
dec
mov
mov
ret
adc
cmp
loop
sub
ljmp
loopne
shll
mov
dec
push
out
in
jo
ja
incl
jp
jge
mov
mov
fs
mov
mov
mov
incl
fimuls
push
stc
xchg
fldt
cmp
mov
faddl
leave
inc
xchg
lds
stos
in
mov
test
xchg
dec
mov
popf
insb
ljmp
incl
repnz
xlat
test
sbb
jp
cmpsb
ds
fcmove
push
outsl
in
gs
add
incl
jns
xor
jno
out
cld
movsb
adc
jmp
xor
dec
xchg
jl
das
in
or
lcall
rclb
add
dec
or
sub
ret
int
pop
adc
sbb
dec
mov
jmp
mov
mov
ret
inc
xchg
jge
xor
push
xor
mov
sub
fcoms
mov
js
adc
adc
sub
imul
ljmp
shlb
pop
jns
fdivs
lcall
and
xchg
jecxz
mov
xchg
dec
sub
push
mov
dec
and
dec
jnp
xorb
mov
fwait
loope
add
sub
movntq
out
andl
shlb
or
mov
cld
adc
lods
push
or
jmp
push
ret
push
arpl
cmp
ljmp
pop
mov
add
and
cmpsl
mov
in
mov
call
jb
test
lahf
out
insl
dec
das
add
out
lcall
movsl
repnz
bound
pusha
popa
decl
stos
mov
clc
jg
je
aaa
pop
cmp
inc
adc
fs
imul
push
std
incl
loope
dec
lahf
cmp
loope
or
scas
cltd
fisttpl
aam
push
push
add
and
inc
paddusb
or
hlt
dec
push
icebp
scas
sti
sub
ljmp
int
push
cmp
mov
test
adc
cmp
js
xchg
mov
outsl
jecxz
adc
jmp
sub
jne
push
push
mov
or
in
cmp
sbbb
sub
in
call
andl
push
or
aam
sbb
xor
rcrb
std
mov
out
adc
incl
dec
rsm
mov
sbbb
xchg
fwait
lahf
pop
xchg
inc
jae
push
or
jmp
pop
dec
arpl
pop
push
sub
fwait
and
dec
jmp
clc
out
xchg
les
mov
sub
ljmp
or
and
or
inc
fnstcw
popf
aad
lods
mov
add
nop
out
dec
ljmp
xor
repnz
and
lods
inc
dec
inc
and
pop
add
sbb
push
push
push
arpl
mov
or
call
std
jmp
sub
repnz
xorl
lret
fisubrl
mov
push
jns
decl
pop
sbb
mov
jns
pop
xor
push
into
sbb
jno
and
clc
shld
lcall
fsts
ret
pop
push
push
push
xor
lcall
jmp
sti
dec
fisttpl
adc
xor
dec
cli
dec
mov
test
divl
inc
cwtl
lret
pop
out
aam
aad
insl
fcomps
jo
xor
jg
xchg
mov
pop
std
test
imul
push
sbb
mov
mov
insl
fildll
push
cmp
mov
outsb
jo
icebp
mov
jg
xchg
lock
cs
sar
aaa
scas
mov
xor
pop
sbb
xchg
js
sar
ljmp
inc
insb
cmp
adc
adc
mov
jecxz
ds
lods
adc
ljmp
or
inc
lods
repz
lds
xchg
and
ds
pop
idivl
ljmp
repz
mov
loopne
in
int
dec
jmp
int
add
cwtl
loop
push
mov
ljmp
popf
mov
or
stos
dec
mov
incl
push
scas
cmpsb
inc
inc
test
push
aaa
fcomps
incl
mov
lds
pop
and
addr16
roll
mov
sbb
xorl
cmp
das
fstpl
loopne
je
inc
int
mov
or
out
or
out
ret
and
adc
mov
test
out
nop
sbb
addl
cmp
pop
daa
pop
ds
call
jbe
add
mov
stos
aad
sub
pop
sbbl
iret
testb
mov
call
inc
xchg
cmp
cli
popf
in
sub
orb
cmpsb
cwtl
sahf
repnz
xchg
cmp
fcomip
decl
mov
stos
jge
cmp
aas
pop
ret
mov
fdivp
push
push
leave
add
fwait
in
sub
sahf
out
dec
pop
ds
push
jnp
loopne
out
inc
jmp
cwtl
cwtl
inc
cmp
inc
xchg
dec
dec
cmp
in
xor
jg
in
xchg
jl
push
jne
mov
loopne
data16
dec
mov
mov
lret
pushl
sub
imul
dec
lods
cmp
andb
testb
sbb
pop
popf
lcall
push
mov
push
out
ds
xchg
mov
repz
xchg
adc
shrl
jmp
pop
mov
ds
xor
inc
jno
hlt
cli
icebp
push
mov
mov
aam
daa
loope
jg
jmp
pushf
mov
lds
ffree
mov
xor
or
mov
call
mov
mov
jbe
loope
shrl
fdivl
aaa
cld
ljmp
inc
iret
xchg
pop
bound
sub
pushf
xchg
sbb
stos
push
cmc
jmp
adc
jns
pusha
ja
jle
imul
fcoml
pop
fnstenv
imul
sysenter
xor
cmp
repz
imul
xor
punpcklwd
pop
jl
lds
scas
js
pop
pop
pusha
jo
dec
mov
mov
fisubs
insb
hlt
add
pop
dec
sub
xorl
jmp
jg
lock
ljmp
or
adc
inc
mov
add
test
mov
and
xchg
and
fiaddl
adc
pop
sub
lods
pop
or
cmp
jmp
cmc
lds
pop
dec
mov
push
scas
xchg
mov
dec
jmp
fbld
ljmp
leave
adc
mov
mov
call
inc
inc
pop
scas
and
mov
xchg
add
push
inc
push
and
out
pushl
xor
inc
cmp
iret
int
jl
xchg
adc
fdivr
ret
jmp
sub
dec
cltd
inc
movb
dec
sahf
test
ret
cmp
add
scas
inc
loopne
aaa
fucomi
loop
mov
jp
pop
rcrl
mov
push
xchg
insl
fnstenv
mov
add
and
or
mov
and
jge
mov
and
ljmp
mov
popf
xor
sub
js
xor
cmpb
xchg
in
ja
cli
mov
and
dec
xor
dec
lock
loope
pop
push
addr16
call
cmpb
movsb
js
shlb
mov
lret
lea
push
push
cld
aas
pop
inc
jb
shlb
inc
mov
inc
or
push
fistpll
sbb
or
aaa
in
shl
into
push
decl
pushl
clc
cli
sbb
xchg
insb
les
or
or
imul
rolb
adc
mov
inc
cli
ljmp
es
lock
in
clc
js
cmc
nop
push
add
pop
mov
int3
push
mov
in
fidivl
loope
push
adc
mov
jp
ja
test
adc
rorb
mov
out
xchg
push
add
xchg
mov
push
imul
dec
push
pop
test
mov
jl
imul
adc
jae
jmp
jb
lret
rcr
inc
dec
jno
inc
xor
inc
inc
pop
or
xor
xchg
stc
lock
ljmp
and
pop
loop
stc
sub
mov
mov
inc
ss
push
add
idiv
incl
dec
fstl
jo
push
mov
leave
ljmp
loop
ljmp
mov
repnz
orb
lret
mov
nop
xorl
lretw
fcomip
xchg
aas
lret
lcall
sub
out
addr16
inc
fnstsw
mov
pop
icebp
xor
popf
ficomps
loope
sbb
or
shrb
mov
mov
stc
addr16
repnz
sti
subl
mov
mov
jmp
ss
pop
or
aas
mov
dec
in
insb
xchg
mov
fldenv
pushl
pop
iret
frstor
aad
movl
out
insb
xor
and
cltd
pop
xor
aaa
cld
push
sbb
push
pop
cmpsl
add
push
mov
ljmp
fstl
mov
jmp
repnz
jbe
mov
xor
mov
ljmp
pop
dec
inc
leave
rcr
mov
insl
sbb
outsb
icebp
popf
in
inc
xchg
jl
mov
aaa
fistpl
jnp
adc
clc
hlt
cwtl
adc
mov
unpcklps
stc
sub
sub
das
mov
sbb
push
jmp
inc
dec
add
shrb
add
gs
lock
lods
aaa
adc
adc
mov
fwait
insb
testl
pop
inc
in
mov
rcrb
push
fwait
mov
inc
xchg
xor
imul
sub
out
xchg
mov
addb
sub
adc
sub
mov
push
or
push
shlb
ss
popf
loop
push
lock
sbb
jmp
adc
js
or
xor
loop
sbb
mov
jg
push
bound
jl
neg
xor
xchg
aad
push
push
es
lcall
pop
cli
pushf
push
and
aaa
test
xor
xor
inc
dec
jno
lock
ss
incl
push
inc
inc
add
xlat
test
test
push
das
mov
ret
xchg
mov
scas
jge
cmp
or
loop
mov
mov
fidivl
ljmp
xlat
mov
mov
and
lret
mov
jne
pop
sbb
jnp
aas
pop
gs
xchg
insb
cs
decl
fs
test
test
mulb
lods
push
nop
pop
dec
pop
mov
inc
aas
jp
adc
fisttpll
add
leave
mov
lock
int
out
fadds
jne
out
cmp
mov
test
andb
shll
in
ret
decl
lds
imul
lods
mov
sbb
mov
sbb
ret
movsl
std
adc
in
ljmp
mov
add
in
ja
fwait
mov
xlat
jne
rcr
inc
cli
call
stos
push
out
push
push
and
clc
mov
aam
daa
jb
mov
addr16
fidivrs
xor
sbb
imul
xchg
in
adc
lahf
repz
mov
sub
push
hlt
adc
pop
and
dec
cli
dec
andb
aas
fwait
jle
repz
push
stc
push
mov
enter
lds
aad
ss
jns
sti
fcoms
inc
xor
pop
xor
dec
push
fwait
sar
mov
mov
and
push
push
in
clc
pushl
divb
cmp
mov
push
ds
pop
fnstsw
out
dec
push
rorb
cmp
incl
adc
je
lcall
sub
jne
loopne
cli
jp
and
cmp
rorl
cwtl
out
outsb
mov
add
stos
cmpsl
aas
fstpt
fcmovbe
pop
adc
add
push
ljmp
xor
lcall
push
aam
cmpsb
mov
pop
push
add
scas
fdivl
or
into
in
test
fidivrs
insb
xchg
decl
cltd
fsubrs
mov
fwait
out
xchg
xchg
xchg
ret
shrl
lcall
sub
pushf
adc
dec
ficompl
mov
dec
addr16
rcrb
mov
push
xchg
jns
lock
push
cld
incl
repnz
insl
out
rclb
in
das
push
mov
or
addr16
mov
rol
aaa
movsb
xor
mov
or
mov
or
mov
movsb
add
or
or
pop
push
xor
std
or
push
fldcw
jmp
pop
mov
inc
ss
cs
dec
xor
popf
popa
xor
cmp
int
jmp
jno
jbe
pop
xor
adc
lret
add
repz
test
jmp
fistps
rolb
add
pop
mov
sbb
pop
mov
ss
ljmp
adc
xchg
or
cmp
inc
pusha
jbe
pop
pop
cmp
jmp
into
sbb
pavgb
or
call
adc
dec
push
mov
cmp
xchg
lea
jp
arpl
cltd
aad
iret
mul
daa
adcl
in
punpckhbw
fistpll
inc
movb
ficoml
lret
inc
call
and
cwtl
sbb
push
and
insl
push
jp
cld
outsl
xor
or
or
dec
leave
jo
fcomps
mov
sub
and
incl
pop
jbe
mov
push
rclb
or
aam
fsubrs
xchg
sub
and
pushl
mov
nop
and
push
mov
subb
cmpsl
lcall
cli
xorl
ljmp
mov
mov
fcmovne
ret
out
aam
dec
xchg
test
mov
pop
mov
jno
xchg
popa
fistl
inc
jno
xlat
mov
scas
sub
sbb
push
or
ja
stc
mov
incl
std
inc
stos
ds
into
nop
jmp
xor
pop
mov
mov
enter
loop
mov
jmp
hlt
jne
test
nop
cmp
dec
fadd
mov
in
dec
push
add
inc
adc
sub
mov
push
sub
sbb
mov
rclb
mov
add
dec
jb
icebp
jmp
pop
or
cli
bound
lret
aas
push
iret
or
push
movsb
ljmp
jg
mov
shrb
dec
cli
arpl
cwtl
je
cmp
or
int3
xchg
jle
jl
in
adc
ret
call
movsb
push
repz
adc
push
in
or
decl
decl
in
outsb
cld
inc
aam
add
incl
xor
xchg
add
fsubl
and
mov
adc
fildll
pop
in
mov
call
push
dec
daa
push
add
push
jns
add
xchg
sahf
mov
cmpsl
dec
push
scas
push
adc
mov
and
std
shrl
les
nop
mov
pop
movsb
xor
lcall
sub
out
mov
out
daa
cmp
or
arpl
dec
inc
in
int
dec
cmpsb
dec
into
scas
mov
jle
dec
rorb
lret
xchg
testb
pop
add
std
push
ja
jmp
mov
push
lahf
test
aas
adcb
addr16
sub
lahf
mov
jmp
mov
fdivl
mov
ror
or
xchg
push
test
outsb
out
lret
dec
or
pop
ljmp
inc
adc
leave
adc
test
or
mov
scas
scas
cli
cmp
enter
fistpl
scas
out
test
xchg
enter
fisttpll
sbb
mul
inc
fsubrl
in
pop
ljmp
lcall
insb
loope
pop
jg
shlb
sbb
dec
aad
std
es
ljmp
mov
or
rclb
popf
repnz
cwtl
mov
test
aaa
cmp
lret
incl
iret
jecxz
push
or
adc
fs
mov
or
or
je
add
adc
dec
xchg
mov
int
cmpb
lret
inc
mov
mov
iret
inc
mov
jne
adc
cmc
cli
mov
xor
negb
cmp
pushf
mov
in
cmp
mov
data16
lcall
imul
xor
xlat
xchg
nop
inc
repz
shrb
out
add
scas
clc
incl
scas
ja
lods
mov
sbb
jp
incl
mov
xor
cmp
xor
imul
mov
sbb
incl
cmp
mov
out
and
push
nop
pop
adc
gs
jmp
or
mov
pop
outsl
testb
xor
imul
pusha
js
pop
ljmp
add
sbb
adc
imulb
mov
in
xor
pop
xchg
cltd
pushf
imull
mov
and
lds
xchg
fs
out
pop
in
or
insl
sbb
sti
push
or
push
jns
test
adc
nop
lds
dec
addr16
pushl
push
and
daa
fwait
or
jge
and
inc
cmp
stos
pop
outsb
jle
jns
xchg
jg
or
jg
cli
inc
mov
add
adc
mov
mov
pusha
addr16
cmp
pushl
jle
sub
mov
sbb
fildl
leave
fs
aaa
cmp
addl
pop
loopne
pop
sub
mov
fisttpl
lods
outsl
aad
aad
sub
pushl
js
add
in
mov
cmc
and
fiadds
push
sahf
xor
daa
ds
ljmp
clc
jb
std
mov
push
dec
scas
ja
xchg
lods
dec
fdivl
fistpll
aaa
lret
cli
push
sbb
cmc
cmp
mov
out
imul
aad
mov
movsl
inc
jns
out
scas
sarl
xchg
or
add
ljmp
xor
or
and
adcl
sub
inc
push
int3
mov
inc
mov
pop
mov
add
repz
call
loop
fidivs
fcoms
xchg
xchg
jo
bound
pop
pop
push
mov
push
scas
dec
pushl
pop
packssdw
scas
sbb
cltd
aas
and
out
mov
add
ljmp
jmp
pop
push
adc
jbe
ret
mov
fisttpl
test
xlat
inc
dec
cmc
decl
subl
roll
popf
loop
mov
mov
out
and
xchg
imul
inc
das
mov
pop
rcll
pop
rol
test
pop
sub
adc
push
xlat
aam
lret
pop
xchg
loopne
fbld
add
and
std
and
add
call
in
fnstcw
cmpsl
int
pop
lret
and
lret
jbe
mov
ud0
jmp
push
cmpsb
rcll
pop
adc
sbb
mov
mov
mov
fildl
jp
in
arpl
imul
lea
mov
inc
rcr
fildl
movsb
inc
jnp
rorl
or
jg
ror
mov
or
sub
outsl
mov
sbb
movsl
packuswb
pop
ljmp
mov
adc
pop
in
adc
pop
xor
cli
mov
shll
cltd
mov
int3
pop
cmp
outsl
decl
in
nop
mov
repnz
sbb
into
lods
jge
ds
adc
out
pusha
inc
sbb
xor
rorb
pop
dec
std
int
jmp
adc
xchg
sub
jecxz
int3
jnp
fcompl
ljmp
clc
adc
loope
dec
nop
in
and
mov
js
mov
lcall
outsb
fwait
icebp
pop
mov
aam
xor
dec
mov
or
adc
fisttps
pushl
in
jmp
imul
pop
push
sar
jmp
jl
mov
push
jno
sub
and
jae
call
dec
mov
jbe
lods
inc
xchg
daa
daa
mov
inc
ljmp
stos
incl
sbb
fsubs
cmc
aas
movsl
outsb
push
jle
ljmp
rorb
pop
jl
cmpsl
sbb
sub
xchg
sbb
dec
adc
mov
add
bound
insb
xchg
movsb
testl
mov
mov
push
sbb
xchg
sarl
xor
jmp
xor
lcall
xlat
xchg
loope
ja
sbb
inc
outsl
pop
adc
jge
inc
addl
shll
cwtl
aad
out
jle
add
jg
sbbb
int3
int
dec
rep
js
mov
loopne
mov
cli
inc
cmp
xor
idivl
xor
dec
pop
clc
pop
bound
and
sbb
sahf
loop
fistps
ljmp
ja
add
out
fidivrl
fildll
in
repz
inc
jnp
outsl
fidivl
out
js
push
dec
jg
fcomip
mov
inc
orb
inc
aas
inc
je
js
iret
bound
pushl
pop
idivl
cmc
mov
loop
fwait
repnz
cmp
push
xchg
nop
jne
lea
and
ret
push
outsl
daa
cli
test
add
mov
negl
pushl
das
jmp
xor
loopne
rorb
jo
push
xchg
sahf
xchg
imul
dec
xchg
push
sub
jmp
js
inc
sbb
inc
xchg
cld
pop
les
jge
or
dec
arpl
pop
imul
add
or
je
push
mov
lret
ds
add
and
and
mov
popa
adc
pop
xor
and
insl
nop
sub
sbb
xchg
push
mov
dec
je
int
jnp
jp
mov
ljmp
inc
jg
js
incl
je
dec
mov
andl
cs
lret
out
inc
xor
fucomp
jp
push
shll
cmpsb
push
jnp
insb
jg
adc
repz
pop
lret
popf
int
sub
jg
mov
push
int3
cmp
repnz
insl
loop
xlat
push
aam
test
call
inc
sbb
jp
call
dec
push
inc
jb
or
scas
pop
xchg
inc
mov
in
stos
mov
ljmp
mov
add
popa
vunpcklps
mov
sbb
push
into
pop
out
es
mov
fiaddl
sub
pop
bound
fidivl
add
lahf
lods
pop
sar
clc
rcrb
pushl
pop
ficompl
iret
aam
mov
pop
mov
mov
call
adc
adc
mov
insl
pushf
outsb
cmp
add
jno
xor
fldl
ljmp
pop
les
xor
insb
xor
call
sbb
shrl
call
mov
out
fucom
cmp
jmp
sub
lcall
cmp
lea
je
lock
addb
out
inc
add
leave
clc
dec
and
xchg
lds
mov
mov
mov
mov
hlt
jo
ret
mov
push
add
lret
lcall
cmp
adc
aas
xor
push
insb
sub
movsb
xlat
inc
subl
push
add
mov
call
incl
sbb
pusha
xchg
dec
stos
mov
fiadds
test
xor
sbb
incl
int
sub
movsl
sahf
cmp
gs
fwait
sub
adc
jnp
pop
roll
incl
loope
imull
std
sbb
pop
scas
bound
arpl
mov
cmp
mov
rcl
movsb
pop
mov
inc
lret
enter
test
ljmp
lds
jo
jge
cmp
out
mov
add
sub
mov
xor
pop
cmp
addl
pushf
cmpsb
and
ja,pt
mov
pushl
cld
decl
and
int
push
out
pop
mov
add
fcmovu
imul
ljmp
dec
jns
or
sbb
bound
sbb
adc
and
nop
cmc
sub
pushl
adc
push
cmp
adc
mov
imul
mov
fcomip
sti
adc
stos
pop
sub
sbb
or
aas
lcall
clc
jmp
pop
lahf
lds
add
sbb
or
mov
jl
mov
ss
decl
sbb
push
mov
and
cmpsb
mov
and
mov
loope
sbb
call
je
addl
jp
jae
repz
mov
aam
hlt
mov
or
inc
or
sti
xchg
cmp
push
leave
mov
lds
push
dec
std
call
push
xchg
mov
mov
cmp
add
inc
out
loope
test
add
push
in
push
clc
in
cmp
adc
mov
decl
das
push
mov
je
test
xchg
repz
jp
push
int3
inc
mov
cmp
push
push
dec
jmp
out
mov
aam
lods
arpl
daa
and
aad
decl
add
mov
mov
xlat
jbe
and
adc
dec
push
sub
out
mov
ret
push
mov
int3
ljmp
call
out
sbb
push
rclb
sub
hlt
divb
lds
mov
push
sti
jg
cmp
xor
dec
lods
sbb
mov
push
jmp
test
and
add
mov
icebp
bound
ret
test
dec
sub
cmp
and
lret
clc
sub
hlt
cmp
jmp
in
sub
xor
xor
insl
ljmp
in
xor
lcall
and
rorl
and
inc
js
leave
push
push
negb
mov
ss
dec
arpl
in
and
lods
scas
adc
xchg
pushl
std
add
pop
xchg
test
sahf
xor
es
rclb
sub
incb
ret
sbb
repnz
fs
leave
mov
cmpsl
or
dec
arpl
loopne
jmp
clc
rorb
mov
mov
les
or
or
insb
mov
gs
enter
and
jmp
dec
dec
sbbb
mov
jmp
xchg
sub
ja
inc
aaa
adc
ljmp
xchg
in
inc
pop
mov
aas
fidivs
mov
scas
mov
pop
xor
arpl
inc
mov
xchg
pushl
ljmp
or
pop
inc
call
sbb
pop
pop
gs
dec
ret
push
ror
lahf
dec
push
imul
cli
fistps
sub
scas
hlt
das
pop
movsb
nop
mov
xchg
lcall
ljmp
test
icebp
subl
jne
mov
xchg
mov
movsl
inc
movsb
lret
ljmp
cli
sub
pop
pop
and
std
fwait
sar
jge
xor
push
mov
fld
mov
into
gs
out
clc
popf
jb
sahf
jl
add
icebp
mov
iret
out
decl
outsb
fidivl
jno
xlat
cmp
mov
xchg
jge
fnstsw
mov
inc
insl
popa
and
out
fcomip
out
add
ljmp
call
in
mov
jecxz
jmp
inc
je
add
and
cwtl
rcrl
xor
mov
lcall
fsubr
and
and
push
dec
jge
jp
in
sub
jl
jnp
insl
push
loope
call
inc
roll
cli
cs
push
iret
mov
in
test
int3
mov
dec
repnz
lock
and
mov
mov
leave
mov
call
or
jb
adcl
pop
aas
rclb
xchg
and
mov
mov
push
clc
incl
dec
mov
inc
adc
mov
inc
fdivrs
xor
dec
xchg
push
add
hlt
popf
lcall
test
sbb
ljmp
ret
clc
jne
addl
push
mov
int3
push
scas
jae
data16
js
incl
add
leave
mov
xchg
iret
call
jp
lret
xchg
xor
out
std
jg
lds
stc
sbb
rorb
jnp
mov
sbb
cmp
pushl
std
sbb
nop
xlat
cmpsb
cltd
adc
pop
or
dec
jno
frstor
incl
sbb
call
and
add
mov
arpl
sbb
insl
sub
ljmp
popf
inc
mov
or
nop
stos
mov
mov
cmp
jge
push
dec
or
ljmp
jmp
cld
in
lcall
ficomps
cs
cmpb
dec
cltd
icebp
push
aaa
pop
or
pop
cmpsl
aam
fldt
or
les
jae
mov
decl
pop
sbb
pop
mov
icebp
dec
icebp
xor
ficompl
jle
sbb
call
cld
rcrl
xchg
pop
loop
mov
movsb
mov
jae
int
sub
dec
jg
ljmp
cmp
pop
lea
dec
les
dec
cmpsb
cmpsl
sahf
mov
ds
je
outsl
clc
ljmp
dec
scas
and
notl
stc
ja
push
fstl
mov
js
mov
cld
cmp
push
out
popa
push
lahf
stos
das
and
sub
repnz
mov
lock
sti
push
or
sub
int
scas
aam
das
cli
jmp
call
lcall
inc
mov
lods
in
xchg
add
pushl
lods
mov
insb
and
mov
push
fs
dec
ficompl
js
into
push
pop
lock
inc
fsubr
or
clc
jg
inc
aaa
andb
lods
mov
jnp
stos
adc
ss
test
xor
xchg
cmp
inc
sar
sub
pusha
jp
and
popa
sbb
jns
mov
pop
jo
xor
pushl
subl
cmpsl
fldenv
cmp
rcrl
aad
adc
dec
jns
jns
or
fmull
adc
stos
dec
arpl
std
jnp
mov
out
mov
out
push
pop
sub
pop
lcall
adc
rclb
test
jae
lret
mull
insl
inc
jnp
jbe
aaa
stc
in
jg
imul
call
popa
mov
push
push
int3
cwtl
in
outsl
xchg
pop
hlt
lcall
cwtl
je
je
aas
adc
cmp
test
cwtl
mov
call
das
je
fwait
jg
push
cmp
pop
inc
ficoml
mov
xchg
xchg
add
cmp
mov
push
cltd
and
adc
lds
inc
lock
inc
int3
dec
xor
adc
popf
std
cmpsl
popl
mov
sbb
mov
mov
popa
repz
out
mov
cltd
mov
inc
mov
jmp
icebp
ret
stc
sub
mov
push
ljmp
mov
and
pop
lret
jmp
adc
sahf
js
ss
cli
lcall
push
xchg
push
jmp
jg
jmp
fcomip
gs
das
sar
mov
cmp
push
jae
xor
rcr
push
jb
aas
xor
mov
sub
incl
and
jns
movsb
sub
lcall
std
repz
adc
subb
clc
in
out
ds
dec
lcall
xor
decl
xor
mov
jle
rcr
xorb
lahf
mov
cmp
mov
inc
and
cld
stos
cli
add
pop
push
test
cmpsl
push
decl
nop
fldt
xor
or
mov
sub
nop
jo
bound
call
mov
popa
addr16
in
dec
and
and
mov
shrl
sub
lcall
mov
sbb
pop
sub
mov
mov
xchg
xor
dec
or
mov
fadds
daa
rclb
jge
push
stos
adc
mov
push
out
inc
jns
dec
mov
mov
dec
fs
push
jo
mov
dec
std
ret
test
mov
lcall
adc
ss
pop
fisubrs
aad
inc
icebp
and
jecxz
cmp
shlb
into
dec
jno
lcall
adc
mov
or
mov
adc
cmpsl
dec
push
mov
fists
aaa
test
sbb
inc
push
mov
ljmp
mov
idivl
mov
sahf
push
rorb
or
imul
decl
cmpb
leave
movsl
mov
aas
outsb
outsb
aad
cmpsl
movsb
jle
mov
jmp
inc
clc
sti
sbb
idiv
jg
loope
mov
push
iret
push
in
int3
pop
push
cli
lods
aaa
jns
or
scas
jecxz
fcomip
jmp
jb
push
or
cwtl
rcl
xchg
aas
call
jne
movsb
dec
sbb
mov
and
add
scas
int3
std
mov
sbb
jl
push
hlt
push
mov
decb
decl
lcall
dec
dec
bound
lods
ds
test
jmp
add
ret
scas
pop
mov
int3
imul
sbb
imul
lcall
cmpsb
jle
ds
pop
es
mov
pop
clc
fcmovnbe
xlat
daa
dec
pushf
je
sbb
fwait
out
ljmp
stos
out
cmpsb
lock
sub
add
jae
jg
add
lcall
cltd
jl,pt
fistpl
movsl
sub
pushl
cmp
movsb
lds
gs
idivl
pop
xorl
push
and
cltd
xor
cmp
add
loopne
incl
mov
aas
int
mov
sti
cmpsl
loop
scas
nop
push
and
aam
call
inc
jl
loop
cmp
cltd
xchg
ja
or
push
lock
fildll
scas
cli
testb
and
rcrb
sahf
cmp
fisubl
js
xchg
cld
pop
push
mov
pop
outsb
mov
adc
je
out
mov
inc
mov
mov
addl
out
jb
sub
outsb
add
inc
idivl
jno
pop
arpl
mov
int3
or
mov
mov
or
lods
jo
adc
mov
sbb
sub
xor
jmp
sbb
in
push
dec
int
mov
iret
int3
ljmp
std
push
or
and
rorl
stos
insb
lret
mov
daa
mov
decl
test
loop
cmpsb
pop
shll
mov
xchg
mov
lret
xorb
clc
and
mov
test
mov
ljmp
stos
lds
and
test
aam
fnstcw
into
rclb
xor
mov
or
xchg
scas
popa
push
pop
fiaddl
adc
scas
or
in
or
ljmp
adc
push
sbb
scas
pop
bound
push
das
loope
lahf
cs
or
xlat
mov
lcall
fsubr
add
mov
into
test
sarb
mov
mov
ljmp
add
mov
push
and
xor
outsb
stc
pushl
outsl
push
inc
xor
jns
ret
loopne
mov
xorl
mov
mov
out
out
mov
enter
pop
loope
inc
jno
jae
mov
stos
shll
outsb
cli
call
add
out
shlb
push
mov
inc
mov
call
jno
clc
decl
and
mov
hlt
push
sub
ds
and
dec
mov
inc
push
and
andl
outsl
into
dec
push
lea
ficomps
mov
mov
out
lea
lcall
add
dec
cmp
xchg
mov
dec
jg
clc
push
xchg
les
in
les
push
sub
mov
adc
out
out
xchg
loopne
leave
adc
jno
mov
mov
clc
decl
cltd
out
ret
prefetch
adc
lcall
addr16
repz
add
adc
mov
mov
add
stc
int3
cli
push
aaa
ljmp
loop
mov
jmp
inc
dec
sub
xchg
xchg
mov
jmp
push
jp
insb
rcll
fldl
pop
inc
push
or
pop
lret
orb
jle,pn
sbb
dec
ss
outsb
mul
sbb
mov
incl
and
aas
push
in
cmpsb
inc
inc
mov
enter
lea
aad
jmp
loope
pop
inc
in
mov
mov
sub
test
mov
add
in
mov
mov
sbb
ret
out
incl
movsl
cmpsb
pushw
mov
imul
lods
add
jecxz
add
test
iret
adc
add
sub
jecxz
pop
dec
inc
dec
sti
ret
int
lock
sahf
xor
add
shlb
jmp
mov
bound
push
cmpl
aaa
ret
test
stc
pop
xchg
jmp
pop
push
push
jmp
xchg
ljmp
pop
pop
mov
nop
mov
aas
iret
mov
pusha
loop
push
outsl
loop
mov
leave
sarb
sarl
test
push
pop
jnp
jne
cmp
insl
jl
jg
ret
stc
scas
aaa
lea
adc
pushf
inc
jnp
movsb
shll
cmp
sar
adc
movsl
xchg
fnsave
add
test
mov
outsb
jae
out
pop
push
adc
mov
or
jle
neg
sbb
shll
xchg
pop
popa
xor
jmp
push
mov
jnp
jns
lcall
jmp
aaa
test
imul
je
lds
sti
call
sub
pop
or
sbb
adc
in
sub
rcr
addr16
jbe
lret
mov
inc
cmp
ljmp
pop
xor
jp
mov
sahf
push
jle
mov
fisubl
push
sub
cmp
lret
inc
and
push
adcb
cmc
add
add
mov
lods
loopne
push
sbb
push
push
mov
insl
pop
rep
inc
loop
sub
xor
adc
mov
in
mov
in
out
sbb
lcall
and
mov
xchg
mov
pop
aam
mov
popf
jg
and
sub
adc
sub
fbstp
mov
js
sti
mov
lods
sarl
pop
and
test
dec
xchg
incl
fimull
adc
dec
or
xor
out
dec
xchg
shl
out
ficompl
pushl
cld
pop
xchg
scas
mov
mov
mov
inc
adc
and
push
rorb
decb
mov
xchg
cmp
jge
hlt
mov
loope
repnz
negb
movsb
fbld
sarb
jle
push
outsb
in
arpl
push
sbb
stos
cmp
ss
in
out
popf
xor
leave
subb
decl
jle
jbe
mov
mov
cld
in
add
xor
cmp
mov
clc
incl
insl
hlt
or
out
test
sbb
jbe
lret
or
decl
adc
xchg
fsts
lods
outsb
fcoms
push
mov
pushl
jmp
push
dec
push
mov
jecxz
aam
sub
fidivl
add
repnz
fisubl
test
fsubrs
xor
ret
in
mov
sub
subl
push
testl
xchg
xchg
jne
adc
sti
lcall
cmpsb
jno
push
js
mov
sub
mov
sarl
orl
jg
cltd
call
adc
in
jge
push
je
and
push
adc
ljmp
mov
jmp
adc
mov
fs
call
std
ret
pushf
data16
xor
pop
add
xorb
cli
popf
push
ret
xor
inc
lods
cwtl
sar
sbb
push
jnp
rorb
add
push
mov
mov
mulb
fdivrl
mov
lods
sub
and
rclb
decl
in
push
lret
stos
xchg
test
mov
dec
and
jg
mov
loopne
push
mov
inc
pop
pop
test
adc
lods
decl
jae
fisttps
imul
jg
dec
jnp
sbb
push
add
and
insb
xor
nop
hlt
or
popf
faddp
testb
lcall
andw
pop
ja
cmp
mov
push
xor
bound
dec
pushl
jge
int
sar
pop
dec
xchg
push
and
popf
mov
pop
pop
movsb
jae
insl
into
mov
or
fmul
roll
or
pushf
pop
or
dec
jg
call
pop
test
fisubl
ss
inc
mov
pusha
inc
xor
or
mov
mov
pop
nop/reserved
xor
jle
mov
call
add
sbb
in
adc
jns
repnz
jns
ljmp
movsb
xor
cmpsb
jbe
cs
xor
daa
and
shlb
sbb
call
arpl
icebp
or
lea
mov
dec
loopne
ret
decl
lods
cmp
jle
jne
sbb
xchg
xor
pop
mov
daa
push
fs
adc
adc
push
loopne
loop
sbb
decl
inc
fadds
je
jbe
push
lcall
in
ret
sub
jp
call
mov
out
mov
mov
xor
dec
adc
jp
stc
outsb
inc
xor
mov
das
xor
pop
xchg
push
scas
sub
cmc
loope
and
cmp
shll
xchg
fcompl
bound
movsl
cmpl
inc
mov
jg
gs
mov
nop
loopne
push
ja
clc
xchg
pop
shlb
sub
mov
jnp
sbb
leave
jne
call
dec
fiaddl
and
push
imul
inc
push
insb
shlb
test
add
xor
dec
mov
call
add
mov
lahf
cs
mov
push
xchg
testb
add
lods
xchg
dec
xchg
add
add
mov
lock
push
push
mov
jnp
xor
inc
jb
imul
dec
loopne
xor
jne
sub
rcl
adc
mov
popa
ss
jp
add
mov
fsubrs
lock
sbb
add
decl
orl
jne
stos
sub
and
aas
push
std
push
and
popf
adc
int
fmull
out
stc
cltd
cmovp
inc
pop
pop
repnz
mov
lcall
sub
ja
cmp
lea
cmp
ret
jg
jo
nop
in
aad
std
cmp
jmp
push
push
movsb
jb
mov
dec
sub
int3
sbb
repz
popf
jb
mov
imul
ficomps
mov
ss
mov
cld
cltd
mov
leave
jp
add
ret
movsl
imull
xchg
xor
pop
mov
sub
and
dec
mov
out
mov
inc
leave
pop
lcall
test
adc
cwtl
lcall
xor
nop
cld
pop
cltd
or
decl
mov
int3
pop
dec
xchg
jge
inc
adc
sub
arpl
in
add
dec
fwait
das
jp
jmp
into
mov
in
jp
ljmp
hlt
aas
or
bound
incl
sbb
nop
xchg
and
mov
cwtl
enter
and
lcall
insb
in
cltd
mov
imul
dec
cmp
fistps
xor
and
add
aaa
pushf
and
pop
sbb
cmpb
ljmp
jge
inc
call
pop
mov
rclb
stos
mulb
jl
ret
fnstenv
push
aaa
mov
xchg
fists
or
enter
call
pop
add
into
imul
sbb
sbb
ljmp
lcall
stos
xchg
inc
fidivrl
mov
mov
mov
sub
dec
xchg
add
lds
sub
incb
js
xlat
jl
pop
inc
test
jg
clc
fistpl
inc
sbb
xchg
lea
arpl
pushl
aam
dec
sbb
rcl
and
cmp
call
push
inc
shll
decl
xor
jne
push
mov
xchg
push
imul
push
mov
cs
dec
xor
movsl
add
decl
mov
cld
cmp
add
adc
mov
test
fidivl
mov
pushl
in
add
mov
cs
mov
ds
insb
jo
fs
pop
mov
dec
sub
fnstenv
test
fstpt
fs
xor
clc
mov
push
fstl
in
fidivrs
cmp
sub
int3
addr16
mov
jne
int
cli
jno
adc
ljmp
clc
or
ds
fcmovu
lret
lcall
push
jne
add
pop
mov
andl
pop
and
pop
mov
cmp
cmp
jnp
push
sub
lcall
test
mov
xchg
or
aas
outsb
ljmp
add
cwtl
pushf
inc
cmp
sub
hlt
incl
push
add
jle
lods
loop
stos
arpl
pop
in
lods
out
cmp
loope
filds
decl
scas
jo
mov
imul
bound
cmpsb
add
adc
ljmp
xchg
stos
mov
insb
xchg
popa
ret
fidivs
adc
ljmp
popa
fadds
shll
lds
jge
push
stos
and
ljmp
int3
data16
push
lds
cwtl
aam
sbb
gs
mov
scas
ljmp
ljmp
cmp
push
or
push
cli
sbb
jmp
push
jle
push
fstpl
inc
orb
xchg
ja
cltd
fdivl
sbb
pop
insb
test
xor
scas
dec
scas
pushl
scas
mov
sub
andl
jo
and
outsb
fsubs
xchg
adc
and
incl
mov
inc
mov
sbb
dec
popf
adc
cmpsb
cmp
cmp
mov
xor
add
dec
inc
xchg
mov
idiv
dec
fsubl
xchg
ret
jmp
data16
cmp
dec
add
subb
mov
call
std
jmp
xchg
ret
sub
push
test
in
cwtl
sub
ss
ljmp
sub
sub
lds
orb
stos
xor
ja
call
cli
adc
pop
lahf
test
pop
fdivr
stos
cld
outsb
jmp
pop
mov
inc
sub
xchg
sahf
or
mov
outsb
lahf
pushf
dec
xchg
and
jns
jbe
pop
xchg
xor
inc
pop
xor
sbb
mov
cmp
add
add
das
xchg
sbb
out
pop
popf
add
fisttpll
es
out
mov
adc
and
out
out
mov
decb
pop
ror
out
xor
push
bound
xor
adc
movsl
addr16
sbb
pop
mov
loope
ficomps
add
adc
aas
into
nop
repz
jbe
add
dec
jl
je
push
dec
cli
daa
cmp
out
test
outsb
shrb
pop
jle
push
push
dec
add
jmp
outsb
pop
nop
fstpl
shrl
dec
jnp
sbb
adc
mov
xor
and
sub
jae
aas
or
jns
mov
jp
out
xor
clc
ret
and
inc
cltd
add
push
decl
lea
shrb
das
cmp
xor
fwait
dec
cmpsb
lods
stos
xchg
mov
jle
sub
mov
cmp
icebp
xor
cmp
insl
jmp
test
pop
dec
or
push
jno
jp
or
pusha
inc
ja
add
jb
mov
jg
mov
mov
jg
fidivrl
into
inc
fildll
lcall
incb
mov
add
loope
cmp
outsb
leave
xchg
lds
fisttpl
mov
int3
clc
insl
fidivrl
xchg
jmp
call
cld
lret
clc
jp
enter
icebp
jnp
clc
gs
xor
fisubl
lret
add
mov
out
jmp
pop
adc
negb
add
dec
jg
jmp
dec
movsb
pop
add
inc
adc
call
sbb
lcall
aad
int
push
or
adc
mov
scas
lods
xchg
push
test
sar
jg
jnp
push
insl
hlt
mov
xchg
mov
repnz
jns
jle
xor
inc
mov
incl
pop
mov
nop
lea
fwait
xor
aad
xchg
mov
xlat
jns
mov
jmp
scas
repz
jmp
imul
or
cmp
fistpl
sar
decl
xchg
push
pop
sub
jg
or
gs
cmpsl
cmpsb
xor
div
sbb
xchg
sbb
pushl
int3
out
iret
and
movsb
loop
xchg
loopne
cli
mov
cmpsb
jg
sub
incl
mov
mov
ja
mov
iret
rcll
jbe
push
fistpll
je
push
in
enter
push
xor
repnz
inc
sbb
dec
enter
pushl
dec
and
daa
ja
dec
ja
push
jnp
je
mov
cmpsl
shll
fs
testb
jno
jl
mov
pop
sub
sti
nop
sub
push
outsl
pop
sub
icebp
add
enter
pushl
cmp
xchg
ja
icebp
mov
not
lock
cltd
adc
jl
das
xor
jmp
xlat
int3
add
or
loopne
out
cli
out
inc
and
clc
mov
jo
jle
sbb
rcrb
jg
mov
xor
cwtl
call
std
fildl
jmp
xchg
enter
fmull
rol
xor
popf
or
int3
lods
adc
sbb
sub
mov
dec
or
repz
mov
ja
add
loopne
jmp
push
jp
dec
sub
inc
int
pushf
push
pop
sbb
inc
inc
lods
test
adc
aas
xchg
aam
jo
shr
out
cli
flds
addb
mov
push
gs
xlat
push
std
jg
lcall
ljmp
lret
adc
pop
and
adc
mov
mov
lea
dec
jb
or
jp
sbb
jmp
or
sub
jmp
decl
push
jecxz
inc
push
push
pushl
addr16
inc
rcrl
shll
push
dec
sub
add
add
mov
outsl
sub
pop
aam
ja
into
mov
sub
ljmp
cld
fwait
mov
hlt
out
add
hlt
push
ret
sub
addr16
dec
stc
into
pushl
std
pop
movsb
loope
sbb
mov
push
jns
popa
shl
pop
dec
cld
jg
mov
inc
pop
add
into
adc
aad
lahf
sbb
incl
adc
orl
out
xor
or
incl
cld
lea
adc
out
aas
bound
xorb
and
fldenv
outsl
je
and
mov
mov
shl
xor
add
inc
aam
push
stc
mov
jo
cli
push
std
cmp
cmpsb
sahf
pop
lcall
test
adc
jmp
pop
push
xor
pusha
or
lret
rcrl
push
pop
dec
addb
jg
je
pop
and
mov
add
mov
mov
jb
aaa
in
jmp
aad
test
stos
cmp
call
push
cmp
jge
outsl
and
ja
add
cmp
ja
mov
movsb
pop
push
mov
push
mov
cmp
ljmp
lahf
out
and
and
jns
cmp
or
jb
clc
lods
js
jo
add
clc
cmp
add
sti
mov
ret
fcomip
sub
cli
sbb
xchg
popa
push
test
outsl
xor
lock
scas
inc
mov
xlat
and
loope
ja
mov
push
cltd
ja
rcll
pop
sbb
xchg
pop
or
mov
in
in
cmpsb
popf
or
inc
ja
addb
aam
adc
fs
jmp
jmp
clc
jle
dec
or
jmp
push
cmp
adc
dec
loope
cmp
dec
je
decl
mov
xchg
and
jo
and
xchg
and
movsb
shrl
or
sbbb
lock
add
jnp
mov
out
dec
jg
mov
mov
mov
pop
dec
sbb
loope
lods
or
leave
inc
clc
mov
adc
call
sub
cmpsl
pusha
cmp
clc
push
fsubr
mov
gs
push
or
mov
cmc
jmp
pop
cwtl
sbb
out
adc
aas
jae
aam
mov
decl
sub
push
mov
push
leave
aas
cmp
int3
ret
dec
aam
jb
in
jge
faddp
xchg
mov
into
mov
data16
test
scas
inc
decl
jmp
xchg
jns
pop
insl
dec
adc
dec
mov
or
pushl
adc
cwtl
jb
sahf
sbb
aas
insb
stc
xchg
xor
jo
jnp
adc
add
in
cs
or
iret
out
incl
and
and
push
insl
and
jg
scas
fcoml
sbb
and
jp
decl
dec
loope
hlt
mov
or
or
cli
lcall
or
inc
fwait
pop
lock
cs
out
push
mov
cmp
in
in
jbe
pop
lahf
or
or
xchg
sub
aas
push
fiadds
mov
jg
stos
push
bound
inc
inc
movsb
cmpsl
push
dec
leave
scas
mov
sbb
and
incl
push
stos
cld
lahf
jecxz
in
sub
mov
dec
jno
pop
adc
dec
lcall
mov
cmp
pop
hlt
and
pop
stc
xor
mov
cmp
jle
or
jne
js
ds
icebp
ja
call
mov
and
or
je
stos
imul
cmp
jmp
mov
mov
push
push
out
cmp
cs
cltd
and
jno
call
sti
pop
adcl
les
sub
insb
sub
xchg
incl
xor
iret
test
push
pop
outsb
leave
jg
or
inc
mov
add
movsl
xchg
lret
inc
pushf
ds
xchg
test
adc
push
rcrb
add
pushl
stc
pop
pop
sti
jmp
fimuls
roll
outsl
mov
mov
arpl
xchg
adc
ljmp
mov
and
mov
cld
cs
out
aam
roll
pop
jecxz
ret
test
fwait
scas
cli
push
mov
test
out
ss
mov
or
ljmp
faddl
xchg
inc
pop
andb
jecxz
test
and
add
ret
add
dec
cwtl
fdivrs
movsb
lock
sub
in
ljmp
jno
adc
xor
aaa
push
pop
cmp
cmp
movsb
pop
dec
scas
inc
imul
dec
sahf
sub
call
cmp
sbb
push
pop
test
mov
inc
mov
fbstp
dec
xchg
sub
lret
inc
inc
pushl
xchg
repnz
call
lds
sub
cmp
loopne
divb
outsb
mov
add
mov
incl
push
xchg
rol
push
shll
bound
jns
xlat
sarb
movsl
adc
test
call
adc
adc
push
mov
mov
and
scas
int
inc
push
cwtl
pop
adc
leave
cwtl
sbb
fcomip
inc
and
pop
aas
div
popf
lcall
lcall
rorl
pop
ljmp
cli
jmp
fstpt
or
scas
pop
push
je
sub
fdivs
popa
jns
ret
call
cmp
mov
pop
xchg
out
cmc
jnp
fs
mov
sub
mov
jge
mov
xlat
ret
sbb
bound
pusha
pop
cmc
xchg
xchg
shll
add
push
lcall
or
mov
cli
mov
insb
inc
cmpl
jle
adc
mov
aaa
cmp
decl
scas
lds
pop
clc
sub
dec
xchg
fidivl
sbb
inc
icebp
mov
mov
mov
fnsave
lods
lahf
lahf
push
icebp
cmp
pop
loope
cmp
imul
push
cld
mov
out
jmp
out
sbb
xchg
push
push
mov
rorl
mov
cmp
xchg
pop
call
daa
adc
lret
mov
data16
fdivrl
jg
mov
addl
int3
in
mov
xchg
sbb
fwait
std
sti
and
cli
aaa
cld
fcmovne
xor
push
loope
inc
inc
icebp
rclb
ficompl
out
mov
stos
jmp
pop
fcompl
or
cld
push
fadd
jno
jmp
sti
movl
pop
xchg
lods
rorb
sub
push
jne
fs
mov
push
jno
out
stos
and
das
push
cmc
dec
or
xchg
imul
jno
sub
stos
bnd
std
pushl
mov
jne
fisubs
aaa
jo
sub
movsl
cmp
loope
stc
out
pop
call
xor
fxch
iret
dec
lret
out
popa
mov
aaa
jle
push
add
push
imul
mov
mov
jno
cmpsb
addr16
pop
pop
mov
adc
mov
je
inc
iret
mov
adc
out
add
jnp
pop
jp
pop
out
leave
pop
incl
xor
arpl
and
out
push
pop
dec
sbb
and
xchg
jecxz
out
jmp
call
cltd
xor
adc
xor
and
hlt
lods
push
mov
lea
repnz
les
xchg
and
dec
jnp
mov
int
sti
dec
jmp
ljmp
jo
add
outsb
pop
push
mulps
fildll
jecxz
aas
dec
inc
movsl
xchg
and
jmp
test
xchg
jbe
jg
scas
xor
cmp
cli
lahf
xor
push
pop
push
loope
or
inc
clc
out
mov
inc
push
mul
sbb
or
cmp
or
ljmp
testl
test
lahf
xor
push
fsub
add
jecxz
xor
call
hlt
pop
mov
in
daa
loopne
cmp
mov
inc
out
in
inc
or
jbe
cld
aam
mov
fdivs
hlt
outsl
mov
andl
add
mov
jae
jp
lret
push
ja
call
mov
cld
pop
scas
fadd
ljmp
inc
nop
jo
fstpl
fwait
je
sub
cmp
movl
inc
stos
or
jb
sbb
loop
push
add
test
ja
decl
cmc
jl
xor
popf
daa
daa
mov
lods
dec
lret
inc
pushf
cwtl
in
or
or
pop
icebp
inc
adc
push
cmp
pushf
xor
stos
dec
cmp
outsb
xchg
lock
adc
call
sbb
and
push
inc
mov
aaa
pop
and
sbb
push
sbb
pusha
mov
incb
jl
xchg
sub
lea
dec
push
iret
dec
and
inc
daa
or
cmp
in
aas
movsb
and
push
sahf
lds
jno
jae
xchg
inc
cld
in
cltd
lret
js
cmp
add
decl
insb
jno
pop
out
mov
fistps
adc
fs
or
bound
push
mov
cli
jmp
adc
mov
pushf
mov
pop
hlt
out
test
into
arpl
xor
fcom
or
mov
ja
push
push
mov
and
nop
jae
decl
pushl
or
movsl
and
sub
stos
mov
sarl
cmp
testb
mov
out
xor
pop
jp
add
mov
cld
incl
mov
outsb
push
lds
idivl
mov
scas
and
push
popf
cmpsb
mov
dec
test
mov
lcall
pusha
js
cs
mov
or
lret
push
out
fisttps
aam
xchg
mov
clc
xchg
mov
lcall
outsb
adcl
test
movl
pushl
or
iret
mov
xor
push
mov
subps
in
dec
push
mov
add
call
ljmp
and
add
int3
movsl
and
data16
add
loop
xor
ja
jmp
jl
fistps
inc
lods
in
xor
push
lea
push
push
out
cmpsl
and
lcall
cmpsl
cmpsb
bound
je
inc
jle
fcmovne
mov
in
xchg
jecxz
adc
stc
sub
nop
mov
pop
xchg
pop
insb
cmp
adc
mov
negl
add
cmp
ljmp
cli
jb
enter
xlat
add
shrb
ffreep
mov
mov
mov
dec
or
mov
xchg
dec
mov
jge
jo
cld
decl
cmp
es
mov
and
movsl
fs
mov
cmp
jg
mov
aas
call
push
xchg
out
mov
addr16
mov
test
clc
loope
jl
into
dec
xor
sbb
cmpsb
fs
lcall
jecxz
jecxz
ds
jbe
mov
leave
xchg
movsb
adc
dec
mov
dec
shll
dec
xor
ss
or
imul
cltd
inc
add
pushl
xchg
cli
loopne
cmp
dec
stc
ljmp
pusha
pop
or
cmc
dec
mov
xor
mov
pushl
mov
sti
popf
adc
jecxz
es
mov
mov
int
rcrb
sub
cmp
icebp
das
sbb
es
jns
sbb
stos
sub
mov
sahf
inc
mov
incl
pop
mov
jne
inc
sbb
mov
pop
ud1
lods
mov
js
das
mov
repnz
popa
xchg
mov
daa
nop
pop
icebp
mov
push
stos
jne
sub
jge
xchg
xchg
sti
sbb
pushl
add
add
cmp
cmp
push
xor
xor
sub
decl
adc
dec
pop
flds
and
push
mov
lahf
mov
and
pop
mov
or
inc
sub
repnz
push
iret
out
imul
pushf
xorl
call
or
xlat
sahf
je
icebp
lahf
pusha
bound
shlb
test
cmp
xchg
mov
cli
sub
pop
stc
lods
ljmp
jno
lret
add
mov
frstor
repz
xor
nop
lods
repz
xchg
sbb
jmp
arpl
inc
adc
scas
andb
jns
loope
jge
loope
out
cmp
push
cld
decl
lret
pushf
jnp
cmp
sbb
cmc
and
pop
cmpsl
jbe
jg
scas
fcmovbe
sti
xor
xchg
dec
ds
ja
dec
xor
mov
out
sar
lcall
push
sub
sub
bound
cmpsb
jmp
dec
mov
out
push
adc
adc
mov
jecxz
mov
incl
pop
dec
in
imul
rcr
mov
stos
inc
dec
int
pop
stos
mov
pop
lock
cmp
mov
jl
adc
xchg
lcall
or
xor
pop
rcrl
hlt
out
or
std
cld
mov
ret
aas
inc
lret
jno
cmpsl
sbb
lcall
push
pop
push
aad
pop
push
dec
loop
call
lea
xor
jnp
inc
mov
lcall
push
sub
fiaddl
loope
pop
xor
loope
ds
mov
pop
hlt
aad
xor
scas
push
jbe
jo
pop
jmp
push
call
xchg
push
jg
gs
push
nop
fsubr
sbb
mov
push
insb
push
or
and
push
ljmp
inc
fcmovne
xor
mov
jb
orb
mov
lods
test
sbb
incl
movsl
cmpsb
add
pop
pushf
es
add
push
pop
imul
xchg
mov
sbb
ljmp
dec
mov
mov
mov
rorl
arpl
call
push
xchg
xor
pushf
mov
shl
xchg
sbb
lock
aaa
cld
call
jmp
jb
jae
shrl
popa
notl
inc
or
fdivl
ljmp
cli
jge
pop
cli
pusha
pop
sub
inc
mov
cmp
inc
jmp
je
ljmp
decl
jb
jne
xor
call
or
mov
into
mov
pushl
mov
int3
shrb
andl
push
pushf
cmc
jecxz
add
ljmp
and
daa
xchg
loopne
pop
cltd
mov
lret
scas
decl
sbb
inc
cmp
aam
testl
into
aam
sub
ljmp
stos
pop
or
test
in
into
fwait
test
arpl
cwtl
pop
push
push
and
mov
std
and
std
xchg
and
xorl
fcomip
je
add
xlat
lods
dec
cmp
push
lcall
xchg
jl
add
jg
xor
test
pushf
push
movsl
jmp
xchg
mov
popf
push
inc
pop
cmp
ficoml
std
lcall
mov
jge
dec
cmc
or
test
addb
xchg
test
out
inc
xchg
pop
jae
sbb
and
imul
bound
pop
lock
push
jp
out
jo
adc
out
mov
cmpsb
cmpl
ret
adc
cmp
xlat
sbbb
cltd
push
inc
pop
dec
pop
neg
lret
pop
out
dec
popf
daa
add
pushl
add
cmp
dec
mov
lds
xchg
loopne
xor
sahf
jmp
dec
xchg
mov
push
lret
out
mov
out
push
movsb
cwtl
mov
vcvtpd2dqx
inc
jmp
popa
dec
movsl
aas
lods
dec
les
mov
iret
out
mov
fisttpl
mov
jmp
cltd
inc
das
xchg
pop
rcrl
pop
pop
mov
data16
xchg
stos
cmp
xor
xor
scas
cli
adc
push
in
and
pop
testl
cli
push
jmp
pop
mov
rorb
adc
mov
fs
sub
incl
jo
call
addr16
push
jns
inc
cmpsb
mov
or
jg
dec
cltd
mov
idiv
jmp
inc
cmp
xchg
add
hlt
cmp
test
pop
add
std
push
cld
decl
xor
push
jae
fdivr
jg
scas
daa
insl
lret
mov
add
xchg
jge
pop
stos
jecxz
xlat
adc
jp
call
std
rcl
pop
jg
out
cld
bound
sbb
cwtl
cltd
or
aas
cs
jo
stc
jo
add
sub
repnz
dec
arpl
in
jmp
rcrb
nop
inc
inc
aas
pop
sub
nop
je
mov
push
notb
sbb
mov
ror
mov
insb
inc
inc
mov
gs
cltd
out
test
sti
mov
push
div
adc
scas
jne
xor
adc
movsb
xchg
call
add
sbb
mov
call
jmp
fwait
dec
jg
jle
cmp
lret
jbe
or
clc
shrb
pop
hlt
repnz
jb
imul
decl
mov
mov
call
cmp
push
gs
mov
xchg
mov
loop
sbb
and
lcall
dec
cmp
out
cli
inc
jp
xchg
push
cmp
les
cltd
sti
dec
add
je
jl
xchg
cmc
mov
mov
sub
mov
xchg
mov
mov
cmp
ljmp
fwait
fwait
lods
push
jno
rcll
imul
dec
cmp
popa
sub
popf
push
lcall
mov
cs
inc
jae
into
cmp
dec
xchg
or
mov
mov
incl
out
sub
xor
cli
int
cli
mov
int
push
ret
and
jns
jbe
pop
lock
stos
sub
push
leave
cmp
sti
add
ret
imul
lcall
pop
imul
fidivs
lcall
xchg
adc
aaa
xchg
or
les
outsl
dec
mov
loop
or
repz
cmp
mov
iret
aaa
or
lods
es
mov
decl
jmp
xchg
hlt
cltd
jo
testl
pop
mov
repnz
jno
and
inc
lcall
pop
stos
jnp
fildl
insb
clc
xlat
mov
sbb
in
insb
gs
pop
mov
call
loopne
xchg
add
hlt
pop
fidivrl
cld
pop
add
xchg
scas
cwtl
jecxz
dec
dec
cmpb
mov
jae
lahf
xchg
cmp
dec
cmp
or
jo
mov
outsl
loopne
and
sub
arpl
mov
out
and
or
gs
nop
call
cmp
movl
aad
jae
mov
inc
std
cmp
sbb
rorl
jecxz
lret
es
lock
mov
push
cmp
decl
data16
push
aad
movb
and
mov
lcall
xlat
test
xchg
cmp
lcall
sbb
push
lret
push
mov
pop
daa
mov
adc
ljmp
ljmp
cmpsb
into
push
dec
pop
adc
ljmp
fmul
mov
js
sub
das
addb
cltd
repz
add
repz
decl
mov
and
dec
or
push
adc
mov
mov
mov
stos
jae
lahf
ffree
int3
dec
xor
inc
sub
fwait
sub
fdivs
mov
dec
and
incl
repnz
push
int3
lcall
jp
daa
xchg
aad
sub
xchg
lock
mov
mov
lcall
push
bound
in
addr16
push
inc
inc
xchg
cmp
or
or
mov
ljmp
cwtl
mov
popa
lds
mov
add
jge
sub
cmc
stos
testb
dec
adc
ljmp
push
xchg
xchg
insl
cmp
xchg
push
aaa
cmp
cmp
xchg
ja
adc
lahf
aad
jnp
mov
call
adc
xor
out
fucomp
test
incb
sbb
shlb
jle
pop
stos
shlb
xor
popf
xor
loop
adc
mov
ficoms
imul
inc
int
movsb
out
into
out
ljmp
sbb
mov
idiv
pop
push
push
mov
dec
cmp
aas
sub
call
pop
mov
call
jo
xor
inc
push
movsl
xchg
sub
lret
int3
lods
cwtl
lods
sub
fnstsw
dec
popa
cmpsb
jecxz
adc
sbb
vmaxps
repz
fsubs
test
xorl
rep
outsl
in
or
arpl
lret
lcall
stos
cmc
cmc
rorb
adcb
int3
cltd
mov
add
add
cmpsb
sbb
out
jg
pusha
std
adc
sbb
lods
cmp
stc
sti
pop
adc
stc
mov
std
popa
pushf
xor
in
cmp
ljmp
fstp
dec
in
inc
mov
jecxz
call
stc
out
popa
je
out
cli
cmp
mov
cli
pop
mov
mov
lcall
mov
sbb
mov
add
pop
bound
adc
popf
rcll
pop
ljmp
nop
jae
cmp
adc
dec
mov
aaa
inc
cmp
test
cmpsl
fwait
lahf
push
add
icebp
mov
mov
push
loopne
insl
repz
popa
sbb
mov
rclb
outsb
jnp
scas
adc
pop
inc
jge
mov
fdiv
xchg
dec
mov
nop
sbb
lret
icebp
inc
iret
inc
cmp
cs
add
loop
loop
pop
decl
test
dec
mov
pushf
cmp
mov
sub
cltd
div
lods
pop
pop
insl
dec
les
test
lret
jp
das
mov
lahf
div
popa
adc
ret
cmp
sub
les
insl
clc
inc
daa
or
fcomip
ljmp
push
mov
imul
icebp
inc
xchg
das
stos
flds
es
push
and
fwait
das
lds
fdivrl
sti
sbb
jmp
ljmp
mov
pushl
iret
xchg
adc
dec
jno
addb
pusha
ljmp
std
jmp
dec
repnz
loop
imul
cmp
jp
rcll
cli
decl
xchg
ficoms
lcall
lcall
cmp
inc
dec
in
outsl
jbe
add
sti
cmp
aas
mov
jmp
test
dec
xchg
xchg
call
jae
pop
jge
and
into
fcos
ljmp
sbb
xor
xchg
push
jecxz
jmp
inc
test
je
or
incl
push
fbstp
sub
cmp
das
jnp
jg
bound
rcr
xchg
jae
pop
inc
div
sbb
aaa
std
jmp
cld
mov
test
or
cmpsb
stc
js
inc
out
and
mov
call
jg
cmp
push
mov
mov
nop
sub
xchg
popf
pop
aad
pop
xor
fs
cmp
cmp
push
out
mov
lea
mov
pop
xchg
lret
int
pop
orb
mov
incl
dec
or
jle
stos
icebp
outsb
mov
or
xor
mov
call
aaa
scas
add
dec
fstl
mov
ficoml
pop
cld
jecxz
mov
add
jmp
and
rcrb
int3
cmpsb
mov
mov
mov
movsl
push
sbb
ficoml
lret
arpl
sub
stc
daa
inc
daa
sbb
xor
in
ss
pusha
sub
movsb
mov
add
and
stc
cmp
dec
add
mov
repz
mov
imul
dec
fistpl
test
ljmp
push
cmp
fcmovnbe
in
mov
or
or
push
clc
shll
mov
jmp
faddl
aad
and
cld
inc
xor
adc
xchg
fwait
jmp
scas
xor
sub
jg
xlat
sub
pop
jmp
sti
outsb
data16
cli
addl
push
adc
xchg
sbbl
jmp
xchg
jne
mov
sarb
leave
dec
add
dec
call
xchg
adc
enter
out
hlt
aaa
gs
jbe
mov
das
mov
or
loope
scas
mov
insl
jae
hlt
push
inc
adc
ljmp
or
js
out
pop
and
sub
rep
lret
fnstcw
xchg
add
bound
in
xor
dec
out
pop
data16
js
dec
pop
inc
xlat
dec
push
mov
in
fisttpl
xchg
cld
push
fstps
pop
std
jnp
add
adc
jnp
cmp
mov
lret
jnp
in
jns
test
mov
dec
mov
cmp
xor
push
inc
mov
ja
adc
rorl
push
std
sub
sbb
or
nop
jns
aam
xchg
add
incl
jl
or
scas
sbb
dec
aam
and
or
daa
popa
add
mov
leave
imul
ljmp
daa
das
negl
sbb
js
pop
cmp
cmp
cld
push
test
loop
or
jg
inc
xor
inc
cwtl
sahf
fbld
push
orl
jmp
sbb
mov
adc
lret
xchg
xor
rcrl
faddp
or
xor
mov
cld
mov
testl
scas
pop
sub
leave
rolb
imul
xlat
and
mov
cmc
or
subb
test
mov
mov
stc
jns
pop
fists
cmc
jno
movsb
jns
sub
outsl
ljmp
lcall
out
mov
cmp
or
mov
sub
out
ljmp
push
adcl
std
fidivs
shrb
push
mov
cmpsl
cmp
call
jmp
shlb
jnp
mov
add
das
sbb
movsb
je
jp
xchg
call
or
pop
jnp
cmp
xor
sbb
aas
ja
add
inc
xor
jmp
fsubrs
mov
gs
mov
mov
pop
icebp
xlat
jae
mov
stos
xorl
jnp
xor
cmp
mov
repnz
aas
and
ljmp
movsb
dec
orb
pop
or
and
inc
adc
pop
push
out
and
jg
dec
inc
shll
pop
xchg
jno
xor
in
sbb
ds
call
push
dec
cld
clc
rclb
aad
das
in
bound
shll
pop
sub
inc
jo
jge
or
clc
fisttps
popf
rcll
inc
mov
out
pusha
idivl
mov
or
jne
cs
add
adc
int3
add
sub
xchg
dec
cmpsl
into
scas
les
or
jns
or
pop
arpl
outsl
popa
ds
hlt
sti
and
addr16
mov
jmp
xchg
mov
or
es
dec
add
in
icebp
sbbl
jmp
sub
cmp
cmpsl
int
add
mov
mov
sub
decl
pushl
sub
sbb
xor
sub
aad
subl
cmp
push
push
mov
cpuid
into
imul
rclb
or
xorb
rcr
push
mov
add
xchg
sti
xchg
in
shll
fstps
pop
push
data16
pop
das
shl
push
sub
jg
push
pop
xor
js
je
push
pop
sub
push
iret
or
adc
xor
icebp
and
xor
aaa
pop
clc
stos
shrb
iret
cmp
mov
mov
push
pop
xchg
inc
es
out
fbstp
icebp
loope
xchg
cmp
pop
fidivs
cmp
sar
jg
or
sbb
dec
clc
or
popf
jo
ljmp
arpl
cmc
push
imull
dec
scas
lea
add
sub
pop
mov
mov
xor
imul
dec
ds
fidivrs
gs
sub
cld
out
test
je
xchg
fidivs
adc
lcall
dec
clc
ja
add
mov
loope
lcall
inc
push
xchg
mov
dec
adc
pop
test
bound
mov
lret
sub
sbb
xor
xor
in
ja
mov
push
fs
sub
xor
adc
cwtl
mov
fcomip
ja
mov
jbe
xchg
sub
push
aaa
or
aam
and
filds
dec
call
incl
fcmovne
mov
dec
or
xchg
xchg
push
out
push
push
or
imul
repz
fwait
jl
cmpsb
lahf
xor
cmc
sahf
mov
shlb
fst
incl
fcompl
insl
arpl
pop
es
jns
lcall
pop
sti
decl
sbb
and
add
jb
mov
push
cmp
daa
mov
jmp
ljmp
cltd
jne
add
call
cmpsl
ss
pop
sbbl
or
imull
and
ret
repnz
subl
in
mov
testl
mov
filds
adc
sub
outsl
inc
loopne
push
mov
aad
decl
and
add
insb
sub
mov
pop
hlt
cmp
ret
bound
mov
mov
stc
iret
int3
scas
sub
cmpsb
inc
xorb
decl
mov
lret
aas
pop
add
stc
mov
jg
jl
adcl
cmp
or
mov
sbb
sub
pop
and
dec
jb
leave
mov
dec
je
mov
out
cli
cmp
incl
pop
or
lock
xor
cmp
xchg
decl
in
adc
fistl
rcr
mov
int
fnstcw
xchg
inc
cmpsb
stos
pop
push
rorl
add
cli
out
in
xor
push
les
mov
mov
jnp
int
in
lahf
inc
inc
shlb
inc
cli
mov
lahf
mov
test
xor
fstps
aaa
push
xor
push
pop
in
dec
inc
pop
cmpsl
ss
fucomi
adc
push
add
out
stos
stos
pop
dec
cmp
adc
cmp
ljmp
sbb
push
and
cmp
mov
mov
aaa
and
mov
loopne
ljmp
push
sbb
and
mov
sbb
push
sbb
mov
lcall
movd
imul
adc
and
adc
popf
mov
ljmp
fsubrp
out
lahf
or
sub
fbstp
shrb
scas
sbbb
or
incl
inc
out
imulb
dec
nop
cld
mov
sahf
stc
adc
lods
adc
cmp
adc
mov
out
mov
movsb
xor
pusha
xor
mov
nop
push
dec
faddl
mov
in
pop
repnz
mov
aam
lock
xor
sbb
jmp
jg
out
dec
int
mov
aaa
sub
fnsave
add
pop
stos
ret
or
scas
xchg
lcall
sub
or
mov
inc
jno
in
fcoml
cmpsl
xor
mov
arpl
inc
decl
div
sbb
mov
inc
filds
pop
data16
sbb
add
xchg
inc
movsb
fcomip
jg
fisubs
cmpl
push
sti
into
in
bound
test
and
imul
and
sbb
sbbb
jae
movsl
lock
scas
jbe
add
ljmp
mov
push
jle
mov
xchg
mov
stos
hlt
and
xlat
push
decl
outsl
adc
inc
sbbb
out
jmp
je
movsb
push
test
mov
inc
std
ljmp
jnp
and
scas
mov
cli
and
test
outsl
clc
incl
mov
jno
sub
lret
nop
mov
mov
in
cli
stos
mov
bound
xchg
xchg
ret
mov
out
decl
in
fstps
movsb
cwtl
repz
inc
sbb
fwait
dec
and
sahf
cmpb
dec
and
xchg
mov
lods
out
sub
xor
pop
nop
jns
sub
inc
je
adc
mov
push
push
sub
mov
xor
pop
cmc
ljmp
fldcw
aam
cli
mov
push
mov
sbb
pop
dec
cmpl
icebp
mov
dec
movsl
sub
add
or
mov
xchg
in
mov
fidivrs
ja
ljmp
out
in
lret
aaa
arpl
pusha
addb
push
mov
inc
call
call
shr
imul
or
mov
push
stos
mov
jg
incb
cmp
cmp
sbb
inc
mov
leave
scas
add
dec
add
push
or
ja
jp
test
imul
mov
xor
jnp
push
fldenv
call
and
push
sbb
and
push
jmp
cs
in
push
lret
dec
popa
push
cmp
push
push
mov
cli
or
into
jbe
inc
cmp
incl
xchg
pop
mov
pop
xor
cmp
aaa
fidivs
add
mov
cmp
movsb
push
jns
pop
lock
call
roll
shlb
leave
ficoms
pop
addr16
fidivl
sbb
decl
mov
call
jp
xchg
addr16
aas
pop
call
mov
mov
ds
rol
mov
nop
dec
lret
sub
mov
inc
and
and
int3
pop
inc
and
sbb
stc
xorb
mov
mov
incl
sub
cli
xor
push
rclb
inc
push
sub
pop
sbb
iret
int
xchg
out
xor
incl
popa
sub
mov
into
daa
push
mov
xchg
in
ja
cmp
sub
fsubrs
xchg
adc
cmc
jne
or
adc
imul
or
out
jnp
jl
dec
movsl
mov
inc
cmp
xchg
pushf
push
add
inc
inc
sub
stos
cmp
stc
cmp
dec
inc
insb
mov
rcrb
cmp
xchg
cmp
ja
dec
jo
mov
clc
pop
sub
sbb
mov
out
nop
decl
gs
ljmp
jo
enter
pop
int3
xlat
popa
iret
inc
dec
mov
andb
and
pushl
inc
pop
xchg
aas
add
push
aam
nop
push
ja
jle
cltd
inc
clc
fiaddl
leavew
jg
incl
les
mov
mov
mov
and
dec
and
xchg
ljmp
xlat
scas
push
stos
push
add
ficomps
fstps
sbb
dec
ss
lock
test
into
insb
and
orl
xchg
xlat
inc
inc
xchg
ds
cmp
inc
popf
mov
scas
jecxz
cmp
iret
add
ljmp
addr16
cs
ljmp
mov
dec
lret
in
loopne
mov
xchg
jnp
mov
jmp
mov
repz
sub
push
dec
je
add
rcrl
push
cmp
enter
ljmp
cmp
mov
push
stc
maskmovq
iret
rolb
or
adc
ljmp
in
dec
push
xchg
scas
into
clc
test
pop
add
mov
aas
divl
aas
cmp
push
dec
adc
adc
push
negb
push
jecxz
or
mov
repnz
push
rcll
out
sbb
add
stos
or
add
pop
daa
cmp
lods
adc
sahf
test
decl
xor
sbb
mov
adc
jo
and
sub
fstpt
mov
xchg
test
mov
incl
inc
adc
jmp
in
xchg
fstpt
xrelease
inc
mov
cmc
jle
cmp
sub
push
les
ret
int3
sub
ret
incl
outsb
pop
loop
lcall
dec
lret
lds
pop
fsubrs
mov
jp
pushf
mov
push
inc
lahf
lahf
fiadds
or
repnz
test
cmp
test
call
jle
push
fisubrs
cmp
dec
sbb
jne
lret
dec
push
cld
jne
cmp
clc
lcall
cmp
ret
jo
sbb
dec
aas
inc
sub
icebp
mov
into
jno
jmp
push
cmp
and
add
push
mov
add
cmp
mov
out
and
out
cmp
push
test
adc
pop
gs
call
pop
test
or
sub
mov
out
push
jle
mov
lcall
adc
fldl
das
sub
mov
mov
hlt
leave
in
jno
mov
jo
push
and
decl
jecxz
faddl
shlb
fiadds
xor
fs
or
inc
leave
lcall
adc
test
test
adc
push
xor
xlat
dec
popf
mulb
sar
rorl
jmp
je
push
push
lcall
cltd
adc
fistps
cli
jmp
je
stos
jmp
xchg
pop
ljmp
cltd
or
adc
add
add
lcall
sti
mov
inc
jns
mov
fs
mov
xchg
lds
xchg
pop
std
comiss
imul
std
aaa
pop
fsubs
fcompl
inc
ljmp
inc
clc
or
dec
ljmp
outsl
mov
lods
loop
rol
mov
sbb
pop
jne
in
add
jns
shrb
pushl
jge
push
insl
xchg
popa
movsb
inc
and
mov
decb
pop
mov
gs
incl
cld
inc
adc
push
cmpsl
cmpsl
jp
or
push
and
decl
cmp
std
and
daa
movsb
adc
inc
push
out
inc
fiaddl
cs
rclb
movb
cmpsl
ljmp
and
jl
push
mov
dec
mov
pushf
cli
rcrb
fldl
pop
xor
es
jge
dec
aad
fistpll
sub
lret
in
inc
popa
or
jbe
jmp
andb
dec
cmp
mov
push
cmc
test
hlt
cmp
scas
arpl
mov
pop
gs
popf
push
push
stos
sub
mov
call
and
sbbl
movsb
add
dec
push
ret
int
les
rolb
jae
pop
jle
jne
sbb
ret
xchg
ljmp
push
push
imul
arpl
rcll
fisubl
mov
mov
ljmp
test
xchg
std
pop
push
dec
sub
int3
sti
mov
incl
outsb
aad
dec
cli
add
and
repnz
mov
dec
fsubrs
dec
decl
das
fstl
push
push
jmp
inc
mov
lret
pop
lcall
in
jecxz
lock
mov
xor
dec
jp
or
arpl
imul
in
sub
decl
fsubp
xor
mov
shlb
stos
jle
scas
fwait
into
ss
in
pop
adc
or
mov
hlt
clc
ja
add
iret
notl
xchg
inc
in
jns
cmp
ss
repnz
jmp
and
out
mov
addb
lods
push
pop
shll
dec
ja
mov
mov
clc
lods
sti
jbe
cmp
dec
fs
inc
mov
in
sub
fistpl
xchg
pop
incl
daa
jp
frstor
cmc
imul
outsb
cmp
sub
sub
fstps
fmull
jmp
adc
roll
adc
movsl
lods
dec
push
sub
rcll
out
pop
movsb
ss
aad
jge
jg
xor
inc
jg
push
xchg
push
mov
sbb
lahf
movsl
call
lea
xor
jne
popf
dec
push
xchg
push
ds
fldcw
nop
pop
ljmp
or
xchg
nop
adc
addb
into
xchg
push
call
fstps
iret
stos
mov
cmp
xchg
sbbl
pop
ds
pop
movsl
jle
jp
data16
mov
dec
ja
xchg
cltd
test
out
mov
inc
fwait
sub
xchg
popf
mov
ret
nop
push
pop
rolb
push
es
call
or
mov
push
jl
stos
xlat
and
mov
push
jp
test
pop
sub
mov
loop
sbb
jns
repz
push
and
lock
pushl
cmp
or
and
pop
mov
mov
and
call
jl
cs
pop
mov
and
mov
jp
sbb
fildl
jne
mov
std
rcl
imul
je
jno
push
cmc
lahf
sbb
popa
xchg
inc
push
and
jmp
jecxz
add
daa
jns
repz
mov
test
or
lds
outsb
add
call
lea
cmp
xor
push
es
pop
loope
insl
xor
pop
lods
cmpsl
ljmp
cmp
test
out
aad
adc
ret
dec
lds
imull
cmc
sahf
call
xchg
mov
xorl
pop
sarb
cmc
xchg
jns
adc
xor
ja
clc
cmp
inc
add
push
lds
sahf
decl
dec
cmp
and
loopne
sbb
pop
mov
imul
mov
inc
or
data16
lahf
movsl
pusha
test
decl
mov
or
cmp
adc
jge
push
jmp
lcall
mov
and
adc
push
or
add
push
cmpsb
and
ljmp
jp
out
xchg
xorl
bound
jecxz
hlt
cmc
jno
lods
cli
rorb
test
mov
adc
bound
pop
xchg
mov
cli
ja
lret
dec
inc
xchg
decl
out
mov
cmpsb
sbb
cltd
mov
cmp
out
clc
mov
popa
incl
push
outsl
xchg
in
xchg
sub
sbb
jns
pop
mov
rolb
xchg
icebp
inc
loope
call
into
decl
dec
movsl
jbe
test
pop
bound
or
jno
scas
aam
or
jl
or
mov
call
incl
rolb
xchg
lock
cmp
call
mov
push
gs
mov
pop
inc
fsts
and
sti
sbb
repz
std
sbb
and
mov
out
mov
cmc
loop
adc
pop
dec
data16
fwait
add
add
popa
push
lock
dec
push
jl
jmp
xor
add
fwait
push
lret
mov
cwtl
jge
in
movsb
test
mov
or
jmp
cmc
test
push
loope
jg
lods
cmp
xchg
mov
pop
int3
pushl
mov
call
xchg
sub
mov
test
mov
loope
inc
mov
lcall
sub
mov
inc
sti
dec
test
xlat
hlt
xlat
and
orl
decl
adc
andnps
out
sub
jl
sbb
push
insb
rcrl
sbb
jmp
ret
jle
aam
je
in
fimull
inc
pop
loopne
xorb
or
rcll
lcall
call
xor
adc
sbb
cmpsb
pop
mov
mov
mov
test
mov
and
dec
out
cmp
idiv
ljmp
pop
add
arpl
lods
mov
inc
pop
mov
insl
mov
fimull
xchg
sbb
cli
orl
mov
pushf
jmp
scas
and
dec
mov
out
xchg
shll
push
dec
mov
or
push
cmp
xor
decl
test
pop
pop
mov
imul
push
mov
sub
nop
sbb
push
push
jmp
test
adc
xor
cmp
cmp
mov
mov
das
cmpsb
cmc
adc
fcoml
idivb
divl
or
js
xchg
mov
out
pop
push
adc
aaa
shlb
mov
sub
incl
mov
insl
xchg
leave
inc
adc
js
push
xchg
sbb
cmp
xor
incl
decb
or
push
inc
hlt
inc
or
dec
sbb
jg
decl
clc
sub
mov
int
push
cmp
bound
shll
mov
imul
lret
ret
ret
shl
popf
xchg
jge
fnstcw
cli
lcall
xor
push
sbb
sbb
jp
lock
movl
jae
pushl
dec
pop
ret
stos
sbb
push
data16
jo
lods
or
cmc
decl
pop
dec
cmp
inc
jae
addr16
push
xchg
ja
mov
decl
sbb
es
test
sub
xchg
aad
mov
jmp
dec
mov
xchg
stc
jbe
mov
inc
sahf
stos
ss
cmp
lcall
mov
lcall
je
in
andl
loop
aas
pop
pop
mov
sub
jecxz
sub
scas
cmp
fwait
outsb
xchg
call
mov
popf
fistpll
sbb
jbe
js
int
mov
sub
stc
lea
mov
movsb
add
incl
js
cltd
push
push
data16
lcall
jle
incl
aaa
scas
ret
mov
xlat
inc
sbb
mov
cld
idivb
xor
xchg
lret
or
sub
mov
mov
notb
push
repnz
loop
test
lcall
xchg
int3
pop
jp
mov
mov
lea
push
insl
ljmp
call
mov
out
or
icebp
pop
lret
pop
push
mov
lret
sub
mov
mov
push
dec
cli
jecxz
xchg
sarb
enter
jmp
cmpsb
lcall
in
mov
pop
icebp
bswap
sbb
mov
jb
mov
shrb
sbb
jg
sub
lods
test
fcom
mov
mov
xchg
add
orl
and
ljmp
jnp
data16
faddl
pop
xchg
pop
call
xor
loope
clc
out
lods
lret
adc
lret
ljmp
sbb
das
dec
add
pop
lock
hlt
les
jecxz
jbe
popa
mov
add
fcomp
movsb
inc
adc
mov
xchg
xor
inc
push
sub
mov
decl
add
sbb
sub
xor
fmull
xor
imul
scas
lods
cmpsl
mov
fcoml
lds
clc
aaa
pop
in
call
add
cld
jg
pushl
incl
out
and
daa
adcb
push
stc
arpl
lods
in
test
call
cmpl
int
cs
in
stos
pop
aam
sbb
dec
bound
adc
lcall
jp
fsubp
fstps
fidivs
jns
mov
call
pop
lods
sbb
adc
mov
mov
xchg
outsb
inc
xchg
pop
mov
stc
sub
dec
xchg
pop
cmpsl
or
int3
lret
inc
adcl
jl
int3
pushf
sbb
clc
decl
xchg
pop
cmp
xchg
mov
outsb
mov
movsb
xor
xchg
incl
sahf
jle
sahf
out
cli
push
pop
inc
pop
rcrb
and
jg
jg
pushl
cmp
jb
jmp
mov
inc
iret
movsl
dec
jns
ljmp
mov
std
add
mov
sub
sub
addr16
cwtl
mov
sbb
mov
testl
outsb
and
cmp
hlt
dec
scas
push
ss
out
jmp
in
xchg
jnp
xchg
mov
mov
stc
xor
mov
push
shrb
hlt
test
mov
mov
pop
jno
lods
ljmp
cmp
mov
fcomip
xchg
sub
mov
cwtl
loopne
mov
sub
repnz
addr16
mov
cmp
pop
aad
fisttpll
fstpl
mov
mov
or
xchg
jmp
lahf
xor
in
jns
sub
insb
fwait
cmp
outsb
lods
xchg
repnz
loope
push
in
call
mov
mov
mov
jmp
xor
mov
pop
xchg
lcall
incl
addr16
fcmovnbe
jns
push
pop
or
enter
sarl
inc
icebp
jle
sub
decl
leave
std
das
out
rcll
mov
inc
push
pushl
dec
add
dec
pop
pop
loopne
mov
repz
cmp
mov
out
xor
call
out
pushf
std
adc
add
sub
and
xchg
out
stos
mov
nop
loop
lcall
dec
dec
cmc
push
mov
jbe
aad
fnstsw
mov
xorl
cwtl
jno
xor
sahf
cwtl
mov
pop
test
push
ljmp
push
fwait
lods
adc
and
pop
loop
cwtl
cmp
push
lcall
mov
pop
popf
jp
popa
fsub
fs
inc
jmp
stos
fcomp
into
mov
add
cmp
dec
lds
call
insl
ret
xor
mov
divb
lock
fcompl
inc
cmp
mov
ljmp
out
popf
xchg
pop
dec
sbb
inc
xor
jae
aaa
jb
push
incl
add
pushf
cmpsb
jns
adc
cmp
in
xlat
dec
push
stos
sarb
ja
clc
jge
rorl
mov
lahf
stos
stos
mov
test
int
dec
mov
cmpsl
xor
les
cmp
test
mov
xor
scas
fwait
inc
or
call
pop
or
aas
mov
test
or
mov
fnsave
aam
inc
lahf
lcall
lcall
adc
add
adc
and
rorb
or
cmc
push
incb
fadds
in
imul
js
push
dec
shl
mov
mov
call
lcall
aam
jno
mov
jecxz
mov
test
jnp
out
call
in
bound
dec
push
xchg
pusha
loop
nop
jno
mov
adc
decl
rcll
xor
dec
pop
jmp
int
adc
xchg
sbb
les
test
adc
loope
xor
jl
out
aad
andl
rcrl
sbb
int
push
xchg
sub
push
lcall
push
decl
xor
inc
mov
movsl
mov
jnp
repz
addr16
pushl
or
jl
icebp
push
lods
jge
inc
adc
push
push
das
stos
cmp
jmp
dec
out
loope
push
je
sbb
jecxz
inc
subb
cs
incl
loop
add
inc
adc
int
cld
jge
inc
mov
xchg
out
push
jae
test
add
adc
rcrb
adc
pushf
xchg
fmuls
pushl
sldt
les
pushf
dec
adc
and
cmp
or
scas
or
mov
ljmp
pop
rclb
je
cli
xor
jle
pop
bswap
aas
cmc
movsl
mov
add
and
mov
in
jmp
dec
pop
hlt
cmp
jne
jns
or
into
cli
scas
faddl
mov
test
mov
int3
fbld
mov
mov
iret
push
gs
decl
bound
loope
test
cltd
mov
test
pop
fisttpll
jmp
ljmp
jg
mov
xchg
mov
mov
rcrb
mov
test
mov
push
ret
aaa
mov
outsl
rol
sub
lea
xor
mov
jmp
mov
lea
js
add
imul
dec
sub
push
lods
lcall
inc
jp
xchg
mov
fwait
inc
rcll
sub
add
add
mov
cmp
js
push
pop
std
dec
mov
outsb
ljmp
push
mov
loopne
loop
iret
test
mov
cmp
xor
and
and
ret
inc
add
daa
movsb
pop
icebp
decl
jns
xchg
xor
jl
lock
call
in
daa
cli
in
inc
out
sub
or
hlt
clc
outsl
test
clc
cld
jne
inc
or
cmp
call
pop
out
out
js
dec
notl
roll
cmp
mov
xchg
notb
add
or
outsb
std
loope
pop
mov
cmp
cmpsl
lret
lcall
shl
rorl
sar
repnz
test
and
dec
sub
in
push
ss
dec
je
jle
testb
push
repz
sub
lret
mov
cmc
call
pushf
push
insl
mov
repnz
arpl
sbb
scas
xchg
xchg
pushf
sahf
stos
jb
jbe
es
decl
xchg
test
or
ret
mov
adc
cmpsb
mov
sbb
inc
cmpsb
mov
mov
and
mov
push
xchg
pop
sub
adc
lret
lahf
push
adc
push
inc
cmp
inc
rorb
adc
or
jo
fildl
jp
push
out
mov
lcall
stos
xchg
sbbb
lds
dec
mov
shrl
shlb
nop
insb
and
mov
fcmovbe
dec
cmc
inc
pop
popf
sub
lds
push
push
pop
cmp
sti
and
and
cmpsl
ficoml
aaa
xchg
xchg
sbb
mov
jne
jp
sbb
pcmpeqw
jno
fists
mov
call
int
inc
push
arpl
sbb
cmp
mov
pop
and
ljmp
cli
das
sbb
fcmovnb
dec
mov
add
rcrl
cmp
lcall
add
test
ljmp
adc
stos
cmpsb
pop
sbb
lods
repnz
ret
xchg
push
popf
sub
inc
push
popa
sub
sti
inc
scas
fcomps
lods
ficoms
fisubrs
xchg
or
push
les
mov
mov
ljmp
xor
push
xchg
and
insl
lds
ja
and
paddd
je
adcb
jmp
fiadds
and
sbbl
jnp
in
aas
incl
incl
jp
mov
movsb
stos
cmp
sbb
mov
shll
call
mov
cmp
mov
js
and
xchg
xor
lret
xchg
insb
dec
icebp
call
jle
sbb
adc
push
mov
adc
inc
sbb
mov
jg
pop
xor
xchg
xor
add
hlt
xchg
popw
testl
pop
xchg
lcall
decl
js
lcall
pop
jecxz
arpl
cmp
pushf
fildll
pushl
xchg
sub
xchg
es
loop
cmp
popa
inc
je
inc
xor
jo
outsb
cmp
cltd
jge
pushl
std
jp
ret
aam
cmpsl
sub
lcall
xor
fsubrs
xchg
stc
pop
jl
sub
jmp
loopne
shr
jo
xor
pop
cs
mov
jns
xor
incl
sbb
out
cmp
dec
xchg
rolb
stos
dec
cmc
push
xchg
in
dec
out
cli
pushl
jmp
out
clc
lret
in
movsl
mov
or
dec
push
aam
fcmovne
dec
and
mov
stos
insl
hlt
jle
mov
fmul
xchg
pop
cmp
mov
mov
push
test
in
ljmp
xchg
xchg
dec
and
adc
sub
loop
pop
jle
mov
mov
or
fcomps
lcall
iret
add
aad
or
xchg
repnz
inc
ja
data16
jne
lods
gs
push
mov
decl
repnz
pop
data16
stos
shlb
mov
mov
pop
cmpsb
mov
jbe
lds
cld
test
cmp
ds
add
jno
pusha
fbstp
push
xchg
daa
cmp
enter
out
test
sub
xchg
loop
test
mov
cwtl
jmp
repz
hlt
jp
incl
adc
xchg
jbe
jge
adcb
scas
out
call
pop
popf
fnsave
shll
or
sub
xchg
jae
xlat
test
loope,pn
inc
lcall
ficompl
js
add
lcall
fistpll
lea
mov
mov
add
subl
or
cmpsb
xor
push
jb
push
dec
stos
mov
fwait
ljmp
or
loopne
aam
cltd
adc
adc
es
fcoms
mov
cmp
cmp
jo
sub
into
xchg
imul
mov
jnp
sub
idivb
lcall
mov
add
cmp
lods
addl
pop
das
int3
out
push
inc
dec
pushl
jl
aaa
cmp
push
cmpsl
test
andb
fistl
orl
push
pop
inc
mov
aaa
icebp
nop
pop
sub
add
sbb
add
shll
lds
dec
loop
decl
lock
ljmp
ret
in
mov
xor
jmp
rcrb
dec
sbb
push
push
lock
hlt
cmp
int
pop
sub
idiv
jg
mov
pusha
test
ja
sub
enter
mov
mov
into
dec
inc
jno
int3
pushf
outsb
adc
inc
mov
fists
add
incl
cld
lcall
cltd
hlt
testl
cmp
cmpsl
push
push
in
lcall
jmp
out
mov
push
xchg
mov
push
cmp
inc
sub
cld
lods
push
rcr
fisubrl
pop
lods
inc
sbb
dec
xor
push
and
push
xlat
cli
out
clc
and
outsb
addr16
ss
lds
int
mov
cld
pop
inc
loopne
sub
jo
and
mov
adc
adc
jmp
push
addr16
in
lcall
nop
insl
mov
mov
push
mov
ret
ror
repz
sub
lods
repnz
clc
xor
lock
ljmp
cwtl
shlb
idivb
ret
fadds
lods
out
aam
pop
pop
inc
in
loope
push
repz
dec
mov
outsl
idiv
inc
sahf
imul
or
out
xlat
test
xor
dec
cmpsb
cltd
push
mov
jg
jnp
mulb
inc
shlb
cltd
add
mov
cmp
mov
scas
cli
adc
lods
mov
dec
nop
iret
mov
xor
rorb
push
aam
les
into
mov
out
addb
adc
clc
and
repnz
sbb
cmp
xor
pushf
ss
out
cmp
out
xchg
cmpb
adc
insl
add
xor
test
cs
xchg
ret
int
dec
push
lods
hlt
cwtl
pop
mov
adcb
and
imul
ret
mov
sahf
pusha
push
loope
and
imul
cltd
cs
icebp
stc
push
pop
cmp
call
insw
dec
dec
shlb
ret
scas
imul
pop
mov
in
divl
jmp
dec
xchg
pop
lret
pushf
xor
cltd
das
jb
fiaddl
cmp
in
cmp
std
incl
mulb
dec
mov
lret
test
test
lea
sub
push
jne
or
call
loope
fnstenv
mov
out
incb
sbbl
lret
cmpsb
jae
scas
out
dec
bound
rcll
mov
subl
inc
clc
jl
test
mov
pop
push
cmp
adc
incl
or
pushf
xchg
xchg
and
mov
addl
dec
xchg
mov
adc
mov
push
mov
in
outsl
mov
mov
add
sub
and
sbb
lret
xor
sbb
push
mov
cmp
ror
rcr
jg
push
shrb
arpl
dec
xchg
jecxz
pop
aam
daa
mov
xchg
jmp
push
call
pop
mov
andl
daa
outsb
pushf
pop
xchg
or
das
mov
xchg
adc
fs
ljmp
mov
mov
lret
add
dec
ja
cmc
or
mov
mov
add
popa
push
das
add
adc
ffreep
out
insb
mov
push
dec
fdivrp
xchg
scas
jg
inc
pop
sbb
mov
and
call
in
loope
lods
in
gs
inc
loopne
dec
and
sbb
cmp
mov
test
mov
fstpl
aam
dec
ljmp
cs
imulb
outsb
xchg
pushf
cld
push
lds
sti
insl
hlt
gs
aaa
ret
cli
call
sbb
imul
xlat
sar
sti
inc
push
out
adc
out
xchg
cmp
sbb
mov
ljmp
in
inc
rclb
fcomps
das
in
adc
mov
dec
xlat
xchg
sbb
add
and
test
pop
inc
decb
sahf
or
xchg
jecxz
inc
xchg
push
scas
scas
xchg
xchg
orb
jne
ljmp
sub
jb
sbb
pushf
fsubr
push
mov
call
or
xlat
sbb
pop
in
imul
ja
fiaddl
or
test
lcall
ljmp
pop
out
je
stos
jecxz
cld
mov
pop
fs
lcall
in
pop
lods
dec
jge
and
inc
sti
cwtl
ret
test
test
sbb
es
push
inc
lcall
call
mov
neg
data16
repz
inc
pushf
popf
pop
or
outsl
xor
ljmp
and
es
mov
pop
push
pop
adc
call
fcompl
adc
inc
pop
xor
test
pop
cmpsb
test
xchg
movsb
sub
jg
insl
cs
push
jne,pn
fs
add
fsubrl
mov
test
fdivrl
cld
jmp
and
incl
aam
lods
dec
add
fidivrl
mov
xorl
add
in
push
lcall
or
and
shl
add
enter
pop
lret
cmp
mov
mov
dec
fimull
test
movsb
loopne
and
loope
jb
sbb
mov
ljmp
and
ds
and
imul
shlb
cwtl
sub
push
dec
decl
jae
and
stos
push
cmp
pop
sbb
and
cmc
lcall
cmc
dec
fs
mulb
icebp
push
and
int
sub
push
jb
xchg
iret
jg
fbld
sub
test
mov
rorb
mov
mov
sbb
push
pop
cltd
imul
in
je
fdivs
int
adc
ficomps
jmp
test
jl
push
dec
sub
pusha
push
or
mov
lahf
shlb
popa
cmp
out
lahf
fstpl
bound
cmpsb
call
je
mov
loopne
loopne
add
adc
dec
scas
inc
mov
or
or
xchg
stos
pushf
xlat
push
mov
insb
jmp
jp
inc
test
lcall
xor
mov
xchg
cmpsb
push
add
pusha
out
int3
mov
cmp
sbb
xchg
sub
pop
and
fists
in
jno
cmp
add
jecxz
add
mov
dec
xchg
pop
mov
sub
jmp
mov
incl
out
push
das
xor
add
loopne
mov
cld
inc
push
jg
call
mov
lock
sahf
xchg
pop
in
ret
jg
mov
hlt
mov
mov
jecxz
push
ret
pop
dec
cmp
and
decl
xchg
call
repz
and
into
dec
arpl
mov
movsb
mov
incl
jae
out
out
cmpsb
cltd
ljmp
mov
popa
sub
push
add
push
and
mov
cmc
cli
sbb
incb
adc
cmp
and
and
lcall
push
insl
xchg
dec
mov
ficompl
shll
pop
jno
les
or
mov
fcoms
inc
pushl
xchg
sub
fadd
repnz
sbb
pop
into
lock
mov
xchg
lcall
cmp
shrb
sbb
test
lcall
ss
lcall
test
jbe
jle
pop
cli
push
adc
and
jmp
in
adc
sub
test
add
sarb
adc
lods
repnz
sbb
loopne
sar
xchg
mov
std
push
or
pushf
leave
xchg
inc
test
in
repz
cs
push
popa
cmc
cmpl
scas
popf
mov
add
sub
mov
mov
jmp
ljmp
xchg
fsubl
mov
xchg
mov
sbb
leave
push
popa
flds
add
fdivr
adc
lock
xor
pop
sbb
jge
int
sbb
fadd
cmp
push
loope
xchg
je
jmp
jmpw
mov
loop
jo
add
cmpb
adc
pusha
pop
int3
sub
adc
ljmp
aas
and
scas
push
cli
sub
into
jecxz
mov
ret
cmp
xchg
dec
bound
mov
out
out
int
add
lcall
xor
mov
inc
in
jmp
mov
mov
pop
test
push
cwtl
mov
mov
xor
jmp
incl
hlt
dec
xchg
ljmp
jle
out
in
sbb
shll
sahf
sub
jmp
cmpsb
leave
sbb
data16
jae
xlat
pop
dec
inc
lods
push
pop
cmpsb
add
ja
lret
sub
cmp
insb
dec
ljmp
test
mov
sbb
push
adc
cmp
xchg
jecxz
jae
dec
sbb
pushl
cmp
xor
cmp
and
mov
mov
fimuls
dec
nop
push
push
dec
add
out
fmulp
call
push
mov
xor
or
clc
mov
add
aam
adc
dec
xchg
jb
fildll
mov
adc
mov
mull
ljmp
outsl
pop
test
call
inc
inc
sub
mov
movsl
das
out
cltd
inc
aas
out
jp
pop
jmp
push
and
pop
std
addb
push
lock
mov
adc
popf
cmp
and
sub
cli
mov
cmp
fnsave
repz
fbld
outsl
jae
cmp
xor
or
xor
incl
cmp
aaa
dec
shrl
fwait
out
js
sarl
cmpl
dec
lcall
xchg
push
pop
test
xor
mov
shrb
mov
push
cmp
aad
imul
rcll
cmp
ja
dec
ret
adc
xorb
in
and
cmp
mov
dec
mov
inc
incl
rclb
mov
or
pusha
add
xchg
subl
cmc
add
call
sbb
jecxz
outsl
gs
cmpsl
lret
repz
dec
cld
pop
inc
add
adc
testb
cmp
xchg
stc
adc
mov
and
pop
imul
outsb
hlt
adc
je
dec
xor
or
mov
fwait
sahf
scas
push
scas
rcl
dec
in
jle
mov
push
arpl
cmp
in
hlt
pop
xchg
mov
cmpb
ds
loopne
xchg
mov
pop
clc
lcall
or
mov
in
test
aas
pop
jp
pushl
dec
fnsave
mov
out
cmp
or
xchg
push
aad
or
fdivr
ljmp
push
js
lret
jmp
ret
test
sub
ja
mov
jne
pop
mov
fidivrs
dec
push
mov
ljmp
std
rorb
jl
jecxz
loope
xor
incl
add
outsb
neg
inc
test
xchg
adc
sar
sar
and
ja
fucomip
hlt
cmp
scas
xor
ret
pop
add
xchg
test
call
adc
jns
mov
xlat
jmp
mov
popa
testl
add
mov
lock
jg
adc
jnp
out
inc
mov
xor
xchg
scas
in
pop
and
pop
dec
gs
ljmp
xchg
pop
sbbl
ljmp
xchg
xchg
jo,pn
add
insl
shr
test
jl
jmp
in
test
push
pop
loopne
add
dec
jmp
cmp
or
sarl
adc
sahf
rolb
push
mov
xchg
adc
incl
outsb
cmpsb
aad
sub
add
xlat
out
push
loopne
sub
fildl
dec
sahf
into
ret
mov
xchg
mov
daa
rorb
pop
xchg
xchg
sbb
test
jg
cmp
call
in
push
push
push
inc
fisttps
ljmp
xchg
movsb
jmp
cmp
ja
dec
test
mov
dec
adc
add
adc
pop
xchg
mov
insl
adc
xor
fs
lods
je
les
xchg
lds
xor
jle
and
jne
mov
and
bound
mov
decl
inc
das
es
push
xor
mov
sbb
pop
cmp
inc
int3
hlt
aas
push
out
dec
jmp
ja
jecxz
sbb
cs
loopne
fisubl
arpl
mov
call
mov
cltd
stos
std
and
rorl
sub
shr
fildll
hlt
int
xor
jae
jne
lret
push
mov
push
push
stc
pop
mov
popf
dec
mov
or
sti
subl
cmp
fdivp
sahf
xor
cli
popa
xor
incl
aad
ja
fucomip
jnp
sti
in
outsl
mov
add
and
js
orb
jg
mov
sbb
jecxz
addr16
and
inc
arpl
pop
mov
add
es
jbe
outsl
xchg
lock
fdiv
pop
movsb
mov
mov
out
shlb
cmp
add
insb
fsubs
imul
add
out
or
jg
mov
add
inc
xlat
dec
ficoml
popf
push
mov
inc
lods
aaa
repnz
mov
out
insl
cwtl
in
and
jle
jecxz
imul
inc
dec
ljmp
mov
mul
or
les
add
lock
jmp
cmp
jo
insb
in
rolb
cmovae
sub
jbe
stc
insb
push
cmpsb
dec
ds
sub
shrl
addr16
decl
out
mov
xor
cld
scas
cmp
mov
jbe
dec
pop
fisubl
popa
sarl
sbb
and
loop
mov
sbb
lods
jmp
daa
daa
mov
xchg
fwait
sub
pushf
in
aaa
test
and
jmp
test
rcll
imul
gs
xchg
lods
sub
pop
pop
leave
call
hlt
add
add
leave
cwtl
adc
push
adc
adc
call
mov
out
push
sub
fpatan
into
dec
pop
xchg
gs
call
push
ljmp
ret
cmpsb
xchg
push
shl
lcall
mov
adc
ror
cld
sbb
xchg
adc
retw
jmp
mov
pusha
shll
fmuls
sbb
mov
ljmp
aam
ds
pop
push
xchg
pusha
or
jmp
mov
jne
fcoms
inc
or
ja
faddl
sbb
xchg
jb
xor
or
cmp
inc
mov
ljmp
dec
in
out
jbe
lds
in
xchg
inc
test
ds
sbb
jg
xor
push
stos
add
pushf
push
sub
sbb
add
incl
lock
jp
aam
test
sub
stos
repz
pop
mov
testb
jmp
sti
and
in
jb
mov
sahf
cli
mov
xor
daa
dec
fdivrp
sub
lcall
jno
daa
jb
mov
cmpsl
adc
and
fisttps
jecxz
mov
lods
jp
lock
je
mov
push
mov
cmpsb
pop
jmp
lcall
push
xor
jo
cmc
push
lahf
int
pusha
push
push
mov
pop
and
arpl
decl
inc
orl
mov
out
jle
sarl
movsl
add
sar
lcall
adc
iret
ljmp
add
add
xchg
xor
daa
cmp
cmpsb
mov
movsb
mov
lcall
pop
pop
xor
pop
outsl
fimull
sbb
xchg
aas
and
data16
pop
ds
push
inc
xor
enter
popf
sbb
xchg
lea
jns
lods
in
addr16
mov
add
pop
in
add
leave
and
popa
loop,pn
cmp
jne
jnp
decl
sbb
bswap
mov
inc
mov
sub
dec
jnp
push
fs
jns
faddl
push
inc
adc
add
or
xchg
jl
shll
sbb
cwtl
test
sub
jmp
add
loopne
add
xor
cmp
aam
sahf
pop
decl
push
aaa
les
stos
inc
pop
mov
aas
jmp
jge
cmc
xchg
adc
loope
dec
jecxz
dec
lret
out
in
out
and
jl
fidivl
dec
cmp
popa
inc
in
clc
xor
mov
std
or
dec
stos
push
pushl
arpl
mov
or
int
xchg
xor
lahf
pop
cli
fprem
jmp
xor
mov
inc
push
in
subb
mov
test
je
mov
pushl
dec
push
int
sahf
ret
jne
mov
lret
out
push
cld
add
fidivl
ljmp
shll
cmp
js
push
sahf
sbb
dec
lcall
cmpsl
loope
rorb
sub
data16
decl
inc
addr16
sbb
dec
pop
jb
in
xchg
cwtl
std
jo
daa
mov
and
adc
jmp
sbbb
negb
push
pushf
cmp
test
or
mov
inc
add
clc
push
pop
das
test
jb
repnz
jbe
xor
addr16
lods
xchg
fwait
ret
in
shlb
mov
xor
pop
sti
pop
decl
xor
xor
lods
negb
and
sti
sub
repz
int
pop
and
and
cli
in
insl
push
insl
pop
add
mulb
rclb
outsb
cmp
out
fld
js
out
add
dec
loopne
cmp
fldt
pop
clc
sti
mov
fimull
call
dec
pop
shrb
pusha
aaa
das
sbb
mov
cwtl
and
push
xchg
and
loopne
inc
sub
sub
dec
push
into
jle
add
mov
push
sarb
push
jmp
mov
jg
test
xchg
jl
jecxz
test
pop
sbb
mov
popf
sahf
inc
xchg
dec
scas
or
mov
jp
xor
mov
faddp
pop
add
mov
cmpb
or
adc
clc
add
pop
mov
cli
call
mov
aam
or
mov
mov
mov
xor
imul
call
cli
jns
add
or
xchg
cmova
dec
jbe
fwait
xchg
pop
jo
xchg
pop
jae
outsb
fstpt
mov
pushl
sbbb
std
inc
pop
jl
sbb
push
dec
mov
decl
jl
mov
into
pop
enter
pop
incb
mov
fucomi
add
xor
jecxz
call
push
jecxz
ret
sub
shll
mov
dec
int
push
fcomps
or
dec
outsl
mov
mov
test
adc
in
out
inc
in
imul
sub
out
ret
mov
sub
inc
xchg
scas
aam
adc
aaa
std
ljmp
dec
cmp
pop
int
nop
psubsb
cmp
mov
pushl
cld
call
mov
int3
lods
xchg
in
pop
add
es
into
je
or
push
jmp
jl
push
mov
leave
inc
push
fwait
xor
out
mov
lods
leave
and
incl
jae
popa
jo
sahf
mov
adc
sub
out
add
stc
cmp
sbb
dec
mov
out
dec
dec
and
aas
mov
xor
inc
frstor
jmp
js
or
add
nop
xchg
lcall
inc
cltd
sub
fdiv
ljmp
sub
daa
hlt
mov
or
xchg
imul
rcll
out
mov
loope
xchg
incl
incl
mov
fsubrl
dec
and
and
aas
push
lcall
enter
mov
and
mov
adc
sahf
jmp
jnp
dec
fwait
or
pusha
mov
je
and
or
repz
scas
jge
adc
jmp
jne
pop
xchg
dec
fcomp
xor
xor
lods
dec
push
add
adc
in
push
cmpsl
cmpsb
cltd
mov
stos
ds
incl
sbb
mov
repz
in
fwait
sbb
test
dec
jns
jmp
pop
and
scas
push
cli
inc
out
xchg
dec
gs
lcall
sub
pop
jb
js
call
jmp
sbb
push
inc
pop
and
push
cwtl
ss
jg
scas
lea
add
jnp
mov
call
xor
in
stc
popf
bound
xchg
push
insb
push
insb
dec
mov
pop
mov
jge
cmp
dec
ljmp
cltd
inc
jns
mov
mov
loop
les
pop
cmp
mov
xlat
mov
pushl
xchg
sti
fidivs
cmp
mov
ret
inc
push
pop
jp
jp
or
mov
push
mov
fsubrl
jb
test
and
sbb
pop
mov
repnz
adc
cmp
jge
jb
jne
dec
int3
push
scas
pushf
mov
repnz
icebp
mov
cltd
fcmovnb
sub
add
les
jecxz
leave
stos
adc
fisttps
jmp
mov
loope
mov
loopne
repnz
cmp
test
dec
inc
inc
fwait
adc
movsl
mov
push
adc
dec
cmp
in
fwait
ljmp
movsb
loop
mov
sub
add
xor
call
sbb
and
xchg
fisubl
inc
push
shrl
out
dec
enter
inc
cmc
in
jmp
dec
in
cli
fwait
jae
in
xchg
aad
sub
xchg
and
xchg
and
lcall
cmpsl
testl
stos
rcrl
mov
je
fwait
mov
ret
fcomip
mov
cmp
dec
jnp
mov
fistpl
mov
mov
sub
or
fsubl
and
mov
jecxz
icebp
in
ljmp
fstpt
fisubs
mov
push
hlt
dec
out
add
lahf
push
xor
push
mov
outsl
addr16
push
pusha
mov
nop
mov
inc
add
fistl
dec
aaa
aaa
std
ljmp
xchg
xchg
push
out
pop
fidivrs
clc
adc
jp
incl
xor
fistpll
test
mov
rep
inc
leave
repz
leave
mov
dec
push
jmp
add
mov
outsb
cwtl
adc
xchg
das
pop
or
push
cmpsb
iret
pop
add
aas
cmp
cmp
xor
repnz
loopne
clc
xchg
fwait
push
mov
sub
cmpsb
jnp
rcrl
dec
cltd
js
jp
mov
mov
cmp
push
inc
icebp
pop
cwtl
fldcw
sub
push
cld
call
push
push
jle
inc
jae
jmp
dec
adc
mov
ljmp
dec
push
pop
lret
lahf
imul
out
jb
out
add
xchg
mov
cs
push
loopne
daa
and
data16
add
pushf
outsl
lret
push
cli
lcall
xor
incl
dec
or
xor
jnp
nop
cmc
inc
jl
pop
aaa
and
cltd
idivb
cli
movsl
mov
cs
das
mov
mov
jmp
fidivs
inc
popa
xor
mov
inc
jnp
sti
data16
mov
mov
into
pop
cmc
dec
add
push
jecxz
nop
daa
sub
in
lock
filds
add
nop
fs
outsl
out
xchg
pushl
and
mov
sub
cli
dec
and
mov
aad
jmp
test
mov
shll
ljmp
inc
push
push
mov
mov
scas
xor
jmp
ja
jns
fiaddl
lahf
outsb
pop
and
stos
push
add
ds
jb
pop
sar
or
mov
jmp
outsb
mov
rcrb
sti
xchg
xor
inc
pop
push
push
inc
movsl
in
xchg
xor
jl
decl
cmp
std
cmp
jp
cmp
insl
cmp
lret
loope
jns
xchg
aam
dec
pusha
in
mov
dec
dec
fs
add
stc
into
cmp
or
iret
jmp
mov
lcall
mov
mov
test
mov
insb
cltd
bound
call
cmp
xchg
mov
leave
arpl
in
insl
cltd
xchg
test
adc
fs
sub
clc
call
or
sbb
dec
mov
mov
sbb
inc
sbb
movsb
add
fs
dec
jge
out
fildl
inc
out
push
sbb
cld
ljmp
dec
scas
and
loopne
sbb
xor
incl
clc
pop
xor
dec
push
mov
outsl
inc
pop
mov
adc
add
ljmp
pop
or
sbb
aaa
bound
xchg
pop
call
popf
jmp
push
jo
out
jg
jae
loop
xor
add
xchg
inc
int
push
jg
loope
inc
mov
or
ja
ret
and
xchg
lea
pop
sub
pushl
lahf
jnp
sbb
lahf
shlb
mov
cmp
fistpl
decl
in
leave
out
mov
xor
mov
lcall
cmp
fsubrs
clc
mov
xchg
push
pop
loop
lcall
fidivrs
inc
vmwrite
mov
call
sub
iret
out
shlb
pop
insb
ljmp
icebp
jbe
addr16
shl
sbb
jge
nop
mov
ficompl
lea
in
push
aas
movsb
xor
pop
xchg
lods
rorb
dec
xor
xchg
jmp
fdivp
scas
adc
aaa
jge
push
popf
mov
mov
mov
cmc
xchg
lret
andb
inc
mov
xor
pop
test
cmp
getsec
mov
and
xchg
inc
xor
jnp
jle
sub
js
mov
sbb
or
into
xchg
and
sar
call
loop
and
mov
cmp
sbb
lds
out
pop
jge
pop
xchg
or
mov
in
sbb
xor
sbb
ljmp
adc
mov
and
or
pop
lcall
inc
or
out
call
imul
mov
pop
pop
xor
push
divl
mov
call
mov
jmp
sbb
mov
xor
mov
nop
arpl
and
jae
in
pop
inc
jg
sbb
scas
lods
sahf
iret
adc
popa
adc
xor
jle
int3
mov
decl
push
mov
xchg
and
jmp
aad
push
mov
mov
in
out
or
scas
dec
pop
push
lret
and
cwtl
mov
sahf
jg
pop
push
out
popa
mov
std
sti
and
test
les
xchg
mov
aam
test
jne
xchg
dec
push
cmpl
mov
pop
sub
sub
mov
sub
dec
repnz
inc
or
cmp
test
std
and
mov
test
mov
dec
repz
dec
sub
call
idiv
movsl
fs
add
hlt
xchg
stos
in
ljmp
xchg
movsl
inc
or
push
dec
ljmp
dec
or
jp
push
dec
push
or
xor
cmp
test
out
xor
decl
inc
ds
in
adc
in
mov
dec
push
mov
push
jecxz
pusha
or
xchg
push
call
and
push
stos
pusha
push
imul
cli
hlt
xorl
shlb
mov
xlat
pusha
leave
rolb
jmp
outsb
inc
dec
inc
xor
rclb
fdivrp
addr16
adc
movsb
into
xchg
and
pushl
data16
inc
inc
into
push
clc
cs
pop
push
xchg
pop
pop
dec
add
add
and
mov
xchg
mov
push
sbb
lea
dec
fidivl
dec
push
mov
lcall
pop
pushf
mov
jnp
cmpl
icebp
sbb
mulb
jns
xchg
jbe
je
push
fs
imul
jbe
jmp
add
movsl
repnz
repnz
xor
loope
ljmp
cld
std
mov
pop
dec
jo
insl
iret
xchg
pop
pop
loope
push
call
call
push
pop
lds
adc
mov
addr16
pop
and
add
out
mov
add
ljmp
dec
push
mov
dec
ja
xchg
out
cwtl
in
cs
fwait
loopne
pushl
push
jmp
insb
pop
mov
std
adc
add
xor
out
pushl
xchg
cmp
xor
dec
xchg
in
inc
dec
inc
lock
or
loope
pushf
pushl
push
data16
popa
ret
js
sub
dec
xor
in
cmp
popa
sub
or
gs
xor
xchg
cmc
test
push
or
xchg
sbb
sub
loopne
ret
mov
call
fisubrs
cmp
jno
jnp
int
ficoml
movsl
ljmp
lea
and
test
mov
cmp
addr16
cmc
dec
lahf
and
jmp
inc
fsubl
out
std
pop
out
cmp
test
lahf
int
or
into
ja
push
mov
pop
out
or
cltd
leave
mov
insl
add
ds
fidivrs
mov
dec
jns
es
jns
and
aad
ja
xchg
sti
pop
push
sarb
arpl
out
push
jb
jg
incl
sbb
sub
leave
loop
fcomip
dec
sbb
and
pushl
or
incl
loopne
insl
mov
push
into
jl
int3
ljmp
sub
lahf
fcmovb
sbb
jno
repnz
das
add
mov
ljmp
jecxz
or
outsl
push
push
jno
sbb
dec
ja
rcl
inc
clc
jmp
cli
adc
cmp
lock
jo
jge
add
and
xchg
das
pop
xchg
mov
lcall
dec
or
xchg
fs
loope
div
adc
sar
call
mov
es
insb
mov
idivb
cmp
dec
gs
cwtl
or
enter
xchg
add
decl
lock
fstl
aaa
iret
mov
sbb
inc
xchg
ljmp
out
fstpl
pop
stos
add
push
insl
jo
fadd
jmp
inc
pop
adc
sbb
add
push
jl
pop
daa
das
push
movsb
or
xchg
xchg
pop
sbb
push
divb
call
jnp
push
insb
orb
or
pop
adc
sti
add
pushl
push
leave
or
xchg
adc
sarl
xlat
sbb
push
rcl
into
mov
out
loop
pushl
mov
mov
jle
and
scas
inc
push
fsubs
jg
int
outsl
mov
mov
mov
sub
das
shlb
out
pop
rcrb
pop
ds
popf
mov
gs
sahf
bound
dec
addr16
ljmp
push
cld
xor
or
inc
jbe
bound
imul
loopne
pop
inc
add
adc
or
shlb
lret
xor
xlat
jmp
cwtl
push
jmp
bndstx
clc
jmp
inc
mov
outsb
mov
repnz
sahf
iret
popa
sub
sub
pop
lcall
mov
ljmp
push
inc
mov
sub
pop
das
mov
fnsave
pop
int
ret
loope
pusha
aad
fwait
pushf
scas
pushf
in
test
scas
mov
out
outsl
pushl
push
out
ret
rcrl
aaa
cmp
push
clc
mov
rorb
sub
and
call
arpl
inc
das
dec
mov
fucomp
mov
or
xor
mov
rcll
ljmp
jno
pop
mull
mov
jmp
push
xor
push
cli
das
rclb
sbb
mov
add
mov
ret
popf
cmp
cmc
sub
mov
jl
cmp
popa
ds
cmp
call
and
push
adc
pushf
stc
notb
decl
push
iret
and
mov
repz
ret
out
and
push
sub
ljmp
scas
mov
lcall
fsubr
push
jge
pop
xchg
jecxz
dec
jmp
mov
idiv
or
lcall
aam
mov
xor
dec
hlt
or
or
and
push
loopne
out
jbe
sub
xchg
ljmp
cli
incl
clc
cmp
leave
sbb
mov
test
push
fwait
movsl
jbe
push
mov
xchg
cmp
scas
jne
test
int
loope
sbb
ret
stc
mov
out
dec
xor
cmp
sti
add
pop
enter
mov
movsl
ljmp
pop
lea
sub
incl
sbb
cs
and
nop
push
cmp
cmp
ja
vorps
add
out
sub
mov
cld
cmp
in
adc
pop
adc
push
imul
sarb
hlt
scas
mov
sub
ja
ja
adc
test
xchg
aad
imul
ret
mov
icebp
aas
stos
dec
loope
mov
emms
jecxz
mov
ljmp
clc
imul
addr16
movsl
sub
cmp
mov
jp
lds
add
ljmp
mov
xchg
lahf
inc
pushl
iret
xchg
cld
inc
pushw
movsb
push
outsb
sbb
lret
dec
push
sbb
outsl
push
push
lahf
push
repz
gs
mov
sub
test
lcall
adc
inc
xchg
test
fbld
leave
push
dec
rol
mov
stos
int
push
jge
call
clc
and
movsb
fsub
dec
sbb
lgdtl
imul
or
adc
push
into
or
aas
scas
inc
sub
scas
ljmp
out
lret
sbb
or
xor
adc
inc
aad
stos
adc
and
mov
jp
mov
jg
decl
sbb
cmp
mov
inc
test
jl
push
rcrl
arpl
xor
mov
mov
daa
inc
mov
mov
fs
sbb
ljmp
xorl
int3
into
loope
dec
cld
data16
roll
incl
ret
shl
ret
xchg
out
aad
aam
clc
and
mov
push
js
lahf
mov
add
std
cs
and
incl
iret
insb
mov
lock
inc
dec
fidivs
sbb
std
dec
testl
pop
clc
call
mov
dec
jns
inc
lds
xchg
xchg
mov
stos
cmp
dec
mov
pop
inc
jo
cmp
xor
jg
xchg
mov
sub
jmp
lcall
out
loop
int3
push
imul
mov
jl
dec
sar
pushl
dec
call
iret
sub
pop
push
xchg
rcrb
adc
int3
sub
pushf
ret
imul
stos
cmc
jg
mov
pop
mov
or
daa
repz
and
fcomip
xlat
mov
inc
mov
imulb
roll
pop
add
lahf
in
icebp
cs
inc
rcll
loopne
inc
mov
mov
mov
mov
pusha
out
setge
cmp
insl
cmc
lea
popa
lods
mov
pop
aaa
xchg
jae
fdivl
enter
mov
rorl
lock
inc
cmpb
test
ds
fwait
pop
cmpsl
adc
lea
push
out
icebp
lcall
fs
fcomip
call
jecxz
fadd
fstl
outsb
repnz
fnstcw
je
mov
sub
repz
mov
dec
dec
mov
and
push
mov
xorb
fsubrl
mov
ljmp
xchg
ja
xor
or
or
pop
stos
inc
jl
dec
jmp
pop
inc
sbb
out
or
nop
repz
int
push
test
fstl
mov
pushl
cld
dec
imul
mov
add
repnz
js
stc
xlat
xchg
inc
les
jg
dec
mov
xchg
je
sahf
add
data16
pop
mov
dec
ja
cmp
mov
out
ljmp
pop
add
lods
mov
cmovb
data16
pushl
and
call
mov
lock
push
repz
popa
int3
mov
cmp
incb
and
or
ljmp
add
imull
test
xchg
xchg
scas
or
push
jbe
int
push
sub
insb
aaa
fsubrl
mov
out
ret
lods
mov
xchg
mov
dec
lcall
hlt
in
or
fldt
pop
cmp
mov
inc
sub
lods
das
loop
dec
ss
xor
fsubp
or
sbb
push
mov
inc
shlb
stos
mov
scas
or
je
roll
dec
insb
pop
fiadds
ljmp
daa
and
mov
insb
aas
pop
xchg
and
scas
int3
loopne
cmp
jg
test
sbbl
pop
in
pop
mov
mov
pop
outsb
push
fcoms
push
xchg
out
dec
jbe
jg
cld
aad
mov
packssdw
enter
fs
pop
and
push
bound
das
in
mov
negb
lds
xor
aas
stos
adc
inc
jg
xchg
ds
rorl
and
popf
mov
mov
push
or
les
dec
or
inc
je
pop
lock
pop
ficoms
mov
cmp
int3
shll
stc
pop
fsubrs
xchg
addb
jo
cmp
je
xchg
xchg
push
xor
in
fs
pop
mov
dec
addr16
jne
mov
pop
test
out
mov
add
call
inc
hlt
lret
jge
imul
xchg
dec
jle
icebp
jno
add
cmp
sub
call
fsts
dec
pop
sub
fdivrl
pushl
hlt
mov
call
xor
lcall
xor
mov
aaa
jb
jmp
scas
xor
aad
aam
push
pop
ffree
decl
dec
pushf
pop
cmp
cmp
cmp
call
jmp
xchg
int3
lret
xchg
xchg
mov
aas
mov
xchg
insl
jne
decl
jge
dec
mov
in
and
lods
mov
dec
and
fwait
or
lcall
loopne
loope
push
loopne
aaa
mov
xchg
jne
leave
cltd
jno
xor
jbe
incl
test
popa
addb
pop
mov
sbb
daa
mov
aas
repnz
lcall
pop
adc
ljmp
jnp
sahf
mov
xchg
je
xlat
negb
icebp
dec
pop
inc
cmpl
scas
lods
xor
test
stc
mov
das
mov
jg
scas
push
clc
xchg
je
xor
sbb
mov
pushl
add
shlb
adc
mov
sub
imul
lcall
pop
inc
pop
xor
inc
xor
jno
cwtl
out
push
jecxz
lret
ljmp
xchg
jne
or
pop
xor
pop
stos
mov
xlat
enter
test
std
jg
pop
fcompl
push
out
inc
je
outsl
aas
mov
mov
or
add
into
xchg
mov
pushl
pop
fsubp
test
cmp
lahf
data16
cmp
pushl
xor
out
mov
es
push
sub
aam
mov
dec
ljmp
mov
or
imul
pop
stc
out
or
sub
sub
inc
mov
sbb
mov
or
cmpsb
mov
add
jge
je
sub
ljmp
das
int3
aad
xchg
mov
clc
lret
js
popf
pop
in
fcmovne
mov
sbb
dec
xchg
out
lods
fsts
adc
push
mov
insl
ret
pop
push
jns
fldcw
sub
cmpb
popa
mov
pop
xchg
shll
decl
mulb
fcoml
cmp
jno
mov
and
outsb
pop
repz
jne
pop
mov
xor
stos
add
inc
inc
xchg
jno
idivl
cld
fisttps
inc
lret
cmp
adc
sub
ja
adc
pop
faddl
les
cmpsb
mov
rcr
xor
enter
loope
ss
adc
mov
in
push
gs
int3
aaa
or
shlb
cmpsb
xor
incl
jge
sar
adc
sahf
jge
lods
xchg
movsl
decl
jmp
movsb
and
in
mov
mov
dec
ds
mov
outsb
mov
pop
pusha
bound
pushl
in
pushf
fsts
ljmp
push
lahf
sahf
aaa
addr16
pop
les
das
and
aas
xchg
decl
xchg
or
ficoml
fldenv
lahf
sti
ja
loope
cmp
insb
movsl
je
mov
add
rcrb
adc
push
setnp
loope
fcmovbe
jl
mov
adc
mov
inc
addb
jno
jmp
fmulp
mov
in
xchg
push
scas
ucomiss
xor
mov
aaa
std
pushl
pusha
dec
shrl
xchg
cmp
inc
ret
mov
or
ljmp
loop
add
ss
fucomp
jp
clc
or
lea
out
inc
arpl
jmp
xor
xor
dec
dec
in
inc
lea
mov
mov
mov
aad
mov
mov
stc
cmp
icebp
leave
adc
ja
push
pop
iret
inc
sahf
mov
call
aas
enter
arpl
sub
push
inc
ljmp
xchg
testb
push
fs
jg
out
out
jmp
mov
xor
inc
mov
call
jp
push
mov
in
shlb
push
cld
ljmp
js
and
xchg
fwait
icebp
icebp
lret
int3
sub
ss
mov
std
pushl
cmp
jg
ds
stos
movd
aam
dec
sub
in
imulb
mov
mov
out
pop
fcomip
jmp
nop
or
ljmp
jb
mov
incl
lds
jb
cmp
jg
cmp
push
int3
es
cld
cmp
out
mov
or
idivl
pop
mov
lds
xchg
cmpb
jecxz
mov
mov
pop
lock
arpl
mov
hlt
xor
add
and
in
fucom
ds
cmpsb
loope
mov
cwtl
mov
test
jle
xor
xor
int3
pushf
sbb
fsubs
clc
mov
push
leave
dec
sar
adc
cmp
push
and
out
mov
ljmp
adc
add
cmpsl
leave
fisubrs
fnsave
mov
subb
jno
mov
decl
fucom
aam
cmpsl
pop
mov
pushf
and
push
pushf
cltd
xor
lahf
fs
clc
fwait
cld
pop
stc
push
push
mov
xchg
adc
lcall
xor
or
adc
dec
test
dec
jnp
push
xchg
mov
das
push
pop
sub
fsub
adcl
lcall
xchg
push
mov
adc
dec
xchg
in
in
jnp
push
mov
pop
push
repnz
adc
clc
cmp
pop
and
adc
in
or
pop
xchg
nop
xchg
sbb
dec
cmp
jp
insb
icebp
pop
or
daa
push
xor
out
inc
aad
sbb
xchg
xlat
outsl
clc
cli
or
pop
ret
out
out
dec
push
cmp
xor
aam
add
mov
aas
sub
sub
mov
ljmp
lock
dec
sbb
fidivrs
popf
and
jge
pop
mov
insb
ljmp
adc
mov
std
incl
cltd
inc
sub
add
pop
lret
outsb
movsl
pop
leave
test
jg
xor
fmul
pushf
lret
call
ret
hlt
push
dec
jl
rorb
jbe
dec
mov
jecxz
lock
cmpsb
inc
xor
pushl
and
mov
inc
int
popf
mov
in
cmpsb
popa
sub
jmp
pop
xchg
gs
incl
fisubrl
and
ret
lds
adc
popa
mov
lock
jnp
add
incl
fcoms
mov
add
aas
mov
cmp
cmp
mov
inc
ljmp
repnz
movsb
jge
shlb
pop
dec
mov
push
pop
mov
mov
push
sbb
pop
arpl
ret
sbb
iret
in
bound
cs
pushl
pop
jmp
mov
pop
ja
jo
icebp
jb
mov
aad
inc
arpl
decl
mov
pushf
outsl
scas
push
mov
xor
test
cmc
fisubrs
jmp
push
push
push
enter
imul
fcompl
mov
in
popa
outsb
rcrb
sahf
push
or
xor
pop
into
xor
clc
lds
mov
pop
pushf
jne
jns
int
rcl
stos
xor
outsl
fucomi
incl
sub
and
das
mov
rclb
mov
xor
aaa
push
mov
pushl
jae
cmpsb
pop
mov
jnp
xor
xor
push
ljmp
push
lret
mov
test
sub
movsb
lcall
pop
shrb
movsl
pusha
adc
sbb
cld
cmp
in
in
insl
int3
rcrb
push
dec
or
or
push
cli
jle
push
icebp
mov
jb
lds
push
faddp
sub
lret
std
stos
push
dec
arpl
mov
pushf
aas
mov
ljmp
dec
sti
cmpb
mov
incl
ficoml
xchg
sbb
push
jg
cmpsl
inc
in
ds
addb
rol
xchg
fchs
sbb
add
push
lret
dec
fs
stos
adc
lock
mov
mov
mov
popaw
out
dec
ja
test
loopne
ret
pop
cld
lahf
sti
mov
cli
fsubrs
into
push
into
scas
pushf
ss
pushl
xor
mov
sub
out
adc
insb
inc
sub
push
movsl
pushl
clc
incl
out
dec
push
adcl
xchg
out
clc
xchg
pushl
or
push
and
js
and
ljmp
adc
rcll
call
mov
shll
stc
pop
cmp
xor
out
je
push
inc
cli
jmp
test
mov
dec
adc
sub
rcrl
insb
fsub
lods
test
fcomp
cmp
sub
popa
shll
outsl
int
lcall
adc
cmpsl
pushf
cmp
add
push
out
and
lcall
scas
jmp
jmp
pop
inc
push
inc
jmp
push
add
push
cmpb
call
call
adc
lahf
cmp
sub
jl
push
push
int3
adc
sbb
decl
leave
xor
pop
and
rcr
sub
mov
hlt
sbb
into
iret
scas
shr
aas
repz
imul
cmc
dec
sbb
call
inc
iret
mov
divl
popa
hlt
adc
xor
mov
ret
fists
cmpsb
stos
test
inc
push
mov
mov
xchg
or
and
lock
arpl
sub
sbb
sub
decb
gs
mov
out
ftst
add
add
fisttpl
pmaddwd
mov
cmp
imul
or
leave
and
mov
outsl
mov
jge
pop
shll
cmp
fmull
add
push
ret
xor
cmc
ljmp
jmp
cwtl
imul
lret
xchg
pop
inc
push
mov
cmpsb
sbb
xchg
mov
add
dec
pushf
jecxz
add
xor
sti
push
cld
orl
lret
add
incl
sahf
hlt
push
jne
push
aam
adcl
mov
pushl
jp
js
je
mov
push
sub
orb
inc
pop
push
cmp
ds
jmp
ds
ljmp
adc
ja
cwtl
xor
pop
into
popf
lea
cmp
sub
pushl
mov
mov
arpl
out
adc
cmc
push
loop
incl
sti
xchg
lcall
test
iret
gs
pop
jl
xchg
sarl
ja
lahf
sub
hlt
jecxz
dec
dec
pop
out
ds
sub
xor
jmp
mov
mov
pop
lock
ljmp
xchg
stos
lods
jl
test
push
inc
or
call
call
or
imul
dec
mov
push
mov
ret
push
mov
pop
and
in
sbb
cld
jo
loope
jl
jl
fwait
jns
ds
scas
hlt
jmp
adc
mov
ret
cltd
jle
jbe
pop
mov
inc
xchg
imul
pushl
ret
aam
movsb
stc
mov
enter
test
inc
lea
insb
mov
sub
incl
xor
add
ss
adc
push
test
pusha
ss
and
cmc
fwait
stc
insl
movsb
sub
fnstsw
rclb
push
testl
add
pop
les
dec
mov
xchg
test
stc
jle
xchg
test
push
cli
mov
add
pushf
sbb
jbe
jg
imul
dec
nop
dec
rorb
call
outsb
jg
jne
in
pushf
xor
inc
sub
add
ljmp
aam
push
push
orb
cld
loope
insb
or
mov
addr16
ds
or
decl
out
push
pop
push
out
scas
push
pop
out
mov
outsl
ficompl
pushf
push
xchg
aas
scas
adc
iret
add
lcall
mov
xchg
pop
in
mov
fmull
push
jl
sub
push
add
decl
outsb
sub
test
out
sbb
jb
xor
pushl
xor
lret
mov
add
inc
les
mov
or
int3
inc
or
and
mov
call
xlat
cs
leave
hlt
std
jp
mov
push
cmp
jge
hlt
lock
and
dec
fisttpll
out
cmc
cmpsl
dec
cmp
and
adc
scas
shl
xor
decl
repnz
dec
iret
stc
pop
lahf
jmp
xchg
xchg
jne
ljmp
pop
sar
mov
push
sbb
data16
rolb
xchg
add
call
mov
pop
dec
aaa
xor
fisubrl
fldt
sbb
in
lcall
lods
les
cmpsl
sbb
pop
nop
jge
jbe
pop
pusha
fnstenv
jg
add
lds
sub
fidivrl
scas
data16
pop
dec
jmp
mov
jp
rcrl
mov
xchg
notb
std
shll
pop
aad
ljmp
inc
jmp
cld
cld
and
insb
test
add
inc
mov
enter
lret
ret
call
leave
lcall
add
mov
js
lock
ficoms
cmp
ficompl
mov
decl
push
push
ret
mov
add
dec
mov
sahf
push
xor
outsl
cmp
ljmp
and
xlat
inc
stos
or
sbb
xchg
mov
and
movsl
cmp
pushl
addr16
sbb
inc
imul
imul
in
test
insl
shl
sar
decl
call
je
mov
xchg
inc
jns
xchg
outsb
in
clc
mov
pop
xor
pop
mov
dec
aam
imul
das
jecxz
and
adc
pushf
int3
cmp
xchg
lret
adc
incl
lret
jno
out
or
push
inc
imul
leave
dec
jne
push
pushf
mov
mov
adc
sbb
jne
out
clc
sbb
nop
add
mov
xchg
and
or
push
add
test
icebp
push
jle
push
cltd
cmc
js
ret
sbb
jmp
xchg
mov
sub
push
iret
push
lret
ss
mov
stos
test
and
sbbl
decl
sbb
bound
imul
loope
icebp
ficoms
div
xor
inc
cmp
rolb
push
stc
out
pop
mov
cmpsb
ljmp
incl
mov
adc
cmc
filds
jmp
lcall
out
cli
cld
push
aas
imul
mov
sbb
mov
fstpt
sbb
loopne
jmp
mov
in
fwait
sub
and
nop
jl
test
mov
add
test
xor
dec
lret
xor
sub
sbb
incl
cmc
mov
in
lods
das
addr16
push
cwtl
fmulp
fcoml
jbe
adc
int3
add
clc
dec
cmovno
lret
push
fs
loopne
mov
sbb
mov
mull
outsl
orb
scas
rolb
inc
jp
or
out
mov
push
or
pusha
inc
cmp
call
mov
aas
jbe
add
xorl
repz
out
call
loopne
pop
mov
movsl
xchg
ja
mov
sbb
paddw
jg
mov
mov
inc
push
call
andl
stos
test
es
pop
std
inc
sbb
das
repz
mov
xor
cmpb
daa
mov
mov
push
push
in
scas
or
mov
mov
lcall
adc
push
in
push
pop
jae
sub
mov
int
or
cwtl
js
std
push
call
lret
sbb
xor
inc
jnp
cmp
sbb
add
mov
lds
iret
jo
enter
call
sub
aam
add
cs
fsubrl
lret
mov
inc
imul
call
cld
pop
orb
cs
or
mov
lea
incl
daa
cmp
cmpsb
hlt
daa
pop
sahf
negb
xor
jg
dec
adc
sub
lcall
pop
das
shlb
lock
sub
pop
mov
mov
dec
daa
clc
cli
add
in
mov
decl
sbb
jbe
andl
rorb
pop
mov
je
mov
mov
pushf
shll
outsl
xor
cwtl
sahf
stc
push
jns
mov
inc
jmp
cmp
loopne
jle
push
sub
xchg
mov
jg
push
mov
pop
loope
and
decl
dec
dec
cmp
and
cltd
dec
cltd
js
aam
dec
add
lds
or
imul
negb
and
in
jnp
retw
lret
test
cmp
fists
divb
sbb
mov
xchg
jp
and
xor
rol
aad
aad
push
mov
insl
push
icebp
jb
aaa
push
das
clc
lcall
add
adc
test
aas
movsl
fs
outsb
repnz
decl
or
dec
ss
mov
out
sarb
std
sar
fisttps
xchg
testb
popa
jp
or
adc
sti
decl
orb
sbb
push
lock
test
imul
jg
movsb
jecxz
fnsave
dec
xchg
mov
out
add
scas
bound
fstpt
mov
xchg
int
sar
fsubs
jge
push
repz
idiv
test
or
cmp
inc
mov
in
or
fcomip
fdivs
jae
xor
jne
icebp
in
pop
push
popf
xchg
outsb
cmp
fcompl
fcmovbe
nop
orb
push
pusha
fisubs
out
lcall
push
sbb
scas
fidivrs
jp
xorl
incl
movsb
and
mulb
imull
jae
dec
pushf
gs
iret
inc
pop
enter
jmp
bound
daa
ljmp
xchg
jbe
repz
into
sub
jp
call
jnp
out
incl
js
and
add
jne
or
xlat
pop
test
cmp
push
jl
pop
cmc
call
shll
out
add
mov
icebp
aas
sbb
ja
fimull
ljmp
sar
out
es
dec
adc
mov
mov
mov
ljmp
mov
xchg
inc
and
add
incl
or
xor
mov
rol
into
cli
lods
adc
sbb
push
aas
bound
pushf
pop
out
int3
decl
dec
ret
ja
movsl
mov
inc
push
inc
ljmp
jno
inc
cmpsb
xor
adcb
xlat
pop
rorl
inc
mov
das
insl
xor
call
sub
add
push
andb
mov
rcll
jmp
loopne
in
xor
push
add
xlat
jae
insb
add
push
int3
ror
jp
dec
mov
stos
jo
dec
xor
push
jns
cmp
pop
mov
nop
adc
fiadds
cmp
incl
mov
fnstcw
arpl
ret
dec
lahf
sbb
lcall
decl
fimuls
fnstsw
fwait
add
and
shrl
pop
out
cli
lret
mov
adc
imul
xor
push
sbb
push
sbb
ljmp
enter
unpcklps
dec
xchg
fiadds
pop
pop
push
cmpsb
mov
and
cmp
push
cmp
cmp
jle
stc
je
inc
mov
sbb
jle
pushl
add
pop
mov
sar
test
lds
xor
inc
fwait
mov
dec
ror
jmp
xor
int3
call
jl
fisttpll
fstpl
out
sbb
dec
cmp
lcall
jg
jns
jle
sub
xchg
mov
or
daa
cmc
lret
push
stos
dec
lods
repnz
jge
cmpsb
out
add
rcrl
lods
push
rcrb
sbb
shrb
insl
mov
popf
clc
and
mov
faddp
rcll
jbe
sub
mov
inc
ljmp
scas
or
mov
in
push
dec
cli
or
in
stos
out
xor
jbe
popa
adc
into
movsl
or
jge
pop
pop
popa
bound
fistpll
pop
mov
adc
lcall
lock
dec
shlb
or
inc
add
aas
cli
into
jne
sti
loop
mov
ret
pushl
cmpsl
cltd
mov
sbb
xchg
mov
inc
mov
dec
sbb
add
xchg
adc
jg
jg
lock
and
jg
or
pop
xor
repnz
movsb
dec
push
mov
mov
loopne
in
ljmp
mov
fimuls
mov
lods
pop
daa
cwtl
jmp
fldcw
out
xor
xor
das
dec
pop
ret
aaa
rcr
xchg
mov
stos
stos
jae
iret
push
push
repz
scas
fcomip
jmp
xchg
aad
pop
adc
lcall
fs
and
jp
aam
call
mov
push
testl
mov
fidivs
repnz
pop
clc
pushl
sub
sbb
aaa
addr16
mov
std
cmp
out
mov
into
fsubl
lret
pop
sbb
leave
cmp
in
in
jmp
std
push
jmp
xorl
gs
jno
mov
cmp
lcall
xor
adc
ds
lods
movsl
jae
stos
pop
mov
fcomip
and
call
or
repz
gs
mov
sbb
lock
test
and
or
ljmp
setns
jae
into
cmp
lret
mov
sub
test
mov
sahf
add
mov
lcall
push
arpl
xor
repz
int3
scas
cs
test
test
dec
push
js
mov
push
push
mul
inc
incl
push
mov
cwtl
jle
ljmp
jne
push
aad
pop
stos
cmp
in
incl
jno
jnp
sti
dec
adc
mov
xor
jbe
fisttps
int3
mov
cmp
daa
filds
mov
sbb
insb
divb
add
mov
call
nop
xlat
mov
in
stos
pop
or
mov
xchg
cmp
sub
xchg
push
pop
or
pop
call
fs
mov
insl
movsl
inc
loopne
jecxz
hlt
inc
fmuls
add
movsl
shl
inc
cmp
lret
xlat
lret
decl
out
sbb
gs
pop
mov
fstl
imul
inc
std
addl
add
pop
lret
mov
mov
decl
fs
dec
sbb
add
test
or
add
mov
or
lods
pop
push
dec
mov
and
xchg
mov
stos
je
adc
and
loopne
sbb
mov
inc
fwait
and
and
mov
and
mov
loope
xchg
in
and
popa
das
sar
pushl
xchg
pushf
xchg
outsb
push
cmc
sub
jmp
call
mov
sbb
jecxz
mov
call
xchg
loop
cs
sarl
xchg
lcall
lcall
and
pop
bound
xchg
jle
insb
jp
mov
hlt
cmp
call
fwait
cmp
and
inc
lret
sbb
rol
aas
stos
adc
movsb
xchg
cmp
push
cmp
or
ljmp
xor
shlb
xor
mov
or
test
ret
dec
jp
call
xchg
or
adc
aad
fwait
pop
pusha
shrb
mov
faddl
sahf
jmp
dec
xlat
jae
dec
sub
subl
dec
les
push
mov
aaa
dec
cmp
jge
jp
imul
pop
sti
mov
and
mov
xchg
cmp
shr
mov
ljmp
mov
adc
ja
inc
imulb
jnp
jbe
add
nop
adc
add
ja
inc
cmp
inc
hlt
cmpsb
cmpsl
xchg
inc
call
je
mov
shll
xor
aaa
add
mov
push
add
cwtl
movsl
lods
fwait
test
pusha
fstpt
ss
es
dec
cwtl
mov
push
push
push
add
dec
mov
push
popl
push
dec
push
mov
movhps
pop
push
push
aaa
enter
clc
lcall
fildl
sub
int3
test
sub
insb
in
xorb
imull
clc
jmp
loope
movsb
mov
dec
mov
ret
das
rolb
into
cmp
jp
test
xor
jg
sbb
stos
mov
pop
and
in
sbb
incl
push
mov
out
push
fs
cmp
or
pop
call
push
sub
fwait
into
xor
mov
inc
stos
jle
into
ljmp
and
cmp
std
adc
imul
aas
mov
scas
or
add
fisubrs
inc
call
pop
in
pusha
adc
mov
popa
and
insl
leave
das
or
ljmp
jno
jle
add
mov
je
fbstp
nop
jno
cmp
cwtl
or
dec
fdivr
pop
lret
es
sbb
aaa
ja
sub
add
jle
lcall
jnp
sub
mov
mov
jmp
pushf
cld
adc
rcl
punpcklwd
fildll
outsl
leave
mov
jl
jnp
dec
rcrl
jns
leave
inc
fdivrp
incl
cld
data16
cs
imull
sbb
sbb
xor
jg
push
or
adc
loope
jmp
adc
xor
push
imul
fists
out
clc
decl
fimuls
pop
lahf
mov
popf
mov
add
jbe
fdivr
pushl
add
cmpsl
out
pop
or
es
pop
sti
es
mov
std
add
dec
inc
and
push
into
dec
aas
push
xchg
cs
mov
aas
pop
xchg
lock
or
push
lcall
cltd
in
adc
mov
in
mov
sub
cmpsl
dec
cld
cmc
fstps
aas
push
lds
aaa
pop
jb
insl
testl
cmp
fisttps
xchg
mov
or
cmp
xor
xchg
mov
sar
ficoml
mov
je
pop
fldenv
dec
mov
data16
in
mov
mov
jmp
cmpsl
sbb
in
xchg
adc
loope
jns
test
cmc
jnp
inc
add
incl
mov
pop
or
call
ljmp
mov
jo
arpl
jno
pop
and
loopne
in
pop
iret
jae
sbb
ljmp
add
xor
call
dec
mov
sarl
incl
fwait
repnz
push
cmp
pusha
add
add
xlat
sub
sbb
add
leave
jnp
cs
adc
and
cmp
std
fwait
pop
xchg
iret
cs
dec
adc
xchg
mov
loopne
aaa
sub
arpl
mov
cmp
leave
idivl
mov
scas
push
push
jp,pn
pop
cmpsl
jge
push
xor
divl
mov
mov
leave
push
fwait
inc
push
icebp
aam
mov
mov
imul
in
es
dec
rcll
incl
sbb
lcall
dec
mov
js
cld
jbe
in
fcmovnu
xor
lret
out
xor
sbb
pushf
les
shl
sbb
inc
and
dec
pop
xchg
out
jns
loop
mov
xchg
stc
mov
cmpsl
js
test
sub
xchg
sbb
push
adc
dec
dec
call
jg
xchg
icebp
mov
adc
mov
dec
dec
xor
adc
and
aaa
sub
sahf
dec
push
fsub
xchg
adc
mov
ror
mov
or
repnz
jp
addb
xchg
decl
lock
rolb
adc
and
lods
test
loopne
arpl
incl
lods
cmpb
pop
cmp
or
scas
ficoms
and
scas
add
fwait
jbe
jns
jle
mov
movsb
lahf
push
push
rclb
dec
jns
lds
test
cli
incl
out
clc
insl
pop
push
add
inc
jg
adc
insb
mov
mov
jmp
mov
in
dec
es
fdivrs
xor
fimuls
incl
mov
jbe
xor
pop
pushf
jge
cli
pop
cmpsb
dec
jg
sub
loopne
mov
loop
ljmp
lock
mov
sub
pop
sub
in
inc
enter
sub
lcall
dec
enter
mov
push
xchg
cli
push
mov
imul
test
aaa
add
sub
bound
lea
jp
push
inc
adcb
pop
jno
add
adcb
mov
fwait
lret
adc
shr
cs
and
call
dec
mov
inc
aas
sbb
pop
jo
sbbl
es
inc
popa
rcrb
jmp
mov
lahf
loopne
jb
cmpl
insl
ljmp
or
mov
push
call
ja
jne
incl
add
xchg
cmc
cmp
jg
in
mov
addr16
jl
testb
mov
push
mov
aas
jmp
mov
jge
aas
int
mov
inc
sarb
xchg
shrl
fbld
mov
iret
sub
pop
loope
fwait
movsl
dec
inc
leave
dec
pop
sahf
lds
pushl
xchg
cli
je
imul
ss
sbb
icebp
das
jp
adc
scas
out
clc
jmp
data16
mov
aam
add
pusha
hlt
xor
mov
lcall
mov
push
push
fs
je
imul
dec
push
shl
jle
inc
into
jno
call
addl
sub
dec
insb
jns
mov
push
cld
xchg
pop
andl
dec
adcb
lods
push
cld
decl
shl
push
jmp
and
xchg
mov
sarb
scas
scas
cld
dec
or
insl
ljmp
inc
push
sbb
add
decb
pop
or
repz
imul
sub
pushl
inc
lret
sub
dec
pop
pop
jle
adc
add
push
mov
mov
inc
or
xchg
pushl
inc
stc
push
push
scas
or
pop
js
and
fsts
bound
push
subb
test
mov
cld
iret
shrb
adc
push
mov
dec
test
jns
fdivs
add
dec
lds
icebp
push
or
out
xchg
test
out
lds
fnstcw
or
fidivs
jg
fmul
push
call
cmp
lret
cmc
cltd
shll
jmp
or
push
insl
push
out
push
repnz
xchg
jne
push
pop
adc
xchg
jae
movsl
mov
lgdtl
out
pusha
imul
out
xrelease
cmp
pop
jp
shr
movsl
addl
pushl
push
lahf
xlat
jp
icebp
sti
fcoml
incl
jmp
popl
clc
mov
sbb
bt
lret
mov
mov
mov
subl
inc
adc
imul
or
in
repnz
decl
pop
jl
in
loope
stos
dec
pop
inc
imul
shlb
mov
jg
sbb
mov
jo
push
stos
das
adc
lahf
mov
lods
mov
dec
xchg
mov
ljmp
add
add
lret
int3
and
adc
jb
dec
pop
adc
sbb
add
pop
leave
push
in
add
jns
ss
mov
push
in
decl
pop
xchg
gs
push
pop
outsl
dec
ja
pop
pop
cmp
xor
inc
push
mov
xor
or
pop
loop
sub
sbb
hlt
in
jnp
fdivr
jge
lcall
push
xlat
daa
jmp
jle
pop
mov
test
mov
fdivr
pop
sti
sbb
pushl
adc
lret
icebp
ljmp
gs
out
push
fwait
test
or
mov
dec
imul
data16
push
push
push
push
cmp
lods
mov
call
outsb
out
mov
shr
push
ja
dec
sub
inc
push
cmpsl
inc
xchg
insl
negb
xor
sahf
loop
xor
addr16
std
fisubrl
aam
stc
mov
and
cmp
ljmp
add
xlat
mov
rcr
xchg
rcrl
movsb
sub
jecxz
mov
call
jmp
push
cwtl
jmp
xchg
push
lods
push
pop
mov
jle
push
cmp
fs
aam
std
inc
dec
rcr
lea
and
xor
imul
loope
ficompl
in
mov
test
cli
push
mov
movsb
cmpsb
cmc
mov
or
cmc
jmp
push
in
imul
out
lock
mov
cmpsb
lock
sub
xor
pushl
ss
pop
in
popa
test
jbe
jmp
adc
jmp
mov
movsl
mov
pop
jnp
lds
inc
sub
xchg
js
stos
push
cmp
call
pop
sarb
push
std
popa
leave
push
fdivl
inc
pop
mov
pushl
jmp
inc
fsubrl
jecxz
fwait
xchg
paddd
int3
inc
mov
and
fistpl
push
sbb
sub
sub
cmp
mov
mov
jbe
xor
scas
cli
dec
cmp
push
pop
push
call
out
icebp
sbb
xor
cmp
iret
mov
hlt
pop
mul
ret
and
pop
aaa
xor
hlt
imul
xchg
decl
add
lods
adc
cmp
in
je
ljmp
sub
xchg
add
in
push
mov
mov
fcomip
int3
cmpsb
jg
cs
xchg
or
pop
lret
mov
mov
inc
add
call
aaa
mov
pusha
mov
mov
mov
lea
fmull
and
dec
xorb
adc
add
mov
or
mov
in
lcall
cmpsb
dec
fsubl
inc
notb
mov
xor
cmpsl
jecxz
add
inc
adc
icebp
movsb
and
ret
cs
push
negl
xchg
mov
or
int3
sbb
add
out
cli
incl
scas
pop
les
add
xchg
sub
push
mov
ljmp
adc
jp
jo
inc
mov
cmpsl
inc
mov
jae
sahf
sub
ljmp
imul
inc
jno
mov
dec
arpl
sbb
pop
dec
cld
push
jg
jge
cltd
jns
cmpsl
loopne
loopne
inc
inc
pop
arpl
xor
cmp
in
cld
jmp
push
mulb
lea
sbb
stos
or
adcl
mov
xor
call
xor
or
jl
insb
pop
xor
mov
push
sbb
stos
leave
or
decl
dec
cmp
imul
push
aam
fidivrs
cmpsl
orl
add
ffreep
testl
and
jno
pushl
call
aam
inc
xchg
imul
js
inc
dec
pop
and
xor
xchg
pusha
mov
mov
add
or
insb
and
add
lret
sub
push
fcmovne
jmp
sub
and
stos
ficompl
into
push
test
or
jecxz
sub
or
jp,pt
test
dec
xchg
and
and
and
stos
popf
ja
push
add
stos
sub
pop
cmp
inc
daa
lock
les
and
lods
in
ja
and
outsb
mov
sahf
insl
pop
test
mov
mov
jl
aad
dec
fmul
push
cwtl
pushl
frstor
dec
jmp
js
sti
clc
xchg
cld
imul
std
mov
inc
and
cmp
ret
bound
fsubl
iret
into
pop
orb
or
xlat
in
push
sbb
pop
fadds
mov
hlt
xchg
imul
pusha
bound
popf
xchg
stc
cmp
jmp
pop
jg
ret
jb
adc
or
inc
rclb
in
jae
imul
jecxz
xchg
sbb
fwait
mov
xor
iret
adc
pop
outsb
das
popf
push
stc
jb
lcall
enter
mov
push
or
mov
lea
fadds
sub
ljmp
and
mov
inc
pop
int
hlt
push
xchg
ret
push
inc
cltd
mov
add
sub
inc
lock
dec
lods
pop
mov
xchg
popa
decl
jns
in
outsl
lahf
fmull
xor
or
testl
adc
in
insb
sub
push
lcall
xor
sbb
sbb
fsubr
lahf
cmp
dec
fildl
push
fnstsw
pop
mov
and
mov
hlt
in
ljmp
and
gs
repz
repz
mov
jnp
and
or
dec
cmp
or
outsl
decl
aad
add
imul
adc
or
sub
mov
dec
dec
push
arpl
adc
sbb
mov
adc
add
lret
adc
mov
jmp
jl
test
adc
iret
pushl
std
mov
fcompl
pop
js
pop
pushf
aaa
jbe
adc
sahf
adc
incb
jg
decl
add
scas
rep
mov
loopne
adc
shl
adc
ret
ret
pop
push
inc
movsl
jmp
addb
loop
sti
scas
add
cmp
ja
jge
rcll
push
xor
stos
std
pop
aam
insl
outsb
push
mov
push
dec
fcomip
data16
mov
rcll
dec
aaa
stos
cmp
aas
out
xor
inc
nop
adc
std
cmp
shll
fdivl
mov
stos
xor
fdivr
test
out
pop
sub
inc
loopne
movsb
scas
sahf
jp
add
jbe
cwtl
dec
pop
cmp
test
xchg
push
jecxz
or
mov
test
dec
mov
enter
fisttpl
mov
ljmp
enter
decl
mov
es
mov
mov
inc
push
dec
add
or
push
aaa
cli
in
mov
pushl
pop
inc
inc
int
dec
stc
mov
sbb
outsb
xchg
add
pop
stos
jae
fdivrs
daa
push
mov
aaa
shrb
cmp
inc
jne
mov
adc
add
lock
dec
in
jbe
inc
sbb
dec
aad
test
in
out
andl
jl
mov
int3
push
sti
movsb
sub
fsts
pusha
dec
push
fadds
or
jge
jl
out
sarb
incl
add
and
clc
scas
jp
daa
inc
mov
pop
push
cld
call
add
xorb
lahf
je
inc
sub
pop
lret
cmpb
or
mov
out
jae
jnp
aad
js
push
mov
sahf
push
pop
jnp
sbb
jg
outsl
mov
jns
pop
inc
pop
nop
xchg
mov
mov
lods
sbbl
inc
mov
pop
and
lcall
out
test
out
inc
test
sbb
adc
in
pushl
faddp
cmp
pop
xor
lahf
xlat
shrl
mov
push
add
decl
and
nop
sub
ret
fwait
mov
mov
decl
dec
fldcw
dec
lock
dec
sbb
xchg
outsl
inc
sti
lcall
es
out
dec
cmpb
pop
mov
push
out
fldl
pop
fchs
in
insl
cmp
cs
fucomp
stos
sbb
cli
dec
aad
lock
cmp
lret
ljmp
in
out
or
or
loopne
pushl
xchg
popl
aas
sti
inc
sbb
push
or
cs
inc
dec
push
aam
mov
lods
cwtl
jle
fs
and
icebp
jg
mov
ret
clc
mov
dec
divl
movsb
loope
mov
das
rclb
push
mov
jnp
test
add
orl
sbb
jmp
pop
mov
in
clc
or
pop
xchg
push
std
nop
adc
lea
gs
fdivrs
stc
in
pushf
push
decl
lock
sub
mov
dec
adc
and
cmp
sub
in
stos
sbb
repnz
jl
lods
push
movsl
xchg
loope
ljmp
xchg
inc
dec
dec
dec
adc
jle
mov
dec
sbb
inc
dec
movsb
fadd
mov
fildll
out
dec
adc
mov
jge
push
jo
jae
mov
call
inc
sub
dec
sbb
adc
dec
outsb
xchg
push
lahf
aaa
fwait
xor
cmc
inc
out
mov
cmpb
add
repz
sub
aas
add
lea
decl
xchg
stos
mov
jbe
jmp
bound
add
enter
push
sbb
fidivrl
sub
in
fbld
or
lcall
aas
push
ljmp
xchg
orb
cmp
mov
fdivr
ljmp
loop
loop
test
out
fwait
mov
add
jno
cmp
jge
dec
fwait
mov
jb
lcall
stc
adc
inc
cmpsl
jno
cmp
fsubs
aaa
cmp
das
clc
sbbb
fadds
insb
xor
add
and
push
fcomi
int
add
add
ss
xchg
jecxz
push
xchg
jb
mov
ja
jnp
mov
or
notl
ror
mov
gs
lahf
push
ljmp
push
nop
ret
push
mov
xlat
sub
pavgw
icebp
shll
ljmp
pop
and
mov
pop
sbb
push
out
jns
mov
ret
and
pushl
sbb
dec
jg
shl
cmp
shll
cmp
cs
clc
dec
test
popa
adc
es
cmp
xchg
fstpl
fldl
push
sub
nop
sarl
incl
add
mov
test
dec
mov
movsl
mov
inc
daa
adc
inc
cmpsl
cmp
xor
test
xor
fisttps
scas
dec
or
lcall
lret
loop
incb
jmp
cmpsb
decl
dec
mov
es
dec
sbb
sti
fs
shrl
xlat
aaa
mov
test
jmp
sub
pop
incl
add
repnz
in
cmp
xor
scas
dec
scas
add
mov
cmp
out
jmp
scas
sub
lock
iret
popf
adcb
test
sbb
fldt
js
add
lods
adc
out
outsl
xor
lds
push
fisttps
lods
xlat
inc
pushl
incl
leave
xor
lret
into
add
jo
sbb
push
and
adc
call
aaa
std
movsl
sub
push
mov
das
push
fisubrl
mov
test
mov
add
int
cld
xchg
lret
fisttpll
mov
sub
adc
pushl
xchg
das
and
and
fdivrp
pushf
inc
and
push
icebp
xchg
sahf
fwait
in
gs
mov
out
fcompl
lcall
jmp
test
xor
cwtl
adc
xorb
lods
icebp
call
push
in
sbb
sbb
punpcklwd
addr16
in
ljmp
dec
in
pop
incl
out
fsub
fisubrs
pusha
xchg
mulb
add
xorl
sbb
je
mov
jmp
ret
jne
sarl
jp
cmpsl
mov
jge
pop
clc
call
cli
dec
insl
idivl
sbb
cmp
push
xor
call
ret
push
push
cmpsb
scas
push
hlt
bound
xor
pop
mov
inc
mov
fnstcw
pop
sahf
ljmp
xchg
movsl
inc
ret
push
xchg
popf
popf
hlt
fcmovnb
pop
sbb
in
xchg
dec
inc
pushf
sbb
outsb
repz
mov
pusha
xor
lahf
cmc
adcb
rclb
lahf
lcall
loop
xchg
pop
push
fidivrs
adc
ljmp
decl
addr16
jle
shr
repnz
ret
mov
cmp
xor
cltd
es
lods
mov
nop
inc
xchg
and
out
rclb
dec
ljmp
and
push
movsl
shll
test
hlt
icebp
xor
bound
je
test
decl
mov
test
fldl
jecxz
fimull
fisubrl
daa
mov
fucom
dec
add
sub
jmp
xchg
xlat
imul
decl
xlat
in
jnp
jmp
and
popa
adc
cmp
fsubl
xchg
bound
data16
jmp
xchg
xor
test
push
lahf
xchg
dec
or
jns
in
bnd
xor
jo
xor
pop
in
clc
mov
mov
jg
imull
lods
xor
jmp
pop
lcall
std
xchg
jb
in
fcoml
cmp
pushl
inc
cmp
add
push
outsb
inc
fistl
push
sub
test
dec
aas
ja
and
or
sub
push
jo
test
mov
xchg
stc
dec
outsl
dec
fists
add
adc
lcall
js
cli
imul
mov
icebp
ja
jo
cmp
ret
and
adc
jp
std
pushl
imul
orb
in
test
inc
enter
pushl
std
pushl
lods
insb
pmullw
adc
or
add
mov
lcall
pop
arpl
mov
int
and
sbb
jno
insl
out
mov
mov
fwait
pop
out
cmp
decl
mov
inc
mov
xchg
into
cmp
cmp
adc
stos
or
sahf
cs
ret
dec
jae
dec
sahf
decb
cmpsb
jno
mov
add
aam
incl
scas
sbb
mov
or
std
ficoms
sbb
fisubrs
xor
pushl
gs
dec
fs
ret
dec
loopne
lcall
leave
rorl
jns
addr16
sub
jbe
or
es
jl
in
jmp
arpl
out
jno
or
lret
iret
sbb
int3
adc
jae
and
mov
sbbb
icebp
mov
pop
jp
jg
xchg
mov
ljmp
jp
lods
adcb
xchg
nop
out
in
mov
repnz
neg
pusha
xor
pushl
lods
scas
lods
inc
cmp
jne
ss
sub
das
jp
add
push
mov
lret
inc
shl
add
xchg
icebp
xchg
hlt
mov
subb
xchg
dec
ss
dec
incl
cmp
in
repnz
push
pop
enter
fwait
pop
cld
movsb
movb
call
jmp
int
decl
mov
popf
mov
xor
cmp
jne
pop
dec
lcall
xchg
call
jp
pop
std
add
jb
decb
push
adc
test
insb
mov
mov
int
dec
aad
lds
jmp
and
popl
dec
addb
decl
into
fnstcw
pop
push
dec
rolb
mov
repnz
enter
lea
mov
mov
enter
clc
test
sub
mov
push
mov
call
or
enter
sbb
leave
inc
xor
shl
mov
out
jo
out
xchg
and
ljmp
loop
mov
and
in
js
sbb
ja
cli
mov
push
xlat
jmp
insb
mov
testb
lret
lock
jmp
jbe
test
cwtl
cmpsl
push
pop
movsb
pop
push
out
jns
xchg
sbb
or
push
sub
nop
lret
mov
roll
in
mov
pop
movsl
adc
outsl
mov
xor
fcos
incl
movsb
clc
pop
imul
and
jo
pop
insl
icebp
push
cli
ja,pn
lcall
repnz
and
mov
js
dec
sarl
xor
push
and
incl
into
fdivl
insl
xor
das
in
mov
push
in
enter
aad
aad
dec
les
arpl
sysret
xchg
mov
mov
in
pcmpeqd
lcall
and
push
sub
jl
gs
test
into
and
pop
scas
decl
lret
scas
fbld
push
dec
inc
lret
fistl
sbb
int3
aam
cmp
cmp
mov
add
sbb
push
jl
sbb
and
jmp
ss
dec
test
scas
adc
add
jmp
dec
ficoml
jb
das
fsubrs
ss
lahf
stos
or
jns
xor
pop
rcll
fstpl
lahf
push
sub
int
cmp
push
inc
sub
stos
mov
std
pop
ret
adc
cmp
stc
adc
aas
jl
idivb
decb
xor
aam
pop
std
inc
jle
sbb
pop
adc
xchg
pop
mov
addb
fcmovne
xchg
push
fmull
jae
es
adc
ss
call
test
sub
dec
divb
nop
leave
jge
scas
jg
cmp
cmp
jecxz
rorb
imul
call
mov
and
push
dec
pop
mov
into
pop
xchg
jmp
cltd
sbb
je
out
insl
ljmp
jb
cmp
sub
jae
fnsave
das
mov
loope
xor
add
fsubs
pushl
aam
mov
loope
jno
fs
movsl
jecxz
loope
das
dec
fnstcw
jp
xchg
mov
sahf
cld
or
in
xchg
lods
mov
jmp
push
xor
jl
mov
mov
gs
push
xor
pop
or
sbb
out
arpl
jmp
push
sbb
fdivrl
push
out
mov
popa
pop
data16
or
inc
mov
sti
push
stc
in
das
cli
dec
xor
mov
bound
and
mov
inc
in
popf
xchg
fisubrs
cmp
shlb
lods
fsubp
jbe
shll
adc
iret
push
cwtl
xchg
mov
sbb
mov
xchg
sub
decl
mov
adc
jle
ds
mov
push
call
ja
insl
ficoms
xchg
lea
or
inc
sbb
clc
cld
fsubl
mov
jl
adc
movsl
xchg
mov
jne
incb
in
lock
xchg
out
cli
fcomip
pop
cmc
mov
insb
push
mov
mov
pop
enter
add
jge
test
sbb
inc
lcall
adc
cmpsl
dec
aam
xchg
and
mov
jp
out
jbe
movsl
and
or
add
fdiv
hlt
stos
enter
cmp
out
sahf
int3
imul
lcall
sub
push
pop
mov
iret
enter
sahf
addr16
sub
and
cld
test
lods
into
fisubrs
add
jl
mov
and
cmp
inc
aad
or
mov
mov
icebp
arpl
push
out
outsl
xchg
lods
pushf
add
andl
lock
mov
les
ret
jmp
pop
sbb
or
mov
shrb
mov
icebp
loope
xchg
rolb
jmp
xchg
les
push
loopne
push
daa
dec
xchg
sti
jl
adc
dec
pop
loop
pop
pop
test
push
xor
jg
lock
rcrb
mov
movb
cli
es
jno
sbb
jbe
leave
xchg
data16
jns
call
scas
or
cli
sbb
sub
and
push
cmp
sub
shrb
aas
sahf
pusha
sbb
xchg
loope
call
lret
dec
js
sbb
mov
into
jecxz
ds
pop
inc
inc
out
and
incl
xchg
sahf
dec
add
lret
push
jg
lods
pop
sub
jae
test
rcr
mov
cmp
je
xor
jl
pop
lods
call
lods
out
lods
pop
fwait
inc
cmc
or
jae
imul
int
jg
mov
cmp
lahf
imul
clc
sbb
and
dec
mov
mov
pop
outsb
and
push
sub
jl
aaa
in
cmc
into
test
cmc
cmpsb
test
cmp
push
sub
push
pop
hlt
push
jecxz
out
pushf
xchg
sub
jno
sub
or
inc
jg
add
lcall
dec
call
pop
loope
aas
mov
and
adc
push
mov
ljmp
test
out
push
mov
push
mov
pop
inc
cmc
cmp
mov
or
mov
mov
nop
jo
mov
orl
pop
jl
push
dec
cmpb
mov
dec
xlat
add
repnz
outsl
mov
mov
pop
inc
decl
and
cld
pop
inc
mov
dec
sbb
out
cmp
movsl
cs
bnd
push
rcrl
call
mov
daa
xor
xchg
or
enter
into
mov
push
idivb
bound
aas
lcall
sahf
push
movsl
sti
sbb
ljmp
fists
pop
loope
pushf
iret
mov
call
xchg
mov
jp
jno
mov
sbb
add
pop
icebp
scas
loope
aad
daa
shll
jo
push
inc
add
gs
gs
testl
dec
xlat
xlat
mov
cwtl
lds
inc
cmpsb
jg
decl
xor
into
daa
jg
push
cmp
pop
pop
pop
cwtl
ret
jg
jne
jmp
frstor
mov
subb
test
mov
jne
sub
lods
int
xchg
add
mov
lcall
addl
out
xchg
jle
icebp
xchg
jg
sub
imul
rol
add
fcomip
popf
mov
int3
xor
sub
mov
mov
jmp
jno
sub
xor
data16
repz
push
xor
push
jmp
jmp
ljmp
adc
xor
inc
popl
js
adc
pop
pop
adc
loop
xchg
popa
xchg
hlt
call
add
adc
in
push
test
dec
add
repnz
jle
ficoml
cltd
push
mov
repz
pop
bound
mov
imul
inc
push
jecxz
rcll
cmp
jge
stc
icebp
jb
xorl
push
int3
icebp
and
dec
stc
pop
stos
insl
sub
movsb
out
movsb
insb
push
mov
je
pop
lret
shll
sub
aad
inc
jmp
addl
testl
lods
cltd
cmp
pop
negb
xor
pop
stc
and
incl
or
mov
cmp
movsl
jnp
fucomip
push
mov
call
pop
mov
mov
movsl
divl
push
gs
inc
and
jmp
ljmp
jo
pop
or
jmp
jo
cmpb
or
outsl
jo
imul
fdivrs
dec
das
cmp
mov
mov
pop
cwtl
nop
lds
ja
hlt
fs
jg
outsl
test
scas
in
mov
in
pushf
inc
aas
pushf
dec
arpl
movsb
std
push
mov
imul
enter
lahf
popa
adc
test
imul
cmp
lods
rolb
aad
mov
loopne
clc
hlt
sahf
fistpll
xor
cmpsl
pushf
dec
pusha
lret
pop
or
stos
cmpsb
sarl
enter
lods
lcall
js
mov
jecxz
ljmp
inc
cltd
les
xchg
mov
inc
inc
scas
fstpt
outsb
test
lcall
das
enter
icebp
lret
pop
adc
cmpsl
cld
icebp
mov
addr16
adc
jbe
fistl
push
stc
jo
ret
jg
mov
cmp
incl
mov
das
enter
pop
lret
cmp
call
mov
iret
dec
xchg
xor
and
jb
into
lea
addr16
mov
scas
decl
shlb
jp
je
lcall
mov
scas
sbb
clc
movsl
into
lret
push
out
fwait
jmp
imul
fs
test
loop
pusha
and
mov
decl
sub
sbb
add
into
xlat
aaa
test
cmp
jmp
out
sti
adc
xor
jb
mov
cmp
das
pop
jp
incl
jp
sarl
add
gs
xlat
es
sbb
inc
jge
inc
cmp
hlt
dec
push
or
test
dec
inc
lret
call
call
loop
cmp
inc
xchg
push
adc
lds
sar
hlt
xchg
out
lcall
add
in
mov
mov
incl
addr16
adc
cmp
sti
xor
xor
adc
sub
decl
pop
inc
mov
in
mov
sbbb
lcall
bound
mov
mov
sub
cmp
pop
and
hlt
in
or
xchg
das
mov
inc
push
stos
mov
or
ljmp
xchg
pop
clc
mov
insb
and
sti
rorl
enter
fs
xchg
sbb
nop
shlb
fwait
sbb
cmp
testb
xchg
data16
int
cmpsb
and
ret
ljmp
and
fnstcw
lahf
je
sub
les
stos
cmp
or
mov
pop
add
lret
and
fnstcw
dec
and
pushf
jmp
mov
ljmp
cli
mov
in
xor
xchg
inc
rcl
add
dec
inc
push
iret
je
jecxz
jo
cmp
and
lods
jb
fistpll
adc
xlat
icebp
cmp
dec
cmp
push
mov
push
xchg
inc
xchg
lahf
pop
ds
sbb
add
lret
fwait
add
xor
int
xchg
push
xchg
lahf
repz
testb
adc
adc
stos
xor
ss
xor
push
push
mov
gs
leave
pop
adc
decl
rclb
sbb
jbe
fwait
mov
rcrl
cs
bound
in
or
and
loop
add
jae,pn
xchg
lret
or
arpl
jno
mov
stc
dec
sarl
test
pushl
cmp
sbb
fmuls
push
or
ljmp
inc
jo
and
mov
cs
bound
arpl
dec
js
fwait
xchg
ljmp
or
jge
cltd
jecxz
and
stc
repnz
cli
lahf
mov
int3
mov
push
lret
push
ljmp
nop
bound
jb
pop
inc
mov
push
int3
inc
mov
xor
and
adc
cmp
leave
push
iret
out
or
dec
pop
mov
mov
cmc
imul
adc
sub
sti
fdivr
mov
aam
lods
jo
dec
sbb
inc
and
xchg
pop
adc
push
push
sub
jle
ljmp
lcall
fbstp
lock
imul
mov
mov
in
popa
lcall
into
and
decb
les
jne
sbb
jmp
enter
into
mov
push
icebp
and
std
lcall
and
shlb
and
xchg
sbb
pop
gs
lcall
xchg
or
add
fcmovbe
je
push
popa
inc
imul
mov
inc
jne
lea
lret
decl
stos
pop
addr16
lods
cmp
lods
dec
ds
mov
mov
mov
jmp
pop
xchg
cmpsl
sbb
xor
jo
fldcw
pop
mov
push
popa
in
xor
mov
outsb
inc
in
vpslld
in
imul
adc
sbb
cld
inc
xchg
and
sbb
push
aas
jno
push
outsl
loop
ljmp
pop
das
add
mov
dec
daa
addb
fucomip
add
push
jg
or
inc
fildll
sub
push
mov
subl
lcall
xchg
ret
cld
dec
inc
fidivl
test
imul
cld
fistps
stos
add
mov
push
xor
call
scas
sub
xchg
or
nop
jb
incl
cld
add
stos
pop
xor
das
rorl
inc
ja
incl
mov
adc
and
and
stc
push
sub
adc
mov
decl
dec
in
clc
repnz
xchg
sbb
std
jnp
ficompl
andl
mov
test
jecxz
daa
cmp
pop
lods
leave
cmpsl
fiaddl
fstps
xor
hlt
cmp
and
pop
add
xor
sti
xchg
in
push
mov
outsl
call
loope
mov
dec
fdivr
out
or
cltd
cltd
inc
cmpsl
sahf
aaa
call
push
cld
push
and
aas
pushf
fisubrl
jnp
arpl
out
sbbb
repz
aad
andl
cs
add
mov
mov
lds
sahf
aas
mov
add
scas
and
fbld
pop
push
clc
dec
xchg
inc
push
in
pop
push
cmp
jge
jmp
outsb
push
out
ret
in
scas
ret
xchg
xlat
stos
test
pop
hlt
pop
mov
cmp
cmp
decl
sarb
mov
rolb
mov
jne
push
fidivs
push
int
sub
jmp
mov
add
jbe
mov
in
jne
les
push
jns
subl
decl
and
pushf
stos
jno
dec
push
insl
sub
sbb
cltd
test
add
dec
stc
push
sub
rolb
sbb
mov
add
lods
mov
jle
push
push
incl
push
jmp
mov
cltd
ret
inc
and
cmp
out
cli
call
dec
mov
mov
mov
adc
cmp
push
cld
push
shr
out
push
sbb
cmpb
dec
ja
inc
mov
pop
cmp
lret
dec
mov
shlb
das
loop
add
ljmp
test
mov
mov
mov
jg
fs
popf
into
fcmovu
and
cmp
enter
popa
dec
xor
sar
sbb
notl
fsubr
pop
loope
jp
mov
and
mov
int3
adc
adc
jb
pusha
cld
call
scas
sbb
xor
nop
adc
fcoml
pop
push
jmp
dec
lock
ret
sbb
xor
insb
lcall
sbb
dec
call
decl
sahf
jno
fcoms
push
fs
bound
movsl
idivb
fnsave
lock
scas
mov
stos
dec
lock
loopne
ljmp
jle
aaa
mov
ds
add
push
ja
incl
xchg
in
cmp
fs
ss
cmp
jnp
es
pop
xor
pop
fs
add
cld
cmp
xchg
aad
push
arpl
pushf
sti
jb
lcall
lea
cmp
test
mov
sub
inc
jge
arpl
xchg
bnd
fists
sbb
js
in
push
jae
imul
xchg
cwtl
subl
std
push
pop
ljmp
cmc
mov
in
lock
std
adc
dec
pop
fsubp
fcoml
ret
xor
push
filds
sub
push
cwtl
dec
mov
jns
pop
mov
mov
sub
lcall
mov
xchg
imul
fwait
fsubl
rcrl
movsl
repnz
mov
sarl
cmpsl
dec
sbb
xlat
jbe
call
flds
and
incl
mov
pop
inc
and
movl
push
mov
mov
and
jg
cmp
jmp
dec
enter
pop
sub
add
rolb
cli
jl
lcall
jmp
mov
fildll
sub
inc
mov
test
dec
stos
mov
decl
add
lcall
fldcw
ds
inc
aam
lret
in
jecxz
jnp
cmp
int3
push
data16
sub
lcall
aam
mov
pusha
dec
lods
lahf
loopne
scas
inc
into
dec
and
ljmp
jns
jle
mov
jo
subb
test
jo
xlat
sub
jp
mov
sbb
xchg
sub
pop
loope
cmc
shrb
icebp
or
xor
jne
sbb
mov
lods
call
je
pop
push
fists
pop
clc
ja
inc
rclb
pushl
ljmp
fisubrs
xchg
out
cltd
outsl
loopne
jmp
or
mov
repnz
cwtl
aaa
lock
xchg
dec
call
sub
and
push
adc
mov
jo
jmp
xor
call
dec
and
pop
ret
xchg
adc
ss
sub
inc
scas
sbb
xchg
sub
hlt
in
xchg
xor
mov
xchg
add
pushl
xorb
adc
jg
mov
cmp
dec
decl
scas
cmc
cwtl
mov
mov
or
inc
dec
into
add
adc
mov
movsl
mov
jmp
hlt
xor
mov
fcompl
les
push
xor
jmp
inc
js
pop
adc
hlt
mov
pop
hlt
jle
repnz
mov
or
push
and
popa
insl
or
sbb
roll
xchg
mov
lcall
rorb
cmp
popf
mov
icebp
ja
fcmovnbe
out
pop
add
mov
push
jmp
ljmp
incl
xor
xlat
dec
pop
jmp
outsb
xor
mov
mov
scas
hlt
or
inc
std
call
push
jmp
add
sbb
xor
arpl
loop
xor
insl
add
mov
jbe
jg
out
aad
notl
jg
dec
mov
nop
clc
or
incl
dec
test
mov
pusha
lea
fistpll
jns
daa
popa
or
lcall
cmp
or
cli
ljmp
repnz
outsl
jg
ljmp
xor
test
pop
mov
loope
andl
cmp
mov
incl
mov
jp
loop
lcall
push
ljmp
iret
sub
lahf
sbb
fsubr
std
mov
jbe
mov
out
not
ror
cmp
decl
mov
outsl
add
cmp
sti
scas
ss
push
stc
push
inc
bound
mov
xchg
shr
incl
and
call
jno
test
inc
mov
pop
mulb
push
setge
jg
call
insl
dec
jae
pushf
jne
scas
mov
les
or
jg
inc
push
add
xor
inc
cli
cmp
and
ja
or
call
pushl
mov
pop
mov
mov
sti
xlat
mov
sbb
jge
mov
sbb
call
sub
and
xchg
inc
in
loopne
iret
add
cvttps2pi
and
decl
adc
sub
cmp
and
xchg
les
fdivrl
add
loope,pn
xchg
in
ret
pop
or
mov
insb
or
xchg
cmp
dec
jo
jmp
cmp
je
cmp
mov
cmp
adc
cltd
sbb
lcall
es
xor
test
jns
filds
stos
or
ja
cmp
jmp
inc
daa
test
fidivrs
test
inc
dec
ret
pusha
cltd
std
dec
es
mov
js
movsb
mov
jmp
ss
or
stos
fisttpl
mov
icebp
and
scas
add
push
and
stos
mov
jae
xchg
sub
lcall
fucomip
loope
lea
out
jo
aam
xor
out
mov
test
scas
mov
ffree
dec
adc
cs
dec
jns
cmp
into
shl
aas
push
push
inc
mov
xchg
sub
push
add
adc
sarl
data16
sti
mov
inc
ja
std
inc
cmp
mov
inc
sahf
add
sub
jecxz
cmpsl
inc
sbbl
jmp
add
int3
jb
lea
adcl
adc
or
pushl
addb
xchg
inc
xorb
cmp
jo
lea
push
icebp
xor
pop
mov
pusha
add
in
mov
lret
ljmp
jp
dec
xlat
cmpsb
push
addb
push
add
fdivrp
cld
add
mov
mov
fidivrl
repz
mov
sahf
xor
pop
shl
ret
lret
incl
push
out
xor
or
xchg
pop
sub
int3
mov
xor
decl
sub
dec
idiv
negb
cmpsl
cld
jne
fcos
dec
dec
push
daa
loop
push
or
cs
pop
in
mov
cwtl
sbbb
fisttps
xor
xchg
shlb
mov
stc
aas
jp
xor
inc
out
push
rcrl
or
clc
lcall
ds
jnp
xor
pop
ja
dec
stos
ss
out
cmpsb
jge
leave
rolb
cmp
mov
inc
int3
push
nop
loop
cmc
fisubl
shll
in
imul
dec
add
aaa
mov
adc
jmp
aam
mov
jge
mov
mov
sbb
ja
lret
insl
mov
repz
adc
iret
decl
cmc
ror
push
outsb
call
out
fildll
stc
jmp
test
cli
push
aas
std
inc
inc
sub
call
std
aas
sbb
xor
cmp
dec
jge
pop
lret
jl
mov
mov
das
adc
ljmp
pop
inc
jmp
das
or
int
mov
loopne
daa
jge
xlat
andnps
inc
jg
sub
loopne
outsl
xchg
hlt
cltd
jg
movsb
mov
loope
sub
aas
mov
loopne
pusha
pop
data16
mov
inc
or
xchg
sub
mov
lcall
lcall
nop
add
lods
xlat
sbb
sahf
ds
fisubrs
repnz
add
dec
sub
roll
shlb
jbe
in
mov
into
sbb
sub
jp
add
xchg
scas
jne
jmp
call
jnp
ljmp
jbe
jle
mov
sub
sbb
scas
aas
iret
cmp
insb
push
out
cmc
mov
outsl
pushl
and
bound
movups
sub
movsl
into
jmp
push
dec
into
xchg
sahf
xchg
lcall
pop
xor
add
jo
addr16
cmp
fs
into
mov
jo
popa
adc
pop
decl
sbb
rorb
sti
stos
xchg
jle
lock
or
jo
test
add
ljmp
cltd
test
or
mov
jg
sbb
xchg
out
dec
jl
loop
jmp
add
sub
lret
pushl
and
jge
clc
lds
cmp
scas
repnz
xchg
das
sbb
cmp
or
jnp
lcall
or
mov
std
rcll
cli
ss
jg
loopne
lods
push
jle
lock
popf
int3
vaesenc
xchg
pop
pop
fcmovbe
jns
int3
shr
cwtl
sbb
loope
imul
jl
jmp
scas
cmpsb
gs
inc
movsb
adc
rcll
incl
push
cltd
lret
sarb
jmp
cld
xor
jns
call
testb
jmp
push
mov
mov
sbb
std
push
test
inc
pusha
movsl
dec
les
in
xchg
ss
xchg
sti
mov
or
mov
mov
jmp
ja
mov
call
inc
sbb
push
dec
mov
lds
push
icebp
jmp
add
jne
and
sbb
scas
clc
dec
call
add
adc
shl
xor
add
jmp
jno
mov
les
clc
ret
mov
push
dec
pop
push
lahf
fisubrl
add
stos
decb
leave
jno
addr16
xchg
mov
frstor
push
xchg
or
nop
and
sub
inc
inc
fnstsw
mov
pop
cmp
leave
mov
and
data16
xchg
add
lcall
pusha
jge
mov
or
fidivs
cmpl
ja
mov
adc
pushf
fadds
decl
addb
ret
sub
inc
sbb
cld
jo
pop
mov
xor
clc
dec
pushl
mov
dec
incl
repz
dec
jl
test
data16
call
sbb
ds
pop
out
dec
cmp
cs
add
sbb
adc
jne
pop
into
pop
sub
scas
outsl
and
pushl
test
inc
fs
push
popa
aam
and
fwait
inc
addr16
mov
call
cmp
dec
adc
and
repz
popf
mov
js
je
sahf
shr
jg
jmp
cmp
loope
adc
out
inc
faddl
adc
into
and
out
sbb
cld
jmp
pop
cmp
pushf
test
push
sbb
push
mov
outsl
pop
hlt
incl
pop
sbb
sbb
fistps
into
jne
sub
xor
loope
iret
push
ljmp
cmp
daa
negl
add
mov
add
sub
insb
stc
in
call
xor
xchg
xor
jnp
ret
jae
pop
rcrb
mov
enter
fdivp
lcall
imul
out
daa
add
sbb
sbbb
out
xor
call
dec
push
inc
icebp
cmpsl
mov
add
mov
pop
mov
ja
loopne
outsb
std
mov
ret
xchg
aaa
mov
lahf
addr16
pop
xor
xor
mov
cmp
aas
sbb
shr
xor
cmpsb
jnp
pop
cltd
mov
shrb
mov
in
movsb
jge
jmp
mov
into
iret
in
cmp
lahf
xchg
out
adc
out
push
mov
mov
xchg
push
mov
mov
cs
scas
add
cli
shl
out
mov
xchg
imul
adc
outsb
cmp
push
popa
inc
daa
cmp
imul
out
mov
dec
inc
push
lcall
dec
cmp
cld
mov
mov
shlb
mov
lods
xor
insb
cmp
mov
mov
in
negl
mov
imul
in
mov
out
push
or
out
loop
jle
enter
loopne
cli
out
rcll
cmp
in
jbe
xchg
ret
imull
push
scas
negl
and
xchg
dec
jge
ljmp
cmp
scas
dec
and
ret
and
test
dec
jmp
sbb
sbb
fwait
jns
pop
bound
sub
fwait
shlb
dec
push
iret
cmp
mov
cmp
push
adc
sbb
incb
pop
push
xlat
mov
test
enter
insl
and
loope
call
push
fbld
sbb
xchg
fildll
into
sub
out
movsb
pop
sar
push
cmp
mov
jmp
or
xchg
cmp
xchg
imul
das
inc
push
call
adc
push
pop
lea
loopnew
pop
outsl
adc
mov
lahf
shll
adc
movsb
decl
out
cmc
enter
inc
loope
or
or
dec
jl
shl
or
or
aas
jbe
jmp
push
out
out
stc
push
push
or
cmp
xlat
or
dec
and
js
in
test
pop
mov
inc
sbb
cmpsb
call
cmpsl
cmpsl
push
popa
push
sbbb
push
mov
loopne
sbb
and
xchg
mov
cmpsl
cmp
inc
cmpl
jg
mov
adc
cmpsb
fsubl
mov
adc
notb
inc
cmp
cmp
int
hlt
mov
push
dec
leave
test
jg
inc
xor
xor
xor
je
pop
popa
xor
pop
aad
inc
push
or
inc
lahf
xor
sahf
cmp
jno
jle
pop
sub
adc
ret
inc
sub
push
adc
dec
sbbb
lods
cltd
jnp
cli
fnstsw
test
cwtl
xchg
push
pop
and
pop
lcall
aaa
lret
mov
sub
sbb
push
push
dec
lods
fdivl
popf
inc
push
ret
jmp
int
scas
insl
push
loope
into
aas
orb
test
add
cmp
movsb
mov
xorl
or
jge
gs
outsb
imulb
bound
push
add
jns
sahf
pop
gs
cltd
add
jge
mov
xor
push
outsl
loop
mov
decl
sbb
jns
cmp
ret
insl
inc
mov
incl
push
mov
xchg
push
out
int
in
push
push
pop
lret
cmovnp
push
mov
das
fdivr
incl
flds
pop
xor
mov
add
daa
loopne
xchg
fstpl
pushl
and
and
dec
mov
push
jne
sub
sbb
or
insl
inc
sbb
lcall
jge
inc
sbb
sub
lock
mov
jmp
and
mov
test
lcall
dec
push
lret
out
or
or
xor
xchg
cmp
dec
cltd
add
std
stc
decl
push
loopne
cmp
shll
inc
adcl
mov
enter
repz
mov
call
pop
icebp
scas
pop
and
inc
push
dec
add
mov
shrl
aad
bswap
adc
add
idiv
incl
call
leave
sbb
in
lea
mov
hlt
jmp
mov
les
jno
sub
or
lock
or
jne
mov
arpl
sbb
daa
imul
das
mov
in
add
add
pushf
outsb
shrl
adc
add
pop
mov
shl
xor
push
and
adcb
jns
call
mov
loop
push
adcl
xlat
jg
scas
mov
in
je
dec
aad
sti
sbb
push
push
decl
sahf
je
push
pop
adc
jo
adc
and
and
jmp
mov
mov
inc
sti
mov
loope
jg
jns
hlt
push
lcall
cmpsb
push
test
jne
data16
fcmovne
or
jecxz
mov
and
or
dec
lcall
add
pop
int3
sub
ja
js
loope
mov
pop
xorb
hlt
imul
lcall
scas
push
popf
cmp
jl
je
jbe
das
ljmp
add
dec
insl
jle
fisttpl
push
jg
mov
clc
or
sub
fwait
push
dec
je
in
aad
shrl
into
xor
sub
push
das
enter
sbb
jg
inc
orb
jnp
mov
xchg
imul
cmp
or
jle
sbb
lcall
shll
addr16
inc
stos
les
ljmp
loopne
jle
push
push
cs
in
fdivrs
xchg
sti
popf
push
push
dec
pop
dec
cmp
imul
lcall
dec
inc
push
mov
sbb
dec
cs
jmp
aaa
mov
xchg
daa
outsl
test
pushl
outsl
xor
out
fcomps
push
cmp
cmpsb
mov
or
ljmp
mov
out
adc
jge
cmp
std
cmp
jns
ljmp
ljmp
pop
clc
decl
aam
add
popf
xor
and
jg
jmp
sbb
sbb
or
loope
das
dec
inc
inc
mov
stos
add
decl
mov
mov
dec
movsb
std
ret
cmp
mov
stos
xchg
jle
cmp
lcall
jg
sbb
loop
adc
and
jge
push
daa
icebp
cwtl
enter
xchg
call
jg
inc
sub
pushf
out
cmc
sahf
or
popf
fiaddl
xchg
adc
aaa
inc
push
mov
divb
mov
dec
clc
sbb
fnsave
lcall
bnd
nop
cmp
enter
cmp
ret
mov
jo
fidivrs
xchg
hlt
call
cmp
lcall
ret
sti
inc
cmc
cwtl
inc
lret
pop
inc
lcall
pop
outsl
out
sarb
mull
mov
movsl
repnz
push
dec
les
mov
jne
mov
inc
bound
mov
ja
sti
and
xchg
addb
and
lahf
mov
xor
xor
outsl
mov
jecxz
xlat
clc
mov
mov
lret
pushl
jmp
xor
or
es
lcall
inc
fnsave
dec
test
jle
jno
jle
jmp
arpl
xchg
or
mov
or
subb
dec
or
mov
cmp
mov
jmp
jge
mov
cmpl
pop
cmp
dec
push
and
mov
imul
es
hlt
dec
jmp
adc
xlat
xor
int3
daa
add
fs
mov
sbb
call
lds
filds
push
ret
pushf
enter
add
mov
sbb
fsub
sbb
sub
mov
shrb
or
scas
sbb
sahf
test
pushl
xchg
into
and
sub
mov
push
cmc
sub
arpl
call
lret
and
sbb
aad
addl
mov
mov
mov
jl
mov
dec
pop
sub
repnz
sbb
aaa
mov
cmp
dec
mov
cmp
jb
aam
ds
jmp
jecxz
xor
filds
pop
inc
mov
cltd
jns
sbb
pop
flds
ljmp
mov
ljmp
mov
cmp
push
in
xlat
ljmp
mov
xchg
inc
xchg
addl
pop
loopne
ljmp
ljmp
pop
shlb
loop
jnp
mov
jbe
lcall
lret
lcall
out
mov
out
ja
cmpsl
pop
push
mov
out
jle
mov
lds
push
mov
sar
outsb
xchg
aad
sbb
test
movnti
mov
pusha
test
jg
push
pop
fs
dec
lods
into
lahf
jnp
loope
dec
mov
fstpl
ljmp
push
pushl
push
lret
pop
mov
mov
cli
das
adc
jg
mov
aad
lea
push
scas
cmpsb
ja
ret
lods
addr16
pop
cmp
arpl
lcall
frstor
push
add
sbb
dec
insb
ret
pop
iret
cmp
cmp
mov
fnsave
iret
out
data16
xor
ljmp
push
std
cmp
cmp
mov
add
aad
add
mov
ljmp
in
popa
or
cmp
cmp
scas
jo
fildl
push
movsl
pop
daa
push
add
rclb
sbb
lahf
test
pop
mov
add
mov
lods
mov
mov
insl
cltd
loopne
je
iret
pop
pop
cmp
pop
ljmp
lods
xlat
test
shlb
loopne
loop
shll
fldcw
out
adc
clc
lcall
push
adc
pop
in
out
mov
sub
cmp
lods
or
cmp
int3
push
ljmp
pop
jo
fstpt
int3
repz
cmc
xchg
add
push
lret
inc
in
jmp
cmpsl
sub
dec
fidivrs
movsl
sahf
dec
repz
push
loopne
fcmovne
cltd
mov
lcall
or
inc
xchg
out
or
mov
mov
ljmp
cmp
andb
xor
out
stos
fisubrs
test
push
mov
and
call
std
nop
aas
enter
xchg
idiv
decl
mov
out
dec
mov
jns
cld
cmpsl
scas
cli
cltd
scas
pop
sbb
xor
sbb
enter
fdivr
call
loopne
ss
mov
push
add
lahf
adc
pop
xor
mov
decl
fsubrs
ja
cmp
insl
insb
fs
xor
and
leave
sub
push
das
add
jmp
xchg
rcll
test
in
add
repnz
call
ss
inc
push
add
test
hlt
and
dec
pushf
cltd
ret
rcrb
fldcw
adc
lods
clc
sahf
outsb
fwait
mov
data16
add
outsl
sbb
clc
jmp
xor
mov
lods
pop
lods
cwtl
fdivrl
add
cmp
sti
mov
push
ljmp
jg
ljmp
xor
shl
repnz
div
pop
lds
jg
pop
push
and
ret
aad
stos
loop
lods
inc
and
push
inc
mov
sbb
push
sub
mov
dec
mov
push
outsb
sub
sti
out
dec
mov
xchg
lds
mov
add
lock
push
lods
xor
and
test
incl
jb
outsb
movsl
dec
js
mov
pop
jne
stos
roll
aam
inc
mov
fwait
inc
mov
sbb
push
sbbl
aad
sub
xchg
cltd
cmp
aaa
std
jmp
imul
mov
ret
mov
dec
xor
adc
addb
inc
lock
cmp
push
lea
mov
std
incl
pop
xor
xor
push
pop
dec
repnz
ljmp
push
dec
cwtl
fcmovnbe
mov
inc
bound
jae
mov
in
sbb
lea
mov
ljmp
jo
in
sub
arpl
scas
scas
in
cmp
lcall
lods
push
add
fstpt
repz
popf
stos
push
out
outsb
or
in
push
xorb
dec
jno
cmpsb
ja
lock
mov
subb
rcll
push
or
and
ljmp
or
cmpsb
mov
inc
rcll
cli
movl
jno
addb
and
out
fidivrs
dec
lret
add
mov
clc
ljmp
add
lea
shl
fldenv
pop
mov
mov
lret
rcrb
or
cmp
fwait
push
pop
and
jbe
push
adc
mov
sbb
rclb
and
xor
mov
andl
mov
lcall
push
and
xchg
lcall
jg
out
leave
ret
push
hlt
in
mov
lret
cmpsb
pop
pop
lock
jmp
loope
outsb
packuswb
dec
sub
mov
mov
call
popf
idiv
adc
add
add
fcomip
adc
fidivl
mov
push
fsubl
stos
lods
xchg
xchg
test
call
jo
ljmp
mov
ss
xchg
inc
ljmp
ljmp
push
adc
sub
jle
mov
inc
add
fbstp
sbb
in
movsl
push
fcomip
jl
ror
push
lea
mov
cmp
adc
lods
andl
sbb
xchg
push
sahf
add
je
xor
imul
rcll
rcr
rep
jmp
shrb
jb
filds
ljmp
loopne
push
out
sti
fcompl
add
pop
xor
jl
lds
pop
testl
incl
ljmp
mov
adcl
shr
xor
decl
loope
stos
mov
jnp
xor
call
inc
aaa
pop
movsb
clc
push
lret
mov
pusha
cltd
inc
cli
mov
cli
out
adc
lods
add
test
fists
cld
lret
xor
lcall
add
push
mov
sub
cli
mul
rorb
push
and
cwtl
jl
es
mov
inc
xchg
push
int
dec
cs
das
sahf
xor
rcrb
mov
aas
jecxz
push
mov
xor
loope
mov
dec
fdiv
fdivl
sbb
jae
popa
push
lcall
sbb
es
addr16
test
mov
inc
sub
inc
icebp
rorl
pop
js
or
or
icebp
arpl
push
push
inc
xchg
jmp
push
jns
mov
mull
jbe
cmp
in
and
rol
popf
cmp
pop
mov
rcrb
loop
mov
lea
ljmp
mov
xchg
test
lret
test
cmp
or
call
xchg
sbb
inc
add
psubsb
sbb
icebp
add
or
cli
mov
jbe
cmp
std
push
leave
mov
jmp
pop
mov
sbb
int3
aaa
dec
movsb
add
xchg
idivl
sbb
add
jg
shlb
sbb
dec
frstor
inc
or
jb
ljmp
mov
sub
pusha
mov
leave
sbb
call
jmp
add
or
add
enter
xor
jno
jno
clc
test
in
hlt
mov
icebp
enter
adc
jg
insl
adc
push
gs
fsubs
ljmp
int3
repnz
sahf
add
adc
data16
sysret
stos
loop
or
stos
leave
imull
dec
je
sub
pavgb
aaa
adc
lods
jb
mov
andl
pushl
pop
sub
ja
push
mov
outsl
jl
dec
insb
pop
pop
pop
inc
in
pop
or
sub
mov
or
lcall
mov
jle
or
or
cmp
mov
repnz
arpl
cwtl
push
xchg
das
pop
scas
sub
aas
test
cs
pushf
mov
pop
inc
into
jecxz
cmp
nop
fs
or
in
mov
lcall
mov
dec
aam
daa
push
cli
mov
and
push
rcrl
inc
ljmp
orb
insl
gs
shrb
dec
fsubr
imul
cwtl
cmpsb
out
dec
push
push
inc
adc
lock
cld
incl
sbb
and
pop
out
gs
mov
fistpl
clc
decl
adc
loope
inc
cltd
jl
push
insl
lods
mov
aad
rol
mov
js
testb
jmp
stc
xchg
test
xor
mov
inc
cmpl
dec
hlt
pop
xor
xchg
mov
pushl
mov
fdivr
xor
lock
lock
inc
mov
dec
add
mov
cmp
decl
call
data16
clc
mov
pop
shll
sbb
xchg
xchg
pop
inc
mov
mov
hlt
in
sbb
ds
lcall
add
mov
fistpl
fdivrl
iret
push
push
mov
or
lds
xchg
mov
inc
xchg
std
incl
out
sbb
addl
cltd
fwait
sbb
call
shlb
cmp
leave
movsl
les
sub
mov
pop
jp
push
sar
out
pop
pop
lcall
call
pop
cli
aas
imul
mov
and
xor
andl
add
daa
ljmp
movsl
fcoml
pop
cmc
xchg
add
repz
ret
mov
pop
fsub
aaa
test
push
call
cmpsb
xchg
lods
mov
je
stos
or
cmc
bnd
cmpsb
sbb
decl
jns
mov
ret
mov
add
daa
push
shl
jp
cmp
dec
arpl
shl
dec
push
shlb
test
outsl
pop
adc
jnp
xchg
xchg
pop
pop
orb
xchg
pop
pop
push
pushf
ljmp
clc
sbb
cmp
mov
addl
orb
scas
rclb
add
pop
cld
mov
scas
in
fucomip
test
mov
push
sub
and
into
cmp
pushl
pop
and
pop
dec
pushf
push
mov
dec
cwtl
dec
sub
xor
popa
stc
push
and
mov
or
rorl
decl
lea
fistpll
pop
out
lret
adc
jbe
lret
and
call
sbb
daa
lahf
rcrb
rorl
popa
nop
imul
rcrb
in
cmpsl
jnp
fwait
test
mov
aaa
pop
hlt
inc
cmp
hlt
idiv
pop
xor
xchg
mov
pop
xchg
test
sbb
repz
mov
int3
rorl
mov
insl
xlat
lret
mov
fldl2e
ljmp
incl
cmp
test
jb
popa
mov
jmp
insl
push
xor
clc
inc
mov
inc
xor
pushl
mov
inc
cs
xor
aam
mov
fdivp
fdivrl
sub
hlt
mov
sarb
call
push
sbb
enter
and
sbb
cmp
lods
or
sub
dec
pop
mov
pop
jge
rcll
dec
or
test
lds
push
xchg
sub
or
jg
repnz
jae
ds
dec
mov
sub
pop
sti
ret
test
jp
ljmp
fs
mov
negl
std
int3
sub
in
xor
pop
testb
aaa
push
fiaddl
push
test
decl
mov
int3
push
rcrl
xor
jecxz
call
xor
repnz
repnz
in
std
mov
repz
jae
pop
sbbl
std
and
cmp
cld
ds
fildll
jnp,pt
dec
int3
popa
mov
cs
jle
pushl
mov
ljmp
ret
mov
adc
sbb
lcall
mov
mov
iret
pop
dec
fistpll
lret
movsb
pop
rcr
sbb
or
incl
in
leave
mov
push
in
inc
orl
insb
xchg
pop
mov
popa
fstpt
mov
stc
jb
imul
mov
jbe
insl
scas
push
call
js
test
shl
adc
mulb
jbe
in
and
fdiv
lcall
xor
das
xchg
jbe
dec
jmp
lock
ljmp
or
mov
jmp
popf
repnz
add
repnz
sbb
lcall
mov
lea
std
jmp
mov
jno
add
sub
lahf
rclb
xlat
shrb
call
fstcw
lods
out
xor
lea
cmc
call
adc
sbb
pop
int
fdivr
pop
cld
add
and
sar
xchg
lahf
lock
in
sbb
pushl
or
xlat
or
adc
ficoml
into
dec
addr16
mov
cli
cwtl
das
enter
pop
hlt
xor
lds
sahf
daa
sarb
pop
or
mov
fsubp
mov
xchg
pop
mov
decl
jge
push
pusha
sbb
push
les
jg
push
or
sbb
xchg
cmp
xor
and
sub
inc
xchg
jb
sti
clc
int3
and
cmp
mov
mov
loopne
add
test
dec
bound
inc
inc
scas
lock
sahf
sarb
pushl
jno
inc
cmpsl
and
jle
sbb
in
jp
sub
stos
mov
cmpsl
push
push
add
xor
adc
push
in
jmp
fwait
pusha
jp
jmp
outsb
push
mov
xchg
adcb
mov
out
pop
nop
fisubs
and
aas
adc
std
dec
sahf
test
and
clc
int
add
mov
les
loop
decl
loopw
push
pusha
or
stc
lock
inc
andl
push
popf
mov
xchg
mov
lods
call
mov
dec
stos
int
and
inc
loop
pop
dec
mov
xchg
sub
decl
clc
fcomi
and
je
mov
jmp
pop
pop
loopne
mov
or
cli
jmp
stos
dec
iret
jmp
jmp
stos
icebp
inc
in
push
mov
jo,pt
repnz
lcall
cmp
push
cmp
jb
mov
ds
xchg
rcrl
mov
scas
jg
mov
out
jg
inc
pop
push
call
decl
cmp
inc
cmp
cmp
pusha
outsl
push
add
jno
push
dec
stc
testl
sub
movsl
stos
ret
out
stos
ss
cmp
xchg
ja
scas
insl
push
mov
inc
mov
push
lcall
sub
jnp
mov
test
jne
sub
pop
adcl
mov
dec
rorb
pop
icebp
sub
pop
xor
jle
sub
add
lock
sar
sbb
push
or
adc
xor
mov
jb
das
cli
aaa
mov
lret
les
sahf
in
push
xor
or
xchg
jg
adcb
or
dec
push
clc
fwait
xchg
dec
cltd
xlat
push
push
xchg
lcall
jae
mov
cmpsb
sbb
mov
movsl
je
int
xchg
aad
out
fcomip
stos
cmovb
pop
or
mov
hlt
rclb
pop
xor
push
mov
jne
push
add
add
fadd
xor
pop
pushl
sbb
sar
cmp
xor
aad
pop
jo
repz
test
adc
push
cmp
dec
jae
cmp
cmp
jmp
mov
sbb
mov
test
cwtl
inc
xchg
jmp
int3
xchg
fs
xor
sahf
cmp
cltd
mov
in
pop
pop
enter
pop
daa
int3
fistl
mov
sahf
push
ljmp
inc
in
adc
pop
aam
mov
xchg
pusha
jae
mov
out
mov
fsubs
call
sahf
les
xchg
sbb
repnz
jmp
dec
aas
and
sub
sub
je
out
repz
test
jb
or
scas
das
scas
test
pop
insb
jecxz
insb
fcompl
loopne
test
lret
gs
and
jmp
mov
inc
loop
cmp
cmp
xor
jno
pusha
sar
jmp
ss
dec
call
adc
inc
test
mov
xchg
out
dec
inc
add
push
aad
data16
jg
in
adc
sbb
dec
cmp
sub
shrl
enter
inc
jecxz
dec
pushl
and
adc
jecxz
shlb
ja
int3
jmp
inc
repnz
add
pop
lcall
enter
sub
jg
push
lcall
mov
xchg
pusha
push
das
pop
mov
jb
jecxz
add
int3
xlat
cmpsl
jb
mov
movsl
sbb
popa
and
hlt
fs
xor
decl
fidivl
imul
pop
repnz
aaa
fnstenv
mov
mov
in
lahf
out
lods
cli
cmp
ljmp
and
sbb
repnz
xchg
mov
aas
sbb
out
notb
inc
pop
repnz
dec
pushf
push
cs
xchg
push
jb
and
scas
xchg
sub
repnz
shlb
inc
movb
sbb
fcompl
adc
decl
subl
pop
cmp
movb
adc
call
or
pushl
jns
push
ret
pushf
cmpl
sbb
pop
subb
ljmp
cmp
sbb
out
div
hlt
mov
stos
dec
jb
xor
sbb
jmp
loopne
add
cwtl
enter
or
and
and
add
xchg
movb
xlat
je
dec
mov
pushf
or
lock
xchg
into
mov
nop
fsubrl
adc
jge
inc
adc
jmp
in
lahf
ljmp
dec
add
das
fs
jae
mov
lds
lret
lahf
iret
dec
jno
not
mov
or
lcall
out
mov
xor
rcrl
mov
dec
or
les
leave
push
mov
ljmp
xor
mov
clc
pop
and
in
add
clc
fs
gs
pop
adcl
cmp
pushf
xor
mov
call
push
fbld
inc
push
add
dec
jge
cmpsb
jmp
sub
jl
push
mov
xor
loope
mov
nop
cmc
ljmp
sbb
ror
std
addr16
enter
sub
lods
aas
pop
clc
out
cmp
adc
mov
push
sahf
test
lcall
ss
dec
outsl
arpl
jnp
mov
sarl
mov
jp
push
dec
xor
jmp
out
sti
mov
mov
out
pusha
je
pop
jle
push
or
stos
das
mov
test
sub
pop
decl
sbb
ds
popa
out
add
jb
jnp
cmp
pop
pushl
lods
push
out
je
sub
je
adc
sub
mov
adc
adc
hlt
add
jb
push
jno
scas
nop
test
es
jns
inc
mov
fcompl
jp
push
cmc
ja
out
fnsave
xor
push
adc
call
es
loop
pusha
xchg
dec
adc
lods
call
into
mov
cmp
pop
loopne
jl
inc
aam
dec
xor
push
mov
je
sar
ljmp
ret
insb
scas
cmp
cmp
mov
jne
push
cmpsl
test
inc
mov
mov
int3
loop
jb
fcomip
dec
negb
shrb
pop
cmc
add
xchg
xchg
sbb
mov
sub
out
fwait
out
decb
dec
pushl
ficomps
pushl
jbe
loop
mov
or
mov
jg
adc
and
inc
push
sub
jle
sub
test
arpl
adc
cs
int3
scas
das
pop
mov
jo
std
cmp
decl
inc
fiadds
push
sbb
sbb
ret
push
xchg
hlt
mov
push
jmp
stos
push
lcall
frstor
sub
and
lahf
inc
sahf
push
or
hlt
sub
scas
int
xor
lret
push
incl
pop
cmpb
incb
pop
xchg
or
adc
fsts
mov
xlat
outsl
mov
ficoms
or
cmp
mov
xor
mov
incl
cwtl
outsl
push
xor
pop
lods
jle
daa
pop
xchg
push
pop
cmp
pop
scas
in
lret
punpckldq
decl
sbb
add
clc
pop
jecxz
sti
dec
outsl
ret
fptan
cmc
lods
xor
int3
push
mov
mov
jg
dec
cmpb
or
xor
and
loopne
cli
in
jle
movsb
mov
fs
imul
pop
data16
mov
mov
mov
jp
fldt
call
cmp
das
xchg
mov
cs
outsl
aaa
jbe
sub
jl
mov
mov
incl
sub
adc
cmc
adc
movsl
cltd
in
mov
mov
insl
fidivl
lret
add
or
dec
cmpsb
iret
inc
fwait
in
push
into
mov
out
push
sub
push
xchg
je
clc
std
mov
cmpsb
out
jae
jne
dec
push
test
and
sbb
pop
cli
and
clc
mov
rol
jmp
push
cwtl
sbbl
loope
call
dec
scas
cmc
cmp
pushl
rcrb
add
bound
xor
iret
cwtl
addr16
add
inc
push
inc
or
lds
adc
push
jle
sub
jg
sub
loope
cmp
scas
loop
ds
aam
negl
stos
xor
sub
mov
out
mov
pushl
lcall
sbb
lcall
pop
xor
je
leave
ja
sbb
ret
clc
pushl
adc
xchg
xchg
ret
icebp
mov
push
scas
jnp
fwait
sub
cmc
fidivrs
mov
int
pop
mov
add
push
cli
jmp
push
adc
in
xlat
adc
mov
call
ss
pop
loope
loopne
adc
and
sbb
stos
clc
lret
inc
jg
push
call
xor
sbb
iret
cld
jmp
shl
xchg
out
js
bound
jmp
stos
fldcw
das
inc
ja
mov
jg
and
outsl
fsubrp
dec
jl
jmp
push
ljmp
int3
das
sbb
in
insl
aaa
cmp
flds
adc
lcall
jg
pop
adc
jmp
jns
push
lds
cld
into
push
int
inc
or
sub
fsubrs
in
pop
sar
cs
and
pop
ja
dec
dec
or
lods
dec
inc
and
clc
insl
decl
xor
sbbl
test
stc
dec
cmp
cwtl
jnp
insl
sbb
mov
ret
lcall
lds
jo
pop
in
cmpsb
push
icebp
push
mov
and
pop
pop
cmp
adc
ret
repz
inc
ret
jle
outsb
pop
lds
decl
adc
sub
dec
test
sub
ja
negb
sahf
add
shrb
xchg
mov
cmp
nop
std
ss
push
std
mov
push
out
lcall
mov
mov
sbb
outsl
lock
push
xchg
pushf
jno
in
jbe
add
adc
aaa
jl
sub
push
lcall
pop
sub
decl
xchg
xlat
mov
adc
outsb
cs
mov
sbb
lcall
dec
sbb
stos
outsb
mov
push
pusha
lcall
inc
cmp
jnp
fmul
adc
ljmp
subb
es
loop
out
cli
mov
pushl
jp
dec
jae
loope
inc
stos
leave
int
ret
xchg
popf
jl
and
adc
ljmp
mov
ds
add
fisubrs
or
aam
aad
and
add
call
aaa
push
movsl
sbb
lret
cld
dec
lds
or
adc
mov
sub
lret
out
xchg
adcb
push
test
ljmp
test
sbb
or
jmp
cwtl
push
fmull
and
dec
cmp
in
sbb
mov
mov
fs
incl
sub
cmpsb
jp
or
xor
xchg
nop
mov
fstpl
bound
lret
mov
mov
jnp
jp
mov
and
add
ljmp
incl
inc
pop
xor
cmpl
lahf
cmpsb
in
stos
and
mov
ja
stc
adc
lods
jmp
pusha
clc
push
mov
jl
leave
jecxz
cltd
clc
scas
clc
ljmp
jb
sbb
or
arpl
push
push
dec
in
mov
out
stos
stc
subl
testl
frstpm(287
pushf
push
xchg
cmp
repz
mov
mov
jmp
pop
movl
movsl
rorl
inc
cmp
je
push
sub
lock
shrb
sbb
insl
pop
mov
dec
mov
lcall
add
jle
fdivl
dec
cwtl
xchg
push
mov
pop
xlat
xchg
movsb
mov
loopne
xchg
test
cmp
cld
fbld
pop
mov
hlt
jmp
rorb
jne
dec
sbb
dec
loope
std
or
adc
and
lods
dec
in
xchg
icebp
xchg
xchg
dec
and
mov
sub
pushf
aaa
lret
and
add
les
add
mov
sbb
xchg
dec
push
ljmp
in
sbb
je
cmp
mov
rcrl
call
or
adc
sti
pushf
jmp
lret
jne
xchg
movsb
scas
inc
scas
or
adc
sub
ud0
pushl
mul
cs
cmp
xchg
sbb
xchg
xchg
imulb
icebp
inc
pushf
pop
dec
decl
arpl
ja
or
rcl
inc
in
add
dec
out
int3
ret
stos
adc
fwait
dec
mov
out
jp
mov
jle
ffree
adc
xor
fldcw
fsubrl
cmp
jne
divb
std
pushl
xor
pop
push
inc
add
inc
cld
out
int
stc
nop
or
lock
push
mov
add
sub
inc
mov
test
xchg
loopne
jmp
push
jmp
jne
fstpt
lods
dec
es
sbb
xor
push
sti
mov
pushl
adc
mov
inc
xchg
scas
xchg
shrb
scas
outsb
sbb
scas
clc
cmp
lock
jmp
movsl
sbb
and
rclb
shlb
jle
addr16
fxtract
jmp
ljmp
adc
cmp
mov
loopne
mov
inc
imul
lcall
mov
call
movsl
push
cmp
gs
push
add
and
mov
inc
daa
push
pop
mov
notb
sbb
dec
cmp
add
lcall
pop
add
xchg
mov
fdivrs
jl
cmp
mov
fiaddl
jg
xlat
call
cs
or
pushl
lods
incb
push
movsb
lcall
in
loopne
lods
jmp
and
in
jmpw
cmc
dec
mov
xchg
cli
mov
xor
inc
ds
cmp
push
insb
loop
pop
cwtl
pop
call
push
push
push
sbb
add
mov
push
add
dec
clc
pop
sbb
call
std
inc
and
call
and
in
hlt
mov
fcomip
popa
or
stos
arpl
sbb
imul
pop
mov
in
xchg
inc
xchg
rcll
scas
addb
jecxz
dec
push
lret
into
cmp
int3
outsb
jg
das
out
jo
push
push
push
add
sbb
sti
shll
mov
push
push
cmp
insl
or
adc
jp
inc
loope
les
loopne
dec
jmp
movsl
mov
xlat
add
lret
jae
test
orb
mov
pop
and
ret
aas
dec
inc
mov
adc
push
push
or
out
inc
jae
and
call
out
int
pop
jl
and
ljmp
rcl
cld
clc
and
loop
cmp
push
xchg
cmp
popf
push
mov
dec
adc
lock
das
pop
aas
jg
jno
mov
outsl
mov
jno
push
inc
fcoms
std
xorps
aaa
cld
push
cmpsb
sub
jnp
frstor
bound
inc
xlat
sbb
cmp
incl
ret
jo
frndint
dec
adc
fstpl
stos
ror
cld
lahf
inc
cli
fnstcw
mov
push
xor
in
push
hlt
mov
rcll
inc
sbb
pop
mov
and
outsb
inc
sti
push
loopne
sub
inc
sub
push
jecxz
jmp
push
arpl
mov
test
stos
addb
int
push
mov
pop
xchg
insl
sbb
call
test
cmpsl
insb
ds
into
mov
adc
jecxz
xlat
dec
mov
jns
inc
out
push
outsl
pop
mov
adc
bound
stc
push
and
jbe
sahf
push
add
call
dec
jecxz
mov
and
dec
js
push
add
sub
pop
int3
cmpps
mov
insb
and
push
ret
nop
dec
fmull
push
call
sbb
movsb
aaa
push
repz
stc
push
push
sbb
pop
mov
scas
adc
add
and
jmp
mov
push
and
xchg
stos
ret
xchg
in
push
and
fnstenv
lret
or
sar
ljmp
jle
jno
or
xchg
iret
imul
mov
rol
fst
lahf
fdivr
fstpl
xchg
cmpsb
ljmp
sbb
mov
icebp
incl
sti
sub
pusha
xchg
addb
mov
mov
push
push
push
imul
aad
jle
cvtps2dq
push
sub
or
incl
xor
mov
xchg
xor
aaa
sbbb
call
in
sub
xchg
pop
decl
in
sbb
push
into
call
jge
mov
and
sti
mov
mov
push
in
xchg
adc
lret
das
add
mov
dec
pop
inc
xor
sti
and
popf
jg
jmp
ja
mov
push
cwtl
sbb
xchg
ja
push
scas
sub
in
jmp
cvtps2pi
pop
lea
add
or
js
mov
push
add
dec
cmp
idivl
or
cmp
lds
mov
sub
push
nop
inc
dec
ret
cmp
lcall
movsl
mov
cmc
xchg
iret
xchg
mov
int3
jg
mov
decl
xchg
inc
sub
pop
popf
jns
fcomps
paddb
decl
dec
testl
xchg
dec
dec
fsub
ficoms
scas
scas
cli
cmp
push
sar
cmp
inc
push
sub
jg
call
in
scas
jae
movsl
loop
cld
cmp
adc
clc
ljmp
mov
xchg
pop
int
daa
in
les
jns
outsb
pop
pop
xor
call
dec
repz
inc
mov
ret
sarb
aam
pop
sbb
xor
mov
hlt
imul
das
jno
lcall
or
mov
push
pushf
cmp
lods
hlt
loop
mov
ljmp
and
std
mov
dec
loop
pop
sahf
mov
arpl
fdivr
mov
or
adc
inc
ljmp
mov
popf
mov
out
and
cmp
cmp
add
push
inc
xchg
add
inc
decl
adc
and
lea
push
cmp
icebp
push
test
mov
hlt
call
adc
mov
cld
inc
inc
jmp
adc
sti
lock
push
aad
cmp
inc
lods
fildll
and
and
mov
mov
fisttps
lahf
cmc
lods
mov
pop
xchg
hlt
ficompl
sub
xchg
test
cmp
cmp
inc
push
push
call
ret
push
out
mov
in
cld
out
sub
decl
in
cmpsl
jge
push
dec
jp
mov
xor
add
and
sub
daa
movsl
ljmp
rolb
adc
mov
scas
gs
jge
jns
inc
xchg
decl
xchg
negl
out
push
repz
sar
cltd
dec
add
loope,pn
lahf
insl
ja
call
adcl
and
sbb
xor
lock
popf
incl
mov
mov
xor
repnz
jmp
ljmp
scas
xchg
rorb
out
add
pminub
fcompl
adc
add
add
sti
bsf
cltd
mov
adc
mov
sti
fnstsw
in
testl
mov
push
das
notl
adcb
lds
in
sbb
bound
inc
pusha
fstpt
test
call
sub
fst
loop
loope
xchg
sbb
nop
inc
sub
dec
fidivl
out
fs
push
out
lret
add
dec
mov
mov
or
sub
ror
out
sbb
push
sbb
decl
pushf
sub
mov
cmpsl
cld
xchg
repz
cmc
and
adc
int
push
inc
jl
lcall
jnp
cs
aam
push
add
push
or
cmpsb
js
fsubr
inc
pop
negl
jnp
clc
sbb
mov
mov
ja
xchg
inc
add
cmp
fistps
pushl
dec
out
push
add
mov
aaa
mov
outsb
add
mov
std
sbb
mov
adcl
incl
out
mov
xchg
sub
sbb
fidivrs
sub
sbb
xchg
sub
dec
and
lds
and
push
xor
mov
dec
xchg
ljmp
js
mov
movsb
xchg
cmpsl
xchg
pop
push
or
pushf
jb
mov
lods
push
roll
pop
sub
or
cltd
push
les
add
sbb
cmc
sahf
sub
clc
inc
lcall
ds
test
lret
mov
fistpl
cmpsl
dec
cld
push
pop
mov
xchg
xchg
cmc
push
cld
fisubl
jb
xchg
xor
in
dec
ljmp
dec
fisttps
jnp
cmp
in
mov
mov
pop
sar
decl
mov
inc
daa
cmpl
sbb
pop
and
ljmp
loop
lcall
std
das
fisubrs
or
mov
loope
sbb
cli
xor
push
sbb
xor
imul
add
js
dec
push
ja
insl
adc
dec
lea
lds
push
insl
pop
push
nop
fbld
out
mov
ret
nop
pop
cli
mov
sbb
sbb
lods
or
addr16
lds
push
out
mov
fsubr
gs
in
shrb
push
jo
stos
mov
cltd
jg
lods
pop
mov
xchg
mov
js
cwtl
dec
mov
mull
xorb
xor
adc
inc
inc
or
cbtw
insl
daa
xchg
push
sbb
shlb
jmp
jp
mov
je
out
sbb
dec
adc
call
das
dec
pop
xor
popf
cmpsb
xchg
jno
cmc
stc
push
testb
daa
popa
test
push
je
fildll
inc
fidivl
inc
lea
lds
adcl
stc
add
adc
push
imul
gs
call
pop
jnp
call
push
jmp
or
mov
xor
scas
xchg
mov
push
jg
or
adc
mov
pop
imul
sahf
dec
js
mov
sbb
cs
andl
test
ljmp
adc
fdivl
mov
imul
lcall
xor
xor
cmpsl
xorl
popf
mov
dec
fs
mov
mov
fsubrp
out
stos
xor
rol
mov
pop
push
es
pushl
mov
stos
or
push
and
xchg
xchg
push
mov
xchg
call
ror
stos
push
in
out
mov
cmp
pop
add
jnp
xchg
sbb
or
jg
mov
aam
dec
push
cwtl
pop
push
repz
fst
movsb
cmp
lea
xchg
mov
or
inc
cld
sbb
ja
xchg
jg
pop
push
and
mov
cmpsb
push
sbb
pop
mov
mov
mov
scas
gs
push
jae
jl
pop
out
sbb
push
fildl
aad
lcall
xchg
mov
mov
add
out
add
rcrl
and
mov
mov
push
push
ficoml
push
dec
add
call
pop
lds
cmc
std
int3
rcrb
push
xorl
xchg
int3
lahf
push
ljmp
mov
roll
pop
cli
cmp
ja
cs
fcomip
mov
cld
inc
enter
xchg
decl
mov
or
in
enter
mov
insb
enter
dec
lea
pop
imul
dec
cmp
inc
rclb
push
cmpb
orb
jnp
imul
divb
jl
add
push
std
imul
pop
les
movsb
pop
fstps
inc
lock
decl
out
dec
arpl
push
sbb
out
cmp
adc
call
call
inc
mov
dec
or
daa
add
lcall
int3
lea
sub
decl
nop
psrlq
cld
xchg
or
jo
je
inc
int3
xchg
and
pop
jl
stc
and
ss
pop
iret
je
pop
loope
out
call
incl
pop
mov
mov
scas
out
movsb
sub
mov
addr16
lcall
jg
repnz
mov
push
repz
aad
insb
mov
mulb
repnz
jo
mov
push
add
test
cmp
and
sbb
ret
test
clc
adc
stos
sbb
repz
decl
mov
cmp
jmp
call
std
js
loopne
cmpl
decl
jne
inc
in
inc
iret
imul
loop
pop
xchg
jno
pop
xchg
mov
popf
leave
jnp
pop
out
jne
mov
push
and
adc
stos
aaa
test
test
or
cli
pop
sti
or
shlb
outsl
jnp
mov
in
inc
outsb
cmp
sbb
or
or
aas
xlat
add
mov
repnz
fildll
xor
or
ss
dec
mov
leave
pop
inc
cmpsl
or
popa
pushl
lods
insb
mov
clc
rol
cmp
sub
dec
jp
sti
cwtl
pop
dec
mov
mov
dec
shrl
lcall
pop
loop
adc
in
pusha
sub
cmp
inc
mov
mov
sti
mov
mov
pop
lret
lods
dec
addb
push
jae
mov
jmp
test
mov
xchg
inc
out
cli
xchg
add
loopne
mov
aam
stc
jmp
stos
mov
jbe
push
jp
or
ljmp
fs
leave
popf
mov
xchg
sahf
sbb
jno
out
mov
pop
loope
mov
mov
clc
mov
pushl
mov
mov
fcompl
mov
jno
xchg
or
into
sbb
jg
ljmp
lret
insb
jg
imul
xor
test
xor
test
mov
jecxz
call
pop
imul
ljmp
scas
cmp
arpl
add
in
mov
xor
iret
pop
aad
into
call
enter
fstp
or
jne
shll
mov
push
mov
mov
add
ja
cmp
fwait
dec
push
std
push
and
sbb
cmp
stc
fs
mov
scas
test
fisubrl
insl
mov
and
stos
fsubrp
in
and
and
mov
and
imul
jg
cwtl
cmpsl
lahf
lret
adc
fdivr
pop
sbb
gs
adc
aam
mov
hlt
out
and
out
mov
out
sub
pop
cwtl
ret
jecxz
or
ret
sahf
icebp
das
pop
movsb
pop
cmp
decl
dec
bound
add
xorl
sub
jg
ds
add
xchg
aaa
xchg
push
sub
int3
andb
or
incl
fmulp
shl
aas
fadds
pop
mov
lret
popf
lret
cmp
jmp
pushl
cltd
fdivrs
lods
ljmp
and
rcrb
sbb
mov
push
fsubr
push
adc
fsub
scas
ljmp
inc
sbb
imul
mov
ljmp
loopne
mov
pop
push
dec
add
ljmp
sub
add
cmp
insb
fists
mov
sbb
mov
ds
fcoms
cmpsb
pop
sbb
inc
adc
jo
dec
cmpsb
dec
xchg
dec
and
pusha
pop
lea
sub
sarb
flds
adc
adc
rcr
mov
in
ja
idivl
push
addr16
cmp
mov
shl
mov
aam
or
cmp
mov
jnp
das
add
inc
lcall
enter
mov
decl
clc
rorb
dec
fisubrl
pop
xchg
pop
inc
pop
dec
sbb
pushl
test
idiv
cs
cld
push
sbb
add
jno
arpl
mulb
ja
jnp
push
or
xchg
cmp
mov
push
sbb
sbbb
imul
pop
mov
jo
adc
adc
call
xor
stc
ret
cmp
add
scas
xchg
cwtl
jge
jo
or
aam
sub
push
or
call
jge
bound
xchg
push
call
scas
xor
or
sbb
xor
add
subb
cmp
inc
pop
add
lcall
cmpsb
aad
jl
loopne
add
push
mov
pop
or
call
jae
xchg
cmc
movsl
adc
mov
jo
push
iret
dec
push
movsl
inc
loopne
pop
fmul
push
lods
adc
pop
pop
inc
jmp
jmp
mov
or
xchg
xchg
ljmp
ljmp
mov
or
fwait
pop
ret
pop
push
xlat
inc
bound
inc
sar
cmp
gs
lds
push
es
ss
push
sahf
aam
fsubs
popf
or
mov
pushl
aas
fsts
add
pusha
scas
mov
or
loopne
movsb
daa
mov
add
jmp
ret
popa
xor
and
cmp
pop
test
push
or
mov
mov
sbb
xchg
and
push
shlb
loope
into
xor
ljmp
cli
xchg
rclb
adcb
icebp
sti
ficoml
jl
in
pop
mov
jmp
hlt
das
inc
dec
in
aad
ljmp
pusha
sbb
jno
sub
mov
sbb
stos
scas
pop
pushf
lahf
sbb
push
int
mov
and
out
adc
push
fmull
xor
stos
or
mov
jl
or
jg
jb
iret
cmp
jg
and
and
xlat
push
les
andb
pushl
or
jl
lret
pop
loop
pusha
imul
iret
pop
adc
xor
cmpsb
mov
pop
sub
mov
sub
pop
movsl
cwtl
push
cmpsb
sub
cld
decl
push
pop
mov
jnp
cmpsb
scas
pop
pop
stos
push
pop
inc
repnz
mov
or
add
xor
lods
sbb
cmpl
lock
and
push
clc
cld
arpl
push
popa
jne
inc
ss
call
cltd
xor
or
jp
sbb
adc
gs
adc
mov
adc
out
and
fucom
jbe
push
ret
scas
and
adc
popf
loope
and
enter
cli
cmp
pop
or
and
mov
mov
mov
mov
cli
enter
sub
or
mov
pushl
std
mov
or
mov
push
pop
and
ds
cltd
idiv
lcall
movb
stos
adc
ret
ds
and
inc
vcmpsd
incl
dec
jo
push
jno
add
insb
mov
adc
sub
bound
enter
sub
out
cld
decl
clc
iret
cmp
dec
dec
and
jecxz
pop
mov
loopne
add
cld
call
jecxz
fwait
stos
and
inc
insb
jo
popl
mov
ja
sub
lds
jb
and
decl
daa
rol
add
sti
xchg
lret
cmp
orb
mov
incl
sti
add
dec
inc
addr16
cmp
jbe
cmp
xlat
jns
js
and
outsl
pushl
xchg
push
mov
ret
lods
mov
pop
adc
push
scas
push
aam
cmp
loop
xchg
jno
mov
mov
xchg
enter
cltd
mov
cli
xchg
jbe
fwait
or
mov
push
icebp
jns
pop
adc
mov
pop
add
fucomp
jne
mov
sbb
ljmp
jle
cli
xchg
pop
lock
fwait
test
icebp
test
movsl
pop
jb
push
xchg
pop
les
jmp
add
jp
push
push
jbe
jg
mov
and
or
pop
xchg
inc
lds
push
and
mov
decl
sti
pop
xorl
lds
mov
jnp
push
push
mov
fadds
das
pop
fidivrl
xchg
ficoms
fstps
mov
mov
cwtl
subl
jae
leave
cmp
mov
or
pop
outsl
mov
ret
push
fistpll
das
clc
push
add
fs
jmp
mov
sbb
dec
aaa
setge
fimuls
xor
fadds
fisubrs
loop
fsubl
pusha
fcomps
orl
dec
icebp
pop
call
enter
insb
push
ret
data16
cli
lcall
les
xlat
loop
mov
inc
sarl
cmp
inc
mov
cmp
testb
fldl
lcall
stos
adc
aam
int3
rcrl
aam
rorl
insb
repz
jp
pop
fiadds
pushl
jl
xchg
movsl
imul
xchg
leave
and
cmp
les
xlat
dec
pop
or
call
shll
ficoms
aaa
int3
push
mov
cmp
jo
lret
xchg
pop
cmpsb
fsubl
icebp
data16
or
mov
pusha
cld
dec
hlt
xorl
lcall
jbe
or
xchg
aaa
pop
mov
aaa
inc
insb
sti
and
jbe
rcrb
gs
add
lcall
adc
aam
mov
arpl
xchg
clc
cmpsl
push
fsubrs
sar
les
out
std
xchg
lods
mov
mov
fiaddl
ljmp
push
mov
lods
dec
punpckhwd
cmc
adc
std
and
xorb
jg
les
inc
mov
cmp
mov
hlt
stc
pop
mov
inc
add
xlat
insb
pushf
roll
incl
sahf
dec
or
xchg
and
mov
sbb
pop
sub
mov
mov
cmp
push
cmp
lcall
push
mov
int3
pop
sar
scas
repz
aas
lret
push
push
insl
les
xor
jmp
popa
imul
mov
adc
and
loope
fidivrs
inc
jg
gs
jle
xchg
jge
push
gs
pop
xor
cmpsl
xlat
xlat
outsb
mov
arpl
add
cld
fdivs
pusha
jmp
leave
shll
mov
int3
mov
fisubrs
push
in
and
xchg
mov
inc
xor
pushl
or
jo
mov
cwtl
jl
sub
shll
mov
mov
or
add
sub
pushf
rclb
call
dec
iret
mov
xor
mov
mov
dec
dec
mov
cld
cld
cwtl
pop
push
xor
mov
movsb
pop
iret
xchg
inc
mov
inc
ret
andb
mov
pop
fdivrl
push
cmc
cmp
mov
dec
mov
mov
mov
ljmp
dec
xchg
or
mov
hlt
popf
enter
cmpsb
out
rcll
add
es
pop
hlt
aas
imul
pop
ret
push
xor
adc
sub
inc
aam
shlb
or
inc
insl
rorl
call
and
push
ja
xchg
fidivs
cmpsb
mov
cmpsb
mov
add
pop
stos
loope
call
cmp
xor
int3
jl
lock
sbb
xchg
jbe
add
cld
ror
sbb
push
test
mov
outsl
call
loopne
aaa
in
xorb
pop
mov
cmp
adc
bound
cmc
jmp
jecxz
xor
shll
dec
jmp
add
in
cs
incl
gs
jno
inc
jmp
xchg
test
inc
aaa
sbb
push
mov
pushl
cld
call
sub
or
push
push
sahf
pop
repz
cmp
adc
out
ljmp
sub
ds
xor
fists
jo
cmp
sbb
shl
std
rclb
sbb
sub
incl
mov
fsubr
sub
in
push
and
cmp
mov
pushl
lock
adc
add
xchg
rorl
inc
dec
fs
inc
int3
pop
les
fdivrp
mov
rolb
aas
and
inc
repnz
gs
cli
enter
inc
mov
in
mov
lods
scas
repnz
lcall
les
push
xchg
aas
jmp
negl
push
push
dec
jle
inc
mov
xchg
pop
cs
push
call
push
stos
add
mov
test
jmp
push
or
stc
mov
arpl
cld
cmpsl
ret
ret
cld
pop
push
aad
loop
rcll
aaa
std
jmp
cli
je
or
push
ljmp
test
mov
jecxz
xlat
pop
push
sahf
mov
leave
xlat
and
fs
in
ret
push
pushl
out
insl
in
fwait
xchg
clc
dec
mov
adc
xchg
mov
imul
jmp
in
xor
xchg
or
cmp
pop
fsubs
inc
fsubr
loop
push
jp
jmp
clc
lcall
leave
mov
rolb
pop
pop
inc
cmp
push
inc
mov
loopne
bound
pop
das
mov
jmp
push
test
pop
stc
ret
pop
fnsave
jmp
call
mov
adc
or
pop
les
loopne
adc
jno
add
paddq
push
call
nop
rcrl
cmp
loop
push
cwtl
mov
sub
add
push
mov
xchg
cli
xor
xchg
cmc
sub
jno
add
mov
sub
dec
sbb
ja
or
incl
jecxz
int
jne
or
sti
popa
dec
call
add
lcall
aam
xor
loopne
sbb
enter
fcomip
dec
pop
xchg
mov
call
fimull
jmp
sbb
jecxz
sub
dec
stos
mov
scas
add
imul
sub
jg
loope
inc
nop
mov
movsl
adc
xchg
mulb
adc
pop
lock
mov
decl
into
ss
fisubs
fidivl
aaa
cwtl
xorb
push
mov
pextrw
mov
push
add
cmp
fldt
xor
adc
lret
sub
aaa
push
clc
mov
pop
int3
dec
movsb
mov
cwtl
cltd
mov
dec
sarb
jp
cmpsl
addl
lcall
jmp
je
push
jb
data16
mov
inc
into
mov
je
call
jecxz
sub
lahf
jl
jne
lods
push
adc
test
or
cmp
lahf
loop
push
es
fwait
add
mov
mov
bound
pop
jne
xchg
outsb
xchg
push
incl
sahf
cmp
mov
pop
mov
call
je
push
lods
out
movsb
xor
sbb
xchg
push
xchg
ljmp
stos
or
jmp
aam
xchg
push
pop
inc
sets
ret
testb
test
in
xchg
and
jg
jmp
jb
cmp
inc
or
xchg
mov
rolb
adc
add
and
test
mov
rorb
fnsave
jmp
sbb
sbb
roll
or
repz
sbbl
test
cmp
mov
inc
scas
sbb
sbb
test
pop
loope
inc
adcl
jmp
add
cmp
cmp
call
or
mov
pop
stos
test
jmp
add
hlt
jne
adc
dec
inc
aas
enter
push
pop
jp
push
das
aaa
sub
or
into
out
ficomps
jns
pop
jb
dec
jmp
sbb
xor
daa
out
jp
scas
icebp
sub
or
jge
shr
sti
sub
mov
pushl
das
cs
gs
call
mov
nop
jae
mov
shl
jb
ret
cmpsb
xor
cmp
nop
mov
incl
dec
cmpps
sbb
mov
adc
add
ss
mov
mov
or
decl
lfs
hlt
mov
xor
add
lcall
cli
dec
aam
inc
sub
leave
in
ret
mov
or
inc
pop
ljmp
gs
mov
mov
test
and
sahf
cmp
ljmp
lock
cmp
inc
push
insb
lods
lahf
or
sub
xchg
icebp
stc
jmp
incl
rcrl
pop
aaa
and
adc
adc
mov
test
xchg
jb
lcall
lods
movb
sahf
add
hlt
popf
cmpsl
test
xor
fcom
dec
lcall
decl
sahf
out
aas
jp
mov
cmp
add
pop
jns
call
push
ret
jae
stos
leave
jns
xor
pop
pop
inc
jl
cs
or
call
pushl
scas
cmp
sbb
repnz
std
pop
insl
xlat
scas
mov
cmp
mov
mov
sub
sbb
and
and
xchg
pushl
cld
sbb
ret
in
xor
sub
jo
repnz
bound
fidivs
push
mov
aaa
std
call
aam
xchg
or
aaa
stc
add
jp
shrl
jmp
ret
mov
call
mov
and
jp
sti
and
mov
mov
push
pop
mov
mov
clc
dec
dec
push
leave
shl
decl
out
data16
jp
rorb
test
ja
mov
add
inc
mov
and
mov
dec
adc
dec
ror
sub
addr16
fildl
mov
dec
imul
push
aad
mov
cmp
xchg
xchg
mov
adc
test
subl
pop
cld
lcall
xchg
or
xor
inc
lahf
cmp
ficomps
cmp
fimuls
push
jl
sbb
loop
test
cltd
add
jb
daa
push
jnp
lods
fdivrs
xchg
xchg
sarl
jb
push
mov
mov
lcall
jb
pop
sbb
jp
mov
call
nop
jae
push
fsubs
cmpsl
cmc
bound
xchg
lcall
dec
dec
hlt
xchg
cmc
sub
push
fcmovnu
ret
and
dec
fcompl
ljmp
push
incl
ret
bound
pop
testb
xor
repz
jmp
mov
push
push
ljmp
leave
dec
sahf
add
and
cwtl
loope
sbb
inc
cmpl
call
gs
nop
or
stc
or
ret
js
ljmp
loope
fbstp
pushf
int3
add
pop
in
sbb
insl
rclb
mov
rcrl
aas
movb
les
clc
adc
push
aam
movsb
movsb
lcall
xchg
add
sbb
mov
sbb
iret
fildll
punpckhbw
or
imulb
loop
mov
push
out
and
arpl
pop
loop
and
adc
jg
mov
inc
ds
cld
xchg
jb
loopne
iret
push
or
add
fbstp
pop
push
decb
std
cltd
mov
sub
icebp
jb
data16
call
jno
test
mov
fcmovnbe
sbb
inc
sbb
push
frstor
fs
pushl
mov
pop
push
inc
ficoml
cmp
lret
push
xor
test
call
lcall
add
mov
loopne
push
lret
repz
mov
push
movsl
cmp
call
test
mov
int
or
cmp
push
jmp
sbb
es
ljmp
fstpl
loop
dec
jl
dec
aam
out
jp
ret
mov
sbb
mov
pop
hlt
pushl
aad
aam
out
je
andl
mov
subb
cltd
adc
xor
andl
jno
fldt
xchg
jb
adc
mov
jg
test
es
dec
push
clc
stos
mov
sbb
mov
ljmp
xor
add
sub
sub
or
push
mov
in
jb
ja
pop
gs
popf
inc
rcrb
call
mov
cli
ljmp
outsl
inc
lahf
xor
sbb
xor
outsb
data16
cld
outsl
lahf
je
in
sub
ret
daa
jle
lahf
push
dec
gs
jl
pop
sub
hlt
rcrl
sub
aas
mov
int3
sbbl
in
in
subl
push
mov
fcoml
sahf
jnp
dec
adc
out
ss
shlb
sbb
sub
jae
jo
lcall
jo
ss
or
out
shll
std
jg
lock
cmp
stos
test
filds
es
ljmp
mov
mov
adc
mov
cmpsl
inc
negb
lcall
cmp
daa
js
outsl
jbe
stos
sbb
mov
mov
sti
out
mov
aam
jecxz
imul
xchg
mov
decb
addl
inc
incl
popf
xchg
add
cmp
call
sbb
push
je
enter
push
repz
test
nopl
nop
je
fildl
or
popf
dec
sub
sbb
lock
push
je
and
out
or
pop
xchg
loopne
out
call
add
sahf
mov
pop
enter
imul
into
leave
push
ret
add
out
dec
sbb
jle
ret
dec
cli
pop
lods
neg
ja
mov
cmp
clc
incl
inc
push
mov
jnp
push
sbb
sti
shll
and
cmp
jnp
jbe
mov
or
sbb
in
shr
insb
xor
xor
pop
aaa
inc
js
dec
mov
mov
mov
loopne
push
jbe
or
sub
xor
loopne
mov
popa
mov
cwtl
cli
lcall
or
inc
out
ds
adc
mov
push
cs
cwtl
fst
shll
pushf
clc
call
mov
push
add
ds
filds
popl
pop
mov
ret
push
mov
xchg
jae
mov
lods
cmp
ret
lds
dec
xor
push
inc
je
inc
push
fsubr
sub
sub
mov
xchg
je
jae
inc
lock
mov
add
incl
loopne
ds
call
call
fsts
ret
mov
pop
mov
in
lods
sbb
jbe
jl
push
dec
or
jmp
inc
lea
adc
xchg
daa
mov
xor
daa
adc
scas
sbb
lock
lret
mov
xor
push
out
rcrb
or
or
flds
sub
cs
sub
fcomip
push
cmpsb
in
inc
mov
jecxz
add
lods
jns,pt
ss
jmp
mov
jp
in
addb
xchg
in
sub
icebp
push
pushf
leave
fstpl
mov
scas
push
xchg
sbb
add
outsl
mov
ljmp
aaa
fpatan
js
sub
cmp
daa
out
ljmp
jb
cmp
test
js
adc
repz
subb
popf
sub
pusha
mov
popa
and
popf
xchg
jae
je
xchg
nop
call
std
push
lret
push
sarb
push
subl
add
inc
jmp
or
sbb
xor
add
adc
cltd
push
call
sub
mov
movsl
or
or
pop
popf
in
sub
jmp
jbe
lahf
imul
pop
push
jmp
loop
xchg
add
ret
pop
in
ficoms
cmp
stos
fdivr
in
inc
pop
mov
sub
add
mov
cmpsb
sbb
or
cwtl
mov
cmp
dec
pushl
or
xchg
inc
sahf
cmp
inc
insl
cmc
popa
aaa
sbb
ljmp
in
pop
mov
push
adc
jg
andl
push
mov
loopne
in
jecxz
lahf
jae
scas
and
sbb
call
filds
and
dec
test
push
mov
sub
lods
or
xor
faddl
int
add
popf
mov
ljmp
xchg
jg
lods
xor
cltd
push
roll
andb
cmp
or
gs
sub
or
xor
push
pushl
repz
das
jle
push
ja
pop
mov
idiv
jg
xor
mov
inc
cld
in
mov
add
sub
stos
push
je
mov
lcall
scas
inc
hlt
pop
push
jge
in
or
roll
cmp
cmpsl
mov
sub
xchg
xor
and
call
inc
ss
fstpt
es
sbb
jne
in
stc
inc
xchg
jb
add
clc
je
lcall
test
aad
les
jmp
dec
and
jge
icebp
negl
call
fcom
es
lcall
repnz
mov
shl
dec
imul
xchg
lahf
shlb
and
xor
jmp
pop
cmpl
insl
mov
add
dec
mov
fists
punpckhwd
out
test
hlt
pushl
and
pop
loop
pop
test
popf
add
mov
aaa
scas
mov
pushl
stos
pop
mov
and
inc
movsl
fidivrl
aad
imul
loope
pop
shll
pop
rcl
mov
cs
ljmp
shl
sub
sub
xchg
in
push
lock
pusha
jo
incl
in
mov
push
dec
mov
mov
lds
sbb
out
fwait
mov
jno
dec
loope
or
and
dec
cwtl
jns
ffree
in
mov
jb
or
pop
lret
push
mov
insl
mov
push
es
push
pop
xchg
sbb
and
pop
adc
addr16
lcall
jmp
xor
fs
xlat
cmpsb
and
sbb
outsl
clc
ljmp
ljmp
push
push
aaa
mov
fldl
ja
push
jno
loopne
inc
stos
xchg
and
push
xor
adc
es
xchg
test
dec
pop
in
dec
and
pop
mov
push
ds
movsb
sub
ljmp
mov
das
icebp
lret
jnp
push
xor
push
repz
mov
cld
cmp
lcall
jmp
sahf
mov
push
repnz
sub
pop
mov
clc
fsubrp
stc
and
inc
mov
and
inc
xchg
ljmp
bound
add
arpl
outsl
sub
stos
sub
jae
cmp
and
outsl
mov
imul
rcrb
xor
xorl
ljmp
add
sub
arpl
mov
xchg
lcall
std
movsl
lds
mov
mov
sub
lods
dec
push
pop
sahf
sarl
pop
add
sub
inc
mov
mov
push
sbb
rorb
imul
test
jmp
cld
out
je
mov
dec
addr16
mov
dec
icebp
data16
outsb
and
mov
mov
jnp
insb
mov
push
jl
jmp
adc
lret
gs
add
js
out
sub
mulb
pop
mov
mov
ret
iret
push
daa
push
std
push
mov
ret
pop
pop
pop
ds
xchg
xor
in
jg
xor
sbbb
adc
lcall
shll
jp
jmp
out
pop
imull
mov
arpl
sbb
xchg
test
sub
jmp
sbbb
push
mov
rcr
inc
jecxz
and
add
inc
and
xlat
fwait
cld
mov
popf
mov
scas
sti
cld
setae
imul
pop
sub
loop
dec
sub
mov
mov
sub
push
xchg
mov
aam
mov
mov
xor
push
pop
out
insb
dec
fwait
popa
xchg
push
lock
data16
ljmp
mov
jp
xchg
js
shr
jnp
enter
xlat
repz
inc
scas
icebp
push
push
fbstp
pusha
and
sbb
insl
lret
dec
outsb
test
jbe
addr16
incl
fsubrs
dec
push
decb
push
shrb
cmp
pop
cld
jno
xchg
insb
mov
jmp
orb
loopne
pop
arpl
or
nop
push
mov
cmp
enter
lcall
push
loopne
sbb
push
cltd
pop
mov
cmp
inc
outsl
leave
inc
mov
xchg
movl
imul
adc
xlat
call
cli
sbb
cmpsl
nop
or
outsb
test
stos
push
jo
sarb
mov
or
sar
call
jne
pop
sahf
imul
and
es
inc
mov
xlat
call
inc
lods
clc
sbb
cmp
inc
inc
in
xorb
fcomip
call
in
and
fs
cmp
dec
test
addr16
and
hlt
inc
pushl
stc
mov
notb
sub
sbbl
lahf
enter
jb
jp
stos
loopne
ljmp
pusha
cmpsb
and
mov
popa
xor
jno
imul
lcall
fmulp
xor
sub
cs
in
inc
pop
lods
xchg
sub
push
xchg
inc
test
mov
or
and
fsubrs
push
test
push
test
lcall
fstpt
scas
rol
push
mov
and
cs
sar
mov
xchg
jae
into
arpl
pop
enter
stos
lea
sbb
notl
push
cmpsl
mov
mov
xor
pop
das
mov
jne
lods
fcomi
dec
fcmovnu
in
seta
jg
jne
xor
sbb
cmp
jne
loop
popf
pop
push
jne
fcomip
call
adc
imul
jle
lcall
js
rcl
dec
test
sahf
sub
repnz
stc
sub
jns
out
cmc
or
popf
xchg
rcrb
mov
xchg
cld
fcomps
out
mov
test
das
ret
push
fidivl
dec
insb
fwait
imul
cmp
sti
insb
sub
lods
dec
mov
pop
cmc
icebp
xchg
rcrl
inc
xlat
sub
push
stc
lods
loopne
dec
pop
cmp
jg
add
jle
jbe
jle
sbb
mov
mov
ss
insb
decl
push
pop
mov
add
mov
int3
test
push
std
mov
mov
cld
and
jl
xchg
andb
push
divb
fildl
jns
pusha
ficoml
push
mov
rorl
nop
jns
adc
mov
cmp
sub
cmpsb
cld
xor
adc
push
push
cli
lock
mov
push
xchg
int3
and
or
nop
inc
xchg
xchg
fcomps
xchg
push
jp
push
lahf
call
pop
jle
ljmp
dec
pop
mov
push
xor
jne
mov
jne
pop
out
cli
outsl
sub
mov
ficompl
dec
pop
mov
and
jnp
push
jnp
pop
push
in
outsb
idivb
mov
ja
leave
dec
dec
cwtl
inc
push
popf
lds
filds
cld
mov
fildll
lret
stc
jne
sub
lods
lock
pop
sub
or
nop
jmp
mov
insl
fists
pop
int3
lahf
scas
xor
test
leave
xchg
out
mov
call
dec
push
das
cli
cltd
push
push
pushf
fwait
int3
sbb
dec
jl
call
std
push
pushf
mov
xor
sbb
mov
pop
cmp
inc
std
xor
push
dec
or
and
icebp
popa
mov
imul
test
insl
xor
in
outsl
adc
jp
add
mov
cwtl
repz
jbe
test
aad
lock
mov
pop
push
lods
fisubrs
into
pop
cmp
ljmp
mov
push
mov
mov
ret
jmp
scas
jae
cmp
dec
inc
mov
call
cltd
mov
xchg
push
pop
mov
fisubrs
icebp
cmp
push
fadds
jp
clc
mov
aam
cwtl
push
jmp
ljmp
adc
je
push
add
xchg
mov
out
loopne
sub
nop
cmpsl
ret
ljmp
clc
insl
rcrb
shrl
shll
fldenv
adcb
popf
enter
jp
mov
mov
shlb
sbb
stos
push
repnz
lret
adc
sbb
lcall
and
in
fstps
shll
shl
or
jg
test
push
lea
decl
shrb
sarl
ss
pop
jne
cli
sub
psadbw
andl
lcall
sbb
mov
push
jbe
sahf
xor
cmpsl
sahf
test
and
mov
lock
sub
decl
push
rorl
pop
outsl
adc
pusha
cmpsl
mov
jmp
gs
lahf
in
out
lds
lcall
sbb
xchg
out
popa
fwait
xchg
sub
jns
pusha
add
dec
lahf
or
lcall
jecxz
hlt
mov
clc
jle
adc
mov
sbb
mov
call
ds
xchg
in
scas
jo
ljmp
in
inc
ret
pusha
es
pop
sub
lea
ret
dec
sub
sbb
cmp
roll
jge
mov
ffreep
mov
lea
jg
sub
push
xchg
in
mov
xchg
js
sub
inc
rcl
pop
rcll
xchg
addb
mov
ljmp
mov
cli
mov
push
push
xchg
cmp
nop
popf
lcall
test
jns
pushl
sub
test
adc
mov
ds
into
enter
rcrl
ret
or
adc
pushf
pop
and
sbb
jmp
into
and
inc
cld
sahf
sbb
incl
js
mov
inc
adc
push
add
incl
push
aam
out
inc
inc
cmp
rol
cmp
jl
scas
push
sbb
mov
mov
aaa
lret
dec
xchg
mov
fs
testl
adc
inc
lcall
add
cltd
jle
push
int3
mov
sub
jg
insb
dec
jle
mov
inc
iret
xlat
nop
xor
mov
aas
pop
mov
xor
mov
pop
aas
or
pop
sarb
push
scas
testl
add
jne
je
pop
or
or
sbb
incl
fnstenv
mov
adc
movsb
incb
loope
jno
insb
sbb
lret
mov
sarb
xchg
inc
ficoms
hlt
sub
mov
add
test
lret
pop
jmp
call
scas
pop
cmp
xchg
arpl
pop
arpl
cmp
jecxz
fsubrl
call
lods
or
jns
sub
jo
mov
leave
icebp
xor
cs
call
ret
movsl
sub
test
mov
xchg
inc
mov
mov
popf
hlt
push
lock
mov
mov
fisubl
xorl
scas
mov
out
inc
xchg
xor
out
lahf
out
lcall
stos
adc
adc
add
iret
jno
in
xchg
movsl
mov
push
or
js
cmp
mov
cmp
popf
ret
jmp
or
notb
push
inc
adc
add
es
pop
pop
push
mov
fcoml
addb
ret
bound
in
adc
test
jmp
inc
cmp
call
cld
stc
test
rol
es
inc
fs
mov
mov
mov
push
sub
pushl
stc
dec
arpl
jno
test
aad
dec
loop
dec
fisttpll
stos
sbb
les
mov
lret
push
fisttps
jmp
repnz
sbb
sbb
fwait
test
ret
lret
xor
test
fidivl
xlat
mov
lcall
in
sarb
and
inc
pop
sahf
jp
sbb
fwait
rclb
aaa
cld
incl
aam
mov
xor
xchg
mov
sbb
pusha
sar
cwtl
cwtl
out
pop
addl
sbb
jne
push
sub
xor
push
pop
movsl
popa
int
out
jne
das
sub
lods
xchg
test
lea
call
int3
dec
fbstp
cld
adcb
cld
push
sub
dec
pop
daa
testl
ja
rclb
fiadds
faddl
popf
divb
xor
ljmp
mov
adc
cmp
jbe
movsl
dec
mov
xchg
int
icebp
int3
mov
mov
insl
cmpsl
out
lahf
decl
outsl
es
dec
vrsqrt28ss
decl
mov
push
insb
push
add
push
pop
and
pop
cs
mov
imul
sub
inc
cmp
and
push
sti
jo
fiaddl
mov
or
sub
int3
add
scas
jmp
daa
or
test
xchg
and
ret
int
push
insl
or
jnp
mov
jg
mov
cmp
aam
fstl
mov
insb
test
pushl
dec
arpl
sub
stos
dec
scas
paddusw
cmp
vmovaps
movsb
xchg
sar
pop
xchg
push
cwtl
mov
rol
shlb
loop
dec
jmp
inc
jge
test
stc
inc
dec
imul
xlat
incl
push
lcall
push
push
decb
data16
jnp
pop
test
lcall
movsb
add
push
xchg
and
ret
in
or
nop
into
les
sbb
mov
jo
test
lahf
call
loopne
pop
pushf
fsubl
ret
rcrl
fsubs
mov
mov
int3
call
jmp
sti
in
out
movsb
sub
cld
push
enter
pop
decl
cs
xchg
fcompl
sbb
iret
test
fistps
dec
test
mov
fldl
jge
sub
cmp
dec
inc
xchg
aas
add
inc
repnz
sti
mov
mov
lods
in
sub
dec
imul
push
ficoml
movsb
xor
in
insb
dec
stos
push
es
imull
scas
aad
inc
pop
and
hlt
incl
lret
pusha
imulb
cmc
xor
or
sahf
add
pop
sbb
outsl
cmp
pushl
vpaddw
out
das
mov
mov
jecxz
scas
mov
popa
sub
xchg
push
lret
xchg
jmp
xor
test
push
xor
xor
mov
jbe,pt
pop
dec
adc
decl
decl
push
adc
cmp
xchg
mov
cld
push
inc
loop
and
pop
call
xchg
cli
lcall
pop
out
mov
xor
leave
incl
outsl
push
iret
sub
cmp
mov
cmp
or
mov
jns
dec
lock
mov
es
inc
cmpsb
fmuls
xchg
mov
lret
lea
hlt
xor
mov
sub
push
inc
bnd
xchg
out
imul
mov
out
inc
incl
add
dec
fdivrs
adc
cmpsb
aam
test
inc
inc
or
mov
sub
jmp
jns
gs
stos
jb
out
lods
pushf
shrb
add
mov
sub
inc
push
decl
dec
mov
jb
jnp
scas
mov
adc
dec
pop
lret
lods
xor
pop
scas
out
and
je
inc
gs
mov
pop
jge
clc
lea
pusha
jae
pop
pusha
mov
inc
rolb
xlat
push
test
xchg
xor
cmp
mov
pop
out
sub
xor
xchg
mov
data16
jp
xchg
xchg
decl
addb
jns
pop
cmp
and
inc
mov
addr16
dec
into
or
and
subl
ljmp
fsub
sub
mov
inc
cmc
pop
mov
decl
addr16
xchg
sarl
inc
lcall
xor
and
mull
repz
mov
sub
xchg
push
xchg
in
icebp
lods
test
xchg
xor
adc
and
mov
xor
xor
decl
ret
lea
jmp
pop
push
adc
lds
popa
add
incl
dec
mov
enter
gs
xchg
mov
inc
pop
out
mov
popf
jb
jge
adc
push
adc
pushf
and
push
imul
test
arpl
in
orb
inc
sbb
insb
test
mul
test
incl
roll
mov
outsb
sbb
mov
js
cmp
jbe
lcall
inc
ficomps
mov
sub
in
ror
push
stc
lret
inc
sbb
pop
sbb
test
sti
arpl
stos
out
int3
insb
std
loope
outsl
sbb
mov
jmp
add
add
lock
push
inc
daa
aam
adc
mov
ja
popf
xchg
ds
pop
cld
pushl
pop
lea
arpl
add
jle
ret
cmp
mov
test
filds
jmp
lock
sub
sbb
jmp
push
mov
inc
add
out
inc
popa
js
clc
pop
dec
adc
or
inc
adcl
out
fldl
in
lock
imul
call
fwait
pop
mov
lock
fildl
pop
fsubl
sub
popa
je
and
lcall
xor
inc
jno
ret
in
cli
jg
test
ficomps
fcomp
mov
data16
mov
incl
sub
iret
ljmp
ljmp
jg
pusha
push
les
ljmp
into
mov
in
adc
loopne
movsb
pop
ds
out
frstor
push
pop
lret
decl
cmp
xchg
dec
xlat
test
and
xchg
call
incl
sub
loop
sbb
push
mov
rcl
xchg
movsl
call
rorl
rcr
in
mov
hlt
jno
nop
jbe
filds
pop
outsb
mov
jmp
inc
xlat
enter
and
jle
inc
dec
mov
mov
fadds
outsl
clc
mov
mov
stos
mov
and
aad
mov
adc
in
sub
and
jmp
test
xchg
fdivs
jne
push
out
add
sarl
dec
and
movsl
xor
or
xor
leave
bound
sub
xchg
ficoml
cmc
sub
std
sbb
outsb
xorl
ljmp
movsb
ret
lea
xor
pop
push
lds
dec
sbb
cmpsl
pusha
push
jecxz
push
ljmp
arpl
stos
xchg
insl
sbb
cmpsb
ss
mov
out
push
jno
fisubl
add
incl
and
outsl
mov
arpl
mov
add
lret
call
hlt
cmp
sub
cs
call
push
cmp
cs
sub
cmp
test
jecxz
inc
roll
push
mov
sarl
cld
aad
fwait
loop
fistpl
popa
ljmp
mov
xor
adc
sbb
mov
fsubs
cmp
jmp
imul
cmp
test
lahf
lcall
mov
imul
int
fdivs
iret
mov
push
ss
dec
cs
ret
xor
dec
test
pop
xchg
jb
xor
ljmp
cmc
mov
and
push
xor
jo
inc
out
bound
popf
lock
lods
or
divb
cwtl
ja
xchg
cmp
mov
data16
xchg
test
cs
cmc
fcmovnb
test
roll
aam
dec
mov
and
data16
decl
clc
shl
jb
loope
dec
rcrl
sub
ja
mov
ds
xchg
jp
add
mov
lret
mov
mov
jg
int
mov
cmp
sbb
sbb
add
mov
lret
push
cmpsl
xchg
pop
daa
mov
mov
push
sbb
jg
pushl
cmpsb
pop
dec
cs
inc
repz
push
mov
sub
pop
shl
and
mov
jmp
in
testb
adc
dec
pop
enter
scas
sahf
mov
pop
int
repz
daa
shl
push
aam
mov
rclb
out
arpl
mov
push
pop
rorl
push
mov
cmp
les
in
clc
rol
jnp
mov
or
les
mov
add
and
adc
sub
ja
into
fcomip
xchg
out
pushf
fs
cli
mov
leave
mov
jmp
jmp
jge
jns
call
aad
push
dec
xchg
mov
out
lret
adc
pushl
pop
mov
imull
out
dec
lret
jl
mov
xlat
outsl
lods
inc
and
pop
insb
jecxz
and
addr16
xchg
daa
xchg
push
cs
repz
aad
pop
mov
std
jecxz
sarb
jmp
aaa
cmpsb
add
mov
push
pushf
loop
std
shufps
adc
cmpl
mov
sbb
adc
push
fcomip
lcall
add
fnsave
mov
ss
lcall
fs
jo
push
insb
stc
pop
pop
iret
sub
fimuls
sbb
cmc
fbld
lcall
lret
mov
sbb
stos
xchg
xchg
jae
addr16
ret
imul
dec
sub
mov
xchg
movsb
add
lds
xor
bnd
lahf
push
cmpsl
in
test
clc
idiv
call
add
cmp
ret
out
movsb
sti
push
jle
add
out
dec
and
lcall
xchg
push
lods
pop
arpl
inc
test
push
adc
jmp
lret
lret
jbe
mov
rorl
push
cltd
ds
sbb
test
dec
adc
pop
shll
sahf
and
or
loope
rcrl
mov
lret
popa
mov
push
daa
xor
inc
fiaddl
mov
sub
xchg
jmp
nop
pop
mov
add
ds
cltd
or
inc
jg
push
jmp
mov
pop
cwtl
or
push
clc
jb
or
fisttps
push
std
dec
jo
sar
aas
push
fwait
cmpsl
xchg
mov
call
mov
aaa
rcll
nop
sub
hlt
movsl
xchg
pop
xor
gs
xchg
repz
lcall
stos
into
fcmovnb
pmaxsw
mov
je
mov
sbb
movsb
lcall
jecxz
cltd
insb
mov
pop
dec
in
sahf
shlb
or
call
insb
jg
mov
jbe
cmc
mov
test
pop
fcmovbe
sbb
push
dec
mov
or
into
mov
dec
inc
dec
jns
dec
or
jp,pn
push
out
imul
cmp
lods
jnp
les
addr16
dec
lock
sbb
jg
aad
mov
test
jg
stos
icebp
jae
dec
ret
js
fcomi
xchg
xor
cmp
sub
add
jp
enter
nop
out
popa
mov
lock
repz
dec
loope
dec
sti
popf
inc
push
pop
sbb
test
outsl
add
mov
call
stc
inc
sub
dec
ljmp
ljmp
xchg
hlt
out
in
jbe
xor
jmp
cmp
lea
scas
adc
dec
in
push
sbb
lcall
decb
pushf
cmp
cmp
fnstsw
mov
ret
pop
or
cmp
decl
cld
mov
fldenv
jb
cltd
inc
insl
out
push
or
lods
sub
lcall
iret
inc
mov
xchg
jbe
pushf
xlat
pop
inc
mov
nop
jne
sub
push
jnp
mov
cli
pop
fistpl
cmp
add
sbb
jae
jg
fcomip
enter
sar
inc
mov
dec
mov
out
sbb
test
mov
xchg
ficomps
aam
pop
jl
out
nop
fldl
xchg
cltd
in
xor
push
inc
and
decl
adc
mov
in
arpl
pushf
shrl
popf
fwait
in
incl
mov
mov
nop
lcall
mov
or
sarl
cltd
xor
ds
imul
cmp
stos
decl
dec
push
divl
sub
push
ljmp
adc
mov
mov
xor
sub
mov
mov
je
jmp
jnp
xor
inc
xor
lahf
pop
or
mov
xor
sub
cmpsl
repnz
dec
jns
or
shlb
cmpsb
mov
incl
or
int3
out
mov
xor
lea
repnz
ds
insl
imul
decl
or
insb
dec
jmp
cmp
pushf
add
lcall
mov
xchg
sub
test
data16
mov
fnsave
fstl
push
xchg
mov
dec
jo
stos
shlb
frstor
je
cwtl
mov
das
ret
pop
xor
loop
dec
dec
adc
jo
or
jmp
lods
xchg
arpl
enter
or
xor
xlat
jg
and
push
adc
les
cmp
decl
std
outsl
xlat
scas
movsl
jno
rorb
mov
push
mov
cmp
jmp
pusha
lods
fdivl
inc
sbb
jmp
out
dec
jle
sub
xor
mov
mov
nop
rcr
je
jg
push
cmp
mov
jns
cld
xor
fiaddl
addr16
call
push
push
push
inc
inc
pop
push
stc
jo
mov
adc
ss
lea
push
cld
ljmp
xor
mov
fs
cmp
adc
jmp
sub
add
mov
loope
mov
sbb
jmp
ret
ss
sbb
je
jno
xchg
repnz
mov
div
or
pushl
std
xorb
cltd
mov
ret
mov
roll
mov
xchg
jg
sub
mov
shlb
vmovd
jmp
pop
sti
pop
lahf
fprem1
jns
gs
jp
subb
cmc
movsl
mov
jmp
xor
in
sbb
pop
lahf
lods
mov
jp
jmp
nop
adc
sub
push
lds
jg
std
inc
out
xlat
fdiv
push
adc
mov
adc
xchg
andl
jmp
hlt
call
mov
dec
cmpl
add
dec
test
sub
test
mov
mov
xchg
add
and
pusha
add
jmp
clc
mov
lret
pop
mov
or
cli
pop
or
test
push
lret
fstl
pop
fldenv
pop
scas
ljmp
or
aas
xchg
iret
mov
jbe
xor
xor
add
stos
add
mov
icebp
pop
cld
sbb
aaa
add
repz
mov
stos
push
mov
mulb
pushf
push
xor
decl
and
mov
cmp
aaa
ljmp
cmp
xchg
jg
rclb
int
cltd
ficoml
fwait
xchg
cmp
fidivs
lret
clc
pop
xchg
lcall
add
inc
das
mov
mov
movsl
imul
fxch
jno
xchg
and
bound
mov
call
andl
shll
fisubl
shl
add
mov
int3
jno
lea
jg
sub
mov
xchg
pusha
mulb
add
ljmp
cmp
pop
push
push
mov
jl
xchg
lcall
add
stos
pop
inc
or
popa
stos
cs
out
xchg
int3
subb
mov
rcl
leave
jns
sti
js
lcall
or
add
mov
fcmovbe
test
mov
jns
cs
incl
cld
jmp
lods
retw
push
shl
xchg
test
xchg
addb
cmpsb
loopne
rorl
sub
and
in
xchg
out
das
or
mov
pop
inc
lcall
imul
jge
shlb
jmp
sub
xchg
push
sarl
jmp
nop
jns
dec
adcl
mov
mov
push
pop
movl
sahf
push
fisttps
sub
xchg
or
enter
lret
mov
jle
dec
in
sub
lock
inc
rorb
xchg
jb
pop
shll
cld
stc
mov
out
clc
jmp
mov
jne
jl
mov
fisubs
pop
adc
imul
rcll
popa
cli
divb
scas
cli
jg
nop
xor
das
adc
mov
outsl
pop
test
icebp
lcall
xor
gs
adc
repnz
lods
inc
ljmp
insl
cmpsl
or
adc
test
dec
xchg
mov
mov
xor
sahf
pop
cmp
pop
xchg
fisttpl
jno
stos
cltd
js
add
decl
mov
mov
inc
add
ficoms
sub
cmp
incl
mov
out
ljmp
inc
add
fimull
addr16
insb
imul
mov
adc
test
mov
fcmove
mov
xor
or
arpl
clc
mov
orb
out
mov
mov
jns
mov
xor
shrl
jg
add
lahf
inc
lea
addr16
push
fcomps
test
cmp
std
ljmp
push
movsb
add
pop
adc
leave
aas
out
shll
inc
fisubrs
mov
cld
xchg
mov
sub
dec
jg
mov
inc
fsubrl
fmuls
cld
and
xchg
cmpb
shlb
test
pop
jno
mov
ss
ljmp
pushl
aas
pop
lods
enter
cmpsl
push
arpl
adc
je
inc
inc
call
int3
sub
inc
inc
pop
popf
arpl
pop
pop
orl
sahf
mulps
jg
out
sahf
pop
jbe
sub
jns
pop
rcrb
dec
jg
pop
push
fwait
adc
call
dec
and
and
test
aam
pop
ljmpw
or
sahf
addr16
incl
pop
clc
jb
jno
and
cmp
cs
jns
stc
call
cli
cmp
cld
sbb
lods
adc
and
mov
nop
out
or
cmpsl
into
pop
lock
lret
mov
jns
add
mov
jbe
mov
out
pop
sub
push
sar
std
lcall
pop
xchg
ds
xor
mov
movsl
call
or
test
adcb
inc
mov
mov
decl
push
stc
mov
sub
xor
add
pusha
xchg
and
loopne
add
and
push
lcall
sub
stos
sahf
lods
push
leave
mov
adc
lar
mov
pusha
arpl
mov
jo
sub
stos
adc
or
test
mov
lcall
xor
jae
lcall
loopne
pop
in
nop
xchg
sahf
dec
and
pushf
into
call
mov
pop
int3
jnp
lea
bound
icebp
push
sahf
fsubs
mov
cs
jmp
out
test
dec
ret
xor
loopne
xchg
add
fdivrs
jg
inc
rcrl
pop
mov
cmp
mov
pop
mov
mov
in
test
cmp
aaa
sub
push
fs
mov
mov
subl
pop
pop
xchg
pop
pop
inc
mov
incl
xor
adc
add
ja
adc
xchg
cmpsl
push
or
jb
out
mov
fcmovne
aaa
mov
out
lods
xchg
into
insb
cmpsb
test
sub
in
cmc
stos
mov
dec
cmp
fwait
jg
daa
rorl
xchg
popf
iret
sbb
lea
cwtl
xlat
aaa
inc
inc
aam
push
inc
pop
repz
fwait
testl
repnz
ret
mov
dec
add
scas
insl
jecxz
ljmp
mov
xchg
inc
js
cmc
add
cmpsb
or
outsl
orl
push
dec
cmc
mov
dec
cmp
push
out
aad
dec
xlat
rolb
inc
adc
xorl
out
std
out
movsb
test
xor
and
xchg
cmp
lcall
jae
jmp
sub
repnz
ljmp
sbb
push
out
outsl
repz
pop
or
out
aaa
sbb
int
loope
repnz
lcall
inc
icebp
dec
adc
pop
mov
int3
cmpsl
shlb
rolb
mov
leave
gs
gs
push
and
popf
pop
dec
push
mov
shll
pop
rcl
cs
lods
incl
imul
pop
push
in
ljmp
mov
push
test
push
bound
push
decl
adc
outsl
das
sbb
lds
lret
dec
jo
test
shlb
or
dec
jecxz
decl
mov
mov
adc
xchg
xchg
jmp
insl
or
lcall
lcall
push
das
jbe
push
push
sbb
sub
addl
sbb
gs
jmp
adc
mov
xlat
addb
test
xchg
push
mov
xchg
andl
pushl
mov
clc
xchg
addb
dec
fbstp
xchg
gs
dec
push
popf
jnp
push
out
adc
fisubrs
add
push
dec
jnp
sub
xchg
ficompl
or
mov
mov
aam
mov
cld
xor
inc
pop
out
shlb
ja
pop
push
outsb
insb
mov
jp
fwait
sub
lcall
lahf
dec
leave
fildll
cmc
fwait
icebp
push
xor
and
push
pop
add
lcall
insb
and
xchg
je
mov
icebp
shll
in
imul
sar
mov
or
inc
pushf
mov
pushl
and
xchg
pop
mov
cmp
xor
inc
fld
cmp
jno
push
imull
aad
lock
inc
or
es
in
imul
fcomip
or
mov
jbe
mov
cmp
pop
aaa
cld
sbb
fstps
sbb
fwait
inc
sub
arpl
pushl
aas
lea
or
lock
sub
dec
fistl
shrl
mov
inc
pop
shrb
jge
aas
push
shl
stos
sub
or
decl
push
or
xchg
scas
add
leave
jo
push
fadd
jg
movsl
mov
mov
enter
cmp
aaa
push
negl
or
pop
xchg
iret
fbld
mov
lret
out
mov
popl
cmpsb
out
add
ljmp
jno
xchg
add
add
nop
add
incl
pop
push
push
call
fistpll
add
xor
push
out
mov
mov
iret
cmc
jmp
push
aas
testb
cmp
mov
sub
scas
das
xchg
mov
idiv
adc
adc
dec
xor
loopne
mov
pop
mov
imul
test
pop
inc
push
fs
ljmp
sti
int
addr16
lcall
shl
mov
popa
lahf
orl
ret
mov
in
jnp
pop
lea
les
lahf
jbe
xchg
cmp
lcall
and
hlt
ror
dec
lock
add
dec
js
cmpb
push
pop
sbb
adc
incl
pop
jg
push
push
and
xchg
lods
inc
push
flds
les
jae
mov
and
mov
cmpsl
pop
sbb
shrl
data16
pushl
lahf
cmpsb
ljmp
sub
jb
adc
dec
mov
pusha
dec
mov
push
movsl
arpl
out
dec
out
shll
jmp
mov
xchg
addr16
push
or
jmp
rcr
test
decl
lds
and
pop
sub
ret
iret
push
sahf
mov
sbb
sub
mov
scas
test
movsb
push
lahf
add
cmp
into
pusha
xchg
dec
adc
xor
ja
add
ret
loop
ret
cld
pop
pushf
inc
cmp
xlat
xchg
push
mov
data16
call
mov
imul
mov
xor
xchg
jecxz
mov
adc
ds
popa
pop
push
in
gs
shr
lcall
and
mov
rcrl
int
cmpb
mov
sub
fisttps
sbb
sbb
pop
data16
mov
lods
jp
jg
sub
call
lret
cmp
sbb
loope
iret
lock
iret
inc
loopne
add
into
fsubr
xchg
pop
pop
lret
call
inc
push
loopne
cmp
jmp
mov
insb
dec
mov
outsb
sbb
inc
jne
mov
movsl
inc
cld
jmp
bound
xor
push
cld
jg
cmc
pusha
lahf
out
mov
in
jno
xchg
inc
mov
push
shrl
add
in
jb
ret
fidivs
mov
mov
das
popf
movaps
call
lahf
xchg
mov
jne
or
dec
imul
out
dec
int
pop
push
mov
rcr
adc
scas
movsl
pop
or
fcos
sbbb
cmpsb
mov
inc
bound
iret
cmp
dec
xor
decl
scas
mov
stos
inc
in
imul
mov
imul
lods
fnstenv
decl
and
sub
jbe
jne
jnp
inc
mov
out
decl
xor
mov
inc
nop
mov
mov
dec
sbb
or
pop
pop
mov
cmp
lcall
adc
clc
sbb
sbb
leave
call
sub
mov
stos
mov
mov
daa
pop
inc
inc
std
pop
pop
sbb
adc
loop
test
insb
or
incl
je
inc
mov
mov
sti
fsubr
mov
dec
ret
std
jg
xorl
lahf
dec
pop
xlat
mov
xor
aaa
add
mov
mov
cltd
sub
ljmp
xor
xor
jmp
cmpsb
in
stos
add
dec
or
lds
dec
mov
adc
xchg
jg
inc
loope
icebp
mov
test
cld
xchg
push
ljmp
xor
xchg
mov
fcomip
lcall
add
loopnew
arpl
mov
cmovns
es
outsl
and
dec
mov
mov
cmp
and
xor
aaa
idiv
pop
dec
and
in
push
rcl
je
or
call
xor
jecxz
jmp
inc
and
cwtl
ret
mov
inc
addr16
add
sbb
jp
mov
movsb
shl
jg
pop
out
pop
fsubrl
add
lahf
add
mov
shrl
mov
repnz
push
adc
ljmp
int
addr16
xchg
push
cltd
inc
jmp
and
push
lahf
repz
cltd
sbb
fucom
adc
sub
and
daa
dec
jmp
int3
movsb
pop
cld
mov
bound
mov
in
decl
aam
scas
aam
insl
cmp
jno
stos
xchg
mov
out
jecxz
dec
loope
clc
mov
mov
es
ss
adc
mov
into
repnz
arpl
outsb
popa
jae
out
xchg
mov
ret
mov
int3
add
xor
lcall
push
test
sbb
daa
dec
xchg
adc
call
in
fcoml
push
inc
xor
subl
mov
xlat
out
sbb
ss
movsb
mov
jae
ljmp
mov
bound
jl
adc
jge
jmp
pop
std
lret
stc
loopne
negl
cmp
stos
push
xchg
pushl
add
xor
sbb
mov
add
pop
lea
sti
mov
sahf
and
mov
ljmp
repnz
sbb
fidivl
lods
fistps
adc
aas
mov
dec
int
add
sub
or
cmpsb
adc
incl
mov
pop
sub
dec
mov
fcmovnbe
shll
push
or
pop
mov
pushl
jg
jo
mov
iret
and
push
pop
loope
adc
imul
inc
in
call
movsl
fdivrs
fists
mov
insl
scas
mov
pushl
std
inc
push
dec
mov
add
aad
ljmp
sub
addl
das
pop
and
incl
cmc
rorb
popa
les
jg
pop
decl
int3
mov
jne
sahf
xor
inc
xlat
pop
mov
in
jnp
cltd
pop
sub
cli
lcall
clc
test
cmpsl
adc
stc
mov
aad
popa
into
xor
std
es
ja
stos
xchg
xchg
mov
mov
or
sbb
mov
push
or
sub
sbb
mov
cwtl
je
movsb
push
ljmp
roll
and
nop
xchg
mov
or
or
fdivrl
push
aaa
cld
incl
jle
cmp
mov
clc
inc
adc
inc
jle
ret
xchg
incl
xor
les
mov
fdivrl
scas
ljmp
je
jmp
jo
inc
add
and
pop
dec
mov
lcall
mov
xor
call
cmp
out
negl
pop
cmc
pushl
or
aam
shlb
sbb
lock
popf
push
shrb
rcrb
aas
call
cmc
rcr
mov
ret
sub
add
jne
les
xor
pop
or
sbb
jg
lcall
adc
dec
pop
xchg
fs
pop
xchg
jp
jp
out
clc
mov
sbb
pop
mov
jmp
movsb
cmpsl
fs
roll
fs
scas
and
xchg
or
out
out
enter
call
cmc
add
lret
aas
sub
aad
dec
cmp
into
icebp
clc
call
push
jmp
jno
int3
push
sbb
stos
cmp
adc
push
incl
lods
loopw
idivl
inc
je
adcl
fadds
imul
dec
mov
jb
jge
ret
gs
fnsave
aad
push
sarb
cltd
push
pop
and
cmp
lcall
push
enter
dec
inc
outsl
scas
inc
xlat
std
push
fs
mov
mov
fwait
pop
inc
aad
out
shrb
xlat
es
decl
inc
jl
jmp
stc
pop
scas
mov
jl
lcall
data16
addr16
xchg
fcom
adc
subb
ret
adc
jmp
lcall
imul
outsl
es
jmp
ret
sbb
cmc
decl
and
mov
or
xchg
mov
rcr
xchg
add
sub
dec
jl
outsb
das
sub
mov
imul
cwtl
fnstsw
ljmp
outsb
add
add
cmp
test
test
fldl
push
add
mov
in
outsb
or
cwtl
cmp
ret
out
inc
addl
sub
aas
pushl
ds
push
and
out
repnz
fwait
cltd
jg
insl
pop
and
dec
stos
jp
mov
subb
pop
ljmp
xor
inc
shl
divl
dec
jecxz
dec
sub
lcall
pop
pop
orl
jecxz
pop
enter
dec
fsin
pop
fdiv
cmp
adc
add
mov
sub
mov
xchg
decl
lcall
dec
push
test
jne
lret
pop
jge
mov
mov
fcoms
xlat
cli
sub
jl
test
fdivrs
mov
je
sub
lcall
add
fisubl
frstor
out
jp
cld
imul
mov
fsubs
jae
sahf
movsb
mov
adc
filds
sub
pop
lea
in
out
clc
mov
add
imul
sub
aas
inc
mov
packsswb
dec
fwait
cs
push
cld
test
jne
es
add
xchg
call
cltd
sbb
cmp
cmp
mov
push
jmp
add
pop
push
test
fisubs
repnz
jns
or
scas
push
pop
aas
outsl
ljmp
xchg
sti
gs
push
adc
push
inc
dec
cmp
or
lock
cmpsb
mov
fiaddl
and
call
xor
jae
jmp
inc
in
mov
push
xor
inc
inc
jmp
roll
jecxz
sub
loopne
ds
addr16
jmp
sub
fiadds
cltd
out
sbb
loop
cmp
mov
std
xchg
int3
mov
cmpb
in
in
nop
pushl
cli
call
ret
dec
mov
cwtl
add
mov
xchg
in
sub
jb
out
jge
dec
mov
or
pop
mov
dec
and
test
jg
jmp
cld
mov
xchg
imul
jno
cmp
test
outsl
mov
dec
adc
es
cs
filds
or
mov
mov
inc
xor
aaa
aaa
sub
mov
mov
push
stc
jge
or
cmc
add
lcall
cmp
jg
outsl
loopne
sub
or
pop
push
cwtl
aad
dec
daa
pop
lret
sub
nop
lock
jge
mov
xor
icebp
adc
pcmpgtw
data16
mov
std
call
std
call
data16
testb
sti
int
mov
loop,pn
jmp
cmp
mov
in
jbe
cmp
jg
movsb
int
shll
xchg
mov
cwtl
cmp
jg
jl
sub
jae
dec
adc
sub
rcl
push
enter
cld
lcall
adc
push
or
stos
rolb
ljmp
inc
mov
pushf
and
insl
aas
in
ud0
mov
mov
mov
dec
and
getsec
movsl
jbe
hlt
clc
mov
ljmp
repnz
adcl
fwait
jmp
iret
mov
decl
lret
xor
push
test
pop
mov
cs
mov
pop
out
sar
ljmp
leave
test
std
arpl
mov
rol
and
and
lcall
enter
dec
mov
xchg
rcrl
cmp
mov
fs
incl
sub
xchg
fsubrl
push
add
adc
lds
enter
jbe
sub
or
call
testb
lret
mov
jo
cwtl
cltd
addr16
adc
push
sub
jmp
sub
out
mov
mov
pop
sbb
cmp
jb
mov
adc
inc
cmpsb
xor
stc
movsl
xchg
mov
sar
incl
mov
ljmp
and
div
mov
sbb
jg
mov
aam
out
scas
cmp
aaa
jmp
jp
jmp
dec
adc
ficoml
lret
and
bound
push
or
pop
insb
cld
decl
in
loop
inc
adc
call
fdivrl
xchg
mov
dec
int
stos
xchg
pop
shl
outsl
pop
loope
inc
mov
arpl
icebp
ljmp
movsl
icebp
or
movsb
jo
cmp
jmp
xchg
sbb
std
fisttps
mov
call
pushw
mov
add
lds
rcl
negl
inc
or
lcall
sbb
imul
xor
xchg
ljmp
incl
int
add
rcr
fldz
out
mov
sti
pushl
mov
movsb
nop
outsl
dec
cmpsb
jae
scas
mov
dec
inc
and
or
xchg
mov
jmp
inc
xchg
loope
push
sub
cmp
stc
and
and
aad
rclb
pop
mov
adc
rorb
je
push
push
imul
mov
xchg
dec
lahf
outsb
addr16
rcr
sbb
iret
out
sarb
mov
sbb
and
adcl
push
adc
lcall
stos
push
sarb
or
jbe
jae
mov
lcall
push
rorl
ss
loop
ffreep
xor
dec
mov
xchg
fdivl
divb
jle
rcr
add
dec
sub
int3
fwait
adc
out
int3
fcmovnbe
mov
lock
dec
pop
repz
cmp
iret
test
cmp
imul
and
shlb
pop
cld
fistl
loope
push
sbbb
ds
jno
jb
rcll
jle
std
adc
inc
pop
cmp
add
xor
xchg
sti
das
mov
pop
xor
pop
test
sahf
fsubrl
dec
scas
xchg
xchg
xor
rcr
int3
and
lcall
lahf
xor
cltd
pop
inc
dec
dec
lds
pop
fldl
ret
add
out
pushl
inc
in
test
iret
push
aam
dec
out
jecxz
cmpsl
popf
sub
idivb
adc
inc
dec
add
decl
inc
sub
pop
xchg
popa
inc
pop
leave
pop
shll
call
mov
xor
rcrl
and
bound
jo
adc
mov
jno
arpl
pop
pop
icebp
lcall
xchg
mov
pop
and
ja
pushf
jmp
mov
jmp
flds
jmp
int3
mov
mov
add
jle
cmp
cli
nop
js
dec
pusha
std
jbe
mov
dec
pop
dec
adc
call
jae
in
cmp
popa
xchg
shl
cmp
cmpsl
incl
and
in
in
pusha
mov
shlb
or
dec
lock
decl
decl
cmpsb
sub
fcmovne
imul
mov
shrl
ljmp
pusha
aam
incb
arpl
movsl
xchg
jb
repz
out
xchg
add
xchg
add
imul
xchg
push
push
cltd
dec
cmpsl
ljmp
sahf
out
inc
mov
rcl
shrb
lds
xor
jmp
inc
xchg
loop
dec
jmp
adc
jne
push
sub
lcall
push
shlb
fisttpl
mov
ljmp
dec
insb
cli
mov
inc
cmp
stos
inc
ret
out
or
push
into
xchg
test
mov
pop
pushl
or
inc
add
ds
push
mov
xchg
imul
icebp
incl
push
sub
mov
mov
push
int
bound
ljmp
sub
aam
cmc
insl
stos
xlat
iret
jnp
pushf
xchg
mov
mov
call
sti
arpl
add
mov
aad
and
mov
cmpsb
mov
inc
test
std
data16
inc
mov
fwait
hlt
imul
and
fs
fldl
ret
or
test
out
lret
clc
pop
sub
lds
mov
int
sub
rcll
jne
jp
inc
popf
les
inc
lahf
or
call
cmp
jecxz
add
xor
lret
out
sbb
sub
mov
lds
cmp
daa
popf
aad
dec
or
mov
sbb
pop
bound
push
push
xor
pop
shr
nop
ss
sbb
fcomip
adc
cmc
scas
push
hlt
call
sub
test
jb
push
dec
in
imul
aaa
lcall
cli
outsl
repnz
ljmp
out
int
aaa
adc
lcall
scas
mov
dec
sub
dec
test
pushf
adc
jmp
sub
add
outsb
push
sbb
pushl
sbb
adc
loopne
add
mov
pop
jle
loopne
dec
cmc
lret
movsl
scas
push
sub
sbb
fidivrs
mov
pop
jmp
hlt
hlt
push
jmp
mov
mov
push
jecxz
shr
dec
nop
in
xchg
or
pop
lcall
jmp
inc
mov
das
outsb
jl
mov
jmp
jo
cmp
or
in
and
jne
push
xlat
rcrl
mov
fidivl
adc
sti
out
inc
cmp
ror
fstpl
xlat
mov
xor
ljmp
jg
in
pop
mov
pop
sti
mov
push
clc
aad
imul
out
call
test
ljmp
dec
jbe
sub
dec
pop
push
daa
and
jns
notb
xchg
pusha
daa
mov
dec
mov
push
ret
lcall
jge
fdivrs
and
clc
stos
inc
jb
adc
out
ret
pop
cmp
es
decl
sbb
and
pop
add
pop
mov
cmp
decl
insb
or
add
test
aam
cmp
fwait
into
das
out
in
cmpsb
sub
xchg
jl
push
mov
adc
xor
xchg
xchg
dec
or
adc
rcrl
mov
xor
sbb
cli
jns
std
ljmp
mov
mov
test
pop
sbb
jns
adc
mov
cmc
or
fidivrs
or
mov
inc
fdiv
outsb
outsl
dec
pop
jns
incl
mov
ljmp
outsb
jae
sar
or
iret
insl
sbb
add
shr
mov
insb
sti
hlt
lods
shll
xor
pop
cmc
pushl
and
lcall
mov
pusha
cmp
movsb
and
jg
out
ret
pusha
popa
scas
and
mov
fldenv
in
xchg
shlb
lea
call
jg
mov
addb
cmpsl
fidivl
sub
push
fsubs
rol
inc
lods
add
lcall
pop
pop
jge
repz
push
in
fdivl
jle
mov
push
cs
shlb
jg
cmp
and
mov
push
push
jg
xchg
adcb
call
mov
push
std
add
loope
je
orl
lret
push
inc
ss
mov
push
inc
imul
rclb
popa
orb
icebp
cmp
jo
mov
dec
dec
jp
fidivrs
rcrb
adc
push
jp
pop
dec
jno
push
mov
jo
aas
jmp
in
dec
jecxz
inc
adc
inc
pop
jmp
sahf
mov
xchg
enter
repnz
cmp
jmp
fdivrs
push
or
out
orb
cmp
adc
dec
pop
addr16
call
mov
sub
mov
jns
pop
adc
and
fcmovb
jecxz
pop
cmpsb
mov
adc
inc
stc
fcomps
shl
and
decl
sbbl
mov
add
scas
inc
cs
xchg
and
shlb
and
jmp
imul
push
outsl
scas
sub
or
sbb
insb
pop
ret
mov
call
std
dec
jb
xchg
mov
ljmp
test
pmulhuw
test
or
decl
mov
lds
push
push
inc
imul
or
pop
inc
faddl
xchg
lret
inc
cli
or
movsb
stos
das
popa
mov
push
xchg
testb
add
jo
stc
pushl
adc
ja
pushf
es
lds
dec
inc
inc
mov
cmpb
cwtl
sbb
mov
fs
or
jmp
cmp
adc
mov
fisubrs
lcall
call
dec
sbb
jmp
je
test
add
xlat
cmpsl
jno
adc
mov
clc
out
je
mov
sbb
or
int
xlat
lods
clc
fistpl
ljmp
mov
push
lods
push
xchg
enter
shll
and
lock
lock
incl
scas
pop
mov
out
icebp
and
jl
xchg
pop
dec
lods
pop
mov
scas
call
xchg
xchg
ret
aad
mov
mov
mov
scas
test
adc
jae
pop
inc
arpl
decl
add
or
add
mov
pusha
ds
out
adc
icebp
jge
repnz
xor
incb
xor
in
sarb
jg
call
cmpsb
and
je
and
dec
inc
fcom
add
loope
les
arpl
iret
cmp
aad
push
cmc
loope
dec
rol
add
addr16
inc
ja
lock
jg
mov
sub
sbb
mov
sbb
in
sub
icebp
or
push
cs
mov
add
clc
aaa
lcall
fwait
adc
pushl
shrb
cli
lea
test
mov
fistpll
inc
cld
or
ret
in
mov
loopne
add
aas
clc
arpl
inc
jns
mov
imul
inc
loop
inc
xchg
std
std
out
jp
hlt
imul
sarb
push
rorb
fbstp
cmpsb
test
stos
testb
cmp
aaa
std
stc
mov
ja
icebp
push
pop
enter
and
popf
hlt
iret
dec
pushf
icebp
push
bound
int3
fld
into
add
add
add
clc
jg
cltd
xlat
pop
xor
cs
inc
mov
imul
sub
mov
xchg
ret
int3
test
nop
ja
clc
mov
and
sti
leave
jecxz
lcall
mov
add
jp
xor
sbb
add
lcall
aas
dec
jg
call
jae
pop
mov
pushf
jmp
or
ljmp
xchg
mov
in
jmp
or
mov
lea
push
outsb
int
notb
cmp
enter
jg
out
movsl
add
cmp
inc
push
sarl
jmp
jns
ljmp
push
sti
fcmovu
adc
sbb
dec
xchg
icebp
jmp
push
mov
fcompl
roll
sar
incl
stc
clc
mov
push
add
fdivl
loope
int
pop
fwait
int3
popf
adc
movl
push
ljmp
mov
call
stc
cmp
mov
or
in
int
mov
lock
inc
divb
jbe
push
push
jns
xor
mov
das
mov
decl
xor
in
cli
sub
scas
mov
inc
imull
lods
pop
push
pusha
popf
movsb
mov
sbb
ja
ret
pop
imul
cmp
gs
cmpb
call
fnstsw
addl
les
repz
into
cmp
scas
xchg
test
pop
loop
stos
pop
cmpsb
sahf
cmc
cmp
jmp
mov
call
push
dec
negl
jl
arpl
fmuls
insb
dec
loop
stc
add
jl
mov
into
add
xor
push
mov
push
sub
push
movsb
and
dec
ljmp
clc
incl
outsb
outsl
mov
bound
shlb
cld
movsl
cld
shlb
sbb
fcomps
leave
pushl
faddp
push
and
pusha
mov
xchg
loope
ljmp
lahf
cli
out
clc
jmp
daa
repnz
aad
pop
mull
cmp
out
stos
mov
enter
scas
sub
outsl
mov
mov
push
sbb
sub
sub
xchg
fldcw
lcall
jb
inc
in
orl
inc
fcomip
mov
pop
sub
jmp
xor
sbb
idivb
dec
lea
testl
int3
in
fstpt
cld
leave
or
dec
mov
pop
dec
jp
add
rcrb
orb
xchg
xor
test
or
addr16
fsubs
ljmp
pop
push
dec
sahf
adc
sbbb
xlat
mov
shl
vcvtdq2ps
dec
insb
incl
rcpps
enter
mov
inc
xacquire
or
and
repz
pop
in
test
xchg
push
addr16
scas
pop
rorl
adc
nop
dec
pop
incl
mov
sub
outsl
clc
incl
jns
nop
scas
out
jmp
stos
nop
orb
jbe
daa
data16
cltd
outsl
mov
out
movsb
cltd
mov
lret
push
mov
cmc
aaa
stos
cmpsl
rcl
mov
xor
mov
dec
incl
pop
add
or
adcb
out
cwtl
mov
cmc
stc
jmp
mov
repnz
incl
push
in
dec
add
pop
mov
adcl
xlat
inc
cld
pushl
lcall
push
shlb
inc
mov
jo
andb
inc
push
xchg
cmpsl
push
push
inc
add
in
xchg
xchg
xchg
aaa
pop
mov
xor
inc
lret
add
inc
cld
ja
ret
xor
cmp
jg
adc
bnd
ljmp
fwait
out
dec
xchg
in
push
es
dec
xchg
js
adc
incl
adc
sub
mov
mov
movsb
pusha
mov
mov
push
and
cwtl
sub
mov
sbbb
push
pop
int3
lret
xchg
in
mov
fldcw
pop
int
mov
pop
inc
lcall
mov
mov
rolb
dec
add
insl
cli
mov
or
cmp
fildll
clc
mov
inc
xchg
pop
int3
adc
dec
push
cltd
je
xchg
pop
sahf
popa
jp
push
ljmp
rorl
aas
adc
hlt
dec
rcrl
push
in
iret
or
mov
pop
push
add
daa
add
rep
cmp
inc
testb
mov
test
xor
je
loop
push
fsubr
sbb
lods
out
cld
mov
cli
jno
decl
inc
dec
imul
arpl
bound
rclb
xchg
jbe
jge
jmp
aas
sahf
and
in
dec
jmp
add
jnp
movsl
jl
pushf
pop
xchg
fdivrl
cmpsl
dec
jg
lcall
inc
cmp
rcrb
rorl
es
jecxz
bound
lds
jg
push
adc
mov
mov
scas
fiaddl
jns
rclb
lock
call
std
test
jl
mov
mov
std
push
shll
stos
decl
and
lods
xchg
fmull
fsubl
push
mov
pushf
adc
jmp
stos
lret
addr16
or
mov
pop
add
lods
stc
ds
pop
loop
or
aam
add
dec
hlt
gs
add
jo
jbe
push
or
sub
shlb
decl
mov
xchg
out
dec
jp
xchg
cmp
neg
or
loopne
and
mov
jg
into
dec
arpl
sbb
xchg
int
mov
repz
jg
add
or
pop
fwait
xchg
je
xor
xor
add
cmpb
sbb
sub
mov
jl
decl
repnz
xor
push
lcall
jl
addr16
jg
in
popa
je
adc
fisubrs
mov
and
stos
mov
js
adc
add
or
rcl
mov
js
lds
shll
mov
clc
xchg
xchg
mov
push
mov
call
loopne
shlb
xchg
jb
jg
push
fiaddl
leave
shll
call
jg
ret
call
or
pop
push
and
cmpsb
push
lods
push
push
pop
dec
incl
ret
arpl
cmp
std
nop
das
lods
lds
bound
and
inc
clc
sub
ljmp
pop
jmp
arpl
add
add
mov
das
sub
xor
into
jbe
pusha
call
cld
lret
in
je
sbb
or
dec
push
loope
outsb
pop
add
dec
and
lret
mov
sub
dec
push
xchg
ss
out
xchg
sub
lds
test
push
inc
rcrl
push
ljmp
lock
lea
pop
inc
cs
jg
shll
mov
mov
lahf
gs
cmp
loope
cmpsb
stos
fsubl
in
cs
cltd
or
dec
add
sub
call
mov
and
in
dec
push
lcall
lods
icebp
insb
mov
cmc
decl
test
lods
mov
outsb
xchg
daa
push
xor
mov
aam
sti
inc
cld
incl
subl
movsl
adc
mov
add
xor
lea
inc
jg
fisubrs
mov
add
jmp
jbe
jge
ret
mov
jo
popf
subl
decl
mov
icebp
or
loopne
or
fcompl
imul
cli
scas
pop
pop
fwait
call
mov
adc
add
lcall
pop
cld
aam
je
jge,pn
fidivrs
mov
hlt
lock
fidivl
imul
into
mov
ret
test
fists
ja
insl
loopne
enter
in
sti
or
fld1
cld
mov
call
dec
xor
sarb
call
mov
mov
loopne
data16
ss
bound
xor
out
cli
jmp
or
loope
xchg
imul
cs
and
push
pusha
pop
jecxz
mov
mov
jp
movsb
mov
inc
add
ljmp
std
scas
mov
js
sbbl
sbb
xor
add
push
pop
jbe
add
fcoml
or
push
clc
in
pop
lcall
lcall
add
sbb
arpl
inc
jmp
rcrl
pop
gs
mov
ficomps
andb
cld
mov
mov
xchg
pop
pop
cmp
dec
push
sbb
mov
jg
fs
out
jecxz
lcall
out
mov
shl
jo
sub
pushl
notb
rcl
xor
push
sbb
js
or
lcall
jle
incl
mov
fistpll
dec
xor
adc
arpl
adc
xchg
loope
fisttpl
pushl
fsubl
jp
xchg
sbb
pop
jg
pushf
fdivr
incl
nop
sub
inc
lea
jnp
or
cmc
mov
xor
mov
ljmp
bound
mov
test
jmp
push
movb
in
daa
mov
mov
inc
test
ret
stc
filds
sbb
cli
xchg
ss
jne
sbb
fstpl
jbe
fildl
stos
enter
jmp
xchg
inc
insl
lea
inc
cmp
shll
aas
movsl
ret
in
lcall
scas
pushf
jle
or
sbb
int
jg
mov
push
stc
adc
ljmp
je
mov
or
fsts
lcall
ljmp
jg
shlb
xor
scas
test
lcall
incl
scas
xor
repnz
cmp
sbb
sahf
in
mov
decl
fimull
jg
mov
or
adc
dec
cs
inc
pop
or
push
test
cmp
fbstp
inc
push
xchg
scas
fisubl
sbb
ja
cmc
inc
push
int3
test
mov
ss
jnp
ja
mov
filds
call
mov
adc
or
dec
call
cli
js
dec
jecxz
fisttpll
popa
loop
sub
sahf
push
icebp
out
cwtl
push
cli
adc
out
std
call
sbb
xorl
or
mov
jbe
je
std
pop
add
sub
jge
arpl
cs
mov
sub
sbb
mov
lods
push
and
pushl
rol
cld
fdivs
xor
pusha
mov
or
and
mov
cmp
lcall
jae
in
lret
mov
mov
aaa
ja
or
mov
sub
rcl
inc
pop
mov
push
adc
pop
mov
xor
xor
push
jne
adc
cmp
pop
pop
scas
xchg
mov
push
scas
jno
jbe
lcall
or
popf
rcrb
add
lcall
loopne
mov
xor
or
sub
imulb
and
cmp
rcrl
enter
out
cmp
test
inc
nop
mov
sbb
fcomip
lcall
std
add
dec
jg
imul
cmp
inc
dec
sti
aad
into
pushl
out
outsb
lock
in
jns
mov
pop
inc
xchg
mov
cmp
aaa
inc
xchg
loop
pushf
decl
lock
dec
mov
fnstsw
sub
int
dec
and
testb
sub
insb
sbb
adc
jnp
pop
and
inc
aaa
mov
add
inc
es
xlat
insl
inc
pop
lods
cltd
out
subl
mov
and
outsb
fs
push
or
cli
addl
adc
inc
rol
add
and
decl
decb
push
imul
xchg
lahf
sbb
nop
mov
ds
add
insl
jge
cmp
lea
lock
dec
mov
xor
jle
cmpsb
sub
clc
loop
inc
mov
dec
or
jmp
push
xor
lods
ss
repz
mov
cmc
and
stos
ja
in
jmp
into
ljmp
jp
bound
je
scas
fcomp
mov
lea
xchg
out
cli
jmp
inc
clc
sarl
aas
push
icebp
lods
pop
in
movsl
push
fldenv
jmp
adcl
inc
add
loope
mov
and
pop
orb
daa
aas
loope
inc
and
ljmp
stos
mov
jp
les
cmp
movsl
adc
outsb
adc
call
cmp
in
pushl
pop
sbb
sub
pop
mov
call
dec
arpl
and
je
lds
xchg
jle
sbb
pop
push
lea
push
mov
xor
xor
jl
pop
addr16
in
pop
dec
loope
das
mov
insb
fnsave
xor
call
hlt
pop
movsl
bound
mov
mov
jg
paddsb
fstl
mov
inc
lds
mov
mov
mov
jg
testb
cld
push
or
push
ret
sub
cmp
lcall
jl
mov
xor
pop
sub
mov
dec
pushf
jg
ds
sbb
loopne
xchg
sub
and
in
sti
incl
sarb
repz
leave
push
inc
movsb
push
fdecstp
dec
jle
out
mov
adc
or
cld
decl
leave
das
jbe
fwait
ja
fwait
into
int
es
ljmp
rol
add
divl
mov
rcrl
pushl
leave
and
or
mov
lock
add
xlat
sub
inc
scas
fidivrl
sti
out
pop
xor
dec
push
test
nop
mov
mov
sti
das
loope
incl
mov
sbb
sbb
add
cmpl
aam
jp
pop
cmp
sub
inc
loopne
in
mov
insl
in
dec
mov
ja
and
push
inc
out
sbb
dec
and
inc
inc
std
idivb
lods
ljmp
xchg
dec
aad
clc
pop
mov
push
cmp
lcall
pop
jp
jb
pop
xchg
mov
add
mov
out
jg
stos
inc
insl
xchg
cmp
ret
mov
xlat
push
or
dec
dec
cli
into
jno
or
call
dec
mov
adc
pushf
sub
jg
stos
push
aas
movsl
xchg
lds
jo
mov
incl
add
pop
lods
lcall
cmp
test
jmp
sbb
notl
pop
int3
sbb
icebp
mov
mov
and
cmp
or
lock
dec
lcall
pop
lahf
add
gs
shll
push
aad
fcomip
or
and
in
iret
hlt
rorb
push
xor
jecxz
scas
addb
mov
in
dec
xchg
or
or
das
clc
lcall
ljmp
les
cli
cmp
push
rorb
incl
cld
or
aam
jae
lahf
lea
nop
loopne
or
sub
jb
outsb
dec
out
clc
inc
inc
subb
mov
pop
andb
call
add
mov
ficomps
leave
test
sub
fwait
jle
mov
xchg
decl
out
fimull
fdivrs
pop
lea
dec
loope
popa
je
rcrl
scas
test
stc
mov
pop
fnop
push
mov
clc
mov
stos
loop
daa
inc
push
xchg
ds
std
decl
and
xchg
arpl
in
aad
mov
inc
nop
jge
outsb
mov
call
std
rclb
int
insb
leave
mov
jg
mov
adc
fidivs
sub
sbb
lahf
or
sbb
les
or
inc
dec
dec
test
filds
and
mov
mov
pushl
sub
insb
aas
dec
aas
rorl
scas
loope
in
mov
scas
fisubs
add
jns
aaa
xchg
movsl
insl
mov
xchg
popa
iret
lcall
js
fsubs
dec
packuswb
imulb
leave
cmpsl
jge
mov
add
cmp
xor
inc
inc
popl
out
fwait
xor
loop
jg
loop
add
in
xor
jmp
leave
mov
xlat
stos
cmpsb
andb
fidivrs
lcall
add
cmpsl
sub
mov
pop
sub
xor
inc
push
out
push
decl
daa
inc
loope
jmp
int3
sbb
stos
fcompl
out
sbb
loop
push
into
cld
push
or
negb
leave
mov
cli
fcomps
or
dec
adc
push
cmp
scas
push
xor
mov
das
inc
loopne
stos
mov
pop
pushf
out
out
push
mov
jmp
icebp
ret
inc
rcrl
pusha
xor
in
ret
enter
or
sub
xchg
ss
push
enter
pop
ss
fiadds
jg
dec
adc
sub
and
stos
inc
cwtl
repnz
pusha
inc
add
push
cld
pop
incl
cmpsb
mov
xor
cwtl
sbb
pop
lcall
movsb
lea
jae
push
dec
jno
fsubl
rolb
jmp
out
inc
dec
and
add
fcomip
inc
popf
dec
mov
jb
rcrb
in
sub
out
es
stos
jge
jmp
repz
adc
in
push
mov
lahf
ljmp
xor
ret
adc
inc
jno
cmpsb
in
and
xchg
mov
mov
outsl
dec
jnp
xchg
mov
lcall
pop
prefetchw
xchg
sub
aam
mov
es
and
fs
call
decl
xchg
adcb
and
xchg
in
mov
mov
incl
xchg
jnp
mov
sbb
out
clc
pushl
adc
sub
jno
ret
pop
pop
xchg
or
lea
jmp
icebp
mov
fwait
scas
pop
push
cmp
dec
addr16
adc
iret
insb
popa
jp
dec
cmp
out
imul
xlat
das
loope
adcb
sbbl
pushl
and
rcrl
dec
and
inc
sub
daa
inc
push
mov
fs
das
xchg
xor
xchg
fcompl
cmp
filds
test
shrl
ljmp
popa
idiv
sarb
cmp
stos
out
sbb
and
incl
repnz
sahf
mov
adc
or
sub
pop
dec
push
dec
mov
jle
out
xchg
mov
inc
popf
pop
cltd
or
cmc
or
nop
ud0
cld
jmp
inc
xor
sub
jae
stos
ret
sub
sub
adc
push
adc
jecxz
xor
jmp
loope
sbb
cmp
sbb
pop
cmc
loope
dec
insb
les
jg
sub
sbb
test
divb
repnz
pop
push
add
bound
dec
lcall
or
jg
sbb
in
pop
cmp
or
loop
das
pop
add
dec
clc
ljmp
jecxz
or
fimull
mov
loop
mov
jne
push
mov
lock
jmp
lcall
sub
movsl
loopne
adc
cmp
dec
aam
push
outsl
or
push
fdivl
ljmp
pop
popa
repz
sub
mov
inc
lods
insl
pushf
pop
dec
clc
pusha
adc
mov
jg
ret
sahf
xchg
call
xlat
aas
and
xlat
test
cmc
xchg
push
sub
clc
call
cli
xor
adc
movsb
ret
jb
les
icebp
ljmp
or
mov
sarl
jl
mov
and
pushl
mov
adc
ret
mov
in
popa
or
outsb
xor
pushf
int
jnp
xchg
jl
bound
test
sar
call
and
in
inc
pop
pushf
subl
push
adc
lret
nop
mov
and
mov
mov
lret
insl
mov
pusha
pushf
test
dec
adc
adc
lcall
and
cmpsb
xchg
mov
cmp
cld
test
popf
push
lea
cmp
sti
push
andb
xchg
push
aam
rorb
push
pushl
dec
adc
das
lds
test
jmpw
ja
mov
sbb
cli
repz
or
movsb
adc
pushl
pop
mov
scas
mov
sub
mov
int
jmp
jl
dec
jp
mov
loopne
pop
or
mov
xor
xlat
in
ficoml
xor
out
clc
clc
cmp
and
popf
jmp
push
mov
in
movsl
sbb
cmp
call
test
testl
or
mov
jo
aas
repnz
frstor
js
loop
push
shlb
xchg
jno
jp
push
mov
stos
bound
lock
mov
or
jo
add
mov
lcall
stc
sub
test
incl
jns
daa
mov
cmpsb
pop
inc
jmp
clc
lcall
xchg
into
jp
pop
pushl
mov
push
push
loope
sarb
lds
loopne
out
neg
mov
call
sbb
or
or
xor
in
add
mov
lcall
pushl
cmp
push
popa
dec
ja
lock
pop
jp
rorl
jl
jmp
aaa
std
incl
shl
les
aam
into
daa
jecxz,pt
pop
or
sub
mov
std
xor
mov
decl
sbb
in
push
ja
jmp
cwtl
sub
pop
or
loopne
scas
mov
les
or
jmp
mov
sub
insl
imul
movsl
xor
cli
filds
cmp
fdivs
pop
div
bound
nop
lock
push
mov
sub
sub
pushl
mov
pop
inc
jmp
subb
mov
lods
or
or
sahf
std
sub
inc
mov
fisubrs
add
inc
divl
mov
pop
bound
jle
in
mov
push
lcall
inc
outsb
mov
xor
call
mulb
push
insb
sbb
jae
inc
mov
testb
cmp
xchg
roll
lea
jle
imul
mov
call
xor
je
sahf
add
mov
ror
cli
push
sub
popa
int
decl
push
jb
xchg
adc
testl
fistpll
push
test
sub
sbb
mov
pop
sti
mov
mov
mov
push
fcoms
inc
repnz
ror
inc
mov
cmpsl
mov
jecxz
loopne
jmp
sbb
pop
cli
jmp
mov
fidivrl
cmp
adc
sbb
dec
incb
jge
inc
aas
outsl
into
mov
shr
inc
cltd
adc
repnz
and
stos
push
test
ja
sahf
push
call
add
push
push
xlat
jbe
sub
push
sar
lea
stos
mov
or
idiv
jle
call
lret
hlt
inc
inc
ja
jecxz
movsl
gs
sbb
out
repnz
jmp
in
das
inc
or
in
dec
dec
mov
sub
pop
pop
sbb
gs
lods
rolb
sub
les
xor
jnp
lock
add
imul
xchg
or
sahf
bound
jnp
mov
jmp
add
nop
imul
adc
sar
jg
out
fisubrs
jecxz
repnz
inc
shl
adc
pop
pop
jmp
cmpsl
pop
cmp
jnp
stos
pop
call
sub
xor
and
dec
leave
dec
insb
and
ljmp
cmpsb
xchg
enter
fs
mov
aam
push
pop
or
xor
lds
lcall
icebp
push
or
mov
aad
stc
pop
scas
rclb
cs
sub
call
mov
xchg
cmp
gs
fcom
mov
fsubs
gs
test
cmp
xor
inc
dec
jae
ljmp
mov
xchg
and
xor
call
sub
shlb
pop
xchg
or
insl
cs
sub
push
mov
call
add
outsb
cmp
cs
dec
fcmovu
add
fwait
outsl
je
pop
icebp
jns
cmpsl
lret
sub
in
iret
int3
sahf
cltd
pushl
cmp
frstor
inc
ja
add
and
inc
xor
test
add
stc
push
outsb
loop
inc
rcrb
lcall
push
jmp
out
ret
xor
jmp
je
sbb
iret
fld
fwait
outsb
out
dec
mov
cli
jnp
add
and
mov
adc
rcrl
cmp
decl
lock
lock
sub
sub
mov
leave
arpl
push
into
xor
and
decl
xchg
iret
add
bound
inc
lret
push
into
int3
sub
jnp
lret
mov
mov
rol
arpl
xor
inc
mov
sbb
push
ja
sub
scas
pushf
in
and
clc
lcall
jae
cmpsl
push
push
js
xchg
xor
xor
adc
cmp
pop
add
sti
sbb
jecxz
xor
mov
adc
lcall
lcall
stos
push
adc
jle
cmp
or
lcall
jl
ljmp
iret
fsubr
test
subl
push
inc
jnp
push
loop
sbb
decl
out
mov
sti
mov
or
mov
mov
cmp
sbb
jmp
dec
mov
imul
push
cmp
out
inc
mov
arpl
or
outsb
fistpll
sahf
push
lahf
jmp
or
inc
shll
aas
sub
inc
ds
dec
mov
cmp
sahf
leave
push
jg
pushl
add
mov
cltd
ds
fidivl
ret
repz
pop
inc
lahf
jnp
mov
ret
add
aas
jno
lock
jnp
push
sbb
mov
lock
adc
xchg
cmp
lea
sub
inc
int
jo
aad
sbb
sbb
add
icebp
jne
lea
jle
insb
cld
incl
jmp
sub
aaa
jl
dec
not
int
pushl
xor
mov
mov
stc
mov
jnp
mov
push
pop
lret
cmp
call
fsubl
inc
call
pusha
pop
stos
aas
cmc
shlb
loop
std
adc
std
fmul
rcll
push
adc
decl
ret
push
int3
sub
xchg
mov
push
mov
pop
lods
lcall
rorl
cwtl
sti
add
xor
in
data16
es
scas
push
fcompl
jmp
pop
jg
decb
pushf
xor
sub
or
cmp
out
dec
push
cmp
dec
call
rolb
jno
add
sub
jecxz
jp
jmp
adc
rorl
add
dec
cmpsb
mov
cmpsl
jnp
arpl
shlb
dec
jle
icebp
pop
or
cs
push
sub
into
xchg
call
icebp
cmp
leave
popa
data16
in
aam
into
lahf
xor
pusha
lock
xchg
adc
subl
sub
mov
ljmp
leave
adc
push
mov
ret
out
cs
jge
xchg
pushl
nop
xchg
fisttpll
inc
out
test
int3
jae
les
sahf
aas
adcl
std
adc
lret
lcall
xor
cmpsl
xor
int3
scas
push
or
and
lcall
sbb
repz
shll
pop
mov
mov
inc
xor
xchg
jbe
sbb
lock
out
xchg
add
or
jns
cmp
mov
lods
les
pushl
dec
popa
xchg
ja
aad
ret
xchg
pop
mov
mov
mov
test
incl
scas
push
nop
ret
cmp
outsl
gs
add
xchg
push
jo
dec
sub
and
pushf
loope
std
push
push
cli
ds
xor
dec
sbb
imul
ret
enter
scas
andl
icebp
sti
dec
call
sbb
js
xor
adc
xchg
addr16
fbld
cmp
ljmp
jo
outsb
push
icebp
cs
aam
push
adc
xchg
daa
mov
decl
inc
sub
jbe
jp
jae
shl
addr16
cld
int3
cmp
imul
fisttpll
call
call
sbb
push
or
cld
jg
adc
fnstenv
mov
sbb
clc
jns
imul
pop
or
sbb
adc
mov
mull
sbb
xchg
push
jns
popf
imul
push
inc
fstps
stc
loope
dec
ljmp
clc
lret
faddp
push
pop
imulb
popf
mul
xor
xor
jmp
and
sub
push
loop
mov
stos
push
adc
jmp
outsl
lcall
fbstp
cmp
xchg
jmp
mov
jbe
cwtl
sub
test
cmp
dec
jle
jne,pt
std
insb
xchg
push
dec
mov
aaa
lret
mov
xchg
subb
mov
ret
adc
scas
inc
aam
incl
mov
pop
jp
inc
or
mov
xor
lret
ret
xchg
mov
repnz
jecxz
mov
icebp
fistpl
inc
andb
imul
lcall
js
lock
addl
or
push
test
arpl
push
int3
lods
and
xchg
cmp
pushl
cs
scas
popa
push
and
sbb
lret
popa
cwtl
mov
xor
jae
aad
pop
mov
incl
jg
ja
cmp
cmp
popf
icebp
mov
ret
mov
je
and
call
out
adc
into
cld
mov
jl
and
jae
mov
cwtl
mov
push
cmc
mov
push
lahf
xor
gs
mov
outsl
push
xor
popl
clc
add
pushl
xchg
test
push
mov
ja
les
jecxz
push
shlb
mull
pop
scas
or
fwait
lcall
in
das
insl
sbb
popa
push
mov
fists
mov
insb
adc
fsubrp
mov
ljmp
dec
in
lods
or
adc
loopne
loop
lret
pop
cmp
adc
pop
lahf
andb
xor
push
mov
mov
enter
mov
mov
cmp
mov
out
push
mov
dec
enter
adc
rorl
pusha
fcoml
dec
xchg
popa
ret
push
test
sub
fimuls
test
sbb
add
jmp
ljmp
or
fnstenv
cs
incl
scas
sbb
fisubl
and
pushl
sbb
push
sub
stc
mov
push
sbb
push
arpl
ljmp
cs
add
mov
int3
ret
outsb
repnz
aas
lret
sub
rorb
adc
add
fwait
inc
xchg
aaa
std
pushl
xchg
leave
cld
lods
dec
imul
jge
addr16
test
xorb
xor
sbb
push
lcall
sti
sbb
add
stos
cmpsl
loop
insl
lret
pushl
nop
cmp
fwait
pop
call
int
or
inc
clc
push
inc
pop
fs
hlt
test
jb
add
cmp
jp
cmp
and
lret
or
dec
cmp
lcall
adc
pop
jo
and
jnp
cli
dec
xchg
pushf
cmp
jp
fsubp
pop
xchg
jg
sub
mov
add
jg
insb
fldenv
cmc
insl
leave
pop
ss
push
jnp
add
sbb
cld
sbb
cmp
scas
sbb
add
jg
add
or
mov
or
sub
gs
lods
ljmp
lcall
loop
xchg
je
pop
or
shlb
popa
push
out
push
lcall
enter
cld
decl
pusha
pop
inc
cmpsl
in
loope
in
adc
rclb
call
mov
jno
stos
mov
dec
or
or
push
cmp
add
cs
scas
pop
xor
jmp
jge
mov
cld
jae
jno
and
or
arpl
decl
sbb
mov
roll
test
push
xchg
mov
outsl
cli
sub
out
xor
fiadds
and
out
mov
dec
xor
lret
xchg
jno
out
and
xchg
sbb
fidivrl
mov
stos
push
xor
jp
icebp
pushw
pop
jno
imul
lock
inc
inc
push
das
imulb
jno
jbe
lcall
mov
in
mov
gs
mov
insl
push
jle
add
call
sub
fs
aad
mov
mov
sub
decl
or
into
mov
sbb
jno
mov
adc
jp
and
decl
int3
nop
pusha
cmp
pop
push
or
sub
jl
dec
popf
cwtl
fidivl
mov
sub
movsl
incl
cltd
cs
sub
fcomip
jg
nop
cld
aas
int3
ds
xor
cld
movsb
mov
hlt
xor
cmp
sub
mov
push
or
and
idiv
or
cmc
inc
add
loope
mov
xor
insb
mov
lcall
xchg
jnp
inc
sub
jge
sbb
cli
jmp
push
mov
mov
sub
sub
mull
clc
ljmp
pusha
mov
cwtl
add
cli
scas
mov
cltd
jbe
jo
xor
idiv
lcall
push
icebp
and
and
int3
push
sub
out
jns
movsl
sbb
xlat
call
lret
and
adc
movsl
aas
addl
scas
out
cmc
xorl
mov
jnp
xor
cmp
mov
addr16
push
sbb
mov
dec
and
adc
pusha
dec
test
cld
stos
inc
std
dec
xchg
pushf
fs
xor
jg
dec
cmp
dec
rorl
jnp
push
testb
push
out
decl
lock
mov
loop
int
mov
sbb
adc
sub
mulb
and
clc
cmp
mov
jmp
push
out
dec
or
mov
lcall
cmpl
jbe
scas
lea
jg
pop
lcall
cmp
fsubs
add
fildll
dec
mulb
add
in
push
jg
xchg
mov
inc
push
pushf
inc
jne
cmpsb
and
decl
and
add
fbstp
je
cs
mov
insb
push
dec
push
xchg
cmp
incl
add
xchg
xchg
cmp
lock
cmp
cmp
pop
jle
sub
lcall
mov
in
fs
mov
push
aad
and
sbbb
dec
ss
jno
jg
jne
stos
cli
mov
mov
xor
iret
push
cmpsb
push
decl
lock
pop
jmp
int3
inc
pop
popf
push
fstps
in
pushf
pop
fldcw
call
cmp
xor
call
mov
decl
sbb
enter
sbb
pushf
jecxz
inc
mov
push
aam
add
decl
ss
aad
xchg
loop
cmc
out
lods
sub
lcall
mov
int
mov
ljmp
ret
lods
adc
add
dec
pusha
mov
cmovnp
adc
aas
popf
jmp
pop
mov
and
jae
jmp
lock
decl
inc
xor
bound
dec
xchg
dec
roll
rcrl
cmc
dec
cmpsl
mov
movsl
sub
cmp
cmp
mov
stos
mov
mov
ss
or
and
lcall
sbb
push
imul
xchg
xchg
dec
hlt
mov
jecxz
cmp
arpl
add
inc
dec
dec
ljmp
or
fildll
sahf
hlt
dec
xchg
cmp
add
add
aas
ja
add
fcomip
rorl
outsl
pop
xchg
pop
pusha
dec
testl
in
decl
les
xchg
sbb
mov
ud2
or
adc
jmp
sbb
imul
call
push
add
enter
daa
movsl
xchg
jns
lahf
add
pop
jp
mov
sub
inc
mov
cwtl
ret
add
or
mov
repnz
out
lcall
movb
hlt
fwait
mov
push
xlat
dec
pop
bound
mov
xchg
push
gs
lcall
cmp
hlt
das
movsl
inc
ss
icebp
push
adc
mov
mov
cld
mov
clc
into
and
mov
pop
fwait
adc
pop
inc
ljmp
sub
mov
lret
lret
fsts
in
cmp
or
fnstenv
stos
cmp
ret
data16
ss
loop
sbb
push
sub
cmpsl
mov
cld
add
std
int3
inc
stos
xchg
or
inc
enter
lahf
sar
outsl
stos
add
xchg
hlt
mov
and
xchg
lret
mov
push
pop
imul
imul
mov
int3
jmp
test
xor
pop
inc
ret
ljmp
push
xchg
jmp
mov
test
frstor
pop
mov
jmp
cmpsl
push
xchg
testb
xlat
clc
fcmove
dec
hlt
and
lcall
pop
inc
cmp
push
xchg
mov
adc
and
sbb
call
in
addr16
xchg
test
add
mov
inc
mov
push
test
std
and
test
idivb
jmp
jo
pop
aas
jle
addb
sbb
shlb
fisttps
stc
cld
call
cld
lcall
aaa
ds
mov
lods
mov
push
aaa
icebp
ljmp
xchg
fbld
lods
cmp
mov
mov
out
test
icebp
clc
pop
int3
inc
inc
pop
mov
dec
repz
je
adcl
leave
andl
js
call
out
or
mov
xor
ds
inc
add
cmpsb
sub
daa
movsb
push
mov
ljmp
lods
pop
arpl
mov
in
mov
cmp
mov
add
jb
mov
inc
push
scas
adc
lret
decl
adc
fisubrs
and
lret
ret
pop
cmpsl
int
xchg
popf
adc
pop
xchg
lea
mov
call
inc
sbb
jne
push
add
shrl
lret
mov
sbb
dec
imul
cmp
test
fs
cmp
outsb
pop
imul
call
in
cmc
sbb
dec
ret
ds
cltd
je
cmp
dec
vpavgw
xlat
jnp
cmp
inc
cltd
sar
cmp
test
jge
xchg
repz
fcomps
movsb
push
push
pop
add
inc
std
mov
mov
pop
jb
inc
xchg
and
mov
pushl
pusha
mov
das
repz
aam
decl
jno
or
lds
jle
imul
fs
ljmp
adc
cmc
cmp
cltd
push
int3
pusha
lods
jg
or
cld
sbb
pushw
sub
mov
jg
icebp
cmp
mov
sbb
mov
lds
lret
aaa
push
cltd
and
xor
add
xlat
dec
pop
fs
sahf
ss
mov
cld
jg
jle
lahf
pop
enter
cmp
xor
cmp
decl
ficoml
mov
cwtl
push
hlt
add
push
xor
add
push
xor
adc
jl
push
adc
bound
xchg
clc
das
cli
jns
lds
and
xor
pop
data16
out
in
popf
aad
test
sbb
into
fs
int
mov
rclb
xchg
call
std
std
scas
stc
cmpsl
dec
cmpsl
ficompl
stos
pop
dec
add
out
add
nop
jmp
and
dec
mov
dec
data16
adc
arpl
js
jmp
cmpsl
xchg
outsb
xchg
mov
lcall
outsb
mov
xchg
jo
jp
inc
pop
jmp
out
lock
scas
sti
clc
sbb
and
scas
bound
and
jmp
and
popa
sahf
xor
lock
pushl
adc
das
data16
jae
or
mov
jbe
clc
push
rcrl
push
jecxz
pop
ds
add
adc
negl
repz
test
mov
test
pop
pushf
xor
xchg
iret
jle
iret
cld
decl
fs
pushf
cwtl
rclb
fildl
inc
inc
dec
pop
pop
push
sahf
popf
adc
add
das
clc
jl
ljmp
xor
cmp
lahf
sti
mov
aaa
lcall
add
jnp
dec
lods
push
insb
mov
sbb
ret
fstps
test
arpl
fdiv
pop
shrb
lcall
dec
pop
jge
sub
push
and
xchg
test
xchg
mov
scas
in
lods
sbb
clc
mov
lcall
ljmp
add
pushf
adc
rcrb
add
push
lds
mov
or
pop
cmc
fcom
test
dec
rol
in
xchg
lcall
fneni(8087
adc
daa
cmp
stc
pushl
loopne
out
push
pop
sbb
rorb
rcll
or
adc
call
loopne
mov
and
mov
out
loopne
repz
ljmp
bnd
sbb
mov
sub
comiss
incl
shl
sbb
cmp
xchg
in
in
mov
jg
lret
rorb
call
out
jo
shll
ljmp
fwait
sti
popf
jns
xor
xlat
push
adc
es
decl
push
mov
dec
sbb
aas
fildll
ss
ljmp
xorb
xor
incl
into
insl
or
fsubs
popl
lret
cmp
lods
mov
call
push
cmp
or
sbb
inc
pop
decl
sub
inc
or
ret
cs
sub
sub
loope
sbb
mov
hlt
sbbb
adc
mov
jmp
cmp
frstor
push
inc
or
dec
test
mov
ljmp
jge
cmp
dec
stc
call
jl
mov
fldt
or
ljmp
adc
mov
test
fisubl
ds
ljmp
jae
add
in
pop
xchg
mov
mov
fstl
icebp
fdivr
fists
loop
push
add
adc
adc
cld
pop
jmp
lods
xor
mov
testl
incl
push
data16
mov
aam
add
iret
sbb
fmull
pop
push
insl
xchg
sar
in
pop
bound
dec
sahf
inc
mov
jne
mov
ret
pusha
add
jne
call
andl
and
outsl
xchg
mov
cmp
mov
mov
test
jmp
imul
int
stos
xchg
or
insb
inc
jno
push
loope
mov
sbb
imul
push
mov
popa
test
dec
inc
and
aaa
les
ljmp
jo
jb
jbe
mov
loop
pop
cli
jne
das
rcl
je
es
mov
pushf
sub
inc
ljmp
in
scas
add
fisubl
dec
pop
mov
mov
xor
arpl
icebp
lcall
lds
adc
or
test
mov
push
jge
add
jmp
enter
cmp
call
addb
outsl
jns
fisttps
mov
pop
std
jbe
xchg
insl
sbb
enter
aas
jl
mov
cmp
lods
mov
jecxz
call
decl
sub
bound
cld
mov
dec
outsl
push
out
aaa
dec
cmp
mov
jmp
jecxz
pushf
insl
sbb
or
lret
femms
cmp
mov
ja
add
add
and
lds
mov
outsl
subb
mov
pushl
mov
lds
stos
addl
jmp
shrl
xchg
mov
imulb
jne
fcoml
fnsave
into
mov
inc
cmpsb
decl
imul
stc
insl
mov
bound
cwtl
xchg
lret
add
ljmp
push
mov
outsb
dec
rcrl
pop
rolb
mov
pop
loop
je
ror
xchg
gs
xor
cltd
shll
add
mov
out
movsl
fmuls
movsl
ret
mov
outsb
sbb
mov
icebp
push
fdivp
xchg
push
adc
xchg
js
inc
mov
xor
in
cmc
das
ljmp
std
sbb
xor
xor
lret
aam
daa
sbb
test
adc
cli
ljmp
jmp
notl
jg,pt
cmp
icebp
call
jmp
out
pusha
fwait
sub
jge,pt
mov
jge
xor
jmp
pop
mov
jmp
adc
xor
aad
mov
fcompl
cmpsl
xchg
std
cmp
pusha
int
stc
jbe
in
fwait
clc
lcall
sahf
mov
adc
xchg
pop
stos
adc
sub
movsl
xchg
stc
xor
ljmp
mov
add
cmpl
mov
pop
loope
mov
decl
shr
cs
push
and
lcall
jp
jl
fsts
inc
xor
push
mov
xchg
and
cmc
pop
cmp
fnstenv
cltd
ja
aaa
hlt
inc
push
inc
aaa
mov
push
incl
mov
jne
cmp
jmp
not
push
fnsave
jae
adc
cld
xor
loopne
mov
jle
adc
rolb
inc
ljmp
push
ret
imul
jne
insl
mov
lock
les
lret
jle
push
aaa
out
dec
addr16
int
inc
sub
inc
or
fdivrl
xor
adc
sbb
jmp
je
xor
and
ret
gs
mov
sbb
pop
out
sub
lcall
popa
fcmove
repnz
xor
neg
roll
and
imul
jo
pushf
push
adc
xor
cmp
adc
test
push
adc
fs
call
push
das
lods
cmp
shll
lret
ret
dec
lods
adc
call
add
aaa
jecxz
ret
loop
dec
xlat
pop
loopne
fwait
xchg
addr16
leave
ret
jae
push
outsb
int3
push
fsubs
or
push
stos
stos
imul
jmp
mov
mov
push
jl
and
js
inc
outsb
daa
fs
jmp
jo
out
mov
dec
pop
incl
sub
fcmovu
stos
and
inc
jle
daa
in
call
cs
pushf
pop
test
outsb
jle
fisubs
mov
inc
hlt
jae
loope
loop
jl
pushl
cld
test
adc
stc
push
jb
popa
dec
sub
mov
push
in
cli
dec
incl
cmp
in
andb
xor
jne
fistpl
or
push
bt
outsl
adc
xchg
loopne
cmp
pop
lds
push
pop
aam
jno
aad
jo
jnp
mov
call
jo
add
mov
and
fsub
dec
inc
xchg
incl
sbb
xor
addr16
and
adc
hlt
cld
pushl
imul
test
mov
or
imul
ret
pushl
mov
push
cmc
adc
mov
das
sbb
or
nop
pop
ds
sar
push
std
fidivs
enter
cmp
cmpsl
pop
cld
sbb
and
dec
lret
and
mov
pushl
pop
and
cmc
mov
and
jg
in
cwtl
iret
pop
leave
data16
jno
mov
outsl
adcb
int3
gs
push
pop
mov
xchg
adc
nop
adc
push
repnz
daa
pushl
ret
cmpsl
sti
repnz
aas
jg
adc
cltd
add
mov
loope
jmp
movsl
inc
insl
mov
movsb
pop
dec
sub
imul
test
cwtl
jnp
idivb
fistpll
ljmp
dec
xchg
insl
pop
movl
jo
test
cmp
adc
mov
sbb
ja
cli
dec
inc
push
inc
bound
rcpps
js
test
imul
in
or
call
scas
rcrl
ds
jmp
fstl
push
mov
leave
mov
sub
out
mov
push
pop
mov
call
ret
mov
dec
mov
mov
add
mov
push
clc
xchg
mov
mov
fstpt
sbb
std
sub
lret
add
je
pushf
push
clc
mov
mov
or
push
or
sahf
ret
incl
ret
jne
std
sbb
insl
push
add
fcmovu
test
push
stc
sbb
aad
sub
mov
cli
push
jns
mov
into
mov
ljmp
pop
fdivr
mov
cltd
add
stc
mov
add
cmc
scas
xchg
push
add
pop
mov
sar
push
jnp
sbb
jg
orb
int3
ja
push
mov
enter
and
pop
rolb
mov
pop
int3
sub
addr16
sub
push
pop
imul
decl
mov
shrl
sbb
test
add
push
mov
fbld
fnstenv
cmp
dec
pop
push
out
fbld
call
mov
andl
sub
leave
sbb
mov
stc
iret
cmc
cmc
roll
loope
sub
jo
fistpl
aas
daa
sarb
jne
fidivrs
ficoml
jb
shrl
push
jne
fsubrl
pop
cli
cmp
mov
or
roll
rcl
ret
scas
lds
mov
pushl
xchg
test
adc
ret
shrb
fwait
sti
je
imul
xchg
je
jge
pushl
and
push
call
std
repnz
sbb
sub
mov
sub
push
ret
out
clc
fcomip
pop
arpl
in
inc
push
ret
xchg
aam
pop
out
adc
sub
negb
or
pop
fdivr
jg
lods
je
je
mov
xor
jno
sahf
sbb
adc
insl
mov
insb
incl
loop
popf
into
jbe
push
adc
cmc
fisubs
int3
notb
sub
icebp
aaa
cmp
lods
cmp
or
shll
lcall
jmp
xchg
push
aaa
out
pop
lds
into
adc
jle
divl
pop
mov
decl
xchg
xor
xor
mov
sti
leave
imul
fwait
or
aad
dec
jl
xchg
jae
dec
in
cmp
adcb
mov
mov
nop
push
cmpb
push
in
out
sbb
sub
jg
inc
or
xor
mov
lea
mov
fwait
call
aam
hlt
xlat
mov
aas
in
cld
rcl
mov
push
inc
outsl
pop
push
sub
pushl
pop
psubusw
ss
sbb
lods
mov
gs
shl
cmp
ljmp
subb
mov
mov
add
sarl
dec
inc
adc
dec
rorb
jge
dec
ret
nop
inc
mov
or
jge
inc
or
mov
sbb
sbb
daa
cmp
jae
push
mov
pushl
cmp
push
push
push
loopne
mov
es
and
outsl
test
push
xor
dec
push
jmp
add
daa
je
mov
adc
loope
ficompl
sub
out
add
mov
mov
xchg
mov
fdivrs
xchg
mov
push
outsl
call
fmul
repnz
xor
call
jo
sbb
enter
adc
mov
cli
cmp
movsb
popa
nop
lahf
push
dec
roll
and
inc
jae
pushl
ds
inc
fcompl
ror
iret
jnp
int
insl
inc
outsl
lods
ja
xchg
sbb
add
pushl
movsb
or
pushl
sub
jp
inc
xor
mov
jecxz
rcl
icebp
push
push
decl
decl
xchg
xor
testl
add
imul
sub
out
fdivs
mov
or
pushl
filds
dec
test
mov
dec
cmp
dec
js
out
popf
xlat
notl
cmp
xchg
cmpsl
bound
jns
xchg
imul
imulb
xor
cmp
fcomip
jmp
mov
jbe
mov
test
out
std
mov
pushf
jb
ja
ret
push
jcxz
lods
into
push
and
or
dec
aad
call
or
xor
into
jle
xchg
test
lea
mov
ss
cld
mov
jecxz
sbb
rcr
cltd
push
sti
push
js
out
test
push
cmpsb
or
inc
hlt
test
sarb
cmp
mov
jecxz
test
ret
fwait
jg
xchg
jbe
stc
fnsave
incl
inc
mov
add
out
adc
pop
ds
mov
lods
std
xlat
pop
ja
cwtl
filds
xchg
rol
hlt
jle
dec
mov
mov
daa
pop
xchg
mov
jg
jg
push
mov
mov
xchg
pause
or
popf
cmp
mov
lcall
or
test
lcall
divl
adc
mov
inc
pop
mov
push
stos
enter
add
jp
popf
add
pop
std
xchg
pushf
mov
aam
pop
sub
xor
stos
aam
mov
out
pop
jmp
in
ja
hlt
add
rcrl
sarb
pop
insl
je
pop
mov
cmc
mov
ljmp
shrl
repnz
sahf
push
movsb
lds
shl
fildll
inc
xchg
mov
dec
jle
jb
mov
fstps
pop
std
pop
pusha
mov
cli
mov
sub
test
pushl
test
notl
or
dec
cmp
cwtl
mov
xor
rolb
or
xlat
pop
dec
xor
sbb
jg
jns
lcall
or
popa
lret
jl
lcall
fmull
dec
sub
xor
cmpsb
cmp
dec
ds
pop
push
out
pusha
ljmp
mov
push
fsubl
je
xlat
mov
stc
pop
stos
cmp
fimuls
dec
outsl
mov
bound
mov
call
sub
fwait
and
adc
push
mov
xchg
js
out
pushl
fs
adc
jecxz
inc
cmp
cwtl
push
fildll
sub
inc
test
dec
mov
cmp
sbb
and
mov
cmpsl
ljmp
mov
stc
popa
addb
mov
mov
lcall
xor
cld
call
xchg
shl
ljmp
mov
and
movsb
sbbl
push
pop
or
hlt
shl
sbb
pop
and
xchg
push
fdivrl
mov
xor
push
sub
aaa
add
daa
jge
mov
ss
out
inc
fdivl
xchg
push
sbb
adcl
leave
jo
sbb
les
in
subb
mov
call
insb
or
or
jmp
pop
fisubs
adc
dec
cld
outsl
mov
faddl
jmp
sub
jne
cmp
xchg
add
bound
add
and
ljmp
lock
sbb
pop
inc
xchg
and
fnsave
jecxz
jmp
test
cli
ljmp
push
popa
cmp
jg
sub
lea
pushf
mov
cmp
out
loopne
mov
jge
aad
cmc
fs
and
jle
bound
jge
inc
shll
repnz
cmc
pushl
mov
or
add
xchg
jb
jnp
lea
mov
aas
insb
mov
xlat
call
dec
cmp
dec
fidivl
and
xchg
cltd
stos
insb
mov
pop
loope
and
jg
and
shlb
les
shll
mov
or
push
or
in
xor
lds
neg
and
fcmovnu
sti
mov
cmp
cmp
jo
inc
and
hlt
pop
lcall
cmpsb
mov
daa
xor
scas
scas
inc
mov
in
xchg
movhps
fsin
call
mov
cmp
fmul
mov
orb
out
jge
flds
outsl
cli
decl
fwait
push
lret
inc
out
pop
subl
lcall
push
push
mov
cmp
ds
adc
call
in
and
out
dec
mov
dec
in
lock
cmpsb
pop
je
inc
rcrl
call
decl
test
popa
xchg
add
pop
ret
scas
xor
jnp
mov
movsb
dec
mov
nop
das
stc
movb
aam
xchg
fdivrl
int
push
in
jb
cmp
jg
mov
mov
pop
xor
lods
add
jmp
fldl
inc
mov
jbe
enter
cmp
jl
icebp
je
fidivrs
mov
frstor
outsl
dec
out
jo
mov
mov
scas
fildl
icebp
add
fwait
stos
das
inc
iret
mov
cmp
cs
insb
inc
pop
jl
cmp
jge
xchg
mov
mov
mov
std
imul
bound
mov
in
sub
jno
sbb
sub
jmp
lcall
mov
pusha
arpl
out
jne
ret
jbe
sbb
imul
fsts
lods
out
jo
cmpsl
adc
imul
mov
xchg
dec
and
sbb
gs
ljmp
sahf
cmpsl
test
in
daa
rolb
repnz
jo
pushf
mov
jmp
xor
icebp
sbb
pop
and
inc
ficompl
loopne
cmp
incl
xchg
mov
or
adc
filds
mov
cmp
jle
lret
xor
dec
scas
push
mov
aaa
int3
bound
mov
mov
sub
cmp
decb
mov
ljmp
icebp
and
inc
call
aas
xchg
scas
shlb
lcall
mov
jge
sbb
test
dec
fdivrs
push
mov
sbb
cs
push
mov
and
stos
push
jle
lcall
pop
push
cmp
cli
mov
call
in
pop
in
mov
std
jo
icebp
mov
mov
mov
jp
movl
lcall
loope
test
push
lock
add
ja
pushf
push
lahf
pop
scas
push
xchg
fistps
jmp
pop
arpl
shlb
dec
faddp
dec
enter
repz
xchg
shll
pop
iret
incl
testl
push
sub
xor
mov
loopne
push
sbb
rcll
pop
lret
push
mov
outsb
jmp
pop
jle
or
shll
mov
loop
jne
sub
mov
int
jns
cwtl
fmull
xchg
add
incl
mov
in
xchg
xchg
mov
idivb
sub
sub
decl
push
cmc
push
mov
push
mov
sub
pop
sbb
inc
cmpsl
or
lcall
test
dec
jmp
out
inc
xor
imul
fsubr
sub
or
decl
fwait
mov
mov
mov
in
icebp
jp
scas
stc
pop
adc
or
repz
pushl
testl
mov
cmp
push
in
in
lods
sub
mov
pop
lcall
sub
push
adc
sub
lds
and
out
cli
mov
push
int3
cmp
imul
mov
decb
sbb
dec
dec
cmp
inc
ds
inc
jle
xchg
outsl
or
inc
fsubp
xor
sti
dec
jo
cli
les
cwtl
or
pushl
pop
jle
roll
cwtl
test
jecxz
cltd
jle
iret
xor
push
or
xchg
ja
push
xchg
mov
repz
lcall
scas
mov
std
mov
xor
shrl
fnsave
or
dec
inc
insb
mov
cld
enter
adc
jge
ja
loop
incl
ds
aam
and
push
rorl
es
sahf
adc
outsb
arpl
mov
jae
cld
and
cmp
cmpb
add
loopne
je
jo
sbb
dec
cmp
and
jae
cmp
sub
outsb
insb
jge
mov
sbbb
je
pop
inc
inc
mov
jp
lret
adc
insl
xlat
inc
adc
stos
clc
call
adc
mov
lret
push
xor
or
loopne
pslld
push
or
dec
xlat
insb
jmp
in
mov
lahf
add
lods
dec
sub
jno
das
lahf
dec
fcoml
out
ljmp
scas
push
and
jbe
jbe
ja
cld
and
xchg
push
mov
ret
cmpsb
incl
mov
mov
scas
cli
mov
jecxz
pop
inc
rcr
add
mov
add
inc
add
dec
sbb
push
add
add
imul
push
push
or
jns
out
or
int
mov
push
adc
push
sbb
repz
sbb
repz
in
push
sbb
dec
js
push
jns
jp
out
out
push
cld
scas
push
incl
add
inc
rorb
push
add
cmp
lea
mov
nop
xchg
xchg
repz
push
pop
or
pop
mov
sbb
sbb
psadbw
out
mov
movsb
jo
cmpb
aas
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
adc
pop
shll
decb
inc
dec
cs
daa
mov
inc
mov
test
mov
sbb
in
call
adc
in
notl
push
ficompl
mov
xor
mov
enter
loopne
jb
jle
pop
inc
bound
sub
jmp
test
daa
or
add
dec
add
incb
push
add
jg
pop
bound
jg
pop
push
aam
pusha
mov
adc
xchg
pop
enter
es
adc
pop
shr
mov
push
repnz
sahf
out
or
mov
mov
sarb
sbb
enter
push
ds
leave
repz
aaa
add
sub
and
mov
and
out
sub
or
popf
cltd
in
popf
add
rolb
adcb
jnp
into
add
cmp
int
sti
out
xor
add
ja
mov
or
add
nop
add
fwait
out
xchg
out
or
nop
sbb
or
or
mov
fistl
ss
pop
aas
cmp
ds
sti
push
enter
xchg
lret
nop
push
mov
inc
out
adc
and
mov
stos
adc
decl
or
mov
mov
push
sub
popf
or
inc
aas
test
mov
push
pop
jg
mov
leave
jae
and
inc
outsl
mov
fisttps
or
or
add
jge
mov
cmpsb
push
out
in
or
out
dec
or
ret
fists
nop
sahf
in
inc
sbb
add
into
or
or
repnz
mov
inc
adc
or
or
lcall
mov
in
dec
mov
out
pop
sbb
push
push
xchg
addr16
xchg
push
push
mov
jmp
push
sbb
pop
inc
add
mov
sbb
add
push
push
push
inc
scas
push
dec
dec
push
sti
pop
fstpt
xchg
xchg
xor
inc
push
stos
in
jle
fsubl
dec
add
inc
arpl
adc
xchg
sbbl
inc
lock
rdpmc
push
push
add
fwait
imul
aaa
xlat
push
into
outsl
or
pop
ja
pop
sbb
sbb
push
addr16
out
jb
or
add
sbb
jp
mov
dec
sbb
dec
cmpsl
or
into
xchg
push
adc
push
push
pop
push
insl
mov
inc
add
dec
or
cmpsb
fwait
loop
nop
jl
push
inc
or
lods
in
lcall
add
mov
test
popa
roll
and
push
les
or
pop
data16
dec
push
sti
out
add
adc
sbb
gs
iret
addr16
push
fidivs
push
cld
iret
add
jbe
or
sbb
or
and
adc
insl
imul
adc
sbb
push
iret
stos
dec
out
and
cld
add
adc
mov
xchg
jecxz
lahf
mov
jg
push
imul
xchg
pusha
sub
push
pop
or
mov
or
adc
push
pusha
push
adc
ror
mov
dec
adc
bound
or
js
push
adc
fs
push
in
mov
mov
pop
das
xchg
mov
es
push
js
fwait
xchg
in
pop
xor
or
xorb
mov
and
add
adcl
aas
pop
or
xor
mov
cwtl
js
jo
or
int3
sahf
pusha
xchg
inc
and
adc
subb
push
cvtsi2ssl
fcoms
in
pop
push
push
gs
repz
lret
andb
and
mov
sbb
jg
testl
int3
push
or
or
mov
and
and
jg
and
int3
or
lods
cmp
and
or
aam
sbb
add
pop
fcoms
and
xorb
xchg
push
pop
dec
xchg
cmp
loopne
sarb
aas
push
add
data16
jb
adc
xchg
and
add
cmpsl
add
ret
jbe
push
pusha
js
jnp
mov
lcall
xlat
xchg
and
inc
in
sahf
call
inc
sbb
inc
xor
inc
dec
shlb
mov
pop
xor
pop
add
add
xor
std
cmp
inc
add
inc
push
xor
hlt
push
cmp
push
ljmp
fwait
insl
out
out
push
adc
inc
inc
add
sub
push
inc
cmpsb
cmp
xor
mov
push
loopne,pt
outsl
test
add
sub
xchg
push
into
cs
fnstsw
or
lcall
dec
repz
mov
mov
repz
and
cmc
std
add
inc
and
or
ret
push
dec
cmc
or
insb
jnp
add
sbb
iret
insl
add
imul
cwtl
call
cmp
ja
out
mull
jns
ja
dec
sbb
cmp
dec
jns
ja
cmp
out
xchg
or
adc
nop
into
xchg
pop
mov
dec
mov
or
nop
xchg
inc
sahf
push
inc
or
jb
mov
sahf
jg
sub
mov
or
cmp
int
sbb
xchg
dec
sbb
pop
out
inc
xchg
sbb
push
jl
add
sti
inc
mov
mov
hlt
pop
add
push
cmpl
inc
pop
mov
call
fcom
jl
inc
adc
jbe
int3
fisubs
push
push
test
jg
jg
mov
sbb
fcompl
inc
ret
xorb
xchg
adc
push
dec
inc
adc
xchg
imul
mov
mov
sub
push
adc
xchg
cmc
inc
jle
mov
or
pusha
pop
jb
mov
cmp
or
ret
fdivs
xchg
adc
jbe
or
push
jle
cmp
dec
repnz
or
inc
adc
dec
push
adcl
cmp
cmp
cmc
push
ss
dec
jnp
adc
inc
or
sbb
xchg
or
dec
outsl
and
xor
add
lcall
nop
push
out
fcompl
stos
outsb
jb
xchg
push
scas
xchg
xor
adc
mov
pop
push
dec
xor
pop
dec
adc
pushf
adc
sbb
lods
xchg
jbe
dec
xchg
mov
pop
push
enter
add
sti
into
push
and
pushf
cmp
cmp
sub
or
fidivrs
stc
out
loop
mov
sub
dec
add
inc
lahf
jae
lods
mov
addr16
push
lahf
fs
dec
ds
es
push
add
mov
stc
dec
sbb
inc
xchg
pop
pop
pop
loopne
rcll
sbb
dec
dec
ljmp
imul
dec
cmc
cmc
cwtl
add
fiadds
in
psllq
andps
rcll
int3
or
sbb
and
or
nop
push
xor
mov
xor
pop
cmp
inc
push
or
adc
adcb
and
cmc
movsl
cmc
fiaddl
testl
add
inc
das
pop
sub
dec
push
add
dec
cwtl
or
outsl
xor
adc
loopne
adc
push
dec
dec
add
es
dec
testl
dec
notl
rcr
jae
imul
outsl
mov
add
push
push
mov
jae
mov
pop
dec
loop
push
xlat
or
jg
inc
hlt
inc
mov
inc
or
push
or
pop
jmp
push
dec
sbb
adcl
pop
mov
push
or
add
sbb
int
and
sub
jnp
out
imull
sbb
push
or
das
sbbl
loopne
dec
mov
sbb
out
stc
insl
das
shrb
pop
inc
sbb
and
lock
das
test
sbb
and
in
in
push
lock
add
das
negl
out
in
jge
and
and
or
pop
and
mulb
sub
testl
lock
push
sbb
sub
sub
or
push
and
sbb
mov
push
daa
sbb
popa
in
mov
push
add
sub
daa
mov
mov
jp
fwait
lock
xlat
es
lock
dec
adc
es
lret
incl
bound
es
ljmp
popf
sub
jae
xor
push
fidivs
cs
mov
ret
dec
sbb
ss
test
pushf
push
divl
adc
leave
shl
or
adc
xchg
and
jbe
adc
adc
testl
push
inc
or
ds
push
data16
or
testl
rcl
dec
or
imul
popf
jbe
add
inc
xchg
xchg
bound
pop
jecxz
sarb
sub
cmpsl
push
inc
xchg
pop
nop
xchg
xor
ja
movsl
pop
add
xchg
dec
pop
sub
sub
adc
add
cs
adcb
or
fiadds
je
call
sbb
jle
push
cmp
lock
xchg
scas
sbb
ja
and
scas
shlb
push
ja
or
xchg
pop
mull
jg
pop
sbbb
scas
xor
xor
adc
jg
or
mov
jns
jbe
push
ja
mov
outsb
sarb
or
je
ja
pushl
and
mov
mov
pusha
popf
push
das
add
or
or
int3
scas
lret
mov
ja
lahf
and
mov
push
ret
adc
iret
add
outsb
fwait
pop
add
mov
insb
inc
or
add
add
push
push
div
jg
xchg
int
push
and
arpl
xchg
cmp
sbb
sbb
sbb
mov
daa
cmp
and
jg
sbb
fnsave
bound
ltr
add
mov
xor
addb
pop
js
andl
bsf
and
lock
jae
inc
ss
fs
pop
mov
insl
insl
and
mov
or
push
sbb
and
fs
add
outsl
and
cmp
sbb
xor
sbb
data16
jg
push
lahf
data16
stc
jle
lock
and
outsb
es
sbb
inc
ret
out
pop
outsl
push
adc
das
add
adc
push
sub
adc
or
sbb
xor
repz
or
testl
dec
sbb
push
ja
iret
aaa
mov
or
sbb
push
ucomiss
loopne
outsl
pop
add
sbbb
push
test
pop
mov
jg
and
pop
sub
inc
and
mov
add
adc
sub
add
ud0
outsl
jne
adc
inc
stc
xchg
insl
sub
outsb
jle
sbb
xor
sbb
inc
jbe
dec
jl
jne
add
or
mov
sub
add
pop
jp
adc
into
out
and
js
inc
addr16
add
push
imul
pop
push
jae
and
pop
je
jbe
cld
jne
push
mov
push
jne
lret
outsb
xchg
or
mov
xchg
and
jnp
divb
adc
mov
fwait
in
mov
inc
testl
es
insb
sbb
inc
sbb
out
push
ss
inc
push
inc
sbb
ret
xchg
out
mov
mov
fnstsw
and
fs
roll
xorl
push
jb
jns
lret
bound
pop
push
inc
fstp
mov
pusha
sub
pop
lahf
cmc
lock
add
inc
lock
mov
fidivrs
bound
pop
repnz
cmc
and
and
ljmp
pushl
aaa
push
lock
outsl
sbb
or
inc
fwait
insb
scas
cmp
divl
mov
lods
sbb
daa
sbb
enter
pop
data16
add
daa
repz
ret
ja
daa
jg
mov
jne
and
jb
adc
lds
push
jae
orl
adc
jg
das
sub
hlt
push
daa
pop
add
inc
lahf
and
shrb
sbb
adc
sbb
jne
rcrl
incl
pop
outsb
orl
loopne
jg
or
sbb
test
es
lock
jg
testl
and
scas
js
ret
divl
data16
push
pushl
out
lock
sbb
je
fidivrl
jb
sbb
rcl
push
jo
xchg
and
inc
outsb
stos
push
xchg
pop
pop
roll
add
insb
ds
daa
scas
imul
push
adc
push
and
data16
iret
leave
lret
cs
bound
leave
lret
cs
sbb
and
repz
iret
pop
push
or
lcall
pop
xor
or
pop
jp
cld
cmp
inc
pop
mov
adc
and
dec
out
push
sub
js
addr16
cmpsl
adc
out
add
push
jg
or
sub
mov
rolb
push
mov
or
push
xchg
add
inc
push
jo
add
adc
push
mov
dec
repnz
or
add
out
dec
inc
ret
repnz
cmpsl
xor
inc
dec
ja
insb
outsl
jbe
sbb
inc
add
add
in
push
cmp
jo
pop
jp
data16
inc
push
pop
in
js
push
fimuls
rolb
mov
enter
sub
inc
test
adcl
shr
dec
inc
xchg
push
loopne
divl
cmp
inc
or
add
push
out
cmpb
or
push
sahf
lret
fisttpl
jb
add
lcall
fidivrs
push
xchg
adcb
push
inc
pop
mov
aaa
aaa
jbe
jecxz
pushf
cmp
push
outsl
push
adc
or
in
popa
repnz
push
mov
jae
sbb
cmpsb
inc
imul
repnz
sbb
add
fiadds
push
jnp
and
cmp
pop
xchg
xchg
and
inc
or
push
push
rcrl
out
mov
inc
inc
sbb
pop
ja
aam
dec
adc
das
sub
hlt
pop
fdiv
xor
fst
xor
lret
fwait
mov
inc
inc
out
push
and
mov
dec
or
jge
sub
cs
add
mov
and
sbb
je
mov
jnp
sarb
jb
sbb
push
cmp
je
fldl
and
jp
and
flds
daa
ss
dec
inc
ja
cmp
sti
enter
inc
ja
repz
out
pop
xor
mul
stc
nop
push
push
inc
sub
add
jns
pop
push
cmp
aad
sub
push
aam
scas
adc
pop
jle
pop
cmp
es
pop
cmp
pop
popa
cs
push
inc
or
pop
inc
fsubrp
rcr
mov
aaa
and
jns
iret
ret
push
inc
inc
and
push
push
ss
sub
je
aam
data16
popf
loopne
sbb
xchg
push
sti
push
push
pop
cmp
push
dec
push
pop
movsl
mov
or
xlat
insb
xor
jle
inc
cwtl
sub
pop
mov
inc
int
mov
push
aad
push
inc
mulb
push
fstl
and
mov
jb
and
adc
faddl
push
inc
in
mov
es
push
add
dec
push
jo
out
pop
stos
loopne
or
in
jmp
push
test
cwtl
or
or
test
sarl
ret
adc
inc
adc
mov
inc
sub
xlat
inc
stos
jo
lock
add
sub
out
loopne
adc
ficoml
adc
mov
dec
add
adc
loop
push
mov
push
push
cmp
repz
sbb
inc
test
xchg
sbb
or
cwtl
rcr
ret
int
xlat
adc
xorl
outsb
sbb
dec
in
push
scas
jecxz
por
ljmp
clc
popf
mov
inc
push
or
pop
or
jmp
jecxz
or
stos
xor
xlat
push
mov
or
sbb
ret
sub
add
cmpsb
test
cli
add
jnp
push
push
in
mov
out
push
adc
adc
pop
mov
push
loopne
sub
cs
inc
pop
inc
jbe
stos
lock
test
gs
push
and
rol
mov
mov
cmp
inc
imulb
dec
and
jns
push
xorb
and
or
add
inc
cli
lret
jl
push
pop
adc
out
nop
or
or
daa
movsl
sub
xchg
xor
push
cmp
out
cmpsb
out
pop
test
out
fildl
sbb
jp
add
push
jmp
mov
pusha
scas
jle
ret
xlat
sub
pop
mov
add
iret
sub
add
sbb
add
or
push
sub
push
scas
popa
test
push
mov
adc
mov
stos
inc
sbb
adc
add
sub
add
scas
outsl
push
imul
or
push
or
add
xchg
out
adcl
je
push
sub
cmp
or
xor
mov
stos
ret
pop
ss
cmp
push
mov
call
dec
adc
sub
or
adc
mov
sub
test
xor
adc
adc
ss
clc
movsb
add
or
enter
js
sar
ret
or
add
mov
push
daa
and
fsubrl
push
adc
test
and
push
loope
sarb
adc
pop
pop
push
sbb
adc
add
jae
mov
inc
xor
ss
insl
mov
inc
and
lock
inc
out
add
add
adc
stos
fs
adc
stos
xchg
loopne
inc
bound
push
pop
std
jo
rolb
or
add
xchg
or
sub
push
loop
sub
and
xchg
ds
pop
sub
shlb
das
sub
cmpsl
pusha
sbb
xor
int
and
pop
cmp
add
xor
ret
and
lret
jmp
repz
inc
es
xchg
out
mov
and
push
and
iret
movsl
insl
daa
push
and
push
and
dec
sbb
inc
push
mov
pop
sahf
dec
and
dec
and
mov
push
es
push
add
outsb
pop
or
sub
add
pop
sbb
sub
out
movsl
pop
scas
pop
adc
dec
sbb
sub
add
dec
js
aaa
push
cmc
pop
shl
jae
sbb
and
int
pop
sub
ret
sbb
and
xor
lods
dec
js
lahf
jg
fistps
mov
jp
lret
repz
jb
adc
mov
outsl
es
mov
add
out
inc
push
adc
adc
shl
adc
imul
or
stos
popa
pop
mov
or
ja
mov
pop
imul
mov
ljmp
pop
lret
inc
in
sbb
add
sbb
push
pop
sbb
or
cs
pop
stos
push
lock
push
jns
pop
xchg
mull
movlps
add
lea
sti
and
ss
and
pop
add
adc
es
lock
dec
and
pop
and
push
fbstp
jbe
cmp
testl
inc
sub
add
sub
ret
ss
jnp
or
adc
in
aas
push
inc
test
loopne
loopne
dec
stos
ret
adc
sbb
add
cs
adc
inc
in
push
outsl
or
jl
push
push
add
adc
cltd
push
ja
add
aas
dec
out
stos
lock
xchg
jae
lret
add
inc
in
xchg
mov
jecxz
mov
lret
push
jo
inc
aaa
orb
fstpl
outsl
pop
inc
inc
sub
and
out
push
ret
xchg
subb
popf
or
out
and
loopne
push
inc
or
mov
add
lock
imul
pop
pusha
loopne
and
push
push
popf
mov
push
aas
fildl
or
dec
icebp
jb
ret
fstpt
jecxz
test
test
jnp
and
and
jae
ret
popa
arpl
mov
and
push
inc
sub
xor
mov
sub
add
pop
aas
and
cwtl
mov
pop
adc
push
sub
push
or
sub
and
pop
cmpsb
or
adc
add
arpl
and
subb
and
sub
or
outsl
inc
or
jne
lods
das
imul
flds
sub
adc
out
or
xchg
jo
dec
or
xor
push
jo
push
jo
out
xchg
push
sbb
dec
rolb
inc
es
adc
or
adc
pop
out
or
call
or
fwait
mov
jae
loopne
pop
push
outsb
in
add
push
xor
cmp
jge,pt
out
sub
add
loop
add
mov
mov
cmpsb
add
out
lock
adc
test
adc
xor
adc
xorb
stos
jo
inc
inc
in
jnp
adc
inc
pushw
mov
xchg
mov
nop
pop
and
add
add
jecxz
call
cld
packsswb
add
push
pop
adc
jae
ds
fwait
add
sbb
adc
inc
pop
push
outsl
adc
and
push
adc
or
pop
add
pop
mov
outsl
lret
mov
xchg
inc
push
sbb
push
test
or
push
pusha
push
shll
pop
loopne
pop
adc
loop
popl
or
push
push
sbb
ljmp
xor
dec
pop
cmp
and
mov
ds
fisubrs
adc
loopne
add
outsl
xor
loop
ja
add
pop
loope
inc
dec
jecxz
mov
adc
cmovge
aaa
push
inc
in
mov
adc
test
mov
ret
ja
data16
pushf
cwtl
cmpb
cmp
xchg
inc
jae
fcmovnbe
mov
mov
or
mov
push
xor
test
cli
and
add
sti
outsb
pop
push
fdiv
lret
add
add
insb
ss
int
add
push
add
add
add
int
mov
add
add
add
insb
ss
sub
xor
xor
cmp
cmp
cmp
dec
add
push
add
fldcw
popa
add
data16
fwait
int
add
jno
js
call
stc
pusha
pusha
add
pusha
incl
jg
int
into
lret
inc
pushl
data16
mov
add
add
add
iret
insb
add
cmp
mov
outsb
jbe
push
ffreep
fwait
int
mov
add
add
add
add
add
sub
insb
ss
add
mov
and
pusha
pop
je
sti
dec
movsb
mov
push
dec
add
adc
add
dec
mov
inc
adc
or
add
sbb
inc
or
add
or
sub
sbb
nop
filds
add
inc
add
or
not
sbb
dec
sbb
out
xor
or
pop
xlat
sbb
dec
adc
adc
adc
xchg
adc
mov
jae
or
or
fucompp
rcrl
add
shl
xor
inc
adc
jbe
inc
adc
sbb
jecxz
inc
adc
add
add
xor
sub
sub
stos
in
adc
imul
aas
adc
mov
popa
inc
setp
fdivs
jbe
inc
or
jbe
and
adc
leave
rep
into
pop
and
mov
add
cmp
cmp
mov
or
ds
int
xor
push
das
cmpsl
bound
adc
inc
ud2
aas
movsb
and
mov
shlb
sub
cs
stos
jge
sbb
push
repnz
and
dec
push
add
fnstcw
test
jecxz
pop
add
leave
xor
adc
pop
dec
dec
jae
pop
jb
cmp
ss
and
mul
xchg
xlat
pop
xchg
aaa
dec
repnz
add
add
sbb
and
cmp
scas
sbb
dec
pop
add
andl
test
fwait
add
sti
enter
femms
or
or
push
add
dec
mov
in
cs
movups
psubq
sub
push
or
adc
push
pop
andb
pop
push
add
or
or
rcl
lcall
es
push
or
or
inc
mov
bndldx
cmp
push
push
sbb
sub
sbb
inc
call
and
adc
dec
sbb
push
and
andl
int
and
or
add
loope
setnp
repnz
enter
mov
or
nop
lret
mov
cmovns
and
adc
xchg
and
sbb
add
dec
repz
xchg
jg
pop
add
inc
inc
pusha
jae
add
in
outsb
ja
cmp
ss
aam
outsl
sub
fisttps
outsb
loopne
rcll
aas
aaa
jo
and
xor
aaa
sbb
leave
adc
loopne
mov
fbld
add
cmpb
loopne
dec
je
inc
inc
ffreep
out
outsb
pop
sub
pop
push
fmull
sub
filds
cmpsb
test
pop
and
test
mov
push
add
add
bnd
pop
das
cmp
or
aad
push
addl
jo,pn
or
fcomps
fists
dec
push
mov
dec
cltd
xchg
and
dec
loope
sub
inc
mov
mov
sub
push
inc
ret
and
xchg
dec
dec
dec
or
adc
adc
dec
out
sub
cs
dec
rcr
inc
cmpsb
dec
pop
fistps
add
dec
ja
cltd
xchg
test
or
pop
xchg
or
add
or
xor
dec
dec
xor
and
push
add
sbb
and
xor
add
inc
inc
inc
and
cmp
inc
or
dec
dec
dec
cmpsb
mov
inc
or
push
push
dec
dec
addr16
nop
or
inc
dec
dec
xor
dec
push
dec
dec
push
adc
and
xchg
or
dec
andb
adc
inc
jl
or
inc
or
cs
or
add
imul
push
nop
push
or
cmp
fucomp
insl
mov
cmp
inc
push
sbb
pop
pop
adc
pop
and
and
push
sbb
cmp
rorl
push
add
stc
inc
sbb
pop
sub
or
scas
fcmovu
jbe
nop
inc
push
push
lahf
mov
stc
into
ss
pop
pop
add
sbb
int
sti
xchg
adc
dec
pop
sbb
adc
add
push
push
or
cmp
xor
mov
push
imul
xchg
sub
pop
and
pop
jb
push
adc
ss
stc
sbb
mov
xchg
cmp
sbb
int
mov
sub
cmc
cmc
stc
cs
adc
in
adc
xchg
cmp
pop
add
arpl
enter
mov
ja
or
add
push
mov
inc
dec
cld
xchg
xchg
into
pushf
pop
adc
mov
push
cmovnp
xchg
lcallw
mov
adcl
inc
dec
outsl
push
iret
pop
test
out
sub
adc
push
xor
dec
fstpt
push
push
ja
rcll
imul
adc
add
inc
into
mov
and
sub
push
add
jle
add
jg
sbb
and
test
filds
dec
lret
mov
out
lahf
dec
or
lock
adc
mov
dec
inc
add
mov
add
inc
inc
ret
sub
or
push
adc
xor
into
adc
add
xchg
out
xlat
or
dec
mov
jmp
mov
lods
add
pusha
ficoml
in
pop
out
addr16
sbb
cmp
cmp
mov
out
adc
out
cltd
jmp
in
xchg
sbb
add
adc
in
inc
ja
jecxz
ret
imul
add
test
or
imul
inc
adc
dec
mov
mov
push
sbb
push
popf
add
mov
shl
mov
in
push
shll
add
pop
es
int3
xor
or
sbb
icebp
dec
mull
jbe
mov
push
mov
pop
inc
dec
and
sbb
sahf
cmp
cmpsl
push
push
jb
push
mov
lret
add
xor
cvttps2pi
es
add
pop
push
or
ja
lods
scas
xor
sub
mov
dec
loop
pop
movsl
ret
fldl
pop
add
ficomps
movsl
push
adc
xlat
call
lock
mov
push
or
push
or
fs
mov
mov
loope
lods
hlt
imul
adc
addr16
sub
std
xor
es
xor
maskmovq
testl
ficomps
es
test
xchg
or
mov
xor
pop
cmpsl
inc
and
nop
into
loope
sbb
sbb
pop
lock
jnp
add
test
mov
add
sbb
push
jns
and
fadds
cmp
or
stc
jbe
sub
and
push
jae
sub
sub
mov
outsl
and
jo
shrb
and
push
mov
outsl
and
nop
cmc
pop
mov
cmp
ss
outsl
sbb
psrlq
sahf
orps
or
sbb
fiadds
subl
inc
orb
and
out
out
loope
pop
push
lcall
loopne
or
add
nop
or
decl
adc
mov
xor
pop
or
jnp
mov
aas
adc
cmp
out
xor
nop
or
movlps
inc
rorl
adc
pop
nop
fistps
sbbl
scas
mov
std
inc
ss
jb
fdivrl
sbb
arpl
mov
and
fcmovu
dec
mov
les
push
sbb
fld
and
call
inc
mov
mov
add
mov
inc
xor
xlat
and
add
setbe
lahf
aaa
push
inc
and
repz
rdmsr
sbb
mov
or
jo
inc
push
push
xchg
and
push
push
jae
loope
jnp
and
or
loopne
and
xor
xchg
sub
sbbb
cmp
lahf
in
or
and
stos
cmpsb
push
fcomps
fidivrl
fwait
add
repnz
push
push
sbb
add
outsl
inc
push
or
in
repnz
stc
and
lock
and
push
lock
adc
jo
sbbb
les
dec
fwait
scas
cs
lock
les
adcb
or
sub
out
cs
push
ds
adc
imulb
cs
pop
adc
imul
insl
mov
add
punpcklwd
jg
fcomps
xchg
or
testb
adc
ret
mov
xchg
adc
popa
orl
and
icebp
and
dec
popaw
sub
and
or
fstl
test
push
or
sub
pop
test
loopne
bound
popa
fistpl
adc
adc
sub
add
and
xor
sti
pop
imul
add
adc
movsb
push
mov
adc
icebp
popa
fbld
sub
popf
movl
add
jae
sub
scas
cltd
shr
enter
or
out
add
xchg
push
call
lods
mov
popa
push
sahf
sbb
popa
mov
cwtl
mov
adc
pop
ror
negb
test
pop
ror
dec
mov
mov
es
sbb
insl
sarb
push
fisubrs
movsb
bound
mov
gs
adc
pop
pusha
fcoms
pop
aaa
outsl
cmp
jp
add
and
lock
scas
insl
ret
rorb
or
sbbl
cmp
mov
add
fistps
adc
mov
mov
add
imul
ss
jnp
fistpl
aaa
pop
and
sbb
pop
cmp
loopne
mov
aas
pop
inc
add
xorb
bound
fs
addr16
movaps
mov
xor
shrl
and
push
aas
jb
or
mov
test
loope
test
jbe
lret
and
add
sbb
ret
adc
outsb
sub
push
inc
orb
rolb
push
in
inc
insb
cwtl
nop
dec
pusha
jp
jge
and
insl
and
gs
mov
cmpl
mov
fs
gs
inc
or
mov
jmp
incb
dec
mov
andl
jbe
xchg
sbb
je
push
outsb
ja
fs
je
mov
addr16
imul
arpl
addr16
push
jne
jb
stc
inc
fs
push
inc
mov
nop
xor
inc
jne
cmp
push
jb
je
inc
imul
adc
popa
insl
cmp
sbbl
add
cmp
xor
or
gs
mov
subl
test
fs
lret
outsl
dec
testb
ss
mov
jmp
dec
pusha
outsl
je
jns,pn
jne
and
push
jns
test
insb
xchg
cmp
xchg
sbb
xor
and
pusha
dec
mov
dec
lods
testl
inc
push
setno
testb
adc
adc
imul
inc
push
push
pop
jb
arpl
js
lahf
sbb
push
imul
dec
fs
mov
jae
insl
js
jae
jnp
pop
lret
adc
dec
out
andl
push
cwtl
lods
loope
pop
or
xchg
pop
pop
fwait
sub
aas
dec
in
popa
mov
arpl
jnp
rcrl
sbb
dec
add
loopne
pcmpeqb
mov
push
or
inc
lock
pop
popl
inc
add
imul
movlps
insl
fiadds
sbb
into
cmp
pusha
testl
nop
push
enter
js
fcoml
rcrl
and
jb,pn
testb
leave
adcb
dec
inc
dec
jae
fistps
dec
sub
add
jo
outsb
inc
jnp
push
dec
rcrb
jl
loopne
out
mov
add
mov
add
sbb
pop
sub
and
xchg
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
pop
inc
add
