dec
xor
cwtl
and
in
repz
cmp
push
cli
leave
out
mov
in
xor
mov
dec
es
and
cltd
mov
in
xchg
dec
xchg
int3
inc
xor
lret
cmp
adc
mov
in
mov
and
test
lea
mov
icebp
enter
sub
into
xor
hlt
and
mov
pop
addr16
inc
mov
sub
loopne
inc
inc
gs
mov
dec
mov
in
pop
rcrl
cwtl
ret
aas
movsb
fsubr
inc
xor
jae
shl
ja
inc
mulb
or
fcoml
in
aam
mov
mov
jg
popf
xor
outsl
xor
xor
cltd
loop
std
in
push
jl
xchg
jle
jl
cwtl
popa
xor
sub
mov
fisttpll
mov
sbb
inc
imul
dec
jo
in
cmp
bound
out
xchg
addr16
lret
dec
lea
xor
push
jnp
mov
cmpsl
mov
pop
test
vsqrtpd
dec
inc
out
pusha
int3
xor
shr
adc
sub
mov
jg
orl
lods
push
sbb
xor
jge
stos
cmp
mov
ljmp
cli
das
mov
shrl
mov
add
sahf
jne
jb
fisubrl
lret
hlt
add
sbb
mov
and
test
in
cmp
push
lds
into
les
in
icebp
push
adc
mov
imul
mov
cmpl
aaa
inc
jne
cs
cld
fsubrl
jg
inc
clc
fdivl
dec
addr16
repnz
jns
pop
ret
icebp
stc
negl
jnp
insl
lahf
cmp
sbb
sti
xor
fisubrs
or
jg
or
adc
ret
xor
cld
imull
cmp
ja
fsubr
pop
lods
leave
vmwrite
test
mov
imulb
mov
push
jg
testl
mov
imul
daa
lcall
icebp
dec
mov
sbb
int3
insl
mov
scas
mov
mov
pop
dec
push
mov
push
test
inc
movsl
inc
test
mov
jns
adc
mov
js
pop
rolb
test
cld
je
inc
push
cmp
xor
push
fadd
sbb
inc
xor
out
clc
iret
fdivs
ret
ss
jle
pop
sbb
sahf
add
jo
cmpb
sbbb
test
stos
mov
push
dec
popf
popf
mov
repnz
adc
cmp
cmp
fwait
lret
cmp
xlat
sbb
sbb
js
jmp
xor
rorb
sub
lret
pusha
mov
fidivrl
decl
aaa
out
adc
or
xchg
or
loope
dec
mov
lock
hlt
fmull
lret
lock
xor
cld
into
push
addr16
inc
int3
xlat
lods
fstl
pop
pop
paddw
pop
fdivl
bound
cmp
sbb
pop
imul
test
enter
dec
dec
cli
push
mov
jae
mov
adc
fdivrs
mov
sbb
cwtl
scas
add
std
fsubs
aaa
les
fsubs
mov
inc
cwtl
xor
js
xchg
adc
mov
jno
adc
xor
call
in
gs
fdivrl
daa
lods
pop
ror
pop
enter
clc
add
insl
nop
pusha
and
cmp
mov
int3
fs
xchg
xchg
fwait
popf
mov
inc
dec
out
adc
fcmovnbe
hlt
adc
lds
push
rclb
cmpb
push
les
ljmp
and
dec
stos
push
dec
mov
jno
cmp
enter
loop
pop
pop
and
aad
add
xor
lret
mov
loop
add
xchg
inc
xchg
pop
xor
test
addr16
mov
ret
notl
mov
lahf
idiv
jbe
and
jp
inc
dec
cmp
push
shlb
flds
insl
cmp
jge
and
push
or
aad
orb
xlat
add
dec
jge
ret
divb
out
cmp
or
ljmp
dec
pop
sbb
cmpsl
lea
addr16
push
pop
pop
jo
loope
in
mov
add
push
test
mov
xor
bound
leave
in
pusha
mov
ja
mov
adc
xchg
and
cwtl
xchg
enter
mov
enter
pop
clc
dec
cmp
dec
mov
mov
jb
cltd
divb
inc
jle
test
mov
push
xchg
scas
lds
les
cmp
cmp
sbb
loop
mov
jns
mov
push
aam
mov
inc
mov
fnstcw
xchg
sbb
in
xchg
sub
inc
loop
mov
pop
jbe
push
xchg
popf
out
jo
xor
pop
mov
jae
pop
lahf
lods
lea
cmc
fbstp
and
mov
jae
mov
xlat
dec
xor
fsubrs
shll
push
repz
add
loopne
adcb
lds
mov
xor
adc
adc
add
push
xor
lahf
ja
and
add
test
cli
and
fs
push
out
cmp
fisttpll
arpl
jae
dec
and
orl
sub
int
arpl
xor
int
std
outsl
or
sahf
mov
fsubrs
adcb
and
pop
gs
pusha
ljmp
fstps
in
addb
popa
dec
pop
js
fiadds
sahf
dec
mulb
xorl
or
inc
cmpsl
xchg
jecxz
adcb
jnp
mov
lahf
add
push
jo
aaa
add
dec
cmpsl
cmpsb
test
dec
adc
jp
add
and
mov
xlat
mov
push
andl
test
popf
outsl
imul
pop
push
push
add
mov
iret
xchg
push
jmp
cmp
sbb
movsb
xorb
pop
and
jbe
cmp
lahf
icebp
hlt
pop
mov
push
mov
or
ret
xchg
add
pusha
push
pop
adc
fwait
stc
or
mov
push
test
sub
pop
xchg
sahf
shl
cmpsb
sbb
jmp
insb
push
loope
mov
sub
popa
rcrl
or
push
dec
ljmp
fdivl
in
fstl
daa
insb
popl
mov
inc
jnp
mov
push
ljmp
inc
out
into
xchg
jmp
jle
fildll
movsl
enter
mov
pop
jp
adc
imul
outsb
orl
negl
outsb
sub
mov
jb
rcll
lock
andl
fcompp
mov
jmp
dec
sub
lahf
adc
andl
sub
mov
jp
xlat
push
les
fwait
aad
pop
out
imul
imul
outsl
cs
add
add
rcr
cmp
push
pop
adc
stos
lret
pop
push
cmp
push
or
sub
jbe
pop
pop
mov
mov
lret
and
push
fidivrl
rcl
mov
pop
mov
add
cmovl
outsb
jnp
adc
jge
aaa
jle
jns
orl
shrb
sbb
push
mov
dec
dec
push
out
xchg
pop
rorl
lock
leave
mov
das
inc
int3
call
loope
xchg
mov
pusha
lcall
daa
cmp
cs
jmp
fistps
stos
inc
mov
imul
and
cltd
mov
or
fidivl
push
dec
sarb
jge
xchg
mov
adc
push
mov
mov
popa
scas
std
hlt
or
arpl
neg
pop
push
loopne
adc
add
es
es
cwtl
into
mov
mov
push
and
in
mov
cmpsb
shrl
in
jle
xchg
mov
and
fisubs
xchg
cmpsl
mov
pushf
and
jnp
into
loop
lret
push
inc
or
les
iret
popf
fists
loopne
insl
aas
outsl
stc
adc
xor
sarb
sbb
call
cli
jne
and
in
testl
rcr
mov
adc
mov
out
and
sarl
ret
les
adc
inc
shl
jne
les
sub
jnp
andl
push
stos
shl
cmpsl
sbb
adc
icebp
and
leave
mov
sub
inc
mov
gs
mov
add
out
outsl
jb
cld
push
jle
js
lods
clc
pop
ljmp
pop
or
mov
mov
in
jns
ja
dec
jle
dec
hlt
mov
lret
lret
shlb
add
add
mov
and
jb
out
scas
hlt
adc
filds
cs
popa
dec
loope
insb
xchg
cltd
lret
lret
sbb
jae
push
shll
dec
aam
jg
push
sub
mov
add
int3
cli
lcall
test
lea
xchg
into
clc
fsubl
fadds
add
outsl
xor
jae
pop
loop
cld
mov
ret
jo
shl
ffree
inc
jp
popa
je
frstor
and
jecxz
imul
jg
rclb
sub
add
xchg
ljmp
nop
xchg
or
outsl
jle
and
mov
mov
out
cmp
sarb
ljmp
pop
sub
push
dec
arpl
fildll
stc
xchg
sbb
scas
rol
icebp
push
popa
loope
int3
insl
dec
inc
lods
lds
add
nop
lret
iret
or
xchg
and
push
sub
jae
cmp
xchg
ds
sub
xchg
xor
fisttps
dec
insl
shrl
mov
dec
push
repz
xor
scas
jmp
cltd
sar
mov
dec
inc
adc
inc
xchg
fwait
leave
inc
xchg
loope
mov
and
test
cwtl
rorb
test
dec
fcompl
scas
add
in
ds
shll
pop
sub
pushf
inc
cli
arpl
ja
pop
mov
rcl
mov
pop
imul
mov
or
fcmovne
sbb
loopne
xchg
lods
lea
add
xchg
rolb
outsb
pop
mov
js
sahf
test
jle
out
or
cmpsb
or
pop
mov
out
movsl
lcall
gs
int
dec
sub
in
stos
aas
mov
inc
loop
scas
aas
jb
aad
stc
scas
lret
std
out
pusha
sub
cmp
or
and
lods
int
fisubrl
cmp
xchg
loopne
push
loop
fimuls
pop
adc
fwait
xchg
mov
pop
pop
out
out
enter
mov
in
mulb
and
xchg
jns
call
lods
sbb
int
mov
orb
push
ret
pop
js
test
xchg
inc
cli
movsb
movsl
shlb
adc
popf
cli
imul
mov
push
pop
jge
jle
inc
std
jl
mov
cmpsb
shrl
mov
sahf
dec
pusha
and
movsb
out
fucomi
ss
insl
sub
scas
fdivrl
mov
out
ret
insl
add
notl
test
ss
bound
mov
dec
cwtl
imul
pop
pop
mov
mov
aam
cmp
lret
dec
test
inc
mov
jmp
insl
out
dec
popa
imul
rolb
sub
adc
int
cmp
xor
nop
dec
jl
inc
sahf
mov
mov
pop
dec
out
cmp
testb
test
imul
fstpt
pcmpgtb
mov
xchg
inc
in
pop
int3
dec
push
stos
jle
jbe
ljmp
mov
out
insb
inc
imul
clc
es
call
mov
add
push
stc
cvttps2pi
lcall
mov
mov
lods
and
sbb
mov
mov
aam
aaa
inc
aad
push
or
sbb
xchg
pusha
in
mov
and
loopne
hlt
mov
dec
jl
cmc
pop
daa
out
lret
popf
lret
jecxz
test
ds
xchg
movsl
and
scas
jnp
sahf
xor
pop
ss
dec
je
jb
mov
sahf
pusha
and
add
xor
cltd
ret
mov
xor
mov
adc
mov
mov
mov
pop
adc
pop
repnz
and
scas
into
cmp
aaa
jnp
pop
mov
jp
xchg
inc
in
inc
in
push
sub
loop
ret
xchg
outsl
and
scas
inc
jmp
pop
fs
jnp
xor
call
nop
and
rolb
push
adc
pop
jno
inc
jmp
fld
data16
push
orl
push
ljmp
adc
cmpsl
pop
push
xor
mov
sbb
notb
mov
call
and
mov
inc
cmp
ja
mov
sub
int
cmp
and
insb
mov
arpl
cmp
jecxz
and
sti
lods
jb
or
mov
push
jbe
dec
rclb
nop
mov
lcall
sbb
adc
nop
es
and
and
adc
jbe
loop
inc
mov
jecxz
push
stc
fnstenv
out
sbb
rclb
jmp
in
xor
adc
cmp
iret
xchg
lcall
out
jo
cwtl
xor
mov
push
mov
incb
loopne
aas
pop
test
cli
push
push
ret
mov
sbb
insl
add
cmp
jmp
jl
mov
xchg
inc
mov
pop
in
aad
pushf
wbinvd
pop
pop
jbe
push
test
repz
dec
jl
and
dec
inc
mov
sbb
lods
jle
int
adc
int3
movsb
addr16
lock
aad
mov
sub
pop
mov
add
repz
adc
into
pop
insb
push
jecxz
in
or
xor
sub
cwtl
arpl
sbb
jecxz
pop
inc
daa
jno
xchg
ret
pop
or
or
pop
cmp
outsb
xor
sub
andl
mov
repz
imul
repnz
aad
dec
mov
int
loop
ja
jmp
mov
movsb
stc
data16
add
addr16
mov
sub
jmp
adc
xchg
push
stc
stc
enter
sub
or
xor
js
cltd
xchg
mov
sahf
adc
in
sub
and
push
roll
adc
repnz
pop
jle
cmpsl
mov
push
jo
into
jnp
mov
inc
xchg
leave
jnp
mov
ret
mov
adc
xchg
push
in
xchg
jbe
sbb
jg
dec
pop
testb
pop
dec
sub
add
sbb
lret
mov
sbb
mov
aas
mov
jo
fcoms
pop
mov
dec
cld
lods
clc
mov
mov
das
xor
in
sub
in
mov
iret
out
fildll
jne
into
arpl
test
lods
inc
icebp
notb
inc
push
and
mov
adc
into
inc
loopne
pop
or
pop
push
lock
xchg
cmpb
cltd
or
loop
in
mov
add
out
rcll
mov
adc
dec
push
int3
push
xor
repnz
xlat
out
outsb
in
dec
mov
roll
mov
call
mov
push
and
mov
movntps
lods
out
pop
nop
xchg
or
in
pop
sub
pop
xlat
cld
or
mov
and
pop
xor
mov
out
inc
sahf
hlt
lahf
dec
mov
leave
lret
sub
cli
mov
inc
mov
or
out
addr16
and
loop
cld
enter
pop
push
mov
stc
out
stos
mov
stc
inc
pop
mov
ror
in
cmpsl
sub
inc
das
scas
into
adc
gs
mov
mov
pushf
cmpsb
lret
mov
add
fmuls
shl
pushf
inc
xchg
add
dec
cmpsl
fwait
mov
pop
sbb
mov
jb
push
mov
ss
sti
mov
xor
dec
leave
test
pop
pop
add
push
js
sub
xor
int
jp
out
fwait
jae
cwtl
push
pop
bound
add
push
xor
aam
mov
leave
mov
push
ss
mov
cltd
fcoml
imulb
sbb
fs
push
mov
pop
das
pop
repnz
mov
dec
out
aas
mov
data16
push
jo
or
pop
mulb
pop
xor
sbb
jnp
clc
test
mov
sub
stos
call
test
sub
sub
pop
movsb
xchg
adc
sub
push
push
in
sahf
in
jnp
cld
xchg
add
jbe
mov
lret
pop
hlt
mov
test
jmp
das
out
les
mov
pop
rol
fists
fwait
or
jnp
in
jmp
inc
cmpsb
adc
dec
mov
mov
add
mov
sub
jo
mov
jns
aad
push
push
inc
out
jb
repz
cmpsl
sub
add
mov
inc
jmp
test
outsb
divb
xor
pop
inc
xchg
or
mov
jmp
flds
int3
loop
repnz
adc
push
mov
adc
add
popa
xor
sub
mov
pop
fdivr
push
push
add
js
mov
negl
mov
cmp
popf
out
lock
pop
jns
inc
int3
cmp
xor
adc
rolb
cmpb
out
aam
push
cmp
xor
stc
ret
push
int3
lds
call
mov
adc
pushf
mov
pop
clc
lds
lods
das
call
pop
aad
stos
fisubl
stc
xchg
clc
xchg
cli
pop
test
das
cmpsl
inc
test
and
aad
adcb
ds
push
movsb
stc
xchg
movsl
push
lock
mov
loop
mov
mov
adc
xor
push
cs
and
mov
sbb
icebp
shrb
cs
icebp
xchg
in
push
out
lock
aam
lahf
sub
add
fldln2
cwtl
movntps
into
inc
icebp
and
xor
btc
mov
popa
andl
ror
xor
sbb
call
push
pop
notl
cld
outsb
mov
ja
iret
lret
std
sub
or
popl
sbb
jns
je
dec
add
iret
ss
rcrb
enter
movsl
in
int
jmp
shll
add
adc
cld
test
cmpsb
sub
cmp
sub
in
sub
sub
je
iret
sub
mov
lret
sub
push
hlt
jecxz
jnp
mov
mov
lods
add
sbb
mov
jge
stc
cli
imul
mov
call
xchg
mov
in
dec
mov
aad
or
dec
cmp
add
or
mov
mov
cmp
fwait
cmpsb
add
popa
sbb
aaa
cmpl
das
out
xchg
sbbl
addl
mov
lods
push
xor
inc
add
jo
mov
mov
cmp
mov
daa
xor
addr16
stos
in
cmp
jno
stos
adc
sahf
xchg
dec
dec
in
jnp
stos
add
cli
fiaddl
leave
adc
mov
push
mov
sahf
popa
andl
jbe
leave
cld
inc
or
jbe
les
push
push
stos
push
add
jne
dec
into
xor
fwait
sub
cmp
ja
pop
sahf
lret
fucomip
or
fldl
cmpsl
int3
jno
or
dec
push
xchg
pusha
int
ret
jmp
outsb
push
ret
sbb
sbb
aad
sbb
sarb
pushf
sbb
stos
inc
ja
jp
jno
sbb
xor
add
mov
xbegin
dec
push
xchg
pop
push
test
mov
and
repnz
jo
fdivr
cmpb
xchg
aam
sbb
lods
xchg
cwtl
je
rcr
test
cmp
lcall
jge
mov
pop
sbb
cmp
fldl
loop
lods
xor
xchg
pop
adc
inc
push
fs
mov
mov
mov
insl
leave
mov
sahf
arpl
pop
push
or
dec
in
dec
sub
lret
mov
test
push
adc
dec
or
xlat
ja
pop
xchg
dec
adc
sub
jmp
lcall
fneni(8087
adc
and
add
inc
jecxz
sub
gs
inc
and
adc
out
mov
sub
adc
lods
mov
pop
mov
ja
xlat
dec
cltd
scas
int
cmp
notl
out
js
jmp
imul
add
mov
in
mov
fwait
ror
arpl
jns
xor
xor
shrl
mov
int3
pop
and
cltd
mov
adc
imul
popf
and
cld
lds
push
lret
pop
ret
cs
mov
mov
pop
inc
adc
xor
dec
mov
test
cltd
push
adc
mov
fcoms
lds
inc
xchg
adcl
push
fadds
cmpsl
rcl
xor
lea
enter
test
les
pop
int3
daa
xchg
mov
xchg
je
fistl
xor
jno
mov
fbstp
out
dec
xor
mov
or
pop
pop
rcrl
outsl
stos
adc
enter
bound
xchg
lds
adc
cltd
enter
andb
fsubl
mov
ds
out
dec
mov
push
or
test
movsb
bound
rorl
jl
addl
in
and
fcompl
cmc
cltd
ds
jge
jecxz
in
dec
add
add
cmp
mov
pop
sbb
cmc
lds
mov
mov
leave
pop
sbb
in
push
adc
cmc
inc
or
jl
dec
movsb
jnp
or
and
push
movb
imul
lret
jmp
jne
jae
rcrb
jb
adc
mov
ret
mov
and
movsb
jle
outsl
jmp
jl
jl
fwait
push
jo
lds
je
int3
push
cwtl
gs
adcb
btr
dec
outsl
push
sbb
rcr
xor
lcall
mov
hlt
fwait
or
add
cmp
lea
fs
faddl
test
addr16
subl
lds
fistl
xor
daa
sub
outsl
sub
out
sarb
fimull
out
xor
ds
jae
in
ret
cmp
or
push
jecxz
mov
push
into
repnz
test
shr
insl
jo
insl
jl
ds
inc
fwait
ss
stos
daa
cmp
xchg
jmp
bound
out
scas
jne
inc
cmp
cmp
shrb
call
dec
repnz
mov
ljmp
stc
pusha
ds
push
pop
mov
scas
lret
sar
or
pop
decb
dec
jbe
cmp
in
or
insl
test
jno
fistps
lock
adc
dec
sub
aas
out
stc
mov
sbbb
lods
lea
or
jg
leave
subl
cmp
cmp
les
cli
push
jg
sbb
adc
push
test
std
test
cmpsb
sqrtps
inc
popf
jmp
xchg
inc
sub
adcb
add
sub
jle
jmp
lock
push
loopne
inc
gs
test
mov
lods
insb
imul
sbb
add
out
lcall
xlat
dec
push
add
push
scas
scas
fsubl
sarl
lds
aas
repnz
xchg
push
add
pop
xor
sbb
cmpsb
dec
mov
mov
push
inc
dec
lods
inc
js
pop
movsb
mov
sbb
lahf
xlat
pushf
pop
inc
inc
jmp
xor
mov
add
adc
fisttps
mov
or
jl
or
jne
sub
add
test
iret
fwait
jl,pt
jle
pop
dec
jno
dec
pop
idivl
das
call
mov
push
xor
aam
pop
xchg
push
movb
lds
push
cld
mov
inc
jge
jno
dec
pusha
inc
ja
jl
cld
insl
lock
repz
push
outsb
cld
mov
ja
mov
mov
rcr
mov
inc
stos
xchg
in
xchg
push
loope
adc
idivb
fs
xlat
or
mov
cld
iret
sbb
mov
adc
stc
or
cmp
xor
sahf
xlat
out
stos
or
outsb
das
mov
frstor
xchg
lods
scas
jp
cmp
jp
xor
loope
stos
lret
es
scas
push
xchg
sti
sub
push
in
xchg
xchg
add
ds
xchg
into
test
cli
inc
sbb
loop
iret
aam
sub
push
mov
cmp
jmp
jno
testb
pop
ja
cld
fiaddl
adc
mov
int
adcb
mov
std
dec
mov
lahf
out
add
fisubl
fiadds
imul
rolb
push
push
mov
test
fildl
lea
rolb
data16
or
ss
stos
xor
in
pop
and
fmuls
xchg
idivb
xorb
in
sbb
mov
outsl
pop
inc
cmovo
sbb
mov
aas
mov
dec
cmc
push
rolb
clc
into
lcall
scas
xor
lds
std
aas
fidivs
outsb
adc
xchg
jl
sub
mov
imul
push
icebp
data16
mov
leave
negl
leave
jnp
pop
je
xlat
leave
pop
popf
cltd
mov
dec
fadd
inc
adc
jl
int3
popf
sub
mov
mov
mov
mov
dec
xchg
dec
inc
push
dec
cld
sbb
mov
clc
test
ror
mov
subb
sbb
incb
mov
mov
mov
inc
testl
test
jo
push
rsqrtps
sbbl
int3
out
rclb
bound
subb
ljmp
adc
subl
mov
mov
mov
pop
xchg
mov
cld
and
mov
mov
cld
xor
sub
pushf
xor
add
dec
dec
mov
xor
jns
pushf
out
ret
cmp
jb
dec
mov
movsb
movsl
pop
or
mov
dec
or
es
or
push
paddsb
js
pop
lcall
call
je
insb
cmpsb
negb
dec
jb
pop
aad
mov
add
jl
dec
dec
imul
outsb
dec
push
or
ss
testl
pop
jg
lea
adc
hlt
insl
and
push
inc
cmp
idivl
repz
adc
and
cmp
shrb
dec
mov
mov
jl
inc
iret
ljmp
in
shl
js
popf
in
inc
cmp
mov
add
lret
stos
push
mov
xchg
js
test
nop
les
js
loope
mov
bound
popf
in
lret
es
les
je
push
lret
lahf
rol
xor
sub
push
cwtl
outsb
add
daa
pop
mov
aam
pop
mov
insl
test
sbb
add
aas
jp
sbb
int
out
arpl
inc
es
lods
xlat
cmp
sbb
aam
lahf
test
dec
mov
fildll
lret
xor
mov
ds
fwait
mov
inc
inc
es
sbb
jle
jno
in
imul
jge
add
pop
dec
data16
sbb
dec
stc
in
ljmp
in
das
daa
mov
int3
shll
xchg
inc
jecxz
out
push
cs
xchg
loope
ret
mov
jno
or
movsl
loopne
mov
push
sub
mov
add
mov
incb
movsl
cld
and
or
or
leave
pop
icebp
out
cmp
sub
mov
adc
adc
push
cmpsb
neg
or
insb
fadds
fildl
jbe
mulb
scas
inc
mov
mov
enter
xchg
loope
xor
mov
popa
push
sub
mov
and
test
rcrb
xbegin
in
std
sbb
and
repz
ss
int3
andb
pop
and
pop
jle
incb
pusha
push
fcoml
pusha
jnp
rcrb
enter
int
adc
ficomps
inc
pop
lcall
jbe
push
dec
dec
lea
out
call
pop
push
nop
dec
push
adc
mov
shrl
adc
mov
xchg
cmp
hlt
je
mov
jmp
xor
dec
shlb
push
jae
out
cmc
mov
push
jge
mov
cmpsb
out
push
lods
push
lahf
cwtl
nop
mov
jo
cmpsb
ret
adcb
xor
cwtl
mov
push
outsb
pusha
enter
out
in
inc
fdivrs
mov
xchg
xor
xchg
or
insb
mov
and
scas
add
xchg
lret
js
cmp
clc
pushf
aad
mov
mov
lods
or
je
shlb
mov
adc
rcrb
cltd
sbb
mov
jo
insb
adc
loop
in
xchg
hlt
scas
flds
dec
adc
xchg
dec
xlat
mov
jp
outsl
shll
sub
pusha
dec
ret
push
jmp
loopne
ror
shlb
jmp
hlt
imul
sti
pop
andb
and
mov
jge
xchg
pop
daa
pop
and
js
cmp
inc
xor
out
sarl
inc
enter
rcll
insb
add
xchg
mov
xchg
cmp
jl
test
cwtl
jno
icebp
mov
sarl
call
leave
sbb
icebp
icebp
mov
xchg
jle
pop
xchg
dec
fildll
outsb
adc
addr16
int3
or
shlb
jmp
jo
push
lods
lcall
lahf
push
mov
inc
in
inc
sbb
cmp
jge
xchg
dec
xor
leave
lret
push
roll
cs
stc
mov
aas
imul
or
xor
lods
ds
pop
mov
arpl
cmp
cwtl
pop
repz
out
mov
inc
cmpsl
pop
pop
stc
les
out
scas
push
in
dec
and
mov
mov
loop
mov
jo
fwait
lods
or
data16
push
jmp
pop
add
ret
les
jo
outsb
mov
out
adc
mov
sub
pusha
pop
negl
loop
stc
pushf
fcmove
call
mov
xchg
add
sbb
test
xor
inc
add
pop
mov
fs
xor
inc
lock
imul
loope
fimuls
int
xor
aaa
insb
xchg
xchg
jecxz
cmpsb
mov
scas
into
outsb
imulb
pop
test
gs
aad
in
movsb
cs
out
movsl
into
testl
movsb
mov
fisttps
sbb
out
bound
cmc
cmpb
xchg
repnz
stos
inc
mov
push
mov
jecxz
fistpll
add
sti
cmpsl
jo
mov
iret
or
sti
iret
cmc
push
bnd
sbb
jecxz
cld
dec
xor
add
and
push
pop
xchg
cmpsb
cwtl
pop
lods
lret
sti
lods
mov
jnp
sti
movsb
loope
xlat
mov
cli
mov
cmp
dec
sbb
adc
fldenv
shll
add
enter
loop
sbb
jns
pop
jmp
scas
xlat
aas
inc
lea
sub
xor
sub
dec
xor
push
add
cwtl
ss
lods
xchg
cmpsl
mov
subb
cli
mov
xor
fcoms
sbb
in
out
dec
xchg
test
mov
sub
push
ds
std
sub
cs
not
imul
ret
jl
test
adc
movsb
fs
jo
jp
pop
insb
mov
into
xor
fwait
notl
ss
dec
shrb
hlt
xchg
inc
ljmp
sbb
add
lret
lahf
lods
pop
or
xchg
in
xor
stc
jl
xchg
sub
mov
test
xchg
orb
out
pushf
lret
pop
repnz
cmp
push
cmp
push
divb
aaa
test
push
xchg
and
inc
dec
jo
push
mov
pop
ss
icebp
popf
aaa
pop
pop
cltd
add
push
test
mov
or
fidivrl
movsl
ret
mov
mov
movb
inc
mov
xchg
loop
dec
outsl
jle
lods
mov
add
les
clc
cwtl
js
jecxz
shrb
xchg
test
add
repz
or
push
int
sub
and
ja
nop
inc
xchg
aad
js
aad
sbb
hlt
add
add
pop
int
fidivl
or
in
add
in
shrl
mov
sub
shlb
sub
aam
andb
stos
je
sub
clc
scas
mov
imul
or
popa
test
dec
jle
dec
push
shlb
jnp
shl
imul
jne
jecxz
push
sbb
test
pop
cmpsl
loope
inc
cwtl
or
jle
and
and
mov
fs
popf
sub
mov
ljmp
rolb
cmp
cwtl
or
scas
leave
mov
jmp
mov
sbb
mov
in
adc
adc
sub
movsl
test
ja
leave
js
mov
mov
cmpsb
xor
repz
mov
movsb
dec
mov
push
push
lahf
dec
cmc
pop
add
scas
cmp
cmp
cmp
mov
add
add
shrb
dec
mov
pop
xor
push
loopne
lret
cmp
sahf
aad
jmp
aad
stos
jecxz
xor
pusha
fmull
jmp
cmc
mul
repz
mov
sub
sbb
sub
jnp
push
mov
mov
push
and
push
jmp
adc
xor
mov
or
cmp
sub
dec
xor
mov
dec
ret
insl
lret
cmp
out
ret
jl
ret
pop
enter
sbb
push
xor
push
imul
andl
clc
add
fstpl
iret
jg
pusha
and
gs
fildll
xchg
push
aaa
cmp
test
jnp
movsb
ret
movsb
je
adc
pop
xchg
mov
xchg
or
jne
mov
mov
xor
mov
xchg
sub
lret
push
mov
or
out
cmp
xor
or
mov
and
fistpl
dec
sbb
push
ret
dec
xchg
test
pop
xor
ja
pop
sub
into
pushf
and
and
xor
scas
cld
outsl
sbb
and
int
repz
and
mov
mov
jnp
push
xchg
inc
mov
jns
cmpsl
mov
mov
mov
sub
push
jg
in
cwtl
cwtl
push
add
inc
in
insl
sbb
adc
arpl
in
jo
xchg
int
lods
in
jmp
aas
cmpl
rcrl
inc
loopne
dec
sub
sbb
into
sub
mov
and
cmp
not
mov
dec
xor
pop
or
jecxz
nop
push
xor
outsb
in
nop
jge
mov
sub
push
fucomip
mov
ror
mov
insl
test
ret
cmp
loopne
cmp
test
sub
xor
fimull
leave
sbb
inc
lock
pop
xchg
icebp
fistpl
sbb
pop
ret
insl
out
sbb
je
push
clc
add
dec
jmp
add
insl
xchg
add
jecxz
dec
ss
into
std
xchg
mov
in
push
mull
bound
imul
call
mov
mov
aaa
mov
mov
nop
jb
mov
outsb
dec
movsl
lahf
or
jbe
js
push
js
xor
xchg
pushf
push
sub
fildl
sub
arpl
movsl
rcrb
mov
push
cmpsb
mov
push
insl
pop
sbb
jne
adc
jp
lock
xlat
inc
adc
scas
and
xchg
pop
push
and
xor
lcall
jge
or
pop
mov
pusha
clc
add
mov
push
call
inc
arpl
int
movaps
and
cltd
jns
and
jge
mov
and
push
ret
sub
out
or
ret
jb
popf
pusha
ds
stc
jae
sti
cmp
mov
sub
cwtl
loope
xor
adc
xor
adc
add
or
cmp
adc
mov
jae
jae
jl
clc
push
in
inc
mov
in
inc
sub
cmpsl
fstp
sub
sub
jl
push
and
inc
lea
clc
sub
jns
mov
ja
rolb
jle
in
jo
loope
sbb
pop
add
xchg
loopne
sti
imul
imul
adc
dec
mov
sbb
mov
xchg
loop
push
mov
push
mov
push
lock
push
filds
rorb
xchg
pop
sub
mov
mov
sbb
scas
cmp
and
inc
loopne
call
cmpsb
arpl
in
mov
jp
sarb
repnz
or
xchg
push
pop
dec
xchg
inc
das
jne
lea
lret
pusha
outsl
mov
inc
fiaddl
out
xor
ss
push
fistl
out
les
mov
and
jg,pt
sahf
pop
sub
mov
scas
inc
lods
movsb
or
push
cmpsb
test
aam
repnz
xchg
std
loope
inc
iret
std
jae
or
loope
jno
inc
mov
xor
lahf
movsl
les
enter
shlb
orb
ljmp
in
sahf
sbb
xorb
in
mov
dec
xchg
int
xchg
lret
decb
mov
mov
lds
jmp
shlb
xor
xor
mov
sbb
test
aam
mov
xor
popa
cltd
adc
jg
dec
and
and
aaa
xchg
das
iret
cmpsb
out
sub
jge
cmpsl
int
andb
xchg
nop
scas
add
scas
cli
ljmp
sbb
int3
xor
outsb
xchg
insb
scas
outsb
xor
xchg
mov
ljmp
stc
adc
scas
hlt
ret
popf
add
jb
gs
in
ror
jns
push
int3
push
push
bound
cmp
inc
test
insb
repz
leave
push
pusha
leave
push
push
les
and
mov
xchg
popa
addr16
pop
sti
out
data16
roll
jns
js
jmp
jmp
cmp
and
push
jge
sub
xor
cmpsb
mov
out
lock
add
cwtl
and
jnp
lds
sub
pop
into
and
pop
dec
xor
pushf
in
or
mov
aam
xchg
xor
dec
jno
out
lcall
pop
cmp
pop
out
mov
inc
mov
pop
cmp
int3
in
jbe
outsb
sahf
sti
mov
ffree
mov
mov
sbb
lcall
fiadds
loop
jne
out
lods
ja
stos
xchg
xlat
push
notb
cmpsl
jmp
iret
arpl
mov
mov
jae
pop
aas
and
mov
call
sub
mov
dec
in
rcll
cmc
sbb
inc
out
xlat
call
push
pop
test
std
into
and
or
das
fcmovnb
pop
nop
mov
ficomps
xchg
mov
mov
fildl
aaa
pop
enter
and
lahf
int
xchg
es
jmp
leave
lahf
iret
scas
sbb
push
sub
inc
xchg
inc
shrl
test
cmp
fstpl
mov
jne
add
mov
sub
xchg
icebp
xor
cmpsl
loop
jg
inc
adc
mov
and
xchg
mov
or
out
cmp
adc
xchg
pop
cltd
les
arpl
xor
aas
cmc
pop
imul
xor
test
pop
inc
push
pop
popf
push
push
cmp
fcmovb
push
cmp
cmpsb
adc
sti
sti
xchg
and
mov
xchg
fstpt
leave
add
or
leave
aas
gs
jnp
mov
inc
ljmp
push
je
push
dec
pop
push
test
test
xor
push
fcomip
std
in
lds
sahf
xor
pop
dec
int
fbld
dec
and
test
out
xchg
jg
out
shr
gs
into
sub
xchg
and
xlat
jmp
jecxz
ja
xchg
ror
lret
and
jne
jnp
jae
stos
mov
mov
sbb
xorb
fbstp
fcoml
cmc
xchg
rol
push
scas
mov
adc
lods
jno
jp
imulb
addr16
stos
pop
sub
in
fiadds
es
cmpsl
mov
cltd
push
lods
xor
push
pusha
in
std
jae
mov
lods
inc
jbe
lcall
test
push
inc
adc
and
es
cmp
jecxz
cmp
lcallw
out
cmp
leave
adc
mov
stos
cltd
cmp
xchg
jno
fsts
xor
pushf
insl
inc
test
push
fwait
sbb
cmp
shlb
add
popf
mov
mov
sti
outsl
clc
pusha
mov
std
and
int3
mov
ret
ja
inc
push
xlat
fimuls
xor
sbb
ds
xchg
insl
popa
jp
je
inc
inc
mov
jo
imul
mov
stos
imul
dec
ljmp
aam
mov
mov
xor
outsb
gs
addr16
mov
sbb
sbb
imul
jmp
movb
mov
pop
or
jne
xchg
inc
cli
xor
ja
or
sub
mov
xlat
and
jecxz
movsb
sbb
jp
call
fsubl
ret
jge
cmp
jne
adc
fwait
and
outsb
out
das
mov
lods
jb
insl
ret
and
dec
into
or
test
stos
int3
mov
adc
cmp
inc
xlat
shll
jbe
mov
leave
mov
mov
xchg
scas
jae
cld
inc
bnd
loope
loopne
dec
sub
int3
fstpt
mov
xchg
xor
add
cmpsb
ljmp
jne
mov
add
lcall
flds
mov
adc
pop
sbb
push
andb
mov
lods
sub
insb
fimull
outsb
sbb
imul
mov
fwait
test
notl
adc
into
lret
int3
xor
scas
push
cmp
mov
test
push
mov
shlb
loop
into
int3
arpl
mov
jp
xor
pusha
mov
scas
call
int
jmp
scas
sub
addr16
out
dec
push
adc
hlt
xchg
or
jp
xchg
cmp
out
popa
repnz
outsl
mov
pop
mov
mov
pop
inc
push
adc
xor
gs
movsl
jp
and
xchg
cwtl
sbbl
pop
lret
shlb
movsl
bound
sbbl
cmp
pop
dec
mov
test
stos
push
aam
mov
mov
mov
shrl
jge
xor
mov
xor
sbb
mov
in
xor
gs
pop
mov
fldl2t
mov
lods
and
sbbl
xchg
lock
xchg
lret
lea
testb
jnp
cmpsl
mov
call
fs
jae
inc
test
sub
ss
bound
lds
addr16
mov
insl
cmpl
mov
dec
xchg
cltd
cli
lret
sub
gs
out
enter
lock
sub
loope
adc
sub
dec
loope
mov
fisubrs
popf
sbb
xchg
cmc
dec
mov
aad
test
movsb
sbb
notb
and
jns
gs
insb
jb
mov
int
inc
test
or
cli
lret
filds
insb
adc
mov
je
cltd
cmp
xor
jmp
hlt
mov
and
push
dec
out
test
data16
test
sbb
fldenv
ds
sti
adc
jne
jb
inc
ficompl
lret
shrl
adc
sbb
pop
xchg
mov
push
mov
add
into
js
gs
dec
out
cltd
fwait
imul
scas
adc
int
or
outsb
pop
jle
rcr
test
xchg
inc
or
push
xchg
and
inc
nop
xchg
shr
jl
mov
test
push
cli
xchg
icebp
daa
mov
xor
mov
fiaddl
add
push
clc
sbb
jl
das
mov
movsb
pop
fisubrs
pop
lock
pusha
mov
cmp
pop
subl
stos
dec
add
mov
push
dec
test
inc
mov
pop
cs
ss
mov
inc
inc
mov
rcll
inc
rcrb
popa
push
push
adc
adc
mov
icebp
xor
mov
ret
add
cli
pop
jne
inc
enter
xor
mov
sbb
pusha
test
mov
push
lret
lock
adc
xor
enter
sbb
push
pop
iret
mov
push
aam
ret
test
inc
sub
cltd
inc
dec
push
push
movsb
cmpb
jge
shrl
mov
cmp
push
pop
pop
dec
dec
bound
mov
cltd
rclb
inc
jecxz
int3
mov
ret
xor
xor
lds
mov
push
stc
add
dec
sbb
sbb
xchg
dec
out
fsub
outsb
add
and
mov
imul
xor
lcall
insl
adc
stc
xchg
ret
sti
stos
repz
sbb
adc
scas
mov
clc
cmpsl
or
cmpb
insl
fildll
aam
decl
scas
pop
xchg
push
xchg
pop
push
addb
fisttpll
popf
cmpsb
rcrb
sub
jge
rol
test
aas
stos
mull
dec
push
and
sub
pop
ret
int3
sar
movsb
clc
sbb
fmulp
xor
adc
out
push
cli
arpl
jecxz
idivl
cmpsl
mull
insl
test
dec
sub
int
xchg
jbe
push
shll
lahf
xor
aam
dec
lods
mov
cmp
in
mov
stc
lret
aad
dec
mov
je
inc
icebp
mov
in
mov
lods
call
inc
or
jle
mov
imull
test
fildll
in
mov
pop
and
cld
xchg
xchg
cmp
jmp
in
mov
sub
pusha
mov
dec
pop
jbe
push
sahf
imul
cli
push
mov
mov
cmpsl
andl
sbb
lds
imul
stos
mov
sbb
insl
add
repnz
mov
ja
adc
push
test
ret
push
pop
xchg
stos
xchg
ja
insb
mov
rcr
mov
sub
test
cmc
push
lret
mul
cld
das
shrl
pop
popa
shlb
sti
scas
leave
mov
daa
cmp
stc
mov
fcom
push
mov
mov
jns
dec
xor
fistpl
or
jo
xchg
imul
inc
cmpsb
mov
aaa
out
scas
scas
mov
mov
xor
cmpsb
xor
jge
add
lea
or
mov
mov
mov
jns
mov
pop
sub
cwtl
popa
int
lds
lods
mov
jmp
sbb
pop
call
frstor
push
cli
inc
and
jge
add
fidivrl
xor
mov
mov
mov
add
pop
popl
sub
insb
add
rcll
std
into
aas
aas
jnp
sub
addr16
mov
inc
xor
cmpsb
aaa
gs
nop
sbbl
movsb
mov
fwait
stos
loop
sti
xchg
mov
inc
int3
imul
lret
pushf
jle
movsl
fisubl
movsl
adc
cmpsl
mov
imul
jecxz
nop
cmp
inc
jb
iret
jns
loope
sahf
xchg
or
push
std
movsb
shll
push
and
ja
push
xchg
inc
sub
adc
ret
stos
imul
out
mov
xchg
testb
adc
mov
movsb
and
dec
stos
out
cmp
or
jp
dec
lahf
in
sbb
cmpsb
inc
fwait
mov
idivb
xor
stc
mov
in
dec
nop
jg
shlb
loop
xchg
sub
sahf
dec
cmc
daa
into
push
xchg
fmull
dec
xchg
dec
sub
scas
push
mov
sahf
addr16
xor
sub
icebp
cmp
push
cwtl
movsb
enter
ret
movsb
in
mov
adc
mov
idivb
mov
sbb
jg
test
testl
add
int
mov
outsl
aad
and
sub
addr16
mov
xchg
clc
stc
add
mov
shl
test
xlat
xor
fists
sub
aam
add
popa
xor
stc
jno
jne
dec
fbstp
inc
adc
and
lock
rolb
sahf
ds
int
loope
mov
dec
mov
in
out
inc
fnstsw
rcll
push
mov
push
push
int3
inc
inc
mov
das
fildl
shr
pop
xor
mov
mov
xchg
data16
daa
daa
loop
arpl
std
rcr
xchg
and
mov
xor
negl
xchg
je
fisubrl
orb
adc
adc
lock
pop
adc
adc
negb
xor
fwait
enter
ret
pop
inc
mov
movsl
push
les
or
mov
sub
or
iret
cwtl
cli
mov
sbb
stc
xchg
nop
mov
jb
inc
dec
push
loope
xchg
mov
xchg
fldz
mov
repnz
pop
popa
pop
pop
cwtl
add
arpl
jo
jns
ja
push
push
cmp
repz
cwtl
ja
xchg
push
inc
lea
mov
sub
xchg
and
sub
mov
push
mov
jbe
mov
push
notb
push
dec
stos
aaa
fs
push
sbb
push
es
push
jo
lea
pop
mov
jmp
cmp
call
pop
jbe
inc
adc
data16
push
insb
shl
int
and
and
jo
lret
int3
cmp
dec
pop
push
pusha
into
jp
jmp
cmp
dec
aas
xchg
inc
shlb
or
push
and
imul
scas
pop
out
pop
pop
imul
mov
fbld
cmpsb
and
push
xor
cmp
xchg
ss
adc
lret
jecxz
je
out
loopne
das
jp
sahf
loopne
aaa
into
addb
cmp
and
stos
xchg
in
insb
aad
fcos
insl
test
je
add
ljmp
jns
shll
mov
dec
jmp
mov
pop
pop
icebp
jbe
ss
sub
popa
xchg
in
adc
out
rcr
sub
fwait
lret
out
push
pop
test
icebp
mov
jo
fistps
sarb
push
lock
xchg
jns
and
add
mov
add
pushf
dec
jmp
testl
ss
add
lret
ss
sbb
cmc
lds
dec
dec
dec
sub
adc
call
jno
jno
xchg
fldpi
jmp
xor
sub
jmp
pop
scas
es
and
shll
imul
outsb
inc
outsb
add
push
jmp
sub
cmp
dec
xchg
inc
jo
shrl
or
adc
mov
cmpsb
xor
addl
pop
sub
xchg
push
inc
inc
lcall
push
pushf
js
js
adc
sti
test
icebp
jae
mov
fs
clc
in
icebp
push
enter
cli
imul
or
lock
xor
stc
sbb
insb
das
xchg
pop
jae
lods
cmp
stos
mov
mov
outsb
push
test
push
dec
pop
scas
cld
mov
mov
dec
mov
outsb
mov
push
pop
inc
popf
inc
loope
add
push
sub
xor
into
jne
call
js
insl
mov
sbb
push
rcrb
out
stos
pop
repz
ds
jbe
ss
cld
jge
mov
sbb
das
ja
mov
mov
mov
xchg
popf
lahf
pop
push
test
arpl
dec
ficoml
out
xchg
sbb
aaa
inc
les
push
xchg
xchg
dec
stos
pop
sub
in
fwait
stos
cmp
xor
in
stos
jmp
clc
popa
or
jmp
inc
lds
or
cld
and
mov
lret
sbb
mov
testl
lock
sbb
insb
xor
in
sub
and
dec
daa
mov
push
lods
icebp
aaa
insb
and
lahf
aaa
les
cmp
imul
adc
cmp
mov
je
lods
and
jb
jno
lea
push
pop
inc
scas
dec
lods
dec
aad
lea
dec
pusha
cmp
and
stc
int3
fidivrl
or
and
or
pop
int3
sahf
push
jb
movsb
out
jne
fnstenv
pushf
stos
dec
and
loop
cmpsb
xchg
and
push
lods
jle
popf
sar
roll
or
pusha
stos
mov
filds
inc
sarb
adc
or
or
jbe
fwait
mov
testb
loop
mov
add
out
jecxz
roll
mov
xchg
popa
push
shrb
out
mov
jb
int3
incb
hlt
loop
jns
pop
jae
pop
loopne
inc
popf
pop
insl
lods
mov
ja
repz
xchg
popa
lret
xor
push
cmp
cmc
mov
pop
mull
sbb
pop
adc
jle
dec
mov
mov
jl
and
hlt
movl
aaa
lock
imulb
xor
xchg
mov
loope
fsubs
call
imul
ds
pusha
adc
mov
mul
xchg
inc
mov
idiv
test
pop
dec
int3
into
cmpsl
mov
mov
imul
aas
xchg
and
xchg
push
xor
hlt
mov
testl
xlat
scas
push
mov
idivl
pusha
insb
cmp
pop
mov
mov
cmpsl
sub
arpl
jns
fcompl
dec
add
inc
xchg
sahf
pop
pop
scas
popl
sub
cmpl
clc
xchg
les
sub
fcmovnbe
repnz
jge
aaa
pop
push
bound
dec
arpl
loopne
cmpsl
repnz
movsl
mov
adc
cs
add
pop
xchg
adc
cmp
jmp
loopne
mov
xor
ds
sbb
int3
mov
out
fwait
jae
sahf
ja
sarb
ljmp
imul
stos
pop
cmp
push
lahf
loop
sbb
jge
lahf
nop
iret
mov
lret
mov
in
fldt
xchg
add
pop
add
sub
push
jecxz
dec
or
push
std
into
jae
pop
je
mov
nop
scas
or
mov
push
daa
mov
fbstp
xor
fwait
pop
in
pusha
sub
sti
pop
push
repnz
cmc
cmp
in
mov
xchg
mov
mull
shlb
sub
out
mov
arpl
repz
cmp
mov
jp
inc
subl
outsl
repz
sub
add
out
mov
cli
xor
imul
or
cmc
repz
sbb
or
push
push
clc
push
lret
add
movsl
and
xchg
jno
repz
pop
rcrl
inc
outsb
mov
mov
std
movsb
push
adc
movl
inc
pop
push
pop
sbb
out
sahf
pop
dec
repz
push
cmpsl
sbb
bound
xchg
frstor
or
inc
jle
movsl
rcrb
fldl
fwait
mov
das
insl
stos
mov
xchg
xchg
movsl
les
push
fdiv
mov
leave
and
xor
cmpsb
push
loope
shrl
arpl
loope
xchg
adc
adc
or
cmpsl
ja
and
imul
jno
cltd
arpl
out
aaa
jp
inc
cwtl
xchg
adc
cmp
inc
lahf
into
pop
popfw
push
sbb
adc
scas
fsts
lds
hlt
lret
das
mov
nop
xchg
ficoms
rcrl
mov
push
repnz
mov
xor
push
jae
cmpsl
push
inc
cs
push
mov
js
or
pop
std
cmpsb
mov
jbe
dec
sti
xchg
cli
mov
enter
mov
and
test
mov
mov
xchg
imul
mov
and
out
jmp
aaa
fbld
ss
pop
cs
lret
lods
cli
sub
jns
lods
stos
stos
je
repnz
fsubrl
push
push
xchg
mov
mov
inc
out
push
cmp
lret
fcomi
shrl
cmp
sbb
xor
sti
aad
clc
ret
push
ror
mov
outsb
stc
mov
aaa
dec
insl
aam
jmp
les
movsl
mov
inc
addr16
mov
xor
jo
stos
dec
lods
jg
mov
or
push
in
repz
inc
neg
xlat
cmp
push
jmp
inc
icebp
in
pop
dec
xorb
out
xor
dec
jmp
test
loop
call
inc
adc
or
outsb
adc
mov
jecxz
rolb
test
lret
andl
mov
mov
je
dec
scas
adc
mov
mov
push
mov
mov
inc
popf
pop
in
clc
mov
mov
push
std
rcl
dec
cmp
outsb
adc
movsb
push
sub
popf
xor
sub
cld
dec
cmc
insl
test
or
mov
adcl
shll
mov
insl
dec
or
jb
roll
std
add
imul
loopne
out
push
int
cmp
adc
rol
in
pop
es
imul
shr
xlat
call
out
cltd
sarb
xchg
loope
lods
ret
bound
bound
into
ror
xor
push
test
jle
inc
push
mov
lock
adc
inc
xor
mov
adc
in
fisttps
inc
sahf
stos
ret
popa
aas
and
and
sub
sti
ja
popf
and
pop
ja
repnz
xlat
xor
jmp
fidivrs
jp
iret
out
xchg
test
arpl
mov
or
add
inc
mov
outsb
lods
cli
push
pop
inc
loopne
push
pop
adc
xor
adcb
xchg
arpl
addr16
sub
stc
push
idiv
imul
outsb
iret
xorb
xchg
jbe
data16
test
lods
cmp
mov
fucomip
test
fstp
xchg
xchg
mov
jae
cld
outsl
gs
inc
pushf
outsl
fdiv
pop
inc
paddusb
nop
dec
pop
sbb
in
mov
rcr
mov
mov
scas
outsb
fistps
je
dec
xchg
fbstp
std
cmp
ret
lds
arpl
decb
into
mov
push
jno
mov
lea
lret
ret
or
mov
pop
xchg
jmp
out
lcall
das
ret
lret
ret
repnz
pop
mov
mov
in
mov
pop
sbb
mov
cmpsb
push
cld
xchg
mov
inc
int3
push
cmpsb
in
inc
popf
inc
lods
pop
repz
rolb
push
cwtl
xchg
inc
mov
fistl
int
jle
dec
gs
ret
in
mov
cmp
movl
sarl
sbb
sub
int
sub
aam
pushf
cltd
shlb
jnp
aam
xchg
movsb
jle
push
jmp
jge
test
daa
sub
dec
pop
test
xor
push
jno
mov
lahf
sbb
in
rep
and
data16
out
hlt
push
sbb
outsb
ret
mov
js
leave
or
fcmovnb
arpl
ret
enter
aad
jg
add
jp
sbb
xor
std
xchg
mov
clc
shrb
out
sti
dec
or
sbb
xor
cmp
mov
insb
ret
inc
fs
out
das
ljmp
xchg
adc
imul
cmp
loopne
mov
jo
out
or
add
adc
loopne
push
arpl
rclb
mov
dec
repnz
dec
cmp
cwtl
shlb
sub
outsb
lret
cltd
lahf
dec
add
xor
sti
in
cmp
outsb
clc
jne
sub
xor
push
aaa
xchg
sub
xchg
mov
das
rcr
jo
mov
mov
add
ljmp
jae
lahf
jle
outsl
pusha
sbb
mov
nop
lcall
inc
inc
xchg
and
loope
xchg
out
out
ret
mov
loope
cmp
divb
dec
sub
jbe
adc
les
push
lock
sbb
pusha
test
leave
mov
call
and
mov
scas
xor
inc
cli
mov
jmp
and
inc
int
inc
push
cmp
xor
sub
mov
mov
add
lret
test
push
push
shl
ljmp
jb
jmp
and
push
lds
bound
adc
cmp
icebp
pop
jbe
cmp
aas
jle
inc
pop
lahf
push
adc
xor
cs
lock
cmp
push
fs
pop
cmp
fadd
mov
jp
jmp
testb
mov
ret
fstpl
int
sbb
mov
cld
stos
mov
xor
lcall
xchg
lods
cmpsl
cmp
shlb
repnz
push
xor
mov
fdivrl
sbb
pop
jnp
jp
int3
lret
xor
mov
or
imul
cld
outsb
sub
lods
jecxz
cwtl
push
fildl
rorl
push
inc
shll
leave
dec
es
xor
mov
outsl
push
dec
inc
add
into
daa
sbb
inc
push
shlb
aas
jbe
and
pop
mov
out
mov
dec
daa
out
in
lea
or
push
push
pop
dec
lods
xchg
sbb
jb
cld
out
loope
test
fbld
iret
std
out
jb
lahf
push
bound
xchg
sti
jmp
idiv
popa
movsl
inc
cmp
test
mov
mov
cs
lea
dec
cld
cli
add
data16
sti
bound
pop
ret
push
inc
mov
sub
mov
fnstenv
insb
outsb
daa
lret
xorb
xor
out
mov
in
cwtl
aam
mov
push
push
fnsave
dec
or
int
push
mov
inc
sub
out
sti
jnp
mov
popa
add
popf
stos
and
out
mov
fcoms
repz
jo
sti
in
xor
cmp
xor
xlat
data16
cmc
xor
loop
dec
lock
and
or
push
mov
int
mov
adc
cmp
jno
ja
cmpsb
mul
repz
mov
dec
ss
scas
push
pusha
mov
in
pushf
scas
or
xor
rol
pushf
out
int
and
fwait
int
mov
in
xchg
pop
sahf
dec
loop
int
es
ja
out
mov
stos
xchg
jnp
in
ljmp
fwait
lret
inc
mov
cmp
pop
test
jae
and
xchg
lret
outsb
stos
jmp
push
adc
test
dec
mov
je
mov
mov
mov
adc
sbb
outsb
ljmp
sarl
push
lret
aas
cld
cmp
lret
pop
sub
mov
cld
ja
lret
xchg
sub
lcall
push
cmc
shlb
test
mov
add
mov
fidivrl
xchg
mov
int3
hlt
ss
cmpsb
add
cld
push
xchg
push
leave
xchg
inc
inc
lods
in
fstl
mov
adc
or
cmp
xchg
fdivrs
pop
lods
xchg
mov
mov
xchg
repz
dec
fsubs
and
sbb
repnz
fsubrs
jns
sub
and
dec
mov
pop
xchg
lahf
pushf
lcall
push
adc
and
in
je
ret
ja
jae
dec
rcll
adc
mov
insl
ficoml
mov
pop
inc
mov
cwtl
mov
ljmp
cmpb
fadd
dec
jno
sub
aas
stos
out
pop
loopne
xchg
mov
adc
jecxz
push
adc
movsb
icebp
xchg
cmp
pop
fdecstp
mov
enter
out
dec
dec
xchg
push
jl
gs
mov
das
adc
sbb
or
push
into
sahf
lods
out
add
push
clc
mov
rol
xchg
lret
popa
jno
insl
andl
xchg
pop
add
rcrl
xchg
jne
add
adc
push
fwait
add
pop
popa
pop
in
xor
xchg
inc
loope
sub
cmpb
add
push
jae
negb
dec
jge
or
repz
fistpl
daa
pusha
inc
lock
push
mov
jmp
push
dec
pop
bound
adc
clc
lret
inc
std
pop
jge
and
adc
xchg
sub
dec
int
test
cwtl
and
sub
xchg
int
push
mov
dec
push
out
mov
fistps
hlt
insl
jle
mov
push
int
add
xlat
pop
sbb
cmp
pop
out
push
sub
ds
ds
cmc
out
inc
xchg
mov
out
mov
shrb
movsb
int3
pxor
insl
xchg
and
imul
sahf
and
mov
mov
enter
scas
sub
jecxz
xor
mov
inc
jle
into
push
mov
das
or
je
fs
adc
lcall
outsb
mov
enter
pusha
jp
test
mov
enter
sbb
aam
dec
sbb
shll
xor
mov
das
mov
sar
add
sbb
pop
xchg
fcoml
jecxz
pop
aad
jmp
std
mov
lods
cld
push
call
jns
fwait
dec
dec
test
int3
lret
jmp
add
shr
test
test
jnp
scas
and
bound
insb
mov
loop
lret
jmp
cwtl
leave
repz
mov
xchg
and
scas
xlat
or
xor
scas
sti
iret
out
sbb
jae
push
popf
int
adcl
mov
mov
clc
jmp
pop
decl
push
add
sbb
add
adc
inc
imul
dec
xchg
add
iret
lcall
push
int
shll
push
ret
add
mov
xchg
sarl
idivl
sbb
jg
cltd
xchg
mov
dec
daa
int
fdivrs
add
cmpsl
imul
pop
or
cmpsb
jmp
data16
sbb
push
arpl
pop
and
sbb
mov
jmp
push
jge
scas
mov
ljmp
mov
mov
inc
mov
hlt
pushf
fwait
stos
dec
shll
pop
or
icebp
gs
cmp
xor
or
xchg
xor
push
dec
mov
jmp
xchg
xor
xchg
lahf
and
aaa
add
lret
push
pop
rorb
push
inc
addr16
add
shll
aas
loop
or
scas
mov
xchg
fwait
subl
add
jo
fsub
inc
xor
test
dec
in
ss
inc
fdivrp
fldenv
jno
insb
out
cwtl
pop
popf
ss
rcrl
jmp
and
inc
sub
shll
ljmp
cwtl
jb
mov
jp
dec
je
add
cwtl
xlat
mov
out
mov
push
test
iret
aaa
push
orb
jae
inc
insb
popa
lcall
mov
fimull
dec
mov
xchg
bound
jnp
mov
adc
push
mov
loope
jp
lock
gs
out
idiv
pop
fsubp
mov
fcomps
dec
jae
pop
jne
rcr
add
flds
mov
adc
out
xor
adc
dec
lds
shlb
dec
push
fabs
jbe
shll
aaa
push
push
je
sahf
and
mov
pop
sbb
in
add
mov
push
push
stc
sub
ljmp
out
sbb
jmp
ljmp
stc
popa
xor
in
inc
outsl
loopne
ss
mov
pop
xor
mov
lods
test
mov
jl
mov
push
aaa
pusha
add
add
cltd
cmc
xor
and
xor
out
lds
insb
pop
ss
jne
push
jne
jo
insb
push
or
sub
ret
mov
add
orl
stos
cli
into
popa
jns
mov
sbb
roll
aad
outsl
pushf
stos
in
cmp
xchg
cli
pop
loopne
jo
jecxz
push
ss
loope
and
mov
jg
aad
outsl
arpl
mov
leave
jecxz
clc
popa
sub
and
js
mov
or
inc
or
test
cmp
jle
cwtl
adc
cmpsl
jecxz
pop
repz
repz
xchg
inc
cmp
inc
fnstsw
nop
popf
hlt
int
xchg
pop
fisubrs
pop
repz
add
shlb
mov
fadd
push
dec
and
xchg
mov
cld
shll
cmp
cltd
addr16
xlat
daa
shlb
or
and
xchg
pop
shlb
inc
xchg
pop
and
adc
adc
mov
mov
in
xchg
les
clc
add
adc
cwtl
in
cld
inc
lods
hlt
jbe
out
sub
ds
xlat
jmp
cmp
cmpsb
cltd
test
mov
mov
lret
and
dec
mov
or
mov
push
sar
jl
fcmovu
sub
rol
cmp
mov
dec
imul
xchg
inc
sub
and
loopne
cmp
mov
xchg
mov
mov
push
mov
or
sub
adc
sbb
fstpt
inc
fcmovnbe
shrl
adc
jns
int
mov
mov
jg
mov
fwait
dec
stos
push
push
repz
std
fsub
or
mov
loopne
repz
push
out
inc
push
ja
push
cmp
movsb
dec
xor
popa
imul
outsb
rorb
xchg
or
iret
jno
xchg
in
xor
gs
popa
stc
cmp
jecxz
pop
dec
jge
lret
mov
jb
ja
out
cmp
pop
add
push
mov
mov
or
xor
push
bound
mov
pop
cmp
mov
xchg
es
jo
rol
aam
mov
pusha
data16
mov
or
inc
jmp
call
or
jbe
xor
imul
cmp
test
ret
xorl
fsubrl
pop
jno
sti
popa
dec
and
cmpb
and
fs
fs
repz
movsl
lcall
addr16
out
pop
gs
sbb
insl
xchg
repnz
cmp
sub
or
mov
fwait
mov
pop
add
add
dec
mov
dec
flds
inc
pop
sar
test
ja
dec
inc
sub
shll
movsb
outsl
pop
adc
fcmovne
jmp
cld
mov
sub
hlt
lods
mov
sub
mov
ss
js
sub
shll
repz
xor
ja
sbb
adc
push
into
iret
lock
test
cmp
arpl
movnti
popa
int3
push
shl
insb
pop
fdivl
xlat
add
aas
pop
or
loop
adc
imul
stos
mov
fldl2t
xchg
std
dec
jnp
pop
ret
mov
orl
push
jmp
pop
mov
repz
in
mov
jg
cmp
ret
push
inc
and
jecxz
stos
xchg
pop
ljmp
push
fninit
sbbb
xchg
fdiv
jge
or
fdivrl
fisubs
pop
mov
jl
add
iret
out
cli
push
pop
adc
and
in
std
sbb
cmp
fwait
xchg
call
push
add
loopne
dec
enter
iret
loope
fisubrs
dec
cwtl
cmc
insl
mov
xchg
pop
faddl
and
lret
mov
mov
hlt
jmp
or
lahf
outsb
sbbb
pop
movsb
mov
addr16
popa
int
jbe
sbb
loop
cmp
pushf
lret
test
imull
hlt
mov
pop
jecxz
mov
dec
xchg
lret
in
push
arpl
fnstenv
cmpsb
outsb
jg
mov
aad
mov
and
mov
sub
xor
jbe
test
xchg
shl
inc
inc
inc
rcrb
les
xlat
dec
pop
int3
jns
xlat
icebp
lea
add
and
dec
mov
push
icebp
sub
add
dec
pop
jae
dec
insl
pop
mov
fcoml
ja
add
add
ret
xor
fs
mov
dec
arpl
lcall
popa
ds
jge
fwait
test
inc
in
nop
ret
into
fldenv
std
push
xchg
jnp
mov
fcmovnbe
inc
mov
and
push
mov
sub
and
hlt
inc
adc
add
xrelease
mov
lcall
mov
sub
pop
test
fisttpl
js
testl
shll
roll
xor
test
adc
rcll
lret
ja
xchg
repnz
mov
iret
xor
int3
movhps
mov
cli
lret
rorb
jecxz
js
xor
out
jecxz
scas
pop
adc
cltd
negb
add
fcom
fsubrl
mov
adc
ret
mov
xchg
xchg
out
sahf
push
dec
fwait
icebp
inc
pop
pop
push
in
inc
fisttpl
aad
adc
xchg
loopne
sub
mov
jecxz
mov
jecxz
mov
sbb
pop
scas
rclb
in
mov
gs
inc
adc
ss
stc
push
subb
mov
aam
mov
stc
sub
mov
push
rolb
nop
mov
inc
stos
mov
sub
xchg
xchg
adc
jo
cmp
sbb
pusha
mov
incl
mov
mov
mov
add
test
ja
ret
gs
dec
xor
enter
or
push
mov
shl
jns
push
arpl
xor
mov
cmp
jle
in
sub
das
mov
jecxz
dec
inc
jno
lods
pop
jg
add
pop
call
adc
pop
ret
pop
in
dec
idivb
fsubs
scas
xlat
cltd
or
jbe
sub
dec
out
test
stc
mov
iret
and
sarb
loop
and
repnz
sub
popa
test
sub
sub
out
into
inc
sub
lods
dec
pusha
inc
dec
cld
mov
addr16
mov
gs
jo
push
sti
mov
mov
pusha
mov
lcall
add
rcl
jb
out
add
cmp
dec
out
or
test
daa
mov
dec
inc
cmp
fnsave
xchg
inc
stos
mov
mov
out
daa
inc
push
pop
pop
dec
arpl
dec
mov
int3
xchg
add
xor
mov
and
inc
xchg
cmpsl
sti
test
mov
inc
cmp
adc
mov
dec
lret
push
daa
push
int3
sahf
add
insl
mov
cmp
roll
jns
cltd
lods
push
sbb
mov
inc
iret
cmp
adc
push
mov
push
jb
mov
push
cmpsb
rcrb
punpcklbw
xor
fistps
xor
int
pop
repz
mov
jns
popf
ret
shl
cmp
xor
js
fldt
addl
sti
aaa
inc
or
int
cs
je
mov
aad
leave
fdivl
test
mov
cmpsl
dec
mov
popl
andb
jmp
jae
inc
stos
pop
sub
loope
jno
movb
cmp
push
ret
mov
mov
jo
pushw
jge
adc
push
lock
fadds
enter
add
sbb
insb
mov
int
sub
sti
mov
jns
jo
repnz
fs
mov
push
out
inc
dec
dec
or
bound
mov
iret
into
outsl
pop
movsb
cmpsb
dec
adc
rcr
xchg
imul
neg
inc
xor
fs
pop
jbe
lret
imulb
mov
xor
ds
and
aam
jae
aad
movsl
mov
and
push
mov
fsts
xor
addr16
lods
mov
sbb
pop
xor
mov
into
fistl
and
xchg
push
jnp
push
fbstp
out
push
xchg
int3
stos
and
inc
subb
xlat
sbb
lret
dec
fcoml
jp
or
sarb
cmp
dec
mov
mov
jb
mov
mov
push
mov
inc
mov
jo
push
enter
lret
loop
dec
enter
sbb
sub
mov
pop
jbe
outsb
jle
pop
es
dec
xchg
mov
loop
jmp
arpl
lahf
orl
inc
lahf
ja
aam
ret
outsb
xchg
outsl
loop
push
mov
mov
adc
jns
inc
xchg
mov
pop
int3
pavgb
aad
jae
sbb
jmp
inc
or
adc
lods
adc
push
pop
cmc
and
out
push
faddl
xchg
je
aad
jae
lds
loop
inc
mov
fbstp
filds
xchg
jno
lret
ja
std
or
aam
lds
pop
mov
fdivrs
jecxz
fisttpll
jb
sub
sbb
psraw
jno
jmp
imul
jmp
fs
pop
shr
dec
in
loopne
bound
fnstenv
les
push
and
xchg
insl
inc
sub
jecxz
ljmp
pop
sub
mov
add
xchg
push
xor
push
in
fnstcw
jg
shrb
xchg
call
cmpsl
sbb
pop
pop
jnp
imul
pushf
addr16
loopne
dec
cltd
cli
xor
adc
popa
cmp
ss
jge
dec
data16
mov
push
push
into
cmp
lret
jns
js
inc
shll
js
lea
arpl
jne
mov
mov
mov
or
int
cmp
test
call
fmull
lahf
xchg
jbe
push
ljmp
jp
rol
clc
add
idiv
add
lea
sub
mov
pop
dec
adc
mov
fstpt
xor
inc
stos
es
mov
dec
lcall
pop
sub
insl
sub
sbb
shl
inc
sti
imul
lds
jmp
xor
pop
pushf
mov
je
xchg
mov
push
push
xor
in
cmp
shl
xchg
pop
leave
and
adc
xor
cwtl
scas
pushf
lea
fmul
or
jo
shlb
loop
xor
mov
sub
jbe
mov
mov
inc
xchg
dec
xor
xor
stos
aas
xchg
sbbl
adc
jmp
insb
pop
ds
inc
pusha
jno
sahf
inc
fs
push
mov
xchg
popa
mov
test
pop
fistps
ret
std
push
imul
pop
test
jae
loop
and
mov
mov
mov
loop
insb
out
les
push
clc
mov
adc
loopne
push
addr16
cmp
imul
lods
push
inc
xlat
cmp
pop
clc
lods
xchg
je
mov
lret
enter
cmp
shll
pusha
mov
lahf
imul
jge
negl
ljmp
push
hlt
xor
fbstp
icebp
adc
leave
into
ja
mov
inc
jnp
shlb
fsts
sbb
insl
imul
fbstp
cltd
sbbl
shlb
mov
inc
lcall
sbb
jp
dec
ret
shl
cmpsl
test
or
push
jmp
cmc
in
dec
inc
dec
in
mov
call
fnstcw
out
in
mov
xor
test
push
in
pop
inc
adc
das
xlat
jmp
and
mov
into
inc
pusha
or
inc
mov
jg
outsl
mov
jecxz
jne
pop
or
addr16
add
testl
leave
xor
loope
mov
mov
pop
sbb
jle
dec
out
or
out
lods
pop
xchg
rcr
insb
mov
std
jmp
test
pop
xchg
and
pop
adc
jae
cmpps
dec
jmp
sub
ret
int3
mov
out
mov
adc
cmp
cmp
scas
mov
xor
es
sbb
mov
mov
sbb
fisubrs
jnp
test
inc
call
mov
and
outsb
dec
mov
cmpsl
movsb
cli
cmp
mov
jb
xorb
out
adc
inc
pop
bound
outsl
out
push
popa
or
add
fistps
imul
inc
push
int
sbb
lea
jl
es
ljmp
mov
dec
inc
arpl
arpl
jno
jne
andl
jp
clc
jecxz
push
test
push
sub
mov
pop
notb
sub
sub
clc
pop
cmp
xchg
inc
js
out
xchg
and
lahf
lds
loop
sahf
pop
jg
inc
mov
push
sub
dec
push
mov
inc
flds
loopne
mov
mov
scas
xchg
int
inc
dec
jecxz
test
lods
cmp
les
inc
xchg
fstp
xchg
inc
add
jne
mov
add
mov
sbb
adc
iret
xlat
outsl
mov
je
arpl
mov
dec
leave
icebp
jp
cwtl
sub
sarl
add
test
cmp
outsb
dec
fidivrl
lea
dec
lret
sub
cmpsb
movsb
inc
xor
mov
push
loopne
call
imull
add
mov
mov
dec
mov
cld
xlat
inc
loopne
inc
jb
cld
or
cmpsl
mov
add
fwait
mov
lret
faddl
jne
lea
stc
mov
xchg
jmp
cli
std
ljmp
mov
xchg
push
sbb
in
iret
cmpb
mov
rcl
ffreep
ret
in
loop
es
jmp
and
sbb
dec
insb
addr16
test
std
out
movsl
insl
cmpsl
out
and
ret
pop
mov
ret
enter
movd
ficoms
mov
jmp
mov
sub
rorb
adc
jae
insb
add
dec
jo
nop
pusha
push
pop
adc
aaa
out
lret
ret
mov
scas
in
sub
lret
les
scas
lds
or
mov
cmpsl
jge
sub
stos
sub
test
add
jne
idivl
sub
and
jp
add
fisubrs
jns
pop
int3
mov
les
cmc
in
inc
push
jge
fistps
insl
xor
or
mov
xchg
mov
sbb
cli
div
inc
outsl
je
add
adc
in
push
jns
jle
push
sti
ljmp
xchg
mov
movsl
or
cmp
jne
loopne
call
sbbb
ss
daa
push
fcmovnu
aam
outsb
call
movsl
test
push
outsl
xchg
in
loopne
add
mov
ja
imul
cmpsb
xchg
push
hlt
or
push
int
enter
into
sbb
sarb
addr16
cld
jnp
addr16
test
and
cltd
push
xchg
std
addb
and
mov
lcall
inc
or
adc
mov
sbb
hlt
lahf
popa
inc
lock
int
orb
hlt
cmp
mov
jb
push
imul
xchg
enter
sub
fistl
sub
lds
loope
inc
mov
sbb
mov
mov
repz
ljmp
jmp
stos
cwtl
std
daa
sbb
mov
dec
cmp
push
js
push
or
xchg
aad
cmp
aaa
fcomps
mov
cs
mov
mov
daa
clc
and
jge
shll
mov
pop
mov
test
int3
xchg
jo
dec
mov
xchg
jnp
out
jmp
pop
jbe
je
push
push
clc
movsb
sti
sti
cmp
ret
cmp
stc
mov
adc
dec
andb
mov
or
cmp
xor
sbb
aaa
push
mov
cmp
jne
sbb
and
inc
rol
andb
jg
insb
adc
mov
dec
and
add
enter
pop
xor
fnstenv
and
sub
mov
jge
cwtl
test
dec
dec
fisubrl
sub
dec
icebp
mov
dec
jb
fdivrl
cmp
mov
push
shr
jne
xchg
dec
cli
pop
movsb
jmp
fmul
das
dec
ljmp
insb
sbb
fcmovnbe
jg
mov
xchg
mov
or
push
clc
sti
pop
mov
icebp
scas
call
sti
rolb
sbb
fildll
sbbl
add
enter
mov
gs
out
xchg
inc
pop
stos
pusha
push
int3
in
mov
bound
mov
out
pop
clc
fnstenv
pop
sub
pop
outsl
jp
xchg
push
pop
inc
je
stc
psubb
push
dec
leave
add
stos
ret
cmp
pop
insb
push
nop
out
stc
pop
lcall
mov
repnz
push
sbbb
iret
aam
xchg
shlb
xor
jp
pop
adc
xchg
push
lcall
xorps
ss
fdivs
into
in
mov
fsubr
mov
test
mov
pusha
mov
ret
or
ja
and
pop
mov
adc
shll
mov
shlb
in
xchg
sbb
cmp
insb
popa
or
inc
inc
loope
adc
ret
or
pop
movb
dec
sbb
cmp
arpl
push
pop
jecxz
out
xchg
jmp
cmpsb
test
lea
adc
ss
pop
aaa
dec
adc
mov
stos
outsl
inc
loope
popf
push
mov
cltd
outsl
mov
ja
xor
adc
adcl
cmpl
pop
or
insb
mov
adc
ret
repnz
gs
jmp
xor
loope
test
or
sbb
mov
cmp
mov
insb
pop
test
xchg
jb
dec
das
mov
dec
xchg
jo
aaa
pop
bound
ficomps
sub
pop
popa
test
sbb
loope
clc
xchg
mov
push
inc
cmc
aad
fists
shlb
mov
xlat
mov
lods
gs
ja
fs
push
jns
lds
pusha
mov
jne
inc
sbb
push
fildll
push
xchg
popa
dec
fistpl
orl
fsubrs
sbb
dec
push
mov
sbb
mov
aas
inc
sbb
in
fmulp
mov
xchg
dec
insb
cmpsl
addl
sbb
daa
jb
pop
mov
adc
imul
popf
mov
or
adc
add
pop
jle
xor
out
ljmp
sbb
jmp
fistpll
push
xchg
outsb
xor
scas
sub
mov
cmp
pop
or
test
daa
in
push
sbb
repz
inc
sbb
fxam
fldenv
sti
repz
lcall
push
add
jo
lock
jle
stos
je
or
pop
cli
push
test
and
jno
shlb
lcall
mov
movsl
int3
jns
xor
in
scas
push
jp
fisttpll
mov
mov
mov
and
daa
subb
pushf
lret
out
shlb
dec
stc
add
mov
sbb
lock
inc
aaa
out
dec
xchg
lret
and
loope
nop
xor
mov
dec
mov
jl
xor
push
cwtl
cmp
sbb
gs
pop
sub
data16
ds
lret
out
rorb
and
jb
pop
lods
jecxz
cmc
cmp
icebp
cmp
jno
sbb
adc
enter
clc
or
cli
aas
jb
fists
stos
std
cltd
or
dec
mov
xor
pop
sub
popa
mov
fisubl
jl
xlat
fdivp
inc
addr16
sbb
sbbb
dec
aaa
out
push
cwtl
bound
add
cmovs
mov
pop
fbstp
jne
xchg
mov
jae
cmp
daa
lds
inc
mov
adc
inc
loopne
idivl
das
sub
lsl
rcrb
inc
add
and
pminub
pushf
mov
jnp
scas
loop,pn
sub
insb
xor
mov
jmp
jne
xchg
mov
mov
inc
mov
sbb
add
jp
xchg
in
jo
fcmovne
adc
cmp
loope
and
add
cmp
push
in
pop
inc
mov
push
addb
dec
xchg
into
mov
in
mov
lea
push
mov
imul
scas
xor
outsl
pop
mov
fstps
push
les
lds
je
call
mov
mov
fdivrs
push
dec
inc
popa
mov
dec
and
scas
loopne
jnp
popa
das
xorl
dec
std
lahf
lcall
cmp
les
add
fwait
push
ficoms
inc
ljmp
push
xchg
cltd
xor
mov
loop
sub
jl
push
lahf
jae
jnp
ret
out
loop
ja
inc
xor
sub
pop
sti
xchg
sub
es
mul
push
divb
mov
fwait
push
and
or
mov
repz
mov
jp
jle
sarb
cmp
pop
js
insb
add
repnz
loope
aas
int3
in
jecxz
mov
adcb
lds
xchg
out
xchg
ret
mov
stos
lret
jo
lahf
cmp
xor
mov
daa
xchg
scas
sub
idivb
jg
enter
jbe
arpl
xor
dec
insl
hlt
dec
in
adc
popf
xchg
in
mov
xor
into
mov
arpl
adc
xchg
pop
mov
push
iret
out
cmpsl
add
fadds
fwait
out
shlb
mov
mov
mov
test
mov
pop
pushf
jmp
and
mov
mov
mov
out
call
jp
lods
push
xchg
bound
test
inc
test
pop
mov
lds
ljmp
insb
xchg
dec
xlat
lret
fstps
adc
pop
adc
mov
xchg
ljmp
push
test
not
fwait
cmpsb
loopne
rcrl
mov
out
in
or
pusha
and
sahf
mov
jne
into
mov
lret
insb
and
outsl
cmc
mov
fs
jae
sbb
aad
pop
arpl
push
jb
mov
push
daa
dec
jbe
in
mov
lret
cmovbe
cltd
dec
mov
pop
bound
pusha
sarb
xchg
in
adc
jb
mov
xchg
lock
pop
mov
add
or
sahf
push
movsb
lcall
movsw
movsl
ja
cld
lods
mov
jbe
sahf
clc
xchg
mov
into
mov
mov
mov
jb
mov
cltd
pop
insl
icebp
in
les
sbb
andl
loopne
iret
jmp
in
push
aam
xlat
adc
mov
popa
sub
xchg
cmpsb
xor
xchg
mov
les
xchg
out
in
icebp
loope
jns
sbb
popa
mov
mov
cltd
repz
aam
dec
ret
sahf
jecxz
sbb
std
test
lret
jle
mov
aam
popa
popf
or
mov
mov
sbb
adc
gs
hlt
in
sbb
mov
mov
sbbb
xchg
movsb
cmc
sub
aas
js
xchg
dec
dec
repz
outsb
mov
fucomp
lret
out
lret
inc
fistpl
stos
stos
xchg
push
outsl
cmp
pop
aad
dec
xor
jno
adc
test
push
fstpt
push
sub
pusha
or
jae
mov
adc
pop
fistpll
int3
sbbb
mov
test
out
jg
dec
mov
jmp
cs
and
cwtl
pushf
sub
pop
lcall
aas
icebp
in
out
dec
test
fs
mov
pop
mov
lods
mov
movsb
rcll
xchg
xchg
cmc
in
fisttpll
ds
sub
sbb
jp
and
fldt
fdivrs
mov
sub
in
mov
imul
pushf
imul
sub
adc
cld
lods
xor
or
push
xor
fs
aam
and
movl
test
mov
rcr
into
mov
mov
ljmp
test
imul
imul
cs
divb
inc
xlat
jp
pushf
xlat
and
adc
xor
test
fs
aaa
outsl
test
mov
sub
shrb
jle
int3
sub
xchg
in
addr16
loope
sbbb
jae
int
ja
fldcw
movsb
xchg
aam
mov
pop
icebp
lods
push
pop
subl
pop
movsl
ds
sub
pop
ficoml
cmp
push
and
xlat
popf
loop
lods
and
xchg
mov
cmp
stos
or
jmp
push
jge
stc
mov
in
push
and
dec
xor
pop
sarl
and
adc
jecxz
jp
stc
test
dec
cmp
sbb
adc
dec
insl
adc
jge
xchg
jecxz
sbb
push
inc
mov
fnsave
dec
cmp
lods
fnstsw
lahf
inc
outsb
pop
fstpl
xchg
add
sahf
int3
hlt
sub
addr16
inc
andb
fnsave
mov
lods
cmpl
or
dec
sub
in
fnsave
mov
jecxz
inc
ficoml
in
lds
jmp
into
jbe
and
sbb
jns
es
xor
lods
add
lret
jnp
aaa
das
xor
test
mov
inc
out
or
mov
add
aad
xor
and
outsl
adc
inc
pusha
lret
out
mov
xchg
daa
rcll
adc
and
icebp
mov
lret
mov
cmp
aas
push
inc
adc
mov
iret
imul
aam
ret
fdivrp
ss
negl
dec
mov
mov
rorb
insb
mov
aaa
lock
lods
cmp
test
and
pusha
fistpl
pop
push
add
jl
fldt
fstl
pop
cltd
mov
loopne
cmp
inc
loope
mov
jo
inc
jae
add
xor
std
out
push
xchg
mov
cli
neg
insb
in
mov
notb
fwait
rcrl
mov
cmp
pop
dec
xlat
loopne
lret
cwtl
inc
cltd
imull
push
mov
sbb
fs
movsb
fadds
mov
dec
fs
mov
outsl
push
fsubs
loopne,pn
xor
ficompl
dec
sub
fldenv
jl
add
dec
sub
xor
mov
pop
gs
test
dec
repz
xchg
outsb
pop
int3
xor
cmp
aad
sbb
shlb
dec
dec
pusha
insb
jp
and
mov
xchg
sub
mov
xor
or
fiadds
stos
insl
stos
mov
pop
fcoms
pop
dec
aaa
data16
loop
xchg
test
lcall
cs
lret
bnd
loope
jg
fists
jecxz
sbb
enter
jns
dec
and
data16
and
fsubs
lods
pusha
push
dec
inc
outsb
stos
lret
or
ja
je
int3
push
shlb
xchg
dec
jbe
push
or
xchg
mov
pop
sysexit
push
mov
dec
adc
pushf
jo
lcall
sbb
mov
dec
cs
jle
adc
out
xorb
mov
xchg
push
dec
icebp
jnp
aas
call
mov
aad
and
lahf
out
in
test
lret
mov
rolb
loope
push
mov
test
adc
sti
out
negl
cmpl
xlat
sbb
pop
xchg
mov
iret
mov
inc
sub
dec
out
cmp
loopne
lock
mov
pop
pop
push
bnd
mov
js
sbb
imul
ret
out
enter
jmp
fsubl
mov
adc
adc
jle
movsl
and
jo
cmp
test
sbb
jge
testl
js
push
xor
icebp
sbb
dec
inc
lods
popa
mov
mov
mov
ds
in
push
mov
sbb
push
data16
inc
jbe
adc
xchg
fptan
icebp
xor
cmp
clc
and
or
in
out
sbb
pop
mov
icebp
aam
data16
int
repz
adc
pop
mov
into
jmp
jns
fucomp
test
into
cmp
stc
mov
test
xchg
inc
addl
out
and
je
jecxz
clc
dec
adc
loope
fidivs
fisubrs
flds
dec
push
push
or
loopne,pn
pop
das
test
dec
lods
in
rcr
sub
andb
push
jp
sbb
test
bound
inc
push
xor
es
adc
mov
push
testl
pop
lea
cwtl
or
push
mov
add
and
pusha
jl
rcll
pop
push
jl
icebp
jg
ficomps
dec
jo
mov
call
push
adc
loope
lock
push
dec
stc
fiaddl
pop
mov
fsubl
dec
xor
mov
add
xchg
fbstp
divl
es
lods
ja
push
shl
mov
jb
xchg
das
cmp
les
inc
int3
inc
jae
mov
cli
and
cmpsb
jle
jnp
jl
mov
jmp
js
inc
inc
das
mov
arpl
fwait
sub
mulb
mov
add
mov
sbbl
stc
leave
mov
jecxz
adc
mov
mov
arpl
arpl
sarl
pop
mov
mov
sarl
xor
fcomps
subb
cli
mov
jp
je
clc
pop
wrmsr
aas
fs
pop
jecxz
lock
inc
loopne
mov
les
jmp
jecxz
fdivrl
es
out
lret
mov
and
or
pop
sahf
cmc
mov
inc
pop
pushf
mov
mov
aam
cmp
scas
out
test
jae
iret
bound
fwait
inc
inc
xchg
fisubs
pop
mov
stos
mov
dec
lock
inc
sub
test
and
inc
xchg
sub
push
pop
out
dec
loop
shll
push
mov
std
sbb
sub
mov
icebp
js
sub
outsl
push
xchg
mov
push
push
or
pop
inc
out
mov
mov
pop
jl
pop
push
movsb
fcomi
mov
loopne
push
or
cmp
ficoms
add
xchg
jno
xlat
jae
mov
xchg
in
lea
ret
dec
int3
icebp
push
imul
mov
gs
xchg
fwait
mov
push
fistpll
shlb
loope
adc
call
daa
adc
cs
sbb
mov
ret
add
js
sbb
mov
test
jge
xchg
push
loopne,pt
in
cmp
mov
repnz
inc
icebp
mov
mov
in
in
mov
js
icebp
or
push
in
sbb
jnp
push
add
mov
and
out
adc
fcomi
add
add
mov
pop
cld
movsb
lods
cmc
sahf
test
push
mov
adc
in
loopne
xchg
arpl
iret
test
push
or
or
dec
arpl
aad
mov
xor
shll
mov
jmp
int3
cwtl
test
adc
icebp
rclb
pop
jne
lret
xor
cs
cwtl
stos
push
fwait
rclb
mov
jbe
or
push
enter
dec
push
push
lret
loop
push
loope
cmp
mov
mov
dec
daa
mov
cwtl
fidivs
jae
mov
inc
mov
out
or
sbb
xor
jl
push
daa
lds
aaa
fnstenv
sbb
movsb
out
mov
xchg
mov
xor
cs
mov
iret
pop
rorb
or
dec
cmp
je
xchg
jnp
js
xor
xchg
out
movsl
mov
jae
cmp
jae
loope
dec
adc
addb
nop
dec
loop
pop
add
or
movsl
xorb
add
push
pop
jl
pop
add
cmp
mov
push
addr16
movsl
or
in
lcall
stos
decb
dec
addr16
lret
sbb
lea
lcall
mov
andb
es
mov
aad
rol
pop
add
jl
add
dec
daa
pusha
jbe
xor
je
jecxz
aad
leave
bound
rcr
xorb
add
pop
pop
inc
ss
test
inc
push
jbe
cwtl
aad
es
test
fdivp
add
pop
pop
outsb
pop
aad
jle
fistl
push
pop
cld
inc
pop
adcb
mov
stos
pop
jge
dec
or
js
sub
and
sbb
lahf
adc
push
daa
leave
dec
pop
pushl
sarb
adc
repnz
xor
mov
fildll
push
or
arpl
xchg
inc
or
xchg
outsb
mov
ds
adc
repnz
xchg
lret
inc
xor
std
loope
xor
mov
cwtl
mov
jbe
scas
xchg
adc
mov
loop,pn
test
cltd
push
fimuls
bound
nop
mull
mov
test
pop
shrl
inc
imulb
lret
aam
cmpsb
mov
lret
in
jmp
scas
add
adcb
xor
lahf
dec
jge
mov
cwtl
test
xchg
stc
inc
pop
or
jae
push
and
jnp
and
adc
cmpsb
xchg
in
mov
xor
addr16
jge
lcall
call
jp
fldenv
lods
jnp
jecxz
or
out
arpl
jecxz
add
and
dec
arpl
pop
and
xchg
popa
out
cmc
xchg
mov
push
push
add
fcmovnbe
sub
clc
loopne
cmpsl
test
sbbl
sbb
mov
jl
dec
lea
insl
enter
jmp
push
xchg
jb
jmp
or
and
jb
test
lcall
stc
xchg
xor
push
jmp
insb
lods
mov
dec
ret
cs
ret
je
cmp
sti
rcll
xor
out
xchg
pop
mov
jno
lock
cltd
sub
xchg
push
push
cmp
stos
pushf
mov
fistl
out
and
pop
mov
or
insl
sbb
mov
lods
push
addr16
call
dec
arpl
xchg
out
mov
add
mov
mov
mov
leave
sbb
sti
or
es
fisttpll
in
std
sub
mov
cmp
outsb
mov
mov
cmp
movsb
daa
or
daa
cmp
fsubrl
leave
js
dec
dec
sbb
pop
pop
loopne
movsl
loope
rcl
stos
js
imul
sbb
xor
pop
ret
rcrl
push
dec
jmp
das
fcomps
jo
mov
loop
jmp
inc
mov
iret
mov
inc
jne
add
mov
cwtl
ljmp
imul
daa
outsb
clc
xchg
sub
insb
mov
mov
out
push
jae
rcr
dec
inc
in
icebp
lret
loopne
aad
or
lret
mov
add
test
sub
lock
mov
push
shll
fucomip
mov
mov
test
call
add
test
scas
dec
push
mov
or
popf
mov
mov
and
sysret
add
pusha
repz
loopne
jmp
inc
dec
je
mov
mov
in
mov
mov
adc
lock
mov
jne
rcrl
xor
daa
dec
mov
xchg
in
inc
dec
dec
shrl
cmp
mov
ss
int3
cmc
adc
mov
ss
mov
sbb
pusha
inc
daa
inc
dec
inc
xchg
mov
inc
adcl
aad
adc
push
mov
mov
pushl
test
scas
outsb
or
outsb
jo
jno
sbb
popa
hlt
sbb
bound
and
gs
push
jmp
jle
add
lods
mov
mov
testl
cltd
pushf
in
dec
ljmp
idiv
les
push
jnp
imul
mov
in
insl
adc
test
nop
or
enter
jb
or
mov
in
jae
inc
fisttps
rcrl
cmp
jns
in
fnsave
pop
or
mov
loop
pusha
sub
xchg
mov
out
dec
int3
xchg
sbb
sbb
dec
mov
inc
add
dec
xchg
sub
xchg
xlat
aaa
pusha
mov
mov
sbb
aas
enter
ja
fdivl
lahf
or
rcrl
repz
push
pop
mov
pop
mov
mov
and
jae
inc
mov
out
adc
subb
or
sbb
ret
xchg
push
mov
out
xchg
addr16
out
test
je
lgdtl
fsubrp
das
xchg
adc
pcmpgtd
bound
cmp
lahf
js
pop
lods
lods
mov
in
xchg
sbb
xchg
xor
out
mov
cmpsb
lods
xchg
mov
mov
fldt
push
pop
adc
push
add
data16
mov
adc
nop
pop
jp
leave
jge
mov
icebp
or
mov
and
mov
into
push
pop
das
or
push
push
shlb
jge
loop
jecxz
pusha
or
loop
stos
jl
in
push
mov
mov
insl
inc
xchg
bt
in
sbbl
inc
loopne
mov
push
out
add
sub
mov
cltd
cmp
ljmp
popf
hlt
sub
adc
xor
cmpsl
push
mov
xlat
and
add
sbb
and
mov
fs
insl
sar
sti
lcall
adc
ljmp
mov
addr16
mov
xor
ss
out
jns
fwait
jns
xchg
outsb
sti
test
cli
lcall
ror
cmp
jns
ret
shrl
cmp
adc
dec
add
lds
xchg
ljmp
outsb
mov
jb
xchg
lahf
test
dec
jp
arpl
mov
bnd
bound
mov
scas
fstpt
or
loop
mov
cs
insb
call
sbb
aad
sbb
rcrb
decb
insl
popf
mov
icebp
mov
leave
cli
cmc
imul
jmp
push
jnp
mov
fsubs
sbb
adc
je
jmp
into
int
or
pop
jns
sub
enter
icebp
in
xorl
jnp
ror
jg
jbe
and
dec
xchg
xlat
cwtl
and
push
cltd
xchg
lea
and
or
sbb
dec
std
enter
adc
or
cmp
mov
popa
push
les
mov
test
into
cli
push
sbb
cmp
aas
mov
and
fwait
jecxz
out
jbe
hlt
sbb
xchg
lahf
int3
push
push
dec
mov
iret
ret
ja
pop
cmpsb
out
pusha
pop
jae
out
cmpsb
std
mov
sub
mov
add
inc
mov
add
fdivrl
inc
idiv
xor
shlb
or
push
add
in
mov
loopne
jnp
fsubl
push
cwtl
xor
dec
xor
out
mov
rcr
inc
mov
test
pop
xor
popf
and
jne
mov
sub
push
test
mov
push
test
xor
fnstsw
jg
mov
cmpsl
lret
push
clc
mov
xchg
dec
inc
stos
ss
push
test
jo
clc
xchg
andb
pushl
adc
and
popa
out
jge
lds
int3
lods
mov
pop
shlb
data16
xor
mov
cmpsb
sbb
xchg
aam
inc
or
ds
xor
aas
shll
cmp
ja
aad
mov
push
push
mov
pop
xchg
dec
pop
mov
testl
inc
adc
push
cmpsl
mov
adc
cmp
inc
sub
lcall
jno
in
in
inc
imul
int
pop
dec
adc
adc
lods
and
adc
loope
pusha
push
loop
gs
jno
and
dec
fistpl
push
mov
ret
xor
inc
stos
fwait
pop
sub
fidivrs
addr16
jmp
out
and
push
sub
in
test
push
sti
test
mov
inc
loopne
pop
mov
or
and
testl
jbe
sbbb
xchg
xchg
movl
jnp
mov
jae
shrb
test
cmpsb
mov
sbb
cs
jnp
arpl
jmp
into
push
stos
add
pop
push
pop
sbb
jae
adc
jp
mov
das
movsl
xchg
cmp
or
xchg
loop
es
inc
sbb
cmp
xor
mov
int3
clc
or
push
movsb
inc
fsubs
jno
lcall
rcrb
mov
sub
arpl
pop
cld
mov
adc
mov
ljmp
cwtl
push
mov
sbb
xchg
in
fisttpll
adc
sbb
add
cli
xchg
out
cmp
mov
or
and
test
mov
bound
push
insl
sti
jnp
std
push
xlat
inc
jnp
push
jecxz
mov
jnp
les
cmp
or
push
fwait
inc
aad
adc
push
jne
lods
xor
and
in
fdiv
les
push
cmp
and
scas
decb
repnz
andb
sbb
mov
add
push
loop
fsubs
dec
sbbl
test
dec
xchg
sub
pop
jg
cs
cmp
ret
rcr
mov
pop
xchg
xor
insl
xchg
lea
loopne
mov
aad
dec
add
and
pusha
cmp
in
arpl
or
and
inc
iret
xor
inc
fldcw
mov
fisubs
fildll
outsl
xor
dec
pushf
sbb
fisttps
mov
movsl
pop
and
mov
xchg
inc
aam
xchg
push
fbstp
aas
mov
cmp
shrb
test
xchg
mov
pop
shlb
mov
mov
xchg
imul
cs
mov
mov
daa
inc
push
icebp
lds
loopne
out
out
jbe
fcomp
pop
inc
jge
jno
pusha
ret
popf
es
sub
mov
jnp
mov
repz
gs
je
negl
in
fisubrl
add
jle
and
pop
imul
add
loopne
inc
xor
js
xor
vmovshdup
out
jne
sahf
mov
test
iret
add
insl
out
fwait
pusha
sub
jbe
lahf
insb
jbe
addr16
xchg
mov
cmp
push
arpl
mov
stos
jmp
xchg
sub
pop
dec
out
push
cli
loopne
scas
push
fcomip
sbb
dec
fdiv
push
push
mov
std
or
fs
inc
movsl
fdivl
daa
or
jmp
add
push
bound
js
adc
popa
pop
fildll
and
sbb
out
sub
lods
or
jno
icebp
xchg
popa
adc
les
pushf
and
or
loope
lods
or
and
mov
inc
mov
pop
xchg
mov
adc
in
sub
push
push
add
mov
mov
aaa
cwtl
das
pop
stos
int3
aam
push
scas
movsb
shlb
arpl
in
movsl
jge
mov
inc
cltd
cltd
and
sub
test
jge
mov
ret
int
cmc
cmpsl
or
outsl
test
int3
stos
in
es
in
pushl
rorl
jne
sbb
xor
iret
testb
lods
sbb
sbb
cmp
scas
movsl
push
sbb
dec
inc
mov
outsb
sbb
cli
sub
test
mov
stc
cmp
sti
mov
test
jo
nop
jp
int3
rolb
out
cmc
inc
mov
mov
aam
mov
mov
push
sub
push
ss
or
orb
sar
idivl
xchg
sbb
dec
lods
jmp
pushf
sbb
add
mov
call
cld
into
mov
sti
pushf
shlb
jmp
imul
push
xlat
es
mov
pop
mov
sahf
xchg
mov
push
sti
test
icebp
xchg
fdecstp
mov
aas
sub
fisubl
dec
rclb
pop
inc
gs
mov
cltd
sub
inc
fxch
and
popa
and
addr16
fstpl
les
fcmovb
and
cmpsl
loopne
xor
jle
test
mov
push
mov
mov
outsl
xor
testl
cvtps2pi
xor
push
outsl
insl
jbe
fnstenv
loop
sub
dec
push
sti
mov
inc
xor
jge
xchg
ja
cmc
xchg
popf
and
out
xor
test
mov
pop
adc
enter
aas
ja
cmp
jnp
push
dec
fucom
nop
ficompl
out
fsubs
jno
jl
jp
lcall
lret
psubusw
andb
add
push
xchg
jmp
ss
pop
out
adc
movsb
es
xor
pop
addl
loopne
aas
pop
into
stos
pushl
push
xor
dec
stos
or
xlat
decl
leave
enter
cli
xor
mov
push
in
sbb
negl
std
push
aas
xor
lods
subb
dec
inc
ss
call
insl
adc
sub
iret
hlt
sbb
xorl
jae
jb
mov
sbb
flds
or
outsl
cmp
pop
scas
icebp
es
rolb
clc
insb
in
insb
mov
out
movsb
iret
push
jecxz
mov
lods
adc
and
outsb
call
repnz
das
cwtl
repz
sub
rorl
push
pusha
sarb
push
jl
lods
int3
sti
pop
sbb
outsb
sub
imul
hlt
jl
cld
outsl
add
add
push
sub
out
loope
mov
push
ds
jle
push
sarb
out
xchg
cwtl
aad
scas
pop
fsubl
int3
mov
out
push
push
arpl
xchg
mov
inc
and
ds
sub
pop
mov
push
out
stos
mov
popa
test
clc
pop
stos
iret
rorb
repnz
mov
loope
mov
add
loop
mov
cmpsb
and
pop
in
xchg
sti
out
xchg
xor
or
pop
or
pop
stos
mov
das
int
mov
popa
pop
adc
int3
xchg
jbe
mov
sub
xchg
push
imull
sub
cmpl
adc
and
push
stos
xchg
fistps
xchg
xor
int
jmp
popf
sbb
iret
jmp
jg
jae
jbe
mov
out
mov
cmpl
jmp
xchg
inc
popf
jl
dec
pop
cwtl
subb
sbb
xchg
jecxz
out
movsl
in
lods
jg
imul
push
call
add
add
mov
iret
sub
or
shrl
mov
mov
xchg
push
sub
jmp
push
fdivrp
lret
ror
cmp
aaa
push
sub
pushf
repnz
sbb
xor
sbb
dec
in
dec
call
aad
xchg
mov
mov
out
jg
popf
test
or
lcall
js
test
int3
ss
das
and
fnsave
out
xchg
gs
sbb
jne
arpl
mov
repz
loopne
push
icebp
aad
mov
push
cmp
loop
cmpsb
mov
les
movl
std
lock
icebp
inc
cmp
fwait
sbb
out
stc
dec
mov
rcl
ds
xor
mov
jg,pn
sbb
jo
jns
int
in
clc
out
push
fcmove
jg
jbe
mov
aaa
jp
inc
adc
clc
xorl
aas
or
and
mov
sub
cmpsl
xchg
mov
push
push
pop
inc
out
dec
pop
dec
xor
cmp
outsl
imul
data16
pop
jnp
enter
pop
jnp
mov
or
adc
shrb
sub
aaa
jp
and
test
imul
hlt
push
adc
negl
mov
shr
aaa
and
imul
inc
int3
push
dec
rcr
movsl
or
nop
in
cmp
jmp
lods
push
sbb
mov
lret
out
pop
jle
subb
jo
inc
outsb
dec
add
sbb
cld
xor
dec
mov
jno
pop
pusha
les
and
sti
xlat
test
out
in
mov
test
and
jp
iret
clc
stos
shll
lcall
popa
mov
mov
xchg
pop
mov
addr16
movsl
out
imul
int
cld
and
mov
insl
inc
fdiv
movsb
jecxz
int
fs
lds
mov
cld
js
mov
les
outsb
stos
push
ror
fidivrs
lahf
cmc
loop
mov
scas
ljmp
dec
packssdw
gs
stos
ret
aaa
cli
into
dec
inc
cmp
icebp
fwait
mov
pusha
test
xor
es
dec
xor
mov
or
mov
dec
sub
and
mov
inc
loop
cli
xor
sbb
mov
adc
into
lea
jbe
jb
pop
and
mov
sub
cmpl
inc
clc
adc
popf
loop
xorl
repz
jo
lea
shr
imul
int
or
fnsave
xchg
xchg
mov
int3
cwtl
cmpsl
loope
jb
lret
xor
sub
jecxz
push
xchg
test
sbb
add
inc
aaa
pop
bound
ss
cmpsl
fs
hlt
inc
pop
lods
imul
push
inc
mov
sbb
sub
fcomip
xchg
ret
and
jae
or
rorb
xsaves
sti
cmp
inc
pop
xchg
mov
pop
xchg
and
lock
jl
or
aaa
pop
loopne
psadbw
jb
push
in
lcall
jns
cs
loope
mov
neg
mov
loop
rclb
data16
mov
mov
outsb
outsl
push
ds
jb
adc
inc
xchg
in
je
dec
cltd
cmp
fdivr
es
ss
pop
sbb
cmp
pop
adc
push
cld
adc
lods
gs
jns
inc
sbb
jl
jno
or
dec
mov
insl
adc
jle
mov
xor
xor
push
leave
out
dec
popf
fisubrl
dec
and
mov
idivb
mov
push
jae
xchg
cmp
lods
mov
shl
mov
loopne
or
sub
xchg
and
mov
cmpb
mov
bound
mov
inc
cmp
shlb
and
movl
xchg
aaa
mov
cmpsb
mov
into
xor
jecxz
cmpb
into
mov
jbe
int3
push
xchg
jge
pop
stos
je
scas
popa
into
nop
pop
push
clc
testb
or
incb
fsubrl
into
mov
xchg
xchg
xchg
pop
sbb
iret
stc
or
or
sbb
add
mov
xchg
ret
fldenv
push
inc
pushf
adc
jb
lea
fistpl
xor
loopne
and
ret
sarl
sbb
adc
mov
mov
out
orl
xor
push
mov
push
test
inc
jp
imul
int3
and
mov
jmp
pushf
cmp
push
leave
lods
mov
ja
in
ja
sti
outsb
jno
cwtl
xchg
js
push
int3
adc
mov
test
xor
call
jle
and
fnsave
ja
fstps
jns
sub
sbb
xchg
lods
dec
sbb
add
icebp
cmp
pop
cmpsb
movsb
leave
shrl
jmp
std
jp
jmp
out
mov
fisubrs
popf
hlt
leave
lods
jmp
cli
aam
rolb
stos
leave
or
shll
nop
out
adc
movsb
ss
lea
jecxz
or
xchg
cmp
nop
int3
lret
outsl
fdivrl
lds
fxch
movsb
xor
call
popa
push
hlt
pusha
or
mov
push
faddl
cli
add
enter
test
test
mov
hlt
dec
jecxz
jbe
lock
in
in
into
sbb
adc
mov
mov
lcall
mov
push
jbe
sbb
aaa
cld
fstpl
cmp
and
mov
dec
mov
scas
test
hlt
hlt
xor
xchg
lods
fwait
cltd
bound
mulb
and
fidivs
iret
dec
adcl
and
push
inc
in
cs
clc
not
adc
sub
mov
imul
decb
xchg
aas
cmp
test
pcmpeqb
pop
xor
mov
jge
jle
aaa
push
mov
dec
mov
sbbb
inc
popa
pop
ret
addb
adc
shl
stc
xor
fmull
into
loope
adc
outsl
pop
pop
imul
bound
pop
pop
scas
and
into
imull
sarb
test
sbbb
daa
jne
mov
out
daa
dec
stc
cli
int
es
xor
inc
push
add
icebp
jbe
push
sbb
add
mov
lea
xchg
scas
lock
mov
nop
scas
xchg
fsts
add
push
cmc
jb
push
mov
mov
xchg
inc
mov
int
add
and
popl
arpl
inc
andb
mov
xchg
jecxz
and
lret
ret
xor
adc
repz
mov
sub
sub
test
idivl
or
out
or
call
dec
int3
dec
inc
inc
out
cmp
clc
sbb
aad
jle
pop
mov
mov
mov
xor
mov
pop
add
lds
jb
jb
add
mov
mov
dec
mov
int
jae
mov
lock
add
cld
cs
aam
dec
push
aad
fs
ljmp
stc
push
arpl
notb
jmp
cwtl
pop
push
inc
and
add
les
push
stos
jg
adc
and
negl
cli
xor
ljmp
mov
xchg
js
in
xor
jns
mov
in
jmp
aaa
arpl
lods
lahf
xor
sbb
imulb
cvtdq2ps
pusha
rorb
rcrl
cmp
mov
cmp
inc
jns
inc
push
pushf
pop
cmp
mov
shll
and
lahf
mov
cmp
or
iret
xor
outsb
sbb
mov
or
dec
cmp
inc
ljmp
out
cmpsl
cmp
push
jbe
movsb
jb
mov
push
es
in
xchg
xchg
js
inc
mov
daa
aas
out
lock
mov
xchg
jg
cmpsb
inc
pop
cltd
jmp
pop
cmp
mov
gs
dec
insl
aaa
mov
add
inc
mov
pop
loope
aas
stos
mov
push
outsb
mov
fbld
outsl
movsl
jb
in
pop
les
arpl
daa
mov
lods
xchg
jno
dec
popf
jns
adc
sahf
jle
and
loope
xor
add
call
fildl
inc
imul
xor
or
mov
addr16
cs
ror
xor
imul
outsb
out
bound
push
pop
adc
cmp
or
fistps
inc
sub
fildl
pop
clc
xor
rclb
movsb
cli
icebp
cld
arpl
inc
loop
jmp
insl
cmp
sar
ror
cmpsl
loopne
mov
adc
mov
xor
jae
pop
push
cs
push
and
mov
lock
xchg
out
sub
rclb
mov
fimull
std
int
mov
shlb
push
imul
inc
cmpsl
aas
out
movsl
xchg
mov
or
sub
arpl
inc
loope
lods
sbb
lcall
pop
ja
inc
mov
lea
arpl
stos
ljmp
stos
inc
fsubrl
xchg
cli
mov
loopne
mov
pop
mov
nop
or
sahf
imul
into
cmpsl
das
loopne
dec
push
popf
out
xor
lds
test
cmp
insb
mov
jae
int3
movsb
bnd
xor
mov
jl
xor
scas
loopne
cmp
insl
call
cmp
mov
popl
cmpsl
ret
mov
clc
loopne
hlt
pushf
test
je
adc
test
dec
mov
cmp
push
cltd
lret
loopne
shrl
ds
iret
gs
nop
sbb
cmc
dec
sub
int3
rorb
aaa
imul
mov
out
out
pop
sbb
mov
cli
scas
and
inc
out
mov
and
bound
fldpi
xchg
out
out
insb
lret
jge
cmpsb
pop
adc
mov
mov
sub
jbe
mov
mov
movsb
xchg
cmp
and
enter
pusha
data16
popf
jge
cmp
cmc
dec
cmp
sub
inc
loope
sub
popf
mov
mov
xchg
jl
jbe
xorl
pop
ds
rorb
es
in
pusha
sbb
xor
aaa
xchg
push
fs
pushf
in
dec
inc
cmpsb
stos
sarb
in
push
loope
pusha
adc
in
or
jge
mov
repz
testl
and
enter
dec
loope
mov
sbb
ja
stos
cmp
mov
push
adc
dec
fs
jnp
mov
sbb
sahf
jmp
lock
mov
sub
mov
je
xor
sbb
repnz
enter
adc
cmp
add
cmp
mov
dec
in
enter
jo
pop
mov
inc
mov
and
scas
aam
into
xor
les
mov
in
mov
enter
popf
push
xor
shl
fimuls
cwtl
shl
add
in
xor
mov
call
clc
leave
and
outsb
out
enter
inc
shlb
jp
ret
adc
sbb
dec
lods
mov
fucomp
mov
and
arpl
pop
xor
lea
andb
jae
pop
into
xchg
imul
add
out
cmp
xlat
xor
jnp
cmp
das
enter
pop
push
xor
mov
lock
mov
jbe
mov
data16
cmp
lods
stos
popa
hlt
repz
add
mov
aaa
jbe
fsubrp
and
push
mov
push
inc
testb
and
pop
add
lahf
adc
dec
xor
std
test
imul
mov
lcall
mov
scas
xlat
repnz
jne
jp
mov
xchg
adc
lret
into
xchg
in
out
or
xorb
call
mov
jg
daa
or
and
add
sub
dec
jmp
out
mov
sub
jnp
out
sbb
jp
sub
mov
mov
pop
xchg
fmul
rcl
loop
fnstsw
insb
mov
enter
mov
call
mov
lods
mov
jl
pushl
pop
sbb
xor
push
sbb
out
fs
sbb
popa
xor
movsb
divb
mov
loopne
jmp
lcall
push
out
mov
dec
in
fildl
icebp
ss
sub
cmp
lret
fsubrs
pop
adcb
fwait
iret
fistpll
subb
sub
stos
sbb
push
aam
cltd
aaa
loopne
mov
xor
cmp
movsb
xor
mov
adc
mov
stc
lret
cld
in
cmp
cmpsb
inc
fisttpl
pop
pop
xchg
pop
imul
push
std
leave
inc
mov
dec
sub
xchg
mov
lock
mov
int3
mov
jbe
pop
lcall
add
pop
out
add
adcl
mov
mov
out
sahf
clc
jbe
sub
lock
fldcw
scas
cmpsb
xor
popf
cs
jp
pop
cmp
rcl
mov
push
xor
js
adc
xor
add
aam
icebp
cwtl
fwait
insb
push
ret
dec
in
out
adc
mov
scas
out
pop
sub
inc
iret
push
inc
in
rclb
enter
jae
add
mov
and
mov
mov
xor
je
imul
loop
icebp
xchg
xchg
cmp
mov
mov
test
nop
lret
std
inc
repnz
mov
push
jmp
jne
sbb
dec
lahf
gs
fdivrp
sub
inc
test
std
aam
mov
dec
jae
out
roll
mov
cmc
cmc
idivl
insl
cmp
cmp
sub
push
lcall
ficomps
and
cmc
out
rorl
fwait
add
loope
scas
xchg
lcall
int
cli
pop
add
lds
mov
les
mov
sarl
lcall
add
pop
sahf
ret
mov
test
rorb
mov
mov
push
daa
push
jmp
fsubs
dec
rclb
in
xor
dec
outsl
pop
int
aad
sarl
je
out
cld
jns
ficompl
adc
and
or
imul
lret
pop
sbb
mov
xchg
scas
mov
arpl
push
cmp
test
sbb
or
outsb
fmuls
inc
rdtsc
add
movsb
xor
lret
lea
push
arpl
cmpsb
pusha
sub
dec
mov
lret
adc
adc
mov
lfs
fcoml
jle
imull
xor
adc
cmc
shlb
sub
jle
and
arpl
call
int3
jae
lcall
lods
cmp
jmp
mov
jno
dec
mov
cld
lock
in
inc
pop
addl
leave
pushf
ret
sbb
dec
clc
out
cmp
ficoml
sahf
testl
lock
add
push
sub
jbe
popf
mov
sbb
cwtl
test
aas
add
ljmp
das
ret
into
roll
inc
lock
hlt
ficoms
rorl
out
mov
push
jno
mov
dec
sub
aaa
in
cld
rclb
inc
ljmp
and
jo
movsb
xor
inc
mov
loop
inc
fisttpll
or
adc
xchg
shll
mov
mov
adc
dec
data16
enter
dec
jb
jo
push
jp
adc
xchg
xchg
lcall
or
jg
xor
mov
mov
aaa
mov
and
sbb
mov
loope
xchg
int3
jae
dec
sub
outsl
fwait
jmp
test
adc
cwtl
push
xor
xchg
jp
or
push
pop
das
push
push
push
mov
inc
mov
scas
ja
addl
out
sub
incb
mov
movsl
jp
mov
pop
outsb
aad
xor
aam
mov
push
ljmp
call
inc
and
mov
subb
or
pop
cld
jle
jo
call
dec
mov
dec
jp
ljmp
insb
push
sahf
sub
lock
xor
into
insl
mov
fnstsw
in
out
ret
mov
fistpll
std
xchg
adc
add
mov
xlat
adc
jg
popa
lret
movb
int
fstpl
and
shl
inc
aaa
cmpsb
pop
push
repnz
repz
sub
jmp
fcomip
in
aam
dec
or
out
sarb
leave
sahf
imul
mov
mov
lods
jb
test
outsl
lods
sbb
ljmp
sbb
stos
xchg
jmp
popf
jno
fildll
add
jns
int3
enter
dec
orb
cltd
sbb
push
jmp
cmp
outsl
mov
cli
fldenv
pop
jp
ffreep
sbb
xor
lods
add
cmpsb
sub
xchg
push
xchg
mov
in
lcall
mov
gs
pop
sub
fnsave
stos
add
pop
addb
cli
or
inc
cmp
repnz
icebp
cli
idivb
les
mov
loope
dec
sub
lret
lcall
stc
cwtl
jne
adc
aad
cwtl
mov
sub
aad
cmc
cmp
add
cmpsl
mov
imulb
loopne
xchg
hlt
mov
jp
sbb
push
std
and
imul
or
inc
fbstp
mov
mov
or
mov
sti
fimull
cmp
add
xor
sbb
rcl
sbb
jnp
fdivrl
mov
sahf
cmp
aad
push
inc
xchg
sti
mov
push
test
int
mov
lock
ljmp
inc
xor
out
loop
jbe
popa
xor
mov
adc
pop
sahf
sbb
ret
orb
xchg
es
push
dec
addr16
mov
adc
in
xchg
call
mov
fcoms
cmp
or
outsl
out
cmc
dec
ljmp
push
mov
jnp
inc
mov
xchg
xchg
incl
pop
mov
adc
sub
sbb
xchg
fucom
mov
pop
inc
push
popa
xchg
in
jae
shlb
js
lods
cmpsb
out
jae
and
xchg
xor
and
cmp
fs
sub
push
mov
jp
loopw
inc
inc
mov
into
or
xor
cmc
pushf
insb
lods
test
mov
and
sub
pop
fisubrs
into
inc
xchg
in
subl
ret
mov
fisttpl
xchg
inc
icebp
cmp
sub
cwtl
cltd
pushf
movsb
push
popf
pop
pop
mov
mov
add
cwtl
cld
inc
mov
jb
jle
in
dec
in
sbb
or
ds
jo
and
mov
dec
rcll
data16
int3
pop
cld
sbb
adcb
sarl
xchg
sub
leave
sbb
push
pop
fildl
stos
and
mov
lcall
fwait
xor
jecxz
lcall
sbb
enter
or
add
lea
nop
out
in
popl
lds
fstpl
push
push
fwait
cmpsl
outsl
aam
mov
aam
jmp
jnp
in
enter
fsubrs
xchg
jo
cltd
clc
pop
add
test
xchg
cld
inc
bound
ror
sti
clc
jp
in
mov
cld
inc
out
ficoml
rcll
ds
dec
cld
pop
in
ss
hlt
mov
pop
push
sbb
into
mov
mov
es
dec
push
lahf
jae
inc
fwait
xchg
les
int
and
icebp
xor
addb
dec
inc
insb
adc
enter
in
mov
mov
hlt
inc
in
mov
adc
xlat
mov
and
in
mov
dec
outsb
loopne
stos
fimuls
imul
mov
cmp
icebp
aaa
jb
pop
insl
in
cwtl
cmpsl
jmp
adcb
repz
into
ror
sub
iret
push
add
aad
sub
into
out
out
stos
inc
inc
popf
outsl
jae
hlt
pop
push
ds
mov
fidivrs
and
clc
and
mov
clc
clc
not
ds
out
sub
mov
inc
scas
add
jb
jo
int
cmp
out
cmp
jp
pop
fwait
push
sbb
mov
das
xor
out
inc
out
out
and
test
pop
push
imul
mov
mov
int3
xchg
hlt
fisubl
jnp
into
cs
js
jnp
mov
lret
or
enter
bound
dec
and
cmp
jns
in
cmp
jge
pop
mov
fs
xchg
shl
jo
push
sub
repz
xchg
shrb
vpcmpgtb
in
rorl
scas
or
out
mov
add
out
arpl
mov
adc
xchg
lcall
jg
lret
int3
xor
arpl
pop
and
push
int
sahf
cmp
xchg
out
push
nop
in
inc
rclb
daa
pushf
insl
mov
scas
iret
dec
cli
inc
je
inc
leave
dec
sbb
xor
rorl
fidivrs
jno
sbb
and
mov
pop
adc
call
shrl
sbb
rsqrtps
xchg
sub
scas
clc
xchg
cmpsl
movsl
cmp
sbb
sahf
xor
adc
mov
xchg
ret
fisttps
lahf
rorl
aas
out
ret
loop
dec
mov
pop
xor
gs
movsl
fucomi
scas
aaa
loopne
and
dec
ss
adc
inc
mov
jno
cmc
cmpsb
xor
push
jb
mov
iret
gs
das
roll
shld
inc
dec
sti
jge
add
arpl
mov
repz
out
mov
or
cwtl
lock
stos
sub
inc
mov
cmp
pushf
popf
sbb
or
jno
rcr
sub
and
sub
adc
loopne
repnz
adc
aas
aam
in
or
andl
outsl
sub
insl
ficoml
int3
aad
xchg
pop
xor
fwait
mov
mov
jno
imul
stos
mov
inc
loope
xchg
sbb
inc
mov
cld
xor
out
xor
inc
xorb
into
or
or
es
sub
fs
in
xchg
adc
mov
mov
sbb
repnz
cltd
jae
xor
jecxz
lret
xor
xchg
test
add
cmpsb
pushf
bound
and
mov
int
fdivrl
pusha
push
mov
mov
mov
xor
cmpl
add
lret
xchg
dec
cmp
xlat
adc
out
push
fdivrp
jp
sub
aam
movb
jmp
stos
push
prefetch
fs
in
mov
imul
call
imul
enter
add
add
push
mov
xor
imul
fwait
arpl
into
cmpsl
jb
aaa
or
sbb
cmp
xchg
in
mov
jg
mov
out
push
adc
aam
mov
rolb
jbe
jnp
adc
adc
lret
enter
cmc
mov
cmp
loopne
push
sub
addr16
xchg
mov
sti
rorb
jno
jnp
inc
pop
scas
cwtl
fcmovnb
imul
jb
in
pusha
push
mov
imul
stos
aas
inc
adc
xchg
mov
mov
jbe
pop
xchg
xchg
xchg
outsb
sub
mov
push
cmp
jp
dec
xchg
xor
data16
jnp
iret
rol
loope
jecxz,pt
cmp
rorb
jbe
lahf
arpl
cmp
sahf
adc
jb
insl
into
pop
push
daa
mov
mov
push
scas
in
jns
data16
sub
bound
jp
sub
insl
dec
jnp
push
lods
xor
fistpll
xor
sbb
push
jecxz
scas
mov
xor
icebp
jb
dec
xorb
ficoms
and
jae
pop
push
testb
xchg
cmc
leave
inc
push
and
sbb
icebp
fsubrp
sbb
shlb
lods
push
mov
sbb
inc
jnp
les
icebp
popf
mov
fcoms
mov
sbb
gs
out
or
cmp
mov
jbe
stos
test
out
div
test
xlat
les
std
ret
xorb
scas
mov
les
js
andl
cmp
jecxz
cltd
mov
mov
push
mov
mov
jb
push
in
addr16
xor
out
mov
int
repz
mov
sub
sbb
cmpsb
scas
stos
adc
xor
inc
add
ret
lret
das
cmp
mov
mov
and
xor
jno
lds
and
stos
adc
jne
jg
inc
jl
into
adc
jne
jp
jg
push
add
xchg
cwtl
js
imul
jl
push
jbe
cmp
xlat
outsl
adc
clc
mov
out
decl
jnp
fimull
mov
popf
mov
rolb
fadds
push
sub
adc
test
mov
std
push
lret
lcall
mov
push
data16
cli
addr16
je
popa
aam
ss
in
push
xor
imul
es
adc
push
jno
adc
sub
movsb
push
test
mov
mov
arpl
xor
aas
bound
in
jl
cmp
fisttps
ljmp
out
pop
mov
inc
loopne
mov
inc
pushl
outsl
enter
xchg
scas
jge
pop
fnstenv
lret
xchg
mov
subl
push
cmpps
loopne
xor
sub
aad
xchg
js
lret
dec
push
lret
shlb
push
dec
xor
add
xlat
xchg
mov
cmp
mov
movsb
fdivrl
outsl
jne
call
jp
mov
ret
stc
bound
popa
lea
lcall
and
and
popf
ret
je
pushf
or
mov
push
push
int3
pop
jno
push
insb
and
add
cmp
scas
cmpsl
mov
xchg
js
ljmp
lds
lock
jo
test
mov
pop
in
jmp
stos
stos
push
xchg
lods
fistl
outsl
jne
push
pop
pop
lcall
mov
aas
sarl
sbb
sub
sbb
push
mov
inc
adc
pop
test
pop
jp
sub
popa
rcll
imul
lret
jg
out
ficomps
mov
xchg
sbb
out
adc
test
fbstp
dec
cmp
jecxz
pop
xchg
xor
ss
or
aas
xor
ljmp
add
aam
call
mov
clc
pop
xchg
xor
in
jns
and
test
fidivrl
test
jbe
sbb
mov
movsb
dec
je
cmpsl
xchg
outsb
mov
push
decl
into
call
cmp
mov
lods
shll
cwtl
mov
test
faddl
add
sbbl
sti
pop
and
sub
aam
dec
mov
mov
cli
cmpsb
ja
inc
pop
stos
out
jmp
dec
cmp
ljmp
push
sub
adc
call
shlb
adc
mov
rolb
xor
pop
mov
inc
mov
insl
insl
or
and
mov
sbb
addr16
popa
lahf
negb
lock
stos
loope
adc
sub
mov
mov
sbb
shlb
loop
arpl
mov
inc
mov
mov
mov
in
jb
lahf
pusha
jecxz
mov
push
xchg
xor
and
cmpsb
cwtl
enter
or
call
mov
cld
jle
pop
xor
lahf
into
jae
mov
xor
scas
mov
call
dec
stc
sub
mov
jmp
jp
push
sub
push
jge
mov
cmpsb
or
ss
out
inc
pop
and
jb
fucomip
mov
cmp
popf
mov
or
pop
insb
jns
xlat
mov
adc
ds
pushf
test
in
dec
out
jle
cmp
mov
xchg
xchg
inc
cmp
sub
outsl
ss
iret
js
rcrb
push
xlat
sbb
push
daa
out
xchg
mov
call
out
mov
mov
mov
mov
adc
mov
hlt
add
mov
inc
push
fidivl
xchg
mov
out
mov
xor
or
setb
test
rolb
xor
fimuls
jno
std
into
push
enter
jmp
ret
test
sbb
xor
in
push
div
xchg
cmp
pop
js
ss
jb
scas
adc
xchg
pop
xchg
popa
mov
sbb
enter
jnp
adc
push
shlb
cmp
stos
rolb
movl
les
mov
inc
out
xchg
or
in
mov
fsubp
es
shll
mov
ficoms
out
sbb
mov
or
jle
xor
popf
jl
scas
lods
loop
popa
jl
push
jmp
sbb
push
add
pop
and
xchg
pop
or
scas
adc
es
or
rcrl
xchg
xor
jg
idivl
sti
in
pop
cmp
hlt
aad
loopne
int
fcoml
insl
mov
mov
sub
insl
loop
push
or
mov
pop
jmp
cmp
or
out
addr16
push
les
jecxz
fs
mov
jmp
out
aaa
mov
push
popf
hlt
ds
mov
push
inc
or
xchg
cli
int3
sub
ficoms
mov
pop
test
in
loope
aam
lcall
xchg
out
insb
addl
or
shr
sbb
movsb
outsb
out
sub
ret
inc
clc
popa
pop
mov
ljmp
dec
mov
lahf
xor
data16
repz
mov
cld
je
jnp
or
dec
mov
sub
mov
ret
push
rep
mov
mov
push
push
cmp
sub
stc
add
iret
in
xor
xchg
cmp
insb
es
inc
xor
fs
and
test
orl
sahf
shrl
test
lock
push
pusha
fisubrl
mov
outsb
ss
cld
mov
cmp
aas
bound
sti
jecxz
cmp
dec
and
mov
aam
lcall
fnsave
jo
pop
insl
inc
dec
fidivs
popf
and
xor
mov
adc
cmpsl
cmp
cltd
icebp
ficoml
and
add
lret
insl
pushf
and
lcall
movsb
out
sub
lock
insb
je
pop
out
mov
mov
push
mov
dec
outsb
push
and
clc
sub
nop
outsl
push
fistpll
std
idivb
mov
lret
mov
movsl
push
fdivrl
imul
xchg
call
adc
iret
jg
cltd
loope
push
outsl
fsts
lret
pop
push
decl
lea
xchg
shll
push
rcrl
inc
jl
stos
xor
sahf
gs
or
add
mov
jle
sbb
in
push
js
and
les
call
fs
push
ret
pop
cmpl
xor
test
adc
in
cltd
jecxz
sbb
sbb
jns
stos
jmp
nop
pop
push
adc
add
fdiv
pushl
in
jno
arpl
mov
push
xor
sbb
ret
jle
in
hlt
shlb
enter
out
int
pop
filds
arpl
inc
dec
or
insl
push
ret
mov
mov
and
cltd
into
push
in
add
cwtl
push
int3
insb
enter
enter
cmp
inc
sbb
cli
pusha
mov
inc
xorb
test
cmp
fs
mov
and
movsb
push
adc
xor
mov
xorb
fisttpl
std
leave
arpl
in
rcll
cmp
add
loop
fucomi
mov
lock
mov
fnstsw
fwait
mov
mov
dec
scas
paddw
push
ljmp
addl
int3
leave
dec
fucom
leave
insl
shlb
mov
repz
js
adc
outsl
cld
in
and
test
mov
adc
inc
pop
cmp
sbb
popf
es
lods
call
out
test
les
xchg
or
ja
pop
lret
negl
add
sbbl
push
pop
pusha
and
mov
js
fs
mov
int3
cld
cwtl
xchg
add
lret
in
scas
ficomps
and
jne
movlps
pop
ss
or
rcl
xor
out
pop
sub
mov
js
xchg
cmpsl
loopne
fadds
sub
pop
push
jns
dec
xchg
lock
dec
das
daa
and
xor
lea
lret
rolb
mov
push
ret
mov
push
lds
mov
mov
int3
and
iret
inc
sub
bound
test
pusha
ds
pusha
incb
inc
push
ds
or
dec
jb
cmp
popl
les
pop
out
jecxz
push
xchg
sbb
aam
sub
mov
out
ret
scas
call
test
and
add
js
mov
aaa
je
inc
fstpt
aam
xchg
jle
push
mov
outsl
jl
sarl
jae
inc
mov
push
or
dec
les
push
ja
inc
lcall
stc
and
jp
xchg
push
or
popa
mov
lret
cld
inc
je
lock
in
movsb
iret
cmp
add
shl
in
icebp
data16
pusha
btr
in
xchg
or
mov
fildl
ficompl
sbb
inc
popa
jbe
and
mov
movl
leave
dec
fs
mov
les
aad
in
lret
cli
mov
mov
sub
scas
cltd
pop
outsl
add
movsb
adc
sbb
sbb
mov
jb
sub
mov
or
shll
pop
xchg
cmp
out
sbb
mov
pop
out
and
xchg
jns
or
addr16
sarl
and
stos
icebp
je
and
cmpsl
fwait
xchg
cltd
push
cli
lods
fildl
subb
sbb
fs
cmp
mov
jg
movsb
scas
imul
xchg
inc
sti
jb
jo
leave
jecxz
addr16
push
inc
ret
mov
sbb
cs
fcmovnb
in
mov
inc
mov
test
adc
mov
push
adc
mov
pop
pop
xor
addb
lods
mov
pop
jecxz
cmpsb
test
xor
sti
and
xlat
lea
sbb
out
and
inc
cmp
out
inc
test
rolb
adc
cmp
fucomi
test
jns
ljmp
or
xor
sbb
jl
movsl
sbbl
insb
in
push
movsb
mov
in
ja
imul
fstpt
loop
sbb
pop
loop
outsb
jmp
dec
repz
dec
bound
out
jb
movsb
ret
shrb
and
jb
push
and
stos
push
jbe
inc
mov
ljmp
pop
js
jbe
sbb
push
lods
jne
mov
sub
jnp
addr16
and
inc
mov
xor
ficomps
push
pop
sbb
outsl
pusha
push
ror
gs
cmp
or
cld
add
scas
sub
mov
mov
js
int
mov
add
pop
mov
mov
repnz
std
sub
outsl
inc
xor
je,pn
xor
imul
jl
shll
fisubrs
sti
adc
and
mov
loop
call
push
jl
shlb
loope
xor
stc
xor
fisttps
out
pop
sbb
mov
mov
les
mov
iret
jb
jmp
mov
pop
andl
xchg
pop
repnz
xor
add
mov
popf
or
jge
xor
stos
jg
ja
test
fucom
cmp
or
push
mov
adc
mov
ljmp
jg
mov
inc
movsb
aad
mov
out
icebp
push
push
push
jp
test
jbe
mov
push
mov
push
adc
pusha
inc
lcall
xchg
mov
mov
mov
ret
fisttps
push
cmp
xchg
scas
cmp
push
imul
sahf
das
popf
fs
xor
insb
and
scas
adc
mov
gs
and
les
push
mov
fmulp
pop
push
mov
out
push
movsl
xor
stos
call
mov
mov
adc
leave
pop
or
xchg
icebp
loop
aad
lods
mov
fistpll
push
data16
je
nop
pop
lods
xchg
nop
testl
cwtl
adc
cmc
xor
jmp
and
out
scas
cltd
and
adc
imul
bound
cmp
or
mov
pcmpeqb
and
idivb
jb
arpl
mov
push
stos
and
shrb
xor
loopne
xchg
inc
push
add
repz
int3
mov
ja
mov
or
ficoms
fwait
shr
inc
stos
mov
jae
jae
add
int3
jo
mov
not
aaa
inc
pusha
int3
fwait
sbb
sub
inc
out
insl
aas
mov
jecxz
icebp
add
mov
push
xchg
test
shl
pop
cmpl
rol
int
shr
push
jecxz
jnp
cmc
cwtl
sub
adc
xchg
xchg
repnz
xor
notb
add
rorl
xchg
aaa
mov
fildll
adc
addr16
fcomps
mov
xchg
dec
mov
sahf
loop
push
push
jmp
enter
add
xchg
xor
sbb
lret
adc
mov
mov
int3
sub
out
fwait
jmp
or
dec
mov
insl
mov
fs
lds
push
insb
addl
sbb
out
adc
cmp
das
sti
push
jnp
outsl
scas
adc
fidivs
pop
and
fdiv
gs
aaa
ja
sti
mov
and
outsb
dec
sbb
aad
int3
push
mov
push
jle
adc
cmp
ret
sub
add
mov
jno
mov
mov
test
lret
or
xor
les
jbe
xor
imul
mov
mov
aas
loope
aad
mov
inc
jbe
shr
nop
add
out
push
mov
out
xorl
lock
popa
add
flds
jg
push
jge
frstor
push
mov
fbstp
xorb
push
adcl
pop
fisttpll
mov
sbb
pop
bound
shll
lret
es
popf
pop
push
jecxz
inc
clc
aad
dec
jne
push
fwait
loope
addr16
pop
dec
adc
jp
aaa
fcoml
in
pop
aad
cwtl
inc
dec
cltd
shl
push
xor
cs
mov
push
jmp
mov
jnp
cmp
push
inc
and
mov
dec
nop
dec
jne
in
mov
ss
out
inc
mov
dec
push
jg
fadds
mov
int
jge
inc
jnp
xchg
ret
push
mov
add
aaa
jp
xchg
or
cmp
inc
loopne
xchg
repz
fcompl
lods
mov
mov
xchg
push
pop
je
push
sbb
int
and
adc
leave
jmp
and
mov
dec
aad
sahf
iret
xchg
or
pop
mov
cmp
fadds
cwtl
out
xchg
mov
cmpl
mov
pop
sbbl
mov
int
movl
inc
mov
inc
mov
and
fisubs
aaa
adc
push
jnp
lret
and
lahf
add
aad
stos
xchg
int3
adc
sbb
ss
adc
mov
mov
push
fcmovnu
fists
aaa
adc
mov
and
mov
jbe
sub
or
jns
nop
dec
and
filds
inc
cmp
xor
lods
mov
push
cmpsl
outsl
in
xlat
mov
test
repz
mov
jo
leave
sbb
out
lret
js
in
cmc
or
mov
xor
fdivs
jbe
outsb
pop
jg
iret
call
dec
or
dec
mov
shrl
push
paddsb
mov
nop
push
sub
cltd
out
aaa
leave
fmul
and
mov
mov
xchg
and
imul
sahf
out
xchg
dec
data16
mov
xor
add
xor
sahf
imul
and
mov
xor
jmp
push
clc
rcrb
clc
pop
cwtl
daa
fildl
in
popa
xor
fdivrs
aam
jecxz
popf
sub
fsts
jae
sub
and
cmpsb
outsb
test
sub
cmpsl
adc
pop
mov
cli
inc
xorb
fistpll
sub
mov
mov
enter
ja
sub
sbb
jno
out
daa
cltd
inc
in
stos
enter
pushl
mov
fcoms
std
repz
nop
call
enter
mov
in
fdivrl
cmp
je
adc
mov
popw
insl
arpl
stos
es
and
mov
cmp
lods
out
mov
inc
lret
mov
mov
notl
lret
sub
push
shlb
mov
jle
jl
mov
sbb
scas
or
pop
in
sahf
sub
add
fisttps
cmp
inc
mov
outsl
push
out
mov
lahf
repz
ror
jle
shll
adc
push
mov
imul
sub
loop
mov
sub
fiadds
out
sbb
push
lret
mov
xor
xor
xchg
imul
jae
ret
out
inc
jg
mov
sub
mov
les
push
or
mov
fs
or
scas
mov
mov
mov
outsb
lods
shll
fidivrs
add
cmp
orb
adc
xor
sbb
mov
fdiv
mov
sti
fisubl
adc
mov
mov
jg
inc
test
push
insb
cmp
iret
add
jnp
insb
dec
notb
repnz
pop
inc
fidivs
ss
xchg
int3
es
addl
cmp
adc
inc
add
push
int3
adc
adc
addr16
add
jno
shl
out
sub
into
cld
test
rolb
ss
jbe
fcmovnb
pusha
mov
jp
outsl
jns
push
sub
lahf
adc
mov
in
jle
aad
es
xchg
xchg
sbb
fildl
and
aas
push
mov
loope
int
pop
popf
mov
mov
das
out
cmp
orl
clc
jg
in
mov
fsubl
mov
outsb
adc
pop
jnp
mov
lahf
sub
insl
adc
rcr
pop
mov
push
imul
dec
mov
jmp
add
pop
shl
sbb
mov
mov
rcr
or
jg
sahf
add
dec
ja
scas
insb
pop
pop
repnz
cmp
sbb
fs
imul
imul
inc
cmc
mov
daa
out
xchg
inc
rolb
negb
lea
mov
cli
sbb
int
mov
sti
lds
andb
es
loop
movsl
inc
jp
stos
je
push
fwait
test
push
lcall
inc
mov
xor
dec
inc
fildl
rcrl
in
add
shl
mov
rcrl
out
ja
in
sub
mov
fsubrs
jb
clc
stos
lcall
xchg
cltd
or
rorb
popf
mov
shl
ss
push
nop
or
push
sub
inc
mov
jg
ret
sub
xor
shll
cmpsl
imul
fisubs
jp
mov
mov
push
add
sbb
lret
sbb
rol
rcll
cltd
mov
ja
mov
jns
out
scas
je
xchg
sahf
daa
mov
or
or
outsl
test
ss
sub
xchg
fstl
lods
insb
mov
aas
ss
aaa
gs
mov
daa
sbb
rorb
mov
fdiv
addr16
andl
jo
cld
xchg
scas
mov
scas
inc
pop
mov
xor
add
loopne
mov
popf
stos
mov
outsb
in
mov
xchg
pop
xchg
xchg
sub
mov
arpl
xor
lods
lods
pop
cld
into
mov
jl
jg
xchg
lret
mov
in
loop
adcl
or
pop
sbb
mov
ret
jne
inc
or
jle
ffreep
lds
and
and
mov
push
sub
cld
imul
ret
mov
aad
pop
jns
pop
jge
mov
cs
lds
xchg
inc
test
xchg
xor
add
inc
lds
mov
sub
mov
arpl
iret
add
cs
push
stos
out
jbe
popa
pop
adc
imul
xor
ret
sub
inc
push
lret
dec
xchg
mov
bound
loop
loopne
jl
es
arpl
mov
test
cmc
movsb
popf
cmp
adc
xor
cmp
pop
pop
in
sbb
inc
mov
movsb
ret
dec
xchg
ljmp
fnsave
sbb
xchg
ret
inc
fidivl
dec
imul
mov
mov
xor
and
out
frstor
movsl
pushf
scas
sbb
arpl
popf
loopne
adc
aam
mov
icebp
cmpsb
movsb
inc
in
scas
movsb
push
sub
sub
inc
push
pop
add
pop
pop
sbb
arpl
cmpsl
pusha
dec
in
fwait
shlb
repnz
xor
lock
insl
ror
or
into
add
outsb
das
outsl
xor
lods
lods
inc
subb
xchg
imul
in
add
jnp
ja
enter
jle
das
into
pushf
lret
mov
jg
iret
lret
shll
fstpl
push
fcomps
cmpsl
add
sbb
add
cwtl
hlt
movsb
mov
sbb
scas
xchg
fistl
mov
inc
into
add
daa
psadbw
cli
xor
std
jl
inc
cltd
push
push
in
out
hlt
cltd
cmpsb
adc
bound
and
jnp
imul
sub
push
push
movsb
jge
aad
cs
fs
lods
in
and
adc
repz
xor
push
jae
fildl
ds
jbe
repnz
int3
and
ret
cmpsl
shl
xchg
nop
push
pop
xlat
jo
clc
xchg
mov
cmpsb
stos
dec
aad
mov
add
outsb
scas
int
in
hlt
scas
sub
sub
sbb
incb
mov
push
mov
jmp
adc
jg
outsl
and
sahf
cmp
mov
cmp
jge
cmpsb
pop
adc
pop
cmpsb
xrelease
lahf
fwait
int
out
int3
cmp
loope
ficoml
movsl
push
xor
mov
inc
jno
sub
adc
mov
test
pop
and
cmpsl
es
shll
cmpsl
sahf
xchg
push
fstpl
push
dec
mov
stc
push
mov
mov
in
pop
in
jbe
xlat
xchg
fldenv
sub
or
add
movsl
loope
repz
mov
jnp
cmp
mov
iret
mov
gs
jp
popa
outsl
out
pop
leave
pop
sub
xchg
mov
mov
mov
xchg
push
pop
sub
dec
int
cltd
or
int3
icebp
in
cmp
lds
or
pop
push
sbb
cmp
sbb
cmp
movsl
ljmp
jmp
icebp
mov
mov
adc
and
mov
jl
cmp
fucomip
cmp
aas
out
call
ret
sub
inc
loop
mov
dec
das
icebp
push
cmp
mov
loopne
xchg
dec
in
xor
in
movsb
cmp
insl
inc
mov
rclb
xchg
mov
cltd
and
inc
sub
test
cmp
mov
xor
inc
js
cmc
push
xor
ret
pop
jle
test
les
test
adc
sbb
in
add
mov
push
sbb
pop
cmp
imul
mov
jae
mov
sbb
push
movsl
in
inc
inc
vpslld
outsb
mov
adcl
flds
and
push
mov
inc
pop
rcl
in
fsubrs
add
xor
rcll
rol
ret
fldl
repz
push
sbb
cwtl
mov
mov
std
add
idivb
or
mov
xchg
mov
popa
lock
hlt
xor
test
mov
dec
cli
lret
sarb
sahf
pop
fbstp
loope
mov
les
dec
sbb
lret
rcr
cmpsb
gs
cmc
repz
add
dec
scas
das
sub
inc
dec
jge
loop
fs
xchg
and
repz
es
mov
xchg
add
int
aad
mulb
insl
cmp
fs
shlb
loopne
xor
mov
mov
dec
orb
popa
cwtl
push
adc
or
fists
adc
lods
mov
cltd
sub
int
leave
cs
test
rcr
imulb
dec
popf
xchg
enter
ss
jae
xchg
mov
sbb
out
ljmp
add
fs
icebp
cmp
xor
nop
test
push
or
adc
push
std
idivb
std
xor
pop
adc
and
add
sahf
pop
sbb
lods
iret
mov
inc
loopne
aas
enter
sub
in
pop
repnz
das
cmp
mov
or
mov
mov
dec
inc
loopne
lods
push
pop
cmp
out
leave
in
or
and
dec
push
rcll
adc
mov
daa
ja
fldl
dec
ss
ja
jecxz
faddl
or
jg
shll
in
clc
adc
xor
inc
dec
ja
add
xor
cmp
scas
inc
or
mov
jb
xchg
fsubs
jo
xchg
sbb
push
adc
in
jno
inc
sti
in
push
cmc
test
pop
mov
imul
inc
xchg
dec
in
sbb
arpl
out
aas
mov
xchg
icebp
jno
rcrb
idivb
shrl
test
adc
enter
insl
nop
mov
je
inc
jp
mov
lods
adc
ljmp
adc
push
ja
xchg
pop
in
call
push
ss
call
dec
pop
bound
jp
addb
mov
js
aam
inc
dec
sbb
push
inc
fwait
xchg
dec
jns
jb
scas
cmpb
sahf
mov
leave
aam
and
sub
aaa
xchg
mov
cmp
sub
mov
mov
dec
pop
pop
dec
sbb
jb
out
sti
mov
add
xor
fisttps
adc
sti
out
outsl
out
sub
imul
mov
xchg
insl
lea
push
test
inc
mov
dec
divb
push
sub
test
mov
push
or
stos
clc
outsl
sti
repnz
movsl
mov
sub
xor
jl
mov
push
aaa
add
pop
or
mov
fldt
clc
or
lea
frstor
fcompl
ljmp
xchg
jge
xchg
pop
xchg
stos
mov
lret
push
out
sbb
cmp
mov
jle
xchg
inc
jmp
pop
cs
xor
cmp
cwtl
xchg
arpl
mov
ljmp
xchg
cmpsb
xchg
mov
call
sbb
gs
dec
cmp
mov
jecxz
loope
adc
mov
mov
pop
or
dec
negb
adc
xor
push
stc
inc
sbbb
aaa
lods
iret
pop
cmpsl
sbb
mov
outsl
out
addr16
push
fldcw
sub
inc
inc
in
sbb
cwtl
imul
cwtl
push
stos
jecxz
scas
mov
scas
jle
xchg
mov
in
sbb
adc
or
fcompl
loope
jb
cld
jbe
jp
and
jmp
in
test
jecxz
push
mov
mov
je
movl
inc
xor
xchg
shrb
jno
sahf
dec
ds
ret
jg
call
jg
cmp
mov
roll
js
mov
aam
hlt
aaa
push
mov
cli
int
shll
std
scas
ss
orl
push
pop
mov
jg
in
mov
movsb
and
xor
lahf
pop
ret
cmp
xchg
clc
cmp
sub
mov
mov
ficomps
call
cmp
xchg
out
out
jle
imul
div
adc
push
pop
pop
mov
outsb
and
lret
cwtl
cmp
out
inc
cld
lock
push
or
xor
jle
inc
lds
pop
scas
mov
xchg
sub
xlat
sub
mov
pusha
and
and
dec
or
mulb
mov
in
rclb
in
mov
xor
or
stos
repnz
sub
aaa
imul
addr16
push
out
mov
push
outsb
xor
mov
mov
jp
in
mov
ja
lahf
jmp
mov
repz
mov
test
mov
push
or
je
adc
outsb
mov
add
dec
cmp
cmp
outsl
sub
repnz
shll
ss
scas
push
mov
aam
xor
inc
adc
mov
xchg
shl
fistl
movsb
push
xor
adc
mov
fwait
lods
sbb
mov
imul
adc
iret
movsl
aaa
rcl
aaa
insb
xlat
jge
rorl
push
cmp
into
lret
lcall
jnp
lret
xchg
ret
loopne
gs
cmp
jl
push
sbb
xlat
call
das
dec
mov
sub
jo
sbb
pushf
scas
xchg
push
mov
jns
jbe
cmp
add
mov
inc
ja
pushf
out
rolb
jne
js
mov
lret
icebp
in
mov
mov
mov
sub
int
adc
pop
dec
xor
cmc
andl
mov
les
pop
push
xchg
adc
or
cmpl
into
mov
cmp
adc
mov
mov
lds
arpl
xor
mov
xchg
and
jbe
xor
fistpll
test
mov
add
mov
xchg
jbe
hlt
aam
pop
lcall
fimull
xor
push
enter
or
jp
mov
scas
pushl
sbb
aad
call
push
sbbb
pusha
test
adc
mov
ret
sbbl
shlb
xor
roll
loop
clc
adc
lock
bound
mov
in
hlt
sub
inc
cmp
mov
test
jl
cmc
or
ficoms
dec
imul
adc
push
xchg
lds
sub
mov
outsb
mov
push
xchg
jecxz
daa
repz
xor
popa
mov
xchg
and
lods
lods
out
cli
or
push
lret
cmc
lahf
add
mov
jmp
movl
mov
mov
inc
rolb
xchg
insl
xor
sbb
cmp
into
dec
test
mov
out
sbb
je
lcall
xor
lds
push
mov
jne
lock
lcall
xchg
or
gs
dec
or
int3
outsb
jne
cvtps2pd
into
cmpsb
dec
mov
dec
fistpll
push
mov
xlat
cmp
jae
or
rolb
imul
mov
mov
lods
arpl
xchg
dec
xor
stos
into
push
jo
rcll
mov
mov
cmpsb
lods
cmpsl
cmp
sbb
aad
xor
fsubr
jne
xor
adc
in
mov
pop
test
addr16
jg
adc
fnstcw
pop
pop
cmp
jecxz
idivb
cwtl
mov
mov
ljmp
outsb
xor
mov
jecxz
lcall
pop
mov
pop
les
xchg
testb
nop
push
jne
mov
ss
hlt
adc
ds
and
adc
addr16
fucomp
jg
aam
sub
push
loop
aas
and
aas
mov
stos
mov
adc
notb
xchg
dec
jae
mov
inc
in
out
ss
lcall
inc
sub
sbbl
mov
mov
lds
popf
fistl
dec
mov
pop
jg
mov
and
mov
movsb
sub
test
cmp
dec
sub
cwtl
imul
mov
dec
pop
mov
pop
testb
icebp
mov
fucom
out
cmpsb
cmp
jle
pushf
loop
push
push
and
jg
in
sti
fsts
mov
sub
inc
cwtl
push
es
cmp
outsl
call
subl
fmul
movsl
jo
hlt
dec
cmpsl
add
imul
and
xor
icebp
data16
pop
lods
ljmp
dec
in
adc
fwait
xchg
jne
lea
sbb
fbld
fcoms
xor
fcomip
jns
dec
xor
push
sbb
mov
and
inc
and
and
aam
arpl
insl
jae
clc
adc
ljmp
aad
push
xor
mov
lret
and
aam
int
fisubl
in
inc
lods
adc
lret
mov
push
xchg
rclb
push
pop
incl
insl
mov
pop
movsl
push
push
int
xor
pop
cld
and
pop
lock
adc
xchg
mov
push
dec
cmp
jge
js
enter
add
mov
ret
ljmp
xchg
or
and
xor
push
jmp
test
mov
jecxz
jmp
into
and
xor
mov
sbb
scas
or
cmp
push
mov
add
repz
test
adc
lds
jmp
mov
fs
aaa
push
popf
int3
enter
mov
out
pop
push
loope
and
fucomi
scas
orl
lret
mov
bound
xchg
pop
mov
repnz
push
sub
sbb
add
test
xchg
and
xor
cs
dec
mov
pop
test
cmpsl
jo
pop
bnd
sbb
cmp
mov
adc
xor
inc
loopne
mov
jno
loopne
mov
imul
imul
lcall
push
dec
and
cwtl
cltd
xchg
jle
jbe
sbb
rclb
or
aaa
mov
popa
loopne
jno
aam
popf
mov
imul
mov
jae
dec
nop
sahf
push
mov
xlat
aas
rolb
jno
ss
push
insl
lea
enter
in
sbb
adc
xchg
lcall
adc
adc
bound
and
sub
bound
in
pusha
std
in
out
add
out
mov
popa
cwtl
jle
sub
out
clc
incl
and
mov
push
jnp
fcmovne
and
andl
das
mov
ds
les
mov
lret
lea
jno
fcomip
negl
pop
jp
movsl
aaa
popa
mov
jecxz
repnz
adc
movsl
push
fiadds
int3
or
imul
loope
xor
test
sahf
shr
gs
shl
add
inc
mov
sub
mull
arpl
aam
out
push
mov
imul
jecxz
fldcw
outsl
mov
stos
mov
aad
jno
cmp
add
cwtl
lds
insb
xchg
std
inc
sub
sbb
xchg
dec
icebp
and
pushf
dec
out
pop
sbb
pushf
xorb
push
lahf
andb
setl
lods
test
and
mov
rcr
stc
cmp
repnz
fstps
or
jbe
aaa
jl
xlat
in
jb
push
push
cmpsb
cli
mov
jge,pn
jl
mov
inc
adc
jnp
fbstp
pushf
sbb
mov
add
hlt
sbb
fwait
out
dec
or
or
outsb
repz
cmp
div
ljmp
iret
lcall
sub
cmc
mov
aam
stos
int3
xchg
cmpsl
mov
jle
popf
int3
gs
inc
push
mov
xchg
inc
pusha
xor
pop
add
out
repnz
lahf
int3
fcoms
jp
cmp
sbb
push
xor
iret
out
xor
push
pop
aad
enter
int
xor
in
fdivl
aaa
mov
mov
or
pop
cs
int3
mov
and
dec
test
adc
push
cmc
cs
fdivl
fidivs
mov
sar
fisttps
cmp
into
clc
rcrb
imul
rorl
sahf
cmpsb
ja
inc
mov
loop
and
cmpsb
sbb
out
or
cltd
rcr
xchg
xor
jge
jecxz
outsb
sysenter
shll
sbb
mov
out
cmovl
shlb
aam
xor
insb
add
jge
jns
inc
xchg
mov
fisubrl
lds
xchg
pop
daa
cmp
loopne
in
add
js
sbb
xchg
inc
jp
es
imul
add
xchg
pusha
cli
insl
aas
rcr
mov
enter
jl
les
pusha
fnstcw
cwtl
pushf
xchg
add
mov
mov
pushl
movsb
scas
mov
lea
cmp
icebp
push
outsl
jge
leave
sbb
xorb
fisubrs
jecxz,pt
call
push
aaa
mov
ljmp
add
ret
and
mov
sarl
mov
divb
and
xor
xor
data16
push
sub
cmc
mov
popa
sub
jg
sbb
aas
add
sbb
or
mov
push
outsb
clc
idiv
data16
jae,pn
xor
adc
int
inc
adc
addb
mov
inc
rcl
repz
popa
enter
push
mov
mov
jge
and
hlt
int
lds
adc
sub
ss
add
jle
in
sbb
cmp
ret
outsl
aam
push
sub
xor
pand
cltd
ljmp
mov
jp
xlat
or
lock
fs
movsl
jne
sub
dec
jmp
xor
cmp
cmp
xor
daa
adc
insb
je
orb
mov
mov
xchg
adc
hlt
and
int3
cld
es
rcl
out
int
adc
or
jmp
mov
gs
xchg
cmp
cmpsb
shlb
mov
cld
cli
sub
out
pop
cmp
add
inc
sahf
test
rcll
or
mov
xor
and
jne
mov
sbb
xchg
lods
ds
aam
movsb
jne
mov
jo
inc
mov
gs
cs
fidivrl
mov
add
xchg
sbb
stos
or
dec
add
sbb
ret
out
mov
fs
into
mov
ds
dec
jbe
js
jo
xchg
inc
jge
sarb
jae
mov
std
loopne
push
xchg
cmp
and
cmp
adc
xchg
jp
jnp
ljmp
rol
pop
lret
inc
add
jb
xlat
mov
dec
and
imul
add
out
mov
movsl
mov
or
or
inc
in
cs
jne
inc
mov
mov
dec
mov
cmp
cmp
inc
jnp
adc
movsb
dec
mov
inc
inc
popf
mov
int
adc
sbb
ret
es
ds
mov
int3
enter
popa
sbb
loope
ja
jnp
add
xchg
gs
sub
cmp
jle
push
les
leave
and
mov
addl
scas
adc
cmp
lret
pop
imul
mov
xor
lret
out
leave
or
xor
lods
movsb
sub
iret
movsb
mov
cltd
out
sahf
imul
daa
inc
pop
adc
dec
mov
je
xor
test
sbb
push
push
ss
out
push
mov
inc
pop
xor
sbb
mov
loop
xchg
jecxz
ret
fisttps
jecxz
fisubrl
stos
aam
mov
pop
in
push
mov
call
push
lahf
xchg
add
stos
in
xchg
loopne
cld
lret
mov
push
xchg
fadds
ljmp
pop
mov
or
mov
ja
mov
push
enter
mov
aam
or
inc
lods
roll
mov
cli
fwait
xchg
xor
push
fsub
fistps
imul
cmpsb
repz
call
xor
push
mov
iret
pop
test
inc
or
add
filds
cmpsb
data16
push
enter
xchg
dec
mov
cmp
mov
out
inc
jg
cltd
cmp
jo
mov
mov
jnp
xlat
cmpxchg
idivl
mov
and
sbb
mov
mov
int3
push
pop
iret
mov
inc
push
xchg
sbb
mov
xchg
outsb
movsl
adc
push
xor
mov
lea
popa
mov
dec
enter
hlt
mov
fsubr
ficoms
lods
xchg
mov
or
rol
cmpsb
test
xchg
mov
cli
iret
and
mov
add
into
mov
cmp
lcall
push
xchg
icebp
negb
scas
or
jl
stc
test
outsl
in
adc
push
push
fcomp
stos
cwtl
test
and
dec
mov
sti
cmpsb
ds
adc
cmp
xor
int
sbb
pop
out
and
scas
xchg
mov
inc
mov
sub
mov
sbb
cmp
mov
mov
lret
mov
push
xorl
cmp
adc
lods
add
jo
mov
cmp
mov
pop
out
aad
scas
imul
fcomi
add
cmc
nop
lods
imul
mov
test
jge
adc
or
jmp
mov
shl
sbb
leave
cmp
test
hlt
or
jecxz
fs
xchg
add
jno
cmp
mov
mov
inc
mov
mov
sbb
jo
xlat
inc
xor
es
stos
push
test
pop
xchg
fisubrs
repz
push
out
lds
ss
cwtl
shlb
rep
or
into
or
aaa
and
hlt
jl
lock
inc
push
adc
xor
dec
and
movsl
xor
mov
int3
xchg
les
xchg
push
jns
test
push
notb
push
sbb
lea
xchg
loopne
jle
idivl
arpl
in
pop
or
and
mov
adc
and
ss
icebp
mov
je
xchg
fisubrs
test
dec
xchg
push
push
pop
aaa
loop
or
or
add
leave
jecxz
cwtl
shr
sub
fcmovb
cmp
mov
add
aaa
mov
mov
orl
inc
and
add
xchg
lock
jns
or
mov
mov
je
in
stos
dec
out
jae
shl
or
mov
fnstenv
mov
lds
mov
mov
scas
lds
and
outsl
dec
stos
jo
xchg
dec
aad
es
lds
add
xchg
mov
xchg
adc
orb
dec
cmpsb
cltd
ret
loope
into
mov
imul
push
mov
mov
jg
ds
pop
push
aas
outsb
les
loop
adc
cmp
inc
fsubl
adc
jns
movntq
out
lea
jae
js
mov
mov
insl
mov
adc
fsubp
fidivl
into
loop
sub
pop
mov
imul
and
jmp
fisttps
cmpb
aam
gs
cmc
into
sbb
jo
jl
rcrl
add
mov
lock
add
sbb
in
cli
sub
aad
cmp
pop
mov
cltd
push
jne
push
adc
pop
cltd
in
call
fdivs
mov
cmc
xor
arpl
call
sbb
clc
daa
or
test
shrb
and
mov
xchg
mov
push
in
stc
mov
out
mov
int
inc
mov
inc
addr16
mov
jl
xor
mov
pop
push
mov
sbb
daa
mov
clc
sbb
mov
sbb
imul
addl
movsb
inc
xchg
jecxz
lods
xor
jo
and
sub
adc
adc
dec
fbstp
add
bound
inc
mov
out
jns
push
icebp
cmp
outsb
jmp
ret
mov
jmp
mov
adc
addr16
xor
push
mov
xchg
pop
sub
cltd
test
shrl
inc
xchg
sbbl
loopne
mov
sbb
ds
enter
fbld
rcrl
out
mov
jmp
in
mov
lahf
lret
ficompl
xor
cmp
jbe
lahf
inc
cmp
xchg
push
js
rcrl
iret
add
xor
dec
in
and
adc
inc
cmp
int
jecxz
mov
shlb
gs
insb
movsb
xorl
rolb
pop
loopne
ja
mov
mull
pop
xchg
cmp
ret
pop
inc
lret
push
stos
pop
fdivrs
bound
push
mov
xor
leave
ss
xor
lret
lcall
mov
stos
push
mov
pop
lret
or
int3
hlt
ds
arpl
jge
insl
in
int
dec
pop
negb
mov
add
ret
subl
cmp
adc
cmp
into
pop
xor
iret
jmp
outsl
jmp
mov
cmc
loop
fxch
lea
repnz
xchg
sub
mov
popf
inc
cltd
std
and
cmp
int
jge
int3
sub
xor
in
lret
inc
andl
call
rcrl
repnz
xor
push
mov
popa
adc
aaa
addr16
adc
cmpsb
dec
js
stos
xchg
insb
jmp
repnz
push
cmc
jl
mov
je
inc
xchg
mov
ja
faddl
mov
fwait
jo
shrb
ficoms
inc
mov
xchg
or
into
mov
jge
mov
loope
sahf
stos
jb
std
sbb
insb
pop
xlat
fdivr
rcl
xor
push
push
rcrl
push
cmp
sub
aam
fadd
jg
xor
out
dec
cltd
mov
xor
je
iret
call
fimull
test
sbb
sahf
cmpsl
and
jno
cwtl
adc
insb
popf
pop
pop
call
pop
in
lret
sbb
insb
cmp
pop
push
in
fidivrl
rcll
hlt
sbb
mov
cld
mov
add
ljmp
leave
std
icebp
fistpl
cmpsb
aaa
xchg
insb
test
inc
lcall
cmp
fsts
pop
and
add
cmp
loop
sbb
mov
xchg
out
push
mov
sbb
cld
mov
js
enter
pop
icebp
xchg
xchg
or
mov
inc
mov
sub
mov
fcoml
xchg
pop
adcl
push
add
xor
out
cmpsb
int
insl
jnp
add
ret
loopne
fdivs
mov
mov
cmp
data16
bound
cmpsl
lea
test
xor
sbb
inc
dec
inc
in
lret
push
test
in
cmpsl
repnz
dec
pop
out
imul
and
out
lock
test
add
mov
mov
push
push
inc
das
push
out
addr16
popf
test
mov
cmc
enter
sub
dec
sub
aas
stos
or
lahf
ret
push
loopne
fdivrs
aam
and
call
jb
mov
je
imul
push
and
mov
shr
add
mov
lods
aam
cmp
push
jbe
mov
leave
push
loop
xchg
addr16
dec
cmc
inc
stc
fildl
mov
pop
pop
push
sbb
out
mov
sub
push
aam
popa
outsl
stc
and
mov
xchg
les
enter
popa
and
add
lahf
lret
push
push
inc
jecxz
and
xor
mov
loopne
nop
es
mov
mov
mov
sti
sub
int
adc
mov
in
jae
fisttps
dec
sbb
or
pop
pop
out
jmp
fucomip
out
fnop
pop
loopne
ljmp
or
repnz
aaa
jle
xchg
insl
xor
icebp
lea
inc
jge
push
aas
out
gs
test
gs
sbb
push
cmpsb
dec
insl
pop
xchg
in
aad
loopne
int3
mov
gs
dec
clc
lret
dec
xor
pop
fldenv
xchg
mov
roll
inc
in
sbb
sahf
cmc
push
ds
mov
add
cmp
loop
sub
xchg
mov
ficompl
jecxz
lds
mov
pusha
mov
test
and
ret
sahf
pop
sub
loope
inc
adc
out
mov
fs
into
dec
in
add
push
push
addl
sbb
adc
call
ljmp
inc
std
sti
mov
icebp
pop
test
out
cwtl
mov
mov
out
push
cmp
xchg
pop
fwait
incb
xor
inc
pop
addl
lcall
mov
jb
clc
sbb
cli
sbb
bound
adc
and
lahf
sbb
insb
addr16
jnp
xor
cmp
int3
dec
mov
dec
xchg
fs
mov
iret
adc
jnp
fldl2e
pop
int
hlt
and
pop
fisubrl
aas
addr16
sub
dec
xor
sarl
push
in
mov
jnp
xchg
in
test
rcl
pop
loope
xor
pop
add
imul
and
les
xchg
stos
js
popf
and
gs
lds
int3
adc
push
and
popa
dec
inc
test
invd
cmp
sub
push
fcmovb
sbb
inc
inc
ja
xor
pop
popf
dec
push
dec
std
shrl
ljmp
sahf
fistps
adc
in
insl
out
sbb
outsl
jb
gs
int
fs
sub
adc
sbb
cmp
sub
push
mov
cltd
add
test
inc
adc
inc
pop
adc
or
and
clc
lret
xlat
sbb
cwtl
hlt
cmp
and
orl
repnz
iret
leave
test
push
xor
lock
sar
les
test
push
mov
shrl
mov
add
jae
shr
push
jnp
sub
repz
in
jmp
ljmp
dec
xchg
inc
dec
pusha
movsl
jae
inc
repnz
mov
mov
add
mov
int
push
mov
lea
repz
and
add
mov
add
add
sbb
mov
mov
lock
cmp
inc
push
jb
mov
add
mov
pop
enter
out
cmpsl
js
cmp
lods
stos
out
jns
cmp
mov
dec
add
fsts
and
pop
mov
or
pop
pop
push
fdecstp
inc
sbb
fwait
inc
fisubs
sub
scas
sbb
push
mov
pop
and
add
or
jl
hlt
mov
rolb
ret
mov
add
mov
popa
pop
push
xor
mov
cli
mov
mov
jb
cmp
xlat
jbe
xor
cmc
into
or
insl
pop
xchg
addr16
movsb
jns
outsl
jg
mov
out
ljmp
loope
icebp
outsb
repz
cmp
sbb
sub
xor
nop
xor
int
mov
mov
push
mov
mov
jl
mov
dec
icebp
loope
jmp
jnp
mov
cli
mov
cmpsl
xor
test
pushl
out
and
fsubrs
sbb
gs
sbbb
ret
add
pop
hlt
mov
dec
cmp
rcr
roll
adc
xchg
fcmovu
lcall
ljmp
mov
and
subl
cmpsb
orb
cmp
lds
jb
cmp
out
dec
cmp
xor
push
out
xchg
dec
out
loopne
cmp
clc
stc
bound
mov
mov
mov
sub
mov
adc
orl
dec
mov
and
cmp
or
nop
dec
iret
and
std
sahf
push
popa
leave
push
test
aam
pop
mov
xor
decb
movsb
out
or
fcomip
fs
mov
aad
repz
xchg
xchg
mov
leave
lock
or
mov
mov
filds
dec
inc
lcall
mov
mov
add
mov
adc
pop
std
int
clc
inc
xchg
cltd
mull
dec
xor
ss
mov
and
mov
into
bound
adc
aas
sbb
gs
add
scas
aad
inc
cwtl
popf
repnz
jno
pop
mov
pop
repnz
mov
add
or
xrelease
dec
jl
int3
scas
add
add
outsl
lds
repnz
out
stc
sbb
in
and
lret
sahf
aas
addl
xor
inc
xchg
cs
mov
cmp
test
repz
mov
pushf
sbb
iret
bound
out
test
jg
aam
ds
test
lds
hlt
push
pop
jne
sbb
stc
and
pop
jmp
mov
scas
push
sbb
sbb
xor
push
sub
aad
sub
test
xchg
mov
push
ja
mov
out
fwait
in
xchg
lock
pushf
fs
loopne
es
pop
popf
jne
cs
mov
loope
aaa
fcmovnbe
imul
cmpsb
addr16
jbe
aad
clc
cmpsl
out
rol
lret
or
nop
xchg
pop
dec
scas
mov
les
lds
or
inc
pop
xor
lret
out
and
sarb
loop
cmpsl
stos
lea
or
popa
cmpsl
mov
fistl
mov
ret
lahf
push
sar
add
cli
ja,pn
xchg
in
jno
out
mov
std
xor
arpl
in
jecxz
cmp
ss
out
into
dec
and
shlb
data16
add
mov
mov
data16
push
je
xor
push
aaa
mov
jmp
pusha
scas
arpl
inc
inc
mov
dec
add
cmp
popa
repz
dec
push
push
pop
dec
imul
fmull
or
mov
add
pushf
sbb
loope
test
inc
cld
popf
pop
cmpsb
mov
adc
gs
sbbl
les
lock
cltd
mov
ljmp
rolb
les
inc
mov
jl
movl
popa
cmp
pop
bound
dec
jb
outsb
inc
mov
jo
pop
pop
xor
repz
adc
cs
xor
sub
push
lods
inc
push
push
lods
pop
fstl
mov
xor
outsl
frstor
inc
cmp
cmpsb
std
fwait
jbe
daa
fisubrl
bound
pop
mov
jecxz
cmp
pop
pop
mov
iret
or
dec
jb
fisttpl
adc
mov
lea
arpl
push
clc
mov
icebp
mov
add
pushf
leave
pusha
int
xor
dec
xchg
dec
jnp
add
jg
pop
mov
test
push
and
mov
pop
lods
dec
adc
cs
and
jecxz
xchg
jb
push
addr16
std
daa
adc
call
aaa
cs
pop
fidivl
add
xor
loope
stos
push
mov
xchg
dec
fdivs
int3
call
mov
mov
jb
inc
and
sub
js
push
jg
lret
fdivl
insl
xor
inc
jnp
clc
cmc
mov
push
pop
mov
subb
mov
push
sub
jecxz
mov
daa
out
mov
dec
inc
rorl
push
hlt
push
mov
push
das
xor
push
pop
mov
movsb
mov
sub
stos
push
push
js
gs
xor
icebp
inc
xor
mov
inc
pop
insl
fisttps
push
xchg
icebp
addr16
cs
int
daa
in
mov
jge
out
xchg
imul
lret
lods
xchg
xchg
mov
movsb
hlt
adc
enter
jg
sti
rcrb
js
push
fldenv
jl
mov
enter
adc
lret
inc
sti
in
inc
insb
cmpsb
and
cmp
andb
push
scas
lcall
add
bound
test
mov
jns
sbb
lea
int
into
sub
js
cmp
outsl
je
push
dec
fisttps
cld
aas
lods
mov
ds
cmpl
outsb
mov
arpl
adc
mov
sbb
jnp
roll
and
les
ficoml
inc
ret
test
ljmp
test
adc
cmp
mov
mov
sti
out
mov
mov
insb
insl
xchg
sbb
pop
xchg
adc
lock
push
mov
fldt
mov
pop
xchg
sbb
inc
ss
ret
in
adc
es
and
cmp
and
pop
out
jb
mov
invd
xor
cmp
call
pop
sub
gs
adcb
cmp
movsb
aad
fucomip
pushf
test
decb
cmc
mov
shll
xchg
or
mov
mov
adc
sbb
dec
fidivrs
xor
xchg
mov
inc
jle
int3
in
push
push
data16
adc
arpl
imul
cmp
scas
lahf
fstps
jns
adc
pop
sub
lcall
repnz
pop
adc
test
push
inc
out
nop
cmp
sbb
dec
adc
jle
mov
cmpsl
frstor
in
xchg
jae
sbb
repz
mov
xchg
fldt
mov
jg
stc
std
in
test
ret
das
mov
sbb
sbb
push
or
out
push
lahf
fscale
mov
sbbl
dec
dec
fmull
into
jno
insl
int3
cmp
mov
out
adc
lahf
repz
das
push
xor
pop
cwtl
xchg
jg
loop
clc
dec
imul
enter
aaa
enter
push
repnz
clc
dec
dec
jo
dec
jge
outsl
add
cmp
inc
cwtl
test
and
jo
gs
pop
int3
iret
pop
dec
sbb
add
adc
fisubrl
sub
imull
out
sub
xor
xor
out
insb
push
jbe
pop
hlt
dec
jb
test
jg
int3
fwait
cld
cld
nop
ljmp
outsb
adc
test
mov
pop
iret
jl
jbe
fwait
jg
jg
dec
out
mov
lods
dec
out
test
test
mov
lods
cmp
adcb
pop
pop
jns
test
lock
cmpsb
repnz
lock
les
insb
xchg
loopne
inc
fildll
outsl
jae
aam
jb
test
mov
xor
adc
jnp
lcall
cmpl
fmuls
dec
sub
std
mov
xlat
mov
ja
cwtl
jecxz
xchg
dec
fdivl
xchg
sub
stc
mov
push
dec
fldt
sbb
push
mov
mov
dec
adc
pusha
xor
mov
pop
jae
in
adc
bound
add
std
jle
cmp
lahf
mov
pop
or
arpl
nop
dec
add
pop
dec
das
xor
pop
jbe
cmp
gs
xchg
jp
test
xchg
in
fldl
int
and
cwtl
push
add
popf
push
inc
stos
lock
test
mov
icebp
mov
push
test
out
inc
shlb
stos
mov
push
arpl
pop
in
pop
inc
jnp
xchg
arpl
ss
adc
mov
rclb
inc
cwtl
jg
aam
xchg
arpl
cs
adc
test
mov
cmc
dec
or
daa
lods
in
push
outsl
xchg
into
sub
xchg
fnstsw
adc
fstl
call
mov
jbe
add
das
rorb
cltd
jp
xchg
mov
pop
and
mov
inc
dec
mov
lahf
and
out
into
repz
inc
outsl
rcrb
rcrb
or
or
les
sub
test
fistps
dec
add
and
bound
xor
mov
mov
push
mov
add
add
mov
movsl
add
xor
add
jne
ss
mov
jo
adc
jge
into
sbb
jmp
lea
jecxz
jle
sub
lahf
ja
dec
xor
negb
mov
pop
lds
cmp
sahf
iret
dec
hlt
sbb
sbb
hlt
dec
dec
push
jb
xor
cs
movsb
test
lods
gs
cltd
mov
int3
mov
ja
in
movsl
pusha
out
or
gs
shl
dec
pop
fistl
mov
dec
dec
xor
std
cmc
push
fidivs
xlat
insb
mov
xor
and
lret
sub
sbb
cmc
test
sub
jae
and
daa
jge
call
dec
int
push
lret
jecxz
adc
iret
jmp
imul
ficompl
clc
popa
lahf
jecxz
xchg
dec
mov
int
aas
jbe
movsl
imul
in
jge
sahf
sub
loope
pop
xchg
or
push
popl
sbb
andb
add
fisttpl
jnp
jp
jp
das
popa
lods
dec
pop
ret
out
xchg
sbb
cmpsl
in
shrl
pop
imul
xchg
test
push
ja
jmp
pop
addb
push
pushf
lahf
je
or
and
aaa
js
or
cs
sbb
stos
fnsave
fnstcw
or
pop
sub
jp
clc
icebp
int
adc
lcall
dec
sbb
stc
icebp
repnz
fldenv
jo
lcall
gs
jno
sysexit
pop
jecxz
or
test
mov
test
test
cmp
insl
push
in
rcrl
dec
mov
inc
sub
jno
loopne
inc
push
in
testl
cmpb
and
js
push
loope
mov
inc
or
adc
pop
pop
pop
cmp
push
mov
adc
mov
idivb
mov
pop
sub
fwait
inc
scas
jecxz
xor
add
insb
int3
push
cmp
sub
movsl
jae
jle
aad
test
dec
lea
xlat
push
lock
cmpsl
fcomps
inc
or
dec
popf
outsl
lret
jmp
roll
inc
xchg
or
lds
pop
cmp
mov
pop
mov
movsl
arpl
mov
call
mov
add
sarb
mov
adc
stc
in
add
and
jmp
arpl
jne
arpl
xchg
mov
inc
in
xchg
jg
xchg
insb
pop
frstor
pop
sti
lret
xor
and
dec
pop
xor
adc
push
shr
insb
sub
hlt
in
pop
test
pop
fcomp
xchg
push
scas
fcomps
shrl
orb
mov
es
enter
push
ret
test
scas
sahf
scas
mov
dec
mov
aam
bound
test
negl
cmc
data16
imul
mov
xor
stos
fidivrl
cld
arpl
inc
jg
int3
mov
cmp
enter
push
mov
loopne
pushf
mov
stos
fwait
cmpsb
nop
das
mov
and
daa
cs
hlt
dec
mov
cvtdq2ps
or
jo
cmc
mov
inc
push
sahf
mov
dec
adc
out
adc
inc
cli
and
sti
mov
sub
and
data16
xchg
sub
add
mov
sbb
xchg
inc
je
stc
or
cmpsb
jnp
jle
add
into
dec
cld
push
mov
adc
rcl
dec
ss
sub
jns
mov
pop
out
in
iret
lock
jge
test
imul
xchg
pushf
sahf
dec
fsubl
rorb
push
jo
andl
call
inc
dec
aaa
add
sbb
int3
clc
xchg
sahf
outsb
addb
jae
jns
dec
mov
sub
mov
or
mov
xchg
cmpsb
add
icebp
mov
lods
pop
fistpl
push
movsl
cmovo
sbb
test
sbb
or
sbb
jmp
add
call
stos
fimull
mov
mov
bound
cs
out
mov
int
cmp
cmpb
subb
adc
sbb
pop
mov
mov
dec
js
mov
xchg
xor
clc
jbe
cmpsl
xor
mov
cmp
mov
movsb
dec
addr16
in
mov
mov
and
xchg
inc
shll
rorl
dec
iret
filds
rorl
jl
vpshlq
push
test
pusha
add
ja
cmovg
mov
jp
out
push
andb
repz
xor
fucomi
add
inc
sub
mov
dec
mov
pop
jmp
fdivl
xor
xchg
icebp
loopne
or
cmc
cs
pop
lea
cmp
divl
rclb
push
jmp
inc
jmp
mov
in
out
xchg
roll
or
inc
cld
shlb
adc
xor
inc
xor
in
lea
cwtl
mov
jns
aaa
adc
repnz
adcb
in
ja
jne
aaa
fmull
enter
cmp
out
sbb
pop
hlt
mov
loopne
fistpl
xor
imul
adc
jnp
xchg
push
mov
inc
sbb
mov
int3
xchg
int
ret
sub
enter
mov
lds
fdivl
andl
push
mov
les
mov
fwait
lret
inc
rcl
and
push
inc
scas
ss
loop
inc
sbb
test
mov
xor
inc
add
mov
mov
sbb
cmp
je
test
lods
or
out
push
fadd
dec
lea
xor
divl
daa
xor
int3
pop
mov
xor
mov
lret
xor
sbb
fdiv
pop
or
int
push
hlt
sub
xor
cwtl
xchg
cld
push
fidivrl
mov
jmp
mov
aad
lcall
mov
or
outsl
or
jecxz
dec
imul
pop
inc
int3
icebp
mov
repz
out
ss
dec
fidivs
rcll
lahf
pop
sbb
mov
mov
leave
pop
and
rorb
fmull
test
rcll
pop
inc
sub
out
push
dec
add
xor
or
sub
out
rcrb
mov
fcoml
push
aam
insl
inc
cwtl
repz
fisubs
out
cmp
pusha
pop
notb
pop
insb
dec
xor
nop
push
xchg
push
cmp
fcompl
pop
popa
xchg
mov
mov
sbb
mov
sub
frstor
fisttpl
and
push
stos
fucom
mov
cs
lea
xorl
mov
cmp
pop
cmp
jbe
dec
jecxz
xchg
loop
sbb
mov
cmp
in
jno
inc
cs
xor
inc
ss
or
pop
aam
cld
lods
dec
rolb
rorb
pop
mov
xor
fidivrl
mov
int
out
xchg
clc
mov
daa
cltd
jae
or
push
sub
push
adc
pop
repz
add
or
add
mov
pop
fwait
xor
scas
into
lahf
test
cmp
jmp
imul
xor
sbb
arpl
out
lahf
andl
cwtl
mov
push
xor
loop
xchg
aad
xchg
push
stos
cwtl
es
sbb
inc
pop
fs
test
push
loopnew
sti
inc
sub
xor
xor
aad
aad
shl
jbe
outsb
inc
cld
dec
xchg
jl
stc
sub
xor
iret
mov
fimuls
int
pop
orb
mov
fisttpl
sbb
fidivrl
or
leave
mov
xchg
test
jnp
out
jecxz
arpl
rcrl
lock
adc
cmp
loop
mov
out
xchg
test
repnz
mov
add
lea
pop
or
sbb
adc
xor
fwait
cmp
arpl
inc
daa
stc
mov
jb
pusha
pusha
aad
mov
mov
pop
hlt
mov
mov
xchg
cwtl
nop
push
xor
and
cmp
sbb
lahf
mov
cmpsb
xchg
out
les
xlat
int
jmp
in
ret
push
insb
sbb
and
mov
and
mov
data16
add
addr16
pushf
icebp
lock
sub
xchg
add
sub
ljmp
adc
mov
inc
lock
or
in
movsl
dec
aad
and
lret
adc
movsb
xor
jo
rorl
dec
leave
nop
add
ss
pop
cmc
add
jl
pop
test
aaa
insl
adc
cld
xchg
sbb
iret
push
jae
fdivrs
mov
test
ljmp
adc
mov
ljmp
push
push
add
cld
sahf
rclb
loop
fimuls
sub
pop
or
push
test
imul
daa
cmpsl
jmp
sub
seta
icebp
fldenv
sbb
add
aaa
ja
pop
jmp
push
mov
push
cmp
xchg
sbb
inc
or
shlb
sti
xor
cmpsl
mov
cmp
mov
pop
mov
andb
test
fsubr
jnp
cs
pop
pop
aad
daa
ss
mov
xchg
gs
pop
mov
ja
in
scas
fwait
adc
or
xor
push
mov
push
mov
inc
arpl
into
pop
sbb
ror
adc
mov
add
sbbl
lods
or
push
push
xchg
and
test
push
aas
xor
mov
lds
nop
pop
stos
pushf
mov
adc
mov
gs
rcr
ds
addr16
repz
dec
add
and
mov
pop
cwtl
pop
outsl
jns
int
cld
push
ja
test
jl
lret
aam
xor
scas
jg
insl
xchg
mov
adc
fstl
sbb
lret
mov
inc
movsb
ja
cld
rcr
push
cmpsb
jae
push
jnp
loopne
xchg
push
mov
stos
addb
adc
in
pop
sbb
nop
xchg
xor
das
daa
jp
lret
mov
out
je
sti
cmpsb
es
insb
leave
or
pop
xor
sti
cmp
out
ja
xor
adc
loope
add
xor
outsl
rcrl
xchg
mov
scas
call
rcrb
mov
cld
cmp
sahf
fwait
rcrl
call
ljmp
xchg
cmp
shlb
pop
add
xor
mov
pop
push
fisubs
lret
xor
scas
sub
aad
inc
sbb
add
out
adc
sub
popa
mov
cld
dec
stos
lret
mov
cmp
sbb
jo
xchg
sbb
push
dec
stos
pop
mov
repnz
sbb
out
and
aaa
or
cli
ljmp
jnp
cmpsb
dec
or
jl
out
inc
xor
or
push
jg
mov
cmp
pop
add
loope
std
movsb
dec
or
jae
ret
insb
lods
and
outsl
cmp
mov
stc
mov
push
cli
inc
std
sub
bound
adc
enter
je
xchg
shll
inc
jp
inc
xchg
dec
lret
aas
sub
push
dec
cmpsb
rcrb
es
sahf
push
lods
jge
pop
imul
mov
das
or
adc
inc
xor
insl
in
or
sub
push
aam
mov
sbb
inc
scas
jecxz
sub
jp
pop
scas
inc
adc
mov
mov
jp
dec
shl
mov
push
das
icebp
adc
out
jg
andl
movsl
bound
test
sbb
fs
cmc
jo
push
cmp
lret
cmpsl
or
inc
stos
inc
ds
inc
pop
cmpsl
das
enter
or
push
cmpsb
mov
arpl
jbe
inc
imul
test
and
jge
mov
clc
out
mov
mov
mov
aas
popa
cmp
in
call
outsb
mov
xor
jo
mov
ja
sahf
mov
add
mov
mov
out
orb
dec
js
out
cmp
jl
cmp
and
mov
int3
dec
mov
mov
ficoml
pop
lret
mov
adc
leave
jne
pop
fdivrl
stos
fwait
daa
test
inc
jo
cs
xchg
incb
jle
jmp
leave
inc
dec
push
iret
lods
xor
int3
mov
addr16
push
daa
mov
pop
jecxz
jp
jle
jg
lods
xchg
cmp
mov
loopne
ss
cmp
mov
stc
push
xor
jb
ror
jp
inc
xchg
inc
xchg
mov
fwait
jnp
out
sbb
lret
jno
cmp
push
push
out
push
movsl
sarb
fnstcw
pop
mov
pop
adc
pop
dec
std
xchg
sbb
and
add
mov
push
jno
addr16
stos
and
dec
fmulp
sub
add
push
jnp
dec
or
xchg
push
dec
mov
scas
dec
jbe
fs
xchg
stc
rolb
mull
ja
shrl
adc
stos
mov
das
xor
in
cmp
jbe
adc
jecxz
sti
leave
iret
imul
popa
xchg
ljmp
out
xor
lret
movsl
adc
dec
dec
mov
lea
leave
mov
xor
les
push
add
jp
inc
mov
xorb
pop
ja
jbe
push
xor
cmp
lods
fsubl
out
sub
adc
jp
jmp
dec
mov
dec
mov
adc
test
add
dec
rclb
test
fisttpl
shrl
inc
leave
fwait
cmp
out
mov
xor
mov
lea
cmp
mov
arpl
cmp
pop
jbe
push
dec
lahf
pop
sarb
inc
out
push
stos
out
mov
adc
pop
fwait
adc
and
jo
dec
xor
insb
mov
test
mov
mov
out
mov
test
sub
cwtl
xorl
dec
mov
in
pop
dec
push
push
rdpmc
mov
cltd
int
mov
shrb
mov
mov
aaa
fsubrs
jnp
cli
mov
sti
popf
scas
pop
mov
inc
jmp
xchg
inc
xchg
lahf
sbb
pop
jmp
shll
movb
fs
shll
sbb
lods
mov
ret
outsl
xor
stos
aam
xchg
xor
fidivl
or
push
mov
mov
in
in
inc
je
out
dec
in
pop
mov
cmp
gs
fnsave
out
push
pop
fildll
mov
iret
rolb
rorl
inc
and
mov
jo
xchg
iret
push
push
js
mov
sub
mov
and
and
lret
xchg
dec
adcb
loop
lret
adc
jecxz
mov
sub
clc
lods
icebp
mov
mov
frstor
cmp
dec
daa
sub
push
fisubrl
or
sti
test
shll
fdivr
enter
add
adc
sbb
xchg
xchg
outsl
jnp
out
call
mov
pop
imull
popf
movsl
push
shll
inc
mov
dec
jbe
adc
push
fcmove
inc
and
cmc
xchg
out
sub
pusha
icebp
adc
xchg
imul
sbb
dec
mov
push
ret
jg
sub
ja
push
adc
jle
inc
cmp
loopne
mov
adc
movsb
pushf
dec
mov
inc
mov
jle
lret
in
out
insb
ljmp
in
lret
adc
lds
mov
push
dec
in
sub
pop
dec
sbb
and
rolb
ja
sub
xchg
dec
lret
int
add
cs
xchg
pop
sbb
xor
out
inc
fwait
jmp
rorb
scas
fwait
xchg
sbb
into
xchg
pop
int
fucomi
sbb
scas
cmp
ficomps
dec
and
xchg
ljmp
pop
fsubl
mov
jge
cmp
std
cmp
sti
adc
insb
push
and
jg
gs
fs
mov
std
popf
mov
push
inc
mov
cmpsb
jne
mov
pop
mov
adc
sbb
cld
cmpsl
cli
imul
sub
andb
xor
pop
daa
xchg
in
pop
sub
add
inc
int3
int
jo
dec
ja
fcmove
adc
cmpsl
cld
inc
xchg
lret
pusha
sar
or
or
xchg
js
pusha
fcmovnbe
pop
sub
mov
xchg
jg
test
inc
out
pop
shr
into
xchg
js
push
jb
cld
test
inc
loop
scas
in
test
shl
outsb
push
xor
subb
xchg
push
xchg
inc
mov
mov
loope
cs
cmp
push
lahf
repz
sub
fbstp
daa
xchg
sbb
outsl
xor
add
xchg
pop
jo
frndint
push
jmp
popf
and
xchg
mov
frstor
pop
mov
test
mov
lret
xlat
mov
sub
cmp
dec
data16
stos
pcmpgtd
ljmp
jbe
mov
rolb
jne
sbb
sub
add
jo
popf
stos
mov
lods
addr16
cmp
jo
and
int
push
out
or
leave
add
add
test
into
cltd
lds
jmp
pmaxub
lcall
mov
xor
outsb
adc
inc
out
ds
inc
pop
inc
movb
push
call
inc
inc
dec
call
sub
add
lret
and
in
mov
addl
push
and
arpl
addr16
cmp
mov
clc
mov
xchg
and
stos
xchg
xor
nop
std
loopne
mov
imul
jle
sbb
inc
out
inc
mov
insl
push
jge
sub
loopne
shll
lret
notb
push
aaa
int
arpl
loop
cmp
cltd
and
cltd
int
xor
sub
push
fisttps
js
icebp
mov
subb
jp
subb
dec
push
dec
leave
sub
notb
fmulp
xchg
insl
xchg
or
popf
lea
pop
push
lahf
out
mov
lock
or
lock
dec
incl
xchg
pusha
and
jbe
sbb
call
adc
push
dec
arpl
insl
adc
fildl
cs
cmp
mov
fnsave
push
cltd
or
xor
dec
push
cld
std
mov
enter
pop
lods
sbb
mov
popf
jl
fisubrl
mov
cltd
sbb
test
std
mov
lea
fcompl
out
xchg
insl
clc
sbb
push
sub
add
sub
mov
aad
mov
jge
data16
adc
insb
mov
js
ss
push
mov
jo
jge
arpl
in
mov
lret
lcall
pop
std
cs
in
cs
cli
mov
dec
mov
es
std
push
mov
push
mov
mov
push
ja
push
pop
ret
mov
into
fadds
int3
inc
xor
ja
pop
jp
fucomi
arpl
test
sbb
fs
in
mov
dec
jl
in
test
inc
aaa
iret
test
pop
das
xchg
mov
add
push
and
in
add
popa
js
jge
pop
mov
inc
out
aam
ja
mov
lds
mov
jmp
scas
push
adc
jae
inc
pop
out
xor
int3
jnp
mov
mov
sub
shrb
inc
sti
adc
push
jae
sub
ret
cmp
popf
adc
test
adc
movsb
into
cmp
pop
mov
mov
cli
mov
dec
lcall
icebp
decl
je
in
xor
enter
dec
mov
test
mov
sub
cwtl
pop
jns
leave
movsl
mov
lret
adc
ret
lcall
test
xor
incb
gs
inc
push
loope
inc
dec
push
ljmp
pop
shr
xchg
jecxz
xor
cwtl
mov
mov
lret
lods
scas
fwait
jmp
or
ljmp
sbb
pop
dec
and
sbb
mov
pop
xchg
push
adc
inc
adc
sarl
xchg
mov
call
repz
sbbb
in
sub
std
out
in
fcomp
cmpsl
outsb
ja
inc
sub
push
mov
xchg
mov
jns
pushf
movsl
sub
and
mov
fisubrs
imul
dec
pop
mov
inc
mov
dec
fidivrl
mov
outsl
daa
nop
sub
dec
mov
cmpsl
and
std
add
imul
iret
in
jb
repz
inc
push
cs
ljmp
add
push
iret
inc
mov
lds
and
pop
xor
jo
hlt
movsl
dec
pop
subb
mov
mov
cmpsb
xor
mov
cmpsl
jle
mov
call
adc
out
cmpsb
sub
jo
and
mov
in
jne
mov
ljmp
jle
loopne
mov
push
lock
jo
enter
adc
mov
dec
push
or
inc
clc
or
push
mov
imul
mov
cmpsw
or
fldt
loop
das
and
outsb
orb
dec
fstps
enter
jecxz
add
mov
rol
push
mov
mov
sub
sbb
stc
mov
enter
mov
outsb
jno
loopne
movsl
cltd
outsb
jo
outsb
inc
rcl
add
in
iret
imul
repnz
mov
and
jae
imul
inc
sti
imul
leave
aaa
lcall
in
test
outsl
cmp
mov
and
aaa
dec
cmp
jmp
aam
xor
xor
ss
push
xchg
adc
jge
js
mov
push
dec
jno
fcmovnu
xchg
es
cltd
bound
mov
iret
or
pop
pushf
inc
xchg
push
mov
fmuls
nop
loop
xorl
dec
arpl
mov
cmp
lret
call
fwait
xchg
pusha
or
cs
or
scas
xchg
adc
shrb
in
push
mov
fs
adc
testb
lds
into
add
fildl
loop
test
cmp
dec
or
and
fidivl
sub
test
mov
mov
push
pop
xchg
xchg
push
mov
dec
push
in
sarl
jno
les
lea
cwtl
icebp
filds
in
mov
pop
pop
add
mov
repz
mov
mov
or
dec
cmp
fldt
enter
dec
mov
fmull
sub
daa
sub
repnz
loopne
cmp
xor
xor
shr
jns
fbstp
fwait
cmpb
jg
jmp
stos
addr16
mov
jne
orb
or
stos
push
popf
cmc
mov
xor
push
pop
jnp
inc
mov
xchg
fistpll
sub
fisttpll
mov
push
iret
stos
ret
iret
pop
sub
sbb
sub
mov
negl
stos
xor
mov
pop
ret
push
daa
mov
mov
pop
push
aam
jp
data16
orl
lahf
test
or
mov
clc
daa
cmp
fldt
cmp
in
sub
addb
xor
movsb
and
mov
daa
xchg
jnp
fcompl
cld
aas
ss
pop
cld
movsl
ja
or
lods
inc
mov
cli
testl
jp
adcl
icebp
nop
popf
ja
mov
mov
out
dec
sahf
mov
cld
adc
sub
mov
mov
icebp
mov
fmuls
int3
std
push
pop
mov
pop
pop
or
data16
daa
add
mov
cmp
adc
in
mov
iret
aas
lods
jno
mov
push
or
inc
xor
xchg
repz
idivb
or
call
jb
loope
push
mov
movsb
and
mov
icebp
cld
das
popa
loopne
aaa
xor
int3
dec
cld
or
jmp
adcb
and
or
mov
ds
xchg
mov
pop
push
test
pop
lcall
inc
pop
jecxz
xchg
loopne
cmp
pop
xlat
mov
subb
sub
mov
or
add
repz
mov
repz
and
mov
and
jnp
jbe
lea
inc
inc
mov
out
sbb
mov
push
sbb
mov
push
outsl
push
jo
push
ss
movsb
adc
ja
push
push
sbb
rcrb
aad
xchg
jp
lods
mov
fs
sbb
push
rorl
arpl
movsb
sbb
mov
fs
inc
jg
out
repz
repnz
xchg
xor
imul
push
enter
sbb
mov
sub
fdivs
in
cmp
xor
scas
pop
or
sbb
ss
mov
fdivrs
pop
stc
and
out
daa
add
in
ja
xchg
jno
inc
hlt
cmc
pop
push
sar
inc
xor
in
mov
push
pop
int
push
out
cmc
call
lahf
ficomps
scas
mov
and
pop
repnz
push
int
jle
loope
into
mov
mov
push
out
push
sbb
sub
or
dec
loop
sub
pop
mov
push
dec
fcmovnbe
jg
out
jmp
push
cwtl
imul
jne
xchg
pop
mov
dec
jb
scas
sarl
sbb
fwait
lcall
stos
fmul
mov
push
shl
push
icebp
jge
imul
imul
mov
mov
cmpsl
push
pop
arpl
repz
inc
xchg
cmpsl
cltd
cmp
sub
inc
pop
daa
dec
add
cmp
ljmp
insb
or
sbb
icebp
ja
mov
shrb
int3
push
jg
in
mov
andb
cmpsl
aad
xor
jmp
jle
xor
mov
imul
stos
loopne
push
add
aaa
xchg
and
les
xchg
push
out
imul
jne
out
add
lret
and
pop
mov
sbbl
stos
insb
cmp
mov
sub
xor
dec
mov
ljmp
out
dec
dec
mov
mov
sbb
shlb
push
dec
push
push
add
in
fstl
ret
outsb
jg
fldcw
mov
dec
out
push
cmpl
or
mov
cmp
xor
insb
and
xor
aam
and
and
push
sarl
jbe
lcall
mov
xchg
enter
adc
jne
sbb
jo
jo
push
sbb
jne
lods
mov
pop
inc
xchg
mov
cs
xchg
imul
jnp
imul
mov
fstps
mov
dec
mov
pop
stos
test
pop
dec
push
xchg
test
loopne
shl
mov
sbb
jns
divb
in
jae
stc
lret
sub
pop
das
mov
in
adc
outsl
mov
cli
fidivrs
aam
push
cmpsb
mov
mov
cld
out
push
cmpsb
inc
stc
adc
jmp
cmp
fldcw
pusha
xchg
pop
or
cmc
andb
sahf
enter
push
or
out
mov
mov
pop
cli
push
xor
mov
js
out
cltd
scas
mov
stos
jno
xor
scas
add
push
insl
adc
in
popf
sub
lods
scas
lret
fiaddl
fwait
outsb
aam
and
push
vpshufd
pop
mov
cli
sub
push
jns
pusha
jecxz
mov
mov
aas
pop
adcb
je
imul
push
outsb
mov
push
shll
add
aas
and
mov
xchg
ficoml
or
cmpsl
bound
cmpsl
fisttps
push
fstps
sbbb
mull
aam
sub
into
and
in
cmp
pop
pop
punpckhwd
mov
jnp
and
jo
mov
adc
push
bound
mov
scas
sar
cwtl
js
out
and
xor
jo
mov
fstl
mov
cmp
pop
mov
inc
mov
icebp
xchg
js
xor
hlt
pop
ds
jg
push
pushf
lods
dec
lea
xchg
cmp
and
inc
mov
in
jnp
xor
outsb
ss
push
mov
outsl
je
js
imul
push
or
cmp
scas
mov
lods
pop
scas
adc
faddp
inc
mov
scas
int3
and
insl
sub
mov
cmp
dec
mov
imul
mov
shrb
fnstsw
mov
push
or
add
xor
xor
mov
enter
xor
mov
and
jmp
popa
outsb
push
xchg
lods
repz
jecxz
fwait
sub
pop
in
lods
adc
roll
fisttps
sbb
cmpsb
out
xor
mov
mov
in
fstl
fiadds
jl
das
adc
in
insl
call
push
jbe
xor
sbb
push
adc
dec
mov
push
jle
cmp
stc
imul
fwait
test
jbe
hlt
outsb
neg
pushf
sbb
scas
mov
pop
add
lcall
inc
xchg
push
not
insl
fs
mov
jmp
mov
jl
test
cmpsb
arpl
mov
stos
out
xchg
lods
outsl
sub
lret
jbe
roll
stos
jbe
mov
cld
fld
inc
nop
idivl
call
jo
mov
jne
out
mov
xchg
jle
adc
inc
xchg
sbb
pop
pop
outsl
mov
shr
xchg
sbb
mov
and
out
sub
cmpb
lds
ja
leave
adc
fldlg2
dec
sbb
push
lret
cmp
addb
popf
out
sub
cld
sub
xchg
sub
sahf
test
sahf
inc
sbb
jp
enter
jne
add
xor
mov
test
pop
cli
ss
cmp
out
or
mov
xchg
jno
add
enter
cwtl
push
jg
xor
cmp
pop
jae
mov
or
xchg
cmp
out
arpl
jno
mov
outsb
test
fimuls
jl
outsb
out
pop
das
out
xor
imul
cmp
loop
mov
cmp
cmpsl
nop
ffree
push
cltd
in
lahf
nop
cld
add
mov
cmp
inc
les
test
and
cmp
mov
pop
insl
fisubrs
dec
test
push
cmp
test
ds
int
cmpsb
pusha
adc
ret
out
or
adc
cmp
add
adc
sub
or
inc
or
add
mov
scas
pop
mov
out
xor
inc
dec
pop
cmpsl
mov
addr16
and
jnp
jae
xchg
fs
movsl
je
in
scas
and
xor
or
and
push
adc
push
push
rcrl
xor
cmp
fs
sahf
jnp
pop
fmulp
gs
mov
cmpsb
mov
popf
imul
adcb
mov
pusha
popf
repnz
aad
xchg
loope
mov
xor
mov
sbb
in
adc
out
xor
cmp
or
imul
push
stc
sub
jb
std
mov
xchg
adc
and
sbbl
xchg
cs
popa
jae
jbe
inc
pop
inc
add
outsb
xchg
sub
adcb
movsb
sbb
xor
inc
sub
fisubs
lahf
and
gs
cltd
dec
push
lea
sti
and
pop
xor
lcall
push
push
or
cmp
xchg
inc
lcall
xchg
mov
outsl
lret
xchg
negb
insb
mov
jmp
fcmovnb
subb
cld
cmp
xchg
adc
cwtl
pop
sbb
sub
fnstenv
insl
xor
xor
shl
sti
adc
iret
adc
xchg
adc
xlat
fidivrs
repz
bound
push
xchg
dec
test
aam
cmp
test
aaa
rorb
cmp
adc
xlat
hlt
cmp
loopne
data16
stos
insl
sahf
and
pusha
or
inc
cltd
fsub
cmp
sarb
xor
fdivrp
cltd
push
mov
out
dec
movsb
mov
mov
ljmp
fwait
pusha
cwtl
lds
jb
jb
stos
inc
outsb
cli
movsb
scas
rcr
mov
mov
jb
jmp
daa
pop
mov
cli
nop
popf
mov
aaa
inc
fistpll
jnp
gs
nop
add
xor
in
lahf
adc
nop
push
cmp
lahf
subb
dec
pop
mov
out
test
push
sbb
cmpsl
lds
sbb
lea
scas
scas
xchg
or
iret
rorl
jecxz
mov
jns
cs
aaa
xor
popf
aaa
pop
push
lea
or
daa
jo
mov
jb
cmpsb
sub
int3
test
cli
mov
test
insb
cmp
cld
lock
xchg
ss
cmc
dec
pop
into
bound
push
mov
test
test
dec
ja
shrl
push
aad
fidivrl
iret
xchg
dec
add
flds
jl
mov
push
in
out
push
jg
fstps
push
mov
inc
stos
fwait
lds
outsb
sbb
scas
mov
leave
fisttps
mov
pop
movsl
insb
mov
lret
adc
add
mov
or
mov
lahf
mov
dec
outsl
scas
rolb
clc
mov
insb
mov
roll
jle
mov
roll
les
jae
out
mov
mov
inc
jnp
xchg
fsubrl
pushf
jno
inc
inc
mov
dec
push
inc
sbb
das
lea
aaa
xor
jmp
stc
mov
insb
sbb
xchg
cld
push
mov
xor
or
imul
add
adc
jl
loopne
adc
xchg
xchg
push
out
lds
outsb
mov
call
add
ljmp
jno
mov
xor
pop
adc
or
cmpb
sbb
fcomps
sub
gs
or
inc
cmp
hlt
xchg
jg
outsb
xchg
icebp
mov
dec
or
mov
in
mov
mov
mov
mov
cmpsb
mov
push
sti
add
loop
push
out
sbb
cmp
mov
push
cltd
xchg
lods
ss
pushf
dec
mov
out
les
shll
mov
push
and
sub
adc
inc
loopne
cmp
arpl
jmp
sbb
rorb
jmp
cmpb
fldt
xchg
inc
enter
xor
out
dec
or
mov
jo
lock
fistps
push
and
and
ror
outsb
test
mov
pop
push
add
fwait
stc
nop
cwtl
inc
movsb
lcall
call
jg
cmp
mov
cmp
inc
sbb
xchg
ljmp
xchg
inc
xchg
xor
enter
push
arpl
jno
cmp
push
push
inc
xor
cmp
gs
mov
mov
mov
fcompl
sbb
pop
jnp
sub
idiv
out
out
out
addl
shr
push
fs
lods
les
pop
gs
lds
and
xchg
jg
mov
enter
add
jle
repz
xchg
push
cmp
clc
fldt
sub
mov
int3
dec
imul
fisubrs
fchs
rclb
sbb
enter
fnstenv
rcr
call
loop
rol
pop
lahf
sub
xor
sar
lock
mov
das
insl
mov
pop
xchg
test
fisttps
daa
int3
int
out
ss
lahf
pop
in
sub
outsb
fldcw
popa
pop
adc
inc
jmp
pop
insl
andb
pushf
nop
push
movsl
jns
xchg
pop
enter
add
outsb
mov
jg
ss
cs
dec
out
je
add
jge
xor
or
stos
je
mov
lret
adc
ja
jns
sahf
es
xchg
and
jmp
mov
mov
test
lahf
cmp
add
cltd
add
repz
mov
test
insl
dec
inc
into
dec
cmp
mov
test
mov
test
shrb
dec
call
dec
pop
das
push
mov
insl
scas
or
in
std
in
or
movsl
into
push
mov
push
seto
adc
cmp
dec
cs
pop
or
mov
pop
jbe
dec
les
xor
sbb
shrb
sbb
mov
stos
mov
dec
fidivrl
inc
bound
sub
push
cmp
mov
cmp
mov
pusha
std
mov
loop
les
push
loopne
xchg
sahf
dec
add
cmpsb
add
rorl
mov
int
ja
leave
push
xor
push
je
aam
adc
mull
shl
sub
imul
jbe
xchg
sub
lret
les
cmp
insb
or
addr16
pop
and
adc
jp
xor
ds
ljmp
fldenv
inc
cmp
adc
out
pop
cmpsl
ror
mov
leave
sub
and
outsb
jge
into
shlb
push
std
or
add
lret
sub
inc
adc
addr16
push
fisubl
mov
repz
insb
xchg
cmpsl
jo
fimull
popa
iret
insb
jl
lret
push
insl
es
xor
push
fwait
jmp
cmp
shl
iret
dec
cmp
notl
push
mov
test
cmp
and
jmp
xchg
sub
sti
mov
repnz
xchg
in
inc
dec
xor
inc
fstpl
mov
mov
pushf
pop
mov
clc
xor
sbbl
xor
mov
pop
mov
cmp
into
sbb
ffree
addr16
bound
lea
adc
les
mov
in
cmpsb
jecxz
mov
popa
jo
mov
in
jbe
ja
dec
ror
add
adc
adc
insb
push
ss
out
into
mov
cmp
ds
jg
ja
fwait
xchg
outsb
mov
or
pop
popf
mov
pushf
lcall
aaa
loope,pn
push
pop
xor
jmp
iret
cmpsb
xor
inc
xchg
mov
cmp
aas
mov
sbb
imul
and
hlt
int
adc
inc
mov
in
push
cmp
xor
sbb
or
mov
stos
push
push
jle
and
addl
mov
daa
xchg
xchg
aad
icebp
insl
fwait
cmp
sbb
mov
data16
jg
loop
xchg
ret
push
add
jns
iret
push
sub
pop
orl
sub
adc
jmp
cltd
cmp
jns
ret
pop
jo
mov
mov
push
cld
xchg
jns
dec
pop
ret
inc
cmp
cmp
mov
push
add
jns
aad
shrl
fwait
pop
scas
jle
cs
ror
cmp
push
pop
jo
pop
outsl
iret
mov
outsb
pop
xor
jo
mov
sbb
and
cmpsl
xchg
cmp
jno
movsb
shll
jns
dec
std
hlt
clc
mov
push
int
movsl
xchg
mov
sbb
sahf
aaa
mov
out
inc
mov
push
out
lods
jns
xchg
dec
sub
cltd
pop
jge
or
pop
in
jge
mov
mov
pop
jbe
push
mov
aas
mov
mov
insl
xor
shl
xor
jae
movsb
cmp
xor
cmpsb
sbb
push
mov
mov
pushf
js
aam
mov
mov
popf
scas
adc
xchg
pop
xchg
push
push
jg
cmp
sbb
mov
insl
mov
jbe
cwtl
pop
stc
imul
add
nop
inc
dec
shlb
rcrl
and
inc
das
popf
stos
mov
dec
jnp
rcll
js
test
scas
jg
int3
jg
mov
push
push
outsl
cwtl
adc
mov
or
dec
pop
ret
inc
sbbl
push
fildll
jmp
into
decl
mov
dec
xor
jno
cwtl
adc
scas
in
add
in
das
repz
and
cmp
jno
dec
lahf
mov
or
and
frstor
sub
push
push
or
loopne
lahf
clc
rcrb
cld
imul
mov
pusha
jl
pop
lock
in
cwtl
add
dec
xor
addr16
sahf
lcall
jge
push
imul
je
xor
mov
push
iret
cltd
sti
or
sbb
dec
mov
ss
loope
imul
and
jg
and
lods
repnz
lods
movl
or
testb
stc
daa
push
jno
jbe
push
and
xor
sub
enter
loop
aas
les
and
aaa
inc
mov
mov
mov
lret
pop
rcl
imull
fistps
adc
sub
cld
mov
outsl
loopne
aaa
and
xor
or
sbb
push
lods
xchg
dec
ljmp
pop
push
hlt
dec
loope
fldenv
push
mov
in
mov
test
cmp
test
push
insb
sub
jmp
mov
mov
out
unpcklps
dec
repz
pushl
cmpsl
loopne
mov
jge
outsl
inc
cmpl
fs
mov
incb
adc
inc
dec
cld
push
pop
jg
xchg
arpl
es
mov
hlt
fldenv
lret
xor
xchg
pop
test
xor
scas
popa
xor
mov
inc
fucomip
je
sbb
inc
fidivrs
pop
mov
rcl
clc
push
loopne
mov
cmpsb
push
mov
mov
inc
xchg
mov
inc
xchg
cmp
jmp
jne
pop
cmp
cs
push
jmp
in
fwait
mov
int
ds
mov
in
divb
pusha
cmp
jns
test
les
int
dec
data16
es
add
push
es
pop
mov
xor
jp
sub
sub
popf
mov
pusha
and
jbe
fimuls
dec
shll
jg
push
int3
les
add
dec
aaa
icebp
lea
mov
xchg
cmp
mov
mov
int
inc
arpl
jnp
roll
dec
in
push
out
pop
in
add
dec
cs
and
out
xchg
inc
push
lret
adc
pop
scas
stc
out
testl
jne
repz
shr
popa
cli
or
dec
leave
js
jne
rcrb
adc
jg
loop
jge
cli
cmp
rol
fs
fsubr
or
imul
mov
or
fwait
shrl
fldcw
xor
and
stos
mov
fistpll
dec
xor
mov
pop
adc
lcall
fsub
or
fcomi
fstpl
stos
out
mov
inc
dec
fldl
xchg
movsb
add
or
mov
xchg
cmp
rcrb
outsb
inc
ret
clc
sub
leave
out
cltd
sub
nop
push
bound
insl
int
shlb
outsl
push
negb
xchg
call
mov
cmp
sbb
fsubr
mov
inc
pushl
xor
daa
nop
rcl
sub
cmpsb
push
jo
dec
cld
clc
arpl
jge
js
lahf
dec
jne
out
mov
scas
or
inc
mov
push
pop
sbb
pop
xorl
in
push
adc
jmp
aaa
test
cmpsb
xor
call
cmc
xchg
or
out
mov
in
cli
or
in
clc
adc
addb
incl
aaa
adc
hlt
xchg
dec
and
out
negb
or
lock
stos
negl
inc
imul
or
lea
jbe
pop
aam
cwtl
ljmp
fdivr
push
stos
inc
inc
stos
mov
mov
sub
adc
js
pop
xor
adc
xor
and
lcall
sbb
pop
xchg
test
lods
sub
or
pop
push
loopne
jnp
int3
fisubs
shrb
xor
hlt
push
inc
shlb
mov
les
fbld
cmpsl
fcmove
stos
and
dec
das
xor
popf
push
pop
mov
mov
loope
sub
cmp
jl
inc
push
sub
jp
xchg
mov
call
xchg
mov
cmp
out
lea
cltd
cmpsb
mov
bound
inc
mov
pop
cwtl
mov
cli
xor
pop
lea
xor
pushf
jno
jo
in
ljmp
push
out
lcall
cs
lea
and
leave
std
je
mov
cld
shlb
mov
fbstp
mov
push
inc
adc
and
insl
rcl
xorl
sub
loope
pusha
ja
xchg
xor
jb
jns
xchg
jg
in
lahf
mul
sqrtps
cmpxchg
fdivp
mov
push
lods
fildl
ja
mov
xchg
test
dec
repz
pop
pop
xchg
mov
xor
adc
jno
dec
data16
out
add
out
cmp
pop
lock
jmp
aas
cli
fcomps
cmp
jmp
aas
int3
cmpsl
mulb
xlat
jge
mov
cmp
mov
pushf
loop
pop
in
mov
jg
jnp
sbb
lock
pop
adc
repz
in
out
in
sets
mov
adc
adc
outsb
jge
sub
mov
mov
push
mov
push
orb
mov
ss
out
pop
js
aaa
jno
rep
inc
cmp
sub
cwtl
imul
sbbl
adc
movsb
and
shr
jno
insl
add
jno
insl
add
cwtl
fistps
aad
push
mov
push
dec
pop
mov
clc
dec
adc
inc
jbe
xchg
js
icebp
repz
test
mov
fnstsw
mov
adc
mov
fwait
pop
ss
pop
cmc
add
icebp
int3
in
inc
mov
mov
sub
jmp
sbb
dec
dec
mov
mov
add
scas
les
push
mov
jb
sub
cs
lret
pop
mov
test
ja
mov
push
jo
rolb
mov
mov
sub
enter
or
sahf
into
sub
shl
int
das
lret
xchg
pop
xor
jmp
fsub
inc
xor
xchg
jno
pusha
xchg
rcrb
popf
les
shr
or
outsb
imul
push
xchg
sub
subb
leave
lea
lret
push
mov
sub
in
loop
aaa
cmp
int3
jp
and
adc
test
add
gs
sub
or
fwait
mov
int
pop
push
inc
aaa
gs
popf
subl
lret
test
das
jae
pop
daa
sub
sbb
test
scas
lahf
int3
mov
cmc
jl
xor
pop
pop
lahf
lahf
jno
jae
cs
aad
pop
mull
mov
mov
mov
test
mov
out
push
add
jbe
sbb
test
sub
ljmp
pop
loopne
ljmp
xchg
xchg
test
int
mov
icebp
inc
mov
iret
out
mov
inc
mov
test
dec
mov
leave
sahf
lcall
adc
sti
or
mov
push
mov
daa
xor
sti
sbb
or
pop
movsb
cltd
stos
test
add
jbe
call
data16
aaa
pop
fistpl
pusha
imul
repnz
clc
ret
mov
or
jae
inc
out
aam
inc
jmp
mov
inc
pop
pushf
in
push
insb
mov
xor
insl
inc
fcompl
add
stos
popa
test
cli
dec
subb
add
out
jo
call
dec
cwtl
xor
stc
xchg
ret
cmp
mov
imul
xchg
push
mov
test
out
mov
push
inc
in
loopne
mov
mov
mov
scas
xchg
mov
and
insb
mov
and
ds
cmp
and
fistpll
dec
outsb
stos
pop
es
mov
fsts
pop
and
out
mov
mov
xchg
sub
xchg
or
test
push
imul
in
in
pop
fdivl
dec
shrb
stos
cmp
and
das
fnstsw
in
je
hlt
leave
mov
fdivrs
xchg
xchg
push
cmp
out
enter
ds
jbe
inc
push
fnsave
aaa
scas
cwtl
mov
jmp
cwtl
inc
push
jp
test
xlat
xchg
xchg
fisubl
clc
push
xchg
cmp
fildll
fdiv
cmp
call
mov
nopl
xor
cmc
jg
mov
aaa
xchg
mov
or
ret
jecxz
aas
push
push
jecxz
arpl
cld
mov
push
bound
adc
cs
jno
stos
or
push
ss
int
insl
fs
sqrtps
push
inc
adc
push
xor
ljmp
loope
cmp
fisubrs
call
inc
adc
loopne
pop
sti
es
popa
or
sub
inc
repz
push
xchg
jne
xorl
cmpsl
js
cmp
mov
jb
sub
in
add
dec
mov
jge
pop
xchg
pop
dec
ja
cli
scas
cmp
mov
cmpsb
pop
cmp
sbb
scas
push
es
pop
mov
add
push
fwait
int
mov
jmp
aas
in
fiaddl
pusha
stc
inc
cmp
cmp
cmp
or
jle
adc
or
rcr
sbb
out
add
mov
ficomps
xor
lret
mov
imul
inc
add
shr
loope
popa
faddl
mov
jns
lea
and
scas
jle
in
push
inc
mov
mov
jmp
nop
jo
inc
cmp
add
jl
cs
xchg
push
sbb
lods
jo
mov
mov
sub
insb
aas
shlb
jbe
sahf
lret
js
in
mov
mov
or
jecxz
inc
jmp
inc
jle
cli
dec
fstps
pop
outsb
lods
je
xor
add
and
scas
sarb
cmp
sbb
pop
fdivl
adc
add
out
popf
xlat
jp
enter
push
aam
pop
push
movsl
inc
lret
fs
outsl
pushf
cltd
popf
in
rcr
lcall
int
xchg
aaa
cli
mov
js
jns
iret
mov
cmp
fsubs
xchg
daa
insb
and
addr16
idivl
mov
addr16
imul
inc
vpaddq
jmp
outsl
movsb
pop
int3
jnp
mov
add
rcll
adc
and
mov
movsb
aas
test
lock
adc
filds
mov
adc
mov
test
in
cltd
inc
fnsave
xchg
out
push
inc
sbb
mov
fmul
pop
pop
addr16
lret
sbb
imul
loopne
sbb
stc
shl
jae
ljmp
out
jae
push
cltd
negl
fidivrs
push
es
pop
imul
aad
adc
jo
lret
inc
cmp
daa
js
pop
mov
xor
dec
inc
ljmp
mov
mov
push
mulb
adc
lds
push
hlt
sbb
jo
int3
cmp
ret
jae
cmp
cmp
popa
pop
fidivrl
in
test
xchg
inc
jg
sub
mov
ja
sarl
orl
pop
sbb
jnp
stc
adc
imul
jge
sti
lret
adc
mov
xchg
inc
movsb
sbb
insl
add
mov
stos
insl
movsl
push
in
lahf
cli
pusha
testl
mov
xor
cli
mov
addr16
pop
fidivs
pop
push
mov
inc
sbb
sbb
mov
fisttps
imul
rorl
orb
aad
test
leave
cmpsb
jb
rcrl
movsl
jae
pusha
xor
sub
popf
cmp
mov
cmp
ja
jb
and
and
rolb
leave
or
and
shlb
add
insl
xor
mov
repz
sahf
insb
inc
outsl
pop
int3
and
fcompl
test
xor
leave
nop
jno
jge
das
mov
in
jp
leave
add
lahf
inc
out
lret
cmc
inc
pop
fisubrl
sub
fldenv
mov
mov
dec
imull
cmp
repnz
idivl
sbb
xchg
notb
inc
lcall
loop
lahf
mov
xchg
pop
insl
jns
int3
mov
inc
sub
shll
add
pop
in
push
sub
xchg
pop
es
into
mov
lock
in
fxch
arpl
loope
je
lret
and
xchg
fdivs
fadd
mov
es
addr16
shr
xchg
stos
addr16
aad
inc
and
les
out
jg
push
cltd
cmp
leave
fs
adc
fs
mov
pop
xor
and
push
sbb
lock
daa
in
inc
dec
pop
mov
out
repz
pop
push
and
jle
dec
mov
fdivl
xchg
jle
jmp
outsl
add
mov
loope
and
fistpll
pop
fnsave
adc
int
mov
pop
int
cmp
pushf
outsb
cwtl
les
jno
xchg
push
cs
mov
daa
xchg
shlb
cmpsl
out
arpl
xor
incl
push
test
popa
mov
mov
mov
and
sub
fwait
aam
out
xchg
cmpsb
cld
jnp
push
daa
push
in
push
or
repnz
mov
aam
fs
lock
xchg
mov
mov
push
movb
insl
nop
test
pop
mov
mov
lcall
sbb
push
rorb
dec
mov
fs
mov
cmp
ja
std
out
add
mov
das
rolb
icebp
jge
lds
mov
mov
jle
sub
jecxz
data16
cltd
je
xchg
ret
dec
gs
jno
sbb
ficompl
daa
cmp
in
xchg
pop
push
add
mov
hlt
shr
mov
test
jae
imul
in
shrb
xchg
mov
mov
push
insl
setge
test
jg
mov
jne
sub
fnstenv
cmp
add
lcall
push
les
or
in
js
adcl
push
pop
mov
jo
pop
jecxz
inc
in
sbb
jbe
dec
lea
sub
inc
cmc
cwtl
mov
mov
rorb
inc
aam
pushf
sub
pop
aaa
mov
lahf
xlat
mov
lock
pop
push
aad
sahf
fiadds
out
fstps
pop
or
out
pop
cmpb
pop
push
std
dec
sub
add
aaa
outsl
jo
push
xor
pop
cmp
jo
pop
inc
in
adc
jbe
imul
jae
loopne
pop
pushf
lret
xchg
dec
xchg
dec
daa
mov
or
pop
je
adc
cmp
adc
sub
cmp
mov
dec
pop
xor
or
inc
mov
pop
mov
mov
std
shll
mov
ficompl
rcr
push
test
push
xor
popa
inc
mov
mov
mov
cmp
subl
or
cmp
jb
jmp
dec
adc
rclb
xor
ljmp
stc
ss
mov
int
push
in
ret
adc
jbe
test
int
mov
push
and
lods
mov
mov
imul
lcall
fwait
mov
popa
mov
lret
subl
mov
or
je
dec
in
mov
xlat
push
xor
andl
sub
stos
pop
dec
daa
pushw
jbe
cmp
or
or
sub
ficoml
fisttps
nop
in
ss
xor
xchg
mov
add
jno
jge
cmpsl
pop
stc
ret
xchg
mov
mov
std
cmpb
push
xchg
jl
mov
xorl
shll
aam
lea
aam
jmp
lods
mov
out
cltd
lret
mov
mov
sbb
stos
outsb
out
mov
inc
pop
fnstsw
xor
push
dec
add
jle
in
inc
lahf
dec
inc
jmp
and
out
push
test
jb
mov
cmp
mov
jnp
je
mov
add
add
fisttps
sub
nop
pop
inc
loope
cs
fildll
mov
add
es
sub
jle
adc
call
dec
and
cmp
jle
icebp
xlat
or
jp
adcl
enter
clc
jecxz
add
push
xor
lods
in
lahf
inc
in
test
mov
loope
or
push
cmp
xor
sbb
fs
push
jo
fmul
sbb
in
imul
adc
imul
jb
out
push
stc
inc
mov
negb
push
add
dec
push
loop
add
push
ja
fsubs
ljmp
sbb
mov
xchg
xor
sbb
aam
outsl
repz
pop
push
jmp
push
inc
xchg
test
int
mov
mov
insl
jl
jae
in
aad
mov
push
js
pop
dec
ds
stos
push
xor
sub
push
popf
es
or
sbb
mov
and
dec
cli
pusha
rorl
mov
das
xor
and
mov
cmc
sub
push
clc
inc
out
lods
shlb
movsl
jo
xchg
mov
sbb
and
sbb
mov
les
or
stos
mov
shrl
imul
stc
bound
adc
testl
daa
jne
outsb
cltd
shlb
ds
cwtl
inc
xchg
sbb
mov
insl
mov
and
fadds
xorps
add
mov
xor
or
mov
push
sbb
mov
das
test
xchg
push
aam
mov
test
daa
push
fmul
jmp
xor
mov
adc
ja
test
xor
clc
cld
add
xchg
cmpsb
pop
mov
scas
cmpsb
sbb
lds
cwtl
lods
or
cmp
test
add
iret
hlt
jg
clc
sbb
fwait
adc
je
adc
rorb
test
adc
jl
push
mov
add
out
ja
inc
ret
out
inc
xchg
adc
popf
lret
clc
aad
push
outsb
mov
lock
addr16
rorb
cltd
mov
cmp
insb
out
hlt
les
in
adc
and
into
mov
lahf
insl
push
test
mov
lahf
cmp
jo
xlat
cltd
lahf
sub
aam
test
fsub
fcoms
test
mov
xor
inc
cld
dec
jl
inc
push
sbbl
inc
aam
mov
jmp
cmc
sbb
mov
leave
mov
out
and
popa
cmpsb
inc
pop
test
into
idivl
outsb
es
cmp
nop
jnp
jns
and
fwait
xchg
push
insb
sar
fnsave
fwait
xchg
loop
fcoml
js
push
addr16
xor
aaa
sub
cmp
fwait
push
xchg
pusha
mov
mov
repz
je
es
pop
jl
push
sti
out
xchg
mov
xor
ficomps
inc
xchg
jnp
push
enter
imul
mov
jns
test
sahf
xorb
lahf
divb
push
adc
push
lds
push
dec
sarb
int
xlat
mov
cmp
mov
pop
iret
cmp
mov
xlat
movsb
mov
xor
lahf
or
adc
add
sbb
dec
pop
mov
xor
and
in
and
repnz
dec
cmp
add
mov
iret
fldcw
or
mov
fistpll
push
and
inc
fcmovb
in
mov
bound
push
pop
mov
jb
xchg
out
inc
aas
xorl
in
call
push
push
mov
and
inc
sub
popa
clc
mov
sbb
imul
std
push
lretw
dec
fs
adc
ret
xchg
lcall
jl
push
cmp
pop
lock
xor
fisubl
mov
inc
inc
cld
sub
bound
das
jo
push
jecxz
adc
ret
cmp
push
fwait
add
xor
pop
int3
cmp
mov
notl
mov
xchg
sub
pop
fildl
ja
mov
addr16
movsl
mov
insb
ja
andl
sub
pop
mov
mov
bound
cmp
or
sub
cli
lods
pop
cmp
icebp
cltd
loop
mov
pushf
push
lods
les
in
cltd
sbb
loop
push
mov
mov
mov
cmp
loopne
icebp
fsubrp
cmp
mov
mov
jo
data16
xchg
or
mov
sarb
sub
faddp
clc
cwtl
or
jo
lahf
leave
adc
pop
lret
add
sarb
mov
out
cmpsb
fwait
aad
arpl
testb
mov
sbb
mov
fwait
subl
test
jnp
rorb
fwait
int3
test
add
xchg
fcoms
out
sub
bound
jmp
sub
adc
lret
insb
loop
and
inc
mov
sbb
xlat
test
fdivrs
xor
xchg
xchg
cmp
xchg
push
add
iret
insb
adc
mov
inc
gs
in
push
ret
mov
in
dec
cmc
orb
bound
int
inc
sahf
inc
jmp
imul
out
pusha
pop
push
jge
hlt
repz
inc
adc
flds
xor
imul
sbb
jne
aas
insl
jmp
pop
and
or
pop
xor
inc
jge
xchg
mov
inc
insl
int3
xor
int3
and
adcb
mov
dec
testb
mov
sub
imul
xchg
lcall
nop
ds
mov
xor
in
rorb
out
cmp
or
pop
inc
in
stos
sbb
cmp
cmp
push
out
faddl
mov
mov
cwtl
in
movsb
jne
arpl
addr16
data16
stc
out
aam
mov
flds
lods
in
in
ret
pusha
rcr
fisubs
add
push
icebp
test
push
test
negb
out
xlat
test
sahf
and
cmp
xor
push
xor
sahf
stc
fwait
mov
in
mov
xor
cltd
mov
mov
jno
shlb
adc
int
ds
sub
mov
cmp
iret
xchg
mov
es
lds
sub
fmull
sbb
andb
adc
insl
fistpll
jge
lcall
rorl
sub
in
stos
mov
jne
jne
mov
or
mov
mov
ds
mov
scas
xor
inc
mov
mov
jb
fstp
xchg
test
rcrl
mov
in
rcrb
push
ja
rcr
mov
adc
pop
out
or
lret
xchg
jb
js
aaa
push
add
jb
or
cmp
sbb
hlt
jne
roll
cmpsl
pop
add
fsubl
fisttpl
jno
xor
push
dec
pop
in
adc
pop
out
xor
push
pop
cwtl
push
addr16
fisttpl
popf
jo
push
add
test
aaa
cmp
xchg
jo
xchg
push
test
and
mov
ret
imul
adc
push
ss
or
out
js
leave
push
mov
adc
outsl
clc
jl
or
cld
jno
lcall
sub
lret
xchg
in
mov
push
sti
push
std
enter
sub
xchg
addr16
xchg
xchg
cltd
lret
and
xlat
fwait
jmp
push
sbb
mov
shl
icebp
subb
xchg
iret
pop
lret
loope
sub
addr16
lds
jl
lret
and
xchg
or
addb
leave
enter
repnz
aam
mov
in
fs
xor
push
cmp
in
jne
pop
mov
sub
pop
cmp
jns
enter
lock
rorl
pop
cmc
adc
and
sub
in
mov
int
sub
push
jae
out
loopne
icebp
fdivs
and
push
and
in
gs
lods
mov
xchg
subl
xchg
pop
inc
jle
mov
mov
push
xchg
cs
pcmpgtd
xchg
add
xor
pop
test
out
mov
bnd
push
sarl
ret
lcall
test
movsl
push
sbb
pop
rcll
popa
int
mov
xor
loop
cmp
mov
mov
push
test
push
cmc
jbe
insb
jecxz
xchg
repz
out
jnp
mov
add
dec
mov
in
in
mov
in
in
stc
orl
ffreep
sbb
fildll
je
push
scas
jnp
fildll
repz
pop
daa
fs
fnstsw
sahf
push
fs
fiaddl
jne
sub
movsl
mov
in
int
mov
out
inc
mov
ja
lds
int3
mov
add
sbb
mov
lock
add
pop
jecxz
push
iret
jns
aad
xor
sbb
mov
sti
sub
cs
jecxz
in
ljmp
inc
lock
imulb
test
xchg
and
loop
fwait
cli
push
mov
or
cs
filds
fists
stos
movsl
add
cmpsb
out
in
aad
addr16
xor
add
add
sbb
test
and
mov
push
ss
dec
lret
mov
fs
fldenv
frstor
or
mov
mov
pop
in
mov
fcompl
fimuls
ljmp
sub
into
pop
mov
add
xlat
out
jge
and
andb
sub
test
ljmp
xchg
and
fcoms
jg
inc
decb
sbb
notl
lcall
cmpsl
mov
shll
jge
xchg
out
xor
dec
add
fstps
scas
mov
clc
mov
xor
sahf
sar
inc
dec
push
xchg
aam
lods
icebp
mov
mov
mov
fbstp
sbb
and
mov
xchg
mov
loop
jmp
cmc
lcall
push
in
sub
std
in
scas
mov
sti
icebp
jnp
jb
ss
loope
bound
sahf
ja
push
mov
lcall
sbb
fs
push
or
js
sbb
lcall
or
sbb
dec
or
mov
pop
sub
lcall
or
cwtl
push
inc
int3
xor
pusha
jno
into
mov
in
dec
insl
dec
jnp
loope
fildl
test
daa
jge
enter
iret
xchg
les
mov
sub
stos
push
out
adc
pop
or
mov
push
ss
into
cld
jns
fwait
adc
sub
jns
push
sbb
mov
sbb
icebp
cmp
data16
jo,pn
jbe
and
idivb
xor
test
cmp
xchg
pop
icebp
xchg
xchg
mov
call
push
mov
int3
lcall
test
dec
mov
fdivrp
cmp
in
mov
xchg
mov
loop
jmp
xchg
and
sahf
mov
mov
in
notl
fwait
test
sbb
lds
and
cmp
in
mov
cld
lcall
dec
mov
xchg
adc
cmp
pusha
xor
leave
inc
fwait
ds
inc
mov
leave
push
mov
rcr
jnp
mov
adc
rorb
adc
cmp
push
mov
cmpsb
push
pushf
loop
imul
push
mov
in
pop
js
push
out
xor
cmp
mov
xchg
scas
scas
push
test
imul
inc
mov
adcb
call
shl
mov
jg
std
jmp
push
jmp
mov
adc
mov
dec
or
add
mov
mov
inc
int3
xchg
test
lcall
push
call
xchg
mov
xchg
xchg
xchg
bound
hlt
add
mov
int3
sbb
in
xchg
imul
out
jb
xor
sub
adc
mov
sbbw
cmp
jae
sub
inc
jg
mov
aam
mov
xchg
mov
out
xchg
adcb
sub
jl
push
insb
or
lahf
sub
xor
xor
into
sbb
pop
xchg
xchg
ljmp
pusha
es
aad
mov
xchg
icebp
mov
sub
mov
fnstcw
mov
sbb
mov
call
stc
push
xchg
arpl
icebp
addl
fisubs
rep
ret
rolb
pop
add
sub
dec
xor
imul
es
cmpsl
sub
pop
nop
and
fisubs
push
xor
dec
sbb
inc
popa
icebp
jmp
je
push
inc
xor
sbb
outsl
xor
pushf
shll
sbb
inc
mov
fsubrs
out
les
cs
dec
pop
cld
rclb
mov
sub
cmp
mov
lahf
addl
sbb
fs
and
outsb
jns
mov
mov
jle
sbb
jo
mov
mov
nop
cmc
rol
mov
inc
popf
inc
mov
cmp
addr16
stc
stos
add
enter
mov
jle
xchg
outsb
outsb
arpl
test
in
mov
mov
jno
loopne
adc
lock
lcall
inc
pop
adc
jge
inc
sbb
jp
fidivs
or
popa
repnz
fidivl
or
push
push
jo
insl
mov
jo
jecxz
icebp
push
mov
repz
addr16
cmp
daa
dec
dec
ror
mov
movsl
int3
movsb
mov
stos
and
out
mov
test
jp
in
in
in
sub
jecxz
xchg
jbe
jl
xchg
shrb
arpl
ret
add
and
inc
mov
outsb
dec
xlat
mov
jb
popf
es
jl
xchg
cmp
or
xchg
jmp
xlat
xchg
and
mov
sbb
jecxz
xchg
xor
out
imul
lcall
sub
xchg
xchg
adc
addr16
push
xchg
dec
popa
xor
add
ret
mul
test
ss
adcb
movsl
into
sbb
pop
loopne
loope
pop
testl
sub
popa
dec
or
mov
fwait
xchg
push
rcr
call
or
scas
icebp
xchg
cmp
insb
dec
xchg
sarl
jns
outsb
outsb
arpl
inc
and
ss
jnp
jmp
popa
clc
rcll
adc
cmp
js
fsubrs
out
jns
jl
push
mov
popa
mov
jnp
lret
cmp
aam
cmp
mov
mov
clc
fucom
mov
mov
dec
pop
xchg
popf
xor
lea
hlt
mov
outsb
and
ss
dec
or
pop
out
mov
rcrl
pusha
mov
push
mov
inc
mov
ds
enter
pop
or
inc
lcall
or
orl
mov
sbb
icebp
jl
imul
mov
popf
stc
xchg
dec
xor
mov
fldt
hlt
sbb
push
frstor
mov
xchg
mov
mov
sub
imul
nop
mov
fnstenv
xchg
or
data16
andb
idivl
shrb
icebp
ficomps
in
lods
xchg
xlat
es
int
sahf
inc
popf
imul
ret
clc
mov
mov
adcl
inc
in
xchg
xor
push
mov
int3
add
sbb
enter
outsl
popa
ljmp
nop
movsl
out
adc
ljmp
xchg
mov
jg
push
xchg
out
dec
sbb
sahf
pop
sahf
and
push
inc
ljmp
jg
movl
test
mov
jb
hlt
sbb
flds
out
mull
mov
and
mov
jnp
lods
inc
cmpl
adc
mov
sub
scas
shl
enter
fs
fbstp
cli
fbld
mov
xor
mov
and
fistpl
mov
imulb
or
sub
popl
sbb
or
dec
jo
inc
icebp
out
sbb
sti
jns
sub
xchg
sub
sbb
in
pop
xor
leave
mov
cltd
dec
mov
xchg
and
lock
pusha
sbb
pushf
jae
imul
cltd
or
dec
sahf
jg
repz
jb
sarl
ret
adc
pushf
mov
data16
not
dec
mov
std
cmp
lock
jb
dec
lcall
or
and
xor
pop
sbb
mov
std
dec
xchg
jl
sub
jne
loope
push
test
pushf
add
lret
add
out
test
pusha
pop
mov
pop
push
xchg
aaa
into
jle
or
lret
xchg
jmp
inc
adc
pop
scas
jne
popa
aas
pop
pop
pushw
cmp
and
cmp
leave
cmpsl
push
sbb
mov
or
mov
minps
cmp
cmpsb
lods
addr16
add
push
cmp
cs
xlat
cltd
jb
mov
xchg
and
popf
ret
fnstenv
cmpsb
or
jge
jo
pop
cmp
in
ds
lahf
sti
pop
inc
sbb
mov
xchg
mov
sbb
in
lahf
ret
test
loope
repz
adc
jno
jle
push
fistpll
scas
jg
sub
mov
or
das
mov
js
jne
jge
push
in
pusha
popf
cmp
rcll
fists
movsb
out
mov
push
xchg
push
neg
fs
jb
out
xchg
cmp
pop
loop
ds
shr
jae
imul
mov
cld
lods
inc
mov
out
xor
add
push
enter
sbb
cltd
sub
movsl
cwtl
dec
ljmp
mov
mov
jl
stos
das
lcall
test
fsubrl
mov
sbb
inc
addl
in
shlb
mov
push
sbb
mov
jle
outsl
loop
sti
testb
test
rcll
fucomp
xor
jnp
add
fldcw
mov
lea
or
push
lret
addb
adc
imulb
or
lret
movsl
pop
jmp
lret
adc
outsl
xchg
aas
test
jo
jmp
and
out
sub
popf
xor
mov
les
das
imull
or
inc
adc
adcl
std
and
pop
insl
xor
xchg
push
xchg
fs
cltd
fsts
fcmovnu
push
mov
fisubrs
pop
subl
test
add
sahf
mov
pop
loopne
inc
pop
jne
es
add
idivl
xchg
adc
fidivrl
sbb
mov
enter
ret
cld
into
repz
dec
nop
or
daa
lret
mov
pusha
rcll
cmp
jecxz
add
aam
and
dec
iret
pop
lcall
adc
mov
test
xchg
mov
inc
dec
mov
xchg
popf
mov
lret
in
jecxz
outsl
stc
dec
or
mov
loopne
ljmp
mov
pushf
push
push
movsl
fcomip
daa
outsl
mov
imul
or
pop
stos
fistps
ss
pushl
or
call
adc
sahf
imul
and
addr16
fnclex
imul
xchg
sub
pop
loop
iret
movsb
jl,pt
fdivrl
clc
in
andl
sub
or
sti
xlat
xor
mov
sub
ljmp
inc
fldenv
fwait
jo
mov
int3
inc
aam
rcrl
mov
push
shr
icebp
outsl
push
sbb
sbb
pop
mov
mov
push
sub
int
or
addr16
xor
ret
div
imul
push
out
adc
lea
cmc
imul
lods
add
jae
int
xchg
xchg
dec
jae
xorb
icebp
popa
and
cmp
outsb
mov
aad
dec
push
iret
das
jo
insl
ss
xlat
inc
cmpsb
adc
pusha
lret
and
fcomps
sub
and
fmul
popa
mov
int
mov
xchg
in
add
lods
cmpsb
test
mov
das
cmp
imul
popf
inc
mov
sbb
fldt
sti
cmp
push
mov
jmp
add
cmp
sbb
xor
fbld
imul
inc
mov
mov
sti
sbb
pop
adc
sub
inc
mov
bound
xchg
int3
mov
in
pop
mov
mov
add
and
es
sahf
je
mov
clc
push
ja
or
adc
or
sbb
or
adc
push
jbe
jnp
sub
cli
mov
iret
pop
in
lock
mov
out
jle
xor
popa
xor
mov
mov
or
dec
inc
mov
out
lock
mov
sbb
fucom
stos
test
mov
jno,pt
push
loope
lret
jge
cltd
xor
pop
push
pop
xchg
jne
insl
jecxz
or
ja
add
negl
adc
mov
and
les
mov
orl
sbb
mov
cli
dec
cmpsb
in
int
mov
lcall
test
sbb
add
pop
test
jae
mov
inc
mov
lock
pop
js
cltd
into
pusha
pop
lret
ljmp
repnz
xor
sub
jo
push
fcoms
or
stc
shlb
xor
fdivrl
js
adc
enter
mov
push
xchg
jns
add
out
sarb
jge
lahf
inc
jge
jecxz
mov
insb
lock
mov
sub
mov
push
sub
cwtl
or
and
cmp
mov
jne
xchg
cmp
sti
nop
stc
out
push
lahf
fsubp
into
clc
mov
sti
or
xchg
jnp
cmp
mov
cmp
roll
mov
pop
into
fnsave
inc
jns
xchg
inc
push
inc
lock
mov
out
dec
js
xchg
and
sar
imul
in
orl
jp
movl
xchg
outsb
xor
lahf
push
ret
or
shll
popa
gs
mov
clc
xor
push
pushf
push
bound
fisubl
mov
outsl
pop
repz
popf
in
cmpsb
outsl
lods
divl
xor
js
sbb
jg
jle
mov
pop
je
pop
fistps
addr16
jg
mov
or
sbb
dec
xchg
aam
mov
mov
repz
out
jno
add
push
pusha
lret
adc
sbb
les
xlat
pop
inc
mov
inc
addr16
mov
push
sti
xor
inc
cmp
neg
pop
stos
mov
add
mov
adc
mov
mov
gs
adc
imul
mov
sbbl
jbe
mov
and
mov
cmp
and
fildll
mov
lods
add
cli
mov
jo
or
lock
test
xchg
lods
pop
inc
push
and
xchg
inc
mov
lahf
add
std
xor
iret
push
lods
mov
xchg
add
cmp
insb
inc
sub
cmp
cmpsb
push
mov
dec
push
out
or
cmp
mov
jecxz
lcall
loop
cli
ja
add
jne
jg
push
addr16
ljmp
sahf
lods
imul
ja
jl
cs
lods
pop
pop
sti
and
ret
pop
push
or
xor
add
mov
cwtl
pop
jmp
sbb
call
daa
arpl
mov
mov
or
mov
xor
cmpsb
cld
add
pop
inc
mov
pop
or
imul
sub
test
push
inc
xchg
mov
loope
push
dec
xchg
popa
rcrl
add
fisubrs
iret
clc
bound
xor
in
hlt
cmc
lds
shr
dec
cltd
iret
pop
push
ret
mov
out
divb
scas
dec
jecxz
cmp
not
out
mul
xchg
cmp
mov
int3
sbb
movsb
out
in
jbe
andb
test
fcomps
in
leave
shrl
or
mov
push
push
sbb
mov
pop
mov
adc
lods
xchg
frstor
dec
mov
popf
and
aam
sbb
fsubl
mov
mov
add
sti
xor
rcr
dec
and
movsb
sbb
push
divb
stos
popf
idivb
mov
pop
dec
push
mov
pop
cmp
xor
xor
xchg
test
mov
cmpsl
jnp
jge
je
aaa
je
loopne
adcb
dec
test
cmp
push
jb
lds
adc
mov
or
or
mov
inc
or
clc
das
push
mov
and
jmp
das
aam
outsb
cwtl
add
cmp
cmp
aas
ss
mov
mov
fistps
cmc
dec
aad
mov
aas
cld
in
xchg
inc
mov
popa
sbb
mov
pop
or
ficomps
fildll
out
mul
and
aas
sti
arpl
dec
sub
enter
dec
pop
pop
jl
in
dec
loope
sub
ds
dec
cltd
xchg
decl
mov
cmpsl
push
lahf
dec
test
xchg
push
dec
dec
scas
mov
dec
sub
clc
mov
popf
les
in
faddl
pop
andl
fisttps
rorb
aam
ret
idivb
in
out
leave
negb
push
dec
pop
pop
pop
std
push
jecxz
adc
cmp
add
and
cmpsl
xchg
push
pop
inc
adc
cmpsl
pop
fstpl
or
jns
inc
push
jg
fbld
out
xchg
mov
xchg
call
daa
stos
add
fldenv
arpl
xchg
imul
push
dec
and
sub
cmp
or
addb
ljmp
add
cltd
outsl
dec
push
mov
and
into
std
sbb
bound
ret
std
mov
dec
shlb
push
lock
lcall
xchg
mov
cmp
cmpsl
sub
cmc
les
pop
jmp
mov
push
aad
sub
adc
cld
stc
js
jno
or
mov
mov
popa
fdiv
cltd
loopne
pop
imull
adc
mov
fsin
add
jle
pop
adc
xchg
xor
fsubs
ds
jnp
inc
mov
in
idiv
rolb
adc
sub
dec
ds
rorl
in
icebp
add
rcr
sti
xchg
jle
add
jbe
hlt
and
fildl
mov
dec
jno
mov
inc
fildll
inc
cld
psubd
push
and
insl
mov
dec
call
shrl
mov
fs
out
cltd
pop
add
mov
enter
mov
dec
adcl
mov
mov
fdivl
adc
inc
lcall
fdivs
xor
sahf
xchg
and
loope
outsb
add
mov
je
cs
xor
cwtl
mov
cltd
bnd
jl
fsubrl
cmp
sbb
lods
push
adc
xor
and
sub
fsub
mov
jnp
mov
lcall
imul
das
xchg
xlat
lock
add
or
stc
std
test
jb
dec
jmp
pusha
in
ret
add
sbb
ret
aad
mov
or
mov
pop
pop
mov
dec
mov
fisubrs
push
mov
sbbb
insl
fisubrs
jo
and
std
arpl
aaa
jo
lea
ror
in
adc
addr16
ds
jge
into
std
mov
stc
stos
mov
mov
mov
xchg
outsl
adc
popf
cmp
movsb
outsb
jmp
icebp
in
inc
mov
xchg
mov
aas
fidivrl
movsl
in
loopne
cltd
mov
pop
cld
aam
jae
rclb
daa
stos
xchg
cmp
test
cli
push
repz
mov
mov
out
xor
into
mov
fs
scas
movb
scas
sbb
mov
out
dec
mov
xchg
cmp
out
dec
iret
mov
lock
je
stos
sbbb
mov
or
cmpsl
pop
sbb
std
pop
cmpsl
loope
scas
lock
add
movsb
mov
enter
and
int
push
std
cmpsl
xchg
enter
push
lea
mov
jge
cmpsb
xchg
xchg
push
adc
inc
and
mov
test
test
cltd
pop
popl
aam
nop
stos
xor
test
and
cmpsb
aas
xchg
scas
xor
adc
sti
sub
mov
push
into
nop
movsb
push
loopne
xchg
enter
inc
fnstsw
in
mov
in
jg
shlb
mov
cmc
addr16
and
imul
stc
push
xchg
mov
les
loop
or
loop
or
mov
pop
fs
mov
icebp
sbb
xchg
dec
decb
and
into
sbbb
xor
mov
stc
sub
mov
cmp
cmpsb
call
jae
xchg
sbb
mov
push
out
pop
adc
scas
movsb
add
sbb
idivb
pop
out
adc
aaa
push
xchg
enter
loop
dec
cli
mov
and
stos
add
jg
xchg
cmp
ja
lcall
fiadds
packssdw
mov
jbe
into
pop
arpl
mov
sbb
mov
xor
mov
dec
sbb
stos
arpl
mov
inc
adc
xchg
pop
aas
mov
jge
push
lcall
test
imul
xchg
into
popa
sbb
mov
and
insb
lret
add
loop
add
jecxz
pop
fidivrs
push
popf
sbb
mov
lods
nop
dec
clc
mov
idiv
cmp
mov
mov
adc
addb
aaa
leave
cmp
out
stos
xor
lea
and
test
shll
loope
pop
dec
icebp
mov
dec
aad
sbb
jns
dec
add
and
cmp
lret
test
repz
popa
sbb
iret
mov
movsb
fstps
cli
stos
jno
pop
xor
out
fadds
enter
mov
in
pop
mov
xor
lods
mov
jno
hlt
loopne
frstor
loop
pop
jns
test
sbb
cltd
or
fld
pushf
mov
jns
sub
xor
flds
lods
movsb
inc
addr16
inc
adc
xor
stc
push
sbb
test
insl
in
repnz
cmpl
cltd
sub
pop
mov
inc
daa
jecxz
outsl
aad
and
out
scas
popf
or
in
mov
adc
addl
repnz
lods
add
jg
test
adc
mov
jae
addb
pushf
adc
xor
mov
outsl
fidivl
enter
shlb
aad
xchg
mov
aam
or
fldenv
jb
or
lods
mov
lret
test
scas
arpl
test
das
push
clc
jge
sbb
xor
fs
cmpl
mov
lahf
repnz
xchg
add
sahf
cmp
lret
lock
inc
notb
adc
mov
jge
lods
scas
loop
jbe
stc
or
popl
lahf
mul
cmp
loop
test
lret
xchg
ret
aaa
mov
adc
cmp
mov
jbe
mov
mov
bound
xor
in
mov
lahf
xchg
sbb
aam
push
lds
mov
lcall
imul
out
ret
lock
add
stc
std
je
in
pop
fistpl
push
lods
in
adc
cmc
imul
jecxz
jge
mov
add
jge
lea
sahf
scas
ss
ljmp
cld
and
clc
testb
xor
loope
dec
gs
mov
rorl
jne
les
aam
xchg
jmp
roll
mov
pop
mov
nop
mov
sub
int
pop
fwait
xchg
adc
ds
daa
cwtl
pop
mov
idivb
inc
cmp
repnz
frstor
sahf
dec
fstps
inc
scas
test
imul
push
stos
sub
sbb
leave
add
in
loope
repnz
andb
insl
fimull
mov
stc
sti
je
pop
jmp
sub
adc
xchg
repz
push
out
in
push
sbb
sbb
stc
cmp
out
add
fldcw
pop
or
pop
aaa
loopne
repz
sub
das
mov
sub
jne
out
mov
aam
pop
dec
mov
adc
popf
inc
mov
out
in
bound
in
test
add
add
pop
mov
dec
inc
and
inc
jne
sub
sub
movsb
andb
xchg
enter
int3
xor
lret
sub
mov
nop
movsb
cmp
ja
and
out
xchg
sub
imul
jbe
jle
hlt
xchg
and
sub
mov
mov
jge
mov
jnp
clc
fistpll
push
fnstenv
push
cmp
dec
in
sbb
xchg
push
ljmp
or
cld
pop
dec
test
test
and
sahf
sahf
dec
ss
pop
xor
jo
dec
cltd
jmp
xchg
je
das
sti
scas
jae
shll
xchg
pop
inc
out
mov
aam
mov
in
sub
and
iret
xchg
lcall
stos
lret
addr16
dec
lahf
xor
jnp
push
in
mov
inc
sti
icebp
cmp
sub
jo
pop
jo
outsl
int
and
xchg
mov
or
inc
cmp
fcoms
mov
cmpsb
scas
stc
dec
dec
xor
lret
or
inc
data16
or
mov
out
ljmp
mov
mov
enter
lcall
cmp
dec
test
xchg
xor
push
jp
mov
sbb
rcrb
fldcw
imul
xlat
les
pop
test
sub
push
call
xor
xchg
mov
pusha
jns
stc
dec
bound
in
int3
push
mov
sub
hlt
dec
mov
fwait
cmp
dec
jle
xor
mov
cmp
push
dec
mov
mov
mov
ja
and
cmp
push
jns
movb
mov
enter
enter
mov
mov
push
shlb
loopne
mov
or
pushf
data16
js
dec
jb
xchg
and
mov
mov
mov
add
lock
cltd
in
sti
mov
jp
mov
xchg
mov
push
outsl
xor
xchg
mov
sbb
push
out
cltd
push
negb
cmp
pop
sub
xchg
cltd
lahf
enter
cmpsl
add
pushf
mov
mov
je
mov
mov
rorb
shll
pop
arpl
and
mov
push
xchg
sti
lds
loopne
inc
and
mov
aam
pusha
pop
ret
pusha
insb
or
jp
cltd
add
dec
adc
inc
and
cmp
push
cmc
or
mov
fs
iret
sbb
pop
mov
inc
lods
repz
out
cli
or
xlat
inc
sub
mov
pop
je
adc
inc
call
dec
jne
test
jle
in
out
fs
push
mov
scas
test
jecxz
adc
in
int
cld
mov
pop
sub
dec
stos
sbb
lods
sub
add
scas
push
adc
push
and
xorl
and
aaa
mov
jns
dec
in
xchg
enter
data16
pop
sbb
lds
arpl
cmp
in
imul
fcompl
or
into
push
repz
and
lea
xchg
popa
mov
lea
shll
pushf
js
rorb
push
pop
and
in
mov
cmp
push
lds
mov
pusha
stc
cmp
push
sbb
pop
sbb
xor
shll
daa
push
xchg
adc
add
into
bound
pop
std
cli
fldenv
dec
inc
push
adc
mov
sarb
xchg
enter
dec
jmp
mov
push
pop
mov
inc
lret
push
dec
repnz
cmc
fs
insl
xchg
mov
insl
add
mov
xor
push
call
push
push
add
loop
xor
orl
aad
xor
gs
mov
mov
fnsetpm(287
push
xchg
cmp
inc
and
loope
push
mov
push
push
js
in
pusha
lock
enter
frstor
fdivp
call
sbb
mov
xor
aaa
jmp
pushf
mov
jge
fwait
enter
dec
jp
and
dec
pop
or
jge
imul
dec
sub
mov
lods
xlat
mov
cmpsl
dec
and
ljmp
js
sbb
dec
mov
xchg
ret
mov
xchg
fwait
add
add
roll
fnsave
andb
xor
ss
push
arpl
sbb
cmp
xchg
mov
sarl
xchg
jne
jmp
in
pop
push
pop
jle
mov
xchg
dec
mov
mov
scas
test
loop
pop
dec
arpl
sub
xchg
sbb
cmp
js
pushf
lds
enter
jl
aad
in
sbb
xor
movsl
rorl
mov
fs
ljmp
nop
mov
daa
push
mov
add
xchg
psllq
testl
sbb
hlt
adcb
mov
and
pop
inc
popf
pop
sub
dec
test
mov
fwait
sbb
push
jl
inc
dec
jns
sbb
pop
cmpsl
cmp
push
mov
shlb
mov
push
adc
nop
mov
fcmovne
xor
mov
movsl
inc
jmp
arpl
cmp
bound
mov
inc
and
shll
dec
jecxz
and
in
das
xor
jge
inc
icebp
fisubrs
inc
and
mov
mov
ficompl
js
jecxz
int3
adc
pop
add
jno
xor
mov
jnp
inc
xor
xchg
push
sub
ret
pop
or
mov
icebp
jno
jb
mov
hlt
mov
add
jb
push
je
int3
push
xchg
aad
cmp
cmc
cli
popa
call
sti
mov
icebp
ljmp
enter
pop
add
xchg
out
pop
cli
cli
lea
pusha
jno
add
cmp
adc
mov
adc
movsl
popf
inc
and
stos
jbe
out
sub
test
inc
aaa
test
aas
adc
jb
add
jecxz
jae
inc
mov
in
cmp
fidivrs
cmp
xchg
enter
cld
push
dec
fs
or
adc
jg
sbb
std
enter
mov
cmp
ja
pop
sbb
push
mov
sub
mov
fs
cwtl
push
dec
movsl
aad
sbb
jmp
cmp
xor
cs
in
lods
fcmovnbe
shlb
or
and
dec
imul
mov
iret
xchg
jae
adc
and
mov
cmp
hlt
in
aad
addr16
jmp
cmp
mov
and
test
jecxz
adc
rolb
mov
addl
and
inc
push
mov
add
jnp
nop
dec
or
mov
enter
dec
xor
mov
pusha
fisttps
push
cmp
pop
push
cmp
inc
imul
in
xor
idivl
mov
enter
pushl
xchg
adc
testb
xor
add
loopne
xor
mov
inc
and
mov
jno
stc
clc
lods
xor
fwait
into
lahf
mov
xor
sbb
inc
inc
sub
adc
jae
into
outsb
scas
and
or
fs
ja
imul
and
xor
sub
and
lcall
push
push
mov
fdivs
cmp
scas
add
jne
arpl
int3
xor
std
or
or
mov
mov
ds
jno
push
sub
pop
bound
jl
push
and
xchg
inc
inc
mov
mov
and
mov
xchg
push
ljmp
fmuls
clc
jb
push
loope
mov
sbb
sub
cmp
lods
dec
mov
push
aad
xor
xchg
enter
mov
dec
sub
gs
jnp
add
inc
out
and
mov
ljmp
sbb
stos
dec
call
js
into
dec
daa
sbb
dec
xor
mov
pop
movsl
push
xlat
shlb
dec
cmp
inc
jge
add
and
out
pop
xchg
addr16
test
inc
and
loop
adc
jle
mov
and
mov
adc
xor
mov
addr16
add
and
into
xor
cwtl
sub
cmc
pop
scas
pop
xchg
jl
inc
jae
hlt
dec
dec
imul
xor
out
push
rcll
push
movsb
faddl
or
and
iret
ss
int3
stc
add
sar
imul
mov
and
addr16
or
or
inc
rorb
sbb
xchg
enter
dec
cmp
xchg
push
sbb
add
jp
xor
psrlq
push
fnsave
xor
in
stos
jge
sti
movsb
inc
xchg
mov
movntq
and
and
mov
fcmovu
dec
push
leave
arpl
data16
imul
xor
cmp
xor
cmp
add
cmp
xchg
inc
fs
sbb
rcrb
sar
add
ret
inc
sub
rorl
xchg
xchg
enter
adc
call
rol
cmpsb
lds
iret
enter
ja
lret
insl
cmpsl
fadds
out
dec
pop
gs
push
dec
mov
inc
xor
or
dec
cmpsl
or
xor
sub
nop
dec
pusha
dec
jmp
scas
or
and
mov
pop
add
shll
les
and
xlat
shrb
lock
aam
lock
cmp
jbe
sar
leave
mov
jo
xchg
jl
xor
push
cmc
xchg
or
loopne
inc
push
fwait
inc
mov
jmp
inc
sub
sbb
jmp
mov
jb
mov
nop
rol
xchg
enter
xchg
or
mov
arpl
inc
xchg
sbb
xorb
ficoms
push
roll
dec
aam
lods
or
aam
dec
mov
test
fsubl
or
ret
push
insl
loop
inc
push
test
sub
pop
pop
ds
add
popa
cmc
mov
or
mov
enter
icebp
iret
mov
shr
push
repnz
mov
fbstp
push
lret
adc
enter
dec
mov
cwtl
out
cmp
cmp
cld
dec
test
shrb
sbb
scas
cmp
aad
jns
jp
aas
sbb
idivb
push
and
data16
xor
xchg
jb,pn
jmp
mov
pop
pop
xchg
sub
pop
inc
sbb
cmp
adc
out
cmp
daa
mov
cmp
adc
cmp
mov
cmpsb
bound
arpl
mov
cmpb
call
push
mov
sahf
cwtl
inc
and
pop
in
sub
mov
jne
jp
xchg
test
mov
add
fisttpll
xor
mov
mov
jl
or
jg
lods
push
push
rorl
jne
js
push
mov
add
inc
jno
enter
sahf
push
push
pop
pushf
jo
mov
and
and
daa
mov
leave
xor
cmp
xlat
sbb
ret
add
jne
push
pop
push
pop
adcb
cmp
xchg
enter
push
test
es
mov
out
aad
xchg
mov
adc
adcb
in
mov
lods
ja
mov
mov
adc
cmp
pop
loop
mov
cmp
outsl
mov
mov
jmp
out
xchg
cmpsb
xor
xor
lds
mov
ja
mov
aaa
rcrb
xor
inc
and
lds
shl
sbb
sbb
mov
jb
mov
loopne
hlt
cmp
mov
xor
dec
xor
sub
push
sbb
dec
mov
pushf
mov
xor
pop
xchg
enter
imul
sub
push
dec
sbb
negb
xor
pop
jp
inc
ficoml
daa
fisttpll
fnstsw
dec
xchg
lock
dec
or
fs
lea
jmp
sbb
les
outsl
mov
xchg
lods
jmp
cmp
sub
push
inc
out
mov
cmp
xchg
enter
push
jg
out
add
jge
pop
mov
gs
cmp
or
aad
and
imul
inc
mov
mov
jbe
pop
aas
lcallw
and
nop
jae
fwait
hlt
pusha
ret
mov
jo
mov
push
cwtl
mov
out
imul
xor
xchg
enter
mov
jg
mov
jge
mov
popf
jns
aam
push
cli
sbb
test
outsb
push
xchg
outsl
or
sarb
xor
dec
jbe
cmp
xchg
inc
push
xchg
enter
lods
add
pop
mov
scas
and
mov
push
imul
add
sub
stc
xlat
scas
push
and
mov
lds
ss
xor
push
or
add
cmp
enter
arpl
test
pusha
sbbb
test
aaa
xchg
mov
adc
jle
sub
mov
dec
pop
push
add
das
mov
sbb
out
dec
rcl
sahf
pop
iret
xor
sbb
icebp
sub
or
xchg
cs
mov
int
fiaddl
jmp
pop
mov
andb
dec
mov
sbb
add
out
ret
inc
xor
sub
push
mov
arpl
lea
lahf
repz
stc
mov
data16
inc
jge
sbb
or
icebp
negb
mov
xchg
xchg
cmp
xor
dec
xchg
sbb
mov
xchg
mov
pop
dec
and
pop
aad
in
sbb
sbb
vdivps
pop
int3
cltd
xchg
test
mov
mov
inc
cli
rcll
sbb
xchg
gs
mov
jae
adc
mov
xchg
loopne
mov
test
jnp
push
sub
xchg
cmp
popf
sbb
stos
or
xor
jl
pop
test
mov
mov
adc
cwtl
dec
dec
xor
add
sbb
stc
cmpsb
jbe
sbb
jg
fsubrp
sbb
stc
out
arpl
sahf
mov
or
adc
mov
ja
loop
arpl
ret
pop
iret
daa
fstps
cmp
hlt
ret
and
sbb
inc
pop
pop
mov
xchg
push
push
addr16
mov
pop
xchg
enter
test
cmp
push
pop
insl
fstps
inc
sbb
in
movsl
shlb
push
cli
mov
imul
dec
jno
cmp
pop
adc
pop
mov
or
cs
push
rcll
xchg
fidivl
mov
inc
daa
insl
mov
sub
cmp
xchg
xor
fwait
inc
and
mov
sub
jno
loopne
jmp
or
and
mov
out
mov
cmp
addr16
stc
jnp
pop
arpl
negl
mov
daa
fistl
inc
flds
rcr
lods
cmp
mov
push
push
mov
and
or
lods
mov
pop
or
or
sarl
andb
loopne
imul
std
push
xor
cwtl
lar
gs
imul
cwtl
pusha
mov
cld
out
mov
arpl
add
popa
imul
xlat
push
repz
xor
pop
ja
jg
loopne
xchg
xchg
jle
mov
int
in
mov
and
xchg
sbb
outsl
dec
pushf
arpl
add
adc
inc
and
dec
xchg
enter
pushf
adc
ret
lret
divl
mov
inc
pop
mov
jae
push
pop
call
rcrl
mov
and
jbe
jl
and
test
pop
xor
lcall
cltd
gs
xchg
cmp
iret
enter
and
loopne
add
ds
mov
jg
in
cli
xchg
jmp
inc
sub
enter
gs
call
scas
stc
loope
push
xor
dec
sbb
sub
xor
jmp
mov
aaa
fsub
mov
mov
test
xor
cwtl
dec
clc
mov
mov
xor
and
shll
sub
inc
and
test
adc
pop
push
ficoms
ja
xchg
pop
je
mov
fucomp
enter
push
and
rcl
mov
fildl
pushf
xor
shlb
dec
pop
push
push
sub
lock
sub
and
movsl
pop
movsl
pop
loopne
xchg
hlt
insl
push
pmullw
mov
sub
ja
sbb
mov
insl
cmp
in
clc
fsts
aam
testb
mov
mov
outsl
inc
movups
lock
push
outsb
call
jmp
imul
in
inc
out
lds
enter
ret
mov
sub
fldenv
jmp
xlat
inc
fs
sbb
xlat
cmp
les
xor
call
mov
dec
leave
xor
inc
mov
das
lahf
lods
fnsave
js
lret
mov
push
sahf
sbb
in
cs
ror
xor
sti
mov
rcr
lods
sbb
cwtl
sub
cmp
dec
sbb
mov
xchg
enter
adc
sub
add
ret
aam
aad
sub
mov
mov
xchg
add
test
mov
adcl
sbb
adc
fwait
sbb
add
rcll
daa
subl
or
stos
or
fidivrs
test
leave
xor
sub
jnp
pop
test
cmp
pop
daa
pop
xor
inc
and
ljmp
sub
add
pushf
add
xchg
inc
and
cmp
mov
aam
or
jg
jge
mov
pop
cli
scas
arpl
inc
and
adc
and
jb
cmpsl
in
aas
outsl
or
jl
mov
xchg
hlt
les
in
data16
add
xchg
mov
mov
scas
movsb
cltd
mov
rolb
cmovp
mov
adc
fdivl
pop
iret
out
rclb
xor
mov
mov
ds
js
repz
xor
icebp
stc
mov
fstl
xchg
inc
and
pop
lret
sub
in
aas
out
arpl
popf
jecxz
test
insb
jbe
jae
arpl
xor
aas
mov
cmpb
mov
in
out
xchg
cmp
or
lret
fs
add
outsb
sub
icebp
pop
or
negb
inc
inc
and
lret
cmp
hlt
mov
jnp
lds
add
xor
inc
mov
mov
fdivs
cmp
or
dec
cmp
cmpsl
mov
xor
xor
js
aad
stos
mov
insl
sahf
cmp
mov
cwtl
jmp
jb
mov
xor
adc
out
sub
inc
xchg
sub
jne
and
pop
pop
int3
mov
shrl
pop
in
sbb
jp
xor
insb
loopne
dec
sbb
sbb
and
cs
enter
mov
int3
stos
fld
mov
xchg
jle
push
sarl
and
ret
sarl
cmpsl
ja
add
fcomps
subl
sub
iret
fistps
adc
pop
inc
and
ds
sti
xchg
mov
js
fs
jno
cmp
mov
fmull
jecxz
mov
xor
sbb
js
mov
adc
or
sub
test
inc
and
out
mov
loopne
push
rcrb
jmp
fdivrl
and
jb
icebp
pop
fs
mov
xor
xchg
jnp
dec
sub
loopne
jle
pop
or
fnstcw
adc
cmc
inc
and
subb
pop
inc
jle
insb
arpl
mov
fldt
test
cli
xor
imul
sbb
and
rorl
jecxz
xchg
cmp
stos
loopne
jae
outsl
cmp
inc
sub
and
enter
fst
mov
sub
sbb
mov
shlb
cltd
fbstp
push
leave
push
mov
sub
pop
faddl
mov
in
push
dec
lcall
cmp
jmp
or
fs
fucomp
add
test
jl
fdivr
in
push
mov
rol
xchg
pop
mov
frstor
mov
add
jne
and
or
mov
inc
stos
pushf
pop
jge
and
movsl
std
jno
mov
mov
inc
and
add
push
sub
iret
or
inc
lds
rclb
cmp
inc
xor
sbb
jp
stos
xor
mov
leave
mov
mov
jno
xchg
dec
cmp
xchg
fdivs
add
adc
push
ffree
xchg
lock
xor
mov
lods
mov
lea
xchg
psubusb
pop
or
enter
xchg
lods
shl
dec
enter
pop
jne
ret
lret
or
xchg
in
hlt
cmp
mov
ljmp
fnsave
sub
inc
and
negl
cs
sar
rcrb
pop
jp
les
and
repnz
test
mov
mov
sti
mov
xchg
mov
in
pop
xor
xlat
imul
xchg
into
jb
notb
mov
xor
and
mov
out
test
in
xchg
enter
js
dec
sbb
es
xchg
cmp
inc
pop
push
adc
pop
or
and
repz
push
jne
sub
xchg
cmp
sub
leave
xor
push
mov
lret
hlt
bound
insb
jb
rcl
ja
out
push
les
jmp
mov
sbb
and
stos
jns
mov
sbb
les
int
inc
pop
and
xor
mov
mov
jl
and
inc
fldenv
inc
sbb
cmp
aaa
xor
inc
and
rcll
xchg
adc
add
daa
or
aaa
js
push
lock
lret
or
repz
mov
lock
and
out
insl
mov
dec
fstp
lcall
pop
out
xchg
mov
xor
cwtl
not
lret
ret
push
hlt
add
aad
pop
push
test
fadds
xchg
enter
cltd
inc
mov
xchg
sbb
jmp
jne
lahf
inc
repnz
ror
or
jno
icebp
push
fisttpll
adc
shrl
sbb
xor
xor
cmp
gs
inc
inc
pushl
and
shll
negb
mov
in
scas
shr
jle
mov
fcmovne
push
fisttpll
xor
adc
mov
mov
push
mov
xchg
enter
popa
cli
ss
adc
or
add
sbb
pop
shlb
push
jne
pop
mov
das
mov
loop
sbb
add
and
xchg
sti
cwtl
sub
sbb
jae
add
scas
filds
mov
arpl
sub
fs
adc
mov
sbb
out
add
icebp
lds
rcr
sub
imul
in
mov
push
int
pop
push
punpckhdq
adc
sub
pop
xchg
mov
and
gs
stos
sbb
fadd
jle
dec
mov
in
ljmp
or
pop
mov
jae
push
imull
fwait
pop
and
fcmovbe
pusha
testl
mov
insb
pop
xor
and
add
xchg
push
das
pushf
lea
lods
scas
mov
loopne
pop
pop
xchg
inc
jmp
notb
shll
xlat
repz
fs
mov
adc
mov
inc
in
in
je
div
repz
jge
pusha
cmp
stos
test
sahf
xor
mov
scas
sub
sub
out
adc
xor
jo
xchg
sub
push
dec
scas
test
ja
cmp
fs
mov
cmp
push
cmp
xor
and
ficoml
stos
imul
cmpsb
cmc
mov
jl
jae
out
je
aam
arpl
fdivr
mov
aas
push
push
mov
lahf
xchg
ss
es
aas
pop
std
adc
xor
fmull
inc
mov
mov
repnz
pop
popa
arpl
cmp
push
cmpsb
sub
mov
out
je
inc
sahf
mov
mov
adc
inc
test
fcmovnb
xchg
cmp
mov
mov
fnstcw
and
and
lods
and
enter
cmpsl
xlat
fisubrs
mov
fwait
dec
scas
mov
xor
cmp
outsb
imul
call
out
inc
jmp
cmp
bound
sub
imul
out
stos
sub
sub
rorb
rolb
mov
test
insl
cmpsl
mov
in
fbld
cmp
mov
adc
stos
sub
enter
shrb
xorl
gs
lds
push
adc
loope
stos
dec
inc
and
dec
ss
dec
mov
xlat
or
and
dec
aas
pop
or
mov
mov
xor
mov
lret
add
mov
inc
arpl
pop
add
arpl
pop
push
sbb
push
test
outsb
xor
jmp
pop
cmp
enter
push
xchg
xchg
push
sbb
adc
push
popf
das
jnp
jecxz
sbb
ror
fstps
lret
add
push
enter
inc
add
pusha
xchg
jmp
push
or
sbb
scas
mov
movsb
mov
negl
and
push
mov
mov
scas
shll
jnp
mov
popw
sbb
xor
push
ret
fmul
std
loopne
sub
aad
inc
xchg
repz
sbb
es
fs
pusha
sub
xchg
lahf
loop
pop
gs
movsb
adc
dec
xchg
scas
sbb
out
adc
imul
fnstsw
in
fidivrs
mov
icebp
or
fs
ret
and
inc
sbb
cmp
jb
xor
or
stos
lods
add
jns,pn
mov
popf
xchg
enter
inc
std
pushf
popa
outsl
call
lahf
in
xchg
pop
xor
xchg
sbb
lahf
add
or
jae
and
or
sbb
adcl
int3
cwtl
xchg
mov
jecxz
ret
sbb
sub
push
sub
push
mov
pmuludq
loopne
imul
mov
fsubrp
mov
enter
and
xchg
cltd
roll
adc
xchg
jns
setle
jne
sbb
popa
stc
out
jnp
sbb
sub
out
or
in
add
or
xlat
sbb
adc
stos
jne
xchg
dec
push
dec
faddl
or
pop
push
adc
mov
dec
aad
mov
dec
pop
inc
xchg
insb
inc
jae
dec
xchg
xchg
cltd
jecxz
xchg
addr16
sbb
hlt
cmp
dec
pusha
mov
add
cmp
shrb
xor
mov
jne
xor
fcmovu
xor
pop
or
push
aas
leave
aaa
shll
mov
mov
dec
sub
test
or
sbb
rorb
mov
jne
sti
or
xor
push
sub
and
es
lcall
imul
xchg
jmp
push
or
xlat
lock
sbb
jecxz
sahf
inc
and
fidivs
inc
stc
push
iret
data16
push
cs
xlat
sbb
pop
mov
inc
adc
mov
push
and
push
sbb
sbb
add
mov
addr16
xor
mov
adc
repnz
sub
cld
jbe
pop
mov
sti
sub
sti
inc
and
lock
pop
repz
insb
mov
sub
cmp
scas
les
xor
mov
sahf
jns
inc
fistpl
leave
sub
sbb
mov
fcoml
popa
hlt
fucomip
jg
enter
aam
pop
jbe
test
leave
push
inc
and
xor
and
repz
movsl
sbbb
xchg
popf
cmp
out
or
sbb
xchg
setl
int
pop
mov
jg
rcr
or
test
adc
push
or
sbb
sbb
leave
es
xchg
sub
xor
pop
or
push
fimull
out
xchg
enter
jmp
xor
fnstenv
bound
cld
fisttpl
add
aam
cmp
and
out
outsb
in
repnz
and
mov
xor
push
sbb
dec
mov
ljmp
adc
out
inc
xchg
es
adc
in
xor
aam
test
sub
dec
ret
dec
jmp
imull
js
int3
sbb
ss
inc
and
mov
imul
xchg
dec
jnp
fwait
cmpsl
xchg
test
adc
cmp
cmpb
pop
jmp
xchg
ljmp
pop
popa
push
aas
pop
xchg
inc
jb
dec
pop
push
xchg
pop
xchg
mov
sbb
pushf
or
xor
push
rcrl
out
shl
dec
icebp
repz
pop
pop
inc
cmp
test
movsb
nop
xor
insb
rcll
loope
aad
in
imul
clc
das
pop
ljmp
and
pop
ds
pop
mov
fcomi
xor
lods
xchg
pusha
fildl
cmp
mov
nop
mov
in
pop
jne
lcall
mov
cmp
loopne
jnp
fs
rolb
mov
or
pusha
hlt
in
test
push
rcrl
rdpmc
pop
stos
pop
shl
cwtl
add
sub
xchg
enter
and
pop
sub
je
psubusw
pop
aas
jge
mov
shl
xchg
sbb
pop
mov
and
sub
xchg
push
push
cmpsb
or
cltd
xor
pop
and
ficoml
loopne
xor
jae
cltd
ljmp
imul
inc
and
repnz
cmp
iret
push
icebp
adc
sti
push
enter
mov
mov
cmp
jb
cwtl
lea
mov
inc
out
xchg
enter
stc
mov
mov
push
mov
arpl
loope
jb
mov
lret
fmuls
std
dec
stos
mov
movsb
das
mov
push
jae
imul
or
movntq
rorb
mov
cs
mov
push
notl
popa
xor
jmp
push
jecxz
pushf
pop
ret
xchg
push
cmp
xor
cmp
pop
lds
aaa
add
cmp
js
lret
xchg
fisubrl
cmc
test
inc
xchg
mov
mul
and
rorb
pop
aas
outsb
scas
adc
enter
scas
pop
fisubrl
lret
rorb
pop
push
pop
add
and
adc
out
push
mov
xor
sub
mov
jb
sbb
push
sub
fwait
inc
cmp
in
or
mov
lret
cli
push
mov
mov
pusha
push
sbb
xor
movsb
scas
and
push
cmpsl
call
pop
sub
mov
mov
pop
fildl
xor
mov
sbb
or
daa
jmp
scas
cmpsl
lods
int3
imul
jo
pusha
cld
and
mov
push
cmp
adc
dec
mov
inc
repz
data16
inc
ljmp
mov
addb
loop
imul
shl
mov
or
xor
mov
mov
adc
jmp
shlb
inc
lock
push
enter
lea
lea
push
fsubrl
fists
fidivs
repnz
aas
mov
stos
xchg
xchg
xor
sub
or
mov
push
push
fisttps
insl
mov
push
sbb
adc
mov
mov
push
xchg
mov
outsl
test
insb
insb
push
jns
enter
gs
repnz
pop
pop
adc
sbb
cmova
mov
fs
popf
leave
not
xor
mov
loopne
lret
adc
ljmp
in
test
ja
sub
jge
inc
jle
and
ret
sub
sbb
insl
push
mov
sub
xchg
rclb
mov
cmp
rolb
mov
popf
cmp
jb
imul
mov
sbb
jg
or
aas
nop
lret
out
mov
add
arpl
adc
cmp
out
aaa
sbb
out
js
lods
hlt
push
push
iret
loop
mov
shl
cmpsb
push
pushf
leave
pop
add
cwtl
shl
jnp
loopne
cs
mov
insl
pop
xchg
or
push
pop
bnd
inc
sbb
inc
mov
lea
leave
inc
shlb
xchg
jecxz
iret
imul
mov
out
fsub
repnz
push
jnp
xchg
sahf
xor
enter
cs
and
lods
scas
add
or
std
xor
add
cmp
mov
divb
test
pop
push
adc
inc
push
sarb
mov
and
cwtl
lahf
sarb
push
jl
mov
xchg
mov
xlat
hlt
cvtps2pd
dec
movsb
xchg
mov
stc
cld
out
cmpsb
push
in
xorb
push
sarb
mov
and
sahf
fwait
xor
aaa
fcmovnb
out
iret
ljmp
ret
xorb
lds
sarb
push
repnz
in
mov
sub
mov
arpl
mov
xchg
dec
shll
cld
sarb
mov
mov
fisubrl
mov
add
mov
mov
repnz
jp
xchg
dec
test
lods
xlat
pop
lods
mov
mov
std
add
jne
stc
les
push
imul
rcrb
jl
sub
or
inc
sbb
mov
lea
fiaddl
int
fisubs
inc
test
test
pop
mov
adc
into
xor
pop
lods
ficoml
ja
repnz
sbb
jnp
clc
repnz
or
pop
lods
std
pop
sub
jb
lods
ficoml
hlt
xor
sub
movsb
loopne
daa
mov
inc
push
pushf
subb
lahf
daa
jp
xor
mov
clc
sub
xor
cmp
jecxz
stc
cmpsl
sahf
xchg
add
jg
inc
mov
xchg
add
lret
dec
je
or
cli
out
dec
je
sbb
jmp
shrl
mov
subl
popa
pop
adc
add
mov
lahf
pop
adc
jne,pn
pushf
lahf
pop
adc
ds
pop
ljmp
shrl
inc
sbb
xchg
cs
sub
jg
mov
bound
jo
subl
sahf
xchg
mov
xor
enter
imul
xor
pushf
jno
les
push
pushf
mov
in
out
cltd
into
imul
xlat
shr
shr
ret
xor
bound
pop
fisttpll
push
push
ljmp
fimull
cld
sub
sub
pop
xchg
mov
scas
cmp
xchg
mov
pushf
and
mov
jnp
add
xchg
mov
xchg
mov
std
loopne
cld
sbb
test
add
test
pop
fdivl
shrb
cli
mov
add
cltd
daa
sbbb
int
push
test
mov
xor
sbb
xchg
xor
int
ljmp
test
xchg
fcmovb
orl
sti
inc
lret
mov
lods
xchg
inc
movsb
add
cmp
std
ltr
into
sbb
mov
jmp
test
cwtl
jmp
xor
xor
scas
xchg
adc
dec
pop
cmp
outsl
push
sub
cld
or
add
es
sarl
lret
pushf
push
jbe
mov
fcmovne
lahf
fstpl
push
sub
xor
clc
mov
fs
adcl
push
outsb
fldt
mov
aad
mov
mov
jno
testb
sbb
inc
jl
push
aam
int
arpl
fcomip
popf
lahf
pop
bound
mov
stos
jae
leave
ret
fldt
or
or
sbb
add
ffreep
gs
xor
inc
bound
cltd
pop
or
lret
jge
xchg
push
add
xor
idivl
hlt
xchg
repnz
icebp
imul
inc
sbb
das
jecxz
fisubrs
or
das
ja
mov
mov
mov
lret
loope
mov
das
xor
mov
jno
fdivl
mov
xchg
enter
fbld
xchg
int3
jmp
jnp
push
inc
sbb
ret
imul
inc
icebp
jl
rolb
dec
addr16
fs
inc
enter
inc
adc
pop
lods
cmp
out
hlt
xchg
repnz
push
add
in
repnz
inc
sbb
les
imul
inc
idivl
inc
aam
popa
lret
pusha
xor
pop
jmp
adc
cmp
ljmp
dec
shl
jns
push
inc
sbb
rcrb
vphaddbd
imul
rorb
int3
addr16
inc
enter
inc
adc
pop
lods
cmp
in
hlt
xchg
repnz
push
add
out
repnz
inc
sbb
pop
jb
imull
hlt
jl
rolb
dec
enter
inc
enter
inc
push
pop
jp
lods
cmp
jmp
push
push
dec
shl
jp
push
inc
sbb
pop
jbe
vphaddbw
push
lock
inc
rorl
fsubp
jp
inc
enter
loope
ljmp
sbb
imul
nop
jl
rolb
mov
rolb
pop
mov
dec
fcom
jp
lods
cmp
hlt
xchg
repnz
jge
loop
mov
repnz
inc
sbb
imul
pushf
lret
rolb
mov
mov
mov
inc
enter
inc
aam
jp
lods
cmp
lret
hlt
xchg
repnz
jno
out
mov
sbb
imul
xchg
ret
rolb
mov
rolb
pop
mov
dec
jp
lods
cmp
ret
hlt
xchg
repnz
jns
out
mov
repnz
inc
sbb
cmp
enter
ds
and
sti
fnsave
in
lds
add
push
mov
jp
stc
stos
push
cmp
out
stc
stos
movsb
mov
das
mov
mov
in
scas
out
nop
push
mov
imul
ljmp
xorb
lcall
cs
fsubrs
sub
fdivrl
mov
sahf
enter
aam
add
mov
dec
je
popf
jmp
mov
dec
je
rcl
push
jl
mov
out
scas
lret
decb
sar
mov
cli
icebp
jmp
or
ja
sub
movsl
imul
outsb
or
cs
jmp
lret
and
or
push
sti
daa
in
mov
xorb
pop
xor
or
ret
jle
adc
aad
inc
enter
cmpsb
and
jp
lods
sti
mov
mov
inc
xchg
mov
adc
xchg
fs
mov
and
sub
sarl
int3
lods
insl
push
dec
movsb
pop
aad
pushf
jne
or
pop
pop
jae
pop
in
iret
cmp
icebp
push
sbb
stos
cmpb
cmp
add
xchg
sarb
loop
sbb
cmp
std
sbb
lds
inc
sbb
hlt
roll
loopne
test
jecxz
in
mov
xor
popf
scas
icebp
popa
aad
or
cmp
loop
js
cmp
sti
int
shll
dec
pop
jbe
int3
push
aad
xchg
and
loope
call
mov
adc
or
faddl
into
insl
sarb
test
test
bound
xor
mov
push
jnp
mov
adc
and
mov
pop
jo
mov
jp
stc
stos
pop
clc
push
loop
setg
lea
push
push
xor
pushf
add
push
cmp
fldenv
test
lret
or
fmul
scas
push
test
adcb
pushf
rcrb
aad
adc
mov
out
in
inc
cmp
fistl
outsl
lods
xchg
es
shll
adc
pop
mov
push
inc
loopne
sarb
cli
out
xor
hlt
mov
shrb
cld
mov
ret
pushf
ja
pusha
out
or
mov
out
and
push
xchg
daa
mov
xor
outsl
dec
icebp
into
lret
pop
out
cltd
xor
sahf
cmpsl
cmpsl
push
popf
imul
jo
mov
in
xor
pop
sub
in
rcll
mov
push
mov
jecxz
ja
pop
lahf
mov
or
inc
movsl
cmpsb
push
sub
out
cltd
movsl
xor
addr16
ret
iret
lods
mov
jge
je
mov
leave
mov
and
mov
mov
push
sbbb
ret
cltd
fwait
loopne
dec
jl
lods
insl
inc
nop
mov
push
subb
dec
dec
mov
int3
out
mov
in
cmp
pop
bound
adc
jnp
int3
cs
jle
cltd
int
ret
test
xchg
scas
jae
ficoms
int3
out
cltd
dec
and
lcall
jne
adc
mov
jo
and
fwait
loop
jns
add
test
push
cmp
aam
ret
outsb
enter
cmc
cwtl
decb
mov
testb
xor
pop
xchg
repnz
pop
stos
call
inc
mov
pop
cpuid
neg
dec
test
push
ja
movsl
aaa
cld
lcall
mov
subl
out
mov
fisttps
mov
adcl
mov
nop
dec
cmp
lahf
pop
int3
stos
sbb
mov
push
mov
mov
hlt
cltd
popf
enter
cmp
fwait
stos
cmp
cltd
cmp
xchg
lds
popf
mov
jnp
cltd
mov
pop
xchg
lret
xchg
pop
imul
pushw
mov
pop
push
mov
pop
mov
addb
and
ljmp
pushf
shl
sbb
shlb
repnz
pop
int
imul
inc
pop
push
testb
in
dec
sbb
dec
fcoms
pop
add
mov
cltd
stc
inc
add
test
xchg
pop
hlt
pusha
mov
jo
inc
pop
in
hlt
and
adcl
in
movsl
xchg
sbb
mov
push
jae
ljmp
jnp
ficompl
mov
cld
cmp
scas
lods
mov
rclb
sub
sbbl
sahf
rcrb
lea
fiaddl
shrb
pop
out
imul
loope
cld
and
test
xchg
or
daa
jnp
clc
fs
mov
leave
dec
jbe
jne
xchg
adc
imul
push
mov
outsb
add
cwtl
icebp
rorl
pop
aad
ljmp
xchg
shlb
scas
mov
mov
scas
cmp
aaa
pushf
sahf
mov
repnz
cld
mov
and
out
or
cltd
in
lods
lret
dec
aaa
insl
sub
ret
xor
cwtl
xor
mov
mov
push
addr16
popa
roll
mov
xor
gs
xchg
lods
mov
mov
scas
mov
pop
jbe
ds
cmp
mov
and
into
xor
mov
roll
stc
dec
xlat
sahf
push
out
or
es
mov
imul
das
jle
xlat
out
mov
mov
jle
insb
fldcw
in
lods
insl
lods
nop
pop
add
add
push
in
cmpsb
repz
inc
jns
pop
sahf
xchg
gs
popf
fistpll
sub
cmpl
sbb
frstor
sahf
dec
add
sub
imul
fwait
or
adc
xchg
push
imul
push
xorl
jg
inc
pop
test
mov
push
jbe
mov
dec
stos
mov
add
mov
dec
test
fidivl
add
leave
xlat
or
push
arpl
adc
leave
icebp
or
clc
push
xchg
mov
add
xchg
push
testb
out
out
loopne
icebp
push
insl
dec
adc
mov
cmc
adc
jg
pop
dec
dec
cmpsb
pop
mov
enter
jecxz
sbb
lock
or
imul
push
lock
cmp
sub
sbb
and
pop
cmp
lcall
push
jbe
rorl
xchg
mov
cltd
and
cmp
fwait
mov
iret
outsl
sti
scas
cmp
cmp
add
fimuls
and
mov
das
movsb
shl
popa
pop
in
lods
mov
mov
addl
xchg
sbb
inc
lahf
inc
shll
lock
mov
cwtl
xchg
mov
scas
insb
insl
loopne
nop
pop
xlat
mov
dec
nop
je
mov
dec
adc
stos
jecxz
lods
inc
fidivs
or
or
mov
jae
cli
pop
xchg
inc
mov
outsl
xor
mov
jno
mov
mov
xchg
sbb
ljmp
pop
pop
jp
stos
cmc
push
fisubs
jmp
leave
loope
fisubrl
inc
xchg
cmc
call
xorl
fldenv
push
pop
test
mov
jmp
hlt
loopne
add
fs
xchg
cmp
mov
jne
xchg
and
mov
test
outsb
rolb
sbb
aam
cmpsl
popa
test
pop
sub
dec
or
in
sbb
cld
js
lahf
jg
or
pop
imul
push
out
push
dec
mov
adc
aad
mov
jno,pt
mov
jl
cmc
mov
push
ja
xchg
add
and
stos
push
shl
daa
jns
mov
repnz
cld
mov
mov
push
stos
dec
lods
icebp
xchg
xor
mov
xor
fnsave
sbb
push
roll
test
pop
pop
mov
inc
leave
enter
les
ss
and
ds
out
inc
add
popf
fdivp
test
jns
pop
add
add
push
insb
sbb
pop
lahf
dec
arpl
xchg
int
test
mov
arpl
lods
out
rcrl
dec
test
mov
stc
repz
popa
xchg
out
icebp
inc
jae
mov
xor
loopne
jb
mov
in
clc
aad
sbb
ds
clc
sub
inc
inc
cli
ret
fsubs
and
daa
cs
ja
adc
sbb
cli
push
inc
int3
incl
ret
xchg
out
imul
add
mov
add
int3
ret
rclb
test
lret
aad
sbb
repz
fs
movsl
sbb
jmp
roll
cmpl
mov
or
push
hlt
cld
dec
fwait
int
loopne
mov
sbb
into
xchg
cmpsb
mov
dec
xor
xlat
and
mov
jg
xor
out
cmp
push
jg
hlt
fndisi(8087
xchg
xchg
das
jo
mov
mov
lcall
test
cmp
or
daa
int3
mov
inc
lcall
in
testb
jnp
jge
ret
mov
daa
or
stos
push
test
cmp
add
out
sbb
jno
lahf
std
rolb
mov
cmp
xor
adc
aas
push
sbb
mov
add
push
mov
mov
fstpl
or
jae
jmp
cmp
mov
mov
mov
push
mov
and
out
cltd
push
push
incl
cmp
xchg
adc
data16
dec
gs
mov
push
mov
movsb
fcompl
mov
or
ss
adc
mov
in
aad
popa
sub
xchg
out
fs
lret
hlt
je
rcrl
sbb
ljmp
cli
popf
and
fnstcw
imul
fwait
cmp
lcall
fadds
jb
scas
mov
xor
xchg
xchg
sub
mov
push
jbe
jb
hlt
ds
shrl
mov
sbb
cwtl
push
xchg
sub
add
sub
test
lea
or
xchg
and
call
mov
mov
mov
sbb
stos
jl
inc
jmp
sbb
mov
lds
mov
jg
addr16
addl
push
push
sarl
mov
dec
addr16
lods
xchg
inc
out
cmp
fmul
pushf
in
xor
daa
inc
inc
sahf
test
loope
inc
jg
dec
push
imul
insl
sub
jecxz
sarb
adc
pop
jae
js
in
mov
aaa
ret
mov
adc
inc
int3
dec
jg
nop
aad
inc
jecxz
push
jmp
aam
xor
or
enter
ficoms
sub
imul
mov
sub
int3
mov
pop
enter
mov
and
mov
mov
ljmp
pop
sbb
mov
adcb
sahf
jl
add
xchg
sbb
loope
add
mov
shlb
je
lcall
and
je
add
sbb
xchg
leave
arpl
xchg
mov
jg
int3
pop
xor
jecxz
push
xchg
insl
xor
mov
cmp
fstps
mov
loopne
sub
jecxz
stos
andl
adc
insl
scas
cmp
dec
and
jge
jne
dec
ljmp
mov
andb
xchg
cmp
mov
and
adc
xor
iret
cltd
test
xor
mov
lret
int3
icebp
jp
pop
out
icebp
imul
fdivs
std
jge
pop
nop
jno
fidivrs
pop
push
scas
mov
andl
aam
mov
movsl
lds
xchg
sbb
dec
loopne
pop
mov
call
repz
dec
cwtl
test
pop
repnz
mov
lret
mov
pop
mov
mulb
or
into
push
sbb
jns
xchg
fists
in
pop
mov
sub
mov
jg
lahf
popa
shll
lea
and
mov
jecxz
es
mov
ret
lock
je
sahf
jb
mov
mov
mov
negl
inc
out
imul
cmc
andl
lret
fisubs
lods
mov
loop
mov
in
dec
in
stos
mov
pop
or
je
cmpl
fs
mov
sbb
push
inc
mov
daa
arpl
test
xor
push
test
jmp
push
movsb
pop
ljmp
mov
mov
loopne
sbb
xor
lock
mov
xor
xchg
mov
sub
and
xchg
js
rcrl
xchg
loopne
bound
xor
int
mov
mov
cmc
loope
dec
fstpt
iret
rolb
aaa
lock
xchg
repnz
adc
cmpb
lods
pop
test
sbb
push
stos
stos
fdivl
stos
out
fistpl
jmp
sub
mov
cmc
aaa
or
lret
lcall
jg
mov
gs
js
clc
or
and
std
aas
jl
xlat
sbb
mov
lret
xor
sub
iret
xlat
cld
insl
push
loopne
mov
cmc
xchg
sub
outsb
dec
cmc
loope
push
leave
xor
xor
or
mov
cmc
inc
pop
mov
sti
xchg
mov
lock
fidivrl
cmp
cmp
mov
add
negl
cmc
imul
jg
cmpsl
sarb
filds
mov
neg
test
pop
scas
sub
sub
jmp
js
mov
insb
test
shlb
xchg
cmpsb
icebp
xor
cmpsl
loopne
nop
cmpsl
xchg
mov
test
xchg
push
sarb
popf
loope
mov
xchg
lods
mov
cmp
out
stos
adc
jae
mov
das
jno
pop
mov
cmp
iret
inc
push
lods
sbb
jge
repnz
xchg
adc
mov
dec
popf
mov
cwtl
add
cs
ss
out
insl
ret
jg
in
pcmpeqd
xor
jb
outsb
jge
or
xchg
inc
jbe
sbbl
add
inc
jno
clc
add
out
aaa
mov
mov
fidivl
adc
sub
xchg
mov
stos
adc
popf
jno
hlt
push
sub
xacquire
and
mov
inc
test
sbb
inc
push
push
cltd
sub
xchg
mov
fbstp
ja
popa
sub
shr
cmp
pop
dec
sbb
leave
ret
pop
clc
in
mov
pop
inc
xor
mov
jae
lods
mov
push
mov
inc
popa
ljmp
insb
or
into
jg
dec
xor
cmp
jno
mov
aas
out
fldl
daa
jns
int
and
stc
repnz
mov
mov
addl
int3
fbld
rcll
cmp
fstps
push
cmc
and
aam
pop
add
xchg
into
out
dec
fwait
push
jno
adc
pusha
inc
lahf
dec
dec
lahf
popa
fs
divb
shrb
jo
xchg
lods
movsl
push
ret
in
xor
rcl
mov
lret
int3
inc
push
dec
adc
xor
fs
cltd
push
cli
adc
dec
ss
xor
mov
inc
dec
jae
push
xor
and
movsb
lcall
out
movsl
fsubrp
adc
in
ljmp
rcrb
jnp
xchg
dec
in
ds
ficomps
in
sbb
mov
and
xchg
add
es
cltd
insb
lea
lock
cmp
fwait
add
xor
imul
xchg
fsubs
push
ljmp
mov
into
je
imul
mov
xor
leave
shl
data16
in
aaa
test
movl
lret
mov
inc
enter
outsl
call
ss
xchg
inc
movb
push
lret
mov
mov
and
push
pop
and
popa
es
mov
cvtps2pd
xchg
lock
hlt
push
dec
stc
aas
sahf
mov
jp
repnz
inc
sbb
and
notb
xchg
jo
jp
lods
ficompl
pop
jp
mov
out
ret
mov
jmp
jp
mov
or
ds
movsl
xor
shl
repnz
dec
stc
addl
lods
xorb
test
shl
sbb
mov
pushf
mov
scas
sub
insl
scas
dec
je
mov
ror
insb
adc
pop
xor
or
and
stos
stos
ret
loop
push
push
int
xchg
jnp
fildl
sti
jle
jns
dec
cltd
aam
xchg
push
xchg
loop
insb
xor
cmpsl
out
stos
mov
out
cltd
mov
movsl
sahf
stc
stos
imul
iret
mov
or
jbe
adc
xor
cmp
mov
and
add
jne
lcall
idivl
xchg
xchg
push
mov
or
clc
in
xor
iret
pop
nop
idivb
xchg
pushf
dec
orb
loopne
mov
repnz
pop
cmpsb
cmc
mov
jae
inc
fucom
or
or
dec
inc
loope
fmul
loop
stos
mov
xchg
push
in
decl
adc
pop
shll
mov
aas
mov
mov
shrb
cwtl
add
or
mov
pop
push
shrb
dec
adc
mov
jmp
andb
xchg
je
arpl
mov
add
out
in
dec
ja
enter
inc
mov
out
rorb
inc
dec
push
xchg
pusha
addb
enter
lahf
cmc
sbb
pop
adcl
sub
pushl
out
xchg
sbb
das
loopne
cs
loopne
adc
mov
mov
call
xchg
scas
and
outsb
sarl
dec
cld
js
shl
mov
jbe
imul
push
ss
leave
test
push
subl
incb
jmp
in
inc
adc
cmp
fisubrs
jnp
int3
imul
leave
mov
jne
mov
dec
in
mov
push
arpl
fcoml
jne
shrb
test
fcoml
cmpl
jmp
jno
jge
lock
fisubrl
mov
loopne
notl
imul
inc
fstpl
ret
xor
or
jne
lds
out
lcall
cmp
mov
jecxz
daa
test
cmp
mov
pop
sub
leave
push
pusha
movsl
mov
xor
pop
adc
fnsave
dec
out
cwtl
and
jo
sub
sub
cmp
mov
scas
ljmp
ret
jne
jae
add
int3
lahf
push
dec
fcompl
test
je
push
js
insl
sbb
ljmp
dec
mov
mov
dec
inc
cmpb
jge
mov
pop
insb
add
cltd
out
adc
inc
mov
cs
mov
bound
lds
icebp
push
pop
inc
nop
cmpsb
daa
insl
pop
je
lds
lret
sub
cmp
xchg
mov
and
fwait
out
inc
fiadds
dec
ds
mov
mov
and
addb
mov
dec
jbe
ja
xchg
pop
pop
insl
lods
adc
test
mov
xchg
push
out
mov
mov
xchg
ja
lret
popf
push
es
and
pop
lret
jecxz
mov
enter
jo
lcall
xchg
push
in
movsl
mov
inc
fst
lahf
adc
pop
lds
std
je
fidivrs
xor
loopne
xor
xchg
dec
stc
notb
out
push
dec
daa
jle
mov
fsubrl
xor
lds
pusha
jecxz
cmp
xor
mov
push
popf
out
jmp
lret
lcall
sub
icebp
fwait
enter
and
mov
hlt
lahf
lret
push
push
inc
pop
adc
push
mov
jp
andb
lods
std
ja
leave
jo
inc
call
add
fnstcw
out
cs
xchg
daa
bound
inc
pushf
push
fisttpl
fstpl
pusha
cltd
and
mov
and
cmp
sbb
mov
test
xchg
xchg
or
cmp
aas
push
jmp
roll
or
mov
xchg
outsb
repz
and
xchg
cmpb
inc
hlt
in
arpl
nop
jg
mov
or
inc
sbb
sub
cmp
pop
movsb
hlt
jno
ja
adc
mov
into
sbb
loop
fisubs
mov
sbb
inc
cmpb
pop
out
mov
xchg
jecxz
adc
std
xchg
cmc
inc
lret
fs
xchg
mov
aaa
faddl
fmull
lds
test
stos
jmp
divb
mov
into
out
sarb
jb
shlb
outsl
ret
cmpsl
or
stos
push
xor
bound
cwtl
mov
xorb
jmp
movsl
cmp
out
stos
adc
xor
pop
outsl
jmp
jl
jle
rep
pop
push
out
aam
cli
adc
in
repz
test
pushf
add
inc
andb
vaddsubps
mov
in
rcr
cltd
insb
jp
aad
je
fdivs
sub
fistl
aas
outsb
fcompl
add
cmp
cmp
dec
adc
sbb
shr
into
jg
pop
cwtl
mov
adc
movsb
cmp
pop
cwtl
repz
lret
cs
cld
and
in
mov
adc
mulb
mov
test
inc
and
mov
mov
pop
mov
pusha
fldl2t
push
push
push
dec
xchg
jl
inc
stos
fpatan
pop
xor
leave
lcall
enter
les
imul
xchg
push
push
icebp
lahf
test
fisubrs
xchg
iret
jo
xlat
and
js
add
fisubs
xchg
insb
dec
aad
fisubl
popf
aam
jnp
inc
ljmp
xor
aas
imulb
mov
daa
lret
pop
cmp
xchg
and
lock
jo
jne
lret
push
mov
lret
stos
pusha
aad
push
fcmovne
jbe
adc
aad
jo
mov
pop
push
out
fcmovnbe
gs
hlt
sub
fcompl
jp
mov
sahf
cwtl
xor
outsl
mov
test
pushw
cld
lret
xchg
out
pop
ss
in
movsl
mov
out
add
mov
lret
fbld
sbb
fneni(8087
xor
push
je
stos
iret
outsb
aas
mov
out
lock
mov
mov
push
int
dec
scas
adc
mov
or
ror
jo
lcall
test
or
push
xchg
sti
bound
sahf
ret
das
loopne
inc
or
cltd
lret
cmpsl
fsubs
jbe
fisubrl
mov
aad
push
xlat
fnsave
jbe
or
adc
xchg
pop
xor
fisubs
adc
add
jb
or
xlat
jbe
adc
and
cmp
pop
or
adc
cli
out
pop
sub
or
pop
pop
mov
jno
aam
cmp
mov
jnp
pop
pop
adc
jno
clc
ficoml
push
dec
adc
fs
mov
sbb
movsl
negl
sub
mov
rol
mov
sbb
mov
enter
push
aaa
ljmp
inc
mov
mov
cmp
pop
out
nop
mov
jmp
jl
outsb
cmc
ficoml
rcr
cmp
cli
xor
jmp
ret
mov
inc
stos
cmpsb
jbe
imul
mov
popf
xchg
push
pushf
mov
ret
subl
push
or
mov
jecxz
and
mov
lds
data16
movsl
xchg
stc
and
pop
push
or
inc
and
int3
cmp
insl
xchg
sub
popa
and
fiaddl
mov
xchg
cmpsl
mov
sub
mov
sub
clc
mov
lock
out
dec
fisttpl
sub
sbb
pop
jns
les
jns
inc
cmp
sbb
subb
mov
test
rcr
jl
shll
cmpsl
je
add
inc
mov
loopne
ss
ljmp
cli
ljmp
add
insl
pandn
mov
pop
cwtl
cmpsb
xchg
lds
insl
jmp
push
sarb
push
into
mov
int
push
lcallw
jg
jmp
pop
push
les
daa
pop
imul
stos
test
aad
jo
jle
and
test
adc
sbb
pusha
imul
ss
xor
jg
dec
xchg
jb
clc
xor
mov
das
aas
rcll
fcoml
add
sub
maskmovq
mull
dec
je,pn
popf
inc
loop
sti
cmp
jle
mov
push
sub
dec
cltd
rcr
mov
add
scas
pop
rorb
adc
cld
inc
pop
stos
hlt
filds
arpl
lret
out
xlat
movsb
cltd
mov
mov
add
stos
and
xchg
jg
sub
lds
or
cmpsb
jge
xor
ret
sbb
sub
mov
mov
jns
mov
jb
jecxz
inc
mov
sub
call
loope
ja
or
cmp
fisttps
rorl
jae
add
push
leave
xchg
or
inc
addr16
in
je
jb
rcll
xor
aad
xor
cmp
pushf
rcll
mov
ds
fwait
pushf
mov
lret
fs
divl
mov
movl
aam
and
mov
mov
movsb
jl
or
xchg
outsl
js
jns
jmp
fidivl
sub
cmpsb
pop
ljmp
cmc
lock
subb
addb
mov
adc
or
adc
xor
mov
sbb
xchg
add
and
push
ds
add
insl
icebp
xor
and
jno
add
mov
fwait
out
lret
aas
mov
ficoms
in
sub
iret
jg
push
int
xor
jmp
push
and
mov
aas
mov
sub
xlat
mov
sbbb
icebp
mov
stos
fdivrs
imul
sub
cmpsl
and
xor
mov
inc
pushf
cltd
ret
sti
dec
lahf
icebp
cwtl
scas
ljmp
jns
dec
gs
xchg
inc
repz
sbb
dec
mov
push
int
mov
and
fimull
jne
repz
cwtl
or
pop
int3
sarl
xlat
out
sbb
insb
in
das
sbb
inc
nop
data16
into
cmp
arpl
aam
sub
xor
inc
adc
mov
sti
inc
hlt
sub
ds
leave
insb
out
jns
sti
push
and
notl
pop
lods
ror
ss
jno
into
lods
cmp
test
outsl
sar
jno
shl
inc
and
jmp
mov
dec
jo
pop
add
add
das
jmp
stc
cmp
test
and
cmp
call
xlat
gs
sbb
lods
outsb
mov
imul
dec
xor
in
jbe
adc
insl
add
cmp
dec
cmp
ja
jbe
mov
jp
jo
imul
jg
mov
push
pusha
jo
dec
js
aad
push
lock
sub
push
xchg
sahf
xchg
jo
and
loop
sbb
push
and
mov
mov
aad
call
xor
add
or
add
iret
or
sbb
imul
minps
inc
loop
pop
dec
sahf
pop
pop
lret
xchg
mov
cmc
inc
enter
fiadds
les
push
push
sahf
rcll
dec
adc
in
xchg
and
mov
std
mov
lea
into
mov
dec
addr16
cmp
subl
cwtl
or
repnz
add
dec
movb
jp
shrl
addb
xor
ss
sub
cs
ss
mov
and
int
je
push
lds
imul
mov
jmp
cs
enter
clc
and
fistl
and
dec
ret
mov
jecxz
pop
clc
scas
in
pop
int
fcom
xor
xchg
mov
add
push
mov
test
xor
xchg
enter
push
pop
loopne
andb
xor
dec
mov
nop
jae
ja
jb
aaa
push
pop
jl
sbb
mov
xchg
ja
icebp
xor
jbe
daa
sub
icebp
cmpsb
sbb
cmp
ficomps
add
leave
sub
push
cmpsb
mov
inc
and
add
sub
inc
inc
cmp
xor
sti
imul
sub
xor
pop
test
fldl
fdivrl
adc
dec
push
add
cmp
and
jle
lret
bound
dec
xchg
add
fldcw
inc
loopne
out
ds
cmp
enter
dec
jl
push
mov
in
sahf
xchg
mov
jmp
out
inc
mov
mov
inc
and
push
push
jle
push
dec
mov
jo
stc
pop
adc
mov
jge
sbb
push
add
pushf
or
pusha
repnz
dec
mov
int
lahf
xor
mov
push
xor
mov
add
push
or
jns
icebp
les
push
out
out
bound
fwait
ret
and
xor
and
pop
push
add
pusha
sub
jle
jb
outsl
cmp
data16
adc
xor
mov
push
sbb
xchg
pop
jge,pt
cli
mov
jge
push
inc
filds
repnz
jae
jmp
cld
and
ret
dec
adc
das
pop
leave
sub
mov
loopne
adc
inc
mov
xor
or
mov
call
jb
inc
push
push
mov
sbb
jno
ud0
bound
cmp
xor
test
or
cli
jno
xlat
fs
filds
dec
mov
or
inc
cmp
and
push
icebp
pop
mov
inc
jecxz
inc
enter
inc
decl
cmp
xchg
xor
aad
bound
aad
imul
inc
sub
push
lock
scas
xorb
push
cmpsb
ret
cld
loopne
lret
setnp
jl
mov
addr16
cmp
mov
shll
mov
pop
addr16
mov
aad
ds
pop
jno
fcomip
gs
in
push
xchg
mov
into
repz
aas
jp
fldt
jbe
mov
outsb
sbb
add
xor
int
aad
dec
int
xchg
push
fcompl
add
xorl
int3
jecxz
mov
lods
lret
adc
cmpsl
mov
fsub
lahf
js
ret
gs
sahf
lret
dec
call
xchg
mov
and
lcall
mov
into
xchg
data16
dec
jno
mov
push
movsb
mov
push
loopne
mulb
loop
aam
lret
inc
clc
jo
ds
stos
sub
clc
lret
sbb
movsb
stos
mov
repnz
mov
sahf
inc
cwtl
mov
ja
xchg
pop
sbb
div
xchg
andb
test
je
mov
push
inc
fstl
mov
fs
lcall
lock
test
xchg
vpunpcklwd
bound
jg
cmp
dec
inc
pop
cs
repz
mov
mov
push
mov
jns
and
fcom
sbb
dec
cmp
mov
push
call
movsl
rcrl
lods
mov
sub
cmpsb
jecxz
incl
add
lret
bnd
cmp
std
xchg
dec
lret
jbe
adc
sbb
into
testb
fnclex
ljmp
adc
enter
jp
scas
and
jmp
add
sbb
mov
sbb
lret
xchg
mov
test
mov
int
or
aam
sbb
lods
or
fimuls
push
mov
dec
mov
dec
sbbl
js
xchg
imul
sub
pop
push
std
pop
pop
jbe
xchg
out
rol
sub
xchg
lods
iret
push
jg
fnsave
xchg
stos
dec
mov
movsb
mov
mov
arpl
icebp
rcrl
and
mov
sbb
mov
outsb
addr16
or
movntps
add
cmpsl
test
pop
lods
inc
rclb
jg
jb
jae
jmp
cmpsb
sbbb
test
pop
mov
xchg
xchg
iret
pop
mov
fbld
pop
pop
out
inc
xchg
sar
enter
jecxz
ret
add
in
aas
daa
dec
daa
mov
xchg
fidivs
fdiv
add
push
mov
jl
mov
xchg
sbb
jae
insb
ret
sbb
test
sub
in
pop
aad
add
pop
cld
push
in
push
jb
add
or
mov
jl
into
sbb
loope
sub
push
sbb
push
fsubr
and
enter
mov
xlat
inc
aad
insl
mov
push
std
xor
clc
cltd
shlb
lret
test
scas
xchg
dec
mov
and
movsb
fnstcw
sahf
fildll
sbb
rcrb
xor
mov
mov
sub
or
adc
pop
daa
mov
mov
aam
cmp
repnz
out
mov
mov
jl
cmp
or
js
mov
leave
dec
out
mov
xor
sub
add
xchg
divb
testb
call
insb
daa
cwtl
lock
push
aam
hlt
shlb
jae
mov
in
popf
lret
pop
xor
mov
pop
adc
mov
fcmovne
jmp
jecxz
fmull
and
dec
xor
xchg
pop
dec
pop
jae
in
movsl
dec
loopne
xchg
popa
mov
test
mov
xor
clc
mov
addr16
in
add
fnstcw
jmp
mov
jmp
cmp
incb
sbb
insb
rcrb
and
inc
sub
adc
add
stos
loop
jg
cmp
outsb
xor
add
push
test
xor
call
sahf
insb
pusha
outsb
jge
jecxz
icebp
adc
xor
jg
mov
data16
adc
inc
mov
movsb
push
add
cmpb
xchg
rcll
addr16
ja
xchg
inc
fsubrl
repz
mov
pop
jno
cli
pop
into
jmp
pop
stc
icebp
ret
insl
or
mov
sub
popa
test
xor
xchg
ret
mov
pop
pop
dec
fmulp
out
jo
adc
and
pop
mov
aam
call
fistl
cmp
lret
test
js
mov
lret
test
add
idivb
insb
aam
sbb
imul
sbb
mov
arpl
js
scas
cmp
lods
add
inc
and
cmp
push
mov
xor
popf
cmpb
sbb
pushf
popa
insl
mov
xor
or
jp
sti
mov
mov
dec
scas
bound
pop
testl
jl
scas
out
xchg
bound
fsubrs
push
in
cld
scas
sub
sbb
es
or
fsubrp
nop
dec
repnz
es
adc
jo
ja
outsl
or
fmull
or
cmp
lock
push
test
testl
mov
inc
loope
fisubs
testl
pop
jb
fistpll
test
add
clc
cmp
sbbl
cli
push
mov
mov
int3
orl
pop
xchg
jecxz
hlt
jnp
inc
leave
push
pop
xlat
cwtl
and
jecxz
push
inc
sarb
mov
ret
jmp
mov
push
mov
sub
push
jbe
mov
aas
in
xchg
movsb
jmp
dec
mov
mov
xor
ds
je
sbb
loopne
dec
lcall
and
inc
add
mov
xchg
or
add
xchg
pop
cmpsl
cltd
push
aam
lea
in
sbb
cmp
push
mov
pushf
cmpsb
push
xchg
out
in
aas
mov
jb
fmull
lahf
sub
sahf
aam
lea
test
js
and
ret
js
loopne
cmp
repz
enter
repz
mov
inc
mov
and
push
mov
and
imull
lahf
jno
lock
lea
enter
movl
dec
cli
fwait
movsl
mov
es
mov
add
lock
pusha
inc
cmp
sbb
and
jbe
scas
xchg
sahf
cli
and
out
mov
dec
cmp
push
ret
mov
testl
jb
xchg
add
scas
jb
stos
xchg
pop
pop
clc
call
into
sub
push
lea
cmpsb
dec
adc
sbb
cld
hlt
push
or
int
adc
push
sbb
loop
adc
repz
add
pop
xor
jb
xchg
test
sub
imul
push
inc
daa
inc
xchg
in
je
out
dec
leave
cmpsl
addr16
ret
add
daa
and
insb
lods
or
cmpsl
shrl
and
inc
enter
sti
clc
push
add
inc
push
movb
xor
jae
cmp
xor
mov
cmpsb
xchg
push
xor
scas
adc
loop
pop
sub
aad
stos
pop
jb
cli
mov
cmp
jmp
mov
andl
imul
xor
mov
test
xor
inc
sub
out
pop
cmp
scas
inc
lret
mov
rolb
mov
add
jmp
fs
cmpsl
cmpsb
lret
cmp
jo
xor
push
xchg
push
mov
ficoms
sbb
or
filds
mov
xor
adcb
out
mov
decl
add
mov
shl
sub
pop
mov
pop
adc
out
push
test
stos
les
daa
mov
fcmove
outsl
shlb
mul
cs
je
adc
inc
xchg
insb
imul
test
or
dec
sbb
jo
sahf
dec
jge
fcoms
je
mov
adc
lock
int
sahf
lds
fadds
mov
in
aad
add
lcall
mov
push
nop
xchg
jnp
and
xchg
lock
push
inc
stc
je
dec
push
sbbb
cwtl
int
push
xchg
subl
mov
xchg
sbb
je
pusha
fbstp
mov
jno
or
jbe
push
imul
out
cmp
popf
xchg
xchg
or
dec
lret
stos
and
in
push
loope
ja
cmp
sbb
inc
call
popf
jo
dec
lea
lds
fwait
xchg
xchg
lock
lret
sbb
dec
call
sti
mov
ds
std
xor
mov
daa
mov
jne
icebp
les
or
fwait
lds
jnp
popf
ret
mov
jnp
cli
xorb
ret
xor
or
push
ffree
popa
pop
jnp
dec
or
push
ds
in
test
int
jnp
mov
cld
mov
dec
adc
lret
out
jp
and
movsb
aad
in
repnz
xor
int
push
add
sub
add
aad
mov
lret
cmc
and
andb
test
jl
aam
mov
mov
lahf
imul
push
ja
test
icebp
pushaw
fwait
mov
mov
vaddsd
add
xchg
clc
jns
pop
call
or
fadds
fwait
adc
lret
xchg
mov
adc
add
or
cli
jle
sti
jle
addl
push
test
fsubrl
pop
sub
mov
inc
adcb
push
add
inc
mov
or
lahf
inc
adc
sub
jge
push
in
xchg
mov
jae
lcall
lcall
jmp
adc
nop
jmp
push
mov
rcrl
pop
std
inc
ret
adc
aaa
jno
mov
jmp
mov
cli
cmpl
mov
icebp
sub
push
ficomps
mov
jecxz
xor
xor
arpl
push
push
add
aam
xchg
sub
adc
addr16
stos
mov
fdivr
jg
rcl
ficoms
repnz
jo
pop
loop
mov
mov
sub
cmp
test
imul
inc
mov
sti
jge
rcll
xor
into
dec
ret
jl
sub
push
jle
xchg
cmpsb
inc
and
movsb
and
sbb
push
icebp
push
scas
cwtl
stos
hlt
jbe
mov
push
sbb
xchg
faddl
hlt
cmpb
aam
xor
ljmp
inc
sbb
loop
push
push
pop
dec
cmp
mov
ret
cmp
lods
push
insb
lahf
pop
aam
addr16
aaa
lret
fisttps
outsl
aad
iret
sahf
out
pop
mov
icebp
fnsave
bound
and
jmp
jl
fldcw
arpl
mov
jle
dec
stos
out
test
and
sti
movsl
aas
arpl
lcall
aad
bnd
lods
and
and
shrb
xchg
lret
lods
repnz
sar
mov
push
js
and
pop
sbbb
pop
sbb
rcll
dec
popa
pusha
enter
xchg
fisubrs
int
out
cmp
cmpb
xchg
xchg
in
imul
push
pop
sahf
insl
in
add
repnz
gs
test
push
and
pop
int3
pop
subl
push
or
mov
jne
lret
cmp
ss
mov
popa
imul
fsts
clc
pop
sub
adc
xchg
cmp
rcpps
mov
pop
jbe
inc
dec
push
ret
push
sahf
jmp
jbe
cs
lret
mov
lods
pop
jbe
addr16
inc
lahf
push
mov
ret
jge
mov
test
in
sbb
adc
movsb
test
das
mov
std
ficoml
addr16
test
fsubr
cmpsl
gs
add
inc
mov
mov
xchg
scas
xchg
mov
js
mov
cwtl
cltd
xchg
sub
icebp
pop
mov
dec
and
insl
gs
clc
pop
ljmp
jbe
sar
pop
xor
and
jmp
int3
and
add
fiaddl
jns
fdivrl
clc
mulb
aaa
dec
pushf
test
fistps
jmp
fcomi
out
adc
ljmp
pop
scas
mov
jne
add
jge
imul
dec
aas
jae
int
in
popf
xorb
mov
scas
mov
or
and
add
inc
mov
ret
sbb
jnp
stc
xchg
lods
push
repnz
stos
xor
fsubs
xor
jns
dec
pop
stc
lret
push
rol
scas
ret
kandb
out
sbb
sub
dec
sbb
mov
shr
pop
rclb
daa
leave
xchg
pop
xchg
cltd
jp
addb
aas
lret
das
mov
repz
sub
test
out
pop
dec
lods
pop
or
mov
inc
push
xchg
js
or
fisttpl
pop
lock
pop
pop
xchg
sub
scas
mov
cmp
adcb
lea
cmp
iret
nop
adc
jg
inc
int
lods
jno
dec
xchg
cmp
and
dec
subl
jo
sub
or
jmp
mov
push
sub
or
movsb
inc
ljmp
out
push
in
lock
rcrb
movsb
lea
mov
pushf
arpl
lods
add
fcmovnbe
mov
pusha
xchg
shlb
inc
xchg
sahf
dec
adc
cld
mov
lock
das
inc
jns
xchg
pop
hlt
stos
and
outsb
lret
xchg
mov
in
sarb
clc
xchg
jg
mov
inc
push
adc
lods
lock
jg
mov
imul
push
rcrl
pop
cltd
arpl
sub
sub
cmp
jl
xlat
rcll
pop
cmp
ds
shr
push
push
cli
pop
jns
aad
and
stos
push
mov
ficomps
push
scas
lret
aad
aaa
je
lea
in
test
adc
mov
not
mov
fsubl
rclb
sub
popa
andb
inc
jecxz
imul
lods
jnp
jae
mov
insl
push
jb
popa
pop
stos
stos
sub
test
stos
in
outsb
mov
lea
add
sbb
data16
pop
adc
mov
out
cmc
mov
jp
mov
test
push
idiv
xor
push
and
rcl
fs
ret
loopne
ret
push
loopne
es
pop
addb
pop
shlb
jg
push
or
gs
or
lret
mov
loop
in
data16
loop
test
shl
scas
or
loope
pop
dec
lods
sbb
or
jae
pop
add
and
mov
test
sub
inc
js
pop
jne
sbb
xchg
adc
inc
lahf
cmp
je
xchg
push
adc
mov
cmpb
xor
movsl
repz
mov
mov
bound
xchg
pop
icebp
nop
iret
push
add
pop
popa
xor
popf
es
arpl
pop
ret
out
mov
mov
into
pop
lods
jmp
dec
icebp
push
or
in
mov
loope
or
movsl
pushf
enter
inc
stos
lret
dec
push
fcmovu
pop
call
jl
mov
imul
aad
leave
cmp
loope
mov
pop
adc
clc
repnz
shll
ret
test
jle
add
je
fstpt
xor
rcll
mov
cmp
add
addr16
arpl
mov
lock
mov
rorb
sub
xor
and
popf
pop
sub
sbb
cmp
imul
imul
xor
xor
and
repnz
daa
jo
mov
sbb
ficompl
or
mov
stc
cmpl
popa
pop
mov
xor
xor
rcrl
xor
outsl
daa
and
mov
xchg
std
push
mov
lret
mov
gs
in
mov
and
push
dec
ret
test
je
insl
gs
pop
rclb
mov
fsubrp
jns
and
int3
mov
repz
stc
fistps
int
sub
mov
mov
mov
imul
lret
mov
and
sub
xorl
xchg
lock
mov
and
push
stos
lret
jb
xchg
repnz
jg
ret
xorb
test
insl
inc
dec
mov
lret
jns
out
adc
sahf
enter
xchg
push
adc
cli
sbb
ret
lcall
jnp
arpl
xchg
mov
arpl
push
xchg
mov
shlb
mov
sbb
cmp
add
xchg
sarl
enter
push
jbe
test
popa
xchg
adc
mov
pop
pop
cs
shrb
mov
push
and
pop
mov
jnp
xchg
mov
outsl
outsl
mov
hlt
repz
add
enter
xor
lret
mov
push
sub
stc
or
mov
insb
packssdw
out
stos
mov
and
mov
insb
mov
shlb
xchg
sub
js
int
aaa
mov
pushl
imul
dec
cli
iret
xchg
shll
mov
jmp
stos
shll
mov
sbb
dec
jp
js
sbb
pusha
lcall
popa
mov
push
popa
mov
subl
stos
mov
xor
cltd
arpl
mov
addr16
sarl
xchg
fcmovnb
push
scas
fstpt
notl
in
in
loope
data16
rcll
jnp
into
das
and
jl
adc
cmp
popf
test
fsts
and
test
xor
adcb
mov
xchg
cmp
enter
mov
push
sub
cmc
cmp
xlat
inc
inc
divb
wrmsr
mov
jge
in
push
lret
pop
jbe
fimull
inc
out
xchg
cmovb
xor
dec
into
roll
mov
xlat
add
hlt
jae
in
rorb
mov
andw
outsl
mov
sti
fisubl
test
shlb
int3
mov
pop
daa
jne
sbb
adc
loopne
inc
test
popa
jg
rol
adc
inc
and
jp
pop
or
lds
and
pop
mov
jo
fucomip
outsb
mov
jnp
scas
xor
inc
test
vdivsd
mov
lock
roll
mov
cmp
loop
mov
mov
dec
cmp
mov
lahf
jnp
lret
stos
pop
roll
mov
call
add
cld
pop
dec
jmp
in
sarb
sub
xor
enter
and
imul
js
cmp
dec
lcall
push
iret
iret
sub
dec
mov
pop
hlt
or
outsl
and
test
mov
pop
push
stc
xorl
fwait
in
or
nop
fdivrs
fdivr
add
inc
cmp
mov
dec
lahf
insl
dec
xchg
pop
stc
jno
push
push
test
cwtl
cmp
pop
mov
leave
mov
adcl
faddp
test
push
test
cmp
xchg
jne
jg
cld
dec
or
out
mov
mov
sahf
cmpsl
lret
jl
xor
outsl
orl
shll
lods
and
or
cwtl
push
push
mov
pusha
call
push
mov
divb
jecxz
out
movsl
and
jmp
xor
xchg
xlat
add
test
jge
jmp
dec
sbb
hlt
lret
aas
sbb
insl
fcmovb
push
pop
fstpt
in
add
lock
mov
adc
or
cmpsl
jg
lret
daa
fsubr
imul
in
push
mov
xchg
stos
fs
fsubs
cmp
push
mov
idivb
ljmp
ss
cld
loopne
outsl
xchg
xchg
pop
test
jno
dec
adc
std
mov
popf
jno
push
out
dec
jge
fidivrl
rorl
adc
mov
movl
push
aaa
jecxz
cmpsl
fstpt
jmp
dec
or
xlat
xor
fs
fs
popl
mov
push
mov
pop
leave
movsb
jne
repz
ss
push
addr16
icebp
stos
cmpsb
fldt
es
int
out
jno
dec
push
pop
faddl
imul
loope
aaa
adc
imul
daa
xchg
cmp
xchg
jle
lods
ret
jo
inc
jo
out
pop
add
dec
fcmove
mov
jo
jmp
fimuls
and
push
and
cmp
outsl
ss
ficomps
js
adc
and
add
insb
cmp
addr16
in
and
pop
lods
iret
movzbl
push
xchg
xchg
ficoml
jo
loopne
xor
jge
insl
cmp
dec
jae
shll
mov
insb
fwait
jnp
into
and
push
loopne
add
outsl
mov
lret
cwtl
bound
xchg
les
leave
and
std
aaa
clc
mov
je
lret
roll
test
jbe
sbb
xor
cmc
dec
sub
and
inc
loope
cwtl
negb
jecxz
js
sti
sahf
xor
enter
pop
out
out
sbb
imul
test
mov
xor
inc
mov
add
int3
fmull
sub
icebp
fs
dec
das
mov
xchg
push
cld
push
imul
outsl
or
in
std
js
call
fistps
pop
sub
inc
insl
sub
sub
or
aad
adc
into
mov
xor
mov
inc
cmp
jns
movsl
pusha
in
inc
mov
ljmpw
repnz
nop
repz
mov
dec
add
mov
xchg
enter
xchg
mov
add
mov
jmp
jecxz
jecxz
lds
push
ds
ret
pop
lret
pushf
push
fmull
pop
pop
hlt
ljmp
xor
data16
test
mov
pop
mov
je
scas
rorl
leave
pop
mov
orl
cltd
cli
out
lods
ret
cmp
lods
push
adc
arpl
xchg
lods
dec
outsb
pop
xor
xchg
cmpl
out
clc
mov
pop
call
sti
fstl
in
jno
pop
insl
xor
fisubl
stos
movsl
imul
dec
les
in
fnsave
pop
test
lret
sahf
aam
pusha
out
call
jns
sub
mov
jg
fistpl
and
mov
pop
xchg
jns
jns
dec
arpl
dec
repnz
outsl
les
sub
ljmp
test
ja
decb
sti
fwait
add
insb
push
es
movsl
daa
in
or
lahf
hlt
or
rcr
outsl
jno
aas
in
addr16
mov
mov
popa
icebp
es
les
aad
ss
out
gs
js
mov
xorl
inc
or
pop
and
js
add
divb
enter
cltd
xchg
push
xchg
lcall
cmc
push
test
sbb
push
test
jge
xchg
fisttpll
jb
cmp
add
ss
popf
mov
sarl
mov
mov
xor
sbb
sub
jp
sarl
insb
push
cmp
cltd
sti
cmp
jno
push
ljmp
cmpl
daa
xchg
loop
popa
lods
dec
cmp
push
imul
cmp
mov
bound
fwait
shl
push
cltd
jmp
mov
mov
fisttpll
adc
mov
pushw
mov
jp
ret
jle
test
gs
aam
ficoms
pop
mov
mov
rol
das
sbb
fcmovnu
push
enter
and
loopne
mov
aam
mov
aad
cmpsb
subl
pop
insl
rorl
sub
loopne
icebp
cwtl
std
dec
movsl
push
fsubl
lret
add
std
mov
loop
fwait
mov
mov
jl
jl
dec
cmpb
repz
jge
cld
pop
aam
cmp
jo
push
aam
xor
imul
out
repnz
sub
sub
call
repnz
sbb
repz
mov
jbe
sub
jns
pop
test
std
jg
clc
sbb
popa
aaa
dec
daa
je
push
lods
movb
arpl
inc
test
push
orb
inc
sub
sarb
mov
enter
jnp
leavew
scas
loope
aas
sub
nop
fbstp
jne
insb
mov
loop
cmp
jns
pop
push
movsb
pop
lock
jecxz
or
fisubrl
mov
jmp
lods
mov
jl
or
mov
clc
mov
mov
adc
shlb
xor
idivb
mov
and
push
in
lods
das
imul
jnp
bnd
pop
jno
leave
xor
jmp
hlt
stos
in
xchg
sbb
cmp
insb
sahf
lods
imul
das
lea
arpl
mov
push
mov
cmp
mov
out
pop
mov
mov
rorb
xlat
jl
mov
sbb
fdivs
add
and
xchg
lods
hlt
call
js
movsb
sub
ss
je
into
mov
mov
and
inc
lock
xchg
sub
fcmovnbe
arpl
in
pop
ficompl
int
stos
arpl
int3
ljmp
std
and
jmp
mov
repnz
mov
jne
or
xchg
and
stos
leave
insb
loope
xor
jl
mov
out
or
push
shlb
inc
and
stos
fldcw
xchg
call
inc
movsb
xchg
xlat
xlat
pop
xchg
mov
and
inc
mov
mov
aaa
and
pop
es
aam
pop
imul
mull
sbb
fisttps
mov
mov
jne
inc
nop
movsl
loopne
pop
aaa
test
mov
dec
inc
std
cmpsl
and
xor
jnp
sub
pop
sub
rcll
dec
sub
stos
pop
fsubl
mov
bound
pushf
mov
sbb
bound
push
jg
push
in
xchg
and
jle
sub
fsubrl
xchg
int
pop
cmpsl
dec
sbb
popf
adc
test
jp
add
sub
insb
or
fsave
push
mov
sbb
cmpsl
jecxz
fildll
adc
call
clc
dec
mov
inc
mov
push
xchg
out
sub
ss
jmp
outsl
aas
cli
out
sbb
frstpm(287
or
add
jne
pop
fs
fbld
arpl
push
shlb
je
mov
insb
jp
cmpsb
mov
adc
inc
aas
ror
mov
add
jmp
mulb
les
and
cmpsl
adc
push
imul
imul
ffree
ds
pop
ficompl
pop
shlb
add
push
call
sahf
pop
stos
push
icebp
jge
xor
sbb
dec
dec
insb
xchg
push
mov
or
pop
cltd
lret
fisubs
std
stos
mov
and
push
aad
sub
fistpll
adc
jecxz
aas
pmullw
or
sbb
das
cld
adc
out
push
nop
int3
jb
ret
cmp
mov
add
mov
int3
out
stos
pop
bound
sti
test
std
int
es
fdivr
lret
addr16
mov
cmp
xor
mov
mov
in
mov
and
out
mov
cs
or
and
mov
mov
jae
daa
das
leave
out
mov
insl
push
mov
inc
jmp
dec
fsub
mov
and
xor
mov
je
mov
jb
cmp
jnp
push
jb
fiadds
js
fcomps
test
lcall
sarb
int3
imul
fs
xor
rcll
sub
negb
cmp
inc
or
inc
testb
xchg
orl
push
rolb
imul
fidivrs
adc
lods
sarl
jno
xchg
cli
sbb
sub
loope
jns
sbb
popf
adcb
xchg
out
jle
ja
or
gs
leave
enter
xor
ficomps
jo
aaa
jne
gs
out
mov
dec
add
add
cmpb
jne
pusha
mov
lea
aas
jmp
xchg
andl
clc
loop
loopne,pn
das
imul
mov
test
imul
outsl
jecxz
jmp
xchg
jns
jns
imul
xchg
jns
sbb
sbb
mov
outsb
cs
xchg
sbb
loope
imul
mov
mov
jecxz
jmp
xchg
jns
jns
sbb
sbb
xchg
mov
xchg
xchg
test
fwait
xchg
xchg
jmp
imul
xchg
push
loopw
sub
outsl
das
and
xchg
xchg
clc
jecxz
jmp
insb
loope
jmp
insb
jmp
insb
pop
cltd
imul
ror
jp
push
adcb
call
jecxz
loop
insb
push
test
js
lods
inc
nop
call
loope
jmp
insl
loopne
mov
imul
popa
test
sub
in
pop
pusha
dec
insb
push
scas
pusha
xchg
aam
insb
push
pusha
test
mov
xchg
adc
fildll
cmp
sarl
and
test
insb
push
loope
jmp
insb
xorl
push
ss
pop
test
outsl
das
popa
test
dec
push
xchg
jns
stos
jecxz
out
lods
test
imul
js
jecxz
jmp
push
mov
lods
dec
insb
push
xchg
xchg
shrl
push
insb
cmp
xchg
mov
push
call
cmp
cmp
xchg
mov
dec
call
sbb
subl
add
add
push
add
add
add
addb
or
or
add
js
add
mov
add
add
add
orb
add
add
orb
add
inc
add
adcb
add
push
add
add
add
add
add
add
add
addb
add
or
add
mov
add
add
or
add
xchg
add
inc
and
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
adc
add
or
add
mov
add
or
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
mov
add
add
xor
int3
xor
push
xor
aam
add
sub
add
fdivl
add
xor
xor
inc
xor
in
xor
dec
xor
hlt
xor
push
xor
cld
xor
bound
add
jo
add
xorb
add
add
add
add
add
add
add
add
addb
add
cmpsb
xor
add
add
mov
add
add
add
shlb
add
add
add
xor
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
inc
push
push
xor
fs
insb
add
dec
push
inc
push
dec
cs
insb
add
inc
push
xor
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
gs
jo
outsb
dec
gs
add
add
gs
jne
add
push
jne
fs
outsl
push
je
imul
push
je
inc
push
add
jo
imul
add
je
jb
gs
jo
outsb
inc
add
add
add
test
add
sub
add
add
add
add
add
add
add
add
add
adc
add
and
add
mull
add
pop
sub
add
ss
add
add
pop
xor
add
add
add
add
add
add
jne
popa
jbe
cs
insb
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
outsl
add
je
insl
add
add
dec
add
add
xor
adc
add
add
and
or
add
or
xor
or
add
mov
add
cmpb
pusha
jmp
pushf
movsl
jp
mov
lcall
call
bound
sbb
call
cmpsb
inc
ud1
add
testb
ret
add
leave
into
ret
inc
shlb
push
sbb
add
add
mov
cmp
icebp
ja
add
pop
sbb
iret
add
add
add
add
xor
jns
add
pushf
adc
ss
call
pusha
sbb
movsl
mov
lea
xor
jmp
mov
or
lret
test
cmpsw
push
std
repnz
jne
call
dec
mov
inc
call
popf
xchg
call
mov
add
lahf
ret
call
or
add
pop
fistps
adc
in
add
push
lcall
call
jl
pop
mov
es
mov
cmpb
push
inc
lcall
mov
scas
dec
fsub
mov
add
add
or
push
push
adc
lcall
call
or
push
clc
shll
aaa
movsb
or
push
push
cld
jl
nop
call
aam
jb
inc
jns
mov
cmp
sbb
jno
mov
add
cli
add
add
pop
pushf
movsl
jp
mov
lcall
mov
int3
adc
jmp
div
fs
jmp
jmp
ror
into
out
cld
test
or
add
xchg
cmp
lcall
mov
sbb
xlat
les
sbb
add
pushf
add
add
add
add
call
dec
loope
hlt
sbb
ficomps
mov
lea
popf
call
mov
test
movsw
incb
inc
rcrb
mov
mov
test
add
or
lock
lcall
xchg
sahf
lcall
add
jno
or
push
dec
dec
outsl
jl
pop
lcall
add
pop
es
mov
sbbb
pop
lods
jne
mov
jmp
cwtl
icebp
push
jmp
inc
sub
scas
dec
faddl
ljmp
or
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
dec
jmp
movsb
or
jmp
adc
push
das
cmp
sbb
pop
jmp
out
aam
jb
inc
jns
pop
insb
xor
add
add
inc
cli
jmp
jo
lcall
add
popa
jmp
add
add
addl
add
add
sbb
imul
add
movb
add
subl
push
ret
add
add
sldt
add
sbb
add
pop
addl
push
ret
add
pop
subl
push
ret
add
pop
add
subl
push
ret
add
pop
add
subl
push
ret
add
movb
ss
mov
ret
pop
add
subl
push
ret
add
subl
add
add
movb
add
xorw
push
ret
add
movb
add
xorw
push
ret
pop
subl
push
ret
add
pop
add
xorw
push
ret
add
pop
add
xorw
push
ret
pop
xorb
push
ret
pop
add
xorw
push
ret
add
add
add
addl
add
addl
pop
add
xorw
push
ret
add
add
movb
add
xorw
push
ret
add
add
add
movb
add
subl
push
ret
add
movb
add
subl
push
ret
add
add
add
sldt
add
push
pop
addw
push
ret
add
pop
add
xorw
push
ret
