icebp
in
out
adc
sti
add
add
add
sbb
aas
nop
add
jo
add
add
jg
es
sub
jmp
fucomip
jg
adc
inc
push
fiaddl
add
rorl
or
pop
push
repz
xchg
add
mov
idiv
out
fimull
xchg
add
add
mov
add
inc
movl
aaa
dec
push
dec
mov
ljmp
js
into
mov
dec
or
add
pusha
mov
jbe
jo
repz
inc
mov
ljmp
jno
arpl
inc
mov
aaa
pop
add
insl
aaa
leave
mov
and
push
gs
push
dec
dec
pop
dec
add
call
stc
ljmp
sub
leave
les
sbb
dec
dec
ret
cs
pop
adc
add
add
inc
filds
les
ret
scas
add
dec
mov
mov
fldl
sbb
mov
add
in
aaa
clc
aaa
add
dec
inc
insl
mov
jns
push
mov
in
add
xchg
dec
add
inc
sub
xlat
leave
ret
inc
cmp
ds
push
dec
xor
xor
inc
push
negb
xor
mov
mov
mov
sub
lock
dec
push
mov
mov
pop
lds
clc
push
pop
dec
dec
dec
mov
repnz
decl
rcrl
add
mov
push
mov
rcll
ret
mov
inc
dec
jno
add
insb
inc
int
jns
mov
shlb
push
fiadds
mov
sbb
mov
in
add
in
jno
mov
push
inc
pop
pop
pop
mov
inc
jmp
xchg
sub
mov
mov
add
cli
loope
loope
mov
jl
jb
mov
sarl
sbb
sub
js
jge
repnz
xor
loop
xchg
mulb
sub
ud1
push
jb
addr16
fs
ret
mov
mov
dec
mov
dec
jo
push
dec
or
insl
scas
mov
ds
bound
xor
dec
cmp
jno
jo
jecxz
push
inc
fnstcw
insb
jmp
inc
js
xor
push
dec
mov
jbe
xor
push
outsb
dec
jns
add
jne
fistps
jle
mov
cmp
inc
mov
push
push
sbb
push
mov
aaa
decl
mov
inc
dec
pop
inc
add
jmp
mov
int
lock
cmp
repz
inc
test
xor
je
inc
imul
xlat
pop
movb
mov
outsl
push
push
add
mov
test
add
push
dec
or
dec
dec
sbb
mov
mov
jns
add
and
outsb
ja
je
iret
xor
mov
inc
mov
gs
jae
inc
mov
sarb
mov
cmp
add
fadd
imul
pop
adc
cmp
xchg
or
xor
xor
inc
leave
add
inc
push
and
pop
and
insb
outsb
push
pop
push
stos
pop
pop
mov
jmp
push
or
dec
jns
sub
into
add
pop
xor
cwtl
popa
sti
pop
or
insl
add
xor
inc
or
jl
sbb
jmp
pop
inc
rorl
bound
insb
imul
cmp
jb
jg
mov
lock
aaa
gs
push
pushf
cld
sti
push
cld
add
les
fs
add
call
jae
sub
jae
jno
add
inc
dec
stos
dec
popa
mov
inc
mov
cmc
fimuls
arpl
outsb
mov
push
push
add
mov
lahf
add
ficoml
jno
lahf
sbb
nop
int
pop
jns
cmp
xchg
in
out
scas
mov
leave
inc
adc
call
das
push
cld
or
dec
je
xor
je
call
or
orb
sbb
lods
ss
add
psubb
mov
add
scas
cmp
outsb
ss
sbb
push
jne
ret
mov
xor
cli
pusha
clc
bound
mov
daa
jno
dec
fs
out
int3
add
dec
add
dec
push
outsl
push
jbe
inc
repnz
cmp
insl
xor
stos
fwait
pop
jbe
jb
xor
dec
repz
dec
or
mov
cs
ret
jp
push
ss
sti
out
cli
dec
mov
inc
xor
dec
es
dec
mov
mull
jne
mov
jbe
jno
jne
inc
and
mov
dec
loop
std
dec
push
ss
push
inc
add
adc
add
mov
jmp
mov
fstl
ss
fs
pop
push
dec
add
push
pop
cmp
adc
and
fildl
call
pop
repz
ror
fbstp
inc
push
add
inc
push
mov
mov
loopne
xor
loop
jbe
xor
xor
fs
push
or
xchg
jl
insl
push
je
into
inc
xor
gs
test
inc
inc
or
push
je
inc
push
icebp
pop
arpl
insb
ja
data16
outsl
cmp
mov
or
dec
js
push
and
cwtl
mov
or
cmp
leave
cmpsb
call
cmp
outsl
fmuls
add
dec
pushf
call
dec
xor
cmpsb
or
emms
fcompl
dec
add
mov
xor
push
inc
dec
dec
ss
pop
xchg
mov
lea
outsl
inc
dec
pop
jge
movb
pusha
push
mov
inc
mov
mov
shll
push
push
int3
rcll
adc
mov
mov
push
mov
mov
je
incb
push
dec
idivl
pop
push
pop
sbb
ljmp
outsb
inc
mull
in
add
push
pop
dec
inc
add
xor
mov
lods
and
mov
enter
ss
sbb
dec
je
mov
clc
jp
sti
push
add
mov
or
push
push
dec
test
in
pop
add
adc
rolb
push
pop
notl
in
rcl
xchg
cld
rolb
push
enter
xor
shlb
rolb
cmp
int
pusha
rcll
lcall
adc
mov
rolb
outsb
jbe
dec
ss
imul
mov
add
fdivrs
inc
fldcw
xor
ret
mov
adcb
push
dec
adc
addb
jb
inc
movsb
imul
adc
gs
jmp
rcrl
es
arpl
das
ja
sbb
mov
push
pop
adc
cmpsb
sbb
push
dec
cltd
push
xor
nop
inc
add
jns
adc
sub
sub
cmp
fsts
data16
cmc
orl
adc
aas
mov
loop
cmp
dec
add
sub
adc
cmp
rcrb
aas
mov
das
nop
mov
outsb
ret
aad
divb
mov
push
cltd
or
daa
cmp
and
xchg
les
clc
into
aaa
jae
aam
test
mov
cmovo
dec
daa
jno
sbb
fs
adc
add
test
pop
cltd
mov
cmp
push
inc
xlat
ljmp
add
aas
nop
aas
jnp
aaa
movsl
rolb
add
mov
mov
fs
fists
adc
sti
jb
pop
mov
push
xor
sbb
rcrl
sbb
pop
fwait
jp
xchg
out
or
or
jp
jbe
cwtl
fs
xchg
push
inc
repz
orb
jg
dec
repz
fiaddl
inc
mov
sub
cmpsl
mov
psadbw
mov
shrl
or
stos
gs
mov
mov
cmovp
xor
rorb
neg
dec
adc
jb
sub
lea
jge
jle
andb
and
add
pop
mov
cmp
repz
pusha
lret
add
fwait
jecxz
movsb
sbb
add
mov
test
test
sbb
orb
mov
or
rolb
enter
test
cmp
fisttps
jp
cwtl
loop
rcrb
dec
test
popa
adc
pop
add
test
enter
aad
add
jl
outsl
sub
addr16
jl
push
sub
and
xchg
in
leave
push
mov
dec
repz
push
pusha
add
jb
add
push
subl
repz
clc
aad
adc
sub
push
inc
push
fists
out
call
scas
pop
xor
lds
push
and
mov
test
dec
in
inc
mov
and
and
popa
leave
and
les
movsl
and
arpl
cld
and
push
sbb
xchg
pushf
dec
andl
cmp
ss
pop
mov
movsl
cli
and
mov
test
inc
into
sub
iret
sbb
imul
mov
daa
popa
aaa
addr16
decb
or
push
jb
andb
sub
fwait
jo
inc
or
inc
cmp
pop
push
cmp
cmc
mul
push
add
xlat
testb
inc
aas
inc
aas
cmp
push
add
mov
into
push
movsb
lea
sti
fsubs
lret
sbb
pop
les
push
jge
xchg
mov
mov
push
subl
xchg
stos
mov
sti
inc
dec
mov
lea
sar
push
dec
jne
test
jns
add
adc
inc
inc
adc
xchg
rcl
icebp
scas
outsb
sbb
add
inc
shrl
test
mov
fmul
ret
roll
xchg
mov
insl
fiaddl
mov
repnz
popf
leave
mov
jecxz
dec
dec
jge
or
adc
or
inc
shlb
in
adc
es
xchg
test
adc
and
mov
arpl
and
inc
jl
fwait
push
popa
je
clc
and
icebp
in
jne
cmp
in
nop
lret
mov
push
jne
shll
mov
int3
das
dec
scas
xchg
sub
and
adc
or
push
sbb
insl
dec
loopne
xchg
jge
dec
dec
and
cwtl
bound
in
iret
int3
xchg
clc
and
pop
dec
or
aad
cmp
test
call
mov
xchg
cld
add
jae
lock
mov
mov
push
push
adc
ficoml
fisubl
shlb
mov
jmp
and
mov
inc
cld
test
movsl
pop
push
cmp
cmp
lock
sbb
xchg
mov
sbb
xor
sbb
xor
int
out
or
add
rclb
or
mov
xchg
pushf
or
test
leave
pop
cmp
movl
dec
push
mov
inc
pushf
dec
leave
pop
sti
aad
outsb
or
lcall
sub
inc
sub
insb
dec
aaa
je
ja
dec
shll
inc
mov
xchg
leave
dec
sbb
xchg
test
jle
in
pushaw
daa
mov
adc
inc
lcall
in
pop
idivl
call
dec
aaa
popf
jo
popf
lret
push
adc
push
enter
push
dec
in
movsl
arpl
mov
mov
pop
iret
or
bound
call
and
rcll
rcrb
stos
mov
add
rcl
cmp
inc
cmp
pop
mov
pop
nop
out
test
jp
lcall
adc
in
pusha
mov
adc
shlb
movsl
jmp
mov
inc
cmp
mov
inc
add
daa
arpl
in
xchg
push
cltd
fwait
lret
lods
pop
sub
out
xchg
or
cltd
push
add
dec
and
inc
out
and
mov
dec
cmp
sub
sub
pushf
stos
and
dec
add
in
hlt
or
jno
lcall
test
adc
fstpt
pushf
xor
pop
loope
mov
add
test
jno
mov
xor
hlt
setge
pop
xlat
push
inc
cmp
mov
fs
sbb
cli
jno
daa
fidivrs
cmp
xchg
push
xchg
aas
sbb
mov
pop
dec
dec
lea
loopne
mov
comiss
and
es
and
and
inc
int
sub
jne
jge
push
xor
stos
test
inc
sub
adc
or
insb
or
enter
insl
sbb
jbe
inc
adc
imul
fisubl
int
adc
sub
pop
in
or
sbb
fwait
push
icebp
add
shrl
pop
cmp
orl
addl
mov
in
xchg
jno
sahf
pop
or
jbe
mov
inc
xor
stos
lret
cmpb
push
push
adc
ret
js
mov
adc
add
imul
or
loop
bound
mov
lock
xor
and
cwtl
aam
scas
out
imul
jae
lahf
jl
xor
mov
xchg
mov
lea
push
loop
lea
enter
mov
and
push
or
je
and
jne
cmc
jae
dec
aaa
xor
pop
outsb
mov
dec
repnz
push
sarb
mov
push
mov
out
cmp
je
fmuls
addl
std
mov
loop
pusha
and
jbe
mov
mov
pop
fcomps
enter
lods
xor
jns
shlb
xchg
jle
sub
mov
popa
add
jl
pop
lret
les
test
sbb
lock
pop
leave
sbb
popa
mov
sbbb
xchg
ret
mov
movsl
xchg
mov
sub
dec
adc
and
scas
xor
aam
notb
push
pop
and
adc
or
sbb
xchg
jne
adc
pop
call
mov
xchg
mov
push
mov
arpl
sub
mov
push
and
pusha
les
add
dec
insl
pop
dec
or
push
sbb
shl
inc
push
jbe
adcl
lock
or
mov
shlb
pop
fs
xchg
lret
and
cld
dec
test
call
out
inc
cmp
dec
or
mov
test
repz
cmpsb
ret
mov
push
daa
lahf
cmp
subps
lods
testb
jnp
pop
adc
cltd
push
test
add
rcrb
aas
pop
adc
mov
testl
test
inc
adc
addr16
pop
adc
pop
ret
inc
mov
add
les
repnz
nop
add
sub
pop
mov
lods
or
push
jecxz
mov
shll
mov
sbb
cmpsb
pusha
and
ret
xchg
fstpt
add
push
in
js
push
clc
jno
mov
jmp
jmp
in
jp
cmpxchg
sbb
aaa
test
jbe
cmpsl
jl
mov
dec
mov
enter
dec
sbbb
xchg
sbb
and
dec
bound
in
addr16
cmp
rolb
lcall
add
jb
sbb
jl
mov
inc
mov
int3
fwait
mov
test
jnp
inc
cld
pop
cli
and
movsl
add
out
adc
adc
or
inc
cmp
inc
cmp
js
inc
push
jbe
pop
mov
test
or
xor
cmp
cwtl
jg
lods
jne
std
je
add
xor
stos
jecxz
imul
pop
add
jl
pop
lcall
xchg
loopne
inc
or
and
mov
mov
and
push
aad
adc
sub
jns
dec
ret
pusha
push
pop
cltd
dec
sub
shrb
inc
clc
and
lret
xor
ficoml
cwtl
stos
push
mov
sti
sbb
aaa
push
aam
sbb
cmp
orl
pop
inc
fsubrs
dec
arpl
mov
arpl
ds
push
xor
sarb
adc
inc
cld
add
push
dec
mov
ds
and
or
xchg
mov
decl
repz
inc
and
in
pushf
idiv
shl
inc
int
mov
add
sub
outsl
jge
xor
mov
add
repnz
mov
mov
jbe
cltd
inc
xor
test
std
xchg
push
sbb
mov
rcll
jl
xor
sbb
pusha
rclb
xchg
pop
sub
fwait
inc
sahf
ja
xor
or
mov
push
iret
push
pop
leave
gs
mov
dec
sbbl
xchg
js
cmp
pop
xchg
iret
xchg
add
sub
addb
hlt
loope
adc
or
stc
inc
inc
icebp
xor
xor
push
cmpsl
cmp
lods
faddl
clc
jle
mov
gs
pop
inc
hlt
scas
fs
popf
xor
or
cmpb
push
test
add
movsb
adc
or
lock
out
pop
mov
xor
adc
test
outsl
and
pushf
add
loopne
jns
xchg
ret
dec
cmp
cmpsb
push
pop
ja
mov
cmpsl
sbb
aad
mov
add
jl
mov
call
mov
cmp
and
std
inc
mov
xchg
jns
and
inc
inc
xor
inc
aam
push
sub
add
test
jmp
sbb
pop
cmp
pop
push
adc
pop
call
in
adc
and
or
adcb
xor
push
jecxz
fsubl
jo
fmull
fisubl
orl
loop
arpl
dec
addr16
jns
mov
inc
mov
add
push
push
push
inc
adc
sbb
fisubl
inc
add
inc
test
aam
test
and
cltd
pop
dec
repz
icebp
adc
les
adc
mov
jno
sub
mov
sbb
and
mov
lret
js
cmp
stc
xorl
cld
mov
add
imul
outsl
mov
cmp
adc
mov
test
xor
push
mov
jno
xlat
je
or
or
pop
inc
les
ljmp
jmp
out
fisttps
daa
jl
daa
or
stos
jg
or
repnz
data16
inc
sbb
inc
js
jnp
in
xchg
mov
ret
or
loop
dec
ja
lds
push
in
cli
inc
inc
jne
mov
mov
les
lock
pop
scas
jns
popa
in
pusha
push
outsl
ret
xor
rcll
mov
test
clc
add
enter
adcb
mov
adc
sbb
xor
and
in
push
mov
sarb
pusha
jecxz
push
movsb
sbb
xchg
mov
or
movsb
sbb
loope
in
and
dec
mov
sub
jecxz
in
add
aaa
inc
in
dec
cli
adcb
sahf
iret
sahf
xor
scas
bound
xchg
jno
movsl
pop
sub
inc
insl
push
xchg
and
pop
mov
push
mov
iret
and
les
mov
adc
out
pop
in
mov
lss
push
sub
shrb
and
and
add
push
mov
mov
sub
adc
push
xor
and
sbb
and
mov
jp
fwait
leave
push
out
mov
jle
pop
cmp
add
xor
ljmp
cmpsb
in
addr16
adc
push
cmc
fisubl
inc
xor
out
xchg
pop
and
cmp
add
lds
sbb
repnz
int3
adc
jbe
dec
in
add
leave
fdivr
dec
imul
cwtl
es
lods
dec
test
stos
adc
das
sbb
loope
mov
cmp
jns
or
dec
dec
dec
adc
jne
cmp
ret
aam
in
rcrb
mov
cmpsl
or
and
insb
or
add
xlat
movsb
cmp
adc
mov
jge
call
ret
pusha
repnz
sub
xor
jns
pop
jno
jb
je
push
scas
nop
pop
add
xchg
cmp
add
pop
lahf
sbb
shrb
mov
sahf
icebp
add
rorl
hlt
and
std
test
add
mov
dec
jb
pop
aas
sub
int
shlb
mov
adc
push
jmp
lea
adc
add
add
mov
xchg
ret
fwait
mov
subl
cmp
inc
pushf
cmp
mov
xchg
mov
data16
in
lea
scas
push
push
inc
cmp
xchg
jp
cmc
push
or
mov
sarl
dec
daa
mov
test
jbe
fsubr
inc
scas
insl
and
inc
pop
push
sbb
xor
adc
adc
xor
lods
add
pop
cmp
push
insb
adc
pop
mov
add
leave
and
mov
push
outsl
push
push
jb
gs
mov
stos
jmp
dec
outsl
xor
inc
adc
push
mov
or
inc
cld
add
pop
adc
or
cmpsl
and
inc
dec
pop
lea
inc
out
dec
in
adc
and
hlt
add
das
dec
sub
cld
insb
pushf
dec
adc
pushf
pop
mov
les
or
addr16
rcrb
shlb
rorb
hlt
mov
nop
out
out
jl
adc
std
inc
cwtl
adc
pop
sbb
test
data16
xor
lock
adc
xchg
sub
mov
pop
enter
adc
lock
popa
adc
shrb
dec
xchg
push
jmp
inc
add
inc
cmpsl
orl
movsb
jmp
add
mov
fwait
mov
and
lahf
push
aaa
jae
std
and
add
movsl
adcb
or
aaa
sbb
leave
sub
and
xor
adc
adc
addb
cmpsb
push
xchg
insb
xchg
or
leave
inc
sbb
pusha
pushf
and
inc
int
mov
fisttps
cli
bound
add
fidivrs
push
scas
fs
jbe
dec
inc
adc
mov
inc
mov
adc
xor
imul
jne
rorl
xchg
test
cmp
pop
or
lahf
mov
lds
adc
or
mul
mov
daa
cmp
dec
outsl
daa
push
movsl
flds
shrb
push
cmp
mov
add
shr
push
sub
shr
mov
or
test
xchg
mov
push
cli
and
fldl
pop
sub
std
int3
mov
xor
shlb
call
adc
xor
fstpt
sti
repnz
repnz
scas
ljmp
insb
and
data16
or
sbb
xor
incl
movsl
inc
bound
repnz
bound
int3
call
pop
jnp
test
cmp
cltd
lea
aas
arpl
dec
mov
arpl
xor
loopne,pn
xor
push
mov
mov
push
lret
insl
add
xchg
sti
pop
test
sbb
pop
mov
rol
cmp
adc
and
pop
nop
push
lods
test
jbe
dec
out
pop
sarl
mov
dec
and
test
aad
hlt
jno
sub
stc
sub
movsl
inc
mov
mov
std
into
fld
pop
and
inc
mov
jo
insl
lcall
mov
jp
dec
add
js
pop
or
jmp
inc
scas
or
lods
es
roll
shl
and
fwait
inc
mov
push
fistps
jne
add
or
mov
inc
or
adc
and
clc
adc
push
ret
push
jno
mov
ror
adc
in
mov
fisubs
lret
stos
adcb
pop
enter
mov
aam
aad
loope
dec
mov
js
les
mov
arpl
adcb
cmc
insl
mov
jp
pop
popf
or
sub
enter
enter
jo
adc
push
xchg
jb
adc
sub
adc
xor
mov
push
sbb
push
lahf
mov
mov
sbb
loop
clc
xor
add
mov
gs
jecxz
int3
xlat
inc
dec
and
adc
jg
nop
jns
stos
pop
xchg
pop
in
addb
jmp
shlb
mov
push
push
push
jns
idivl
sbb
or
aam
jmp
or
ret
push
sub
inc
cwtl
pop
sbb
enter
push
mov
push
stc
xor
iret
inc
sbb
scas
add
in
imul
xchg
rorl
and
jo
xchg
mov
mov
rorb
out
push
lcall
adc
pop
cmp
lcall
sbb
stos
jmp
inc
stc
pop
jae
adc
xor
cmp
icebp
add
and
arpl
xor
test
push
mov
xchg
adc
or
xchg
cmp
ret
pop
arpl
rol
iret
std
dec
iret
sub
and
scas
daa
add
test
enter
sub
imul
jmp
jo
cmpsb
pop
les
dec
test
xchg
jo
test
pusha
cmpsb
push
mov
add
les
movsl
adc
loopne
xchg
pop
sub
test
add
dec
ds
jle
adc
mov
and
jmp
mov
insb
mov
filds
stos
movsl
and
pop
pop
jo
xor
jge
dec
sub
repz
adc
es
adc
enter
push
jns
loope
scas
bound
sbb
mov
add
and
mov
xor
pop
loope
inc
mov
sbb
xchg
jge
inc
rorl
lret
daa
adc
jle
in
movsl
dec
sub
push
mov
stos
jne
rcll
or
das
lock
sbb
push
inc
scas
mov
enter
adc
push
inc
jmp
sub
push
aam
cmp
ror
pop
inc
sub
shlb
lea
cmp
dec
aam
scas
xlat
test
dec
sarb
das
bound
push
or
lock
lock
adc
dec
mov
and
dec
xchg
adc
push
adc
pop
inc
movb
bound
push
shlb
pop
sar
cli
cmc
inc
add
test
test
push
call
loopne
test
test
aam
inc
rorl
jo
aaa
xchg
dec
sub
adc
push
or
dec
int
das
xchg
leave
loope
dec
push
mov
movsb
mov
xor
inc
fistps
loopne
and
sub
mov
sbb
rcrl
incb
lret
mov
stos
add
or
mov
popf
and
jge
sub
movsl
cmc
mov
stos
pop
jb
insl
cmp
aaa
push
and
jo
roll
bound
pop
in
stos
push
inc
aad
imul
sub
nop
sbb
movsb
mov
and
lcall
cmp
sub
mov
test
add
loope
in
in
imul
pop
inc
bound
or
xchg
push
fnstenv
fdivr
inc
add
mov
rolb
dec
ret
and
mov
pop
call
add
inc
out
add
pushf
sar
sub
xlat
mov
xor
cmpsb
mov
aas
add
sub
or
xchg
inc
jae
cmp
adc
cmp
mov
adc
mov
sub
imul
mov
scas
pushf
fabs
aam
jb
pushf
sbb
mov
pop
cmc
loopne
add
push
int
and
adc
xchg
cltd
add
sarl
dec
fwait
cmc
cmp
inc
je
out
aaa
mov
jns
mov
xchg
push
popa
stc
shll
add
sub
lods
push
or
mov
adc
add
lock
adc
mov
sbb
mov
fwait
xchg
mov
or
xor
sub
cmpsl
jp
popf
add
insl
movsl
sbb
and
cmp
xchg
es
pop
mov
outsb
stos
adc
xchg
add
and
rorb
imul
add
xor
movl
push
xor
aaa
add
mov
add
mov
je
xchg
lea
jae
adcb
jecxz
cmp
sbb
jne
imul
testl
or
mov
or
bound
lds
mov
rol
sbb
movsl
popa
jle
xor
ljmp
adc
adc
sub
sub
add
mov
add
adc
push
or
xor
pusha
dec
lcall
cmc
or
mov
cmp
adcb
push
fsubl
sbbl
rolb
dec
fwait
pop
cmp
push
out
inc
add
scas
sub
xchg
and
push
adc
sbb
add
inc
cmp
jge
cwtl
pusha
das
das
jg
stos
pop
or
lahf
pop
sub
push
xlat
inc
and
clc
pop
pop
shr
rcrl
mov
cmp
popf
pop
jmp
or
inc
addr16
add
push
jb
and
xchg
inc
mov
cwtl
sbb
jecxz
adc
rcrl
add
sub
mov
push
lret
pusha
jecxz
or
test
pop
adc
adc
push
or
test
xor
dec
popa
dec
inc
xchg
or
adc
sub
inc
shrl
add
push
and
sbb
dec
lret
int3
shlb
loope
cmp
jnp
int
add
cmp
push
push
clc
cs
and
into
dec
push
dec
dec
incl
shlb
aad
xchg
and
ljmp
into
imul
shll
xor
add
and
shll
or
cmp
mov
mov
or
dec
pop
imul
pop
movsl
dec
je,pn
jns
call
sub
popf
xchg
add
test
bound
and
call
cltd
or
lcall
cmp
test
add
lcall
or
push
xor
addb
cmp
lcallw
sub
add
scas
xchg
mov
or
jl
addr16
sti
js
and
imul
inc
test
cmc
sub
scas
bound
inc
adc
add
add
in
cmpsl
insb
lods
pop
mov
jmp
push
adcl
or
daa
imul
popf
fs
sti
adc
and
andb
lods
inc
mov
xchg
cmp
xlat
xchg
dec
cmp
mov
push
sub
mov
mov
push
adc
stos
loop
mov
in
fcmovbe
add
fwait
mov
outsb
push
jo
jge
arpl
pusha
xor
jmp
mov
add
push
insl
dec
add
rcrb
inc
push
enter
push
cld
push
ret
sahf
mov
repz
push
enter
push
int3
cwtl
xchg
inc
sub
adc
enter
fdivr
pop
aam
xchg
cmpl
out
icebp
jo
stc
jg
mov
sbb
jmp
xor
pop
arpl
shll
mov
in
xchg
push
push
fistl
arpl
jns
add
ret
mov
add
or
cmp
cmp
clc
mov
cmpsl
jp
jge
or
ret
mov
dec
or
test
adc
and
rorb
dec
adc
pop
leave
mov
mov
add
mov
mov
pop
jo
xchg
leave
insb
cmp
cmc
test
testl
inc
push
scas
in
jo
add
or
and
rol
cmc
popf
sbb
sub
stos
mov
jl
inc
pop
divb
aad
push
popf
aam
pop
stos
sbb
loopne
push
pop
imul
not
sysenter
xchg
push
push
jmp
in
nop
clc
add
shl
add
das
sbb
sbb
add
push
sti
pop
shrl
or
mov
cmp
inc
push
sub
xchg
pop
ljmp
adc
dec
or
pop
sub
xchg
addps
jns
mov
bnd
xchg
ror
mov
jecxz
xor
push
sbbl
movsl
mov
pop
orl
mov
inc
sbb
sbb
stos
sbb
std
jne
movsb
das
inc
fidivrs
cs
scas
loope
or
sbb
mov
and
and
pop
xchg
pop
cltd
pop
push
aad
xlat
lds
and
dec
mov
mov
xor
mov
mov
adc
add
sbbb
rclb
mov
push
aaa
inc
jbe
push
pop
popa
sub
nop
mov
jmp
add
repnz
decl
mov
sti
outsl
cmpsl
fs
jmp
xchg
mov
cmp
in
inc
icebp
rolb
jle
lods
aam
mov
mov
enter
imul
adc
pusha
and
cmpsb
add
cltd
add
push
xchg
lock
push
imul
aas
mov
push
movsb
mov
rolb
sub
lret
lret
mov
xchg
adc
je
pop
cmp
inc
sbb
sbb
shl
inc
jmp
push
je
and
mov
adc
and
stos
aam
nop
pop
sub
cmp
insl
xor
sub
daa
movsl
dec
inc
sub
dec
jno
mov
mov
mov
add
xor
push
push
jo
cmp
add
and
or
movsl
out
mov
repnz
sbb
push
in
inc
rclb
sbb
imul
inc
mov
add
sbb
mov
inc
les
hlt
leave
mov
and
xchg
dec
dec
test
aam
or
push
stos
shlb
fidivl
jns
cmp
repz
stos
inc
pop
js
sub
mov
test
xchg
movsb
mov
loopne
js
adc
int
lahf
pop
sbb
test
sbb
mov
sbb
ja
pop
out
popa
adcb
cltd
das
or
push
lret
mov
mov
inc
xor
and
and
push
or
xchg
jmp
das
inc
add
sub
jno
and
mov
out
pop
jmp
inc
mov
push
push
pop
cmp
add
xchg
and
shlb
cld
or
test
popf
call
xor
add
and
jmp
fwait
add
xchg
jns
inc
pop
or
test
mov
and
sub
ljmp
adc
jnp
lret
rcl
pop
imul
push
jg
inc
shrb
fs
notl
jle
orb
pop
push
xor
pop
pop
mov
pop
leave
or
add
or
imul
in
adc
cs
inc
dec
mov
stos
jecxz
stos
outsb
push
jmp
push
divb
and
push
push
stos
ret
push
inc
test
inc
sahf
ja
or
sahf
cs
add
inc
and
push
imul
adc
jmp
xchg
sub
push
adc
das
push
xchg
or
ret
negl
jo
or
and
push
mov
lcall
insb
mov
xchg
and
sub
cmpsl
pop
cwtl
rolb
mov
inc
cs
cltd
cmp
add
pop
adc
rcl
sub
dec
pop
sub
scas
push
add
ret
shll
sub
or
push
and
xchg
stos
popf
sbbb
push
out
test
out
rclb
push
enter
fmulp
or
pop
sbb
sub
push
cs
dec
dec
and
dec
stc
leave
arpl
shrl
jle
xor
mov
cltd
aaa
pop
add
adc
inc
leave
add
inc
mov
push
push
repz
mov
sbb
pop
test
lods
in
add
std
mov
movsb
das
mov
das
clc
dec
and
fdivs
aaa
movsb
out
push
and
les
popf
xor
leave
dec
jp
pusha
nop
cmp
jae
sbb
mov
push
jnp
adc
fcoms
pushf
fwait
dec
out
push
xchg
and
sub
lock
xchg
hlt
xor
xor
push
jecxz
adcl
pop
pop
jne
or
pusha
push
pushf
cmp
pop
ret
mov
mov
push
jns
iret
and
mov
and
sbb
in
movsl
push
push
mov
add
and
add
and
shrb
add
push
arpl
sub
mov
dec
cmpsb
mulb
ja
test
mov
repnz
lds
nop
mov
add
push
leave
mov
jae
adc
xor
jae
and
outsb
lret
cmp
aad
mov
imulb
jecxz
pop
mov
out
xor
push
xor
and
and
mov
pushf
mov
and
bound
ljmp
pop
icebp
jnp
rclb
adc
sub
call
popa
test
mov
cmp
mov
adc
mov
mov
adc
enter
adc
and
mov
mov
jl
inc
stc
dec
mov
pop
jbe
adc
add
cwtl
add
dec
cmp
stos
add
adcl
xlat
sub
xor
fidivl
es
xor
mov
lahf
shlb
in
add
sbb
cmpsb
inc
cmp
movsl
js
and
js
push
fwait
repz
movsb
adc
adc
test
roll
hlt
xchg
daa
arpl
call
repnz
daa
adc
lock
and
xor
xor
add
add
mov
inc
mov
out
pop
xchg
loop
pop
adc
mov
repnz
xor
popf
inc
sbb
pop
adc
and
lods
aas
out
mov
lahf
jge
inc
mov
bound
xchg
std
rcr
lods
dec
pusha
mov
mov
or
sub
mov
push
push
push
es
aad
and
nop
nop
pop
ds
icebp
and
test
rcrb
cs
inc
jp
inc
xor
stos
jecxz
dec
aam
adcl
push
cwtl
inc
inc
repz
or
or
outsl
daa
or
lret
call
dec
push
pop
and
cmp
push
adc
add
adc
lea
and
rcrl
add
add
xchg
adcb
out
lahf
adc
das
stos
daa
int3
sub
push
pusha
sub
push
fistps
mov
sub
xchg
sbb
imul
roll
push
and
mov
out
in
ljmp
pop
js
push
dec
xchg
mov
pop
add
dec
and
pop
lock
aaa
or
rclb
mov
mov
fs
jno
cmpsl
lcall
add
imul
lahf
inc
jnp
cmp
ds
jb
stc
mov
lea
push
dec
stc
clc
ret
sub
push
imul
cmp
pusha
xor
xor
push
mov
push
xor
insb
and
gs
icebp
adcb
pop
xchg
push
add
aaa
pop
jo
sbb
sbb
lods
pop
adc
pop
sub
sub
cs
adc
mov
dec
ds
stos
pop
sbb
in
dec
fstl
jns
movsb
inc
aam
add
jnp
push
pop
inc
call
cmp
and
ret
test
cmp
adc
jl
push
add
mov
push
mov
pusha
shll
xchg
xor
popa
adc
ffree
or
adc
push
rorl
add
sub
lcall
push
cmp
cmp
jmp
je
sbb
inc
push
int3
or
stos
cmp
and
pop
fcoms
push
add
mov
nop
sbb
lods
pop
adc
das
inc
mov
jge
dec
xchg
mov
imul
cmpsl
cmc
adc
add
push
push
mov
adc
popa
loope
ljmp
push
nop
arpl
xor
mov
test
mov
js
sbb
je
mov
loop
cmpsl
or
test
leave
push
loope
add
mov
aas
sub
outsl
cmc
inc
roll
xchg
add
sub
pop
inc
das
aad
in
mov
mov
leave
bound
push
test
mov
mov
push
push
inc
pop
jle
repnz
cmp
inc
divb
add
adc
cmpsl
inc
sbb
jecxz
outsb
inc
and
and
loopne
mov
loope
xchg
repz
rcrl
or
rcrl
push
mov
adc
les
in
add
inc
xor
xchg
ret
push
cmp
or
cmpb
xor
add
loope
bound
das
adc
jb
cmovge
fsubrs
pop
adcl
jb
stos
add
lds
xchg
cmp
cmpsb
push
inc
les
in
aaa
push
adc
inc
and
jno
pop
adc
jae
cmp
sub
lods
mov
inc
loope
subl
inc
enter
frstor
mov
cltd
sbb
mov
roll
test
fistps
fdivrs
stos
adc
or
xor
call
xchg
jns
mov
dec
push
call
adc
add
subb
loope
fwait
lahf
aaa
repz
imul
xor
cmp
xchg
out
addr16
cmp
mov
mov
mov
add
xor
lods
mov
inc
xor
adc
dec
inc
adc
rcll
repnz
mov
aam
push
or
lea
mov
stc
sub
mov
sahf
icebp
sarl
adc
mov
xor
add
adc
dec
dec
test
inc
pop
sbb
sbb
hlt
xorb
cmp
mov
rcl
and
leave
sbbl
cmp
or
push
push
lret
mov
daa
nop
mov
inc
sbb
push
add
not
xor
inc
movsb
lock
lds
or
sbb
or
test
repz
test
dec
push
mov
push
fs
rorl
andb
sahf
arpl
or
popf
push
mov
rclb
inc
cmp
scas
cmp
inc
aas
mov
std
and
jo
add
icebp
or
sbb
fstpl
cmp
or
test
or
push
insl
push
loop
fldl
outsb
adc
push
pop
xor
lods
sub
sub
inc
lods
jge
test
or
pop
mov
into
inc
pushf
inc
mov
inc
add
pop
xor
mov
cmp
mov
push
lea
inc
mov
shll
test
jmp
test
sbb
imul
scas
leave
cmp
xor
addr16
or
arpl
xorl
and
daa
call
jnp
cwtl
addb
inc
shrb
jbe
add
pop
push
adc
movsb
ret
scas
inc
popf
stc
hlt
sti
lcall
adcb
outsb
sub
cmp
pop
inc
test
pop
popf
ss
adc
stos
cmp
mov
lds
mov
aaa
mov
inc
push
ss
imul
push
adc
mov
dec
adc
cmp
sbb
adc
lahf
lcall
out
stos
add
add
cmp
iret
mov
and
push
sbb
in
mov
rcll
je
dec
aas
mov
adc
sbb
push
rorl
adc
arpl
push
icebp
dec
int3
shlb
shll
pop
loop,pt
nop
pop
sub
das
cmp
lret
dec
pop
adc
sub
mov
in
cmp
inc
xchg
pusha
cmp
dec
sbb
fstl
dec
or
sbb
inc
pop
shlb
xchg
mov
or
xor
mov
aad
xchg
mov
adc
adc
sub
cld
rcll
push
push
jmp
sbb
push
xlat
mov
pop
adc
add
fcoms
dec
and
inc
cmp
lea
xchg
xchg
insb
xchg
and
mov
and
cmp
or
popa
adcb
or
pop
xor
adc
pusha
adc
push
dec
xchg
addl
sbb
jb
adc
mov
push
daa
dec
scas
and
pop
rolb
inc
mov
mov
popf
and
popf
shlb
cltd
aaa
sub
xchg
add
aam
es
pop
in
jmp
les
test
or
cwtl
xchg
fucomp
cmpsl
xor
test
adc
rolb
mov
fadds
xchg
add
cmp
mov
and
jno
leave
inc
push
std
lret
cwtl
popa
cmp
movsb
cmp
loope
add
push
jl
adc
test
inc
test
fs
xchg
fildl
loop
ljmp
mov
add
test
mov
xlat
roll
hlt
fs
and
cmp
mov
sbb
imul
pop
test
pop
inc
rcrb
sbb
jbe
rolb
std
jge
sbb
xorb
cmp
and
adcl
sub
add
repz
hlt
inc
ss
ds
sub
mov
and
mov
inc
fmuls
mov
jno
add
popa
or
mov
adc
xorl
xchg
push
jno
or
pop
out
repz
adc
mov
adc
adc
pop
leave
inc
arpl
cmp
mulb
jle
push
xchg
fdiv
or
and
loope
mov
pop
mov
lock
imul
dec
movsl
sbb
incb
cltd
sub
sti
and
rclb
dec
daa
jns
test
adc
orl
call
ljmp
stos
adc
add
xor
jb
xchg
sub
xchg
shlb
add
mov
test
inc
cmp
ret
and
mov
fwait
ret
xchg
jne
jge
mov
jmp
pop
rolb
mov
sahf
add
mov
je
xor
inc
lcall
rcrl
dec
enter
adc
dec
mov
jnp
sbb
and
push
int3
in
sub
fcom
shll
inc
add
je
fisttps
pop
push
and
cld
push
or
mov
fdivrl
fsubr
mov
and
out
add
leave
push
mov
cmp
fmul
fwait
enter
push
stos
push
pushf
or
pop
sti
adcl
pop
inc
ret
aas
stc
mov
add
leave
and
subb
add
mov
xchg
imul
and
adc
push
in
test
sbb
shlb
in
inc
push
fcompl
add
ds
cs
std
fnstcw
push
js
fcoml
push
loopne
add
test
js
stos
inc
movsl
popf
mov
leave
testl
push
sub
insl
loopne
rorb
clc
mov
pop
mov
dec
imul
mov
in
pop
mov
mov
lcall
push
pushf
push
les
and
push
add
pop
dec
andl
ss
mov
jl
scas
xor
push
adc
push
loopne
push
push
jg
sbb
mov
pusha
mov
xchg
rorb
dec
pop
inc
add
addl
test
leave
mov
sbb
dec
lock
mov
mov
mov
test
or
dec
cwtl
pushf
sub
pusha
adc
mov
dec
jne
pop
lea
sbbb
and
adc
mov
fs
sub
xor
cmp
cmp
fs
fwait
pop
nop
push
imul
xor
loopne
xchg
pop
repnz
jo
dec
sbb
cmp
dec
inc
imul
cmp
testb
lret
jecxz
mov
sar
inc
insb
cmp
jmp
lahf
xor
push
add
mov
push
inc
nop
jmp
dec
mov
jae
sbb
pop
repz
shl
or
outsl
mov
adc
int3
sbb
subl
and
adc
add
lahf
inc
add
inc
mov
cmpsb
inc
cmp
jp
push
mov
xor
adc
add
and
imul
cmp
sti
movsb
and
inc
pop
jp
loope
dec
dec
adcl
mov
ret
dec
dec
add
pop
jne
add
movsl
cmp
lea
sbb
adc
mov
mov
lds
or
jns
mov
sbb
mov
test
sub
jg
lret
xchg
loope
fbstp
pop
in
dec
sbb
mov
gs
test
test
sub
movsl
orl
loope
popf
dec
adc
and
push
sbb
pusha
rorl
push
adc
pop
inc
or
jbe
test
add
cwtl
movsl
inc
sarl
test
idivl
sub
insl
xchg
lock
xchg
jo
and
mov
lods
cmp
inc
lcall
sub
mov
loop
rcll
pop
repnz
xor
les
mov
inc
jb
and
xchg
lds
imul
jae
xchg
sbb
jne
and
xor
ss
cmp
fsts
movsl
test
mov
add
fsubs
cmpsl
test
xor
and
xor
outsl
or
and
or
fs
rclb
sub
nop
stos
out
int
pop
xchg
mov
and
sub
inc
stc
adc
or
push
inc
test
or
sbb
icebp
sub
pop
sub
call
adc
adc
popf
pop
mov
popf
sbb
or
add
and
jmp
je
sub
push
pop
jnp
test
std
jbe
jnp,pt
pop
test
xchg
repz
inc
mov
sbb
dec
jmp
and
ja
xor
inc
ljmp
int
sub
or
xchg
repnz
push
test
stc
xchg
push
sar
add
or
jge
mov
repz
cmp
movsb
mov
xchg
and
and
adc
je
push
and
xor
enter
inc
cmp
call
adcb
scas
sbb
nop
pop
ret
mov
pushf
and
sti
sbb
dec
or
jne
bound
leave
mov
mov
and
mov
sub
xor
mov
mov
push
push
xor
std
popf
lea
cli
mov
ret
rclb
mov
sub
xor
mov
je
mov
xor
dec
push
jo
orl
jae
adc
adc
rorb
enter
shr
aad
loope
lods
mov
stos
addl
mov
inc
sbb
pop
cmovns
cmp
out
inc
push
dec
cmp
or
xchg
loopne
inc
or
or
lock
mov
or
inc
rcrl
cmp
add
adc
mov
das
das
cmc
pushf
nop
add
and
add
arpl
imul
adc
movsl
pop
jle
inc
mov
int
fildl
out
aaa
inc
dec
adc
ret
stos
adc
test
mov
loop
rcll
adc
cmp
sub
mov
andb
cmp
stos
nop
sbb
cwtl
insb
jmp
pusha
ljmp
adc
push
sub
dec
inc
stos
rcll
cmp
sbb
mov
popf
push
outsl
push
frstor
into
xchg
fnstenv
inc
add
add
xor
dec
lds
sub
lcall
in
adc
in
mov
inc
inc
sbb
xor
inc
sbb
jno
mov
pop
repnz
fsub
popa
xor
and
sub
adc
fnstsw
cmpsb
adc
adc
adc
add
lock
cmpsb
pusha
dec
mov
lret
cpuid
inc
and
mov
mov
mov
sbb
inc
or
loope
hlt
and
add
aad
add
mov
das
iret
les
mov
call
cmp
lds
mov
sub
xor
call
cmp
mov
jnp
or
fs
adc
inc
into
ss
add
adc
inc
inc
sub
push
xor
imul
mov
mov
cwtl
inc
cwtl
dec
sahf
xor
adc
push
xchg
or
adc
and
insl
test
orb
insl
fnsave
loopne
dec
and
inc
dec
and
lahf
sbb
cwtl
and
pop
dec
je
mov
sbb
and
leave
les
add
push
adc
mov
inc
rorb
adc
jno
ss
lds
sbb
lahf
test
pop
sbb
popf
je
jb
shll
jecxz
addr16
adcl
adc
inc
call
sub
mov
dec
xor
pushf
or
daa
jno
cltd
ret
or
dec
ret
mov
dec
ds
aad
sub
jp
mov
xor
and
lea
roll
xor
cmp
into
mov
cmp
cmpsb
adc
and
out
pop
add
add
and
imull
mov
jne
and
sbb
mov
pop
shl
push
add
bsr
adc
push
jo
mov
ficompl
cmpsb
movsb
pop
jno
jno
icebp
hlt
push
push
inc
pop
rcl
pop
add
adc
inc
hlt
mov
lahf
mov
pop
lods
inc
xchg
cmp
lods
aaa
add
xchg
add
add
pushf
adc
scas
push
movsl
sbbl
outsl
imull
sub
mov
add
pop
mov
fs
or
mov
es
loope
popf
mov
aam
test
jecxz
test
aad
adc
or
loope
mov
sbb
les
repnz
or
sbb
xlat
arpl
sbb
pop
dec
rol
add
sbb
pop
adc
xchg
xchg
stc
ret
cmp
lea
xorl
daa
xchg
dec
adc
outsb
rcr
pop
or
adc
rcrb
inc
lock
loopne
jl
xchg
xor
ja
cmp
push
cmp
jp
pop
adc
push
les
arpl
call
filds
rclb
mov
xchg
and
add
push
mov
adc
stos
loope
sub
stos
and
lods
push
lcall
fldt
insb
sbb
xor
fstpt
dec
mov
adc
push
loop
or
inc
xchg
jne
jge
push
aaa
xor
mov
imul
aaa
fnstenv
adc
jmp
jecxz
pop
dec
mov
jecxz
test
adc
outsb
mov
add
shrl
insl
or
stc
shlb
mov
sub
clc
add
xor
push
movsl
dec
iret
sbb
xorl
xlat
rclb
mov
test
mov
in
andl
adc
fldcw
add
lahf
add
or
rclb
cmp
xchg
push
or
inc
inc
dec
or
nop
mov
js
xor
and
leave
xor
push
and
idivl
add
xchg
into
cs
pop
shl
jge
les
dec
xor
mov
call
aaa
in
mov
adcl
push
adc
subb
pop
mov
xor
or
leave
test
cmp
outsl
stos
xchg
push
mov
xchg
pop
dec
jmp
fwait
sub
sbb
jecxz
xor
xchg
adc
mov
mov
sbbb
inc
fwait
js
and
push
lret
sub
stos
push
jmp
xchg
popa
and
ja
sub
and
and
adc
push
cmp
push
fdivrp
mov
test
xchg
nop
out
jo
cmp
int3
aaa
enter
sub
inc
inc
ret
sbbl
dec
sbb
andl
out
sbbb
pop
imul
adc
nop
push
jmp
mov
imulb
adc
sub
xchg
aaa
push
sub
es
rolb
mov
adc
sbb
test
inc
out
xchg
lds
in
xor
xor
sub
repnz
enter
cmpsb
movsl
push
push
jb
mov
int3
add
xor
and
cmp
push
test
mov
xor
loope
mov
adc
repnz
jnp
aam
and
add
push
in
adc
repz
dec
popf
pop
push
adc
mov
sbb
ret
push
xlat
data16
lea
ja
test
jo
jl
fisubl
sub
lea
mov
jmp
cmp
pop
call
add
and
xchg
jl
or
pop
add
add
cmp
inc
iret
popa
loope
dec
jno
jb
shrb
es
jmp
loope
jecxz
adc
testb
push
sub
cwtl
movsl
mov
lock
icebp
or
lods
push
mov
test
dec
adc
adc
pop
inc
add
iret
sarb
xchg
mov
push
imul
loopne
mov
xchg
cmp
out
stos
or
mov
cmp
jno
dec
test
mov
push
xor
lahf
ljmp
int3
es
subb
or
cmc
pop
xchg
or
sub
dec
leave
cmp
insb
rol
ja
and
popf
inc
mov
jecxz
add
mov
or
aam
sub
dec
xchg
sbbb
jae
mov
jmp
pop
jo
or
pop
fistpl
and
insl
loopne
sarb
adc
test
cmc
es
xor
nop
sahf
push
or
or
repnz
daa
in
xor
pop
adc
je
xorl
cmpl
les
mov
cmp
add
jbe
add
mov
stos
cs
dec
test
sbb
stos
or
aam
cwtl
inc
jl
roll
test
cmpsl
addl
loopne
pop
lock
pusha
dec
xchg
mov
xor
pusha
add
movntq
mov
aaa
rclb
daa
xor
nop
ja
outsb
mov
mov
data16
cmp
mov
lahf
xor
rep
adc
or
sub
std
mov
xor
sub
and
add
aad
addl
add
add
popa
mov
icebp
subb
add
cmp
cmp
data16
inc
adc
test
inc
stc
inc
test
and
push
pop
sbb
jg
or
dec
push
mov
adc
les
loope
jle
jb
xchg
push
push
mov
scas
xor
aad
cmp
cmp
mov
sub
out
repnz
push
aaa
xor
lcall
dec
or
pop
gs
ret
mov
xor
test
pop
jb
adc
adc
xchg
jnp
test
xor
sbb
add
jbe
xadd
push
jo
inc
icebp
mov
lds
pop
add
in
enter
adc
cmp
push
or
das
and
push
cmp
mov
xchg
stos
or
add
add
cmp
leave
xchg
cmp
pop
les
fsubs
sbb
sbb
imul
pop
popa
adc
gs
test
sbb
push
jmp
std
sub
or
adc
subb
aad
sbb
pop
enter
adc
pop
inc
xor
repz
pop
js
aam
cmp
inc
test
dec
dec
jns
sub
imul
pop
xor
push
pop
and
bound
leave
ret
sub
subl
imul
test
adc
add
and
bound
or
add
shll
or
jp
jl
ret
adc
pop
push
lds
fstl
call
and
add
ffree
pop
cwtl
sbb
cltd
jno
fcoml
push
jne
dec
in
mov
ja
shrb
xchg
cmp
pop
movsl
add
add
faddl
daa
jno
inc
mov
mov
mov
jne
and
adc
aam
stos
arpl
push
and
outsl
lret
xor
enter
jne
dec
dec
and
or
repnz
xor
xchg
and
loope
mov
xor
pop
je
subl
je
cmp
cmpsl
push
adc
lea
inc
cwtl
stos
sbb
xor
push
enter
mov
mov
cmpsl
addr16
push
or
pop
imul
iret
and
rclb
out
or
push
pop
rolb
shrb
inc
jle
icebp
push
sarb
adc
sub
dec
lahf
outsb
sbb
das
popa
add
loopne
jns
popa
xor
cmp
pop
and
dec
mov
add
push
aam
xchg
sahf
dec
push
adc
fimuls
sbb
xchg
lds
add
adc
push
cmp
ret
sbb
test
mov
stos
call
sub
movsb
std
hlt
xchg
mov
mov
and
dec
fldl
je
test
and
jp
add
arpl
pushf
push
pop
rcl
orl
adc
enter
inc
jns
fsubs
inc
or
add
mov
repnz
sbb
mov
mov
cmp
loop
add
jp
jnp
push
or
mov
sbb
cwtl
mov
cmp
pop
push
dec
inc
xchg
mov
cmpsb
outsb
cmp
int3
pop
int3
jbe
jb
pusha
popf
push
inc
sub
mov
inc
movsl
cmp
jp
jb
cmp
test
inc
or
push
pop
clc
cmpsb
sahf
or
hlt
fs
push
sarb
aas
enter
ljmp
or
leavew
sub
jmp
mov
add
cltd
sbb
icebp
cli
xchg
jns
rorb
jmp
popa
and
dec
sbb
ja
inc
pop
test
and
lods
notb
daa
mov
jge
inc
mov
mov
mov
dec
rolb
add
cmp
push
lds
jecxz
adc
add
mov
or
push
mov
mov
xchg
nop
xlat
rcrl
fildl
imul
and
add
xor
les
xchg
dec
bound
mov
mov
in
xor
jae
or
sub
sbb
test
xchg
mov
push
movsl
adc
rorb
cmp
shl
xor
push
adc
and
push
jno
dec
sub
adc
out
xchg
xchg
dec
pop
mov
dec
or
mov
adc
cmpsl
jecxz
xchg
jmp
or
ss
loopne
mulb
mov
sbb
rclb
push
xchg
cs
cmpl
call
pusha
and
daa
lock
add
and
pop
mov
push
les
sbb
fdiv
sahf
sbb
movsb
pop
adc
mov
mov
mov
push
enter
leave
icebp
xchg
hlt
or
sbb
js
pop
adc
lea
push
sahf
inc
imul
aad
nop
roll
xchg
popf
cmp
dec
inc
and
add
out
les
pop
lods
sti
loopne
data16
fs
test
push
addb
movsl
cwtl
pop
aas
and
xlat
pop
rolb
outsb
pop
jp
leave
stc
shlb
repz
test
stc
ja
mov
inc
mov
nop
lret
popa
rcrl
adc
mov
push
outsb
popa
inc
loope
pusha
or
or
and
adc
push
add
repnz
clc
mov
and
push
loopne
sbb
leave
push
adcl
adc
push
subl
and
and
jge
jp
pushf
stos
das
jne
pop
pop
sti
aas
adc
mov
inc
xchg
es
ja
add
push
mov
pop
stos
fdivr
mov
mov
jns
and
adc
xor
push
push
sbb
cmpsb
inc
and
outsl
cmp
shrl
enter
inc
lods
mov
bound
xor
mov
or
ljmp
ja
sbb
add
sub
pop
sbbl
mov
test
rcl
aam
xor
jae
loope
adc
jo
shll
or
ljmp
decb
inc
xchg
dec
outsb
push
dec
xor
daa
jno
scas
pop
cmp
cmp
sbb
or
push
enter
sbb
push
cmp
jmp
addr16
sub
pop
xchg
mov
and
shrl
lcall
leave
mov
pushf
mov
push
add
movsl
xor
in
subl
cwtl
inc
add
adc
test
in
inc
xor
pop
les
outsl
push
dec
int3
gs
mov
bound
push
push
dec
pop
jbe
mov
enter
pop
inc
adc
dec
fabs
push
popa
adc
mov
loop
or
leave
xchg
mov
leave
jge
les
faddl
dec
mov
xchg
push
mov
xchg
js
jnp
jmp
cld
lds
rcrb
lds
adc
loope
pusha
mov
mov
add
lret
frstor
icebp
mov
fists
or
xchg
nop
and
lahf
mov
mov
and
test
rclb
dec
xor
daa
sub
inc
inc
xor
nop
cmpsl
pop
movsl
xchg
mov
hlt
xor
xor
addr16
and
bound
xor
arpl
jo
sbb
sub
adc
and
sub
mov
test
adcl
push
dec
add
lock
pop
sbb
jecxz
mov
xchg
rcll
sub
lcall
push
adc
adc
push
icebp
fsubr
or
int3
mov
inc
adc
mov
cmc
leave
aas
xchg
test
adc
xchg
dec
daa
sbb
adcl
xor
push
sbb
jne
or
inc
fadd
push
mov
and
cmpsb
mov
stos
inc
jne
clc
adcb
shrb
rcrl
add
or
ror
lahf
callw
cmp
jne
inc
test
add
pushf
adc
push
dec
les
or
loope
je
adc
or
adc
mov
xor
xchg
push
xor
xor
pusha
and
or
pop
sbb
add
sub
test
inc
popa
hlt
fadds
out
repnz
add
loop
or
je
rclb
mov
aad
mov
push
loop
push
in
pusha
std
sbb
dec
lods
or
jae
test
and
ret
cmp
sbb
jne
js
cmp
adc
adc
loopne
xchg
repnz
xor
mov
test
in
test
rcrl
adc
or
mov
adc
inc
xor
add
bsr
pop
in
dec
daa
add
roll
addb
push
gs
lcall
loopne
cwtl
xor
push
sub
ljmp
ror
push
adc
imul
repz
addr16
push
push
and
mov
enter
cmc
bnd
or
xchg
push
jecxz
lock
cmpb
daa
shlb
out
fadds
addr16
push
xchg
loop
lret
xor
test
push
cmpsl
shrb
jae
es
mov
mov
and
dec
xor
add
xchg
test
fiaddl
mov
mov
push
or
mov
mov
test
adc
mov
cmp
jmp
mov
fildl
add
cmp
inc
add
xlat
jp
lods
jmp
mov
rcrl
add
jb
lahf
push
repz
sbb
or
test
cmp
cmp
outsl
int
jne
pop
sbb
and
movsl
inc
push
add
out
dec
pop
xchg
sbb
push
dec
aam
or
inc
movsb
push
std
xor
cmc
cld
xor
repnz
shlb
aam
in
cmpsl
int3
mov
mov
mov
aad
sub
inc
lahf
add
lea
cwtl
lods
stos
in
mov
xchg
outsl
ret
pop
push
and
jno
mov
stos
or
mov
pop
nop
popa
pusha
push
mov
inc
jae
inc
test
and
shrb
imul
sub
or
pop
push
pushf
or
testb
mov
insl
add
adc
or
xor
mov
mov
sbb
addr16
leave
and
insl
inc
nop
mov
inc
fwait
mov
gs
push
jl
jmp
sbb
sub
scas
xor
inc
dec
mov
test
mov
call
and
insl
push
add
dec
inc
out
lahf
pop
add
in
daa
jnp
js
ret
lahf
cmp
lea
shlb
and
push
mov
shll
mov
push
dec
lcall
push
cmp
jnp
xor
xor
jg
mov
add
and
adc
paddusw
sbbb
out
pop
das
bound
test
jne
jmp
popf
lock
cmp
push
lcall
movsl
mov
repnz
xor
and
movsl
cmpsl
push
in
adc
sub
rcrl
orb
inc
and
xor
pop
outsl
mov
pop
push
jno
sub
adc
adc
addr16
test
cmp
cmp
adc
into
mov
or
inc
inc
mov
aam
inc
das
and
push
and
mov
out
adc
js
jnp
cmp
push
aaa
add
and
mov
xchg
sbb
les
push
rcrb
lea
xorb
push
je
cmp
sub
test
test
push
mov
mov
fsubs
arpl
aaa
adc
and
inc
jbe
je
inc
enter
fnstcw
inc
xchg
xor
out
add
loopne
sub
loopne
cltd
jl
call
inc
mov
test
xor
xchg
lods
add
add
fwait
rcl
inc
pushf
mov
xor
jns
test
sub
fldenv
add
cmpsl
push
mov
cmp
or
sub
jo
mov
scas
adcb
inc
add
sub
mov
push
jae
repz
shlb
dec
mov
test
rep
outsb
lods
pusha
and
cmp
inc
push
add
cmp
xor
jmp
push
push
adc
jl
es
loop
cld
or
scas
cs
sbbb
popf
mov
movsb
mov
xchg
jmp
jo
or
pop
dec
rorb
or
aaa
stos
mov
shlb
daa
cs
or
hlt
xchg
adc
lock
imul
ret
cmp
mov
insb
and
push
sbb
inc
xchg
test
jp
push
aaa
std
pop
inc
sbb
pop
ror
inc
out
pop
pop
stc
ljmp
bound
jecxz
movsl
pop
sahf
xchg
and
inc
sbb
fadds
add
adc
lock
mov
fwait
bswap
lea
xchg
mov
add
int
cmp
nop
mov
cmpsl
mov
aad
dec
popf
mov
adc
jmp
sbb
or
sub
push
lds
sbb
inc
xchg
xor
pushf
or
jge
cmpb
les
arpl
popa
inc
mov
pusha
ss
cmpsb
int
aad
jmp
jo
inc
movlps
orl
cs
sbb
xchg
imull
adc
gs
mov
xchg
leave
mov
in
mov
dec
fs
mov
xchg
loope
sub
and
stos
xchg
mov
insl
pop
das
and
repz
loope
jnp
imul
adc
jnp
add
repnz
lret
inc
inc
dec
inc
jno
dec
inc
or
xor
popa
insl
adc
mov
adc
sbb
js
insl
inc
jb
pop
enter
shrl
cmpsb
sub
inc
mov
cmp
inc
inc
xchg
adc
gs
sbb
and
insb
mov
pop
mov
add
mov
push
mov
add
inc
insl
dec
stos
movsl
add
jo
inc
or
cltd
ljmp
in
nop
inc
leave
into
lods
or
sub
or
cmpsl
add
icebp
mov
sbb
and
or
or
sbb
ds
mov
sub
mov
adc
inc
jb
or
roll
xor
fstp
push
cmp
shl
popa
mov
mov
inc
adc
and
mov
roll
fdivs
cmpb
inc
and
shl
pop
ss
outsl
adc
xchg
sub
gs
sbb
adc
mov
std
inc
enter
mov
push
lcall
add
cmpl
adc
adc
adc
adc
jae
rolb
and
repz
xchg
fstl
cmc
in
data16
sbb
testl
arpl
push
inc
add
and
inc
and
loope
jmp
push
push
fisubl
enter
es
or
shrb
lock
movsl
je
xchg
aam
add
or
ja
test
sar
scas
and
ljmp
mov
mov
fisttpl
mov
test
cmp
jge
mov
jne
shl
leave
inc
xchg
cmp
push
outsl
and
and
xlat
pop
dec
adc
sbb
dec
es
lahf
cmp
ljmp
fstpt
pusha
aad
scas
push
leave
push
sarb
je
dec
mov
test
mov
add
js
call
mov
cmp
aad
add
xchg
adc
mov
xor
dec
sub
mov
test
add
lock
out
rclb
in
xor
adc
adc
mov
ss
rclb
clc
jae
lds
lret
addb
aad
inc
dec
cmp
jo
rcl
ja
fcompl
xchg
or
aas
adc
lods
mov
xchg
jne
lahf
sbb
push
ja
jl
and
test
mov
daa
add
inc
adc
cwtl
mov
lods
push
jb
cmc
push
iret
mov
mov
int3
les
daa
shr
inc
xor
int
inc
push
test
adc
scas
pop
cmp
and
push
jmp
and
pop
or
insb
inc
adc
mov
lds
loopne
inc
sbb
ja
mov
sbb
cmpsb
inc
or
xor
push
shll
add
addb
push
pop
and
sub
cmp
add
and
out
call
pop
hlt
sbb
xchg
jae
xchg
push
and
or
aad
imul
xorb
cmp
jo,pn
mov
xor
addl
cmpsb
dec
ret
adc
mov
or
sub
dec
shll
mov
clc
inc
xor
adc
jecxz
std
adc
cmpsl
imul
cmpb
push
xor
adc
sub
xorb
lea
inc
into
imul
push
nop
popw
daa
adcb
inc
inc
stos
cmp
and
mov
mov
les
xor
cmp
sub
jo
mov
dec
mov
cmp
imul
add
or
out
lea
jns
jecxz
push
cmpsl
cltd
sub
dec
pop
rolb
es
xor
popa
mov
pop
test
and
and
lret
lcall
xor
in
xlat
imul
inc
pusha
add
shll
sub
inc
lods
mov
mov
inc
add
cmp
dec
and
ljmp
jbe
fdivrl
xor
loope
popa
inc
and
lea
das
sbb
pop
out
fisttpll
pop
test
add
mov
jno
xlat
xor
xor
lahf
inc
ret
push
add
shl
stc
adc
in
int
mov
push
sbb
add
and
or
xchg
sti
roll
nop
orl
and
sbb
adc
cs
xchg
es
loope
shrl
les
inc
and
push
xchg
add
mov
adc
jne
or
pop
xchg
jge
loop
scas
sub
add
mov
je
sub
mov
push
push
mov
dec
test
out
nop
dec
fsubl
leave
adc
sub
cltd
dec
add
cmp
sub
je
inc
lock
or
xchg
je
xor
stc
mov
push
cmp
xor
cmp
sbbl
loope
dec
out
pop
jmp
pop
imul
jno
or
xchg
sub
les
mov
insb
push
xor
fsts
ds
lcall
out
aad
or
adc
mov
lea
mov
nop
movsb
cmp
adc
or
inc
cmp
push
lds
xchg
fldt
xchg
sbb
sbb
inc
or
cmpsb
or
repz
and
add
js
add
and
xchg
hlt
mov
jno
sub
insl
arpl
push
call
test
push
mov
xor
loop
pop
jg
and
cmp
pusha
rorb
mov
add
outsl
dec
add
mov
aam
lods
inc
scas
xor
mov
test
stos
mov
jne
jle
imul
loope
je
cmp
or
daa
jne
popa
xor
jge
add
add
in
push
inc
adc
test
lret
jp
scas
icebp
add
pusha
add
stc
ret
and
mov
push
dec
les
dec
inc
xor
mov
sub
pop
lds
ret
movsb
xor
and
xchg
push
xor
lcall
dec
hlt
scas
pop
ficompl
xlat
aaa
leave
dec
and
or
lahf
out
cmc
and
xchg
adc
sarb
xchg
mov
mov
fists
xchg
ret
stos
fwait
jb
mov
shll
bound
jbe
mov
cmp
loop
xor
or
push
xlat
in
sbb
push
aad
fistps
outsb
xor
in
mov
gs
mov
xchg
jb
rcrb
faddl
cs
mov
mov
mov
cmp
inc
jbe
add
out
push
call
and
mov
inc
push
repz
enter
ljmp
addb
or
aam
repz
sbb
and
add
jmp
jo
inc
cmp
cmc
dec
push
pop
test
enter
ds
popf
push
adc
cs
push
test
inc
movsl
stc
mov
sbb
cltd
popa
addr16
sub
pusha
rorb
sub
cmc
jne
fsubs
cmp
orl
xor
and
mov
xor
sbb
pusha
bound
divl
add
imul
shlb
cmpsb
mov
sbb
cmpl
iret
add
push
mov
push
movsb
add
or
jmp
xchg
sbb
xor
lret
daa
bound
inc
mov
leave
nop
repz
jb
adc
pop
shr
test
cmp
xchg
inc
mov
mov
add
mov
dec
push
pop
add
je
icebp
sub
call
mov
cli
sub
lret
push
sbb
call
xchg
pusha
sub
sub
imul
jecxz
icebp
or
adc
xorl
push
outsl
lcall
je
sbb
shlb
sbb
test
into
inc
shrl
mov
push
mov
cmp
idivb
mov
inc
mov
scas
fnstcw
sub
jecxz
sti
push
and
inc
mov
fcom
test
and
and
mov
xor
mov
jo
inc
mov
cli
xchg
cmp
cld
push
xchg
inc
jo
jns
lds
mov
xor
enter
lcall
and
es
fistl
scas
sub
add
inc
mov
adcl
pop
mov
ds
jmp
adc
mov
push
jmp
mov
bound
cmp
repz
fnstcw
xor
subl
adc
inc
inc
add
loop
icebp
mov
push
pusha
sbb
pop
jmp
mov
mov
idivb
adc
add
shl
adcb
push
xlat
rolb
ljmp
jb
dec
mov
mov
in
jno
dec
xor
inc
subb
pop
adc
sub
pop
rorb
add
outsl
iret
lds
cmp
rolb
push
cmp
pop
mov
push
add
inc
dec
mov
cmp
adc
jnp
test
dec
in
mov
inc
arpl
stc
cmpsb
cmp
pusha
int
pop
or
cmp
sbb
mov
pop
enter
lahf
or
jbe
or
cmc
push
xor
js
dec
icebp
jmp
mov
pop
add
pop
xlat
leave
pusha
sub
dec
test
xchg
add
xor
mov
push
push
call
aas
in
fisubrs
dec
adc
data16
or
lret
pop
pop
pop
es
adc
add
xor
shrl
lea
es
cmc
mov
push
stc
add
jne
inc
or
mov
adc
test
xchg
push
adc
mov
pop
aaa
adc
or
sbbl
loope
rcl
and
add
xlat
leave
xor
cmpb
fwait
movsb
and
cmp
lods
or
enter
icebp
jl
es
popf
mov
nop
cmp
sahf
ljmp
adc
add
push
scas
es
rol
add
mov
push
inc
and
jno
dec
adc
inc
adc
sub
jle
and
int
and
scas
insb
and
pop
mov
fs
outsl
xor
shlb
jae
shrl
imul
or
sbb
inc
outsb
ret
cmp
sarb
adc
inc
sbb
cld
xchg
imul
stos
jecxz
push
rcrb
mov
insb
or
push
mov
mov
sub
je
mov
add
lcall
mov
add
in
push
mov
int
sub
sbb
add
daa
jo
leave
push
mov
daa
flds
sub
aaa
testb
dec
or
jnp
xor
in
popa
adc
and
dec
aam
scas
pop
sub
xor
decl
jo
dec
pop
add
cmpsb
sbb
xchg
cmp
jmp
sbb
outsb
jmp
push
mov
dec
sub
mov
push
or
aas
nop
jmp
dec
outsl
dec
mov
mov
mov
data16
cltd
mov
cmp
dec
lcall
ret
inc
xor
adc
add
push
test
and
mov
aam
and
ljmp
xlat
and
xchg
mov
jmp
inc
adc
subl
sbb
mov
adc
xchg
cmp
popa
cmc
call
les
jle
push
jp
popa
cmp
xchg
add
push
popa
mov
lock
pop
xor
mov
ja
adcl
fisubl
popf
or
add
lds
inc
pop
dec
push
add
push
xchg
dec
cwtl
ss
inc
leave
daa
sbb
adc
cmp
lods
xchg
outsl
loopne
mov
adc
sub
push
dec
add
rcrb
push
jbe
dec
dec
pusha
cmp
adc
jb
push
push
push
adc
loopne
sub
dec
cmp
cmc
add
jno
addb
rclb
add
or
push
inc
lret
inc
repnz
and
push
mov
aas
jo
adc
push
cmc
mov
test
adc
scas
in
adc
loope
test
pop
push
repnz
xor
inc
inc
loop
push
adc
dec
xor
mov
cmp
or
call
test
enter
and
rolb
jo
dec
adc
adc
and
sub
add
shrb
or
push
pop
out
inc
in
add
mov
push
add
mov
in
add
inc
adc
dec
dec
and
es
or
cmp
ds
rorl
adc
push
sub
pop
ret
inc
mov
sbb
inc
or
rolb
sub
add
pushf
js
dec
cwtl
outsb
mov
std
sbb
bound
repz
imul
mov
imul
and
test
daa
pop
cmc
sub
adc
mov
sarl
hlt
and
push
sbb
xor
cmp
jnp
cwtl
data16
data16
mov
xchg
sub
inc
and
inc
add
jecxz
ljmp
aas
ljmp
ss
xor
ja
xchg
xor
push
test
in
stos
add
lea
mov
pop
lds
sbb
xorl
xchg
mov
jne
mov
push
rorb
xchg
sbb
loopne
aas
cmpsb
add
inc
and
push
call
leave
shll
aaa
xor
sbb
adc
pop
daa
push
movsb
jns
add
pusha
adc
or
mov
cs
imul
sbb
rorb
inc
pop
in
rcrb
or
add
mov
mov
fwait
cmp
or
jo
rorb
js
adc
jne
cmp
pop
xor
mov
fisttpl
test
out
jb
xor
mov
mov
scas
nop
and
loopne
fildl
dec
push
sbb
mov
push
repnz
mov
mov
scas
and
insb
popf
aaa
push
adc
xchg
add
mov
cmpsb
mov
movsb
and
arpl
mov
adc
inc
leave
pop
popa
movsb
lea
dec
and
fcmovb
cmpsl
stos
adc
inc
jbe
push
sbb
mov
jp
mov
adc
push
hlt
cmp
cmp
add
mov
into
jp
cmp
cmp
fs
xchg
es
mov
cmp
sub
outsl
inc
push
ror
push
push
icebp
pop
mov
jp
pop
xor
push
xor
push
push
cmp
and
add
mov
roll
adc
cmp
or
out
std
imul
push
mov
test
push
dec
inc
jnp
setle
lods
or
pop
stc
inc
testl
xor
out
or
mov
adc
push
imul
push
xor
push
leave
btr
data16
stc
or
mov
ficompl
pop
xor
bound
mov
or
call
sbb
loopne
inc
flds
inc
pop
push
inc
or
mov
add
xor
stc
dec
loope
rcrb
xor
mov
add
adc
adc
pop
xor
push
xchg
pusha
and
sub
or
pop
xor
xchg
fiaddl
add
push
push
and
outsl
loopne
aaa
push
inc
fisttpl
push
xlat
add
push
jl
push
adc
jg
ret
lahf
mov
push
insb
iret
ret
xor
call
push
pop
jle
cld
into
push
movsb
imul
cltd
mov
daa
sbb
jecxz
mov
repz
jnp
adcl
dec
leave
mov
push
sub
add
and
cwtl
popf
icebp
ss
rcrl
mov
push
addl
rcrb
shrb
lcall
test
cltd
sbb
bound
push
loope
cmp
std
pop
aad
orb
js
cmp
jnp
sub
or
stc
sub
inc
and
xor
adc
xor
js
add
push
sysret
enter
push
xchg
sub
stos
js
adcb
test
and
insl
jmp
dec
cmp
mov
mov
mov
rcrl
repz
push
inc
push
xor
sub
int3
mov
ror
add
cmp
loope
inc
js
adc
mov
lret
lcall
inc
in
cmc
xlat
inc
pop
popa
popa
inc
adc
add
xchg
pop
inc
push
mov
pop
es
mov
mov
add
jns
jae
xchg
daa
aad
sbb
inc
lock
jo
clc
push
jp
test
mov
mov
add
push
filds
add
imul
and
sbb
cmp
mov
mov
int
sub
stos
sti
jno
je
sub
rclb
jne
or
cmp
insb
adc
jmp
jne
ret
pop
lods
adc
xchg
mov
lock
adc
in
sbb
push
test
jns
mov
mov
pusha
cmpsl
movsl
or
mov
pop
jmp
lock
dec
push
shr
xor
push
and
cs
shll
cmp
push
mov
xor
xchg
xor
insb
and
mov
or
fisttpl
int
add
mov
push
push
push
gs
pop
shrb
jle
cwtl
add
imul
sbb
imul
mov
icebp
adc
xchg
or
imul
inc
arpl
and
or
or
or
push
xor
adc
in
add
and
test
in
stc
sbb
and
jecxz
rol
mov
aaa
sub
dec
inc
push
rorb
xchg
and
push
insl
mov
xchg
inc
push
test
jl
sub
sub
xchg
add
sub
push
xchg
mov
mov
push
mov
rorb
rclb
jl
cmp
push
int
adcl
enter
adc
insb
or
mov
nop
jo
test
sbb
das
jns
mov
lds
pusha
sub
shrb
and
cli
divl
pop
pop
loopne
adc
mov
arpl
add
push
adc
arpl
push
cmp
dec
adc
les
adc
imul
aam
in
dec
je
jl
xchg
sbb
push
jnp
pop
push
add
arpl
sub
bound
jo
nop
sub
lcall
dec
push
bound
push
mov
push
and
leave
sbb
sbb
inc
stos
sub
or
addr16
addb
pop
push
cmp
sbb
jne
mov
popa
pop
mov
or
loop
add
add
and
lea
xor
xchg
xchg
loopne
mov
push
jo
test
test
ret
fsts
lock
inc
sub
adc
and
cmp
xor
xor
pop
mov
mov
incl
test
ret
clc
and
mov
adc
bnd
ret
pop
test
sub
cmp
outsb
and
ss
add
cltd
cmc
das
shlb
or
cmp
cmp
pop
imul
aad
inc
xor
bound
sub
xor
cwtl
ljmp
aaa
cld
mov
sub
adc
adc
popf
cld
push
add
stc
jecxz
mov
sbb
jge
adc
add
xor
aaa
lock
ficomps
stos
sbb
xor
and
inc
movsb
jne
and
rcpps
sub
and
leave
popf
push
or
mov
dec
sbb
aad
fistps
add
int3
daa
sub
insl
inc
add
and
mov
test
jbe
shrb
loope
inc
xor
shl
roll
adc
lcall
call
stos
in
sbb
lods
cwtl
mov
add
pop
repz
adc
mov
nop
out
stos
sub
sbb
lret
cld
sub
adc
jo
ret
jae
outsb
pop
daa
sub
stos
mov
pusha
repz
ja
mov
dec
adc
inc
rorl
orl
mov
aad
shr
test
add
jbe
adc
mov
inc
test
in
jo
daa
aas
test
outsb
inc
stc
sti
mov
xchg
movsl
lds
test
inc
cmp
push
test
and
pop
roll
add
ret
mov
mov
xor
bound
inc
add
mov
loopne
loop
test
and
push
cld
inc
xlat
add
xchg
into
lret
xchg
add
and
push
sub
sub
jg
sub
mov
cmpl
dec
add
push
add
scas
dec
sub
mov
push
or
inc
imul
inc
js
popa
mov
mov
adc
jo
prefetchnta
mov
cli
and
fisubrl
lahf
dec
sahf
or
cmpl
rcrb
mov
popa
pop
gs
mov
inc
xchg
and
loope
xor
push
sti
xlat
jge
cltd
ret
push
jo
add
pushl
xchg
rcrb
adc
mov
loope
clc
leave
add
pop
sbbl
and
dec
call
cmc
and
mov
adc
push
xor
inc
xor
sub
rol
pop
fcompl
jge
sbbl
or
add
movsb
loopne
and
or
xchg
push
sarb
mov
das
test
jg
call
insl
rcrl
cltd
adc
adc
dec
pusha
stos
addr16
inc
pop
sahf
cltd
fsubrs
add
xchg
push
xchg
orl
das
and
std
lcall
cmp
inc
es
xor
test
pop
sub
cmpb
andb
adc
adc
fldcw
xchg
and
pop
and
test
push
call
inc
adc
sbb
adc
repz
adc
pop
adc
or
adc
arpl
and
icebp
sbbb
jecxz
movzbl
subb
mov
nop
fldl
inc
aad
sub
add
sbb
xchg
enter
adc
and
nop
sub
stos
cwtl
push
adc
repz
jno
dec
cmpl
and
popa
adc
push
lea
xchg
fs
bound
in
jne
jno
sub
lret
loope
sub
pop
add
push
call
or
imul
or
cmp
sarl
add
xor
xor
stc
stos
addb
cmp
test
movsb
mov
inc
movsb
mov
and
loop
xchg
test
cmp
mov
xor
das
repz
and
aad
mov
ret
adc
repz
push
fnstenv
out
shlb
cmp
cmp
dec
and
mov
cmp
ljmp
mov
sbb
cmp
movsb
mov
add
sbb
or
xchg
xor
dec
mov
aam
imul
mov
popa
mov
jecxz
test
and
adc
jae
mov
sub
rclb
jmp
mov
stos
sub
jl
dec
adc
stc
les
mov
cwtl
loop
adc
cltd
aam
add
mov
jo
add
lea
sbb
and
loopne
mov
xor
aas
xor
jp
cmp
and
pop
xor
mov
lock
xor
jmp
adc
adc
jl
jns
adc
cmp
pushf
les
ja
cmp
cmpsb
mov
loope
enter
sbb
clc
jo
cmp
push
leave
in
adc
adc
inc
jmp
jecxz
out
iret
pop
sub
shlb
test
in
rclb
jl
insb
push
leave
xchg
push
aad
and
test
pop
les
pop
push
js
mov
aad
jmp
enter
adc
imull
adc
xor
and
lods
addr16
sbb
inc
shlb
dec
inc
adc
dec
leave
xchg
fstpt
pop
out
and
mov
or
mov
jmp
or
repz
add
mov
inc
sbb
fldenv
rol
jle
repnz
pop
xor
xchg
xor
jp
xor
inc
inc
mov
jge
and
addl
xchg
inc
mov
andl
add
lahf
ret
xchg
outsb
shrl
pushf
or
imul
mov
repz
pop
nop
lahf
enter
sub
xorl
sbb
lods
es
aaa
adc
in
cltd
fs
ret
adc
push
push
mov
adc
xor
inc
and
and
adcb
or
hlt
add
iret
cmpsb
leave
dec
push
inc
push
cmp
sub
or
and
or
xchg
mov
std
dec
mov
add
inc
adc
mov
ja
scas
fmull
popf
add
inc
mov
lea
mov
add
mov
mov
sbb
sbb
xlat
das
lods
imull
sbb
push
in
cltd
mov
inc
push
iret
rolb
jecxz
inc
adc
leave
and
andb
das
sub
subb
aas
xor
push
adc
stc
dec
pop
dec
inc
pop
lods
fstps
or
cwtl
stos
add
popl
inc
divb
ss
out
fwait
ds
sub
ja
adc
repz
or
cmpl
add
dec
leave
lahf
add
clc
jnp
clc
rcl
push
inc
mov
mov
add
and
pop
lcall
mov
cmc
pop
adc
and
das
and
fcompl
pop
push
cmp
adc
dec
lcall
inc
jno
xchg
fwait
cmp
mov
aam
ret
sbb
ljmp
cmp
sbb
enter
inc
sti
push
aas
inc
jle
lcall
pop
rorl
shlb
mov
sbb
sbb
lods
test
je
add
lcall
and
pop
jmp
scas
xor
sahf
stos
push
data16
pushf
loopne
pop
jl
ficoms
rorb
cmp
fwait
push
xchg
xor
mov
cmpsl
mov
cs
daa
icebp
repnz
dec
pop
push
pop
es
mov
add
es
adc
lcall
xchg
shlb
push
push
sbb
idivl
inc
add
clc
and
pusha
in
aaa
or
inc
mov
scas
movsb
mov
jge
mov
movsl
hlt
icebp
sbb
push
cmpsl
decl
rcrl
jo
fucomip
jl
lds
or
rcrb
pop
jae
jg
imul
push
push
cmpsl
add
fwait
xor
add
sbb
fdiv
movsb
mov
lods
push
mov
in
add
sub
jg
cmpsb
dec
sahf
mov
test
or
pop
fwait
insb
or
push
or
scas
imul
add
add
xchg
inc
loopne
push
push
jmp
or
lods
pop
into
aad
and
mov
nop
loopne,pn
das
xchg
xchg
pop
aad
aas
std
adc
fwait
pop
mov
mov
or
dec
push
notl
cmp
xlat
xchg
or
cmpsb
and
xor
jl
enter
or
insb
push
add
inc
jnp
and
adc
imul
pop
cmp
repnz
call
adc
cmp
test
xor
daa
mov
ljmp
int3
mov
in
add
sahf
or
add
les
mov
push
frstor
push
daa
pop
and
adc
sbb
subl
jno
sub
and
sub
xlat
push
push
inc
daa
sub
nop
add
stos
sbb
mov
hlt
add
adc
pop
cmp
and
in
jnp
or
test
popa
sbbb
ret
xor
std
inc
and
mov
jo
or
or
or
pushf
mov
dec
mov
mov
add
fsts
xchg
fstp
jmp
test
cmp
loope
add
dec
mov
sbb
mov
cmp
add
lahf
push
ljmp
add
popf
add
fst
mov
or
or
jecxz
mov
add
and
mov
mov
jecxz
loopne
enter
mov
pop
cs
inc
mull
pop
sub
mov
fldl
and
cmp
mov
jecxz
dec
push
aaa
leave
ret
xor
clc
fisttpll
mov
xlat
push
enter
lahf
test
cmpsb
pop
jns
out
push
cmp
inc
das
jmp
xchg
je
or
mov
xchg
mov
mov
aam
lods
loopne
ja
je
jb
fldenv
out
and
xchg
ret
inc
add
aam
dec
inc
or
shlb
or
pop
sub
loope
mov
sti
call
add
push
fildll
icebp
mov
adc
sbb
lods
push
scas
cmpsl
mov
iret
sub
dec
sub
addr16
xchg
in
dec
and
push
daa
push
loopne
cmpsb
insl
xchg
aas
push
add
dec
xor
xlat
aad
in
addl
insb
jne
add
dec
push
cltd
rol
and
add
xchg
je
cmp
xchg
mov
or
xor
xor
inc
sbbl
push
sub
js
mov
pop
add
mov
arpl
pop
mov
pop
cmpl
adc
loopne,pn
aas
movsl
adc
sub
xor
inc
lds
fs
add
push
or
js
pop
stos
jo
jp
jo
je
mov
bound
jge
decb
pop
push
and
or
sub
and
aaa
xchg
push
je
or
test
add
push
pop
push
or
inc
test
aad
inc
leave
lods
xor
adc
jg
movsl
rclb
sub
jge
push
add
popf
mov
arpl
xor
push
lods
sti
mov
ss
or
rorb
xorl
adc
pop
sbb
pop
sbb
and
mov
cmp
pop
arpl
add
add
imul
mov
lahf
test
or
inc
test
rorb
push
bound
sbb
adc
add
iret
sub
test
add
add
shlb
mov
jo
rorl
sbb
inc
mov
adc
sbb
mov
mov
loop
push
xor
jnp
cmp
cmpsl
nop
frstor
inc
push
hlt
and
out
flds
dec
lahf
js
or
in
mov
mov
call
adc
mov
iret
nop
sbb
xor
sub
sbb
sbb
data16
or
nop
push
jge
adc
dec
dec
iret
lods
push
sbb
mov
lea
inc
mov
pop
add
cmc
push
xlat
inc
loope
add
mov
adc
add
adc
mov
pop
push
pop
xlat
adc
mov
bswap
arpl
stc
and
fildll
sub
repz
cmp
cmp
jno
stos
ss
jno
filds
stos
xlat
inc
inc
adc
and
dec
sub
push
mov
cmpsl
or
movb
inc
adc
sbb
aam
rclb
das
ret
inc
jmp
or
nop
mov
fwait
pop
adc
je
nop
sbb
add
push
push
clc
andb
mov
es
push
adc
inc
loop
rcrl
aas
test
and
cmp
loop
xlat
and
lcall
inc
jle
mov
inc
adc
mov
push
add
and
xchg
push
push
pop
push
rorb
filds
mov
pop
jne
cmp
add
test
push
leave
mov
xor
gs
pop
pop
xchg
inc
add
jae
fisttpll
leave
push
vsqrtps
dec
out
adc
xor
mov
and
sbb
push
inc
push
lea
xlat
mov
movsb
aam
das
test
popf
cmp
aad
inc
and
fwait
mov
rorb
call
xor
xchg
shll
jbe
or
popa
sbb
test
add
inc
push
push
xchg
xchg
and
add
cmp
loope
mov
lea
add
mov
pusha
rclb
mov
and
sub
inc
aaa
test
test
adc
insl
mov
int
push
jo
dec
arpl
movsl
call
and
adc
xchg
jns
mov
das
mov
outsb
adc
and
adc
sub
jmp
sbb
and
stos
sub
test
xchg
or
and
out
outsl
and
rcll
std
movsl
test
dec
push
add
shrw
incb
loop
inc
sahf
mov
sub
add
les
lahf
add
add
push
daa
fs
ret
adc
aam
dec
aaa
test
inc
pop
pop
jno
repnz
movl
push
mov
push
adc
push
or
adc
adc
idiv
gs
add
fs
push
aad
leave
xor
sbb
sbb
call
mov
popa
inc
xor
shr
shr
popf
insb
add
add
orb
dec
add
mov
rcll
xchg
je
aad
jge
inc
int3
pop
loopne
push
outsb
jg
mov
push
out
mov
js
pop
outsl
scas
mov
mulb
xchg
lret
clc
jl
pop
inc
and
repnz
xchg
into
pop
mov
lods
cmp
sbb
mov
adc
inc
int3
icebp
xor
or
push
mov
leave
mov
test
cs
ja
or
insb
push
adc
push
out
enter
or
loope
adc
mov
cltd
repz
das
dec
dec
and
imul
dec
das
mov
add
nop
cmp
push
dec
inc
imul
pop
inc
ficoms
or
ret
jo
adc
call
subl
xor
cmp
loop
mov
cmpsl
and
push
out
adc
adc
out
lds
dec
adc
movsb
or
adc
push
leave
adc
push
jl
xor
shrb
adc
push
xor
mov
adc
jo
shll
dec
and
ds
add
xchg
adc
pop
test
mov
out
jae
or
add
push
sarb
add
add
ss
in
mov
lods
and
arpl
and
in
insl
inc
add
jg
jne
push
cmp
mov
xchg
xchg
xor
add
cmp
pusha
mov
leave
dec
jbe
popa
adc
push
xchg
jmp
lea
or
imul
rorb
nop
push
mov
mov
mov
inc
adc
cmp
orb
xor
clc
or
aas
mov
sub
fnstenv
push
lcall
inc
lea
rcrl
add
pop
leave
cmp
sbb
and
adc
adc
xor
or
idivb
xchg
cmpsb
ret
adc
cs
sub
cmpsb
pop
xchg
aam
lcall
imul
sbb
pop
rolb
cmovae
shr
push
push
dec
cwtl
and
pop
push
cs
mov
push
ljmp
pop
and
cmp
or
loopne,pt
lea
mov
mov
mov
xor
sbb
cmp
push
cmpsb
mov
xchg
add
into
in
cmp
xor
pop
add
xchg
fstl
insl
repz
xor
and
jl
and
stc
fs
push
sbb
inc
aas
inc
xchg
mov
mov
fisttpl
mov
adc
or
aaa
push
xorb
and
pushf
ret
mov
add
mov
xchg
jno
dec
sbb
or
cs
stos
adc
lea
pop
nop
mov
cld
test
cwtl
test
test
insl
add
das
rolb
sbb
shl
or
movsl
aaa
scas
or
sbbl
lret
repnz
fwait
stos
ret
ljmp
inc
cmpsl
nop
push
and
popl
jecxz
fists
test
adc
into
adc
dec
push
xchg
lcall
movsb
push
sbb
addl
push
das
hlt
pop
push
or
imul
jno
jns
gs
or
loopne
add
movb
test
push
jp
xchg
add
sub
push
jae
addb
cmpps
adc
push
dec
xor
xchg
pop
leave
and
je
and
inc
ret
push
mov
popf
dec
jl,pn
sarl
clc
and
pop
xchg
xlat
ret
inc
add
mov
inc
push
mov
sub
pop
in
pop
pop
ja
ret
or
mov
jo
cmp
cltd
jne
je
xor
jne
inc
lcall
xchg
pop
pop
loope
mov
lcall
pop
movsl
into
push
mov
and
test
ljmp
sbbb
iret
add
mov
sbb
dec
rolb
hlt
and
popa
call
rorl
rcrl
je
mov
mov
sub
loopne
pop
test
push
jo
jp
jge
cmp
xchg
leave
inc
movsl
mov
test
push
dec
mov
and
seta
xor
pusha
inc
cmpsl
xor
adc
dec
push
cmpsl
pop
lea
scas
inc
out
pop
xor
or
inc
mov
inc
or
adc
mov
or
push
jns
cmp
add
js
dec
scas
sbb
mov
xorb
stos
push
sbb
add
xchg
mov
popf
xor
cmp
jne
push
fwait
jmp
flds
sub
test
inc
enter
mov
add
rcr
dec
rcrb
mov
ljmp
andl
adc
dec
push
das
adc
in
or
jecxz
and
scas
dec
jecxz
cmpsl
xor
lahf
dec
sub
inc
xor
and
mov
cltd
mov
adc
inc
cmp
jo
setb
lahf
xor
and
or
inc
inc
sub
push
sbb
push
xchg
lods
add
stos
pop
mov
xchg
inc
push
loope
sbb
sub
pop
lea
fcomps
xor
xor
add
pop
stos
add
je
scas
inc
sbb
in
dec
scas
push
add
call
xor
out
cmpsl
sub
push
xor
adc
mov
add
sub
mov
and
inc
jo
fldenv
and
xchg
inc
ffree
mov
cmp
stos
add
sbb
scas
or
adc
stos
in
stc
push
addr16
add
or
stc
in
fsubr
sbb
inc
and
jnp
xlat
mov
movsl
popf
dec
cmp
adc
test
xor
addl
movsl
mov
sbb
arpl
add
pop
movsl
mov
je
ljmp
xchg
or
add
sbb
inc
xor
pop
es
les
pop
mov
daa
arpl
ret
xor
push
leave
pop
inc
and
lahf
dec
push
fidivs
test
push
pop
adc
addl
fadds
jne
pushf
add
xchg
hlt
push
push
and
xchg
adc
pop
mov
cmp
mov
jmp
jmp
inc
add
or
mov
aam
test
push
cltd
jecxz
popaw
mov
push
jg
sub
nop
mov
push
arpl
shl
sahf
mov
xor
sbbl
test
stos
sti
push
mov
bound
popa
and
ljmp
xchg
xor
cmp
adc
cmp
adc
fwait
rol
mov
sub
push
push
es
sub
dec
ja
ljmp
push
push
das
inc
movaps
add
sub
xor
aad
in
and
push
ss
ftst
std
lods
popa
dec
aaa
lock
push
cmp
adc
cmpsl
mov
mov
js
ret
aad
cmp
in
repnz
imul
incl
inc
add
sub
pop
out
pop
sbb
push
popa
shr
push
pop
mov
lea
or
add
pusha
add
inc
pop
push
mov
nop
xchg
fwait
enter
into
cwtl
pusha
out
add
cs
push
sbb
dec
fsubs
cmp
insl
sbb
push
loope
fwait
lcall
sub
sub
aas
inc
and
mov
rolb
xchg
jle
loope
movsl
cmc
mov
subl
mov
shl
pop
jmp
lret
insb
xchg
mov
and
adc
sub
xchg
and
addb
cmpsb
xchg
repnz
pop
mov
call
adc
jnp
data16
mov
cmp
or
push
cmovnp
add
andl
repz
mov
sbb
jae
cmp
out
lods
sbb
cmpsl
pop
aam
and
repz
leave
jae
stos
dec
cmp
cwtl
cmp
cmp
pop
repz
push
jns
push
inc
sbb
jle
inc
dec
loopne
push
add
adc
jl
mov
aam
pop
cli
and
pop
xor
cmpsb
dec
pop
test
stc
adc
out
into
mov
orps
push
mov
or
addl
push
xor
push
stos
cmp
xchg
fistpl
pop
pop
stc
push
xchg
push
pushf
sbb
imul
xchg
and
dec
scas
sbb
flds
sub
add
mov
inc
inc
popl
mov
mov
inc
push
loop
insb
or
sub
dec
bsf
test
std
push
sbb
jbe
mov
fisubs
sub
mov
push
add
les
jno
and
jmp
out
sub
jmp
xor
in
add
jg
add
mov
lods
loopne
push
aad
sbb
mov
lcall
stc
out
xor
dec
js
pop
xchg
jle
jl
xchg
repz
dec
scas
cmp
push
cmpsl
shrb
cmpsl
test
inc
xchg
jle
mov
sub
push
fcomps
cmp
leave
pop
and
mov
mov
mov
adc
testl
jno
scas
fdivrs
test
xchg
push
popf
xor
fidivl
xor
aas
test
bound
inc
test
sti
popf
and
sbb
push
packsswb
loop
jl
inc
mov
jbe
inc
or
pop
movsb
iret
xchg
xor
arpl
loop
popa
fwait
adc
or
or
test
mov
test
imul
add
clc
sbb
movsb
inc
xor
or
fstps
fst
shll
or
lea
xor
lcall
sbb
push
push
or
cmp
cmp
jo
add
xchg
add
daa
push
call
and
clc
in
and
dec
add
es
xchg
xchg
xor
sub
sub
sbb
xchg
cmpsl
fwait
popa
jg
int
mov
push
leave
mov
sbb
lahf
es
jo
dec
mov
mov
sub
call
inc
repnz
imul
pop
inc
cmpsb
dec
inc
inc
cmpsl
jp
dec
sbb
sub
cmpsl
popa
ljmp
mov
xchg
mov
pushf
or
cs
xchg
lea
test
insl
adc
inc
addl
jae
imul
inc
adcl
jnp
xchg
int3
out
xchg
add
sbb
ret
fimull
cmpl
rorb
out
mov
xchg
shll
inc
jb
mov
jge
decb
mov
push
aas
sub
sub
test
push
daa
stos
and
push
push
gs
repnz
mov
inc
mov
mov
fs
ljmp
inc
pop
cmp
mov
nop
inc
add
dec
mov
inc
and
rorb
lahf
and
lods
add
cli
or
mov
or
stc
leave
sub
xor
push
push
mov
mov
jo
mov
add
dec
movsb
test
adc
jb
test
push
je
inc
and
or
aaa
stos
pop
stos
sub
jecxz
or
and
jge
jmp
mov
push
shr
pop
push
cmp
jb
lods
add
bound
bound
mov
aam
outsb
mov
out
arpl
cmp
jns
sbb
mov
loop
lret
mov
cmp
sbb
int
rsqrtps
enter
stos
jo
dec
jmp
fld
cmpsb
inc
mov
cmp
mov
sub
outsl
or
mov
and
pushf
nop
pop
add
or
xchg
lock
je
inc
enter
or
es
jnp
das
jbe
aas
fs
sbb
adcb
leave
xchg
repnz
and
bound
lods
push
cmpsl
add
das
decb
shll
call
xchg
sub
ljmp
movsb
nop
fsubp
sub
loope
out
mov
shr
loop
cmp
leave
repz
aas
push
or
and
imul
xchg
add
adc
mov
mov
mov
xor
push
push
adc
mov
pop
bound
and
test
add
cmp
sbb
cmpl
ret
add
stos
sub
stos
lcall
jmp
xor
sbb
orb
rcr
adc
mov
sub
sub
xlat
dec
sub
inc
mov
push
push
inc
mov
xor
jle
mov
iret
and
mov
sub
jb
inc
and
pop
inc
jl
push
mov
mov
les
jne
mov
jno
sbb
jne
add
daa
cmp
inc
daa
and
cmp
sbb
adc
or
mov
or
adc
out
into
mov
movzbl
inc
test
xchg
outsb
sbb
mov
dec
add
or
add
mov
push
pop
add
adc
outsl
and
dec
stos
and
pop
mov
and
mov
sub
lret
or
ret
xor
repnz
jno
les
sub
clc
repz
loope
andl
mov
scas
aas
mov
aaa
hlt
mov
push
xchg
xchg
and
es
sub
push
inc
xor
adc
push
insl
loopne
jge
push
and
adc
xor
stos
lds
lock
xchg
mov
cltd
inc
cwtl
insb
sbb
nop
and
lods
dec
psubd
or
int
cmpsl
cmc
mov
dec
addr16
popf
adc
sti
andl
xor
arpl
es
shll
jbe
loope
inc
adc
mov
aas
inc
push
repz
sub
pop
push
int
mov
test
mov
outsb
sbb
mov
stos
test
inc
jmp
nop
dec
push
or
jp
lds
daa
cld
stc
push
xchg
inc
mov
popl
push
fstpt
test
cltd
rorl
jo
jbe
add
push
push
ror
ficoml
cmc
lret
jnp
adc
xchg
dec
and
or
add
fsts
xor
pop
test
sub
mov
imul
inc
cwtl
cmp
fcmovnbe
add
int
push
dec
ds
aam
popa
or
repz
sub
push
jnp
jle
push
add
or
insl
push
sbb
inc
push
das
inc
jmp
adc
scas
fs
popf
jecxz
imul
pop
and
call
call
fcomip
xchg
divps
pavgw
push
jne
rsqrtps
test
mov
imul
dec
add
xlat
dec
in
cmc
mov
xor
cld
adc
push
fcoml
inc
cmc
ret
clc
xlat
add
call
aas
shl
jns
pop
xchg
xchg
xlat
adcl
and
aam
mov
mov
mov
add
push
icebp
mov
aad
and
lds
add
push
jbe
sbb
jp
addl
xchg
scas
sbb
mov
sbb
or
push
subl
ret
cmpsb
mov
or
loopne
cmp
cmpsb
mov
ret
push
subl
add
mov
hlt
mov
dec
cmp
xlat
mov
imul
lods
imul
incl
and
adc
dec
les
inc
jl
xchg
adc
mulb
dec
pusha
jne
jb
cmpsl
push
movb
sub
rclb
lds
or
dec
inc
jmp
adc
fstps
rclb
orb
loop
mov
inc
sub
cmp
xchg
xor
mov
push
sbb
cmp
js
adc
mov
es
fcomps
jb
iret
sarl
loope
test
xor
jge
mov
loope
dec
inc
and
or
inc
enter
push
push
xor
mov
test
xor
inc
mov
adc
xor
and
push
and
and
out
jp
loopne
aaa
icebp
push
push
lock
in
aaa
cld
fstps
jno
lcall
jno
xchg
mov
inc
lea
pop
and
dec
sub
pop
jnp
arpl
and
iret
shll
iret
pop
mov
sbb
rolb
add
std
push
addr16
and
add
fisubs
stos
in
mov
sti
push
jnp
dec
adc
test
mov
aam
aaa
or
cmp
mov
mov
std
xchg
add
mov
rcll
jecxz
nop
pop
dec
pop
fiadds
pushf
lahf
push
push
push
push
jne
sbb
add
xchg
sub
and
sub
fidivrl
lcall
sub
inc
lea
cmc
ret
fsubrs
lret
jns
orl
sbb
mov
pop
inc
adc
and
int
dec
addb
fwait
cld
cltd
xchg
sub
arpl
adc
test
stos
jns
or
or
movsl
adc
jo
bound
repz
and
aam
cwtl
call
add
xor
inc
std
rolb
xor
jbe
and
add
push
push
push
push
leave
jmp
cld
and
adc
dec
test
xchg
scas
ja
or
mov
pop
cmpsl
sahf
and
xchg
sbb
jg
cld
push
pop
stos
rclb
ret
xchg
pop
and
cmpsb
push
or
das
popl
sbb
cmpsl
fcoml
add
xor
pop
sarl
and
add
inc
gs
jne
bound
sub
xor
xchg
sub
inc
test
negb
out
xor
movsb
lock
add
scas
mov
cmp
xor
stc
add
lea
gs
dec
xor
add
pandn
or
jno
leave
mov
jecxz
popf
xlat
mov
cmpsb
cmp
pushf
cmpsl
sbb
xchg
subl
inc
lea
sbb
lea
and
orb
dec
mov
les
imul
adc
lods
aas
pmullw
mov
pop
dec
push
xchg
imul
mov
xchg
pop
mov
mov
adcl
xor
ja
push
push
mov
outsb
xor
jle
cld
mov
adc
add
loop
test
push
rcrl
jne
iret
jae
inc
sub
out
popf
in
test
xor
or
cmp
in
jb
das
adc
push
lds
push
in
test
ret
xchg
mov
stos
ret
cmp
sbb
adc
add
inc
push
es
pop
lock
jmp
mov
or
dec
loopne
dec
in
push
loopne
mov
mov
clc
or
inc
mov
inc
movsl
sbb
or
stos
gs
adc
adc
adc
sbb
int
dec
mov
adc
subb
rcl
dec
stc
xor
add
pop
stc
icebp
cmp
pop
jne
inc
iret
pop
or
add
sbb
inc
scas
inc
inc
call
mov
pusha
aas
adc
jno
aaa
dec
mov
adc
imul
push
push
or
jge
ljmp
or
xchg
stos
adc
sahf
push
mov
mov
movb
call
stos
adc
addb
pop
js
orl
test
push
fistpll
cmp
es
repnz
pop
in
test
xchg
cld
mov
xchg
data16
cmpsb
test
mov
aam
loope
mov
das
jle
inc
icebp
push
mov
int3
inc
cld
xor
adc
cs
and
test
inc
std
cmc
nopl
lods
cmp
lea
dec
sub
or
cmpsl
or
int
call
loopne
daa
daa
or
lods
sub
or
mov
loope
hlt
adc
pop
inc
rcl
and
or
add
int
movsb
mov
pop
fisttpll
fwait
cmp
or
std
jmp
mov
add
jmp
pop
push
repnz
inc
or
cmpsl
mov
mov
sub
adc
xchg
lahf
jbe
adc
xor
cmpsl
push
mov
push
and
repnz
lods
and
inc
xchg
dec
cmpsl
xor
sbb
sbb
dec
sbb
and
jb
jecxz
adc
push
add
add
sbb
push
sbb
push
arpl
and
das
mov
call
shll
or
aas
nop
push
and
outsl
fwait
inc
lahf
pop
les
pop
adc
lods
ds
dec
and
sub
js
sub
inc
test
and
xchg
push
cwtl
aaa
add
mov
xchg
xchg
rolb
add
mov
xchg
call
test
lods
sarb
adc
sub
andb
pop
push
mov
lea
dec
js
lock
cmpsl
stos
add
push
fwait
xor
inc
dec
rcll
add
mov
ljmp
mov
cmp
adc
test
push
sbb
and
xor
mov
mov
cwtl
inc
cmp
lea
or
out
jo
add
leave
inc
pop
fadds
aas
es
lods
pop
jae
xchg
sti
jle
add
inc
ja
test
aam
movsb
lahf
dec
pusha
adc
scas
mov
push
mov
mov
push
cltd
xor
dec
popf
out
leave
fistps
cmp
or
push
and
loope
test
fstl
inc
mov
xor
js
lock
scas
pop
incl
jge
lods
mov
pushf
inc
pop
xchg
adc
mov
mov
fnsave
cmpsb
push
movsb
in
test
inc
pop
pop
jecxz
out
mov
je
pop
dec
mov
adcl
inc
mov
enter
lret
push
cmc
jg
adc
push
inc
xchg
jne
mov
mov
orl
cmp
jo
sbb
pop
in
mov
repnz
xor
push
ret
movsl
adc
pop
testl
aas
jp
cmpl
inc
mov
popa
ficoms
mov
cmp
inc
andl
shll
out
pop
push
push
xchg
pop
dec
popf
sbb
mov
sbb
and
push
xor
shll
ja
adc
sub
or
adc
jmp
push
mov
addb
add
insl
push
push
push
aam
and
xchg
mov
cmp
cmpsb
das
es
or
sub
push
or
xorb
sub
js
outsl
clc
add
aad
and
sbb
into
mov
enter
mov
cltd
sub
rclb
stos
or
in
dec
leave
mov
inc
pop
add
out
ret
stos
dec
mov
dec
loop
loope
mov
cld
mov
push
inc
push
adc
sbb
fnstsw
leave
daa
dec
push
adc
mov
add
scas
add
add
dec
pop
adc
cltd
dec
xor
je
insl
imul
pop
in
push
pop
inc
dec
fwait
inc
stc
lcall
jne
inc
dec
rorb
inc
hlt
sbb
mov
aas
dec
dec
dec
fwait
inc
xlat
fildl
push
jne
sbb
push
test
or
aam
sbb
fistpll
cmp
push
int3
stos
cld
test
or
cmp
addb
mov
shlb
int
mov
mov
or
or
pop
push
inc
jecxz
in
pushf
sub
in
xor
cmp
sahf
je
mov
cmp
scas
pop
cmp
lods
out
dec
mov
jns
lods
into
push
test
pusha
lret
or
sub
jp
add
insb
push
addl
pop
shl
stos
push
iret
out
cmp
pushf
or
jg
adc
movl
imul
loop
pop
nop
mov
mov
mov
clc
mov
pop
sub
adc
and
sti
lods
xchg
pushl
pop
inc
cltd
jo
pop
jecxz
pop
mov
lds
mov
inc
add
jge
lret
fs
adc
mov
scas
lret
cmc
adc
or
addl
jno
xchg
push
aam
aam
adcb
iret
sub
mov
and
inc
push
out
pusha
add
insl
mov
cli
leave
dec
xor
stos
mov
test
stc
inc
shlb
xor
jmp
leave
mov
push
shll
sbb
jb
out
cld
mov
pop
inc
push
imul
ret
int
clc
add
pushf
rclb
xor
cmc
adc
adc
insl
ret
xchg
mov
sbb
sub
insl
pop
adc
cmp
push
adc
sbb
fs
test
xchg
cld
sbb
mov
xor
jp
dec
hlt
lea
sahf
adc
ja
js
push
push
sbb
adc
mov
sub
xor
push
mov
ljmp
cld
mov
push
cmp
or
popa
orb
or
inc
pop
lds
or
and
mov
dec
daa
fnstcw
push
xlat
xchg
imul
pop
and
dec
sub
jl
or
adc
cltd
pop
leave
stos
sub
andl
sbb
ret
mov
mov
icebp
loope
leave
test
test
jmp
cmpsb
cwtl
popa
popa
mov
mov
mov
and
xchg
and
mov
test
dec
adc
push
push
shrb
adc
xchg
xor
pop
dec
dec
pop
mov
or
clc
and
sbb
iret
dec
mov
inc
fldt
cmp
dec
and
or
lret
cltd
or
dec
movb
jns
pop
fucomi
xchg
orb
rolb
adc
mov
inc
in
jns
sbb
adc
and
sub
arpl
cmp
sub
cmp
test
lret
dec
or
push
lock
cmp
ret
nop
push
sub
test
cltd
xchg
ss
and
les
subl
cmp
and
pop
add
sub
pop
loopne
jl
rolb
call
xor
adc
inc
repnz
sbb
inc
jecxz
lds
sbb
or
add
sbb
mov
adc
arpl
roll
aas
test
inc
aam
sub
stos
mov
scas
icebp
fstpl
xor
ss
add
mov
jle
push
les
or
stos
cltd
lock
mov
cmp
cltd
xor
mov
rcr
xor
mov
aas
jo
hlt
orb
xor
pop
idivb
or
mov
mov
xchg
dec
or
shll
cld
add
in
add
jmp
inc
push
or
movsb
fiadds
fbld
cltd
inc
xchg
xor
sbb
mov
faddl
outsl
subl
scas
jp
adc
cwtl
inc
mov
adc
ret
mov
pop
jl
pusha
dec
xchg
jecxz
jmp
push
outsl
dec
ds
insl
push
adc
jo
sbb
cmp
fstps
sub
dec
imul
and
mov
lods
inc
jp
in
cmp
pop
sbb
mov
add
cs
adc
movsb
adc
inc
cmp
rorb
ja
and
aas
popa
repnz
repz
popa
pop
add
punpckldq
mov
mov
imul
add
outsb
push
outsb
xlat
mov
or
leave
sub
and
dec
xchg
sub
addb
clc
mov
cmpsb
lock
hlt
mov
jno
xchg
lret
aas
mov
inc
enter
in
sbb
xchg
mov
cld
call
push
xor
mov
pushf
pop
test
in
jne
adc
pminub
lahf
xchg
inc
xchg
out
stos
add
push
sbb
test
jne
add
hlt
dec
clc
pop
push
lahf
aaa
dec
sub
mov
dec
and
xchg
and
adc
add
sbb
iret
mov
push
loopne
enter
sub
pushf
and
mov
or
adc
adc
inc
sub
imul
rclb
pushf
movsb
add
mov
mov
rcr
mov
xchg
lret
faddp
inc
xchg
mov
and
daa
and
jge
bound
add
xchg
and
popf
gs
aad
push
mov
ret
call
mov
mov
vpsubusb
stc
cwtl
mov
test
bound
icebp
inc
cs
jb
dec
push
mov
or
sub
inc
mov
dec
arpl
mov
repnz
fcomip
icebp
in
aas
xor
in
push
jns
cli
cld
sbb
xchg
daa
xlat
cmc
sti
cld
or
daa
push
mov
out
stc
adc
cltd
jl
cld
into
addr16
push
je
dec
push
dec
jne
dec
inc
and
sbb
ljmp
out
inc
mov
rorb
rorl
fsubl
cld
pop
mov
out
shll
cmpsl
sub
shl
add
and
jle
movsb
push
imul
adc
sbb
dec
mov
push
dec
push
or
cmpsl
cwtl
into
enter
ljmp
js
or
stc
pop
and
loope
pop
sub
cs
push
xor
jg
adc
pop
jle
fldt
lret
bound
es
cmp
mov
dec
call
cli
add
cld
xorb
jle
pop
imul
adcl
test
adc
push
sub
lock
loope
push
xor
mov
or
add
mov
or
add
cwtl
rcrl
xor
and
sbb
inc
nop
xchg
push
inc
cs
cmp
ficompl
adc
call
or
inc
fwait
popf
dec
and
test
lods
stos
inc
popa
or
inc
xor
adc
sbb
es
imul
popa
sbb
ret
cwtl
add
inc
sub
rolb
push
das
or
adcl
mov
push
pop
nop
cmp
mov
mov
lods
popf
nop
dec
test
scas
dec
ret
rolb
push
sbbl
jb
mov
add
adc
sbb
dec
dec
clc
inc
call
add
int
out
fstps
xor
add
push
sub
dec
aad
enter
xchg
in
adc
shlb
inc
cmpsl
jle
push
imul
mull
mov
mov
or
sub
sub
or
popa
and
rclb
cmp
ljmp
add
xor
pop
lahf
mov
inc
test
addr16
sbb
repz
mov
fbstp
xchg
ja
test
or
enter
mov
adc
rol
add
daa
adc
movsl
push
je
lahf
loopne
xchg
pop
xchg
je
js
ja
or
in
lds
xchg
xor
pusha
je
sbb
xchg
es
adc
xchg
xor
sbb
pop
and
test
mov
fsubr
xchg
test
sbb
inc
roll
test
mov
add
aam
push
cmc
cmp
pop
rcl
xchg
sbb
lds
xor
add
push
push
addr16
sbb
cmp
mov
rorb
xor
inc
mov
push
bswap
mov
loop
ret
arpl
add
sub
add
shlb
fs
xchg
push
stc
popa
mov
add
popf
push
rclb
vcvtps2dq
and
test
dec
lods
adc
imul
outsl
xchg
xchg
popa
sub
xor
and
mov
in
lods
inc
test
fcoml
xchg
aas
lds
test
inc
js
sbb
dec
dec
push
pop
popl
inc
addl
pop
and
sahf
xorb
push
icebp
add
test
loop
les
and
and
push
adc
sub
mov
int3
xor
mov
popf
mov
pop
add
adc
push
or
mov
adc
ret
jge
jmp
inc
adc
inc
dec
pop
adc
les
or
add
xchg
ret
jmp
enter
dec
jns
aas
add
add
mov
test
inc
inc
lds
adc
dec
sar
les
or
andl
push
sbb
xchg
outsl
mov
stos
sub
or
adc
cwtl
push
sti
pop
stos
sub
mov
outsb
xchg
mov
mov
aad
adc
fsqrt
gs
mov
inc
lret
xor
mov
cmpsb
in
js
pop
and
adc
pop
adc
push
dec
cmp
jae
lods
push
jp
jp
loope
jo
adc
lea
jmp
pop
add
sub
or
imul
sbb
icebp
push
add
fisubrs
add
cmovnp
push
add
push
cmp
mov
hlt
nop
mov
fdivs
sub
mov
dec
fisubl
bound
inc
aam
jg
inc
or
sbb
pop
sbb
add
test
mov
inc
sub
dec
dec
add
sbb
pop
jmp
in
xchg
jle
add
lret
jne
mov
stos
xchg
inc
dec
xor
ja
dec
js
je
mov
in
mov
dec
adc
int
mov
nop
push
push
pop
fs
shrb
xor
movl
or
adc
xchg
mov
test
jo
int
pusha
jo
imul
inc
xchg
sbb
inc
cmp
popf
jne
inc
cmp
add
or
cmp
stos
pop
xchg
jmp
dec
pop
les
jmp
sbb
rcll
add
jo
xchg
mov
and
add
fdivrs
cmp
inc
or
pop
mov
xor
lret
xlat
mov
cmp
mov
outsb
gs
addl
sbb
rorb
pop
adc
mov
adc
nop
xor
mov
icebp
xor
xorl
movsb
rolb
and
stos
inc
push
ret
xchg
or
xor
cmp
daa
add
pop
int
add
in
push
sub
lds
or
int
xchg
fs
rclb
and
mov
fs
adc
inc
popa
or
mov
sbb
cmp
inc
cli
or
add
inc
or
push
pop
les
in
push
pop
push
sti
sub
xchg
movsb
mov
mov
mov
inc
imul
add
aad
sbb
test
in
stc
xor
incl
or
jge
xlat
push
rcll
push
dec
xor
insb
add
sbb
sets
aas
subl
adc
pop
jno
jnp
pop
aam
add
lock
xchg
dec
dec
js
loop
movsl
inc
dec
pop
and
rcl
push
add
sbb
je
nop
pop
orl
shll
xor
rcl
in
xor
or
jo
test
insb
add
mov
adc
andl
add
cmpsl
fadd
outsl
dec
rolb
stos
xor
cmp
dec
xchg
loope
pop
pop
jns
addb
adc
addb
mov
mov
insl
pushf
ret
mov
orl
pusha
nop
add
dec
pop
ds
inc
and
test
daa
xchg
daa
mov
xchg
cmp
mov
xchg
sub
clc
pop
cmp
stos
enter
inc
xor
lock
shlb
push
or
les
dec
mov
cmp
in
or
data16
cmp
pusha
stos
xchg
sbb
mov
in
mov
es
rclb
mov
xorl
adc
xchg
stos
mov
add
dec
int3
roll
xor
and
iret
push
test
sahf
mov
sbb
sub
inc
movsb
subl
sti
icebp
xor
lcall
pop
insb
or
push
xor
jg
push
add
inc
repnz
push
pop
aad
cmp
dec
dec
out
push
lea
xor
cmp
adc
stc
mov
inc
mov
pushf
bound
cmp
jmp
sub
dec
loope
and
xchg
xor
or
cmp
in
xor
cmpsl
je
sbb
out
cltd
movaps
sub
xchg
shrl
popa
push
add
sub
or
inc
loope
xor
push
add
imul
jno
xor
movsb
andl
insb
gs
mov
jnp
stos
les
jns
sub
fwait
push
jmp
aam
cs
mov
and
mov
inc
test
pop
push
aaa
orl
and
subl
cmp
shlb
les
cmp
cmp
divb
mov
cmc
shr
sbb
enter
and
mov
or
jne
mov
jne
hlt
bound
imul
and
add
or
push
addb
ret
stos
fwait
dec
lods
sbb
hlt
adc
cmp
mov
stos
sub
push
data16
loop
adc
xchg
scas
mov
and
je
xor
daa
in
and
test
fcom
arpl
sbb
and
jbe
add
mov
or
jne
xchg
push
rorb
pop
inc
push
sub
inc
xor
xor
das
sbbb
fwait
push
sub
gs
ret
or
cmp
cmp
xchg
and
or
push
sub
aam
scas
and
jno
cmp
inc
aas
pop
das
xor
aas
jb
mov
fbld
jnp
mov
pop
cmp
call
mov
push
push
js
inc
inc
dec
cmp
jg
pop
es
add
pop
cmpsl
push
stc
clc
lds
jg
push
adc
inc
pop
repz
dec
pop
movsb
and
cmp
dec
xlat
adc
mov
dec
add
subb
stos
add
inc
in
adcb
stos
cwtl
push
fs
dec
pop
pop
mov
ss
inc
in
loope
scas
sar
cmpsb
and
xor
xchg
xor
imul
mov
adc
imul
lcall
pop
push
and
adc
jmp
pop
and
repz
pcmpeqb
popl
cmp
test
mov
fs
hlt
add
inc
lea
pop
inc
sti
arpl
adc
mov
gs
mov
push
push
inc
ret
push
outsb
pop
sbb
orb
sub
fldl2e
inc
pop
adc
shll
hlt
cmpsb
adc
aam
sbb
xchg
jo
and
cltd
lcall
addl
mov
repnz
mov
sub
fcoml
shlb
inc
pop
bound
adc
xchg
or
and
test
mov
add
xchg
pop
dec
adc
push
outsl
xor
push
sbb
clc
or
mov
jecxz
adc
sub
sub
mov
data16
lds
add
and
ficoml
test
sub
mov
jb
add
lods
gs
push
popa
adc
cmp
ret
jne
and
lret
test
and
js
jb
std
iret
add
sub
xor
inc
and
push
jo
mov
xchg
and
push
lea
jnp
add
enter
mov
lcall
imul
hlt
inc
call
push
jl
push
mov
inc
adc
inc
and
and
jmp
mov
jns
mov
mov
lds
mov
jnp
pop
xor
xchg
inc
adc
pop
inc
or
call
cwtl
jno
lcall
lds
sbb
inc
xchg
xorb
mov
iret
fcos
jno,pn
and
rclb
jl
pop
xor
push
rcr
movsl
outsl
sbb
loopne
dec
jae
inc
pop
jne
mov
out
mov
mov
or
aaa
imull
and
or
in
and
pusha
ss
cmp
add
push
push
sbb
mov
and
xlat
inc
scas
mov
cmp
les
cmpsl
repz
jecxz
lds
pushf
xchg
or
lea
mov
out
lahf
adc
push
repnz
pop
int3
add
sbb
sub
in
mov
push
subl
push
push
jmp
dec
test
int
add
shrb
mov
and
mov
mov
insb
xchg
sahf
mov
cmp
adc
les
ds
nop
adc
xor
xchg
addl
mov
push
adc
add
mov
rolb
cmpsb
or
jmp
and
push
fs
and
xchg
xor
in
mov
das
vpshrdvd
mov
adc
xor
nop
cmovno
pop
inc
mov
bound
sahf
jae
mov
push
adc
mov
rorl
xor
jle
dec
rclb
jo
inc
in
add
scas
sbb
or
adc
xchg
inc
cmpxchg
pop
shlb
popa
dec
pusha
mov
mov
repnz
adc
bound
std
or
push
test
inc
test
jle
or
push
lahf
and
jecxz
push
test
iret
push
push
adc
inc
inc
sub
aad
cmp
bound
test
insl
lods
sub
xchg
push
xor
dec
rorl
adc
test
call
xchg
pop
fs
push
lret
pop
push
imul
and
cmp
adc
jmp
or
gs
aam
arpl
ret
add
scas
leave
or
les
imul
or
and
push
and
mov
push
ljmp
mov
cmp
mov
out
negl
inc
int3
mov
xor
sbb
rclb
cs
dec
pop
pushf
push
push
push
cmc
jp
xor
and
mov
or
outsb
add
and
inc
call
push
jmp
out
mov
out
dec
dec
or
and
call
and
leave
jo
dec
jo
in
std
popf
iret
ror
repz
pop
sbb
arpl
and
lea
sbb
mov
jmp
xchg
cltd
adc
or
adc
js
dec
sub
repnz
aam
test
or
jne
add
xor
rclb
mov
inc
bound
test
lock
xorl
add
adc
push
xchg
sub
and
data16
stos
inc
mov
rolb
ljmp
and
shrb
pop
and
cmp
inc
data16
adc
or
add
xchg
jo
enter
popf
or
aam
mov
shlb
and
push
xor
xor
mov
sbb
dec
cmp
push
clc
push
rclb
pop
nop
cs
shrb
add
pop
xor
in
in
mov
push
insl
dec
cmp
sbb
jns
jbe
mov
pop
inc
rclb
shrl
push
and
mov
loop
cmpb
insl
sbb
pop
mov
jne
loopne
mov
push
subb
ljmp
clc
and
bound
ljmp
and
inc
dec
aam
xchg
stos
and
or
test
xor
or
sahf
adc
dec
pop
push
push
adc
mov
dec
inc
pop
xchg
cmp
pop
xor
mov
adc
dec
bound
popf
dec
push
push
push
dec
dec
out
dec
and
xchg
push
dec
push
lods
adc
lock
movsl
push
adc
loopne
adc
add
lcall
sbb
inc
aaa
std
add
mov
xor
lods
sub
movsb
sbb
push
xchg
sbb
push
jl
adc
sub
js
and
and
movsl
or
inc
pop
add
cmpsl
jecxz
push
stos
cmpsb
sub
and
dec
push
push
push
push
jo
fidivrl
lret
cwtl
dec
rclb
out
push
dec
pop
sbb
cwtl
add
add
ret
or
xor
add
cmp
popa
sub
add
je
inc
inc
dec
sahf
push
les
mov
cwtl
mov
shrl
sub
test
push
mov
cmp
add
xchg
adcl
sbbb
mov
inc
dec
test
jb
pop
cwtl
pop
mov
fsts
add
int3
add
mov
icebp
and
sbb
dec
fistl
mov
pop
push
inc
mov
sbb
je
enter
mov
es
aas
pop
shlb
mov
and
inc
mov
cmpsb
test
fs
es
imul
adc
addb
dec
jge
in
js
sub
mov
push
icebp
xor
inc
push
pop
sbb
jns
lods
pop
sbb
ljmp
sbb
xchg
pop
jmp
sub
test
imul
and
and
hlt
inc
inc
sbbb
testb
and
loopne
cld
movb
sti
shl
inc
movsl
xchg
sub
ret
sbb
mov
adc
pop
adc
dec
or
push
popa
dec
sbb
clc
jmp
ret
fists
or
xor
or
lahf
aas
push
bound
mov
leave
push
bound
cmp
push
sbb
icebp
pusha
xchg
je
pop
adc
dec
rclb
repz
cld
test
stos
pushl
sarl
or
pop
aad
sbb
mov
mov
xor
or
push
push
and
ret
inc
cmpsl
pop
push
cmp
push
in
pop
inc
mov
sbbb
stc
rolb
mov
cltd
cli
or
rclb
out
scas
adc
je
loop
cmp
inc
sub
and
movsl
repz
pop
aas
test
ret
mov
push
dec
daa
arpl
insl
test
xchg
iret
inc
or
in
popa
adc
xchg
mov
xchg
add
adc
adc
ds
pop
orb
mov
test
add
sbb
or
pop
das
mov
sbb
or
pop
xchg
jl
daa
and
pusha
sub
or
in
push
sub
adc
dec
sub
rolb
and
push
push
addr16
xchg
jmp
sbb
test
inc
fistl
pop
sub
in
in
add
rcl
pop
push
xor
hlt
push
or
jecxz
fiaddl
push
mov
or
outsb
mov
push
test
out
mov
cmpsb
and
adc
test
adc
fstpt
or
lret
add
cmp
or
inc
leave
push
push
add
add
xor
xor
sbb
test
fs
push
push
pop
mov
popa
add
push
hlt
xor
add
clc
xchg
add
stos
inc
and
pop
lds
sahf
stos
dec
cld
pop
je
add
and
sbb
inc
add
ja
pop
cwtl
and
cld
push
call
test
xlat
pop
imul
call
dec
out
ret
pop
pusha
or
mov
push
xchg
mov
and
lds
cmp
das
loope
jge
sub
bound
and
add
cmp
aaa
mov
push
arpl
inc
fs
shl
xchg
push
lds
xlat
leave
adc
es
stc
cmpsb
loopne
scas
fiaddl
mov
enter
sub
push
leave
push
or
dec
orb
pop
loope
jmp
int
lods
mov
repz
dec
xor
rcrb
xchg
les
push
or
lods
mov
sub
jo
pop
xor
ret
add
sub
inc
jecxz
cltd
push
jno
flds
jg
push
imul
xchg
inc
fisttpll
leave
test
push
adc
cmpsl
shlb
push
repnz
push
popf
insl
push
jb
ret
or
das
jne
jno
cwtl
add
xor
shll
cmp
div
enter
add
lea
push
inc
xchg
push
orb
cltd
mov
sbb
lods
std
or
lock
push
enter
pop
push
sbb
pop
xchg
dec
and
repz
inc
pop
push
iret
adc
mov
xor
inc
das
adc
inc
cmp
je
test
jnp
pop
bound
loope
adc
push
daa
popa
or
inc
add
pushl
es
aam
shlb
outsb
movsl
cmp
lahf
sbb
xchg
aas
inc
add
sbb
rolb
push
insl
pop
aad
dec
outsl
call
orb
or
or
push
adc
add
inc
pop
add
mov
cmpsl
add
mov
rorb
nop
inc
ja
arpl
scas
cmp
inc
add
sub
sbbl
mov
sub
in
outsl
jl
jb
enter
int
pop
adcb
xchg
cmp
popa
sub
add
xchg
call
pop
imul
orb
and
push
incl
xchg
adc
and
dec
les
mov
sbb
inc
mov
ret
adc
adc
cmpsl
bound
add
daa
ljmp
js
cmp
shll
or
inc
jnp
aas
push
nop
inc
lea
mov
push
adc
rcr
add
adc
sbb
cmpb
hlt
or
or
aam
test
push
pop
pop
dec
inc
inc
ret
mov
les
mov
testl
cmpsl
add
dec
mov
je
add
and
xor
and
or
sub
cs
sbb
mov
mov
fists
jg
xor
outsb
ljmp
cli
inc
sbb
and
mov
add
adcb
cmpsb
or
icebp
stc
movsb
pop
enter
imul
sub
sub
push
cmp
xor
nop
push
dec
popl
adc
and
push
mov
cs
stc
dec
xor
in
mov
and
rcll
push
push
sbb
xchg
jb
mov
cwtl
mov
je
and
mov
out
add
mov
xlat
inc
inc
popa
stos
sbb
shll
rolb
push
or
push
add
in
andb
lods
movsl
nop
inc
push
popa
adc
mov
mov
sti
xor
jge
add
pop
mov
popf
add
andb
in
push
orb
adc
andl
pop
pushf
arpl
stos
leave
push
test
adc
jb
dec
xor
sti
mov
mov
xor
push
add
xchg
mov
mov
pop
js
cmp
or
out
mov
cld
add
and
pop
add
or
call
push
loopne
push
je
dec
push
sbb
xchg
test
add
les
xchg
push
mov
insl
pop
imul
dec
and
cmp
and
shrb
or
mov
mov
sub
adc
ljmp
sub
mov
pop
in
in
inc
inc
sub
sarl
loop
xor
cltd
or
add
lods
xor
inc
roll
jo
and
inc
sbb
in
mov
ret
loopne
aas
sbb
adc
jmp
ljmp
lret
or
aad
insb
rcrl
call
adc
add
sub
sub
add
andb
dec
test
pop
sbb
mov
int3
lods
adc
rdpmc
add
adc
xchg
mov
stos
and
loope
xchg
insl
iret
shlb
inc
adc
divb
adc
mov
mov
xor
adc
and
jnp
inc
push
pusha
sbb
pop
xchg
add
sub
sbb
jno
pop
les
push
jmp
inc
and
nop
cmp
adc
outsl
cmp
mov
jno
lcall
iret
add
andl
jno
mov
pop
mov
push
xchg
mov
enter
adc
add
or
xchg
push
add
mov
adcb
sub
test
addr16
or
stos
fld
add
jo
movsb
test
pop
jmp
ljmp
add
sbb
xor
push
mov
pop
xchg
aam
mov
sub
mov
div
jmp
push
sbb
adc
dec
fstl
enter
or
or
adc
mov
add
push
pop
xchg
and
inc
push
xchg
adc
xchg
push
sbb
lods
test
xchg
xor
dec
lcall
and
into
cmc
aam
push
or
pop
dec
dec
leave
xchg
push
and
bound
mov
imul
add
jno
addr16
pop
roll
imul
push
xor
ret
push
xor
add
add
xor
ret
lock
pop
sub
movsl
jo
sbb
imul
cltd
mov
sub
ret
inc
enter
inc
jno
daa
mov
dec
shlb
subb
dec
cmp
mov
outsl
and
cli
add
aas
andb
leave
and
or
add
pop
xchg
imul
out
or
mov
shlb
sub
dec
jb
xchg
mov
loopne
sbb
or
mov
jno
rorb
imul
insb
inc
and
xchg
repnz
das
clc
test
call
test
jns
stos
mov
dec
cmp
inc
imul
inc
or
aaa
cld
xor
inc
pop
cmc
imul
jo
cmp
and
mov
pop
lea
sub
jg
adc
mov
and
iret
xchg
xor
jo
sbb
repnz
loope
icebp
popf
cmp
orl
cltd
nop
cmp
sti
je
daa
lods
fs
push
aad
xchg
mov
and
sbb
and
iret
add
jo
test
xchg
out
mov
or
fs
fbld
jecxz
mov
mov
mov
loopne
test
pop
cmp
in
mov
mov
pop
push
dec
adc
mov
fildll
mov
xor
and
stos
ret
inc
xor
les
or
mov
xor
je
popa
adc
and
xorps
stos
or
adc
fld
push
stos
add
je
xlat
add
das
int3
das
sbb
xchg
scas
mov
pop
mov
dec
and
mov
idivb
mov
xchg
dec
cmp
push
push
jp
sbb
arpl
mov
add
mull
adc
js
mov
sbb
int
push
fs
mov
mov
popa
xchg
or
lds
rorl
cmp
pop
and
sub
jne
aaa
loopne
and
mov
addb
shr
sbb
pop
inc
cmpsb
inc
scas
sub
pop
pop
ret
add
and
sbb
outsb
or
add
lods
pop
inc
sahf
fwait
test
insl
or
sub
adc
sub
xor
and
leave
inc
add
std
cmovbe
push
sub
adc
xor
add
push
dec
mov
jge
cmpb
cmp
cli
mov
ret
mov
mov
je
cmp
les
sub
sbb
xchg
mov
call
fidivs
push
mov
add
sbb
and
test
jbe
push
jp
repnz
outsl
xchg
stos
lea
testl
add
loop
jle
bound
or
jmp
push
mov
addb
fcompl
shrb
mov
cmp
mov
push
adc
or
mov
add
mov
mov
push
fdivrs
jle
mov
xor
add
aaa
fs
fildl
mov
jg
inc
sbb
mov
mov
push
repz
sbb
div
add
loopne
push
sbb
rcll
ret
push
sarl
call
test
xor
mov
dec
jle
pop
jno
lcall
mov
sbbb
das
std
add
insb
mov
nop
lea
pushf
mov
jae
loopne
repnz
lds
mov
push
lds
test
leave
lret
xchg
adc
adc
fstpt
out
add
push
test
pop
out
sub
add
cmc
jmp
xor
out
push
mov
and
jmp
cmp
mov
add
xor
jl
inc
arpl
dec
dec
push
push
xor
cmp
scas
dec
pushf
xchg
rorl
add
adc
xor
pop
in
add
leave
jo
fs
inc
js
sbb
pop
inc
int3
hlt
push
and
add
cmp
jne
ror
xrelease
inc
add
lods
es
inc
dec
push
pop
pusha
add
enter
mov
pop
inc
mov
scas
cmpl
add
jmp
ss
js
ret
aaa
jl
sbb
push
and
add
sbbb
jne
adc
push
pop
jo
jge
mov
pop
add
or
push
or
xchg
push
pop
or
or
and
pop
sbb
rol
in
andl
cli
out
pop
jae
inc
shlb
stos
or
shrb
arpl
addb
mov
push
push
mov
cmp
and
adc
in
jne
mov
and
sbb
push
push
mov
sub
test
sbb
and
inc
lcall
dec
mov
and
out
push
or
hlt
inc
imul
cmp
setns
or
and
push
loope
out
pop
les
push
and
pop
adc
les
shll
or
clc
call
sbb
mov
add
and
sub
ret
adc
lods
mov
inc
and
sbb
push
xchg
xchg
inc
cmp
ss
addb
sub
outsb
adc
sbb
adc
cmpsl
inc
test
ret
pop
push
pop
test
xor
inc
xor
mov
dec
cmpb
cmpsl
xor
cmp
dec
or
mov
into
scas
sub
pusha
in
icebp
or
loope
movsl
adc
dec
inc
adc
shr
jp
sbb
inc
adc
js
mov
shrb
dec
add
sbb
dec
pop
rclb
dec
or
popa
sbb
fs
test
add
in
inc
jb
dec
stc
mov
test
pop
dec
fs
and
add
or
cmp
mov
ret
movsb
push
mov
push
les
pop
outsb
bound
orb
mov
cmpsl
xchg
jno
ret
mov
and
jne
mov
mov
rorb
mov
push
and
push
int3
popf
dec
sub
sbb
mov
jno
push
addl
ret
xchg
sar
xchg
ds
adc
pop
movups
and
in
mov
addl
xchg
add
in
jmp
jne
jp
xchg
mov
add
inc
xchg
sub
test
addr16
sarb
aas
out
in
lods
pusha
rolb
add
dec
inc
or
push
adc
out
es
in
sub
shrb
ljmp
ja
and
lea
shrb
cmp
sahf
les
cmpb
aaa
or
or
pop
je
add
sub
imul
adc
xchg
je
rolb
mov
mov
icebp
out
leave
scas
cwtl
mov
sar
orl
mov
push
leave
icebp
std
mov
mov
add
add
enter
inc
pop
shll
arpl
mov
sbb
andb
rol
add
cmp
jge
sahf
add
jae
cmpsb
addr16
aad
push
xchg
sub
mov
add
fwait
add
cwtl
lods
add
mov
adc
imul
stos
jp
mov
outsl
call
enter
cmp
jl
popa
xchg
sub
mov
loope
xchg
jne
gs
or
inc
fistpl
add
push
cmp
shl
adc
and
add
dec
sbb
insl
mov
push
push
test
or
or
ret
add
nop
stos
cmpsb
push
daa
sbb
push
dec
xor
sub
xchg
dec
inc
sbb
loopne
rcl
pop
push
cmpsl
cwtl
test
ficoms
add
ss
shll
sub
pop
and
push
imul
pop
adc
fld
inc
movsl
iret
mov
mov
push
enter
push
and
popf
add
inc
test
orb
xor
xor
adc
add
sub
divb
add
sbb
push
arpl
inc
or
mov
stos
push
daa
cmpsl
add
les
cmpsl
push
push
subl
aas
or
mov
pop
rolb
add
xor
or
lods
pop
mov
jo
lods
and
inc
dec
and
lret
cld
or
notl
adc
mov
and
aad
inc
and
popa
and
add
push
mov
dec
dec
sbb
jo
or
sub
adc
xchg
mov
jmp
add
or
or
arpl
sbbl
cmp
pop
sbb
aaa
nop
and
xor
mov
add
adc
inc
jo
jne
add
jno
ss
adc
xor
add
and
jns
jo
pop
xor
mov
and
mov
aaa
inc
test
into
inc
loope
xchg
mov
push
aad
in
ja
dec
les
shl
enter
pushf
bound
and
test
outsb
les
and
xor
mov
lock
sub
orl
mov
int
jecxz
inc
xor
sahf
scas
bound
adc
sbb
lahf
subb
add
rorb
add
gs
pop
inc
cli
mov
adc
add
and
inc
inc
and
and
adc
xor
mov
jno
stos
je
fbstp
pop
ret
adcl
add
in
mov
call
pop
cmpsl
andb
aaa
popf
sbb
pop
aam
jmp
cltd
dec
jl
enter
and
add
mov
push
inc
stos
mov
pop
aaa
es
sub
nop
mov
roll
stos
sub
mov
xchg
fisttpll
sub
mov
jmp
or
sbb
mov
scas
sub
loope
adc
push
pop
in
dec
add
xor
sub
negb
testl
sub
sbb
insb
je
add
push
lret
repz
or
push
lret
inc
dec
push
push
out
pop
sub
mov
movsb
ret
les
arpl
out
std
aad
enter
sub
adc
rcrb
xor
adc
adc
sbb
push
gs
mov
mov
fistpll
jle
pop
adc
aas
or
or
sub
push
test
inc
std
fsts
inc
jno
daa
iret
push
pop
mov
inc
icebp
and
cmp
mov
sub
xchg
imul
fisubs
add
inc
push
push
aad
sbb
push
mov
outsb
add
add
cld
pop
loope
and
and
add
scas
sub
pop
or
add
pushf
or
or
adc
add
not
mov
fsubrs
addr16
or
dec
push
insb
iret
xchg
add
je
pushf
cwtl
cmp
test
push
push
add
xor
daa
mov
mov
pop
shlb
scas
cwtl
mov
add
ret
jnp
fistl
sbbb
lock
xchg
and
lds
push
cwtl
sbb
fdivs
pop
cld
and
push
mov
stos
push
dec
sbb
sbb
sbb
add
push
jge
punpckldq
inc
or
add
jle
lea
jmp
repz
lret
pusha
dec
cld
adc
cld
daa
shll
aam
adc
push
cmp
sub
adc
push
mov
cs
mov
add
hlt
mov
test
pop
pop
push
call
imul
inc
jno
mov
dec
je
loope
cmp
call
jbe
mov
popf
and
mov
mov
and
cmp
jno
test
daa
mov
rolb
mov
addl
and
call
adc
or
add
movsl
jl
enter
inc
dec
rolb
int
and
sub
cmpsl
cmp
or
stos
es
sub
inc
ret
push
adc
cmp
pop
xchg
popf
subl
call
push
ret
push
mov
pop
adc
rcll
daa
or
xchg
jge
mov
nop
mov
push
cltd
jo
sub
cmpsb
mov
nop
filds
lods
clc
jmp
and
mov
mov
fs
inc
adc
mov
push
xchg
and
push
gs
inc
lods
inc
test
add
xchg
ficoms
dec
pop
sbb
adc
int3
ljmp
stos
adc
scas
sarl
inc
lret
pop
and
mov
sarl
and
lret
repnz
dec
push
inc
jmp
push
dec
out
mov
mov
mov
repz
icebp
push
or
pusha
sub
mov
mov
daa
lods
hlt
push
shl
and
lahf
rorb
adc
add
xchg
subl
push
pop
je
sbbb
adc
loop
dec
cmpsl
fcom
add
pop
mov
xchg
je
adc
pushf
test
leave
pop
pop
xchg
lock
dec
mov
push
xor
or
out
cmp
sbb
jnp
je
adc
mov
mov
test
xchg
not
sub
adc
shrb
xor
cmpsl
jp
inc
dec
rcll
movsl
movsb
add
xor
cmp
or
fisttpll
sub
or
xor
jo
mov
inc
jbe
das
xchg
xchg
call
je
pop
and
adc
add
cmc
rorb
jecxz
mov
stos
adc
push
sarb
mov
mov
push
aaa
adc
pop
sbbl
orl
jg
pop
je
xchg
jmp
add
mov
fs
repnz
jl
jno
loopne
jns
adc
imul
mov
add
xor
stos
lret
mov
je
or
cmpl
fimull
cmp
mov
or
pop
add
pop
jae,pn
test
adc
mov
je
iret
push
and
or
mov
in
lret
stos
es
xor
clc
adc
shrl
dec
inc
daa
add
push
cli
hlt
add
nop
push
or
pushf
rolb
adc
push
cltd
loope
cmp
or
stc
test
rorb
repz
aam
fs
icebp
adc
jge
les
loope
sub
adc
and
inc
test
add
int
stos
xor
sub
add
dec
data16
add
je
aam
pop
mov
ret
or
lds
les
mov
rolb
add
mov
insl
adc
test
jecxz
sbb
faddl
or
notl
mov
xor
and
or
sahf
repz
sub
mov
add
test
mull
ja
pop
xor
cmp
stc
addb
jecxz
aad
dec
jno
lcall
lahf
rorb
arpl
jmp
xor
inc
lods
in
xor
or
pop
in
andb
and
test
push
shrb
sbb
lcall
xor
cmp
add
dec
jmp
and
les
and
cld
or
nop
test
stos
cmp
push
stos
rolb
mov
or
test
and
add
popf
and
mov
addb
cmp
cltd
push
dec
or
jnp
add
mov
or
cmp
jp
daa
push
loop
imul
test
jno
xchg
pop
push
push
xchg
subl
cmp
mov
das
dec
mov
sahf
mov
inc
pop
xchg
scas
xor
sbb
jno
lea
mov
push
mov
dec
add
push
cmp
out
ds
xchg
leave
xchg
push
adc
adc
std
mov
stos
clc
repnz
rorb
imul
mov
or
push
push
aas
xor
out
mov
add
inc
sbbl
sub
jmp
push
leave
sahf
cltd
dec
or
mov
xor
in
adc
xor
bound
aam
or
sub
xor
jne
insb
add
adc
or
and
sub
scas
push
push
mov
inc
sub
ret
clc
jo
movsl
push
inc
fwait
scas
dec
cs
arpl
mov
fisttps
dec
repnz
test
cmpsb
xchg
cmp
xor
xchg
and
enter
or
mov
pop
ret
cmpsb
fs
fnsave
pop
dec
jo
and
inc
push
xor
ja
xor
xchg
cmc
and
cmpsl
pushf
push
loopne
pushf
iret
out
cmp
mov
mov
stos
arpl
sbb
adc
sqrtps
sbbb
and
mov
mov
pusha
or
decl
orb
addb
jne
push
clc
dec
mov
lcall
pop
lods
mov
adc
xchg
xor
nop
sbb
fsubr
sbb
jmp
lcall
test
mov
adc
sbb
cmp
mov
dec
mov
loopne
movsl
xchg
bound
int
loopne
aam
cmc
cmp
addr16
push
add
adc
rcll
nop
iret
mov
and
clc
ret
or
sub
in
pop
stos
nop
mov
or
rorb
dec
enter
push
push
dec
pop
int3
call
cmpsb
test
adc
push
push
sub
dec
movsb
mov
sbb
xor
add
jg
xor
or
stos
inc
mul
push
adc
mov
sub
add
mov
int
icebp
xchg
in
jmp
cmpsb
and
sar
mov
cmp
ret
mov
popf
mov
je
pop
push
dec
loopne
shl
jecxz
sbb
xor
je
fisttpl
adc
test
sub
movb
mov
pop
pop
das
mov
mov
mov
fucomp
orb
iret
mov
incb
mov
mov
add
or
push
dec
popa
sbb
adc
stos
push
sbb
pop
cmpsl
jne
push
xor
adc
test
loop
insl
push
add
fdivs
aaa
mov
insl
shrl
bound
subb
imul
int3
push
cmovns
sarb
movsb
or
pop
aad
push
test
sbb
push
or
repnz
or
push
jecxz
add
or
adc
inc
adc
pop
ds
add
dec
enter
ss
add
pop
cmp
int
push
xchg
inc
incl
ret
aaa
or
jo
dec
inc
or
loopne
adc
jecxz
adc
xlat
adc
xchg
sbb
dec
sti
pop
orb
xor
je
repnz
clc
push
add
mov
iret
pushf
loopne
xor
mov
fldt
faddl
inc
add
push
push
arpl
pop
adc
cmpl
decb
int3
jb
mov
mov
mov
or
and
adc
inc
xor
pop
leave
bound
incl
pop
inc
mov
adc
jns
sub
loopne
outsb
dec
mov
outsl
iret
adc
insb
rcl
mov
mov
stos
gs
or
xchg
sbb
mov
mov
bound
lods
adc
imul
faddl
fiaddl
js
push
add
dec
xchg
ds
sbb
push
cmpl
mov
xor
xchg
and
rcrl
push
lods
test
leave
addb
movsb
movsl
and
enter
fldl
jp
or
aaa
shl
sub
push
out
repnz
mov
xor
push
xor
adc
cmp
daa
xlat
adc
out
orb
push
cmp
or
rcr
cmp
xor
outsb
push
leave
jns
inc
add
inc
dec
arpl
xor
jnp,pt
add
or
dec
adc
insl
and
sahf
out
push
int
jne
dec
and
add
mov
movsl
out
sbb
cmp
dec
push
test
fadd
add
xchg
popa
sub
daa
hlt
sub
popa
mov
std
and
loop
xor
add
stos
popa
and
sub
adcb
lahf
cld
push
add
xchg
add
push
push
sarb
mov
test
xor
cs
cmpsl
mov
adc
jecxz
add
jmp
jle
rclb
mov
inc
shlb
popf
sbbl
inc
jecxz
hlt
rcrl
adcb
lahf
and
xchg
xchg
inc
mov
fnop
jns
test
lods
fbld
and
xor
fs
popf
add
inc
jne
pop
movsb
stos
mov
push
je
sub
add
or
xor
mov
and
les
dec
pop
and
adc
push
and
ss
add
dec
jecxz
push
push
mov
inc
lods
sub
xchg
mov
fcoms
mov
adcb
sti
jp
aas
xor
xor
xchg
xor
mov
cwtl
and
test
sub
into
mov
adc
adc
sbb
sbb
movsl
cmp
sbb
jecxz
dec
and
pandn
inc
sbb
aad
iret
cmp
fnstcw
add
rol
pop
push
inc
mov
lods
pop
inc
push
les
dec
mov
add
pop
or
cmp
inc
pop
xchg
sbb
xchg
lret
in
dec
cmp
jns,pn
leave
dec
int
add
mov
xor
loop
test
and
arpl
mov
mov
test
cwtl
lret
popa
scas
inc
fdivrl
or
push
mov
cmp
sbb
push
insb
orl
outsl
mov
aam
mov
push
and
cmpsb
sub
arpl
aam
jmp
xor
xchg
or
adc
push
push
cwtl
pop
test
std
push
jb
aam
loop
imul
jne
out
sti
push
xchg
xor
idivb
rol
push
mov
mov
inc
pushl
push
leave
nop
mov
in
jge
inc
inc
sbb
dec
pop
test
dec
mov
and
xor
scas
bound
jle
sbb
and
mov
pop
pop
push
lods
or
push
lgs
test
mov
push
pop
mov
or
inc
pop
lock
or
loopne
mov
add
push
xchg
ret
test
shlb
dec
jecxz
cmpsb
test
jne
cmc
mov
and
sub
push
out
xchg
push
subl
test
sbbl
dec
loopne
and
push
jmp
jl
fstpt
leave
inc
mov
lock
mov
out
subl
mov
inc
rclb
lock
arpl
mov
or
adc
dec
dec
jns
adc
js
lret
adc
aad
add
add
add
cmp
mov
xor
mov
mov
mov
ss
push
pop
fisubrl
pop
cmpsl
sbb
lea
adc
addl
sub
rclb
sbb
cmpsb
mov
xadd
pop
add
nop
sub
sbb
inc
int3
and
data16
xchg
sub
out
das
ret
mov
mov
mov
cmpl
and
inc
jae
outsb
adc
leave
in
and
cmpsb
inc
cld
dec
mov
add
pop
mov
pusha
enter
jmp
adc
mov
ja
fisubrl
mov
add
subl
jne
ret
mov
adc
xlat
addr16
lcall
rol
push
mov
enter
and
pop
jo
push
pop
faddl
push
jb
pushf
jmp
and
rol
jle
and
jle
les
sub
lods
add
mov
jo
leave
andw
push
dec
jmp
add
das
in
stc
sub
lea
mov
and
add
add
mull
inc
pop
dec
roll
add
or
and
xchg
mov
in
cwtl
gs
loop
insl
jmp
pusha
push
or
les
add
dec
ror
xchg
stos
inc
loop
out
out
call
adc
or
es
adc
ret
test
insl
jle
pop
and
and
data16
push
inc
pop
lret
mov
and
and
xor
cmp
or
xchg
add
mov
add
iret
cwtl
call
dec
jno
enter
aas
roll
nop
pop
or
lds
jnp
jae
sbbb
push
cmpsb
or
push
cmp
pop
sbb
stos
fs
call
jno
iret
or
ljmp
dec
aad
mov
mov
dec
dec
add
add
add
inc
enter
push
push
cld
loop
mov
imul
or
and
addl
sub
gs
outsb
test
sub
roll
adc
and
inc
or
sbb
int
mov
cmp
xchg
xor
adc
je
inc
repnz
nop
std
fiaddl
bound
roll
adc
mov
add
lahf
jne
jno
inc
and
or
mov
loopne
rclb
pop
xchg
rcl
sti
lret
add
int
sub
mov
arpl
cwtl
test
cmp
mov
shr
cmp
fnstcw
jecxz
loopne
dec
cwtl
pusha
sbb
jne
pop
sbb
loope
mov
pop
xchg
mov
sub
or
inc
aas
in
adc
mov
sbb
js
in
mov
inc
jno
cwtl
stos
loope
mov
xchg
pusha
and
sub
ret
add
cmpsb
inc
xor
mov
pop
inc
nop
xor
add
xchg
adc
leave
sarl
in
cld
adc
pop
loop
icebp
cmp
pop
stos
or
fadds
push
adc
mov
inc
dec
adc
cmp
hlt
scas
sbbb
xchg
addb
mov
fadds
lock
aas
push
rorb
pop
gs
xorb
sub
inc
jo
jno
add
push
push
dec
push
jo
and
xor
adc
orl
mov
add
inc
pop
aaa
popl
gs
adc
mov
or
ret
xchg
xor
lret
xchg
and
add
adc
or
sahf
cwtl
sub
inc
cmp
clc
mov
loope
mov
lea
iret
pop
jg
scas
add
sbb
movsb
dec
add
lcall
xchg
test
push
daa
mov
add
addl
icebp
faddl
dec
subl
dec
lea
loop
jnp
unpckhps
jmp
leave
push
andl
test
sbb
sahf
imul
sbb
push
sbb
xchg
rolb
iret
jmp
stos
or
adc
push
mov
xchg
push
mov
xor
hlt
xchg
mov
mov
sub
xchg
and
jl
and
mov
mov
inc
or
out
sub
or
loopne
outsb
or
inc
fsubs
add
pusha
popa
sub
jne
dec
inc
imul
adc
lds
test
jecxz
push
mov
cmp
fs
std
cmp
das
adc
sar
aas
push
inc
dec
mov
enter
push
push
and
loopne
push
lods
mov
ja
mov
sub
sub
lods
lret
je
es
cmp
adc
shr
cmp
stos
mov
xor
fst
xor
inc
cmp
mov
imul
imul
and
adc
enter
or
adc
dec
ds
inc
mov
inc
sub
stos
cmpb
lock
rcll
test
adc
push
dec
jbe
sbb
mov
sub
dec
add
ret
les
icebp
gs
subb
sti
inc
je
jno
inc
call
jno
add
jl
rcrl
out
sbb
cmp
or
cltd
sbb
xor
sbb
sbb
add
mov
add
xchg
and
xor
subl
jmp
daa
dec
mov
inc
lods
dec
inc
subb
sub
test
mov
inc
imul
popf
pop
adc
nop
push
push
and
call
inc
cmp
add
jge
push
lret
cmp
push
lds
push
repnz
and
mov
into
hlt
cmp
shll
xor
fnstenv
bound
xor
or
aad
es
or
dec
dec
and
pop
test
jns
or
cmp
cmpsb
clc
sbb
pop
adc
add
movsl
shll
in
daa
push
or
mov
or
xchg
outsb
push
or
cmp
sbb
enter
cmp
into
test
add
mov
push
imul
inc
sbb
push
cltd
or
sub
and
cmp
and
notl
cmp
xchg
cmp
sub
test
mov
test
push
in
mov
clc
mov
push
pop
aaa
lods
rclb
cwtl
add
push
and
adc
xor
lds
mov
je
lods
push
leave
sbb
xor
adc
orb
sbb
sub
in
rclb
xchg
adc
call
push
test
push
push
add
clc
adc
es
inc
test
or
dec
lahf
nop
cmp
push
sbb
je
or
adc
sub
inc
enter
add
pop
sub
sbb
pusha
mov
pusha
add
mov
inc
roll
mov
or
push
fwait
push
xchg
gs
jmp
push
xor
rorl
add
cmp
adcb
in
sbb
imul
adc
adcb
stos
and
adc
cmc
test
scas
jmp
push
xor
fstpl
and
je
mov
jno
leave
add
shlb
pop
les
or
add
pop
push
lea
nop
daa
dec
xlat
daa
mov
cwtl
stos
idiv
daa
roll
pop
sbb
sub
mov
push
movb
mov
sbb
pop
adc
es
push
inc
sub
imul
call
cmpl
cmpsb
mov
cmp
sub
daa
adc
test
les
das
dec
lds
and
xor
inc
mov
popf
dec
add
test
add
in
sbb
and
xchg
test
add
cld
fadds
adc
ja
movsb
xchg
cltd
lea
out
xchg
lret
jns
int
mov
mov
jge
mov
orl
and
or
inc
sbb
insb
icebp
pop
or
loopne
pop
scas
inc
stos
jbe
add
add
mov
mov
pop
sarb
or
test
inc
pop
aam
ja
loope
call
lods
or
dec
xchg
icebp
test
and
dec
lds
out
inc
je
orl
sub
dec
dec
mov
adc
lds
ss
or
popa
stos
fwait
test
cmc
cmp
test
mov
aad
test
push
pusha
add
dec
add
sbb
add
sub
mov
rcr
in
xor
call
movsl
mov
or
ljmp
sub
aad
insl
sbb
and
dec
mov
mov
cmpsb
stos
and
mov
add
scas
pusha
cmp
and
push
jl
adc
insb
or
fs
hlt
sbb
popa
stos
jns
mov
inc
nop
outsl
call
mov
and
adc
xor
out
xor
inc
addr16
cmp
adc
sbb
pop
and
inc
jne
adc
loopne
loop
das
cmpsb
pop
outsl
jle
aam
cmpb
scas
loopne
loope
aam
sbb
jnp
lret
jbe
and
or
jne
jecxz
add
test
unpcklps
test
pop
js
add
mov
pop
pop
adc
jne
addr16
jns
roll
inc
and
push
aas
or
cli
sbb
mov
pop
push
and
test
mov
pop
mov
pop
in
mov
add
or
sub
push
dec
inc
sbb
jns
in
mov
and
dec
call
arpl
add
or
jge
add
inc
mov
or
xor
mov
mov
push
loop
daa
and
cmp
add
adc
xor
xchg
or
lds
orl
stos
sub
sbb
add
add
icebp
add
outsb
popa
push
or
push
dec
je
or
call
enter
adc
adc
aaa
and
xchg
jb
call
jns
clc
shrl
mov
or
mov
icebp
imul
push
aad
jmp
jecxz
adc
stc
addr16
push
jno
pop
sbb
push
out
sbb
pop
mov
inc
xor
xchg
pop
push
inc
stos
rcrb
jle
stos
cltd
add
daa
push
mov
xchg
cmp
jecxz
dec
int
jne
sbb
push
pusha
mov
adc
push
mov
pop
push
xor
and
dec
in
sbb
add
loopne
sbb
mov
push
test
adc
int
and
xchg
rcl
and
ljmp
dec
sbbl
mov
jmp
cmp
lret
bound
pop
add
sub
sub
dec
stos
cmp
das
mov
xor
nop
push
orb
and
cli
lds
inc
and
stos
mov
mov
sti
imul
dec
pop
cmc
sbbb
pusha
sbb
jmp
sbb
movsb
adc
push
inc
xor
stos
loop
xor
aad
mov
mov
push
test
test
add
jbe
push
adc
jecxz
subb
and
in
addb
sub
xlat
or
xchg
sbbl
andb
or
push
arpl
adc
popfw
test
adc
ror
inc
mov
lock
push
test
inc
mov
cmp
add
jo
adc
insb
loopne
fisttps
and
ror
loopne
pop
sbbl
sbb
sub
loop
sub
dec
sub
inc
xchg
mov
ret
stos
adc
sub
xor
push
lea
add
ret
dec
cld
add
inc
in
jl
popl
dec
repz
sbb
xor
mov
rolb
daa
test
leave
and
test
adc
xor
mov
mov
adc
les
dec
cwtl
js
ja
adc
adc
pusha
mov
dec
shlb
and
aas
add
mov
cmp
jo
add
aam
cmc
xor
mov
loope
es
sbb
adc
adc
leave
push
dec
cmp
inc
dec
lods
lcall
push
mov
imul
add
cmc
and
ljmp
mov
sbb
adc
lahf
pusha
adc
les
arpl
xor
dec
pop
adc
sbb
cmpsb
loop
icebp
push
mov
int
cmpb
cli
andb
into
rcll
add
bound
push
popa
clc
push
in
sbb
ljmp
add
mov
inc
cmp
repz
mov
aam
repnz
out
inc
jmp
popa
xor
les
adc
inc
in
daa
mov
xchg
sub
pop
inc
inc
icebp
mov
cmp
stc
mov
xor
push
sub
add
test
push
mov
test
cmp
or
inc
repnz
xchg
or
dec
aaa
nop
or
mov
adc
jne
sub
inc
leave
add
and
adc
xor
mov
inc
orb
cmp
or
sub
jg
scas
nop
fwait
testl
mov
addl
inc
enter
push
xor
mov
inc
mov
ds
xchg
pop
cli
or
sub
dec
adc
lods
add
test
cmp
es
pop
push
jecxz
xchg
mov
pop
lea
in
bound
jecxz
movsb
loop
sti
pop
stos
xor
fldenv
inc
add
mov
je
sbb
pop
add
adc
lret
mov
cmpsl
repnz
adc
push
sbbb
call
mov
dec
addr16
pop
movsl
orl
aad
das
dec
les
inc
sbb
or
ucomiss
xor
sub
xor
in
repnz
or
popf
adc
and
push
popa
test
jge
adc
or
inc
test
mov
rolb
lret
xor
cmc
test
int
lea
pop
cmove
jl
ss
lcall
inc
mov
push
leave
and
jmp
or
add
loopne
inc
rorb
add
xor
idiv
xchg
xor
cmovno
adc
push
and
pop
inc
sbb
ss
jne
inc
test
sub
ljmp
adc
inc
mov
dec
xor
inc
push
insb
mov
inc
lods
inc
push
xlat
jne
and
pop
pop
adc
or
sbb
jecxz
or
and
pop
jmp
movsb
jno
daa
outsb
filds
pop
push
xor
test
push
loopne
mov
and
pusha
sub
push
lahf
in
aam
inc
sahf
das
push
test
test
hlt
in
push
rcrb
pop
in
movsb
sbbb
je
cli
mov
mov
xor
mov
sbb
in
cmp
out
stos
cli
clc
inc
add
mov
sub
pushl
shrl
sbb
xlat
dec
cmpsl
adcb
sbb
inc
arpl
push
xchg
jl
push
pusha
push
push
xor
sub
push
outsb
add
cltd
or
sub
arpl
xchg
cmp
ret
mov
and
test
repz
xor
cmp
pop
jo
or
adc
jmp
dec
sub
pop
sub
cmc
mov
or
mov
jno
repnz
inc
outsl
addl
movsl
addl
add
mov
and
and
bound
xchg
dec
inc
mov
and
aas
scas
das
push
add
mov
call
xor
xchg
pushf
outsb
imul
adc
lods
addl
xor
adc
les
push
and
and
mov
out
xchg
popf
add
or
je
paddd
push
loope
aad
loope
sbb
rclb
clc
inc
mov
jns
loop
cmp
dec
bound
andb
pop
imul
and
lods
sub
mov
jne
push
and
cmp
push
aad
pop
xchg
push
xor
adc
add
fwait
cmp
scas
inc
shl
addb
push
push
jae
jns
pop
push
xchg
and
jne
je
push
add
and
or
push
inc
and
inc
nop
mov
and
subb
adc
sbb
jmp
push
fbld
mov
or
lcall
add
shlb
mov
notb
dec
jecxz
inc
xor
add
sbb
test
or
lcall
push
gs
jo
sub
dec
test
jl
jbe
push
add
test
ret
pusha
adc
mov
mov
mov
fistpll
imul
inc
push
mov
enter
loope
mov
adc
out
ja
or
or
sti
popf
mov
sbb
pop
dec
push
push
nop
cwtl
jmp
and
adc
std
and
inc
int
cmp
out
xor
lds
adc
and
adc
cmp
idivl
inc
popf
mov
adc
mov
mov
mov
inc
outsb
dec
test
xor
pop
dec
adc
mov
shll
inc
mov
hlt
ret
or
imul
data16
jo
test
pop
bound
dec
mov
rolb
xchg
popf
fists
adc
lar
loop
inc
cmp
cmp
xor
push
inc
loopne
outsl
outsl
pop
push
ret
pushl
ret
sbbb
fldt
inc
test
jne
ret
or
cmp
xlat
adc
test
leave
je
jl
lahf
push
rcrb
fidivl
mov
cmpsb
jg
dec
mov
out
sub
das
jmp
mov
andl
push
inc
addb
std
or
icebp
sbb
adc
push
call
cmc
test
out
sbb
pop
add
loop
xor
vmovntps
ljmp
sahf
adc
pop
mov
xor
push
sub
or
push
mov
test
xor
push
push
and
adc
mov
or
inc
and
cwtl
addl
es
add
orb
mov
add
xchg
outsl
aas
push
scas
and
xor
push
ret
pop
leave
add
cmpl
dec
or
loopne
sub
add
and
mov
and
aad
sub
mov
daa
xor
out
pusha
xchg
dec
add
adc
push
lds
je
dec
push
inc
mov
inc
lcall
xor
movsb
and
repz
mov
jb
sbb
loop
imul
mov
or
adcb
mov
add
subl
adc
outsb
aad
inc
add
xchg
push
xchg
int3
rorb
dec
and
shl
in
mov
nop
dec
inc
adcl
test
shlb
addb
push
cs
xor
or
cmp
cwtl
bound
mov
push
mov
cld
inc
aas
add
push
jbe
scas
nop
inc
sbb
insb
cmp
add
add
mov
daa
fwait
sbb
push
imul
jmp
sarl
and
and
jl
add
pusha
es
push
or
ret
inc
popa
test
out
push
mov
pop
and
icebp
pusha
les
faddl
xchg
addr16
pop
add
das
stos
inc
lods
inc
imul
cld
mov
xlat
push
test
xor
cmp
je
jle
pushf
and
pop
cs
xchg
adc
scas
or
jo
mov
cs
add
adc
les
push
ss
jl
xchg
sbbl
mov
das
dec
pop
pop
aam
or
je
and
adc
sbb
xchg
jnp
mov
adc
and
xchg
xor
xchg
rol
pusha
andb
xor
mov
mov
mull
mov
cmpsl
xor
ja
adc
int
aad
test
lret
cmp
and
int3
out
push
icebp
add
add
xchg
pusha
adc
push
stc
sbb
jns
ror
mov
stos
sub
call
ja
out
xor
cwtl
mov
insl
popa
add
pop
daa
jmp
xor
popf
repnz
xchg
mov
and
cmp
stc
jmp
lret
inc
out
sub
sub
frstor
xor
out
int
xor
add
sbb
inc
dec
xchg
inc
add
adc
and
mov
inc
test
jmp
cld
add
inc
adc
cmc
mov
loop
les
cmp
es
ficoml
mov
ds
lahf
mov
cltd
cmp
mov
cmp
sub
jno
lock
test
push
es
sbb
jecxz
inc
or
mov
int
push
jmp
add
out
ljmp
push
xchg
jmp
push
repnz
loope
push
rcrb
fistpll
popa
push
cmp
mov
ret
mov
inc
pop
adc
sti
clc
mov
rcrb
add
xchg
adc
outsb
in
scas
test
sub
adc
repz
xor
jae
call
inc
mov
stos
ret
dec
pop
bound
pushl
sub
xchg
xor
aad
sub
pusha
stos
ret
outsl
push
js
stos
jmp
pusha
push
dec
xchg
imul
arpl
lret
push
jp
mov
std
idivl
jp
scas
push
mov
and
mov
lcall
cmpsl
pop
sbb
jp
stos
pop
aas
push
jnp
jb
pop
test
inc
insl
jl
cmpsl
scas
add
insl
jp
test
mov
incb
xor
data16
insl
ret
push
rcpps
jg
jae
sub
ret
push
mov
push
shrl
xchg
add
aad
push
push
cld
dec
add
cmp
jns
js,pt
dec
push
cld
adc
lea
in
andl
mov
and
pop
jl
sub
cmp
cltd
xchg
cmp
es
ret
out
sub
xchg
push
cltd
and
and
bound
in
enter
add
mov
or
add
push
sub
pop
sub
jmp
pop
std
cmpsl
addr16
xlat
aad
jnp
sub
scas
mov
xchg
cmpsl
repnz
pop
mov
test
inc
add
push
sbb
insl
ss
shrb
push
jns
cmpsl
cmp
jnp
pop
js
in
cmp
jnp
pop
jle
push
jns
dec
jg
jl
jge
pusha
nop
lret
jae
pop
lret
dec
jo
jge
adc
adc
arpl
dec
sbb
dec
imul
in
dec
mov
dec
dec
push
fsubs
xchg
inc
dec
dec
mov
cltd
fnstcw
ret
fcmovbe
cli
mov
clc
jmp
aad
jmp
cs
pop
cli
mov
sarl
jmp
and
dec
and
ret
addr16
and
pop
mov
sub
dec
aad
cmp
std
push
movsl
scas
push
jp
ljmp
stos
jmp
cli
cmp
shrl
adc
pop
shl
sbb
pop
fbld
stos
shrb
mov
push
leave
jp
add
into
mov
and
jg
mov
and
repnz
sub
jp
sub
cmc
and
loopne
loop
repnz
add
jns
pop
nop
mov
fldt
sbb
lret
pop
repnz
scas
mov
adc
mov
mov
xchg
cmp
jle
fxam
pop
cmp
incb
dec
jnp
outsb
add
ret
push
ljmp
push
call
pop
das
pushf
out
shrl
and
mov
add
ret
sub
sti
sarl
push
jne
repnz
add
xor
sub
lods
repnz
outsl
push
fcmovu
ret
mov
push
cmpsl
jno
pop
adc
and
popf
mov
mulb
jecxz
inc
idiv
fimuls
daa
sbb
sub
test
imul
jne
ja
and
shrb
lahf
ds
push
sbb
sbb
push
ficompl
icebp
push
mov
aas
in
mov
mov
xchg
out
ret
xchg
imulb
call
sub
or
lcall
jns
add
pop
adc
sub
adc
das
in
sub
mov
js
sbb
rcrl
cmp
icebp
adc
sub
sarb
mov
mov
and
fs
jnp
add
mov
jo
test
out
loop
and
out
or
adc
adc
fistpll
inc
xchg
out
ret
adc
inc
pop
inc
call
hlt
adc
mov
cmp
in
cmp
push
or
adc
aaa
imul
insb
push
ljmp
sbb
es
sbb
sbb
mov
or
dec
ds
iret
inc
daa
push
ss
push
loopne
mov
fxtract
imulb
fdivr
sub
dec
aam
cmp
in
stc
sub
inc
sub
roll
mov
leave
push
repnz
es
sub
aaa
mov
test
lods
call
and
and
push
jl
xor
stos
sbb
xchg
test
push
xor
xor
not
pop
mov
dec
das
ret
push
jge
test
ret
adc
adc
jne
sub
adc
sub
in
or
cmp
pop
inc
xchg
xchg
inc
outsl
and
gs
test
outsl
sbb
sub
jp
ret
push
and
sub
push
in
jmp
inc
imul
sub
outsl
sbb
lcall
cmp
imul
sub
inc
pop
jmp
test
in
mov
stc
add
data16
addr16
pop
insl
adc
pop
push
cs
test
or
dec
stos
int
and
rcr
cmp
cli
test
sub
jb
cmp
pop
pop
aad
mov
sahf
cs
and
and
mov
push
es
mov
es
std
cmp
test
bound
mov
pop
mov
movsl
insb
decl
mov
or
ss
sub
sbb
fcomps
loopne
lahf
jl
cmp
add
dec
movsb
ljmp
and
jmp
js
add
cmpsl
mov
call
mov
adc
pop
scas
pop
cmpsl
pop
push
push
and
pop
cs
ret
shll
in
sub
dec
xchg
pop
and
push
pop
sub
sub
pop
pop
lock
into
adc
das
mov
push
mov
sbb
inc
sbb
cmp
shlb
add
rcll
call
shll
mov
lahf
stos
mov
je
es
xor
push
add
rorb
es
sub
popa
mov
and
pop
addr16
inc
mov
arpl
add
add
out
fmuls
lcall
cs
fbld
imul
sbb
loope
inc
sub
push
out
aaa
loop
outsl
or
imul
xchg
mov
xlat
aam
add
mov
into
xor
add
int
packssdw
dec
ss
addr16
ljmp
fmuls
lods
cmp
and
mov
lret
fldt
push
sub
repz
pop
aam
shll
mov
cmp
clc
loop
xchg
aas
out
fsubp
pusha
and
pop
fidivrl
fistpl
jle
push
sbb
test
enter
sbb
cld
pushl
clc
fstp
jae
mov
mov
in
add
jg
cmpsl
pop
push
add
mov
inc
in
cwtl
stos
inc
sbb
mov
cltd
das
ret
jnp
subb
xchg
mov
and
test
ss
jo
sbbb
sub
sbb
lcall
sbb
cmp
daa
push
mov
in
imulb
addb
fs
xchg
inc
jmp
stos
add
movsl
adc
into
push
in
test
ret
jno
mov
xchg
sti
ret
sub
push
leave
mov
sub
dec
xchg
mov
and
mov
outsl
dec
push
shl
sub
cwtl
sub
aad
stos
das
xchg
adcb
repnz
sub
mov
insl
xchg
xor
sub
or
xchg
lds
inc
leave
or
sub
mov
mov
leave
scas
scas
mov
xchg
or
adc
jne
pop
sbb
cwtl
icebp
test
inc
ret
dec
fisubs
sub
xor
adc
movsb
sbb
add
add
fisttps
mov
dec
inc
push
mov
jmp
fisubl
sbb
ret
aaa
fisubrs
lock
and
ret
jnp
jp
out
pop
jl
mov
add
ss
sub
pop
leave
mov
add
adc
jg
jns
int
add
decl
or
push
cli
add
fwait
stc
mov
add
push
jnp
es
cmp
push
ljmp
repz
push
mov
jle
mov
sahf
incb
mov
fidivs
lahf
jnp
fistps
repz
testl
ror
divl
xlat
mov
ss
mov
rcr
sti
cmp
jnp
xchg
sahf
jg
add
dec
sti
clts
jnp
in
xchg
mov
dec
jle
sahf
jnp
inc
jo
fnstsw
ss
jl
addr16
ds
outsl
fistpl
ljmp
xchg
fldt
xor
fucomip
pop
push
jge
push
out
mov
jle
sti
fiadds
sti
jbe
fidivrl
fcmovnu
jnp
out
cli
xchg
sti
cs
push
mov
aaa
jg
fdivrp
mov
nopl
es
adcl
pop
outsl
push
push
xor
mov
jnp
jg
fdivrp
negb
pop
pushf
ffree
ret
mov
data16
or
fbld
push
push
push
or
cs
lock
push
mov
cs
pushf
push
cmpsl
fiadds
xchg
ss
mov
mov
subl
mov
sub
fsub
out
into
push
pop
add
jg
rep
xor
jo
push
ds
xor
mov
mov
iret
push
into
push
imulb
sbb
aaa
jg
inc
dec
fstp
loope
ds
cmpsb
jle
mov
outsl
repz
jg
push
jbe
cmp
ud0
xor
inc
outsb
jbe
fidivs
rol
mov
das
push
negl
cmpsl
fisubs
dec
jbe
outsl
sbb
or
pop
mov
fists
aas
aaa
sti
mov
rcrl
pop
mov
inc
addr16
xor
xchg
loopne
xlat
mov
ret
iret
data16
es
mov
mov
pop
cmp
enter
xchg
dec
dec
push
xchg
ljmp
loop
add
fisubs
cmp
fwait
add
bound
push
dec
xchg
pop
push
and
inc
adc
push
jmp
lea
stc
popf
jecxz
push
repz
cmp
call
pop
add
fwait
mov
adc
repz
sub
ret
mov
sub
and
rolb
push
je
dec
outsl
jbe
dec
gs
outsl
jb
idivb
jg
gs
outsl
insl
insl
popa
outsb
fs
imul
imul
mov
ljmp
imul
outsl
outsb
dec
popa
insl
gs
dec
popa
jae
inc
jb
fnstsw
jb
inc
inc
inc
je
bound
inc
push
gs
fildll
js
outsl
arpl
jae
pusha
imul
mov
jp
push
imul
insb
insb
cmp
push
jne
addr16
insl
push
unpcklps
dec
imul
roll
add
push
jo
mov
jne
jle
jne
jl
xchg
inc
gs
pop
sti
pop
add
pop
test
outsl
repnz
sbb
add
cld
cwtl
jo
jb
andps
adc
mov
jb
sbb
jae
outsb
ja
xor
dec
gs
insb
inc
jne
inc
push
rorb
push
testb
or
test
aaa
mov
jo
push
push
cmp
test
inc
jae
add
push
pop
nop
jae
inc
xor
push
outsl
dec
inc
dec
fildll
or
fs
call
bound
push
daa
incb
js
flds
outsb
jae
lock
mov
mov
or
adc
sbb
push
xchg
push
arpl
dec
bound
add
aad
jb
sbb
cmp
outsl
ja
ficompl
test
and
loopne
nop
mov
jns
jge
jo
dec
mov
jo
dec
insb
xchg
jb
jo
outsb
aaa
xorb
mov
cmp
lahf
or
jne
lret
mov
cmc
js
xor
icebp
insb
add
mov
fstl
fdivs
gs
inc
push
pop
push
sbbl
in
xchg
mov
jo
and
ljmp
addr16
push
jp
push
jbe
inc
pop
dec
lahf
das
adc
push
data16
xlat
shlb
jae
push
push
add
inc
jnp
push
and
fstl
rdpmc
xor
sbb
outsb
xor
adc
push
sbb
ja
inc
mov
mov
push
rorl
and
jnp
dec
push
jo
outsb
imul
push
test
adc
push
fisubrl
js
inc
dec
outsl
dec
inc
jl
bound
scas
arpl
push
ja
int
outsl
sbb
or
test
jnp
jmp
mov
inc
mov
into
lret
or
insl
lahf
je
in
sub
xor
icebp
jp
sbb
bound
lods
xor
jle
addb
sbb
insb
les
popa
bound
stc
add
inc
inc
inc
push
dec
inc
inc
jns
rcrl
into
outsb
jbe
fs
imul
jns
or
insb
lcall
in
stos
inc
jae
outsl
push
data16
push
add
xchg
mov
arpl
cmp
sub
and
insl
pusha
mov
addb
dec
jl
imul
xor
shlb
popa
xchg
cmpsb
push
je
or
cmp
or
push
aam
push
cmp
sbb
mov
mov
lahf
sbb
gs
push
inc
pop
test
je
sbb
jnp
sbb
insl
add
add
dec
les
push
and
loopne
add
jae
cmc
push
ds
int3
sub
push
push
gs
sbb
or
leave
push
lods
xor
dec
xchg
scas
js
sbb
jg
sbb
aam
xchg
and
xchg
cmpsl
pusha
add
cmp
dec
xor
leave
mov
jmp
test
and
cmp
fwait
add
add
je
push
scas
mov
mov
mov
ja
pop
inc
fwait
loopne
sub
jo
pop
pop
or
push
outsb
lret
js
pop
aaa
xor
outsl
ja
push
dec
inc
dec
ret
in
aam
iret
and
jo
cmp
sub
push
jb
outsb
int
dec
xor
bound
movsl
jae
loope
fmull
jo
inc
insb
addr16
mov
mov
cmp
dec
pusha
xor
dec
lods
dec
inc
adc
in
andb
adc
mov
fldl
mov
mov
stos
lret
call
jg
push
je
jae
xor
dec
ss
mov
or
xchg
cmpsb
add
aaa
push
push
sbbl
push
insb
inc
dec
dec
jge
outsl
js
xchg
jns
xchg
lea
gs
xor
fldcw
bound
sbb
dec
ljmp
mov
leave
inc
dec
addr16
adc
sbb
push
sub
mov
mov
add
jne
mov
cltd
and
lods
sub
outsl
shll
inc
xor
jb
arpl
fsubp
js
call
addl
test
xor
push
mov
aas
roll
push
inc
out
leave
incl
add
add
add
add
add
add
adc
xor
lret
inc
push
adc
pop
ss
jbe
add
or
add
and
add
int
push
cmp
pop
repz
pop
dec
push
mov
pop
push
pop
mov
shll
adc
mov
and
ret
popa
inc
jl
xor
les
dec
inc
add
jb
adc
fstl
and
es
fisttpl
jns
adc
sahf
fwait
inc
sarb
jo
add
or
test
in
inc
repnz
add
sbb
add
add
add
add
add
adc
mov
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
