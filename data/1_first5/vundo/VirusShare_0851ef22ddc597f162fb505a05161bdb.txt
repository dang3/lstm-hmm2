add
add
add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
pushl
push
add
add
add
and
and
sub
dec
loopne
add
add
add
adc
push
add
add
add
loop
popa
or
jecxz
add
add
add
mov
lcall
push
or
xor
and
cmpsl
jb
push
jb
push
jb
outsb
inc
dec
inc
add
gs
stc
fidivl
xor
pop
inc
jmp
fsubs
call
xorb
adc
push
sub
cld
test
cld
push
call
jge
push
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
or
in
in
arpl
adc
xor
rolb
add
incb
incl
add
or
cld
xor
cld
and
adcl
inc
lock
adc
lcall
sar
dec
lret
repz
and
push
add
mov
hlt
push
push
add
fists
add
in
js
add
movsb
xchg
movb
imul
cmp
cmp
out
xor
add
sbb
jb
je
js
outsl
movsl
outsb
insl
je
add
inc
mov
movsl
xorb
outsl
imul
and
insb
imul
xor
push
jne
push
mov
subl
jae
jae
loopne
insb
push
insb
popa
dec
add
add
mov
mov
adc
add
add
addb
add
out
iret
addr16
aas
fwait
dec
rep
cltd
imulb
jnp
cli
lods
lret
jnp
lds
cmpsb
xchg
inc
in
jnp
shll
xlat
pop
mov
daa
mov
push
mov
aam
adc
ljmp
jl
imul
cmp
arpl
add
mov
jg
testl
stc
call
jg
fdivl
and
movsl
je
push
daa
jl
pop
xor
jb
jmp
ret
mov
out
dec
iret
test
stc
les
cmpsl
outsl
fwait
loopnew
insb
sbb
mov
mov
and
test
shrl
popa
and
push
rcrb
mov
jno
cmp
or
jns
xor
in
xor
aaa
mov
push
push
movsl
insl
stc
out
add
mov
cs
sub
xchg
mov
mov
nop
lea
jmp
or
mov
adc
pop
xor
jne
cmp
mov
pop
movb
mov
test
mov
sub
push
add
rclb
inc
dec
int
repnz
clc
pop
sbb
rcrl
mov
jnp
inc
adc
push
inc
movsl
leave
lret
fcompl
lahf
outsb
lock
int3
mov
or
push
and
shll
dec
push
out
loop
pop
sbb
rcrb
movsl
push
push
push
sbb
inc
notb
into
dec
call
pop
std
and
mov
js
insl
and
lret
mov
jp
mov
fstp
adc
sbb
lock
jmp
clc
rcrb
mov
lods
push
int
jo
mov
mov
shlb
xchg
jmp
dec
fsts
push
cmpb
dec
xor
mov
and
iret
test
arpl
ljmp
movsl
sub
adc
or
std
lds
es
mov
dec
sub
cmpsl
fs
mov
orl
pop
mov
mov
mov
jmp
sar
xchg
out
add
adc
adcl
je
imul
testl
aam
cmp
imul
lahf
lea
ret
ss
adc
inc
xchg
aam
scas
scas
out
push
cli
arpl
xchg
jmp
in
xchg
repnz
mov
in
add
mov
jge
adc
adc
mov
lret
pop
xlat
xchg
in
push
inc
or
lea
out
dec
lea
mov
ljmp
mov
xchg
fisubrs
inc
pop
popa
das
std
mov
ja
jno
fnstcw
pop
std
xchg
leave
bound
popf
push
and
mov
sbb
inc
sahf
data16
mov
cmp
jns
sub
out
adc
data16
or
mov
lock
fdivl
cmp
scas
or
adcb
aas
inc
lret
inc
inc
lret
add
fdivrp
lret
or
add
std
xchg
mov
loopne
mov
jb
flds
sbb
mov
or
push
pop
and
lahf
push
dec
cli
aam
das
mov
mov
push
repz
in
pop
hlt
les
das
ret
xor
mov
fsubrs
bound
mov
add
dec
pop
movsb
xor
or
bound
add
add
push
dec
aad
jg
cltd
xchg
into
shlb
out
add
cltd
jg
xchg
hlt
adc
fnstenv
mov
scas
ljmp
add
and
jl
jns
jecxz
add
sub
rcr
mov
pop
stos
push
adc
mov
pop
arpl
orb
orb
xor
mov
pop
aas
imul
lret
ss
and
fwait
mov
jmp
repz
popa
jg
xlat
sarl
enter
dec
push
dec
sbb
in
push
pop
mov
fisttpll
cmp
jecxz
outsl
std
lahf
ret
xlat
mov
sub
movsl
cmp
daa
sbb
lcall
xchg
sbb
cmp
popa
dec
lods
leave
into
or
dec
or
pop
jmp
mov
int
mov
inc
xchg
jl
aam
jns
sbb
xlat
add
add
out
xchg
shlb
mov
call
pop
pop
repz
in
je
adc
enter
lret
cmpsl
testl
mov
gs
cmp
xor
into
push
into
mov
js
daa
pop
insb
sbb
inc
jnp
push
lret
pop
loope
in
mov
cwtl
test
stc
test
mov
dec
loope
fsubl
pop
push
adc
mov
sbb
jno
xchg
addr16
dec
adc
icebp
movsb
or
sbbb
scas
popf
pusha
rorb
sbb
sti
jnp
js
inc
or
jns
push
and
sbb
sbb
lods
pop
les
int
arpl
xor
mov
movsb
sub
lret
pop
faddl
rclb
ja
cmp
inc
jns
ljmp
bound
mov
and
push
incb
xchg
faddl
add
ljmp
ja
jle
and
hlt
cmp
jp
fmuls
push
pusha
roll
add
cwtl
cmp
jp
int
and
pop
inc
push
xchg
test
mov
test
pop
inc
inc
das
xchg
ret
cmp
sub
je
and
push
add
sti
test
push
and
les
icebp
pop
cmp
cmpsl
int
enter
sub
sarb
inc
fdiv
sti
cmp
jo
shll
ds
into
inc
mov
mov
cmpsb
fcmovbe
mov
popa
pop
pop
fisubl
xchg
test
lret
mov
mov
mov
je
dec
inc
sbb
repz
insl
jo
jl
jg
push
aas
lods
jg
arpl
pop
and
lcall
dec
mov
out
rcll
mov
mov
shrd
nop
cmpl
mov
xlat
xor
or
mov
push
adc
in
fcomps
imul
ret
jecxz
xor
push
mov
mov
leave
xor
enter
push
movsl
negl
sahf
xchg
aam
aaa
adc
mov
sbb
popa
mov
pop
nop
cmp
loope
call
cmp
pop
xorl
push
push
or
and
pop
xchg
scas
sahf
sti
inc
pop
js
push
cmp
xchg
lret
mov
mov
mov
test
mov
jmp
cmc
mov
xor
cmp
hlt
out
jo
imul
push
shlb
scas
xlat
pop
sbb
push
xchg
dec
push
jno
popf
fwait
push
inc
cmp
shrl
dec
and
adc
xchg
push
shl
bound
xor
adcl
inc
add
adc
push
rclb
xchg
jbe
clc
pop
jae
aad
sbb
xchg
dec
inc
mov
pop
lods
xchg
in
mov
add
xchg
fnstenv
sub
lahf
lret
cmc
xchg
push
out
aaa
rcr
xchg
fmul
jp
jo
mov
fcoms
test
les
pop
sub
xor
sahf
aaa
mov
add
and
push
in
insb
jns
push
mov
cmpsb
or
insl
add
lock
stc
adc
cld
pop
mov
cmp
pop
insb
and
and
xor
adcb
leave
pop
es
pop
stos
add
jl
xchg
dec
fdivl
sub
adc
ds
jbe
sahf
sub
dec
or
fucomi
mov
mov
mov
test
xchg
mov
leave
jg
mov
mov
jne
cmp
mov
mov
jns
jle
lahf
xlat
js
jbe
insb
sbb
jmp
leave
xchg
pushf
popa
pop
outsb
loop
and
xor
paddsb
lea
dec
sub
dec
cwtl
sarb
dec
mov
jnp
push
dec
sti
xor
lock
shlb
mov
ret
xchg
pop
inc
loopew
xchg
sti
sub
push
nop
das
mov
cmc
or
and
std
cwtl
sahf
cmc
jg
ret
daa
movsb
adc
sbb
sahf
inc
cmp
or
testl
cmp
pop
sbb
inc
mov
loope
iret
ds
xchg
mov
push
sbbl
mov
inc
and
enter
ret
les
push
pop
pop
shll
push
sub
fcmove
lods
int3
xchg
fstl
jg
dec
mov
add
mov
cmp
in
flds
dec
test
sahf
mov
add
adc
fwait
mov
fwait
cmp
sub
ds
scas
imul
lcall
or
in
leave
xor
into
lcall
sbb
icebp
std
leave
fildl
push
add
test
xchg
add
cli
add
cwtl
push
call
mov
add
dec
cmp
jl
add
xchg
mov
push
or
test
mov
add
je
les
mov
insl
outsb
cs
lret
xchg
popf
fmull
and
sbb
jge
cld
test
dec
sub
gs
daa
lock
in
adc
cmp
cs
scas
arpl
and
outsl
frstor
dec
aam
adc
dec
xchg
jns
cmp
inc
mov
in
inc
mov
and
xchg
mov
xchg
and
jecxz
mov
dec
and
ds
pop
sbb
sub
hlt
sbb
mov
stos
nop
fildl
cmp
movsl
shlw
je
test
fwait
outsl
cltd
clc
add
inc
add
xor
jne
hlt
adc
sbb
adc
in
test
leave
mov
daa
xchg
sbb
jecxz
in
jnp
cs
pushf
jge
out
push
dec
sbb
or
and
insl
pop
xlat
outsb
ret
stos
jecxz
or
dec
mov
lahf
rcll
mov
and
mov
shl
xor
add
cmp
dec
lock
lret
jecxz
and
mov
dec
js,pt
mov
pop
sub
hlt
inc
inc
mov
pop
mov
sarb
ljmp
jno
pop
sbb
pushf
addb
lcall
push
dec
out
pop
mov
push
stc
pusha
shr
scas
xchg
fdivrl
or
push
outsl
dec
sub
jmp
cmpsb
push
adc
shll
cmpsb
push
adc
les
les
push
insb
pop
ret
stos
hlt
fwait
pop
int
add
ret
insb
shll
jle
push
repz
push
filds
dec
mov
inc
test
es
jae
cmc
mov
pop
sbb
mov
jbe
sub
test
repnz
or
push
cld
dec
addr16
out
stos
mov
hlt
jmp
ficoms
mov
pushf
js
imul
add
xor
add
push
adc
out
cmp
mov
cmp
addr16
sti
cmpsb
push
mov
out
popl
test
cmc
loopne
xor
jl
cmp
pop
mov
scas
hlt
jp
call
pop
mov
jge
cmp
ja
xor
cmp
repz
push
outsb
push
cmp
aam
inc
pop
lods
dec
loope
adc
sub
movsl
repz
sub
popa
sbb
test
push
mov
sbb
int
push
repnz
icebp
test
add
push
shll
jecxz
xchg
inc
imul
push
cbtw
jmp
adc
out
and
or
push
or
dec
mov
test
xor
aas
mov
mov
mov
stos
or
cmpsb
or
sub
movsb
cmp
repz
lcall
mov
movsl
or
pop
push
outsb
dec
xlat
xchg
stc
int
rcrl
inc
shll
aad
pop
scas
xchg
stos
pop
push
lahf
leave
add
mov
xor
loopne
lea
adc
stc
cmp
jb
mov
sub
jns
ret
dec
outsl
orb
gs
push
dec
pop
icebp
in
outsb
popa
jb
lahf
mov
push
dec
fs
out
out
xchg
roll
pop
cmp
test
loope
stos
les
mov
stos
xor
fwait
xchg
out
push
mov
lods
add
mov
add
call
js
pop
pushf
sub
mov
mov
add
rorb
movsb
dec
or
orb
aad
dec
ss
cmp
sbb
add
sub
push
mov
movb
push
fstl
mov
push
pop
lcall
fistps
clc
fcomi
repnz
repz
mov
fnstsw
addr16
sbb
pop
test
test
leave
loop
and
scas
subb
call
adc
stc
or
push
mov
add
std
xchg
iret
xor
or
in
sahf
loop
movsb
add
test
shlb
lret
and
adc
or
fbld
enter
hlt
pop
and
mov
lock
stos
xchg
movsb
pop
call
daa
jae
pop
sbb
into
stc
addb
int
jmp
pop
cmp
mov
adc
insl
jmp
int3
cmp
in
out
sti
outsl
xorl
imul
subb
outsl
mov
sarb
jno
fldl
pop
into
fnstenv
jecxz
pusha
daa
into
in
inc
jg
mov
jo
inc
jne
dec
sarb
mul
pop
or
pop
sub
rclb
push
stos
push
insb
out
sbb
dec
mov
xlat
or
pop
mov
jns
repnz
sub
je
rolb
pusha
imul
in
mov
cmpl
push
xchg
push
pop
add
inc
jle
out
cmpxchg
in
pop
inc
in
mov
jns
gs
in
in
fcom
pop
adc
idivl
sub
adc
cmp
rcrl
push
icebp
xchg
sub
sti
dec
aas
jnp
rclb
sbb
testb
jmp
shrl
sub
popa
push
imul
inc
cli
push
in
pop
in
xchg
push
enter
mov
and
cwtl
repnz
jns
sbb
jnp
push
repnz
add
xchg
dec
add
mov
cmc
jecxz
in
push
cmpsl
dec
sbb
jae
orb
sbb
pop
loope
cmp
xchg
dec
mov
pop
jmp
inc
cmp
add
lcall
test
jmp
add
or
mov
jb
cmc
popa
pop
push
or
notb
ret
mov
out
outsb
dec
xor
mov
andl
bound
bound
xchg
call
insb
add
fdivrl
cwtl
xchg
aad
xlat
jns
pop
pop
pop
push
or
data16
inc
cs
dec
and
ret
mov
push
jg
jo
fisttpl
sub
or
mov
lds
rclb
rcll
ret
pop
outsb
out
rcl
pushf
enter
add
adc
mov
punpckldq
je
shl
cmpsb
sahf
or
insb
mov
jmp
jle
imul
iret
jne,pn
movsl
cmpsb
lods
test
fcompl
adc
dec
xor
mov
jecxz
xlat
xchg
test
cmpsb
push
jo
push
pop
xorb
mov
lods
push
xchg
mov
imul
add
loop
loopne
jno
add
mov
add
in
add
pop
or
sets
mov
inc
addr16
jl
aam
stos
int
mov
dec
ret
test
or
jns
adc
add
mov
mov
js
inc
test
jae
loope
xor
sub
xchg
ja
lret
and
ljmp
bnd
xor
inc
cmp
lret
ret
out
sub
ja
in
pop
push
repnz
bound
inc
or
int3
mov
xor
sbb
fistl
incl
icebp
jl
stos
fstl
leave
in
push
daa
aas
cmp
aas
xor
xchg
lahf
dec
jge
jo
lahf
push
jg
mov
cs
pop
push
arpl
scas
inc
pop
mov
movl
test
fabs
pop
pop
or
ficoms
mov
fs
pop
cwtl
fs
jmp
push
ret
jecxz
mov
xchg
mov
mov
xor
int
xor
pop
lods
out
xchg
das
xor
je
mov
js
ficomps
lcall
xlat
sbb
mov
lahf
sti
cltd
fbld
divl
std
std
xorb
loope
xchg
notb
in
inc
inc
mov
sub
dec
js
push
cmp
push
mov
sbbl
lock
addr16
xlat
cmpsb
insl
mov
fbld
out
sti
mov
jge
dec
lret
sbb
insb
pop
loopne
outsl
sahf
xor
fstps
scas
fsub
push
or
negb
outsb
xchg
mov
jbe
mov
add
cmp
arpl
ss
ss
sbb
movsb
jge
mov
inc
lods
aad
loopne
add
incb
mov
mov
dec
jbe
pop
lea
lds
jmp
mov
and
js
pop
rorb
leave
mov
ret
into
mov
lods
fisttpll
add
imul
dec
rcrb
aaa
lcall
adc
mov
ret
or
mov
dec
adc
mov
sub
and
test
mov
cmc
ret
jmp
xchg
sub
cli
xchg
pop
jae
sub
mov
movsb
sbb
popa
pop
lahf
mov
push
cmpsb
xor
shrb
outsb
ljmp
adc
push
ret
jmp
lcall
mov
cmp
sub
sti
cmp
jbe
inc
mov
xor
pop
loope
xchg
inc
lahf
jecxz
js
ficomps
out
push
test
mov
and
in
dec
cmp
sarb
mov
xchg
outsl
out
jne
xchg
sbb
inc
jg
loop
dec
sti
adc
in
ljmp
push
add
inc
jp
add
adc
jb
push
pop
fisubl
pop
pop
xor
std
mov
mov
sub
inc
dec
aas
add
or
adc
xchg
ss
lret
rcll
jl
loopne
dec
rcrb
aad
or
add
jae
mov
inc
or
mov
jg
and
dec
out
push
add
ror
jbe
shrl
movsl
jmp
push
subb
lods
ret
fcomi
mov
out
fsubrs
pop
daa
and
push
aad
hlt
out
andb
daa
add
adc
add
add
add
add
addl
add
xor
add
add
mov
mov
pusha
sbb
add
add
imul
rolb
rolb
add
add
or
add
add
or
adc
pop
cmpsl
pop
in
inc
add
adc
add
ljmp
ja
mov
js
js
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
push
pushl
call
mov
xor
push
push
push
push
pushl
call
mov
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
add
out
add
add
and
gs
and
add
or
adc
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
mov
add
add
add
sbb
sbb
sbb
jecxz
cmp
loop,pn
inc
arpl
push
push
add
add
je
mov
add
mov
fimull
mov
adc
mov
inc
cmc
mov
decb
mov
cs
incl
out
clc
decl
fs
push
adc
jge
out
in
add
sar
push
scas
adc
add
add
add
sar
push
decl
push
push
push
cmp
cmp
add
add
cld
add
inc
mov
cli
add
xor
cmp
inc
add
lret
clc
cmp
jecxz
cmp
adc
adc
add
dec
push
pop
out
adc
sbb
add
add
sbb
cmp
sbb
sbb
sbb
add
add
add
add
imul
loop
dec
outsb
gs
inc
insl
inc
imul
gs
ja
inc
add
js
add
gs
scas
add
add
je
mov
jb
ds
jne
jle
add
add
add
add
add
fiadds
add
add
add
add
outsb
add
mov
mov
cmp
pop
call
data16
loopne
xchg
rolb
xor
jp
cmp
cmpsb
dec
sti
fdivrp
jne
es
ljmp
cmp
push
jg
std
cmp
out
and
mov
fucomip
push
inc
pop
sbb
dec
std
ljmp
ds
movsl
das
and
decb
mov
inc
nop
lahf
psubw
sahf
sti
jnp
sbb
pusha
test
mov
pop
in
dec
in
cmp
ljmp
sti
mov
cmc
lcall
loop
xor
das
push
sub
or
bound
mov
sbb
adc
lahf
add
dec
xchg
sub
jbe
lcall
imul
add
xchg
data16
pop
in
cltd
out
xchg
das
sub
stos
daa
cmp
insl
and
add
xor
mov
nop
or
sbbl
out
lods
push
movsl
sub
add
loope
loopne
std
sarl
xchg
loop
mov
lods
push
inc
xor
imul
inc
sbb
add
dec
xlat
mov
iret
cmc
fdivrl
push
insb
or
mov
in
xor
mov
popa
stc
push
mov
add
adc
sarl
enter
loopne
fistpll
jmp
cmp
cmc
dec
lea
or
mov
xor
dec
fisubrl
call
mov
push
xchg
or
roll
subl
sahf
mov
ljmp
mov
lea
lret
pop
test
fstps
xchg
sbb
jl
or
out
xor
mov
fisttpll
mov
fcomps
pop
and
sahf
insl
add
jae
push
adc
clc
cli
movsl
sahf
jb
outsb
out
sti
xor
js
xchg
xor
mov
loope
cmp
pop
addl
push
daa
xchg
test
lods
xor
dec
loopne
add
xchg
lret
aas
aas
cmp
rorb
popa
aas
dec
push
dec
cmp
fsubl
inc
lahf
sbb
dec
rorb
pop
lcall
jb
cmp
push
repz
inc
push
clc
subb
pop
pop
xchg
int
cmp
adc
jmp
and
in
in
or
sahf
mov
test
aad
mov
call
and
int3
out
jle
adc
pop
adc
test
xchg
sbb
arpl
xor
bound
notl
fwait
mov
mov
sub
lcall
cmp
dec
jno
cmp
test
mov
sub
aaa
cmp
adc
push
jne
adc
les
sbb
in
sti
mov
cs
arpl
sahf
cmp
jl
jmp
or
and
dec
add
pop
xchg
outsb
lock
adcl
inc
pop
lock
pop
mov
fwait
pushf
in
ret
cld
movsl
and
sub
cs
pushf
or
test
leave
jle
or
daa
mov
pop
in
adc
xor
in
loop
xor
inc
mov
test
rcll
mov
adcb
ss
mov
xchg
push
and
mov
add
xchg
stos
fstpt
xchg
aas
stc
sub
pop
call
or
insl
push
xchg
imul
inc
insb
dec
divps
stc
mov
or
popf
cmp
popf
xchg
pop
test
fdiv
push
dec
mov
xchg
push
jae
jmp
xchg
jo
jno
jmp
pop
jne
sbb
stos
pop
pusha
jno
jno
cs
in
add
sbb
sbb
dec
je
xor
int
ljmp
cmp
and
in
test
in
add
or
inc
xor
fsubrs
outsb
sbb
fcomps
push
fmuls
or
daa
mov
inc
test
adc
sbb
popf
cmpsb
dec
test
mov
test
in
cwtl
sub
shlb
push
xchg
insb
jae
repz
jg
and
call
imul
fiadds
jnp
test
mov
push
andb
inc
push
cmpsl
pop
pop
pop
pop
or
out
out
pushf
xorl
cmp
sub
mov
inc
insb
frndint
mov
jbe
aas
out
adc
insb
push
js
jmp
movsb
stc
aaa
sub
aam
xlat
les
cltd
inc
jne
clc
xor
ss
xchg
add
mov
xchg
cmp
xchg
rcrb
mov
out
sub
and
mov
push
test
push
cld
pusha
cmp
loope
loop
inc
addr16
out
test
xchg
outsl
shr
and
lret
mov
scas
push
outsb
cmp
xchg
sbb
lahf
add
iret
pusha
popa
subb
fnstenv
mov
call
mov
out
mov
adc
mov
scas
push
scas
cmp
divps
idivb
or
push
jbe
jl
mov
or
push
add
mov
mov
mov
mov
xchg
add
xor
adc
dec
jb
fistps
sbb
sti
shlb
sbb
je
lock
aas
arpl
stc
fs
stc
popf
adc
test
mov
inc
insl
mov
scas
sub
cli
add
push
pushf
mov
pop
leave
outsl
fidivrl
mov
push
or
inc
mov
aaa
jg
pop
imul
lea
movl
lock
push
mov
pop
test
sub
fiadds
in
or
add
ljmp
inc
mov
dec
pop
lret
rclb
add
outsb
xchg
mov
mov
pop
jnp
mov
cmp
push
push
pop
rcrl
xor
push
stos
mov
cmpsb
movsb
jp
andl
pop
mov
xchg
cmpsl
shll
jmp
into
out
nop
sub
subb
inc
sub
scas
sub
daa
adc
sub
out
cmp
jo
push
dec
movsl
fildl
ret
jne
leave
hlt
add
sahf
push
push
mov
sbb
sub
mov
jnp
add
push
out
ljmp
pop
arpl
aam
lret
loop
or
pop
in
cmc
xchg
and
ja
inc
loopne
inc
sub
fldt
mov
and
or
aam
ffree
scas
mov
push
mov
push
imul
sub
add
cmc
xchg
sbb
xchg
rclb
jle
in
push
and
or
adc
filds
in
std
cltd
mov
bound
cmp
lock
mov
jp
ficoms
lock
cmpsb
mov
adc
xchg
jb
jo
mov
fs
sbb
jmp
sbb
sbb
or
ret
insl
jne
fwait
int
pop
and
xchg
inc
mov
lock
jecxz
mov
dec
pop
xchg
int3
adc
enter
cmp
or
lds
ja
mov
push
mov
adc
jne
xchg
inc
cmpsb
or
lahf
push
inc
stos
idivl
ljmp
fists
fwait
cltd
sbb
cmp
adcl
xor
push
dec
hlt
mov
cld
pop
into
mov
je
gs
add
das
in
nop
pop
jo
jecxz
pop
adc
pusha
mov
and
xor
add
inc
push
sahf
pop
and
scas
pop
hlt
xchg
movsb
cmpsl
in
push
and
outsl
shlb
loope
call
imul
pop
xchg
or
inc
push
xchg
lods
hlt
jg
call
or
out
aad
push
xchg
test
cmp
sub
adc
bound
fldl
jge
pushf
xchg
incb
adcl
cmp
nop
aaa
out
push
mov
jecxz
push
cwtl
add
aas
mov
mov
mov
and
xchg
orl
int3
mov
call
aad
push
pop
das
mov
jecxz
pop
in
and
push
clc
icebp
loope
add
les
jo
ss
aad
inc
lods
das
out
pop
mov
xchg
popf
and
jl
mov
loopne
inc
mov
cmp
leave
dec
jns
and
aad
popa
sahf
sub
ss
jp
add
scas
push
int3
xor
mov
pop
ret
rolb
outsb
ret
push
fdivrl
pop
mov
and
adc
and
fcoms
xor
sbb
ret
mov
aad
jae
leave
lea
ret
sti
repnz
sarb
or
in
add
xor
push
fs
inc
pop
adc
adc
sub
jbe
mov
pop
mov
or
pop
inc
jne
and
jecxz
aaa
cmp
pop
jp
or
mov
daa
and
je
xchg
loope
lcall
sub
pop
roll
and
div
test
sub
cld
negb
fsts
andb
mov
jae
sti
inc
pop
scas
stc
xor
xor
pop
xchg
sbb
sbb
jbe
inc
loopne
and
fstpl
insb
inc
xchg
mov
shl
mov
dec
test
xchg
xchg
test
cmpsb
mov
test
nop
push
mov
sub
imul
dec
jnp
sbb
aas
bound
jne
jno
fs
push
out
push
pusha
mov
orl
push
out
fisubl
mov
adc
lcall
movsl
jnp
es
cmpsb
cmp
repnz
ja
into
cli
xor
push
adc
loope
out
call
dec
cmp
stos
scas
das
gs
fnstenv
ret
pop
inc
enter
dec
xor
cmpsb
adc
sub
test
out
enter
xlat
push
lea
jae
mov
bound
cmp
pop
push
movsb
mov
out
adc
cmp
into
sub
leave
inc
cmpb
dec
adc
mov
mov
cwtl
sub
mov
mov
insb
outsl
out
and
int
pop
mov
jge
clc
repz
push
cmp
ret
arpl
lods
inc
repz
push
out
adc
xchg
aas
cmpsb
push
shll
adc
ja
dec
pop
sbb
jle
test
mov
mov
sahf
out
xchg
ror
add
jbe
xor
hlt
sti
push
sbb
sahf
roll
xor
push
stc
jo
rorl
std
and
lret
imul
sbb
and
dec
mov
movsb
std
sahf
imul
inc
ljmp
sahf
outsb
jl
inc
ss
cld
loop
sbb
aad
push
push
iret
rcr
mov
pop
cmp
inc
jecxz
pushf
test
pop
in
jmp
lret
mov
cltd
inc
push
repnz
cmp
pop
lods
ds
and
pop
pop
clc
scas
outsb
pusha
in
pushl
adc
loope
inc
ljmp
icebp
inc
jmp
insb
xchg
mov
jbe
mov
sbb
adc
movb
and
inc
daa
jg
cmp
das
fisttpll
sbb
call
mov
aam
andb
dec
push
lret
shll
je
sarl
sti
cmpl
pop
adc
xor
test
scas
mov
out
sub
cmp
jno
xor
mov
xchg
leave
fnsave
pusha
dec
jle
int
xor
cmp
xchg
mov
test
xchg
xchg
xchg
sbb
enter
xor
adc
inc
sbb
mov
out
inc
or
and
fsubl
xlat
xchg
pop
call
sub
rorl
pop
repz
loop
jge
pop
stos
out
daa
in
movsl
icebp
dec
test
arpl
shll
lahf
int3
lods
xchg
or
and
inc
dec
cld
int3
adc
movsl
xchg
insb
push
xor
imul
in
fisubrs
popf
sub
jns
xlat
insl
leave
cmpsb
or
test
sar
adc
aas
xor
inc
fimull
sbb
out
inc
inc
stos
mov
rcrb
outsl
dec
and
sbb
pop
inc
pop
int
stc
mov
loop
arpl
mov
lret
dec
jge
jo
je
add
add
ljmp
pop
and
and
sub
xchg
sbb
pop
xor
mulb
mov
fwait
repz
test
out
ja
clc
jne
mov
dec
adc
pop
gs
and
and
bound
pop
cwtl
ds
xchg
xlat
xchg
add
push
in
lods
jp
imul
pop
cmc
pop
lock
push
or
sub
fcoml
mov
jle
shlb
outsb
or
dec
cmpsl
sub
add
mov
dec
pop
xchg
dec
jmp
and
imul
andl
mov
je
sbb
push
rcll
inc
mov
popa
stc
add
dec
pusha
mov
insb
push
push
loope
cmp
push
lods
mov
icebp
sbb
or
jmp
cli
je
fnstcw
jle
scas
mov
mov
pop
ficomps
cmp
fdivl
inc
and
outsl
sub
pop
add
and
mov
adc
inc
js
and
mov
ja
scas
sbb
add
dec
lds
adc
xor
mov
or
mov
add
enter
xlat
pusha
nop
xchg
mov
adc
cmp
call
gs
into
popa
loop
ror
adc
xchg
sub
push
inc
mov
sub
fiadds
push
out
inc
xchg
dec
movsl
pop
or
ret
dec
and
add
lds
cmp
stos
or
or
iret
xor
int
and
xchg
xor
cmpsl
loopne
lret
fdivl
inc
fisttps
or
arpl
jmp
mov
fdivl
push
or
and
pop
pop
add
sahf
cmpxchg
jno
jbe
stos
lret
jns
ss
aad
jno
adc
int3
xchg
cmp
adc
rclb
pop
push
rcl
jl
cmp
xor
and
sub
push
lcall
adc
pusha
or
repz
fsub
xchg
cmp
ret
adc
rcll
push
std
loopne
jo
mov
inc
sub
pop
test
int3
mov
fnstsw
sahf
cmp
xor
mov
pop
fisttps
cmp
subl
cltd
in
fnstsw
fmuls
mov
loope
rcll
xorb
outsb
mov
push
sub
and
or
inc
adc
and
das
adc
popl
imull
cld
add
sub
ret
cwtl
cmc
adcl
dec
in
lahf
inc
ljmp
int3
push
test
cmp
sub
xorb
sub
jle
cmp
stos
cmpsl
dec
mov
pop
cltd
sub
lods
fstl
pop
bndldx
pop
dec
jbe
lock
mov
push
in
into
aas
jns
xor
xorl
iret
mov
stc
inc
adc
cmp
xchg
insb
out
xor
inc
sbb
insb
stos
xor
sbb
aam
imul
push
int3
insb
movsl
loope
mov
fisubrl
scas
inc
dec
not
out
inc
int
sbb
idivb
in
sbb
movsl
pop
icebp
push
pusha
cmc
aad
je
sub
mov
push
insb
fcmovnu
sbb
jle
adc
stc
lods
test
jle
mov
xchg
ret
fistpl
and
sub
outsb
add
sub
fdivrs
dec
jmp
jb
ja
in
mov
mov
or
sub
std
jmp
jg
dec
lock
sti
xchg
loope
sub
jbe
fmul
into
sub
add
js
stc
inc
pop
adc
mov
lods
lods
dec
jbe
sbb
imul
lock
daa
mull
sbb
lock
xor
scas
push
cmpsl
xlat
add
push
test
outsb
mov
inc
and
mov
stos
pop
mov
bnd
mov
fs
shll
imul
ficomps
nop
inc
popf
mov
imulb
cmp
inc
inc
ja
jecxz
das
scas
push
add
jp
and
jns
insb
insl
add
xor
imull
ds
movsl
shlb
mov
bound
push
xor
cmp
in
insl
mov
mov
addb
sub
iret
xor
jge
inc
mov
rcrb
jg,pt
int3
cmp
sbb
ss
cmc
jge
or
add
sbb
or
lock
or
lock
dec
inc
pop
pop
or
lahf
xor
inc
test
ror
cmp
lods
xor
pop
and
mov
pushf
out
lods
fs
out
lret
mov
or
ljmp
repnz
das
imull
cmpsb
mov
add
pusha
adc
ja
jnp
mov
mov
cmc
xor
mov
mov
lock
adc
imul
test
in
imulb
fstl
mov
bnd
mov
daa
lret
mov
jne
fninit
sarb
and
cmpsl
mov
jle
adc
aam
ja
aam
shll
in
push
ficomps
out
and
mov
xchg
loop
jae
add
jp
call
cmp
ret
ss
test
jl
add
repnz
call
lods
mov
inc
jbe
bound
std
ret
cli
inc
int3
cmc
add
sbb
mov
roll
xchg
jle
dec
cld
mov
xor
imul
das
fnop
inc
dec
jge
cmp
jecxz
mov
push
adc
or
sub
xor
jbe
jl
push
push
int
std
clc
pop
push
or
daa
test
pop
inc
xchg
and
inc
mov
or
scas
jg
and
in
scas
xor
pushf
adc
pusha
hlt
dec
imul
cmpsl
mov
jmp
dec
and
mov
sub
xor
ss
mov
mov
daa
lods
cmp
mov
sti
int3
ficoms
mov
enter
movl
fidivl
mov
jl
mov
pop
push
jp
pop
repnz
lahf
jp
aam
stc
pop
into
mov
push
xchg
cmpsb
in
jmp
js
inc
cs
in
out
repnz
sbb
in
jae
pop
popf
add
add
add
scas
add
loop
add
add
add
add
adc
add
add
add
add
add
fiadds
add
add
add
add
outsb
add
add
add
add
add
mov
add
incb
add
add
jns
mov
incl
cmpl
mov
je
cmp
je
push
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
ret
add
add
add
xorb
add
add
add
add
loop
add
add
adc
mov
add
je
add
and
add
add
outsl
xor
sbb
sbb
sbb
cmp
fadd
sbb
fbld
arpl
js
add
imul
outsb
add
push
push
aaa
add
xchg
fidivrl
or
add
orl
add
test
inc
test
call
push
add
ret
add
decl
repz
xor
cmp
incl
add
add
add
adc
leave
adc
incl
add
sti
add
mov
add
xor
add
mov
push
push
adc
loopne
jmp
inc
dec
or
and
push
adc
lock
push
add
call
adc
call
adc
cmp
inc
add
incl
lea
inc
add
add
add
testb
add
sbb
sbb
sbb
sbb
add
push
add
je
jae
xchg
imul
inc
jae
imul
inc
insl
popa
outsl
inc
popa
inc
outsl
popa
jo
insb
outsl
add
add
inc
gs
add
add
dec
jbe
fs
aam
insb
inc
insb
push
push
add
add
add
shlb
inc
xchg
repnz
add
das
xlat
mov
cltd
bound
add
dec
and
inc
pop
jno
pop
push
cli
inc
xchg
lods
sbb
inc
enter
push
cmc
ss
dec
aas
adc
outsb
bound
xchg
lea
ret
sub
mov
and
dec
mov
mov
in
in
mov
jmp
repnz
out
in
pop
mov
adc
push
insl
mov
incb
test
xor
push
rcl
adc
jae
testb
sbb
ret
es
push
add
fadd
adc
repnz
add
aam
pop
dec
push
popa
sbb
daa
push
mov
dec
xor
ficoml
stos
jge
pop
shl
mov
cmp
and
and
fiaddl
mov
punpckhbw
cwtl
pop
dec
movsb
adc
pop
ret
inc
push
adc
xchg
sub
divb
dec
or
gs
in
lea
rorl
mov
jns
out
and
adc
sbb
mov
cmp
les
jle
xor
sbb
mov
inc
mov
aas
lock
out
pop
sahf
sbb
lahf
iret
stos
and
cmp
sub
adc
push
mov
pop
dec
cmp
mov
in
int3
aam
inc
or
stos
test
notb
push
icebp
imul
cmp
sub
in
jbe
xor
lret
hlt
int3
xor
lods
pop
sub
adc
cwtl
mov
je
adc
es
jl
daa
call
test
incl
loopne
jnp
sub
dec
xchg
add
mov
repnz
or
pop
stos
test
into
lds
mov
pop
xor
mov
icebp
not
adc
stos
pusha
adc
sbb
and
and
or
jo
ljmp
jl
push
mov
xchg
inc
adc
aam
mov
repnz
xchg
mov
push
add
das
dec
in
xchg
and
cmp
sub
add
or
ret
cmp
lahf
ss
cmp
lea
rorb
cmp
sub
jbe
les
inc
mov
fdivr
je
enter
sub
cmc
cwtl
lret
outsl
push
pop
pop
push
lock
inc
mov
sub
push
popf
cmp
mov
and
insb
jbe
push
pusha
test
pusha
inc
mov
leave
pop
cmpsl
pop
push
insl
jo
stc
ss
iret
ss
or
dec
fcmovnbe
nop
cmc
nop
out
outsl
arpl
push
push
je
sbbl
add
lcall
les
adc
xchg
std
fsubl
mov
mov
cmpsl
lods
sbb
sub
jne
loopne
add
jb
xlat
add
sbb
faddl
adc
cmpsl
jns
inc
out
xchg
cmpsl
xchg
push
dec
mov
fnstsw
pop
cmpsl
pop
rclb
int3
scas
repz
daa
out
dec
adc
mov
and
and
sbb
fists
mov
shrb
mov
adc
mov
xchg
mov
inc
in
pop
xor
das
icebp
int3
in
pop
xchg
sbb
push
mov
in
push
add
xchg
push
jb
pop
push
dec
and
fsub
fstl
xor
pop
clc
cli
aas
inc
dec
arpl
cmpsl
inc
shll
addr16
test
inc
dec
add
dec
push
test
sbb
aad
jns
xchg
sbb
jbe
mov
xchg
inc
hlt
mov
ret
inc
icebp
sbb
adcl
mov
inc
mov
mov
repnz
dec
xor
movsb
jge
loope,pt
mov
xchg
mov
cltd
sti
iret
mov
outsl
hlt
ljmp
sub
mov
pop
xorb
adc
pop
pop
je
fcmovne
pusha
dec
xchg
out
xor
sbbl
mov
mov
icebp
sub
mov
dec
xchg
neg
xchg
xchg
xor
loopne
popa
sub
test
add
dec
ja
icebp
cwtl
xor
pop
stos
add
dec
and
popa
jecxz
add
aad
jle
pop
mov
xchg
mov
int3
fldl
cmp
xchg
das
cld
inc
adc
adc
sar
int3
or
insl
sahf
scas
int
pop
lcall
sub
xor
popa
shl
fsubrs
sti
sub
xchg
call
xchg
jne
les
test
xchg
add
movsb
mov
stos
shll
mov
mov
aad
sub
inc
jo
movsb
mov
jne
pop
shr
sub
into
cmpsb
fldenv
aam
shlb
mov
push
xchg
jb
popa
scas
mov
mov
cwtl
cmp
sub
jno
out
mov
test
mov
aas
sbb
pop
scas
push
pop
in
push
std
int3
test
popf
scas
fbstp
pop
leave
add
in
stc
imul
sub
xor
and
inc
push
ret
xor
mov
cwtl
inc
push
dec
leave
pop
or
mov
pop
xchg
sub
in
aad
out
ljmp
mov
test
loop
or
mov
das
mov
xor
sar
flds
repz
out
jb
adc
dec
lret
mov
in
jne
xor
adc
insb
in
aam
sub
or
xor
subb
divl
dec
ret
jmp
jecxz
adc
jge
inc
mov
jae
aam
and
inc
loope
arpl
daa
push
mov
push
aas
xchg
mov
and
loope
mov
jae
pop
rcll
jno
cmp
and
sbb
fsubl
xor
movsl
mov
stos
pop
aam
jbe
lcall
push
cmp
cwtl
adc
xchg
daa
xchg
or
adc
test
push
sbb
rcrb
dec
fcmove
imul
jo
mov
shlb
xor
mov
cmc
addl
leave
jmp
jp
fisubl
dec
mov
cmp
cmp
mov
movsb
dec
mov
jb
pop
movsl
scas
dec
sbb
mov
lret
and
or
mov
nop
jg
push
jbe
subb
dec
push
fcomip
add
test
cmpb
sbb
sbb
ret
nop
and
repz
inc
mov
fdivrs
mov
aaa
xchg
iret
xchg
in
ffreep
or
negl
jnp
and
faddp
cmp
and
sub
outsl
shll
push
mov
and
jno
aaa
mov
xchg
rol
ret
mov
jmp
int3
mov
je
jbe
jge
add
aaa
sub
jl
mov
jp
fs
push
in
sahf
xor
lret
jl
sbb
inc
data16
push
cltd
ss
cli
push
or
jnp
xlat
inc
mov
jl
inc
mov
and
sbb
jg
push
leave
jmp
aad
leave
ds
lret
repnz
shlb
scas
test
cs
xor
push
into
add
adc
sahf
jp
jle
inc
xchg
sbb
testb
mov
negb
or
push
push
mov
xlat
stc
adc
inc
jne
mov
repz
adc
sahf
jbe
adcb
xchg
or
or
or
cmpsb
das
popf
and
call
xchg
sbb
inc
lret
inc
gs
movsl
stc
adc
orl
pop
mov
mov
jp
push
hlt
mov
das
xlat
push
mov
dec
and
leave
test
iret
cmp
dec
adc
push
push
and
xchg
jbe
pop
mov
sahf
insl
xchg
outsl
xchg
push
dec
shll
mov
mov
fstl
into
ljmp
dec
jle
es
sti
fisubrs
out
mov
in
outsl
or
pop
sub
mov
pop
mov
mov
cmp
in
mov
shll
mov
fiadds
das
outsb
adc
inc
ljmp
aaa
bound
int
or
adcl
adc
pop
repnz
sub
pop
mov
gs
xchg
push
idivb
or
adc
push
enterw
mov
jae
or
cmpl
out
mov
cld
mov
lods
pop
clc
add
push
fldenv
and
push
or
mov
bound
sub
mov
or
mov
in
clc
adc
fsubr
scas
pop
cmpsb
adc
lahf
mov
or
mov
inc
pop
cli
pop
ljmp
arpl
push
inc
mov
outsl
mov
xlat
mov
mov
int
push
jnp
add
or
cmc
push
ret
std
mov
in
pop
int
mull
jbe
sbb
outsb
xchg
shrb
les
imul
inc
filds
xchg
ret
ljmp
inc
mov
enter
fwait
pop
fwait
cwtl
xchg
mov
lcall
test
arpl
inc
jg
jp
lds
jp
aaa
stos
mov
sbb
test
test
lea
insl
lods
jge
dec
jb
rcrl
pop
sub
and
aaa
mov
and
dec
imul
mov
cmpsb
ret
xor
fistl
pop
fimuls
stos
loop
hlt
sahf
add
repnz
or
movsl
sbbl
and
mov
rolb
push
xchg
add
adc
rorl
pop
sbb
iret
and
jo
push
inc
stc
movsb
jbe
mov
sahf
pusha
gs
add
pop
adc
sti
es
jo
dec
test
mov
test
fstpt
popa
enter
loop
sbb
insb
cmp
push
add
sahf
add
dec
sbb
das
das
scas
cld
push
sbb
ljmp
inc
pop
aas
out
push
or
ja
sub
inc
jmp
dec
faddl
clc
sub
rorl
cmp
cmpsb
mov
xor
loop
pop
pushf
loope
jnp
jnp
out
out
rcll
jge
mov
or
inc
test
xchg
ja
mov
imul
lds
inc
ja
or
xchg
cld
and
cld
pusha
mov
mov
xlat
cmp
dec
jno
sub
dec
dec
jne
je
je
insb
push
fldenv
jl
cmpsb
pop
push
mov
push
outsb
adc
fcoms
iret
mov
xchg
inc
insb
arpl
pop
cld
or
mov
push
movsb
inc
gs
lahf
xor
mov
in
lea
pop
pop
sub
add
xchg
or
enter
cmp
cmp
inc
gs
pushf
loop
aas
inc
lock
lret
lds
jge
dec
scas
pushf
test
insl
inc
lcall
mov
or
out
mov
add
add
add
jo
popa
movsl
push
frstor
pop
inc
subl
popa
in
mov
and
ret
add
mov
xchg
sub
sub
push
movntq
adc
aam
in
mov
xchg
fidivl
cwtl
xchg
fwait
or
sub
xorl
jne
popa
lods
cltd
jo
addr16
int
dec
stc
dec
push
xlat
or
adc
adc
lret
arpl
test
adc
imul
jnp
mov
hlt
mov
adc
push
pop
and
or
ficoml
jae
mov
sbb
sarb
adc
pop
sarb
cli
sub
and
mov
mov
cltd
jne
push
mov
adc
cmp
adcb
aad
cmp
sub
sahf
mov
stos
sub
mov
divb
dec
aam
ficompl
dec
fs
push
jg
aas
gs
jl
popf
mov
stc
out
out
push
dec
xlat
and
mov
pop
jmp
movsl
hlt
mov
mov
push
popf
inc
jo
mov
jnp
xchg
outsl
cmp
pop
loop
xchg
inc
and
xchg
popa
data16
popa
inc
jns
mov
inc
and
mov
repz
push
xchg
mul
inc
push
dec
repnz
fldenv
jmp
pop
inc
jmp
pop
fs
cmpl
and
lret
test
loope
xchg
adc
iret
ja
sub
inc
inc
pop
xor
lock
imull
loop
addl
fs
in
cmpsl
mov
and
divb
test
jns
aam
push
loop
jne
jne
cmp
or
out
pop
nop
iret
daa
mov
xchg
and
inc
movl
or
out
lret
sti
xchg
rcl
inc
xchg
sbb
movsl
aas
into
jo
insl
adc
adc
sub
in
mov
jbe
push
or
dec
pop
fwait
inc
lret
mov
inc
iret
aas
adc
xchg
xor
push
ss
and
push
insl
mov
lahf
imul
je
cmp
idiv
mov
lock
arpl
es
xchg
add
cli
jne
nopl
test
xchg
mov
ret
add
std
xorl
or
or
jecxz
cmpsb
aad
jae
int
mov
cli
mov
cld
inc
cmp
stos
or
jb
mov
mov
pop
sbb
test
sub
pop
dec
cmc
pushf
mov
dec
nop
std
rorl
fucomi
ds
imul
pop
aas
xchg
std
outsb
jmp
sahf
sub
call
inc
fnsave
ss
inc
fdivrs
push
adc
mov
fstpl
xchg
shrb
repz
loope
jb
lds
in
and
nop
lret
into
mul
mov
outsb
push
and
sti
popf
sub
out
das
xlat
push
imul
ja
mov
push
leave
data16
xlat
leave
or
sbb
fwait
pop
aaa
into
adcl
push
jle
pushf
cmp
aas
out
std
jae
dec
sub
clc
popf
mov
aaa
jl
xor
cmpsb
dec
jb
mov
cmp
iret
loope
nop
lret
push
psrad
outsl
int
fs
loope
ljmp
fsubrl
mov
and
sub
jl
sar
lds
in
int
adc
test
andl
cmpsl
dec
mov
xor
nop
jecxz
bnd
js
mov
movsl
adc
mov
sbb
jae
cmp
test
cmc
adc
lahf
xchg
push
pop
mov
leave
mov
loope
cmp
push
mov
sbb
dec
fs
or
inc
bound
sbb
mov
iret
hlt
and
pop
call
push
lods
in
rcrb
in
inc
roll
and
or
pop
mov
xchg
int
xchg
sbb
fwait
xor
pop
cmpsl
or
xchg
add
lds
nop
out
lock
insl
sub
add
cwtl
jo
into
out
insl
pop
xchg
enter
nop
sbb
dec
mov
ss
addr16
sub
sar
mov
cwtl
inc
or
mov
mov
lcall
pop
jge
hlt
cmc
sahf
enter
and
push
mov
and
scas
in
inc
out
jmp
call
loopne
movsb
imul
mov
mov
push
insl
aad
or
or
shrl
and
mov
jne
repz
sbb
cmpsl
dec
and
lds
xchg
dec
add
cs
jne
adc
fmuls
xorb
lock
mov
sub
dec
jb
dec
ret
adc
pop
ja
cltd
mov
sbb
imul
call
imul
xor
mov
push
sbb
imul
mov
sahf
inc
rolb
xchg
dec
push
ret
or
jmp
and
shrb
jae
test
dec
subl
sub
push
xchg
push
test
das
lea
sar
mov
push
add
adcl
sysret
je
dec
sub
mov
sarb
and
iret
pop
dec
sahf
lds
mov
fcoms
outsb
inc
dec
nop
xchg
arpl
mov
xchg
push
and
dec
cmp
mov
outsb
jbe
lcall
push
int
stos
cwtl
pop
mov
push
fmull
pushf
repz
xor
sub
dec
dec
xchg
mov
gs
adc
int3
mov
int
dec
or
orb
mov
stos
insb
cmp
and
sub
mov
lahf
dec
ret
mov
clc
lret
push
pop
sti
int
mov
inc
sub
je
xor
arpl
push
adcb
out
std
stos
int
push
adcl
insl
sbb
in
aaa
or
adc
ficoml
cli
cmp
cmp
popa
cmpl
jge
js
jmp
dec
mov
cmp
lret
jmp
out
sbb
dec
jb
dec
cmc
or
pop
push
dec
stos
dec
push
push
fs
pop
push
mov
xchg
ret
movsb
leave
jp
push
ss
mov
fdivs
push
and
cmp
push
call
daa
xchg
out
cmp
incl
cmp
mov
sub
cltd
and
push
cld
cmp
dec
push
call
test
lea
jg
mov
dec
cwtl
mov
mov
push
or
mov
mov
pop
rorb
cmpsl
ss
hlt
or
imul
pop
into
mov
inc
es
ret
lock
mov
aaa
dec
lret
xor
and
lods
inc
mov
jbe
xor
arpl
add
push
mov
loope
rcrb
stos
xor
push
push
xchg
pusha
mov
dec
stc
mov
ss
rorb
sub
lahf
testb
sub
push
insl
cld
push
pop
push
xor
cld
fwait
cmc
push
daa
in
inc
add
xorb
xor
out
xchg
add
mov
push
jbe
sub
es
sahf
dec
insb
arpl
mov
leave
cmp
xchg
iret
in
jecxz
shrl
cmp
push
pop
xchg
int
xchg
mov
mov
jb
mov
push
aas
fiadds
call
cmpsb
cmpsl
lock
adc
jecxz
jg
dec
pop
xor
cmc
sub
addr16
cmp
jbe
add
mov
nop
mov
rorb
fs
cmp
and
inc
adc
lret
and
cmp
push
pusha
xor
sbb
subl
cwtl
jecxz
rorb
mov
inc
adc
sti
cmp
cmp
jo
lock
xorb
cltd
mov
cmp
shr
adc
adcb
push
push
push
xor
push
arpl
outsl
rcr
cld
mov
imul
sbb
cmp
lea
mov
add
add
add
xor
mov
add
and
add
add
xchg
js
add
add
test
add
add
fadds
add
repnz
add
add
add
add
add
add
add
add
add
add
ljmp
ja
jmp
incl
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
call
call
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
push
call
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
nop
add
add
add
in
push
and
push
add
add
add
add
add
adc
inc
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
add
imul
add
mov
mov
and
sti
add
jecxz
sbb
adc
add
and
xchg
fcoms
mov
push
or
incl
clc
mov
mov
pusha
pop
add
mov
add
cld
test
popa
insb
add
mov
add
push
push
add
shlb
incl
das
incl
add
add
adc
add
loopne
add
xor
jmp
push
push
push
adc
or
fwait
adc
incl
incl
push
push
cld
pop
xor
push
push
clc
test
cmp
add
add
lret
movb
jo
add
hlt
add
add
add
add
add
add
mov
add
add
add
add
inc
je
inc
shrl
inc
inc
outsl
lds
gs
insb
mov
outsl
outsb
outsb
je
dec
jns
mov
gs
inc
mov
push
gs
movsb
push
inc
insl
insb
xor
insb
dec
outsl
jae
push
jne
outsb
jbe
je,pn
je
je
insb
add
add
sub
add
add
add
add
mov
add
add
or
add
add
add
shll
or
jb
insb
jle
sbb
ret
fsubs
and
push
add
rcl
jo
mov
pop
cmp
fistpl
shll
insb
push
cmpsl
or
pop
sbb
mov
pop
dec
inc
repnz
mov
mov
inc
mov
cmc
fs
cld
imul
cmpsb
mov
lret
iret
in
bound
mov
adcb
mov
xchg
sub
or
ds
popa
mov
xchg
add
popa
mov
ja
rorb
sbb
and
aas
shl
pop
mov
inc
xchg
mov
cwtl
ds
aaa
cli
xchg
push
cmpb
push
sbb
and
movsb
out
adc
repz
shrb
dec
push
addl
lods
xor
and
cmp
or
out
sahf
fs
out
inc
sub
lock
ja
movsb
push
scas
cmp
dec
mov
mov
inc
jnp
sub
mov
xor
xchg
das
jns
out
mov
sti
bnd
push
ds
inc
stos
mov
addr16
add
mov
xor
sbb
xlat
mov
mov
push
or
aam
lret
lret
in
mov
dec
loope
out
xchg
jmp
xor
inc
or
mov
pop
mov
call
imul
in
xchg
ds
fs
dec
push
cmp
leave
aad
xor
xchg
xor
cmp
and
test
mov
mov
out
daa
in
inc
sti
repnz
mov
imul
mov
punpckhbw
mov
cli
pop
xchg
sbb
mov
int3
bound
fldenv
jl
iret
or
add
sahf
lea
test
je
mov
push
sub
popf
or
pop
aas
dec
mov
insl
jge
mov
loope
jns
sti
sub
das
mov
xchg
daa
add
xor
test
fcoml
add
mov
clc
je
xchg
or
addl
lret
test
mov
out
loop
mov
mov
andl
or
xor
hlt
mov
inc
inc
jae
popf
scas
shlb
adc
push
sbb
movsb
insb
inc
lods
inc
loop
stos
mov
movsl
sub
inc
sbb
jge
sub
stc
test
lock
mov
in
add
call
lock
sub
fcoml
rorb
loop
jbe
mov
repz
push
movsb
int
mov
and
mov
mov
inc
bound
in
xchg
addl
sbb
cli
int3
clc
loop
lods
push
mov
ds
mull
and
icebp
int3
imul
and
add
test
mov
sbb
out
dec
jecxz
cmp
pop
cltd
rorb
sub
cmp
clc
cmp
mov
sbbb
jbe
sbb
xchg
enter
rcrl
jmp
pusha
test
inc
push
mov
push
cmc
pop
stos
out
add
test
and
enter
fstpt
shlb
stos
stos
sub
mov
fcoml
pop
xor
addr16
add
sub
jg
les
or
lock
in
push
sti
adc
int
push
in
cmp
cmp
div
mov
push
lahf
add
adc
cmc
and
leave
sbb
jle
fistps
cmp
dec
ja
dec
inc
int3
cmp
repnz
sbb
addr16
adc
daa
das
mov
mulb
jo
pop
push
shlb
inc
icebp
lods
push
fistl
hlt
add
sub
jp
lds
add
mov
push
mov
test
sbb
int
ja
imul
adc
rol
cmc
out
jb
rcl
lahf
xor
arpl
fisttpl
push
test
mov
mov
fs
sub
jl
sub
pushf
dec
add
sti
jbe
jmp
xchg
cli
xchg
push
aaa
jecxz
fcomi
and
add
int
fidivrl
repz
add
and
cmp
pop
scas
movsb
sub
or
mov
mov
and
pop
jge
jp
cwtl
add
add
test
rorb
rol
lret
fcoml
imul
xor
addb
mov
xor
sub
mov
add
lock
xchg
gs
jae
adc
cmpsb
adc
shlb
add
and
mov
ret
inc
xchg
xchg
shl
mov
jnp
xchg
ret
cmpsl
test
in
sbb
lea
mov
mov
xor
mov
jl
xchg
movsb
scas
fwait
pop
sbb
xor
bound
or
cmc
mov
ja
mov
xor
mov
ljmp
jno
stos
cltd
xchg
xchg
push
mov
mov
pop
or
out
sub
xor
ret
dec
shl
jne
sarb
pop
lcall
mov
xor
adc
cltd
andl
pop
push
adc
outsb
xchg
daa
jae
dec
leave
mov
ljmp
fs
faddp
sbb
cmp
enter
xor
mov
pop
sbb
cmp
pushf
sarb
xor
jmp
mov
dec
jnp
sbb
cmc
les
stc
fisttpll
lea
mov
leave
push
daa
int
mov
jne
aas
adc
out
rorb
in
aas
into
lcall
ja
xor
movsb
mov
dec
aam
or
pop
dec
jb
js
imulb
add
mov
scas
int
add
outsb
adc
pop
nop
andl
subl
enter
testl
jl
mov
gs
cltd
cmc
sbb
fs
lret
adc
cmp
cmp
add
outsl
push
subb
sub
mov
cmp
ror
scas
loop
cs
push
popl
mov
insb
imul
ror
push
add
lods
pop
adc
and
out
lea
cmp
mov
pop
loop
cmpsb
jmp
sahf
mov
mov
imul
mov
addl
cwtl
push
int3
mov
mov
dec
pop
imul
js
jp
push
or
sbb
jp
mov
test
cs
mov
stos
fistpll
sbb
push
pusha
jne
inc
pop
stc
imul
pop
dec
add
ljmp
mov
scas
sahf
es
cld
rcrb
jns
sarb
fisubl
sbbl
pusha
or
fisubrl
inc
lahf
and
jb
mov
int
int3
adc
xchg
lcall
rorl
cmp
and
pop
cli
pop
test
jge
jg
inc
or
mov
mov
jnp
sahf
insb
sub
in
mov
cmp
data16
iret
insl
aas
push
sbb
por
mov
in
cmc
adc
xor
push
je
popf
stos
outsl
in
jns
mov
les
into
jecxz
add
aas
andb
out
mov
in
or
push
fdivl
cmp
sub
stos
or
push
aaa
push
mov
dec
cld
out
and
mov
ror
stos
rol
sub
js
nop
repnz
cmc
movsb
cmp
push
mov
rcrl
lds
push
bts
xchg
lea
scas
clc
jo
dec
je
nop
inc
fs
sbb
out
mov
xlat
decb
sub
sub
int
and
sub
lds
nop
ret
js
cs
iret
neg
xchg
adc
fisttps
add
push
jl
push
mov
call
add
dec
mov
or
xchg
mov
subl
push
xchg
xlat
jae
imul
sub
jno
dec
xchg
cmpsl
test
loopne
fcompl
pop
ljmp
test
or
popa
or
jmp
mov
pop
jg
dec
cmp
lds
movsb
repz
xchg
outsb
xlat
or
fwait
push
gs
xchg
xor
sbb
jmp
mov
sub
mov
cld
or
add
in
push
ja
jge
sbb
push
es
mov
mov
push
cmpsl
add
fdivl
add
inc
lret
mov
es
and
dec
add
pop
loopne
sbb
xchg
cmp
add
push
in
jmp
das
mov
jne
daa
jb
es
pop
in
imul
mov
jge
cmpl
fisttpl
scas
loop
mov
movsl
mov
nop
dec
inc
jg
arpl
jle
out
test
repnz
sbb
cmp
mov
fisubl
lahf
mov
ret
rol
fcmovne
xchg
data16
inc
mov
xlat
lcall
andb
mov
xchg
nop
jns
fisttpl
notl
iret
push
adc
iret
xchg
ds
pop
out
and
and
ljmp
shll
adc
nop
add
mov
push
outsb
add
das
xlat
stos
outsl
sti
test
inc
int3
dec
mov
movb
out
dec
lods
jmp
and
push
cmp
or
dec
cmp
cmp
imul
lods
stos
out
in
push
cmpsl
mov
or
jge
fdivp
fs
ret
loop
and
ljmp
out
jns
mov
sub
add
outsl
es
icebp
dec
pop
xchg
mov
enter
mov
outsl
mov
adc
enter
scas
sub
jecxz
in
adcl
jae
icebp
scas
out
and
out
push
sbb
dec
fisubl
das
lret
popl
push
leave
lret
imul
bound
popf
ja
jmp
dec
cmp
mov
sahf
adc
inc
test
push
stos
fcoml
ljmp
dec
pop
out
cmp
mov
aaa
in
mov
pop
mov
mov
fisttpl
inc
lahf
je
cmp
test
dec
je
clc
pop
lret
enter
pop
fiadds
jno
inc
dec
cwtl
mov
xorl
adc
push
xchg
popa
int3
into
cld
aad
cmp
shlb
fsts
das
cmc
out
xchg
mov
enter
push
lcall
inc
aad
dec
lods
les
dec
cmp
test
dec
fwait
ret
push
jmp
cmp
sub
aam
repz
incb
iret
scas
xor
add
mov
shl
repnz
push
xor
xchg
test
insb
int
sub
xor
or
mov
ficompl
fdivr
cmp
rclb
clc
cmpsb
xor
xchg
je
mov
jg
xor
repnz
aaa
negl
imul
inc
scas
cmp
sahf
add
gs
jns
int3
sbb
xchg
aaa
int
insl
and
test
pop
mov
jnp
ret
jo
lds
dec
and
dec
push
sti
push
xor
pop
jecxz
mov
xchg
mov
jns
cltd
mov
imul
jp
inc
jecxz
cmp
inc
je
sbb
popf
daa
xchg
int
test
lods
push
xor
sub
out
sub
les
jb
sub
daa
mov
jno
stos
lock
xchg
add
mov
loopne
movsl
mov
test
cmpsl
stos
test
es
and
imul
sarb
ja
mov
loopne
mov
cltd
mov
adc
mov
pop
imul
inc
imul
inc
mov
mov
cmp
fwait
mov
add
jno
divl
adc
insb
roll
std
lock
ret
test
bound
push
mov
add
mov
into
mov
or
mov
lahf
stos
add
mov
xor
je
jmp
je
shlb
sbb
hlt
pusha
xchg
push
push
add
jp
jbe
int
dec
dec
dec
cmp
jecxz
ljmp
adc
pop
pop
adc
or
xor
push
popf
mov
push
stos
or
pop
jbe
xor
mov
outsb
and
int3
loopne
dec
sub
jne
cmpl
mov
fists
push
iret
cmp
icebp
sub
pop
mov
adc
mov
gs
lcall
ja
mov
and
ret
bound
cld
mov
ficoms
or
subb
pop
push
out
outsl
fsubrl
cmp
rcl
push
mov
push
dec
adc
daa
sbb
loope
jb,pn
add
stc
out
dec
pop
xchg
sbb
mov
mov
mov
in
je
sti
inc
jae
cmp
xor
mov
js
je
dec
rcrl
in
xor
pandn
lcall
jmp
fwait
push
sub
outsl
in
imul
loope
pop
sbb
es
mov
lcall
in
mov
pop
dec
ret
hlt
cwtl
cmpsb
icebp
aas
jns
jo
pop
mov
xlat
outsb
mov
in
pop
sub
jg
cmc
sbb
jo
call
cld
fldt
adc
cmp
xchg
repz
popfw
repz
enter
repz
dec
sar
std
cmp
xchg
or
cmpsl
add
sub
mov
out
imul
and
fwait
adc
mov
push
push
fildl
jle
mov
push
cmp
aaa
fsts
jb
push
or
cmpsb
mov
pop
lret
orl
movsl
int3
pop
adc
sub
jp
mov
cld
inc
scas
movlps
jmp
sti
test
push
popa
mov
jno
int3
mov
inc
and
and
stos
popf
sub
xchg
mov
inc
push
push
in
scas
outsl
jmp
adc
imul
add
gs
jae
sarl
adc
std
int3
sbb
fdivrl
push
out
add
pushf
jp
inc
out
pop
lcall
mov
xor
adc
imul
loopne
rcrl
dec
mov
popf
mov
cs
jg
pushl
out
sbb
out
inc
scas
sub
inc
sub
adc
mov
push
xchg
mov
lea
xchg
inc
and
lods
cs
scas
pop
or
push
or
popf
js
dec
cltd
daa
imul
iret
jae
xorl
xchg
or
pushf
pop
out
call
and
ret
into
dec
fwait
sbb
push
addr16
lea
fwait
int
jecxz
lcall
sub
pop
popa
test
aaa
xchg
vcvttpd2dq
mov
cli
push
sbb
cli
or
test
jg
mov
mov
aas
pop
pop
aas
scas
test
sbb
subl
cwtl
jmp
popa
addr16
push
cmpsl
lahf
xor
inc
gs
fidivs
imul
test
fsubs
daa
idivl
mov
scas
stc
mov
rorl
cmpsb
sti
insl
insl
scas
mov
fdivr
aad
ja
pop
ret
mov
or
pop
inc
sbb
inc
jno
aad
gs
xchg
inc
mov
push
gs
mov
mov
push
mov
iret
scas
jns
dec
sahf
adc
cmp
fdivr
dec
popf
or
jb
mov
add
xchg
fwait
clc
push
inc
cmpsb
test
outsl
xor
cmp
xchg
leave
sahf
sub
add
and
imul
push
aam
pop
pop
jb
das
xchg
addr16
jg
les
xor
inc
lret
xchg
scas
dec
xor
adc
jge
xlat
out
cld
jae
cmp
shl
adc
lret
sbb
xor
add
nop
adc
xor
pushf
adc
inc
outsb
fidivs
lock
sbb
orl
inc
pop
cli
push
mov
jg
adc
and
std
push
enter
shrb
testl
loop
xor
inc
sbb
pop
lcall
push
cmp
dec
movl
mulb
mov
ret
jb
push
bound
outsl
pop
cld
sldt
mov
pop
sbb
stc
mov
out
fsub
lret
test
fwait
insb
jo
mov
iret
xor
popa
rolb
inc
mov
mov
push
test
inc
dec
cld
add
and
add
ljmp
lahf
sbb
movsb
pop
dec
and
cmp
out
pop
jnp
cmc
fmuls
mov
xchg
sysret
cmc
mov
jo
stos
outsl
or
xchg
loop
mov
int3
jg
jae
aam
addb
jl
push
add
cmp
push
xchg
sub
sbb
js
pop
pop
rclb
add
push
inc
movsl
out
int3
scas
jg
sub
outsb
das
sub
lods
ja
mov
lret
mov
rolb
pop
rolb
pushf
cmpsl
push
sub
mov
mov
shll
outsl
and
inc
push
and
pop
inc
movsb
loop
push
push
jb
int
aaa
aam
and
xchg
mov
in
sahf
fisttpl
jno
sahf
aad
ja
rcrl
arpl
loope
mov
lret
cmp
std
xchg
out
jecxz
dec
shr
loop
loop
es
pop
sbb
inc
ljmp
fstpt
pop
add
scas
int3
clc
sbb
jle
iret
push
dec
out
adc
push
mov
fildl
test
mov
cmpsl
idivl
fidivs
inc
sbb
fisttpll
adc
xchg
sbb
cmp
mov
imul
js
sub
dec
sub
pop
push
sub
mov
lret
jae
addr16
stos
das
scas
or
mov
dec
aas
push
pop
mov
xchg
loopne
push
or
xchg
adc
out
pop
xorl
lods
out
xor
jg
mov
inc
lahf
fucomip
gs
mov
adc
arpl
mov
mov
sti
mov
pop
dec
sahf
aad
xor
cmp
inc
cmp
test
adc
jp
dec
enter
fs
add
and
divb
shl
sbb
lods
sti
out
sbb
aas
or
repz
stc
or
or
xor
inc
lret
push
push
into
fadds
cli
call
and
lods
test
mov
nop
arpl
je
mov
loope
jmp
call
and
xor
adc
inc
sub
dec
dec
leave
rorl
dec
adc
jne
xchg
repz
sarb
pusha
aad
push
js
ja
fcmovb
inc
push
aam
sub
push
and
push
adc
bound
loopne
add
aam
add
add
inc
add
add
sub
add
add
add
add
add
hlt
add
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
xchg
add
add
add
ja
mov
incl
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
jmp
pushl
call
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
push
push
mov
call
pushl
call
push
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
movl
andb
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
jae
jb
jo
add
push
push
call
mov
call
mov
push
imul
jb
je
arpl
xor
call
call
xor
push
push
push
push
push
push
call
add
add
add
add
or
and
or
or
push
add
add
add
add
add
add
mov
roll
add
add
add
add
add
add
add
push
add
add
sahf
add
add
mov
add
and
jo
outsb
outsb
inc
jae
inc
je
ja
dec
popa
jo
push
imul
add
cld
or
dec
lea
inc
in
icebp
call
ljmp
lea
adc
cld
mov
mov
call
push
mov
push
push
dec
push
dec
ror
lret
ret
mov
push
test
orl
adc
push
or
loopne
cld
jmp
loope
push
adc
sar
mov
push
rolb
adc
mov
add
or
push
push
adc
push
clc
push
cmp
mov
inc
jno
add
jne
jmp
adc
movl
add
add
add
push
add
add
jns
inc
inc
andb
je
test
sbb
inc
jo
inc
inc
inc
gs
gs
je
arpl
arpl
dec
in
push
inc
jb,pn
addr16
add
gs
imul
inc
gs
xor
add
add
addl
add
add
add
add
add
add
fiadds
add
add
add
add
mov
repnz
in
adc
push
outsl
mov
mov
leave
std
inc
cmc
ljmp
imul
pop
test
and
and
ret
fistps
testl
mov
in
push
hlt
mov
dec
fimull
fldenv
mov
xchg
test
fisttpll
or
ja
hlt
or
dec
arpl
jns
or
mov
dec
jo
jmp
or
int3
orl
loopne
inc
cld
out
push
loopne
cltd
imul
ret
iret
mov
mov
orl
mov
aas
sub
mov
rorb
les
pop
add
aas
clc
xchg
test
fnsave
sar
inc
sub
data16
fwait
adc
pop
mov
dec
mov
dec
mov
sbb
inc
dec
lret
lds
out
dec
xlat
arpl
test
jmp
pop
jle
daa
pop
push
inc
mov
scas
cmp
loopne
inc
out
hlt
test
sbb
jle
mov
mov
data16
sarb
push
lcall
mov
les
or
mov
aad
push
test
sarb
push
xor
fldcw
and
lods
scas
sbb
or
iret
xchg
test
lods
add
ds
repz
int
movsl
outsb
cld
jl
lcall
sahf
mul
gs
add
push
xor
flds
or
xor
sub
mov
jb
cmp
lds
test
sub
loopne
dec
cwtl
pop
mov
scas
pop
outsl
orl
orb
push
stc
dec
push
xchg
mov
cmp
dec
push
fldl
push
adc
stc
fdivrp
dec
ja
lret
jno,pn
dec
je
loop
fsub
mov
or
jmp
lds
orl
sub
rorl
add
jge
nop
mov
test
leave
pop
mov
lahf
ds
xor
dec
test
jle
imul
xchg
push
pop
mov
lea
pusha
mov
pop
add
outsl
pusha
cmp
insl
cwtl
jae
adc
jae
cmpsb
mov
fmulp
data16
push
addr16
pusha
test
fs
cmp
loop
ljmp
data16
mov
ficoms
out
shlb
popf
lock
out
inc
sub
xchg
jp
aam
cmpsb
mov
mov
push
rolb
stos
popa
fdivr
les
loop
push
sub
fld
lea
scas
mov
fxam
pop
push
adc
movsl
notl
aam
mov
inc
and
or
cli
xlat
adc
rol
lds
imul
jo
cli
repz
adc
int
sbb
lds
inc
gs
insb
cmpsb
arpl
aad
mov
lret
outsl
mov
stos
imul
add
test
js
outsb
xor
cltd
js
push
or
outsb
and
subl
je
or
mov
outsb
pop
shll
pop
mov
add
shrl
pushw
repnz
push
xor
test
mov
add
divl
es
and
jb
mov
add
outsb
test
pop
add
in
jne
xor
gs
add
push
lret
ss
inc
dec
js
sub
cs
loope
pusha
scas
dec
stc
xchg
xor
repnz
adc
add
adcl
lcall
add
sbb
lods
xchg
ds
das
sbb
jnp
sbb
cmp
adc
cmp
int
and
test
notl
in
mov
mov
fwait
cmpsb
andb
inc
mov
movsl
dec
jg
mov
mov
jae
sahf
or
pushf
jg
xor
cmc
std
push
or
pushf
or
pop
cmp
cld
mov
loop
stc
sbb
repnz
and
js
mov
push
sarb
ss
add
shl
in
and
movsl
addr16
loop
sbb
ret
jno
enter
mov
dec
clc
frstor
push
and
xchg
ja
push
test
and
adc
aaa
and
inc
movl
dec
xchg
xor
or
sarl
sbb
sub
or
cmp
fucomi
sbb
fdiv
repz
addr16
push
mov
jno
aad
jns
mov
idiv
mov
out
ss
mov
xor
xchg
setp
lret
mov
imul
xchg
lea
es
popf
sti
xor
imul
pop
cmp
xchg
adc
in
aaa
outsl
fisttpll
icebp
and
add
sarl
scas
adc
ds
fmulp
outsb
mov
pop
dec
into
loop
sarl
imul
sub
or
dec
fmull
jo
les
das
pop
pop
int3
pusha
inc
cs
jp
or
inc
fnsave
cmp
insb
push
mov
jbe
jne
xchg
loope
shl
lods
pop
xor
xchg
icebp
jg
repnz
xor
mull
push
loop
inc
test
js
jbe
inc
mov
out
fistpl
lea
mov
cmpsl
mov
loop
mov
ljmp
mov
movsl
lock
jae
lods
sahf
lock
mov
fcmovnbe
jmp
stos
jl
mov
mov
fidivl
pop
js
lcall
ss
ficomps
bound
xchg
cwtl
lods
popa
lcall
inc
test
jae
push
xor
xor
jo
jbe
pop
mov
inc
jge
loope
push
jne
out
sbb
add
lds
cmc
cmp
push
mov
dec
mov
lods
sub
scas
ror
inc
push
dec
rolb
clc
out
mov
hlt
sbb
test
cli
xchg
and
adcl
pop
stos
lahf
cmpsb
std
aad
clc
jnp
mov
das
int
dec
mov
sub
inc
sub
adc
popf
jg
popa
call
xchg
mov
or
mov
scas
mov
jno
sub
imul
outsl
sub
lahf
andl
test
shlb
int
pop
cmp
leave
sbb
test
pushf
shlw
repnz
rcrl
jb
or
js
jecxz
andb
addr16
mov
icebp
movsl
clc
rsqrtps
fs
inc
cmp
sbb
test
mov
das
pushf
test
incb
mov
inc
movsl
out
jmp
cltd
push
pop
lcall
jge
add
dec
and
aad
repz
mov
ja
test
or
into
out
testl
stc
pushf
arpl
inc
xchg
sub
pop
add
fnstenv
push
add
pusha
call
jns
out
aam
lret
mov
imul
dec
cld
fisubrs
fnstsw
out
stos
lret
dec
jg
fsubs
inc
mov
stos
stos
jb
sub
sbb
ret
push
xchg
mov
sbb
cwtl
out
in
pushf
mov
xor
cmp
inc
sbb
repz
movsb
cmp
mov
sbb
popf
pop
mov
mov
iret
hlt
dec
jecxz
mov
pop
xor
std
or
push
cmpb
insl
cli
pop
fstps
push
arpl
mov
or
sbb
aam
or
pop
mov
cmc
iret
popa
sub
or
aad
lods
and
outsl
mov
pop
mov
mov
jp
fsts
and
jns
inc
push
clc
push
cmp
jns
dec
jg
xor
jmp
push
pop
mov
aas
add
enter
movsb
mov
lcall
insl
inc
xchg
xchg
xor
stos
mov
add
sub
in
incl
and
les
fwait
add
pop
inc
pop
jl
loop
out
loop
jns
jmp
jns
mov
and
dec
add
sub
sti
push
lcall
mul
adc
xchg
in
pushf
jo
cmc
dec
adc
ja
inc
cmp
or
into
stos
push
std
or
jl
jecxz
cs
mov
aaa
pushf
imul
scas
or
idivl
cltd
movsl
sbb
sbb
xchg
movsb
mov
into
fisttpll
pushaw
add
jle
subb
test
dec
adc
and
cmc
fwait
dec
bound
inc
movsb
pop
sub
dec
pop
jg
xor
pop
fistps
popa
imulb
sbb
das
enter
sub
movsl
mov
divb
mov
adc
or
stos
push
mov
int3
pop
cmp
dec
call
dec
mov
adc
jnp
aam
mov
scas
das
nop
sbb
or
loope
lds
lea
adcb
push
push
ret
sbb
fnsave
hlt
adc
out
imul
pop
rcrb
and
call
jb
lret
mov
shrd
dec
in
test
je
insl
push
xchg
stos
test
adc
jno
testl
cli
lds
arpl
mov
jne
xlat
sub
xor
filds
push
aas
mov
mov
adc
lods
dec
rcrb
sbb
push
push
mov
pop
sub
rcr
cmp
lret
adcl
sahf
pop
fs
adc
cmp
in
ss
scas
mov
mov
fxch
xchg
std
inc
mov
call
mov
cmp
adc
inc
adc
mov
push
pushf
sahf
arpl
jecxz
pusha
dec
out
test
cmp
mov
test
or
push
pusha
jns
adc
and
mov
inc
mov
sbb
pmullw
jmp
addr16
fisubrs
or
pop
add
insl
dec
popa
mov
mov
loop
je
jo
aam
out
mov
inc
movsl
adc
add
sbb
mov
cmp
and
jle
dec
popl
xlat
or
dec
nop
insb
popa
je
iret
mov
cld
or
in
adc
repz
ret
lahf
mov
inc
add
sub
and
jmp
test
test
popa
rclb
sbb
outsb
jo
in
sub
scas
mov
and
xchg
cmc
mov
cmp
jno
adc
push
out
and
out
cmpsl
sti
testl
int3
notl
leave
xor
dec
sub
stc
imul
mov
xor
pop
pop
out
mov
ds
pusha
mov
cmp
scas
and
pop
jno
mov
mov
ja
aad
dec
push
xlat
or
sub
call
xor
xor
movsl
push
inc
jnp
and
mov
hlt
mov
mov
insb
xor
sbb
mov
adc
gs
mov
mov
add
cmc
push
pusha
dec
xor
or
lods
adc
and
daa
shll
pushl
jne
jmp
addr16
mov
xor
leave
out
pushf
sub
cs
push
or
jb
sub
or
inc
push
add
push
dec
stos
outsl
pushf
pop
mov
mov
sbb
add
in
adc
sub
and
sub
xchg
sbb
push
dec
cmp
mov
in
lds
push
fisttpll
cwtl
fdivrl
orb
cwtl
int3
mov
mov
fistpl
cmpb
lds
adc
pop
and
int
mov
andb
cmp
cmp
sub
sbb
bound
adc
jle
push
and
bound
jl
lea
xchg
mov
sbb
sahf
test
ljmp
fisttpl
pop
int3
push
mov
jbe
or
cmp
mov
inc
mov
sub
sti
mov
sub
das
fs
lods
inc
cmpsl
mov
stos
and
push
lods
outsb
insl
jg
xorl
push
inc
neg
add
clc
or
push
mov
sub
fcmove
fwait
cmc
imul
cmpsl
or
test
add
push
cmp
mov
mov
call
add
or
pusha
arpl
pop
les
xchg
cwtl
fbstp
cmp
or
lret
adc
push
xchg
xchg
dec
mov
movsl
adc
mov
or
xchg
xorb
jnp
jae
mov
cmp
mov
mov
xchg
fcoms
add
xchg
shrb
mov
ret
loop
rcr
lock
inc
nop
xchg
cmp
in
cmc
sub
stc
js
pop
out
imul
icebp
add
add
ljmp
jge
scas
cmpsb
clc
ret
pushf
jl
inc
loop
rcr
cwtl
lea
inc
rcrb
ss
lds
push
loopne
push
ss
js
pop
inc
mov
mov
jge
and
push
push
bound
cmp
push
push
push
aam
arpl
pop
or
xrelease
pop
enter
dec
movsl
and
mov
call
cmp
jmp
and
inc
int
aas
ljmp
xor
pop
test
jnp
mov
jg
repnz
xor
push
xchg
and
xchg
nop
mov
push
push
inc
mov
addr16
lahf
xchg
js
sub
push
outsb
jmp
iret
inc
in
mov
cmp
pop
mov
xor
add
pop
cmp
push
dec
enter
xlat
mov
cmp
aad
mov
pop
insl
cmp
aad
mov
pop
add
or
icebp
into
mov
imulb
sbb
or
pop
dec
lods
push
loopne
popf
dec
inc
pop
lcall
or
enter
xor
call
sti
jno
xchg
call
in
aam
jns
call
sub
push
pop
push
stc
out
int3
or
fs
dec
mov
jno
mov
xchg
int3
into
jmp
xchg
jnp
ret
cmp
ljmp
sti
lahf
daa
fidivs
rcll
mov
mov
or
add
or
addr16
or
adc
arpl
add
mov
xchg
mov
loop
aad
std
dec
pop
stc
dec
cmp
xor
or
icebp
rol
jnp
pop
lea
push
lods
ljmp
inc
xor
push
adc
lahf
pusha
jno
adc
dec
jl
fnsetpm(287
sti
sbb
bound
sub
jg
ret
cmp
aad
mov
sbb
mov
push
xlat
enter
push
or
dec
push
ljmp
sub
ja
stc
cld
and
mov
mov
pushf
pop
or
xor
jne
sub
fsubrp
push
scas
push
jmp
mov
and
inc
sbb
inc
push
sbb
jbe
sahf
xor
and
dec
inc
rcr
lret
test
pop
fidivrl
imul
mov
mov
clc
dec
mov
sbb
mov
or
cltd
pop
xchg
test
jo
fsubs
sub
in
ja
xor
add
pop
lret
addl
dec
pop
aad
jg
push
or
fs
loopne
push
bound
cmp
mov
stc
push
mov
mov
add
iret
xlat
mov
cmp
pcmpgtw
xor
aaa
mov
pop
iret
nop
in
sbb
mov
pop
aad
stos
cli
mov
pop
cltd
cmp
shlb
mov
inc
lds
aam
imul
push
lods
sbb
in
or
gs
inc
stos
jecxz
add
add
jns
aas
inc
pop
test
and
subl
or
js
repz
jns
adc
mov
cmp
jmp
xor
pop
or
shlb
pushf
mov
mov
adc
and
outsl
push
stos
xor
popl
lret
in
aaa
neg
test
test
cmp
and
mov
loop
jne
mov
bound
inc
dec
add
mov
push
movsl
jmp
xchg
jp
jl
scas
test
push
mov
xor
das
lcall
mov
sbb
js
adc
lods
or
mov
outsl
int3
mov
xor
ret
add
rcl
dec
in
lcall
jno
cmpsl
test
push
cmp
adc
mov
or
cli
jne
cmp
xchg
rcr
outsb
test
pop
add
test
outsb
popa
test
fmulp
push
cmc
pop
inc
jno
sti
in
das
iret
int
jb
adc
rcrl
lea
xchg
mov
dec
jne
les
pop
add
rorl
es
out
mov
push
cmp
add
xchg
cmpsl
inc
sbb
fwait
adc
mov
mov
int3
in
fnstcw
or
in
fdivl
adc
das
mov
mov
dec
jns
sbb
push
jge
test
push
aas
js
sub
lock
or
mov
cmp
and
loop
testl
test
int3
mov
addr16
xchg
fldcw
and
arpl
sub
mov
stc
popa
popf
out
fistl
or
xchg
out
insl
pusha
xchg
repnz
mov
negb
sbb
push
fstpt
cmpsb
cltd
frstor
push
aad
xchg
pusha
es
add
enter
mov
mov
adc
xchg
xchg
or
push
bound
push
enter
data16
or
lahf
aad
sti
jne
adc
dec
jmp
or
jecxz
fcomip
mulb
cmc
adc
ljmp
imul
push
mov
loop
xor
arpl
imul
daa
shll
sahf
cltd
call
pop
cmpsl
ds
mov
lds
dec
arpl
call
std
adc
loop
es
lods
aas
rcll
dec
out
pop
stos
repz
hlt
pop
je
cli
push
popa
push
xor
mov
push
scas
mov
loopne
mov
scas
mov
xchg
mov
sbb
mov
lret
xchg
adc
inc
call
out
movsb
mov
mov
pop
fdivs
test
xchg
fldt
push
mov
or
jae
leave
add
sahf
add
add
mov
outsb
add
add
adc
add
add
add
add
addl
add
add
add
add
add
add
add
add
fiadds
add
add
add
add
add
add
add
add
roll
add
add
add
add
stos
stos
add
ss
mov
clc
clc
incl
cli
dec
jb
outsb
orb
add
add
add
add
add
xor
add
add
add
js
inc
add
add
add
shrb
add
rolb
add
add
add
and
popa
add
jne
outsb
jae
jae
dec
add
repnz
and
mov
iret
jne
leave
sarl
inc
adc
add
dec
push
mov
incl
add
decb
std
or
je
call
add
push
and
or
mov
push
orb
push
lea
pop
rclb
jge
repnz
mov
push
add
mov
pop
decb
test
incl
inc
incb
je
push
loopne
decl
subl
call
jge
push
push
incl
push
add
std
test
lea
repnz
inc
push
adc
push
clc
out
adc
inc
add
add
add
add
add
add
mov
cmpsl
add
add
pop
inc
add
inc
imul
jb
jae
add
add
gs
add
arpl
dec
gs
gs
add
insb
inc
dec
js
push
fs
dec
push
jns
xor
add
add
outsl
gs
addr16
outsl
jb
xchg
dec
add
xlat
add
add
add
add
add
add
add
mov
add
add
add
add
and
ret
and
lock
xor
dec
movsb
add
inc
std
add
mov
lock
push
jge
int3
loope
aaa
shlb
fists
pop
xchg
pop
test
and
ss
inc
ss
adcl
xor
mov
pop
xor
int3
in
addb
add
mov
add
jnp
mov
push
fimuls
bnd
ror
std
mov
ror
and
push
pushf
int
jb
incl
dec
xchg
lock
dec
cmp
jae
sub
sbb
std
or
push
rcr
push
pop
ss
int
lahf
mov
cmp
jg
daa
insb
push
jb
ret
sbb
and
test
jl
scas
mov
popl
xor
cmpsb
and
push
add
jae
mov
movsl
push
scas
test
and
sub
insl
jno
mov
and
mov
scas
xor
cld
sbb
fs
mov
inc
inc
fidivrl
ret
mov
adc
ljmp
insl
jns
mov
scas
cmc
imul
aam
inc
xchg
or
scas
in
jno
push
repnz
mov
or
hlt
xchg
mov
mov
scas
and
mulb
aaa
pop
outsb
jno
push
and
fisttps
dec
sbb
jge
mov
mov
push
xor
xor
arpl
cwtl
pop
sbb
cmpsb
movb
or
jge
aaa
pusha
es
scas
sarl
sbb
outsb
ss
outsl
jge
sub
dec
emms
mov
sub
inc
pop
hlt
pop
into
mov
pop
inc
sub
mov
xchg
mov
push
lock
dec
enter
iret
dec
insb
dec
movl
movsl
faddl
pop
dec
fisubs
dec
movsl
xor
inc
aad
and
test
add
cli
and
js
loop
mov
adc
and
mov
test
push
pop
jne
or
cmp
js
mov
repz
sbb
std
mov
cli
cmp
in
cs
xor
pushf
testb
lds
mov
pushf
hlt
xchg
inc
insb
je
lret
iret
push
jb
xlat
pop
sub
pop
std
xchg
ret
jle
adc
sbb
enter
push
repnz
pusha
stos
packuswb
mov
mov
cmp
cs
inc
scas
cmpsb
negb
scas
shl
call
xchg
mov
sbb
or
xchg
or
cmp
jne
fidivs
jp
jle
aad
sbb
xor
add
cli
shll
in
sub
shrb
xchg
call
inc
scas
xor
out
push
or
pop
xor
sub
pop
mov
jns
iret
sbb
hlt
push
lock
cwtl
leave
or
into
mov
inc
outsl
inc
rclb
mov
cmp
sbb
xor
in
and
test
push
fcoml
cs
adc
jo
mov
inc
xchg
jl
xchg
ljmp
loopne
add
inc
sbb
mov
sbb
movsb
pop
sbb
sub
sub
cmp
add
scas
fstl
lods
cltd
mov
xchg
fdivl
xor
jno
xchg
cwtl
push
jnp
cli
rolb
adc
data16
and
es
mov
lret
imul
inc
jns
imull
outsb
add
in
and
fcoms
lret
pop
and
cmp
jmp
gs
jmp
les
pop
cli
stos
push
leave
jae
add
xchg
inc
mov
popa
in
jo
jp
mov
dec
mov
js
rclb
push
lods
xor
nop
push
pop
mov
cmp
mov
sub
nop
jae
cmp
push
dec
lods
addr16
aad
push
lods
mov
jnp
dec
cmp
enter
or
sarb
sub
push
out
stos
outsl
jne
add
movsl
scas
imul
inc
leave
push
inc
loope
movsb
sbb
push
movsl
rcrl
adc
jecxz
cmc
xor
repz
stos
add
loopne
stos
push
jl
adc
sub
les
xchg
push
sbb
mov
dec
test
adc
xchg
cwtl
adc
mov
xchg
add
pop
mov
jae
cmp
sahf
jmp
rorl
xchg
movsl
xor
ja
enter
xor
jne
ljmp
mov
aam
sbb
or
mov
mov
pop
idivl
aam
xchg
test
stos
cltd
insb
aaa
xchg
out
subl
sti
cmpsb
fiadds
decl
addl
insl
in
xchg
or
mov
in
divb
fwait
cmp
mov
push
cmpsl
fsubl
adc
sbb
roll
jno
repnz
jns
sbb
pop
daa
mov
mov
stos
push
pusha
sub
nop
ja
fchs
out
fisttpll
fmull
pop
cmp
add
out
movsl
insb
dec
daa
jo
cmpsl
lret
rorb
add
adc
xor
addr16
jnp
cmp
popf
lods
enter
xor
cmp
es
insb
pop
push
xor
add
xor
cmc
pop
adc
js
popf
add
gs
fwait
xor
daa
movsb
jmp
loop
sub
stos
add
adc
jnp
push
out
adc
sub
mov
inc
mov
and
fidivrs
dec
lods
sbb
lods
push
lcall
mov
dec
movsl
mov
test
dec
and
aaa
mov
out
push
ror
scas
icebp
or
jnp
push
sahf
jge
das
adc
sbb
scas
das
xchg
hlt
loope
pop
mul
test
lcall
sub
aas
bound
popa
std
and
cmp
pop
sbb
xchg
sbbl
fwait
mov
mov
je
addr16
xchg
push
fmull
push
hlt
mov
dec
mov
inc
xor
popa
dec
push
rcll
stos
mov
nop
jl
shlb
sbb
sbb
setno
rcrl
inc
mov
mov
xor
xchg
ljmp
or
imul
shl
lret
imul
mov
inc
iret
addl
mov
jnp
call
sbb
fwait
addr16
push
das
mov
or
ss
fdivrs
mov
mov
dec
imul
and
lods
int
mov
aad
sub
out
lds
sbb
mov
sub
jnp
pop
int3
jecxz
jo
sbb
xlat
push
xor
test
popf
mov
or
xchg
mov
std
mov
dec
push
inc
lock
fisttpl
pop
adc
jmp
mov
and
rorl
in
mov
rol
mov
movsb
ret
add
ds
sbb
int3
clc
aas
xor
cmp
cld
adc
mov
in
dec
test
mov
imul
shrb
xor
xor
adc
fadds
xchg
cli
xor
call
jl
rclb
scas
test
rcr
push
jl
xor
in
in
mov
shr
movsl
sbb
mov
shlb
dec
pop
jge
fwait
xchg
pop
pop
cmp
cltd
inc
lods
push
fsubrs
lods
imul
pop
movl
ljmp
outsb
and
test
cwtl
aas
imul
test
rcl
mov
cmp
in
jnp
into
leave
lret
rcrb
js
rclb
jl
addl
insb
cmp
mov
xor
or
and
mov
xchg
scas
in
pop
mov
fistpl
and
xchg
push
fdivr
push
mov
jmp
int3
push
in
addr16
xor
mov
mov
mov
push
jae
push
xor
jne
fdivs
or
push
orl
push
or
push
inc
sub
idiv
std
ret
bound
mov
loopne
fsts
in
loope
jge
dec
jae
fstpt
movb
lock
iret
mov
mov
pop
cmp
jp
and
xor
test
cltd
pop
nop
je
outsb
sti
jo
jmp
incb
pop
or
mov
sbb
in
mov
ss
scas
iret
cmp
push
sbb
lcall
nop
addr16
push
mov
repz
and
jns
inc
sbb
mov
mov
sub
jmp
push
mov
mov
adc
dec
or
mov
insb
inc
or
les
mov
rolb
cld
ja
jb
and
sub
push
or
inc
mov
dec
jg
shr
test
por
das
mov
or
lret
push
mov
sti
stc
sbb
je
sbb
fs
cmp
add
adc
loope
pop
fistpl
fisubl
pand
outsb
and
pop
popf
inc
aas
push
mov
fimull
out
mov
pushf
xor
mov
imul
or
adc
mov
hlt
setp
and
mov
leave
sbb
sti
add
sbb
xchg
je
cmp
mov
pop
pop
cmp
xor
cmp
dec
adc
mov
je
cs
gs
movsb
cwtl
rcll
adc
and
decb
adcl
loop
pop
pop
fiadds
add
push
enter
iret
jno
inc
mov
test
pop
ror
or
mov
pop
addr16
ds
aaa
inc
inc
adc
bound
cmp
daa
adc
and
call
xchg
sbbb
test
sbb
addb
xor
push
mov
cmpsb
test
dec
fcmovu
movsb
jp
js
lods
stos
dec
lret
jno
xorl
mov
pop
or
pmovmskb
sub
popa
push
pop
jno
cwtl
mov
push
ljmp
incb
int
iret
movsl
pop
cmpsl
lea
fbld
adc
mov
mov
loope
sbb
xchg
inc
clc
pop
jns
xlat
outsb
xchg
jbe
ss
popa
hlt
add
push
in
push
out
push
jne
loopne
les
adc
lods
cmpl
push
add
jl
cld
imull
mov
push
or
lock
pop
inc
shlb
mov
ja
push
lcall
mov
xor
add
loope
out
pop
push
outsb
and
push
test
popa
xor
out
in
mov
stc
sbb
inc
negl
nop
data16
push
inc
clc
out
shrl
xchg
test
lds
push
push
sbb
add
sub
add
in
out
pusha
and
nop
or
and
sub
jecxz
mov
fcomp
cmp
push
in
das
gs
movsl
mov
mov
sbb
stos
ljmp
pop
rcr
loope
pushf
cmp
mov
push
dec
fstl
je
jbe
cs
mov
popa
hlt
repz
loop
xchg
movsl
dec
push
jno
stc
cmc
mov
xchg
mov
mov
enter
sahf
shll
in
fcomi
test
cmp
jns
jecxz
adc
incl
cs
jbe
dec
xor
rclb
mov
mov
inc
test
sbb
mov
push
jno
add
sarl
and
int3
jecxz
ja
jno
jle
fisubl
and
mov
mov
push
leave
xchg
xchg
adc
jmp
xorl
popa
mov
cli
cltd
jne
push
or
es
sub
inc
jp
mov
jge
mov
fstl
mov
jp
idivb
inc
in
add
xchg
or
int3
bound
fisttps
cmpsb
mov
jmp
add
and
jmp
in
jo
sbb
sub
sbb
js
cwtl
push
jle
test
mov
lods
cmp
fbld
fmull
sbb
movsb
and
lods
cltd
lcall
rcrb
lds
ljmp
adc
mov
enter
mov
leave
pop
pop
sbb
sub
adc
adc
test
cltd
mov
push
jmp
test
dec
jle
cbtw
mov
inc
push
or
insl
sti
mov
add
iret
aas
cmpsl
movups
add
dec
cmpsb
xchg
or
in
in
lods
cmpb
pop
inc
or
call
mov
pop
jg
ret
sub
jp
imul
fstps
xchg
nop
push
dec
out
mov
mov
xor
jno
nop
or
cmc
xchg
pop
sub
xchg
mov
int
sbb
xor
adc
call
mov
rcrb
das
imull
add
or
ljmp
cmpsl
pop
cmp
test
cli
nop
dec
adc
jmp
int3
sbb
lock
mov
inc
ljmp
or
pop
inc
aam
sub
ljmp
lahf
fs
mov
enter
pop
push
adc
cltd
bound
cltd
sbb
mov
aam
xlat
imul
push
sub
xchg
cmp
push
jno
fcoml
es
pusha
gs
push
in
ja
fldt
and
aaa
in
call
mov
lods
sub
jbe
pop
subl
xor
iret
xchg
fdivrs
adc
stos
out
adc
jne
scas
aam
adc
mov
push
mov
shl
push
adc
int
or
std
aad
jns
push
jo
mov
data16
mov
out
sub
cmp
shrb
lret
mov
sub
push
jo
cmp
cwtl
jl
ret
notb
popa
cmp
mov
repz
mov
mov
sahf
rcrb
and
lods
or
scas
mulb
stos
in
xchg
cltd
push
cs
pop
add
push
sub
ret
xor
jae
shll
pop
sub
movsl
testb
lret
adc
hlt
and
mov
in
bound
pusha
jmp
pop
cmpsl
je
inc
dec
test
aaa
sub
mov
xchg
into
inc
test
out
jp
mov
jl
imul
popa
or
inc
pop
jmp
rorb
add
mov
lods
jp
jae
stos
orb
shlb
lahf
inc
or
add
mov
sub
movsl
int3
pushf
popf
in
jb
inc
mov
xchg
xchg
adc
ds
xor
or
roll
dec
cmp
mov
test
xor
push
and
shll
or
inc
rorb
mov
xorb
mov
sbb
sbb
fs
dec
ret
dec
sub
sub
into
lcall
sbb
push
repz
cmp
cwtl
mov
cmpsl
ret
pop
dec
outsb
inc
orl
adc
inc
sbb
fldcw
cltd
inc
arpl
outsl
cli
or
xchg
je
cltd
lea
mov
push
cmpsb
sub
xchg
hlt
movsl
nop
sbb
sub
pop
xchg
jg
hlt
int3
int3
in
xor
lcall
sub
adc
loopne
aaa
stos
lea
adc
mov
mov
jp
jge
pop
fdivp
les
sbb
js
sbb
rclb
xor
imul
loop
mov
mov
adc
mul
iret
push
mov
cmp
int
stc
fisttps
rcrb
mov
pop
ret
bound
es
sbb
push
mov
mov
push
fnstsw
push
xchg
jbe
fnstsw
out
lahf
mull
xchg
adc
fists
add
ret
xchg
inc
jb
sahf
jnp
sbb
and
push
xchg
mov
repz
adc
scas
sbb
inc
stc
mov
mov
dec
jp
movsl
mul
stos
std
cs
add
enter
rcll
mov
outsb
pop
dec
inc
sbbl
and
cmp
inc
scas
sbb
hlt
mov
jecxz
jno
xor
pusha
pushf
mov
pushf
push
pusha
mov
negb
movl
dec
stos
add
jbe
cli
push
and
xchg
lea
add
stos
jbe
sbb
imul
test
lret
bswap
mov
mov
dec
ret
cltd
cltd
ja
xchg
push
das
iret
jbe
xor
das
mov
sbb
and
test
lods
xor
jns
adc
addr16
adc
push
les
imul
and
shll
pop
lea
or
das
push
ds
in
sti
dec
push
in
xchg
jnp
leave
enter
push
in
cmpsl
into
je
push
out
pop
test
notb
push
push
out
lds
or
test
fs
xchg
lods
popf
push
sub
sbb
addl
pop
addr16
inc
int
notb
pop
ret
fistps
js
mov
sbb
lahf
cmp
pop
and
cltd
outsb
push
xchg
mov
mov
adc
cmpsl
pop
add
lahf
addr16
fldcw
or
dec
sbb
or
imul
push
orl
adc
enter
pop
mov
add
loope
mov
testl
sti
out
jg
adc
fnsave
lret
push
jnp
pusha
inc
fidivrs
sahf
mov
jae
add
dec
inc
icebp
shlb
mov
cmp
push
xchg
pop
jnp
dec
das
and
out
imul
adc
jl
xchg
daa
cmp
es
fmuls
stc
fstps
sahf
inc
jp
cmp
movsl
adc
out
std
cs
dec
mov
sub
lret
xchg
cmc
sbb
mov
sbb
cmpsl
sbb
addb
pop
and
push
inc
cmp
hlt
xor
lods
lds
in
push
sbb
addb
nop
loope
mul
mov
enter
icebp
mov
gs
inc
add
ret
mov
cmpxchg
xchg
test
sahf
add
div
or
jg
cmp
dec
popa
negl
addr16
bound
pop
call
dec
enter
sti
fdivrp
dec
shr
mov
aas
inc
sbb
outsb
data16
lds
loopne
mov
aas
cmp
jno
arpl
cmc
aam
test
mov
add
push
shrl
mov
repz
fisttpll
xor
std
test
loopne
add
js
add
add
testl
add
add
repnz
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
mov
add
stos
stos
add
ja
mov
out
jo
add
lds
add
add
pop
push
outsl
add
add
ja
and
add
inc
test
add
add
add
imul
in
or
add
fldt
add
inc
add
sbb
sbb
sbb
sbb
add
add
je
das
decb
inc
jb
add
add
outsl
outsb
push
or
cld
enter
add
sahf
clc
or
push
in
test
mov
xchg
cmpps
lea
movl
mov
lea
lea
and
adc
add
adc
in
add
call
rcrb
stos
inc
mov
adc
mov
mov
adc
pushl
push
fwait
test
incl
jmp
lcall
je
push
cmp
adc
or
call
incl
shrb
fisttpll
dec
data16
stc
mov
outsb
sub
stos
jne
add
adc
add
adc
add
add
pop
add
add
add
add
add
sti
sbb
insl
add
add
add
add
add
imul
subl
dec
insl
push
je
add
outsb
inc
jns
fs
add
add
add
add
cmp
fs
ja
add
js
jne
popa
jne
fdivs
inc
add
dec
xor
push
add
add
movsl
add
fwait
add
aad
add
add
inc
add
jnp
dec
lods
mov
inc
das
int3
sub
mov
loop
cltd
dec
mov
push
sbb
mov
jecxz
pushf
mov
pop
test
jo
dec
jle
out
stos
mov
fnstcw
sub
dec
je
lock
push
aam
and
bound
mov
mov
dec
add
cli
in
mov
cmp
jle
sbb
pushf
movsl
inc
inc
test
test
imul
out
sub
leave
movsl
xlat
jno
jle
pop
xadd
in
cwtl
pop
adc
ljmp
add
popf
dec
jno
jp
jp
stos
jnp
push
mov
and
cmp
push
xor
shrb
mov
repnz
in
xchg
or
jecxz
jno
cmp
sub
jne
std
popa
mov
aaa
push
jmp
push
dec
jcxz
add
xchg
xor
int
jecxz
xchg
or
jecxz
insb
nop
pop
cmp
pop
mov
add
rol
pop
lods
mov
in
cmpsb
ds
cmp
ret
mov
orl
xchg
rcr
sub
addl
fsubs
hlt
pop
inc
imul
pop
mov
cmp
mov
xor
dec
lret
xor
ja
mov
xchg
shl
lahf
sbb
mov
idivl
sbb
and
cmpsl
test
in
push
scas
fwait
mov
cmp
or
mov
and
lret
push
punpckldq
je
cld
nop
pop
aad
sti
fcoml
xchg
pop
test
xor
or
sbb
jle
fnstsw
xlat
inc
jge
adc
adc
icebp
pop
fwait
pop
sub
sbb
mov
mov
or
fidivl
ret
cmp
enter
call
fcmovbe
pop
adc
pop
mov
cmp
push
adc
adc
test
dec
ja
and
movsl
stos
jg
mov
cmpsb
jae
call
sarb
dec
sbb
test
sub
lea
out
mov
jno
stos
jns
and
jp
add
add
and
imul
shlb
push
jo
inc
jno
add
and
int
xchg
dec
loope
into
in
in
insb
rclb
xor
cmp
push
mov
int3
or
lods
fidivrs
push
mov
call
push
shlb
hlt
mov
cmpb
std
mov
pop
adc
jo
inc
orb
mov
jnp
mov
xlat
mov
push
inc
or
loopne
lcall
pop
sub
jge
outsl
xor
addr16
js
popf
out
addr16
loope
pop
cmpsb
cli
push
rolb
insb
in
testb
jnp
daa
out
cld
aam
stos
fiadds
xlat
mov
andl
push
mov
add
xchg
ds
push
push
pop
pop
cmp
imul
cli
jl
pop
push
and
dec
pop
mov
call
popf
jmp
xlat
inc
push
imul
ss
xor
lret
push
push
and
in
int
outsb
or
sahf
mov
jnp
mov
sbb
fwait
jne
pop
repz
stos
pushf
fwait
mov
cmc
movsl
lahf
adc
stc
ljmp
lret
cmp
sbb
xchg
scas
aad
and
jae
mov
insl
xchg
cmpsl
insb
in
mov
sahf
push
lahf
les
cmp
xor
sub
mov
test
jb
ljmp
pop
cltd
jno
into
aam
sbb
das
cwtl
and
loope
add
testb
idivb
add
mov
and
inc
push
cld
mov
or
leave
movb
adc
stos
push
iret
test
or
mov
outsl
ror
outsb
decb
in
jne
mov
pushf
sub
jnp
push
loopne
inc
xchg
mov
loopne,pt
cmp
aad
daa
xchg
sbb
test
scas
add
sbb
sahf
test
call
loopne
insb
xchg
addl
mov
inc
mov
and
jne
out
lds
test
inc
and
sub
push
pop
flds
inc
jae
mov
dec
push
mov
test
xchg
lahf
mov
ds
xchg
lret
lods
mov
xlat
sub
sub
inc
mov
cmp
mov
add
cld
inc
push
daa
insb
mov
jo
add
jle
fwait
leave
and
movsb
sbb
or
dec
je
push
pop
jbe
pop
mov
inc
xchg
dec
cs
cmpb
mov
xor
lret
ja
jns
in
mov
mov
aam
jo
mov
sub
jbe
xor
xchg
lret
pop
cmp
cmc
add
add
cwtl
jae
mov
fwait
scas
or
push
das
lcall
push
xor
iret
pop
scas
lods
push
test
sarb
and
mov
fdivrl
xchg
push
fwait
cs
aam
scas
sub
daa
outsl
movsb
cmp
push
adc
inc
test
mov
fisttpl
push
xchg
ficomps
pusha
and
push
pop
test
push
jge
loope
cmpsb
mov
repz
lcall
mov
jge
xor
cmp
icebp
xor
push
inc
leave
mov
hlt
lods
jo
xchg
push
jge
int
int3
fbstp
dec
iret
leave
mov
lock
rorb
mov
cmpsl
dec
mov
in
cltd
in
mov
rclb
sbb
insl
mov
lret
push
jnp
cwtl
dec
cmp
and
lock
bound
ret
mov
push
mov
push
aaa
adc
and
mov
cmpl
ja
sahf
inc
jecxz
ret
or
or
push
xor
sbb
in
sbb
cwtl
aas
pop
cmpsl
mov
mov
into
lea
sbb
mov
jo
fwait
stc
mov
mov
mov
lock
xor
imul
insl
test
faddl
outsb
and
sbb
add
insb
imul
xchg
shll
clc
xlat
loop
jecxz
mov
add
xor
arpl
sbb
add
jl
lcall
lods
popa
aas
xchg
mov
mov
push
leave
xchg
inc
and
pop
aas
mov
add
lret
push
call
mov
cmp
mov
mov
scas
cmp
stos
dec
inc
mov
neg
sbb
adc
rolb
aad
lods
gs
fst
mov
push
outsb
test
fcmove
xchg
ret
stc
rolb
add
lahf
xor
pop
pop
lret
es
dec
push
lds
cmp
lea
dec
sbb
dec
push
pop
push
das
fs
lret
movsb
cmp
adcl
jp
xchg
rcll
xchg
scas
mov
mov
std
sbb
popa
scas
adc
push
mov
sub
scas
pop
dec
test
rorb
inc
jmp
xor
sub
mov
lods
fstl
test
call
pop
jno
es
hlt
nop
inc
xchg
or
cmp
test
aam
out
pop
mov
mov
push
out
lock
sbb
dec
cli
push
mov
jmp
pusha
adcl
jo
adc
cwtl
bound
bound
jbe
fisubs
ljmp
xor
lahf
ficomps
cltd
and
mov
es
andl
push
scas
push
int3
fsubp
adc
adc
cmc
mov
frstor
int
xchg
jp
or
sbb
test
adc
sbb
loop
lods
inc
cmpsl
jecxz
in
leave
cmpsb
movsb
adc
push
dec
jl
stc
xor
in
cmp
add
addr16
out
out
aam
adc
adc
int3
loopne
fstpl
popf
mov
inc
imul
push
rolb
jo
mov
push
push
push
and
mov
iret
pushf
int
mov
jb
jo
icebp
dec
cmp
nop
adc
and
pop
js
xchg
loop
pop
arpl
mov
in
add
ss
dec
xor
jo
icebp
adc
inc
js
jne
push
xor
pop
addr16
mov
jb
pushf
jae
scas
ud0
aas
lods
shll
mov
fucom
push
ret
lea
shll
pop
jp
pop
cmp
ss
shl
loopne
and
mov
cmp
xchg
push
stos
or
int3
sti
sub
fcomip
pop
fldl
dec
add
dec
int3
fimull
int
sbb
jge
xor
inc
lods
fisttpl
hlt
or
mov
push
popf
mov
cmp
sti
push
call
dec
movsl
in
cli
adc
xchg
add
mov
addr16
add
dec
test
mov
xor
in
std
sub
out
aad
mov
imul
sub
xor
xchg
stc
and
repnz
dec
mov
clc
or
sbbl
out
wrmsr
push
xchg
lds
shl
repz
xor
mov
incl
adc
loopne
add
lods
xor
adcl
push
cmc
movsb
sbb
test
adc
test
dec
push
jp
add
lods
mov
jae
inc
inc
sahf
data16
and
or
ret
xchg
and
stc
adc
lcall
repnz
arpl
sub
dec
popf
xchg
dec
movsl
lahf
inc
scas
or
push
sbb
std
pop
ss
push
jp
sub
fiaddl
imul
or
and
xchg
out
sbb
sbb
imul
int
pop
and
icebp
mov
xchg
mov
sub
loop
mov
jae
mov
in
push
rolb
bound
sbb
fwait
out
sbb
inc
dec
jae
ret
sti
mov
imul
jecxz
sbb
fwait
and
mov
sbb
je
jns
inc
fdivs
mov
hlt
popf
stc
cmpsl
push
cmp
int
push
scas
sahf
mov
xorb
and
jb
push
mov
pop
rolb
ljmp
push
jnp
cmc
lea
adc
out
aad
loope
ret
popa
inc
cmp
lahf
push
pop
mov
in
stos
ja
jmp
cmp
pop
in
divb
sub
hlt
xchg
pop
sbbb
xchg
int
jo
cld
insb
inc
out
jp
jb
inc
mov
insl
ds
arpl
adc
shlb
jmp
in
cmp
ja
or
jg
push
and
cwtl
in
dec
iret
or
das
in
fisttpll
rorb
or
pop
adc
imul
rclb
push
adc
cld
mov
inc
and
sbb
scas
roll
push
lret
lret
enter
xlat
test
cmp
test
mov
popa
mov
call
or
cmp
cmpsb
daa
and
loope
mov
fildll
sub
imul
repz
xchg
popf
out
lahf
mov
adcl
mov
push
dec
aad
inc
xchg
jne
dec
inc
lret
popa
js
push
imul
nop
test
movsl
popa
sbb
lock
enter
shl
pop
jge
add
jg
sbb
cmp
xchg
nop
test
fstpl
pop
xor
cmp
xchg
fistpll
outsl
sub
fldt
pop
mov
jne
jns
mov
fisubl
lock
adc
push
dec
dec
and
cmc
pop
mov
sbb
cmp
add
in
loope
dec
xchg
mov
sbb
icebp
inc
aad
xchg
mov
in
ficoml
dec
daa
ss
ret
sub
jb
lods
cs
test
mov
fcmovb
cmp
adc
lret
or
inc
jb
arpl
pop
push
sarb
and
lods
popf
push
imul
inc
arpl
add
aaa
icebp
mov
dec
in
call
stc
jne
stos
xchg
inc
cs
pop
iret
cmp
into
pusha
frstor
or
leave
enter
loop
sbb
mov
sbb
daa
dec
subb
lds
imulb
lds
pop
js
fcompl
jge
cmc
fcoms
push
cltd
push
xor
cmpsl
enter
dec
pop
ds
sub
call
sbb
rol
cld
inc
cmp
and
into
mov
and
mov
mov
sub
popf
lcall
inc
rol
fsubr
xor
inc
data16
mov
dec
add
int
sub
jno
sub
imul
jne
shlb
fmull
fcomps
xchg
cmp
cli
push
loope
loope
mov
ret
or
lods
push
nop
dec
push
jge
sbb
lahf
pop
dec
imul
cwtl
jmp
ret
sbbb
sbb
das
or
in
adc
cmp
jb
sub
sbb
mov
xorl
ret
adc
and
xchg
ret
scas
fsubr
dec
loopne
and
ret
fstp
xrelease
dec
into
dec
rcrb
sub
arpl
lret
rcll
daa
into
mov
sbb
rcrl
pop
arpl
cs
or
je
out
jg
fimuls
mov
mov
cmp
cmpb
outsb
push
inc
or
push
pop
add
mov
sti
cmp
inc
fbld
add
fimuls
cltd
cmp
xchg
mov
push
xchg
mov
mov
ss
test
jnp
push
orl
jle
jo
stos
xor
inc
loope
pop
bound
pop
add
iret
shl
inc
xor
int3
bound
daa
add
mov
fwait
jg
cmc
inc
mov
out
fildll
movl
push
fsubrl
jg
jno
jnp
lods
pop
lret
inc
cwtl
cmp
sarb
add
fdiv
js
mov
cmc
popa
cmpsl
lcall
dec
js
mov
and
int3
cmp
and
adc
in
adcb
pop
adc
xlat
pop
cs
pop
mov
xchg
aam
sbb
sub
call
out
inc
orb
cmp
xchg
pushf
lods
data16
sub
enter
in
stos
lds
cmpsb
xchg
mov
sub
lods
stos
cmp
fisttpll
jae
out
iret
ljmp
rolb
xchg
sbb
push
andb
inc
and
in
xchg
inc
jbe
clc
fistpll
popf
scas
and
cwtl
or
pop
dec
js
pop
push
divl
jne
push
out
orl
pop
or
lahf
ret
add
xor
loope
add
lds
mov
inc
push
and
aad
xor
in
mov
sbb
jns
lods
popf
iret
stos
push
sub
insl
and
cmp
in
imul
or
dec
outsl
cmp
mov
xlat
sarl
aas
sbb
xor
pushf
rorl
in
and
int
push
xor
pop
das
das
jp
or
push
add
jmp
xor
call
flds
mov
or
in
imulb
and
jp
or
outsb
sub
and
adc
jle
add
arpl
ret
mov
cmp
xchg
fs
mov
and
loopne
test
jb
scas
pop
mov
jg
inc
fdivrs
sub
jbe
stc
enter
push
or
mov
addr16
push
cmp
mov
pop
xlat
mov
cld
enter
lahf
dec
jecxz
popf
pop
sub
or
jne
ljmp
push
mov
in
test
sbb
xor
sbb
hlt
mov
push
inc
pop
adc
mov
mov
adc
jge
inc
fsubrs
repz
sub
jns
adc
in
test
or
dec
cmpsb
int
jb
sti
fadds
repnz
test
fiadds
loope
mov
xor
das
adc
sahf
ficoms
out
in
push
cld
pushf
xor
dec
into
jb
mov
mov
jns
and
out
test
pop
jo
loope
incb
or
movsb
in
adc
call
add
pop
sub
pop
dec
and
mov
dec
xor
fs
sub
adc
jns
sbb
mov
push
cmp
or
xchg
xor
fnstenv
xchg
inc
cmp
mov
es
inc
insb
pop
ret
pop
shl
nop
cmp
pop
xchg
out
icebp
nop
ficoml
int3
cs
mov
inc
sub
fdivs
pop
cmovle
xor
pop
inc
mov
or
mov
jmp
jo
out
sbbb
shr
test
push
loope
ds
jmp
je
add
pop
jge
hlt
xchg
mov
enter
inc
mov
dec
jne
repnz
inc
push
push
insl
nop
inc
repnz
nop
movsb
add
adc
cwtl
rolb
call
cmp
mov
flds
xchg
mov
sub
scas
cwtl
popf
repnz
jo
les
and
or
and
in
or
push
push
jae
xchg
jle
test
clc
das
inc
mov
aas
into
hlt
add
aam
xor
push
lahf
fdiv
jle
imul
cmp
popf
dec
lcall
adc
jne
jmp
int
stos
int
aad
push
mov
jg
jb
inc
xchg
push
mov
data16
push
mov
sub
pushf
loop
gs
mov
lods
dec
xchg
pusha
jl
scas
xchg
cmp
sub
pop
sbb
and
pusha
inc
xlat
jnp
scas
jl
movsb
repz
mov
push
xor
sub
sbb
loopne
fcmovbe
stc
pop
fwait
jge
and
cmp
gs
lods
mov
adc
mov
mov
jno
mov
xchg
jnp,pn
in
push
pop
xchg
sub
arpl
pushf
sbb
cmpsl
sub
or
push
pushf
cmpl
daa
push
int
je
lahf
dec
insl
jno
jo
pop
mov
mov
or
add
cmp
sbb
pop
sub
lock
stos
inc
inc
or
inc
aas
sbb
mov
mov
data16
pop
aad
arpl
xchg
mov
add
push
push
into
dec
add
aad
add
add
add
mov
add
add
movsl
add
fwait
add
aad
add
add
add
add
add
add
add
add
xor
xor
xor
ret
add
add
add
add
add
inc
stos
add
ja
mov
incl
dec
add
add
mov
insl
add
add
add
adc
cmc
add
or
add
add
daa
adc
add
add
add
jb
add
add
add
sbb
sbb
sbb
sub
clc
sbb
add
jne
dec
pop
je
jb
outsl
inc
dec
and
push
ja
mov
inc
roll
out
xor
add
add
cmpsb
inc
mov
xor
add
cmp
mov
and
test
test
std
call
incl
lock
clc
push
pushf
adc
xor
sub
cmp
add
add
push
jmp
clc
mov
jge
push
push
add
call
add
ret
adc
decl
adc
test
je
rolb
sar
decl
dec
add
push
push
jne
test
add
ret
mov
movsl
test
stc
push
clc
push
add
adc
add
inc
add
push
xor
add
add
insb
add
add
add
mov
sbb
sbb
sbb
push
sbb
add
inc
outsb
outsb
add
adc
popa
outsl
inc
add
popa
imul
insb
push
jl
imul
popa
dec
insb
je
xor
je
loopne
gs
add
add
inc
je
add
add
push
inc
inc
inc
xor
add
add
movsl
pop
push
xchg
add
add
add
les
test
pop
add
sahf
push
mov
mov
pop
movsl
jge
mov
mov
int
adc
test
sub
pop
cwtl
adc
mov
out
testl
sbb
inc
mov
icebp
test
or
sbb
in
dec
mov
cmpsl
out
mov
scas
enter
dec
dec
jnp
pusha
and
add
mov
imul
jne
cli
mov
mov
mov
sbb
push
test
pop
ds
sahf
pop
nop
sub
js
dec
and
push
xchg
sbb
lahf
push
push
in
mov
push
ljmp
pop
mov
loope
icebp
inc
clc
mov
pop
out
pop
xor
adc
jo
repnz
ja
mov
adc
adc
xor
loopne
je
lcall
ss
lea
jmp
scas
clc
scas
inc
lret
loopne
into
icebp
or
jge
leave
dec
cmpsl
inc
cmpsb
lds
adc
add
sub
mov
loop
ficoml
aam
mov
adc
pop
sahf
xchg
inc
icebp
cmp
cmp
es
sub
mov
lret
add
int3
cli
rcr
leave
and
jne
jle
xlat
clc
mov
mov
cmp
inc
in
pop
dec
jmp
loopne
sbb
and
and
and
push
scas
push
sbb
sbb
xor
lock
push
imul
call
dec
or
jmp
aaa
and
rorb
dec
sti
cmc
xchg
jmp
xor
pop
lods
std
scas
roll
push
ret
outsb
mov
mov
pop
inc
shlb
insl
out
push
int
jae
outsl
mov
add
std
sbb
inc
decl
stos
fs
adc
leave
jp
stos
mov
push
jecxz
out
pop
aaa
sub
add
jbe
in
or
cmp
imul
lahf
push
loope
mov
sub
mov
dec
adc
push
xchg
fs
aas
lret
lret
push
arpl
add
inc
sbb
das
add
jnp
mov
sub
sbb
adc
add
xor
xlat
and
push
push
lods
data16
mov
mov
stos
mov
mov
in
cltd
stc
inc
decb
fwait
adc
sub
aaa
int
data16
mov
add
movsl
loopne
ds
xchg
mov
inc
adc
jl
int
fstp
outsl
mov
jns
sbb
sti
lret
push
iret
es
and
inc
mov
or
adc
mov
xor
and
cwtl
sub
scas
test
pop
test
insl
pop
xchg
aad
xchg
push
sub
add
xor
es
or
push
inc
push
pop
xchg
xor
adc
daa
cmp
lret
pop
jb
push
jnp
push
jno
ds
adc
inc
cmp
nop
shr
std
fidivl
cmc
mov
push
aam
mov
scas
lahf
and
jne
cmp
loope
mov
sub
fwait
dec
xor
mov
fistps
xor
pop
adc
and
xor
sahf
shlb
sub
ds
push
push
mov
xor
pusha
adc
popa
test
jns
sub
pushf
xchg
mov
jno
jg
pop
inc
xchg
inc
cmpsl
xchg
arpl
lods
mov
mov
cmp
or
inc
mov
xor
movsb
push
add
cmp
push
jnp
imul
std
ret
xchg
popf
into
inc
pop
xchg
mov
push
inc
clc
icebp
sub
mov
in
int
sbb
jmp
jns
aad
int3
popa
stc
nop
and
push
subl
frstor
imul
test
ss
pop
test
gs
jb
pinsrw
mov
gs
cmpsl
cltd
out
dec
inc
insb
sbb
mov
mov
movsb
and
cmp
je
lahf
cwtl
sarl
addr16
insb
test
xchg
jne
pop
shld
test
cmp
jo
lea
add
jecxz
call
dec
pmullw
insb
mov
sahf
fstl
stos
pop
mov
mov
sbb
popf
inc
push
push
je
sub
jnp
out
lcall
test
push
subl
cmc
fwait
and
dec
xor
mov
jmp
jae
sbb
aaa
pop
int
jmp
mov
xlat
jge
sub
dec
cmp
pop
pop
divb
cs
repz
jl
leave
mov
jbe
pop
enter
sahf
std
inc
pop
pop
xchg
subb
mov
int
xchg
ret
jp
mov
push
repnz
iret
mov
mov
cmp
pop
and
adc
fisubrl
push
aaa
sub
mov
cmovns
ss
push
dec
push
fiadds
sub
lea
jp,pn
pop
sub
outsb
iret
loope
adc
out
fs
pop
add
pop
jno
inc
push
dec
adc
jb
xor
incw
push
and
sbb
lret
inc
fistpll
lret
ljmp
pop
jns
test
jg
xor
jecxz
es
mov
sbb
cwtl
pushf
inc
xchg
call
cmpsl
push
jbe
dec
cwtl
fdivr
pop
jmp
fstpt
mov
adc
aas
js
mov
jg
imul
inc
outsl
cmp
pop
jns
sub
cmc
into
mov
pop
adc
cmp
pop
jge
andl
fstpl
pushf
popa
sti
pop
jecxz
and
pop
mov
std
mov
stos
inc
mov
push
inc
sub
lret
fiadds
xchg
adc
pusha
sub
outsb
repnz
xchg
push
and
sbb
adc
cs
pop
dec
aas
push
xchg
jae
dec
jg
rclb
push
fsubl
add
int
sbb
mov
or
cmp
pop
fisttpll
scas
data16
sub
mov
cmp
pop
adc
inc
jl
call
movhps
fs
dec
xor
push
loop
mov
pusha
add
or
pusha
sti
mov
xchg
dec
xlat
ljmp
cmp
push
aaa
cmp
stos
dec
and
pop
daa
pop
lds
jmp
or
mov
cltd
add
xchg
mov
and
add
iret
adc
in
lahf
mov
and
out
fimull
mov
mov
clc
or
push
bound
imull
loop
push
xchg
sub
clc
addl
dec
xchg
adc
add
andl
jnp
adc
pop
xor
sbb
mov
pop
jl
lcall
adc
stos
loop
lods
mov
push
inc
push
pop
loopne
mov
popl
daa
mov
sub
fidivl
sub
stos
iret
xchg
push
adc
test
stos
jne
cmp
fsubp
push
adc
shll
cs
or
jp
imul
inc
ljmp
inc
popf
fistpl
daa
lea
outsb
ljmp
mov
xor
jge
iret
adc
cmp
sbb
dec
aas
divl
pop
sbbb
js
inc
xlat
cli
and
js
sub
cltd
mov
mov
or
cltd
pop
test
adc
xchg
in
pop
mov
add
pop
adc
xchg
cld
inc
lcall
rclb
lret
sub
test
stc
dec
xchg
and
cmpsb
push
mov
sub
sub
dec
adc
movsl
jne
xchg
mov
call
pop
or
loope
xchg
sbb
addr16
and
add
aad
ja
xor
into
mov
or
pop
js
xchg
inc
call
sbb
ret
fwait
cmpsb
ret
push
and
aam
outsl
xor
idivb
les
mov
and
mov
jecxz
cli
loop
push
mov
fidivrl
mov
push
in
xor
scas
xchg
adc
pusha
je
dec
pop
mov
sbb
pop
sub
iret
pop
xchg
jle
mov
int3
jnp
xchg
adc
xchg
xlat
and
mov
jne
xchg
subl
mov
lea
sahf
in
push
test
inc
mov
fldcw
xlat
dec
push
adc
push
xor
cmc
sub
fwait
and
mov
ret
adc
cmp
xchg
jbe
rolb
int
test
adc
xchg
xchg
test
mov
push
test
mov
lahf
scas
push
adc
sbb
dec
or
pop
iret
mov
cli
xor
sbb
stos
xor
mov
clc
inc
stc
lea
fisubrs
ss
mov
xor
lret
sti
pop
jmp
pushf
std
out
pop
jmp
mov
lret
sbb
fcoms
xor
mov
fs
sub
or
jno
add
stos
ja
aas
aad
jns
push
addb
jmp
imul
xchg
pop
jns
add
dec
mov
sub
sub
push
push
insl
pop
xchg
jb
cmp
pop
jbe
xor
xchg
jb
call
call
fimuls
divb
adc
cmp
sti
push
mov
out
and
cmc
lcall
test
mov
lcall
and
jb
xchg
pop
lds
cmp
shlb
cmp
add
push
std
mov
sahf
sub
mov
inc
xchg
imul
mov
das
fldcw
in
std
stos
icebp
in
cwtl
int3
mov
daa
or
test
mov
jle
xchg
inc
adc
inc
xchg
sub
push
jmp
leave
cltd
cmp
inc
add
lods
xchg
xorb
cmpsl
stos
rcl
loopne
decl
pop
test
xchg
mov
push
pop
dec
insb
bound
and
xchg
fwait
xor
xor
xor
mov
xchg
cmpsl
push
sub
in
in
mov
fs
in
mov
cmpsb
lret
add
cltd
or
mov
jge
jmp
shrb
xchg
cmpsl
mov
outsl
into
aas
jmp
aas
lds
and
popf
sets
ds
sbb
or
push
addr16
mov
sahf
pop
cwtl
pop
shlb
mov
hlt
fimuls
jl
enter
mov
aam
jb
mov
das
jle
movsb
add
or
or
sbb
mov
or
add
fisttps
into
mov
or
lret
mov
mov
mov
aas
add
cmc
loop
inc
mov
outsl
pusha
jge
inc
mov
pop
and
lret
add
push
cmp
imul
dec
lret
xorl
int
gs
sbb
push
mov
inc
out
adc
mov
les
sub
loopne
mov
in
xor
sub
div
inc
fst
adc
sti
out
xor
loope
inc
ficompl
xor
vhsubps
adc
nop
aas
aas
inc
fadds
push
cli
incb
outsl
cs
addr16
jp
jp
sbb
fwait
enter
inc
fnstcw
sbb
dec
push
jae
push
rcrb
pop
lret
popf
scas
scas
ljmp
inc
outsl
aas
pop
pop
push
pop
sbb
aam
daa
add
add
pop
fldl
push
pop
jb
mov
mov
and
stc
sub
cmp
test
xchg
and
ret
sti
xor
loopne
lcall
mov
dec
pop
inc
sub
and
mov
arpl
shrb
inc
ljmp
in
outsl
dec
mov
cltd
jno
rolb
mov
jp
aad
mov
fcmove
fistpl
movsl
mov
inc
sub
lret
dec
xchg
xchg
and
idivb
xchg
mov
ret
jmp
fucomip
cmpsb
insl
xchg
out
fcompl
push
cmp
imul
and
stos
ret
ljmp
jnp
xor
stos
and
cmpsl
adc
xchg
les
and
fwait
and
lea
lea
mov
sarl
mov
sbb
ficompl
lock
sti
fwait
jb
sub
daa
std
or
add
mov
pop
push
xor
or
test
xchg
push
leave
out
or
cltd
add
xor
ss
sbb
or
repz
arpl
imul
add
addb
ds
je
jb
inc
add
es
push
adc
jge
icebp
psubq
sub
xchg
fwait
sbb
pop
addr16
ss
jne
push
mov
or
and
outsl
push
test
adc
or
jl
jl
xchg
pop
add
mov
and
adcl
mov
clc
xchg
push
xor
in
jecxz
lods
iret
mov
loop
mov
into
sarb
je
int
xchg
cwtl
mov
shl
push
cmp
xchg
cmp
nop
mov
pop
mov
add
and
adc
clc
fucomip
mov
dec
xor
movsb
out
or
xor
lret
dec
ret
jmp
cmc
lret
push
xchg
cmp
popa
ret
pop
inc
or
dec
rorl
cmc
rcl
fldcw
or
popa
xor
ret
testb
call
jb
add
lods
mov
les
jmp
xor
sbb
es
xchg
jne
cs
rcll
mov
mov
mov
in
mov
xlat
cmc
lock
or
pop
adc
xchg
push
jb
jno
mov
lret
xlat
inc
shrb
sub
ss
outsl
in
push
rcrl
mov
or
xchg
or
push
xor
mov
jg
push
push
cmp
js
add
icebp
out
ret
out
xchg
scas
pop
es
sub
insl
inc
incl
test
sub
xlat
leave
sbb
mov
xchg
lahf
ss
jnp
sbb
mov
lea
adc
jae
push
fidivl
sti
inc
sbb
js
cmp
pop
mov
js
or
jge
pop
or
cmpb
and
movsb
push
sbb
mov
enter
adc
arpl
fidivs
lea
and
je
push
xchg
js
xchg
push
popf
dec
adc
mov
pop
inc
sbb
inc
adc
hlt
ficoms
xchg
pop
andl
sbbb
int
adc
pop
popf
mov
ljmp
out
push
cmc
and
sub
adc
fisubrl
mov
sub
mov
gs
xor
dec
outsl
mov
outsb
stos
scas
ret
lods
inc
test
pop
popf
dec
arpl
ret
ja
dec
idiv
and
andb
mov
jmp
pushf
pop
mov
mov
repnz
test
jb
insb
dec
repnz
and
xchg
fidivs
and
xlat
sbb
inc
add
pop
lea
or
aas
xor
inc
clc
ljmp
sub
divl
out
into
xchg
dec
lahf
dec
cmc
fimull
sbb
movb
push
xchg
std
outsl
xor
rclb
push
outsb
sbb
add
jp
lahf
sti
sub
push
push
and
push
cmpsb
mov
fptan
add
insb
inc
cmc
adc
or
addl
cmpsl
pop
imul
push
adc
lds
jmp
pop
pusha
adcb
loop
mov
aad
loopne
push
mov
sarl
daa
and
inc
xchg
cmp
in
or
xor
dec
test
repz
stc
xor
shr
fwait
cld
add
std
imul
imul
loopne
scas
rol
mov
jmp
inc
andb
pop
cwtl
rolb
jnp
roll
mov
dec
cli
xchg
pop
jae
in
pushf
pop
aaa
sub
mov
mov
repnz
push
loope
je
aam
divl
and
push
outsb
addb
jmp
cwtl
imul
mov
add
dec
push
je
dec
vprotw
or
addr16
arpl
sub
test
lock
xchg
cmpsl
insb
stc
cld
aad
aas
jb
aad
scas
es
cmc
enter
rol
sub
xchg
cmpsl
loope
jl
or
rcrl
mov
movsl
rcrl
movsb
ss
xlat
ret
mov
push
mov
xor
mov
daa
sub
in
sub
mov
inc
int3
mov
jp
jg
cli
cmp
pop
xor
ljmp
insl
adc
sbb
push
int3
fwait
into
stc
shl
and
add
mov
loop
mov
xor
out
int
add
loopne
iret
stos
js
jmp
aaa
stos
dec
movd
dec
jp
icebp
fidivrl
jnp
cwtl
dec
mov
addr16
mov
xchg
sub
stos
gs
cli
mov
xor
loop
outsl
pop
insl
hlt
lea
sub
das
push
int
or
scas
adc
in
int
and
mov
mov
insb
mov
or
mov
xor
testl
mov
inc
ret
jb
inc
add
inc
adc
adc
push
mov
stos
lock
jl
push
outsb
ljmp
cmpb
pusha
mull
repz
and
push
mov
mov
test
test
adc
push
mov
psubq
xchg
push
inc
ret
pusha
pop
adc
sti
pop
fdivrs
bound
gs
ret
stos
bswap
push
out
pop
add
cld
subb
mov
test
sbb
out
pop
push
dec
mov
sbb
pop
sbb
adc
enter
mov
ret
ret
repz
jecxz
pop
mov
adc
jl
test
js
push
shl
jns
mov
inc
or
dec
dec
mov
iret
xor
repnz
jns
jno
cmc
xor
cmp
lret
lahf
popf
scas
in
lods
sub
aam
adc
inc
les
or
or
add
adcb
pop
insb
jl
fimull
das
jmp
dec
outsl
xlat
dec
jl
loopne
xchg
xchg
push
and
adc
rol
aaa
xchg
cmp
lock
mov
test
pop
bound
testl
loop
xchg
fucom
mov
jl
stos
inc
ret
sbb
hlt
clc
push
sub
adc
push
scas
in
lods
dec
adc
jae
lock
ja
push
sarl
paddd
pop
and
xchg
fs
ljmp
add
jmp
loopne
inc
pop
sub
jl
fs
pop
cmp
mov
out
insb
xor
adc
int
add
mov
rolb
sbb
sbb
sahf
sbb
or
mov
jbe
hlt
lret
mov
pushf
cld
out
sbb
std
adc
sbb
add
add
test
add
add
out
add
add
adc
add
push
push
add
add
add
add
add
or
add
add
sahf
lds
xor
add
add
add
add
add
add
jne
rolb
ljmp
ja
mov
jg
lcall
add
add
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
aad
add
add
xchg
aad
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
add
loopne
add
in
aad
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
add
rcl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xlat
add
push
xlat
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
flds
add
add
mov
add
test
add
jl
add
je
add
insb
flds
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rcr
add
add
lock
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
fiaddl
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
fildl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
fildl
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
