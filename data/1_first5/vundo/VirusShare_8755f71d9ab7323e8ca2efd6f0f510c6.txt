jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
xor
arpl
push
mov
add
pop
or
pop
add
loope
xor
mov
xchg
add
add
add
add
popa
add
add
add
add
icebp
add
test
xchg
add
add
or
outsl
add
add
add
mov
insl
add
add
add
popa
add
xchg
add
add
jnp
repnz
add
add
add
add
pop
popa
add
add
add
add
add
add
add
add
add
scas
add
add
add
inc
add
add
add
add
mov
sahf
add
xchg
add
adc
movsb
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
scas
add
add
cmp
test
insb
add
add
scas
add
add
add
xchg
add
add
add
add
add
add
add
add
push
add
push
add
add
jg
and
add
add
xchg
add
add
add
scas
add
add
pop
add
add
cltd
add
add
add
add
add
gs
add
popa
add
add
add
add
add
add
add
xor
movsb
push
push
add
add
add
add
xchg
add
add
add
add
push
add
sub
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
das
add
add
sbb
xor
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
rolb
add
add
add
add
mov
add
inc
push
xchg
add
add
add
lods
add
and
outsl
add
add
add
jecxz
mov
and
push
add
mov
scas
add
add
lcall
add
add
add
and
inc
add
sub
scas
add
push
add
add
and
and
insl
add
push
add
add
add
add
add
add
in
add
add
add
pop
add
add
add
add
add
imul
jecxz
flds
pop
add
push
add
add
mov
add
xor
add
add
add
add
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
mov
add
inc
add
add
add
add
mov
sahf
add
scas
add
add
mov
movsl
add
mov
adc
sahf
add
add
add
add
add
mov
out
aad
sbb
das
mov
jge
jae
and
inc
call
pop
sub
jge
ret
hlt
loope
out
das
xchg
push
in
cld
dec
dec
popf
adc
pop
mov
stos
jbe
mov
sbb
add
xchg
and
popa
movsl
and
mov
jbe
inc
insl
ret
mov
ret
xchg
cmc
repnz
mov
jp
in
sub
xchg
aad
lcall
stos
cmp
push
mov
xor
pushl
push
sbb
sub
adc
and
mov
imul
mov
push
cltd
dec
push
mov
gs
filds
aas
jmp
mov
cmp
gs
xor
push
and
and
aas
dec
sub
push
mov
pop
add
lods
insb
mov
push
mov
mov
xor
call
mov
and
jl
and
lods
mov
or
xor
pop
and
push
jge
dec
test
jnp
inc
fadd
fnsave
or
mov
mull
cltd
mull
insl
cmpsl
cmp
stos
mov
sub
jl
jmp
pushf
loopne
std
fs
pushf
xchg
outsb
pusha
xor
push
add
dec
xlat
cmp
pop
push
int3
cmpsl
mov
mov
mov
adc
mov
xlat
mov
add
dec
loope
mov
and
icebp
dec
pop
or
push
cmc
push
mov
adc
adc
adc
xchg
iret
add
lahf
push
lea
dec
imul
jecxz
fsubp
jno
inc
inc
inc
cmp
and
or
or
jnp
push
cmp
xchg
mov
lret
movsl
fistl
mov
arpl
xor
sbb
or
add
add
and
inc
mov
in
lock
sub
xchg
mov
cmpsb
mov
xchg
jge
arpl
mov
andl
mov
imul
xchg
adcb
test
push
sbb
ret
mov
adc
lock
jmp
xchg
int3
int
in
adc
or
mov
pop
pop
test
shl
iret
lds
pop
mov
pop
jg
addr16
out
fmuls
jge
add
cltd
jae
sbb
jno
stc
insb
jmp
scas
shlb
adc
dec
inc
pop
mov
cwtl
fildl
sahf
adc
mov
sub
mov
adc
fs
popf
inc
adc
leave
adc
fisubl
or
or
shlb
scas
sub
iret
aas
mov
aas
addr16
adc
cltd
adc
jae
ss
or
pop
mov
and
lods
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
shl
or
cmp
stos
xor
ds
mov
jno
add
adc
xor
xor
rcrl
or
cmp
sub
jp
push
push
lcall
add
xor
fmuls
jmp
jbe
xchg
mov
pop
inc
jb
ds
flds
lea
jge
ljmpw
loope
xchg
insl
xchg
shll
mov
cltd
stos
xor
js
ljmp
add
pusha
dec
xchg
stos
pop
xchg
mov
cmp
les
mov
and
into
sbb
movlps
mov
inc
or
loope
pop
scas
mulps
cld
daa
add
in
lret
xor
rcr
sbb
sub
xchg
jle
nop
and
mov
lret
ficoml
push
fistl
xor
xchg
subps
insb
imul
paddsb
push
leave
xchg
lcall
adc
fsubrp
and
cmpsb
sub
adc
xchg
leave
push
cmp
loop
inc
and
and
xor
sbb
cli
loope
icebp
and
mov
dec
dec
jns
push
xor
cli
xor
jns
add
mull
inc
fdivrl
ret
add
pop
mov
pop
orl
mov
pushl
popa
fbstp
int
mov
push
fwait
push
andl
xchg
dec
mov
lcall
add
adc
and
xor
rcrl
or
cmp
sub
jp
push
lcall
add
adc
and
xor
rcrl
fstpl
addb
ret
in
ret
js
leave
add
jb
dec
aaa
test
mov
ljmp
aas
arpl
imul
dec
sar
in
repz
out
out
sti
imul
lods
xchg
fsub
jne
add
ret
cmp
dec
mov
dec
fbld
pusha
cs
cmp
ret
push
les
je
lret
sarl
xchg
pop
std
jbe
inc
outsl
lods
cmc
sbb
in
cmpsb
mov
lods
rclb
cli
test
add
cmp
xor
sub
bound
fidivs
call
xor
cmp
cmpl
mov
dec
sub
pop
sub
mov
popf
fdivrl
sahf
mov
repz
outsl
cmpb
push
shl
mov
and
out
cmp
inc
dec
into
cmp
jmp
cltd
out
xor
lahf
pop
sbb
mov
adc
xor
jecxz
imul
call
lcall
cld
sbb
int3
xorl
mov
pop
mov
xchg
pop
in
mov
popf
lods
push
cmpsl
stos
dec
sbb
rorb
lahf
mov
mov
js
mov
mov
insl
xchg
les
jbe
jmp
fdivs
sbb
mov
and
pop
mov
mov
or
sbb
cmc
out
and
pop
adcl
push
xor
inc
into
push
xchg
pop
sbb
in
jecxz
and
inc
sbb
adc
or
shlb
sub
popa
iret
in
outsb
fcmovbe
inc
cltd
cmpsl
daa
in
fs
dec
ljmp
subl
ss
jecxz
sbb
push
frstor
sbb
movsl
int3
push
xor
sbb
aad
out
fildl
daa
lret
adc
movsb
hlt
sahf
imul
mov
xchg
fistpl
shll
popf
adc
mov
jns
mov
cwtl
or
jg
pop
push
fstpl
dec
pop
sbb
push
and
fsub
cmp
mov
cmpl
mov
je
repnz
sbbl
je
pusha
adc
push
cmp
or
xor
std
outsl
daa
and
pop
push
push
nop
xchg
lds
and
pop
mov
cmp
adc
mov
icebp
fidivs
outsb
push
xor
mov
cs
mov
dec
push
sub
shll
push
ja
mov
notb
mov
xchg
and
cli
cwtl
int3
sub
jg
shll
lret
lret
push
lock
pop
fnstenv
ficomps
rcll
jae
ljmp
sti
mov
cmp
mov
push
nop
inc
clc
adc
sbb
mov
jo
xorl
or
mov
sarl
ucomiss
fbld
aad
leave
push
xchg
pushf
pop
test
rcrl
fwait
xchg
out
sbb
add
adc
dec
jg
mov
mov
inc
movsb
enter
rclb
cmp
sub
inc
loope
xchg
test
sub
scas
dec
mov
inc
pop
gs
mov
bound
jbe
cmp
mov
pop
jmp
bswap
pop
data16
pop
int3
push
xchg
lret
sbb
dec
jb
add
lds
xlat
or
dec
pusha
mov
and
cwtl
arpl
dec
stc
jge
inc
jae
lods
xor
shll
inc
ds
fsubrp
and
mov
out
loopne,pt
sarl
jnp
imul
rolb
dec
xchg
les
mov
and
fnstenv
push
add
pop
dec
lret
cmpsl
jno
jmp
cmp
mov
sbb
test
insb
test
cmp
addr16
mov
xchg
jg
in
stos
rol
push
jge
int
jecxz
mov
or
out
fwait
stc
lcall
xchg
pushf
or
and
dec
sub
pop
cmp
xor
outsb
xchg
cmpsl
outsb
pop
xchg
pop
lret
jle
mov
gs
rcr
stc
aam
and
or
cld
fisubs
aas
push
movsl
mov
lahf
pop
sub
dec
inc
shrl
out
lds
mov
daa
daa
adc
movsb
push
pop
adcb
daa
andb
inc
out
or
pop
pop
push
xchg
arpl
sbb
mov
xor
cmp
add
ret
shrl
dec
jno
or
in
cli
lock
les
push
pusha
test
and
pushf
imul
mov
out
scas
aas
imul
xchg
ret
sub
adc
frstor
and
into
scas
imul
cmp
jmp
jb
shll
shll
ret
faddp
popf
jl
push
push
xor
and
lds
into
scas
insb
and
mov
fsin
fcos
sarl
data16
pop
mov
notb
xor
or
xor
in
or
test
ds
addr16
bound
sub
push
cmpsl
nop
mov
mov
pop
xchg
add
jle
test
leave
pop
notb
sar
add
push
pushf
add
cs
cmpsl
test
add
mov
inc
jne
adc
pop
xchg
xchg
xor
jb
lods
and
fwait
test
sbb
sub
xchg
mov
int3
bound
dec
jl
mov
mov
adc
jp
dec
xchg
pop
movb
cmp
inc
jle
jne
push
sub
sbb
xchg
fcoml
lea
xchg
mov
popa
add
mov
int3
faddl
dec
fdivrl
aam
mov
sbb
push
or
pop
inc
js
ret
fists
add
xor
outsl
arpl
mov
jp
pop
clc
jmp
lods
in
pop
ljmp
leave
pop
lret
je
mov
hlt
pop
call
xlat
in
mov
sarb
daa
mov
pop
cmp
jns
jge
repz
out
shlb
ret
lods
push
fs
imul
mov
stos
inc
insl
in
and
push
mov
sub
lret
outsl
in
in
sbb
sub
inc
sbb
add
loop
xor
call
fsubrs
incb
ret
push
jecxz
fsubl
or
or
add
mov
enter
fwait
andl
adc
ror
mov
mov
mov
or
out
push
add
sub
cmc
je
shll
bound
and
xor
inc
sub
and
loop
cwtl
adc
xchg
xor
inc
mov
loope
rcrb
sbb
jns
dec
aas
jecxz
cltd
mov
pop
stos
mov
loope
and
sub
sbb
and
leave
or
fnsave
xchg
add
add
mov
jle
aas
adc
mov
sti
xchg
std
or
cmp
rcll
xor
push
adc
adc
decb
pop
xor
sub
xlat
sbbb
adc
pop
leave
icebp
movsb
adc
cmp
gs
push
call
mov
data16
inc
test
push
inc
gs
pop
or
and
cs
nop
mov
sbb
repz
pop
ds
sbb
dec
jecxz
mov
in
mov
and
dec
pop
xchg
mov
and
push
das
clc
add
outsb
nop
adc
push
xor
xor
pop
addb
add
mov
pop
js
mov
mov
data16
shll
dec
mov
xor
pop
negl
das
data16
add
jg
imul
add
mov
andl
lock
push
and
push
add
adc
inc
fidivl
add
sbbl
xor
mov
out
popa
in
jg
cmpsl
push
jl
aaa
sbbb
inc
insl
xor
xor
lods
sub
daa
sti
dec
pop
jb
adc
outsb
cmp
inc
jl
and
add
mov
dec
cli
fmuls
mov
and
dec
mov
js
mov
push
add
jnp
ret
pop
inc
mov
addr16
rolb
or
adc
push
pop
das
cmp
xchg
inc
fs
sbbb
dec
lret
lods
cmp
jae
mov
pop
sub
mov
push
repz
or
repnz
cs
adc
fwait
and
mov
mov
or
popa
dec
mov
inc
adc
sub
push
mov
fisttps
stos
sub
flds
lea
cwtl
and
cmp
mov
jne
frstor
das
in
push
adc
push
out
mov
inc
repz
pop
leave
repnz
push
jno
sub
lds
cltd
ret
cmpsl
shll
push
mov
inc
cmp
dec
push
mov
cmp
stos
rcll
cltd
sahf
icebp
das
cmp
cs
cmp
cmp
insl
push
jmp
or
out
xchg
jp
popa
push
mov
or
add
sbb
or
popa
repnz
pop
mov
lahf
mov
movsb
rorb
js
mov
mov
test
adc
sahf
sbb
or
shrb
sub
fs
mov
insl
adc
push
cmp
xchg
test
fsubr
inc
ficompl
ljmp
in
jp
sti
movsl
jg
fcomps
faddp
adc
mov
xor
push
fnstsw
sub
adc
pop
push
pop
mov
xchg
fucom
mov
rcr
hlt
stc
or
xchg
stos
mov
sti
cwtl
repz
test
sub
je
test
js
adc
mov
stos
push
dec
inc
inc
inc
and
fwait
or
mov
enter
cmp
lret
and
and
jmp
sub
sbb
loop
jbe
dec
lahf
or
xor
mov
pop
mov
sub
cs
push
pop
movsb
adc
std
jno
inc
lahf
stc
push
cli
mov
xor
cmpsl
loope
mov
leave
stc
xchg
xchg
dec
push
add
pusha
mov
jecxz
neg
fimuls
les
gs
dec
jo
adc
pushw
push
xchg
test
mov
mov
clc
ds
mov
and
loopne
aam
mov
jne
int
scas
cltd
xor
xchg
mov
call
sbbl
xor
xchg
orl
fidivrs
inc
dec
jnp
push
adc
jbe
inc
xchg
push
popa
repnz
mov
aam
fdivrl
adcl
cld
mov
arpl
push
in
sub
aas
cmp
shrl
and
shl
shll
mov
in
rcrl
scas
xor
xor
out
adc
sub
int3
jb
push
xchg
repnz
stos
xorl
aad
scas
mov
pop
pop
inc
lock
out
push
xchg
mov
mov
xor
xchg
cmpsl
xchg
pop
inc
mov
ss
cltd
loop
cmp
sub
add
aam
mov
jns
pop
push
jo
testl
inc
shlb
rorb
sbb
mov
mov
xor
hlt
jmp
jmp
in
jb
or
pop
bound
mov
imull
cmpsb
dec
shl
fidivl
cmp
imul
icebp
mov
loope
lds
push
imulb
jae
repz
xchg
mov
in
mov
xor
xlat
pop
inc
mov
inc
ret
inc
push
cltd
jge
pop
shlb
or
cmp
out
mov
mov
push
data16
cmp
jge
faddl
roll
je
inc
fsubl
xor
cli
sbb
add
jmp
lds
int
sub
test
popf
sub
pop
fwait
jae
adc
sbb
int
mov
daa
loop
mov
jecxz
xchg
cmp
daa
sbb
jnp
pop
mov
sbb
aam
dec
mov
xor
test
pslld
fcoms
cmpsl
xorl
xor
jmp
xchg
xlat
mov
faddp
outsb
int3
dec
test
fwait
push
cmp
inc
cs
mov
lock
int3
and
test
xor
inc
inc
idivl
cmpsb
xchg
or
nop
daa
mov
jg
test
jmp
add
adc
popa
sti
xchg
lret
sbb
adcl
inc
fdivrl
arpl
call
jno
xlat
shrl
cmpsb
lahf
lret
lahf
adc
mov
cmp
popa
adc
jae
cmpsl
adcb
sub
in
loopne
rol
inc
test
cli
push
test
mov
or
fldenv
data16
fiadds
outsl
sbb
mov
stos
insb
xchg
push
loop
int3
aam
xchg
and
push
jmp
shlb
mov
cltd
icebp
out
ja
in
ret
mov
test
mov
hlt
push
adcb
sub
je
push
push
xor
lahf
dec
dec
cltd
pushf
cltd
popa
push
out
jge
xchg
xchg
xchg
rorl
lahf
inc
into
dec
std
lret
mov
pop
and
int3
scas
sub
sarb
adc
in
mov
hlt
pop
mov
cmpsl
aas
test
add
aas
dec
mov
inc
je
je
dec
pop
push
lds
and
subl
mov
or
and
sbb
inc
jecxz
imul
in
pusha
push
test
adc
cmp
mov
clc
arpl
out
pop
insl
inc
sti
lds
mov
or
iret
dec
cmpsb
mov
js
arpl
gs
xchg
repz
movsb
sar
xorb
jns
in
les
test
or
in
cmpsb
dec
rorb
fdivrs
mov
data16
jo
push
dec
nop
mov
in
popf
or
pop
rclb
ret
iret
scas
sbb
mov
sbb
xor
pop
sub
xchg
xchg
mov
mov
lods
dec
push
rol
pushf
mov
sbb
fnstenv
into
scas
cmp
xor
xchg
out
pushf
shll
test
es
xor
jno
cmpsl
pusha
push
or
xlat
sbb
lods
cmp
jmp
insl
pop
inc
pop
mov
dec
lock
cwtl
jge
add
sub
mov
mov
fdiv
mov
sbb
xchg
cli
mov
mov
inc
pop
cmpsb
fprem1
push
cmpsb
jg
jb
jns
fidivl
test
add
mov
push
mov
sbb
scas
xchg
and
test
cmpsl
dec
in
dec
test
mov
jge
cmp
jb
sbb
mov
movsl
mov
in
lret
lock
push
js
pop
scas
mov
dec
sahf
mov
das
adc
sub
es
test
inc
push
fsubrl
or
adc
pusha
or
cltd
aad
lahf
sbb
sar
push
jnp
adc
cmp
out
out
xchg
jo
cmp
mov
insb
sub
mov
inc
mov
in
pop
shll
popf
fs
imul
addr16
popa
and
imul
cmp
xchg
es
data16
bound
pop
xchg
imul
pop
dec
out
das
out
clc
stos
outsl
jae
cmp
mov
enter
sbb
sub
mov
loope
iret
push
sub
enter
pop
mov
sbb
std
dec
fcomip
pop
inc
inc
test
mov
out
and
mov
dec
push
and
add
in
dec
pop
lcall
sub
fsts
inc
out
push
cmp
push
xchg
xchg
data16
leave
lea
notb
test
fldl
bound
sub
mov
mov
sub
ljmp
into
mov
test
sub
push
stos
in
addl
repz
data16
push
xchg
sub
sbb
inc
and
aaa
pop
out
pusha
outsl
mov
in
xchg
cld
push
mov
mov
mov
pop
stos
or
mov
loopne
sti
orb
xor
test
xchg
jp
inc
in
mov
in
stos
cmp
or
popl
mov
sti
popa
int3
push
mov
pop
push
shrl
mov
in
lods
mov
sbb
ffreep
xor
pop
add
cmpsl
lods
mov
add
jnp
inc
push
lcall
fsts
xor
sub
mov
ret
call
push
gs
mov
sbb
fxam
xchg
inc
and
push
dec
xor
ss
clc
cmp
shlb
sarb
das
xor
cmp
inc
jnp
cltd
std
xor
dec
ss
mov
les
xchg
xor
insl
adc
push
or
pop
mov
loop
or
inc
stos
out
popf
sbb
sbb
xchg
pop
insb
push
fcmovnb
push
subb
mov
jl
lret
pop
repz
pusha
or
popf
mov
add
filds
rolb
int3
inc
add
imul
ss
jbe
mov
out
cld
testl
or
cmp
or
loop
lock
push
insl
lds
jbe
loopne
hlt
add
insl
xor
loop
sub
xchg
insl
test
cmp
adc
mov
cwtl
loopne
jb
imul
jp
jp
ret
and
cmpsb
mov
pop
adc
or
fcmovnbe
pop
jmp
fidivrl
xchg
clc
rorl
outsb
mov
cs
leave
sbb
push
cltd
inc
jns
cld
jo
sub
cmovae
lds
xor
xchg
and
or
test
sarb
sub
jne
sbb
fimuls
mov
shlb
clts
lahf
cmp
dec
pop
nop
fwait
inc
mov
pop
es
adc
cmp
shlb
mov
jns
popa
xor
fstpl
or
inc
jo
add
popa
and
add
or
out
movsl
dec
dec
clc
popf
xor
into
ret
mov
jmp
sbb
lret
and
out
outsl
inc
insb
iret
mov
repz
xchg
add
add
movsb
sub
out
scas
push
xchg
jb
adc
add
push
loope
jge
mov
push
lock
test
sub
aas
and
push
int
jg
add
fistps
ja
inc
int3
dec
mov
mov
cmp
dec
xchg
xor
into
cmpsl
movsl
and
sti
out
test
dec
in
test
sbb
sbb
ja
cs
jns
push
jmp
shrl
fiaddl
mov
mov
adc
imul
into
bound
sub
xor
dec
and
push
js
inc
or
jge
push
and
mov
xor
lahf
mov
mov
adc
add
add
adcb
xchg
push
sbb
std
cmp
scas
aam
push
dec
mov
xor
mov
stc
xchg
add
adc
test
mov
rcll
jne
lret
cli
out
sub
xor
movb
inc
gs
inc
scas
xchg
pop
jg
mov
shl
popf
clc
mov
fldcw
insb
cmp
sub
jecxz
pop
mov
mov
movl
mov
push
outsb
mov
sub
adc
sub
icebp
add
sbb
cmpl
clc
fiaddl
adc
iret
movsl
cmp
mov
bound
mov
pop
jae
inc
mov
mov
or
decb
imul
mov
mov
jns
lea
lret
and
stos
jnp
xor
mov
adc
sar
sub
inc
xchg
mov
jmp
fisubs
jecxz
fsubs
or
and
add
rorl
inc
pushf
mov
leave
movsl
dec
pop
pop
arpl
inc
jl
scas
or
es
aad
xchg
aad
jp
xor
ja
ja
nop
adc
sub
movsb
in
nop
das
sub
sbb
jo
jnp
mov
je
sub
mov
xor
das
add
rcl
lods
cmpsl
sbb
imul
sub
pop
inc
or
sbb
nop
lock
outsb
mov
adc
bound
addr16
jle
inc
or
jmp
xor
into
inc
dec
mov
and
dec
aas
mov
sub
lds
gs
jo
leave
push
dec
sarb
cmp
inc
arpl
dec
xor
stos
shrl
cmc
fs
adc
mov
push
pop
fdivl
ss
ret
mov
fidivl
into
out
jo
dec
and
mov
jmp
jns
sub
fisubrl
dec
imul
popf
mov
mov
mov
pop
ficomps
sub
sub
inc
out
jp
inc
lods
xchg
sbb
popf
dec
out
sub
jmp
icebp
sub
jp
push
lcall
add
adc
and
xor
rcrl
or
cmp
sub
jp
push
lcall
add
adc
and
xor
rcrl
inc
loope
icebp
sub
jp
push
inc
push
mov
jno
add
adc
and
xor
rcrl
or
cmp
sub
cli
xor
gs
and
mov
cltd
xor
loopne
add
nop
jecxz
xchg
sahf
mov
and
adc
jge
dec
inc
pop
push
movsl
mov
popf
nop
in
loopne
lock
fst
jge
cmp
adc
sbb
inc
pop
push
ja
cmp
nop
std
loopne
lock
and
insb
imul
dec
xor
adc
and
popf
leave
in
jl
es
xor
cmp
add
xchg
inc
mov
cmp
mov
xchg
adc
mov
int3
pop
fsubrs
add
adc
mov
shrb
ja
cld
gs
jnp
in
insl
loopne
into
repnz
lock
mov
pop
lds
in
loope
loopne
sub
cmpb
outsb
and
loopne
jg
pop
mov
inc
dec
jb
pop
insl
adc
jle
mov
xchg
xchg
gs
xor
cld
push
and
inc
sub
sub
cmp
pusha
sub
push
aad
lds
or
sbb
test
push
dec
push
sahf
mov
icebp
nop
in
loopne
lock
gs
and
adc
inc
cmp
lret
arpl
repz
orl
mov
pop
outsb
jl
add
adc
cmp
sbb
lret
movl
jl
push
prefetcht2
cmp
mov
std
hlt
fsub
test
std
lock
fst
sub
add
jo
inc
pop
push
lods
mov
popf
nop
in
loopne
lock
fst
sub
add
jo
inc
pop
push
lods
mov
ret
and
inc
push
xchg
sbb
test
inc
xor
dec
test
jp
add
fstl
outsl
jmp
add
and
dec
and
pop
fidivrs
jg
daa
scas
xchg
push
pusha
daa
popa
fbld
pop
adc
lret
pop
rcll
fs
xor
jae
data16
repz
xor
inc
or
mov
inc
mov
and
xor
addl
in
xchg
clc
dec
nop
dec
call
and
mov
fmuls
push
aam
lods
test
cmpsb
mov
ret
dec
jae
add
jo
or
cs
cmp
xchg
int3
rorl
mov
enter
jae
repz
dec
stos
inc
roll
xor
mov
mov
xchg
dec
mov
mov
pusha
pop
ljmp
sar
or
pop
shrl
das
lea
pop
loopne
lea
hlt
and
mov
mov
cltd
shl
dec
loopne
sub
dec
aaa
mov
xchg
mov
push
push
xchg
mov
arpl
push
je
jne,pn
repnz
icebp
add
adc
sbb
sbb
stos
insl
adc
imul
pop
ficompl
mov
in
lahf
loop
mov
repnz
xchg
icebp
ljmp
push
mov
mov
add
sti
aas
mov
movsl
imul
xorb
pop
dec
mov
add
xchg
ret
cmp
pop
mov
push
sbb
lret
into
in
cmp
jnp
sub
int3
and
cmp
mov
cwtl
bnd
mov
mov
mov
daa
leave
and
xorb
and
xor
loop
repnz
in
jne
push
push
mov
mov
int3
shrb
mull
cmp
cmpsb
call
cmp
in
daa
push
push
xor
cmp
pop
pop
insl
adc
mov
jb
ret
add
jae
xchg
roll
inc
push
mov
movsb
ret
flds
pop
rcrl
xchg
leave
fnsave
pusha
movsb
xor
es
outsb
dec
xor
outsb
adc
jb
pop
aaa
mov
sahf
mov
call
pop
imul
std
push
cmp
pop
adc
mov
leave
test
push
movsl
sbb
dec
lcall
dec
and
dec
negb
push
xchg
lret
adc
rcrb
scas
repnz
cmp
pusha
lds
pop
jl
das
xor
cmc
clc
pop
mov
fcoml
jge
or
jne
out
cltd
pop
mov
add
aam
sub
ret
pop
aas
push
dec
int3
add
mov
jl
xlat
jne
aaa
cmp
not
mov
pop
xchg
subb
jnp
orl
into
xlat
jne
xchg
xchg
pop
mov
push
mov
shll
xor
cmc
cmp
lock
sub
lds
rep
jecxz
nop
fistps
rclb
mov
scas
or
lods
sti
push
mov
dec
sub
sub
mov
sub
movsl
xor
enter
fsubs
fldl
fistl
scas
cs
jl
adc
push
and
test
and
mov
out
test
mov
jae
push
std
fldt
out
ds
pop
pop
jnp
sahf
mov
icebp
inc
out
fimull
ret
or
fsubl
add
mov
popa
aad
cmpsl
jne
and
cmpl
cmp
loop
sub
aam
sarb
dec
cli
cmpsb
lret
ss
in
stos
fdivrp
iret
inc
jecxz
mov
xchg
in
loope
or
or
lock
sbb
add
sbb
mov
cmpl
int
or
test
add
and
and
inc
dec
pop
push
jl
or
mov
push
mov
cld
and
addr16
push
sarl
sub
and
stos
inc
inc
inc
test
xchg
xchg
or
jns
ds
jns
lock
aas
adc
xor
jmp
out
dec
mov
data16
xchg
pop
shrd
add
cmpsl
insb
insb
and
js
xor
push
les
pop
mov
scas
inc
cli
mov
jp
lcall
or
adc
rep
adc
into
xchg
mov
and
inc
sbbl
iret
mov
mov
cmc
lods
sub
or
push
subb
sbb
bound
fcoml
pop
xor
push
inc
in
imul
or
push
xchg
jae
cmpsb
mov
adc
cli
and
movsb
mov
sub
cld
sbb
fwait
imul
push
pop
cmp
push
jo
leave
scas
outsl
ret
jbe
sub
pop
std
sbb
rol
and
mov
xchg
daa
xor
push
test
cmp
dec
dec
push
push
ret
nop
sub
cltd
popa
loop
aam
into
push
ror
jle
inc
mov
cmp
sbb
nop
dec
ret
push
addr16
fcomps
fwait
lcall
push
inc
mov
xchg
jg
mov
adc
pop
adc
jmp
pop
push
cmp
cmpsb
xor
push
xchg
outsl
add
mov
in
hlt
dec
clc
daa
loop
cmc
sub
outsb
dec
iret
nop
xorl
popa
nop
xchg
or
inc
jmp
cli
push
loope
push
je
adc
movsl
inc
mov
sbbb
xchg
iret
outsl
sbb
scas
mov
push
add
into
scas
inc
push
inc
mull
pop
xor
push
lret
sub
mov
mov
push
js
xchg
loop
jecxz
jl
movsl
out
xor
ret
imul
pop
fsubrs
sbb
mov
in
or
loop
out
fwait
xor
xorb
aad
outsl
or
out
arpl
inc
sti
and
push
jae
lahf
or
aas
sbb
daa
js
lahf
imul
lods
pop
jmp
sarb
ficompl
movsl
pop
lahf
xchg
and
std
lods
call
cltd
mov
shrl
rclb
movsl
mov
inc
cmp
inc
add
js
sub
mov
cmpsb
nop
sbb
mov
xchg
mov
add
mov
in
sub
xchg
adc
adc
outsb
jle
and
es
sub
dec
loope
or
sub
push
pop
je
loopne
enter
jp
popa
inc
lahf
cmp
es
jmp
add
mov
jecxz
in
iret
sbb
cli
out
or
jp
xchg
popa
lea
stc
les
aad
mov
insb
loopne
adc
repz
pop
inc
cmp
sahf
lea
jb
cs
gs
lea
add
dec
or
repz
rorl
cmp
es
out
fcomp
and
sahf
mov
adc
int
mov
nop
jbe
dec
cli
rol
aad
shll
or
dec
sbb
ffreep
cmpsb
out
hlt
imul
xchg
push
leave
std
or
mov
pushf
sub
in
sub
dec
lret
add
push
sub
lret
dec
push
push
cmp
mov
jno
data16
ret
leave
adc
jge
ret
adc
fdivs
mov
inc
adc
mov
mov
in
std
insb
arpl
outsl
push
cmp
mov
bound
mov
cmc
stc
out
in
jmp
cltd
pop
xchg
xchg
inc
daa
scas
or
fsubrp
adc
or
sub
jmp
xor
sbb
loopne
pop
stc
clc
dec
loopne
xchg
push
add
into
data16
sbb
mov
addb
mov
lds
pop
pop
fldt
pop
jmp
sub
pop
push
outsl
bound
mov
icebp
ss
sbb
xor
xlat
push
roll
ret
cmp
insl
aaa
std
or
stc
sub
test
push
xchg
aad
xor
dec
insl
xchg
test
scas
subb
andb
sarb
push
jle
shrl
inc
adc
in
jp
cmpsb
cli
cmc
fcom
cmpsl
push
dec
push
mov
mov
dec
push
frstor
pop
ja
or
cli
mov
lahf
jmp
add
mov
sub
in
push
cmp
imull
decb
mov
xor
jmp
add
loop
xchg
fadds
add
jl
inc
ds
or
idivb
or
fisubrl
sti
scas
push
push
ljmp
aas
xchg
sbb
push
rorl
or
mov
pop
push
or
scas
mov
ljmp
test
pusha
mov
cwtl
ret
int3
lock
inc
dec
mov
in
mov
push
mov
shll
out
and
pop
divl
jo
dec
aam
mov
gs
sbb
dec
jle
sbb
pop
pop
hlt
in
sar
mov
or
or
and
pop
xchg
mov
push
hlt
mov
inc
jo
loope
mul
out
pushl
fstpl
push
pushf
and
xchg
mov
repnz
jns
adc
fyl2x
jmp
xor
lret
mov
lds
push
jecxz
jmp
mov
and
push
cmp
mov
shrl
lock
call
push
icebp
inc
mov
sbb
fcmovne
push
sbb
jo
cmpsb
pusha
push
jp
or
fstp
mov
loopne
jl
in
in
sub
and
inc
or
in
packssdw
and
cmc
or
add
push
and
movsb
push
or
pusha
push
jle
cwtl
mov
push
pop
sbb
mov
or
cs
in
xchg
mov
xchg
and
stos
inc
xorl
cwtl
cs
lret
xchg
popf
and
rcll
cmp
in
sub
pop
add
rorb
and
pop
in
add
inc
stc
jmp
xlat
add
jg
inc
inc
arpl
repz
es
sub
sar
mov
and
in
and
repnz
adc
inc
add
mov
adc
addr16
imul
pop
fwait
or
cld
mov
dec
and
or
push
pushl
xchg
jge
cmp
mov
leave
ds
mov
adc
xor
lcall
xchg
repz
clc
inc
mov
and
mov
rorl
mov
push
pop
iret
into
pop
mov
and
pushf
mov
xlat
sbb
in
test
push
mov
jne
pop
ds
xor
inc
ret
sbb
xchg
sbb
ss
xor
cmpsb
pop
add
sub
mov
pop
inc
xchg
stc
in
ret
jb
fsubl
or
pop
imulw
dec
or
mov
xor
jb
mov
aaa
cmpsl
sahf
lea
or
sbb
fsts
aam
add
repnz
sbb
fxch
push
call
cmp
jmp
pop
inc
xor
mov
fistl
movb
ljmp
inc
imul
dec
xorl
push
rolb
push
push
gs
cmp
jo
jno
data16
fwait
sub
or
mov
mov
sbb
clc
xor
jmp
iret
cmp
cmpsb
lock
mov
gs
test
call
fdivrl
push
mov
stos
mov
sub
fwait
mov
aas
push
dec
stos
ds
jbe
cmc
cmp
cmp
mov
stc
in
sub
jle
pop
into
xchg
xchg
ds
dec
addr16
xchg
sbb
adc
movsl
stos
pop
insl
int
adcb
push
inc
fidivrl
outsb
pop
test
dec
call
pusha
push
shlb
rcr
inc
mov
pop
dec
clc
pop
les
arpl
cmc
in
sub
jge
xchg
and
xor
sti
add
mov
std
daa
icebp
es
std
shll
scas
gs
sbb
pop
cmp
dec
ss
js
movsb
lahf
sbb
and
pop
icebp
mov
push
and
data16
stos
cmpsl
add
cmc
sub
and
push
push
orb
cmpsl
ret
cmpsl
lods
xchg
jb
ret
mov
int
dec
scas
xchg
sbb
pop
cmpsb
pushf
or
imul
cltd
pop
mov
arpl
stos
push
xlat
dec
fisubrl
sub
sub
adc
cs
je
ror
ficompl
shl
fmull
pop
sub
and
aam
mov
fdivr
xchg
xor
gs
arpl
mov
inc
jbe
sub
rolb
xor
dec
sbb
and
sti
xchg
or
clc
out
aaa
xchg
test
imull
adcl
pop
dec
pop
lock
mov
xchg
insb
fdivrl
int3
roll
cld
pop
push
mov
pop
int3
or
add
push
mov
sbb
gs
xchg
pusha
lock
jnp
add
cmp
aaa
mov
cmp
mov
add
cmc
leave
jns
imul
jmp
sar
sarb
pmaxub
testb
xor
imulb
jecxz
pop
dec
jmp
mov
bound
mov
mov
xor
cs
shll
xor
ja
test
fcomp
dec
fnsave
mov
xor
test
xor
pushf
iret
orb
and
sbb
int
mov
xor
and
push
jmp
push
mov
rcl
mov
rcll
lods
loopne
sbb
sub
call
dec
cmp
ss
push
xchg
popa
in
addl
stos
mov
pop
mov
add
push
in
sub
pop
aas
adc
adc
inc
add
pop
jbe
in
dec
jno
scas
mov
divb
pusha
fidivs
cld
cmp
sti
orl
mov
sub
jnp,pt
pop
idiv
int3
cld
loopne
mov
add
sbb
xchg
inc
leave
and
xchg
in
dec
fstpl
je
sub
ss
aas
mov
daa
arpl
fstpl
cmpsb
movb
lret
adc
mov
iret
push
push
mov
movb
pop
add
sbb
cmpsb
das
inc
decb
in
mov
sub
test
roll
mov
jp
and
cmp
fs
inc
or
pop
bound
lcall
jge
xchg
mov
xchg
xor
xchg
sub
jl
and
add
shrl
in
inc
dec
mov
mov
cmp
or
dec
pop
mov
xor
movl
pop
inc
sub
rcrb
ljmp
jle
mov
jno
add
pop
mov
icebp
sbb
and
push
rcrl
popa
jo
inc
or
jne
jne
cmpsb
aad
cmp
sub
vmovsd
xchg
mov
cmp
mov
lea
mov
or
outsl
jl
add
xchg
insb
sbb
lods
leave
cmp
fdivs
shll
cmp
mov
daa
in
stos
inc
xchg
xchg
insb
cmp
roll
sbb
mov
into
lret
out
das
pop
and
repnz
add
in
sahf
setl
inc
scas
jge
das
adc
add
pop
inc
dec
cmp
or
mov
aas
les
mov
ds
jge
mov
movsb
paddusw
cs
ret
jbe
and
cmp
xchg
pop
sbb
arpl
dec
pop
and
xor
adc
pushf
dec
or
or
mov
add
lods
data16
xor
xchg
movsb
adc
xor
fs
lods
add
add
lcall
ret
mov
push
fistps
int3
or
outsl
sti
xchg
adc
xchg
mov
cmc
popf
fistpl
shl
add
dec
mov
sbb
popa
add
andl
cltd
jp
lods
dec
int
dec
into
jle
push
les
push
mov
dec
cwtl
mov
mov
pop
dec
xor
mov
xchg
arpl
and
fucomi
jo
add
repnz
popf
push
mov
insl
push
mov
sub
or
and
loop
mov
repnz
cmp
pop
js
or
and
jmp
xchg
mov
xchg
fnsave
jne
outsl
add
mov
sbb
mov
mov
push
xchg
movb
or
cmpsl
ds
fnsave
out
test
fidivrl
push
jno
in
fs
pop
mov
shll
filds
out
and
xlat
xchg
sbb
mov
push
mov
cmp
mov
pusha
and
jl
dec
push
mov
dec
push
push
fildll
lods
mov
shlb
adc
xchg
push
xor
dec
cwtl
mov
xchg
xchg
scas
xchg
jnp
adc
in
leave
jmp
in
fwait
scas
dec
in
shr
pop
or
or
and
and
mov
mov
int
xchg
adc
mov
sub
movsb
mov
pop
sbb
leave
insb
add
nop
jg
mov
and
adc
into
leave
adc
fadds
jle
ja
inc
lods
shl
hlt
xchg
xor
ja
push
outsb
test
sti
mov
push
sarb
rorb
sbb
mov
adc
adc
cmp
cs
or
pop
int3
or
and
dec
in
loopne
mov
inc
fisttpl
push
mov
fistpl
adc
dec
mov
mov
mov
xchg
xor
iret
fmuls
bound
test
out
xor
dec
lret
popf
lock
fstl
pop
aad
pop
repnz
pop
mov
cwtl
stc
xor
pop
mov
test
jg
sti
mov
push
mov
push
jno
bound
sub
mov
es
xor
stc
inc
bound
in
mov
fnstsw
scas
jnp
fidivrl
mul
pop
xchg
stos
pop
stc
push
or
inc
repnz
rcl
ss
mov
daa
test
xchg
lds
loope
xchg
fcomps
sub
cs
cmp
in
xor
push
add
mov
sbb
xchg
sti
mov
adc
rcrl
mov
test
pop
and
mov
cmp
sbb
outsl
cmp
das
xchg
sub
iret
fmuls
push
leave
push
jge
in
popf
push
dec
rcrb
imul
mov
mov
inc
lcall
jmp
aas
push
insl
mov
adc
jl
nop
xorl
out
xchg
sub
movsb
sub
aad
fisttps
imul
fstpt
stos
bnd
and
jl
jne
fsubrl
push
or
cld
adc
add
imul
iret
and
mov
fsubrs
or
jl
add
pop
test
xchg
push
insl
lret
pop
andl
add
test
inc
sarl
mov
pop
sbb
movsl
mov
shlb
adc
popa
push
ss
push
out
push
add
sub
jp
cltd
cmpsb
mov
sub
sbbb
jno
sbb
cmp
xchg
clc
roll
add
outsb
or
cmp
out
push
xchg
mov
sub
sbb
sub
std
sbb
jne
sbb
fisubl
sbb
fstl
push
push
fstps
test
dec
xchg
push
inc
repnz
shll
push
arpl
inc
inc
jbe
ret
cmp
adc
lcall
jl
xchg
lock
lret
sbb
mov
xorl
mov
sub
pop
sub
add
and
lahf
adc
stos
insb
mov
outsl
inc
sbb
aam
push
mov
jne
jnp
or
in
dec
mov
stos
xchg
insl
xchg
adc
shrl
inc
imul
push
mov
inc
test
push
stos
push
cmp
mov
xchg
into
mov
cmp
rcrl
enter
hlt
into
dec
cltd
ds
mov
jmp
cltd
mov
dec
xchg
dec
add
loope
sub
cli
sbb
and
std
shrl
push
jp
pop
jns
xlat
jb
jne
mov
nop
icebp
adc
ret
sbb
xor
jns
add
pop
sbb
mov
test
adc
push
lret
lock
jno
nop
jbe
push
repnz
sbb
stc
and
mov
test
jl
cli
mov
std
pop
push
mov
mov
push
mov
loopne
cmovp
mov
adc
jmp
ja
fcmovne
in
int
xor
dec
scas
cmpsb
and
sbb
andb
jb
add
jecxz
mov
xchg
mov
pop
repnz
leave
dec
and
js
mov
sbb
icebp
xor
push
insl
lds
mov
insl
addr16
in
cmpl
fsts
test
and
pushf
ret
cmp
xchg
jle
mov
jno
popf
jae
sti
ss
pusha
loop
icebp
jg
or
mov
and
lock
lret
sbb
enter
add
pop
and
ss
aaa
popa
pop
jno
mov
mov
std
lock
fst
sub
add
jo
inc
pop
push
lods
mov
popf
nop
in
loopne
lock
fst
sub
add
jo
inc
pop
push
lods
movsb
mov
xchg
in
loopne
lock
sub
cmp
adc
fs
inc
insl
push
mov
xchg
mov
xorb
int
pop
das
sub
add
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cmpsb
dec
mov
xchg
jp
mov
ja
inc
mov
pushl
fildl
push
ljmp
push
mov
xchg
jp
or
or
sub
dec
es
fidivl
push
cli
data16
jbe
inc
stos
push
mov
xchg
out
testb
xor
and
lret
jne
cmp
or
cmp
out
push
mov
cmc
pmulhuw
dec
leave
sub
xchg
into
out
inc
stc
in
jb
adc
push
push
ret
sub
arpl
sub
jp
jmp
shlb
xchg
add
inc
pop
test
pop
cmp
and
mov
lret
stc
cmpb
jmp
and
mov
lock
pop
sub
or
or
pop
mov
and
adc
push
pop
inc
push
push
stos
pop
iret
ret
xchg
scas
push
pop
lret
and
push
ss
adc
mov
mov
rcll
mov
jbe
pop
mov
adc
ja
inc
test
mov
xchg
jp
or
sbb
sub
and
lret
push
repz
jecxz
xchg
jbe
inc
mov
mov
jecxz
repz
mov
mov
pop
movsl
xor
gs
jp
add
pop
cwtl
add
add
movsl
and
xor
sbb
adc
pop
or
xor
inc
push
clc
add
and
iret
dec
rcrb
push
xchg
aas
out
negb
sub
cmp
lret
push
ljmp
inc
stos
push
mov
xchg
jp
or
sbb
sub
cmp
lret
push
ljmp
inc
stos
push
mov
cmp
subl
stos
inc
icebp
es
ja
dec
stc
inc
pop
pop
adc
fstps
pop
push
jp
xchg
mov
lret
pushf
mov
cmp
jne
pushf
test
imul
cltd
jnp
pushf
sbb
xchg
out
fsubl
in
dec
jbe
or
xchg
dec
push
and
jg
into
or
mov
imul
rorl
fldt
aaa
jnp
shl
mov
mov
mov
cld
sub
mov
adc
lods
sub
jg
ret
push
and
push
pop
adc
rolb
ss
mov
mov
add
fwait
xchg
sub
neg
mov
mov
popa
js
xor
movsl
xchg
movsl
jle
sahf
sub
cmc
js
pop
int
dec
add
pop
jp
push
lret
fisubrs
out
mov
cli
mov
call
sub
outsb
dec
mov
lea
cmp
test
cmp
nop
arpl
fwait
inc
fstps
fcmovne
pop
push
mov
sahf
lea
aaa
shll
sti
xorb
xchg
jbe
dec
jp
fists
inc
xchg
repnz
mov
sub
arpl
cmpb
cmpl
adc
push
jmp
push
pop
xorb
or
into
movsl
mov
push
jae
lods
ror
aas
pop
lea
data16
addr16
in
fcos
jnp
pop
adc
jbe
movsl
movsl
jnp
push
jge
fs
inc
ret
add
mov
mov
test
push
jg
outsl
in
xchg
mov
push
call
jecxz
lods
int
lds
or
daa
push
mov
add
ss
pop
pop
and
mov
data16
push
repz
out
mov
mov
int
sbb
adc
xchg
xchg
push
scas
jl
test
xor
sahf
sarl
inc
and
mov
jae
and
xor
xchg
test
push
pop
fsubrl
xchg
sbb
mov
dec
mov
lods
push
inc
bound
pop
push
les
shrb
in
int
dec
sbb
adc
jae
fists
popa
xchg
stc
pop
push
cmp
cmp
fs
xchg
jmp
cs
or
inc
stc
and
push
int3
cmp
fbld
mov
mov
std
cmpsl
ret
pop
in
and
add
sub
jae
pop
into
sbb
stos
cmpl
js
fs
jecxz
cmp
adc
lea
xchg
mov
mov
out
add
cmp
sbb
cmp
movsb
popf
push
jg
into
testl
insl
mov
mov
jbe
add
fisttpll
loopne
cwtl
out
adc
cwtl
es
daa
xlat
dec
cld
das
into
pop
nop
out
sbb
call
jle
fdivp
ja
aam
mov
out
fiadds
jbe
test
push
xchg
dec
inc
int3
sbb
lahf
les
rorb
enter
out
sub
std
insb
jns
push
ss
add
push
stos
iret
mov
add
fdivrl
cmpsb
lock
pop
popf
cmpsl
mov
inc
jle
dec
mov
mov
add
test
inc
mov
pop
testl
int3
mov
in
fisubrl
adc
mov
in
test
test
jmp
movsb
shl
or
dec
out
imul
sbb
fstpl
and
push
js
xor
frstor
das
roll
ret
cmp
movsb
add
fucom
jle
xchg
lds
cmp
push
cmp
daa
jecxz
addl
pop
dec
jne
loope
jae
mov
int
inc
imull
or
cmp
xchg
out
pop
loope
fs
dec
xor
add
and
dec
mov
and
mov
xchg
mov
jg
add
adc
mov
mov
sub
mov
xchg
pop
aas
das
xor
or
pusha
subb
pop
in
jne
out
rol
fwait
popa
dec
adc
add
scas
stc
icebp
cld
cmp
dec
mov
jb
pusha
and
pop
outsb
xchg
movsl
dec
cmpsb
popf
sbb
into
fsubl
jnp
mov
bound
out
push
pop
sbb
fdivrl
sub
shlb
dec
mov
int
lret
adc
lahf
xor
cli
lea
sub
sub
xor
push
dec
xchg
out
insl
mov
out
in
xchg
add
ds
lahf
cmp
popa
pop
mov
push
data16
or
jb
sbb
repnz
mov
adc
cmp
and
cld
js
cmp
icebp
cmp
dec
std
shll
cltd
adc
mov
push
sbb
in
out
or
dec
push
pushf
add
xchg
add
adc
test
aaa
repnz
dec
out
pop
dec
popa
push
pop
add
mov
sti
push
add
xchg
cmp
sub
xchg
shl
pop
cli
repz
mov
sub
sahf
lahf
push
xor
push
jmp
loop
mov
repnz
and
jmp
sbb
mov
adc
cmpsb
movsl
sbb
jns
test
lret
push
shrb
pusha
mov
ret
jp
push
ljmp
xchg
jmp
in
push
xchg
pop
andl
mov
xor
fstl
mov
mov
and
inc
sti
push
std
xor
sbb
stc
lcall
mov
aaa
int3
add
ret
popa
aad
lret
addr16
and
sbb
add
jmp
mov
das
dec
xchg
addr16
jns
inc
cmp
loope
mov
je
jge
mov
sbb
add
push
add
imul
dec
enter
js
xchg
mov
xor
stos
insl
lret
add
insb
push
in
mov
sahf
leave
orb
jge
ja
add
cltd
mov
ror
lcall
mov
sub
dec
pop
inc
test
fnsave
int3
dec
pextrw
cs
push
sub
inc
inc
sub
mov
jno
inc
dec
cmp
pop
lea
mov
mov
in
lcall
into
push
sbb
push
aam
cmpsb
mov
mov
fldt
push
cli
mov
mov
cmp
pop
dec
xor
ljmp
mov
jp
and
mov
or
mov
out
mov
push
or
cld
sub
xorl
sbb
leave
jl
xchg
pusha
rorb
lcall
rcr
ja
loope
test
out
data16
pop
mov
sti
shll
fisubrs
nop
call
mov
int
out
xchg
sti
jge
pop
aaa
insl
and
jmp
clc
push
push
cmp
and
fs
int3
shl
fucomi
mov
sub
adc
adc
inc
sub
pop
fdivl
pop
outsl
iret
in
inc
xchg
sbb
pushf
mov
sub
fisubl
and
dec
call
pop
cs
scas
adc
icebp
pop
inc
loope
cltd
or
sub
icebp
xor
jae
dec
pushf
orl
pop
cmp
sahf
fimull
cltd
cmc
cmpsl
cmc
decl
enter
sbb
push
insb
ja
mov
movsl
xor
xchg
test
roll
ret
xor
cmp
adc
pop
loop
xor
push
sbb
lret
inc
enter
or
push
les
push
adc
pop
loop
popf
aaa
cwtl
movsb
sbb
sbbb
mov
add
ret
and
out
int3
stos
or
ds
pop
jb
incb
movb
nop
inc
andb
call
addr16
pushf
shlb
jg
add
lcall
gs
cmpsl
cmpsl
ja
outsl
jne
mov
push
pop
pop
and
mov
test
fcmovbe
dec
shrl
movb
push
push
inc
jmp
sbb
std
iret
add
and
shll
mov
jl
imul
movsb
stos
push
loope
cmp
adc
cmc
push
mov
das
xchg
jp
fs
xorb
mov
mov
xchg
jae
xchg
aad
mov
dec
popa
dec
cs
out
mov
xor
jg
ljmp
out
sbb
outsb
mov
adc
fwait
mov
jl
or
lcall
out
leave
lahf
push
mov
test
add
sub
mov
jmp
push
jne
cmpsl
mov
jne
pop
bound
dec
lock
dec
add
lret
rclb
push
stos
into
dec
hlt
scas
dec
js
dec
or
lret
cmpsl
shlb
mov
push
xchg
xchg
inc
arpl
lock
xor
aaa
in
inc
add
ljmp
dec
mov
inc
jo
mov
jmp
adc
or
out
stc
sub
mov
mov
fstpl
inc
push
adc
shlb
ficoms
jl,pn
mov
xchg
loop
xchg
xchg
fisttpll
jno
mov
mov
cmp
lods
pusha
xchg
into
paddsb
test
cmc
popf
add
out
push
in
adc
int3
ljmp
test
xchg
iret
and
jbe
xor
lds
mov
idivl
ss
int3
push
cmp
outsl
jle
loopne
inc
ret
or
mov
loop
push
xchg
sbb
clc
jne
mov
out
inc
jns
mov
gs
test
test
test
pusha
aam
jg
js
test
arpl
push
outsl
ret
mov
pop
mul
dec
dec
in
fwait
test
mov
in
stos
sub
xchg
int
jno
aas
out
bound
insl
dec
test
cmpl
rcll
adc
push
jg
push
lret
adc
arpl
fucomip
cltd
cwtl
xchg
rcr
push
fcmovnu
jle
mov
sbb
push
mov
imul
mov
cmp
in
sub
fs
jl
js
cmp
daa
pop
inc
sub
fistps
loopne
inc
cmpsl
pushf
xor
or
or
imul
sub
jns
jg
data16
in
stos
and
jne
pop
mov
lahf
xor
test
out
inc
fldcw
hlt
mov
mov
add
inc
rcrb
mov
fwait
jle
jne
jmp
or
scas
daa
pop
mov
and
stc
inc
pop
je
sbb
mov
roll
push
stos
jns
mov
mov
cmp
pop
das
ffree
sbb
divl
mov
jle
sahf
test
pop
jb
loopne
xor
push
dec
pop
inc
fimuls
add
leave
or
sbb
adc
in
out
xchg
outsl
in
jle
mov
mov
inc
jns
cmp
dec
insb
cmp
fs
mov
shll
lcall
inc
pop
stos
mov
cmp
xchg
sarl
xor
aaa
lods
cmp
mov
dec
cwtl
xorl
cmp
add
or
xchg
sbb
jle
mov
pusha
push
shrb
divb
inc
movsl
mov
xchg
pushf
adc
negl
jge
popf
mov
cmp
repz
je
or
or
adc
imul
mov
out
ljmp
pop
push
sub
sub
xchg
aam
shlw
dec
adc
or
cmpb
jnp
mov
mov
adcl
nop
test
jp
dec
inc
push
popa
dec
and
movsl
inc
mov
in
cmp
xchg
rorb
add
dec
pop
pop
mov
add
xchg
out
ret
outsl
adcb
nop
mov
sbb
mov
dec
outsl
or
addl
adc
add
pop
xchg
sbb
mov
cld
int3
inc
and
push
test
pop
das
popf
dec
lahf
sub
push
insl
adc
or
loop
iret
stos
cld
rorb
testb
or
scas
xor
jg
push
pop
aad
mov
sub
imulb
lds
subl
sub
sarl
aam
cmpsl
xchg
mov
jmp
xor
inc
cwtl
sbb
push
dec
fisubl
push
ret
jg
daa
clc
adc
push
sbb
and
int
call
xchg
ja
jle
xor
inc
sbb
lods
arpl
xor
test
cmp
jnp
subb
in
shll
xchg
adc
jle
call
push
sbb
test
andb
lcall
loope
xor
stc
or
add
dec
push
lods
insb
adc
and
push
and
xor
xlat
fwait
mov
popa
insl
jns
ja
push
xor
in
int
lret
dec
imul
mov
push
xor
sub
insb
sbb
jmp
xor
lret
pop
shufps
lock
and
xchg
mov
mov
xorb
adc
loop
push
movsb
lea
cli
dec
cltd
out
sbbl
inc
fisubrl
aaa
mov
push
pop
xchg
dec
leave
push
jb
mov
outsb
test
jae
mov
and
cmp
cltd
inc
test
cmp
call
adc
pop
jp
loope
sub
and
jns
mov
dec
es
jg
aad
mov
mov
xchg
mov
idivl
mov
jae
and
xlat
out
js
push
lods
aas
xchg
push
adc
mov
or
cmp
imul
sbb
jno
or
jmp
test
xchg
mov
jg
movl
inc
dec
imul
lds
sbb
sub
hlt
adc
pusha
mov
test
les
push
pusha
or
push
test
pop
mov
clc
pop
xor
nop
jne
andb
pop
test
inc
leave
pusha
es
lret
cmp
jbe
mov
adc
test
je
fistpll
sub
iret
xor
or
leave
mov
mov
mov
test
cmc
cmpsl
pusha
pusha
out
inc
nop
and
insb
push
cs
sbb
inc
addr16
cmpsb
pop
and
sti
add
ja
dec
xchg
mull
in
daa
pushf
sbb
mov
or
push
and
or
das
insb
and
into
mov
lods
pop
in
rcl
lods
xchg
and
ret
xchg
mov
aaa
sub
std
pushf
outsl
dec
push
mov
dec
sub
fwait
xchg
mov
dec
outsl
jge
xchg
push
in
fwait
pop
adc
test
loop
inc
mov
andl
jle
add
xchg
mov
inc
xor
xor
lret
sti
shll
mov
mulb
rolb
aad
mov
icebp
push
and
mov
cld
cltd
cmp
sub
popa
cltd
jae
xor
sub
cmpsb
sbb
sarl
xor
cs
mov
and
jbe
mov
adc
call
pop
mov
outsb
andl
pop
out
adc
and
sub
cli
cmpb
leave
pop
xchg
data16
inc
or
and
mov
cmc
in
mov
xchg
push
popa
fsub
imul
xor
ja
or
cs
jg
adc
mov
xchg
mov
test
or
push
push
mov
scas
into
test
adc
sub
xor
scas
pop
or
sbb
or
add
mov
jb
imul
cmp
sbb
push
sti
mov
leave
int
sbb
xchg
ret
cli
cmp
push
aam
faddp
mov
xor
dec
adc
ja
aad
rcll
inc
inc
adc
mov
fstps
xchg
addr16
or
jbe
lods
lods
insb
mov
idivb
and
loop
ds
in
push
mov
add
push
sub
cmp
jb
mov
movsl
jg
lret
xchg
mull
and
push
repz
rcr
test
dec
test
ds
jmp
pop
adc
pop
sti
mov
push
jp
sahf
adc
stos
mov
sahf
outsb
mov
push
mov
ret
insl
aaa
cmpsl
addb
push
out
mov
dec
push
jbe
movsb
xlat
ficompl
lea
inc
enter
fcoms
inc
sbb
scas
ss
pop
movsb
push
xorl
jne
cmp
int
loopne
push
test
lds
xchg
mov
push
movsl
or
aad
sub
cmp
aas
xorl
ss
jmp
sbb
xor
setp
movsb
cwtl
jo
pop
mov
insl
subl
sarb
add
and
filds
mov
jb
fcomps
push
loop
push
xchg
nop
ljmp
lcall
cmp
xchg
dec
arpl
aas
nop
pop
test
test
or
cld
pop
movntq
rcll
mov
insb
outsb
adc
out
or
std
rol
jne
out
mov
xchg
aas
cmpsb
lcall
roll
leave
lahf
popa
mov
jae
mov
xor
adc
cwtl
jl
popf
repz
xchg
add
pop
add
jp
mov
add
push
xor
jns
add
enter
add
mov
and
adc
jns
add
out
pop
push
sbb
push
popa
inc
xlat
adc
bound
sub
mov
nop
or
int
ljmp
lret
iret
cld
pop
adc
cmp
hlt
pushf
outsb
cmp
mov
ds
pop
cmp
es
insb
sub
xor
xchg
or
in
insb
daa
cmp
imul
leave
adc
sbb
sub
pop
cmp
in
shr
xchg
push
aam
xchg
or
in
mov
add
seto
cmpsb
mov
sti
popf
sbb
pushf
adc
xchg
pop
mov
or
cs
stc
mov
mov
xchg
sub
xor
out
adc
pop
arpl
push
inc
xchg
aad
push
cmpsl
cmc
dec
sti
lds
sbb
jmp
cmpsl
pop
repz
cs
mov
pop
adcl
mov
jmp
mov
psubsw
cmp
aam
in
fadds
push
fisubrs
outsb
lods
xor
add
pop
xor
or
pop
bnd
in
stc
pusha
test
or
inc
sub
jg
stc
mov
test
pop
aas
cs
push
aam
and
cmp
aaa
pop
cmp
xor
or
add
mov
inc
ja
jo
pop
pop
jg
sbb
out
in
rolb
xchg
sub
dec
mov
cmc
lret
inc
test
xor
shl
mov
dec
insl
int
inc
pop
xchg
mov
je
loope
popf
pop
lcall
jne
iret
xor
push
aad
jno
into
movsb
mov
rol
and
push
into
xchg
sti
lods
xchg
inc
cmpl
into
jb
andl
out
xchg
mov
add
sub
xchg
in
mov
imul
inc
gs
mov
inc
ret
mov
jne
cmpsl
pop
pop
leave
and
std
dec
xchg
arpl
lods
ds
fs
inc
mov
cltd
sub
sub
mov
jnp
inc
sub
js
cld
and
stos
stc
mov
add
ja
mov
dec
pop
mov
stos
lea
adc
sub
lcall
push
stc
xchg
imul
hlt
cmp
cmp
jns
inc
fbld
or
arpl
pop
cmp
jae
push
and
and
xorl
add
or
inc
icebp
sbb
insb
pusha
adc
mov
xchg
test
stos
or
xor
xor
cli
lret
mov
or
addr16
and
stc
sti
mov
jne
add
jnp
mov
cmp
dec
and
in
mov
adc
std
inc
fcoml
jl
mov
sbbb
aas
pop
jmp
pop
sub
rcl
jge
sbb
daa
inc
and
cmpsl
fnstsw
or
dec
test
xchg
mov
dec
not
mov
sbb
inc
fwait
xor
pop
lahf
xchg
arpl
clc
je
pop
push
cld
inc
jl
mov
push
or
das
mov
lret
aad
mov
jge
cli
cld
mov
cs
test
ss
mov
iret
icebp
pop
xor
jp
loopne
add
shl
arpl
addr16
jl
add
add
xor
sbb
mov
xor
enter
dec
lahf
sub
dec
xchg
arpl
mov
cmpsb
xchg
call
imul
jnp
daa
inc
xchg
add
adc
push
mov
xor
mov
and
push
lret
aad
je
aad
pop
imul
xchg
mov
fdivs
les
fcomp
cmp
js
leave
mov
xor
lds
mov
mov
clc
in
cwtl
mov
mov
mov
sahf
mov
or
xchg
pop
xchg
inc
roll
mov
enter
xchg
xor
mov
inc
cwtl
leave
jbe
adc
fdivrs
sub
shll
ret
in
shlb
test
mov
dec
aad
mov
adc
shlb
sub
sbbl
xchg
jp
or
sbb
sub
cmp
lret
push
ljmp
inc
stos
push
mov
xchg
jp
or
sbb
sub
cmp
lret
push
ljmp
inc
stos
push
mov
xchg
jp
or
sbb
sub
cmp
lret
push
ljmp
inc
scas
push
mov
xchg
jp
or
sbb
sub
cli
es
lods
ljmp
mov
jge
insl
out
testb
in
xchg
mov
fnsaves
push
mov
lea
pop
testb
xchg
sub
inc
std
push
lea
fnsave
inc
mov
lea
and
je
cs
cwtl
cmp
mov
and
in
push
mov
fs
push
test
lcall
cli
xchg
into
jl
popf
or
arpl
cmp
push
and
sub
cmp
test
push
shrb
sbb
dec
mov
and
jecxz
mov
enter
int
fdivrl
and
loopne
dec
mov
cld
scas
pop
test
adc
push
adc
jbe
push
mov
or
push
sbb
cmp
sub
inc
es
and
xlat
push
push
daa
bound
add
popf
fistl
jp
push
cmp
add
mov
inc
lods
push
push
fisubs
add
jmp
xchg
out
or
push
push
in
out
int
int3
mov
xor
insl
out
testb
out
sub
cmp
in
adc
inc
int
mov
ss
adc
jmp
push
mov
inc
cwtl
add
mov
fimuls
push
int3
mov
outsl
xchg
pop
xchg
aas
out
jne
dec
push
push
or
mov
jg
jns
dec
clc
ja
stos
xor
xchg
xchg
sub
inc
std
push
in
fnsaves
push
mov
ss
jge
insl
out
testb
xchg
sub
inc
std
push
in
fnsaves
push
mov
ss
jge
and
out
or
jmp
movsb
sbb
imul
sbb
sbb
stos
pop
push
testl
mov
aaa
out
lods
andb
sbb
lcall
sti
arpl
les
dec
pop
and
dec
mov
adc
mov
rcll
xor
push
cs
scas
push
inc
sbb
xor
adc
add
rolb
outsb
sbb
popa
popf
cmp
pop
sbb
mov
mov
hlt
push
xor
sbb
xchg
add
dec
mov
cmpsb
mov
stc
testl
imul
ja
outsl
mov
fadd
or
loopne
idiv
nop
add
sarb
sub
or
cltd
inc
mov
les
mov
leave
cli
sub
add
test
or
cwtl
dec
test
iret
sub
stos
push
fldt
repz
jge
sbb
mov
outsl
cmc
jmp
mov
dec
push
pop
mov
int
fwait
jno
mov
cmp
lahf
mov
xchg
into
mov
push
imul
xor
push
pop
icebp
imul
enter
mov
push
and
xchg
lahf
out
in
lea
add
outsl
fmull
in
jae
pop
mov
das
decl
shrl
out
sti
out
mov
ds
cltd
add
cmp
or
inc
in
xchg
mov
push
std
or
mov
or
xchg
pop
xlat
es
jnp
push
mov
pop
arpl
xor
jnp
cld
lods
push
lahf
adc
ds
subb
mov
pop
dec
stos
fstl
stc
push
pop
mov
mov
insl
data16
pop
xor
fsub
push
int
addb
aam
outsl
jo
enter
sbb
cmp
lret
sbb
scas
mov
idivb
pop
inc
xor
faddp
mov
daa
stos
rcll
sub
shll
ljmp
xor
xchg
fdivl
int
imul
outsb
add
adc
pop
or
in
ds
clc
jns
insl
pop
movsl
push
out
and
xchg
mov
xor
je
test
or
dec
jg
xor
fstpt
inc
and
sub
cmpsb
sbb
lods
mov
pushf
fwait
std
mov
sub
pop
fnsave
out
out
mov
pop
lock
push
inc
mov
mov
int3
aad
shr
mov
jmp
stos
add
out
and
hlt
dec
notl
jno
mov
jmp
ficoml
push
jns
mov
pop
shlb
test
mov
call
popa
mov
adc
lods
xchg
inc
adc
test
ja
scas
bound
dec
enter
fdivs
mov
fcoml
sub
popa
enter
ret
sub
test
aas
push
scas
nop
sbb
imul
aam
idivl
sub
stos
mov
xchg
mov
cmpsl
adc
inc
cld
or
out
mov
inc
imul
mov
inc
es
adc
dec
cmp
aad
lds
enter
inc
jg
xor
iret
lds
xor
cmp
negl
sar
movsl
cli
and
sti
mov
pop
mov
das
sbb
shll
and
mov
jne
dec
pop
adcl
test
out
in
scas
pop
mov
lahf
inc
aam
in
mov
xchg
data16
data16
cmp
addr16
xor
xchg
jb
and
ljmp
pusha
js
js
jge
push
lds
leave
ds
mov
rcl
sub
sti
jnp
and
push
shlb
dec
cmpsl
rol
out
int
mov
dec
clc
mov
sbb
sarl
jo
push
add
push
subl
xor
roll
jl
jb
fwait
and
mov
dec
inc
loope
arpl
roll
in
inc
push
adc
pop
sarl
pop
sub
stc
inc
dec
ds
push
lea
int3
cmpsb
add
cld
movsb
dec
iret
stc
jmp
cmp
out
testl
in
mov
pushf
mov
push
pop
inc
xchg
imul
fcomps
add
push
fcoms
sahf
jge
sbb
andl
dec
test
in
fsubr
mov
cli
mul
mov
push
rolb
sbb
mov
data16
das
out
or
pop
jle
repnz
sub
push
aaa
insb
adc
and
jmp
jne
adc
int3
pusha
add
jl
sbb
imul
fnstsw
cmpsl
pop
add
dec
pop
js
push
jge
fisttps
jp
in
dec
popa
jmp
cmp
and
pop
push
ret
xor
scas
imul
rcl
mov
or
roll
test
xchg
dec
adc
mov
adc
pop
frstor
addr16
movsl
lret
movsl
xor
mov
xchg
sub
mov
jg
sbb
hlt
or
xor
adc
mov
or
mov
add
bndldx
jecxz
cmp
cmc
mov
push
into
mov
jno
ds
or
xor
push
mov
add
into
or
vpaddsw
adc
ds
mov
add
cmpsl
sub
sbbl
dec
xchg
add
ja
push
cmp
shll
pop
insb
xchg
inc
and
sti
fs
mov
lea
and
mov
loope
out
sub
out
into
cld
lods
icebp
std
outsb
adc
push
inc
pop
mov
outsl
roll
popl
shrb
mov
loopne
je
cmpsb
fwait
scas
insl
cmp
cld
push
cmp
fdivl
mov
fildl
sbbl
imul
lahf
push
lods
lea
jle
sub
inc
xor
mov
stos
jle
adc
xorl
cmp
ss
sub
into
push
out
cmc
inc
push
inc
xchg
loop
sub
lret
aas
out
insb
sahf
and
jmp
mov
cmc
insb
pop
shrl
dec
or
cltd
aad
addr16
fstl
rcll
in
sub
push
insb
mov
popf
pop
ret
fbld
mov
or
outsl
pop
adc
ja
pop
rcrb
push
into
lahf
call
xchg
idivl
add
add
push
push
andl
adc
fwait
mov
xchg
in
jg
lds
jns
dec
in
mov
jne
mov
mov
loop
cmp
ja
sbb
mov
push
mov
and
je
outsl
jb
jb
loopne
adc
shll
jae
pop
hlt
das
or
mov
movsl
xchg
lods
mov
or
inc
jo
icebp
xor
add
mov
cmp
xchg
repz
ret
out
mov
lods
ret
aad
inc
push
jbe
inc
lods
cli
jp
push
jo
out
enter
fs
dec
sub
stos
sbb
cltd
cmp
xchg
aaa
stos
add
cmp
cld
fiaddl
push
mov
or
adc
push
ljmp
out
and
sbb
mov
daa
jne
or
out
lods
pop
int
mov
fisttps
enter
mov
mov
cmpsb
add
pop
xchg
xor
sti
adc
xchg
imul
loopne
pop
cld
nop
sarb
lods
adc
mov
add
push
inc
and
adc
adc
jle
cltd
iret
nop
test
stos
call
push
lea
pop
loopne
mov
out
add
jp
xchg
inc
rol
mov
iret
leave
and
subb
movsb
jl
aad
pop
jge
sar
push
loopne
xchg
mov
inc
pusha
inc
push
idivb
jg
pop
xchg
and
push
out
call
decl
sbbl
mov
xor
push
lcall
stc
xabort
jno
aam
xchg
pop
out
cmp
add
negl
push
pushf
popf
xchg
test
pop
mov
inc
shlb
inc
jnp
dec
mov
icebp
mov
xchg
inc
mov
pop
das
pushf
divb
mov
push
push
adc
sbb
push
sbb
adc
test
xchg
sub
dec
movb
jmp
rcll
xor
repnz
lds
push
int
clc
push
loope
rorl
out
jg
mov
xlat
int3
ja
push
and
sub
jo
jp
mov
mov
aaa
push
add
shl
mov
push
jge
xor
adc
sbb
jns
jo
popf
pop
and
jnp
and
mov
aad
mov
data16
mov
add
test
mov
movsl
ret
cmp
cmp
lahf
sbb
insl
mov
cmp
mov
sbb
or
inc
sub
pushf
xor
mov
sub
int
popf
mov
enter
outsl
sbb
inc
les
mov
lahf
es
imul
and
aam
push
and
stc
mov
or
cs
inc
aaa
daa
imul
add
mov
jae
popl
xor
dec
or
xor
sbb
inc
sub
rclb
inc
fidivs
mov
and
pop
in
push
sub
sbb
fcoms
sbb
data16
imul
pop
xor
in
inc
xchg
xor
sbb
fstpl
sahf
mov
test
inc
and
push
daa
insl
xorb
xor
pop
add
dec
jb
cwtl
xchg
and
push
scas
cmpl
in
in
into
lret
push
ret
xorb
imulb
bound
shll
pusha
lahf
fcomp
popa
sub
imul
filds
stos
pop
iret
out
loop
lods
sarl
cmpsb
out
inc
ss
cmc
outsl
fistl
fldt
rcrb
jae
push
cli
pop
mov
or
xlat
push
xlat
cmc
sbb
aam
sub
ret
sbb
cld
add
ret
and
fstps
mov
leave
mov
lods
jmp
pop
and
shlb
fdivs
mov
inc
jae
cld
cmp
push
sbb
scas
mov
pop
test
inc
inc
push
pop
pop
sub
jae
inc
rolb
aad
xchg
jne
imul
ss
inc
or
sub
dec
sbb
fsubrs
mov
adc
imul
test
popa
push
ja
pop
push
dec
push
mov
mov
popa
mov
adc
sub
subb
int3
scas
jl
cmp
movsb
jle
xchg
daa
fsubrl
enter
fisubrs
or
inc
dec
adc
dec
or
call
push
out
in
pop
pop
add
repz
in
fs
clc
divl
add
enter
aaa
sbb
or
loop
jl
mov
enter
mov
lret
push
cs
and
xchg
and
popa
in
lods
mov
aam
xchg
add
jne
fcoml
jge
sbb
adc
push
and
cltd
popa
jb
out
call
push
or
mov
fdivrs
or
push
pop
sbb
mov
js
pop
pop
cld
xor
mov
mov
imulb
in
jns
rol
sti
add
pop
fldcw
push
lds
xor
sbb
icebp
sahf
sub
adc
pusha
jns
ret
aad
fcmovnu
add
push
ficomps
inc
jne
repz
and
xor
arpl
jg
leave
jmp
jae
je
aaa
add
dec
inc
dec
xor
pop
out
mov
insb
lods
push
and
cmpsl
jbe
aas
leave
mov
jo
arpl
gs
or
sbb
mov
sbb
mov
mov
mov
ffreep
adc
cmpb
jle
call
sbb
sub
or
ljmp
imul
and
dec
adc
insl
adc
pop
xchg
int3
dec
imul
or
scas
popa
shlb
mov
addr16
xchg
dec
push
hlt
mov
ficoml
mov
sbb
mov
test
add
pushf
test
push
xchg
xchg
sub
nop
es
cmp
xchg
jle
dec
loopne
xchg
push
mov
pop
dec
jno
imul
sbb
sti
out
jne
inc
ret
jb
lcall
push
xor
add
jle
lods
pop
xor
lcall
fidivl
setae
adc
out
sbb
fisttps
pop
popf
pop
rolb
enter
addr16
sub
push
jg
nop
repnz
or
xchg
or
xlat
and
dec
fimull
jl
sbb
or
int3
mov
push
clc
xchg
test
xor
not
dec
inc
test
jp
jmp
in
dec
inc
sbb
xor
lock
mov
mov
cld
repz
inc
mov
mov
pop
hlt
mov
xor
jg
fwait
addr16
testb
retw
lods
xchg
in
or
fstpt
xchg
xor
popf
call
stos
rorb
call
jmp
stos
cmp
addr16
cmpsl
adc
icebp
out
daa
xchg
repnz
fucomi
jp
mov
xchg
fdivrs
andb
pop
clc
aas
stos
push
jae
and
outsl
pop
inc
aas
pop
cli
pushf
mov
arpl
daa
movsl
cltd
je
stos
fistl
mov
clc
inc
jecxz
lahf
mov
mov
outsl
out
in
hlt
jg
test
sbb
mov
clc
add
movsl
sub
jg
ret
fsts
lahf
imul
ficoms
or
jbe
shrl
add
mov
stc
push
loope
xor
sahf
add
dec
and
imul
ret
or
dec
movsb
les
sub
dec
clc
imul
pop
fcoml
cmpsb
inc
pop
jo
out
insl
or
dec
lret
mov
je
jl
sub
sahf
dec
ss
xchg
xlat
push
out
jle
mov
pusha
adc
pop
scas
xchg
stc
loop
mov
sti
leave
das
push
in
mov
enter
imul
xor
popa
inc
cmp
cmp
sbb
jle
add
mov
inc
or
pop
jmp
sub
and
or
ljmp
pop
jbe
and
divb
ljmp
jp
mov
xchg
jmp
jl
in
cmp
mov
repnz
cmp
cmp
mov
jns
ret
shrl
outsb
dec
cmpsb
in
jbe
pop
sahf
adcb
dec
enter
xor
push
xlat
fdivrs
into
xchg
sti
dec
xchg
jle
gs
into
mov
cs
in
filds
mov
push
inc
pop
inc
mov
gs
outsb
imul
jns
bound
or
lret
bound
fs
or
cmp
fidivrl
out
inc
ficoml
adcl
push
pop
sub
inc
jne
cmpsl
lods
pop
lahf
adc
xchg
out
faddl
mov
into
lock
xor
fwait
push
jp
jno
mov
jle
insb
push
adc
mov
jne
sub
ljmp
clc
pop
mov
sbb
int3
mov
aad
push
or
lret
xchg
inc
ret
daa
adc
pop
or
or
pop
push
out
push
mov
repnz
ss
ljmp
insb
adc
mov
push
out
push
xchg
push
pop
push
ret
or
loope
cli
mov
pop
sub
adc
cli
in
cld
popf
std
inc
movsl
mov
stc
subl
and
sahf
cmpsl
xchg
mov
aas
adc
and
and
xchg
call
aas
es
ficompl
scas
adcl
xchg
in
lock
dec
lods
gs
in
imul
scas
add
daa
add
xchg
scas
xchg
sub
insb
xor
incl
mov
cli
jmp
mov
dec
or
dec
adc
sbb
setge
mov
lea
inc
fimull
pop
or
repz
rcl
xor
pop
stos
mov
shll
push
aaa
or
inc
loop
xchg
or
xchg
imul
fcomp
sub
aaa
daa
pop
and
stos
add
jmp
gs
popf
arpl
push
add
pop
aad
int3
inc
or
cmp
mov
adcb
mov
add
loope
mov
inc
xchg
and
in
insb
mov
push
hlt
scas
arpl
jno
dec
and
inc
inc
jbe
push
stc
movsl
xor
and
and
mov
mov
mov
rcr
fisttps
jbe
inc
dec
faddl
mov
loope
shll
jge
lret
or
and
sbb
inc
adc
inc
rorb
cld
fstl
aaa
pushf
daa
jns
test
mov
xchg
inc
scas
push
adc
je
pop
and
or
jo
xchg
mov
les
jg
push
push
call
xchg
addl
je
shll
sub
mov
mov
sub
inc
push
mov
rcll
xchg
in
xor
shr
cmpsb
xchg
fidivl
clc
inc
lcall
std
aaa
hlt
lret
or
inc
xchg
xor
testl
test
loope
and
push
and
rclb
clc
cmp
sub
clc
in
aas
movsl
inc
mov
cmp
dec
es
addr16
and
push
stos
add
inc
cltd
repz
shrb
adc
inc
xlat
mov
mov
adcb
jmp
mov
jbe
cmp
loop
leave
ljmp
clc
test
out
aam
sbb
adc
arpl
js
stc
jge
cltd
outsb
cmp
fsubs
cld
hlt
inc
xor
adc
pop
cmpsb
insl
cmp
or
sub
fsub
sub
jl
movsl
adc
inc
je
xorl
dec
xlat
repnz
jnp
pop
jno
inc
mov
inc
popf
imul
cmpsb
jne
add
jge
cmpsl
mov
sbb
stc
in
mov
mov
pop
popa
push
jge
push
rcl
movb
mov
mov
push
fisttps
mov
inc
xchg
jno
inc
filds
xchg
fisubrs
andps
mov
push
addr16
popf
sub
mov
push
push
in
and
mov
jp
jmp
adc
daa
push
sbb
or
pop
popf
daa
lcall
push
mov
xor
test
mov
or
movsl
sahf
xor
fneni(8087
in
cmp
ljmp
mov
in
jae
dec
in
xchg
mov
inc
mov
cmp
mov
jne
pop
pop
sub
xlat
std
sbbl
adc
jae
ss
xlat
add
mov
fisttpl
leave
push
cmp
jno
cmp
xchg
leave
aaa
lcall
imul
cmp
sub
ret
les
jle
sbb
data16
jl
std
sbb
aad
mov
or
in
pop
ret
mov
in
pop
cld
xor
dec
test
jmp
daa
vpsadbw
dec
jnp
out
xchg
gs
push
hlt
xchg
int
and
adc
cmp
mov
pushf
inc
and
ja
dec
inc
jbe
int
jbe
test
cwtl
test
repz
add
popa
je
ds
adc
inc
xchg
jle
push
insb
addr16
inc
jb
sarl
or
lret
pop
jg
cmp
push
in
mov
jb
mov
popf
les
inc
add
fdivl
lods
out
and
outsl
inc
fisubs
or
fstl
mov
movb
clc
jecxz
mov
mov
fsts
pop
sub
lds
fnsave
mov
sub
pop
rol
shl
lds
add
mov
test
pop
add
mov
jno
movsl
scas
cmpsl
or
mov
xchg
pop
negl
orb
repnz
jb
fmull
add
push
xchg
rcr
call
addr16
lret
in
jmp
xor
outsl
test
rorl
shl
addr16
test
ja
push
cmp
mov
shrb
lea
dec
xchg
insl
stos
je
imul
shll
in
int3
popf
push
in
bnd
jbe
filds
iret
insb
popa
lret
loop
pop
pushf
push
xchg
cmp
jns
sub
xchg
lcall
pop
push
add
aam
out
cmpsb
sbbb
mov
test
jne
repnz
outsb
mov
aas
negb
mov
inc
cmp
push
add
fwait
in
ds
xor
and
adc
push
mov
mov
ljmp
lock
inc
mov
filds
jl
out
mov
imulb
jne
test
enter
arpl
jecxz
cli
sbb
stos
inc
mov
icebp
push
iret
mov
add
imul
sbb
push
mov
cld
xchg
test
in
add
add
movsb
daa
mov
jl
fildl
inc
push
lahf
pop
fcmovnu
jns
in
mov
inc
mov
mov
cmp
mov
inc
std
push
in
fnsaves
push
mov
ss
jge
insl
out
testb
xchg
sub
inc
std
push
in
fnsaves
push
mov
ss
jge
in
xchg
testb
xchg
lods
cmpsb
sbb
push
in
xchg
fnsave
push
mov
fimuls
mov
cmp
ss
int3
fnsave
jno
sahf
push
fldenv
jb
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pusha
shl
shl
shl
int
repnz
push
push
popa
inc
jno
add
adc
and
xor
shl
shl
shl
andl
push
xor
jno
insl
and
adc
add
lock
shl
shl
andl
jb
adc
inc
xor
inc
xorb
icebp
cmp
mov
icebp
mov
adc
cmp
mov
inc
stos
mov
xchg
insl
pop
movsl
mov
scas
adc
test
lahf
scas
or
int
sbb
clc
pusha
jne
loope
fisttps
sub
sbb
in
pop
xor
push
cmp
adc
test
cmc
lock
sub
mov
mov
pusha
mov
test
rolb
jae
add
or
or
mov
jl
or
xchg
sbb
inc
jne
push
dec
adc
inc
loopne
pop
icebp
inc
mov
subb
test
mov
and
add
inc
adc
add
shl
shl
shl
andl
push
push
popa
inc
jno
add
adc
and
pop
test
movsb
nop
mov
in
clc
xlat
out
in
cmp
push
aas
add
add
jge
je
scas
movsb
mov
icebp
aad
fstl
or
adc
outsl
push
adc
pop
pop
xchg
loopne
icebp
scas
mov
mov
inc
pusha
push
push
popa
inc
jno
add
adc
and
xor
shl
shl
shl
andl
push
push
popa
inc
jno
add
adc
and
xor
shl
pop
or
xor
cmc
aam
sub
fcoml
add
or
xchg
or
stc
ret
mov
xchg
dec
aaa
cmpsl
xor
push
sbb
lds
test
fcompl
jb
shlb
mov
lods
pop
pop
arpl
inc
sti
cmp
jb
pop
fnsave
xor
pusha
movsl
jo
adc
pop
sub
insl
dec
test
mov
push
mov
xor
imul
lret
mov
jno
mov
push
sbb
sbb
dec
mov
dec
push
push
gs
ficomps
in
sub
sub
jge
inc
movsl
mov
adc
jno
push
mov
cmp
leave
sahf
mov
sahf
sub
or
ret
jmp
mov
fsts
popa
xchg
rolb
mov
movsl
cli
mov
call
cmp
mov
pop
out
loopne
insl
sub
addr16
nop
and
icebp
cmp
inc
clc
aaa
mov
xor
insb
dec
dec
mov
imul
or
sbb
mov
jne
test
pop
jbe
jle
or
inc
lret
out
or
dec
xchg
jmp
add
fmull
cld
add
sahf
jecxz
pop
jnp
mov
pop
or
xchg
ret
push
dec
iret
test
dec
sub
call
inc
mov
pop
ret
xchg
loopne
ds
xor
mov
cmp
and
out
into
fistpll
loope
mov
jmp
test
stc
or
ljmp
cmp
imul
pop
push
mov
js
dec
or
outsb
in
leave
xchg
mov
push
loopne
adc
rorb
pop
lret
mov
bound
jbe
leave
or
inc
pop
sub
dec
push
into
inc
hlt
decb
mov
insb
shll
pop
sahf
gs
cld
test
dec
jbe
and
and
jecxz
sbb
sub
mov
mov
and
out
or
test
inc
inc
dec
cmp
mov
pusha
inc
lock
cmc
test
decb
mov
mov
js
xor
jecxz
rcl
hlt
and
dec
mov
and
jns
xchg
adc
movsl
orb
pop
mov
fisttps
xchg
ficoml
jb
mov
je
fwait
pop
rorb
jecxz
stos
add
aaa
scas
aam
repz
push
rcll
in
pop
push
stos
sbb
xor
dec
arpl
leave
xchg
xchg
sub
sarl
mov
adc
lea
movsl
push
inc
mov
mov
pop
add
imul
lahf
cwtl
stos
call
and
or
push
addr16
adc
and
push
mov
xchg
lcall
cmc
pop
rclb
rcl
mov
fisttpl
cltd
dec
xchg
mov
or
insb
loop
cmp
add
and
jo
push
xchg
mov
in
mull
jle
sahf
sub
pop
loop
inc
xor
cmp
ds
xor
ljmp
lods
popf
dec
mov
sahf
int3
notb
ljmp
add
dec
insl
inc
inc
scas
lea
sti
mov
jne
pop
sub
loop
jge
sbbl
dec
and
dec
or
cs
mov
dec
push
lods
lods
push
inc
loopne
int
cmc
mov
aaa
jle
pusha
xchg
rep
mov
stos
lret
pop
xchg
pop
pop
mov
jno
out
int
dec
ljmp
sbb
leave
imul
das
pextrw
xor
mov
jb
push
into
call
insb
and
mov
fldz
sub
xor
inc
mov
xchg
arpl
daa
ds
test
push
dec
clc
loopne
jno
jmp
sbb
mov
ljmp
outsl
sbb
push
fwait
mov
mov
stos
lcall
pop
cmp
testl
sbb
push
mov
jmp
and
andl
rcll
popa
daa
xchg
test
lea
into
pop
cmpsl
xchg
fs
mov
inc
repnz
faddl
jge
xchg
test
subb
cmp
jmp
sub
scas
jae
je
enter
rorb
jl
scas
mov
pop
xor
xor
or
xchg
scas
dec
push
push
test
mulb
subb
mov
enter
sahf
pop
push
out
test
lods
mov
addl
cmp
pop
popa
roll
cmp
and
jns
mov
pop
dec
adc
jg
mov
aaa
ljmp
popf
cmp
cmovnp
test
lahf
and
mov
lock
push
jle
daa
mov
pop
push
sbb
mov
in
sub
outsb
cmp
jae
xor
ss
jae
mov
mov
push
push
mov
lea
lret
stc
aad
mov
pop
das
mov
test
cmp
sub
mov
push
lock
xorb
jns
or
and
pop
and
data16
sub
into
and
je
lods
shll
mov
xchg
mov
sub
push
xchg
jnp
dec
sbb
ret
xchg
repz
pop
repz
inc
int
add
ds
mov
test
xchg
push
mov
xor
push
sub
dec
leave
stc
cmp
sbb
pop
bound
sub
sbb
xchg
xchg
enter
hlt
rcrb
pop
out
cmp
into
cmpsl
cmp
sbb
push
ret
xchg
shlb
fwait
or
xor
cmovl
xorb
lods
sahf
push
pop
lock
daa
and
mov
jae
lcall
in
inc
in
gs
rorb
xchg
pop
test
in
loopne
cmp
mov
push
insl
mov
outsl
push
in
add
aaa
jle
add
fs
cmpsb
das
stc
sub
pop
and
popf
add
imul
ss
clc
in
cmp
or
add
repz
or
std
adc
add
sbb
or
ss
add
inc
hlt
pop
xchg
sbb
dec
adc
lods
or
sub
sbb
stos
icebp
push
sub
rorb
andl
xchg
arpl
bnd
mov
pop
push
es
adc
xor
stc
clc
sbb
sahf
mov
mov
pop
pusha
hlt
aas
or
push
mov
jl
and
or
push
sbb
out
fistpl
xchg
dec
mov
push
xchg
cltd
inc
iret
icebp
subb
pop
add
rcrb
sub
aas
add
lret
adc
mov
sti
xchg
shrl
ret
mov
outsb
push
push
fsubl
jb
addr16
aad
inc
fimuls
or
cmpl
je
arpl
adc
xchg
fisubrl
movsl
mov
xchg
push
sarb
sti
bnd
mov
dec
aaa
and
repnz
leave
addr16
movsl
xchg
push
jb
and
inc
or
pop
and
icebp
popf
mov
xchg
arpl
les
mov
pop
push
xor
push
jl
fcmovbe
shrb
fistpll
int
adc
movsl
sub
xor
push
jnp
out
mov
sub
loope
mov
and
adc
sbb
mov
outsb
dec
insb
xlat
push
add
xlat
popf
iret
loope
dec
lods
push
push
cmp
push
mov
mov
test
adc
mov
pop
mov
std
jecxz
or
mov
xor
mulb
mov
xor
jle
dec
rorl
sbb
cmp
stc
ret
das
dec
xor
add
fsubrs
push
jmp
or
movsl
mov
xchg
pop
sub
push
push
loope
ret
shll
add
pop
jle
xchg
jb
jle
xor
inc
lods
xchg
push
cmp
mov
out
cmp
jl
adc
rclb
sbb
adc
into
inc
push
cmpsl
loop
gs
aam
cmp
sbb
add
push
mov
xlat
iret
stos
push
jg,pn
mov
sub
adc
adc
add
rcr
sub
jbe
jmp
dec
mov
dec
mov
fsubs
or
iret
out
pop
pop
pop
add
sbb
cmp
in
lcall
sub
mov
loop
shrl
xlat
in
xchg
mov
or
inc
mov
jge
adc
stos
lods
xchg
leave
in
data16
pop
mov
push
mov
inc
fucomp
and
in
and
out
loopne
xchg
out
orl
cltd
dec
pop
xchg
mov
pop
jl
shl
mov
sbb
mov
aam
and
lds
mov
jp
ror
imul
scas
repz
into
xchg
mov
rorl
mov
inc
cmpsb
inc
mov
les
mov
call
sbb
xorl
shrl
or
idivl
clc
repz
loop
cmpl
jle
inc
push
lea
call
or
shl
rcl
lods
sub
sub
push
ds
or
scas
lret
outsb
cltd
arpl
mov
in
mov
sbb
ljmp
pop
adc
adc
mov
fmull
out
jp,pn
mov
cs
inc
hlt
push
jns
fsubs
enter
and
xchg
leave
repnz
scas
clc
roll
and
push
mov
fsubp
mov
out
loope
cmp
outsl
clc
cli
lahf
enter
xor
add
mov
mov
xchg
cmp
nop
sub
lods
cld
mov
shll
pop
enter
ss
sub
mov
and
popf
push
std
mov
in
loope
jb
call
cwtl
add
mov
in
mov
sti
or
loope
mov
add
mov
mov
mov
ret
test
add
add
scas
pop
jmp
lret
pop
cmp
xor
adc
adc
jnp
aam
pusha
ss
adc
jge
cld
mov
call
cmp
movsb
push
mul
mov
incl
addr16
or
adc
out
mov
sub
or
xchg
test
cmpsb
xor
mov
xchg
pop
or
sub
push
in
dec
add
or
cmp
dec
popa
cmp
lds
cmpsl
mov
dec
add
inc
add
jge
dec
pop
and
push
cmpsb
iret
xchg
ja
in
adc
push
dec
test
pop
dec
in
push
loopne
lods
int3
jecxz
addr16
or
dec
mov
in
xor
add
add
and
jb
shlb
cmp
cmp
cmpsb
dec
lods
cmp
out
leave
rcrl
mov
cmp
xchg
dec
mov
ret
popf
adc
mov
jb
push
ljmp
enter
insl
pop
mov
ret
cmp
cmp
or
pop
jnp
test
mov
das
and
in
lds
test
mov
inc
sbbl
test
mov
dec
jae
push
and
mov
jnp
inc
mov
je
pusha
sub
data16
jmp
out
jp
movsl
inc
std
andb
leave
imul
cmp
je
les
xchg
adc
push
pop
cmp
int3
lahf
ds
push
fs
daa
or
in
ja
mov
stos
lret
mov
daa
mov
test
fdivs
mov
fmuls
sub
pop
xor
lahf
xchg
mov
dec
pop
push
and
mov
shll
lods
inc
das
jg
add
jmp
inc
jae
inc
inc
inc
adc
arpl
mov
fcomip
popf
loope
mov
mov
ret
testb
fwait
loop
and
xchg
xor
je
cld
arpl
sub
xchg
push
in
sbb
xchg
imul
cmp
or
test
lahf
adc
inc
and
lods
in
test
mov
lods
xchg
add
inc
insb
ret
xchg
scas
xor
movsl
ss
daa
insb
and
in
push
mov
dec
sbb
mov
clc
jge
cwtl
sbb
mov
and
sub
cld
adc
fidivrs
outsb
xor
dec
mov
add
les
mov
jae
icebp
mov
scas
jl
je
mov
jnp,pn
push
daa
bound
aas
mov
retw
inc
fldenv
dec
mov
notl
and
dec
or
add
popf
mov
movsl
in
mov
and
push
lods
in
adc
push
aas
jne
xchg
dec
dec
test
sbb
es
push
andl
pop
cmpb
imull
fistpl
imul
add
lods
rcl
cmc
out
les
lods
ljmp
mov
jg
cmp
fs
int3
rorl
jb
xchg
inc
lock
arpl
adc
adcb
jecxz
jae
mov
rcrb
mov
mov
mov
sbbl
adc
sub
lret
lret
xchg
aaa
jae
sar
pop
mov
add
mov
jns
mov
adc
jmp
dec
js
in
sub
cmp
adc
stos
jnp
dec
jo
sarb
push
sti
mov
cmp
cmpsb
mov
lods
in
in
cltd
jns
jge
ja
pop
clc
in
data16
loope
cmp
icebp
test
xchg
mov
xchg
inc
std
ja
or
cltd
xchg
faddl
cmpsl
or
les
xchg
dec
sbb
pop
ret
jnp
ds
call
pop
fs
data16
mov
pop
adc
sub
mov
mov
mov
adc
cmp
pop
cmpsl
cmpsl
adc
into
mov
mov
mov
popa
jo
pop
and
inc
jle
dec
das
jbe
dec
shll
cmp
inc
cmpsl
movsl
dec
iret
rorl
sub
clc
shl
sbb
push
js
int
pop
loop
inc
xor
adc
push
push
xor
and
icebp
into
sub
or
cld
pop
mov
call
pop
xchg
das
jo
loop
add
sub
sti
sbb
fwait
cmpsl
scas
and
cmp
cltd
jb
pop
inc
imul
jae
cs
push
push
add
test
ds
jg
push
and
pop
es
push
out
pop
addb
jae
sub
mov
roll
dec
lea
sbb
mov
mov
lea
arpl
cs
adc
mov
stc
fmulp
dec
ret
icebp
cmp
call
adc
lahf
inc
xor
mov
insb
pusha
je
arpl
sbbl
and
or
stos
mov
jecxz
dec
pop
aam
cmp
mov
stos
sahf
mov
inc
adc
xor
incb
pop
dec
jecxz
cmpsb
inc
shr
cmpsl
lods
repnz
imul
push
xor
aad
faddl
roll
cwtl
call
shl
xor
mov
cmpsb
iret
inc
repz
mov
sahf
dec
and
and
es
out
inc
sbb
push
and
xor
and
in
scas
pop
lret
sbb
cmp
cmp
sbb
ss
movsb
stc
pop
pushf
les
xchg
add
cmp
push
std
or
sysret
daa
mov
stc
leave
jecxz
aas
cltd
pusha
pop
insb
lret
out
ficomps
dec
mov
xchg
fsubrl
fisubrl
dec
mov
cmpb
pop
xchg
pop
lods
aaa
nop
xor
jb
outsl
mov
sbb
ljmp
ja
arpl
out
mov
pop
aam
jge
subb
ret
sbb
xchg
call
xor
lret
or
rorl
inc
std
jne
loop
mov
jae
and
adc
xchg
das
incb
fcoml
sti
ret
imul
mov
mov
xchg
xchg
shlb
test
xchg
pop
xor
jno
call
insb
mov
mov
push
cmp
out
es
dec
scas
out
push
out
and
fsubr
sbb
jno
vminps
dec
sbb
and
push
mov
or
roll
int
jnp
hlt
mov
lods
dec
ss
xlat
pop
sbb
mov
mov
out
popf
imul
push
decl
adc
xchg
xchg
rclb
out
insl
and
test
or
push
jbe
pop
aad
sub
jp
mov
push
addr16
add
dec
aad
mov
loope
jne
xchg
adc
push
xchg
push
sub
fldt
pop
repnz
inc
jns
lods
xchg
sub
and
movsl
into
and
mov
push
pop
daa
rolb
and
pop
add
dec
fdivs
push
jl
or
fmuls
xchg
mov
fidivl
in
pop
cmp
xor
loopne
sub
ror
mov
dec
pop
sbb
jo
repnz
pop
push
pushf
lcall
pop
jle
movsl
out
lock
xlat
daa
cmp
pusha
mov
ljmp
negb
sub
inc
popf
push
pushf
jo
leave
pop
cld
fstpt
out
adcl
movsl
push
stos
jl
dec
movsw
aad
lahf
push
sbb
dec
out
cmp
mov
add
pusha
lods
icebp
lds
hlt
stos
push
dec
sub
xor
stc
mov
in
push
test
xchg
jae
dec
jp
add
in
dec
mov
ja
sbb
in
and
adc
pop
icebp
xchg
inc
je
pop
xor
test
fs
xor
mov
rol
cltd
pop
popf
adc
push
leave
stos
fcoml
imul
bound
jl
cli
ja
mov
push
cmp
and
iret
xchg
lods
pop
cmp
or
movb
mov
rorb
lret
stos
inc
pop
mov
rcr
iret
loope
xor
jmp
cli
jb
hlt
xorb
jae
push
bound
cmp
in
or
rcr
dec
into
rclb
fisttps
xorl
leavew
ret
pop
push
cmp
data16
cld
fadds
les
orl
lds
push
jecxz
mov
loopne
fs
outsl
out
out
cltd
stos
mov
inc
mov
bound
sub
ret
cmpl
ljmp
mov
fxch
cltd
stos
or
sub
scas
adc
pop
push
js
mov
daa
stos
hlt
push
inc
mov
ret
jb
mov
loop
push
icebp
dec
xchg
loop
add
xchg
sarl
sbb
sbb
mov
sbb
or
movsb
dec
stc
inc
xor
outsl
push
cmpsb
jmp
iret
xchg
jnp
movsl
dec
mov
pushf
push
xor
mov
jne
push
popf
clc
inc
adc
aad
dec
fbld
test
adc
daa
mov
mov
mov
mov
lahf
inc
sub
mov
jge
cmp
push
aad
out
mov
xchg
subb
fcomi
jl
mov
out
mov
mov
mov
aam
jp
ds
fcoml
outsl
movsl
popf
xchg
into
call
jb
pop
sbb
popf
push
adc
mov
push
jge
cmp
cmpsl
and
mov
ret
inc
push
xchg
vpmaxub
push
cmp
cmp
lock
and
test
push
into
leave
or
xchg
dec
cmp
frstpm(287
jle
pop
mov
mov
and
cs
lahf
das
sarb
pop
adc
and
pop
fsts
nop
fldcw
push
movsl
inc
js
cmp
jge
lds
mov
inc
pushf
iret
jmp
je
je
mov
push
fsts
divb
fdivr
dec
mov
test
in
jl
mov
push
fcompl
je
mov
scas
or
mov
jo
xchg
fidivrs
pop
int
mov
clc
push
jecxz
inc
and
push
pushf
and
adc
mov
and
fndisi(8087
cmp
mov
enter
push
outsb
xchg
sbb
hlt
bswap
dec
inc
in
cmovg
loope
and
inc
fidivrl
out
sbb
mov
lds
jne
xchg
xor
pop
mov
in
loop
jle
test
daa
add
adcl
dec
fildll
cwtl
arpl
add
cmovge
andl
xchg
js
ret
add
daa
mov
mov
out
inc
xor
stos
loopne
fldl
out
push
popa
lss
xchg
fbstp
push
loop
orb
es
cmp
testl
lcall
scas
sbb
pop
jb
loope
mov
stos
insl
jg
xchg
jmp
stos
push
push
or
pop
int3
sub
andl
xchg
sti
es
inc
jle
jle
test
sbb
mov
js
std
mov
ss
inc
hlt
cmc
fs
rep
lea
aam
movsl
lahf
xchg
negb
fwait
mov
adc
and
xor
ljmp
sbb
cmpsb
stc
dec
nop
mov
test
pusha
xchg
xchg
aam
cmpps
mov
test
cmp
and
xchg
push
xchg
div
xchg
in
cmp
movsl
fimuls
pop
xor
pop
loope
icebp
mov
mov
mov
inc
pusha
push
push
popa
inc
jno
add
adc
and
xor
shl
shl
shl
andl
push
push
popa
inc
jno
add
adc
and
xor
shl
shl
shl
andl
push
push
popa
inc
jno
add
adc
and
xor
shl
shl
shl
andl
sti
cli
popa
inc
push
inc
mov
into
gs
jne
inc
xchg
push
test
sbb
out
imull
lds
test
gs
movsb
inc
xchg
push
test
aam
in
cmc
and
xor
add
pop
mov
test
lods
jne
inc
mov
and
int3
adc
push
mov
mov
movsl
xor
cld
inc
adc
cvtpi2ps
bound
sub
adc
push
sub
rcrb
mov
mov
mov
jg
sbb
pop
std
dec
pop
mov
int3
cmp
add
icebp
mov
rcll
lcall
loopne
mov
dec
sub
loopne
aad
push
andl
push
movsb
xchg
and
mov
sub
cmc
daa
mov
jge
push
cs
inc
shrb
fcmovbe
adc
std
and
push
pop
add
sbb
jmp
pop
mov
stos
dec
push
into
mov
dec
mov
add
adc
xchg
push
cmpsb
mov
mov
test
and
int
fucom
sub
cmp
or
mov
test
add
push
movsb
add
pop
mov
xchg
test
mov
nop
imul
hlt
aaa
loopne
in
adc
add
xchg
inc
mov
test
dec
xchg
inc
mov
push
rorb
in
cmp
and
cmc
jne
add
xor
pusha
cwtl
xor
in
cmc
and
adc
add
je
test
gs
movsb
inc
xchg
push
test
aam
in
cmc
and
adc
add
je
test
gs
and
mov
xchg
cmc
leave
or
out
stos
mov
lret
cmp
pop
out
dec
dec
add
dec
inc
jo
xor
mov
cwtl
cwtl
icebp
mov
jne
es
mov
sbb
sbb
or
enter
loope
push
xchg
clc
cmp
sti
out
shrl
cltd
test
jge
mov
popf
shlb
bnd
adc
aas
xor
and
popf
mov
rolb
dec
out
xor
lds
imul
les
adc
loope
pop
ja
lret
outsb
rorl
mov
movsb
notl
in
xor
mov
cmc
xchg
lea
fldenv
test
fnstsw
push
and
dec
cmp
cltd
mov
popa
addr16
inc
inc
aad
bound
or
sbb
rcrl
arpl
and
in
dec
pop
jl
adc
add
lods
stos
pop
push
movsb
lret
cmp
mov
aad
mov
push
push
pop
add
xlat
xlat
mov
pop
push
xorb
jecxz
pop
xchg
ucomiss
fnop
pusha
dec
decb
mov
xchg
mov
add
and
or
test
or
mov
push
sub
popa
movsl
sub
pop
xchg
aam
aaa
or
insl
test
fdivl
sbb
es
lea
jmp
or
push
loopne
adc
in
push
xchg
test
data16
pop
mov
jle
pop
jne
inc
incl
inc
xor
push
push
clc
cwtl
stc
or
add
stc
mov
jno
or
xchg
mov
ret
cwtl
fsubs
test
decl
addr16
xchg
pushf
xlat
inc
adc
into
into
xor
leave
sbb
out
aam
mov
jae
andb
imul
add
cmc
iret
je
mov
call
sbb
enter
cmpsb
mov
sarb
subb
notb
ss
mov
loope
mov
mov
ret
fs
dec
nop
sub
sbb
add
stos
sub
test
mov
lahf
push
jbe
test
out
lret
jge
aad
lahf
lahf
shlb
xor
lds
inc
push
mov
xchg
das
and
adc
dec
rsm
insb
out
stos
nop
adc
pop
pop
mov
pop
sar
mov
sbb
and
add
and
stos
shrl
ja
adc
repz
xchg
in
mov
shrb
dec
shl
push
fwait
jo
outsl
and
xchg
das
inc
and
and
sar
mov
popa
mov
test
ffreep
out
fisubrs
arpl
mov
shl
adc
pop
ret
mov
stos
test
leave
mov
js
jl
es
in
sbb
or
push
in
icebp
mov
xchg
rorb
pop
and
imul
xchg
ja
push
xor
dec
ja
or
xor
lahf
mov
cwtl
sti
ret
dec
add
out
push
or
aam
iret
and
fsubrl
dec
xchg
push
xlat
jp
lods
sub
out
inc
ret
pusha
repz
push
add
or
test
mov
pop
adc
lret
hlt
inc
in
and
scas
lds
sbb
mov
adc
xor
fisttps
cmpsl
mov
add
dec
das
push
sbb
test
mov
or
push
dec
inc
movsl
sub
xlat
fistpll
push
ret
cmp
jge
pop
push
daa
into
cmp
icebp
dec
movsl
fdivl
repnz
mov
popa
aad
movsl
fidivs
push
jge
sub
in
mov
ret
les
mov
pop
mov
mov
rclb
mov
jns
sub
or
mov
dec
sub
push
lahf
push
mov
movsl
dec
push
pop
dec
xor
outsb
les
stc
inc
andl
jmp
xor
das
out
test
xlat
sub
pop
mov
cmp
push
push
lret
in
dec
fs
ja
arpl
xchg
iret
mov
frstor
dec
dec
dec
or
mov
xlat
int
iret
push
jmp
jno
pop
cmc
pop
mov
daa
mov
or
jne
stc
or
lret
pop
dec
scas
push
lcall
mov
push
data16
in
mov
outsb
pop
in
mov
pushf
sbb
jge
cli
ret
or
mov
repnz
mov
lret
cmpsl
mov
jo
lret
cmp
lods
das
or
lahf
and
add
or
jae
pop
cmpsl
dec
iret
add
mov
and
pop
push
dec
push
addr16
enter
std
adc
sbb
and
cmpsb
sub
cmp
imul
jmp
fldenv
push
jmp
psubd
jl
cmpsb
jae
jne
clc
out
push
leave
pop
xchg
aad
xor
cld
jmp
pop
jmp
jo
add
jle
and
cli
xchg
lahf
or
xor
arpl
mov
or
je
rclb
or
test
dec
xlat
mov
xor
xchg
mov
aam
sub
push
xchg
je
ficoml
ficoml
ljmp
pop
into
push
enter
mov
mov
mov
movl
sub
dec
sub
ljmp
icebp
ljmp
push
mov
inc
loopne
repz
xor
cvtps2pd
lret
jg
shl
movsb
mov
insb
xor
int
or
sbb
js
sbb
test
add
insb
mov
jnp
inc
mov
push
mov
adc
inc
rclb
into
clc
pusha
jnp
jno
pop
clc
ja
lahf
push
push
imul
lahf
jecxz
out
dec
mov
inc
pop
xchg
xorl
add
jg
scas
add
div
xor
mulb
mov
xchg
and
int
xorb
jecxz
mov
dec
pop
stc
das
sbb
mov
mov
call
outsb
dec
pop
dec
repnz
mov
mov
popf
loopne
cmpsl
les
push
gs
xor
mov
pop
sbb
mov
mov
test
sub
mov
fldenv
or
stc
popa
lahf
fs
cmp
aad
push
fisubrl
push
jl
ja
mov
and
fwait
and
imul
out
cmp
add
push
adc
sbb
paddusb
fstps
and
aad
je
mov
xchg
arpl
push
xorl
mov
ljmp
cwtl
adc
in
xchg
xor
mov
nop
inc
hlt
outsb
sub
xchg
shl
xor
mov
shl
incl
imul
mov
mov
sbb
jae
mov
mov
fcomip
out
enter
xchg
pop
cli
mov
addl
push
pop
sub
outsl
add
nop
scas
dec
into
add
cmpb
push
mov
shlb
mov
hlt
mov
inc
cltd
and
mov
addr16
jmp
pop
or
mov
stos
xchg
pop
xchg
scas
pop
jmp
xor
adc
clc
aas
les
xchg
mov
jg
dec
mov
dec
pop
decb
sarb
imul
clc
sbb
pandn
adc
inc
jne
fwait
cli
test
out
fdivs
push
pop
pop
jge
or
out
sub
jb
inc
push
sbb
cmpsl
scas
push
mov
sbb
and
aaa
mov
les
jns
leave
push
sbb
push
fiadds
sub
shrl
pop
mov
add
into
ja
xchg
push
mov
push
sub
mov
add
jp
pop
sbb
xor
int
scas
push
xchg
call
cltd
dec
xchg
bound
fldt
ljmp
mov
adc
outsl
sub
jecxz
pop
mov
cmpsl
push
add
dec
pop
ss
lret
imul
fwait
pop
adc
inc
dec
push
ret
in
inc
xchg
xchg
dec
add
push
push
mov
scas
dec
ret
push
adc
xchg
add
daa
jmp
inc
cld
cmpsl
jecxz
dec
lret
arpl
das
stos
inc
xor
out
adc
mov
sub
dec
pop
out
mov
add
inc
adc
push
or
xchg
adc
in
sarb
call
jecxz
adc
idivl
orl
jle
sbb
test
sub
lds
inc
cmp
adc
adcl
sbb
xchg
sbb
push
sub
stos
imulb
cmp
aad
fisubrl
pop
fdivrp
mov
test
loope
arpl
pushf
rolb
mov
shl
adcb
sub
or
adc
and
xor
push
pop
and
icebp
jle
sahf
lcall
push
sub
sarl
fbld
repz
xor
and
gs
push
mov
xor
lds
sub
mov
mov
imul
cwtl
adc
imul
stos
hlt
dec
les
fistpll
and
push
jae
pop
push
mov
fwait
outsl
lock
and
addr16
test
mov
jnp
jmp
and
push
pop
push
pop
dec
mov
push
imul
iret
inc
in
int
mov
js
sbb
imul
pusha
icebp
and
xor
jbe
outsl
add
dec
push
mov
test
cli
dec
ja
push
das
std
jae
adcb
lcall
add
and
and
dec
hlt
gs
and
mov
sar
jno
lcall
cwtl
xchg
jb
xor
dec
xchg
mov
fwait
popa
adc
jg
je
cwtl
mov
jl
ret
sub
add
mov
lods
cmpsl
inc
mov
xor
fstpt
rcrl
mov
mov
shrb
xor
cmc
xor
test
add
xchg
or
jg
lods
addr16
ljmp
xchg
into
in
rcrl
xor
lret
jl
daa
addr16
and
sub
ror
fs
mov
jecxz
adc
test
in
repz
dec
cmp
push
mov
push
pusha
dec
sahf
jecxz
nop
ret
sbb
mov
xchg
mov
mov
pop
imul
repnz
dec
in
sbb
or
adc
cwtl
jecxz
cmp
ret
fmuls
mov
icebp
addl
xchg
jno
push
push
fwait
push
add
pop
sbb
push
ret
rcl
fsubr
jns
add
sbb
pusha
iret
bswap
out
push
sbb
inc
inc
sbb
sti
scas
lea
xchg
cwtl
fimull
cs
sbb
aaa
stos
pop
inc
jns
push
rcl
jg
fs
cmp
add
xchg
subb
jle
bound
sbb
cmp
adc
mov
int3
add
adc
jle
sbb
ss
test
jle
in
xchg
lea
mov
inc
sub
push
and
rcrb
imul
fcoms
mov
xor
xchg
lret
outsb
test
push
fidivs
mov
mov
push
ja
aas
js
repnz
pop
jle
add
push
lods
dec
adc
aad
mov
xor
loopne
gs
push
scas
xchg
inc
mov
call
mov
imull
pop
xchg
ss
les
jnp
push
fmull
push
jmp
or
adc
pop
mov
sti
inc
mov
js
dec
outsl
jg
in
sbb
xchg
leave
pushf
cmpsl
bound
popf
lods
xlat
push
jbe
sbb
and
jno
sub
fmul
lods
fsubrl
mov
loopne
arpl
lods
mov
xor
fwait
xchg
hlt
sti
sbb
mov
je
or
sbb
daa
adc
mov
and
or
dec
dec
push
or
mov
aam
sbb
dec
cmpsl
fs
mov
ficompl
jmp
mov
imul
adc
dec
inc
jno
fnstsw
mov
data16
das
mov
arpl
cmp
push
xchg
lods
inc
std
test
jl
jecxz
out
inc
xchg
cli
adc
rcl
arpl
dec
stc
scas
jb
xchg
dec
aam
xor
ja
and
sub
mov
call
shl
pop
xchg
sub
sub
je
popf
or
aad
add
cmpsb
push
mov
in
das
pop
lods
shl
jecxz
dec
sub
jmp
je
call
popa
hlt
mov
mov
and
mov
shl
pushf
push
xlat
pop
lret
cmpsb
add
or
mov
mov
shll
je
sbb
out
addr16
xchg
add
insl
popf
mov
aam
mov
cmp
into
adc
mov
mov
jmp
hlt
add
push
xor
cld
rcrl
dec
lea
cmp
js
test
dec
cmp
in
mov
dec
add
punpckhbw
pop
and
sbbl
iret
lret
dec
stos
lods
cmp
cmp
push
popa
lahf
negl
int
mov
xchg
or
aas
lahf
jno
loope
arpl
and
jecxz
sub
ror
inc
movsb
test
pop
push
and
mov
adc
pop
push
js
pop
xchg
in
add
lds
push
mov
stos
add
fcoms
or
sbb
outsb
add
data16
repz
sub
rcrl
cli
sti
repz
mov
xor
lods
dec
aas
push
arpl
sub
push
jo
fimuls
loopne
shrl
addr16
sbb
repnz
sub
and
push
and
xchg
pop
push
aam
ss
fidivl
iret
arpl
cmpsb
iret
lods
sti
lret
mov
mov
add
std
jp
cmp
add
cmp
mov
movsb
pop
cmpb
ja
and
in
sbb
dec
out
inc
inc
daa
loope
add
and
xchg
dec
and
or
dec
out
push
push
repz
scas
cmp
add
xor
xchg
lea
add
ja
sbb
cmp
adc
or
cmp
mov
mov
pushf
js
jl
pop
mov
mov
rcll
and
dec
movsb
pop
popf
fcoms
arpl
sbb
aaa
mov
push
cmp
das
fs
cmp
jg
std
dec
or
sbb
psrlw
ror
aaa
dec
mov
and
aad
xchg
xlat
cltd
lcall
jno
in
stos
mov
fisttpll
out
mov
dec
dec
sbb
sub
cli
jae
fidivl
out
and
xor
fs
ljmp
mov
pop
rorl
add
js
negl
lcall
daa
imul
push
sbb
cmc
aaa
sbb
push
sub
jp
insl
addr16
mov
xchg
jg
pop
mov
cmc
pop
ds
lods
mov
lret
rcrb
mov
adc
mov
jmp
lods
jbe
cs
fcoml
push
in
push
xlat
dec
dec
adc
insl
mov
inc
jecxz
mov
push
lcall
lods
pop
cmc
orb
dec
mov
cmp
mov
xchg
fcompl
xchg
int
and
mov
pop
pop
add
mov
loop
and
sub
es
div
cmp
add
imul
lea
shll
insl
dec
pusha
push
mov
pop
push
out
adc
mov
sbbb
addr16
hlt
or
in
sub
jg
shrl
das
mov
push
pop
inc
and
ja
or
int3
test
xorb
push
adc
or
mov
in
mov
js
ret
and
lret
js
test
dec
call
loope
arpl
adc
xchg
daa
jmp
out
daa
adc
out
lods
mov
add
dec
decl
lds
cmpsb
xchg
push
sbb
scas
int
aad
lcall
aad
cli
cmp
adc
sub
repnz
mov
and
loop
and
mov
jbe
mov
push
fidivrs
icebp
mov
cmp
loope
or
das
xchg
inc
loope
or
and
xlat
xor
pop
addr16
mov
aas
pushl
push
xchg
popf
and
fsubrs
outsb
test
pop
cmpsb
dec
add
aaa
int3
addb
or
pop
xor
sub
fnstsw
scas
jns
pop
rcr
mov
pop
loope
bound
aam
leave
ja
inc
push
inc
fcom
jbe
data16
mov
inc
cmp
cmc
sub
outsb
jp
data16
sub
fadd
jmp
or
mov
mov
mulb
mov
je
inc
or
jb
test
pop
jnp
mov
ss
das
fwait
emms
movsl
and
sbb
xor
mov
ret
icebp
pop
xlat
inc
loope
jle
mov
mov
jge
jecxz
add
pop
inc
stos
cli
lret
outsl
add
cmpsb
fwait
push
xlat
mov
xchg
stos
mov
inc
test
aas
xchg
in
xor
loop
jl
mov
xchg
sub
pop
fwait
test
inc
dec
jmp
sub
ret
and
mov
add
xor
daa
es
pop
jecxz
jmp
shll
test
sbb
dec
xchg
out
stos
in
cmp
aad
pop
push
fimuls
jnp
jns
mov
inc
aas
enter
adc
jg
add
or
test
push
cs
cmp
fucom
dec
fidivrs
fsub
sbb
std
stos
pop
xchg
adcl
sub
jge
out
push
jb
and
mov
movb
in
adc
xor
scas
pop
fsts
sbb
add
int3
jmp
pushf
mov
xor
mov
loop
mov
dec
nop
rolb
pop
sub
outsb
lea
pop
ss
or
clc
std
repnz
in
inc
fistpl
mov
shll
inc
xadd
test
sbb
sub
cmpsl
inc
movl
and
pushf
icebp
inc
rclb
push
push
jb
xchg
enter
int3
pop
loope
add
sbb
push
fisubrl
dec
jb
je
mov
outsl
pop
mov
mov
movsl
popa
dec
pop
push
into
xor
xchg
and
nop
xchg
jle
inc
jmp
pushf
je
dec
icebp
int3
dec
add
adc
sbb
pushf
inc
test
in
adc
mov
xchg
sub
ljmp
jecxz
sbb
bound
mov
push
dec
cmp
loopne
cmp
mov
dec
sub
xor
repz
mov
pop
out
addr16
cmpsl
adc
popa
adc
add
xor
pop
pusha
test
das
ret
xchg
mov
xor
pop
cli
fdivl
xor
mov
mov
pop
mov
inc
arpl
aaa
clc
jmp
lea
inc
adc
jmp
mov
sub
fidivrs
out
pop
setp
sub
cltd
clc
jge
jbe
and
in
aad
xor
ret
sbb
insb
ret
into
sbb
cwtl
in
sarb
sub
xchg
and
fistpll
xchg
and
xchg
mov
call
mov
jp
sahf
mov
shl
inc
xlat
dec
popl
xchg
mov
adc
sbb
cmp
popf
lods
fsubp
es
adc
shlb
or
pop
sub
sub
mov
jl
mov
test
xor
icebp
push
js
sbb
shrl
adc
notb
lret
dec
insl
stos
push
adc
mov
mov
ja
das
adc
adc
les
pushf
les
inc
cmp
in
idiv
sub
in
mull
bound
xor
mov
or
mov
dec
inc
aas
cmp
xlat
sub
inc
push
add
push
xor
pusha
imul
xchg
lods
xchg
addr16
lea
dec
and
pop
scas
jg
jbe
andl
test
sbb
rcl
pop
lock
pop
ds
dec
aad
cmc
aaa
or
sub
in
dec
adc
into
in
adc
push
mov
mov
jbe
dec
mov
adc
idivb
xchg
push
cwtl
and
cltd
jno
lods
scas
push
cmp
in
popa
fldl
sti
push
inc
loopne
sbb
bound
sub
cmp
adc
les
bound
xor
imul
cs
leave
roll
mov
movl
push
dec
jge
push
or
outsl
cmp
out
arpl
xor
inc
aas
dec
or
jmp
dec
mov
pop
in
jne
jg
mov
lods
jne,pt
out
jae
lods
add
and
bound
cltd
xor
mov
add
popf
xchg
mov
push
lret
xabort
xor
cmp
sub
mov
xchg
xor
pusha
stos
out
xlat
arpl
xchg
xor
loop
dec
addr16
fcomp
dec
jb
aad
jle
fcomi
pushf
jle
leave
push
sti
mov
imul
jnp
call
ret
loop
xor
in
mov
ret
push
inc
or
xchg
gs
mov
ficomps
ja
cmp
xor
push
cmc
out
aas
aam
pop
lcall
push
add
outsl
dec
movsb
jp
push
test
aam
in
cmc
and
adc
add
je
test
gs
movsb
inc
xchg
push
test
aam
in
cmc
and
adc
add
je
test
gs
movsb
inc
xchg
push
test
aam
in
cmc
and
adc
add
test
inc
gs
movsb
inc
xchg
push
test
aam
les
xor
mov
aad
sar
cmp
mov
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
nop
pop
orb
mov
sub
fs
xor
and
push
fwait
inc
mov
pusha
stos
nop
pop
orb
mov
or
cmp
dec
adc
add
xor
and
nop
incl
jo
pusha
stos
nop
pop
orb
mov
or
cmp
sub
fisubl
jmp
push
fsubrl
add
push
in
mov
int3
nopl
sbb
jno
iret
ss
adc
outsb
fcomps
pop
in
adc
das
or
xchg
mov
mov
iret
add
inc
shll
add
sti
rorb
mov
aad
pop
push
mov
jnp
mov
lret
xor
loopne
add
mov
aaa
pusha
xchg
xlat
sbbb
mov
or
loopne
popf
test
scas
mov
push
iret
push
stos
outsl
lcall
mov
movsl
sub
and
pop
ljmp
popa
dec
insl
add
jae
sub
push
xor
inc
into
iret
mov
fidivl
pop
orb
mov
or
cmp
sub
fiaddl
lret
and
push
lcall
rcrl
xor
cmp
sub
pop
mov
xchg
pop
loop
adc
pop
lcall
es
cmc
ss
aad
int3
or
pop
test
insl
mov
jne
push
mov
push
ljmp
sbb
fists
sbb
pop
int3
adc
loopne
adc
add
xor
and
push
lcall
nop
pop
orb
mov
or
cmp
sub
fiaddl
lret
and
push
lcall
nop
pop
movsl
bound
out
mov
inc
leave
jmp
scas
je
xchg
push
mov
xchg
pmuludq
aam
mov
cld
and
jge
hlt
icebp
js
add
jne
jbe
ja
jg
lret
add
sub
clc
out
sbb
xlat
dec
das
fldcw
shrl
jmp
xor
pop
add
cs
roll
shrb
loop
insb
mov
mov
outsl
jno
outsl
or
bswap
add
test
clc
mov
mov
lods
outsb
aaa
pop
jmp
mov
and
stc
fistpll
mov
shlb
mov
or
test
or
jnp
pop
xchg
jle
jae
adc
lcall
enter
lcall
jbe
icebp
inc
mov
dec
addr16
popa
fsubrl
notl
std
idivl
dec
lea
test
loopne
enter
ret
xchg
inc
fisttpll
iret
mov
and
adc
xchg
leave
aam
mov
in
cmp
pop
mov
outsl
popa
pop
xlat
xor
out
cmp
clc
pop
xlat
out
sub
push
sar
cld
jno
hlt
dec
push
arpl
push
out
call
int3
cld
cmp
add
cmp
pop
lods
test
stc
sbb
cs
dec
xor
cmpsb
mov
rcrl
shrl
insb
push
or
jg
aaa
or
sarl
imul
and
sbb
pop
xor
imulb
or
notl
xchg
mov
push
mov
sbb
movups
jno
stos
pop
adc
fwait
lret
cs
das
pusha
add
mov
sbb
mov
cmp
mov
in
out
addl
mov
sub
fsubp
or
ret
and
js
cmp
sahf
sub
fwait
add
dec
mov
data16
dec
and
lret
cmp
sbb
xor
stc
insb
add
pop
loop
sub
cltd
adc
arpl
cmp
push
repz
fisubrl
inc
and
jb
mov
mov
ljmp
rorb
and
adcl
rol
notb
pop
and
fsts
dec
movsl
mov
push
pop
pop
jo
sahf
mov
xchg
out
hlt
cltd
push
xor
loop
adc
sub
pop
add
sub
dec
pop
cmpl
shlb
or
add
and
push
pop
shrl
push
inc
in
inc
pushf
inc
ja
xchg
xchg
arpl
push
addb
lock
loope
adcb
stc
mov
imul
es
adc
xor
pop
popf
jmp
jnp
je
je
inc
lahf
js
push
and
rcr
inc
fwait
jnp
xchg
xchg
jmp
sbb
cmc
dec
mov
mov
leave
adc
inc
jo
inc
ja,pn
add
adc
and
inc
adc
jae
in
mov
andb
aaa
inc
fs
adc
movsb
outsl
repz
pushf
fcoms
mov
mov
cmp
sbb
mov
ja
lret
adc
lock
pop
mov
adc
fidivrl
mov
leave
mov
or
sahf
adc
pop
dec
jae
fidivrs
in
sub
add
adc
ret
and
jp
shlb
jg
ficoml
pop
xchg
arpl
das
sbb
cmpl
pushf
sbb
dec
mov
mov
push
fs
inc
sub
dec
or
dec
xorb
adc
fmull
jbe
les
js
repnz
scas
xor
pop
xor
pop
rcll
lcall
loope
sbb
lahf
push
test
xor
jg
inc
inc
or
fs
rcrl
sbb
pop
imul
add
push
out
sahf
mov
mov
fsubl
add
mov
rcrb
xchg
inc
pushf
js
addr16
mov
add
or
addl
mov
jl
cmpsb
in
rcrb
add
loopne
inc
add
pop
stos
sub
cmpsb
and
idivb
cmpsl
clc
lods
sbb
int
stc
cmp
lods
push
sbb
adc
dec
stos
sub
sti
dec
dec
dec
dec
nop
fnstcw
hlt
jl
and
inc
addr16
test
or
sub
jmp
mov
cs
xor
or
mov
pop
inc
ljmp
xchg
and
mov
lods
pop
aaa
punpckhbw
dec
xor
out
and
lcall
and
cltd
movb
loopne
push
xchg
repz
cmp
je
or
xchg
sarb
adc
sbb
ss
ret
insb
cld
fwait
idiv
icebp
enter
and
add
jbe
insb
push
fnstcw
es
pop
clc
fs
test
insb
cmp
xchg
int3
in
inc
ret
stc
cmp
dec
pop
in
int
push
add
jne
movsl
or
ret
add
sbb
shl
or
scas
xor
add
js
sub
mov
lock
mov
dec
pop
pop
sbb
jmp
cmp
mov
push
xlat
xchg
pop
insl
fsubrl
push
add
bound
xchg
les
and
pop
in
mov
scas
pop
add
out
push
pop
push
xchg
insb
pop
mov
ss
dec
jae
pop
nop
daa
cwtl
cmp
dec
and
inc
sub
push
fsub
pop
pop
sbb
and
gs
movsl
stos
ljmp
pop
or
orb
outsl
sub
mov
iret
xor
gs
test
mov
pop
mov
nop
data16
and
fwait
icebp
std
cmp
pop
adc
loope
add
roll
adc
add
ret
push
sub
add
subb
call
push
lods
push
push
aaa
adcb
loopne
push
add
clc
roll
xor
push
shl
pop
xor
mov
clc
cs
mov
xor
shr
sbb
or
and
stos
leave
js
push
data16
mov
pop
pop
sti
clc
das
outsl
pop
inc
cli
adc
jl,pn
adc
mov
fsubrl
xchg
cmp
test
enter
xchg
adc
mov
loopne
push
push
les
sub
insb
xor
sub
out
lret
sbb
insb
inc
and
pop
outsl
lret
addb
pop
xchg
dec
shll
pop
stc
enter
addr16
xchg
mov
jne
push
cmp
ljmp
outsl
aam
mov
lods
idivl
loope
add
cmpsl
mov
push
jp
in
icebp
cwtl
xchg
adcl
lods
stos
adc
push
or
mov
and
inc
in
or
mov
loope
push
ljmp
xchg
sbb
push
add
mov
mov
imul
loope
cli
loopne
popa
int3
mov
sbb
cmpsl
shrl
out
push
scas
shrl
shll
inc
adc
loop
mov
cld
test
out
gs
push
ljmp
mov
xor
sub
sbb
ljmp
test
dec
mov
movsb
in
in
cmc
sub
jg
jl
push
mov
xchg
mov
in
inc
push
arpl
arpl
push
pop
dec
aas
mov
movsl
sahf
jecxz
test
sti
shrb
inc
xlat
loop
lock
inc
rol
sbb
pop
mov
xchg
stc
xor
lcall
cmc
xchg
outsb
mov
cld
repz
adc
hlt
pop
push
xchg
cmp
mov
jl
out
sub
ret
testb
sbb
sub
xor
out
lcall
adc
je
inc
mov
mov
add
add
arpl
adc
push
adc
outsl
arpl
sbb
lods
pop
jecxz
sbb
dec
jecxz
adcb
js
emms
shlb
jmp
sbb
test
jbe
inc
xchg
xor
or
fidivl
jle
push
mov
sti
lahf
mov
es
sarl
clc
insb
sti
popa
mov
push
sub
push
xor
xchg
fdivr
pop
jmp
add
aas
push
pop
ret
cmp
xchg
lock
lret
sbb
cmp
inc
cltd
dec
cvtpi2ps
and
clc
cmp
pop
test
mov
dec
jg
or
das
push
jmp
xchg
mov
clc
cmp
inc
cwtl
push
adc
inc
xor
jmp
pop
rorl
pop
add
or
push
in
pusha
push
inc
call
mov
push
pushf
adc
fs
cmp
sahf
dec
icebp
jbe
insl
lods
cmc
mov
lret
cmp
push
mov
in
shll
icebp
pusha
and
fsubl
and
sbb
adc
and
pop
imul
pushw
out
sbb
cltd
std
mov
push
inc
sub
jbe
adcb
jno
lret
xchg
sbb
push
pop
xchg
mov
out
insb
inc
testl
dec
gs
pop
mov
fstps
cltd
movsb
es
xor
inc
sahf
mov
sbb
xchg
repz
cld
leave
hlt
out
iret
add
xor
jl
adc
decl
test
xchg
sbb
ss
mov
mov
push
add
jp
sbb
adc
inc
into
aaa
inc
sub
fwait
in
pop
mov
in
jnp
lahf
xchg
sub
cmp
xchg
test
imul
pop
loopne
inc
outsb
xchg
into
jmp
or
dec
cmp
mov
mov
aam
pop
loop
add
jecxz
cmp
fcoml
dec
adc
sbb
and
imul
es
dec
fcmovu
fnsave
iret
mov
add
and
aaa
test
adc
and
shrl
repz
pop
xor
fcmovu
out
jle
inc
dec
pusha
sbb
push
clc
cmp
mov
call
and
outsl
outsl
and
mov
fcmovnu
xchg
pop
popf
out
inc
pop
mov
mov
sbb
dec
inc
cmp
cli
mov
push
mov
mov
fwait
xor
xchg
ja
lahf
push
ja
out
call
xchg
popf
daa
jno
data16
sbb
lret
or
push
mov
lods
xor
aad
xor
filds
mov
nop
lret
fwait
or
popf
cli
popf
sbb
mov
mov
cmp
stc
mov
push
and
jecxz
ds
mov
mov
mov
xchg
test
cltd
xlat
aad
cmpsb
push
sbb
cmpsb
cwtl
and
pop
fisttps
add
push
mov
push
sbb
cmp
stos
repnz
cld
mov
mul
sbb
loop
js
cli
inc
rclb
xlat
add
aas
pusha
fiaddl
lret
push
ret
fcomp
or
pop
insb
inc
mov
fwait
jge
clc
adc
jo
cmp
xor
psubsb
cmp
or
in
mov
and
repz
jne
gs
adc
stc
fldt
adc
repz
mov
outsl
clc
xor
jge
sti
xchg
jbe
xlat
mov
aam
or
or
sahf
add
push
sahf
dec
or
pop
adcb
push
mulb
mov
dec
cs
and
push
loope
insb
imul
adc
cld
mull
lahf
jg
or
xor
mov
mov
popf
sub
lock
xchg
out
or
js
xor
mov
fisttps
jae
mov
xor
mov
mov
and
lret
insl
cltd
cmc
xchg
mov
out
xor
mov
in
lods
cmpsb
mov
jmp
push
push
sbb
adc
js
gs
jl
out
and
aad
mov
lret
add
rorb
mov
mov
mulb
and
pop
adc
rcrb
and
pop
xchg
sbb
cltd
outsb
mov
jo
insb
or
and
cmp
ljmp
sub
pop
push
imul
add
call
jge
cmp
mov
stos
jnp
pop
scas
jno
sbb
addr16
imul
xor
pop
in
xlat
sbb
dec
int3
lds
aad
mov
inc
cltd
pop
adc
push
cmp
call
and
pop
mov
aad
mov
cli
out
push
inc
mov
push
xor
or
nop
aas
outsb
push
jb
jecxz
ja
gs
xor
xchg
cld
mov
adc
rcl
orl
ja
shr
mov
inc
repnz
inc
je
lods
das
jg
scas
jo
sbb
jno
rclb
xchg
add
mov
std
xchg
mov
fbld
mov
dec
xchg
fwait
mov
mov
xchg
add
outsb
add
frstor
movsl
subb
mov
jecxz
xor
mov
pop
imul
cmc
push
jecxz
rcrb
xchg
push
jecxz
xor
mov
loope
sub
dec
in
sub
cmp
lock
aaa
sbb
in
xor
sahf
push
movsl
loope
sbb
cs
cmp
xchg
dec
sub
jp
or
pop
iret
cmp
xor
idiv
or
loopne
jbe
aad
sbb
cmp
out
subl
sub
sbb
add
jmp
icebp
rcl
les
mov
cmpsl
jb
xchg
test
test
repz
cld
inc
out
in
push
leave
jne
cmp
ficompl
cmp
adcl
xchg
mov
out
mov
ss
lea
jmp
mov
jbe
js
jecxz
test
pop
fldt
xor
daa
dec
lock
scas
scas
sbb
fstpt
dec
mov
mov
punpcklwd
sbb
int
cmp
push
sbb
jmp
mov
mov
xchg
mov
ss
jle
adc
xchg
xchg
sub
xor
lcall
orb
xchg
xchg
testb
fwait
repz
cmc
mov
cmp
and
pop
adc
scas
shrb
ja
mov
imul
or
xor
call
jmp
push
fadds
and
adc
insl
insb
add
sbb
into
mov
xchg
mov
fdivs
lods
aam
je
aam
xchg
pop
jecxz
rol
mov
dec
and
enter
cli
and
std
ret
popl
ret
xchg
out
test
test
subl
loopne
mov
lret
and
shrb
movsb
dec
orl
add
adc
dec
movsl
fstpl
sub
or
mov
mov
push
js
inc
sub
mov
inc
cmp
pop
pop
xchg
fsubrp
jo
jle
or
pop
fisubrl
ljmp
mov
push
test
cmp
adc
and
inc
push
outsl
cwtl
sbb
jne
pop
int3
lret
or
xor
aaa
sbb
mov
mov
fiaddl
pop
repz
jne
cs
pop
je
aas
sub
mov
pop
inc
aad
inc
inc
fcmove
frstor
ljmp
push
pushf
inc
dec
testl
and
cmpsb
push
and
aam
adc
in
xlat
mov
mov
clc
jge
lcall
jmp
in
call
dec
xorl
dec
leave
enter
in
or
jmp
mov
xor
lods
data16
sbb
mov
lahf
and
pop
cmpsb
ja
data16
mov
in
aam
xchg
out
xchg
pop
lcall
sbb
ss
jp
or
mov
dec
push
or
mov
daa
imul
add
cltd
in
jno
gs
insb
jg
cmpsl
call
and
adc
sub
pushf
lret
ljmp
daa
mov
iret
arpl
hlt
sahf
xor
clc
sbb
xchg
out
xlat
jbe
testb
jbe
sbb
adc
jns
push
mov
lea
mov
or
jae
xor
std
inc
cld
inc
jecxz
lods
repnz
jl
push
cmp
pop
std
and
out
add
lock
push
xchg
lret
rcl
inc
jbe
or
pushf
fidivrl
sbbl
cmp
add
adc
pop
into
or
sub
ret
loop
xchg
and
fadds
xor
addb
fnstcw
jns
or
popa
jmp
arpl
add
jnp
cwtl
fcoml
testb
fstpl
sbb
or
inc
mov
cmp
jb
fwait
stc
push
mov
shlb
cmpb
movsl
movsb
inc
add
out
push
cmp
gs
cmp
test
jl
or
pop
add
adc
push
orl
xchg
xlat
je
inc
sbb
dec
mov
fsubp
movl
jmp
dec
rcll
loopne
or
mov
xor
stc
into
jg
lret
jge
aam
dec
repnz
pop
or
scas
mov
aaa
mov
popf
dec
pop
pop
pop
inc
jns
push
shlb
imul
in
test
cmp
pop
jne
in
adc
xchg
movsb
xor
jle
sarb
mov
fwait
push
test
inc
dec
leave
js
push
jl
int3
clc
sub
stos
add
ss
xchg
xor
or
jno,pt
xchg
test
arpl
pop
pusha
aaa
iret
xchg
xchg
call
loop
daa
jp
xor
cmp
jmp
rclb
int
or
icebp
out
hlt
out
adc
aam
mov
outsb
mulb
out
and
xor
mov
fmuls
xor
mov
ret
mov
lods
sub
xchg
adc
sub
cmc
pop
in
pop
xchg
lret
sbb
sbb
int
aas
repz
sub
cmp
repnz
adc
pop
cld
mov
test
fisttpl
pop
adc
push
mov
sbb
inc
lds
adc
inc
lock
insb
shrl
icebp
xor
jmp
push
cltd
int
jmp
mov
push
push
ljmp
sub
cmpsl
popa
or
mov
je
push
cmp
pop
fucom
jo
cltd
test
stos
dec
mov
inc
test
add
andb
xlat
nop
aas
mov
scas
push
sub
fisttpl
sti
ljmp
gs
lock
cmp
das
jmp
xchg
inc
popa
pop
mov
ljmp
xchg
cmp
popa
adc
fs
jp
fwait
aad
incb
jnp
cmp
es
lret
idivl
pop
ret
addl
push
push
and
ds
jae
shrl
add
pushf
add
mov
xchg
repz
repnz
js
stc
stos
arpl
lods
cmpsl
sub
mov
cs
les
dec
adc
and
mov
xlat
mov
test
xor
rorl
sti
lret
pop
dec
ljmp
enter
inc
push
enter
jns
xchg
cmp
stos
and
dec
jecxz
mov
outsl
sbb
mov
jp
mov
fnstcw
cmp
cmc
pop
aam
push
mov
std
xchg
pop
and
adc
mov
in
mov
mov
jnp
and
push
mov
iret
xchg
outsl
pop
mov
adc
inc
aaa
cli
fwait
lods
jae
addr16
ljmp
orb
mov
mov
sub
test
mov
pop
mov
push
jl
test
dec
and
js
in
aad
out
orl
cli
xor
aaa
pop
push
and
xchg
pop
clc
or
or
outsb
out
notl
les
mov
cmp
outsl
or
push
mov
jb
mov
sub
jmp
cld
icebp
add
mov
cmp
jg
mov
dec
test
inc
ljmp
dec
xrelease
add
and
sbb
mov
js
repz
cmp
mov
mov
xor
pop
pop
mov
sub
shrb
mov
int3
sahf
ret
je
fimull
lock
push
adc
sbb
jp
push
lahf
xchg
push
add
outsl
inc
jnp
mov
push
dec
or
dec
and
dec
lcall
mov
mov
jp
adc
pop
jge
es
sahf
imull
sbb
movsl
call
adc
hlt
jecxz
fcoml
idivb
imul
pop
repnz
cmp
push
and
in
sbb
lretw
xchg
pop
lds
add
int3
iret
out
inc
push
loopne
mov
ret
out
sbb
mov
inc
xor
repnz
lods
pop
xchg
mov
fwait
jo
push
test
jae
dec
mov
xchg
cmp
jbe
sarl
stos
testl
and
jno
xor
test
mov
cmc
sbb
nop
ror
xor
subb
and
insl
fwait
aad
jl
jge
xchg
outsb
xor
repz
ss
dec
mov
mov
or
cmp
sub
fiaddl
lret
and
push
lcall
nop
pop
orb
mov
or
cmp
sub
fiaddl
lret
and
push
lcall
nop
pop
add
jp
push
sbb
or
cmp
adc
add
xor
and
push
lcall
nop
pop
orb
mov
or
cmp
ljmp
and
add
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
outsb
hlt
and
adc
add
imul
movsb
icebp
mov
imul
movsb
int
adc
add
lock
and
add
je
mov
mov
pop
inc
inc
hlt
push
in
aam
les
sub
dec
sbb
insl
cmpb
lcall
clc
xor
xor
arpl
fs
mov
mov
jl
cwtl
pop
adc
sti
pop
lahf
pop
adc
sub
sub
out
lret
dec
xor
test
aas
mov
fwait
sub
pop
pushf
imul
jg
fwait
dec
dec
mov
mov
xor
pop
gs
inc
pusha
pop
push
jnp
or
mov
in
xor
hlt
aam
rclb
nop
mov
cmc
int3
adcb
lods
xchg
out
sub
sbb
and
movsb
mov
mov
mov
mov
pop
in
pop
inc
cmp
aam
and
pop
movsl
mov
leave
out
push
mov
outsl
orl
test
xor
hlt
gs
les
jl
rclb
shlb
push
nop
pop
adc
push
popf
jl
or
into
aam
fnsave
inc
lock
jno
pusha
lods
adc
sub
shlb
adc
cmc
ljmp
mov
cmpsb
jno
push
lods
add
or
cmp
add
roll
icebp
jo
jg
and
push
add
add
or
mov
mov
movsb
pusha
xchg
push
test
xor
and
adc
add
and
adc
add
je
mov
mov
movsb
pusha
xchg
push
test
xor
and
adc
add
out
dec
lods
insb
cs
xlat
js
aam
push
mov
out
push
fdivrs
clc
repnz
jne
popf
js
mov
mov
movsl
mov
mov
inc
xor
neg
and
popf
outsb
pop
fidivs
mov
lret
push
das
jmp
jb
xchg
cmp
cmp
cmp
mov
mov
test
and
aas
adcl
sbb
stos
mov
push
dec
add
or
add
pop
adc
fiadds
mov
mov
mov
cmp
jmp
inc
loopne
js
or
mov
das
push
js
sarl
jl
pop
test
fdivs
pop
outsl
xchg
push
imul
mov
cmpl
shl
es
dec
push
jno
fnstsw
xchg
xchg
sub
mov
and
shlb
sbb
xchg
push
test
adc
out
jp
jns
cmp
js
test
lods
xor
bound
fsts
add
inc
or
ljmp
jge
mov
and
lcall
cmp
in
aad
push
or
lcall
int3
mov
and
adc
pop
bound
xchg
mov
jb
outsb
mov
xchg
les
loope
and
into
jle
jmp
mov
das
sub
movsl
or
leave
xor
add
hlt
mov
jmp
repz
decb
cmpsb
jmp
add
cli
mov
int
orl
lret
call
rorb
inc
addl
lahf
xlat
sub
jle
and
popa
mov
adc
hlt
sub
test
inc
push
pushf
mov
fdivr
sbb
mov
mov
adc
dec
cmc
dec
popl
notl
sbb
es
xchg
out
mov
ffree
aam
enter
add
ret
xchg
and
rorb
jnp
pop
xchg
outsl
test
cli
dec
ret
adc
lea
and
arpl
push
fstps
data16
sub
jle
jge
cmp
test
jo
adc
fmuls
adc
inc
xchg
push
in
mov
imul
inc
outsb
filds
out
push
mov
ficomps
aam
inc
xchg
fsubp
out
sbb
loop
inc
and
in
js
addr16
scas
mov
xor
dec
es
loope
aas
adcl
loopne
or
mov
int
xor
lret
mov
imul
or
ljmp
cmpb
mov
daa
push
filds
pop
mov
rolb
lcall
fnstcw
dec
cmc
loopne
inc
and
push
iret
fs
repnz
mov
test
dec
mov
mov
imul
pop
push
or
xchg
mov
xchg
cs
cmpsb
pop
inc
xchg
push
jge
or
insl
lret
inc
mov
dec
push
std
jae
cmpsb
pop
aaa
loopne
or
lock
jle
adc
shl
data16
dec
cmpl
mov
in
movsl
sub
dec
push
adc
out
sbb
xchg
xor
cld
out
daa
or
mov
ret
fst
ficoml
dec
sbb
adc
mov
push
popa
sub
mov
test
arpl
dec
push
repz
mov
cld
mov
out
mov
pop
sti
jmp
out
mov
fldl
lahf
divl
dec
cmp
cmpsl
xchg
in
bound
in
lods
sbb
testb
outsb
sub
negb
cmp
clc
lahf
and
stos
xchg
scas
pop
mov
imul
xchg
js
fisttpll
mov
ss
pop
aad
pop
mov
mov
call
mov
enter
adc
notb
out
ljmp
pop
cmp
xchg
cmp
jl
pop
sub
sub
mov
mov
jmp
lods
mov
aaa
xor
stc
jl
sbb
sar
shll
xchg
daa
shlb
in
insb
xchg
pusha
jmp
neg
inc
ds
push
add
sbbl
gs
cmp
add
int3
add
leave
jnp
dec
gs
push
ficoms
mov
sarl
pop
sub
adc
ds
jp
pop
frstor
or
int3
in
sub
fs
dec
or
movsl
pop
sub
sbb
cmp
dec
jl
shrb
xor
aaa
aam
sub
and
daa
cmp
mov
in
roll
dec
test
dec
std
fwait
rcll
add
nop
or
sbb
loopne
into
push
and
mov
jae
jb
sub
or
push
dec
insb
out
cmp
mov
sbb
adc
ret
xor
repnz
clc
shrb
push
xor
roll
xor
jne
shr
andb
inc
testl
add
aas
stc
sub
shll
and
mov
in
add
xchg
cmc
mul
xchg
fmuls
rcr
cmp
inc
lock
jne
xchg
ljmp
movsb
adc
mov
xor
inc
and
cmp
fistps
fstpt
fidivl
jns
ret
cwtl
add
mov
mov
adc
mov
mov
or
xchg
mov
loop
mov
mov
jae
and
aas
cmp
mov
shll
daa
icebp
push
or
popa
fbld
stc
cmp
mov
mov
dec
cld
cwtl
cmpsb
jne
dec
push
sub
jg
jno,pn
sub
adc
and
inc
cmp
roll
jp
mov
add
xor
cmpl
push
push
adc
sbb
repnz
arpl
push
pushf
mov
xor
xor
jno
cmp
mov
jns
movsl
or
mov
test
mov
adc
pop
addr16
vpsubb
pop
sahf
popf
sub
mov
stos
int
movsl
repnz
jmp
jmp
pop
jge
scas
mov
sbb
pop
push
cli
cmp
jne
cwtl
pop
or
xlat
push
addr16
roll
ret
and
pusha
or
adc
sub
arpl
mov
cmp
insl
fisubs
lds
stos
lock
movsl
add
mov
insb
mov
jne
popw
pusha
std
cld
cmp
lock
popw
aad
push
ftst
mov
push
fwait
inc
ret
sbb
ret
out
jg
and
stos
push
dec
push
mov
cwtl
je
inc
xor
inc
in
xor
div
jmp
mov
add
and
adc
stos
les
xchg
cmp
xlat
hlt
ja
sub
jnp
out
out
jbe
int3
std
sbb
xchg
mov
clc
mov
scas
mov
insl
sbbb
test
fiaddl
dec
mov
fadds
dec
test
cmp
sbb
jmp
jbe
js
xchg
sub
cmc
out
jle
pop
cmc
aad
lahf
cmp
dec
iret
movsb
cmpsb
mov
shll
bnd
adc
sbb
ljmp
enter
add
adcl
add
data16
test
dec
pop
pop
jno
and
jmp
and
call
sub
movsb
stc
repnz
mov
lahf
test
in
mov
hlt
sub
ss
sbb
push
jge
lcall
mull
pop
mov
lods
xchg
addl
mov
hlt
xchg
lret
arpl
inc
mov
shl
jno
adc
adc
xlat
lds
xlat
mov
cmp
inc
pop
outsl
pop
jns
push
pop
jmp
mov
mov
pop
movsl
hlt
cld
cwtl
jns
or
test
fmull
jb
out
jp
dec
addr16
andb
outsb
dec
cld
fdiv
ja
aad
notl
jns
cmp
sti
mov
cmpb
and
aaa
pop
out
out
scas
jge
jmp
push
mov
fiaddl
jbe
arpl
pop
enter
faddl
and
adc
add
lock
push
and
in
pop
sti
jbe
sub
xor
arpl
mov
les
pop
stos
inc
sub
stc
pop
aaa
jmp
jns
sub
cmp
inc
cmc
repz
cmp
pop
cmpsl
bnd
gs
es
mov
jle
xchg
mov
push
scas
lods
out
jl
icebp
mov
rcr
cmp
out
xor
pusha
xor
add
pop
in
xor
pushf
shrl
rcl
nop
push
rcrl
test
sub
pop
lret
in
push
icebp
xchg
imul
sarl
lods
push
push
push
jmp
inc
out
xchg
and
ret
stos
lods
or
or
sbb
inc
jb
aas
stos
jmp
push
imul
fdivp
dec
adc
lret
sarb
dec
mov
lret
jge
pushf
lret
adc
mov
arpl
push
push
rorb
shrl
pop
lea
ja
mov
inc
push
xchg
xchg
push
pop
pop
cwtl
mov
dec
adc
jo
cltd
add
mov
adc
dec
scas
fadds
cmpsl
data16
mov
mov
xor
jo
jae
sub
out
push
in
jne
negb
das
add
xor
lods
lods
cmpsl
sbb
movsl
dec
lret
loop
jns
test
les
sbb
pop
xorb
lods
stos
repz
lods
or
test
mov
jecxz
and
loopne
and
popf
pushf
xor
push
int3
jg
dec
push
pusha
jle
sahf
lods
sahf
cli
aaa
fwait
adc
jp
aas
mov
aaa
mov
push
xor
xchg
fmull
pop
mov
cmp
or
lock
vpsrad
insb
out
notl
aad
mov
stos
mov
xor
cmpsl
inc
jns
sti
loop
inc
ret
imul
sahf
ficomps
xor
pop
iret
push
mov
mov
mov
push
inc
addr16
inc
sub
lret
push
sti
add
test
or
cmpsl
push
lea
cltd
mov
out
xchg
inc
shrb
movsl
cmpsl
into
pop
scas
loope
sbb
mov
out
pop
lret
push
mov
aas
mov
push
aaa
inc
pop
add
inc
fbstp
popa
mov
decl
and
ret
pop
xchg
mov
adc
mov
push
sub
jmp
andl
loop
sbb
not
aad
nop
xor
sarl
or
sub
lcall
jmp
mov
jecxz
xorb
xor
jbe
adc
and
mov
sti
movsl
iret
dec
imull
dec
repnz
scas
sub
lea
push
cmp
adc
mov
repnz
xchg
xchg
lds
cmc
mov
out
push
jle
aas
pop
fsubl
mov
cltd
cmp
clc
jb
loop
push
and
mov
shll
mov
pop
jbe
bound
pop
loop
out
in
ds
popf
out
inc
push
sub
pusha
aad
cmp
push
ss
fbstp
mov
aaa
cmp
mov
leave
jg
jle
js
mov
xor
pop
repnz
pop
push
adc
outsl
fistl
fs
xchg
mov
push
push
lods
out
leave
jns
aam
push
mov
jecxz
out
in
repnz
rorl
push
xor
mov
xchg
mov
lods
divb
xchg
stos
shr
cwtl
pop
mov
push
into
fwait
fs
test
inc
push
icebp
cltd
add
dec
sub
or
push
sub
and
scas
nop
ret
mov
push
mov
push
int3
lea
mov
sub
xchg
outsb
loopne
repnz
cwtl
xchg
pop
inc
adc
lahf
jae
leave
mov
ret
stos
cli
dec
stos
mov
pop
mov
stos
flds
test
into
cmp
dec
je
push
cmpsl
pop
push
cmp
lret
inc
and
xchg
je
in
sbb
pop
ret
ret
lahf
adc
mov
rcll
stos
nop
cld
ret
mov
cltd
loop
jmp
sbb
or
shrl
ret
pop
mov
push
and
jmp
xchg
repz
xor
mov
sbb
ror
hlt
ret
or
and
in
xchg
add
arpl
xchg
test
jmp
mov
imull
test
or
cmp
cltd
push
mov
xor
cltd
jnp
pop
cmp
xor
je
lret
jg
mov
push
inc
dec
jmp
bound
lcall
test
mov
arpl
jnp
outsl
mov
fsubrs
test
mov
cs
jg
xlat
xchg
aad
mov
data16
out
push
mov
or
test
lret
mov
in
and
dec
mov
jmp
movsl
rorl
fs
sbb
flds
call
inc
js
jge
mov
sbbb
fwait
mov
out
enter
sbb
in
test
aaa
imul
push
mov
pop
or
fstpt
xchg
and
mov
push
mov
pop
mov
inc
mov
lahf
pop
sub
scas
scas
test
mov
lds
jne
testl
adc
mov
inc
dec
sub
adc
dec
lcall
aaa
mov
xchg
push
push
mov
cmpb
pop
adc
cwtl
mov
aaa
subb
mov
add
jge
enter
insb
push
in
shrb
and
add
fldl
add
jae
out
sahf
jo
jns
imul
lret
sbbl
mov
daa
adc
fs
xchg
xor
jnp
mov
out
push
inc
movsb
das
add
cs
inc
xchg
scas
movups
or
movsb
test
cld
mov
icebp
dec
adc
push
sti
jge
sub
cmp
jmp
pop
mov
jae
mov
ljmp
add
xchg
stc
lea
push
jb
out
xchg
mov
xor
or
jecxz
mov
dec
add
mull
dec
lahf
sub
vmovaps
mov
xor
sbb
push
aaa
or
pop
push
jo
inc
dec
bound
lods
divl
xor
mov
adc
in
popf
cs
cmp
and
ret
and
andb
jbe
sub
shr
mov
push
inc
sti
incl
pop
push
sbb
pusha
pop
sub
pop
jae
jnp
pusha
in
scas
movsb
mov
jge
fistpl
shr
sub
add
or
mov
mov
daa
lcall
movntq
lods
mov
add
mov
mov
xor
ja
cmp
mov
sub
fs
das
stos
push
out
push
lret
lods
mov
sbb
add
dec
xor
lcall
sub
push
out
in
xor
pusha
jo
aaa
popa
pop
inc
fcomp
push
nop
inc
mov
lcall
imul
and
sub
pop
aas
or
hlt
sbb
xchg
test
cltd
outsl
mov
mov
fmuls
mov
data16
jecxz
inc
xchg
pop
mov
inc
loopne
stc
xchg
push
mov
jmp
scas
je
xchg
clc
movsl
pop
js
or
jp
sub
jb
sub
pop
pop
pusha
aas
fcomi
mov
push
movsl
mov
str
cltd
repz
xchg
jbe
lahf
push
pop
xchg
xchg
idivb
sbb
in
xlat
imul
andl
out
mulb
sbb
and
int3
and
adc
mov
mov
fisubs
out
in
dec
and
stc
andl
roll
scas
inc
lahf
movsl
lahf
dec
pop
inc
popf
add
loopne
int
movsb
xchg
cmc
mov
pop
js
imull
test
jae
rol
rcr
inc
mov
jbe
dec
jp
pop
adc
xchg
pop
mov
pusha
push
int
arpl
in
sahf
fbld
stos
fwait
pushf
pusha
in
jge
jo
and
jg
push
cmp
pop
pop
xchg
jge
mov
out
loopne
mov
xlat
dec
jmp
test
pop
cmp
sbb
sub
mov
xchg
cmpsl
sbb
and
jmp
add
cmp
subb
cmpsl
cmc
pop
mov
mov
movsl
cmpsl
pushf
sahf
inc
push
into
je
in
clc
pop
adc
mov
rcrl
mov
or
lock
sub
mov
lock
mov
xor
dec
and
hlt
push
inc
enter
dec
test
add
push
jecxz
adc
out
cmp
sahf
pop
cs
fdivrl
shl
fs
and
jo
push
faddp
aas
out
push
sub
or
sbb
aaa
jge
jb
mov
add
pop
lock
imulb
sub
out
leave
adc
js
xor
cs
in
cmp
ret
sahf
fstps
icebp
push
adc
jae
loope
add
insl
push
jge
xlat
fidivrl
xchg
xor
mov
enter
push
and
pusha
jb
adc
xor
inc
fidivrl
inc
test
cmpl
sub
popa
jl
repnz
inc
jecxz
xchg
push
aam
in
or
mov
sahf
ffreep
jmp
es
inc
jmp
movsb
mov
stos
js
in
nop
lret
lcall
mov
ss
fwait
out
ljmp
int3
jge
gs
gs
adc
clc
lods
fists
sbb
pop
xchg
ljmp
sbb
adc
xchg
cld
add
sti
mov
sbb
dec
pop
mov
adc
jecxz
rolb
pop
adc
or
pop
inc
pop
and
xchg
jne
je
dec
inc
sub
push
xor
sub
stc
out
add
adc
std
add
stc
in
hlt
test
unpcklps
sub
jne
dec
fstl
ds
jg
jbe
jno
movsb
xchg
push
ret
shrb
sbb
jo
test
mov
rolb
fstpt
mov
insb
das
pop
test
mov
and
movsb
add
insb
int
mov
sub
jmp
mov
sbb
xor
movsl
cmp
sbb
icebp
addr16
divl
stos
imul
scas
jno
mov
or
push
in
shrl
mov
mov
add
push
mov
jae
mov
call
into
inc
arpl
sbb
leave
mov
pop
imul
pop
mov
test
popf
add
adc
sub
cmpsl
xchg
loop
stc
jg
fsts
cwtl
test
bound
mov
adcb
sbb
jmp
mov
clc
dec
fwait
loopne
imul
es
mov
xor
repz
jae
shl
ljmp
push
xchg
sbb
lret
dec
pop
rcl
idiv
mov
mov
lcall
daa
adc
sbb
popf
sbb
xchg
jne
gs
pop
or
jnp
mov
test
mov
sub
gs
adc
push
hlt
lea
outsl
xor
testb
mov
mov
inc
jecxz
xchg
jnp
mov
movsb
lods
roll
lds
outsb
and
loope
add
adc
sbbb
and
subb
mov
sbb
test
mov
aam
mov
dec
xor
imul
scas
mov
fsub
rclb
inc
fistpl
mov
jle
ja
jge
pop
mov
xchg
jp
lds
jge
stos
mov
push
sub
mov
sub
jns
push
cwtl
xorb
fldenv
icebp
mov
bound
pop
pushf
pop
xor
insb
cmp
mov
jecxz
call
mov
jae
daa
push
xor
int
dec
and
out
imul
sbb
loopne
jl
test
clc
dec
gs
or
idivl
call
add
push
sub
sbb
pop
mov
and
sub
add
repnz
movsl
jp
inc
rcrb
cmpsb
mov
inc
fstpt
push
push
lods
xchg
pop
sub
mov
add
push
add
or
sahf
scas
cmovb
dec
mov
cmp
adc
pop
adc
xor
mov
icebp
enter
fdivrp
push
insb
pop
cmpsl
fs
pop
cmp
dec
sti
jg
nop
lahf
cmc
or
stos
pop
shl
dec
sub
pop
mov
ljmp
in
jmp
inc
fwait
sub
xchg
mov
inc
or
idivb
jne
mov
pop
dec
shlb
xor
sbb
clc
add
cli
std
sarl
push
and
fs
hlt
sti
pop
mov
push
mov
xchg
sbb
sub
xlat
inc
sbb
scas
call
sbb
add
pop
push
pop
mov
rcrl
int3
push
dec
adc
inc
xchg
out
lods
or
divl
jno
pop
ret
adc
sti
xor
cli
push
pushl
fidivs
mov
mov
mov
mov
movsb
pusha
xchg
push
test
xor
and
adc
add
and
adc
add
je
mov
mov
movsb
pusha
xchg
push
test
xor
and
adc
add
and
adc
add
je
fs
push
xchg
inc
xorb
dec
hlt
xor
and
sbb
in
adc
add
xor
xorb
aam
les
pop
lret
test
orl
sub
js
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
