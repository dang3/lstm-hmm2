or
mov
and
dec
sub
mov
mov
push
lea
rol
and
mov
jmp
push
push
push
lea
add
shl
sub
mov
add
push
call
jmp
movb
jmp
call
mov
jmp
add
push
ror
mov
and
jmp
movl
mov
jne
xor
ret
jmp
es
ret
mov
and
cmpw
je
jmp
add
jmp
sub
test
jne
jmp
xchg
popa
add
shl
mov
mov
movzwl
movzwl
add
jmp
test
jne
jmp
arpl
mov
jmp
call
test
je
jmp
or
shl
shl
mov
movzbl
add
mov
jmp
push
jmp
call
call
nop
push
subl
pushl
call
pushl
ret
jmp
test
jne
add
ret
and
sub
shl
mov
and
xor
dec
mov
jmp
add
xor
cmp
mov
jmp
add
and
mov
mov
mov
mov
sub
add
ror
mov
jmp
mov
jle
jmp
and
mov
mov
jmp
and
add
add
add
add
sub
jne
jmp
sub
and
mov
or
xor
mov
ror
sub
dec
mov
shr
lea
lea
cltd
and
jmp
test
jne
add
ret
ror
shr
and
mov
push
jmp
jmp
ret
leave
call
subl
call
jmp
call
push
jmp
leave
dec
push
xorl
push
jmp
subl
call
push
jmp
call
xorl
call
lea
push
lea
jmp
sub
test
jne
movzbl
add
mov
lea
ror
add
or
mov
mov
shr
jmp
add
jne
add
ret
mov
xor
test
je
movsbl
jmp
add
push
inc
or
mov
sub
test
jne
push
jmp
push
call
jmp
call
nop
addl
jmp
push
jmp
int3
push
push
addl
push
jmp
call
subl
push
push
jmp
call
call
call
nop
addl
call
jmp
sub
test
mov
mov
mov
movl
jmp
push
movb
mov
movb
jmp
add
add
push
dec
mov
mov
mov
mov
sub
mov
push
push
push
jmp
mov
call
call
cmpl
jmp
call
ret
add
add
add
dec
aaa
sbb
incb
mov
inc
add
xor
mov
add
jmp
lea
cmp
je
xor
ret
inc
xor
dec
rol
mov
pop
ret
add
add
add
adc
add
mov
xor
sub
shl
mov
ror
mov
add
test
jmp
mov
xor
mov
mov
add
and
inc
xor
mov
lea
jmp
lea
mov
xor
mov
add
sub
test
jne
jmp
rol
add
xor
mov
jmp
pop
pop
pop
mov
pop
ret
pop
jmp
mov
test
je
push
push
jmp
sub
mov
sub
shr
and
mov
cmp
je
inc
and
mov
mov
mov
test
jne
add
sub
rol
mov
jmp
add
jmp
jle
add
jmp
add
cmpl
jne
jmp
sub
jmp
add
add
add
lret
and
or
and
mov
test
je
mov
add
cmpl
je
jmp
movl
mov
push
add
mov
and
add
mov
push
mov
mov
movl
jmp
push
push
jmp
shr
and
jmp
jle
jmp
add
push
inc
sub
xor
xor
mov
mov
sub
push
push
add
inc
inc
sub
or
mov
test
push
mov
jmp
jmp
lea
shl
and
add
inc
mov
sub
cmpw
jne
add
or
xor
mov
mov
xor
jmp
mov
or
or
mov
push
push
mov
xor
or
mov
mov
xor
mov
add
jmp
xor
sub
mov
jmp
add
add
sub
ror
mov
sub
mov
push
mov
jmp
mov
mov
mov
sub
cmpl
lea
je
push
push
jmp
movl
call
lea
addl
call
mov
shr
or
rol
or
xor
mov
shr
or
shl
xor
sub
mov
jmp
lea
nop
movzwl
sub
mov
add
add
mov
and
cmp
jne
jmp
mov
add
inc
sub
ror
and
mov
lea
sub
mov
add
test
jmp
and
cmp
sete
mov
ret
add
add
add
add
add
arpl
or
inc
and
cmp
sar
incl
inc
inc
and
mov
movb
mov
movb
call
cmp
push
jae
jmp
jne
cmpb
jne
nop
nop
jmp
or
dec
and
mov
jmp
je
jns
movzwl
push
jmp
mov
lea
push
jmp
nop
push
nop
jmp
jmp
call
jmp
add
fisttpll
in
sub
mov
mov
mov
mov
mov
jmp
inc
mov
sub
shr
test
lea
jle
inc
sub
rol
mov
jmp
jmp
lea
jmp
add
add
add
add
jmp
inc
addl
push
jmp
call
xorl
push
jmp
jmp
push
subl
call
test
je
jmp
mov
mov
lea
jmp
add
jmp
test
jmp
add
pop
add
pop
add
jmp
lea
push
movb
mov
mov
movb
jmp
call
ror
inc
and
add
sub
mov
push
push
mov
jmp
and
add
jmp
add
add
jmp
add
add
add
jmp
mov
xor
xor
inc
and
mov
mov
mov
jmp
jne
add
cmpl
jne
pop
jmp
sub
sar
test
jle
jmp
fmull
pop
jmp
call
addl
push
push
call
jmp
outsl
push
out
inc
and
js
inc
and
add
adc
test
je
cmp
jne
addl
pop
jmp
pushl
call
add
pusha
jmp
pop
pop
mov
pop
ret
add
add
add
lret
xor
add
sub
mov
and
mov
inc
mov
test
jmp
push
jmp
push
push
call
pop
int3
subl
mov
call
push
jmp
ret
int3
jmp
call
inc
push
subl
mov
call
push
jmp
push
dec
call
nop
subl
jmp
add
ret
subl
pop
add
ret
add
add
add
call
popa
jmp
mov
ret
add
add
add
shll
ljmp
shll
addr16
mov
movzbl
add
mov
lea
and
mov
and
inc
xor
mov
shr
and
add
jmp
test
je
or
or
mov
sub
jmp
test
jne
jmp
inc
xor
mov
add
mov
rol
or
rol
or
shr
mov
sub
shr
mov
mov
dec
or
mov
rep
jmp
inc
jmp
add
pop
ret
mov
ret
add
add
add
mov
push
mov
shl
ror
mov
dec
mov
add
add
sub
add
jmp
jle
add
xor
sub
shl
sub
mov
sub
sub
sub
mov
jne
sub
jmp
test
jne
mov
mov
pop
ret
add
add
add
and
test
add
movzbl
add
shr
xor
mov
and
mov
mov
mov
jmp
mov
or
test
add
add
cmp
jl
pop
xor
pop
jmp
sti
xchg
pop
add
sub
and
and
mov
shr
and
add
test
mov
je
jmp
rol
dec
mov
add
mov
mov
pop
ret
sub
add
mov
mov
movzwl
or
and
mov
or
dec
mov
mov
pop
add
jmp
cmp
mov
mov
jl
rol
mov
add
xor
sub
mov
mov
mov
push
jmp
call
push
jmp
ret
call
call
call
dec
addl
mov
call
add
mov
call
push
jmp
push
nop
jmp
call
dec
ret
addl
jmp
push
in
repnz
add
xor
inc
inc
mov
sub
test
jne
movzbl
add
jmp
pop
sub
mov
mov
pop
ret
add
add
add
push
add
mov
mov
call
add
xor
add
rol
shl
xor
mov
call
jmp
in
dec
jne
test
mov
mov
jmp
push
jmp
int3
pop
call
call
push
call
push
push
subl
push
jmp
int3
push
push
push
push
call
pop
call
subl
jmp
mov
lea
and
add
dec
or
mov
shr
and
jmp
mov
jmp
push
call
dec
inc
dec
addl
push
jmp
call
pop
subl
push
call
shr
dec
inc
mov
call
jmp
mov
sbb
rolb
add
add
inc
inc
and
add
add
xor
shr
xor
mov
sub
test
jne
jmp
ds
dec
and
mov
call
movl
lea
jmp
ror
inc
and
mov
mov
add
shl
mov
add
add
sub
jne
jmp
test
je
add
jmp
pop
clc
cwtl
movzbl
add
lea
jmp
inc
pop
add
sbb
pop
mov
shr
dec
mov
shl
mov
pop
ret
add
add
add
rorb
add
mov
shr
jmp
shll
shl
mov
mov
add
inc
mov
mov
mov
mov
cmp
jmp
cmp
cmpsb
mov
jle
shl
or
sub
mov
jmp
mov
add
rolb
lea
jne
test
mov
je
dec
inc
or
mov
jmp
jne
mov
add
pop
jmp
jmp
add
inc
and
inc
and
mov
ror
mov
pop
shr
xor
add
mov
mov
xor
jmp
or
and
adc
add
add
pop
shr
or
or
mov
pop
ret
add
add
add
add
test
pop
pop
xor
dec
add
ror
ror
mov
pop
ret
add
add
add
mov
jmp
insl
ret
add
add
add
add
add
jmp
jmp
stc
add
or
or
sub
mov
and
add
add
shr
mov
mov
jmp
into
xor
test
add
test
je
mov
shl
xor
mov
and
mov
sub
jmp
jg
icebp
add
sub
mov
mov
jmp
arpl
jne
or
sub
and
shr
mov
jmp
mov
and
mov
movl
jmp
jmp
movsb
add
inc
and
add
add
jmp
and
aam
inc
and
jmp
mov
loopne
inc
and
add
add
jmp
lea
call
cmpl
jne
jmp
aas
pusha
mov
clc
add
test
add
call
test
mov
je
inc
and
mov
jmp
pop
mov
roll
call
push
jmp
mov
mov
test
decl
rolb
add
jmp
sbb
add
add
add
sub
shl
ror
sub
mov
jmp
pop
mov
loopne
add
add
lea
mov
add
or
mov
mov
jmp
arpl
jb
mov
incl
add
orb
add
jmp
push
out
push
add
cmp
jmp
xchg
bnd
add
cmp
jae
jmp
or
add
sbb
test
add
add
add
sub
inc
and
rol
mov
sub
mov
jmp
mov
add
sub
jne
mov
mov
mov
mov
and
or
and
or
mov
jmp
adc
out
je
sbb
inc
and
add
add
jmp
jmp
dec
and
add
pop
fwait
test
and
movl
mov
cmpl
je
pop
jmp
test
adc
add
pop
pop
inc
and
mov
add
mov
pop
ret
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
or
add
add
mov
add
add
xor
cmpsl
cmp
ds
mov
loope
jmp
fwait
aaa
lcall
cmp
cmp
aaa
fidivl
loopne
adc
xorl
xchg
cmp
aas
xor
data16
cmp
xor
cmp
cmp
cmp
xor
cmp
xor
ds
cmp
cmp
cmp
mov
add
add
ds
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
mov
cmc
mov
loope
jae
addr16
icebp
pop
adc
or
lcall
mov
mov
jo
outsl
or
pop
push
pop
pop
pop
pop
pop
pop
stos
mov
or
outsb
aas
or
gs
mov
dec
fisubrs
dec
dec
nop
fsubr
xchg
pop
mov
push
push
in
fnstcw
sbb
and
das
ret
outsl
loope
loopne
pop
shl
loopne
add
call
fidivl
imul
cmpsl
xor
push
movsl
sbb
mov
mov
adc
or
push
rcrl
ret
mov
and
xor
in
repz
push
xor
stos
mov
movsb
outsl
sbb
in
out
sub
in
pop
roll
mov
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
.byte
