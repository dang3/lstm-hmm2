jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
add
add
push
cmp
jge
or
add
add
add
pop
add
add
lret
add
or
add
xchg
add
add
add
add
add
add
mov
add
lcall
add
or
mov
add
sub
cltd
add
add
add
add
add
add
add
lcall
add
jns
or
jae
mov
mov
pusha
add
add
add
or
pop
add
add
add
add
add
add
add
add
mov
sbb
add
add
or
jae
mov
mov
jo
and
lcall
add
add
mov
add
add
add
add
add
add
add
lcall
add
add
mov
pusha
add
add
add
add
add
cmp
sub
lcall
add
dec
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
pop
add
aad
or
nop
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
lcall
add
rolb
add
add
add
add
pop
add
lcall
add
add
or
push
add
rolb
add
add
push
add
outsb
add
lret
add
add
add
add
add
add
sbb
add
add
out
add
push
add
add
incb
out
add
add
add
lcall
add
add
add
add
lods
add
lcall
add
add
add
add
cmp
cmp
add
add
outsb
add
cmp
push
add
push
add
fiadds
sbb
or
sub
pop
add
lret
add
add
add
outsb
add
add
add
lcall
add
add
add
lea
jb
cmpsb
add
add
add
add
add
add
add
add
add
rolb
add
or
js
xchg
sbb
sbb
xlat
add
add
add
add
add
aaa
add
cwtl
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
sbb
cltd
add
add
jo
lcall
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
insb
add
lret
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
sbb
add
or
sbb
adc
add
add
add
add
push
add
sbb
add
add
add
add
jmp
ja
inc
dec
cmp
add
jo
push
popa
test
mov
add
push
rorb
test
gs
push
fnstcw
out
xor
pusha
into
out
lods
add
insl
jmp
mov
lods
cltd
xchg
pop
cmp
leave
sahf
sub
jbe
jo
jns
cmpsb
mov
xchg
mulb
imul
xor
test
sub
xor
mov
ds
push
pop
pop
fistpl
scas
scas
mov
adc
scas
fidivrs
push
mov
dec
pop
lret
push
arpl
dec
loope
mov
mov
loopne
mov
or
popa
mov
xor
inc
or
andl
sti
inc
test
aad
test
sub
call
jg
xchg
aad
pop
push
push
mov
repz
icebp
shll
sbbb
mov
adc
adc
mov
cmp
mov
outsb
cmp
pusha
int
push
or
bound
pushf
lahf
add
mov
insb
scas
push
sub
sbbb
xchg
mov
push
aad
std
dec
pop
mov
xor
data16
jp
cmpsl
or
ss
mov
push
jbe
dec
lret
ret
enter
ret
push
jle
xchg
add
loope
cli
or
loop
fs
mov
dec
call
jecxz
xchg
popf
pusha
cmp
pop
adcl
in
or
in
mov
add
pop
rep
shl
push
insl
fiadds
hlt
in
out
dec
pushf
ds
rorb
pop
std
lcall
jle
add
xchg
push
xchg
mov
pushf
mov
ds
out
dec
aam
mulb
push
pop
fmuls
ljmp
sahf
mov
leave
bound
cmpsb
push
sub
or
add
xchg
mov
les
cld
call
rep
dec
or
pop
sbbb
push
popa
or
aad
cmpsb
xlat
mov
aas
sub
add
and
xor
dec
mov
daa
inc
fistpll
jbe
or
clc
or
and
dec
lock
xchg
std
or
enter
and
jae
pop
mov
sti
or
jmp
mov
imul
fnsave
repz
inc
xchg
inc
jae
aam
bnd
mov
fmuls
sub
xchg
jg
sbb
repz
lea
sbbb
pop
jae
mov
aaa
xor
not
mov
add
fidivs
aad
inc
dec
cli
mov
mov
cs
mov
out
fsubs
into
js
in
and
fwait
in
mov
xchg
cmpsl
xchg
out
cmp
add
rorl
hlt
imul
nop
mov
sbb
in
jmp
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jl
adc
and
xor
add
jo
mov
xchg
test
pop
loopne
lock
adc
and
xor
jbe
inc
pusha
push
add
mov
mov
mov
rol
loopne
lock
sbb
or
cmp
sub
outsl
dec
pop
js
push
cmpb
leave
mov
lahf
push
dec
ss
dec
inc
js
outsb
mov
lahf
pop
pop
dec
fisttpll
jp
xchg
cmp
pop
into
pop
push
sub
pusha
mov
lahf
lahf
outsl
jg
outsb
jns
fwait
dec
pop
mov
pop
or
adc
outsl
sub
ja
push
push
dec
sub
lret
sbb
imul
out
out
popf
arpl
arpl
adc
cmc
xchg
pusha
fisubrs
pop
lret
cld
movsl
push
xchg
aas
loopne
test
out
pop
fbld
xorb
scas
jl
outsl
xchg
pop
xchg
or
rorb
jne
pushl
fs
fcomps
cmc
cmpsb
popa
jge
pop
call
xchg
dec
es
mul
pop
add
cmp
xor
insb
push
inc
pusha
dec
imul
fsubr
enter
icebp
push
add
arpl
push
add
xor
adc
hlt
movsb
clc
aad
movsl
xchg
shlb
imul
pop
adc
push
sub
inc
movsb
hlt
mov
ret
xorl
test
add
arpl
push
jae
push
inc
pusha
push
jo
xorb
out
not
loopne
lock
adc
and
xor
jbe
inc
pusha
push
jo
xorb
out
not
loopne
lock
add
jle
dec
lret
loope
and
cwtl
jnp
xchg
jbe
mov
cwtl
dec
call
jb
call
and
pushf
nop
lcall
je
dec
inc
pop
lcall
subb
fnclex
xchg
or
int
jmp
adcl
cs
cmp
push
stc
shrl
popf
xor
xchg
in
pop
mov
pop
add
insl
jnp
mov
jmp
jbe
mov
pop
sbb
add
pop
mov
cwtl
add
stc
pop
mov
pop
xlat
out
push
push
jnp
ja
mov
inc
in
xchg
inc
mov
addr16
push
mov
int
popf
add
mov
cmpsl
xchg
cwtl
rorl
lock
inc
and
jb
pop
lahf
stos
xchg
and
and
and
sub
in
stos
inc
lret
das
subl
push
sbb
dec
mov
pop
sub
mov
call
mov
and
push
clc
sub
sti
lret
out
mov
adc
loop
movsb
adc
jge
xchg
lret
sub
popa
mov
jp
lret
fstpl
mov
movsl
fdivl
jns
je
and
fdivr
and
nop
adc
fwait
sbb
and
pushf
cmp
push
mov
pushl
and
sub
rcll
add
lahf
push
aad
sti
pop
call
sbb
push
adc
lods
lods
ljmp
and
inc
stc
cli
push
jg
push
pop
dec
lods
js
movsb
adc
mov
push
xchg
pop
mov
mov
xchg
push
out
add
sbb
jl
push
repnz
jnp
in
mov
xor
jnp
add
mov
sub
xchg
mov
mov
xchg
ja
or
stos
pop
inc
fisubrs
mov
inc
push
jmp
dec
out
jnp
nop
lea
push
call
mov
cmp
push
dec
jb
iret
mov
lods
push
enter
and
mov
popa
push
in
aaa
mov
xlat
mov
dec
jo
and
xchg
mov
in
movl
inc
into
add
adc
or
mov
add
ss
std
test
std
or
cmpsl
stos
sub
mov
andl
aas
enter
or
cs
jmp
sub
mov
pcmpeqw
leave
adc
sarb
jae
bound
jmp
pop
mov
jne
pop
mov
outsb
push
fistps
mov
stos
bound
cmp
jmp
imul
popa
and
lret
inc
and
popa
arpl
imul
jp
push
push
aad
inc
ret
add
inc
lods
mov
pop
imull
jns
mov
xchg
xor
xor
lods
ja
loope
sub
mov
sbb
fidivl
jnp
movq
pop
daa
incl
or
and
psubq
into
xor
aam
push
jnp
cld
cmp
sub
sarl
movsb
xchg
cs
dec
pop
and
jnp
add
roll
jp
in
sarb
push
add
adc
xor
hlt
pop
mov
or
cld
cwtl
sub
fimuls
sub
mov
in
in
das
jg
enter
xor
mov
or
mov
inc
xchg
test
pop
mov
iret
lea
inc
mov
adc
inc
push
lods
es
out
cltd
sbb
addl
imul
mov
aam
push
int
xchg
sub
cmp
jecxz
es
loope
mov
lret
mov
jo
adc
repnz
pop
xor
mov
in
arpl
push
or
lock
dec
outsb
pusha
or
mov
dec
shrb
test
icebp
shl
test
sarl
movsb
mov
and
xchg
or
pop
stos
out
mov
es
stc
pop
sbb
mov
pop
out
jle
mov
xor
int3
mov
lods
jle
scas
inc
xor
mov
and
addr16
xchg
pop
fidivrl
pop
daa
jb
xchg
xchg
rcr
push
aam
or
mov
sbb
call
dec
ret
pop
loopne
jge
and
sahf
jae
lret
xor
lea
and
jp
aam
call
call
or
inc
sbb
or
shlb
xor
and
fdivrl
stos
inc
sub
add
out
mov
ljmp
ss
jb
data16
cmp
sti
jp
inc
push
mov
pop
xlat
xor
add
xor
cmp
cli
addr16
add
mov
es
adc
jle
sti
mov
scas
mov
aaa
ljmp
pop
and
dec
fs
inc
sub
jle
sbb
lret
dec
jle
imul
sbb
test
or
push
jb
cmpsl
sbb
aaa
leave
call
mov
loop
int
xlat
aaa
enter
pusha
xchg
repnz
jmp
iret
ja
pop
insb
lret
iret
dec
cltd
out
push
ljmp
pop
mov
mov
stc
xchg
mov
pop
adc
mov
lret
jbe
and
repz
mov
cmp
add
xor
jns
xchg
movsl
std
jb
mov
dec
sbb
sub
ss
enter
jne
jbe
mov
icebp
scas
cltd
jo
add
aas
jbe
cmp
jnp
insb
mov
jae
mov
sbb
jno
mov
jns
addb
push
push
inc
outsb
lock
sti
cmp
push
sbb
cmp
mov
add
loope
add
ljmp
cmp
imul
jb
jb
dec
std
andb
aam
addr16
push
out
add
mov
shll
mov
movsb
sub
repz
lds
sub
rcl
test
xchg
pusha
push
sbb
push
adc
sbb
loop
xor
mov
or
imul
push
inc
jb
outsl
sbb
jno
inc
sbbl
fidivrl
fdivrl
mov
add
push
or
add
mov
jge
mov
mov
mov
bound
cmc
xchg
cmp
jne
mov
popf
imul
cmp
push
sbbl
jo
jmp
imul
int
inc
daa
mov
gs
push
pushf
mov
inc
mov
and
aaa
cmp
cltd
add
ret
test
sub
hlt
cmpsl
repnz
sbb
repnz
xchg
mov
cli
mov
notb
mov
stos
les
popf
shrl
or
jecxz
inc
fsts
rcrb
sahf
xchg
stos
add
add
and
lret
and
jne
cli
mov
bound
adc
lret
adc
rcrl
xor
pop
out
cmp
add
mov
in
fdivp
les
test
cli
lret
pop
mov
mov
sahf
daa
add
and
sub
inc
sbb
xchg
mov
gs
ds
push
add
pop
cmp
cwtl
js
test
idivb
sbb
inc
dec
mov
adc
clc
inc
fbstp
xor
jne
jp
xor
or
xchg
add
out
and
and
jmp
mov
sbbl
aaa
repz
bound
iret
and
push
test
ret
movsl
push
mov
mov
ds
and
aad
int
enter
sbb
mov
jge
lds
cmc
xchg
mov
fbstp
cmp
xor
adc
lcall
sbb
and
iret
int
jbe
pop
jge
iret
adcb
jno
lret
mov
ja
fstps
jae
sahf
data16
pop
mov
stos
ljmp
std
fcomi
cwtl
test
lods
cmp
or
iret
inc
lret
js
xlat
sbb
push
aad
mov
movsl
xchg
ret
sub
leave
enter
cmp
dec
mov
cmpsb
jo
mov
in
pop
pusha
xchg
xor
in
mov
sub
nop
mov
or
adc
adc
loopne
sub
sti
xchg
stc
in
in
bound
and
es
dec
std
fnstcw
xor
mov
cmp
dec
push
lods
int
or
shrl
lds
addr16
inc
repz
sbb
cmp
xor
les
inc
adc
popa
dec
scas
cli
mov
inc
jmp
outsl
stos
or
icebp
in
stos
cmp
pop
push
mov
sub
mov
cmpsb
mov
in
insb
sub
sub
add
inc
pop
xchg
or
mov
inc
cltd
xor
jmp
and
shrd
jbe
movsb
mov
add
push
push
and
sub
lahf
inc
jno
loope
test
mov
xor
addl
js
pop
fstpl
lock
imull
mov
pop
adc
cmp
je
cmpsb
popf
jecxz
cli
adc
dec
push
sub
cmc
pusha
pushf
icebp
add
jb
leave
jecxz
mov
pop
mov
or
in
xchg
lret
mov
xchg
cmp
mov
je
inc
rcll
mov
fwait
jle
int
xchg
fadds
adc
pop
xchg
jecxz
sub
and
shrl
fs
or
jb
jmp
pop
sub
inc
inc
and
cld
adc
push
dec
dec
loop
sub
imul
imul
push
in
ja
adc
mov
add
push
lock
mov
jmp
dec
xor
movsl
jecxz
inc
outsb
mov
push
cmp
mov
jo
es
cmp
ret
scas
addb
repz
pop
jno
push
das
ljmp
or
fistps
push
xchg
mov
adc
xchg
add
xchg
les
pop
pusha
cli
and
push
sbb
imul
and
sbb
dec
push
roll
jge
xlat
mov
lcall
mov
jne
aaa
dec
arpl
jl
in
mov
cld
sub
fstpt
xchg
xchg
cmpl
cld
arpl
ret
lea
loop
sub
xchg
xor
cli
mov
ret
enter
push
mov
test
lret
mov
lds
pop
pop
mov
repz
enter
das
lahf
or
fldln2
aad
inc
bound
popa
pop
lret
fidivl
jg
jl
and
icebp
adc
js
sbb
mov
mov
insb
jbe
push
dec
in
icebp
pop
out
lds
popa
mov
rclb
lret
rcl
outsl
ljmp
insb
test
sbb
cmpsl
cmp
dec
repz
ljmp
out
lods
inc
adc
cmp
call
insb
cmc
out
stos
xor
hlt
or
mov
sbb
scas
jne
dec
adc
lds
mov
xlat
insb
inc
cmp
pusha
aad
jb
or
and
rolb
enter
cmp
mov
stc
xchg
cmpb
push
movsb
push
lret
nop
add
dec
adc
lret
push
inc
fdivs
pushf
jl
push
sbb
shrb
imul
dec
dec
xchg
pop
dec
push
mov
cmp
fisttpll
cs
movsl
dec
pop
lds
push
fndisi(8087
jmp
mov
xchg
rep
sub
cmpsl
pop
test
and
push
mov
les
sub
adc
sub
push
ds
pop
inc
sarl
je
sub
jae
xchg
leave
cmp
mov
nop
pop
outsb
dec
mov
sbbb
in
push
cli
cltd
daa
mov
inc
cmpsl
jle
repz
lcall
jb,pn
sahf
in
mov
xchg
sbbl
inc
test
add
sub
mov
loopne
push
inc
js
cld
pop
sub
sahf
mov
dec
call
add
adc
adc
inc
mov
jb
daa
cmpsb
daa
dec
frstor
bound
stos
les
inc
pop
pop
push
xor
pop
sub
out
rol
fwait
test
adc
imul
sahf
fildl
rcll
adc
popa
scas
ds
incl
insl
cmpsl
inc
in
adc
sahf
push
hlt
mov
cmp
mov
cltd
call
sbbb
mov
popl
mov
in
call
movb
test
les
xchg
jns
push
ficoms
xor
mov
dec
jg
lock
dec
sub
in
test
enter
jecxz
sub
fwait
xchg
pop
pushf
jp
cld
jge
add
lock
ret
iret
int3
stc
cmp
loop
cmp
and
xchg
push
aaa
mov
jbe
lret
dec
stos
sbbl
imul
loop
jl
mov
lock
dec
inc
mov
mov
enter
cmc
repz
cwtl
inc
std
jle
push
xor
pushf
ror
or
pop
sahf
cmp
mov
das
iret
mov
pop
repz
shrl
pushw
lods
add
ss
mov
lock
jae
xor
mov
fiaddl
lahf
pop
fdivrp
inc
or
adc
insl
mov
aaa
xchg
push
xlat
mov
fildl
idivl
pop
lea
scas
ss
mov
nop
ljmp
shl
cmp
pusha
sbb
subl
je
xchg
xor
mov
mov
mov
in
call
outsl
das
xchg
notb
push
cmp
shrb
sbb
sub
push
rorl
pop
aaa
dec
cmc
sarl
or
mov
int3
fistl
dec
or
dec
lds
mov
lret
push
xor
cmc
sbb
cmpsb
xchg
adc
xor
andb
mov
mov
std
cmpsb
shlb
pusha
mov
sbb
stos
clc
sbb
xchg
jb
cld
xchg
inc
jge
gs
or
mov
jb
out
sub
mov
inc
fadd
pop
lret
cli
sub
mov
loope
mov
dec
sub
jb
pop
lds
bswap
mov
push
push
addr16
movsb
sub
push
pop
in
adc
mov
push
jge
into
rclb
cmp
std
pop
xchg
xor
les
pop
aaa
insl
push
xchg
in
jle
fsubl
stos
mov
ret
iret
mov
mov
int
or
mov
mov
fs
fs
xchg
faddl
stos
xor
sbbl
mov
or
out
adc
movsb
daa
shll
sbb
in
test
xchg
inc
rcll
cmp
jae
and
lock
add
mov
dec
or
mov
sbb
sub
aas
mov
sub
lds
hlt
mov
xor
lods
xchg
push
dec
cmc
sarl
imul
jnp
iret
mov
into
rcrl
pop
xor
rorl
adc
cld
test
xchg
push
jmp
leave
inc
dec
sbb
cmp
loopne
mov
in
js
or
inc
cmp
add
lret
and
aad
cli
int3
int
adc
jp
mov
out
rcrw
sarl
popf
cld
lret
adc
sbbb
loop
lcall
repz
fisttpll
add
jp
and
dec
xor
sub
lock
push
mov
push
inc
loop
insb
gs
mov
jmp
pop
sub
dec
daa
pop
ret
outsb
lock
fadd
push
push
mov
push
rolb
inc
insl
dec
and
xchg
or
pop
and
mov
imul
fisttps
das
roll
sbb
xchg
fisubs
rcl
imul
mov
lahf
jo
in
hlt
mov
pcmpeqw
jae
out
scas
pop
mov
pop
rorl
lds
xchg
cmpsl
sbb
aam
cmpsl
dec
subb
push
into
out
pop
push
aas
dec
mov
ret
sarl
movsl
mov
mov
sti
pop
push
cs
loopne
cwtl
inc
loopne
in
or
arpl
inc
pop
scas
cmp
fists
js
sub
sbb
jns
bound
dec
cmp
test
adc
fimull
and
and
pushf
loopne
push
dec
daa
sub
arpl
lahf
push
cmc
push
adc
push
adc
inc
cli
in
inc
adc
sub
adc
mov
pushf
stos
dec
lea
fisttpl
int3
mov
mov
add
or
inc
insb
insb
mov
xor
adcb
jg
gs
hlt
pop
enter
push
sbb
cmp
lret
pop
jo
dec
js
mov
pop
xchg
pop
movb
cmp
mov
mov
stos
cmp
stos
insb
adc
jp
imul
mov
in
jnp
mov
mov
dec
imul
and
cwtl
lcall
xchg
sub
dec
mov
stos
shlb
add
js
fisttpl
xchg
insl
cs
stos
out
fs
outsl
xchg
mov
leave
in
icebp
cmc
inc
or
push
pop
pop
add
dec
or
out
jb
or
aas
xchg
iret
add
xlat
pop
cmpsl
cmpsl
das
jbe
fnsave
fmulp
ret
cmp
sub
pusha
cmpsl
jae
outsb
jge
ds
fs
push
jo
jnp
or
rcll
cmp
ror
dec
pop
pusha
pop
cs
dec
pop
pop
fmuls
idiv
gs
in
in
xor
lods
out
ja
and
inc
fistps
xor
xchg
cmp
mov
repz
mov
push
fsubs
int
cs
adc
icebp
js
and
in
mov
xchg
inc
inc
pushw
lods
add
jo
push
or
stos
dec
mov
jg
loop
cmpsl
punpckhdq
cltd
add
cmpsb
pop
push
jle
xchg
not
fwait
sbb
adc
aas
mov
mov
jecxz
sub
add
sub
inc
jl
mov
fsubl
outsb
cs
mov
scas
clc
sbb
jae
and
mov
lretw
xor
pop
cltd
fiaddl
and
out
sbb
pop
arpl
icebp
lods
lock
add
fs
and
dec
xchg
adc
mov
sbb
xchg
test
xchg
out
clc
add
scas
in
jge
mov
into
pushf
nop
scas
sbb
push
fistpll
cmpsl
push
xorb
rcrl
in
jne
xchg
cmp
lahf
cmp
pop
stc
fstps
mov
add
int
sub
test
ret
jo
test
mov
out
dec
push
jp
cmp
add
ret
mov
outsl
fcmovnb
lcall
imul
mov
add
xor
xlat
jle
pop
enter
std
daa
xchg
inc
in
push
jno
out
das
sbb
int
hlt
dec
mov
fldcw
arpl
fdivl
data16
dec
pop
pop
pushf
mov
pop
sub
mov
push
or
ret
mov
xchg
ds
stos
adc
push
stos
pop
pusha
cmp
push
push
xor
push
or
sbb
xchg
xor
or
stos
sbb
shl
nop
sbb
clc
pop
cs
sbb
test
push
hlt
push
adc
lcall
push
mov
movb
lods
test
sahf
push
pop
sarb
lock
mov
mov
out
jmp
repz
mov
add
out
xor
ljmp
fidivrl
mov
test
lret
lods
pop
sahf
pop
add
and
rorl
in
adc
aas
out
in
push
dec
insl
mov
incb
mov
inc
inc
or
sub
xor
test
adc
fmuls
out
mov
fstps
mov
xchg
pop
nop
xor
fdivs
or
push
mov
cs
dec
mov
xchg
lods
xor
sub
mov
call
repnz
or
ljmp
cmp
out
mov
jmp
ja
je
cwtl
notl
es
push
shlb
sub
popf
sbb
jle
push
push
inc
shll
jmp
in
cld
mov
dec
stc
int
cli
stc
dec
out
test
jl
pop
in
testb
mov
or
mov
sub
int
cmp
gs
cmp
test
cmp
into
mov
out
jl
mov
pop
sbb
xchg
iret
iret
lods
shll
and
sti
in
jno
jno
cli
dec
sbbl
inc
fwait
or
call
and
dec
sbb
jg
hlt
fisttpl
xchg
push
push
cmp
fcompl
jecxz
dec
not
and
mov
repz
enter
lret
outsb
das
movsb
cmpsb
shrl
adc
int3
add
aaa
push
or
or
out
sti
call
cmp
movsl
cmc
inc
push
out
sbb
pop
cmpsb
or
or
sbb
cmp
inc
in
dec
ret
fdivl
sbb
nop
mov
jae
daa
movsl
ss
pop
addps
adc
mov
loop
mov
test
adc
or
sti
stc
adcb
jecxz
push
adc
cmp
xor
mov
push
xor
jbe
inc
pusha
push
jo
xorb
out
not
loopne
lock
adc
and
xor
jbe
inc
pusha
push
jo
xorb
out
not
loopne
lock
adc
and
xor
jbe
inc
pusha
push
jo
xorb
out
repnz
in
hlt
adc
adc
and
xor
jbe
pusha
mov
orb
mov
jle
cmp
sbb
inc
cmp
pop
push
xor
testl
cmpsl
fwait
xchg
jmp
sti
ja
sbb
inc
cmp
dec
daa
pop
pop
imul
testl
cmpsl
fistl
or
push
sub
aaa
dec
daa
pop
pop
imul
divl
jmp
mov
or
and
xor
lcall
cmp
in
cmp
mov
sbb
xor
add
pop
mov
mov
movsb
sbb
icebp
jae
ss
sti
pop
stos
inc
mov
xchg
jmp
pop
push
in
int
fmul
push
imul
cli
testl
jnp
lret
cs
xor
data16
sub
das
aaa
dec
aaa
dec
jmp
mov
loope
dec
cwtl
iret
mov
xchg
adc
cmp
dec
sub
push
xchg
push
sub
push
dec
mov
add
stos
mov
cmpsl
dec
iret
and
call
je
mov
scas
cmpb
out
sti
sub
sbb
inc
cmp
dec
daa
pop
pop
imul
testl
cmpsl
fistl
pushw
enter
jge
and
sbb
inc
or
lds
mov
je
adc
insb
jno
dec
jne
add
jnp
into
in
xchg
std
adc
movsb
repz
sahf
xchg
ds
inc
dec
aaa
daa
daa
pop
pop
imul
testl
cmpsl
fistl
or
push
sub
aaa
dec
daa
pop
pop
imul
testl
cmpsl
fistl
or
push
in
fldenv
in
mov
nop
adc
or
push
inc
cmpsb
mov
divb
and
cmc
jg
add
icebp
or
add
xlat
not
or
fnclex
mov
mov
fstpt
add
mov
adc
mov
in
adc
fstl
test
sahf
andl
aam
sub
je
out
inc
inc
lret
repz
adc
xchg
and
or
fucom
or
push
addr16
into
out
pop
test
leave
pop
mov
push
push
insb
ja
mov
add
push
dec
ljmp
jns
hlt
dec
mov
fnstenv
in
frstor
jb
mov
stc
jbe
decl
jns
rcr
push
sub
das
push
andl
adc
or
push
adc
mov
cmp
xchg
cltd
shrl
or
jecxz
mov
imul
cmp
lahf
mov
fisttpll
gs
pop
cmp
push
leave
das
lcall
cmp
fwait
rcrb
aas
scas
call
cmp
fmulp
ljmp
ss
repz
out
test
movsl
jbe
fildll
push
push
sbb
push
stos
inc
mov
in
mov
pushf
jo
mov
aas
jbe
jg
pop
xchg
lock
lret
pcmpgtd
push
sub
adc
or
xchg
xchg
decl
push
xchg
and
push
mov
or
aaa
xor
jp
cmp
jbe
sub
test
icebp
xor
andb
mov
jecxz
das
fsubs
addr16
or
and
jmp
inc
je
outsb
or
loop
inc
es
cmpsb
sbb
or
dec
mov
hlt
cld
int
sub
xchg
fcoms
cmp
fld
cmc
inc
adc
jl
push
cmp
inc
pop
xchg
mov
xchg
add
andb
cvtps2pi
sbb
shl
push
lds
mov
inc
popf
cmp
and
push
inc
sub
adc
pop
aaa
orb
sub
aaa
in
jae
mov
cmp
mov
adc
or
test
stos
xchg
dec
mov
and
mov
cwtl
cli
mov
pop
aas
pop
out
mov
mov
mov
fistps
push
std
add
or
cli
pop
xor
insl
out
mov
lds
dec
xor
aam
je
xchg
sbb
dec
mov
dec
outsl
orb
push
mov
into
mov
xchg
iret
push
jecxz
rcr
aas
ljmp
jno
push
sbb
das
mov
repz
les
jns
rolb
push
mov
push
mov
push
js
stc
cmc
sbb
xchg
dec
stos
inc
jge
add
jmp
ss
pop
lods
fucom
rolb
int3
inc
jmp
dec
idiv
xor
cmpl
call
mov
sub
dec
dec
sahf
sbb
mov
jle
repz
push
jg
cli
pop
adc
loop
in
xchg
inc
loopne
jne
cmp
or
sarb
into
lods
push
xor
jo
lahf
xor
fs
pop
rcrl
mov
mov
xor
add
cmpsb
lcall
pop
pop
pushf
inc
xchg
call
jns
into
sbb
jecxz
inc
xor
jb
mov
pushw
xchg
inc
sub
xor
sti
and
out
enter
dec
cmp
mov
xor
pop
jno
data16
in
fistps
pop
test
clc
push
sub
xor
jl
push
mov
or
data16
xchg
es
out
pop
xlat
shrb
sbb
pop
push
data16
clc
and
inc
repnz
cmp
xchg
jnp
mov
jb
test
add
int3
in
xor
add
lock
mov
inc
pop
pop
popf
push
dec
cs
sarl
cmp
leave
and
push
mov
lret
into
xor
fidivs
ljmp
test
rcr
push
mov
js
inc
gs
hlt
jo
pushf
cltd
insl
sbbl
pop
push
orb
ljmp
add
into
cltd
jmp
cmp
mov
inc
pop
or
in
xor
mov
lahf
loopne
sbb
and
jp
stos
jb
and
pop
stos
in
enter
or
pusha
and
jmp
test
repnz
inc
mov
sbb
mov
cmpsb
sbb
jl
add
pop
inc
adc
sbb
and
loopne
cld
xor
mov
adc
dec
out
push
xchg
adc
in
syscall
push
pop
mov
lahf
sub
cli
add
mov
xchg
xchg
cltd
xchg
int
in
subl
add
popa
xchg
sub
stc
js
daa
xor
xchg
sub
xor
inc
pop
and
cmp
xchg
add
orb
sub
nop
lds
mov
or
xchg
movsl
xchg
in
mov
sbb
loope
out
int
sub
cltd
mov
lahf
xchg
push
into
insl
pop
or
stos
sub
pop
cmpsb
push
leave
aas
pop
dec
andl
stos
inc
pop
mov
jns
adc
add
cmp
aam
lret
cmpsb
or
xorb
xchg
push
gs
mulb
sahf
jb
mov
or
jle
cmp
xor
mov
jge
mov
or
pop
data16
pop
test
fcmovbe
into
in
inc
mov
pop
mov
push
fs
jl
sarb
addr16
leave
lods
in
loop
mov
push
pop
sub
gs
rcll
sbb
push
cld
rorb
jbe
enter
jb
cltd
outsb
iret
bound
mov
inc
dec
sahf
adc
xor
jl
xlat
aas
add
sbb
insl
xorl
sahf
cmp
mov
shrl
int
xor
iret
xchg
jne
push
lcall
dec
jmp
ret
jge
dec
adc
rcrl
sbb
add
sbb
cld
push
test
xchg
adc
dec
fildll
xchg
push
push
sbb
stos
out
into
add
push
les
insl
cmp
enter
pushf
mov
adcb
xchg
push
push
addr16
movsb
jmp
xor
loopne
test
jge
scas
push
or
les
dec
mov
cld
fmul
mov
sarb
mov
lods
mov
or
jg
mull
xchg
mov
xchg
fwait
and
push
pop
mov
lret
cmc
cli
das
xchg
int3
jecxz
mov
sbb
ds
jecxz
jno
testb
jg
loop
mov
sub
out
shll
mov
and
and
mov
inc
and
adc
inc
fdiv
jl
stos
pop
in
and
push
cmpb
cmc
out
std
fdivl
lret
pushf
cmpl
pushf
jge
cmpsb
mov
jo
test
push
mov
iret
sbbb
cmp
push
mov
jno
push
xor
cs
inc
mov
sahf
jmp
jnp
les
jg
dec
in
scas
in
lock
mov
pop
pop
mov
pop
clc
mull
jmp
test
outsl
loope
jbe
nop
jo
fistl
push
xchg
or
dec
push
mov
mov
das
jmp
push
aas
stc
adc
addb
dec
jle
loope
push
pop
fldcw
inc
stos
sti
mov
bound
xchg
add
sbb
adc
sbb
cli
push
loop
inc
xchg
pop
pop
jae
sbb
mov
push
adc
jb
stos
fldcw
cmp
and
mov
cli
sub
cld
sbb
xor
das
negl
das
dec
mov
arpl
inc
int3
imul
mov
lods
lods
or
xchg
icebp
sub
js
hlt
movsl
dec
bnd
pop
pop
push
rorb
dec
jb
ficompl
hlt
jg
xchg
movsb
je
and
push
xchg
je
ss
dec
push
rclb
jp
rclb
sub
cmp
jnp
inc
sahf
jl
jo
mov
lcall
repz
lret
xor
pop
fwait
in
repnz
fnstenv
shl
add
mov
jne
lcall
push
or
ret
cwtl
pusha
sbb
pop
sbb
fnsave
sarl
mov
sbb
adc
mov
xchg
mov
hlt
lcall
push
adc
jae
push
jg
or
iret
adc
out
sub
test
in
data16
aad
test
mov
fnstcw
mov
sarb
les
inc
fcmovu
jae
test
arpl
outsb
bound
mov
sbb
inc
nop
mov
sar
cs
outsb
pusha
pop
cmpl
or
push
sbb
cmpsl
jmp
dec
int3
mov
out
or
test
filds
decl
inc
je
xor
jl
mov
sbb
iret
xor
fsubrp
dec
js
test
jnp
sub
pop
xchg
nop
pop
push
cwtl
mov
lds
movsl
stc
pop
dec
sub
repnz
or
xor
xchg
cmp
mov
add
cmp
push
pushf
xchg
clc
mov
push
mov
or
test
dec
imul
ljmp
repnz
mov
test
sbb
xchg
gs
pop
push
pushf
sbbl
cmp
imul
pop
push
mov
stc
cmpb
pop
sub
cmp
loop
out
icebp
jne
mov
lock
jne
aad
shl
enter
out
mov
xchg
xlat
add
sub
mov
fcom
addl
and
cs
mov
or
mov
ret
pop
loopne
push
out
jne
lret
arpl
subb
popf
pop
pop
lret
adc
add
jmp
movsb
clc
popa
mov
fistpl
xchg
clc
push
std
jns
jmp
xor
xor
lcall
mov
adc
std
dec
and
fs
test
mov
inc
mov
cmpl
rorb
and
test
add
xchg
fdivrs
scas
cmpsb
lods
sub
jg
sahf
movsb
scas
notb
mov
inc
cmc
sbb
inc
leave
pop
cwtl
int3
ds
xchg
xchg
fisttpll
sub
xor
ljmp
sbb
ret
xlat
rorl
outsb
leave
fmul
mov
call
in
btcl
fildl
iret
adcb
dec
in
xchg
push
scas
push
xor
mov
ret
int3
pop
mov
dec
sti
repz
xor
jbe
xor
shrl
xchg
pushf
and
rcrb
scas
jbe
mov
mov
fdivrs
ret
sub
and
stos
loope
stos
fildl
xchg
fcoml
les
out
leave
pop
cld
cmp
mov
jmp
out
dec
fcmovnbe
sub
movsl
push
ss
pushf
cmp
dec
outsl
pushf
addl
mov
xor
mov
dec
mov
and
cmp
in
inc
sbbl
ret
movsl
jp
mov
faddp
in
iret
shrl
jmp
int
cmp
aas
shl
outsl
xor
inc
ret
and
int
mov
pop
mov
sbb
sub
std
mov
mov
mov
or
sahf
xor
cmp
cmpsb
xor
mov
cli
cmp
mov
or
add
inc
lods
stc
cmp
imul
pop
into
adc
repz
adc
ljmp
jne
xor
and
imul
jle
shll
mov
xchg
dec
mov
xchg
mov
out
js
stos
test
cmp
mov
das
inc
mov
iret
lcall
push
lcall
mov
adc
testb
add
mov
fstl
pop
and
jns
hlt
loopne
mov
movsb
cmc
mov
mov
out
sbb
movsl
imul
or
stos
xor
jns
dec
ljmp
xor
xor
xor
les
push
pop
xchg
sbb
and
inc
push
add
das
adc
xor
test
xchg
mov
adc
dec
cli
notl
shrl
xor
pop
mov
sbb
pop
cwtl
call
aam
sbb
lock
cld
add
jp
push
stc
mov
jmp
pop
adc
lea
imul
addb
shr
lock
inc
bound
mull
jp
add
jle
int3
or
push
pop
adc
xor
idiv
jo
sub
inc
xorl
clc
out
xchg
fcmovbe
cmp
outsb
jge
pop
data16
pusha
push
xor
das
sub
js
xchg
add
in
jmp
out
ret
movsl
or
xor
out
dec
jnp
fsubl
or
test
pushf
pop
xlat
inc
sbb
mov
cmp
cmp
add
test
loop
cmp
stos
xchg
adc
ret
mov
jno
cmpsb
mov
arpl
cmp
cs
leave
adc
add
mov
idivl
mov
lock
cmp
pop
loop
push
stc
outsb
pushf
mov
and
xor
insb
xchg
frstor
int
int3
mov
and
inc
dec
ss
cmpsb
xor
sub
test
adc
dec
stc
repz
stc
sub
mov
out
test
inc
jecxz
cltd
in
mov
mov
xchg
lcall
xchg
arpl
bound
fs
subl
std
dec
or
dec
adc
and
ret
sbb
jne
jbe
xchg
mov
mov
jge
pop
js
lods
out
test
imul
in
fstl
scas
addr16
mov
xchg
repz
cli
dec
pop
cmp
decl
and
jl
test
and
or
test
les
in
in
cmpsl
dec
icebp
fisubl
push
xchg
imul
jno,pn
xorb
aam
push
in
fldenv
shll
pop
lahf
xorl
or
in
js
bound
arpl
dec
imul
add
dec
loop
hlt
adc
dec
push
jecxz
movsl
add
sub
inc
int3
lock
inc
sub
outsl
and
scas
ret
leave
pop
cmp
sub
in
into
fildll
adc
mov
loopne
cmp
outsb
jne
pop
outsb
sub
fnsave
add
aaa
ja
repnz
dec
or
jno
mov
aad
pop
inc
sub
or
mov
sbb
push
imul
jg
in
out
cmp
data16
adcb
sbb
adc
add
mov
jp
mov
cmp
cmpl
add
lcall
ds
icebp
jo
push
jb
scas
jb
loopne
xchg
mov
out
mov
mov
cs
shrl
add
sub
jb
gs
sbb
hlt
in
stc
std
sbb
ret
dec
jns
cltd
cmpsl
push
and
sbbl
mov
xor
test
cmc
inc
push
xchg
cwtl
and
addl
test
cmpl
scas
xchg
or
nop
popa
push
mov
xchg
xlat
lret
xchg
and
add
pop
cmc
rcrw
mov
in
cmc
stc
dec
ss
or
inc
jmp
push
inc
dec
push
adc
stos
cmp
pop
and
inc
push
add
add
fmull
push
push
fmul
inc
cmp
add
dec
xor
add
cwtl
pop
addr16
xchg
push
jecxz
test
in
test
lock
cmc
stos
sbb
mov
xchg
and
jo
mov
and
or
lods
mov
dec
mov
icebp
push
rol
sub
repz
jae
les
lock
mov
iret
mov
add
sti
cltd
xchg
jo
xchg
xchg
jo
mov
stc
das
adcb
pop
daa
ret
xor
sbb
pop
cli
xor
imul
lea
sbb
dec
and
inc
fs
ja
divb
pop
pop
mov
leave
movsb
mov
nop
sbb
and
xchg
les
arpl
and
sub
and
xlat
sub
call
sub
js
sarl
cld
fbld
in
loope
push
push
mov
out
shr
sahf
imul
and
add
lea
adc
mov
es
mov
jg
sbb
dec
fs
popa
rcll
sub
iret
scas
and
popf
pop
int
jb
test
sbb
mov
dec
xchg
aas
clc
lds
sbb
cwtl
leave
aas
cld
in
mov
mov
mov
aas
push
rolb
mov
push
xchg
jne
mov
or
lock
mov
mov
and
andb
lcall
mov
jo
fildl
mov
or
add
mov
shl
mov
es
mov
jmp
mov
pusha
in
cmovae
dec
ljmp
outsb
add
mov
push
pop
out
pop
jne
stc
lret
xchg
inc
rorb
pushf
mov
hlt
pop
jo
inc
ror
mov
mov
cmpsb
mov
iret
xchg
lcall
push
pop
movl
lcall
mov
xchg
into
xchg
in
inc
mov
stos
xor
dec
into
jecxz
push
push
mov
push
cmp
inc
ljmp
and
out
cmp
das
incl
pop
mov
lods
cmp
sbb
dec
es
xor
ljmp
xor
fstpt
sub
push
xorl
mov
push
fnsave
aas
mov
into
mov
test
je
ficoml
adc
or
lret
test
ljmp
jns
xor
out
out
fidivrl
js
andb
or
inc
cmp
pop
lea
pop
outsl
shll
repz
in
mov
mov
sub
cmp
les
out
mov
loope
sub
cmp
or
int3
aam
jge
jl
mov
pop
jmp
cmp
mov
pop
call
xchg
enter
sbbl
xor
pop
xadd
jns
cmp
push
cmp
jno
mov
test
add
push
push
dec
sbb
push
sub
cli
scas
nop
loope
subb
dec
dec
fwait
xchg
das
pop
jb
mov
mov
movsb
scas
mov
xchg
lock
sub
mov
fcmovb
sahf
cmp
clc
add
jb
bnd
sbb
jge
jbe
push
xchg
xchg
andb
add
pushf
and
int3
pop
push
das
cltd
cmc
jo
mov
jp
and
icebp
push
xchg
loop
aas
repnz
loope
push
jge
adc
gs
bound
or
jg
scas
jo
cmp
mov
xchg
fisubl
push
call
push
movsl
xor
mov
outsl
sbb
cltd
in
into
stos
nop
cld
jbe
das
das
pop
add
push
mull
fs
xchg
imul
jae
test
loop
mov
cmpsb
sub
mov
sahf
or
dec
mov
sub
ret
adc
ret
pop
pop
xchg
fistpll
mov
fwait
pop
add
push
stos
loope
or
enter
xchg
sbb
mov
pop
sti
cli
push
push
push
popa
out
je
and
dec
clc
inc
xchg
fcmovbe
dec
ss
jno
xor
mov
inc
jp
aad
jbe
pop
pushf
xor
call
insl
fstl
jno
inc
les
and
mov
xor
scas
andl
dec
rcr
cmpsl
push
repnz
adc
xchg
ja
cld
push
sahf
jo
loopne
mov
push
pop
xchg
pop
xor
inc
dec
xor
notl
bound
test
xchg
jb
xchg
jecxz,pn
sbb
arpl
xchg
lcall
dec
push
xor
popa
jbe
dec
xor
stos
xchg
aam
pop
stos
sub
adc
jle
shrb
popl
sub
hlt
mov
mov
fdivs
stc
mov
fbld
dec
in
or
xor
push
mov
rclb
push
in
ret
mov
xchg
lods
scas
add
into
jno
flds
or
mov
add
dec
sbb
fwait
add
int
call
dec
iret
add
or
pop
pop
push
xchg
ds
mov
cmp
ret
xor
imul
outsl
jb
test
jnp
into
and
movsb
loop
mov
sub
push
ljmp
lret
mov
mov
adc
fisttpll
js
xchg
xchg
mov
mov
add
xor
jle
les
cli
fstpl
imul
andl
add
std
sbb
dec
setbe
mov
bound
add
jle
ds
mov
adc
xor
sti
aam
das
adc
shrl
jae
push
sub
fwait
xor
std
mov
movsb
jecxz
scas
and
xor
nop
adc
stos
or
or
cmc
dec
inc
ja
jg
mov
sbb
add
nop
flds
jo
js
dec
pop
f2xm1
ljmp
push
jmp
mov
test
inc
adc
andl
inc
orl
sub
aaa
dec
daa
pop
pop
imul
testl
cmpsl
fistl
or
push
sub
aaa
dec
daa
pop
pop
imul
testl
cmpsl
fistl
packuswb
push
sub
aaa
dec
daa
pop
pop
push
jnp
mov
lcall
cmpsl
fistl
or
push
sub
aaa
dec
daa
fistl
jmp
test
je
xor
int3
rolb
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
push
jp
dec
aaa
pop
std
inc
ja
add
ljmp
stos
aas
testl
aaa
pop
inc
sub
or
xchg
xchg
lcall
xlat
mov
pop
push
jp
dec
aaa
pop
inc
sub
or
xchg
cli
scas
rcr
movsb
out
mov
lcall
addr16
in
ja
pushf
rolb
je
repnz
out
lret
insl
inc
xor
cmp
cli
push
sub
movsl
inc
test
add
add
dec
cmp
fildll
push
out
fimull
lret
xorb
push
inc
cmpsl
fucomp
in
dec
add
xchg
movl
fs
adc
jg
stc
pop
xchg
pop
inc
sub
xchg
push
xchg
cmpsb
xor
test
jne
pop
cli
mov
test
movsl
scas
sub
addr16
ja
out
push
loop
divl
mov
pop
cld
pop
test
pop
lahf
mov
jg
cli
js
inc
cli
rcr
cmp
mov
xlat
jge
sahf
negb
daa
dec
aaa
pop
inc
sub
or
xchg
xchg
cli
cmpsl
lret
stos
xlat
mov
jae
push
jp
and
add
xor
and
out
and
pushf
mov
fwait
leave
mov
push
js
dec
jg
and
pop
addr16
sbb
xchg
cli
fildll
movsb
shll
and
sub
aas
push
sub
or
xchg
xchg
cli
cmpsl
lret
stos
xlat
mov
pop
push
jp
dec
aaa
pop
inc
sub
or
xchg
xchg
cli
cmpsl
lret
stos
xlat
mov
pop
push
xor
out
rolb
mov
xor
mov
addb
push
test
mov
aas
jge
dec
mov
xchg
ja
pop
xchg
mov
inc
ret
je
xlat
jge
mov
fimull
ss
and
arpl
jp
inc
fiaddl
movsb
xchg
push
pop
adc
xor
pusha
test
pop
inc
cmpsl
fsubs
test
int3
pop
push
test
iret
jle
lock
mov
xlat
in
inc
call
jp
add
rcr
xor
xor
dec
pop
popa
lret
es
inc
insb
pop
pop
sbb
mov
mov
xchg
push
sahf
rolb
and
mov
iret
and
mov
mov
sub
mov
mov
fdivs
insb
or
fisubl
adcb
in
stc
jb
in
pop
xchg
sti
insl
xor
jbe
add
mov
xchg
loopne
cld
hlt
pop
lret
ret
push
pop
jne
mov
cmp
loope
rorl
roll
or
fsub
insb
cmc
dec
sti
jb
aam
imul
sahf
sub
jle
push
jg
cmp
mov
mov
sub
ljmp
push
pushf
sbb
and
mov
in
mov
dec
sbb
mov
pop
ret
mov
sbb
dec
pop
inc
sarb
xlat
cli
test
int3
jo
jbe
je
out
or
pop
lret
inc
fcmovnb
movsb
rcrb
mov
push
iret
lds
push
jo
cmp
xchg
mov
adc
pop
inc
addr16
and
shl
arpl
add
add
sub
xchg
dec
inc
movups
roll
out
jg
imul
or
push
cltd
push
push
jo
push
sbb
dec
sub
loopne
out
in
sub
fsubrl
add
jg
mov
cmp
ja
into
xchg
je
inc
mov
inc
xchg
pop
rclb
mov
add
xchg
push
inc
xorb
push
scas
or
ret
int3
jmp
movsb
jns
add
out
in
fcmovbe
inc
xor
outsl
icebp
pop
jno
pop
out
xchg
loopne
adc
stc
scas
test
ss
decl
out
les
int3
mov
adc
xchg
mov
shlb
jmp
popf
mov
in
out
into
mov
dec
aas
test
mov
mov
push
fstpt
movsb
in
pop
xor
adc
divl
pop
dec
movsl
into
cmp
rcrb
lret
sbb
iret
stc
movsb
jg
mov
sub
mov
aad
xor
aam
sbb
push
mov
cmpsl
adc
push
push
pop
int3
popf
mov
aad
neg
loop
adc
push
sarb
out
dec
pop
leave
pop
push
into
call
movsl
or
lahf
mov
mov
mov
dec
rclb
popf
repz
arpl
push
jnp
cmp
int
mov
adc
push
mov
nop
clc
jbe
bound
aas
rclb
inc
std
jg
cmp
pushf
pop
sub
scas
stos
sub
dec
test
or
dec
mov
xchg
jle
fiadds
pop
xor
push
int3
insl
rcl
outsb
pushf
mov
and
fiaddl
bound
push
inc
mov
add
fidivl
int3
loope
mov
adc
fistl
push
dec
and
adcl
aam
movb
mov
dec
mov
add
dec
mov
or
push
out
lds
fs
shrl
and
cs
inc
jle
repnz
and
mov
and
rolb
cld
mull
sbb
jbe
movsl
lods
add
bswap
mov
outsb
cmp
sarl
mov
jno
sahf
sub
dec
in
sub
pop
gs
movsl
mov
pop
rcrl
xor
and
or
add
sbb
adc
stc
and
mov
popa
inc
das
or
push
mov
insb
xchg
fs
sti
fwait
hlt
stos
mov
adc
dec
jg
dec
movsb
cwtl
clc
xor
ret
js
ja
je
fimull
pop
fmul
or
or
lcall
incb
lds
fbld
rcrl
cmpsl
scas
dec
xchg
out
sub
pop
imulb
jb
test
enter
cmp
dec
add
sub
maskmovq
mull
sti
push
sbb
xor
xchg
cmp
pushf
mov
leave
cmp
adc
in
in
outsb
test
cmp
addr16
jno
cmp
sbb
push
aam
cmp
cld
insl
jb
mov
sub
nop
xchg
add
push
mov
sub
or
inc
in
add
mov
int
sub
sbb
pop
ficompl
shlb
imul
push
fmull
pop
popf
jecxz
jae
mov
stc
sub
jo
mov
andl
pop
cmp
cmp
icebp
jne
cltd
rorl
lcall
addl
mov
push
fdivs
mov
mov
jmp
push
adc
lock
aas
sub
outsb
push
popf
cmp
mov
mov
dec
mov
repz
int
xor
scas
roll
fucomi
mov
fldenv
icebp
or
mov
inc
in
fnstsw
pop
stc
scas
notl
mov
lret
test
fldcw
mov
adc
jns
push
les
mov
cmp
inc
int
mov
and
push
cmp
mov
lock
dec
ds
les
sub
dec
or
jge
push
mov
arpl
cmpsb
nop
stc
popf
ret
push
push
jg
mov
mov
push
test
inc
sbb
push
fcmovnb
enter
push
jp
leave
inc
das
cmpb
loopne
add
sub
mov
dec
push
shlb
pop
jge
inc
loope
jge
cli
rcll
es
push
pop
sti
addr16
mov
add
add
cmp
sub
aad
rcr
fidivs
scas
pop
mov
push
mov
pop
add
xlat
lock
push
into
out
ljmp
mov
stc
push
jmp
push
imul
out
sbb
outsl
in
ljmp
jns
jmp
js
in
es
jecxz
jmp
fcoml
repz
fimull
fmuls
adc
ret
xchg
loopne
fldcw
pop
xor
sub
mov
xor
adc
jbe
jb
push
scas
cld
mov
cmp
aad
push
loopne
test
pop
mov
mov
jno
lret
in
cmpsl
sub
sub
cltd
idivl
into
dec
mov
fcomps
mov
mov
divl
mov
pop
dec
push
ja
xor
jecxz
sub
xchg
jo
jmp
and
or
scas
jmp
xchg
aaa
lret
pusha
cmp
inc
dec
cmp
sbb
scas
jg
adc
push
insb
pop
xor
mov
dec
mov
push
xor
xchg
mov
movsl
cmp
jo
insb
push
dec
and
mov
out
xchg
push
call
push
dec
ljmp
mov
scas
mov
dec
ret
mov
repz
pushf
sti
lret
lock
stos
in
es
sub
cmpsl
ret
xchg
dec
mov
or
rorl
insb
and
mov
aaa
mov
dec
imul
insl
icebp
xor
ja
xchg
cs
dec
pop
and
jg
rcrb
dec
push
pop
xorl
cmc
pop
jp
fildll
dec
into
mov
loopne
mov
cmp
in
inc
dec
mov
cmp
mov
cmp
daa
mov
sub
adc
jge
cmp
fsubrs
bnd
arpl
int3
dec
push
pop
rcr
mov
or
ss
test
and
dec
or
sub
cmp
cli
sahf
dec
pop
jo
cs
mov
mov
pop
push
jp
stos
pushf
test
subl
push
xchg
cmp
jmp
rolb
ret
sti
fiaddl
popa
adc
imul
push
fucomp
xchg
sub
sbb
xchg
std
pushf
and
sub
scas
push
adc
and
clc
jnp
arpl
xorb
xor
and
jno
mov
mov
shll
adc
out
cli
fidivs
rcrl
pop
addr16
mov
mov
shll
je
jnp
leave
int
rcll
mov
mov
in
xchg
stc
daa
dec
push
mov
add
fs
aaa
pop
mov
pop
sbb
ror
inc
mov
mov
jbe
scas
je
sbbl
sbb
pop
sbb
mov
bound
insb
inc
and
sbbl
or
adc
jmp
fdivs
inc
and
movsl
mov
test
in
pop
add
sbb
nop
fnstcw
cld
jecxz
je
cmc
sbb
adc
fmull
jo
inc
icebp
lea
or
pop
sub
xchg
jmp
and
mov
rclb
inc
add
bound
jle
sbb
push
out
inc
lea
scas
es
ret
and
nop
sub
mov
aad
cmpsb
lock
and
call
pop
sub
les
xorb
stos
mov
int3
xchg
sub
lods
sbb
dec
or
sub
stc
sbb
in
inc
mov
jns
mov
xor
xchg
mov
fadd
and
jae
mov
cmp
mov
mov
mov
enter
icebp
and
cmp
aaa
stc
push
mov
repz
imul
imul
fwait
push
and
jge
push
add
push
rorl
push
pop
pop
imul
push
jg
xchg
fwait
call
cmp
xor
popa
jb
ja
xor
rolb
adc
mov
popa
leave
scas
push
mov
add
enter
mov
leave
loope
cmpb
adcb
mov
lods
sbb
pushf
nop
in
sbb
fstps
lock
cmpsl
xchg
xchg
adc
pop
or
je
xor
inc
mov
jle
enter
pop
pop
xchg
inc
push
jmp
mov
stos
mov
and
scas
inc
push
shr
je
in
mov
xchg
adc
js
cmp
addr16
and
mov
mov
lock
ljmp
paddb
mov
les
lret
shl
jbe
mov
pusha
adc
push
and
xor
sub
sbb
push
stc
ficoms
push
enter
adc
push
mov
mov
in
pushf
sbb
out
cmpb
scas
cmpsl
sub
inc
xor
and
xchg
divl
roll
lods
rolb
cmp
cmp
push
xchg
sarb
cld
test
ret
call
test
adc
imul
sbbl
pop
dec
leave
fisttpll
jae
and
mov
clc
scas
or
subb
jp
pusha
or
insl
dec
shlb
outsl
es
fdivrs
lret
fwait
pop
insb
xor
add
or
pop
add
neg
xchg
push
mov
adc
push
les
sti
xchg
fdivrl
adc
xchg
lods
popa
mov
incb
sub
aas
aas
xchg
xchg
push
sub
add
push
mov
sub
enter
jg
outsb
mov
stc
dec
rol
mov
pop
lods
lret
and
pop
xchg
loope
sbb
sub
lret
sbb
sar
sub
cs
xchg
xor
aas
inc
cmp
loop
dec
mov
in
pop
iret
add
push
mov
scas
dec
jne
xor
dec
movsb
mov
aad
lea
scas
dec
std
cltd
sub
add
mov
cmpsl
and
frstor
sub
xchg
and
mov
cmpsl
cmc
adc
fwait
sbb
cmp
loope
scas
rclb
xlat
or
stos
mov
fmull
xor
lcall
mov
das
or
cmp
inc
xor
dec
xchg
stos
xor
lock
imul
add
loope
inc
lods
dec
std
insl
repz
into
mov
in
jbe
lea
xor
aam
ja
test
xchg
sbb
jge
icebp
push
xor
pop
ret
push
mov
inc
cmp
cmc
andb
cmc
cmp
adc
in
xor
jns
out
mov
out
adc
xchg
push
dec
ds
pop
aas
cld
pop
in
sub
jp
or
inc
ficoms
ljmp
push
inc
ret
push
mov
psubusb
jne
and
addr16
jne
inc
xchg
jmp
or
popl
dec
add
mov
test
pop
std
or
mov
jns
rcl
xor
mov
sub
test
sahf
cli
jge
add
clc
mov
push
sti
mov
test
or
movsb
data16
xor
aam
jg
out
mov
in
sbb
inc
stc
add
lahf
adc
jbe
pop
pop
mov
or
test
stos
pop
enter
cmpsb
inc
stos
and
xor
gs
popa
mov
mov
pop
not
sti
out
cmp
cmpl
push
inc
repz
jbe
xor
xor
hlt
add
scas
and
and
dec
mov
int
lret
adcl
add
ds
mov
sbb
mov
cmp
mov
fmul
mov
ss
jnp
fucom
pop
daa
aam
pop
out
xchg
stos
popa
xchg
fwait
push
push
sbb
adc
push
clc
pop
mov
std
dec
adc
adc
fdivl
xchg
jge
mov
pop
xor
jmp
je
add
cmp
lcall
fsts
and
push
aam
and
sub
push
movsl
leave
andl
adc
xlat
lods
or
lds
pop
push
push
lahf
jne
cwtl
add
cld
mov
nop
or
js
sbb
or
inc
xor
gs
stos
cwtl
or
inc
es
jo
pop
mov
sbb
mov
add
or
movsl
flds
mov
das
pop
sbb
cmp
mov
fs
mov
adc
xchg
cs
icebp
mov
flds
and
xor
xor
sbbl
ret
mov
ljmp
fimull
lods
push
mov
cmpsb
fsub
sbb
lods
out
movsl
es
jmp
cmp
out
pop
xor
pop
out
mov
mov
mov
mov
inc
shlb
lahf
inc
push
jp
mov
inc
mov
pop
repnz
xchg
push
insb
jo
or
data16
mov
outsl
sbb
in
mov
lods
stos
nop
xor
movsl
out
je
test
jp
add
shll
arpl
gs
fcompl
mov
lds
mov
mov
mov
pop
in
inc
sbb
out
lret
inc
xchg
imul
pusha
and
mov
xchg
sbb
add
dec
xchg
aaa
stos
push
in
movl
outsb
je
mov
pop
cmc
or
pop
pop
mov
jg
mov
adc
add
push
std
xchg
jmp
fdivrl
add
cmp
add
and
ficoms
xor
cwtl
sub
outsl
pushf
or
pushf
add
aam
rorl
aad
mov
shrl
mov
pop
mov
scas
pop
dec
cmpsb
movsb
pop
enter
cmc
loop
add
dec
mov
add
and
repz
stos
cmp
pop
test
sub
push
jecxz
mov
sbb
xor
mov
out
push
mov
or
jecxz
fdiv
mov
sub
data16
push
mov
cmp
mov
inc
xor
cmc
xchg
xchg
fsubr
mov
xor
and
sub
les
cmp
mov
jbe
adc
out
push
xor
xor
push
cli
cmp
pushf
fldl2t
idivb
inc
aad
xchg
cmc
push
call
shlb
mov
aam
lret
cltd
or
jb
sbb
imul
bound
cmp
push
pop
push
outsl
or
push
outsl
leave
cmp
xor
and
popf
or
jae
sbb
sub
pop
push
out
adc
dec
jae
sti
inc
adc
les
cltd
pop
daa
in
inc
push
dec
mov
nop
adc
push
or
add
or
mov
pusha
cld
push
mov
imul
mov
push
mov
out
mov
f2xm1
imul
mov
push
fadds
adc
out
lds
sbb
jl
dec
mov
cltd
fwait
repz
jne
xlat
lods
push
adc
gs
push
jge
or
lods
out
leave
xlat
or
adc
bound
daa
jg
loop
aas
lret
pop
jmp
movsb
mov
movsl
sub
mov
movsl
cmp
enter
cmp
movsl
jl
xor
inc
cli
jb
push
adc
lret
pop
in
lods
test
stos
mov
fistpll
sub
pop
cmc
pop
outsb
fists
ffreep
loop
lret
cli
add
mov
lods
es
dec
cmp
xchg
cmp
jecxz
jmp
daa
jne
test
nop
fmulp
xor
cmpsl
mov
mov
jp
aas
inc
adc
push
and
call
mov
sbbb
call
or
cmp
aad
xor
mov
fwait
push
into
pop
lds
push
test
icebp
pushf
dec
outsb
xor
push
ja
sbb
pop
leave
cmp
push
out
jo
fcomi
mov
stos
mov
add
insl
out
in
dec
addl
dec
test
jns
mov
add
fiaddl
push
call
fisubrl
xchg
scas
aas
leave
lahf
mov
jmp
lea
inc
nop
and
adc
jbe
imul
sub
and
xor
aam
leave
sahf
je
hlt
adc
adc
push
lcall
icebp
xchg
sub
sbb
pop
push
add
outsb
push
or
dec
jb
pop
sub
xchg
stos
mov
push
stos
mov
add
mov
ss
aad
pop
cmc
mov
jg
icebp
adc
push
bts
xorl
pop
ljmp
jp
cmp
sub
icebp
mov
inc
mov
mov
test
pop
loopne
enter
pusha
mov
shl
out
lock
mov
jge
cli
add
std
xor
nop
scas
in
test
popa
cmp
jp
sub
cmp
call
push
pop
negb
movsl
stos
inc
inc
inc
xlat
adc
or
sbb
pop
push
fucomip
and
rorb
sbb
aaa
stos
bound
mov
add
rorb
inc
dec
outsb
xlat
addr16
les
rclb
push
lea
pop
mov
jae
pop
outsb
pop
shlb
lods
sbb
jae
add
mov
ret
stos
fucomp
sarb
jp
push
cmp
stos
mov
and
insl
roll
movsb
mov
mov
cwtl
imul
incl
test
pop
lods
mov
shlb
mov
aaa
insl
add
lret
mov
xor
pop
dec
push
pop
and
and
pushl
jle
es
fistpll
into
xchg
mov
dec
mov
xorb
cmp
push
add
lods
and
sub
push
nopl
add
mov
push
fs
aam
cld
scas
push
cltd
pop
in
cmp
fdivs
test
add
xchg
addr16
test
jo
test
xchg
ret
mov
arpl
pop
insl
jecxz
scas
test
sbb
adc
jne
cld
jns
pop
and
cmp
rcrb
adc
cli
adc
std
xchg
pop
nop
or
aad
xor
sub
aad
cmp
lahf
loopne
mov
jmp
lret
mov
fdivs
sub
inc
pop
inc
pushf
into
add
jl
inc
inc
lods
testl
popl
dec
pop
out
sbb
xchg
das
aad
lods
repz
lock
mov
mov
sub
stos
adc
and
xor
lock
mov
divl
imul
shlb
cmp
jmp
cmp
jno
add
dec
scas
jecxz
sub
negl
xchg
lods
adc
jecxz
les
arpl
pop
xor
imul
xor
add
aad
out
inc
or
xor
rcll
lret
xchg
lods
jge
call
lods
sti
loop
cmc
mov
mov
jle
cli
jp
push
dec
mov
mov
dec
adc
jb
inc
mov
les
jp
push
dec
aaa
pop
inc
sub
or
xchg
xchg
cli
cmpsl
lret
stos
xlat
mov
pop
push
jp
dec
aaa
pop
inc
sub
or
xchg
xchg
cli
cmpsl
lret
stos
xlat
mov
pop
push
cli
daa
lret
inc
sub
or
xchg
cli
cmpsl
lret
stos
xlat
mov
push
push
jp
dec
aaa
pop
inc
sub
or
xchg
xchg
push
or
and
sbb
gs
xor
add
popa
push
jno
scas
cmp
dec
or
jnp
pushl
stos
add
sti
push
jmp
sbb
sub
jnp
imul
xchg
jns
sub
stos
sub
jg
sub
xor
aaa
mov
mov
jp
pushf
and
rolb
cmpsb
outsb
push
sub
outsl
mov
ja
cmp
cli
cmc
pusha
dec
out
jbe
mov
jg
mov
loopne
mov
gs
into
jl
dec
mov
pushf
rep
fcomps
dec
mov
mov
xchg
sub
push
push
sbb
xor
inc
add
add
jmp
sbb
or
push
test
imul
call
inc
fs
pusha
mov
cmp
jne
lahf
dec
lock
fidivrl
cmp
xchg
add
fiadds
pmaddwd
popf
sbb
sarb
add
sti
push
dec
xlat
fnsave
sbb
dec
int
div
xor
shrl
shlb
add
negb
pop
xor
sub
push
lods
jae
arpl
lretw
daa
scas
aaa
push
cmp
jbe
aam
sarb
push
mov
mov
sub
fidivrl
imul
mov
movsl
cmp
dec
in
aad
lds
adc
lret
gs
push
jmp
sbb
sub
jnp
imul
xor
imul
adc
sub
push
adc
repz
lods
jne
and
aaa
cmpsb
fisttpl
cmpsl
loop
shll
cmp
ljmp
add
add
cmp
lret
adc
jge
jo
mov
sub
cmpsl
loope
lods
jbe
mov
rorb
ja
cwtl
push
in
push
pop
roll
cmp
mov
arpl
push
pop
lret
adc
scas
cmp
shlb
jae
push
sub
repz
sbb
insb
and
mov
mov
pop
push
and
insl
xchg
mov
add
sahf
jmp
data16
sub
pop
fidivs
pop
cmp
and
cmc
pop
nop
dec
ja
sbb
lret
stos
jb
pop
into
lahf
sti
movsb
add
testb
mov
and
jge
js
scas
es
mulb
shlb
cmpsl
sub
loope
and
push
cmpsb
subb
in
dec
and
rcrb
pop
add
push
cmc
xor
lock
jge
mov
pop
je
push
or
xchg
lret
fistpll
sahf
xor
lcall
mov
adc
mov
scas
gs
insb
push
mov
push
dec
push
sub
mov
adc
sub
cmp
xchg
scas
push
aas
pop
cltd
mov
jmp
cmc
inc
aas
stos
mov
inc
push
push
xor
fimuls
shrl
pusha
cmp
test
shrl
inc
repz
xor
cmp
divl
movsb
aaa
std
sarl
aas
cmc
inc
pop
fcoms
popf
mov
call
cmp
icebp
mov
push
ds
stos
addl
repnz
int
ja
sub
jae
mov
push
mov
jae
pop
das
pushf
scas
push
lahf
xchg
push
jns
lcall
and
inc
pushf
xor
sbb
sub
inc
sti
sub
push
lcall
push
movsl
outsl
dec
sbb
dec
and
rcrl
cmp
jbe
mov
int3
lods
add
mov
and
lds
mov
xor
jne
imul
insb
and
js
sbb
imul
sbb
fcomp
sub
lret
sbb
xchg
jmp
push
xchg
fyl2x
push
push
shll
outsl
scas
loopne
insb
aad
icebp
xchg
shll
dec
out
sbbb
jg
jbe
scas
xchg
pusha
js
xchg
dec
xor
gs
outsb
cmp
loopne
inc
fnsave
ljmp
push
mov
xor
rolb
gs
mov
push
xor
xor
inc
sub
inc
lods
stc
fs
pop
das
sub
stos
dec
sbb
repz
sub
mov
aad
repz
hlt
pushf
xchg
xor
mov
jae
and
pop
pop
pop
sbb
popa
fsubs
xor
mov
xor
push
dec
jmp
jge
pop
mov
scas
sbb
cltd
int3
pop
icebp
adc
lods
idivb
push
bnd
push
addr16
jg
lock
into
pop
cmp
mov
xchg
xchg
fcompl
stos
movsl
dec
lods
xor
jge
int3
lods
sbb
xchg
pop
pop
fdivrs
fisubl
pop
or
loope
dec
cli
jg
sbbl
pop
add
outsl
inc
sbb
leave
xor
mov
mov
mov
jmp
cld
out
scas
nop
lods
shl
lods
xlat
ja
and
scas
xchg
outsl
mov
jns
and
sti
or
cli
xchg
into
and
loop
mov
jge
mov
test
loop
mov
adc
pop
inc
vmovss
adc
mov
sub
cmc
into
mov
test
mov
cmpb
xchg
sbbl
aaa
rorb
jle
jle
jl
insl
and
enter
fistpl
pop
push
push
leave
push
mov
push
jg
inc
daa
lds
or
xor
inc
imul
dec
pop
repz
outsb
roll
xchg
pop
popf
mov
xchg
jg
sub
cmp
sub
mov
dec
mov
shl
subb
mov
mov
fs
cmpsb
adc
call
ret
jne
mov
leave
cmp
pushf
cmc
adc
sbb
pop
inc
mov
cmp
pop
nop
pop
loop
jns
pop
push
mov
fsubrl
mov
jne
mov
xorl
push
or
int
xchg
push
or
mov
icebp
cmc
push
mov
inc
dec
fcoml
push
dec
sbb
inc
dec
outsb
test
sub
push
ffreep
inc
push
pop
dec
push
outsl
orl
sub
addr16
inc
sbb
inc
pop
addr16
mov
add
adc
xchg
mov
popa
pusha
push
push
jns
adc
inc
mov
out
loopne
outsb
pusha
testb
mov
and
adc
popf
pop
mov
stc
inc
lret
inc
sbb
pop
je
sti
sbb
jge
into
outsb
mov
mov
repnz
fldt
and
xor
pop
out
popa
jg
pop
scas
xor
cmp
fsubp
xchg
xlat
cmpsb
push
inc
int3
shrb
or
add
xor
add
lods
push
out
adc
aad
jl
adc
xchg
and
dec
lds
lock
sub
cmp
lahf
and
daa
jl
stc
aam
push
fsubl
mov
addr16
add
sbb
mov
xor
imul
mov
mov
adc
push
fdivrs
xlat
sbb
cmpsb
pop
fs
mov
cmp
aas
sbb
and
push
mov
pop
push
xor
sub
mov
dec
push
daa
mov
outsl
xchg
lcall
mov
in
lods
movsl
andb
testb
cltd
cmp
stos
inc
and
dec
js
mov
ss
xchg
sbb
arpl
rcl
push
mov
inc
xor
pop
xchg
int
sbb
and
dec
xchg
xor
xchg
adc
and
in
push
inc
jge
sbb
mov
in
js
sub
call
jnp
adc
out
or
add
xor
or
loope
or
sub
or
jno
jno,pt
xchg
cmpsl
adc
scas
mov
push
sub
mov
sbb
cmpsl
inc
jno
add
jns
cmpsb
testl
xchg
push
fsub
pop
outsb
xchg
int
push
scas
push
bound
ljmp
aaa
jne
xchg
cwtl
adc
lcall
pop
je
dec
subb
or
xchg
cmp
jmp
in
push
movsb
arpl
mov
fnstcw
xchg
mov
enter
add
push
pop
xchg
xchg
pop
hlt
add
int3
push
stos
or
shlb
inc
push
gs
cmc
loope
jmp
xchg
insl
fsubs
adc
mov
lods
mov
cmpsb
push
xchg
or
sbb
xor
gs
adc
icebp
frstors
push
lock
mul
mov
loop
jno
in
adc
arpl
sbb
or
mov
loopne
fidivrl
fiadds
imul
scas
lret
inc
pop
sahf
dec
cmpsb
xchg
add
bound
data16
push
in
mov
lods
inc
shrl
scas
roll
insb
rep
xor
cmp
mov
sbb
pop
out
mov
cmp
out
in
shrb
fldt
cli
xor
sbb
xor
fs
popa
mov
fldz
jle
jg
daa
xor
movsl
push
inc
inc
adcb
loope
fcmovnu
cmp
cs
insl
xor
xchg
aad
sbb
cmp
lds
push
mov
fnstcw
mov
clc
xchg
js
mov
add
addb
push
adc
xchg
jno
filds
das
out
int
nop
pusha
lock
pop
dec
das
xor
repnz
jecxz
jns
sbb
push
cmp
or
pop
jge
xchg
vmwrite
or
xor
and
int
cmpsl
push
cltd
mov
adc
daa
cmp
dec
inc
dec
lds
inc
push
push
stc
es
and
mov
mov
mov
insb
add
fsubrl
imul
add
pop
outsl
mov
mov
mov
fdivrs
sub
enter
sbb
adc
and
icebp
test
xlat
mov
call
mov
cld
adc
aad
xor
dec
scas
stos
adc
dec
dec
inc
js
loopne
mov
jmp
icebp
cmp
jge
pop
pop
cltd
add
lods
lods
into
mov
ret
add
xchg
jbe
add
and
cli
roll
shll
movsb
addr16
pusha
xchg
fmull
call
ss
aaa
jns
testl
fildll
or
mov
and
xchg
leave
je
push
shlb
adc
or
xchg
jmp
mov
mov
lds
ret
inc
push
pop
outsl
outsl
sahf
andb
dec
dec
sub
mov
leave
jecxz
mov
cmp
arpl
cmp
add
mov
push
fnsave
adc
cwtl
add
repnz
inc
leave
mov
les
inc
out
and
sub
jg
add
rorl
jo
and
in
sbb
negl
ja
dec
xor
mov
lea
outsb
add
bound
sti
ljmp
test
imul
ljmp
sti
jmp
push
inc
cld
mov
xor
aad
cld
les
jg
push
and
inc
lret
dec
sbb
xor
pop
sub
cld
pop
iret
data16
push
std
pop
mov
call
movsl
lock
iret
jmp
jnp
sub
pop
fst
inc
inc
shl
jg
je
sbb
or
mov
push
insb
adc
lea
cmpl
not
clc
inc
sub
mov
cmp
inc
inc
jmp
pop
push
stc
xchg
aad
xorb
sbb
and
cmp
or
mov
lods
dec
into
fwait
lods
jnp
mov
jbe
adc
fcomp
jno
cs
inc
mov
jge
fdivrl
out
popa
bound
lods
subl
and
adc
cmc
adc
outsl
das
lods
stos
out
nop
inc
mov
call
or
xor
arpl
xchg
mov
mov
imul
xchg
int
leave
adc
add
inc
or
sub
fistpl
into
andl
nop
sub
mov
mov
mov
push
lret
shll
and
ljmp
cmp
sbb
dec
sahf
mov
cmp
jo
fs
push
and
cs
repz
mov
das
scas
mulb
mov
and
lock
mov
into
mov
fucomp
mov
fldl2e
jl
cmp
jge
int
sub
arpl
push
mov
test
sub
sbb
sbb
outsb
pop
xor
pop
adc
xor
xor
sub
ja
mov
mov
mov
out
push
scas
idivl
aam
pop
or
jne
adc
es
bswap
lods
sti
cmpl
mov
rcrb
mov
xchg
mov
add
inc
xor
dec
js
js
les
pop
or
and
cmp
repnz
lods
mov
mov
cmc
and
mov
mov
add
inc
mov
das
and
adc
push
stc
sbb
cmp
cs
pop
cli
fiaddl
pop
push
out
push
add
cwtl
xchg
or
inc
orb
out
mov
ret
or
into
and
push
inc
cli
cmp
ds
repnz
mov
mov
add
xchg
mov
pop
sub
mov
add
lret
jb
dec
sub
into
push
mov
add
mov
ret
out
rcrl
icebp
sub
mull
movsl
lods
fwait
ret
ss
notl
jbe
arpl
xchg
daa
adc
fs
ret
mov
cltd
add
into
sar
adcb
loop
push
test
mov
cli
call
mov
out
call
xchg
sub
mov
jg
pop
sbb
push
push
adc
cmp
mov
xchg
iret
fisubs
aas
jecxz
push
jecxz
fwait
add
leave
mov
std
out
lods
xchg
fscale
sbbb
lods
or
jge
outsl
xlat
adc
xor
aas
fwait
sarb
movsb
hlt
xchg
out
xor
cmpb
push
mov
lret
jo
sbb
pushf
push
out
sub
xor
repz
adc
push
jne
lahf
fnstenv
imul
sbb
push
push
fdiv
pop
mov
adc
jns
pop
adc
lret
sbb
popf
iret
cmp
and
rcll
push
jmp
push
sub
push
mov
scas
adc
test
lods
mov
sbb
mov
push
mov
insb
iret
jnp
xchg
lret
das
fildl
daa
inc
sbb
jo
or
mov
popf
faddl
ret
lods
scas
push
cli
inc
pop
xchg
iret
outsl
call
repz
mov
jp
jg
cld
adc
jecxz
add
hlt
cmp
pop
mov
push
ficoml
daa
jmp
stos
or
es
out
or
out
or
iret
push
fdivrs
pop
adc
cmp
in
in
xor
push
scas
or
mov
lods
into
and
in
and
adc
out
or
push
adc
pop
testl
mov
out
sub
popa
adc
add
jle
sub
sti
push
mov
and
sbb
jno
out
dec
or
xchg
mov
mov
mov
pop
add
jge
aad
orb
or
jmp
inc
mov
clc
stos
scas
pop
fadds
mov
mov
enter
inc
add
pusha
push
std
aad
jne
aaa
sub
sub
inc
outsl
outsl
fcompl
int
inc
pop
dec
pop
push
jecxz
sbb
or
ds
ret
shlb
jb
push
mov
leave
dec
roll
adc
sub
imul
adc
adc
pop
pop
fists
add
pop
jnp
push
scas
dec
stos
iret
xor
pop
divb
cs
cmp
jl
dec
paddsw
ljmp
cltd
mov
scas
xchg
jnp
mov
inc
aaa
andb
fsubp
daa
push
jae
in
mov
movsb
ss
test
sub
and
testb
pop
fbstp
jge
mov
movaps
mov
mov
cmp
lret
xor
sub
inc
test
hlt
mov
fsubl
fisttps
mov
movsl
mov
pop
outsl
imul
rcrl
cs
and
sbb
adcl
cmp
mov
cmpsl
mov
dec
adc
dec
ror
stos
int3
sub
jb
sub
xor
out
mov
cltd
repnz
jl
xor
add
and
popa
pop
push
movsb
popf
xlat
inc
inc
call
dec
dec
ljmp
stos
jo
in
push
aas
imul
and
pop
or
jle
xchg
push
call
call
dec
fwait
xchg
stc
inc
pop
loopne
mov
lret
jp
movsb
insl
fisubs
gs
fisubs
sub
outsl
xor
dec
out
and
and
push
das
in
sbb
orb
fisubrl
xchg
lahf
jbe
sub
std
mov
add
pop
imul
dec
xor
icebp
sub
push
imul
in
js
push
jae
pop
xor
pop
lods
mov
ss
cmp
cmp
flds
and
add
pop
inc
mov
inc
push
inc
push
sbb
mov
aaa
jl
mov
inc
andl
adc
outsb
or
pop
cmp
fsubrs
ficoms
cld
jns
cltd
dec
cmpsl
sbb
xchg
cmpsb
dec
sub
lahf
je
and
pushf
xchg
cs
jno
push
xchg
mov
ss
mov
sar
sub
push
dec
iret
cmp
mov
adc
adc
flds
inc
imul
fs
cmp
decl
out
call
outsl
out
push
jmp
xchg
push
pop
sbb
jo
into
jp
aam
shl
xchg
xor
xor
or
jnp
or
push
xchg
xlat
pop
in
add
cld
pop
pop
dec
and
mov
cwtl
or
imul
mov
aad
leave
add
jle
fcompl
sti
ffree
lds
and
add
xor
fdivr
in
in
call
rcll
bound
push
test
aaa
or
xor
aas
jmp
lds
mov
cli
add
daa
adc
imul
or
cmpsb
add
inc
outsb
out
scas
pushf
dec
inc
jns
enter
mov
mov
sahf
xchg
test
adc
jp
aad
mov
in
lds
jle
jl
push
inc
jo
cmp
push
lea
lods
inc
ror
and
ret
cmp
lahf
mov
xchg
xchg
inc
lods
shr
stc
fldl
adc
push
repz
ljmp
xchg
mov
jno
mov
negb
inc
push
jp
and
mov
push
sub
xchg
data16
jp
cli
jg
mov
loop
xlat
jo
into
movsb
aam
adc
xchg
pop
in
cmc
adc
scas
mov
dec
shll
mov
dec
xchg
addr16
cli
or
icebp
pusha
ja
jge
nop
push
arpl
mov
push
sub
int3
es
jmp
add
out
gs
ds
mov
add
push
pusha
adcb
ljmp
mov
mov
cli
daa
push
adc
jnp
mov
lcall
mov
dec
jecxz
in
dec
outsl
das
push
adc
shrd
push
stos
lret
mov
jns
mov
repnz
or
leave
sub
data16
mov
fadds
lcall
mov
jae
push
jb
xchg
add
dec
add
leave
lods
push
dec
shll
insl
movsl
xchg
pusha
mov
sub
dec
sub
outsl
popf
cmp
movsb
sub
daa
lods
shll
xor
test
pop
jl
clc
pcmpeqd
lea
ja
jecxz
into
popa
shl
add
cmp
mov
sub
pop
setl
jns
dec
aam
into
push
sbbl
xor
pushw
dec
mov
hlt
cmp
xchg
sbb
add
xor
iret
in
fwait
shll
mov
mov
mov
mov
fistpl
xor
sub
out
out
xor
cwtl
mov
cmpsb
fsts
add
xor
ljmp
cmp
fsub
or
sub
pop
xchg
and
pushf
fidivrs
lods
test
dec
push
jb
movsb
imull
loop
inc
mov
push
push
sub
mov
mov
pop
icebp
lods
xlat
xchg
aad
int3
or
fstpt
xor
cmc
hlt
mov
loop
push
lcall
sbb
in
mov
aam
insb
in
popa
ret
lcall
loopne
test
sbb
sbb
enter
call
cmp
mov
outsl
pop
in
mov
and
in
add
dec
xor
adc
ror
and
push
sbb
dec
sti
dec
movsl
cmc
pop
std
popa
cmp
push
push
push
mov
xor
sbb
es
inc
push
cmp
mov
aaa
add
ja
scas
imul
fmuls
in
mov
stos
jbe
pushf
pop
jns
xchg
orb
cld
ret
mov
xor
call
movsl
fdivrs
push
jge
and
data16
insb
stos
cmp
sahf
mov
ret
sub
daa
rorl
mov
push
or
andb
fcomps
jp
mov
sub
out
jp
out
jb
sub
bound
mov
dec
push
sahf
pop
int3
push
outsb
jb
sub
cmp
les
dec
xchg
and
dec
shrl
in
mov
push
adc
push
stos
sbb
enter
push
gs
cld
lahf
shll
pop
pop
jne
clc
mov
sbb
push
xchg
jne
xchg
subb
inc
jb
arpl
jge
lret
dec
scas
in
dec
inc
xlat
test
jecxz
fimull
jp
push
andl
jge
sbb
mov
outsb
fwait
mov
inc
push
xor
fnstenv
xchg
xchg
std
stos
jae
dec
cmc
jecxz
xchg
cmp
stos
in
mov
cmp
loop
daa
arpl
mov
pushl
stos
mov
imul
mov
aaa
push
iret
setno
or
xchg
pop
in
in
scas
xor
lds
out
repnz
xchg
jo
mov
add
rorl
sbb
add
sti
push
jmp
sbb
sub
jnp
imul
xor
stos
add
sti
push
jmp
sbb
sub
jnp
imul
xor
add
lret
push
sti
push
sub
mov
mov
pop
icebp
pop
in
faddl
shl
mov
jne
gs
aad
test
dec
hlt
setno
ret
popf
test
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
int
fnstsw
in
paddw
fmuls
mov
dec
scas
pop
mov
or
iret
cmp
aas
in
paddw
lea
rep
dec
mov
lahf
insl
jge
or
cmp
aas
in
cmpsl
std
sbb
lods
mov
jle
sbb
mov
push
fistpll
jp
dec
sbbb
inc
push
xchg
dec
jp
adcb
jb
mov
and
mov
push
andnps
xchg
out
pop
out
sbb
push
xor
mov
xchg
dec
inc
addr16
dec
cmp
clc
adc
xchg
ljmp
out
cli
das
cs
cli
cmpsl
in
bound
hlt
mov
mov
mov
sbb
mov
pop
add
push
inc
ss
dec
cld
push
scas
loopne
negb
rcr
cmp
adc
add
or
lods
mov
popf
jo
xchg
out
dec
add
iret
aas
pop
push
das
in
mov
adc
lods
xchg
mov
jns
lahf
jge
or
iret
cmp
aas
stos
dec
mov
adc
cmp
cmp
sti
cmp
mov
dec
mov
mov
cmp
add
dec
call
lret
adc
jge
cli
mov
push
mov
jns
js
pop
cwtl
jl
or
pop
dec
scas
pop
mov
or
iret
cmp
aas
in
paddw
lea
jg
dec
mov
mov
or
iret
cmp
call
pop
negb
mov
ds
mov
pop
roll
inc
jle
dec
daa
add
push
in
mov
push
mov
loop
cwtl
repnz
das
mov
fwait
ss
xchg
ss
in
lods
cmp
pop
xchg
add
xorl
add
and
pop
xchg
out
xchg
xchg
fidivl
mov
pop
popf
out
fimull
outsb
ret
xchg
lods
sub
scas
fisubs
adc
rorb
xor
inc
int3
ficomps
inc
add
pop
xor
mov
jbe
aam
outsl
add
insb
fwait
das
sbb
sbb
pop
xlat
lock
sub
pop
xor
push
sbb
push
into
and
pop
mov
loopne
dec
adc
lcall
inc
daa
fsubrl
int
cli
pop
lea
lret
and
jnp
enter
jbe
pop
inc
aas
adc
insb
xchg
cmp
enter
mov
inc
mov
lret
aas
sub
mov
pop
scas
push
iret
or
cmc
pop
sbb
mov
pop
xor
rcrl
pop
fucomip
xchg
mov
dec
imulb
sbb
pop
imul
test
popa
lret
and
xlat
jbe
aam
adc
stos
lret
push
hlt
sbb
xor
call
xchg
cltd
sbb
add
cmc
outsb
pop
je
push
or
push
je
adc
fildl
in
imulb
pop
ret
xor
xlat
lods
clc
iret
sarb
lea
faddl
adc
ficompl
mov
mov
rcl
adc
and
or
pop
ds
or
and
cwtl
mov
push
adc
mov
adc
scas
cmpsl
lock
pop
in
xlat
cmp
clc
cmp
insl
push
pushf
sub
call
sbb
rcl
pop
xchg
inc
int3
mov
pusha
andl
scas
jne
imul
enter
cmp
cmp
mov
lret
enter
aas
mov
cmp
addr16
mov
popf
movsb
mov
insl
push
xor
push
insb
into
popa
cmp
imul
cld
and
push
enter
mov
movsl
or
pop
cmc
xchg
or
jle
sbb
mov
lahf
add
inc
pop
sbb
jecxz
outsl
and
jecxz
sbb
dec
dec
mov
inc
mov
addr16
rorb
mov
xchg
fwait
int
or
add
or
adcl
xlat
out
test
push
inc
out
and
lahf
jmp
lods
outsb
mov
cld
push
xchg
sub
mov
sbbb
sti
jb
mov
ret
mov
sub
or
and
in
xchg
fcomps
popf
popf
outsl
inc
pop
out
rcrl
loopne
lret
daa
jp
mov
cwtl
mov
dec
test
cwtl
roll
ja
sahf
fsubrp
lahf
lcall
movsb
out
dec
jo
cmp
pop
mov
mov
out
lahf
inc
mov
shrl
push
movsl
loopne
fs
out
popf
lods
sbb
sbb
fs
repz
sub
sti
loop
sarb
shlb
stos
shll
pavgw
shrb
out
shll
stc
push
test
int3
lods
jns
add
sub
mov
jb
rorl
pop
fdivl
sub
adc
dec
jp
arpl
out
adc
add
push
add
enter
imull
xchg
ret
ret
cmpps
mov
jmp
push
cmp
int3
movsb
loope
cmp
ficoml
xchg
pop
xor
pop
inc
lea
jbe
pop
mov
int
sub
adc
push
loopne
mov
jmp
jmp
jne
shll
cmp
sub
cli
xchg
call
xchg
or
sarl
icebp
sub
mov
or
or
and
add
mov
lahf
and
xor
sub
sub
xchg
and
or
xor
push
pop
in
adc
mov
imul
mov
popa
into
dec
ss
rol
gs
jae
mov
fs
mov
adc
cmp
sub
inc
xlat
add
sar
pop
adc
dec
jl
mov
fdivr
int3
sbb
adc
dec
ds
pop
test
stc
sti
fldcw
insl
cmp
dec
int3
fimull
movb
arpl
insb
in
adc
addr16
mov
rol
dec
pop
pop
stos
fwait
mov
sub
push
cmpsl
push
scas
xchg
mov
pusha
push
ficoms
and
cmp
movsl
hlt
push
xchg
add
or
mov
jmp
push
jge
or
and
cmp
xchg
push
pop
shll
sbb
or
sub
add
adc
repnz
cmp
rcl
xchg
push
push
pop
jnp
dec
dec
sarl
mov
mov
out
test
sahf
aam
sbb
fdivs
decl
shr
sbbl
cmp
jo
jno
mov
test
test
cmp
xchg
pop
adc
inc
out
iret
imul
fdivr
sbb
jbe
mov
fsubs
cmp
pop
fidivl
xorl
cltd
cld
xchg
pop
roll
idivb
add
lcall
lahf
ljmp
inc
cltd
and
sti
inc
mov
mov
sbb
ffreep
pop
cs
ja
mov
lret
mov
xchg
shll
mov
inc
mov
jecxz
and
jne
and
mov
ret
or
stos
mov
cmp
subb
jne
shlb
or
scas
lret
cmpsb
push
cmp
lret
jnp
pop
daa
dec
sbb
mov
inc
rep
mov
xor
lcall
cmpsl
int
adc
pop
push
jae
lock
push
test
inc
fcomps
ljmp
mov
mov
call
insb
mov
and
pop
pusha
jne
add
ficompl
nop
arpl
mov
fbstp
in
dec
push
jg
or
insb
adc
movsl
addb
ficompl
pshufw
arpl
scas
sub
xor
push
or
lret
clc
je
cmp
and
insb
mov
test
jns
aad
inc
repnz
into
lods
insl
mov
jle
pusha
out
aas
int
jnp
pop
inc
fldt
dec
xchg
or
mov
pop
fiadds
test
loope
lret
sub
xor
or
repz
rorl
sbb
jnp
mov
shrl
ret
rorl
add
test
mov
cmp
jno
lds
adc
sti
cli
ret
imul
ja
jo
dec
stos
js
or
cmp
nop
int3
mov
push
pop
lcall
push
xor
and
mov
pop
xchg
mov
fnsave
ffreep
push
pop
inc
mov
mov
jp
ljmp
in
inc
andl
loope
ljmp
mov
outsl
mov
mov
adc
mov
add
xor
iret
fbstp
push
pop
fucomi
xor
pop
fcomps
xchg
rclb
ja
or
iret
xor
add
aaa
or
out
or
sub
rclb
shrb
lods
faddl
loop
das
mov
mov
dec
xchg
mov
mov
pop
inc
fistpl
mov
addr16
fcomps
repnz
into
mov
sahf
imulb
es
int3
add
sbb
mov
cmp
gs
adc
cwtl
test
gs
mov
sti
jge
push
imul
les
out
pusha
cs
aaa
lods
sbb
adc
push
daa
stc
dec
lret
pop
pusha
xlat
inc
or
jmp
ss
fdivr
and
inc
stos
scas
imul
jmp
or
add
cli
icebp
aaa
js
mov
dec
jg
adc
pop
inc
shrl
xchg
fidivl
gs
pop
mov
jno
loop
lret
ret
sub
out
push
dec
stos
cli
lock
cmp
and
cld
cmp
fstps
jno
hlt
jbe
push
addr16
fwait
add
test
dec
fisubl
mov
mov
pop
inc
or
jmp
bound
aam
mov
jle
inc
stc
aaa
and
stos
in
push
push
int
les
out
lock
out
and
and
pop
icebp
inc
in
divl
xchg
xor
jns
ljmp
cmp
xchg
dec
dec
push
sub
jecxz
icebp
adc
leave
out
lods
adc
push
jl
imul
and
imul
enter
jmp
nop
jbe
sub
adc
mov
fcompl
out
xchg
inc
in
add
movsb
or
or
add
push
test
jle
int3
ja
dec
hlt
imul
js
or
adc
cli
aas
and
jae
data16
mov
adc
stos
mov
mov
sbb
cs
insl
pop
inc
mov
inc
push
mov
add
jb
adc
andb
jge
mov
or
xor
cmp
push
push
push
xchg
lret
and
fstl
xor
pop
jmp
mov
or
scas
pop
mov
xor
fdivrs
gs
jge
inc
into
call
ljmp
pop
sbbb
xchg
jle
xor
xlat
popf
lods
fbld
divl
mov
mov
test
push
lock
lcall
inc
mov
pop
inc
addr16
arpl
gs
pop
and
sbb
es
jne
push
subl
repnz
adcl
mov
mov
jmp
nop
sub
push
mov
xor
mov
lods
fneni(8087
push
outsl
mov
push
ljmp
push
in
call
addb
push
pop
mov
sub
fs
pop
or
bound
aas
xchg
jge
cmp
lods
mov
aaa
xor
push
jb
adc
xchg
pop
inc
jg
push
in
sahf
jno
sahf
mov
les
cmc
dec
xor
loopne
and
pop
pop
aas
shlb
scas
push
ret
sahf
inc
insb
jp
mov
jns
dec
jbe
cld
gs
jg
adc
sub
pop
stos
mov
sub
inc
cld
push
add
daa
frstor
pop
mov
add
ret
cmp
lahf
jb
les
mov
inc
pushf
and
xorl
arpl
out
outsl
popf
jne,pn
and
xor
sbb
sbb
inc
cmp
aas
dec
dec
test
xchg
sbb
decb
sub
jb
enter
int3
repz
out
fst
fsub
rcll
xchg
or
ds
jmp
pop
pop
pop
sub
pop
cmp
mov
pop
fbld
add
mov
movsl
lock
cmc
and
icebp
nop
push
in
xchg
xorl
inc
add
push
mov
ret
xchg
pop
cs
sub
out
cmp
addr16
pop
sarl
mov
dec
lret
int3
jns
jae
decl
xor
and
xchg
fs
shrb
sti
push
ljmp
push
mov
call
adc
pop
out
pushw
add
mov
mov
jae
in
les
aad
scas
pop
xchg
inc
or
dec
jo
aaa
stos
mov
xor
sbb
adc
xchg
and
lahf
shrl
lea
xor
push
les
int3
lods
jecxz
xor
iret
ds
js
movsl
jnp,pt
sti
jg
lret
call
inc
mov
bound
cmp
sbb
push
fs
pop
mov
fisttpl
pop
xor
inc
adc
jno
push
mov
out
jbe
sarb
mov
pop
mov
lods
mov
movsb
cmp
pop
inc
scas
xchg
orl
sarl
mov
jmp
mov
in
and
loop
mov
jmp
cmp
jne
out
loopne
aad
or
add
sbb
ja
inc
subps
int
movsb
mov
mov
jo
adc
or
lea
notl
repnz
sbb
sub
or
push
jae
and
hlt
insb
out
jge
lds
stos
pop
sbb
int3
add
ljmp
cld
insb
fsubs
cld
aas
sub
adc
cmc
and
sub
ss
mov
sahf
mov
pop
imul
push
mov
incl
ljmp
mov
pop
jnp
gs
xorl
or
jne
push
jne
dec
add
call
xchg
push
mov
xchg
jmp
xchg
mov
iret
pop
pop
push
pusha
ds
xchg
fs
iret
dec
xor
sbb
aaa
fs
mov
hlt
fcoml
fimull
sti
pop
ljmp
aas
addr16
cwtl
mov
or
mov
dec
inc
aaa
jbe
shll
pop
aas
push
cmp
mov
nop
enter
mov
xchg
cli
outsl
enter
sbb
cs
fcomip
mov
dec
lds
sarl
xor
jle
sub
and
insl
xchg
dec
jb
push
in
test
mov
sbb
enter
test
stos
jle
dec
jge
pop
out
into
add
test
pop
cwtl
mov
lret
add
icebp
fstl
sbb
pusha
or
test
push
in
push
xor
sbb
add
repz
cltd
lret
je
aas
rolb
ja
xchg
fistps
cwtl
popf
push
insb
and
dec
dec
fcmovnb
push
out
js
fadds
popf
mov
mov
inc
pop
xchg
lods
ljmp
shlb
repz
push
es
adc
hlt
adc
dec
hlt
ja
pop
xor
cs
push
fwait
pop
xorl
push
std
in
sub
pusha
adc
mov
setp
outsb
test
insb
es
inc
add
push
add
ret
jo
mov
pop
push
nop
add
mov
rorb
inc
es
outsb
leave
mov
int
sbb
aas
das
shrb
cmc
imul
push
cmp
xchg
pop
lret
movsb
test
pop
out
dec
cmpsl
ret
pusha
mov
testb
jns
icebp
cs
jmp
xchg
repz
bound
jecxz
rclb
imul
dec
test
out
jnp
add
ss
inc
fldl
rorl
push
pop
out
inc
out
aas
dec
jbe
push
mov
and
sahf
xchg
mov
xchg
scas
jle
leave
shr
xlat
out
push
mov
cmp
add
or
icebp
inc
insl
in
push
jecxz
dec
das
pushf
into
jge
push
sti
stos
cltd
jge
adc
mov
mov
mov
fstps
lahf
aad
int
stos
xor
push
inc
cs
jl
js
sarb
pop
leave
fnstsw
fisttpll
jmp
fnstsw
add
cs
loope
mov
lods
lock
cli
cmp
scas
xor
test
push
cld
dec
sahf
sti
sahf
add
xor
lods
sub
es
push
fiadds
adc
mov
imul
inc
xchg
out
out
push
loope
mov
cli
sub
lea
jo
mov
mov
push
clc
sub
aam
in
sbb
popa
insb
jg
mov
ret
sbb
lods
pop
sbb
dec
add
push
sbb
jp
in
mov
and
inc
xor
and
shrb
enter
lret
cmp
js
add
pop
invd
mov
aas
fs
test
fsub
inc
dec
repz
pop
out
imul
test
jns
rorl
adc
push
leave
sbb
out
out
inc
cwtl
test
mov
mov
mov
in
adc
and
dec
mov
rcll
pop
gs
push
loop
jp
push
je
sbb
call
mov
mov
cmp
cmpb
pop
repz
push
and
dec
faddl
xchg
popa
out
push
xchg
sub
mov
ds
in
mov
hlt
push
rclb
add
insb
insb
test
adc
call
sbb
lods
aaa
mov
xchg
pop
out
xchg
stos
in
std
sbb
sub
inc
leave
cld
push
xchg
sbb
push
xchg
lea
push
out
sub
adc
xchg
or
out
outsb
fists
imul
mov
aam
sbb
sub
mov
sub
mov
cmp
sub
pop
loope
sub
dec
fwait
inc
mov
sub
pop
inc
cwtl
out
subb
aam
lret
sub
jnp
xchg
pop
imul
or
sarb
dec
adcl
pop
pushw
mov
sub
push
test
lea
mov
pop
or
loop
sub
mov
fiadds
loopne
adc
xchg
movsl
lret
mov
in
in
test
ret
cs
xchg
cmpsl
dec
sarl
sbb
aad
push
outsb
xlat
cmpsl
test
mov
mov
aaa
adc
pop
sti
mov
jl
repnz
hlt
xchg
sub
push
mov
mov
sbb
mov
aad
dec
rclb
call
notl
gs
cs
add
mov
int3
pop
jg
sub
arpl
inc
mov
lret
mov
mov
mov
mov
cmp
and
xchg
and
ljmp
fmuls
mov
pop
xor
mov
or
or
jp
loopne
inc
mov
fldcw
lahf
sbb
loope
cld
ja
jbe
sub
pop
sbb
bnd
leave
xor
insl
test
mov
jmp
xlat
mov
mov
ficoms
jae
std
das
dec
dec
lret
out
daa
vmread
dec
mov
jecxz
popa
ret
inc
xchg
jne
cli
jnp
xchg
imul
cmp
out
mov
jg
mov
cmc
xchg
jo
mov
out
or
sbb
fcompl
mov
sbb
movsb
mov
rclb
cmp
mov
dec
xor
add
push
cli
aad
cmp
cmpsb
mov
inc
add
mov
push
dec
out
js
sub
add
std
mov
mov
insl
lret
xchg
sbb
cmp
cmp
inc
or
je
mov
push
not
mov
cmp
mov
mov
add
jno
notb
fiaddl
xchg
dec
push
mov
popf
movsb
fcoml
data16
test
xchg
mov
jns
ficoml
mov
psubd
int
jbe
ljmp
mov
mov
enter
adc
add
aaa
test
mov
jo
mov
fbstp
outsl
in
ljmp
iret
hlt
aad
push
sbb
fbstp
and
popf
cmp
add
pop
cmp
or
out
test
cmpsl
cmpsl
scas
aad
cmpsb
loope
and
mov
jno
lods
mov
xor
neg
sti
test
mov
adc
sub
pop
push
and
test
push
test
cmp
mov
push
rcrl
jg
lret
outsb
jge
cltd
push
push
test
xor
subl
jnp
testb
adc
xchg
fstp
pushf
add
test
mov
xor
xor
dec
mov
rorl
or
mov
or
mov
sub
cli
loop
adc
icebp
jg
pop
jge
in
dec
test
ret
loop
sbb
cwtl
cli
and
shl
inc
ror
repnz
pop
and
mov
dec
push
xor
or
mov
xchg
inc
pop
push
ss
arpl
and
and
cmpsb
adc
mov
lret
outsl
jne
scas
in
xchg
inc
loopne
in
aaa
mov
lods
sub
dec
cltd
cmp
es
inc
jmp
fisubl
push
mov
cmpsl
dec
or
mov
xor
lahf
ja
cmpl
xor
cwtl
pop
mov
mov
mov
and
adc
lret
or
test
dec
pop
adc
push
das
inc
mov
sub
out
dec
and
xchg
mov
mov
mov
push
mov
mov
dec
cmp
sbbl
andl
scas
into
pop
fs
xchg
addr16
xchg
in
lahf
or
mov
lret
fcoms
cltd
sti
movsb
mov
hlt
and
es
adc
das
shll
cmp
in
dec
testb
sub
cmc
and
cmovae
leave
or
imul
pop
xchg
fldenv
movsb
inc
cmpsl
adcl
loope
sub
add
inc
mov
push
inc
lahf
rorl
std
in
mov
mov
sub
sbb
push
mov
pop
mov
add
arpl
insb
adc
or
lret
dec
mov
pop
mov
ds
adc
sbb
or
imul
mov
pop
loopne
cmp
cmpsb
or
jbe
in
inc
ret
inc
pop
out
imulb
cmp
js
dec
stos
stos
in
mov
lret
aaa
jae
add
add
lock
fildl
insb
aas
shlb
pop
lea
jg
dec
mov
mov
or
iret
cmp
aas
in
paddw
lea
jg
dec
mov
mov
or
iret
cmp
ja
ja
pop
lea
xlat
lods
dec
mov
mov
or
out
cmp
aas
in
paddw
lea
jg
iret
cmp
adc
jp
xchg
add
xor
and
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
insb
fwait
jl
dec
mov
push
jmp
xchg
adc
in
movsl
cld
add
cmp
sub
pushf
imul
dec
mov
cmp
or
sbb
cld
sbb
or
cmp
sub
pushf
imul
mov
stos
xor
sti
sbb
cmc
sbb
sub
sbb
lret
sbb
xlat
adc
dec
call
cmp
int
fucomi
push
pop
testl
mov
scas
in
fwait
sbbl
lret
cmp
mov
popa
imul
and
cld
dec
lods
adc
orb
sbb
mov
sub
cmp
inc
ja
negb
test
cmp
or
std
hlt
stc
std
and
pop
push
pushf
imul
je
inc
mov
and
stos
in
jmp
in
push
int
sub
push
or
test
pushf
popf
or
ds
pushl
bound
sbb
mov
mov
jmp
jnp
xchg
movsl
fwait
mov
stos
cmp
sub
or
add
or
cmp
sub
pushf
sub
sub
sub
pop
pushf
pop
mov
in
imul
lods
das
or
push
add
sbb
enter
mov
dec
lds
pop
popf
jns
xlat
push
clc
aas
or
adc
and
xor
fs
sbb
in
sbb
or
cmp
sub
pushf
imul
dec
mov
cmp
or
sbb
in
sbb
or
cmp
sub
pushf
imul
repz
insb
inc
cmp
ret
xchg
xchg
sbb
stos
jno
rol
aam
cmp
adc
cmp
pop
cmpb
sub
shl
in
xchg
inc
roll
pop
sbb
jp
xor
mov
jmp
mov
add
out
div
ficoml
ds
push
sbb
pop
cmp
push
jg
div
push
into
data16
in
cmpsl
jl
or
fmuls
xchg
mov
in
mov
mov
xchg
mov
das
repnz
sbb
xchg
out
fldcw
cwtl
jns
test
fldcw
adcb
outsb
repnz
ret
add
adc
mov
hlt
les
adc
dec
xchg
aaa
xchg
fisubrs
int3
mov
out
jns
push
gs
adc
es
icebp
sbb
out
mov
xor
or
jl
xlat
std
je
repnz
and
jne
cmp
shl
push
push
and
mov
pop
sahf
idiv
sub
push
incl
xor
cmpsb
shll
loop
xlat
pop
jnp
dec
out
add
cltd
xchg
cs
cmpsl
rcrl
xchg
add
dec
es
popa
fwait
cmp
pop
notl
and
and
sbb
push
dec
jle
repnz
cs
loope
fisubrs
xor
jo
xchg
mov
jbe
sbb
les
fldenv
loope
leave
idivl
cwtl
mov
inc
cmp
mov
mov
repz
cmp
mov
inc
xor
out
jl
fmulp
mov
jmp
aaa
rolb
pop
ljmp
std
imul
mov
push
pop
sahf
dec
lret
lock
in
or
cmp
rclb
sbb
and
inc
dec
lcall
movsl
mov
mov
lret
outsb
or
xchg
xor
push
xchg
rol
popf
or
mov
add
jo
mov
aaa
jp
ret
push
push
add
lret
sar
or
pop
subl
insl
sbb
loop
jmp
out
xor
inc
sub
pop
fcomps
scas
adc
out
stos
inc
arpl
inc
jne
jo
ja
push
push
mov
xor
xchg
out
adc
dec
adc
mov
je
sbb
mov
into
mov
js
push
scas
cmc
xor
and
loopne
xor
inc
push
mov
push
shrl
addb
lea
in
arpl
jmp
inc
pop
add
xor
inc
iret
adc
enter
daa
cli
addr16
push
jmp
test
and
aas
in
add
ss
hlt
test
into
leave
dec
adc
inc
inc
mov
dec
repz
inc
nop
addr16
or
xchg
fmul
movsb
mov
jbe
push
pop
int
mov
mov
mov
mov
jno
pop
inc
insb
or
cld
stc
jl
in
xchg
jmp
jne
sbb
decb
cld
lahf
pop
and
out
xlat
or
shll
push
es
ljmp
out
lret
pop
inc
inc
insl
or
add
jno
std
and
adc
imul
dec
aas
mov
test
outsl
mov
fs
lea
cmp
aas
stos
adc
outsb
mov
testl
pop
jmp
pop
push
aas
sub
xchg
das
xor
loopne
frstor
arpl
rcr
popf
mov
xchg
adc
pop
les
idiv
xor
xor
and
std
loopne
push
xor
mov
aad
test
lock
dec
push
nop
jp
push
jg
mov
out
loope
lods
jno
inc
insl
sub
or
loopne
hlt
sbb
mov
inc
push
int3
gs
fidivs
jbe
push
cmp
loopne
xor
jno
testb
lea
ja
leave
cmp
lock
gs
push
lahf
inc
les
add
cmp
and
sub
mov
notl
addr16
mov
xchg
mull
je
mov
out
pushf
in
inc
mov
dec
and
sbb
push
rclb
insl
cld
and
or
scas
sahf
lcall
loopne
loopne
xor
jo
int3
out
jb
pop
or
adc
lock
popf
dec
gs
xor
pushf
push
sub
sbbl
add
jl
jle
sub
je
add
mov
sub
jp
flds
add
inc
lods
cltd
test
jle
add
or
sbb
sub
mov
jne
loope
xor
ja
int3
xchg
mov
mov
repz
mov
inc
sti
ljmp
add
cld
sub
cmpsb
dec
insl
and
movsb
pusha
pop
ds
shrb
outsb
jo
mov
lcall
insb
aas
xchg
insl
pop
mov
int
sub
xor
ja
pop
flds
movsl
mov
and
mov
sbb
lret
push
lahf
xchg
pop
fwait
insb
inc
clc
stc
mov
push
or
call
divb
ret
sbb
orl
jbe
je
jmp
inc
xor
orl
cltd
in
mov
sbb
or
push
andb
dec
stos
ja
mov
add
jecxz
jle
das
mov
add
add
sbb
dec
and
or
jp
sub
sti
popa
sub
sahf
sbb
jno
mov
ljmp
sbb
pop
xchg
xchg
rcrb
lret
fidivrl
fistps
mov
cli
pop
mov
inc
ljmp
lock
aaa
push
inc
mov
or
mov
mov
or
xchg
and
jmp
mov
dec
adc
pop
pop
dec
call
push
xor
and
mov
push
outsb
pop
into
or
gs
inc
cmc
xchg
ds
pushf
insl
xchg
orl
mov
insl
dec
xchg
push
pop
dec
jecxz
mov
jne
sub
mov
push
dec
jmp
sub
and
imul
scas
fwait
jle
add
jl
test
push
sub
lcall
mov
lret
push
int
lahf
pop
push
cwtl
int
pop
mov
sub
into
xchg
out
ds
lret
jle
subl
fsubp
mov
and
add
or
cmp
and
inc
adc
push
mov
test
xlat
std
sti
loope
cltd
insl
aam
mov
adc
jo
xchg
icebp
sbb
sub
inc
sub
fdivs
jne
xor
jo
sub
and
movsl
cmp
mov
mov
dec
dec
dec
repnz
or
test
push
cs
push
sub
imul
jl
inc
cmpsl
scas
inc
in
ss
mov
mov
push
sub
repnz
loopne
pop
sub
negl
mov
xchg
sub
incl
jl
lock
xchg
pop
adc
fucom
shll
xchg
jmp
mov
fucomp
mov
outsb
pop
sub
cmp
dec
pop
addr16
mov
and
mov
xchg
push
scas
xchg
fwait
sbb
aad
pusha
cwtl
insl
mov
push
adc
jle
push
sub
orps
inc
mov
cmp
xchg
and
dec
jns
aad
cmpsl
jo
dec
sbb
sbb
xlat
sbb
dec
loopne
push
bound
cmp
cwtl
jbe
faddl
adc
imulb
jp
icebp
repnz
jnp,pt
dec
mov
gs
lds
addl
mov
fs
pop
sub
pop
sub
inc
or
incl
jp
sub
pop
cmp
sarl
adcl
lcall
movb
pop
ss
in
in
and
fwait
xor
sahf
pop
stos
fistpll
cmc
jge
mov
sub
xorl
xor
xor
cmc
jns
outsl
or
push
lcall
and
dec
mov
push
arpl
sbb
imul
movsb
sbb
rclb
or
cmp
inc
lcall
lods
sbb
sub
test
je
jg
testl
nop
repnz
nop
pop
inc
or
push
inc
xchg
pop
cmc
cmp
fldenv
jmp
cmpsb
xchg
or
and
push
hlt
cmp
movsl
popf
rorb
push
xchg
pop
mov
and
rcll
sar
cmpsl
out
es
clc
mov
jno
pusha
fnstcw
push
push
fld1
sahf
mov
xor
mov
aad
adc
leave
test
sbb
out
shl
jmp
mov
js
fs
xchg
js
push
pop
sub
adc
test
insl
aaa
sub
lret
push
mov
cmp
mov
lds
mov
ds
fidivrl
ds
and
sahf
addr16
or
cmp
xor
inc
pop
int
cmp
jnp
out
stc
push
cmpb
sbb
out
or
inc
mov
sub
test
inc
test
ja
out
mov
lds
sub
jno
addl
cltd
sbb
lock
jg
imul
fsubs
in
ret
ljmp
add
aas
bound
test
and
mov
fsubrs
insl
and
or
inc
cmpsl
add
and
mov
pavgw
loope
sub
inc
jmp
sub
into
pop
lods
ja
pushf
add
es
sti
jno
cld
mov
cmp
pushf
outsl
cmp
xchg
cltd
rcrb
inc
push
lahf
sub
mov
push
jnp
insl
adc
and
xor
add
movl
dec
rorl
scas
lea
adcb
das
jp
ja
loopne
incb
fnstenv
push
cwtl
xlat
xchg
dec
test
cwtl
scas
jae
stc
add
adc
out
dec
sub
mov
xor
sahf
adc
jl
lods
sub
movsl
and
sub
in
sahf
mov
popf
scas
sbb
mov
aas
push
loope
mov
fisttpl
fimull
repz
and
jp
pushf
pop
lret
jge
cmp
fdivs
mov
fwait
pop
mov
testb
out
adc
cmc
test
fldl
and
xor
xchg
xchg
test
push
and
outsb
dec
clc
rorl
or
lea
jbe
dec
sub
cs
mov
mov
pop
stos
test
loop
adc
int3
xlat
mov
int3
in
arpl
jmp
push
cmpsb
incl
arpl
xor
mov
inc
push
or
in
pop
fcoml
pop
scas
rcll
adc
or
stc
testl
push
stos
fwait
out
enter
loope
dec
mov
jne
loopne
dec
xchg
cltd
lret
repz
lcall
insb
mov
sahf
adc
dec
push
mov
out
mov
and
jb
pop
jno
mov
push
xchg
dec
adc
lods
imul
dec
cmp
xchg
cltd
sbb
adc
addr16
inc
movsb
mov
sbb
mov
mov
mov
pop
jno
jo
mov
stc
repnz
add
cmp
lock
repz
mov
and
dec
rorl
mov
stos
or
dec
mov
cwtl
lahf
in
add
xchg
push
sbb
movsl
push
mov
xchg
adc
mov
push
xlat
mov
ja
lret
cmp
sub
cltd
inc
fs
add
add
mov
mov
jns
pop
mov
and
mov
sub
lods
cmp
push
sub
mov
xor
mov
shrl
fsubs
or
fcmovbe
xchg
rcrb
repz
std
test
imul
jmp
sbb
mov
dec
push
dec
mov
daa
sbb
push
jmp
add
jno
adc
shll
aaa
push
xchg
mov
scas
cli
cltd
in
cld
stc
pop
clc
add
lock
xchg
sub
sub
xor
inc
dec
and
daa
lret
push
and
jle
sub
xor
adc
and
hlt
ja
rorl
push
ljmp
subl
and
orb
addr16
fildl
add
imul
fidivrl
les
loope
mov
ds
lret
movsl
into
add
in
loop
inc
nop
and
aaa
shrd
add
push
or
or
out
sub
call
add
pop
loop
std
and
inc
xorb
repnz
je
shrb
xchg
out
sub
mov
xlat
jp
icebp
into
inc
push
in
mov
xorb
cmp
in
rcll
call
stc
pop
sub
in
ja
inc
scas
test
lds
rcrl
pop
push
inc
inc
or
pusha
rcrl
lcall
jo
push
xor
test
push
or
push
je
pop
xor
or
andl
repz
sarb
pop
jne
cmp
push
das
subb
mov
xor
pop
das
xchg
push
ljmp
dec
fstpl
stc
mov
mov
mov
mov
sti
mov
icebp
cltd
js
test
mov
jo
xchg
mov
xchg
sub
push
loop
in
push
stos
test
clc
test
hlt
inc
insb
sub
lret
cmc
stos
repnz
gs
and
mov
js
ret
mov
stos
mov
lret
mov
loope
push
cmp
add
inc
ret
test
lar
test
jge
mov
bound
idivl
cmp
and
cmp
decb
and
jns
adc
bound
and
jmp
push
popf
mov
int3
xchg
pop
mov
nop
mov
int3
rcrl
stc
mov
lods
mov
pushf
out
push
push
mov
xor
je
push
adc
inc
inc
enter
or
inc
add
cmp
xor
sahf
jae
sbbb
out
xor
sbb
cmp
mov
sarl
scas
xchg
mov
add
fidivrs
pop
insl
mov
imul
sbb
and
or
leave
icebp
cltd
mov
mov
jne
sbb
lret
repz
mov
and
jnp
mov
pop
cmpsl
data16
pop
nop
and
cmpsb
mov
push
jge
test
dec
cmp
inc
cmpsl
es
mov
jmp
lds
inc
addr16
jmp
inc
xlat
push
pop
push
stc
mov
push
shr
mov
mov
jmp
xchg
add
adc
movsl
dec
add
push
push
repz
test
adc
decb
jnp
fcoms
mov
popa
outsl
add
push
in
movsb
enter
xor
movsb
mov
mov
push
repz
cmc
push
sbb
add
xchg
ja
dec
cli
cmpsl
leave
xlat
ret
push
pop
ret
leave
stc
sub
out
add
iret
jbe
inc
mov
gs
sbb
push
arpl
fdivl
adc
stc
xorl
fdiv
cwtl
pop
jnp
mov
sbb
bound
aad
imul
fs
inc
aaa
or
jne
add
jl
in
adc
jg
cs
imul
imul
jmp
into
cmpsb
popa
jecxz
mov
dec
cmpsb
sbb
add
loope
ds
xor
sub
pop
mov
call
jne
outsl
lds
mov
sbb
jo
inc
notl
sub
and
jns
jne
xchg
nop
test
inc
loop
push
clc
mov
faddp
cmp
loopne
adc
or
and
rcl
pop
jo
sbb
mov
lods
xchg
jg
mov
cmp
fwait
insb
cmp
fs
rolb
and
nop
jmp
loop
out
mov
repz
jns
mov
test
push
adc
pop
push
dec
cmp
negl
mov
adc
add
cld
divps
sbb
and
stos
push
test
cmp
test
adc
add
cmpsb
dec
sbb
sub
mov
in
out
add
mov
or
es
mov
insb
push
cwtl
jge
push
jp
outsl
cltd
bound
or
enter
mov
in
pop
icebp
lea
xchg
cmpsl
fiadds
push
mov
sub
cmp
dec
nop
cld
pop
popf
mov
movsb
rcrb
mov
daa
or
cli
popa
cmp
xor
shrl
or
jo
xchg
push
mov
cmp
int
popa
mov
adc
in
pop
sbbl
sub
aaa
mov
mov
push
xchg
pusha
outsb
fistl
addr16
and
pop
repnz
xchg
push
xor
mov
xchg
and
into
sub
push
or
popf
insl
inc
orl
jge
jge
mov
nop
ficompl
lahf
enter
jge
int
pop
scas
movsb
call
jle
aad
mov
insb
rorb
sub
aad
sub
das
aaa
push
je
daa
cmp
xchg
and
scas
and
push
dec
les
out
iret
ljmp
xorl
sbb
out
inc
adc
lods
cmp
pop
add
jg
out
jle
in
jg
shrl
es
sub
das
subl
test
add
jnp
scas
pop
cld
push
loop
cmpsb
push
xor
lret
jns
jg
jbe
test
jmp
add
fidivl
inc
pushf
out
adc
add
fdivrl
mov
cld
inc
lcall
out
pop
push
mov
inc
push
sahf
adc
xor
int3
inc
sbb
pop
ss
adc
xor
pop
pop
clc
sub
xor
sub
and
loope
cmp
xchg
sub
sub
data16
mov
sti
ljmp
rclb
jb
pop
ret
mov
sahf
xorb
out
xchg
adc
sbb
push
sub
and
dec
xor
test
lret
aam
in
sbb
int3
cli
stos
loopne
push
es
shlb
in
pop
testl
dec
cmp
cmp
push
mov
xchg
mov
cwtl
repnz
jle
out
aaa
ds
xchg
in
xor
or
pusha
xor
pop
fs
push
in
adc
xchg
cwtl
add
scas
inc
and
fbstp
mov
aas
hlt
outsl
pop
rcrb
lods
sbb
sub
mov
sti
sahf
adc
pop
add
mov
vcmpsd
movsl
pushl
mov
outsb
test
jne
pop
jno
pop
or
mov
out
mov
out
sbb
sbb
or
lcall
cmp
rol
mov
inc
test
std
data16
xchg
shrl
leave
shll
ljmp
movsl
cwtl
mov
add
pop
mov
jp
mov
adc
pop
jno
sti
push
lods
loop
dec
push
inc
fiadds
loop
push
push
xchg
lods
mov
ljmp
inc
xchg
rolb
push
pop
dec
inc
mov
inc
in
pop
lods
daa
bound
pop
pop
ds
wrmsr
insl
repz
pop
fwait
nop
loope
sub
fwait
loop
xor
mov
inc
imul
scas
into
dec
jecxz
insl
das
sbb
mov
gs
lods
mov
out
hlt
and
mov
mov
inc
ss
gs
out
add
mov
stos
jge
in
cli
leave
outsl
stc
add
jge
jmp
enter
and
bound
iret
inc
pop
push
fistpll
pop
jne
pushf
inc
mov
jge
xchg
push
mov
push
cmpsl
jo
push
outsl
jb
in
and
mov
addr16
in
pop
cmp
idiv
js
or
inc
aas
ret
lods
lret
inc
lds
adc
inc
lods
adc
into
loop
dec
dec
adc
mov
inc
nop
xor
sbb
xor
xchg
scas
fidivl
xor
out
mov
dec
jmp
jmp
mov
mov
push
xchg
mov
add
scas
xchg
pusha
mov
aaa
or
push
sti
sti
stos
js
les
outsl
xor
dec
mov
add
nop
mov
divl
clc
imul
dec
loop
dec
ss
or
out
aad
push
leave
in
and
mov
or
cmp
jnp
stc
lods
push
sbbl
dec
pop
aas
xor
mov
push
push
jo
xor
mov
and
fcoml
fcom
in
aad
lods
push
scas
cmp
je
inc
cmp
xor
sahf
push
subb
add
lcall
ds
xor
sub
sub
cmp
or
sbb
in
sbb
or
cmp
sub
pushf
imul
dec
mov
cmp
or
sbb
in
sbb
or
cmp
sub
pushf
imul
dec
mov
cmp
or
sbb
in
sbb
or
cmp
sub
sahf
imul
dec
mov
cmp
mov
pushf
sub
sbb
mov
fcmovnbe
xor
jae
arpl
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
or
cmp
pop
lret
jae
mov
sbb
dec
fstps
imul
or
cmp
imul
cltd
sbb
daa
fstps
imul
or
cmp
imul
mov
pop
leave
pop
mov
pushf
add
jge
sub
push
mov
bound
jo
call
js
lea
pushf
dec
mov
fcoms
ds
pop
pop
xchg
jecxz
icebp
je
sbb
push
ds
pop
ss
fcoms
pop
mov
xchg
rorl
sub
loop
daa
scas
mov
xchg
test
pop
movsb
pop
mov
stc
ret
or
sbb
outsb
push
jns
add
sbb
push
scas
rcr
ss
cltd
movsl
push
int3
jp
stc
lret
leave
sti
adc
push
ljmp
push
sub
les
lcall
test
push
out
ljmp
adc
jecxz
mov
push
rcll
or
sbb
dec
lret
pop
fldt
jns
mov
cltd
sbb
dec
fstps
imul
dec
insl
fiaddl
push
mov
or
jb
sbb
or
mov
mov
decb
mov
adc
enter
mov
pop
test
sbb
inc
fsts
add
jmp
sti
mov
cltd
sbb
dec
fstps
imul
or
cmp
imul
cltd
sbb
dec
fstps
imul
or
push
jns
mov
push
out
push
fists
xchg
cmp
mov
mov
add
movsl
es
cli
xor
pop
insb
in
ror
lret
dec
in
pop
lcall
ss
outsl
push
rcl
sahf
stos
jmp
pusha
sbb
mov
dec
sahf
dec
add
push
sbb
mov
ljmp
lds
loop
ffreep
jge
stos
pop
adc
mov
out
xor
out
enter
rclb
sahf
iret
jno
inc
push
movsl
mov
inc
add
cmp
cmp
fucomi
cmp
push
xchg
jne
pusha
pop
jg
xchg
or
fldenv
setp
adc
pop
pushf
test
addl
sbb
orl
insl
sti
sub
lret
mov
lods
clc
nop
sbb
sub
mov
jo
ds
ficoml
insl
in
ss
lods
fmuls
stos
xchg
cmp
push
pop
push
or
dec
cmp
sub
adc
or
mov
add
or
cmp
xor
cmp
push
adc
scas
leave
rcrl
jle
mov
ret
add
push
mov
scas
cli
pop
mov
mov
adc
xor
insb
mov
nop
in
cmpsl
xorb
sub
test
mov
mov
addr16
mov
push
mov
ljmp
scas
push
xchg
andb
test
das
into
xchg
jne
mov
mov
jmp
test
mov
fnstcw
jmp
add
dec
fcompl
aas
insb
popa
out
lcall
out
ljmp
ss
xchg
std
mov
inc
test
dec
dec
inc
vpcmpgtb
in
fimuls
cmp
pushf
pushf
jb
pop
shrl
inc
loopne
adc
fbld
test
jne
pusha
mov
stc
xor
jns
cmp
out
fst
mov
add
fnstsw
out
xor
mov
mov
mov
int3
sti
jns
push
lea
test
jns
shll
push
js
fcmovb
lahf
jp
dec
inc
leave
sti
mov
je
mov
mov
add
xor
orb
aaa
fwait
loopne
out
xchg
ret
dec
sbb
mov
mov
mov
jp
inc
cmp
inc
adc
mov
sub
mov
add
fmuls
cmp
sbb
mov
inc
xchg
cmp
inc
cmpsb
fldt
clc
mov
andl
mov
jl
xor
pop
mov
xor
lahf
mov
dec
cli
xor
inc
add
mov
pop
adc
das
lret
enter
mov
mov
xchg
pusha
xor
pusha
into
xchg
loope
hlt
ja
adc
faddp
xlat
movswl
rolb
cmp
lcall
and
jo
mov
xchg
daa
imul
testb
cwtl
int3
scas
lea
leave
push
cmp
push
xor
xchg
test
inc
out
xor
push
je
mov
or
add
cli
ljmp
daa
mov
add
stos
es
push
add
aaa
aas
mov
xor
call
cmc
push
adc
jp
push
cmp
xor
mov
fmul
mov
jl
imul
pop
add
xchg
and
dec
lcall
ljmp
mov
xchg
push
push
xchg
dec
loop
vphsubwd
push
movsl
repnz
scas
lcall
test
pop
push
jno
sahf
dec
mov
int
push
ljmp
ss
arpl
fcmove
movsb
in
add
fnsave
movups
and
cs
jnp
stos
xor
sbb
cmp
cmp
js
cmp
fmull
and
push
xor
cmp
push
inc
pop
fldcw
aas
int3
and
add
dec
insb
add
mov
mov
and
cmc
push
mov
mov
sbb
adc
xor
ljmp
int3
ss
jmp
pop
mov
inc
jecxz
pop
adc
mov
in
fldcw
mov
in
test
jle
pop
aaa
stos
adc
jg
mov
adc
jnp
lds
adc
insb
cmp
ljmp
push
stc
xor
outsl
mov
and
shl
sub
xchg
sbb
sbb
jne
imul
aaa
mov
xor
data16
fsubrs
push
mov
loope
imul
movsb
sub
out
pusha
adc
mov
ljmp
aad
pop
ror
icebp
lea
add
ret
stos
out
push
sbbb
pusha
add
stos
dec
push
imulb
lods
test
cli
mov
sti
std
imul
mov
je
jle
fstpl
sbb
icebp
jl
pusha
xor
or
mov
jecxz
or
inc
sbbb
repz
and
mov
gs
inc
lsl
aaa
mov
mov
fnsave
outsb
stos
sbbl
or
inc
popf
shl
sbb
in
push
push
aad
je
push
xchg
loopne
aam
adc
lcall
int
jnp
and
scas
cmp
pushf
xor
sub
pop
insl
jbe
pushl
test
pusha
dec
jecxz
mov
test
add
xor
sub
sub
ja
push
int3
mov
scas
pop
repnz
lret
subb
dec
pop
roll
shrl
sahf
jbe
push
cld
adc
dec
lret
pop
mov
mov
dec
pminsw
in
lods
aam
dec
adcl
push
fwait
pop
rcrb
xor
frstor
xchg
inc
adc
ds
cmp
xchg
movsl
shll
mov
rcl
push
cmp
mov
mov
pop
lods
cmp
xor
arpl
insb
mov
mov
add
push
sti
xchg
sub
call
mov
mov
mov
shlb
push
adc
lcall
xchg
pop
inc
ja
idivl
xor
int3
xchg
xchg
pusha
in
and
xchg
cwtl
sub
pause
jo
mov
gs
or
mov
mov
cwtl
std
shrb
mov
mov
xchg
bound
xchg
mov
or
rorb
xlat
jo
push
popa
shrb
clc
stos
js
sub
movsl
jecxz
adc
fldcw
jnp
scas
movsl
pop
rolb
sbb
popf
push
icebp
dec
add
jne
mov
dec
jmp
mov
xchg
jne
mov
adc
xchg
in
xchg
lods
ss
icebp
rorb
xlat
cmpsl
xorb
arpl
pop
adc
inc
xor
mov
das
mov
mov
enter
sub
mul
add
int
or
aam
push
shll
imul
sbb
fdivs
and
inc
fsubs
sbb
dec
fwait
jg
iret
or
jnp
clc
jnp
xorb
addr16
inc
repnz
daa
loopne
push
and
mov
cmp
add
xor
ss
mov
fsts
mov
jl
push
movsb
int3
test
inc
pop
ja
push
mov
in
out
data16
jno
mov
jge
jnp
sbb
pop
jle
mov
push
xor
cld
xor
push
cmp
ret
and
xor
mov
ja
mov
aas
sbb
enter
popa
jle
push
add
xor
cwtl
insb
mov
mov
dec
xchg
xchg
dec
mov
cld
aam
ds
in
mov
mov
fwait
mov
mov
das
mov
sahf
addr16
inc
fisttps
test
stos
add
nop/reserved
mov
nop
push
and
and
pop
outsl
add
sbb
popf
lahf
pop
repz
sbb
rolb
aas
lods
dec
xlat
in
out
add
or
xchg
inc
leave
testl
mov
cltd
mov
es
mov
cmpsl
xor
ret
mov
mov
rolb
push
mov
push
or
sbb
add
leave
clc
loope
inc
mov
jp
mov
scas
mov
cmpl
lret
arpl
cmpl
mov
jbe
test
add
push
sub
mov
mov
cmpsb
inc
xlat
xchg
popa
sbb
mov
es
cmp
mov
imul
scas
jge
and
fildl
pop
mov
adc
ja
push
mov
xor
inc
bound
xchg
push
xor
fucom
repnz
gs
in
movb
pop
mov
das
lea
mov
idiv
sub
pop
jbe
sbb
mov
cmp
gs
insl
loop
cmp
push
fstpt
mov
and
mov
adc
and
loopne
nop
out
add
or
cmp
xor
into
xchg
dec
mov
dec
xor
imul
mov
movsl
add
jp
loop
andl
flds
sbb
sub
test
lea
test
std
pop
in
or
jo
fcmovu
sahf
aaa
jb
push
and
xchg
mov
mov
or
outsl
sub
scas
sar
mov
gs
out
inc
push
or
push
je
adc
rclb
inc
push
aaa
inc
pop
into
mov
js
imull
lods
popf
pusha
test
mov
ja
and
ret
mov
outsb
jle
and
pushf
or
arpl
cmc
inc
negl
lods
cwtl
sub
push
hlt
sarb
lea
or
in
mov
mov
pusha
iret
pop
jae
and
mov
out
and
movb
into
fdivr
jae
xlat
cld
lds
push
cmp
and
cmpsb
lds
int
enter
sub
push
repz
sti
adc
and
loope
dec
das
lret
jb
mov
leave
or
jge
repnz
test
stos
jg
jb
mov
and
punpckhwd
or
lock
ret
mov
rolb
jnp
popa
xor
stos
xchg
cmp
addr16
repz
mov
inc
inc
sarl
data16
mov
cwtl
cmp
dec
sbb
sahf
xchg
ss
fisttps
mov
cmp
rcl
inc
movb
add
xor
pop
adc
pop
lahf
test
or
fdivs
in
lods
jle
sahf
push
dec
mov
rclb
aaa
les
xchg
cmp
iret
dec
adc
push
and
orb
or
jb
xchg
xchg
loop
inc
cmp
lods
int
push
lock
mov
xor
push
xchg
loope
mov
jnp
add
xor
mov
cmpl
push
fwait
adc
cmp
and
mov
inc
jp
in
lahf
xorb
dec
nop
xchg
movsl
xchg
xchg
out
das
mov
scas
insb
in
cld
cmp
iret
cwtl
xor
mov
mov
mov
push
shl
jbe
mov
sub
orl
mov
repnz
sbb
push
test
mov
mull
jb
xchg
inc
push
imul
adc
xchg
pop
mov
divb
dec
sahf
lret
bound
and
dec
cmp
sti
xor
dec
loopne
xchg
arpl
adc
inc
cs
pop
mov
ja
jle
sub
mov
cmp
ficoml
rcr
mov
sti
lret
adc
jmp
push
mov
adcb
xor
sub
pop
sti
or
jp
sub
hlt
mov
subb
xor
ds
nop
testb
mov
mov
stos
dec
cli
mov
jbe
jle
xchg
mov
mov
sub
pop
jp
cmp
cmp
xor
iret
xchg
mov
scas
int
mov
or
xchg
mov
cltd
ja
mov
loop
sub
mov
pop
mov
mov
push
adc
mov
jb
cltd
int3
and
stos
pop
push
loope
add
jbe
fcompl
in
aaa
stos
jmp
in
movsb
lods
and
in
mov
and
out
sub
std
mov
nop
mov
ja
test
arpl
enter
inc
mov
sti
xchg
ror
jl
dec
cli
or
cmp
push
in
dec
xor
mov
pop
cmpsb
xchg
jnp
sbb
push
movsl
andl
sahf
in
ret
push
pushf
into
int3
loope
fimull
xor
je
icebp
and
popf
push
cmp
mov
pop
cmp
roll
lret
pop
ljmp
ja
jp
or
ret
xchg
inc
pop
je
aam
and
add
add
pop
xchg
lea
lock
xor
aad
cld
push
sub
sub
mov
sbb
addb
mov
shll
inc
jns
lods
out
xor
jecxz
mov
lock
outsb
fldenv
push
pusha
stc
sbb
fmuls
add
jne
movsl
inc
push
lods
popf
push
dec
fcomps
enter
push
mov
notl
xor
jp
mov
push
inc
es
jmp
repnz
test
push
pop
pop
das
push
scas
icebp
xor
xor
push
outsl
andb
xchg
lea
movl
pavgb
xor
push
inc
push
in
pop
jne
cmp
mov
xor
test
push
xchg
mov
mov
add
cmpsl
or
leave
and
pop
xlat
add
daa
hlt
pop
imull
jne
ds
mov
cld
int3
js
cmp
sub
aas
loopne
sub
xor
and
sahf
cmp
jge
enter
add
jmp
pop
icebp
data16
push
shl
ret
adc
sub
ss
cmp
dec
test
repnz
jl
ljmp
fdivl
andl
loope
loop
lfs
insb
sar
jecxz
ret
push
sbb
cmp
sbb
fmul
popa
push
cwtl
adc
fwait
loope
xor
mov
sbb
cld
pop
mov
adc
pop
cmp
fcoms
out
insb
adc
jge
jp
jnp
insb
push
cmc
jle
cmpsl
sahf
cmp
lahf
or
sbb
xor
scas
xor
lret
dec
in
mov
stos
jo
aaa
movsb
jg
scas
adc
jno
pop
dec
call
xor
cmpsb
pusha
out
pop
loopne
js
add
scas
add
jp
adc
jo
pop
sbb
add
lret
push
in
fcomi
mov
fucom
andb
arpl
jecxz
es
decl
sbb
mov
fsts
mov
ret
push
push
jge
arpl
loope
inc
xor
mov
inc
int3
les
jnp
xor
aam
lock
test
ret
icebp
mov
loop
jnp
pop
push
mov
jmp
sbb
movsb
insl
cwtl
push
ja
dec
addl
sub
push
xchg
sub
push
lock
fldenv
xchg
je
jnp
iret
inc
dec
popf
jl
push
add
cmc
push
pop
ret
lret
scas
mov
pop
jp
mov
jbe
mov
pop
mov
repz
xchg
cmp
sti
push
add
hlt
sbb
std
fsts
repnz
mov
xchg
add
cmpsb
loop
lcall
pop
sbb
pop
mov
leave
xchg
cmp
ret
pop
mov
lods
lret
sub
xor
outsl
mov
mov
cmpsb
xchg
icebp
dec
mov
add
mov
loope
fisubl
lea
mov
dec
out
roll
dec
js
add
adc
out
xor
mov
lods
movsb
xchg
mov
fdivs
test
stos
xor
mov
aam
adc
in
add
pop
xor
mov
jnp
push
push
out
xlat
xchg
cmp
push
pushf
mov
jl
or
cs
pop
xor
cmpsl
not
aam
push
icebp
sbb
cmpl
into
xor
jge
insl
movsb
cs
jg
dec
decb
xor
sbb
out
idivb
adc
pop
loopne
push
flds
aam
or
lods
mov
movsb
xchg
popa
sub
fmull
dec
lds
pop
repnz
cmp
icebp
cmp
lret
pop
iret
lcallw
es
andb
sub
push
sbb
pop
in
push
aam
jg
xor
dec
and
dec
sub
lcall
and
out
in
sub
dec
sub
stos
pop
xchg
stos
jg
inc
hlt
adc
xor
jae
jns
fistpl
fnstenv
jp
pusha
pop
pop
fsubrs
sbb
movsb
pushf
mov
stos
mov
mov
adc
fdivrl
stc
cmc
adc
inc
ret
sbb
mov
ss
xor
int
cmpsl
cld
cmpsl
add
or
imul
aas
mov
lds
mov
xchg
sbb
jnp
int
lods
arpl
push
mov
mov
into
ret
inc
and
jecxz
aaa
jbe
pop
jno
inc
js
mov
sub
and
icebp
int3
test
incb
rcrb
icebp
mov
cli
cmp
mov
insb
out
adc
fstpl
pop
xchg
push
xchg
fdivl
ror
test
inc
stos
je
in
xchg
enter
mov
push
popa
add
fsts
test
mov
sub
cmp
movsb
mov
sub
sub
out
mov
jg
cmp
enter
xor
icebp
sbb
xor
fimull
int
iret
mov
inc
pop
cli
push
adc
imul
out
jle
movsl
xchg
push
add
repz
scas
sbbl
ja
sbb
mov
movsl
test
sbb
aas
aas
adc
mov
sub
mov
js
push
ds
push
mov
push
or
dec
mov
mov
ficoml
mov
aaa
push
and
push
fwait
aas
and
fcoml
mov
inc
add
sub
jmp
aaa
ja
lods
insl
and
mov
cld
pop
push
push
call
sub
sub
stos
test
shlb
ds
jae
mov
adc
lods
pop
jmp
mov
mov
and
add
pop
mov
into
inc
les
xor
sbb
enter
add
mov
movsl
sbb
popa
adc
movsl
push
test
stos
fstl
or
xor
ss
inc
jae
inc
cld
inc
lods
pushl
jp
pop
dec
in
je
mov
fmulp
shlb
or
inc
data16
mov
imul
loop
shrl
jge
jne
mov
mov
fcoms
cmp
xchg
lret
pop
sahf
cmp
or
or
test
dec
enter
dec
fists
loop
popa
cltd
lcall
jne
push
xor
in
rorl
push
std
fidivrl
into
das
jb
inc
ret
mov
ja
adc
iret
sbb
ficompl
inc
jl
cmpsl
inc
mov
fcmovnu
test
push
push
add
js
and
xchg
lods
cs
inc
pop
xor
mov
ficompl
lahf
sbb
imul
sbb
adc
fwait
outsb
loop
clc
jecxz
push
mov
adc
test
add
aaa
repz
insb
jne
xlat
or
jecxz
sbb
jmp
enter
adc
dec
push
mov
push
fwait
push
aaa
or
cld
xor
mov
les
adc
add
icebp
lods
dec
xor
lods
xor
out
movsl
lahf
adc
andb
sub
bound
pop
sbb
sub
cmp
fnsave
shl
out
sarb
test
inc
sub
dec
rcrb
pop
push
mov
int
rorl
adc
xor
shlb
cmp
jp
mov
lea
xor
adc
add
insb
jb
add
push
sbb
lret
jnp
fbld
pop
pushf
push
pop
adc
jnp
lds
or
addr16
dec
int3
ret
xchg
mov
sbb
out
pop
mov
jno
stos
fdivrs
dec
dec
lock
inc
lahf
popa
xchg
sub
add
addb
xlat
mov
or
xchg
adc
fwait
pop
add
adc
inc
add
aam
in
mov
xor
xchg
rep
and
adc
sub
repz
notb
push
mov
aam
mov
mov
xlat
stos
icebp
cmp
aaa
pop
ret
xchg
xchg
inc
or
push
jge
xor
dec
loopne
leave
cwtl
outsb
or
add
xchg
and
xchg
in
dec
scas
lahf
popa
xlat
dec
xor
lods
sbb
mov
imul
cltd
sbb
dec
fstps
imul
or
cmp
imul
cltd
sbb
dec
fstps
imul
or
cmp
imul
cltd
sbb
dec
fstps
imul
or
cmp
imul
cltd
mov
sub
movsb
cltd
xchg
mov
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
lods
pusha
and
xor
dec
adc
add
lock
in
movsb
shlb
xor
or
adc
and
xor
inc
xor
adc
repnz
loopne
lock
shll
sbb
xchg
pusha
mov
sub
dec
or
ret
shl
mov
xchg
movb
pusha
and
lret
iret
fists
stc
pusha
mov
mov
xchg
imul
xchg
pushf
mov
sub
mov
fimuls
lock
jo
or
pop
rolb
cmc
gs
jns
push
popl
and
mov
int3
and
fs
in
les
and
dec
inc
cmp
stos
addb
pusha
pop
push
popa
jo
adc
call
xor
dec
jecxz
pop
icebp
sbb
ljmp
hlt
mov
and
add
loopne
xchg
mov
aaa
fcom
sub
cmpl
mov
or
jl
insb
hlt
movsl
lds
mov
jo
ja
inc
pop
pop
inc
xor
and
sbb
push
clc
jl
stos
fldenv
nop
in
adc
pop
inc
sub
dec
ja
adc
cwtl
hlt
test
scas
lods
fnstsw
in
add
pushf
pusha
arpl
incl
inc
xor
insb
mov
movsb
fadds
xchg
cld
mov
jbe
daa
add
add
adc
lock
loopne
shlb
in
hlt
addb
pusha
and
xor
inc
xor
adc
lock
loopne
shlb
in
hlt
addb
out
jno
push
or
insl
jg
pop
jbe
or
push
test
dec
out
sti
or
push
sbb
or
pop
test
jge
adc
xchg
out
mov
call
add
repnz
push
cmp
dec
cmp
cmpsl
jp
jno
scas
pop
mov
nop
xchg
repnz
xchg
fcoms
jmp
xlat
popa
sti
inc
mov
out
notl
popa
shl
cmpb
cmc
out
inc
mov
aam
testl
xchg
mov
add
cmp
decl
fistpll
add
pop
mov
adc
or
sbb
test
jmp
data16
repnz
std
popf
inc
int3
push
adc
xorl
inc
fldl
ss
repz
int
int3
and
ds
lds
mov
sub
dec
mov
mov
enter
imul
mov
mov
push
fstp
jae
test
cmp
pop
popa
sbb
xor
rcll
sbb
popf
cmp
ss
adc
mov
or
dec
clc
push
or
sub
cltd
jl
fsqrt
jp
and
mov
push
cmp
pop
popf
xchg
add
fnsave
loop
addr16
jp
pop
or
enter
sbb
out
loopne
dec
pop
lea
sbb
out
xchg
cmpsl
cmp
xchg
lcall
xchg
mov
jecxz
push
jno
ret
cmp
xchg
mov
xlat
faddp
in
das
popf
jge
movaps
jne
roll
cli
mov
xchg
lock
rcr
pop
pop
shlb
nop
test
enter
xchg
push
xlat
outsl
int3
mov
pop
push
sub
and
cmp
pop
gs
nop
int
lcall
out
sarb
mov
dec
jne
dec
rcll
movsb
test
cwtl
jl
stc
outsl
dec
push
popf
arpl
pop
mov
dec
add
add
popf
ja
mov
out
push
xor
and
pop
dec
mov
cmp
mov
shl
or
xor
adc
sbb
cs
xor
icebp
repnz
cmp
repz
scas
mov
imul
push
dec
fwait
jnp
lcall
es
mov
or
gs
add
mov
dec
sub
mov
in
lds
jge
nop
loop
xor
lods
cmp
frstor
sub
or
sarb
xchg
stc
xchg
jg
jnp
out
jmp
mov
mov
icebp
out
mov
mov
push
lods
ss
cmpsb
mov
or
mov
cmp
ja
cmp
cs
sub
sti
dec
jb
inc
outsb
mov
scas
mov
cwtl
daa
add
daa
pop
pop
into
jne
stc
xchg
mov
inc
mov
xchg
les
pop
testb
push
fisubs
mov
push
outsb
pop
das
shl
pop
and
pop
mov
testl
dec
icebp
cmp
mov
mov
fcmovnu
js
jmp
into
ret
inc
adc
pop
std
sbb
shlb
popf
inc
mov
push
getsec
sbb
fcomps
add
pop
je
sub
push
std
leave
adc
hlt
rorb
add
shr
imul
xchg
sbb
in
sahf
sbb
sbb
out
ret
stos
cmpsl
xchg
dec
adc
jge
jmp
sarl
inc
or
inc
pop
and
pop
movsb
addl
rcrl
inc
data16
dec
sub
arpl
dec
push
or
sub
test
scas
sub
jnp
rcrb
fsubr
push
cmp
xchg
pop
xchg
inc
or
pop
dec
shl
popa
and
cmp
mov
xlat
imul
lret
jbe
sub
into
inc
call
jp
leave
out
cmc
in
xchg
hlt
fs
sbb
jno
jb
pop
sub
cltd
test
ljmp
dec
mov
jns
rcrb
lods
popa
or
mov
data16
jmp
jp
stc
outsb
aad
push
fwait
enter
aam
clc
cwtl
fwait
mov
andb
sbb
inc
movsb
adc
psllq
add
mov
cmp
imul
jne
adc
and
negl
and
out
jl
mov
cmp
push
scas
les
pop
clc
mov
std
clc
test
lock
iret
fistpl
out
out
outsl
subl
daa
or
inc
aam
shll
pop
out
jmp
add
in
or
mov
add
add
xor
sbb
xchg
fsubrp
scas
int
outsl
and
imul
adc
xor
dec
mov
adc
lret
orb
lea
push
in
and
test
push
lcall
mov
loope
gs
inc
sub
test
insb
inc
das
inc
and
push
dec
dec
mov
cld
clc
lcall
in
ljmp
add
ret
imul
es
aad
lods
iret
jle
xor
fistps
push
arpl
stc
sub
mov
fcmovne
shll
cmp
push
or
adc
add
in
jns
das
jae
jge
and
daa
cmp
adc
add
inc
lcall
mov
or
mov
push
and
fildl
clc
cmpsl
cmc
jg
cltd
xor
sbb
loopne
outsl
insl
lea
add
enter
cmpsl
fistps
bsf
cmp
sub
push
xchg
xchg
pop
jg
fcomi
add
jne
jmp
mov
inc
xorb
jnp
pop
dec
adcl
xchg
and
cs
cmp
clc
and
xchg
mov
jge
xor
lret
loope
inc
push
fists
dec
xor
inc
jo
hlt
movsl
scas
push
xchg
sub
imul
cltd
imul
push
push
pop
or
and
cs
cld
mov
lahf
jmp
add
lods
sub
mov
ljmp
into
filds
cld
orl
dec
sbb
popf
hlt
cmp
loopne
lret
push
sahf
les
cmc
push
out
add
mov
or
aas
sbb
scas
xor
mov
movsb
push
insb
pop
les
ret
add
lret
stc
cmpsl
out
out
sbb
jnp
lcall
or
cmp
ss
aaa
popa
cltd
fwait
cld
adc
lret
sub
loopne
jbe,pn
jp
shll
test
mov
imul
fwait
repz
outsb
xchg
pop
pusha
push
and
out
or
outsl
ljmp
adc
sbb
sub
mov
mov
mov
inc
push
xchg
pop
jle
or
push
xchg
adc
arpl
cltd
mov
add
arpl
add
pop
cmp
dec
gs
add
icebp
add
lea
fbstp
loop
int3
and
inc
add
loopne
push
or
pop
rorl
and
leave
xchg
push
pop
fwait
ljmp
popa
loope
lea
and
sahf
imul
dec
jle
fisttps
cmpsl
or
js
sub
mov
movsl
loope
push
movsl
out
in
sbb
in
or
ret
and
xchg
cmc
dec
adc
xchg
mov
rcrb
xchg
inc
mov
jb
mov
jmp
sbb
call
pop
stos
sub
jo
mov
aas
addb
adc
pminub
pop
jnp
arpl
pop
adc
iret
cld
repz
hlt
stos
mov
idivl
adc
cmp
mov
xchg
inc
push
imul
push
xchg
nop
add
pop
in
outsl
out
mov
jecxz
add
test
stos
sbb
loop
sbb
aad
sti
fcoms
xlat
rorb
ljmp
shll
push
sub
ret
movsl
test
xlat
pushf
mov
stc
mov
adc
jno
in
sbb
xchg
aas
adc
add
push
addr16
inc
das
aas
mov
pop
loop
push
xchg
sarb
imul
adc
cmp
dec
lret
pop
xlat
psrld
ds
js
sbb
adc
cmp
dec
jmp
subl
inc
sub
ret
xor
repz
cmp
mov
push
fsubp
cwtl
mov
jnp
out
aad
in
out
sarb
or
xchg
call
pop
fimull
jnp
sahf
scas
sahf
stos
lods
adc
cmp
cltd
push
in
xlat
fdivrl
adc
xlat
mov
add
inc
rcl
leave
xor
mov
push
cs
dec
pop
lahf
jns
xor
cmpsb
mov
ljmp
pop
cmp
xchg
lret
mov
pushw
sub
nop
xor
lods
dec
cmp
adc
enter
or
xor
xchg
ret
dec
jl
xchg
cmp
enter
and
xor
sti
fs
mov
sub
dec
xlat
pop
cmp
mov
ss
aad
mov
pop
sarb
clc
push
dec
mov
lcall
hlt
pop
pop
mov
mov
and
repnz
das
adc
in
stos
cmp
cs
leave
jmp
cs
add
in
jbe
bound
popa
pop
lret
pop
xchg
daa
gs
mov
lret
jp
mov
sub
aas
push
adc
enter
jo
cmpsl
orb
fs
fstl
add
mov
mov
pusha
sbb
cmpl
add
mov
out
mov
cmp
lods
ss
and
insb
dec
cmpsl
test
adc
into
rcrb
inc
fs
push
jb
add
xchg
add
loopne
push
or
pop
inc
add
push
push
cmp
lods
fcoml
ret
xor
dec
cwtl
mov
in
xchg
inc
jo
push
xor
imul
out
sbbl
mov
rol
push
iret
mov
in
mov
jge
rol
dec
xor
mov
mov
adc
add
adc
dec
jmp
aas
xchg
ljmp
adc
into
fists
decl
loop
push
jo
mov
inc
outsb
and
fwait
jg
sbb
aad
pop
movsl
and
sarb
xchg
push
scas
and
inc
pop
jb
inc
movsb
repz
push
mov
out
mov
movsb
cmp
and
ljmp
mov
lods
shll
int3
out
sti
inc
xor
add
mov
rorl
push
hlt
test
lods
mov
mov
lock
mov
and
mov
out
fidivrl
bound
clc
insl
xchg
cmp
or
cmp
loop
clc
sub
movsb
cmc
ds
pop
jl
lods
mov
dec
popf
dec
mov
hlt
push
xor
xchg
push
cmp
test
pop
mov
call
je
test
addr16
xchg
mov
adc
arpl
ljmp
gs
scas
jmp
adc
inc
mov
cld
dec
pop
clc
jno
jae
dec
xor
sub
pop
mov
inc
sbb
sub
lret
lret
sbb
pop
fwait
inc
mov
pop
adc
dec
stc
inc
ss
xchg
xchg
jb
cmp
mov
mov
sub
pop
movsl
and
cmp
outsl
xchg
scas
adc
imul
pop
mov
xor
test
sti
adc
cwtl
jcxz
sti
push
sub
gs
insl
xchg
mov
mov
pop
jle
pop
mov
aas
jg
and
mov
xor
xor
shll
fnstcw
stos
or
outsb
adc
mov
jb
xlat
cltd
and
sub
shrb
cmp
ret
xor
fisubs
inc
push
xchg
xchg
sahf
push
lret
test
popf
pop
mov
jo
rcll
push
cmp
fimuls
mov
movsl
xchg
fisubrs
lock
popa
rorl
xor
jne
mov
ret
or
xchg
stc
fisttps
pop
loope
call
or
mov
or
mov
adc
xchg
rcrb
pop
jae
int3
out
inc
sub
rcrl
sahf
and
mov
sbb
inc
mov
inc
pop
cmp
jp
jb
pop
and
add
cmp
stc
fcoml
loopne
ljmp
jo
ss
pop
lea
arpl
dec
leave
rclb
fadd
popf
or
jno
andb
pop
imul
idivl
aas
bound
sbb
add
cli
es
dec
and
stc
and
test
sbb
ret
shlb
mov
mov
cmp
xchg
jb
jmp
inc
sbb
in
jbe
clc
jnp
dec
xchg
xor
daa
dec
jl
dec
and
xor
cmpb
ficoms
cmp
xchg
lods
push
xor
rclb
jecxz
xchg
neg
scas
in
insl
ss
dec
push
mov
mov
inc
push
xor
loope
inc
scas
mov
mov
into
scas
rol
sub
jp
test
cltd
clc
cmp
loope
sti
xor
dec
movsb
jns
pop
cmp
mov
xor
mov
jge
fimuls
imul
aaa
shrl
mov
mov
loop
pop
xor
stc
jl
test
adc
enter
sahf
lds
cmp
adc
xchg
add
pop
pop
in
repz
mov
rcrb
fsubrs
jecxz
add
add
cmp
ljmp
test
sbb
dec
mov
inc
adc
jecxz
sub
mov
or
adc
mov
lds
cwtl
popf
aas
adc
xchg
lods
scas
mov
shll
mov
popf
movl
fbstp
or
lahf
int
lock
sbb
dec
inc
stos
movl
data16
andl
mov
cld
lret
pop
fsubr
cmp
add
fwait
dec
mov
lret
pusha
scas
push
nop
inc
xchg
sub
and
dec
cmp
sti
xchg
icebp
dec
cmc
jle
pop
mov
mov
xchg
out
jp
stc
jo
pop
aaa
les
fnstcw
pop
pop
inc
inc
mov
pop
dec
sti
popf
ds
jmp
mov
sub
ret
and
pop
mov
out
cmpsb
sbb
and
ds
sub
enter
leave
orl
adc
sub
rcrl
xchg
repz
cltd
jb
decl
lods
shll
lret
pusha
jae
cs
arpl
jl
cmpsb
pop
call
out
call
mov
inc
jns
pop
xchg
mov
mov
dec
push
pop
pop
aaa
inc
out
lods
ret
mov
mov
mov
jecxz
cmp
jns
icebp
jmp
cmp
popf
fcos
adc
push
insl
or
and
clc
mov
inc
sub
sbb
mov
bound
mov
in
cmp
sbb
ds
xchg
adcb
pop
jmp
dec
icebp
js
imul
in
pop
sbb
in
push
subb
daa
cltd
and
loop
sub
cmc
hlt
call
lock
xchg
cwtl
adc
lret
call
pop
ds
push
aaa
xchg
push
insl
insl
iret
push
aam
aaa
xchg
lods
sub
dec
popa
adc
push
and
fldl
mov
jge
push
int3
adc
or
addr16
mov
outsl
cmp
out
push
mov
push
ret
cmp
and
jge
push
jae
sbb
jae
xor
js
jb
cmp
aas
push
stc
jae
out
outsl
and
mov
mov
ret
dec
movsl
mov
cltd
jne
adc
pop
clc
mov
mov
pop
aam
add
rcll
in
lods
andl
inc
mov
hlt
lret
jg
push
leave
aaa
addr16
sti
stos
add
divb
pushw
sbb
rcll
adc
lea
xchg
mov
jg
or
sub
ret
iret
and
repz
fcmovbe
out
jbe
aaa
outsl
jo
add
add
or
mov
inc
sbb
fisubl
in
lcall
mov
sub
sbb
jo
enter
sub
jp
rcrb
push
sub
shlb
mov
lock
push
mov
lahf
cmp
out
or
mov
cmp
in
jne
jg
mov
xorl
das
or
movsl
in
mov
push
pop
mov
popf
dec
mov
lahf
dec
dec
aad
fcoml
mov
imul
aaa
cmp
insb
int
push
repz
inc
xchg
jp
pop
mov
xor
dec
inc
imul
test
mov
push
shl
dec
xlat
or
mov
std
inc
sbb
test
ljmp
and
mov
imul
push
mov
push
shll
dec
imul
popl
sub
insl
stos
xchg
mov
stos
xchg
xor
add
mov
out
jae
sbb
fsubrs
sub
push
sub
mov
or
aam
shrl
jns
cmp
test
jne
lods
loop
sub
imul
mov
pushw
adc
addr16
out
leave
sbb
or
xchg
fidivl
mov
xchg
fsubl
aam
adc
int3
mov
sbb
push
test
pop
outsl
fcmovu
rcl
loop
dec
scas
sti
mull
push
ret
insl
lcall
sub
in
cmp
cmp
pusha
mov
stc
sbb
or
mov
leave
gs
push
sub
pop
dec
jle
adc
add
sti
and
ficompl
dec
xor
das
xchg
lret
bound
nop
push
xor
mov
inc
clc
lods
cmp
mov
xchg
mov
out
rorb
sti
in
or
popa
in
leave
scas
mov
xchg
sub
stos
inc
push
lahf
loope
sub
dec
cmpsb
inc
rclb
bound
cltd
jo
push
inc
sbb
leave
cmp
pop
adc
xchg
cmpsl
aam
xchg
imul
clc
inc
lock
int
iret
sbb
subl
push
icebp
cmp
xchg
arpl
push
adc
nop
push
dec
hlt
aas
push
add
ljmp
std
sti
mov
mov
lods
or
mov
sbb
pushf
ret
xchg
sbb
mov
inc
pop
cwtl
movsb
push
in
out
sbb
jns
rorl
mov
mov
push
push
cld
add
fstl
popa
push
lods
push
xchg
jg
dec
sbb
add
je
xchg
push
imul
sar
and
insl
aaa
clc
insb
fincstp
inc
repz
fbld
or
sbb
jbe
xchg
mov
insb
ja
xchg
jl
pop
adc
sub
lds
sbb
lods
add
adcb
aaa
and
pop
fbld
jecxz
mov
scas
sahf
fcmovnu
lds
sub
sub
push
mov
sbbl
pop
shl
nop
mov
stos
and
push
mov
mov
xchg
sub
les
pop
pop
add
in
sbb
rorb
xchg
or
xchg
sbb
in
sbb
lods
cmp
lock
cwtl
xor
add
ret
jbe
stos
or
inc
out
mov
clc
lret
addl
mul
out
xor
adc
push
leave
mov
dec
sub
dec
inc
adc
jo
adc
inc
mov
mov
scas
cmp
sub
bound
push
ret
movsl
adc
adc
mov
or
cmp
mov
mov
pop
sub
cwtl
je
xchg
add
pop
cmpsb
dec
jb
xchg
je
mov
add
push
xlat
mov
sti
and
xchg
or
in
cs
loop
mov
mov
push
fwait
mov
fidivrl
or
aas
nop
adc
pop
and
mov
in
aad
rorb
in
inc
imul
sub
xchg
dec
stc
mov
scas
cmc
repz
mov
enter
cli
mov
dec
in
xlat
push
pop
stc
or
pop
and
lods
push
sbb
jb
repz
jp
mov
scas
pushf
divb
cmp
fisubs
cmp
sti
outsb
jne
stos
movsl
pusha
mov
add
and
jnp
jge
sti
jno
push
inc
fdivrs
mov
or
jo
add
pusha
clc
out
aad
stos
pop
mov
and
xchg
pop
hlt
xchg
push
rorl
sub
mov
int3
test
xchg
add
in
push
inc
and
jp
adc
jb
icebp
cmp
push
jp
shl
adc
mov
and
daa
roll
rcrb
add
lret
scas
test
pushf
adc
xlat
sbb
ss
and
iret
repnz
adc
inc
jae
lock
mov
xor
aad
adc
lret
sahf
decb
pop
imul
je
xchg
aad
push
push
push
sbb
inc
jns
cs
test
hlt
cmp
add
pop
out
arpl
cltd
pop
int3
ja
and
in
jb
insl
xor
inc
pop
aad
jecxz
xchg
repnz
std
cli
push
push
mov
pop
fisubs
cmpsl
addr16
cmpsb
sub
pop
mov
loope
dec
rcll
jl
mov
les
add
gs
pusha
mov
push
cs
outsl
inc
imul
cmc
stos
jnp
test
jecxz
and
mov
add
enter
ds
jo
cmp
ret
cwtl
callw
out
sbb
repnz
fcomps
jl
mov
pusha
cs
push
and
add
mov
les
hlt
addb
pusha
and
xor
inc
xor
adc
lock
loopne
shlb
in
hlt
addb
pusha
xor
xor
inc
xor
adc
xor
loopne
shlb
mov
sbb
cmp
push
sbb
inc
xor
adc
add
mov
mov
pop
pop
sbb
jg
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
