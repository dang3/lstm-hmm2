arpl
or
int
dec
int
jecxz
inc
mov
cltd
sbb
ret
das
sub
jmp
shl
push
mov
daa
sub
popa
cmpsb
cmpsb
jns
ret
push
xchg
sti
adc
cmp
jo
mov
aaa
inc
outsl
es
jle
fsubl
das
xorb
inc
mov
push
add
mov
mov
jne
lds
stc
add
pop
adc
inc
mov
and
daa
or
mov
and
gs
xor
outsb
ljmp
in
gs
and
inc
or
or
stc
inc
testl
jo
imul
imul
jg
push
leave
inc
addb
enter
sbb
push
fists
leave
je
push
jb
push
xorb
fisttpl
in
rolb
dec
jmp
dec
mov
adc
xchg
dec
loope
jne
loope
mov
fstl
add
pop
mov
adc
xor
sahf
loopne
fcomps
incb
push
lcall
xor
test
adc
adc
mov
icebp
loop
aaa
mov
leave
pushf
pop
dec
push
nop
and
sub
mov
pop
pop
adc
mov
arpl
shrl
jbe
sbb
ret
push
jp
push
cmp
pushf
jl
pop
cwtl
sbb
outsb
mov
mov
adc
imul
or
and
cmp
or
sub
mov
add
xor
pusha
ss
lods
stc
and
mov
dec
jno
int3
or
push
sbb
jno
call
mov
mov
lods
adc
inc
mov
sub
dec
nopl
and
stos
ret
mov
pop
ja
xor
out
mov
xor
dec
loope
mov
mov
aad
mov
sbb
push
cmp
stos
push
mov
adc
scas
cmpsb
in
gs
xchg
pop
sub
or
in
in
xchg
addb
fdivrl
lock
xchg
hlt
mov
imul
fisttpl
inc
add
jo
popa
out
jl
clc
push
dec
test
mov
inc
loopne
sub
fldenv
jmp
and
les
push
dec
test
inc
xchg
out
jnp
sbb
pop
cld
xchg
or
out
sbb
adc
xchg
dec
loop
repnz
out
ds
jb
mov
inc
cwtl
in
les
and
pop
or
je
loope
and
jno
out
enter
mov
mov
insl
daa
push
add
data16
pop
inc
cmpsl
mov
xchg
loopne
dec
mov
subl
inc
bound
cld
or
pop
adcl
fnstenv
pushf
into
iret
std
orl
stos
mov
nop
loopne
adc
cmp
mov
mov
dec
mov
mov
in
lock
push
push
bound
xchg
mov
rcll
pop
or
pop
int3
es
ficomps
push
add
mov
dec
jno
sub
scas
push
pop
mov
xor
movsb
aam
out
add
inc
mov
fidivl
sarl
mov
jg
in
rcll
negb
jo
fiaddl
mov
add
dec
test
dec
repnz
arpl
adc
pop
pavgb
test
push
adc
mov
pop
pushf
shl
pop
and
mov
dec
mov
es
nop
idivl
mov
pop
insl
sub
or
push
out
lcall
call
shl
lret
or
stos
xchg
iret
in
add
in
cmp
repz
xchg
xor
roll
fldl
rcll
mov
cmpsl
test
fldt
les
mov
cmpl
arpl
fwait
cwtl
mov
xchg
mov
js
iret
int3
fwait
sub
xchg
jns
add
movsb
std
adc
or
jmp
or
popa
pusha
cmp
in
lret
dec
ljmp
adc
iret
sbb
pop
inc
stc
sub
push
test
cmpsl
mov
movsl
jb
adc
or
and
push
cmc
lcall
mov
sbb
mov
and
or
or
sbbl
jle
xchg
mov
push
mov
mov
mov
imul
and
imulb
inc
dec
aaa
xorb
mov
das
cmp
fs
jg
mov
es
stc
dec
dec
sbb
inc
dec
adc
adc
test
pop
mov
mov
push
fcoms
add
mov
pop
js
or
push
xchg
loopne
xchg
inc
das
out
add
mov
scas
jge
clc
and
leave
dec
or
test
lods
dec
rolb
aam
stos
xchg
add
outsl
std
push
lock
ror
mov
jecxz
xor
mov
jns
les
dec
jmp
sbb
aad
mov
jg
pusha
jo
dec
aas
data16
in
jns
or
pop
jns
in
ja
stos
pushf
push
fidivl
stc
sub
push
mul
or
ret
jecxz
pusha
pop
sbb
add
adc
mov
dec
jge
call
pop
or
and
push
mov
or
xorl
repnz
jb
clc
fiaddl
mov
and
push
inc
stc
pop
dec
push
push
and
rolb
mov
push
inc
movl
cmpsl
cmc
pop
push
sub
leave
jne
mov
adc
lahf
xor
push
xor
push
xlat
inc
push
push
or
mov
mov
sti
mov
push
mov
inc
outsb
in
xchg
arpl
or
insl
stos
dec
mov
orb
xor
pop
cmp
dec
pop
jo
pop
je
add
jmp
jmp
cmpsl
sub
pop
leave
sub
testl
fisttpll
dec
jno
sub
stos
mov
out
pusha
leave
das
lea
mov
ss
fidivl
in
push
lods
adc
mov
dec
lret
jne
adcb
inc
mov
add
mov
test
sarl
les
test
nop
popa
jbe
dec
jmp
cmpsb
sti
and
push
sub
sti
push
adc
inc
imul
addr16
call
and
or
lods
popf
bound
lods
jmp
push
mov
scas
inc
fbstp
sbb
test
sahf
xchg
int3
scas
push
lahf
cmp
jnp
or
xlat
movsl
lock
inc
add
nop
arpl
adc
sbb
mov
or
or
mov
push
sbb
cmp
inc
scas
xor
test
inc
cmpsl
adc
out
and
and
lret
hlt
dec
jp
jle
jae
pop
jmp
or
and
inc
push
fdivrl
or
movsl
jb
icebp
stos
stos
inc
cli
sbb
insl
stos
dec
mov
test
mov
cmpsl
push
pop
jbe
mov
repnz
adc
pop
or
push
idivb
cli
shll
stos
ja
daa
sbb
xchg
xlat
xchg
add
cli
int
cmp
mov
gs
pop
adc
popa
outsl
sbb
stc
adc
addl
adc
fisubrl
or
add
popf
mov
lret
insb
dec
jmp
cli
sbb
push
sbb
inc
daa
in
xor
outsb
outsl
jb
out
add
mov
fidivrs
mov
push
jecxz
aas
scas
mov
shlb
lock
xchg
imulb
sub
pusha
pop
sbb
sahf
ret
mov
fdivl
out
push
dec
fucomp
jbe
push
into
pop
dec
adc
add
push
push
push
ficomps
and
adc
test
iret
test
lods
push
mov
shrb
pop
vmovlhps
inc
mov
and
mov
cwtl
in
les
mov
movsb
std
adc
ss
clc
inc
mov
stc
sub
add
addr16
mov
enter
js
and
fldl
shlb
cli
cmp
leave
imul
imulb
jae
hlt
mov
mov
lock
lea
mov
cs
dec
fcoms
shl
push
sbbl
fldenv
cmp
test
lret
push
jns
shlb
ss
mov
aaa
into
xor
rcrb
jle
push
jle
popa
repnz
dec
lock
dec
ds
or
shlb
js
repz
inc
cmp
stos
mov
rcr
mov
andb
adc
push
xchg
sbb
dec
rolb
sub
scas
icebp
sub
xor
jmp
js
mov
and
jno
sahf
or
and
jecxz
out
fstl
arpl
stos
leave
jecxz
iret
in
jmp
cmp
nop
lcall
pop
jl
cmpsl
xchg
outsl
pop
stc
es
addl
aam
dec
mov
nop
lcall
mov
mov
inc
mov
push
mov
ret
mov
scas
mov
aas
or
loopne
scas
or
dec
sub
cmpsl
hlt
pop
push
daa
sub
mov
fdivrs
xchg
and
adc
adc
dec
insl
daa
push
add
jo
push
mov
arpl
fistps
jnp
inc
jmp
or
mov
dec
mov
test
mov
cmpsl
push
pop
jbe
mov
adc
pop
in
fildl
sub
sub
pop
lret
out
idivb
mov
cmp
loopne
mov
out
inc
sub
adc
or
adc
out
or
int3
test
fdivrl
inc
add
out
mov
lret
pop
add
mov
xchg
in
sahf
xchg
jbe
mov
cmp
add
cmp
aad
cmpsb
sti
and
add
aam
adc
or
sti
add
lret
push
pop
xor
test
sub
mov
inc
out
stc
cli
push
loop
mov
int3
cmc
lret
mov
shl
adc
push
sbb
mov
stos
push
cmpl
cltd
pop
jge
popf
mov
push
test
ljmp
jg
inc
fmuls
pushf
lods
xchg
inc
add
dec
xrelease
xchg
shl
sbb
jno
cmpsb
jnp
or
int
dec
jl
adc
sub
movsb
add
lea
popf
insb
add
fistl
jne
frndint
fldenv
jl
dec
push
dec
lret
inc
jmp
or
and
aad
push
cmp
jmp
stos
sub
int
loope
and
cmp
stos
enter
and
sbb
iret
adc
mov
and
dec
or
js
mov
iret
cmp
sub
pop
push
into
pop
adc
push
cmpsl
test
cmp
inc
add
repnz
arpl
mov
dec
in
negb
enter
pushf
sub
mov
xchg
and
jmp
into
jae
push
adc
faddl
mov
mov
xor
push
mov
aam
adc
adc
popf
enter
cmp
mov
add
sbb
mov
mov
mov
das
mov
fwait
mov
mov
into
into
sahf
and
mov
lret
fwait
push
mov
inc
add
pop
movlps
les
adcb
pop
insb
sub
adc
and
lahf
testb
imul
xorb
mov
out
stos
cmp
les
sahf
dec
fildl
push
iret
ljmp
cli
xor
rorb
adc
sti
es
add
lret
dec
das
dec
fsubr
stos
dec
mov
xchg
inc
mov
pop
dec
in
lock
push
push
bound
and
cli
sub
insb
mov
mov
sub
lret
scas
mov
add
and
ds
mov
daa
pusha
sarb
scas
mov
sbb
inc
mov
cwtl
lods
imul
test
or
jno
popf
xchg
out
in
push
test
in
push
cmc
xlat
stc
and
add
mov
or
jecxz
sahf
addr16
and
push
jne
inc
adcb
cmpsl
xorl
pop
adc
inc
arpl
lea
cmc
xor
les
mov
loopne
std
or
std
push
negb
cld
faddl
mov
fcmovne
inc
addb
mov
dec
jnp
push
push
mov
aad
adc
cli
sub
loope
adc
popf
enter
mov
fbstp
xchg
rep
dec
fidivs
jnp
fisubrl
lods
mov
shr
or
and
mov
outsb
js
mov
and
test
nop
jne
arpl
js
std
sbb
fiaddl
inc
mov
stc
jb
cltd
cwtl
push
rcl
xor
out
sub
loope
and
into
iret
popf
daa
mov
movsb
cld
les
ja
adc
xor
imul
out
jle
push
lcall
xor
mov
fnstenv
pop
cli
stc
scas
cmpsl
push
or
cmpsb
pop
mov
dec
outsl
lcall
mov
jnp
mov
mov
xlat
sbb
sub
mov
cmp
scas
icebp
imul
bswap
jne
xor
sub
push
pop
and
mov
sub
lret
cmpsb
dec
sbb
xor
dec
ds
leave
pushf
xor
or
ja
pusha
lds
into
test
repnz
roll
iret
pusha
adc
xchg
and
iret
or
or
sbb
inc
cmc
andb
mov
mov
push
or
daa
call
aad
imul
leave
push
lds
roll
dec
daa
lods
fisttpl
leave
ja
adc
arpl
movsb
push
aam
arpl
pop
sti
stc
pop
cmpsl
mov
cmpsl
hlt
pop
push
daa
jecxz
add
sub
xchg
and
adc
adc
dec
insl
daa
push
add
data16
mov
pop
inc
dec
sbb
fsubl
mov
or
std
sbb
addl
fists
jb
sub
mov
and
nopl
jno
es
sub
outsl
bnd
jmp
jnp
inc
dec
sbb
sub
pop
and
xorb
or
jl
sbb
push
les
inc
lret
mov
push
inc
sub
jge
imull
or
and
mov
es
pop
enter
mov
dec
rorl
xor
push
ret
and
xchg
sub
mov
aam
sti
or
loop
or
mov
cmp
xchg
and
iret
or
or
sbb
inc
cmc
andb
shll
das
shl
xchg
cld
or
daa
call
mov
scas
jle
jo
xor
xchg
jp
jb
push
mov
mov
in
rolb
inc
sti
cmp
enter
mov
inc
adc
js
add
jb
scas
and
pop
or
js
fdivrl
xlat
fcomps
stos
push
je
js
loopne
push
daa
xchg
mov
mov
cld
xchg
in
out
sub
movsb
int3
int3
imul
popf
push
cs
dec
fsts
mov
aam
push
inc
push
inc
cmp
scas
les
pop
jo
dec
push
dec
jbe
xor
push
lahf
adc
outsb
outsl
es
mov
dec
push
push
sbb
sbbl
pop
stc
jl
lock
jne
lds
iret
mov
adc
dec
mov
out
sarl
inc
mov
pop
sahf
scas
icebp
addb
mov
and
push
mov
lods
xchg
and
mov
ljmp
jmp
sbb
mov
nop
addr16
inc
jb
les
les
lret
and
jae
push
lea
fisttpl
lds
mov
leave
adc
xchg
dec
loop
repnz
jecxz
int3
lret
xchg
xor
fidivrl
xchg
in
imul
out
or
jb
jg
inc
fldl
shlb
cli
jecxz
jge
std
sbb
push
cmc
fiadds
imul
inc
rcr
or
mov
movsb
adc
dec
aam
pop
lock
sbb
adc
int
leave
test
movsl
shlb
loope
icebp
scas
aas
sub
enter
mov
mov
add
mul
jb
in
inc
mov
test
push
ret
and
push
adc
or
push
mov
aam
pop
fiadds
stc
and
outsl
test
jbe
push
mov
jmp
xor
xchg
xchg
xchg
hlt
and
out
sbb
sbb
dec
icebp
mov
adc
cmpl
out
ret
or
mov
and
push
leave
lret
leave
punpckhdq
mov
adc
xor
int
jmp
inc
bound
sti
or
xor
mov
cmp
fsubrs
ret
call
stos
xor
fdivrp
dec
xchg
mov
addr16
and
jne
icebp
xchg
rcrl
xchg
cli
shrb
ss
push
cmp
pop
mov
sub
pop
dec
outsl
xor
or
int
in
stos
dec
mov
sub
cmc
dec
popa
and
push
jbe
dec
into
repnz
cli
mov
arpl
rcr
out
xor
dec
fcoms
shl
push
sbbl
push
adc
add
pop
insl
push
add
mov
dec
jno
sub
pop
adc
cmp
sub
aam
out
add
inc
imul
sub
mov
test
in
rcll
negb
enter
pushf
adc
push
arpl
sbb
pop
cs
sub
cli
scas
cmp
insb
adc
and
aam
int3
mov
push
frstor
jecxz
js
dec
xchg
push
cld
lahf
out
cmp
xor
fidivl
fwait
dec
push
push
push
shl
js
push
fstpl
fmuls
rorb
inc
pop
subl
mov
in
roll
inc
mull
cmpsl
popf
push
mov
enter
andb
mov
scas
pop
movsb
clc
scas
add
cmc
in
xchg
xchg
sahf
aad
cmp
out
popf
mov
out
add
xor
push
insl
inc
xchg
push
insb
inc
jae
add
enter
sbb
je
dec
loopne
push
es
mov
adcb
inc
addb
adcb
sarl
les
push
dec
cmp
mov
cmp
pop
clc
sub
push
ficoms
out
or
call
add
adc
jb
mov
adcl
add
lret
insb
stos
inc
out
idivb
cli
shll
aas
sbb
sbb
xchg
push
ret
out
mov
xor
dec
repnz
pop
sbb
cmc
fisttpll
push
clc
jmp
mov
out
scas
rclb
dec
jg
xchg
loopne
jnp
or
push
sub
cmp
cmp
sbb
jecxz
je
dec
mov
sub
dec
inc
jle
pop
shrb
mov
jle
or
mov
aam
adc
or
pushf
popa
adc
inc
sbb
cli
jns
js
xchg
sbb
loope
arpl
pop
subl
jge
jo
dec
fistpl
push
lahf
sbb
mov
fstl
cmp
in
push
mov
cmpb
push
mov
out
cmpsb
cmp
dec
stos
mov
push
and
mov
pop
iret
and
sbb
and
in
mov
mov
add
mov
adc
xor
add
or
inc
jo
ds
or
jno
or
push
int3
leave
ret
inc
in
jns
shrb
dec
xor
adc
into
inc
jae
xchg
es
cmc
dec
leave
inc
addb
daa
push
add
jno
add
jo
jbe
jecxz
push
fsts
icebp
loop
aaa
punpckhwd
push
sbb
clc
incb
mov
inc
jl
pop
push
out
push
push
arpl
leave
cmpsl
or
fists
jno
and
sar
ljmp
cld
lea
mov
jge
scas
shr
icebp
ja
mov
arpl
sub
jmp
push
push
fs
jae
sti
lcall
mov
xor
rcrb
jb
pushw
mov
or
mov
int
jge
and
lcall
xchg
aam
cli
or
cltd
mov
sbb
mov
test
nop
popa
jbe
inc
scas
out
call
ds
push
jns
lcall
jo
lcall
xchg
imul
pop
cmpsl
xchg
pusha
add
xorb
roll
push
out
daa
rcr
jp
sub
mov
or
xorl
repnz
and
addl
pop
or
test
xor
push
xor
push
test
das
mov
insb
mov
inc
scas
jl
popf
repnz
subb
push
pop
pop
adc
mov
arpl
inc
ret
test
jmp
addr16
stc
es
xchg
test
out
xchg
loop
jo
inc
out
add
repz
mov
adcb
push
or
sub
push
and
imul
pushl
nop
jecxz
jae
push
stos
lea
shlb
fstpt
loop
mov
lret
arpl
pop
lea
enter
cmp
lock
dec
aas
mov
leave
jae
jg
in
ret
adc
jecxz
jmp
addr16
movsl
lcall
jns
xchg
and
shll
int
mov
fildl
popf
clc
push
dec
test
inc
sbbl
jmp
xchg
mov
arpl
inc
inc
lock
into
jbe
lea
add
sti
stc
cmp
cmpsb
xchg
or
test
pop
insl
and
cmpsl
lods
or
addl
das
inc
fdivl
hlt
and
or
in
or
and
sub
insl
mov
mov
adc
xchg
dec
adc
and
pop
lods
and
test
add
adc
out
mov
add
mov
ret
rclb
mov
je
push
and
jecxz
or
dec
dec
insl
daa
push
add
gs
jnp
int3
push
or
add
mov
inc
fs
jecxz
mov
mov
dec
mov
mov
mov
xchg
xor
roll
sbb
mov
adc
fstpl
fmull
and
fcom
stos
mov
sbb
icebp
jbe
push
out
or
xor
lock
mov
divl
int
dec
or
ret
loop
lds
push
stc
and
lret
push
pop
cli
rcrl
lods
scas
lcall
repnz
pushw
mov
popa
movl
insb
in
or
push
push
jle
lret
push
leave
mov
lret
mov
xchg
add
and
outsl
test
add
and
add
cmp
aam
int3
mov
push
fisttpll
or
push
lret
cli
add
scas
lods
xchg
push
rep
popf
bound
adc
fiadds
loopne
and
lret
cmp
outsb
mov
stos
cli
jne
xchg
ljmp
mov
jns
gs
xchg
xchg
pushf
shlb
and
push
popa
sbb
inc
andl
shll
mov
cmp
push
movsl
iret
push
sbb
or
insb
and
xchg
jne
scas
mov
inc
push
cmp
aam
adc
mov
pop
fdivrl
ja
lods
pusha
idivl
fs
andl
popa
sbb
inc
cmpb
fs
push
jns
test
or
shlb
mov
aam
adc
sbb
ds
ret
xor
sub
cld
mov
and
or
cmp
in
sar
and
addb
add
lds
sbb
and
and
jae
sti
xor
rolb
es
scas
xchg
and
mov
sub
lret
shl
sbb
xor
mov
or
leave
dec
addl
outsb
xchg
test
mov
push
mov
adc
inc
add
lea
and
adc
stc
and
mov
pushf
sbb
pop
out
push
adc
scas
int
insl
sub
or
push
out
lcall
push
scas
lods
xchg
push
rep
popf
bound
adc
inc
push
xchg
loope
insb
sbb
arpl
in
rclb
imul
and
xlat
add
dec
stos
pop
js
test
dec
inc
shll
les
das
leave
cli
sub
sub
cmpsl
hlt
pop
push
daa
sub
mov
add
cmp
ss
jae
adc
out
jg
hlt
or
loopne
adc
cmp
mov
lods
pop
jle
fadds
gs
mov
inc
dec
pop
jo
rclb
pop
out
push
pop
add
dec
lods
cmp
or
leave
testb
cld
jo
dec
push
jmp
fistpll
shlb
xor
pop
lea
add
push
repz
ficomps
roll
test
scas
inc
mov
shll
rep
fsubl
inc
push
xchg
fcomp
in
stos
je
sti
dec
outsl
fcomip
mov
add
nop
loopne
das
dec
daa
stos
cs
sub
xor
gs
xchg
lock
ja
pop
stos
lods
ret
cld
or
daa
call
mov
cmp
cmpsb
xchg
or
test
insb
imul
mov
mov
mov
leave
xchg
xor
adc
and
idivl
into
stos
jbe
jecxz
ds
jb
sub
inc
test
push
mov
adc
insb
pop
and
dec
jecxz
insb
sub
adc
and
lahf
testb
loop
fstl
pop
imul
adc
es
or
into
fsubp
mov
ljmp
test
mov
add
push
out
or
mov
add
movsl
out
clc
and
jp
push
pop
cmc
aaa
jno
les
xlat
sbb
sub
mov
cmp
test
jge
mov
and
call
mov
js
inc
cmp
clc
sub
pusha
cmp
sbb
sbb
insl
leave
cmp
out
cmp
jne
pop
and
mov
or
aam
dec
leave
inc
mov
push
sbb
sub
sub
mov
lcall
or
mov
xor
dec
loope
mov
stc
sub
adc
cmpl
mov
jl
xchg
into
cwtl
jecxz
mov
push
adc
pop
out
push
adc
scas
int
int3
adc
sbb
adc
inc
xchg
push
adc
test
cld
or
daa
call
xlat
out
mov
test
jle
sub
push
outsl
xchg
subb
and
pushf
add
stc
shll
pop
test
les
mov
mov
jne
lcall
push
out
mov
stos
cli
jne
xchg
or
and
lea
sahf
ds
jb
sub
inc
test
sub
push
arpl
pop
mov
push
ss
push
test
sbb
push
sbb
or
insb
and
or
popf
adc
and
adc
mov
shrb
mov
subb
push
pop
dec
shll
in
es
cld
movsb
ljmp
sbb
orb
push
imul
sbb
jno
les
les
xchg
mov
mov
lret
push
rcll
pop
or
pop
int3
es
ficoms
mov
cmp
fs
jg
mov
es
mov
pop
push
into
pop
adc
push
cmpsl
test
leave
mov
out
in
push
stos
jmp
mov
je
rcll
negb
enter
pushf
sub
mov
ret
std
fstps
testb
loop
or
movsl
loopne
add
inc
dec
enter
sbb
sub
dec
inc
jle
pop
rolb
outsl
ret
das
adc
pop
adc
or
sti
add
cmpsl
inc
movsl
push
movsl
out
lods
mov
and
mov
or
and
inc
and
lret
inc
rcrb
push
subl
pop
mov
or
and
addb
pop
jmp
test
add
call
and
jno
jg
and
push
imul
ja
pop
cli
das
orb
cld
adc
push
and
loope
and
sbb
jne
inc
adc
mov
and
sbb
outsl
fmul
xchg
daa
push
add
data16
mov
ja
sub
test
mov
push
and
push
jae
rcll
addl
mov
add
addl
fcoml
jnp
inc
dec
sbb
xor
cmp
scas
xorl
pop
fiadds
xchg
dec
mov
ror
inc
scas
jp
adc
jge
push
dec
jno
rol
push
push
cmc
jno,pt
les
js
adc
and
lret
inc
mov
and
test
rol
insl
adc
xor
or
dec
test
stos
mov
xchg
arpl
in
push
stos
sbb
xchg
lret
negb
enter
pushf
sub
mov
pop
lahf
lods
testl
sub
outsl
or
int3
or
jne
stos
lret
mov
aas
push
fs
popf
enter
cmp
mov
das
mov
stos
mov
mov
out
push
dec
rcr
jp
cld
xchg
or
sub
or
xorb
out
ds
jb
stos
lds
or
push
inc
lret
lds
mov
push
hlt
jae
pop
and
pop
outsb
das
std
pop
pop
cmpl
out
add
icebp
test
fwait
and
sub
sbb
fiadds
imul
dec
cmp
cltd
adc
inc
shlb
das
mov
ja
addl
faddl
pop
in
pop
adc
inc
cld
lea
mov
jge
scas
shr
icebp
ja
push
loope
and
repz
mov
xor
cmp
mov
mov
aam
or
pop
cmp
test
add
adc
dec
push
pop
fcoms
pop
push
es
mul
jb
in
inc
mov
test
push
ret
and
xchg
sub
jecxz
lcall
in
stos
mov
movsl
fwait
imul
mov
xchg
sub
in
mov
mov
es
and
cli
cld
jle
pop
roll
sbb
scas
stos
nop
insb
and
mov
mov
add
dec
mov
in
dec
jbe
adc
lock
enter
movsl
imul
aas
or
loopne
scas
or
mov
push
jmp
addr16
lret
jno
rcrl
outsb
adc
xor
cmc
loopne
adc
adc
pop
dec
cmp
pop
pusha
nop
add
pushf
lods
xchg
inc
pop
in
orl
pop
push
jnp
or
xlat
mov
lods
mov
and
pop
xchg
int3
lcall
negb
sahf
dec
leave
inc
addl
dec
fisttpll
sbbl
les
fildl
sub
repnz
shlb
iret
mov
mov
inc
inc
fbstp
scas
ficomps
add
fcompl
fisttpll
pop
insl
push
add
mov
mov
nop
aad
or
sbb
dec
dec
push
mov
into
pop
adc
push
mov
mov
in
and
xor
frstor
faddp
arpl
cli
dec
imul
shlb
jo
adc
push
xchg
inc
out
loopne
shlb
mov
jecxz,pt
ret
inc
dec
in
enter
push
adc
xchg
outsl
sti
and
cmp
outsl
mov
das
inc
addl
repnz
xor
add
sahf
xchg
mov
pop
inc
dec
adc
inc
sub
push
mov
out
pop
test
jno
pop
outsl
stc
sub
push
fadd
dec
jge
cmp
adc
aas
xorb
cmp
lods
pop
lods
ljmp
lods
mov
test
mov
mov
push
les
adcl
inc
pop
dec
cmp
sub
ljmp
clc
jl
movsb
sub
adc
notb
sbbb
inc
jb
push
pop
fstpl
flds
in
xchg
ja
test
add
adc
insl
stos
dec
adc
jo
jns
pop
out
pop
jns
mov
sbb
arpl
and
dec
pop
dec
xlat
outsb
push
jmp
fsubrs
ret
mov
adc
push
rolb
cmpsl
xchg
in
add
mov
roll
fistps
jo
mov
mov
xchg
lds
fcompl
fucomi
fcoml
and
mov
or
add
icebp
popa
lret
cmc
aas
jno
cli
shll
cmp
and
mov
test
xchg
xor
adc
lret
imul
and
xchg
and
scas
sub
push
lods
adc
mov
inc
test
je
fbstp
lret
arpl
xchg
fstpt
jns
jns
cmc
jmp
xlat
sub
shlb
out
push
jno
cwtl
sar
les
jo
dec
fildll
adc
pop
push
jnp
adc
and
and
cwtl
jecxz
mov
pusha
lret
iret
and
mov
rcll
into
ja
and
xchg
out
jle
loopne
sub
arpl
mov
loop
dec
or
sti
add
lret
push
mov
xor
test
sub
add
jo
enter
movsl
push
pop
xor
jecxz
mov
in
adc
push
sbb
mov
fstps
mov
test
pop
mov
adc
xor
bound
bswap
pop
loope
and
dec
cmp
pop
pusha
nop
add
push
stc
es
xchg
jnp
int3
push
or
scas
pop
insl
iret
je
and
stc
adc
inc
push
pop
pop
adc
mov
or
lret
dec
mov
and
pop
out
arpl
inc
ret
mov
rorl
leave
dec
addb
jns
pop
es
in
rcl
sbb
mov
push
dec
stos
jp
sarl
les
inc
out
idivb
cli
shll
aas
sbb
sub
pop
xor
sub
xchg
pop
or
cs
mov
and
mov
sub
rolb
xor
ret
orb
push
dec
stos
inc
filds
ljmp
pop
xchg
ret
mov
nop
and
inc
push
push
in
jl
add
adc
xchg
out
mov
sbbl
jns
les
clc
lret
sub
sti
and
jmp
arpl
and
add
cmp
or
inc
jne
or
and
xor
xor
fwait
mov
test
les
mov
insl
lods
lret
push
je
scas
sar
mov
addl
into
sahf
iret
push
in
inc
and
popf
bound
adc
adc
mov
inc
fbstp
scas
xor
arpl
clc
jo
xchg
mov
js
into
iret
popf
daa
mov
movsb
cld
adc
push
and
jecxz
xor
clc
inc
ljmp
or
insb
and
or
xchg
hlt
lcall
aas
mov
xchg
or
mov
and
add
cmpb
cmpsb
jmp
addb
lods
call
add
ljmp
add
jl
movsl
push
push
push
fcoml
jnp
xchg
in
push
push
bound
xchg
mov
out
aam
sbb
push
mov
daa
sub
popa
roll
adcl
std
shlb
or
fs
arpl
ljmp
test
out
or
mov
comiss
inc
mov
pop
test
mov
xlat
cmc
ror
movb
jnp
shll
ds
mov
pop
pop
inc
mov
inc
pop
push
dec
leave
inc
sbb
daa
out
popf
in
testb
mov
xchg
clc
dec
pusha
adc
pop
lcall
add
and
add
and
xchg
adc
inc
nop
popa
jbe
inc
pop
in
or
and
in
out
cmp
ljmp
jmp
orb
int3
push
clc
das
inc
mov
inc
and
or
lock
xchg
imulb
inc
mov
xchg
adc
bound
mov
inc
cmc
cmp
fisttpll
xchg
clc
push
dec
loopne
mov
lret
inc
xor
test
rorl
adc
and
adc
outsb
mov
scas
mov
rolb
inc
sti
cmp
enter
mov
inc
adc
js
add
jb
mov
pop
or
js
fdivrl
xlat
fcomps
cs
pusha
dec
mov
inc
dec
lret
inc
jmp
and
inc
push
cmp
and
sub
sbb
add
jbe
stc
daa
inc
addl
es
jnp
insb
or
sahf
and
in
sbb
or
and
inc
jno
pop
cmc
lahf
push
jmp
mov
mov
or
jno
scas
shr
icebp
ja
pop
insb
mov
inc
mov
leave
dec
addl
xchg
cwtl
sbb
insb
mov
mov
inc
andb
inc
cltd
xchg
dec
mov
xchg
add
push
jmp
outsb
add
pushf
cmp
mov
adc
sbb
push
lea
stos
orl
cmp
jecxz
ficoms
ja
xor
loope
and
mov
jo
inc
mov
out
sub
dec
xchg
stc
and
addl
lds
pop
es
pop
lods
dec
rolb
sub
scas
icebp
addb
icebp
jne
sbb
push
pop
lcall
push
lret
add
insl
cmpsb
fistpll
adc
cli
sub
inc
inc
negb
lcall
sbb
adc
pop
push
jae
sti
sbb
rclb
lods
jmp
push
mov
scas
inc
fbstp
sbb
test
sahf
xchg
int3
lret
xchg
sti
hlt
gs
mov
movsb
cld
adc
sub
test
data16
or
insl
js
dec
test
push
shl
sbb
jno
jns
adc
dec
mov
subb
push
push
inc
and
inc
dec
lahf
movsl
cs
cbtw
in
les
mov
fstps
cmp
dec
fnstsw
mov
jae
push
loopne
add
pop
jecxz
icebp
push
sbbl
in
add
or
call
pop
enter
lds
aas
jp
push
pop
and
mov
sub
outsb
lods
xchg
pop
mov
sbb
xor
xchg
sti
mov
pop
or
divl
and
iret
or
or
sbb
inc
cmc
andb
shll
das
shl
xchg
lcall
int
int3
lahf
mov
adc
jp
ret
in
outsl
or
xlat
xchg
jne
cmp
ficomps
rcll
jg
push
test
pop
cmp
mov
les
cmpl
inc
mov
or
jns
mov
add
mov
fmulp
mov
pop
lret
lret
in
jnp
mov
mov
and
jmp
or
and
lods
popf
arpl
pop
xchg
flds
imul
dec
stos
lds
jbe
jp
loope
mov
mov
pop
jge
dec
mov
lahf
xchg
dec
out
loopne
scas
ficoms
rorl
adc
pop
inc
pop
iret
mov
add
data16
xchg
mov
dec
jnp
inc
repnz
int
es
mov
cld
adc
enter
cwtl
sbb
inc
test
aaa
add
arpl
insb
inc
xchg
pop
push
jbe
sahf
rcl
lret
inc
or
mov
inc
jmp
lret
dec
mov
and
repnz
mov
cmp
int3
clc
sub
imul
dec
mov
xchg
data16
sbb
mov
loop
mov
sub
add
icebp
mov
sub
cli
aad
cli
daa
jb
mov
addl
loop
arpl
outsb
mov
add
repz
sub
cwtl
or
lret
sub
or
stos
outsl
add
in
push
fimuls
loopne
xor
frstor
test
subps
inc
mov
lahf
cmp
or
mov
and
test
add
and
jmp
xchg
dec
mov
xor
sub
xor
mov
call
xlat
out
shrl
sahf
int
stos
test
sbb
and
sti
and
cmpsb
pop
xor
fnstsw
mov
mov
lahf
and
fnstcw
call
mov
mov
lret
xchg
xor
fidivrl
sti
or
mov
or
je
jecxz
or
popa
pusha
cmp
ss
push
aas
mov
xchg
fwait
mov
xorb
nop
in
pop
and
stos
lea
sbb
xor
or
int
in
inc
lret
inc
mov
and
pop
inc
jo
icebp
je
sti
ficoms
fucomp
js
sub
outsb
push
jmp
sub
dec
scas
jno
mov
inc
add
jmp
and
nop
xchg
rorl
xchg
test
push
ficomps
rcl
lret
dec
inc
sbb
push
les
cmp
ds
int
roll
adc
xchg
xor
or
addr16
mov
into
fwait
sarl
and
push
xor
pushf
or
nop
and
dec
aad
je
jg
adc
jecxz
sbb
stos
mov
xchg
mov
inc
fmulp
mov
adc
stos
mov
sbb
xlat
add
inc
mov
jne
xor
sbb
add
adc
xchg
inc
mov
das
cwtl
ds
sbb
ret
inc
dec
in
shl
bound
insl
cmc
jp
orb
cmp
jae
pop
in
pop
adc
inc
lods
popf
bound
adc
fiadds
loopne
lods
xor
nop
jne
arpl
xchg
push
xor
adc
add
rcl
hlt
scas
cmpb
ja
repnz
ficoms
imul
ret
cmp
jb
mov
leave
dec
mov
push
xor
inc
push
sub
stos
mov
insb
dec
loopne
push
imul
mov
and
mov
inc
push
xor
std
cmc
sub
les
out
jg
testl
fists
jb
pop
loopne
idivb
dec
mov
les
mov
inc
iret
fs
cld
adc
arpl
mov
insl
sbb
in
fildl
sub
js
mov
xchg
pop
jecxz
push
adcl
and
mov
mov
xchg
xchg
push
jmp
pop
sti
adc
cmpsb
dec
sbb
xor
mov
sbbb
sti
les
pop
xor
xchg
in
movsb
cltd
mov
sbb
mov
leave
xchg
add
cmp
xlat
aad
and
cmpsb
sti
and
add
or
mov
call
xlat
out
shrl
repnz
xor
add
sahf
xchg
mov
or
sub
outsb
mov
mov
mov
sub
inc
insb
add
cmpsl
popf
push
mov
enter
push
pusha
and
out
dec
leave
inc
addl
mov
and
loopne
and
sbb
mov
fstps
xor
andl
xchg
or
jno
pop
mov
push
ss
and
and
dec
dec
insl
leave
dec
lea
sub
sub
and
test
add
adc
dec
cli
lcall
cmp
stos
mov
sbb
pop
xorb
cmp
jp
lds
inc
sub
xor
push
je
ds
adc
push
push
sub
inc
mov
add
popa
adc
or
jg
fwait
popa
sbb
inc
cmpb
or
leave
testb
add
add
nop
loopne
mov
ja
daa
sbb
das
inc
addb
es
out
or
int3
xor
pop
mov
aaa
in
mov
add
dec
jp
fildll
test
ret
ret
sub
and
add
cmp
outsl
jae
jg
in
ret
adc
and
jmp
addr16
movsl
lcall
jns
xchg
and
shll
rcll
fistpl
push
cmpsb
sti
and
xor
leave
lods
shl
jae
leave
call
xchg
into
lahf
int
out
shrl
repnz
xchg
fs
push
cwtl
cwtl
lods
jmp
push
mov
lahf
and
fnstcw
call
arpl
mov
in
mov
jle
lahf
cmp
cltd
mov
jo
inc
add
lcall
xor
mul
dec
or
jb
jg
inc
fldl
loop
add
repz
ljmp
adc
inc
push
pop
pop
adc
adc
inc
int
in
stos
dec
sub
pop
ret
fcmovnu
jmp
or
and
sbb
fsubr
mov
mov
jb
mov
out
or
xchg
adc
stos
xchg
sbb
mov
and
or
adc
push
sbbl
dec
and
arpl
enter
dec
mov
mov
dec
aas
push
mov
and
push
jmp
out
mov
adc
ret
orb
jecxz
jnp
ja
xor
and
outsl
scas
frstor
mov
or
inc
fadd
pop
pavgb
lods
inc
mov
and
adc
xchg
bound
ljmp
jne
xchg
out
cs
addl
sbb
sub
or
fcmovne
insb
pop
xor
add
adc
ljmp
and
mov
daa
mov
dec
jbe
das
lret
adc
incb
jge
pop
test
outsl
repnz
push
mov
je
jle
inc
or
or
out
aas
inc
mov
push
mov
mov
pop
inc
nop
jne
arpl
xchg
push
xor
adc
xchg
and
sub
fwait
sub
xchg
jns
add
movsb
std
adc
lds
inc
sub
xor
test
sbb
mov
add
outsl
add
cltd
mov
push
mov
inc
outsb
in
lods
adc
int3
imul
xor
sbb
lock
cmp
pushf
jl
pop
cwtl
sbb
outsb
mov
add
repz
sub
cwtl
or
shlb
cmc
test
or
inc
mov
stos
mov
pop
ja
xor
mov
sbb
daa
pop
loop
lret
lcall
outsb
xchg
stos
xor
and
call
hlt
cmp
pusha
adc
xchg
and
iret
or
or
sbb
inc
cmc
andb
shll
das
shl
stos
push
ret
cld
or
daa
call
xlat
out
shrl
repnz
inc
jae
inc
call
add
test
jne
xchg
cmp
nop
adc
fnstcw
mov
rolb
mov
mov
or
and
sub
mov
cwtl
in
les
call
mov
mov
inc
js
iret
int3
fwait
sub
mov
add
adc
and
loopne
adc
adc
pop
dec
aas
adcb
les
add
arpl
lret
outsl
mov
stc
jne
movsl
jb
repz
in
xchg
ds
sti
or
push
push
fstps
cmp
mov
mov
iret
sub
sbb
cwtl
dec
and
arpl
add
in
inc
loop
mov
xchg
pushf
cmp
or
sub
jl
inc
add
or
and
test
lods
xlat
cmc
ss
les
xor
and
fmuls
mov
in
dec
xchg
sbb
xchg
xchg
dec
lret
je
mov
xchg
sti
and
jo
lcall
lcall
jne
int3
shr
or
mov
dec
inc
jns
inc
std
ds
mov
or
pop
sbb
pop
pop
mov
jne
xor
sbb
test
insb
imul
rolb
in
rolb
inc
sti
cmp
enter
mov
inc
adc
js
add
cmc
popf
shll
and
pop
mov
sbb
or
mov
lret
scas
imul
hlt
adc
and
lahf
testb
inc
xchg
add
mov
sub
xchg
insl
es
cld
movsl
cmp
pop
inc
cmpsl
mov
stos
add
icebp
lock
adc
hlt
dec
jp
xchg
fstp
mov
bnd
das
sub
xor
and
cld
fldenv
or
xorl
jg
push
dec
push
add
hlt
stos
andb
adc
scas
lea
add
xchg
adc
and
cwtl
bound
repnz
mov
lods
mov
test
inc
jbe
dec
and
xlat
jae
mov
mov
movsb
das
movsl
pop
adc
push
cmpsl
test
cmp
inc
sti
rclb
sbb
je
rcll
negb
enter
pushf
sub
mov
pop
lahf
push
sub
fstps
testb
int3
or
inc
jbe
push
shll
jb
pop
dec
test
sbb
icebp
int3
rcrl
add
pop
adc
or
sti
add
lret
push
mov
xor
test
sub
add
jo
enter
pop
int3
cmc
lret
mov
shl
adc
xor
xchg
fldenv
add
push
cmp
mov
push
mov
pop
xor
popf
arpl
mov
mov
hlt
insl
inc
xchg
push
inc
pop
dec
cmp
and
sbb
nop
inc
or
mov
jnp
pop
arpl
rcll
shrl
into
fsubp
mov
ljmp
in
cld
mov
jp
mov
das
xchg
sub
ds
call
inc
jnp
pop
inc
loopne
sub
xor
lret
push
pop
cli
xchg
jl
mov
es
jmp
leave
dec
test
stos
mov
pop
ja
lret
xchg
xchg
sub
jecxz
lcall
popf
int3
icebp
mov
movsl
fwait
mov
or
mov
and
test
nop
popa
ja
inc
test
mov
mov
or
sbb
in
jmp
jbe
hlt
movl
pop
cli
sti
lret
pop
clc
xor
pop
adc
mov
test
aam
sahf
mov
ret
mov
adc
inc
addb
jge
push
sti
or
call
imul
aas
or
loopne
scas
or
dec
sub
cmpsl
hlt
pop
push
daa
sub
mov
sub
iret
mov
hlt
insl
inc
xchg
push
inc
pop
dec
scas
jp
and
jbe,pn
stc
cmp
mov
dec
jnp
pop
jns
ja
scas
data16
mov
and
mov
movsb
scas
mov
push
ficoms
fnstsw
mov
das
xchg
sub
rcll
or
cmc
int
inc
iret
or
xchg
jl
mov
inc
xor
mov
fiaddl
enter
sbb
aam
out
add
adc
pop
rolb
xorb
or
and
in
mov
shll
rep
fsubl
adc
add
adc
xchg
daa
out
cmp
iret
pusha
adc
xchg
and
iret
or
adc
mov
jmp
xor
xchg
xchg
xchg
hlt
and
jnp
jge
insl
sbb
push
arpl
lret
or
mov
jecxz
ret
inc
dec
in
shl
outsb
add
lret
pop
push
add
adc
lods
xchg
and
mov
sub
pusha
pop
sbb
xchg
cs
mov
and
add
or
dec
and
jmp
or
and
mov
out
sub
adc
xchg
in
push
shrb
mov
and
arpl
xchg
pushf
shlb
sub
mov
fstpt
outsl
inc
fwait
inc
push
cli
mov
ja
cld
xor
mov
cmc
std
jbe
mov
jne
movsl
jb
repz
mov
das
movsb
fs
dec
leave
ja
sbb
sub
cli
aad
xchg
ret
xor
and
std
imul
pushl
push
pop
cli
xchg
jl
stos
pop
enter
mov
arpl
and
rcrl
lret
outsb
daa
jle
cltd
add
and
xchg
and
push
mov
stc
js
repz
arpl
jmp
lret
sub
xor
dec
cmp
fildll
in
mov
cli
mov
inc
leave
inc
addb
push
je
ds
stc
lods
sub
mov
jge
mov
and
push
out
or
ja
das
les
add
nop
loope
sub
in
test
in
inc
and
popf
bound
adc
mov
mov
scas
inc
fbstp
out
mov
push
mov
and
call
mov
add
pop
mov
in
jnp
fists
mov
pop
cmpsl
mov
sarb
or
pop
xor
popf
push
outsl
insl
sub
ljmp
jb
cmc
outsl
inc
mov
add
or
and
push
push
or
and
push
add
adc
outsl
pushf
lods
xchg
stos
mov
jge
std
sbb
jbe
dec
jl
xorb
cmp
jp
and
xchg
loope
xchg
dec
sbb
sub
in
shlb
xchg
xchg
or
mov
cmp
test
pop
ss
push
pop
std
cwtl
bound
repnz
mov
lods
mov
dec
adc
and
inc
sub
gs
inc
into
pop
adc
popa
outsl
sbb
mov
and
or
jmp
or
and
adc
movl
rorb
pop
push
out
push
dec
fsincos
and
sub
sar
and
getsec
stc
cwtl
out
les
cmp
xchg
and
iret
or
fsubrs
test
mov
mov
jo
dec
out
cmp
add
sub
nop
es
mov
lret
dec
dec
pop
popa
xor
push
mov
aad
adc
jmp
lahf
cmp
cmp
cmpsb
xchg
ret
inc
push
add
test
fisubrl
sbb
jno
push
add
ret
mov
fnsave
sti
int
adcb
inc
into
in
out
push
jno
stos
clc
mov
pop
inc
movsl
xchg
add
lcall
in
in
or
cwtl
les
sub
adc
lods
xchg
and
imul
or
addb
ljmp
xchg
mov
xor
flds
or
popa
pusha
cmp
dec
stos
sub
and
lahf
testb
call
sub
pop
dec
outsl
xor
and
jge
pop
jns
movsb
sbb
add
in
stos
and
pop
dec
mov
mov
in
lock
push
push
mov
es
mov
lret
inc
jmp
pop
pop
clc
sub
repnz
mov
xor
clc
mov
xchg
jmp
leave
inc
outsb
aaa
hlt
cmp
adc
inc
cli
shll
cmp
jo
mov
das
movsl
dec
xchg
xlat
imul
cmp
mov
gs
pop
adc
popa
outsl
sbb
stc
adc
pushl
sbb
jmp
hlt
xchg
clc
dec
pusha
adc
mov
xchg
in
imul
mov
int
insl
sub
or
push
out
lcall
add
lret
push
mov
inc
mov
shrd
inc
mov
xor
dec
jmp
in
or
jno
xchg
andb
mov
scas
pop
mov
and
cmp
jb
mov
cmp
test
jg
outsl
inc
fwait
inc
push
test
loope
xor
lret
jns
test
sbb
jns
ja
lods
pusha
idivl
cmc
fwait
sub
lcall
mov
jnp
scas
pop
call
or
cli
or
mov
test
cmpsl
movsl
shlb
loope
icebp
scas
aas
sub
enter
mov
mov
add
mul
jb
in
inc
das
push
push
leave
mov
xchg
sub
xchg
cmp
dec
into
push
mov
jb
inc
lcall
adc
pop
xor
xchg
in
lret
aam
shlb
and
mov
and
push
cmp
lret
aam
and
cmp
or
jno
aam
inc
testl
inc
jp
dec
pop
loope
and
daa
test
mov
sti
inc
dec
adc
inc
adcb
hlt
push
aaa
fwait
aam
test
add
sti
stc
cmp
adc
test
mov
xchg
sbb
mov
es
mov
leave
dec
addl
test
mov
mov
cwtl
in
les
dec
mov
adc
xchg
dec
loop
repnz
arpl
dec
lods
or
cmp
gs
xchg
xchg
pushf
shlb
sub
hlt
lods
adc
inc
pop
pushf
jnp
test
mov
jle
and
adc
adc
dec
insl
daa
push
add
int
es
lods
nop
inc
or
mov
jnp
pop
jns
ja
scas
data16
mov
lret
push
push
fstps
xchg
inc
pop
jge
scas
shr
icebp
ja
mov
mov
in
fsubrl
enter
jmp
add
push
push
lahf
adc
arpl
je
cmp
sub
mov
pop
sti
iret
loopne
push
add
mov
mov
imul
sbb
jmp
sar
rorb
adc
add
outsb
ljmp
mov
or
pop
aam
mov
fidivrs
arpl
sbb
test
push
jmp
cmp
dec
inc
loopne
sbb
push
out
or
pop
sbb
add
cmp
loopne
push
jae
or
lods
adc
stos
lods
push
stc
cli
cli
sbb
dec
jmp
push
subl
jecxz
hlt
popa
ljmp
dec
and
cmpl
cmp
fwait
mov
movsl
jns
mov
loopne
adc
adc
pop
dec
cmp
jmp
scas
cmpsl
xchg
pop
and
mov
cmp
pop
cmp
mov
stc
jne
arpl
or
cmpsb
pop
mov
add
movsl
arpl
and
dec
pop
dec
xlat
push
pop
jns
fstpl
sub
mov
add
daa
adc
push
mov
xor
adc
test
add
adc
pop
ret
cmp
adc
mov
xchg
sub
inc
add
test
scas
aas
sub
xchg
rcr
sti
and
icebp
jmp
pusha
cld
mov
inc
xchg
sbb
in
inc
mov
mov
adc
sbb
ror
fldl
ret
push
push
jle
test
test
sbb
push
pop
scas
insb
xchg
or
adc
mov
xchg
loopne
scas
mov
pop
loope
and
fadd
pop
or
or
push
mov
and
pusha
lcall
iret
or
or
adc
mov
push
jle
mov
mov
jl
cmp
xor
orl
in
pop
push
addr16
sbb
cld
or
mul
or
lret
jecxz
stos
lret
fimull
lds
jbe
fildl
or
andl
aaa
dec
mov
adc
xchg
or
and
dec
inc
mov
jmp
pop
cmp
dec
xchg
xor
into
xchg
xchg
cltd
mov
adc
xor
xchg
jp
mov
and
nop
popf
shlb
loope
or
sub
add
pop
mov
adc
xor
mul
dec
adc
jns
dec
pop
test
out
scas
add
vxorps
scas
mov
xor
inc
or
push
inc
jmp
or
mov
dec
mov
test
mov
scas
push
repz
xor
adc
scas
shr
icebp
ja
mov
pop
add
stos
stos
or
xor
cmp
mov
jae
sti
xor
mov
rcrb
jb
pushw
mov
jno
aam
xchg
out
addb
sbbb
jmp
mov
je
rcll
negb
enter
pushf
sub
mov
pop
lahf
lods
testl
sub
outsl
or
int3
or
jne
stos
or
lcall
add
pop
sbb
stos
iret
xor
lcall
push
out
rcll
lods
add
xchg
lea
push
mov
lahf
and
fnstcw
call
mov
mov
lret
xchg
xor
fcmovbe
movsb
gs
inc
add
and
pop
or
je
in
pop
leave
stos
mov
jno
leave
popa
pusha
cmp
ss
push
aas
mov
xchg
fwait
mov
jmp
jge
dec
dec
mov
inc
in
xor
jp
pop
inc
fs
loopne
sub
out
push
mov
aam
pop
out
enter
data16
xchg
and
outsl
shlb
cld
lea
mov
scas
fadd
pop
lret
pop
jbe
mov
repnz
adc
pop
or
inc
addl
insb
leave
testb
cli
jl
js
mov
or
or
and
sub
pop
adc
adc
aam
push
xchg
sbb
cwtl
mov
adc
pop
push
and
pop
mov
rolb
and
sbbl
jno
fidivl
xor
out
and
aam
inc
addl
inc
cwtl
pop
movsl
pop
xchg
sbb
loop
bound
stc
sub
addb
int
or
movsb
jecxz
inc
test
inc
xchg
cs
adc
stos
mov
outsl
std
push
lock
in
push
adc
inc
faddp
in
gs
xchg
pop
sub
rolb
adc
adc
cmpl
push
iret
in
scas
orl
dec
je
aaa
push
imul
cmpsl
add
ret
push
xchg
push
cwtl
lcall
out
xchg
inc
mov
inc
sahf
ret
mov
test
add
inc
fdivl
out
push
jno
stos
cmpsl
inc
cmpsb
out
cmp
js
into
iret
push
sbb
cmpsb
negl
aas
sbb
mov
mov
or
insl
js
dec
test
xchg
loopne
mov
or
add
mov
inc
lret
scas
lds
data16
mov
stc
in
jge
ss
pop
lcall
inc
dec
pop
jo
mov
pop
inc
sbb
aam
cmc
xor
loop
pop
add
dec
lods
cmp
or
leave
negb
jecxz
add
add
and
fnsetpm(287
and
sahf
push
es
mov
mov
adc
sub
pop
push
sub
test
push
ret
and
xorb
popf
cmp
sti
fadds
les
pusha
lds
ja
add
jl
clc
sub
sub
dec
rclb
addb
dec
lret
inc
mov
je
mov
push
std
add
les
in
or
and
lea
shr
cs
mov
imul
jo
lahf
cmp
cmp
cmpsb
xchg
fs
push
cwtl
cwtl
lods
jmp
push
mov
jecxz
inc
nop
jne
arpl
xchg
push
xor
sub
and
inc
leave
dec
pop
xchg
dec
loope
jne
loope
js
mov
out
mov
jmp
or
and
cmpsb
negl
aas
sbb
jno
lea
adc
pop
and
dec
dec
insl
daa
push
add
jnp
aas
adc
xchg
push
es
mov
mov
pop
test
sbb
fstpt
shlb
mov
movsl
jb
icebp
stos
stos
inc
int
jecxz
and
adc
iret
fs
dec
out
xchg
loop
fcomps
xlat
insb
sub
enter
in
rcl
sbb
xor
mov
mov
loop
dec
or
ret
xor
arpl
aas
sub
enter
leave
jno
pop
and
rcrl
in
pop
sub
inc
jg
sub
adc
or
mov
sub
arpl
iret
mov
and
arpl
stos
scas
xchg
cmp
xchg
and
iret
or
dec
daa
xor
jno
sub
dec
inc
jle
pop
shrl
mov
call
fcomi
jecxz
or
lock
xchg
mulb
int3
adc
cs
test
stc
xor
push
pop
clc
mov
pop
movsl
push
pop
xor
sub
in
or
loopne
lods
or
loope
dec
enter
testl
adc
adc
xchg
addb
outsb
adc
xor
cmc
loopne
adc
adc
cmp
stos
test
adc
lds
adc
mov
xchg
popa
push
and
test
test
in
or
and
mov
leave
cmpsl
mov
movsl
jb
icebp
stos
stos
inc
int
sbb
jno
in
sbb
and
data16
sbb
fsubr
mov
sbb
int3
adc
bound
add
mov
and
stos
adc
aaa
hlt
cmp
dec
push
dec
jne
cmp
xor
xor
adc
inc
mov
fidivl
sti
mov
cmp
cld
sbb
daa
dec
mov
inc
dec
outsl
jle
rcrb
lret
divl
outsl
std
push
negb
frstor
adc
lods
lret
push
je
scas
shl
xchg
xchg
imul
aaa
pushf
hlt
test
mov
lret
enter
push
mov
outsb
out
push
cmc
jecxz
test
mov
loopne
hlt
push
or
xorb
in
js
lret
xchg
xor
ret
call
stos
xor
inc
mov
fcomps
ja
jae
faddl
dec
jl
arpl
sbb
add
push
xor
into
inc
jae
je
dec
loopne
push
es
push
jecxz
fwait
cld
lds
mov
add
push
mov
jmp
out
cmpsb
jmp
inc
aam
xchg
fst
enter
jle
out
cmp
inc
ret
mov
fsubr
mov
sbb
ds
ret
xor
sub
insb
leave
testb
cli
jl
js
pop
fnsetpm(287
and
push
mov
and
mov
sub
lret
insb
loope
adc
ret
mov
pop
push
out
out
push
mov
cmc
pusha
lds
into
test
repnz
loop
or
divl
insb
adc
xchg
out
jge
pop
or
je
lea
test
and
mov
dec
mov
out
dec
or
and
scas
test
sub
dec
es
xor
shll
dec
sub
mov
ret
mov
cli
inc
movsb
sarb
mov
out
ret
aaa
cs
push
into
aam
scas
andl
cwtl
cwtl
lods
jmp
xchg
xor
lahf
and
arpl
xchg
push
xor
adc
xchg
and
sub
jge
adc
mov
jo
inc
add
lcall
or
sbb
adc
mov
jno
leave
popa
not
or
mov
mov
jg
hlt
or
loopne
adc
clc
add
notl
sub
sti
jmp
xor
pop
cmp
dec
pop
jo
pop
je
add
jmp
jmp
cmpsl
sub
pop
leave
sub
testl
dec
push
jmp
fistpll
shlb
xor
pop
lea
push
xchg
pop
fidivl
in
rolb
push
and
dec
addb
aam
in
frstor
mov
aaa
add
cltd
loop
loopne
stos
loop
cmpsl
fsub
pop
and
aam
xor
mov
sbb
dec
pushf
sbb
add
inc
rcll
jecxz
cmp
mov
sbb
jmp
mov
push
jno
sub
dec
inc
jle
stc
and
addl
adc
cmp
les
mov
sti
stc
inc
cltd
sti
xor
shlb
sbb
xchg
lock
or
mov
jae
icebp
dec
je
test
or
loopne
sub
xchg
and
scas
pop
movsb
clc
scas
add
or
push
cmp
dec
enter
or
push
xor
push
rorl
cmp
cmp
sub
int3
push
or
add
mov
inc
fs
jecxz
mov
mov
stc
in
jge
lcall
out
decb
dec
sbb
xor
mov
xchg
sub
xor
and
lret
aaa
hlt
cmp
dec
push
ljmp
xor
popa
xor
cmc
push
jle
popa
repnz
dec
lock
dec
ds
test
in
rcll
negb
cli
dec
push
scas
divb
jns
fisttpll
rcrl
sbb
xchg
xchg
hlt
and
out
sbb
leave
or
push
out
pushf
nop
addr16
lcall
push
outsl
xchg
subb
stc
scas
cmpsl
mov
call
in
rolb
dec
jmp
lock
or
xor
adc
andb
mov
scas
pop
movsb
clc
scas
add
jae
cmpsl
in
loope
popf
mov
jb
cmc
outsl
inc
fwait
inc
imul
adc
lods
mov
and
push
xchg
push
lock
mov
adc
repnz
adcb
cmp
andb
inc
int
jns
pop
push
push
cwtl
das
inc
jno
add
xchg
push
fistl
or
and
loop
fcoms
shl
push
or
sarb
sbb
add
and
insb
push
lods
and
fistpll
and
mov
and
orb
arpl
roll
pop
and
jge
push
dec
jno
sub
pop
adc
sub
pushl
cmp
popa
repnz
dec
jne
je
sub
push
out
out
push
mov
and
les
xlat
and
lret
dec
mov
and
xchg
clc
dec
pusha
adc
cld
jne
les
xchg
push
clc
and
stos
mov
aad
cmpsb
arpl
push
jae
and
fs
das
shl
xchg
lcall
xchg
imul
pop
cmpsl
xchg
pusha
add
xor
ficomps
adc
mov
rolb
dec
jmp
out
and
adc
xchg
dec
loope
cmp
dec
xchg
xor
into
xchg
xchg
cltd
fidivl
add
mov
push
cmpsl
lret
push
jg
inc
fmuls
pushf
lods
xchg
inc
or
push
pop
ja
adc
jbe
dec
into
cmp
sbb
clc
push
dec
sub
mov
jmp
es
or
enter
sbb
movsl
push
push
push
fcoml
jnp
inc
dec
sbb
xor
mov
xchg
sub
xor
ljmp
imul
push
xchg
imul
cmp
scas
dec
cwtl
mov
adc
pop
push
and
pop
mov
sbb
mov
sub
into
xchg
inc
addb
fdivrp
xchg
dec
xchg
sub
add
adc
in
lcall
push
and
test
nop
popa
jbe
inc
scas
pop
inc
cli
or
pop
rolb
testl
or
decb
shl
lret
cmpsl
add
ret
push
xchg
sbbl
mov
arpl
rolb
inc
std
ss
icebp
ret
jno
repnz
cmp
xchg
and
sbb
mov
fstps
add
sub
xor
hlt
insb
inc
xchg
pop
push
jbe
sahf
rcl
dec
sarb
mov
lret
add
dec
arpl
dec
jl
xorb
cmp
jp
and
xchg
loope
xchg
dec
sbb
sub
in
shlb
xchg
imul
mov
cmp
test
pop
ss
push
pop
std
cwtl
bound
repnz
mov
lods
mov
mov
addl
add
scas
inc
mov
shll
rep
fsubl
scas
jge
fsubp
cmp
xlat
mov
pushf
sbb
lret
push
icebp
sub
xor
arpl
mov
sub
or
fcmovne
insb
jo
imul
enter
xchg
mull
and
lods
jle
lcall
in
fcompl
fdivl
enter
sarl
inc
jmp
jl
sbb
inc
xchg
repz
mov
rol
aad
scas
test
push
fildll
dec
mov
adc
xchg
dec
sbb
out
cmp
sub
or
mov
cltd
int
js
stos
mov
fs
mov
lods
cmc
divl
in
pop
mov
push
ss
or
jns
jo
das
les
jno
dec
push
icebp
ret
xchg
sub
test
loopne
add
adc
push
ss
push
cmp
pop
jecxz
mov
lea
leave
cmpsl
mov
movsl
jb
icebp
stos
stos
inc
int
jecxz
inc
mov
cltd
sbb
ret
das
sub
insl
sbb
in
fildl
sub
sub
stos
push
dec
and
arpl
add
mov
mov
xchg
xlat
xchg
add
xor
add
stos
scas
movsl
xor
mov
into
fwait
sarl
lea
mov
je
ret
int
faddp
push
sbb
inc
and
mov
outsb
dec
cli
or
and
dec
cltd
jae
cmpsb
sti
and
adcl
xor
add
in
xchg
addb
fdivrl
lea
and
in
inc
and
inc
xorb
adc
dec
mov
sbb
pop
mov
lahf
and
fnstcw
call
mov
and
lret
mov
shl
jns
out
xchg
imul
sub
or
addl
sub
dec
sbb
lods
fstpt
cltd
mov
data16
or
or
inc
arpl
pop
inc
fucom
xor
out
add
repz
jmp
adc
cmp
mov
lods
pop
jle
fadds
gs
push
mov
ficoml
inc
fisttpll
jg
clc
or
and
ljmp
adc
add
repnz
dec
arpl
fistpll
pop
fnsetpm(287
and
sub
adc
jle
fsubl
out
cmp
push
push
lods
mov
popf
cmp
stc
adc
pushl
sbb
jmp
rcrb
lret
divl
mov
sti
adc
mov
or
pop
aam
mov
mov
or
mov
and
and
scas
push
push
mov
leave
movsl
sbb
xchg
fldenv
mov
scas
and
ss
inc
addl
test
push
pop
test
inc
cmpsl
outsb
cli
push
sub
pop
xor
mov
inc
addl
mov
scas
sbb
insl
gs
inc
add
out
and
mov
in
pop
and
pop
outsl
sub
in
cmp
js
addr16
mov
and
xor
jg
hlt
or
cli
mov
test
and
ror
int3
int3
imul
popf
push
cs
dec
fsts
mov
aam
push
inc
push
inc
cmp
jae
dec
clc
push
dec
lret
popf
mov
and
lcall
mov
inc
xor
xchg
mov
outsl
add
addr16
mov
into
fwait
sarl
lea
mov
je
ret
int
cs
push
sbb
inc
and
mov
inc
fcomip
or
sbb
pop
sub
fstps
testl
sbb
test
push
jmp
cmp
imull
ss
sbb
pop
movsb
xchg
jp
jecxz
sbb
sub
jg
addl
add
cmc
jecxz
test
mov
addr16
or
mov
and
out
cmpsb
cmp
dec
stos
pop
or
mov
xor
dec
mov
and
scas
fidivrl
xor
push
in
push
adc
inc
push
outsl
insb
aad
cltd
pop
or
adc
dec
cmc
jbe
les
filds
xchg
dec
adc
sbb
push
dec
inc
jle
inc
rcrb
cmp
pop
jbe
nop
cltd
mov
pop
fdivrl
ja
lods
pusha
idivl
cmc
fwait
sub
lcall
ret
stos
mov
xchg
dec
sbb
mov
xchg
ret
xor
and
std
imul
pushl
push
pop
cli
xchg
jl
mov
es
stc
int
iret
lret
aam
mov
dec
or
int3
xchg
sbb
and
add
test
jmp
push
stc
lock
jge
and
pusha
arpl
daa
dec
in
mov
fadd
pop
pavgb
test
cmpl
into
jae
push
adc
add
insl
cmpsb
fistpll
out
jecxz
push
mov
lret
jo
pop
xchg
imul
aaa
pushf
hlt
test
or
lods
popf
bound
adc
es
lods
jmp
push
mov
scas
inc
fbstp
sbb
test
push
and
push
imul
test
lock
or
pop
nop
testl
mov
push
hlt
jae
pop
and
pop
outsb
das
std
pop
pop
cmpl
out
add
icebp
test
mov
imul
imul
imul
dec
mov
xchg
data16
sbb
in
lcall
xlat
outsb
push
jmp
sub
push
ds
adcl
and
into
xor
shlb
aaa
inc
insb
and
adc
pop
push
repnz
fstpt
mov
xchg
push
clc
es
mov
and
sbb
sti
and
sub
push
jecxz
fs
sahf
and
repnz
sbb
add
and
outsl
test
add
and
add
cmp
aam
int3
mov
push
frstor
jecxz
ret
inc
dec
in
xchg
lcall
arpl
lods
xchg
push
repz
add
ret
push
xchg
sbbl
mov
dec
jmp
inc
stos
cli
jne
xchg
lahf
mov
mov
mov
pop
push
fstps
fnstenv
mov
or
js
mov
sub
inc
mov
push
mov
pop
das
sar
sub
adc
xor
mul
dec
or
jb
loopne
mov
inc
in
cmp
ss
pop
or
jecxz
ss
cmp
mov
jge
pop
fdivrl
mov
shll
les
data16
dec
lret
dec
mov
and
test
dec
aam
cwtl
das
inc
jno
add
lret
jno
dec
cmp
mov
adc
dec
sbb
xor
mov
xchg
sub
xor
and
lret
aaa
hlt
cmp
dec
push
ljmp
xor
xor
adc
lret
dec
mov
xchg
sub
adc
inc
lret
dec
mov
and
sub
addr16
movsl
fwait
ljmp
add
inc
orl
shlb
jo
adc
push
mov
out
push
adc
fsts
cltd
xor
ret
es
and
inc
addb
mov
call
xlat
pop
loopne
in
mov
or
clc
insb
das
mov
iret
mov
in
rolb
inc
sti
cmp
enter
mov
inc
adc
imul
xorb
sub
shlb
pop
movlps
insb
pop
and
dec
inc
jle
inc
rcrb
adc
rorb
inc
xchg
addr16
add
push
dec
stc
pushf
stc
jne
movsl
adc
test
jae
hlt
mov
add
jno
scas
inc
jno
push
negb
das
sub
ficomps
adc
dec
fsts
mov
int3
mov
and
sbb
sub
mov
fbld
arpl
add
scas
ds
mov
daa
pusha
shlb
add
dec
dec
adc
pop
imul
inc
jg
sub
or
lcall
je
insb
fsubl
scas
jge
out
out
sub
lcall
iret
or
or
adc
xchg
dec
sti
enter
xor
aas
in
sbb
sub
or
fcmovne
insb
mov
mov
mov
pushf
leave
jbe
inc
mov
shrd
dec
jbe
pop
jp
pop
clc
mov
pop
movsl
push
pop
xor
sub
sti
jae
imul
or
addb
mov
out
test
or
mov
je
jnp
push
cmp
addr16
mov
xchg
pop
push
jbe
sahf
rcl
dec
shlb
test
out
in
sbb
jns
jbe
stos
dec
xor
push
in
es
cld
movsb
cmp
cli
int
mov
lahf
push
jmp
mov
sub
test
inc
inc
leave
dec
ret
xor
sub
lock
adcl
loope
icebp
fwait
insl
addr16
in
repnz
mov
lods
mov
dec
adc
or
sub
jo
ret
ficoms
jecxz
fs
mov
leave
mov
out
scas
jge
fiadds
stc
and
outsl
test
add
cmc
cmp
pushf
out
fs
dec
addb
xlat
into
jae
push
push
push
test
add
enter
sbb
jb
rorb
or
or
aam
sbb
in
sbb
out
lahf
cld
jne
sub
push
rep
popf
bound
adc
addr16
push
sbb
pop
xor
xchg
and
sahf
ret
mov
fnsave
dec
test
inc
xchg
cmpsl
loopne
hlt
push
or
xorb
out
ds
jb
xchg
mov
ss
add
xchg
sahf
aad
cmp
pop
sub
test
and
jnp
test
aaa
gs
pop
mov
xchg
mov
and
inc
leave
popa
xchg
jl
repnz
movsb
fwait
dec
shlb
test
push
jae
rcll
je
xor
xor
and
jl
leave
outsb
lcall
aaa
sbb
lock
stos
adc
mov
sbb
cwtl
dec
and
arpl
add
mov
jo
jbe
push
inc
das
loopne
mov
add
xor
dec
insb
and
adc
pop
push
jno
les
push
out
out
push
mov
mov
scas
mov
inc
mov
loop
mov
or
leave
inc
inc
fadd
pop
add
or
jge
adc
inc
xchg
dec
push
jo
pop
mov
sub
cmpb
jmp
xor
into
das
adc
das
inc
mov
ja
inc
mov
ljmp
or
and
lret
or
ret
cld
or
daa
rcrl
jae
pop
stos
push
outsl
xchg
subb
jmp
adc
lock
es
loop
mov
int
int
les
addr16
in
adc
pop
scas
insl
ljmp
cmp
add
fstpt
arpl
lret
push
jb
cmc
outsl
inc
fwait
inc
imul
lcall
xor
mov
dec
stc
pushf
stc
jne
movsl
jb
lock
int3
dec
cli
or
cld
lea
mov
das
fnstsw
mov
das
xchg
sub
rcll
or
cmc
int
inc
iret
std
test
fcmove
xchg
mov
outsl
lahf
adc
bound
jb
data16
dec
arpl
mov
sbb
in
aad
and
sbb
fnsave
outsb
xchg
test
mov
leavew
mov
out
lods
jnp
xor
sbb
inc
jno
arpl
mov
clc
push
dec
imul
ret
adc
push
inc
adc
mov
push
frstor
jecxz
ret
sub
or
push
fsubp
pop
cmp
ret
or
and
jae
pop
pop
pop
test
pusha
ds
stc
daa
inc
xchg
movl
gs
lret
pop
jns
and
addl
outsl
mov
push
xchg
xchg
int
pop
inc
mov
or
sub
xchg
lock
enter
movsl
jp
inc
pop
jge
enter
push
mov
out
cmpsb
cmp
dec
stos
pop
or
mov
fldenv
adc
sbb
mov
mov
or
insl
js
dec
test
push
cmp
push
dec
mov
jg
loopne
adc
cmp
stos
inc
and
cmp
ljmp
and
notl
jb
fistl
sbb
adc
push
pop
xchg
call
leave
sbb
idivl
lahf
inc
lret
clc
push
dec
loop
mov
jb
or
clc
push
dec
shufps
sub
dec
out
xchg
loop
adc
xchg
ret
xor
sub
insb
leave
testb
cli
jl
js
pop
fnsetpm(287
and
sahf
push
leave
xchg
mov
add
push
je
jg
fsubrs
xchg
pop
mov
sbb
xor
xchg
in
movsb
cltd
mov
jp
mov
aad
jns
jns
leave
jno
aam
mov
fidivrs
mov
imul
into
lahf
int
out
shrl
repnz
xor
add
jmp
jmp
cmp
stc
pop
inc
das
jl
unpckhps
dec
rcr
jp
cld
xchg
or
fidivl
sub
shrl
imul
pushf
add
fs
mov
adc
lahf
xor
push
call
jo
aad
xchg
icebp
xchg
xchg
shll
clc
mov
shrl
aas
pusha
nop
add
pushf
lods
xchg
inc
pop
mov
fstl
mov
xchg
aad
and
mov
outsl
shlb
cld
lea
mov
das
fnstsw
jno
cld
fldenv
adc
stos
jb
or
mov
cmp
scas
dec
cli
pop
movsl
lahf
mov
push
pop
lcall
sbb
xchg
inc
insb
and
push
pop
mov
sbb
in
aad
and
xor
out
insl
inc
add
repnz
arpl
mov
dec
shl
hlt
cmp
pusha
adc
xchg
and
iret
or
or
sbb
inc
leave
movsb
pop
aam
mov
mov
push
fnstenv
sahf
ds
loop
pop
adc
imul
dec
daa
lods
fisttpl
leave
ja
adc
arpl
movsb
push
mov
rcl
xor
scas
pop
cmpsl
mov
inc
add
xor
shll
mov
push
icebp
jns
jne
icebp
xchg
rcrl
xchg
jns
out
add
repnz
push
sub
pop
push
adc
jb
icebp
stos
stos
inc
cli
rcrb
loopne
inc
jl
xor
mov
arpl
sub
pop
or
or
push
xchg
imul
lahf
adc
arpl
mov
mov
dec
push
push
sbb
sbbl
pop
or
xchg
sti
or
adc
pushl
sbb
jmp
jecxz
clc
dec
pusha
sti
push
inc
and
mov
outsb
ljmp
mov
or
pop
aam
test
loopne
cmp
sbb
test
jmp
imul
add
xchg
lea
fisttpl
lds
mov
leave
adc
xchg
dec
loop
repnz
sarl
lret
xchg
sti
adc
movsl
adc
mov
jo
sti
rcll
mov
or
je
in
pop
and
pop
outsl
sub
or
sbb
out
add
repz
stc
inc
hlt
dec
jp
icebp
stc
and
push
imul
xor
addl
stc
sub
add
mov
cmc
fwait
sub
scas
cmp
loop
arpl
xchg
dec
leave
dec
lcall
pop
xchg
out
loopne
popa
popa
repnz
cmp
pop
cwtl
sbb
outsb
mov
mov
and
dec
sub
mov
lret
call
das
andb
sti
mov
dec
adc
mov
jmp
or
and
nop
or
shll
les
push
leave
dec
sub
inc
add
lock
dec
aas
mov
aas
adc
adc
pushl
movb
or
or
je
sti
dec
push
lret
jno
sub
push
scas
divb
jns
std
fwait
jnp
dec
cmp
or
cmpsb
imul
jecxz
sbb
xchg
lock
into
sahf
iret
push
in
inc
and
popf
bound
adc
adc
mov
jecxz
xchg
lret
rcr
test
xor
push
and
push
imul
jns
stos
lods
lea
sub
cmpsb
negl
aas
sbb
mov
mov
scas
push
and
dec
dec
insl
daa
push
add
gs
mov
and
lret
js
jg
loopne
adc
cmp
stos
inc
int
jecxz
inc
subl
das
sub
call
jae
movb
sub
sub
pop
int3
es
ficomps
push
add
mov
dec
jno
sub
pop
adc
xor
jle
fbld
je
mov
movsb
ret
dec
fcomps
dec
popa
iret
pop
xchg
fimull
lret
inc
in
pop
stos
xchg
jo
push
les
mov
or
cs
out
out
push
mov
xchg
repnz
sbb
call
loop
or
divl
pop
fwait
movsb
in
mov
inc
cmc
andb
shll
das
dec
fadd
adc
mov
xor
xchg
xorl
mov
dec
push
popf
ljmp
sti
and
fidivl
push
mov
mov
xchg
lock
add
adc
mov
or
fcmovb
int3
mov
lret
dec
mov
and
inc
hlt
push
or
push
stos
sarl
push
cli
sub
and
imul
popa
ljmp
test
xor
les
sbb
inc
add
pop
or
test
sbb
sbb
fdivrl
xlat
fcomps
sub
adc
js
data16
mov
xchg
sti
daa
inc
pop
mov
frstor
mov
and
add
sbb
or
pop
push
mov
in
add
jb
repz
mov
scas
inc
jno
mov
push
pop
loop
pushf
jg
mov
or
xchg
shr
sbb
and
sbb
or
adc
dec
xlat
outsb
push
cli
adc
pop
es
in
rcl
sbb
mov
cmp
scas
dec
cli
pop
movsl
lahf
mov
push
pop
lcall
sbb
xchg
cltd
xchg
push
jmp
mov
stos
adc
ret
das
jnp
daa
jne
stos
mov
pop
ja
xor
out
mov
xor
dec
loope
mov
mov
aad
outsb
shr
fcomp
inc
jae
js
pop
push
ja
mov
sti
or
pop
testl
arpl
call
sbb
jne
xchg
imul
aaa
pushf
hlt
test
mov
lret
adc
lea
push
mov
scas
inc
fildll
jle
adc
leave
jno
stos
clc
jo
xchg
mov
js
into
iret
popf
daa
mov
movsb
lret
pop
aas
sbb
mov
mov
or
push
push
pop
dec
sbb
push
mov
cwtl
icebp
loop
je
js
mov
fists
popf
stos
xchg
mov
inc
push
xor
lock
xchg
add
xchg
popa
adc
inc
addb
cwtl
pop
xor
icebp
mov
cmp
lods
adcl
inc
sub
mov
xchg
addr16
leave
imul
pop
cld
fldenv
adc
push
mov
xor
clc
mov
out
and
enter
in
aaa
into
xor
rcrb
in
sbb
xchg
sub
clc
das
xorb
inc
mov
pop
sbb
cli
les
push
clc
jmp
mov
out
scas
jle
in
add
cmp
cmp
test
jbe
adc
cmp
mov
mov
in
pusha
ja
mov
sbb
in
jmp
cmp
movsb
or
lock
xchg
mulb
int
mov
xor
das
inc
fdivl
dec
fcompl
movsl
push
pop
xor
sub
shrb
outsl
lea
sub
cmpsb
negl
aas
sbb
mov
mov
xor
push
rorl
insl
daa
push
add
gs
mov
jge
fists
roll
in
pop
fcompl
ficomps
cmp
adc
notl
xor
adc
je
mov
arpl
inc
ret
mov
push
cs
dec
fsts
mov
aam
push
lret
xchg
lods
cmp
or
arpl
cmpsb
cmpsb
jns
shlb
cmovge
loope
add
push
push
lahf
adc
arpl
je
jg
fsubrs
inc
add
lock
dec
aas
sbb
pop
das
into
cwtl
out
mov
xlat
xchg
or
inc
lcall
jge
pop
push
cli
aaa
aad
out
jae
ret
sahf
stos
mov
movsl
fwait
mov
or
sbb
jbe
push
mov
jmp
xor
xchg
xchg
xchg
hlt
and
out
sbb
ret
xchg
pusha
call
pop
add
push
push
jmp
pusha
sbb
mov
sub
jmp
mov
js
mov
and
inc
add
jmp
push
nop
pop
push
jmp
mov
jmp
lret
test
mov
jmp
shll
std
repnz
sar
lahf
in
pop
jmp
mov
mov
test
xor
imul
add
popa
push
push
mov
mov
inc
cld
pop
pop
push
push
push
pop
add
jmp
mov
push
and
fstps
das
ja
dec
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
sub
loopne
pop
aas
or
push
hlt
pop
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pop
push
push
test
dec
mov
not
xor
test
inc
xor
mov
xor
mov
cld
pop
pop
xor
jmp
pop
push
dec
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
loop
xor
jmp
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmp
je
push
push
sbb
xor
mov
and
jmp
dec
dec
cld
pop
pop
mov
push
jmp
stc
ds
in
mov
mov
jmp
mov
or
push
xchg
test
xor
imul
pop
dec
por
movb
fstps
add
mov
add
jmp
dec
xchg
stos
fwait
cmp
jbe
in
jmp
dec
add
add
jl
inc
pop
jmp
outsl
jl
pop
mov
es
push
mov
jmp
mov
cmpb
jmp
lods
pop
push
mov
jmp
icebp
push
inc
sub
scas
dec
add
jmp
fsub
mov
add
add
push
push
pop
jmp
inc
je
adc
loopne
pop
aas
or
push
clc
roll
sub
add
add
ss
movsb
xchg
push
push
mov
jmp
neg
mov
mov
cmp
dec
mov
dec
clc
cld
pop
pop
pop
push
push
pop
jmp
cmp
xor
jmp
sbb
inc
out
aam
adc
jmp
jge
ret
inc
jns
pop
insb
xor
or
add
add
and
push
pop
jmp
pushf
movsl
jp
sub
jmp
mov
inc
pop
xor
shlb
int3
pop
add
jmp
mov
int
xchg
ror
into
out
cld
test
or
xor
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
jmp
and
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
jmp
lahf
in
mov
mov
test
xor
imul
stos
or
push
push
test
test
mov
xor
mov
cld
pop
pop
xor
jmp
cmp
jbe
ja,pn
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
jmp
icebp
push
inc
sub
mov
scas
dec
fsubr
imul
xor
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
fldcw
inc
out
aam
jb
inc
jns
pop
insb
xor
mov
lea
test
mov
not
xor
cld
pop
pop
inc
push
push
push
pop
inc
cld
pop
pop
dec
jne
push
push
mov
mov
dec
push
pop
add
test
xchg
mov
cmp
push
pop
cld
pop
pop
mov
push
jmp
jmp
jp
mov
inc
pop
xor
shlb
lock
jmp
pop
push
dec
adc
jmp
mov
add
jmp
xchg
ror
add
push
mov
jmp
fimull
call
add
jmp
cmp
jle
sub
mov
sbb
push
push
jmp
lods
loop
xor
jmp
cs
pop
gs
dec
add
jmp
loope
hlt
sbb
pop
jmp
js
mov
das
mov
lea
nop
mov
lret
test
cmpsw
push
std
bnd
inc
sar
lahf
jmp
in
mov
mov
test
xor
imul
ljmp
mov
sub
push
and
fstps
fwait
cmp
jbe
in
in
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jmp
or
icebp
push
inc
sub
scas
dec
fsubr
pop
in
imul
xchg
push
add
add
jecxz
cltd
pop
aas
or
push
clc
rcll
or
rcll
or
das
cmp
sbb
jmp
dec
sub
daa
aam
sub
jmp
jb
inc
jns
pop
insb
xor
shlb
add
mov
jmp
