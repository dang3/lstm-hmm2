add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
hlt
push
les
jbe
dec
shll
push
cltd
mov
inc
out
mulb
xor
add
adc
in
hlt
push
les
jbe
push
mov
test
xchg
dec
fs
je
inc
out
mulb
xor
mov
inc
hlt
push
les
jbe
push
mov
test
xchg
ss
push
cmc
xor
xor
inc
enter
xor
mov
adc
pop
mov
dec
das
push
mov
sub
or
cmp
sub
movsb
push
mov
js
jl
fdivs
stos
xchg
jae
xor
push
cmpsb
inc
out
inc
sahf
pop
scas
or
jo
push
xchg
dec
aad
arpl
nop
popa
pop
push
mov
mov
push
in
shll
dec
shll
int3
movsl
dec
pop
fisttpll
xchg
cmp
sub
xchg
cld
lods
lahf
mov
xor
inc
ss
pop
mov
cmp
sbb
bnd
mov
sti
cmpsb
adc
fadd
or
jbe
popl
aas
fisubs
test
xlat
xor
rolb
mov
les
jbe
push
mov
test
xchg
ss
je
inc
out
mulb
xor
add
adc
addl
jbe
arpl
jg
pusha
adc
mov
adc
popa
fbld
and
jbe
push
pop
rorl
push
lea
scas
cmp
push
xchg
insl
lock
addl
push
adcb
loope
mov
test
xchg
ss
je
inc
out
mulb
xor
add
adc
in
hlt
push
les
jbe
push
mov
test
xchg
ss
je
inc
out
mulb
xor
add
adc
in
xchg
ds
mov
gs
ficompl
rcr
lret
out
jns
jge
add
xchg
mov
inc
cs
in
jns
sahf
dec
and
test
cmp
xchg
andb
hlt
ret
push
add
jb
pop
aas
cmc
and
fstps
imul
inc
xchg
inc
sbb
cmp
mov
out
xchg
aam
rcll
jno
leave
cmp
aaa
imul
dec
pop
fmuls
fs
frstor
jns
inc
push
push
mov
or
cmpsl
rcrl
repnz
into
inc
inc
inc
xchg
outsb
daa
pop
xchg
xlat
mov
ret
sarl
xchg
dec
xchg
sub
or
lret
lcall
fimull
lea
mov
sub
xor
fsubrl
adc
aaa
scas
ret
jge
pop
adc
push
push
movsb
popa
nop
int
add
inc
sub
jnp
mov
dec
and
ret
xchg
pop
inc
mov
add
push
popf
push
dec
popf
aad
mov
out
mov
outsl
dec
aad
add
sub
add
cmpsb
js
out
dec
mov
outsb
inc
stos
mov
in
dec
sti
leave
push
or
shlb
xor
mov
pop
xchg
inc
push
insl
jle
pusha
and
stc
sbb
add
into
mov
mov
popf
in
dec
mov
hlt
insl
stc
imul
test
out
loop
sbb
add
leave
xor
mov
jl
xor
int3
fstpt
lret
adc
shlb
jb
pop
mov
mov
inc
in
pop
out
loopne
rorl
xor
pop
mov
loope
inc
mov
enter
pop
xchg
or
xchg
cld
push
ss
sbb
sub
dec
icebp
lds
pop
bound
cmp
xlat
scas
imul
adc
mov
test
into
xor
ss
dec
push
in
loop
adc
jmp
popa
cmpb
pop
lods
out
aaa
and
stc
loopne
xchg
pop
mov
add
inc
gs
sbb
mov
lock
test
mov
sub
mov
jno
jb
ret
add
fbld
mov
xor
xor
push
leave
push
out
mov
call
dec
inc
mov
out
push
mov
in
pop
aas
push
je
int3
mov
lret
out
lret
pop
cmp
std
mov
int
jnp
orb
inc
xor
jecxz
fs
sub
xchg
sub
jnp
push
rorl
pop
sbb
stc
xchg
jae
push
jo
xlat
jo
sarl
sub
in
xchg
jp
mov
fwait
and
push
std
jae
push
pop
push
sbb
adc
xchg
push
xor
or
loop
xchg
or
testb
lods
jg
cltd
ret
mov
sbb
adc
jns
inc
stos
sub
scas
cmpsb
lret
push
in
int3
add
jge
hlt
outsl
outsl
xor
xchg
push
or
dec
outsl
sbb
ret
inc
mov
mov
pop
test
pop
mov
fnstsw
fstl
movsb
adc
cwtl
cwtl
cmp
testl
shrl
loop
mov
lock
out
or
inc
stos
xlat
add
or
out
pop
sub
mov
out
push
rcrl
inc
aad
or
cmp
pushf
mov
aam
mov
pop
mov
mov
cmpb
fists
mov
lret
xlat
push
and
imulb
and
rorb
cltd
and
inc
pcmpeqw
in
outsl
xchg
icebp
push
outsl
xchg
cmp
mov
shrb
xchg
out
jb
mov
pop
push
inc
mov
je
sub
push
data16
daa
pop
enter
in
jge
xchg
das
rorl
int3
cmp
lods
in
dec
imul
jmp
out
mov
aam
mov
andb
das
mov
pop
pusha
je
sbb
ret
xchg
cmpsb
mov
lcall
pop
or
addl
int3
sub
pop
adc
mov
ret
sti
das
inc
out
mov
aad
lret
mov
outsl
cmc
jb
inc
addr16
aaa
cmp
fs
pop
adc
lret
lahf
sbb
dec
pop
test
ds
lret
and
pop
notb
adc
loope
gs
mov
sahf
shl
stc
cltd
pop
pushl
sub
les
fcoml
popf
in
dec
iret
mov
stos
lahf
adc
repnz
enter
jo
pop
push
cmp
cmp
jp
popa
in
pusha
and
les
inc
cmp
int
adc
jg
pop
ljmp
jle
adc
insb
or
jmp
lea
popf
jno
sti
stos
ss
dec
jg
jge
jl
xchg
or
lock
je
scas
stos
inc
bound
or
or
push
fsubrl
xor
fists
mov
ret
or
mov
xchg
dec
addr16
pushf
popa
and
and
fldenv
xlat
pop
pusha
and
sub
outsl
shrb
or
nop
push
pusha
inc
pop
das
mov
in
pushf
arpl
mov
mov
push
test
mov
mulb
in
loope
dec
mov
cld
rcrb
arpl
in
mov
aad
mov
test
fisttpll
pop
aas
fstl
stos
xor
pop
and
lods
sub
sarb
push
scas
add
cmpsb
rcrb
add
lock
lret
push
xor
fs
sbbl
frstor
lock
mov
addb
push
loope
sbb
jns
sub
xor
fsubs
dec
fiadds
push
rorb
paddsw
ficoml
popf
mov
xchg
mov
xchg
stos
cwtl
dec
bnd
adc
xor
jae
orl
in
insb
and
sbb
mov
dec
fwait
aaa
and
sub
xchg
popa
fsincos
mov
out
and
sbb
icebp
nop
xchg
jg
pop
es
loop
rclb
andl
in
add
movsb
jge
jle
in
mov
mov
push
xchg
mov
ds
les
popf
xor
int
fidivs
fsts
sub
jns
mov
mov
push
lock
jne
aam
or
or
leave
inc
jecxz
jecxz
fidivs
push
or
dec
in
dec
jg
mov
sti
in
lahf
in
rorl
push
call
cmp
fisubs
mov
jle
divb
fimull
lods
sub
add
adc
adc
out
lea
les
sub
cld
dec
orl
out
or
lcall
test
push
cmp
jae
add
dec
cli
insl
fmulp
arpl
pop
push
icebp
push
sbbl
addb
pop
testl
adc
sub
push
in
pop
inc
icebp
pop
cwtl
sub
test
mov
lea
push
sbb
sub
mov
repnz
dec
fiadds
and
lret
push
das
jns
movsb
cmp
lods
cltd
sbb
lods
jl
inc
cmp
mov
in
push
jo
shl
jl
push
scas
cmp
jae
mov
icebp
int
pop
and
movsl
in
sbb
cmpl
pop
push
jp
movsb
pop
mov
push
stos
push
rcl
sbb
sub
cltd
mov
aas
pop
sub
sbb
lock
xchg
pop
xchg
mov
mov
and
out
and
lret
dec
in
pop
loope
cmpsb
mov
pop
sub
or
pop
and
ret
mov
je
icebp
jo
and
leave
icebp
cmp
lret
icebp
xchg
test
mov
jo
es
xlat
xchg
repnz
mov
loopne
sahf
cmp
fscale
jno
add
rcrl
clc
or
bound
imul
mov
push
adc
xchg
fcoml
mov
dec
out
mov
fisttps
subb
stos
enter
pop
test
cld
mov
dec
mov
mov
adc
aaa
sbb
in
or
out
pop
mov
out
sarl
dec
cmp
data16
pop
repz
fmuls
lahf
scas
iret
jbe
jnp
cmp
js
popf
shrb
aam
xchg
das
popf
fs
pop
mov
testl
inc
aad
in
sbb
dec
sbb
pop
cmpsl
in
std
shrl
xor
lods
push
pop
sub
nop
push
xor
and
ret
dec
cmp
insl
aaa
or
push
mov
in
mov
test
mov
jae
mov
scas
push
imul
and
mov
loop
sbb
add
push
fsubl
lock
lret
and
idiv
sbb
pop
in
fs
aaa
insb
dec
fldt
mov
pusha
push
push
lret
xor
mov
mov
mov
push
loopne
jl
fstp
shll
cmp
xchg
stos
jne
in
clc
outsl
add
cmpsb
lods
xlat
mov
inc
loope
add
sub
xor
dec
ds
int
add
loope
and
aaa
xor
pop
cmp
out
fstps
bound
lds
jmp
jns
inc
cs
cld
adc
in
sub
xor
dec
mov
movsl
pushf
addr16
pop
lods
adc
adc
ja
call
dec
xchg
imul
rorb
inc
nop
test
mov
xchg
addr16
mov
xchg
cmp
lea
out
cmpb
pop
dec
sub
mov
adc
mov
push
fidivl
out
jp
out
or
mov
mov
pushf
std
enter
test
dec
fimuls
mov
jle
xor
add
out
inc
call
inc
aad
aas
pop
xlat
jecxz
rcrb
fsts
xchg
stos
jo
shlb
xchg
lods
scas
out
stos
into
rcrl
addr16
aaa
and
xchg
addl
push
xchg
int
lock
and
pop
pop
sbb
dec
shrb
xor
lcall
popf
push
dec
inc
or
pop
mov
and
test
jbe
xchg
insl
push
decl
pop
ja
cmc
cmp
cmpb
loopne
jg
lods
jl
push
inc
push
movsl
roll
loop
jnp
cs
pop
jecxz
orb
rcl
dec
movsb
movsb
jb
push
jo
mov
dec
cmp
sbb
xor
lret
jmp
cmp
movsl
sub
adc
jns
ret
cmp
adc
test
inc
cmp
jb
in
das
mov
sub
jb
mov
mov
loopne
jb
adcb
cmp
or
hlt
es
xor
add
xchg
mov
shlb
shld
mov
mov
gs
ret
stc
rcrl
dec
jne
sbb
lock
pop
pop
or
xlat
out
xchg
sub
or
das
fnstenv
fists
dec
fsubrp
fs
dec
mov
scas
in
mov
add
test
add
xchg
jle
sbb
cmc
fisubl
lcall
test
and
pop
xchg
jnp
cmp
push
ljmp
aad
adc
xor
sub
test
movsb
aas
fs
scas
xchg
lock
loop
andb
sbb
jg
aas
and
mov
jno
ss
aad
xchg
pusha
enter
popf
pop
mov
xor
add
addb
or
cmc
test
popa
repnz
int3
adcl
arpl
dec
test
ja
jae
xchg
lods
fsubrp
aad
xchg
sub
or
es
jmp
push
fcoml
popf
pop
xorl
cmpsl
mov
inc
insb
jno
pop
sbb
add
sbbb
add
inc
bound
mov
mov
popf
or
xchg
int
jns
cmp
jne
pop
ret
sub
loop
mov
pop
stc
test
sbb
dec
out
add
pop
mov
jb
cli
test
mov
notb
xchg
arpl
addb
nop
int3
cmp
jp
xlat
mov
pusha
fdivs
outsb
and
stos
xor
aaa
out
fisubrs
xor
mov
in
or
roll
jae
mov
add
fbstp
lods
adc
jmp
mov
push
int
mov
clc
fstl
mov
scas
cs
out
inc
lcall
dec
push
pop
fwait
or
pop
mov
jno
insb
push
enter
xor
jno
fiadds
mov
aas
in
leave
cli
adc
test
rcrb
fidivrl
pusha
popf
movsb
and
mov
adc
sub
negl
xlat
xchg
cltd
jne
mov
dec
scas
fcoml
pop
ds
jle
fdivrs
sub
outsl
shrl
fs
or
sbb
je
fistps
push
cli
sub
adc
inc
paddb
mov
mov
movl
mov
pusha
outsl
push
mov
add
inc
lea
arpl
mov
rcll
xor
mov
pop
ja
mov
es
dec
add
mov
sti
pop
xchg
mov
sub
mov
fstps
std
movsl
cli
sub
adc
pop
pop
inc
cmpsb
jns
cld
das
jae
addr16
xor
mov
inc
shrb
xchg
xchg
out
lock
bound
pop
pop
lds
push
sbb
pop
stc
push
clc
jne
ret
pop
out
mov
sbb
or
sbb
aad
and
ss
dec
pop
adc
add
aas
or
cli
and
sbb
jb
test
dec
fcoml
popa
lahf
int
pop
rep
jmp
sbb
lret
dec
es
hlt
jbe
loop
shlb
movsb
push
jecxz
ret
movsl
frstor
fcomps
pop
into
aas
xor
imul
pop
push
loopne
pop
push
rcll
cli
clc
dec
jo
loop
pop
fisubs
fistpll
and
jbe
out
sub
sti
cmp
dec
rcl
dec
pop
jne
xor
inc
fisubrl
inc
insb
adc
push
dec
push
mov
insl
cmp
icebp
jecxz
data16
xchg
ljmp
mov
mov
shlb
les
mov
jne
stos
lret
scas
dec
ljmp
dec
aas
pop
jecxz
dec
scas
sbb
mov
xor
in
xchg
and
loope
and
cmp
jl
mov
mov
add
ret
add
movsb
insl
outsl
lret
push
cld
cmc
xchg
insb
cmp
fstpt
cmpsl
add
jno
cmpsl
mov
jp
sbb
add
pop
cmpsb
aaa
xchg
leave
fsubs
xchg
cld
test
mov
nop
out
sub
icebp
pushf
int
mov
xchg
jae
and
aas
cmpsb
scas
mov
ds
addr16
mov
dec
jge
in
or
test
pop
ret
mov
ret
ret
mov
cli
movsb
scas
jo
scas
cltd
cmp
mov
push
dec
es
stc
scas
fcomps
mov
mov
jb
or
hlt
adc
cwtl
cmp
cld
xor
cmp
divb
inc
mov
dec
insl
outsl
inc
add
pop
xor
mov
xchg
push
out
leave
sub
imul
ljmp
popa
and
stos
stos
or
sub
xchg
fst
inc
sbb
out
int
add
ja
cmp
das
add
stos
jb
xchg
in
jbe
push
shlb
jb
mov
clc
mov
in
jae
lret
icebp
in
push
nop
pop
pop
test
sbb
pop
xchg
jle
push
pop
push
insb
mov
pop
xor
cmpsl
fildll
test
dec
imul
mov
outsb
aaa
mov
int
push
inc
mov
scas
mov
jecxz
push
divb
sub
lret
xchg
lds
and
xlat
dec
or
sub
out
loopne
dec
dec
mov
popf
fs
sub
add
push
push
jae
icebp
jp
data16
or
add
in
mov
cmp
sbb
sbb
mov
test
sub
lods
push
cmp
hlt
movsb
aas
pop
movsb
icebp
das
cs
mov
xor
jmp
int
setnp
xchg
aad
ss
movsl
nop
and
mov
xchg
inc
add
mov
fsts
popa
jg
xor
and
cmpsb
cs
mov
pop
jge,pn
adc
stc
mov
jge
inc
mov
fwait
out
ljmp
push
push
dec
lret
xor
movl
out
xlat
ja
roll
jne
inc
dec
adc
scas
addr16
out
jns
lret
addr16
xchg
insl
ljmp
xlat
sbb
out
jecxz
lods
mov
repz
mov
stos
dec
pushf
mov
jg
in
dec
mov
test
mov
mov
sub
ds
jnp
ss
sbb
mov
mov
insl
push
cmp
pushf
shr
pop
in
mov
enter
mov
push
notb
mov
hlt
pusha
mov
jmp
mov
xchg
sub
jbe
jb
sahf
adc
addr16
and
push
mov
sub
std
xor
jle
roll
mov
dec
imul
add
scas
jge
aad
mov
push
inc
dec
pop
leave
cmpsb
xor
jmp
cmp
jmp
mov
cld
or
jmp
jo
popa
mov
out
sub
lahf
jecxz
std
or
mov
sbb
mov
int
dec
rorb
cs
mov
push
aam
popa
gs
xchg
jp
std
popf
pop
mov
dec
mov
pop
test
cmpsb
and
es
stc
jbe
xchg
and
cmp
out
negb
pop
xor
inc
fs
add
lock
adc
test
mov
mov
pop
cmp
jg
sub
cmp
cli
cmp
movsb
lods
daa
aaa
loop
pop
aaa
shrb
sbb
cli
dec
jae
and
repz
loopne
mov
inc
test
cmpsl
xchg
lcall
mov
fdivs
es
mov
fcmovu
bound
decb
cmpsl
xor
mov
pop
cwtl
icebp
es
leave
adc
xchg
loope
dec
cmp
inc
adc
stos
jnp
adc
push
pop
insb
pop
lcall
sbb
in
aad
pop
cld
pop
sbb
or
lahf
mov
add
into
call
mov
cmp
and
or
cmp
and
orb
xchg
add
int
xchg
mov
push
mov
xchg
mov
flds
nop
cmc
fwait
sbbl
xchg
outsl
sbb
cmovno
or
fcomps
push
jbe
sahf
inc
movsl
rcl
mov
mov
fdivrs
mov
gs
or
mov
mov
insb
fwait
lret
mov
addr16
xchg
jge
cmpb
inc
fwait
adc
pop
mov
mov
add
in
lods
xchg
into
jge
aam
cld
aaa
mov
insb
aas
jns
pop
cmpsl
adc
dec
ss
xor
jbe
jae
jp
xchg
cmp
inc
mov
push
adc
or
mul
cmpsb
xor
enter
lahf
dec
jo
push
cwtl
dec
cmpb
adc
lret
enter
dec
mov
pop
jg
jl
mov
mov
push
loope
test
mov
sub
or
push
movsl
loope
push
xchg
outsb
mov
fiaddl
add
fwait
dec
inc
int
and
push
arpl
adc
test
sahf
sbb
pusha
aad
xor
pusha
push
and
mov
test
jp
mov
push
mov
loopnew
adc
xchg
int3
repz
aad
cmp
lahf
xchg
mov
ret
sub
movsb
je
and
das
testb
jp
sbbb
mov
movsb
fsubs
mov
loopne
fwait
ds
rolb
mov
sbb
pop
cmpsl
out
mov
popa
mov
movsb
sarl
mov
pop
xchg
mov
adc
mov
scas
push
pop
inc
cmp
frstor
sub
mov
lcall
frstor
call
adc
call
inc
mov
mov
pop
test
int
jecxz
jno
add
push
push
out
adc
add
int
shlb
adc
nop
jg
add
lods
stc
dec
push
add
fistpll
dec
dec
je
xor
cmc
dec
or
add
add
sbb
sub
xchg
pop
mov
es
add
test
push
xchg
test
insl
or
dec
test
hlt
push
lret
inc
mov
mov
push
out
push
out
ret
es
inc
dec
adc
daa
scas
sbb
outsl
jb
pusha
leave
mov
dec
fdivp
and
jae
xchg
jne
jecxz
ret
addb
pop
or
lds
cmp
jl
dec
push
fsubrl
loopne
and
and
mov
outsb
fistl
data16
movsb
push
mov
test
xchg
ss
je
inc
out
mulb
xor
add
adc
in
hlt
push
les
jbe
push
mov
test
xchg
ss
je
inc
out
mulb
xor
add
adc
in
hlt
push
les
jbe
push
mov
test
xchg
ss
je
inc
out
mulb
xor
add
inc
hlt
push
les
jbe
push
mov
add
adc
fwait
mov
push
adcl
in
dec
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xchg
xchg
xchg
cmpsl
in
cmc
or
xchg
pop
adcl
jne
add
addr16
xchg
aad
in
cmc
movl
pop
push
daa
insl
aaa
jne
sub
addr16
xchg
adc
mov
fucom
scas
testl
inc
push
cmp
push
sbb
xor
nop
push
mov
pcmpeqb
fsubrs
add
adc
fidivl
iret
sbb
sti
xchg
dec
or
nop
xlat
push
sbb
dec
cli
mov
enter
push
dec
xor
lahf
mov
imul
inc
daa
testl
xchg
xchg
aad
loope
cmc
loopne
ret
idivl
mov
xchg
mov
lcall
in
inc
dec
js
ja
inc
sbb
sahf
mov
xchg
fs
out
inc
add
outsl
test
aaa
jbe
mov
fs
cmp
add
aad
mov
push
out
fdivs
ficoml
leave
negl
dec
xchg
cmc
cmpsl
xchg
mov
movl
pop
std
daa
addr16
dec
inc
cmp
addr16
jecxz
into
mov
cltd
and
repnz
push
jb
daa
rorb
inc
push
jp
push
xor
repnz
ret
cltd
xlat
xchg
lahf
int3
movsl
xchg
inc
and
dec
cmp
loop
xchg
xor
mov
xlat
xchg
out
divl
daa
gs
jne
add
ja
xchg
xchg
aad
in
cmc
movl
pop
push
daa
gs
jne
add
ja
xchg
mov
cmp
jb
mov
jge
test
ja
in
pop
testl
inc
sbb
sub
aad
sbb
lret
xchg
pop
out
arpl
hlt
jmp
lods
cltd
mov
or
mov
push
inc
inc
xchg
mov
mov
pushf
in
js
pop
mov
cwtl
lret
push
cmp
and
sahf
jmp
mov
sbb
push
pop
push
push
sarl
add
push
gs
movsl
pop
out
cmp
shlb
add
jae
and
test
int3
cmp
hlt
adc
inc
mov
cld
insl
outsb
mov
pop
xor
cmc
jp
orb
in
inc
popf
out
jl
sbb
lret
mov
pusha
repnz
xchg
jge
mov
or
ja
push
pop
jl
sbb
aam
push
sbb
sbb
xor
or
gs
js
dec
inc
insb
mov
inc
mov
cli
mov
xchg
or
add
dec
insb
aad
in
mov
leave
ljmp
cwtl
pop
jo
gs
cmp
mov
or
jbe
adc
sub
aad
lods
cs
lods
sub
aam
fdivrs
arpl
adc
idivb
add
ss
jae
das
scas
decb
stos
in
mov
xchg
cmc
lcall
ljmp
insl
mov
out
lods
sti
mov
das
cmpsb
imul
test
push
add
push
xor
lods
and
ja
add
repz
js
xlat
lods
push
aam
cmp
pop
nop
inc
jno
movsl
test
sahf
push
jge
push
and
stos
jmp
ds
aaa
fsubl
xchg
and
arpl
bound
pop
test
jmp
inc
adc
popa
mov
cmp
cltd
fsubs
dec
in
lds
mov
outsl
test
loope
cwtl
test
insl
lock
imul
xchg
lods
pop
xchg
dec
shlb
fwait
jne
xor
inc
ljmp
jnp
sub
push
mov
fsub
push
mov
in
leave
addb
enter
inc
bound
sbb
lahf
repz
pop
nop
mov
adc
sbb
mov
jle
in
leave
test
lret
mov
add
enter
fwait
clc
add
push
divl
sub
sub
rclb
jl
es
add
cwtl
jmp
hlt
je
fcomps
push
mov
fs
push
jne
jle
sbb
out
leave
cmp
adc
mov
mov
push
sbb
filds
xchg
outsl
js
cld
or
push
sarb
xchg
or
push
std
scas
xor
outsl
jbe
cmp
inc
or
lcall
xchg
adc
loope
ljmp
aaa
push
loop
push
or
cltd
das
mov
dec
test
xchg
jecxz
int3
mov
aad
insl
rolb
negb
jne
inc
xor
push
cmpsl
rolb
dec
mov
andb
sbb
xor
mov
jmp
call
ret
mov
out
test
xor
sub
dec
jg
fistps
dec
mov
sbb
mov
gs
addr16
push
adc
adc
mov
test
inc
mov
fisubs
popf
dec
pop
rcll
popf
xor
adc
gs
and
rcrl
hlt
jno
ja
popf
xor
or
cwtl
les
adc
mov
enter
cmp
or
push
movsb
and
cmp
dec
mov
sub
push
negb
xchg
lds
mov
fnstenv
pop
cmp
pop
mull
outsl
stos
leave
sub
mov
dec
jno
xchg
loope
icebp
mov
cmp
cmp
adc
pop
movsl
enter
subl
pusha
sbb
mov
js
les
das
push
or
sub
out
imul
lret
xor
daa
je
xor
test
cmp
mov
mov
push
testl
negl
pop
inc
mov
std
adc
in
shrl
mov
imul
lret
or
push
repz
inc
xchg
pushf
xchg
push
jmp
int3
bound
mov
pop
add
fdivrs
shlb
mov
push
fucom
xor
sbb
push
iret
in
cmc
push
fs
and
into
jo
aad
ss
int3
jle
mov
inc
mov
push
icebp
nop
test
cld
pop
pop
or
sub
mov
cmp
out
adcb
movsl
and
mov
sbb
or
pushf
push
cmpsl
sarb
push
pop
sarb
xor
bnd
add
adc
adc
cmp
sub
mov
sar
addb
xlat
inc
adc
cmp
bound
pop
loop
adcb
icebp
xlat
sarl
pop
sti
out
cmp
lahf
sub
inc
xchg
js
push
hlt
adc
cmp
cld
pop
loop
pop
les
or
or
mov
bound
daa
fcoml
cmp
or
pop
mov
out
jbe
outsb
dec
mov
sub
jo
inc
out
sahf
mov
cmp
or
out
push
mov
push
sub
mov
pop
push
inc
sbb
mov
daa
and
ds
ja
dec
mov
add
data16
sbb
pushl
fisubrs
or
cwtl
add
xchg
mov
jge
cmp
xlat
fldlg2
jno
or
push
hlt
lock
inc
movsl
call
adc
mov
dec
jnp
adc
imul
inc
pop
fsts
rolb
mov
aas
dec
inc
ret
andl
rcrb
outsb
ret
or
int
notl
cmp
fmull
and
mov
mov
or
dec
and
or
scas
mov
insb
bound
pushf
roll
ljmp
call
jae
xor
outsb
jg
fcompl
jno
mov
mov
adc
rcr
into
addb
lock
lea
xchg
jne
dec
fs
lret
lret
inc
sub
jle
mov
subb
sub
pop
dec
mov
fisttps
lcall
cs
enter
lcall
rcrb
pop
xor
std
jmp
cmpsb
adc
sbb
scas
inc
std
or
push
cli
sar
xchg
fistpll
dec
mov
lahf
dec
mov
lahf
pop
mov
stc
sub
jbe
pusha
sahf
cld
scas
push
cmp
lods
adc
lods
xchg
mov
pop
cmc
fsubrs
xchg
jmp
jae
fs
bound
jne
mov
sub
scas
add
aaa
push
sbb
jne
repnz
popa
shl
pop
imull
adc
push
dec
lock
int3
fstpt
lds
pop
pusha
pop
cli
mov
jnp
jle
fbld
push
orb
adc
push
xchg
pop
inc
adc
rcrl
inc
lret
scas
and
sbb
cmp
js
rcll
pushf
push
out
jge
iret
add
pop
mov
cmp
dec
push
aad
in
iret
mov
and
test
jg
or
push
mov
sub
lock
and
iret
dec
xchg
scas
and
fidivrs
inc
cwtl
test
inc
mov
fdivs
jmp
inc
jmp
adc
mov
mov
movsb
sub
adc
mov
dec
mov
sahf
mov
jp
mov
int3
adc
call
sar
pop
xchg
in
push
lahf
sub
stc
ss
xor
repz
xchg
shll
inc
jo
mov
mov
sub
sbb
xchg
adc
movb
jno
push
mov
cmpsl
adc
adc
inc
sub
push
je
xor
int
inc
aaa
das
mov
fstps
sub
or
adc
hlt
lock
fidivs
stos
dec
add
ss
out
aaa
testb
sub
adcl
arpl
inc
loop
jecxz
gs
cmp
hlt
je
cmp
lock
pop
hlt
jg
lods
js
jp
push
push
dec
cltd
sub
mov
out
adc
add
xor
test
leave
dec
clc
out
dec
mov
or
xor
jle
sbb
gs
loope
aas
adc
cld
movsl
pop
and
jo
addr16
adc
sub
sarb
test
stc
inc
pop
add
cli
shlb
test
stc
xchg
pop
xor
adc
xchg
mov
jecxz
cmp
shll
add
bound
rcl
test
lea
pusha
or
pusha
jns
inc
popa
pop
sbb
or
dec
rcrb
jae
pop
lahf
pop
xor
testl
pop
cmpsl
xor
test
sub
lret
push
or
xchg
in
sub
dec
adc
inc
or
xor
pop
popa
add
inc
push
ds
in
and
jns
dec
stos
insb
lret
inc
repnz
icebp
pop
fcoms
stos
mov
adc
push
push
loope
addb
mov
cmp
add
adc
lret
outsl
xchg
mov
insl
call
push
xchg
adc
pop
call
cmp
xchg
jge
gs
std
cmpsb
xchg
cmpl
push
aad
dec
pop
mov
mov
je
add
xchg
dec
xchg
mov
cmp
xor
add
sahf
pop
jnp
xchg
dec
out
jbe
fisttpl
jmp
adc
inc
push
pop
jno
mov
pop
jge
sbb
dec
inc
enter
imul
and
mov
subl
xor
jl
and
insl
push
xchg
dec
outsb
dec
rcrl
test
push
les
mov
outsl
push
bound
pop
cli
push
mov
pop
aas
or
mov
push
cs
imul
push
cmp
inc
dec
divb
insl
loop
inc
add
lcall
cmp
dec
xor
pop
and
fisttpl
mov
sbb
jle
and
insb
adc
rclb
outsl
dec
roll
outsl
addr16
inc
sub
int
mov
pop
inc
jb
int
ja
in
fs
mov
mov
push
sbb
out
and
bound
add
cs
pop
dec
mov
daa
cmp
aam
mov
fistpl
scas
stos
mov
in
loop
mov
jne
ja
lods
aas
mov
in
sub
adc
daa
aas
jle
lea
loop
sbb
ja
cmp
dec
adcl
push
icebp
int
pop
mov
xor
jns
popa
add
lds
insb
pop
sub
pop
add
fisttps
jo
out
aad
pushf
ret
push
xchg
outsb
into
push
cltd
sbb
pop
xchg
cmpsb
and
xchg
xchg
pop
jo
pushf
cld
mov
vpunpckhqdq
or
pop
jle
adc
xchg
arpl
add
out
mov
push
popl
and
jb
push
adc
xchg
add
fs
jb
sub
int3
add
les
fadds
xchg
pop
inc
xchg
mov
cmpl
mov
les
loop
inc
push
xchg
mov
sbb
dec
lea
aaa
xor
jno
jb
int3
mov
pop
orb
bound
push
lock
imul
mov
ficompl
pop
les
push
inc
adc
shlb
fcmovne
nop
ret
xor
notl
lods
pop
inc
aas
out
shrb
mov
idivb
mov
xor
pop
mov
mov
movl
ljmp
orb
pop
add
scas
sub
adc
movsb
pop
aas
jge
mov
leave
pop
addb
fildll
or
fstpl
inc
out
fucomp
roll
mov
dec
loope
clc
loop
nop
insb
cmp
ds
xor
cmp
xchg
mov
outsl
gs
and
xchg
daa
je
test
shlb
mov
loop
jb
mov
dec
gs
sub
mulb
scas
dec
push
sub
xchg
mov
inc
mov
lods
push
adc
bnd
add
out
xchg
dec
adc
dec
mov
adc
cld
movsl
and
pop
scas
outsb
nop
sub
call
cwtl
jmp
mov
sbb
sbb
jno
mov
fiadds
xchg
test
outsb
loop
fs
cli
lock
push
aam
leave
pop
xchg
inc
inc
into
in
xchg
xor
cli
movsl
pop
sbb
inc
cmpsb
dec
loopne
js
mov
push
push
decl
cmpl
pop
push
and
cmpsb
push
push
dec
call
adc
jbe
push
roll
jl
lahf
mov
push
rorl
add
outsl
movsl
movsb
imul
test
jmp
pop
cli
xchg
fsubrs
sub
in
movzbl
sub
jnp
cmc
push
push
fsubrl
mov
fisttpll
pusha
or
mov
out
inc
jne
call
loop
pop
test
inc
pop
add
popf
pop
xchg
sub
push
out
add
inc
ds
ret
push
and
aad
cwtl
imul
sub
sub
add
adc
mov
je
xchg
data16
leave
push
adc
ljmp
daa
cmp
xor
mov
cs
daa
pop
push
push
jmp
push
xchg
xchg
push
dec
enter
and
sub
mov
push
xchg
test
push
stos
lcall
rclb
xor
xchg
popa
and
jne
ss
cli
xor
iret
repnz
xor
sbb
jecxz
sbb
push
jmp
clc
loope
xor
sbb
xor
testl
cld
int3
frstor
fildl
outsl
popf
xor
dec
cmp
mov
inc
add
das
xor
xor
stc
andb
and
jp
popa
popf
mov
jl
movsb
jbe
ljmp
xlat
mov
xor
push
push
adc
mov
sub
push
push
fstps
cwtl
aad
imul
aaa
fnstenv
dec
push
rclb
testb
dec
sahf
push
and
push
add
sbb
push
fidivrl
xchg
out
movsb
mov
idiv
cmpl
sbb
cmp
push
stos
pop
mov
stc
outsl
test
lds
movsl
data16
gs
sbb
add
popa
aad
cwtl
xchg
adc
or
in
fnstsw
dec
lock
fs
jg
insl
and
pop
mov
mov
xchg
sahf
dec
imul
ret
jae
sub
stos
jno
add
pop
in
loopne
dec
mov
xor
pop
push
mov
add
stc
lock
in
mov
js,pn
dec
or
pop
add
imul
push
adc
mov
xchg
cli
or
pop
test
loope
inc
and
data16
cmc
inc
fsubrl
out
cmc
mov
inc
push
jmp
dec
add
cmc
adc
mov
jne
sbb
mov
xchg
popa
add
push
test
push
shlb
lret
xor
sbb
int3
mov
mov
es
adc
repnz
rdmsr
push
arpl
fidivrs
pop
mov
out
adc
movb
in
ljmp
fnsave
aam
test
fstl
lods
or
and
ret
adc
into
push
cmp
jne
out
cltd
mov
rcrb
jns
sbb
or
jo
loopne
ret
cmp
or
mov
and
lea
testl
inc
fsubs
stc
imul
shrl
lahf
js
xchg
add
sub
mov
xor
push
pop
or
mov
loop
add
addr16
xor
add
out
int3
pop
aad
popa
cmpsl
lret
pop
inc
test
push
and
pop
ljmp
xor
add
nop
jbe
sub
jl
pop
mov
pusha
mov
push
sahf
mov
sahf
test
jnp
nop
decb
rorl
notl
mov
dec
repnz
les
and
cmp
out
jns
xchg
add
xchg
xor
dec
push
and
xor
cmpsl
push
mov
loope
insb
cli
sbb
pop
jb
or
xchg
in
cli
lea
es
repz
adc
or
and
js
cmp
jg
or
xor
adc
sub
xchg
cmp
xor
mov
jnp
jo
daa
in
mov
ds
in
jnp
inc
sbb
inc
sub
add
pop
push
add
leave
xlat
or
push
dec
cmp
stc
mov
jno
and
mov
dec
inc
adc
pop
cmpsl
dec
mov
mov
pusha
cmp
or
leave
data16
in
out
into
out
xchg
adc
fdivl
cli
push
dec
lcall
add
mov
lock
test
cmp
mov
arpl
es
fimull
pop
rcll
sti
imul
inc
pop
cmp
cmc
mov
cltd
gs
xchg
mov
shrb
mov
adc
int3
imul
add
mov
int
imul
fnsave
je
loopne
hlt
into
inc
mov
dec
test
lods
jecxz
mov
pop
adc
mov
mov
dec
clc
push
push
jae
jp
int
ret
jb
mov
push
ljmp
jb
stos
ja
repnz
push
inc
and
add
data16
xor
mov
mov
xchg
aam
dec
aaa
imul
push
scas
and
outsb
int
jmp
adc
push
pop
push
stos
decb
in
mov
sarb
sbb
fs
and
sbb
and
dec
stos
daa
enter
mov
mov
pop
jne
inc
push
repz
cli
cmp
cmp
loopne
into
fistpll
bnd
or
dec
rclb
lahf
adc
mov
fsubs
je
sbb
divb
outsl
add
mov
inc
dec
loope
xor
mov
sbb
adc
psubsw
pop
sbb
pop
js
xchg
aam
push
push
imul
adc
cs
out
repz
push
movsl
jg
lods
repz
int
add
arpl
icebp
pop
inc
imul
jbe
jge
mov
pop
inc
sahf
mov
mov
add
stos
es
aas
movsl
jg
or
sbb
mov
xor
negb
lods
imul
js
pop
out
jmp
test
lods
mov
add
mov
jno
clc
jbe
out
cld
loopne
cmp
and
rolb
adc
adc
sub
xlat
jecxz
pushl
in
lret
pop
outsl
fwait
push
pop
mov
pop
mov
mov
or
addr16
xlat
jns
ljmp
dec
scas
push
and
mov
jnp
mov
xchg
fnclex
sbb
jle
push
in
jae
inc
or
jp
mov
out
push
cli
hlt
adc
stc
mov
push
xchg
pop
outsb
or
sbb
imul
mov
bnd
xchg
aam
pop
stos
lahf
push
dec
cmp
sbb
jge
mov
add
pop
out
enter
push
dec
cmpsl
sub
xor
repz
xor
out
inc
shlb
xor
dec
mov
pop
loope
adc
loope
and
xchg
add
jne
push
pushf
aam
sub
or
pop
mov
int
cmp
dec
xchg
sahf
gs
leave
outsl
stc
sub
push
sbb
xchg
negb
push
jae
push
cmp
icebp
dec
pop
xor
inc
dec
jle
mov
xchg
les
pop
iret
xchg
lock
ds
xchg
jnp
pushf
js
jmp
shlb
sub
in
inc
cmp
mov
mov
fisubs
pop
and
fidivrl
pop
notl
lahf
and
cmp
add
test
in
xor
push
mov
stos
pop
pop
daa
rcll
addr16
ja
pop
add
sti
mov
adc
sbb
mov
sub
adc
fdivs
and
rol
and
cmp
mov
lahf
push
movsb
add
push
xchg
cmp
test
popa
jne
sbb
insb
xchg
xchg
push
jns
mov
hlt
dec
mov
test
stos
in
aad
mov
cld
fs
movsl
inc
popf
ds
movsb
mov
mov
cmp
std
xor
inc
hlt
enter
scas
ss
outsl
or
ffree
lret
pusha
push
jp
repnz
shrl
iret
in
push
jnp
xchg
and
repz
push
negl
mov
add
xchg
xchg
inc
imul
jp
or
andl
sahf
enter
cs
je
pop
dec
dec
sbb
mov
out
lret
nop
cmp
divb
fnstenv
arpl
aam
imul
arpl
sti
lods
and
push
scas
aad
loopne
cmc
movl
pop
push
daa
gs
jne
add
ja
xchg
xchg
aad
in
cmc
movl
pop
push
daa
gs
jne
add
ja
xchg
pop
std
mov
inc
test
out
ja
pop
inc
pop
push
daa
gs
jl
add
addr16
roll
add
xchg
out
divl
mov
aaa
add
jge
insl
pop
pop
pop
dec
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
sub
or
mov
push
test
outsl
jmp
mov
sub
jns
imul
fstps
stc
outsb
stc
pop
jmp
scas
and
push
out
popa
fisubrs
cmpb
or
fnstcw
cmpsb
xor
repnz
int
jmp
inc
dec
add
mov
icebp
inc
shl
enter
fmuls
inc
hlt
xchg
add
dec
arpl
push
cld
inc
sbb
mov
sbb
out
pop
out
cmc
outsb
lret
dec
lcall
or
sbbl
xor
sbbb
sbb
cmpsb
decl
xchg
push
rorl
leave
mov
jmp
push
mov
leave
andl
cltd
into
cltd
rorl
loope
push
and
stc
scas
icebp
out
mov
cmpsb
mov
mov
data16
les
icebp
pushf
outsl
lcall
mov
sub
jns
jo
cmpb
mov
jle
outsb
jecxz
jmp
xlat
pop
fistps
sub
imul
lods
sub
shrb
push
pop
in
xor
mov
loopne
pop
in
pop
mov
sbb
sbb
std
push
sti
inc
notb
int3
dec
out
jns
imul
mov
jle
outsb
stc
pop
jmp
scas
cmp
dec
out
jns
imul
mov
jle
outsb
stc
pop
jmp
xchg
or
pop
loop
cmp
sbb
jae
adcl
jns
nop
lods
mov
push
lret
mov
push
addl
lret
pop
sbb
in
aam
fiadds
adc
jle
cmpb
loopne
pop
mov
sub
mov
gs
ljmp
mov
push
adc
adc
je
mov
mov
jmp
fsubs
shlb
mov
xlat
icebp
xor
cld
sbb
xchg
js
orb
cli
adc
push
insl
mov
in
mov
sub
mov
push
ds
xchg
cli
mov
xor
loop
or
sbb
adc
sub
inc
jbe
fsubl
mov
std
negl
fdivl
xor
adc
push
jo
lock
push
mov
sbb
cs
sub
in
xchg
sub
add
cmp
push
jns
negb
in
movsb
jnp
pop
out
and
xor
xor
cmp
xor
inc
leave
push
pop
or
jp
mov
push
lods
loopne
test
cmp
rorb
xchg
pop
jne
pop
xchg
add
push
in
xchg
sbb
xor
mov
inc
dec
mov
cmc
mov
ffree
cwtl
and
add
pushf
sbb
dec
xchg
jmp
and
push
mov
les
jmp
or
lahf
and
inc
inc
ljmp
jnp
repz
mov
decb
movsl
xchg
neg
in
pushf
push
add
pop
jne
mov
lea
sarl
mov
enter
outsb
jg
sbb
test
aam
addr16
insb
lcall
repz
repnz
inc
push
dec
test
xchg
outsl
lret
repz
push
fucomi
stc
xor
pop
or
dec
out
add
ds
das
arpl
ljmp
les
gs
mov
dec
dec
mov
adc
xor
gs
dec
mov
test
daa
and
pop
jnp
adc
jp
pop
rorl
cmp
mov
cmp
dec
mov
decl
add
loop
aam
xchg
adc
pop
mov
notb
mov
bound
xor
push
mov
mov
mov
sub
fwait
cmpb
pushf
cmp
inc
push
push
pop
adc
sub
adc
cmpsb
test
pushf
and
push
push
jg
and
int
cmpsl
into
and
gs
pop
push
mov
mov
cwtl
sbb
jl
subl
lock
sti
stc
pop
imul
sub
xor
mov
leave
dec
pop
out
ds
popa
clc
jle
scas
out
push
mov
sub
decl
push
and
iret
pop
stos
sbb
and
pushf
jne
dec
dec
aas
imul
sbb
clc
gs
lret
nop
scas
sahf
cli
mov
mov
cltd
pmulhuw
in
push
aaa
inc
das
lods
ret
test
in
jnp
in
sub
jp
cltd
sub
fidivl
cmpb
in
pop
das
inc
adc
mov
outsb
lahf
mov
fwait
mov
mov
cmp
int
sbb
pop
popa
inc
repnz
repnz
cmp
jl
aas
sahf
mov
push
or
cmp
mov
mov
fnstenv
jmp
add
stos
add
xchg
mov
aad
sbb
xor
jnp
lcall
test
mov
int3
mov
into
pop
dec
addb
test
bound
adc
stos
xchg
sub
add
sub
popf
mov
jns
sub
stos
aaa
push
test
jl
xor
xchg
mov
repnz
lock
mov
dec
jbe
cmp
and
sar
and
add
xor
sbb
shlb
xor
or
push
dec
and
outsl
aam
inc
inc
push
inc
push
and
int3
out
xchg
cmp
jbe
fcmovnbe
cmpsb
iret
es
test
cmp
xchg
inc
daa
mov
adc
jnp
mov
inc
loop
cmp
and
cmpsb
inc
cmpsl
lock
mov
lock
insb
cli
fisubs
daa
jp
pop
and
leave
dec
icebp
loop
sub
mov
ds
xor
push
out
cs
sbb
movsl
call
inc
mov
xor
sbb
push
jle
jge
jno
pop
add
mov
adc
or
inc
das
scas
push
fwait
lds
roll
stos
fidivrl
cmp
lds
cmpl
or
xor
and
in
and
pop
mov
dec
jo
int
xchg
adc
fwait
aam
int3
repz
cld
sbb
shrb
xor
test
repz
push
xchg
pop
adc
pop
cli
int3
test
push
add
xor
cmp
test
in
in
cli
adc
iret
jg
push
pop
fnstsw
cwtl
add
loope
and
xor
and
cwtl
cltd
mov
cmp
pop
loope
pop
xchg
pusha
cmp
lods
or
into
cs
pop
lea
pop
jge
cmpsb
in
insl
pop
je
push
add
fidivs
insb
cmp
sbb
jp
fbstp
mov
or
push
or
lret
loopne
mov
adc
mov
inc
pop
lret
jl
cmp
mov
inc
dec
in
fimuls
mov
sbb
pop
pop
cmc
movsb
jno
or
daa
xchg
jle
jmp
imul
sbb
xchg
jl
ljmp
rcrl
mov
and
mov
xchg
lret
dec
int3
pop
or
negb
in
inc
dec
add
nop
mov
repz
pop
rclb
dec
mov
sub
mov
bound
shl
rolb
jl
jbe
or
stc
icebp
cmp
inc
cmp
or
test
imul
mov
out
push
idivl
pop
push
inc
cmp
mov
push
fidivrl
call
or
mov
test
add
dec
adc
out
sbb
lock
ds
js
xlat
or
negb
push
mov
cs
jecxz
repnz
aaa
push
add
outsl
mov
dec
movsb
aaa
hlt
jns
mov
jmp
stc
and
sub
cmp
sub
scas
cmpsl
pop
mov
and
sar
add
mov
lcall
inc
jle
dec
shl
inc
jp
in
fcoms
ss
push
jl
mov
fmul
xor
adc
xor
add
stc
inc
pop
or
bound
adc
pop
pop
test
mov
xor
test
pop
xorl
in
dec
adc
mov
mov
leave
add
insl
pusha
out
aad
adcl
lcall
mov
in
jmp
mov
push
movsb
test
mov
dec
in
cmp
xchg
pop
adcl
xor
mov
cmp
pop
outsl
push
push
call
daa
jne
lods
fsubs
out
mov
pop
lahf
call
push
out
dec
cmp
xor
jae
loope
mov
push
push
jmp
jg,pt
mov
dec
jns
xchg
xorb
cmp
pop
out
shld
hlt
sbb
aaa
inc
ljmp
dec
adcl
push
xor
test
mov
adc
xor
lea
shll
adc
and
mov
mov
mul
mov
push
inc
jge
xchg
je
scas
mov
jg
popa
icebp
sub
into
testb
test
pop
sub
jae
lods
add
dec
aam
add
adc
ljmp
dec
cmpb
rcrl
hlt
insb
insb
std
lock
jg
mov
loope
xor
mov
cli
xchg
out
lea
loope
push
inc
ret
scas
aaa
pop
adc
pop
xor
loopne
rcrb
dec
repnz
mov
jne
push
ss
repz
loope
mov
loopne
xor
or
test
pop
andl
pop
ljmp
loope
pop
and
mov
add
movsl
dec
jl
outsl
negb
xchg
das
mul
test
ret
push
mov
pop
pop
cmp
xchg
data16
mov
push
mov
lods
pop
out
mov
jo
ret
out
aam
lret
dec
add
mov
xchg
int
mov
out
sbb
dec
fsts
pop
cmp
repnz
lods
xchg
call
mov
loop
leave
xchg
xor
mov
cmc
dec
fisttpl
xor
add
in
cmp
dec
jge
lock
xor
mov
mov
movsl
and
mov
adc
xor
push
push
mov
and
jo
dec
mov
mov
xchg
rcr
loope
add
lock
mov
fs
cmp
dec
loop
push
jmp
gs
icebp
in
add
and
sbb
frstor
imul
mov
jl
fnstsw
cmpsl
mov
mov
repz
add
xchg
mov
push
test
pushf
addb
into
adc
dec
mov
dec
xchg
mov
jno
gs
xorl
cmp
pop
jge
in
xchg
subb
sti
xor
insb
clc
inc
out
in
std
cs
pop
add
sbb
pop
lret
imul
sbb
and
sub
ja
adc
mov
mov
pop
outsl
repnz
and
xchg
jne
ficoml
xchg
lret
xlat
call
andl
outsb
xor
mov
mov
mov
sub
insb
cwtl
jmp
sbb
into
es
push
popa
sbb
cmp
xchg
xchg
add
inc
jns
mov
mov
dec
jns
imul
jg
sub
fs
in
adc
lods
scas
push
inc
xchg
or
adc
mov
xchg
stos
mov
push
add
into
ljmp
dec
push
fnsave
mov
xchg
cmp
or
mov
xchg
scas
fs
push
cmpsl
and
mov
and
cmp
inc
fiaddl
lahf
xor
jno
jmp
pushf
test
lret
push
adc
push
lods
jo
pop
inc
cmp
mov
xor
or
ffree
or
mov
mov
scas
add
jae
das
outsl
push
es
sbb
jmp
sbb
cwtl
into
adc
adc
dec
das
jle
cwtl
ffreep
fistpl
dec
push
xor
movsl
cmp
roll
test
push
nop
dec
in
dec
out
mov
pushf
cmp
push
and
ja
sbbb
lds
leave
sub
je
lock
mov
pop
cmpl
lahf
sub
rolb
fs
jnp
jae
icebp
cmp
xchg
or
xlat
sbb
jo
dec
cmpsl
scas
mov
imul
ss
adc
sar
lock
movsl
pop
mov
xchg
test
lock
cltd
adc
push
stc
je
sub
jg
int3
insb
sub
inc
inc
dec
inc
mov
sahf
int
pop
jg
push
arpl
sti
mov
pop
addb
mov
stc
out
stos
inc
mov
pop
or
dec
or
push
xchg
or
stc
cltd
push
sbb
xchg
insb
mov
jb
outsb
push
je
inc
jnp
rclb
jno
call
add
add
lea
xchg
cmpsl
sub
ret
popf
add
pop
xor
and
dec
jecxz
pop
or
sbb
sub
lds
add
push
rcll
mov
ljmp
std
fidivs
sti
daa
fs
subb
add
mov
fdivrs
dec
xchg
push
fwait
mov
repnz
arpl
ljmp
shlb
jl
les
dec
loop
fildl
test
rcrb
xor
pop
push
jg
ljmp
mul
mov
ret
scas
mov
cmpb
xorl
lret
mov
push
pop
adc
fldt
movsb
push
ret
hlt
lds
sub
xor
les
cmp
add
pushf
mov
sbb
pop
ljmp
bound
and
xor
mov
in
mov
iret
stos
push
cmp
lods
in
and
in
push
push
aad
dec
push
mov
jns
mov
sbb
in
ret
sbb
push
in
arpl
cmp
jge
fmull
iret
ja
pop
roll
das
inc
mov
sub
mov
add
add
lcall
sub
mov
pop
or
mov
shlb
cli
or
and
pop
loopne
out
mov
addr16
xor
pop
dec
cs
test
lcall
push
loopne
and
xchg
pop
shlb
xor
xchg
sar
mov
inc
iret
xor
cmpsb
fstpl
outsb
sarl
mov
jb
or
cld
push
xor
or
leave
and
js
pushf
popa
fbld
jb
bound
xchg
aad
scas
out
loopne
repnz
shrl
inc
das
mov
mov
lea
xor
lcall
les
jge
inc
mov
jmp
jne
push
adc
scas
inc
xchg
pop
mov
mov
aas
push
xchg
xchg
mov
fbld
movsl
mov
xor
clc
mov
or
aad
repz
jbe
dec
lods
fs
cmpsl
or
cmp
jmp
add
mov
imul
and
outsl
mov
jl
lcall
pop
cmp
shr
test
jo
xlat
cmp
outsl
shlb
addr16
pop
fstps
pop
add
xchg
cmc
push
xchg
fwait
jmp
cmp
inc
jo
lds
ljmp
aam
add
popf
sbb
lock
bound
cmpsb
sub
xchg
jne
mov
push
idivl
or
xchg
pop
add
add
sub
repnz
xchg
subl
loop
lock
adc
fstps
jne
mov
and
pop
xor
xchg
xor
cmp
and
mov
cmp
pop
ficoms
in
add
mov
mov
push
cmpsl
fs
jnp
stos
inc
std
inc
addr16
sbb
imul
ljmp
xchg
popa
mov
outsl
jnp
push
dec
pop
mov
cli
call
cmp
xchg
mov
jge,pt
push
out
xchg
inc
add
scas
inc
add
outsb
jl
fistps
push
nop
jns
aad
fs
inc
ljmp
aaa
lods
or
notb
sbb
fadd
push
bound
enter
mov
dec
jne
sahf
jns
test
push
push
mov
sbb
inc
outsl
mov
sbb
int3
mov
push
sub
push
in
inc
stos
out
and
mov
inc
sbb
ljmp
xchg
push
mov
scas
ret
lock
sub
lret
jle
repnz
arpl
and
pop
push
mov
or
sbb
xor
xor
add
pop
loopne
sub
pop
ds
mov
ficoms
or
inc
add
sub
xchg
adc
sub
out
jo
mov
xorb
jo
jg
sub
inc
or
sub
mov
jne
push
push
or
je
les
fcmovb
xor
and
daa
cli
add
sbb
ret
dec
scas
inc
mov
jmp
cmpl
in
test
adc
lods
popf
cmpsb
out
into
fnstcw
es
jge
push
jb
jecxz
les
dec
arpl
xchg
shl
jo
test
push
movsl
sbb
jg
stos
stos
sbb
xor
repz
xor
test
dec
inc
stos
jmp
xchg
in
pop
mov
jae
aaa
out
jne
xor
mov
or
movsl
int3
cmp
in
push
and
mov
adc
xchg
jg
xor
mov
fxch
pop
or
in
mov
data16
sbb
xchg
mov
cmpsb
repz
cmp
repz
adc
lahf
in
lret
and
fidivrl
inc
icebp
nop
cmp
in
jnp
sarl
sub
mov
push
mov
clc
outsb
pop
dec
pop
cli
stos
lahf
std
aas
je
add
or
dec
rcrb
adc
stc
sub
mov
dec
cmpsl
sub
into
pop
and
cmp
inc
jne
rorl
inc
lret
mov
pop
cmp
shlb
mov
out
mov
inc
pushf
mov
ss
pop
add
sahf
lahf
add
sub
mov
inc
paddq
iret
push
and
int3
sbb
mov
jns
in
cmp
mov
in
xchg
sarl
test
sbb
je
dec
in
add
out
jl
ficomps
push
loope
insl
shl
ret
mov
insl
and
stos
jmp
sti
sti
lods
mov
sbb
sbbl
shl
sbb
cmp
lods
icebp
cmpsl
sbb
lds
fadd
inc
mov
mov
daa
sahf
xor
sar
imul
mov
mov
lods
mov
ss
add
in
lret
pxor
pop
pop
inc
cmp
lea
insl
stos
icebp
cmp
arpl
ds
pop
add
negl
in
mov
inc
ret
outsb
push
dec
add
lret
and
rcrl
inc
inc
lods
inc
add
sbb
fbld
das
mov
fbld
je
inc
test
adc
testb
mov
dec
jmp
inc
in
lds
xchg
sahf
xchg
outsl
push
mov
shlb
sub
adc
insl
add
push
jnp
mov
dec
loop
int
push
mov
inc
scas
inc
cs
dec
add
xchg
movsb
or
ret
sbbb
stc
inc
out
pop
add
push
jge
dec
mov
pop
rorl
pop
cmp
sbbb
or
les
pop
mov
repnz
lahf
mov
jnp
or
mov
movsb
ss
mov
lods
cmp
rcl
dec
dec
stc
cmc
xchg
mov
repnz
gs
push
or
inc
ljmp
fcoml
loopne
mov
insb
dec
adc
xor
xchg
repz
jmp
cmp
push
jno
mov
mov
fsts
test
sub
push
out
xchg
les
dec
mov
std
push
adcl
lea
bound
and
jl
imul
aas
sub
arpl
mov
jne
movsb
sub
sub
movsb
nop
dec
int3
pop
mov
sub
sti
fimull
cld
xor
sahf
outsl
xor
push
sahf
idiv
xchg
sti
and
adc
imul
jo
iret
out
lret
push
xchg
sbb
outsl
and
lret
jo
cmp
sbb
fldln2
dec
and
movsl
int3
fbld
cmpsb
add
pushf
call
and
std
scas
pop
adc
test
mov
add
stc
push
cmpsl
cwtl
pushf
jns
sti
dec
pop
push
pusha
mov
inc
dec
aaa
fs
adcb
cmc
push
test
test
cmpsl
fs
xchg
sub
pop
enter
shll
mov
cmp
sub
test
jno
mov
lods
push
inc
es
fldt
mov
jnp
insb
andb
ja
arpl
out
lods
sub
jo
mov
dec
insb
mov
xor
inc
clc
sbb
adc
inc
inc
xchg
cmpsl
mov
xchg
cmc
cmp
pushf
add
mov
arpl
imul
mov
into
mov
lods
or
jno
aaa
sub
jb
fs
adc
stc
jbe
push
mov
pop
js
adc
imul
dec
subl
push
rcl
xchg
pop
ds
cwtl
shll
jmp
test
lret
mov
sbb
and
popf
pop
adc
fists
popf
cmpsl
stc
scas
pop
mov
repnz
pop
rorl
add
adc
ret
fisttps
mov
in
ja
xchg
lods
inc
xor
ja
ljmp
jp
jns
outsl
stos
into
lds
mov
sahf
sub
fwait
mov
xchg
ret
mov
adc
test
pop
push
add
cmp
fucompp
push
enter
jnp
xor
cltd
jbe
pushf
int
arpl
xor
mov
pop
mov
imul
adc
mov
out
dec
repnz
sub
dec
xchg
ss
sub
int
call
leave
fwait
lock
leave
ds
adc
adc
mov
lahf
cmp
jb
leave
push
fsubl
cwtl
push
sbb
pushf
es
inc
pop
cmpsb
or
mov
loope
xlat
fcmovnu
fcomip
cmp
out
cmp
sub
sub
mov
mov
dec
out
jns
imul
mov
jle
outsb
stc
pop
jmp
scas
cmp
dec
out
jns
imul
mov
jle
outsb
stc
pop
jmp
scas
cmp
dec
out
jns
imul
mov
jle
outsb
stc
pop
jmp
sbb
sub
stc
fsubrp
push
data16
adc
test
xchg
push
mov
in
data16
inc
mov
mov
out
dec
cmp
sub
sbb
sbb
cwtl
jbe
data16
int3
inc
mov
push
mov
jl
insb
xchg
mov
cmpsb
sbb
or
inc
jbe
dec
push
adc
mov
push
mov
sbb
out
mov
push
repz
leave
dec
in
xchg
cmp
lds
cmpsl
add
push
roll
sub
sbb
adc
pop
xor
xchg
mov
fsts
adc
inc
mov
sbb
mov
ret
ret
jo
sbb
repz
add
test
sub
in
notl
insb
sbb
dec
cmp
imul
arpl
inc
aaa
lods
arpl
insb
mov
sub
pop
sbb
xchg
loope
cld
rcll
inc
aaa
and
pop
add
test
mov
sub
push
jns
sub
in
add
add
jno
fnsave
xor
arpl
out
subl
mov
popa
sbb
ja
fcoml
inc
pop
ss
pushf
push
sub
mov
jl
je
cmpsb
cs
or
xchg
sbb
das
rcrl
es
xchg
aas
xchg
cmp
inc
aad
xchg
imul
scas
push
lods
xor
jle
inc
imul
xchg
pop
mov
test
jne
dec
nop
aas
xorb
lods
es
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
cld
jbe
data16
inc
mov
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
cld
jbe
das
push
in
add
ror
cwtl
pop
hlt
loop
aas
cmp
adc
push
fwait
outsb
in
divb
adc
or
in
in
popa
cmpsl
adc
incb
call
or
or
xor
mov
add
xchg
cwtl
push
and
fs
xchg
adc
and
pop
adc
fsubrl
cmp
ljmp
mov
and
arpl
mov
fs
sbb
mov
or
adc
aam
popf
movsl
xlat
mov
dec
popa
inc
fldenv
fdivrs
cmp
xchg
scas
in
xchg
aam
mov
outsb
mov
mov
cltd
dec
sub
mov
dec
out
dec
mov
lds
cmp
dec
loopne
pop
into
hlt
repz
mov
xchg
cwtl
scas
leave
bound
xchg
repnz
imul
movb
faddl
push
repnz
es
test
sti
mov
popl
xor
and
lret
xchg
xchg
lds
fdivrl
div
leave
pushf
or
dec
outsb
test
adc
std
push
push
js
in
stc
sbb
mov
cmpsl
test
jp
jae
in
in
cmp
and
shl
ffree
aaa
pop
mov
sahf
ret
mov
sbb
lds
xchg
rorb
aam
jnp,pn
imul
jl
mov
dec
push
xchg
enter
pop
push
repz
mov
jmp
adc
enter
mov
xor
inc
mov
cmp
mov
push
adc
repz
sbb
push
adc
pop
cmp
gs
cmp
je
lcall
push
xchg
mov
mov
add
xor
stos
adc
fdivs
rcrb
push
mov
mov
cmp
into
call
testl
jge
insb
cmpsl
jae
aad
jle
out
fldt
sbb
ret
mov
popf
mov
push
cltd
or
and
mov
es
dec
mov
out
shlb
pop
cld
push
xchg
into
int
push
shlb
imul
xor
or
aaa
sub
out
notl
push
push
jb
inc
scas
xchg
inc
pop
push
pop
repz
push
adc
mov
or
dec
inc
jecxz
adc
dec
add
inc
or
mulb
aaa
aas
sub
int3
push
mov
fsubrl
jbe
pop
add
cltd
mov
push
hlt
mov
pop
pop
in
pop
fdiv
jns
hlt
xor
insl
cli
push
push
xor
subl
mov
arpl
test
ja,pt
stos
test
add
lcall
push
fcoms
sbb
mov
dec
stc
imul
mov
leave
jp
and
loopne
sub
mov
addr16
pop
scas
addr16
jecxz
imul
push
lods
lods
scas
pop
cmp
xor
lcall
xchg
lcall
mov
mov
adc
pop
or
stc
sub
jmp
mov
negb
cmp
lods
xchg
jns
cmpsl
push
inc
les
ljmp
push
xchg
fwait
mov
fidivrs
mov
ljmp
lds
sbb
fldt
jmp
xor
dec
xchg
ret
push
addr16
dec
sbb
xlat
cli
jmp
mov
test
pusha
clc
sub
out
jl
cmc
sbb
fiadds
mov
sahf
or
cmpsb
fldcw
repz
lods
mov
cmp
out
mov
push
test
xlat
jbe
fistpll
pop
test
cmc
es
mov
jne
mov
in
hlt
xchg
clc
pop
jmp
in
xchg
dec
fdivrl
cmpsl
mov
or
cli
scas
cmc
jbe
or
stos
sub
or
pop
push
int
outsl
pop
fisubs
pop
mov
pushf
mov
or
push
aaa
rorl
lods
adc
mul
inc
add
inc
stc
fcoms
or
or
jmp
fldl
mov
adc
lea
push
inc
sbb
push
adc
lahf
cmp
cmp
jns
xchg
xlat
add
xchg
ss
inc
push
lret
push
xor
test
lret
stos
ret
out
mov
ljmp
je
enter
mov
mov
pop
es
cmp
dec
movsb
movsl
pop
out
cmp
mov
outsl
negl
enter
fmuls
mov
out
cs
int
push
loop
pop
rorl
jne
stos
lea
ficompl
add
xchg
shrb
and
mov
out
jb
inc
aas
mov
jle
fstpt
adc
mov
lcall
insb
jo
in
dec
aas
stc
pushf
mov
push
ds
sbb
fdivs
sub
pop
pusha
icebp
push
lea
mov
insl
test
mov
sbb
push
jae
ret
xor
jno
mov
or
cltd
xor
push
push
inc
pop
sbb
loope
or
mov
cli
xor
aam
mov
jnp
lea
and
add
orl
sub
pop
jnp
gs
push
jecxz
clc
dec
jnp
das
push
push
adc
clc
fisttpll
dec
in
add
mov
loopne
jmp
cmp
out
in
lahf
popa
in
push
push
enter
dec
in
and
lock
cmpsb
cld
sbb
dec
push
pusha
fdivrs
icebp
outsb
jae
outsl
pop
movsl
inc
imul
in
xor
mov
jmp
sbb
mov
test
cli
push
call
fucom
lret
sbb
dec
or
test
lods
std
xor
mov
push
and
es
cmp
xchg
mov
std
int3
loopne
aad
sub
xchg
adc
imul
cmp
popf
pusha
cmp
out
fcomp
pop
sti
icebp
and
sahf
pop
shlb
sbb
divl
dec
sahf
dec
jnp
jb
icebp
dec
cli
sub
or
dec
cli
cmpsl
repz
pop
push
mov
or
sub
mov
sbb
pop
gs
dec
in
cmp
xor
lahf
pushf
lret
push
rcrl
jg
pminsw
jb
jge
addr16
pop
xor
outsl
cmpl
mov
mov
xchg
add
fildl
popf
rorl
adc
aam
popa
sub
in
cltd
pop
jp
iret
cld
dec
adc
ss
fwait
sbb
cli
popw
mov
jnp
mov
cltd
fnsave
scas
xor
sbb
pushl
mov
xchg
inc
inc
adc
push
or
fisubrs
call
mov
jo
addr16
sub
cmp
mov
or
sbb
pop
es
cmpsl
ret
jle
cmp
sbb
xorb
imul
pushf
xchg
iret
aaa
adc
pop
in
movsb
cli
cmpsb
cwtl
jae
out
cmc
int3
lcall
mov
inc
jp
pop
push
sbb
ja
stos
sti
int
mov
lcall
mov
adc
push
ss
es
pop
and
pop
repnz
dec
jg
mov
cmp
cmp
or
nop
hlt
mov
mov
cmc
sbb
pop
dec
add
testb
xchg
xchg
shl
xor
push
push
adc
cmp
mov
dec
bound
inc
iret
outsl
dec
jns
hlt
jbe
in
lea
cli
outsb
pop
lock
data16
fs
idiv
daa
cmp
sub
sub
inc
loopne
stc
gs
lret
into
cmp
lret
push
jmp
dec
stc
sbb
push
cs
pop
sbb
test
cmp
das
aam
dec
xor
sub
shll
adc
roll
jbe
jae
stc
push
inc
fdivl
dec
imul
jno
adc
sbb
pusha
cs
xorl
adc
jae
repz
loopw
fidivrs
das
sbbl
pop
mov
jae
int3
adc
addb
xor
xchg
lcall
cmc
push
add
daa
enter
xchg
subl
jg
jg
shll
stos
cwtl
mov
jae
jnp
int
les
leave
add
inc
pop
lock
cmp
mov
nop
inc
cmc
data16
mov
xor
xlat
mov
mov
fsubrp
lods
roll
pop
out
call
ss
popf
ret
push
pusha
hlt
inc
cwtl
lcall
int
push
dec
sbb
js
es
ret
popa
pop
int
outsl
test
dec
xor
jg
sbb
xchg
cltd
or
arpl
jg
xchg
inc
and
movsb
into
xchg
scas
mov
dec
cwtl
cmp
iret
lea
dec
iret
push
divb
and
sub
shlb
jb
push
and
lods
sti
ss
mov
pop
sbb
push
sarl
call
adc
ret
fs
lea
jecxz
lahf
adc
mov
addr16
or
adc
imul
jnp
add
mov
cmp
fists
enter
movsl
test
adc
dec
mov
dec
mov
pushf
sbb
subb
int3
fdivr
dec
pop
ds
cld
rcpps
iret
jle
rcll
add
xor
bound
js
retw
push
pop
add
popa
and
add
or
xchg
push
push
out
and
dec
je
push
cmp
sbb
push
adc
mov
mov
ja
es
push
jecxz
outsb
std
cmc
dec
mov
lods
pop
cmp
outsb
ss
in
insl
aam
jg
xchg
lods
cmp
pushf
lea
adc
fs
xor
inc
mov
cmpsb
sbb
andb
sbb
jae
jbe
xchg
mov
aam
and
cli
rcr
mov
jp
ja
push
pop
jo
push
test
flds
sub
hlt
lods
popa
test
mov
dec
sub
shl
xor
jecxz
push
rorl
inc
aas
mov
int
fs
adc
or
lret
jbe
jp
pop
fnstsw
aad
stos
xor
push
lret
jo
push
xchg
xlat
loopne
ja
mov
adc
pushf
inc
or
jge
and
xor
popa
mov
xchg
jl
sub
xor
mov
dec
cmpb
mov
jecxz
ljmp
sbbb
popf
mov
sub
jbe
nop
fstpl
pop
adc
cmp
mov
scas
jo
vcmpsd
and
inc
pop
insl
push
xchg
dec
sub
pop
add
in
xchg
lods
test
loopne
and
addb
adc
stc
or
sbb
xor
fcmove
jle
fistpll
dec
shll
push
popf
mov
dec
jnp
adc
sub
cld
jae
jg
ds
cltd
jl
push
es
dec
imulb
imul
add
fwait
mov
lret
push
call
push
fnstcw
dec
imul
xor
sahf
pop
out
fsubs
fimull
pop
sbb
stc
orb
jmp
into
cmpsb
nop
push
pop
mov
xchg
jae
cmc
addl
and
push
sbb
pop
jecxz
mov
cmp
xor
jnp
cmp
cs
bound
aam
loop
push
inc
xchg
sub
or
pop
or
dec
mov
xchg
jge
stos
lret
push
sti
mov
jo
xchg
lock
cld
xor
sub
and
jmp
sub
sbb
xor
xor
outsb
jne
mov
stos
shl
test
sub
aaa
jb
leave
mov
xchg
push
cmp
fimuls
xchg
jae
subl
xor
push
and
dec
sbb
loopne
adc
mov
and
fs
pop
je
add
add
lds
aas
daa
sub
cld
pop
aas
mov
xor
sbb
mov
inc
adc
clc
jo
pop
mov
push
cs
fwait
mov
mov
loop
and
in
fstl
aas
add
push
cmp
idivl
jo
and
ljmp
call
sarb
push
movsb
mov
std
or
mov
cmp
sbb
fs
ret
pop
pop
push
mov
data16
add
out
mov
push
dec
loopne
cs
push
mov
popa
sbb
add
mov
das
inc
mov
jno
das
stos
adc
mov
repnz
fsubrs
out
int
imul
pop
ja
pop
mov
lret
mov
outsb
or
adc
fistpl
add
xchg
push
jne
push
test
hlt
pop
sbb
pextrw
mov
cld
cmpsb
bt
int3
shl
scas
daa
fiaddl
sub
push
movsl
xorl
or
lcall
xchg
sti
mov
xor
or
dec
mov
xor
sbbb
adc
jno
call
testl
fisttps
lods
scas
mov
outsb
nop
lcall
stos
lds
xor
jmp
dec
inc
jp
stos
push
push
xchg
mov
ret
insl
cwtl
xor
mov
jle
cmp
sbb
test
hlt
out
aas
sub
cmp
sbb
aaa
adc
sbb
outsb
imul
xchg
or
pop
mov
in
inc
shrl
lods
and
out
mov
lea
dec
push
aas
lods
mov
dec
push
setae
push
dec
out
cmpsl
mov
push
repnz
jbe
mov
sahf
or
and
stc
sub
mov
sub
or
call
lods
mov
fsubrl
jb
push
push
in
leave
test
sahf
test
out
dec
jae
ss
and
js
xorl
addr16
mov
shlb
mov
leave
mov
addr16
pop
add
xor
mov
mov
add
lods
mov
adc
hlt
fisttpll
pop
ss
and
rcrb
ljmp
aas
cli
int
cmpsl
cwtl
repz
arpl
mov
sbb
jecxz
rolb
push
int
push
xor
scas
stos
xor
sub
or
pop
inc
addl
push
push
push
mov
jge
jb
in
and
in
data16
fcompl
sbb
pop
adc
out
lods
aaa
retw
xchg
adc
pop
lock
insb
or
dec
add
xchg
xor
xchg
and
sbb
iret
adc
stos
es
sub
jno
jle
cli
jo
in
pusha
data16
sbb
or
xchg
dec
fwait
lret
inc
mov
pop
jmp
or
and
lods
jle
xor
xchg
jns
cmp
dec
or
pop
movsb
mov
push
add
in
cmpsl
mov
test
in
add
das
cmp
cmp
mov
stos
das
mov
repnz
push
sahf
cwtl
dec
adc
jbe
test
lea
inc
call
fsubr
sbb
outsl
rcrb
adc
xchg
inc
cli
sub
mov
mov
dec
sbb
leave
sbb
repz
sbbl
mov
fcompl
xchg
xor
sub
push
int
cmc
lods
ret
scas
ds
adc
pop
cltd
aas
in
lahf
jae
or
xchg
adc
add
popf
imul
sbb
int
bound
es
cs
push
lret
nop
insb
mov
fadds
test
int
xor
cmp
aam
leave
daa
mov
or
and
dec
or
mov
cmc
mov
leave
scas
sbb
iret
adc
loope
mov
pushf
sbb
cli
mov
mov
push
and
movl
xchg
push
fsts
mov
dec
cmc
xchg
pushf
mov
sub
shll
popf
adc
cmp
into
addl
cld
sub
xchg
das
mov
push
push
cmp
lods
and
jno
sbb
jnp
or
sbb
mov
pushf
jp
out
dec
sub
loopne
icebp
sbb
subb
js
fnstcw
mov
popf
xchg
sbb
mov
movb
scas
in
pop
dec
fwait
loope
inc
cs
cmovae
jg
mov
rcrb
pop
int
divb
out
or
arpl
stos
sub
addr16
and
popl
fstps
int3
iret
adc
stc
add
dec
and
cmc
inc
icebp
pop
mov
sbb
cmc
mov
or
cli
rol
pushf
mov
int
jb
mov
in
or
mov
mov
fsubr
and
fstpl
pop
xchg
and
movsb
xorl
addr16
es
aad
push
inc
cmp
push
lock
pop
call
xchg
pop
popf
into
insb
and
xchg
dec
inc
jb
mov
cmp
fldcw
into
add
shlb
and
push
push
lods
int
or
adc
cmp
cwtl
add
call
xor
pop
mov
jmp
sub
arpl
test
hlt
call
inc
xchg
orb
add
inc
subb
js
jae
movsb
aam
inc
inc
add
orl
mov
shld
mov
cmp
enter
mov
in
andb
mov
pop
pop
xor
fildll
jl
and
adc
fdivrs
jae
jp
add
dec
sbb
insl
push
mov
jb
test
dec
out
xchg
adc
xchg
inc
test
testl
aad
xchg
aam
loop
or
or
pop
adc
out
add
sbb
add
mov
add
mov
pusha
sub
xor
mov
inc
and
sub
dec
sahf
addr16
sub
xchg
and
fisubs
popa
imul
fsubs
fcoms
mov
femms
xchg
sub
pop
fsubl
repz
fcmovnb
scas
loope
xlat
outsl
in
add
sub
sub
sub
mov
out
push
movsb
sbb
add
lret
and
fsubs
xchg
cmp
hlt
das
fisttpl
test
sbb
pop
inc
and
pushf
jge
dec
pop
adc
mov
and
or
jg
lcall
fimull
sbbl
test
mov
mov
scas
adc
dec
xlat
mov
in
fs
xchg
lret
das
adc
repnz
mov
fucomp
jl
jne
xchg
lret
dec
js
jns
data16
data16
in
xchg
aas
ret
push
cmpb
psubd
cli
lahf
lods
imul
dec
xchg
inc
mov
pop
fcmovnu
push
sbb
cmp
sarl
pop
out
ret
int3
add
adc
mov
in
aad
aaa
cwtl
out
sti
and
cmp
out
mov
scas
or
int
scas
mov
imul
in
imul
andb
inc
xchg
mov
loop
cmp
cli
jmp
cli
arpl
fwait
mov
dec
cwtl
dec
inc
push
jno
pusha
cmc
sub
mov
jb
icebp
cmp
pop
in
mov
pop
and
pop
inc
clc
lock
sub
add
adc
jg
add
mov
lock
mov
test
xor
adc
in
push
ss
test
bound
je
lcall
lock
mull
mov
sahf
sbb
jg
rorl
arpl
xor
adc
jg
pusha
sbb
inc
xor
stos
jl
mov
ja
repz
aaa
xor
dec
imul
cmc
cmp
cld
scas
les
faddl
inc
cld
cmp
jae
inc
bswap
repz
and
inc
adc
in
push
xor
pop
push
cwtl
std
adc
movsl
sar
test
test
fsubl
ljmp
mov
mov
cli
or
adc
xchg
and
mov
jns
enter
or
sub
insb
movl
loop
negb
subl
out
idiv
mov
mov
xchg
adc
dec
loope
out
fiadds
je
movsb
sbb
test
sbb
jmp
mov
test
lahf
std
fistps
or
cmp
sub
pop
xchg
sbb
mov
adc
inc
pop
incb
pop
cwtl
fwait
outsb
push
xchg
push
or
push
lods
pop
mov
xor
dec
dec
aam
adc
loop
ret
cmp
push
loopne
xchg
imul
mov
rcll
mov
mov
pop
shll
sub
xchg
je
insb
mov
ds
sub
dec
out
pop
dec
lods
int
mov
in
mov
test
adc
mov
cmp
loope
xchg
adc
in
jns
ret
call
andl
sub
adc
seta
testb
xor
mov
adc
bound
neg
xor
out
adc
jmp
push
pop
cmp
cmc
pop
xor
cmp
shll
shrb
cmp
adc
cmpsl
adc
xor
xchg
push
xchg
bound
pop
mov
xchg
mov
cmp
test
xchg
and
movsb
incl
sub
jnp
jns
cmpsl
xchg
xchg
adc
aas
popf
inc
mov
add
and
rol
insl
popa
lock
xchg
outsb
test
mov
xor
mov
inc
mov
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
cld
jbe
data16
inc
mov
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
cld
jbe
out
int3
inc
sub
lods
cmpsb
pushf
push
dec
push
jl
insb
out
dec
cmp
cmp
sbb
in
call
push
in
inc
mov
push
or
jl
xchg
dec
not
dec
mov
movsb
pop
jecxz
repz
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
adcl
mov
add
add
movsb
inc
aam
test
jae
adcl
mov
push
roll
repz
movsb
inc
aam
les
jae
adcl
mov
push
roll
repz
sbb
mov
lret
jo
push
ror
xchg
roll
rorl
repz
out
jg
sub
push
and
push
mov
cmc
sub
movsl
mov
hlt
lea
jnp
sbb
imul
dec
popf
add
iret
sahf
jae
in
push
jns
fdivl
push
or
add
ret
push
ret
push
sbb
cmpsl
add
mov
or
jl
out
leave
loop
fnstcw
fdivrs
adc
out
test
dec
mov
addl
xor
adc
mov
jns
push
xor
sbb
fstl
add
xor
and
push
roll
repz
movsb
inc
aam
les
jae
lds
xlat
jb
bound
adc
in
inc
ficompl
es
daa
addl
xor
rclw
call
es
jae
ljmp
push
ret
cmp
inc
jecxz
repz
movsb
inc
aam
les
jae
adcl
mov
push
roll
repz
movsb
inc
aam
les
jae
adcl
sbb
xchg
cmc
sbb
out
in
mov
jecxz
mov
adc
cmp
cmp
mov
mov
dec
mov
cmp
insl
scas
mov
mov
mov
fists
aam
repnz
and
mov
lods
out
or
xchg
jbe
addr16
ret
movsb
in
dec
mov
pop
or
jo
mov
jno
cmpsb
or
out
add
mov
inc
adc
push
pop
mov
pushf
cwtl
jle
and
add
leave
repnz
dec
sbb
popa
outsb
mov
mov
testb
push
mov
jne
sarb
out
sbb
hlt
jnp
jmp
mov
insb
and
hlt
dec
dec
and
ljmp
or
pop
outsb
or
fmull
and
mov
and
xlat
adc
sahf
sbb
xchg
push
xchg
cwtl
jnp
daa
add
lea
stos
pushf
test
mov
loopne
bound
imul
rol
rcll
les
lcall
dec
fcmovb
and
jle
lods
and
nop
in
push
mov
push
jl
stos
imul
mov
mov
dec
mov
jns
cmpsl
adc
inc
pop
ja
sub
adc
pop
adc
lret
xor
sub
imul
push
cld
mov
jns
and
pop
push
bound
sbb
mov
fs
pop
lret
sbbb
fisubrs
sbb
int3
cmp
adc
and
xchg
call
mov
fstpt
mov
lods
stc
push
dec
faddl
mov
lret
inc
in
jae
and
ds
pop
lds
or
popa
push
popf
push
xchg
test
cmp
in
arpl
push
sub
out
xchg
mov
pusha
adc
in
leave
out
xchg
aaa
testb
leave
jg
mov
int
xchg
pop
push
aaa
adcl
push
aad
xor
jp
out
int3
xorl
outsb
movsl
mov
push
sbb
jle
add
int
pusha
adc
pop
mov
jno
outsb
enter
sbb
hlt
cltd
popa
sub
push
adc
aam
int3
mov
add
cmpsb
lahf
mov
push
mov
inc
cmpsl
adc
scas
ret
mov
iret
sbb
dec
mov
or
push
push
pop
push
aas
sbb
idivb
mov
out
pop
std
clc
stos
sub
int
xchg
dec
call
mov
out
loopne
addr16
push
rcrl
push
stc
dec
mov
cmp
jne
nop
cs
push
ficomps
or
aad
xlat
mov
mov
mov
sbb
subl
hlt
inc
imulb
inc
xor
push
add
mov
subl
je
lds
adcb
cld
cmp
xchg
ds
ja
push
and
mov
jmp
sub
loope
enter
imul
or
dec
flds
insb
fisttpl
in
mov
loop
jnp
xor
out
push
mov
or
lcall
lods
jne
pop
mov
jge
imul
mov
mov
dec
pop
comiss
pop
push
mov
sbb
fildl
xchg
push
aad
and
insb
sbb
in
adc
imul
adc
fs
icebp
cmc
or
sub
pop
icebp
inc
mov
pop
pop
mov
pusha
pop
push
scas
data16
leave
xor
push
arpl
cmp
mov
push
sti
pop
add
xchg
adc
imul
push
xchg
out
dec
jbe
mov
stos
mov
sbb
fbld
outsl
dec
pusha
sbb
pop
mov
nop
fldt
xor
dec
fwait
mov
and
test
inc
xlat
stc
out
pushf
jne
sub
mov
or
aas
lcall
xchg
insb
jbe
movsb
insb
push
sub
cmp
scas
ffree
jg
dec
in
inc
dec
inc
mov
cltd
repnz
and
jecxz
mov
ljmp
sbb
shlb
cmp
dec
sub
int3
cmc
adcl
mov
imul
gs
aaa
iret
div
lock
repz
or
sti
lahf
lret
pop
mov
jbe
and
ret
rcrl
cli
or
insl
mov
rcrl
addr16
push
lock
mov
cmpsb
jl
bound
adc
push
stos
push
mov
inc
push
outsl
and
mov
shrb
popf
orb
les
cmc
sbb
sbb
mov
scas
insl
dec
sub
mov
lret
incb
cwtl
mov
mov
cmp
pop
fisubs
repz
xchg
insl
add
fcoml
addr16
inc
mov
stc
dec
scas
loopne
mov
push
rcr
imul
mov
nop
ljmp
out
scas
or
comiss
pusha
shrb
sarb
cmpsb
lods
xor
inc
insl
jne
fcoms
dec
push
mov
mov
insl
dec
inc
in
pop
insl
xchg
xor
push
cli
leave
sub
and
notl
xor
orl
mov
sub
push
sbb
pop
call
dec
insl
test
fsubs
pop
aaa
hlt
lahf
and
and
pop
pushf
fadds
dec
or
pop
or
inc
loope
xor
clc
mov
lret
and
sbb
pushf
arpl
dec
daa
mov
inc
or
cli
or
mov
mov
jne
lock
popf
mov
mov
insb
push
cmpsb
jmp
stc
cltd
jl
imul
repnz
repnz
mov
adc
cmp
ret
sub
aam
out
adc
andl
stos
out
orb
cli
mov
out
out
inc
pop
sub
int
cwtl
and
es
cmp
popf
in
cmp
push
pop
insb
je
push
out
sub
repnz
inc
ficomps
push
mov
or
lret
adc
shrb
arpl
jae
dec
bound
or
sti
push
lock
and
stos
ds
adc
mov
jb
icebp
dec
clc
ret
out
into
sub
push
inc
lea
xchg
push
and
cmc
mov
inc
pop
jbe,pt
pusha
jmp
iret
mov
add
inc
iret
pop
insb
scas
fs
pushf
jg
mov
xchg
xor
mov
stc
jnp
mov
xor
sub
xor
inc
imul
or
jmp
fnstenv
ja
sub
push
jle
inc
fs
inc
xchg
xor
sbb
out
sub
fadds
dec
xor
or
inc
push
or
out
push
and
inc
ljmp
mov
cmpsb
pushf
xchg
jmp
dec
mov
xchg
rcrb
jp
pop
dec
shlb
ficompl
pop
pop
jae
xchg
scas
mov
mov
inc
lret
dec
repz
shrl
xor
out
gs
movb
push
addl
sbb
insb
into
ficompl
lret
push
fs
test
in
pusha
fnstcw
sti
jle
ja
js
out
insb
daa
dec
add
iret
dec
jns
popa
scas
out
inc
xor
outsb
and
adc
cmp
jno
fs
pushf
mov
popa
xchg
jge
jle
push
sbb
jecxz
and
adc
mov
or
jne
mov
adc
xor
inc
ret
imul
je
cld
ljmp
or
outsb
popf
mov
inc
cmp
arpl
test
ds
orl
mov
mov
aad
repnz
mov
push
popa
push
loop
rcl
xchg
jo
clc
cmpsl
xor
ds
push
mov
or
aas
ja
repz
clc
or
cmpsb
xchg
mov
or
fs
iret
mov
lea
dec
ljmp
jo
iret
aas
les
fisttpll
lret
xchg
and
flds
add
es
inc
xor
mov
leave
and
aad
das
das
cmp
inc
mov
mov
cmc
mov
add
into
cmovns
icebp
loop
and
test
movsb
xchg
or
mov
js
aaa
rorl
push
add
retw
shll
and
cmpsl
dec
dec
add
nop
mov
add
xchg
mov
cmc
int
mov
mov
in
orl
push
sarb
pop
mov
mov
cmp
adc
lahf
jecxz
in
mov
outsb
mov
xor
outsl
add
inc
out
adc
push
and
mov
pushf
aas
loopne
adc
jns
mov
push
sub
rorb
mov
insb
sbb
pop
mov
sti
inc
clc
lret
dec
adc
and
test
jmp
nop
imul
scas
lds
jp
imul
inc
push
jnp
int3
dec
dec
pushf
mov
into
out
xor
push
stos
mov
in
stos
and
lods
pop
xor
xchg
test
jecxz
fiaddl
daa
push
cmp
fisttps
mov
sub
jmp
das
mov
aad
pop
ret
fdivr
lahf
nop
call
add
sub
sahf
jle
xor
xor
fldl
add
xchg
sub
fsubl
cmp
sbb
and
loope
push
dec
xor
sar
sub
mov
sbb
ds
mov
inc
push
daa
mov
dec
fcmovnu
out
bound
add
test
fimuls
lret
sahf
lock
orl
sub
sbb
test
ss
xor
repnz
push
mov
fidivl
xchg
icebp
adcl
mov
mov
aam
push
shlb
bound
mov
xor
xchg
jae
pop
stc
rorb
sub
mov
fdivrs
lahf
mov
mov
into
bound
popf
jle
sbb
sti
cmp
sbb
sbb
sti
push
xchg
pop
pusha
cmp
das
sbb
cmp
mov
add
mov
fildl
adc
lods
pusha
sti
cwtl
cltd
mov
push
add
dec
inc
mov
fidivs
jp
sahf
mov
push
cwtl
dec
les
jg
repz
cld
sub
adc
gs
cmp
mov
jecxz
js
imul
sti
call
ljmp
lcall
shlb
adc
aad
xor
popa
mov
rcrl
mov
js
jmp
sbb
inc
xor
xchg
popf
shll
sbb
push
cmc
mov
imul
fildll
jns
shl
adc
inc
xchg
mov
mov
test
pop
int
cs
add
jle
jnp
data16
dec
pop
negb
mov
pop
mov
mov
lcall
ret
add
aas
fistpll
fimull
sub
hlt
push
aaa
inc
xor
xor
fnsave
sbb
rorb
xchg
jge
jmp
std
adc
inc
cmp
pop
popw
push
cmp
aad
cmpsl
aaa
popa
dec
scas
clc
out
iret
xchg
outsb
clc
inc
cli
aas
popf
mov
ja
cmc
sbb
mov
pop
jle
sahf
push
jae
icebp
mov
mov
int3
mov
or
gs
pop
clc
in
in
sub
push
mov
dec
in
lret
pop
inc
jno
xchg
scas
fs
sbb
pusha
insl
sbb
nop
lea
jns
das
sub
xor
push
jecxz
mov
sub
in
fs
sbb
inc
sbb
fcmovb
in
sbb
xor
shll
inc
pop
std
data16
mov
addr16
jbe
aaa
std
push
inc
xorl
test
in
aam
imul
rcrb
jbe
arpl
cmp
sbb
xchg
jbe
nop
sbb
repz
push
xlat
pop
fcomps
cwtl
push
lea
enter
jmp
add
cmp
push
lea
cwtl
sbb
test
dec
lcall
mov
movsb
inc
dec
nop
sbb
sbb
mov
inc
or
in
xor
jg
jge
leave
cltd
outsl
arpl
outsl
sbb
fldcw
mov
sub
or
xchg
jmp
hlt
lods
test
mov
mov
in
push
aas
or
push
stos
fcmovnu
inc
int
xchg
hlt
and
mov
inc
shlb
mov
pop
xor
orl
notb
scas
add
xchg
pop
add
lods
cmpsb
out
gs
cmc
mov
sub
adc
stos
push
out
mov
out
rcl
aad
stc
loope
push
ss
fdivrp
std
add
or
imul
and
cmc
push
out
mov
ja
xchg
test
loope
cld
sub
adc
sbb
mov
in
lcall
mov
jns
imul
sub
jae
mov
xlat
xchg
into
push
pop
xchg
into
fstps
adc
xor
push
or
fadds
es
jae
cmp
rorl
cmp
jp
and
adc
mov
jecxz
mov
and
mov
adc
into
inc
xor
sub
sbbl
mov
fwait
push
lods
jno
cmp
lods
stos
mov
std
icebp
pop
into
push
add
int3
testl
xor
mov
lret
lock
adc
mov
cmp
fistps
data16
imul
xor
lcall
add
sahf
pop
daa
and
jg
pop
bsr
lods
loopne
xor
inc
and
xchg
dec
jge
mov
aaa
pusha
push
sbb
pop
mov
jle
inc
fisubrl
adc
adc
add
and
cmc
or
cmc
repz
mov
inc
fs
subb
test
cmp
das
pop
add
aaa
or
je
je
shlb
leave
lcall
xchg
push
pop
addb
out
outsb
pop
lret
xchg
jg
dec
push
dec
or
or
or
es
jns
inc
xor
fcomps
jl
je
xchg
out
sbb
add
mov
mov
and
dec
inc
sub
add
psraw
bound
sub
push
sub
add
and
xchg
mov
mov
mov
pop
fidivl
jnp
or
out
and
jae
sbb
mov
adc
dec
sbb
lods
cmp
xchg
or
xor
mov
pop
ss
mov
lods
popa
cmp
cmc
xlat
xchg
pushf
or
mov
push
mov
mov
xchg
dec
pop
cmpsl
xchg
enter
pushf
imul
js
mov
cli
jae
xchg
data16
push
stos
out
jmp
rcl
or
jp
imul
push
sbb
push
lret
sub
push
in
js
in
jge
mov
dec
mov
mov
pushf
mov
into
xor
mov
ja
dec
sub
xor
dec
adc
repz
mov
shlb
add
shrb
lods
jae
add
and
cwtl
je
popa
adc
adc
sub
xchg
xor
xchg
incl
or
xor
mov
and
fcoms
cwtl
mov
dec
cltd
lahf
xchg
cmc
imul
jno
lods
pop
mov
out
cmp
mov
xchg
ja
inc
outsb
adc
and
fsubr
and
dec
push
fiadds
dec
sahf
xchg
sti
das
aad
out
adc
nop
pop
enter
dec
lods
dec
lods
ljmp
push
cmpsb
movsb
mov
repnz
xchg
js
gs
sarl
mov
cmc
pop
mov
mov
in
lea
adc
call
std
ret
push
dec
bound
icebp
arpl
movsl
pop
gs
xor
ret
sbb
scas
lods
inc
lahf
jne
mov
sarb
and
aam
adc
fidivrs
fcoms
cs
xchg
xchg
xchg
lods
in
divl
mov
push
scas
pop
adc
outsl
xchg
lret
imul
mov
bts
stos
push
add
push
xchg
mov
adcl
out
cld
aaa
cmp
divl
sbb
dec
jb
aam
pop
push
inc
in
inc
xor
xchg
dec
lods
lahf
jg
lods
and
jae
test
dec
scas
dec
dec
fisubrl
adc
aam
xchg
inc
ja
in
add
cld
lahf
xchg
cmpsl
cmp
insb
mov
inc
pop
aad
jbe
lret
or
out
in
outsl
out
fsubs
mov
mov
cmp
test
mov
jb
and
rolb
imul
mov
orb
sub
cmp
mov
sbb
clc
push
lods
sub
mov
cmp
adc
test
add
xchg
stc
dec
das
into
push
xor
xor
sti
or
jp
add
add
mov
xor
out
into
sbb
mov
sbb
sub
sbb
sub
negb
inc
in
lret
out
daa
jnp
into
test
ret
pusha
sbb
cli
outsl
inc
sbb
sbb
clc
ficoml
aam
add
stos
xchg
mov
loop
jae
jl
pushf
inc
cli
mov
pop
push
aam
inc
loopne
insl
mov
jnp
nop
xchg
xchg
push
andb
add
notb
arpl
sub
adc
imul
sti
jns
or
pop
icebp
rolb
add
adc
mov
data16
jmp
pop
push
int
xor
sahf
sti
and
jno
push
xchg
cli
test
dec
push
out
cmp
xchg
inc
adc
push
aas
movsl
dec
movsb
in
shrb
mov
add
shlb
dec
mov
xor
cmpsl
loop
shll
stos
shlb
fcmovnb
xor
cmpl
out
arpl
push
jns
cmp
jmp
paddsb
adc
jne
pop
sbb
aam
jae
mov
icebp
fistps
inc
das
bound
dec
test
lret
jl
in
pop
jl
inc
fscale
les
pop
icebp
pop
sbb
imul
test
enter
pop
jne
fcom
sbb
outsl
push
out
push
aad
nop
push
adc
or
je
mov
mov
cmpsl
push
or
ret
jbe
dec
sub
ljmp
pusha
sub
enter
dec
mov
in
xchg
xchg
lret
mov
lret
pop
sub
push
adc
data16
or
mov
inc
push
enter
out
xchg
imul
mov
jecxz
push
outsl
add
jmp
add
xchg
xchg
enter
orl
jbe
push
cmp
lcall
inc
mov
xor
fisttpll
fisubrs
iret
das
push
clc
and
push
les
inc
pop
adc
jno
xlat
and
and
inc
out
jecxz
std
je
sub
push
dec
xchg
iret
xchg
sub
insl
pop
inc
test
xchg
jae
push
sub
jae
sar
pop
insl
fldcw
mov
dec
je
jecxz
icebp
xchg
mov
add
enter
mov
xchg
ljmp
adc
ficompl
push
pop
mov
push
dec
in
icebp
cmc
dec
pop
repz
test
imul
sub
mov
inc
icebp
movb
mov
iret
jbe
stos
out
cmp
je
mov
pop
inc
std
add
push
aad
ds
pop
push
out
cmp
gs
mov
add
std
mov
inc
jge
dec
in
nop
sub
scas
inc
cmpsb
je
jp
in
repz
sbb
ret
jno
addr16
or
mov
inc
imul
sar
lret
nop
rclb
pop
scas
movsb
mov
lret
rolb
mov
mov
push
pusha
mov
test
subl
push
sub
jbe
movb
push
dec
xchg
rorl
sub
aas
or
mov
dec
js
sub
sub
jae
das
xchg
sbb
jb
or
pop
push
test
insb
leave
movsb
test
fdivs
out
cmp
int
or
mov
and
jns
push
movsb
jge
inc
lret
inc
call
mov
icebp
cmpl
insb
les
ja
mov
aam
adc
daa
inc
mov
cli
push
cli
mov
xchg
fcomip
movl
add
cs
es
loopne
and
into
push
or
fcmovnbe
inc
rclb
sbb
popa
push
int3
and
cmp
jb
popa
imul
cmpsb
pop
xor
decb
cmpsb
mov
inc
out
mov
fs
enter
out
shrb
mov
jo
inc
push
mov
fwait
pop
dec
repz
test
xchg
fidivl
push
fucom
shufps
in
scas
dec
cmp
pop
xor
xor
roll
repz
movsb
inc
aam
les
jae
adcl
mov
push
roll
repz
movsb
inc
aam
les
jae
adcl
add
xor
and
jecxz
repz
movsb
inc
aad
les
jae
adcl
mov
push
rol
jecxz
repz
add
mov
cmp
push
stc
cs
ds
push
fs
cltd
lret
imul
cmp
or
sbb
jmp
pop
xor
test
pop
lret
pop
into
inc
fistpll
out
dec
sbb
jnp
stc
ss
fistl
inc
test
imul
loope
xchg
push
popf
jge
sbb
push
xchg
bound
xor
xchg
push
ret
mov
mov
dec
icebp
inc
push
bound
mov
mov
inc
dec
popa
sub
mov
jb
mov
add
jae
sub
cld
addr16
testl
das
data16
inc
aam
or
or
sub
jmp
imul
mov
sub
sub
dec
out
cld
loope
ja
dec
pop
push
lea
cltd
xchg
popa
imul
sbb
out
sub
inc
popa
fdivs
cmp
imul
push
sub
push
or
popf
into
jmp
sub
pop
test
sbb
mov
add
out
jge
jnp
dec
mov
sub
xor
insb
loopne
cld
cli
das
sahf
cmp
cmp
mov
js
lods
push
mov
cmp
xor
mov
das
jmp
lret
ds
jns
jne
push
sub
dec
cltd
ds
outsb
mov
mov
jns
dec
mov
cmp
or
sbb
jmp
pop
mov
mov
jns
dec
mov
cmp
or
sbb
jmp
push
cmc
popa
xor
stos
test
dec
mov
sub
cmpsb
fs
cltd
std
sub
and
lods
fsubrl
xchg
mov
test
scas
pop
imul
bound
popf
fnstenv
sub
add
dec
ror
out
lock
movsb
dec
mov
sbb
push
insb
mov
mov
xchg
xorl
data16
fdivr
adc
fwait
mov
insb
sbb
mov
cmp
test
jmp
in
addl
xchg
xchg
adc
imul
and
stos
jns
cli
leave
jg
jl
or
jecxz
sbbl
fdivr
sbb
clc
push
in
mov
int
inc
push
xchg
lods
push
outsb
int
iret
inc
test
int
inc
xchg
int3
jmp
ds
loope
push
push
cmp
orl
xchg
sbb
int3
add
and
or
xchg
stos
test
daa
or
xlat
in
push
fdivrl
add
mov
rorl
inc
push
sub
test
loop
jne
aas
cmpsl
jnp
mov
ss
pop
das
jp
inc
add
jp
and
fistl
dec
cmpsb
xchg
sub
mov
std
xchg
xchg
hlt
xor
test
sub
jbe
mov
cmp
add
in
xchg
popf
inc
sub
sarb
and
insb
mov
stc
adc
call
mov
cwtl
lds
in
add
push
or
lods
adc
jecxz
push
mov
outsb
mov
js
inc
jns,pt
mov
dec
sub
mov
adc
aaa
lods
outsb
movsl
adc
fnstenv
mov
dec
jne
iret
out
or
sbb
mov
lcall
jbe
fisttpll
jne
data16
or
jge
clc
add
pop
outsb
mov
lret
cld
inc
fcoms
push
xlat
ds
scas
xchg
xchg
xor
sahf
pop
mov
iret
imul
iret
sub
lods
sub
out
cmpsb
or
adc
or
and
mov
mov
jbe
jne
and
into
aaa
inc
sub
mov
ja
outsl
fsubrl
cmc
lcall
xor
and
jecxz
adc
loope
sub
int3
lahf
fldt
stc
xchg
stc
rorb
xor
mov
hlt
mov
fidivl
outsl
popa
pop
mov
xchg
xchg
jbe
ret
in
or
jl
sub
pop
mov
push
xorl
jecxz
jo
lds
push
out
mov
cmc
inc
pop
jmp
push
mov
mov
xchg
iret
pop
xchg
mov
les
int
mov
mov
inc
ja
imul
and
out
dec
lods
out
sbb
mov
and
lods
rcrb
scas
hlt
xor
scas
int3
pop
push
incb
pop
mov
add
mov
in
addr16
xor
xchg
ja
lret
ds
bound
or
clc
sti
insl
stos
mov
fsubs
fistpll
hlt
cmp
mov
and
sbb
add
arpl
sub
jb
or
aad
fwait
es
cmc
aam
mov
jne
mov
sub
movsb
mov
cld
daa
jmp
mov
push
fidivrl
mov
std
jbe
cmc
dec
sub
shll
xchg
popa
xchg
adc
lods
lods
mov
push
sbb
sub
or
test
pop
ljmp
negl
xchg
pop
movsl
scas
lods
sarb
aam
cs
pop
sub
xor
lds
jae
cltd
mov
mov
or
xor
sbb
xor
mov
loopne
sub
cmc
dec
and
jb
xchg
xchg
test
jmp
mov
rorb
lds
cli
adc
jb
mov
adc
nop
fwait
out
mov
mov
and
lahf
cwtl
jb
es
cmp
jo
xchg
xchg
shlb
and
call
add
sahf
shr
pushl
add
xor
xchg
adc
fiaddl
adc
mov
rorl
push
shr
mov
push
inc
add
push
hlt
push
enter
in
scas
jl
mov
sahf
cltd
xchg
dec
std
add
lds
pop
dec
mov
push
inc
sub
xorl
or
mov
pop
lods
dec
scas
sbb
out
hlt
mov
add
push
mov
daa
mov
outsb
and
adc
ds
lret
fdivs
loop
mov
adc
stos
std
inc
dec
mov
cwtl
stc
mov
dec
dec
outsl
out
inc
iret
shrl
sbb
in
sbb
in
cltd
xor
push
xchg
roll
mov
stc
jge
jae
xchg
and
pop
fninit
fmull
mov
cmpsl
xchg
xor
xor
inc
shll
cmp
ret
ljmp
arpl
cmc
fmulp
lds
xchg
outsb
lret
movsb
mov
adc
sti
outsl
xor
icebp
aaa
dec
xchg
sub
mov
and
xor
cmp
add
push
jbe
hlt
jae
icebp
call
adc
lret
jmp
sti
roll
mov
adc
mov
add
adc
add
cmp
lds
jg
dec
dec
ret
aad
int3
std
pop
jmp
jbe
pop
cmc
fildll
aas
jae
popa
test
adc
ret
leave
mov
jg
push
fimuls
mov
cmp
out
inc
pcmpeqw
cltd
sbb
rorl
mov
rcrb
sbb
adc
jo
dec
mov
daa
lods
call
popa
jne
repnz
adcl
mov
pop
mov
xchg
sahf
xor
sub
std
insb
push
pop
mov
xor
sahf
ja
sbb
sbb
inc
in
mov
fcompl
fisubl
mov
outsl
add
test
dec
test
mov
rcl
leave
lahf
add
insb
rcr
arpl
mov
and
inc
push
pop
inc
push
sbbb
mov
into
sbbl
test
push
fisttps
aas
out
popf
add
subb
mov
pop
pop
inc
xchg
sub
jg
dec
gs
loopne
imul
shlb
or
xor
nop
fdiv
fadds
or
rcrb
rorl
or
in
mov
xchg
adc
sti
cmp
rolb
xor
pop
push
cld
xchg
scas
shrb
cmpsb
or
movsb
mov
daa
mov
sbb
cmpsl
sub
inc
shrl
sub
mov
dec
mov
fld
sbb
shll
ret
sti
movsb
inc
xchg
push
daa
or
pop
lcall
mov
or
push
sbb
mov
xor
xlat
inc
iret
sbb
lea
cmp
pushl
pop
jge
xorl
mov
xor
sbb
sti
outsl
icebp
flds
push
jecxz
add
movq
scas
out
sub
cmp
mov
mov
inc
add
sti
fwait
cmp
aad
mov
iret
mov
ret
cmp
fistpll
mov
out
clc
pop
adc
cmpsl
jecxz
adc
inc
int
mov
div
in
xchg
cmc
sahf
imul
cld
mov
sbb
jmp
rcll
outsl
push
ss
xor
mov
fs
fidivs
test
mov
scas
scas
and
jb
fwait
data16
xchg
inc
je
movsb
or
mov
dec
adc
xchg
bound
jmp
jmp
jecxz
aas
adcl
or
int3
dec
adc
movsl
jno
xor
fistps
lcall
mov
in
jo
mov
lahf
add
sbb
loope
mov
int
push
adc
jmp
cwtl
jg
in
inc
dec
imul
fdivrl
pop
sub
jl
dec
push
xchg
xlat
fcoms
aaa
cmp
loope
mov
sub
ss
int
mov
sarb
repz
stos
or
lahf
icebp
push
mov
push
popa
and
cmp
jg
lods
mov
pop
insb
jecxz
bound
cmpsb
sub
dec
mov
push
add
sbb
mov
inc
pop
push
xor
xchg
gs
mov
sarl
cmp
mov
insl
mov
sbb
repnz
add
aam
sub
repz
pop
jge
push
and
sbb
in
mov
aam
mov
mov
xchg
inc
sbb
pop
pushf
fcmovne
or
sbb
fnclex
out
out
fnop
jae
mov
push
sub
cmp
ds
lret
or
jp
and
cld
je
push
rcrl
xchg
lahf
or
mov
pusha
push
inc
repnz
mov
xchg
insb
jnp
push
and
mov
iret
mov
add
ljmp
enter
cmpl
gs
mov
arpl
sub
sbb
xchg
xchg
stc
pop
mov
nop
out
sbb
mov
dec
jmp
outsb
adc
imul
movsb
push
mov
sahf
arpl
mov
icebp
adc
inc
popf
je
pop
in
adc
mov
add
lock
push
lock
es
shr
scas
sbb
pop
imul
cmpsb
adcl
iret
ficoms
rcl
stos
sub
cmp
test
cmp
negl
idivl
push
dec
mov
jbe
mov
cmp
inc
push
cmp
dec
sbb
jmp
push
pop
adc
and
lock
xor
jae
shlb
and
cmpsb
pop
xor
xchg
mov
jno
jne
fcoml
aam
adc
addr16
push
add
in
inc
iret
and
out
add
add
xchg
xchg
mov
fdivs
pop
push
push
popa
je
mov
xor
push
and
push
push
sub
push
lea
dec
std
out
sbb
pop
push
fistl
jb
mov
mov
xchg
fs
test
jl
inc
jmp
add
mov
scas
orl
lock
sbbb
dec
jns
bound
add
cmp
xor
fcomp
xchg
jae
jmp
sbb
add
pushf
or
popf
push
add
xchg
clc
pushf
aad
or
dec
ret
push
dec
xor
inc
jo
es
fsubrs
shl
test
mov
adc
in
mov
fsts
shlb
dec
and
in
adc
mov
out
cmpsb
or
xchg
sbb
xlat
bound
sub
push
repz
roll
movsb
mov
mov
ljmp
push
dec
aaa
sti
jmp
js
ds
push
aad
add
jnp
jle
lcall
movb
sbb
mov
adc
shlb
loop
or
lahf
mov
sub
mov
sub
mov
xchg
movntps
insb
push
out
or
dec
jno
dec
out
jp
add
pop
decb
call
das
cmp
notl
xchg
push
popa
sbb
xchg
testb
lds
push
std
or
push
and
jg
leave
inc
dec
ss
lods
mov
sar
mov
cmp
dec
sbb
and
dec
xchg
mov
invd
cs
mov
mov
repnz
push
push
les
fst
out
mov
dec
or
dec
in
outsb
out
mov
cmp
aam
or
cmp
jmp
mov
fstpt
out
ret
shll
aaa
leave
cmp
scas
xchg
call
pop
pop
xor
cli
gs
shll
std
xchg
lret
or
sbb
add
dec
mov
aas
dec
stc
sbb
addr16
pop
adc
lret
xchg
mov
or
cmp
adc
fdivl
mov
leave
lret
mov
jecxz
xorb
lea
cmpsl
mov
in
jge
shlb
divl
iret
cmp
sbb
cmpsl
sub
sub
xchg
xor
fwait
inc
add
inc
inc
in
cmp
ret
or
jns
je
les
adc
adc
lea
and
push
mov
lss
fisubs
inc
cmpb
pop
pop
sbb
and
mov
pop
sub
daa
sbb
add
sbb
mov
sti
dec
lahf
inc
fs
pop
addr16
sub
mov
push
xchg
mov
in
and
js
and
das
scas
loope
dec
mov
add
inc
lahf
sti
mov
xchg
push
negl
mov
js
icebp
cmp
add
loopne
sbb
aam
xorb
imulb
jbe
push
loopne
mov
out
leave
loop
xchg
jns
andl
lcall
loop
dec
inc
jnp
cmpb
into
adc
dec
dec
adc
xor
xchg
and
enter
dec
add
or
lea
xchg
fisttpl
fucomip
inc
fisubl
test
stc
sbb
outsl
sbb
fistpll
int3
das
mov
sti
xchg
lahf
lods
lcall
rorb
in
push
sbb
test
je
xor
js
jb
sub
outsb
xchg
sbb
sbb
movsb
mov
outsb
faddl
daa
sub
pop
pop
adc
out
sbb
jmp
xchg
adc
add
or
fwait
mov
and
xchg
or
imul
xchg
sub
mov
push
pop
mov
jl
nop
adc
ljmp
cli
xor
pop
in
icebp
jo
sub
lods
cmpb
sub
fnsave
xlat
cltd
fwait
inc
mov
sti
mov
call
jne
dec
inc
inc
aaa
inc
clc
mov
lahf
push
dec
in
mov
mov
mov
shll
pop
push
dec
inc
mov
and
mov
out
inc
xorb
sbb
call
mov
call
xor
sbb
cld
sbbb
popf
mov
push
dec
int3
stos
xorb
jmp
subb
aaa
call
outsl
push
jg
in
mov
fnsave
sbb
lds
lcall
pop
nop
adc
xchg
inc
push
lds
das
add
inc
mov
inc
sbb
jg
loopne
nop
mov
lds
or
cmp
stos
push
scas
push
adc
jp
sbb
sbb
xchg
xlat
add
dec
push
sbb
stos
add
mov
fwait
outsl
cmp
add
js
jl
push
adcl
sbb
push
sub
test
into
cmp
sub
jg
pop
pop
mov
inc
lea
nop
jb
stos
std
ds
fldenv
int
jecxz
sti
xlat
jmp
jnp
push
and
in
aam
arpl
sbb
rolb
stc
arpl
scas
rolb
adc
popf
or
pop
imul
push
push
loopne
out
sub
in
mov
push
sub
jno
ljmp
fldl
in
or
push
jecxz
pop
fiaddl
mov
sbb
pop
mov
mov
lret
clc
mov
pop
cmpsl
insb
mov
clc
dec
fdiv
dec
xor
roll
jo
cmp
rcll
jecxz
mov
cmc
jg
pop
js
cs
and
repnz
cmc
inc
aaa
push
stc
xchg
add
mov
mov
sahf
mov
ds
ds
pop
cld
mov
jns
mov
mov
mov
repz
sbb
outsl
xchg
jp
and
and
dec
movsb
xor
int
pop
sbbb
movsb
or
and
pop
pop
hlt
stos
jg
aas
subb
outsl
cmp
adc
pop
jo
enter
mov
mov
in
cmpsb
lock
dec
mov
mov
stos
out
add
and
aam
incl
lods
inc
and
push
lret
fsts
lcall
pop
fs
mov
or
mov
andb
jmp
jne
cwtl
dec
repnz
xor
in
mov
fldl
daa
xchg
lahf
imul
cmp
cltd
pop
aad
mov
xchg
scas
loope
pop
insb
jecxz
clc
into
xchg
lcall
mov
and
insb
jnp
mov
fmull
mov
cmp
aas
xor
jne
lahf
push
testl
js
mov
xchg
ds
xchg
call
and
and
lret
adc
sbb
not
mov
std
rorl
sbb
xchg
add
jecxz
jno
out
leave
mov
mov
and
mov
mov
std
mov
mov
jno
fidivrl
les
or
fsubrs
jle
outsl
daa
fmull
sbb
xor
call
imul
dec
loopne
andb
cld
les
mov
aad
addr16
add
shll
pop
insb
fstl
mov
mov
iret
jne
jns
popf
xchg
fcoml
std
xchg
mov
stos
and
cmp
fisubl
fldt
icebp
mov
leave
lods
push
dec
ret
xor
call
mov
ss
and
aam
mov
gs
inc
xchg
orl
cld
cld
push
ja
bsf
pop
cmp
loope,pt
loop
lret
push
ds
xor
mov
fsubrl
lods
cmp
mov
cld
adc
pop
dec
adc
int
pop
fwait
mov
cmpsb
cmp
or
adc
in
outsl
mov
mov
push
enter
push
je
pop
add
pop
adc
sub
mov
fisubl
sub
dec
mov
add
out
dec
mov
rcll
xchg
pop
sub
push
aam
inc
or
iret
jnp
outsb
cmp
pop
cli
xchg
mov
adc
mov
out
iret
fisubl
jno
loope
pusha
inc
sub
or
sub
fimuls
fadds
bound
cmp
jbe
ss
in
push
and
call
add
mov
sub
adc
push
sbb
mov
jnp
mov
xor
int3
rcl
cmp
lds
imul
call
mov
pop
xchg
aas
ds
out
mov
jne
mov
xor
nop
in
and
test
hlt
cld
insb
cmp
es
push
lods
enter
out
mov
pushf
push
xchg
xor
cmpsl
repz
lods
cli
push
mov
xchg
lock
cmp
dec
pop
cltd
andb
nop
out
add
cmp
push
mov
pusha
mov
loopne
cmp
das
or
inc
fdivr
mov
and
dec
mov
xor
lcall
aam
psubw
enter
pop
mov
into
mov
mov
movq
ret
ss
mov
dec
adc
lret
mul
xchg
xor
cmpsb
movsb
push
and
pop
xlat
inc
xchg
push
xchg
add
lock
mov
enter
cmp
sub
out
inc
lods
stos
sbb
dec
mov
inc
dec
xchg
shlb
dec
push
scas
xor
mov
xchg
mov
or
lcall
notb
fimull
jbe
imul
mov
inc
stos
inc
int3
mov
add
pop
sbb
clc
nop
shl
add
cmpsl
jns
or
es
inc
int3
push
pop
cmp
sub
stc
xor
push
pop
stos
sub
mov
lds
mov
dec
mov
cmp
inc
push
movsl
mov
les
and
mov
jae
inc
push
dec
cmp
inc
jg
scas
addb
imul
push
mov
loopne
mov
sbb
and
xor
aaa
jp
dec
es
xlat
popf
mov
pop
iret
scas
std
sub
pushf
in
leave
cmp
inc
add
setl
adc
dec
popf
sub
mov
xchg
idiv
cmp
lret
out
sbb
cld
jp
or
dec
insl
mov
inc
xrelease
lock
std
push
xlat
push
aaa
dec
add
cmp
clc
xor
out
adc
push
inc
fstpl
inc
addr16
sarl
jno
sub
and
mov
and
lods
std
xchg
mov
xor
jnp
jne
inc
nop
sub
xlat
fprem
sub
mov
inc
add
cli
lret
push
bound
and
pop
call
jno
ja
aad
inc
test
fnstenv
push
incl
loope
fs
es
and
pop
and
sarb
lret
lcall
imul
pop
scas
int
mov
mov
mov
mov
cmp
sub
aas
xor
push
push
push
mov
mov
stc
xor
pop
mov
mov
jns
dec
mov
cmp
or
sbb
jmp
pop
mov
mov
jns
dec
mov
cmp
or
sbb
jmp
pop
adc
jle
mov
mov
cmp
sub
sbb
jmp
fmuls
pop
mov
jno
popa
roll
mov
adc
add
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
loop
bound
push
inc
inc
mov
dec
jo
add
loop
rol
ret
mov
movsl
addb
gs
push
inc
inc
xor
add
mov
ret
mov
test
bound
dec
inc
pop
xor
cmp
repnz
loop
mov
cmpsl
vpmuludq
lret
mov
in
test
jne
or
and
into
mov
mov
les
loope
fst
xchg
xchg
mov
imul
and
fldl
mov
cwtl
lahf
ja
xchg
or
dec
xor
lcall
loop
or
and
arpl
jmp
test
inc
or
bound
mov
bound
push
scas
jne
adc
add
loop
and
shll
icebp
pop
sbbb
out
dec
popf
test
stos
push
movsl
ficoml
add
js
in
nop
ret
sub
xchg
jge
mov
test
push
mov
pminsw
ljmp
icebp
cmpsl
rorb
out
rclb
jne
jb
inc
inc
pop
xor
add
in
loop
ror
ret
lods
mov
loope
adc
gs
or
jno
inc
dec
push
jns
push
mov
fsubr
idiv
xchg
imul
sub
and
inc
pop
adc
imul
ror
ret
loopne
xor
add
xor
xor
and
repnz
loop
rcl
ret
mov
movsl
xchg
xchg
addb
push
inc
inc
xor
add
rcl
ret
mov
movsl
xchg
xchg
addb
je
push
inc
or
lods
negb
out
cli
loope
dec
je
xor
jmp
add
mov
dec
negb
adc
sbb
cltd
jo
jo
lods
lret
repz
pop
cmp
popf
cmp
sub
pop
stos
push
or
int
fcmovne
out
sbb
in
mov
lods
mov
loopne
mov
iret
fistps
push
adc
pop
cmpl
and
mov
xchg
stos
test
iret
push
insb
cld
push
or
pop
xchg
sbb
lock
mov
sub
dec
add
jg
out
sub
mov
lock
sti
loopne
cmp
mul
dec
and
xor
cli
and
imul
dec
in
or
adc
cmp
push
xchg
sbb
pop
testb
lcall
dec
das
mov
sub
insl
mov
and
pop
por
ja
lret
dec
das
or
nop
pop
cltd
in
xchg
mov
dec
cld
and
mov
mov
jo
push
cmp
gs
lcall
dec
mov
lods
mov
add
xchg
stos
cmp
cmp
fldt
pop
imul
test
cltd
popf
ljmp
mov
push
jge
jge
sub
mov
scas
push
inc
fstp
in
inc
sbb
push
jne
cld
or
push
mov
cwtl
fcompl
dec
and
sub
adcb
and
jg
or
jo
mov
movsl
outsb
jmp
cli
js
jle
xor
add
aam
or
or
dec
pop
pop
sbb
js
sub
adc
add
inc
or
mov
sbb
cmp
and
add
xchg
xor
lret
js
mov
sub
xor
push
xchg
sub
ffree
dec
and
pop
jecxz
mov
cmpsl
push
xor
jae
pop
and
or
in
sarb
lret
jge
sub
call
lds
insl
pop
out
fnsave
rorb
dec
cmpl
ret
testb
jnp
popf
mov
loop
and
fwait
shl
movsb
stos
fwait
jne
shll
fwait
mov
adc
lods
ljmp
or
mov
dec
iret
pop
insb
xor
hlt
pop
subl
in
cld
pop
loop
sub
mov
mov
push
loopne
xchg
in
lods
lea
mov
xor
pop
cli
jo
sub
std
and
inc
outsl
lahf
xchg
xor
mov
jg
insb
and
in
mov
lret
pop
mov
int3
xchg
mov
mov
and
jb
loope
adc
or
iret
stc
fs
std
fnstcw
scas
testb
subl
lods
loop
in
hlt
xchg
pop
jge
and
mov
mov
mov
cmpsl
outsl
in
out
outsb
out
divl
js
mov
js
sbb
mov
jbe
push
lret
pop
aas
fbld
sahf
lcall
push
mov
ja
roll
mov
sub
fdivs
cmp
in
stc
push
cmpsl
inc
mov
cwtl
xor
mov
add
inc
add
xor
jge
in
and
mov
test
shll
pusha
in
add
or
jmp
arpl
jl
leave
in
popa
mov
mov
push
sbb
xchg
test
add
test
movsb
xor
xor
fst
push
imul
push
je
jbe
out
test
cmp
sbb
rcll
faddl
testb
test
data16
les
int3
arpl
lret
fisubl
add
push
xchg
es
es
add
mov
notl
cmc
loope
fadds
pop
jp
int
mov
or
inc
jne
jne
repz
add
mov
push
pop
push
cltd
sarb
fxch
addr16
mov
aaa
mov
jb
add
mov
push
mov
cs
or
pop
mov
and
insl
ss
loop
mov
arpl
and
js
rcrl
sub
pusha
andb
mov
test
das
and
cmpb
adc
adc
movsl
mov
jp
stc
filds
in
fwait
xchg
adc
mov
or
gs
dec
adc
cmp
mov
mov
pop
push
pop
mov
insb
adc
mov
mov
shll
mov
xchg
leave
jmp
addr16
rol
dec
or
mov
dec
xchg
inc
and
jmp
cmp
rolb
loop
mov
mov
add
in
ljmp
test
xor
or
lahf
into
aad
xor
testb
frstor
shrb
xchg
popf
mov
dec
dec
cld
pushf
add
dec
push
out
test
fs
icebp
arpl
dec
sub
ror
outsb
aam
ja
and
push
rcl
ja
outsl
mov
push
nop
or
jle
adc
cmp
cmp
in
adc
mov
xor
in
lds
rcrl
mov
add
inc
sbb
cmp
cmp
push
decb
ja
mov
std
and
and
aaa
jb
cmp
xchg
sbb
sbbb
scas
sub
cli
out
mov
mul
or
mov
mov
dec
sbb
mov
dec
inc
lods
cwtl
jo
pop
mov
mov
jb
mov
sbb
imul
and
jle
idivb
and
adc
stos
mov
pop
dec
js
and
adc
js
pop
enter
push
cwtl
xchg
mov
test
add
pop
sub
inc
in
cmp
mov
je
adc
add
sbb
add
sub
or
movsb
jo
dec
mov
das
stos
mov
xchg
lea
popa
sbb
fcmovb
aam
mov
jl
push
lea
not
jp
xor
xchg
or
loopne,pn
jbe
leave
push
jo
or
cld
xor
sub
sahf
dec
je
xchg
imul
mov
xchg
xchg
inc
jecxz
insl
nop
sbb
and
jmp
or
mov
mov
test
arpl
inc
mov
arpl
icebp
js
mov
mov
lds
in
subl
adc
outsl
or
jecxz
arpl
jae
xor
push
clc
in
xlat
xchg
pop
pusha
popa
jnp
xor
call
push
movaps
incb
push
sub
cmp
push
sbb
and
cmp
mov
push
mov
ss
fwait
and
andl
pop
in
sbb
xchg
mov
push
lret
aaa
sub
ds
test
sub
pop
sbb
psraw
imul
jo
cmp
pop
inc
pop
sbb
es
in
mov
xor
add
dec
mov
addr16
xor
dec
inc
cmpsl
loopne
sbb
sub
stos
sub
fmull
sbb
jbe
sti
cmp
adc
test
adc
cld
fwait
movsl
fisttpll
pop
out
je
cmp
xor
inc
sub
fisubl
mov
xor
or
push
cmp
pushf
dec
cmp
shl
and
out
dec
stos
xchg
mov
cwtl
push
lcall
fists
mov
mov
mov
mov
pop
mov
aad
fsubl
inc
mov
xor
xchg
out
xor
add
rorb
imul
mulb
test
scas
and
je
or
xchg
inc
cld
mov
sbb
inc
rorl
insb
les
fucomi
xchg
fs
and
dec
mov
push
xchg
push
jns
out
pop
test
jbe
int3
jns
shl
iret
cmp
out
inc
xchg
into
popf
pop
add
cltd
test
dec
xchg
pop
jb
add
fcomip
fdivs
sbb
and
and
ret
scas
aas
add
and
out
adc
xor
cmc
add
add
adc
sbb
xor
les
clc
ljmp
out
daa
jge
and
popa
add
sub
cmpl
jmp
arpl
mov
sub
inc
or
sbb
jmp
idivl
mov
dec
and
cmp
and
arpl
popa
and
mov
push
out
iret
jb
xor
sub
mov
in
jae
rcr
inc
inc
sete
adc
mov
dec
arpl
mov
stos
aad
into
sub
dec
cld
mov
in
aad
mov
fcmovne
cmp
or
push
mov
scas
repz
and
dec
jp
xor
jnp
push
hlt
out
call
pop
adc
cmp
dec
push
sub
sub
cwtl
fsts
popa
xor
pop
dec
into
jnp
mov
sahf
xchg
out
orb
shl
cmpsb
outsb
mov
arpl
popf
push
mov
inc
inc
jb
sahf
jbe
sbb
push
fdivs
imul
movsl
adc
testb
and
insb
cmpsb
or
cs
in
ljmp
jae
cs
in
jbe
mov
inc
sti
mov
je
cmpb
stos
or
or
pop
add
lock
loope
fmull
push
scas
ret
and
mov
imul
add
fidivrl
idiv
adc
add
mov
mov
xorb
jo
incl
sub
push
std
pop
cmpsl
mov
iret
les
mov
out
mov
test
adc
fstpl
mov
adc
inc
and
mov
imul
popa
inc
sti
lcall
add
sbb
nop
jbe
pop
cmp
pop
popf
sub
lock
fcomps
bound
enter
aam
lcall
xchg
sar
add
mov
lea
jp
mov
pop
ja
repz
in
je
cmpsb
call
fnstsw
mov
mov
sub
gs
lods
fnstsw
fnstsw
idivb
jl
add
push
mov
insb
cmp
adc
pop
sub
mov
add
sub
frstor
push
add
cwtl
xchg
arpl
xchg
add
or
push
adc
and
xor
insb
jle
sub
jle
cmp
popf
push
js
xor
pop
mov
dec
fstpl
push
test
cmc
xchg
or
sub
stc
arpl
add
jp
cltd
std
movsl
in
lods
cltd
iret
adc
sbb
jae
repnz
in
test
sbb
pop
mov
mov
mov
je
daa
xchg
movsl
fcoml
adc
fs
mov
test
xchg
test
lret
aam
sub
aaa
xchg
mov
fnstcw
lods
or
dec
add
es
pushf
fsubrl
dec
js
mov
int3
enter
mov
or
lcall
mov
in
mov
repnz
cwtl
clc
test
mov
push
lds
rolb
ret
ljmp
jae
fdivr
fiaddl
add
and
adc
stos
orb
pop
push
dec
sbb
jg
mov
xchg
addb
jbe
ss
mov
ss
mov
xor
aaa
lcall
add
push
loope
and
cmc
xor
scas
in
xchg
ficomps
movsl
jecxz
cmp
and
jle
xlat
push
xor
shr
out
iret
or
mov
shrb
sbb
arpl
stos
divl
adc
lds
cli
jle
adc
push
repz
xchg
shl
mov
addr16
mov
sub
adc
mov
push
add
jecxz
xchg
mov
mov
add
add
shl
jmp
mov
sbb
test
or
fldcw
pop
ja
test
mov
push
into
adc
nop
jbe
gs
iret
lcall
xor
fiaddl
mov
xchg
idivb
pop
dec
ret
test
push
pop
and
hlt
call
cmp
imul
arpl
sub
sbb
lret
xor
cmp
xchg
pop
mov
test
jl
adc
dec
fld
mov
xchg
mov
xchg
adc
pop
movsb
sti
sbb
sbb
je
leave
pop
cmp
xchg
insl
push
xor
xlat
icebp
inc
xchg
sti
fdivl
fistpl
add
or
in
sahf
jns
dec
pop
xchg
lret
testb
flds
or
mov
push
sbb
dec
mov
sti
push
lcall
mov
insb
repz
add
fisubs
dec
insl
sahf
mov
pop
pop
jl
inc
in
scas
or
outsl
pop
add
pop
outsb
cmp
xchg
mov
notl
fmulp
push
cmpsl
in
fmull
neg
std
int
pop
inc
and
arpl
xor
in
mov
sbb
pop
mov
jne
mov
pushf
popa
jae
pop
jmp
in
stc
int
lock
test
jl
xlat
mov
scas
or
inc
inc
mov
test
icebp
jne
rclb
data16
fstpt
or
popa
mov
fildl
aam
push
mov
int
dec
lret
mov
imul
or
inc
xor
and
cmpsl
mov
add
mov
mov
sbb
and
shl
mov
cmp
scas
ljmp
push
adc
pop
in
or
out
cmc
jecxz
in
sti
jo
push
xchg
dec
fs
lds
imul
push
add
inc
in
cmp
mov
and
adc
fisttpl
jmp
xchg
aam
xor
jno
sbb
js
jg
fsub
aas
inc
lahf
aaa
repz
mov
mov
pop
ljmp
out
ss
mov
mov
or
test
cmp
mov
mov
xor
and
ja
ret
add
xor
or
sub
xchg
outsl
lods
int
cmp
sub
sbb
jno
sbb
dec
mov
pop
inc
xchg
movsb
pop
jns
cmpsl
pop
add
pop
jne
pop
or
stc
push
test
scas
mov
outsl
lahf
dec
inc
outsb
inc
push
cs
xor
xchg
jo
cmp
jno
fdivrs
jecxz
push
fwait
out
mov
adc
scas
das
jno
mov
stc
outsl
mov
mov
or
clc
loop
add
pop
sbb
pop
add
lret
inc
insl
int
imul
pop
daa
lock
outsb
ljmp
out
or
frstor
push
outsb
pop
jl
mov
xchg
scas
fadd
arpl
mov
into
pushf
mov
mov
stos
sbb
jns
mov
cmpb
mov
pop
mov
ljmp
rcrb
test
imul
push
sub
mov
cmc
cwtl
mov
mov
inc
pop
jecxz,pt
shll
iret
icebp
sub
inc
sti
xor
mov
sbb
in
xor
cmpsb
pusha
and
aas
pop
jmp
pop
lods
and
inc
xchg
ficoms
cltd
and
ss
cld
arpl
push
sbb
loopne
mov
pop
bound
fs
jmp
xor
test
sub
dec
xchg
clc
sbb
dec
xchg
jns
jge
ljmp
dec
mov
ror
sub
clc
call
push
out
fidivl
or
mov
int3
lret
icebp
fildl
fcomps
xor
mov
or
int3
sbb
adc
lcall
test
popf
or
clc
cwtl
inc
sub
xor
jg
and
ret
mov
lods
push
push
lods
adc
out
jno
cmpsb
ret
inc
in
fsts
and
add
cmp
push
and
leave
or
gs
sbb
es
and
sbb
cs
xchg
mov
aaa
jg
out
dec
mov
insb
aaa
scas
les
sub
or
pop
add
xor
outsl
icebp
ds
xchg
cmp
mov
sub
cmp
cwtl
test
call
sbbb
sub
jno
fimull
repz
jb
out
arpl
in
add
bound
repz
or
imulb
xchg
mov
sbb
ret
jmp
sub
sbbb
xchg
repz
dec
subb
pop
jbe
or
pop
or
xchg
hlt
jne
jae
adc
icebp
jnp
pop
jecxz
dec
cmp
sbb
mov
pushf
outsb
sbb
inc
cld
mov
sub
loopne
dec
repnz
fldcw
enter
popa
sti
aaa
push
inc
jnp
pop
dec
cmp
addl
sbb
into
push
xchg
cld
xchg
outsb
sub
dec
push
add
faddl
rcl
sbb
inc
xor
add
jp
mov
xor
stc
sbb
pop
sub
lea
cmpsl
pop
sti
inc
std
dec
ret
imul
mov
iret
and
xchg
lret
popa
sbb
mov
inc
orb
insb
dec
mov
movsl
push
imul
dec
enter
mov
and
test
mov
or
das
inc
xchg
add
testl
adc
cmpsb
jns
mov
ss
dec
pusha
mov
mov
js
mov
push
lahf
adc
lods
insb
repz
hlt
ret
scas
jmp
mov
xchg
add
jnp
push
pop
pop
inc
sub
inc
rcrl
mov
push
test
adc
inc
movsb
imul
adc
cmp
gs
movsl
ret
rorb
cmpsl
fbld
int
and
mov
in
imul
pop
jmp
outsl
sbb
pop
in
mov
cld
add
mov
add
lret
inc
adc
xchg
lock
xchg
fbstp
or
mov
fstpt
mov
mov
xchg
adc
inc
mov
bound
cmp
xchg
pop
imul
add
cmpsb
push
inc
rclb
adc
lea
ret
inc
test
test
mov
aas
push
fsubs
fcoml
jbe
scas
enter
adc
mul
mov
mov
push
loop
jmp
ljmp
sbb
pop
js
add
dec
movsl
std
sbb
or
in
xchg
adc
pusha
movsl
scas
xchg
push
pop
mov
mov
shrl
add
out
jb
movsb
adc
imull
dec
fwait
sbb
popa
inc
arpl
pushw
push
push
bound
mov
jae
in
cmp
ljmp
jbe
je
mov
lods
and
into
iret
movsl
ret
js
pop
or
daa
outsb
or
insl
mov
test
sbb
outsb
test
pop
loopne
push
fs
and
jbe
adc
push
in
mov
cmp
mov
cmp
cmp
mov
jnp
std
and
mov
js
xor
es
imul
and
testl
mov
or
cmpsb
push
and
mov
xlat
pop
push
mov
xor
lods
xchg
mov
mov
jl
or
lahf
xor
popf
std
nop
sahf
inc
scas
arpl
imul
and
mov
das
lods
push
icebp
outsl
movl
sub
jbe
pushf
and
cmp
fsubs
aam
imul
add
adc
ret
jnp
jecxz
pop
cmp
movsb
xchg
out
jns
addb
or
pop
je
or
arpl
or
stos
int
jg
neg
cmpsb
int
pop
xchg
inc
or
shlb
mov
test
push
mov
pop
aaa
rcrl
mov
xchg
fsubl
xor
aad
insb
mov
jno
jnp
pop
pop
xchg
popf
cli
cld
loope
rol
mov
cmc
out
inc
jl
pop
lret
mov
scas
dec
mov
cmp
mov
xchg
push
aad
sbb
fildll
mov
les
nop
cmp
dec
out
sub
out
rorb
inc
aad
sub
cld
in
leave
outsl
pop
adc
loope
mov
mull
fstpt
pop
mov
push
hlt
pusha
jbe
push
shrl
push
scas
jp
ljmp
test
push
mov
mov
movq
lahf
cmp
mov
mov
or
jmp
div
jge
xchg
cmp
or
dec
fnsave
sbb
mov
cmc
dec
xor
aas
add
sbb
movsb
sahf
xchg
stos
int3
loope
adc
jbe
dec
pusha
mov
push
pop
xor
xchg
pop
adc
adc
mov
dec
fidivs
imul
fs
jo
clc
and
cmc
popa
out
sub
rclb
or
xlat
fidivrs
hlt
aaa
mov
jno
mov
jp
je
out
mov
out
and
scas
xchg
jg
stos
xlat
test
aas
and
adc
pop
xchg
loopne
fnstcw
and
repnz
loop
rcl
ret
mov
movsl
xchg
xchg
addb
push
inc
inc
xor
add
rcl
ret
mov
movsl
xchg
xchg
addb
push
inc
inc
xor
add
rcl
ret
mov
movsl
xchg
xchg
addl
push
inc
inc
xor
add
js
ret
cmp
jge
mov
push
popl
fmull
adc
push
jmp
add
adc
and
shrl
pop
icebp
dec
cmpl
mov
adc
push
call
add
jne
and
push
jno
inc
aaa
push
xchg
and
xor
clc
cmp
mov
push
ljmp
movsl
cmp
aam
movsl
sti
mov
jb
push
movsl
outsb
fdivr
lret
fiaddl
and
icebp
int
xchg
fsts
sbb
dec
outsb
fisttpl
pop
lods
push
sahf
mov
mulb
in
add
imul
mov
add
sub
call
sbb
outsb
int
es
sbb
insb
mov
push
sbb
push
jno
mov
test
sub
inc
std
sub
push
cmpsl
xor
clc
adc
adc
pusha
addl
jno
mov
inc
or
push
mov
imul
pusha
daa
jno
test
and
loope
popf
dec
cmpl
or
mov
ret
lock
mov
push
mov
cmp
in
mov
shrb
xchg
adc
xor
adc
push
divl
rcll
add
cmp
data16
ret
mov
lea
je
push
pushl
mov
loop
xchg
cmp
or
mov
clc
push
call
add
xor
loope
icebp
dec
cmpl
mov
inc
clc
push
call
add
xor
dec
fildll
lds
test
lea
adc
lret
movb
ret
xchg
in
aad
adc
lds
mov
add
movsb
xchg
mov
aam
lods
cmp
lret
inc
test
inc
push
jle
cld
mov
and
dec
and
jns
cmp
xor
scas
push
mov
mov
int3
sub
mov
sub
into
jmp
cmpsb
stc
ret
insl
dec
icebp
repnz
cmp
mov
inc
adc
xchg
sbb
test
inc
ret
in
jl
pop
jb
out
sbb
jge
sbb
mov
jecxz
js
pop
inc
sbb
jns
test
fdivl
aad
mov
bound
lods
xchg
mov
mov
cmpsb
pushf
cmc
push
out
dec
es
or
js
add
ss
and
cmp
push
sub
and
je
dec
lods
push
outsb
popa
pop
enter
mov
add
and
shl
adc
sbb
cmp
sbb
adc
lret
mov
jae
sbb
aam
and
insb
cmc
and
push
or
mov
out
ljmp
mov
call
add
push
hlt
dec
dec
cmp
scas
js
repnz
loopne
in
dec
daa
jg
dec
inc
adc
ja
shll
jge
imul
imul
gs
ds
pop
psubw
xchg
nop
adc
lods
fnstcw
lret
inc
adc
jbe
loop
jmp
notb
jge
leave
xchg
add
xchg
je
in
ja
push
enter
pop
push
lds
inc
movsb
shrl
jge
adc
out
ds
adc
xor
ret
shll
xchg
das
ja
pop
jns
sub
repnz
push
mov
aad
pop
fstp
xor
ljmp
mov
insb
jmp
mov
subb
and
lret
dec
adc
push
xor
ljmp
in
lcall
fwait
into
hlt
lods
ja
loop
pop
pop
mov
int3
mov
mov
lcall
mov
fldenv
insl
dec
xchg
add
hlt
je
jg
dec
sbb
sbb
cmpl
add
mov
xor
lahf
mov
xchg
cmp
out
or
mov
inc
cmpsb
int
inc
jbe
push
jae
adc
lret
add
mov
into
push
add
mov
fldenv
mov
fmuls
xchg
jnp
je
jle
shrl
mov
cmp
cwtl
outsl
mov
and
lds
arpl
gs
stc
sub
addr16
add
fdivrl
in
sub
cwtl
adc
pop
push
xchg
push
sbb
add
mov
out
mov
ljmp
pop
mov
mov
aas
scas
xchg
cmp
sbb
scas
xor
icebp
leave
lcall
pop
push
fs
xchg
jae
adc
pop
mov
mov
add
mov
mov
jmp
mov
fwait
cmp
loop
xor
imul
fadds
dec
loop
ja
push
pop
sbb
pushf
inc
push
shrl
fstpt
pusha
adc
mov
inc
and
dec
repz
andl
sbb
push
mov
sbbb
or
mov
add
lahf
adc
sarb
addb
add
jg
stos
nop
daa
mov
js
xor
cmp
adc
cmp
cli
pop
in
jnp
mov
dec
adc
cmp
dec
xchg
jns
pop
dec
cmpsb
inc
punpckldq
jne
cmpb
hlt
adc
test
bts
pop
dec
push
orl
fbstp
ds
inc
mov
pop
adc
fisubrl
adc
xlat
add
pop
pop
jmp
mov
mov
xorl
dec
xor
jle
mov
outsb
leave
lret
mov
lahf
fisubrs
cmp
jl
movsb
and
add
add
dec
sarb
inc
mov
outsl
fwait
mov
push
dec
and
sbb
iret
mov
imul
imul
xor
out
mov
cmp
xchg
cs
dec
imul
das
bound
mov
xchg
and
jg
push
ljmp
pop
jns
mov
pop
xor
jl
mov
and
hlt
outsb
pop
jle
mov
pop
mov
push
lods
adc
das
movsb
sbb
mov
lret
lods
inc
into
stos
ljmp
nop
jb
fdivrl
mov
push
jns
lods
push
fcomi
ljmp
in
rcr
repz
pop
rclb
mov
cs
mov
push
bound
inc
popf
inc
jge
dec
pushf
testb
data16
sbb
jg
lock
in
fisttpll
mov
sbb
push
aam
xchg
xlat
test
pop
sub
leave
push
int3
std
and
add
jb
jno
sub
add
cmp
adc
stos
xchg
pop
push
pop
jns
addr16
add
jmp
mov
dec
or
inc
aad
rcrb
mov
xlat
push
fisttps
sub
sahf
mov
ljmp
subb
mov
bound
call
xchg
mov
push
lods
xor
inc
xchg
dec
mov
in
call
and
xor
adc
into
pop
in
mov
xor
or
adc
xorb
arpl
push
sub
dec
cmp
jns
dec
flds
fsubrl
rolb
jmp
lret
push
ror
mov
iret
push
gs
xchg
push
xor
sub
sbb
mov
push
iret
stos
cmpsb
popa
mov
mov
mov
mov
dec
popf
scas
or
inc
inc
dec
sub
or
xchg
icebp
push
push
dec
fnsave
fnsave
loopne
cmp
cwtl
xor
cmpsb
movsb
xchg
into
out
push
mov
sti
xchg
or
xchg
aas
stc
mov
or
inc
adc
mov
or
gs
xchg
mov
pop
mov
int3
jb
insb
adc
shrl
xchg
das
les
add
cmp
pop
loope
into
sahf
outsb
ret
mov
popf
outsl
xchg
outsl
dec
sbb
inc
es
adc
lea
and
push
xor
sub
push
mulb
fwait
sbb
call
pop
pop
inc
bnd
shrb
call
addr16
xchg
test
sub
pushf
mov
dec
push
add
mov
inc
push
aas
sbb
mov
mov
sub
xchg
cmp
cli
cmp
push
enter
push
xlat
int
xchg
fldt
rorb
mov
movsb
bound
push
pop
push
inc
jl
push
jne
fidivrl
inc
dec
shlb
rorb
mov
jno
sub
jmp
pop
ret
ds
mov
jne
in
dec
leave
cmpb
mov
mov
into
popa
es
in
mov
mov
mov
mov
or
je
adcb
ja
mov
pop
push
clc
fwait
mov
pop
pop
xlat
inc
pop
sbb
sbb
push
bound
mov
cmc
pop
and
dec
mov
sub
sub
imul
arpl
jb
jb
xor
jne
push
mov
xchg
cmp
clc
hlt
push
test
xchg
sub
mov
or
mov
mov
rcrl
inc
je
mov
std
shrb
add
cmpsl
inc
mov
shll
adc
mov
in
ret
xchg
daa
call
cmp
sbb
sbb
out
sahf
adc
sarl
jns
xchg
push
inc
adc
and
add
jle
xchg
xchg
imul
push
and
std
popl
outsb
or
sti
and
xchg
cwtl
lods
mov
addr16
pushf
mov
mov
in
mov
jge
adc
in
inc
inc
arpl
inc
push
insl
cld
enter
jg
call
jmp
loop
push
inc
leave
xchg
xchg
inc
inc
into
test
sub
stos
sti
outsl
pop
push
cld
xchg
test
push
xchg
pop
xor
aas
fs
sub
dec
jnp
or
hlt
pop
cli
sbb
loopne
icebp
jle
rol
incb
mov
jmp
xchg
lahf
xor
mov
aam
and
inc
xchg
pop
gs
adc
and
xlat
xlat
stos
cmp
out
dec
aas
loopne
enter
test
ficoms
pop
inc
addb
sahf
cwtl
sbb
out
sub
ficoms
cwtl
jnp
clc
fsub
push
mov
mov
insl
sub
or
loope
or
lahf
mov
push
xor
mov
bnd
aad
and
sub
loopne
mul
jb
gs
pop
imul
add
lea
das
cmc
pushf
dec
jecxz
pop
ja
push
loopne
jg
pop
dec
stc
or
shlb
lods
nop
push
adc
push
jg
pop
xlat
push
dec
test
pop
ja
imul
jmp
popa
jo
je
fs
out
xchg
sbb
ljmp
shrl
repnz
fucomip
aaa
sub
in
cli
orb
sbb
popf
xchg
push
xchg
mov
decb
js
mov
and
roll
dec
add
inc
repnz
hlt
mov
into
xchg
shll
mov
ja
xor
or
or
fistps
dec
mov
lds
push
mov
xor
cmpsl
mov
mov
adc
and
xchg
ds
xor
xchg
fnsave
lret
lods
pop
addr16
daa
std
mov
insb
sahf
in
nop
lea
dec
das
push
fldl
and
pop
arpl
loop
push
in
push
adc
sub
mov
inc
mov
mov
mov
pop
add
sti
adc
jnp
lock
aam
sub
cld
push
mov
loope
pop
lcall
push
out
adc
std
pop
jno
add
das
shll
insb
sbb
lock
mov
xchg
out
xchg
pop
lret
mov
fcoml
mov
mov
lcall
out
shll
dec
adc
push
je
lods
ds
js
sbb
jb
sbb
jl
push
repz
or
mov
sti
mov
dec
cmp
dec
push
int
aas
pop
movsl
popf
push
push
pop
ss
outsb
aad
loop
xchg
stc
ret
xchg
xchg
cmpl
ret
loop
and
lret
mov
daa
cli
xchg
push
mov
jnp
movsb
imul
pop
push
movsl
xchg
push
mov
xchg
lret
in
lret
repz
out
push
insb
adc
jnp
repz
cmpsb
leave
pusha
int
adc
sbb
sub
scas
xchg
in
aad
pushf
dec
cmp
adc
xor
fimuls
adc
or
rorb
mov
mov
xchg
pop
jnp
fs
fisubl
xor
cli
mov
pop
out
pop
cli
lcall
xor
mov
imul
jnp
es
jbe
fcmovb
cmp
fidivl
add
cmp
push
arpl
outsl
jle
adcl
lret
xchg
sbbl
aam
mov
jp
es
push
cmpsb
push
or
mov
jo
div
rorl
adc
lods
shll
out
sbb
out
mov
add
dec
jl
les
add
add
push
pop
push
push
cmp
lock
pop
push
or
insl
add
inc
aaa
jb,pt
sub
pop
inc
pop
mov
xlat
add
enter
int3
push
gs
and
xorb
das
jno
pop
lods
push
mov
mov
sbb
in
mov
dec
in
cli
xchg
cmpsl
jp
repnz
insl
cltd
jecxz
xchg
mov
in
mov
sub
xchg
jo
xor
cmp
adc
imul
adc
or
cmp
ret
stos
es
lock
fcoml
add
out
fwait
cltd
jne
out
push
mov
ss
cmp
sub
cmp
out
xor
sub
out
mov
xchg
dec
jle
xchg
nop
pop
and
daa
je
fwait
cmp
test
add
inc
mov
cmp
cli
popa
mov
addr16
pop
mov
vsqrtps
daa
mov
inc
push
cmc
add
xlat
inc
cmp
sub
hlt
push
pop
mov
fwait
jnp
xor
cltd
icebp
mov
jg
jmp
add
lods
mov
pusha
sub
dec
dec
fnsave
or
jg
jno
sbb
xchg
je
adc
push
dec
sbb
inc
sahf
push
arpl
movsb
mov
lds
mov
nop
xor
lods
adc
test
push
gs
outsb
sub
jno
fistps
notl
fstp
jno
inc
pop
movsl
leave
pop
stc
or
adc
iret
cld
js
shrl
mov
sub
gs
pop
outsb
pop
int3
or
push
rcll
loope
sub
or
stc
outsb
stc
jge
inc
mov
gs
xchg
popf
in
jnp
xchg
inc
out
pop
sbb
push
sbb
add
push
testl
scas
xor
loopew
lock
leave
add
es
xchg
pop
or
int3
or
test
dec
push
push
outsb
xchg
repnz
push
cmp
ljmp
mov
pop
jno
or
daa
repnz
xor
es
pop
mov
fcoml
gs
pop
leave
rclb
xor
scas
add
sub
flds
xchg
or
adc
ret
dec
cli
xor
xor
in
push
arpl
fcom
dec
jo
pop
adc
pop
ss
adc
scas
aas
rclb
xchg
pop
xor
lea
push
add
adc
test
loopne
xor
loopne
je
dec
ss
lahf
xchg
enter
jge
or
mov
adc
adc
add
push
ds
xchg
fwait
xor
jno
pop
sar
and
rcr
popf
fnstenv
push
loop
pushf
or
dec
sub
cmp
bnd
sbb
cli
sub
and
out
pusha
push
cmp
insb
adc
insb
mov
inc
cltd
cltd
js
jmp
or
mov
cmp
xchg
scas
mov
pop
int
fcompl
jns
js
mov
xlat
inc
push
fdivrl
push
lods
ds
lock
loop
inc
jb
fsubrp
ss
push
mov
xchg
aam
cmc
ljmp
fwait
cmpsl
pushf
clc
stos
in
cld
imul
iret
and
outsl
inc
popa
mov
aad
jp
push
adc
push
mov
pop
push
pop
xor
inc
pop
outsb
or
jmp
jns
add
int
jno
mov
data16
and
orl
mov
push
adc
lds
ficoml
popa
cmpsb
sub
inc
push
out
push
test
push
rcrb
mov
out
aas
or
cltd
push
fldenv
es
mov
push
add
cmpsb
jno
pushf
push
xchg
mov
jne
je
loop
bound
xor
push
mov
cwtl
mov
push
lahf
or
and
cli
push
mov
lock
fidivrs
mov
imul
sub
push
mov
les
in
mov
out
jl
cli
mov
sbb
inc
test
adc
sbb
outsl
jp
andl
outsl
outsl
ret
jo
or
bound
rcrl
ljmp
cmp
fsubrl
pop
or
xchg
sahf
enter
inc
dec
sub
jecxz
rorb
adc
push
lock
popf
scas
jno
rcr
push
icebp
insb
clc
add
sbb
outsb
in
mov
mov
hlt
xchg
jecxz
cmp
add
mov
rorl
sbb
in
sbb
adc
arpl
jb
xor
xchg
pop
mov
adc
add
jg
bnd
out
hlt
out
repz
fs
pcmpgtb
inc
cmp
addr16
adc
push
cmp
lcall
aas
movsb
add
pop
dec
cmp
dec
movsb
repnz
pushf
push
mov
dec
or
ja
inc
xchg
insb
cmpsb
jecxz
cmp
xchg
pop
jp
xchg
lds
adc
std
pushf
jmp
out
xor
push
aaa
dec
insb
inc
lods
jnp
repz
js
mov
cmc
sub
add
enter
sbb
mov
int3
push
xchg
mov
ret
or
in
mov
fisttpll
lret
ret
or
leave
out
cmp
ss
addb
sub
inc
leave
and
mov
test
fidivs
sahf
sbb
mov
jne
pop
jne
in
je
scas
and
leave
jne
lds
fnstenv
sti
adc
sbb
data16
shll
xchg
cmp
xchg
dec
ret
xor
or
mov
pop
mov
pop
mov
int
adc
je
dec
jl
jns
push
adc
jg
stos
push
mov
jne
pop
push
jns
pop
stc
jmp
lret
and
mov
push
rcl
xchg
ja
shl
das
pop
mov
shrl
push
iret
lret
in
cs
xor
jae
inc
ljmp
push
popf
stos
jbe
insl
bound
cmpsb
mov
pushf
mov
xor
inc
or
xchg
cmp
pop
mov
stc
incl
and
mov
jmp
subl
in
mov
ret
cmp
inc
test
hlt
mov
mov
push
negl
mov
cmpsb
popa
mov
bound
and
lret
or
inc
dec
mov
je
pop
pop
jno
daa
out
loope
sarl
imul
sbb
lods
cmp
xchg
mov
sbbl
shll
lret
pop
gs
fldcw
rcrl
or
std
jb
icebp
sbb
in
ss
and
jae
jle
shll
out
xor
mov
cs
loop
or
add
insb
mov
add
push
xchg
sub
dec
shlb
dec
inc
lcall
sub
push
sahf
sub
lret
fmull
imul
push
sbb
lahf
movsb
shll
cmp
mov
loop
mov
sub
sbb
aaa
leave
mov
adc
lock
xchg
cmpsl
dec
adc
jbe
cmpl
mov
ds
mov
fs
jbe
scas
aad
int
mov
sbb
aam
pop
sub
loop
jmp
dec
iret
test
ljmp
lcall
pop
inc
sub
jg
mov
cmpsb
or
les
fidivl
aas
mov
stos
jecxz
mov
adc
xor
mov
xchg
cmp
xor
cmp
nop
mov
lods
cmpsl
jbe
and
sti
xchg
lea
add
or
pop
pop
std
imul
leave
stc
adc
pop
stos
add
sbb
push
cmp
xor
mov
or
push
mov
ret
imul
sub
lcall
loope
mov
xchg
add
movsb
and
jecxz
ret
ja
ss
sub
pop
test
cmpl
xchg
mov
inc
fld
into
daa
in
mov
fisttps
out
jg
fbstp
inc
test
xchg
inc
cwtl
push
loope
sub
clc
lock
jp
cltd
cmp
push
in
mov
cmpsl
std
xor
pop
int3
adc
enter
es
arpl
pusha
mov
loope
cli
push
cmp
adc
fistpl
mov
adc
cmpsl
addr16
pop
mov
subl
push
pop
adc
insl
and
adc
or
cmpsb
lcall
push
fldcw
negl
sarb
mov
fbstp
sbb
mov
shl
add
push
dec
ret
mov
lahf
insl
mov
sbbb
and
cmp
mov
xchg
jmp
ror
jb
ror
sbb
xorb
ss
jnp
stc
mov
mov
pop
jge
xchg
adc
jle
lahf
or
lds
incl
pop
ljmp
jg
mov
mov
sub
push
cmp
jge
enter
lret
fdivrl
test
insl
bound
push
cmp
int
jge
cmp
testl
sbbb
es
cli
nop
cmp
int
fucomp
gs
icebp
pop
cwtl
inc
cmp
loop
aaa
and
add
mov
repz
pop
dec
dec
outsb
xchg
jo
mov
jno
xchg
cwtl
adcl
sti
rclb
mov
jge
leave
ja
loopne
pop
imul
lods
mov
jb
ret
nop
outsl
cs
push
sbb
fidivrs
mov
jl
sub
nop
mov
mov
push
mov
push
clc
movsl
lcall
xchg
jle
xchg
mov
jnp
fdivl
into
dec
test
dec
jecxz
and
loop
mov
push
or
lock
or
cmp
fmul
int
or
xor
scas
dec
pushf
out
fwait
cmp
xchg
in
push
cmpl
mov
inc
clc
push
call
add
xor
loope
icebp
dec
cmpl
mov
inc
clc
push
call
add
xor
icebp
pop
icebp
dec
cmpb
sub
clc
push
call
add
add
pop
cmp
enter
inc
lret
fdivs
jbe
cltd
xlat
fsubp
into
notl
in
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
rorl
cmp
loop
int
mov
in
sbb
push
pop
add
add
add
push
pop
add
add
add
add
add
add
xlat
add
add
add
rolb
add
add
rolb
add
add
add
add
add
add
add
pusha
add
dec
add
lock
add
add
pop
add
add
pusha
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
xor
dec
add
add
rolb
add
add
dec
add
add
add
rolb
add
and
dec
add
add
add
add
cmp
test
dec
add
add
add
add
add
dec
add
add
add
add
jmp
jmp
dec
add
add
add
add
add
add
and
dec
add
rolb
add
add
add
add
add
add
xor
inc
add
add
add
sub
insl
add
add
add
add
add
mov
mov
sbb
and
dec
add
add
cmp
xchg
movsb
add
dec
add
lret
add
add
inc
add
add
pop
add
pop
add
add
add
push
dec
add
add
add
add
cmp
jge
cltd
add
add
sbb
add
pop
add
add
add
add
add
push
push
add
addr16
add
insl
add
add
add
add
clc
add
rolb
add
dec
add
add
add
add
add
add
add
cmp
jns
add
rolb
add
add
add
add
add
add
add
add
add
bound
inc
add
add
cmp
xchg
add
add
add
add
cmp
jns
cmp
rolb
add
or
push
add
add
add
add
mov
faddl
push
add
adc
dec
add
add
ja
sbb
cmp
test
pop
add
add
add
add
add
test
clc
add
add
add
rolb
add
add
addl
add
dec
add
dec
add
add
add
add
add
add
add
addb
add
dec
add
add
imul
scas
add
adc
dec
add
or
or
pusha
add
add
and
add
and
cltd
add
lds
push
add
add
imul
pusha
add
add
add
add
add
arpl
scas
add
jecxz
dec
add
or
push
add
outsl
add
add
add
or
jns
mov
add
pusha
add
add
add
add
add
add
add
movsb
add
rolb
add
add
pusha
add
add
add
add
add
add
add
dec
add
add
add
add
add
pusha
add
xor
fiaddl
rolb
add
les
xor
pop
add
add
add
adc
clc
add
add
add
add
imul
rolb
add
add
add
add
add
add
add
addl
add
add
add
add
xchg
add
dec
add
add
pop
add
add
add
xchg
test
ret
call
jbe
dec
frstor
fs
inc
scas
call
cmp
cmp
lock
sbb
stc
inc
icebp
cs
popa
popf
xchg
pushf
jbe
adc
stos
pop
dec
movsb
xlat
shlb
cmp
sbbl
and
movsl
mov
ja
in
inc
mov
sub
cmpsl
testb
jno
and
fstpt
repz
or
arpl
adc
sub
xchg
mov
popf
into
dec
jg
bound
and
lods
mov
in
stos
jne
xchg
push
cmovs
cmc
pop
clc
pop
int
aam
les
dec
jg
pop
mov
std
pusha
jo
loop
into
push
inc
or
xchg
and
ficomps
sarl
dec
mov
xchg
or
fs
insb
dec
push
or
aas
cmp
inc
jns
dec
dec
inc
dec
add
cmpb
cmpsl
or
imul
insb
pop
jl
test
push
pop
in
push
in
pop
dec
xor
push
repnz
xor
push
sti
sub
orl
inc
dec
dec
lret
pop
push
push
xchg
pop
jae
lods
mov
daa
push
gs
mov
popa
xchg
jmp
repnz
jnp
push
movsl
pushf
movsl
fs
test
scas
clc
in
cmc
adc
or
shl
cmp
roll
sub
je
push
mov
rcrl
les
fdivs
xor
mov
inc
ja
jecxz
mov
push
not
xor
push
sahf
repz
call
rcll
pop
sbb
mov
xchg
cmp
scas
stos
loope
stos
push
aaa
cmpsl
mov
fdivr
sbb
xchg
sahf
jnp
enter
mov
aaa
mov
mov
sahf
fisubrs
cld
xchg
push
scas
xchg
in
pop
out
sub
les
notb
push
jb
push
mov
dec
pop
lock
int
add
sbb
dec
stc
push
das
rolb
mov
push
aad
ret
scas
adc
pop
shlb
mov
pushf
jns
rcll
sti
fnstenv
je
mov
outsl
imul
addl
adc
or
jnp
ret
cwtl
repnz
or
nop
push
out
outsl
and
pop
push
inc
xchg
dec
sahf
daa
dec
cmp
mov
pop
mov
stos
inc
cmp
xor
cmpb
push
cmpsl
shlb
mov
adc
sub
mov
aas
push
push
xor
jmp
loopne
pop
stc
inc
add
sub
push
nop
repnz
fwait
icebp
add
insb
push
inc
fdivrs
jp
xchg
cmc
roll
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
