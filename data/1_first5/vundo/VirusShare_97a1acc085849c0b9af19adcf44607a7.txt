sub
sbb
xchg
rcll
pop
add
add
add
add
dec
repz
push
push
push
push
push
or
add
call
mov
outsl
jg
shrb
lock
or
mov
shr
shl
or
sub
incl
mov
add
dec
jne
pop
pop
pop
jmp
ret
push
mov
push
movl
out
aas
mov
xor
inc
inc
test
je
movzbl
lea
mov
mov
popf
std
xadd
adc
sarl
aaa
jne
cmp
je
push
xor
xor
mov
dec
lret
adc
inc
cs
pop
push
lret
je
mov
cmp
je
mov
sub
pop
sub
lcall
push
cmp
or
mov
je
test
je
cmp
clc
subl
mov
adc
loopne
inc
add
ret
push
push
sti
sub
add
andl
add
pop
xor
inc
ret
mov
orl
in
int3
push
adc
push
ret
xor
add
sbb
fucomi
int3
add
adc
mov
fisttpl
lahf
mulb
mov
sub
push
clc
mov
outsl
out
pop
push
aam
fiaddl
mov
lea
mov
lods
mov
adc
leave
push
ret
push
inc
xor
pop
inc
xor
imul
xchg
push
sub
jle
cld
mov
jp
testl
jbe
jne
into
mov
aas
mov
inc
jae
pop
xor
or
je
cmp
shll
je
lea
push
pop
pop
push
push
lea
xor
xor
fidivs
divb
or
pop
pop
scas
xor
js
xor
add
dec
push
sbb
idivl
add
add
or
insb
lock
jmp
mov
mov
dec
add
mov
push
movsl
decl
pop
fmuls
and
mov
mov
lock
mov
push
sbb
add
clc
pop
lock
jne
or
or
push
ja
mov
pusha
push
fistpll
push
adc
mov
mov
push
push
sti
jbe
xchg
test
dec
push
or
inc
add
adc
sti
lock
adc
and
or
testl
add
add
ret
adc
out
add
or
call
cmpw
jne
mov
add
cmpl
mov
pop
jne
movzwl
mov
pop
or
clc
loopne
ds
cmpl
sub
sbb
clc
pop
push
cmpl
loop
inc
mov
in
push
shlb
or
in
push
jmp
pop
jmp
out
inc
mov
bound
push
ja
or
add
adc
xor
inc
push
pcmpeqd
mov
or
or
pusha
cmpsl
mov
mov
pop
mov
gs
je
push
sub
mov
or
popf
adc
loopne,pt
inc
mov
inc
shlb
jmp
push
pop
cmp
push
xlat
add
mov
jl
pop
adc
cmp
jne
push
push
or
jno
jmp
jle
mov
sbb
mov
or
movsl
shll
lahf
push
push
mov
cmpl
pop
repz
jle
gs
ljmp
fisubrl
adc
mov
cmp
cmp
js
testl
stos
jbe
fcoms
mov
call
push
push
xor
movsl
loop
xor
mov
jo
pop
cs
mov
je
xor
or
mov
loop
sub
dec
jl,pn
add
push
mov
mov
call
ret
popl
push
sub
sbb
pushf
mov
push
adc
hlt
jne
mov
push
or
push
or
or
mov
adc
pop
ret
inc
add
imul
loopne
and
cmc
das
push
or
ret
add
cmpsb
sbb
or
add
or
add
addb
cmpl
pushl
dec
and
gs
push
xor
stc
cmpsb
lret
mov
jae
mov
inc
add
xlat
jbe
fnsave
and
clc
cmp
clc
xor
inc
clc
push
sbb
and
add
scas
ljmp
mov
and
cmp
inc
cmp
jl
cs
push
push
rcl
in
je
and
xor
cmpl
add
sbb
int3
je
lcall
cmp
aas
test
imul
cmp
cs
inc
and
sub
dec
xchg
sub
push
mov
dec
lcall
jb
ljmp
lods
mov
sarb
fidivl
testb
jne
fs
clc
push
cli
and
aaa
call
leave
mov
jle
lea
sbb
cmp
dec
sub
test
jg
push
jne
push
pop
cmp
jg
mov
fstpt
xchg
lods
mov
inc
cmp
cmp
cmp
adc
inc
mov
movsb
leave
mov
pushf
jmp
test
jle
add
sbb
jp
andl
cwtl
mov
fidivrs
insb
jl
sub
dec
jns
push
jge
cmp
push
inc
mov
inc
jmp
sbb
leave
dec
push
lea
add
stc
adc
into
cli
pop
sar
sub
incl
push
adcb
in
push
push
sub
mov
call
or
xor
mov
in
pop
pop
es
loope
pop
jo
cmpsb
cmp
mov
jae
hlt
aas
mov
mov
je
call
add
cmp
jb
and
push
sti
mov
add
mov
pop
jae
push
add
fisubl
test
push
fs
cmp
addb
cmp
sbb
outsb
xor
or
jle
lds
outsb
sub
adc
cmp
add
dec
mov
sbb
mov
pushf
sbb
in
adc
push
test
sub
adc
sbb
or
cmp
add
imul
mov
xor
mov
add
out
add
add
je
in
push
lea
xchg
jo
shlb
sti
lea
push
mov
call
or
cmp
pop
inc
sbb
loopne
out
das
and
lock
cmp
std
outsl
xchg
cmp
fbld
jne
cmpl
cmp
into
lret
stc
cld
or
out
je
scas
mov
push
push
mov
sbb
into
mov
sub
in
jbe
sbb
pop
pop
lea
mov
sbb
insb
in
and
jo
mov
sbb
push
add
pmaxub
fs
mov
aas
pushl
add
sbb
mov
push
pop
fidivrs
popa
loopne
push
push
js
xchg
or
dec
jns
adc
mov
push
ret
and
lds
div
pushl
pop
push
adc
je
jo
ret
iret
xor
movsl
je
lock
sar
sti
mov
push
sbb
add
ret
aaa
sbb
je
lock
and
dec
ja
andl
mov
sub
mov
mov
das
push
push
mov
adc
xor
rorl
push
stos
pop
mov
sbb
xor
add
sbb
aad
enter
add
and
mov
or
add
clc
or
popa
or
sbb
sti
divl
loopne
ret
or
adc
sub
push
mov
pop
or
lret
aaa
dec
sti
add
dec
cmp
lret
adc
mov
es
or
jne
mov
inc
jbe
sub
mov
mov
fsubrs
call
xor
andl
lcall
imul
xchg
rclb
or
rcll
push
rcrl
adc
xorb
int
push
fadds
fs
call
cs
js
clc
xor
cmp
orb
push
sbb
or
stos
fisttps
and
test
test
ss
jg
cmp
jne
sar
sete
mov
movzbl
pop
sbb
fincstp
sub
jmp
push
pop
inc
bound
cmc
pop
jae
mov
fstpt
sbb
mov
mov
loopne
xor
imul
xor
clc
add
pop
icebp
cmp
jne
mov
add
adc
fdivrs
sti
pushf
cmp
pop
shll
sub
call
or
fldt
push
pop
cmp
pop
pop
je
push
leave
in
out
dec
add
cmp
jne
ljmp
jne
sbb
mov
fsubl
stos
ds
cmp
dec
rorl
jecxz
aam
movb
mov
push
mov
hlt
movl
aaa
je
xorl
xor
shr
aas
cld
aas
inc
mov
mov
jmp
incl
bound
inc
or
in
negb
push
flds
and
mov
sbb
clc
or
mov
xor
cmp
sub
or
cmp
movb
pusha
int3
into
xchg
mov
mov
cmp
pop
dec
jmp
dec
jmp
xor
lock
incl
out
inc
pop
jmp
inc
inc
mov
sbb
inc
pop
je
cmp
test
pop
push
cld
or
dec
add
roll
cld
je
dec
cld
insb
xchg
shr
fs
in
push
adc
push
int3
repz
outsl
aam
cmp
aas
dec
rcrb
lods
shl
subb
into
inc
fs
wrmsr
leave
imulb
xchg
addl
sbb
add
and
inc
ja
add
cwtl
add
rcl
sub
mov
add
xchg
or
cmp
je
clc
add
fdivs
mov
xchg
push
push
lea
sub
pop
sub
mov
hlt
shl
push
test
add
mov
and
and
gs
cmp
cmpsl
test
and
push
or
movsb
inc
cmp
pusha
push
push
sbb
cmp
in
push
sub
out
mov
mov
push
inc
dec
sub
and
push
dec
push
aam
add
out
cmpsb
js
mov
mov
outsl
cli
in
imul
cmp
push
push
add
mov
int
adc
jne
or
add
push
mov
pop
aad
clc
insb
push
adc
call
and
scas
je
cmp
mov
inc
fidivs
inc
testb
dec
cmp
adc
push
mov
or
push
cmp
and
pop
cmpsl
xor
sub
mov
je
inc
cmp
sti
or
lock
addl
stos
push
sbb
pusha
or
xchg
cmp
mov
push
out
pop
pop
sahf
sub
push
inc
lock
ficoml
aas
mov
insb
adc
cmp
stos
and
cltd
loope
sbb
add
add
rorb
shll
shll
lea
inc
stc
cmpw
fmuls
mov
fstpl
add
push
jl
lock
or
push
mov
addl
or
iret
pop
add
smsw
xchg
popf
clc
inc
jo
xor
fmull
clc
shlb
dec
add
roll
or
jne
clc
sub
mov
test
stos
mov
mov
mov
mov
jne
mov
pop
mov
inc
inc
add
jl
pop
andb
lea
cmpl
dec
mov
scas
loopne
mov
jmp
ret
dec
neg
sbb
push
cmc
mov
js
cmp
insb
jmp
pop
push
int
and
jle
add
add
fstl
prefetchnta
pop
adc
jmp
or
jl
jno
rcrl
mov
jb
push
push
lahf
sbb
inc
in
pop
inc
insb
or
jne
pop
mov
cmc
or
shl
bnd
subl
jmp
xor
pop
adc
cmpl
add
push
mov
add
cmp
add
dec
inc
arpl
push
lock
mov
dec
loopne
add
repnz
sbb
push
push
maxps
into
movsl
call
test
xor
jbe
jae
mov
les
mov
jne
lret
into
adcl
into
jbe
test
dec
in
sub
sbb
dec
je
dec
push
dec
stos
sbb
add
bound
fsubs
and
lods
bnd
mov
adc
add
push
push
sub
pop
add
subl
pop
ret
xchg
add
xor
jmp
daa
cli
movsb
mov
mov
push
pop
add
call
jns
push
mov
dec
ret
push
push
sbb
push
jle
mov
push
add
scas
insb
xor
push
add
xchg
inc
mov
push
fcompl
jl
mov
and
bt
sbb
mov
add
push
and
sbb
sbb
or
add
pop
in
mov
push
popf
mov
jb
dec
adc
jmp
sbb
cmp
push
mov
push
lods
sbb
mov
movb
or
pop
or
cwtl
and
int3
add
jb
push
mov
jl
pmullw
pushl
test
into
or
cmp
jnp
add
add
cmp
test
insb
add
cld
push
and
js
incl
pop
push
or
add
int
jns
jmp
or
jmp
in
imul
add
enter
mov
jnp
in
js
je
mov
movl
mov
xlat
decl
mov
bound
divb
in
jae
test
jo
pop
insb
fld
adc
inc
add
sbb
mov
jnp
adcl
adc
clts
ja
push
push
mov
mov
xor
mov
shr
jne
mov
add
int3
sub
in
in
fisubrs
push
jne
outsb
dec
jne
and
push
push
cld
dec
inc
aaa
sub
in
fdivs
ljmp
cwtl
das
sbb
sub
mulb
pop
pop
out
sahf
xchg
pop
cltd
and
push
add
sub
sbb
jne
jbe
sbb
cmp
adc
add
shrb
mov
and
loopne
mov
ja
xchg
loopne
imul
cmpsl
orb
dec
cmc
mov
pop
mov
and
inc
or
in
imulb
rol
std
cld
xchg
adc
xor
pushf
es
jmp
loope
or
lock
ret
mov
testl
test
loope
mov
jl
mov
mov
inc
and
or
jae
push
add
sbb
sub
in
shlb
je
or
fisubrs
cld
mov
add
or
push
or
mov
loopne
fcmovnb
mov
stos
adc
in
and
cmpsl
push
push
repz
mov
pop
pop
sar
xchg
iret
push
lds
cmp
xor
add
add
mov
cvtpi2ps
jb
mov
lret
pop
and
clc
or
push
xchg
or
shll
enter
std
jecxz
mov
sub
lret
and
rep
addl
inc
jle
pop
pop
in
cmp
daa
cwtl
xor
add
push
fldl
das
adc
xor
das
sub
ds
repnz
cmp
in
add
out
subb
dec
test
cld
subb
andb
xchg
push
xorb
pop
xor
mov
mov
test
sbb
and
sub
aas
jo
in
mov
inc
jb
or
mov
mov
add
test
xor
adc
lock
in
jp
push
cmp
and
loopne
mov
push
jmp
cwtl
add
mov
and
daa
cs
add
inc
jne
js
mov
add
mov
inc
std
sub
fnsave
cld
jne
mov
jnp
xlat
ret
lock
arpl
repz
pushl
inc
push
mov
add
sub
addr16
sbb
mov
inc
cmp
sub
rclb
dec
sbb
and
push
int
inc
cmp
call
jbe
testl
adc
int
pop
add
aas
mov
inc
sbb
lea
shl
mov
stos
lea
dec
rolb
mov
jmp
mov
es
jle
in
mov
fmuls
js
or
scas
inc
es
inc
pop
sar
inc
in
ret
or
subl
fdivrp
cli
push
xchg
xor
lret
jp
mov
movsb
fwait
loop
outsl
adc
pop
inc
add
dec
add
jbe
inc
inc
cmpb
dec
lds
shlb
stos
pop
popf
pusha
idivl
outsl
mov
push
sti
loop
cmp
jmp
cmp
push
push
push
lea
scas
test
xor
test
test
ficomps
adcl
push
and
insl
pop
push
sub
push
sbb
dec
ret
push
push
or
int
decb
loop
push
jne
fadd
push
icebp
push
sub
or
in
adc
mov
jo
ret
pop
jge
adc
fwait
adc
or
sub
and
add
xor
and
lock
mov
add
ja
std
sbb
mov
push
inc
or
daa
xor
lret
test
push
jb
push
or
sub
adc
or
lock
adc
ljmp
roll
cmp
jbe
cmp
jb
mov
and
stc
or
rep
jmp
jbe
sarb
or
loopne
add
cs
imull
mov
nop
push
and
faddl
add
and
push
mov
mov
mov
stc
lcall
mov
mov
jge
add
in
nop
dec
add
mov
add
repz
push
push
dec
inc
sahf
out
aas
mov
mov
call
out
in
lock
hlt
or
out
clc
cld
cld
xor
subb
add
add
sbb
cmp
iret
imul
push
mov
pop
pop
push
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
pop
and
stc
or
std
cld
out
sub
neg
xchg
mov
fsubrs
daa
stc
out
in
xchg
xchg
sub
pop
nop
cmp
pusha
push
mov
inc
cmp
add
out
add
out
add
ficoms
push
add
imul
pop
add
lcall
sbb
in
in
hlt
cld
add
pop
jl
xor
xor
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
cmp
inc
push
movsb
loop
push
push
xor
push
add
lds
add
cmovle
mov
daa
ja
inc
inc
pop
mov
mov
test
and
sub
rclb
or
test
ret
mov
mov
nop
aam
adc
cmp
incl
add
add
insl
loop
pop
lods
les
mov
sub
fwait
lock
out
jnp
dec
lea
mov
mov
push
dec
mov
jne
sbb
mov
mov
push
cld
or
jg
dec
xchg
adc
mov
jne
sar
dec
cmp
jbe
push
pop
add
aas
pop
mov
cmp
inc
push
and
xorb
lret
lea
not
and
decb
dec
out
negb
add
sbb
sbb
dec
loopne
pushf
mov
adc
add
push
dec
pop
sahf
imul
mov
push
or
scas
subl
jmp
imul
pop
clc
and
pop
hlt
mov
cmc
add
sar
xor
lret
cmp
jbe
out
lods
mov
andb
cmp
je
in
andb
jno
jno
cmp
mov
pop
mov
shr
not
and
add
sub
shl
lea
das
mov
xor
sahf
jle
pop
dec
test
add
inc
xor
or
cld
jmp
pop
jnp
stos
sub
lods
or
je
jbe
lock
mov
pop
or
or
popa
push
pusha
adc
mov
mov
inc
pusha
push
push
jae
cmpb
push
xchg
ds
call
inc
push
fisttps
dec
or
jmp
dec
adc
push
mov
or
pusha
mov
push
sub
lock
pushf
sub
jno
fs
fmull
shrb
int3
and
dec
or
fbstp
push
call
aas
gs
push
or
flds
cmp
sub
dec
inc
adc
dec
adc
add
and
jnp
jmp
jo
mov
adc
jg
shll
cmc
leave
mov
loopne
add
adc
adcb
test
adc
xor
dec
les
or
jbe
or
or
cmp
outsb
pop
enter
adc
or
loopne
pop
jne
movsb
adc
mov
push
outsl
push
adc
mov
jbe
pop
ret
cmpl
adcl
scas
or
xor
jo
aad
mov
ja
inc
push
push
add
lods
push
cmp
or
jbe
push
divl
rolb
mov
incl
mov
enter
loope
add
fwait
cmpsb
adc
fcomps
jo
fcmovnu
shl
inc
daa
in
outsl
adc
mov
imul
add
clc
pop
mov
add
sub
jne
add
shlb
sti
mov
out
fildll
add
and
jne
xchg
add
cli
loop
ja
fsubrs
mov
dec
shr
lea
inc
orl
orl
out
lret
inc
pusha
adc
out
inc
inc
cld
lock
call
adc
add
xchg
add
mov
dec
rorl
inc
add
out
sahf
inc
and
mov
fdivs
enter
pop
mov
jne
or
adc
jle
xlat
ss
lock
adc
out
mov
xlat
sub
pop
shr
add
ror
orb
testb
sub
cmp
mov
and
jb
scas
test
ret
or
add
je
cmp
cs
aas
add
stc
add
cmp
xorb
in
add
push
mov
pop
inc
cmp
or
jmp
add
es
nop
cmp
inc
or
lcall
add
adc
and
into
push
rorl
add
pusha
sub
pop
shl
cltd
adc
cmp
mov
cld
xlat
fidivs
pop
hlt
lea
loop
jg
sbb
cwtl
pop
shll
push
pop
dec
sarl
adc
pop
sbb
mov
loopne
mov
jmp
push
movsb
jmp
xchg
imul
sbb
out
insb
xor
jmpw
lea
mov
sub
js
cwtl
aam
add
lea
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
cmp
adc
xor
movsl
pop
divb
fisubs
cld
xor
in
pop
cmp
dec
scas
dec
mov
ret
mov
push
fisttps
scas
dec
pop
sbb
push
push
fistpll
mov
ja
dec
in
sbb
add
mov
loope
lea
cmp
lock
mov
mov
mov
jns
push
seta
bswap
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
cs
call
sbb
rolb
add
mov
push
inc
xor
mov
cli
push
cmp
lea
mov
or
adcl
sbb
jo
nop
xor
push
loopne
not
call
into
hlt
cmp
jle
fucomip
mov
and
or
jne
ret
adc
fdivrs
cwtl
push
adc
jb
push
jne
mov
jmp
inc
mov
fadds
or
test
sbb
cli
ljmp
mov
clc
ljmp
clc
in
orb
xor
add
mov
jne
xchg
notb
mov
mov
cmc
cli
xlat
je
dec
imul
mov
cmp
into
jne
lret
ret
pop
jmp
cmpl
imul
js
out
andl
xor
lock
outsl
add
je
push
sbb
sbbb
add
loopne
in
and
jae
xchg
shl
inc
test
aam
in
xor
or
sub
xor
roll
cld
jle
cmp
sbb
push
aam
xchg
dec
inc
dec
pop
cmp
loope
xor
iret
jg
cmp
lea
in
and
mov
push
pcmpeqw
mov
mov
or
sub
dec
mov
int3
or
mov
pop
adc
add
dec
push
and
clc
into
pop
jp
dec
adc
popa
dec
jp
fs
pop
mov
push
or
das
pop
mov
or
or
rcl
jo
cwtl
out
or
ja
inc
out
add
movsb
inc
or
xor
adc
mov
pop
out
or
mov
dec
xlat
mov
push
adc
lock
push
push
scas
mov
and
fmul
push
mov
push
jne,pt
cmp
mov
jne
lds
out
sahf
lea
notl
push
add
outsb
push
dec
arpl
add
lahf
xor
sub
outsb
push
xchg
aaa
jle
sbb
mov
jmp
clc
or
xchg
and
ret
dec
push
push
pop
and
js
shlb
mov
mov
pop
je
adc
dec
mov
mov
push
push
je
pop
add
insb
xchg
push
adc
in
ds
dec
jp
int
je
xchg
outsl
popa
cwtl
lods
push
adc
lahf
dec
sbb
jne
xchg
mov
cmp
sub
cmp
xor
testl
xor
test
filds
repnz
mov
or
iret
pop
pop
int3
pop
pop
pop
sbb
jle
sbb
push
and
jbe
lods
call
out
hlt
shr
add
xchg
mov
test
pop
popf
adc
dec
out
mov
push
inc
mov
mov
jne
push
pushf
jb
push
lret
xchg
cwtl
xchg
dec
lock
xchg
sbb
inc
hlt
xor
and
imul
sbb
push
js
nop
add
inc
in
jmp
sub
cmp
je
or
rcrb
addb
xchg
clc
insl
call
dec
cmpb
inc
add
pushf
aam
cmp
push
xor
pop
push
sub
add
mov
pop
test
sub
push
outsl
popa
or
adc
sub
pop
popf
sbb
lock
mov
adc
fs
mov
and
pop
xchg
xor
fadds
add
push
push
or
sub
xor
clc
mov
jbe
aad
push
mov
pop
ljmp
push
and
mov
mov
push
es
and
push
cmp
xor
push
push
mov
cmc
cmp
mov
test
sub
mov
jmp
sub
adc
pushl
and
mov
pop
adc
sbb
adc
dec
cmp
pop
inc
cmp
jle
jbe
add
jmp
sub
add
mov
push
cmpsb
neg
add
loop
lods
rorl
aam
add
ljmp
add
enter
xchg
and
add
push
rcll
loopne
adc
js
and
pushf
jne
xchg
lea
push
xor
or
mov
sbb
add
mov
jg
inc
xor
jbe
adc
sbb
ljmp
ds
ret
sbb
push
je
or
fs
arpl
or
in
push
add
xor
cmp
dec
addr16
scas
negb
inc
or
sbb
jmp
insb
xchg
mov
mov
add
js
pop
sbb
xor
lcall
loopne
sbb
flds
loopne
push
push
sub
inc
xchg
enter
and
mov
pop
sub
add
jmp
xor
xlat
mov
mov
es
mov
in
push
mov
mov
shlb
or
push
fsubr
cmp
or
sbb
xor
repnz
jb
lea
jecxz
xor
aam
sbb
ja
or
mov
je
popa
cld
push
pusha
pop
lods
adc
int3
jmp
ret
sbb
insl
ss
xchg
fcompl
sbb
xor
je
es
sub
add
or
add
fcompl
jns
jo
imul
sub
std
push
inc
or
dec
shl
ficomps
mulb
or
mov
jmp
inc
mov
push
sbbb
jns
sbb
mov
test
fadds
out
mov
sbb
test
aad
or
push
xor
movsb
xor
push
and
push
movsb
mov
movsb
iret
mov
movsb
gs
loop
dec
shrl
add
loop
loopne
fs
mov
repnz
ja
jne
sbb
fdivrs
mov
push
sbb
mov
fldcw
jl
icebp
aad
cmp
adc
lock
push
push
sub
inc
pop
or
mov
loopne
push
pop
hlt
cmp
je
jae
insl
mov
or
int3
push
mov
mov
inc
xor
add
fimuls
inc
pop
rorl
mov
xchg
test
addr16
lds
je
pop
push
adc
aam
sub
aad
fst
addb
popf
xchg
mov
sbb
mul
sbb
mov
xor
push
sub
roll
in
inc
scas
mov
cld
inc
orb
or
rolb
pusha
inc
mov
mov
cmp
repz
or
push
enter
add
loopne
test
inc
mov
sbb
jmp
mov
inc
mov
nop
cmpl
mov
add
fistpl
pushf
push
rolb
inc
mov
mov
inc
cmp
fstl
mov
or
push
dec
push
add
iret
repz
fs
jg
fimuls
pusha
mov
add
loopne
push
mov
inc
mov
jle
or
push
dec
pushf
xchg
and
mov
jl
ret
stc
cmp
xor
stc
sub
rcrl
cmp
add
adc
xor
pop
lcall
or
cmp
push
test
add
sbb
push
jne
push
push
pop
movb
mov
outsl
inc
or
jno
pop
into
lds
xchg
fisttpll
push
add
sbb
xorl
dec
shlb
push
fidivl
pop
mov
mov
imul
rclb
fiaddl
test
rclb
fcmovnbe
mov
fs
jne
rorl
movsb
enter
sbb
mov
adc
or
pop
inc
out
push
les
jne
push
push
adc
push
cmc
les
sbb
jo
divl
in
sub
adc
lods
cwtl
push
pop
loopne
sbb
pushl
fistl
mov
jne
push
xchg
fcomps
and
jmp
cmp
inc
mov
cld
mov
and
cmpl
je
inc
test
add
and
xor
iret
push
data16
xorl
mov
push
add
add
imul
push
mulps
test
dec
push
dec
es
int3
addr16
test
jo
inc
push
adc
mov
add
push
cld
push
mov
mov
lea
stos
in
pop
pop
cwtl
mov
sbb
int3
add
lods
hlt
mov
add
lret
push
and
nop
faddl
out
and
adc
add
or
not
and
sub
pop
dec
pop
cli
ljmp
jl
out
add
imul
add
cmp
bnd
and
in
mov
mov
aam
lods
and
mov
push
test
je
testb
sub
loop
fdivrs
add
or
icebp
and
adc
cmp
clc
jnp
add
aas
jbe
push
ret
add
in
push
inc
push
dec
mov
pop
inc
mov
loopne
rcrb
icebp
cmp
add
mov
jle
xor
icebp
test
cmp
xchg
ja
xlat
jne
sub
sbb
cmp
test
sub
or
sub
adcl
lods
jmp
push
lock
mov
loopne
mov
push
push
cmp
add
icebp
sbb
inc
shrb
mov
jne
pop
dec
adc
jl
or
jg
jmp
mov
push
inc
inc
jmp
add
out
pop
sub
xchg
sbb
fadds
xchg
push
lock
stos
mov
shr
inc
rcl
or
int3
pop
pop
mov
enter
cld
ficoms
pop
push
sbb
add
push
xchg
mov
jne
clc
or
hlt
and
bound
repz
jle
adc
cmp
lcall
add
out
icebp
ret
and
mov
enter
adc
jne
sub
loope
and
or
add
ret
jne
or
rcrl
lea
test
jl
fdivs
ret
add
addr16
cli
stc
or
xor
push
add
stos
std
es
xor
movsb
dec
jo
add
sbb
std
add
dec
pop
imul
nop
add
cwtl
push
mov
jmp
sub
cmp
push
pop
std
jmp
push
inc
outsl
jb
js
je
jb
arpl
jae
mov
outsl
jb
gs
insb
add
outsb
je
insl
and
jb
jge
and
or
dec
push
push
and
add
dec
inc
add
inc
and
in
pushl
xor
cmp
sub
jae
popa
jo
insb
imul
out
fldt
or
outsb
outsl
je
shlb
jne
imul
popa
arpl
mov
lods
ss
add
jae
outsl
sub
jg
fildll
dec
inc
push
and
or
gs
jae
out
dec
pusha
cmp
outsb
push
sarl
jae
sbb
xor
and
cmp
mov
inc
cs
imul
bound
pop
outsl
inc
imul
stos
test
fstpl
sub
dec
aaa
outsl
or
push
les
gs
outsl
ja
jno
inc
ds
cmpsb
outsl
ss
fs
jo
insb
jbe
xchg
jne
ss
inc
dec
arpl
adc
mov
loopne
jbe
das
mov
push
lds
xor
out
outsl
jo
mov
fcomps
fs
push
cmp
push
pop
mov
fs
adc
inc
aaa
insl
jne
pop
or
inc
stos
xor
fs
arpl
scas
loopne
bound
imul
ret
add
push
jne
cmp
dec
jbe
cli
xor
and
cmpsb
out
cmp
ds
adc
outsb
into
xorl
jns
ja
cmp
and
and
out
inc
dec
ja
push
cmp
addr16
je
lret
scas
xor
fcoml
sbb
je
and
pop
pushf
cmpsb
or
xor
sub
cmovl
jb
jns
or
mov
ret
sub
lock
mov
jae
cmp
add
cmp
and
popa
dec
int
jp
pop
imul
outsb
add
and
out
jbe
pop
mov
divl
fs
je
das
imul
jb
bound
dec
jae
push
mov
add
push
and
sahf
shr
daa
pop
lea
mov
popa
addr16
outsl
js
jne
xor
xor
lcall
sub
jmp
mov
inc
and
data16
xchg
xchg
mov
bound
fs
ja
arpl
cli
inc
jo
adc
testb
loopne
stos
sarl
subb
and
sbb
outsl
or
lret
sbbl
push
jne
ds
je
in
cwtl
mov
fs
add
xchg
adc
sub
out
sub
inc
mov
jb
jns
jo
adc
or
add
and
push
enter
pusha
rorl
push
aas
jae
popa
das
push
xor
imul
adc
cmp
and
sub
in
stc
sub
adc
addl
adc
add
add
xchg
lods
stos
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
sti
mov
and
in
inc
inc
add
push
xor
out
jmp
mov
mov
push
dec
mov
push
mov
dec
dec
mov
scas
add
mov
push
xchg
adc
pop
inc
adc
and
inc
cmp
sub
testb
ja
push
mov
dec
decl
jmp
ljmp
xor
xor
dec
lock
jo
lods
push
lock
xor
lock
jg
jmp
lea
rolb
cmc
jg
cmp
mov
xchg
sahf
daa
dec
fmulp
fwait
test
ljmp
test
pop
pop
arpl
test
add
push
daa
push
or
lds
ljmp
popf
loop
fisttpll
push
in
ret
mov
sbb
jno
fs
or
leave
lret
dec
dec
mov
or
push
xchg
je
sbb
mov
out
jge
mov
fadds
cmp
incl
fidivs
inc
jg
movsb
lods
sbb
in
mov
push
cltd
shrb
xchg
pop
out
jl
xor
cmp
xor
iret
stos
dec
and
iret
mov
cltd
dec
lds
jmp
cwtl
leave
pop
stc
xchg
mov
jecxz
inc
mov
jo
dec
push
aaa
mov
pop
mov
jl
sbb
nop
shlb
cmp
push
pop
incl
outsb
dec
xchg
fwait
into
ss
into
ljmp
push
dec
jb
push
test
inc
popf
inc
mov
ja
inc
dec
std
cmpb
inc
mov
pop
test
cmp
xor
decl
mov
jnp
inc
addb
lock
icebp
mov
cltd
xchg
mov
lret
int
idiv
ljmp
cmc
faddp
pop
aaa
test
jle
mov
sbb
xor
es
insl
aaa
mov
subb
std
decl
loopne
mov
xor
xor
es
xchg
imul
pusha
push
jno
rcll
shll
adc
cmp
add
cmove
mov
pop
push
sbb
or
mov
and
inc
push
jl
xchg
addb
enter
lods
call
mov
inc
loope
cmp
scas
pushl
ja
push
mov
int3
nop
decl
stos
outsb
add
test
mov
insl
push
dec
inc
clc
ficomps
sub
imul
pushl
add
out
xchg
or
andb
movsb
shrl
push
cmp
fdivr
popa
dec
xor
call
jns
mov
mov
mov
or
into
test
mov
xor
lret
sbb
pop
cli
es
push
les
es
mov
dec
imul
rcrb
andb
sbb
and
andl
incl
or
jne
xchg
in
mov
sub
call
push
jmp
push
dec
pop
mov
and
mov
fwait
jns,pt
push
cli
pop
insl
dec
xchg
mov
incl
mov
in
mov
xor
pop
xor
xor
mov
das
jo
ja
outsl
pushl
sbb
xchg
scas
ret
jl
ret
and
bound
cmpb
pushl
add
xchg
test
nop
out
scas
popf
mov
enter
aad
hlt
lahf
or
jmp
andl
into
stos
in
lret
adc
inc
lahf
insl
imul
mov
in
incl
ljmp
add
jae
mov
xorl
jmp
mov
and
aaa
push
pop
pop
mov
popa
mull
mov
pop
das
shrl
pop
jmp
mov
ljmp
pushl
cmp
mov
lods
and
and
xor
call
insb
or
in
push
aam
decl
pushf
rcrl
dec
orl
mov
hlt
test
sub
mov
insb
insl
iret
xchg
ret
add
push
pushf
dec
in
mov
stos
mov
lcall
sbb
xchg
mov
jmp
lcall
nop
ret
dec
loope
xchg
mov
mov
lcall
cmp
push
jne
push
push
push
sub
push
stos
xor
cld
adc
ljmp
dec
xor
sub
insb
cmp
cmpsb
jmp
pop
adc
rcrb
lcall
outsl
mov
sahf
mov
fs
lds
push
cmp
cwtl
ffreep
andb
inc
cmc
data16
push
push
xchg
inc
imul
lods
dec
call
lcall
out
mov
mov
jno
lcall
push
sbb
enter
call
aaa
repz
add
cmp
shlb
dec
xlat
scas
jb
daa
call
ljmp
xlat
inc
repz
jnp
test
loope
mov
xchg
push
jbe
shrl
or
ljmp
push
es
les
shlb
int3
test
jno
dec
push
data16
decl
mov
mov
push
cmp
nop
outsl
lock
cmc
call
shl
cmp
ljmp
push
pushw
test
cmp
movl
aam
sub
xor
lcall
xchg
imul
stos
pop
mov
add
bound
xor
in
stc
cld
cltd
incl
cld
pop
cld
cmp
dec
cmp
in
sahf
sahf
pop
movntq
call
jnp
in
sub
aaa
lods
inc
jge
sbb
mov
jmp
adc
mov
or
lock
jae
push
cld
xor
fs
inc
sub
or
loopne
mov
cmp
mov
shll
push
and
jmp
inc
or
shl
jecxz
cmp
in
insb
xchg
fstl
push
lret
data16
cld
add
mov
cmpsb
xor
les
dec
stos
add
push
fs
inc
mov
dec
add
and
jbe
and
cmp
outsb
pop
sub
cmp
pop
adc
push
mov
out
lcall
fmul
cli
arpl
cmp
int
xchg
sbb
dec
xor
cmp
movsb
data16
ret
ret
loope
loope
inc
cmpsb
or
xchg
into
das
pop
inc
and
decl
movsl
push
add
jnp
pop
mov
push
cwtl
nop
sub
mov
popf
jmp
mov
push
or
cmp
lea
xor
testb
pop
and
dec
je
lcall
and
jg
pop
and
sbb
ss
sub
xor
ljmp
xchg
mov
insl
sbb
jmp
xor
inc
cmpsb
fldl
sbb
pushf
lret
pop
mov
adc
enter
or
cmp
push
xchg
popf
sub
pop
es
adc
sbb
movsl
xchg
inc
not
ja
call
repnz
sbb
adc
out
adc
aam
mov
ja
push
adc
dec
in
daa
popa
fwait
pop
push
push
loope
inc
pop
mov
add
inc
outsl
and
imul
repz
jl
jae
add
movsb
sub
and
call
inc
xchg
fmull
and
in
repz
mov
mov
or
sub
imul
cmp
popf
testl
jbe
insl
arpl
mov
js
pushf
insb
ret
jmp
stc
xchg
sar
jecxz
push
in
push
push
dec
push
adc
sub
and
xchg
gs
or
push
xchg
movsl
mov
inc
jo
xchg
push
cmpsl
add
sub
pusha
push
fsubs
das
inc
or
jmp
cmp
sbb
imul
adc
sbb
pmulhuw
and
pushl
lret
mov
test
gs
ja
sbb
push
push
filds
test
dec
call
les
push
fsubrs
shl
mov
cs
andb
aas
add
je
jmp
loopne
js
mov
mov
adc
dec
lods
add
lcall
xchg
fdivr
das
clc
mov
cmpsb
adc
je
xorb
pushf
sbb
cltd
xchg
xor
rcrl
lcall
dec
and
pop
stos
jo
movb
cld
sahf
rcrl
mov
mov
push
repnz
divl
cmp
sub
insb
pusha
jo
sbb
mov
dec
jmp
and
shrb
mov
out
lods
dec
fdivrs
jb
pop
jge
out
hlt
jne
sti
add
jmp
aaa
jns
orl
xchg
mov
dec
jne
add
push
push
lock
mov
jmp
mov
pusha
jg
adc
xchg
in
out
push
loope
mov
lcall
adc
pushf
fistps
push
dec
addr16
xchg
sbb
jno
jo
addr16
dec
addr16
cmp
incl
push
and
adc
into
xchg
pop
pop
sbb
pop
mov
loope
sub
mov
jg
jmp
nopl
out
pop
adc
sub
push
mov
inc
sub
icebp
pop
hlt
pop
cmc
shlb
xor
dec
adcl
jnp
icebp
xchg
push
hlt
decl
mov
mov
mov
out
addr16
sbb
popf
push
push
in
ds
jg
and
call
mov
add
bound
lods
mov
jbe
inc
xor
test
xor
jecxz
lahf
cmp
and
cmc
mov
pushf
mov
dec
nop
in
pushf
fdivr
jae
incl
movsb
ret
xor
aad
xchg
adc
aaa
sub
test
cmp
dec
mov
jle
int3
pop
aaa
dec
cmp
xchg
cmc
jmp
inc
push
loop
dec
mov
in
test
sbb
test
repnz
mul
fisubl
jmp
xor
push
inc
mov
xchg
clc
mov
mov
mov
xchg
test
xor
pop
cltd
shrl
insb
negl
movd
dec
lcall
enter
or
jmp
lret
sbb
mov
aaa
sbb
fcomip
decl
outsb
add
pop
imul
decb
addb
decl
ljmp
cmpsb
inc
aad
cmp
pop
and
jmp
inc
cmp
cmpsl
mov
inc
push
sub
add
xor
loope
sbb
je
jno
xchg
ja
mov
decl
repz
push
jbe
rcl
jmp
notb
push
xchg
mov
loope
cld
jmp
dec
aaa
gs
jmp
jecxz
popf
in
jne
jbe
nop
aad
jl
add
arpl
clc
pushl
adc
les
push
movsb
push
cs
mov
ljmp
jmp
jbe
sub
sbb
jp
cmp
ficomps
sbb
call
pusha
mov
jmp
add
clc
aas
movsl
xor
jb
aam
sar
outsl
ljmp
add
push
sub
mov
insl
push
mov
and
arpl
loopne
call
enter
and
inc
mov
jmp
pop
inc
js
inc
call
ja
xlat
jmp
sub
pop
int
outsb
cmc
push
sbb
xor
mov
jl
or
js
andb
pushl
cld
jmp
cmp
add
enter
fnstcw
hlt
dec
add
pushl
std
call
bound
pop
xor
cmp
push
xchg
sahf
lea
dec
sbb
ret
dec
sti
add
pop
xchg
std
negb
dec
and
jo
jmp
and
imul
xchg
orb
movq
add
xchg
popa
dec
and
call
clc
mov
sub
push
lock
shl
bound
push
ss
data16
decl
sti
leave
js
jmp
push
fldcw
out
cwtl
xchg
scas
mov
sar
incl
stc
dec
dec
cmpsb
push
or
xchg
insb
out
cmp
fwait
dec
scas
push
test
push
mov
call
mov
lret
pop
pushf
loop
jecxz
js
out
pop
jnp
out
sub
xchg
gs
cmpsl
lahf
add
ss
jb
sbb
ret
cwtl
inc
aaa
das
dec
push
jmp
out
gs
ret
leave
and
push
sbb
xchg
and
js
jecxz
mov
mov
ja
icebp
data16
pop
xchg
stos
inc
imul
pop
add
call
pop
xor
dec
mov
xchg
out
or
mov
out
inc
sahf
aas
mov
push
mov
rcrb
rol
cld
movsb
sub
fucomp
pushl
insb
jnp
and
cmpsl
dec
add
mov
fincstp
fnstcw
adc
mov
jo
xor
push
and
in
mov
cs
dec
pop
cmp
loop
jge
outsl
adc
jle
jbe
cs
lcall
loop
cld
add
mov
popf
inc
or
and
daa
repz
jae
out
xor
pushl
push
mov
adc
dec
fnstenv
iret
cmp
shlb
mov
mov
out
das
push
push
into
mov
xor
xor
jo
ffreep
in
lds
sbb
mov
fnsave
lcall
xchg
pop
or
notb
jp
sar
insb
test
addr16
jne
dec
bound
call
test
test
add
sahf
and
sbb
jg
ljmp
push
in
stos
in
push
add
or
dec
jecxz
pop
push
mov
incl
test
cwtl
mov
or
sbb
outsl
jl
std
xchg
sub
xor
ja
into
mov
fisttpl
push
fs
in
lea
pop
repnz
in
fnstcw
dec
xchg
fcmovnb
xor
xor
dec
loop
sub
cmpl
sub
call
in
aaa
or
dec
outsl
dec
mov
xchg
cmpsb
addl
bound
push
and
sub
insl
pusha
inc
pop
xor
push
mov
incl
fsts
sbb
rcl
cmp
mov
adc
jb
cmc
push
mov
pushl
jo
sbb
cmpsl
jo
sub
out
xchg
cmp
aad
mov
add
inc
loopne
jns
cmp
pop
sub
cmp
dec
add
xchg
jo
lret
call
sbb
int3
mov
mov
aam
or
lahf
decb
xor
incl
cmc
cmp
loope
les
sbb
repz
test
sub
sub
daa
cli
repnz
fdivrl
ds
ret
mov
addr16
ljmp
das
lcall
mov
xor
arpl
shrl
mov
js
shll
jne
repz
pushf
cmpl
jle
ljmp
add
sub
pop
out
ficomps
clc
add
ret
push
roll
pop
icebp
call
std
daa
popf
and
dec
xchg
mov
sahf
cwtl
adc
fldl
mov
xchg
mov
pushl
and
imul
sbb
fisubl
test
xchg
je
inc
iret
es
push
push
int3
inc
mov
push
sub
out
xor
xor
popf
hlt
sahf
iret
push
aaa
or
cwtl
call
push
pop
pop
mov
js
pop
adc
lea
jecxz
inc
sbbb
rorl
cmp
int3
xor
cmp
push
mov
mov
mov
sub
stc
pop
aaa
cld
sti
cltd
movsl
call
inc
xor
jb
adc
mov
jg
incl
cmp
mov
shl
rcll
sahf
cmp
gs
xchg
pushl
xchg
jae
arpl
or
sbb
cli
sub
lcall
inc
movsl
sub
cmp
call
cmp
insl
jmp
ret
in
xor
jmp
subb
lods
push
sbb
sbb
inc
int
fisubrs
cmp
stc
push
aas
adc
push
inc
lea
sbb
jge
cmp
adc
incl
ds
aad
in
sub
and
repnz
or
ja
in
ret
icebp
adc
inc
jl
test
aam
jno
jp
cmpb
popa
mov
push
shll
ljmp
xchg
sahf
xchg
sub
adc
mov
or
jno
and
add
in
xchg
pop
mov
incl
mov
loope
cli
sbb
stc
add
cld
pop
jmp
lock
incl
arpl
das
push
adc
jecxz
push
jnp,pn
pushl
dec
fidivs
mov
mov
out
push
popa
sub
xor
dec
push
sbb
xchg
pusha
mov
hlt
rolb
call
jmp
pop
cltd
fwait
lea
or
jle
rorb
sbb
add
jo
jecxz
imul
or
les
aaa
push
je,pt
lcall
push
mov
pop
int
fcomps
jp
mov
adc
ret
ljmp
pop
std
out
xchg
sub
pushf
frstor
ds
shlb
sbb
dec
cld
pushl
cld
xchg
hlt
sbb
fwait
inc
aam
pop
adcb
jbe
jmp
js
adc
outsl
scas
cmpsb
adc
cld
mov
aas
dec
cmp
repnz
jle
out
sarb
mov
push
xorl
push
repnz
dec
and
or
mov
decl
out
and
adc
pop
outsl
xchg
push
fmul
mov
xor
ljmp
dec
lret
inc
xchg
and
mov
scas
jp
cmp
xchg
sbb
ret
dec
pusha
jecxz
call
movsl
iret
std
or
das
dec
into
rclb
bound
push
es
cld
cmpsl
mov
cmpsb
addr16
lahf
jno
cltd
out
mov
and
jle
xchg
mov
jl
dec
push
pop
dec
lcall
adc
loope
sar
sub
pop
rcr
inc
insb
mov
ljmp
dec
sub
call
push
mov
movsl
ja
shlb
push
jno
mov
pop
repz
ljmp
popf
in
stc
add
cmp
pop
insb
int3
mov
stc
stc
insl
dec
call
mov
xor
push
pop
mov
int3
add
outsl
xor
mov
dec
data16
ss
xor
pop
sbb
jp
bound
jle
jg
das
jp
clc
subb
pop
out
decl
jmp
mov
leave
dec
jge
popa
mov
lcall
push
lds
ror
sub
mov
decl
insb
lret
push
pop
push
cmc
test
and
cmp
jmp
stos
sbb
add
cltd
in
enter
fs
leave
mov
pushl
push
mov
xchg
pop
inc
mov
orl
fists
ss
mov
adc
stos
push
xor
les
and
daa
inc
mov
jmp
adc
je
push
test
mov
call
mov
jmp
cmp
mov
cmp
fs
xchg
shr
fdivl
xor
testb
rorl
incl
xchg
test
inc
es
es
out
dec
mov
push
loope
repnz
push
push
shrb
jmp
xchg
sub
repz
push
push
push
sub
fsubs
dec
cmpsl
xor
cli
mov
js
cmp
js
and
jg
gs
jo
clc
xor
xchg
pop
xor
stos
adc
gs
sbb
into
xor
arpl
out
call
cmp
add
sub
push
push
inc
decl
push
xor
movsb
andl
cmp
repnz
insl
jno
xor
mov
mov
jmp
lods
xchg
test
fbstp
lds
nop
lds
sti
or
or
pushl
ficoml
ret
daa
sbb
cmp
arpl
jmp
scas
daa
xchg
xlat
arpl
lds
jb
mov
xor
insl
xchg
enter
cltd
popa
cs
jnp
jle
jno
ds
fs
jbe
jmp
dec
mov
push
jo
fld
adc
sub
add
cmp
mov
rcll
jnp
mov
and
cmp
iret
iret
popf
movsl
mov
cmpb
fsubl
xchg
mov
inc
fs
in
jns
cmc
and
mov
nop
pushl
popa
repz
jmp
mov
ret
inc
mov
cmp
decl
incb
push
ret
movb
shrb
push
add
bound
incl
xor
push
cmc
loopne
hlt
mov
sbb
or
and
fdivl
add
push
jg
lret
push
scas
inc
andl
les
incl
js
out
cmp
loopne
mov
ja
jecxz
mov
adc
push
inc
call
stos
insb
repz
push
clc
push
mov
cmpsl
adc
addr16
jbe
push
test
jmp
cli
sbb
jno
mov
adc
lods
push
int
test
mov
mov
stos
outsl
incl
sub
lock
adc
xchg
cltd
cltd
icebp
loopne
add
jae
adc
push
stc
pop
cld
call
cmc
sbb
repz
outsl
test
adc
js
sbbb
xor
fcomip
ljmp
out
rcrl
iret
adc
pushf
insl
ficoml
pop
fbld
xchg
and
incl
xchg
jne
push
rcl
sarl
xchg
mov
loope
dec
aaa
fs
pop
subl
das
clc
mov
data16
lret
add
pop
les
jl
mov
mov
pop
xchg
jno
pop
pop
mov
mov
scas
sbbb
xchg
adc
jb
call
fwait
sahf
or
mov
jae
push
fldt
into
jmp
stos
icebp
and
mov
pusha
mov
rcl
mov
repz
test
pop
or
scas
lea
jo
stos
jae
decl
call
imul
ja
or
repz
push
outsb
xor
cmp
inc
fisttpll
adc
test
lcall
data16
imul
fs
mov
and
xlat
pop
cmp
cmp
push
adc
mov
adc
js
in
xchg
ljmp
in
dec
fmul
jle
cld
add
or
jge
in
addr16
imulb
ljmp
dec
jae
xor
ss
sbb
mov
and
decl
mov
fdiv
jnp
mov
repnz
pop
jmp
mov
decl
jecxz
dec
push
push
lcall
lahf
mov
enter
mov
cmp
iret
cwtl
inc
dec
cmpsl
in
jne
fwait
jle
push
adc
jge
xlat
dec
idiv
inc
and
pushl
arpl
adc
xor
loop
int
mov
les
pushf
sub
dec
mov
cmp
pop
jmp
mov
aaa
lock
arpl
xchg
add
sub
insb
testb
jl
adc
cvtpi2ps
mov
call
xchg
cmp
inc
rolb
sub
mov
addl
pop
or
cwtl
inc
mov
decl
shrb
fwait
push
loop
xchg
aam
jle
fcomip
lods
fildl
clc
sti
inc
aad
mov
imul
stos
clc
std
sbb
and
test
xor
sbb
jmp
push
sub
dec
xchg
call
sti
or
jb
in
push
and
jb
jbe
jg
sub
gs
mov
xor
adc
jo
cmp
cmpsb
movsb
pop
jo
sub
jmp
xchg
hlt
enter
in
daa
sub
popf
shrl
inc
mov
jne
adc
dec
clc
fwait
or
incl
jle
mov
sub
lahf
sahf
es
inc
and
mov
adc
push
jno
add
push
jg
vpmullw
xchg
sub
pushl
scas
jne
add
add
cmp
call
push
jb
mov
sub
inc
nop
cmp
arpl
ljmp
icebp
rcrl
daa
and
pop
divl
stc
ss
add
and
xor
mov
lcall
lods
iret
roll
mov
dec
fldt
mov
imull
push
jp
bound
and
push
or
jg
push
xor
outsb
sti
mov
fmuls
mov
or
push
cmp
mov
aad
xchg
or
lcall
and
mov
iret
jns
ljmp
cmp
inc
insl
movsl
icebp
sub
frstor
fs
repz
inc
add
outsb
movsb
xor
pop
clc
pop
arpl
addr16
add
ficoms
mov
sahf
xlat
inc
call
out
mov
test
fwait
xchg
pop
mov
mov
call
loope
movsb
xor
test
mov
sub
fldl2e
rcrb
adc
sub
lcall
fisttpll
repz
xchg
dec
mov
inc
xchg
adc
mov
ljmp
ds
sbb
loop
adc
mov
pop
ljmp
je
cld
pop
shrb
mov
inc
sti
adc
fistpl
and
cld
push
frstor
outsl
call
xchg
pop
outsb
sub
cld
adc
insb
icebp
xchg
pop
adc
inc
xchg
or
cmp
jge
and
ja
les
or
out
ja
arpl
jb
push
inc
adcb
ja
sbb
mov
cmpsb
adc
lcall
jg
shll
mov
dec
ja
das
loopne
mov
decl
aam
lods
ss
lahf
ret
mov
mov
call
stc
dec
adc
call
xchg
xchg
cmp
ja
jmp
in
xorl
into
scas
das
cli
jmp
pusha
mov
cmp
loop
xchg
aad
push
push
pushl
and
add
dec
ret
add
das
sbb
fs
push
inc
add
cmpsl
loopne
les
mov
mov
outsl
xor
lock
cmp
inc
imul
aad
testl
lock
fcomps
mov
pop
out
cmp
jmp
jns
pop
cltd
ja
pop
aam
fcompl
out
mov
sub
sbb
cmp
or
jl
decl
lock
dec
enter
scas
fnstenv
adc
orl
jmp
sbb
inc
pop
push
lods
push
mov
xor
loopne
adc
push
pusha
dec
xchg
push
call
dec
decl
xchg
add
cmpb
and
shrl
call
mov
popa
mov
lcall
sub
rorl
and
lds
pop
xchg
test
adc
fsts
fmuls
imul
pushl
jbe
es
aad
cmc
mov
lret
loope
lret
pop
fld
ljmp
lcall
xor
pop
ljmp
mov
xchg
mov
pop
mov
fisttpl
data16
jge
mov
xchg
adc
andb
lcall
imul
dec
stc
andb
xlat
insb
jae
dec
xchg
mov
push
cwtl
loop
sbbb
jg
call
add
jae
mov
loopne
mov
pusha
call
jle
mov
dec
dec
or
jo
sbb
fdivrl
outsl
test
cwtl
jl
imul
clc
jns
ret
and
mov
dec
jnp
xor
xlat
call
xor
les
inc
adc
xchg
dec
jmp
cmc
pop
test
ja
jg
incl
xchg
int
roll
addl
adc
inc
cli
inc
stos
in
int
out
out
js
ljmp
sbb
lsl
pop
mov
dec
jnp
aam
ljmp
pminsw
and
jge
and
cmp
mov
jmp
shr
pushf
adc
call
jo
and
mov
jmp
add
jp
pop
pop
iret
inc
daa
jb
mov
lcall
mov
add
inc
into
fwait
inc
aam
in
test
popa
sbb
sbb
cmovne
ljmp
sarl
cltd
jae
xchg
popa
or
jecxz
out
test
iret
xchg
pushl
pop
je
sub
mov
sub
shlb
mov
lock
sbb
testb
cmp
scas
aaa
push
sub
xor
daa
loopne
sbb
ret
aam
cli
call
scas
in
mov
xor
push
xchg
adc
mov
icebp
inc
pushf
lret
sbb
mov
sub
xorb
adc
inc
sub
fs
jmp
push
mov
sub
lahf
fstpl
pop
sahf
outsb
xor
je
test
pop
jne
dec
and
fs
std
dec
xchg
iret
xor
mov
sub
je
ja
loope
push
mov
jmp
cmp
sbb
adc
jo
mov
cmc
ret
push
mov
outsl
inc
and
in
xor
pushl
inc
iret
xchg
stos
cltd
imul
aas
sub
scas
popf
pop
paddq
push
jnp
aam
sbb
aas
xor
stc
mov
roll
and
cli
test
decl
and
icebp
gs
mov
cmpsb
pop
aam
ljmp
xchg
cmpsb
sbb
lods
fdivrl
inc
shlb
pusha
popf
pop
in
js
sub
ja
ljmp
fimull
mov
test
lret
inc
sbb
xchg
dec
js
jecxz
mov
pusha
mov
sub
mov
or
mov
sarl
dec
ss
cmp
imul
mov
pop
es
push
mov
xchg
data16
pop
leave
movsl
cmc
sub
add
push
mov
incl
push
in
lods
sub
inc
and
fwait
jnp
lcall
bound
aad
pop
pop
std
in
loopne
lcall
cltd
dec
jne
addl
adc
popa
mov
push
stos
xchg
dec
stc
stos
lahf
ficoml
sahf
push
dec
roll
lds
xchg
xor
test
add
ficoml
rcl
sysret
ds
aas
incb
sub
mov
pop
out
jg
dec
enter
push
imul
sub
std
rcrl
call
sub
jb
dec
pause
or
outsl
adc
iret
sti
lret
loop
clc
pop
out
cmp
sti
lea
cmp
loop
sub
push
and
add
shl
dec
jmp
xor
movsb
xor
push
sbb
inc
mov
pop
sahf
adc
jg
call
fnsave
jg
jnp
add
sbb
inc
fwait
jae
int
fisttpl
or
testb
xchg
dec
imul
stos
scas
dec
outsb
cwtl
cld
dec
push
pusha
out
push
mov
mov
jg
pop
popa
cmp
sbb
movsb
cmp
xchg
push
sbb
loop
cmovbe
add
mov
jg
loopne
clc
in
push
lcall
and
jge
test
mov
data16
cwtl
pusha
mov
jle
fbstp
lahf
js
pop
divl
push
out
mov
lods
jg
inc
loope
ret
or
cmpsl
and
mov
testb
cmp
sbb
decl
or
and
cwtl
popa
mov
ss
jno
outsb
leave
cld
sub
mov
inc
pop
aam
lret
test
jg
pop
loope
lods
pop
inc
mov
incl
pushf
pop
sbb
js
outsl
xor
cwtl
jmp
out
jp
call
sbb
aad
mov
stc
pop
insb
dec
jbe
or
repnz
sub
stos
hlt
add
sub
jg
xchg
xor
aam
push
jno
mov
mov
sbb
sbb
inc
repz
ljmp
add
rclb
hlt
cld
xchg
in
rcr
dec
testl
jns
sub
lods
jno
cmp
jmp
rcrl
cs
inc
cvtpi2ps
add
pop
stc
arpl
pushl
movl
lods
fnstcw
and
pop
mov
stos
and
xchg
das
sar
test
push
cmc
pop
push
movsl
movsl
lods
shlb
inc
jmp
incl
or
pusha
int
adc
mov
push
cmc
pop
fs
in
sub
outsl
xchg
pushf
pusha
mov
sahf
and
fcomps
imul
add
dec
test
loopne
dec
push
mov
or
out
clc
repnz
jecxz
int3
push
movsb
lahf
or
insb
rcrl
sub
dec
out
decl
mov
add
jns
aad
nop
test
in
fwait
adc
xor
ljmp
adc
mov
lcall
sahf
xor
xorb
xor
decl
test
or
mov
inc
sub
xchg
push
imul
cld
or
cmpb
aad
jl
jg
call
addr16
insb
dec
sbb
in
outsb
inc
or
jnp
dec
mov
sti
and
cs
call
movsb
gs
cli
cmovle
leave
push
imul
jmp
add
call
pop
xchg
adc
insl
dec
popf
rcll
ljmp
jb
lcall
test
xor
outsb
xor
cmp
fcmovnb
test
in
pop
shll
jmp
sub
shll
sbb
inc
jb
ds
xorb
xchg
xchg
mov
pop
adc
decl
test
in
mov
es
xor
aam
sti
aaa
lcall
fcoms
jns
push
nop
pop
pushf
cmp
stos
push
push
sub
jg
push
pushf
das
mov
data16
add
test
dec
addb
pop
adc
inc
jne
pop
bound
fs
insl
xor
int
subb
gs
jno
sti
and
or
scas
ret
mov
call
jb,pt
dec
pop
dec
fistpl
mov
mov
jno
int3
mov
jbe
insb
cmp
mov
push
adc
pop
pop
out
sbb
pop
filds
dec
or
add
fs
ljmp
rcrb
pop
mov
add
xor
adc
mov
pushl
std
push
jl
cld
clc
cld
dec
xlat
sbb
or
mov
nop
cmp
ljmp
pop
gs
iret
loop
xchg
scas
jge
repnz
mov
cltd
movsl
inc
scas
out
lcall
sub
andb
subl
dec
pop
dec
dec
sti
shl
mov
mov
lock
in
push
inc
fs
pop
jb
sar
sub
mov
loopne
and
dec
xor
jmp
pop
cmp
aaa
xchg
sub
out
loopne
adcl
nop
sub
pop
pop
fyl2x
daa
mov
lcall
jmp
ss
jb
push
xor
adc
nop
pop
dec
js
shll
jmp
fs
push
inc
cwtl
or
mov
rorl
adc
aaa
aad
dec
insl
fcomip
or
sub
mov
sahf
add
and
das
decl
xchg
ljmp
ljmp
cmp
ss
repnz
into
cld
push
ljmp
sub
and
push
and
rcrb
loope
icebp
lret
sbb
js
rorb
fnsave
mov
aas
pusha
cwtl
movsb
dec
jle
fst
fsts
fsubrs
ljmp
rcrb
es
inc
mov
xchg
adcl
inc
and
incl
in
lods
cmp
mov
xchg
adc
popa
repz
push
sbb
insl
jnp
inc
push
cs
call
mov
inc
push
std
imul
mov
outsl
cmp
adc
call
les
int
xlat
imul
pusha
aas
jo
cmp
dec
nop
sahf
xlat
or
arpl
mov
pop
xor
pushf
and
clc
inc
inc
int
mov
ja
sbb
punpckhwd
in
out
loop
test
mov
push
jmp
mov
lods
add
sub
pusha
or
int
cli
scas
pop
cmp
movb
in
aad
incb
pop
and
add
mov
xchg
lcall
outsb
add
and
je
jae
pop
rcll
cmp
fcoms
cmp
outsb
popa
pusha
ss
enter
orl
mov
xlat
push
ja
loope
imul
es
sarl
stc
xchg
sar
incl
cwtl
sbb
sbb
push
push
pop
loopne
dec
mov
push
arpl
lods
out
jbe
push
push
je
or
add
sahf
stos
out
inc
or
int
cmpsl
jge
test
xor
jle
cmp
push
or
xor
push
mov
loope
ljmp
popa
dec
jo
loop
sbb
out
xor
mov
divb
and
outsl
dec
mov
iret
jne
and
inc
test
mov
inc
push
add
xchg
and
icebp
lods
cli
mov
addr16
xchg
sbb
push
ds
jb
add
add
movsl
cltd
outsb
mov
sti
adc
add
sti
repz
movsb
mov
ret
cltd
xchg
and
and
iret
sbbl
lods
rol
xchg
mov
ljmp
ja
stos
das
mov
in
mov
fidivl
pop
sti
fnstcw
mov
jns
add
pushl
mov
mov
sbbb
lods
jmp
jne
ja
xchg
aaa
adc
repz
aad
adc
call
cwtl
repnz
ds
xlat
push
push
pop
sbb
stos
push
mov
js
mov
pop
loopne
hlt
push
dec
or
dec
mov
inc
xor
xor
ljmp
and
lock
enter
ljmp
dec
xchg
imul
cmp
fistl
xor
push
rorl
push
mov
ljmp
fsubrl
cwtl
in
fcmovu
dec
scas
mov
call
cmp
mov
loopne
fisubrl
inc
into
cmp
pop
ja
stos
fnstenv
xchg
adc
or
decl
inc
scas
clc
or
xor
add
in
mov
mov
sbb
mov
les
ljmp
cmp
push
push
andl
cmpsl
cld
incl
add
xchg
sbb
mov
add
sbb
push
pop
sbb
add
add
gs
add
or
xchg
ja
movsl
fdivrs
jmp
sub
and
scas
and
lock
pop
mulb
jmp
sahf
dec
mov
aaa
mov
bound
adc
sub
mov
push
popf
cmp
sti
dec
jmp
cmp
rorb
addr16
push
in
inc
mov
out
adc
jmp
ss
inc
and
popa
lcall
xchg
fidivrs
ret
ss
aad
shl
push
flds
test
jecxz
add
mov
popf
and
mov
adc
and
decl
fdivr
ds
jbe
sub
nop
int
xchg
push
loopne
or
cmc
xchg
incb
sar
push
test
jne
out
jge
xor
jo
adc
in
jmp
call
je
or
jp
in
mov
pop
mov
out
adcb
outsb
xor
jne
test
jb
incl
sbb
jne
iret
xchg
pop
shlb
jge
mov
je
xor
sbb
push
mov
add
ja
sub
ret
xchg
jl
add
mov
jle
xor
std
pop
fdivr
pushl
fidivrl
adc
cld
pop
push
mov
adc
in
add
daa
stos
push
sub
ja
fcomip
sti
cld
or
mov
fisttps
xlat
dec
mov
das
jmp
add
sahf
das
out
sub
mov
inc
mov
ss
incl
xlat
jno
aas
iret
clc
cmc
adc
inc
cli
pop
sbb
mov
and
mov
adcb
and
jmp
add
inc
sbb
or
ja
xor
cli
aas
addl
lcall
ljmp
and
lods
fwait
cld
add
mov
xchg
lcall
shr
aad
mov
pushl
int
leave
sub
aad
push
pop
cmc
add
gs
and
jmp
jecxz
int3
pop
aas
gs
fisttpll
lret
jbe
call
test
mov
xor
xlat
lcall
clc
dec
jmp
das
aaa
mov
out
mov
pop
xlat
ljmp
mov
int3
js
incl
cmp
les
incl
lock
leave
or
jne
push
xchg
leave
pop
mov
enter
ljmp
inc
mov
je
and
loop
push
outsl
cmp
dec
push
pop
in
outsl
push
mov
leave
push
sbb
call
sbb
jb
cld
mov
imulb
scas
dec
sbb
sub
call
sbb
cltd
inc
pop
cmp
int
lock
jmp
rcr
call
push
mov
fucomip
lret
push
call
and
arpl
lcall
icebp
lahf
xchg
rorl
push
mov
andb
rcr
and
xchg
push
in
add
cmp
mov
cmp
jp
push
outsb
rcl
loope
std
test
stos
lcall
cmpsl
mov
xlat
xor
sub
or
stos
or
test
lcall
dec
mov
loopne
cld
lret
or
or
add
push
je
stos
jge
les
rcrb
push
mov
push
cmp
push
clc
pop
gs
ss
ljmp
movsbl
aam
push
movb
call
jl
je
pushl
cs
mov
add
push
insb
jmp
in
xor
hlt
nop
loopne
add
jl
mov
aaa
jg
jne
sub
dec
jg
or
xchg
jne
mov
xchg
pop
dec
pop
lcall
in
jle
repnz
mov
mov
push
jae
mov
out
xor
and
sub
xor
lcall
jbe
stc
xchg
push
les
aad
add
addl
pop
pop
fsts
push
adc
lcall
inc
jbe
push
fcmovu
sbb
js
sub
xlat
adc
leave
dec
push
jl
add
ljmp
insl
and
lcall
sub
sarl
repnz
cli
fnstenv
pop
inc
enter
and
cmpsb
and
xor
sub
rcrb
and
pop
lods
ja
adc
mov
dec
les
xor
sahf
hlt
xor
xor
mov
mov
loopne
ror
bnd
sub
ja
jno,pt
inc
ljmp
bnd
add
jmp
jmp
lret
add
frstor
push
push
sbb
pop
pusha
js
inc
jb
cld
in
dec
lret
xchg
sub
mov
jl
iret
insb
in
xchg
xchg
mov
pop
out
lock
adc
lahf
sbb
fsub
fcomip
or
imul
xlat
mov
call
loope
clc
incl
sub
xchg
push
addb
or
sbb
fidivrs
adc
mov
mov
xor
adc
pop
dec
stos
pusha
out
mov
dec
xor
jge
push
mov
push
iret
cmp
leave
shr
dec
sub
xor
xchg
mov
mov
incl
sub
insb
aad
xor
adc
popf
imul
fmuls
dec
mov
xchg
mov
sbbl
adc
gs
loop
imul
incl
dec
orl
xchg
add
pop
stos
out
mov
lahf
ret
in
mov
lret
stos
pop
out
dec
adc
and
add
cmp
cmpsb
mov
fsub
or
xchg
inc
jl
mov
test
lcall
inc
in
loope
cmp
jns
outsb
int
cmp
negb
cmpsl
ja
fwait
cltd
inc
jg
dec
and
jne
repnz
dec
add
loope
mov
inc
xor
es
lcall
pushf
movsl
stc
stos
mov
add
gs
dec
or
dec
sbb
icebp
inc
and
testb
decl
or
rorl
sbb
loop
loop
adc
stos
std
es
or
and
fnsave
mov
adc
cmpsl
fldt
popl
mov
push
loope
dec
test
pop
inc
lret
loope
xor
mov
mov
lods
jne
adc
bswap
imul
insb
int
fisttps
jb
les
jne
pop
leave
in
jmp
cmpsb
lea
mov
push
lock
adc
mov
push
pop
orb
cmp
test
or
push
xor
push
jno
fisubrl
imul
les
push
aam
push
add
call
inc
xchg
jecxz
jno
or
imul
pop
test
pusha
push
fimull
aad
call
lret
loop
push
xchg
pop
add
push
jmp
lea
jge
ljmp
cmp
test
jp
cld
gs
bound
in
stos
pop
int3
jbe
imul
pop
cwtl
dec
lods
or
fcompl
enter
adc
scas
xchg
cltd
cltd
pushl
jg
mov
mov
pop
push
mov
mov
ljmp
imul
push
mov
testb
sbb
fprem
push
inc
mov
clc
bound
jb
mov
hlt
cmc
pop
sub
pop
add
ljmp
test
cs
scas
out
movsb
sti
leave
int
pusha
les
nop
push
jmp
xchg
mov
sub
jbe
call
mov
jl
clc
and
inc
cmp
mov
inc
cltd
xchg
cs
add
fld
clc
dec
pop
aam
mov
jge
hlt
call
or
mov
mov
and
mov
push
leave
pop
lcall
fists
cmp
pcmpeqw
mov
jmp
adc
inc
push
out
mov
incb
call
mov
ret
and
add
xor
xchg
and
push
loope
pushl
call
mov
jge
jo
xor
lea
shr
mov
in
call
fldenv
shl
rol
inc
arpl
repz
jb
cld
fcmovu
sbb
ss
iret
cmp
decl
sarb
adcb
push
repnz
sub
jge
je
pop
cmc
decl
aaa
dec
jae
rclb
ljmp
xor
test
push
outsb
pop
mov
loopne
ljmp
jg
xchg
fstpl
and
mov
iret
and
jl
or
stc
pop
jb
repnz
decl
out
push
and
inc
pop
enter
push
inc
mov
sub
out
loop
js
call
dec
mov
popf
mov
addr16
or
fcoml
cmp
add
lds
cld
sub
jmp
test
mov
loopne
pop
pop
mov
cwtl
cwtl
ljmp
decb
adc
outsl
decl
mov
and
in
mov
int3
outsl
mov
dec
lods
insb
dec
adc
lret
rdseed
cmp
jns
mov
out
aam
jl
js
xor
jge
cmpsl
sub
rorb
push
maskmovq
negl
ljmp
andl
mov
imul
orb
pop
lea
imul
add
lcall
dec
sbb
lds
aas
xor
loopne
add
mov
mov
jge
ret
jl
pushl
sbb
inc
xor
xchg
mov
cmp
ret
loop
xchg
jnp
mov
dec
sub
sbb
sub
ljmp
into
fst
xor
mov
push
xchg
orl
pop
adcl
inc
imul
xchg
mov
cs
xchg
in
repnz
sbb
sub
outsb
add
fs
in
mov
jb
pop
outsl
add
lds
push
dec
ret
push
cmp
call
data16
jno
mov
fidivs
out
mov
xchg
xor
xlat
sti
test
mov
js
clc
mov
inc
push
mov
mov
mov
aad
pop
pop
out
mov
arpl
das
pop
shll
cmp
xchg
sub
adc
mov
cmp
idivb
sub
mov
cmp
adc
adc
mov
test
add
or
imul
mov
mov
pushf
arpl
jmp
and
pushl
mov
pop
inc
filds
and
cmp
ds
add
sub
jo
scas
inc
lds
stc
test
js
dec
mov
pushf
push
or
mov
pop
addb
rolb
incl
dec
push
xchg
jg
fbstp
pop
insb
jb
je
out
jp
sti
jae
jmp
or
sar
dec
push
cmpsl
add
aam
xchg
jnp
xor
aaa
dec
dec
mov
jle
and
rolb
call
mov
test
in
or
mov
stos
push
xor
adc
jg
jge
sbb
neg
mov
daa
stos
jae
ja
aas
leave
mov
lock
sar
out
push
mov
jae
xchg
dec
rcl
dec
jae
push
out
inc
aam
lcall
fstp
push
mov
inc
lcall
add
xchg
adc
in
adc
incl
fsqrt
push
rcll
je
jle
js
mov
movsl
divb
in
bts
mov
fmuls
rcrb
test
incb
cli
push
jge
mov
cwtl
and
scas
aas
stc
push
cs
fldt
push
test
mov
inc
fstps
sub
idivl
dec
push
popa
mov
int3
push
sbb
xchg
add
and
ret
dec
pop
ficomps
xchg
pop
insl
pop
loop
inc
sub
jg
rcll
lret
ja
decb
ret
popa
into
add
jmp
and
jmp
test
or
lret
in
add
loop
push
push
aam
incl
pop
call
insb
xorl
and
xchg
xchg
and
mov
mov
pop
loopne
jmp
inc
inc
mov
ss
jns
shrb
mov
stc
jo
cmc
call
dec
sub
cli
mov
push
cwtl
push
popf
mov
fildll
cld
pop
and
ja
sbb
insb
sarb
test
out
mov
hlt
out
inc
xor
mov
in
inc
xor
rcll
mov
sub
inc
inc
push
pop
jle
xor
cs
inc
adcl
sbb
cmp
add
jmp
rol
jnp
push
adc
loop
dec
lcall
cld
mov
ljmp
mov
test
in
jb
cmp
outsl
cmp
outsl
cmp
out
xchg
gs
push
sub
add
dec
fdivl
mov
xchg
loope
jae
incl
out
lods
or
test
daa
jge
pusha
fistpl
cwtl
pop
add
lcall
pop
jmp
cwtl
adc
cmpsl
inc
jns
add
ret
and
mov
pushl
out
pop
loope
icebp
push
cmpsb
sub
cmpsl
xchg
xchg
cltd
push
and
mov
dec
sbb
mov
lcall
or
jb
xchg
cld
push
movsb
push
jae
jae
outsb
loope
sub
xor
call
xchg
xchg
sbb
sbb
outsl
insl
sub
rorl
mull
mov
mov
xor
jmp
sub
xchg
dec
jno
jl
mov
sbb
in
and
insl
inc
das
pop
paddw
outsl
cli
push
xchg
clc
pushf
les
mov
idivl
xchg
mov
or
ljmp
sbb
pop
jecxz
adc
jne
jl
fistpl
repnz
adc
mov
data16
cmp
ljmp
adc
push
sbb
jns
fildll
daa
les
aam
mov
lcall
and
fdivrl
lcall
leave
in
sbb
dec
lahf
decb
fcoms
jo
inc
add
incl
outsb
mov
int
insl
mov
push
pop
lea
pop
pop
loop
leave
mov
adc
les
test
add
sahf
and
xchg
lods
les
decl
repz
jle
cmp
rcrl
popf
in
ljmp
jo
inc
sub
mulb
ljmp
lds
xchg
shr
mov
repnz
jns
fimuls
cld
sbb
xchg
nop
test
sbb
test
adc
imul
lods
or
jae
int3
into
inc
and
fwait
mov
movsl
adcl
js
fdivrp
push
lock
push
adcb
push
decl
test
sti
rcrl
mov
stc
decl
mov
out
lock
jge
xchg
push
popf
outsl
icebp
push
pop
or
jne
popa
cmc
mov
ds
out
xchg
mov
dec
fcomip
inc
mov
ljmp
into
pop
pop
imul
mov
and
decl
sbb
mov
mov
imul
out
dec
lcall
das
movsl
cmp
aaa
cld
cmp
das
rcl
call
xchg
push
xchg
push
imulb
fbld
daa
in
adc
lret
pusha
sub
arpl
jmp
mov
repnz
pusha
pop
out
clc
je
mov
cmc
pop
mov
std
jo
jge
sar
cld
lods
adc
jmp
mov
sete
repnz
pushf
push
dec
das
sbb
ret
sub
sbb
push
fsubp
decl
push
ljmp
in
test
and
sbbb
call
decl
mov
or
pop
sahf
xor
inc
fldl
insl
aad
xchg
cmp
les
lcall
mov
cwtl
cmc
insl
pop
mov
mov
out
ljmp
fdivrs
cs
insl
jbe
out
arpl
movsl
cmp
ds
inc
sbb
mov
stos
js
jne
int
mov
sbb
pop
dec
sub
call
aad
cmc
and
mov
jl
push
cwtl
pop
in
sub
pusha
outsb
scas
cs
mov
incl
xchg
or
std
insl
jo
fsubs
and
pusha
sarl
repz
mov
shl
decl
ljmp
inc
div
adc
sbb
jl
lock
sub
fsubrs
scas
call
and
mov
mov
sbb
into
cmp
lcall
decb
std
repnz
mov
sbb
mov
fiaddl
cmp
mov
stc
pop
stos
mov
cmp
mov
mov
daa
or
sbb
cmp
or
xchg
outsl
inc
imul
push
or
mov
lret
jbe
mov
fnsave
pop
stc
rol
mov
mov
cmpsb
pop
pop
sti
pop
or
rcl
subb
sbb
lcall
fimull
fnstcw
xchg
adc
jno
cltd
aas
fistps
mov
enter
push
mov
push
icebp
lock
bound
mov
fisttps
loope
scas
inc
mov
fisubs
pop
or
push
push
lcall
jns
aaa
dec
mov
jns
dec
jge
adc
sbb
or
push
jb
sarb
pop
ljmp
mov
das
sub
flds
clc
imul
lret
jmp
int
push
sub
or
roll
pop
jmp
mov
stos
int
fsts
aaa
mov
or
loop
xchg
and
cmp
cld
aam
clc
jge
push
repz
xchg
jp
icebp
mov
pop
out
fists
mov
push
jg
in
xchg
sub
cmp
aad
inc
lcall
int3
rcr
sbb
repnz
ljmp
clc
decl
push
movsl
push
mov
andb
mov
xchg
or
aam
decl
push
adc
mov
cmp
dec
fwait
or
xchg
repz
gs
push
stc
jbe
xchg
call
or
loop
jl
shl
push
in
out
cmp
aad
push
pop
adc
cmp
jb
outsb
xchg
pushl
sbb
lea
lock
std
sbb
sub
xor
pushf
sbb
pop
sbb
incl
scas
ja
cmpsb
insl
cmp
rolb
insb
loop
sbb
pushl
fcomi
loop
mov
push
das
mov
cmp
fdiv
gs
out
push
pushl
push
jmp
hlt
movsl
dec
out
push
xor
popa
xchg
and
data16
jg
scas
outsb
xchg
add
iret
bound
movsb
and
clc
jmp
in
test
mov
aam
push
jp
mov
fwait
decl
out
add
out
fnsave
xchg
jb
fs
aaa
or
je
push
pushf
dec
mov
push
scas
aas
test
mov
and
dec
clc
gs
dec
adc
pop
pop
test
ds
pop
call
sub
or
in
xor
jns
scas
push
adc
mov
pop
jg
mov
sub
test
sahf
lock
pop
mov
jne
movsl
lcall
sar
ret
xor
dec
push
and
sar
cmpsl
adc
insb
std
mov
inc
rcr
test
aas
lcall
call
fnstenv
or
mov
jb
shlb
incl
pusha
pop
lret
insb
sbb
add
scas
addr16
xchg
adc
outsl
jp
or
lock
dec
mov
ljmp
outsb
jmp
test
into
in
test
int
dec
and
int
fldenv
out
push
adc
sahf
adc
xchg
outsl
movsb
xchg
mov
push
mov
sbb
decl
scas
sbb
es
cli
mov
mov
sahf
enter
jmp
xor
lcall
fnstsw
xor
jmp
pop
rorb
pop
add
call
ljmp
pushl
xchg
or
inc
stc
push
or
dec
push
mov
jne
add
xlat
incl
stos
rcl
inc
lahf
shrl
pushf
jg
xor
jnp
call
push
dec
or
mov
stos
inc
aaa
loope
sarb
dec
pop
das
cmpsl
pusha
inc
push
leave
pop
out
decl
inc
cmp
cmpsl
into
lea
pop
stc
sub
mov
push
lock
add
inc
sbb
adc
bound
fisubl
cli
movsb
or
jp
movsl
gs
jmp
loopne
ljmp
xchg
xchg
pop
adc
inc
xchg
xchg
push
mov
jo
mov
stc
sub
dec
add
mov
mov
call
inc
out
push
pop
cmpl
divl
lahf
dec
mov
adc
mov
xchg
fiaddl
clc
adc
jge
or
ret
mov
hlt
cmpsb
iret
and
push
sbb
lds
push
call
cmp
pop
lcall
mull
xor
pop
mov
mov
pushl
mov
cmp
mov
jecxz
push
ret
xchg
scas
sarb
pop
scas
dec
aad
movsl
or
xlat
into
jo
inc
pop
adc
ja
jg
push
insl
jne
std
push
mov
cmpsb
js
insb
cmp
daa
add
xor
inc
xor
add
inc
xor
in
js
dec
push
popa
or
mov
adc
dec
and
push
out
and
xor
loope
sahf
mov
cmp
xor
dec
test
jmp
jbe
and
or
ret
test
int3
xlat
add
out
in
pop
scas
add
jmp
shll
in
popa
fdiv
mov
repz
jmp
pop
das
inc
daa
dec
push
mov
orl
inc
add
xchg
push
inc
cld
incl
mov
cwtl
push
sbb
dec
add
shll
loope
sbb
mov
int
pushl
jbe
xchg
xor
rcl
add
movsl
jae
imul
vmread
cmp
adc
pop
jns
cmpl
cltd
lcall
jae
incl
cmp
jp
ljmp
xor
repnz
vmaxsd
call
cld
out
loop
sbb
lock
cmp
movsl
xchg
ret
and
lcall
pop
mov
add
dec
in
or
cmp
mov
test
call
inc
std
daa
pop
mov
daa
lret
popf
fiaddl
push
pop
dec
pop
add
call
pop
mov
add
cmpsl
loope
mov
xor
test
mov
imul
mov
ret
ja
mov
les
cmpsl
fnsave
cmp
push
add
ljmp
in
mov
inc
je
sbb
cmp
int3
mov
sbb
pop
call
shlb
outsl
sahf
mov
mov
aad
loopne
mov
push
mov
mov
inc
dec
inc
fcomip
inc
add
lret
leave
ss
push
sub
add
das
jle
je
inc
fcomip
mov
es
sub
sub
xchg
jl
movl
jge
fsubs
repz
sbb
xor
push
fsts
testb
fmull
nop
cmp
stc
mov
and
sbb
int3
popa
jnp
movsb
fimull
mov
rol
cmpb
or
adc
adc
jnp,pt
inc
enter
mov
pop
jp
jns
repz
subl
clc
xor
dec
mov
mov
add
sbb
jns
mov
data16
divb
sbb
ljmp
inc
mov
enter
test
sbb
cs
imul
jl
sti
jo
dec
mov
or
or
dec
add
fidivl
popa
lcall
ret
dec
es
call
popa
bound
fwait
jae
add
push
subl
jecxz
inc
sbbl
cmp
fldenv
andb
movsb
gs
cli
adc
adc
ljmp
cli
adc
push
mov
or
sub
or
xchg
test
lcall
mov
js
push
jne
mov
mov
pop
sbb
or
push
loope
xchg
aas
add
push
movsb
lret
cmp
xor
push
loop
ds
jmp
mov
fnstcw
dec
inc
in
mov
fsubrs
cmpb
fcomps
push
dec
movsb
mov
imul
dec
push
xchg
in
pop
adc
add
adc
out
mov
inc
xchg
jbe
inc
xor
ret
addl
jmp
sub
imul
ljmp
lret
push
inc
push
repnz
add
ss
cmc
test
rorl
adc
jnp
add
xchg
push
mov
lods
or
std
pop
push
or
insb
mov
bound
pop
call
cld
incl
arpl
add
push
scas
ret
pushf
dec
jne
sub
mov
adc
aam
decl
call
mov
xor
fwait
and
in
add
shll
pushf
in
pusha
add
ds
sub
mov
ljmp
pop
fimull
and
push
les
aam
aas
inc
aad
das
cli
aas
int3
int
test
imul
mov
cmpsl
mov
pop
ljmp
pushl
ret
lahf
cli
sub
mov
fwait
xchg
repnz
vpminub
sub
jmp
cmp
das
dec
mov
out
jp,pn
mov
cmp
dec
cmp
dec
lcall
call
xchg
add
and
cmpsl
jno
jae
lahf
jne
adc
mov
xor
cltd
clc
movsb
mov
scas
clc
decl
mov
push
mov
sbb
subl
or
mov
inc
xor
outsb
sbb
xlat
insl
push
sub
outsl
inc
xchg
sub
fisubrl
dec
mov
xchg
repz
inc
into
pop
js
cltd
or
scas
fistpl
sub
data16
push
ficoms
inc
push
shr
push
or
arpl
fsubrs
jge
outsl
and
xchg
cltd
xchg
add
test
ljmp
adc
push
repnz
cwtl
and
divb
insb
and
push
pop
movsb
dec
mov
or
test
imul
or
pushl
and
push
jb
cmp
in
invd
repz
push
cmp
cld
out
jbe
push
shlb
xor
test
inc
fisttpl
ljmp
dec
hlt
jmp
fsubrl
icebp
leave
cmp
ljmp
lcall
adc
decl
cmp
mov
adc
lret
test
inc
shlb
inc
and
insb
pop
dec
pop
lea
nop
incl
and
xor
push
pop
dec
sub
mov
int
adc
or
and
push
fmul
ljmp
add
mov
mov
mov
cmp
jle
lret
lahf
repnz
enter
jmp
incl
loopne
push
rclb
xchg
xor
mov
pop
inc
ret
push
loop
call
add
loopne
fwait
push
fcomp
imul
lret
sbb
sti
mov
loope
mov
sub
and
scas
les
lea
pushf
push
ljmp
add
cmp
sar
push
mov
clc
mov
jae
fimull
ljmp
push
aas
lret
jg
push
std
mov
cmp
pop
pop
or
dec
xor
bound
or
or
push
in
fcos
jmp
cltd
mov
mov
xor
int
mov
outsl
cmp
xchg
in
xchg
jecxz
jmp
fs
aas
fwait
int3
xor
sbb
pushf
out
je
inc
jg
inc
push
ret
call
inc
jl
cmp
adc
stc
mov
mov
pushf
rcrb
jg
insb
cmp
mov
test
pop
inc
sbb
mov
mov
fidivs
sub
icebp
incl
xlat
js
arpl
jle
jno
lea
push
push
sub
pop
mov
and
xchg
dec
xor
mov
mov
mov
fdivrs
test
outsl
call
adc
loop
jne
movsb
rol
subl
sbb
ja
call
ja
cmpsb
adc
in
xchg
jae
scas
mov
ljmp
inc
push
mov
fsubp
push
dec
dec
sub
cmpsb
data16
fmuls
scas
jp
jge
add
push
pop
icebp
nop
jle
sbb
cmpsb
sub
pop
xchg
fisttpll
and
dec
jmp
shll
add
xchg
xor
ficoms
pusha
xchg
adc
mov
sbb
lock
pushl
pop
outsb
jb
lret
sbb
mov
jnp
cmp
dec
pusha
call
mov
push
test
in
mov
mov
sbb
loopne
les
ret
fcomps
mov
pushl
adc
mov
jp
std
cmp
or
stos
mov
xchg
jle
mov
dec
cmp
mov
inc
loop
test
sbb
rol
cmp
incl
xor
insl
lds
pushf
mov
pop
je
cmp
or
cmp
es
dec
push
call
xor
xor
dec
cmp
xor
inc
clc
incl
or
imul
fiaddl
cwtl
aam
in
addr16
rolb
jo
jo
push
loop
call
adc
mov
dec
in
jle
lods
data16
lret
mov
ja
inc
cmp
insl
sbb
add
aaa
fwait
test
aam
in
jbe
call
xor
jle
repz
push
subl
in
add
xchg
andb
mov
mov
loop
out
mov
in
mov
and
inc
xlat
push
xor
dec
jae
jp
xchg
inc
or
lea
mov
sbb
sub
cmpsb
and
inc
pusha
push
xor
mov
dec
xchg
and
inc
mov
mov
incl
and
leavew
nop
aas
popa
push
mov
dec
jp
fldenv
outsb
xor
leave
and
cld
call
insb
shlb
sarl
sbb
enter
mov
inc
push
sub
ja
xor
mov
je
insb
stc
push
mov
cmp
or
call
out
jp
jbe
mov
test
je
push
jg
inc
pop
daa
in
mov
push
call
xchg
dec
or
xor
les
incb
fcoml
sub
cmp
call
rolb
add
das
les
mov
rcrb
decl
jae
dec
rclb
daa
leave
jnp
jbe
cwtl
pop
sbb
jg
stos
or
pop
xchg
adc
popf
sbb
pushf
insl
cmc
imul
jae
jmp
mov
cmp
cwtl
aas
fldl
imul
sbb
mov
push
push
gs
sahf
popf
pop
cmp
mov
testb
je
into
sub
jmp
ret
daa
cmp
out
clc
cmp
jmp
jl
xor
sub
and
bnd
jmp
out
enter
mov
lods
mov
out
pushl
mov
push
push
and
lcall
stos
lods
mov
gs
adc
sbbb
incl
pop
sbb
sbb
dec
mov
inc
pop
mov
in
out
inc
fisubl
mov
push
leave
add
je
jae
pop
xchg
dec
js
mov
cmpsl
ja
cmp
ret
das
sbb
ljmp
aad
and
sbb
cmpsl
push
xadd
and
inc
arpl
inc
sub
dec
mov
aad
and
mull
jp
daa
cld
inc
add
dec
xchg
bound
incb
adc
jge
jb
mov
loope
insl
cltd
bound
jp
xchg
inc
cli
jp
inc
movsl
dec
mov
jmp
pop
clc
mov
lock
pop
sarb
xchg
cli
cmp
dec
outsl
sub
rol
out
dec
outsb
cmp
in
mov
mov
xchg
outsb
push
or
into
neg
movsl
mov
mov
imul
inc
push
out
cli
das
sbb
or
pop
lret
pop
push
decl
fdivl
push
mov
jg
mov
sub
jp
ljmp
pop
pusha
mov
sahf
aas
ljmp
mov
jne
movsl
dec
sbb
push
push
sti
cld
dec
adc
test
call
rcll
sbb
shlb
mov
test
and
incl
pop
sub
adc
ret
push
into
aad
jnp
ss
cwtl
mov
hlt
inc
dec
repz
push
ljmp
mov
and
mov
pop
sbb
mov
pop
cltd
mov
pushl
cmp
cmp
cmp
in
mov
xor
inc
fs
lods
fadd
dec
es
ljmp
mov
fs
jno
jae
aam
iret
insl
sbb
sub
mov
popf
xchg
dec
ljmp
loope
sarb
imul
pop
std
pop
sbb
push
push
and
xor
call
push
call
jb
data16
xor
test
fistps
into
inc
call
sub
imul
mov
add
push
popf
push
scas
jns
lods
or
in
sbb
call
faddl
dec
adc
cli
inc
negl
sub
lcall
jp
fdivr
pushl
mov
mov
shrl
stos
cld
jnp
inc
repz
push
daa
push
jmp
add
mov
pushf
xor
push
jno
ljmp
ret
push
into
push
fisubl
stos
lcall
idiv
xchg
push
pop
sahf
xchg
add
push
sbb
xchg
loop
mov
pop
mov
scas
and
std
push
sbb
dec
in
ds
inc
xor
and
push
int3
jnp
mov
insl
fiaddl
ljmp
jno
mov
movsl
lods
push
fcmovne
adc
sub
inc
dec
out
mov
sbb
inc
lret
pushl
mov
mov
sub
into
shlb
cs
push
cmp
ljmp
mov
sub
xchg
loop
loope
data16
xchg
stos
mov
scas
jne
fwait
push
iret
xor
xor
ljmp
xchg
push
mov
add
add
into
pop
repz
cmp
outsb
fbstp
scas
push
inc
stos
rolb
fidivrl
pushf
lahf
push
mov
nop
mov
sub
jmp
jo
repz
sbb
push
clc
inc
cwtl
push
insb
xchg
outsb
stc
jmp
es
dec
mov
adcb
stc
call
pop
pusha
dec
jbe
ss
jecxz
ds
stos
xchg
add
out
sbb
leave
sbb
test
into
push
jno
ss
sbb
movsb
adc
in
aas
mov
popa
add
movsb
fstpt
test
sub
fdiv
in
push
mov
and
dec
sarl
sar
jmp
cmp
pop
repnz
ljmp
push
repz
fmuls
enter
and
mov
mov
lods
add
jbe
fmul
push
pop
lods
nop
repnz
sbb
jae
jnp
sub
pushl
add
pop
xor
insb
sbb
jbe
mov
mov
aas
jns
std
add
cmp
imul
icebp
sbb
cmp
pop
inc
cltd
xchg
push
movsb
insb
out
xor
lcall
jecxz
xchg
mov
cmp
inc
pop
xor
pop
popf
inc
call
lcall
mov
mov
out
fisubrl
adc
inc
add
fidivrl
ja
cmp
arpl
xchg
ljmp
or
sub
dec
adc
je
jecxz
or
cli
cmpsl
aaa
decl
repz
xor
jle
stos
enter
inc
dec
mov
lcall
jecxz
dec
outsb
popf
ljmp
sbb
ja
push
and
mov
pop
push
push
jnp
push
sub
decl
sti
clc
sub
mov
subb
lods
daa
xchg
add
jge
fildll
cmpsb
jne
sti
add
clc
das
push
movsl
int
xor
xor
pop
lret
scas
jg
pushl
mov
inc
dec
pop
lea
std
mov
ja
lcall
sahf
pusha
outsb
subb
out
scas
pusha
jb
adc
fmull
or
cmp
mov
in
lahf
icebp
cwtl
sbb
lcall
sub
test
cmp
xchg
mov
cmpsb
ljmp
or
jmp
mov
pop
sub
addl
out
or
addr16
popf
jo
push
fistpl
incl
cmpsl
pop
cmp
in
cmc
pop
push
fsubrs
push
xlat
cmp
lret
out
fwait
mov
decl
xor
xlat
ljmp
push
ja
pop
add
pop
pop
int
xor
mov
ljmp
add
mov
mov
dec
stc
div
daa
ljmp
shll
test
pop
mov
mov
and
lret
insl
push
mov
sub
test
aam
sub
xchg
push
aas
ljmp
or
pop
push
aaa
ss
mov
aam
call
dec
in
shll
xor
inc
pop
push
mov
inc
dec
ja
enter
test
lock
decl
das
nop
es
or
in
jnp
xor
test
lahf
push
jnp
xor
call
push
xlat
push
into
roll
pop
data16
adc
out
lret
inc
je
xchg
out
and
lcall
cmp
or
or
aas
push
arpl
std
cmp
out
mov
ds
dec
fdivrl
mov
dec
cmpsb
fldl
addr16
xor
lods
sub
and
out
mov
ret
mov
jb
bound
sub
xchg
bound
jle
icebp
inc
dec
pop
adc
add
testl
mov
add
pop
mov
repnz
fnstcw
add
fcmovu
fcoms
lret
dec
rep
add
xchg
xchg
decl
mov
daa
adc
adc
inc
inc
in
xchg
cmc
pop
sub
sub
ret
lcall
stos
mov
dec
insl
cwtl
out
inc
lcall
movsl
rcl
int3
jmp
mov
dec
sar
or
xchg
xchg
mov
dec
adc
xchg
fnstcw
lahf
xlat
xor
adc
outsl
cli
jmp
shll
ret
mov
jmp
aaa
popa
sahf
inc
jae
or
sbb
xchg
dec
add
and
popa
or
add
xchg
mov
ret
sbb
decl
and
addr16
mov
aas
stc
sub
incl
xchg
aas
mov
xor
aas
xchg
ret
fwait
aad
mov
incl
mov
mov
daa
xor
and
ficomps
jbe
adc
lock
ret
mov
incl
pop
jle
jno
pop
das
pop
das
mov
iret
mov
jb
decl
inc
dec
cmc
insb
shl
inc
mov
inc
pop
aaa
test
cmc
cmovle
cmc
decl
mov
addr16
and
push
inc
add
arpl
mov
add
ljmp
mov
cmpsl
sbb
fisubs
cli
sub
insb
and
aad
mov
jmp
imul
xor
imul
scas
xchg
repz
jne
into
mov
cld
xchg
in
out
je
dec
nop
lds
pop
dec
ret
ljmp
lret
lcall
clc
decl
cmp
ja
stos
les
dec
push
fnstcw
cld
push
adc
add
pusha
ljmp
movl
jbe
in
cwtl
stc
inc
xchg
gs
ss
mov
cld
stos
ret
fdivrl
fmull
fcomip
decl
mov
dec
popf
and
or
mov
fdivr
call
xor
pop
out
jl
mov
mov
sar
outsb
push
or
adc
push
decl
dec
repz
sbb
lods
js
fistps
add
cmpl
push
rclb
jle
push
ficomps
inc
stos
pop
cli
xlat
jb
xlat
in
mov
ss
fdivrs
incl
fstpl
sbb
ds
hlt
mov
add
scas
scas
and
lahf
int3
adc
fiaddl
fidivl
ljmp
inc
push
or
adc
jne
test
push
call
fisttpll
pop
shlb
ljmp
call
arpl
cli
adc
adc
in
faddp
pushl
cmp
in
xchg
shlb
test
leave
jns
lods
mov
rol
mov
push
incl
inc
jge
data16
arpl
cmp
popa
xchg
push
rolb
in
adc
mov
pop
mov
idiv
inc
xchg
xchg
adc
stos
sarl
cmpsl
test
adc
loop
hlt
add
cmp
inc
cmp
outsb
push
fistpl
ret
loopne
inc
xchg
push
in
xchg
inc
dec
shll
test
mov
ljmp
lods
pop
add
aas
and
roll
loope
sub
push
and
dec
lcall
sub
out
cli
clc
sub
test
push
pop
ret
xchg
lahf
cwtl
je
inc
popf
mov
stc
or
fdiv
xor
fmull
cmp
pop
iret
ds
test
ljmp
ljmp
pop
in
mov
stc
fidivs
inc
shrb
mov
cmp
fistpll
into
push
fs
cli
popf
xor
stos
mov
xchg
push
mov
mov
xchg
call
inc
or
xor
fildl
mov
jg
cmp
push
dec
in
add
call
push
xor
jb
call
ljmp
enter
js
jp
adc
stos
cmp
inc
dec
sbb
mov
push
sbb
shrl
cld
lea
negl
fcmovnbe
inc
roll
imul
fdiv
pop
orb
add
xor
lock
ss
mov
sbb
xor
out
faddp
mov
sub
push
inc
push
mov
test
js
popf
in
cmc
fs
mov
ljmp
cmp
fcmovnu
push
jl
xchg
inc
insl
dec
ret
pop
stos
or
lcall
sahf
push
loope
mov
and
fwait
mov
in
xchg
sarb
xlat
div
cltd
imul
add
dec
mov
push
cmp
imul
dec
dec
cwtl
and
movups
incl
not
lds
jno
insb
cmp
shrl
es
pusha
and
push
cmp
call
cmp
push
xchg
pop
cmpsb
jae
bound
pop
cmp
or
pop
jle
pushl
pop
mov
arpl
out
fcoms
cltd
stc
jnp
addr16
mov
lcall
pusha
pop
cmpsb
aam
xchg
cmc
jp
je
mov
inc
popa
push
and
jae
or
sub
inc
dec
jp
and
pop
stc
div
jle
push
decl
cmp
in
bound
mov
sbb
cmp
bound
add
jne
sti
in
mov
cmpb
jo
mov
and
or
inc
outsb
mov
stc
fnsave
out
out
clc
jne
cltd
nop
mov
insb
fwait
in
notl
mov
mov
in
ficoms
out
into
fwait
popf
icebp
test
mov
jp
ja
pop
aad
cmp
inc
test
data16
jmp
fisttpll
leave
js
jecxz
dec
dec
cmp
sbb
test
rorl
les
mov
adc
call
insl
push
add
sbb
ljmp
shll
cmp
mov
cmc
lds
inc
push
ror
inc
js
imul
adc
movsb
pushl
sahf
mov
or
sub
fistpll
stos
and
stos
mov
cmpsb
lcall
and
roll
insl
mov
orb
jmp
comiss
mov
adc
icebp
lcall
push
mov
xchg
xor
shl
and
fdivrs
scas
cmp
jg
sarb
aam
aad
sbb
jne
dec
or
cltd
enter
mov
mov
mov
into
lret
mov
loope
outsl
fs
sub
xchg
out
cli
or
mov
adc
mov
adc
fdivrs
fisubrl
mov
orb
add
or
inc
dec
sti
xor
adc
adc
mov
rcr
xchg
mov
lret
mov
jmp
pop
mov
dec
fisubl
and
incl
mov
jge
sub
divl
pop
xchg
jl
xchg
cltd
dec
and
mov
sbb
jmp
ljmp
mov
pushf
xchg
mov
jmp
cmp
call
sahf
leave
cmc
testl
xor
fdivr
mov
scas
dec
push
incl
fists
inc
and
mov
testb
testl
sbb
jmp
mov
or
dec
testl
mov
sarl
iret
mov
call
das
div
and
ret
dec
push
cmpsb
popf
xor
test
repnz
push
int3
mov
cmp
movsb
xlat
dec
iret
push
std
inc
mov
mov
dec
cld
xchg
decl
fimull
cmp
ret
fisubl
or
cmc
jecxz
or
scas
out
test
jae
push
cld
pushl
out
mov
fidivrl
aad
lcall
pushl
mov
in
pop
jp
jge
leave
rcll
cmp
mov
lret
ret
decl
push
rcrb
decb
sub
sub
in
bound
imul
in
ljmp
inc
dec
dec
or
mov
cwtl
flds
pop
fadds
sbb
dec
out
pop
negb
lcall
cwtl
xor
call
daa
aad
hlt
pushf
aaa
adc
pusha
cmpsb
popa
lret
fs
lock
popa
lcall
cmpl
xchg
adc
negb
je
leave
aam
das
pop
ss
sub
stc
out
rcrl
in
and
and
fwait
incb
mov
xlat
or
insb
lea
sbb
in
or
jbe
cli
mov
pushf
rcr
inc
dec
push
lcall
addl
add
fldl2t
lods
adc
sbb
pushl
shll
mov
push
jnp
or
xor
xor
xor
lret
js
xor
jmp
nop
xchg
ds
adc
clc
mov
lret
test
pop
mov
stos
out
fiadds
inc
pop
sbb
in
mov
setnp
push
pushl
xlat
sub
dec
gs
gs
ljmp
mov
test
push
or
push
enter
push
xchg
jne
loopne
fwait
xlat
xchg
push
add
ljmp
mov
mov
inc
loop
jae
cmpsl
mov
push
mov
test
jno
mov
jge
sysexit
push
ret
loop
mov
lret
inc
incb
repz
jnp
jecxz
popf
mov
fldt
add
.byte
mov
.byte
sub
sbb
xchg
rcll
pop
add
add
add
add
dec
repz
push
push
push
push
push
or
add
call
mov
outsl
jg
shrb
lock
or
mov
shr
shl
or
sub
incl
mov
add
dec
jne
pop
pop
pop
jmp
ret
push
mov
push
movl
out
aas
mov
xor
inc
inc
test
je
movzbl
lea
mov
mov
popf
std
xadd
adc
sarl
aaa
jne
cmp
je
push
xor
xor
mov
dec
lret
adc
inc
cs
pop
push
lret
je
mov
cmp
je
mov
sub
pop
sub
lcall
push
cmp
or
mov
je
test
je
cmp
clc
subl
mov
adc
loopne
inc
add
ret
push
push
sti
sub
add
andl
add
pop
xor
inc
ret
mov
orl
in
int3
push
adc
push
ret
xor
add
sbb
fucomi
int3
add
adc
mov
fisttpl
lahf
mulb
mov
sub
push
clc
mov
outsl
out
pop
push
aam
fiaddl
mov
lea
mov
lods
mov
adc
leave
push
ret
push
inc
xor
pop
inc
xor
imul
xchg
push
sub
jle
cld
mov
jp
testl
jbe
jne
into
mov
aas
mov
inc
jae
pop
xor
or
je
cmp
shll
je
lea
push
pop
pop
push
push
lea
xor
xor
fidivs
divb
or
pop
pop
scas
xor
js
xor
add
dec
push
sbb
idivl
add
add
or
insb
lock
jmp
mov
mov
dec
add
mov
push
movsl
decl
pop
fmuls
and
mov
mov
lock
mov
push
sbb
add
clc
pop
lock
jne
or
or
push
ja
mov
pusha
push
fistpll
push
adc
mov
mov
push
push
sti
jbe
xchg
test
dec
push
or
inc
add
adc
sti
lock
adc
and
or
testl
add
add
ret
adc
out
add
or
call
cmpw
jne
mov
add
cmpl
mov
pop
jne
movzwl
mov
pop
or
clc
loopne
ds
cmpl
sub
sbb
clc
pop
push
cmpl
loop
inc
mov
in
push
shlb
or
in
push
jmp
pop
jmp
out
inc
mov
bound
push
ja
or
add
adc
xor
inc
push
pcmpeqd
mov
or
or
pusha
cmpsl
mov
mov
pop
mov
gs
je
push
sub
mov
or
popf
adc
loopne,pt
inc
mov
inc
shlb
jmp
push
pop
cmp
push
xlat
add
mov
jl
pop
adc
cmp
jne
push
push
or
jno
jmp
jle
mov
sbb
mov
or
movsl
shll
lahf
push
push
mov
cmpl
pop
repz
jle
gs
ljmp
fisubrl
adc
mov
cmp
cmp
js
testl
stos
jbe
fcoms
mov
call
push
push
xor
movsl
loop
xor
mov
jo
pop
cs
mov
je
xor
or
mov
loop
sub
dec
jl,pn
add
push
mov
mov
call
ret
popl
push
sub
sbb
pushf
mov
push
adc
hlt
jne
mov
push
or
push
or
or
mov
adc
pop
ret
inc
add
imul
loopne
and
cmc
das
push
or
ret
add
cmpsb
sbb
or
add
or
add
addb
cmpl
pushl
dec
and
gs
push
xor
stc
cmpsb
lret
mov
jae
mov
inc
add
xlat
jbe
fnsave
and
clc
cmp
clc
xor
inc
clc
push
sbb
and
add
scas
ljmp
mov
and
cmp
inc
cmp
jl
cs
push
push
rcl
in
je
and
xor
cmpl
add
sbb
int3
je
lcall
cmp
aas
test
imul
cmp
cs
inc
and
sub
dec
xchg
sub
push
mov
dec
lcall
jb
ljmp
lods
mov
sarb
fidivl
testb
jne
fs
clc
push
cli
and
aaa
call
leave
mov
jle
lea
sbb
cmp
dec
sub
test
jg
push
jne
push
pop
cmp
jg
mov
fstpt
xchg
lods
mov
inc
cmp
cmp
cmp
adc
inc
mov
movsb
leave
mov
pushf
jmp
test
jle
add
sbb
jp
andl
cwtl
mov
fidivrs
insb
jl
sub
dec
jns
push
jge
cmp
push
inc
mov
inc
jmp
sbb
leave
dec
push
lea
add
stc
adc
into
cli
pop
sar
sub
incl
push
adcb
in
push
push
sub
mov
call
or
xor
mov
in
pop
pop
es
loope
pop
jo
cmpsb
cmp
mov
jae
hlt
aas
mov
mov
je
call
add
cmp
jb
and
push
sti
mov
add
mov
pop
jae
push
add
fisubl
test
push
fs
cmp
addb
cmp
sbb
outsb
xor
or
jle
lds
outsb
sub
adc
cmp
add
dec
mov
sbb
mov
pushf
sbb
in
adc
push
test
sub
adc
sbb
or
cmp
add
imul
mov
xor
mov
add
out
add
add
je
in
push
lea
xchg
jo
shlb
sti
lea
push
mov
call
or
cmp
pop
inc
sbb
loopne
out
das
and
lock
cmp
std
outsl
xchg
cmp
fbld
jne
cmpl
cmp
into
lret
stc
cld
or
out
je
scas
mov
push
push
mov
sbb
into
mov
sub
in
jbe
sbb
pop
pop
lea
mov
sbb
insb
in
and
jo
mov
sbb
push
add
pmaxub
fs
mov
aas
pushl
add
sbb
mov
push
pop
fidivrs
popa
loopne
push
push
js
xchg
or
dec
jns
adc
mov
push
ret
and
lds
div
pushl
pop
push
adc
je
jo
ret
iret
xor
movsl
je
lock
sar
sti
mov
push
sbb
add
ret
aaa
sbb
je
lock
and
dec
ja
andl
mov
sub
mov
mov
das
push
push
mov
adc
xor
rorl
push
stos
pop
mov
sbb
xor
add
sbb
aad
enter
add
and
mov
or
add
clc
or
popa
or
sbb
sti
divl
loopne
ret
or
adc
sub
push
mov
pop
or
lret
aaa
dec
sti
add
dec
cmp
lret
adc
mov
es
or
jne
mov
inc
jbe
sub
mov
mov
fsubrs
call
xor
andl
lcall
imul
xchg
rclb
or
rcll
push
rcrl
adc
xorb
int
push
fadds
fs
call
cs
js
clc
xor
cmp
orb
push
sbb
or
stos
fisttps
and
test
test
ss
jg
cmp
jne
sar
sete
mov
movzbl
pop
sbb
fincstp
sub
jmp
push
pop
inc
bound
cmc
pop
jae
mov
fstpt
sbb
mov
mov
loopne
xor
imul
xor
clc
add
pop
icebp
cmp
jne
mov
add
adc
fdivrs
sti
pushf
cmp
pop
shll
sub
call
or
fldt
push
pop
cmp
pop
pop
je
push
leave
in
out
dec
add
cmp
jne
ljmp
jne
sbb
mov
fsubl
stos
ds
cmp
dec
rorl
jecxz
aam
movb
mov
push
mov
hlt
movl
aaa
je
xorl
xor
shr
aas
cld
aas
inc
mov
mov
jmp
incl
bound
inc
or
in
negb
push
flds
and
mov
sbb
clc
or
mov
xor
cmp
sub
or
cmp
movb
pusha
int3
into
xchg
mov
mov
cmp
pop
dec
jmp
dec
jmp
xor
lock
incl
out
inc
pop
jmp
inc
inc
mov
sbb
inc
pop
je
cmp
test
pop
push
cld
or
dec
add
roll
cld
je
dec
cld
insb
xchg
shr
fs
in
push
adc
push
int3
repz
outsl
aam
cmp
aas
dec
rcrb
lods
shl
subb
into
inc
fs
wrmsr
leave
imulb
xchg
addl
sbb
add
and
inc
ja
add
cwtl
add
rcl
sub
mov
add
xchg
or
cmp
je
clc
add
fdivs
mov
xchg
push
push
lea
sub
pop
sub
mov
hlt
shl
push
test
add
mov
and
and
gs
cmp
cmpsl
test
and
push
or
movsb
inc
cmp
pusha
push
push
sbb
cmp
in
push
sub
out
mov
mov
push
inc
dec
sub
and
push
dec
push
aam
add
out
cmpsb
js
mov
mov
outsl
cli
in
imul
cmp
push
push
add
mov
int
adc
jne
or
add
push
mov
pop
aad
clc
insb
push
adc
call
and
scas
je
cmp
mov
inc
fidivs
inc
testb
dec
cmp
adc
push
mov
or
push
cmp
and
pop
cmpsl
xor
sub
mov
je
inc
cmp
sti
or
lock
addl
stos
push
sbb
pusha
or
xchg
cmp
mov
push
out
pop
pop
sahf
sub
push
inc
lock
ficoml
aas
mov
insb
adc
cmp
stos
and
cltd
loope
sbb
add
add
rorb
shll
shll
lea
inc
stc
cmpw
fmuls
mov
fstpl
add
push
jl
lock
or
push
mov
addl
or
iret
pop
add
smsw
xchg
popf
clc
inc
jo
xor
fmull
clc
shlb
dec
add
roll
or
jne
clc
sub
mov
test
stos
mov
mov
mov
mov
jne
mov
pop
mov
inc
inc
add
jl
pop
andb
lea
cmpl
dec
mov
scas
loopne
mov
jmp
ret
dec
neg
sbb
push
cmc
mov
js
cmp
insb
jmp
pop
push
int
and
jle
add
add
fstl
prefetchnta
pop
adc
jmp
or
jl
jno
rcrl
mov
jb
push
push
lahf
sbb
inc
in
pop
inc
insb
or
jne
pop
mov
cmc
or
shl
bnd
subl
jmp
xor
pop
adc
cmpl
add
push
mov
add
cmp
add
dec
inc
arpl
push
lock
mov
dec
loopne
add
repnz
sbb
push
push
maxps
into
movsl
call
test
xor
jbe
jae
mov
les
mov
jne
lret
into
adcl
into
jbe
test
dec
in
sub
sbb
dec
je
dec
push
dec
stos
sbb
add
bound
fsubs
and
lods
bnd
mov
adc
add
push
push
sub
pop
add
subl
pop
ret
xchg
add
xor
jmp
daa
cli
movsb
mov
mov
push
pop
add
call
jns
push
mov
dec
ret
push
push
sbb
push
jle
mov
push
add
scas
insb
xor
push
add
xchg
inc
mov
push
fcompl
jl
mov
and
bt
sbb
mov
add
push
and
sbb
sbb
or
add
pop
in
mov
push
popf
mov
jb
dec
adc
jmp
sbb
cmp
push
mov
push
lods
sbb
mov
movb
or
pop
or
cwtl
and
int3
add
jb
push
mov
jl
pmullw
pushl
test
into
or
cmp
jnp
add
add
cmp
test
insb
add
cld
push
and
js
incl
pop
push
or
add
int
jns
jmp
or
jmp
in
imul
add
enter
mov
jnp
in
js
je
mov
movl
mov
xlat
decl
mov
bound
divb
in
jae
test
jo
pop
insb
fld
adc
inc
add
sbb
mov
jnp
adcl
adc
clts
ja
push
push
mov
mov
xor
mov
shr
jne
mov
add
int3
sub
in
in
fisubrs
push
jne
outsb
dec
jne
and
push
push
cld
dec
inc
aaa
sub
in
fdivs
ljmp
cwtl
das
sbb
sub
mulb
pop
pop
out
sahf
xchg
pop
cltd
and
push
add
sub
sbb
jne
jbe
sbb
cmp
adc
add
shrb
mov
and
loopne
mov
ja
xchg
loopne
imul
cmpsl
orb
dec
cmc
mov
pop
mov
and
inc
or
in
imulb
rol
std
cld
xchg
adc
xor
pushf
es
jmp
loope
or
lock
ret
mov
testl
test
loope
mov
jl
mov
mov
inc
and
or
jae
push
add
sbb
sub
in
shlb
je
or
fisubrs
cld
mov
add
or
push
or
mov
loopne
fcmovnb
mov
stos
adc
in
and
cmpsl
push
push
repz
mov
pop
pop
sar
xchg
iret
push
lds
cmp
xor
add
add
mov
cvtpi2ps
jb
mov
lret
pop
and
clc
or
push
xchg
or
shll
enter
std
jecxz
mov
sub
lret
and
rep
addl
inc
jle
pop
pop
in
cmp
daa
cwtl
xor
add
push
fldl
das
adc
xor
das
sub
ds
repnz
cmp
in
add
out
subb
dec
test
cld
subb
andb
xchg
push
xorb
pop
xor
mov
mov
test
sbb
and
sub
aas
jo
in
mov
inc
jb
or
mov
mov
add
test
xor
adc
lock
in
jp
push
cmp
and
loopne
mov
push
jmp
cwtl
add
mov
and
daa
cs
add
inc
jne
js
mov
add
mov
inc
std
sub
fnsave
cld
jne
mov
jnp
xlat
ret
lock
arpl
repz
pushl
inc
push
mov
add
sub
addr16
sbb
mov
inc
cmp
sub
rclb
dec
sbb
and
push
int
inc
cmp
call
jbe
testl
adc
int
pop
add
aas
mov
inc
sbb
lea
shl
mov
stos
lea
dec
rolb
mov
jmp
mov
es
jle
in
mov
fmuls
js
or
scas
inc
es
inc
pop
sar
inc
in
ret
or
subl
fdivrp
cli
push
xchg
xor
lret
jp
mov
movsb
fwait
loop
outsl
adc
pop
inc
add
dec
add
jbe
inc
inc
cmpb
dec
lds
shlb
stos
pop
popf
pusha
idivl
outsl
mov
push
sti
loop
cmp
jmp
cmp
push
push
push
lea
scas
test
xor
test
test
ficomps
adcl
push
and
insl
pop
push
sub
push
sbb
dec
ret
push
push
or
int
decb
loop
push
jne
fadd
push
icebp
push
sub
or
in
adc
mov
jo
ret
pop
jge
adc
fwait
adc
or
sub
and
add
xor
and
lock
mov
add
ja
std
sbb
mov
push
inc
or
daa
xor
lret
test
push
jb
push
or
sub
adc
or
lock
adc
ljmp
roll
cmp
jbe
cmp
jb
mov
and
stc
or
rep
jmp
jbe
sarb
or
loopne
add
cs
imull
mov
nop
push
and
faddl
add
and
push
mov
mov
mov
stc
lcall
mov
mov
jge
add
in
nop
dec
add
mov
add
repz
push
push
dec
inc
sahf
out
aas
mov
mov
call
out
in
lock
hlt
or
out
clc
cld
cld
xor
subb
add
add
sbb
cmp
iret
imul
push
mov
pop
pop
push
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
pop
and
stc
or
std
cld
out
sub
neg
xchg
mov
fsubrs
daa
stc
out
in
xchg
xchg
sub
pop
nop
cmp
pusha
push
mov
inc
cmp
add
out
add
out
add
ficoms
push
add
imul
pop
add
lcall
sbb
in
in
hlt
cld
add
pop
jl
xor
xor
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
cmp
inc
push
movsb
loop
push
push
xor
push
add
lds
add
cmovle
mov
daa
ja
inc
inc
pop
mov
mov
test
and
sub
rclb
or
test
ret
mov
mov
nop
aam
adc
cmp
incl
add
add
insl
loop
pop
lods
les
mov
sub
fwait
lock
out
jnp
dec
lea
mov
mov
push
dec
mov
jne
sbb
mov
mov
push
cld
or
jg
dec
xchg
adc
mov
jne
sar
dec
cmp
jbe
push
pop
add
aas
pop
mov
cmp
inc
push
and
xorb
lret
lea
not
and
decb
dec
out
negb
add
sbb
sbb
dec
loopne
pushf
mov
adc
add
push
dec
pop
sahf
imul
mov
push
or
scas
subl
jmp
imul
pop
clc
and
pop
hlt
mov
cmc
add
sar
xor
lret
cmp
jbe
out
lods
mov
andb
cmp
je
in
andb
jno
jno
cmp
mov
pop
mov
shr
not
and
add
sub
shl
lea
das
mov
xor
sahf
jle
pop
dec
test
add
inc
xor
or
cld
jmp
pop
jnp
stos
sub
lods
or
je
jbe
lock
mov
pop
or
or
popa
push
pusha
adc
mov
mov
inc
pusha
push
push
jae
cmpb
push
xchg
ds
call
inc
push
fisttps
dec
or
jmp
dec
adc
push
mov
or
pusha
mov
push
sub
lock
pushf
sub
jno
fs
fmull
shrb
int3
and
dec
or
fbstp
push
call
aas
gs
push
or
flds
cmp
sub
dec
inc
adc
dec
adc
add
and
jnp
jmp
jo
mov
adc
jg
shll
cmc
leave
mov
loopne
add
adc
adcb
test
adc
xor
dec
les
or
jbe
or
or
cmp
outsb
pop
enter
adc
or
loopne
pop
jne
movsb
adc
mov
push
outsl
push
adc
mov
jbe
pop
ret
cmpl
adcl
scas
or
xor
jo
aad
mov
ja
inc
push
push
add
lods
push
cmp
or
jbe
push
divl
rolb
mov
incl
mov
enter
loope
add
fwait
cmpsb
adc
fcomps
jo
fcmovnu
shl
inc
daa
in
outsl
adc
mov
imul
add
clc
pop
mov
add
sub
jne
add
shlb
sti
mov
out
fildll
add
and
jne
xchg
add
cli
loop
ja
fsubrs
mov
dec
shr
lea
inc
orl
orl
out
lret
inc
pusha
adc
out
inc
inc
cld
lock
call
adc
add
xchg
add
mov
dec
rorl
inc
add
out
sahf
inc
and
mov
fdivs
enter
pop
mov
jne
or
adc
jle
xlat
ss
lock
adc
out
mov
xlat
sub
pop
shr
add
ror
orb
testb
sub
cmp
mov
and
jb
scas
test
ret
or
add
je
cmp
cs
aas
add
stc
add
cmp
xorb
in
add
push
mov
pop
inc
cmp
or
jmp
add
es
nop
cmp
inc
or
lcall
add
adc
and
into
push
rorl
add
pusha
sub
pop
shl
cltd
adc
cmp
mov
cld
xlat
fidivs
pop
hlt
lea
loop
jg
sbb
cwtl
pop
shll
push
pop
dec
sarl
adc
pop
sbb
mov
loopne
mov
jmp
push
movsb
jmp
xchg
imul
sbb
out
insb
xor
jmpw
lea
mov
sub
js
cwtl
aam
add
lea
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
cmp
adc
xor
movsl
pop
divb
fisubs
cld
xor
in
pop
cmp
dec
scas
dec
mov
ret
mov
push
fisttps
scas
dec
pop
sbb
push
push
fistpll
mov
ja
dec
in
sbb
add
mov
loope
lea
cmp
lock
mov
mov
mov
jns
push
seta
bswap
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
cs
call
sbb
rolb
add
mov
push
inc
xor
mov
cli
push
cmp
lea
mov
or
adcl
sbb
jo
nop
xor
push
loopne
not
call
into
hlt
cmp
jle
fucomip
mov
and
or
jne
ret
adc
fdivrs
cwtl
push
adc
jb
push
jne
mov
jmp
inc
mov
fadds
or
test
sbb
cli
ljmp
mov
clc
ljmp
clc
in
orb
xor
add
mov
jne
xchg
notb
mov
mov
cmc
cli
xlat
je
dec
imul
mov
cmp
into
jne
lret
ret
pop
jmp
cmpl
imul
js
out
andl
xor
lock
outsl
add
je
push
sbb
sbbb
add
loopne
in
and
jae
xchg
shl
inc
test
aam
in
xor
or
sub
xor
roll
cld
jle
cmp
sbb
push
aam
xchg
dec
inc
dec
pop
cmp
loope
xor
iret
jg
cmp
lea
in
and
mov
push
pcmpeqw
mov
mov
or
sub
dec
mov
int3
or
mov
pop
adc
add
dec
push
and
clc
into
pop
jp
dec
adc
popa
dec
jp
fs
pop
mov
push
or
das
pop
mov
or
or
rcl
jo
cwtl
out
or
ja
inc
out
add
movsb
inc
or
xor
adc
mov
pop
out
or
mov
dec
xlat
mov
push
adc
lock
push
push
scas
mov
and
fmul
push
mov
push
jne,pt
cmp
mov
jne
lds
out
sahf
lea
notl
push
add
outsb
push
dec
arpl
add
lahf
xor
sub
outsb
push
xchg
aaa
jle
sbb
mov
jmp
clc
or
xchg
and
ret
dec
push
push
pop
and
js
shlb
mov
mov
pop
je
adc
dec
mov
mov
push
push
je
pop
add
insb
xchg
push
adc
in
ds
dec
jp
int
je
xchg
outsl
popa
cwtl
lods
push
adc
lahf
dec
sbb
jne
xchg
mov
cmp
sub
cmp
xor
testl
xor
test
filds
repnz
mov
or
iret
pop
pop
int3
pop
pop
pop
sbb
jle
sbb
push
and
jbe
lods
call
out
hlt
shr
add
xchg
mov
test
pop
popf
adc
dec
out
mov
push
inc
mov
mov
jne
push
pushf
jb
push
lret
xchg
cwtl
xchg
dec
lock
xchg
sbb
inc
hlt
xor
and
imul
sbb
push
js
nop
add
inc
in
jmp
sub
cmp
je
or
rcrb
addb
xchg
clc
insl
call
dec
cmpb
inc
add
pushf
aam
cmp
push
xor
pop
push
sub
add
mov
pop
test
sub
push
outsl
popa
or
adc
sub
pop
popf
sbb
lock
mov
adc
fs
mov
and
pop
xchg
xor
fadds
add
push
push
or
sub
xor
clc
mov
jbe
aad
push
mov
pop
ljmp
push
and
mov
mov
push
es
and
push
cmp
xor
push
push
mov
cmc
cmp
mov
test
sub
mov
jmp
sub
adc
pushl
and
mov
pop
adc
sbb
adc
dec
cmp
pop
inc
cmp
jle
jbe
add
jmp
sub
add
mov
push
cmpsb
neg
add
loop
lods
rorl
aam
add
ljmp
add
enter
xchg
and
add
push
rcll
loopne
adc
js
and
pushf
jne
xchg
lea
push
xor
or
mov
sbb
add
mov
jg
inc
xor
jbe
adc
sbb
ljmp
ds
ret
sbb
push
je
or
fs
arpl
or
in
push
add
xor
cmp
dec
addr16
scas
negb
inc
or
sbb
jmp
insb
xchg
mov
mov
add
js
pop
sbb
xor
lcall
loopne
sbb
flds
loopne
push
push
sub
inc
xchg
enter
and
mov
pop
sub
add
jmp
xor
xlat
mov
mov
es
mov
in
push
mov
mov
shlb
or
push
fsubr
cmp
or
sbb
xor
repnz
jb
lea
jecxz
xor
aam
sbb
ja
or
mov
je
popa
cld
push
pusha
pop
lods
adc
int3
jmp
ret
sbb
insl
ss
xchg
fcompl
sbb
xor
je
es
sub
add
or
add
fcompl
jns
jo
imul
sub
std
push
inc
or
dec
shl
ficomps
mulb
or
mov
jmp
inc
mov
push
sbbb
jns
sbb
mov
test
fadds
out
mov
sbb
test
aad
or
push
xor
movsb
xor
push
and
push
movsb
mov
movsb
iret
mov
movsb
gs
loop
dec
shrl
add
loop
loopne
fs
mov
repnz
ja
jne
sbb
fdivrs
mov
push
sbb
mov
fldcw
jl
icebp
aad
cmp
adc
lock
push
push
sub
inc
pop
or
mov
loopne
push
pop
hlt
cmp
je
jae
insl
mov
or
int3
push
mov
mov
inc
xor
add
fimuls
inc
pop
rorl
mov
xchg
test
addr16
lds
je
pop
push
adc
aam
sub
aad
fst
addb
popf
xchg
mov
sbb
mul
sbb
mov
xor
push
sub
roll
in
inc
scas
mov
cld
inc
orb
or
rolb
pusha
inc
mov
mov
cmp
repz
or
push
enter
add
loopne
test
inc
mov
sbb
jmp
mov
inc
mov
nop
cmpl
mov
add
fistpl
pushf
push
rolb
inc
mov
mov
inc
cmp
fstl
mov
or
push
dec
push
add
iret
repz
fs
jg
fimuls
pusha
mov
add
loopne
push
mov
inc
mov
jle
or
push
dec
pushf
xchg
and
mov
jl
ret
stc
cmp
xor
stc
sub
rcrl
cmp
add
adc
xor
pop
lcall
or
cmp
push
test
add
sbb
push
jne
push
push
pop
movb
mov
outsl
inc
or
jno
pop
into
lds
xchg
fisttpll
push
add
sbb
xorl
dec
shlb
push
fidivl
pop
mov
mov
imul
rclb
fiaddl
test
rclb
fcmovnbe
mov
fs
jne
rorl
movsb
enter
sbb
mov
adc
or
pop
inc
out
push
les
jne
push
push
adc
push
cmc
les
sbb
jo
divl
in
sub
adc
lods
cwtl
push
pop
loopne
sbb
pushl
fistl
mov
jne
push
xchg
fcomps
and
jmp
cmp
inc
mov
cld
mov
and
cmpl
je
inc
test
add
and
xor
iret
push
data16
xorl
mov
push
add
add
imul
push
mulps
test
dec
push
dec
es
int3
addr16
test
jo
inc
push
adc
mov
add
push
cld
push
mov
mov
lea
stos
in
pop
pop
cwtl
mov
sbb
int3
add
lods
hlt
mov
add
lret
push
and
nop
faddl
out
and
adc
add
or
not
and
sub
pop
dec
pop
cli
ljmp
jl
out
add
imul
add
cmp
bnd
and
in
mov
mov
aam
lods
and
mov
push
test
je
testb
sub
loop
fdivrs
add
or
icebp
and
adc
cmp
clc
jnp
add
aas
jbe
push
ret
add
in
push
inc
push
dec
mov
pop
inc
mov
loopne
rcrb
icebp
cmp
add
mov
jle
xor
icebp
test
cmp
xchg
ja
xlat
jne
sub
sbb
cmp
test
sub
or
sub
adcl
lods
jmp
push
lock
mov
loopne
mov
push
push
cmp
add
icebp
sbb
inc
shrb
mov
jne
pop
dec
adc
jl
or
jg
jmp
mov
push
inc
inc
jmp
add
out
pop
sub
xchg
sbb
fadds
xchg
push
lock
stos
mov
shr
inc
rcl
or
int3
pop
pop
mov
enter
cld
ficoms
pop
push
sbb
add
push
xchg
mov
jne
clc
or
hlt
and
bound
repz
jle
adc
cmp
lcall
add
out
icebp
ret
and
mov
enter
adc
jne
sub
loope
and
or
add
ret
jne
or
rcrl
lea
test
jl
fdivs
ret
add
addr16
cli
stc
or
xor
push
add
stos
std
es
xor
movsb
dec
jo
add
sbb
std
add
dec
pop
imul
nop
add
cwtl
push
mov
jmp
sub
cmp
push
pop
std
jmp
push
inc
outsl
jb
js
je
jb
arpl
jae
mov
outsl
jb
gs
insb
add
outsb
je
insl
and
jb
jge
and
or
dec
push
push
and
add
dec
inc
add
inc
and
in
pushl
xor
cmp
sub
jae
popa
jo
insb
imul
out
fldt
or
outsb
outsl
je
shlb
jne
imul
popa
arpl
mov
lods
ss
add
jae
outsl
sub
jg
fildll
dec
inc
push
and
or
gs
jae
out
dec
pusha
cmp
outsb
push
sarl
jae
sbb
xor
and
cmp
mov
inc
cs
imul
bound
pop
outsl
inc
imul
stos
test
fstpl
sub
dec
aaa
outsl
or
push
les
gs
outsl
ja
jno
inc
ds
cmpsb
outsl
ss
fs
jo
insb
jbe
xchg
jne
ss
inc
dec
arpl
adc
mov
loopne
jbe
das
mov
push
lds
xor
out
outsl
jo
mov
fcomps
fs
push
cmp
push
pop
mov
fs
adc
inc
aaa
insl
jne
pop
or
inc
stos
xor
fs
arpl
scas
loopne
bound
imul
ret
add
push
jne
cmp
dec
jbe
cli
xor
and
cmpsb
out
cmp
ds
adc
outsb
into
xorl
jns
ja
cmp
and
and
out
inc
dec
ja
push
cmp
addr16
je
lret
scas
xor
fcoml
sbb
je
and
pop
pushf
cmpsb
or
xor
sub
cmovl
jb
jns
or
mov
ret
sub
lock
mov
jae
cmp
add
cmp
and
popa
dec
int
jp
pop
imul
outsb
add
and
out
jbe
pop
mov
divl
fs
je
das
imul
jb
bound
dec
jae
push
mov
add
push
and
sahf
shr
daa
pop
lea
mov
popa
addr16
outsl
js
jne
xor
xor
lcall
sub
jmp
mov
inc
and
data16
xchg
xchg
mov
bound
fs
ja
arpl
cli
inc
jo
adc
testb
loopne
stos
sarl
subb
and
sbb
outsl
or
lret
sbbl
push
jne
ds
je
in
cwtl
mov
fs
add
xchg
adc
sub
out
sub
inc
mov
jb
jns
jo
adc
or
add
and
push
enter
pusha
rorl
push
aas
jae
popa
das
push
xor
imul
adc
cmp
and
sub
in
stc
sub
adc
addl
adc
add
add
xchg
lods
stos
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
sti
mov
and
in
inc
inc
add
push
xor
out
jmp
mov
mov
push
dec
mov
push
mov
dec
dec
mov
scas
add
mov
push
xchg
adc
pop
inc
adc
and
inc
cmp
sub
testb
ja
push
mov
dec
decl
jmp
ljmp
xor
xor
dec
lock
jo
lods
push
lock
xor
lock
jg
jmp
lea
rolb
cmc
jg
cmp
mov
xchg
sahf
daa
dec
fmulp
fwait
test
ljmp
test
pop
pop
arpl
test
add
push
daa
push
or
lds
ljmp
popf
loop
fisttpll
push
in
ret
mov
sbb
jno
fs
or
leave
lret
dec
dec
mov
or
push
xchg
je
sbb
mov
out
jge
mov
fadds
cmp
incl
fidivs
inc
jg
movsb
lods
sbb
in
mov
push
cltd
shrb
xchg
pop
out
jl
xor
cmp
xor
iret
stos
dec
and
iret
mov
cltd
dec
lds
jmp
cwtl
leave
pop
stc
xchg
mov
jecxz
inc
mov
jo
dec
push
aaa
mov
pop
mov
jl
sbb
nop
shlb
cmp
push
pop
incl
outsb
dec
xchg
fwait
into
ss
into
ljmp
push
dec
jb
push
test
inc
popf
inc
mov
ja
inc
dec
std
cmpb
inc
mov
pop
test
cmp
xor
decl
mov
jnp
inc
addb
lock
icebp
mov
cltd
xchg
mov
lret
int
idiv
ljmp
cmc
faddp
pop
aaa
test
jle
mov
sbb
xor
es
insl
aaa
mov
subb
std
decl
loopne
mov
xor
xor
es
xchg
imul
pusha
push
jno
rcll
shll
adc
cmp
add
cmove
mov
pop
push
sbb
or
mov
and
inc
push
jl
xchg
addb
enter
lods
call
mov
inc
loope
cmp
scas
pushl
ja
push
mov
int3
nop
decl
stos
outsb
add
test
mov
insl
push
dec
inc
clc
ficomps
sub
imul
pushl
add
out
xchg
or
andb
movsb
shrl
push
cmp
fdivr
popa
dec
xor
call
jns
mov
mov
mov
or
into
test
mov
xor
lret
sbb
pop
cli
es
push
les
es
mov
dec
imul
rcrb
andb
sbb
and
andl
incl
or
jne
xchg
in
mov
sub
call
push
jmp
push
dec
pop
mov
and
mov
fwait
jns,pt
push
cli
pop
insl
dec
xchg
mov
incl
mov
in
mov
xor
pop
xor
xor
mov
das
jo
ja
outsl
pushl
sbb
xchg
scas
ret
jl
ret
and
bound
cmpb
pushl
add
xchg
test
nop
out
scas
popf
mov
enter
aad
hlt
lahf
or
jmp
andl
into
stos
in
lret
adc
inc
lahf
insl
imul
mov
in
incl
ljmp
add
jae
mov
xorl
jmp
mov
and
aaa
push
pop
pop
mov
popa
mull
mov
pop
das
shrl
pop
jmp
mov
ljmp
pushl
cmp
mov
lods
and
and
xor
call
insb
or
in
push
aam
decl
pushf
rcrl
dec
orl
mov
hlt
test
sub
mov
insb
insl
iret
xchg
ret
add
push
pushf
dec
in
mov
stos
mov
lcall
sbb
xchg
mov
jmp
lcall
nop
ret
dec
loope
xchg
mov
mov
lcall
cmp
push
jne
push
push
push
sub
push
stos
xor
cld
adc
ljmp
dec
xor
sub
insb
cmp
cmpsb
jmp
pop
adc
rcrb
lcall
outsl
mov
sahf
mov
fs
lds
push
cmp
cwtl
ffreep
andb
inc
cmc
data16
push
push
xchg
inc
imul
lods
dec
call
lcall
out
mov
mov
jno
lcall
push
sbb
enter
call
aaa
repz
add
cmp
shlb
dec
xlat
scas
jb
daa
call
ljmp
xlat
inc
repz
jnp
test
loope
mov
xchg
push
jbe
shrl
or
ljmp
push
es
les
shlb
int3
test
jno
dec
push
data16
decl
mov
mov
push
cmp
nop
outsl
lock
cmc
call
shl
cmp
ljmp
push
pushw
test
cmp
movl
aam
sub
xor
lcall
xchg
imul
stos
pop
mov
add
bound
xor
in
stc
cld
cltd
incl
cld
pop
cld
cmp
dec
cmp
in
sahf
sahf
pop
movntq
call
jnp
in
sub
aaa
lods
inc
jge
sbb
mov
jmp
adc
mov
or
lock
jae
push
cld
xor
fs
inc
sub
or
loopne
mov
cmp
mov
shll
push
and
jmp
inc
or
shl
jecxz
cmp
in
insb
xchg
fstl
push
lret
data16
cld
add
mov
cmpsb
xor
les
dec
stos
add
push
fs
inc
mov
dec
add
and
jbe
and
cmp
outsb
pop
sub
cmp
pop
adc
push
mov
out
lcall
fmul
cli
arpl
cmp
int
xchg
sbb
dec
xor
cmp
movsb
data16
ret
ret
loope
loope
inc
cmpsb
or
xchg
into
das
pop
inc
and
decl
movsl
push
add
jnp
pop
mov
push
cwtl
nop
sub
mov
popf
jmp
mov
push
or
cmp
lea
xor
testb
pop
and
dec
je
lcall
and
jg
pop
and
sbb
ss
sub
xor
ljmp
xchg
mov
insl
sbb
jmp
xor
inc
cmpsb
fldl
sbb
pushf
lret
pop
mov
adc
enter
or
cmp
push
xchg
popf
sub
pop
es
adc
sbb
movsl
xchg
inc
not
ja
call
repnz
sbb
adc
out
adc
aam
mov
ja
push
adc
dec
in
daa
popa
fwait
pop
push
push
loope
inc
pop
mov
add
inc
outsl
and
imul
repz
jl
jae
add
movsb
sub
and
call
inc
xchg
fmull
and
in
repz
mov
mov
or
sub
imul
cmp
popf
testl
jbe
insl
arpl
mov
js
pushf
insb
ret
jmp
stc
xchg
sar
jecxz
push
in
push
push
dec
push
adc
sub
and
xchg
gs
or
push
xchg
movsl
mov
inc
jo
xchg
push
cmpsl
add
sub
pusha
push
fsubs
das
inc
or
jmp
cmp
sbb
imul
adc
sbb
pmulhuw
and
pushl
lret
mov
test
gs
ja
sbb
push
push
filds
test
dec
call
les
push
fsubrs
shl
mov
cs
andb
aas
add
je
jmp
loopne
js
mov
mov
adc
dec
lods
add
lcall
xchg
fdivr
das
clc
mov
cmpsb
adc
je
xorb
pushf
sbb
cltd
xchg
xor
rcrl
lcall
dec
and
pop
stos
jo
movb
cld
sahf
rcrl
mov
mov
push
repnz
divl
cmp
sub
insb
pusha
jo
sbb
mov
dec
jmp
and
shrb
mov
out
lods
dec
fdivrs
jb
pop
jge
out
hlt
jne
sti
add
jmp
aaa
jns
orl
xchg
mov
dec
jne
add
push
push
lock
mov
jmp
mov
pusha
jg
adc
xchg
in
out
push
loope
mov
lcall
adc
pushf
fistps
push
dec
addr16
xchg
sbb
jno
jo
addr16
dec
addr16
cmp
incl
push
and
adc
into
xchg
pop
pop
sbb
pop
mov
loope
sub
mov
jg
jmp
nopl
out
pop
adc
sub
push
mov
inc
sub
icebp
pop
hlt
pop
cmc
shlb
xor
dec
adcl
jnp
icebp
xchg
push
hlt
decl
mov
mov
mov
out
addr16
sbb
popf
push
push
in
ds
jg
and
call
mov
add
bound
lods
mov
jbe
inc
xor
test
xor
jecxz
lahf
cmp
and
cmc
mov
pushf
mov
dec
nop
in
pushf
fdivr
jae
incl
movsb
ret
xor
aad
xchg
adc
aaa
sub
test
cmp
dec
mov
jle
int3
pop
aaa
dec
cmp
xchg
cmc
jmp
inc
push
loop
dec
mov
in
test
sbb
test
repnz
mul
fisubl
jmp
xor
push
inc
mov
xchg
clc
mov
mov
mov
xchg
test
xor
pop
cltd
shrl
insb
negl
movd
dec
lcall
enter
or
jmp
lret
sbb
mov
aaa
sbb
fcomip
decl
outsb
add
pop
imul
decb
addb
decl
ljmp
cmpsb
inc
aad
cmp
pop
and
jmp
inc
cmp
cmpsl
mov
inc
push
sub
add
xor
loope
sbb
je
jno
xchg
ja
mov
decl
repz
push
jbe
rcl
jmp
notb
push
xchg
mov
loope
cld
jmp
dec
aaa
gs
jmp
jecxz
popf
in
jne
jbe
nop
aad
jl
add
arpl
clc
pushl
adc
les
push
movsb
push
cs
mov
ljmp
jmp
jbe
sub
sbb
jp
cmp
ficomps
sbb
call
pusha
mov
jmp
add
clc
aas
movsl
xor
jb
aam
sar
outsl
ljmp
add
push
sub
mov
insl
push
mov
and
arpl
loopne
call
enter
and
inc
mov
jmp
pop
inc
js
inc
call
ja
xlat
jmp
sub
pop
int
outsb
cmc
push
sbb
xor
mov
jl
or
js
andb
pushl
cld
jmp
cmp
add
enter
fnstcw
hlt
dec
add
pushl
std
call
bound
pop
xor
cmp
push
xchg
sahf
lea
dec
sbb
ret
dec
sti
add
pop
xchg
std
negb
dec
and
jo
jmp
and
imul
xchg
orb
movq
add
xchg
popa
dec
and
call
clc
mov
sub
push
lock
shl
bound
push
ss
data16
decl
sti
leave
js
jmp
push
fldcw
out
cwtl
xchg
scas
mov
sar
incl
stc
dec
dec
cmpsb
push
or
xchg
insb
out
cmp
fwait
dec
scas
push
test
push
mov
call
mov
lret
pop
pushf
loop
jecxz
js
out
pop
jnp
out
sub
xchg
gs
cmpsl
lahf
add
ss
jb
sbb
ret
cwtl
inc
aaa
das
dec
push
jmp
out
gs
ret
leave
and
push
sbb
xchg
and
js
jecxz
mov
mov
ja
icebp
data16
pop
xchg
stos
inc
imul
pop
add
call
pop
xor
dec
mov
xchg
out
or
mov
out
inc
sahf
aas
mov
push
mov
rcrb
rol
cld
movsb
sub
fucomp
pushl
insb
jnp
and
cmpsl
dec
add
mov
fincstp
fnstcw
adc
mov
jo
xor
push
and
in
mov
cs
dec
pop
cmp
loop
jge
outsl
adc
jle
jbe
cs
lcall
loop
cld
add
mov
popf
inc
or
and
daa
repz
jae
out
xor
pushl
push
mov
adc
dec
fnstenv
iret
cmp
shlb
mov
mov
out
das
push
push
into
mov
xor
xor
jo
ffreep
in
lds
sbb
mov
fnsave
lcall
xchg
pop
or
notb
jp
sar
insb
test
addr16
jne
dec
bound
call
test
test
add
sahf
and
sbb
jg
ljmp
push
in
stos
in
push
add
or
dec
jecxz
pop
push
mov
incl
test
cwtl
mov
or
sbb
outsl
jl
std
xchg
sub
xor
ja
into
mov
fisttpl
push
fs
in
lea
pop
repnz
in
fnstcw
dec
xchg
fcmovnb
xor
xor
dec
loop
sub
cmpl
sub
call
in
aaa
or
dec
outsl
dec
mov
xchg
cmpsb
addl
bound
push
and
sub
insl
pusha
inc
pop
xor
push
mov
incl
fsts
sbb
rcl
cmp
mov
adc
jb
cmc
push
mov
pushl
jo
sbb
cmpsl
jo
sub
out
xchg
cmp
aad
mov
add
inc
loopne
jns
cmp
pop
sub
cmp
dec
add
xchg
jo
lret
call
sbb
int3
mov
mov
aam
or
lahf
decb
xor
incl
cmc
cmp
loope
les
sbb
repz
test
sub
sub
daa
cli
repnz
fdivrl
ds
ret
mov
addr16
ljmp
das
lcall
mov
xor
arpl
shrl
mov
js
shll
jne
repz
pushf
cmpl
jle
ljmp
add
sub
pop
out
ficomps
clc
add
ret
push
roll
pop
icebp
call
std
daa
popf
and
dec
xchg
mov
sahf
cwtl
adc
fldl
mov
xchg
mov
pushl
and
imul
sbb
fisubl
test
xchg
je
inc
iret
es
push
push
int3
inc
mov
push
sub
out
xor
xor
popf
hlt
sahf
iret
push
aaa
or
cwtl
call
push
pop
pop
mov
js
pop
adc
lea
jecxz
inc
sbbb
rorl
cmp
int3
xor
cmp
push
mov
mov
mov
sub
stc
pop
aaa
cld
sti
cltd
movsl
call
inc
xor
jb
adc
mov
jg
incl
cmp
mov
shl
rcll
sahf
cmp
gs
xchg
pushl
xchg
jae
arpl
or
sbb
cli
sub
lcall
inc
movsl
sub
cmp
call
cmp
insl
jmp
ret
in
xor
jmp
subb
lods
push
sbb
sbb
inc
int
fisubrs
cmp
stc
push
aas
adc
push
inc
lea
sbb
jge
cmp
adc
incl
ds
aad
in
sub
and
repnz
or
ja
in
ret
icebp
adc
inc
jl
test
aam
jno
jp
cmpb
popa
mov
push
shll
ljmp
xchg
sahf
xchg
sub
adc
mov
or
jno
and
add
in
xchg
pop
mov
incl
mov
loope
cli
sbb
stc
add
cld
pop
jmp
lock
incl
arpl
das
push
adc
jecxz
push
jnp,pn
pushl
dec
fidivs
mov
mov
out
push
popa
sub
xor
dec
push
sbb
xchg
pusha
mov
hlt
rolb
call
jmp
pop
cltd
fwait
lea
or
jle
rorb
sbb
add
jo
jecxz
imul
or
les
aaa
push
je,pt
lcall
push
mov
pop
int
fcomps
jp
mov
adc
ret
ljmp
pop
std
out
xchg
sub
pushf
frstor
ds
shlb
sbb
dec
cld
pushl
cld
xchg
hlt
sbb
fwait
inc
aam
pop
adcb
jbe
jmp
js
adc
outsl
scas
cmpsb
adc
cld
mov
aas
dec
cmp
repnz
jle
out
sarb
mov
push
xorl
push
repnz
dec
and
or
mov
decl
out
and
adc
pop
outsl
xchg
push
fmul
mov
xor
ljmp
dec
lret
inc
xchg
and
mov
scas
jp
cmp
xchg
sbb
ret
dec
pusha
jecxz
call
movsl
iret
std
or
das
dec
into
rclb
bound
push
es
cld
cmpsl
mov
cmpsb
addr16
lahf
jno
cltd
out
mov
and
jle
xchg
mov
jl
dec
push
pop
dec
lcall
adc
loope
sar
sub
pop
rcr
inc
insb
mov
ljmp
dec
sub
call
push
mov
movsl
ja
shlb
push
jno
mov
pop
repz
ljmp
popf
in
stc
add
cmp
pop
insb
int3
mov
stc
stc
insl
dec
call
mov
xor
push
pop
mov
int3
add
outsl
xor
mov
dec
data16
ss
xor
pop
sbb
jp
bound
jle
jg
das
jp
clc
subb
pop
out
decl
jmp
mov
leave
dec
jge
popa
mov
lcall
push
lds
ror
sub
mov
decl
insb
lret
push
pop
push
cmc
test
and
cmp
jmp
stos
sbb
add
cltd
in
enter
fs
leave
mov
pushl
push
mov
xchg
pop
inc
mov
orl
fists
ss
mov
adc
stos
push
xor
les
and
daa
inc
mov
jmp
adc
je
push
test
mov
call
mov
jmp
cmp
mov
cmp
fs
xchg
shr
fdivl
xor
testb
rorl
incl
xchg
test
inc
es
es
out
dec
mov
push
loope
repnz
push
push
shrb
jmp
xchg
sub
repz
push
push
push
sub
fsubs
dec
cmpsl
xor
cli
mov
js
cmp
js
and
jg
gs
jo
clc
xor
xchg
pop
xor
stos
adc
gs
sbb
into
xor
arpl
out
call
cmp
add
sub
push
push
inc
decl
push
xor
movsb
andl
cmp
repnz
insl
jno
xor
mov
mov
jmp
lods
xchg
test
fbstp
lds
nop
lds
sti
or
or
pushl
ficoml
ret
daa
sbb
cmp
arpl
jmp
scas
daa
xchg
xlat
arpl
lds
jb
mov
xor
insl
xchg
enter
cltd
popa
cs
jnp
jle
jno
ds
fs
jbe
jmp
dec
mov
push
jo
fld
adc
sub
add
cmp
mov
rcll
jnp
mov
and
cmp
iret
iret
popf
movsl
mov
cmpb
fsubl
xchg
mov
inc
fs
in
jns
cmc
and
mov
nop
pushl
popa
repz
jmp
mov
ret
inc
mov
cmp
decl
incb
push
ret
movb
shrb
push
add
bound
incl
xor
push
cmc
loopne
hlt
mov
sbb
or
and
fdivl
add
push
jg
lret
push
scas
inc
andl
les
incl
js
out
cmp
loopne
mov
ja
jecxz
mov
adc
push
inc
call
stos
insb
repz
push
clc
push
mov
cmpsl
adc
addr16
jbe
push
test
jmp
cli
sbb
jno
mov
adc
lods
push
int
test
mov
mov
stos
outsl
incl
sub
lock
adc
xchg
cltd
cltd
icebp
loopne
add
jae
adc
push
stc
pop
cld
call
cmc
sbb
repz
outsl
test
adc
js
sbbb
xor
fcomip
ljmp
out
rcrl
iret
adc
pushf
insl
ficoml
pop
fbld
xchg
and
incl
xchg
jne
push
rcl
sarl
xchg
mov
loope
dec
aaa
fs
pop
subl
das
clc
mov
data16
lret
add
pop
les
jl
mov
mov
pop
xchg
jno
pop
pop
mov
mov
scas
sbbb
xchg
adc
jb
call
fwait
sahf
or
mov
jae
push
fldt
into
jmp
stos
icebp
and
mov
pusha
mov
rcl
mov
repz
test
pop
or
scas
lea
jo
stos
jae
decl
call
imul
ja
or
repz
push
outsb
xor
cmp
inc
fisttpll
adc
test
lcall
data16
imul
fs
mov
and
xlat
pop
cmp
cmp
push
adc
mov
adc
js
in
xchg
ljmp
in
dec
fmul
jle
cld
add
or
jge
in
addr16
imulb
ljmp
dec
jae
xor
ss
sbb
mov
and
decl
mov
fdiv
jnp
mov
repnz
pop
jmp
mov
decl
jecxz
dec
push
push
lcall
lahf
mov
enter
mov
cmp
iret
cwtl
inc
dec
cmpsl
in
jne
fwait
jle
push
adc
jge
xlat
dec
idiv
inc
and
pushl
arpl
adc
xor
loop
int
mov
les
pushf
sub
dec
mov
cmp
pop
jmp
mov
aaa
lock
arpl
xchg
add
sub
insb
testb
jl
adc
cvtpi2ps
mov
call
xchg
cmp
inc
rolb
sub
mov
addl
pop
or
cwtl
inc
mov
decl
shrb
fwait
push
loop
xchg
aam
jle
fcomip
lods
fildl
clc
sti
inc
aad
mov
imul
stos
clc
std
sbb
and
test
xor
sbb
jmp
push
sub
dec
xchg
call
sti
or
jb
in
push
and
jb
jbe
jg
sub
gs
mov
xor
adc
jo
cmp
cmpsb
movsb
pop
jo
sub
jmp
xchg
hlt
enter
in
daa
sub
popf
shrl
inc
mov
jne
adc
dec
clc
fwait
or
incl
jle
mov
sub
lahf
sahf
es
inc
and
mov
adc
push
jno
add
push
jg
vpmullw
xchg
sub
pushl
scas
jne
add
add
cmp
call
push
jb
mov
sub
inc
nop
cmp
arpl
ljmp
icebp
rcrl
daa
and
pop
divl
stc
ss
add
and
xor
mov
lcall
lods
iret
roll
mov
dec
fldt
mov
imull
push
jp
bound
and
push
or
jg
push
xor
outsb
sti
mov
fmuls
mov
or
push
cmp
mov
aad
xchg
or
lcall
and
mov
iret
jns
ljmp
cmp
inc
insl
movsl
icebp
sub
frstor
fs
repz
inc
add
outsb
movsb
xor
pop
clc
pop
arpl
addr16
add
ficoms
mov
sahf
xlat
inc
call
out
mov
test
fwait
xchg
pop
mov
mov
call
loope
movsb
xor
test
mov
sub
fldl2e
rcrb
adc
sub
lcall
fisttpll
repz
xchg
dec
mov
inc
xchg
adc
mov
ljmp
ds
sbb
loop
adc
mov
pop
ljmp
je
cld
pop
shrb
mov
inc
sti
adc
fistpl
and
cld
push
frstor
outsl
call
xchg
pop
outsb
sub
cld
adc
insb
icebp
xchg
pop
adc
inc
xchg
or
cmp
jge
and
ja
les
or
out
ja
arpl
jb
push
inc
adcb
ja
sbb
mov
cmpsb
adc
lcall
jg
shll
mov
dec
ja
das
loopne
mov
decl
aam
lods
ss
lahf
ret
mov
mov
call
stc
dec
adc
call
xchg
xchg
cmp
ja
jmp
in
xorl
into
scas
das
cli
jmp
pusha
mov
cmp
loop
xchg
aad
push
push
pushl
and
add
dec
ret
add
das
sbb
fs
push
inc
add
cmpsl
loopne
les
mov
mov
outsl
xor
lock
cmp
inc
imul
aad
testl
lock
fcomps
mov
pop
out
cmp
jmp
jns
pop
cltd
ja
pop
aam
fcompl
out
mov
sub
sbb
cmp
or
jl
decl
lock
dec
enter
scas
fnstenv
adc
orl
jmp
sbb
inc
pop
push
lods
push
mov
xor
loopne
adc
push
pusha
dec
xchg
push
call
dec
decl
xchg
add
cmpb
and
shrl
call
mov
popa
mov
lcall
sub
rorl
and
lds
pop
xchg
test
adc
fsts
fmuls
imul
pushl
jbe
es
aad
cmc
mov
lret
loope
lret
pop
fld
ljmp
lcall
xor
pop
ljmp
mov
xchg
mov
pop
mov
fisttpl
data16
jge
mov
xchg
adc
andb
lcall
imul
dec
stc
andb
xlat
insb
jae
dec
xchg
mov
push
cwtl
loop
sbbb
jg
call
add
jae
mov
loopne
mov
pusha
call
jle
mov
dec
dec
or
jo
sbb
fdivrl
outsl
test
cwtl
jl
imul
clc
jns
ret
and
mov
dec
jnp
xor
xlat
call
xor
les
inc
adc
xchg
dec
jmp
cmc
pop
test
ja
jg
incl
xchg
int
roll
addl
adc
inc
cli
inc
stos
in
int
out
out
js
ljmp
sbb
lsl
pop
mov
dec
jnp
aam
ljmp
pminsw
and
jge
and
cmp
mov
jmp
shr
pushf
adc
call
jo
and
mov
jmp
add
jp
pop
pop
iret
inc
daa
jb
mov
lcall
mov
add
inc
into
fwait
inc
aam
in
test
popa
sbb
sbb
cmovne
ljmp
sarl
cltd
jae
xchg
popa
or
jecxz
out
test
iret
xchg
pushl
pop
je
sub
mov
sub
shlb
mov
lock
sbb
testb
cmp
scas
aaa
push
sub
xor
daa
loopne
sbb
ret
aam
cli
call
scas
in
mov
xor
push
xchg
adc
mov
icebp
inc
pushf
lret
sbb
mov
sub
xorb
adc
inc
sub
fs
jmp
push
mov
sub
lahf
fstpl
pop
sahf
outsb
xor
je
test
pop
jne
dec
and
fs
std
dec
xchg
iret
xor
mov
sub
je
ja
loope
push
mov
jmp
cmp
sbb
adc
jo
mov
cmc
ret
push
mov
outsl
inc
and
in
xor
pushl
inc
iret
xchg
stos
cltd
imul
aas
sub
scas
popf
pop
paddq
push
jnp
aam
sbb
aas
xor
stc
mov
roll
and
cli
test
decl
and
icebp
gs
mov
cmpsb
pop
aam
ljmp
xchg
cmpsb
sbb
lods
fdivrl
inc
shlb
pusha
popf
pop
in
js
sub
ja
ljmp
fimull
mov
test
lret
inc
sbb
xchg
dec
js
jecxz
mov
pusha
mov
sub
mov
or
mov
sarl
dec
ss
cmp
imul
mov
pop
es
push
mov
xchg
data16
pop
leave
movsl
cmc
sub
add
push
mov
incl
push
in
lods
sub
inc
and
fwait
jnp
lcall
bound
aad
pop
pop
std
in
loopne
lcall
cltd
dec
jne
addl
adc
popa
mov
push
stos
xchg
dec
stc
stos
lahf
ficoml
sahf
push
dec
roll
lds
xchg
xor
test
add
ficoml
rcl
sysret
ds
aas
incb
sub
mov
pop
out
jg
dec
enter
push
imul
sub
std
rcrl
call
sub
jb
dec
pause
or
outsl
adc
iret
sti
lret
loop
clc
pop
out
cmp
sti
lea
cmp
loop
sub
push
and
add
shl
dec
jmp
xor
movsb
xor
push
sbb
inc
mov
pop
sahf
adc
jg
call
fnsave
jg
jnp
add
sbb
inc
fwait
jae
int
fisttpl
or
testb
xchg
dec
imul
stos
scas
dec
outsb
cwtl
cld
dec
push
pusha
out
push
mov
mov
jg
pop
popa
cmp
sbb
movsb
cmp
xchg
push
sbb
loop
cmovbe
add
mov
jg
loopne
clc
in
push
lcall
and
jge
test
mov
data16
cwtl
pusha
mov
jle
fbstp
lahf
js
pop
divl
push
out
mov
lods
jg
inc
loope
ret
or
cmpsl
and
mov
testb
cmp
sbb
decl
or
and
cwtl
popa
mov
ss
jno
outsb
leave
cld
sub
mov
inc
pop
aam
lret
test
jg
pop
loope
lods
pop
inc
mov
incl
pushf
pop
sbb
js
outsl
xor
cwtl
jmp
out
jp
call
sbb
aad
mov
stc
pop
insb
dec
jbe
or
repnz
sub
stos
hlt
add
sub
jg
xchg
xor
aam
push
jno
mov
mov
sbb
sbb
inc
repz
ljmp
add
rclb
hlt
cld
xchg
in
rcr
dec
testl
jns
sub
lods
jno
cmp
jmp
rcrl
cs
inc
cvtpi2ps
add
pop
stc
arpl
pushl
movl
lods
fnstcw
and
pop
mov
stos
and
xchg
das
sar
test
push
cmc
pop
push
movsl
movsl
lods
shlb
inc
jmp
incl
or
pusha
int
adc
mov
push
cmc
pop
fs
in
sub
outsl
xchg
pushf
pusha
mov
sahf
and
fcomps
imul
add
dec
test
loopne
dec
push
mov
or
out
clc
repnz
jecxz
int3
push
movsb
lahf
or
insb
rcrl
sub
dec
out
decl
mov
add
jns
aad
nop
test
in
fwait
adc
xor
ljmp
adc
mov
lcall
sahf
xor
xorb
xor
decl
test
or
mov
inc
sub
xchg
push
imul
cld
or
cmpb
aad
jl
jg
call
addr16
insb
dec
sbb
in
outsb
inc
or
jnp
dec
mov
sti
and
cs
call
movsb
gs
cli
cmovle
leave
push
imul
jmp
add
call
pop
xchg
adc
insl
dec
popf
rcll
ljmp
jb
lcall
test
xor
outsb
xor
cmp
fcmovnb
test
in
pop
shll
jmp
sub
shll
sbb
inc
jb
ds
xorb
xchg
xchg
mov
pop
adc
decl
test
in
mov
es
xor
aam
sti
aaa
lcall
fcoms
jns
push
nop
pop
pushf
cmp
stos
push
push
sub
jg
push
pushf
das
mov
data16
add
test
dec
addb
pop
adc
inc
jne
pop
bound
fs
insl
xor
int
subb
gs
jno
sti
and
or
scas
ret
mov
call
jb,pt
dec
pop
dec
fistpl
mov
mov
jno
int3
mov
jbe
insb
cmp
mov
push
adc
pop
pop
out
sbb
pop
filds
dec
or
add
fs
ljmp
rcrb
pop
mov
add
xor
adc
mov
pushl
std
push
jl
cld
clc
cld
dec
xlat
sbb
or
mov
nop
cmp
ljmp
pop
gs
iret
loop
xchg
scas
jge
repnz
mov
cltd
movsl
inc
scas
out
lcall
sub
andb
subl
dec
pop
dec
dec
sti
shl
mov
mov
lock
in
push
inc
fs
pop
jb
sar
sub
mov
loopne
and
dec
xor
jmp
pop
cmp
aaa
xchg
sub
out
loopne
adcl
nop
sub
pop
pop
fyl2x
daa
mov
lcall
jmp
ss
jb
push
xor
adc
nop
pop
dec
js
shll
jmp
fs
push
inc
cwtl
or
mov
rorl
adc
aaa
aad
dec
insl
fcomip
or
sub
mov
sahf
add
and
das
decl
xchg
ljmp
ljmp
cmp
ss
repnz
into
cld
push
ljmp
sub
and
push
and
rcrb
loope
icebp
lret
sbb
js
rorb
fnsave
mov
aas
pusha
cwtl
movsb
dec
jle
fst
fsts
fsubrs
ljmp
rcrb
es
inc
mov
xchg
adcl
inc
and
incl
in
lods
cmp
mov
xchg
adc
popa
repz
push
sbb
insl
jnp
inc
push
cs
call
mov
inc
push
std
imul
mov
outsl
cmp
adc
call
les
int
xlat
imul
pusha
aas
jo
cmp
dec
nop
sahf
xlat
or
arpl
mov
pop
xor
pushf
and
clc
inc
inc
int
mov
ja
sbb
punpckhwd
in
out
loop
test
mov
push
jmp
mov
lods
add
sub
pusha
or
int
cli
scas
pop
cmp
movb
in
aad
incb
pop
and
add
mov
xchg
lcall
outsb
add
and
je
jae
pop
rcll
cmp
fcoms
cmp
outsb
popa
pusha
ss
enter
orl
mov
xlat
push
ja
loope
imul
es
sarl
stc
xchg
sar
incl
cwtl
sbb
sbb
push
push
pop
loopne
dec
mov
push
arpl
lods
out
jbe
push
push
je
or
add
sahf
stos
out
inc
or
int
cmpsl
jge
test
xor
jle
cmp
push
or
xor
push
mov
loope
ljmp
popa
dec
jo
loop
sbb
out
xor
mov
divb
and
outsl
dec
mov
iret
jne
and
inc
test
mov
inc
push
add
xchg
and
icebp
lods
cli
mov
addr16
xchg
sbb
push
ds
jb
add
add
movsl
cltd
outsb
mov
sti
adc
add
sti
repz
movsb
mov
ret
cltd
xchg
and
and
iret
sbbl
lods
rol
xchg
mov
ljmp
ja
stos
das
mov
in
mov
fidivl
pop
sti
fnstcw
mov
jns
add
pushl
mov
mov
sbbb
lods
jmp
jne
ja
xchg
aaa
adc
repz
aad
adc
call
cwtl
repnz
ds
xlat
push
push
pop
sbb
stos
push
mov
js
mov
pop
loopne
hlt
push
dec
or
dec
mov
inc
xor
xor
ljmp
and
lock
enter
ljmp
dec
xchg
imul
cmp
fistl
xor
push
rorl
push
mov
ljmp
fsubrl
cwtl
in
fcmovu
dec
scas
mov
call
cmp
mov
loopne
fisubrl
inc
into
cmp
pop
ja
stos
fnstenv
xchg
adc
or
decl
inc
scas
clc
or
xor
add
in
mov
mov
sbb
mov
les
ljmp
cmp
push
push
andl
cmpsl
cld
incl
add
xchg
sbb
mov
add
sbb
push
pop
sbb
add
add
gs
add
or
xchg
ja
movsl
fdivrs
jmp
sub
and
scas
and
lock
pop
mulb
jmp
sahf
dec
mov
aaa
mov
bound
adc
sub
mov
push
popf
cmp
sti
dec
jmp
cmp
rorb
addr16
push
in
inc
mov
out
adc
jmp
ss
inc
and
popa
lcall
xchg
fidivrs
ret
ss
aad
shl
push
flds
test
jecxz
add
mov
popf
and
mov
adc
and
decl
fdivr
ds
jbe
sub
nop
int
xchg
push
loopne
or
cmc
xchg
incb
sar
push
test
jne
out
jge
xor
jo
adc
in
jmp
call
je
or
jp
in
mov
pop
mov
out
adcb
outsb
xor
jne
test
jb
incl
sbb
jne
iret
xchg
pop
shlb
jge
mov
je
xor
sbb
push
mov
add
ja
sub
ret
xchg
jl
add
mov
jle
xor
std
pop
fdivr
pushl
fidivrl
adc
cld
pop
push
mov
adc
in
add
daa
stos
push
sub
ja
fcomip
sti
cld
or
mov
fisttps
xlat
dec
mov
das
jmp
add
sahf
das
out
sub
mov
inc
mov
ss
incl
xlat
jno
aas
iret
clc
cmc
adc
inc
cli
pop
sbb
mov
and
mov
adcb
and
jmp
add
inc
sbb
or
ja
xor
cli
aas
addl
lcall
ljmp
and
lods
fwait
cld
add
mov
xchg
lcall
shr
aad
mov
pushl
int
leave
sub
aad
push
pop
cmc
add
gs
and
jmp
jecxz
int3
pop
aas
gs
fisttpll
lret
jbe
call
test
mov
xor
xlat
lcall
clc
dec
jmp
das
aaa
mov
out
mov
pop
xlat
ljmp
mov
int3
js
incl
cmp
les
incl
lock
leave
or
jne
push
xchg
leave
pop
mov
enter
ljmp
inc
mov
je
and
loop
push
outsl
cmp
dec
push
pop
in
outsl
push
mov
leave
push
sbb
call
sbb
jb
cld
mov
imulb
scas
dec
sbb
sub
call
sbb
cltd
inc
pop
cmp
int
lock
jmp
rcr
call
push
mov
fucomip
lret
push
call
and
arpl
lcall
icebp
lahf
xchg
rorl
push
mov
andb
rcr
and
xchg
push
in
add
cmp
mov
cmp
jp
push
outsb
rcl
loope
std
test
stos
lcall
cmpsl
mov
xlat
xor
sub
or
stos
or
test
lcall
dec
mov
loopne
cld
lret
or
or
add
push
je
stos
jge
les
rcrb
push
mov
push
cmp
push
clc
pop
gs
ss
ljmp
movsbl
aam
push
movb
call
jl
je
pushl
cs
mov
add
push
insb
jmp
in
xor
hlt
nop
loopne
add
jl
mov
aaa
jg
jne
sub
dec
jg
or
xchg
jne
mov
xchg
pop
dec
pop
lcall
in
jle
repnz
mov
mov
push
jae
mov
out
xor
and
sub
xor
lcall
jbe
stc
xchg
push
les
aad
add
addl
pop
pop
fsts
push
adc
lcall
inc
jbe
push
fcmovu
sbb
js
sub
xlat
adc
leave
dec
push
jl
add
ljmp
insl
and
lcall
sub
sarl
repnz
cli
fnstenv
pop
inc
enter
and
cmpsb
and
xor
sub
rcrb
and
pop
lods
ja
adc
mov
dec
les
xor
sahf
hlt
xor
xor
mov
mov
loopne
ror
bnd
sub
ja
jno,pt
inc
ljmp
bnd
add
jmp
jmp
lret
add
frstor
push
push
sbb
pop
pusha
js
inc
jb
cld
in
dec
lret
xchg
sub
mov
jl
iret
insb
in
xchg
xchg
mov
pop
out
lock
adc
lahf
sbb
fsub
fcomip
or
imul
xlat
mov
call
loope
clc
incl
sub
xchg
push
addb
or
sbb
fidivrs
adc
mov
mov
xor
adc
pop
dec
stos
pusha
out
mov
dec
xor
jge
push
mov
push
iret
cmp
leave
shr
dec
sub
xor
xchg
mov
mov
incl
sub
insb
aad
xor
adc
popf
imul
fmuls
dec
mov
xchg
mov
sbbl
adc
gs
loop
imul
incl
dec
orl
xchg
add
pop
stos
out
mov
lahf
ret
in
mov
lret
stos
pop
out
dec
adc
and
add
cmp
cmpsb
mov
fsub
or
xchg
inc
jl
mov
test
lcall
inc
in
loope
cmp
jns
outsb
int
cmp
negb
cmpsl
ja
fwait
cltd
inc
jg
dec
and
jne
repnz
dec
add
loope
mov
inc
xor
es
lcall
pushf
movsl
stc
stos
mov
add
gs
dec
or
dec
sbb
icebp
inc
and
testb
decl
or
rorl
sbb
loop
loop
adc
stos
std
es
or
and
fnsave
mov
adc
cmpsl
fldt
popl
mov
push
loope
dec
test
pop
inc
lret
loope
xor
mov
mov
lods
jne
adc
bswap
imul
insb
int
fisttps
jb
les
jne
pop
leave
in
jmp
cmpsb
lea
mov
push
lock
adc
mov
push
pop
orb
cmp
test
or
push
xor
push
jno
fisubrl
imul
les
push
aam
push
add
call
inc
xchg
jecxz
jno
or
imul
pop
test
pusha
push
fimull
aad
call
lret
loop
push
xchg
pop
add
push
jmp
lea
jge
ljmp
cmp
test
jp
cld
gs
bound
in
stos
pop
int3
jbe
imul
pop
cwtl
dec
lods
or
fcompl
enter
adc
scas
xchg
cltd
cltd
pushl
jg
mov
mov
pop
push
mov
mov
ljmp
imul
push
mov
testb
sbb
fprem
push
inc
mov
clc
bound
jb
mov
hlt
cmc
pop
sub
pop
add
ljmp
test
cs
scas
out
movsb
sti
leave
int
pusha
les
nop
push
jmp
xchg
mov
sub
jbe
call
mov
jl
clc
and
inc
cmp
mov
inc
cltd
xchg
cs
add
fld
clc
dec
pop
aam
mov
jge
hlt
call
or
mov
mov
and
mov
push
leave
pop
lcall
fists
cmp
pcmpeqw
mov
jmp
adc
inc
push
out
mov
incb
call
mov
ret
and
add
xor
xchg
and
push
loope
pushl
call
mov
jge
jo
xor
lea
shr
mov
in
call
fldenv
shl
rol
inc
arpl
repz
jb
cld
fcmovu
sbb
ss
iret
cmp
decl
sarb
adcb
push
repnz
sub
jge
je
pop
cmc
decl
aaa
dec
jae
rclb
ljmp
xor
test
push
outsb
pop
mov
loopne
ljmp
jg
xchg
fstpl
and
mov
iret
and
jl
or
stc
pop
jb
repnz
decl
out
push
and
inc
pop
enter
push
inc
mov
sub
out
loop
js
call
dec
mov
popf
mov
addr16
or
fcoml
cmp
add
lds
cld
sub
jmp
test
mov
loopne
pop
pop
mov
cwtl
cwtl
ljmp
decb
adc
outsl
decl
mov
and
in
mov
int3
outsl
mov
dec
lods
insb
dec
adc
lret
rdseed
cmp
jns
mov
out
aam
jl
js
xor
jge
cmpsl
sub
rorb
push
maskmovq
negl
ljmp
andl
mov
imul
orb
pop
lea
imul
add
lcall
dec
sbb
lds
aas
xor
loopne
add
mov
mov
jge
ret
jl
pushl
sbb
inc
xor
xchg
mov
cmp
ret
loop
xchg
jnp
mov
dec
sub
sbb
sub
ljmp
into
fst
xor
mov
push
xchg
orl
pop
adcl
inc
imul
xchg
mov
cs
xchg
in
repnz
sbb
sub
outsb
add
fs
in
mov
jb
pop
outsl
add
lds
push
dec
ret
push
cmp
call
data16
jno
mov
fidivs
out
mov
xchg
xor
xlat
sti
test
mov
js
clc
mov
inc
push
mov
mov
mov
aad
pop
pop
out
mov
arpl
das
pop
shll
cmp
xchg
sub
adc
mov
cmp
idivb
sub
mov
cmp
adc
adc
mov
test
add
or
imul
mov
mov
pushf
arpl
jmp
and
pushl
mov
pop
inc
filds
and
cmp
ds
add
sub
jo
scas
inc
lds
stc
test
js
dec
mov
pushf
push
or
mov
pop
addb
rolb
incl
dec
push
xchg
jg
fbstp
pop
insb
jb
je
out
jp
sti
jae
jmp
or
sar
dec
push
cmpsl
add
aam
xchg
jnp
xor
aaa
dec
dec
mov
jle
and
rolb
call
mov
test
in
or
mov
stos
push
xor
adc
jg
jge
sbb
neg
mov
daa
stos
jae
ja
aas
leave
mov
lock
sar
out
push
mov
jae
xchg
dec
rcl
dec
jae
push
out
inc
aam
lcall
fstp
push
mov
inc
lcall
add
xchg
adc
in
adc
incl
fsqrt
push
rcll
je
jle
js
mov
movsl
divb
in
bts
mov
fmuls
rcrb
test
incb
cli
push
jge
mov
cwtl
and
scas
aas
stc
push
cs
fldt
push
test
mov
inc
fstps
sub
idivl
dec
push
popa
mov
int3
push
sbb
xchg
add
and
ret
dec
pop
ficomps
xchg
pop
insl
pop
loop
inc
sub
jg
rcll
lret
ja
decb
ret
popa
into
add
jmp
and
jmp
test
or
lret
in
add
loop
push
push
aam
incl
pop
call
insb
xorl
and
xchg
xchg
and
mov
mov
pop
loopne
jmp
inc
inc
mov
ss
jns
shrb
mov
stc
jo
cmc
call
dec
sub
cli
mov
push
cwtl
push
popf
mov
fildll
cld
pop
and
ja
sbb
insb
sarb
test
out
mov
hlt
out
inc
xor
mov
in
inc
xor
rcll
mov
sub
inc
inc
push
pop
jle
xor
cs
inc
adcl
sbb
cmp
add
jmp
rol
jnp
push
adc
loop
dec
lcall
cld
mov
ljmp
mov
test
in
jb
cmp
outsl
cmp
outsl
cmp
out
xchg
gs
push
sub
add
dec
fdivl
mov
xchg
loope
jae
incl
out
lods
or
test
daa
jge
pusha
fistpl
cwtl
pop
add
lcall
pop
jmp
cwtl
adc
cmpsl
inc
jns
add
ret
and
mov
pushl
out
pop
loope
icebp
push
cmpsb
sub
cmpsl
xchg
xchg
cltd
push
and
mov
dec
sbb
mov
lcall
or
jb
xchg
cld
push
movsb
push
jae
jae
outsb
loope
sub
xor
call
xchg
xchg
sbb
sbb
outsl
insl
sub
rorl
mull
mov
mov
xor
jmp
sub
xchg
dec
jno
jl
mov
sbb
in
and
insl
inc
das
pop
paddw
outsl
cli
push
xchg
clc
pushf
les
mov
idivl
xchg
mov
or
ljmp
sbb
pop
jecxz
adc
jne
jl
fistpl
repnz
adc
mov
data16
cmp
ljmp
adc
push
sbb
jns
fildll
daa
les
aam
mov
lcall
and
fdivrl
lcall
leave
in
sbb
dec
lahf
decb
fcoms
jo
inc
add
incl
outsb
mov
int
insl
mov
push
pop
lea
pop
pop
loop
leave
mov
adc
les
test
add
sahf
and
xchg
lods
les
decl
repz
jle
cmp
rcrl
popf
in
ljmp
jo
inc
sub
mulb
ljmp
lds
xchg
shr
mov
repnz
jns
fimuls
cld
sbb
xchg
nop
test
sbb
test
adc
imul
lods
or
jae
int3
into
inc
and
fwait
mov
movsl
adcl
js
fdivrp
push
lock
push
adcb
push
decl
test
sti
rcrl
mov
stc
decl
mov
out
lock
jge
xchg
push
popf
outsl
icebp
push
pop
or
jne
popa
cmc
mov
ds
out
xchg
mov
dec
fcomip
inc
mov
ljmp
into
pop
pop
imul
mov
and
decl
sbb
mov
mov
imul
out
dec
lcall
das
movsl
cmp
aaa
cld
cmp
das
rcl
call
xchg
push
xchg
push
imulb
fbld
daa
in
adc
lret
pusha
sub
arpl
jmp
mov
repnz
pusha
pop
out
clc
je
mov
cmc
pop
mov
std
jo
jge
sar
cld
lods
adc
jmp
mov
sete
repnz
pushf
push
dec
das
sbb
ret
sub
sbb
push
fsubp
decl
push
ljmp
in
test
and
sbbb
call
decl
mov
or
pop
sahf
xor
inc
fldl
insl
aad
xchg
cmp
les
lcall
mov
cwtl
cmc
insl
pop
mov
mov
out
ljmp
fdivrs
cs
insl
jbe
out
arpl
movsl
cmp
ds
inc
sbb
mov
stos
js
jne
int
mov
sbb
pop
dec
sub
call
aad
cmc
and
mov
jl
push
cwtl
pop
in
sub
pusha
outsb
scas
cs
mov
incl
xchg
or
std
insl
jo
fsubs
and
pusha
sarl
repz
mov
shl
decl
ljmp
inc
div
adc
sbb
jl
lock
sub
fsubrs
scas
call
and
mov
mov
sbb
into
cmp
lcall
decb
std
repnz
mov
sbb
mov
fiaddl
cmp
mov
stc
pop
stos
mov
cmp
mov
mov
daa
or
sbb
cmp
or
xchg
outsl
inc
imul
push
or
mov
lret
jbe
mov
fnsave
pop
stc
rol
mov
mov
cmpsb
pop
pop
sti
pop
or
rcl
subb
sbb
lcall
fimull
fnstcw
xchg
adc
jno
cltd
aas
fistps
mov
enter
push
mov
push
icebp
lock
bound
mov
fisttps
loope
scas
inc
mov
fisubs
pop
or
push
push
lcall
jns
aaa
dec
mov
jns
dec
jge
adc
sbb
or
push
jb
sarb
pop
ljmp
mov
das
sub
flds
clc
imul
lret
jmp
int
push
sub
or
roll
pop
jmp
mov
stos
int
fsts
aaa
mov
or
loop
xchg
and
cmp
cld
aam
clc
jge
push
repz
xchg
jp
icebp
mov
pop
out
fists
mov
push
jg
in
xchg
sub
cmp
aad
inc
lcall
int3
rcr
sbb
repnz
ljmp
clc
decl
push
movsl
push
mov
andb
mov
xchg
or
aam
decl
push
adc
mov
cmp
dec
fwait
or
xchg
repz
gs
push
stc
jbe
xchg
call
or
loop
jl
shl
push
in
out
cmp
aad
push
pop
adc
cmp
jb
outsb
xchg
pushl
sbb
lea
lock
std
sbb
sub
xor
pushf
sbb
pop
sbb
incl
scas
ja
cmpsb
insl
cmp
rolb
insb
loop
sbb
pushl
fcomi
loop
mov
push
das
mov
cmp
fdiv
gs
out
push
pushl
push
jmp
hlt
movsl
dec
out
push
xor
popa
xchg
and
data16
jg
scas
outsb
xchg
add
iret
bound
movsb
and
clc
jmp
in
test
mov
aam
push
jp
mov
fwait
decl
out
add
out
fnsave
xchg
jb
fs
aaa
or
je
push
pushf
dec
mov
push
scas
aas
test
mov
and
dec
clc
gs
dec
adc
pop
pop
test
ds
pop
call
sub
or
in
xor
jns
scas
push
adc
mov
pop
jg
mov
sub
test
sahf
lock
pop
mov
jne
movsl
lcall
sar
ret
xor
dec
push
and
sar
cmpsl
adc
insb
std
mov
inc
rcr
test
aas
lcall
call
fnstenv
or
mov
jb
shlb
incl
pusha
pop
lret
insb
sbb
add
scas
addr16
xchg
adc
outsl
jp
or
lock
dec
mov
ljmp
outsb
jmp
test
into
in
test
int
dec
and
int
fldenv
out
push
adc
sahf
adc
xchg
outsl
movsb
xchg
mov
push
mov
sbb
decl
scas
sbb
es
cli
mov
mov
sahf
enter
jmp
xor
lcall
fnstsw
xor
jmp
pop
rorb
pop
add
call
ljmp
pushl
xchg
or
inc
stc
push
or
dec
push
mov
jne
add
xlat
incl
stos
rcl
inc
lahf
shrl
pushf
jg
xor
jnp
call
push
dec
or
mov
stos
inc
aaa
loope
sarb
dec
pop
das
cmpsl
pusha
inc
push
leave
pop
out
decl
inc
cmp
cmpsl
into
lea
pop
stc
sub
mov
push
lock
add
inc
sbb
adc
bound
fisubl
cli
movsb
or
jp
movsl
gs
jmp
loopne
ljmp
xchg
xchg
pop
adc
inc
xchg
xchg
push
mov
jo
mov
stc
sub
dec
add
mov
mov
call
inc
out
push
pop
cmpl
divl
lahf
dec
mov
adc
mov
xchg
fiaddl
clc
adc
jge
or
ret
mov
hlt
cmpsb
iret
and
push
sbb
lds
push
call
cmp
pop
lcall
mull
xor
pop
mov
mov
pushl
mov
cmp
mov
jecxz
push
ret
xchg
scas
sarb
pop
scas
dec
aad
movsl
or
xlat
into
jo
inc
pop
adc
ja
jg
push
insl
jne
std
push
mov
cmpsb
js
insb
cmp
daa
add
xor
inc
xor
add
inc
xor
in
js
dec
push
popa
or
mov
adc
dec
and
push
out
and
xor
loope
sahf
mov
cmp
xor
dec
test
jmp
jbe
and
or
ret
test
int3
xlat
add
out
in
pop
scas
add
jmp
shll
in
popa
fdiv
mov
repz
jmp
pop
das
inc
daa
dec
push
mov
orl
inc
add
xchg
push
inc
cld
incl
mov
cwtl
push
sbb
dec
add
shll
loope
sbb
mov
int
pushl
jbe
xchg
xor
rcl
add
movsl
jae
imul
vmread
cmp
adc
pop
jns
cmpl
cltd
lcall
jae
incl
cmp
jp
ljmp
xor
repnz
vmaxsd
call
cld
out
loop
sbb
lock
cmp
movsl
xchg
ret
and
lcall
pop
mov
add
dec
in
or
cmp
mov
test
call
inc
std
daa
pop
mov
daa
lret
popf
fiaddl
push
pop
dec
pop
add
call
pop
mov
add
cmpsl
loope
mov
xor
test
mov
imul
mov
ret
ja
mov
les
cmpsl
fnsave
cmp
push
add
ljmp
in
mov
inc
je
sbb
cmp
int3
mov
sbb
pop
call
shlb
outsl
sahf
mov
mov
aad
loopne
mov
push
mov
mov
inc
dec
inc
fcomip
inc
add
lret
leave
ss
push
sub
add
das
jle
je
inc
fcomip
mov
es
sub
sub
xchg
jl
movl
jge
fsubs
repz
sbb
xor
push
fsts
testb
fmull
nop
cmp
stc
mov
and
sbb
int3
popa
jnp
movsb
fimull
mov
rol
cmpb
or
adc
adc
jnp,pt
inc
enter
mov
pop
jp
jns
repz
subl
clc
xor
dec
mov
mov
add
sbb
jns
mov
data16
divb
sbb
ljmp
inc
mov
enter
test
sbb
cs
imul
jl
sti
jo
dec
mov
or
or
dec
add
fidivl
popa
lcall
ret
dec
es
call
popa
bound
fwait
jae
add
push
subl
jecxz
inc
sbbl
cmp
fldenv
andb
movsb
gs
cli
adc
adc
ljmp
cli
adc
push
mov
or
sub
or
xchg
test
lcall
mov
js
push
jne
mov
mov
pop
sbb
or
push
loope
xchg
aas
add
push
movsb
lret
cmp
xor
push
loop
ds
jmp
mov
fnstcw
dec
inc
in
mov
fsubrs
cmpb
fcomps
push
dec
movsb
mov
imul
dec
push
xchg
in
pop
adc
add
adc
out
mov
inc
xchg
jbe
inc
xor
ret
addl
jmp
sub
imul
ljmp
lret
push
inc
push
repnz
add
ss
cmc
test
rorl
adc
jnp
add
xchg
push
mov
lods
or
std
pop
push
or
insb
mov
bound
pop
call
cld
incl
arpl
add
push
scas
ret
pushf
dec
jne
sub
mov
adc
aam
decl
call
mov
xor
fwait
and
in
add
shll
pushf
in
pusha
add
ds
sub
mov
ljmp
pop
fimull
and
push
les
aam
aas
inc
aad
das
cli
aas
int3
int
test
imul
mov
cmpsl
mov
pop
ljmp
pushl
ret
lahf
cli
sub
mov
fwait
xchg
repnz
vpminub
sub
jmp
cmp
das
dec
mov
out
jp,pn
mov
cmp
dec
cmp
dec
lcall
call
xchg
add
and
cmpsl
jno
jae
lahf
jne
adc
mov
xor
cltd
clc
movsb
mov
scas
clc
decl
mov
push
mov
sbb
subl
or
mov
inc
xor
outsb
sbb
xlat
insl
push
sub
outsl
inc
xchg
sub
fisubrl
dec
mov
xchg
repz
inc
into
pop
js
cltd
or
scas
fistpl
sub
data16
push
ficoms
inc
push
shr
push
or
arpl
fsubrs
jge
outsl
and
xchg
cltd
xchg
add
test
ljmp
adc
push
repnz
cwtl
and
divb
insb
and
push
pop
movsb
dec
mov
or
test
imul
or
pushl
and
push
jb
cmp
in
invd
repz
push
cmp
cld
out
jbe
push
shlb
xor
test
inc
fisttpl
ljmp
dec
hlt
jmp
fsubrl
icebp
leave
cmp
ljmp
lcall
adc
decl
cmp
mov
adc
lret
test
inc
shlb
inc
and
insb
pop
dec
pop
lea
nop
incl
and
xor
push
pop
dec
sub
mov
int
adc
or
and
push
fmul
ljmp
add
mov
mov
mov
cmp
jle
lret
lahf
repnz
enter
jmp
incl
loopne
push
rclb
xchg
xor
mov
pop
inc
ret
push
loop
call
add
loopne
fwait
push
fcomp
imul
lret
sbb
sti
mov
loope
mov
sub
and
scas
les
lea
pushf
push
ljmp
add
cmp
sar
push
mov
clc
mov
jae
fimull
ljmp
push
aas
lret
jg
push
std
mov
cmp
pop
pop
or
dec
xor
bound
or
or
push
in
fcos
jmp
cltd
mov
mov
xor
int
mov
outsl
cmp
xchg
in
xchg
jecxz
jmp
fs
aas
fwait
int3
xor
sbb
pushf
out
je
inc
jg
inc
push
ret
call
inc
jl
cmp
adc
stc
mov
mov
pushf
rcrb
jg
insb
cmp
mov
test
pop
inc
sbb
mov
mov
fidivs
sub
icebp
incl
xlat
js
arpl
jle
jno
lea
push
push
sub
pop
mov
and
xchg
dec
xor
mov
mov
mov
fdivrs
test
outsl
call
adc
loop
jne
movsb
rol
subl
sbb
ja
call
ja
cmpsb
adc
in
xchg
jae
scas
mov
ljmp
inc
push
mov
fsubp
push
dec
dec
sub
cmpsb
data16
fmuls
scas
jp
jge
add
push
pop
icebp
nop
jle
sbb
cmpsb
sub
pop
xchg
fisttpll
and
dec
jmp
shll
add
xchg
xor
ficoms
pusha
xchg
adc
mov
sbb
lock
pushl
pop
outsb
jb
lret
sbb
mov
jnp
cmp
dec
pusha
call
mov
push
test
in
mov
mov
sbb
loopne
les
ret
fcomps
mov
pushl
adc
mov
jp
std
cmp
or
stos
mov
xchg
jle
mov
dec
cmp
mov
inc
loop
test
sbb
rol
cmp
incl
xor
insl
lds
pushf
mov
pop
je
cmp
or
cmp
es
dec
push
call
xor
xor
dec
cmp
xor
inc
clc
incl
or
imul
fiaddl
cwtl
aam
in
addr16
rolb
jo
jo
push
loop
call
adc
mov
dec
in
jle
lods
data16
lret
mov
ja
inc
cmp
insl
sbb
add
aaa
fwait
test
aam
in
jbe
call
xor
jle
repz
push
subl
in
add
xchg
andb
mov
mov
loop
out
mov
in
mov
and
inc
xlat
push
xor
dec
jae
jp
xchg
inc
or
lea
mov
sbb
sub
cmpsb
and
inc
pusha
push
xor
mov
dec
xchg
and
inc
mov
mov
incl
and
leavew
nop
aas
popa
push
mov
dec
jp
fldenv
outsb
xor
leave
and
cld
call
insb
shlb
sarl
sbb
enter
mov
inc
push
sub
ja
xor
mov
je
insb
stc
push
mov
cmp
or
call
out
jp
jbe
mov
test
je
push
jg
inc
pop
daa
in
mov
push
call
xchg
dec
or
xor
les
incb
fcoml
sub
cmp
call
rolb
add
das
les
mov
rcrb
decl
jae
dec
rclb
daa
leave
jnp
jbe
cwtl
pop
sbb
jg
stos
or
pop
xchg
adc
popf
sbb
pushf
insl
cmc
imul
jae
jmp
mov
cmp
cwtl
aas
fldl
imul
sbb
mov
push
push
gs
sahf
popf
pop
cmp
mov
testb
je
into
sub
jmp
ret
daa
cmp
out
clc
cmp
jmp
jl
xor
sub
and
bnd
jmp
out
enter
mov
lods
mov
out
pushl
mov
push
push
and
lcall
stos
lods
mov
gs
adc
sbbb
incl
pop
sbb
sbb
dec
mov
inc
pop
mov
in
out
inc
fisubl
mov
push
leave
add
je
jae
pop
xchg
dec
js
mov
cmpsl
ja
cmp
ret
das
sbb
ljmp
aad
and
sbb
cmpsl
push
xadd
and
inc
arpl
inc
sub
dec
mov
aad
and
mull
jp
daa
cld
inc
add
dec
xchg
bound
incb
adc
jge
jb
mov
loope
insl
cltd
bound
jp
xchg
inc
cli
jp
inc
movsl
dec
mov
jmp
pop
clc
mov
lock
pop
sarb
xchg
cli
cmp
dec
outsl
sub
rol
out
dec
outsb
cmp
in
mov
mov
xchg
outsb
push
or
into
neg
movsl
mov
mov
imul
inc
push
out
cli
das
sbb
or
pop
lret
pop
push
decl
fdivl
push
mov
jg
mov
sub
jp
ljmp
pop
pusha
mov
sahf
aas
ljmp
mov
jne
movsl
dec
sbb
push
push
sti
cld
dec
adc
test
call
rcll
sbb
shlb
mov
test
and
incl
pop
sub
adc
ret
push
into
aad
jnp
ss
cwtl
mov
hlt
inc
dec
repz
push
ljmp
mov
and
mov
pop
sbb
mov
pop
cltd
mov
pushl
cmp
cmp
cmp
in
mov
xor
inc
fs
lods
fadd
dec
es
ljmp
mov
fs
jno
jae
aam
iret
insl
sbb
sub
mov
popf
xchg
dec
ljmp
loope
sarb
imul
pop
std
pop
sbb
push
push
and
xor
call
push
call
jb
data16
xor
test
fistps
into
inc
call
sub
imul
mov
add
push
popf
push
scas
jns
lods
or
in
sbb
call
faddl
dec
adc
cli
inc
negl
sub
lcall
jp
fdivr
pushl
mov
mov
shrl
stos
cld
jnp
inc
repz
push
daa
push
jmp
add
mov
pushf
xor
push
jno
ljmp
ret
push
into
push
fisubl
stos
lcall
idiv
xchg
push
pop
sahf
xchg
add
push
sbb
xchg
loop
mov
pop
mov
scas
and
std
push
sbb
dec
in
ds
inc
xor
and
push
int3
jnp
mov
insl
fiaddl
ljmp
jno
mov
movsl
lods
push
fcmovne
adc
sub
inc
dec
out
mov
sbb
inc
lret
pushl
mov
mov
sub
into
shlb
cs
push
cmp
ljmp
mov
sub
xchg
loop
loope
data16
xchg
stos
mov
scas
jne
fwait
push
iret
xor
xor
ljmp
xchg
push
mov
add
add
into
pop
repz
cmp
outsb
fbstp
scas
push
inc
stos
rolb
fidivrl
pushf
lahf
push
mov
nop
mov
sub
jmp
jo
repz
sbb
push
clc
inc
cwtl
push
insb
xchg
outsb
stc
jmp
es
dec
mov
adcb
stc
call
pop
pusha
dec
jbe
ss
jecxz
ds
stos
xchg
add
out
sbb
leave
sbb
test
into
push
jno
ss
sbb
movsb
adc
in
aas
mov
popa
add
movsb
fstpt
test
sub
fdiv
in
push
mov
and
dec
sarl
sar
jmp
cmp
pop
repnz
ljmp
push
repz
fmuls
enter
and
mov
mov
lods
add
jbe
fmul
push
pop
lods
nop
repnz
sbb
jae
jnp
sub
pushl
add
pop
xor
insb
sbb
jbe
mov
mov
aas
jns
std
add
cmp
imul
icebp
sbb
cmp
pop
inc
cltd
xchg
push
movsb
insb
out
xor
lcall
jecxz
xchg
mov
cmp
inc
pop
xor
pop
popf
inc
call
lcall
mov
mov
out
fisubrl
adc
inc
add
fidivrl
ja
cmp
arpl
xchg
ljmp
or
sub
dec
adc
je
jecxz
or
cli
cmpsl
aaa
decl
repz
xor
jle
stos
enter
inc
dec
mov
lcall
jecxz
dec
outsb
popf
ljmp
sbb
ja
push
and
mov
pop
push
push
jnp
push
sub
decl
sti
clc
sub
mov
subb
lods
daa
xchg
add
jge
fildll
cmpsb
jne
sti
add
clc
das
push
movsl
int
xor
xor
pop
lret
scas
jg
pushl
mov
inc
dec
pop
lea
std
mov
ja
lcall
sahf
pusha
outsb
subb
out
scas
pusha
jb
adc
fmull
or
cmp
mov
in
lahf
icebp
cwtl
sbb
lcall
sub
test
cmp
xchg
mov
cmpsb
ljmp
or
jmp
mov
pop
sub
addl
out
or
addr16
popf
jo
push
fistpl
incl
cmpsl
pop
cmp
in
cmc
pop
push
fsubrs
push
xlat
cmp
lret
out
fwait
mov
decl
xor
xlat
ljmp
push
ja
pop
add
pop
pop
int
xor
mov
ljmp
add
mov
mov
dec
stc
div
daa
ljmp
shll
test
pop
mov
mov
and
lret
insl
push
mov
sub
test
aam
sub
xchg
push
aas
ljmp
or
pop
push
aaa
ss
mov
aam
call
dec
in
shll
xor
inc
pop
push
mov
inc
dec
ja
enter
test
lock
decl
das
nop
es
or
in
jnp
xor
test
lahf
push
jnp
xor
call
push
xlat
push
into
roll
pop
data16
adc
out
lret
inc
je
xchg
out
and
lcall
cmp
or
or
aas
push
arpl
std
cmp
out
mov
ds
dec
fdivrl
mov
dec
cmpsb
fldl
addr16
xor
lods
sub
and
out
mov
ret
mov
jb
bound
sub
xchg
bound
jle
icebp
inc
dec
pop
adc
add
testl
mov
add
pop
mov
repnz
fnstcw
add
fcmovu
fcoms
lret
dec
rep
add
xchg
xchg
decl
mov
daa
adc
adc
inc
inc
in
xchg
cmc
pop
sub
sub
ret
lcall
stos
mov
dec
insl
cwtl
out
inc
lcall
movsl
rcl
int3
jmp
mov
dec
sar
or
xchg
xchg
mov
dec
adc
xchg
fnstcw
lahf
xlat
xor
adc
outsl
cli
jmp
shll
ret
mov
jmp
aaa
popa
sahf
inc
jae
or
sbb
xchg
dec
add
and
popa
or
add
xchg
mov
ret
sbb
decl
and
addr16
mov
aas
stc
sub
incl
xchg
aas
mov
xor
aas
xchg
ret
fwait
aad
mov
incl
mov
mov
daa
xor
and
ficomps
jbe
adc
lock
ret
mov
incl
pop
jle
jno
pop
das
pop
das
mov
iret
mov
jb
decl
inc
dec
cmc
insb
shl
inc
mov
inc
pop
aaa
test
cmc
cmovle
cmc
decl
mov
addr16
and
push
inc
add
arpl
mov
add
ljmp
mov
cmpsl
sbb
fisubs
cli
sub
insb
and
aad
mov
jmp
imul
xor
imul
scas
xchg
repz
jne
into
mov
cld
xchg
in
out
je
dec
nop
lds
pop
dec
ret
ljmp
lret
lcall
clc
decl
cmp
ja
stos
les
dec
push
fnstcw
cld
push
adc
add
pusha
ljmp
movl
jbe
in
cwtl
stc
inc
xchg
gs
ss
mov
cld
stos
ret
fdivrl
fmull
fcomip
decl
mov
dec
popf
and
or
mov
fdivr
call
xor
pop
out
jl
mov
mov
sar
outsb
push
or
adc
push
decl
dec
repz
sbb
lods
js
fistps
add
cmpl
push
rclb
jle
push
ficomps
inc
stos
pop
cli
xlat
jb
xlat
in
mov
ss
fdivrs
incl
fstpl
sbb
ds
hlt
mov
add
scas
scas
and
lahf
int3
adc
fiaddl
fidivl
ljmp
inc
push
or
adc
jne
test
push
call
fisttpll
pop
shlb
ljmp
call
arpl
cli
adc
adc
in
faddp
pushl
cmp
in
xchg
shlb
test
leave
jns
lods
mov
rol
mov
push
incl
inc
jge
data16
arpl
cmp
popa
xchg
push
rolb
in
adc
mov
pop
mov
idiv
inc
xchg
xchg
adc
stos
sarl
cmpsl
test
adc
loop
hlt
add
cmp
inc
cmp
outsb
push
fistpl
ret
loopne
inc
xchg
push
in
xchg
inc
dec
shll
test
mov
ljmp
lods
pop
add
aas
and
roll
loope
sub
push
and
dec
lcall
sub
out
cli
clc
sub
test
push
pop
ret
xchg
lahf
cwtl
je
inc
popf
mov
stc
or
fdiv
xor
fmull
cmp
pop
iret
ds
test
ljmp
ljmp
pop
in
mov
stc
fidivs
inc
shrb
mov
cmp
fistpll
into
push
fs
cli
popf
xor
stos
mov
xchg
push
mov
mov
xchg
call
inc
or
xor
fildl
mov
jg
cmp
push
dec
in
add
call
push
xor
jb
call
ljmp
enter
js
jp
adc
stos
cmp
inc
dec
sbb
mov
push
sbb
shrl
cld
lea
negl
fcmovnbe
inc
roll
imul
fdiv
pop
orb
add
xor
lock
ss
mov
sbb
xor
out
faddp
mov
sub
push
inc
push
mov
test
js
popf
in
cmc
fs
mov
ljmp
cmp
fcmovnu
push
jl
xchg
inc
insl
dec
ret
pop
stos
or
lcall
sahf
push
loope
mov
and
fwait
mov
in
xchg
sarb
xlat
div
cltd
imul
add
dec
mov
push
cmp
imul
dec
dec
cwtl
and
movups
incl
not
lds
jno
insb
cmp
shrl
es
pusha
and
push
cmp
call
cmp
push
xchg
pop
cmpsb
jae
bound
pop
cmp
or
pop
jle
pushl
pop
mov
arpl
out
fcoms
cltd
stc
jnp
addr16
mov
lcall
pusha
pop
cmpsb
aam
xchg
cmc
jp
je
mov
inc
popa
push
and
jae
or
sub
inc
dec
jp
and
pop
stc
div
jle
push
decl
cmp
in
bound
mov
sbb
cmp
bound
add
jne
sti
in
mov
cmpb
jo
mov
and
or
inc
outsb
mov
stc
fnsave
out
out
clc
jne
cltd
nop
mov
insb
fwait
in
notl
mov
mov
in
ficoms
out
into
fwait
popf
icebp
test
mov
jp
ja
pop
aad
cmp
inc
test
data16
jmp
fisttpll
leave
js
jecxz
dec
dec
cmp
sbb
test
rorl
les
mov
adc
call
insl
push
add
sbb
ljmp
shll
cmp
mov
cmc
lds
inc
push
ror
inc
js
imul
adc
movsb
pushl
sahf
mov
or
sub
fistpll
stos
and
stos
mov
cmpsb
lcall
and
roll
insl
mov
orb
jmp
comiss
mov
adc
icebp
lcall
push
mov
xchg
xor
shl
and
fdivrs
scas
cmp
jg
sarb
aam
aad
sbb
jne
dec
or
cltd
enter
mov
mov
mov
into
lret
mov
loope
outsl
fs
sub
xchg
out
cli
or
mov
adc
mov
adc
fdivrs
fisubrl
mov
orb
add
or
inc
dec
sti
xor
adc
adc
mov
rcr
xchg
mov
lret
mov
jmp
pop
mov
dec
fisubl
and
incl
mov
jge
sub
divl
pop
xchg
jl
xchg
cltd
dec
and
mov
sbb
jmp
ljmp
mov
pushf
xchg
mov
jmp
cmp
call
sahf
leave
cmc
testl
xor
fdivr
mov
scas
dec
push
incl
fists
inc
and
mov
testb
testl
sbb
jmp
mov
or
dec
testl
mov
sarl
iret
mov
call
das
div
and
ret
dec
push
cmpsb
popf
xor
test
repnz
push
int3
mov
cmp
movsb
xlat
dec
iret
push
std
inc
mov
mov
dec
cld
xchg
decl
fimull
cmp
ret
fisubl
or
cmc
jecxz
or
scas
out
test
jae
push
cld
pushl
out
mov
fidivrl
aad
lcall
pushl
mov
in
pop
jp
jge
leave
rcll
cmp
mov
lret
ret
decl
push
rcrb
decb
sub
sub
in
bound
imul
in
ljmp
inc
dec
dec
or
mov
cwtl
flds
pop
fadds
sbb
dec
out
pop
negb
lcall
cwtl
xor
call
daa
aad
hlt
pushf
aaa
adc
pusha
cmpsb
popa
lret
fs
lock
popa
lcall
cmpl
xchg
adc
negb
je
leave
aam
das
pop
ss
sub
stc
out
rcrl
in
and
and
fwait
incb
mov
xlat
or
insb
lea
sbb
in
or
jbe
cli
mov
pushf
rcr
inc
dec
push
lcall
addl
add
fldl2t
lods
adc
sbb
pushl
shll
mov
push
jnp
or
xor
xor
xor
lret
js
xor
jmp
nop
xchg
ds
adc
clc
mov
lret
test
pop
mov
stos
out
fiadds
inc
pop
sbb
in
mov
setnp
push
pushl
xlat
sub
dec
gs
gs
ljmp
mov
test
push
or
push
enter
push
xchg
jne
loopne
fwait
xlat
xchg
push
add
ljmp
mov
mov
inc
loop
jae
cmpsl
mov
push
mov
test
jno
mov
jge
sysexit
push
ret
loop
mov
lret
inc
incb
repz
jnp
jecxz
popf
mov
fldt
add
bound
roll
mov
push
push
icebp
pop
dec
mov
mov
aaa
mov
iret
lret
jns
call
mov
cmp
cli
stos
bnd
or
lahf
push
cmpsb
cld
lock
daa
scas
sbb
decl
das
icebp
jae
rol
cmpsb
add
dec
jb
mov
push
push
decl
cs
mov
inc
out
popf
or
or
sbbl
pop
lcall
pop
pop
stos
pushw
xor
sbb
cmp
scas
cmc
xchg
push
call
std
loopne
outsb
orl
pop
pop
or
jecxz
andl
and
mov
decl
insb
pop
ficoms
scas
pop
cmpsl
test
shll
cmp
hlt
sti
pop
mov
ss
lcall
inc
mov
mov
lods
adc
mov
xor
pop
push
iret
xor
inc
inc
push
jle
mov
pop
fs
jl
dec
pusha
dec
and
pop
outsb
mov
in
push
dec
cmp
inc
movsl
popa
cmpb
jbe
clc
xchg
aaa
lods
sbb
or
jns
pop
push
incl
dec
shl
out
bound
call
repnz
or
and
out
mov
inc
enter
push
pusha
jmp
push
ja
mov
mov
lahf
add
push
fisttpll
gs
sub
adc
or
mov
decl
push
sti
adc
add
outsb
es
cltd
and
jl
inc
popa
cmp
fbld
aas
mov
and
cmp
ja
xchg
mov
pusha
in
or
cmp
mov
jo
push
filds
imulb
jae
add
inc
jae
jb
fldenv
imul
jecxz
sarb
and
movsl
cmc
sti
sbbl
or
dec
bound
mov
das
mov
and
or
pop
cmpsl
cld
jbe
cwtl
pushl
call
cmp
fcompl
sahf
pop
stos
sbb
push
fnsave
add
test
xor
fistpl
adc
cli
dec
inc
leave
ret
inc
lods
ds
mov
das
xchg
incl
imul
adc
outsl
out
and
push
push
out
loop
sub
mov
ds
push
xchg
sbb
stos
or
jl
stos
repnz
mov
push
push
jbe
loopne
lods
loop
out
push
jb
add
or
jb
mov
ja
sub
fsubs
push
jge
adc
sub
mov
or
aaa
cld
jmp
loopne
stos
mov
icebp
ds
movsb
or
xor
adc
jecxz
or
loope
aad
or
and
fisubs
sub
xchg
jmp
gs
sub
loopne
cmp
popa
fdiv
sbb
fdivrl
dec
cmp
je
decl
rcrl
cmp
inc
jb,pn
fsubr
hlt
divl
fbld
js
adc
jmp
xchg
shlb
ja
out
test
ds
mov
ljmp
mov
push
or
lea
dec
xor
testb
mov
mov
jns
es
sbb
nop
stos
push
mov
pushf
pushf
stos
cmp
adc
lods
pop
and
daa
adc
lods
push
out
dec
pop
fcomip
jmp
lret
xchg
jp
lcall
mov
bound
xor
xor
dec
jo
fisttps
mov
add
xor
in
jg
lret
pop
fnsave
mov
pushl
xor
xor
mov
xor
xchg
jmp
decl
mov
cmp
aas
arpl
das
add
xor
inc
mov
out
lock
lret
mov
sbbb
fwait
mov
loope
lcall
leave
cmpsl
cwtl
insl
fistpll
and
lret
cli
xchg
mov
push
pop
or
push
pop
pushl
and
stos
lods
jo
in
loope
int3
push
insb
les
adcb
jns
mov
mov
ljmp
xchg
loope
cmpsb
add
ja
inc
out
sbbl
cmp
mov
ljmp
adcb
push
mov
call
call
pusha
jg
or
test
push
cmp
inc
movsb
and
aam
mov
ljmp
mov
push
ret
sub
stos
test
inc
inc
inc
mov
ljmp
push
andb
jns
sub
push
in
pop
jg
cmp
or
or
push
clc
cld
jg
mov
fs
sbb
xchg
das
dec
inc
mov
pop
xor
mov
call
insb
sbb
cmc
adc
out
insl
out
sbb
addr16
ljmp
sub
fs
je
outsl
push
sbb
inc
and
sub
pop
imul
lds
fistl
adc
sbb
ret
push
and
sti
dec
pop
sbb
ljmp
add
and
popf
mov
cwtl
add
or
call
sub
push
sar
dec
fsub
jmp
inc
cwtl
pop
test
aaa
stos
jecxz
hlt
jne
jg
sbb
mov
push
inc
push
daa
and
clc
ljmp
sbb
int3
mov
incl
dec
lret
scas
ret
adc
stos
shll
mov
test
add
ret
push
mov
out
clc
lcall
pushf
and
pusha
arpl
push
push
add
and
std
lcall
popl
movsb
cmp
push
push
into
cs
cwtl
mov
pop
faddp
and
xchg
mov
out
clc
adc
cmp
xchg
es
lret
push
sbb
dec
mov
pop
lcall
repz
sub
cmp
dec
ret
dec
mov
ds
push
int3
cmp
scas
loop
call
fcmovbe
je
aaa
inc
pusha
insl
cmp
or
loope
cmpsl
pushf
jg
mov
add
call
out
push
andl
xor
push
jge
popf
pop
xor
decl
add
mov
les
mov
mov
jo
ljmp
push
push
int3
sbb
add
lcall
adc
cs
push
sarl
sti
jne
jle
push
adc
in
jnp
and
aad
mov
lcall
pusha
adc
sub
fs
or
pusha
add
test
test
dec
nop
mov
jmp
in
pushf
push
or
imul
pop
stmxcsr
jp
sbb
pop
hlt
incl
push
rol
sub
cltd
inc
xchg
mov
xchg
dec
sbb
jmp
cmp
mov
push
ds
aas
out
add
mov
fimull
xchg
push
and
pop
pop
loopne
adc
add
adc
pusha
test
lcall
cwtl
inc
mov
fxch
xor
add
clc
sub
loop
les
lods
aaa
xor
decl
sti
dec
sti
mov
daa
int
and
sahf
jp
xchg
jmp
mov
sub
mov
jns
ja
mov
mov
cmpb
iret
stc
adc
mov
inc
push
xchg
adcb
jl
or
pop
pop
cmpsl
std
cmp
xchg
fmul
sti
jle
sbb
sub
inc
adc
mov
scas
ret
mov
decl
test
test
shrl
xchg
outsb
xchg
mull
sub
jae
outsb
ret
incl
daa
dec
push
and
shlb
sbb
jbe
ss
push
mov
bound
mov
push
jmp
movsl
push
xchg
iret
aas
xchg
mov
cmpsb
clc
jge
mov
or
xchg
xchg
jmp
pop
xchg
add
nop
sti
incl
cmp
push
fisttpl
test
daa
mov
dec
push
jne
rolb
movsl
or
ljmp
repz
jne
push
or
mov
hlt
and
aaa
lods
daa
fldcw
mov
ljmp
push
insl
or
mov
leave
mov
add
mov
mov
jecxz
xor
incl
repz
popa
add
sub
sub
in
xchg
jns
xchg
sbb
lcall
decl
shl
in
insb
loop
popf
mov
jno
ja
mov
inc
in
push
add
add
loope
jg
jp
jle
aad
out
mov
popa
les
mov
mov
mov
mov
push
in
cmpsl
mov
mov
sub
xlat
out
mov
in
std
add
inc
les
jne
dec
jg
and
add
in
jmp
and
pushf
ljmp
lods
xchg
pop
mov
or
decl
dec
mov
popa
hlt
dec
push
jge
xor
sub
aaa
addr16
stos
sub
repnz
or
imul
mov
repz
icebp
inc
lea
ljmp
sbb
dec
movsb
or
int3
sbb
in
inc
pop
or
ds
xor
adc
add
pop
adc
xlat
decl
rorl
rep
out
mov
dec
jg
xchg
inc
ret
ret
nop
int3
fists
xchg
sti
stos
addr16
ret
fdivr
lcall
push
testl
cmpsl
or
pop
dec
pop
into
cmpsb
test
lcall
push
push
ds
push
sbbb
mov
inc
into
sub
ja
push
loope
cmp
dec
out
cli
scas
scas
inc
cmp
imul
andb
ljmp
pop
dec
pop
mov
test
mov
push
pop
bound
xchg
imul
push
cmp
inc
push
idivb
xor
mov
pop
hlt
lret
jmp
insb
xchg
push
push
cmp
jbe
incl
movsb
jns
add
imul
mov
jb
jbe
mov
or
cmp
data16
or
lcall
pop
movsl
into
mov
jnp
sbb
jo
lods
xlat
stos
inc
or
outsb
fldenv
fwait
add
outsl
push
xchg
and
xchg
ror
push
dec
fisubrl
cs
insl
pop
out
aam
inc
push
cmpb
in
pusha
int
test
sub
jmp
pop
loope
rclb
cmp
pop
loop
jmp
sti
loop
cwtl
jb
daa
sbbl
movsl
pop
xchg
pop
jle
lcall
popf
pop
lock
stc
mov
mov
repz
fcoml
push
cmpsb
sbb
lds
cmc
jnp
fistps
sti
or
call
arpl
xchg
aas
data16
dec
add
out
push
inc
test
fcomip
inc
sub
inc
sbb
mov
sti
mov
bound
cltd
clc
adc
inc
lcall
inc
mov
popa
fldt
jmp
imul
or
movsb
bound
xchg
ljmp
stc
nopl
mov
shl
pop
lahf
test
push
mov
pop
xchg
lock
imul
ljmp
pop
into
nop
and
imul
enter
add
test
shl
and
sub
inc
xchg
jnp
sbbb
pop
jge
sbb
test
ljmp
xchg
hlt
sar
mov
test
xchg
repz
shr
inc
jb
and
mov
lcall
int
jns
mov
jae
ret
dec
in
sub
xchg
xor
clc
push
jb
jo
push
das
xchg
sahf
leave
and
into
xor
rcrb
icebp
je
adcl
xchg
sbb
repnz
fcoms
les
jo
rcrb
vucomisd
pushl
fisubl
push
push
lods
inc
jl
icebp
call
shll
jns
xchg
push
lock
mov
sub
jo
insl
ret
push
aaa
shll
pusha
call
cmp
xor
xchg
xchg
xchg
mov
int3
jge
sub
pop
cmp
dec
adc
cs
pop
insl
push
inc
pop
lods
cmp
sub
ljmp
dec
ljmp
rolb
daa
jl
mov
outsb
jno
fidivrs
jns
iret
jne
orl
sub
mov
pop
push
in
lock
inc
mov
pushl
movsl
jmp
pop
inc
nop
add
and
loope
loop
lods
outsb
xor
mov
leave
ja
cli
inc
sahf
hlt
call
addr16
popf
outsl
shr
push
xchg
dec
push
mov
mov
sti
jmp
pushl
dec
repz
dec
dec
ljmp
sahf
es
sti
mov
ljmp
lret
inc
sub
lret
andb
dec
sbb
dec
xchg
pop
adc
mov
lret
sbb
jg
xchg
sub
lret
lea
mov
lcall
popf
push
and
adc
mov
daa
mov
daa
pop
jno
xor
sub
cmp
incl
std
subb
das
jo
aas
xor
pop
nop
pop
idivl
int3
aam
push
test
cltd
mov
ret
jb
inc
mov
mov
or
push
or
fisubrs
int
inc
jp
push
mov
xor
clc
mov
inc
xchg
repnz
mov
inc
je
push
aad
stc
fstpl
sti
ds
iret
lret
jmp
and
stos
aaa
mov
push
mov
aam
jmp
push
into
xorb
mov
inc
sahf
test
dec
push
cmp
out
pop
inc
popa
adc
jmp
insl
inc
daa
or
inc
mov
sahf
call
sarb
or
stos
push
imul
xchg
cltd
fldlg2
xor
pop
mov
sahf
loopne
fwait
jmp
sbb
push
jae
cli
cmpsl
adc
cmp
repz
popf
int
sbb
inc
mov
das
ret
inc
jno
push
repz
movsb
arpl
in
inc
cmc
mov
jmp
push
sub
and
inc
scas
ss
xchg
pop
adc
test
add
sbb
shlb
ljmp
cli
nop
insb
icebp
and
sbb
sub
inc
jne
xchg
xchg
sar
lcall
and
push
and
inc
lock
pusha
syscall
mov
sub
cltd
pop
ljmp
dec
outsl
cmp
jns
insl
cmpl
mov
maxps
call
pandn
scas
outsl
push
and
jl
ljmp
push
movb
push
mov
rolb
rcrb
push
movsb
mov
movsb
jp
push
test
aaa
cld
incl
shr
or
out
dec
lods
mov
or
into
popf
add
xchg
lret
cmp
insl
xchg
imul
jl
into
loopne
push
xchg
jae
icebp
dec
mov
in
call
andb
ret
pop
cmp
adc
stos
imul
inc
faddl
push
sti
or
pop
jecxz
mov
ja
fwait
stos
in
fsubp
mov
and
js
or
push
pop
fwait
movsl
inc
xlat
push
xchg
aaa
les
cmp
lcall
stc
mov
xchg
aam
mov
sbb
enter
push
pop
dec
cmp
sti
and
sbb
push
outsb
ds
or
push
jge
mov
repz
lret
loope
dec
sbb
inc
push
sub
fcompl
push
inc
push
jg
jle
cltd
es
sahf
icebp
fs
out
mov
fld
dec
dec
push
inc
cltd
adc
or
lcall
scas
fcoms
inc
out
fbstp
pop
mov
gs
ds
ljmp
add
shrl
iret
stos
imul
xchg
add
sbb
leave
aad
fnstsw
decl
adc
add
das
pop
sub
daa
cld
sbb
fnsave
or
mov
lret
xchg
dec
xchg
shlb
call
aas
pop
sub
je
sub
adc
jmp
stc
iret
in
movsl
sub
fldcw
aad
inc
cmp
sbb
hlt
and
leave
fsts
mov
push
notb
xchg
fcoml
cmpsb
in
out
inc
jno
or
sbb
in
sti
dec
cmp
push
dec
push
push
jnp
cmp
dec
mov
aad
pop
pop
aaa
jge
test
les
insb
movsb
cmp
mov
call
int
orl
rcll
fs
adc
mov
test
sbb
enter
popa
outsl
movsl
cmpsb
sar
jg
mov
mov
push
mov
xchg
ja
xchg
push
xor
insl
invd
int
jmp
push
std
jg
ds
jmp
or
lcall
cmp
stos
pop
dec
sbb
pop
mov
jg
call
inc
inc
jnp
pusha
in
sarb
pop
mov
xchg
out
sub
push
stos
outsl
call
xchg
cld
out
adc
or
clc
test
rclb
sbb
dec
mov
pushl
sbb
outsb
test
fdivrl
ret
push
push
mov
int3
lods
les
jmp
dec
sub
sbb
inc
mov
adc
lds
incl
fld
nop
inc
mov
mov
mov
pop
dec
aad
fcoml
mov
je
das
stos
test
ret
add
pop
cmc
mov
push
xchg
movsl
xor
xchg
gs
cmp
mov
out
fcomps
jl
push
push
into
gs
xor
pusha
pop
mov
movsl
aas
fiaddl
push
sar
in
lcall
push
mov
pop
dec
incb
pop
out
pop
stos
rcrl
push
loope
icebp
cmp
decl
dec
and
lcall
rclb
jle
test
movsl
jae
fsubrs
xor
ljmp
pop
mov
lret
pop
je
iret
fdivrl
cmpsb
and
cmpsb
xchg
loopne
int3
and
add
loopne
mov
pushl
in
bound
imul
sbb
push
xor
add
dec
mov
lock
inc
mov
popf
jo
jp
cld
aam
fidivrl
inc
pop
call
repnz
push
push
mov
lcall
sub
in
and
jmp
sti
pop
cltd
test
repnz
call
dec
ror
inc
cld
xchg
scas
lea
xlat
hlt
mov
inc
jge
cli
divl
ret
test
inc
leave
inc
das
cmpsb
aad
sbb
xchg
or
xchg
loopne
les
push
sbb
in
lret
jge
push
cmp
scas
pop
dec
cmp
icebp
aas
xchg
push
xlat
hlt
rclb
les
call
push
or
hlt
inc
idivl
pop
add
sub
test
mov
cmp
mov
jmp
add
xchg
push
sbb
mov
imulb
aam
cmp
sbb
rclb
sti
mov
jns
out
push
push
and
out
cmp
hlt
pusha
inc
add
xor
int3
sub
ret
out
pop
lock
inc
les
adc
mov
call
out
add
jp
sub
or
mov
mov
cwtl
loop
fisubrs
ljmp
or
imul
outsb
mov
outsb
aam
incl
jmp
push
insb
aam
test
sbb
sarl
sub
decl
lock
or
neg
mov
cli
cmp
idiv
cld
pop
adc
call
and
push
dec
xchg
icebp
cs
mov
sbb
aaa
adc
adc
and
cvtdq2ps
loopne
sahf
push
mov
or
and
mov
mov
insl
add
add
push
andl
jmp
adc
mov
push
adc
jg
inc
jl
mov
push
mov
xchg
mov
xor
mov
xorb
scas
movsl
push
or
notl
ds
sub
outsb
push
pop
loopne
cmp
cltd
ja
clc
mov
sbb
mov
sbb
xor
mov
push
push
ret
pusha
leave
imul
negl
daa
push
and
add
es
cs
or
sbb
add
mov
stc
lret
add
incl
popa
leave
hlt
pop
fstpl
dec
jne
loope
jecxz
test
addr16
sub
lds
adc
dec
lahf
outsb
stos
mov
lods
cmc
mov
cltd
mov
inc
insb
xchg
xor
lods
jg
adc
mov
push
das
xlat
sbb
xchg
in
lods
or
mov
dec
int
andl
incl
fsubr
fwait
movsb
pusha
faddl
sbb
pop
dec
imul
mov
mov
rolb
and
outsl
out
popf
or
stos
dec
pop
sbb
rol
jo
adc
movsb
aad
hlt
cld
lcall
gs
push
out
mov
mov
lret
dec
sub
inc
dec
call
aaa
es
mov
add
sub
mov
and
incl
arpl
cmc
bound
arpl
mov
ret
in
cld
mov
mov
insb
pop
mov
adc
mov
incl
pusha
sub
mov
loope
arpl
std
fdivrl
ficomps
hlt
outsl
cmc
add
out
sbb
mov
push
cld
mov
push
inc
push
fsubp
mov
movl
call
sub
mov
aaa
fcoml
xchg
adcb
stos
push
test
andb
fdivrp
decl
push
movl
push
lods
fisttps
inc
push
inc
mov
fidivrs
dec
jle
jmp
mov
push
push
gs
clc
push
inc
mov
cmp
xchg
dec
inc
fiaddl
dec
fwait
push
outsb
sahf
test
loop
push
or
cmp
mov
jg
ljmp
cmpsb
repz
dec
push
jae
adc
cmp
cmpsl
popa
pop
jge
push
cli
push
bound
sub
pop
popa
xor
jmp
or
push
fnstcw
jno
movsl
pop
ret
fldt
dec
insl
rcll
or
ljmp
mov
push
push
cmpb
or
xchg
push
int3
jae
std
cmpsb
and
jg
push
dec
test
das
or
fdivs
lahf
push
lahf
sub
or
test
ds
dec
dec
aaa
loopne
int
enter
ljmp
movzwl
out
adc
push
ret
fcomip
ljmp
and
inc
test
out
test
sarl
pop
adc
mov
sub
decl
xor
and
test
imul
shr
inc
or
mov
lcall
icebp
dec
aaa
inc
and
iret
dec
lods
jbe
mov
and
inc
pusha
cs
jbe
push
stos
fstp
sbb
jmp
cwtl
adc
xor
mov
js
dec
sbb
pop
and
mov
fs
pop
inc
adc
inc
call
mov
fisubs
and
sbb
dec
mov
inc
enter
inc
jp
call
push
cld
lcall
pop
pop
lret
mov
or
inc
stc
int
inc
js
pop
cmp
jmp
arpl
mov
and
nop
adc
enter
insl
xchg
sbb
leave
push
fcmove
stc
dec
lods
loop
jmp
shrb
shll
inc
aam
ljmpw
sub
xchg
leave
jl
cmpl
incl
adc
dec
lsl
shrb
orb
dec
mov
clc
call
movsb
cli
out
and
xchg
mov
rcrl
sub
pop
insb
scas
pop
vxorps
xlat
and
push
into
inc
aam
ret
xor
jg
addb
pop
push
xchg
lods
mov
xchg
xlat
push
xorl
mov
sbb
jmp
or
bound
loope
pop
les
mov
xor
jno
aad
or
lcall
mov
jbe
dec
and
mov
in
pop
ret
xchg
push
loopne
arpl
call
insl
xchg
jmp
mov
in
dec
mov
adc
mov
or
and
ds
ret
jb
shlb
mov
dec
pop
gs
mov
mov
xchg
iret
jmp
mov
jg
mov
or
shll
xchg
sbb
leave
sub
push
out
push
fistpll
lods
jg
cmp
xor
and
xor
pop
arpl
sub
rorb
dec
adc
jl
daa
adc
mov
sbb
inc
inc
mov
mov
inc
ss
inc
xor
and
mul
loope
rcr
ficoml
jmp
jbe
into
or
jbe
int3
push
push
mov
pushl
repnz
sbb
insb
cmp
dec
cli
lcall
negb
mov
jmp
std
jecxz
jp
pop
cwtl
adc
sbb
dec
cltd
pop
mov
addl
sub
cmc
out
xchg
shl
adc
xor
notb
andb
sub
sbb
aad
loopne
addr16
dec
aad
sbbl
inc
popa
push
push
pop
jne
and
repz
adc
mov
das
sar
adc
stc
stos
mov
mov
into
xchg
out
hlt
xor
adc
jmp
or
shrl
push
scas
das
daa
add
fimull
lcall
call
pop
adc
aam
fcom
incl
out
pop
add
dec
inc
daa
cmp
out
das
jg
lock
push
jle,pn
mov
push
inc
daa
jmp
push
mov
xor
out
jne
shrb
and
xor
sbb
cmp
jns
push
xor
scas
sbb
xchg
ja
push
or
in
inc
in
loop
cmp
insl
in
jge
jp
sbbl
inc
jb
pushl
xor
iret
jmp
xchg
imul
loopne
mov
lock
pushl
cld
hlt
loop
add
sbb
int3
pop
shlb
xor
mov
mov
push
clc
rorl
and
xor
popa
sahf
jg
add
ljmp
nop
loopne
dec
mov
inc
mov
push
inc
mov
mov
mov
sub
incl
or
loopne
cli
icebp
mov
lds
ret
mov
xchg
or
inc
lea
jmp
push
leave
inc
pop
outsb
and
nop
cltd
testb
dec
cmpsb
xchg
sbbl
adc
les
cmp
mov
jnp
xchg
insb
xor
jae
ret
xor
jmp
cmp
js
pop
jp
dec
add
test
sbb
lret
fwait
push
std
jnp
jmp
xchg
imul
jb
aaa
mov
pushf
adc
inc
or
fwait
or
mov
lea
inc
scas
movsl
sbb
shlb
jno
lods
data16
inc
mov
push
mov
insb
ficompl
lret
pop
idiv
jmp
stc
ss
iret
jle
lret
test
out
in
inc
pop
testl
adc
cmp
test
daa
sbb
push
sahf
test
dec
in
jmp
orl
out
lods
lret
mov
adc
aad
cmp
lock
fildl
xchg
pop
add
scas
lret
ror
cmp
add
icebp
sbb
add
xor
cmp
adc
pusha
and
push
hlt
cli
dec
mov
push
mov
fstpt
clc
hlt
in
pushf
cmpsb
sub
jmp
jecxz
xor
sub
in
sar
push
mov
inc
add
in
test
sbb
sub
decl
xlat
lods
add
shrl
push
stos
int
aad
enter
mov
mov
aas
fldl
call
sub
mov
js
push
flds
pop
xchg
dec
mov
jp
xchg
in
sarb
shrl
rcl
roll
sbb
cs
jmp
sbb
je
stos
xor
sbb
loop
sub
pop
and
jmp
sti
or
pop
lods
outsl
jmp
or
mov
cmpsl
insl
cmpsb
sbb
nop
sti
popa
int3
lea
clc
ljmp
in
and
push
jo
add
loope
mov
sbb
lahf
xchg
incl
cld
mov
out
out
aaa
push
rcrb
cld
stc
into
lret
xor
jge
pop
add
mov
push
dec
sub
adc
out
cltd
jle
inc
push
sub
xor
inc
clc
nop
ret
add
push
lea
jle
out
std
cmp
in
dec
mov
mov
rorl
movsl
mov
push
adc
scas
push
cld
inc
movsl
addb
lret
and
stos
mov
inc
inc
lods
ds
adc
call
cmp
inc
outsb
inc
daa
xor
inc
adc
inc
fistps
and
jae
inc
cmpsl
pop
ret
lock
inc
push
ret
movsl
or
mov
sbb
decl
sahf
push
lcall
out
roll
sub
bound
jne
or
push
mov
pushl
xchg
cmpsb
jecxz
cmp
jno
or
mov
stos
cli
mov
mov
fs
pushl
or
inc
push
dec
pop
mov
pop
mov
add
lcall
adc
mov
xchg
jge
call
mov
stos
jo
in
int3
adc
xor
cmpsb
in
outsl
jb
dec
cmp
jmp
lcall
cmp
adc
or
dec
sbb
sbb
jge
xor
jmp
xchg
repz
mov
out
jnp
ljmp
flds
sbb
imul
add
fcomip
fcompl
dec
jne
mov
xchg
mov
jle
nop
dec
cwtl
ds
mov
aam
push
filds
pop
mov
aas
push
inc
movsb
and
div
out
cld
jg
sar
jmp
and
sub
and
or
insl
stos
dec
mov
add
out
mov
ljmp
ror
cmp
ds
mov
mov
push
mov
int
add
cmpsb
fmull
orb
pop
mov
xchg
pushf
imul
or
dec
scas
mov
xor
punpcklbw
dec
mov
in
inc
rcrb
call
mov
int3
xchg
sub
xchg
pushf
cmp
xchg
inc
std
in
daa
movsl
or
push
sahf
aam
test
clc
shrb
sub
push
cmp
mov
inc
imull
nop
clc
leave
lock
mov
call
dec
pop
lahf
cltd
sbb
sbb
mov
cli
cmpsl
decl
inc
or
pop
mov
mov
cltd
adc
repnz
lcall
sub
pop
mov
jno
mov
fildll
icebp
and
cmpsb
jnp
lret
int
scas
repnz
pop
cmp
add
xchg
pop
into
mov
xchg
pop
sahf
mov
jle
add
pushf
pop
push
mov
mov
mov
in
adcb
fwait
ret
test
leave
das
iret
jo
pop
pop
pop
outsb
stc
mov
mov
mov
pop
push
sar
mov
sub
pusha
push
jbe
inc
lods
mov
loop
stos
movb
jg
sbb
or
adc
mov
fcoml
jecxz
rorl
adc
push
mov
xchg
mov
lret
ljmp
loope
cmp
fwait
mov
inc
int3
and
add
push
lcall
push
sub
lcall
pop
lcall
adc
decl
leave
lods
sbb
pop
push
xchg
jne
out
push
jge
in
mov
pop
pop
inc
mov
jae
decl
mov
lret
subl
push
dec
mul
dec
xchg
data16
sbb
mov
jno
jns
jg
cld
push
dec
dec
popf
cmp
sbb
mov
jecxz
push
dec
add
pushl
nop
xor
cmc
test
insb
out
xor
out
int
cli
push
sub
jmp
arpl
xor
shl
push
or
sub
loope
out
gs
inc
ficoml
mov
mov
lahf
popa
adc
push
lods
adc
out
popf
test
cmp
dec
loop
pop
mov
ret
pop
mov
mov
aad
std
jg
popf
pop
mov
sahf
ret
decl
cwtl
sti
call
add
pop
and
shrl
shl
xlat
sbb
xchg
test
call
or
xchg
jge
insb
repnz
inc
call
fwait
add
ret
xor
test
call
fs
inc
test
fdivrs
or
mov
pusha
mov
sub
jge
add
rol
jmp
sbb
cmp
jb
adc
je
aad
push
mov
fcoms
ljmp
ds
push
mov
or
pusha
sarb
pushf
mov
fwait
inc
ja
int
call
add
jbe
cmp
cmp
sbb
push
test
aas
int3
mov
mov
lock
push
pop
sbb
dec
push
arpl
or
rorb
rclb
xlat
dec
pop
sahf
xlat
xorl
push
popf
ljmp
enter
xchg
xorl
sub
lahf
mov
gs
int3
pushf
push
mov
mov
dec
cmpsb
xor
and
mov
lahf
mov
and
lahf
jns
inc
outsb
loop
mov
pusha
jp
std
cld
and
xor
ret
mov
gs
in
in
addr16
inc
mov
mov
cli
jnp
dec
fstl
dec
inc
jp
adc
jo
jp
into
or
pop
icebp
push
xor
cmpsl
in
pop
sbb
xchg
dec
mov
cli
scas
mov
push
inc
dec
inc
fs
jmp
xchg
stos
insb
jb
mov
mov
arpl
push
movsb
jne
mov
insl
fldcw
mov
int3
out
mov
push
xchg
push
jno
mov
movsl
and
push
cmp
decl
pop
repz
or
push
int
pop
sub
sbb
outsl
pop
inc
lcall
loope
fs
xor
cld
jecxz
and
sub
or
aam
lods
nop
cmp
dec
clc
lcall
test
stc
xchg
repz
add
ljmp
xlat
shr
or
incl
push
in
pop
pop
call
cmp
divl
push
xor
xlat
push
repnz
and
gs
jp
sbb
mov
pusha
push
mov
loopne
mov
fwait
pushl
pushl
xor
and
xchg
loope
scas
cmpsb
push
pop
in
in
or
mov
adc
xchg
into
repz
adc
call
or
idiv
pop
dec
fadd
je
mul
mov
xor
incl
mov
pop
outsl
loop
and
dec
enter
out
addr16
mov
minps
sbb
jmp
xor
push
imul
test
sbb
xchg
mov
jmp
outsb
mov
inc
mov
data16
hlt
and
inc
push
repz
or
insl
call
pushl
icebp
cld
imul
scas
inc
push
inc
mov
sbb
andb
pop
add
xchg
popf
jmp
int
ja
decl
mov
push
lret
cmp
push
mulb
or
cs
inc
call
shlb
hlt
jmp
jle
adc
push
popf
test
sub
call
ficomps
out
rorl
push
inc
das
mov
scas
clc
xchg
push
xchg
push
stos
call
jge
pop
mov
imul
xor
iret
inc
pop
xor
adc
decl
push
push
xchg
xlat
dec
sahf
pop
int3
inc
push
in
pop
adc
jns
mov
call
ljmp
adc
push
test
ss
aas
add
push
mov
aas
repnz
fisubl
and
out
sub
mov
mov
mov
jle
xor
dec
dec
mov
rcrb
incl
rclb
sub
and
jbe
ljmp
add
dec
sti
jle
loopne
shl
ficoml
lods
or
inc
xchg
in
fucomi
sub
icebp
push
adc
inc
add
mov
mov
add
cmp
jg
or
dec
pop
inc
push
int
das
repz
test
cli
sti
pop
adc
adc
pushl
mov
adc
sti
adc
inc
jns
ret
popa
mov
mov
sub
pop
jb
addr16
or
jmp
pop
mov
cmp
jecxz
xor
xor
dec
dec
mov
push
dec
mov
sbb
inc
gs
add
adc
xchg
mov
add
mov
jmp
sahf
daa
cmp
es
scas
sti
mov
cmove
hlt
ds
adc
jmp
sbb
test
add
mov
fldl
sti
xchg
out
lcall
or
icebp
cmp
popf
mov
ret
mov
rcr
fsubl
mov
idiv
dec
jg
or
jnp
leave
stos
mov
add
mov
stc
es
pusha
xchg
icebp
jmp
shlb
popf
ljmp
dec
push
push
or
sub
imul
jnp
cld
push
sar
jg
push
inc
adc
movsb
movsl
sub
push
pop
push
or
and
rcrb
pushf
adc
mov
cmpsb
push
and
je
mov
dec
pop
adc
cs
mov
sarl
je
mov
cmpsb
mov
inc
stc
scas
ficompl
cmp
sarl
mov
push
sbb
mov
xor
lods
cltd
inc
pusha
clc
ds
decl
xchg
lock
je
jle
dec
xchg
bnd
imul
jne
aad
mov
fwait
mov
stos
dec
lahf
xchg
cld
das
int3
xchg
adc
addr16
lcall
pop
in
fwait
test
push
jnp
fld
sbb
rorl
in
mov
jmp
or
movsb
int3
sbb
addr16
pop
fsubp
inc
dec
dec
sbb
in
or
test
clc
cli
dec
addb
sbb
sti
add
push
mov
jg
or
dec
ror
sahf
lret
hlt
xchg
fsubs
imul
push
and
das
clc
jle
inc
test
sub
insb
int3
out
out
fsubs
mov
aas
fisttpl
imul
out
mov
add
xchg
jae
push
xchg
mov
in
cltd
lret
ljmp
sets
mov
push
dec
rcrb
dec
lcall
decl
lcall
mov
cs
test
fstpt
mov
icebp
mov
cmp
mov
push
add
aam
push
int
inc
jg
incl
pop
int
inc
pop
and
lahf
push
pop
pop
cwtl
and
stc
fidivs
xchg
add
cmc
pop
bound
mov
in
jg
fistpl
icebp
lds
jmp
jmp
jno
cmp
pop
adc
in
adc
in
xchg
pushf
push
jb
pushl
lret
xor
sbb
and
lret
jno
int
fcmovnu
mov
popa
jno
jno
cmp
mov
ds
mov
stos
jbe
idiv
ds
inc
jecxz
idivb
add
xchg
mov
mov
pop
loop
push
mov
incl
jne
aad
or
add
cltd
mov
daa
push
inc
or
pop
iret
push
add
out
adc
fdivrl
or
lds
cmp
and
pushl
dec
push
push
enter
bnd
out
ds
sub
std
xor
enter
push
in
xchg
sbb
shlb
cwtd
xor
xchg
mov
rcl
cmp
cli
arpl
jo
lahf
test
dec
test
mov
and
fwait
decl
stc
push
fs
mov
fldl
xchg
sub
iret
cmp
inc
cwtl
addb
jns
jmp
push
add
pop
cmp
leave
pusha
rclb
ljmp
dec
xchg
lcall
call
out
xor
sbb
or
lds
out
or
jbe
stc
mov
jge
mov
mov
jno
in
pop
adcb
mov
mov
mov
decl
push
clc
loope
dec
lods
imul
shlb
sub
clc
or
lret
rclb
dec
mov
add
test
es
movsl
jp
cli
aas
dec
test
mov
adc
ljmp
or
push
scas
test
out
or
cmp
mov
loope
mov
in
dec
lahf
jmp
test
adc
aas
jae
pop
mov
sbb
xor
call
incl
jae
fdivl
cwtl
out
inc
fdivrs
fs
push
lods
push
inc
cli
fdivrl
sub
decl
jle
fdivs
insl
loope
cmp
out
xor
hlt
sub
sub
lea
dec
sar
ljmp
xorb
aam
mov
pop
imul
enter
ljmp
mov
inc
lahf
push
das
push
jns
mov
jmp
mov
mov
pushl
inc
sub
push
dec
gs
jno
mov
shl
add
pop
mov
fsubrs
mov
jle
sbb
data16
jl
jnp
mov
sar
fisubl
jbe
xchg
sub
leave
fdivrp
xchg
in
dec
push
arpl
test
jno
adc
jno
dec
sub
shll
jmp
std
fcomip
pushl
cwtl
lahf
in
arpl
pop
xor
xor
cmp
pop
pop
fwait
and
mov
imul
daa
push
loopne
lds
call
sub
and
outsb
fmulp
and
call
sahf
adcb
mov
lods
fstps
aad
jo
jg
fcmovnb
dec
bound
ss
cli
andb
dec
sub
incl
cmp
in
inc
movsb
jnp
xchg
sbb
and
inc
sbb
or
repnz
decl
in
lcall
pop
out
mov
push
mov
repnz
dec
addr16
popf
dec
xchg
xorb
jle
mov
pop
lds
cld
sbb
jg
cmc
incb
ss
int3
mov
mov
jbe
cmp
pushf
pop
mov
dec
xchg
mov
adc
add
in
dec
mov
jmp
push
lahf
jno
sub
mov
adc
sahf
add
in
mov
add
jg
cmp
cmp
les
lahf
mov
fimull
enter
dec
adc
lret
jg
insb
mov
jmp
in
popf
cmpsl
data16
stos
or
ja
and
pop
cmc
jecxz
cli
and
mov
or
mov
mov
incl
adc
mov
pusha
push
mov
adcb
cwtl
xor
push
or
je
push
push
inc
shll
fnstcw
out
sub
ret
pop
jmp
in
add
inc
arpl
ljmp
ljmp
dec
adc
je
push
cmp
cmc
jmp
jb
jae
or
in
int
std
out
subb
cmpsb
cld
incl
cwtl
mov
dec
jo
testl
jp
and
dec
ror
mov
or
mov
subb
mov
sbb
imul
nop
push
xor
jae
ljmp
pop
jbe
and
push
jg
push
pop
jne
jecxz
push
jno
stos
in
testl
test
in
and
lock
sub
insl
in
je
incl
test
nop
test
xlat
jecxz
mov
roll
mov
mov
stc
xchg
jge
or
push
dec
int3
or
dec
movsb
xor
push
jns
adc
add
cmp
fidivrs
mov
js
fstl
jge
stos
in
jecxz
mov
cmpsb
shlb
dec
sub
hlt
scas
xor
xchg
xor
test
sub
aaa
mov
leave
jb
fbld
rorb
sub
jmp
xor
xchg
sbb
push
push
cwtl
pushl
ret
stos
cmp
cs
ljmp
push
jo
les
sub
push
bound
pop
sbb
out
dec
add
ljmp
xor
cmp
js
ja
dec
cmp
jnp
addb
cltd
xor
pushl
cmpsl
or
rorb
jno
decb
jae
addr16
mov
adc
sub
stos
jge
popl
lret
mov
and
int3
rol
add
pushl
cmpsl
xor
pop
push
ljmp
test
test
inc
shlb
ret
lea
movsl
fildl
call
sbb
and
adc
pusha
cmp
push
mov
imul
mov
nop
fwait
dec
shlb
popa
inc
jmp
mov
jmp
jae
inc
or
and
insl
in
out
in
add
push
call
lcall
add
mov
add
jo
or
cmp
ljmp
lret
fdivr
jg
int
pop
adc
mov
mov
leave
cmpsl
inc
fistpll
sub
pushl
pop
mov
or
movsb
enter
fwait
loopne
or
lea
pushl
loope
repnz
pop
push
sbb
add
mov
orb
sub
into
push
pop
pop
cs
stc
mov
push
ret
add
sbb
cli
and
lcall
jb
orl
fisubrs
push
loopne
insl
test
stos
push
ljmp
outsb
shll
mov
push
dec
cmp
adc
fildl
ljmp
outsl
mov
push
enter
lds
stos
dec
xor
jecxz
jmp
cmp
push
xchg
push
or
xor
adc
pop
jg
incl
into
mov
mov
ss
in
sbb
pop
aad
rorb
pushl
loope
push
push
outsb
sub
addl
push
pop
lods
loopne
sub
aad
mov
xor
jne
add
or
cmpsb
es
pop
cmp
test
arpl
lahf
sub
jg
test
jecxz
jmp
pushf
popf
insb
dec
xchg
hlt
jecxz
add
mov
push
jle
inc
add
inc
enter
pop
jl
sub
cltd
pushf
jmp
mov
pushl
int
pop
sub
xchg
dec
inc
mov
add
sub
scas
and
sub
sbbb
leave
enter
cmpsl
hlt
js
in
xorl
hlt
push
lcall
adc
xchg
mov
test
jno
movsl
dec
enter
lcall
inc
sub
aas
xchg
popf
fbstp
mov
rorl
int3
add
xchg
or
ja
lock
push
pop
sbb
into
cmp
call
lcall
inc
push
leave
jo
sbb
adc
inc
lea
mov
lods
pop
add
lcall
out
push
leave
pop
nop
ret
out
sbb
xchg
adc
dec
mov
ljmp
fstl
sarl
jp
jb
or
repz
or
pop
pop
sub
xor
js
cmp
das
mov
cmp
add
ficompl
notl
repnz
mov
out
movsb
js
add
add
cli
fidivs
jl
push
or
pop
inc
cmc
push
imul
repz
aad
mov
or
jg
aad
outsb
or
repz
loope
cmp
mov
out
jg
xor
inc
ljmp
sub
sub
sub
push
dec
push
cmp
dec
sbb
ljmp
jno
fcmove
cmp
push
xchg
inc
test
fsubrl
mov
inc
fnstsw
loope
mov
ljmp
sbb
dec
or
sub
pop
iret
add
jno
xchg
test
cmc
pushl
adc
subl
pop
insl
pop
mov
out
sbb
jecxz
xchg
mov
sbb
push
xchg
fwait
hlt
mov
add
jno
pop
sbb
pusha
pop
jbe
ret
call
stos
mov
sete
mov
xor
sbb
inc
mov
mov
sub
leave
scas
or
xchg
lret
testl
and
out
push
repnz
inc
lea
cmp
xchg
mov
inc
sti
sbb
cmp
mov
inc
lcall
mov
imul
jmp
xchg
sar
insb
mov
xor
ror
es
dec
ljmp
incl
fldcw
jno
xor
pop
rorb
rclb
mov
out
cmpsb
lcall
pop
aas
subl
mov
dec
cld
inc
inc
fdivs
ljmp
cs
dec
add
arpl
dec
cmp
cltd
xor
fildl
lods
inc
xchg
lcall
jns
dec
add
sbb
dec
adc
js
nop
sub
pop
add
movl
or
jmp
or
or
notl
jl
push
in
adc
push
xor
mov
fimull
rcr
push
outsb
mov
cmp
or
ficoms
jg
mov
movsb
cmp
jns
jb
loope
mov
in
js
inc
sbb
mov
or
cld
pusha
mov
xor
pop
data16
les
add
scas
xor
mov
loope
jg,pn
xor
and
cmpsb
out
js
jp
xor
push
cmpsl
ljmp
sarl
lret
lods
out
mov
fs
push
inc
jne
out
sub
enter
mov
sti
sti
lcall
into
jmp
push
sbb
pop
jns
movsl
call
paddsb
jge
rclb
sbb
pop
push
ljmp
dec
dec
idiv
cmp
add
inc
out
mov
dec
fsubrs
lcall
jmp
popf
pop
pusha
dec
ficompl
add
test
ret
pop
pop
stos
pushf
rolb
fdivr
inc
add
sub
in
xchg
jle
ret
push
push
sbb
je
lcall
xchg
lock
shlb
pop
in
push
iret
pop
and
stc
adcl
adc
and
fwait
into
jmp
jmp
and
repnz
sbb
mov
mov
movsb
dec
inc
add
ret
cwtl
int3
hlt
dec
xchg
push
mov
inc
hlt
cmovbe
adc
sbb
aad
lret
mov
sbb
dec
jmp
push
cmp
cmc
adc
mov
jle
lock
jne
jmp
pop
xchg
fdivs
push
popa
fldenv
mov
cltd
push
and
push
enter
int
cli
push
cmpsb
jge
call
into
dec
enter
add
push
scas
outsb
or
ret
sub
icebp
cwtl
and
icebp
inc
clc
jmp
inc
lret
mov
xchg
andb
xor
orb
xchg
cmc
push
sbb
xorl
adc
aas
xor
and
test
ljmp
aam
scas
lahf
test
mov
aad
xor
sti
sub
nop
mov
lcall
adc
jbe
and
cmp
subb
fidivl
push
pop
sub
xor
mov
andb
inc
rcl
mov
inc
mov
rcrb
cld
jmp
shl
xor
int
cwtl
shl
gs
lret
sbb
cmp
ljmp
cli
or
clc
mov
scas
dec
fs
sub
ret
pushl
aam
arpl
or
inc
mov
stc
roll
cmp
orl
pop
jnp
mov
rcrl
sahf
pop
mov
jl
and
repz
add
scas
ljmp
mov
mov
push
mov
push
add
ljmp
push
pop
or
cmpsl
push
xchg
daa
adc
adcl
and
jle
jnp
xlat
popf
xchg
sub
outsl
jl
xchg
shll
jmp
push
mov
sti
mov
aaa
rorl
les
insl
mov
push
mov
ljmp
clc
and
pop
pop
or
cmp
mov
and
arpl
test
rorl
ljmp
outsl
je
and
xchg
jno
xor
dec
mov
push
mov
movsb
cmc
push
inc
mov
out
rcll
mov
lock
fcoml
in
jp
call
pop
mov
insb
lahf
insl
mov
pop
jge
cmp
outsl
mov
dec
clc
lcall
decl
lds
mov
push
xor
and
or
mov
push
adc
push
in
fwait
loope
inc
mov
call
sbb
sahf
push
daa
jecxz
jl
or
push
xchg
mov
movsb
icebp
ljmp
add
incl
xor
loop
mov
sbb
popf
scas
ljmp
add
pop
imul
cmp
add
pop
cmp
incl
in
add
scas
add
lret
test
lcall
incl
ss
nop
xorb
out
sahf
pmullw
clc
imul
or
lcall
push
and
je
mov
jne
pop
ficompl
imul
scas
leave
test
push
mov
xor
icebp
sub
mov
lods
jns
fimull
loop
dec
shl
mov
ret
repnz
test
fnstenv
xchg
lea
mov
dec
pop
outsl
xor
decl
xchg
cmc
push
mov
adc
pusha
sarb
out
cli
lods
mov
and
inc
adc
mov
xorl
adc
add
adc
lcall
rcrb
testb
cmc
dec
andb
fsubrl
test
ja
cltd
mov
out
push
mov
sarl
fnstenv
outsb
imul
aaa
movsb
mov
push
pop
push
adc
pop
decl
scas
shll
mov
pop
dec
test
les
mov
inc
negb
rclb
mov
push
mov
and
hlt
cli
aad
icebp
insl
sbb
cmpsl
sbb
nop
jp
cld
xor
xor
faddl
incl
adc
ret
or
cmp
mov
pop
fnstsw
push
call
push
inc
cmp
imul
daa
sbb
xor
sbb
sub
ja
pushl
mov
loop
lcall
into
push
scas
and
mov
lcall
and
pcmpgtd
or
sti
iret
adc
push
jno
cmp
movsl
popf
jmp
jge
into
cmpsl
sub
pop
xor
cmp
test
dec
push
outsb
dec
fcoml
incl
je
xchg
or
enter
mov
inc
clc
cmp
call
jne
popl
pop
test
ja
jno
mov
test
jmp
pop
add
add
lahf
pop
dec
gs
adc
stos
inc
outsb
push
fldt
push
fs
decl
jge
mov
xor
and
mov
pop
sub
insl
jp
data16
dec
mov
fadds
dec
sbb
jb
push
cmp
loope
cwtl
pusha
jnp
fbld
mov
cmp
lods
cmp
inc
xor
fildl
inc
repnz
add
pushl
dec
loope
cmp
movsb
loope
add
or
incl
mov
dec
mov
pushl
lock
sar
xchg
sub
jmp
sar
ss
inc
adc
in
subb
out
test
pop
mov
xchg
std
mov
ret
pop
call
push
popf
mov
xor
daa
cmpsb
jg
popf
xchg
dec
xchg
cmp
sbbl
dec
es
fdivl
mov
addr16
add
sub
dec
enter
das
push
mov
jbe
sbb
mov
xchg
rolb
lock
mov
test
fdivl
imul
decl
sbb
lret
mov
and
push
push
mov
dec
mov
aaa
jle
ficoms
xchg
jo
mov
ljmp
lcall
int3
in
sbb
stos
mov
cmp
jno
stc
push
enter
inc
jle
mov
lock
and
xchg
subl
mov
inc
lahf
or
push
lock
cmp
inc
nopl
or
add
mov
mov
out
and
bound
rcll
inc
add
lret
sbb
fcmovnb
ljmp
lods
das
out
mov
cmp
ds
ja
cmpsl
xchg
mov
jg
adc
hlt
outsl
adc
mov
cs
mov
jno
jnp
test
add
ljmp
mulb
loop
rorb
mov
cltd
jle
lret
scas
sub
push
mov
lcall
xchg
lds
xor
dec
jae
mov
movsl
add
aas
and
pop
pop
add
mov
jbe
pop
and
jae
fisttps
sbb
push
ret
scas
pop
cmp
pop
pushf
stc
in
xor
imul
out
sbb
mov
jne
cs
jmp
jecxz
mov
cmp
ret
test
cmp
mov
pop
mov
inc
adc
cld
xchg
sarb
cmp
or
or
sbb
decl
xchg
sub
loope
out
aaa
insb
ja
push
outsb
dec
xlat
jns
cmpsb
out
imull
mov
cmpsl
push
or
jge
icebp
rorl
rcrl
shll
sub
scas
add
inc
lods
cmc
ds
arpl
mov
sarb
jb
subb
imul
pop
push
cli
dec
ret
test
xor
pushl
incl
mov
mov
xor
dec
cs
jl
fs
push
push
xchg
incl
and
dec
aam
out
scas
imulb
pop
call
cs
add
popf
movsl
cli
in
bound
pop
xchg
sub
ljmp
outsb
add
sahf
cld
xchg
xchg
add
aaa
sbb
movsb
jle
cmp
lods
pusha
jns
nop
add
push
jg
inc
jle
movsb
xor
push
or
ja
cmp
and
flds
adcl
cmp
jnp
mov
pop
divb
call
out
cli
push
setne
movsb
jmp
out
lahf
add
cmc
inc
sbb
jle
pushl
in
xchg
inc
insb
sub
bound
push
enter
jg
sbb
call
dec
pop
mov
fisttps
mov
sub
sbb
in
push
test
lock
leave
push
xor
enter
scas
bound
push
fcompl
lea
stos
ljmp
fstl
lea
and
jnp
and
mov
in
xor
pop
lcall
incl
and
sbb
shll
pop
int
andl
pop
frstor
repnz
mov
cmp
lds
push
shlb
xchg
jbe
pop
notl
ficompl
xor
cmp
std
or
popa
nop
inc
dec
test
push
sub
jne
out
xchg
or
out
fildll
ret
mov
loop
dec
shrl
lcall
add
repz
or
mov
lock
xchg
pop
cmpsb
add
xchg
mov
pop
arpl
into
clc
inc
dec
into
mov
adc
sbb
decl
sbb
cmp
mov
push
xchg
aam
mov
mov
dec
aad
imul
mov
jg
pushl
in
iret
mov
adc
jne
mov
ror
insl
pop
rolb
xor
out
push
hlt
adc
jae
mov
movsb
inc
sub
pusha
and
pushl
ficoml
jle
pop
pop
xor
es
icebp
jp
xchg
add
push
out
mov
and
mov
jno
lahf
lret
mov
sbb
cmc
loope
xor
mov
cmp
outsb
arpl
pop
push
adc
xchg
jmp
fsubs
popa
in
outsl
or
rolb
add
push
dec
sbb
jmp
sbbl
jl
inc
add
in
scas
test
lock
iret
xchg
dec
jae
test
sti
mov
xchg
cmp
cmp
and
aaa
or
mov
fcmovnu
call
lods
in
add
mov
inc
jb
arpl
push
sbb
push
mov
or
sti
mov
cld
fcoml
ret
rorl
cwtl
xlat
pushl
in
sub
and
shlb
cmc
mov
lds
push
in
out
push
pop
cmc
mov
gs
movsb
and
into
cld
dec
cmp
incl
test
cwtl
and
sub
pop
fisubs
pop
fsubl
mov
sti
cmp
pusha
cmp
mov
jecxz
inc
popa
mov
outsb
repz
out
mov
xor
push
imul
mov
in
jbe
add
jb
mov
pop
in
pop
jmp
daa
cmp
call
ret
mov
fists
jl
out
mov
jae
jle
sub
lret
fwait
sti
mov
incl
hlt
adc
aad
cmp
jecxz
sahf
add
js
mov
divb
fdivl
clc
lret
push
add
jmp
fstpl
xchg
ljmp
inc
mov
xchg
in
push
stos
sub
add
aam
jns
iret
jmp
lods
xor
add
loope
rcrb
sbb
push
xorl
std
jne
pop
in
stc
nop
sub
pop
dec
filds
cwtl
push
inc
mov
or
stc
jge
jg
jmp
mov
es
rolb
push
js
scas
mov
adc
das
sub
ss
data16
push
sbb
dec
fadds
sbb
and
pushl
mov
push
shlb
sub
scas
inc
popf
pop
jle
cmc
mov
push
add
jmp
ja
fisttpll
hlt
adcb
and
cmp
or
scas
jg
sbb
es
pop
cmp
sbb
mov
or
adc
repz
fstpt
inc
es
les
mov
cmp
in
push
add
insb
mov
jp
jg
jecxz
incl
insb
and
rcrb
psllw
aad
push
mov
and
mov
popa
jmp
scas
xchg
decl
xchg
xor
imul
loopne
insl
fs
fucomip
in
insl
push
sbb
cmp
lcall
outsl
mov
mov
mov
pop
scas
jb
push
cmp
lret
clc
ljmp
ret
ja
enter
jnp
js
scas
push
bound
push
scas
imul
mov
arpl
sti
push
push
cmpl
push
add
cli
mov
imull
dec
mov
mov
addr16
sub
lds
aas
jle
sbb
cmp
push
rcrl
push
stos
mov
inc
jl
cli
mov
data16
incl
or
loopne
loopne
jns
inc
or
inc
repz
jmp
xchg
dec
add
sbb
fs
ljmp
lahf
clc
inc
nop
push
lock
sarl
sbb
je
test
shrl
in
incl
lahf
call
xor
xor
jp
xchg
pushl
sbb
jmp
arpl
bound
push
and
repz
mov
add
mov
cli
pushl
pushf
cmp
push
pop
mov
outsl
leave
inc
mov
leave
daa
das
mov
incl
cltd
mov
push
xor
cmp
fwait
arpl
vpmacssdd
sub
dec
incl
pop
shrl
shrb
scas
ret
scas
loope
call
or
pop
icebp
stos
stc
shrl
cmpl
xor
es
incl
or
and
cmpsb
dec
sub
sub
out
stos
inc
popa
mov
jle
xlat
rorl
call
data16
insl
push
lahf
mov
mov
test
icebp
mov
jmp
xor
ljmp
in
jp
sbb
lret
stc
add
or
pop
adc
fisttpl
mov
fwait
jmp
and
pop
pop
mov
out
or
jbe
pop
xchg
adc
adc
hlt
sar
call
orb
ds
xor
jge
mov
add
das
xor
dec
cmp
psubusb
dec
sub
mov
mov
lock
adc
sbb
xchg
add
decl
adc
pop
cmp
loopne
xor
pop
mov
je
cltd
imul
mov
push
dec
dec
stos
fs
ret
pop
adc
sbb
call
outsl
mov
ficompl
arpl
cmp
mov
or
je
push
xchg
xor
stos
out
cli
call
or
xor
nop
pop
jl
cmp
cmp
inc
outsb
or
mov
or
pop
fsub
mov
test
sub
ret
cmpb
ja
ljmp
or
sahf
sub
xchg
in
les
ja
mov
xchg
mov
js
cld
popf
xchg
movsl
mov
sbb
mov
cld
mov
push
test
lcall
mov
adc
popf
mov
cmpsl
icebp
lahf
inc
sub
xor
push
idivb
and
ficompl
mov
push
adc
mov
out
clc
divb
fmulp
pushl
sahf
or
int
and
pusha
js
inc
mov
sahf
xchg
rorb
and
and
dec
lret
shlb
loope
inc
ret
scas
jns
cmp
aaa
mov
sub
inc
cmp
jle
shl
incl
jmp
xor
cmp
lock
inc
add
mov
or
push
mov
idivl
dec
or
lret
gs
jl
imul
cli
or
leave
movsb
iret
lds
fmuls
cmpl
mov
xor
mov
lcall
xor
cmc
cltd
repz
add
cli
call
push
mulb
jno
js
mov
cmc
or
leave
shll
cwtl
fdivrp
ljmp
mov
jo
int
add
jb
into
xchg
jnp
rorl
ja
sub
jecxz
ljmp
and
dec
stos
fsubrs
push
arpl
ljmp
xorl
cltd
xor
sub
pop
sbb
daa
dec
test
cmp
loopne
cmp
lods
orl
aam
cmpsl
jns
repz
jns
inc
xchg
adc
jo
stc
pop
mov
xchg
push
xchg
pop
adc
mov
incl
mov
adc
mov
jb
mov
push
inc
push
sbb
jmp
mov
adc
lods
ljmp
add
mov
push
rorb
sti
xchg
or
int3
mov
jmp
and
adc
or
xchg
pop
aaa
repnz
pop
pushf
sti
std
jle
pop
sbb
cwtl
pushl
std
ljmp
gs
xor
push
insl
and
mov
pushl
data16
stos
mov
lret
cmp
mov
andb
pop
std
or
mov
nop
movsl
or
lods
pop
and
movsb
cltd
sti
imull
mov
ljmp
push
lods
or
sub
adc
shll
stc
movsb
dec
gs
andl
out
shr
test
ljmp
push
gs
sub
and
mov
add
mov
mov
sahf
ljmp
or
pop
cmp
push
xlat
outsb
mov
cmp
dec
sarb
push
jo
push
std
jmp
cmpb
push
into
sti
push
rcrb
lret
sub
aas
xchg
pop
jb
dec
cmp
pushf
ljmp
int3
mov
mov
bound
pop
stc
jno
jg
call
xchg
fcomi
xchg
fildll
mov
mov
cs
pop
popf
push
dec
xchg
inc
or
jnp
int3
jae
mov
leave
xchg
mov
jp
cld
adc
jl
push
pop
ljmp
and
fidivrs
sbb
jge
notb
cli
sahf
clc
push
cli
mov
daa
or
and
in
and
mov
mov
pop
dec
in
cmp
ljmp
xor
mov
cmp
push
sub
mov
jbe
jmp
jmp
decl
outsb
ja
fbstp
cmp
jg
or
bound
fs
js
inc
adc
inc
mov
jle
movsl
loopne
sbb
ret
fwait
xor
sbb
xor
incl
lods
mov
or
into
fmul
jl
xchg
mov
sbb
adc
lods
in
and
incl
mov
push
push
xchg
orb
dec
mov
bound
dec
roll
decl
lods
or
inc
movb
les
add
dec
addb
aaa
mov
movsl
inc
lret
push
pushf
xchg
sbb
inc
decl
jne
rorb
xchg
outsl
outsb
leave
inc
ret
inc
scas
hlt
pop
xchg
and
sbb
stos
pop
dec
adc
lcall
aas
icebp
jns
dec
mov
jecxz
fsubs
mov
inc
pushf
sbb
lcall
rorb
mov
push
xor
push
lods
lret
mov
or
pop
sbbl
cld
sub
lods
pop
push
test
mov
cmp
scas
dec
push
push
jg
lods
jo
lahf
popa
push
bound
lcall
cmp
mov
roll
or
stc
cltd
inc
fs
pop
cmp
sbb
out
and
mov
mov
insl
test
adc
jg
cwtl
adc
push
insb
push
adc
or
out
jg
andb
xchg
xchg
sar
dec
mov
sub
rcl
stos
scas
int
or
sub
sbb
inc
ret
push
jg
repnz
ljmp
cli
cmpsb
pop
into
jge
jb
sbb
or
sub
mov
fwait
insl
loopne
clc
call
mov
jno
sbb
fcomps
mov
mov
mov
inc
mov
xor
pop
inc
rorb
pop
out
sbb
jle
sbbl
mov
add
arpl
jmp
push
adc
sti
loope
repnz
sub
inc
cli
jo
mov
add
nop
or
mov
stc
and
cmp
inc
sbb
jmp
sarb
lret
insl
mov
adc
cmpsb
xchg
fcmove
cmp
decl
mov
iret
rorl
mulb
loop
sub
adc
test
xchg
pushl
pop
sbb
ljmp
sbb
sbb
xor
push
ja
inc
inc
pop
xchg
lahf
subb
cmp
fsubrs
rorl
mov
lcall
test
sbb
lahf
int3
outsl
repz
pop
enter
xor
cmpsl
mov
lods
inc
outsl
adc
inc
jg
mov
jle
dec
mov
mov
test
addr16
xchg
decl
scas
test
imul
inc
orb
xchg
lret
movsb
sbb
cmp
mov
adc
xor
clc
addb
cld
mov
ljmp
dec
js
in
mov
xor
ljmp
pop
push
and
sbb
add
subl
add
out
pushf
adc
mov
jmp
or
ror
fbld
test
scas
lods
jno
in
cmp
lock
dec
cs
dec
and
in
xchg
fs
adc
lahf
aad
iret
jecxz
std
movsb
test
dec
push
mov
movsl
and
das
sar
nop
pushf
sbb
pop
mov
mov
jne
fstpl
push
mov
jle
lea
lods
lds
and
shll
mov
lret
pop
cld
jne
push
mov
loopne
sbb
out
pop
fcos
xchg
out
lods
incb
add
nop
add
push
push
add
sti
sbb
sub
lods
les
pop
outsl
pop
sbb
jecxz
insl
mov
hlt
pop
jl
jmp
leave
xchg
jp
push
fisubrs
sub
lcall
adc
push
mov
mov
decl
mov
inc
or
insb
ret
jo
icebp
xor
xor
fsubs
sbb
cmp
or
mov
push
scas
xor
aaa
pusha
adc
int
out
mov
fdivr
lahf
les
int3
push
add
mov
cs
mov
fcoml
jne
incl
mov
dec
dec
sub
lock
pop
adc
dec
dec
and
sarb
mov
aaa
cmp
repz
mov
inc
lds
cli
push
sub
push
es
jno
sub
movsl
pop
and
imull
pushl
stos
mov
and
call
test
mov
mov
or
insl
addl
xor
loopne
push
xor
mov
and
add
fcompl
inc
adc
cs
inc
incl
daa
sub
pusha
mov
push
xor
mov
in
das
mov
js
mov
call
cmp
sahf
out
add
pop
imulb
stc
inc
cmp
mov
pop
mov
sar
sbb
mov
out
outsl
cmp
or
lock
nop
aaa
mov
xor
pop
cmp
out
dec
out
insl
cld
pop
add
pop
in
sbb
dec
mov
lods
into
add
out
pop
loopne
xorl
fdiv
jno
in
cmp
insl
push
in
jb
lock
mov
pop
loopne
add
test
inc
add
push
ret
xchg
enter
decl
andb
sbb
push
sbb
cltd
mov
movsb
loop
xor
mov
leave
and
lea
lcall
and
jb
xchg
jns
add
pop
add
mov
mov
ja
test
pop
dec
lahf
push
push
arpl
jbe
dec
pop
cmp
fmuls
call
daa
in
scas
jns
icebp
or
mov
rcl
xor
pop
into
xchg
std
pop
add
enter
inc
pop
ret
leave
or
cmpsl
fidivl
sbb
jno
dec
jle
pushw
adc
jle
inc
fnstenv
xchg
or
mov
sub
std
jg
mov
pushf
imul
add
adc
cmp
mov
call
cmp
mov
mov
aam
decl
pop
mov
xchg
sub
adc
dec
jg
incl
mov
inc
popf
and
mull
xor
ss
jg
dec
add
sbb
dec
mov
fbstp
test
push
out
outsb
mov
or
xor
jmp
dec
cli
pop
jl
adc
mov
push
mov
std
outsl
mov
idiv
push
xor
ljmp
mov
std
mov
add
rcll
out
sub
mov
pop
jbe
mov
jmp
dec
xlat
jge
or
mov
fcoms
mov
in
fidivs
push
in
test
test
ljmp
cs
in
jp
or
sub
jbe
cmp
cmp
pop
xchg
stc
adc
repnz
lods
cmpsl
push
addr16
xor
insl
inc
repnz
int3
add
scas
hlt
mov
rcrb
gs
jmp
jnp
dec
inc
or
jmp
push
xchg
dec
and
and
rcrb
pushl
push
push
outsb
inc
cmp
pop
std
adc
subl
jle
inc
jbe
and
negl
mov
sbb
lret
imul
and
xchg
add
or
lcall
xchg
mov
into
popf
stc
jo
lcall
shrl
int
jg
jmp
add
xor
push
cmp
mov
popa
pop
cmp
call
jnp
ret
sbb
dec
loop
xor
movsl
xchg
fwait
sarw
sbb
lcall
fsts
adc
js
ds
sbb
and
and
repnz
call
imul
inc
out
sub
aad
cltd
divl
xchg
ja
xchg
jg
ljmp
fbstp
bound
xor
stos
imul
mov
xchg
jo
decl
mov
sbb
and
jmp
push
lret
xlat
insl
sub
ja
decb
outsl
in
sbb
push
data16
add
adc
mov
sbb
xor
sbbl
mov
mov
popf
sbb
mov
fwait
sbb
jmp
dec
insl
shrb
mov
cmp
and
sbb
bound
int
add
inc
insl
fwait
pushl
add
fistpl
add
adc
test
fistpl
out
popf
add
call
mov
testb
ljmp
movsl
add
dec
mov
xor
incl
fistps
std
mov
addl
sarl
loope
mov
ss
lods
es
ljmp
ljmp
xchg
rcll
mov
popf
mov
lret
incl
add
xchg
fcompl
incl
test
pop
jl
into
hlt
shl
adc
add
repz
inc
push
cmp
xlat
fistpl
bound
mov
mov
xchg
inc
inc
ljmp
fninit
out
cli
jmp
add
mov
int
fmull
push
into
inc
cmpsb
in
sbb
mov
sbb
frndint
dec
shlb
pop
lods
and
sub
lock
jne
ss
mov
mov
imul
and
testl
insb
or
lahf
fnstcw
add
dec
hlt
ljmp
jb
incb
lea
decl
jb
mov
into
mov
mulb
repz
icebp
fwait
das
mov
xor
call
fsubrs
or
out
push
minps
dec
and
test
stos
or
adc
xchg
out
sub
aaa
pusha
xchg
jecxz,pt
loopne
cmc
ljmp
push
decl
push
out
mov
fwait
movsb
call
test
lret
lret
into
xor
mov
cmpl
stos
lds
mov
int
mov
xor
sbb
add
push
aaa
push
insl
insl
xlat
jle
lcall
loope
or
cmp
jno
bound
in
lret
xor
jb
xchg
leave
mov
out
call
fisubl
cli
xchg
or
push
fcomip
cmpsl
inc
sub
sub
aam
inc
lret
and
xchg
popf
clc
hlt
aas
jp
add
jbe
clc
das
pop
pop
ljmp
and
clc
daa
out
into
pop
jle
push
sbb
mov
adc
push
add
ljmp
aam
inc
sti
int
push
sub
inc
mov
mov
repnz
shll
adc
call
sub
rcll
pop
aas
or
add
push
dec
sbb
addr16
mov
jmp
xchg
mov
xchg
rorb
inc
dec
jp
xchg
xor
call
dec
push
xor
imul
ret
leave
pusha
dec
cmc
iret
in
jmp
std
mov
add
jns
push
pushl
cld
push
aad
icebp
adc
movsb
cmp
stc
out
add
add
repz
mov
ret
and
inc
enter
and
push
shrl
sbb
jg
cmc
cmp
adc
test
pushf
cmp
out
stos
out
pop
scas
push
scas
clc
jmp
lods
pushf
icebp
and
mov
pop
mov
xchg
add
jecxz
call
imul
addr16
out
arpl
lods
mov
sti
xchg
cld
addr16
and
xchg
movsl
lret
shlb
aam
mov
add
mov
jne
ljmp
cwtl
loope
and
cmpsl
lret
xchg
hlt
push
push
inc
fldenv
fldcw
daa
sti
mov
jmp
mov
push
lods
aas
jg
sub
popa
and
push
stos
jae
dec
lret
dec
xchg
pop
mov
hlt
push
out
mov
xchg
cmp
sub
test
xor
cmp
xor
jmp
mov
rolb
adc
jb
pop
xchg
mov
repz
xor
pushf
fadds
std
call
insb
ficomps
bound
stos
xchg
fdivs
loop
sub
jae
pop
std
push
push
pushf
repnz
cld
mov
js
mov
std
sub
cmp
cmp
inc
push
test
filds
pushl
sub
test
cmc
bound
mov
push
scas
mov
mov
je
xlat
call
jno
iret
data16
xor
adc
mov
clc
push
out
xchg
mov
jle
add
es
push
ret
adc
mov
ss
push
sub
pusha
mov
mov
decl
ljmp
mov
fs
icebp
cltd
fbld
out
cmp
aaa
ja
mov
testl
fwait
pop
test
ljmp
call
pop
fiadds
xlat
push
adc
mov
mov
or
pop
push
in
stos
call
adc
fisubs
mov
int3
push
ljmp
mov
jl
xor
mov
loop
out
and
cli
mov
mov
decl
adc
mov
frstor
out
shl
pop
lcall
div
outsb
in
rcrb
mov
ficoml
xchg
push
rolb
push
cmp
push
jmp
cmp
movsl
cli
cltd
out
lret
xlat
ja
ret
sbb
mov
adc
fwait
sti
and
das
call
mov
sub
in
cmp
lret
out
fimuls
jne
jo
mov
pushl
mov
scas
lea
lret
sbb
mov
dec
out
xchg
sub
and
lock
adcb
repnz
fucomi
push
sarl
pushf
iret
test
cmp
daa
xchg
push
cld
pop
sti
decl
lock
xchg
sbb
add
arpl
inc
rclb
fsubrs
dec
ljmp
inc
sub
xchg
and
dec
push
add
mov
aaa
push
ds
dec
xchg
push
lahf
cmp
ror
sub
inc
xor
xchg
mov
out
cli
call
leave
icebp
stc
int
mov
aad
cli
xchg
addl
pop
or
xlat
vshufpd
lret
cmp
mov
xchg
repz
jge
pushf
xchg
sti
adc
imull
adc
xchg
add
push
push
sub
xchg
jmp
xor
out
push
and
fldenv
gs
fstl
cli
pushl
and
pop
faddp
mov
push
cmc
cmp
lods
lods
out
mov
lock
add
adc
lret
sbb
inc
fwait
imull
push
fiadds
es
subl
stos
push
repnz
lahf
sahf
pop
repz
decl
mov
jnp
lcall
hlt
add
icebp
int3
pop
fs
movl
call
test
cmp
enter
mov
mov
lods
pop
jbe
rcl
push
pop
aam
inc
cld
mov
cmpsb
imul
nop
cs
jg
fistps
lods
and
test
xchg
sahf
mov
fucomip
push
ds
pop
mov
aad
ljmp
shll
test
cmpsb
adc
pop
inc
or
mov
mov
jg
lods
sbb
popl
in
es
dec
ja
pop
adc
notb
xchg
lcall
lcall
out
fs
clc
mov
cmpsb
ret
mov
jge
jg
in
inc
shrb
dec
fcoml
inc
mov
mov
bound
inc
mov
incl
divb
xchg
ljmp
stos
inc
add
orb
jo
test
lahf
std
in
mov
xchg
das
sub
xor
arpl
test
idivl
iret
std
sarl
lcall
mov
stc
and
jmp
stc
xchg
fidivrs
cli
rcl
in
popf
popf
insl
mov
mov
add
jg
incl
push
push
jne
loop
adc
scas
xchg
mov
repz
cs
add
xor
mov
int
mov
xor
and
hlt
or
bound
enter
adc
rolb
call
fisttpll
or
pushf
popa
jmp
sub
fxch
push
sbb
mov
cli
jp
adc
fneni(8087
stos
les
stos
xchg
popf
in
xchg
mov
adc
loopne
les
add
ljmp
mov
aaa
jecxz
int
jmp
mov
int
pop
sbb
outsl
lds
jno
int3
push
push
push
sbb
or
jmp
xchg
mov
gs
sbb
loop
cwtl
inc
or
lock
add
movl
lods
cld
sbb
int
les
leave
dec
mov
xchg
cli
invd
sbb
jmp
xchg
jne
dec
cmpsl
jns
mov
push
andb
push
sub
fnstenv
lret
lcall
xor
testl
sbb
stos
jle
dec
jecxz
xchg
sarl
dec
hlt
push
add
pop
or
call
jmp
push
mov
xchg
mov
inc
inc
push
add
out
pop
adcb
aam
dec
jo
adc
lods
call
jne
lods
aam
in
cld
pop
or
out
lock
lods
and
mov
mov
call
in
push
fs
push
inc
ret
jne
sbb
push
lea
xor
inc
inc
js
mov
xchg
or
xchg
jmp
iret
in
pusha
xor
call
adc
lcall
mov
aas
fstpt
jbe
adc
insb
call
dec
xchg
xlat
mov
sbb
rol
ds
jle
mov
xchg
mov
mov
or
sbb
jge
fisttps
cmp
fdivs
dec
lahf
imul
call
push
lahf
xchg
sti
ret
sbb
ret
inc
test
cmp
xor
call
cmpsb
mov
mov
adc
or
es
push
loope
pop
aaa
cwtl
push
les
adc
es
decl
or
and
int
adc
outsl
pop
pusha
adc
outsl
or
cmpsl
cmp
addl
stc
jb
std
jmp
mov
ret
les
mov
leave
call
xchg
bound
adc
je
dec
sub
test
pop
add
mov
es
push
cmpl
push
cmp
popf
outsl
fiaddl
in
adc
das
sub
jg
std
mov
dec
sbb
mov
mov
loop
aaa
dec
fnstsw
scas
fidivrs
sar
pop
loopne
pop
lea
gs
in
fsubrs
dec
and
jg
sbb
mov
dec
dec
out
fidivrs
nop
mov
jp
dec
pop
mull
ror
stc
mov
jmp
ljmp
mov
daa
or
in
and
inc
fists
jns
jnp
pop
lock
xchg
push
mov
xor
push
jge
sbb
jmp
mov
lcall
lret
adc
add
jmp
lea
loop
in
inc
aas
lcall
fisubrl
mov
test
outsl
es
adc
imul
inc
xchg
idivb
push
adc
repnz
add
jecxz
mov
sbb
sub
lret
xchg
outsb
or
lcall
dec
cmpsb
sbbl
imul
cmc
cwtl
mov
out
add
push
cs
inc
mov
sbbl
pop
pop
sbb
imul
sub
popa
cmp
or
fadd
jecxz
xchg
scas
dec
and
out
adc
popa
inc
pop
pop
repz
sub
movsb
outsb
mov
pop
cmp
cmp
addr16
pushf
sub
sbb
call
out
lods
push
fs
dec
pushf
jg
rcrl
mov
imul
fs
lea
pushl
jbe
insl
or
iret
dec
cmp
dec
adc
push
clc
lods
xchg
and
mov
call
jne
jno
sub
cmp
subl
enter
push
out
incl
pusha
fs
in
jp
test
xor
push
pop
mov
pop
push
cmp
pop
loope
call
sub
cltd
fucom
in
push
sbb
fcomp
pusha
or
mov
sub
sti
incl
adc
xlat
addr16
cmp
jno
fs
add
out
test
pushl
gs
inc
subb
decl
mov
fstl
in
add
repnz
adc
lcall
fs
mov
mov
rcrb
cmp
pop
pop
repz
push
cltd
inc
les
icebp
loop
cmc
mov
decl
shll
stc
out
or
sahf
imul
sarl
add
addl
stos
shll
ljmp
movsb
ljmp
adc
decl
mov
lret
int3
out
add
iret
cmp
xchg
repnz
cld
xor
adc
or
cld
call
add
pushl
test
faddl
mov
cmp
jb
and
inc
in
imul
mov
ljmp
fidivrl
lds
fsubs
call
aad
fisttps
sub
lock
outsb
lcall
daa
fcomps
cmc
in
movsl
jecxz
cmp
loopne
cmp
dec
outsl
adc
pop
push
data16
decl
call
sub
push
or
adc
stos
lds
das
test
dec
dec
insl
jbe
jmp
call
and
cmp
lahf
dec
jle
incl
fnstsw
mov
fs
pop
iret
xchg
mov
dec
inc
add
sub
repnz
xchg
sub
lret
fwait
test
andl
mov
mov
call
jmp
pushf
mov
inc
mov
addr16
cwtl
ljmp
or
mov
gs
xor
negb
push
je
mov
jmp
pop
cmc
js
sahf
jno
pop
sti
das
fwait
mov
test
xchg
push
jne
or
das
sar
cmp
pop
pop
outsl
insl
jae
push
insb
mov
into
je
push
mov
push
test
cmp
xchg
test
jmp
popf
dec
push
add
pop
dec
adc
push
xor
movsl
xchg
jmp
js
xor
mov
pop
adc
cmp
hlt
cmp
fildl
mov
mov
ljmp
add
popf
jp
and
icebp
push
pushf
dec
mov
aaa
mov
aaa
cmp
jge
ljmp
loop
jp
inc
sub
sbb
arpl
ljmp
mov
inc
je
mov
pushl
mov
mov
clc
repnz
in
adc
adc
mov
hlt
lcall
dec
sub
jns
cltd
mov
pop
push
adc
mov
decb
mov
clc
in
fists
rclb
dec
sub
movsb
mov
test
jno
and
push
xchg
or
sbb
ljmp
es
pop
out
jne
movsl
jb
push
fadds
adc
orl
pusha
leave
xor
sub
lcall
push
neg
cwtl
bound
int
pop
xchg
dec
inc
sbb
call
and
jmp
cmp
jb
imul
adc
push
in
data16
in
jae
mov
mov
cmp
out
jb
mov
pop
insb
pop
sub
clc
push
add
and
lahf
call
inc
and
aaa
cld
ljmp
leave
data16
dec
or
in
pop
mov
pop
or
ja
pop
imul
scas
push
adc
cmp
stc
ret
sub
push
mov
inc
js
dec
cld
sub
das
lock
mov
and
lock
sub
sahf
push
xchg
pop
xchg
inc
outsl
decl
mov
ror
sti
inc
push
mov
push
cld
sbb
enter
sbb
ja
inc
fdivs
inc
and
out
adc
cmpsb
ret
clc
aad
and
and
fisttpll
push
aas
mov
or
int3
mov
mov
mov
and
loop
dec
rcrb
test
push
fldt
push
cld
repz
xor
adc
ss
dec
int
lock
scas
xchg
mov
adc
bnd
jae
inc
cmp
cld
add
nop
cmpsl
ret
repnz
clc
cmp
fs
xchg
std
jo
fsubl
lret
inc
mov
xor
mov
mov
fildll
adc
xchg
sub
jno
call
in
in
stos
ljmp
xchg
or
jge
jns
pop
mov
mov
pop
push
adc
jg
push
out
test
popf
sub
sahf
jp
in
cmp
clc
ja
daa
int
shlb
nop
dec
xor
pushl
cltd
outsl
ljmp
call
out
cmp
pop
add
lret
adc
push
mov
push
and
sub
stos
ret
push
ds
jmp
movntps
rsm
add
fs
inc
inc
jbe
xchg
inc
rcrb
out
mov
sbb
pop
pushf
aad
push
std
sahf
mov
enter
push
jnp
push
xor
enter
mov
fiadds
add
jne
loopne
iret
divb
out
lcall
cmp
ljmp
fbstp
mov
cld
pop
dec
inc
cmp
in
or
inc
mov
add
dec
mov
decl
rcll
les
notl
in
mov
out
xor
cmp
mov
pop
push
setnp
push
sub
fwait
mov
test
ds
out
sbb
and
jecxz
call
jecxz
aam
jae
lea
mov
hlt
mov
jp
aas
movsl
jo
test
data16
ljmp
inc
mov
mov
int3
in
daa
lahf
cltd
filds
std
idivb
fistps
add
mov
in
sarb
cld
ljmp
jnp
out
pop
incl
and
std
popf
mov
aas
or
jle
cmp
test
xlat
movsb
dec
lcall
aaa
jp
out
mov
push
dec
scas
push
sbb
push
and
dec
cmp
call
gs
or
and
xchg
ja
sub
cmp
decl
filds
shlb
xor
mov
pop
push
ror
jmp
push
mov
sbb
fistpl
mov
iret
sbb
sub
cmp
aam
add
cld
xor
popf
aam
leave
test
into
adc
int3
mov
outsl
cmp
lock
pushl
mov
aaa
addb
adc
lods
mov
jg
dec
dec
lret
mov
push
cmp
add
movsb
xlat
mov
sub
lcall
je
sub
xor
cltd
adc
add
fldenv
in
mov
pushf
mov
lret
fs
sub
sar
fldcw
out
insl
push
repnz
insl
sub
and
test
fidivs
pushl
xor
pop
mov
outsb
jno
xchg
dec
int3
adc
jbe
cld
cltd
sbb
jmp
xchg
fstl
out
inc
das
push
jecxz
lcall
mov
stos
adc
stos
test
push
mov
fwait
in
adc
out
pushl
flds
mov
loop
lds
leave
pop
jle
fwait
stc
mov
aas
stos
adc
mov
lcall
dec
xorl
in
outsb
push
xchg
jae
pop
in
hlt
push
pop
cld
jmp
scas
inc
inc
xchg
jle
mov
cmp
and
outsb
xchg
push
sub
ss
out
call
mov
jge
dec
push
adc
sub
push
icebp
adcb
inc
xchg
enter
popf
dec
in
cmpb
scas
or
inc
popf
cmp
add
call
out
int
fiadds
mov
cli
dec
hlt
lcall
push
mov
lahf
scas
and
jns
out
adcb
push
test
xchg
inc
mov
or
stos
inc
mov
mov
sub
xchg
xlat
xchg
xchg
xchg
inc
cld
sub
hlt
in
jmp
stc
and
test
rcrb
daa
arpl
hlt
in
adc
adc
lret
pushf
lcall
mov
push
inc
das
repnz
ret
and
lds
xchg
mov
inc
sub
pushl
decl
cmp
push
nop
add
movsl
or
je
aad
cmp
fisttpl
sub
inc
xor
pop
icebp
call
idivb
or
sub
push
in
lock
jp
pushf
cmp
incl
push
push
adc
mov
inc
icebp
xchg
cmp
decl
std
mov
lcall
icebp
cmp
ret
xchg
dec
mov
fidivs
push
push
xor
jne
lar
or
fmuls
movsbl
fadd
fwait
jno
mov
cmpxchg
in
and
jp
add
insb
imul
lcall
daa
popf
in
cltd
dec
push
inc
push
jae
jg
repnz
or
xchg
xor
test
lcall
xchg
sti
sarb
lret
pop
fstps
push
lock
mov
push
jbe
lcall
xchg
insb
xchg
jbe
adc
dec
jno
lcall
dec
ss
xor
adc
sub
jno
mov
lea
dec
jbe
call
xor
add
and
pop
mov
aad
add
push
cmpsl
call
enter
jbe
or
out
xor
fnstenv
dec
and
add
add
push
icebp
and
call
lods
adc
cmp
jb
push
jp
negl
inc
lea
popa
pop
lcall
jnp
aas
mov
mov
adc
mov
xlat
aad
lock
fs
mov
mov
and
push
dec
shll
xor
and
push
add
mov
push
loop
or
xorl
and
lahf
inc
jmp
cwtl
xor
scas
in
xchg
dec
push
std
insb
cmp
mov
pop
inc
lcall
mov
cmp
lods
aam
popf
xor
dec
movsb
mov
cmpsb
mov
push
xor
decl
mov
mov
and
test
xor
add
pop
jecxz
addr16
call
movsb
loop
ss
sahf
dec
mov
loop
pop
jmp
sti
adc
mov
jbe
lret
adc
filds
je
lds
push
jb
ret
mov
ljmp
pop
inc
dec
pop
sub
mov
mov
push
xchg
jmp
xor
lcall
cmpsl
out
ret
add
imul
popa
xorb
sbb
pop
decl
loope
jg
dec
clc
dec
xor
jecxz
xlat
add
pusha
push
mov
pushl
or
pop
out
icebp
jmp
push
adc
out
cwtl
lock
js
push
mov
push
lret
mov
insb
les
jp
addr16
sub
and
ljmp
jl
sbb
mov
popa
lock
xchg
dec
dec
repnz
cmc
sbb
sbb
std
sub
pusha
pop
es
outsb
int3
ret
les
sub
movsb
incl
mov
inc
lcall
sub
mov
sub
jae
movsb
mov
iret
movsb
stc
jae
jne
ljmp
xor
ret
jnp
and
cmp
or
xor
icebp
hlt
cmp
lahf
lcall
or
scas
sbb
lea
stos
jns
pop
out
cs
inc
test
jnp
xchg
fsubs
inc
mov
cmp
imul
clc
push
sbb
push
pop
stos
jno
call
cmc
mov
dec
bound
lahf
in
jbe
es
jp
fwait
jns
imul
sbb
fimull
stos
sub
scas
cmp
xor
dec
cwtl
mov
jbe
jmp
sbb
es
inc
mov
or
cld
call
stos
mov
test
insb
popf
pop
sbb
pushf
in
mov
shlb
mov
ljmp
dec
sub
movsb
data16
sbb
mov
shufps
jl
pop
cmc
cmpb
dec
mov
sub
ficomps
jg
fcmove
shll
test
out
and
and
jl
mov
pusha
call
xor
xchg
push
imul
stos
dec
decb
loopne
stc
daa
jmp
mov
dec
jne
pop
push
xchg
jl
cld
xor
daa
xchg
enter
inc
test
lcall
repz
mov
cmp
mov
push
fidivrl
mov
outsb
inc
fwait
and
jae
and
jg
mov
stc
loop
or
cld
jp
sub
outsl
into
dec
loopne
cli
scas
add
cmp
cwtl
mov
jns
jbe
xor
call
dec
mov
les
xchg
jbe
xor
insb
leave
mov
inc
dec
mov
rcrl
pop
jae
jns
repnz
add
mov
inc
or
or
jp
pop
ret
push
stos
mov
sbb
lret
mov
jmp
les
jl
jmp
cmp
ficompl
mov
push
iret
jb
mov
pop
pushl
mov
xor
push
and
scas
or
sar
jmp
je
add
xlat
arpl
xchg
icebp
mov
popf
enter
jg
dec
mov
dec
cmp
xor
add
xor
insb
jb
pusha
out
fmul
adc
push
lcall
subl
mov
filds
lcall
and
sti
jb
or
icebp
ss
adc
fwait
outsb
loopne
loope
mov
aaa
mov
pop
dec
ficomps
cmpb
mov
repnz
jo
fildll
out
loope
mov
push
sti
sbb
nop
fstpt
outsb
lcall
jne
out
xor
and
cwtl
sbb
mov
pop
mov
dec
decl
jmp
rcr
iret
xchg
lods
call
adc
jns
rcrb
out
mov
mov
mov
clc
incl
xor
jnp
or
clc
mov
ret
jge
inc
sbb
ljmp
mov
mov
xchg
sbbb
dec
ljmp
stos
mov
idiv
lcall
xor
dec
inc
mov
lock
mov
es
ljmp
mov
stos
add
jno
add
push
enter
int
push
jnp
jg
and
cmp
sahf
mov
ljmp
xor
imulb
dec
in
jg
incl
mov
xchg
xor
clc
pop
cmp
addr16
adc
adc
shrb
fcomip
rcrb
pop
push
xchg
cmp
jg
outsl
rclb
mov
or
inc
xchg
jns
daa
jo
fiaddl
loope
rcrl
scas
pop
xchg
mov
imul
cmpsb
int
popa
cmp
xor
add
paddq
es
cmp
dec
inc
jns
pop
inc
pushf
pusha
jle
pushl
pusha
bound
xchg
adc
pusha
adc
dec
in
jns
push
and
mov
dec
mov
cmp
add
mov
aas
in
push
cld
stos
dec
shl
sub
and
dec
pusha
pushl
add
or
test
push
loop
push
and
repnz
es
or
ss
jo
nop
mov
in
jmp
cld
mov
bound
iret
rcr
jle
dec
mov
les
mov
xchg
push
pop
cmc
test
mov
push
test
cli
sti
icebp
mov
cmp
inc
mov
mov
adc
std
hlt
mov
outsl
gs
and
outsl
pop
pop
xchg
add
mov
dec
scas
jnp
sti
gs
sbb
xchg
incl
popa
ror
int3
mov
and
pop
and
add
and
incl
lret
pop
leave
cmc
mov
xchg
adc
inc
xor
faddl
pop
mov
xor
shrb
or
push
jecxz
dec
or
jo
push
popa
mov
xor
stos
incl
lock
mov
das
mov
lock
bswap
fisubrl
mov
movsb
std
pop
loopne
rcrb
push
xchg
pop
pop
inc
lret
filds
int3
dec
push
push
inc
add
pop
adc
xlat
cwtl
mov
inc
mov
adc
idiv
fcomip
or
or
mov
sub
test
jb,pn
lods
xor
aad
enter
ljmp
repnz
mov
pusha
sub
inc
jnp
dec
mov
out
leave
leave
fs
stc
pushl
loopne
scas
inc
pop
scas
mov
xor
movsb
adc
repnz
adc
and
ljmp
inc
pop
fwait
pop
imulb
mov
cmc
dec
call
push
fstl
clc
incl
xchg
xor
and
outsb
mov
pop
mov
bound
and
or
sbb
fxch
repnz
dec
lods
lahf
adc
jecxz
ret
jno
pop
inc
repnz
adc
and
cmpsl
or
sub
push
jb
mov
dec
pop
shll
dec
clc
jecxz
pop
sub
mov
pop
sbb
ljmp
mov
adc
cmp
cmc
push
pop
mov
pop
push
adc
testb
out
std
pusha
pushl
cld
fisubl
repnz
or
shld
pop
aad
and
mov
xchg
stos
int
int
lret
add
fldl
in
ljmp
inc
xchg
hlt
ret
push
idivb
loopne
mov
inc
aas
aas
stos
mov
lcall
and
loop
pushf
cmpsb
inc
ljmp
insl
test
jne
scas
lods
lcall
incl
lcall
cmc
jmp
adc
mov
adc
fisubrs
or
outsb
sub
push
sbb
sub
add
enter
jnp
stos
dec
outsl
jmp
xor
aas
test
repz
mov
lea
dec
mov
insl
decl
cltd
loopne
iret
pusha
mov
add
lds
cmp
pushf
fisubs
mov
notl
insl
mov
jp
pop
mov
pop
fcoms
popa
pusha
lods
aaa
push
cs
and
mov
push
enter
jno
mov
iret
loop
movsl
lock
mov
iret
test
lock
push
add
dec
mov
inc
cmpsb
mov
dec
int
mov
mov
popa
push
ds
call
pop
arpl
mov
ret
fnstsw
ja
sub
adc
xor
aam
sbb
call
inc
xor
mov
je
enter
lret
pop
cmp
das
sub
popa
dec
pushl
iret
xorb
stos
mov
shll
nop
mov
sbb
jno
fwait
jb
pop
xchg
dec
decl
mov
add
cmp
xchg
mov
repnz
ret
mov
lea
push
cmp
incl
aad
push
jb
push
add
lret
mov
mov
sarb
addl
decl
movsb
mov
pop
out
mov
jge
insl
and
add
push
sbb
loope
mov
and
inc
or
dec
jne
xchg
sbb
inc
sub
push
pop
jge
mov
xchg
xor
cmp
pushl
pop
pop
mov
mov
clc
sub
fsubl
jb
incl
mov
sub
sub
xchg
dec
repnz
and
repnz
stc
fwait
test
call
int3
jl
push
imul
decl
popa
mov
aaa
hlt
push
dec
idivb
and
cmpsb
imul
push
incl
inc
mov
add
cmp
add
enter
mov
xor
icebp
push
incl
pop
mov
fsubl
dec
inc
movsl
jl
mov
add
inc
inc
push
jp
insb
jnp
mov
cli
shll
rol
push
mov
sub
fwait
bswap
hlt
push
aad
decl
subb
leave
leave
pusha
sahf
js
nop
push
es
xchg
bound
leave
lcall
pop
inc
popa
test
add
cs
xchg
push
test
jbe
mov
jnp
pusha
hlt
decl
mov
bound
sub
sti
xchg
sbb
test
popa
inc
int3
jae
xor
jae
mov
iret
incl
and
xchg
out
push
out
mov
fimull
xchg
aaa
roll
dec
aaa
popa
add
cltd
aas
cld
jl
sbb
pop
mov
pop
mov
mov
jne
mov
inc
adc
call
stos
lods
adc
in
and
cld
popa
dec
int3
mov
push
sub
mov
fimuls
clc
push
ja
out
popf
pop
mov
dec
sbb
repnz
push
ret
call
push
icebp
push
mov
icebp
xchg
aam
pop
pop
push
cmp
jns
fbstp
test
call
cmp
inc
sbb
pop
and
jmp
scas
mov
and
and
decl
mov
leave
mov
push
enter
dec
es
int
cmp
cmpsb
fnstenv
in
pop
fiaddl
verw
or
sub
fisubl
push
sbb
xchg
jmp
ljmp
jae
mov
pop
orb
adc
insb
movsl
hlt
jg
xchg
jnp
sub
pop
jecxz
or
fldt
movsb
clc
jb
cmpsl
pushl
fwait
out
lock
fxch
add
ds
sub
fimull
bound
sbb
jae
cwtl
stos
cltd
xchg
dec
outsl
clc
jmp
test
xor
inc
jle
xchg
mov
rclb
lcall
enter
jp
fwait
outsl
cmp
popa
enter
mov
cli
cmc
stos
mov
je
mov
out
je
jb
mov
and
inc
jle
fistps
push
call
test
aaa
vorps
ret
pop
or
inc
hlt
mov
pop
jne
cld
mov
std
add
xchg
jae
movsb
pop
movl
lds
xchg
mov
add
out
ja
xchg
cld
loop
ljmp
pop
es
stc
mov
decl
out
inc
mov
xchg
dec
std
mov
pop
and
cmp
pop
adc
test
push
mov
addr16
ss
sbb
call
sti
ja
xorl
iret
in
xchg
dec
xchg
sub
push
add
iret
or
imul
decl
inc
scas
mov
pop
inc
sub
add
loopne
addr16
outsl
sub
cmpb
cmp
std
orb
dec
mov
mov
jnp
out
bound
in
xor
ljmp
mov
popa
push
jp
scas
add
push
bnd
lds
sarb
lock
std
xchg
das
int3
popf
adc
xchg
test
mov
call
jl
test
loop
jbe
lea
popf
loope
or
xor
fwait
inc
andb
cmpsl
inc
cld
bound
dec
dec
dec
imul
cmp
iret
fdivl
sbb
jmp
cmpsl
and
pusha
mov
sbb
inc
add
jns
cmp
xorl
dec
xor
sbb
jae
jp
lret
push
lcall
mov
jp
shlb
jmp
mov
adc
std
out
lods
mov
and
or
xor
push
jb
popa
sbb
cli
aas
mov
xor
jne
insl
lock
jo
pop
dec
inc
adc
dec
stos
outsb
jo
frstor
push
hlt
cmp
cli
sbb
inc
push
roll
push
lock
xchg
ljmp
mov
dec
mov
mov
movsl
test
ss
mov
xchg
sbb
jle
sub
pop
test
mov
cwtl
or
inc
dec
insb
or
ljmp
movsb
cs
ret
push
jmp
adc
xchg
sbb
ds
aas
ret
fimuls
lcall
test
test
int3
pop
jb
imul
jle
cmp
decl
xor
push
cli
sub
lods
and
dec
fcomip
arpl
push
adc
loop
aaa
cld
pop
or
in
push
dec
sbb
rorl
fmull
popa
call
jo
test
xchg
mov
push
mov
clc
int
repnz
mov
jecxz
lcall
sub
pop
xchg
dec
mov
xchg
mov
aad
jb
push
mulb
push
cld
ljmp
jle
es
xlat
popf
int
mov
sub
jecxz
shl
call
cld
out
test
inc
subl
jns
mov
scas
cld
mov
cld
pushl
push
xor
xor
shr
adc
jne
repnz
cmpsb
sub
loopne
sbb
add
rclb
mov
sub
sbb
mov
jl
mov
sub
fsubs
mov
mov
cmp
dec
jg
sbb
add
scas
clc
outsb
adc
push
dec
lods
jl
adc
or
cmp
jg
and
aad
inc
jbe
clc
sarb
les
pop
leave
movsl
sub
stc
ljmp
push
and
adc
int3
push
jno
and
xchg
jbe
loopne
push
loope
fidivrs
mov
mov
add
xchg
mov
sarl
std
popf
xchg
dec
fs
jmp
in
in
cli
cmp
loope
or
aas
adc
call
mov
sti
or
jae
xor
lcall
in
xchg
or
cmpsb
cmp
xchg
sbb
decl
fsubrl
and
roll
lods
and
insb
repnz
inc
sti
fidivrl
rolb
hlt
incb
decl
dec
pop
push
xchg
or
jg
pop
aad
out
xchg
mov
jmp
and
out
cmp
or
pop
hlt
call
nop
jbe
pop
int3
std
leave
and
pop
les
mov
loop
les
xlat
push
cmp
shr
jg
pop
pop
shr
adc
daa
push
mov
mov
adc
jmp
sub
cmpsb
pop
lret
es
into
aas
jecxz
outsb
or
insb
cmp
fdivrp
fadd
dec
aas
mov
sbb
mov
mov
aas
mov
pop
xor
mov
cli
ljmp
test
les
enter
or
mov
outsb
pop
fwait
je
popa
inc
and
fcomip
cltd
cwtl
in
push
mov
pop
addr16
imul
nop
xchg
imul
xchg
mov
ljmp
xchg
into
jecxz
xchg
cld
mov
sbb
aad
std
or
add
ljmp
sar
mov
jl
push
and
and
mov
ret
daa
add
pop
imull
mov
dec
inc
add
fisubrs
xor
nop
mov
lret
dec
sbb
cmp
lret
outsl
addr16
loopne
jp
xchg
mov
clc
repnz
stos
jg
adc
mov
sub
adc
inc
add
mov
ret
or
mov
jne
xchg
jmp
out
or
ljmp
jo
adc
inc
inc
sub
mov
mov
lea
ljmp
sbb
int
xchg
notb
dec
ss
mov
jo
fs
inc
cmp
pop
nop
decl
pop
popf
adc
xor
pop
loop
mov
imul
xchg
imul
shll
add
pop
jae
and
das
jnp
stos
jp
cld
arpl
popf
cmpsl
fs
xor
incl
xlat
mov
les
sbb
mov
push
sbb
rolb
xchg
out
mov
pushl
pushf
xchg
movsb
popf
lods
dec
dec
mov
fwait
pop
sbb
mov
sbb
dec
outsb
test
dec
insl
jmp
or
incl
mov
mov
jp
xlat
mov
ljmp
xchg
test
in
cmc
and
push
push
aad
hlt
cmpsb
mov
sbb
fdivl
orb
jmp
outsb
push
add
aaa
mov
pop
cmp
add
pop
data16
push
adc
jb
xchg
cmp
fcomip
cmp
xor
inc
mov
lcall
mov
jge
mov
decl
sbb
jno
sti
mov
push
test
cmp
movsb
movsl
outsl
ljmp
jb
cmp
add
xor
mov
xor
out
xchg
pop
sub
jle
jmp
jl
enter
lahf
sti
mov
outsb
cmpsb
call
adc
insl
xor
lret
mov
int
adcl
push
inc
incb
xor
into
mov
sahf
decl
fists
and
stos
xchg
sbb
outsl
in
lea
ret
mov
mov
incl
xor
jb
mov
mov
lret
pusha
fsubs
into
mov
ja
cmp
pop
cmp
add
push
cmpsb
das
pop
xchg
xor
lods
or
cmpsl
sbb
mov
popf
out
push
outsb
rolb
loop
sub
call
cld
adc
sub
mov
scas
mov
and
cwtl
sbbb
ljmp
int3
in
inc
push
cld
notl
sti
icebp
sbb
sbb
sub
call
jmp
push
pop
mov
mov
dec
aam
sbb
roll
jge
jg
roll
pushl
push
jp
inc
mov
push
popf
mov
pop
outsb
decl
pop
mov
fnstcw
mov
frstor
cmp
dec
sbb
gs
and
adc
push
insl
sub
and
push
shlb
ljmp
cli
sti
std
inc
mov
aas
dec
add
push
cmp
xchg
loopne
stos
sub
inc
ljmp
movsl
sbb
push
xor
lock
xchg
lahf
repnz
add
lcall
icebp
outsl
pushf
in
and
push
testb
and
sub
xor
xchg
je
or
sbb
lods
cmp
dec
dec
scas
xlat
lcall
mov
movsb
mov
mov
jo
inc
jle
or
adc
jmp
jno
pop
enter
xchg
jmp
in
decl
ret
insb
add
mov
jmp
std
pusha
inc
pop
shl
mov
dec
inc
xor
sbb
gs
stc
nop
clc
sub
add
jbe
cmp
jmp
inc
pushf
dec
mov
jp
mov
lds
negl
pop
ljmp
add
test
mov
xlat
jo
ja
int3
dec
sub
jmp
mov
jnp
or
popa
aaa
or
xchg
jnp
ficoms
mov
ja
es
adc
jge
lret
insb
dec
movsb
filds
lock
decl
pop
loop
aad
or
push
ss
in
decl
into
and
pushf
xorl
pushl
jg
pop
jmp
adc
pusha
xchg
dec
xor
divps
adc
jg
xor
inc
loopne
jns
and
xlat
int3
xor
popa
mov
lock
mov
xlat
pushl
xor
bound
ja
xchg
jge
stos
cmpsb
jbe
and
orb
adc
pushl
inc
in
sbb
je
add
or
adc
jge
ja
call
cmp
insb
jmp
cmpsl
inc
sub
sbb
adc
xchg
int
xor
mov
xchg
scas
into
loope
outsb
jo
mov
and
enter
decl
dec
ret
lcall
sub
mov
icebp
cld
mov
xchg
push
das
sub
inc
inc
scas
data16
insb
cltd
xchg
sbb
sbb
push
dec
mov
std
lcall
xor
cs
js
nop
in
xor
push
in
je
jno
mov
lcall
mov
repz
or
dec
sub
mov
sub
out
lcall
fcmovbe
and
lea
dec
inc
bound
aam
nop
sub
xor
push
jo
xchg
mov
call
dec
ja
mov
jle
shrb
imul
pop
lods
in
push
mov
fucompp
push
imul
or
arpl
mov
div
aaa
stc
push
rcrb
mov
mov
aaa
xor
aas
ja
sub
ds
ljmp
insb
sbb
in
push
mov
cmpsl
sbb
das
clc
jmp
xor
fwait
or
mov
mov
push
loope
dec
mov
pushl
ror
in
mov
mov
daa
and
xchg
dec
mov
in
inc
mov
ljmp
inc
mov
jecxz
rcrb
mov
jno
out
jg
incl
xor
push
sahf
jnp
movsb
or
mov
in
test
pop
arpl
sbb
aaa
cld
mov
sub
test
int3
ds
jge
mov
orb
nop
mov
pop
ja
push
mov
adc
push
xchg
ss
xor
loopne
test
cmc
test
add
jns
mov
scas
push
mov
ljmp
cmp
inc
fidivl
imul
add
pop
mov
push
bound
adc
add
or
dec
scas
mov
mov
jg
sub
xchg
adc
and
movsb
push
js
incl
ret
jl
je
enter
pop
pop
adc
jmp
stc
push
fidivl
sbb
and
ret
cmp
xor
sub
push
rcll
pop
popf
adc
lcall
adc
sti
sbb
jecxz
adc
xor
arpl
mov
add
sbb
xchg
mov
cs
clc
fcomps
test
add
push
lods
scas
loop
cmp
shll
int
nop
cs
movsl
push
lcall
decl
shll
popa
testb
outsl
and
xor
in
outsl
sbb
xchg
aad
out
cmp
lds
je
ret
add
es
cld
xchg
mov
sbb
jl
add
jmp
sub
int3
inc
out
in
pop
popf
shl
mov
jle
jp
inc
lock
outsb
or
jg
sbb
pusha
repnz
enter
ljmp
int3
movsl
sahf
ret
call
xchg
in
and
mov
insl
push
adc
fdivl
xor
mov
int
add
jno
ret
jno
call
std
lahf
inc
and
mov
dec
push
xor
fmull
jnp
pop
pop
mov
mov
decl
mov
adc
jb
xlat
es
ljmp
lock
jno
xchg
sbb
mov
jg
roll
mov
mov
jo
rcrb
xlat
or
stos
pop
enter
fdivs
outsl
daa
or
dec
cmc
sbb
loopne
dec
xchg
jns
pop
mov
les
incl
aam
jp
add
shlb
pop
in
lods
adc
push
ret
mov
mov
jmp
orl
imul
add
cmc
and
aas
sub
cmc
dec
decl
shll
inc
inc
dec
fnsave
mov
push
lock
in
lcall
cli
test
arpl
pop
jecxz
jge
mov
sub
sti
in
jmp
or
mov
popa
sbb
sbb
mov
push
sbb
adc
or
cmp
add
repnz
cmpl
lods
mov
int3
fisubrl
lods
xor
mov
cmp
push
cmpl
dec
mov
jae
xor
xor
sub
xchg
cmp
outsw
sbb
lods
sbb
rorb
push
pushl
lret
jp
mov
movsl
cwtl
dec
or
fildl
sub
ficomps
cltd
mov
out
push
mov
mov
inc
xchg
pop
mov
lcall
mov
stos
mov
pop
mov
and
cmp
jns
out
ret
or
call
xchg
push
fisttpl
loopne
nop
mov
jae
push
fistpll
test
pushl
mov
xlat
test
mov
mov
cmpsl
pop
std
scas
sbb
xchg
cli
inc
loope
into
lahf
mov
and
cld
loopne
sub
aam
jg
call
aas
nop
adc
mov
cmp
cmp
jne
mov
xchg
xchg
ud0
incl
test
mov
outsb
push
push
clc
aam
and
dec
in
pop
ffreep
aaa
in
scas
mov
decl
add
cmp
pop
test
fcoml
pop
addr16
cmp
pusha
dec
dec
cmpsl
jns
dec
cltd
ljmp
pop
aad
dec
jp
rcr
mov
loopne
cmp
mov
lcall
sub
std
xorb
and
sub
push
cmp
mov
mov
call
sti
das
jge
jbe
push
xor
push
add
enter
rolb
pusha
add
and
scas
push
inc
dec
cmp
idivb
test
sub
call
xor
mov
xchg
cld
or
fwait
lds
adc
pushl
pop
push
in
push
add
or
clc
mov
mov
dec
cltd
ret
test
xchg
mov
mov
call
jb
mov
add
stc
mov
lea
sahf
outsl
mov
dec
inc
ljmp
mov
and
dec
pop
imulb
mov
insb
popa
sbb
adc
shlb
xchg
sbb
fwait
mov
mov
repnz
aam
rcrb
xor
ret
test
mov
call
jns
sub
mov
push
icebp
cmp
fists
sbb
dec
dec
xor
xor
pop
lcall
fs
data16
clc
and
jns
out
cmp
mov
pop
xchg
jg
lcall
push
xchg
inc
popl
cmpsl
inc
fsts
lret
mov
out
cli
ljmp
stos
sub
dec
jmp
sbbb
cmp
add
flds
mov
pop
decl
lods
int
sbb
mov
push
aas
sbb
push
call
sarb
push
and
or
fimull
sbb
dec
into
lds
push
test
out
test
shll
push
pop
mov
out
pusha
stos
nop
leave
mov
inc
xlat
pop
lret
lcall
or
xor
insl
or
das
lds
ljmp
pop
mov
mov
insb
fistpll
pop
in
ljmp
push
adc
adc
pop
cmp
sbb
shrb
pusha
das
xchg
pop
cmova
pop
or
incl
imul
shlb
loope
cmp
imul
pushl
add
sti
leave
mov
jge
mov
mov
sbb
jg
es
pop
sbb
mov
sbb
loope
add
jge
mov
in
xchg
xchg
push
cmp
and
sub
fs
icebp
int
cmpsb
cld
dec
pop
clc
ret
jnp
pop
pop
xchg
jg
mov
loopne
cld
fsubs
and
mov
frstor
xchg
jl
jg
mov
cmpsl
jno
xchg
std
sub
and
sbb
jmp
out
clc
sub
adc
ljmp
out
dec
xor
insb
push
mov
add
bound
pcmpeqb
fcomip
pushl
mov
cwtl
jp
or
pusha
or
jmp
mov
jae
add
adc
sarl
scas
ficomps
ret
incl
push
seta
and
fmul
out
cmp
out
xchg
aad
jnp
test
in
incl
mov
loope
mov
test
loopne
loopne
pop
or
pop
jmp
add
jmp
and
cmp
ret
mov
inc
xchg
xchg
out
xchg
push
adc
mov
lea
shrb
sar
adc
sarb
in
sbb
or
add
sub
ljmp
mov
shlb
stc
aad
cwtl
jns
sub
lcall
leave
push
insb
adc
push
rcrb
loope
lret
or
mov
sbbl
fcomi
cltd
dec
dec
dec
decb
xchg
xor
call
lcall
shl
sti
scas
sbb
inc
jmp
fstl
inc
inc
jae
bound
dec
cs
ljmp
sbb
mov
ret
rcll
aad
fdivrs
adc
cmp
addl
xor
jne
pusha
fsubs
test
pop
sub
push
xorb
or
subl
dec
sti
or
out
test
pushl
inc
lods
ja
push
adc
sbb
adc
in
aaa
dec
inc
jae
mov
push
cld
jmp
add
sbb
mov
cmp
adc
lcall
dec
rcrl
jg
or
pop
movl
iret
rcrb
xor
xchg
movsl
push
hlt
cmp
mov
push
insl
arpl
and
jg
inc
sub
movb
lea
aaa
icebp
mov
sub
pop
sbb
fcoml
jmp
popf
gs
mov
and
test
sub
outsb
lock
jne
std
sbb
addr16
or
into
lcall
push
mov
dec
mov
fisubrs
inc
or
jmp
jo
mov
loopne
stc
fisubrs
fwait
xor
pop
sar
arpl
ljmp
mov
add
push
xchg
add
and
imul
incl
ljmp
ljmp
lcall
dec
sbb
ljmp
es
xor
js
imul
fbstp
repnz
xor
mov
inc
fyl2x
loopne
out
xchg
lret
push
stc
bound
in
lcall
inc
mov
add
incl
nop
std
push
mov
add
rcll
mov
and
jmp
or
std
pop
das
das
mov
outsl
movsl
mov
lods
pop
std
test
xor
ljmp
dec
fstps
xchg
or
repz
and
dec
xchg
mov
mov
mov
fbstp
cmc
scas
repnz
stos
rcrl
jg
or
imul
pop
cmp
popa
xchg
sarl
jmp
jecxz
cvtps2pd
repnz
out
dec
jmp
out
dec
push
jle
or
dec
and
jg
mov
xor
out
mov
je
shl
inc
push
dec
cmpsb
lcall
sarl
aad
mov
aaa
xchg
leave
jns
inc
inc
shl
cld
call
or
or
movsl
push
ds
dec
arpl
mov
mov
popa
call
adc
out
popf
negb
hlt
ja
iret
xchg
dec
inc
pushf
out
scas
bound
decl
mov
out
add
cmpsl
cmp
jmp
pop
sbb
push
or
mov
loop
cmp
mov
int
xor
lock
adc
sub
add
jecxz
sbb
cltd
leave
cmc
shlb
fcomip
xchg
mov
pop
in
and
xchg
xchg
pop
adc
or
test
stos
xchg
or
ljmp
jnp
into
mov
push
je
sahf
dec
insl
or
and
push
pushl
dec
mov
dec
addr16
fdivr
hlt
add
mov
dec
das
hlt
pop
imull
pushl
fisubrl
push
xor
sbb
addl
push
aad
popf
sar
cs
pushl
cmpsl
in
xchg
leave
mov
adc
fbstp
js
or
test
jmp
in
xor
insb
cmp
ret
cli
leave
shr
repz
xchg
test
add
lods
or
lods
arpl
scas
inc
rcrl
adc
inc
sub
sahf
push
popf
hlt
call
loopne
mov
jp
jo
lods
repnz
iret
lods
xchg
cltd
lock
push
mov
cld
lcall
fwait
lds
sbb
push
xchg
call
push
js
incl
shll
cld
test
stc
xor
loop
cmp
and
lcall
out
sub
mov
ss
lret
mov
sti
and
fbstp
mov
std
data16
xchg
aad
push
mov
andl
outsl
cli
push
data16
push
add
push
stos
push
es
mov
sti
push
ljmp
mov
push
dec
mov
push
mov
pop
ror
cmp
dec
or
nop
and
fcomip
jo
mov
xlat
int
in
cmp
push
sbb
mov
test
fildll
jnp
adc
jne
sub
jmp
xor
fldl
push
enter
lods
adc
sahf
test
les
jmp
push
jae
aas
dec
jae
jecxz
mov
pop
push
adc
mov
cmp
out
xchg
rclb
pop
xor
int
pop
out
add
push
insl
into
jnp
jb
pop
push
enter
adc
push
add
addr16
mov
les
jne
ss
data16
sub
lcall
adc
pop
cmp
bound
clc
push
and
mov
push
cmpsb
adc
lcall
pop
cmp
push
add
sbb
cmp
cltd
and
nop
inc
cmp
push
test
incl
jb
mov
fildl
mov
enter
in
cltd
lods
cmp
inc
cmp
decl
call
pusha
xor
shr
aas
loopne
popf
bound
cmp
call
mov
insb
mov
jns
insb
lret
iret
mov
aad
cmp
or
decl
jne
adc
sbbl
jle
xlat
in
inc
scas
cltd
push
mov
out
clc
jg
shlb
cli
mov
push
push
cmp
scas
cmp
int3
pushl
roll
push
ja
stos
nop
and
jl
lret
std
gs
add
test
mov
decl
bound
into
ss
xchg
xchg
out
xchg
and
lret
mov
jbe
sub
jmp
jge
xchg
cmp
pop
lods
cmp
jp
fidivrl
push
mov
adc
mov
shlb
stos
sarl
test
jg
jno
mov
adc
loope
dec
push
pop
and
mov
pop
mov
ret
jo
dec
std
imul
or
leave
cltd
les
jns
cmpsb
xchg
lds
test
push
imul
cmp
insb
mov
inc
movsl
adcl
add
inc
sbb
sbbl
pop
out
pop
cld
decl
dec
sub
rcrl
xchg
or
out
mov
inc
arpl
std
mov
jg
lret
mov
ljmp
xchg
mov
ret
fildl
into
mov
pushl
sbb
jp
adc
daa
pop
add
orb
pop
ficomps
repnz
cmp
adc
lcall
cmp
xchg
std
sahf
lds
lahf
outsl
hlt
repnz
jo
jno
mov
into
or
call
mov
mov
adc
rolb
rclb
push
mov
lcall
data16
pop
aad
mov
out
repz
lods
cmc
xor
xor
jbe
ja
decl
xorb
sub
cli
pop
sub
test
jne
cli
addb
fnsave
shrb
inc
in
dec
aas
leave
lret
mov
mov
testl
push
lods
or
pop
rcrl
out
add
lea
fcomip
lods
sub
ljmp
jns
outsl
aas
ret
scas
scas
ds
inc
sahf
sbb
xchg
inc
cmp
sbb
adc
jne
cld
lods
jne
stos
outsb
ljmp
repnz
scas
push
xlat
add
push
jbe
je
rcrl
repnz
call
into
ljmp
fimull
fdivl
mov
cmp
mov
jmp
sub
push
sbb
xchg
xchg
xorl
sti
hlt
pushf
jp
inc
fs
out
dec
std
push
push
lcall
dec
ljmp
cmpsb
sti
cmpl
pop
pop
lock
or
clc
push
call
sbb
loope
pop
pushf
cltd
mov
insb
xchg
test
ret
xchg
test
std
incl
and
jo
mov
pop
dec
push
gs
and
repz
loope
push
mov
sub
sbb
stos
pushl
loopne
xchg
imul
std
sahf
ja
call
in
ja
loope
pushf
cmp
ret
jne
shl
ss
cmpsb
loopne
sbb
dec
jl
pop
push
jp
push
divl
dec
push
xchg
push
cmpsb
add
pop
pop
cwtl
push
jp
xlat
je
or
call
add
and
jp
mov
jno
outsb
sub
dec
push
daa
pop
jae
dec
or
add
xchg
rcr
jg
jbe
in
inc
imul
fcomip
jmp
arpl
dec
enter
outsb
loope
cld
push
aam
inc
ljmp
mov
fcomip
decl
mov
add
shrb
and
shrl
jle
outsl
pop
hlt
test
mov
xchg
sbb
pop
jmp
addr16
cmc
mov
mov
or
test
sahf
movaps
pop
cmp
lcall
fcos
ljmp
ret
shrl
rcr
xchg
jg
popa
and
scas
mov
clc
call
cli
lahf
mov
add
std
loop
scas
jnp
lret
hlt
pop
adc
and
and
stc
lods
out
sub
cmp
jle
or
mov
sar
lcall
movsb
or
mov
push
rcrb
push
std
lds
dec
lock
cmp
mov
dec
aam
stos
or
sbb
or
fcomip
filds
dec
dec
xlat
sub
cmp
int
test
pusha
inc
cmp
pop
mov
incl
fidivrs
xor
js
sub
loope
and
dec
lret
mov
mov
decl
clc
push
int
push
in
bound
loop
or
mov
fmul
popa
dec
push
jg
add
loope
call
mov
mov
test
nop
mov
dec
decl
mov
addl
lret
fcomi
pop
pop
jecxz
gs
sub
lahf
movl
jg
or
cli
loopne
test
push
dec
cmp
dec
arpl
inc
enter
ffreep
and
or
ljmp
fbld
lret
fwait
mov
rorl
and
out
mov
jo
decl
jl
xchg
les
xor
mov
int3
xchg
hlt
cwtl
ljmp
push
rcl
mov
scas
decb
pusha
xchg
jmp
inc
xchg
bnd
scas
je
inc
jecxz
std
call
adc
in
cld
jne
lret
add
inc
jg
nop
in
xchg
icebp
rcl
pushl
cmp
lods
shll
sub
xor
mov
fucomi
or
pushl
in
pop
aam
shrb
lods
jnp
pushf
add
jae
adc
movsb
jl
cltd
xchg
ljmp
andl
jno
pop
sub
faddl
cwtl
mov
jnp
loope
push
add
xor
lea
jg
ss
pop
add
lds
adc
jmp
mov
cmp
xchg
sub
inc
mov
js
aad
sub
test
incl
outsl
fldpi
in
in
sub
xchg
dec
sti
bound
fstpt
mov
cmp
or
add
decl
fwait
pop
push
push
ss
aam
fidivl
adc
push
sub
or
xor
call
mov
cwtl
pop
aaa
cwtl
repz
cs
dec
or
decl
fwait
or
or
addr16
in
clc
decl
jnp
mov
repnz
orl
cmp
cli
out
outsb
push
lods
nop
cmpl
push
pandn
push
mov
push
add
sbb
mov
or
pushl
pushf
lock
xchg
aam
jp
int
pop
aad
pop
adc
cmp
inc
adc
and
xor
incl
cmpsb
jb
jl
movsl
scas
sub
cltd
inc
dec
mov
cmp
mov
push
incl
dec
iret
pop
xor
xor
pushf
xor
cmpsb
sbb
lcall
cld
mov
jmp
ljmp
test
in
push
cmp
pop
roll
aad
fistpl
mov
jae
inc
mov
popf
shlb
cmp
xor
push
cld
pushl
dec
insb
inc
loopne
enter
js
inc
aaa
es
jmp
ret
dec
push
scas
xor
or
popa
fbld
out
test
sbb
inc
mov
sbb
shlb
es
pop
ljmp
push
scas
cmc
scas
xchg
inc
loop
sbbb
adc
and
mov
in
dec
outsl
push
ror
in
xor
sbb
sarb
loopne
cs
jo
pop
jo
push
ljmp
pushl
sub
jne
sahf
in
ret
sub
mov
clc
inc
pop
popf
daa
inc
js
mov
jmp
xor
xlat
push
cmp
xchg
push
mov
cmp
xor
mov
fucom
dec
scas
adc
in
mov
cmove
push
call
adcl
sbb
mov
stos
imul
inc
ret
xor
outsb
leave
cli
and
mov
in
inc
xchg
cmp
pop
sub
pop
push
jmp
cmpsb
push
imul
adc
pop
movsl
adc
cld
mov
lcall
cmp
jmp
sbb
fbstp
insl
cmp
sbb
lahf
loop
inc
cmpsb
dec
mov
decl
add
push
aad
dec
and
jecxz
outsb
fisubl
orb
mov
dec
push
punpckhbw
sub
clc
cs
ret
dec
stos
in
xchg
xlat
pop
lea
pushf
push
mov
cmpsb
cld
ljmp
bound
jae
lret
mov
lea
shlb
jnp
pop
addr16
sbb
add
call
movsb
pushf
inc
xlat
jnp
ss
lret
js
and
cmp
xor
outsl
scas
fcompl
decl
fwait
xchg
cmp
test
cs
fs
push
mov
lcall
xor
call
out
xchg
and
add
sahf
adc
ljmp
sbb
sti
out
mov
pop
mov
loopne
imul
outsb
decl
lock
in
fistpl
das
or
movsl
xchg
mov
pop
inc
dec
jecxz
call
or
std
psubd
ret
pop
das
and
daa
xor
movsl
and
or
inc
fisttpll
jg
test
in
in
jo
pop
notl
mov
lods
or
out
int3
pop
cs
repnz
pop
mov
fdivr
push
std
bnd
mov
push
incl
dec
jno
mov
xor
fcoml
cs
dec
mov
ljmp
mov
jmp
sbb
loopne
inc
xchg
mov
mov
decl
mov
add
cmp
mov
and
sarb
icebp
faddp
and
mov
jge
das
jo
ja
cmp
hlt
inc
data16
out
push
ss
repz
fmuls
mov
out
jnp
scas
pop
mov
mov
cwtl
sarb
lcall
mov
push
mov
adc
sbb
mov
sub
out
leave
adc
jl
sub
jmp
adc
leave
nop
in
cs
int
cli
xchg
mov
cmpsb
add
fsubrl
jge
lods
add
ljmp
pusha
lods
in
cmp
cmp
aas
loopne
out
popa
push
lds
fstp
lods
jge
cmpsl
flds
sarb
ljmp
jle
neg
inc
jb
jmp
adc
jno
lds
decl
stos
pusha
cwtl
mov
fisubl
sub
out
inc
cld
adc
mov
add
call
clc
mov
ret
enter
test
int3
std
mov
mov
ss
pushl
ljmp
mov
dec
repz
or
mov
ret
cmp
jge
pop
jmp
inc
xor
loopne
mov
mov
loopne
mov
int
iret
sbb
mov
add
decl
fstps
pop
inc
hlt
leave
icebp
mov
ret
sti
out
es
jae
pop
roll
jecxz
pop
xchg
sti
daa
jmp
imul
sub
sub
loope
movsb
cmpsl
in
scas
mov
loope
push
dec
adc
xchg
push
sarl
movsb
sub
jg
xchg
push
lods
jg
jnp
stc
pop
xchg
mov
aaa
and
lcall
mov
cmp
jmp
and
adc
ljmp
sarb
inc
movsb
cmp
lds
dec
notb
inc
rorl
fwait
bound
xor
movb
nop
mov
in
cli
adc
adc
sbb
in
and
pop
fidivrs
cld
ljmp
call
inc
jb
sti
pop
addr16
and
sbb
out
lret
inc
addr16
arpl
aam
clc
lods
sar
decl
in
xchg
jecxz
into
loopne
test
add
and
cmpsl
imull
orb
fbstp
ljmp
lcall
sub
mov
dec
inc
shlb
movsb
scas
adc
xchg
lret
and
add
pop
out
cli
cmpsb
lcall
add
pop
mov
xor
fidivrl
int3
sbb
lods
pushl
scas
arpl
fdivs
mov
and
and
sbb
lahf
mov
dec
or
jmp
in
mov
xchg
adc
loop
divb
dec
mov
jnp
xchg
bound
jge
lcall
add
jp
in
push
fcompl
sbb
cmc
lcall
jecxz
cmp
jg
sar
fnstsw
sub
cmc
add
ja
cli
test
fistpll
jmp
mov
lret
push
jae
mov
and
psubsb
jmp
sub
lods
mov
adc
or
rclb
test
decl
fwait
cwtl
repnz
jge
jnp
std
decb
daa
jmp
aad
clc
add
fdivrp
pushl
stc
or
imul
mov
sub
dec
push
jmp
cmp
nop
bound
ljmp
inc
inc
fucomip
cmc
mov
push
outsl
fdivrp
sahf
gs
mov
and
jmp
jmp
incb
arpl
cmp
ret
mov
in
jg
adc
jae
imul
inc
mov
aas
adc
or
cmp
scas
add
and
xor
mov
fwait
in
xor
cmpsb
fcoms
movsb
sub
dec
push
push
test
cmp
inc
jl
inc
jg
add
adc
mov
mov
incl
mov
fldenv
sar
in
xor
add
xchg
rolb
sbb
pop
jl
movsb
jno
xor
dec
dec
mov
add
pop
mov
stc
sub
dec
jl
rorl
xchg
sbbl
pusha
lret
push
insb
mov
loopne
mov
mov
js
mov
push
mov
mov
test
dec
ds
xchg
mov
inc
fldl
dec
iret
dec
xlat
icebp
jmp
lea
cmpsb
lcall
dec
lahf
lods
in
dec
ds
bound
push
dec
inc
pop
cmp
mov
outsl
mov
iret
inc
adc
mov
enter
insb
paddq
fcos
call
jg
adc
jno
loop
cld
loope
push
lock
mov
xor
ficomps
sahf
xlat
jle
inc
mov
mov
lods
cwtl
jae
movsb
mov
out
scas
ljmp
dec
in
lcall
sbb
sub
adc
add
call
push
pop
cld
sbb
dec
xchg
sbb
lret
adc
stos
cmp
lahf
arpl
cmpl
pushl
mov
cmc
push
sub
fisttpl
fbld
lds
xchg
out
xchg
into
xchg
clc
scas
es
ffreep
icebp
fstpt
repnz
pushf
push
stos
pop
mov
addl
call
and
aas
xchg
xchg
fsts
mov
mulb
xchg
sbb
mov
stos
pop
insb
lcall
fmull
xchg
dec
aaa
cmp
es
fsubr
fcompl
in
mov
jg
enter
jns
jns
or
jmp
push
mov
jno
xchg
sete
stos
lret
mov
pop
hlt
aam
std
mov
fisttpll
jno
test
loopne,pn
movsl
mov
sub
aas
daa
cmp
decl
pop
mov
movsl
aaa
xlat
push
inc
push
cld
gs
push
jo
mov
in
lods
outsl
cmp
mov
dec
mov
inc
add
dec
std
aas
int3
imul
cmp
adc
popf
mov
filds
js
push
imul
aaa
out
jp
sbb
ficoml
and
jecxz
inc
ret
sub
xchg
add
add
dec
xor
sbb
ret
jp
fcomip
fsubr
test
cmp
or
gs
call
push
icebp
sbb
das
iret
add
sbb
frstor
mov
es
sbb
imul
cwtl
and
dec
movsl
lods
xchg
in
push
stc
cli
jge
and
das
xchg
flds
mov
fnsave
sub
outsl
pop
dec
mov
mov
pop
push
fs
mov
mov
sbb
push
stos
arpl
add
les
add
jmp
outsl
clc
jns
imul
mov
iret
repnz
in
inc
ss
call
push
and
and
je
or
adc
push
das
sbb
jle
jle
inc
cld
call
adc
pop
cwtl
or
aad
push
pop
dec
call
inc
std
jnp
popl
out
fidivs
enter
xchg
sub
jge
std
imul
inc
xchg
ror
popa
jl
xchg
icebp
dec
dec
push
xchg
sub
popa
cmp
dec
cmp
lock
jmp
xor
aas
in
jo
imul
lods
rcl
inc
leave
pop
xchg
inc
push
cmp
fimull
icebp
lret
inc
loope
je
insb
lea
cmp
outsl
lock
jl
fisubrl
stos
orl
cmpl
adc
call
mov
jmp
icebp
sub
ljmp
sahf
dec
lods
enter
popa
sub
jmp
sbbl
sahf
mov
adc
and
inc
dec
ds
jb
notl
rcr
scas
sarb
cmc
xor
inc
pop
lods
sbbl
inc
out
sbb
inc
cmp
data16
aaa
out
pop
adc
jecxz
fldt
lods
divb
imul
inc
out
and
loopne
lcall
pushf
int3
movsb
dec
into
iret
add
and
testb
clc
jmp
adc
adc
psubw
movsb
or
lret
rorb
ljmp
xchg
push
in
bound
inc
dec
xchg
subl
insb
add
dec
pop
lock
cmpsb
pop
faddl
and
bound
cwtl
mov
adc
push
incl
ljmp
sub
push
popa
sub
mov
ss
decl
mov
rolb
lret
jnp
push
mov
filds
jmp
jae
lcall
incl
push
jmp
xchg
cmc
pushf
lret
sti
call
adc
jmp
inc
cwtl
fidivrl
icebp
add
lods
dec
int
or
inc
gs
call
loopne
shlb
fidivrs
add
test
fdivl
cltd
pop
jae
xor
stos
jmp
push
cmpsb
xchg
jbe
sti
cmp
enter
cmp
inc
mov
and
mov
ljmp
outsl
mov
rcll
sub
dec
cmp
jns
xor
mov
push
xchg
pop
sar
cmp
psllw
fucomp
xor
lcall
lret
fsub
scas
pop
rorb
ljmp
pop
adc
decl
mov
mov
cmp
sub
insb
push
xchg
xchg
repz
test
inc
xchg
test
cld
cmp
cld
pop
xor
ljmp
lock
jns
or
jb
aaa
mov
mov
pop
pop
fwait
push
push
rcrb
fwait
insb
inc
stc
inc
fmul
test
mov
cmpsb
test
popf
cmp
jecxz
mov
xchg
les
pop
mov
pop
or
pop
in
xchg
lahf
test
pushl
js
scas
leave
pop
jmp
mov
or
ret
cmp
fldcw
mov
inc
sub
adc
xchg
push
pop
xchg
aad
test
shll
pop
jg
icebp
xchg
shll
add
and
xor
jecxz
lock
jle
andb
stos
mov
push
sub
and
notl
ljmp
out
movsb
fsubp
dec
inc
addr16
int
lcall
inc
cld
adc
pop
jg
pushl
aas
test
or
ds
ljmp
cmpsl
inc
jmp
incl
lcall
inc
mov
roll
ret
shrb
cmp
add
adc
add
ljmp
mov
mov
cs
cmp
out
mov
xchg
fwait
in
sbb
out
loop,pn
cli
pushl
ffree
sub
dec
mov
lcall
ds
ret
adc
mov
mov
dec
jnp
jbe
hlt
gs
inc
push
mov
and
jecxz
sahf
xchg
mov
inc
shll
push
cmp
fs
push
std
js
int
call
push
iret
xchg
xor
ficompl
add
out
sahf
addr16
mov
in
mov
cmp
fidivs
dec
dec
push
or
idivw
mov
ret
ljmp
pop
rclb
pop
mov
push
dec
jp
push
push
jmp
shll
push
mov
add
call
data16
cmpl
mov
js
mov
inc
add
and
push
xchg
loop
xchg
cmp
jbe
in
dec
leave
cmp
enter
xchg
xor
daa
inc
sbb
pop
adc
sub
inc
decl
jae
or
mov
dec
jl
add
cli
add
or
inc
cs
dec
loop
stos
fsubrs
gs
pop
loopne
lcall
inc
inc
sbb
jb
shr
pushl
mov
pop
lock
push
xor
cmp
xchg
jae
sbb
iret
push
lcall
xchg
in
xor
into
daa
sbb
xchg
in
ljmp
sti
stc
jb
ja
mov
fidivl
xchg
js,pt
xchg
in
or
out
pop
dec
mov
dec
mov
sar
mov
addr16
popa
inc
stos
daa
iret
or
and
jmp
rcll
dec
push
push
mov
mov
dec
test
in
call
std
decl
jae
add
mov
scas
insl
lcall
es
mov
inc
out
sbb
loope
lods
pop
cmp
adc
sub
add
rorb
lcall
add
mov
jmp
jne
stos
les
dec
lahf
pop
jmp
cwtl
ror
out
pop
addr16
xor
outsb
outsl
push
int
dec
rclb
sbb
pop
fpatan
pop
div
call
mov
xor
out
cmp
ljmp
push
arpl
and
dec
inc
pop
pushl
or
sub
jo
jg
sbb
repz
pop
jmp
push
pop
outsb
dec
and
mov
sbb
paddd
mov
fistpl
in
shlb
insl
pushl
xor
xchg
push
jmp
sbb
stos
inc
push
pusha
iret
cmpb
jecxz
sar
pop
cld
mov
inc
cld
mov
call
sti
into
xchg
in
lods
call
cmc
jmp
fdivrl
xchg
jb
fcomps
inc
jg
dec
xchg
lcall
push
out
mov
push
mov
repz
xor
xchg
ret
movsb
jns
add
cmp
push
push
aam
xor
push
imul
sub
mov
scas
jle
or
mov
sub
lcall
jmp
shlb
mov
sbb
sub
rcl
inc
mov
or
incl
sub
cmpsl
push
ja
in
adc
or
sbb
popf
jns
pushf
mov
sarb
ljmp
jecxz
pop
andl
mov
push
pop
lcall
dec
cli
aas
and
push
cli
lcall
movsl
xchg
test
mov
fwait
negl
jle
add
lods
xor
add
mov
in
insl
ss
add
nop
jg
jg
sub
pop
arpl
dec
nop
adc
adc
push
insb
cmp
ljmp
add
cmpsl
push
pop
sbb
push
arpl
xchg
clc
jge
jne
ds
xchg
pop
dec
call
push
out
insb
loopne
fcompl
push
inc
push
mov
ret
xor
aad
xacquire
push
out
cmp
aas
mov
mov
test
sti
shl
and
xchg
call
aas
pop
nop
mov
and
stos
inc
divl
xlat
stc
xor
incb
gs
test
jmp
outsb
cmp
pop
pop
jbe
cmp
fcoml
aas
enter
add
loop
cltd
ret
nop
call
cld
pop
cmp
fisubl
jae
xchg
std
aaa
jnp
addb
ret
sbb
call
pop
cmp
or
mov
mov
outsb
mov
jbe
xor
lcall
rolb
cmpsb
sarl
les
lods
rcll
mov
dec
jecxz
push
jne
jbe
ja
out
aad
sbb
int3
int
dec
in
daa
adc
mov
fstl
ljmp
stos
nop
mov
or
mov
jecxz
dec
mov
xor
pop
mov
dec
mov
lahf
in
inc
lds
cmp
lahf
popa
jecxz
push
aad
dec
push
lret
negl
outsl
xchg
cli
lret
call
ljmp
xlat
fidivrs
out
ds
scas
sbb
aas
add
or
sbb
call
xor
mov
mov
fwait
mov
incl
xchg
mov
pop
or
aaa
and
adc
js
xchg
push
decl
cwtl
cli
dec
into
test
add
lods
insb
or
jbe
ja
adc
stc
mov
call
je
loope
sbb
pop
fldlg2
addr16
mov
movsl
add
hlt
mov
popf
mov
jmp
int3
inc
out
sti
ror
cld
test
into
sbbl
push
cli
adc
loopne
dec
imul
test
mov
shlb
aad
imul
inc
mov
out
cld
int3
mov
test
ljmp
sbb
cmc
pop
ds
arpl
and
pop
shrl
mov
jns
push
jecxz
lods
inc
push
mov
jl
sub
or
add
mov
cltd
cld
xchg
insl
inc
mov
jmp
xorb
dec
addr16
xchg
pop
pushf
test
aas
jnp
imul
jae
mov
ret
clc
lcall
lock
xchg
mov
rcrb
rcll
addr16
inc
adc
scas
stc
int
decl
add
test
dec
push
sub
dec
push
jmp
inc
loope
ljmp
in
sub
mov
mov
push
add
or
popw
adc
push
call
xor
in
sbb
sbb
loopne
stos
dec
out
adc
inc
ret
in
lods
lds
lcall
fimuls
in
fs
pop
sbb
jge,pn
sbb
aaa
cwtl
loop
clc
push
ljmp
cltd
scas
inc
pop
mov
cmc
sub
in
shr
jecxz
add
ds
out
insb
jae
mov
cli
fs
cmpsl
cltd
jecxz
and
mov
sbb
clc
out
fidivrs
lret
inc
or
xchg
roll
jae
xchg
pop
xor
aam
int3
fbld
incl
jg
pop
push
add
add
out
imul
add
ds
sti
xor
ja
pushl
push
push
add
mov
rcl
or
in
xchg
iret
stos
sbb
mov
lcall
lods
data16
dec
mov
cmpsb
popl
jb
dec
and
test
push
ds
std
loope
in
es
cmpl
in
jb
imul
or
out
jecxz
dec
xchg
insb
mov
mov
mov
decl
or
jne
out
pushf
pushf
fildl
mov
mov
pushl
cmpsl
dec
sbb
cmp
and
cmp
mov
loope
jg
icebp
mov
jmp
inc
call
mov
cli
pop
jmp
cmp
popf
test
add
add
cmp
loope
pushf
sub
jbe
mov
mov
mov
pop
sbb
xchg
cmp
push
mov
xchg
adc
cmc
js
imul
pop
stos
inc
cmp
ja
outsl
pop
cmc
daa
pop
adc
cld
lds
pushl
sub
xchg
fs
mov
test
or
sub
call
int3
jmp
push
adc
cs
jo
loopne
sbbl
hlt
lcall
repnz
out
mov
cmovno
mov
dec
repnz
push
std
fwait
decb
out
addr16
nop
inc
fsubrl
test
xchg
cmp
jmp
xchg
cmp
ret
lods
xor
test
faddl
mov
pushl
cld
xchg
or
imul
rcrb
ljmp
cmp
sbb
pushl
in
js
and
cmp
xor
add
fisttpll
pop
test
pop
lahf
lret
decl
js
push
jmp
cmp
sbbb
mov
jno
int
push
pop
pop
cmp
jnp
xchg
sbb
or
mov
stos
movl
ret
das
xchg
jle
inc
or
and
enter
bound
xor
adc
testl
sbb
cmpsb
ss
inc
imul
sarb
and
ret
pop
xor
aad
dec
pop
push
jno
rcl
iret
sub
mov
loop
mov
mov
dec
mov
xchg
mov
jl
movsb
add
incl
dec
lret
xorl
jb
xchg
test
cmp
add
mov
shl
addl
jmp
sbb
jae
inc
sub
outsb
or
mov
out
pop
cld
lcall
es
mov
mov
out
aam
inc
dec
mov
rol
lods
mov
jmp
call
add
ds
mov
pop
mov
or
shll
cmpsl
mov
sbb
loope
xchg
sub
jbe
test
and
ret
push
data16
ss
dec
mov
lcall
xor
movsb
fs
fpatan
cmpsb
negb
cmp
xor
ret
or
jae
incl
sbb
dec
push
aad
mov
push
cmpsl
pop
sub
scas
xor
test
fcoms
in
aam
scas
mov
repnz
lods
lret
inc
xor
mov
push
sub
cmpsb
lret
lea
enter
enter
out
sub
outsl
cmpsb
mov
xchg
add
fcomip
xchg
mov
int
jb
test
cmp
xor
ljmp
cltd
icebp
jg
clc
pop
pop
stos
xchg
mov
test
dec
test
xchg
and
ja
xor
mov
mov
add
inc
std
and
das
inc
decl
lret
arpl
pop
clc
and
cli
and
jg
adc
call
std
sbb
jmp
xchg
cmp
shlb
jb
lahf
sahf
stos
add
aad
loop
call
sarl
cmpsb
adc
sub
mov
testl
add
mov
inc
and
sbb
call
push
sbb
pop
cli
inc
add
xchg
xor
call
fcomip
mov
gs
jnp
push
cmc
adc
neg
and
xchg
rorl
decl
scas
aam
lahf
cmc
shlb
push
push
xorl
jg
mov
cmpsl
mov
mov
and
jno
fidivrs
pusha
xor
stc
sub
jl
adc
sbb
and
sub
hlt
mov
add
clc
dec
xchg
rcl
sub
ss
in
call
decl
xlat
and
cmp
dec
rcrb
and
mov
cmp
fsubrs
and
ljmp
xor
xchg
xchg
inc
roll
jb
repz
inc
cmp
lds
loopne
sub
outsb
bound
lret
ljmp
incl
and
stc
pop
dec
pop
add
inc
std
pop
insl
cwtl
iret
xor
ret
jg
mov
jg
loopne
push
incb
xorl
loopne
lcall
cmp
insb
pop
call
test
jmp
mov
xchg
cmp
xchg
xor
ljmp
fists
mov
adc
mulb
dec
leave
adc
std
xchg
aam
cmpsb
mov
in
xchg
mov
repz
dec
and
int3
jmp
test
pushl
adc
out
inc
sbb
cmc
mov
std
add
sub
std
call
xchg
cmc
js
data16
pop
stc
gs
jnp
mov
jns
fs
jg
push
mov
add
sub
popf
aaa
gs
sbb
jle
arpl
cmp
stos
test
fcomip
out
xor
fimull
jnp
test
aas
dec
adc
sub
stos
rorl
imul
jmp
scas
pushw
out
pop
scas
pop
shll
gs
cmp
xorl
test
out
lret
push
imul
cwtl
test
cld
push
inc
mov
jmp
or
sbb
dec
enter
or
inc
lea
icebp
inc
adc
icebp
push
mov
out
call
lods
jae
fistpl
out
add
inc
adcl
sti
loope
push
sbb
ljmp
or
dec
jmp
lret
ret
lret
outsb
xor
cmp
nop
test
movsb
mov
ljmp
dec
sub
jp
test
clc
andb
cwtl
out
icebp
or
scas
fnstenv
xchg
ds
call
jle
inc
ljmp
add
pop
shrb
lret
cmpsb
icebp
stc
insl
pop
pop
mov
mov
adc
mov
jmp
stc
sub
aaa
sti
int
mov
call
push
mov
cmp
xlat
int3
xchg
and
and
and
adc
mov
mov
cs
jmp
fcomps
sbb
jp
inc
cmp
jne
adc
xor
call
add
cmp
lcall
mov
xchg
xchg
and
lcall
jp
repz
mov
movsl
cli
movsl
ret
jno
outsl
mov
push
movsl
mov
mov
repnz
xlat
subb
push
xchg
inc
cmp
mov
leave
dec
cmp
ret
lods
insb
mov
pop
std
cli
sub
sbb
jg
push
jne
mov
or
mov
sti
mov
movsb
push
pop
pop
xchg
pop
popa
std
mov
pop
mov
pop
in
and
jge
adc
ret
lcall
addl
std
test
hlt
lods
cmp
out
jge
add
lcall
cmpsb
repnz
jns
jecxz
cli
mov
scas
cmc
lcall
jae
xor
mov
je
mov
lds
test
test
test
test
xchg
mov
jmp
lea
pop
xor
adc
fcmovb
jmp
push
lock
sub
jns
xchg
cmp
pop
lcall
push
sbb
dec
or
xchg
cmp
pop
icebp
push
inc
pop
xlat
pop
inc
adc
cmp
outsl
mov
add
test
lcall
jno
or
push
inc
pop
enter
mov
fnstenv
out
cmp
cltd
pop
gs
jmp
xchg
sub
push
push
pushf
or
mov
cmp
fs
mov
mov
scas
movsb
mov
dec
sbb
mov
xchg
and
adc
jge
out
inc
mov
negl
std
data16
add
xchg
fs
ret
push
aas
arpl
leave
sbbb
add
test
mov
cmpsb
xchg
sarl
mov
push
lcall
jmp
dec
push
sti
lcall
mov
cmpsb
jb
lds
fwait
inc
out
pop
daa
push
sbb
loop
mov
xchg
push
in
mov
decb
pop
out
xchg
jmp
pop
dec
adc
scas
shl
or
push
inc
jo
cmp
lret
movsl
sbb
lock
ljmp
les
xchg
add
call
push
lcall
pop
call
aas
ss
movl
push
in
jns
inc
imul
push
jle
dec
insb
icebp
xchg
mov
stc
dec
xchg
lock
aam
mov
roll
out
out
pop
dec
dec
lods
push
clc
testl
inc
xchg
adc
and
push
adc
and
out
stos
ret
cmpsb
or
je
xchg
mov
pushl
xchg
in
and
lret
repnz
push
jmp
shrl
cmp
cmpsb
mov
fsts
jmp
cmp
mov
cmp
jl
decl
cmp
fistps
mov
pop
sbb
cmp
sbb
add
stc
rcrl
mov
das
mov
and
out
mov
int
in
pop
lods
add
sub
mov
outsl
fwait
mov
xchg
sbb
lods
dec
shlb
push
mov
sub
pushl
stos
mov
inc
mov
pop
lret
es
cmc
jne
jb
mov
pushf
insb
rorl
jmp
or
adc
gs
ret
sbb
jb
enter
stc
hlt
jbe
dec
adc
push
mov
jg
js
cld
scas
ret
in
addr16
mov
mov
mov
inc
push
mov
ljmp
cmp
dec
cmpsb
xchg
dec
inc
ja
pop
into
xor
lods
push
fcompl
push
and
jecxz
in
lods
shl
sar
lcall
inc
mov
sti
sub
fsub
ret
or
and
or
and
mov
jp
mov
stos
lock
fs
pop
lcall
mov
cmpsb
mov
orb
jg
cmp
shlb
mov
push
and
pop
fldenv
enter
incl
mov
popa
ret
cmp
imul
fidivrl
ljmp
mov
int
insl
ljmp
or
xor
lock
jnp
sub
enter
jns
mov
call
shll
xor
subl
bound
imul
pop
cld
push
loopne
mov
jp
xchg
sbb
pop
push
adc
dec
xchg
mov
aam
enter
mov
and
jno
fwait
pop
jge
push
adc
jnp
popf
insb
add
icebp
shlb
shrb
cli
decl
and
mov
repz
ljmp
cmpsl
inc
cmpsl
fldenv
inc
cli
cmpsb
out
xlat
mov
mov
into
push
shll
std
ljmp
incb
incb
das
cmp
mov
int
repnz
fwait
popf
repz
loope
ljmp
or
jb
or
enter
addr16
mov
test
mov
mov
xor
test
hlt
cmp
dec
dec
mov
in
jle
or
and
xchg
jp
movsb
paddw
lcall
fcomps
fcmovnbe
mov
cld
in
dec
add
in
roll
adc
pushl
pop
ret
adc
insb
add
inc
pop
insb
negl
in
sbb
js
pushl
out
fldenv
lret
loopne
outsb
mov
fimull
das
sub
std
and
jmp
and
adc
adcb
lods
int3
mov
push
dec
lods
dec
xor
push
and
mov
call
xor
test
pushf
testl
subb
mov
sub
decl
adc
mov
rep
sub
and
xor
dec
js
mov
pushf
pop
stos
or
jmp
xor
popa
movsb
cs
fwait
out
pushf
or
rcr
insl
or
jp
push
imul
hlt
ljmp
shlb
jmp
pop
out
pop
push
cwtl
orl
lcall
int
mov
sbb
arpl
push
pop
xor
xchg
mov
or
push
dec
sbbb
or
jmp
push
arpl
shlb
push
xor
out
or
mov
mov
pop
cli
out
sbb
cmp
push
and
sar
lcall
rcl
cmpsb
sbb
cmp
lods
inc
lcall
mov
cmp
xchg
sub
leave
mov
xor
mov
adc
sub
pushl
fs
mov
lret
pop
xchg
mov
stos
rorl
mov
adc
add
inc
mov
fwait
cmpsb
iret
xor
mov
push
xor
add
frstor
mov
cmc
jg
gs
stc
stos
jae
jmp
imul
xor
mov
rcll
test
fistpl
incl
add
testb
cwtl
and
int
in
sbb
adcb
jb
pushl
imul
or
sbb
addl
stos
pusha
or
push
cmp
pushl
sbb
ret
das
fcmovnu
cmc
push
mov
arpl
cmp
mov
sub
pusha
idivb
incl
sar
mov
pop
imul
mov
sub
inc
inc
das
ret
dec
cs
std
into
daa
jne
xor
imul
or
jo
mov
ljmp
add
or
into
addl
mov
pop
stc
add
xchg
xchg
pushl
mov
rcll
sbb
enter
rcrb
mov
lcall
mov
and
xchg
inc
jmp
test
jg
movsb
je
jmp
cltd
lods
imul
mov
lret
pushf
pop
int3
push
add
xor
jb
or
jg
mov
les
sub
sbb
cmp
cmp
and
std
pop
in
pop
inc
incl
add
stc
and
mov
sbb
jge
inc
push
sub
stos
decl
cmp
fisubs
pop
cld
sti
subb
outsl
mov
mov
test
cmpb
and
in
decl
cmp
fcoms
fwait
icebp
loope
lret
push
jo
shll
decl
dec
sahf
jp
test
mov
add
sub
dec
adc
mov
out
xor
loop
mov
cmp
sbb
sbb
into
mov
jg
push
sahf
repnz
add
enter
add
out
mov
inc
inc
sbb
xchg
lcall
out
jmp
mov
sar
aad
add
pop
mov
pop
pop
inc
mov
push
in
arpl
ja
pushl
jns
popf
xor
jne
jl
jnp
pop
aam
subb
es
incl
or
cs
xchg
xchg
or
sar
incl
adc
mov
jmp
je
mov
mov
jg
sub
out
lahf
aad
aas
test
dec
mov
adc
cltd
mov
pop
lock
push
push
push
mov
int3
gs
mov
jp
loopne
mov
dec
pop
lock
pushf
jl
inc
mov
xchg
xchg
or
sub
pushl
add
daa
push
out
sti
std
inc
loop
mov
mov
inc
mov
bound
dec
lcall
scas
push
lock
adc
call
decl
push
xor
sub
filds
icebp
push
rcrl
mov
pop
push
into
xor
aam
scas
push
data16
lds
mov
stos
jo
mov
fcomip
mov
adc
mov
add
cmp
cltd
testl
cmp
fdivrp
out
cli
sbbl
bound
and
loopne
mov
push
jnp
popa
push
xchg
mov
xchg
test
mov
or
xchg
or
mov
insb
cmp
lcall
inc
sbb
cmpsl
punpckhbw
pop
int
cli
or
out
cmp
aas
mov
jmp
bnd
outsl
out
cmp
scas
aas
cmpb
aad
mov
cmp
idiv
mov
push
popf
xor
lret
and
or
push
incb
or
inc
into
mov
loope
jne
rcl
cmpsl
add
arpl
insl
cld
incl
pop
dec
fisttpll
stos
and
mov
pushf
lods
jo
lret
add
pop
std
cmp
mov
into
jbe
pushf
push
inc
adc
mov
fs
mov
stos
adc
jmp
rcll
push
sbb
fcomip
dec
mov
xor
xor
dec
adc
jne
sub
test
filds
adc
xchg
stos
pop
and
nop
les
and
in
adc
sarb
clc
loopne
incl
call
jno
mov
sub
xchg
adc
push
fisttps
or
ret
inc
test
insb
jmp
and
inc
in
pop
imul
mov
cmc
mov
mov
testl
fwait
push
xchg
imul
vmaxpd
decl
xor
mov
cmp
fsubrs
mov
add
lcall
test
andb
push
ds
fucomi
jmp
xor
push
jg
call
push
mov
push
cli
mov
inc
insb
add
pop
movsl
lahf
xchg
insb
sub
mov
or
ljmp
cmp
mov
push
lods
ljmp
lds
xchg
test
outsb
addr16
loop
cwtl
xchg
imul
or
or
dec
aad
sbb
adc
or
push
fiadds
add
fcmovbe
and
leave
xor
inc
in
les
sub
incl
test
sub
andl
call
in
cltd
add
scas
call
add
cmp
insb
push
dec
incb
mov
ljmp
xor
lock
out
push
cmovns
sbb
dec
jmp
outsb
stc
mov
rcll
into
xor
ja
cld
add
lcall
jne
push
pushl
and
repnz
lret
scas
cmp
lahf
mov
jbe
pusha
pushf
int
jmp
sbb
xor
xor
cld
sbb
pop
mov
lret
mov
test
fwait
jmp
push
leave
sti
shrb
rcrl
sub
fiaddl
pop
xlat
outsl
daa
push
ss
pushl
out
mov
push
or
pop
mov
int3
push
cmpb
and
scas
and
lcall
pop
xchg
data16
or
mov
push
das
sar
or
loopne
lods
or
xlat
cmp
roll
adc
jmp
cmp
pushf
je
lds
int3
jmp
push
or
cmp
icebp
jl
pusha
popa
lock
fistl
jns,pn
or
sub
push
mov
and
add
es
pushl
and
loope
xlat
sbb
adc
mov
mov
aad
ja
data16
lcall
mov
jge
int
mov
and
mov
dec
ljmp
ljmp
jmp
inc
lret
rorl
mov
add
ljmp
and
mov
imul
iret
adc
xchg
movsl
insb
xor
jns
ss
rolb
call
push
iret
fsubl
imul
inc
inc
andb
ljmp
sbb
iret
jmp
in
inc
xchg
icebp
out
add
out
cmc
push
lcall
stc
cwtl
arpl
xchg
mov
nop
push
nop
dec
lock
clc
popa
imul
incl
call
sub
lods
fistps
adc
xchg
mov
mov
xorb
sti
adc
rclb
stc
sbb
or
lock
push
push
sub
call
cmovl
cld
and
xchg
push
add
es
mov
adc
jp
and
insl
xor
inc
dec
inc
inc
push
xchg
dec
iret
popa
outsl
test
nop
inc
ljmp
insb
xor
std
jns
dec
test
aad
in
aaa
pushf
dec
fistpl
cld
jmp
rcl
mov
xor
leave
push
addr16
push
lcall
mov
cld
aas
pop
lcall
fstpt
push
cs
cwtl
sbb
out
xchg
cli
lcall
xorb
jp
andl
adc
mov
lcall
mov
out
and
jnp
dec
int
adc
cmp
fimuls
sub
mov
sub
mov
scas
pop
fwait
lret
jge
inc
fwait
call
and
jmp
lods
testb
push
hlt
frstor
push
out
enter
and
add
jmp
test
cltd
mov
add
push
fnstcw
mov
mov
aaa
or
mov
rcrl
pop
pop
call
mov
stos
xor
push
push
test
mov
arpl
fmull
dec
xchg
test
jmp
outsl
js
push
inc
fistpll
or
lea
add
incl
mov
mov
and
xchg
insb
pop
ret
shll
decl
lods
clc
std
in
xor
mov
add
xlat
pop
in
xlat
mov
xchg
add
cmpb
dec
mov
cli
dec
stos
cmp
repz
movsl
ljmp
jmp
mov
outsl
movsb
inc
mov
mov
cwtl
mov
sbb
loop
sar
pusha
mov
or
inc
je
sub
notl
xor
cld
cmp
incl
jmp
inc
repz
cmp
shrl
adcb
call
mov
je
jns
add
xchg
arpl
xor
loop
xchg
fs
mov
mov
stos
ss
mov
insl
adc
int
incl
lock
mov
aam
xchg
and
jns
ss
aas
daa
or
add
decl
or
jo
pop
jbe
mov
xchg
aaa
outsl
sbb
stos
decl
lock
add
ret
inc
pop
idivb
xchg
sub
sbb
jg
push
test
int3
xchg
scas
adc
sub
fsubs
test
cmpsb
sahf
cmp
cld
dec
shll
mov
push
cmp
dec
das
fdivs
jle
rorb
jno
lcall
je
cs
rol
pop
out
cmp
mov
imul
inc
je,pn
pushl
cwtl
sub
push
mov
and
outsl
jnp
es
shll
cmpsb
dec
mov
cmpsb
jp
inc
sub
cmp
push
pop
adc
fwait
pop
mov
call
out
inc
adc
ljmp
daa
mov
dec
and
ljmp
mov
mov
pop
sub
xchg
jl
xchg
sub
xlat
gs
cs
idivb
loop
lcall
out
jno
xchg
pop
and
cltd
or
mov
movsl
popa
aad
mov
cltd
out
fcos
ljmp
ja
shlb
outsb
dec
dec
dec
and
loop
push
call
ljmp
xor
pop
insb
pop
lods
mov
xor
mov
incb
stc
adc
sub
les
arpl
enter
sub
cmpb
addb
mov
dec
call
xchg
movsb
fcom
xor
out
test
sar
dec
scas
addr16
mov
out
add
push
ss
dec
inc
mov
jmp
mov
decl
push
adc
test
mov
jae
or
push
xor
in
dec
lcall
jp
in
lods
pop
inc
push
mov
lret
ds
negb
cmp
fistl
lret
jecxz
jno
sar
in
adc
aaa
mov
cld
scas
daa
add
cwtl
lds
loop
cld
or
mov
sbb
mov
andb
jo
mov
test
add
and
push
std
je
loop
icebp
filds
mov
in
lret
or
mov
fwait
mov
jmp
sarb
inc
aad
sbb
push
cmpsb
adc
or
mov
and
mov
fimuls
mov
test
xchg
pop
dec
pop
fdiv
bnd
dec
movsb
push
out
pushl
repnz
inc
loopne
data16
inc
fidivrl
adc
inc
cmpb
lcall
jle
mov
inc
dec
inc
jne
shlb
and
sbb
sub
addl
push
jb
or
ja
jns
sbb
jb
imul
jo
xchg
jge
stos
in
jb
jl
jmp
and
inc
push
out
push
jne
dec
stc
icebp
mov
fstps
jl
out
mov
cmpsl
and
xlat
mov
pop
nop
test
ljmp
iret
in
out
lods
inc
aaa
adc
add
adc
out
push
inc
jp
pop
add
notl
sar
pushl
cmp
test
movsb
push
scas
popa
decl
idiv
sbb
movsb
pop
aas
xor
ficoml
out
addr16
std
nop
sub
xchg
adc
pop
cmp
fs
adc
add
jl
ja
inc
or
cwtl
divb
incl
xchg
int
sahf
jecxz
or
outsb
call
scas
cmp
frstor
test
pushl
inc
sub
imul
sbbl
ret
sub
inc
pop
mov
jmp
outsb
or
call
jo
aas
jl
mov
dec
mov
scas
dec
ljmp
and
jmp
inc
push
lret
ret
in
lea
sub
pop
nop
mov
sar
jmp
rolb
sarb
jne
pop
lock
inc
loop
mulb
arpl
mov
jmp
cli
aad
xchg
gs
loopne
cmpsl
add
push
mov
hlt
scas
pop
mov
call
shrl
sbb
xchg
out
mov
cmp
mov
sub
cs
mov
incl
mov
add
cwtl
mov
xor
and
stos
dec
loope
jns
imul
sub
cmp
mov
mov
loopne
sub
dec
and
add
and
or
arpl
adc
les
ljmp
mov
out
jge
and
filds
sbb
push
incl
adc
dec
inc
pop
inc
fcoms
pop
mov
orl
or
pop
shlb
and
aas
popa
pop
push
xchg
das
sar
std
out
iret
jbe
jmp
pop
lahf
mov
sbb
push
mov
mov
test
lock
ret
dec
xor
cs
jg
cmp
and
mov
jbe
mov
inc
outsl
aam
mov
sub
or
pop
mov
sub
cmp
call
adc
ds
fldt
jg
hlt
mov
negb
cltd
and
fsubrs
inc
in
mov
mov
mov
call
adc
mov
pop
cld
cmc
mov
test
into
inc
inc
shl
or
cltd
les
inc
inc
incl
incb
sbbb
mov
pop
pop
ja
xchg
push
orl
sub
out
dec
out
cmpsb
dec
repnz
ret
cmp
mov
xor
jmp
iret
arpl
mov
fstpl
add
daa
es
adc
add
add
push
adc
mov
das
fst
inc
lods
sar
cmp
sub
ret
icebp
scas
mov
push
out
scas
adc
or
or
sbb
xacquire
lods
aam
out
clc
jmp
xor
aas
cwtl
inc
fisubl
das
inc
pushf
out
xlat
cld
mov
incl
push
xchg
push
cli
jne
cmc
data16
shl
outsb
std
test
ljmp
jg
add
out
mov
testl
es
sub
mov
rclb
mov
pop
cmpb
jmp
inc
xchg
adc
std
outsb
add
pop
lret
nop
jp
jmp
jle
rcl
decl
data16
popf
fistpl
push
mov
movsb
and
jg
out
leave
mov
jae
inc
xlat
xchg
sbb
fsubr
sub
pop
inc
imul
std
out
pop
push
jecxz
mov
loop
lea
sbb
int3
push
mov
pop
fmull
or
out
jbe
ss
cmp
pop
mov
repnz
sarb
decl
call
push
adc
pop
ds
xchg
ds
push
int3
dec
scas
hlt
inc
jbe
popf
mov
ljmp
mov
pop
push
sub
ds
outsb
aas
les
neg
cmp
jo
pop
stc
xchg
imul
hlt
xlat
pop
cmpsb
aaa
ja
cmpsb
push
jbe
sahf
int3
cs
ljmp
cmp
fildl
ret
scas
aaa
outsl
mov
cltd
sbb
mov
jmp
subl
cmpsl
pop
mov
xchg
sub
leave
pop
dec
mov
stos
mov
mov
ret
sbb
rcr
arpl
in
cmp
jmp
dec
sbb
les
sub
adc
stos
push
lods
nop
arpl
call
inc
sub
mov
jb
add
fs
jmp
dec
push
add
lods
js
mov
xchg
gs
sbb
jg
in
add
outsl
jge
cs
dec
imul
ljmp
rclb
jle
jno
add
idivl
sbb
stc
bound
adc
jno
scas
cli
pushl
pop
aad
fisttpll
sbbl
sbb
ja
leave
and
cltd
rcll
pushl
rcll
cmp
xor
cmpl
outsb
mov
push
ret
js
ljmp
dec
push
shrl
sbb
popa
mov
adc
and
push
and
bound
decl
cmpsl
sahf
mov
add
aam
jbe
lods
into
push
sbb
and
jp
lcall
decb
pusha
std
pop
pop
insl
popf
jmp
xchg
mov
fsubl
decl
in
push
outsl
adc
dec
in
lds
push
cmp
adc
pushl
and
cmp
cmp
add
je
xor
mov
aam
add
mov
lret
int3
sub
mov
std
outsb
adc
int
xlat
fisubs
pop
lock
cmpsb
and
add
ljmp
repnz
in
mov
pop
outsb
jo
test
jmp
addr16
sahf
sub
out
and
pushl
mov
loopne
adc
xchg
jge
inc
mov
cld
fists
cmpsl
add
lahf
cmpsl
sar
dec
dec
push
repnz
push
mov
sub
push
push
pop
sbb
call
cwtl
cwtl
jl
mov
add
cmc
aam
mov
decl
out
rorl
sub
cmp
xchg
repnz
cmp
ja
or
jmp
ja
decl
scas
iret
cld
pop
ljmp
popa
js
les
fcos
jnp
push
aas
outsl
std
fidivs
imul
inc
mov
fimull
xlat
xchg
jo
fdivs
fidivrl
mov
daa
fs
push
cld
pop
cmc
mulb
mov
orb
cmp
xchg
jnp,pt
fcmovnb
fs
outsb
sar
jl
jecxz
inc
mov
inc
xor
mov
stos
cmpsl
jmp
cltd
cltd
jo
adc
decl
xlat
sahf
fcompl
mov
out
arpl
jns
cltd
pop
mov
incl
lret
mov
lret
inc
mul
fsubr
jo
adcl
sbb
std
pop
and
ljmp
xor
sub
lea
out
loope
mov
sub
test
fwait
push
test
xchg
dec
decl
inc
xchg
and
mov
xor
fsubp
mov
fs
or
adc
incl
inc
sub
xor
test
scas
shrb
xorb
incl
scas
insl
subb
mov
scas
xchg
dec
inc
push
imul
xlat
sbb
shll
incl
and
mov
xchg
test
push
mov
mov
jo
popf
lret
dec
jae
inc
xlat
imul
add
xor
inc
ds
inc
scas
sub
decl
xchg
push
pushf
in
in
push
add
and
cltd
jne
xchg
xchg
inc
jnp
pop
sar
mov
jo
aam
js
lret
testl
adc
sarb
mov
push
jl
mov
push
xlat
mov
clc
xchg
mov
pop
fbld
ljmp
bound
push
js
xchg
push
adc
lret
push
cmp
fiaddl
outsb
decl
add
fdivrl
jmp
into
add
fs
das
or
mov
lahf
and
ret
jmp
fiadds
and
add
fwait
mov
out
jle
lods
dec
cmc
mov
jmp
cmpsl
ret
sbb
loopne
and
mov
jbe
or
ljmp
decl
pop
push
jmp
cmpsb
dec
stos
dec
scas
jns
pushf
cmp
cmp
ljmp
movsb
sbb
into
sub
rorl
roll
xchg
loope
inc
or
push
pushl
ret
mov
arpl
and
loope
and
dec
push
idiv
mov
incl
scas
xchg
lea
insl
pop
sub
sbb
push
inc
cmp
cmp
jmp
adc
adc
sub
dec
mov
notb
xchg
out
popa
mov
sbb
test
cltd
or
std
pop
cmc
jg
or
jmp
mov
xorb
orb
dec
mov
cld
pushl
mov
jg,pn
in
ret
and
test
rol
cmpsl
fisubrs
pop
add
int3
in
incl
fdiv
adc
stos
hlt
dec
test
int3
shl
cs
sbb
std
incl
mov
xlat
cmp
call
icebp
push
loope
xchg
xchg
sbb
scas
cli
mov
test
xor
icebp
and
mov
jbe
jmp
enter
fs
mov
fiaddl
orl
addl
sub
add
test
out
add
leave
lds
imul
rolb
call
ljmp
jle
jg
cmp
xor
xchg
into
ret
pop
aad
into
test
mov
dec
add
iret
int
jecxz
test
push
mov
inc
xlat
mov
int
xor
pause
jnp
xor
incl
sub
ds
aam
into
cmp
jg
out
inc
cmp
imul
mov
sar
incl
pusha
pop
cwtl
ret
sbb
sub
pushf
stc
aad
arpl
pop
push
icebp
icebp
push
inc
mov
aaa
test
push
popf
insb
xor
pop
push
mov
testl
fildl
add
or
sub
stc
ja
push
mov
ljmp
iret
adcb
mov
mov
mov
popa
push
xor
ja
clc
ljmp
mov
out
cmp
adc
jmp
mov
or
scas
inc
inc
movsl
cmp
lahf
push
push
sahf
incl
imul
xchg
push
inc
mov
enter
mov
in
cltd
hlt
jb
out
mov
fsubl
shl
imul
std
add
repnz
popa
insl
scas
clc
mov
movaps
add
mov
lock
decl
jl
dec
fildll
xchg
imul
stc
push
sbb
lcall
into
cmc
push
cld
fdivrs
xchg
repz
push
int
mov
xchg
jnp
sub
pop
jg
xor
dec
outsl
xor
pop
lret
push
inc
int
pop
lock
out
cmp
dec
sbb
pop
shl
mov
dec
jg
ds
dec
cmp
inc
cs
out
add
mov
sbb
incl
dec
test
cltd
into
sub
add
call
or
mov
mov
pop
jmp
mov
mov
imul
call
mov
out
fcompl
sbb
les
jo
iret
ret
cmpsb
add
pushl
jle
bnd
adc
push
rcrb
int3
mov
int3
adc
movsl
outsb
push
es
jg
cmc
jb
daa
lret
je
sahf
movsb
push
clc
pop
jb
sbb
loope
test
jne
call
add
dec
mov
mov
pusha
cmpsl
popf
jne
mov
sub
and
xchg
das
mov
jae
int3
xor
add
test
lock
loopne
dec
sbb
icebp
mov
adc
aas
mov
pop
cmp
rclb
xchg
cmp
call
xor
jnp
mov
popa
cmp
sbb
pushf
test
fcmovnbe
mov
mov
jbe
mov
ljmp
mov
mov
daa
inc
mov
test
lods
and
jb
ja
and
testb
test
scas
mov
jp
xchg
mov
jmp
fwait
lcall
jo
pop
push
adc
ds
loop
aam
adc
add
jmp
ss
fld
mov
outsb
dec
and
dec
adc
xchg
int
cmpsb
xor
push
mov
dec
inc
aad
sub
jno
jns
cmp
xor
adc
lds
ljmp
adc
cmp
adc
push
pop
jo
jge
push
mov
cmp
call
clc
punpckhbw
mov
movl
or
ss
scas
push
push
mov
jns
xchg
in
out
jmp
inc
addr16
and
pop
mov
aad
incl
mov
je
push
add
mov
mov
out
outsb
sbb
sahf
and
repz
mov
pop
cmpb
rolb
jns
mov
lcall
ljmp
mov
movsl
push
lods
cmp
aad
push
xor
mov
rcll
mov
pusha
push
gs
fcmovnb
out
arpl
mov
lahf
ss
mov
out
add
mov
ss
xchg
shlb
cmp
gs
mov
and
call
aas
cmpsb
fs
insb
ja
outsl
loopne
lock
call
ds
test
mov
pop
shl
adc
imul
pop
pop
xor
jmp
lcall
movsl
and
mov
test
cmp
sbb
jle
stc
sub
fyl2xp1
enter
jmp
daa
inc
sbb
sub
enter
mov
push
mov
out
lcall
sti
jecxz
push
xchg
mov
jb
ret
cmp
shl
fdivrl
and
movsl
sti
sti
stos
fwait
pop
decl
jl
or
out
cmp
mov
nop
cmp
ret
xchg
push
into
outsb
out
jno
decl
adc
pop
je
add
dec
test
imul
and
fsub
popf
push
adc
shl
xor
cmp
loop
cld
movsl
xchg
inc
in
xchg
sub
mov
and
inc
push
pop
pop
insb
shlb
fstpt
leave
cltd
lret
push
cmp
cs
jecxz
jle
and
xor
mov
lahf
and
fdivr
pop
lcall
test
or
and
inc
jecxz
out
jmp
xchg
ds
jle
add
add
ljmp
cmp
test
scas
loope
mov
pop
int
sub
cmp
mov
dec
mov
add
jge
inc
daa
mov
pusha
add
dec
fs
decl
ss
mov
jg
mov
lea
cmp
loop
dec
gs
addr16
pushl
dec
lods
or
sub
loope
pop
jnp
add
loopne
aad
mov
test
bound
andl
xor
or
mov
aaa
cmp
sahf
sub
loopne
push
xlat
sub
testl
call
push
pop
sbb
push
movsb
mov
xchg
imulb
hlt
arpl
fwait
je
add
iret
cmp
jmp
and
inc
std
sub
addl
mov
dec
mov
scas
int
sbb
mov
sub
mov
in
jnp
mov
call
mov
pop
movsb
push
adc
in
sub
dec
incl
pop
xor
repnz
mov
dec
xchg
sbb
int3
les
cmp
add
jmp
in
aad
stos
push
dec
mov
movsl
or
xchg
addl
mov
xchg
cmp
pop
sahf
add
push
test
out
push
aaa
std
pushl
nop
leave
cmp
mov
push
loop
stc
dec
rorl
xor
mov
cmp
sub
pop
ja
into
xor
xor
addr16
mov
mov
fsubl
stos
add
es
sub
sub
ret
dec
adc
call
in
scas
bound
add
scas
sbb
pop
dec
stos
sarb
add
add
cmp
shll
mov
dec
popf
dec
mov
lret
adc
pop
pop
mov
lods
xchg
jmp
and
jo
dec
xchg
mov
mov
jns
push
or
dec
out
pop
das
sti
out
cli
sub
pop
adc
sahf
loop
or
std
pop
mov
int
push
inc
sbb
inc
sub
incl
fldl
inc
sbb
clc
pusha
sbb
ljmp
mov
lahf
cwtl
mov
incl
cmpsl
jp
pop
mov
aam
in
pop
js
out
and
xchg
sahf
adc
das
inc
mov
inc
jae
push
testl
xor
or
es
inc
lea
add
xor
mov
ljmp
pop
push
sbb
testl
icebp
mov
push
push
incl
cld
icebp
stc
xor
inc
sbb
adc
cmc
addr16
icebp
fs
call
loopne
and
out
jp
fistpll
mov
sbb
inc
add
stos
lret
lcall
adc
or
and
cmpsl
cmpsb
jle
frstor
movsb
pop
cmp
sub
out
push
xor
nop
adc
incl
cli
dec
push
sahf
and
pushf
push
push
xchg
inc
ret
jl
mov
jp
pop
push
mov
xchg
ja
clc
mov
jmp
pop
mov
fdivrs
pop
mov
xchg
loope
insl
mov
push
push
iret
sbb
xchg
test
call
bound
bound
push
test
cmc
sahf
stc
out
lock
pop
ljmp
or
jg
adc
daa
mov
nopl
addl
push
jmp
inc
out
in
pop
std
ret
adc
je
pop
out
mov
push
cld
xchg
mov
sbb
repz
pushl
cld
stos
inc
mov
sbb
in
cmp
loopne
test
sahf
jmp
mov
mov
aaa
out
je
movsb
lds
or
jp
fbld
dec
push
sbb
rorl
xor
pop
cmc
scas
pop
ja
fsub
shl
add
lcall
jnp
xchg
push
mov
jg
push
imul
sub
out
mov
test
jmp
mov
mov
dec
or
sbb
lret
cmp
aam
mov
decl
gs
call
cmp
ret
and
lahf
repnz
mov
dec
data16
push
out
sar
call
pop
and
lahf
test
inc
imul
out
es
inc
and
mov
call
cld
out
popa
pop
mov
cmp
decl
or
pushl
fdivrl
or
popf
cwtl
xchg
jg
adc
decl
gs
fst
mov
addr16
push
pop
fsts
jmp
fcmovbe
lods
pop
pushf
jmp
mov
sahf
lcall
mov
mov
add
mov
jbe
mov
andb
mov
dec
add
loope
int
and
mov
jmp
xchg
or
mov
inc
adc
mov
daa
adc
daa
cmp
loop
sub
ret
sub
cmp
inc
xor
sarb
sbb
dec
scas
inc
jmp
mov
lret
rcll
inc
adc
insl
pop
inc
push
pushl
pusha
mov
ret
xor
loope
call
inc
ret
cmpsl
lret
or
mov
ret
or
cli
or
daa
fidivl
mov
mov
incl
pop
out
inc
gs
iret
outsb
cltd
test
dec
mov
and
scas
jmp
mov
sbb
decl
and
fcomps
mov
mov
sbb
das
call
push
in
cld
mov
imul
loop
and
fimuls
xchg
addr16
jmp
xchg
sbb
fwait
xor
repz
sub
sbb
mov
add
lcall
add
lcall
shrb
das
outsb
cmpsb
jp
aaa
push
repz
sarb
jg
test
xchg
sub
adc
lcall
fidivrs
xor
lcall
insl
fimuls
test
outsl
loopne
xorb
sub
fdivrs
lahf
outsl
mov
fstpt
pusha
jecxz
add
sbb
fistpl
pop
fdivrs
dec
mov
inc
or
cmp
lds
iret
cs
sub
xor
dec
flds
cmp
testb
or
add
rolb
shl
ljmp
out
pop
sub
imul
dec
andl
nop
ja
shlb
pop
pop
fldt
adcb
jae
in
fdivp
sbb
cmp
movsb
out
and
pushl
stos
pop
mov
je
xchg
incb
stos
iret
cmc
lahf
lods
mov
or
adc
lcall
mov
jge
sbb
test
iret
test
jno
mov
mov
data16
ljmp
and
adc
adc
sbb
out
enter
sbb
sub
mov
movsb
mov
incl
mov
cld
push
pop
sub
repz
dec
jne
test
in
sbb
dec
and
incl
pusha
imul
es
xorl
push
shll
mov
mov
jb
pushl
sbb
aam
mov
adc
adc
enter
lret
or
lcall
dec
sbb
or
stos
out
pushf
imul
add
jg
dec
adc
rclb
rolb
add
pop
fs
add
aaa
jnp
movsl
and
dec
das
fcmovb
adc
push
decl
sbb
mov
dec
sahf
lods
arpl
movsl
jmp
sub
fildll
mov
cs
hlt
adc
imul
fsubr
loop
cltd
adc
push
push
and
insb
call
decl
push
or
cli
outsl
adc
in
aam
xlat
and
jno
adc
repz
or
je
lcall
sarl
pop
pop
xchg
xor
and
dec
push
into
mov
mov
push
insl
push
mov
jno
fwait
into
lock
adc
imul
out
popa
mov
mov
jae
cmp
jg
adc
mov
inc
das
ret
fnsave
std
add
enter
ljmp
inc
jbe
jae
sub
sarl
icebp
push
xchg
pop
dec
jl
outsl
cli
lcall
jae
addr16
xchg
cmpsl
aaa
sub
adc
ss
imul
divb
push
dec
jno
cltd
adc
imull
repnz
addr16
mov
push
jge
mov
pop
push
stos
jg
mov
jno
aas
ffree
ljmp
adc
xor
insb
es
mov
mov
push
sub
cmp
test
in
lods
out
xchg
in
add
pushl
and
lcall
xchg
repnz
aaa
outsb
pop
mov
or
leave
scas
test
scas
adc
fistpl
mov
decl
pop
jp
xchg
cltd
in
stos
adc
jmp
mov
lea
ret
sub
idiv
jmp
aaa
iret
mov
aas
add
addr16
hlt
fstpt
sbb
repz
in
data16
addb
out
jmp
shrl
aad
mov
into
xorb
je
jo
int3
lock
repnz
arpl
mov
xchg
sbb
sub
dec
iret
cmpsl
test
mov
mov
out
mov
cwtl
loope
cmc
loope
ljmp
push
out
mov
ljmp
std
jl
sub
test
cmp
nop
out
add
fsubl
push
mov
jno
mov
xchg
imul
arpl
frstor
sbbb
jg
cmp
cmpsb
popa
adcl
adc
outsb
idiv
ljmp
jbe
and
push
cld
dec
adc
adc
out
inc
sarb
pop
xlat
stc
xor
gs
inc
iret
jne
add
or
mov
andl
xor
adc
sbb
push
adc
or
mov
cmp
sub
add
in
push
xchg
sbb
jne,pt
adc
loop
jae
iret
dec
and
xor
xchg
in
pusha
jge
adc
das
gs
lcall
bound
insl
and
insb
scas
sahf
mov
or
icebp
ficompl
lcall
pop
gs
dec
movsl
decb
and
lock
inc
and
ss
ljmp
sar
loopne
stc
hlt
mov
test
xor
xchg
decl
sbbl
mov
inc
cmp
add
hlt
dec
gs
jmp
cmp
inc
pop
je
push
lahf
pop
mov
xor
insl
shll
adc
das
and
rcll
and
lcall
pop
fidivrl
xchg
sub
ljmp
fldl
ljmp
xchg
pop
inc
inc
divb
leave
call
popa
dec
pop
call
lgs
push
fmull
mov
in
xor
stc
add
sbb
xchg
int
sub
lcall
ja
jg
mov
movsb
cmpsb
adcb
cmp
movsl
outsb
test
ljmp
dec
test
pop
mov
sub
in
ret
xchg
mov
popa
test
mov
cli
cli
inc
gs
test
fdivr
aaa
cld
outsl
sub
mov
sub
xor
aaa
clc
push
inc
xchg
mov
decl
clc
loope
dec
scas
std
shll
fwait
xchg
gs
mov
insl
inc
cmp
adc
dec
cmp
mov
pushl
mov
jns
dec
hlt
push
scas
out
enter
movsb
mov
pop
in
jl
mov
movsl
xlat
jp
add
lea
cmp
xchg
jmp
hlt
jae
mov
cli
jg
adc
or
rolb
mov
mov
mov
add
ret
daa
sti
and
outsl
push
mov
dec
fnstcw
aas
jecxz
lock
mov
jp
push
or
aad
mov
pushl
and
das
pop
and
jno
scas
je
loopne
cld
inc
jne
hlt
movsb
dec
cmp
cmp
push
lea
nop
pushf
xlat
push
and
outsl
call
arpl
dec
testl
jns
out
pop
xor
xor
jg
push
int
xchg
movsl
push
jl
mov
in
rcll
ret
mov
cmpsl
push
cmp
sbb
add
repz
cs
das
sbb
lds
fiaddl
popa
stc
push
push
mov
popf
insl
push
lds
in
sub
or
jg
mov
fwait
jnp
incl
jg
mov
sbb
cld
sahf
mov
insl
xchg
lods
ljmp
push
push
into
int
outsl
and
outsb
aaa
aad
push
call
call
adc
dec
jecxz
xor
ud0
inc
test
ret
xchg
push
and
sti
sub
fsubrl
sbb
cli
in
ffree
inc
jmp
sub
inc
dec
dec
sarl
dec
call
adc
xchg
add
push
or
lcall
int
push
jbe
cmp
scas
jnp
xchg
xchg
inc
mov
push
addr16
fiaddl
dec
movsl
sub
inc
mov
jns
aad
ret
xor
mov
iret
movsb
ds
mov
push
pop
pusha
movsb
call
mov
sbb
xchg
xorb
cmp
fsubr
arpl
jg
test
jp
cmpsb
dec
and
imul
lea
mov
sarb
icebp
jo
adc
push
add
outsb
icebp
mov
ljmp
clc
adc
testb
sti
daa
ret
push
fsubrl
mov
add
scas
jg
pushf
mov
jg
andb
mov
pop
lock
incl
insb
addb
jge
inc
and
add
xchg
xchg
or
or
and
mov
rcl
mov
jb
and
pop
adc
push
cli
dec
inc
mov
test
mov
ljmp
xchg
cmpsl
popa
cmp
jg
xor
ret
sar
loop
call
ds
mov
push
xchg
push
xchg
or
lret
lods
enter
push
stos
xor
mov
lret
in
pusha
jb
add
pushl
push
dec
xchg
incl
cltd
mov
xchg
lods
push
xor
and
loopne
jle
mov
jbe
sti
push
sbb
ljmp
jne
imul
inc
arpl
xchg
arpl
jnp
ja
sub
adc
lcall
adc
stos
dec
lods
xchg
xchg
inc
das
aaa
push
js
invd
das
and
outsb
or
pop
ja
jb
loope
call
xchg
jg
adc
xchg
jns
and
mov
jns
and
mov
add
inc
inc
fldcw
xchg
and
mov
or
lods
ret
pop
jmp
aad
and
xor
dec
cmpsb
push
imul
xlat
dec
out
scas
mov
push
jae
jmp
jle
sbb
sub
xchg
adc
fsubrp
ficompl
mov
inc
or
inc
incl
imul
mov
adc
push
mov
lahf
push
mov
lret
and
inc
inc
mov
call
arpl
mov
mov
aas
xchg
jns
xchg
cmp
jmp
jmp
incl
call
pushf
sbbl
xor
cmp
mov
lret
lret
and
jmp
push
cmp
inc
or
jle
sbb
rcr
xlat
fnstcw
cwtl
xor
or
call
xor
jmp
sbb
icebp
lods
idiv
jg
mov
adc
lock
pop
cmp
jmp
inc
cmp
inc
xor
les
xor
xchg
cmpxchg
jecxz
scas
bound
cmp
cmpsb
add
inc
lds
in
mov
std
mov
xchg
push
insl
add
cmp
jmp
xchg
cli
data16
add
or
call
mov
mov
mov
push
dec
mov
ljmp
sub
and
in
in
std
xchg
int
or
test
pop
icebp
lcall
loop,pt
mov
loop
mov
in
push
push
adc
xchg
mov
call
dec
sub
fldl
dec
stc
xor
fcmovne
addr16
mov
int
and
dec
dec
pushl
rcrl
and
adc
sub
adc
lret
xchg
add
repz
xor
js
mov
ljmp
mov
movsb
lods
sbb
ficoml
je
test
sarb
push
int
shll
ret
xorl
decl
cld
lods
popa
movl
test
jo
inc
pop
cmp
subl
xor
nop
in
and
push
icebp
aam
leave
rcrl
dec
xchg
jg
mov
jno
ret
lcall
nop
test
sbb
leave
mov
imul
cli
push
xchg
pop
mov
aad
mov
pop
add
mov
int3
ljmp
decl
mov
out
add
dec
sub
lds
lcall
mov
es
arpl
jmp
icebp
pop
xor
sub
inc
fstl
adc
ljmp
aaa
dec
sbb
xor
loopne
xor
daa
rcrb
xorb
pushl
std
sub
cwtl
mov
mov
xorl
shl
jae
les
lods
cmpsb
call
sub
xchg
mov
faddl
loope
jecxz
ret
aas
xchg
push
jecxz
sbb
mov
sub
cmp
xchg
pusha
test
xchg
pusha
pop
xchg
sub
popa
jmp
mov
ljmp
ret
xor
setle
addr16
xlat
call
xlat
pop
nop
mov
call
test
mov
sbb
mov
cmp
sbb
jle
sub
cmp
lcall
jg
andl
dec
push
lcall
jp
mov
pop
pusha
jne
mov
sti
shll
jae
addl
mov
xchg
imul
pushl
shrl
adc
xlat
ja
sub
sub
stc
xchg
std
add
jnp
repnz
ljmp
insl
stc
fcomps
mov
sub
cltd
inc
lds
ss
dec
imul
ljmp
repnz
lret
push
das
data16
jns
push
pop
xchg
xchg
sbb
cs
cmp
dec
push
xchg
popa
sub
push
adc
dec
call
std
mov
insl
mov
xor
lcall
pop
push
inc
in
push
outsl
pop
or
xor
xchg
fwait
push
data16
ljmp
xor
std
daa
cmpsl
adc
fsubl
xchg
lahf
lock
sbb
cltd
xlat
je
shll
call
flds
jle
movsl
add
iret
shll
cs
arpl
addl
pop
lcall
xor
adc
negl
testl
incl
cld
inc
lods
ret
int3
movsb
or
pop
sub
lods
ljmp
ret
pop
jmp
mov
xorl
rorl
or
mov
push
and
mov
incl
sti
mov
lock
sub
push
out
ja
loopne
inc
dec
mov
or
scas
and
jb
stos
repz
fcos
call
mov
pop
mov
insb
inc
cld
push
mov
mov
outsb
mov
sar
incl
sbb
adc
push
xlat
ja,pn
pop
push
push
ss
jns
or
mov
and
lcall
inc
jge
lods
mov
mov
out
push
and
mov
lcall
and
out
mov
push
xchg
jg
mov
sbb
jnp
inc
xor
pop
inc
xchg
adc
add
fnstcw
xchg
jbe
leave
jmp
jge
mov
leave
dec
sub
add
mov
cmp
add
jmp
push
adc
aad
and
ret
mov
movsb
popf
rcl
std
clc
jnp
dec
daa
sub
push
push
xor
add
lret
cmpsl
jb
adc
lret
mov
stos
mov
jge
xor
ucomiss
ljmp
cli
cld
and
stos
outsb
lahf
dec
cltd
jno
or
ljmp
in
add
and
cltd
pop
mov
dec
jno
out
xchg
loopne
cmp
filds
sbb
loopne
rcll
xor
lcall
push
stos
pusha
xchg
or
pushf
int3
lcall
mov
adc
dec
mov
mov
lock
dec
push
mov
pop
or
je
sub
dec
aad
adc
in
cmp
shl
inc
aad
xchg
push
add
mov
pop
imul
ljmp
sar
mov
jle
sub
out
pop
mov
rcr
inc
xchg
mov
mov
sbbl
cmpsb
mov
outsl
inc
xchg
lods
pop
jg
and
decl
lret
inc
sub
icebp
lret
iret
sub
lahf
inc
sahf
fisubrs
gs
and
jb
fwait
adcb
dec
stos
notl
decl
or
mov
or
lret
inc
jns
fsubrp
test
adc
ljmp
mov
inc
fisubrs
fisttps
arpl
cmp
mov
dec
js
call
pushf
push
cmp
xor
dec
add
pushf
inc
push
mov
daa
test
mov
decl
enter
add
xor
jg
in
int3
pop
mov
pop
pushl
gs
xchg
inc
dec
loop
inc
cli
jns
fcmove
push
int
cmp
mov
mov
pushf
mov
lcall
push
stos
sbb
std
inc
out
and
imul
cld
lea
bound
jmp
add
jmp
inc
sub
pop
mov
mov
sub
lcall
call
cld
sbb
decl
dec
icebp
mov
sub
aas
pop
fs
lret
pop
jae
jae,pt
sbb
pushl
rcrl
add
mov
xor
aad
and
and
decl
xabort
inc
jne
iret
cld
test
in
loope
push
test
xor
pop
dec
scas
pusha
ljmp
jmp
or
pop
or
mov
call
add
lcall
test
shlb
mov
into
outsl
mov
inc
rcll
jmp
outsl
lret
add
fsubrl
fsts
cmp
push
xchg
mov
xlat
mov
pushf
dec
incl
push
nop
lds
sbb
mov
es
inc
sbb
lcall
jge
inc
push
ljmp
jb
imul
int
rcll
add
outsb
out
das
xchg
or
pusha
inc
pushl
hlt
sbb
mov
fs
call
fcoml
mov
mov
mov
lcall
call
dec
dec
pop
pop
cs
movsb
insb
repnz
cwtl
ror
mov
insl
in
lcall
jmp
adc
ds
mov
sbb
rcrb
xchg
sub
mov
sti
add
jnp
imul
pop
xchg
sub
in
outsb
repz
das
push
popa
arpl
dec
test
outsb
jmp
fidivl
das
dec
jp
cmpsl
jns
ds
jl
dec
int
mov
jmp
out
jb
push
shrb
and
jb
xchg
ret
jb
jno
fnsave
and
mov
mov
mov
insl
cmp
icebp
test
inc
cmpsl
dec
mov
or
inc
cmp
adc
test
decl
clc
dec
loope
mov
out
inc
rcrb
subb
repz
pop
jp
mov
icebp
jbe
cmp
jg
scas
test
cmp
scas
xorb
ret
dec
or
stc
out
push
fldl
inc
jecxz
ljmp
scas
sub
cmp
test
stos
lock
push
jmp
mov
scas
mov
les
int3
add
jp
out
adc
cld
jmp
out
movsl
je
scas
push
in
shll
lret
lcall
jg
lcall
mov
push
mov
cld
jmp
mov
mov
xchg
mov
jmp
jmp
xchg
jbe
ljmp
les
mov
mov
pushl
add
pop
mov
into
imul
sbb
pop
orl
pop
enter
js
add
popl
stc
ljmp
sub
cld
cs
adcb
inc
je
or
jmp
sub
adc
js
mov
iret
btr
decl
call
imul
pop
push
shl
lahf
push
cmp
xchg
jl
dec
addr16
or
ret
decl
jge
incl
rol
cmp
sbb
pop
hlt
call
mov
pop
aam
fistl
ficomps
sbb
loopne
pop
dec
insb
or
mov
sbb
mov
into
mov
and
mov
mov
push
xorl
inc
and
mov
lahf
cmp
jp
add
xchg
or
in
sbb
addr16
in
into
subb
pushl
clc
andl
cmp
pushf
pop
jb
jl
pop
sub
adc
adc
cli
add
das
ds
jmp
stos
sub
lahf
push
leave
ret
lret
inc
ljmp
sarl
sarb
jne
cmpsb
cmp
xor
xchg
sub
push
or
dec
dec
lcall
inc
inc
xchg
sub
push
clc
stos
lret
cmc
sub
jns
or
mov
sub
or
add
xchg
aam
cmp
xchg
ds
repz
shr
sub
gs
xchg
sbb
lahf
add
lahf
mov
mov
mov
sarl
lds
sub
loopne
ljmp
mov
mov
add
popf
es
in
in
repz
push
cmpsl
push
incl
mov
pop
dec
fnstenv
pusha
mov
mov
lds
pop
cmp
jmp
or
les
andnps
cmpl
inc
das
xchg
mov
popf
fisttps
aaa
stos
rclb
push
popa
lret
lcall
icebp
ficoml
sti
xorl
push
pop
jb
outsl
mov
mov
sub
out
repz
sub
int3
mov
cmp
and
fcomip
out
fsubs
pop
pop
daa
mov
pop
pop
mov
inc
lods
imul
mov
and
push
pop
movsb
cwtl
mov
jnp
je
clc
mov
fcomip
decl
insb
call
inc
fcoms
sub
in
dec
mov
cmp
insb
pushl
xchg
loop
push
in
jg
xchg
cltd
cmp
jmp
jo
push
add
aam
outsl
jmp
sbb
jbe
cmp
insl
out
ljmp
lea
decl
loop
push
jmp
scas
sbbb
ja
jnp
in
xorl
addr16
mov
loop
clc
jp
jecxz
popa
ret
mov
pusha
inc
orl
jg
dec
fcompl
jg
dec
in
xchg
lahf
sbb
cmp
loop
cmp
ljmp
cli
push
out
mov
sbb
push
in
jp
push
lea
lret
xchg
scas
scas
incl
mov
into
rcl
push
xchg
test
cmp
mov
xor
push
hlt
pushl
push
xor
fisubrs
rcrb
jne
sub
and
pop
addl
movsb
shlb
inc
jo
lret
sti
je
xlat
ret
mov
test
xor
das
cmp
incl
lock
clc
dec
sbb
jle
dec
push
inc
stc
int3
adcb
adc
mov
aaa
popa
dec
shlb
adc
inc
jecxz
sar
call
lret
xlat
and
out
pop
mov
ss
mov
mov
xchg
adc
mov
out
adc
push
in
sbb
lcall
inc
xchg
dec
decl
mov
andl
mov
inc
push
ret
pop
bound
incl
dec
ret
lods
jmp
xor
sbb
nop
adcl
dec
jg
fwait
ret
add
std
mov
decl
pop
fnstsw
adc
and
lret
inc
add
loope
shl
clc
xchg
ss
aad
sub
dec
ret
push
push
test
mov
cmpsb
ret
add
push
adc
test
out
cmc
adc
cmp
fwait
mov
xchg
pusha
mov
cs
inc
push
ficoms
dec
cmpsb
push
xchg
cmp
leave
mov
ds
mov
dec
hlt
inc
ds
addr16
lods
push
fisubl
mov
into
dec
cs
sbb
incl
mov
pop
cmp
cmp
mov
pop
cmp
lret
xor
xor
out
stos
ljmp
cli
scas
lret
fsts
imulb
adc
sbb
scas
inc
stos
inc
decl
pop
pop
jb
test
pop
hlt
dec
dec
inc
cmp
push
aad
jp
scas
pop
push
mov
ljmp
nop
and
pop
or
les
subb
fistps
xchg
pop
movsb
es
cmc
aas
lcall
dec
cwtl
fcoms
mov
and
lods
fnstsw
xchg
pop
pushf
enter
pushl
adc
outsl
aad
scas
ja
les
pop
push
cmpsb
xor
in
dec
sub
test
jg
add
push
mov
aad
jns
inc
cli
inc
test
ret
mov
shll
mov
lods
adc
stos
movsl
pushl
fnsave
lods
scas
loope
arpl
mov
mov
dec
gs
mov
pushl
xchg
test
add
cmc
pop
mov
lods
inc
adc
cltd
dec
pop
lret
dec
xchg
mov
xor
inc
incl
fwait
cmpsl
and
stos
adc
mov
in
push
loope
das
fsubs
data16
rcrl
cmpl
enter
fnsave
cmp
movsl
mov
sbb
scas
imul
mov
xchg
lea
ljmp
loopne
inc
insb
pushf
sbb
xor
roll
aad
inc
adc
jne
cmpsl
std
push
and
std
pop
ljmp
adc
xor
imul
xchg
cmpl
pop
xor
mov
adc
fildll
inc
xchg
xchg
pop
mov
idivb
lea
mov
mov
sub
jns
xchg
jg
out
mov
and
cmpb
sbbb
outsb
ljmp
xor
incl
xchg
scas
jbe
inc
xlat
fdivl
test
fisubrl
popa
hlt
push
pushl
mov
test
push
xor
int3
dec
sub
lea
mov
fdivs
mov
jae
and
jno
fs
rcrb
ljmp
inc
add
adc
jge
lahf
dec
xchg
and
fs
in
xor
call
fsubrp
push
loopne
fnstcw
and
ror
pop
add
jo
lahf
lods
in
stos
andl
dec
push
jae
inc
loope
incl
out
mov
xchg
std
clc
pushf
mov
adcb
hlt
lcall
inc
repnz
jp
rcr
and
loope
in
rcr
fwait
jns
jmp
inc
jl
mov
or
mov
xlat
inc
ret
inc
push
or
imul
icebp
out
ljmp
cmpsb
shl
inc
mov
pop
cwtl
lahf
lea
xchg
mov
daa
add
cli
fisubs
aad
outsl
ret
push
sbb
shrb
lods
xlat
inc
or
push
ret
gs
push
and
or
lds
push
cmpsb
out
in
ss
dec
and
push
jno
decl
cmp
sbbb
add
enter
mov
mov
add
ja
ljmp
mov
pop
lods
fdivl
dec
inc
js
jmp
xor
in
inc
jno
jg
test
outsl
in
and
push
cmp
jo
jecxz
stc
and
jo
jmp
in
xor
fnclex
pop
or
dec
out
clc
inc
popa
xchg
mov
mov
xor
test
cmp
add
lods
jno
lret
mov
and
fisttpl
pop
repz
xor
fs
jl
rcll
orl
jmp
xchg
sti
adc
pusha
push
testl
bound
adc
iret
insb
arpl
adc
insl
mov
ja
in
mov
leave
and
cmpsl
dec
cmp
adc
pop
lock
add
test
mov
xabort
mov
call
out
inc
sub
es
sub
out
lcall
jg
mov
testb
insl
in
arpl
shl
adc
leave
mov
aaa
mov
incl
or
imul
fcoml
pop
and
fmulp
outsl
and
decl
push
sbb
ret
inc
jno
sub
dec
aam
mov
ret
cmp
inc
fs
sbb
aaa
mov
fwait
or
loope
pusha
rclb
pop
mov
incl
mov
insl
scas
fistl
nop
fprem
jecxz
pop
out
push
test
loop
lock
jmp
xchg
frstor
notl
cltd
lods
ret
cmp
or
sahf
test
popa
loop
mov
cmp
push
aam
mov
mov
lods
mov
lcall
dec
addb
leave
cltd
mov
dec
pushl
clc
lahf
lahf
rorl
pusha
mov
dec
push
mov
adc
xchg
pop
stos
jne
sar
pushl
xor
sub
adc
dec
dec
testl
outsb
add
call
push
or
loop
adc
icebp
mov
pop
or
ds
push
std
fdivl
out
mov
loop
push
test
divb
push
fs
rorl
mov
pushl
aas
cltd
cltd
ret
pop
pushf
push
add
filds
push
push
sub
mov
jmp
aam
mov
push
pop
and
les
push
adc
stc
aam
stos
test
insl
stos
out
push
pop
or
loope,pn
test
or
mov
sub
xchg
push
pop
aad
icebp
mov
fcompl
repz
in
inc
lcall
sub
xchg
outsb
aas
andl
dec
inc
arpl
lcall
adc
jge
cmpsb
out
inc
xchg
xchg
mov
sbb
cmp
call
xchg
jmp
xchg
jl
mov
in
daa
in
fwait
adc
jge
call
cli
mov
mov
jae
cmp
xchg
cli
jge
mov
add
fbld
sarl
sti
and
std
mov
jmp
out
fdivr
lods
xor
xor
int
fs
orb
ficomps
pop
nop
outsb
add
pop
mov
xchg
jmp
jle
sbb
testb
jge
push
out
and
xor
jmp
mov
jno
push
iret
ret
jp
sub
pop
pop
incl
cld
and
gs
insb
rolb
out
cli
push
fsts
rorl
mov
fcomip
jnp,pt
add
jg
pop
iret
movsb
inc
mov
sub
call
shl
lcall
int3
inc
repnz
mov
int3
lret
pop
lcall
enter
pop
or
inc
jg
jg
cli
sbb
adc
inc
mov
insb
es
add
inc
test
push
in
jp
mov
rcrl
aas
in
fsubp
or
icebp
mov
mov
fcoms
xor
mov
jle
mov
cwtl
mov
cmp
cmp
lea
jp
cli
cli
mov
push
sti
outsb
jno
mov
jb
lahf
adc
sahf
dec
adc
push
decl
cmp
mov
in
mov
jle
inc
push
insb
push
adc
push
lds
data16
cmp
aas
dec
dec
mov
sarl
jnp
pop
sub
inc
jl
imul
jne
sub
imul
inc
or
nop
add
or
imul
rorl
call
lcall
mov
cmpsl
inc
jle
cmp
pop
outsl
inc
jb
inc
sbb
cmp
xchg
out
cli
cmp
fsubs
mov
push
push
in
xchg
out
sti
sbb
out
fstp
xor
mov
push
lcall
bnd
fwait
pop
cmp
dec
and
lcall
addr16
jmp
filds
fwait
mov
add
mov
mov
cld
jp
jg
add
popa
or
pushf
pop
stos
rcl
pusha
jge
jns
adc
ljmp
std
add
add
inc
sub
gs
scas
fsqrt
xor
inc
dec
xor
jmp
sub
sub
push
inc
test
ja
mov
sbb
adc
pop
repz
incl
jno
std
mulb
xor
mov
imul
adc
lods
lcall
les
jns
popa
push
jg
packsswb
stc
aam
repz
xchg
mov
inc
xchg
fstpt
jnp
loopne
call
sbb
enter
loop
loop
sbb
and
outsb
xchg
adc
push
imul
fisttps
popf
lret
fwait
xchg
mov
push
scas
jae
data16
mov
dec
sti
dec
rclb
pop
xchg
sarb
mov
outsl
push
jne
pop
jne
pop
sbb
fisttps
push
ljmp
fistpll
lock
add
fldenv
xchg
data16
jae
sub
fdivrp
ljmp
fcmovu
addb
and
out
aas
aad
add
mov
inc
or
scas
xor
mov
lahf
popf
fnstsw
push
and
lret
mov
mov
mov
loop
and
loopne
jecxz
push
pop
mov
jo
dec
insb
cmpsl
pop
lcall
xor
addr16
lock
call
push
nop
cmpsl
movsl
mov
incl
test
clc
sarb
imul
push
bound
xor
add
fimuls
push
sbb
pushl
mov
sub
stos
lret
xchg
jmp
loop
ficomps
and
xchg
cmpsb
int
decl
repnz
stos
fidivl
sarl
roll
xor
pop
hlt
inc
cld
in
dec
in
jmp
pop
lock
xchg
fwait
std
cmpsb
or
xchg
into
pop
jle
or
mov
and
mov
and
pmuludq
push
cmpsl
cltd
ror
sbb
enter
imul
ljmp
mov
xchg
out
dec
jmp
pusha
mov
xlat
mov
pushf
out
inc
adc
in
inc
and
es
js
mov
fs
pushf
dec
and
rcll
jns
xor
cmpsb
xchg
icebp
adc
xchg
daa
cmp
mull
mov
cmp
fimuls
or
xorl
decl
fdivs
pop
add
add
lahf
jo
push
inc
fcoms
fsubrp
mov
jg
out
int3
inc
xor
jge
mov
sti
push
dec
jne
loope
int
ljmp
jl
jmp
lea
test
add
and
aam
jnp
sbb
ljmp
loopne
pusha
in
or
jmp
ljmp
enter
aaa
std
mov
push
jecxz
add
mov
sete
cwtl
pop
adc
das
sar
adc
dec
inc
push
bound
in
rorb
mov
mov
jmp
out
call
aaa
sub
outsb
push
aas
sub
fisttps
sti
fmull
pop
pop
divl
sbb
adc
push
push
fdivs
xor
ljmp
cli
incl
mov
int3
movsl
aam
adc
frstor
add
in
sarl
add
jmp
ds
icebp
jmp
add
sahf
cld
mov
dec
inc
stc
push
ljmp
jmp
fisubl
cltd
jns
sbb
outsl
jp
dec
repnz
and
cmpb
mov
and
dec
in
ss
mov
imul
test
orb
sbb
xchg
dec
cmc
push
xlat
mov
or
inc
jge
and
es
jmp
add
icebp
mov
cld
icebp
cmp
cmp
xchg
cmc
adc
inc
pop
jge
incl
xor
inc
in
xchg
outsl
enter
popf
loope
xchg
pop
add
in
loopne
adc
cmp
jg
dec
pop
push
cld
aad
xchg
fwait
mov
es
das
lods
pop
adc
out
sub
loopne
decl
push
jl
int3
stc
rorl
adc
aaa
lds
xlat
inc
div
push
and
jae
inc
nop
jp
mov
mov
mov
out
push
pusha
push
xchg
mov
mov
lret
mov
pop
imul
sbb
jmp
je
or
lods
xchg
inc
je
dec
adc
gs
xor
pop
xor
add
mov
ficoms
mov
jbe
test
or
xor
jge
std
push
pop
jb
fs
cmpsl
sar
jmp
mov
test
inc
arpl
sbb
bound
ljmp
ja
inc
jg
int
inc
inc
sbb
test
outsl
mov
clc
stc
int3
popf
mov
bound
ret
movsl
xchg
inc
mov
cwtl
sbb
inc
sarl
lock
scas
arpl
leave
adc
ljmp
fisubl
aad
incl
test
imul
and
in
ret
clc
call
mov
jp
pop
cmp
mov
movsl
add
and
gs
fnstenv
fcoml
pusha
test
bnd
out
mov
and
inc
lret
mov
cmpsl
cli
inc
fiaddl
pop
mov
and
xor
aaa
pop
xchg
cmc
fcomip
jmp
fsts
xchg
push
fs
or
push
mov
cld
call
add
test
bound
xor
xor
mov
pop
test
inc
sbb
mov
call
mov
mov
xor
in
fwait
cmp
mov
mov
lret
jle
lcall
push
mov
mov
popf
and
and
mov
jbe
cmp
jno
mov
in
push
pushf
cmp
xchg
mov
mov
incl
jns
jl
xchg
les
pop
and
xor
imul
or
loope
repnz
pushl
icebp
aam
xchg
cmc
loope
adc
ret
dec
mov
cwtl
add
sub
outsl
jmp
cmp
idiv
ljmp
scas
cld
imul
pushf
ljmp
mov
fcomi
loop
push
fsubl
pop
jle
out
test
cmp
sti
push
std
mov
jp
loop
and
mov
mov
imul
xchg
or
scas
fs
pop
insb
mov
push
std
sub
imul
test
call
xchg
inc
inc
xchg
mov
loop
adc
xchg
ds
in
sub
add
pushl
xor
loop
add
fildl
jg
sub
pushf
inc
pop
jmp
pop
faddl
dec
int3
repz
mov
mov
scas
lea
xorb
push
ror
adc
adcb
daa
mov
imul
inc
popf
inc
cmp
cld
sbb
xor
dec
repz
and
lds
dec
inc
sub
aad
xchg
dec
mov
pushf
pop
adc
add
push
sti
emms
xor
jg
fisubrs
fstpt
xor
xlat
push
xor
xor
xor
cli
fmuls
jmp
leave
call
adc
cmpsb
cli
cmp
repnz
mov
push
mov
add
subl
aaa
push
shrb
sub
in
push
pusha
mov
sahf
iret
nop
sbb
call
adc
mov
lcall
cld
decl
mov
push
inc
xchg
mov
push
mov
cmp
mov
addr16
cmp
outsl
cwtl
add
das
pusha
test
pusha
je
jne
cmc
cmp
andl
sub
cwtl
adc
xorps
pop
cmc
insb
imul
sub
and
or
sbb
jle
ljmp
mov
sub
mov
push
mov
push
and
sarb
mov
add
or
adc
out
jns
nop
rorl
call
incl
shlb
lcall
cs
lret
fcmovne
clc
mov
out
xorl
inc
and
lret
cmc
les
divl
sarl
out
mov
jno
cli
sub
mov
jle
sub
dec
shll
out
ja
loope
ficomps
mull
mov
xchg
sahf
pop
mov
push
ja
mov
movsb
data16
into
cmp
icebp
jbe
adc
mov
es
jg
daa
push
xchg
push
add
scas
lods
rcrl
cmpl
addl
mov
jg
das
clc
xchg
call
leave
push
adc
stc
int3
rol
inc
xor
decl
xchg
ficoms
fwait
in
pop
dec
loopne
out
sbb
sbb
int3
lcall
pushf
mov
lret
daa
sub
movsb
add
es
mov
push
sub
sub
jae
movsl
mov
in
jnp
fadd
sbb
fbld
fsubs
xor
mov
lea
stos
cwtl
or
ljmp
sub
push
add
push
add
xor
xor
xor
xlat
inc
add
jg
inc
jnp
cmpl
mov
cli
jge
adc
mov
ljmp
dec
aas
and
xchg
xor
sbbl
loop
sbb
call
pop
fldenv
push
out
mov
ja
outsl
or
ds
popl
dec
call
xor
xchg
divl
loope
nop
or
add
and
jbe
rolb
ljmp
repz
lods
push
shrb
mov
adc
add
insl
add
fistpl
sbb
jmp
hlt
pop
adc
mov
das
mov
inc
orl
cmp
incl
jecxz
sbb
cwtl
push
shll
lret
xor
dec
pushf
pushf
scas
mov
jg
mov
push
pop
int
shlb
or
and
xor
imul
inc
fisttpll
jp
in
jae
add
sbb
mov
or
or
lcall
cmp
push
rep
shll
push
adc
adc
inc
mov
xor
ljmp
pushl
cmpsb
lret
fdivrs
lock
decl
nop
ds
fwait
stc
dec
pop
xchg
fs
ljmp
lods
mov
dec
sbb
test
in
dec
push
mov
jno
bound
in
test
ret
incl
lods
sti
xor
cs
lods
mov
lahf
dec
inc
mov
ja
jg
sub
hlt
push
add
inc
adc
dec
or
sub
xchg
pop
jae
xchg
pushl
dec
testl
pop
mov
mov
mov
xchg
into
and
decl
cmpsl
insl
push
mov
xor
push
hlt
adc
add
cmpsb
test
dec
cmp
fisttps
test
call
in
idivl
fsts
inc
adc
add
ret
sti
mov
das
gs
ret
lods
iret
xchg
lcall
call
in
shll
xor
les
xor
ljmp
outsb
cmp
ljmp
xlat
mov
movaps
sub
loop
icebp
mov
lods
cmp
jmp
xchg
fimuls
ljmp
mov
clc
mov
fidivrl
bound
dec
push
in
das
xchg
mov
mov
lock
push
sbb
mov
xor
aam
ljmp
dec
int3
int3
test
pop
sub
rol
arpl
cmp
das
xor
add
cmp
pop
pop
fstpl
clc
in
jo
aad
stos
loopne
add
decl
pop
mov
leave
inc
cltd
xchg
loope
aam
or
data16
mov
call
sub
or
into
cmp
ficomps
pop
mov
std
movsb
in
shrl
jmp
xorl
int
in
loop
icebp
cmp
pop
pop
cmc
gs
jnp
sbbl
pushl
xlat
popa
cli
cltd
insb
repnz
lret
outsb
and
roll
push
push
ljmp
clc
decl
movsb
pop
cltd
sbb
push
in
lods
jp
lret
clc
fcomip
sub
mov
lds
xchg
sbb
pop
pop
sub
cs
cld
lcall
or
add
jnp
xchg
data16
lods
pop
xchg
cmp
xchg
decl
test
jbe
adc
sbb
mov
in
loope
ja
decl
xchg
xchg
pop
test
mov
sbb
push
fildll
jne
jl
fcmovnbe
ljmp
hlt
sub
sbb
fnsave
ljmp
jmp
pop
cli
mov
sub
mov
scas
adc
mov
push
incl
test
add
ret
aaa
loope
pop
pop
fisttpll
lcall
sub
mov
jge
loopne
push
popa
in
cmpsl
sub
loope
jnp
push
gs
incl
ss
hlt
push
stos
adc
pop
call
insl
mov
fldt
or
popa
pop
out
pop
ret
adc
sub
dec
fdiv
dec
or
mov
outsl
sar
fsubrp
in
jmp
xchg
mov
lea
cwtl
sub
push
call
lea
sbb
test
mov
movsl
cmp
outsb
sub
fcmove
ss
mov
xor
xchg
or
jb
std
aam
push
xor
sahf
mov
decl
cmpl
test
inc
fs
ret
xchg
inc
lret
push
pop
mov
jg
push
add
mov
jns
test
jb
mov
sbb
or
sub
fstl
jecxz
stc
jmp
jns
adc
adc
sbb
ja
sub
cmp
lock
mov
sbb
outsb
mov
sub
call
jmp
neg
jb
inc
imul
scas
int
inc
adc
testb
stos
xchg
or
inc
arpl
into
jo
pushf
inc
ljmp
jecxz
loopne
add
es
mov
out
sahf
xchg
iret
xor
pushl
call
pop
fdivrs
inc
mov
push
lret
aaa
icebp
mov
outsl
pop
mov
jle
fwait
enter
incl
enter
leave
jge
push
and
or
sti
lret
pop
call
jne
jge
push
cmp
sahf
add
cmp
jo
ljmp
mov
arpl
cmp
in
test
and
or
mov
and
test
fwait
subl
push
jp
xor
jmp
xchg
ljmp
loopne
jns
neg
pop
xor
jg
das
les
dec
in
adc
sub
pop
out
or
xchg
jl
lea
push
lcall
jns
mov
mov
loopne
pusha
enter
mov
movsb
pop
and
adc
pop
sub
push
sub
pop
addr16
push
shll
sub
cld
lcall
cmp
dec
mov
incl
ffreep
jo
out
or
jbe
sbb
pop
adc
xor
jge
out
sub
jmp
mov
mov
popa
ljmp
cmp
aaa
pop
or
dec
jle
sbbl
mov
jp
fucomi
incl
jno
sub
out
out
fidivs
lea
or
cld
push
pop
and
cli
call
pop
xor
xchg
lret
subb
decb
ret
pop
xlat
ss
or
dec
add
out
jae
lahf
xor
push
cmp
inc
xchg
insb
fsubrp
cld
push
sti
ficomps
push
cli
scas
das
movsb
imul
test
mov
sbb
and
pop
stc
fbld
jp
pushf
in
sbb
mov
cmp
add
mov
lds
lcall
iret
or
pop
inc
and
imul
in
inc
sbb
push
jl
xor
lahf
roll
pusha
nop
fnstenv
roll
jle
xchg
fmuls
les
jl
dec
push
add
xchg
mov
mov
jmp
mov
pusha
sbb
dec
stos
mov
cmp
es
incl
mov
outsl
test
orl
pop
inc
push
push
ljmp
rcrb
mov
mov
pusha
jne
gs
fs
push
lods
dec
test
mov
pushf
xchg
jge
nop
push
xchg
and
mov
faddp
or
ss
jg
stos
or
sbb
fistps
cmpsl
inc
popa
mov
mov
frstor
pop
incl
jno
add
pop
stc
fwait
adc
xchg
mov
lcall
push
leave
jp
nop
mov
cmp
push
mov
inc
add
or
or
and
fadds
leave
test
adc
mov
xorb
and
mov
data16
sbb
sahf
sbbb
dec
aaa
xchg
pop
call
xor
inc
out
scas
clc
jg
sbb
mov
sti
inc
pop
xor
or
add
inc
xchg
pop
lcall
mov
or
mov
xorl
test
aam
cwtl
lods
aas
add
out
incb
mov
or
add
shl
cli
aaa
pop
mov
call
popa
outsb
js
sbb
push
xor
stos
out
adc
dec
pop
mov
jmp
out
test
xchg
inc
pop
aam
xor
js
stos
nop
sahf
mov
scas
pop
or
fisubrs
mov
fidivrs
pop
imul
std
adc
cmpb
xor
out
adc
jmp
and
hlt
pop
sub
xchg
cmc
fsubrs
cwtl
adc
pop
inc
adc
mov
jp
cmp
jmp
xor
mov
fisubrl
xor
cltd
pop
mov
or
sar
ja
into
sub
xchg
mov
jno
mov
daa
add
jl
icebp
in
fwait
cld
dec
dec
add
mov
jae
jno
sub
incl
cmp
popa
push
xlat
lret
jbe
push
mov
pop
orb
sarb
jb
adc
stc
stos
cmp
aam
push
in
es
pop
data16
insl
pop
mov
dec
push
mov
xchg
arpl
mov
pushl
jmp
add
add
push
ror
mov
fdivrp
adc
loope
imul
loopne
mov
jmp
adc
dec
sub
imul
inc
loope
aad
pop
stos
adc
sub
aam
adc
daa
ja
jg
mov
mov
mov
adc
cmpsb
dec
mov
rcr
sub
fwait
jg
mov
sbb
xchg
mov
in
or
sbb
inc
xchg
sub
enter
int3
inc
add
out
lcall
inc
scas
mov
clc
jg
mov
lret
pushf
into
aas
pop
pop
scas
movsb
hlt
inc
gs
pop
jo
mov
sahf
sub
pop
adc
mov
jne
mov
jecxz
mov
ret
pushl
stos
cmp
pushf
sbb
sbb
insb
lcall
mov
jl
dec
mov
mov
dec
adc
jo
pushf
inc
cmp
sbb
mov
lret
scas
jb
stos
jle
lcall
adc
mov
sbb
cmp
or
adc
xchg
mov
jmp
cli
fidivl
sbb
push
insl
dec
and
decl
pop
fldl
xchg
cli
movsl
inc
push
fldt
mov
push
and
cmp
pushl
leave
jb
mov
loope
sub
mov
pop
and
test
mov
xor
push
pop
inc
mov
ljmp
clc
sbb
adc
arpl
sbb
test
imul
out
aas
ds
into
pop
sbb
push
je
pop
lret
test
pop
clc
sti
jp
mov
sub
decl
outsl
push
pslld
inc
sti
adc
and
sarl
iret
enter
xorb
sahf
hlt
add
lods
lcall
push
dec
outsb
sub
lods
lock
xor
imul
jg
call
std
xor
push
push
pop
push
test
mov
das
dec
int3
pushl
sub
ds
pop
push
dec
mov
inc
inc
fsts
xlat
cmpl
jb
mov
xchg
adc
add
mov
sbb
cld
push
xor
cmpsb
push
nop
call
xor
cltd
xorl
cmp
data16
lcall
stos
push
pop
push
push
fidivrs
sub
sub
dec
in
es
mov
push
inc
test
mov
push
xor
test
addl
push
lds
xor
cli
decl
jns
rcrb
popf
adc
adc
aad
mov
enter
call
jg
add
xchg
jno
hlt
inc
lcall
jl
ljmp
lea
call
dec
je
add
or
cmp
div
ret
imul
jg
pushl
cmpsb
movsb
bound
fiadds
insl
mov
jle
jb
mov
add
inc
and
sbb
jo
cmp
xlat
inc
outsl
mov
push
jge
mov
add
lock
jmp
lock
mov
aaa
rol
aam
into
cwtl
adcb
incl
loope
pusha
dec
add
jbe
pop
lods
je
call
aad
mov
addr16
cli
icebp
lret
push
add
xchg
add
rclb
rcrl
pusha
enter
xchg
inc
pop
xor
add
ljmp
scas
mov
aam
out
mov
mov
push
or
hlt
xchg
push
jno
andb
jmp
dec
imul
push
sub
shll
inc
push
push
ficoml
fistl
xchg
jp
mov
lcall
inc
fdivs
xchg
jge
or
outsl
and
jmp
xor
cld
or
leave
add
sbb
sub
lcall
push
outsl
add
popf
outsl
xor
popa
cltd
sar
leave
sbb
das
jle
jg
xchg
push
fstl
mov
andb
push
gs
cmp
mov
or
pushf
aas
dec
out
jo
sbb
sub
sbb
test
imull
clc
inc
add
repnz
lcall
or
or
xchg
ja
cli
jmp
inc
cmp
cmpsl
mov
push
cmp
stos
xlat
xchg
sub
mov
jle
imul
and
stc
cltd
jg
stc
js
pop
repz
movsl
cmp
cmp
adc
add
pushf
or
sbb
push
jp
sar
decl
ret
ljmp
jmp
adc
in
inc
xchg
push
adcb
pushf
jmp
inc
pop
data16
inc
pop
jmp
mov
dec
and
das
push
out
outsb
out
xor
mov
clc
test
xchg
cli
lret
fwait
jle
inc
xchg
mov
sbb
xor
dec
in
jo
imul
dec
and
sub
in
ficoml
jge
push
in
incl
imul
test
and
ret
addr16
mov
mov
push
xor
xchg
add
fcomps
dec
jp
mov
xchg
and
add
xor
add
jbe
aaa
outsl
repnz
pop
push
ss
lret
and
push
es
dec
push
push
mov
mov
fsubrs
jle
xor
imul
dec
xchg
pop
xchg
enter
sub
jne
mov
outsl
cli
decl
push
lods
mov
sub
dec
sarl
push
clc
psllw
xchg
push
fidivl
lcall
movsb
insl
pop
sahf
sbbb
fldl
cli
pop
xor
cmp
mov
outsl
adc
or
add
or
loop
scas
outsl
pop
jmp
mov
fmul
xor
out
mov
fbstp
cmpsb
dec
fbstp
pop
lcall
int3
scas
clc
pushl
repz
inc
jne
pop
adc
pop
nop
inc
lods
insl
jle
add
lcall
mov
insb
fdivs
push
aaa
pusha
lret
xchg
mov
xor
pop
lods
inc
push
cmovs
inc
mull
sub
sti
loop
dec
idivl
pop
test
adcb
dec
xor
andl
xchg
decl
adc
cltd
cld
sbbb
out
iret
je
clc
xor
sbb
ljmp
cld
jbe
xchg
mov
lret
iret
arpl
jae
mov
sbb
jae
jg
int
ss
inc
aam
xor
icebp
in
and
shlb
mov
jg
inc
add
fsubl
jno
andl
and
dec
mov
lea
mov
test
push
dec
adc
shlb
popf
mov
push
test
bnd
adc
test
imul
aam
jmp
adc
push
pusha
sbb
inc
sub
in
jl
loopne
mov
loop
dec
mov
jle
nop
adcb
sbb
lcall
neg
xchg
data16
push
imul
jnp
movsl
pushf
adc
cld
out
cli
incl
xor
movaps
mov
jns
jo
push
and
pop
call
call
jb
shl
ljmp
sbb
sbb
das
subl
cmpsb
decl
into
insl
fcompl
sub
rorb
popf
push
and
lcall
add
imul
mov
js
lock
jecxz
push
pop
mov
xchg
add
inc
xor
sub
cmp
mov
mov
call
nop
mov
dec
fiadds
adc
rorl
fwait
sub
aad
adc
jbe
push
push
push
lcall
and
add
or
xchg
jecxz
cmp
inc
sahf
test
cmp
xchg
inc
jge
andl
std
lcall
and
icebp
scas
ja
adc
cmpsb
sahf
push
subl
fdivrs
xor
xchg
mov
es
imul
dec
cmpsl
or
pushf
dec
aaa
fsubrp
push
push
xchg
mov
decl
push
pop
inc
jne
adc
push
sbb
mov
int
int
mov
ljmp
cmp
xchg
pop
adc
clc
add
leave
les
ret
or
mov
jl
stos
cmpsb
xor
sti
cmp
fidivrl
popa
imul
ds
lcall
inc
pusha
mov
mov
out
shll
out
xchg
mov
or
jle
and
mov
ret
bound
fbld
xor
adc
mov
fsubr
inc
push
mov
jmp
aaa
loope
out
adcl
dec
orb
sbb
jns
sahf
ss
sub
sar
ror
test
scas
sti
orb
mov
xor
outsl
clc
jecxz
pop
mov
jp
clc
add
xchg
sti
cltd
mov
jl
repz
jmp
jp
mov
mov
sbb
subl
jp
stos
in
repz
or
out
and
xor
subb
push
sbb
add
mov
gs
std
decl
sub
movsl
mov
test
mov
sbb
ljmp
imul
roll
imul
push
clc
lods
jle
mov
rep
je
push
faddl
ds
jo
xchg
jno
in
jle
xor
fsubrs
in
mov
mov
fists
dec
mov
cld
mov
cmp
enter
popa
lods
sbb
or
fbld
outsb
test
sub
push
sub
sub
jae
mov
inc
cltd
add
out
sub
decl
scas
jge
push
cmpsb
jmp
shll
pop
xlat
loop
inc
out
push
in
adc
pop
mov
outsb
rcrl
cld
mov
nop
das
push
xor
xor
ljmp
in
outsl
int3
icebp
imul
xchg
test
mov
jnp
push
jo
pop
shrb
mov
decl
sub
in
add
push
out
xchg
int3
sbb
clc
jae
jb
call
out
jecxz
push
adc
mov
lcall
push
stos
test
ljmp
sbb
out
movsb
clc
sub
dec
rolb
inc
repnz
mov
xchg
push
dec
xchg
xchg
pop
mov
adc
es
sbb
std
cmp
imul
dec
pop
mov
push
mov
xor
mov
jb
sbb
adc
push
jmp
je
mov
and
aad
cli
stos
mov
sub
call
push
fdivrs
pop
mov
loope
data16
xchg
xchg
dec
cmp
test
sub
sti
pop
mov
xchg
jmp
pushl
stos
test
and
jae,pt
icebp
push
test
dec
mov
outsb
lods
mov
jb
or
sbb
loope
lea
pop
ljmp
ret
mov
repnz
decl
jge
lcall
lret
lods
cmp
xchg
xor
sti
lock
pushl
dec
loopne
test
loopne
in
mov
lret
lea
xchg
add
nop
cmp
mov
xchg
adc
mov
dec
xchg
divl
mov
pop
cmp
or
lcall
xchg
std
adc
loope
mov
outsb
jb
and
push
inc
jo
xlat
lds
push
inc
jae
jecxz
cmp
decl
inc
cltd
inc
pop
inc
mov
sub
shrb
andl
ret
mov
jmp
dec
adcl
fstpt
push
cli
sarb
jnp
push
mov
xor
xchg
sub
in
scas
jmp
in
pushl
push
cmp
pop
or
lcall
out
ret
leave
cmpsb
test
repz
in
sar
add
js
negl
movsl
adc
out
insl
stc
pushf
loope
loopne
push
fnstsw
stos
dec
dec
jp
push
push
fcomip
cli
test
call
mov
and
stc
cltd
push
jb
mov
inc
xchg
mov
ss
fisubl
aas
inc
mov
test
mov
mov
lcall
jae
cmp
pusha
pop
aam
icebp
frstor
ljmpw
pop
decl
or
pop
je
sub
push
shll
in
sub
cmpsl
sar
jg
call
mov
fiadds
mov
jae
imul
lcall
incl
mov
add
xor
jno
inc
mov
ljmp
mov
or
xlat
std
sbb
bound
out
call
ss
jns
outsl
bnd
pop
xchg
xlat
mov
aam
loope
cs
xlat
cmp
sbb
je
add
push
cmp
jmp
cld
hlt
dec
in
adc
pop
lods
or
daa
insb
shl
imul
cmp
or
jmp
jmp
pop
sbb
in
repz
fs
cmp
xor
movsb
cmp
dec
decl
imul
or
das
mov
iret
push
add
adcl
stc
mov
adc
cmc
loope
out
dec
fcomip
incl
add
lea
inc
lcall
xchg
stc
fnstsw
call
mov
mov
cmp
dec
ja
mov
jb
pop
jnp
jg
jmp
xlat
or
call
xchg
sbb
es
dec
imulb
ja
insb
xchg
adc
push
xchg
cmpsl
and
jmp
outsb
outsl
or
test
lods
fs
icebp
cs
pop
xchg
mov
xchg
push
test
lods
lcall
scas
xor
data16
or
divl
jne
loop
ss
cli
call
sbb
mov
scas
lods
or
dec
sub
adc
xchg
rcr
call
jle
lods
adc
push
and
xchg
sbb
dec
rclb
out
clc
inc
insb
inc
push
cmp
inc
gs
push
cmp
xor
and
push
mov
dec
xor
jbe
iret
xor
sub
pusha
out
lret
fldenv
out
sub
sbb
jg
mov
and
sbb
data16
ljmp
popa
pop
jb
ja
lods
ss
sbb
xchg
sbb
mov
in
inc
stos
pushf
pop
cmpsl
jb
push
test
lcall
ljmp
test
sbb
pop
sub
repnz
xchg
or
pop
hlt
push
cmp
dec
sub
pop
add
mov
add
pushl
sbb
movsb
out
mov
popa
sub
popf
aas
movsl
xlat
out
aam
adc
incl
mov
cmp
or
ds
mov
ret
in
sbb
dec
incl
xor
sbb
es
mov
cmp
mov
xchg
jl
fiaddl
jmp
sahf
inc
lods
inc
orb
insb
mov
jecxz
jb
dec
mov
mov
adc
cwtl
mov
add
fdiv
lcall
adc
test
je
xor
adc
fwait
jbe
das
fucomi
add
inc
adc
jl
in
push
xor
cmp
rorl
lcall
push
fsubl
dec
scas
fstpt
sarb
xchg
dec
mov
rcl
in
adc
mov
mov
lds
lret
jle
xchg
and
adc
mov
sbb
cmp
pop
out
cli
push
mov
jge
or
cld
inc
cs
fstps
or
adc
pushf
cwtl
bound
ja
add
jo
mov
dec
lahf
cmp
lea
mov
cmp
jmp
add
pop
jge
lret
aaa
inc
lret
fisttpl
mov
pop
repz
ja
test
adc
cmp
cld
cld
mov
jmp
mov
mov
mov
adcl
and
jns
ja
mov
push
cli
shrl
or
ja
cli
jp
cmpsl
es
js
ljmp
cmp
sub
and
mov
dec
aad
fldt
jo
lods
dec
pop
push
jne
inc
aas
sbb
inc
mov
insl
andl
xchg
in
or
inc
not
sub
xchg
jmp
inc
adc
push
adc
mov
sub
and
xchg
cmp
call
leave
jecxz
fcomps
pop
pop
push
mov
insl
xchg
imul
jge
ds
cs
incl
pop
insl
cmp
mov
adc
add
out
repz
out
pop
aaa
jb
lret
lret
or
gs
cs
adc
adc
jno
ljmp
hlt
into
mov
add
jb
mov
or
scas
cli
cli
mov
xchg
adc
pop
jae
cwtl
ret
stc
push
sahf
xor
add
mov
mov
lret
inc
std
jl
mov
adc
inc
push
push
cmp
stc
cs
cmp
mov
in
xchg
cs
xchg
test
cld
data16
sub
mov
out
pop
ror
lods
sbb
jae
daa
cmp
into
add
mull
push
subb
add
pop
arpl
testb
cld
jmp
jge
inc
insl
aaa
push
shll
out
dec
rcrl
or
xchg
mov
icebp
scas
call
and
jnp
lret
pcmpgtb
xorb
sahf
sbb
xchg
outsb
mov
aaa
inc
ds
test
dec
call
push
fstpl
faddp
inc
mov
or
out
aam
decl
cwtl
dec
jae
or
mov
mov
ja
aaa
js
or
clc
pop
out
sub
adc
adc
jnp
sub
fldenv
add
pushl
ljmp
cltd
shlb
cmpsl
cli
cmp
fcompl
push
jl
mov
or
lcall
scas
push
scas
scas
testl
in
or
xor
inc
mov
lock
pushl
fadds
sbb
repnz
les
pop
sub
mov
xchg
pop
rorb
sbb
xchg
fadds
jge
xor
push
andb
pop
and
fdiv
xchg
dec
bound
lcall
notl
jbe
cmpsl
adc
cwtl
inc
sbbl
lea
mov
push
ds
aaa
or
jmp
add
pop
push
pop
int3
cmovo
call
int
sbb
rcr
addb
les
cwtl
lret
ffree
pop
mov
or
stc
inc
iret
cmp
call
loopne
call
jp
aad
in
jno
cltd
sbb
cmp
fcoms
add
call
xchg
mov
inc
jmp
jle
adc
pop
shrb
dec
adc
imul
int3
fdivr
jnp
lret
add
mov
ljmp
push
fcmovbe
mov
push
mov
sbb
sbb
cltd
inc
add
jmp
push
push
mov
fsts
hlt
in
loop
out
mov
enter
loop
popa
hlt
mov
pop
push
cld
dec
xchg
xchg
lcall
sbb
ja
ljmp
sub
pop
scas
movups
xchg
add
xchg
pop
jg
xor
xchg
int3
xor
dec
loopne
jmp
push
mov
sbb
sbb
mov
in
ss
push
push
xchg
movl
test
std
shr
int
jmp
xor
lret
test
test
nop
xor
sub
pop
mov
push
push
xor
mov
jmp
dec
push
jmp
icebp
insb
sub
rcrb
int3
sbb
and
sbb
xlat
ljmp
xor
cmp
lret
push
lock
mov
nop
es
daa
lea
pop
push
mov
decl
aad
dec
sti
mov
cmp
xor
faddl
call
addr16
enter
push
cmp
das
push
sbb
inc
mulb
lock
mov
sbb
das
push
arpl
jae
inc
daa
sub
xor
push
mov
cwtl
push
xor
inc
sub
push
enter
pop
pop
xchg
xchg
out
je
pop
xor
repz
jge
ljmp
sar
lret
imul
lods
pop
add
adc
dec
xor
add
add
adc
shlb
popf
movsl
mov
iret
cwtl
pop
mov
in
add
scas
rorb
xor
clc
push
ret
xor
icebp
ja
test
mov
lcall
sbb
out
pop
popa
test
mov
mov
jo
addr16
decl
inc
mov
sub
dec
cmp
and
andps
imul
sbb
sbb
mov
xchg
adc
push
movsb
loopne
adc
sbb
mov
clc
fsts
mov
xor
scas
jb
xor
dec
xchg
jmp
push
jb
sub
shr
inc
add
dec
fwait
out
mov
mov
call
std
incl
cmp
fistl
ret
fisubl
sub
cmp
aas
out
ret
in
mov
cli
pushl
pop
addr16
mov
js
arpl
cmpl
out
dec
dec
add
loop
jmp
test
sti
iret
mov
dec
inc
loope
pop
mov
xor
mov
pop
xchg
jnp
push
cmp
mov
aam
push
add
and
ljmp
es
repnz
adc
in
push
jb
adc
lea
mov
cwtl
push
sbb
cmc
and
clc
mov
push
mov
mov
out
bnd
inc
hlt
mov
rcr
xor
lcall
jmp
mov
jp
adc
lret
cmp
push
insb
insb
mov
das
sbb
pop
hlt
lcall
jle
jae
mov
pop
sbb
jb
out
and
das
imul
push
stos
sahf
push
cmpsb
mov
into
mov
mov
sub
xor
les
push
shr
pushl
imul
mov
sbb
fidivl
fidivs
icebp
xchg
jne
pop
scas
and
jns
mov
loope
mov
add
or
ljmp
adcb
lret
shlb
xor
push
mov
push
push
ja
mov
vprotb
or
aad
movsb
lcall
mov
rclb
lods
mov
xor
stos
ljmp
cmp
stos
mov
jecxz
mov
and
call
gs
jo
hlt
pop
dec
in
data16
loop
lock
cld
ljmp
cwtl
jb
xor
xlat
add
lods
mov
pop
adc
or
xor
data16
sbb
nop
jb
mov
adc
push
int3
xchg
faddl
fst
into
cli
adc
call
add
add
mov
push
je
push
sub
mov
inc
and
rorb
call
mov
out
push
cmp
popa
jb
in
adc
adc
je
jmp
mov
sub
lds
xor
pop
repz
movsb
pusha
int
rclb
sub
cmp
insb
addr16
jg
std
cs
adc
lcall
repnz
ljmp
lcall
xchg
in
push
sahf
cltd
cmp
cmp
push
sub
pop
mov
pop
jg
fcos
jmp
leave
icebp
add
mov
popf
adcl
ljmp
xor
push
mulb
cld
push
pop
inc
and
and
scas
sbb
loop
mov
ret
dec
fs
inc
fisttps
cli
decl
add
ficoml
cmpsb
lret
mov
idiv
ljmp
outsb
mov
xor
adc
mov
flds
xor
mov
push
loop
sbb
jl
xlat
jmp
pushf
hlt
das
cmp
lret
push
xor
or
cmc
sbb
cld
decl
mov
hlt
xor
adc
scas
mov
out
pushl
aas
fsubl
inc
fcoms
mov
push
movsb
dec
mov
scas
outsl
or
das
dec
movsl
lcall
aas
out
hlt
je
or
xchg
xchg
mov
cltd
xchg
or
aaa
sbb
cmc
jbe
sub
mov
sbb
sub
ljmp
pop
fnsave
movsl
bound
ss
add
xchg
adc
es
ret
call
sub
add
cmp
xchg
mov
in
clc
and
je
pop
adc
gs
call
push
jae
dec
shrl
clc
or
es
inc
pop
cmp
negb
adc
pop
jge
fs
es
call
sub
pop
push
sbb
adc
jl
and
neg
fstl
jo
push
xlat
mov
jb
lcall
push
mov
sub
frstor
out
pushl
ss
xor
pop
jae
out
clc
jle
mov
and
addl
mov
loopne
inc
jge
in
call
nop
stos
inc
roll
cmpsb
cmpsl
test
xor
jmp
push
inc
inc
pusha
icebp
push
popf
jno
addb
call
mov
jge
dec
mov
lods
test
xchg
test
decl
repnz
cmc
jp
aaa
pusha
push
dec
leave
mov
add
xchg
insb
xlat
adc
jmp
add
pop
ljmp
les
lods
scas
adc
dec
lods
mov
sbb
std
out
iret
scas
cmpsb
mov
das
aas
mov
jp
jnp
pcmpgtb
mov
iret
sti
mov
in
stos
pop
loopne
loope
mov
mov
call
in
or
xor
jo
dec
sub
negb
add
addr16
xchg
inc
mov
dec
ja
bound
bound
cmpsl
jl
jmp
mov
adc
shll
scas
shrb
icebp
xor
xor
ljmp
xchg
cwtl
nop
cmp
sbbl
push
jmp
and
decl
je
cltd
mov
pop
pusha
ds
les
lods
cmc
in
out
repz
out
mov
fwait
shll
xchg
decl
or
loopne
dec
js
cmp
fcompl
loopne
out
push
test
push
jne
and
push
push
aaa
popf
clc
js
adcb
test
add
pushl
or
pop
mov
mov
data16
ljmp
push
xchg
adc
ss
inc
std
jb
clts
add
incl
clc
cmp
lock
cltd
xchg
inc
pop
pop
sub
jmp
pusha
scas
xlat
jecxz
imul
jg
mov
test
rcrb
leave
mov
inc
inc
jno
sti
inc
or
int3
mov
sbbl
std
sub
and
and
pop
add
js
cwtl
je
mov
mov
jbe
out
add
pushl
imull
inc
lods
pop
imul
in
lahf
aad
ret
xchg
mov
ret
decl
and
sbb
fstp
sub
scas
mov
inc
aam
cmp
mov
dec
jge
adc
ret
jl
popf
stos
dec
cmp
mov
adc
mov
les
fldenv
call
or
cwtl
ds
adc
test
cs
add
iret
lret
or
xchg
adc
into
call
out
enter
mov
out
mov
scas
mov
out
and
xchg
dec
ret
xchg
out
mov
sub
stc
mov
dec
or
adc
sar
in
lds
inc
pop
jl
ret
lods
xchg
sarb
push
jmp
scas
les
aam
test
dec
mov
idivl
inc
mov
leave
dec
or
cmc
daa
jns
fwait
mov
pop
data16
jg
cld
xor
popf
js
jo
les
aaa
stos
lahf
shll
mov
or
pop
sub
push
push
sub
movl
push
jbe
fneni(8087
inc
add
add
cmp
mov
pop
aad
aas
jge
mov
or
mov
mov
dec
mov
sbb
mov
dec
mov
fdivr
stos
adc
dec
aam
dec
add
or
add
push
mov
aam
lret
lcall
push
xchg
mov
sti
jne
insl
or
jmp
or
push
inc
cmp
xchg
mov
jmp
or
lahf
adc
xor
std
ljmp
pop
fsts
jmp
mov
out
add
in
add
pop
dec
pop
or
imul
jno
mov
shlb
cmpsb
shlb
push
mov
inc
push
xor
fcomip
mov
in
icebp
dec
movsb
imul
or
call
jg
das
sub
sub
adc
xchg
mov
adc
mov
les
imul
push
iret
gs
movsl
in
inc
jb
insl
inc
shlb
or
inc
cmpsb
test
ret
int
fsub
push
lcall
arpl
xlat
movsl
or
xchg
pop
in
dec
std
gs
push
push
cmpsb
xchg
push
cltd
dec
cmp
pop
subl
jmp
decl
int3
dec
stos
lret
in
mov
pmaxsw
imul
push
pusha
idivb
sbbb
inc
lret
mull
pop
int
and
dec
mov
jae
pop
roll
mov
sub
in
push
jmp
xor
test
js
pushf
xchg
xor
mov
or
repnz
inc
dec
outsb
lcall
sub
jmp
sub
addr16
test
in
adc
lcall
dec
nop
idivb
addb
ret
fcompp
or
inc
or
es
imul
leave
mov
inc
jne
mov
dec
data16
in
call
das
rolb
mov
rorl
pop
mov
mov
test
out
cli
lcall
mov
cmp
in
push
sahf
or
mov
addb
lcall
inc
movsb
out
int3
cmc
out
lods
jl
sub
push
jmp
testb
sti
jg
jbe
mov
push
jo
mov
mov
pop
sub
ficomps
sub
std
hlt
push
pusha
mov
xchg
xchg
jp
dec
pop
pop
mov
mov
call
aas
jle
mov
sub
addr16
xchg
lcall
adc
insl
loop
mov
cmp
cmp
dec
das
incl
push
push
xchg
push
adc
push
into
and
push
pop
call
xchg
mov
pusha
faddl
mov
shll
daa
dec
xor
cmp
push
pusha
add
daa
jmp
cltd
xor
in
sub
in
ds
popf
sub
pushl
loopne
test
jnp
mov
mov
jns
mov
pushl
push
aaa
dec
jg
sti
or
xchg
rolb
shrl
and
mov
lcall
push
cmp
add
shrb
and
cmpsl
mov
cld
and
imul
ret
iret
xor
adc
movsl
fsubp
jp
push
xchg
xlat
outsb
push
inc
sbb
call
cmpsl
ss
pop
adc
add
dec
mov
jg
int
imul
inc
je
jle
fnstcw
jnp
movsl
cld
ljmp
or
aaa
xlat
ret
inc
pop
adc
repz
fdivs
mov
sar
adc
xor
stc
xor
stos
dec
lds
cs
ljmp
sahf
xor
adc
loopne
mov
iret
pop
mov
sti
iret
stc
lods
loopne
mov
dec
in
cmp
cmpsb
add
xchg
or
repz
cmc
out
stos
arpl
xor
stos
fdivrl
mov
mov
filds
std
call
pop
adc
scas
sbb
pop
pop
ds
icebp
aad
lahf
call
shl
dec
inc
test
decb
jecxz
lcall
dec
mov
movsb
addr16
cmp
add
pop
lea
cs
mov
sub
scas
js
ret
dec
adc
out
mov
dec
push
shll
ljmp
jge
jne
insb
add
pop
in
inc
addr16
jl
jne
and
in
sahf
iret
lcall
dec
das
repz
or
mov
data16
insl
es
pop
xor
clc
popa
jns
push
xor
arpl
cmc
mov
sub
xor
in
cmp
adc
incl
push
test
sub
and
or
enter
jmp
sti
aad
scas
aas
mov
mov
call
int
mov
xor
arpl
or
movsb
sbb
out
sub
push
jbe
cs
dec
xchg
xchg
out
push
xchg
stos
mov
inc
aad
mov
shrl
int3
jle
sub
push
decl
inc
dec
cmp
dec
in
mov
fadds
adc
fsubp
call
std
call
adc
shlb
push
xchg
in
enter
insb
imul
jmp
mov
movsl
jo
cltd
push
mov
popa
xchg
mov
idivl
sub
clc
jmp
pop
jno
sbb
call
xlat
sbb
cmp
stc
js
xchg
xor
cmp
mov
or
inc
fs
es
xchg
idiv
jg
jmp
imul
inc
push
push
out
xchg
mov
lcall
jmp
sub
push
mov
push
in
pop
mov
aad
dec
cmp
xchg
js
call
pop
pop
mov
shl
test
das
test
jecxz
xchg
mov
test
in
inc
xor
jmp
push
jecxz
std
inc
inc
imul
aam
incl
pop
lods
iret
movsl
inc
and
and
stos
pop
enter
ljmp
int
pop
inc
inc
test
mov
je
aad
xchg
ja
dec
bswap
jg
pop
mov
insl
imul
sub
pop
sub
aad
jp
adc
ret
push
jg
push
pop
xchg
adc
mov
mov
mov
call
jmp
jae
add
jne
jno
adc
push
add
dec
cmpsb
jge
inc
scas
mov
pop
mov
mov
mov
cmp
mov
decl
bound
and
sub
jecxz
sbb
add
sub
mov
add
jo
cmpsb
into
sarl
icebp
ds
sub
add
lcall
ljmp
loop
add
ret
xchg
ja
sub
pop
sub
add
stos
adc
cmc
xor
jbe
mov
sub
or
jg
arpl
lea
fdivl
add
xchg
cmp
xchg
pop
lcall
ljmp
dec
out
pop
lds
dec
add
movsb
jl
test
std
ret
lea
sub
jb
icebp
inc
cltd
ljmp
cmpsl
xchg
pop
pop
adc
inc
mov
ja
cmp
ljmp
ret
cmpsl
in
mov
hlt
js
xchg
inc
xor
cmp
push
mov
jns
ret
cld
outsl
call
dec
jbe
xor
mov
pop
je
rcrb
xchg
pop
cwtl
push
addr16
insb
pop
aad
icebp
jb
mov
push
decl
call
dec
adc
mov
jmp
mov
call
mov
or
push
test
xorl
sbb
xor
sub
push
push
cmpsb
jp
cmp
mov
cmpsl
xor
xchg
lods
jne
mov
and
std
mov
add
jmp
xor
aas
mov
sub
sub
mov
cmp
jnp
mov
cmp
push
add
shl
or
and
cmp
pop
add
adc
jmp
lret
dec
and
or
mov
std
push
xor
scas
push
adc
decl
stos
pop
jle
fidivrs
xor
les
cmc
cmp
dec
outsl
outsb
subb
sar
lcall
mov
jo
add
ja
test
xor
out
loope
fildl
scas
test
cmp
pop
stos
bound
xchg
push
call
cmp
sbb
jno
int
repz
push
and
js
mov
mov
fcos
in
xchg
scas
and
orb
enter
outsb
or
push
mov
testb
xor
mov
and
jg
or
dec
sbb
cld
aaa
fldl
sub
roll
xchg
out
aam
pushl
push
push
repnz
fisubrs
push
sbbb
in
pop
mov
push
decl
cld
inc
aam
and
sbb
lcall
pushf
dec
cmp
and
jmp
adc
adc
jns
decb
out
jp
mov
mov
cmp
clc
jg
pop
pop
hlt
push
dec
mov
adc
popl
popf
out
push
cld
decl
mov
adc
insl
sbb
popa
xlat
pop
pop
ret
mov
inc
lea
xchg
ljmp
mov
sbb
pushl
mov
ret
sbb
xchg
sub
and
gs
hlt
dec
adc
loopne
adc
pushl
nop
sti
xchg
push
iret
lock
sti
mov
pop
mov
orl
pusha
stc
dec
mov
out
pop
jecxz
negb
lcall
sbb
dec
push
push
mov
and
lahf
xor
push
pop
jne
mov
decl
cmc
xchg
jp
inc
mov
xchg
bound
loop
sbb
daa
dec
stos
fsubl
incl
pop
add
mov
inc
push
mov
loopne
pushl
push
sbb
sub
mov
fsubrs
xor
data16
cmp
dec
jmp
mov
into
mov
out
push
jp
out
movsb
push
rorb
insl
mov
push
std
call
fildl
test
add
adc
test
in
ret
decl
fisubl
jnp
stos
loopne
adc
repnz
stos
jo
xchg
jmp
xor
test
adc
jl
fwait
call
inc
out
jns
cli
mov
incl
jge
push
jo
out
sbb
xor
mov
push
sbb
call
push
aad
lods
out
dec
and
jge
adc
xor
dec
popl
stos
push
mov
pop
hlt
pushl
inc
dec
jmp
sbb
das
enter
inc
or
push
mov
popl
mov
xbegin
push
jge
call
movsb
add
push
scas
icebp
inc
call
lret
pop
xor
adc
or
adc
xor
mov
leave
xor
adc
push
cmp
arpl
pop
sub
lea
fdivr
ljmp
sub
sti
sub
pop
pop
lret
xchg
sbb
gs
loope
push
arpl
or
idiv
xchg
std
incl
andl
mov
and
loope
adc
out
xor
mov
loopne
call
mov
mov
mov
or
cmp
push
xchg
cld
and
imul
add
add
lahf
mov
sti
pusha
cmp
test
int
pusha
js
xor
fadds
pop
psraw
mov
ss
inc
clc
ret
popf
xor
sbb
jb
add
bound
sar
outsl
cli
or
sbb
insl
inc
jmp
mov
mov
in
cmp
pop
mov
lcall
jo
mov
fidivs
movsb
cmp
xchg
out
ss
and
lods
dec
inc
das
xor
ljmp
xor
add
mov
int
mov
push
call
jl
add
lods
scas
adc
dec
adc
adc
and
sar
jle
or
and
jo
xchg
outsl
rcll
in
cs
test
scas
pop
jg
lea
and
pop
jl
sahf
push
mov
addr16
pushl
xor
loopne
and
test
mov
xor
dec
outsb
hlt
and
arpl
clc
adc
pop
cld
xchg
or
scas
outsl
clc
outsb
call
mul
adc
inc
pusha
sbb
imul
xlat
shrb
dec
clc
outsl
push
lahf
dec
push
jmp
int
push
out
sub
push
pop
jmp
shrb
pop
fcomps
push
add
dec
jno
ja
push
push
sub
sti
in
test
popa
sbb
out
ss
jge
mov
push
leave
push
push
rcll
add
in
and
or
sub
and
adcb
push
dec
mov
jg
xchg
push
cmpsl
mov
adc
mov
fidivrl
and
mov
popa
ficomps
jecxz
aaa
loopne
out
xor
adc
dec
daa
in
add
lahf
rcrb
mov
sbb
xor
roll
xlat
xchg
arpl
pop
push
lcall
or
in
mov
sbb
imul
call
mov
sub
xchg
jb
lods
mov
push
ret
pop
and
sub
push
scas
jmp
scas
jmp
aad
sub
test
add
outsl
sbb
mov
push
leave
imul
lahf
and
add
into
js
loop
bswap
xchg
add
lcall
bnd
decl
pop
loope
fistpl
aad
roll
lret
dec
or
cmp
push
lcall
lret
sti
xchg
cwtl
jae
test
into
push
ljmp
bound
ret
mov
dec
fmul
mov
fwait
outsl
addb
inc
lahf
mov
rol
xlat
pop
lods
jl
sbb
pushf
ret
add
stos
sbb
neg
add
mov
xchg
ficoms
cmp
scas
test
sbb
aad
rorb
test
sub
decl
push
sahf
mov
sbb
pusha
mov
pop
lods
fistpl
call
in
decl
mov
lods
das
add
adc
xor
loopne
je
lahf
jae
add
mov
or
outsl
fwait
cmp
pop
insl
in
insl
out
pop
mov
cld
mov
aad
scas
pop
jmp
arpl
lcall
push
dec
insl
push
sbb
jg
fisubrs
adc
sub
add
xor
iret
push
lahf
test
test
call
mov
aas
cmp
jo
sbb
je
imul
push
stos
cmp
pop
loopne
xchg
mov
xorb
xchg
shll
aaa
xor
call
add
mov
sub
cmp
fsubrl
ror
push
xlat
jbe
scas
call
mov
mov
enter
mov
cwtl
fst
mov
incl
inc
ficompl
sbb
pop
or
dec
adc
pushf
xchg
and
cltd
push
adc
add
shrl
add
pop
imul
mov
add
mov
shll
xchg
sub
sti
sub
cwtl
rclb
mov
mov
pop
iret
in
dec
cmpsl
lock
ss
aas
mov
test
cmp
mov
rcrb
mov
pop
push
jge
sbb
ret
std
sub
out
andb
out
aad
in
push
push
jg
es
loope
bnd
int3
out
scas
dec
fcmovb
xor
or
dec
jmp
jle
inc
test
mov
mov
loop
xchg
mov
dec
sub
push
into
or
push
test
mulb
loop
xchg
in
dec
gs
jge
cmp
adcl
mov
mov
icebp
cmp
adc
movsb
dec
cltd
call
test
dec
iret
lcall
pop
stos
mov
adcl
mov
sub
mov
jmp
and
xor
push
add
cmp
pusha
into
mov
or
cmc
ljmp
ss
xor
add
pushl
mov
mov
dec
pop
rcl
push
xchg
mov
andb
sub
add
out
aad
xor
int
sbb
std
cmp
add
push
ljmp
sub
aad
sub
movsl
pop
push
out
clc
jmp
into
jo
fistpll
push
rorb
add
ljmp
adc
mov
stos
xor
pushf
cmc
mov
add
cmp
out
xor
sbb
fcoms
lods
inc
in
mov
lahf
mov
ja
dec
xchg
mov
inc
jmp
xor
loop
nop
iret
mov
insb
cmp
pop
cmpb
scas
or
jb
sahf
scas
pop
and
sub
jmp
pop
pop
push
sar
incl
jmp
insb
lret
or
outsl
xchg
mov
lcall
enter
movsl
mov
mov
mov
push
lods
jl
ror
mov
imul
jmp
cmp
call
arpl
mov
jl
outsl
add
test
xchg
pusha
or
jmp
inc
cmp
cmp
dec
test
jae
xor
mov
mov
add
loope
filds
xchg
add
mov
push
add
xchg
mov
dec
test
cli
xor
in
outsb
sub
test
or
mov
cmp
icebp
incl
dec
leave
rcrb
clc
out
push
xchg
mov
sbb
lcall
cmpsb
lods
pop
cld
lret
or
push
incb
int
xor
mov
jg
fs
cli
pop
adc
jle
jns
aas
xchg
rolb
cli
outsl
clc
mov
lods
xchg
mulb
jb
std
out
adc
aas
jl
add
dec
out
mov
mulb
push
mov
imul
xchg
cmp
dec
lcall
sbb
mov
jecxz
das
dec
subb
mov
push
push
clc
mov
cs
sub
jp
out
push
out
xchg
sbb
inc
ret
xchg
aad
js
push
lret
xchg
lods
cmp
popa
insl
pop
into
push
inc
and
fwait
xchg
cli
dec
outsb
push
or
jno
es
pop
fs
jp
mov
leave
push
push
cmpsl
shlb
add
ljmp
enter
mov
test
jge
jg
stc
iret
jp
int
jp
loopne
mov
insl
xor
xlat
push
int3
out
inc
lods
push
pusha
je
pushl
dec
sub
hlt
cmp
adc
lahf
jnp
inc
cmpsb
cli
fwait
popf
aad
decl
adc
xchg
std
push
je
pop
stos
movsb
aad
incl
cmp
scas
pushf
mov
imul
aaa
in
adc
mov
aas
pop
or
fisubs
sub
idiv
sbb
xor
fsubrl
push
jmp
out
clc
jo
ljmp
dec
and
push
jmp
fcmovb
push
in
lods
in
pop
fwait
pop
jmp
mov
jb
jmp
mov
adc
nop
insb
je
jno
jbe
repnz
jnp
sti
mov
ja
add
ljmp
xor
push
sbb
add
sete
pop
or
cwtl
sub
push
dec
or
push
xor
xchg
cmp
movsb
insl
pop
mov
ljmp
cmp
int3
xlat
lcall
decl
pop
inc
dec
push
stos
or
mov
xchg
adc
bound
loope
inc
lahf
inc
cld
fldl2e
xchg
rolb
loope
and
inc
cmp
in
dec
mov
push
add
pop
and
mov
cmpsb
push
pop
inc
mov
stos
or
mov
cmp
add
cmpsb
jo
jmp
ljmp
cld
shlb
pushf
enter
cmpsb
push
addl
cmpsl
es
loope
cltd
fwait
xchg
incl
adc
movsl
incl
popa
mov
sub
adc
jg
dec
out
and
loope
and
nop
pop
jo
rcl
repz
push
decl
lret
ret
add
xchg
jno
mov
stos
mov
imul
xchg
outsb
clc
decl
dec
std
insl
xlat
sub
repz
push
push
mov
aas
push
shr
mov
sub
add
pushl
or
das
iret
ret
xchg
jle
jp
stc
fsubr
enter
sbb
dec
call
in
push
mov
push
loope
adc
out
mov
jb
mov
das
lret
add
ljmp
lret
loopne
mov
pop
mov
mov
mov
in
and
dec
xor
add
cli
add
movsb
push
jecxz
cmpsb
loope
ror
dec
push
sub
int3
cmp
out
add
mov
jmp
sub
or
popa
lcall
push
push
cmpsl
xor
daa
cmp
xor
jg
ret
push
sbb
xor
push
xchg
dec
scas
scas
cmp
ljmp
push
add
mov
push
sbb
call
cld
pushl
in
lods
cld
dec
or
mov
sbb
icebp
cmp
mov
shll
adc
adc
cmp
xchg
js
mov
push
jbe
jg
jns
pop
jecxz
faddl
cmpsl
and
js
fsubrs
cmp
inc
call
jg
xchg
ljmp
jle
mov
or
cmpsl
dec
test
mov
inc
and
or
dec
sub
add
shrb
add
or
xlat
test
loop
and
fcomip
jmp
movsb
enter
pop
and
pusha
pop
cltd
push
inc
lcall
out
mov
shll
xchg
stc
adc
out
jne
aam
call
sub
mov
xchg
xchg
and
decl
adc
incl
add
loopne
or
xchg
arpl
std
cmp
mov
sub
jno
pushl
je
sub
adc
xchg
jae
cld
sbb
fistl
dec
xchg
mov
push
ljmp
xor
xchg
mov
int3
xor
adc
cmp
std
lcall
push
mov
mov
aas
inc
push
std
jg
in
aad
jmp
pushl
mov
cmp
scas
sbb
dec
mov
faddl
pop
mov
insb
movsb
or
and
pop
fstpt
in
outsl
cld
mov
push
xor
sub
adc
sahf
das
pusha
or
or
outsl
jecxz
pop
push
cli
bound
lret
and
inc
add
and
in
cmp
sbb
ret
js
pop
cltd
cmp
or
xchg
jmp
inc
das
mov
xor
mov
pop
mov
lret
imul
inc
lcall
fcomp
xchg
xchg
outsb
xchg
outsb
jmp
add
jns
mov
adc
jg
dec
mov
inc
out
lret
je
dec
jmp
test
xor
cmc
and
mov
pop
clc
arpl
cld
add
rcl
repnz
cld
jmp
dec
sarb
jbe
repz
dec
xor
xor
in
or
push
decl
xchg
adc
inc
fimuls
fisttps
icebp
movsl
jne
sbb
mov
test
clc
scas
ss
mov
pop
cmp
push
add
cmp
std
pop
movsl
cwtl
add
adc
cmp
pushl
div
push
cmp
mov
dec
rcr
cmp
cs
mov
loop
push
call
dec
sub
add
mov
pop
add
inc
jmp
xor
rol
mov
mov
sub
lret
and
push
jmp
ja
jg
jae
fisubs
scas
jb
xor
pushl
das
jne
data16
incl
and
xchg
or
movsl
sahf
test
fdecstp
arpl
xchg
imul
push
test
sarb
cmp
outsl
xchg
stos
mov
dec
ficoms
mov
jo
cltd
xchg
incl
cld
js
pop
call
cs
jnp
sbb
add
incl
out
into
jle
fdivr
outsb
ljmp
stos
fs
jecxz
cld
outsb
inc
xchg
inc
incl
out
cmp
call
mov
add
decl
insl
xchg
stos
mov
lcall
or
stos
icebp
ja
pop
jge
jbe
ljmp
jnp
scas
inc
sahf
or
sub
lret
jae
fsubl
cwtl
std
loopne
xor
call
decl
iret
cmc
push
mov
push
loopne
adc
aad
mov
mov
fwait
push
sub
lret
call
jp
mov
aam
xor
adcb
loopne
and
sub
call
cld
jge
leave
adc
sbb
and
sub
inc
stos
xor
loop
outsb
cld
inc
xchg
or
icebp
aaa
push
mov
and
cmp
adc
test
lcall
nop
fs
xchg
xor
mov
xchg
inc
inc
notb
lcall
dec
std
mov
call
out
aas
or
adc
inc
mov
mov
les
clc
rorl
mov
jmp
int3
fistpll
jo
mov
mov
jnp
aam
mov
sub
decl
cwtl
arpl
es
call
ljmp
pop
test
lds
sub
cmpsb
decl
xchg
dec
out
push
imul
shlb
xor
loop
mov
jns
jbe
lods
leave
xor
call
dec
or
iret
paddd
ror
scas
mov
add
outsl
sub
data16
fs
test
fwait
sahf
push
lds
incl
jge
pop
sbb
nop
add
cmp
jno
lcall
mov
push
push
sahf
xlat
jo
pop
aad
inc
mov
lret
dec
pop
push
fstpt
int3
adc
outsl
clc
call
lahf
pop
sub
dec
xor
xor
decl
rcrb
pop
mov
push
paddb
gs
leave
faddp
jbe
mov
xor
sar
jg
leave
or
mov
mov
test
xchg
push
not
and
inc
outsl
orl
sbb
jge
dec
mov
ret
in
add
ljmp
and
sti
xor
mov
push
imull
decl
dec
cwtl
call
mov
iret
mov
mov
push
outsb
incl
jnp
push
ret
and
cli
pop
subb
in
pop
jo
dec
adc
cmc
fsub
add
fidivs
add
test
jno
js
scas
stc
cli
test
mov
mov
xchg
insl
lock
hlt
mov
addr16
mov
movntps
movsl
sub
jnp
cmpsl
mov
lcall
xchg
gs
xchg
mov
sub
jne
das
shlb
scas
pop
fsubp
fcos
call
repz
sbb
xchg
daa
xor
out
jg
fwait
inc
cmpsb
and
jbe
jbe
out
push
pushl
sarl
lcall
fisttps
push
mov
adcl
push
add
sub
ljmp
dec
adc
push
xchg
mov
mov
xchg
sbb
daa
mov
ficompl
adc
inc
cs
push
das
lret
popf
rcrb
inc
adc
ljmp
dec
mov
or
sti
xchg
inc
mov
jo
push
dec
jp
test
sub
cmp
add
mov
punpckhbw
cmp
out
aam
or
and
push
fnstcw
push
push
adc
pop
fld
adc
sahf
and
dec
in
add
lcall
xor
jnp
and
mov
add
cltd
into
inc
mov
inc
push
cwtl
xor
fcomip
dec
mov
inc
push
popa
in
cwtl
insl
or
pop
or
leave
mov
lods
adc
popl
mov
mov
ficoms
lods
fsubs
pop
pop
icebp
pushl
fistpl
mov
cmp
jbe
xchg
add
mov
push
incl
les
mov
lret
push
cs
inc
jnp
gs
sbb
push
imul
dec
fistps
mov
rol
push
cmpsb
iret
add
push
fcoms
incl
mov
scas
enter
push
or
add
xchg
cmp
fwait
decb
mov
stos
mov
test
xlat
inc
push
inc
push
xchg
push
ljmp
cli
cli
cmp
xchg
flds
arpl
cmp
lods
mov
lcall
lea
cmpsb
sub
and
push
sub
loopne
cltd
in
add
jg
cld
iret
push
icebp
hlt
sarb
pop
push
mov
mov
scas
loop
ljmp
pop
ret
jbe
add
xor
pop
mov
pop
jg
in
jmp
sti
gs
jae
dec
aaa
repnz
mov
sbb
imul
lret
andl
std
and
pop
push
adc
jbe
or
sbb
fsubrs
inc
or
mov
mov
jmp
sbb
lahf
xchg
das
pop
stc
mov
mov
aam
xchg
inc
cmp
call
inc
shrb
in
enter
sub
call
push
cmp
das
xor
aam
dec
push
lds
es
insl
cmp
jb
sti
mov
pushl
jne
repz
cmpsb
mov
stc
les
adc
std
sbb
stos
pop
lcall
pop
and
lahf
in
adc
lahf
cmpsb
fcoml
mov
std
xchg
stos
add
mov
sbb
pop
push
cmp
push
xor
mov
iret
xchg
cmpsl
pushf
jp
popa
add
hlt
jg
jnp
dec
icebp
xlat
out
or
decl
pop
xchg
adc
neg
jns
dec
faddl
xchg
imul
ds
out
popa
daa
movsl
lcall
mov
and
hlt
scas
mov
mov
jg
cltd
pop
jmp
outsb
mov
mov
xchg
mov
xchg
test
movsb
cmp
add
adc
inc
mov
je
jmp
mov
jge
jno
bnd
iret
imulb
iret
out
mov
out
add
fadds
cli
mov
or
in
jae
cmp
out
aas
xor
mov
loopne
gs
incl
xchg
shlb
mov
bound
mov
jnp
xchg
lahf
std
ficoml
clc
lcall
push
ljmp
fidivs
cltd
rolb
cltd
call
mov
dec
add
andl
pop
sahf
cmp
jno
leave
pop
test
cmpb
out
adc
enter
leave
inc
into
jl
repnz
mov
repz
mov
out
dec
sub
movl
stos
or
add
rcll
popl
cmp
mov
xor
jecxz
scas
out
dec
bound
jmp
int3
adc
or
ficoml
leave
lret
pop
mov
mov
mov
iret
mov
mov
out
adc
pop
das
mov
insb
mov
nop
xor
or
ljmp
pop
pop
pop
sbb
and
sarl
and
ss
fst
pop
push
pop
cmpsb
call
out
repz
xor
jmp
xchg
xchg
add
push
mov
sbb
push
cmp
cld
mov
notb
enter
dec
stc
mov
pop
push
dec
adcl
cli
cld
aaa
std
ljmp
popf
lock
cmp
dec
test
dec
inc
xor
lods
pushl
push
cmovl
inc
outsl
xor
mov
mov
push
add
inc
fxch
lahf
sub
sti
inc
inc
out
scas
pop
xchg
mov
stos
cld
push
jecxz
cld
mov
std
ljmp
mov
inc
je
pushf
out
pop
add
cmp
jge
jmp
ficomps
mov
jl
popf
fistpll
xor
lcall
imul
loopne
in
sbb
or
call
add
out
sub
sub
clc
cltd
sbb
movsb
inc
data16
cmp
mov
shrb
mov
aas
adc
shll
sub
push
jg
or
pop
outsb
push
mov
lock
sti
adc
push
int3
clc
decl
mov
je
mov
hlt
or
rcrl
icebp
lahf
pop
and
add
push
ljmp
aaa
les
in
mov
pop
cltd
xchg
pop
lods
xchg
cmp
mov
fst
fnstenv
and
rcr
push
pop
fbstp
decl
xor
lcall
jg
shl
pop
dec
repnz
inc
jno
jno
and
add
scas
scas
rcrl
push
test
popa
iret
sbb
sbb
call
sub
shll
dec
mov
xor
jnp
stos
sub
push
mov
loopne
or
ds
aam
les
ret
mov
outsb
outsl
aaa
in
popa
aam
je
inc
fdivs
or
push
enter
call
repz
add
testl
push
xchg
stc
shll
cmpsb
mov
mov
jecxz
sub
and
daa
ss
and
lock
mov
mov
hlt
cltd
in
fadds
rcrl
add
scas
adc
and
jbe
scas
sub
pop
add
fnsave
inc
or
sub
test
mov
int
xlat
stc
mov
jg
jmp
xlat
lods
sbb
mov
lds
mov
mov
stc
call
movsb
sub
or
nop
push
sbb
daa
jne
sub
ss
add
lcall
xor
mov
movsb
jge
mov
cmp
dec
mov
sub
in
daa
pushf
and
sbb
loopne
xor
sbb
jnp
mov
mov
xor
loopne
dec
aam
stc
leave
or
fsubs
jns
lcall
cld
mov
cld
mov
add
out
and
shr
shll
lock
lcall
ss
mov
mov
call
insl
lods
das
rclb
add
cmc
imul
vmovd
push
clc
ss
and
xor
call
add
insb
rorl
dec
aas
fwait
pop
cmpsb
xor
decl
pop
enter
aas
jecxz
out
nop
ud0
push
mov
mov
xor
cmp
pop
icebp
mov
jno
aas
clc
mov
stos
or
test
daa
mov
sbb
out
cmc
push
out
decb
inc
pop
mov
mov
mov
mov
mov
cmp
mov
push
dec
insb
add
adc
jmp
fdivs
xchg
or
and
sbb
jae
jbe
stos
pop
fdivr
lea
pop
dec
dec
and
in
in
xor
aad
dec
cmp
push
dec
pop
push
jae
jns
mov
lahf
fcoms
js
out
daa
sub
jo
mov
into
jbe
add
inc
inc
mov
and
call
wbinvd
mov
rorl
cmp
sub
push
xchg
jmp
jl
push
jmp
nop
xchg
int
popa
mov
inc
jecxz
lahf
pop
cmp
ljmp
mov
das
pushl
mov
dec
pop
mov
jno
stc
test
aaa
sbb
in
inc
xchg
sub
test
ljmp
xchg
dec
pop
ss
sbb
js
and
enter
loope
adc
out
aad
out
loop
imul
test
push
cmpsb
dec
and
cmpsb
or
decl
push
mov
mov
imul
aaa
jmp
jecxz
pop
insl
dec
and
jecxz
lret
pushl
cltd
dec
pop
jg
andb
sub
cli
and
cmp
jno
push
jg
ljmp
jmp
pop
jbe
and
repnz
enter
lahf
mov
sub
push
jecxz
or
lahf
inc
sar
cli
roll
mov
popa
dec
popa
xor
nop
and
adc
mov
mov
loopne
and
dec
movsl
sbb
scas
pushl
xchg
leave
xchg
lret
push
pop
jecxz
mov
cwtl
inc
es
lahf
lahf
iret
sub
into
aam
in
ljmp
push
pop
fnstsw
lods
cli
loope
sub
cmp
jmp
xor
sbb
xchg
pop
lcall
push
arpl
stos
imul
mov
pop
pusha
in
ret
incl
ljmp
imul
lret
pop
and
mov
adc
call
sbb
mov
das
or
aad
mov
push
dec
xor
push
ret
mov
imul
sarb
mov
push
pop
or
pop
stos
mov
inc
add
pushl
mov
imul
or
mov
jl
movsl
mov
cwtl
mov
scas
jb
fcomip
lcall
jno
shl
sbb
decb
stc
stos
lahf
sub
fnsave
pop
scas
ljmp
pushf
shll
addr16
loop
lcall
mov
mov
sub
mov
adc
imul
lret
xchg
inc
xchg
ficoms
pop
jg
add
dec
mov
popf
outsb
jmp
cmp
out
add
push
fisubs
outsb
leave
mov
mov
jge
decl
rorl
decb
ja,pt
call
and
mov
jns
sub
popa
loop
sbb
adc
call
sub
xchg
pop
add
cli
dec
lods
adc
fstl
popa
jge
outsb
scas
incl
out
sbb
das
jnp
pushf
sub
xchg
mov
mov
add
mov
inc
fiaddl
lret
les
or
sar
clc
stos
stos
mulb
push
icebp
sahf
call
pop
jg
pushl
mov
pop
push
pop
xor
inc
loop
push
adc
repnz
add
jmp
mov
out
aad
mov
icebp
popa
inc
ljmp
cli
jp
in
xor
outsl
inc
and
jmp
xchg
pop
mov
inc
cmp
pop
pusha
and
mov
pushf
pop
std
sub
pop
mov
ljmp
js
rcrb
and
or
push
aas
mov
loopne
jnp
lcall
hlt
dec
xchg
jae
xor
sub
lahf
sbb
mov
sub
imul
into
pop
test
sub
fs
pop
add
es
jmp
mov
std
nopl
pushl
incl
inc
fwait
std
mov
push
or
rorl
or
std
gs
jne
ss
jg
mov
cmp
xchg
and
or
jno,pt
pusha
mov
repnz
adc
dec
outsb
out
outsl
clc
decl
hlt
js
in
orl
push
pushf
dec
fldcw
xlat
fcompl
jmp
xchg
scas
jns
lret
sti
push
sbb
jecxz
cmp
pop
pop
push
add
xor
pushl
test
cs
js
out
inc
sub
dec
xchg
mov
push
or
stos
mov
imulb
pushl
arpl
movsl
xchg
vmovdqu
xchg
mov
mov
sbb
jmp
es
adc
ret
stos
ds
add
js
jle
call
addr16
in
rcrl
inc
xor
lock
jo
movsl
push
cmp
aas
push
mulb
lods
xor
mov
cmpsl
xchg
rorb
sub
and
mov
les
pop
lcall
sarb
push
in
dec
or
out
mov
mov
rcrl
std
jmp
ja
xchg
sbb
bnd
mov
aam
divb
cmc
lcall
mov
sbbl
repnz
mov
lcall
or
cli
and
enter
lods
adc
sbb
std
pop
test
mov
add
ds
lcall
in
sbb
push
and
push
cmpsl
pop
and
outsb
adc
pushw
lea
test
adc
mov
iret
int3
aaa
or
mov
push
std
mov
jg
or
xchg
cmpsl
call
into
ret
jmp
mov
roll
scas
inc
adc
push
jl
pushf
das
or
mov
mov
decl
mov
push
push
sub
sub
popf
scas
and
out
out
ret
jmp
mov
cld
in
ja
dec
je
sub
pusha
adc
test
jl
sbb
mov
jp
inc
fsubl
incb
lcall
push
mov
push
xor
xlat
adc
sti
jle
dec
jl
lcall
mov
or
lds
loope
or
push
pop
sub
nop
push
push
xor
dec
sub
mov
pop
xchg
push
insl
xor
jb
and
push
push
mov
shl
push
fs
jecxz
mov
cs
and
popf
push
xor
xorl
add
dec
mov
push
and
push
into
adc
repnz
out
aam
das
test
cli
push
jmp
jbe
fsubs
lds
aas
push
int3
fucomp
scas
cmp
rep
mov
or
addb
stc
divb
clc
das
mov
clc
mov
addr16
addr16
aad
pop
or
inc
dec
in
push
cmp
fldz
je
jg
fdivr
aaa
cmp
xor
je
fcompl
inc
inc
dec
mov
enter
dec
cmpsb
jg
push
add
xlat
aam
imul
inc
pushl
fistps
xlat
jecxz
das
cld
adc
scas
dec
cwtl
mov
in
lret
decl
pop
and
xchg
jo
dec
sub
cli
pop
push
lds
sub
leave
imul
dec
push
rorl
inc
cmpsb
pop
xor
push
jne
or
jle
pop
jmp
adc
cld
cli
jmp
cmp
mov
jg
xor
mov
inc
adc
inc
sbb
xchg
pop
inc
dec
cld
es
nop
and
cmp
mov
jbe
lret
xlat
sahf
dec
or
lcall
lcall
out
sti
aas
int
inc
dec
scas
sbb
pusha
add
xchg
mov
out
int
insb
sbb
or
pop
ljmp
inc
jg
shrb
dec
ret
xor
aas
lods
adc
push
inc
push
jnp
call
cld
ljmp
xor
js
jmp
mov
push
mov
mov
popl
jmp
in
incb
cmp
add
xor
and
lcall
jnp
jle
cmp
dec
ficoml
xchg
jle
fcoms
enter
cmp
std
decl
ljmp
mov
jge
bound
xorl
cld
push
cmp
cmp
push
movsl
xchg
ja
test
ljmp
add
lahf
jge
mov
ja
clc
int
ret
mov
inc
xor
lcall
nop
cmp
xchg
pop
cmc
aad
imul
sbb
mov
or
call
mov
add
dec
inc
dec
mov
mov
icebp
fnstsw
mov
pushl
cmp
test
jb
repz
jmp
pop
or
push
ds
ljmp
pop
movsb
enter
pusha
xlat
shrl
jmp
stos
sbb
test
ljmp
add
sbb
incb
sub
dec
ljmp
pop
jl
xchg
push
gs
ljmp
stc
or
mov
cmpsb
int
addr16
hlt
pop
sarb
ljmp
lods
cli
mov
or
push
xlat
mov
inc
and
outsb
mov
addr16
add
js
jns
cli
add
outsb
fisttpll
jg
jne
popf
push
xor
pop
call
xchg
popa
mov
fiaddl
push
fistpll
pop
cmp
mov
ss
jp
push
mov
mov
push
inc
jge
cli
xchg
pop
pop
rcrl
mov
inc
or
fcomi
mov
dec
jmp
scas
in
cmp
movsl
or
fildl
add
lods
sbb
pop
insl
push
aas
shrb
inc
cltd
pushf
jge
icebp
inc
mov
cmp
push
xor
movzbl
roll
sbb
jmp
inc
test
hlt
fnstcw
mov
pop
nop
mov
mov
loope
test
repnz
adc
stos
sub
out
fcos
mov
push
mov
negl
pop
cmp
sub
cwtl
incl
adc
cmp
or
aam
adc
les
xor
mov
xchg
adc
inc
sbb
in
inc
in
xor
mov
sbbl
dec
jb
in
loop
loope
add
shll
mov
jae
push
mov
addr16
cli
sbb
call
pop
fdivl
out
inc
jns,pn
loop
int
inc
cmc
cmp
cmp
or
push
shr
adc
ljmp
out
nop
jo
testb
mov
xchg
mov
pop
cmp
test
add
push
xor
xor
inc
sti
jmp
add
cwtl
test
fbld
inc
xchg
mov
mov
js
lret
xor
pushl
outsb
and
psllw
fldl
iret
fnstcw
daa
adc
push
std
scas
sub
test
aam
call
das
cli
incl
sub
nop
cmp
iret
add
pushf
std
inc
jle
shrl
push
ljmp
repnz
lods
aad
push
gs
cmp
xor
adc
lds
push
icebp
fdivrl
fcomip
sub
mov
loopne
xlat
mov
ds
push
or
in
sti
je
rcrb
pop
movsl
jb
sbb
insb
pop
push
test
sbb
dec
push
cmp
in
inc
pop
jbe
arpl
test
push
adc
pop
les
and
stos
out
xchg
hlt
pop
mov
xchg
jb
ljmp
fadds
jne
jmp
jbe
test
inc
aas
popf
leave
and
cli
and
cmp
jg
cmpsl
cmpsb
push
loopne
mov
mov
lret
jl
in
fildll
jmp
aaa
push
std
test
aam
xor
cli
push
arpl
stos
mov
test
out
and
pop
mov
jecxz
dec
mov
fs
test
lret
popa
sbb
cmp
les
xlat
mov
fcomip
jp
jecxz
jnp
dec
jge
or
push
pop
ds
adc
push
mov
clc
repz
das
mov
mov
pushl
xor
flds
xchg
scas
pop
sub
sbb
inc
daa
push
hlt
call
mov
pop
cmp
fwait
test
popf
xlat
mov
and
repnz
cmp
push
std
xchg
cs
fcoms
or
inc
jmp
fmull
loop
pop
in
lret
popa
xchg
aas
pop
mov
outsl
cli
or
dec
movsb
adc
add
movntps
adc
add
and
aas
inc
aas
into
cmpsl
dec
aas
mov
iret
aad
rclb
rorb
decl
xor
popa
outsl
addb
scas
test
and
repz
and
xchg
mov
mov
inc
cmp
cmp
mov
ljmp
push
cmp
pop
xchg
iret
mov
xchg
mov
in
das
cmp
xor
call
js
dec
nop
adc
pop
popf
mov
add
push
loop
scas
out
mov
push
cltd
mov
pushl
xchg
decl
test
adc
rcl
jmp
call
jge
xchg
ja
or
lcall
inc
add
mov
lock
or
inc
pop
xchg
inc
inc
jnp
mov
adc
push
pop
push
ljmp
insb
lds
mov
mov
sbb
jb
or
pop
xchg
pop
push
pop
ret
pop
lds
incl
popa
hlt
clc
rcrb
mov
xlat
cmp
call
jb
xchg
xchg
icebp
mov
xchg
outsl
mov
ss
arpl
add
xor
jmp
push
push
mov
or
jl
lcall
or
fs
push
mov
pushl
into
or
xlat
lahf
ds
pop
flds
scas
loopne
and
mov
sar
out
cli
addb
adc
roll
out
jb
ficoml
in
mov
push
jg
and
xchg
add
int3
clc
int
push
push
push
idivb
jae
cwtl
cmp
leave
push
mov
cmpb
mov
scas
pop
cwtl
xor
jo
jl
decl
repz
sub
and
clc
mov
or
jl
sbb
sbb
jg
mov
adc
cmp
insb
xor
jns
dec
cld
test
pushl
in
push
loopne
dec
xchg
repz
in
mov
push
adc
lcall
stos
dec
ss
inc
loopne
popa
repz
testb
mov
out
mov
fcmovne
ss
ljmp
mov
je
fsubl
sbb
push
ljmp
xor
repnz
decl
iret
les
fwait
xchg
repnz
cmp
dec
js
dec
fisubs
jne
inc
in
jg
insb
and
notb
mov
lret
jb
xchg
sahf
leave
jnp
int3
adc
lock
push
pop
pop
mov
out
fdivrp
or
bound
ffreep
mov
js
sarb
and
ds
imul
dec
out
inc
sti
call
clc
fists
mov
int3
jno
push
xorb
cmp
insl
lods
lock
out
fcoms
inc
jecxz
les
mov
sbb
push
lods
sub
or
inc
sub
cmp
cmc
mov
insl
lcall
and
out
sbb
cmpsb
sub
inc
inc
in
pop
nop
fs
out
dec
daa
inc
arpl
mov
stos
fimuls
fadds
pop
cmpb
mov
loop
lods
cld
adc
ficomps
pop
loop
mov
adc
or
jmp
xchg
xor
loope
mov
mov
mov
inc
sbb
fldt
lcall
pop
inc
mov
jbe
insb
and
jbe
xchg
divl
pop
ss
ja
mov
jg
aad
in
idivl
loope
mov
or
xor
mov
ret
cmp
ljmp
cmp
pop
cmpsl
outsl
mov
adc
jo
mov
sbb
pop
and
sar
mov
mov
cld
or
push
push
cmc
bound
out
sahf
fs
cltd
mov
in
cwtl
add
aas
movsb
push
and
ljmp
imul
xchg
cs
mov
push
stos
cmp
and
imul
and
lahf
mov
adc
sbb
push
fsubs
out
fldenv
or
lcall
or
xchg
out
xorb
cli
dec
xorb
jmp
or
lahf
fwait
pop
mov
leave
jle
inc
add
scas
adc
adc
rorl
jo
push
std
scas
fucom
cmpsl
shlb
shl
add
sub
imul
mov
jp
pop
dec
pop
testb
add
fildll
or
jecxz
mov
cltd
fidivrs
movsb
and
incl
jbe
ljmp
xchg
mov
incb
call
int3
test
and
xchg
imul
jmp
pusha
int
xchg
shrl
loopne
ljmp
or
int3
in
jg
adc
mov
mov
dec
mov
push
and
or
cmc
call
mov
dec
add
mov
xchg
clc
jmp
inc
outsl
push
ljmp
outsb
add
nop
bound
imul
pusha
jns
addl
dec
xor
ljmp
mov
lcall
inc
aaa
push
pop
mov
xchg
orl
out
push
xchg
dec
jmp
fmuls
pop
xchg
xor
push
popa
mov
sub
pushl
pop
das
fbld
cmpsb
repz
repnz
pushf
ja
push
inc
xchg
xchg
sbb
mov
cmpsb
dec
imul
add
imul
pop
nop
add
add
fildll
sub
pop
add
pusha
push
fnsave
fldl
and
loopne
add
mov
adc
dec
lret
dec
out
in
mov
in
std
pushl
sbb
shr
je
mov
mov
mov
mov
mov
decb
sub
and
test
jg
or
ss
call
lods
or
xor
pushl
popa
dec
pusha
push
jae
je
mov
xchg
push
rcrb
jno
push
push
mov
pop
sbb
cmp
sub
fsubrs
jae
mov
cli
jmp
mov
mulb
je
or
mov
add
in
or
cmc
ljmp
push
data16
aam
out
dec
scas
inc
pop
cld
mov
cmp
jo
add
incl
mov
inc
aaa
test
jl
xchg
ret
pop
jp
adc
out
incl
push
jp
std
fcomip
cwtl
leave
inc
loopne
push
mov
jl
dec
or
dec
cli
scas
push
std
xchg
cmpsl
hlt
js
jno
and
add
xchg
data16
cld
out
or
daa
mul
dec
or
jno
push
mov
jle
inc
sub
ljmp
incl
add
pop
xchg
mov
in
aas
jl
in
push
jle
gs
aad
sub
jo
sbb
cli
ljmp
mov
or
inc
and
inc
into
outsl
call
cmp
xchg
fldenv
mov
lods
and
mov
jp
fnstsw
icebp
mov
repnz
aas
xchg
pop
ljmp
xor
mov
sbbb
lcall
sub
out
mov
ss
adc
lahf
out
cmp
mov
inc
lret
fimuls
nop
cmpsl
push
dec
stos
mov
mov
cltd
sbbb
lods
ret
or
xor
lds
stos
xor
rcrb
out
push
idiv
nop
enter
jns
pop
and
add
aas
add
call
xchg
decl
cmpsb
inc
mov
mov
es
dec
pop
jge,pt
mov
or
push
ljmp
mov
sub
xchg
in
dec
les
fsts
lahf
sbb
js
lcall
sbb
mov
adcl
push
gs
fwait
pop
sarl
xor
mov
cld
push
cwtl
ja
xchg
aaa
push
adc
sub
stos
push
mov
mov
xchg
or
gs
ljmp
rol
dec
mov
lret
add
cmp
fists
pop
dec
pop
adc
iret
xor
push
rcrl
into
xchg
or
test
in
inc
jmp
adc
and
or
dec
fbld
mov
roll
add
inc
adc
incl
xor
jo
pop
push
push
mov
sub
xor
jle
cmpsb
incb
add
xchg
jg
ljmp
daa
mov
test
int3
test
push
stc
fsubp
fs
out
cs
ret
mov
mov
mov
cmp
data16
pop
and
pop
sarb
stos
mov
jmp
mov
xchg
faddl
jecxz
subb
fcomip
aad
pop
or
test
or
dec
scas
xor
jmp
mov
mov
ljmp
add
out
iret
insb
xchg
jo
inc
inc
mov
add
pop
std
fdivl
std
fsts
dec
lock
mov
xlat
call
jmp
sar
call
cmp
in
cmp
push
xor
mov
lods
fcoml
inc
les
push
mov
inc
test
or
decl
mov
lods
sar
rolb
repnz
cmp
lock
mov
adc
mov
std
stos
mov
xchg
decl
cmpb
clc
fisubs
pushf
mov
xchg
imul
cmp
pop
jnp
push
cwtl
cmpsl
daa
and
call
jmp
mov
mov
sbbb
xor
loop
xor
test
outsb
adc
mov
imul
aaa
add
xor
packsswb
add
cmc
imul
jae
lcall
xor
mov
adc
cmc
cmp
xor
outsb
stc
xor
je
mov
aaa
adc
add
fistpl
inc
nop
daa
rcrl
cmc
xchg
jl
mov
mov
jne
jmp
lahf
pop
xor
and
shll
sub
std
loope
in
jmp
adc
jnp
ljmp
loop
or
inc
stc
add
push
pop
mov
out
clc
xchg
dec
dec
or
test
hlt
cmp
cs
sbb
pop
lds
aad
mov
inc
push
int
imul
ret
xchg
hlt
je
cmp
and
pushl
clc
pop
push
std
sbb
pop
mov
sub
decl
dec
jbe
aas
or
movsb
shl
jae
cmp
fbstp
loopne
adc
adc
mov
xor
les
ljmp
je
and
nop
data16
sti
popf
dec
pushf
sar
adc
sti
mov
incl
dec
popf
fiadds
into
sub
adc
call
dec
pop
sbb
ja
ror
rolb
ret
jl
push
ljmp
scas
shrb
xlat
mov
lds
cwtl
xchg
shrb
and
mov
ljmp
lahf
loope
inc
jne
jp
in
data16
xchg
cwtl
mov
scas
jle
sbb
lock
ljmp
rcrl
sarb
lock
fistl
imul
lods
jmp
push
mov
decl
push
sub
imul
mov
iret
jns
pushl
sbb
iret
shl
xor
cmp
mov
bound
jbe
xchg
inc
mov
cmp
sbb
sub
jmp
pop
inc
mov
lahf
ficoms
pop
in
mov
ret
dec
push
and
rcl
pushl
ds
insb
dec
xchg
mov
pushf
mov
in
jb
stos
inc
push
and
mov
sarl
mov
push
push
sti
in
cmc
ljmp
scas
cmp
jmp
into
mov
das
xorb
rorb
push
push
pusha
inc
jmp
je
adc
pop
sbb
jmp
mov
pop
dec
sbb
mov
mov
mov
sbb
pop
fisubrl
dec
inc
dec
neg
mov
or
adcb
mov
int3
imul
mov
ds
fcomip
call
push
mov
jle
daa
in
jne,pn
mov
jbe
aam
mov
icebp
incl
and
cmp
xor
rolb
pushf
adcb
insl
in
xchg
loop
ja
xor
jmp
push
and
push
push
out
adc
add
pop
fucomip
jnp
jle
push
jns
jmp
xchg
mov
or
xchg
adc
and
lret
inc
mov
popf
lret
xor
loope
call
mov
pusha
xor
lock
mov
or
mov
loope
imul
ljmp
mov
cmc
xor
rol
movsl
iret
es
push
data16
sbb
cwtl
rcr
cmc
inc
into
inc
cmp
call
mov
or
push
test
dec
pop
or
inc
add
push
andb
loopne
inc
xchg
pop
pop
push
gs
xor
mov
call
mov
sub
and
call
push
cmp
loope
mov
mov
inc
push
hlt
mov
pop
jbe
lea
icebp
mov
fsts
cmp
cld
mov
scas
inc
sbb
adc
fimull
cmp
jnp
popl
sub
jnp
int3
pop
push
ror
cmp
call
xor
jmp
ljmp
sub
dec
and
dec
stos
pop
adc
push
stos
data16
shrb
stos
js
jmp
xchg
aaa
mov
leave
stos
aaa
jnp
in
dec
inc
pop
lret
inc
jl
inc
cmp
or
pushl
incl
mov
sbb
dec
jmp
mov
pop
cld
shr
sbb
aaa
call
divb
mov
mov
insl
jmp
fidivl
decb
jecxz
push
sarb
aam
cmp
std
sbb
push
adc
call
out
shll
push
lods
test
inc
or
shr
das
int
icebp
daa
aas
jg
decl
inc
mov
sbbl
mov
mov
stc
cltd
jp
lcall
mov
and
fdivr
aaa
das
inc
jg
mov
jns
xchg
push
push
pop
jne
jmp
push
mul
xor
fdivrp
out
mov
fnstsw
xchg
jle
mov
and
and
daa
out
sub
insb
stos
mov
pop
fst
add
ret
incl
dec
clc
or
test
movsb
cmpsb
pop
loopne,pt
and
inc
aad
aam
incl
dec
pop
adcl
sbb
sbb
pop
rcrb
dec
daa
jnp
mov
push
inc
std
lods
push
sahf
repnz
adc
scas
dec
out
push
dec
lods
popf
je
jg
incl
lds
jg
dec
and
inc
push
inc
xlat
shll
cli
filds
jnp
aas
cmp
scas
mov
or
outsl
loope
lret
lcall
sbb
out
out
sub
into
mov
mov
inc
ljmp
js
call
loop
mov
dec
xlat
jns
sbb
push
adc
pushl
pushf
pop
jmp
sub
inc
mov
repz
sub
fbld
sbbb
addb
aas
std
jb
out
outsl
aaa
testb
decl
or
pushf
dec
ss
mov
imul
sarl
enter
mov
pop
leave
ja
jmp
dec
dec
fcompl
hlt
punpckhwd
push
mov
mov
jns
pushl
mov
xorb
cs
mov
mov
movsl
mov
dec
std
and
sub
sub
jno
outsl
cli
ljmp
mov
aas
mov
lods
addr16
data16
and
sarb
and
xchg
jae
fsubs
pop
int3
xlat
rcrb
inc
imul
inc
push
lods
xor
push
pop
mov
cli
fbld
jl
and
mov
xor
add
jmp
jecxz
inc
xor
cmpsb
dec
cmp
lods
lock
adc
sub
sub
lcall
fsubrl
cld
pop
jge
or
xchg
adc
scas
int3
into
jnp
iret
and
mov
inc
inc
fisubs
dec
and
adc
icebp
cmc
push
add
sbb
mov
xor
incl
ror
arpl
lahf
xchg
jl
faddl
sub
mov
sbb
inc
push
aad
jmp
js
popa
sub
movsb
push
cld
adc
stos
aaa
aad
dec
or
cmp
mov
jg
loop
aam
sbb
es
cmp
out
movd
insl
or
clc
or
add
fidivl
insb
into
inc
repnz
scas
insl
popa
mov
push
add
cmpsl
sub
ljmp
cli
lcall
adc
lods
mov
inc
fbstp
and
cmp
aam
loopne
push
outsb
adc
lcall
xor
jno
inc
andb
mov
insl
adc
sub
cmp
ljmp
xchg
or
imul
pop
cmp
rorb
xor
scas
cmpsb
cltd
adc
mov
cmp
icebp
enter
dec
mov
mov
pop
ret
mov
dec
lahf
shl
stc
and
sbb
push
mov
sbb
cmp
out
arpl
jb
jo
push
decl
test
leave
mov
xchg
bound
fstpl
xor
xchg
inc
push
insl
outsl
cmp
fbstp
dec
loop
rcrb
pop
bound
push
jnp
sub
insb
mov
jmp
xchg
call
test
pop
sbb
pusha
xlat
cmp
push
and
clc
inc
xchg
in
push
or
ljmp
adc
nop
out
idivb
dec
dec
int3
xchg
mov
mov
clc
and
add
add
call
aaa
add
or
lds
push
mov
kxnorw
cwtl
loope
lcall
push
outsl
mov
xor
lahf
mov
stos
ja
or
pushl
and
jbe
mov
cwtl
mov
mov
push
shl
mov
adc
call
add
out
xchg
jo
cmp
mov
cmp
sub
mov
clc
decl
jl
mov
negb
in
sarl
inc
imul
push
jns
ret
jae
xchg
mov
adc
sub
inc
pause
call
subb
call
scas
lds
mov
xorb
decl
pop
inc
push
test
push
pop
mov
fisttpl
imul
xchg
pop
push
clc
in
mov
mov
lcall
fcompl
push
and
pop
push
scas
pop
xor
movsl
cmc
cmp
inc
jecxz
test
push
lcall
pop
cld
add
sbb
dec
stc
dec
sub
mov
dec
aam
push
cmp
rorl
call
or
push
mov
loopne
unpcklps
inc
loopne
scas
stos
arpl
leave
sub
pop
dec
cli
mov
push
mov
xchg
jle
lcall
xchg
xlat
xor
cltd
mov
push
int
aaa
scas
dec
add
push
xchg
fildll
add
ja
sbb
mov
and
xlat
jnp
fists
and
mov
cld
jno
jb
adc
push
xchg
sbb
test
in
xchg
inc
cmp
dec
adc
clc
dec
rcrl
fs
cmpsb
sub
inc
jo
es
pop
mov
and
mov
lods
int3
jge
in
mov
mov
ljmp
js
jns
insl
mov
sub
fwait
mov
es
shr
sahf
rcl
adc
sub
outsb
adc
out
push
lock
cmpsb
and
scas
out
repnz
fiaddl
jmp
cmp
sub
arpl
xor
pop
imul
xchg
faddl
ret
jg
mov
sub
dec
sub
ja
mov
les
sbb
sar
mov
jg
jmp
fidivrl
cmp
xchg
aaa
jne
fdivrs
add
int
nop
flds
mov
add
sarb
push
arpl
das
aaa
sub
mov
dec
xchg
mov
into
stos
push
jnp
mov
jb
lea
insb
push
sbb
or
inc
fldl
or
iret
dec
xor
jp
decl
or
push
pop
and
lret
adcb
pop
push
outsl
sub
jno
jmp
mov
xor
dec
in
in
cmp
dec
inc
sbb
mov
lods
xchg
mov
stos
lcall
lock
iret
mov
xchg
lea
lcall
cmpsl
xor
sub
fdivrs
push
lret
cmc
cmc
push
cmp
out
in
dec
xlat
jno
decl
andl
mov
or
addr16
xor
decl
xchg
test
sbb
and
push
icebp
sbb
pop
mov
ljmp
roll
jp
movsb
sbb
movsb
xlat
cmpsl
rorl
incb
gs
xor
sub
fdivrs
jo
or
int3
cmp
jl
out
jl
mov
and
cmp
pop
xchg
jle
pop
jl
js,pt
cltd
test
xchg
inc
or
aas
icebp
mov
ja
jmp
xchg
sbb
mov
xor
mov
xchg
into
test
movsb
mov
jg
adc
mov
std
clc
inc
aad
mov
or
ja
pop
push
scas
iret
dec
pop
xor
out
pop
sub
in
inc
mov
sub
adc
xchg
icebp
or
pop
and
cwtl
and
xchg
mov
xor
cmc
mov
ss
jno
jge
dec
inc
xchg
and
test
push
push
adc
je
jmp
push
push
lcall
rcrb
int
fxch
ret
xchg
je
xchg
or
test
ljmp
mov
add
lcall
fprem1
les
push
test
cmpsb
or
mov
jmp
sarl
loope
fisttps
stos
mov
xlat
dec
shlb
push
setbe
lcall
movsb
xchg
jecxz,pn
xlat
push
inc
sub
push
fstl
xor
cmp
adcl
call
mov
sub
rclb
mov
lds
out
cmp
add
cmpsl
xchg
popa
xchg
xchg
cli
pop
out
loope
sbb
dec
loopne
incl
cmp
cs
stos
es
stc
ja
fdivrs
cwtl
outsb
xchg
jp
inc
ljmp
shl
sti
movsb
pop
xchg
call
add
cmp
ljmp
mov
mov
daa
mov
flds
and
rorb
gs
test
jmp
jns
in
adc
ret
rolb
lds
push
lcall
sub
fs
cmp
sbb
cltd
stos
aas
xchg
push
sbb
lcall
or
pop
scas
pushf
insl
jne
cmp
imul
mov
out
xor
incl
int
mov
es
push
jle
jg
or
inc
decb
call
aam
sbb
hlt
inc
pop
adc
mov
inc
ret
fs
ss
decl
xchg
sbb
xchg
fdiv
and
sbb
ffreep
inc
insl
pop
ret
insb
push
ljmp
pushf
xchg
shlb
stos
fwait
add
scas
xor
and
sub
cmpl
push
mov
add
shr
cmp
call
or
xchg
sbb
stos
mov
pop
in
in
adc
mov
dec
mov
jnp
sub
decl
andb
int
or
call
and
jae
adc
gs
dec
es
aam
mov
mov
jge
push
mov
repz
je
mov
jecxz
ret
push
lods
mov
mov
out
cmp
dec
mov
push
xchg
fiaddl
pop
push
push
pop
jge
in
adc
subl
dec
sub
testl
sti
xchg
stc
fdivrs
andl
popa
or
out
rolb
xchg
dec
outsl
sub
fldt
rolb
or
lahf
push
mov
push
lcall
jbe
add
cmp
jp
jb
cmpsl
jge
push
in
scas
push
sub
pushf
subl
bound
incl
cmp
dec
ret
push
mov
jmp
cmpsl
stos
lods
stos
subl
in
ss
fbstp
sbb
push
jne
das
xchg
mov
mov
add
lds
les
push
mov
loop
inc
mov
es
cli
jg
jge
push
stos
nop
xchg
popf
cmpsl
pusha
stos
cmpsb
lret
shlb
orl
decl
test
jmp
shl
cmp
add
sbb
ljmp
stos
dec
andb
call
jo
ret
mov
lock
imul
idiv
pop
decl
mov
les
sub
scas
mov
popa
jns
sahf
cmp
insb
adc
nop
sbb
xlat
jl
in
pusha
sarl
lcall
test
scas
and
add
or
enter
fbld
sbb
ss
andb
pop
pop
adc
lock
push
mov
adc
push
pusha
sub
test
jmp
xor
scas
iret
das
aam
dec
dec
pop
sbb
adc
ljmp
into
add
jl
fst
push
push
fwait
loop
in
jge
push
jg
push
xchg
cwtl
push
mov
lcall
or
data16
testl
js
ret
mov
inc
mov
add
call
idivb
jns
aaa
jbe
lret
aaa
rorl
rcrb
sub
dec
mov
call
test
sub
imul
ljmp
push
loopne
or
sar
jp
ffreep
pop
inc
cmp
ficompl
out
fdivr
dec
cmpsl
mov
adc
jle
popf
in
push
insb
jp
push
aaa
shll
lret
ja
push
adc
pop
sbbl
mov
add
test
test
call
or
imul
pusha
or
xchg
push
inc
fisubrl
jmp
cmp
lret
cmp
aam
pop
push
in
cmpl
sub
sub
push
call
iret
icebp
in
push
sub
pop
xlat
fsubl
jecxz
jle
in
lea
sub
js
nop
add
xor
jae
xchg
icebp
xor
sbb
cld
aaa
xchg
mov
cli
out
and
and
shrl
sub
incl
imul
int
dec
arpl
mov
pop
or
add
testb
imul
decl
cmp
imul
das
cld
sarl
xchg
scas
call
mov
dec
lret
adc
push
xor
test
lods
pop
sbb
leave
push
imul
push
jmp
mov
sbb
mov
inc
mov
xchg
ljmp
pop
cli
mov
jnp
xchg
push
test
fs
push
xor
out
adc
xor
hlt
xor
pop
push
std
pushl
mov
cmp
sti
loop
hlt
mov
insl
cli
iret
sti
test
sub
xlat
test
ljmp
jb
mov
xchg
jnp
loop
or
ds
and
pushl
jl
in
pop
cmp
dec
test
push
psubw
stos
xchg
jmp
lcall
int3
cltd
push
adc
push
cmp
into
sub
inc
pop
fdivrp
adc
mov
add
nop
push
fwait
lods
sub
adc
adc
pushf
fildl
repnz
out
call
mov
inc
dec
mov
ljmp
sbb
outsl
loopne
call
xlat
test
hlt
or
xlat
scas
pop
daa
shrl
jns
push
enter
mov
and
cmpl
aaa
push
jl
and
sbb
shlb
add
or
and
and
sarl
pop
inc
mov
mov
call
push
and
aam
clc
punpcklwd
ret
test
ja
mov
js
loop
sbb
jg
jmp
or
fsubp
push
lahf
icebp
push
std
and
arpl
leave
dec
lcall
ljmp
xchg
add
es
xchg
pop
mov
mov
cmpsl
movsb
jnp
scas
cmp
mov
xchg
outsl
sbb
imull
inc
adc
in
ljmp
fs
push
movsb
das
negb
xchg
cld
into
and
jp
inc
in
fwait
mov
ja
push
outsb
cwtl
testl
fmull
out
xorb
sub
sub
cli
decl
insl
addb
fmulp
ret
ficoml
cmp
popf
cmp
out
aam
cmp
add
sbb
in
sbb
jp
pop
enter
xor
and
hlt
arpl
mov
es
fsubs
push
shrl
cmp
cmp
es
jge
mov
sub
clc
das
inc
bnd
repz
push
loope
pop
xchg
sub
mov
hlt
cltd
call
push
and
in
and
push
xchg
fistpll
sbb
jmp
jmp
fcoml
jg
call
jg
inc
xbegin
inc
jg
sub
xchg
mov
cmp
les
je
pop
in
pop
mov
push
fxch
imul
repnz
jl
cmp
aaa
sub
fwait
pop
jle
pushl
mov
or
jbe
rorb
xchg
mov
cmp
cmp
pushl
shll
hlt
or
lea
sbb
xchg
jbe
or
or
ljmp
mov
loopne
jo
mov
mov
pop
mull
jl
mov
jl
aaa
inc
sub
pop
cmc
dec
xchg
sub
imul
sbb
lcall
jbe
fidivrl
adc
call
or
into
leave
xchg
sahf
fnsave
movsl
mov
inc
iret
cli
or
nop
mov
sbb
repnz
incl
or
fdivrs
adc
dec
shlb
pushf
mov
jmp
sbbl
ret
out
addr16
movsl
leave
push
pop
mov
aam
or
pushl
push
inc
mov
jl
inc
movsl
adc
insl
mov
cltd
xchg
sar
jmp
pusha
clc
mul
mov
arpl
fistpl
sub
or
jg
test
sub
push
jmp
lock
idivb
fs
adc
shlb
adc
sbb
std
dec
xchg
mov
xlat
loope
popf
inc
mov
dec
mov
jno
mov
jmp
adc
pop
std
gs
jl
xor
sbb
fcomip
jle
and
cwtl
jns
cmc
adc
in
not
mov
xchg
and
jnp
inc
inc
jl
mov
mov
mov
xchg
cmp
pushl
jae
filds
mov
and
mov
push
and
xchg
ds
jmp
sbb
test
xor
arpl
ljmp
daa
push
in
adc
jecxz
adc
pop
data16
cwtl
in
mov
mov
mov
jno
sbbb
int
inc
xor
fildll
push
or
sarl
fwait
outsl
frstor
pop
inc
jge
decb
jg
call
adc
arpl
stos
data16
xor
mov
xor
push
iret
mov
incl
xlat
inc
mov
popf
and
imul
sbb
sub
decl
sub
imul
dec
mov
mov
jl
fwait
dec
mov
sbbl
out
sbb
lods
or
jp
je
scas
or
add
push
cltd
pop
pextrw
mov
cmp
pop
xor
insb
fisttps
xlat
jp
aad
xchg
jmp
lods
fimuls
sub
mov
xchg
inc
mov
xor
sti
sub
mov
out
mov
notb
insl
jge
jno
push
ds
in
lds
push
outsb
roll
or
inc
push
push
xchg
jge
cmp
ficompl
sar
mov
fs
insb
stos
sar
out
int3
repnz
mov
push
shl
mov
lahf
xchg
lcall
mov
popf
stos
hlt
es
andb
cmp
call
cmp
add
xor
mov
lea
jae
or
clc
decl
pop
int
sbb
stos
in
mov
and
mov
call
outsb
or
fmuls
mov
mov
shrb
sub
jle
push
xchg
clc
lcall
repnz
sbb
ja
jno
adc
pop
inc
xor
call
ljmp
xor
mov
dec
shrb
jbe
call
mov
pop
and
jmp
dec
je
pop
loop
das
sub
sbb
cmpsb
jmp
sbb
stos
stc
jl
incl
dec
inc
hlt
push
into
daa
fcmovnu
mov
iret
jb
or
decl
mov
xor
daa
mov
sub
xor
cli
xchg
andb
xchg
mov
rclb
mov
fildll
xchg
jbe
push
in
test
sub
lock
pop
or
adc
repnz
call
cmpsl
paddusw
xchg
imul
mov
movsl
jl
adc
fidivs
jmp
scas
loope
aas
les
ficoms
leave
popf
mov
js
cltd
dec
mov
icebp
stc
nop
cmp
jg
cmc
mov
sti
xchg
in
mov
enter
cmp
mov
jg
push
mov
pop
pop
xchg
stos
popl
ds
clc
ljmp
and
mov
imul
lock
push
fnstcw
push
fldcw
popl
jbe
adc
movsl
test
decl
mov
int3
mov
test
jg
in
pop
pop
sub
sbb
roll
lds
jns
in
in
dec
js
jns
pop
js
inc
mov
stos
and
cmp
into
push
in
push
ret
sub
pushf
push
sbb
jmp
movsl
xchg
cmc
or
imul
xor
insl
jno
enter
andb
fcompl
ljmp
and
push
sub
and
shll
ljmp
xchg
std
xchg
mov
roll
add
inc
int3
lock
jl
fstpt
push
dec
test
out
out
leave
loopne
jmp
or
daa
pop
stos
inc
mov
push
jno
adc
lods
ljmp
mov
fs
mov
lods
push
add
push
leave
push
adc
pop
cmp
pushl
ficoml
dec
sub
icebp
lret
sbb
adc
lock
out
fiaddl
call
scas
adc
sbb
dec
push
test
mov
cmp
and
aas
mov
lcall
push
xchg
push
ret
int3
xchg
push
cmp
mov
sti
int
push
pop
sub
ljmp
fldenv
mov
test
popa
hlt
aas
fs
es
fs
and
jne
pop
adc
adc
movsl
cmc
pushl
pop
inc
push
iret
sarl
je
push
rolb
sbb
push
lahf
std
arpl
jae
aam
dec
mov
out
fldcw
push
adc
stos
dec
loope
jns
or
aad
push
movsl
sub
fstps
ljmp
out
cmc
xchg
iret
cmp
mov
xor
shrb
jae
push
pop
adc
fldcw
xchg
sbb
cmp
test
fdivrl
nop
jle
xchg
adc
ljmp
test
inc
btc
icebp
jnp
pop
scas
mov
cmpsl
ss
sbb
lcall
mov
outsl
mov
or
test
decl
lds
sbb
jp
cltd
add
mov
and
xlat
ret
inc
lret
sti
clc
decl
cmp
xor
cmp
fbstp
xor
js
aad
dec
sti
std
ljmp
inc
jp
jp
test
int3
sbb
push
dec
hlt
in
cmp
xchg
jno
call
popf
or
pop
mov
je
or
pop
xchg
into
movsl
dec
test
incl
icebp
pop
mov
xchg
dec
lcall
cmp
bound
xchg
mov
dec
push
scas
sbb
cmp
mov
lock
dec
jns
popa
pop
push
mov
inc
pop
outsb
cmp
dec
jmp
jbe
mov
sub
or
ud2
hlt
mov
jmp
test
jl
cwtl
pop
inc
mov
sbb
or
adc
jmp
cmp
jmp
jmp
das
jnp
fbstp
mov
lcall
in
movsl
rorb
pop
clc
jmp
ficoms
pop
pop
lahf
add
sub
fcomps
std
lret
sbb
sar
out
ljmp
push
xor
pop
arpl
shlb
dec
jbe
jg
adc
xor
adc
push
pop
inc
pop
inc
mov
inc
mov
sbb
out
arpl
shrl
incl
add
aam
sbb
adc
mov
fs
aad
cli
repnz
add
imul
test
lcallw
sub
add
ljmp
pop
enter
mov
out
jmp
ljmp
inc
sahf
sub
sbb
ljmp
clc
cmp
pop
pop
mov
mov
rcl
aas
lods
sbb
imul
test
cmp
leave
jo
scas
call
es
push
mov
push
sub
and
cmp
jo
call
push
add
xor
lock
xlat
push
add
or
in
xlat
push
adc
xchg
fnstcw
fisttpl
jl
int3
pop
mov
mov
sub
jnp
push
in
push
inc
insb
add
js
jmp
xchg
sbb
cli
enter
fwait
mov
xchg
mov
mov
lock
inc
sti
loopne
movsb
and
push
jmp
scas
mov
jmp
out
fistps
stos
adc
mov
pop
push
cmp
dec
pop
xchg
xlat
sbb
mov
ljmp
fildl
addr16
shlb
mov
ja
test
idivb
insl
out
pop
subb
pushl
xchg
lds
xchg
xchg
das
and
lea
lahf
xor
jmp
loope
sbb
inc
or
dec
std
add
dec
inc
push
cmp
push
push
pushl
iret
cmc
mov
xor
mov
daa
inc
sbb
into
scas
mov
punpcklwd
inc
add
aas
mov
xchg
inc
mov
pop
sub
dec
cmp
cmp
sub
cli
mov
jg
mov
stos
repz
jecxz
inc
cli
push
push
add
inc
and
call
jg
enter
push
xchg
popa
cmpsb
sub
inc
inc
aaa
clc
in
push
jne
mov
aas
add
push
cs
jmp
pop
add
js
add
pop
outsl
adc
push
filds
int3
mov
shrl
iret
pushl
mov
ltr
and
aaa
popa
add
pop
enter
incl
mov
ror
push
filds
xchg
dec
fs
xor
inc
dec
pop
andl
movsb
push
mov
fcmovu
sarb
repnz
xchg
xor
dec
int
lock
cmp
xchg
cli
std
push
xor
jne
orb
inc
mov
enter
iret
xor
into
adc
mov
mov
je
xchg
sbb
lds
push
or
fcompl
enter
push
ljmp
or
sub
or
loopne
add
fcomps
sbb
cmpsl
cmp
mov
syscall
fmull
mov
push
lock
int
pushl
pushl
cld
pop
or
inc
push
inc
mov
cltd
dec
mov
add
lret
xchg
decl
sarb
jbe
pusha
mov
xor
and
scas
jne
push
mov
into
clc
ljmp
adc
or
repz
pop
xor
in
shlb
adc
das
faddl
nop
jge
les
ja
shl
adc
testb
sahf
ljmp
cmp
mov
ret
pop
ss
lods
push
leave
push
fistps
pop
les
xor
sti
sub
incl
mov
ja
mov
std
jo
sub
mov
xchg
adc
pusha
sar
incl
sbb
push
movsb
out
cli
lahf
fstps
std
daa
call
mov
xlat
fs
je
mov
out
xor
stos
iret
add
push
insb
mov
mov
jg
adc
mov
pop
sub
std
dec
jge
in
jnp
sbb
cmp
lock
mov
incb
cwtl
out
push
mov
or
out
in
call
jno
push
out
xchg
popa
out
loopne
fisubrs
jle
ss
inc
iret
dec
in
sub
fdivr
fnsave
stos
cli
aaa
mov
mov
pop
add
es
add
jmp
and
inc
in
jb
shrb
scas
ljmp
pop
adc
ja
lret
cmp
in
mov
pop
mov
xchg
push
scas
bound
leave
cmp
cmp
fcomps
jbe
call
pop
cltd
fldt
and
add
clc
lods
testl
jp
fs
push
mov
ljmp
adc
pop
fstpl
or
xor
jecxz
mov
out
movsb
popa
xor
mov
mov
out
lahf
pushf
mov
data16
pusha
jle
stc
adc
dec
decl
or
dec
and
inc
dec
mov
cmpsl
hlt
hlt
mov
out
cli
in
aas
in
add
dec
sbb
and
js
or
decl
sub
fdiv
nop
cld
pusha
ret
fdivrl
out
or
nop
ljmp
xchg
call
xor
and
sbb
dec
push
inc
dec
mov
sar
je
icebp
push
lcall
aas
inc
pop
test
clc
push
or
fs
dec
mov
mov
call
loopne
and
mov
cmp
mov
mov
pushl
jge
test
aam
jns
pop
movsb
and
call
iret
aam
xchg
sbb
inc
ret
stos
jmp
jmp
aas
lcall
neg
push
push
imul
decl
mov
adc
push
fisttpl
in
mov
pop
insb
decl
rcr
call
jle
cs
inc
insb
subb
add
push
xchg
fidivrl
push
jmp
mov
decl
in
cmp
push
idiv
jp
adc
sahf
push
stc
cwtl
inc
out
adc
out
jmp
es
xchg
xchg
sbb
inc
dec
or
lods
stc
cmp
push
js
aad
add
xchg
pop
xchg
sub
int3
and
mov
test
inc
inc
imul
call
pop
pushf
mov
fdivrs
cld
outsb
nop
sbb
mov
jge
lods
jne
incl
jl
xchg
xor
dec
xchg
inc
xchg
shlb
mov
dec
jmp
scas
sti
iret
fdivl
lahf
aas
add
outsb
ss
inc
sar
inc
cmp
incl
repz
iret
ja
lock
push
aaa
rcll
sub
or
and
lock
call
negb
cli
fmuls
mov
filds
inc
lea
clc
repnz
jnp
call
pop
lcall
dec
mov
sti
sub
sahf
mov
out
dec
les
es
incl
jne
push
pop
jb
mov
fisubrs
pushl
inc
rcl
and
das
mov
movsl
cmpsl
or
nop
and
imul
vphaddubw
mov
aas
mov
inc
ljmp
pop
ss
mov
adc
pop
mov
mov
decl
leavew
or
sar
xchg
xchg
jmp
mov
or
push
movsl
popa
aad
adc
std
loop
xor
xor
cmp
out
das
jb
aas
add
lcall
ror
and
xorl
popa
or
mov
into
cs
lcall
xchg
xchg
sub
movsb
popf
sub
jno
loop
mov
push
cmp
inc
test
dec
pushf
pop
sbb
xor
adc
xor
mov
nop
jo
jg
arpl
insb
cmp
mov
dec
dec
jp
stc
nop
in
std
xchg
xchg
or
xchg
out
xchg
push
pop
pop
aas
pop
push
hlt
adc
pop
jo
mov
outsl
adc
sbb
xchg
cmp
mov
add
mov
mov
sub
unpckhps
incl
pop
popf
mov
cmp
repnz
inc
xchg
mov
fucomp
jg
lahf
fiaddl
add
add
add
xchg
inc
addr16
fidivrl
push
inc
repnz
jno
mov
scas
pop
stos
repnz
pop
xchg
sub
gs
psubusb
ss
xchg
mulb
inc
jmp
fnstenv
pop
enter
out
cltd
jmp
fs
fistpll
push
xchg
nop
fbstp
adc
add
xchg
fdivrs
xchg
cmova
jl
inc
mov
in
and
fistpl
scas
nop
cmp
push
cmpb
mov
or
mov
icebp
sub
call
sbb
int
jno
icebp
xor
cmp
mov
jg
movsb
pop
flds
sub
adcb
mov
adc
imul
roll
mov
fistl
sbb
mov
shll
incl
inc
cltd
movsl
xchg
arpl
out
nop
fs
hlt
xchg
push
ret
xor
cmp
call
ret
mov
cs
xor
xor
iret
mov
lcall
mov
stos
add
repz
mov
insl
sar
insb
mov
inc
pushf
loope
adc
xchg
cld
mov
mov
int
jecxz
shrb
call
dec
ljmp
mov
lods
addr16
out
leave
repnz
pop
bound
inc
mov
pop
dec
dec
sub
mov
addl
xchg
xor
rcrb
sar
push
lret
sbb
xchg
dec
jo
stos
mov
pop
aaa
lea
cmovnp
cmp
sub
push
mov
pop
push
push
lock
push
and
call
xor
je
mov
in
add
inc
sbb
sbb
test
nop
adc
out
clc
ljmp
sahf
shl
in
popf
outsl
sbb
mov
in
lds
sub
xchg
scas
call
push
test
fnstsw
movsl
scas
pop
pop
and
sbb
mov
fimull
lea
push
adc
sub
in
push
fwait
and
insl
add
mov
ljmp
rcr
mov
aaa
cmpsl
cwtl
sub
sti
lods
and
or
cli
shlb
incl
lcall
scas
je
dec
hlt
cmp
or
lods
cmp
pop
std
jne
shlb
clc
mov
mov
jmp
cld
das
fwait
jb
xor
bound
jmp
pusha
imul
push
jl
test
xchg
jne
and
js
xlat
outsl
arpl
std
or
adc
fcoms
aas
fldenv
cmpsb
ljmp
cmc
mov
and
out
ljmp
adc
add
and
js
mov
repz
popf
mov
inc
je
and
or
add
xlat
sti
dec
lds
dec
call
pop
and
and
mov
shll
dec
cmpsb
sbb
add
mov
stos
adc
icebp
xorb
cmp
mov
add
push
mov
std
out
xchg
mov
addl
add
sub
inc
out
call
jmp
and
jnp
shll
sbb
jae
pop
add
fists
jbe
mov
fsubrs
push
sbb
xchg
jl
mov
jge
or
sub
push
dec
inc
sbb
xchg
ds
dec
cmpsb
add
and
fmull
or
ljmp
popf
mov
icebp
push
sbb
inc
push
test
stos
adc
xchg
ja
jmp
pop
push
xchg
cli
adc
rep
sub
adc
outsl
pop
push
cmp
fcomps
mov
jg
push
inc
iret
dec
shrl
xchg
push
out
mov
push
ret
lea
mov
pop
xchg
jg
mov
fdivl
sub
inc
lret
ret
mov
jg
hlt
in
pop
fcom
push
push
sub
mov
outsb
rclb
incl
push
push
popa
cmpsb
test
fdivrs
mov
or
mov
or
or
in
mov
rcl
xchg
test
ljmp
sbb
xor
jb
out
mov
pop
mov
adc
dec
mov
sbb
mov
clc
push
sbb
and
or
inc
sub
mov
sbb
mov
mov
pop
js
lods
mov
mov
and
cli
jle
cmp
fwait
mov
push
notb
jo
jg
movsl
xchg
out
dec
addl
mov
clc
mov
push
shr
pop
mov
fcomip
outsl
mov
push
jo
sbb
push
lcall
xor
lcall
mov
mov
or
fcomip
out
es
in
pusha
aam
negb
ljmp
decl
sbb
push
in
enter
sub
xchg
clc
dec
mov
xor
ss
test
fdivrp
enter
pushl
push
ds
cltd
dec
imul
shlb
pop
sub
add
lea
stos
and
jecxz
out
pop
jno
loopne
and
cmc
ret
pop
and
daa
stos
inc
data16
cmp
out
scas
aaa
subb
gs
mov
xchg
int3
mov
mov
pusha
jbe
mov
jg
add
mov
jmp
jmp
push
je
and
cmp
pop
loopne
lahf
sbb
daa
jbe
sbbl
dec
push
jo
sub
call
mov
mov
dec
sbb
jmp
cmp
pushl
push
movsb
mov
movsb
in
cltd
outsb
repz
add
cmp
lock
lcall
ret
scas
mov
sti
in
cmp
pop
add
xor
fldt
dec
cs
adc
decl
int
mov
leave
jp
hlt
adc
mov
sar
ljmp
lods
lret
push
sub
dec
cmp
dec
xchg
incl
dec
jno
cwtl
aaa
mov
lcall
das
clc
dec
xchg
xchg
pusha
xor
xchg
cmp
lods
lock
mov
cli
ljmp
cs
call
pop
call
jl
scas
push
adc
rcrl
sbbl
sbb
jg,pn
fcomip
cmpsb
jp
lods
mov
inc
inc
jo
cmpsb
mov
std
or
jmp
cs
jmp
jns
sub
and
xchg
push
sahf
es
adc
adc
popf
pop
inc
cli
call
pop
bound
jae
fidivs
xchg
out
ljmp
cli
fimuls
jmp
xor
lret
and
fadds
adc
adc
jg
lcall
mov
mov
jmp
je
fimuls
inc
push
jecxz
or
repz
in
cmp
nop
xorl
gs
cmp
inc
ljmp
mov
jbe
mov
scas
sbb
jbe
push
int3
push
mov
xchg
xlat
nop
mov
in
incl
fiaddl
addr16
rcrl
mov
fdivl
aam
cmpsl
xchg
inc
loop
sbb
inc
rcrl
sti
fwait
sti
hlt
mov
rcr
xor
repnz
pop
div
das
adc
pushl
lods
pop
in
jge
imul
lcall
jno
ljmp
dec
push
xchg
shrb
lahf
and
in
and
dec
ret
stos
mov
mov
shlb
shlb
pusha
ljmp
lods
rcl
neg
dec
push
push
push
std
push
rol
mov
xchg
mov
pop
inc
fldl
sti
mov
push
ljmp
lea
aaa
das
clc
pop
arpl
xchg
clc
or
test
xchg
les
out
sbb
push
and
mov
popf
repnz
xorl
mov
nop
jo
call
jo
stos
mov
daa
pop
shll
sahf
cmpsl
jb
inc
int3
lea
decl
pop
addr16
jg
std
push
gs
mov
sub
sub
mov
mov
ljmp
pop
jae
cld
cmp
xchg
ljmp
stos
mov
test
xor
pop
pop
sbb
fwait
mov
xchg
jb
cwtl
scas
mov
jmp
aaa
pop
cmp
lea
jle
dec
cmc
xchg
aas
call
push
mov
cld
loope
or
aaa
out
enter
lcall
popa
add
mov
mov
xor
lcall
and
ret
sub
dec
cld
or
xor
cmpl
or
mov
into
mov
rcll
sub
fmuls
mov
outsb
mov
scas
mov
pop
test
xlat
dec
ja
scas
clc
decl
fcmovbe
call
push
stos
leave
add
imul
jge
prefetch
or
sub
pop
mov
mov
lahf
jmp
jge
test
ljmp
scas
push
adc
cmp
mov
fsts
cltd
xor
adc
popf
decl
mov
adc
popf
pop
std
mov
xchg
xchg
mul
or
adc
adc
ljmp
or
sub
sti
and
mov
add
lcall
repnz
out
sbb
mov
les
mov
push
out
lods
cmpsl
ljmp
adc
and
pop
jp
jo
jmp
cmp
jge
mov
jg
pop
lcall
gs
rcrb
jmp
push
cmp
lods
xchg
adc
and
sarl
das
lods
push
lret
stos
xor
shl
jg
and
out
clc
out
inc
out
repz
in
testb
decl
jnp
mov
sbb
adc
xchg
push
push
pop
mov
daa
push
mov
xchg
fcomip
pushl
lock
xchg
notl
js
push
mov
xlat
call
mov
dec
and
fildl
mov
xchg
fnstsw
adcb
in
enter
mov
divb
sub
mov
jbe
scas
ror
xchg
icebp
cmp
sub
xorl
cmc
decl
lret
push
push
sbb
mov
cli
push
sub
or
mov
addr16
cmc
sub
xchg
mov
jmp
ljmp
in
fcompl
psubusb
clc
ljmp
adc
push
cli
lods
fstl
inc
dec
xchg
pop
mov
ljmp
les
mov
dec
test
dec
or
sarl
mov
inc
ljmp
mov
xor
fs
addb
push
push
mov
and
jbe
testb
sbb
pushf
and
cmp
lods
sbb
dec
lods
push
ja
test
inc
ljmp
leave
dec
scas
daa
fucom
repnz
sahf
cmpb
jmp
iret
or
dec
test
jmp
stos
add
fs
push
xchg
out
add
jmp
push
jge
push
sbb
aaa
sbb
ficomps
adc
iret
xor
cli
and
loop
sub
enter
xor
cmpsb
push
stos
dec
xchg
aas
cld
cmp
out
push
mov
out
cli
inc
sub
loopne
shrb
dec
cmp
loop
push
jp
in
lcall
push
xchg
rolb
popf
inc
adc
push
push
aas
subl
daa
out
inc
xchg
sub
outsl
daa
insb
mov
xor
fcoms
cld
mov
mov
mov
decl
xchg
add
mov
stc
and
xlat
cmp
jge
push
xor
xchg
push
lcall
in
mov
ljmp
sub
lret
cmp
lds
push
mov
mov
push
jl
sti
daa
aam
add
ret
in
jge
sbb
lcall
sti
adc
mov
jno
fidivl
mov
dec
mov
xchg
xlat
ret
fidivl
call
notb
popa
inc
aad
adc
and
add
push
mov
das
cli
mov
clc
cwtl
xchg
dec
lahf
push
cmp
bnd
jns
xlat
daa
test
add
cld
js
cmp
pop
out
jg
inc
xchg
stos
jo
mov
dec
or
lock
mov
aas
cli
test
xchg
scas
inc
mov
sbb
jg
pop
mov
jle
jbe
push
dec
cmpsl
ja
std
and
aam
push
mulb
pop
js
repnz
mov
decl
insb
or
jle
mov
arpl
push
sub
daa
push
jns
sbb
lret
cmp
lahf
in
popf
cli
xchg
mov
mov
add
outsb
lds
fidivrl
ljmp
ljmp
shrl
jp
adc
lret
sahf
jae
sub
lds
jmp
dec
pushl
jp
cs
insl
xor
ja
push
andb
sub
call
ret
add
test
jg
xor
pop
lods
bound
jb
cmp
outsl
inc
sub
mov
pop
les
loope
scas
pop
lret
inc
jnp
mov
test
jg
inc
fidivrs
sbb
sub
adc
ljmp
cmp
insl
popa
dec
es
ljmp
sbb
popa
lods
imul
imul
nop
mov
and
dec
subb
fdivrs
pop
or
adc
push
mov
fdiv
hlt
lea
cwtl
aam
ret
and
ljmp
out
cmpl
cwtl
loope
js
push
shlb
call
push
jnp
jge
iret
or
or
dec
cmp
and
fwait
loop
mov
decl
push
mov
sbb
cmp
shlb
out
fisttps
pop
ljmp
dec
cltd
adc
cmp
not
out
dec
ja
adcl
incl
loop
pop
push
lock
dec
or
jecxz
sbb
jmp
or
cmp
shlb
sbb
js
leave
jecxz
xor
jg
lcall
xchg
pop
insb
adc
xchg
std
pushf
mov
mov
mov
dec
movsl
pop
jno
in
jp
pop
pop
push
sete
inc
mov
jnp
js
sbb
pushf
ljmp
ret
add
inc
add
push
or
iret
cmpsb
jnp
mov
dec
call
imul
mov
ss
popa
scas
pop
loope
out
data16
jb
jns
cli
pushl
sbb
and
sbb
testl
cmpsl
mov
gs
push
nop
ds
cmpsb
arpl
dec
or
repnz
sub
popf
andb
fwait
lcall
sbb
push
std
shlb
add
xchg
cmpsb
ja
lcall
lcall
push
imul
gs
fcom
das
push
mov
cmp
push
push
sbb
mov
and
sti
in
lret
mov
push
repnz
mov
pushf
sub
xor
popf
out
jae
decl
dec
fs
mov
in
pop
nop
xchg
test
outsb
jnp
sub
ds
icebp
pushl
roll
sub
dec
and
je
add
mov
les
lock
sub
stc
and
mov
push
in
movsb
mov
fisttps
es
mov
pop
jno
mov
loopne
cmp
mov
int3
gs
arpl
call
xchg
cld
enter
sarb
daa
mov
idivl
mov
jmp
sub
or
pop
sub
fdivrs
insb
imul
pop
pop
pushf
lea
mov
jmp
out
adc
aaa
fwait
jg
sbb
dec
aad
cmpsb
shr
pop
dec
jmp
or
mov
pop
push
dec
dec
jp
paddusw
add
gs
xchg
mov
mov
inc
ret
mov
sbb
cmpsl
xadd
subl
jmp
incl
lcall
loopne
pop
fsubrs
push
mov
add
das
mov
lcall
xchg
mov
faddp
int
xor
cmp
movsl
push
imul
into
out
sub
cltd
add
xchg
jge
pop
inc
xchg
or
inc
js
sar
incl
scas
cmpl
test
push
push
out
decl
mov
inc
insb
loop
incb
les
imul
hlt
mov
ret
dec
push
pop
and
or
fs
push
and
push
fimuls
and
inc
push
pushf
jb
and
or
mov
sbb
mov
and
arpl
cmp
stc
popa
dec
sahf
ss
ljmp
mov
jnp
call
lahf
sbb
jne
push
nop
xchg
lcall
and
imulb
jbe
lock
cmp
cmp
mov
or
jmp
cmc
push
mov
push
adc
cmc
insl
subl
xchg
sti
into
xor
repnz
push
call
add
jge
pop
lret
lahf
and
lods
pop
and
mov
push
pop
popf
xchg
test
mov
mov
xor
and
outsb
inc
dec
adc
popf
xor
or
inc
shl
xchg
cmp
mov
cmp
cmpsb
popa
jne
dec
xchg
and
jno
or
lea
push
jmp
frstor
jno
push
cmp
icebp
inc
lret
mov
or
mov
jle
in
icebp
fcoms
and
mov
lret
jns
nop
pushl
fnop
cmp
mov
in
jle,pn
aaa
cld
incl
les
imul
jbe
xorb
push
rolb
jb
mov
jmp
push
inc
dec
addr16
ret
lods
pop
aaa
decb
stos
and
lret
adc
scas
cli
in
xchg
xchg
cmp
not
mov
xor
popa
mov
xchg
nop
add
push
sub
sahf
cmp
mov
xchg
repz
pop
xor
push
mov
inc
loopne
sub
cld
lcall
jo
cmp
mov
xor
xor
int3
or
ja
jmp
cli
or
repnz
inc
sub
push
and
adcb
cli
pushw
dec
push
js
mov
sub
cli
lret
add
push
fwait
sbb
mov
adc
ljmp
push
xor
stos
adc
sub
stos
cmp
imul
leave
inc
push
lret
sbb
jmp
jbe
outsl
cwtl
push
sbb
xor
push
enter
cmc
test
fwait
mov
push
stos
out
out
jle
out
sbb
jns
popf
sub
incl
daa
int
rcl
cmp
cmp
adcl
ret
incl
mov
das
xor
clc
jecxz
adc
int
mov
mov
sub
in
rclb
mov
push
lds
adc
cmpsb
std
lea
add
enter
ljmp
sbb
sbb
test
mov
jl
ret
fidivl
dec
icebp
cwtl
sub
loope
jle
mov
dec
jmp
mov
inc
fisubs
dec
outsl
cli
pushl
jo
imul
or
cmp
sbb
jnp
jle
decl
fcoml
lock
lahf
setl
outsb
es
sub
out
jl
cmp
decb
mov
mov
pop
or
aas
das
dec
aas
or
push
in
mov
adc
xor
pushl
push
adc
popa
sub
pop
push
dec
mov
in
icebp
push
pop
mov
ja
sub
jmp
add
stc
stc
sbb
xor
rorl
ja
mov
pushf
or
mov
pop
test
call
rclb
push
fstpl
movsb
mov
fnsave
or
ret
mov
call
test
daa
jb
adc
mov
lock
push
fsubrl
mov
push
test
lcall
test
dec
inc
sub
add
push
dec
fimuls
lret
cltd
repnz
decl
lods
jmp
stos
sub
mov
outsl
rorl
cmp
ja
push
and
jmp
xor
pop
inc
test
test
mov
sub
add
add
fsubrl
enter
push
inc
adc
ret
loop
clc
js
jne,pt
rorl
inc
test
fcomip
inc
test
adc
push
cmp
popf
mov
mov
shrl
pop
adc
rcl
xchg
ret
push
mov
xor
jno
aaa
xchg
clc
jg
outsb
inc
idiv
fsub
push
stos
imul
mov
mov
je
aad
jb
dec
mov
movsl
pop
movsb
lret
data16
or
out
aad
pushl
popf
pop
jnp
hlt
rorb
jg
sub
push
into
cmp
cwtl
rol
xchg
scas
call
insl
lret
leave
pop
sti
add
sub
or
enter
add
sbb
stos
xor
out
decl
jecxz
adc
push
push
in
or
pop
sub
ss
or
cmp
decl
jae
and
push
pushf
std
inc
add
or
repnz
cld
mov
jge
inc
push
cwtl
and
or
mov
incl
adc
loope
jmp
push
into
scas
mov
pop
scas
arpl
sbb
sub
and
xor
cwtl
mov
jmp
setnp
dec
and
shl
push
push
cwtl
incb
lds
mov
call
inc
pshufw
or
xor
or
fmulp
cmp
cmpsb
mov
sbbl
ss
iret
nop
sub
xchg
or
mov
imul
lds
cli
ss
mov
mov
repnz
cs
mov
mov
movsl
push
in
xor
push
jns
gs
in
incl
and
sbb
and
mov
negb
xor
ljmp
minps
shlb
and
push
sti
addl
and
cmc
jmp
iret
lcall
fcoms
aad
xchg
repnz
xchg
pop
cmp
lods
add
pop
fidivl
dec
sbb
adc
dec
out
test
jg
lret
adc
adc
xchg
pop
cmc
out
jg
cmp
popf
push
stos
clc
stos
sbb
xor
push
in
cmp
push
scas
jmp
jg
aam
jb
jne
sub
mov
jle
jle
rclb
and
fcomip
pop
push
xor
jle
mov
push
xchg
pop
cltd
stos
scas
jecxz
aad
xchg
lds
xchg
add
mov
adc
pop
cmp
insb
decl
jb
jmp
sbb
insb
dec
clc
lcall
fsubr
mov
cmpsb
mov
das
pop
pop
sbb
ds
hlt
shrl
sahf
sbb
call
jnp
int
es
push
test
jp
push
aad
xchg
mov
add
pop
lock
incl
mov
aaa
mov
in
xchg
dec
lcall
stos
or
in
sar
xor
push
in
pop
aam
jmp
jecxz
lcall
hlt
inc
push
stos
mov
cmp
pop
es
fmuls
outsb
mov
cli
jne
in
mov
addb
leave
test
push
rclb
leave
cmp
mov
aad
xlat
in
mov
pop
xor
lcall
dec
xchg
inc
adc
rcrb
adc
imul
lret
cli
fnstenv
xchg
mov
lcall
loop
stos
sub
push
aas
inc
popa
sbb
and
xchg
mov
and
mov
movsb
es
cmc
enter
and
sub
call
sbbl
scas
mov
mov
enter
clc
jmp
jl
mov
ljmp
decl
jne
loope
subl
lock
jecxz
mov
out
decl
push
push
stc
dec
mov
push
mov
xchg
mov
lock
inc
das
jns
jecxz
mov
out
add
xor
pushf
cmp
push
sbb
out
adc
add
adc
push
ss
pop
add
inc
ret
mov
mov
decl
mov
push
fisttpll
jg
sbb
push
addr16
pop
fs
inc
jnp
insl
pop
sbb
hlt
xchg
push
add
and
xor
ja
cltd
xor
popf
sbb
dec
mov
enter
ljmp
les
sbb
inc
or
sbb
fwait
popa
add
xchg
lods
in
int3
clc
pop
xchg
and
aaa
pushl
mov
stos
inc
xchg
vpmacswd
jae
gs
dec
dec
push
push
shlb
mov
and
and
mov
repz
insb
sub
and
das
sar
cmp
pop
cltd
es
testl
inc
incl
cltd
dec
mov
xchg
mov
iret
inc
popw
mov
push
rcrl
pop
lock
inc
cmp
aam
int3
imul
mov
loope
ja
pushl
cld
sub
and
out
mov
jne
xchg
repnz
enter
jb
icebp
jecxz
sbb
hlt
add
mov
aas
push
test
dec
jae
cmpsl
mov
imul
mov
sbb
jb
jg
call
jle
sbb
dec
pop
into
add
pop
pop
dec
popa
repnz
int3
push
loope
mov
popa
cli
mov
dec
sub
mov
fisubrl
inc
mov
decl
mov
jge
pop
sbb
sub
mov
mov
ljmp
jmp
dec
pop
sbb
lret
sbb
repz
fldl
mov
inc
adc
in
mov
push
pop
stos
mov
popf
inc
mov
incl
lret
jg
push
roll
mov
inc
inc
jmp
pushl
ja
xlat
pop
loop
test
std
inc
sub
int3
test
insb
lea
xlat
aad
mov
call
pop
jae
sub
ljmp
pop
or
push
bound
ljmp
cmp
jmp
mov
xchg
dec
mov
add
jmp
bound
jecxz
addb
lods
stos
sub
scas
jge
add
ljmp
fmul
cmp
aad
sub
repz
js
decl
or
std
sbb
and
push
add
push
xchg
jno
sbb
mov
stc
push
adc
xor
add
push
mov
pop
pop
fs
pop
pop
es
cmpsl
inc
popa
lcall
pop
aad
mov
xchg
subb
je
xor
cmpsl
bound
adc
mov
sbb
jmp
shr
xchg
mov
je
inc
pusha
rcrl
sbbl
sub
push
out
int3
lcall
sub
add
push
inc
call
push
fs
push
repz
outsl
in
movsb
or
lods
lcall
cmp
add
lods
xchg
push
dec
ds
xchg
ficomps
loop
decb
movsl
clc
jns
je
hlt
decl
lock
repnz
push
es
cmc
imul
pushl
push
out
xchg
mov
xlat
pop
es
cld
or
jbe
in
fs
mov
mov
int
cltd
cltd
push
ret
shrb
push
js
add
cmp
ret
pusha
jmp
sbb
jns
lods
sti
jg
loopne
cmc
cwtl
cld
pop
mov
lcall
cs
mov
fsubrl
push
mov
cmpsb
je
pushl
leave
shl
mov
xchg
sbb
enter
decl
negb
cmp
mov
icebp
push
or
cmc
or
xor
mov
xchg
incl
push
idivl
pusha
jle
js
add
outsl
sub
cmc
dec
lcall
xchg
or
push
insl
fdivr
mov
das
xchg
loopne
jmp
ror
imul
out
inc
dec
pop
shll
out
lock
call
jno
in
pushl
mov
or
inc
rcll
iret
add
jecxz
xor
pop
dec
pushf
sahf
inc
sbb
mov
or
jmp
addr16
cmp
and
adc
std
inc
adc
mov
dec
or
mov
nop
andl
in
notb
les
lcall
mov
hlt
dec
pop
lds
jmp
fidivl
inc
add
idivl
jg
sub
aam
imul
xlat
sub
ret
mov
das
dec
fwait
mov
xchg
scas
sbb
push
rclb
shlb
cmpsb
jmp
int3
push
into
adc
lcall
test
mov
and
test
bound
inc
mov
popa
stos
xlat
mov
jmp
sbb
dec
adc
out
lret
adc
pop
sarw
push
stos
pop
jg
call
stos
mov
adc
dec
sarb
jmp
ljmp
nop
mov
lret
add
lahf
in
subl
int
push
xchg
jecxz
incl
or
xchg
mov
scas
and
mov
inc
out
mov
lahf
cmc
or
mov
jmp
lock
call
jg
enter
loop
cmp
inc
rclb
add
jmp
movntq
out
or
cs
jmp
or
xor
sbb
sub
xchg
test
data16
and
mov
or
incl
clc
cmc
pop
dec
sbb
lods
cmp
cmp
inc
adc
imul
das
es
out
jb
xor
loopne
decl
rclb
mov
inc
sti
scas
sub
pop
in
push
mov
jnp
mov
pop
xchg
adc
inc
les
mov
or
cli
enter
icebp
and
mov
lcall
sbb
mov
adc
pop
pop
lock
decl
pop
inc
mov
adc
or
cli
jge
in
mov
dec
scas
push
rcrb
push
inc
sbb
mov
jae
mov
daa
push
or
xchg
pop
ljmp
rcr
and
jno
add
nop
fmul
jmp
fwait
gs
iret
sar
fsts
out
xor
push
cli
sbb
mov
in
jecxz
adc
cmp
mov
shll
lcall
ss
or
jg
jle
jle
shll
mov
sub
into
mov
jae
popf
int3
decl
jp
cld
fwait
sbb
adc
std
sbb
jno
add
dec
cltd
fcmovnb
push
iret
mov
xchg
sbb
in
out
jge
popf
dec
adc
push
jmp
repz
vandnps
inc
gs
in
stos
stos
lods
inc
sti
push
clc
call
out
nop
cld
insb
pop
stc
pop
xchg
pusha
dec
ss
cmp
andb
adc
sbb
fbld
fisubl
out
scas
cwtl
ss
iret
xlat
sbb
ljmp
pop
fcomi
cmp
adc
test
shl
add
data16
call
loop
cmp
ret
sbb
cmp
sbb
dec
movsb
push
jb
hlt
fldl2e
inc
je
out
sub
incl
inc
push
and
mov
lods
ja
int3
int
lods
icebp
xorb
cmp
outsl
xor
in
dec
cmp
lcall
testb
mov
jg
xchg
pop
lret
test
sub
or
sti
test
jl
xchg
shll
int3
jne
pop
xor
bnd
aaa
std
int
dec
popa
pusha
sarb
xchg
sub
mov
bound
inc
loop
xor
incl
mov
fisttpll
lret
lock
addr16
sub
decl
add
mov
and
sub
xchg
leave
mov
rcll
incl
sbb
in
pushf
std
pop
inc
and
call
pop
es
dec
sub
jecxz
add
out
adc
mov
dec
mov
mov
call
aaa
pushf
pop
push
fldcw
cmp
adc
testl
out
sbb
mov
incl
xor
js
xlat
cmp
jbe
mov
lahf
imul
inc
fdivrp
incl
shll
push
stos
jo
testl
test
inc
and
inc
pop
test
incl
stos
lret
sti
add
add
inc
sub
out
loop
out
pop
and
cltd
xor
rcl
mov
pushl
xchg
arpl
xchg
cmp
imul
movsl
sub
mov
inc
mov
or
push
sub
jbe
clc
cli
push
adc
inc
popa
ss
mov
cmpb
clc
out
negl
aaa
push
lds
fcomip
ret
push
xor
notb
iret
adc
cmp
cli
lahf
adc
dec
scas
or
pop
xchg
shrl
repnz
test
xchg
loopne
ret
add
jae
insb
in
decl
inc
ja
insb
or
or
adc
xor
push
lret
popf
mov
jp
xor
xor
pushl
stc
vpshuflw
cli
push
mov
xor
mov
ljmp
cmp
add
cs
and
mov
or
or
hlt
jg
test
fadd
fimull
mulb
push
xchg
mov
fildl
iret
add
lods
and
decl
or
scas
popa
adc
xor
shrb
cmp
or
push
adc
loopne
pop
mov
lcall
xor
xchg
sub
mov
ds
pop
cmpsb
jg
xor
jb
mov
loop
xor
bound
cwtl
and
add
jg
lcall
cld
cmp
or
push
repz
shrl
inc
dec
jns
pop
mov
or
sub
call
mov
dec
cltd
aaa
xlat
pushf
int3
xchg
sub
cld
cs
call
push
jnp
mov
add
testb
mov
andb
adc
data16
loopne
dec
mov
jecxz
daa
enter
fimuls
or
rcl
lock
loope
ljmp
xchg
mov
sub
push
sub
dec
fwait
hlt
and
cmp
mov
sbb
pop
pusha
xor
jmp
cmc
ret
addb
or
xchg
jmp
aas
negb
xor
pushf
adc
jp
into
lods
iret
aad
xor
xor
jmp
lock
adc
pop
mov
jnp
xor
outsl
push
sbb
or
jno
and
and
pop
mov
fxch
push
add
mov
push
js
cld
xor
lds
xchg
sbb
mov
push
mov
stos
pop
mov
pop
daa
jb
roll
pushl
push
push
mov
lcall
pop
add
jg
movb
adc
rcrl
inc
aam
jb
or
cmp
je
jmp
sbbb
mov
xchg
int3
das
ret
jle
ss
and
icebp
or
lcall
cld
jnp
dec
sbb
mov
xchg
lods
jge
add
jg
cmp
xchg
test
int
inc
daa
adc
mov
loopne
out
cli
movsb
insl
shrl
sub
mov
pop
ss
js
xor
cmp
mov
mov
cmp
jb
outsb
nop
movsl
cli
jg
cltd
cmpsb
out
or
xchg
movsb
push
int3
push
test
imul
and
lods
or
adc
adc
xlat
cwtl
dec
xchg
lea
adc
mov
sbb
incl
mov
mov
out
xor
push
rcll
inc
cwtl
pop
xor
mov
std
pushl
pop
xor
scas
add
or
xchg
jb
loope
mov
ljmp
fdivr
in
arpl
xor
push
test
lock
inc
pop
es
jle
out
pop
add
andl
out
xchg
out
pop
mov
add
dec
lcall
in
add
xchg
pop
imul
xor
stos
jmp
cmc
xchg
lcall
push
hlt
lcall
aas
call
xor
or
xor
outsb
sub
fisubs
not
jp
xor
movsl
insl
dec
orb
inc
lahf
ss
adc
mov
jg
movsl
rorb
adc
rorl
xchg
pop
adc
jmp
mov
fisubs
xchg
in
fidivs
sub
iret
cltd
mov
fcomps
xchg
es
call
enter
repnz
mov
lock
scas
and
adc
enter
jmp
mov
imul
mov
mov
cmc
jno
push
mov
lods
sbb
pushl
cmp
ficoml
test
outsb
jle
lret
xchg
popa
ljmp
loopne
or
data16
jnp
jp
dec
lds
jecxz
sahf
mov
mov
mov
decl
lock
rorb
jne
or
jae
push
test
fstpl
sbb
sub
sub
repz
into
daa
mov
adc
call
dec
stos
pop
scas
les
fwait
jp
call
aad
mov
int3
mov
push
insb
mov
jg
jge
frstor
push
icebp
inc
jle
in
fs
adc
insl
xchg
dec
lods
jl
dec
mov
sub
dec
jne
and
mov
lcall
faddl
add
xchg
mov
add
outsb
in
clc
fmul
pushl
std
lcall
int3
dec
or
inc
cmpsb
push
push
in
aaa
xchg
xchg
shlb
in
push
push
in
call
pop
cmp
jge
add
or
jp
rclb
pop
xchg
ljmp
and
xor
mov
mov
mov
popa
sarl
decl
call
aad
aam
or
add
cmp
sub
adc
adc
push
jae
call
jecxz
jecxz
repz
xor
movsl
mov
inc
mov
adc
pusha
insl
incl
int
dec
push
pop
fidivrs
push
xchg
dec
push
fldcw
pop
pop
nop
addr16
jecxz
test
mov
test
daa
pop
inc
repz
xchg
movsb
pop
aad
cmc
jp
hlt
bnd
dec
push
lret
xchg
in
cmp
jle
mov
fcmove
not
xor
push
ja
inc
daa
dec
in
and
fucomip
push
xchg
adc
les
lods
les
into
in
lahf
inc
out
xor
incl
fisttps
lret
movsl
or
lret
mov
ss
bound
lods
pushf
add
inc
fwait
push
jb
mov
pushl
mull
xor
push
xchg
xor
aas
or
stos
mov
push
cld
stos
in
stc
lods
in
iret
jb
ss
mov
fildl
mov
imul
jmp
push
mov
pop
std
fwait
lret
push
cmp
push
rorb
shlb
xchg
ljmp
stc
xor
stc
aad
jbe
mov
pop
cmp
add
ja
jle
sti
mov
xchg
subl
jg
loop
iret
fstl
jmp
mov
jmp
and
es
lcall
jp
cmp
cmpsb
jnp
into
xchg
or
loope
arpl
cmpsb
ss
movsl
push
jmp
cmp
outsb
movsl
adc
xlat
mov
insb
lahf
neg
clc
push
mov
test
call
jg
cmp
stos
fnstsw
addr16
data16
idiv
add
jnp
ljmp
addr16
xor
movsl
fisttps
stc
ljmp
mov
jno
sbb
xchg
gs
pushf
ss
ljmp
inc
lea
loopne
xor
movsl
lret
fstpl
or
add
pop
flds
inc
scas
cmc
rorl
adc
dec
sbb
aaa
out
jp
ljmp
scas
lret
push
jns
mov
repz
cmp
or
decl
xchg
or
mov
sahf
test
outsb
cwtl
adc
outsl
cs
in
decl
lods
lret
fstpt
or
dec
lea
inc
outsb
inc
jae
fadd
adc
mov
inc
sar
jmp
insl
fsubrl
jecxz
fcmovnb
ljmp
addr16
push
fsubrs
ljmp
sbb
and
fdivrs
mov
pusha
xchg
sarb
cmc
sbb
lret
rcll
in
cmpsb
loopne
sahf
dec
daa
gs
stos
sub
cli
xchg
and
fidivl
ja
xor
mov
incl
pop
addr16
inc
outsl
in
test
mov
cmp
popf
mov
nop
or
nop
cmc
dec
adc
aad
jne
mov
sahf
lock
mov
sbbl
call
ljmp
add
ljmp
loopne
sbbb
and
stos
leave
mov
dec
std
lcall
popf
cld
push
xchg
push
and
adc
loopne
fiaddl
test
pop
mov
jl
es
ret
xor
xchg
jp
clc
fldl
ljmp
cli
lcall
dec
and
xor
dec
mov
pop
addr16
jb
je
push
mov
fsubr
sub
inc
lods
jmp
mov
adc
cli
push
inc
inc
dec
mov
xlat
decl
loop
mov
ljmp
mov
hlt
pushf
xchg
aas
inc
mov
std
pushl
cmp
int3
hlt
shll
mov
push
xchg
mov
incl
data16
shll
or
pop
mov
inc
test
sbbb
call
inc
mov
hlt
loopne
jbe
xor
test
sub
sbb
sarl
inc
jo
dec
add
add
sahf
jp
jo
push
xorl
int3
mov
testl
sub
ljmp
lock
lods
xchg
jae
dec
adc
xchg
sti
test
mov
inc
stc
mov
and
incl
xchg
rol
and
in
or
mov
push
loopne
imul
or
incl
sbb
xchg
cmp
outsl
mov
jg
adc
pop
scas
ljmp
xchg
pop
adc
cmp
js
enter
stos
and
shlb
test
inc
jle
mov
xor
jb
fmull
sar
cmp
or
push
mov
xchg
xorl
xchg
ret
and
subl
mov
ss
mov
xor
sbb
jg
xor
js
mov
mov
leave
icebp
xor
das
testl
lret
ljmp
adc
cmp
sti
insb
in
inc
int3
sbb
mov
out
scas
cld
gs
xor
cmp
xchg
lds
cmp
movsl
pop
enter
mov
in
push
shlb
in
add
mov
mov
mov
test
mov
stos
and
icebp
incl
cmp
push
stos
dec
jo
xor
cmpl
fisttps
out
or
mov
inc
ficompl
rcl
cli
js
decl
jno
and
mov
push
stc
cld
xor
cmp
jecxz
pop
jg
insb
das
pop
cmpsl
mov
pop
pushf
lcall
leave
cmp
sbb
pop
dec
scas
cmpsb
push
mov
ret
push
sbb
jle
push
les
push
shrb
fldt
push
lock
dec
push
fistpl
dec
dec
lea
cltd
stos
dec
aam
push
incl
pop
sub
fisubrl
xlat
sbb
lcall
orb
dec
jnp
adc
dec
and
es
aaa
xor
sub
jg
pusha
push
fwait
dec
jp
ljmp
jmp
mov
and
nop
xorb
repz
repz
mov
fmuls
pop
std
push
in
scas
inc
adc
inc
idiv
push
insb
or
sub
ja
mov
cmp
jmp
testb
xor
ljmp
push
std
jmp
cmp
test
xchg
mov
xchg
loopne
sbb
jle
sub
mov
pop
jmp
adc
cmp
lret
out
pop
xlat
mov
jp
jno
dec
subl
insb
push
rorl
loope
imul
cmpsb
mov
and
adc
enter
cld
and
es
adc
sub
fwait
inc
ja
insl
nop
scas
loope
add
insl
push
ja
dec
mov
imul
mov
cmp
jmp
in
mov
pop
and
xorb
in
or
jmp
stos
hlt
dec
je
loopne
hlt
in
ret
sub
jns
loope
cmp
xchg
fwait
mov
fwait
jmp
dec
lcall
mov
or
imul
mov
sbb
jbe
and
push
shll
mov
mov
pop
repnz
push
ljmp
and
and
xchg
aaa
mov
sub
int3
cmpl
xchg
cmp
mov
sbb
pop
xor
fldt
sub
into
fsubrp
sbb
es
fwait
test
pushl
mov
mov
imul
pop
hlt
push
and
lds
add
decl
sahf
adc
xchg
push
in
rcrl
cli
call
test
mov
mov
aaa
dec
arpl
sub
lds
enter
sub
mov
adc
fdivl
in
mov
inc
je
mov
and
lcall
ds
push
or
cli
mov
inc
or
les
mov
adc
or
jmp
lahf
jle
pop
or
sbb
xchg
add
pop
sarb
lahf
lea
jp
pop
mov
orb
cmc
add
testb
scas
lcall
mov
das
lea
sahf
xchg
mov
call
stc
xor
inc
daa
or
out
adcb
sbb
incl
test
dec
mov
ljmp
sbb
inc
loopne
call
jmp
hlt
mov
bound
fbstp
rolb
into
movsb
or
and
cmpb
adc
inc
lock
call
popa
icebp
mov
add
inc
imul
cltd
movsl
popf
into
sbb
cli
lcall
ja
dec
ret
fistpll
nop
mov
pop
rcrb
das
ja
test
jmp
pop
xchg
arpl
je
pop
pop
nop
mov
popf
cwtl
adc
std
pop
movsl
xchg
out
jge
int3
shl
orl
cld
pop
dec
or
push
xchg
lcall
enter
aad
in
rcrl
repz
or
pushl
lods
xchg
push
stos
or
flds
fs
mov
mov
mov
fisubrs
pop
cmp
ljmp
gs
pop
in
ljmp
clc
pop
dec
es
xchg
adc
push
mov
jmp
pop
lea
push
push
movsl
into
mov
or
sub
loope
add
repnz
imul
jae
decb
mov
icebp
popf
loope
mov
mov
pushl
inc
add
arpl
mov
out
sti
popf
push
pop
dec
or
ret
decl
cwtl
mov
test
pop
mov
mov
dec
sbb
popa
sti
in
cld
xor
jb
mov
fwait
out
jne
movsb
xchg
inc
hlt
rcrl
fisubl
outsb
adc
pushl
add
fcmovnu
shrb
mov
adc
loop
fwait
push
mov
lock
pop
cmp
pop
mov
jbe
popa
aad
and
test
lea
in
jbe
and
jo
insl
mov
fstpt
sbb
inc
adc
aad
inc
adc
lods
sbb
popa
xchg
sarl
sbb
jg
cli
pop
pop
add
inc
pushf
out
adc
jg
push
loopne
mov
push
setle
jge
cmpsl
push
rorl
leave
fiaddl
jne
lret
jne
inc
and
imul
add
sub
call
and
push
xor
xchg
out
lea
lds
adc
test
mov
adc
jmp
pusha
inc
adc
push
mov
stc
xor
out
push
aaa
ja
xor
xchg
fnsave
and
ficompl
lods
js
jmp
jge
mov
call
sbb
mov
adc
adc
ret
push
add
and
lcall
bound
das
cmp
test
or
sub
jnp
sbb
clc
xor
sbb
loopne
dec
in
xchg
jl
fs
xchg
dec
inc
in
push
add
les
pop
hlt
dec
sub
inc
adc
decl
in
arpl
stos
mov
fbld
test
or
movsb
jo
xchg
sub
or
fmuls
cmp
dec
mov
ret
outsl
lahf
push
arpl
or
nop
loop
gs
das
mov
lcall
popl
xchg
jbe
es
and
add
decl
xor
fwait
enter
sub
inc
xor
adc
cmp
inc
adc
mov
ret
adc
js
cli
stc
hlt
lahf
loopne
pop
pop
cmp
clc
lcall
or
xor
add
mov
mov
cld
aam
sub
ja
push
in
imull
or
inc
jg
jle
out
fnstsw
or
loop
lcall
sbb
adc
xchg
push
dec
jmp
addr16
iret
or
and
rcr
and
jecxz
fwait
push
shl
into
sbb
aas
jno
imul
in
cli
js
cmp
imul
inc
mov
in
mov
pushl
scas
inc
fcmovne
jb
sub
sub
data16
sub
fcmovb
clc
xor
mov
or
not
push
push
xor
adc
sar
or
pushl
pushf
inc
aaa
dec
inc
pop
shr
sti
bound
inc
in
test
sbb
test
cmpsb
push
fdiv
out
aas
mov
push
lret
fdivs
pushl
adc
pop
aas
jl
mov
jo
aam
dec
leave
int
mov
rorb
push
xor
xchg
das
imul
hlt
jno
fildll
dec
mov
popf
xchg
mov
es
insl
pop
setg
inc
aaa
ror
jmp
insl
lcall
cli
adc
add
jbe
xchg
cli
xchg
clc
in
and
lret
cwtl
mov
setbe
mov
sbb
inc
mov
mov
inc
sbb
fcompl
adcb
jmp
or
pop
out
mov
push
repz
xchg
jns
pop
inc
xor
sbb
and
jle
cmp
mov
push
push
fistps
sahf
and
push
hlt
pop
mov
jmp
fcomps
xchg
fmuls
mov
int
cmp
xor
call
xorl
cmpsl
or
add
push
pusha
and
scas
cmpb
jge
sbb
incl
xchg
out
mov
jge
push
or
add
cmp
ljmp
int3
fsubrp
mov
hlt
lea
mov
adc
mov
push
adc
mov
popa
cmp
scas
add
dec
pop
stc
arpl
lock
jl
or
inc
pushf
into
jg
mov
jno
ret
add
xor
pushl
fsubrl
xchg
sub
xor
dec
enter
aam
push
add
int
lcall
add
sbb
idivw
scas
in
nop
mov
dec
xchg
xor
mov
pop
fcmovnb
test
and
fistl
mov
mov
es
dec
insl
out
cmpb
into
lret
rcrl
call
mov
sti
jmp
push
add
ret
cld
sub
mov
hlt
fcomp
and
add
push
inc
add
push
sarl
push
or
add
imul
or
mov
pop
in
xchg
test
dec
jae
rcl
push
add
pop
mov
cmp
std
pop
call
xchg
add
xchg
inc
insb
gs
pop
cmp
data16
pop
scas
mov
decl
xor
leave
xor
jmp
decl
dec
lds
lahf
iret
jl
jle
jno
idiv
sub
adcl
das
ds
mov
scas
inc
cmp
mov
mov
mov
jp
and
subl
cmp
std
insb
xlat
xchg
pushl
fstpl
negl
int3
sbb
inc
test
pop
insb
ljmp
aam
lcall
jnp
nop
push
push
mov
xchg
das
sbb
lar
insb
sbb
cmp
outsb
clc
in
mulb
xor
push
js
das
push
mov
dec
aaa
sar
mov
scas
fdivp
inc
pop
cmpsb
test
fwait
jp
jp
stc
and
repnz
ja
inc
je
mov
jb
and
xchg
jns
xor
call
mov
mov
test
imul
mov
mov
mov
jmp
pop
pop
sarl
push
jne
xchg
insb
rorl
idivb
aam
jle
decl
nop
mov
pop
sbb
cltd
dec
jmp
jne
or
sub
call
sbb
jnp
sub
sbb
lea
and
aas
xchg
jle
sbb
test
xor
loope
sbb
pop
cltd
fadds
insb
orb
fwait
js
jg
cmpsb
xchg
xchg
stc
lock
test
and
in
gs
lcall
sub
movsb
mov
iret
scas
fisttpl
lea
imul
incl
mov
imul
lcall
mov
cmp
or
cmp
xchg
jle
decl
bound
test
push
lcall
adc
mov
push
fs
jae
lods
shl
scas
lcall
fildll
and
jmp
pop
aaa
add
jg
mov
pop
dec
sub
loope
jecxz
pop
loopne
js
pop
lea
inc
movsl
pop
xchg
inc
lods
push
cmc
aas
inc
push
and
decl
mov
cltd
mov
mov
xor
add
decl
das
shlb
and
lds
xchg
dec
les
ret
cmp
insb
test
out
pop
xchg
jnp
mov
sub
stos
int
fmul
pop
test
pusha
cmp
lods
sbb
xchg
xor
je
inc
lcall
xchg
popa
or
addr16
fadds
fstpt
jns
enter
lock
adc
nop
mov
cmp
mov
cli
mov
ficomps
shlb
incl
out
repz
push
sbb
and
sub
frstor
fs
int3
das
jmp
pusha
pop
inc
iret
adc
ret
dec
cmp
aad
loope
cmpsl
push
mov
fs
sbb
xchg
cmp
popf
cwtl
add
inc
fcomip
decl
adc
scas
cmpsl
jbe
mov
popf
or
inc
cli
jb
lcall
loopne
orl
dec
mov
ss
xor
lret
in
pushl
faddl
sub
xor
fnstcw
push
fwait
ljmp
ljmp
mov
pop
mov
sbb
xchg
in
sub
push
mov
mov
xchg
repnz
xor
sub
hlt
shrl
xor
in
mov
adc
push
call
inc
ja
in
ljmp
mov
pusha
pushf
bound
pushf
and
pushf
stos
xor
lods
ljmp
add
xor
orb
insb
call
in
push
jmp
loop
mov
and
stc
bound
or
loope
pop
xor
ret
loop
xchg
mov
nop
setp
push
ret
mov
cmp
pop
cmpl
xchg
lods
inc
xor
or
push
pop
or
xor
loope
ljmp
in
popf
mov
jmp
mov
stc
lds
adc
xor
push
inc
imul
mov
shlb
sbb
adc
mov
lcall
and
jnp
inc
jle
jb
cli
pop
loop
dec
pop
xor
cld
mov
jb
jns
ljmp
jae
outsb
mov
shrb
in
inc
inc
mov
ljmp
adc
loopne
or
sbb
xor
jo
ret
adc
movsb
imul
cltd
movsl
loopne
das
inc
bound
pop
cmp
pop
sbb
fwait
cmc
push
sbb
mov
pop
pop
push
mov
mov
pusha
sub
ljmp
or
sub
pop
mov
sahf
mov
hlt
push
sti
cmp
xchg
and
xlat
je
pop
jbe
and
adc
jle
iret
xlat
push
andl
das
add
data16
jmp
xchg
mov
fistps
call
adc
xor
out
sub
and
call
clc
rcrl
sub
cmp
notb
cmp
call
movsb
inc
cli
sbb
ret
mov
and
cmp
scas
lcall
lea
add
mov
loope
xchg
mov
adc
cmp
shl
mov
cmpb
xchg
lret
cli
enter
adc
sub
push
je
cmp
jbe
mov
cmp
int3
out
ror
xchg
or
imul
jle
pop
addl
jge
test
lods
in
xor
fwait
or
and
rolb
jno
lods
fnsave
sar
call
out
fists
andb
push
movsb
jo
test
out
je
ds
outsl
jns
cld
jg
xchg
pop
push
mov
insl
sbb
cmp
movsb
sub
mov
incl
shrb
jg
sub
mov
xchg
sub
cmc
dec
out
js
cld
incl
icebp
addl
aam
inc
add
cltd
movsb
pushl
mov
jl
mov
xchg
ja
or
gs
cs
hlt
mov
sti
jbe
ds
mov
cwtl
add
mov
add
iret
xchg
mov
xchg
xchg
jmp
fs
mov
jb
cmp
jg
mov
mov
mov
xchg
outsb
jno
adc
or
push
jmp
dec
sub
imul
test
pop
mov
inc
rdmsr
and
in
aam
or
add
jl
and
mov
iret
jecxz
hlt
aaa
lods
icebp
pusha
cmp
xor
dec
incl
pop
lcall
push
xchg
test
mov
jae
cmp
lock
call
rcr
fs
sub
mov
mov
subb
push
orb
xchg
roll
lret
ds
scas
loope
lods
pushl
out
test
call
mov
dec
adc
inc
test
cld
cmp
dec
add
and
push
movsb
inc
add
mov
call
out
mov
sahf
stos
out
clc
clc
mov
cmp
testb
adc
and
pushl
cld
std
xchg
aaa
pop
cmp
xchg
mov
sub
in
js
sub
xchg
inc
decb
pusha
ret
mulb
loop
push
jle
jb
dec
lcall
push
sti
mov
addr16
int
in
ljmp
movsb
clc
cmc
mov
cs
fwait
cltd
inc
mov
mov
arpl
mov
pop
push
out
push
jl
or
call
cli
sarl
push
es
dec
add
pop
in
mov
add
sub
mov
dec
and
adc
scas
mov
call
cld
push
ret
hlt
sbb
or
jns
out
mov
jo
ret
mov
or
decl
pop
and
or
mov
jle
sbb
sbbb
lcall
ljmp
fwait
lret
outsl
mov
mov
imul
push
jle
lods
fs
and
push
adc
sub
sub
decl
mov
popw
ret
cmp
push
movsb
mov
jge
jmp
cwtl
xor
loopne
call
mov
cltd
push
add
mov
out
cltd
adc
xor
es
fldz
sti
sub
adc
cmp
lret
push
decb
mov
and
incl
xchg
xlat
pop
ret
xor
add
dec
lret
jo
out
xor
jo
xlat
ljmp
mov
fwait
ret
js
cs
lret
cs
es
push
sub
sahf
sbb
repz
lods
std
pushl
lock
xchg
mov
inc
out
push
leave
pop
jge
fsubrs
loope
mov
fildll
clc
mov
insb
fbld
movsb
xchg
mov
clc
pushl
or
test
add
jmp
push
jnp
dec
das
cmpsb
dec
cltd
xor
cwtl
dec
cmp
inc
in
xor
xchg
adc
mov
sub
jno
sbb
cltd
and
and
xchg
sarb
hlt
cmp
pop
inc
cmpsl
pop
xchg
push
xlat
js
or
and
incl
push
mov
xor
out
test
arpl
mov
shll
xchg
sbb
insl
cld
movsb
mov
xchg
jns
aam
fbstp
cmp
xlat
mov
cmp
jne
push
add
ss
sbb
call
cs
lret
movsl
addr16
aad
loop
push
das
pop
mov
fcomip
mov
adc
pop
push
cmp
cwtl
xchg
push
xchg
lods
and
loopne
jmp
nop
fmull
scas
fsub
sarw
sbb
adc
sar
decl
inc
inc
loopne
stos
xchg
gs
add
xlat
popf
or
ljmp
je
sub
xchg
mov
lods
imul
leave
jns
fsts
loope
sbb
xchg
pushl
adcl
cld
xor
enter
jg
shr
mov
cmp
dec
stc
xor
rorl
pop
in
ljmp
or
stos
or
inc
cli
cli
xor
push
enter
sub
leave
xchg
mov
cmpl
adc
es
lret
inc
pop
rolb
lret
icebp
add
call
xlat
sub
jp
and
mov
test
test
fucom
xchg
cmp
jmp
cmpsb
sub
ficomps
push
roll
xor
sbb
adc
or
push
jnp
mov
gs
fildll
cmp
je
mov
arpl
sub
in
mov
lock
jg
xchg
xchg
into
or
movsl
ds
cmp
lahf
std
es
dec
les
rdpmc
xlat
pop
cmc
mov
pushl
shll
out
cld
pop
and
pop
cmp
adc
fists
mov
xchg
repnz
xor
adc
push
push
fwait
inc
cmp
mov
jne
cmpsl
lahf
cmp
decl
fisttps
imul
cmc
add
loopne
pop
cmpb
out
lods
loopne
pop
jl
sbbb
sub
sub
out
fcoml
xchg
or
push
divb
sarl
mov
hlt
pop
xor
cld
daa
ljmp
or
push
lahf
jne
push
adc
sub
je
or
enter
ja
mov
push
scas
cli
jg
mov
xchg
jb
scas
inc
dec
aas
fwait
add
cmc
inc
mov
jmp
xor
add
mov
andb
sbb
adc
fcmovb
incl
std
jb
mov
jmp
test
pusha
jae
add
mov
mov
arpl
mov
fnstenv
push
and
inc
xchg
cmp
std
mov
mov
mov
mov
test
adc
aas
push
push
push
outsb
pusha
mov
mov
lcall
icebp
fidivrl
outsl
mov
aaa
add
js
pop
jb
addb
inc
shll
mov
sub
push
popf
jge
mov
inc
mov
mov
inc
pushw
lcall
xor
notb
jle
add
sar
hlt
clc
ljmp
std
test
incl
loope
ljmp
push
push
clc
or
data16
mov
mov
out
ret
cmp
mov
cmp
lahf
cmpsl
sub
mov
fwait
test
jg
repnz
out
and
inc
and
mov
insb
imul
js
push
xchg
ret
inc
push
push
das
loope
mov
ljmp
jmp
call
mov
ss
enter
rorb
shl
sahf
pop
xchg
inc
push
mov
inc
insb
movsb
ja
xchg
ljmp
add
cmpsb
inc
in
out
mov
jle
fsubrl
movsl
pop
ret
push
fildll
test
ljmp
movsb
lock
cmp
mov
rorl
stos
add
sbb
ljmp
das
mov
fwait
xor
fidivrl
out
add
and
popa
push
sub
pop
mov
sbb
lods
cwtl
std
aaa
int
xchg
pop
lahf
lahf
add
sbb
rcrb
adc
or
mov
inc
adc
fdivrl
shll
push
mov
jnp
call
fistps
std
mov
test
lods
mov
test
loope
and
and
ja
movsb
into
loopne
mul
pop
cltd
ds
mov
incl
aad
sbb
xchg
add
or
shl
mov
adc
pop
cmpsb
repnz
ds
xchg
mov
das
xchg
int3
pop
dec
cmp
pusha
adc
cmp
in
movsb
fcomip
call
cmp
in
sbb
pop
and
ss
fists
scas
cli
ljmp
mov
nop
ret
in
adc
sarb
pop
push
shll
sbb
jg
cmp
and
rolb
jo
pop
jno
push
call
xor
xchg
mov
pop
shlb
cmovs
cli
mov
enter
dec
push
xchg
mov
mov
push
stos
cmpsb
lcall
mov
add
lods
cs
into
inc
or
jmp
lods
xchg
add
sub
in
sub
pushf
pop
loopne
xorl
jmp
loope
rcrb
sub
pop
fcmovnbe
push
sbbl
daa
sub
lcall
mov
cmp
cmc
cmc
repnz
xor
sub
mov
incl
test
insl
imul
mov
xchg
cmp
cmpsb
xor
push
ds
mov
rcrl
jmp
inc
sbb
test
lock
repnz
jnp
loope
lcall
push
aam
fdivs
mov
xchg
add
rcr
sahf
pop
jl
mov
xor
jle
and
lcall
jge
je
push
bound
mov
dec
popw
jp
push
inc
xlat
or
cmp
decl
mov
dec
lea
sti
dec
inc
or
fidivs
js
mov
je
pop
bound
lcall
dec
imull
outsl
jg
inc
add
mov
pop
pop
mov
and
adc
lcall
icebp
and
mov
leave
cmp
andb
test
leave
fildll
xchg
lcall
repz
jmp
add
adc
in
mov
jge
insb
ret
pop
rorb
shlb
js
adc
jg
movsb
hlt
popa
cmp
mov
and
jg
mov
cwtl
imul
mov
jo
jb
out
mov
xor
adc
fldcw
lods
into
push
ja
test
sbb
jl
lcall
jecxz
mov
lea
xchg
cmp
jb
loop
xchg
inc
lahf
fildll
adc
xlat
jge
test
add
push
xchg
stc
mov
idiv
jg
lcall
lock
pop
repnz
sub
xor
xorl
repz
jmp
inc
shl
arpl
out
inc
icebp
rclb
pop
sbb
sub
inc
cwtl
fs
push
imul
incl
or
ss
xorb
es
shlb
fisubrs
mov
mov
cld
fbstp
aaa
cld
decl
repz
add
decl
pusha
stc
lcall
cmpsb
and
inc
inc
in
push
push
incl
iret
rclb
ret
movmskps
stos
xor
ret
add
fdivrs
test
test
roll
mov
mulb
lcall
shld
imul
mov
data16
adc
pop
scas
mov
decl
mov
mov
jle
and
cmp
sbb
pop
adc
or
add
mov
mov
shlb
pop
pop
push
pop
lods
add
fstpl
adc
je
lods
test
fisubrl
je
cmp
test
bound
dec
inc
pop
mov
xchg
cmpsb
lock
outsl
sbb
clc
decl
dec
fiadds
sbb
lcall
adc
out
sub
ljmp
mov
aas
jp
out
ds
loopne
push
cmp
mov
cld
mov
ljmp
and
xor
ds
negb
pushl
orb
sub
ret
lods
fisubrs
sbb
in
lret
idivl
sbb
loope
cmp
mov
dec
in
fisttps
xchg
xchg
fcomip
test
cli
add
scas
lcall
or
add
fstpt
jmp
movsb
inc
loope
mov
rcll
int
in
mov
jg
jecxz
int3
pop
rorl
cmpsl
adc
sarl
aas
pop
cmc
jmp
mov
sbb
outsb
int
jb
scas
rorb
dec
rcll
jg
add
pop
and
and
sub
aas
cltd
mov
fcomp
dec
xor
pushl
jge
out
fwait
daa
push
ret
xor
loope
xchg
or
out
jbe
mov
cmp
mov
inc
or
ljmp
aam
mov
inc
adc
sbb
fwait
cltd
xchg
idiv
ljmp
jae
or
sbb
sub
jo
fdivl
movsb
sub
loope
cmp
std
test
mov
incl
sarl
lock
mov
fst
xor
jno
decl
lods
shrl
aad
jecxz
jecxz
sub
movsl
lahf
movsl
sbb
mov
dec
pop
imul
lea
dec
jno
je
call
xchg
data16
mov
inc
out
aas
aam
mov
je
movsb
xor
incl
cltd
fs
popa
xchg
js
out
and
adc
cmp
jl
pop
es
incl
daa
ret
lret
adc
xchg
add
cmpsb
mov
mov
pop
or
mov
lcall
sbb
mov
mov
iret
sub
fld
mov
mov
rorb
loope
lcall
pop
dec
push
inc
outsl
lea
stc
fwait
xchg
sbb
lcall
mov
sbb
add
add
jb
adc
jb
push
pusha
sub
pop
fstpt
push
xlat
out
lret
cwtl
fneni(8087
or
ret
fucomip
loope
and
mov
mov
xor
decl
mov
scas
jp
out
out
jle
and
fisubs
xchg
mov
andb
je
xchg
test
dec
ja
mov
pop
mov
xor
jg
cmp
fbld
lret
add
cmp
dec
pusha
push
clc
cld
mov
call
fidivrs
decl
mov
call
cmp
cmpsl
or
inc
xchg
out
js
fidivrl
out
dec
out
jbe
jo
mov
or
cs
inc
inc
jo
mov
ds
push
jg
decl
jae
jl
shr
adc
xor
inc
jo
fwait
orb
dec
insb
decl
adc
roll
jnp
ret
mov
shlb
loopne
test
dec
icebp
mov
inc
cld
cmp
imul
jo
push
ss
call
mov
in
sti
mov
outsb
jbe
and
mov
cmpsb
mov
xor
or
fdivr
ja
or
popa
js
mov
inc
pusha
push
insl
ss
jg
or
xchg
scas
mov
cwtl
es
lcall
in
mov
mov
push
mov
mov
dec
and
mov
lcall
adc
movsb
jg
fstps
loope
stos
mov
sbb
icebp
or
and
movsl
call
cld
ljmp
cltd
in
lds
cmp
call
call
sbb
xchg
mov
pushf
dec
xchg
xor
jge
repz
pmaddwd
loop
incl
aad
cwtl
test
ss
mov
push
cmpb
sbb
aaa
mulb
mov
popa
popa
mov
pop
pop
rep
mov
stc
or
out
movsb
addl
adc
or
jg
jne
ljmp
mov
out
inc
hlt
in
ja
in
in
mov
pop
int
in
sahf
push
stos
adc
std
idivb
test
cmp
sub
adc
shlb
rolb
dec
fs
loop
pusha
or
loopne
xor
ss
sbb
mov
ljmp
cmpsl
dec
cmp
sub
repnz
adcb
mov
push
lods
call
pushl
pop
sbb
mov
xchg
jne
sub
xor
xchg
fisubrl
and
imul
rclb
add
orb
jmp
mov
popf
stc
lcall
insl
add
or
and
mov
xchg
ret
mov
cmp
test
aam
add
out
pop
mov
call
mulb
sub
das
xchg
mov
iret
mov
mov
inc
xchg
fdivl
sbb
cmp
or
mov
push
in
adc
outsl
xchg
stc
faddl
ljmp
push
out
mov
ror
fmull
mov
dec
jg
xchg
pop
test
sahf
push
imul
stc
stc
incl
jp
out
je
les
addb
andb
add
jp
ja
das
in
call
jno
mov
addr16
repnz
xor
cmp
outsl
loopne
fidivs
icebp
enter
and
mov
outsl
leave
in
xchg
lods
pop
ljmp
mov
outsb
adc
and
push
aad
xchg
call
pop
inc
push
sub
adc
and
dec
sbb
stc
xchg
pop
xchg
cmp
flds
adc
lret
jle
push
cmpsb
inc
dec
xchg
mov
lcall
push
inc
adc
mov
cmp
test
std
out
sbb
testb
sbb
stos
xchg
jg
ljmp
daa
add
or
cli
xchg
add
ljmp
decl
cmp
cmc
jae
push
mov
xchg
ja
lea
lcall
rorb
jle
inc
mov
jnp
inc
push
inc
out
sbb
decl
mov
push
gs
in
outsb
pop
mov
mov
aas
mov
mov
in
jecxz
ljmp
sti
adc
lock
rorb
inc
loopne
jne
push
mov
inc
das
dec
add
mov
aas
pop
shrl
pop
cmp
ljmp
add
dec
add
lods
mov
cmp
shlb
pop
pushl
loope
pushf
sub
mov
test
sub
xlat
pop
mov
movsb
hlt
fcomip
shr
out
pushf
out
pushl
sbb
in
out
mov
jmp
sub
out
into
and
fldcw
orl
ljmp
mov
cmp
icebp
mov
in
enter
imul
pop
int
out
xchg
push
inc
hlt
xor
popa
pop
addl
ds
shl
test
jecxz
or
or
leave
imul
bound
jae
int3
ja
call
aad
mov
loopne
mov
jmp
jmp
dec
mov
push
or
mov
dec
negl
lock
std
movsl
leave
xor
and
xchg
xor
mov
sbb
inc
enter
adc
mov
inc
shll
adc
pop
mov
xor
sti
and
sub
into
test
data16
xchg
imul
addb
mov
dec
pop
push
dec
push
sub
sbbl
clc
std
ret
xor
sahf
mov
cli
mov
jo
adc
call
cli
in
cmp
loopne
loop
out
loop
inc
rcrl
rol
sbb
pop
dec
add
bound
inc
mov
insb
and
mov
in
rdtsc
test
decl
inc
mov
fsubl
push
xor
adc
aam
cld
jle
sti
xlat
push
sub
out
mov
jmp
es
dec
jle
leave
sti
aam
cmp
incl
add
enter
pop
xchg
insl
test
ret
or
mov
sbb
call
filds
jnp
lods
movsb
push
jecxz
adc
cmp
aaa
sub
xorl
hlt
jl
stos
lahf
fistpl
push
inc
sahf
outsl
push
cmp
jge
sarl
outsl
es
add
call
negb
lods
sar
cmp
or
sti
mov
jbe
rcrl
icebp
addl
daa
ret
jmp
cli
sbbl
push
movsl
mov
pop
movsl
mov
mov
pop
rol
add
rcr
dec
mov
sbb
cli
aad
stos
adc
sbb
ret
cmp
cmp
cli
loopne
or
cmp
dec
sub
bound
nop
in
insw
int3
lock
pop
push
mov
stos
mov
stos
sub
cmp
sbb
iret
dec
dec
lds
mov
decl
jae
icebp
aam
jl
cli
mov
inc
jle
xchg
pop
push
mov
test
xchg
xor
shlb
or
bound
pop
mov
ljmp
mull
call
into
adc
scas
icebp
mov
jl
outsl
push
mov
dec
jns
call
add
add
jbe
les
xchg
lds
aad
out
in
scas
loope
inc
nop
addr16
pushl
cmp
and
push
in
push
lcall
push
loop
mov
xor
arpl
shl
inc
cli
xor
pop
jl
outsb
cmp
pop
sti
mov
push
lcall
pop
push
cs
mov
cmp
pop
mov
test
mov
shr
sub
daa
push
push
jge
ja
lret
stos
negb
fs
or
stos
push
xor
add
dec
mov
pop
mov
loope
ljmp
call
test
aaa
inc
mov
xchg
in
cvtpi2ps
out
cmp
repz
mov
sbb
call
fcomp
fsubs
fdiv
movsb
mov
jbe
pop
popf
daa
mov
xchg
mov
insl
mov
lds
test
inc
jno
enter
test
call
fstpl
movsl
jecxz
imul
sbb
adc
push
call
jmp
dec
xor
enter
scas
lock
mov
mov
gs
mov
fmuls
call
call
or
cld
jg
jge
test
stc
sahf
mov
popf
or
aad
xlat
jbe
sahf
lcall
adc
lcall
or
cmpsl
fiaddl
out
daa
jnp
insb
adc
insl
call
sbb
call
cmp
or
orl
sahf
lea
clc
lcall
jle
in
pop
xchg
lock
add
enter
pop
push
fs
ljmp
lret
clc
fmuls
loope
into
imull
sub
pop
dec
or
mov
cld
out
lret
jb
mov
mov
xchg
xchg
inc
mov
mov
mov
stos
lds
or
ljmp
dec
mov
push
in
test
mov
jecxz
dec
push
sbb
in
dec
lret
jmp
idiv
push
push
decl
scas
insb
dec
test
add
gs
jmp
xchg
dec
data16
jb
std
rorl
push
mov
adc
xchg
adc
ret
jmp
notb
leave
xlat
xchg
mov
push
cwtl
loopne
mov
fldt
jg
hlt
xchg
sub
lds
jge
pop
aad
add
gs
pop
lock
inc
call
lret
cld
int
lcall
push
pop
out
enter
cld
sahf
test
jmp
js
add
int
sbb
jmp
fmuls
dec
inc
inc
or
xor
mov
pop
dec
loopne
cld
jl
push
sahf
loop
repnz
std
mov
aaa
stos
sarl
fs
das
ja
inc
cmc
popf
test
mov
aas
popf
add
jb
stc
pcmpgtw
sub
cmp
pop
push
xchg
jae
out
aam
cld
jb
xlat
jb
cmp
loop
into
fsubs
fmuls
js
out
add
push
bound
aad
decl
and
xor
incb
dec
outsb
mov
pop
push
sub
push
add
cli
jmp
cmpsl
cwtl
add
mov
lahf
jmp
mov
fadd
std
ljmp
jmp
outsb
es
ja
ret
or
push
jb
jne
or
fsubrl
and
mov
cmp
mov
les
push
subl
fstl
clc
lods
sub
add
push
loope
add
xor
push
sbb
mov
icebp
movsb
out
das
les
mov
call
pop
incl
adc
pop
daa
or
xchg
mov
mov
and
xchg
insb
shl
adc
add
cmp
lahf
mov
call
jle
pushf
mov
or
mov
fsub
adc
mov
or
cmp
stos
jns
jg
repnz
pop
pop
sbbl
push
or
add
mov
std
push
pop
mov
sub
lret
iret
adc
push
jb
lcall
adc
movsl
int3
jne
cmpsb
or
or
cmpl
jno
dec
sbb
popa
cmp
cmc
and
sub
mov
mov
sbb
push
out
push
adc
cmp
fwait
in
sbb
add
movl
ja
sbb
outsb
imul
dec
mov
inc
outsb
xchg
popa
aad
lea
xchg
scas
out
dec
add
inc
gs
cmc
mov
pusha
fdivrs
adc
adc
test
add
iret
pop
movsl
mov
xor
cmp
jle
lods
inc
icebp
pop
daa
lret
sbbl
cmp
lcall
sbb
por
stos
call
xchg
sub
sbb
sbb
sub
test
dec
into
out
mov
decl
icebp
push
mov
mov
cltd
xlat
or
in
repnz
add
orb
jne
mov
adc
mov
cmp
rcl
mov
xorl
out
fidivrs
sti
cmp
dec
push
xor
push
sti
xchg
xor
jmp
shl
rcrl
dec
pop
mov
cmpsl
push
loope
inc
xchg
jnp
fidivrl
dec
mov
stc
jne
xchg
mov
cld
xor
fmul
hlt
mov
dec
movsl
pop
xchg
lcall
push
dec
jne
sbb
pusha
mov
scas
sub
pop
sbb
mov
in
mov
outsl
loop
mov
test
cmp
aam
popa
or
dec
push
enter
ljmp
jns
sub
mov
or
push
pushf
jmp
scas
fs
push
mov
sub
mull
mov
or
jmp
in
mov
cmpsl
bound
cmp
jbe
xor
inc
jecxz
sbb
mov
fidivrs
sbb
mov
xchg
jb
pop
lahf
mov
xorl
xchg
pop
sub
pusha
jns
lcall
cld
ja
sar
jbe
xchg
adc
gs
cmp
mov
xchg
scas
sub
xchg
cli
pop
pop
sbb
aad
pop
clc
add
cmp
inc
notl
jg
movsb
ret
cwtl
add
fisubl
clc
mov
xchg
lcall
and
cmpsb
out
dec
adc
jae
jp
mov
mov
xchg
enter
mov
dec
out
addr16
movsl
leave
aad
cld
xchg
or
mov
adc
jecxz
dec
in
movsl
fsub
mov
cmp
jecxz
push
leave
sub
mov
xlat
pop
fmuls
jnp
pop
repnz
mov
mov
das
pop
mov
pop
jo
jnp
int3
and
stc
je
insl
or
push
cs
in
and
movsl
jmp
jns
outsb
and
jb
mov
pushl
pop
std
sub
mov
inc
mov
mov
cmp
subl
decl
xchg
inc
mov
inc
cwtl
adc
test
or
sbb
push
test
jg
push
mov
xlat
dec
outsl
jmp
push
clc
xor
sarb
push
das
imul
push
fdiv
jmp
lods
push
dec
mov
insl
jb
add
incl
pop
sbb
pop
and
sbbl
or
shll
fs
jg
jmp
fisttpl
aas
adc
out
push
push
popf
cs
outsl
movsb
inc
pop
lcall
xchg
jb
push
aam
jo
scas
mov
ljmp
fsubr
jl
arpl
pushf
sbb
xchg
cs
adc
cltd
inc
push
mov
fcomip
ljmp
imul
bound
lods
dec
mov
sub
fildll
sahf
ljmp
ret
jb
lahf
sbb
pusha
lret
pop
inc
fadds
cs
add
cld
addb
mov
mul
lret
cld
imul
std
and
shlb
add
jo
decl
push
dec
push
test
lods
mov
push
hlt
adc
xchg
ds
sub
inc
push
int
xchg
aam
mov
cmpsl
dec
stos
ja
movsb
jmp
mov
decl
push
inc
sub
and
mov
fcoml
push
mov
inc
outsb
lcall
xchg
loopne
push
dec
icebp
fcom
cli
mov
xor
daa
mov
cmp
stos
int
jg
pop
inc
loop
and
fmuls
add
adc
cmp
and
inc
clc
scas
ret
mov
fs
mov
pop
rorb
sbb
dec
cmp
pushf
cmpsb
mov
xchg
xchg
out
cli
movsb
or
xor
mov
cmp
pop
jecxz
mov
call
jbe
aas
lret
add
lcall
adc
scas
mov
lret
jl
aad
inc
es
les
xchg
mov
jmp
stc
mov
or
jg
xor
push
mov
pop
and
out
mov
repz
jne
cmpsl
hlt
mov
aas
test
pushl
fidivs
call
into
add
aad
xor
gs
aas
jo
sub
cld
pushl
imul
daa
fiaddl
lahf
pop
and
pop
jmp
jle
call
cld
sbb
inc
lahf
push
pop
push
push
sbb
gs
or
and
push
ud0
lcall
ljmp
rcll
push
cmpsl
pushf
jecxz
hlt
aaa
hlt
mov
cmp
push
adc
fldl
and
test
jnp
clc
decl
dec
jbe
adc
mov
mov
in
repnz
jo
cwtl
incl
ficomps
or
cld
pop
int3
sti
mov
jle
shrb
scas
negl
or
xor
mov
cld
inc
adc
test
decl
outsl
push
mov
int3
or
js
jecxz
pop
jg
adc
std
lcall
mov
int
rolb
bound
aad
ret
out
outsb
hlt
jg
or
flds
adc
bound
mov
xor
imul
xor
jecxz
decl
cmc
loopne
mov
push
jno
pop
mov
jmp
ficoms
adc
xchg
xor
xchg
incl
mov
xor
std
cmp
stos
lock
adc
movb
in
mov
fstpl
cmpl
incl
subl
shl
hlt
pop
mov
ret
pop
push
xor
sahf
lods
sar
pushl
xor
cwtl
shll
xchg
lcall
mov
jb
push
movmskps
jae
loopne
pushl
ja
inc
call
mov
sbbb
push
sti
cmp
push
lds
pop
call
sub
nop
lcall
loop
push
fildll
cld
jmp
bound
xor
fistpll
std
je
sbb
ljmp
mov
add
mov
scas
data16
mov
mov
jg
jge
or
push
sub
aam
push
mov
dec
pop
dec
call
mov
push
pop
fisttpll
jg
inc
xor
fnstsw
mov
xlat
stos
xchg
imul
mov
dec
jae
xchg
sub
mov
sub
sub
mov
sbb
fbstp
faddp
dec
out
gs
lcall
adc
incl
punpckldq
dec
jbe
xor
mov
arpl
mov
pushf
adc
jmp
call
inc
fs
and
outsl
iret
fs
int3
arpl
popa
fimuls
rclb
incl
adc
xor
arpl
cmp
cli
pop
sti
push
dec
out
jg
cmp
push
sub
xchg
int3
sub
inc
push
in
push
popf
es
jg
inc
test
sti
mov
loopne
adc
decl
icebp
jne
into
xlat
push
lea
adc
cmp
pushl
mulb
dec
inc
lahf
jmp
jl,pt
test
and
aad
add
pushl
mov
xor
xor
add
pusha
xor
cmp
test
dec
push
ljmp
sub
movsl
incl
adc
gs
sub
rclb
xor
dec
ljmp
mov
sub
stos
sub
xor
into
cld
sub
pop
out
pop
aaa
bound
cmp
call
out
push
dec
fs
cli
push
stos
in
jbe
push
loopne
sub
add
or
hlt
fisttpll
or
mov
or
sbb
and
leave
push
fisttpl
xchg
aaa
lcall
addr16
dec
mov
xchg
mov
jl
pop
clc
andb
ljmp
lds
mov
inc
pop
cld
rcrl
int3
data16
test
jmp
push
cmp
dec
push
imulb
arpl
out
and
ljmp
call
out
mov
xchg
out
ret
es
popa
stc
xchg
fwait
cli
pop
hlt
nop
sahf
outsb
test
jo
outsl
sbb
mov
aas
clc
insl
pop
dec
iret
and
cmp
jo
xor
inc
int
rorl
incl
test
xchg
insl
cmpsl
add
xchg
dec
mov
mov
pop
pop
pop
jns
ljmp
and
imul
mov
lcall
jmp
xor
popa
popa
ja
neg
arpl
and
jne
sbb
cwtl
cli
push
inc
dec
lods
push
and
mov
cmp
inc
int
mov
pushl
adc
fldt
fisubl
cmpsb
push
pop
pop
fwait
push
xor
push
cld
decl
inc
sub
xchg
sbbb
enter
adcl
jl
hlt
ret
ljmp
mov
dec
pushf
or
dec
js
add
pop
sub
sahf
test
or
lcall
lods
mov
sar
mov
pop
mov
mov
movsl
and
xor
jbe
aad
ror
int3
push
and
push
cmp
in
dec
push
das
add
incl
rorl
or
jne
test
jno
xor
ret
out
pop
lods
in
push
sar
in
call
filds
mov
and
mov
or
js
stc
mov
incl
call
pusha
repz
xor
lret
mov
mov
sub
lret
push
mov
ljmp
push
ret
adc
mov
pop
sub
mov
stos
out
xlat
and
mov
and
mov
fnstcw
push
mov
and
mov
insb
adc
jae
ret
mov
clc
sub
imul
adc
scas
mov
add
lock
lret
in
inc
xchg
fdiv
mov
adc
inc
ja
clc
incl
or
mov
push
cmp
cmp
adc
lods
sbb
decl
and
dec
mov
out
jo
jne
mov
bnd
or
rol
adc
and
ds
and
jae
int
decl
aas
roll
mov
lock
xchg
lret
sub
mov
xor
xor
xchg
xor
sub
jo
mov
ljmp
pushf
outsb
fwait
cltd
inc
cmpsl
push
ljmp
rcll
insb
lahf
mov
popw
pop
hlt
rcl
jecxz
ljmp
or
addr16
lret
or
sbb
int3
sub
hlt
push
or
insb
add
mov
pop
outsl
daa
out
fucomip
mov
je
inc
out
cmpb
neg
pop
push
mov
pop
aaa
xchg
xchg
jle
call
dec
shlb
jp
sub
fptan
mov
popa
loop
fdivrs
loop
mov
jnp
pop
ret
popl
nop
cli
sbb
cltd
sarl
aam
pushl
mov
mov
shrl
insb
stc
lahf
mov
nop
pop
and
xchg
ret
popf
stos
add
fistpll
push
fisubrl
outsb
lods
jo
scas
call
loopne
subl
sub
icebp
pop
pop
js
lcall
lds
ljmp
into
flds
sub
mov
jb,pt
adc
decl
fwait
movsl
data16
xor
mov
pop
jnp
lds
jnp
mov
cs
std
or
xchg
push
mov
imul
addr16
sub
jg
push
or
gs
loop
mov
xchg
cld
sub
cmc
out
shl
mov
decl
aad
dec
jecxz
loope
lods
sub
mov
je
xchg
cs
jmp
xchg
xor
sbb
pop
das
out
add
inc
fisubrl
jle
cmc
adc
in
pop
cwtl
push
out
clc
call
push
leave
nop
pop
fmul
mov
loopne
mov
leave
fadd
pop
pop
cmpsb
jmp
jmp
subb
imul
jnp
mov
jnp
data16
xchg
mov
ljmp
or
decl
fistpl
decl
inc
mov
fstps
adc
scas
in
or
cmc
inc
cmp
out
push
push
lea
add
out
sub
pop
sahf
add
push
in
cmp
jnp
aad
jmp
ja
cmpsb
xchg
je
cli
addr16
xor
jnp
push
dec
adc
sar
jg
mov
mov
out
fsubrl
or
call
mov
mov
pop
adc
in
inc
nop
cmpsb
lock
fdivp
lcall
mov
test
xorb
xchg
cltd
mov
jb
out
ljmp
pushl
std
inc
mov
inc
pop
jle
stos
mov
cmp
jle
frstor
cltd
pusha
jo
dec
mov
mov
inc
adc
popf
stc
aas
repz
jo
test
inc
cmpsl
pusha
mov
add
out
cltd
ja
rorl
ds
stc
push
push
xchg
ud0
not
mov
lret
lret
mov
fiaddl
and
pop
mov
pushl
pop
leave
mov
inc
scas
xlat
mov
loope
xor
mov
shll
std
ljmp
adc
popf
mov
imul
push
inc
adc
inc
addr16
mov
mov
js
or
sbb
mov
xchg
ds
arpl
incl
or
ret
cmp
ljmp
xchg
push
repnz
jle
mov
std
je
repnz
sub
fwait
push
xlat
adc
in
mov
outsl
aas
sbb
outsb
push
cmp
inc
inc
add
lods
pop
idivl
sub
lods
repnz
and
jg
jg
inc
push
mov
inc
fldl
pop
incl
jl
adc
push
mov
insb
dec
in
jae
push
sub
xchg
ret
inc
add
mov
sub
fisttpl
std
push
inc
adc
xlat
jae
cvtps2pd
jmp
test
imul
push
fdivp
lret
sbb
sbb
xchg
push
js
jmp
popf
fildll
pusha
or
icebp
mov
leave
mov
ljmp
popf
nop
dec
add
dec
or
test
test
data16
xor
inc
fxtract
insl
aam
cltd
mov
xchg
push
mov
rep
roll
push
pop
lcall
adc
mov
fnsave
push
or
shl
pop
pop
pop
adc
cmp
jo
nop
jg
lods
jl
mov
mov
xorb
daa
enter
call
daa
stc
repnz
test
popa
jmp
hlt
push
lods
dec
rcr
mov
in
lret
stos
pushf
xor
incl
sub
rclb
mov
frstor
jno
xchg
sti
mov
sbb
into
mov
call
or
sub
les
rcl
cmp
push
js
xchg
loope
lahf
data16
out
push
insl
test
jg
jmp
andl
fs
xchg
fisubl
test
js
xor
sarl
call
push
and
push
fsubrl
sbb
das
iret
jb
neg
mov
fisubrs
in
push
and
jns
mov
cmpsb
mov
dec
insb
cld
sub
ljmp
add
mov
sub
xchg
popa
fs
and
adc
push
jl
cli
loop
jg
lods
call
dec
stos
sbb
mov
outsl
lcall
xchg
xor
sbb
ret
test
pop
adc
xchg
outsl
pop
cmp
cmp
cld
fisubl
push
lock
cmp
jno
fsubrl
xchg
dec
mov
incl
testb
mov
ds
jnp
cmp
jmp
mov
call
xchg
add
xor
dec
ljmp
in
pop
or
add
incl
cld
inc
mov
aam
sar
daa
loopne
push
dec
adc
mov
jmp
sbbb
gs
fsubr
pop
sbb
clc
jg
andb
pusha
jle
dec
outsb
adc
iret
mov
out
dec
jae
aad
fwait
daa
lods
sbb
push
out
mov
mov
sti
add
jp
or
pop
in
subl
sti
jbe
loopne
std
mov
pop
jbe
in
mov
aas
or
ljmp
cmp
sbb
jne
test
movsl
add
add
orb
adc
sub
push
cs
call
jmp
arpl
adc
call
dec
pop
xchg
xorps
loopne
xlat
fbld
daa
int3
adc
jbe
inc
scas
push
mov
jmp
call
out
jge
push
jge
and
lcall
fdivs
outsb
out
jecxz
call
xlat
pop
mov
jmp
and
ss
xchg
dec
cwtl
insb
push
add
lock
out
repnz
mov
cmp
or
in
sbb
jp
mov
outsb
and
mov
jb
push
test
in
mov
hlt
movsl
jp
outsl
add
incl
out
add
shlb
les
inc
mov
je
lcall
xor
scas
out
mov
in
aam
jecxz
data16
mov
pushl
mov
xchg
lock
cmp
leave
out
mov
add
inc
jg
adc
out
insb
clc
mov
xchg
cmp
adc
call
sbb
lock
test
xor
adc
cmpl
dec
xchg
or
gs
lock
decl
gs
fnstsw
sbb
inc
in
mov
decl
mov
inc
test
push
mov
repz
ljmp
mov
adc
pop
cmp
jmp
fsts
pop
jo
fs
call
loope
test
call
xchg
mov
repz
mov
in
xor
scas
sub
push
out
push
mov
add
push
lods
je
repz
or
lret
dec
popa
fcmovne
jo
aad
int
jo
decl
mov
dec
or
jl
rolb
dec
lahf
push
xor
scas
mov
sbb
mov
dec
sbb
cmpb
jecxz
mov
xchg
sbb
inc
inc
inc
aam
div
stc
dec
ret
fildll
testb
adc
mov
mov
pop
stos
xor
inc
xchg
jnp
adc
repnz
movsb
push
incl
loopne
add
mov
xchg
push
or
xor
and
icebp
or
push
stos
dec
fstl
enter
das
shll
jg
decl
int
cli
or
mov
sbb
mov
lret
fcomip
lcall
test
jo
imul
mov
or
cli
push
fstpl
cmp
pop
sbb
mov
ret
out
mov
roll
ljmp
mov
and
adc
js
iret
sbb
aad
mov
into
dec
in
mov
mov
dec
xchg
mov
dec
mov
push
xorb
fcomip
inc
adc
outsl
pushf
mov
imul
jmp
stos
imul
clc
lds
pop
cmpsb
out
js
in
inc
insb
call
sbb
or
jnp
xor
es
fwait
fbld
scas
and
mov
fisttpl
jle
sbb
mov
sbb
loope
xchg
dec
ljmp
mov
or
or
ret
sbb
sub
adc
fldenv
mov
jg
test
or
rol
sbb
add
push
cmc
imul
js
sbb
inc
sub
int
or
adc
add
ja
jge
sub
xor
incl
ss
insl
push
cltd
scas
push
outsb
stos
aaa
sbb
inc
sti
dec
xchg
js
lea
mov
add
outsl
insb
cmpsl
lret
popa
arpl
mov
es
aaa
out
and
adc
mov
dec
pop
divl
mov
mov
and
insb
pushl
stos
jne
push
push
push
jae
cmpsb
xor
xchg
arpl
dec
loope
cwtl
push
add
int3
cmp
andb
testl
ljmp
cmp
lods
xlat
cltd
sub
aam
cmp
addl
arpl
push
enter
jne
pushl
sti
imull
shlb
scas
adc
inc
push
lock
or
mov
dec
xchg
loopne
mov
and
add
ljmp
mov
mov
sub
sub
push
pushl
cwtl
sarb
mov
leave
dec
loopne
inc
incl
faddl
andb
push
xchg
xchg
dec
aam
jmp
fdivl
insl
xchg
cmp
mov
mov
push
sub
cwtl
dec
gs
popf
jb
dec
shll
out
outsl
cmp
pop
push
inc
imul
mov
int
inc
xchg
sub
aad
out
pop
inc
sub
jnp
sbb
cmp
inc
jae
push
out
adc
mov
pop
outsb
ljmp
push
or
sub
int
mov
loope
jmp
pushf
sub
cmp
push
pusha
sub
pop
jmp
xor
shlb
xchg
mov
fbstp
jmp
pop
clc
mov
cmpsb
lea
jg
incl
pop
pop
leave
cmp
addr16
cwtl
mov
in
ss
mov
call
loopne
xlat
mov
sbb
lahf
dec
mov
push
sub
cmp
das
push
repnz
jg
add
fistpl
cwtl
das
sbb
fnstcw
hlt
test
jl
aaa
scas
adc
aas
adc
out
daa
out
fmuls
pop
and
incl
push
fstl
int
add
rorb
jp
mov
push
inc
jmp
jne
out
jg
es
outsl
iret
mov
xor
jecxz
in
sbb
jmp
pushf
push
je
mov
mov
add
xor
icebp
or
push
xor
mov
push
add
jns
sar
sarl
mov
clc
fdecstp
bound
sub
and
mov
aaa
xchg
out
clc
jmp
jmp
add
mov
lea
popf
xchg
js
fisttpll
int3
pop
ds
jno
mov
loop
and
adc
adc
and
ds
mov
negl
movsl
bound
ljmp
and
movsb
int3
adc
push
push
xor
mov
insl
add
aaa
sbb
jo
rcrb
adcl
cmp
movsl
mov
jmp
jge
mov
xlat
inc
hlt
or
sub
xchg
dec
sub
sub
jg
pop
jecxz
outsb
xor
xlat
push
loop
xchg
cmc
xchg
xchg
out
call
es
lock
fimull
cwtl
fdivrl
and
push
je
cli
or
xor
push
mov
pushf
jno
outsl
sbb
cmp
or
loope
sub
mov
mov
ljmp
shrb
arpl
pop
add
shl
fmuls
lret
stos
test
cli
xor
sub
cmc
lret
repnz
pusha
aas
into
scas
fistpll
fstpl
orb
out
sarl
mov
test
mov
sarl
or
push
je
adc
clc
jmp
lcall
clc
ljmp
outsl
es
cmp
js
or
mov
inc
aad
add
outsl
cli
and
and
pop
or
ljmp
jno
movsl
dec
cmc
jae
cmp
stc
inc
scas
out
add
push
jg
adc
add
out
rol
notl
cltd
scas
je
shr
mov
sub
incl
clc
inc
mov
sbb
cmp
inc
push
mov
and
fcom
mov
lcall
fdivrs
inc
rclb
inc
sbb
push
mov
sti
int
mov
outsb
cmc
rcll
or
inc
int3
movsl
imul
aad
lahf
xor
lcall
je
xchg
inc
mov
aas
dec
loopne
mov
js
or
mov
lcall
xchg
bound
repnz
push
and
test
pop
loopne
mov
cs
sahf
mov
js
mov
inc
pusha
cmp
loopne
or
cmp
leave
js
mov
jge
sub
enter
incl
ljmp
adc
je
push
adc
stc
push
or
xchg
out
decl
pop
jmp
rcl
mov
out
jno
cltd
cwtl
decl
repnz
mov
cmp
scas
fimull
aas
js
decl
sbb
sbb
and
pop
xor
mov
movsb
cmpsb
xchg
cmp
clc
inc
add
push
xor
cli
dec
test
adc
or
push
push
mov
xor
jmp
into
mov
jle
dec
pop
dec
adc
mov
sbbb
push
stc
and
outsb
les
stos
sahf
ljmp
sub
cld
xchg
int
sbb
testl
xchg
leave
call
cmp
in
int
in
push
nop
in
fcomip
lcall
lret
mov
and
sbb
int
cmp
mov
cwtl
push
mov
cwtl
dec
push
dec
cwtl
sub
inc
test
stc
sbb
or
inc
pop
out
ret
jle
jmp
call
lcall
mov
cmp
ss
out
test
ds
in
push
xchg
call
es
mov
sbb
movsl
mov
mov
xchg
mov
push
sub
int
xchg
outsl
cmpsl
jns
enter
sub
into
mov
popa
test
popl
pop
cwtl
sub
ljmp
ljmp
cmp
shrb
icebp
insl
aad
lock
cmp
jmp
inc
inc
fstpl
decl
aam
hlt
jo
les
ljmp
fidivl
pop
roll
pop
loopne
aaa
pop
fdivl
enter
jmp
incb
std
movsl
dec
ret
push
test
adc
aam
inc
dec
xchg
icebp
push
call
mov
pop
fimuls
popf
iret
add
adc
lahf
loop
arpl
mov
enter
sbb
mov
in
dec
mov
call
or
fwait
jg
cmpsb
into
pop
cmc
repnz
iret
popf
add
push
out
mov
add
call
arpl
xchg
sub
mov
mov
and
stos
lahf
mov
jge
loop
dec
call
fucom
inc
inc
fbstp
add
and
cmp
dec
sbb
cmc
sub
cltd
jle
cli
incl
dec
jmp
pop
mov
bound
xchg
lods
shll
cmpl
push
ljmp
imul
push
sbb
fpatan
shlb
pop
pop
iret
lds
popf
insl
adcl
loopne
ja
sub
lahf
pusha
and
xchg
notl
test
xor
pushl
ret
lret
xor
mov
pop
pop
lret
sbb
mov
addr16
mov
inc
ljmp
stos
mov
push
adc
pop
je
push
cmp
scas
xchg
fsubp
push
mov
lcall
insl
jnp
jnp
push
cmp
fs
mov
push
dec
push
jg
iret
jg
and
push
lods
adc
subl
fstpl
push
xchg
loope
ds
sub
int3
mov
jmp
clc
sti
ficoms
cmp
mov
lcall
push
rolb
xchg
mov
sbb
mov
sbb
sahf
jmp
mov
out
xchg
xchg
jp
mov
pop
test
cli
xchg
adc
pop
jg
test
subl
outsb
lret
lret
jno
imul
jmp
roll
testl
je
lods
into
cmpl
in
inc
xrelease
out
push
and
bound
movsl
add
pop
or
xor
jb
pushl
outsl
loopne
fsubrs
jns
mov
test
sahf
ljmp
in
jge
mov
sbb
sbb
enter
test
xchg
or
into
adc
or
push
sbb
test
es
in
lcall
test
pop
jecxz
in
ror
jns
arpl
inc
xchg
push
sti
mov
mov
dec
dec
mov
inc
cmp
add
dec
xchg
jnp
xorb
loopne
inc
sub
jmp
jge
sub
jns
and
mov
enter
add
jle
in
pop
loop
int
enter
incl
xlat
rcrl
shl
aad
cmp
test
inc
inc
jmp
nop
sti
xchg
iret
dec
cmp
call
repnz
lock
icebp
mov
jmp
pushl
lret
fstpl
in
test
rcrl
jbe
stc
ret
in
sbb
repnz
fisubrl
dec
pop
jmp
xor
ds
dec
mov
jl
mov
in
out
std
call
dec
dec
mov
sti
jbe
xor
aam
shlb
adc
std
icebp
fwait
lcall
shll
mov
cltd
cmp
stc
mov
pop
jp
enter
cld
lods
mov
test
inc
and
es
sub
add
fsubp
imul
sti
cs
scas
push
pop
cmc
mov
fisubrl
sbb
jne
xor
push
call
add
movsl
inc
sbb
aam
pop
lods
xchg
cmp
sbb
cmp
stos
rorl
cld
xorl
add
ret
sub
xlat
clc
xchg
xor
aaa
fimull
dec
and
lock
jmp
out
jb
cmpsb
and
cmp
push
mov
mov
decl
js
aaa
ret
lret
aam
lea
ss
je
mov
in
arpl
mov
add
lcall
adc
dec
jmp
xlat
mov
xchg
sbb
xchg
mov
mov
and
xorl
test
lock
stos
cs
push
inc
sub
ljmp
cs
loopne
das
mov
mov
shll
sbb
outsl
enter
dec
push
lahf
fstps
lret
aam
add
xchg
mov
das
stc
test
idiv
call
hlt
mov
xlat
in
stc
call
jmp
push
repz
jbe
or
movsb
xchg
mov
mov
and
in
inc
rsm
mov
hlt
call
inc
mov
sarb
sar
int3
int
and
cmp
xor
push
xchg
rol
aaa
sub
pop
lret
rol
test
fimuls
lret
les
dec
ret
adc
mov
decl
imulb
adc
inc
std
pop
and
insb
mov
out
clc
decl
mov
test
out
aam
pop
rclb
lock
pop
xor
incl
sbb
mov
scas
add
cmp
test
push
call
xchg
sub
jge
int
jl
mov
jnp
leave
inc
outsb
jmp
call
sbb
sti
pop
mov
cmpsl
xor
xchg
inc
push
sub
movsb
sub
pop
mov
mov
int
incl
nop
jnp
jge
sbb
sbb
rcll
xchg
pop
mov
test
adcl
pusha
sbb
stc
das
sbb
push
repz
lret
xchg
jbe
or
xor
jecxz
xchg
dec
push
sbb
jg
out
mov
jle
pushf
insb
test
in
cmp
insl
mov
in
mov
xchg
movsl
rcrb
idiv
sub
sbb
adc
mov
dec
loope
call
mov
iret
and
jb
adc
sub
mov
inc
or
add
jmp
mov
and
xor
mov
call
std
sti
mov
pop
lahf
je
decb
lcall
jno
pop
and
call
push
mov
inc
movsb
scas
dec
sarl
ds
jns
mov
or
dec
cmp
nop
adc
sbb
lret
aam
jo
or
push
jmp
test
movsb
dec
out
cmp
pop
and
or
xlat
out
inc
or
mov
jne
je
imul
mov
jne
jmp
xor
scas
mov
adc
or
les
mov
loope
jbe
out
adc
xor
imul
loopne
incl
mov
fwait
dec
outsl
ret
lock
sub
daa
cmc
xorb
cli
sub
and
test
push
jne
daa
int
push
mov
inc
and
aaa
mov
pushl
cmp
mov
loopne
cmc
into
nop
jbe
ret
push
dec
mov
jae
inc
scas
push
push
popa
cli
mov
mov
pushf
sbb
shll
fsubrs
mov
inc
imul
pushf
pusha
imul
push
cld
clc
pop
mov
mov
movsb
imulb
movsl
aam
cmp
mov
lahf
fistl
dec
gs
cmp
pop
add
push
movsb
test
or
je
push
jl
enter
jbe
jg
jmp
jnp
push
aad
loope
fwait
jl
repnz
es
xlat
inc
add
xor
cmp
or
sub
test
mov
dec
jmp
cld
shl
fsubs
into
or
sar
jg
jle
or
mov
cs
mov
dec
inc
rolb
dec
addl
in
xchg
sbb
fwait
es
jge,pn
jmp
pushf
push
cmp
mov
call
pop
mov
inc
sub
incl
dec
dec
incl
mov
cs
push
sbb
out
dec
mov
loopne
adc
decl
lock
lret
mov
nop
push
xchg
gs
popa
repnz
stos
ret
inc
lret
into
xor
movsb
arpl
jmp
inc
xor
mov
leave
xor
cltd
sbb
imul
lock
mov
inc
popa
out
push
in
ljmp
lret
jmp
pop
into
daa
adc
pop
lods
fimuls
ljmp
dec
pusha
repz
xor
sbb
xor
push
xchg
push
xor
xor
and
ljmp
ret
adc
loope
add
adc
sub
mov
mov
inc
push
jle
jmp
add
je
ja
cltd
add
nop
mov
mov
cmp
add
cld
jmp
imul
lds
jg
lods
sahf
ds
inc
mov
and
pop
cmp
pop
scas
mov
jl
inc
sub
clc
sub
cwtl
push
ljmp
push
js
mov
xor
xor
xchg
pop
mulb
call
sbb
mov
or
pop
xor
call
js
and
ret
daa
mov
mov
dec
aas
cmp
xchg
arpl
roll
and
or
sub
cld
jg
mov
mov
push
cmp
sbb
call
mov
pushf
cmp
int
call
ljmp
and
jg
leave
sub
sti
xchg
daa
push
adc
xorl
divl
inc
fldenv
orb
inc
loope
loope
mov
outsb
pop
mov
ret
push
test
mov
dec
leave
dec
aad
lock
pop
out
cli
inc
sbb
mov
test
mov
aas
bound
decl
pop
loopne
lcall
test
jo
and
jne
or
enter
jmp
pop
out
or
into
out
rolb
add
jns
out
mov
jmp
movsl
pop
fwait
or
push
jle
and
jecxz
push
adc
inc
mov
inc
fcomip
adc
and
cmpsl
dec
push
jge
jo
int
mov
outsb
jge
adc
jmp
sahf
cltd
scas
sbb
pop
add
inc
and
xchg
test
sbb
jg
int3
pop
rorl
mov
jg
or
lods
jge
jnp
lock
jge
icebp
mov
cmp
popf
mov
mov
xor
inc
ret
push
jnp
sarb
cmp
inc
xlat
call
in
ret
repnz
jns
daa
fwait
shr
or
nop
cwtl
scas
repnz
pop
aaa
aas
mov
jg
mov
clc
cltd
xorb
mov
les
push
fs
dec
les
inc
stos
cmpsb
sub
call
fcoml
lahf
sbb
push
int
sbb
orb
into
int3
leave
fists
aaa
sar
pushl
std
inc
pop
jo
pop
mov
aas
cs
aam
adc
jg
jg
dec
ljmp
xchg
jmp
pop
xchg
fwait
pmulhuw
lcall
es
inc
bound
stc
je
jle
push
icebp
rcrl
xchg
push
sti
mov
dec
and
js
sub
aam
mov
adc
dec
lcall
mov
push
rorb
stc
inc
cmp
popa
ljmp
in
adc
push
repnz
sbb
xchg
ja
push
shl
sbb
pop
and
mov
jmp
xchg
sub
pop
das
cli
aaa
add
in
lods
jecxz
insl
mov
flds
xchg
repnz
scas
sti
ja
inc
fadds
push
add
dec
rcl
pop
sti
call
push
loopne
cmpsl
mov
stc
into
ds
push
jbe
inc
adc
je
test
xchg
dec
into
dec
dec
mov
inc
ja
movsl
sbb
int3
scas
cli
pop
push
aam
imul
imul
rorl
or
ss
inc
cmpsb
out
or
push
pop
mov
rol
cmpsl
cli
fstpt
aad
fldt
cmp
mov
jle
mov
cltd
ret
call
add
shrb
mov
jecxz
nop
push
dec
cmp
jnp
xchg
call
sbb
insb
pop
pop
mov
dec
invlpg
cltd
testl
out
pop
cmp
enter
insl
imul
mov
call
and
xchg
push
adc
aas
sub
pop
push
lret
sbb
jmp
pop
add
adc
in
mov
push
test
sub
js
fimuls
push
cmp
jne
ds
das
or
int
scas
mov
and
push
sub
and
call
mov
jno
mov
call
jp
push
jmp
inc
repnz
adc
jge
xor
add
lock
cli
movsb
xchg
in
add
aam
daa
das
inc
arpl
imul
call
in
jg
lds
pop
push
lahf
stos
pushf
out
call
cwtl
clc
jmp
fildl
dec
pushl
repnz
mov
lret
cmp
xchg
fcoml
mov
iret
test
cmp
into
mov
or
fs
in
ljmp
cld
and
jl
insb
mov
xchg
out
push
fbstp
jnp
jns
incl
dec
mov
dec
or
mov
xchg
loope
inc
out
loop
inc
pop
ja
pop
and
decb
ljmp
mov
leave
xor
pop
insb
iret
sbb
xchg
sbb
repz
in
sarb
jmp
repnz
imul
jae
xchg
jo
outsl
fisubs
sub
lcall
shrl
loopne
fcos
decl
mov
out
repz
lret
pop
int3
sbb
and
clc
fdivrl
lcall
fidivs
int
lret
arpl
mov
pusha
stc
lea
inc
cmp
in
mov
jns
pop
clc
shlb
sahf
sbb
int
cmp
pop
aas
mov
mov
rcr
arpl
lcall
mov
add
and
mov
cmp
jmp
outsb
fildll
jae
mov
inc
mov
mov
mov
mov
or
cmp
inc
lcall
enter
les
or
js
lods
inc
lret
mov
lcall
pushf
fidivl
out
leave
lea
dec
loope
popa
into
fstpl
sub
cmp
cmp
push
sti
test
adc
sbb
adc
cmp
stos
push
and
in
mov
jnp
or
loop
pushl
std
incl
sub
pop
pop
pop
jle
mov
cltd
adc
cmp
jl
inc
decl
inc
les
std
ficompl
movsb
push
call
mov
or
shr
add
xchg
inc
mov
add
jg
int
add
outsb
in
pop
aam
int3
insl
mov
fists
push
mov
mov
repnz
dec
mov
inc
cmpsl
inc
bound
push
jbe
mov
inc
sbb
decl
lcall
shl
sub
mov
pop
adc
addl
dec
andb
notl
sbb
adc
push
or
std
decl
ret
addr16
jmp
cwtl
xor
in
pop
imul
cmp
mov
insb
adc
mov
xor
mov
xor
xorb
les
out
xor
mov
cmpsb
pop
std
pushl
loopne
push
sbb
cmp
mov
pop
hlt
decl
lods
aas
adc
sarb
xchg
mov
push
sub
mov
pushl
out
xor
daa
shll
inc
mov
fwait
push
cmp
out
decl
mov
lods
and
into
imul
pop
dec
push
push
sub
mov
mov
sbb
mov
dec
fcmovu
and
mov
jg
dec
outsb
jmp
push
lcall
out
sub
inc
aam
imul
jnp
shll
scas
jmp
cmp
dec
mov
lock
call
mov
popl
sbb
xor
push
cwtl
into
fildll
or
fdivr
push
rep
stos
jle
out
dec
cmp
scas
mov
dec
inc
mov
cmp
jns
popa
xchg
add
roll
mov
adc
xlat
xor
sbb
in
es
cmp
adc
xorl
ljmp
or
movsb
xlat
push
push
fwait
inc
ss
jmp
int
movsl
in
jmp
inc
cli
adc
imul
mov
lds
mov
ljmp
ret
out
mov
ficoms
pop
xchg
das
cmp
int3
jg
in
or
sbb
mov
jg
jmp
inc
push
jecxz
mov
fcmovnb
ret
inc
add
sub
mov
mov
lcall
cmp
jbe
dec
mov
jecxz
nop
jns
cs
addr16
outsb
cmp
mov
mov
adc
fcmove
pop
cmp
sub
mov
mull
loope
mov
call
xor
jge
mov
pop
adc
dec
repz
loope
mov
dec
inc
fwait
push
sub
les
cld
inc
pop
sbb
xchg
or
arpl
js
je
mov
mov
loopne
cwtl
push
sbb
int
decl
cmpl
lds
ret
addl
lcall
push
cmp
mov
mov
xchg
pop
pop
inc
insb
lea
pop
mov
es
gs
fists
mov
jp
aam
push
and
sahf
xor
jmp
repnz
cmp
push
mov
lock
stc
lahf
movsb
or
dec
lret
clc
xor
mov
gs
imul
stc
cltd
sub
xchg
jmp
ss
hlt
ror
shll
movsb
pop
iret
sbb
decl
add
outsl
out
jge
push
out
adc
sub
mov
ja
not
and
mov
add
jmp
imul
rclb
rorb
call
fdivl
test
sub
out
aaa
mov
addr16
fucomp
fprem1
and
xchg
das
in
dec
jbe
outsl
add
decl
jge
lods
push
pop
push
divl
push
mov
pushf
adc
pushl
push
sbb
cmp
out
adc
mov
cld
out
sbb
inc
and
mov
icebp
aad
rorb
stos
fcmove
push
loopne
sub
dec
nop
xchg
mov
call
inc
xor
adc
xor
inc
push
xor
dec
ljmp
jecxz
test
sub
adc
aaa
test
fistpll
les
xor
xchg
sar
call
mov
sub
jl
loope
sahf
fisttpll
ljmp
clc
jns
add
ret
pop
sbb
jge
mov
xlat
aam
call
mov
cmp
jne
loopne
sub
call
fcmovnb
repnz
dec
fisttpl
adc
stc
das
mov
mov
cmp
or
pop
mov
and
stos
sbb
or
call
cmp
pop
idiv
addr16
lods
sbb
pushl
adc
repnz
loopne
inc
das
lods
movsb
rcl
cld
cmpsl
movsl
sbb
push
push
in
or
loop
pop
cmc
jns
mov
mov
push
pop
gs
loope
push
sbb
loop
dec
popa
icebp
pushl
int
pop
push
cld
jmp
mov
mov
add
pop
cli
lcall
sub
push
lods
push
stos
dec
jmp
push
sub
in
pop
sub
mov
aas
cmc
pcmpgtd
jmp
dec
sub
shr
hlt
pusha
movsb
outsl
sbb
loopne
imul
mov
mov
pushl
idiv
stc
cmpb
and
ret
iret
js
cmp
mull
xchg
mov
call
or
inc
cmp
ljmp
frstor
loop
pop
cmp
popf
in
imul
sbb
sbb
fmuls
mov
mov
and
and
das
and
call
add
mov
popa
test
xchg
inc
mov
push
incl
or
scas
inc
xchg
and
fbld
subb
fnstenv
test
call
sti
imul
cwtl
pop
or
cli
les
or
push
test
repnz
test
fdivr
mov
les
stos
or
jp
xor
mov
fs
cld
call
and
popa
cs
lock
nop
mov
movsb
push
cmp
and
pop
aad
push
add
lcall
mov
fnsave
cwtl
sbbl
xor
mov
imul
jl
stc
and
std
sbb
inc
mov
sti
inc
out
push
xor
test
cmp
mov
loop
add
mov
sti
cwtl
push
ret
js
pop
add
decl
call
in
fcoml
adc
lods
adc
lcall
sahf
mov
xor
adc
sub
add
stc
ljmp
mov
jmp
repnz
mov
stc
aaa
imul
add
mov
or
repnz
out
hlt
add
bnd
or
sub
addb
add
repz
pushl
aas
aam
and
inc
leave
roll
addr16
mov
push
sarl
clc
sub
and
out
jnp
pushl
lret
xor
cmpsb
shll
cmp
mov
sbb
pop
iret
xor
lock
dec
push
orb
add
stos
std
call
popf
andl
push
sub
push
repz
sbb
mov
call
aaa
mov
cld
mov
xchg
jl
sahf
jne
insb
inc
shrb
test
scas
fisubrl
not
cs
in
push
ret
dec
dec
sub
xor
cld
xor
jne
mov
fcomp
xchg
mov
and
pusha
mov
arpl
pop
mov
stos
cli
imul
jnp
adc
call
fwait
jle
inc
lcall
add
cli
rolb
fstpl
push
mov
cmp
push
jns
in
or
mov
popf
in
push
movups
cmp
ljmp
loopne
popf
out
andl
ljmp
or
aaa
jmp
in
xor
cmp
insl
sbb
jae
incl
jg
insl
int3
mov
pop
cmpsl
cmp
faddl
movsl
mov
fisttpll
jmp
scas
ror
loope
and
xor
fistpl
dec
dec
cwtl
jmp
add
pop
inc
std
mov
pop
or
push
bound
push
adcb
jbe
push
sub
cmpsl
adc
mov
lods
jnp
add
cmp
pop
data16
push
or
test
out
clc
push
ficomps
adc
in
xchg
faddl
inc
cmp
outsl
decl
lea
and
icebp
loop
jle
sbb
mov
nop
jmp
fadd
pop
cmp
ljmp
pop
xchg
jb
scas
out
sbb
sbb
test
mov
repz
cmp
inc
or
push
scas
out
call
and
dec
sub
rcrb
call
adc
mov
jno
jno
shrb
xchg
outsl
in
ret
adc
out
push
lcall
mov
lods
push
call
lcall
mov
dec
pop
sbb
lret
scas
push
push
sub
lcall
mov
dec
mov
stos
sub
cltd
call
add
out
incl
dec
mov
lahf
mov
inc
sbb
cltd
pop
repnz
mov
pop
mov
sti
jmp
sbb
aam
test
shl
out
daa
cmpsl
ja
cmp
jg
call
in
out
cltd
pushf
and
mov
push
pop
mov
sbb
decl
cmp
cmp
mov
pop
mov
xor
jl
aam
or
repz
push
mov
mov
insl
sbb
dec
xor
test
inc
xchg
aam
sarl
pop
jae
decl
out
jnp
pop
xchg
in
xor
mov
sti
cmp
out
lcall
in
sbb
mov
add
mov
xor
fistpll
ret
sub
cmp
push
push
push
lret
mov
imul
data16
inc
cwtl
daa
cmp
xchg
clc
pushl
push
add
inc
push
scas
xor
loopne
movsl
test
cmpsb
sbb
call
int3
xchg
sub
add
std
fsub
dec
dec
sbb
lcall
mov
in
out
ljmp
push
nop
jg
sahf
dec
pop
mov
and
sti
xorb
mov
mov
lea
or
xor
jmp
adc
xor
lods
je
jge
mov
fcompl
push
inc
sub
call
push
bound
push
popf
shrl
push
pop
lods
bound
xchg
shll
outsl
cmp
ret
in
inc
cmpsb
push
add
inc
hlt
lock
jge
arpl
rclb
aaa
pop
ds
movsb
ret
cmp
pop
data16
jae
shrl
sbb
aam
cmp
xor
sbb
pushl
add
push
cltd
mov
lock
pop
insb
cli
ficomps
pop
mov
jnp
lret
lds
pushl
fimuls
add
xchg
sbb
adc
mov
fwait
add
inc
leave
insl
mov
fildll
push
lods
cmc
dec
sbb
mov
add
das
inc
xchg
mov
ficompl
cld
jg
cmp
into
and
mov
mov
jmp
inc
push
test
aam
loope
dec
call
insb
int3
pop
ja
scas
and
push
mov
add
mov
and
test
mov
jge
inc
cmp
or
clc
xchg
icebp
mov
in
out
sahf
orl
xor
adc
mov
in
enter
cmp
outsl
cmp
jmp
shll
loopne
push
jno
jle
rclb
pop
inc
pop
mov
popa
mov
push
jmp
dec
mov
lret
cs
lock
pop
push
outsl
ficoms
in
aam
fs
pushl
std
xor
divl
pop
movsb
xor
push
popf
add
dec
sbb
xchg
je
mov
add
xchg
add
mov
sub
jg
mov
cmpsb
or
shl
jb
repz
jmp
jle
popa
idivl
fiaddl
cmp
inc
inc
mov
iret
jno
shll
jg
scas
ds
jmp
dec
rcll
enter
adc
xchg
inc
aaa
inc
in
shrw
and
sbb
adc
add
call
dec
sub
pop
xor
jno
push
test
xchg
push
inc
outsl
mov
out
ljmp
sbb
daa
push
pop
mov
pushf
push
dec
push
scas
mov
sbb
imul
call
xchg
test
adc
and
cmp
mov
xchg
decl
scas
scas
xor
jmp
arpl
pop
pop
mov
cs
push
or
sub
pop
cli
mov
add
incl
pop
iret
pop
jl
movsl
push
mov
mov
sbb
jl
xchg
and
jo
mov
ljmp
inc
sub
stos
test
lds
dec
es
cmpsl
test
pusha
adc
in
leave
jmp
push
rclw
xchg
scas
sub
mov
mov
lret
xchg
and
loope
lcall
std
cmp
jns
sub
pop
rcrb
sub
adc
adc
das
mov
bound
scas
nop
in
push
jno
mov
add
fs
lahf
xlat
jl
lahf
ljmp
pop
sbb
repz
addr16
mov
cmp
pop
jg
xchg
mov
incl
pop
add
in
sub
test
jge
pop
push
imul
outsl
ljmp
add
decl
out
xor
cmpsl
dec
dec
inc
mov
out
dec
inc
cli
push
pop
cwtl
dec
pop
mov
out
push
fwait
or
sbb
ljmp
or
ljmp
mov
adc
xor
repnz
push
push
int3
in
mov
fsubrs
adc
jmp
notb
mov
xchg
les
clc
es
loopne
xchg
dec
pop
sti
dec
sub
loopne
inc
adc
inc
xchg
and
dec
stos
mov
wrmsr
popa
pusha
mov
out
mov
mov
cmp
jg
pop
bnd
lods
cmp
add
jae
add
xchg
sub
lcall
mov
adc
xchg
mov
scas
aas
sbb
inc
cli
outsb
ret
jo
and
sbb
jg
dec
lcall
adc
in
jle
cli
xor
dec
and
call
popa
push
jno
add
jns
daa
jbe
xchg
test
nop
pop
pushl
arpl
andl
mov
insb
std
aaa
mov
stos
mov
push
sbb
out
leave
scas
pushl
mov
aam
jp
ljmp
jne
lods
lds
out
cli
add
cmp
dec
clc
repnz
js
repz
adc
das
ljmp
mov
jno
icebp
mov
ret
jl
pop
lds
jb
popaw
cmp
stos
les
or
in
mov
addr16
iret
movsb
jg
jmp
push
cmpps
notl
jae
push
loope
out
arpl
decl
fs
cmpb
sbb
arpl
mov
mov
fcoms
decl
adc
jmp
movsl
inc
cmp
jae
sub
ljmp
xor
dec
push
xchg
inc
xor
adc
xchg
mov
pop
icebp
jle
call
jmp
add
fildll
or
adc
aam
daa
jecxz
xlat
std
adc
in
jnp
stos
stos
mov
test
ja
push
jge,pt
imul
dec
in
int
add
incl
sub
inc
jne
mov
aaa
sbb
nop
jge
incl
mov
and
pusha
mov
outsb
mov
push
imul
test
push
sahf
ljmp
ficompl
mov
xor
ds
inc
push
xor
loope
cmp
decl
imul
test
pushf
test
jnp
shl
cld
mov
ja
jbe
jg
test
hlt
cmp
pop
out
enter
and
call
push
xchg
bnd
jmp
popa
or
iret
cmpl
movsb
sub
and
push
stos
loope
dec
mov
sbb
call
out
sub
push
std
pop
nop
push
mov
lcall
mov
gs
lret
decl
mov
pushf
nop
adc
dec
call
mov
add
clc
insb
ljmp
cwtl
mov
aaa
xchg
scas
out
mov
js
sub
outsl
test
and
inc
pop
fs
lret
xchg
cs
inc
imul
call
jo
imull
inc
mov
xor
sbb
mov
and
adc
cmp
incl
or
mov
icebp
mov
in
inc
andl
pop
loop
out
outsl
ss
incl
test
pop
test
jmp
jo
and
daa
ljmp
imul
cmp
xor
cmp
js
xor
push
push
test
scas
cli
jmp
inc
aad
mov
inc
call
sti
sbb
push
and
push
pop
adc
fcomip
pop
enter
es
mov
sbb
lods
adc
and
mov
movsl
lds
sar
incl
cli
into
cli
mov
stos
pop
cld
outsl
sub
ds
mov
sahf
mov
sarb
push
pop
jmp
daa
leave
sbb
in
xor
mov
in
daa
mov
mov
in
insl
inc
mov
xor
nop
loope
mov
clc
cli
jns
pop
xchg
pushf
out
mov
int3
sub
add
into
sub
jecxz
call
jae
test
mov
pop
cmp
sub
push
les
add
aad
jno
jge
pushl
mov
ret
add
sbb
mov
xchg
inc
std
inc
sbb
or
or
loopne
ss
mov
xlat
sti
mov
fwait
lcall
repnz
xchg
in
add
arpl
pop
and
xchg
mov
movsb
ds
dec
lds
lcall
mov
in
inc
xchg
cmp
xchg
mov
aad
decb
into
inc
lcall
lods
jg
fmulp
lock
mov
or
push
inc
lea
ret
fs
cwtl
lods
pusha
int
dec
xchg
test
mov
fildl
in
push
inc
pop
sub
pop
inc
lock
fwait
jae
mov
mov
jmp
jmp
mov
sarb
mov
pop
xchg
imul
push
loopne
sub
push
or
mov
fdivrs
mov
dec
mov
xchg
sbb
push
ss
or
pop
xchg
jbe
ror
stos
dec
inc
js
cmc
cmp
add
stc
add
xor
fistl
enter
mov
decl
and
idivb
fcoms
scas
lods
push
mov
pop
aas
and
movsb
mov
xchg
mov
pop
pop
mov
add
jmp
mov
stos
fdiv
sarb
filds
loope
mov
or
dec
dec
into
inc
mov
mov
jge
xchg
xor
leave
sbbb
xchg
xlat
mov
mov
mov
fbld
movsb
sub
mov
mov
mov
ljmp
aas
xchg
aaa
or
jbe
mov
sub
inc
pop
adc
test
push
pop
stos
mov
in
call
jmp
cmp
subb
dec
subb
call
stc
xchg
jecxz
cli
ljmp
fmull
mov
sub
add
mov
cld
lcall
pop
jne
enter
jnp
inc
and
inc
jl
mov
pop
push
dec
dec
fiaddl
xlat
add
pop
lret
mov
ds
sbb
lock
ret
mulb
pusha
lods
jl
aad
scas
cmp
cs
and
in
xchg
fimuls
lahf
into
ficoml
in
xlat
ljmp
cmp
es
mov
idivl
cld
loop
cmpsl
lock
pop
lods
dec
add
mov
jmp
add
mov
pusha
scas
xor
out
call
imul
add
imul
outsl
clc
dec
outsb
adc
or
jle
clc
cmpl
or
jo
cli
call
mov
imulb
call
je
jnp
dec
dec
jae
sbb
mov
nop
add
scas
xrelease
jmp
ljmp
gs
cli
popf
xor
fcomps
mov
jbe
stos
pop
lcall
lahf
add
inc
ss
mov
pusha
cmp
bound
mov
xor
adc
sub
mov
sub
push
cmp
popa
xchg
and
pop
std
pop
pop
inc
dec
stos
aaa
mov
aad
xor
xor
push
mov
cld
decl
sub
cmpsl
inc
aas
or
enter
xor
sub
incl
repnz
jo
mov
clc
or
adcl
dec
dec
mov
das
test
inc
push
dec
xchg
cmp
mov
ret
pop
push
xchg
inc
lahf
cmpl
jl
lahf
dec
mov
lea
push
jle
push
cli
cmc
push
seto
xor
inc
push
sub
push
push
or
mov
std
cmp
and
sub
mov
xchg
push
push
aaa
pushl
pop
xchg
insb
scas
jno
adc
popa
inc
push
lock
sub
and
mov
xchg
dec
lret
scas
xor
jne
nop
mov
imul
mov
ljmp
pop
or
sub
mov
xchg
js
aad
sbb
xor
cltd
in
imul
std
js
add
xchg
push
stos
xor
mov
mov
push
ds
pop
push
cmp
adc
loop
loop
dec
clc
das
fadds
jmp
push
or
bound
jl
in
sahf
push
sbb
and
shrl
xor
decl
dec
scas
pop
aaa
and
mov
shrl
cld
jg
mov
ret
scas
add
dec
and
jg
lods
pop
or
sub
stos
insb
std
jge
xchg
mov
std
movsb
lcall
push
ja
pushf
pop
adc
jbe
and
call
mov
dec
mov
call
xor
aad
fmulp
cltd
jbe
adc
cmpsl
call
and
loopne
push
and
dec
sub
dec
in
popf
je
mov
sbb
insl
out
imul
in
lcall
mov
shrl
xchg
jb
push
shll
sahf
sahf
mov
mov
cmp
ljmp
cld
ret
adc
repnz
sub
imul
and
fcomip
jecxz
int3
push
add
pusha
inc
jne
mov
push
test
js
dec
test
cld
mov
sbb
sbb
int
sub
icebp
push
or
pop
jno
push
inc
sub
ljmp
mov
xchg
and
les
repz
test
iret
fisubrl
mov
inc
aam
mov
cmc
movsb
inc
push
jno
pushf
and
sbbb
mov
jmp
fnstsw
push
xor
dec
sbb
jg
mov
push
xchg
es
adc
sbb
clc
lret
push
push
je
mov
mov
adc
out
jmp
mov
stos
inc
mov
ds
sbb
dec
rcrb
sbb
inc
and
fimull
fsubr
cltd
test
dec
cwtl
aad
jge
fbld
data16
xchg
sbb
cs
stos
je
mov
pusha
shll
and
add
out
insl
bound
fldl2e
push
cmc
das
testl
push
into
cmp
cmpsb
cmpsl
inc
popf
dec
ret
pop
ja
sbb
add
fisubl
and
test
adc
jmp
lods
xchg
out
mov
or
test
jae
cmpsl
bound
mov
mov
and
cli
adc
pop
mov
mov
fistpl
lcall
enter
in
popf
or
mov
add
push
mov
sbb
mov
pushl
mov
out
lahf
mov
fnsave
pushf
push
leave
ret
pop
inc
xchg
fsubrl
mov
fcomip
stc
inc
mov
dec
fnsave
int
fstpt
ljmp
pushf
pop
cltd
and
push
decl
push
imul
mov
pop
inc
out
rcr
pushf
cmp
outsl
xor
stc
push
xchg
add
pop
hlt
inc
aaa
addr16
test
cmp
pop
ret
loope
pop
nop
imul
stos
cld
popf
push
cmp
jmp
mov
mov
in
mov
push
movsl
test
movb
sbb
fcomip
incl
int3
cmp
inc
shlb
insl
cltd
sbb
out
jg,pt
ljmp
xchg
movsl
fs
cmc
and
inc
je
or
scas
jg
cwtl
call
call
jle
stc
mov
mov
in
xor
push
stos
inc
aas
das
call
mov
jg
incl
testl
imulb
icebp
sbb
sub
call
pop
gs
mov
push
cmpb
push
jmp
jno
test
mov
repnz
ljmp
sti
sub
notl
xorb
xor
add
sub
mov
insb
add
call
mov
aad
fildll
imul
xor
mov
fsubs
icebp
cmp
cld
into
icebp
cli
jns
sar
xchg
sbb
xor
or
sarl
sbb
mov
movsb
cmp
and
push
mov
xor
push
cld
push
pop
data16
aad
lret
hlt
mov
pop
mov
sahf
repz
pop
pushl
push
jle
popa
jmp
in
cmp
jp
pop
testb
push
adc
push
loopne
fnstsw
ljmp
adc
daa
and
sub
out
ret
mov
xchg
add
mov
imul
cli
fs
lcall
pop
xchg
push
jmp
pop
cmp
jb
daa
decl
inc
mov
in
sub
push
lock
jns
hlt
mov
sub
jbe
ret
clc
adc
decl
sbb
std
jbe
sarl
dec
jecxz
sahf
rclb
mov
test
lcall
fwait
add
test
sarb
jb
pop
stc
inc
cmp
push
adc
pop
insb
call
rcll
fcmove
int3
sbb
scas
cmpsl
insb
pusha
ds
lea
mov
cwtl
mov
inc
in
clc
mov
jae
cmp
mov
rclb
push
mov
mov
ljmp
test
loopne
jp
mov
mov
nop
adc
leave
dec
test
sub
jno
leave
loopne
push
xchg
mov
ljmp
add
stos
jno
xchg
and
inc
mov
adc
fistpll
mov
jmp
in
scas
cli
xlat
or
ret
popa
xlat
jne
cmp
iret
and
lahf
push
fistl
mov
or
and
cmp
call
into
jae
das
loope
pushf
ss
sub
stos
es
jg
lods
faddl
mov
sahf
mov
jmp
xchg
icebp
dec
out
jecxz
call
mov
xor
flds
cmp
adc
pushf
fwait
mov
scas
sbb
push
inc
sub
stos
xor
mov
sub
sbb
fwait
and
dec
cmpsb
pop
mov
fsub
add
call
cmp
inc
test
sub
sub
xchg
pop
mov
loop
decl
shl
xor
and
dec
sbb
sbb
sub
lcall
push
and
movsl
shlb
pusha
mov
leave
mov
popf
std
mov
ret
repz
cmp
lret
ljmp
add
mov
mov
xchg
in
add
std
push
cmp
leave
repz
cmp
decl
cld
into
idivl
pop
fisttpl
cmp
ficoms
subl
xlat
push
adc
pop
mov
in
scas
aas
cmp
push
test
mov
sub
jmp
les
fimuls
mov
sub
mov
loop
pop
add
xchg
mov
jp
add
decl
lock
lcall
repnz
ss
pop
xor
test
mov
add
imul
jmp
jno
lret
xchg
repnz
aas
popa
sub
incl
dec
mov
xchg
test
lret
ljmp
imul
ljmp
dec
jmp
test
cltd
popa
jmp
movsl
pop
sub
add
movsl
nop
loope
add
mov
lds
xor
incb
xor
xor
into
or
call
roll
jge
cmp
mov
int
loopne
addb
pop
lock
clc
dec
dec
fwait
mov
in
xchg
rclb
fcomip
or
sti
mov
sbbl
mov
incl
pushf
xchg
mov
std
inc
imulb
lds
nop
int
lods
pop
ja
lock
cs
aam
and
xchg
je
jg
bound
adc
xor
push
ss
out
or
push
cmp
xor
in
call
inc
xor
lods
mov
xchg
das
xchg
cmpsb
mov
aaa
add
jns
int3
mov
mov
mov
aas
imul
outsb
mov
or
xchg
and
cmpsb
dec
shll
test
je
ja
jmp
in
jmp
mov
fucomip
fs
sbb
daa
popf
xor
add
pop
aam
and
outsl
mov
stos
ljmp
scas
or
pop
std
negb
jg
ljmp
xchg
insb
scas
cmp
ds
lcall
and
inc
es
mov
ja
pop
insl
es
icebp
mov
pop
aad
cwtl
cmp
repnz
sti
xor
daa
daa
leave
cmp
sub
les
movsl
lods
inc
sbb
adc
pushf
jae
mov
push
jg
mov
jbe
imul
push
lcall
sub
shrb
inc
push
push
push
test
sub
xchg
js
call
pop
in
mov
fnstsw
pushl
pusha
popl
mov
imul
mov
scas
pcmpeqd
int
outsl
ret
pop
push
lcall
sub
pop
add
mov
sbb
mov
xchg
aaa
aaa
daa
dec
cmpsb
data16
lcall
adc
sarb
lahf
fsub
and
xchg
aaa
mov
inc
adc
ss
xor
ficoms
addr16
push
mov
clc
jmp
mov
aaa
ja
imul
getsec
ds
inc
adc
pop
lret
pop
xchg
dec
pop
add
insl
clc
mov
in
jle
cli
pop
mov
cld
or
divl
jge
in
or
pop
int
add
pop
out
mov
std
inc
cmpsl
push
lret
mov
inc
inc
jg
scas
sahf
fistpl
mov
add
js
add
in
mull
ss
add
lret
incl
popa
in
jl
fdivl
fidivl
push
dec
fwait
sti
pop
iret
leave
cld
sbb
pop
idivl
enter
imul
push
nop
push
nop
mov
pushl
mov
push
cs
inc
js
lock
sbb
or
rorl
pop
incl
lahf
arpl
pop
jle
mov
and
mov
decl
decl
adc
iret
sbb
stos
neg
xlat
pusha
xchg
sbb
out
hlt
insb
mov
scas
addr16
ret
cmpsb
inc
push
mov
or
inc
fcmove
out
rcrl
stos
jae
pushf
push
dec
pop
pushl
push
vcmpss
imul
ljmp
adc
stos
inc
jb
sarb
fwait
push
cli
mov
rcrl
push
pop
iret
pop
dec
xchg
push
jge
fdivr
call
sbb
pop
jno
add
pop
add
clc
xchg
xlat
mov
loopne
pop
fsts
lret
outsb
scas
test
sbb
push
push
pop
jb
enter
jnp
decl
movsb
mov
jg
sti
pop
mov
ja
dec
cltd
repnz
sti
test
xor
cs
ljmp
push
jnp
mov
pop
sarb
add
inc
leave
outsl
or
fucomip
jecxz
incl
lret
cmp
inc
cmp
jle
push
das
movlhps
loope
mov
push
push
or
jb
aad
das
push
xchg
sub
lahf
std
pop
mov
notb
mov
jmp
jns
xchg
das
clc
clc
jbe
add
xchg
xchg
aas
jno
push
push
jmp
shl
inc
dec
pusha
push
dec
jge
xor
in
incb
mov
mov
jne
stc
adc
js
dec
jecxz
mov
or
xlat
imul
aaa
mov
in
sbb
add
insb
xchg
ss
nop
rcrb
sar
jg
sahf
in
add
nop
inc
sbb
data16
adc
fnstenv
jno
xchg
jle
decl
in
test
setge
into
mov
icebp
test
insb
xor
in
dec
cmp
jp
and
xchg
int
loopne
insb
push
push
imul
push
popf
pop
add
xchg
and
or
inc
sbb
jg
or
arpl
push
outsb
mov
push
or
ds
jmp
inc
in
int
dec
testb
sub
mov
lcall
jecxz
pushl
pop
out
push
pop
scas
push
orb
pop
jae
pop
fsubrl
cwtl
outsl
out
dec
and
adc
jg
adc
clc
adc
pop
fdivrs
mov
scas
cmc
aam
fwait
aas
cld
lea
cmp
push
fld
loope
cmp
ljmp
shll
ficoms
cmpsb
cmpsl
xor
cmc
icebp
lcall
sbb
xchg
insl
jmp
popf
mov
jno
cs
decl
faddp
xchg
rorb
loop
cs
dec
cmp
test
icebp
mov
out
mov
out
sbb
or
in
ret
call
loopne
test
mov
sub
movb
cmp
mov
mov
jecxz
popf
xchg
mov
adc
or
dec
pop
inc
lcall
jl
mov
inc
adc
pop
mov
imul
pushl
push
jns
cmp
bound
popa
fwait
imul
inc
int
adc
sbbb
ljmp
sarb
mov
arpl
push
repnz
inc
into
outsb
adc
mov
jmp
cli
mov
sbb
rol
mov
stos
loop
movl
lea
pushl
and
negb
and
gs
xor
jnp
dec
idivl
into
in
xchg
mov
pop
test
imul
mov
inc
sbb
in
jns
jle
mov
scas
jne
or
lret
out
ja
lods
sub
clc
aaa
adc
pop
add
and
pop
fimull
jle
mov
mov
movsl
scas
mov
and
aas
cmp
and
clc
das
shr
fsub
mov
fsubl
data16
fdivrp
cmp
decl
inc
gs
scas
js
dec
or
push
in
push
sub
lea
repz
adc
xor
push
pmaddwd
repz
push
popf
sub
test
insb
mov
mov
add
push
add
sub
roll
xchg
test
dec
cmp
div
in
and
fdivs
or
jl
outsb
mov
loope
pop
lret
fwait
icebp
jns
add
mov
js
inc
sbb
or
scas
clc
lods
lods
in
clc
sub
push
jnp
sub
xchg
frstor
xor
add
addb
jg
dec
gs
jmp
sub
sahf
cmc
jmp
xchg
scas
je
mov
and
inc
mov
dec
mov
fst
and
mov
shl
iret
ret
inc
es
cwtl
pmaxsw
test
ret
ljmp
sti
sub
aas
cmp
add
pop
pushl
cwtl
jp
clc
adcb
adc
incl
imul
cmc
call
xchg
clc
pop
cmpsb
pop
lcall
ja
inc
stos
jecxz
loopne
xchg
scas
shll
pop
mov
sub
test
lcall
out
mov
movsb
repz
pop
sub
cmc
cmp
or
lods
movl
popf
sbb
popa
jnp
stos
daa
test
cmp
hlt
cld
fnstcw
cmp
ljmp
mov
fdivrp
add
in
fstpt
add
jmp
fsub
enter
shlb
add
lods
mull
mov
jne
in
sahf
stc
mov
jmp
cmc
loop
xor
mov
pop
je
mov
stc
jecxz
mov
cld
lods
sbb
xchg
movsl
mov
test
fwait
cmp
pushl
pop
icebp
clc
inc
in
inc
cltd
inc
addr16
imul
xor
jle
bound
add
clc
inc
negb
xchg
fwait
inc
std
incl
repz
inc
repz
je
std
cmp
pushl
or
mov
divb
shrb
jp
ret
jg
lret
push
pop
std
incl
clc
cld
cmp
jae
faddl
rorl
aam
sti
outsl
test
adc
lret
pop
add
jg
clc
mov
mov
mov
dec
cmp
lods
in
insb
sbb
pop
sbb
mov
lcall
pop
xlat
hlt
xchg
enter
int
leave
adc
cwtl
sbb
mov
mov
ljmp
mov
add
ror
push
shrl
inc
in
iret
jmp
mov
shlb
stc
sub
iret
mov
push
mov
lds
cmp
pushl
mov
in
mov
mov
add
aad
jmp
sbb
add
or
jmp
xchg
aas
in
out
pop
xorl
ss
jmp
cmp
xlat
inc
sbb
addr16
mov
decl
mulb
mov
aam
outsb
ljmp
lret
fistps
decl
pop
repnz
inc
sub
ficomps
outsb
test
ljmp
inc
test
cmp
pop
xchg
add
pop
enter
ja
popa
inc
adc
inc
mov
mov
xor
cmp
call
addr16
or
adc
testl
and
lcall
in
dec
das
mov
aas
and
ret
int3
gs
mov
out
push
sbb
jo
sahf
jg
ljmp
lods
xor
push
push
cwtl
lcall
popa
testl
pop
or
and
inc
add
mov
rcrb
rcrb
dec
call
out
push
bnd
push
js
daa
mov
aas
les
outsb
in
jb
xor
int
in
shll
cmpsb
jne
mov
sub
mov
fbld
mov
fs
xor
pushl
add
loop
nop
mov
popa
hlt
push
gs
sti
and
inc
ljmp
sbb
es
xchg
pop
out
pop
mov
xlat
data16
es
loopne
add
test
push
and
pushf
inc
cmp
xor
and
jle
lods
cmpl
insl
stos
ja
push
sahf
xchg
mov
scas
in
scas
jl
sub
lods
popf
ret
or
icebp
sahf
aaa
imul
add
cmp
cmp
popf
fnop
mov
fwait
pop
and
dec
jnp
in
xchg
bound
pop
mov
mov
cmp
push
add
fcomps
and
xchg
inc
popf
jecxz
cmp
out
jl
incl
sub
or
xchg
sti
lret
jmp
lahf
loopne
push
and
add
inc
cli
jns
out
imull
xchg
add
not
xchg
andl
into
pop
popf
or
dec
iret
sti
loop
ljmp
mov
lods
pop
mov
daa
loop
cmpsl
cmp
dec
dec
loope
jg
mov
mov
dec
add
xchg
jge
aam
gs
inc
fcmovnu
incl
adc
mov
and
dec
pop
scas
adc
das
xchg
pop
out
sbb
push
nop
dec
xchg
cs
pusha
dec
xchg
fcomip
std
fisubrl
push
jmp
in
jno
adc
enter
xchg
or
call
push
int
jp
leave
movsl
xchg
mov
fistpll
jb
pop
adc
sbb
inc
dec
xor
adc
in
enter
incl
xlat
mov
and
add
push
jge
cwtl
shll
lcall
pop
imul
inc
mov
lds
dec
mov
lock
jbe
add
jmp
clc
out
cmpb
mov
add
mov
jbe
add
or
pop
cmpsl
decl
adc
pop
enter
sub
in
loope
xchg
cmpl
test
pop
sbb
insb
sbb
incl
push
push
pop
push
cmc
mov
push
lea
xchg
sub
out
inc
out
cs
push
cmp
imul
sbb
mov
push
mov
push
mov
std
mov
adc
push
iret
stos
xor
out
mov
cmp
insl
push
cld
cmp
mov
fbstp
jle
push
out
push
cmp
mov
iret
outsb
sbb
jmp
xlat
mov
xchg
push
and
repz
nop
xchg
and
mov
inc
mov
iret
xor
aam
mov
ds
mov
mov
xchg
sub
and
out
es
faddl
inc
cmp
pusha
cmp
cli
jae
inc
bound
sub
xchg
mov
jno
jb
jl
pushf
stc
jle
push
mov
or
and
fcmovne
mov
adc
xchg
mov
xchg
pusha
in
xchg
imul
mov
sbb
nop
xchg
arpl
push
inc
sub
xor
lret
shrl
lods
and
aas
jmp
stos
mov
xor
dec
add
inc
push
mov
in
loopne
mov
mov
imul
stos
scas
or
mov
scas
mov
fmull
jmp
dec
loope
loop
mov
and
mov
cmp
out
mov
call
roll
fisttpll
and
adc
sbb
test
std
out
adc
or
fldcw
jge
jmp
mov
in
mov
ljmp
ja
lock
aad
push
insb
rolb
push
push
rolb
push
sub
fcomps
pushl
js
add
xor
fnstcw
loope
xor
jmp
push
add
mov
inc
ljmp
out
imul
xor
mov
pop
jne
insb
outsl
fistpll
ljmp
outsl
or
bound
in
cmp
in
pop
fsts
sub
sub
orl
ret
xor
or
test
push
sahf
xchg
cmp
shlb
lods
mov
out
inc
push
adc
dec
out
xchg
cmc
jmp
lahf
dec
dec
scas
les
stc
push
insl
push
gs
shl
pusha
test
addr16
ljmp
out
or
xchg
and
int
mov
in
cmpl
inc
repnz
test
lret
pop
add
jns
andl
mov
repz
into
into
inc
test
inc
mov
cmp
subl
test
mov
imul
cld
pop
rolb
or
in
or
push
pop
popl
mov
push
add
repz
mov
push
push
adc
stos
retw
push
mov
adc
dec
sub
inc
fsubp
mov
mov
mov
int3
popf
jp
cli
mov
inc
sbb
adc
fidivrl
outsb
inc
inc
mov
iret
ljmp
xor
in
cmp
cmp
mov
ror
pop
jg
int
mov
pop
or
cmp
gs
jnp
mov
daa
jl
jg
mov
xchg
outsl
sub
push
fxch
out
loope
rclb
or
mov
cmp
push
xor
cltd
jl
and
jp
aad
mov
insl
fistpll
jge
cmpsl
test
sbb
jmp
in
cmpsl
enter
mov
xor
loop
mov
pop
pop
repz
or
loopne
scas
adc
xchg
repnz
das
cli
call
iret
mov
mov
outsb
jle
cmp
ljmp
push
loop
mov
xor
popa
dec
rorb
inc
orl
call
rclb
filds
lock
inc
imul
out
jle
cmp
decl
xchg
jle
xchg
inc
xor
sbb
daa
ljmp
ds
inc
test
jno
clc
mov
ret
aaa
out
icebp
dec
sbb
mov
and
cld
xchg
mov
bound
xchg
pop
add
add
out
jp
aad
sbb
and
add
jg
inc
pop
call
fadds
sbb
loop
dec
call
mov
aaa
dec
out
xchg
pop
mov
sbb
icebp
jge
xor
xorl
mov
pop
mov
mov
mov
push
das
jecxz
mov
push
add
in
ljmp
or
das
push
cmc
adc
mov
mov
loop
ljmp
aas
pop
xor
xchg
and
test
cmp
stos
lahf
cld
mov
mov
fwait
insb
outsb
movsl
out
pop
out
jo
pop
lock
push
xlat
push
add
in
cmp
enter
sti
stc
adc
iret
stos
adc
xchg
sbb
test
clc
sarl
jmp
jmp
fnsave
push
divl
adc
aas
test
sar
ljmp
stos
xchg
rol
test
arpl
cmp
xor
cwtl
pop
dec
add
ret
sub
mov
fcoml
mov
mov
aam
jg
cmp
push
fsts
notl
xor
fistl
popf
aad
fs
jo
repnz
scas
sbb
fcomip
movsb
movsl
nop
pop
jp
mov
inc
xorb
inc
out
stos
loopne
jmp
hlt
icebp
movsl
stos
push
icebp
fldcw
jb
es
mov
pop
outsb
mov
test
lods
pop
loopne
lret
push
das
sbb
sti
jl
cmp
pop
enter
decl
mov
in
mov
movsb
nop
lcall
movsl
ret
pop
bound
push
or
mov
add
out
je
inc
xor
lods
insl
movsb
dec
mov
clc
adc
ss
xchg
or
or
xchg
push
and
xchg
push
ret
jmp
icebp
jmp
int
shlb
ljmp
movsb
js
bswap
mov
inc
pop
imul
lcall
inc
inc
and
add
or
sbb
loope
icebp
or
sbb
jmp
in
mov
jmp
add
ds
cwtl
xchg
imul
jmp
packsswb
cmp
lds
jnp
and
adc
call
lock
or
sbb
inc
mov
jbe
jmp
inc
scas
pop
sbb
or
fldl
fistpll
loop
inc
add
call
add
inc
outsl
xor
roll
bound
ds
xor
cmp
mov
rcrl
loope
dec
movl
pop
pop
cmp
ljmp
cmpsl
push
ljmp
mov
daa
popl
mov
push
lahf
out
cmp
mov
push
mov
imul
mov
xlat
decl
jnp
popa
xlat
stos
fnop
gs
hlt
fs
in
ror
mov
lock
jmp
and
daa
push
xlat
rcll
setb
jg
dec
or
pop
js
mov
jns
int
psraw
arpl
dec
pop
cmp
ljmp
int3
xchg
xchg
pop
ret
add
cmc
out
dec
aaa
sbb
cli
pusha
test
mov
aad
in
and
dec
jge
movsb
mov
cli
sbb
cmp
lcall
imul
jnp
sub
mov
dec
movsb
add
xor
add
pop
std
pushl
ss
outsl
rcrl
cmp
xorb
ljmp
fildll
test
mov
enter
movsb
mov
mov
arpl
pushl
lea
cmp
inc
pop
xor
xchg
mov
pop
cld
pop
icebp
js
push
mov
loop
fsubr
loope
push
xchg
xchg
mov
leave
mov
mov
aas
mov
in
mov
adc
jge
dec
pop
cmp
ljmp
xlat
xorb
test
pop
and
jl
nop
xchg
xchg
shll
cmp
mov
sbb
in
inc
jecxz
jnp
push
xchg
push
push
fdivr
sub
loope
filds
mov
in
mov
lret
pushl
or
or
xor
movsb
inc
cmp
ret
xchg
inc
push
or
movsl
sti
adcb
les
cld
jb
jge
or
int
mov
and
shll
popa
out
adc
stos
popa
cmp
push
jmp
lahf
lods
push
jmp
cs
orb
fs
ret
bound
xchg
in
and
cmp
cmpsb
jecxz
add
jo
sahf
adc
and
jbe
cltd
sbb
fistps
shlb
decl
std
sbb
pushf
aam
in
cmp
das
scas
ficomps
cmp
jmp
stos
cli
jb
insb
inc
adc
and
add
mov
pushl
mov
push
mov
push
mov
mov
inc
inc
pop
cld
push
loopne
outsl
outsb
stos
and
mov
imul
cli
iret
or
cmp
fdivrl
or
sub
push
push
cmp
mov
cld
or
enter
repnz
push
or
fwait
inc
fcompp
loopne
mov
call
in
lds
and
out
clc
mov
fwait
lret
cmc
sbb
popa
cli
decl
sbb
filds
loope
inc
pushf
fildl
ljmp
nop
test
xchg
dec
add
imul
fsubr
cli
mov
push
test
aaa
jno
adc
xlat
add
cmp
outsl
cli
fstps
fdivrs
push
fwait
pop
mov
xchg
ret
mov
lcall
test
out
ror
adcb
mov
xor
add
cmp
std
mov
andb
push
add
xor
leave
clc
mov
sbb
add
jp
pop
aad
sti
push
pop
or
ljmp
jae
mov
add
inc
lds
adcl
sub
pop
xchg
and
push
mov
jmp
loop
ss
lret
mov
sbb
test
adc
lret
inc
push
incl
or
sub
pop
mov
fwait
mov
mov
mov
rorl
mov
jno
jg
xchg
sti
pop
or
jo
enter
iret
pop
sbb
orl
call
push
inc
sbb
movsb
xchg
orl
pushl
cld
dec
mov
mov
popa
push
sbb
rorl
push
test
inc
outsb
das
add
call
outsb
adc
pop
xor
push
loopne
add
mov
mov
xor
push
stc
call
fs
popa
lods
mov
out
xorb
aam
repz
jmp
xchg
cmp
loopne
fcomps
inc
rcl
scas
push
mov
jae
decl
mov
jne
add
inc
mov
jbe
and
sub
out
dec
jno
add
incl
inc
ljmp
shrb
sub
xor
std
sbb
das
nop
icebp
lods
lds
xchg
mov
and
cmpl
dec
push
test
fbld
test
cmp
mov
inc
or
insb
ja
imul
ja
push
incl
or
sub
adc
lock
fldt
push
test
add
jle
mov
cmp
xchg
xchg
add
clc
ljmp
mov
icebp
xor
decl
fucomp
ljmp
cmp
pop
cltd
stc
mov
sbb
fisubrl
push
mov
fsubrs
insl
and
sub
in
cmc
mov
cmpsb
sub
bound
adc
aaa
ss
or
mov
dec
subb
xchg
insb
stc
ljmp
pop
push
movsl
rclb
out
pushf
jp
jecxz
adc
fwait
int3
push
sbb
clc
and
je
xchg
divb
cmc
sub
out
cwtl
incl
ficomps
cmp
sbb
fsubr
popf
push
add
scas
cmc
pop
jmp
cmp
adc
inc
and
dec
push
sbb
and
lret
dec
test
mov
add
pushf
mov
jmp
sbb
mov
jae
cmp
jmp
push
mov
or
mov
inc
int3
sbb
or
pushf
sahf
lock
addb
ljmp
mov
cld
aad
jns
in
enter
mov
inc
inc
inc
adc
ljmp
rcrb
in
ljmp
std
inc
xor
jmp
mov
incl
mov
enter
out
xlat
js
mov
lcall
ret
test
inc
mov
arpl
ret
or
pushl
pop
xor
mov
dec
rcr
test
pop
xchg
adc
jmp
nop
push
mul
jg
stos
xchg
sbb
ja
iret
xor
or
ret
fcomip
mov
jbe
outsb
int3
clc
sbb
sub
hlt
xchg
fstpt
gs
adc
inc
and
ss
push
shll
dec
les
jg
lcall
repnz
xchg
fdivrl
push
lods
pop
popf
test
aaa
andl
mov
cld
inc
testb
divb
iret
ja,pt
pop
xor
xor
jmp
ret
insl
push
sarb
xor
neg
add
roll
into
adc
mov
jo
in
add
fsubs
cmpsb
adc
inc
jmp
inc
cmp
icebp
inc
aad
sub
stos
jb
mov
fisttps
in
or
loop
lock
and
mov
outsl
mov
cmpsl
jecxz
mov
lea
inc
pushf
insl
stos
push
daa
jno
int3
xlat
popf
and
xchg
lcall
pusha
fs
out
popa
out
hlt
aaa
ds
add
cmp
hlt
loope
ficomps
ds
aam
jae
jmp
cli
icebp
jmp
add
and
jae
xchg
xor
call
push
add
lret
out
int3
aad
inc
int3
adc
jmp
cmp
pusha
add
dec
add
jmp
mov
add
aad
jmp
xchg
imul
lcall
mov
add
jl
jb
pop
aam
fists
enter
imul
out
push
push
mov
sub
sarb
mov
pushl
lea
sbb
cld
pop
fwait
les
test
ljmp
shll
lret
out
repz
pop
xor
push
jle
je
inc
push
movsl
xchg
mov
xchg
adc
ja
lcall
push
xchg
jl
sub
cmc
fiadds
mov
push
pop
jge
or
js
sbb
jg
outsb
sub
and
test
sub
lcall
in
in
gs
mov
cmc
stos
sub
sbb
push
dec
or
incl
mov
or
lods
icebp
inc
inc
xchg
lcall
push
or
insb
fistps
xchg
jne
cmp
cld
mov
sub
aaa
sub
or
inc
rol
ds
adc
in
shrl
cmp
bound
lret
sti
ret
incl
inc
data16
dec
sti
adc
xlat
push
movsb
jl
out
inc
icebp
sbb
inc
sahf
jo
add
xchg
mov
push
push
outsb
stos
push
fdivl
and
sub
and
push
inc
dec
movsb
mov
ljmp
addr16
pop
mov
mov
sbb
aas
pop
dec
mov
jle
lock
xor
imul
sub
sub
pop
mov
mov
clc
mov
adc
lcall
rcl
xor
scas
push
xchg
sub
addl
mov
jmp
pop
mov
xchg
pop
inc
ret
aaa
cmp
fld
mov
scas
filds
call
loopne
cmp
pop
mov
lcall
jg
outsl
aas
jg
shlb
adc
nop
cli
mov
inc
cmp
lcall
nop
cmc
add
adc
repnz
jle
xchg
inc
mov
xorl
mov
mov
jbe
xor
pop
movsb
cmp
stc
ret
add
pushf
sbb
es
xchg
sub
jo
adc
or
jg
push
loopne
lcall
inc
and
mov
adc
jmp
or
sbb
insb
negl
lea
add
or
call
stos
mov
or
and
or
pop
mov
cmc
jp
mov
and
call
mov
mov
adc
lods
fscale
ret
sub
ljmp
iret
test
jo
mov
iret
jg
push
mov
and
push
jle
cld
pop
icebp
push
pop
rorb
pop
in
push
ljmp
push
fnstsw
or
insb
movsb
mov
jp
xor
push
neg
les
inc
cmp
insb
js
call
iret
jb
xor
dec
add
mov
nop
push
fistps
push
pop
or
ffree
mov
pushl
xchg
xchg
cltd
cmp
jp
fmull
cs
mov
push
pop
movsb
jecxz
add
mov
jge
lea
imul
bound
dec
add
pop
fistl
rcrb
test
out
std
or
jg
xchg
mov
pop
inc
jns
sbb
inc
adc
les
pandn
std
dec
mov
inc
aam
pop
fnstsw
je
clc
ljmp
xor
and
sbb
pop
mov
jno
int3
je
push
xor
lcall
push
and
cmpsb
or
pop
and
push
rolb
insb
cmp
fwait
jne
inc
test
dec
adc
pop
jo
jge
mov
mov
inc
cmpsl
sbb
pop
and
mov
std
in
ror
inc
mov
shrb
out
cmp
out
mov
add
ret
sti
into
orl
or
in
push
pusha
mov
cmpb
callw
sbb
fcoml
lods
inc
pop
mov
pushl
cmpsb
je
mov
sbb
xor
push
mov
mul
mov
outsl
mov
call
outsl
inc
cli
sbb
out
jecxz
nop
adc
dec
mov
pop
jmp
mov
jl
xor
and
inc
fdiv
add
lcall
inc
jl
cmc
jmp
test
cltd
mov
mov
in
push
rcr
adcl
das
fs
hlt
mov
lretw
sbb
imul
mov
cmc
cmp
mov
mov
jmp
cmpsl
inc
jl
outsl
xor
mov
rolb
ljmp
push
dec
jae
jno
xchg
mov
pop
cvttps2pi
xchg
rcrb
call
cli
jg
lds
sub
push
sbb
lods
dec
cmp
push
add
mov
call
sbb
ljmp
arpl
andl
add
and
outsb
cmp
or
ljmp
jo
or
xchg
lcall
fnstcw
pop
orl
inc
out
aam
scas
ljmp
cmc
scas
dec
repnz
sbb
lods
push
cmp
push
popa
sbb
mov
jg
pushl
jnp
cli
mov
xor
xchg
sti
lods
dec
cmc
push
sar
mov
cmp
mov
sbb
js
sub
in
mov
push
mov
ljmp
stos
es
inc
sbb
adc
out
add
idivl
hlt
sbb
add
push
dec
cld
dec
jnp
pop
push
mov
mov
lcall
xor
in
or
insl
sub
decl
mov
scas
inc
in
icebp
fnstcw
sub
add
push
pop
hlt
cmp
mov
dec
addb
lcall
repnz
xchg
push
push
cmp
cmc
dec
jbe
mov
loop
mov
loope
test
mov
loopne
es
incl
test
lds
imul
sbb
pop
mov
cld
mov
sub
xor
add
xchg
xor
jmp
icebp
xor
pushf
loop
incl
sbb
jnp
repnz
sbb
fldlg2
mov
mov
sub
xor
repz
cwtl
cmp
ja
in
repnz
shlb
jp
cmp
add
pop
xor
stc
jbe
pop
inc
nop
mov
push
out
push
cltd
cltd
xchg
in
inc
cmp
call
or
inc
mov
pop
jmp
lretw
incl
dec
and
clc
rcrb
es
das
out
push
jge
inc
jmp
dec
imul
fwait
inc
loope
int
inc
insb
arpl
sub
popf
clc
mov
lret
pop
movsbl
ss
out
fdivrl
inc
dec
add
aad
push
cmp
add
dec
dec
iret
dec
repz
andb
movsl
jb
mov
call
adc
mov
shll
xchg
sub
xchg
rorl
or
xorl
incl
arpl
jmp
mov
dec
lahf
dec
mov
sub
jns
pop
icebp
call
mov
filds
inc
jae
pop
pop
dec
or
aam
leave
iret
pop
dec
push
or
aam
sub
das
xor
add
and
cltd
adc
fisttpl
mov
and
sub
ret
jmp
push
xor
and
mov
xchg
in
push
adc
pop
push
fnstenv
jmp
dec
cmp
push
test
dec
stos
inc
pushf
push
in
mov
cmpsb
mov
pop
gs
fcomip
or
imul
call
mov
repz
movsl
ds
lcall
mov
dec
jge
movl
xlat
sahf
mov
repnz
aaa
add
lcall
fimuls
rcrb
add
out
or
idiv
fisttps
xor
mov
push
popa
faddl
in
lods
push
sahf
sub
pushf
mov
xor
lahf
scas
aam
push
sbb
dec
cmp
add
ja
aaa
jl
sbb
cwtl
push
jnp
insb
test
mov
adc
mov
decl
dec
xor
jl
push
jecxz
mov
jnp
mov
and
dec
and
mov
xchg
popf
push
xchg
jb,pn
clc
push
mov
jmp
les
adc
mov
mov
sahf
mov
repnz
jae
ljmp
lods
and
ret
mov
icebp
add
cmp
sbb
dec
dec
add
inc
fs
jmp
inc
nop
cltd
push
nop
fidivrs
incl
idiv
test
insl
jg
pop
jo
push
adc
adc
hlt
jo
aad
fcomps
std
popf
mov
push
xor
in
sbb
jmp
or
mov
mov
push
lcall
adc
or
xor
cmpsl
adc
or
sub
mov
cmpsl
lock
mov
sub
cltd
loope
fidivs
lods
and
mov
aad
pop
xor
sbb
lods
pop
jo
cmp
cmpsb
push
inc
loop
loop
mov
cs
aad
and
or
decl
jae
rcr
das
mov
push
insb
mov
mov
iret
out
orb
dec
lret
mov
decl
xchg
dec
out
sub
add
inc
dec
out
sbb
jecxz
pushl
cmp
aaa
int3
push
cmp
aaa
out
in
xor
scas
xor
cmpsb
rorb
incl
jge
das
push
lock
mov
in
paddw
sbb
pop
push
pop
popa
fisubrs
decl
pop
lcall
in
mov
push
dec
call
mov
in
incl
iret
mov
jnp
mov
dec
add
xor
sub
add
mov
outsl
cli
lods
sbbl
jne
insl
xor
pushl
mov
sub
sahf
pushf
pushf
rorl
and
cmc
testb
shrl
imulb
sbb
fwait
push
xchg
ds
or
pop
sbb
add
adc
jae
lcall
incb
push
call
imul
pop
pop
out
cld
ret
lea
dec
lcall
shrb
inc
dec
mov
jbe
push
xor
ljmp
mov
mov
loopne
or
scas
clc
mov
popf
pop
sub
adc
cmp
imul
push
push
mov
dec
addr16
data16
sbb
jno
add
dec
roll
dec
out
xor
inc
repz
and
cmc
stc
cwtl
mov
movsl
jae
flds
dec
push
repz
xchg
lcall
cli
nop
repnz
leave
push
sarb
dec
xchg
push
xchg
in
mov
xchg
ret
ret
and
push
out
call
add
int3
call
or
jecxz
and
mov
lret
lea
sub
mov
fldcw
jp
sahf
pop
xor
mov
mov
in
xor
jo
scas
jae
call
mov
add
ret
cli
aad
sbbl
jle
popf
addl
jae
ds
or
iret
mov
call
lods
pop
pop
repz
mov
xor
mov
push
pop
fisttpl
jb
icebp
or
sar
stos
dec
fisubl
or
push
in
movsl
or
cmp
arpl
mov
push
inc
add
xchg
into
mov
sti
xor
les
clc
push
pop
insb
and
out
idiv
call
shrb
icebp
andl
fwait
sbb
in
inc
jle
scas
les
sarl
lcall
adc
clc
jno
or
inc
fwait
xor
add
and
inc
jbe
mov
lcall
adc
sbb
pop
cmp
jno
popf
icebp
mov
aas
add
mov
jg
fwait
or
out
inc
imul
lahf
scas
imul
jmp
pop
call
out
sbbl
mov
jno
jecxz
addr16
add
fdivrp
ja
rorb
ja
nop
icebp
test
push
decl
fisubrs
loopne
mov
jnp
inc
repz
push
add
repnz
adc
ljmp
shlb
pop
jg
shrl
add
or
sbb
push
int3
cltd
cld
lcall
scas
sahf
pop
cld
lret
popf
mov
pop
rcr
ss
jg
inc
jl
addr16
jl
cmc
dec
push
aad
jne
iret
sbb
ljmp
mov
jp
mov
fisubrl
mov
add
outsl
cli
dec
dec
lods
test
shrl
cmp
push
push
adc
ret
mov
xchg
daa
lcall
adc
out
or
mov
rorl
ret
cld
adc
adc
sub
incl
adc
in
adc
aam
push
outsb
pop
cmp
iret
jg
sti
add
adc
cmp
sub
adc
sbb
idiv
sub
xlat
mov
push
xchg
pusha
sub
mov
cld
ja
or
pop
mov
cmp
inc
sub
adc
sbb
fs
pushl
out
jg
mov
cmc
into
rorl
daa
push
mov
sub
jecxz
xor
cmp
fidivl
subl
repz
jp
sbb
dec
inc
nop
cmp
lcall
xchg
das
or
mov
ja
add
jmp
inc
push
xor
ljmp
ss
cltd
andl
push
sti
cmp
xchg
mul
mov
mov
push
and
and
add
pushl
or
jg
mov
out
pop
or
add
fs
cltd
and
jmp
push
js
cmp
or
push
cmpsl
addb
popf
incl
test
ljmp
mov
out
sbb
and
mov
pop
fld
and
shll
icebp
inc
ljmp
lcall
jnp
clc
cwtl
cmp
mov
push
cmp
aaa
lahf
or
push
lds
xchg
gs
sbb
inc
repnz
aaa
out
rol
dec
inc
imul
sbb
call
push
sub
pop
fsubr
pop
stos
cld
lods
pop
add
pop
out
mov
fs
pop
pop
aas
sbb
dec
jae
cmpsl
stc
adc
add
and
mov
insl
and
fidivl
sbb
test
pop
test
incl
cmpb
sbb
loopne
sub
fildll
in
sbb
mov
pop
loop
push
or
test
test
pop
or
inc
cmc
or
insb
inc
xchg
xchg
movsl
mov
cmp
jnp
pop
jle
sbb
jg
sbb
aaa
mov
sarl
pop
lcall
xchg
lods
sbb
mov
in
or
fcmovnbe
js
mov
cmpsl
mov
mov
and
cmc
jne
fs
ror
int
enter
push
cmpsb
call
mov
mov
push
cmp
inc
loop
mov
mov
or
out
es
add
jns
lcall
jg
das
out
mov
mov
adc
xor
decl
idivl
push
dec
fadd
mov
pop
mov
pusha
fiadds
add
mov
fisubrl
js
jle
mov
or
stc
gs
data16
incl
jne
ret
fcomps
xchg
mov
or
or
jb
call
scas
push
test
and
cmp
js
lods
fwait
pop
std
shl
stos
xchg
sti
aad
jmp
pop
adc
hlt
dec
js
mov
aam
cmpsl
add
pop
add
in
aad
mov
mov
xchg
xchg
test
dec
les
movsl
jnp
mov
int
test
fcoms
inc
stos
lods
inc
push
test
jae
sti
sbb
lds
mov
mov
mov
ljmp
scas
inc
jge
sbb
mov
mov
dec
add
sub
jg
cli
cmp
into
sbb
push
pop
ja
adc
mov
call
dec
push
addl
mov
xor
icebp
push
les
dec
test
in
xor
cmpb
repnz
xchg
out
pop
jp
scas
lcall
add
pop
loopne
jne
jge
bound
aam
popf
adc
test
and
call
loop
mov
leave
inc
roll
aam
aas
dec
jle
rcll
or
cmp
lcall
xchg
sbb
jmp
pop
bound
ret
dec
lods
dec
testb
out
outsl
xor
pushl
xchg
lock
cmp
xchg
lcall
data16
pop
sub
outsb
cmp
add
jg
mov
outsb
mov
movsb
loope
mov
jmp
fildll
push
jle
lahf
adc
rcrb
es
sub
xchg
loop
int3
sbb
xor
ljmp
sahf
lods
mov
push
lahf
dec
ja
sub
xchg
cmp
in
sbb
call
cld
mov
fdivrs
bound
jae
pop
and
pop
adc
mov
sbbl
cli
xor
pop
movsb
pop
les
lret
ret
and
cmp
ret
sub
ja
incl
mov
lock
dec
pop
arpl
pusha
cli
pop
negb
mov
jmp
sbb
ret
aad
rclb
xor
lea
out
mov
add
fidivs
cld
sub
jo
daa
cmc
ret
in
dec
pop
ret
inc
xchg
lcall
incl
fwait
pop
hlt
test
int3
dec
and
lcall
or
scas
xchg
test
dec
lods
sti
out
fwait
movsb
mov
push
fmuls
dec
and
inc
out
push
mov
outsl
lock
insb
lock
inc
fisttpll
xlat
fmuls
out
fmuls
sub
push
leave
mov
je
hlt
mov
pop
or
jno
xor
jg
inc
jae
and
xchg
cs
testb
dec
xchg
imul
lcall
negb
mov
fdivrp
adc
inc
movsb
arpl
faddp
jmp
iret
cmpsl
or
mov
repnz
mov
sarb
aas
pushl
enter
jp
jl
pop
cltd
test
jbe
push
aaa
andl
push
stos
mov
mov
mov
stos
jne
cli
xchg
insl
int
inc
mov
pop
mov
inc
xchg
ljmp
pop
sbb
add
test
leave
cmpsl
jge
push
mov
push
jg
cmc
std
ljmp
mov
push
les
push
adcl
sub
pop
sub
xor
bound
je
xor
out
push
insl
call
int
add
ret
and
sub
cmp
inc
test
jl
add
or
fidivrl
lea
xchg
adc
stos
jle
pop
les
in
mov
add
jno
in
test
push
sbb
addr16
rcll
loopne
call
insb
hlt
clc
jmp
jne
mov
lods
inc
in
ret
push
cmp
dec
daa
mov
jnp
ljmp
ja
jecxz
repnz
push
pop
repz
cmc
dec
adc
arpl
mov
shl
es
cltd
fisubrs
incl
jbe
das
cli
dec
lcall
cmp
cltd
xor
lds
inc
stc
incl
xchg
outsb
movsb
push
std
call
xor
jae
incl
and
add
push
popa
or
pop
je
stos
adc
xchg
lods
repz
pop
cmc
decl
shrl
movsl
stc
sti
lock
mov
stos
sbb
ja
mov
xlat
add
adc
jg
cs
cld
mov
scas
sbb
ja
sub
pop
mov
sbb
lcall
ret
cmpsb
adc
cltd
pop
dec
pop
jo
mov
iret
lods
sar
cmpb
incl
push
push
loop
imul
inc
test
andl
push
cmpsb
repnz
xlat
or
and
ljmp
or
xlat
addl
sbb
sbb
push
sbb
xor
sbbl
mov
or
mov
mov
ljmp
xor
mov
lret
or
add
cwtl
jge
jl
mov
rcr
pop
loopne
incl
mov
push
les
jne
xor
mov
mov
call
or
sbb
mov
xchg
jg
inc
lret
iret
push
push
sbb
adc
mov
js
adc
dec
mov
fwait
test
loop
or
loope
dec
adc
push
movsl
hlt
icebp
out
das
sub
out
mov
movsb
mov
aam
std
daa
pop
dec
popf
inc
add
dec
outsl
jp
sbb
je
stos
stos
pushl
in
mov
fldt
std
dec
sti
les
dec
sub
jnp
dec
xlat
pop
mov
mov
pushf
lds
and
mov
xor
pop
stc
ret
pushl
stos
xor
xchg
lods
dec
lea
xlat
fimuls
mov
nop
xchg
flds
mov
imul
ret
cmp
dec
jno
cmp
movl
adc
xchg
xchg
inc
mov
movsl
or
adc
mov
iret
fstpl
xor
decl
pop
insl
push
sbb
or
sarl
cld
add
js
shlb
sub
es
add
lcall
mov
je
push
mov
loope
push
add
jmp
lret
mov
movsb
adc
movsb
out
xchg
adc
in
sub
dec
out
push
jns
sbb
mov
mov
adc
mov
pushf
mov
mov
sub
sahf
pop
or
int
cli
sti
sub
lock
adc
jae
dec
cmp
and
cmc
ja
ret
pop
mov
subl
jg
hlt
decl
inc
cmp
gs
pop
jp
popa
xlat
xchg
out
insb
cmp
call
movsl
movsb
mov
mov
gs
sub
mov
js
cmp
cld
dec
jle
push
xor
in
daa
fwait
cmp
stos
mov
xchg
stos
mov
cmp
fs
lcall
jb
pop
pop
lret
cmp
xor
nop
fadds
pop
jbe
decl
cwtl
push
inc
in
rcr
push
daa
add
xor
lods
ljmp
hlt
xchg
and
cmp
mov
rclb
lcall
xlat
mov
out
cwtl
out
dec
in
ret
fdivrs
lcall
add
jg
xchg
test
lods
ret
imul
mov
sub
push
mov
fdivrs
fidivs
std
out
out
addb
inc
fdivs
popa
lahf
pop
mov
cltd
iret
sbb
dec
sbb
das
clc
pop
cmpb
or
pop
pop
ja
lock
jne
sbb
hlt
ljmp
inc
int3
int
dec
mov
outsb
adc
pop
jno
ljmp
sbb
pop
insl
adc
ss
jl
xorb
mov
mov
ljmp
iret
lret
jo
xor
fdivl
out
out
es
ja
pusha
pusha
sub
cmpsl
lret
or
push
repnz
mov
call
adc
add
mov
jbe
popf
mov
sbb
sbb
cmp
mov
ret
aaa
aad
incl
sub
stos
repz
fstpl
ss
dec
adc
adc
pushl
add
ljmp
mov
dec
in
test
inc
sbb
into
mov
cld
fdiv
or
xor
test
jmp
int3
mov
test
fsubs
ss
dec
mov
mov
ds
jns
shll
mov
popa
bound
mov
inc
insb
jo
mov
jecxz
gs
out
repz
and
cwtl
int3
xchg
das
add
push
add
jmp
jne
mov
adc
xor
not
xor
push
mov
decl
cmp
rclb
and
xchg
push
stos
push
fisubs
dec
xchg
mov
push
sti
sbbb
filds
loop
push
ficoml
test
insl
dec
int3
loopne
or
jmp
decl
push
inc
sub
push
je
movntq
out
cmp
test
jo
sbb
push
test
xchg
cmp
xor
pop
cld
push
sbb
dec
into
ret
fnstsw
fildl
in
xorl
cwtl
fdivr
jmp
fsin
je
mov
cltd
sub
jecxz
dec
incl
add
call
aas
sti
jb
sbb
adc
jmp
xor
pop
adc
push
adc
jmp
lea
mov
shl
jle
out
repnz
push
std
fbld
inc
mov
xchg
dec
adc
roll
scas
icebp
jmp
decl
cmp
leave
ja
repz
pushf
cmpsb
in
lret
pop
jle
sub
jne
jns
mov
cmp
mov
sar
cmpsl
ret
cmp
inc
shlb
inc
in
loop
lret
sbb
ljmp
in
cli
mov
leave
add
adc
clc
and
in
ljmp
mov
lcall
sub
test
decl
test
add
sub
cwtl
jbe
mov
lock
in
mov
lcall
sahf
push
lock
fistl
repz
xchg
negb
push
or
out
cld
decl
push
xlat
es
decl
fwait
add
adcl
call
mov
data16
sub
mov
cvtpi2ps
gs
sub
mov
insb
xchg
push
jae
xor
and
xchg
and
popf
mov
notrack
pop
repnz
cld
int
jnp
out
cmpsb
inc
xor
je
ficoms
and
mov
out
mov
xlat
mov
or
cld
mov
mov
insl
les
and
push
loope
sahf
ss
std
xor
lahf
incl
lods
or
xchg
jecxz
adc
push
movsl
iret
dec
gs
fucomi
adcl
loop
call
cld
aas
or
nop
mov
mov
cmp
sti
xchg
xchg
repz
sahf
push
inc
inc
mov
and
mov
jmp
addr16
rorb
lret
cli
xchg
imul
xchg
fdiv
je
adc
test
movsl
jle
push
xchg
aam
mov
mov
cli
pushl
dec
not
out
sub
add
jae
les
bswap
sbb
push
pop
push
jecxz
jae
fcomip
mov
fcoml
out
addr16
mov
cld
ljmp
and
inc
sbb
ss
daa
adc
inc
out
dec
or
sub
pop
push
add
mov
and
and
orl
push
rcrl
mov
jp
ficoms
ja
sbb
push
push
je
mov
add
mul
lock
add
aas
arpl
dec
mov
add
and
mov
call
lret
xchg
inc
pusha
leave
sbb
ljmp
mov
jnp
push
push
insb
pusha
repz
in
inc
dec
adc
jbe
xchg
and
loopne
stos
jb
orb
pop
hlt
js
faddl
gs
xor
out
cwtl
ss
xchg
int
dec
lods
jg
cli
add
push
lret
pushl
cmc
inc
adc
std
xchg
xor
sti
jecxz
pusha
rclb
clc
add
sub
jg
xlat
jb
in
lret
xchg
iret
mov
and
pop
clc
push
sub
int
orb
pop
decl
pop
jmp
adc
or
fs
clc
sub
or
or
mov
sar
push
xor
shlb
jo
fdiv
mov
push
mov
repnz
adc
call
pop
dec
sub
push
lret
push
in
jle
sub
incl
and
repz
push
jo
jne
mov
inc
cmpsl
push
and
lcall
mov
stos
xor
xor
dec
mov
sub
in
scas
dec
lock
pop
lock
jmp
cmp
sbb
gs
out
fwait
inc
mov
mov
iret
xchg
scas
xchg
mov
rclb
mov
dec
in
add
dec
fisttpl
mov
pop
add
stos
push
adc
in
ficoms
cmp
push
fiadds
ficoms
push
shrl
xor
test
mov
lret
sub
mov
test
jb
les
and
into
call
hlt
sar
dec
mov
dec
mov
and
xchg
xchg
aam
cmp
icebp
movsl
sbb
or
stc
jnp
mov
decl
mov
movsb
xor
scas
jl
ret
fldlg2
lea
fcompl
mov
lods
jbe
sub
xor
mov
ss
inc
dec
dec
push
mov
gs
push
mov
into
test
mov
jno
xchg
or
jne
lods
lds
std
decl
out
push
cmovnp
push
pop
pop
outsb
cmp
iret
pop
addb
ljmp
adc
xlat
fdivp
cld
test
sbb
cli
mov
ljmp
dec
xor
data16
rcrb
cli
xchg
jno
inc
or
jno
lods
incl
sub
hlt
dec
and
xor
scas
rorl
mov
xorl
incl
sbb
adc
les
rcrl
repnz
xchg
int3
cli
fcomip
call
jle
popa
jl
mov
insl
out
in
jne
incl
aaa
stos
dec
jnp
mov
push
cmc
cltd
lret
clc
adc
pop
add
inc
and
jns
sub
icebp
fists
ljmp
clc
das
sbb
fcoml
idivb
cmp
shrb
andl
xchg
pushl
xchg
stos
in
jns
mov
mov
xchg
mov
icebp
sbb
mov
inc
mov
jmp
and
test
gs
mov
adc
ljmp
pushf
push
jnp
pushf
scas
jge
roll
mov
imul
outsb
decl
cli
xor
jmp
data16
xor
repnz
lret
dec
inc
jmp
pushf
sub
call
sub
add
push
repnz
lahf
inc
aas
dec
loope
xor
ljmp
aas
outsb
lock
in
es
bound
mov
xchg
test
imul
mov
addr16
bndldx
ljmp
aad
mov
fsubs
push
movsl
pop
xchg
les
mov
adc
mov
shlb
add
add
icebp
or
das
xor
decl
ljmp
lods
jbe
mov
in
xor
and
mov
push
loopne
imul
idivl
cmp
dec
jge
shll
call
jnp
fnsave
icebp
mov
andps
repnz
lret
loop
mov
pushl
outsb
cmpsb
gs
xor
lahf
mov
test
inc
fnstcw
cmp
push
push
xor
ljmp
mov
scas
js
imul
mov
movsb
jnp
cmp
and
sbb
mov
push
jecxz
out
incl
jg
test
pop
loope
mov
ss
jno
fistpll
adc
xchg
outsl
ja
mov
pop
dec
ljmp
int3
or
ds
test
pushl
int3
stos
jnp
inc
lods
mov
lcall
jnp
cmc
fldl
mov
mov
dec
add
and
sbb
sbb
or
enter
jge
nop
movsb
sahf
insb
mov
jg
repz
nop
fnstsw
mov
cmp
cmp
ficoml
test
and
lds
mov
sbb
outsl
xor
insb
lcall
adc
int3
jb
jg
inc
in
add
subl
mov
jl
adc
roll
negl
xor
inc
push
loop
aas
lods
pusha
cmp
out
sbb
adc
push
pushf
jne
inc
bound
icebp
push
dec
mov
sub
push
ljmp
or
mov
adc
xor
cli
jg
stos
repnz
push
cmpb
cmp
jge
jp
sbb
test
pusha
cli
xchg
jbe
incl
cld
cs
add
sub
xlat
lahf
jle
test
stc
pop
inc
push
jp
std
cli
lods
pusha
lcall
push
scas
imul
loopne
mov
loope
loop
aad
mov
adc
inc
cmp
pushf
mov
push
push
popl
call
cmpsb
and
out
mov
mov
pop
cmp
fidivl
mov
mov
jge
jle
jle
xchg
cmc
or
dec
scas
insb
push
ret
xchg
cmpsb
inc
dec
pop
cld
pushl
std
jl
and
lods
dec
pop
or
cmp
test
rclb
fucomi
mov
pushl
mov
or
frstor
fidivl
pop
add
push
pushf
insl
movsl
add
in
enter
pushl
push
xchg
aad
jae
sti
xchg
test
dec
or
in
mov
shlb
lock
pushl
clc
mov
inc
pop
lret
dec
lods
and
jg
adc
test
jge
incl
sahf
aam
push
in
sbb
test
stc
and
xchg
mov
hlt
mov
sub
cwtl
dec
dec
test
mov
or
ret
xor
lds
mov
xor
fdivr
fildl
les
jge
inc
or
fs
notb
in
mov
jmp
add
lods
mulb
in
shlb
xor
je
sub
push
decl
adc
or
ds
xchg
pop
faddl
sub
call
ror
sbb
testl
mov
cmpsb
adc
jle
push
or
aas
sub
nop
fildll
imul
mov
lcall
mov
rorb
inc
test
xchg
fcmovnu
mov
es
call
loop
or
mov
jmp
inc
inc
incl
imul
xchg
call
repnz
add
scas
mov
out
add
cltd
pop
push
or
loop
test
pop
aad
out
push
jp
lods
mov
push
push
lahf
cmpsl
arpl
xor
cmpsb
dec
roll
lods
call
aaa
jg
std
decl
dec
xor
push
outsl
fstpl
jg
jmp
sub
push
dec
loop
fldenv
jp
scas
cmp
pushl
adc
ror
jl
xor
add
mov
fdivr
ljmp
xchg
xlat
mov
sub
jbe
mov
int3
in
gs
test
into
mov
lcall
scas
push
push
mov
insb
inc
mov
cmp
pushl
inc
mov
push
xchg
sub
mov
pop
mov
fnstsw
inc
inc
mov
lcall
pop
sbb
add
xchg
push
pop
mov
lahf
scas
push
je
mov
cld
lahf
pushl
xchg
add
xor
jmp
not
in
sbb
iret
jl
cmp
cmp
mov
xor
lret
repz
cmc
ljmp
add
pusha
in
lcall
xchg
dec
lea
test
add
push
shll
test
btc
je
scas
mov
jg
adcl
ret
in
mov
cmp
data16
jmp
pop
xchg
inc
jmp
bound
xchg
out
mov
xchg
out
push
stos
pop
push
mov
push
mov
add
data16
pop
mov
clc
dec
inc
mov
outsl
clc
dec
mov
sbb
idivl
mov
mov
fcomip
push
nop
add
int
cmp
out
sbb
inc
test
xchg
fcompl
adc
xchg
mov
sbb
jae
call
les
jb
cmc
pusha
inc
push
test
add
bound
cmpl
fbld
push
cwtl
outsb
rorl
mov
pop
push
stos
xorl
cmp
lea
fsubr
js
xlat
aaa
add
jp
xor
inc
movsl
sbb
mov
push
je
insl
lods
mov
in
and
jnp
lret
mov
ja
sbb
stos
test
ljmp
mov
jbe
sbb
jbe
jecxz
ljmp
cmc
cmp
popa
xor
pop
push
push
cwtl
fisttps
or
jl
push
dec
mov
std
icebp
mov
aam
gs
xchg
lret
jnp
setns
incl
sub
add
pushf
mov
gs
repz
jmp
pop
cld
mov
pop
dec
iret
pop
or
or
scas
outsl
js
mov
jp
adc
cmpsl
jmp
inc
or
outsb
ret
sub
cwtl
and
incl
scas
mov
inc
add
lods
pop
outsb
arpl
lcall
fistpl
mov
sbb
fwait
lcall
dec
addr16
lods
and
push
or
js
or
int
outsb
or
cld
sbb
shl
pop
and
dec
fldcw
dec
arpl
mov
insb
pop
inc
scas
mov
sub
call
push
in
or
lock
lcall
pop
mov
adc
cs
xchg
sub
call
fchs
jl
aaa
pushf
jp
cli
pop
addb
pop
fnstcw
sbb
add
cmpsb
daa
aas
enter
imul
fxch
add
mov
adc
xor
cmp
aas
and
insl
fnstsw
mov
dec
jns
adc
inc
push
in
and
loopne
dec
push
push
push
xor
sahf
repz
repnz
stos
imul
sub
mov
cmc
sarl
xchg
daa
push
in
xchg
pop
mov
add
cmpsb
test
sub
leave
add
addb
in
mov
stos
jg
xorl
decl
push
repz
idivl
imul
jmp
call
andl
mov
lahf
pop
fiadds
adc
push
jmp
in
std
xor
mov
push
int3
mov
imul
scas
dec
mov
cmp
inc
inc
dec
insl
xor
pop
cltd
xor
orb
jno
or
mov
addr16
or
dec
decl
adcb
bnd
jne
insb
aad
outsl
ljmp
adc
mov
out
jbe
repz
push
shr
mov
cmc
mov
cld
and
outsl
and
cld
fsubl
jmp
xor
ficoms
pusha
jnp
push
lods
cmpsb
dec
ror
popa
les
cmp
nop
inc
jo
loopne
ljmp
xchg
popa
pusha
cwtl
fwait
mov
not
inc
jp
movsb
orb
ja
loop
mov
jae
insl
lcall
push
cs
mov
ljmp
sbb
test
faddl
cmp
inc
sub
jno
xlat
mov
push
mov
mov
faddl
pop
pop
fdivs
mov
lea
dec
jecxz
jno
aam
loopne
decb
ret
mov
pushl
and
outsl
xor
enter
shl
ljmp
ljmp
jg
movsl
mov
mov
sbb
inc
in
lahf
push
gs
clc
gs
std
mov
jge
push
pushf
lods
pop
dec
xchg
mov
cmc
or
adc
test
inc
aad
lret
int
dec
xchg
sahf
mov
xchg
mov
jbe
loope
mov
leave
adc
or
jg
inc
cld
lods
jbe
xchg
adc
fisubrs
stos
mov
fwait
pop
pushl
stc
addr16
in
ss
pushf
lret
fdivrs
lcall
mov
and
cmp
mov
jmp
ret
pop
xchg
dec
call
mov
and
xchg
xor
loope
arpl
push
stos
stos
lcall
mov
popf
and
adc
je
je
dec
imul
push
push
rclb
fcompl
aam
aas
repnz
lret
clc
iret
xchg
loopne
decl
sbb
mov
insl
inc
daa
stos
fdivrs
inc
adc
xchg
jmp
sahf
in
in
mov
out
dec
lahf
jae
adc
xchg
cli
dec
jle
add
jmp
ret
cmpsb
pop
jmp
add
imul
xchg
cmpsl
int
jp
shl
sbb
in
cmp
cli
mov
xlat
clc
mov
xchg
incb
mov
shrl
push
loope
adc
out
mov
mov
insl
jbe
movsb
sub
inc
push
mov
rorb
xor
cmp
insl
arpl
xchg
shll
ss
repz
mov
lds
inc
push
insb
fdivrs
dec
cld
sub
ret
inc
push
dec
push
decl
shlb
movsl
js
popf
inc
mov
mov
adc
add
cli
scas
pop
mov
add
xchg
loope
pop
push
in
loop
fdivl
subb
lahf
xlat
xor
and
jg
dec
imul
cmp
mov
jno
xchg
sar
fcmovb
enter
dec
rorl
push
pushl
sub
cwtl
dec
pop
jg
push
es
xchg
aaa
mov
call
xchg
enter
fisubs
inc
pop
daa
enter
or
jne
cmpsb
inc
or
lcall
inc
and
mov
out
lea
out
pop
loop
mov
mov
daa
sar
jmp
out
cmp
xor
or
std
lcall
jge
std
lahf
mov
dec
lock
fiaddl
mov
jmp
and
push
lock
test
push
aam
incl
xor
and
add
out
divb
sub
mov
xchg
lock
ljmp
flds
gs
sbb
add
test
jl
ss
loope
add
pusha
mov
sbb
lahf
loopne
mov
std
jecxz
inc
push
js
in
idivl
sar
mov
inc
sub
adc
push
mov
dec
mov
xchg
roll
ljmp
ret
aad
cmpsl
mov
popa
lods
daa
jecxz
cmc
xchg
fnstcw
mov
lret
push
jb
pop
cld
inc
popa
pop
out
jno
out
rol
fucom
mov
inc
iret
mov
negb
add
push
call
push
inc
mov
add
mov
push
jbe
add
fwait
pop
pusha
in
push
or
mov
aad
out
clc
mov
ret
lahf
xor
andb
int
xorl
ljmp
repnz
imul
clc
inc
xchg
xchg
test
dec
lock
aas
cmp
fsubrl
es
clc
decl
out
neg
push
add
fcoms
xchg
mov
test
add
movsb
mov
icebp
sub
pop
mov
std
jg
push
sahf
pop
push
sbb
dec
sub
cmpl
lcall
decl
inc
jl
push
pop
cltd
lea
jmp
push
xchg
mov
jle
fwait
push
mov
mov
movsb
arpl
popa
cmpsl
mov
loopne
fsubs
popf
out
ss
add
fwait
hlt
or
inc
test
lds
cmc
push
fisttpll
push
call
jmp
aad
lret
outsl
mov
xor
mov
mov
mov
sti
mov
cmpsb
and
in
push
mov
inc
daa
jo
lea
push
popf
mov
incl
inc
pop
arpl
push
adc
ret
pop
shll
and
rcrb
and
in
mov
adc
movsl
cmp
dec
ss
call
lock
popf
jecxz
and
xlat
repnz
mov
xor
push
cli
pop
inc
jge
xchg
mov
xchg
jl
lea
popf
push
or
in
es
jmp
dec
xchg
xor
push
dec
sti
xchg
mov
cmpps
mov
mov
jmp
sti
dec
push
data16
inc
popa
mov
push
mov
outsb
insb
dec
iret
pusha
ja
incl
add
lret
jl
or
add
mov
dec
pop
xchg
nop
mov
clc
pop
fwait
inc
cmpsl
mov
adc
jg
fildll
push
lds
sbb
scas
cs
jae
mov
bound
lcall
out
nop
mov
xor
std
stos
repnz
call
les
sub
divb
aaa
decl
jne
sti
mull
lds
push
fs
call
add
cmp
fwait
sbb
fwait
push
xor
popf
repnz
andb
dec
push
lods
ljmp
lret
sub
or
inc
sub
pop
cmp
lret
ds
addr16
fnsave
jmp
fnstsw
ljmp
arpl
pusha
out
and
xlat
test
xchg
rorb
dec
fdivp
bound
mov
sti
add
arpl
stc
sbb
fisubrs
call
call
in
fs
mov
mov
sbb
shll
rclb
pop
mov
lret
ret
loope
lcall
jb
fs
nop
and
test
mov
inc
mov
mov
adc
aas
rcrb
mov
cmp
sub
dec
lcall
fcos
call
pop
xchg
sub
xor
fcompl
mov
ljmp
push
add
ret
pushl
cld
jmp
imul
in
or
push
or
xchg
test
sbb
pushl
or
pop
ret
cmpb
jno
rorb
mov
or
mov
movb
pop
or
loopne
movsb
movsl
push
clc
and
insl
cmp
jp
adc
sub
loope
and
push
inc
aam
out
cmp
adc
jge
decl
rorl
xchg
pop
sub
div
movsl
int3
pop
inc
loope
addb
jg
fcomip
mov
dec
and
lods
ja
clc
scas
jb
pusha
test
out
mov
jl
mov
call
adc
insl
mov
push
push
mov
shrb
mov
adc
jns
lcall
xchg
into
test
mov
add
stos
cmc
in
test
jmp
cmp
pop
loopne
call
cmp
je
leave
dec
push
and
mov
addl
inc
inc
cmpsl
or
inc
mov
jmp
cwtl
mov
stos
sub
mov
xlat
inc
add
inc
movsb
nop
pop
xchg
inc
shlb
jg
sub
mov
jecxz
cmp
xchg
xorb
pop
mov
cmp
jae
jnp
push
cmp
js
add
adc
mov
jecxz,pn
decl
gs
lds
xchg
movb
and
mov
xchg
inc
dec
push
lahf
pop
insb
add
aas
jecxz
push
xor
pop
repz
mov
js
xchg
cmp
lock
orb
cli
dec
pop
ret
ror
repnz
and
xchg
inc
leave
dec
fistl
mov
aad
ret
push
clc
or
incl
fists
pop
inc
or
cs
arpl
mov
aas
pop
decl
decb
hlt
jmp
xlat
loop
jb
fs
add
or
lods
mov
sub
xchg
leave
inc
add
pushf
dec
mov
cwtl
pop
das
das
mov
pop
and
lahf
pushl
cld
pop
or
dec
mov
cltd
mov
lds
xor
incl
inc
fists
ljmp
or
out
inc
pop
jmp
jp
icebp
pushl
movsl
add
xchg
sbb
adc
data16
mov
and
cmpsl
rorb
xchg
jnp
jge
test
out
addr16
push
clc
fnstcw
fldcw
fistl
mov
fisubl
sub
sub
daa
orb
adc
dec
push
sbb
mov
fs
mov
cmpsl
das
pusha
loope
sti
sub
outsl
cli
dec
push
mov
jmp
in
pop
in
mov
in
pushl
les
xchg
pusha
add
mov
stos
xchg
lock
not
dec
or
push
call
fwait
shll
sub
in
inc
cld
in
test
sbb
sbb
pusha
cmp
inc
mov
inc
jmp
call
pusha
cvtps2pi
adc
inc
mov
xchg
jp
stc
hlt
subb
dec
sbb
incl
push
or
jno
in
pusha
mov
jmp
test
mov
push
jl
outsb
sarl
std
rcrl
pushf
jge
xor
mov
in
testb
pop
testb
imul
mov
incl
push
int3
mov
mov
ss
xchg
fadds
adc
or
out
movsl
lock
mov
fbstp
or
sbb
pop
pop
mov
ficoms
clc
push
flds
data16
aaa
sti
rolb
jae
popf
xchg
pop
mov
gs
jnp
incl
or
lock
sbb
inc
pop
jg
sti
inc
pop
scas
bnd
xor
push
add
lcall
daa
ret
test
in
sahf
imul
imul
out
ja
push
jo
arpl
cli
sub
cs
pop
push
lock
aaa
or
ljmp
lret
mov
test
incl
add
jns
push
xchg
rcl
xchg
scas
or
xor
mov
mov
xlat
out
cmp
out
pop
jl
pop
jmp
sbb
inc
cmp
push
add
insb
inc
sahf
nop
mov
in
adc
sub
ds
shlb
out
inc
inc
out
stos
jmp
leave
mov
mov
pop
mov
inc
pop
loope
or
jecxz
sub
jecxz
cli
inc
push
iret
lods
adc
movsb
xchg
add
inc
out
fdivrp
pushl
push
inc
fsubrs
or
lock
and
clc
pop
stos
outsb
mov
or
in
adc
inc
jg
fwait
pop
std
mov
clc
or
sti
xchg
push
cmpsl
gs
mov
push
lcall
cmc
lcall
add
fdivl
jno
in
jbe
lds
and
push
and
incl
cltd
add
pop
test
xchg
iret
lret
inc
inc
inc
push
ret
cmp
call
out
fcmovnb
jl
movsl
dec
pop
mov
test
mov
pop
std
lcall
pop
les
imull
fsubl
push
pushf
add
dec
cwtl
cmp
jns
jge
xchg
iret
xor
clc
mov
jae
mov
lock
mov
in
cli
or
arpl
push
iret
xchg
ljmp
sahf
lret
mov
cmpsl
add
or
das
aam
cmp
movsl
aas
add
jbe
fistpll
xor
cwtl
data16
mov
movsb
xchg
mov
fwait
jns
test
rolb
sbb
mov
jge
jg
dec
icebp
cld
aaa
jle
xchg
xchg
cs
in
mov
decb
ret
xlat
and
adc
add
push
mov
inc
ljmp
ds
pushf
test
push
insl
push
xor
maxps
xchg
adc
lock
testl
movsb
incl
aaa
adc
sub
mov
push
lcall
sub
jge
push
je
mov
cld
das
shr
mov
shll
icebp
std
pop
xchg
pop
dec
mov
lcall
shlb
jmp
push
push
xor
sti
iret
stos
mov
incb
pop
mov
xor
shl
sbb
hlt
push
dec
shll
ret
dec
jp
mov
add
push
push
xchg
ljmp
inc
fcoms
imul
fldt
adc
dec
adc
arpl
jecxz
mov
leave
sub
bound
cli
aam
mov
sub
ljmp
outsl
cmp
jno
mov
ret
add
lahf
mov
pop
lock
lret
repz
rorl
xor
fwait
pop
subl
jne
jns
mov
les
pop
scas
lock
push
adc
and
and
mov
call
sahf
imul
aad
hlt
sub
orl
mov
stos
sub
stc
cltd
mov
dec
cltd
lea
push
imul
js
outsb
test
movsb
push
test
out
sub
jo
pop
jl
decl
test
sbb
ja
sti
int
or
lods
pop
arpl
ficoml
inc
test
stos
int
jns
jl
fdivr
fidivrs
das
stos
sbb
xchg
subl
cmp
pop
or
inc
mov
adc
jge
mov
clc
lods
mov
and
out
cltd
push
in
xor
jb
add
popf
pop
jl
pop
sub
ret
out
jns
arpl
xor
pop
add
mov
sbb
mov
repnz
fcmovnbe
imul
pop
fs
jnp
orb
mov
pushf
ljmp
test
lret
les
sbb
mov
rcrb
icebp
fildl
dec
cmp
jle
pop
inc
jmp
jae
sub
or
xchg
jle
call
cwtl
xchg
inc
lds
out
inc
dec
call
adc
fwait
and
shl
es
add
fpatan
push
decl
sti
pushf
out
sbb
in
ss
jne
fisubs
imul
pop
jg
pushl
push
add
xchg
mov
movsb
xchg
sbb
xor
lcall
cmc
pop
inc
jno
ja,pn
fbstp
lods
mov
inc
jle
jbe
xor
rorb
ljmp
cli
jecxz
cmp
jbe
adc
pandn
hlt
pop
xchg
fdivr
ljmp
push
cmp
and
add
inc
lcall
int
cmp
pushl
decl
rol
ret
lahf
sar
insb
mov
sbb
stos
mov
sbb
and
inc
mov
jb
mov
popf
imul
cld
imul
decb
hlt
outsl
sub
ss
cmp
cs
in
sbb
lock
cld
fbld
xchg
jge
dec
mov
ret
add
aaa
out
add
pop
sarb
add
mov
loop
mov
bound
sub
or
xchg
insb
pop
push
push
mov
fdecstp
repnz
dec
mov
mov
pushl
sbb
sbb
test
dec
mov
aam
idivb
push
call
jp
jl
cmp
jl
out
adc
fld
jbe
sub
and
fcmovnb
enter
ljmp
mov
jg
decb
nop
into
sahf
call
dec
mull
cld
push
lret
mov
push
rcrl
testl
lods
insl
jne
jmp
je
jp
mov
int3
fs
inc
cli
inc
out
xorb
xchg
push
jecxz
ja
jp
mov
push
dec
insb
mov
negb
pop
pop
add
pushf
push
hlt
popa
add
daa
fisubl
cs
push
inc
or
push
mov
fistps
pop
cmpsb
mov
insb
out
jno
push
lcall
mov
mov
addl
mov
icebp
adc
lds
mov
lahf
jl
pushl
ret
mov
out
jnp
repnz
mov
frstor
insl
mov
orl
incl
push
xchg
call
dec
or
fisubrl
mov
cld
sbb
pop
sbb
mov
jne
xor
test
pushl
sarl
jp
leave
sbb
or
pop
movsb
movsl
pop
cmp
jne
lcall
call
out
sbb
pushf
iret
nop
ljmp
push
pusha
das
adc
lcall
test
jne
pop
xchg
mov
stos
out
cmpsl
lret
int
outsl
pushf
pushf
inc
mov
test
sub
jmp
cli
xchg
lods
aaa
ficomps
or
jne
test
mov
push
cmpsb
mov
push
push
push
mov
cli
dec
or
dec
fdivr
mov
push
xchg
jl
xor
adc
nop
scas
push
idiv
outsl
cli
pushl
popa
pushf
aam
mov
push
aad
xor
leave
mov
bound
xchg
mov
jmp
push
dec
inc
aam
cmp
pop
daa
nop
xor
add
sbb
fidivrs
xor
mov
xchg
pushl
imull
jns
fsubs
cmp
adc
pop
mov
sbb
cmp
inc
mov
pop
std
in
in
lcall
aas
loope
and
daa
test
ljmp
out
out
sub
icebp
mov
mov
iret
repz
loope
ljmp
ret
cmp
adc
sub
mov
sub
sub
jg
add
repz
cmpsb
orb
dec
lock
sahf
mov
sub
scas
pop
nop
decl
push
pop
sbb
rorb
inc
push
mov
cmp
and
outsb
cmp
into
adc
sahf
mov
jg
ret
pop
outsl
mov
scas
add
jo
loop
scas
jns
aas
xor
call
std
stos
in
pusha
int
xchg
loopne
and
push
daa
xor
push
scas
fldl
push
jmp
mov
or
jns
jp
fidivrs
mov
xchg
std
xchg
and
loope
jb
out
xorl
call
xchg
or
ss
call
jns
test
pop
mov
dec
sarb
inc
decl
dec
sar
test
add
jmp
mov
sti
sti
ss
arpl
enter
mov
clc
jle
xchg
lret
sbb
cmp
ss
psubb
out
out
push
push
cmp
popf
jae
jge
cmp
lea
dec
pop
sub
inc
jl
mov
outsb
jo
inc
out
mov
test
stc
or
pop
push
jg
cmc
jg
lahf
andl
inc
xchg
adc
dec
fwait
pop
pusha
pushl
cld
pusha
jne
cmpsl
pop
sub
nop
mov
lahf
aaa
subb
jmp
in
push
pushl
std
cld
mov
push
push
push
test
outsb
hlt
lock
dec
add
dec
sarl
loopne
sti
lcall
arpl
daa
idivl
inc
pop
jge
jle
jae
pop
push
idiv
jg
ds
cld
outsb
sub
out
xchg
mov
mov
lret
sub
mov
iret
fstps
pushf
mov
jmp
nop
mov
ret
pop
in
xorb
adc
in
repz
sbb
jg
mov
mov
push
bound
lock
mov
and
mov
fistl
pushl
jns
mov
dec
pop
inc
pop
leave
sarb
push
sbb
sti
enter
mov
es
pop
aam
decl
aaa
mov
inc
dec
out
push
mov
or
push
daa
jno
ja
divl
xchg
scas
sbb
test
cld
pop
hlt
int
sbb
pop
mov
sub
out
or
adc
inc
sahf
dec
and
dec
adc
sbbl
pusha
adc
xlat
adc
jmp
adc
add
adc
pop
inc
xlat
rcr
jge
sbbb
andl
ljmp
repnz
mov
sarl
mov
cmp
push
loop
inc
or
jmp
sbb
repz
loope
cmp
and
sar
push
cmp
sub
add
and
and
cmp
xchg
pop
into
or
sahf
ljmp
std
das
call
mov
jmp
and
stos
repz
loop
push
jg
lret
pushl
sub
pop
add
or
out
dec
rolb
cmp
or
incl
cmpl
call
gs
cmc
push
test
lret
pushl
jmp
dec
and
cltd
fcompl
out
lret
out
add
mov
scas
push
adc
jmp
mov
ret
xlat
adc
mov
je
sbb
fdivs
pusha
aas
or
sbb
test
inc
xchg
mov
xchg
jno
sbb
mov
mov
inc
divl
mov
nop
push
fwait
pop
mov
out
fbld
mov
xchg
push
fdivr
lret
mov
dec
test
or
cmp
mov
push
es
sub
add
sbb
mov
cmp
inc
add
mov
pusha
mov
cmp
fisubrl
xchg
sub
add
cmp
or
fs
sbb
pusha
dec
pop
pop
add
inc
xor
inc
lcall
aad
pop
in
es
test
sbb
orb
decl
loop
mov
cld
pop
mov
mov
mov
sbb
adc
mov
sbb
dec
and
rclb
repz
push
push
or
call
push
sahf
add
or
test
xor
inc
pop
jb
mov
aaa
popa
arpl
inc
cwtl
popf
push
push
clc
ljmp
lret
loope
rorb
push
xchg
loope
pop
lret
and
cmpsb
push
pop
filds
rorl
jns
and
popf
lcall
hlt
push
cmp
dec
les
inc
scas
or
add
incb
sti
mov
pop
decl
lods
rcl
idivl
push
hlt
dec
and
in
das
xor
add
in
mov
pushl
or
push
fldt
sbb
or
dec
in
fcmovnb
pop
movb
je
ljmp
mov
andb
dec
mulb
add
adcl
lret
nop
pushf
pushl
fidivrl
pushf
stos
xchg
and
popa
mov
xor
scas
into
ficoms
mov
call
rolb
bound
test
mov
incl
ret
push
adc
push
lods
inc
mov
lret
ficompl
adc
pushl
and
fimuls
jg
rorl
nop
xlat
mov
negb
test
xchg
stos
in
lahf
shlb
xlat
mov
movb
negl
sar
roll
pop
or
incl
pop
push
xlat
nop
sbb
fwait
insb
arpl
mov
mov
in
les
adc
das
aam
pop
mov
ljmp
pop
sbb
lea
adc
addl
lret
pop
mov
and
imul
cli
pop
or
inc
movl
daa
cmp
sub
jmp
je
dec
dec
push
jg
dec
pop
loop
xchg
lods
jne
adc
sbb
mov
xlat
and
sbb
mov
cwtl
and
pop
incl
popf
enter
lcall
mov
daa
test
ret
jmp
dec
jno
jecxz
sarl
loopne
pop
enter
lcall
dec
jno
xor
ret
dec
push
push
mov
inc
shrb
xor
sbb
dec
cli
inc
add
popa
cmc
sub
ret
divl
pushl
test
pop
or
mov
sbbl
mov
fistl
std
in
sbb
sub
xchg
stc
mov
hlt
sarl
std
ljmp
clc
daa
imul
sbb
push
outsl
ret
jo
shrb
cmp
jnp
pop
or
lea
or
jecxz
test
ret
or
mov
loop
dec
xor
xchg
js
mov
sub
push
clc
sub
pop
mov
in
es
sub
jae
or
fcomip
cwtl
stos
adc
arpl
xor
xchg
push
adc
and
in
mov
cltd
pop
xor
lcall
push
or
mov
and
lret
mov
in
inc
sbb
sbb
pushl
movsb
lock
mov
add
stos
adc
clc
fwait
mov
in
push
sbb
pop
cmpsl
jb
les
scas
sbb
mov
repz
call
fildl
xlat
imul
inc
push
or
jbe
xchg
rcrl
decl
dec
aaa
aaa
sbb
jecxz
and
lds
adc
push
js
aam
repz
adc
jmp
enter
jb
push
pop
mov
out
or
xchg
mov
stc
cmp
push
lcall
xchg
cmc
cmp
push
jl
mov
mov
arpl
dec
loopne
or
cld
repnz
repz
xchg
xchg
aam
cmp
fs
loop
cltd
sub
push
mov
pop
mov
lods
call
popa
mov
movsl
cmc
sbb
xor
ljmp
repnz
or
loop,pn
ljmp
and
push
in
xchg
int3
adc
ljmp
inc
movsl
xlat
push
inc
pop
pop
imul
mov
jle
mov
or
lock
incl
lret
mov
aam
sub
pusha
sub
fnstcw
rcrl
popa
outsb
xor
out
inc
in
rorb
incl
ret
mov
lahf
adc
pop
ret
lods
vmread
ja
adc
mov
add
jns
inc
aaa
inc
int3
cli
cmp
in
inc
mov
scas
dec
add
loope
popf
ret
sbb
call
into
mov
jmp
scas
inc
jne
xor
aas
aam
xor
jno
mov
push
jg
cwtl
mov
and
out
icebp
push
ret
loope
xor
fsubr
loop
jbe
push
mov
decl
pusha
in
int
add
data16
xor
dec
nop
fidivrl
mov
mov
jo
imul
ljmp
mov
testb
cli
xlat
pop
dec
pop
out
mov
mov
subb
and
cwtl
cwtl
test
call
icebp
lret
mov
inc
add
jg
outsb
xchg
mov
sbb
xor
dec
decl
push
xchg
mov
test
stc
lock
cmpsl
aad
fistpl
push
inc
data16
mov
jle
not
mov
stos
dec
popf
scas
pop
test
add
xchg
in
call
jp
jp
jl
das
inc
xchg
inc
test
adc
ljmp
push
add
bound
out
xchg
rclb
sbb
mov
mov
sub
cwtl
mov
mov
dec
and
lahf
xor
cli
add
mov
mov
xor
dec
and
dec
shl
xchg
mov
dec
cmp
jp
push
fildl
or
jg
mov
jo
into
mov
pop
xor
jmp
lret
mov
pop
movsl
data16
jge
dec
mov
out
inc
dec
in
lea
pop
aam
jno
xchg
dec
shll
xchg
lock
outsb
incl
scas
dec
cwtl
mov
movsl
dec
xchg
lcall
clc
xchg
adcl
mov
lcall
popf
mov
fwait
mul
ret
je
icebp
cmp
xor
aad
dec
push
mov
mov
ljmp
add
lods
sti
pop
movsl
repz
pop
leave
test
inc
mulps
pushl
cltd
loop
test
popl
xor
leave
ficoml
cmpsb
mov
mov
call
clc
cmpsb
shl
sbb
add
lea
out
imul
inc
adc
stos
ficomps
shlb
jb
in
lock
incl
adc
dec
or
cmp
cmp
ljmp
fistps
subb
jns
push
push
fadd
adc
loopne
jp
lret
pop
cld
in
xchg
add
mov
inc
out
cmp
mov
xchg
push
ljmp
aaa
out
int
lret
inc
ss
pand
mov
push
inc
mov
call
cld
int3
mov
jno
sub
pop
sbb
adc
shr
sbb
sbb
jmp
test
testw
push
jae
lds
adc
aaa
adc
out
cli
movsl
xor
mov
stos
adc
int3
fsts
push
cmc
sub
call
loopne
in
enter
ret
adc
imul
add
test
call
jmp
lret
dec
xchg
daa
fcompl
pop
sbb
sbb
add
repnz
test
int3
call
push
xor
int
jp
fsub
icebp
fldenv
loope
subl
lods
fcomip
pop
aaa
dec
cltd
ret
bound
mov
mov
lock
sbb
fsubs
aas
repz
fcomip
incl
or
mov
dec
mov
lret
xlat
mov
or
call
add
fcompl
inc
or
nop
lds
xchg
nop
adc
mov
mov
lret
mov
fisubs
aad
sbb
mov
ret
adc
int
clc
pop
std
inc
push
mov
xchg
mov
mov
sbb
mov
fsubrl
js
pop
icebp
outsl
mov
es
mov
gs
leave
inc
mov
cld
jae
incl
test
pop
inc
popa
push
inc
mov
mov
data16
decl
or
adc
adc
outsb
inc
cmp
pusha
fistps
xchg
das
clc
mov
faddl
mov
fidivrs
xchg
mov
xchg
mov
push
mull
or
testb
push
ljmp
jne
lcall
sub
pop
addb
dec
xor
or
ss
adc
and
cmp
add
pushl
ss
mov
cmp
pusha
shrb
iret
push
jb
xchg
incl
pop
push
push
inc
je
mov
push
out
test
jge
lock
ds
fdivrs
or
lcall
hlt
cmpsb
in
push
and
add
shll
jecxz
clc
decl
xchg
xchg
lock
cmpsl
js
repnz
mov
add
xchg
test
cmpsl
pop
bound
mov
xor
hlt
lds
incb
mov
inc
cmp
and
orb
je
cld
ljmp
pop
inc
add
push
daa
sub
addr16
push
icebp
call
je
cmp
loopne
and
popa
adc
fisubrl
and
stos
inc
loopne
mov
stc
cmp
and
xor
push
scas
add
decl
mov
popf
shl
fisttps
lods
push
decl
jecxz
lret
mov
gs
scas
out
fs
in
shll
mov
jp
iret
inc
cmp
incl
jo
mov
sub
frstor
jae
loope
and
mov
jecxz
fs
sti
sub
aad
popa
lds
fmuls
xchg
shl
in
int3
clc
mov
or
dec
add
decl
call
push
rcll
jle
pop
inc
jg
loope
lcall
xchg
lret
push
cmp
in
aas
xor
xchg
loopne
iret
cmp
fimull
fnstsw
mov
push
pop
cmp
xchg
jae
inc
pop
mov
dec
daa
jle
mov
ljmp
xchg
pushf
xchg
flds
popa
dec
adc
out
xchg
loopne
push
sbb
aam
imul
ret
ljmp
xor
mov
lods
lret
lahf
ljmp
out
nop
loop
pop
sarb
jb
sub
and
mov
push
xchg
or
add
xlat
ljmp
lcall
pop
or
loopne
mov
cmp
and
testb
sar
pushl
stos
lret
cmp
mull
cld
mov
cmp
push
imul
inc
movsb
and
xchg
leave
cmp
inc
mov
jle
subl
mov
insl
push
xor
adc
mov
inc
pop
cmpsl
xchg
aaa
sahf
test
sbb
cs
test
dec
add
in
int3
pop
xor
sbb
iret
mov
push
sub
mov
jmp
sbb
adc
mov
add
mov
incl
mov
xchg
enter
mov
inc
sub
mov
incl
xchg
repz
mov
mov
mov
cmc
loope
push
icebp
shrb
sbb
inc
popa
dec
cmp
jmp
pop
rolb
push
add
ret
push
push
les
cmp
jg
lods
int3
in
out
jae
fisubrl
push
ljmp
xchg
sbb
mov
xchg
jno
add
mov
out
push
push
push
jmp
std
and
cs
push
ljmp
xchg
add
popf
shlb
call
jmp
jmp
xlat
mov
jg
mov
add
stc
inc
sbb
xor
fcomip
mov
test
mov
popa
inc
inc
mov
sar
pop
leave
fstpt
mov
mov
mov
push
mov
mov
mov
and
push
push
mov
inc
jmp
push
incl
cld
jg
sub
leave
push
arpl
jnp
les
sbb
ljmp
sahf
push
fidivs
and
outsl
test
jmp
cmp
out
jp
mov
outsb
cmp
mov
inc
divb
dec
adc
dec
fstp
out
add
jmp
jnp
negl
sarl
lcall
aam
and
je
ljmp
mov
adc
fmull
das
cmp
sbb
lods
push
inc
mov
cmc
in
push
in
or
movsb
mov
call
inc
add
adc
aad
push
scas
sub
shr
imul
rcrl
repz
hlt
ljmp
push
pop
inc
sub
test
iret
faddl
incl
aaa
sub
out
push
test
sti
xchg
mov
xchg
mov
push
popf
ljmp
add
xor
adc
fdivl
adc
fidivrs
decb
push
mov
push
jmp
xlat
loope
add
out
call
xchg
sbb
int3
pushf
jmp
scas
cmp
es
mov
mov
decl
decl
pusha
pusha
les
mov
aas
cmp
jns
pop
mov
int
bnd
call
stos
mov
pop
loop
test
cwtl
dec
mov
mov
adc
dec
or
pushf
sub
or
xor
fildll
sarb
and
or
ds
cmp
inc
sbb
mov
adc
jne
add
iret
jp
pop
rclb
dec
mov
shl
mov
fwait
ret
push
movl
fmull
dec
ret
jnp
xchg
pop
scas
xor
add
stos
aam
arpl
inc
push
inc
psubd
xchg
stos
leave
inc
call
inc
and
jns
or
dec
xor
add
clc
mov
cmpsb
and
and
inc
jne
lret
out
imul
pop
dec
loop
mov
mov
ljmp
add
add
scas
divl
scas
pop
cmpsl
std
loop
mov
adc
outsb
stos
inc
cmp
cmc
jmp
roll
xchg
sub
xchg
jmp
pushf
negl
mov
lcall
fsubrp
sbb
lods
sbb
xor
jb
dec
scas
jmp
sahf
sarb
xchg
pop
push
outsb
mov
jl
pop
jbe
cmp
fadds
mov
inc
adc
push
in
mov
xchg
aaa
fcomps
jecxz
xchg
aam
mov
fldl
mov
outsl
js
out
jle
dec
push
adc
xchg
jmp
cmp
adc
decl
shll
shll
and
add
mov
enter
push
insl
push
or
sbb
mov
cwtl
icebp
sub
fwait
pop
mov
mov
cmp
sbb
dec
fsubrp
popa
pcmpgtd
dec
ret
jmp
adc
test
imul
jo
push
dec
sbb
mov
loop
rcrl
ljmp
xor
xchg
shll
mov
cmp
stos
pop
pop
sub
mov
es
lret
ljmp
push
jo
std
hlt
inc
mov
bound
mov
daa
aam
mov
cmp
adc
mov
and
pop
fwait
jmp
cltd
cmpsb
fistl
js
scas
push
jge
hlt
leave
rcl
adc
incl
cmp
mov
inc
iret
cmpsb
cli
inc
test
pop
fisttps
cmpb
xor
mov
decl
add
call
jge
fistpll
sub
and
lcall
pop
pop
sbb
enter
jmp
movb
jo
sub
xchg
gs
push
dec
iret
xchg
push
leave
mov
cmpl
sub
in
or
push
push
sar
mov
sbbl
push
lcall
incb
ret
sbb
stc
cmpsb
jg
in
adc
inc
adc
fmulp
push
jge
jno
fcompl
and
xchg
hlt
fiaddl
xor
push
xor
jae
xor
pop
mov
sbb
in
jp
dec
and
cld
test
enter
lock
xlat
clc
movsb
lcall
xchg
shll
testb
sbb
mov
outsl
pop
rorl
jae
ret
jmp
push
aaa
imul
data16
adc
xor
jo
lret
loopne
ja
je
daa
cmpsb
sub
cmp
cmp
mov
sub
ds
jge
into
fs
lods
sub
mov
add
cmp
cmp
inc
icebp
adc
xchg
notl
pop
fs
inc
popa
rclb
add
mov
dec
mov
roll
adc
jno
mov
jle
in
cmpsb
xor
call
xsha256
lcall
mov
sbb
outsl
and
and
pop
lret
pop
sbb
fdivr
arpl
out
push
cmc
mov
mov
inc
sub
loope
sbb
ss
les
sti
in
adc
or
ds
popa
xchg
inc
inc
fwait
sub
out
xlat
in
dec
or
xchg
loopne
mov
dec
mov
sbb
incl
jmp
cmpsl
push
das
adc
not
dec
dec
ss
xchg
dec
nop
decl
mov
lods
add
jo
mov
xor
dec
sbb
jmp
adc
mov
sub
pop
dec
jmp
xchg
jae
cmp
lahf
loopne
dec
insl
inc
gs
push
xor
ljmp
in
push
lret
mov
js
mov
outsl
addr16
fbstp
sbb
cwtl
fsubrs
shr
loope
lret
dec
adc
daa
mov
mov
shrl
aas
xor
lcall
mov
cmp
xchg
pushf
cld
jle
int3
rcrb
mov
orl
push
in
jle
lcall
pop
fs
call
push
mov
and
test
repnz
sar
xor
xlat
jl
add
xchg
hlt
out
repz
scas
xor
and
jl
aaa
cld
dec
mov
popl
mov
pop
shll
test
mov
int
add
dec
xor
jmp
das
cmpsb
and
pop
dec
lods
movsb
push
popa
add
decl
sbb
mov
jg
fistpll
in
cmp
or
sbb
nop
xchg
mov
shll
pushl
mov
add
adc
sub
jp
push
lods
out
cmp
mov
cmp
cwtl
inc
outsl
xchg
or
xchg
pop
sub
sub
hlt
adc
fs
nop
mov
pushl
pop
clc
adc
inc
repz
data16
jns
nop
xorb
xor
jmp
repnz
aas
dec
bound
pop
dec
andb
cli
popa
inc
out
xchg
in
cmp
scas
add
add
mov
incl
sahf
xchg
stos
test
mov
mov
add
inc
cli
push
imul
jb
pop
xchg
mov
subb
test
pop
int3
xor
scas
inc
je
mov
sbb
insb
and
and
ja
lcall
xchg
test
jecxz
shlb
dec
mov
mov
dec
sub
inc
sar
or
idivl
sub
inc
or
cmp
cmpsl
sub
mov
sbb
subl
cli
iret
jecxz
sub
lcall
adcb
shlb
fs
mov
xor
inc
mov
int
and
push
jle
or
ljmp
xchg
inc
mov
pop
xchg
or
out
lret
xor
aam
rclb
pop
jle
mov
lcall
das
mov
xchg
gs
mov
das
lods
je
ss
out
aad
sbb
mov
lcall
repnz
sub
stos
aaa
insb
cmp
pusha
xor
pop
decl
xor
fs
inc
outsb
push
xchg
and
push
mov
lds
es
dec
inc
cs
sub
lcall
js
cmp
popa
outsb
clc
test
push
in
push
xor
push
mov
ds
test
lds
imulb
lock
aam
lcall
dec
sbb
decl
decl
and
int
cli
xlat
ja
jl
std
popf
repnz
push
repz
jmp
mov
mov
test
xor
leave
outsl
mov
jg
icebp
cli
fsts
lcall
xchg
jno
jge
jp
and
mov
sub
stos
mov
pop
inc
add
jno
push
sbb
xchg
daa
aas
fwait
jmp
arpl
scas
out
aas
int3
pop
test
cltd
cmpsl
xchg
data16
or
iret
xchg
inc
jmp
xchg
imul
popa
movsl
cmp
in
ljmp
cmpsb
inc
pop
sahf
push
or
aam
mov
cli
dec
jle
and
lods
js
fcomip
fldt
das
ljmp
bswap
aad
pop
sub
fbld
movsl
and
clc
inc
fstpt
inc
loop
outsl
add
scas
es
enter
stc
adcl
mov
cmp
push
xchg
rolb
inc
ja
fwait
adc
fmuls
sbb
inc
in
jno
add
dec
jnp
andl
xchg
mov
popa
leave
lods
sub
sbb
ljmp
pusha
fwait
mov
leave
pop
xor
insl
push
cmc
jg
jge
lret
push
in
ljmp
jno
sub
mov
out
fcomi
roll
dec
push
into
mov
bound
xchg
dec
ss
pop
sub
imull
or
push
movsl
scas
enter
mov
or
ljmp
xchg
enter
add
and
add
cmpsl
fnstenv
fyl2x
decl
iret
gs
scas
adc
iret
sbb
test
mov
and
mov
repz
jle
jmp
shll
mov
or
mov
pop
and
fdiv
test
mov
cltd
jge
ret
adc
add
lcall
mov
xchg
sub
lret
sub
pushl
mov
jb
push
dec
mov
orb
movsl
mov
sbb
outsb
mov
idiv
cmp
in
aad
xchg
mov
adc
jle
leave
imul
mov
cmp
fists
pop
aas
push
sub
xor
cmp
jge
pusha
repnz
lods
inc
cltd
and
pushl
incl
das
dec
mov
xchg
cmc
sbb
and
int3
xchg
xchg
sbb
inc
mov
into
cld
orl
cmp
pop
loopne
adc
inc
clc
push
adc
inc
in
push
ljmp
pop
sub
gs
and
add
mov
cwtl
imul
lcall
jle
xchg
and
jmp
cmp
sbb
fistpll
mov
out
aam
fisttpl
in
mov
mov
jmp
imul
cmp
ficomps
mov
nop
xchg
jg
and
push
add
mov
jmp
call
movb
fadds
xchg
repnz
cmc
btr
inc
or
pusha
push
aaa
dec
gs
mov
ror
pushf
movsl
stos
adc
jp
fbld
insb
push
add
loope
inc
xor
outsl
nop
stos
mov
pop
mov
loopne
incl
adc
mov
pop
or
lods
lret
int3
fbstp
pop
jp
es
mov
aam
out
in
ljmp
and
je
sub
adc
mov
mov
inc
xchg
inc
lds
pushf
clc
pop
push
xchg
lcall
or
or
test
pop
or
cld
xor
daa
mov
cwtl
sbb
pop
loopne
insb
xor
inc
push
push
cmpsl
sub
pop
dec
jb
push
ds
sbb
sub
imul
sbb
push
das
sub
scas
outsl
mov
adc
hlt
shl
dec
dec
jmp
dec
adc
imull
in
ljmp
mov
or
mov
insb
adc
int
xchg
es
incl
es
mov
xor
mov
dec
cmp
stos
or
in
outsl
outsl
cli
fildll
ds
in
sbb
insl
inc
xor
mov
loop
and
xchg
sti
dec
xchg
xor
sbb
andl
push
call
call
loope
cmp
fistpl
or
mov
and
scas
xchg
bound
orb
and
mov
jb
std
dec
test
test
inc
xlat
orl
ljmp
out
clc
punpcklwd
pop
jmp
cmp
pop
cmpsl
mov
movb
ljmp
mov
inc
fcomps
jecxz
push
add
rcll
fmull
cli
adc
leave
push
xchg
mov
lds
mov
mov
adc
inc
push
xor
test
pop
xor
sub
and
mov
jne
jae
outsl
xor
mov
jl
pushf
rcrl
push
ljmp
ljmp
loopne
adc
or
iret
insl
cli
sub
out
jmp
out
jnp
lcall
cs
fidivs
lock
fwait
jle
sarl
lcall
and
inc
icebp
cmpsb
in
in
orb
or
push
inc
push
adc
popf
pop
jmp
out
cmp
xchg
push
inc
enter
hlt
jp
dec
jmp
ss
out
fists
aas
into
call
push
insb
pop
add
sub
sub
andb
cmp
push
lods
sub
push
call
lea
xchg
leave
fiaddl
mov
call
sub
pop
mov
adc
xchg
mov
int
mov
xor
decl
ljmp
adc
adc
sti
jle
shll
icebp
dec
cld
adc
or
incl
push
lods
push
pop
imul
and
sub
test
xchg
push
mov
mov
decl
pushf
leave
xlat
int3
stc
jge
mov
mov
fstpt
jge
sbb
ds
out
inc
push
adc
ror
hlt
pop
push
and
lock
call
lahf
adc
dec
pop
lods
inc
xrelease
mov
push
shr
mov
int
mov
fcomip
ljmp
je
pop
popa
mov
jae
xor
lcall
ljmp
dec
or
lock
sub
int3
test
into
frstor
call
sysexit
das
push
add
xor
mov
jno
call
lcall
sub
jb
jmp
push
fidivrs
into
aaa
xchg
icebp
pop
fucomip
imul
shl
jmp
dec
xor
stos
jns
addr16
dec
inc
jbe
add
fmul
mov
jg
sbb
loopne
jmp
popf
mov
mov
jmp
repnz
dec
adc
fcoml
and
xchg
or
jmp
test
dec
xchg
jg
mov
xchg
adc
pushl
push
xor
jo
in
inc
outsb
js
in
pop
mov
in
cli
and
pop
inc
call
cmp
pop
xor
or
xor
out
or
pop
jo
add
in
lcall
shrl
xchg
inc
or
dec
cld
ljmp
pop
push
xor
pop
mov
adc
add
jg
adc
int3
ficomps
cmp
fdivrs
xor
or
jnp
dec
aad
notl
leave
sbb
pop
jne
call
lock
jo,pn
in
popf
jge
adc
lret
popf
testl
stos
and
add
call
fists
dec
jg
icebp
lcall
mov
aam
xor
inc
pop
dec
and
decl
outsl
imul
cmpsl
mov
pop
into
outsb
subb
cs
jg
in
pop
xchg
xor
insb
mov
or
aad
inc
or
dec
int3
jbe
iret
bound
cwtl
adc
dec
setns
pusha
push
sbbb
xlat
iret
je
mov
cmp
mov
fistpl
daa
mov
sbb
xlat
xchg
push
dec
mov
pop
fdivrl
push
stos
sti
loop
popf
cli
test
lock
aad
and
aad
testl
mov
shrl
push
xchg
jne
adc
inc
into
xchg
rcl
std
mov
mov
jbe
cmpps
xlat
xchg
in
add
xor
daa
cwtl
inc
inc
mov
cli
cmp
test
in
jb
call
enter
out
lret
cmp
jmp
imul
xchg
jmp
mov
add
or
test
xor
xchg
pop
xchg
jo
xor
call
lea
inc
scas
mov
dec
xchg
fmull
mov
jb
cmp
xlat
cmp
xlat
pop
ljmp
xchg
pop
popa
push
fcompl
popa
lods
test
xlat
xchg
mov
movsl
xchg
xchg
dec
pusha
pop
cwtl
jp
cmp
mov
jb
insb
call
sti
stos
sub
lcall
repz
jg
inc
leave
and
xchg
sti
call
decl
scas
push
jecxz
mov
jge
or
aas
jno
addr16
jl
in
sar
das
sar
mov
xchg
das
pop
or
inc
call
push
jmp
loopne
fildll
shl
in
cmpsb
fstpl
sbb
xor
inc
dec
dec
xor
jg
fcompl
out
loop
jl
xchg
ja
out
shlb
nop
pop
insl
sub
stos
jge
add
outsb
icebp
icebp
mov
test
inc
dec
je
scas
or
push
jmp
and
xchg
add
jbe
mov
fstpl
pusha
and
decl
push
test
insl
xor
or
add
ljmp
dec
nop
mov
loopne
jno
into
xchg
insl
inc
xchg
add
mov
fistpl
ret
xchg
dec
sahf
dec
xor
adc
cmp
push
in
std
xor
rclb
sbb
out
loop
cmp
ret
xchg
push
sub
dec
push
pop
std
decl
stos
shl
xchg
arpl
test
rcr
inc
mov
lods
xchg
pop
insl
xchg
pop
mov
jmp
cmp
mov
add
movsb
cmovo
imul
mov
adc
jmp
adc
and
icebp
fcomps
cmp
xchg
pop
jp
call
jne
and
sub
fstps
jns
mov
das
cmpsb
jp
enter
mov
cld
ljmp
inc
xor
mov
or
adc
jg
lret
cmp
in
test
xor
rorl
leave
loope
pop
rclb
sar
push
xlat
insl
daa
jp
in
out
adc
les
je
shr
inc
mov
outsl
lahf
addr16
leave
adc
stos
dec
pop
jbe
fmuls
or
icebp
push
dec
and
mov
pop
rorl
sub
cli
ljmp
test
mov
mov
push
rcr
sbb
dec
sub
fbld
jl
andl
gs
nop
leave
lcall
inc
pop
cld
fcomip
call
xor
xchg
in
or
pop
mov
out
popf
sbb
xchg
data16
incl
push
lea
mov
loop
mov
fmuls
xchg
and
lock
out
decl
pop
sbb
and
iret
daa
add
push
cmp
jl
mov
outsb
sbb
ljmp
dec
out
inc
out
iret
push
cmp
mov
stos
or
hlt
pop
xor
fbstp
cmc
fmul
aas
lock
std
dec
mov
icebp
push
ret
ret
mov
mov
lcall
fidivrs
sub
xor
loopne
xchg
cmpsb
dec
fldenv
pushf
lods
pop
pop
adc
jg
inc
shll
orl
pop
xor
sbb
jg
and
cmp
movsb
push
mov
lds
sbb
sti
xor
jg
jg
mov
push
jnp
jmp
sub
lea
mov
cmp
fsub
jmp
dec
les
jns
mov
incl
cmp
jns
inc
loope
or
in
cs
adc
insb
xchg
das
test
and
fs
push
loopne
lcall
cmp
and
iret
sub
inc
xchg
mov
popf
cltd
mov
pop
push
lret
jmp
bound
addb
push
pop
xor
adc
mov
repz
rorl
sbb
out
mov
std
test
push
repz
rcll
mov
mov
repnz
loop
fwait
ret
cld
sbb
adc
cmp
jmp
or
cmp
push
jno
mov
popf
or
mov
xor
pop
pusha
out
xchg
mov
stos
daa
xchg
lcall
in
adc
jnp
xchg
mov
and
sub
aaa
gs
xchg
xor
cmp
dec
sti
xor
mov
out
xchg
mov
pop
jecxz
xchg
mov
fmul
and
mov
jmp
pop
xor
add
jbe
xor
sbb
xor
fs
mov
adc
dec
jp
mov
xchg
into
int3
addr16
into
jnp
dec
mov
jle
xchg
sbb
jl,pn
jle
mov
jecxz
cltd
push
popa
aas
xor
roll
pop
cld
dec
sti
insl
dec
aad
xchg
arpl
call
aad
dec
pop
or
cmp
cwtl
pusha
in
filds
adc
jmp
data16
pop
mov
cmp
incl
push
movsl
scas
mov
shll
push
shll
inc
ljmp
clc
dec
mov
jne
scas
aam
mov
mov
inc
pop
xor
or
repz
jmp
sub
mov
cmpsl
or
mov
fcomps
das
scas
dec
adc
cs
fdivrp
jmp
inc
xor
adc
jbe
test
xchg
call
jecxz
pop
push
adc
lcall
cmpb
push
loop
add
pop
pop
outsb
inc
outsl
enter
stos
jb
add
add
outsl
push
or
and
movsb
dec
or
ljmp
out
sub
and
es
mov
push
clc
decl
dec
sbb
jae
jg
clc
loop
cmpsb
or
pop
cmp
push
and
pop
ljmp
adc
pop
cmp
jnp
iret
rol
lret
jl
aas
hlt
fbld
jo
call
xor
inc
out
paddb
test
jb
inc
sbb
mov
insb
test
mov
mov
incl
pop
cwtl
mov
jg
jae
mov
arpl
mov
mov
mulb
lcall
int
clc
sub
pop
loope
ret
add
adc
and
in
cmp
adc
insb
decl
inc
mov
jns
popf
mov
pop
sub
movsl
fcompl
out
jnp
sbb
xlat
dec
sub
ljmp
jmp
repnz
mov
pusha
add
lahf
insl
call
pusha
sbb
jbe
cwtl
les
mov
daa
sahf
xchg
test
addr16
movsl
pop
aam
incl
adc
xchg
sub
cs
jmp
push
imul
mov
fisttps
js
mov
out
ficompl
mov
decl
insl
dec
fdivrl
leave
movsb
add
aad
jns
push
xchg
decl
jle
mov
aaa
jo
push
push
fiadds
and
xchg
imulb
jmp
xchg
clc
decl
jne
sti
inc
lret
add
mov
cmp
mov
and
gs
xchg
xchg
test
jg
jae
leave
jae
dec
lods
fdivrs
sbb
decl
ret
mov
sbbb
repnz
insl
inc
push
scas
shl
xchg
pusha
fnsave
push
inc
pop
mov
cs
push
push
lret
push
push
adcl
dec
subl
lcall
rcll
cmp
imul
adc
std
mov
add
mov
lods
fisubrl
sahf
fdiv
add
xor
push
jl
dec
enter
lret
pushl
lret
adcb
lock
clc
sub
pushf
test
mov
out
insb
popa
cmp
outsl
cli
dec
jl
jnp
aaa
das
dec
call
xor
dec
jl
xchg
pushl
push
test
in
inc
js
aam
jmp
pop
sub
xlat
cli
adc
cld
call
push
or
mov
div
out
pusha
clc
cmp
test
test
and
push
movsb
stos
mov
lds
repz
incl
stc
jne
jle
rcrb
les
js
insb
dec
or
incl
inc
sti
aam
mov
outsb
xchg
inc
insl
push
mov
movsl
add
scas
enter
ljmp
dec
adc
fdiv
pop
lea
out
mov
pushf
push
cmp
lods
jl
lods
mov
mov
push
enter
xor
icebp
out
inc
push
adc
decl
lock
ds
fsubrl
mov
lcall
ljmp
divb
out
xchg
push
cltd
jge
out
xchg
pop
lahf
outsb
add
ljmp
addb
hlt
sub
sub
mov
ss
add
push
xchg
insl
push
dec
sub
jmp
pop
bound
add
loope
jne
jnp
add
lcall
inc
inc
fidivl
stc
and
push
push
adc
scas
nop
dec
push
fcomip
ljmp
jg
dec
test
stos
cmp
les
dec
sbb
data16
pushl
fcoml
and
fmul
addb
jnp
data16
movsb
arpl
dec
sub
inc
lcall
sub
ret
shlb
push
rolb
lcall
lea
or
test
sbb
stos
and
cmp
xchg
push
incl
jle
scas
jg
fdivs
jge
mulb
or
rol
rorb
incl
and
sbb
pop
lea
jae
mov
push
pop
push
aaa
add
jecxz
xchg
jb
jmp
adc
lcall
inc
inc
in
cmpsb
pop
jle
ret
sarl
ljmp
push
test
pop
cmpsl
or
aas
incl
xor
jo
enter
fdiv
fcomps
packssdw
and
out
int3
fcomps
inc
clc
mov
xor
adc
out
leave
loop,pt
xor
jg
jge
lret
in
dec
mov
out
pop
iret
cmp
scas
mov
call
mov
mov
adc
cmp
lret
xor
cmp
faddp
xor
nop
outsb
mov
inc
ss
dec
addr16
enter
scas
insl
negl
test
jle
dec
movsb
lods
sub
cwtl
push
fninit
loop
flds
call
cmpsb
call
sbb
and
inc
sahf
or
xchg
movsl
daa
mov
jg
lea
out
sub
add
mov
out
adc
mov
icebp
outsl
into
hlt
dec
sub
cmpsb
jg
push
decl
push
pop
fsubrp
cmp
pop
iret
pop
clc
cmpsl
pusha
lods
addr16
inc
sbb
mov
push
dec
pushf
cs
dec
fsubrl
sub
mov
imul
and
push
xor
rolb
lock
and
adc
mov
jbe
push
sub
sarl
and
clc
push
movsb
lock
mov
lcall
add
xchg
loop
cld
add
psubd
hlt
enter
jns
testb
or
inc
mov
dec
stos
push
out
xchg
mov
mov
outsl
xor
and
pop
inc
call
decl
cwtl
fbld
dec
lods
ljmp
add
and
popa
xlat
and
aam
js
in
scas
pop
mov
ljmp
lock
imul
xchg
loopne
xchg
dec
fisubs
xlat
pop
xchg
adc
xlat
mov
decl
mov
int
add
mov
insl
cmp
lea
mov
inc
pop
push
mov
decl
xorl
mov
dec
dec
aas
lods
push
shrb
fmuls
xchg
adc
ljmp
repnz
mov
addr16
testb
xchg
test
fisttps
xor
and
imul
mov
fwait
or
mov
push
daa
lcall
or
sub
bound
fidivrs
or
jmp
sub
fldenv
cs
ds
dec
ret
movsl
shlb
or
les
test
add
dec
mov
decl
fucomi
shl
call
je
out
testb
inc
leave
nop
add
repnz
cmp
lret
cmpl
lods
dec
dec
insl
add
ljmp
ret
aas
adc
cmpsl
fdivl
icebp
test
mov
xor
and
or
call
punpckhwd
pop
shl
pop
xor
sub
and
jecxz
lret
inc
or
cld
ljmp
scas
es
jns
xorb
int
jle
mov
das
mov
jg
or
mov
inc
stos
dec
push
outsb
sub
clc
idiv
jg
inc
fnstenv
ret
cld
test
jbe
popw
or
adc
pop
test
incl
push
nop
xchg
sbb
cmpsl
push
jno
cltd
enter
pusha
les
xlat
xlat
jmp
cltd
jle
cmpsb
adc
mov
test
mov
adc
jmp
rorb
sub
shlb
mov
test
mov
pop
sbb
push
imul
push
mov
int
or
sar
ja
xor
add
jg
dec
fs
fisubrl
cs
popa
cmp
jnp
sub
mov
pop
into
mov
arpl
aam
and
std
cmp
call
jno
ja
or
mov
pop
sbb
inc
jl
call
mov
cwtl
adc
jae
xchg
test
rcl
xlat
add
stos
jmp
mov
add
sub
call
xchg
adc
mov
out
xor
inc
push
mov
les
inc
ret
mov
dec
fdivrl
lret
pop
adc
xchg
mov
push
fwait
clc
dec
xchg
push
hlt
xchg
mov
xor
ss
jb
ficomps
and
sub
xor
mov
pushl
stos
call
dec
andl
cmp
mov
gs
daa
imul
pushl
test
mov
mov
data16
dec
out
adc
push
mov
imul
ljmp
lcall
lods
in
roll
jns
mov
xlat
pop
jp
cmp
aam
pop
icebp
sbb
push
inc
pop
lahf
add
fisubrl
sbb
lahf
ljmp
sar
lock
pop
dec
popf
popa
cmc
negb
add
add
fisttpl
ljmp
aaa
push
and
jg
out
jno
out
jbe
fwait
xor
dec
sbbl
out
and
iret
aam
sbb
decb
xchg
mov
sub
push
outsl
lods
stos
cmp
jmp
sbbl
xchg
ja
sbb
sbb
ret
mov
stc
inc
in
xchg
xor
fsubrp
xchg
xchg
les
ds
scas
fwait
ss
push
lods
out
push
push
into
jmp
inc
add
inc
cmp
ljmp
decl
mov
cmp
sub
mov
or
jg
in
push
in
mov
popf
cmp
mov
mov
js
or
add
js
mov
jno
aad
lret
cmp
mov
test
pusha
lret
movb
sub
loope
shrl
call
cld
call
pop
sub
movsl
xchg
xor
push
aas
xchg
das
dec
jno
push
decl
popa
js
xor
adc
shll
mov
jne
jo
mov
cld
incl
mov
sub
loop
ss
sti
pop
and
or
mov
add
adc
ret
jne
dec
shlb
adc
mov
adc
movsl
arpl
sub
lock
xchg
jge
xchg
sub
jb
pushl
mov
popa
adc
arpl
daa
sbbb
std
test
mov
sub
rolb
mov
add
js
shlb
pushl
hlt
sti
xchg
stos
jl
cwtl
mov
adc
add
pop
call
aad
xchg
add
dec
cld
decl
inc
xor
cmp
out
jg
mov
mov
insb
in
cmp
scas
inc
enter
int3
cmpsb
fsts
sbb
jmp
loope
mov
test
mov
add
adc
fisttps
mov
xchg
sbb
ljmp
adc
push
and
push
adc
ret
lods
andl
aas
lock
add
cli
cmpsl
ljmp
xchg
pop
or
inc
ds
xchg
addb
adc
mov
mov
jg
fcomi
je
mov
ret
add
pop
les
stos
fsubrl
mov
test
outsl
jge
test
and
mov
subl
dec
gs
sub
out
in
sbb
push
or
dec
loope
jmp
cmp
mov
adc
pop
or
popf
inc
mov
add
outsb
pop
lret
mov
xor
jmp
cltd
pop
add
aas
sbb
sbb
cmp
or
mov
shr
cmp
leave
test
adc
mov
lahf
ficompl
sbb
stos
lcallw
pusha
mov
ret
sahf
movsl
jecxz
push
push
call
lcall
mov
mov
xor
int3
push
xor
aaa
arpl
mov
mov
pusha
movsl
addr16
call
sbbb
sbb
jns
mov
xchg
out
add
scas
mov
inc
jmp
push
push
or
aam
das
pop
sub
xlat
or
in
rorb
xorb
cmpb
xor
call
xor
scas
sub
jnp
adc
movsb
pushf
sbb
loop,pn
fs
cli
out
or
inc
iret
nop
bound
and
add
gs
add
or
sub
in
inc
push
fisttps
mov
loopne
cmp
mov
mov
ds
add
jmp
lret
insb
push
push
dec
push
mov
lods
in
stc
cltd
aas
ret
popf
and
dec
out
ficomps
xchg
xchg
call
add
aam
push
movsb
call
cmpsl
push
push
psrlq
dec
stc
ret
pop
hlt
pushl
xor
cmp
leave
cmp
arpl
pop
test
mov
dec
ud0
xchg
lock
ja
mov
pop
push
fldt
mov
fidivl
push
imul
rcrb
decl
pop
push
fwait
sub
mov
mov
movsl
mov
xchg
lcall
push
arpl
inc
ss
push
pop
ficompl
cmp
aad
cli
jmp
xor
xchg
out
icebp
stos
repz
arpl
or
xor
outsl
mov
inc
jl
jp
add
lcall
ljmp
das
jb
mov
sub
push
fadd
push
loop
cmp
push
or
jmp
in
push
xchg
or
gs
mov
lods
inc
dec
jns
pop
cmc
not
mov
and
xor
xchg
outsb
fwait
adc
addb
jmp
ja
sub
pushf
test
mov
dec
add
add
scas
fwait
mov
push
loope
and
enter
and
out
adc
ja
into
hlt
and
xchg
xor
and
inc
out
sub
push
cmp
inc
aaa
inc
into
int3
xchg
sti
sbb
fdivrs
dec
movsb
loop
lods
pop
push
iret
xor
std
popa
test
jecxz
sbb
inc
cld
nop
sarl
sub
sub
dec
daa
sbb
int
jae
xchg
es
sub
add
xlat
push
or
mov
out
sub
add
into
es
or
and
test
push
jp
xlat
rolb
testb
adc
movsl
cmp
push
cmp
ds
xor
ljmp
push
mov
mov
int3
lds
xor
lcall
adc
cld
mov
mov
dec
add
push
cmp
inc
inc
test
dec
cld
push
mov
mov
ss
sbb
lcall
aas
or
cmp
sub
sbb
push
mov
imul
fdivp
lahf
aad
subb
dec
mov
loop
dec
fwait
add
jmp
stc
or
cli
decl
outsb
das
idivb
data16
or
in
mov
mov
dec
or
fsubrl
lds
sub
incb
jbe
sub
or
std
ret
jle
aad
pop
test
cwtl
sbb
xchg
sub
nop
out
mov
cmp
jno
scas
aam
push
mov
test
inc
js
jns,pn
dec
fidivrs
or
stos
sub
cmp
ret
les
or
push
incl
jmp
cmp
cmp
pop
negb
add
lods
rclb
dec
js
fstps
xor
jno
mov
mov
sbb
sbb
adc
movl
dec
push
sbbb
xchg
and
pop
repz
call
mov
psubusw
jnp
divb
in
out
das
sub
decl
pop
iret
ljmp
push
inc
pop
adcb
xor
and
and
daa
jge
addr16
lcall
inc
mov
fimull
in
testl
movsl
neg
lcall
and
push
inc
pop
xor
sti
cmp
pop
nop
les
popf
fwait
leave
je
out
sub
push
lock
in
jge
inc
popf
aad
inc
aas
mov
fildl
mov
sub
mov
lods
and
add
pushl
adcl
push
loope
cmpsl
in
push
out
ja
xchg
pusha
sub
or
pushl
cmp
fdivrl
scas
mov
test
cltd
adc
loop
subb
xchg
or
scas
inc
jno
inc
sahf
imul
push
push
mulb
cmp
movl
pushl
push
lods
stos
repnz
dec
mov
sub
jmp
incl
cld
pop
aam
movsl
ret
loope
lods
test
push
cld
inc
mov
mov
mov
add
pop
outsl
ljmp
aaa
xor
fistl
cwtl
das
sbb
aad
ds
sbb
repnz
adc
ja
jo
add
xchg
jmp
in
std
bound
subl
cmpb
jno
out
shll
sub
inc
das
push
xchg
cmp
ficoml
jg
jns
frstor
sti
addl
iret
ret
pop
decl
xchg
clc
test
cmp
xchg
in
sbb
lock
ljmp
inc
cmc
sub
fimuls
or
enter
outsl
add
mov
push
call
clc
xchg
mov
mov
test
lahf
in
sbb
mov
lcall
fiadds
rclb
pop
xchg
frstor
jg
cs
decl
and
movsb
sub
dec
repz
jecxz
jp
hlt
pusha
inc
push
pusha
lock
call
repz
scas
arpl
dec
mov
mulb
push
pop
jmp
adc
dec
filds
xor
add
js
ss
dec
jae
mov
xchg
mov
add
aaa
inc
mov
rorb
inc
mov
dec
mov
ljmp
add
xchg
jnp
mov
mov
out
fwait
cltd
seta
push
sbb
mov
pushl
int3
sub
or
mov
xchg
add
rorb
sbb
lods
inc
call
pop
mov
negl
sub
dec
xor
push
cmp
sti
jno
stc
cmp
fldt
bound
lcall
test
imul
xlat
dec
sub
jmp
call
mov
popf
jne
jg
in
xchg
out
cltd
stos
fwait
sbb
sbb
jecxz
mov
push
out
jle
pop
and
stc
xchg
aad
cmp
cmpsb
cmp
incl
pop
cmp
pop
or
mov
nop
and
and
clc
inc
push
or
cmpsl
jge
dec
jmp
vcomiss
pop
test
mov
movsl
into
dec
adc
jge
nop
hlt
mov
lcall
jno
mov
xchg
fists
mov
rcrb
lcall
je
mul
jg
add
ret
lea
sub
xorb
inc
ja,pn
dec
inc
or
popf
xor
sub
inc
vfrczpd
cmpsl
lahf
lahf
jbe
insl
mov
int
mov
cld
call
inc
push
ret
mov
inc
icebp
clc
dec
lds
fmull
and
sbb
xor
inc
and
cmovp
xchg
jp
scas
inc
ljmp
or
dec
jmp
lods
xchg
in
mov
cld
shlb
cli
sti
scas
jo
jbe
cmp
xchg
lock
add
lret
nop
mov
inc
inc
lcall
stos
sahf
jns
aam
mov
adc
cmp
incl
incl
push
xorl
mov
pop
push
mov
push
enter
lcall
sub
inc
jbe
fcmovnu
movsb
adc
xchg
outsb
mov
shr
data16
pop
stos
sub
adc
fs
lock
fimuls
mov
pop
jl
jbe
xorb
insl
jno
mov
call
jl
dec
pushf
cmc
aam
jg
xor
das
test
jg
push
jbe
jge
add
dec
in
push
xchg
sub
lret
push
leave
out
jmp
mov
xchg
int3
loope
pushl
mov
mov
rcll
push
shrl
std
adcb
call
fsts
xchg
sbb
in
pop
std
pop
or
std
stos
push
icebp
pop
xorb
mov
jg
das
sbb
mov
das
cmp
bound
test
jne
mov
outsb
call
out
cld
decl
jae
push
out
fdivrl
cmp
mov
and
insb
dec
in
cmp
dec
gs
popf
jle
mov
out
rorb
test
xlat
mov
xchg
imul
enter
fstpl
jmp
fwait
lahf
adc
pop
pop
test
call
sub
ljmp
xor
mov
mov
clc
add
cltd
xchg
add
inc
bound
jg
jbe
int
dec
dec
insb
lahf
mov
or
push
subl
fwait
js
mov
cwtl
call
test
or
inc
addb
mov
mov
movb
pop
dec
mov
jmp
call
leave
mov
jle
mov
sub
push
add
sbb
cmp
in
out
xor
lahf
test
mov
cld
push
xchg
xor
push
neg
adc
mov
out
and
sti
int
or
out
in
stc
out
ljmp
outsl
mov
fadd
adc
scas
pop
addr16
outsl
scas
cli
stos
fdiv
mov
cmpsb
fs
shrb
fs
mov
shll
in
cmp
jo,pt
les
dec
rorl
js
sbb
cmp
inc
pop
into
mov
dec
adcl
scas
xchg
add
fs
or
cmp
imul
mov
call
push
cmp
fsin
and
jnp
jo
shl
mov
leave
xchg
jp
jbe
pop
in
mov
sbb
pop
add
push
sub
and
loop
sbb
repz
mov
dec
cmp
add
int3
jno
xlat
inc
jb
into
xor
mov
lock
push
push
mov
test
call
add
test
scas
mov
jne
xchg
mov
loopne
enter
lcall
std
adc
xchg
aam
xchg
xchg
rolb
dec
lcall
fadds
xchg
mov
or
sti
cmovnp
mov
jp
lahf
pop
loope
mov
inc
pop
push
pusha
mov
outsb
mov
pop
enter
outsb
xchg
add
jge
fiaddl
in
cmp
push
ljmp
das
add
mov
in
xchg
arpl
cmc
rol
add
xchg
sbb
jmp
lods
or
scas
and
imul
sub
pushw
daa
jle
dec
mov
ljmp
add
cwtl
dec
and
jl
xor
mulb
fdivp
mov
pop
lods
leave
xor
push
test
cmpl
adc
pop
push
or
inc
push
push
push
lcall
xchg
push
aad
jecxz
mov
shlb
loop
inc
daa
cmp
mov
xchg
ljmp
adc
inc
movsb
adc
jmp
repz
cli
mov
setno
jg
inc
nop
inc
inc
mov
pop
push
dec
mov
jae
cwtl
sti
hlt
or
inc
xor
lcall
push
mov
jne
int
adc
out
hlt
push
mov
incl
add
mov
xchg
inc
mov
icebp
sar
mov
popl
fnsave
jecxz
lahf
loop
push
aam
incl
das
mov
fldenv
int3
xlat
inc
mov
ss
mull
xchg
push
arpl
push
pushl
cld
ljmp
sti
mov
in
cmp
adc
jo
bound
jbe
fnstenv
aaa
cld
jmp
movsb
xor
dec
clc
pop
dec
cmp
sbb
insb
rolb
push
rol
loopne
mov
pusha
mov
push
int
or
shll
sbb
or
addr16
mov
push
push
xchg
fiaddl
inc
fiadds
clc
ljmp
lock
movb
ds
adc
pop
jmp
incb
testl
xchg
mov
and
inc
enter
aaa
push
ret
cltd
cmc
inc
aam
add
test
sub
ret
jns
cmp
mov
jne
mov
and
dec
fs
es
xchg
and
or
incl
out
adc
inc
xchg
stos
pushf
cmp
cmp
or
adc
xchg
fwait
loopne
cmp
call
push
mov
inc
outsb
ss
push
mov
sbb
decl
push
lock
pop
lods
lcall
imul
mov
push
ljmp
xchg
fwait
mov
lcall
leave
push
decl
gs
jno
sub
int
jle
xchg
push
out
mov
into
stc
xchg
ffree
out
push
cs
and
and
sub
xchg
stos
adc
inc
imul
mov
dec
pop
pushf
shll
fcompl
mov
pop
xor
mov
lcall
push
iret
mov
rcl
and
popa
pop
ja
cmpsl
jo
adc
iret
pop
rolb
in
sub
mov
call
ret
jle
cmp
jno
pop
mov
mov
pushl
sub
or
mov
lcall
xor
mov
cmp
lahf
pushf
out
mov
pushl
out
dec
and
push
leave
ljmp
add
mov
mov
jge
movsb
ja
add
call
push
clc
loopne
popf
fwait
pushl
pushl
push
loop
mov
pop
idiv
sbb
adc
lods
fidivl
out
lods
pop
out
mov
fidivrs
push
and
jne
mov
push
fwait
xchg
push
dec
aam
dec
int3
xchg
in
xchg
mov
pop
inc
pop
sti
pop
ljmp
lods
les
jmp
jnp
cmp
dec
add
lds
adc
inc
lret
shll
ds
pop
loopne
call
std
test
or
mov
sub
cmpsl
xor
inc
in
jbe
pushl
in
iret
dec
mov
dec
pop
fucomp
adc
push
pop
xchg
shrb
inc
inc
add
jmp
das
jb
jl
and
out
cmp
sub
sbb
pushf
jge
xchg
jne
xor
arpl
and
fcomip
pop
adc
repz
or
add
push
sbb
outsb
cmp
outsl
dec
decl
jg
fnsave
imul
cmp
pushl
dec
inc
shll
mov
call
test
sbb
mov
pop
pop
sub
imul
lock
std
add
inc
fcmovu
push
push
xor
add
add
into
inc
lcall
xchg
movsb
mov
fwait
hlt
jmp
stos
or
mov
ljmp
inc
xchg
fmuls
xchg
mov
js
add
clc
adc
int
dec
enter
and
push
lea
inc
aas
cmp
mov
addb
into
push
dec
adc
lcall
xlat
inc
les
adc
dec
gs
jge
or
js
mov
xchg
mov
fistpll
jno
jae
ja
xchg
cmpl
mov
push
jl
ljmp
pop
into
rcrl
add
dec
inc
mov
ret
lcall
cmpl
pop
mov
ret
iret
fnstenv
popf
rorl
ret
loope
jg
dec
mov
imul
jne
mov
xchg
ss
aaa
sar
or
rcr
jle
mov
call
xor
jo
mov
lods
lcall
jge
test
xchg
cmpsl
lcall
jmp
mov
mov
rcrl
push
imul
out
add
adc
cmp
push
scas
int
and
xor
ds
xor
pushl
push
mov
movsl
fnsave
dec
loop
jne
and
in
ljmp
jge
mov
mov
pop
lods
or
fcoml
mov
enter
scas
lods
mov
call
movsl
mov
test
or
lock
mov
in
cwtl
xlat
mov
xchg
ljmp
cltd
push
jmp
or
out
int3
push
mov
hlt
and
lock
dec
test
mov
or
je
add
repnz
repz
repnz
pop
movsb
mov
sahf
or
mov
inc
dec
cs
mov
out
cmp
call
push
cmp
mov
jg
in
mov
aad
add
aas
xlat
push
mov
and
mov
jecxz
sahf
inc
xor
test
cwtl
dec
inc
dec
aas
stc
andl
mov
fadd
leave
imul
jmp
cmp
cwtl
lods
in
mov
call
int3
cmp
lcall
mov
movsl
daa
dec
lods
pushl
xchg
jno
lcall
faddl
pop
movsb
sub
jnp
inc
inc
xchg
fs
pushl
pop
dec
mov
add
aas
xor
and
incb
jle
iret
sub
lock
inc
call
xor
les
sub
jle
xor
dec
fisttps
ljmp
xchg
sub
js
mov
hlt
fdivr
xlat
bound
push
jmp
pusha
cmp
pushl
cmp
jg
loope
xchg
inc
jmp
dec
lret
jl
fistpl
pushl
mov
xor
inc
hlt
cmp
xor
sahf
int
mov
mov
shlb
add
lcall
push
adc
loopne
ss
fcoml
icebp
push
jecxz
pop
popa
push
in
mov
pop
fistpl
pop
ds
lcall
jb
movsb
and
hlt
lcall
testl
scas
std
cltd
dec
sbb
jo
xchg
mov
xchg
pop
mov
pushf
mov
call
bnd
jno
adc
mov
mov
jmp
mov
imul
pop
adc
ljmp
add
lret
jmp
std
cli
push
addr16
enter
imulb
cmp
inc
xchg
in
fcmovnbe
and
pop
push
sbb
test
and
mov
insl
into
gs
rolb
shll
popl
jbe
out
mov
pop
mov
ljmp
push
push
iret
lock
pop
test
and
insl
mov
and
jecxz
dec
int
sub
decl
jae
cmc
mov
mov
cmp
push
sub
lea
mov
lods
jne
push
inc
scas
mov
jecxz
pop
lahf
push
nop
icebp
dec
mov
fnstcw
cmp
popa
sbb
mov
ljmp
jg
xor
into
lea
or
std
jmp
neg
divl
push
mov
fisttpl
lea
or
cmp
lea
adc
in
mov
decl
pop
arpl
cmp
dec
jle
and
fdivl
scas
dec
sar
jmp
mov
clc
dec
xchg
xorb
dec
xchg
mov
shrl
je
out
test
jbe
incl
dec
popa
shll
jmp
stc
int
mov
inc
push
jno
mov
jae
pop
addr16
ljmp
mov
add
jb
push
mov
cmp
dec
sahf
cmc
xchg
test
pop
and
pushl
out
jge
pop
popf
mov
leave
cmp
cmp
sub
lret
mov
push
call
and
hlt
fisubl
jmp
xor
lods
pop
and
aaa
lcall
sbb
mov
pop
and
imul
lcall
loopne
inc
lods
pop
movsl
cmp
sbb
inc
xlat
inc
push
or
or
xor
aam
cld
add
insl
fmul
cmp
cld
sbb
aas
ss
shlb
mov
or
xor
in
jb
add
imul
jb
mov
test
cld
decl
pop
in
jge
lods
adc
jmp
test
jp
sti
jp
mov
push
push
fidivl
cmc
in
xor
mov
lods
imul
add
shr
jp
sbb
xor
mov
pushl
fdiv
jge
xchg
push
stc
scas
sub
push
xchg
shrb
push
call
shl
subl
add
jmp
sub
sub
fstpt
add
add
test
or
cli
in
ds
call
mov
fsubrl
out
or
xor
call
sahf
and
sbb
fildll
div
mov
xlat
es
pop
dec
out
xchg
movsl
rcl
out
cli
mov
es
xor
or
sysexit
jbe
xchg
imul
ljmp
mov
pop
sub
enter
adc
ret
xor
xor
add
test
mov
stc
lock
jb
fdivs
push
in
rcr
inc
ret
in
xchg
out
pop
scas
bound
jp
mov
jmp
and
outsb
xchg
loope
shll
jo
call
inc
xlat
mov
movsb
inc
sti
inc
jns
jbe
jb
adc
sti
push
or
out
cmpsb
je
mov
loopne
mov
cmp
outsl
mov
das
and
ljmp
xor
pop
cmp
jns
mov
aam
test
xor
or
sbb
inc
push
inc
mov
push
lcall
popf
clc
pop
rolb
notl
shr
sub
push
sti
in
int
jle
push
test
std
xor
jb
add
sarb
xchg
ljmp
sub
or
cli
ja
aas
cmp
aam
pop
popl
stos
clc
es
loope
cmp
push
das
and
pushl
aam
push
jne
ljmp
clc
jmp
xchg
mov
pop
andb
in
leave
lds
inc
mov
fnsave
mov
push
ror
pop
ja
ficoml
lods
push
popa
dec
inc
jge
mov
idiv
aaa
stos
inc
in
and
aam
cmc
push
std
add
cli
add
outsb
cmp
inc
xor
inc
push
push
jne
ret
ja
stos
repz
jo
jl
xor
or
mov
mov
mov
addr16
inc
lea
xchg
pop
pushl
jb
pop
pushf
lahf
lock
shl
dec
ror
pop
int3
addr16
add
mov
add
jmp
in
jo
fdivs
scas
and
xchg
aaa
cmc
cmp
stc
sbb
incl
xchg
rcll
pushl
test
loope
push
orl
shrb
leave
push
sbb
fs
and
jno
call
mov
fs
inc
ss
lret
dec
ret
ja
and
ret
sbb
daa
adc
adc
lret
inc
arpl
mov
jns
imul
cmpsl
sub
mov
call
out
test
mov
xchg
jp
dec
aas
mov
sbbb
aaa
pop
hlt
or
out
negb
lahf
add
repz
decl
nop
sub
bound
sbb
xor
outsl
dec
lcall
inc
push
lock
fcomip
lcall
mulb
dec
cmp
bound
aas
adc
inc
add
icebp
call
lcall
lcall
testb
xchg
call
cmp
incl
inc
lret
jle
sbb
icebp
lret
or
sti
popl
gs
fadds
dec
mov
cld
loop
cmp
sti
push
in
pop
xor
or
or
call
xchg
push
bound
cmp
sub
pop
aaa
push
mov
cmpsb
shr
lcall
cmc
push
push
call
pop
es
mov
mov
sbb
cmp
cmpsl
jecxz
ljmp
stos
cmp
mov
cmpsl
cmpsl
xchg
scas
mov
mov
jmp
xlat
dec
sub
push
push
out
xor
cs
jne
cmp
dec
add
ficoms
lds
adc
jae
pop
test
cmp
mov
jle
ljmp
mov
pop
sbb
inc
fmul
mov
inc
mov
jg
or
mov
iret
mov
lods
mov
mov
jbe
in
pop
jge
clc
mov
mov
add
and
or
xlat
push
push
ljmp
jg
int
mov
or
jns
xor
push
sbb
loopne
aam
test
int3
ljmp
repz
sub
mov
adc
out
mov
cwtl
or
incl
and
sbb
xchg
cmc
pop
repnz
ja
pop
inc
or
push
xchg
cmp
push
xorb
insl
aam
notb
addl
mov
es
and
push
or
push
popl
mov
xor
sub
filds
lcall
pushf
pushl
jmp
into
pop
cmpsl
aad
loopne
cwtl
xor
fbstp
lahf
pushf
data16
xor
lcall
push
lods
adc
inc
cmp
lods
outsl
bnd
pop
lret
mov
pmuludq
cmc
call
sbb
fldl
adc
sbb
xchg
mov
or
and
pop
pushl
scas
hlt
enter
or
jmp
or
sub
jp
inc
out
sub
decl
cmp
insb
xchg
xchg
or
push
mov
out
clc
decl
ja
adc
jecxz
mov
lods
jg
adc
xchg
push
adc
fistpll
ds
jmp
xor
outsb
pop
in
push
dec
aam
cmp
mov
pop
sub
xor
loop
addr16
dec
sub
lcall
xor
jp
adc
xlat
adc
mov
sar
call
call
lret
in
add
xor
sahf
mov
wbinvd
pushf
mov
mov
and
cs
mov
mov
frstor
mov
push
jmp
sub
data16
mov
jmp
sub
mov
adc
lret
packuswb
clc
jmp
pop
sub
fnstcw
dec
scas
leave
and
pushl
repnz
loop
push
mov
inc
loop
cmp
out
bound
push
into
jb
sbb
incl
xor
xchg
stc
jbe
inc
out
xor
cmpsb
fcomip
mov
aad
decl
repz
movsl
pushf
daa
mov
mov
mov
adc
xchg
popf
xchg
jae
xor
test
shl
or
sbb
and
adc
test
outsl
ss
aas
mov
push
pop
out
outsb
ja
ljmp
push
aam
sahf
into
xchg
push
mov
adc
test
movsb
cmp
call
fldl
testb
cmp
xchg
cmpb
add
mov
popa
int
ja
add
loop
lds
cmp
push
jae
call
pop
inc
pushf
into
psubd
mov
into
adc
pop
push
jno
xor
xorl
inc
pushl
mov
imul
sti
fidivrl
xchg
lret
in
xlat
jae
incl
push
push
and
push
mov
adc
push
mov
push
aad
push
adc
mov
xchg
jp
rcll
xchg
pop
les
inc
js
lods
aaa
sbb
mov
shl
dec
popa
bound
add
add
add
xchg
mov
pop
push
and
decl
jbe
aad
push
pop
jbe
and
push
mov
mov
pop
sub
scas
pushl
lret
pop
mov
mov
dec
mov
lret
cli
movsb
int3
mov
pop
shll
pushf
ljmp
test
inc
push
sbb
das
fprem
or
out
enter
or
cli
in
js
nopl
add
lods
dec
sbb
push
testb
in
std
jmp
stos
fbstp
jb
add
add
adc
jg
insl
add
negl
push
add
add
mov
or
push
or
or
mov
adc
push
adc
repz
in
sbb
repz
sbb
in
push
out
out
sbb
jns
mov
dec
push
cld
scas
push
jns
or
or
cmp
xchg
dec
cs
nop
xchg
mov
xchg
add
pop
push
rol
repz
js
adc
mov
jne
jo
cmpb
aas
repnz
xor
cwtl
pop
movsl
sbbl
subb
outsl
fmul
in
add
mov
mov
mov
sbb
in
call
dec
and
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
lods
lods
cmp
inc
bound
add
ucomiss
ficoml
test
add
enter
add
push
mov
int
enter
call
outsl
loope
xchg
scas
call
ja
xor
nop
jns
cltd
mov
cmp
xor
cwtl
scas
xor
int3
mov
loop
mov
jb
cmp
push
cwtl
or
fiaddl
mov
or
aaa
push
adc
outsb
add
ss
sti
adc
inc
push
inc
push
inc
push
and
daa
or
aaa
jle
xlat
incb
sub
dec
push
cmp
sbb
es
sub
dec
push
add
xlat
mov
inc
adc
xor
or
push
xor
jbe
mov
dec
or
daa
sbb
jbe
jbe
sub
sub
inc
pop
loope
call
jno
jo
add
sbb
mov
les
push
push
pop
adc
outsl
fistpl
rorb
fistl
sbb
pop
add
outsl
add
and
popa
add
mov
jle
push
add
dec
add
and
mov
fsubrl
jb
push
jbe
imul
std
push
add
in
add
and
adc
jge
jo
jb
add
daa
pop
out
mov
pop
outsb
add
jb
jns
pop
mov
mov
imul
sub
fisubl
push
je
jns
neg
push
outsb
repnz
push
outsb
outsl
cmpb
addb
inc
bndldx
inc
jo
jae
je
imul
dec
mov
or
in
loopne
pop
outsl
je,pt
push
loope
scas
lea
inc
mov
cld
fildll
xor
jge
mov
or
dec
bound
je
pop
mov
add
dec
imul
jb
es
fidivl
inc
push
mov
fisttps
inc
out
scas
adc
mov
mov
idiv
incl
roll
add
add
add
add
add
ret
fsubrp
cmp
mov
inc
adc
cmpsl
adc
push
scas
add
imul
pop
mov
sbb
es
push
mov
add
es
sub
stos
loope
pop
mov
mov
fisubs
pop
outsl
iret
dec
or
jns
xor
push
inc
lahf
gs
mov
fimull
push
mov
jl
cs
sub
popa
cmp
cs
mov
fs
mov
pop
fcomi
imull
add
mul
fldt
cmp
fisubrl
jbe
or
jge
fisubl
sti
es
imul
mov
out
loopne
adc
in
insb
cmp
scas
loope
push
jns
adcl
push
ljmp
cmp
fadds
sbb
hlt
lea
rclb
jmp
inc
fstpt
or
out
repnz
addr16
mov
arpl
das
jmp
data16
jae
push
add
add
sti
aaa
and
aam
roll
push
push
faddl
filds
in
outsb
fiadds
push
out
xor
add
inc
fstps
and
mov
add
loope
xor
jnp
fldt
out
push
shll
jae
insb
pop
repz
adc
arpl
adc
rol
xlat
in
jmp
mull
sti
push
jae
jb
add
aas
inc
sub
div
adc
fstpl
lret
insb
xor
adc
filds
mov
outsb
lret
and
push
push
pop
pop
add
ds
cmp
outsl
sbb
dec
mov
sub
popa
mov
fimuls
xor
sbb
sti
fidivs
jne
ja
std
push
test
mov
xor
xor
std
dec
je
add
pop
push
jnp
shlb
lret
xor
shrb
xor
mov
ljmp
xor
sbb
xor
mov
in
lods
mov
enter
mov
mov
mov
mov
mov
iret
push
das
idivb
inc
sarb
xchg
into
fdivl
adc
out
bound
jl
addl
cmc
lcall
mov
push
pop
adc
xchg
xchg
ret
pop
bound
mov
rorl
xchg
test
pop
jb
mov
scas
andb
push
pusha
jo
and
cmpsl
ja
sub
lahf
sbb
out
stc
jno
sbb
outsl
ja
roll
ja
ja
imul
inc
add
pop
push
scas
psrlq
add
imul
xchg
push
jle
fstpt
jp
jb
jb
cmp
les
inc
pop
ficomps
ljmp
jb
int3
add
js
or
sarl
rolb
scas
jp
cmpsl
cmpsb
adc
sbb
fisubl
xor
add
add
add
add
dec
add
cmp
sub
cmp
pop
inc
sbb
cmp
dec
xor
xor
cmp
negb
ja
dec
adc
inc
add
das
push
mov
push
aas
xor
xchg
xor
cmp
loop
aaa
inc
jb
xor
dec
idivl
and
cwtl
push
adc
push
pushf
adc
mov
or
outsl
mov
add
scas
rorl
scas
and
sub
mov
cmp
sahf
out
pop
outsb
jp
lock
cwtl
pop
sub
pop
out
inc
xor
lret
ja
repnz
pop
add
mov
mov
dec
mov
pop
xor
xor
dec
lahf
add
arpl
dec
push
sbb
subb
mov
lea
outsl
push
pop
cmp
or
aaa
jae
xchg
mov
fisttpl
fisttpl
pop
outsb
add
push
adc
into
popf
jae
movb
sbb
push
aam
mov
pushl
out
jno
push
jo
xchg
arpl
out
jae
mov
imull
bound
lcall
dec
filds
subl
loop
fwait
pop
loop
mov
ja
test
cs
stos
mov
dec
push
das
sbb
inc
or
imul
inc
int
sbb
jbe
dec
jo
push
test
add
mov
fstps
and
xor
push
and
sbb
jb
imul
ljmp
jno
push
push
cmp
pop
ja
lds
xchg
rcrl
bound
dec
scas
jo
roll
sbb
outsb
into
and
call
or
aas
das
jp
loope
dec
sbb
jmp
mov
cmp
fsubrs
inc
push
inc
ja
mov
ret
jae
push
orl
addr16
dec
sub
pop
or
pushl
pop
mov
bound
xchg
pop
xchg
or
lock
fcompl
iret
cld
xchg
mov
cmp
repz
mov
pop
ja
jp
sub
scas
mov
mov
push
push
into
add
movl
out
adc
sbb
out
out
jle
or
pushf
adc
int
push
lret
es
add
or
mov
aas
dec
imul
adcl
push
ret
iret
lret
arpl
add
mov
pop
mov
jae
fimuls
loopne
outsl
jecxz
pop
daa
pop
loope
jecxz,pn
ja
ss
mov
aaa
push
add
icebp
inc
jg
adc
mov
jne
imul
lahf
gs
mov
ljmp
adc
xchg
inc
xor
push
lcall
add
inc
fucomi
testb
add
xlat
or
add
jecxz
sti
rcll
jbe
pop
jp
cwtl
push
sub
pop
lahf
rcl
pop
jmp
insl
bound
negl
xchg
leave
sbb
bound
xchg
imul
lods
or
fwait
gs
loopne
mov
popw
fs
loopne
cwtl
xor
and
lods
jecxz
push
pop
inc
xlat
adc
outsl
das
ljmp
sub
push
push
inc
xor
scas
adc
negl
rcrb
insl
inc
mov
or
loope
clc
jbe
mov
mov
scas
lods
shrb
scas
dec
das
cmpsl
ja
jo
repz
gs
xchg
sbb
jp
pop
ja
adc
jbe
inc
arpl
stos
inc
das
jp
inc
add
jno
adc
addr16
jp
test
add
test
cmpb
jmp
fistps
ljmp
imul
xchg
push
or
pop
es
jns
xor
mov
jp
ret
sub
fwait
and
filds
xchg
daa
cmp
lahf
sbb
rcr
mov
outsl
xchg
sbb
outsb
inc
add
add
cmp
mov
xchg
xor
pop
jmp
cmpsb
or
inc
stos
das
xor
adc
dec
and
dec
pop
jp
dec
inc
test
mov
push
or
out
fs
or
add
shr
jge
fists
mov
icebp
sbbl
inc
inc
pop
rolb
adc
inc
test
aaa
mov
stos
mull
jns
push
outsl
aaa
aas
jnp
popa
push
adc
dec
pop
ja
pushf
jae
push
ljmp
or
jmp
mov
jae
sti
mov
addr16
bound
insb
imul
push
fcomi
paddd
add
add
xor
js,pn
xor
das
mov
jnp
imul
mov
fwait
adc
dec
addr16
stos
jbe
pop
add
arpl
pop
xor
inc
pop
and
ret
xor
inc
scas
sub
sub
sub
inc
xchg
pop
add
leave
orb
pop
cmp
mov
dec
xlat
adc
ds
out
imul
jne
in
sbb
pop
rolb
ss
mov
ljmp
sbb
cmp
clc
cmp
jge
test
add
subb
mov
aaa
xchg
ss
and
push
mov
testb
and
imul
into
cmp
mov
sub
and
push
adc
xchg
add
add
jg
or
aas
ret
sti
scas
int3
adc
sahf
ss
mov
imul
push
into
bound
adc
out
adc
mov
clc
push
ljmp
jnp
inc
jp
loope
test
adc
outsb
xor
jne
mov
and
inc
mov
mov
jg
push
xlat
fdivrl
popa
int
pop
lahf
mov
cmp
inc
mov
xor
jmp
outsb
or
aam
push
sarl
inc
push
add
mov
add
fidivl
and
jae
sbb
insl
xchg
push
test
mov
andl
aaa
cld
das
adc
mov
dec
dec
xor
adc
mov
cmpsl
or
fistpl
jo
or
aad
out
mov
adc
add
sbb
aas
daa
out
lock
scas
stos
into
inc
inc
xlat
adc
outsb
sub
inc
xor
jecxz
lahf
sbb
pop
inc
sbbl
or
jns
test
xchg
jb
jg
push
mov
mov
lock
loope
jg
pop
out
adc
pop
add
inc
pop
ficoms
aaa
inc
dec
pop
out
pop
sub
cmp
pop
mov
xchg
cmp
test
popa
sbb
scas
mov
jp
add
in
xor
and
add
fidivrl
jne
jne
jae
pop
add
xor
jp
roll
je
push
push
push
sub
mov
data16
js
test
push
mov
lock
aaa
add
jo
aam
add
mov
scas
adcb
jne
ficompl
jbe
sub
jnp
push
lods
mov
jae
push
mov
stos
jae
push
repnz
xchg
ret
add
imull
mov
or
jno
inc
pusha
push
arpl
aaa
mov
js
xor
add
fldt
sub
mov
daa
sub
add
jecxz
in
lock
movb
jg
cwtl
sbb
jnp
imul
outsl
sbb
ja
fidivrs
xor
fimuls
das
xchg
xor
arpl
sbb
mov
inc
or
inc
fadds
aas
inc
pop
imul
fisttps
pop
xor
adc
ss
inc
mov
push
jecxz
pushw
push
add
push
add
stc
stos
add
test
lret
mov
and
imul
dec
lcall
mov
mov
cmp
idivl
sub
test
data16
push
outsl
jg
jbe
xor
bt
bound
ret
adc
sbb
xlat
js
dec
push
or
inc
add
mov
inc
add
stos
mov
jecxz
das
jp
push
lret
aaa
xor
cmp
mov
push
iret
jae
cmp
xchg
jb
add
jb
movl
pusha
or
fwait
stos
sub
pop
mov
pop
aam
das
dec
jecxz
push
mov
shlb
movl
dec
stos
and
outsl
pusha
out
scas
sub
popl
test
cwtl
xchg
mov
pop
adc
mov
inc
inc
imul
mov
mov
stos
inc
mov
mov
xlat
mov
jp
loopne
fwait
lea
xor
mov
sub
out
iret
push
ret
adc
outsl
push
add
push
mov
mov
pop
scas
mov
sahf
fldt
push
xlat
sbb
decl
jmp
rcrl
xor
mov
or
out
sbb
out
ja
or
adc
cmp
not
dec
adc
or
rcrb
sub
scas
push
out
cwtl
add
insl
pop
outsl
or
lods
xchg
out
jnp
inc
in
cli
add
xchg
stos
inc
mov
lods
bound
pop
pop
mov
pop
imul
sti
imul
add
jo
in
mov
nop
dec
js
adc
inc
dec
nop
add
push
adc
daa
lcall
or
lds
sbb
scas
pop
sub
and
xor
cmp
mov
mov
sbb
aas
sti
adc
jg
add
sti
push
imul
cmp
inc
adc
dec
das
stos
xor
icebp
pusha
or
cmpsl
aaa
stos
xor
and
stos
or
inc
cs
mov
jmp
divb
mov
ss
xor
insl
arpl
js
bnd
je
mov
dec
cld
push
jns
test
sub
push
mov
sub
push
xor
pop
xchg
jmp
and
adc
popa
xchg
dec
xchg
jae
sub
jae
sbb
xor
imul
movsb
mov
mov
pusha
lcall
adc
out
pop
or
jo
mov
stos
or
insl
sbb
xor
push
dec
insb
push
movnti
pop
mov
loope
sub
daa
pop
adc
and
add
les
sbb
dec
xor
cs
xchg
push
movswl
ljmp
ret
xor
mov
and
xor
iret
es
dec
jae,pn
jbe,pt
cmp
fst
mov
push
ss
pop
inc
push
or
mov
dec
xor
stos
push
mov
xchg
mov
aas
js
pop
into
sbb
mov
test
inc
mov
xchg
push
jmp
les
lcall
shrb
mov
adcb
cwtl
mov
rclb
sub
dec
cmpsb
data16
mov
mov
mov
scas
lods
inc
and
test
outsl
xchg
sub
sarl
sarb
and
lods
movsl
mov
sbb
xchg
stos
mov
xor
bound
pusha
stos
sbb
sti
push
sub
push
mov
testl
aas
pop
sub
push
or
lcall
popa
add
sbb
loope
cmp
mov
ja
sbb
lcall
mov
and
or
adc
mov
in
repz
inc
sub
push
jbe
test
xchg
out
sub
pop
push
addr16
cmp
scas
add
pop
cmp
movl
scas
pusha
sti
xor
or
mov
sbb
add
dec
cli
in
cmpsl
ss
and
hlt
cmp
divb
cmovns
ds
testl
jmp
movsl
and
scas
rolb
xchg
sbb
xchg
notl
negb
jae
pop
mov
movq
inc
movsl
les
repz
jbe
mov
xchg
test
movb
outsb
jg
add
dec
rorb
adc
and
and
sub
and
push
xchg
sbb
push
int
adcl
bound
je
jns
add
push
push
rolb
jge
int3
dec
pop
adc
dec
ret
repz
cmp
xor
or
das
ds
mov
popa
mov
mov
movsb
add
sub
ss
push
psubq
mov
scas
cmp
add
jge
xchg
jle
push
push
lahf
icebp
cmp
adc
add
outsl
pop
dec
mov
jg
pop
insb
fistpl
imul
data16
inc
jb
dec
mov
dec
xor
xor
adc
stos
shr
imul
pop
adc
incl
pop
adc
jne
jle
or
xor
in
rcrb
lret
pop
sub
or
bound
sti
ja
mov
push
jbe
and
repz
add
mov
mov
adc
stos
sysret
lret
sbb
pop
dec
and
adc
or
out
add
push
dec
and
fists
dec
sub
sbb
scas
add
mov
lds
pop
mov
push
inc
mov
push
sub
and
xor
adc
or
das
ja
mov
sub
push
and
inc
adc
mov
idivb
xor
shrl
mov
xor
pop
inc
iret
inc
adc
adc
jae
mov
push
xchg
or
lds
xor
fiaddl
das
vphaddubw
mov
xchg
daa
sahf
repnz
push
ss
inc
push
mov
or
cmpsl
push
das
fcmovb
dec
or
mov
push
push
sub
dec
cli
dec
mov
xor
or
inc
test
iret
inc
test
pusha
add
loop
mov
and
das
xlat
or
cmpsl
das
scas
das
insl
rorl
outsl
das
adc
mov
testl
push
iret
or
lret
pop
insl
mov
sub
sub
jae
add
push
inc
andps
sbb
movsb
push
mov
push
stos
pop
das
lret
mov
mov
adc
xlat
push
ja
imul
mov
or
fiaddl
ss
and
sti
notl
testl
cmp
insl
rcr
sbb
cs
add
jae
xchg
es
add
addr16
adc
sbb
and
xchg
das
or
bound
out
dec
in
loopne
sub
lret
das
or
adc
out
xor
xor
orl
pop
inc
adc
insl
popf
rolb
insl
adc
das
imul
sub
or
or
and
and
inc
inc
or
xchg
or
mulb
or
test
push
aaa
push
shrb
aas
cmp
shll
dec
sahf
inc
bswap
stos
add
movhps
push
mov
push
inc
fadd
push
addr16
xor
inc
mov
addr16
xchg
mov
aaa
and
pop
insl
mov
ficomps
sub
push
mov
inc
sbb
sub
fwait
adcb
mov
aam
push
mov
inc
test
or
mov
lds
and
mov
bound
iret
aad
ss
inc
push
or
xorb
and
inc
or
or
pop
aaa
fisubrl
aad
fildl
sub
add
pop
insb
nop
inc
ret
mov
sbb
inc
arpl
inc
push
cmp
imul
frstor
adc
or
imul
dec
lret
inc
pop
pop
push
in
pop
adc
ss
scas
pusha
fidivrl
lock
or
mov
inc
push
pop
aas
xor
mov
in
aaa
pop
das
pop
ss
aad
out
mov
push
cs
add
mov
jae
movl
scas
gs
mov
sub
push
loop
inc
push
pop
push
cmp
addr16
push
or
or
mov
in
and
iret
lds
or
push
mov
test
add
sub
mov
add
imul
add
push
mov
pop
sub
inc
insb
pop
dec
dec
es
inc
inc
outsl
insl
insl
leave
mov
imul
lcall
jne
gs
int3
xchg
hlt
fiaddl
inc
and
push
jo
inc
cmpl
push
fistl
push
je
push
outsb
ja
fs
je
ljmp
fs
push
push
jne
jb
dec
pmaxub
jb
push
jnp
pop
dec
xor
add
dec
inc
outsb
dec
push
jb
je
inc
imul
dec
popa
insl
outsb
lock
gs
mov
rorl
test
inc
shrb
mov
jae
das
pop
fwait
mov
imul
dec
test
jns
cmpsb
movsb
addr16
push
xchg
push
movsl
je
xor
jns
jne
dec
enter
ja
jns
test
xor
cmp
xchg
sbb
fnstenv
sbb
xor
and
xchg
fs
dec
lods
sti
jnp
or
mov
push
cmovg
adc
enter
lea
jnp
pop
fistl
imul
adc
jb
arpl
mov
cmp
push
imul
dec
fs
fildll
push
jns
subb
jae
rol
mov
out
push
shll
sbbl
inc
push
xchg
pop
dec
inc
pop
mov
popa
mov
or
lods
pusha
cwtl
adc
mov
das
incl
loopne
sidtl
add
add
outsb
xchg
jae
aaa
xchg
adc
popa
mov
cltd
add
pusha
add
imul
movlps
xchg
rclb
sbb
sub
dec
cmp
mov
sub
push
ret
adc
js
out
addb
cmp
inc
dec
jp
and
mov
adc
dec
inc
lahf
out
mov
dec
cmp
add
add
rcrb
in
push
out
test
add
inc
addl
and
subb
dec
incl
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
pop
inc
add
