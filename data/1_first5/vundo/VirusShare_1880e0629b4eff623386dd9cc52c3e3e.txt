add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
cmpsl
sub
les
icebp
aam
add
push
add
add
add
add
push
add
add
add
push
add
cmpsl
add
or
scas
add
add
add
test
add
dec
add
add
inc
add
add
add
jns
dec
add
ljmp
add
add
add
xchg
add
add
les
test
add
aas
add
add
add
push
arpl
and
testl
sbb
add
popa
add
jns
push
cld
add
test
add
dec
add
add
pop
add
add
push
rolb
dec
add
add
in
add
add
add
pop
add
sub
add
dec
add
add
add
xchg
add
jns
push
aam
xchg
add
add
cmp
add
es
add
add
xchg
add
clc
add
xor
push
dec
add
add
add
mov
add
mov
add
ljmp
add
add
add
add
add
push
add
xchg
add
add
add
in
jl
push
cmp
ljmp
add
add
add
or
mov
add
push
add
hlt
add
add
add
add
hlt
add
les
push
jnp
sbb
lret
add
add
add
add
daa
add
add
push
ljmp
add
add
dec
add
push
add
add
add
add
add
add
add
inc
add
add
mov
add
dec
add
cmp
add
add
add
add
les
xchg
add
sub
lret
add
add
add
add
add
add
mov
add
testl
add
add
add
add
add
add
add
add
js
das
add
add
add
stos
add
cmp
jno
testl
push
add
jno
jle
push
pop
add
pop
add
push
push
and
xchg
add
add
pop
add
add
mov
add
add
addb
add
push
lock
add
add
add
jns
ljmp
add
add
add
or
aaa
add
movsb
add
pop
add
add
add
cmp
add
movsb
add
add
les
les
xchg
add
imul
add
add
les
and
pop
add
mov
scas
add
dec
add
add
add
add
add
add
add
mov
add
les
testl
dec
add
xor
popa
add
dec
add
add
add
addb
add
inc
add
add
add
add
add
add
jbe
or
pop
add
rolb
add
add
xchg
add
movsb
add
push
testl
sub
movsb
add
add
or
sub
jno
adc
push
add
movsb
add
add
popa
add
outsl
add
xlat
add
iret
add
testl
dec
add
outsl
add
add
xchg
add
add
push
mov
adc
movsb
add
add
add
enter
enter
push
add
add
jns
or
add
add
add
add
add
add
push
les
repnz
mov
rolb
enter
pop
cmpsl
insl
lret
dec
pop
mov
pop
inc
sbb
pop
pop
js
sub
xorl
sti
insb
xchg
or
xor
std
sub
sub
xchg
repz
lret
fisttpll
jecxz
bnd
jp
mov
jns
pop
pop
leave
adc
test
pop
dec
leave
push
mov
out
and
data16
sti
and
mov
sbb
aad
andb
adc
dec
mov
dec
shrl
push
xchg
fisttps
dec
inc
xorl
adcl
xor
or
xlat
outsl
jp
pop
xor
dec
cli
jae
adc
jge
enter
pop
clc
jp
out
pop
pushf
mov
ja
call
mov
fdiv
add
add
xchg
pushf
stc
lods
dec
ret
push
inc
xchg
fs
rcl
imul
or
add
or
mov
xchg
bound
pop
or
in
or
fistps
arpl
add
or
pop
or
dec
in
fistpl
pop
pop
jmp
cmp
jmp
or
loope
outsl
out
lods
xchg
and
sbb
idivl
mov
ret
aas
push
pop
or
or
inc
and
or
sbb
enter
ret
inc
popf
out
mov
mov
lock
dec
sahf
and
in
cmc
fwait
mov
fcmovnbe
inc
or
or
aam
xchg
ret
xor
test
push
pushf
leave
test
test
loopne
and
jmp
iret
mov
addr16
repnz
xor
stos
pushf
ret
jno
ret
adc
stc
jbe
mov
ficoms
int3
lds
mov
mov
leave
xor
mov
movsb
ja
mov
loope
dec
mov
mov
mov
mov
cmp
loop
ret
aaa
lods
or
or
int3
sbb
cld
aaa
aam
inc
inc
inc
js
gs
mov
loopne
incl
xor
in
sbb
lds
and
mov
xchg
cmp
xchg
arpl
xor
push
xchg
popa
xchg
das
leave
dec
aam
add
sub
or
push
enter
ret
add
aad
rcll
pop
sbb
lret
mov
push
nop
add
pop
dec
pop
mov
jle
test
insl
jb
adc
inc
inc
inc
xchg
insb
xor
xchg
aas
mov
int3
mov
sub
rolb
xor
xchg
ja
mov
mov
aaa
push
into
popl
mov
in
xor
mov
int3
ffreep
xchg
fisubl
fnstenv
fmul
icebp
xchg
frstor
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ljmp
outsb
jmp
push
mov
into
pop
pop
out
bound
push
scas
scas
pop
mov
xchg
outsb
out
testl
ja
aaa
scas
sub
pop
out
addr16
adc
jge
aaa
dec
add
outsb
negl
mov
cs
jbe
into
popa
lcall
xor
and
out
xchg
adc
adc
aas
insb
fnstenv
sub
xor
or
xor
stos
or
into
mov
popf
or
in
cmp
mov
cld
arpl
jmp
out
testl
pop
add
xchg
mov
out
ret
enter
jmp
dec
mov
or
loop
iret
int
mov
outsb
out
or
mov
shll
add
call
jno
inc
test
and
push
xchg
sbb
je
subl
lods
out
addr16
clc
add
xchg
mov
pop
inc
and
and
mov
js
xor
inc
dec
cs
fildll
pop
out
loop
ja
add
mov
xchg
outsb
out
mov
outsl
cs
movsl
into
or
pop
sahf
imul
ret
pop
stc
pop
mov
push
aam
mov
inc
mov
jbe
push
lcall
std
xor
dec
sarb
mov
push
dec
movsb
cs
cmpsb
jbe
bound
adc
xor
push
aad
test
mov
xlat
cs
fidivs
into
pop
pop
out
addr16
ja
inc
mov
mov
xchg
outsb
out
testl
daa
fidivs
into
pop
pop
out
addr16
ja
inc
mov
jae
das
int3
enter
aam
jecxz
dec
xchg
xor
cmp
jo
or
push
inc
popf
addb
inc
pop
lds
inc
daa
push
push
inc
push
mov
data16
dec
fsubrs
bound
es
cmp
scas
push
push
mov
fs
pop
pushf
xchg
out
repnz
pop
mov
mov
pop
or
mov
mov
in
xchg
stos
adc
into
xor
pop
aaa
out
lret
mov
sub
or
loop
or
out
pop
notl
or
xchg
xchg
popf
push
scas
rol
clc
jp
inc
mov
jne
ja
sub
std
jo
xchg
or
test
in
xor
pop
bound
jae
add
xchg
stos
cmp
cli
test
aas
lods
dec
lods
add
sbb
mov
or
inc
fisttps
push
fsts
imul
push
test
mov
xchg
cmp
push
dec
push
fwait
outsl
ret
loop
fistpl
xchg
jb
popf
xor
sbb
shrl
pop
jnp
xor
sbb
aaa
and
sbb
scas
xchg
push
testb
mov
dec
push
mov
in
xchg
cmp
and
add
push
subl
xor
cmp
adc
dec
mov
sub
shrb
outsb
out
sub
scas
add
jbe
rol
jl
xchg
inc
imul
icebp
add
out
adc
dec
sbb
mov
rolb
cmp
cmpsb
nop
pusha
into
sub
cltd
mov
pop
pop
mov
inc
dec
lea
lret
int
mov
cmp
xchg
stc
mov
push
faddl
dec
jno
or
sbb
xchg
pop
ds
or
or
daa
ss
je
adc
sti
xchg
sub
test
push
fwait
jae
outsb
test
pop
and
out
inc
int3
push
sti
push
push
imul
fcomps
sub
test
aam
call
cmp
xlat
xor
add
fs
adc
jno
xchg
cmp
or
je
mov
hlt
sahf
inc
jbe
pop
mov
add
fcomp
mov
add
loop
mov
mov
and
xlat
xchg
jge
mov
mov
pushf
sbb
cltd
mov
push
pop
sbb
xchg
xor
mov
pop
andb
movsb
xchg
xor
fildll
add
out
rorl
popa
outsb
or
test
sub
mov
in
sub
loope
mov
xchg
xor
mov
jnp
loop
out
fs
pop
inc
push
cmp
mov
xor
daa
andb
and
mov
jp
pop
and
mov
jge
or
add
xchg
mov
mov
sub
xchg
or
fcomip
lea
xchg
int3
jae
jmp
gs
and
sbb
insb
int3
ret
test
lock
adc
cli
xor
cmp
iret
sbb
xchg
push
jno
aad
mov
mov
mov
mov
daa
test
es
push
jns
shll
loope
int3
movb
out
pop
je
push
add
ficomps
das
pop
jne
testb
faddl
xchg
insb
insl
jbe
or
and
int3
popl
mov
pop
clc
outsb
ret
mov
inc
and
mov
in
adc
outsl
loop
int
mov
push
push
adc
push
mov
jno
movsl
movsb
inc
stos
and
mov
jl
jle
loopne
add
psllq
stos
sub
das
into
dec
mov
imul
in
and
test
push
aam
xchg
outsl
dec
pop
into
hlt
mov
dec
iret
fstl
mov
fidivs
hlt
mov
dec
stc
rcl
cmp
repnz
add
mov
pushf
push
xchg
gs
jge
enter
outsl
pop
or
push
sub
adc
js
adc
dec
popf
sub
push
iret
test
cli
cwtl
shl
xchg
push
enter
arpl
addr16
stc
popa
imul
insb
lcall
push
aad
adc
loopne
loope
add
or
dec
in
xor
pop
pop
in
pop
xchg
test
and
je
cmp
repz
and
inc
inc
test
out
adc
mov
aas
cmpsb
pop
mov
aam
mov
sub
lret
mov
loopne
sbb
movsb
cs
js
or
pop
mov
or
cmp
xor
decb
ud1
enter
sbb
xchg
dec
imul
pop
push
mov
cltd
fsubs
aaa
test
dec
fsubrs
inc
cmpsl
mov
mov
in
loopne
xchg
lods
mov
jmp
fcmovb
mov
adc
aas
sub
xor
leave
mov
std
adc
push
lret
push
stc
popa
repz
sbb
imul
ss
outsb
xchg
push
inc
adc
mov
pop
repnz
imul
fmul
mov
dec
jge
test
mov
push
outsl
pop
cmp
lock
js
adc
push
jb
and
jge
test
cltd
inc
test
pop
mov
jae
in
int3
or
push
mov
inc
jae
jb
xor
cmp
inc
sub
jns
push
xadd
xchg
das
jns
and
dec
in
rorl
jae
clc
jecxz
dec
pusha
sbb
inc
and
adc
out
cld
lret
fsubr
jbe
jnp
je
adc
scas
pop
int
jl
or
jmp
sbb
lcall
add
cmp
or
jl
adc
xchg
outsl
les
mov
add
or
shl
xor
pop
addr16
mov
dec
fsubrs
adc
loop
xchg
fucomip
jns
mov
pop
sub
nop
push
mov
jle
lods
xchg
and
imul
sub
idivl
lcall
cld
sarb
cmpsb
sbb
lahf
in
xchg
faddl
cmc
test
sub
in
sbb
pop
icebp
pop
mov
mov
popa
and
push
adc
in
xchg
add
stc
icebp
imul
scas
popf
adc
nop
add
loope
in
sub
sbb
or
sarb
loop
loop
push
rorb
or
xchg
mov
fs
pop
das
std
xlat
dec
cmpsl
sub
cli
test
sti
dec
hlt
pushf
pop
xchg
pop
fwait
out
xor
js
dec
sub
mov
or
pop
fdiv
xor
lret
cltd
lcall
lret
jl
popw
push
rorb
pop
hlt
mov
das
mov
fidivrl
cmp
aas
mov
sbb
sub
push
bound
stos
mov
mov
xchg
fdiv
lock
add
movb
jns
insb
cwtl
lret
jp
clc
push
cmp
dec
fstpl
loop
test
xor
sbb
mov
lret
jmp
mov
cmp
call
xlat
push
and
push
add
ret
cwtl
leave
scas
shl
fsubp
popa
or
cld
pop
add
aam
test
pop
movsb
inc
pushf
and
sbb
xchg
mov
cmp
jle
cld
ja
push
jno,pn
sarl
leave
push
mov
push
xchg
sub
jmp
outsl
ss
jmp
loop
pop
popf
sbb
js
loope
push
cs
rolb
and
cmpsb
insl
or
fsubp
xchg
push
mov
dec
xchg
jnp
fcomi
fs
mov
cmp
scas
inc
imul
js
out
repnz
imulb
lods
cmpsb
cmp
xchg
rclb
xchg
jns
mov
xor
mov
fdivs
jo
out
xor
les
subl
imul
jbe
ret
mov
inc
sub
mov
lods
cmpsl
cmp
repnz
jne
stos
loopne
mov
bnd
mov
lods
sbbl
imul
jge
jmp
add
repz
xor
fwait
fs
inc
es
icebp
inc
pfpnacc
std
xor
add
nop
mov
jl
xchg
jnp
mov
or
mov
sbb
inc
mov
sub
fbstp
mov
jae
imul
sbbb
sub
inc
or
push
sbb
in
hlt
ret
clc
mov
sub
into
in
add
cld
mov
into
fdivrl
lcall
cmpsb
mov
arpl
shlb
ljmp
pxor
xchg
mov
std
mov
cmp
rcrb
jo
sub
jno
add
clc
daa
add
xchg
test
cmp
and
imul
insb
cmp
js
and
mov
andl
xor
xor
sub
sbb
jo
sub
jae
movsl
testb
cwtl
dec
cmp
push
loopne
push
and
mov
or
push
dec
enter
or
cmp
out
out
rol
mov
in
xchg
dec
push
xchg
cs
hlt
cmp
jae
xor
inc
movsl
mov
pop
loopne
les
push
hlt
sbb
addl
adc
jns
sub
inc
jp
lock
jl
das
push
das
inc
out
xrstors
mov
gs
call
and
fiaddl
lea
movsb
loopne
adc
pushf
pop
insb
mov
aas
stc
xlat
ficomps
aaa
pop
pop
push
inc
inc
inc
adc
push
in
lds
and
jo
inc
std
jg
jbe
mov
push
fwait
mov
ljmp
in
adc
jae
jp
mov
jl
inc
mov
pop
aaa
rcl
insb
cmpb
push
pushf
arpl
call
mov
add
lcall
mov
ret
pusha
cmp
adc
gs
mov
mov
push
jo
ucomiss
push
lods
and
cmp
mov
push
xchg
sbb
or
negl
cmpsb
push
cli
push
cmp
inc
and
loop
and
and
sub
pop
add
ljmp
and
mov
bound
sbb
cmpsb
add
rorb
hlt
xchg
in
lahf
fcompl
and
out
xlat
pop
dec
xor
mov
imul
enter
xchg
hlt
std
mov
je,pt
rolb
xchg
jmp
and
rolb
push
adc
ret
aam
stos
aaa
mov
test
pop
inc
dec
test
insb
fs
aad
fwait
lahf
inc
fdivrl
je
mov
gs
sbb
pop
lret
mov
jmp
fdivrs
enter
push
inc
jb
stos
cmp
rcrl
adc
mov
and
into
insl
xor
mov
call
inc
je
mov
int
rcr
cltd
pushf
mov
call
pop
pop
add
add
xchg
adc
push
movsl
enter
shl
cli
push
clc
insb
mov
cli
icebp
xchg
insb
movsb
mov
or
mov
cmc
or
pop
jne
pop
xchg
clc
sub
add
push
fsubr
fdivl
clc
xchg
cmp
mov
add
xchg
jns
aas
and
inc
test
inc
xchg
jbe
dec
popf
adc
out
jle
mov
mov
sub
xchg
add
adc
sub
sub
mov
adc
mov
inc
mov
dec
jmp
sahf
int3
push
mov
int
xor
rolb
cli
push
push
xor
lcall
shr
mov
xlat
mov
aaa
aam
xor
shl
xchg
dec
aas
adc
adc
cld
test
mov
and
outsl
cmc
popf
cmp
movlps
dec
cmpsl
push
inc
push
aas
fistl
bound
add
aad
push
test
cmp
and
jg
push
mov
pushf
iret
popa
lods
fnstenv
lret
int3
nop
pop
dec
or
xchg
xlat
add
jne
or
sbb
enter
mov
ret
jle
in
cmpsb
xor
xlat
cli
mov
sub
add
in
pop
cmp
imulb
testl
lcall
andb
jge
sahf
call
mov
mov
or
scas
imul
mov
cmp
adc
cwtl
popa
divb
lds
adcb
fistpll
sbb
ret
or
sti
cli
mov
clc
daa
push
loope
push
rcrb
movsb
ljmp
nop
enter
arpl
lods
int
insl
out
pusha
adc
ljmp
test
cld
js
and
mov
sub
dec
add
mov
test
inc
xchg
mov
call
aas
sahf
fcmovne
js
and
aad
imul
jge
push
insb
loope
cmpsl
inc
test
fstl
push
ds
aaa
fs
add
fisubs
pushf
sbb
jg
cmpsl
loopne
adc
fdivrl
out
scas
movsl
mov
inc
inc
jg
pop
mov
mov
push
inc
call
cmp
sub
adc
cmp
rcrb
fmul
popf
inc
fisttps
pop
jne
ja
pop
or
and
insb
lds
dec
pop
mov
mov
daa
mov
dec
les
das
int
imull
push
add
les
idivb
add
in
adc
adc
div
outsl
gs
pushf
lods
clc
inc
adc
test
jnp
iret
out
cmp
das
or
jmp
ljmp
mov
adc
mov
mov
inc
cmpl
idiv
xchg
adc
dec
sbb
inc
imul
sub
scas
loopew
cmp
mov
dec
jmp
lods
adc
dec
scas
push
push
imul
push
icebp
subb
push
je
orb
sbb
movsb
cmp
fidivrl
sbb
inc
xor
mov
push
sarl
js
scas
popf
and
pusha
or
test
jno
loopne
imul
js
jns
pushf
cmp
jecxz
mov
mov
or
movsb
pop
sbb
jnp
inc
popa
push
iret
pop
nop
ja
xor
es
scas
cmp
dec
test
mov
sub
iret
rol
push
mov
repnz
inc
fldenv
jnp
cmp
or
rcr
pusha
pusha
inc
mov
notl
cwtl
add
orl
mov
insb
jns
aad
dec
enter
add
mov
xchg
or
clc
inc
jmp
pop
imul
fucomip
cli
xor
adc
sbb
mov
adc
adc
call
mov
adc
inc
inc
cmp
add
mov
int
pop
es
test
inc
mov
mov
mov
loop
xor
inc
js
js
cli
pop
mov
lcall
xchg
lea
or
pushf
insl
adc
pop
arpl
aam
sub
icebp
lret
lahf
lock
mov
js
xchg
rolb
jno
jo
jno
imul
js,pt
mov
lods
outsl
test
mov
pusha
inc
js
stos
push
fs
push
fsts
mov
sbb
inc
nop
mov
adcl
and
and
sub
sub
mov
pop
into
icebp
pop
inc
and
aas
mov
inc
ss
inc
sbb
adc
and
icebp
fimull
rcrl
aad
and
add
ljmp
repnz
pop
fimuls
lret
add
jns
push
cmp
lods
cmp
inc
aas
cmp
outsb
fstpl
xchg
je
inc
sub
movsl
inc
int3
jae
cmc
rcrl
subb
jl
out
push
sub
adcb
jne
xchg
dec
mov
stos
les
js
adc
out
or
mov
xor
dec
and
loop
ljmp
scas
push
lods
daa
sub
dec
fsubrl
pop
xlat
arpl
and
addr16
pushw
sub
jns
call
and
arpl
push
cmp
ficoml
lcall
cmp
pop
leave
mov
hlt
mov
cmpsb
cmp
in
push
pop
adcl
in
lahf
lods
cwtl
jne
ret
ja
mov
jge
scas
pop
add
fwait
mov
or
mov
rol
js
sub
xchg
mov
push
scas
sahf
fcomps
lds
or
dec
jae
das
sahf
add
call
enter
cmp
xlat
fsubrl
push
add
popa
inc
inc
push
inc
mov
hlt
xchg
add
ret
lahf
xor
stos
mulb
dec
mov
daa
sbb
jno
fidivl
sbb
rolb
loopne
sub
sbb
mov
testl
test
sbb
or
xor
pop
sahf
sti
push
cmpxchg
cmp
adc
insl
or
lds
adc
shll
and
and
test
icebp
out
mov
xchg
xchg
imul
mov
jmp
add
sbb
dec
add
and
repz
jo
or
mov
cltd
ja
test
movsb
cwtl
jle
xchg
popa
nop
jecxz
sub
push
mov
sbb
mov
leave
or
scas
std
mov
cmp
push
jecxz
repz
or
sub
popl
sub
xor
shll
mov
rol
lods
xchg
xchg
jg
mov
adc
aam
cmp
sar
les
inc
mov
push
scas
sub
mov
fnstcw
fadds
xor
adc
and
jae
push
data16
cmpsb
leave
add
push
pusha
or
les
cmp
dec
pop
ret
orl
or
mov
cmp
pop
add
scas
std
pop
fisttpll
xchg
nop
rep
add
or
rcr
xlat
and
mov
fs
hlt
xor
lret
imul
fiadds
xor
sbb
or
push
and
loope
sub
add
icebp
jb
mov
cmp
sub
stc
or
jo
adc
loope
repz
in
les
and
out
fs
sahf
je
out
push
ds
jg
push
in
aaa
je
maskmovq
push
jno
loopne
test
inc
jo
jbe
sub
clc
mov
jecxz
mov
cmc
push
push
test
aaa
pop
rcrl
cmc
mov
out
jp
movsb
enter
xor
sbb
mov
pop
pop
fisttpll
fwait
ljmp
daa
test
int3
jmp
push
mov
sub
clc
lret
scas
aam
inc
in
cltd
mov
jo
fxch
add
lcall
sbb
sbb
mov
or
fs
fs
nop
bound
jb
cltd
mov
pop
cmp
aaa
jmp
mov
dec
and
push
test
dec
inc
ja
test
push
pop
and
xchg
push
insb
lahf
gs
sahf
mov
stos
mov
ret
iret
mov
cld
int3
cmp
jl
mov
mov
out
xor
sbb
mov
adc
jae
mov
push
cmc
add
and
ljmp
xor
insb
cs
add
pop
out
incb
fildll
stos
mov
lock
gs
mov
jl
addl
xor
iret
mov
cli
fs
add
adc
mulb
push
xor
rcrl
int3
dec
fidivl
gs
push
sbb
movsb
add
mov
lahf
mov
push
push
ljmp
and
mov
lods
inc
push
xchg
ds
cmpsl
sub
dec
pusha
mov
push
push
leave
mov
out
jbe
in
inc
inc
cmp
in
xor
jne
imul
fdivl
sub
adc
stos
and
sbb
dec
adc
in
xchg
jmp
dec
into
dec
jg
and
jge
xchg
cmpsb
pushf
xchg
mov
rcrl
add
aad
and
fmul
jno
adc
sbbl
xchg
and
lods
push
cltd
mov
or
test
jge
xchg
addr16
mov
mov
sahf
xor
push
push
push
rorb
mov
jle
mov
lods
cmp
pushf
mov
dec
push
cmp
mov
sbb
repz
daa
or
pop
xor
jne
dec
addr16
pop
jp
shrb
pop
arpl
push
pushl
stos
sarb
inc
xchg
jle
shl
rolb
test
dec
js
mov
jl
jge
pop
data16
dec
mov
lahf
pop
xchg
dec
sbb
push
pop
mov
repz
jecxz
or
pop
sar
xchg
orb
jl
jmp
mov
jle
lea
loopne
inc
sub
jne
ljmp
xchg
pop
pushf
fisttpll
dec
inc
stos
fsubrs
pop
inc
daa
mov
jmp
cmp
pop
push
lea
sbb
rolb
cmpsb
push
lea
sahf
xor
daa
ljmp
cmpsl
fwait
xlat
cmp
loopne
subl
adc
ficoms
and
mov
jle
outsb
out
testl
daa
fidivs
into
pop
pop
out
addr16
ja
inc
mov
mov
xchg
outsb
out
testl
daa
fidivs
into
pop
pop
out
addr16
ja
inc
mov
mov
xchg
xchg
outsb
out
repz
ds
and
into
push
adc
addr16
outsb
mov
scas
mov
jle
outsb
out
out
ds
cs
fmulp
lods
pop
cltd
adc
pushl
inc
test
cmp
add
xor
and
in
or
fs
mov
ljmp
adc
add
xor
and
push
push
pop
je
adc
mov
movsb
cli
cmpsb
jmp
lret
or
or
dec
push
pop
insb
dec
jle
xchg
mov
cli
fwait
cltd
mov
xchg
je
push
arpl
pushf
cmp
mov
or
ja
popa
dec
xor
lea
in
divl
push
cmpsb
mov
jp
in
pop
lods
mov
lcall
inc
outsl
jo
inc
jnp
fistpll
cmp
mov
pop
sti
jno
jge
hlt
lret
dec
or
ja
push
xchg
push
add
dec
loope
je
jp
dec
jne
stos
call
inc
hlt
imul
dec
xor
push
add
and
jmp
jo
int3
cmc
scas
push
fsubp
loope
jne
xor
cld
out
out
push
loopne
push
cld
mov
loop
add
adc
sub
push
pop
je
jge
xchg
stos
pushf
lcall
out
lret
adc
jbe
push
dec
inc
pop
push
add
add
sti
iret
test
mov
sarl
mov
jge
insl
jns
dec
dec
pop
push
and
pop
add
push
enter
out
mov
mov
mov
add
push
outsl
popa
aas
addr16
pop
je
fs
mov
movsb
cli
aam
lret
adc
add
xor
and
push
push
pop
je
fs
mov
movsb
cli
aam
lret
adc
pop
xchg
push
xchg
sbb
xchg
lret
fisttps
pop
cmp
aad
and
js
popa
bound
xchg
mov
pop
xor
push
adc
jle
jb
sbb
mov
mov
nop
xchg
sub
into
jno
out
ja
jo
add
cmp
in
jp
adc
pop
sub
repnz
xchg
data16
jns
out
fiadds
hlt
push
cmpsb
sub
int
enter
mov
loop
shll
push
mov
sbb
hlt
insl
pop
ret
adc
mov
pop
add
pop
inc
out
add
mov
dec
add
shll
or
dec
int3
push
xor
mov
stc
rcrb
or
mov
pop
xchg
dec
inc
mov
subb
jno
dec
fisubl
and
aam
aas
jg
push
stc
jle
mov
lret
jmp
orb
cmp
mov
or
jp
jb
call
call
movsl
jo
sbb
sub
fisttps
jmp
push
pop
dec
push
add
add
mov
xor
ret
addr16
mov
dec
xchg
jne
aas
hlt
push
lret
fwait
in
ds
jge
leave
push
out
xchg
cmpsl
mov
jmp
repz
sub
add
js
idivl
clc
mov
mov
xchg
sbb
xchg
test
xchg
mov
xchg
lea
xor
dec
xchg
ret
cmp
movsb
push
data16
nop
out
adc
adc
cmp
mov
mov
mov
ss
leave
pop
xor
mov
scas
popf
or
lock
adc
adc
mov
dec
and
pop
or
xchg
outsb
fmul
inc
sub
dec
imul
mov
movsl
imul
mov
or
mov
stos
cmp
fs
push
xor
ficoms
loope
xor
movsl
lcall
sbb
and
nop
cmpsb
mov
fisttps
add
cmpsl
mov
stc
inc
mov
cltd
jo
stc
dec
adc
iret
call
fnstcw
mov
add
push
or
lret
dec
pusha
arpl
adc
mov
cmc
pop
push
xchg
pop
mov
movsb
inc
in
aaa
sahf
cmp
pop
and
loopne
addl
mov
jmp
push
add
xchg
lret
scas
add
dec
pop
adc
mov
ret
mov
and
outsl
shr
fdivl
xchg
add
pop
rorl
repnz
lea
ret
fstl
in
lods
nop
xchg
push
cmp
inc
push
cmpsl
jnp
jp
lea
or
add
push
lods
cmp
push
lret
data16
addr16
mov
pushf
pop
loope
xchg
xor
pop
sarb
xchg
mov
lret
or
and
rcr
adc
pop
icebp
es
xchg
mov
dec
lret
dec
mov
dec
cmpsb
jmp
sbb
in
inc
pushf
xchg
ret
stc
dec
sbb
ret
pop
mov
sbb
cmp
aam
stos
mov
jecxz
jg
push
inc
outsb
jno
mov
add
sub
add
orb
inc
subl
ss
mov
cwtl
mov
and
orb
fidivl
mov
xor
ss
push
jns
xchg
std
lods
inc
inc
or
out
xchg
pop
jecxz
lds
mov
dec
sub
xchg
bound
jne
xchg
ss
orb
mov
mov
and
fstpl
cmp
sbb
ljmp
sahf
cmp
adc
xor
int
subb
cmp
xor
rolb
jp
mov
adc
cmp
mov
inc
jmp
lcall
aad
jns
sub
and
pop
fisubrs
jle
pop
les
push
jp
sub
cltd
loope
rcrb
mov
push
bound
mov
fst
sbb
int3
dec
aas
adc
fnstenv
sarb
cmp
ret
fistpl
or
add
cs
std
dec
lahf
jns
js
jne
sub
cld
mov
cmp
xorb
sub
dec
jge
sbb
jb
in
ret
rorb
dec
adc
adc
out
mov
popf
clc
pusha
sub
mov
sbb
pop
scas
adcl
test
dec
lods
mov
xor
cmp
arpl
pop
sar
in
jne
cmp
mov
lds
in
inc
mov
iret
pop
enter
lods
hlt
mov
iret
leave
sbb
pop
pushf
js
xor
add
mov
xchg
xchg
pop
movsl
add
in
mov
pushf
xchg
inc
andb
sarb
ret
push
int
cmp
push
and
das
lea
fwait
aas
enter
lret
add
fbstp
test
xor
repnz
xor
and
ret
sub
ljmp
or
cmp
cmc
test
or
add
dec
add
pop
pop
inc
adc
mov
adc
shl
out
inc
out
int
ljmp
ja
imul
mov
pop
add
sbb
aam
cmp
inc
subl
dec
inc
notl
ficompl
jbe
movsl
jo
mov
jbe
out
pop
shlb
sahf
jge
jge
mov
and
js
nop
mov
das
nop
dec
push
xchg
aam
leave
cmpb
fadds
scas
sub
add
mov
jge
mulb
pop
imul
jle
lds
pop
mov
es
mov
xor
add
push
scas
aam
mov
inc
add
pop
dec
lcall
loope
cs
in
jmp
jns
out
adc
mov
cmp
fldcw
mov
mov
sub
pop
in
js
xor
dec
int
mov
fisttpll
fwait
mov
inc
popa
divb
mov
sbbb
sti
fcmovb
and
outsl
enter
cmp
in
stos
cmpsl
lahf
mov
jp
ja
xchg
push
mov
mov
xchg
pop
int
fidivrs
rcl
int3
hlt
mov
rorb
das
es
test
loop
cli
adc
xchg
cmpsb
xor
leave
mov
mov
stos
fcmove
cmpsb
adc
push
jge
cmp
inc
push
out
and
mov
inc
xor
xor
dec
xchg
imul
lods
addr16
jge
inc
in
jmp
dec
mov
int3
pop
mov
andb
shrl
and
cmp
fisttpl
and
add
lahf
arpl
daa
adc
jo
stos
or
test
mov
aad
mov
xchg
xchg
or
fcmove
inc
lahf
jg
loopne
cltd
xchg
sbbb
jae
adc
leave
decl
sub
fmulp
cltd
aad
out
dec
inc
movsl
imull
pushf
and
ljmp
fsubl
rcll
cmp
mov
add
into
inc
or
xor
mov
sbb
and
adc
imul
fs
cs
fadds
out
sub
mov
sub
dec
jb
push
scas
in
je
pop
ds
xor
xchg
cmpsb
and
iret
add
sarl
imulb
push
push
out
arpl
dec
int3
aas
pop
out
fidivl
test
imul
lahf
push
inc
cmp
outsb
mov
push
lock
add
in
mov
or
push
push
xor
mov
jno
lret
push
rcll
mov
cmp
int
push
and
iret
pop
pop
sbb
xorb
mov
test
ljmp
mov
inc
and
idivl
clc
sbb
ret
aad
fsubrl
adc
or
sbb
imul
out
fdivr
inc
inc
mov
sahf
push
lea
inc
loopne
jo
xor
in
repz
testb
enter
in
loop
ror
bound
sbb
arpl
adc
lods
lock
mov
and
jbe
dec
xchg
or
mov
ret
outsl
jg
cmp
jle
inc
inc
jae
xlat
lds
xchg
sti
and
daa
xchg
sbb
or
lods
aam
jg
pop
bound
out
jmp
xchg
ljmp
addr16
dec
sub
test
popf
push
sahf
add
cmp
out
pop
sub
xlat
and
add
ljmp
lcall
inc
mov
mov
gs
push
mov
cli
and
jb
sbb
mov
xchg
mov
dec
fcomps
es
adc
cmp
pop
dec
jns
test
add
push
test
test
and
mov
push
add
push
jbe
mov
jecxz
into
lcall
ds
push
pushf
and
mov
sub
fildl
and
mov
pop
fwait
lods
sti
pop
sub
add
mov
mov
mov
xor
and
pop
mov
jge
mov
lret
mov
mov
mov
pop
pop
jg
mov
sub
stos
cmp
sbb
xchg
xchg
and
ds
add
cltd
fsqrt
jle
scas
mov
lret
outsb
icebp
in
xchg
inc
repnz
pop
xchg
insb
repz
mov
in
mov
shl
adc
out
sub
inc
std
adc
sub
ds
cld
push
xchg
push
outsl
cmp
adc
dec
push
jo
in
sahf
xor
inc
xchg
pusha
lcall
sub
insb
outsb
dec
mov
test
sub
cmpsb
out
int
scas
fldt
jne
add
arpl
xor
push
jecxz
cmp
gs
ljmp
sbb
test
lret
andl
iret
add
cmp
xor
push
jno
int3
test
je
sub
sub
add
gs
xchg
push
test
aas
inc
dec
xchg
jge
lahf
icebp
jns
je
repz
dec
dec
movsb
cmp
les
jae
sti
adc
test
jmp
stos
in
or
dec
iret
adc
outsl
movsl
adc
mov
mov
cs
es
scas
sbb
jb
mov
inc
xchg
xor
mov
push
ds
sbb
femms
xchg
push
mov
xlat
arpl
ret
lods
add
test
addl
test
push
gs
or
mov
mov
cli
test
jmp
test
fistpl
xchg
daa
iret
fsubs
fsubrs
xchg
sbb
mov
mov
jmp
jle
xchg
daa
adc
sbb
dec
call
or
jp
sti
lret
mov
lods
rolb
jge
pop
push
mov
add
addr16
lcallw
outsl
mov
xchg
aas
ds
mov
xchg
decb
jle,pn
in
push
dec
mov
in
xchg
cmp
mov
xchg
sahf
sti
arpl
pop
dec
mov
dec
push
incl
adc
popa
pop
int
mov
repnz
jp
dec
mov
nop
mov
xchg
notl
mov
addr16
test
dec
pop
lods
popf
add
adc
pop
jo
pop
shrb
lahf
cmp
inc
icebp
mov
pop
sbb
xchg
shll
adc
inc
mov
es
js
mov
aam
scas
sbb
pop
mov
je
loope
mov
cli
mov
push
sahf
cmp
inc
lcall
test
in
and
and
orb
mov
les
and
int3
mov
cs
xchg
stc
add
sub
xor
sti
lock
adc
push
aam
inc
ds
and
pop
shll
jb
push
add
dec
or
rclb
pusha
jp
mov
lcall
push
stos
aad
popf
test
jp
inc
fcoml
out
mov
lock
loop
ror
and
dec
ss
int
jae
sbb
repnz
lret
icebp
insb
insl
add
mov
pop
gs
and
ja
loop
inc
roll
mov
aas
shlb
adc
mov
js
js
addps
mov
xchg
test
cvtpi2ps
stos
jmp
sti
sbb
mov
sbb
roll
xorb
pop
and
rclb
sub
push
dec
daa
pop
stc
mov
and
inc
pop
imul
sbb
sub
mov
ja
notb
outsb
out
jo
jnp
mov
lret
pop
addl
scas
pop
sahf
jmp
aad
rclb
fadds
ficomps
mov
jg
aas
inc
ror
pop
leave
mov
lret
jmp
aas
mov
lret
negl
xchg
or
fdivs
out
pusha
xchg
pop
pop
sub
ret
xor
xchg
pop
sbb
cwtl
les
xorb
shll
xor
push
sub
adcb
or
cwtl
cwtl
sub
je
rcrl
fimull
insb
sahf
inc
lds
push
adc
ss
jecxz
mov
sub
sahf
scas
sub
sbb
add
fcomp
call
dec
pop
push
lahf
test
stc
mov
mov
adc
and
and
enter
fs
or
lret
xor
push
repz
jge
outsl
enter
fnstenv
cwtl
add
sbb
xchg
lds
movl
data16
add
lea
mov
xor
fcmove
jp
sub
adc
or
mov
inc
or
inc
jmp
jne
jg
sbb
sbb
cmp
int3
jae
scas
std
repnz
mov
inc
mov
fidivl
pop
fldenv
out
push
push
aad
imul
cmp
lret
bound
dec
movsb
pop
jbe
inc
incb
fcmovnu
jge
push
jecxz
push
sub
adc
dec
ror
shr
movsb
lods
pop
adc
cli
adc
mov
push
or
push
lds
cmp
mov
xor
imul
mov
push
push
mov
aas
mov
push
add
xchg
cmp
mov
movsl
and
xchg
pop
push
push
inc
or
mov
aam
lret
nop
loop
mov
adc
shrb
pop
ss
ret
or
adc
push
rcll
in
xorl
push
inc
cmpsl
rol
xchg
inc
ljmp
iret
mov
pop
mov
insl
xchg
fisttps
cld
xchg
sub
jb
push
adcl
rcrb
jl
pop
xchg
cmpsb
int
cs
inc
dec
hlt
push
or
pop
call
add
testl
lret
pusha
popf
add
mov
ret
push
cwtl
test
ret
jg
testb
clc
daa
and
insb
lods
arpl
adc
movsl
xor
mov
add
pop
dec
jecxz
inc
movsl
or
xor
loope
outsb
adc
fnstcw
lea
cmp
dec
pop
clc
out
test
jbe
mov
mov
mov
nop
fs
adc
xor
cmp
bound
dec
aam
xchg
push
inc
cmp
adc
xchg
pop
xchg
sbb
and
loope
mov
out
dec
xchg
jle
insl
cmp
mov
shlb
xor
jge
das
repz
aas
cmpsb
adc
mov
jb
xlat
or
pop
dec
dec
fdivs
mov
pop
xchg
mov
aaa
ja
adc
repnz
mov
scas
sub
sbb
shll
mov
xor
push
mov
dec
mov
sub
xor
pop
or
ds
lock
ret
pusha
movsb
xchg
xchg
mov
cmp
jnp
in
jb
popf
aad
add
add
pop
ret
rolb
lock
cmp
gs
mov
sti
and
mov
rcl
popa
pop
or
mov
mov
js
mov
out
sbb
movsb
inc
jbe
rolb
cmp
rclb
push
jne
lret
sub
xchg
sub
hlt
adc
lods
mov
jp
test
mov
loope
mov
mov
xchg
sti
sbb
lea
xor
xor
jle
insb
sbb
pushf
test
fbld
sub
xchg
lods
cld
ljmp
pop
mov
add
bound
mov
fsubs
add
jae
pop
in
in
loope
pop
test
cmp
lock
lret
std
movsl
shlb
loopne
jl
xor
bound
aas
push
inc
add
cmp
cmp
inc
push
jb
out
sbb
cmp
xor
hlt
adc
inc
push
push
adc
jmp
in
in
stos
lahf
push
std
jl
ffreep
lds
inc
out
xor
mov
sarl
mov
pop
fwait
xlat
movsb
stc
mov
push
lea
int
inc
adc
mov
dec
or
iret
loopne
icebp
std
loope
adc
xor
out
pop
test
mov
add
mov
and
pop
sti
leave
int3
lcall
lds
frstor
insb
int
push
lea
pop
mov
xor
stc
xchg
in
or
mov
jp
cmp
fists
xor
lahf
das
add
out
cmp
insl
getsec
repz
xchg
xor
rorl
push
push
stc
imul
xor
cld
mov
outsb
lods
cmp
jle
add
or
xchg
adc
cmpsl
adc
inc
sti
pushf
xor
jmp
in
mov
mov
mov
outsb
and
ljmp
dec
scas
ds
sub
add
adc
mov
insl
pop
sbb
cld
aam
xchg
cmp
imul
inc
pop
jle
test
fs
jmp
jae
xchg
js
and
push
cmpsb
stc
hlt
fnstenv
rcll
mov
pop
adc
push
dec
cld
jp
cmpsb
mov
in
aaa
jge
into
jl
decb
cmp
xlat
adc
adc
js
stos
ljmp
pop
bound
mov
adcl
push
addr16
cmc
ror
push
xchg
or
dec
xor
xchg
xor
pop
push
add
inc
xchg
mov
xchg
fiaddl
pop
mov
into
pcmpgtw
cmp
cmp
sub
mov
cmp
pop
in
ret
or
gs
loop
testl
adc
lret
mov
mov
mov
outsl
sbb
fcos
test
push
jle
or
daa
mov
xor
int3
jl
cmc
mov
insl
or
jnp
adc
lods
movsl
jp
mov
fsubl
mov
int
xor
rcl
test
or
sarb
outsl
xchg
je
inc
repz
pop
xlat
or
test
popa
fwait
jg
push
sarb
sbb
std
add
sbb
ss
stos
push
test
jmp
and
mov
sub
dec
xor
ret
dec
xorb
inc
push
rcll
rorb
pop
cwtl
jmp
ja
push
dec
ret
or
loopne
mov
les
incl
mov
jle
js
dec
fsubrl
mov
in
add
subl
mov
cltd
lcall
pop
or
clc
or
ja
scas
jno
sbb
addr16
imul
js
mov
push
lret
jo
repnz
xchg
leave
cwtl
push
cltd
movsl
xchg
rorl
push
or
mov
in
sbb
push
loop
dec
inc
push
in
in
lret
mov
add
and
fdivs
popf
jmp
mov
mov
push
es
in
test
xchg
and
popa
ja
imul
gs
mov
xor
scas
sub
add
pop
push
outsb
repz
mov
mov
cmpl
cmp
addl
outsb
dec
ss
rol
xchg
and
hlt
fsubl
js
mov
jo
cmpb
sub
out
les
int3
in
mov
add
sbb
and
push
inc
xor
popf
in
out
sbb
sbb
das
jne
sbb
insb
addr16
pop
cmc
pop
sbb
sub
mov
dec
lret
loope
lods
cli
or
xchg
sbb
cmp
test
out
sub
xchg
pop
outsb
pop
and
mov
testl
lock
loope
repnz
in
call
sub
add
dec
pop
enter
jb
push
stos
out
mov
jbe
lds
in
cli
add
lods
roll
sbb
dec
bound
sbb
inc
push
cld
xor
mull
imul
fdivrs
sub
mulb
daa
das
cmp
adc
ds
shll
add
inc
popf
js
sbb
stos
inc
lea
dec
cmp
stc
push
in
mov
mov
xor
add
out
mov
je
push
or
push
inc
mov
int3
pop
and
dec
or
ljmp
add
xor
and
push
push
pop
je
fs
mov
movsb
cli
aam
lret
adc
add
xor
and
push
push
pop
je
fs
mov
movsb
cli
aam
lret
adc
add
xor
and
push
imul
fs
mov
mov
fcomi
lret
adc
add
xor
and
push
push
fidivl
inc
xchg
push
xor
mov
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
ret
push
rolb
loopne
lock
sub
xchg
mov
pusha
mov
cmpsb
add
adc
movsb
push
rolb
mov
lock
mov
xchg
push
xchg
mov
cmpsb
inc
adc
and
xor
js
and
jb
sub
sahf
push
lock
mov
test
fimull
adc
mov
scas
push
pushf
jb
push
cltd
lret
nop
xchg
fwait
test
mov
aas
mov
icebp
inc
rcll
push
and
xor
sub
sub
pusha
daa
jne
scas
scas
adc
mov
and
in
mov
and
iret
sbb
add
dec
dec
add
int
jno
out
push
push
js
mov
data16
push
cmc
call
jmp
sbb
jg
nop
push
pop
lahf
mov
inc
movsl
push
xchg
in
mov
test
xchg
and
xor
aas
mov
cli
shl
fstpt
mov
pusha
rcl
xchg
xor
sbb
cmp
aas
xchg
dec
loope
push
push
jg
jns
pop
mov
push
xchg
jmp
sub
and
xor
fwait
push
xchg
loopne
lock
call
data16
inc
cmpsb
dec
sbb
adc
xor
xchg
jo
pusha
out
cmp
pop
aam
mov
inc
cli
add
add
mov
push
orl
xchg
jno
xor
push
daa
roll
ljmp
jg
dec
xorl
inc
mov
push
sarl
nop
inc
mov
xchg
push
xchg
jo
add
adc
and
xor
rclb
push
loopne
lock
mov
xchg
push
xchg
jo
add
adc
and
xor
rclb
adc
les
testl
loopw
iret
insl
scas
call
notl
ljmp
mov
std
push
xor
lahf
mov
sbb
hlt
dec
imul
fdivl
pop
mov
cmp
xchg
sahf
int
shr
mov
jp
outsb
je
in
mov
cmpsl
mov
dec
adc
cmp
pop
int
mov
add
pop
cwtl
mov
outsb
icebp
jae
push
lods
inc
xlat
and
pop
or
test
mov
lods
cli
xchg
sti
fildll
xor
cli
dec
outsl
pop
movsb
dec
lods
sbb
pop
sarl
sub
add
and
cmpb
arpl
std
clc
test
xor
mov
and
xor
mov
sub
nop
aad
lods
jmp
popa
dec
fdivl
movswl
and
inc
negl
test
repnz
mov
sbb
daa
and
fwait
add
jbe
movsb
jecxz
fwait
insl
dec
cmp
pop
int3
cld
shll
shll
sarb
jmp
ljmp
inc
add
jb
cmp
pop
cmp
jns
xor
sub
repnz
xchg
scas
scas
dec
fsubl
cltd
out
lret
xchg
lea
pop
gs
repz
imul
add
divl
sub
loope
int3
std
aad
jecxz
mov
or
jle
loopne
cmpl
hlt
fistl
insl
cmp
addr16
aas
adc
sahf
push
adcb
nop
out
test
xor
add
xchg
inc
cmp
pushf
cmp
test
sahf
and
push
add
inc
test
jmp
std
xor
push
xchg
adc
out
xchg
fucomip
decb
sbb
jmp
outsl
mov
int3
in
mov
mov
adcl
test
ljmp
jbe
shlb
inc
je
icebp
aaa
jmp
in
inc
add
pushf
mov
fstps
push
sub
push
loop
mov
jnp
stos
out
or
sbb
inc
jle
imul
cli
jecxz
sbb
cmpsl
adc
incl
mov
rclb
jb
scas
clc
fimull
popl
pop
mov
xchg
cmp
loopne
inc
sub
outsb
addr16
fildll
mov
cmc
sbb
push
fsubp
push
and
cli
iret
xlat
adc
adc
cli
lods
jmp
loop
mov
scas
leave
call
or
test
dec
add
jecxz
adc
in
mov
sti
inc
sub
mov
or
je
in
in
ds
adcb
aad
dec
fst
push
mov
push
and
adc
xchg
cmp
lcall
test
push
sbb
push
xor
fsts
mov
jb
dec
xor
imulb
add
sarl
jns
inc
and
mov
pop
push
sub
mov
data16
jl
popf
sub
ja
sbb
nop
fcmovu
mov
sbb
ja
shll
dec
adc
cmp
push
xchg
xchg
mov
sbb
out
jno
cmp
aas
jmp
mov
dec
in
bound
mov
movsl
imul
icebp
scas
out
les
bound
adc
or
bound
and
js
jnp
repnz
xlat
mov
lret
mov
or
sub
lcall
mov
sti
xchg
in
sar
fsubp
sti
aas
cmpsl
adc
pop
rorl
lds
push
iret
pusha
in
inc
or
push
out
nop
popf
dec
call
mov
jne
cs
and
pop
ss
adc
or
aam
daa
add
xchg
ja
sub
popa
movsl
imul
orl
clc
cltd
ljmp
inc
add
iret
outsl
es
jns
outsl
push
js
jl
testb
fldcw
out
and
adc
push
dec
dec
jbe
addr16
cmp
cmpsb
mov
cmp
inc
mov
iret
test
arpl
push
cmp
or
sub
mov
fcoml
cld
cmp
push
orl
pop
add
ret
and
pop
push
fsubrs
arpl
cwtl
xchg
dec
mov
push
inc
stos
jmp
sbb
cltd
sub
pop
fcomps
xchg
push
jecxz
je
adc
xchg
scas
mov
pop
daa
rcrl
mov
mov
push
stc
ds
sub
and
mov
rcll
push
lahf
dec
cmp
inc
aam
dec
rorb
add
loope
sti
mov
inc
addl
cmp
pop
adc
test
dec
xchg
loopne
mov
pushf
fcompl
xlat
add
out
dec
leave
and
jge
das
adc
test
xor
insl
dec
and
cwtl
add
sub
or
out
lret
mulb
sbb
dec
popa
jb
or
pop
mov
adc
inc
bound
in
lea
push
out
pop
sub
lods
xchg
popa
lds
and
rcll
shrb
inc
sbb
out
xor
push
mov
xchg
stos
jne
sbb
aad
inc
popf
jbe
negl
cmp
sbb
sbbb
mov
lret
addr16
mov
movsl
xor
sahf
xor
loope
cmp
cli
or
in
mov
out
incb
aam
andnps
mov
lret
adc
push
dec
out
xor
in
push
pop
repnz
cmp
sbb
or
scas
pop
xor
clc
or
mov
fs
ret
mov
or
inc
dec
jl
test
mov
mov
sub
mov
popf
xchg
inc
ljmp
fsubl
inc
mov
mov
jge
jo
xchg
adc
fimuls
cmp
xor
sbb
and
test
loope
sub
sbb
fs
pushf
push
mov
inc
bound
push
out
jns
cmp
dec
aaa
adc
xchg
or
mov
or
dec
gs
stos
sbb
decb
sbb
xor
xor
fistpl
add
push
mov
cmp
lock
xchg
sarl
add
jl
popf
loopne
dec
gs
mov
add
add
or
lock
addr16
cmp
pop
notl
rclb
mov
and
cmc
hlt
in
cmpsb
jae
scas
push
ret
les
shlb
push
push
das
roll
cld
lods
jbe
push
add
fidivs
test
mov
xchg
adc
adc
into
inc
jp
jle
fdivrp
mov
dec
imul
out
jmp
sbb
int3
mov
mov
sub
jo
lds
xchg
mov
add
mov
outsb
and
popf
push
fnsave
jbe
loopne
cltd
leave
daa
pop
insb
nop
add
mov
scas
sarl
shlb
or
xchg
pop
out
lret
jge
stos
mov
divb
hlt
hlt
xchg
das
pop
inc
inc
lret
push
imul
fildll
mov
xchg
addl
sbb
push
inc
int
outsb
pop
fiadds
call
call
mov
ja
fwait
xchg
pop
pushl
push
or
mov
mov
mov
dec
neg
negb
and
shrb
pop
sub
in
out
ja
out
cwtl
push
xor
cmpsl
xchg
idivl
mov
mov
sbb
adc
ret
and
jg
xchg
push
repz
fmuls
mov
adc
cmpsl
push
lds
mov
lahf
mov
cli
and
or
pop
adc
cmp
enter
mov
ret
cmp
stc
in
rcl
fwait
in
repnz
sbb
and
xchg
sbb
out
in
outsl
outsb
loopne
inc
adc
adc
insb
or
jg
or
shr
adc
inc
out
dec
out
mov
cltd
jns
icebp
les
and
inc
xadd
pop
push
frstor
push
pushf
int
jl
in
sub
adc
int3
pushf
mov
lods
sbb
jnp
mov
dec
outsl
lcall
xor
push
in
lret
push
jmp
sbb
icebp
mov
add
push
scas
xor
push
add
ja
gs
popf
jne
imul
jmp
repz
enter
and
ret
add
imul
sbb
and
stos
icebp
jno
shrb
mov
dec
cmovne
clc
lret
sbb
xlat
dec
outsl
daa
mov
mov
cmp
repnz
xor
loop
jmp
mov
pop
mov
arpl
dec
insb
xor
jnp
mov
sar
cwtl
or
gs
xorb
jne
jae
xor
outsl
jo
or
fisttpl
push
push
scas
int
rcl
mov
dec
xchg
jnp
icebp
add
add
mov
lret
fnsave
and
test
pop
and
sub
pop
jae
and
add
mov
scas
fxch
cmpsl
cmpsl
mov
imul
aam
sbb
lods
or
xchg
jp
dec
push
jp
hlt
test
lret
movsb
cmp
cld
lret
mov
push
leave
or
fwait
scas
xor
dec
sub
or
fimull
sub
xor
jnp
xchg
fwait
xchg
sti
xchg
xchg
notb
push
aam
or
xor
out
fsqrt
push
xor
aas
cmp
shll
and
ja
ss
cmpl
mov
mov
aas
cs
sub
jae
pop
in
jp
pop
in
sti
aaa
sti
outsb
sbb
stos
push
xor
dec
fsts
ljmp
inc
enter
ss
repnz
inc
sbb
xor
in
cltd
cwtl
cmc
or
adc
add
cmc
aad
out
loop
in
lcall
bnd
add
mov
testb
cltd
push
dec
lahf
out
popa
cmp
push
adc
loope
fstpt
popf
jecxz
cli
jo
jno
cmc
in
dec
insb
shl
mov
mov
pop
jno
xor
fcoml
inc
std
jmp
rcrb
push
jo
sbbb
mov
adc
xor
jecxz
std
sti
xor
push
popf
mov
and
imul
push
and
jecxz
inc
pop
mov
test
sub
scas
mov
sbb
insb
sub
add
sbb
outsb
int3
je
in
cmpsl
jge
fidivrl
pop
ss
dec
inc
stos
mov
ss
icebp
jns
mov
ret
mov
xlat
sbb
pop
filds
xchg
pusha
jl
push
repz
sub
mov
push
mov
lods
and
mov
pop
dec
sub
mov
scas
inc
pop
fwait
cmp
icebp
insb
out
in
or
cli
pop
popf
sbbb
cli
int
inc
aam
scas
fidivl
push
mov
and
aad
jecxz
stos
js
or
jge
test
mov
jmp
lods
inc
jb
mov
les
in
xchg
inc
cli
aas
fwait
xchg
fdivrp
insb
xchg
insb
call
repz
jb
pop
mov
dec
mov
jg
sbb
mov
mov
mov
xchg
das
mov
shll
mov
pop
cmpsl
cwtl
daa
add
adc
push
jae
inc
pop
inc
out
xor
sub
js
mov
push
andl
xor
push
dec
stos
testb
sbb
add
sbb
jmp
or
imul
xor
leave
outsb
insl
mov
cltd
mov
xchg
sbb
dec
jbe
jns
daa
cmc
jge
dec
movsb
ret
in
negb
mov
inc
cld
addr16
adc
sti
or
mov
sub
ds
outsb
cmpsl
jecxz
mov
jo
inc
mov
xor
mov
ljmp
inc
mov
cmp
mov
addr16
bound
repnz
mov
push
stc
or
add
mov
sti
mov
jnp
sub
xor
mov
xor
dec
mov
sub
roll
sbbl
lods
outsl
ss
push
cmpsl
test
int
ret
pop
mov
mov
ret
inc
jns
mov
pop
hlt
cmp
mov
jmp
mov
fiadds
mov
pop
sbb
xchg
pushl
inc
add
and
or
aaa
mov
lock
xor
add
out
mov
bound
pop
pop
add
jno
push
out
lahf
mulb
ljmp
dec
cmp
mov
gs
or
fmul
push
pop
cmpsl
fadd
movsl
push
fidivs
imulb
and
std
popa
subl
in
mov
pop
jne
jno
inc
daa
and
aam
and
popf
dec
sar
cs
out
xlat
xor
xchg
notl
hlt
add
and
jo
mov
sub
std
lods
jmp
mov
add
lds
mov
loop
sar
mull
cli
mov
jmp
or
or
inc
mov
sub
ret
xchg
hlt
and
dec
sub
xchg
jbe
mov
sbb
pop
mov
mov
addr16
dec
enter
cmp
adc
sbb
lret
sbb
push
inc
xchg
mov
out
sarl
inc
lret
clc
rorb
cs
mov
xchg
push
sbb
adc
mov
daa
neg
dec
jno
repnz
xchg
push
jae
mov
andb
push
or
and
ret
test
xor
sub
xchg
cmp
and
sbb
jmp
mov
or
xchg
dec
xor
pop
ljmp
inc
div
sti
pop
je
push
inc
push
test
xlat
popa
gs
jg
inc
cmp
pop
xchg
cwtl
popa
daa
add
repnz
sti
inc
dec
adc
xchg
add
divl
inc
aad
mov
cs
mov
cltd
cmp
sahf
sbb
or
mov
test
fimull
hlt
fistpl
sbb
shld
fnstcw
cld
pop
movsb
xor
fimuls
push
xor
movsb
test
repz
sub
dec
mov
lods
imul
jbe
lret
jae
movsl
sub
enter
sub
fiadds
popa
mov
mov
clc
xchg
cmp
jmp
mov
stos
push
cmp
aad
call
test
cmc
adc
test
int
ljmp
in
loope
sub
out
dec
push
loope
push
xor
jo
and
pop
jp
icebp
or
xor
pop
inc
pop
mov
lcall
inc
test
std
cmp
xchg
push
dec
addr16
add
cwtl
lcall
lods
les
inc
or
xabort
pop
hlt
sub
stos
jp
loope
int
in
mov
push
and
mov
mov
and
out
pop
int
mov
sahf
add
rol
adc
sbb
pop
les
or
loop
inc
adc
sub
push
jecxz
fwait
jle
fisttps
pop
sub
cld
push
sbb
cmp
jle
mov
in
jne
inc
dec
incl
enter
lret
scas
pop
cmp
es
lret
dec
and
fsubrs
mov
fcoms
cmp
cmp
lods
mov
adc
shl
jns
mov
dec
arpl
pop
loope
xchg
and
cmp
jge
ficoms
cs
xor
push
lahf
cmp
clc
cmp
in
pop
xchg
bound
push
sti
bound
xchg
mov
adc
dec
sbb
adc
sbb
movsl
and
das
popa
dec
in
ss
add
add
jg
xor
imul
sbb
inc
cmp
jl
gs
sub
lret
loope
jmp
and
push
ja
clts
fs
pop
pop
pop
arpl
popf
mov
aaa
push
lea
addr16
gs
fsubs
das
bound
bound
inc
mov
mov
and
pop
sarl
xor
cltd
fcomi
movzwl
js
mov
push
sub
mov
fadds
stc
xor
es
jmp
je
xchg
fchs
push
cs
inc
das
jne
cmp
nop
adc
das
jle
lock
iret
push
push
in
jge
push
js
call
inc
cmp
in
pop
ss
push
arpl
cs
dec
mov
test
rclb
mov
mov
and
divb
dec
cld
xor
pop
fucomi
js
mov
arpl
js
insl
fsts
fistpll
cli
rcl
cmp
sub
and
push
out
adc
divl
test
out
xor
mov
inc
mov
sbb
decl
adcb
das
jnp
test
ljmp
test
addb
push
rcrl
je
jg
inc
inc
inc
notl
add
xlat
mov
pushf
cmp
test
adc
daa
rep
negb
sub
fnstsw
cmpsl
mov
out
inc
xchg
xchg
pop
cmp
or
subb
in
inc
xchg
cmp
cwtl
mov
mov
pop
xchg
sub
adc
mov
xlat
int3
sbb
add
and
xchg
push
jb
mov
fs
repnz
es
cmp
lea
push
sub
orl
fdivrs
sub
sub
lahf
mov
xchg
dec
movsb
clc
icebp
das
jo
push
je
inc
jb
test
add
in
push
dec
daa
cmpsl
daa
cmp
les
push
jge
cwtl
mov
and
add
outsb
in
mov
and
xor
psubusb
rcrl
test
or
xchg
in
mov
adc
add
test
lcall
mov
jns
dec
pushl
sub
ret
dec
jnp
mov
sub
adc
cmp
cmp
daa
imul
iret
push
add
sub
jno
sbb
xor
inc
sbb
mov
jne
es
insb
out
push
jp
gs
stos
add
orl
push
in
or
or
adc
jb
pushl
push
adc
sbb
mov
dec
adc
xchg
adc
ljmp
test
mov
mov
jo
shrb
cmp
jo
mov
adc
cmp
pop
pop
add
jecxz
cmovl
jbe
cld
adc
ss
jbe
adc
ja
xchg
bound
push
adc
aam
mov
jbe
les
cld
daa
sbb
inc
and
mov
std
outsl
xlat
stos
push
sub
adc
adc
mov
into
inc
mov
rorb
adc
popf
push
push
or
add
jnp
test
xor
out
jmp
inc
push
add
lgs
cmc
mov
imul
pop
mov
push
push
xchg
ficompl
nop
sbbl
mov
and
fs
cmc
add
push
push
ss
push
inc
and
out
cwtl
sbb
ljmp
iret
xchg
lcall
into
scas
ret
dec
jnp
mov
leave
sbb
add
aaa
cmp
shrb
mov
add
push
jb
mov
xchg
dec
out
test
push
or
cld
dec
fwait
inc
cltd
cmpsl
dec
pop
into
sub
or
decb
daa
mov
mov
mov
add
mov
aad
or
pop
int3
jg
sub
leave
cs
jne
add
aas
push
aam
test
jbe
mov
addr16
inc
sahf
fwait
cmp
xchg
call
fdivl
xchg
and
and
xchg
push
jge
xchg
sub
int3
cs
js
sbb
add
ffree
or
cltd
xor
inc
jbe
cmp
xchg
xchg
leave
fstps
or
ds
fcomp
lret
fistpll
and
lcall
inc
mov
pop
mul
fsubrl
int3
loope
ret
pop
lods
js
stos
imul
pop
sub
adc
scas
cmpsl
jno
mov
imul
or
popf
push
inc
ret
fadds
mov
xor
dec
scas
in
add
mov
jo
in
jp
sbb
inc
sbb
or
lods
cld
test
cmpsl
in
ljmp
adc
ss
rcll
addr16
inc
pop
or
add
sub
inc
inc
mov
lret
inc
and
add
jnp
mov
ret
sbb
xor
testb
outsl
dec
adc
arpl
call
es
pop
lock
jl
mov
ja
push
loopne
add
xlat
sbb
scas
adc
pop
inc
imul
adc
pop
dec
xor
xchg
inc
push
or
lea
mov
das
sbb
xlat
stc
or
das
mov
mov
sub
adc
test
out
jno
and
or
dec
mov
pop
rorl
mov
dec
in
mov
inc
pop
xor
inc
scas
repnz
pop
and
outsb
mov
push
rcl
loope
idivl
movsb
sub
sub
outsb
xor
push
lahf
sahf
inc
mov
jmp
push
cmpsl
aaa
lock
mov
xchg
push
xchg
jo
add
adc
and
xor
rclb
push
loopne
lock
mov
xchg
push
xchg
jo
add
adc
and
xor
rclb
push
xorb
daa
adc
inc
mov
xchg
push
xchg
xlat
add
and
fsub
aam
mov
mov
push
add
divb
cltd
inc
imul
cmp
or
sbb
fwait
jne
inc
inc
push
push
lahf
add
jno
in
cmc
clc
aam
movsb
movsb
mov
xchg
xchg
xchg
xchg
gs
inc
inc
push
push
and
add
adc
out
hlt
movsb
in
aam
mov
test
je
pop
push
dec
and
sbb
push
in
cmc
into
movsb
mov
aam
in
fisubl
fs
or
add
in
lcall
lret
subb
push
iret
xor
clc
xor
and
cmp
mov
nop
or
aam
aam
and
lea
repz
sbb
and
xor
jo
clc
in
movsl
xor
js
push
sbb
xchg
mov
inc
mov
hlt
in
adc
or
and
sub
out
xchg
push
lahf
cwtl
pop
mov
int
cmp
adc
xchg
adc
cmp
test
popf
imul
inc
rcrb
std
rcrl
mov
pop
shl
mov
test
test
fs
inc
push
push
dec
and
sbb
cmc
in
vpmullw
movsl
mov
xchg
lock
xor
sbb
jb
pop
inc
push
inc
mov
leave
stc
out
test
stc
cmp
je
xor
push
inc
push
push
push
add
popf
cwtl
xchg
mov
fcmovnbe
call
pop
adc
and
xor
adc
in
hlt
aam
movsb
mov
test
je
inc
push
push
and
add
adc
in
hlt
aam
movsb
mov
test
repz
push
sbb
mov
sbb
cwtl
mov
cwtl
cmp
iret
push
notb
mov
pop
and
enter
jne
pop
mov
fcomp
jg
sub
adc
iret
mov
mov
or
mov
push
mov
jle
sub
dec
mov
faddl
mov
mov
push
xchg
add
add
adc
repnz
inc
inc
mov
cli
fnstsw
pop
sub
xchg
fs
adc
fildll
adc
out
pusha
add
sti
adc
inc
sub
xchg
mov
xchg
cmp
xor
push
cmpl
in
lods
outsl
pop
shl
ret
jmp
mov
mov
inc
int
adc
cmp
push
shl
and
push
ficomps
push
push
cmp
mov
xorl
jp
mov
mov
mov
jne
jo
lods
jp
outsl
cmpsb
xor
cmp
adc
fidivrs
pop
sub
std
pop
ret
mov
xchg
inc
xchg
inc
push
adc
stc
into
in
ret
aam
cld
cmpsb
jmp
jle
iret
jnp
push
mov
outsl
cs
cltd
inc
enter
ds
xor
add
jle
ss
mov
sub
enter
in
fdivrl
add
cli
nop
fisttpll
jb
mov
rol
pop
pop
aas
data16
pop
sbb
xor
and
jecxz
in
push
outsb
andb
cwtl
inc
dec
cmpxchg
bound
xor
enter
xchg
cmp
sub
aam
mov
sub
push
jmp
in
add
mov
lock
push
rcrb
push
dec
cmp
fwait
dec
or
mov
imul
aas
ja
stc
scas
loope
lret
lahf
ljmp
cmp
inc
xchg
jb
movsl
sub
insb
pop
lods
in
ret
fwait
push
fwait
sbb
jo
lcall
faddl
and
xchg
adc
aad
dec
jp
int3
hlt
adc
inc
dec
pop
push
rorl
sahf
bound
dec
dec
test
test
pop
sahf
pop
mov
hlt
mov
or
xchg
mov
aam
mov
sbb
js
fwait
mov
imulb
pop
arpl
cmp
hlt
push
les
sub
test
mov
mov
pop
mov
ss
adc
orl
rorl
push
cmp
jmp
jns
sub
pop
mov
push
and
push
rcrl
pop
hlt
or
enter
sub
sbb
add
jae
cli
cmc
outsl
and
xchg
subl
rorb
adc
jo
ljmp
dec
xor
test
in
mov
inc
fwait
lahf
sbb
sti
push
push
mov
std
xchg
sbb
and
xchg
push
js
mov
mov
xor
mov
push
push
enter
cmc
mov
sub
stc
xchg
out
mov
cmp
ds
lret
out
inc
jnp
pop
shlb
mov
insl
xchg
dec
mov
xlat
test
fdivp
cli
testb
xchg
stos
push
loop
xor
dec
or
outsb
aaa
push
dec
jae
mov
clc
mov
fsubr
mov
in
jns
xchg
xor
cmc
sbb
outsl
ljmp
insb
sarl
sarb
mov
rorl
test
sbb
cmp
sahf
pop
push
or
arpl
outsl
mov
lcall
jb
xchg
or
out
sbb
lret
xchg
cwtl
shr
push
sub
lods
int
cmc
push
adc
repz
xor
jno
adc
sbb
mov
daa
pop
and
lahf
mov
fimuls
jnp
xor
insb
push
mov
sbb
call
fistpl
lret
sahf
dec
js
test
mov
sbb
in
mov
and
lcall
dec
fidivrl
out
fldenv
fucom
cld
sbb
es
jo
insb
les
ja
test
push
jg
and
jecxz
add
and
lret
push
outsl
jmp
mov
xchg
cmp
insb
in
nop
popf
ss
cld
pop
loop
fldt
jle
shl
push
orb
sub
pop
mov
add
mov
cmp
add
mov
cmpsl
bound
pop
xchg
mov
xchg
pushf
mov
pop
push
lret
fstps
cmp
pop
mov
sub
mov
in
mov
mov
push
pop
fsubl
cmp
push
out
pop
scas
mov
aad
je
cmp
orl
mov
adc
xchg
in
sub
add
enter
xor
ss
cmp
outsl
mov
stos
sub
test
dec
or
pop
xor
and
push
sbb
ljmp
test
clc
jno
jae
push
idivl
int3
and
ja
mov
pushf
pop
add
mov
insl
sbb
stc
sti
fisubrs
into
cmp
cld
out
outsb
xchg
mov
shl
push
cmp
xor
lahf
dec
xor
mov
addr16
cmpb
jnp
testl
shlb
pop
imul
int3
stos
scas
movsb
lahf
int
cmp
pop
and
xor
int3
idivb
lock
mov
or
push
sbb
iret
pop
dec
fiaddl
jo
cmp
sbb
je
xchg
sbb
jae
mov
push
stc
and
out
xchg
push
jne
insb
mov
mov
int
fldcw
xchg
das
pushf
je
popf
push
movb
xchg
sub
aas
push
inc
xchg
and
jp
imul
mov
push
xchg
xor
imul
jb
sub
jae
movsb
push
cmp
pop
dec
lock
jbe
lds
jmp
lock
dec
push
mov
test
in
cmpsb
push
shrb
jnp
xor
sub
outsb
push
enter
mov
in
jecxz
or
js
pop
adc
ss
ds
lret
fmulp
jbe
mov
adc
testb
mov
lcall
mov
out
leave
bound
clc
outsb
inc
ds
cmp
nop
mov
push
mov
push
leave
sbb
mov
dec
xor
stos
push
int3
dec
fwait
dec
dec
jno
pop
push
cmp
cmpsl
scas
decl
fidivl
adc
mov
dec
je
rolb
jge
stos
jno
add
mov
adc
add
imul
push
mov
xlat
addr16
pushf
xor
cmp
mov
icebp
pop
rol
sbb
aad
jbe
push
xor
enter
inc
aaa
xchg
outsl
inc
sub
pop
cmpsl
dec
fldenv
call
xor
sbb
add
cmp
imul
mov
enter
xorl
jno
xchg
outsb
jb
pusha
xor
xchg
jmp
sub
shl
pop
sub
sbb
push
jle
stc
add
mov
mov
or
push
scas
or
bound
mov
mov
bound
xchg
outsl
cmpsl
add
cmpsb
repz
mov
mov
mov
rorl
add
push
add
icebp
pop
pop
dec
mov
movsl
or
mov
xor
push
sub
or
cli
inc
adc
jp
in
mov
imul
dec
jl
cmpsb
popa
mov
mov
sub
ret
lods
mov
std
add
fsubs
stc
lea
dec
and
fdivrs
push
mov
pop
adc
mov
jae
shl
jg
stc
sbb
ret
cmp
imul
jl
cmp
leave
hlt
adc
and
add
lahf
cmpsb
fadd
les
jae
dec
pop
sbb
popa
stos
pop
fisttps
ss
cmp
in
cwtl
pop
inc
push
xchg
mov
cmp
fcomps
pop
pop
daa
daa
faddp
lret
pop
or
popf
lcall
rcll
lcall
in
and
cmpb
iret
sbb
add
pop
sub
leave
daa
ss
pop
mov
push
popf
call
lods
pop
mov
jmp
and
adc
js
test
ficompl
cmp
xor
js
test
sarl
daa
fistpl
push
iret
xor
stos
mov
mov
xchg
leave
in
jl
jno
push
mulb
push
lret
jne
enter
es
popf
aas
cmp
mov
shl
lock
mov
pop
fstl
fistpll
fidivrl
dec
aam
mov
negl
add
imul
pop
adc
ljmp
pop
dec
dec
int3
mov
pop
aas
add
in
scas
add
pop
popf
mov
fldt
mov
mov
addr16
pusha
pop
mov
bound
out
mov
lret
sbb
repnz
repnz
ss
pop
gs
cld
mov
mov
add
inc
ja
sahf
int
call
jne
and
xor
sub
jo
cli
inc
jge
and
cltd
dec
jecxz
mov
rorl
push
push
push
mov
sub
cmpsb
clc
push
mov
out
imul
add
push
nop
data16
ror
repnz
mov
push
cmp
je
je
inc
pop
push
pop
or
in
testl
cmp
or
adc
data16
mov
and
mov
sarl
cwtl
outsb
jne
inc
shrl
sarb
in
sbb
pop
insb
pop
packssdw
mov
loop
mov
imul
sbb
ss
sarl
mov
jl
repnz
or
sub
xchg
mov
repz
repz
jno
mov
mov
test
mov
cmpsl
push
out
mov
in
push
stos
movsl
push
negb
mov
push
scas
and
in
into
loope
stos
mov
test
fbld
inc
jp
jmp
push
dec
movsb
shll
fnsave
add
add
xchg
popf
xchg
out
clc
je
imul
movsb
mov
cli
outsb
inc
jmp
roll
push
sub
push
ret
lcall
add
adc
sub
jp
xchg
adc
pop
jp
repnz
shlb
test
inc
pop
ljmp
jp
cmp
jmp
cli
push
pop
call
iret
mov
andb
sub
jo
push
loope
mov
mov
shll
repz
jecxz
jns
mov
leave
cs
mov
cmp
jg
ljmpw
dec
loop
mov
stos
shrl
rcrl
inc
cli
loopne
cld
lahf
imul
nop
push
lcall
sbb
xor
adc
out
loop
stc
mov
orb
add
scas
loopne
sar
leave
xor
rclb
xchg
rclb
add
mov
test
sub
out
xchg
ljmp
and
hlt
push
lret
mov
in
lret
mov
cmc
out
pop
push
out
stos
imul
aaa
pop
xor
jle
popa
xlat
enter
call
loop
push
in
pop
mov
gs
sarl
out
aam
es
xchg
leave
xor
dec
push
mov
sarb
cmc
outsb
shlb
dec
mov
ret
loope
in
sbb
out
push
sbb
or
mov
sbb
cmpsb
pushf
pop
push
pop
lcall
insb
push
dec
sub
les
xchg
mov
xchg
adc
add
scas
lret
jbe
enter
imull
outsl
jo
enter
mov
stc
mov
sahf
jg
aas
into
ss
ds
aaa
jmp
pop
pushf
mov
or
jnp
add
jmp
dec
daa
push
xchg
imul
leave
add
popf
lret
xorb
mov
dec
cmp
loope
or
sbb
pop
adc
sti
push
std
outsl
fisttps
dec
cmp
jl
or
and
xor
xchg
clc
outsb
add
mov
pop
adc
dec
sbb
add
pop
int
mov
loop
sti
xchg
xor
mov
dec
addr16
aam
inc
lahf
bswap
or
fisubrl
nop
mov
lods
pushf
xorl
inc
mov
rsqrtps
icebp
aas
add
pop
enter
push
jo
push
add
lret
mov
lods
pop
loop
cmc
pop
sbb
and
and
or
inc
pop
inc
push
dec
ds
mov
inc
mov
adc
adc
mov
push
add
call
xor
test
scas
push
push
rcrl
adc
int3
iret
dec
or
incb
testb
add
push
push
les
jle
mov
mov
call
cmp
jo
adc
lcall
sub
xor
daa
sbb
push
xor
mov
dec
addr16
stos
scas
lods
fadd
hlt
lret
imul
popf
dec
test
push
lods
cltd
mov
pop
das
aam
cli
nop
dec
mov
push
cwtl
ficoml
xchg
aas
add
jbe
insb
sahf
xchg
ds
aad
inc
add
outsl
ret
mov
sub
js
or
inc
lock
and
test
xor
cmc
sub
es
out
loope
push
clc
mov
cli
arpl
fidivrs
mov
xor
push
sub
leave
jb
mov
xchg
adcl
cmp
popa
mov
push
clc
inc
rcrl
xchg
and
sbb
sahf
adc
rep
mov
inc
fwait
xor
repnz
or
and
pop
mov
jp
ds
in
ror
dec
cmp
idivl
cmc
insb
jb
lods
cwtl
add
leave
adc
lcall
movsb
dec
jb
cmpsl
fwait
cmpsb
jmp
push
sbb
cmp
xchg
lret
dec
mov
pop
inc
mov
inc
or
mov
lods
jbe
xchg
jl
int3
push
cmpsl
mov
mov
inc
js
inc
push
outsb
add
clc
adc
pushf
push
mov
mov
sbb
pushf
jbe
mov
add
sub
rclb
push
pop
adc
sub
popa
in
sub
pop
gs
xchg
adc
lods
mov
push
scas
std
outsl
dec
and
popf
add
push
out
lea
int
sahf
and
arpl
mov
sub
pop
pop
ja
inc
add
popa
cmp
push
sbb
inc
push
fmulp
mov
cmpb
cmp
sbb
mov
mov
loope
cmpsb
mov
ret
pop
mov
stos
add
icebp
mov
sbb
sti
int
pop
inc
pop
pop
mov
test
add
test
push
jg
lahf
sahf
jne
scas
data16
pop
pop
push
fbstp
popa
push
fsub
je
and
jnp
les
scas
sbb
scas
cmpl
es
mov
push
shrl
push
jp
mov
leave
out
fistps
add
ljmp
dec
and
inc
xor
xchg
sbb
bound
addb
adc
test
add
push
cmp
sbb
push
lods
out
mov
lret
ret
lret
xchg
mov
mov
push
test
adc
dec
mov
dec
ret
scas
inc
out
pop
sbb
repnz
xchg
jmp
xor
rcll
jns
fidivs
out
hlt
ret
out
je
aas
jge
sbb
or
mov
fcmovne
xlat
jbe
pusha
push
std
fisttpll
fsubs
jg
and
add
icebp
push
pop
out
lahf
mov
in
push
jp
inc
stc
jge
sub
pop
bound
add
hlt
scas
cltd
mov
push
loopne
jne
push
in
jns
stc
mov
and
stos
int3
xchg
popf
cmp
mov
cltd
aaa
push
scas
adc
lds
icebp
lds
push
rclb
fmull
mov
mov
xor
daa
lahf
sub
stc
or
fs
xchg
cmp
mov
or
sbb
in
stos
jae
aad
fildl
add
pop
jns
repnz
sub
jl
out
out
xor
adc
data16
repnz
mov
movsl
je
push
cmp
test
cmp
pop
sub
add
sbb
repz
sub
sbb
in
and
mov
pop
push
lods
sbb
addb
out
sub
xchg
mov
fstp
sub
std
orl
enter
aam
inc
lds
popf
and
xor
mov
cltd
push
jne
jbe
sub
es
push
mov
dec
adc
sbb
addl
mov
hlt
push
rclb
mov
mov
mov
and
das
mov
push
cwtl
shr
sahf
jns
ret
mov
push
inc
sub
mov
or
lret
add
mov
das
ljmp
sarl
pop
mov
adc
movsl
popa
nop
xor
xchg
add
mov
outsl
xor
aas
es
mov
movsb
sub
mov
lret
mov
fdivrl
and
sarb
jge
mov
adc
ret
in
clc
fnstenv
pop
xor
out
inc
movsb
xchg
mov
xchg
pushf
xchg
sub
btr
and
push
xlat
add
mov
int3
les
hlt
or
lods
jle
bound
std
iret
inc
rolb
shll
mov
into
mov
sub
or
out
cs
xchg
mov
scas
push
and
mov
insb
cmp
stc
xor
int
fst
sbb
cmpsb
inc
std
add
sub
pop
into
mov
cmp
fwait
jo
fldl
and
add
das
mov
dec
rorb
lret
jns
add
popf
rcr
stos
loopne
push
jle,pn
lea
andb
int
mulb
mov
dec
sub
inc
leave
loopne
sbb
int
rcr
mov
jno
lret
jge
dec
pop
adc
or
cmp
les
jg
ja
mulb
dec
mov
xchg
push
adc
les
mov
pop
lods
mov
ret
inc
cmp
xor
in
mul
call
jge
xlat
xchg
jbe
loope
push
xchg
cmp
out
shl
stos
adc
imul
mov
in
int3
aas
aas
mov
xlat
pop
add
test
jmp
out
add
and
mov
pop
inc
dec
aam
test
lret
lods
push
inc
pop
faddl
sbb
mov
lea
xor
cmpsb
sub
or
cmp
addr16
sub
lcall
fsubl
dec
lret
ret
dec
imul
inc
push
adc
notl
int3
push
jecxz
push
int
pop
mov
jns
pop
out
jl
lods
adcb
push
notb
test
jl
adc
lods
and
or
sbb
xchg
stos
test
dec
fbld
testl
cli
add
xchg
jle
dec
lret
dec
mov
dec
repz
lods
daa
test
into
fldt
aas
pusha
out
fiadds
jg
out
xlat
out
jae
jg
pop
sbb
scas
xchg
sub
out
xchg
sbb
aas
pop
scas
loopne
rolb
cwtl
hlt
cwtl
movsl
xchg
cmp
lahf
mov
inc
cltd
add
dec
mov
mov
das
push
add
insb
jb
jns
and
test
clc
stos
jo
jge
dec
sahf
shrb
in
jle
sub
aaa
jno
adc
jl
jns
mov
fcomps
push
jmp
call
mov
test
enter
clc
jb
pop
pop
sar
ss
js
lret
scas
pop
pop
pop
loop
enter
inc
add
sub
mov
mov
pop
xchg
cld
mov
sbb
pop
jbe
clc
gs
cmpl
je
imul
push
call
les
fistl
das
dec
les
aad
flds
clc
daa
test
dec
add
dec
cmp
xchg
mov
dec
out
loop
push
mov
inc
dec
sahf
add
sbb
jge
inc
std
or
cmc
lds
dec
sub
dec
adc
xchg
dec
and
adc
imul
lret
inc
cwtl
or
jge
add
fcoms
daa
push
mov
stos
loopne
lcall
add
sahf
push
mov
roll
mov
xchg
xor
shlb
or
scas
imul
mov
shrl
lea
test
cltd
mov
mov
ss
sub
add
addr16
test
stc
cmp
push
push
mov
mov
arpl
je
stos
push
push
and
add
adc
in
hlt
aam
movsb
mov
test
je
inc
push
push
and
add
adc
in
hlt
aam
movsb
mov
test
je
inc
push
push
and
add
adc
in
hlt
aad
movsb
mov
test
je
inc
inc
push
push
and
add
adc
in
pop
outsl
aad
shrb
imul
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
testb
arpl
jae
dec
aam
clc
add
push
jecxz
repz
push
mov
out
arpl
jae
add
dec
jbe
rclw
inc
repz
es
push
mov
out
arpl
jae
add
xor
inc
lock
dec
les
push
sbb
or
push
popf
test
mov
fildll
xchg
inc
sub
in
mov
aas
cmp
dec
add
cmp
idivb
pop
inc
mov
out
pop
rorl
mov
cmp
rcr
data16
xor
mov
pop
xchg
jae
push
or
push
out
mov
mov
xchg
sti
cmp
sub
addr16
leave
andl
test
push
add
xor
out
mov
adc
sbb
mull
fsts
or
sbb
adc
add
sub
subb
stos
rclb
cmpsb
cmp
push
arpl
jae
add
xor
rclw
inc
repz
push
mov
xchg
adc
data16
repnz
mov
xchg
shlb
jne
inc
std
xchg
xorl
push
stos
jae
outsl
jecxz
out
dec
aam
adc
inc
xchg
aaa
in
dec
xchg
jp
jae
xchg
pop
out
mov
sub
xchg
jbe
rclw
inc
repz
push
mov
out
arpl
jae
add
xor
rclw
inc
repz
push
mov
ret
cmp
jmp
mov
fimull
enter
es
icebp
enter
movb
nop
mov
xchg
or
sub
sub
add
cmp
push
call
scas
dec
cmp
adc
call
add
nop
in
jg
sub
xchg
add
movsb
sahf
jg
insl
dec
sbb
mov
jecxz
push
mov
out
aaa
fimull
pop
jl
stc
inc
in
jbe
scas
and
test
fwait
cmp
rolb
rcr
and
leave
pop
ja
push
jns
mov
pop
dec
inc
push
dec
push
or
inc
fxch
insw
push
fwait
xor
loopne
push
cmp
out
test
mov
xorl
dec
jne
inc
dec
push
rcrl
add
or
movsl
sub
and
lret
mov
pop
or
addr16
pushf
cmp
repz
out
cmp
jg
xorl
pop
adc
xchg
sbb
pop
sti
out
cmp
lea
lea
jns
lods
lret
shlb
addr16
fwait
ret
fisubs
shll
loopne
fwait
popl
pushf
dec
jbe
dec
in
jno
mov
fsubl
adc
inc
jmp
mov
mov
pusha
xlat
imul
push
movsb
mov
adc
popf
add
fcomps
jp
stc
and
ja
pop
push
xchg
aam
sbb
cmp
and
jg
mov
push
shl
test
dec
aam
in
jnp
jae
aaa
loope
ret
or
dec
xor
stos
ror
cmp
arpl
es
xchg
pop
loop
xor
arpl
fwait
push
mov
sub
cmp
shlb
sbb
or
or
jp
or
cmp
in
icebp
ret
mov
aas
mov
fwait
les
mov
ds
lock
call
add
arpl
mov
ret
push
dec
or
add
inc
aas
jmp
push
jecxz
int3
fabs
push
xchg
rcll
or
in
xor
je
xchg
mov
out
sub
dec
movsb
enter
out
mov
adc
push
or
pop
rcr
xchg
jg
pop
aaa
fsubs
or
mov
insb
scas
fnsave
insl
or
das
rorb
sbb
andl
sub
hlt
es
loope
mov
dec
adc
or
sbbl
movsb
ja
push
negl
test
in
mov
test
xchg
sbb
add
fwait
loopne
fnstsw
je
inc
je
pusha
testb
and
and
adc
pushf
lea
int
clc
ret
add
popa
mov
sub
out
sub
fnsave
or
push
adc
xlat
pusha
pop
inc
and
movsl
in
cmpsl
jmp
test
stc
callw
cmpl
dec
or
dec
and
fidivl
xchg
push
stos
jb
cli
aad
add
jge
xor
lods
mov
popa
push
in
fyl2xp1
faddl
stos
sbb
lods
cmc
sub
or
ffree
push
cmp
iret
pop
dec
mov
ds
movsl
mov
pop
or
movsb
pop
pop
imul
mov
loop
stos
fcoms
fisubs
ss
pop
sahf
inc
or
push
pop
mov
dec
cmpl
insb
mov
mov
adc
mov
sub
xchg
mov
sbb
outsb
daa
shrb
hlt
mov
add
mov
aam
sbb
xchg
out
or
jge
test
mov
jmp
stc
adc
out
push
mov
mov
jns
inc
in
mov
dec
mov
stos
out
jnp
mov
aas
popa
daa
add
mov
rorl
subl
cwtl
add
addr16
cltd
inc
das
cmp
mov
push
push
dec
cmpsl
repnz
xor
xchg
xchg
and
mov
in
bound
es
mov
cmpsb
iret
je
jo
test
add
pop
mov
pop
test
jecxz
lret
or
jmp
mov
mov
subl
or
mov
add
dec
pop
mov
fcmove
mov
mov
or
fdivrs
out
je
mov
jl
xorl
push
mov
test
and
mov
push
lea
xor
push
icebp
adc
push
mov
dec
es
mov
rclb
pop
test
mov
shll
xchg
push
dec
jno
outsl
sbb
and
inc
insb
aas
sahf
repz
lret
push
cmp
ror
movsb
ret
imul
xor
and
and
push
and
xor
out
in
ja
xchg
push
sar
pop
in
shll
xchg
xor
or
imul
sbb
xchg
push
push
lods
mov
icebp
fisttpll
jnp
jecxz
jb
push
icebp
push
push
inc
neg
lret
aaa
gs
ret
push
jo
fsubs
pop
cmp
in
xor
inc
pop
pop
ret
imul
dec
jp
ljmp
cmpsl
in
loop
push
loope
sahf
out
xchg
mov
jae
fsubrs
sub
pop
dec
js
jmp
cld
inc
lcall
xchg
push
shrb
jge
or
mov
cmp
out
jge
in
mov
fwait
or
popf
out
mov
popf
imul
mov
jl
mov
cwtl
mov
sub
sbb
xchg
or
es
stos
inc
dec
hlt
mov
hlt
push
jo
lcall
aam
pop
test
push
cmpsl
repz
mov
mov
jge
or
or
push
movsb
cltd
ret
int
ja
cwtl
xor
dec
jle
sbb
xchg
out
ds
or
adc
xchg
inc
lea
in
jo
mov
mov
cld
cmc
push
addr16
nop
inc
or
xor
outsb
enter
sub
pop
test
pop
or
fsubrs
xor
or
cmpsl
and
xchg
into
push
out
stc
test
and
mov
in
and
sub
and
in
sbb
xchg
ret
leave
cmc
pop
faddl
mov
add
cmp
push
std
movsb
outsl
cmpb
and
addr16
sub
repnz
add
pop
scas
ss
sbbb
icebp
call
jecxz
jbe
pop
mov
dec
and
inc
sbb
lcall
push
test
push
push
and
ds
push
jle
mov
sub
rclb
lret
fildl
jne
push
pop
repnz
imul
rol
add
mov
push
or
pop
mov
aam
pusha
ja
push
aam
shl
imul
movsb
push
cld
loop
mov
pop
inc
insl
mov
int3
loop
mov
std
orb
cwtl
cmp
or
mov
xor
cmp
adc
push
xchg
out
dec
mov
into
mov
add
xchg
mov
pusha
push
jbe
iret
shll
mov
push
push
sbb
ror
rcr
pop
adc
add
test
and
fmulp
jl
mov
xor
inc
pusha
outsb
das
xchg
fldcw
push
mov
incb
sbb
dec
lods
or
ret
sbb
arpl
stos
scas
mov
movsl
inc
push
jg
jno
mov
dec
adc
adc
popa
in
leave
lcall
fstpt
sbb
xor
clc
insl
rolb
lret
lret
rcl
sub
sbb
inc
sbb
in
inc
jmp
loopne
sub
push
cmp
stos
pop
push
sahf
xor
ret
lret
or
add
fdivrs
mov
test
ret
negl
mov
fistl
das
xchg
xor
stos
insb
ret
jge
add
pop
sbb
mov
push
mov
out
andb
in
rorb
add
dec
inc
cltd
out
movsl
inc
in
aad
sub
mov
mov
jns
leave
push
out
jbe,pn
outsl
stc
inc
testl
xor
xchg
pop
repnz
push
and
and
ret
movsb
pop
into
jo
push
push
divl
push
cmp
jnp
mov
call
mov
xor
out
sbb
dec
ret
and
adc
xchg
idivl
sub
out
out
inc
loop
lret
out
fistps
mov
xchg
idiv
add
cltd
mov
test
roll
xlat
jge
sti
lcall
xchg
dec
cmp
dec
xchg
or
rcll
ss
xor
jge
xchg
adc
adc
test
aam
mov
jae
sbb
mov
cmp
adc
or
dec
out
aas
xor
pop
fiaddl
cmc
jecxz
outsl
sbb
pop
sub
adc
int
pop
fwait
ljmp
movsl
gs
dec
test
lds
mov
and
fidivrs
and
cs
fisubrl
shrb
or
sbb
xchg
or
incl
aas
movsl
je
sti
pop
xchg
push
and
sub
hlt
pop
iret
enter
adc
call
loop
jnp
dec
sub
lds
dec
insb
inc
test
add
std
cltd
ja
xchg
mov
and
movsb
in
and
or
push
inc
out
xor
jbe
icebp
nop
or
pop
mov
sbb
mov
jp
push
outsl
sbb
or
fs
dec
rorl
in
cmpsb
add
pop
jno
inc
sub
arpl
xchg
mov
mov
pop
xor
sub
in
jae
mov
mov
ss
jne
mov
xlat
adc
and
sbb
cmp
test
xchg
into
adc
out
ja
xor
call
imul
dec
jge
rcrb
push
mov
push
inc
mov
in
inc
jne
mov
lods
add
es
daa
shl
inc
clc
sub
mov
sub
shl
adc
pop
scas
push
in
hlt
mov
cmp
xchg
dec
cmpsl
fisttpll
sub
adc
cmpb
insb
mov
xchg
xor
fcmovbe
xchg
into
mov
pop
gs
insl
xor
jecxz
jo
sti
sbb
sub
subl
xor
daa
fs
sahf
mov
xor
mov
push
xchg
adc
in
mov
test
outsb
loopne
arpl
lret
push
inc
add
jo
pushf
xchg
jns
sti
adc
cmp
mov
loop
rorb
or
dec
stc
push
sbbl
hlt
cmp
xchg
sub
cmpl
pop
pusha
add
push
bnd
and
lea
cmpsl
jge
sub
add
or
push
xor
scas
js
scas
fstpt
cmp
xchg
and
fsubrs
mov
jmp
cmp
int3
and
xlat
imul
out
push
pop
push
std
push
add
add
or
or
mov
mov
ret
pop
cs
sahf
mov
push
xchg
stos
jge
cli
orl
pop
jae
xchg
pop
mov
mov
xchg
imul
pushf
loopne
ret
mov
nop
push
jp
inc
leave
aaa
sub
std
mov
scas
inc
pop
rcll
cmpsl
inc
in
int3
out
jb
mov
inc
scas
jo
inc
in
inc
xchg
loopne
cld
arpl
stos
test
xor
inc
cmp
cmc
leave
out
addr16
rorb
pusha
jge
movsl
or
aaa
out
popf
ret
fs
ret
jmp
push
leave
lods
inc
xchg
push
std
jl
xlat
and
push
mov
das
adc
mov
ds
mov
lds
pop
sahf
ret
sbb
jmp
sbb
aad
fs
hlt
xchg
repnz
repnz
xchg
mov
dec
dec
jge
add
cmpsb
push
std
les
jg
movsl
mov
lea
and
pop
hlt
mov
push
mov
cmp
sbb
scas
addb
daa
enter
push
orl
xlat
fmull
cmc
data16
js
mov
jge
cmpsb
cmp
test
stc
insb
cmp
or
inc
sti
bound
fs
leave
das
incl
movhps
sub
xchg
sbb
in
idivl
dec
cmpsl
cli
fdivrs
outsb
inc
clc
mov
xlat
pop
scas
fcompl
xor
repnz
lret
push
xchg
mov
or
xchg
jmp
dec
in
fnstenv
mov
stos
jg
enter
and
cwtl
in
out
int3
out
cltd
mov
out
sti
sub
sub
test
jo
push
dec
out
cmp
mov
cmc
sbb
add
outsb
in
std
sub
decl
pop
mov
stos
ja
mov
lret
scas
push
lahf
sub
mov
and
hlt
push
xor
lods
jns
fld
loope
and
mov
das
or
insl
inc
mov
xor
rorl
out
jmp
jmp
aaa
lods
mov
cmp
iret
sbb
xchg
stos
cltd
lret
int3
and
fistpll
imull
push
jnp
fistps
dec
sub
movsl
adc
stc
add
xlat
inc
dec
xchg
aas
and
sub
jo
movsb
addr16
cmp
insb
ret
add
and
mov
sub
mov
int3
add
leave
jb
jge
push
ss
xor
dec
jg
push
test
mov
dec
aam
dec
lret
loop
pop
pop
pushf
sbb
cmp
xchg
jmpw
xor
imul
idivl
push
add
sbb
cmp
xor
scas
pop
outsb
fildll
bswap
cmp
test
test
push
and
xchg
movsl
shlb
mov
sub
mov
hlt
test
pop
sub
add
shll
aam
aas
call
push
imul
adc
inc
outsl
and
scas
lods
mov
subl
mov
mov
scas
cmpb
andl
jecxz
notl
jno
cmc
lods
popf
push
xor
fcom
cmp
sahf
jp
lods
sbb
inc
repz
fs
mov
cmp
shlb
adc
push
or
push
dec
add
cltd
mov
add
je
rcll
test
insb
xchg
cmp
jnp
and
adc
dec
xchg
test
mov
pusha
inc
insb
cld
push
add
stc
iret
and
aad
dec
pop
mov
ds
jecxz
loopne
inc
xor
arpl
rcr
clc
subl
test
sar
int3
inc
xchg
stos
test
ljmp
aad
lret
push
in
mov
pop
psubw
xchg
lea
movsl
pop
xor
add
cmp
push
movsb
jno
dec
mov
mov
popa
xchg
mov
jl
aad
pushf
xor
sub
xchg
fpatan
jmp
data16
cmpsb
subb
xor
outsl
aam
sti
pop
rclb
pop
aad
aam
ljmp
xorb
pusha
ljmp
mov
mov
xchg
shrb
mulb
fwait
pop
lds
push
jae
repz
shrl
adc
int3
cli
adc
push
dec
stos
aam
shlb
pop
icebp
cmpsb
testl
test
xchg
lods
add
ret
dec
std
int
jecxz
push
and
mov
in
aad
adc
push
test
pop
cld
je
jae
pusha
fldt
mov
sbbl
ljmp
movsb
enter
shl
outsl
cmp
cmp
cs
cltd
fisubrl
mov
test
push
pop
ret
mov
jecxz
cmp
inc
xor
jmp
push
dec
sub
pop
pushf
push
out
mov
sarl
pusha
dec
sbb
jno
push
test
fsubrl
cmpb
cwtl
dec
sub
xchg
xor
ja
xor
mov
stos
cmp
insl
and
addl
sbb
dec
mov
pop
sub
inc
push
xchg
dec
fstpl
mov
jae
aas
popa
sbb
dec
mov
gs
dec
mov
jecxz
call
mov
jbe
outsl
adc
add
hlt
dec
sarl
rolb
stc
mov
cmpsl
scas
pop
in
aam
insl
pop
mov
pushf
add
dec
stc
movsb
insb
push
lcall
mov
sub
jge,pt
cmp
dec
jl
cmpsl
mov
shrb
inc
sub
int3
inc
mov
sub
cs
xchg
ret
cltd
mov
adc
mov
adc
popf
inc
enter
ljmp
adcl
iret
sub
push
fs
mov
mov
ds
aas
lar
dec
aad
jmp
push
inc
inc
sbb
xor
jle
or
fcmovne
test
mov
xchg
lods
lahf
push
test
jne
out
xor
jecxz
dec
push
je
dec
js
lds
xlat
sub
pop
popf
or
sub
call
call
int
test
pusha
inc
lret
movsb
cmpsb
and
cli
sti
sbb
mov
lcall
call
fwait
jno
stos
xor
movsl
out
inc
add
scas
push
gs
fsubr
mov
sub
cwtl
inc
fst
fdivrs
dec
test
gs
and
clc
jmp
pop
adc
and
sarl
out
outsb
xchg
out
popa
pop
add
and
or
mov
inc
mov
mov
test
loop
outsl
mov
mov
xchg
jmp
pusha
out
inc
push
mov
push
scas
mov
add
fbstp
mov
aam
jg
adcb
inc
int
imul
jl
inc
push
cli
and
sbb
mov
pop
pop
cli
lret
int3
pop
fnsave
enter
inc
out
les
mov
or
jns
xchg
xchg
push
test
push
adc
push
xor
pusha
xor
pop
cld
adcb
ja
outsb
dec
lds
mov
xorb
push
mov
sbb
push
js
and
cld
dec
sub
pop
add
dec
mov
adcb
fldl
sbb
data16
ret
lds
mov
outsl
sub
fsubl
adc
fildl
push
loopne
adc
movsl
add
loope
mov
inc
dec
arpl
gs
lahf
jl
lods
scas
xchg
enter
and
sub
in
sub
sub
mov
pop
mov
push
cmp
pop
rol
fisttpl
pop
filds
xor
fidivs
loope
pop
dec
repnz
rol
gs
and
inc
mov
inc
pop
add
mov
shll
pusha
xor
aad
xlat
push
pop
inc
or
or
push
cwtl
scas
add
jno
dec
jbe
or
call
xorb
mov
inc
lcall
aaa
sbb
jbe
jle
fwait
pop
mov
push
inc
adc
xchg
ficoms
lcall
pop
or
lods
repz
mov
add
cmp
push
hlt
rcll
iret
sbb
mov
cmp
fildll
fdivrl
in
rcrl
xor
inc
mov
lret
xchg
mov
leave
cmc
jne
mov
jecxz
pop
popf
fwait
in
cltd
roll
clc
movsl
loopne
icebp
push
jp
das
arpl
int3
gs
xor
repnz
bound
rorb
out
adc
cmp
xchg
push
xchg
mov
sub
mov
ret
test
rcr
sar
cwtl
orb
shl
cmc
ss
ja
repnz
inc
jge
mov
add
fcos
arpl
push
test
mov
lods
mov
mov
arpl
sbb
adc
push
push
mov
dec
adc
fcoml
jg
xchg
jecxz
fs
dec
adc
ror
imul
cmp
aam
and
xor
pop
dec
insb
in
push
cmp
cmp
jl
movsl
test
adc
add
dec
gs
jbe
int3
fidivrl
adc
popa
sub
loope
add
imul
outsb
mov
test
popa
jne
or
or
mov
adc
push
dec
add
daa
xor
test
iret
adc
std
je
mov
call
xor
mov
sarl
push
shll
fucom
orl
iret
shlb
bound
pop
popf
test
ja
xor
ret
push
or
mov
push
out
inc
movsl
add
mov
inc
cltd
jecxz
shlb
test
pushf
push
pop
clc
lock
fs
inc
fstpl
jl
xchg
aas
sbb
push
push
sub
jmp
sub
inc
add
mov
inc
or
imul
pop
insb
aaa
push
xchg
push
sahf
aam
sbb
test
test
mov
mov
push
xchg
pop
push
fs
add
add
or
xor
test
dec
mov
mov
incb
in
addb
or
arpl
jae
add
xor
rclw
inc
repz
push
mov
out
arpl
jae
add
xor
rclw
inc
repz
push
mov
push
push
arpl
jae
add
xor
rclw
inc
repz
push
mov
out
arpl
jae
add
xor
data16
jecxz
test
push
insb
pop
jbe
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
insb
mov
pop
in
cwtl
rcll
jle
adc
cld
fsubr
lods
pushf
mov
lods
insb
pop
jl
dec
jl
insb
sub
cmp
or
sbb
cld
fdivr
in
int3
cld
shr
lods
repz
into
gs
push
aam
outsb
xor
rcrb
cmc
add
scas
xchg
mov
shl
ror
lret
lods
add
or
cmp
cmp
int
fcomi
push
pop
jbe
test
stc
lods
repnz
xlat
sbbl
loopne
push
sbb
mov
stc
aad
xor
dec
mov
orb
sbb
dec
mov
cmpsl
mov
jno
popa
lods
mov
pushf
mov
test
rcrl
shll
std
pushf
stc
leave
and
push
popf
mov
cmp
icebp
movsb
shrl
jmp
inc
xor
sub
cmp
int
sub
push
iret
mov
push
test
push
rcrl
jl
rclb
fdivl
mov
mov
jmp
mov
gs
cmp
or
out
lods
cmc
pop
in
aam
lds
mov
sbb
sub
push
sbb
in
lcall
lods
repz
std
icebp
int
sbb
dec
inc
jae
aas
or
dec
inc
scas
mov
popf
mov
clc
or
adc
and
pcmpgtb
or
cmp
sub
fdivr
int3
int3
cld
fsubr
lods
pushf
mov
lods
insb
pop
jl
dec
jl
insb
sub
cmp
or
sbb
in
fdivr
int3
int3
cld
fsubr
lods
pushf
mov
lods
insb
pop
push
repz
inc
inc
test
outsb
dec
and
vpcomq
ret
push
xor
push
inc
dec
sbb
xlat
sti
mov
or
shll
scas
bound
outsb
mov
add
xchg
jnp
es
adc
sub
or
cmc
sbb
call
cmpsl
fadds
sbb
jno
sbb
imul
sti
les
fsubrl
adc
push
push
push
not
dec
out
jne
push
stc
ficoml
mov
add
add
cmp
adc
xor
hlt
sbb
or
ljmp
icebp
or
push
jmp
std
mov
sbb
inc
sub
fsubrs
mov
loop
hlt
ljmp
mov
push
pop
xor
in
xor
dec
int
ret
roll
add
fs
test
outsl
dec
ds
ret
scas
repz
loope
push
pop
imul
loopne
push
adc
jae
mov
xor
mov
push
jl
pop
subb
sub
sbb
int3
push
adc
mov
sbb
pop
sahf
test
jo,pt
pop
mov
adc
out
dec
loopne
mov
inc
ret
dec
insb
jo
mov
sub
daa
add
jge
nop
jae
mov
pop
ss
pop
pushf
cmp
stc
popa
push
xor
xchg
jmp
xchg
mov
ffree
sbb
adc
cld
cmc
xchg
test
inc
test
and
ret
in
lret
or
cmc
jbe
mov
sbb
sub
std
jne
add
andl
push
loopne
imul
inc
push
lods
or
cmp
fcmovne
add
cmp
mov
hlt
push
mov
enter
mov
xchg
push
jne
pop
pop
add
decb
mov
enter
mov
insl
add
lret
push
ficoml
add
sub
push
mov
cmp
andl
aas
and
add
lret
cmp
je
scas
dec
aaa
push
push
sub
popa
xchg
iret
jns
addr16
sbb
mov
cld
fcomp
push
shll
sub
inc
ret
cmp
test
xchg
mov
sbb
jg
cmp
push
add
mov
popf
mov
xor
cmp
or
jo
add
inc
adc
pop
mov
jecxz
pop
sahf
xor
mov
sbb
push
movsl
and
pop
mov
insl
mov
xchg
stos
imul
imul
or
jb
and
sarl
dec
cmpsl
jb
mov
or
fwait
sahf
movsb
js
pop
stos
mov
lods
jmp
out
add
lcall
repz
sub
imul
push
lods
addb
test
push
pop
adc
sbb
cmp
and
cmp
dec
or
out
or
in
dec
mov
and
fistpl
xchg
add
dec
idivl
dec
add
jge
jb
adc
inc
sub
outsb
pop
xor
ret
neg
roll
mov
iret
int3
push
mov
std
push
ret
push
sub
js
movl
or
sti
sarb
pop
sahf
adc
fwait
popf
add
cld
call
cmpsb
push
outsb
or
mov
icebp
mov
add
push
push
pop
ret
and
xchg
jnp
fadds
js
push
enter
loope
stos
mov
testl
hlt
lods
inc
or
cmp
inc
fmul
lods
push
imul
or
aas
adc
push
movsb
in
sbb
bound
mov
push
or
jne
push
push
outsl
mov
daa
adc
imul
xchg
xlat
mov
dec
sub
xchg
ljmp
out
cmp
mov
sbb
out
mov
lods
adc
add
subl
xchg
fwait
popf
sbb
out
add
inc
pop
mulb
test
test
and
sbb
mov
aas
cmp
xchg
fiaddl
sub
in
mov
jo
mov
lods
aaa
pop
mov
das
adc
and
inc
jb
lea
push
mov
mov
mov
aam
ret
mov
sub
movl
into
movl
sub
pushf
mov
xchg
lods
loope
xor
and
ljmp
push
and
mov
enter
inc
xchg
mov
sti
or
scas
pop
push
mov
mov
ljmp
mov
test
jne
data16
std
jmp
jmp
ret
mov
jp
jno
jg
sub
jmp
arpl
jnp
xor
push
and
inc
ret
mov
cltd
cwtl
and
xchg
inc
pop
and
cmp
aaa
andb
mov
out
stos
pop
jo
xchg
add
xor
popf
xchg
jle
cmp
into
cwtl
scas
inc
jns
lret
jae
decl
ss
sahf
fisttps
pop
hlt
dec
ret
inc
sub
jae
popa
cltd
test
pop
fstp
and
leave
imul
ret
adc
loop
pop
shr
imul
out
adc
aam
cmp
push
dec
js
cld
mov
or
pop
loop
std
in
mov
or
push
insl
stc
insb
out
xchg
iret
sbb
mov
test
fisubl
sub
jbe
sub
dec
xchg
insl
jecxz
sahf
mov
nop
dec
ret
jae
push
jbe
notb
mov
xchg
jge
das
fstl
lcall
cmp
mov
aam
dec
pop
pop
lock
int
aad
test
les
or
icebp
daa
stos
lret
sub
xor
aad
cmp
push
addb
aad
sub
gs
mov
xlat
cwtl
loop
adc
push
enter
sub
xchg
push
xchg
les
sbb
sahf
pushf
xlat
cmpsb
xor
imul
cmc
popf
aas
or
adc
iret
je
icebp
dec
test
leave
scas
fdivl
mov
std
xchg
ret
movl
inc
push
dec
mov
jbe
pop
push
test
movsb
mov
jmp
sbb
mov
push
pop
push
push
aam
and
push
das
adc
add
xor
mov
leave
iret
add
mov
cltd
std
lahf
std
adc
test
bound
add
jae
enter
jo
rcrb
mov
or
inc
jge
data16
in
fcomip
cmp
pop
sti
je
cmpsl
outsl
outsb
sub
push
sbb
mov
xor
fidivrs
scas
pop
data16
or
jae
mov
enter
pop
mov
aad
sub
mov
add
mov
inc
icebp
push
mov
jg
xchg
test
es
cmp
push
data16
inc
daa
xchg
mov
ud1
jnp
pop
mov
xsaveopt
mov
fcmovnb
and
cmp
push
cmpl
and
dec
mov
ds
insb
loopne
xchg
adc
xchg
mov
sub
test
inc
xchg
push
fs
popa
pop
jbe
cli
imul
jg
inc
add
xor
adc
pop
add
add
add
xor
xchg
xor
mov
add
pushf
inc
or
inc
sub
fs
jae
lods
sti
adc
add
stos
gs
lcall
push
aad
mov
repz
xchg
cmp
fimuls
adc
inc
dec
cmpsl
lea
add
push
leave
xlat
push
mov
jmp
test
pop
pop
inc
or
dec
rclb
fwait
int3
add
dec
mov
enter
or
push
fimull
inc
inc
inc
lock
outsb
push
in
xor
sbb
add
fmul
leave
sbb
daa
mov
mov
outsl
adc
icebp
ljmp
inc
jmp
jmp
and
jnp
add
lds
push
add
adc
and
mov
cmpsl
adc
and
mov
mul
dec
jmp
jns
test
dec
cltd
jae
outsl
test
push
xchg
je
sub
hlt
cmp
xor
mov
adc
es
xchg
inc
rorb
adc
mov
add
cmp
cmp
push
leave
mov
adc
adc
repz
bound
xchg
out
mov
sbb
push
lock
adc
std
push
dec
jge
nop
dec
adc
jae
mov
add
xor
mov
mov
std
out
fstpt
out
push
jo
xchg
lds
pop
popf
in
mov
cli
popa
outsl
push
push
sub
xor
pop
sahf
mov
pop
mov
jo
add
andl
jne
adc
xor
jb
mov
out
pop
adc
and
fisttpll
mov
adc
xchg
mov
xor
mov
pushf
popa
inc
adcl
pop
push
push
lea
inc
mov
or
mov
lret
dec
into
xchg
fistpll
xchg
xor
mov
push
fcomps
push
mov
popl
jg
cld
test
iret
arpl
push
jo
push
sub
fstpl
inc
imul
stc
jl
mov
lock
jnp
daa
inc
outsl
scas
sub
xchg
mov
cmp
out
sub
lds
gs
mov
fistpl
bound
movsb
sti
mov
int3
inc
and
les
xchg
cmp
sub
adc
cmp
pop
mov
add
scas
mov
push
adcl
and
sub
pusha
pop
ret
lahf
mov
adc
lea
push
pop
filds
aad
je
mov
js
lods
cmp
or
xor
mov
sub
int
xor
hlt
or
scas
xchg
jns
shlb
in
lods
xor
rcrb
sar
sbb
sub
jmp
js
enter
dec
enter
icebp
push
cli
dec
stos
add
in
push
cmp
popf
ror
cwtl
push
xor
in
sub
jmp
pop
imul
call
in
add
subl
mov
pop
jo
mov
pushf
jl
clc
add
xor
ss
outsl
mov
lods
sbb
imul
fdivr
xor
loopne
fisttpll
fst
push
mov
push
cli
iret
or
mov
push
inc
push
mov
loop
in
cli
pop
add
fwait
test
std
or
sbb
xchg
inc
add
out
call
push
test
adc
lahf
cwtl
imul
int3
lcall
fldl
imul
not
fbld
jne
xchg
aas
and
dec
or
js
or
outsb
insl
ljmp
inc
ja
negl
pop
cmp
enter
test
clc
adc
shlb
in
and
mov
pop
mov
pop
ret
push
pop
adc
mov
push
mov
xchg
jmp
lret
cmp
and
or
adc
inc
call
push
sub
mov
sub
pop
ja
pushf
mov
sbb
adc
mov
push
sub
sbb
popa
iret
les
xchg
lods
dec
enter
sub
add
in
push
les
mov
sbb
int
xor
sub
jge
cltd
sbb
pusha
sub
cs
sub
mov
popa
ror
mov
and
inc
out
mov
push
mov
loopne
lret
cmp
aaa
lods
add
pop
sub
imul
das
dec
lret
and
lock
insl
inc
adc
shll
pushf
call
pop
mov
pop
push
inc
ficomps
ljmp
push
or
loop
testl
jl
cmpsb
hlt
mov
jmp
pop
cmp
imul
dec
cmp
mov
enter
xor
mov
icebp
lret
pop
imul
or
fstps
sub
push
repnz
xchg
fstps
pushf
and
sub
ret
xchg
lods
pop
mov
xor
lret
out
out
pop
aad
or
fwait
add
adc
adc
aam
cmp
sub
outsb
loop
test
sbb
cli
dec
and
push
inc
fucom
push
daa
fildll
jnp
out
mov
loope
lret
mov
pop
mov
mulb
rolb
out
in
push
add
xchg
outsb
sarb
pusha
mov
fs
ljmp
push
adc
hlt
cmpsb
mov
ret
xchg
and
sub
jae
inc
push
jae
dec
repz
mov
clc
outsb
stos
pop
xor
inc
in
xor
inc
jle
inc
mov
dec
jg
mov
daa
orb
mov
inc
movsl
ret
dec
out
jp
cmp
mov
test
lods
push
jns
add
insb
xlat
movsb
lea
sahf
ja
stc
and
mov
cmp
add
push
sbb
ljmp
cmp
inc
mov
push
sub
pop
add
lock
sbb
cmc
pushf
mov
repz
inc
pop
cmp
in
mov
xor
fucomip
dec
jl
shrb
rcrb
mov
cltd
js
push
adc
adc
xchg
stc
sbb
push
cmp
fdivs
into
xor
fbstp
mov
sub
into
adc
shll
cmpsb
mov
leave
insb
loop
mov
cmc
scas
inc
sbb
mov
outsl
sbb
ret
adc
mov
fcompl
lcall
jmp
mov
and
aas
pop
in
idivl
inc
pop
sub
icebp
fcompl
rol
shrl
sahf
adc
xchg
add
push
pop
dec
mov
xor
imul
pop
into
cmp
outsb
hlt
adc
and
jo
dec
mov
cli
lahf
sub
das
mov
icebp
jno
data16
or
dec
sub
dec
test
sbb
fadds
aaa
fdivr
pop
dec
jbe
imul
hlt
mov
push
ds
lods
pusha
or
mov
xchg
jae
xor
adc
lret
repz
iret
pop
add
aad
fsubr
scas
dec
dec
xchg
nop
rclb
add
mov
cld
ja
add
push
jae
mov
sti
lahf
or
repnz
fbstp
cmc
outsl
add
cmp
inc
sub
cmp
inc
daa
cmp
sub
fistps
mov
das
mov
outsb
movsl
jne
shl
push
dec
adc
cmc
es
out
bound
fisttpll
sbb
or
jl
test
scas
loop
clc
push
iret
xchg
leave
add
cmp
js
xchg
mov
adcl
dec
cli
addr16
pop
int3
cli
loop
loopne
mov
test
lret
push
popl
insl
jmp
fincstp
jae
outsl
pop
negl
mov
push
cwtl
repnz
scas
test
xchg
or
mov
call
adc
add
inc
sub
or
outsl
lds
push
adc
ljmp
call
sbb
roll
inc
jmp
fs
imul
push
fistpl
hlt
mov
rclb
inc
pop
ss
gs
lods
stos
sbb
xor
sbb
stos
ud0
push
mov
outsl
cmp
lods
fadd
sti
test
gs
scas
push
aaa
adc
xorb
pop
notl
icebp
mov
mov
dec
xor
push
sbb
punpckhbw
xor
in
jl
mov
xchg
sbb
mov
jns
and
push
frstor
arpl
mov
into
adc
scas
xor
repz
fwait
pop
ret
push
rorb
jg
std
mov
stos
loope
fistpl
cmpsl
jne
loopne
fadd
push
sbb
pushf
scas
inc
ret
xchg
repnz
adc
xchg
pop
jns
or
add
xchg
cli
or
xchg
ja
inc
scas
sub
xchg
in
stos
sbb
mov
sbb
out
je
mov
xchg
ficoms
mov
int
cmc
movb
inc
ret
xchg
inc
push
jb
scas
pop
nop
daa
data16
push
pushf
xlat
lock
mov
out
cmpsl
aaa
xchg
adc
cld
fildll
pop
lcall
testb
jno
jae
mov
adc
in
jne
repz
icebp
test
cmp
mov
push
stc
mov
test
popl
jmp
sbb
in
decl
popf
sahf
mov
mov
movsb
imul
push
and
or
push
xchg
cmp
movsl
adc
les
shrb
shlb
mov
popa
mov
push
in
hlt
andb
stc
int
xor
cmp
pop
pushl
test
dec
insl
xchg
cmovg
adc
cmp
imul
lea
nop
push
add
jbe
pop
add
pop
fstpl
lret
xor
mov
pop
lret
aas
jns
inc
or
mov
insl
adcb
rorl
mov
and
push
xchg
xchg
lods
xor
jns
clc
push
sub
adc
sub
aaa
jbe
out
insl
std
xchg
ret
pop
cmpsl
in
loope
jecxz
lods
leave
pop
push
outsb
into
xchg
popf
push
pop
sti
push
cltd
pop
aaa
mov
fwait
or
aas
imul
push
insl
pop
sub
fsubs
push
jecxz
imul
call
sahf
test
xchg
push
sbb
jmp
xchg
cmpl
push
or
imull
cmp
std
sti
jno
xchg
das
dec
movsl
mov
or
into
loop
adcb
push
add
jno
stos
jmp
js
data16
into
leave
out
add
add
in
loopne
gs
movsl
xor
cltd
fisubl
enter
mov
jo
dec
push
and
nop
jbe
xchg
mov
sbb
mov
pop
filds
pop
jo
roll
mov
shlb
aam
cmp
pop
mov
sbb
jo
push
mov
cmp
jno
iret
push
bound
mov
mov
mov
xlat
pop
icebp
daa
mov
sub
mov
icebp
and
mov
ficoms
lcall
and
pop
orl
dec
sbb
lock
movsl
pop
sbb
mov
dec
xchg
mov
jl
lods
in
xchg
push
sbb
mov
mov
jns
mov
adc
inc
mov
divb
inc
cmpsb
xor
fs
cwtl
pop
ds
cmp
jnp
mov
xchg
rolb
sub
push
shll
xor
inc
inc
mov
sbb
subb
sbb
adc
mov
imul
mov
insl
mov
pop
ss
mov
orb
pop
cli
mov
xor
xor
push
or
lea
fwait
mov
push
clc
or
adc
je
popf
jecxz
pop
cmp
int
mov
add
dec
mov
fsts
icebp
inc
std
or
sub
aam
push
cmpsl
ror
pop
fstl
cmp
nop
fxch
dec
push
pop
rcll
orl
adc
ljmp
add
pop
repnz
jno
dec
lret
filds
imull
or
repz
clc
inc
mov
jo
pop
shll
out
lcall
and
mov
data16
popf
and
mov
jp
test
insb
xchg
xchg
sbb
pushl
mov
xchg
nop
mov
aad
dec
pop
bound
jecxz
jge
lock
sub
xchg
jb
add
jnp
jecxz
int3
int3
mov
jbe
pop
mov
cmp
lcall
push
inc
dec
xchg
mov
xor
test
popf
pop
push
jno
sbb
mov
jecxz
pop
xor
scas
push
and
push
jmp
inc
arpl
mov
inc
mov
out
xor
push
lods
loope
mov
lods
jb
fbld
cld
js
pushf
pop
jae
push
daa
fdivr
aam
xor
adc
fsubl
insl
jmp
or
jmp
xchg
shll
shll
push
xor
mov
nop
pusha
add
int3
push
punpckhwd
dec
ret
inc
cmpsl
push
push
xchg
mov
orl
adc
das
sarb
dec
adc
dec
out
insl
mov
int
fstps
ret
add
stos
orb
pop
inc
and
iret
sbb
jp
add
jb
lret
std
je
dec
jbe
popa
mov
adc
sub
out
jp
std
mov
add
pop
adc
inc
into
jae
test
int
jp
sahf
out
and
outsb
xchg
cli
push
push
int
adc
jo
std
cli
jb
fldl
call
call
mov
lahf
mov
and
in
adc
jne
imulb
push
mov
fwait
pop
and
daa
pop
mov
dec
mov
mov
imul
pop
data16
xor
push
cwtl
sub
sub
pop
mov
cmpsl
negl
dec
stos
push
loope
inc
lods
adc
out
xor
push
pop
add
cld
lock
xchg
push
push
int3
and
insb
outsl
sub
add
inc
cwtl
add
mov
imul
inc
sbb
dec
repnz
shrb
fisttps
pop
insb
sub
cmp
or
sbb
in
fdivr
int3
int3
cld
fsubr
lods
pushf
mov
lods
insb
pop
jl
dec
jl
insb
sub
cmp
or
sbb
in
fdivr
int3
int3
cld
fsubr
lods
pushf
mov
lods
insb
pop
jl
dec
add
insb
sub
cmp
or
sbb
in
add
int3
int3
cld
fsubr
lods
pushf
mov
lods
insb
pop
jle
dec
jl
insl
cs
or
mov
add
cld
fcompl
jae
arpl
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
fwait
mov
mov
sahf
mov
cwtl
sbb
dec
cmp
pop
loope
cmp
sub
fcompl
in
lret
pushf
fisttpl
pop
sbb
cmp
pop
or
cmp
sub
jp
or
lods
fcmovnb
jmp
sti
sahf
or
pop
sbb
cmp
dec
adc
fsubrs
aas
add
xlat
shll
les
out
cmp
fbld
divps
pop
pop
loopne
or
mov
cmpl
push
test
mov
xchg
arpl
lret
dec
adc
pop
aam
push
xchg
jmp
shl
push
call
lcall
mov
mov
or
or
or
subl
out
xor
add
ljmp
sbb
pushf
mov
jbe
sbb
and
cmp
rcrl
jg
int3
jo
pop
sbb
stos
jle
ja
pop
dec
imul
inc
aad
fwait
in
stos
mov
mov
mov
sbb
sub
push
dec
and
imul
int
repnz
cmpsl
cmp
jmp
pop
pop
cmp
fsts
cs
xor
dec
das
inc
mov
fiadds
jmp
sti
lahf
outsb
cmp
jle
cs
sbb
pop
loop
ljmp
nop
mov
mov
mov
sbb
cmp
pop
or
cmp
sub
fcompl
in
lret
pushf
fisttpl
pop
sbb
cmp
pop
or
cmp
sub
fdivrl
lcall
inc
outsl
aam
xchg
sti
aad
hlt
pop
pop
popa
cltd
outsl
aam
inc
xor
cmpsb
pop
imul
cmpsb
jecxz
ds
cli
dec
loope
adc
loopne
aad
ljmp
pusha
hlt
gs
out
jmp
push
jo
add
call
rcrl
push
adc
sbb
fucomp
incl
mov
xorb
adc
push
sbb
add
pop
xor
int3
and
flds
test
ljmp
mov
add
addl
or
dec
jmp
dec
push
fidivrl
sub
ljmp
or
daa
cmp
mov
je
addr16
ret
daa
xchg
pop
ja
es
hlt
mov
sub
and
push
fisttpll
xor
out
mov
sub
fwait
nop
les
xchg
mov
test
cmp
jno
cmc
sbb
sbb
dec
dec
call
sar
and
jno
xor
jp
fcoml
ret
pop
cmp
scas
adc
mov
out
xchg
cs
adc
adc
cli
push
cmpsl
aad
mov
sarl
mov
clc
sbb
sbb
dec
fdivp
stc
sub
push
adc
push
mov
sbb
pop
sub
sub
jb
jno
int3
push
dec
push
je
add
aaa
loope
cmpsl
or
adc
roll
movb
cli
jp
scas
or
mov
popa
loope
jbe
incb
popf
imulb
fsubrp
in
lcall
es
int
cmp
sub
inc
ljmp
dec
and
sbb
xchg
push
pop
or
arpl
mov
xchg
inc
jnp
jge
inc
sub
leave
add
test
xorl
popf
out
testl
lds
jl
imul
add
push
cltd
movsl
in
cs
dec
rcrl
leave
mov
cwtl
cmp
sub
sahf
pop
sub
inc
mov
add
sahf
xchg
and
roll
sub
int
negl
dec
inc
xchg
or
cld
jb
inc
or
scas
iret
andl
sub
pop
lret
arpl
rcrb
mov
adc
sub
adc
mov
cltd
or
outsl
sbb
push
sub
mov
lahf
cwtl
insl
test
xlat
and
xor
dec
lret
jp
call
push
mov
push
int3
sarb
mov
iret
xchg
mov
mov
sbb
call
leave
in
int3
pop
fcomi
xlat
dec
lahf
call
mov
test
out
sub
mov
jb
add
push
cmp
push
stos
orl
movsl
mov
sti
pop
sub
ret
sbb
cmp
mov
daa
sbb
sub
in
jecxz
xchg
sbb
adc
add
daa
aad
loopne
add
jl
into
daa
sahf
add
cmp
daa
xchg
push
mov
shr
fcmovne
sbb
sbb
dec
aaa
pop
pop
iret
mov
jp
repnz
in
push
int3
mov
and
insl
xchg
push
test
mov
push
xchg
mov
or
mov
add
jp
lcall
and
outsl
sbb
or
adc
insb
test
jbe
push
dec
sub
repnz
adc
mov
repz
sti
xor
jae
mov
sbb
imul
pusha
and
mov
es
mov
pop
or
sarl
mov
mov
jbe
adc
out
xorl
cmp
in
lret
jg,pn
cltd
pop
push
ficoml
imul
in
fisubs
adc
movsl
imul
xchg
push
dec
arpl
pop
mov
aaa
out
inc
mov
popf
out
mov
test
dec
jle
scas
out
dec
and
gs
cli
test
cmp
xor
push
decl
jnp
je
and
sub
int3
pop
lock
clc
dec
fsubl
cmp
into
enter
sub
adc
leave
pop
sahf
dec
pop
in
shrl
mov
push
addr16
pop
es
push
les
and
dec
jmp
or
mov
hlt
insl
je
push
cmp
fisubrl
pop
mov
pop
stc
adc
pop
lea
add
ror
and
push
inc
rolb
mov
lea
add
xor
js
vminpd
cmp
pop
int3
cmp
jle
ficoms
mov
jb
xor
rol
jbe
lods
dec
xchg
in
shrb
sbb
cli
xchg
cmp
nop
and
cmpsb
clc
fwait
and
and
add
lds
pop
add
push
leave
gs
scas
loop
xor
pop
es
aad
xchg
cmpsb
mov
pop
lret
xor
xchg
mov
cli
push
aaa
call
fs
pop
mov
inc
adc
arpl
out
mov
imul
mov
mov
rcrb
dec
outsb
push
sub
push
popa
mov
inc
inc
das
cmp
adc
xchg
popa
sbb
xchg
push
pop
into
push
into
cmp
es
cmc
cmpsb
sbb
sbb
mov
mov
fstl
mov
ds
mov
inc
mov
cmc
pop
jns
sti
mov
subb
adc
lret
lret
push
movsl
loopne
xchg
mov
jae
inc
decb
jp
inc
or
xchg
xchg
aas
aas
push
ret
mov
inc
test
outsl
push
add
sbb
cmp
dec
ror
stc
ret
xchg
mov
add
mov
lods
pop
mul
mov
je
test
das
mov
and
cld
xchg
fistpll
adc
sbb
subl
idiv
push
dec
shll
sub
xchg
mov
jns
aaa
scas
popf
inc
jno
cwtl
jb,pn
sbb
leave
aad
sub
sub
inc
pop
mov
mov
pop
sub
dec
and
adc
xchg
sti
das
cli
inc
mov
lods
sbb
lods
mov
test
push
in
ret
imul
pop
pop
pop
and
add
sbb
outsb
idivl
cltd
xchg
jmp
sarb
cmpsb
icebp
icebp
loope
sbb
call
mov
sbb
fs
loopne
fstl
es
test
and
sbb
pop
add
sbb
in
push
or
jge
cmpsl
dec
test
mov
addr16
and
cmp
mov
dec
dec
enter
jl
lods
or
add
push
mov
ss
add
push
jg
cmpsb
add
mov
sarb
pop
pop
loop
in
sub
and
fsub
xor
out
out
push
inc
pop
fisubrs
mov
pop
aam
jnp
pop
jmp
sub
insl
cld
ficomps
enter
jecxz
jb
lret
addr16
notl
cmp
repnz
push
and
mov
mov
repnz
xchg
test
fidivrs
push
ret
shr
imul
push
gs
jb
fisubrl
mov
mov
fbstp
call
xlat
mov
xchg
xor
push
adc
ret
push
mov
pop
roll
fs
or
scas
std
xchg
cmp
push
xor
mov
mov
push
push
scas
push
adc
dec
stc
jge
cltd
xchg
pop
xor
andb
sub
or
or
mov
out
out
fst
inc
ss
xchg
cwtl
sti
sbb
xchg
jno
cmc
in
test
cltd
dec
add
insb
roll
rcrb
addr16
jge
stos
push
mov
cmpsl
xlat
es
adc
js
mov
ret
jl
arpl
mov
sbb
ds
cwtl
cmp
aam
mov
imul
sub
mov
in
lea
push
push
mov
xor
test
mov
inc
xchg
int
xchg
outsb
add
loopne
into
lret
jge
orl
jl
cmp
das
xchg
addr16
loop
cmp
cmpsb
pop
add
xchg
or
mov
inc
dec
sahf
das
es
xorb
int3
sar
hlt
jle
sbb
xor
inc
in
lods
hlt
cmp
push
add
lret
cmp
cltd
mov
dec
sbb
fistl
adc
pop
add
sarb
fwait
jmp
dec
inc
pop
sub
sti
xor
mov
in
inc
adc
frstor
mov
sub
push
popf
add
repz
push
inc
sub
or
das
sub
out
fisttpl
in
sub
xchg
xor
inc
mov
insl
inc
das
testl
enter
ds
mov
ficoms
push
lret
mov
jne
rcrl
mov
cmp
and
push
pop
dec
push
jns
adc
jbe
int3
mov
mov
stos
loop
jmp
pop
les
das
xor
out
fisubl
mov
int3
enter
push
jne
jo
xor
fnop
scas
sub
cld
cmp
pop
dec
je
stos
loope
sahf
adc
push
sbb
jnp
pushf
mov
sub
gs
jg
lret
mov
imul
fnstcw
push
mov
jns
sbb
dec
imul
fildl
shll
fistpl
mov
mov
cmp
inc
clc
loop
xor
mov
jae
repnz
ret
loope
jns
dec
loop
popf
or
jle
fwait
pop
je
lock
cmp
sbb
sub
movsb
mov
sbb
mov
or
mov
pop
icebp
js
pop
jb
divl
lock
mov
les
xchg
iret
xchg
mov
jne
mov
test
xlat
jmp
nop
cs
inc
adc
mov
jne
or
movsb
cmp
xchg
rorb
cmp
jo
ljmp
lods
iret
and
bnd
pop
gs
inc
pop
in
mov
imul
mov
sbb
and
jge
cmp
push
data16
cmp
lret
rcr
mov
sahf
out
xchg
gs
adc
popf
int
dec
jae
mov
daa
jmp
mov
or
pop
jmp
dec
aad
xor
or
inc
xchg
into
sub
movsl
insl
jmp
iret
mov
mov
sub
out
mov
adc
insb
addl
pushw
gs
imul
jmp
lret
mov
rcll
mov
out
mov
xor
push
ljmp
pop
int3
js
jp
xor
jno
daa
pushf
les
loope
movsl
push
pop
popf
mov
xchg
aas
lods
jmp
imul
push
loop
orl
xor
adc
mov
add
inc
fdiv
out
aad
les
aas
mov
xchg
jmp
ss
std
testl
lcall
test
lock
adc
stc
cmp
sbb
movsl
cmc
scas
push
sbbl
sub
sbb
ss
rorb
jle
push
ret
lret
cmp
gs
stos
ds
pop
leavew
adc
movsb
jecxz
cmpsb
scas
in
or
mov
outsb
in
adc
lcall
lret
jb
imul
cld
jo
inc
stos
movsb
aas
repnz
or
adc
leave
inc
xchg
dec
xchg
jl
out
std
lods
sbb
in
cmpsb
stos
sub
cmp
cmp
pop
iret
mov
hlt
lahf
je
mov
dec
movsl
add
adc
xchg
in
lret
lret
add
pop
pop
mov
push
adc
ja
sub
mov
mov
dec
sbb
shrl
or
xor
jl
mov
stos
icebp
int3
sbb
push
push
lds
jne
push
and
fsubrs
loope
jae
pop
lds
lcall
mov
sub
xchg
sub
ret
cld
inc
in
sub
ror
mov
or
jo
dec
add
xor
lcall
into
and
les
bound
loopne
nop
out
jae
lods
fdivrs
and
and
lcall
ljmp
sarb
inc
pusha
push
and
sarl
adcl
adc
in
dec
loop
insl
push
mov
aas
div
fnstenv
dec
in
ret
fcmovnu
mov
ja
iret
add
rcrl
jg
int3
popf
mov
shlb
lods
sbb
lods
int
sub
xchg
repz
push
dec
fsubl
dec
cli
fsubrl
sub
xchg
mov
enter
nop
frstor
sub
push
mov
mov
cs
mov
jae
or
out
mov
mov
jp
andb
outsb
xor
xchg
rclb
call
add
fsts
rcrl
cwtl
add
cltd
sub
in
cli
mov
cmp
subl
lds
cmp
pop
arpl
sub
adc
mov
int
push
mov
adc
jo
jae
in
ja
inc
ljmp
push
adc
mov
sahf
pop
dec
dec
sub
sub
inc
aas
cmp
lods
lahf
add
xchg
lret
inc
dec
dec
cs
adc
out
jnp
sahf
sti
mov
push
sbb
jge
mov
push
adc
push
inc
lds
fcmovnb
ret
sub
subl
rcr
cmp
repz
call
imul
aas
mov
push
aas
sarl
jns
jle
pop
nop
pop
fcom
xlat
dec
xchg
loopne,pn
push
insb
mov
lds
xor
sub
lods
fidivl
add
sahf
pop
mov
es
divb
shlb
shlb
in
inc
mov
scas
xchg
push
push
cwtl
fists
dec
mov
fwait
std
mov
stos
pop
shll
jmp
inc
clc
pop
ficompl
mov
mov
mov
push
xchg
int
movsl
ficompl
push
je
adc
fwait
push
mov
pop
aam
dec
bound
jecxz
sub
in
xchg
sub
push
rcll
loope
mov
lcall
cmp
je
pop
daa
cmp
popa
and
ud2
lods
cmc
jne
pop
hlt
jmp
into
dec
int3
ret
sarb
movsl
lahf
sahf
daa
sub
lcall
adc
cmp
jno
shlb
jl
jae
scas
das
mov
lock
in
mov
mov
popa
add
adc
cld
jecxz
push
addr16
xchg
or
inc
mov
insl
lea
xor
add
popf
das
nop
fidivrs
pop
icebp
dec
push
jg
stos
adc
gs
pushl
jecxz
push
dec
mov
insl
out
xor
insb
xor
pop
jl
or
imul
fists
or
repz
imul
loopne
std
pusha
push
pop
je
inc
push
lret
ds
movsb
cs
inc
je
xchg
add
jae
addr16
test
cld
mov
das
cltd
mov
lods
loop
adc
repz
cs
out
scas
push
orb
ds
jne
jns
or
xor
dec
dec
pop
pop
lret
xchg
sub
sahf
dec
test
xchg
add
fsubrs
das
div
xchg
sub
bt
ja
ds
push
lds
loopne
arpl
push
pop
out
sub
mov
fadd
xchg
in
xor
divl
jae
sbb
jne
mov
pop
insl
push
xor
stos
jb
stc
jle
cld
inc
cltd
stc
jecxz
push
xchg
sub
jns
jg
lea
in
das
popf
lds
sbb
xlat
pop
and
lcall
jmp
mov
push
pop
mov
inc
pop
mov
mov
in
push
adc
imul
hlt
cmp
adc
int3
jo
cwtl
xor
lret
cmp
dec
xchg
push
lock
aas
dec
inc
add
bound
cmp
hlt
cmpsw
bound
popf
jnp
scas
std
jle
mov
fstl
js
sbbl
les
mov
movsb
xlat
movb
xchg
nop
lcall
add
add
in
push
xor
inc
das
rolb
adc
cwtl
jmp
adc
cmp
mov
ja
sbb
pop
jp
push
into
or
in
test
mov
inc
or
out
scas
cs
inc
in
pop
and
pusha
out
cmpsb
pop
mov
xor
pusha
add
jnp
xchg
push
inc
push
inc
fmulp
xor
mov
add
xlat
mov
jb
lret
mov
lret
out
call
repz
jo
sarl
inc
stc
mov
mov
sarl
jl
or
jo
inc
movsb
es
inc
xor
roll
in
push
cmc
ss
inc
jle
mov
or
lcall
clc
adc
inc
dec
lds
in
in
clc
xchg
xchg
stos
nop
test
cmp
or
jb
fwait
xchg
jecxz
cmp
loopne
jmp
push
xchg
out
dec
pop
jge
daa
push
adc
xchg
sarl
sbb
popf
aas
xchg
ret
ret
sti
jbe
and
jno
push
sub
mov
adc
fdiv
sub
jb
pop
adc
lds
cmc
jb
imul
mov
std
jg
mov
or
test
jmp
sbb
outsb
nop
repnz
pop
dec
cs
inc
movsl
in
or
or
in
mov
bound
pop
adc
dec
testl
jle
xchg
rcrl
out
jge
jb
xor
pop
insb
xor
mov
inc
mov
cltd
fwait
out
imul
fstpl
or
jae
cmp
mov
lahf
push
std
mov
pop
orl
sbb
pop
outsl
adc
cmpsl
mov
push
subl
add
fimull
js
inc
xchg
sbb
cld
je
dec
or
hlt
sarb
out
and
jle
sub
sti
adc
cs
stc
mov
mov
jo
std
lds
mov
jp
icebp
add
ret
push
sti
test
cmp
inc
repz
out
daa
popa
and
lret
xchg
inc
pop
imul
pop
stos
mov
push
xor
mov
cmp
mov
aaa
bound
mov
inc
mov
ljmp
mov
mov
sbb
test
push
mov
movsb
js
into
ja
mov
hlt
and
jnp
dec
fbstp
or
cli
pop
ror
pusha
sbb
stos
cmc
push
stos
test
jno
adc
lods
lock
mov
in
jae
mov
loop
rcrb
add
iret
mov
int3
mov
jle
lret
in
stos
hlt
movsb
mov
loope
push
mov
adc
arpl
mov
repnz
fsubl
lcall
fnstcw
mov
lret
pop
pop
adc
ljmp
xchg
adc
movl
sbb
into
mov
ja
xor
daa
xlat
js
xlat
arpl
shl
xor
dec
cmpsl
pusha
js
aaa
push
loope
adc
push
lcall
pushf
fstl
ret
mov
fwait
sub
xchg
test
push
push
test
adc
es
ret
mov
push
mov
cwtl
das
test
mov
test
mov
push
cwtl
popa
lret
or
cmp
jp
jmp
pop
js
jnp
or
or
pop
xor
cltd
sbb
xor
mov
cli
and
mov
test
mov
ja
mov
jge
rolb
xchg
sarb
dec
adc
and
addr16
lret
dec
xchg
push
and
cmc
mov
icebp
dec
jbe
lds
jne
cwtl
sahf
cs
jg
sbb
mov
push
div
dec
push
cmp
loop
inc
fiadds
push
dec
or
in
outsb
xchg
gs
inc
imul
add
out
inc
movsl
shlb
decb
faddp
jp
loope
jne
ja
mov
pushf
sub
adc
mov
jmp
adc
popa
repz
mov
or
xlat
pop
pop
push
cs
out
faddp
icebp
lods
dec
xchg
push
lods
push
cmp
fs
jo
sbb
add
js
xor
pop
stc
loope
sarl
sub
lock
push
dec
in
and
jns
aad
mov
cmpsl
fisttpll
push
dec
leave
cmp
xchg
pop
sbb
xchg
or
frstor
mov
and
mov
xchg
pop
nop
push
xchg
xchg
cmp
mov
adc
mov
xor
cs
out
lahf
push
out
aaa
lods
popl
fwait
mov
lret
mov
movsb
mov
arpl
out
into
adc
pop
ss
scas
or
cmp
xor
sbb
inc
cmp
mov
decb
test
push
xchg
lds
xchg
lods
pop
movsl
sub
in
dec
dec
leave
into
mov
stc
daa
mov
mov
mov
xor
dec
cmp
dec
idivl
popf
mov
push
sub
imul
lea
in
jge
int3
mov
mov
mov
sbb
cmp
pop
or
cmp
sub
fcompl
in
lret
pushf
fisttpl
pop
sbb
cmp
pop
or
cmp
sub
fcomps
call
jmp
sti
lods
or
dec
sub
dec
sbb
imul
sub
pushf
fisttpl
mov
cmp
cmp
shll
test
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jo
cmp
or
sbb
jne
or
add
xchg
mov
mov
cmp
das
sbb
push
jp
dec
outsl
pop
sbb
scas
pop
mov
lret
pushl
mov
adc
add
jae
arpl
outsl
dec
jg
mov
out
out
rol
mov
mov
cmp
jl
pop
cmc
xchg
push
or
arpl
jbe
sahf
inc
push
stos
ret
cmp
movzwl
or
mov
pop
test
mov
lahf
inc
pusha
jne
xchg
stos
push
fildll
scas
cmpsl
pop
cmp
inc
std
fdivr
and
jnp
pop
mov
mov
fisubrl
mov
xor
subb
ljmp
pop
mov
jae
pusha
mov
cmp
test
dec
iret
vrcpps
outsb
xor
les
jg
jo
mov
pushf
sti
iret
inc
xchg
pop
lret
or
xchg
aaa
xlat
add
aam
in
notb
inc
fwait
jne
fwait
inc
sub
ljmp
or
or
pop
dec
outsl
inc
jg
mov
mov
lret
mov
outsl
outsb
jle
push
or
sub
aaa
or
mov
iret
xchg
mov
jae
sbb
or
sbb
cmp
push
test
mov
in
mov
dec
or
sbb
jge
pop
dec
outsl
pop
jg
mov
mov
lret
ljmp
or
sbb
push
jp
dec
outsl
pop
jg
mov
mov
lret
ljmp
psubw
push
inc
jb
inc
mov
je
test
stc
les
call
loope
in
imul
mov
adc
fdivr
xchg
or
lret
insl
out
fisubl
adc
dec
dec
lea
and
pop
lahf
sub
jg
and
xchg
jle
and
scas
xor
cmp
push
imul
sbb
xlat
xor
sahf
inc
jbe
cmpsb
into
testl
dec
push
test
imull
pop
in
cmp
out
push
es
mov
jb
dec
mov
mov
add
arpl
jmp
mov
aas
in
popf
lods
sub
or
fisubrl
cmp
ror
fists
pop
inc
pop
mov
mov
cmp
xor
popf
int
dec
js
mov
pop
and
sub
outsb
inc
ficompl
sub
lret
mov
bound
push
inc
shrb
xor
stos
aam
mul
cmp
sbb
sbb
out
insl
cmp
pusha
pop
mov
mov
ja
hlt
add
cmp
out
push
repz
jnp
outsl
or
sbb
push
xor
out
add
sub
mov
mov
mov
scas
out
incl
mov
push
lret
sub
loope
popf
ss
shl
pusha
add
lds
orb
dec
mov
in
pop
bound
xchg
xor
pop
or
bound
push
xchg
mov
rcr
cmc
xor
xor
jmp
xor
inc
sub
sbb
xchg
sub
mov
xlat
ret
jecxz
lods
js
push
test
pop
jb
inc
mov
test
pop
fwait
movsl
or
jge
or
or
lock
shlb
cmp
test
aaa
out
and
cmp
dec
hlt
dec
mov
jmp
mov
xchg
adcl
push
xchg
push
call
stos
xchg
xchg
dec
xchg
mov
add
sbb
cmp
ret
fs
dec
sub
out
movsb
repz
lahf
pusha
gs
mov
aad
jae
or
xchg
jae
and
or
stc
aam
adc
jae
cwtl
rol
dec
mov
cli
jle
cli
xchg
movsl
push
jbe
mov
notb
jae
insb
lret
repz
sti
mov
and
mov
das
mov
jne
adc
jae
push
xlat
out
clc
sub
mov
mov
in
mov
mov
sti
aaa
push
sbb
sahf
dec
mov
push
dec
xchg
cmp
sbb
pop
pop
jbe
push
nop
xor
mov
pop
loope
shll
push
in
lret
jle
sub
pop
pop
dec
popf
stos
pusha
mov
fdivs
pop
es
xchg
daa
lods
adc
jg
push
jae
arpl
adc
rolb
xchg
pop
ds
and
in
popf
jo
aas
xor
std
dec
pop
jl
jnp
test
lods
inc
fstpl
sub
mov
mov
adc
and
arpl
push
mov
push
and
mov
iret
in
push
or
mov
jne
andb
sbb
or
rcrl
mov
cmpsb
jg
daa
xchg
mov
lds
test
mov
pop
cmp
mov
mov
pop
sbb
out
dec
das
in
xchg
call
ud2
cmp
lret
arpl
fnstsw
add
add
ljmp
pop
sub
loope
loope
dec
clc
movsb
mov
jb
mov
inc
cli
hlt
call
adc
out
xchg
test
mov
jbe
daa
sbb
jecxz
fs
ljmp
ja
dec
jno
jae
stos
mov
mov
sti
or
gs
inc
mov
dec
push
jnp
aad
jg
imul
pop
mov
jp
xchg
lods
lcall
hlt
xchg
ret
das
aad
jmp
jecxz
jb
adc
ret
push
cli
dec
fwait
imulb
cmpsb
mov
dec
sbb
sti
mov
inc
inc
out
pop
jno
adc
push
int3
jecxz
test
mov
jbe
es
pop
jns
add
loop
jo
daa
in
pop
fdivr
scas
sbbb
mov
stos
shll
sub
outsl
add
mov
lret
adc
es
and
mov
lea
es
rcr
aam
std
xchg
jl
jb
push
and
adc
fldt
cs
dec
mov
push
cli
loopne
int
xor
testl
mov
inc
in
and
sti
xchg
and
or
inc
incl
int3
dec
mov
xchg
fdivs
aas
adc
test
data16
sbb
inc
push
loope
and
xchg
test
sahf
pushf
and
test
rcr
repz
mov
mov
mov
pop
test
int3
out
popf
sbb
daa
sub
addr16
and
es
jno
clc
enter
nop
fcmovb
adc
push
mov
pop
das
mov
hlt
mov
fisttpl
aam
sbb
ret
and
add
ret
pushf
mov
mov
sti
jnp
pop
push
lock
jne
cs
or
xor
jg
adc
lcall
test
aas
in
mov
pushf
or
fistps
xchg
test
inc
outsb
aad
shl
fnstsw
inc
sbb
lahf
pusha
sub
jne
sub
pop
lea
stc
or
dec
out
out
cmpsb
out
cmp
inc
outsb
inc
mov
mull
mov
xchg
loopne
sbb
pop
add
push
jns
xor
test
pop
sbb
je
out
popf
inc
xchg
sti
mov
lds
pop
push
scas
jb
mov
pop
mov
orl
jl
fsts
pop
stos
sbb
aaa
xor
icebp
repnz
int
lret
xchg
adc
ss
lret
mov
mov
sbb
xchg
js
push
out
ret
cmc
mov
push
inc
add
and
push
into
push
mov
dec
repz
data16
imul
sub
or
mov
mov
mov
and
adc
inc
jmp
aam
ret
mov
shl
push
push
adc
sbb
pop
fistps
ret
mov
push
stc
pop
adc
hlt
lods
pop
jae
sub
jbe
fstpl
xchg
out
pop
pop
fcmovne
or
push
inc
jg
lods
das
mov
or
dec
pusha
in
cli
adc
xor
jnp
push
stos
sub
adc
dec
and
jbe
rcr
stc
mov
lret
mov
dec
and
sub
andb
mov
cmp
and
xchg
jbe
sub
idivl
in
mov
xor
and
sbb
add
sarl
mov
sub
pop
xor
sub
inc
mov
adcl
out
fwait
xchg
adc
in
dec
imul
jo
mov
jbe
xor
fisubs
jp
insl
xchg
gs
ss
sub
push
js
lret
cmp
sti
pop
sub
xor
js
stos
push
mov
dec
mov
dec
jmp
in
repnz
lock
mov
popa
or
les
popa
fwait
jl
shll
shl
dec
or
dec
jle
xchg
cmp
xor
xor
mov
xlat
inc
xchg
fsubr
decl
sub
push
sbb
popf
push
imul
std
pop
push
mov
add
jne
jg
xor
and
das
loopne
mov
ret
xor
lahf
jae
out
jmp
mov
aam
cld
cs
mov
xchg
sbb
and
push
lods
push
pop
imul
in
andl
adc
sbb
ja
and
or
stc
pop
andl
cmpsl
push
or
in
mov
or
pop
out
adc
pop
inc
in
movl
cmpsl
in
sarl
sbb
enter
and
imul
xchg
and
repz
jp
mov
repz
push
jmp
jnp
xor
aas
scas
mov
incb
loope
test
or
sub
cld
sti
loop
cmp
test
ret
xor
inc
ret
mov
add
cmp
inc
gs
ret
adc
sub
insl
mov
pop
mov
mov
int
inc
cmp
nop
add
ret
fcomps
ljmp
xor
movsl
cmp
push
push
mov
ja
sahf
loopne
push
pop
inc
cs
cltd
adc
std
das
adc
and
imulb
movb
filds
sbb
jno
pop
fidivl
enter
fldenv
cmpsb
adc
lds
leave
mov
xor
xor
ljmp
and
sbb
orb
jb
testl
dec
sub
int3
cs
mov
sbb
xchg
inc
notl
xlat
mov
hlt
add
pushf
aam
ret
fisttps
push
xchg
mov
inc
ds
xlat
ss
fldt
int
xchg
and
enter
mov
dec
sbb
xor
add
sbb
or
adc
neg
mov
je
arpl
push
stos
dec
loope
je
mov
cmp
mov
jo
pop
mov
xchg
popf
lea
pop
add
and
test
push
mov
dec
adc
arpl
test
mov
inc
shr
mov
jge
in
dec
lea
lock
mov
jno
sbb
mov
aam
add
add
sub
lahf
or
jo
insb
dec
cmp
lret
mov
and
aaa
ret
push
loopne
lock
fisttpl
into
lahf
xchg
jne
add
outsl
repnz
sub
xor
mov
xchg
frstor
add
shlb
push
pop
xchg
mov
pop
sub
pop
es
push
adc
adc
out
push
pop
out
mov
dec
push
dec
ret
shlb
jl
inc
fadds
or
flds
jbe
sub
mov
inc
test
pop
dec
mov
imul
push
imull
rclb
cltd
gs
xor
movsl
gs
mov
popf
or
mov
xchg
jl
sub
ret
add
mov
sbb
pop
test
rol
xchg
movsb
dec
mov
mov
cmp
ja
loope
dec
xchg
xchg
pop
mov
rorb
andb
fisubrs
cmp
mov
gs
add
test
sar
dec
das
pop
jge
jle
cmp
jae
sbb
xchg
sbb
ss
jecxz
outsl
or
mov
push
jmp
inc
inc
xchg
aaa
mov
icebp
jmp
fs
stos
sub
push
cli
push
mov
xor
mov
cld
fnstenv
sbb
data16
mov
ss
imul
arpl
aas
inc
lcall
out
pop
mov
into
xlat
jl
lock
dec
cmpsb
insl
imul
insb
xchg
movsl
rorl
popa
xchg
push
inc
xor
push
cmp
lahf
lcall
cwtl
xchg
and
cs
sti
mov
xchg
sub
das
mov
cltd
dec
je
popa
jo
mov
shlb
xchg
sbb
lret
or
andl
push
add
ja
mov
je
xchg
push
sub
pop
lahf
sahf
cmc
addr16
in
out
push
dec
stos
inc
lock
add
jnp
sbb
fnsave
add
cmp
cs
adcb
inc
xchg
mov
aad
imul
dec
add
hlt
push
mov
push
ss
hlt
mov
mov
lods
shll
stos
insb
mov
and
sub
cmp
or
not
push
xor
pop
in
popa
push
mov
xchg
adc
push
pop
cmp
push
movsb
mov
adc
cmpsl
fnstsw
fwait
rclb
out
cwtl
add
xchg
shrb
push
cwtl
lock
fisttpl
and
aaa
xchg
jns
daa
cmpsl
mov
mov
jl
and
jp
cmp
repnz
push
mov
mov
cmp
std
lcall
test
xchg
aad
popa
adc
jle
lcall
loop
or
jl
mul
std
and
sub
mov
ret
lret
insb
sbb
cmp
ds
push
sub
leave
mov
add
mov
into
pop
loop
mov
popa
push
pushf
nopl
jmp
and
inc
popa
icebp
das
dec
jnp
pop
xchg
sarb
ss
adc
lcall
ret
mov
out
sbb
jle
pop
jge
xlat
cld
nop
pop
in
fcomp
push
fcmovbe
and
fwait
push
jle,pn
loopne
stos
arpl
push
mov
scas
or
jnp
fdivrl
testb
cmc
std
sub
pushf
fwait
cmp
add
movsl
xor
stos
lock
jg
cs
js
arpl
pop
mov
arpl
pop
mov
pop
nop
lcall
ret
jae
repnz
ja
out
push
sti
popa
pop
and
push
or
push
cmp
sub
sub
scas
rclb
cmpsl
sahf
sub
out
cwtl
xor
fstpl
jno
cmp
jmp
jecxz
les
lret
push
shlb
or
ss
or
mov
jb
hlt
loopne
icebp
cmp
or
imul
push
pusha
icebp
rol
sti
aad
cmp
xchg
incl
out
and
test
fmull
call
mov
inc
mov
in
add
push
test
sub
sbb
adc
push
xor
push
out
dec
mov
jge
out
cmpsb
fs
add
xor
test
pop
out
mov
push
pop
imul
ss
in
and
and
adcb
inc
xchg
jp
stc
dec
loop
mov
mulb
lea
pop
and
mov
ret
out
xor
xor
cs
sub
add
into
mov
jns
mov
rorb
dec
sbb
mov
shlb
cltd
push
xor
jnp
int3
push
mov
inc
sbb
or
and
xor
xor
addb
jmp
sub
mov
test
or
push
test
es
and
xchg
aas
lcall
scas
mov
imul
cltd
mov
and
dec
dec
push
pop
xor
pusha
and
popa
inc
outsb
in
hlt
dec
push
xchg
xchg
sbb
aas
dec
mov
sahf
pusha
and
pop
and
inc
push
and
popa
out
test
sbb
xchg
gs
pop
lahf
xor
icebp
inc
xchg
sub
push
xchg
pop
pop
das
push
sbb
lcall
mov
push
fiadds
cmp
fistps
imul
loop
sub
shlb
insb
push
mov
sbb
dec
mov
mov
cmp
das
out
sbbl
cmp
fidivrl
pop
mov
js
in
mov
jno
dec
inc
cltd
mov
xchg
fimuls
jmp
add
stos
stos
int
xor
mov
inc
push
pop
mov
andb
mov
jbe
movsb
rcll
add
sbb
xor
lret
dec
insb
push
add
popf
and
jbe
test
loopne
int
push
xchg
loope
sbb
mov
jnp
rorb
sbb
not
loopne
sarb
jecxz
mov
cmp
adc
sbb
add
lret
and
fcmovne
jns
inc
mov
addl
enter
mov
push
insl
adc
cmp
add
fisttpll
lret
mov
movl
pop
cmc
loope
mov
aad
int
loopne
sbb
jl
out
jecxz
push
mov
into
rol
push
dec
cmpsl
imul
xchg
mov
lret
lcall
and
movl
add
scas
cmp
push
das
and
sub
or
js
daa
sub
jle
xor
add
sbb
es
lret
xchg
sbb
and
sbb
scas
mov
out
hlt
jne
and
shll
orb
jl
or
scas
shrb
xchg
icebp
xchg
add
fwait
jl
shl
fsubrl
dec
mov
xor
sbb
push
jo,pt
out
add
sbb
aam
mov
push
pop
out
xchg
mov
scas
adcb
nop
add
les
or
pushf
fcompl
std
xor
pusha
mov
adcl
fsubrs
mov
inc
dec
dec
and
and
sbb
fndisi(8087
mov
aas
xchg
push
mov
in
add
push
shlb
lea
push
stos
jge
call
push
stos
or
mov
aam
int3
cmp
sbb
push
in
mov
test
pop
xchg
inc
inc
repnz
lods
je
mov
mov
sub
dec
sarb
cmpl
outsl
jge
add
xor
xchg
pop
cmp
imul
add
int3
lods
hlt
mov
add
sub
sbbb
push
fdivrs
mov
in
in
mov
sti
jl
repz
div
pop
push
sbb
int
xor
icebp
jecxz
loopne
push
xchg
lea
or
popf
int3
mov
scas
fisttpl
inc
or
pop
xor
xchg
jb
insb
jg
je
ss
jmp
jae
fnstcw
sbb
add
dec
in
dec
fwait
mov
jp
mov
mov
dec
cltd
sub
pushf
js
push
pop
cli
mov
enter
bnd
sub
dec
sbb
sub
sub
jmp
xchg
jmp
push
das
pop
xchg
or
sub
inc
jo,pn
stc
outsb
inc
add
mov
or
aad
insb
out
data16
push
nop
xchg
addr16
cs
shlb
mov
scas
xlat
stos
xchg
sub
lret
push
insl
orl
inc
sub
sbbl
call
cmp
cltd
xchg
ret
test
sub
pushl
out
mov
xchg
lahf
cmpsb
jne
xor
cwtl
pop
sub
jae
or
scas
loop
insl
xchg
push
fisttps
mov
ss
xor
pop
in
xor
bound
inc
iret
sub
xor
mov
jmp
iret
test
mov
xchg
pushf
inc
sub
or
stos
sbb
fmull
xchg
adc
xchg
fsubrs
pop
mov
xchg
outsb
aad
add
mov
mov
test
and
mov
rcrb
aad
and
movsb
scas
outsl
push
outsb
lea
fisttpl
aaa
loop
mov
rcll
lock
pop
push
mov
jl
pop
push
xchg
push
adc
lods
xchg
push
xor
pop
in
xorl
xchg
jae
xor
movsb
inc
xor
jg
ret
cmp
inc
pop
inc
in
out
sahf
stos
ljmp
cmp
ja
lahf
xchg
cs
test
xchg
push
push
jae
cmp
call
movsl
std
pop
aaa
lret
mov
and
sub
and
sub
and
jmp
int
sub
dec
test
mov
xor
push
out
xor
jmp
sbb
nop
xlat
unpcklps
cmp
scas
out
jnp
xchg
rcl
mov
sub
cmp
lods
mov
repnz
pop
mov
rorl
mov
in
inc
jnp
inc
out
add
lods
les
mov
les
aam
add
and
pop
push
scas
fisttps
push
rcr
inc
xchg
pushf
pop
outsb
and
jne
xchg
stc
xchg
inc
mov
sbb
xor
ficomps
cwtl
jg
lret
lcall
push
js
ret
scas
js
jg
adc
jecxz
xchg
pushf
sub
fisttpll
mov
pop
inc
jbe
jbe
mov
push
sbb
cmc
ja
sbb
insb
loopne
movsb
fists
insb
das
cmp
imul
decb
sub
push
inc
jo
jno
add
push
addr16
pop
mov
add
or
gs
mov
out
mov
repnz
and
jmp
mov
or
sbb
cmc
mov
dec
addr16
scas
clc
movsl
call
jecxz
fsubs
ret
sbb
xor
xlat
scas
inc
xor
mov
fdivs
push
xor
daa
xor
adc
push
xlat
inc
or
repnz
gs
dec
jnp
lahf
xor
shlb
jge
adc
jnp
cmp
jae
stos
pop
sub
sbb
push
jp
dec
outsl
pop
jg
mov
mov
lret
ljmp
or
sbb
push
jp
dec
outsl
pop
jg
mov
mov
lret
ljmp
or
sbb
push
jp
dec
outsl
pop
jg
mov
mov
lret
lcall
femms
pop
cmp
sbb
push
jp
lret
mov
and
jb
xor
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
