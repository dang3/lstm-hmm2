mov
xor
arpl
fdivrs
int3
addr16
jp
lret
shlb
bound
xchg
cwtl
inc
adc
mov
std
cli
mov
sub
out
add
outsb
imulb
out
shlb
inc
dec
loop
dec
bsr
add
xor
adc
push
jno
inc
out
iret
js
jo
jle
out
jno
cmp
xor
lock
stos
je
mov
sub
jp
hlt
dec
out
xor
sub
jle
jns
xor
sub
ficoms
dec
testb
loop
jne
jmp
nop
lahf
fimull
jb
shlb
jp
mul
out
dec
xor
jo
jmp
lds
jb
jns
and
lcall
je
xor
mov
jp
lcall
jne
push
add
pop
mov
xor
or
je
push
push
test
add
lea
call
and
sti
xor
sti
jp
inc
add
jmp
lret
cmc
mov
pop
ret
xor
call
push
push
sub
jne
jmp
icebp
add
add
xor
jne
jp
jo,pn
inc
dec
orl
jo
jmp
dec
push
loope
push
rcr
or
dec
jl
push
push
je
mov
in
in
hlt
cmp
insb
push
mov
jp
sub
jnp
pop
add
add
pop
test
jne
ret
push
clc
sub
mov
nop
mov
jae
ror
sub
add
pop
pop
push
push
clc
add
sub
sub
sub
mov
mov
jae
rcl
cmp
add
pop
pop
push
mov
push
clc
sub
mov
nop
mov
jae
shl
sub
add
pop
pop
call
push
push
sub
jne
jmp
rorl
push
test
mov
lcall
sbb
push
push
jb
mov
pusha
jo
jmp
or
outsb
scas
roll
jbe
push
arpl
mov
jns
je
add
lcall
jp
dec
jns
jl
push
jmp
iret
roll
ret
mov
pop
push
push
xor
jne
jmp
xorb
jne
jp
mov
adc
dec
push
sbb
data16
jb
jns
ret
sbb
adc
mov
pop
je
cli
fidivrl
nop
mov
jp
dec
repnz
pop
pop
cmpb
add
repnz
push
push
push
test
add
call
xchg
push
cmp
dec
out
je
inc
add
jmp
xchg
xor
mov
pop
call
push
push
clc
add
add
call
jno
sbb
clc
xor
add
jmp
pop
or
pmaxub
das
clc
xchg
jmp
iret
iret
or
lret
je
add
add
cmp
fisubrl
xor
add
push
dec
pop
sub
add
lea
call
add
jmp
pop
jmp
sub
add
or
stos
fwait
bound
jmp
pop
mov
shl
push
push
and
add
call
pop
xchg
mov
inc
jae
out
adc
ljmp
icebp
cld
add
jmp
inc
jmp
pop
push
push
push
and
jne
jmp
in
jo
push
xor
jne
jp
pop
mov
or
rol
cli
jo
jmp
int
loop
inc
repz
test
jb
jns
jno
aaa
les
jns
je
pop
jge
push
mov
jp
dec
and
push
sub
add
pop
xor
push
push
test
lea
lea
call
rcl
xor
pusha
sbb
cwtl
mov
jbe
inc
add
jmp
dec
mov
rorl
jno
sub
jle
pop
push
push
push
and
add
call
cltd
jmp
pop
jmp
mov
sub
add
jmp
jne
jns
sub
mov
stos
mov
loopne
call
push
clc
add
call
mov
nop
xchg
clc
shl
add
jmp
mov
fdivr
adc
mov
xchg
jmp
dec
aam
pop
stos
test
movsb
lock
jmp
push
push
push
and
jne
jmp
add
adc
fcoml
xor
jne
jp
jmp
push
inc
pop
push
xchg
jmp
xor
sbb
push
imulb
jb
jns
mov
repz
pop
cltd
or
jg
sbb
inc
xor
push
mov
in
fimuls
or
addr16
mov
add
clc
push
push
test
inc
lea
call
pop
dec
push
int
adc
roll
daa
mov
pop
push
push
clc
add
sub
mov
nop
mov
jae
rcl
or
add
pop
pop
jmp
pop
jmp
push
clc
sub
mov
mov
jae
rcr
sbb
add
pop
pop
mov
push
push
and
jne
jmp
insb
adc
in
jne
jp
std
cmp
add
jmp
ljmp
jns
and
pop
jns
je
add
shl
sbb
mov
jp
inc
jecxz
and
pop
sub
push
clc
add
call
pop
or
or
clc
shl
add
jmp
leave
incl
adc
xchg
mov
int
clc
xchg
jmp
in
out
xor
mov
out
addl
jmp
push
push
clc
mov
mov
sub
mov
mov
jae
shr
sub
add
pop
pop
push
push
push
push
test
lea
lea
call
xchg
adc
mov
add
jmp
std
pop
jecxz
jle
mov
int3
loopne
mov
pop
call
jmp
push
push
and
add
call
xchg
mov
sbb
or
imull
test
roll
jle,pt
jmp
pop
call
push
push
and
jne
jmp
faddp
gs
int
divb
jp
pop
sahf
lock
jmp
daa
jno
jmp
fsub
jb
jns
push
cmpsl
outsl
dec
jns
je
sbb
in
ljmp
jl
add
pop
push
call
push
clc
sub
mov
mov
jae
rcl
and
add
pop
pop
pop
sub
push
clc
shr
sub
mov
mov
jae
shl
cmp
add
pop
pop
add
push
push
xor
jne
jmp
mov
xor
jne
jp
push
sub
jo
jmp
aas
mov
or
aad
jae
arpl
inc
call
adc
mov
sarb
push
les
add
add
lret
add
add
push
push
test
inc
lea
call
inc
sbb
inc
add
jmp
nop
sub
xlat
sti
out
jo
sub
jle
pop
add
mov
add
push
push
sub
jne
jmp
jecxz
aaa
and
imul
and
addr16
adcl
jo
jmp
mov
cld
pusha
ret
divb
jns
inc
into
fwait
imul
in
pushf
jecxz
ljmp
mov
jp
push
add
add
pop
mov
push
push
and
jne
jmp
pop
push
or
xor
jne
jp
orb
sbb
pusha
ret
data16
jmp
and
iret
jns
jge
insb
xor
addr16
je
push
mov
lds
jge
iret
xchg
xchg
lea
add
pop
push
push
clc
add
call
aad
pop
xchg
clc
shl
shl
adc
add
jmp
mov
fldl
add
add
add
or
add
add
mov
test
push
push
push
clc
sub
mov
nop
mov
jae
shl
and
add
pop
pop
push
push
call
push
push
xor
jne
jmp
ds
cli
xor
shlb
jp
inc
sahf
aam
xchg
cli
pop
ja
inc
jmp
or
xchg
dec
push
insl
jb
jns
scas
mov
xchg
jns
je
sahf
sbb
jmp
add
pop
pop
pop
push
clc
add
call
push
loop
cmp
dec
xchg
clc
sbb
add
jmp
notb
popf
xor
adc
in
or
shl
mov
xchg
jmp
jbe
and
or
push
cmp
fidivrl
rcll
push
xor
jne
jmp
gs
ss
jne
jp
push
or
loope
adc
and
ret
addl
mov
xchg
mov
lds
loopne
sbb
dec
mov
leave
jp
call
in
rolb
lea
pop
push
push
clc
add
call
addr16
lods
jne
cli
ja
pop
and
add
jmp
bnd
jno
jl
loop
jo
xchg
jmp
out
mov
mov
addl
jmp
add
push
push
test
add
call
cmpsb
ret
sub
imull
je
inc
add
jmp
ds
pop
mov
push
push
push
and
add
lea
call
xor
jmp
pop
jmp
loopne
jmp
add
or
xchg
cs
jmp
pop
mov
add
add
push
clc
mov
mov
add
call
inc
pop
imul
add
pop
and
clc
or
rcl
or
add
jmp
addr16
xabort
pop
and
jmp
stos
cwtl
dec
cmpsb
ja
test
addl
jmp
add
push
clc
sub
mov
nop
mov
jae
rcl
adc
add
pop
pop
add
mov
pop
push
clc
ror
sub
mov
mov
jae
ror
test
add
pop
pop
push
push
clc
add
rcr
add
call
lea
jl
add
adc
sbb
shr
add
jmp
int3
sub
clc
sar
shl
xchg
jmp
cmp
fisubrs
add
jnp
push
mov
xlat
call
mov
push
push
xor
jne
jmp
bound
sbb
sbb
divb
jp
jl
icebp
pop
sbb
loopne
popa
jmp
add
in
shlb
mov
int
jns
je
cmp
push
je
sarb
testl
movsb
sahf
add
add
pop
xor
push
push
sub
lea
lea
call
leave
shlb
sbb
je
sub
or
in
test
dec
shrl
add
jmp
pop
push
push
push
push
sub
jne
jmp
mov
inc
jge
divb
jp
xchg
sub
jo
jmp
into
and
iret
push
into
push
jb
jns
or
add
je
in
sbb
mov
mov
jp
out
in
call
cmpsl
add
pop
call
add
push
push
and
jne
jmp
xor
push
repz
outsl
jg
cs
jne
jp
mov
cmp
fwait
adc
jo
jmp
push
pop
mov
push
in
js
dec
jb
jns
cltd
rorl
ja
jns
je
dec
lock
mov
jp
in
xchg
cmpsb
sahf
xor
xchg
fs
pop
call
push
clc
xor
cmp
sub
mov
mov
jae
rol
cmp
add
pop
pop
pushl
movzbl
push
clc
mov
mov
add
call
aas
dec
imul
jne
addb
out
add
add
cmp
shl
add
jmp
sbb
sub
add
dec
and
jmp
inc
fnsave
js
test
addl
jmp
pop
push
push
and
jne
jmp
mov
clc
lret
jne
jp
add
jo
jmp
cmpsb
adc
jb
jns
arpl
mov
in
jns
je
pop
test
xor
mov
add
pop
sub
push
clc
shl
sub
mov
mov
jae
rcr
and
add
pop
pop
push
mov
mov
push
clc
add
xor
add
call
xorb
xor
add
add
jmp
jge
stos
push
out
clc
cmp
add
cmp
xchg
jmp
jns
jb
addl
jmp
shr
push
clc
mov
shl
sub
mov
nop
mov
jae
rcr
sbb
add
pop
pop
add
push
clc
shr
add
call
pusha
shl
nop
push
xchg
clc
xor
or
xor
add
jmp
das
mov
clc
xchg
jmp
and
sbb
notb
add
add
push
push
xor
add
call
es
bound
stos
mov
jmp
arpl
add
jmp
leave
popa
cwtl
fidivrl
out
inc
add
push
clc
sub
ror
sub
mov
mov
jae
rol
or
add
pop
pop
and
push
clc
rol
adc
mov
add
call
stc
aam
cld
mov
push
mov
xchg
clc
ror
mov
add
jmp
test
jl
clc
ror
xchg
jmp
lahf
stos
mov
arpl
addl
jmp
pop
add
call
push
push
xor
inc
add
call
inc
mov
pop
jmp
xor
mov
sbb
jmp
pop
pop
mov
push
push
push
xor
jne
jmp
jbe
sbb
divb
jp
pusha
ret
cmp
add
out
push
lcall
lods
imul
jb
jns
pop
iret
insl
or
je
push
mov
pop
xchg
mov
jp
adc
and
jo
add
pop
add
push
push
push
sub
lea
lea
call
cmpsl
jmp
pop
jmp
xor
jmp
sahf
mov
cmp
pop
push
push
push
and
add
call
push
xchg
aaa
mov
jmp
pop
jmp
xchg
add
jmp
pushl
in
push
call
push
clc
mov
or
add
call
into
push
out
sub
adc
jl
add
sbb
add
jmp
adc
mov
inc
clc
rcr
xchg
jmp
nop
add
and
imul
ficompl
push
push
and
add
call
scas
xchg
movsb
mov
or
data16
add
jmp
into
mov
adc
push
xchg
jmp
pop
mov
push
push
xor
add
call
mov
jmp
pop
jmp
mov
xor
jmp
lods
dec
test
je
fstl
jmp
pop
add
push
clc
mov
sub
xor
add
call
xchg
mov
xchg
clc
sbb
sub
mov
add
jmp
cmp
insb
and
jmp
pop
cmp
push
call
orl
dec
rol
adc
xlat
push
push
outsl
and
add
call
mov
push
fsubs
dec
jmp
pop
jmp
repz
pop
jmp
pop
mov
mov
add
clc
rol
mov
sbb
sub
mov
mov
jae
rcl
sbb
add
pop
pop
push
push
push
push
and
jne
jmp
pop
mov
xor
mov
push
sbb
cld
cmpsb
mov
scas
jge
mov
sbb
jp
psubw
jb
jns
push
mov
sti
das
jns
je
dec
adc
icebp
push
mov
jp
faddl
shr
add
lea
pop
push
push
call
push
clc
sub
mov
nop
mov
jae
rcr
adc
add
pop
pop
pop
push
clc
add
call
sub
testb
and
clc
add
jmp
inc
add
pop
pop
enter
shl
xchg
jmp
out
jae
xchg
add
sbb
xchg
cmp
mov
push
push
push
push
test
add
call
adc
inc
add
jmp
es
fst
push
nop
mov
dec
and
mov
pop
call
push
clc
mov
shl
xor
sub
mov
nop
mov
jae
shr
xor
add
pop
pop
add
add
push
push
clc
shl
add
call
dec
ljmp
mov
shl
add
jmp
inc
mov
xor
sbb
xchg
jmp
cmpsb
nop
cmp
int
addl
jmp
push
push
push
clc
xor
sbb
add
call
mov
filds
xchg
clc
shr
add
jmp
je
mov
adc
mov
dec
and
jmp
add
imul
fldl
cmp
jmp
call
push
push
xor
add
call
adc
jmp
jp
mov
add
or
in
sbb
jmp
pop
pop
call
mov
push
push
sub
inc
lea
call
dec
test
mov
pushf
into
jmp
pop
jmp
iret
cld
adc
sbb
jmp
jecxz
adc
arpl
or
jmp
pop
add
push
clc
sub
mov
nop
mov
jae
shl
test
add
pop
pop
mov
push
clc
mov
sub
add
call
sub
pop
and
clc
sbb
add
jmp
add
pusha
nop
leave
enter
dec
cmp
shr
xchg
jmp
rorb
and
addl
jmp
push
push
clc
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
push
push
push
push
test
add
call
ret
lahf
movd
inc
add
jmp
sbbb
xor
mov
pop
call
mov
push
push
test
add
call
xor
inc
add
jmp
cwtl
mov
xor
jp
pop
add
mov
add
push
push
test
add
lea
call
fwait
mov
ret
add
jmp
jle
push
lock
mov
je
pop
push
push
push
push
push
sub
jne
jmp
mov
inc
xchg
aam
outsb
xor
jne
jp
loop
push
ds
jo
jmp
xchg
fs
xor
sti
out
mov
jns
fidivl
je
jne
push
stos
mov
cmp
mov
jp
dec
lea
dec
sbb
scas
ja
mov
add
pop
call
pop
push
clc
xor
add
call
sarb
scas
and
into
adc
mov
add
sub
adc
add
jmp
inc
ss
sti
rcr
sbb
testl
jmp
mov
dec
popf
roll
dec
jmp
mov
push
call
push
push
test
add
call
adc
sub
fcoms
lods
clc
jle
inc
add
jmp
push
pop
mov
pop
mov
xor
push
clc
add
sar
sub
mov
mov
jae
shl
add
add
pop
pop
push
push
push
test
add
add
call
xor
aad
cli
mov
mov
aad
je
inc
add
jmp
xor
jle
pop
push
call
push
push
xor
add
call
add
pop
jmp
imul
dec
sub
add
jmp
sub
dec
sub
out
pop
push
clc
mov
add
call
dec
or
lahf
aas
fs
xchg
clc
rol
add
jmp
jg
push
hlt
ds
clc
xchg
jmp
add
add
cmp
jmp
mov
pop
push
push
test
add
call
jne
adc
inc
add
jmp
movsl
cmpsb
pop
loope
jge
fwait
addr16
mov
sarb
pop
pop
pop
push
push
test
add
call
and
add
ret
add
jmp
fdivrl
shrl
mov
pop
pop
push
push
test
lea
lea
call
inc
unpckhps
adc
xchg
inc
add
jmp
shlb
jbe
pop
push
push
push
push
clc
mov
cmp
shr
sub
mov
mov
jae
rol
sbb
add
pop
pop
push
push
clc
xor
mov
cmp
add
call
ja
push
xor
xchg
clc
add
jmp
dec
repz
sub
add
add
iret
add
pop
add
add
jecxz
or
and
data16
jmp
push
ret
push
push
push
and
jne
jmp
push
lcall
sbb
mov
jo
jmp
mov
sub
fwait
dec
jb
jns
negl
jecxz
adc
and
or
add
add
mov
push
push
test
lea
add
call
lods
sarl
rcll
push
pop
call
pop
push
sub
inc
add
jmp
pop
rcr
add
cmpb
add
push
clc
xor
sar
sub
mov
nop
mov
jae
rcl
test
add
pop
pop
push
push
xor
push
clc
add
call
inc
adc
mov
insb
and
clc
xor
add
mov
add
jmp
mov
in
fdivr
adc
xchg
jmp
mov
and
dec
jmp
inc
clc
mov
mov
push
push
test
add
add
call
sbb
ret
add
jmp
ret
lods
es
fstpt
pop
mov
push
clc
add
call
inc
mov
lods
mov
pop
and
clc
add
add
jmp
fcmovbe
xor
xlat
push
jae
xchg
jmp
out
add
cmp
add
add
add
fisttpll
or
clc
sub
mov
mov
jae
sar
and
add
pop
pop
mov
push
clc
xor
or
or
sub
mov
mov
jae
shl
sbb
add
pop
pop
mov
jmp
push
clc
cmp
sub
mov
nop
mov
jae
shr
and
add
pop
pop
pushl
popl
push
clc
mov
sub
mov
nop
mov
jae
shl
and
add
pop
pop
add
push
push
test
inc
lea
call
sub
or
mov
ret
add
or
jno
or
cmp
sarb
pop
pushl
popl
push
push
test
add
call
rorl
pop
jg
data16
inc
add
jmp
in
push
lahf
fdivr
rorb
mov
in
cltd
aaa
js
mov
pop
add
push
clc
sar
sub
mov
nop
mov
jae
ror
sub
add
pop
pop
pushl
popl
push
push
sub
jne
jmp
fisubs
inc
enter
inc
jp
or
jne
repz
jmp
lods
popf
jecxz
aas
or
jns
dec
sahf
leave
xor
sbb
jns
je
xchg
mov
jp
sbbl
push
mov
loope
add
pop
add
pushl
popl
push
push
and
jne
jmp
sbb
repnz
lea
fistpll
fcompp
loope
jo
jmp
pop
add
mov
jp
sub
push
xor
fwait
ret
ljmp
mov
jp
xchg
lahf
adc
and
movb
addr16
or
sub
add
call
jns
ljmp
pop
jmp
jnp
outsl
lret
mov
add
jmp
pop
pushl
popl
push
push
xor
add
lea
call
sub
adc
fcmovbe
fwait
jmp
pop
jmp
mov
or
add
movb
dec
pusha
and
test
lea
add
call
mov
lcall
cmp
divb
inc
add
jmp
xor
mov
into
mov
mov
pop
mov
add
push
push
clc
sbb
add
call
pop
jmp
dec
mov
clc
cmp
add
jmp
sahf
stos
push
aad
clc
xor
or
xchg
jmp
shl
movsb
daa
in
jl
leave
addl
jmp
pushl
call
push
push
test
add
call
repz
es
mov
mov
inc
add
jmp
out
enter
sub
sub
jle
pop
push
push
push
xor
add
call
cmc
jbe
mov
jmp
pop
jmp
shl
dec
sarl
loope
or
add
imul
hlt
add
test
add
add
cmp
out
lds
pop
loopne
les
add
call
xchg
jbe
inc
add
jmp
xor
mov
pop
push
push
push
clc
ror
add
call
adc
xchg
jne
xor
xchg
clc
shl
or
mov
add
jmp
daa
and
ret
sbb
xchg
jmp
fsubl
addl
jmp
call
push
push
and
add
lea
call
mov
movsb
sti
xchg
sub
pop
jmp
jl
mov
cmpsb
xchg
push
ret
add
mov
jne
push
clc
add
add
call
pop
jne
jecxz
add
xchg
clc
mov
xor
add
jmp
push
sahf
sub
xchg
mov
mov
xchg
jmp
mov
add
jp
add
fiaddl
test
add
add
inc
in
push
clc
mov
mov
add
call
mov
jnp
push
test
clc
sbb
or
add
jmp
ss
dec
clc
xor
mov
xchg
jmp
and
mov
jb
mov
add
test
stos
xchg
aam
loopne
push
push
test
add
lea
call
aam
sub
bound
sti
dec
jo
repz
inc
add
jmp
sub
inc
rorl
sbb
aam
lahf
cmp
pop
push
push
push
push
clc
rcr
add
call
or
or
je
add
add
jmp
sub
jno
jno
push
clc
shl
mov
xchg
jmp
mov
add
ss
shrb
call
mov
push
clc
sub
mov
mov
jae
shl
add
add
pop
pop
push
push
call
push
push
test
add
call
push
iret
mov
jle
inc
add
jmp
int
mov
pop
pushl
call
push
clc
adc
add
call
sbb
mov
and
clc
sub
add
jmp
mov
dec
ljmp
add
or
add
jbe
push
sbb
jp
addl
jmp
mov
sub
push
clc
add
call
push
arpl
mov
insb
and
clc
cmp
add
jmp
sbbb
and
adc
push
clc
xchg
jmp
in
jne
test
addl
jmp
mov
push
push
and
add
call
pop
add
push
pop
jmp
in
aas
xorb
movl
jo
call
pop
add
push
push
push
clc
sub
mov
nop
mov
jae
sar
adc
add
pop
pop
pushl
call
push
clc
or
ror
sub
mov
nop
mov
jae
shr
test
add
pop
pop
push
push
push
push
push
xor
jne
jmp
iret
push
jmp
pushl
jp
mov
xchg
jne
jmp
ffree
mov
nop
test
or
inc
loope
jns
je
add
xlat
mov
jp
dec
in
andl
in
or
add
pop
call
popa
mov
push
push
and
inc
add
call
xor
jmp
pop
jmp
push
add
jmp
push
fiaddl
jmp
pop
add
pushl
push
clc
xor
sbb
sub
mov
mov
jae
shl
adc
add
pop
pop
pushl
push
call
push
clc
rcr
xor
shl
sub
mov
mov
jae
rol
test
add
pop
pop
add
decl
mov
push
push
xor
jne
jmp
in
add
in
nop
in
sub
xor
jne
jp
iret
xor
and
stc
daa
adc
bnd
ss
mov
jns
call
jno
jmp
out
aaa
xor
mov
jp
ret
cld
inc
cmpsl
lret
xchg
les
add
pop
or
jne
push
push
test
add
call
cmp
aad
jg
movsb
sbb
add
rolb
fnstsw
xor
adc
mov
pop
pop
pop
leave
push
push
xor
jne
jmp
adcb
xor
jne
jp
adc
dec
mov
jmp
mov
jb
jns
push
nop
cld
fstpl
sbb
jns
je
test
jns
in
jecxz
fstpt
fidivl
lea
add
or
push
mov
push
push
test
lea
add
call
scas
dec
mov
cwtl
lcall
les
or
fcomps
mov
fstpt
pop
push
mov
push
push
xor
jne
jmp
jno
push
sar
mov
mov
popf
jp
dec
push
pusha
jo
jmp
rclb
xchg
jns
aam
es
add
je
ret
mov
jg
cld
dec
or
faddl
add
dec
or
add
push
clc
ror
mov
add
call
lret
inc
popa
pop
outsl
jae
ror
and
xchg
clc
adc
add
jmp
shll
push
jp
pop
fs
clc
xchg
jmp
ljmp
mov
addl
jmp
not
push
clc
shl
sub
mov
mov
jae
sar
add
add
pop
pop
and
push
clc
cmp
adc
add
call
xchg
push
mov
push
and
clc
add
jmp
cmp
push
lods
loope
ja
mov
shl
sub
xchg
jmp
inc
mov
mov
add
jl
sbb
push
test
add
call
test
jbe
add
rolb
mov
lock
ret
push
push
sub
jne
jmp
pop
test
idiv
cmpsb
xor
adc
pushl
divb
jp
out
test
es
jmp
nop
icebp
cmp
jns
dec
and
test
icebp
jns
je
push
ds
sub
bound
add
std
add
pop
push
push
push
xor
lea
add
call
pop
insl
aam
or
jmp
pop
jmp
push
add
jmp
xchg
ret
jo
loope
mov
add
push
clc
add
call
jecxz
xorl
clc
xor
add
jmp
lahf
lods
aaa
pop
stc
cvttps2pi
mov
xchg
iret
clc
add
xchg
jmp
mov
mov
cmp
adc
push
push
push
test
add
add
call
insb
je
inc
add
jmp
adc
mov
mov
pop
mov
push
push
test
add
add
call
cs
cltd
popf
je
inc
add
jmp
lcall
sub
je
pop
mov
add
mov
push
clc
add
call
cmp
add
xchg
clc
add
jmp
sbb
mov
pop
clc
sbb
xchg
jmp
inc
jbe
xchg
adc
sub
cs
jmp
test
je
push
push
test
add
call
mov
divb
inc
add
jmp
loop,pn
aam
mov
pop
add
mov
push
push
push
and
inc
lea
call
and
dec
icebp
or
pop
jmp
xchg
push
xchg
pop
mov
ret
or
add
add
jecxz
push
mov
xor
push
push
and
inc
add
call
push
test
fstpt
mov
aas
xchg
jmp
pop
jmp
nop
lret
sbb
gs
lds
jmp
adcl
pushl
push
push
test
add
call
mov
test
and
add
lds
cmp
in
dec
xor
mov
pop
call
call
push
push
and
add
call
hlt
js
push
jg
dec
jmp
pop
jmp
ljmp
push
xchg
mov
jno
jecxz
test
jne
push
push
push
push
sub
lea
lea
call
in
fdivrs
add
add
jmp
pop
dec
or
outsb
aam
jmp
pop
mov
push
push
and
add
add
call
popf
out
ret
jns
sbb
pop
push
ss
add
or
jmp
mov
loope
xor
push
push
test
lea
lea
call
xchg
test
add
jmp
into
dec
sbb
jno
sub
mov
pop
pushl
call
push
push
test
add
call
and
shlb
add
jmp
adc
cmc
xor
arpl
xchg
sbb
and
mov
pop
call
mov
movl
push
push
and
jne
jmp
popa
and
sbb
shlb
jp
inc
aaa
ds
jo
jmp
sub
enter
jns
das
sahf
xchg
jns
je
fwait
mov
in
in
inc
sbb
add
mov
push
clc
add
call
sbbl
cmp
jle
xchg
clc
sar
add
jmp
xor
gs
mov
mov
xchg
jmp
and
add
sub
mov
test
jne
push
clc
mov
cmp
shl
add
call
leave
push
jae
aad
test
sbb
out
xchg
clc
mov
add
jmp
daa
jmp
xchg
jmp
push
inc
scas
and
or
mov
push
push
xor
add
add
call
lret
jmp
pop
jmp
divps
and
ds
aam
rolb
push
mov
test
sbb
add
add
push
push
and
jne
jmp
push
pushl
jp
mov
jo
jmp
jne
mov
les
or
cmpsb
and
pop
bound
inc
jns
je
stos
js
cltd
sub
xor
mov
jp
imul
mov
push
push
xor
jne
jmp
lds
clc
clc
xor
jne
jp
lret
cmpl
cmp
pop
jmp
mov
cmp
mov
adc
out
push
sub
fisubrs
jns
je
fldl
adc
mov
shll
jp
and
sub
lret
inc
outsb
dec
add
pop
mov
add
add
push
clc
sub
mov
mov
jae
rcl
adc
add
pop
pop
test
je
test
jne
push
clc
mov
add
call
jg
jnp
xchg
clc
add
jmp
jecxz
sar
clc
sar
xchg
jmp
cmp
mov
add
insl
and
push
push
xor
inc
add
call
ret
jne
push
pop
jmp
popf
cmpsl
add
jmp
shlb
add
inc
push
clc
cmp
mov
sub
mov
nop
mov
jae
shl
and
add
pop
pop
inc
push
push
push
test
add
call
dec
adc
icebp
divb
icebp
dec
je
inc
add
jmp
lods
dec
mov
sub
jp
pop
and
push
push
clc
sbb
add
call
mov
add
xchg
xor
pop
and
clc
add
add
jmp
adc
dec
filds
addr16
mov
jne
clc
xchg
jmp
lret
inc
xor
add
jnp
mov
jmp
pushl
push
clc
xor
add
call
pop
jmp
jge
cmp
std
xchg
clc
shl
add
jmp
es
pop
xchg
clc
mov
sbb
xchg
jmp
or
lds
fs
fisubrl
rcll
push
clc
add
sub
mov
mov
jae
shl
add
add
pop
pop
mov
push
push
sub
lea
add
call
mov
jmp
pop
jmp
pop
jmp
xchg
filds
js
mov
jmp
pop
xor
pushl
push
clc
rol
rol
mov
sub
mov
mov
jae
rol
cmp
add
pop
pop
call
call
pop
push
push
xor
jne
jmp
aas
jae
xor
loopne
xor
jne
jp
imul
push
jo
jmp
jne
out
and
push
clc
jno
cmpsl
jb
jns
fbld
je
sub
xor
mov
jp
imul
add
add
add
pop
test
jne
push
clc
adc
mov
mov
add
call
shrb
fidivs
scas
xchg
clc
add
jmp
inc
sbb
cmp
stc
xor
fdivr
mov
sub
adc
xchg
jmp
sub
cmp
xchg
jmp
test
jne
xor
and
push
push
test
inc
lea
call
nop
mov
sbb
cmpl
inc
mov
inc
add
jmp
lret
fidivl
xchg
ret
mov
xchg
je
mov
je
pop
mov
push
push
test
add
call
fisttps
dec
fwait
add
fbld
add
ret
add
jmp
sbb
inc
loop
mov
jg
enter
mov
pop
cmp
jne
push
mov
push
push
and
add
call
xorb
pop
jmp
xchg
xchg
ljmp
add
xchg
xlat
addr16
pop
dec
push
push
test
add
call
push
sti
roll
cmpl
add
jmp
ja
dec
hlt
mov
sarb
pop
shl
push
clc
sub
mov
mov
jae
ror
add
add
pop
pop
mov
push
clc
sub
mov
nop
mov
jae
shl
and
add
pop
pop
mov
push
push
sub
jne
jmp
repz
inc
inc
shll
shlb
jp
scas
testl
sbb
mov
jns
mov
mulb
mov
ljmp
scas
cmp
mov
scas
inc
pop
sbb
fdivp
insb
sbb
add
pop
mov
push
push
test
lea
lea
call
dec
stos
scas
rcll
icebp
jle
inc
add
jmp
mov
cmp
xor
xor
jbe
pop
add
mov
add
push
push
xor
jne
jmp
push
push
ss
mov
test
lcall
jp
xchg
adcb
jo
jmp
insb
cmp
mov
cmpsl
jns
je
mov
out
insb
mov
jp
std
lds
add
jmp
push
push
xor
jne
jmp
mov
call
xor
jne
jp
sub
sub
js
mov
and
adc
jb
jns
aas
mov
sahf
dec
jns
je
and
fisubl
dec
inc
aad
mov
iret
das
fsubr
add
lea
pop
xor
pop
push
push
and
jne
jmp
sbbb
or
shlb
sbb
out
jmp
in
icebp
mov
add
cmp
inc
jns
icebp
and
out
mov
sub
mov
in
jp
cmpsl
and
sbb
mov
pop
push
push
test
add
call
loop
insb
inc
and
or
cmp
add
jmp
or
jmp
or
int3
push
cmpl
pop
push
push
sub
jne
jmp
aad
mov
or
in
jne
jp
roll
mov
jo
jmp
xchg
cmc
bound
test
jb
jns
push
out
pop
repz
jns
je
out
int
sarb
sbb
inc
add
pop
leave
push
push
test
add
call
out
or
add
rolb
jns
mov
pop
ret
push
lea
push
clc
add
call
cmp
sti
popa
xchg
clc
add
jmp
and
mov
adc
xchg
jae
xchg
jmp
xchg
mov
movsb
mov
adc
js
adc
jmp
push
push
push
push
push
and
lea
lea
call
push
dec
or
jmp
pop
jmp
push
add
jmp
pop
push
push
clc
xor
adc
mov
add
call
rclb
cmp
imulb
clc
shr
shr
add
jmp
jb
jnp
pop
sub
and
jmp
daa
sarl
adc
lret
clc
addl
jmp
call
pop
mov
push
clc
adc
add
call
shrl
sub
adc
or
add
jmp
gs
pop
cmp
out
add
and
jmp
gs
adc
and
cmp
fildl
sub
mov
mov
jae
rol
xor
add
pop
pop
lea
push
pushl
push
push
and
inc
lea
call
sbb
js
mov
sbb
or
lock
es
loopne
enter
jmp
mov
add
pop
and
jmp
pop
push
push
call
push
push
and
jne
jmp
into
push
pop
dec
mov
jne
leave
jne
jp
push
iret
xorb
pushl
jmp
and
and
jmp
scas
jns
shl
cmp
les
je
bound
cmp
lods
mov
jp
add
mov
movsb
and
add
add
les
inc
clc
add
xor
lods
sub
add
call
popl
or
inc
stc
lods
jmp
clc
sbb
or
xor
add
jmp
jge
xor
loop
mov
cmp
add
xchg
jmp
scas
push
sbb
in
addl
jmp
jmp
add
mov
push
clc
sbb
add
call
cld
xchg
mov
add
cmp
sbb
add
jmp
nop
testl
xchg
jmp
fcmove
sub
add
mov
cmp
jmp
jmp
pop
pop
push
push
and
add
call
cld
xlat
jae
scas
sub
call
jmp
mov
mov
add
jmp
add
dec
and
ret
xchg
jne
mov
loop
pop
push
clc
mov
add
call
pop
mov
xor
jae
xchg
clc
sbb
cmp
add
jmp
push
in
lock
xchg
jmp
lock
jmp
leave
push
push
xor
add
call
xor
sbb
jmp
stos
dec
adc
fimuls
ss
testl
jmp
pop
ret
push
push
push
xor
jne
jmp
pop
pop
adc
add
aad
lret
sub
in
jne
jp
cwtl
dec
dec
out
xchg
fwait
sbb
or
sbb
clc
lds
jb
jns
mov
jns
je
in
cmpsb
mov
jp
add
adc
pop
mov
call
mov
push
push
test
lea
lea
call
xor
fidivs
shll
int3
mov
loopne
jg
add
lds
inc
flds
inc
mov
pop
xor
push
push
push
push
sub
jne
jmp
loop
fdivrs
pop
xor
jne
jp
and
and
push
mov
shlb
jns
shll
jns
je
jne
xor
leave
jp
dec
add
and
add
pop
call
push
push
and
add
call
subb
pop
jmp
pop
jmp
lods
cmp
movsl
jno
xor
lds
aas
add
mov
sub
jmp
pop
pushl
pushl
push
clc
sub
add
add
call
fdivl
xchg
push
data16
in
add
add
mov
mov
add
jmp
fmulp
fldz
divl
xchg
jmp
rcl
mov
addl
jmp
pushl
pushl
call
push
clc
sbb
add
call
icebp
sub
mov
pop
adc
add
xor
or
rcr
add
jmp
pop
sub
xchg
jmp
loope
cld
cmpsb
adc
adc
imul
cmp
fcmove
push
push
test
add
call
pushf
sbb
movl
sbb
mov
pop
ret
push
clc
sbb
xor
mov
add
call
jmp
mov
dec
xchg
clc
sbb
add
jmp
ret
or
mov
sar
rcr
xchg
jmp
sub
and
nop
mov
mov
call
push
push
xor
lea
lea
call
popa
xchg
mov
pop
jmp
and
and
add
jmp
add
push
mov
xor
push
clc
mov
add
call
and
dec
sbb
sbb
sbb
sbb
add
jmp
test
xlat
mov
sub
add
or
add
mov
sub
and
dec
icebp
push
jmp
push
push
call
push
clc
sub
mov
nop
mov
jae
shl
add
add
pop
pop
pop
push
clc
ror
add
call
xor
and
clc
sub
add
jmp
push
dec
mov
clc
mov
xchg
jmp
jg
push
in
xchg
arpl
bound
fdivrp
jne
pushl
pushl
push
push
test
lea
add
call
mov
xchg
inc
add
jmp
or
jnp
dec
mov
jns
loopne
xor
jle
pop
pushl
call
push
push
and
jne
jmp
into
mov
js
leave
jne
jp
push
sub
lds
and
sbb
pop
fsub
push
movsl
jb
jns
int
or
mov
insb
bound
je
inc
fsubrl
lods
in
sub
sarb
fistps
adc
push
lea
add
pop
leave
ret
push
push
clc
sub
mov
nop
mov
jae
ror
xor
add
pop
pop
mov
push
push
sub
jne
jmp
sbbw
sbb
push
mov
jp
inc
imul
jo
jmp
stos
sub
xchg
mov
cmp
test
je
aad
push
dec
mov
inc
push
xchg
adc
repnz
mov
jge
rorb
add
ljmp
push
mov
roll
add
add
add
or
add
lds
pop
rcrl
and
clc
sub
add
jmp
fisubs
testb
mov
rol
xchg
jmp
iret
xor
mov
and
cmp
js
fnstcw
xor
push
clc
sub
mov
mov
jae
shl
add
add
pop
pop
push
push
push
sub
jne
jmp
in
inc
push
cwtl
jae
ret
sub
jp
es
lock
pop
filds
cld
es
jo
jmp
jne
sub
jns
mov
out
mov
xor
in
jg
mov
jp
push
sub
les
add
pop
push
push
clc
rol
sub
add
call
push
xor
mov
xchg
clc
mov
mov
adc
add
jmp
rcl
push
pop
in
iret
sbb
push
and
jmp
lea
xchg
rolb
jo
aad
jp
add
pushl
push
push
test
add
add
call
addr16
inc
add
jmp
jo
xchg
xor
push
mov
mov
pop
pushl
push
push
test
add
call
enter
int
mov
and
add
ret
add
add
cmc
mov
pop
pushl
push
push
test
add
call
mov
inc
add
jmp
fcmove
or
data16
dec
sbb
cmp
popa
mov
pop
call
leave
push
push
test
add
call
add
push
inc
ret
jle
push
ja
ja
jle
inc
add
jmp
insl
lea
xor
repz
pop
ret
push
push
push
and
jne
jmp
and
pop
jmp
xor
jne
jp
pop
push
and
add
mov
popa
jb
jns
pop
cltd
pop
aam
gs
mov
jg
adc
jmp
das
jae
or
scas
repnz
leave
jp
daa
cmc
add
pop
mov
push
push
and
add
lea
call
movsb
inc
jp
js
jge
jmp
pop
jmp
sub
push
xchg
or
add
cmp
cld
push
push
clc
add
call
in
jns
mov
xchg
clc
mov
add
jmp
in
dec
xor
cltd
xchg
stos
clc
adc
xchg
jmp
in
push
inc
fisttps
and
addl
jmp
mov
push
push
sub
jne
jmp
movsb
ljmp
loop
xor
jne
jp
mov
ret
adc
xor
jmp
xchg
adc
push
clc
jb
jns
sbb
fwait
cs
xchg
cmpl
out
pop
inc
mov
loop
mov
jp
xchg
add
lea
lea
pop
mov
push
clc
add
call
popf
ljmp
sar
add
jmp
mov
es
mov
sbb
mov
xchg
jmp
xor
pushf
imul
jb
addl
jmp
add
push
push
push
push
test
add
lea
call
cmpsb
mov
jp
inc
add
jmp
mov
lods
jae
inc
pop
push
jle
mov
pop
lea
push
push
push
xor
jne
jmp
adc
mov
shlb
jp
or
test
jmp
ss
inc
cld
jle
pop
clc
jb
jns
ja
cltd
in
lret
jno
jns
je
imul
shr
stos
loop
fs
lea
pop
push
push
pushl
push
push
and
add
call
loop
adc
push
in
xchg
add
lds
jb
jecxz
call
push
push
test
lea
lea
call
int3
dec
or
push
sub
lcall
add
jmp
inc
sbb
leave
jbe
pop
pop
pop
push
push
clc
sub
mov
nop
mov
jae
shl
add
add
pop
pop
push
push
clc
sub
mov
adc
add
call
sbb
test
mov
pop
xor
add
add
jmp
xlat
iret
xchg
jmp
stos
and
mov
xchg
dec
addl
jmp
push
push
push
and
jne
jmp
pop
and
xchg
movsb
inc
sbb
xor
jne
jp
outsb
push
mov
js
fldl
jmp
fidivs
cmp
fsubrs
insl
jns
and
je
insb
inc
testl
push
mov
add
pop
call
push
clc
add
call
mov
sub
mov
mov
add
jmp
mov
jge
clc
xor
rcr
xchg
jmp
cmpsb
mov
mov
dec
xor
push
push
inc
push
push
test
add
call
test
mov
pop
pusha
xor
xor
insb
jle
inc
add
jmp
or
jo
mov
in
sbb
scas
mov
pop
pop
leave
ret
push
clc
xor
add
sub
mov
mov
jae
shl
xor
add
pop
pop
push
mov
push
push
push
sub
jne
jmp
out
jae
mov
jno
pop
xor
jne
jp
push
enter
and
pop
jo
jmp
dec
loop
jecxz
in
jbe
jb
jns
rolb
dec
pusha
pop
sbb
jae
or
les
mov
jp
push
inc
cmp
add
lea
pop
push
push
mov
push
push
xor
jne
jmp
mov
cmp
popf
xor
jne
jp
js
mov
sub
jge
in
push
in
orl
push
jb
jns
cmpsl
or
lods
lods
adc
jmp
mov
xor
add
mov
push
push
test
add
call
and
add
jmp
mov
sub
mov
pop
xor
test
jbe
push
clc
add
call
sbb
pop
push
enter
and
clc
sar
rcr
add
jmp
sub
sbb
and
jmp
fcoms
inc
lock
mov
cmp
mov
mov
push
push
and
jne
jmp
adc
je
pushl
jp
add
arpl
jo
jmp
pop
data16
jb
xchg
jns
ds
das
lds
dec
jns
je
xchg
pusha
xchg
shlb
push
lcall
idivb
rcrl
sbb
add
and
add
lea
pop
mov
add
add
push
clc
rol
xor
add
call
xor
hlt
mov
je
add
add
jmp
mov
inc
clc
cmp
mov
xchg
jmp
cwtl
pop
enter
ret
addl
jmp
add
cmp
jb
pop
push
push
and
add
call
mov
adc
jno
push
pop
jmp
fldenv
hlt
add
jmp
int3
movb
jecxz
pop
push
push
and
jne
jmp
dec
fs
mov
jmp
push
lock
jne
jp
or
aad
pop
jmp
mov
xchg
jnp
xchg
mov
jb
jns
inc
mov
in
out
dec
inc
jle
idivb
pop
xchg
cmpsb
cmp
pop
leave
ret
push
clc
shl
mov
sub
mov
nop
mov
jae
rcl
and
add
pop
pop
push
mov
push
push
clc
mov
sub
mov
nop
mov
jae
rcl
and
add
pop
pop
mov
push
push
and
add
lea
call
add
int
sbb
arpl
les
jmp
pop
jmp
mov
sahf
xor
je
add
jmp
inc
orb
pop
jmp
pop
add
push
clc
sub
mov
nop
mov
jae
shl
add
add
pop
pop
mov
pop
push
clc
mov
add
call
push
jo
adc
mov
and
clc
add
jmp
pop
imul
add
or
add
pop
fs
push
jnp
sub
insl
and
aad
ret
push
push
push
test
add
call
and
hlt
sub
adc
xchg
out
add
ret
add
jmp
popa
and
cmc
xchg
dec
fdivrs
pop
mov
push
push
push
push
and
jne
jmp
fwait
jb
pop
or
xor
divb
jp
xchg
stos
popf
or
jo
jmp
sbb
stc
xchg
std
das
xor
mov
loope
mov
jge
xor
xor
shl
jns
je
repz
dec
mov
jp
retw
shl
cmp
lea
inc
das
add
pop
mov
push
push
sub
jne
jmp
jo
xchg
ds
iret
shll
sbb
jp
pop
negb
jo
jmp
lcall
sbb
jns
push
jl
lret
daa
adc
out
jo
xchg
jns
je
mov
jle
mov
sub
mov
jp
sbb
push
xchg
or
les
add
add
inc
or
push
and
add
lea
call
xor
jmp
popf
adc
test
add
add
adc
mov
mov
push
clc
add
call
movl
add
jmp
jp
les
mov
or
xchg
jmp
adc
jecxz
js
add
sbb
fucompp
cmp
add
mov
push
push
test
add
call
lcall
cmpsl
sub
dec
aas
test
inc
add
jmp
mov
leave
je
pop
cmp
jne
push
clc
or
or
sub
mov
mov
jae
shl
sub
add
pop
pop
mov
push
push
and
jne
jmp
bound
stos
imul
xor
jne
jp
xchg
xor
outsl
popf
fnstsw
jo
jmp
mov
xor
inc
mov
pop
jb
jns
rcl
push
mov
xlat
jp
test
lcall
shrb
lds
mov
jp
or
mov
fs
lea
pop
mov
pop
pop
push
push
xor
lea
add
call
xchg
adc
pop
jmp
pop
jmp
jmp
xor
mov
push
adc
jecxz
leave
push
push
test
add
add
call
hlt
jge
fistpll
push
jbe
inc
add
jmp
xor
xchg
in
loopne
test
xor
jle
pop
ret
push
push
push
test
add
call
or
mov
pushf
sub
je
inc
add
jmp
out
ret
cmpsb
or
xor
xchg
sub
jne
xor
je
pop
mov
add
push
push
test
add
call
aaa
pop
push
jge
add
ret
add
jmp
popf
dec
mov
xchg
xor
pop
push
push
push
push
test
add
lea
call
add
jnp
add
jmp
imul
add
jmp
in
fmul
stos
cmp
xor
or
pop
push
push
push
and
jne
jmp
jns
sti
test
sbb
jne
jp
adc
mov
loop
jo
jmp
dec
repnz
jb
jns
cld
dec
xlat
add
ljmp
jmp
into
mov
sub
add
call
mov
xor
push
clc
add
call
pop
scas
push
mov
cmp
loop
aam
mov
pop
and
clc
mov
add
jmp
jecxz
test
rcr
xor
mov
xchg
jmp
aaa
bound
addl
addl
jmp
push
push
call
push
clc
or
add
add
call
rorb
xchg
clc
mov
add
jmp
mov
xchg
mov
in
xchg
jmp
and
add
push
stc
cmp
jmp
mov
xor
mov
push
push
test
lea
add
call
xorb
add
jmp
fwait
xchg
shrl
sbb
pop
test
je
or
test
je
push
clc
mov
sub
sub
mov
mov
jae
sar
and
add
pop
pop
or
push
clc
add
mov
cmp
sub
mov
nop
mov
jae
rol
test
add
pop
pop
test
je
push
clc
sub
mov
nop
mov
jae
shr
test
add
pop
pop
or
push
clc
mov
xor
add
call
enter
ljmp
add
jmp
pop
daa
loope
adc
push
clc
xchg
jmp
jecxz
and
addl
jmp
cmp
jne
push
push
and
add
call
movsl
xor
mov
pop
jmp
js
cmc
loope
sub
les
jmp
in
jg
dec
enter
pop
mov
push
push
sub
jne
jmp
stos
pop
fidivs
insb
adc
jp
lahf
cli
cld
lea
sub
add
jmp
mov
daa
lods
mov
fmull
test
pop
test
jmp
jns
je
ret
jge
out
mov
mov
or
aas
jge
fadds
icebp
xor
pop
jmp
cmp
jne
mov
push
clc
or
sub
mov
mov
jae
shr
and
add
pop
pop
jmp
cmp
jne
push
clc
rcr
add
call
jmp
nop
push
cmc
or
loope
je
add
mov
sbb
add
jmp
jmp
sahf
clc
add
xor
xchg
jmp
lods
push
push
or
repnz
lock
jmp
mov
push
push
and
jne
jmp
mov
fidivrl
dec
inc
test
xchg
lret
push
jmp
mov
push
mulps
lds
loop
pop
jns
je
pop
sbb
in
jno
rol
mov
jp
insb
xor
les
add
pop
jmp
cmp
jne
push
push
sub
add
call
scas
pop
movsl
push
fwait
ljmp
jmp
adc
xor
std
add
jmp
push
jl
in
mov
push
push
test
add
call
das
cltd
add
dec
and
je
inc
add
jmp
jbe
mov
push
aam
mov
pop
jmp
push
clc
sar
sbb
sar
sub
mov
mov
jae
shl
add
add
pop
pop
cmp
jne
push
clc
rcr
sub
mov
nop
mov
jae
ror
xor
add
pop
pop
mov
push
push
and
add
call
in
jmp
pop
jmp
in
out
hlt
inc
sbb
je
add
jmp
es
jmp
pop
sub
push
push
and
jne
jmp
addb
xor
jne
jp
ljmp
pop
jmp
mov
adc
and
mov
loopne
jl
jns
je
xchg
xchg
fnsave
in
call
add
add
lea
push
clc
mov
sbb
add
call
sub
and
clc
add
jmp
xchg
mov
popl
dec
add
xchg
jmp
mov
ja
fiaddl
add
daa
cmp
push
push
pushl
push
push
and
jne
jmp
fsts
cltd
mov
mov
mov
jp
cltd
pusha
lret
pusha
push
adc
imul
in
pop
push
push
jns
or
pop
xchg
es
mov
xchg
ss
jns
je
adc
jp
out
sti
cmpb
nop
add
pop
pushl
call
add
push
push
xor
add
call
dec
dec
je
push
loop
jmp
pop
jmp
clc
imul
pop
xchg
arpl
ss
jnp
and
out
pop
push
clc
mov
sar
sub
mov
mov
jae
sar
cmp
add
pop
pop
pop
push
push
and
jne
jmp
pop
xchg
mov
inc
divb
jp
inc
push
mov
test
jmp
imul
lea
loop
cmpsb
jns
je
sbb
inc
jmp
fistps
dec
enter
in
rol
cs
xor
add
add
leave
ret
push
clc
shl
sbb
adc
add
call
std
daa
lock
clc
add
jmp
int3
pop
xchg
push
fnstenv
add
xchg
jmp
fdivl
addl
jmp
push
push
push
and
add
call
imul
mov
add
jmp
sbb
pop
mov
push
push
push
test
lea
add
call
pop
fcoml
jp
inc
add
jmp
push
inc
leave
add
lea
mov
pop
push
push
push
test
add
call
pop
iret
push
jmp
add
lds
aas
shll
in
jp
pop
push
xor
push
push
test
add
call
sbb
cmp
insb
xchg
mov
adc
inc
add
jmp
insl
push
fnsave
movsl
mov
pop
mov
push
push
sub
jne
jmp
mov
jne
jp
mov
inc
sti
in
in
bnd
jmp
pop
leave
lods
fldl
daa
jb
jns
arpl
test
or
jne
mov
jp
inc
jecxz
add
add
pop
mov
rep
pop
push
clc
sar
add
call
mov
xchg
or
add
jl
add
or
add
jmp
das
push
sub
xchg
jmp
push
adc
jno
and
sbb
jp
sbb
fcomps
push
and
jne
jmp
fisttpll
dec
add
inc
xor
jne
jp
leave
outsb
cmp
pop
mov
divb
jmp
aam
outsl
cs
ljmp
jb
jns
mov
cmpsb
sbb
cmp
je
mov
lods
mov
jp
in
cmp
js
aaa
call
add
add
pop
pop
leave
push
clc
rol
sub
mov
mov
jae
shl
sbb
add
pop
pop
ret
push
push
push
sub
jne
jmp
movsb
je
int3
jg
xor
jne
jp
aad
inc
in
loop
cmc
cmp
sbb
jo
jmp
adc
dec
jecxz
sbb
loope
jae
ljmp
call
mov
jp
dec
into
sbb
je
jg
movsb
and
add
add
add
pop
mov
push
push
push
push
and
jne
jmp
ljmp
xchg
xor
jne
jp
or
push
jo
mov
jmp
sub
divb
jns
push
stos
lds
mov
mov
cltd
cmp
dec
inc
dec
test
cld
xlat
hlt
lea
add
pop
push
push
push
sub
jne
jmp
popf
aaa
sahf
ljmp
adc
nop
jp
jno
loop
push
pop
jbe
mov
cmp
jns
xlat
mov
jo
jns
je
push
iret
cmp
mov
jp
sti
popa
sub
gs
add
pop
call
mov
push
push
and
add
call
xor
mov
mov
jmp
push
imul
lret
pop
jmp
push
imul
pop
xor
push
clc
mov
cmp
add
call
jge
data16
fdivrs
rcrb
push
and
clc
add
jmp
mov
clc
sub
xor
cmp
xchg
jmp
adc
xor
push
addl
jmp
push
push
push
push
sub
add
call
aas
and
or
bound
jmp
inc
movsb
or
jle
daa
sub
in
call
mov
xor
push
clc
sbb
mov
add
call
fs
das
pop
in
clc
pop
sbbb
xchg
clc
shl
add
jmp
lahf
push
invd
lcall
jmp
aad
imul
add
jge
stos
jmp
mov
push
push
test
lea
add
call
leave
cld
inc
and
outsb
out
cwtl
stos
add
roll
mov
cs
mov
mov
pop
mov
pop
add
add
push
push
test
add
call
jle
out
xorb
rolb
enter
mov
sub
jbe
pop
add
push
clc
adc
add
call
subb
test
cmpsl
out
cmp
clc
rcr
add
jmp
sbb
ljmp
sub
sar
cmp
xchg
jmp
mov
jmp
add
adc
jns
jmp
mov
push
push
xor
jne
jmp
ror
jbe
divb
jp
cmpsl
xor
xor
call
jo
jmp
insl
aam
xchg
push
jns
mov
jp
xor
adc
out
scas
std
jne
and
cmp
add
fisttpll
push
add
pop
mov
push
clc
shl
sub
sub
mov
nop
mov
jae
shl
xor
add
pop
pop
add
push
clc
rol
adc
add
call
pusha
sub
cli
inc
fidivs
mov
add
sar
rcr
add
jmp
js
das
nop
xchg
leave
xchg
jmp
mov
insl
test
or
in
add
clc
or
sub
mov
mov
jae
shr
adc
add
pop
pop
lea
push
push
and
jne
jmp
add
dec
jp
pusha
xchg
movsl
jo
jmp
push
jne
negl
mov
call
pop
je
inc
mov
pop
push
jl
push
mov
jp
cmp
push
pushf
je
les
add
pop
push
push
push
clc
add
call
aaa
iret
loop
or
je
add
cmp
shl
cmp
add
jmp
jno
sub
roll
clc
sbb
or
xchg
jmp
out
xchg
pop
push
addl
jmp
push
push
push
clc
add
call
mov
dec
sbb
push
and
clc
mov
add
jmp
lahf
in
xchg
sbb
pusha
clc
sub
ror
xor
xchg
jmp
stc
and
addl
jmp
call
add
push
clc
sub
sub
mov
nop
mov
jae
shl
or
add
pop
pop
mov
add
push
push
and
jne
jmp
lret
loopne
fisttpl
jp
insl
fwait
inc
adc
test
sbb
in
pop
call
jb
jns
lret
movswl
je
pushf
int
pop
call
jp
sub
jg
aas
pop
mov
add
mov
rclb
cmpsb
sub
nop
sub
jne
jmp
lods
in
dec
or
xorb
jne
jp
test
pushf
push
les
out
leave
andb
pop
jmp
push
mov
inc
jns
fwait
cmc
adc
leave
jns
je
xor
cmpb
out
cmp
add
pop
mov
push
clc
sub
sub
mov
nop
mov
jae
rcr
add
add
pop
pop
mul
pop
cmp
je
push
clc
mov
sub
sub
mov
mov
jae
rcl
sub
add
pop
pop
add
push
clc
adc
add
call
fs
loope
xchg
clc
mov
add
jmp
fsubrs
mov
mov
or
xchg
jmp
mov
pop
sub
lahf
jns
addl
jmp
jmp
push
push
test
add
add
call
pop
pop
in
add
ret
add
jmp
incl
jbe
pop
pop
push
push
and
add
call
aam
arpl
push
pop
jmp
mov
flds
cmp
jecxz
pop
push
push
sub
add
lea
call
in
jmp
jmp
pop
jmp
and
jmp
repnz
out
pop
leave
ret
push
clc
add
call
js
ds
roll
lds
ret
sbb
add
or
rolb
xchg
jmp
fdivs
push
and
add
repnz
jmp
push
push
clc
sbb
mov
add
call
lock
and
xchg
jl
add
add
jmp
mov
cmp
or
shl
xchg
jmp
je
xor
mov
dec
pop
addl
jmp
mov
push
push
xor
add
lea
call
and
jne
int3
and
sbb
add
mov
add
repnz
push
push
and
jne
jmp
dec
jmp
xchg
jp
adc
add
sub
jecxz
test
push
dec
test
push
jb
jns
int
lahf
sub
rcl
adc
fbstp
add
popf
inc
xchg
and
mov
jp
cmp
add
pop
push
push
push
clc
mov
sub
mov
nop
mov
jae
sar
add
add
pop
pop
push
push
clc
mov
mov
add
call
mov
outsb
add
and
clc
shr
add
jmp
mov
pop
dec
add
rcr
sub
xchg
jmp
or
mov
and
cmp
pop
jmp
mov
push
push
xor
lea
add
call
shlb
push
pop
jmp
out
xchg
pop
leave
xor
out
add
jmp
addr16
lcall
or
and
out
push
clc
sub
mov
nop
mov
jae
shl
and
add
pop
pop
mov
push
push
xor
lea
lea
call
or
mov
pop
hlt
xor
sbb
fs
add
jmp
adc
sub
loopne
push
mov
shr
push
push
and
jne
jmp
jmp
mov
in
jne
jp
in
repnz
mov
jbe
mov
mov
lcall
jb
jns
in
loop
fdivrl
sbb
je
fisubl
fsubr
xor
xlat
adc
ret
in
sarb
lock
mov
add
pop
mov
add
mov
push
push
sub
add
call
jecxz
adc
add
fxch
add
jmp
cmovb
in
shl
mov
push
push
and
add
call
xchg
xor
call
push
pop
jmp
out
mov
lds
jmp
lods
jmp
pop
add
push
push
sub
jne
jmp
mov
jmp
inc
push
jne
out
jg
loope
in
jne
jp
mov
clc
mov
dec
aaa
jo
jmp
daa
int3
inc
pop
jbe
pusha
in
gs
jg
insb
xchg
mov
push
ja
mov
sbb
xchg
cmp
xlat
adc
in
and
lea
pop
xor
push
push
and
jne
jmp
inc
outsl
lock
xor
jne
jp
out
push
jnp
lods
jmp
xchg
push
aam
cmpsb
or
push
push
jb
jns
add
mov
jns
je
das
xchg
push
out
sarb
mov
add
push
add
lea
pop
lea
push
push
and
jne
jmp
mov
shlb
jp
xor
xchg
cld
push
adc
and
pop
pop
mov
jns
pop
pop
mov
jns
je
out
sbb
sbbb
aam
mov
jp
pop
sbb
push
scas
mov
add
add
pop
xor
sub
mov
push
push
test
add
lea
call
mov
xchg
sub
je
add
rolb
xor
mov
push
es
xlat
dec
xor
and
jbe
pop
shr
push
push
and
jne
jmp
popa
sub
or
cmp
jp
sub
mov
testb
jo
jmp
pop
ljmp
into
fs
jns
ljmp
fdiv
sarb
je
inc
subb
jns
idivb
test
add
add
pop
mov
add
push
clc
add
call
dec
mov
xchg
clc
add
jmp
sbb
cli
cmp
add
add
or
add
push
fwait
inc
orb
inc
addl
jmp
mov
shl
push
push
test
inc
lea
call
pop
sbb
inc
rcr
lock
dec
adc
jle
inc
add
jmp
xchg
mov
pop
mov
add
push
push
test
add
add
call
sub
roll
imul
test
jmp
mov
leave
je
pop
xor
lea
push
push
and
jne
jmp
inc
std
push
push
xchg
xor
jne
jp
sbb
mov
inc
or
sbb
and
and
jb
jns
mov
out
push
and
jns
je
andl
xchg
loop
mov
mov
add
pop
xor
sub
add
push
push
and
jne
jmp
rorl
dec
add
jp
shl
aam
dec
jmp
repz
in
jb
jns
dec
mov
add
or
orl
and
lea
pop
pop
dec
jne
push
push
and
add
call
aad
mov
jmp
pop
jmp
xchg
roll
insl
dec
mov
ret
jmp
pop
mov
push
push
test
add
add
call
stos
addr16
add
add
movb
mov
nopl
push
jo
jecxz
fnstcw
pop
pop
pop
pop
push
push
xor
jne
jmp
out
jle
shr
mov
xor
xchg
mov
push
mov
out
jb
jns
adc
ss
les
je
dec
outsl
ljmp
mov
jp
sub
lea
add
add
pop
pop
push
push
xor
jne
jmp
fistpl
xchg
or
or
pop
into
pop
jo
jmp
int3
loope
cmp
jb
jns
das
mov
push
lods
jb
jns
je
or
sarb
repz
xor
les
add
pop
leave
ret
push
clc
sub
mov
mov
jae
rcl
or
add
pop
pop
push
push
push
xor
add
call
rclb
xor
int
add
adc
jmp
jns
loope
add
jmp
push
and
pusha
packuswb
out
mov
push
push
push
xor
add
call
lcall
xor
jmp
pop
jmp
jbe
push
xlat
dec
ljmp
jmp
mov
test
jmp
pop
push
push
push
clc
sub
add
call
out
negb
inc
inc
sub
add
jmp
pop
pop
mov
rol
xchg
jmp
lds
je
jno
jmp
mov
mov
shr
push
push
sub
add
call
test
xor
xlat
sub
jmp
pop
jmp
loope
das
insl
push
loopne
or
gs
cli
jmp
pop
mov
mul
push
push
sub
add
call
sbb
inc
lret
jmp
pop
jmp
dec
in
fs
jmp
pop
and
rorl
inc
add
add
mov
add
add
lea
lea
call
gs
jns
xor
jmp
pop
jmp
cwtl
xchg
lds
jmp
ds
xor
adc
jns
in
add
mov
mov
push
clc
add
call
out
lret
jl
add
shl
adc
add
jmp
sbbb
pop
pop
adc
xchg
jmp
mov
idivb
cmpsb
push
loopnew
movsb
adc
lods
scas
jmp
mov
pushl
push
push
test
add
call
inc
xor
loop
jle
inc
add
jmp
mov
dec
mov
push
aam
mov
pop
pushl
pushl
push
clc
cmp
adc
add
call
mov
xchg
clc
add
or
add
jmp
add
inc
add
ljmp
and
jmp
xchg
pusha
dec
lock
add
jge
xchg
in
jmp
pushl
pushl
push
push
sub
add
add
call
es
fiaddl
pop
jmp
lahf
ss
xchg
inc
push
out
add
jmp
push
sub
in
pushl
call
push
clc
add
or
add
call
push
out
iret
push
sti
push
decl
clc
add
jmp
dec
add
fstl
xchg
xchg
int
ror
or
xchg
jmp
test
addl
jmp
mov
mov
sub
jne
push
clc
sar
or
add
call
jmp
jl
pop
jo
push
and
clc
mov
add
jmp
dec
mov
mov
faddl
xchg
jmp
movb
or
cld
xor
add
add
push
test
pop
pop
push
push
and
jne
jmp
lahf
pushf
loopne
outsb
aaa
outsb
ljmp
jmp
and
jmp
iret
and
mov
jns
xor
dec
mov
out
jl
dec
jle
outsl
pop
data16
mov
jp
and
push
sbb
loope
add
pop
pop
leave
push
push
test
inc
lea
call
inc
sub
aad
lret
fcomps
xchg
fidivrs
add
jmp
cltd
dec
les
mov
pop
ret
push
mov
push
push
test
add
add
call
push
adc
sub
rolb
sub
roll
adc
mov
sub
jp
pop
pusha
push
push
test
add
call
mov
inc
add
jmp
add
xchg
aad
adc
sub
jbe
pop
mov
push
push
test
add
call
incl
jae
mov
jp
inc
add
jmp
jo
jbe
sub
je
pop
nop
push
clc
sub
adc
add
call
jge
xor
rolb
add
jmp
dec
fnstenv
adc
cmp
shl
sar
xchg
jmp
cmpb
clc
addl
jmp
nop
mov
push
push
and
add
call
shr
adc
add
jmp
test
repnz
jmp
pop
xor
mov
push
clc
add
add
call
sub
fimuls
test
dec
iret
enter
add
sbb
shl
sar
add
jmp
jb
jns
shr
xchg
jmp
lock
add
rcl
imul
fbstp
shl
movsb
popa
push
push
sub
jne
jmp
lock
leave
jne
jp
mov
jo
jmp
fbld
or
out
das
push
dec
ljmp
mov
cs
jp
cld
aaa
sahf
add
pop
leave
push
push
test
lea
lea
call
adc
mov
in
bound
je
inc
add
jmp
inc
iret
push
inc
xchg
fs
lods
xchg
add
jecxz
ret
mov
push
push
xor
add
call
push
imul
fnsave
lds
in
lea
mov
push
push
xor
jne
jmp
pusha
xchg
ret
dec
sbb
jp
loope
adc
jns
or
or
aam
push
jns
xorb
je
xor
idivb
and
xchg
add
pop
test
jne
push
clc
add
call
xchg
das
pop
add
insb
and
clc
add
jmp
inc
xorl
xchg
jmp
imul
insl
cmp
mov
xlat
mov
push
clc
mov
sub
mov
nop
mov
jae
shl
add
add
pop
pop
movzbl
push
push
xor
add
add
call
jl
and
add
outsl
jno
ret
add
push
pop
gs
cmp
jecxz
inc
push
push
xor
jne
jmp
int
lock
xor
jne
jp
xchg
push
mov
jmp
adc
add
xchg
jns
je
cwtl
dec
mov
jp
push
lods
mov
or
inc
lea
add
pop
mov
push
push
sub
jne
jmp
sbb
add
jp
gs
loope
sar
or
jmp
cmp
push
mov
xchg
jb
jns
push
mov
and
jecxz
inc
push
mov
mov
jp
mov
sub
cmp
sbb
pop
pop
cmp
inc
add
pop
mov
push
clc
adc
sub
mov
nop
mov
jae
ror
test
add
pop
pop
movl
push
clc
add
call
pop
jmp
adc
xchg
clc
mov
add
jmp
nop
cwtl
mov
inc
je
rcl
xchg
jmp
or
scas
adc
xchg
sub
cld
jecxz
add
jle
ja
jmp
mov
mov
push
push
sub
jne
jmp
cltd
dec
leave
push
jae
popa
xor
jne
jp
mov
loopne
jo
jmp
subl
jno
mov
sub
repnz
xorl
push
je
aad
shl
nop
push
dec
mov
leave
jp
sahf
callw
insb
or
fs
lea
pop
shr
push
push
test
add
call
mov
je
inc
add
jmp
add
lods
test
ficompl
xchg
pop
jp
xor
jp
pop
add
push
push
and
jne
jmp
dec
xor
gs
pushf
xor
jne
jp
xchg
movsl
movsl
aad
test
sbb
call
test
cmp
jmp
mov
sarb
insb
xor
lods
addl
add
add
loopne
push
push
test
add
call
pop
shl
jp
inc
add
jmp
sbb
lret
mov
pop
mov
push
push
and
jne
jmp
out
clc
out
leave
jne
jp
cli
jle
hlt
and
rorb
cmp
jl
xor
out
jns
popf
dec
aaa
lods
jns
je
adc
mov
jp
pop
sbb
mov
add
pop
ret
push
clc
mov
add
call
pop
mov
and
clc
sbb
add
rcl
add
jmp
ss
cmp
push
add
add
add
add
lcall
in
cmp
loope
xor
push
clc
or
sub
mov
nop
mov
jae
sar
or
add
pop
pop
inc
push
push
xor
add
call
idivl
jmp
pop
jmp
push
add
jmp
lahf
add
stos
mov
jmp
pop
call
lea
call
push
clc
sub
mov
nop
mov
jae
rcl
or
add
pop
pop
test
jne
mov
push
clc
mov
mov
add
call
movsl
adc
push
xchg
clc
add
jmp
xchg
ljmp
incl
add
add
inc
mov
in
mov
jmp
pop
push
push
xor
add
call
mov
adc
add
jmp
dec
lea
jbe
pop
inc
stc
xchg
push
loopne
ret
push
mov
push
clc
sbb
or
add
call
imul
pop
xchg
clc
cmp
add
jmp
pmuludq
ss
rol
xchg
jmp
mov
mov
sbb
addl
jmp
sub
push
push
xor
add
call
jns
sub
adc
add
lods
das
sub
pop
in
jmp
pop
mov
push
clc
sub
mov
nop
mov
jae
rcl
cmp
add
pop
pop
mov
andl
push
push
push
test
lea
add
call
ja
pop
and
xor
inc
add
jmp
push
push
leave
mov
pop
mov
push
push
and
add
call
std
or
imul
sbb
push
jns
pop
ljmp
or
and
loopne
push
xor
and
push
push
and
add
call
arpl
outsl
fsubr
adc
add
add
pop
jmp
pop
mov
lea
inc
push
push
xor
lea
add
call
and
jmp
pop
jmp
bound
add
jmp
not
add
loopne
push
push
clc
mov
cmp
mov
add
call
adcl
xchg
clc
mov
sbb
add
add
jmp
add
push
cwtl
xchg
aad
mov
repz
add
rcl
mov
xchg
jmp
cmpsl
and
addl
jmp
mov
push
clc
sub
mov
mov
jae
sar
adc
add
pop
pop
mov
push
push
test
lea
add
call
insl
push
je
inc
add
jmp
xchg
iret
in
sub
inc
and
ljmp
clc
call
inc
sub
lea
add
call
int
adc
mulb
jecxz
movb
push
mov
stos
jmp
pop
test
je
push
clc
or
sub
mov
mov
jae
rol
and
add
pop
pop
call
push
push
test
lea
lea
call
nop
fwait
cmpsl
fs
clc
push
xor
adc
je
inc
add
jmp
xchg
push
divl
shll
sub
je
pop
test
je
push
push
sub
jne
jmp
imul
xor
jne
jp
iret
and
jo
jmp
pushf
pop
pop
add
bound
test
sar
xor
dec
das
add
je
cltd
pop
cmp
adc
dec
or
ret
mov
mov
insb
rorb
fs
pop
call
push
push
test
add
call
inc
je
inc
add
jmp
setp
insl
in
insl
nop
fwait
repz
out
test
je
push
xor
push
clc
add
call
sar
xor
jno
push
and
clc
add
add
jmp
in
push
stos
adc
cs
or
add
or
add
dec
aas
xchg
pop
daa
adc
jb
jae
mov
enter
rcrb
clc
mov
sub
mov
mov
jae
rol
sub
add
pop
pop
lea
push
push
test
add
call
sbbb
add
push
outsl
outsl
lds
imul
add
add
ds
pop
call
lea
dec
jne
push
push
xor
add
add
call
popf
sub
inc
jmp
pop
jmp
inc
shl
xor
add
jmp
sahf
add
pop
and
out
mov
push
clc
mov
sub
mov
nop
mov
jae
ror
and
add
pop
pop
test
je
mov
push
push
and
jne
jmp
push
int3
fbstp
in
jne
jp
fidivrl
xchg
arpl
jmp
ret
jb
jns
inc
xchg
mov
adc
add
pop
jns
je
xchg
adcb
je
adc
xor
ret
test
faddl
push
clc
add
call
scas
add
jge
scas
xchg
clc
shl
add
jmp
lret
sub
into
repz
pop
clc
shl
xchg
jmp
jl
repz
movsl
fwait
mov
mov
jmp
mov
push
push
test
add
call
jl
mov
xorl
add
jmp
movsb
gs
insb
xchg
jno
push
mov
pop
mov
push
push
test
add
add
call
adcl
mov
add
ret
add
or
fdivrl
fst
in
inc
cltd
mov
call
add
push
push
test
lea
lea
call
sub
xchg
xlat
subl
add
jmp
hlt
call
mov
pop
movb
push
push
xor
add
call
jl
dec
adc
or
push
imul
push
test
setb
test
jecxz
incl
jmp
push
push
test
add
call
in
pop
pop
arpl
addl
les
adc
jnp
sub
jne
movsb
mov
fwait
mov
pop
mov
movzbl
push
push
test
add
call
ret
mov
add
imul
je
inc
add
jmp
adc
jne
imul
jo
and
xlat
fnstsw
pop
incl
xor
inc
push
clc
add
call
mov
cwtl
xchg
clc
shl
sar
mov
add
jmp
adc
clc
rol
or
mov
xchg
jmp
jb
inc
xchg
orl
aas
test
mov
push
clc
sub
mov
mov
jae
rcr
sub
add
pop
pop
and
inc
push
clc
add
call
mov
jl
mov
mov
xchg
clc
add
jmp
cltd
inc
push
js
clc
mov
xchg
jmp
test
negb
ljmp
and
cmpsb
cmp
jmp
inc
push
clc
cmp
sub
mov
nop
mov
jae
shr
add
add
pop
pop
shr
je
push
push
and
add
call
test
xchg
jmp
pop
jmp
jb
icebp
repz
or
add
jmp
xchg
jecxz
test
je
push
clc
mov
add
call
push
testl
add
add
sub
add
jmp
and
gs
clc
shr
adc
xchg
jmp
ds
pop
out
addl
jmp
mov
push
push
test
lea
lea
call
divl
add
inc
add
jmp
int
mov
mov
pop
sub
mov
mov
push
push
test
add
call
inc
push
sub
dec
lock
add
push
add
jmp
insl
jg
sbb
xor
or
mov
pop
incl
push
push
sub
add
call
out
dec
jmp
pop
jmp
xchg
aad
add
jmp
xor
loope
inc
push
clc
sub
adc
add
call
push
aad
xchg
clc
add
sub
add
jmp
xor
push
or
je
add
or
add
jle
into
sub
addl
jmp
mov
dec
jne
push
clc
adc
sar
add
call
fidivrs
xor
sbb
xchg
clc
add
jmp
mov
in
clc
shl
xchg
jmp
lret
or
addl
jmp
jmp
mov
push
push
xor
add
call
cmpsb
fdiv
pop
mov
or
dec
sub
adc
push
dec
lret
cmc
dec
sbbl
dec
jmp
pop
jmp
call
test
jne
push
clc
cmp
sub
mov
mov
jae
ror
adc
add
pop
pop
cmp
jne
lea
call
push
clc
add
call
lahf
push
lahf
imul
popa
insl
xchg
clc
add
jmp
mov
std
or
xchg
jmp
xor
das
jle
xor
add
add
test
je
push
push
test
lea
lea
call
repnz
fistl
jo
out
pop
jbe
jle
inc
add
jmp
pop
lret
mov
daa
jecxz
aaa
out
jns
mov
scas
mov
pop
mov
push
push
and
lea
lea
call
sub
or
incl
out
jmp
pop
sub
push
push
xor
add
lea
call
jne
push
push
jmp
jmp
pop
jmp
push
add
jmp
je
loop
mov
push
push
test
add
call
lahf
mov
mov
iret
push
push
out
add
roll
dec
aam
mov
mov
pop
mov
incl
push
clc
mov
add
call
and
movsl
les
and
clc
add
xor
add
jmp
or
sbb
adc
pop
nop
clc
rcl
xchg
jmp
mov
jp
mov
adc
mov
add
xchg
inc
push
push
test
add
call
divl
pop
testl
movl
sbb
lcall
jbe
pop
mov
push
push
and
jne
jmp
push
arpl
xor
jne
jp
sbb
pop
jo
jmp
in
dec
outsb
je
mov
mov
fsubrp
fnstenv
push
je
adc
scas
stos
jno
mov
jp
insb
testb
test
call
cmp
xor
or
sub
mov
nop
mov
jae
ror
and
add
pop
pop
jmp
push
push
xor
jne
jmp
hlt
shl
cmpsb
or
jp
lret
jo
jmp
pop
shll
cmpsl
jns
test
negb
call
mov
jp
adc
xor
add
pop
sub
jmp
push
push
test
add
call
jne
jno
sarb
xchg
roll
ret
inc
out
cmpsl
repz
lcall
dec
dec
mov
push
clc
cmp
sub
mov
nop
mov
jae
rol
sub
add
pop
pop
movzbl
shl
push
clc
mov
sub
mov
nop
mov
jae
shl
sbb
add
pop
pop
add
incl
lea
push
clc
sub
mov
mov
jae
shl
or
add
pop
pop
mov
call
push
push
and
add
call
lods
xchg
stos
jmp
pop
jmp
and
nop
mov
rolb
lds
jmp
xchg
cmpsb
and
jmp
pop
cmp
jb
inc
cmp
jb
push
push
xor
jne
jmp
pop
std
pusha
in
ja
xchg
jbe
xor
jne
jp
jns
dec
push
lcall
cli
and
repnz
jb
jns
mov
add
or
mov
out
mov
mov
cmp
jae
inc
push
push
sub
add
add
call
ret
adc
or
loop
mov
sbb
add
jmp
pop
inc
test
je
mov
push
push
xor
add
lea
call
add
jmp
pop
jmp
das
add
jmp
gs
cmp
sbb
loope
sub
mov
mov
push
push
sub
add
call
idivb
es
mov
or
jmp
cmp
ja
loope
incl
push
push
test
add
lea
call
mov
pop
fsubrp
xorb
roll
les
pop
inc
mov
push
push
and
lea
lea
call
xchg
pop
pop
jmp
lahf
xchg
popa
push
lret
add
jmp
stc
mov
movsl
jmp
pop
dec
jne
push
push
test
lea
lea
call
dec
out
jecxz
mov
jle
inc
add
jmp
push
mov
pop
mov
push
push
xor
add
add
call
je
push
pop
jmp
push
in
ret
add
dec
jmp
pop
xor
inc
push
push
sub
jne
jmp
scas
loop
lea
nop
xor
jne
jp
dec
xlat
cmp
mov
insb
cmp
dec
jmp
fpatan
and
jns
push
sbb
xor
mov
ret
jp
jg
hlt
icebp
mov
mov
jp
mulb
add
add
pop
jmp
mov
push
clc
ror
add
call
leave
push
sbb
clc
cmp
add
jmp
out
push
clc
adc
xchg
jmp
jecxz
out
sete
cmp
jmp
mov
mov
incl
push
push
test
add
add
call
mov
inc
add
jmp
xor
fisubs
enter
sub
jle
pop
incl
push
push
and
add
call
cmc
das
scas
xor
pop
jmp
inc
jo
out
roll
repz
jmp
insl
les
and
out
mov
xor
cmpl
je
push
push
test
add
call
xor
push
xchg
movb
mov
pop
mov
push
push
xor
add
add
call
mov
adc
push
add
add
jmp
pop
push
xor
loopne
pop
push
clc
sbb
mov
add
call
popf
insl
push
sub
xchg
clc
shr
shr
add
jmp
pop
movsb
data16
mov
xchg
jmp
repnz
adc
addr16
jmp
pop
sub
pop
push
clc
add
call
add
and
clc
sbb
add
jmp
xor
adc
sbb
clc
xor
xchg
jmp
hlt
sbb
ret
push
cwtl
addl
jmp
leave
ret
push
push
test
lea
add
call
inc
jno
jg
jbe
inc
add
jmp
fstps
inc
add
mov
push
sbb
pop
mov
mov
push
clc
sub
mov
mov
jae
ror
cmp
add
pop
pop
and
push
push
sub
jne
jmp
jbe
hlt
jbe
mov
xor
jne
jp
in
or
jo
jmp
outsl
jns
sbb
mov
movsb
mov
fcompl
jb
jns
sub
rorl
movsb
or
mov
jns
je
adc
adc
add
dec
mov
jp
adc
add
add
or
jp
add
sub
push
push
and
jne
jmp
adc
mov
xor
jne
jp
and
int
fdivrs
imulb
pushf
mov
jns
adcb
in
mov
test
mov
std
sbb
add
or
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
cmp
jne
push
clc
shr
adc
add
call
test
rcl
xchg
clc
cmp
add
jmp
jne
xor
clc
rol
rcr
xchg
jmp
add
jp
idivl
rcl
addl
jmp
lea
mov
push
push
test
add
call
lods
loop
add
ret
add
push
rol
jne
arpl
pop
mov
and
push
clc
sub
mov
mov
jae
rol
cmp
add
pop
pop
cmp
je
push
clc
adc
adc
sub
mov
nop
mov
jae
ror
xor
add
pop
pop
xor
push
push
and
jne
jmp
xor
jne
jp
adc
cltd
imulb
iret
jo
jmp
sbb
adc
and
stos
fldln2
test
xlat
dec
sbb
pop
push
stc
mov
mov
sarb
notl
test
les
add
pop
ret
push
clc
or
add
call
sarl
stos
dec
mov
insb
and
clc
add
add
jmp
inc
push
unpcklps
xchg
jmp
ja
pop
das
xor
mov
and
add
jmp
push
xor
mov
push
push
xor
add
add
call
fistpl
sbb
or
dec
add
jmp
pop
jmp
pop
mov
mov
lods
push
push
xor
jne
jmp
or
adc
xor
jne
jp
notl
leave
in
stos
ljmp
inc
inc
and
in
sahf
jb
jns
gs
push
inc
push
mov
push
popf
mov
ficoms
mov
jp
sub
lea
add
pop
mov
push
clc
sub
sub
mov
nop
mov
jae
rcl
test
add
pop
pop
pop
ret
push
push
clc
mov
rcr
sub
mov
mov
jae
shr
test
add
pop
pop
mov
push
push
and
add
call
pop
imul
fisttps
jmp
ficompl
add
jmp
inc
insl
in
out
std
scas
jmp
pop
add
push
push
push
push
and
add
call
ljmp
call
jmp
scas
out
mul
movl
pop
push
mov
push
push
and
jne
jmp
nop
or
rclb
fdivl
xchg
shlb
jp
cltd
dec
nop
adcb
nop
jmp
xchg
test
jl
stos
scas
loopne
repz
jns
pop
xor
mov
sbb
popa
inc
cmp
xor
sbb
sub
fstpl
inc
lea
pop
mov
add
pushl
push
clc
sar
adc
sub
mov
mov
jae
shl
and
add
pop
pop
mov
push
clc
mov
or
mov
sub
mov
mov
jae
rcl
adc
add
pop
pop
add
add
push
clc
xor
shr
add
call
loopne
fisttps
dec
and
clc
add
jmp
clc
jno
push
clc
sbb
xchg
jmp
dec
inc
push
push
or
testb
add
sahf
cmp
sub
aam
jnp
add
xor
push
push
and
jne
jmp
lcall
xor
jne
jp
jmp
xor
jmp
sbb
sti
gs
push
jb
jns
adc
sub
movsb
push
loope
jns
je
std
mov
mov
jp
test
add
lea
pop
lea
mov
add
push
push
test
add
call
cmp
les
inc
add
jmp
in
cs
jg
std
adc
pop
mov
xor
rol
push
push
test
add
lea
call
scas
xor
loop
jle
inc
add
jmp
add
cmp
adc
mov
add
loop
xor
inc
push
push
sub
add
call
fsub
sub
adc
pop
inc
sbb
add
jmp
stos
sub
cmp
jne
push
push
sub
add
call
dec
adc
in
jmp
pop
jmp
repz
add
jmp
leave
inc
daa
jmp
pop
cmp
je
push
push
sub
lea
lea
call
mov
pop
mov
sbb
add
jmp
iret
jmp
pop
inc
push
push
and
jne
jmp
pop
jae
pop
xor
jne
jp
xchg
add
lds
jmp
pop
insl
add
shrl
add
push
inc
lcall
loop
mov
mov
jp
mov
xchg
sub
lds
jae
jb
push
push
and
jne
jmp
mov
leave
dec
jae
leave
pop
xor
jne
jp
mov
add
cmp
and
nop
sbb
jmp
push
adc
loop
push
rcrb
or
mov
jp
sub
mov
fs
pop
mov
push
clc
adc
sub
mov
nop
mov
jae
shr
add
add
pop
pop
add
movzwl
mov
push
push
and
jne
jmp
neg
or
jle
xor
jne
jp
xchg
mov
jo
jmp
push
sti
lock
rcrb
imul
pop
hlt
jle
xchg
cmp
jns
je
cmp
in
and
lock
add
add
pop
add
push
push
and
inc
lea
call
adcl
sbb
pop
xlat
xchg
mov
inc
outsb
add
jmp
fsts
clc
jmp
pop
mov
add
pop
push
push
test
add
lea
call
pop
sub
roll
push
jno
in
adc
inc
add
jmp
adc
pop
dec
cmp
mov
ljmp
add
add
adc
sub
mov
mov
jae
rcr
and
add
pop
pop
cmp
jae
push
clc
sar
add
call
push
pop
jg
out
insb
and
clc
add
jmp
add
cltd
clc
add
xchg
jmp
xor
or
loop
jmp
pushl
pushl
push
push
test
add
lea
call
into
xchg
adc
cmp
adc
lds
inc
add
jmp
pop
btr
leave
and
mov
pop
push
push
push
and
add
call
out
cltd
sub
cli
and
adc
push
mov
iret
add
jmp
movsb
nop
idiv
out
xorl
pushl
push
push
sub
add
call
sub
jmp
sub
cli
addb
add
lea
in
call
call
push
clc
adc
add
add
call
movl
xchg
clc
add
jmp
movsb
pushf
inc
inc
dec
inc
pop
xor
xchg
jmp
mov
in
and
push
loope
dec
pop
repnz
jmp
pop
pop
pop
push
push
sub
jne
jmp
mov
jp
push
jmp
mov
mov
in
jmp
sbb
fstp
out
cmp
jmp
jp
mov
in
inc
lahf
xchg
mov
test
push
add
pop
leave
ret
call
fisubs
sbb
fisubrl
iret
.byte
scas
