jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
and
pop
cmp
fwait
loop
and
cmpsb
addr16
or
add
pop
push
add
add
add
push
add
add
add
add
add
inc
add
lcall
add
add
add
add
add
add
add
cmp
jecxz
add
push
add
add
lcall
add
repnz
sub
and
inc
add
add
add
add
add
add
lcall
add
or
inc
add
add
push
add
pop
add
add
inc
add
add
add
add
or
jne
and
inc
add
add
add
sldt
add
add
add
aam
add
add
add
inc
add
add
add
add
add
push
add
inc
add
add
add
add
sbb
jne
and
inc
add
add
add
add
mov
add
add
add
add
inc
add
bound
and
dec
add
add
add
add
add
add
add
add
add
add
add
or
xor
push
add
add
add
add
add
add
add
add
add
and
mov
mov
cmp
and
jne
dec
add
add
flds
add
add
add
jl
push
add
add
add
pop
add
add
add
add
and
fildl
cmpsl
add
add
add
add
add
add
jl
xor
push
add
mov
inc
add
sbb
jl
fildl
push
add
add
and
and
push
add
add
add
add
adc
push
add
add
and
xor
cmp
out
add
or
and
push
add
add
and
xchg
add
add
loopne
sub
mov
add
add
lcall
add
add
and
dec
add
add
add
add
add
and
mov
adc
jnp
mov
fldl
jmp
add
push
dec
add
aam
out
pusha
add
add
add
add
add
add
add
add
add
add
lret
add
add
and
lcall
add
add
add
add
add
add
add
lcall
add
test
flds
add
add
add
add
add
add
add
add
add
add
add
nop
add
jl
push
add
add
push
add
outsl
add
mov
dec
add
add
add
add
adc
sbb
adc
mov
add
sbb
jl
stos
add
add
sub
lret
add
add
add
cmp
add
jl
lahf
add
add
add
flds
add
add
add
add
add
pusha
add
add
add
and
mov
lret
add
add
roll
jae
cmp
add
add
and
and
sbb
jne
bound
and
add
jl
dec
add
add
add
add
add
add
add
add
addb
add
add
add
add
and
jo
roll
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
flds
add
add
adc
adc
add
push
add
add
add
add
add
pusha
add
add
and
clc
add
mov
lahf
mov
sub
outsb
lock
adc
add
jmp
and
fists
fidivs
pop
adc
cmp
test
or
xchg
jmp
lret
add
pop
dec
int3
shlb
mov
fs
and
xlat
cmp
pop
cmp
and
xorl
insb
or
mov
xor
into
cmp
dec
inc
inc
push
pop
mov
insb
cmp
mov
push
pop
and
dec
int3
inc
mov
cld
jbe
aad
add
jb
xchg
add
jp
adc
je
test
adc
enter
xor
xor
jmp
fimull
cmp
ds
and
push
shlb
arpl
out
jle
dec
mov
lock
xor
roll
shrl
lret
scas
notl
movsb
fistpl
pushf
pop
lret
cmpsl
jmp
stos
popa
arpl
into
adc
out
sarb
lahf
aam
xchg
or
loope
cmp
pop
jae
pop
inc
push
cs
inc
xchg
xor
out
inc
bound
ljmp
cli
push
mov
jae
imul
add
jno
pop
add
cwtl
and
dec
negb
sub
mov
xchg
movsb
sub
test
inc
cmpsl
pop
jl
outsl
add
xchg
cmp
sarl
ljmp
cmpsl
scas
adc
mov
add
test
cs
mov
and
in
leave
pushf
sbbb
rclb
push
pop
lea
mov
cs
mov
or
stc
mov
std
xor
mov
cmp
xchg
std
negl
push
fiaddl
push
subl
jg
pop
andb
roll
mov
movsb
jl
add
stos
mov
sub
cmp
sarb
ret
xchg
add
mov
sbb
fs
data16
inc
arpl
imul
lcall
jg
cmp
rep
mov
repnz
jle
cmp
xor
cmp
fs
inc
pushf
xchg
leave
pop
shrb
popf
inc
stos
repz
sti
cmpsl
xchg
lahf
adc
icebp
push
stos
mov
loop
jne
call
in
pop
jno
rep
and
clc
call
cmp
pop
les
push
mov
mov
push
xchg
push
xchg
sub
xchg
shl
mov
mov
sub
mov
mov
aas
inc
imul
xchg
xchg
leave
inc
ja
sahf
fdivl
shl
mov
int
movsl
xlat
cmp
pop
push
mov
mov
subb
ds
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jae
cmp
dec
sbb
jge
push
imul
stc
mov
mov
stc
leave
mov
cltd
imul
pop
imul
pop
sbb
leave
pop
fldl2t
test
fstps
adc
pop
jo
pusha
cmp
dec
sbb
mov
mov
mov
imul
mov
out
test
jp
mov
lods
inc
leave
jne
popf
scas
add
push
sub
cmp
pop
or
mov
push
inc
cltd
jbe
xchg
fcoms
scas
xor
jl
scas
inc
mov
js
pop
push
inc
cwtl
stos
sub
fxch
sbb
test
push
cwtl
stc
xchg
sub
dec
xchg
dec
dec
sub
loopne
dec
popf
fcmovbe
in
mov
lds
insb
cli
stos
jmp
leave
hlt
movb
sub
dec
mov
xor
clc
cld
inc
mov
leave
leave
in
cmp
aam
repnz
push
inc
call
sub
dec
sub
jns
dec
push
pop
jns
arpl
dec
or
mov
mov
fyl2x
test
rcr
add
stos
insb
pop
or
insb
xor
fldl
divl
lods
or
insb
dec
sbb
sbb
data16
stos
lods
mov
mov
mov
mov
cmp
or
adc
cmp
pop
sbb
leave
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
leave
cltd
fldl2t
test
fstps
push
mov
out
repnz
xchg
xchg
pop
xor
xchg
dec
push
test
jecxz
jge
push
outsb
cmp
icebp
mov
js
lret
dec
jne
pop
cmp
sub
lret
imul
repz
std
jo
lock
lret
adc
stos
mov
in
xchg
outsl
mov
adc
cwtl
in
and
inc
int
mov
mov
addl
pop
mov
push
adc
fists
cmpsb
and
add
jl
push
jmp
fldcw
push
int
add
fiaddl
pushf
aam
pop
push
jae
out
inc
mov
test
fisttps
mov
int
repz
cs
testl
jae
xor
jnp
or
scas
jae
sar
mov
xorb
sahf
inc
shr
push
aas
enter
int
xor
adc
cmp
xchg
mov
adc
fidivs
outsl
pop
dec
xchg
fdivrl
dec
cmp
xchg
shrl
data16
mov
loope
mov
sub
movsl
sahf
push
out
or
outsl
popa
jge
or
fsubs
loope
pop
inc
enter
fs
mov
les
clc
push
rclb
mov
ret
mov
pop
and
mov
dec
mov
pop
lcall
divb
outsb
hlt
adc
jmp
outsl
pop
mov
cmpsb
loop
xchg
stc
dec
fadd
push
ds
cmp
xchg
mov
loope
dec
fwait
nop
lock
mov
pushf
sbb
sbb
pushf
stos
sub
fucomi
inc
xchg
insb
mov
aam
push
pop
dec
js
cwtl
sbb
mov
cmp
jae
add
fldenv
mov
out
sarb
arpl
pop
adc
or
iret
fldenv
or
clc
arpl
daa
push
or
lret
aas
jo
fbstp
inc
sti
pop
xchg
mov
xor
subb
or
dec
or
addr16
dec
push
mov
pusha
and
dec
ljmp
fisubrl
sbb
addr16
cmp
xlat
jl
jae
or
push
pop
nop
jecxz
mov
jge
pop
inc
dec
jae
in
addb
mov
inc
xchg
add
into
out
inc
in
push
dec
push
test
clc
lods
add
inc
cltd
and
mov
les
xchg
mov
insb
xchg
mov
cmp
dec
xchg
jmp
add
sahf
xor
enter
imul
je
and
jno
into
cs
and
pop
sbb
mov
loop
and
and
aad
or
adc
clc
stos
xor
lea
mov
jl
pop
cli
or
shrl
jae
es
sub
mov
inc
movsl
sbb
inc
sti
jg
pop
sahf
loope
cs
sahf
adc
movsb
add
inc
adc
and
and
pop
or
pop
xchg
xor
push
ret
les
inc
pop
and
aas
dec
arpl
cs
xchg
sub
sbb
inc
out
cmp
rolb
int
add
jecxz
pop
jb
dec
movsb
add
mov
jmp
rcr
and
xchg
scas
je
xchg
rcr
fcmovu
cmp
sbb
in
insl
and
mov
loope
mov
cmpsb
and
mov
aas
outsl
je
test
out
scas
fldt
xchg
je
es
aam
test
fistpl
in
jecxz
push
dec
jbe
pop
ret
dec
das
shlb
mov
xchg
mov
jnp
fsubrs
adc
xchg
gs
and
add
mov
push
out
adc
adc
mov
dec
pop
pop
das
cmc
in
push
push
sub
pop
mov
int
icebp
cmp
fistpl
fdivr
add
popf
xor
adc
pop
jbe
mov
out
enter
shl
or
lea
inc
cmpsl
sub
inc
mov
pop
loop
shrl
xchg
mov
adc
js
addb
sub
cmp
cmpsb
lahf
sti
jg
sbb
inc
add
push
aad
rolb
test
sub
fst
lahf
std
ljmp
inc
fists
pop
mov
in
mov
dec
int
xlat
adc
cwtl
pop
and
fs
nop
sub
out
mov
mov
arpl
imul
jb
cld
enter
mov
aam
jns
pop
shl
mov
hlt
ljmp
addr16
ret
jg
inc
mov
nop
inc
mov
roll
cmpsl
addb
pushf
loop
xor
add
push
incb
mov
and
xchg
or
adc
lret
test
push
mov
mov
pop
fdivrs
out
push
add
mov
cwtl
mov
mov
call
xchg
ljmp
lods
leave
and
outsb
push
pop
iret
call
dec
cltd
aas
ret
in
out
inc
jns
insb
inc
cmp
mov
aam
pushf
cwtl
lret
adc
enter
xchg
pop
and
or
in
test
add
xor
mov
xchg
sbb
scas
scas
and
xlat
fs
mov
sarb
jg
cmp
mov
dec
or
test
cmp
popf
mov
call
ror
pop
stos
jl
fiaddl
jnp
cmp
mov
xchg
lods
leave
pop
mov
push
lock
sarl
dec
and
sbb
imulb
scas
sub
and
mov
lock
or
ds
xchg
lcall
dec
test
setnp
dec
mov
jle
je
mov
shrb
push
scas
pop
mov
outsl
mov
add
fsts
mov
pop
inc
mov
mov
or
outsl
insl
mov
cmp
test
in
arpl
pop
gs
loopne
inc
add
or
dec
lahf
pop
dec
lret
ljmp
cmp
adc
jle
and
push
cli
dec
lds
out
lods
or
xor
out
push
mov
push
mov
sbb
sub
ljmp
mov
dec
jmp
aam
clc
arpl
aam
jg
out
mov
out
mov
mov
push
sbb
sub
mov
jle
mov
mov
inc
adc
lcall
pushf
inc
inc
xchg
aad
sub
int
xlat
sub
sbb
xchg
decl
cmpsb
add
mov
mov
aad
lds
dec
cmp
add
fadds
mov
insb
push
sbbl
adcl
fldl
inc
inc
push
test
je
out
jb
inc
cltd
fisttps
imul
je
imul
lea
jle
cmp
xor
jne
mov
rcrb
and
push
int3
test
cmp
mov
xor
lret
xchg
ret
mov
dec
leave
cmc
sbb
dec
xchg
sbbl
xchg
stos
mov
insl
std
push
lret
pushf
xchg
and
daa
out
push
mov
inc
mov
push
cmp
and
lret
stos
lods
orb
arpl
xor
repnz
inc
inc
fcoml
cmc
fistpll
scas
notb
sbb
adc
add
and
mov
notl
into
lahf
repz
cli
movsl
imul
andb
lret
mov
push
adc
xchg
cmp
pushaw
call
test
xchg
mov
cmp
int3
push
xor
and
fs
mov
xor
xor
cmp
imul
xor
test
clc
xor
sti
jmp
jp
fnstenv
add
mov
cmp
lahf
sti
push
sbb
push
lock
inc
stc
push
aam
inc
sti
lds
in
imul
pusha
sbb
adcb
out
out
movsl
stos
data16
ret
and
ficoms
sahf
aad
cmc
in
xchg
and
xchg
insb
sbb
int3
jmp
sbb
mov
pop
testb
stc
negb
adc
xchg
mov
scas
xor
int3
popl
jmp
lret
push
push
int3
sub
aam
jle
pop
insl
lds
mov
call
pop
sarl
add
dec
mov
or
pop
inc
jmp
imul
jo
xchg
movsl
dec
cs
xor
or
xor
repnz
jmp
jle
or
xchg
and
cwtl
and
pop
or
mov
xor
enter
xor
jge
iret
outsb
and
mov
int3
sbbb
lcall
push
enter
and
ljmp
mov
mov
fcomip
cmp
pop
xchg
add
or
fldl
add
stos
lahf
shl
add
mov
jmp
aaa
pop
mov
sahf
rorb
mov
jl
inc
cmp
mov
popf
pushf
rcll
push
sub
test
cmpsb
das
pop
sbb
xchg
lret
or
pop
add
repnz
out
outsl
pop
push
dec
iret
mov
sub
push
iret
mov
push
in
inc
out
inc
mov
mov
or
mov
sbbb
je
adc
dec
lahf
xor
mov
xor
andl
int3
fdivrl
in
and
les
mov
dec
push
sub
mov
cmc
pop
or
inc
inc
jp
clc
fs
mov
fldt
sub
into
addr16
out
sub
mov
scas
sahf
cli
cmp
std
movsb
data16
dec
daa
cmpsb
mov
xchg
push
cmc
gs
out
mov
or
xlat
adc
mov
iret
push
xchg
bound
mov
lea
lahf
insl
dec
mov
cmp
xorl
inc
hlt
cmp
sub
push
stos
imul
cs
pop
shlb
mov
cld
cmp
push
cwtl
aas
lret
push
or
movsl
xchg
iret
popf
les
scas
adc
rolb
ljmp
sbbl
mov
jl
faddp
inc
inc
jne
mov
or
les
aad
mov
and
sbb
test
mov
ficomps
or
adc
out
inc
arpl
push
xchg
in
or
std
jae
pop
add
cmpsb
repz
pop
aam
sti
pop
sub
daa
push
jge
mov
enter
fbld
mov
xchg
push
push
or
mov
jecxz
lds
pop
ret
jg
jge
test
inc
call
mov
xchg
xchg
mov
cmp
mov
sbb
push
pop
cs
mov
mov
jmp
testl
repnz
and
mov
out
hlt
scas
sahf
pop
and
inc
lds
pop
dec
xchg
repz
out
pop
sub
rorb
cmp
cmp
lds
cmc
adc
rcl
addr16
jne
mov
adc
add
mov
mov
add
hlt
sbb
iret
dec
out
push
xchg
inc
dec
mov
mov
push
dec
cli
lea
mov
ret
cmc
out
jae
mov
cmpsl
dec
push
ljmp
and
cmp
mov
push
mov
add
inc
xor
adc
pushf
subb
push
mov
js
mov
dec
and
aam
push
pop
mov
inc
pop
push
push
or
jns
mov
shlb
aas
pop
mov
cmpsb
mov
sbb
es
data16
xchg
sbb
dec
orb
aad
loopne
push
js
sti
fwait
arpl
in
aad
pop
pop
push
pushf
mov
repz
in
clc
sahf
push
out
je
outsb
mov
jae
mov
xchg
sub
adc
in
scas
xchg
xor
jnp
rcll
lods
push
lea
nopl
cmp
dec
shlb
jl
mov
sti
push
jmp
in
scas
dec
xchg
jno
cmp
insl
cwtl
push
mov
insl
cmp
jg
loope
daa
aaa
push
mov
popf
ror
inc
icebp
sub
jg
in
inc
int
stos
shrl
xchg
xchg
pop
jle
movsl
push
inc
sarb
push
cmp
jbe
push
dec
aam
jg
adc
or
fwait
movsl
mov
mov
or
sub
test
fadd
mov
pop
cld
xor
xor
leave
aad
stos
jb
repnz
xor
pop
dec
imul
push
stc
and
scas
pmaxsw
xchg
cmpsl
xor
pop
ret
and
dec
sbb
aas
mov
jge
stc
call
sub
pop
stos
xchg
or
sub
scas
imul
or
sub
push
jns
push
imul
mov
lods
loop
or
movsb
xchg
mov
cld
or
leave
and
arpl
jmp
xchg
pop
fcompl
and
inc
xor
in
mov
insb
or
scas
mov
out
jne
neg
mov
dec
bound
adc
mov
test
or
in
sahf
sub
cmc
jns
loop
lea
movsl
lods
pop
mov
xchg
sbb
in
pop
mov
jbe
lds
push
clc
fldt
or
jecxz
lock
mov
daa
out
imul
cmpsb
add
aad
into
imul
xor
xor
lods
mov
or
lock
mov
mov
and
scas
push
fdiv
lret
shr
andb
and
sub
lret
or
cmp
cmp
mov
lcall
cmc
iret
pop
sub
jg
pop
dec
andl
and
mov
dec
ljmp
sub
or
movsl
gs
lock
xor
sbb
fstpt
lock
jecxz
andl
pusha
inc
xchg
cli
rorl
dec
mov
js
or
mov
sub
dec
lea
mov
call
mov
pop
aas
out
dec
inc
cmp
lahf
cmpsl
sbb
mov
xchg
mov
mov
add
scas
mull
movups
pop
jae
adc
inc
xor
jge
mov
mov
scas
inc
xor
xor
stc
dec
push
adc
pop
out
inc
adc
jle
fcomp
cmp
cs
jb
sbb
icebp
lds
popa
int3
addb
jb
jno
push
test
xor
jb
push
xor
sbb
enter
jp
not
mov
mov
push
mov
insl
dec
xchg
mov
out
popf
mov
mov
arpl
mov
dec
lods
roll
mov
cmp
lret
js
sub
int3
in
loopne,pt
lods
jle
inc
shll
lds
xchg
int
mov
jle
pusha
stos
fildll
cwtl
lds
mov
je,pn
popf
mov
test
push
push
xchg
div
je
bound
in
cwtl
les
cmpb
push
inc
fistps
inc
sbb
jbe
cli
stos
sbb
and
xchg
mov
push
mov
adc
fildl
popf
imul
pusha
rcrl
jb
hlt
mov
aaa
adc
shrl
leave
rolb
enter
loopne
lods
adcl
push
or
outsb
lret
test
in
dec
test
xchg
sub
dec
clc
fisttps
jae
addr16
ds
into
sbb
jae
loop
xlat
adc
pop
cld
jbe
icebp
stos
mov
jle
xchg
das
icebp
adc
pop
ss
test
adc
jmp
fyl2xp1
mov
je
sbb
cwtl
push
xchg
or
imul
and
or
or
aam
push
jg
int3
test
mov
mov
cmc
andl
testl
xorb
pushf
lds
jg
cld
pop
jnp
mov
dec
jne
and
scas
dec
xor
mov
xchg
not
mov
inc
cwtl
lahf
pop
xchg
mov
sub
inc
orl
iret
push
cld
dec
adc
out
in
jne
in
jmp
xorb
xchg
dec
push
cltd
jno
test
call
cs
adc
push
lcall
mov
in
sbbl
fildll
dec
push
negl
inc
dec
adc
lret
or
movsb
outsb
xor
fisttps
std
jge
fcompl
lahf
andb
dec
push
addr16
lea
mov
inc
push
das
rcl
pop
das
push
jns
cli
jg
and
adc
xchg
dec
clc
sbb
push
mov
fcmovu
mov
pop
popa
jne
mov
xor
pop
repnz
insb
jg
repz
rcrb
cmp
test
fmuls
and
mov
and
push
popa
test
cmp
aas
sbb
sarb
in
out
dec
push
repnz
clc
push
idiv
fcmovnu
call
mov
add
inc
loopne
mov
sahf
sbb
mov
inc
sar
pop
lret
or
sub
hlt
add
pusha
aas
jns
xchg
mov
add
inc
push
stos
jo
gs
js
pop
aam
inc
xchg
adc
rol
push
sti
loopne
aaa
dec
and
dec
inc
imul
lock
sub
xor
jecxz
adc
rcll
pop
sbb
mov
pop
fwait
icebp
in
ss
mulb
push
dec
vcvtps2dq
jmp
xlat
ss
push
pusha
and
test
xchg
aad
iret
lds
jmp
das
std
mov
cmpsl
push
je
pop
pop
negl
adc
mov
lods
mov
mov
jp
fimull
xchg
hlt
lahf
fwait
xor
rcrl
pusha
sbb
push
mov
mov
testb
cs
push
mov
push
lods
ja
rcrb
arpl
cmp
xorl
pop
inc
nop
daa
lret
sub
adc
dec
xor
dec
cli
sbb
in
iret
lcallw
push
fcomps
cmp
and
jg
sub
xchg
jmp
dec
cli
call
cmp
repz
fisubrl
pop
daa
inc
ret
jno
cmp
mov
call
push
mov
addl
mov
daa
sarb
mov
jo
add
inc
aam
pop
pusha
hlt
in
push
jb
mov
mov
mov
pop
stos
insl
out
add
into
ljmp
cmpsb
mov
rol
jl
sbb
lds
jp
mov
push
jno
xchg
into
jmp
les
lcall
sub
sbb
int3
cmp
mov
or
shlb
in
pop
xchg
mov
popf
adc
sti
cmp
test
cmp
pushf
xchg
ret
mov
dec
ds
gs
movsb
mov
dec
js
pop
icebp
jmp
scas
nop
repz
mov
lret
in
pop
sbb
jns
cmpsb
mov
lcall
int3
ficoml
insb
test
sbb
cltd
lods
xor
xchg
jl
mov
xor
hlt
fdiv
pop
add
add
loopne
cs
sbb
mov
add
mov
jbe
sbb
imul
pop
cli
add
inc
push
pushf
sbbl
fldcw
sbb
jp
test
gs
push
jbe
push
xor
mov
adc
loope
and
out
push
test
ficoms
dec
aad
xor
call
sti
out
popa
imul
ret
pop
pop
push
pop
imul
jbe
icebp
shrb
sbb
pop
and
repz
push
sub
push
fstpt
cmova
lods
mov
lea
cld
jbe
icebp
add
or
jg
aad
es
xchg
or
mov
adc
clc
cli
mov
xchg
cmp
xchg
in
in
mov
push
cmp
jecxz
fwait
fwait
inc
xchg
xchg
stc
fisttps
inc
mov
adc
daa
xchg
popf
push
inc
pop
addb
andb
lods
mulb
test
rcrb
xchg
cmp
jg
or
push
push
dec
inc
shll
in
movsb
pushf
movsb
stos
addr16
cltd
jb
insl
cs
repnz
ljmp
push
std
cmp
dec
adc
cmp
outsb
pop
push
icebp
or
adc
psadbw
mov
sahf
mov
pop
adc
lahf
sbb
mov
xchg
xchg
adc
outsb
repz
loop
out
sti
mov
jl
and
adc
sahf
fists
mov
bound
sub
fdiv
sbb
mov
and
es
or
jbe
out
popa
ljmp
lcall
ja
pushaw
push
or
repnz
push
xchg
sub
pop
cmp
lret
xchg
mov
pop
sub
pop
inc
std
out
xchg
push
push
pop
and
and
dec
xchg
enter
testl
lahf
scas
sub
stos
aas
sbb
push
xchg
inc
sarb
outsl
enter
push
daa
data16
or
xchg
in
push
add
icebp
mov
lods
push
mov
icebp
sahf
push
mov
push
add
push
xchg
dec
push
xor
add
mov
push
xchg
sbb
inc
cwtl
jmp
or
icebp
rorb
movsl
mov
sbb
sub
dec
or
test
leave
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
leave
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
leave
cltd
fldl2t
test
mov
sbb
dec
sbb
sub
leave
mov
out
push
inc
push
and
cltd
scas
sahf
and
ss
data16
insb
ret
pop
mov
mov
jb
push
cld
xlat
in
or
add
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
cmp
and
inc
pushf
jae
arpl
inc
pop
sub
jecxz
mov
or
cld
adc
and
add
and
and
or
pop
loopne
cmc
fsubl
and
jno
enter
dec
int
mov
xor
out
add
mov
ret
sub
loop
icebp
sbb
in
imul
inc
inc
lods
sbb
clc
add
sub
ficompl
cmp
aas
pop
cmp
adc
fucomp
mov
mov
mov
mov
cltd
xor
jno
imul
inc
inc
in
into
pop
mov
jle
dec
mov
gs
ret
dec
pop
adc
mov
shr
cmp
int3
and
jl
mov
pushf
fidivs
xchg
orl
inc
sbb
and
in
in
cmp
push
fstps
insb
mov
cmp
sub
sbb
or
cld
adc
stos
fdivl
int3
pop
mov
imul
fbld
scas
js
push
movsb
cld
push
mov
xchg
mov
mov
pop
lret
aad
lds
shlb
cmp
imul
fisubs
adc
push
stc
adc
loopne
arpl
fbld
iret
jo
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
dec
aad
into
arpl
mov
inc
inc
mov
and
push
jno
shrb
cwtl
dec
cmc
dec
push
push
pop
repnz
push
cwtl
out
cmpsl
pop
fmull
mov
jl
xchg
popa
in
cmpsb
or
push
cmp
lods
sbb
aas
fsubl
jmp
loope
mov
iret
std
pusha
int
mov
gs
lds
mov
sub
xchg
push
jl
pop
scas
jae
or
hlt
inc
pushf
jle
fistpl
xchg
pop
push
insl
cmc
pop
dec
lods
fcompl
jne
lahf
movsb
roll
add
lods
out
cmp
cmpsl
jge
xchg
mov
bound
xchg
aam
repnz
push
and
jle
into
or
jno
or
sbb
jge
dec
pusha
jno
outsl
orb
cli
mov
add
dec
in
push
test
inc
movsl
mov
adc
push
pop
clc
inc
mov
push
outsl
mov
ret
push
inc
nop
dec
or
push
sub
pop
sbb
clc
pop
fcmovnbe
xchg
aam
lods
fiaddl
nop
shrl
mov
jmp
inc
sbb
sbb
dec
xor
pop
xchg
or
movsb
jno
stc
mov
xchg
jne
push
mov
xor
in
pusha
mov
xor
cmp
fmul
test
iret
mov
dec
add
pop
aam
dec
jmp
dec
or
inc
stc
jo
or
filds
pop
in
cmpsb
dec
jne
in
dec
cs
out
test
sbb
cli
sbb
andb
lcall
dec
dec
movsb
add
mov
popf
sub
je
les
leave
call
push
mov
xchg
mov
ja
cmp
sbb
mov
mov
adc
and
dec
div
je
add
pushf
mov
daa
xchg
and
xor
inc
or
popf
int
rcl
sbb
into
sbb
aam
mov
cmp
dec
js
jb
mov
xchg
in
insb
cmp
or
and
pop
xchg
fdivl
sub
loop
out
rcrb
out
dec
loopne
sahf
out
std
mov
je
repnz
flds
cmp
subb
push
stos
mov
movsb
adc
fcmovne
dec
mov
ljmp
push
int3
adc
nop
nop
pushf
push
fsubrp
xchg
pop
fwait
add
aaa
lahf
sarb
xchg
cmpsb
cli
fisttpl
pop
in
rorl
sub
cmp
cmp
lcall
insb
imul
je
adc
loopne
xchg
sbb
and
add
aad
xlat
jo
sar
lods
outsl
mov
dec
pop
ret
push
jl
scas
jmp
add
fdivl
into
pop
inc
cmp
sub
jb
stc
movsb
jle
xchg
cmp
sub
xchg
xor
int
xchg
das
jl
xchg
xchg
mov
aas
scas
add
mov
fcoml
fists
push
pop
iret
xor
mov
ds
sub
andb
dec
mov
push
rcl
flds
push
fwait
cmp
cli
jle
into
dec
sarb
pop
rcr
fsubl
in
and
fadds
arpl
add
add
scas
pop
mov
sbb
in
push
fs
xchg
xor
je
mov
cwtl
lods
pop
xor
mov
mov
xor
mov
or
xchg
push
xchg
enter
mov
jnp
pusha
sahf
lock
data16
lds
mov
shl
inc
push
rcll
adc
cmpb
neg
cmp
add
fisubrl
mov
inc
pop
push
pop
rorl
push
and
or
fsubrl
lret
jo
pop
cs
pop
adc
movsb
in
mov
inc
mov
fldt
into
add
daa
out
rolb
pop
push
orb
xchg
xlat
notb
inc
movsb
sub
sarb
adc
or
arpl
aam
and
sub
sbbl
cli
pushf
push
mov
stc
dec
adc
xor
mov
mov
dec
fldcw
lret
imul
dec
aam
and
mov
repnz
inc
int
sub
fwait
cld
and
push
sbb
cmpsl
cmpsb
push
imul
cwtl
mov
fildll
arpl
pop
shlb
cmp
stos
xchg
sub
pusha
sbb
insl
adc
dec
xor
cli
ss
jle
jne
clc
pop
xchg
pop
pushf
fsts
dec
movsb
clc
mov
nop
mov
stos
das
movsl
mov
xor
pop
es
test
push
mov
xchg
pusha
mov
inc
ja
mov
insl
pop
jns
jl
jb
dec
adc
cmpsl
push
jg
pop
mov
fcomi
pop
dec
xor
or
mov
mov
mov
jg
data16
push
test
lea
pop
sub
adcb
mov
jp
out
mov
push
and
and
dec
je
in
mov
and
pop
je
ja
push
mov
nop
addr16
repz
loopne
dec
jne
das
bound
jmp
push
mov
cld
xor
enter
stos
mov
push
jne
int3
scas
arpl
mov
pushf
call
push
lods
mov
dec
movsl
jmp
dec
push
shl
jae
adc
inc
insl
mov
dec
into
mov
cmp
fsubrs
sti
lds
pop
repz
xor
dec
inc
pop
shl
add
xchg
dec
outsl
inc
scas
test
repz
xorl
xchg
mov
inc
jns
sahf
lock
add
sbb
xchg
jo
inc
adc
push
fwait
and
cli
xor
ljmp
pop
stos
xchg
jmp
enter
ljmp
lock
xchg
clc
xchg
jno
sbb
cld
cmpb
lea
jecxz
ja
jg
lock
and
mov
outsb
mov
addr16
xor
cmp
pushf
cmp
ret
add
in
test
xorb
popf
sub
xor
pop
in
incl
sub
xchg
lock
test
inc
cmc
in
sbb
dec
cmp
push
mov
icebp
gs
imul
in
aaa
insl
jg
icebp
out
movsb
ss
out
scas
daa
push
mov
jmp
mov
dec
mov
jae
test
pop
fstp
jnp
fwait
gs
shll
pop
push
xor
test
aam
bound
or
cmp
cmp
fs
xor
sbb
gs
sub
mov
xchg
push
mov
or
mov
mov
aas
sub
sub
mov
out
ljmp
xlat
xlat
iret
pop
jo
cmp
mov
je
push
movsl
int
mov
or
mov
std
lahf
fucomip
or
add
addl
std
lea
lods
mov
sti
cmp
std
dec
pop
lret
sbb
xor
lock
stos
xchg
sbb
pop
xchg
test
cmp
fisttpll
mov
lods
xor
jmp
loopne
and
and
mov
add
mov
inc
or
cmp
add
negb
cmpsb
cmpb
fiadds
mov
xbegin
ljmp
xchg
repnz
or
and
icebp
lea
addl
push
jge
jmp
mov
les
decb
pop
xor
jmp
in
loop
adc
pop
xor
js
daa
loopne
xchg
xor
sbb
std
mov
call
sub
cmp
pop
test
push
lock
jle
daa
fildll
xchg
or
sub
xor
out
fdivp
or
loopne
push
aad
loop
into
push
mov
or
fwait
in
mov
aad
pop
mov
in
xchg
add
nop
mov
aaa
mov
gs
lret
inc
std
out
hlt
jmp
imul
jae
sbb
fisubrs
jmp
loope
outsb
sbbl
dec
mov
pop
inc
popa
xchg
or
inc
clc
dec
stos
in
cld
xor
movsb
xor
xor
out
pop
push
sbb
mov
mov
hlt
stos
lock
inc
jns
push
lret
icebp
jne
ss
lds
pop
lods
and
ljmp
xor
ret
popfw
inc
into
push
jnp
leave
shlb
xor
xchg
icebp
loope
jnp
int
jecxz
test
pop
cli
psubsw
and
aaa
mov
imul
and
inc
sub
mov
outsl
pushf
and
add
lahf
dec
push
or
mov
daa
mov
andb
out
mov
xchg
mov
xchg
aaa
push
add
ljmp
inc
cmpsl
cmp
addr16
and
sub
jo
xchg
daa
mov
and
in
cmp
inc
add
cmp
aam
ljmp
xor
mov
fwait
push
adc
les
std
ret
pop
bnd
andl
adc
orb
jle
sub
repz
inc
xchg
jp
fwait
adc
xchg
jae
jge
pop
xor
test
and
jecxz
out
in
sub
mov
test
adc
lea
and
ret
cwtl
sbb
xor
xor
and
sub
push
xor
cs
popa
notl
dec
and
fidivrs
jp
in
ffreep
test
scas
outsl
fwait
add
in
xor
inc
and
inc
stc
popa
sbb
or
sub
into
add
popf
push
fwait
pop
push
dec
xchg
dec
lds
mov
and
inc
fdivl
jnp
scas
jo
mov
add
movsb
pop
addr16
xor
or
fists
je
mov
mov
movsl
andl
clc
stos
ret
sbb
mov
push
stos
pop
xchg
cmp
or
add
lock
or
dec
or
and
xor
sub
fwait
repz
xchg
lahf
es
int
jp
adc
aaa
aam
push
jp
loop
cmp
scas
push
push
shr
or
push
pop
mul
es
dec
fdivrs
cmpsb
aas
inc
filds
aam
fwait
xchg
roll
aad
xor
sub
aam
out
adc
cmpsl
mov
mov
pop
lret
xchg
dec
and
push
bound
sarb
out
pop
pop
and
sub
pop
scas
sbb
dec
dec
sub
cmpsl
adc
lea
lods
outsl
out
mov
cmpsb
xor
mov
sub
adc
push
pop
push
xor
scas
jmp
jne
dec
sbb
cmp
inc
adc
loopne
or
add
call
mov
movsb
fcmovnbe
out
cmpsl
lods
dec
movsl
data16
add
dec
gs
mov
jae
pop
and
js
fidivrl
insl
add
cmp
dec
cmp
cli
push
xor
mov
stos
enter
outsb
aam
mov
fldt
dec
aad
mov
fsts
iretw
inc
and
out
inc
jge
cmp
mov
je
out
aad
ss
add
push
dec
bound
push
xchg
outsb
xchg
ss
push
push
and
ror
aaa
js
ss
in
jmp
push
or
in
aaa
adc
mov
push
ficomps
jmp
fwait
lock
and
or
xchg
fidivl
leave
mov
cmp
int3
add
shrb
je
ret
mov
sub
xor
add
je
jno
adc
mov
push
jo
scas
mov
in
adc
inc
cmp
out
push
mov
jg
inc
les
mov
add
jns
test
call
je
jo
lea
ja
js
das
outsb
fadds
js
cmp
cmp
inc
test
out
out
scas
push
cltd
and
xor
lods
dec
cmpsl
cmpsl
outsl
mov
fsubrs
push
fsubrl
loope
push
push
sbb
popa
inc
xchg
mov
sti
cmp
or
aad
xchg
fiaddl
cmpsb
jbe
jge
xor
push
in
dec
adc
fs
add
xor
fnsave
into
les
and
push
mov
cmp
xchg
pop
shl
xchg
pop
mov
lea
sar
add
cmp
cld
pop
lret
in
hlt
cmc
icebp
data16
mov
loop
inc
mov
scas
pop
or
pop
in
push
popa
fs
jle
fnstcw
and
bound
imul
xchg
push
xor
stos
rcrl
add
xor
stos
inc
ss
sbb
and
sbb
push
cmpsl
mov
sub
clc
mov
lods
lret
loope
sub
test
sub
ja
outsl
ja
or
pop
mov
jmp
nop
add
push
ret
push
push
inc
rol
es
adc
jle
sbb
shrl
ds
cld
pop
mov
push
insb
test
and
cmp
mov
sbb
mov
and
in
xchg
push
pop
mov
sbb
hlt
push
movsb
mov
leave
inc
shlb
mov
add
cli
pop
mov
pop
es
push
sbb
rclb
jmp
rclb
ret
test
addr16
adc
das
aas
arpl
aas
sahf
push
insb
lahf
xchg
or
int3
add
fimuls
les
lret
xchg
mov
or
add
adcl
jg
mov
mov
in
pop
adc
jno
in
xchg
orb
xchg
cmpsl
iret
pop
faddl
lret
pop
jl
inc
fidivl
pop
sarb
push
xor
lret
mov
mov
loop
aam
xorl
mov
xor
ds
jl
je
dec
rorl
aaa
into
jbe
rcr
mov
jmp
mov
cmp
leave
adc
sub
xchg
lods
call
clc
xchg
jl
aaa
aam
jae
jle
push
inc
jb
xor
jae
cld
mov
sbb
pusha
mov
int3
call
mov
sbb
lret
nop
popf
fstl
mov
lret
sbb
add
jb
pop
hlt
inc
inc
push
push
scas
hlt
mov
fimuls
mov
mov
mov
cli
and
icebp
mov
mov
sub
mov
mov
and
gs
js
outsl
lret
adc
scas
pop
xor
push
push
aas
es
lods
mov
dec
sub
ljmp
mov
pop
outsl
push
adc
xor
push
push
fisubrs
lea
jne
imul
xchg
sub
jmp
and
jl
mov
mov
sbb
test
sbb
sbb
repz
test
jb
xor
cli
add
mov
add
cli
cmpsl
cwtl
mov
scas
push
enter
xchg
in
lret
cmc
loop
stos
mov
test
scas
inc
jmp
cmp
add
mov
cmc
cmp
mov
xchg
jbe
fildll
and
cmc
cmpsb
xor
insb
lds
cmpb
repz
or
xchg
adc
fisubl
loope
jbe
ljmp
mov
push
mov
mov
es
xchg
fwait
add
mov
sub
add
adc
add
in
inc
and
mov
in
add
sbb
xor
fdivrp
and
push
jg
popa
out
es
push
les
lock
or
mov
push
popa
hlt
dec
mov
out
xor
mov
sub
pop
fld
xchg
pop
pop
push
mov
scas
rclb
adc
fwait
scas
call
ret
int
xchg
mov
lods
ss
in
lea
mov
cmp
sbb
mov
ret
pop
mov
or
push
push
adc
mov
pop
jae
inc
xchg
and
add
fsubl
loope
movsb
xor
stos
ja
das
and
add
mov
and
movsb
sbb
iret
fcomip
xchg
pop
add
inc
push
ljmp
jl
add
scas
push
fnstsw
pop
mov
jns
roll
or
xchg
pop
xor
jb
popa
push
pop
and
test
scas
mov
nop
adc
iret
mov
pop
test
mov
inc
pop
mov
mov
fs
repnz
mov
sti
fs
inc
fstl
addr16
xlat
mov
adc
and
or
fsub
mov
cltd
sbb
mov
ds
xor
pop
cltd
xchg
mov
je
vmwrite
clc
mov
leave
sbb
push
pop
stos
scas
push
imul
lds
xor
mov
jae
adc
pop
enter
popa
add
dec
push
dec
xchg
pop
data16
call
out
mov
mov
or
mov
sbb
or
lahf
out
gs
shlb
fidivs
sub
insl
imul
imul
shrl
lods
pushf
inc
jl
fcompl
jnp
jb
insl
fucom
sub
inc
push
xchg
adc
addr16
loop
hlt
cltd
test
push
jle
aad
fimuls
enter
or
xchg
xor
movnti
sub
sbb
mov
jno
repnz
cli
stos
fwait
scas
fnstsw
insl
sub
mov
shll
sbb
mov
pushl
popf
daa
push
sbb
dec
sub
dec
shrl
add
nop
sbb
pop
mov
insl
jb
dec
dec
lods
dec
rolb
pop
clc
mov
icebp
outsl
sbb
mov
adc
outsb
jp
lea
repz
scas
movsl
add
sub
scas
xchg
adc
xchg
popf
or
in
clc
or
xor
sbb
mov
repnz
in
sbb
inc
cli
mov
imul
int3
insb
inc
shlb
js
in
es
aam
cmp
inc
fisubrl
xchg
push
loope
push
fnsave
mov
cmpsl
and
fmuls
dec
js
mov
ret
and
repz
jb
or
sbb
out
or
in
vaddsd
fisubrl
cmp
in
pop
fucomi
push
xor
add
mov
lar
jp
xchg
cs
mov
adc
pop
loope
ljmp
lds
mov
mov
cs
pop
mov
rcl
mov
ja
icebp
inc
ljmp
pop
mov
xor
mov
aaa
mov
and
jmp
ljmp
das
inc
sbbl
sub
mov
inc
insl
sbb
push
pop
mov
imul
mov
andb
push
cmp
inc
mov
push
cltd
loope
sbb
sbb
dec
cmp
xchg
fldcw
lret
inc
repz
icebp
push
dec
pop
push
mov
xchg
shll
cmp
icebp
lahf
aam
pop
pop
in
test
sub
lahf
fs
outsb
pop
pop
mov
scas
push
or
cmp
jo
jnp
push
out
inc
mov
mov
fwait
inc
test
or
stos
dec
jns
dec
in
xchg
leave
sti
leave
sub
sub
ja
in
insl
mov
dec
and
and
xor
in
mov
xchg
in
movsl
aas
rorl
sbb
add
es
mov
int
sbb
test
inc
cmp
sahf
insb
cmp
sub
sbb
outsb
cmp
fidivrs
popa
ljmp
cld
call
dec
xor
lret
and
mov
sub
and
cmpsb
jb,pt
push
stos
mov
sarb
fists
out
stc
mov
outsl
pop
repnz
frstor
and
mov
rcrb
cmp
subl
xchg
movsb
scas
cmpsb
aas
jge
push
xchg
test
jge
push
mov
jmp
mov
stos
mov
popf
sar
loop
cmp
jmp
loopne
movsl
nop
pop
push
adc
dec
jl
jns
pop
or
scas
sub
cmp
jbe
and
or
mov
daa
mov
pop
xchg
aas
adc
inc
mov
pop
lahf
adc
je
adc
add
add
adc
adc
inc
je
cmpsb
and
adc
outsb
adc
in
subl
int3
inc
adc
es
lahf
rorl
pop
xchg
scas
nop
mov
pop
lock
adc
sahf
lret
repz
movsb
mov
das
shrb
and
xchg
inc
ret
pop
pop
and
enter
mov
ja
xchg
dec
cli
pop
in
in
mov
xchg
fcom
loope
pop
pop
leave
clc
dec
jo
mov
xchg
mov
mov
jl
je
add
jp
sbb
ret
mov
ss
xor
jmp
jne
lock
and
xchg
pop
mov
test
movsb
inc
pop
adc
adc
fwait
push
test
push
and
imul
xlat
mov
ret
push
js
jo
jmp
repnz
jge
xor
mov
xchg
inc
js
push
imul
nop
push
jns
add
lret
test
iret
and
inc
loopne
mov
hlt
mov
mov
mov
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
in
fsubrl
sub
sbb
mov
cld
adc
pop
fdivl
int3
sub
mov
pop
push
dec
jecxz
shrl
sbb
or
cld
in
in
test
int3
sub
cmp
or
sbb
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
and
xor
add
adc
insl
push
jge
add
cmpsl
ret
test
xchg
repnz
hlt
pop
les
xor
add
adc
add
and
ret
test
xchg
repnz
cmc
xchg
loopne
mov
inc
xor
add
adc
add
and
push
shl
xchg
repnz
xchg
xchg
mov
or
imul
icebp
scas
clc
fbstp
insb
pop
lahf
fimull
inc
jg
sub
xchg
jo
adc
sar
add
lea
in
mov
sub
sub
mov
hlt
jle
repnz
fistpl
pop
inc
outsb
xchg
pop
push
xor
or
sbb
mov
pmulhw
aam
and
adc
scas
adc
add
int
sbb
mov
mov
hlt
insl
cmp
pop
aas
ja
mov
and
push
pop
mov
ds
xor
aam
sbb
int3
lods
ds
mov
lcall
jecxz
icebp
shlb
repz
mov
inc
xor
add
adc
add
and
ret
test
xchg
repnz
hlt
xchg
les
push
push
inc
or
add
adc
insb
shlb
cmpsl
shll
mov
inc
push
bound
add
jbe
push
adc
mov
xchg
popf
adc
xchg
stc
lods
mov
add
jno
and
je
inc
and
ret
test
xchg
repnz
hlt
xchg
les
xor
add
adc
add
and
ret
test
xchg
repnz
hlt
xchg
les
push
sbb
into
jne
pop
lods
loope
mov
pop
ds
imul
xchg
out
int
movsb
stc
sbb
cmc
jmp
sub
pop
mov
push
adc
enter
jae
push
and
add
int3
cmp
sub
pop
mov
test
out
test
sub
sub
out
imull
xchg
pushf
cmc
cmpsl
in
cmp
out
data16
lret
lods
lods
cmp
inc
cs
or
xlat
xchg
sbb
push
pop
mov
sub
test
sub
pop
mov
out
adc
repz
in
and
add
jge
xor
adc
jle
mov
pushf
xor
mov
and
out
into
xor
test
ficoms
inc
addb
xchg
xchg
repz
xchg
xchg
cmpsl
or
testl
pop
push
sahf
or
mov
cmp
fs
out
aaa
stos
mov
mov
out
lea
nop
push
fsubrl
movsb
lret
test
shrb
into
xchg
dec
stos
addr16
sbb
loope
inc
das
mov
inc
sbb
adc
mov
mov
sub
sub
mov
and
imul
stc
adc
and
push
and
addr16
dec
mov
ss
pop
loop
push
xor
test
aam
nop
shrl
jb
jne
js
inc
rcll
aam
adc
jg
cmp
mov
test
or
repnz
inc
mov
jb
roll
aas
sub
dec
pop
mov
ss
lds
int
aam
jp
fs
add
call
or
push
lret
xchg
fs
pop
push
adc
xor
add
mov
repnz
sbb
push
das
mov
fstps
xchg
dec
arpl
out
mov
lcall
in
jmp
imul
add
adc
pop
pushf
loop
popf
cmc
fldenv
or
sbb
mov
scas
mov
lret
data16
push
and
int
lods
lods
gs
jb
loop
repnz
dec
sub
jno
ja
add
ljmp
test
xchg
sbb
cs
leave
ret
cltd
clc
loope
mov
fwait
inc
or
push
ss
loope
adc
gs
sbb
frstor
dec
fimuls
mov
jecxz
rorb
fdivr
push
inc
ljmp
addr16
mov
aas
mov
cmc
mov
mov
fs
out
movsl
push
leave
addl
cmc
test
inc
add
jmp
aam
jecxz
jmp
cmp
cmpsb
das
mov
lret
push
cld
ja
out
les
mov
xchg
or
mov
fcoml
popf
push
dec
scas
push
fstpl
pop
addr16
push
inc
stc
popf
aaa
iret
fs
inc
sarb
inc
pop
adc
push
and
idivb
and
push
pop
divb
jbe
push
movsl
sbbl
ret
push
mov
jno
push
arpl
dec
subb
adc
inc
out
scas
outsl
es
sub
and
mov
in
ret
sub
sub
ss
jle
aaa
mov
mov
inc
xchg
cmpsl
mov
xor
pop
dec
mov
ret
es
fistpll
and
imul
subl
or
test
inc
sbb
ds
cld
out
inc
fcmove
fimull
jne
out
aam
mov
add
push
call
push
or
enter
add
sbb
push
dec
mov
jecxz
push
scas
js
sub
hlt
mov
adc
pop
clc
jne
xor
cmpl
add
test
movsb
ret
push
inc
inc
gs
jp
std
mov
inc
sub
pusha
and
mov
jb
dec
adc
sbb
mov
adc
adc
pop
movsb
mov
rorb
leave
or
jno
aam
test
push
ffree
push
sub
and
inc
adc
rclb
rcl
das
ds
aad
mov
cmp
or
xor
sbb
push
dec
pop
fisubrs
add
push
fwait
and
xor
rcrb
mov
xchg
movsb
adcl
xlat
push
arpl
shlb
cs
ja
mov
pop
push
adc
xor
fisttpll
jp
or
inc
cmp
and
cli
inc
in
mov
and
push
loope
jb
mov
or
push
sub
mov
inc
into
xor
je
aas
push
xor
cli
mul
cmp
scas
sbb
or
arpl
enter
rcll
repnz
scas
testl
icebp
inc
mov
pop
repnz
xchg
lods
lods
pop
pushf
test
cli
sub
fistpl
int3
dec
pop
cmc
mov
flds
pop
popa
xor
jge
jo
xorl
push
mov
push
sti
in
jg
out
mov
adc
lret
rorl
cmpb
jg
outsl
lret
imul
jbe
hlt
adc
insb
inc
mov
sub
cmpsb
in
or
cli
cmpsl
jns
cli
sbb
fwait
jle
pop
mov
out
out
je
into
pop
gs
mov
sbb
sbb
fistpll
push
lret
stos
cld
xchg
imul
pop
pop
adc
fsts
cs
hlt
cltd
lahf
sub
fisubrs
sbb
mov
data16
jb
sub
mov
adcb
mov
clc
mov
add
pinsrw
lcall
mull
mov
and
lret
mov
dec
lret
push
daa
mov
std
and
pop
xor
out
lret
push
stos
ss
cmp
pop
mov
push
orb
pavgb
rcrl
and
push
push
xor
push
stos
mov
lret
jg
xchg
ficomps
pop
or
mov
cwtl
xor
mov
in
test
inc
adc
daa
fisttpl
xchg
lahf
mov
rcll
subb
ret
jmp
fsubrs
imul
data16
xor
push
jo
xlat
dec
adc
hlt
push
fcompl
fists
cmp
cmp
inc
ss
orl
xchg
sbb
mov
mov
test
fistps
cmpsl
and
in
cmp
push
repz
sbb
mov
pop
addr16
cmpb
sub
cld
pop
outsb
sub
or
mov
adc
push
jnp
and
and
fdivs
jg
in
jb
pusha
dec
mov
mov
dec
push
sahf
cmpsb
loopne
mov
ret
lcall
lods
pop
lahf
mov
aas
pop
jg
push
insl
cwtl
jbe
adcb
out
mov
jge
add
mov
popf
jo
add
orb
jo
das
out
or
les
popf
sbb
outsb
scas
xchg
imul
xchg
mov
sti
dec
sqrtps
or
hlt
cmp
cmp
mov
imul
in
cmp
push
movsl
inc
sub
mov
sti
outsb
add
stos
cld
ja
pop
loope
dec
jmp
xor
xchg
call
test
in
ljmp
jecxz
jp
cltd
pop
add
pminsw
fidivl
mov
xchg
cld
cmpsb
push
mov
and
shlb
lret
dec
push
std
lret
shlb
push
aaa
imul
jp
mov
and
test
jmp
push
test
pop
push
jns
out
imul
fs
add
cmp
icebp
jns
test
loope
pop
cld
jle
sub
fcmovbe
and
daa
or
imul
xchg
dec
lret
nop
cmpsl
mov
add
enter
pushf
ret
mov
dec
push
pop
fwait
or
adc
push
mov
sbb
outsb
std
xlat
fidivrl
fstl
in
mov
insb
mov
mov
dec
movsl
pusha
ljmp
jecxz
pop
scas
sub
xchg
std
fidivl
jmp
push
pop
jecxz
adc
ficoml
adc
sti
mov
add
or
jmp
and
mov
mov
rcll
lahf
add
int3
addr16
mov
sbbb
mov
lahf
mov
and
jl
pop
jmp
mov
fwait
out
xchg
pop
mov
stos
pop
mov
cmp
sub
std
and
stos
ljmp
fstp
int3
es
out
jns
xor
sbb
xchg
mov
pop
daa
insl
and
jb
or
mov
mov
sbb
ror
mov
shlb
sahf
pop
arpl
add
dec
hlt
sub
and
dec
mov
jb
mov
push
mov
repz
cltd
sti
xlat
mov
sbb
and
adc
adc
xchg
scas
xchg
sbb
cltd
cld
fistl
mov
pushf
insl
add
inc
mov
mov
daa
add
sbb
push
sub
or
or
fisubrs
pop
jle
adcl
repnz
jno
pop
cmp
sub
cwtl
mov
pushaw
cmp
sbb
stos
lods
xorb
addl
adc
ds
aas
xchg
inc
sbb
xor
add
mov
mov
ljmp
cmc
addr16
push
negl
jno
into
mov
xchg
bound
bound
int
outsb
mov
push
mov
sbb
inc
mov
adc
lods
mov
stos
push
data16
loopne
pop
and
jo
gs
sub
sub
int3
mov
inc
mov
dec
inc
repz
ret
scas
pop
dec
lea
sub
aaa
or
push
and
loope
enter
xchg
incb
xchg
mov
mov
fildll
out
add
sub
out
adc
popf
cli
addr16
or
and
int
in
inc
push
mov
aaa
dec
add
dec
add
push
xchg
xor
pop
mov
shrl
fstl
aad
int
stos
xchg
mov
lret
dec
jae
jno
les
jno
out
je
sub
repz
fwait
mov
inc
std
das
mov
out
push
cwtl
jns
jmp
or
ss
mov
sti
mov
outsb
in
xchg
push
imul
pop
js
arpl
jg
add
inc
cmp
mov
out
inc
ss
adc
jg
fcoml
mov
imul
mov
mov
out
aam
or
mov
lret
xor
pop
cli
repz
mov
popa
xchg
aaa
and
fbstp
lret
test
inc
mov
cli
cltd
stos
pushf
cmp
movb
or
stc
scas
or
insl
pusha
push
icebp
xchg
fsubrl
ret
xchg
jae
pop
addr16
or
mov
pop
cwtl
or
pusha
stos
orl
add
insb
rolb
jp
jo
pop
mov
mov
mov
out
pushf
jmp
call
xchg
fidivl
gs
jns
push
xor
into
mov
or
add
insb
cmp
pop
lods
jno
mov
pop
call
pop
jmp
ja
inc
xor
cs
sbb
jne
into
add
inc
fiadds
fcoms
pop
enter
inc
clc
lcall
push
insl
sbb
in
mov
out
int
jae
jl
mov
add
rclb
adc
mov
scas
cmp
jmp
cmp
xchg
mov
js
icebp
jle
je
mov
orb
xchg
into
js
pop
clc
xor
outsl
jl
ja
sbb
fildl
mov
mov
jl
popa
pop
xor
nop
lds
pop
movsl
mov
sahf
sub
lods
sti
in
push
xlat
push
insl
jo
and
jnp
call
cld
jp
loopne
stos
in
jmp
adc
mov
mov
cmp
sub
jl
std
xchg
pop
xor
lcall
insl
adc
xor
rcl
adc
mov
or
pop
test
dec
sarl
jle
sbb
mov
test
mov
inc
test
gs
sbbb
and
outsb
imul
movsb
jo
inc
sahf
push
dec
push
xchg
or
arpl
xchg
lods
jae
push
jo
fdivr
pop
jnp
or
arpl
nop
je
rclb
mov
pop
xor
mov
mov
push
or
icebp
xchg
adc
mov
inc
pop
push
hlt
mov
fisttpll
jns
xchg
and
repz
inc
pop
ja
xor
cmpsl
inc
mov
lods
in
clc
in
jb
movsl
xor
aaa
test
dec
xchg
das
fmulp
leave
push
dec
jbe
lret
lods
push
and
hlt
cltd
mov
lcall
mov
mov
pop
ret
rcl
je
mov
xor
sarb
daa
out
lds
mov
outsl
fs
int3
add
sahf
icebp
sbb
jge
push
scas
mov
jle
dec
pop
push
int3
sahf
pop
movsl
std
add
mov
outsl
sub
subl
cli
inc
das
jb
sbb
nop
lods
iret
xchg
push
fwait
lock
jmp
sub
or
and
jno
int
cli
adcb
sbb
mov
mov
mov
test
scas
lret
int3
jecxz
push
sub
mov
pop
mov
push
in
aad
test
adc
test
mov
mov
scas
cmp
or
lods
sub
mov
test
adc
nop
popf
cs
cs
dec
sti
xchg
jmp
xchg
dec
sub
insb
cltd
arpl
sbb
xchg
outsb
sahf
in
xor
jbe
pushf
aas
cmp
xchg
mov
cmpsl
das
mov
test
pushf
jg
aad
in
ljmp
mov
adc
sbb
aad
hlt
dec
jne
imul
pop
ret
cwtl
jno
push
popa
lcall
test
std
fidivl
adc
imul
jge
pop
mov
pushf
jle
adcl
insl
push
aad
mov
shll
mov
add
aaa
inc
andb
and
in
jo
pop
test
push
lds
outsl
inc
jecxz
push
mov
stc
incl
xchg
sub
fstps
dec
mov
or
loopne
or
cmp
push
push
mov
cmp
cld
sbb
insl
push
inc
in
mov
rol
lahf
xchg
test
push
je
out
es
outsl
xchg
loop
cwtl
or
in
adc
jl
cs
sub
mov
mov
lods
es
and
shl
lcall
aam
pop
ja
sti
jmp
in
xchg
mov
add
popf
je
sbb
stos
adc
imul
mov
out
add
dec
xor
dec
or
cmp
mov
inc
test
inc
mov
stos
std
jecxz
out
lahf
add
iret
sbb
icebp
js
gs
fmull
popa
sub
inc
lret
or
stc
iret
clc
sub
mov
inc
loope
ret
fwait
add
push
xchg
or
das
shlb
mov
fnsave
roll
fldt
cmp
popa
mov
mov
in
jmp
inc
mov
pusha
pop
or
mov
lcall
clc
push
mov
test
sbb
fisttps
inc
ficomps
dec
fwait
inc
loop
outsb
fs
mov
xchg
lods
cld
pop
ret
xor
or
inc
loope
insl
dec
sbb
mov
pushf
ret
aas
mov
enter
add
push
cli
shll
and
xchg
hlt
decl
aas
fsubrs
imul
das
mov
jg
xor
cltd
pushl
insl
adc
jb
loopne
mov
test
jge
dec
inc
adc
inc
mov
add
cmpsl
iret
lods
or
ficoms
add
fisubl
pop
int
sub
sbb
inc
sbb
jl
xor
pop
rcrb
shrl
inc
mov
lret
stos
sbb
push
jl
and
in
add
dec
mov
mov
sbb
enter
insb
hlt
fldt
jno
push
mov
int3
mov
out
les
pushl
and
mov
jbe
pop
pop
arpl
fwait
or
loope
outsl
movsl
and
jmp
mov
jp
jp
pusha
fstps
adc
dec
sbb
add
sbb
sub
pop
cmp
fstp
out
cmpsl
xchg
mov
ffreep
mov
mov
lods
repnz
and
jns
dec
pop
pop
popf
mov
ficompl
pushf
loopne
push
sbb
subb
aas
in
lds
xchg
jl
jmp
mov
movb
sub
outsb
jp
cmpsb
xor
sbb
add
push
xor
inc
xor
cli
leave
rcl
rolb
xchg
and
sbb
jmp
xor
jns
aaa
in
icebp
ss
push
pop
sbb
cmp
mov
sub
sub
cwtl
pusha
rcrb
enter
shrl
xchg
mov
xor
add
enter
outsb
sub
or
fiaddl
jmp
movsl
and
adc
aas
imul
lock
jns
lds
outsb
in
loope
adc
pop
mov
mov
clc
mov
push
fstpl
jne
push
xor
mov
xor
out
mov
repnz
or
cmc
mov
sub
dec
sbb
mov
adc
mov
or
addr16
stc
ror
pop
outsl
mov
push
bound
mov
or
sbb
sbb
pop
test
pushl
ljmp
in
mov
hlt
or
adc
cltd
movsl
out
push
es
push
test
adc
xor
xchg
icebp
and
testb
and
lcall
push
add
outsl
add
xchg
inc
lock
ret
outsb
inc
dec
mov
out
cmp
dec
add
insb
sub
aaa
adc
insb
or
jecxz
mov
sahf
fcom
push
inc
mov
sub
fisubrl
or
fsubrl
scas
xor
sub
out
ffree
jge
in
mov
or
lods
jg
js
fdivrp
push
ss
sbb
pop
adc
xlat
lret
lods
test
xor
rolb
mov
int
mov
pop
outsl
imul
fistpl
dec
jecxz
hlt
faddl
loop
rolb
ss
dec
xchg
daa
enter
ja
sub
mov
arpl
test
ja
xchg
xor
mov
cltd
push
out
iret
xchg
in
mov
inc
rcr
mov
ds
sub
pop
sub
jge
mov
dec
pop
insb
cmp
mov
adc
lods
adc
dec
mov
outsl
adc
mov
push
cltd
in
mov
adc
dec
in
or
and
sub
mulb
mov
addr16
xlat
jb
mov
sub
push
daa
insb
out
outsl
xchg
and
mov
imul
into
and
and
xor
mov
jae
push
cmp
aaa
cs
pop
pushf
out
push
jns
xchg
lea
push
movsl
outsb
ljmp
nop
push
adc
lahf
mov
enter
aad
into
xchg
mov
xchg
ret
xor
enter
add
or
jmp
pop
jl
inc
bound
idivb
mov
outsl
and
mov
inc
cmp
cmpsb
mov
add
jl
add
cld
outsb
push
sub
mov
add
adc
mov
inc
lret
int3
push
add
push
xor
scas
pop
fstps
push
or
aam
mov
mov
arpl
cmpsb
pop
jle
sub
out
incl
leave
lds
push
jo
mov
cld
call
clc
mov
mov
fldl
aaa
dec
xor
imul
jp
sar
pop
hlt
pushf
negb
scas
pop
xor
sarl
ret
add
repnz
cmpb
sarl
mov
dec
cmp
pop
fstp
rcrl
gs
pop
sahf
cwtl
int3
ret
xor
in
ja
popf
ljmp
mov
outsb
fcmove
ja
push
cmp
rol
sbb
int3
imul
and
add
mov
lcall
rcll
or
es
cmp
xchg
cmp
or
fnstsw
push
mull
mov
sub
cmp
push
lahf
inc
xchg
loopne
ja
pop
cmp
imulb
xchg
jecxz
es
cs
pop
dec
iret
sub
bound
loopne
cltd
jae
outsl
mov
cmp
je
out
jle
data16
dec
sub
adc
and
inc
fiadds
lret
push
inc
dec
loop
mov
jbe
sbb
idivl
and
sbb
cmp
fcoms
push
cmp
jb
add
and
ret
test
xchg
repnz
hlt
xchg
les
xor
add
adc
add
and
ret
test
xchg
repnz
hlt
xchg
les
xor
add
adc
add
inc
and
inc
mov
test
xchg
repnz
hlt
xchg
lds
xor
add
adc
add
and
xor
dec
js
loop
test
pop
sub
iret
push
dec
mov
movsl
lret
pop
test
fildll
iret
aaa
sbb
sbb
pop
scas
pop
pop
stos
dec
mov
pop
jmp
sti
aas
lret
das
fcmovnu
sub
cmp
or
pop
pop
mov
mov
pop
repnz
aas
shrl
rcr
iret
add
sub
adc
das
stos
dec
shlb
aas
adc
sbb
pop
mov
mov
inc
call
test
or
cs
pusha
add
stos
stos
xor
cmpsb
sbb
out
jo
mov
push
push
ficoml
jo
push
lcall
mov
pop
aaa
fildll
adc
cmp
ljmp
mov
cmp
xchg
das
and
jnp
jmp
in
cmp
test
xchg
mov
sub
jp
test
das
fidivl
dec
out
sbb
add
idivb
dec
push
movsb
cmpsl
movsb
dec
pop
cmc
mov
push
call
sbb
icebp
jmp
das
mov
bound
jmp
push
mov
stos
dec
lods
jg
outsl
sbbl
shrb
ret
iret
and
adc
add
dec
scas
aas
sub
or
pop
mov
dec
mov
inc
jge
nop
pop
mov
ret
sub
dec
add
or
or
daa
sahf
jp
imul
scas
push
mov
push
mov
pop
aam
cld
adc
daa
mov
sub
popa
ficomps
dec
out
pop
xchg
sti
aas
lret
das
fcmovnu
sub
cmp
or
sbb
dec
scas
pop
pop
stos
dec
mov
pop
jmp
sti
aas
lret
das
fcmovnu
sub
cmp
or
sbb
dec
scas
pop
pop
stos
dec
cmp
stos
cmp
jae
ret
orl
in
jae
xchg
dec
and
mov
test
push
in
jp
and
xchg
cmp
mov
lods
outsl
jne
cmp
sarb
dec
sbb
mov
adc
add
and
sahf
or
lcall
in
jge
frstor
sub
out
outsl
and
cmp
stos
jae
mov
and
dec
or
xor
js
out
incb
sbb
dec
jbe
and
sbb
mov
cmp
hlt
ss
out
cmp
jnp
jo
lea
pop
pop
pop
data16
sarl
imul
jae
inc
or
mov
inc
mov
adc
jae
imul
call
xchg
lods
add
push
dec
aas
sbb
shll
xor
addr16
arpl
aaa
mov
int3
ja
and
jg
nop
scas
inc
push
sub
jne
std
ss
data16
bound
jbe
testl
adc
pushf
xchg
loopne
add
pop
jecxz
or
ljmp
addl
imul
into
aad
insl
push
push
cmp
lods
jne
cmp
fs
in
dec
jne
xchg
call
mov
in
inc
imul
sub
pop
dec
in
test
loopne
or
rolb
lahf
out
xchg
cmp
rolb
subl
shll
imul
sub
xor
cld
imul
test
jbe
xor
outsb
lcall
and
out
rcrb
jae
in
jecxz
cmp
push
jecxz
shll
lret
lret
pop
mov
adc
cwtl
add
mov
test
xor
mov
inc
sbb
out
push
das
xor
insb
adc
sub
mov
decl
xor
push
adc
mov
enter
push
fnsave
or
ret
movsb
push
xchg
icebp
xorb
add
fiaddl
pop
mov
js
dec
inc
mov
fdiv
std
add
mov
movsb
insb
mull
push
sub
inc
pusha
leave
mov
repnz
fbstp
jo
outsl
pop
xchg
sub
mov
sub
lds
cwtl
pop
subl
icebp
in
cmp
xchg
scas
push
ljmp
lock
out
pushf
dec
mov
fwait
lcall
in
xor
push
subl
pop
jmp
testb
enter
push
and
xor
sahf
rcr
je
cmp
leave
xchg
fcmovnb
or
adc
pushf
mov
jns
int
mov
in
loopne
or
jg
mov
loope
shl
in
out
push
mov
jnp
mov
push
lahf
arpl
lcall
or
das
cmp
jg
push
pop
cmp
sub
mov
stc
ss
mov
in
inc
dec
inc
int3
orps
mov
add
add
or
ds
jp
int3
jno
fwait
idiv
stc
mov
gs
mov
xchg
test
insb
adc
nop
mov
jns
loopne
sahf
roll
stc
pushf
mov
xor
out
push
xchg
das
xor
push
pop
sbb
cmp
mov
jns
lcall
add
pop
out
je
dec
push
scas
imul
jae
nop
ret
xchg
jle
adc
mov
and
push
mov
push
out
pop
mov
mov
mov
sbb
imul
pop
cwtl
jge
and
xchg
nop
dec
jnp
pop
popf
imulb
add
xchg
push
cmp
das
das
fsubs
int3
in
ljmp
ret
addr16
pop
adc
cmp
lahf
cwtl
push
pop
sub
xchg
and
inc
je
fistpl
xchg
mov
xor
push
in
aad
mov
lock
mov
sbb
fstps
not
xlat
push
mov
sbb
stos
rolb
pusha
jl
and
and
inc
scas
rcll
dec
xor
lods
sarb
dec
pop
cmp
cmpsb
pop
nop
mov
loope
out
imul
lock
cmp
inc
lds
inc
adc
sbb
in
jns
mov
adc
sub
pop
cmp
pop
cs
jne
push
mov
xchg
pop
xchg
shrl
arpl
decb
dec
mov
ljmp
out
test
cs
repnz
xchg
fdivr
xor
fmull
inc
sbbb
in
lds
or
int3
loopne
mov
jg
rcl
sbb
inc
pop
loopne
loopne
push
mov
roll
test
pusha
sbb
outsl
clc
cbtw
xchg
jo
sub
js
bnd
pushf
scas
outsb
add
fmull
repnz
in
sbb
push
cmp
in
sti
cmp
push
mov
lcall
inc
mov
sbb
outsl
jo
fistps
jmp
push
scas
adc
jmp
addr16
jb
mov
sbb
xlat
dec
mov
ds
lret
je
sub
fmull
les
sarl
cmp
jbe
sahf
stos
dec
xchg
scas
pop
pop
fdivrs
out
pop
adc
inc
adc
cwtl
or
jmp
cltd
cmp
mov
data16
jmp
or
pop
ficoms
mov
fcomi
jb
sbb
xchg
xor
or
jno
xchg
and
push
sti
add
sbb
adc
repz
rcr
mov
cltd
scas
sbb
mov
sti
cwtl
cmp
sbbb
push
xchg
subl
fcom
adc
adc
pop
loope
ret
sbb
mov
fwait
mov
in
xor
pushaw
imul
insl
and
jl
cmp
inc
outsb
dec
push
lea
inc
lcall
jge
ret
insl
pusha
aad
push
popf
pop
ret
inc
dec
fcomps
sarl
aas
cmp
mov
add
stos
test
inc
addr16
addr16
sti
fld
filds
pop
inc
xchg
faddl
pushf
adcb
sahf
out
das
xchg
movl
cmp
adc
cmp
shll
cmp
ljmp
stos
sub
lcall
cmc
stos
mov
scas
sub
sub
inc
cwtl
pop
xlat
aaa
xor
insb
lds
cmp
pop
fstl
or
jbe
mov
js
fs
arpl
add
xchg
mov
outsl
testl
xor
sub
or
xchg
or
push
mov
mov
sub
or
jne
pop
sub
sub
scas
inc
xchg
push
jle
inc
aaa
cld
dec
xor
inc
add
jo
testb
cmp
add
xor
ljmp
sub
inc
dec
inc
jbe
in
or
dec
sahf
mov
mov
in
mov
push
sub
add
push
lock
cmpsb
test
shll
xor
mov
pop
xor
out
add
and
sbb
push
inc
cmpsb
push
mov
insl
mov
mov
xor
push
ror
pusha
leave
inc
push
inc
out
inc
jne
jb
xchg
js
dec
insb
add
outsl
xchg
jne
fidivrl
out
jge
jg
movsb
adc
ss
or
dec
outsb
aad
lret
and
adc
push
ret
mov
xchg
nop
and
sbb
jg
icebp
mov
add
sbb
xchg
push
shll
fsubs
lds
call
push
cli
fcoms
fildl
xchg
xchg
push
dec
inc
idiv
lret
aas
jecxz
cmp
loope
in
test
inc
das
lea
and
insl
ljmp
push
and
fmuls
sub
add
scas
push
cmp
add
cmp
sbb
movlps
inc
jb
outsl
nop
enter
push
jo
mov
repz
ljmp
pusha
lods
ds
push
sbb
ss
and
adc
inc
out
outsl
cltd
ja
sub
sub
push
or
xchg
xchg
dec
out
das
add
jmp
addr16
cs
cmp
push
stc
pop
adc
js
mov
add
jg
inc
repnz
push
notl
or
movsb
adc
inc
sbb
add
push
imul
mov
movsb
push
aad
outsl
lock
arpl
jg
inc
aad
adc
mov
test
mov
pop
stos
xchg
sub
xchg
lcall
sahf
sbb
or
mov
popa
repz
dec
xor
push
sbb
pop
or
cmp
pop
pop
in
adc
push
cli
push
pop
es
ja
xor
dec
and
sub
jne
mov
icebp
push
rclb
adc
xchg
addr16
bound
lcall
or
mov
jl
dec
sbb
jno
sbb
data16
movswl
mov
sub
jmp
aas
test
xor
les
xor
sub
or
out
add
xchg
pop
int
lods
mov
arpl
pushl
jle
push
repnz
fdivs
movsb
sbb
mov
jge
mov
jge
mov
cmc
sbb
lret
cmp
bound
cmp
lea
fcmovb
loopne
insl
sbb
cltd
popl
movsl
mov
push
jne
add
fs
pop
stos
dec
push
push
je
int
xchg
sbb
and
cmp
lds
dec
xor
mov
push
out
push
aad
sub
fildll
mov
push
popa
or
rorl
mov
dec
dec
test
leave
add
and
int3
sbb
cwtl
sarb
lret
iret
and
xchg
jno
fnstenv
mov
jnp
rorb
sahf
pop
xor
dec
ficoml
and
gs
mov
adc
cltd
loop
test
sbb
mov
roll
pop
aaa
cmp
push
mov
movsb
aad
cltd
or
iret
mov
rcrl
fcoml
addl
loop
js
xchg
add
and
aad
clc
data16
pop
mov
mov
push
fstl
pusha
cmp
mov
fstp
push
int3
cmp
xor
sar
xlat
subb
mov
xlat
repnz
bound
lahf
fiaddl
sbb
cmpsb
mov
lsl
cltd
js
adc
adc
lret
sub
xor
or
test
add
dec
cmpsl
mov
out
mov
inc
shrl
out
call
test
rclb
xchg
js
jae
jae
jb
rorb
idivl
pop
mov
push
shr
mov
leave
movsb
lcall
std
sub
sub
xchg
call
fstpt
cltd
sbb
imul
nop
or
sti
or
jl
ud2
in
inc
or
aad
dec
out
sub
fadds
sub
jno
or
int3
cmp
into
jb
popa
cmp
xor
sahf
or
aas
rcll
add
cmpb
outsb
cwtl
test
lock
fistl
jl
cltd
mov
fcomps
adcl
testb
jmp
xor
loopne
xor
mov
movsb
adc
test
pop
das
and
pop
mov
std
mov
popa
out
cli
pop
pop
addl
jno
in
inc
outsb
loopne
sbb
daa
add
xchg
cmpb
mov
adc
test
push
push
dec
aad
test
inc
sbb
bound
mov
sbb
or
add
adc
arpl
popl
lret
mov
jae
cmp
test
mov
jnp
cmp
bound
and
push
ljmp
dec
cmp
dec
mov
fdivs
pushfw
sbb
mov
xor
cltd
mov
dec
repnz
cmp
dec
xor
aas
int
cltd
mov
pop
jb
js
pop
xor
sbb
fdivl
pusha
mov
addb
ret
insb
mov
inc
lock
jae
jge
aas
adc
mov
add
lret
shll
insl
out
dec
nop
push
repnz
cmpsb
rclb
inc
and
cmpsl
mov
adc
dec
adc
lods
testl
xor
cmp
daa
ret
mov
imul
out
sbb
xor
inc
pop
sti
enter
aas
adc
scas
mov
or
dec
dec
pop
ljmp
sub
dec
adc
pop
mov
sbbb
sub
insl
push
inc
mov
adc
enter
push
jo
lock
mov
pop
aaa
fmuls
mulb
addr16
xchg
enter
inc
fnstcw
add
pusha
ffree
mov
xchg
mov
dec
daa
xchg
sbb
mov
mov
dec
xchg
xchg
lcall
mov
pop
jae
js
sbb
outsb
and
pusha
jo
lahf
or
adc
xchg
lds
pop
mov
sbb
push
inc
fcom
leave
outsl
sub
or
rolb
int3
shll
fwait
aad
out
mov
push
shlb
leave
pop
lret
mov
add
xor
rorb
mov
pop
lcall
mov
pop
inc
cmc
and
je
mov
or
outsb
and
cmpsl
adc
xor
cmp
xlat
sbb
mov
inc
pushf
mov
filds
rorl
in
cli
inc
pop
push
dec
mov
xchg
jb
cmp
pushw
push
out
test
push
pusha
les
mov
and
ficompl
pop
lock
outsb
lcall
mov
push
push
sub
or
and
cmp
adc
or
fildll
mov
xchg
aam
inc
loopne
std
xchg
inc
dec
and
test
and
xor
dec
push
movb
ss
dec
sarl
sbb
shll
in
inc
cmp
fisubl
icebp
addr16
cmp
push
out
cmp
mov
repnz
jge
push
sub
int
sub
xor
xchg
imul
inc
loopne
mov
fnsave
out
pop
adc
cs
dec
or
pop
stos
nop
sub
std
roll
lds
repnz
js
cmc
push
aam
adc
cltd
ljmp
sub
cs
xchg
rol
add
and
fwait
mov
into
xor
sub
in
xchg
in
iret
cmp
sti
nop
sbb
xor
mov
aad
jns
add
idiv
movsb
fstp
daa
repnz
call
test
xchg
in
mov
dec
adc
int
mov
sbb
popa
cmpsb
mov
sbb
adc
jle
push
xor
lcall
mov
orl
ret
cli
and
fs
xchg
mov
dec
xor
cmp
je
pusha
add
rcrb
adc
cmpsl
cltd
lock
xorb
movsl
scas
jnp
jp
in
mov
pop
stc
sub
dec
adc
loope
sbb
and
inc
add
pushf
sbb
fimuls
decb
xchg
movsbl
daa
add
xor
inc
in
leave
sbb
xlat
push
push
and
xchg
in
shlb
pop
ljmp
jg
sub
jo
imul
fistps
lock
scas
addr16
ret
ret
mov
lds
out
movsb
dec
out
movsl
lds
dec
lods
in
lds
jne
fwait
stos
or
xor
ss
push
insl
push
cmp
andb
lahf
xchg
jl
push
lods
or
leave
and
ljmp
popf
aaa
add
roll
loope
jg
mov
rcrb
sub
insb
jb
xchg
cmp
or
mov
adc
jnp
cmpsb
jge
xchg
push
add
popf
xchg
pushf
pop
jecxz
insb
ficompl
ja
out
xor
cmpsb
mov
sbb
mov
sub
mov
sbb
fwait
cmpsb
rcll
dec
xchg
inc
mov
add
cld
adc
fldt
mov
test
jmp
movsb
insb
mov
pop
xor
cmpsb
push
or
adc
jb
jp
ficompl
scas
mov
inc
cli
pandn
ret
jbe
pop
mov
in
mov
shll
mov
pushf
je
inc
sub
xchg
cmpsb
hlt
int
mov
cwtl
inc
mov
cmc
pushf
lock
and
mov
movsb
clc
pop
add
shlb
xchg
mov
shl
movsb
fidivrs
js
flds
push
imul
mov
mov
or
cmc
jp
iret
sbb
icebp
jns
push
sbb
rorb
and
scas
inc
jbe
adc
add
lret
insl
jb
and
xchg
mov
inc
lock
mov
scas
push
lcall
lret
negl
jbe
in
adc
jo
insl
sbb
inc
sub
loope
mov
xchg
gs
mov
test
nop
imul
xor
lds
in
insl
imul
mov
vminsd
pop
and
adc
imul
pop
lea
dec
out
outsl
sub
leave
cmp
push
shrb
adc
in
mov
pop
sbb
lock
mov
out
movsb
jp
stos
loop
cmp
jnp
stos
rcrl
test
call
fldt
inc
mov
jnp
mov
mov
mov
enter
pop
pop
jnp
push
rcrl
jo
lahf
dec
jns
ret
push
insl
inc
fprem
arpl
and
xchg
pop
dec
dec
xor
iret
in
push
dec
mov
popa
fisttpll
insb
outsb
cmp
cmp
pop
and
scas
lock
pop
push
and
pop
fldenv
inc
mov
add
cltd
aas
mov
jne
dec
cmp
adc
jp
jno
inc
sbb
pusha
xchg
popaw
sbb
and
xchg
incl
test
repz
inc
xorl
dec
xor
movsb
mov
cmp
add
test
mov
scas
jle
sbb
xchg
movsl
sahf
aad
mov
mov
fdiv
movsl
xor
lods
test
cmp
sbb
and
pop
cmp
dec
sti
outsb
pop
xorl
xchg
repnz
mov
and
pop
sbb
shlb
jecxz
clc
mov
and
int3
sahf
or
sub
jecxz
jmp
jg
jge
in
mov
stc
jns
icebp
inc
jns
add
dec
xor
aas
jno
or
cmpsl
jae
adc
repnz
xchg
sub
pop
and
ror
mov
out
mov
std
mov
stc
in
pop
jbe
lea
pop
xchg
idivb
icebp
ror
fs
leave
dec
mov
xor
daa
mov
cli
ds
xchg
push
and
mov
fistl
jne
ljmp
loopne
addb
lret
sub
adc
xor
or
cmp
jge
nop
xor
shr
movsb
or
xchg
out
sub
or
xor
lret
sub
lds
inc
push
jle
cmpsl
mov
sarb
je
cmpsl
pop
adc
cs
sahf
mov
nop
push
scas
jae
push
ja
pop
pop
cld
inc
or
mov
fbld
push
push
loop
test
adcb
xchg
mov
mov
pop
cld
inc
aaa
ret
mov
pop
popf
sbb
inc
pop
das
lret
adc
dec
rolb
cli
lret
addr16
mov
in
jp
clc
movsb
fsubr
xchg
repz
mov
andb
fnstcw
and
or
ss
mov
xchg
ds
sbb
sbb
push
mov
sbbb
mov
xor
cmpsb
or
testl
insl
lds
pop
insl
or
or
or
js
pop
fbld
call
adc
pusha
add
mov
adc
mov
push
push
pop
adc
leave
and
aam
insl
inc
filds
mov
add
xchg
stc
in
out
orps
or
in
add
lods
dec
gs
loopne
loope
sbb
xchg
leave
loope
cltd
outsl
mov
sub
fbstp
sbb
repz
cmp
inc
iret
out
xchg
mov
jno
cmp
push
neg
dec
nop
nop
xor
je
sbb
insl
fsubrp
pusha
daa
inc
push
xor
mov
negl
ss
loopne
mov
sbb
pushf
xchg
bswap
pop
pop
push
jns
lods
or
scas
mov
push
add
and
xor
addr16
adcl
mov
jnp
lcall
inc
inc
dec
adc
add
out
mov
in
repz
nop
xchg
adc
sbb
push
fcmovb
cs
pop
mov
data16
or
jmp
jae
je
jne
mov
js
xlat
adc
mov
xchg
xor
add
pop
sbb
add
or
adc
leave
les
xchg
jns
jmp
xchg
push
jmp
movsb
cmp
dec
cs
stos
xor
cmc
and
cli
jp
inc
pop
sub
clc
cmp
lret
sub
stos
inc
pop
and
or
scas
cltd
fcoml
mov
cmpsb
or
mov
pop
jmp
sti
aas
lret
das
fcmovnu
sub
cmp
or
sbb
dec
scas
pop
pop
stos
dec
mov
pop
jmp
sti
aas
lret
das
fcmovnu
sub
cmp
or
sbb
dec
scas
pop
pop
stos
dec
mov
pop
jmp
sti
aas
lret
das
fcmovnu
sub
cmp
or
sbb
dec
scas
pop
pop
stos
dec
mov
pop
jmp
sti
aas
lret
das
fcmovnu
sub
xchg
push
or
insb
call
mov
movsb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ds
sti
push
lret
push
push
cmp
sub
sahf
pop
mov
sub
mov
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
stos
pop
mov
mov
dec
mov
pop
out
cmp
or
sbb
repnz
rorl
ret
jle
outsb
mov
mov
xor
dec
nop
jns
je
cmpsl
mov
jl
arpl
aad
mov
jl
je
push
dec
fstpl
sar
mov
hlt
mov
jmp
jno
ret
push
fucomi
dec
push
je
fs
xchg
addb
dec
sti
gs
xor
ja
nop
clc
xchg
mov
les
and
movsb
pop
mov
mov
mov
add
xor
mov
jle
mov
mov
add
xchg
shrl
je
ss
lds
into
pop
orl
xchg
push
test
sub
sub
pop
fistpl
pop
xor
push
xchg
scas
push
mov
add
adc
lret
movsb
ret
fcmovnu
or
jmp
rorb
fstpt
outsb
mov
mov
push
mov
xor
and
adc
sbb
inc
mov
imul
out
incl
jnp
dec
loop
fwait
dec
xchg
lcall
xchg
dec
mov
add
pop
decl
fistpl
lods
push
fildll
lret
pop
fwait
pop
mov
outsl
push
jmp
sti
ja
setle
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
call
movsb
and
pop
pop
add
popf
out
bound
jge
push
bound
pusha
and
mov
iret
bndldx
shlb
sub
cmpsb
jmp
or
cmp
iret
mov
xor
push
inc
push
iret
out
mov
mov
mov
jge
into
imul
lods
xchg
push
add
adc
sub
rorb
call
fwait
jge
ret
repnz
push
fwait
std
push
fwait
push
fsubrl
mov
pop
mov
push
hlt
or
push
inc
cltd
inc
das
mov
dec
lcall
xchg
mov
int3
or
dec
sbb
and
fs
xor
mov
and
or
lock
jns
cmp
mov
mov
xchg
jp
adc
add
lods
jg
mov
pop
pop
cld
int
sti
add
loope
jo
mov
mov
pop
out
pushf
mov
popa
sbb
aas
out
add
jge
xchg
cmp
mov
jl,pt
dec
test
mov
cwtl
or
insb
not
push
mov
aas
push
out
mov
push
ljmp
movsb
push
lcall
add
jg
in
inc
addr16
adc
add
sbb
inc
pop
out
out
ret
popf
inc
mov
push
loop
imul
pop
lods
or
and
dec
ja
sub
xchg
cmp
or
cli
mov
cmp
pop
fucomi
bound
mov
scas
mov
mov
push
fwait
adcl
adc
arpl
adc
pop
or
test
mov
or
int
and
not
icebp
lret
cmc
inc
cmp
mov
jmp
adc
in
movd
dec
pusha
insl
and
scas
adc
inc
xor
rcrb
imull
popa
es
test
dec
and
xchg
cli
xor
sbb
cmp
push
pop
hlt
sub
negb
mov
aad
data16
pop
loope
fistpll
ret
cmp
je
inc
sub
jnp
loope
dec
push
std
cmp
xlat
hlt
insl
jbe
aas
inc
jp
jno
mov
xacquire
pop
aam
bswap
xor
in
mov
shlb
test
fisttps
test
jnp
scas
sbb
lds
data16
xor
loope
sbb
cli
push
push
js
pusha
out
lcall
out
movsb
loope
daa
imul
orb
aad
mov
or
xor
lods
in
mov
fdivrl
and
ficompl
nop
mov
cs
fldt
insl
pop
or
js
push
cwtl
mov
dec
push
xchg
aam
popa
cmp
sbb
out
rolb
int3
xor
popa
or
filds
jle
and
sub
and
mov
lret
push
ja
xchg
xor
add
mov
cwtl
dec
mov
pusha
daa
pop
out
bound
dec
stos
dec
cld
sbb
or
insl
adc
leave
insb
xchg
push
mov
pop
lock
sahf
xchg
and
cmp
xor
in
insb
rorb
fdiv
sub
push
clc
push
sub
cmpsb
stos
mov
imul
scas
je
and
sub
add
testl
stos
or
lret
xchg
repz
decb
cmp
or
pushf
jno
jne
push
xor
dec
int3
mov
cld
daa
jno
lret
sub
add
add
cwtl
push
push
loop
mov
add
pop
test
call
inc
mov
not
in
adc
aam
add
sub
and
sahf
icebp
sbbb
add
pushf
jg
pop
cmp
movl
xchg
loopne
lret
adc
jno
cmp
mov
jno
jmp
int3
push
cmp
in
aam
sub
jmp
filds
in
call
lret
ja
push
push
pop
push
xchg
dec
pop
out
sahf
sbb
pop
out
call
lret
sar
out
cmp
faddp
lods
fistps
rcl
pop
out
jno
addr16
fistpl
adc
mov
xchg
call
fsubs
gs
dec
lock
push
sbb
pop
arpl
lret
jnp
nop
fs
ds
shlb
cli
xchg
decl
cli
add
add
xor
enter
fistl
lds
lods
xor
test
jbe
outsl
push
aam
dec
cld
xor
cmc
cmpsb
or
xor
mov
sbb
sbb
mov
lock
and
shlb
fisubl
aad
mov
xchg
cmp
loope
xchg
rcr
inc
xchg
xchg
mov
aas
or
mov
roll
loop
lret
aaa
adc
inc
mov
or
sbb
jb
push
pop
sub
xor
bound
push
cmc
push
mov
insl
mov
sbb
out
mov
call
dec
insb
movsb
test
inc
sahf
pop
jle
pop
adc
pusha
data16
fldenv
gs
outsb
gs
call
pop
pop
mov
adc
inc
loopne
inc
cmp
stos
int
decb
loop
stos
repz
sbb
inc
cmp
add
pop
pushf
les
cmpsb
mov
adc
inc
or
sbb
dec
mov
cmpsb
subb
stos
cmp
fdivr
mov
ret
loope
js
fldt
dec
adc
rol
fxam
xor
fcmovbe
push
ja
sub
ss
les
mov
lret
cmpsb
push
outsb
and
fs
sbb
popf
cmp
jb
fstl
lea
pop
daa
int3
sahf
orl
sub
into
popa
iret
mov
insl
mov
in
xor
mov
mov
adc
jb
or
lods
adc
and
inc
out
jne
adc
mov
push
jns
nop
rol
in
loope
jmp
push
push
jo
out
or
faddl
mov
nop
fadd
addr16
in
mov
and
pop
adc
lods
scas
push
call
cs
jno
mov
xor
call
je
push
adc
mov
faddl
ret
lret
fmuls
shrb
xchg
cltd
cmc
sub
xor
sahf
aaa
aas
lds
jo
ret
pop
push
xchg
dec
popa
sbb
mov
das
cmp
inc
adc
xchg
adc
dec
daa
jbe
ss
dec
xchg
xchg
jno
divl
pop
int3
mov
jno
les
sub
inc
in
xor
scas
xor
test
mulb
fs
gs
mov
rcrb
lcall
icebp
xor
pop
inc
fimull
cwtl
sbb
hlt
push
adcl
out
pop
jl
adc
mov
jns
or
fstpt
jb
xor
dec
or
outsl
in
inc
out
aam
dec
adc
sub
shll
xor
and
imul
jnp
pop
mov
sub
push
sbb
sub
and
test
int3
enter
inc
dec
insl
enter
pop
mov
mov
shl
insb
xor
sbb
fnsave
add
test
sbb
rorl
fs
or
xchg
aam
test
movsl
daa
repz
clc
jg
inc
jns
jmp
fwait
push
xchg
lcall
test
hlt
sub
xchg
test
adc
mov
xor
in
mov
jmp
lahf
sahf
in
icebp
sahf
and
push
bound
push
jg
adc
js
mov
jmp
add
pop
cmp
dec
outsb
mov
in
stos
lods
cmp
sbb
xchg
push
int3
es
pop
cltd
dec
test
cmp
ret
icebp
das
pop
vandnps
jg
jmp
loop
xchg
repz
xchg
xchg
decl
push
mov
outsb
mov
cmp
sub
fdivrs
movsb
pop
gs
mov
ljmp
rolb
sahf
mov
dec
inc
ficomps
and
cs
pop
inc
test
shrl
subb
enter
test
jmp
mov
mov
lahf
pop
push
fimuls
dec
pop
out
push
ret
jnp
scas
orl
mov
cltd
arpl
inc
push
popa
stc
jecxz
enter
mov
fidivrs
cmp
xchg
in
sbb
out
adc
fdivs
and
inc
push
xchg
add
pop
and
or
mov
inc
or
push
testb
daa
jno
ss
xchg
cmp
mov
test
adc
lahf
lods
aas
ljmp
cmp
into
pop
pop
xchg
mov
add
inc
addl
insb
pop
inc
pop
rcrb
insl
jno
into
push
sub
push
popa
and
and
jmp
lods
push
je
dec
rdtsc
arpl
aas
push
jge
mov
push
cld
lret
repnz
add
sbb
into
xor
sub
and
mov
push
notb
mov
and
add
and
xchg
inc
decl
lea
pop
idivl
fmulp
or
in
sbb
push
mov
test
aas
inc
test
jb
mov
mov
imul
stos
dec
ret
push
imul
mov
popf
lret
repnz
and
sbb
cmpl
pushf
push
mov
add
jp
and
add
cmc
mov
cwtl
adc
test
popa
inc
pop
mov
sub
popl
sub
add
push
shrb
jmp
jp
jl
mov
sub
push
xlat
call
scas
sub
mov
cmpsb
out
int
stos
push
and
jge
loopne
leave
rorl
dec
push
aad
mov
adc
jmp
ret
scas
cmc
mov
lock
adc
mov
into
xchg
int
pop
je
subb
cli
loop
popa
in
and
mov
into
xchg
out
push
sbb
roll
mov
outsb
daa
sbb
mov
xchg
dec
in
icebp
dec
push
inc
or
pop
rol
jmp
xchg
or
pop
mov
sub
fcompl
fucomip
orb
mov
jle
imul
xchg
orl
dec
das
rclb
dec
int3
fildll
mov
leave
ret
jns
out
fmull
pop
pop
xchg
mov
in
cmp
inc
stos
imul
adc
decb
pop
adc
jmp
fistl
dec
dec
cwtl
inc
push
sbb
jnp
lahf
in
mov
int
call
jg
jg
push
cmp
add
and
clc
rol
loope
rorb
lods
pop
movsl
outsl
push
pop
dec
mov
cltd
mov
roll
fidivrs
movsl
outsb
scas
dec
in
mov
aaa
aam
push
clc
pop
mov
mov
or
jb
add
xchg
ret
pop
addr16
lahf
aam
push
data16
rcr
push
minps
int
adc
mov
or
mov
aam
push
repnz
std
mov
neg
xor
cmpsb
daa
sarl
inc
fdivs
adc
aad
xor
jg
sub
and
pop
aad
cmp
nop
sti
mov
lret
xchg
jmp
sbb
stos
dec
push
js
scas
xchg
add
push
inc
sti
xor
xor
mov
hlt
adc
add
vmread
xor
test
fbld
fucomip
in
dec
mov
lcall
ljmp
and
push
pop
loop
out
inc
ret
cmc
pop
xchg
pop
push
lret
out
test
call
mov
mov
pop
mov
das
add
push
xchg
xchg
loopne
repnz
dec
and
test
add
out
mov
test
mov
sub
xchg
jo
mov
aam
fstps
repz
pop
push
adc
cmpsb
dec
pop
sub
fiadds
lret
insl
mov
enter
icebp
js
pop
sahf
imul
mov
cli
je
xor
adc
lods
sbb
sub
inc
xchg
call
push
repnz
and
imul
sbb
stos
aad
mov
xor
fcom
or
cmc
pop
mov
sbb
ljmp
jb
pop
cmp
mov
fcompl
out
or
sbb
insb
and
clc
dec
cmc
sub
mov
sub
jge
sbb
and
jge
push
add
add
inc
imulb
scas
les
mov
and
mov
filds
iret
add
enter
sub
fcomip
aad
inc
push
xchg
mov
cmp
xchg
nop
xor
sbb
jb
and
pushf
stos
fildl
or
dec
aaa
jns
push
jnp
mov
in
jmp
mov
insb
es
jecxz
or
add
and
leave
jmp
xchg
imul
jo
cpuid
shll
ret
rcll
repnz
pop
and
sti
dec
lahf
pop
mov
stc
mov
add
push
test
or
mov
movsl
lret
pusha
sbb
inc
pop
leave
jbe
mov
fsubrs
cmp
in
cmp
jp
pop
adc
call
push
dec
xchg
mov
xor
inc
add
bound
js
cmpsb
shr
jae
cmp
dec
jg
out
icebp
popf
in
fs
out
mov
xor
daa
mov
xor
or
dec
and
sub
or
rorl
nop
test
inc
or
dec
pop
sub
jg
xchg
or
out
imul
jle
inc
gs
xchg
xchg
stos
sbb
fcmovbe
jg,pn
call
fidivl
pop
or
pusha
or
and
jae
das
lods
xor
dec
mov
mov
push
jmp
lret
push
sbb
cs
sub
fistpll
and
ljmp
mov
dec
iret
jo
hlt
pop
filds
lret
mov
bound
mov
xchg
and
sub
cmp
stos
mov
push
push
mov
cltd
mov
pop
dec
dec
sti
pop
dec
add
xchg
cltd
cmp
mov
add
aad
mov
in
icebp
inc
dec
insb
add
pop
out
mov
cmp
fistl
mov
loope
cmpsb
lret
mov
aam
dec
xchg
fcmovu
inc
lea
mov
jb
aad
or
add
andl
mov
imul
and
call
test
cmp
mov
lock
lock
jmp
js
call
scas
sub
dec
leave
movsb
cmpl
sub
cmp
hlt
fadds
sarb
cli
jbe
es
mov
repnz
mov
xchg
jp
adc
sub
sbb
fidivrs
dec
fstpt
inc
mov
fbstp
cmp
and
lods
loopne
and
rcrb
mov
test
push
out
xchg
sub
daa
fmuls
out
fstpt
out
and
mov
insl
call
je
dec
rolb
or
fwait
ret
insb
adc
ljmp
out
mov
fsubs
pop
cs
push
pop
xchg
popf
out
adc
mov
jns
scas
push
and
lret
icebp
sbb
fstps
pop
dec
mov
shlb
test
inc
sbb
and
sbb
xor
into
push
cwtl
stc
mov
hlt
sbb
test
dec
or
dec
scas
xor
jl
fsubp
int
jmp
sbb
addr16
leave
lds
adc
js
loopne
and
das
leave
bound
jnp
inc
in
dec
leave
add
mov
jo
cmpsb
mov
addr16
jge
jb
ja
adc
mov
jge
jl
movsl
mov
mov
lahf
inc
xchg
stc
xchg
popa
xchg
cmp
pop
mov
or
push
add
std
fidivrs
mov
mov
fdivrl
mov
xor
pushf
mov
stos
gs
js
xchg
es
iret
cmpsl
and
cmp
mov
push
fistps
sti
sbb
pop
scas
push
pop
pop
mov
push
jbe
es
int
fdivrs
test
je
call
testb
pop
mov
pop
lock
pop
xor
ficoml
mov
push
mov
cli
inc
and
lahf
inc
add
icebp
push
or
fcmovnu
jne
add
cs
movsl
jo
stos
inc
loop
jbe
orl
out
jne,pn
negb
xorb
push
jo
xchg
cli
fimull
in
mov
xor
aas
mov
or
ss
or
movsl
pop
jnp
xchg
inc
leave
sbb
rclb
jbe
ret
ja
push
xchg
jmp
mov
push
or
xchg
cmpsb
pop
xor
jp
loop
mov
std
push
jo
es
cmp
iret
sarb
jnp
mov
cmpsl
adc
leave
cld
nop
mov
cmp
fnsave
adc
xchg
jl
repnz
xchg
jg
jbe
or
jg
test
scas
imul
inc
imul
inc
adc
xor
ljmp
xorl
data16
dec
pop
and
jecxz
adcb
and
addr16
mov
mov
lock
mov
ror
ret
lods
rclb
popf
pop
test
xor
popa
mov
pop
dec
inc
fcoml
push
insb
adc
xchg
pop
pusha
add
mov
sub
pop
jae
testb
xor
jmp
dec
xchg
cld
hlt
arpl
or
fucomip
subl
rcr
jmp
sbb
dec
adc
sub
mov
sub
iret
ret
pop
sbb
cltd
sub
je
gs
jl
adc
jno
xchg
dec
xchg
pop
and
rcrl
pop
mov
out
mov
pushf
popa
mov
mov
fs
out
je
jns
shrl
add
aas
fwait
pop
inc
and
cmpsl
mov
daa
xlat
adc
je
jg
jmp
test
inc
leave
xor
xor
movb
mov
xor
clc
dec
add
and
addr16
cmp
dec
andl
jnp
add
inc
adc
jae
mov
cmpsl
xchg
push
sbb
sbb
lds
icebp
mov
xchg
scas
cs
sub
jecxz
jg
sahf
ret
enter
sbbb
jp,pn
push
sub
and
jno
test
mov
rclb
push
ljmp
and
dec
inc
mov
jle
out
leave
pop
sbb
push
or
dec
pusha
popl
in
cmp
mov
ficoms
gs
jp
mov
test
add
es
aam
or
sbb
cmpsb
scas
sbbl
mov
mov
or
mov
pop
adcb
add
xchg
addb
xchg
mov
or
push
sbb
out
daa
fmul
push
mov
pop
cmp
mov
rclb
pop
jmp
xor
test
lret
mov
mov
jns
dec
jae
jo
adc
js
sub
mov
mov
int
pushf
sub
ret
sub
or
cmovp
ficoms
int
iret
ret
xchg
shll
into
jge
pushf
add
and
mov
idivl
fidivrs
fimull
jbe
xor
mov
daa
outsb
enter
es
cmp
iret
add
dec
adc
dec
dec
mov
add
push
shl
call
andnps
mov
gs
imul
mov
test
js
repz
mov
pop
pop
imul
lods
sbb
adc
cli
push
loop
test
jmp
lds
movsb
adc
jo
xchg
xor
mov
pop
inc
divl
mov
outsb
popa
mov
daa
rcrb
dec
pop
aad
std
fs
data16
in
je
loopne
lahf
cmpsl
mov
addr16
or
mov
out
scas
sarb
negb
sub
cmp
sub
sbb
cmp
lret
mov
les
and
adc
out
bound
movsb
xchg
mov
xchg
and
jae
ficoms
xor
and
out
test
or
stos
dec
add
clc
mov
mov
lock
push
or
jb
adc
cmc
sahf
call
addl
cmp
pushf
cmp
jae
mov
stos
imul
jnp
shrl
mov
push
mov
out
mov
jbe
pop
stos
push
dec
sahf
in
mov
ja
xchg
pop
adc
push
lcall
out
sahf
jb
stos
pause
xor
pushf
loop
push
stos
dec
pop
shl
dec
sbb
mov
lcall
and
jb
push
out
int
mov
scas
call
leave
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
bswap
pop
ds
lcall
iret
push
fstpt
outsb
mov
mov
dec
mov
mov
xor
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
aaa
xchg
daa
js
dec
pop
fadd
in
pop
and
call
xchg
imull
cwtl
aaa
push
pop
pop
ja
addr16
or
cmpsl
call
mov
test
cwtl
cs
js,pt
loopne
pop
outsb
adc
add
out
add
xchg
ljmp
mov
nop
cwtl
pop
push
jno
and
addr16
adc
shlb
pop
inc
push
or
cwtl
call
bswap
test
jecxz
imul
addr16
rorb
pop
xor
mov
cmpsl
test
cmp
in
inc
jbe
jnp
add
scas
xchg
scas
inc
or
mov
mov
ss
push
mov
push
test
inc
out
pop
cmpsb
test
std
js
or
lret
addr16
nop
lcall
jge
add
call
psubq
mov
fildll
clc
bound
dec
dec
in
call
xlat
shlb
sbb
push
pop
push
pusha
sub
push
rcrb
scas
outsb
mov
nop
out
test
inc
int
negb
inc
js
or
add
add
popa
inc
jge
scas
lret
mov
test
stos
stc
pop
sub
ja
sbb
or
adc
hlt
ret
lods
mov
mov
ds
aas
jnp
outsl
cmp
dec
cmp
inc
sbb
enter
test
mov
aaa
push
pop
pop
ja
cmp
inc
sbb
enter
test
mov
aaa
push
je
sbb
cltd
fs
pop
aaa
test
out
cwtl
stos
dec
push
ret
sbb
fs
adc
js
push
mov
add
push
les
adc
pop
mov
adc
into
aas
adc
push
leave
cmpsl
data16
test
cmp
movsb
insb
mov
lds
cmpsl
mov
push
imull
lahf
and
jmp
mov
std
cmp
data16
movsb
daa
rclb
jle
ds
jecxz,pn
dec
add
mov
add
cmpsl
add
lock
fdivs
push
jle
jl
ret
inc
std
ret
popa
nop
imul
cld
mov
jle
insl
sbb
sbb
sbb
fimuls
sbb
mov
xchg
push
mov
outsl
dec
inc
cmp
sti
push
push
out
xchg
mul
mov
cmp
cmp
pushf
das
jno
and
push
in
testl
pop
lock
or
cmp
imul
pusha
xlat
scas
jl
test
sbb
push
xchg
movsb
add
ret
movsb
xchg
or
push
cmp
roll
sbb
js
jnp
jl
mov
aas
mov
ljmp
or
test
jl
jns
dec
sub
jb
or
or
aas
push
xchg
movsl
mov
es
push
or
push
lcall
mov
popl
adc
xlat
stos
or
push
jnp
stos
adc
scas
or
mov
jge
push
sub
jl
out
fs
or
sbbb
pop
loopne
jnp
cmp
mov
inc
movsb
cli
dec
int
cmp
cmpsl
mov
mov
fnstcw
xor
xchg
xchg
mov
shll
pusha
hlt
xor
sub
icebp
push
enter
jmp
and
xlat
xchg
and
and
mov
cs
jne
sub
inc
bnd
pop
inc
dec
nop
cmp
shlb
lret
add
sbbb
leave
test
movl
pop
cmp
stos
mov
jmp
pop
sar
out
out
lds
mov
jno
or
xchg
hlt
xor
jne
data16
clc
notl
cli
imul
sub
dec
mov
outsb
or
lret
pop
and
cmp
ficompl
stos
das
outsl
pop
or
dec
stc
mov
gs
cwtl
jle
fdiv
adc
sbb
inc
lods
movsl
je
rcl
inc
fdivrs
push
pop
test
lods
test
cmp
xchg
pop
pop
xchg
sbb
in
imull
arpl
enter
mull
dec
sahf
mov
or
pop
popf
decb
ret
test
dec
je
mov
es
add
pop
jecxz
stc
fadds
pop
add
xor
mov
jle
mov
stc
or
subb
pop
fldenv
sub
mov
mov
xchg
mov
lods
xchg
insl
icebp
push
push
cld
stos
push
push
stos
stc
dec
xor
stc
daa
jl
add
pusha
push
or
shr
and
rep
rorl
push
cmpsl
rolb
xor
adc
inc
sbb
mov
mov
imul
in
pop
jno
mov
test
popa
mov
xchg
xorb
mov
std
jle
jecxz
sub
push
out
pop
fidivl
dec
hlt
push
cltd
ljmp
mov
mov
aad
dec
add
jl
movsb
jbe
mov
bound
sub
mov
in
inc
jle
xchg
pop
xor
outsb
pop
and
in
xchg
inc
pushf
stos
push
in
cmp
jno
mov
adc
mov
jno
jne
jno
stos
stc
test
mov
jne
cwtl
push
xorb
inc
pushf
dec
pop
stos
andl
nop
pop
sbb
jbe
lcall
scas
inc
ss
hlt
faddp
lods
jmp
scas
dec
scas
and
pop
add
leave
fisubrl
cwtl
mov
mov
fwait
inc
cmp
or
or
out
push
jne
push
push
les
repz
mov
push
loope
pop
mov
sarl
lea
mov
outsl
divl
outsb
loopne
sahf
jns
movsl
fildll
sbb
cmp
dec
ja
push
xchg
lock
int3
mov
sbb
in
pusha
iret
add
cmp
daa
inc
cmp
scas
shll
or
sbb
dec
js
in
adc
sbb
fs
sbb
sub
and
add
pushf
mov
movsb
adc
enter
sti
loop
jg
xor
inc
inc
and
aad
or
inc
data16
pop
xchg
xorb
aam
mov
addb
out
cmpsb
js
int3
sbb
outsl
sbb
mov
mov
clc
fwait
gs
test
in
in
adc
pushf
and
mov
jns
in
and
pop
push
adc
add
cmp
jmp
xor
dec
mov
push
stc
cltd
sti
pop
jnp
push
add
imul
mov
xchg
fsubl
mov
add
xor
xor
arpl
inc
addl
lret
sbb
mov
xchg
inc
fidivs
outsl
xor
test
insb
sbbb
mov
jp
cmp
movsl
sub
xor
mov
data16
or
mov
sub
fnstenv
mov
cmp
push
push
push
iret
js
icebp
shll
pop
cmp
and
jns
mov
hlt
cmpsb
mov
popa
jns
repz
jle
iret
mov
jbe
pop
outsb
pmulhw
cmp
jbe
cld
dec
and
icebp
ds
orb
pop
push
outsl
scas
sti
adc
push
mov
mov
loope
add
mov
fists
mov
push
std
jecxz
aaa
add
adc
call
pop
mov
scas
xchg
ljmp
mov
jle
jecxz
test
in
push
ss
cmc
jg
int3
jae
mov
mov
in
dec
mov
cmp
pop
mov
mov
cmp
into
push
or
xchg
jle
lock
ret
les
push
pop
push
sahf
jmp
jge
dec
cmp
daa
jo
int3
sbb
std
cmpsl
stc
lock
ss
jge
std
adc
mov
cli
popa
adc
mov
gs
or
test
outsl
pop
inc
fcmovb
mov
lret
jo
stos
sahf
xchg
add
and
mov
add
ret
mov
fldt
les
lcall
jno
sub
push
imul
xchg
add
scas
jmp
fistpl
xlat
in
lcall
outsl
lods
jg
std
jmp
add
insl
lods
jno
push
adc
dec
add
rclb
test
in
shlb
ljmp
dec
cld
add
dec
inc
in
je
mov
cmp
sub
and
sahf
mov
mov
insl
or
lahf
mov
outsb
and
pop
xor
ja
adc
adc
aas
int
cld
lods
insb
cmp
sti
sahf
cmp
test
fsubs
sbb
fsts
pop
stc
leave
shrl
mov
call
cli
push
shll
mov
sbb
cld
push
pop
bound
cmpsb
ja
ret
mov
cs
dec
pop
lds
insb
pop
cltd
mov
jbe
xor
inc
test
mov
in
stos
nop
fcomip
test
xlat
push
lahf
int3
sub
inc
sti
int
cmp
jbe
shlb
add
xor
lock
rol
arpl
dec
push
pop
outsb
jle
adc
int
aaa
sbb
xchg
shr
imul
std
out
and
cmp
inc
xor
movsb
ret
adc
sub
add
in
lods
lds
and
mov
dec
jo
popf
movsl
stc
add
hlt
lret
add
dec
jl
sub
ljmp
cmp
push
pop
xchg
mov
in
movsl
mov
das
lds
adc
cmp
fadds
add
js
das
add
sub
xchg
popf
andl
jb
sub
outsb
jl
sahf
sbb
mov
dec
cmp
xchg
cltd
aad
and
pop
mov
jg
mov
mov
cmc
cli
gs
inc
out
rolb
lret
dec
cmc
and
add
or
xor
sub
mov
and
jo
in
out
lods
or
or
jne
hlt
xchg
ss
loope
leave
sbb
lcall
loope
nop
rclb
enter
imul
or
adc
mul
shr
popf
add
es
pop
xchg
shrb
add
fs
cmc
xchg
dec
fldenv
or
outsl
jge
add
push
ljmp
into
mov
outsl
push
xchg
ret
mov
ja
in
xchg
and
xchg
mov
pusha
roll
xor
sarb
ljmp
xchg
das
dec
in
ret
xchg
mov
das
mov
or
popa
test
ret
mov
les
loope
je
movsl
xor
pop
ficomps
xor
push
mov
push
testl
and
je
std
or
ret
xor
jmp
push
movsl
insl
pop
push
push
mov
lcall
ret
pop
xor
jbe
cwtl
cmp
movsb
mov
mov
mov
cmp
inc
lods
ret
push
lods
add
gs
mov
in
cmp
cwtl
fsubs
inc
mov
mov
es
push
push
std
pop
test
bsf
mov
call
arpl
jnp
shll
lods
call
js
nop
leave
rcr
lds
popf
aad
in
testl
pop
jnp
cmp
push
icebp
or
jae
inc
shr
scas
or
push
jo
popf
mov
aas
iret
repnz
jp
mov
xor
dec
rorb
daa
cmc
mov
dec
jp
lods
push
lea
jbe
cmp
bound
test
mov
jl
les
inc
push
in
push
jo
xchg
inc
adcl
adc
in
push
sbb
pop
aad
mov
or
dec
js
js
and
orb
sub
adc
add
push
adc
ds
and
inc
jb
pop
test
out
hlt
ja
inc
ds
std
dec
cmp
jp
push
mov
sbb
push
mov
xchg
int3
sub
test
out
jb
mov
les
mov
fdivr
ds
inc
in
mov
mov
sub
and
dec
mov
sub
jns
std
xor
lock
sub
push
sub
and
mov
scas
xor
push
fdivrl
jl
push
mov
in
add
inc
int
mov
arpl
adc
xor
call
test
lcall
xor
bound
jle
add
rorb
or
xor
adc
pop
cmp
int3
add
cmpsb
ret
cmpsb
je
xchg
cli
rcrl
dec
xor
xchg
jmp
xor
mov
sub
nop
sti
pop
xchg
push
testb
push
loop
adc
setne
or
ja
popl
jne
cmp
cmp
or
cmp
mov
das
outsl
lahf
icebp
ja
lock
sub
pop
int3
add
enter
fcoms
cli
sbb
fldl2t
les
jle
mov
cmpsb
jne
sbb
sbb
scas
loope
adc
dec
popa
fistl
aam
es
ficomps
cli
test
outsb
iret
xchg
sarl
mov
mov
xchg
sub
popf
test
sub
fistpll
pop
adcb
xchg
icebp
in
cmpsb
shrl
sub
sub
jae
out
test
cmp
adcb
add
mov
inc
jg
mov
stos
out
test
loop
add
fsubrl
rorb
adc
adc
enter
aam
in
lds
push
pop
pop
hlt
mov
fdivs
push
fldt
repz
xor
test
and
mov
lahf
add
inc
insl
xchg
outsl
xchg
loopne
xorb
lret
adc
popa
jg
insb
mov
jne
push
xor
mov
fcompl
cmp
add
jns
sarl
cli
ja
enter
jo
imul
mov
arpl
sbb
in
mov
mov
in
xchg
mov
in
pop
stos
jne
push
fildll
jmp
cld
xchg
adc
inc
ljmp
mov
popf
mov
mov
rclb
jecxz
mov
push
push
ljmp
sub
fwait
pop
xchg
mov
lods
mov
dec
jnp
jnp
jne
nop
inc
mov
data16
pop
add
sub
les
cltd
imul
out
out
cmp
jae
icebp
sub
mov
push
mov
pop
mov
add
jnp
and
outsb
xchg
or
les
and
mov
mov
inc
dec
imul
or
mov
mov
shll
movsb
je
xor
and
mov
sbb
cltd
repnz
fdivl
pusha
dec
bound
out
iret
jno
sti
leave
aam
push
popf
cmp
in
imul
mov
mov
mov
aad
jp
and
cmpl
pop
in
dec
leave
and
loope
negl
mov
dec
push
mov
out
mov
adc
and
rcl
adc
ss
dec
add
inc
stos
xor
sti
sbb
push
cmp
adc
fwait
std
xlat
jecxz
int3
lods
lds
mov
mov
adc
aas
popf
xor
test
fmul
out
aad
enter
ljmp
pop
jp
stc
scas
lods
in
cmp
into
sub
adc
subb
adc
insb
jl
and
lea
lock
cld
ljmp
fcompl
mov
pop
insl
xchg
sbb
negb
ds
imul
xor
sub
test
lds
hlt
jno
rorl
ret
cltd
insb
xchg
pop
nop
iret
sub
adc
cmp
xor
or
jno
mov
aaa
pop
cmp
int
dec
mov
sbb
mov
outsl
int3
mov
xchg
sub
loop
movsb
je
icebp
xchg
push
mov
inc
mov
adc
fidivs
jge
xor
jle
mov
xor
inc
psrad
mov
adc
pop
fmulp
or
cwtl
dec
sub
xchg
call
and
fnop
hlt
test
das
fsts
sbb
ret
cmpsb
sbb
stos
jb
into
mov
xchg
cltd
mov
mov
arpl
movsb
jmp
mov
cwtl
cltd
pushaw
sub
mov
rorl
push
push
mov
cmc
ret
imul
sub
pop
push
add
test
into
adc
aas
clc
sbb
dec
pop
adc
pop
pop
rcl
fstl
and
mov
insl
ret
xchg
inc
lret
int
sub
push
cmp
clc
pop
and
insb
lods
fidivl
sbb
or
adc
int3
test
fwait
call
adc
mov
inc
pop
int3
fsubr
adc
sahf
gs
sti
xor
dec
gs
fcompl
cmp
stos
cmpsb
lods
xchg
mov
fdivrs
xchg
outsb
or
ret
pop
push
push
sbb
pop
adc
lods
scas
adc
ja
jo
jge
pop
rcll
fistpl
adc
ds
sahf
mov
pop
mov
aam
lahf
mov
ja
orb
nop
packuswb
inc
cli
and
lahf
ljmp
mov
jns
mov
enter
xchg
mov
hlt
sbb
and
push
mov
mov
push
js
leave
dec
sbb
in
mov
push
lds
jge
in
adc
or
das
push
cld
icebp
cmpsl
nop
jnp
out
and
sbb
andl
jnp
in
and
fildl
xor
xchg
push
pop
or
lret
mov
jns
clc
mov
mov
mov
sarb
mov
aas
pop
testb
adc
scas
aas
sub
stc
rorb
sahf
xor
mov
sub
mov
stos
cld
fdivrs
pop
xor
xor
mov
dec
mov
in
movsl
pop
jg
fmuls
add
dec
jne
add
add
ljmp
adc
pop
sub
adcl
fildl
stos
popa
push
pop
cs
cmc
mov
test
outsl
cmp
int
aas
call
mov
mov
xor
mov
imul
mov
jne
aam
mov
cmc
icebp
pusha
hlt
lret
je
in
in
sbb
popa
xchg
adc
mov
aas
dec
ror
pop
cmp
sub
or
aas
jle
xor
test
xor
out
std
subb
loop
push
pmaxsw
dec
cwtl
xor
je
lret
addl
add
and
and
sbb
std
out
mov
and
push
out
dec
push
aam
fs
xchg
dec
ror
stc
js
adc
outsb
inc
push
subb
push
and
mov
iret
adc
inc
scas
lcall
mov
jge
fxch
sbb
in
mov
sbb
ficoml
mov
loopne
popl
pushf
push
mulb
imul
push
mov
fs
xchg
adc
fwait
adc
ja
scas
jae
pop
nop
fs
addr16
dec
or
stos
pop
rcll
push
or
enter
mov
xchg
push
clc
lret
repz
or
push
adc
xchg
pop
popa
mov
sbb
inc
dec
adc
mov
xchg
xchg
repz
repnz
mov
mov
mov
pop
fildll
xor
push
push
pushl
lcall
and
aad
ljmp
pop
fnstsw
leave
fwait
push
mov
repz
ficomps
outsl
ja
mov
push
mov
add
arpl
popf
push
cld
pop
mov
enter
adc
xchg
fwait
adcb
push
js
fsubl
insb
mov
in
mov
dec
inc
mov
ss
sub
iret
pop
push
xor
inc
stos
aaa
outsl
jl
sub
xchg
and
subb
sbb
scas
js
push
fnstsw
inc
inc
xor
out
rcl
xlat
cmp
icebp
cmpsb
repz
sti
pop
addr16
js
out
inc
xchg
sbb
mov
mov
cmp
lods
push
addr16
ror
inc
pop
pop
aad
push
imul
ficomps
jmp
js
xor
sarb
enter
ja
repz
outsl
faddp
jecxz
jle
mov
pop
adc
aad
or
mov
mov
dec
scas
lahf
mov
aam
jns
dec
es
in
int3
lahf
push
xchg
ja
rcl
add
push
nop
inc
notl
and
or
lahf
inc
push
scas
sbb
scas
mov
insl
inc
shl
aas
or
xchg
xor
je
push
mov
sar
mov
xchg
push
xchg
mov
shlb
push
sub
mov
negl
xor
cmp
mov
pop
in
psubq
rol
xchg
out
dec
mov
dec
fimull
sar
push
or
sbb
mov
xor
cwtl
icebp
outsb
frstor
or
mov
sahf
aad
xchg
sub
imul
int
rorb
rcll
insb
dec
in
dec
and
push
inc
pop
push
fistpl
mov
outsb
jl
ds
or
inc
fnstenv
lea
fsubrs
ja
xor
xchg
repz
pop
pop
jmp
sub
dec
xor
mov
add
incl
cmc
push
xor
das
outsl
aad
lret
jo
sbb
outsb
cmp
and
fldcw
add
and
test
xchg
fidivrs
inc
js
cli
arpl
subl
sub
pop
fists
icebp
stos
push
fcmovb
pop
repz
out
sbb
std
pushf
push
cmp
or
push
data16
jns
cmp
mulb
out
or
mov
aas
lcall
mov
xchg
mov
jmp
loop
fimuls
andl
xor
add
mov
adc
jmp
inc
lea
xor
shrb
mov
cs
jge
aad
xor
loope
inc
or
je
shl
add
call
mov
ret
ds
xchg
mov
pop
sub
push
cmp
dec
mov
xor
dec
loopne
sbb
cmc
mov
mov
jo
inc
popa
rorb
jb
inc
add
rcll
imul
dec
and
loope
inc
in
sti
pushf
call
sbb
lods
in
jg
in
int
loope
push
js
sarb
xchg
ljmp
insb
fisttpl
lcall
sub
push
or
mov
cmpsl
clc
xchg
enter
test
mov
aaa
push
pop
pop
ja
cmp
inc
sbb
enter
test
mov
aaa
push
pop
pop
ja
addr16
push
or
mov
cmpsl
clc
xchg
enter
test
mov
aaa
push
pop
pop
jne
addr16
mov
sbb
pop
push
cmp
and
sub
addr16
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
das
adc
and
xor
inc
and
sbb
outsl
pop
pop
enter
movsb
mov
out
aam
in
in
pusha
das
adc
dec
sysenter
pop
inc
outsl
push
jg
dec
je
test
mov
test
hlt
fistpll
in
pop
pop
outsl
xor
jp
je
loopne
mov
int3
std
sar
scas
mov
test
push
pop
jbe
addr16
pop
inc
dec
push
jp
les
ret
dec
cmpsl
lret
cmp
subl
call
lcall
stc
push
jb
loopne
and
mov
in
or
push
and
lea
ljmp
or
stc
xchg
xor
cli
xchg
ljmp
enter
jl
shll
dec
mov
and
xchg
inc
and
dec
jg
out
aam
in
hlt
fdivrp
pop
sbb
pop
test
imul
and
pop
rep
jo
fwait
cmpl
mov
pop
lret
outsb
mov
sbb
ja
mov
xchg
das
inc
aas
and
xor
mov
dec
rcrb
scas
push
mov
mov
fdivrp
iret
hlt
mov
sub
push
cmovl
sub
cmp
adc
je
test
mov
mov
mov
xchg
dec
dec
jno
push
push
pop
sub
and
jecxz
mov
fmul
cli
mov
cltd
mov
push
jge
jp
inc
push
jg
dec
je
test
mov
out
aam
in
hlt
filds
adc
and
xor
inc
outsl
push
jg
dec
je
test
mov
out
aam
in
hlt
filds
mov
out
hlt
fisttpll
jne
arpl
leave
jnp
xor
inc
sub
sbbb
lods
pop
cmp
mov
out
xor
cmp
in
aad
xchg
or
or
arpl
adc
xor
mov
or
jbe
enter
shlb
sbb
push
push
int
jle
adc
inc
lods
mov
mov
or
cld
pop
adc
sbb
xor
xor
sub
mov
sub
insb
jl
adc
call
packssdw
ljmp
call
popf
sarb
sbb
gs
cmpsl
adc
iret
lret
sub
cli
sub
jb
sahf
jg
sti
xchg
out
or
lahf
fadds
clc
push
jge
clc
sbb
loope
sub
or
and
mov
mov
stos
xchg
pop
pop
push
fsubrs
xor
adcl
aam
jns
sbb
mov
jnp
lcall
push
das
nop
pop
mov
pop
in
inc
sbb
fsubl
pop
xchg
push
adc
push
sub
push
mov
xor
pop
and
push
cmpsl
int3
add
mov
nop
jp
push
call
pop
or
sbb
cwtl
jne
sub
push
fld
data16
pusha
xchg
and
sbb
pop
popf
imul
ja
int3
inc
dec
mov
pop
and
sbb
jb
insb
push
sbb
out
jp
jle
xchg
xchg
or
mov
ss
rep
mov
dec
and
lods
push
mov
xchg
pusha
ret
std
add
jmp
cmpsl
movsb
jg
and
pusha
mov
lahf
cmpsl
stos
arpl
insb
push
and
inc
cmpb
test
fcompl
das
ljmp
rorl
lea
andb
sub
mov
pop
dec
lea
xchg
cmp
or
xchg
scas
and
mov
mov
sar
daa
mov
outsb
or
imul
std
jmp
lods
fisubrs
sub
cli
jb
mov
sub
sub
push
sar
aam
mov
andl
mov
lcall
enter
mov
aas
sbb
jge
dec
mov
lds
mov
mov
shlb
lcall
ljmp
or
xor
lock
repnz
testb
int
pop
aad
pop
test
pop
jp
daa
xchg
mov
call
pushaw
repnz
sbb
inc
and
mov
lcall
sub
push
imul
cwtl
sahf
jbe
push
rolb
jmp
insl
shll
gs
or
jo
icebp
jbe
jno
mov
lret
mov
roll
addr16
or
ljmp
in
adc
lds
cmp
mov
orl
add
incl
or
andb
dec
popa
ret
mov
sbbb
dec
scas
inc
out
xchg
ja
xor
push
adc
dec
lret
mov
int
scas
sbb
inc
mov
jmp
leave
bound
mov
fldcw
nop
cld
cmpl
mov
in
adc
jae
sarb
or
and
cmp
cmpsl
movsl
aad
xchg
idivl
xchg
pop
jmp
sbb
lods
sahf
sub
xor
cmp
fists
andb
fadds
xor
pop
push
into
in
imul
cmpl
out
decl
pop
push
lcall
popa
enter
jno
les
sbb
stos
gs
cmp
fstpl
js
call
xor
mov
enter
shll
dec
idivb
jge
sbb
mulb
subl
add
std
out
cmp
push
pop
mov
push
or
das
cmp
cltd
jge
movsl
loop
inc
nop
fcoml
in
adcl
call
inc
and
es
std
sarb
std
cmpl
adc
jns
cmp
nop
jb
idivl
clc
inc
gs
mov
sub
mov
xchg
cmp
cli
mov
xor
or
into
mov
xor
xchg
inc
jl
push
fildl
stc
in
sbb
dec
push
bound
dec
rcrl
cmp
sub
shlb
pusha
arpl
stos
stos
push
loope
outsl
outsl
mov
xchg
mov
stos
pop
xchg
cltd
jnp
adc
push
sub
mov
daa
mov
sbb
sbb
push
pop
shll
insl
or
pusha
stc
iret
scas
adcl
xchg
scas
push
add
decb
add
movsl
inc
push
out
dec
push
add
orl
sub
sbb
mov
ret
cmp
push
dec
stos
movsb
sbb
cli
repnz
or
icebp
daa
ss
stos
daa
and
je
mov
jecxz
loope,pt
js
ja
or
pop
ss
cmc
andb
sbb
cwtl
dec
push
xchg
cmc
mov
outsl
dec
adc
ficoms
adc
xor
pop
pop
test
mov
repnz
rcrb
fldcw
sub
jns
jmp
test
add
push
sub
push
fucom
mov
ljmp
mov
jbe
or
mov
movl
hlt
dec
popf
inc
xor
jbe
repz
popf
add
mov
mov
lret
mov
outsl
jnp
xor
cmp
mov
sbb
fs
fs
dec
pop
xor
shlb
cmp
mov
cmp
jle
ljmp
inc
dec
je
mov
xor
aam
pop
std
rcrl
pop
fs
dec
iret
rclb
clc
std
mov
adc
insl
es
iret
int3
sbb
cmp
stc
adc
cli
jp
jecxz
test
pop
ret
mov
pop
dec
cld
pop
lods
loop
mov
fadds
or
ljmp
cmpb
stos
pop
push
xor
arpl
lret
mov
stos
bound
sub
loop
scas
mov
cmp
outsb
je
xlat
mov
adc
mov
les
orb
add
mov
or
sub
sub
xchg
mov
cwtl
mov
xor
push
xlat
repz
pop
scas
cmp
nop
sub
xor
xchg
std
call
daa
mov
inc
lcall
clc
sub
int
call
cld
sub
test
bound
je
mov
aad
out
mov
rcr
test
push
inc
insl
imul
fsubrl
pop
inc
dec
lods
insl
popf
or
adc
sbbl
sbb
jle
sbb
bound
dec
lret
mov
mov
ret
cwtl
jbe
stos
cmp
or
pushf
in
push
dec
cwtl
mov
dec
outsb
mov
push
push
cltd
and
jne
pop
fnsave
imul
nop
bound
inc
push
inc
cmp
incl
pop
jno
gs
in
orl
cmc
inc
mov
leave
or
mov
pop
push
adc
ds
decb
popl
out
dec
lret
out
xchg
xchg
push
and
loop
dec
inc
or
ljmp
jmp
xor
add
pop
popf
stos
imul
aas
imul
and
mov
inc
inc
arpl
push
push
push
mov
push
push
lds
inc
lcall
and
jmp
xchg
xor
pop
or
inc
push
imull
out
mov
rol
cs
xor
xchg
lods
xchg
pop
xorl
stos
icebp
dec
lods
mov
aam
jns
mov
ss
movsl
in
jne
adc
xchg
cmp
sti
sub
pusha
inc
and
adc
jge
jmp
shll
xor
pop
fnstsw
mov
shrb
scas
aam
sub
pop
mov
loope
mov
das
enter
sbb
ret
mov
sub
sbb
scas
mov
sbb
sub
mov
mov
loopne
lahf
adc
mov
push
adcl
jecxz
mov
fdivrl
cmp
adc
rol
xchg
ss
push
jns
push
adc
dec
ret
push
cmpsl
xor
aas
jp
mov
mov
mov
sub
xor
aas
adc
test
inc
inc
mov
shl
fisttps
xchg
add
pop
in
mov
jae
and
cmp
testb
or
rcrl
add
loop
insb
pushf
xor
repnz
mov
xchg
shrl
pushf
movsl
push
and
adc
gs
sub
pushf
mov
adc
cmp
arpl
clc
xchg
fs
and
mov
fisubrl
jnp
ss
jl
aad
xor
inc
inc
in
nop
out
sub
arpl
lcall
cmp
mov
aas
popa
dec
inc
mov
pop
pop
xchg
jp
in
mov
imull
xor
xor
push
mov
sub
icebp
sbb
call
mov
mov
sbb
cmc
push
cmp
int3
xorl
insl
mov
shlb
jg
rol
mov
mov
sbb
mov
or
shll
lahf
adc
sub
xchg
push
pop
push
insl
lds
lods
jecxz
pop
dec
scas
test
in
inc
pop
adc
mov
mov
jg
loope
xchg
ret
pop
cmp
xchg
out
imul
stos
out
and
push
std
mov
orb
das
push
adcl
hlt
mov
in
dec
cwtl
inc
sbb
daa
pusha
xlat
mov
out
mov
sbb
popl
hlt
sti
in
aam
or
sbb
std
and
insl
xor
cli
addl
out
and
popf
push
aad
mov
lret
or
pusha
sub
pop
or
fwait
push
mov
add
xchg
test
sub
push
bound
aas
mov
cli
aam
cmp
mov
pop
les
xor
cmp
and
sub
pop
mov
inc
sbb
mov
cmp
mov
dec
jo
sbb
adcl
sub
lahf
sub
insl
stos
cmp
jl
test
cmp
mov
mov
xchg
sub
pop
idiv
pop
jl
pop
pop
jo
les
pop
lock
pop
loopne
or
mov
jle
test
or
inc
push
mov
mov
enter
aaa
pop
lock
js
inc
mov
aam
ss
fsubrs
sbb
xchg
jle
cmp
xchg
fdivrs
push
insb
xor
sbb
lea
push
xchg
sub
pop
rclb
insb
cmp
daa
xor
insb
mov
or
lret
push
push
into
test
mov
stc
bound
gs
mov
data16
push
cmp
inc
bnd
xchg
leave
jne
outsl
out
jnp
mov
iret
dec
sbb
add
xlat
imul
or
cmp
jl
dec
data16
lahf
movsb
aad
dec
insb
outsl
adc
in
dec
xor
rolb
mov
sub
rol
or
aad
shlb
inc
sahf
cmp
or
es
ljmp
testb
test
jecxz
inc
aad
shl
mov
cs
in
sub
mov
add
pop
stc
stos
push
sbb
out
xor
fbld
cmp
dec
dec
pop
jae
mov
in
pop
lock
rorb
add
push
pop
aaa
lret
mov
pop
or
mov
cwtl
dec
movsb
mov
loope
sub
bound
or
jmp
movsb
add
iret
das
rolb
inc
jle
push
sbb
dec
fs
fwait
add
push
int3
jmp
add
mov
mov
pmulhw
jns
or
lods
jl
xchg
bound
inc
xchg
xchg
notb
cmpsb
mov
sbb
pop
mov
lcall
in
icebp
xlat
in
jbe
push
mov
fidivs
xchg
push
mov
mov
cli
loope
fldcw
xchg
add
pop
jae
pop
ret
inc
jge
pop
bswap
hlt
mov
notb
mov
je
movsl
xlat
cmp
mov
xchg
cs
cld
test
fstp
rorb
adc
lds
add
sub
movsb
pop
jmp
sbb
mov
lret
push
push
gs
or
adc
xor
jl
push
add
in
pop
inc
imul
sti
out
out
cmpl
push
pop
cld
dec
sbb
test
jnp
mov
mov
sbb
sbb
xor
pop
add
mov
inc
jbe
loopne
je
add
sbb
sti
push
mull
les
cmpsl
test
adc
ret
ja
and
hlt
in
lods
fs
cmpsl
stc
mov
movsb
xor
outsl
sub
pop
jo
push
xor
aad
jno
stos
lea
jp
inc
je
sub
addr16
mov
daa
sbb
inc
fcmovb
into
mov
outsl
push
xor
icebp
push
mov
xor
xlat
inc
call
gs
int3
xor
xchg
mov
mov
xchg
push
lods
and
lods
les
out
push
int3
dec
push
mov
xchg
inc
push
mov
push
pop
or
and
jl
jns
sbb
cmp
ret
xchg
xchg
clc
cmpsb
test
jp
mov
xchg
gs
ljmp
push
or
jnp
in
adc
inc
lcall
out
xor
in
in
gs
test
lret
sub
cmpsl
jge
push
leave
xchg
push
movsl
aas
stos
xchg
ja
pop
sahf
das
jecxz
inc
xchg
fbld
aad
cmpsl
shr
inc
mov
push
test
and
pop
adcl
stc
and
pop
cld
mov
mov
aaa
loope
push
or
cmp
and
jae
aaa
cmp
into
scas
subl
mov
repnz
ror
pop
add
add
das
mov
mov
jecxz
test
adc
sbb
mov
addb
sbb
movsl
sbb
mov
sti
inc
mov
xchg
cmc
mov
jo
add
push
aam
sbb
ffreep
mov
repnz
rcl
mov
or
add
icebp
outsb
push
pop
loopne
data16
aad
in
adc
enter
cwtl
ret
and
add
cli
dec
push
nop
and
fidivs
cwtl
and
loope
add
insb
cmp
mov
inc
pushl
xchg
orb
sbb
pusha
popa
jo
rorb
lods
xchg
add
hlt
popa
inc
sub
cmp
scas
pusha
jge
mov
scas
inc
mov
adc
int3
ret
xor
rolb
pop
push
xor
movsl
aad
inc
dec
mov
or
jp
mov
mov
cwtl
fs
in
out
xchg
jp
cmp
dec
les
jne
test
and
xchg
mov
in
fsts
cmp
adc
ficomps
outsb
rcll
and
mov
cld
mov
push
mov
dec
js
hlt
lds
push
push
push
lods
jnp
push
pop
stos
jnp
cmp
jecxz
mov
lret
mov
mov
daa
mov
call
xchg
xor
and
inc
mov
push
lahf
adc
cmpsb
in
jns
sti
mov
and
push
in
and
sub
jae
push
arpl
aaa
xchg
inc
or
out
hlt
adc
xchg
imul
inc
pop
xchg
xchg
dec
fsubr
arpl
sbb
int
add
test
scas
lret
incb
scas
test
jns
xor
jne
outsl
mov
scas
leave
inc
push
inc
fnop
test
xchg
cmovnp
add
and
mov
push
fisttpll
push
adc
insb
out
add
mov
dec
test
cmp
das
inc
inc
fistpl
lcall
fidivrs
mov
adc
xchg
pop
neg
and
mov
pop
mov
fmull
movsl
or
push
push
int
sahf
aam
dec
fcomps
add
push
in
test
loope
xor
imul
test
daa
push
bnd
lds
sahf
mov
inc
repnz
sub
jecxz
push
or
mov
leave
ficompl
imul
in
xor
mov
sbb
test
rcrb
push
jle
lock
cmp
lret
std
paddw
into
aaa
push
stc
dec
jmp
jbe
push
xor
xchg
inc
lods
rorl
cld
lret
sbb
inc
ret
inc
and
out
nop
dec
movsl
inc
lret
xorb
mov
inc
add
sub
pop
bnd
sub
push
mov
pushf
and
cmp
stc
ds
insb
xor
push
je
mov
in
xchg
dec
push
out
xor
and
lret
add
stos
out
push
mov
cmp
movq
adc
pop
icebp
cmp
dec
data16
or
lds
popa
das
cs
pop
out
cmp
stc
pushf
aaa
cld
gs
xor
mov
dec
and
mov
pop
add
mov
adc
stos
mov
dec
xor
test
and
idivb
or
jb
jecxz
jmp
jns
xchg
out
dec
frstor
sub
inc
xor
jge
fisubrl
clc
lcall
inc
inc
add
mov
dec
das
lods
hlt
jmp
test
jo
jae
fxch
movsl
cmpsl
pop
sub
add
shr
jno
sbb
xchg
and
movsb
push
popa
fstps
shll
pop
popf
ja
pushf
adc
loop
adc
outsl
dec
test
hlt
movsl
iret
lahf
ret
jecxz
pop
mov
mov
dec
jnp
push
test
dec
bound
enter
scas
mov
sub
push
sub
xor
xor
rorl
notl
fwait
imul
aam
mov
pop
sbb
xchg
jg
sbb
cld
cmc
push
sub
mov
mov
and
sbb
add
dec
int3
xchg
sbb
cs
nop
in
mov
mov
sarl
sbb
cmp
pop
jae
cmc
aas
hlt
add
inc
loope
or
pop
mov
sub
das
and
out
cmp
sub
jbe
add
push
loopne
dec
jbe
jl
out
push
fs
xlat
dec
jl
xchg
jmp
xor
push
or
iret
test
cmp
mov
mov
and
lahf
xchg
movsl
mov
test
shl
pop
arpl
sbb
push
aas
add
insb
jg
pusha
mov
mov
xorl
adc
cmp
js
iret
rorl
jp
and
and
and
mov
sbb
icebp
fcmovb
fisubs
adc
sahf
sub
dec
push
arpl
adc
test
test
jge
and
ficompl
popf
in
imul
or
cltd
push
outsl
loop
pop
andb
mov
loopne
ss
inc
cltd
jno
dec
lods
out
out
cltd
xchg
enter
cmp
xchg
push
inc
mov
or
fwait
push
fstl
sbb
and
fwait
mov
adc
mov
popl
ljmp
sub
pop
mov
sub
dec
divl
jecxz
sub
pop
iret
sub
sub
or
stc
cmp
pop
sub
dec
in
aas
out
lods
leave
sbbl
or
push
jmp
in
testb
movl
jnp
and
mov
pop
pop
xor
movsb
and
hlt
popa
pop
cmp
mov
inc
stos
push
cmc
xchg
iret
jb
pop
fisttpl
and
test
xor
push
jo
cmp
test
push
sub
test
xor
pop
push
movsl
pop
mov
lcall
call
imul
push
jp
inc
mov
jnp
scas
sbb
jecxz
push
mov
fpatan
in
jmp
icebp
dec
jno
adc
mov
pop
scas
push
loop
xor
cmp
fidivl
ljmp
shll
call
and
pop
xlat
out
pop
test
and
xchg
notl
jge
sub
fwait
jbe
jnp
add
incb
mov
mov
jo
std
cli
imul
cmp
jle
inc
push
cli
dec
into
sbb
nop
lds
shll
mov
popa
ljmp
inc
jb
leave
inc
xchg
jmp
mov
cmp
ret
jecxz
push
sahf
mov
div
mov
xchg
sahf
fimull
cwtl
in
movb
or
mov
fildll
sub
stos
addl
mov
sbb
mov
push
and
push
sbb
fs
leave
jge
mov
loop
pop
and
xchg
in
sub
outsl
push
pop
aam
pop
adc
inc
jmp
sahf
and
jnp
or
cmpsl
cwtl
pop
bswap
ret
adc
pop
mov
movsb
je
pop
loope
jne
in
dec
outsl
push
and
sbb
in
jge
aas
arpl
xor
inc
outsl
push
jg
dec
je
test
mov
out
aam
in
hlt
filds
adc
and
xor
inc
outsl
push
jg
dec
je
test
mov
out
aam
in
hlt
filds
and
inc
sysenter
pop
aam
push
jg
dec
mov
test
mov
out
jmp
iret
sbb
adc
dec
aas
jle
adc
inc
outsl
inc
jg
dec
hlt
pop
test
mov
mov
pop
add
xor
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
insb
mov
add
adc
outsl
xchg
mov
enter
clc
mov
andl
pop
shll
ss
xor
add
adc
popa
xchg
inc
cmpsb
push
shl
inc
mov
scas
addr16
jbe
arpl
ss
mov
xchg
xlat
divb
cmp
mov
add
sbb
inc
lods
dec
mov
mov
cmpsb
inc
mov
xchg
ljmp
mov
lds
cmp
test
loopne
sub
mov
sbb
aad
and
cltd
jp
fs
pusha
dec
inc
sahf
pop
addr16
and
add
xor
lret
add
jge
jne
inc
dec
push
jle
outsl
mov
stc
jl
xor
dec
ret
jl
inc
mov
inc
scas
push
push
mov
loop
xchg
mov
repz
push
cs
push
int3
sub
sbb
sti
sahf
or
sbb
jle
xchg
jbe
push
icebp
push
xchg
dec
movsb
movsb
lahf
xor
pop
mov
in
leave
mov
pop
inc
dec
push
adcb
mov
inc
test
ror
xor
add
jge
popa
xchg
mov
inc
and
data16
jbe
push
out
push
shll
jo
movb
cmpsl
jg
xadd
push
ret
xor
shlb
dec
shll
lahf
push
mov
xchg
push
and
ficoml
sub
and
and
add
and
arpl
push
xchg
test
push
mov
jno
inc
cmpsb
push
mov
inc
mov
andl
push
shll
ss
xor
add
adc
popa
xchg
inc
cmpsb
push
mov
inc
mov
andl
push
shll
ss
cmc
test
jae
cmp
iret
push
sub
sub
cs
addr16
push
popa
xchg
fstpt
ljmp
jg
push
movsb
out
pop
shrl
int
sahf
in
jecxz,pt
jl
scas
fidivs
das
pop
andl
fadds
es
mov
xor
pop
or
cmp
stos
dec
stos
jmp
push
jg
and
test
shrb
shlb
pushf
cmp
lods
or
mov
cmpb
andl
test
sbb
dec
pop
cli
iret
inc
mov
ljmp
testl
insb
stos
push
pop
sti
sahf
rolb
lock
pop
pop
push
xlat
repz
adc
jae
lods
int
aaa
je
xlat
jae
xor
push
in
js
stc
jbe
iret
mov
popa
mov
andb
jns
aam
xchg
inc
mov
dec
sarb
shr
adcl
dec
cmp
mov
in
subl
mov
mov
mov
shll
mov
popa
and
cld
xchg
xor
loop
cmp
jbe
inc
jae
stos
adc
mov
push
mov
lret
sub
xchg
sbb
adc
pop
loopne
push
and
into
cmp
dec
mov
jge
or
sbb
call
arpl
inc
scas
divb
jle
sub
jmp
lods
imul
jns
jne
leave
cmp
test
push
mov
dec
lock
or
cmpsl
pop
fcmovu
inc
sarl
dec
in
sarl
mov
and
frstor
jg
rorb
fstl
aam
mov
aam
orb
pusha
dec
push
lret
imul
push
movsl
scas
add
js
popf
dec
jmp
push
aad
mov
sub
sbb
adc
nop
pop
pop
fs
aas
push
lret
je
imulb
pop
hlt
cmpsb
out
dec
sbb
or
dec
ret
call
jmp
fucomip
jnp
and
fldcw
xor
ret
mov
sbb
in
jle
mov
push
mov
xlat
lds
fidivl
jmp
fildll
aas
mov
adc
push
xor
loop
cmp
in
mov
rolb
mov
lods
inc
fstpl
scas
xchg
loopne
out
dec
mov
inc
pop
cmp
loope
ret
pop
cmpl
das
push
and
push
dec
in
test
out
and
push
and
push
adc
pop
les
sub
into
pop
lret
dec
in
imul
xor
addr16
xchg
or
jb
ffreep
mov
pop
jns
push
pusha
movl
xchg
xchg
cltd
enter
mov
or
rcr
push
aaa
add
xchg
ljmp
mov
cmpsb
nop
xchg
xor
sbb
cmc
jbe
xor
outsb
xor
push
adc
push
in
pushf
adc
xor
pop
rorb
into
pushf
jmp
push
sub
outsl
jae
data16
and
vunpcklps
xchg
clc
dec
hlt
lods
insl
lock
sbbb
or
addr16
fidivrl
pop
mov
cwtl
std
inc
loop
cmp
xchg
xchg
cmp
sti
repz
in
addl
fnsave
sub
dec
pop
daa
xor
hlt
xchg
js
test
leave
fisubs
rclb
sub
lods
mov
or
add
int
imulb
cmp
pop
mov
testl
repnz
mov
ds
stos
sbb
enter
sti
xchg
insl
les
clc
rolb
cmp
push
sbb
pop
lcall
sub
push
scas
xchg
jae
adc
push
push
inc
negl
aaa
lret
mov
pop
xchg
iret
sbb
and
jge
out
cmp
imul
xor
xchg
jbe
add
pushf
shll
or
inc
mov
inc
dec
clc
cmpl
std
or
pop
pop
sbb
arpl
xlat
xor
stc
in
bound
push
mov
mov
clc
dec
dec
mov
sub
mov
jg
cmp
or
sub
loop
notl
mov
inc
ffreep
sbb
jnp
xor
mov
std
fs
push
sbb
cld
test
arpl
pop
pop
rorb
mov
adc
sub
in
or
push
ja
dec
int3
pop
sbb
jge
sub
xor
cmp
ss
stos
xor
jnp
imul
test
fisubrs
into
ja
sub
lret
ss
imul
lret
and
hlt
sahf
aam
dec
inc
fistpll
cmp
popa
xor
lds
mov
dec
lcall
fwait
push
lret
cmp
nop
mov
xor
ret
hlt
adc
dec
ret
hlt
subl
cmc
jmp
adc
jo
lock
jmp
mov
xor
cli
shlb
jo
jae
cmp
leave
je
and
decb
arpl
push
rcrb
mov
push
sahf
out
inc
xor
pop
xchg
jne
out
jge
lahf
clc
shrl
pop
mov
hlt
fstpt
and
in
je
jl
mov
xlat
mov
sbb
adc
xor
pop
inc
adc
fsubs
add
jb
lea
xchg
outsl
addr16
and
xchg
cs
clc
dec
cmp
insl
mov
dec
mov
dec
stos
mov
adc
sbb
sub
daa
add
cmc
mov
dec
iret
pop
jg
mov
loopne
imull
jbe
rolb
outsb
add
in
mov
mov
dec
or
mov
mov
jecxz
dec
mov
roll
ss
test
lcall
fisttps
sar
jno
mov
jns
sub
xchg
loope
lock
and
mov
scas
popf
jnp
pop
imul
and
xor
adc
add
xchg
out
cmpsl
lods
stc
push
cmc
notb
jb
xor
xor
push
aas
pop
rcr
int3
addb
mov
insb
push
push
movl
dec
in
sti
addr16
out
cli
sbb
aad
f2xm1
loopne
lds
test
fdivl
andb
jp
stc
negl
pop
rorb
sbb
jle
xor
leave
pop
sbb
test
push
cs
out
push
es
mov
bnd
push
mov
cli
cmp
ror
out
lods
xchg
shlb
jo
xor
addr16
and
hlt
repnz
call
cmp
mov
scas
scas
das
or
sbb
mov
test
jg
jl
lock
cmpsl
pop
xchg
cmp
in
jge
insb
lcall
lahf
and
or
insl
jno
mov
inc
or
shlb
cmp
lea
dec
mov
bound
sbb
push
jp
adc
imul
gs
in
insb
add
jne
dec
push
sbb
cwtl
fnstenv
das
cltd
sbb
cmp
jne
xor
sbb
lea
mov
mov
xchg
iret
xchg
and
das
arpl
popf
mov
inc
das
mov
mov
xchg
iret
adc
lret
stc
inc
mov
fsubs
pusha
addr16
into
add
test
sbb
test
add
pop
or
ret
es
pushf
popf
pop
mov
lcall
xor
cmpsb
add
or
shrl
insl
adc
out
sarl
pop
xchg
rcl
dec
mov
fmulp
xchg
sbb
pop
aam
jp
fs
cli
pop
push
mov
int3
push
dec
jge
addb
mov
iret
lds
scas
xor
pop
pop
cmp
ds
jae
insb
popa
rclb
push
jnp
cmc
mov
pop
scas
iret
imul
mov
xor
mov
or
push
repz
mov
lcall
cmp
or
test
add
mov
jp
cmpsl
int
lds
cwtl
sbb
lret
ljmp
cmp
jg
push
jg
sahf
mov
mov
pushf
divl
dec
imul
mov
mov
mov
mov
out
sub
cmc
cmp
pop
adc
adc
sub
dec
xor
sub
sub
xchg
cmpl
inc
imul
ja
outsl
mov
or
lea
mov
pop
lods
add
dec
sub
jnp
in
mov
pop
sub
and
mov
mov
cltd
sub
in
lret
pusha
adc
xor
je
xchg
mov
push
loop
xor
and
or
rorl
fisubrs
add
ds
xor
mov
pop
inc
inc
or
jo
and
mov
lahf
push
rclb
xor
and
dec
imul
ljmp
andl
imul
lcall
pop
jnp
orl
inc
inc
mull
or
pop
sbb
push
enter
jb
rcr
cmpb
scas
mov
loop
push
cmp
jns
in
cmp
incb
xor
imul
sbb
inc
and
jnp
inc
dec
out
jnp
mov
rolb
or
popf
int
jge
incb
ffreep
mov
movsl
movsl
aaa
je
fwait
push
je
push
pop
test
fldenv
inc
push
insb
int3
insb
out
xchg
nop
jne
cs
addb
sub
and
mov
out
push
and
mov
outsl
lods
mov
xchg
imul
jno,pn
stos
sbb
fdivl
aas
scas
jne
jg
fwait
or
sub
aad
jecxz
addl
sub
aam
fwait
addr16
fwait
jo
cmp
call
aas
fs
rclb
cmp
jne
lods
cmp
insl
aad
pop
mov
out
mov
add
clc
cmc
sub
ret
addr16
ja
js
cmp
shlb
pop
mul
mov
sub
push
mov
mov
xchg
fdivs
fbstp
jo
es
push
add
scas
or
jmp
sbb
pop
out
subb
mov
popa
cmp
das
js
push
push
inc
mov
nop
xchg
sub
xchg
repz
jb
iret
cmpsb
cltd
mov
cmp
cmpsb
pop
mov
insl
dec
xlat
sub
test
xchg
sahf
hlt
shll
inc
sbb
daa
dec
sub
mov
and
sub
push
jg
mov
dec
outsl
push
and
in
cmpsb
movsb
jae
sub
or
lret
xorl
fistps
lods
push
jno
das
pop
adc
lds
xchg
insl
mov
cltd
stc
cltd
loopne
cld
or
cs
cmp
ret
fcomp
lods
clc
ret
hlt
out
push
dec
fcmove
or
mov
test
push
adc
sbb
aad
or
dec
or
inc
subb
mov
lods
jecxz
leave
test
inc
sbb
push
push
push
mov
jg
imul
addl
mov
aas
pop
dec
cwtl
shrb
inc
add
xor
shr
mov
negb
xorl
arpl
xor
cmp
call
sbb
repz
out
leave
add
ljmp
fdivr
inc
mov
pop
inc
rcrl
movsl
xchg
jl
and
pop
mov
add
jae
adc
mov
rcl
mov
aam
push
test
dec
loope
push
cld
mov
push
les
mov
cmp
outsl
and
or
xor
dec
repnz
push
dec
scas
popf
jns
lds
cwtl
add
xor
xchg
mov
call
ljmp
xor
pop
sbb
push
mov
lods
daa
cwtl
ret
push
js
push
dec
xor
pxor
bound
or
mov
mov
icebp
lahf
mov
jae
push
mov
push
jmp
mov
and
push
add
mov
jne
sub
add
cmp
cmp
fisttpl
loope
and
decl
mov
hlt
or
dec
fs
cwtl
sub
add
imulb
mov
or
fwait
out
cmp
pop
out
mov
or
imul
jno
lcall
jno
mov
bnd
push
mov
push
jno
xor
loopne
inc
xchg
cld
in
jne
scas
inc
and
sbb
push
pop
sub
push
jg
movsb
adc
into
mov
and
xor
mov
lea
outsb
mov
xchg
xchg
cwtl
addr16
mov
insb
xorl
push
xchg
mov
loop
imul
sti
adc
cwtl
push
stos
xor
jmp
lock
dec
movsb
mov
ds
fnstsw
fwait
repz
and
push
arpl
lods
add
scas
xchg
int
fscale
mov
dec
ljmp
cmp
lock
xchg
mov
jnp
push
and
out
stc
jmp
in
mov
lods
jl
repz
cs
and
dec
mov
mov
xchg
dec
mov
jne
dec
rorb
sub
sbb
jbe
psllq
enter
mov
fnstcw
push
loope
jl
mov
xchg
outsb
popf
mov
mov
push
fsub
push
jae
mov
lods
push
out
or
out
test
aas
cltd
mov
adc
jmp
daa
insb
push
push
jnp
test
mov
and
repz
sub
insb
push
jecxz
js
popa
lods
inc
fidivrl
add
movsl
xchg
xchg
inc
jecxz
hlt
and
flds
mov
mov
rcrl
decl
and
fmul
ss
mov
fldenv
push
cltd
mov
mov
cmp
js
inc
cmp
iret
hlt
mov
jne
jo
and
pop
add
lcall
fistl
fsubrp
enter
xor
stc
dec
jbe
ss
pop
xor
movsb
outsl
push
mov
std
test
lock
aad
imul
xchg
push
fisttps
mov
fs
andb
and
sub
mov
sub
mov
xchg
adc
fdivs
shl
mov
mov
mov
dec
jns
xor
jbe
outsl
shr
das
clc
mov
cmpsb
mov
mov
and
mov
data16
jge
test
jae
mov
lock
cmp
loope
push
dec
ret
jb
subb
pushf
ret
dec
in
jp
call
leave
int
mov
pop
bound
subl
and
push
iret
lods
xchg
adc
jno
pop
mov
prefetch
xchg
ficoml
stos
jno
xchg
mov
jp
addr16
or
jb
push
cmp
push
pop
sbbl
subb
jmp
xor
aas
adc
dec
lods
xorb
push
pop
add
sarl
stos
xchg
pop
test
sub
dec
cmc
pushf
mov
imulb
mov
pop
mov
push
mov
call
push
clc
mov
or
push
int3
loope
lods
sbb
testl
hlt
bound
pop
dec
pop
pusha
fadd
jg
scas
icebp
pop
jbe
jmp
add
gs
jbe
orl
mov
fistl
jg
pop
mov
push
jbe
sahf
and
dec
jae
pop
dec
xchg
jge
adc
jnp
negb
cmp
rolb
ja
stos
mov
pop
adc
enter
adc
stos
es
cmpsl
in
ss
imul
or
loopne
faddp
sub
xchg
or
xchg
int3
mov
push
rcrl
lods
mov
push
or
or
mov
jmp
sti
push
cmp
cmc
enter
fcomp
loop
mov
and
js
adc
mov
push
jecxz
sti
loopne
pop
aam
outsb
rolb
fst
out
mov
mov
in
dec
dec
sbb
lret
mov
scas
fcoml
icebp
push
outsl
fmulp
push
lock
jecxz
loop
icebp
mov
xor
fs
push
add
sub
push
int3
aas
sub
imul
testb
test
mov
mov
popa
std
push
jo
or
mov
mov
in
sbb
bound
subl
bound
fs
insb
fildl
sub
push
lods
call
outsb
andb
push
mov
push
and
sub
add
mov
mov
push
rcr
adc
test
scas
push
cmp
js
js
xor
jne
iret
mov
mov
cli
or
mov
insb
mov
clc
decb
ja
enter
inc
inc
push
mov
jns
xchg
enter
jnp
xor
or
mov
inc
cld
sub
xchg
loopne
insb
xchg
cmp
ss
daa
xchg
or
jnp
test
dec
lock
lret
mov
push
pop
add
subb
imul
add
into
int3
shl
cli
in
inc
pop
and
ss
inc
lea
clc
mov
lret
aaa
lret
out
int3
arpl
movsl
js
in
mov
aad
in
notb
mov
jmp
push
and
aad
icebp
mov
inc
andb
cmp
orb
add
mov
mov
cmpsb
pop
push
fimuls
and
arpl
pop
fildl
adc
pop
dec
or
mov
sub
cmp
jb
jno
pop
or
mov
adcb
add
mov
push
xor
leave
push
xor
enter
sbb
or
cwtl
cmpsl
aas
aam
sub
leave
and
mov
mov
push
mov
ja
sbb
nop
imul
fs
movsl
int
insl
pusha
cmp
mov
fmull
jo
jg
xor
push
pop
fmuls
xchg
jae
mov
ljmp
ja
push
mov
mov
ret
es
ret
pop
aaa
out
pop
jmp
fidivl
mov
add
daa
loopne
and
xorl
sbb
add
add
mov
pop
adc
pop
les
sti
pop
xor
cmp
and
push
repz
sbb
fwait
sqrtps
sbbl
shll
outsb
inc
inc
dec
sub
jns
dec
xor
aad
cmp
mov
or
scas
scas
data16
dec
xchg
and
and
sahf
cmpl
and
fwait
daa
stc
mov
popf
push
push
mov
adc
pop
repnz
mov
nop/reserved
jp
divb
les
andl
fists
aam
sub
repnz
pop
hlt
movsl
lock
add
xchg
cmp
inc
pop
or
in
pop
out
in
pop
int
cmp
or
xor
push
ja
mov
adc
cmp
xor
xchg
out
fcoms
stos
sbb
pusha
pop
test
push
pop
lds
dec
les
cmpb
xchg
lods
fwait
insb
arpl
lods
lret
and
mov
jle
arpl
cmp
sub
icebp
inc
mov
push
adc
enter
cwtl
test
sub
test
in
push
xor
mov
mov
mov
dec
and
stc
sbb
fisttpll
jns
das
ja,pn
sub
pop
push
ds
lret
mov
aas
cmpsb
in
ss
sub
and
aad
test
int3
inc
rclb
xlat
add
arpl
adcb
lret
movb
aas
lods
lock
cmpsb
pop
push
and
insb
gs
pop
jns
inc
ljmp
xchg
enter
stc
fwait
jo
sub
lahf
jp
sbb
lahf
addr16
dec
insb
dec
push
fmull
xlat
adc
or
movaps
pop
lock
fwait
mov
pop
repz
das
cli
mov
divb
popa
mov
push
ss
mov
adc
stos
adcb
jge
pop
jns
fsts
test
xchg
pop
adc
jo
loopne
arpl
mov
mov
lret
mov
push
cmp
mov
imul
xorb
push
pop
les
xchg
aam
cwtl
gs
js
mov
adc
lods
xor
idiv
enter
sbb
iret
jge
icebp
xchg
mov
test
xor
mul
out
fbstp
mov
jecxz
repz
and
popf
movsl
pop
mov
mov
jg
jnp
cmpsb
fs
or
jecxz
mov
sub
cmpsb
fldenv
scas
or
pushl
mov
outsb
daa
fsubrp
lea
cmp
mov
inc
push
mov
cmc
push
faddl
mov
sub
pop
cmp
enter
fldt
jbe
jno
xchg
push
pushf
mov
sbb
in
incb
push
pop
dec
dec
je
test
add
arpl
bound
adcb
enter
mul
xlat
inc
pop
pop
add
and
or
xchg
inc
cmpsb
push
mov
inc
mov
andl
push
shll
ss
xor
add
adc
popa
xchg
inc
cmpsb
push
mov
inc
mov
andl
push
shll
ss
xor
adc
adc
pusha
xchg
inc
cmpsb
push
mov
inc
mov
mov
jbe
push
call
ss
sbb
mulb
popa
xchg
inc
cmpsb
shll
inc
dec
cld
sub
add
fldcw
leave
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
