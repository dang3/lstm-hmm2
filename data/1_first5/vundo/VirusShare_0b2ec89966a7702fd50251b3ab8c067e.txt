cmpsl
pop
fiadds
cmp
shl
out
xchg
or
cmpsl
mov
or
mov
inc
pop
int
sbb
xchg
xorl
jl
cmp
sub
lock
loop
das
cmc
enter
ja
and
jb
adc
das
jp
hlt
xchg
scas
mov
mov
and
push
push
pop
inc
xchg
aam
mov
xor
pop
inc
jge
out
inc
lret
sub
rcl
pop
sbb
sub
xchg
dec
hlt
std
repnz
sahf
mov
hlt
mov
xchg
mov
cmp
daa
repz
sahf
cmpps
xchg
adc
add
scas
imul
sub
add
sub
dec
addl
mov
pusha
aad
mov
in
js
fsubrl
mov
pmullw
sbb
xlat
divl
idivl
lret
dec
inc
test
mov
mov
pop
jno
es
movsl
jne
cmp
dec
fcmovbe
sub
or
in
sbb
nop
sbb
push
jbe
imul
push
shlb
fld
jbe
inc
adc
adc
sub
out
inc
in
imul
xchg
ret
mov
mov
test
popa
daa
orl
subl
mov
gs
cmp
ds
jns
loope
sbb
lods
and
stos
addr16
jo
pushf
or
cmp
hlt
loope
lret
cmp
movl
inc
xchg
stos
fdivrl
dec
adc
adc
cltd
repnz
push
test
sub
iret
test
mov
inc
fisubrl
sub
push
shr
cmp
movsl
ljmp
arpl
insl
ljmp
in
cwtl
fucomip
stc
jns
fwait
mov
stos
test
fidivrl
push
daa
jb
dec
out
sti
mov
sbb
sub
aas
ret
mov
dec
imulb
jecxz
cmp
jp
mov
mov
lcall
jecxz
repnz
sub
adc
jnp
ficoml
cltd
push
xor
gs
and
xchg
leave
pop
jg
push
test
inc
fstps
adc
insl
rcr
and
gs
mov
sti
in
loope
adc
cmpsb
popa
mov
cmp
hlt
sub
dec
or
ja
in
jne
cmpsb
sub
or
mov
xchg
test
jns
gs
push
repz
push
ret
jg
enter
arpl
fwait
sub
std
and
xor
inc
daa
sbbl
dec
fidivrl
xchg
add
in
xchg
mov
push
mov
cmp
fmull
xor
pop
add
and
pop
imulb
iret
loope
hlt
cmp
dec
adc
lock
or
push
xor
jo
bnd
outsl
and
lods
das
mov
filds
in
fcomps
insl
orb
xchg
in
sbbl
out
ss
sti
out
test
push
dec
out
stos
in
lahf
xchg
pop
ret
aam
sub
sub
xor
aaa
cwtl
xchg
xor
xor
and
push
in
jp
mov
rorl
aas
insl
imul
sahf
icebp
adc
cmp
mov
nop
repnz
mov
cmp
inc
mov
imul
adc
ficoml
push
lret
test
sbb
cmp
jno
pop
rcrb
sarb
sahf
cli
mov
mov
std
test
mov
std
xor
inc
xchg
xchg
xor
add
shll
push
mov
mov
int3
test
fdivrs
xchg
das
adc
imul
divl
sbb
push
imul
pop
pop
sbb
scas
dec
cmp
push
push
scas
aad
cmpsl
test
cld
hlt
dec
iret
daa
fs
aaa
ret
outsb
xlat
dec
insl
jge
xchg
or
popa
hlt
stos
mov
sbbl
arpl
sub
cltd
mov
test
sti
xorb
or
or
jne
imull
imul
cmp
lock
jae
mov
adc
mov
lods
cmp
mul
mov
shlb
lahf
pushf
sub
mov
push
sbb
in
hlt
mov
jge
dec
dec
insl
lods
test
pop
dec
mov
test
lret
dec
mov
jmp
sub
dec
lret
stc
sub
pop
in
dec
adc
movsb
adc
sub
jnp
push
and
add
mov
movsb
xchg
in
in
dec
shlb
out
add
rclb
add
rcll
xor
mov
fwait
xor
into
xor
cmpsb
test
mov
movsb
ljmp
inc
push
adc
dec
dec
cmp
movsb
inc
dec
idivl
xchg
push
mov
pop
mov
jg
lock
sbb
push
fldenv
pop
lret
mov
inc
dec
outsb
in
mov
dec
lcall
mov
dec
cwtl
in
js
fstpl
inc
cli
aad
or
cltd
push
cltd
mov
mov
cmpsb
mov
rcr
subl
push
dec
bound
imul
cmp
push
push
loop
mov
sub
gs
xor
loope
pop
scas
ds
sbb
repnz
sbb
sbb
gs
and
aam
push
into
mov
mov
clc
add
mov
push
std
xlat
dec
loop
mov
movsb
dec
and
jbe
pop
aam
mov
inc
mov
xchg
lea
loop
out
lods
mov
xchg
aaa
cmp
dec
inc
dec
push
nop
mov
das
fmuls
outsb
pop
lods
inc
stc
je
lock
xor
imul
sub
jae
ret
insl
adc
cmpsl
pop
in
iret
add
pusha
adc
xor
movsl
stos
out
adc
mov
sti
inc
add
xor
add
sub
xchg
sub
mov
add
ss
ret
mov
mov
or
xchg
mov
xor
xchg
mov
dec
adc
mov
sarl
adc
push
sbb
sub
fsubp
add
shl
push
out
mov
repz
or
stc
cmp
inc
mov
xlat
jae
sub
mov
fidivl
push
fnstsw
inc
cmp
pop
js
cmp
or
add
sbb
test
dec
jg
fwait
sub
cwtl
psubb
clc
jnp
ss
ss
mov
xor
mov
sub
sub
lret
dec
jns
pop
daa
loope
xchg
mov
rorl
pop
push
pop
ror
int
mov
mov
and
les
cwtl
loope
mov
test
jnp
xchg
shufps
jb
test
stos
jp
or
push
dec
lock
xor
jo
fdivrp
inc
cmp
repnz
insl
jne
pop
mov
pop
cmpsl
push
sbb
pop
mov
test
and
testl
or
mov
mov
and
and
aaa
jg
int
xchg
in
add
stc
jmp
cli
pop
lret
xchg
in
inc
inc
fstpt
cwtl
or
push
xor
mov
ret
imul
call
adc
inc
aaa
clc
push
inc
js
frstor
mov
mov
xchg
negb
lcall
movsb
mov
pop
shrl
jb
mov
or
ljmp
pmulhuw
push
inc
out
ret
or
std
outsl
aad
arpl
mov
jl
xchg
cli
enter
fadds
adc
and
scas
imul
mov
push
lds
mov
dec
ljmp
test
inc
sub
mov
test
das
cwtl
imul
push
shll
xlat
and
or
out
repz
vpsubsw
iret
cmpl
pop
pusha
ss
xlat
and
fimuls
cwtl
repnz
xor
jns
dec
mov
jne
out
gs
xchg
push
daa
xor
addr16
cmpsb
adc
sar
push
fildll
dec
out
and
cwtl
lods
push
popf
and
or
mov
sub
mov
pusha
fldl
scas
js
int
cmp
je
inc
xchg
pop
test
loop
add
xchg
negl
aam
jo
stos
adc
sub
stc
repnz
fwait
ljmp
fisttpl
lahf
dec
mov
enter
call
mov
std
push
aam
add
dec
pusha
inc
ret
or
ret
adc
cmp
leave
xor
push
or
jmp
mov
add
negl
cmp
mov
pop
roll
ds
je
and
mov
xchg
cmpsb
ja
or
pop
es
push
insb
ror
clc
jno
leave
fstps
movsb
in
out
std
and
jge
cmp
and
jb
mov
lods
cs
xor
sbb
pop
jbe
dec
mov
fisubl
sbbb
icebp
fsubrs
add
loopne
orb
test
xchg
pop
addb
pop
pop
sub
jae
loop
popf
cmc
iret
pop
mov
push
jbe
xor
test
out
pushf
add
push
jl
mov
cmc
jns
leave
jo
and
and
in
lret
sbb
jnp
mov
ja
shrl
lret
insl
adc
lcall
lret
fdivrs
xlat
lahf
outsb
outsl
dec
cmpsl
mov
add
jl
aaa
jb
stos
push
jge
loopne
jle
lcall
push
movb
sbb
cltd
jnp
mov
inc
pop
cmp
and
jl
orb
and
pop
call
enter
xchg
inc
cwtl
aas
or
insb
or
inc
arpl
mov
std
sbb
cmpsl
xchg
dec
mov
push
sbb
pop
repnz
jmp
daa
jne
divl
dec
sub
mov
cmovae
push
xlat
lods
jl
xchg
repz
lock
lea
adc
imul
and
pushf
mov
xor
mov
mov
xor
sub
pop
enter
lea
jg
test
jecxz
inc
mov
jg
inc
movsb
mov
mov
xor
push
lret
add
mov
outsb
sti
in
testb
nop
rcll
negb
sub
leave
je
js
cmp
sub
pop
clc
movb
test
in
mov
lret
pop
mov
movsl
call
xor
or
test
jbe
mov
test
mov
jmp
xor
jecxz
daa
fistl
push
dec
stos
xor
es
cld
sbb
mov
mov
push
dec
insl
cmp
push
ret
bound
lret
mov
pop
pop
jbe
jns
cli
push
repz
int3
push
adc
push
and
mov
add
adc
fisttpll
imul
jnp
cmp
cmpsl
pop
push
jl
leave
dec
sbb
jl
mov
inc
xchg
sbb
jle
add
imul
jg
sbb
insb
stc
jmp
adc
shlb
push
shll
xchg
and
js
jo
test
cmp
push
cmp
repnz
pop
gs
in
mov
mov
lea
mov
mov
pop
mov
testl
dec
lea
dec
sub
push
jnp
cld
push
cmpsb
leave
sarb
sbb
sub
mov
shr
adc
mov
cld
mov
adc
inc
hlt
inc
jb
test
movsb
int3
adc
stc
mov
pushf
and
imul
repz
into
in
out
mov
cmpb
xchg
cwtl
adc
pop
xchg
push
cltd
int
and
jbe
push
inc
outsl
inc
movsb
lds
mov
out
mov
cmp
mov
scas
icebp
repnz
mul
movsl
lret
into
jo
lea
or
aaa
sbb
fbld
xchg
rol
inc
daa
xor
push
call
rcrl
je
xor
aad
mov
es
jbe
pop
addr16
sbb
push
insb
mov
mov
mov
ja
mov
std
mov
les
mov
or
dec
mov
inc
xor
fwait
sub
add
pop
lahf
movsl
sub
adc
push
adcb
stos
aad
mov
xchg
mov
test
mov
shlb
mov
pop
lock
shll
push
int3
arpl
lods
cltd
pusha
mov
xchg
sub
cmp
sbb
sub
fiadds
jns
xchg
xor
push
outsl
stos
pop
cmp
dec
movsb
pop
mov
loop
das
push
inc
or
or
jno
lea
fldl
cltd
cmp
inc
mov
xchg
jne
add
or
aam
push
jge
adc
inc
sub
lret
dec
xchg
lods
mov
aaa
pop
sub
or
add
icebp
or
data16
jae
xor
xchg
jbe
push
nop
cltd
xor
ret
outsl
inc
in
and
and
mov
cmp
mov
daa
stc
sti
jge
cmp
dec
push
lds
mov
rorl
jle
lcall
mov
push
into
cmpsl
adc
sub
push
jmp
pop
repz
jns
mov
mov
and
dec
mul
pop
lcall
call
lods
xchg
xchg
rcll
ds
push
je
xchg
push
call
lock
xor
lcall
lods
flds
add
popa
iret
adc
or
loope
cs
stos
and
les
pop
insb
pop
hlt
adc
and
hlt
xchg
push
pop
jno
sti
add
leave
ljmp
lds
mov
jg
cmc
std
hlt
sbb
jb
ds
jns
mov
cmc
add
xchg
xchg
pop
cmc
inc
cmp
pop
adc
push
push
sbb
sbb
xor
int
cltd
sbb
xchg
enter
stos
inc
xchg
push
rcl
inc
add
cli
lret
mul
sub
sub
mov
les
outsl
jno
fwait
adc
adc
pop
int
mov
mov
arpl
fmuls
lock
xor
ds
lea
je
enter
push
xlat
or
mov
daa
push
jns
or
scas
lea
jnp
sbb
cltd
dec
testl
jmp
mov
xchg
and
insb
cwtl
lea
mov
dec
sbb
lcall
dec
jl
push
cbtw
into
sbb
push
cwtl
cmp
cmp
lea
popa
mov
mov
sahf
xor
mov
and
je
mov
jbe
les
push
inc
jmp
adc
mov
nop
dec
jl
adcl
sbb
dec
ja
jno
push
adc
ret
add
jecxz
and
xlat
ret
or
ja
rol
imul
enter
cli
inc
ljmp
sub
clc
mov
xlat
ss
push
movsl
xor
fbstp
ljmp
arpl
push
jno
jmp
js
adc
jmp
xchg
loope
xchg
aas
cmpsb
sbb
mov
xchg
ja
cmp
push
xchg
aad
add
inc
xchg
add
bnd
jge
xor
lds
ds
ret
xchg
dec
lret
sbbl
add
mov
test
inc
sti
aaa
pmuludq
mov
js
test
adc
sbb
sbb
sub
sahf
sub
orb
mov
jp
dec
or
pop
pop
loope,pt
gs
lcall
inc
pop
inc
sbbb
adc
xchg
mov
sbb
mov
cmp
lock
sti
fcoml
rclb
and
fiadds
xor
out
int
test
in
cmp
repnz
je
movsl
sbb
inc
fsubp
sub
repz
mov
ficompl
cmp
ret
insl
fwait
jge
lret
sbb
shl
cmpsb
rcr
js
stc
pop
enter
aad
add
mov
int
pop
movsl
mov
mov
pop
mov
xchg
scas
xchg
adc
scas
mulb
orl
into
sub
cmpsb
sarb
push
les
dec
or
mov
ret
mov
xor
dec
testb
or
jl
icebp
shlb
add
ljmp
cltd
adc
scas
mov
dec
xorl
inc
lea
xchg
dec
je
push
lock
pop
test
xchg
push
and
shll
dec
cmp
orl
pop
sahf
ljmp
mov
adc
aas
test
pop
sub
daa
adc
aam
popf
push
pop
add
je
mov
fcmovu
test
lods
push
insb
fisubs
or
fcompl
lret
insl
leave
sub
stos
xchg
mov
lahf
loopne
xchg
movsl
loopne
repnz
lods
cmpsl
int
fimuls
push
mov
lods
mov
ljmp
inc
jl
pop
ret
sbb
inc
xchg
mov
rcr
dec
lret
sbb
test
outsl
jns
sbb
pop
jae
mov
mov
lea
xor
xor
or
xor
mov
sbb
or
sub
and
shll
test
push
jmp
or
sbb
testb
in
adc
cmp
pop
adc
sbb
rep
stos
jo
loopne
xor
pusha
fwait
repnz
imul
adc
dec
lcall
in
jae
int
pop
and
and
inc
jbe
bnd
lcall
sbb
inc
ljmp
and
int3
out
push
aad
jne
stc
or
iret
addr16
inc
cld
adc
pop
nop
sbb
sbb
xlat
pop
pusha
cmpsl
jmp
scas
mov
in
push
shll
test
xchg
int
bnd
or
push
mov
mov
pop
mov
cmpsl
shrl
jbe
leave
cmpsb
mov
stos
jbe
mov
push
daa
cmp
data16
out
stos
xor
jo
lahf
int
xchg
ljmp
cli
push
cs
sarl
rcrl
dec
loopne
jno
sbb
inc
lock
mov
lahf
and
jnp
cmp
insl
daa
or
jecxz
fldcw
test
mov
and
add
gs
loope
cmp
fiaddl
mov
lods
mov
js
jb
xor
in
sbb
xchg
js
fnsave
fstl
data16
cmpsl
or
jnp
cld
fistpl
xlat
aas
cmc
jle
mov
int
cmc
xor
aas
push
pop
out
inc
pop
int
fdivs
adc
xchg
es
cmp
bound
aas
movaps
js
scas
repnz
movsb
test
in
insb
fsts
imul
psraw
mov
ret
sbb
adc
jnp
and
cld
dec
sub
sub
imul
pop
jge
into
ja
mov
or
inc
sub
mov
mov
xor
int
out
imul
div
outsb
stc
lret
sbb
cmp
cmc
test
jp
das
sti
jmp
pop
out
ret
push
cmp
ja
call
cwtl
sub
adc
pop
inc
push
dec
push
jle
int
es
xchg
push
and
pop
mov
push
mov
into
push
iret
adc
inc
sbb
lahf
or
imul
cwtl
aaa
xchg
xchg
add
push
jmp
inc
or
push
or
inc
pop
lods
jnp
lods
xor
jnp
shll
rorl
xchg
mov
push
in
idivb
inc
pop
clc
inc
out
add
clc
or
fstpl
jl
add
push
jo
jmp
sbbl
mov
push
inc
das
test
sub
xchg
bound
inc
push
xchg
pop
in
push
pop
and
or
es
addr16
or
inc
dec
out
xchg
mov
loop
dec
fidivrl
mov
lea
aaa
mov
sub
movsb
push
xchg
cmpb
icebp
mov
mov
clc
push
mov
cwtl
fwait
add
xchg
pop
rcrb
stos
dec
imul
mov
cltd
jge
rcr
cmp
or
clc
nop
mov
adc
jae
insb
inc
jnp
add
decb
pop
mov
out
addr16
xchg
dec
sub
sub
test
aas
sbb
dec
aaa
jle
nop
dec
repz
xor
mov
mov
or
mov
jp
outsb
outsb
lret
jb
dec
sbb
inc
push
mov
les
enter
lea
lock
push
int
adc
movsl
call
andb
pop
mov
mov
mov
call
push
push
push
mov
pop
push
nop
pop
pop
push
mov
mov
shrd
cmc
pop
imul
stc
push
mov
push
xor
xor
pop
pop
pop
push
push
pop
xor
stc
pop
mov
push
push
push
push
lea
push
push
push
push
jmp
push
clc
mov
cld
cld
pop
mov
xor
push
jmp
push
pop
nop
push
pop
cld
pop
ja
push
nop
pop
push
clc
pop
push
cld
pop
mov
xor
lea
push
xor
pop
movsbl
push
mov
mov
pop
mov
lea
push
push
pop
rol
cmc
pop
ror
js
push
pop
mov
shl
mov
jmp
cmc
cmc
rcl
push
shl
pop
shl
shl
push
shl
cmc
pop
cld
jmp
jmp
call
mov
test
push
mov
cmc
pop
push
pop
jmp
mov
push
mov
mov
mov
cmc
pop
mov
mov
push
nop
pop
mov
mov
push
ror
mov
mov
mov
pop
nop
mov
jmp
mov
mov
mov
jmp
push
mov
nop
pop
push
pop
push
shl
mov
shl
pop
mov
sbb
nop
pop
mov
mov
push
mov
pop
jno
or
adc
push
pop
adc
btr
mov
mov
cmp
mov
add
xor
and
push
jmp
mov
pop
rcr
add
jbe
ror
clc
add
push
rol
pop
jmp
xor
sbb
shl
cmc
rol
sub
rcl
stc
mov
xchg
jmp
mov
or
sbb
add
shr
mov
mov
ror
sbb
rol
add
rol
cmp
sub
sbb
mov
mov
or
push
not
pop
cmovb
cmp
push
add
pop
mov
add
adc
rcr
rcr
adc
or
ror
rcr
ror
jmp
rcr
add
rcl
adc
jmp
rcr
add
shl
rcr
sub
cmp
xor
cld
stc
mov
or
rcr
jns
rcl
xor
rcr
rcl
rcr
cld
or
adc
shl
and
and
rcl
and
push
rcl
pop
nop
adc
stc
rol
cld
cmc
or
rcr
test
jne
jmp
xor
cld
clc
stc
and
sbb
sbb
rcr
or
rcr
nop
sub
stc
nop
nop
push
add
pop
shl
shl
rcr
stc
nop
xor
cld
add
rcr
shr
rol
push
add
pop
cmc
cmc
or
add
sub
cmc
nop
push
mov
xor
pop
xor
nop
shl
cld
add
rol
nop
cld
sbb
shl
push
clc
pop
imul
mov
inc
inc
inc
inc
clc
ror
cld
or
push
nop
xor
stc
cld
pop
sub
push
stc
rcl
nop
cmc
pop
ror
jb
jbe
and
neg
cmp
xor
rol
cmovb
cmc
stc
mov
rcl
nop
clc
sub
shl
rol
push
rcr
pop
shl
jo
mov
jne
mov
mov
mov
mov
stc
mov
mov
mov
ror
shl
mov
shr
rcr
mov
dec
jne
mov
push
mov
mov
pop
ja
adc
mov
shl
mov
rcl
rcr
mov
mov
mov
mov
mov
rcr
mov
mov
mov
push
cld
mov
pop
ror
jne
jae
ja
stc
mov
nop
rol
rol
mov
mov
mov
nop
rcr
rcr
push
pop
nop
nop
cld
push
mov
mov
mov
pop
mov
mov
jns
push
push
pop
xchg
mov
clc
pop
push
push
pop
mov
mov
mov
pop
mov
mov
push
pop
mov
push
push
push
clc
pop
stc
pop
cmc
pop
push
mov
pop
push
mov
pop
push
push
pop
push
pop
stc
pop
push
stc
pop
push
lea
mov
cld
pop
jb
push
clc
pop
nop
ja
lea
mov
test
nop
push
test
jmp
mov
mov
pop
lea
jno
test
push
stc
pop
test
clc
push
mov
stc
pop
push
stc
pop
push
mov
mov
test
pop
push
test
test
pop
ja
test
test
mov
test
push
test
test
test
test
cmc
pop
test
test
push
mov
pop
push
mov
test
cld
pop
test
mov
test
lea
mov
push
test
pop
push
pop
test
mov
call
movsl
jns
mov
push
mov
nop
pop
mov
test
push
pop
mov
mov
mov
push
mov
jo
mov
mov
clc
mov
stc
pop
pop
jbe
test
cld
mov
jo
mov
mov
push
pop
mov
test
jb
clc
mov
push
mov
test
pop
mov
jno
mov
mov
nop
cmc
push
mov
pop
push
test
test
pop
cld
jb
cld
jae
push
pop
jne
mov
mov
cld
mov
mov
jo
test
push
pop
test
mov
mov
mov
push
mov
pop
nop
jb
jns
test
cmp
jbe
test
test
push
pop
cmp
cmp
ja
cmp
or
cmp
nop
cmp
cmp
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
cmp
cmp
cmp
push
pop
cmp
cmp
cmp
cmp
jmp
rcl
clc
cmp
je
cmp
test
test
push
test
pop
cmp
cmp
test
cmp
cmp
js
jae
cmp
cmp
cmp
cmp
test
cmp
nop
cmp
cmp
cmp
test
test
cld
dec
jne
cmp
push
test
cmp
cmp
cmp
pop
test
cmp
cmp
cmp
cmp
jne
cmp
cmp
cmp
cmp
cmp
cmovge
cmp
stc
test
cmp
and
mov
fists
or
pop
enter
jno
mov
adc
add
xchg
add
outsl
pop
push
call
mov
or
negl
cmp
popl
lahf
dec
pop
movsb
jno
fidivl
ja
sub
sbb
xchg
sbb
cmp
cmp
fs
mov
mov
test
xchg
push
jle
rclb
jnp
data16
pop
cmpsb
mov
cwtl
jle
cltd
mov
jnp
and
jmp
fimuls
cld
cmpsl
fistpll
adc
mov
jnp
xchg
mov
inc
lods
popl
or
lea
pop
mov
ja
mov
fdivr
pop
push
repnz
aam
hlt
and
adc
mov
sub
sahf
fwait
movsl
push
test
sub
mov
jmp
sbb
mov
ret
mov
lahf
jp
xchg
jbe
jp
fildl
cld
adc
mov
fdivs
movsl
fmull
pop
shrd
mov
data16
push
int3
xor
xchg
jg
fidivrs
imul
push
jmp
addr16
cli
test
cld
imul
inc
stc
loopne
out
mov
das
sub
jg
addr16
mov
in
pop
and
addb
shlb
lea
cs
insl
fisubl
cs
or
or
sub
fstl
and
ret
out
dec
std
mov
sub
sub
cwtl
lar
xchg
stos
cmp
cmp
and
stos
fdivl
push
inc
jbe
fiaddl
mov
ret
ja
jle
push
inc
mov
mov
fs
lahf
pop
push
int
or
sbb
sub
repz
ja
fadds
and
sub
pop
mov
mov
xchg
or
cmc
test
repz
pusha
imul
andb
daa
push
ljmp
inc
cmpsl
pop
jo
scas
add
dec
xlat
test
loope
int
popa
in
push
mov
push
xchg
lock
jns
or
and
in
stos
sub
mov
rorb
mov
sub
cmpsb
aam
add
lcall
cmp
mov
sub
push
aaa
xor
adc
ficoms
xchg
mov
xor
mov
adc
out
mov
aad
in
xor
xchg
sub
add
test
inc
cmp
push
shl
mov
inc
stos
mov
jbe
mov
in
enter
push
cmp
enter
stos
and
rorl
rcl
ret
xor
fists
fs
add
push
int
int
sbb
mov
pop
loop
jmp
and
andb
inc
lcall
push
cmp
and
mov
lds
imul
jnp
orb
mov
stos
cmp
sub
mov
xor
sbb
mov
data16
fsubr
fistps
or
xchg
movsl
and
push
xor
cmp
je
ret
add
cmpsb
xchg
les
in
fsubrl
mov
fs
test
cmpsl
sub
loop
mov
stc
stos
sbb
add
lret
into
negb
adc
and
xchg
xchg
push
inc
ja
or
pop
scas
emms
and
orb
cmp
lock
dec
insb
mov
mov
rcll
dec
rclb
sbb
ljmp
cmpb
xor
out
xchg
pusha
cmpsb
dec
push
inc
mov
mov
mov
sbb
leave
xchg
addb
mov
xchg
sbb
push
push
out
dec
cmp
xchg
adc
imul
out
in
lret
xor
enter
testl
in
push
notb
call
shll
push
out
inc
mov
jb
lret
cmpb
mov
sarl
ss
pop
scas
pop
out
lahf
mov
mov
lods
insb
xorl
scas
movsb
in
subb
clc
imul
pop
cli
xor
dec
xchg
sbb
out
mov
mov
add
jae
jbe
int3
movb
jae
push
mov
movl
mov
sbb
fwait
pop
xor
sub
in
popa
out
je
mov
insl
outsb
ret
pop
insb
lea
fisubrs
clc
adc
lods
sbb
fstps
nop
jmp
loop
outsb
mov
or
fidivrs
xor
sti
lret
mov
pop
sub
push
flds
push
mov
cmp
rclb
lahf
push
and
sub
cld
mov
psllw
push
sti
aad
mov
jae
xor
cwtl
cli
rcrw
insb
and
mov
cld
push
and
mul
adc
out
sbb
cmp
clc
push
jnp
leave
dec
add
push
mov
daa
lret
loopne
fidivl
or
push
loop
in
jmp
xor
fldl
rolb
mov
inc
push
pop
shlb
and
dec
push
cmpsl
pop
xlat
cli
pop
vmovq
ss
int3
xor
pop
loope
sub
or
mov
movsl
cmp
subb
ror
jge
sub
push
mov
adc
inc
dec
sti
scas
pop
adc
fucomp
sub
in
aad
xchg
int
fmuls
pop
imul
sbb
cli
pushf
mov
pop
daa
mov
popf
and
ret
jb
in
lcall
jae
or
and
mov
push
mov
and
scas
movsb
mov
nop
mov
push
push
aas
popf
scas
notl
mov
jmp
dec
call
or
mov
push
inc
xorl
out
in
pop
mov
jecxz
and
in
or
jg
or
xor
iret
xchg
and
or
and
aam
adc
pop
mov
cld
subb
dec
das
push
pop
and
sub
stc
sbb
and
mov
iret
data16
cmpsb
push
push
adc
aaa
push
xchg
mov
sub
dec
add
adcl
add
enter
jae
loope
pop
shlb
int
jne
push
aad
je
int3
leave
sub
and
adc
call
xchg
fsts
dec
stos
pusha
sar
pop
sbb
add
dec
xor
mov
or
ja
js
loope
insb
xchg
cltd
jp
inc
psllw
fucomi
pop
sahf
call
add
push
aas
daa
fbstp
xor
xchg
and
imul
or
in
leave
push
pop
in
out
xchg
cmpsl
xor
roll
enter
dec
pop
xor
adc
jbe
xchg
jae
mov
insb
gs
shll
mov
mov
outsl
jge
shll
xchg
scas
pop
test
sti
setne
call
push
stos
push
lods
dec
xchg
push
out
pop
dec
dec
scas
sub
jbe
dec
mov
lahf
std
sbb
mov
test
or
ficoms
stc
lcall
lods
add
aas
sub
sub
aaa
shll
lcall
pop
jmp
or
je
lds
clc
enter
mov
jg
stc
mov
jb
shrl
scas
xlat
mov
xor
sub
xor
repz
adc
mov
fdivs
push
jne
mov
flds
cwtl
ss
in
pop
add
xchg
inc
adc
sti
popf
inc
pushf
fs
mov
xchg
mov
jecxz
in
lock
push
pop
mov
add
mov
arpl
cltd
xchg
testb
cmc
xor
inc
mov
addr16
jmp
jmp
or
dec
xchg
cld
cld
pop
mov
or
mov
lret
mov
xchg
repnz
hlt
and
in
mov
stos
cmp
inc
test
fcomps
mov
sbb
jb
inc
ficomps
stc
adc
dec
jne
in
mov
lahf
pop
insl
sbb
mov
sbb
push
adc
dec
cli
clc
xchg
sub
push
je
inc
js
lock
testb
inc
cmc
test
jb
loop
xchg
dec
rclb
mov
cmpsl
add
hlt
adc
xor
cmp
sub
cmp
shll
cmp
aas
pop
jo
and
fsubl
sbb
pop
adc
sbb
or
mov
mov
aas
or
imul
subb
aad
add
adcl
imul
imul
lods
mov
shr
dec
daa
jge
cmp
cli
push
je
adc
inc
adc
dec
mov
jbe
push
add
fsin
loopne
lds
xchg
imul
jae
es
xchg
jle
cmpl
mov
cmp
xchg
pop
xchg
pop
adc
test
fiadds
popa
pop
cmpsb
inc
out
add
in
push
lods
or
pop
fistpl
insb
in
sub
cmp
clc
stc
popf
insb
loopne
add
je
subl
fimull
sbb
and
push
call
jg
push
and
sbb
movsl
xor
pop
or
lret
add
cmp
das
aaa
ljmp
sub
pop
shr
testb
cwtl
jns
imull
pop
bound
int3
xor
out
xor
es
add
lahf
xchg
add
pcmpgtw
out
mov
js
jge
dec
in
aad
sbb
mov
inc
lcall
add
adc
or
push
sti
idivb
pop
fistps
fists
ds
xchg
or
lret
sahf
loope
leave
out
jmp
and
insl
inc
jecxz
adc
lds
cmpsb
dec
mov
xor
pop
lock
xchg
sub
mov
add
icebp
mov
xor
add
jecxz
lods
pop
cmp
popf
out
cmc
ds
arpl
lcall
pop
mov
adc
scas
movl
dec
arpl
loop
dec
xor
cmp
fwait
xorl
mov
sub
orb
enter
sar
inc
mov
ss
mov
dec
sub
popa
enter
test
mov
sub
int3
or
sbb
mov
fisubs
jmp
loop
andb
loopne
rclb
loopne
mul
pop
xor
add
dec
dec
push
lods
pop
pop
adc
rorb
repnz
fs
rolb
negb
jp
out
cmp
push
mov
daa
rorb
mov
pop
fmul
leave
out
mov
cmpsl
in
negl
cmp
stc
inc
shl
mov
cltd
inc
fdivr
push
stc
testl
mov
jl
xchg
add
add
xor
or
cmp
in
add
jb
fisttps
jmp
cltd
test
xlat
add
xor
push
outsl
lret
cs
test
enter
inc
iret
or
dec
jmp
push
iret
ds
pop
call
or
lcall
xchg
clc
es
push
orl
add
xlat
ljmp
or
xchg
stos
mov
mov
data16
and
xor
repz
es
push
xor
testb
enter
mov
jnp
mov
inc
sbb
mov
sbb
movsl
sahf
sbb
fwait
adc
movsl
inc
push
cmp
push
push
jg
in
adc
sbb
cmpsb
dec
fcompl
mov
nop
mull
or
sbb
xor
mov
sub
nop
mov
fisttpll
scas
adc
cwtl
dec
mov
ret
xlat
mov
add
mov
les
imul
pop
cwtl
cwtl
sbb
in
fcompl
ret
add
rclb
dec
adc
adc
sahf
repz
pushf
xchg
pop
mov
mov
mov
xor
ret
and
pop
shrl
outsl
out
jnp
inc
add
jno
lock
ss
xchg
sbb
add
xor
mov
insb
stos
add
lahf
popf
dec
cwtl
xlat
imul
sbb
fcoml
dec
cmp
mov
stos
cs
out
imul
mov
xchg
addr16
add
mov
pop
inc
sub
pop
rorb
mov
sbb
mov
test
push
and
add
fldcw
xor
pop
mov
imul
xlat
mov
aas
aad
mov
ret
movsl
push
testb
xchg
out
shll
inc
xchg
and
jno
fmul
push
sub
fwait
repz
xchg
push
pop
mov
int
and
outsl
ljmp
lods
jb
sub
lret
movsb
xchg
push
cmpsl
rcrl
jns
jns
mov
mov
xorl
dec
incb
mov
out
shrl
aad
fwait
push
inc
leave
push
dec
std
ss
leave
xchg
test
mov
cmp
out
pavgw
pushl
in
out
jl
scas
stos
fnstenv
pop
aaa
dec
ret
sub
dec
pop
in
repnz
sub
sarl
in
mov
lods
addr16
in
movsb
aam
cmpsb
stos
scas
pop
stos
stos
scas
pop
pop
lret
push
call
xlat
push
nop
fidivl
jb
fs
inc
scas
mov
xlat
or
xor
xor
add
aas
cmp
out
inc
jo
ror
ret
test
mov
ficoml
inc
into
fs
aas
jl
mov
lods
dec
iret
ret
jp
lcall
stc
jge
or
dec
je
pop
ljmp
fdivl
xchg
push
data16
inc
inc
cmp
stos
sahf
inc
nop
fsub
mov
lret
jnp
popa
loope
int
icebp
push
mov
mov
andl
xchg
mov
sub
inc
aam
mov
daa
adc
sahf
adc
pop
push
repnz
test
dec
test
mov
pop
add
fiadds
call
push
jle
jg
fs
popa
xchg
mov
sub
mov
sti
rclb
call
adc
js
mov
insb
fcom
dec
mov
sbb
mov
ljmp
adc
repz
jmp
pusha
xchg
push
cltd
repz
cmp
xchg
mov
out
pop
bound
hlt
repnz
ror
ficompl
cli
mov
lods
sbb
in
xchg
cmpsl
arpl
negl
mov
cmp
test
sbb
testb
ja
mov
xor
pop
xchg
and
rcrl
iret
sub
pop
sbb
ljmp
call
test
mov
out
into
bound
xchg
cmp
lahf
sbb
js
cli
movsb
adc
cmp
mov
fldlg2
popa
xchg
xchg
iret
stc
adc
add
in
scas
add
add
push
and
divl
and
sub
mov
fs
clc
mov
sti
inc
add
out
sbb
lea
clc
xchg
outsl
add
shlb
xchg
fsts
mov
pop
imul
movsl
es
shrl
cmc
sbb
in
mov
pop
cwtl
rorb
adc
add
lcall
adc
mov
or
inc
jb
popf
fnstcw
jne
dec
add
mov
cmp
xchg
adc
jns
stc
cmpl
dec
fildll
ja
push
cmpsb
jnp
dec
sbb
mov
push
or
rorb
and
jno
fstpt
or
movsb
jb
and
push
jg
les
aaa
cli
jmp
lret
pop
jl
push
flds
clc
cmp
rolb
sub
mov
adc
lret
cltd
mov
sahf
enter
mov
push
int3
out
out
in
sti
sbb
jns
cld
ret
cld
inc
mov
and
or
out
mov
cld
scas
push
jl
push
mov
pushf
enter
out
ror
xchg
sub
jae
inc
pop
out
fisttps
ret
mov
or
incl
cmp
testl
dec
xorl
arpl
jge
ror
insl
in
repz
and
pop
inc
xlat
adc
push
pop
jnp
and
insl
lcall
scas
mov
add
pushl
add
jo
dec
xchg
out
dec
into
xchg
push
pop
shll
and
scas
sbb
xor
pop
lcall
add
icebp
les
fs
cmp
fldenv
aad
add
mov
and
pop
mov
fadds
add
sbb
cwtl
pop
fdivrs
jne
sub
and
or
mov
lods
pop
jle
jge
mov
cwtl
sbb
sub
dec
and
sbb
pop
and
mov
mov
mov
cmp
shrl
sbb
fcmovnb
add
test
ss
or
xor
mov
out
ret
lcall
ja
pop
loop
into
mov
divb
push
shl
faddl
mov
stc
notl
aad
adc
scas
test
pop
out
xor
and
mov
pop
fmull
dec
mov
push
sub
lahf
ja
hlt
mov
pop
or
stos
cmpsb
sbb
nop
push
negl
pop
and
cmp
xchg
punpckhdq
dec
jge
or
fnsave
popa
and
movsb
adc
mov
aam
sub
daa
cmp
insb
aam
mov
lret
lahf
dec
inc
xlat
cmp
sub
mov
jg
in
push
or
jge
lods
inc
fisttpll
mov
enter
push
mov
mov
adc
xchg
jmp
jae
add
rcll
fiadds
aam
xor
icebp
cmp
jecxz
xchg
push
dec
ja
ret
xchg
pushf
add
loopne
xchg
sub
pop
popf
imul
cld
lea
push
dec
sbb
cli
repnz
or
jge
push
xor
push
ljmp
push
xchg
cmp
stc
arpl
sub
jae
leave
cmpsb
aam
push
test
aas
stos
dec
es
sub
xchg
jg
xchg
testb
lods
mov
lods
jnp
xchg
addr16
les
inc
sub
sub
jge
xchg
in
ret
stc
ds
pushf
push
push
cmp
adc
sub
xchg
dec
ja
call
imul
shlb
sbb
and
inc
loop
push
sbb
imul
outsb
xchg
cmpsb
sub
std
stos
mov
pusha
es
aaa
imul
fdivrl
ljmp
dec
push
iret
sub
push
test
jl
test
fdivrl
mov
mov
mov
inc
add
and
mov
out
jge
pop
cmp
pop
and
push
jbe
dec
jns,pn
mov
loope
out
jle
sbb
cmp
add
mov
pop
mov
mov
imul
mov
fs
xor
mov
sub
ss
pop
scas
ja
daa
xor
rcl
ja
push
cmp
sbb
cmpb
xor
mov
ds
movsl
push
sub
idivl
mov
in
lock
sub
addr16
xor
dec
mov
dec
lret
dec
sub
in
test
dec
mov
pop
subl
ret
test
jbe
fnsave
inc
dec
outsl
popa
or
mov
dec
jne
adc
xchg
lret
mov
or
pusha
dec
inc
out
mov
cmp
push
mov
enter
stos
pushf
jmp
xchg
mov
pop
mov
rclb
mov
and
mov
inc
imul
jmp
es
cwtl
xchg
data16
test
scas
stos
lea
pop
push
loopne
aas
ret
inc
mov
ret
add
iret
add
sbb
in
jecxz
dec
hlt
aaa
gs
data16
pushf
sub
inc
dec
insb
push
enter
jecxz
cmp
mov
xor
pop
and
mov
mov
in
mov
cmpl
inc
stc
mov
insb
idivl
pop
aas
xchg
cmp
nop
ja
lea
adc
outsl
push
inc
movsb
xchg
sarb
std
data16
and
cmp
mov
mov
xchg
inc
in
aad
ret
cmp
or
iret
xchg
and
pushf
mov
aam
andb
loope
adc
push
or
dec
mov
sub
mov
mov
cli
push
xor
rcr
or
dec
mov
out
sbb
ja
stos
dec
add
mov
mov
mov
adc
fiadds
outsb
int
and
addr16
pop
inc
sti
leave
and
into
or
sti
mov
aaa
pop
dec
or
ret
test
push
ss
es
jg
pop
pop
pop
xor
ficompl
pop
lret
pop
xor
fdivrp
adc
jle
gs
push
mov
xchg
push
mov
xor
push
push
outsl
imul
sub
dec
popf
jne
xor
push
fptan
pop
daa
xor
gs
pop
movhlps
xor
in
lahf
fcom
test
push
or
mov
xchg
xor
es
flds
std
xchg
popl
jecxz,pn
mov
xchg
int3
stos
add
pop
pop
mov
pop
les
lods
jb
sahf
test
cmp
fadds
testl
in
xchg
aam
push
pusha
lods
popf
mov
push
xchg
mov
in
jg
pop
jae
mov
mov
add
mov
sub
repnz
insb
push
add
pop
push
cmc
jno
sub
mov
call
test
int3
adc
je
jbe
cmp
cmpl
insl
loopne
adc
jb
leave
in
push
xchg
cs
pop
adc
ss
rclb
ja
or
repnz
inc
pop
xchg
inc
jbe
cmpl
sbb
mov
xor
xchg
incl
lods
jecxz
xchg
push
dec
mov
rcrb
mov
scas
adc
xor
pop
or
jg,pt
inc
add
jle
std
jno
xchg
je
cli
test
test
nop
jl
sbb
xlat
jb
xor
inc
cmp
loop
out
or
bound
jbe
int3
icebp
rorb
dec
jp
inc
xchg
push
jbe
cwtl
fcoml
inc
pop
mov
icebp
in
jg
jo
movsb
push
mov
sbb
push
dec
scas
movsl
popa
outsb
adc
and
sub
jmp
push
fstpl
int3
arpl
insb
push
xchg
in
lods
mov
je
add
aam
jg
out
ret
shlb
pop
lret
xor
repz
mov
jne
adc
inc
das
push
bound
int
aas
push
icebp
mov
or
cmp
xchg
arpl
cltd
mulb
aaa
xchg
pop
or
pop
lret
stc
scas
jno
test
ss
lcall
jb
pop
xor
pop
mov
inc
test
fbld
pop
test
dec
sub
fnstenv
popa
shl
nop
mov
addb
aam
aaa
ficoms
mov
mov
iret
dec
inc
cld
je
sbb
nop
out
cmp
aam
cmp
adc
stos
iret
and
dec
and
jp
xchg
mov
jge
mov
add
in
aaa
lahf
imul
aad
jne
jl
lahf
push
mov
mov
inc
sbb
and
mov
sar
xlat
jbe
fidivs
sahf
jle
mov
xchg
or
jae
dec
pop
push
jg
mov
push
inc
pop
cmp
popf
ja
inc
push
xor
movsb
or
int
fwait
cli
or
sub
ja
xchg
or
mov
adc
xor
mov
sbb
cmp
cmp
jae
push
inc
add
mov
int3
aad
mulb
and
sahf
fsub
jle
les
shlb
ret
mov
popf
fadds
cmpsl
xchg
aas
cmc
jecxz
sbb
xchg
mov
and
mov
jg
fistl
cld
or
dec
adc
arpl
inc
push
into
add
es
shl
aad
mov
lods
push
cmp
mov
push
push
cmp
mov
in
outsl
enter
xchg
gs
femms
es
mov
lods
mov
shlb
sub
pop
testb
shlb
sub
jns
mov
push
jno
ds
cld
fnsave
call
push
and
cmc
xlat
movsb
sahf
lods
sub
push
enter
rorl
out
loop
insl
hlt
repnz
aaa
jae
push
lret
leave
fnstsw
xchg
arpl
outsl
pop
cmp
or
add
test
and
data16
cmpsl
push
loop
mov
jp
pushf
cmc
incl
jo
push
nop
xor
mov
sbb
mov
sub
push
and
mov
sub
lret
std
push
dec
imul
in
mov
sbb
xor
lret
dec
stos
loope
jmp
jbe
fst
into
imul
insb
and
loope
push
jne
pop
movsb
sete
mov
pop
les
jl
jae
xor
jmp
outsb
cmp
decl
test
pusha
pop
or
lea
pushf
pop
negb
je
push
push
fidivl
outsl
rolb
sarl
into
iret
fwait
adc
add
shr
and
push
adc
lds
mov
cmpsb
das
pop
cmp
cmp
xor
in
dec
insb
aam
subl
fiaddl
cmp
mov
adc
int3
xor
adc
in
xchg
iret
mov
pusha
ja
xor
aas
mov
ss
mov
sbb
push
faddl
dec
dec
daa
push
mov
loop
aad
sub
ss
rcrl
inc
pusha
adc
fcoml
add
mov
stos
xacquire
jns
jno
popa
scas
test
mov
inc
cmpsl
pop
into
adc
mov
mov
cmpsl
int3
fsubrl
into
ja
rcr
cli
cmp
bound
sbbl
xor
sub
jecxz
mov
cmp
inc
out
xor
jg
lods
push
lret
sub
test
fcoms
outsl
arpl
mov
fdivs
xor
pop
fistl
jg
pop
clc
arpl
test
cmpsl
push
arpl
out
xor
pop
adc
cmpsb
cmp
xchg
xchg
fmul
inc
cs
stos
pop
push
inc
push
pop
inc
lahf
or
pop
add
and
lahf
mov
rol
das
insl
adc
sub
fistl
test
mov
mov
adc
mov
pop
shll
and
lretw
xchg
pop
sar
xor
test
pusha
and
mov
inc
mov
cmp
fmull
cwtl
fnstcw
popf
repnz
dec
push
or
sbb
dec
lea
mov
rolb
push
mov
clc
cmp
pop
cmp
mov
fwait
lea
outsb
jp
cld
jmp
ljmp
adc
adc
push
lock
push
mov
xlat
test
and
sbbb
sbb
and
xlat
sbb
mov
push
push
data16
add
cltd
add
ficompl
xchg
sahf
push
jle
ds
sub
push
sbb
movsl
aam
js
xchg
or
fmulp
xchg
lods
ljmp
fisttps
pop
cli
out
and
cmpsb
insb
xor
mov
rclb
or
scas
mov
and
sbb
lcall
ret
lds
add
je
in
add
es
adc
cmp
mov
push
js
add
add
aaa
in
gs
ror
fimuls
lret
dec
dec
stc
cmpsb
sbb
je
shrb
or
xlat
pop
xor
adc
cwtl
inc
pop
inc
xor
stos
fdivl
push
jae
push
inc
sti
xor
sbb
pop
aas
mov
xchg
or
stos
loopne
xor
testb
xchg
pop
push
scas
popf
sub
mov
into
push
es
sub
fcompl
mov
or
out
dec
in
fsubs
or
or
call
popf
insl
cmpl
pop
sub
cmp
shll
push
pop
jmp
push
or
push
fcoms
sbb
fwait
shl
outsb
stos
out
je
fsubs
lods
arpl
sbb
rolb
pop
mov
imul
xchg
insl
dec
adc
js
push
cmp
dec
fistps
push
js
dec
fistpll
leave
mov
leave
movsb
add
lods
mulb
and
jo
nop
sub
add
lds
mov
fisttpl
and
push
js
mov
push
jp
fdivrs
sti
cld
aas
and
ret
mov
mov
clc
movsb
push
sub
lds
xor
fs
ret
insb
lods
addl
lock
sub
repnz
pop
mov
jl
add
pop
mov
mov
mov
fwait
in
in
dec
adc
jg
cmpb
cmp
push
or
xchg
into
orb
icebp
add
lds
sbb
iret
sbb
cmp
dec
xchg
adc
add
sub
dec
aam
inc
pop
or
andl
jo
jl
les
jno
add
js
stos
mov
jbe
repz
adc
mov
adc
jmp
les
fwait
push
loop
mov
mov
pop
nop
sbb
push
adc
hlt
aaa
popw
es
stos
rclb
aam
push
cmp
movsl
mov
rep
xor
incb
shlb
daa
cmpb
sub
xor
out
lods
xor
xor
data16
int
dec
hlt
sub
insl
addl
pop
loopne
dec
mov
sbb
shrl
cmp
pop
cmpb
stos
cmp
pop
arpl
sub
push
mov
push
daa
fdivs
sbb
ja
mov
mov
mov
sahf
ds
std
mov
xor
xor
pop
loope
lock
arpl
and
in
mov
sarl
lahf
mov
push
fstl
repnz
in
adc
pop
push
sub
jecxz
fcmovu
xchg
dec
fldl
lock
push
cmc
mov
dec
sbb
or
pop
sbb
jbe
das
das
leave
arpl
pcmpgtd
xorb
mov
scas
into
cmpsl
neg
addl
jmp
mov
pop
mov
mov
sbb
xchg
xor
gs
lods
mov
sbb
add
mov
fiadds
sub
jne
adc
adc
and
jg
or
lods
mov
mov
leave
push
sub
jmp
jo
inc
test
push
jbe
jmp
popa
inc
dec
mov
cmc
mov
outsl
xchg
out
out
popf
fnstcw
dec
dec
push
fidivrs
dec
orb
ja
in
js
fcomi
shlb
es
lods
xor
cmp
and
jnp
add
arpl
cmp
push
dec
in
lea
int3
iret
or
xor
adc
and
out
mov
dec
sub
xchg
ja
xlat
mov
imul
lcall
xchg
sbb
push
call
cmpsb
fbstp
movsl
outsb
scas
mov
nop
xchg
imul
jmp
jae
out
mov
out
cltd
sbb
xchg
imul
jne
fimuls
mov
dec
outsl
aam
dec
test
shrb
xchg
iret
andb
dec
das
jg
mov
or
and
jge
xor
dec
out
movsb
loopne
insl
aam
mov
decb
repz
lcall
and
cmc
movsl
push
sub
inc
jl
mov
out
aad
or
inc
int
or
jmp
cmp
add
ret
inc
adc
ficomps
cltd
cltd
popa
inc
cltd
xor
push
ret
sbbl
cmp
adc
sbb
ja
pop
mov
mov
sahf
cmp
mov
pop
push
int
shrl
sbb
sahf
scas
adc
and
mov
fucomip
mov
dec
addl
dec
cmp
jmp
cmpsb
jo
or
lea
lret
and
fcomps
adc
sarl
jg
divl
sub
loop
xchg
sbb
xor
push
ds
nop
cmpsb
sbb
fistps
and
jno
lea
xor
or
scas
jle
inc
mov
aam
sub
add
cmp
xlat
inc
or
mov
std
xor
ret
mov
in
sub
pop
hlt
daa
xor
fcoml
pushl
lahf
dec
xor
arpl
sbb
mov
mov
pop
or
rcll
xchg
js
sbb
out
mov
loopne
fstpl
shlb
cmpsl
lcall
cs
mov
mov
jne
arpl
sub
and
push
iret
arpl
test
pop
insl
and
adc
dec
scas
rclb
sbb
cmp
lods
pop
and
loop
fnstcw
pop
dec
push
in
sub
adc
test
addr16
lret
pop
loop
cmp
aad
lds
mov
in
dec
arpl
push
mov
xor
adc
out
shrl
outsb
test
cmp
mov
push
lcall
insb
lcall
aad
inc
jnp
lock
sub
pop
int3
imul
sarl
das
add
lods
mov
pop
sub
mov
lret
lds
mov
sub
add
sbb
pop
clc
test
andl
out
and
mov
fisubrl
enter
icebp
adc
sub
int
jo
jecxz
or
das
daa
or
push
add
mov
pop
ljmp
xchg
test
rcrl
xlat
and
movsb
aaa
adc
cmp
mov
into
test
fwait
adc
hlt
xor
sub
or
jo
xchg
out
mov
adc
mov
jp
fldl
loopne
sub
add
cmpsb
leave
mov
insl
or
push
mov
and
xor
es
pop
mov
pop
ficoml
adc
sub
push
xor
shr
jae
mov
jg
mov
movsl
sarl
leave
adc
mov
cmp
jmp
cli
sbb
mov
lods
jae
repz
mov
add
std
shl
hlt
cmp
pop
mov
inc
dec
aas
and
jnp
inc
stc
mov
mov
and
ss
sub
pop
fwait
addb
jle
out
sbb
aas
sub
shlb
mov
jecxz
dec
jle
scas
cmp
mov
pop
cs
je
in
xchg
pop
lock
fstpt
addr16
clc
mov
dec
jnp
sbb
cmpsl
mov
cmp
inc
aad
lock
fbstp
jne
sbb
dec
test
lret
lahf
inc
cwtl
xlat
repnz
test
adc
ljmp
add
push
sub
movntq
addb
mov
dec
mov
jl
xor
jo
int3
add
ljmp
test
rcrb
inc
loopne
jo
jnp
jge
jne
in
jb
in
jno
imul
push
lahf
push
movl
fiadds
outsb
cltd
lahf
test
iret
adc
xor
rolb
xchg
push
add
and
es
in
pushf
mov
je
xor
fldl
and
cmp
or
fdivrp
scas
mov
rclb
test
mov
jnp
jbe
movsl
mov
cli
ljmp
push
jg
xchg
imul
sahf
sbb
call
gs
rclb
push
mov
mov
add
stc
shrb
mov
je
hlt
dec
frstor
pop
fsts
adc
sbb
mov
daa
enter
adc
mov
or
or
sub
jb
and
popa
pop
fstpt
mov
dec
mov
cmpsb
jae
inc
xchg
push
mov
xor
pop
cmpb
nop
repz
xor
stos
mov
adc
jmp
fsubr
inc
dec
je
insl
ljmp
add
pop
pop
cmpsl
xchg
sub
mov
imull
in
icebp
pop
out
ficomps
xlat
push
sbb
or
pop
les
xor
push
xchg
mov
cmp
add
xor
push
mov
into
iret
sub
icebp
sub
loop
mov
jmp
pop
or
dec
xor
jne
insl
mov
xchg
push
cli
mov
adc
std
sbb
scas
dec
or
mov
arpl
add
xchg
push
mov
inc
or
jge
push
mov
lret
insb
and
cmp
faddl
insl
aaa
push
test
mov
scas
test
das
sub
dec
sub
pop
ret
test
jb
push
pusha
pop
loopne
repnz
sarl
imul
sti
and
ds
or
lods
call
cli
fwait
in
addr16
cmp
addr16
mov
push
cs
lods
repz
out
or
fincstp
mov
andl
popa
push
push
sub
loopne
mov
xchg
or
movsl
inc
mov
test
add
cwtl
jmp
sub
xchg
mov
mov
fidivs
mov
sub
pop
outsl
popf
pop
pop
repnz
ret
xchg
push
jp
lcall
stc
fstpt
and
or
lock
xchg
add
dec
rorl
lock
pop
aam
pop
lret
test
out
or
xchg
ret
adcb
fists
jb
or
movsb
iret
xchg
out
movsl
mov
inc
and
push
mov
add
dec
aaa
mov
and
dec
pop
jge
sti
push
lahf
xor
pop
pop
push
mov
mov
mov
std
orl
adc
xor
sub
stos
in
mov
add
push
sbb
xor
enter
test
mov
out
cltd
je
jmp
mov
lods
pop
nop
or
adc
hlt
outsb
dec
sbb
push
inc
fninit
cli
add
test
push
rol
stos
lock
das
and
loope
addr16
pop
sub
fdivrl
scas
aas
xor
idivb
je
stos
push
insb
and
inc
in
or
aaa
add
adc
bsr
cmp
jb
fs
jae
sub
stc
and
xchg
mov
pop
les
rcrl
add
data16
dec
rclb
sbb
xchg
cmp
popf
aaa
shll
mov
jno
iret
mov
lret
out
in
cmp
xchg
out
int3
cltd
inc
aas
imul
js
or
cmp
incl
popf
pop
inc
cmp
add
add
xchg
mov
or
mov
nop
js
test
pop
inc
jg
sbb
xchg
mov
adc
out
sbb
xchg
dec
loope
mov
addr16
mov
sbb
out
push
out
jb
dec
xchg
sub
or
xchg
and
add
ljmp
or
out
popf
push
dec
outsb
fdivrl
punpckldq
pop
jnp
and
sub
or
adcb
stos
inc
fcmovne
lods
call
mov
out
pop
lret
dec
out
push
mov
mov
xchg
adc
or
inc
popa
mov
adc
aas
xor
jae
xlat
arpl
paddsw
xor
jg
shlb
jae
outsl
aam
icebp
in
mov
jp
pusha
rclb
imull
in
daa
jne
shrl
je
mov
lds
pop
jne
mov
cwtl
leave
mov
fsts
fwait
dec
push
aaa
rcll
out
imul
jg
xor
jmp
cwtl
or
lcall
loopne
pop
mov
in
jo
sub
add
pop
push
mov
add
mov
call
xor
mov
aas
jmp
aas
sbb
mov
stos
inc
xlat
mov
scas
mov
lret
lock
aaa
mov
cmp
sbb
negl
sub
and
fucomi
iret
or
xchg
cmp
sbb
pop
xor
push
push
out
aad
addr16
stc
dec
push
ja
mov
mov
enter
jg
stos
pop
adc
mov
lea
int3
push
mov
insl
pop
ja
iret
add
test
cwtl
pop
out
push
lods
and
mov
imul
pop
cld
repnz
mov
or
or
sbb
and
xchg
xchg
sbb
mov
sahf
int
insb
adc
dec
scas
vsubps
aas
push
fwait
push
ljmp
mov
jne
inc
sub
and
mov
mov
xchg
adc
js
ret
inc
pop
jp
fwait
jmp
push
xchg
rclb
jecxz
pop
mov
jo
aad
ds
lods
mov
jnp
pop
or
fwait
aam
or
sbb
jne
pop
lods
gs
cmp
les
inc
push
ja
mov
mov
cmp
mov
jg
out
in
sub
push
xor
loope
imul
mov
aaa
jae
pop
add
aam
sbb
pop
sbb
cmpsl
jecxz
cmp
cs
jge
stc
sub
dec
sub
popa
push
pop
xor
lock
push
jbe
lret
sub
jge
xor
or
xchg
dec
lret
out
mov
imul
dec
test
sbb
fmuls
fadds
hlt
sbb
ja
push
inc
or
ret
inc
mov
mov
lcall
lods
aam
mov
test
ljmp
adc
out
mov
push
outsl
dec
sub
mov
mov
xor
adc
leave
stos
and
dec
into
pop
push
les
mov
fsubl
aam
gs
scas
mov
dec
fcomps
jmp
mov
fistl
add
or
cmc
bt
insl
inc
jo
xchg
in
push
push
cmc
xchg
repz
push
das
lods
xchg
add
mov
or
popf
test
mov
lock
ljmp
jae
pop
andb
xchg
mov
fimuls
nop
mov
or
mov
addr16
dec
ret
mov
jg
fmulp
aam
sub
jp
inc
jmp
sub
xlat
mov
xlat
andb
insb
data16
rcll
push
sub
sbb
dec
fnsave
movhlps
xlat
xor
mulb
lcall
adc
rorb
int3
or
add
lods
into
mov
push
sbb
fstpl
push
xchg
sub
rorb
enter
xor
pop
imul
jnp
loop
ljmp
inc
std
cltd
and
lds
fisttpl
adc
inc
adc
movsl
orl
in
xor
lods
ja
cmp
fadd
mov
inc
insb
or
insb
jp
inc
dec
add
lret
or
ja
xchg
cmp
std
lcall
lcall
pop
mov
adcl
test
inc
lsl
subl
fistpl
std
pop
imul
jmp
xchg
out
jns
mov
arpl
aas
xchg
decb
or
and
cmp
fnstsw
jno,pn
jecxz
nop
fs
insl
inc
aad
sub
add
imul
gs
repnz
lods
mov
sbb
sbb
fildll
dec
pop
adc
test
add
pushf
cmp
in
push
xchg
cli
add
adc
add
cmp
sbbl
int3
pop
ss
mov
lret
mov
mov
dec
mov
pop
jno
fbstp
or
sub
xlat
scas
pop
cs
fistl
in
in
loop
adc
adc
lret
jb
push
in
sbb
adcl
add
mov
or
sbb
divl
in
iret
fistl
outsb
testb
push
pop
sbbl
je
dec
pop
mov
push
mov
pop
dec
add
adc
rcrb
fnstcw
pop
xchg
roll
dec
pop
popf
sub
push
popf
das
repnz
outsl
or
mov
je
and
lods
psrlq
cmp
mov
fs
mov
xlat
lock
add
push
jp
fs
xchg
mov
mov
jl
cmpsb
sub
stos
cmpsl
or
shlb
jb
and
adc
push
rcrl
xchg
mov
xchg
mov
mov
addr16
clc
fidivs
pop
mov
inc
mov
lahf
jle,pt
jmp
push
sahf
imul
or
loop
into
adc
cmp
jge
int
loop
dec
rcll
and
lds
pop
rcl
dec
cmp
sub
aaa
mov
pushl
jecxz
enter
test
not
inc
xor
sub
xchg
stc
cmp
addl
jb
xor
cli
stc
sbb
scas
pop
js
sbbl
push
mov
push
mov
pop
dec
xor
popa
dec
mov
sub
test
cmp
and
jns
push
dec
mov
pop
mov
fisubs
mov
pop
into
test
mov
push
clc
stos
push
mov
sub
or
or
insb
jnp
inc
call
jmp
sti
push
add
mov
pop
push
pop
dec
add
inc
cld
push
pop
jnp
sub
sahf
aad
pop
jge
bound
imul
sub
adc
nop
into
cmpsl
sub
cmpsl
data16
add
adc
xor
pop
inc
loop
imul
test
fcompl
push
mov
jo
mov
stos
in
dec
cmp
imulb
cmp
sub
es
aaa
mov
std
stc
jl
mov
jb
dec
hlt
pop
mov
push
scas
inc
cmp
shl
fistl
divb
sti
bound
pop
push
movsb
ds
scas
xor
lret
cs
lods
mov
sbb
add
mov
int
fisubl
arpl
div
insl
mov
sub
aaa
push
push
stos
jmp
push
pop
or
nop
cmovge
push
mov
jnp
xor
sub
adc
lods
cmp
test
mov
mov
mov
inc
out
inc
mov
sub
mov
xchg
scas
mov
dec
rol
mov
xor
scas
nop
push
mov
iret
sbb
dec
ror
add
jge
dec
movsb
rorb
fdivl
pop
rorb
int3
daa
push
cld
je
mov
lahf
sbb
mov
loope
daa
xor
test
std
adc
push
loopne
xchg
xchg
xor
dec
fidivrl
or
popf
jo
jo
push
or
loop
dec
sub
hlt
cmpsl
arpl
cli
rcrb
dec
xchg
shll
int
mov
fucomi
insl
mov
lahf
pop
jae
sub
sub
out
das
jno
aas
push
inc
jns
pop
inc
dec
jnp
lods
sbb
unpckhps
mov
fsubp
jae
xor
out
dec
call
cltd
lock
pop
cltd
inc
xchg
xor
cltd
dec
add
or
inc
xchg
lret
jae
cli
mov
dec
push
sti
sbb
xchg
out
das
push
popf
pushf
or
es
cs
pop
pop
xchg
pushw
sbb
cmp
mov
dec
adc
lods
lods
mov
xchg
mov
mov
shrb
shrl
pop
mov
cmp
stc
or
imul
lods
ja
adc
xchg
or
cmpsb
xor
mov
jae
adc
int
call
or
mov
push
rorl
hlt
push
fidivl
mov
repnz
stos
outsl
cmp
sbb
and
nop
mov
xchg
rcrl
scas
out
mov
sbb
or
and
stc
repnz
adc
cli
push
xchg
jle
pop
movsb
int3
jnp
filds
jmp
fwait
sti
je
and
xchg
push
adc
push
mov
jecxz
clc
fldenv
adc
jmp
test
or
mov
aas
push
je
cmp
pop
sti
insl
dec
pop
ret
mov
xchg
cmpsb
out
fs
push
fldenv
cmp
sub
gs
xchg
or
outsl
adc
xor
xchg
data16
add
jecxz
pop
mov
dec
lods
cmc
into
inc
loope
leave
imul
mov
sub
inc
sub
je
adc
mov
into
sub
pop
inc
dec
out
sub
dec
mov
xchg
sbb
fs
mov
lods
sub
dec
pop
push
sbb
sub
aam
or
ficoms
cmp
cmp
sbb
or
lcall
inc
cmp
dec
sub
out
mov
movlps
test
fwait
arpl
movsl
pop
xchg
xchg
xchg
jge
jmp
std
shrb
repz
adc
xor
movsb
sub
ds
insl
aaa
jle
pop
sti
cmp
aad
clc
leave
and
jae
sbb
loopne
rcrl
xor
mov
imul
push
test
push
push
mov
insb
xor
jmp
xchg
and
cli
jg
int
lcall
sbb
outsb
movb
dec
mov
rclb
pop
lahf
test
push
push
cmc
jg
add
ljmp
or
mov
lahf
pop
mov
sbbl
in
cmp
or
mov
sbb
sahf
jo
and
mov
cmp
push
cs
jnp
mov
out
inc
push
cmp
aaa
pusha
ja
or
xchg
int
loop
data16
rcr
mov
bnd
xchg
and
clc
scas
loopew
cmpsl
xchg
lret
or
xor
flds
pop
loope
cmp
mov
cli
adc
cltd
xchg
sub
inc
sbb
xor
cmp
jg
dec
in
ss
gs
xor
mov
mov
mov
dec
imul
xor
inc
push
lds
mov
shl
je
lahf
aaa
das
mov
in
popf
scas
mov
lock
mov
adc
out
cmp
pop
mov
jmp
hlt
call
inc
iret
mov
loope
fs
outsb
test
push
rcll
rolb
in
cmp
sub
iret
addb
popf
mov
stos
or
push
sub
das
dec
test
jg
adcl
sub
jl
rcll
insb
repnz
mov
cmpb
or
add
add
fcoms
cmc
jmp
push
filds
faddl
outsl
xchg
xchg
out
rcll
cwtl
or
popf
jb
iret
or
xor
mov
and
or
pusha
in
dec
aaa
pop
repz
pop
icebp
dec
mov
test
pusha
int
loope
test
mov
lret
ljmp
les
and
xchg
pop
dec
daa
ja
data16
push
test
xor
xlat
mov
and
call
adc
xor
inc
stos
cld
movsl
jae
je
scas
push
lret
sub
nop
icebp
mov
mov
test
xchg
outsb
mov
and
daa
fnstenv
shll
movsb
cs
and
xor
test
sbb
vmovaps
add
jecxz
mov
mov
dec
shll
jo
cwtl
adc
add
sub
clc
push
fs
sbbl
clc
xchg
cmpsl
popf
push
cld
inc
or
repz
jle
xor
adc
mov
loopne
cmp
jg
aad
mov
fisttps
jecxz
jg
scas
gs
inc
sub
fsubs
into
and
inc
mov
xlat
mov
popa
scas
sbb
test
and
jp
popaw
push
cmp
ret
cwtl
data16
push
jo
lds
pop
adc
pop
inc
mov
push
or
rcll
dec
and
scas
cmp
xor
jb
sub
pop
mov
mov
xorb
sub
pop
sbbl
jae
dec
add
aam
dec
sti
sub
fstl
decb
data16
test
mov
mov
xchg
push
inc
mov
dec
push
movsb
dec
aas
jb
pop
sbb
mov
dec
fisubrs
add
imul
loop
or
cmp
int3
dec
xchg
pop
xor
fs
push
das
or
repz
push
test
in
mov
cmpsb
and
sub
roll
push
test
sbb
call
mov
mov
inc
subl
push
icebp
je
push
xor
jecxz
dec
mov
xlat
jae
dec
les
lahf
pop
in
inc
mov
scas
ja
sub
or
inc
scas
jmp
pop
sahf
mov
and
xchg
bound
in
xchg
mov
xchg
or
aad
sahf
scas
clc
sub
lds
sub
fisubs
out
orb
shl
loop
xchg
push
jp
insb
dec
loope
sti
pusha
sbbb
lea
or
sbb
loopne
repnz
fsubrs
and
mov
test
mov
fldenv
mov
lea
sub
dec
jle
fwait
xor
xchg
test
fwait
jle
js
xor
sbb
leave
fisubl
mov
mov
inc
pop
dec
push
inc
xchg
pop
sub
lahf
inc
decl
les
pop
into
rclb
cmp
rcrl
mov
and
mov
addr16
fcoml
sbb
inc
mov
popa
lods
rol
jl
gs
test
or
shr
fs
mov
inc
test
iret
xchg
push
xchg
fsubrs
into
pop
mov
dec
rep
repnz
push
scas
insl
fcmovnbe
arpl
jns
in
push
notb
aaa
ficomps
test
test
xchg
sbb
sbb
dec
or
test
inc
xor
pop
and
and
lock
insl
sbb
sub
mov
in
out
sub
push
jl
aam
mov
xchg
stos
mov
cld
ret
popl
movsl
cli
cmpsl
dec
stos
cmpsb
cli
cmpsb
mov
add
adc
add
cmp
or
inc
stos
les
dec
lcall
pushf
fcoms
rcrb
mov
sbb
inc
in
insb
cmc
lret
xor
test
nop
leave
push
movsl
ret
adc
fldl
call
jo
cmp
testl
sub
dec
dec
inc
jne
cwtl
cltd
in
pop
aas
les
loopne
xlat
lret
sbb
lret
outsb
sbb
rcrl
cmp
mov
fsubs
push
in
repz
sub
in
mov
jle
movsl
xlat
loope
test
push
and
fiaddl
roll
lea
mov
stos
and
cltd
push
lea
push
addr16
data16
push
mov
inc
xor
bound
sub
popf
dec
dec
mov
push
mov
inc
push
int3
xor
push
pop
xchg
es
loopne
dec
in
dec
push
xchg
mov
sub
mov
into
pop
sub
adc
mov
xlat
insl
int3
pop
aas
and
mov
mov
sbb
mov
imull
xchg
or
andl
sbb
pop
xchg
xchg
fdivrl
pushf
ljmp
hlt
pusha
fistpll
sti
cmp
leave
or
insb
enter
pushf
fadds
ret
jbe
test
jl
push
dec
sti
sti
cmpsb
movl
inc
aam
cli
fs
pop
jg
pop
adc
cltd
mov
mov
and
cld
cmp
xor
and
popf
inc
xchg
stc
test
jg
in
push
xchg
push
or
xchg
mov
jle
push
mov
dec
loop
fcompl
sub
cmp
pop
das
cmpsb
jp
leave
in
sbb
dec
jno
sbb
cmp
mov
dec
dec
repnz
jns
iret
xor
push
mov
rorl
pop
lods
or
jmp
jge
xchg
sub
lahf
xchg
push
loopne
xlat
lcall
enter
xchg
cmpb
daa
fmul
inc
mov
das
enter
sub
push
cwtl
iret
std
push
lods
xchg
and
and
mov
mov
loop
jg
or
pop
test
dec
sub
or
fptan
addr16
scas
loopne
out
cmp
pop
inc
sbb
mov
mov
pop
push
inc
cmp
dec
add
jno
sub
mov
adc
jge
and
inc
mov
loop
add
xor
add
and
mov
out
jo
add
jae
ret
inc
fdivs
jnp
aaa
into
icebp
xchg
mov
jge
aad
repz
stc
ret
sbb
movb
adc
adc
ss
mov
decl
mov
xchg
push
idivb
push
insl
sbb
jmp
fsubrs
pop
stos
mov
push
xchg
dec
push
add
fcoml
jle
jl
iret
pop
les
mov
je
testl
xor
and
arpl
cli
pminsw
nop
cmc
ja
sahf
and
fdivrl
test
mov
lods
loop
sub
push
lds
cmc
cmpsb
jmp
mov
movsb
inc
or
cmpl
cmpsl
cmpsl
lahf
pop
cmpsb
lcall
mov
add
je
std
outsl
xchg
or
loop
addr16
adc
pop
mov
xchg
adc
pushf
gs
inc
cltd
push
xor
mov
add
add
or
jb
xchg
add
inc
in
cmpsl
adc
dec
cmpsl
dec
or
loope
sti
jns
aaa
xchg
popf
shl
adc
fs
out
pop
pop
mov
sbb
add
jbe
cmp
pop
xchg
negl
mov
adc
sub
pop
and
dec
pusha
std
lret
pop
push
das
out
xor
push
xchg
ret
adc
jge
jae
sub
cmp
cmp
loopne
mov
lret
cmp
cwtl
mov
jo
imull
lcall
es
enter
rorl
add
inc
mov
imulb
or
inc
in
adcb
aas
and
jle
nop
inc
jne
aas
or
jecxz
push
add
jb
xchg
sub
mov
adc
cmp
aas
mov
inc
lock
dec
adc
cmpsb
in
ljmp
lock
or
cmp
rcll
gs
imul
lcall
sbb
js
out
test
fwait
push
mov
sbb
fdivr
xchg
rcrb
xlat
nop
adc
rcll
mov
movsb
jbe
mov
aad
mov
rolb
cmp
pop
sti
mov
xor
mov
bound
stc
lds
xchg
push
mov
pop
fldcw
daa
dec
dec
mov
cmpsb
sti
stos
and
sub
adc
adc
outsl
mov
sbb
xorb
jecxz
popa
lahf
add
lcall
ret
xor
imul
fidivs
fwait
iret
sahf
sub
call
adc
test
ljmp
mov
jbe
cwtl
outsb
push
mov
pop
outsb
jp
call
cld
pop
outsb
dec
fs
in
and
xor
loopne
xchg
push
mov
jp
or
loopne
mov
aas
mov
aaa
mov
movsl
adc
mov
aad
rcrb
or
adc
shrb
mov
repz
xor
pop
mov
int3
call
lret
inc
inc
jmp
cmc
xor
loope
aam
flds
outsb
xor
imul
push
jne
inc
popa
psubusb
fisttpll
cmc
cmp
dec
iret
rcrl
inc
das
xchg
mov
mov
enter
test
mov
cmp
fwait
xor
mov
jecxz
aas
pop
push
adc
sahf
mov
pop
imul
aaa
mov
sbb
xor
jge
push
aad
out
add
mov
jl
cmp
dec
pushf
outsl
rcll
cld
sahf
xchg
adc
sti
fimuls
add
sub
push
rolb
shlb
xor
shll
pop
pushl
cmc
push
adc
push
mov
sbb
pop
and
cwtl
rcrb
jno
xchg
cmpl
add
orl
addr16
outsl
and
sarb
sahf
push
inc
or
fsubl
sub
inc
daa
clc
jne
sarl
dec
out
cmpsb
popf
sbb
push
test
push
std
ljmp
adc
imul
sub
imul
inc
das
imul
dec
rcl
je
bound
fnstenv
push
test
out
sbb
or
lret
jmp
fsubrl
ret
jmp
ret
scas
int3
lock
jae
sub
test
push
fcmovnu
rcrb
shrl
jp
popa
xchg
mov
cmp
sbb
or
jp
adcl
push
mov
iret
and
jns
pop
and
sarl
ljmp
and
inc
sahf
fchs
jns
inc
fisttpll
inc
sub
mov
loope
sbb
into
pop
push
inc
fs
xchg
mov
sbb
test
jge
and
dec
mov
pop
mov
int3
pop
inc
jle
popa
test
mov
inc
lock
cmpsl
int3
mov
xchg
pop
sbb
jl
mov
add
test
in
sbb
repnz
sbb
mov
shlb
jmp
lea
in
xchg
out
shll
xchg
shrl
xchg
imul
sub
sahf
daa
adc
add
mov
fists
icebp
mov
mov
push
xor
xchg
jl
scas
push
pop
int3
inc
mov
or
mov
sti
dec
dec
pop
test
mov
adc
and
pop
mov
pop
or
jns
push
jnp
push
fnstsw
sbb
fistpl
jne
lcall
jmp
pop
lcall
xor
xchg
adc
push
mov
je
cmpb
xor
and
shlb
cmp
shll
lea
nop
pusha
dec
test
stc
add
dec
mov
ficoms
xchg
or
push
pop
aad
dec
push
pop
shll
lcall
sbb
add
cmpsb
les
add
mov
into
adc
push
andb
adc
push
pop
in
scas
hlt
mov
addb
mov
outsl
xor
dec
and
pusha
adc
mov
sub
sub
jbe
mov
test
xchg
popf
int
push
mov
dec
jae
add
adc
mov
sub
fucomip
mov
scas
mov
subb
mov
outsb
mov
dec
cmp
faddl
rorl
sti
adc
in
push
mov
ficoms
pushw
popf
sub
mov
ljmp
jnp
jl
or
clc
stc
cmp
mov
jo
inc
jecxz
add
cmp
sbb
cmp
xchg
push
fcomip
mov
inc
sub
pop
rcl
mov
dec
mov
ret
mov
insl
loopne
das
fstpt
test
int
scas
out
pop
or
shlb
sub
mov
popa
fs
jmp
xchg
inc
iret
leave
mov
movsb
lods
xchg
mov
sbb
call
loopne
icebp
jb
push
adc
xchg
fsubrs
ja
pop
and
push
jne
add
pop
push
add
jbe
pop
and
inc
lods
pop
jbe
mov
stos
idivb
add
aas
lea
push
xchg
cltd
adc
popa
fcompl
jecxz
or
sub
jb
outsb
pop
push
jge
ja
cmp
mov
in
movups
cmp
xor
iret
pop
into
mov
push
ja
jo
jp
cmp
push
add
out
add
or
mov
mov
rcrb
fwait
imul
mov
or
scas
pop
mov
sbb
scas
lcall
add
dec
xchg
cmp
pop
pop
cwtl
dec
negl
xor
pusha
int3
xor
or
fxch
into
push
fwait
stos
movsb
push
jecxz
lds
or
ret
aad
sbb
gs
loopne
ja
adc
ljmp
in
pop
adc
xchg
cli
outsb
dec
push
fisttpll
push
pop
and
int3
or
pop
mov
xor
enter
jmp
add
mov
xchg
loop
and
push
scas
stos
add
pop
test
in
jge
lds
je
in
fstps
xchg
mov
cmp
push
adc
mov
mov
pmaddwd
inc
sahf
pusha
xorb
add
je
into
int3
mov
ret
jle
inc
in
push
mov
aaa
lret
cmp
flds
fcompl
mov
sarb
or
mov
xor
jle,pn
insb
fs
sbb
xchg
call
ja
cmpsb
push
mov
fsubl
push
popa
les
mov
xor
cld
xchg
mov
arpl
fmuls
push
dec
test
fdivs
push
nop
loop
hlt
pop
hlt
mov
inc
js
cmpsl
aam
or
fwait
lcall
cmp
push
ja
mov
xchg
pop
stc
cmpsl
rep
fcmovu
sbb
test
ds
les
pop
lock
and
mov
je
aad
sbb
ljmp
in
subl
sbb
jmp
sub
add
shlb
nop
ss
pop
cld
mov
jp
sub
lea
lcall
and
mov
jp
push
loopne
loope
cwtl
imul
imul
cmp
stc
je
out
lret
dec
pop
jmp
or
enter
hlt
jl
dec
es
fstpt
repz
ja
or
sbb
mov
lahf
and
test
mov
mov
inc
pop
xchg
mov
iret
push
push
xchg
stos
or
loop
lods
mov
outsb
xchg
xor
xchg
ffreep
cmp
dec
push
pop
ret
pop
mov
dec
insl
call
push
sbb
pop
cmp
xor
mov
push
add
jnp
jp
pop
pop
add
mov
push
clc
mov
leave
xlat
ret
pop
pop
cltd
fcomps
mov
sbb
lock
movsl
lret
fdivrl
dec
test
icebp
pop
push
lods
ds
or
out
mov
repz
push
sahf
popa
lock
push
or
nop
aam
cmp
pop
shrl
scas
mov
push
xchg
cmp
adc
lret
in
and
jmp
gs
adc
data16
subb
mov
dec
daa
dec
lret
mov
xor
orb
push
pop
xlat
adc
jnp
cmp
pusha
cli
pop
rclw
xchg
push
fstl
or
lods
mov
dec
pusha
sahf
pushf
js
dec
xor
jecxz
lds
lret
stc
jge
rorl
cmc
xchg
test
imul
movl
xchg
lret
inc
xorb
je
repz
or
out
push
xor
pusha
test
cmp
cmpsb
push
mov
mov
sub
dec
jo
je
dec
cltd
cmp
mov
fnsave
cmpb
jmp
fwait
pop
gs
data16
inc
and
das
enter
cmc
jl
jbe
pushl
xor
mov
jbe
inc
push
fsubs
rorl
fidivl
leave
sub
loopne
sub
jg
push
jl
frstor
pop
addr16
rclb
sub
xor
xchg
mov
jmp
addr16
and
test
xor
call
add
jmp
cld
les
sub
sbb
or
jge
orl
sahf
ret
xchg
push
push
push
pop
and
clc
cltd
out
dec
cmp
rolb
outsl
jle
ss
mov
mov
mov
sub
fwait
shl
jg
popa
xlat
xor
mov
pop
out
cmp
clc
insl
lret
popa
je
inc
jo
popf
mov
push
mov
scas
insb
mov
cmp
adc
fistpl
xor
movsl
enter
mov
pop
mov
jle
shlb
popf
stos
or
cmp
es
push
jmp
inc
icebp
lcall
push
into
nop
je
push
scas
js
push
cmpsb
insl
pop
jmp
inc
das
call
add
and
fnsave
roll
xchg
xchg
ljmp
ljmp
jmp
xchg
dec
rcll
movsl
dec
das
pop
or
mov
sub
dec
jo
inc
daa
cmp
jg
rol
cld
int3
dec
pop
mov
inc
inc
xor
jae
addr16
mov
sbb
pop
mov
jae
inc
push
ss
popa
push
addps
fdiv
iret
cmpsl
fnstenv
or
ficoms
sahf
cld
outsl
daa
cmp
pushw
inc
pop
fldcw
lea
addr16
fsubl
clts
sarb
cmc
mov
mov
jg
fldenv
push
fildl
rolb
push
cmp
or
lock
cmp
xchg
stc
js
xor
lods
mov
add
cmp
adc
jp
popl
js
lret
xchg
mov
popf
mov
jbe
dec
stc
fcomip
fwait
outsl
sub
loop
aas
mov
jecxz
pop
fistpl
mov
data16
pusha
outsb
xchg
outsb
popf
xchg
sbb
sbb
shrb
sarb
pop
into
push
cld
fisttpll
adc
ljmp
fistl
std
inc
inc
insb
xor
aam
xor
mov
loop
mov
rorl
dec
or
out
or
jmp
decl
adc
mov
lret
imul
pop
jo
sti
fcompl
out
fisttpl
xor
inc
cmp
push
or
enter
push
leave
xor
push
jp
adcb
inc
sbb
nop
adc
sub
inc
js
mov
push
scas
xchg
jns
mov
test
out
inc
sahf
repnz
leave
lahf
fldcw
call
add
add
adc
in
sub
jp
dec
pop
jp
xor
mov
sub
into
push
cmp
outsb
mov
sahf
lock
lds
gs
mov
push
dec
ja
fcmovbe
pushf
cltd
mov
popf
or
aaa
mov
xor
add
pusha
xchg
mov
jo
pop
lock
xor
lock
mov
mov
and
sbb
int3
into
out
loope
jnp
pop
xchg
mov
xchg
inc
pop
sbb
xor
not
xor
cmp
dec
iret
xlat
inc
loope
pop
cld
xor
movsl
add
sub
sbb
inc
scas
in
hlt
jmp
cmpxchg
xchg
lods
adc
outsl
and
mov
and
movsb
xor
or
and
jg
mov
dec
lcall
inc
sub
shlb
pop
sbb
mov
or
fmull
aaa
xor
test
and
push
stos
aaa
push
xchg
aam
scas
push
ja
mov
pusha
lcall
mov
popa
cwtl
cltd
inc
fs
xlat
orb
xchg
inc
repnz
iret
sub
mov
jp
xchg
add
add
push
or
or
repz
sub
lds
in
cld
pop
xor
adcl
jo
push
gs
insl
cmp
popf
ss
cmp
inc
cmp
loopne
inc
mov
push
enter
movsl
rcr
test
scas
push
adc
lret
fisubrl
lahf
dec
ljmp
mov
jb
cwtl
jle
int3
loope
xor
dec
mov
arpl
mov
loope
mov
adcl
mov
daa
mov
dec
or
inc
fs
cmp
lahf
sub
pop
imul
shll
call
lahf
or
pop
mov
pushf
lret
ret
inc
cmp
mov
lds
insl
call
dec
ja
lcall
xor
cmp
das
lcall
ds
enter
sbb
hlt
cmp
jnp
dec
pop
lds
xchg
jle
or
push
pop
jl
jmp
cmpsl
pop
pop
pushf
adc
cld
and
mov
daa
push
mov
adc
aad
xor
sbb
imul
pusha
jne
fnstsw
push
xchg
bound
push
fwait
sub
push
sbb
pop
xchg
pop
clc
je
rcll
test
testb
xor
test
push
add
popf
mov
sbb
shll
pop
inc
ret
pop
adc
push
in
lds
inc
fsubs
movsb
scas
mov
inc
cmp
sti
sbb
mov
xchg
dec
and
lea
mov
andb
in
push
or
sbb
in
cmp
jge
mov
scas
scas
adc
inc
mov
in
fdivr
mov
in
ljmp
dec
adc
xor
xor
cmp
xor
hlt
xor
loop
fdiv
or
loopne
popa
inc
push
sub
loopne
imul
shlb
hlt
sbb
iret
sbb
arpl
mov
pop
fimull
xor
mov
das
and
or
lret
mov
out
mov
push
pop
jne
sti
jl
pop
cmc
mov
sahf
fists
pop
adc
sub
pop
sbb
sub
cmp
sbb
into
les
in
fisubl
push
mov
lcall
and
stc
mov
and
jle
ljmp
add
mov
mov
in
and
cld
sbb
ljmp
jo
stc
or
ljmp
test
sbbb
push
es
dec
lds
ror
adc
sarl
and
scas
movsl
int3
push
cmp
lods
and
xchg
iret
cmp
sub
mov
mov
out
fnstcw
outsl
mov
xor
push
test
popa
repnz
aas
pop
sti
dec
sbb
add
mov
mov
scas
sub
je
aam
fdivrl
fcompl
xchg
mov
cltd
lcall
lret
sbb
and
shr
daa
and
in
cltd
ret
loopne
or
enter
pusha
aas
daa
jle
pop
dec
sub
fcomi
cmpsb
inc
pop
cmpb
nop
xor
ret
mov
test
nop
iret
and
sub
pop
ror
data16
leave
xor
or
pop
or
jle
add
xchg
push
js
inc
dec
rcll
sub
sub
in
dec
insb
add
pop
sub
push
jl
in
push
sub
ret
and
mov
das
aam
pop
in
into
xchg
push
mov
inc
fimuls
stos
and
sahf
int
out
sub
cmpsl
mov
enter
pop
xchg
call
inc
adc
and
or
popa
je
add
dec
test
in
adc
mov
jns
rorb
xor
es
les
or
dec
cs
mov
iret
cmp
mov
pop
mov
cmpsl
std
dec
and
inc
or
adc
push
imul
repnz
jnp
mov
in
xchg
dec
mov
pusha
ret
xor
in
and
sbb
sahf
cld
xchg
jge
mov
jns
sarb
push
insl
insb
mov
sbb
add
insl
js
shl
insl
add
mov
lods
and
xchg
mov
mov
cmpsl
mov
rorb
push
xchg
test
mov
popa
cmp
idivb
jbe
popf
and
sbb
pusha
repnz
jae
leave
sub
push
dec
orb
leave
pcmpeqb
ret
push
scas
pop
push
mov
leave
repnz
ljmp
sbb
ja
lods
arpl
pop
rcrb
push
inc
jecxz
sbb
or
push
xor
push
jnp
ret
and
mov
pop
outsb
popf
adc
push
sbb
movb
out
in
imull
subb
cmp
jge
mov
sub
adc
rolb
insb
aad
cmp
inc
mov
lcall
mov
dec
mov
cmpb
ss
xchg
aaa
jae
test
imul
jg
imul
mov
sub
jmp
adc
jl
sbb
jp
shll
pop
xor
stos
js
xor
gs
xchg
stos
out
adc
js
movsl
out
test
outsl
or
xchg
fbld
and
testb
mov
lcall
mov
paddw
cmp
daa
gs
push
mulb
shl
and
mov
cmp
outsw
ret
mov
adc
or
les
mov
pop
fidivs
sbb
mov
mov
loop
sub
loope
fcmove
dec
and
inc
cmp
adc
pushf
push
cmpl
mov
jne
inc
imul
hlt
mov
cwtl
lret
inc
push
hlt
push
bound
mov
mov
xchg
mov
testb
dec
inc
inc
cld
frstor
test
mov
sbb
jmp
movsl
cwtl
ret
pop
xchg
addl
inc
enter
lahf
mov
lret
sub
push
gs
cmpsb
jmp
les
loopne
fildll
jp
movsb
dec
mov
insl
in
xor
push
loope
mov
das
movsb
pop
xlat
out
cwtl
xor
adc
xor
sti
pop
add
inc
mov
adc
pop
mov
xor
fwait
rclb
cmp
out
aas
insl
ja
xor
xorb
rcll
pop
adc
lea
pop
shlb
mov
xlat
xlat
bound
or
fimull
cmc
mov
dec
cmp
pop
mov
addr16
or
popa
fstpl
scas
fcoms
lcall
xchg
pop
push
movsl
adc
test
lds
loopne
adc
cmp
sub
push
les
push
add
lret
mov
adc
stos
incl
imul
adc
cmp
insl
fdivp
sub
xor
addr16
sbb
in
into
jecxz
jmp
popa
out
inc
jno
sbb
fmul
int
inc
shrl
cmpxchg
xchg
cmp
stos
dec
sysexit
adc
mov
sahf
dec
stos
push
out
push
lahf
jmp
xlat
or
sbb
fisubl
push
push
cmp
sti
jns
mov
mov
mov
lahf
mov
xlat
inc
push
dec
addl
imul
mov
in
or
lret
mov
popa
lret
pop
mov
pop
mov
mov
dec
adc
push
repnz
imul
pop
mov
aam
aam
inc
nop
jge
stos
das
adc
adc
fisubrl
rclb
negb
jne
xchg
daa
movsl
loopne
ret
loopne
mov
sub
mov
mov
jl
add
imul
add
xor
out
sub
inc
xor
lret
shr
sub
fsubs
mov
cmp
adc
mov
loopne
adc
fsubrs
and
scas
pusha
pop
inc
lds
outsb
dec
jae
xlat
mov
push
dec
xchg
push
punpckhwd
cmp
sub
std
insl
jge
ja
add
cmp
xchg
push
sbb
rcrb
pusha
test
mov
jmp
cmp
cmpsl
cltd
pop
push
push
jmp
rcrb
pop
and
int3
or
lods
lea
mov
dec
ljmp
push
and
or
test
mov
gs
in
cwtl
bound
shl
fldt
in
or
je
push
repz
push
sbbl
fadd
xchg
nop
jmp
lcall
push
adc
nop
fists
push
lret
mov
inc
ficompl
in
or
fstpl
stc
outsl
out
int3
out
cmpsl
add
pop
mov
orb
lret
push
jne
imull
cltd
movsl
push
cmp
fsubrl
inc
jl
ljmp
push
or
mov
inc
int3
mov
mov
add
lock
mov
jg
adc
push
clc
clc
popa
add
sbb
ja
pcmpgtb
mov
xchg
mov
mov
ljmp
cmp
pop
cld
mov
cli
sbb
sahf
add
xor
mov
mov
clc
inc
int
std
jns
push
or
sub
lods
mov
adc
arpl
cltd
or
or
das
ljmp
clc
mov
fwait
push
adc
jbe
stos
out
xchg
xchg
jno
add
push
movsb
cmp
jo
insb
mov
test
nop
mov
sub
push
sahf
out
or
push
pop
and
xchg
ret
pop
orb
jno
scas
ds
je
mov
add
loop
dec
mov
or
cmc
gs
test
lret
leave
cmp
adc
and
faddl
jb
sar
and
mov
pop
movsl
inc
pop
and
and
xchg
insb
push
loope
push
push
dec
mov
bound
fimuls
sub
jle
jns
fnstcw
sub
jmp
sbb
cmp
jg
mov
dec
inc
push
mov
clc
inc
gs
es
icebp
push
sahf
jecxz
outsb
mov
or
loopne
and
stos
cmp
jns
or
fs
test
insb
sub
sub
cmp
fldcw
lcall
stos
sarl
jcxz
sub
adc
mov
nop
pop
dec
test
mov
outsb
inc
adc
sub
sbb
mov
stos
or
std
mov
inc
adc
or
adc
in
call
sbb
into
and
cmp
adc
fadds
lock
cmp
jbe
or
xor
adc
adc
sahf
xchg
push
dec
ds
out
jns
push
sbb
inc
cmp
ret
sub
inc
cmp
push
nop
inc
popf
test
fidivl
in
shll
cmpsl
notl
out
insb
in
add
mov
jno
xchg
push
mov
mov
movsl
mov
pop
add
mov
adc
xor
pop
pop
jmp
pop
dec
scas
push
dec
lea
sub
lahf
dec
jns
imul
xor
scas
push
rolb
gs
bound
pop
mov
pop
test
mov
in
pop
ret
sub
pop
fimuls
btc
sarl
pop
idivb
lcall
mov
stc
push
and
movsb
inc
add
leave
fadd
mov
mov
xchg
inc
inc
cmc
adc
push
sub
sbb
sbbl
add
faddl
dec
aaa
mov
rol
lock
sub
mov
int3
iret
hlt
or
rcll
push
xchg
mov
movsl
jae
stos
cwtl
bound
push
scas
pop
sbb
int3
push
pmulhuw
inc
adc
inc
lret
push
orb
sbb
and
mov
xchg
std
sub
hlt
cld
jge
adc
jns
dec
andl
or
add
or
ret
sbbb
fnstcw
pop
test
mov
in
insl
pop
stos
cmp
xor
xor
add
test
bound
sub
frstor
das
daa
mov
cmpsb
and
push
leave
fldenv
gs
in
sbb
dec
mov
dec
and
sub
sbb
fstpt
cmp
push
push
pop
dec
pop
cmc
adc
addr16
mov
sbb
insb
stc
add
test
mov
jo
cmp
fs
shl
cltd
sub
fcoms
pop
std
xchg
dec
and
cmp
mov
ljmp
add
and
mov
bnd
incb
loopne
jmp
lea
aam
shrb
xchg
out
icebp
sub
xchg
add
mov
adc
mov
dec
ret
fmul
cmp
jmp
icebp
dec
and
jbe
adc
cmpsl
push
sub
sub
mov
lods
jns
enter
into
fisttpl
xor
hlt
inc
pop
push
mov
stc
pop
jge
cmp
repz
ret
jge
mov
outsb
and
cmp
push
pop
les
lea
out
mov
cmp
imul
pop
jb
jmp
pop
xchg
push
sbb
out
rcl
shrb
and
pop
jmp
mov
lret
cwtl
add
std
xchg
push
shl
fstpt
imul
pushf
inc
sub
shlb
das
ret
jo
stos
pop
and
das
mov
bound
test
cltd
add
push
pop
je
jl
adc
movsb
loop
xchg
pop
mov
xchg
ret
out
jle
arpl
mov
aam
cmp
and
cmc
lret
fidivs
insl
jl
call
pusha
inc
fs
ja
lcall
mov
cwtl
pop
push
inc
fisubrl
mov
jle
push
push
inc
leave
sub
push
xchg
inc
sahf
lea
or
ret
xchg
stc
mov
imul
mov
push
scas
adc
insb
shlb
mov
lea
nop
cmpsb
inc
xlat
inc
imul
scas
sub
cld
mov
loopne
adc
pop
xchg
lret
dec
mov
pop
sub
mov
inc
xorb
push
and
add
gs
xor
xor
mov
cmp
test
push
jmp
fcoml
xchg
jbe
jbe
xor
mov
lods
out
std
int
pop
int3
lea
repnz
sbb
aas
cli
and
add
xchg
cmp
adc
jb
lods
lret
push
xchg
aad
movups
ljmp
jmp
insl
pop
xor
inc
inc
mov
je
pop
and
repnz
sbb
cmpsl
out
stos
je
lods
fwait
mov
out
or
jecxz
cmp
mov
mov
push
arpl
icebp
sbb
mov
mov
lahf
dec
push
lahf
mov
div
jnp
shrb
jmp
push
push
add
jns
mov
dec
ss
jecxz
mov
testl
mov
mov
divb
dec
and
fmull
dec
test
pusha
cmp
jo
and
jg
push
dec
jp
dec
movsl
push
bound
insl
cli
push
mov
jb
push
das
js
test
scas
xor
xor
icebp
cmp
add
sub
xchg
mov
mov
mov
clc
jg
xor
pop
sbb
and
mov
adc
lret
imul
lods
push
out
mov
mov
xchg
or
mov
sub
sti
or
push
movsb
inc
sbb
outsb
cld
imul
mov
out
sbb
out
incl
aas
lret
cmp
mov
int3
mov
pop
out
cltd
std
call
shrl
outsb
or
xchg
or
pop
jge
xor
jne
fsubl
mov
push
mov
xchg
cmpsb
clc
inc
inc
filds
cmp
sbb
xchg
adc
push
lcall
shl
fsubrs
movsl
lret
rolb
mov
push
push
dec
mov
fsts
aaa
inc
adc
mov
outsb
dec
in
movsb
out
and
mov
dec
movsb
ficoml
sub
fnstsw
inc
push
repnz
xor
sbb
pop
faddl
mov
ja
cltd
or
add
pop
out
or
mov
es
dec
stos
mov
mov
outsl
fnstcw
in
pusha
push
mov
fnsave
xor
or
cli
inc
pushf
adc
imul
pop
add
cmpsb
hlt
sti
adc
inc
mov
jae
mov
jnp
mov
aam
sub
or
fdivl
cli
mov
popl
fs
fnsave
movsl
push
or
sarb
pop
icebp
adc
lahf
shlb
repnz
je
push
fcmovu
mov
sbb
nop
inc
ss
jge
sbb
mov
mov
or
loop
xchg
pop
cmp
movsl
mov
sbb
loope
call
push
push
mov
cwtl
pop
in
shlb
add
stos
or
xchg
cmpsb
test
sbb
and
loope
out
lods
repnz
and
jl
mov
lods
in
jg
cmp
mov
push
pop
lods
in
icebp
push
scas
cltd
inc
stc
nop
jnp
ss
scas
cli
lcall
jo
pop
inc
xor
adc
ret
jmp
int3
mov
or
mov
ja,pn
push
imull
std
add
and
in
mov
inc
cli
cwtl
les
and
negb
das
das
jg
nop
movsl
les
push
loopne
test
push
inc
into
cmpsl
push
mov
pop
push
dec
lret
adc
jecxz
jle
pop
pushf
inc
mov
testb
scas
xchg
sbb
jge
lods
sahf
fsubrs
add
popa
outsl
and
shr
in
in
dec
lds
pop
das
cmpsb
push
sbb
sbb
mov
adc
xchg
mov
clc
test
xchg
adc
jecxz
jg
adc
cmp
popl
scas
adc
popa
fs
mov
movsl
insb
push
jbe
jbe
lret
loope
pop
sbb
sub
pop
pop
inc
xchg
test
add
movsl
dec
jo
out
cmp
jmp
sbb
dec
aad
mov
push
sbb
pop
adc
fildl
sub
xchg
divb
push
cmpsl
mov
cmp
sbb
xchg
mov
fimull
sub
lock
shrl
fcoml
mov
and
push
popa
out
std
sub
arpl
pop
shlb
jp
lods
cmp
add
push
or
clc
arpl
in
lret
loope
and
ja
or
add
dec
xor
and
pop
dec
push
dec
push
jg
popa
ja
inc
aad
and
add
pop
in
mov
dec
sub
fnstcw
jb
out
out
fucomi
loop
or
adc
stos
int3
push
sahf
xlat
mov
inc
mov
sbb
sub
aaa
cld
insl
mov
call
add
cmp
mov
push
push
xchg
inc
js
and
cs
xchg
mov
in
rcll
mov
aaa
jne
push
in
sahf
insl
or
cmpsb
xchg
clc
shlb
jg
out
lock
in
mov
push
cwtl
pop
std
imul
fincstp
addr16
xchg
daa
and
sbbb
and
pop
cmp
push
pop
mov
call
scas
bound
dec
xor
xor
or
cmp
mov
cmp
push
push
loopne
ljmp
dec
addl
movsl
insb
mov
add
fmuls
neg
and
mov
xlat
mov
push
ret
and
sub
push
imul
pop
hlt
mov
push
scas
das
add
cs
jns
sbb
cwtl
inc
mov
into
in
sarb
pop
lea
stos
pop
inc
mov
fldt
xor
cmp
lcall
push
testb
sbb
fistpl
xchg
std
inc
xchg
push
dec
xchg
inc
or
xchg
add
inc
and
jp
and
testb
or
or
ret
xchg
inc
add
outsl
outsl
inc
xchg
adc
cmp
mov
repnz
jb
jnp
scas
ds
scas
sarl
cmc
pop
cwtl
xchg
nop
mov
negb
sub
mov
lea
in
in
out
mov
mov
adc
mov
pop
faddl
add
or
cli
or
pop
iret
and
jo
mov
rorl
cmp
mov
sub
bt
sub
sub
xlat
into
mov
adc
sbb
xor
xchg
pop
cmc
add
or
adc
data16
bound
imul
cmp
inc
sub
fucomp
pop
int3
ror
cli
clc
imul
jle
hlt
add
xor
xchg
jbe
in
ljmp
xchg
xchg
and
popf
lret
add
jb
mov
adc
jp
cmc
add
adc
lsl
mov
int
mov
sbb
mov
mov
inc
push
jp
mov
push
pop
bound
add
mov
mov
test
mov
xchg
mov
scas
jge
test
xchg
lret
int3
arpl
xorb
stc
movl
rol
xor
mov
fsubl
call
ss
xor
insl
lea
in
imul
mov
inc
adc
shrl
jmp
in
loop
sbb
ja
cltd
sbbl
inc
cmp
cmp
mov
shrl
sub
and
add
mov
or
popa
insb
push
push
mov
mov
repnz
mov
mov
cmp
out
mov
idiv
fdivs
les
sub
xor
mov
push
call
push
xchg
inc
mov
dec
pop
mov
lods
repnz
icebp
add
mov
lret
stc
sarl
and
iret
mov
loope
and
rorb
cmp
xchg
imul
and
push
das
xchg
add
inc
or
mov
shrl
icebp
sbb
sahf
add
mov
shr
pop
movsb
in
sub
es
jle
cmp
push
ds
jl
jo
mov
jbe
mov
test
sbb
push
mov
inc
lds
lea
das
jo
or
movsb
mov
fstps
mov
jl
dec
out
cmpsl
insl
in
out
add
dec
pop
enter
pop
mov
out
shlb
test
mov
xor
lods
sbb
inc
rol
hlt
mov
push
inc
loope
adc
and
mov
add
mov
add
sub
xchg
and
adc
mov
sti
arpl
and
cli
xor
inc
fnsave
push
shrl
and
gs
rol
pop
xor
jg
scas
mov
xor
xchg
xchg
into
movsl
dec
cld
pusha
jecxz
mov
leave
sbb
out
adc
or
mov
sub
add
lods
jle
ret
and
xchg
jbe
mov
test
scas
mov
push
pop
fucomp
inc
pop
mov
xchg
sbb
pop
das
and
out
push
mov
pop
mov
lea
psubw
mov
inc
mov
adc
jbe
jmp
icebp
dec
inc
fstl
enter
fdivrl
jnp
insb
data16
add
pop
fnstcw
movsl
ret
pop
lahf
fmull
popa
mov
sahf
movsb
jle
fiaddl
aas
jge
pop
push
push
fistl
push
loopne
into
sub
test
in
cmp
mov
sbb
sti
arpl
mov
mov
enter
icebp
mov
push
push
and
or
dec
push
or
les
clc
mov
pusha
out
dec
les
or
mov
repz
inc
mov
jle
jnp
outsb
adc
inc
insb
pop
adc
lock
mov
outsl
cmp
jnp
sti
lret
add
dec
fbld
ja
push
std
ljmp
loopne
int3
xchg
pop
push
xlat
mov
aaa
lret
dec
mov
cwtl
and
movsl
inc
outsl
mov
jecxz
mov
adc
push
cmp
inc
cmp
xchg
imul
loope
enter
fadds
inc
push
bound
adc
int3
ja
dec
into
xlat
stos
fistps
loopne
sbb
outsb
mov
in
rorb
lcall
push
out
mov
clc
sub
jbe
sarb
push
outsl
mov
mov
cmp
movsb
lods
std
mov
xor
xor
pop
sahf
and
sahf
aam
mov
jmp
adc
roll
xchg
in
xor
push
mov
add
mov
xchg
cmpsb
push
test
je
ljmp
add
cs
add
sar
inc
fs
add
in
negl
outsl
imul
scas
add
je
inc
cwtl
movsb
mov
inc
insb
loope
or
out
decl
or
push
or
xchg
and
clc
in
jae
jb
cmpsb
aaa
inc
insb
jg
cltd
outsl
addr16
lahf
mov
mov
mov
sbb
jp
in
popl
sbb
push
jge
dec
pmullw
test
sti
mov
jb
cmpsb
jbe
popf
ljmp
fwait
test
cmpsb
bnd
test
mov
mov
pop
mov
rcl
mov
sub
fmul
pop
push
add
lret
cmp
inc
ja
inc
xorb
adc
xchg
pusha
cli
shrb
jmp
add
cld
shll
xchg
xchg
movsl
out
sub
enter
sbb
out
and
btr
sbb
aaa
sub
test
pop
xor
sbb
sbb
sbb
fldl
mov
fldcw
and
pusha
push
inc
push
into
xchg
ret
cwtl
push
sbb
fildl
mov
stos
out
push
cmc
or
pop
sub
push
mov
and
sub
sti
xchg
dec
scas
fbstp
xlat
stos
scas
or
jno
and
adc
pop
xor
setg
dec
fs
movsl
mov
insb
mov
add
xchg
aaa
cmpsl
rcrb
and
aam
jecxz
sbb
loope
stos
movsb
mov
jb
mov
es
pop
into
mov
cli
sub
mov
mov
cmp
add
xchg
cmc
lds
and
xchg
std
cmp
cmpsb
xchg
jo
lret
sbb
mov
rorl
js
push
clc
fldcw
sub
sbb
jecxz
mov
pushf
je
adc
mov
and
push
test
mov
cmpsb
lock
sbb
in
addr16
pop
mov
shl
xlat
and
sarl
jge
popf
repnz
add
repnz
ds
sbb
je
mov
pop
lahf
push
dec
roll
jmp
pop
out
and
imul
ror
push
aas
push
push
iret
outsb
jne
push
pop
pop
pop
sub
ret
clc
adc
iret
xchg
fildl
dec
mov
push
aam
dec
in
jg
loop
add
stos
jnp
lea
jo
repz
lods
cmp
push
sbb
in
pop
mov
clc
cld
lret
add
not
push
add
jecxz
jle
shl
pusha
fsubrs
sbb
test
jl
xchg
xor
test
stos
or
movsb
cmp
stc
in
fwait
out
hlt
pop
mov
repnz
jl
ds
lcall
pop
cmp
sub
outsl
icebp
je
or
dec
mov
push
and
hlt
loop
out
shl
das
call
push
jl
testl
rcrb
or
xchg
testl
push
sub
xor
and
les
adc
push
dec
xchg
jmp
imul
xchg
inc
jmp
pusha
dec
stc
lods
aad
cli
jp
sarb
xor
lods
adc
ret
cld
cld
fcompl
dec
push
movsl
hlt
cmpsb
lcall
push
popf
loop
dec
call
push
addr16
mov
push
cmpsb
inc
mov
imul
scas
lret
ds
xchg
xchg
icebp
adc
adc
pop
movsb
inc
loop
pop
fisubrs
mov
jae
fisubl
jae
stos
jg
shrb
lods
lea
test
lahf
in
push
dec
pop
call
inc
sub
or
nop
adcb
adc
sub
stc
pop
scas
imul
popf
inc
xchg
in
push
std
ljmp
out
or
dec
ja
lret
cmpsl
dec
mov
mov
add
shl
push
sahf
jmp
sbbb
les
cld
mov
cmpsl
orb
repz
insb
push
push
xchg
push
stos
fisubrl
stos
les
in
mov
dec
ret
push
push
cwtl
fdivs
push
in
sub
cmp
insl
scas
sbb
inc
mov
popf
cmp
mov
cmpxchg
rorb
or
hlt
mov
xor
dec
cltd
arpl
lods
cwtl
cmp
mov
jg
sub
flds
popf
movsb
adc
jle
xchg
fildl
out
inc
neg
add
imul
push
jo
pop
loope
adc
push
jno
and
xchg
sbbb
fs
hlt
xor
cltd
sarl
xorb
sbb
mov
andl
fldl
pop
xor
xor
pop
fldl
out
mov
movsl
adc
lods
mov
das
out
mov
out
cld
push
sbb
push
mov
mov
add
fdivl
xchg
or
popa
fcompl
mov
xchg
test
cmp
out
jno
sti
fdivl
add
xchg
or
ds
movsb
add
mov
sbb
pop
inc
cmp
divb
adc
add
inc
stc
jb
inc
popf
testl
add
add
arpl
sbb
xchg
adc
ss
pop
mov
pop
push
jl
je
adc
sbb
push
mov
dec
arpl
mov
cmp
or
fdivrl
lcall
cmpsb
ss
faddl
out
mov
cmp
dec
fs
out
out
in
out
sbb
mov
xchg
cmp
sbb
adc
jo
aaa
xchg
lahf
xchg
adc
mov
fwait
test
fnstenv
cmpsb
dec
mov
cmpsb
xor
scas
and
mov
out
js
lret
inc
mov
xchg
mov
test
shrb
sub
inc
in
negl
ret
xchg
mov
or
lock
or
adc
aaa
xchg
or
sbb
mov
dec
mov
or
popf
imul
aam
idiv
insl
in
dec
jno
scas
and
jecxz
adc
ja
lods
test
push
ds
fwait
sub
cmc
in
ljmp
daa
std
icebp
fs
das
stc
ficomps
dec
popf
lods
xchg
shlb
pop
inc
int
insb
loopne
fs
sbb
pusha
test
xor
stos
adc
pop
bound
repnz
shll
subl
insl
int
adcl
push
adc
add
cld
jno
jp
daa
hlt
je
pop
push
fsubs
xchg
in
pop
sub
out
cmp
mov
icebp
adcb
pop
jo
ds
and
mov
roll
arpl
aad
movsb
vprotd
dec
sbb
cmp
ret
scas
push
xchg
pop
pop
out
scas
hlt
dec
icebp
jle
subb
xchg
cmp
lret
decl
sbb
or
mov
jns
push
push
test
int3
imul
cld
and
cmp
pop
jg
push
loop
and
xor
cmp
bound
cmp
mov
xchg
movsl
sub
inc
jno
xor
icebp
jns
popa
push
xor
dec
dec
xchg
pop
cwtl
out
push
xor
fidivrs
cltd
add
xor
adc
or
in
ret
cmp
or
dec
and
jmp
adc
cwtl
sub
icebp
mov
fistpll
in
mov
mov
movsl
popf
xor
cmpsl
mov
sbb
aas
pop
push
jle
and
ja
pop
pop
add
push
adc
pmovmskb
int3
js
add
push
in
repz
fsubrs
aas
cli
call
xchg
add
push
stc
add
insl
aad
decl
ds
jle
add
cmp
cmc
jae
mov
test
lea
bound
xor
subl
insb
hlt
aad
add
mov
call
fcmove
adc
imul
pop
add
loop
or
sub
lds
adc
mov
xor
push
test
scas
mov
cs
ret
flds
je
push
in
mov
or
loope
pusha
lahf
cmp
mov
adc
loop
rcrl
cld
pop
lea
add
orl
mov
imul
push
data16
jnp
or
in
add
mov
fsubs
inc
outsb
mov
fmuls
rcrl
or
gs
outsb
push
mov
xor
ja
aam
xchg
mov
inc
gs
xchg
loopne
cmp
adc
xor
sbb
jl
insl
mov
xchg
jo
mov
in
movsb
shll
imul
jb
and
inc
lret
scas
loopne
fsubrl
daa
dec
fs
cltd
ja
divb
inc
loope
adc
call
xchg
insl
xlat
add
scas
inc
inc
or
mov
lods
clc
lock
hlt
or
outsb
mov
test
cmp
sbb
ficompl
dec
xchg
inc
fs
push
mov
sub
aaa
imul
sahf
fsubrl
lcall
sbb
xor
test
mov
int3
std
ret
push
out
in
add
lcall
cld
add
pop
sub
andb
lahf
push
repz
mov
test
sub
in
jno
mov
inc
sarl
fstl
out
add
dec
lea
pop
insl
je
outsl
mov
popf
rol
inc
push
shll
mov
or
cwtl
sbb
fsubs
and
inc
pop
pop
mov
pop
sar
sbb
pop
jge
jns
sub
lock
inc
sbb
jo
repz
js
sub
mov
lock
into
sub
lahf
out
fcoms
aas
mov
cwtl
sub
iret
aad
sahf
loop
shrl
push
xchg
mov
lcall
xor
test
jne
gs
ss
mov
cmpb
imul
aaa
sbb
fwait
and
rcrb
xchg
movntps
mov
imul
sub
in
mov
js
scas
lods
sub
nop
not
xchg
hlt
xchg
add
xor
cmp
cmpsl
jbe
jmp
sbb
jns
push
cmpsb
das
and
dec
mov
insb
ds
sbb
enter
xchg
insb
xchg
filds
shlb
stos
icebp
fcompl
ror
out
test
popl
das
jns
movsb
inc
sub
std
aam
or
push
popa
inc
jb
outsb
faddl
mov
push
clc
sbb
inc
pop
scas
pop
add
mov
dec
rcl
sbb
fdivr
mov
push
hlt
push
aam
or
inc
xchg
rcrl
movsl
out
loop
or
clc
xor
test
sbb
xor
in
imul
jb
push
push
xlat
xchg
rorb
dec
cmp
sbb
push
adc
bnd
mov
sub
mov
pop
cli
insb
test
test
push
lea
jmp
sbb
jae
out
push
cmp
dec
ja
ret
sbb
jb
push
sub
lret
idivb
inc
es
jns
std
push
adc
inc
arpl
addr16
or
hlt
pop
sbb
xlat
xchg
mov
and
pop
fstpt
and
stc
pop
sbb
les
or
cmp
stc
jg
adc
pusha
push
push
mov
hlt
and
push
inc
ret
pushf
mov
add
clc
pop
dec
add
idivb
lahf
adcl
lods
lods
test
paddd
fildl
push
in
or
addr16
lret
and
cmp
push
fistpll
mov
sbb
inc
jno
mov
shrb
pop
bound
inc
cmp
sub
xchg
mov
adc
aad
shll
adc
out
push
adc
int3
loopne
push
pop
cmp
xchg
dec
cltd
dec
fwait
or
cmpsl
pop
mov
and
ljmp
pop
pop
xchg
dec
sti
jns
sbb
xor
std
mov
jmp
fs
and
xchg
addb
in
inc
mov
cmp
push
xchg
lock
or
clc
adc
lock
cltd
aaa
fidivl
aas
jbe
push
push
cmp
pop
push
or
cmp
jne
sbb
ds
adc
and
pop
lahf
jnp
inc
js
xor
push
xor
pushl
aaa
mov
push
js
push
lcall
mov
inc
pop
inc
call
ja
cmp
orb
nopl
mov
sub
jmp
sbb
cwtl
jne
ret
dec
mov
in
pop
test
sub
les
add
pop
or
addr16
jecxz
add
outsl
int3
scas
les
repz
dec
push
jle
mov
aas
jnp
mov
sbb
jmp
push
adc
xchg
mov
lock
nop
lret
adc
push
add
jecxz
cmp
cmpb
in
mov
pop
sbb
pop
adc
sub
jns
xchg
jmp
xchg
mov
pop
xchg
mov
cmp
insl
or
mov
jno
fldt
adcb
push
sbb
sbbb
dec
jnp
push
popf
push
jg
test
enterw
fistl
std
pop
pop
outsl
and
xchg
lcall
mov
std
add
mov
jns
inc
dec
dec
inc
test
inc
mov
mov
movsl
pop
into
aaa
mov
cmp
fcoml
cmpl
aam
sub
inc
leave
xchg
pop
pop
sub
mov
or
stc
xchg
outsb
jno
xor
je
lahf
mov
add
prefetch
mov
xorl
pop
xor
insb
fidivs
and
lret
js
pop
icebp
repz
adc
push
mov
out
adc
push
mov
mov
loopne
mov
cmp
push
das
aam
xor
sub
scas
add
lahf
xor
mov
in
or
xlat
mov
mov
and
mov
rcr
jb
mov
aas
dec
scas
or
xlat
mov
lods
and
xor
cmp
jbe
mov
stos
dec
sub
dec
test
movsl
stos
outsl
call
in
sub
push
leave
pusha
lcall
ljmp
and
fcoml
mov
push
sbb
pop
sbb
shlb
mov
gs
in
cwtl
neg
aaa
insb
inc
pusha
mov
data16
inc
xchg
leave
xchg
pusha
mov
movsb
xor
add
loop
jecxz
pop
pop
cmpsl
push
pop
dec
sbb
hlt
and
lods
loop
xor
ror
pusha
xor
cmp
sbb
cmp
addl
movsb
sbb
adc
cwtl
lds
aam
leave
pop
push
mov
sbb
orl
pop
push
sbb
adc
jecxz
push
nop
xchg
pop
movb
andb
scas
and
pop
xor
stos
sbb
cs
pop
mov
pop
xchg
imul
add
iret
inc
pop
hlt
cltd
sbb
in
mov
mov
jp
mov
stc
dec
cmp
aad
jmp
out
dec
out
adcb
movl
xlat
jae
test
popa
je
outsb
imul
jp
jle
call
dec
insl
pop
enter
add
fmull
int
movsb
jge
mov
lahf
xchg
or
test
repz
faddl
sub
cmpsl
mov
or
seto
in
enter
aas
fistps
lcall
out
add
sbb
cmp
outsl
lret
ja
sub
popa
pusha
les
mov
into
xorb
test
rcrb
mov
mov
scas
sbb
int
lds
ret
call
lret
repz
lods
lds
aas
mov
mov
sbb
sbb
push
cli
imul
in
test
nop
jl
in
or
mov
idiv
into
and
lods
mov
out
or
push
jne
bound
fbstp
les
ss
movsl
pop
mov
scas
sbb
cmp
push
fldenv
ss
stc
mov
dec
sbb
movsl
add
or
scas
movsb
adc
adc
stos
xchg
std
pop
sbb
stos
shlb
loope
mov
out
push
pushf
and
add
lcall
lcall
cmp
les
mov
inc
pop
adcl
test
daa
adc
les
jg
xchg
shl
sbb
cmc
cs
xor
pop
and
fildl
cli
xlat
add
faddl
jle
stos
std
repz
rorb
inc
dec
add
lods
push
scas
adc
mov
jg
aaa
lret
jnp
mov
rorl
testb
jge
es
mov
mov
dec
fcos
pop
fyl2xp1
orl
enter
inc
add
shl
dec
sbb
push
mov
jb
dec
lahf
push
je
in
fsubs
aaa
add
xchg
mov
mov
repnz
ljmp
xor
jg
pop
push
adc
inc
aaa
and
dec
sub
push
pop
mov
aas
xchg
mov
pop
inc
testb
pop
mov
daa
sub
lds
jns
mov
and
cmp
adc
push
jnp
xchg
fdivp
inc
enter
in
mov
pop
mov
adc
jge
popf
movsb
ljmp
das
pop
push
data16
jo
cltd
jb
jne
mov
insb
add
in
sahf
mov
sahf
add
jo
int3
jmp
sub
xor
cs
stc
lock
dec
ret
inc
adc
in
filds
in
neg
insl
iret
push
pop
sbb
lock
in
in
inc
out
mov
aam
mov
repz
out
push
out
cmc
mov
int3
xor
jle
jmp
xor
inc
inc
mov
xchg
fsts
std
lcall
sbb
dec
scas
data16
outsl
je
xchg
icebp
push
cmp
xchg
xor
jmp
inc
je
lret
push
pop
sahf
push
mov
sub
cmp
out
mov
dec
cltd
cmpsl
pop
xorl
jb
mov
lret
nop
mov
inc
enter
ljmp
lock
mov
out
cmp
loop
push
cli
add
les
dec
inc
aas
adc
mov
cmp
popf
mov
xor
lcall
jecxz
sub
xor
ds
push
adc
aad
xchg
js
sbb
mov
jmp
sbb
xor
ret
loope
push
and
cli
mov
or
push
dec
ret
add
mov
mov
aas
pop
pop
nop
imul
xchg
adc
incl
pop
hlt
or
pop
xchg
inc
rcrb
icebp
add
lcall
fistl
call
push
mov
ja
sbb
adc
push
mov
sarb
push
fs
xor
lret
incb
sti
aad
lcall
sbb
scas
loopne
or
insl
sub
arpl
js
dec
jecxz
cld
pop
xor
and
daa
sbb
jmp
es
fistpll
test
push
jne
pop
cli
cwtl
repz
aaa
mov
ss
jne
sub
jo
std
inc
jo
movsb
fwait
mov
lea
mov
jge
enter
pop
jecxz
and
push
pop
stc
push
lcall
jmp
lods
movsl
test
insl
xchg
lcall
pop
rcrb
ljmp
sbb
pop
in
test
add
push
adc
push
mov
setg
adc
xor
mov
bnd
mov
dec
loope
iret
sub
mov
mov
jno
sbb
dec
cmp
and
sti
mov
add
imul
pop
sbbl
adc
insl
lock
mov
push
aaa
cs
sub
dec
sbb
icebp
pop
dec
mov
aas
mov
push
scas
fs
adc
jmp
inc
sub
pop
jnp
in
cmp
push
push
ret
xchg
jp
cmp
dec
loopne
mov
cwtl
mov
and
jecxz
push
and
bound
xchg
jg
mov
mov
imul
test
cltd
xchg
iret
mov
shrl
icebp
add
pop
jb
in
popf
ss
into
adc
pop
jae
leave
jge
add
sub
rcl
xchg
pop
mov
jae
mov
popf
mov
mov
imul
inc
sub
mov
jp
test
mov
test
lret
iret
dec
mov
pop
cmp
lret
mov
xor
jmp
loopne
aaa
outsb
lods
jp
enter
test
pop
fsubrs
and
mov
pop
add
and
jg
mov
sub
jecxz
mov
sub
cmpsl
or
lcall
in
inc
push
inc
sub
mov
cmp
xor
pop
mov
xlat
and
insl
cmpsl
std
js
add
xor
add
xchg
xor
mov
gs
push
add
dec
call
insl
mov
cmpsl
ss
sti
xchg
mov
jge
xor
cmpsl
or
lret
cli
push
jg
mov
push
sub
jg
sbb
sbb
iret
nop
sarl
es
sub
pop
mov
mull
mov
lds
outsl
add
dec
lcall
mov
cmc
mov
test
jns
dec
loope
sub
pop
inc
test
loop
push
xchg
push
rcrb
push
jg
mov
fdivs
jecxz
enter
in
rep
loopne
fs
cs
fs
pop
out
sbb
stos
int
mov
jno
loopne
sub
push
jl
jmp
in
push
pop
jecxz
push
out
lret
mov
add
loop
imul
sbb
inc
dec
add
fidivl
dec
repnz
sub
mov
pop
ret
dec
sbb
aam
xor
dec
cmp
xorl
stc
jmp
cs
pop
lahf
jo
aaa
inc
xchg
ret
sbb
test
leave
mov
jp
shrl
cmp
mov
xchg
outsl
rorb
fucomi
adc
inc
sbb
push
adc
mov
cli
fwait
daa
jg
sti
in
gs
and
roll
in
mov
inc
arpl
loop
decl
aaa
fwait
and
jecxz
xor
dec
sahf
jge
sar
cmp
loopne
or
fwait
push
sbb
xchg
adc
into
stos
sbbb
lock
or
mov
jecxz
pop
xor
incb
rolb
repnz
ljmp
in
mov
popa
dec
push
xor
lea
jnp
adc
mov
rorl
repz
icebp
add
add
ds
sbb
push
fdivs
inc
mov
lock
decb
adc
arpl
mov
pop
inc
inc
daa
data16
int3
lods
push
lods
addr16
shr
out
out
xchg
sbb
cld
std
adc
xor
cmc
push
pop
lcall
sti
mov
js
ja
mov
and
cld
push
cli
enter
inc
imul
out
popa
imul
ljmp
fisttpll
xchg
cmp
mov
test
cmp
insb
ljmp
inc
xchg
test
in
int
scas
sub
in
inc
mov
adc
jo
cmp
xor
and
inc
movb
cmp
sub
gs
add
mov
cmpsb
add
adc
test
xchg
cmpsb
stos
mov
lahf
and
leave
mov
push
push
repz
jecxz
pushf
les
push
pop
fwait
arpl
mov
popf
inc
fsubs
adc
mov
loope
xchg
mov
xchg
sub
nop
insl
mov
cmp
shlb
mov
lock
add
mov
mov
in
shlb
xchg
push
popf
or
fiadds
test
add
jns
adc
push
add
xchg
imul
lahf
add
adc
xchg
cmc
leave
and
mov
push
xor
out
mov
shll
bound
pop
dec
sbb
xor
adc
pushf
inc
adc
cvtps2pi
jnp
xor
push
fisubs
mov
clc
mov
es
insb
fbld
xor
addr16
popa
cmp
xchg
adc
icebp
sub
sbb
fisttpl
fcoml
ja
les
call
or
pop
fcmove
cmc
jl
pop
fnsave
adc
xor
jmp
cmc
call
xchg
sub
outsl
xchg
cmpsl
fs
jae
aaa
les
or
push
xchg
insb
pop
or
rcpps
out
xor
mov
pop
hlt
loopne
dec
js
fwait
cwtl
and
mov
xchg
cmp
aas
fstps
arpl
out
fwait
pushf
test
inc
mov
lods
fs
mov
rorb
and
int
mov
xchg
in
aam
mov
mov
daa
dec
sbb
cmpsl
std
mov
in
hlt
jb
add
aad
inc
or
rolb
mov
jmp
setbe
ror
aaa
inc
sbb
insb
sbb
mov
ficoml
cmp
scas
andl
ljmp
cmp
adc
sbb
mov
ljmp
lods
mov
mov
lret
pop
push
mov
sub
iret
lcallw
dec
xor
das
call
shlb
add
inc
outsl
xchg
and
xchg
aas
and
pop
push
jbe
sub
loopne
iret
daa
fistpll
lods
je
aaa
inc
inc
inc
inc
movsl
xor
and
inc
movsb
sbb
pop
gs
aas
xchg
sub
int3
loopne
mov
cmpsb
adc
ss
addl
movsl
xchg
in
call
inc
mov
sbb
adc
jo
leave
sahf
sbb
sti
aam
int
pop
testl
adc
push
call
sub
and
repnz
push
pusha
push
cmc
pop
enter
sti
lret
dec
stos
pushf
out
mov
jbe
and
fldenv
xchg
jbe
leave
ret
mov
mov
xor
xor
push
out
bound
xchg
and
push
subl
mov
jmp
adc
ss
xor
repz
cltd
imul
lea
push
je
je
loopne
sbb
andl
push
inc
leave
les
jl
hlt
inc
test
mov
inc
push
jge
xchg
dec
inc
cmp
push
cmp
out
lea
sub
push
add
pusha
push
cli
jo
sub
add
inc
pop
xchg
es
sbb
cmc
das
lret
jg
ljmp
std
adc
pusha
xchg
cmp
adc
mov
mull
fwait
inc
mov
sbb
ss
sbb
loopne
push
xor
add
dec
imulb
cmpsb
adc
push
dec
leave
test
push
lahf
aas
outsb
lea
je
xchg
test
dec
xor
hlt
mov
adc
add
or
loopne
sub
push
daa
pushf
dec
sbb
scas
xchg
clc
fistps
mov
push
leave
sub
push
add
mov
jno
pop
rol
popf
jbe
daa
lods
nop
pop
loope
aas
inc
int3
call
cmc
loopne
xor
out
sub
shrl
sahf
stos
or
push
pop
fwait
push
sub
dec
xor
fstps
imul
pusha
and
lret
sti
push
pop
sbb
cwtl
push
cmpsl
inc
xor
mov
out
popf
dec
fs
repnz
pop
mov
loope
insl
insl
sub
mov
jg
cmpsb
mov
mov
push
iret
gs
cmp
fsubl
clc
ficompl
out
adc
push
jnp
fldt
inc
leave
sbb
jmp
mov
xchg
and
pop
sti
mov
xchg
out
repnz
inc
jle
xchg
and
in
in
adc
mov
mov
mov
outsb
and
and
movsl
stos
lods
insl
mov
push
add
shr
or
stos
lock
cmp
inc
mov
xchg
iret
pop
es
mov
hlt
outsl
sbb
hlt
mov
xchg
rcrb
and
xor
mov
sub
add
repz
mov
dec
mull
arpl
popa
sbb
add
lret
mov
bound
loopne
inc
mov
fsubrs
je
mov
mov
out
fsubrs
mov
or
test
add
push
sbb
cwtl
testl
scas
mov
pop
dec
adc
in
mov
or
clc
std
mov
dec
jo
pop
addr16
into
push
aaa
out
xor
add
inc
dec
aam
inc
sahf
movsb
and
mov
xor
jne
pop
in
ret
lds
ds
cmpsl
adc
test
movsb
ljmp
les
cmp
inc
lock
sbb
mov
cmp
out
push
int
jmp
sub
int
pop
test
inc
cmp
add
ja
push
lret
addr16
mov
call
sbb
sbb
fcmovnb
stc
inc
adc
inc
subl
es
in
jle
scas
push
adcl
lods
jbe
rorb
es
andb
cmp
jge
sbb
lahf
jbe
stc
mov
add
int
addl
or
test
sub
mov
add
icebp
mov
and
lea
mov
and
ds
cltd
sbb
mov
or
test
pop
in
jae
imul
in
cmpl
xchg
mov
daa
insl
add
jno
pop
out
sahf
push
adc
pop
mov
and
scas
clc
xchg
stos
mov
mov
push
aad
not
or
aad
ljmp
mov
das
and
jp
enter
and
xor
mov
lea
add
xchg
inc
popa
ljmp
sbb
mov
and
stos
pop
enter
mov
mov
inc
add
sub
add
xchg
hlt
in
out
inc
add
or
fsub
dec
ds
mov
ljmp
pop
jmp
ret
adc
fidivl
out
imul
fidivs
aam
mov
mov
push
outsb
xchg
or
xor
orl
imul
push
addl
mov
adcb
inc
sub
stc
stos
insb
orb
sbb
addr16
fisubrl
repz
xchg
pushl
outsb
ret
mov
mov
xor
and
mov
jl
pop
fs
and
inc
shl
add
imul
js
push
mov
mov
mov
and
into
cld
xchg
jbe
dec
jae
cs
ficompl
sub
out
pop
mov
pop
std
scas
sbb
dec
sub
stos
lea
pushf
pop
mov
jmp
cmp
in
stos
int
push
cmp
mov
mov
add
xor
and
pusha
or
and
es
mov
std
sbb
sbb
mov
dec
ja
sub
loope
jge
iret
lock
sbb
push
pop
inc
jne
mov
push
jg
imul
add
cmpsl
xor
adc
dec
into
mov
cmp
push
dec
cmpsl
push
insb
pop
aad
mov
lods
loope
sbb
mov
mov
mov
sbbl
fldcw
aad
mov
outsl
cmp
inc
xchg
lods
loope
insb
sub
psrlw
xor
xchg
lret
and
pop
movsb
inc
fcmovb
ljmp
xor
pushf
mov
loopne
mov
popa
push
sub
pop
jecxz
pop
mov
mov
inc
jno
aam
nopl
mov
pushf
sahf
xchg
xchg
sub
inc
in
push
xchg
push
lods
sbb
push
xlat
repnz
iret
in
enter
push
outsb
les
and
jmp
mov
mov
stc
call
div
cltd
shrb
push
inc
jnp
xchg
jecxz
mov
icebp
lahf
std
inc
push
cld
outsb
jns
in
pop
mov
filds
imul
push
or
pop
data16
inc
cli
orb
fnsave
pusha
nop
out
cli
adc
adc
pop
mov
iret
jnp
push
mov
aam
iret
jmp
orb
and
jae
bound
ret
and
jno
mov
movsb
bound
push
stos
dec
pop
cmpsb
jbe
rcr
shll
sub
repnz
dec
aam
aad
adc
adc
xchg
sahf
cmpsb
out
ret
test
or
lds
xchg
rclb
in
in
sub
mov
je
jo
cmp
inc
repz
cmp
rolb
xor
lret
cmp
sti
xor
shrb
pop
out
stos
dec
or
push
pop
mov
cmpsl
inc
cmp
push
and
je
jbe
sahf
in
xchg
xor
adc
pop
xchg
sbb
mov
lock
or
push
in
jl
insb
test
adc
pushf
test
push
mov
testb
or
scas
pushf
and
out
int3
inc
aad
popf
test
mov
adc
rcrl
test
adc
fisttpll
cwtl
add
adc
fnstenv
cwtl
push
sub
popf
inc
xchg
push
test
std
repnz
test
fistps
dec
pop
sbb
fdivl
push
mov
cmp
pop
stos
jbe,pn
imul
ret
xor
sbb
push
add
mov
mov
pop
pop
dec
mov
addr16
mov
or
add
and
or
mov
xchg
jp,pn
xchg
gs
jle
in
dec
jmp
or
mov
shr
lahf
mov
stos
inc
data16
out
xor
ds
mov
add
xchg
popa
xchg
sub
dec
adc
insl
mov
xor
adc
ffreep
push
aad
add
xchg
sbb
aad
mov
mov
nop
xor
jmp
int
movsb
andl
gs
mov
clc
jmp
pusha
mov
push
cvtpi2ps
dec
jmp
sbb
sub
aam
xorl
xor
pop
sahf
pushl
push
sbb
rclb
loopne
aam
js
dec
or
and
mov
dec
test
arpl
std
imul
push
aad
inc
aam
or
lods
xchg
add
fiaddl
and
scas
std
lcall
sarl
xchg
adc
mov
push
stos
mov
xchg
loop
pop
in
repnz
pop
aad
les
push
jle
push
cmp
mov
push
mov
xor
es
js
adc
cmp
in
gs
insl
or
jmp
inc
dec
jnp
es
cmp
cwtl
lods
mov
fwait
mov
push
imull
fwait
mov
pop
jle
dec
inc
mov
ret
pop
push
insl
inc
stc
cltd
cld
into
dec
adc
das
es
addb
and
insb
mov
push
sub
jecxz
mov
pop
mov
repz
pop
jae
fs
stc
pop
sub
inc
jg
and
rcll
insl
jmp
push
ret
inc
mov
xchg
imul
jecxz
sub
cld
test
cmpsl
or
sti
dec
je
sub
rcl
xor
call
aad
mov
jg
data16
jg
sbb
inc
test
icebp
jge
out
aad
rcrl
adc
or
add
loope
push
hlt
sub
and
incl
movl
jo
cmp
push
and
fwait
adc
cmp
ret
pop
inc
imul
les
mov
pop
add
outsl
cwtl
sbb
mov
push
adc
push
mov
scas
lods
lods
cmp
xchg
cmp
pop
lret
lret
das
outsb
inc
loop
call
push
pusha
mov
adc
mov
sub
jmp
test
outsl
push
insb
adc
xchg
outsb
adc
add
stc
in
js
arpl
insl
push
cmp
ret
mov
sub
or
or
cmpsb
dec
inc
xor
pop
mov
aaa
mov
fidivl
xor
sub
insb
push
cmpsb
test
fldenv
cmp
sbb
cmpsl
pop
mov
dec
sysexit
sub
out
fsubrl
sarl
iret
fistpll
lret
mov
ficoms
imul
xor
jl
adc
sbb
leave
leave
inc
sahf
mov
pop
dec
out
sbb
jg
jp
jne
aad
popf
xchg
fldl
mov
xor
xchg
movsb
les
enter
push
jl
mov
insl
lret
dec
adc
cld
sub
cmp
lock
push
sbb
jp
xchg
lods
rol
jmp
add
mov
or
sbb
xchg
mov
arpl
xchg
push
dec
mull
xchg
mov
iret
sbb
pop
add
jle
dec
dec
jb
mov
jp
xchg
faddp
dec
stos
sahf
jnp
nop
popa
sub
pop
mov
or
pop
aas
out
mov
das
cwtd
fsubs
fidivl
push
pop
mov
dec
push
in
mov
clc
adc
ret
mov
lret
mov
push
repnz
add
jp
in
jnp
add
fstpt
mov
mov
mov
gs
aas
and
jl
rorl
int3
inc
xor
mov
mov
lds
lods
int
jb
repz
pusha
inc
sub
sub
push
xchg
xorb
cmovnp
add
out
in
xchg
movsb
xchg
daa
cmc
pop
in
xchg
sbb
std
andb
int
cmp
and
andl
inc
call
inc
je
maxps
inc
add
xor
sub
divl
cmp
pusha
cmp
jbe
sbb
mov
mov
sbb
in
shrb
dec
sbb
test
dec
pop
cmc
jle
or
cmp
or
sbb
ret
repnz
insb
test
lock
cmc
sahf
xchg
xchg
adc
fsubs
scas
cmpsl
sbb
dec
inc
cmp
movsb
cld
test
pop
sub
lret
scas
dec
lcall
mov
fucom
in
mov
sbb
stos
shrl
mov
inc
or
cwtl
ja
and
addb
mov
add
pop
mov
hlt
shl
push
or
push
jbe
cmpl
inc
aad
loope
movsl
sub
mov
les
pop
bound
xchg
cmp
jo
or
aam
jns
pushf
imul
add
xor
and
jo
jmp
add
out
mov
mov
subb
push
leave
and
iret
loopne
int3
test
pop
scas
push
dec
sub
fs
das
sbb
insb
inc
in
and
popf
jb
data16
xchg
subb
push
push
subb
xchg
cmp
rorl
cld
testb
lcall
pop
lret
shrl
sbb
sbb
or
fimuls
sub
sub
shll
or
aas
pop
sbb
ficompl
stc
out
xchg
aam
cmpsb
jmp
movsl
in
lret
dec
sub
mov
in
daa
psadbw
jecxz
mov
xchg
push
sbb
jmp
inc
push
cmp
in
inc
push
jl
shl
daa
lea
push
daa
jecxz
push
mov
lea
add
mov
inc
inc
aam
out
dec
orl
dec
ficoms
pop
scas
fldl
aam
clc
scas
outsl
iret
sub
insl
push
fwait
add
adc
jne
cltd
fiadds
push
pop
pop
movsb
push
fildll
add
inc
enter
push
mov
lock
lea
adc
aam
push
addr16
or
loopne
movsb
add
dec
call
mov
leave
das
out
cmp
shl
orl
jb
push
and
fsubrs
add
dec
enter
jl
daa
xchg
test
je
aaa
fstl
lock
je
cmp
addl
mov
dec
jne
cmp
or
dec
or
fwait
lock
insl
sbb
dec
mov
jg
ja
idivb
pop
xchg
divb
mov
mov
sbbl
mov
cmc
shll
call
sbb
mov
js
pop
xchg
lcall
sub
mov
int3
roll
lds
cmp
adc
add
ljmp
lods
repz
pop
dec
push
loop
add
push
scas
jbe
push
sub
xor
pop
dec
adc
adc
fbld
dec
or
movl
into
xchg
xchg
sub
pop
push
ret
or
cli
add
out
dec
push
sbbl
adc
inc
mov
sbb
loop
pop
adc
mov
and
xorl
sub
lods
mov
cmp
cmpsb
movsl
pop
icebp
pop
fbld
mov
js
insl
lods
jle
add
mov
adcb
sbb
fisubs
lock
das
cs
faddl
jle
clc
add
cmp
or
bound
xchg
insb
pushf
popf
enter
adc
xchg
pslld
add
aam
loopne
sbb
sub
sahf
fistps
negl
shll
pop
mov
movsl
push
xlat
lods
jne
aad
adc
push
xchg
ljmp
mov
ljmp
sbb
inc
pop
ret
inc
xor
in
leave
stos
jns
inc
xchg
lcall
xchg
add
sbb
fstpt
ret
dec
lods
jae
mov
insl
sbb
jo
lea
xor
dec
lret
cmp
imull
sub
xchg
xchg
sbb
loope
sbb
cwtl
xchg
sub
sub
mov
call
lock
mov
dec
in
sbb
jl
sahf
negb
mov
or
xchg
jnp
enter
mov
mov
sbb
mov
das
xor
jae
test
cli
add
cwtl
jl
ljmp
add
adc
adcl
stc
mov
outsl
jge
or
inc
hlt
mov
mov
push
lock
outsl
ret
ret
xor
hlt
mov
pushf
push
pop
jne
dec
push
jae
scas
sarl
push
enter
xchg
xor
out
int
jmp
mov
mov
pop
cmp
pop
fucomp
jecxz
in
cmc
xor
in
pop
sub
out
leave
dec
out
repnz
imul
out
cwtl
orl
xor
sbb
decl
shrb
or
arpl
or
inc
inc
push
in
stos
bound
int3
lahf
jp
mov
dec
aad
daa
xchg
add
aaa
cld
xor
jno
mov
cmp
fstl
mov
pop
xor
mov
cmp
xchg
popa
popf
test
push
clc
jle
ja
sbb
adc
scas
push
outsb
mov
mov
ret
push
jl
add
fdivrs
int
mov
das
pop
dec
xchg
push
mov
out
mov
sbb
arpl
push
mov
movsl
inc
nop
inc
mov
rorb
hlt
stc
fcoml
cli
addr16
add
or
cld
add
jge
in
repz
jae
jmp
cmpsb
aad
in
leave
das
cmp
adc
add
mov
adc
int3
mov
rorl
xchg
insl
sub
in
xor
lcall
in
bound
mov
pop
or
or
repnz
pop
aas
mov
insb
xchg
rcll
insl
pusha
enter
sbb
movsl
popa
repz
push
insb
inc
adc
imul
iret
aad
cltd
andl
dec
push
dec
dec
inc
cmp
sbb
cli
inc
fs
scas
pusha
cmpl
mov
jge
inc
xor
or
mov
or
or
and
data16
mov
aas
push
sbb
push
shll
mov
sub
jnp
iret
mov
inc
inc
push
adc
mov
cs
or
mov
mov
jecxz
cs
ljmp
adc
cmp
rcrb
inc
push
inc
data16
hlt
add
stc
jbe
fiadds
mov
sub
xlat
inc
jecxz
jbe
xchg
cli
mov
jg
aaa
jbe
cmp
push
jne
push
insl
insb
cmp
mov
mov
mov
test
push
ss
dec
subb
fldenv
xchg
scas
bound
testb
mov
push
push
pop
test
in
test
or
fnsave
jp
imul
mov
adc
shr
test
xor
mov
jg
add
add
into
nop
shlb
iret
mov
inc
mov
push
loop
stos
jb
loope
shl
pop
mov
outsl
mov
cmp
outsl
add
stc
test
pop
sub
cmp
xchg
sbb
mov
push
mov
cld
lcall
loop
jg
cwtl
imul
add
jmp
int
xchg
movl
enter
call
lcall
pop
mov
xchg
and
cmpsl
push
jmp
pop
xchg
loop
jecxz
pushf
xor
testl
int
mov
outsl
scas
dec
and
or
jb
mov
jg
jmp
jno
push
xchg
shl
pop
jbe
loope
jne,pn
mov
cwtl
sub
add
mov
add
cmp
loopne
fadds
mov
xchg
adc
inc
sbb
mov
pop
dec
xchg
cmp
inc
jecxz
sbb
mov
popa
inc
cmp
pop
out
pusha
pop
and
xchg
dec
icebp
outsl
mov
mov
pushf
and
ss
daa
cmp
loopne
mov
sub
sub
xchg
sbb
lods
jmp
jbe
inc
pop
ret
pop
fdivrs
jae
sbb
scas
clc
dec
push
stos
movl
in
cmp
test
popf
lods
popf
xchg
stos
js
lret
jge
xchg
xor
jne
jb
pop
or
xchg
pop
daa
cmp
mov
push
mov
sarl
push
sbb
sbb
cmp
dec
pop
xchg
jbe
xor
les
sub
lret
add
js
push
xchg
mov
aam
fldt
mov
lcall
and
lret
out
mov
test
xor
mov
leave
push
lea
xor
leave
lret
ret
jmp
dec
push
mov
lcall
test
inc
mov
xor
and
mov
test
jae
jmp
hlt
push
sbb
test
lock
call
ja
insb
jmp
dec
adc
sbb
cmpsb
jle
xor
and
fdivl
mov
fistpll
mov
cld
push
push
insl
arpl
rcll
popf
inc
out
in
scas
in
sbb
mov
hlt
mov
mov
outsl
out
test
sbb
outsb
mov
adc
hlt
xchg
sub
inc
push
add
lds
ljmp
fbstp
and
ror
mov
das
js
addb
mov
pop
sub
sub
xchg
andb
inc
inc
push
xor
pop
int3
xor
rcr
arpl
hlt
sarl
movsl
dec
mov
xorl
les
cmc
mov
repnz
sbb
jle
xor
nop
movsl
aad
cmp
push
cmpsb
lahf
mov
xchg
test
sbb
push
push
pop
or
insl
mov
adc
icebp
sub
jge
pop
shr
and
movsb
fsub
aas
rcrl
repz
out
mov
jg
inc
inc
inc
and
jo
push
mov
mov
andb
and
cmp
pop
je
add
inc
adc
call
cmp
stos
or
mov
mov
sub
rcll
add
mov
dec
das
add
add
xchg
fucomp
adc
pop
stos
cmp
pushf
jnp
dec
test
and
mov
adc
pushf
and
mov
or
dec
inc
dec
inc
jnp
data16
stos
test
push
jge
mov
stc
rclb
push
incl
inc
xor
rcr
ds
fcomps
mov
or
cmc
enter
pusha
stos
jmp
dec
fmul
das
arpl
call
xor
ljmp
fldt
movb
push
and
push
sbb
sub
jl
push
adc
int
pop
insb
fs
nop
adc
mov
fnstsw
into
or
and
jp
and
sub
sbb
and
adc
inc
shr
pusha
clc
clc
xor
mov
ds
xchg
cmp
insl
insb
dec
jnp
es
cmpsl
fisubl
cmp
jg
sbb
popf
imul
es
inc
loopne
scas
inc
loop
out
pop
mov
data16
and
xchg
xlat
lods
pop
push
mov
adc
jo
ljmp
xorps
movsl
push
stos
mov
dec
int3
adc
push
mov
pop
fmul
fs
sub
out
les
jns
scas
int
bound
movsb
sub
jns
push
sbb
ja
add
pop
bound
xor
lods
lods
hlt
mov
and
outsl
add
es
sub
or
jns
test
lahf
mov
jg
sbb
test
add
inc
cmp
rorb
es
sbb
mov
add
jl
push
inc
or
rorl
jmp
or
pop
xchg
scas
iret
dec
sbb
sti
mov
in
mov
es
adc
jns
lret
or
movsl
in
sbb
dec
pop
xchg
jae
sub
push
sbb
cltd
stc
dec
out
and
pop
or
jo
sub
nop
push
int3
xchg
imul
jno
mov
addb
cs
push
add
jmp
jp
jg
mov
mov
mov
mov
inc
fwait
add
pop
mov
rclb
lcall
testb
fdivs
mov
out
cmc
shll
lahf
loopne
push
stos
mov
mov
mov
pop
rorl
adc
gs
aas
mov
xchg
xchg
push
add
pop
push
add
outsb
andb
insb
jle
and
aad
cmc
shlb
aad
imul
dec
daa
ja
in
mov
add
mov
dec
jl
mov
add
sbb
push
mov
stos
xor
in
fcompl
jae
in
jbe
jg
push
adc
sbb
ss
out
jne
mov
add
cli
bound
jge
pusha
mov
cmp
inc
ret
fsubl
cli
mov
test
fidivrl
inc
mov
xchg
stc
scas
jecxz
test
ljmp
pop
test
outsl
xor
mov
rorl
inc
sub
mov
decl
cmp
cmpsl
addr16
movsb
pusha
pusha
or
mov
lods
adc
adc
fldl
loope
push
dec
jne
mov
push
push
jne
in
fistps
xor
in
fucomip
mov
stos
sbb
int3
cmp
es
mov
mov
sub
pop
into
xor
mov
xor
inc
ret
cmp
mov
mov
test
ret
push
cli
push
les
adc
test
adc
mov
add
cmp
add
xor
ret
xchg
inc
mov
push
scas
outsl
mov
push
adc
inc
mov
sbb
subb
jp
sub
lock
loop
inc
icebp
icebp
add
lcall
stos
ds
inc
in
adc
and
cmpsb
aad
dec
jo
jmp
rclb
mov
in
xchg
loop
push
insl
emms
xor
push
pop
fists
push
loope
lcall
roll
and
dec
sarb
dec
outsb
mov
jp
adc
mov
pop
push
jnp
xchg
hlt
pop
andl
mov
inc
test
mov
lcall
sub
jge
inc
cli
jnp
jo
jns
das
push
hlt
lods
mov
pop
mov
push
stos
sarb
iret
sahf
push
mov
pop
sub
cld
push
inc
mov
in
and
movl
fsubrl
push
lahf
inc
push
and
mov
push
xor
lds
mov
hlt
pop
inc
xorl
cmp
lcall
push
jg
test
pushf
mov
dec
add
into
shl
push
adc
sub
sbb
in
push
imul
ret
mov
xchg
add
pop
pop
sub
sbb
dec
mov
pop
add
sbb
jb
xor
push
jecxz
adc
push
sbb
hlt
dec
or
push
stc
lret
iret
mov
or
mov
push
sub
dec
push
xor
ljmp
xor
pop
xor
cmp
ljmp
aaa
sysexit
cli
lods
inc
mov
push
mov
add
cmp
xchg
mov
jo
idivl
fstl
mov
testl
repnz
fnsave
add
loopne
jnp
inc
mov
pop
lcall
rcrl
pop
pop
mov
movsb
aam
jge
in
data16
inc
add
mov
xchg
push
dec
testb
lea
push
mov
cmc
mov
fwait
mov
mov
lock
adc
insl
jo
stos
pop
cli
sar
or
ljmp
adc
jb
push
mov
cmpsb
cmp
hlt
sub
ret
xchg
inc
mov
cmp
sub
jne
js
jle
inc
hlt
and
ja
xor
ret
inc
sub
aad
sbb
lods
and
cs
test
out
mov
and
cmpl
fistl
jbe
movsb
mov
pop
gs
lahf
test
mov
xchg
sbb
mov
cmp
enter
push
ljmp
inc
pop
adc
jno
jb
cmp
dec
push
dec
jae
cs
mov
fmull
sbb
insb
and
rol
in
sub
jb
fadd
out
mov
lock
fs
mov
mov
inc
cld
mov
lcall
mov
aas
popl
fmull
mov
push
xor
mov
mov
pop
pop
fsubrl
mov
xchg
jb
pop
and
pop
rolb
inc
and
popf
arpl
popf
inc
roll
add
push
movsb
scas
mov
repnz
popa
xorb
cmpsb
insl
sub
xchg
sbb
mov
xchg
cs
adc
mov
cmp
enter
lds
jg
sbb
sub
stc
mov
push
mov
in
pushf
outsl
imul
mov
xchg
add
into
dec
inc
loopne
mov
cmp
push
mov
test
andl
cmp
lods
push
pop
fisttpl
insl
inc
pop
cmp
inc
cmp
mov
repz
mov
fldt
mov
test
bound
fildll
ror
pop
lret
clc
cmp
sub
dec
dec
fisubrl
cmc
jle
xlat
mov
neg
inc
and
or
cld
aaa
jae
insl
rclb
fstpt
ds
xchg
lds
push
gs
outsl
stos
jg
push
mov
rclb
ret
cmp
xlat
scas
dec
in
mov
inc
push
aaa
mov
sbb
jge
shlb
sub
mov
mov
gs
mov
fistpll
shl
lahf
xchg
aas
test
dec
ds
cmp
or
gs
enter
sbb
mov
mov
and
nop
das
mov
sbb
sub
push
sahf
outsl
mov
dec
push
sub
daa
adc
pusha
gs
mov
add
mov
sarb
dec
mov
lods
jecxz
cs
addr16
inc
into
sub
sar
adc
fildl
cs
dec
pop
stc
xchg
push
dec
mov
cmp
js
inc
lahf
pop
add
hlt
mov
out
test
push
nop
dec
pop
out
cltd
cmp
mov
mov
in
sub
adc
mov
cli
mov
movsb
push
incl
test
sarl
push
lcall
std
cmpsl
mov
popf
mov
out
aad
sbb
mov
stos
pop
dec
fwait
out
xchg
jl
stc
or
jae
mov
sbb
dec
push
enter
cld
int3
cmp
xlat
inc
sub
pop
aaa
popf
mov
jmp
sub
mov
ret
push
or
adc
loope
ja
dec
insl
cmp
xchg
jge
in
andl
insl
popa
push
mov
inc
shll
loopne
push
outsb
cmp
mov
or
mov
cmp
outsl
shrl
add
adc
jo
pop
into
in
rcrb
pop
pop
push
icebp
mov
add
dec
jecxz
mov
outsl
cmpsb
inc
leave
in
hlt
mov
sub
add
call
inc
cmp
daa
std
xor
add
movsl
clc
push
in
mov
scas
enter
cmpl
icebp
loop
pop
pop
aaa
popa
or
xchg
bound
mov
jmp
cmp
test
xor
lds
stos
cmp
and
out
xchg
xor
cmpsl
inc
fbstp
add
andb
lcall
pop
shlb
test
adc
push
mov
xchg
fldcw
hlt
test
rcrl
cmpsl
dec
push
mov
push
cmc
mov
dec
fisubrs
lcall
inc
cmpsb
fcmove
sarl
scas
xchg
inc
jne
jecxz
mov
sub
fiaddl
jl
scas
inc
cli
mov
and
out
int3
fsubr
andb
lods
jnp
adcl
imul
test
jmp
add
jg
fs
lods
xchg
es
mov
cmp
add
cmpsl
movd
int3
call
adc
mov
fcomps
js
pop
movsb
ficoms
mov
aas
adc
jp
jno
pop
iret
arpl
pop
mov
pushf
rcl
in
in
test
and
mov
pop
push
aad
cmp
xchg
outsl
mov
and
inc
pop
jmp
push
cld
mov
lea
movsl
mov
dec
je
scas
jl
roll
dec
sbb
jae
push
sbb
insl
insb
and
and
dec
ret
and
dec
mov
cmpsl
mov
dec
in
insl
cs
mov
scas
fnstenv
out
movb
mov
ret
sub
fst
sub
and
xor
pop
mov
scas
jbe
ss
adc
mov
repnz
orl
cltd
scas
lret
mov
imul
add
and
mov
int3
imull
popf
mov
push
sti
lret
inc
or
or
fisttps
xchg
mov
pop
dec
pop
and
cmp
outsl
or
jge
fnstsw
popf
inc
shrb
cmp
inc
imul
add
cli
stc
cltd
xor
mov
push
out
out
add
imul
shll
out
call
and
mov
rcll
roll
or
out
enter
fdivrl
push
test
int3
loopne
jne
mov
aad
roll
outsl
jno
mov
psubsw
dec
xchg
add
dec
dec
push
inc
rcl
mov
sbb
shr
stc
bound
adc
or
adc
inc
or
stc
lcall
mov
dec
in
mov
adc
std
dec
cmc
push
fmull
push
mov
fsubs
outsb
ret
jne
adc
test
pusha
mov
aad
mov
sub
fdivs
dec
shll
nop
lods
push
add
das
mov
fsubrs
sub
sbb
mov
fnstenv
lea
mov
and
push
sbb
xchg
mov
out
inc
pop
mov
leave
pop
mov
jbe
xchg
mov
push
out
lds
enter
fwait
test
sub
and
sub
xchg
std
cs
sbb
add
inc
xchg
mov
lcall
aas
jg
mov
pop
lret
cwtl
ficomps
xor
neg
iret
popa
ror
rclb
inc
ficoms
clc
cmpsb
fsts
sub
mov
mov
sub
xlat
xchg
dec
fsubrp
sub
repnz
push
sub
call
cmpsl
out
cmpsl
xchg
mov
jo
gs
dec
or
mov
call
dec
mov
mov
addr16
add
mulps
nop
jp
daa
cltd
jge
push
xchg
sub
mov
pmulhuw
pop
rcrl
out
cwtl
xor
fnstcw
fistpl
test
jg
jge
cmp
std
pop
iret
je
out
fwait
add
mov
lods
cmp
sub
adc
inc
xchg
jl
fwait
or
aaa
fistpll
and
cmp
mov
sbb
scas
arpl
and
lcall
movsb
jb
pushf
arpl
lds
les
rorl
leave
sub
call
out
lret
ljmp
popf
or
inc
aas
jb
bound
and
cwtl
or
and
mov
or
lret
shrb
movsl
loope
xor
dec
jg
push
push
xlat
jnp
dec
sbb
or
or
sarb
push
mov
or
sbb
out
jge
out
enter
inc
pusha
popa
repnz
mov
xchg
mov
pop
hlt
xor
sbb
das
mov
aas
cmp
test
mov
add
adc
popa
and
jmp
sbb
xchg
sarl
shl
lea
cmp
xchg
fwait
test
mov
scas
inc
cmp
sub
clc
int
lods
repnz
rcl
cwtl
pop
adc
in
inc
cld
dec
jge
xlat
adc
lods
outsb
jmp
aas
and
jno
and
sarb
cmp
popa
jns
loopne
cmp
xchg
jmp
cltd
jp
sbb
add
addb
or
pop
das
xchg
inc
scas
out
lret
cli
xlat
stc
sarb
inc
stos
jmp
out
das
fmull
ret
std
push
rol
xchg
je
pop
push
stos
nop
dec
cld
gs
push
je
mov
pop
dec
dec
sbb
mov
test
cmp
mov
in
xlat
sbb
xchg
jmp
jno
push
stc
testl
ja
and
xchg
and
test
dec
add
push
loopne
sbb
jbe
cmpsb
jno
aaa
xor
hlt
add
jno
dec
push
aaa
lock
adc
nop
jbe
cmp
ss
cmpsl
arpl
andb
push
mov
imull
das
jno
sbb
cwtl
pop
mov
movsl
arpl
adc
mov
fdivl
inc
ljmp
imul
and
jle
cmpsb
adc
inc
add
jbe
or
jne
test
or
insl
jmp
scas
adc
and
inc
bound
cmpsb
mov
cs
add
pop
jae
jmp
stos
jg
test
pop
popa
pop
hlt
push
popa
iret
sub
imul
into
mov
cmpsl
test
adc
outsb
cld
loopne
scas
js
arpl
xor
fidivl
jns
inc
xchg
test
mov
loopne
lods
pop
sbb
jge
mov
cs
pop
bound
push
cld
jo
jp
jnp
cmp
mov
mov
mov
stos
add
push
test
jnp
hlt
out
cmp
les
xchg
pop
xlat
test
pop
push
call
push
lock
mov
lock
fldt
inc
aam
out
xor
jle
movsl
imul
or
adc
in
mov
push
fiaddl
mov
push
movsl
and
cmpsb
push
loop
scas
lahf
je
mov
retw
out
xchg
mov
lock
xchg
imul
jecxz
test
arpl
mov
icebp
sbb
cwtl
clc
ds
dec
aam
adc
stos
pop
sbb
test
xchg
out
nop
lret
xor
jge
aam
xchg
call
mov
xchg
xchg
push
or
xchg
test
in
xchg
xchg
sti
xchg
mov
jbe
inc
call
and
dec
cmp
repz
add
inc
dec
mov
aas
aam
addl
sbb
inc
lcall
movsb
je
out
push
inc
fisubs
push
mov
pusha
adc
popa
mov
cmp
sti
xchg
js
into
push
push
cmc
sub
adcl
test
pop
jne
jle
in
mov
and
fwait
push
sbb
dec
mov
cmpsb
or
mov
sub
inc
scas
aaa
jmp
dec
inc
dec
push
insl
pop
rol
out
rorb
std
out
add
neg
hlt
popa
roll
mov
xchg
loopne
mov
jne
inc
cwtl
mov
xor
icebp
aaa
popa
cmovo
mov
inc
dec
pusha
inc
mov
inc
loope
adc
cwtl
inc
or
cmc
stos
push
cmp
mov
dec
sbbl
jmp
mov
lret
iret
leave
sub
je
sbb
cmp
ss
jne
call
pop
pop
mov
ret
in
jle
loopne
pop
xor
push
add
push
xor
fdivs
movsl
mov
mov
mov
jae
mov
lcall
iret
sbb
push
aas
insl
mov
loop
nop
popf
inc
adc
mov
dec
inc
push
gs
mov
fisttpl
iret
jg
insl
out
outsb
adc
jbe
add
mov
inc
sub
mov
in
mov
scas
xchg
loope
inc
mov
xchg
push
sbb
loope
dec
push
xchg
adc
cmp
and
xchg
xchg
inc
push
or
pop
cmpsl
dec
les
and
adc
cmp
push
mov
and
cmp
add
dec
xchg
daa
jp
loope
and
in
mov
and
jne
mov
add
out
and
cld
add
mov
mov
push
mov
cwtl
mov
pushf
into
or
outsl
lret
push
mov
mov
sbb
inc
xlat
dec
jbe
xor
in
pushf
shlb
sbb
mov
sbb
mov
sub
popf
jp
mov
add
xchg
push
jp
mov
ljmp
and
push
or
push
add
mov
cld
dec
or
cmp
lret
and
mov
popf
outsb
lds
fnstsw
sbb
cmc
das
pop
push
lret
jl
push
jle
stc
sbb
in
lret
insb
cwtl
in
out
xor
jnp
pop
sbb
in
stos
jae
aad
mov
cwtl
call
adc
xacquire
mov
leave
sub
clc
imul
sub
divb
rol
fldl
clc
jne
sti
push
and
inc
mov
mov
cmp
xor
or
repz
out
inc
sub
push
ret
rolb
mov
loopne
lret
aad
mov
sbb
je
push
adc
mov
inc
sbb
xrelease
cli
pop
push
dec
aaa
sub
add
sbb
sub
movsb
cli
enter
dec
jge
ret
fmuls
adc
fidivs
sbb
fdivl
push
gs
mov
push
cmpl
pushf
lods
in
into
push
cmp
pop
or
loope
adc
mov
or
scas
push
push
dec
dec
push
mov
je
pop
sub
pop
fldenv
dec
cmp
test
lret
ljmp
imul
xor
les
js
add
pop
mov
out
stos
pop
and
cmpsb
sbb
in
enter
bt
inc
push
jg
lahf
xor
add
cli
lret
sub
or
inc
mov
test
fisttps
repz
subl
inc
std
add
aaa
mov
repnz
insb
mov
pop
daa
lahf
mov
sbb
push
lea
clc
out
cltd
jmp
xchg
push
pop
dec
xchg
sub
adc
sbb
push
pop
pop
mov
sub
jmp
jns
inc
andb
addr16
fnstcw
mov
push
or
lcall
jne
push
push
mov
fwait
cmp
jecxz
imul
in
loop
jae
jo
mov
inc
push
stos
push
in
fstpl
dec
arpl
leave
inc
adc
dec
push
andl
ret
cmp
push
icebp
into
push
mov
rcll
pusha
cmp
push
movsl
sahf
push
mov
xchg
xchg
add
out
mov
xchg
jno
data16
sub
cwtl
mov
outsl
mov
enter
jnp
mov
xchg
arpl
loop
push
mov
push
push
scas
and
mov
imul
mov
dec
lret
push
push
insl
jae
pop
mov
sub
pop
push
xor
xor
dec
mov
ljmp
push
xchg
jb
sub
sti
push
jns
xlat
sub
mov
cmp
dec
loop
out
jns
push
adc
shll
pop
repz
lea
mov
and
cmpb
movsl
dec
jo
int3
shlb
jl
sub
sarl
imul
push
sahf
dec
flds
jl
pop
inc
lcall
stos
and
lahf
repnz
faddp
cmp
lcall
inc
inc
je
xor
push
sbb
push
push
sti
rcrb
lds
loopne
int3
aam
push
sub
fs
outsb
mov
and
call
ret
xchg
inc
mov
mov
daa
cmpsb
cmp
rorl
test
or
and
ret
mov
scas
repz
repz
bound
aam
ss
sahf
jne
jle
rclb
jle
pop
imul
es
scas
into
stos
repnz
xor
enter
scas
jl
xchg
outsl
xor
arpl
xor
bound
adc
rorl
mov
rcrb
cmc
stos
ljmp
jb
xchg
les
mov
pop
rcrl
not
sub
data16
aas
cmp
cmp
sbb
fstps
les
fsubrl
adc
jp
mov
mov
and
test
xor
clc
data16
sarl
and
popa
xchg
aad
adc
sar
test
shlb
jg
mull
and
adc
push
push
ret
dec
lds
push
loop
dec
inc
xlat
lea
push
jns
jne
mov
mov
and
shl
jbe
pop
cwtl
popa
push
stos
push
dec
fcomps
adc
jmp
sub
mov
sbb
addr16
rep
loopne
push
dec
cmp
scas
adc
lahf
xor
in
add
mov
mov
and
push
in
add
in
jo
sbb
add
es
pop
mov
lds
cwtl
sub
adc
jg
xlat
dec
cmp
xchg
xchg
out
stc
pop
add
add
dec
jp
fistl
scas
add
out
fists
xor
ja
push
mov
lods
cmp
pushf
xchg
shrb
flds
sarl
push
push
push
jmp
jp
stos
xchg
cmp
pop
cmpsl
pushf
popf
and
jae
jecxz
sub
dec
push
push
iret
jbe
pop
add
mov
sbb
xchg
sti
andb
mov
push
cmp
lea
pop
pushf
xchg
mov
cmpsl
mov
icebp
xchg
in
push
lret
pop
test
dec
mov
dec
or
inc
or
xor
push
xor
scas
fimuls
mov
cmp
pop
lcall
cmp
in
icebp
cmpsb
lods
stos
int3
je
outsl
push
fnstsw
test
jnp
add
shl
cld
xor
in
push
jnp
psubq
mov
lret
sbb
int3
dec
dec
inc
test
pop
sbb
in
loope
lcall
mov
push
mov
pushf
test
mov
xchg
push
xchg
mov
leave
pusha
xchg
lods
loopne
popl
js
add
xchg
std
add
push
popf
or
or
in
jg
pusha
mov
fsubr
sbb
cmpsb
out
fbld
and
and
movsb
push
pop
push
inc
pusha
orb
mov
loope
mov
nop
icebp
neg
arpl
push
mov
sarb
jno
or
je
push
inc
or
clc
iret
roll
or
mov
xchg
call
jmp
sub
sbbb
cmpsl
add
dec
and
dec
fldenv
dec
mov
stos
iret
scas
ss
dec
cmpsb
addb
dec
dec
add
loope
addr16
mov
mov
dec
dec
xchg
popa
gs
xchg
sub
loop
xorl
aaa
sbb
add
mov
pop
aaa
andl
das
cmp
outsl
mov
rcrb
add
pop
mov
movsl
cmpsb
jmp
dec
mov
lret
ljmp
lds
sahf
add
inc
cltd
ja
jo
stos
xchg
test
xorb
fstpl
mov
pop
mov
sbb
int
leave
test
es
sub
mov
cmp
mov
mov
pop
loopne
cld
jae,pt
in
cmpw
sbb
mov
fs
pop
adc
xchg
icebp
cmp
xor
mov
mov
adc
arpl
rol
push
jno
aam
enter
cmpsb
inc
xchg
dec
scas
sbb
int
dec
mov
and
sbb
or
xor
in
mov
insl
sbb
xor
sbb
and
push
aas
imul
mov
push
push
inc
dec
pop
jmp
lods
sti
jae
test
mov
inc
std
adc
cmp
pop
mov
dec
ror
je
je
stos
stos
cmc
lret
adc
cs
ljmp
insl
dec
sbb
and
aas
out
lds
sub
inc
cmp
xchg
das
jecxz
shl
call
test
mov
push
xlat
mov
xor
push
int
or
iret
mov
notl
test
mov
sub
addr16
pop
cld
cmpl
push
cmp
dec
mov
and
push
fdivs
imul
jle
add
lock
dec
call
outsb
cmp
out
cmpsb
add
and
lock
lds
jno
push
mov
xchg
or
out
imul
ret
in
pop
push
mov
jb
insl
add
and
ds
mov
les
dec
jecxz
test
lahf
insl
mov
adc
cmc
sahf
lock
adc
in
scas
pop
pop
int
lahf
pop
std
lods
mov
cmpsl
xchg
or
pop
dec
pop
aas
or
xchg
in
and
or
test
jg
fildll
xor
vmovaps
and
cli
int3
adc
push
push
stos
dec
punpcklwd
fwait
xor
pusha
aaa
cwtl
data16
xor
mov
aaa
push
cwtl
mov
ffreep
push
sbb
cli
mov
sbb
sahf
jmp
lret
in
mov
jge
cmp
jae
ss
insl
mov
loopne
shll
leave
sbb
jl
out
and
xchg
sbb
fwait
iret
and
lahf
cmp
push
mov
dec
iret
stc
push
ljmp
mov
push
xor
fwait
jb
and
inc
ss
mov
xor
ret
jno
imul
push
pop
jns
sub
loope
mov
jmp
or
sub
jnp
je
add
mov
lret
sbb
adc
xchg
faddl
fcoml
xor
and
iret
inc
xchg
test
cmpb
ds
popf
out
pop
jl
call
ja
pop
flds
imul
in
sub
dec
xchg
scas
mov
outsl
lret
loop
adc
fwait
aad
xchg
insb
dec
jg
in
adc
pop
pop
xchg
fisttpll
repz
inc
jb
cmpsl
mov
xor
les
cs
xor
or
and
jmp
ret
popa
jecxz
mov
out
lds
fsts
daa
push
xchg
ret
cltd
subl
rol
xor
fmuls
pop
sbb
test
cmp
sbb
leave
jecxz
add
clc
add
and
shl
sub
inc
hlt
ret
xor
insl
aam
cltd
lods
les
cli
js
jp
push
pop
outsl
xor
pop
mov
xor
repz
stc
jnp
mov
sbb
inc
pop
cmp
fistl
mov
pop
mov
mov
pushf
jl,pn
pop
loopne
stos
and
aas
inc
adc
jge
and
push
rclb
mov
xor
pop
mov
in
push
push
jge
or
lea
pop
out
push
sti
mov
add
rclb
mov
pop
mov
hlt
sbb
xor
in
jecxz
or
cmp
push
negb
ret
out
cmp
jno
xchg
ljmp
mov
push
sti
dec
pop
cmp
xor
inc
lea
jno
lods
lret
clc
popa
push
rorb
fdiv
sahf
dec
pop
push
rcll
jmp
add
rclb
lea
loope
scas
add
scas
mov
popa
push
pusha
mov
mov
cmp
call
insb
fs
mov
mov
addb
xor
mov
mov
stc
push
jge
and
xchg
push
push
imul
jne
lahf
and
adc
gs
jmp
or
xchg
xor
mov
add
jecxz
push
or
xchg
adc
add
xchg
inc
rcl
ds
mov
ja
and
adc
xor
mov
pop
outsl
in
dec
dec
and
cmp
data16
xor
or
mov
insb
jp
sub
out
xchg
or
sbb
cmp
mov
outsb
jl
mov
sbb
scas
fidivrs
jle
fldenv
test
inc
or
lds
push
movsb
cld
adc
pop
fs
popf
xchg
or
mov
popf
test
add
mov
inc
push
mov
pop
inc
jns
pop
sbb
dec
jo
enter
jecxz
or
dec
xor
int3
push
les
jecxz
mov
pop
sbb
loopne
ljmp
mov
out
push
ret
dec
xor
lahf
fisubs
jns
mov
jb
mov
fs
cmp
ljmp
sbb
lock
aad
inc
ficomps
fiadds
push
inc
push
fisubrl
xchg
mov
mov
and
lcall
rcrl
popf
cmpb
mov
stos
ror
pop
lea
int
cmp
push
aas
sbb
sbb
test
cmpsl
sub
mov
cmpsb
add
push
mov
and
das
and
sbb
cmc
push
out
ret
and
jp
mov
mov
cltd
jno
mov
adc
lret
and
aad
mull
aas
jge
inc
push
jl
call
cmp
insb
daa
add
enter
pop
adc
imul
test
sub
sbb
ljmp
sub
mov
jbe
inc
dec
add
pop
js
add
and
cld
subl
fldenv
icebp
cmc
in
jnp
repnz
in
cwtl
shll
fdiv
pushf
repnz
ror
mov
je
jecxz
jns
dec
lds
pop
push
arpl
in
int3
inc
in
daa
xchg
fsubrl
sbb
cmpsb
pop
div
inc
push
and
stc
mov
testl
ss
cli
jae
mov
jcxz
jecxz
mov
pop
ja
pop
int
mov
mov
xor
lret
inc
fs
mov
imul
cmpsb
jno
cmc
test
out
aad
sbb
jmp
outsb
ljmp
pop
and
daa
stos
mov
inc
les
push
pop
repnz
xchg
sarl
mov
jo
xchg
pop
test
cld
or
or
pop
mov
movsb
push
dec
jnp
mov
fiaddl
pop
xor
add
testb
cmc
out
sub
addb
mov
lret
sbb
fwait
mov
cmp
in
or
mov
cmpsl
push
fwait
inc
xlat
and
and
ja
les
xor
dec
xor
jmp
jbe
and
filds
sub
sbb
js
mov
pop
movsb
sbb
pop
fsubl
and
push
call
dec
lds
sbb
adc
enter
sub
int
pusha
dec
inc
jle
in
xchg
dec
sbb
inc
int
jbe
loop
idivb
scas
adc
js
stc
push
adc
leave
and
sar
mov
cmpsl
mov
cwtl
xor
fidivl
negl
clc
in
or
xchg
lock
outsb
fs
sbb
call
mov
sbb
add
enter
in
xor
pop
test
cld
or
shll
mov
mov
pop
cmp
mov
sub
outsl
mov
les
xchg
cltd
push
sar
dec
jnp
jecxz
nop
outsl
mov
xor
loop
and
outsl
stc
add
pop
jmp
adc
scas
jge
add
adc
out
mov
movsl
in
jl
cmpsl
fisubl
into
ret
push
lods
lret
stos
jbe
cs
cmp
dec
mov
mov
cmp
dec
pop
mov
jge
or
subb
sub
xlat
xor
xchg
stos
lds
mov
scas
mov
sarl
rcrb
lret
rolb
cli
pushf
popa
inc
jg
aas
mov
mov
mov
mov
enter
cs
jg
imul
test
js
gs
cli
dec
daa
call
push
daa
mov
xor
sub
mov
xor
das
notl
in
insb
arpl
pop
lcall
or
mov
push
cmp
sbb
jmp
out
js
scas
xor
fildl
push
push
cmpsb
dec
mov
pop
test
push
arpl
xchg
xor
std
bound
cmp
std
mov
and
pop
imul
sar
aas
sbb
sub
mov
in
pop
jecxz
sbb
sbb
cwtl
jo
fisubs
add
popa
dec
cmc
sahf
jno
mov
orl
call
inc
mov
pushf
add
dec
scas
data16
mov
pop
jp
faddp
push
f2xm1
mov
xchg
fstl
push
in
push
or
or
mov
int3
jae
std
fcoml
decb
mull
test
push
push
enter
imul
pop
lea
popf
bnd
imul
jne
lock
add
xchg
int3
dec
pusha
cld
testb
mov
insb
push
sbb
mov
stos
cmp
inc
pop
xor
mov
mov
mov
std
stos
iret
dec
jno
shlb
jb
or
mov
add
inc
xor
jno
adc
insb
lahf
outsb
scas
and
push
dec
mov
dec
pop
fcomps
in
scas
adc
push
inc
adc
push
mov
push
js
lods
jecxz
cli
out
jecxz
insb
orl
inc
scas
testb
pop
les
add
ret
or
push
aam
jb
add
lret
pop
std
dec
enter
adcb
xchg
jp
nop
jbe
xchg
xchg
in
sbb
out
js
sahf
jle
cwtl
movaps
out
mov
jne
adc
into
xor
fwait
pop
fsubrl
lds
cmpsl
pop
out
test
xchg
sub
inc
shlb
push
xchg
scas
mov
push
scas
lock
push
inc
test
lret
lret
cmp
add
gs
xchg
push
jle
leave
data16
cs
pop
xor
jmp
cmpb
popf
jb
xor
sbb
or
xor
leave
push
nop
call
jmp
push
test
sahf
fdivl
imul
ret
scas
dec
pop
mov
or
mov
cmp
mov
mov
xchg
cld
inc
add
push
pop
push
push
pop
and
sub
mov
or
mov
scas
push
push
int
xor
pop
inc
mov
xchg
mov
mov
dec
sahf
push
neg
xchg
push
lret
push
mov
lret
ljmp
mov
jb
arpl
jne
int3
add
mov
in
mov
cli
xor
xlat
push
daa
inc
xor
xchg
and
cmp
int3
sahf
dec
lahf
inc
xor
or
cmp
add
and
sarl
sti
dec
sbb
or
lods
imul
mov
inc
mov
popf
shr
lds
div
and
shrl
pop
and
sbbl
and
lret
sbb
mov
inc
push
out
in
xor
inc
shrb
into
test
lea
daa
mov
scas
mov
xchg
push
or
out
nop
sub
jns
adc
mov
xchg
jno
push
dec
dec
xchg
sub
push
testb
insb
push
mov
pop
cmp
add
lock
push
mov
mov
adc
daa
mov
into
adc
in
push
repnz
inc
xor
stos
jecxz
js
sbb
adc
loopne
sbb
add
mov
enter
rcll
or
sub
dec
imul
sub
sub
xor
fcomip
iret
hlt
xor
fwait
movsb
in
push
out
mov
pop
dec
aaa
xchg
adc
xchg
sti
loopne
iret
jno
mov
pop
pop
xchg
sbb
roll
shll
repz
cmc
rcrl
adc
ret
add
ljmp
jno
int3
sbb
insb
pusha
push
sbb
fildl
fildll
mov
cwtl
push
mov
subl
fwait
repnz
mov
add
jle
or
pop
out
ds
lahf
sub
mov
test
stc
movsb
jne
out
or
cld
add
cmpsl
mov
cmp
mov
pop
popf
rol
imul
inc
adc
mov
nop
xor
mov
add
lods
lea
shlb
xchg
push
jecxz
pop
jbe
pop
push
repz
fnstenv
ret
add
outsl
imulb
push
fwait
mov
adc
push
fnstcw
jns
in
adc
gs
sti
les
xchg
or
or
sbb
cvtpi2ps
ds
pop
mov
int3
dec
iret
dec
js
aad
popf
inc
sub
pop
xchg
and
jge
mov
mov
jne
mov
add
fcomi
dec
in
sti
ja
dec
or
pop
jge
test
or
sub
xlat
push
push
leave
jb
jmp
insl
lahf
cmpsb
subl
and
cmp
xchg
jnp
fistl
cmp
sub
imul
xor
pop
repz
out
loop
sbb
lahf
push
es
ljmp
addr16
inc
push
out
ljmp
mov
xor
adc
out
xchg
pop
or
pop
cmp
ret
stc
test
mov
das
cwtl
xchg
inc
lea
sub
outsb
and
dec
es
push
jnp
jecxz
dec
jg
inc
cmpsl
jmp
dec
arpl
ja
jmp
jo
leave
test
lea
mov
and
mov
fndisi(8087
or
xchg
jbe
cmp
imul
xchg
adc
or
cmp
cmpl
adc
pop
jg
rcll
or
mov
pushl
stos
push
mov
fdivl
mov
lock
fadds
sarb
in
pop
mov
out
popa
sarb
inc
lock
mov
ja
pop
adc
in
lret
mov
push
jae
sbb
lds
std
add
add
data16
mov
or
push
filds
pushf
dec
std
sahf
mov
mov
iret
out
mov
clc
mov
and
enter
outsb
lods
and
mov
push
outsb
mov
jne
pxor
in
add
daa
xchg
hlt
pop
in
stc
jg
lret
das
pop
adc
mov
mov
mov
and
nopl
pushf
insb
mov
leave
fldcw
jecxz
mov
pop
cmp
dec
cmp
mov
cmp
icebp
arpl
jb
and
mov
mov
addr16
and
adc
xor
ljmp
mov
cmp
outsl
adc
fwait
sub
enter
ss
loop
dec
or
sub
out
enter
fs
and
adc
rol
push
jbe
dec
xchg
rol
sub
cmc
cmp
popa
push
jnp
imul
sbb
push
add
enter
ljmp
imul
cmp
sbb
pop
inc
pop
fnop
testb
mov
fnstcw
push
and
daa
hlt
lock
jnp
push
fistpll
fnstsw
fidivrs
test
mov
sti
shr
push
ds
xchg
pop
mov
lahf
shl
in
dec
push
inc
inc
jbe
movsl
dec
xchg
add
cmpsl
adc
icebp
mov
fcoms
mov
mov
pop
and
cs
test
pop
daa
mov
dec
inc
pop
inc
or
outsl
or
dec
sub
push
inc
test
cwtl
cltd
mov
lahf
push
add
lods
mov
sarl
pop
stos
jl
in
xchg
jg
test
pushl
cs
ret
arpl
push
adc
mov
jne
add
cmp
xchg
mov
adc
sbb
push
mov
push
pop
push
push
push
jmp
xchg
gs
mov
std
jmp
sbb
pop
mov
ret
ljmp
xor
dec
mov
bnd
test
je
jno
sbb
xchg
jl
mov
cmc
in
das
repnz
jbe
jnp
nop
push
test
cmp
sub
rclb
mov
sub
push
cmc
pop
lret
es
sbb
sbb
scas
dec
push
shlb
jb
fists
cmp
xchg
jg
out
mov
xchg
outsl
test
xlat
mov
mov
jo
daa
dec
rol
sbb
or
mov
jo
sub
arpl
sbb
push
xchg
jae
push
adc
cli
fldl
pop
push
xchg
rcrl
stos
loop
test
fs
jl
gs
fcoms
daa
or
mov
xchg
jecxz
out
ds
pop
sarb
mov
pop
push
sub
popa
sbb
adc
ret
mov
fldpi
stos
decl
daa
aam
ja
pop
cmp
ss
loop
sub
ja
test
inc
pop
lret
jge
adc
and
andb
cwtl
cmpsb
mov
outsl
cltd
mov
inc
in
xor
lcall
and
into
ljmp
jno
sbb
inc
lea
aas
test
xor
push
ret
push
les
mov
icebp
and
lock
into
lea
nop
jecxz
sbb
aas
jb
pop
sbb
pop
shrb
cmpsl
rcrl
test
add
adc
movsb
in
aad
jbe
hlt
sub
mov
xchg
cwtl
xchg
mov
addr16
fnstenv
fimull
jno
inc
call
pop
or
adc
outsl
scas
dec
push
cmp
jecxz
push
das
mov
xchg
aaa
es
es
popf
sahf
mov
out
sub
xchg
mov
arpl
add
cmc
jp
lods
mov
mov
mov
cmp
xchg
pop
shll
mov
pushf
and
ds
mov
je
push
and
dec
icebp
push
ficompl
outsl
mov
sti
inc
daa
test
push
in
orl
call
movsb
push
ds
jp
js
in
add
xchg
jl
cmp
jmp
enter
jne
cmpsl
stos
pop
lds
sub
mov
mov
mov
cld
sub
mov
sbb
outsl
leave
jnp
and
mov
and
adc
int3
cmp
pusha
pop
test
or
xchg
mov
ss
addr16
insb
mov
fwait
cmp
stos
ret
or
sti
lret
or
cwtl
in
cltd
std
mov
or
jmp
popa
pusha
pusha
mov
xchg
sbb
cmp
add
push
and
ret
mov
pop
mov
mov
aam
jnp
mov
push
sub
pop
sbbl
call
and
pop
pop
jbe
or
stos
jp
in
mov
inc
addr16
imul
push
jns
out
into
ficoms
in
lods
inc
les
mov
test
jl
dec
fidivrl
lods
xor
test
pop
stos
popf
mov
cmpsb
sub
mov
xchg
xor
jnp
data16
in
sbb
or
dec
cmp
xlat
lock
fwait
mov
lds
sbb
add
jae
scas
add
mov
lcall
sbb
mov
test
or
xchg
cmp
push
addr16
fucomp
fldcw
lods
stc
and
dec
lcall
clc
fstl
fnstcw
jo
gs
cmpb
jmp
fistl
scas
cld
cli
fadds
dec
adc
mov
cmpsb
cmpl
rolb
or
leave
loopne
push
cmp
xor
and
out
xchg
rorb
or
dec
adc
aas
mov
scas
icebp
ret
lret
stos
jo
int
mov
rorb
fsubr
pop
cmp
call
push
push
adc
push
pop
fdivrl
jmp
adc
lahf
xor
and
mov
push
cltd
mov
xlat
xchg
inc
mov
mov
pop
cmp
fmuls
dec
shl
ret
push
scas
inc
insl
insb
rolb
mov
mov
lock
adc
pushf
sub
jb
or
mov
ljmp
add
sub
test
subb
or
push
mov
js
lods
mov
mov
repnz
gs
cmpsb
popf
dec
push
fiadds
xchg
jmp
sbb
xchg
jg
das
or
push
jbe
sub
xchg
test
popf
ret
xchg
sub
loopne
outsl
or
mov
scas
fisubl
sbb
mov
pusha
testb
arpl
rolb
jbe
enter
not
fimuls
xchg
xchg
add
in
pop
xchg
test
adc
test
int
mov
xor
imull
repnz
clc
adc
cli
hlt
adc
cmp
dec
push
addr16
pop
sbb
mov
push
push
cs
ret
cltd
fsubs
in
aad
mov
scas
xor
mov
outsl
adc
pop
out
push
xchg
adc
lret
xchg
mov
fcoms
testb
icebp
fldt
inc
push
popa
std
xor
sub
adc
dec
icebp
lcall
mov
push
es
dec
iret
mov
aas
sbb
fwait
sub
loopne
or
jbe
inc
lds
jo
fs
divl
je
mov
jne
shl
movsl
xchg
pop
adcb
mov
mov
enter
pusha
sarb
cld
and
in
mov
js
xchg
ss
pushf
imul
mov
clc
and
pusha
adc
xor
pop
sub
push
inc
imul
sarb
bound
int3
fs
neg
gs
dec
repz
out
enter
test
int
arpl
inc
jle
inc
in
xlat
out
mov
pop
iret
mov
lds
mov
inc
call
pop
sub
fsts
push
mov
insl
add
cmc
and
fdivl
aas
mov
mov
xorb
in
push
scas
push
dec
sbb
pop
lods
and
jae
jmp
data16
mov
sbb
je
movsl
sbb
outsl
sbb
test
dec
jbe
and
pop
cmp
push
or
nop
pop
pop
sbb
push
add
xor
sbb
pop
scas
xchg
and
mov
ss
xchg
jno
scas
lret
cwtl
and
xor
enter
stos
xchg
xor
ficomps
mov
dec
lods
int
call
xor
fildll
andb
adc
xchg
jnp
insl
mov
cmp
test
or
mov
ljmp
fsubl
jecxz
jecxz
fsubr
fwait
out
dec
dec
mov
inc
jp
xorb
or
jecxz
sbb
fsubl
push
or
sbb
pop
and
dec
cmp
add
mov
xchg
mov
add
xchg
and
jns
and
icebp
jecxz
push
out
int
inc
lods
or
push
pushf
and
into
xor
add
popf
adcl
fimull
xorl
mov
jno
push
jb
std
mov
fdivrp
pop
lods
aaa
push
or
cs
call
mov
mov
arpl
dec
or
add
jecxz
pop
sahf
inc
push
scas
sub
std
cltd
out
scas
lcall
mov
jnp
roll
rorl
ja
pop
dec
cmc
leave
inc
movsl
add
mov
stos
adc
out
cmp
pop
dec
pop
pushf
call
arpl
mov
int3
and
add
fimull
xchg
pop
lea
cli
in
ret
stos
gs
jbe
xchg
jle
cltd
fnsave
sub
gs
std
int3
in
ljmp
arpl
push
xor
sbb
cs
pop
rcr
fnsave
push
push
gs
dec
stc
pop
subl
sub
mov
lahf
cmp
inc
and
lret
pop
mov
movsb
cmpsb
jge
fisubs
push
xor
inc
ficompl
mov
rcr
inc
int3
insb
leave
add
pop
shlb
mov
rcll
push
dec
repz
jl
test
jnp
xlat
mov
mov
cld
inc
sub
gs
mov
js
test
inc
in
push
pop
movb
test
xlat
in
xorb
rcll
cmpsl
cli
mov
xchg
and
add
mov
gs
add
xor
xchg
push
ret
jecxz
jno
leave
aam
nop
aam
jp
ja
stos
pop
mov
inc
outsb
adc
aam
fbstp
dec
in
jg
jae
and
andl
sub
iret
mov
dec
mov
push
mov
dec
pop
gs
repnz
test
inc
sub
jl
jg
ss
fsubr
sub
push
hlt
pop
out
mov
lock
mov
data16
pusha
adc
dec
pop
adc
repnz
fwait
insb
pop
test
jp
vhsubps
mov
push
xor
in
and
bound
enter
xor
lahf
cld
mov
ret
popa
or
sbb
jle
je
lea
add
pusha
mov
lret
mov
dec
pop
enter
shlb
loope
mov
pop
les
imul
in
out
mov
pop
jecxz
out
sbb
aad
aam
les
dec
cmp
iret
repz
in
pop
dec
mov
jno
mov
mov
stos
inc
mov
push
mov
inc
sbb
mov
xchg
xchg
or
pop
jmp
dec
sbb
push
imul
inc
mov
std
mov
or
pop
icebp
pushl
dec
mov
jns
cmp
cmp
lahf
or
nop
adcb
lock
in
fcom
push
cmp
adc
mov
add
pop
repz
or
test
imul
sbb
xor
or
repnz
fiadds
imul
rcrb
sahf
popa
dec
lret
ds
rcr
jne
add
add
cmc
add
xchg
cmp
mov
mov
outsl
sbb
test
inc
notl
ljmp
dec
cmp
test
scas
in
or
and
mov
arpl
fcomi
adc
mov
test
nop
cmp
clc
dec
outsl
jecxz
jge
pop
mov
cmp
pop
xchg
rcrl
sub
mov
unpcklps
inc
jb
pop
mov
popa
jl
sub
stc
xchg
xor
or
imul
dec
inc
mov
inc
jg
test
sub
cmc
sbb
sub
push
xchg
mov
add
int
dec
rclb
push
jmp
xor
mov
popf
popa
dec
push
insl
cmp
shll
dec
fldl
loopne
xchg
pop
sbb
jmp
jb
pop
rorl
lea
mov
xchg
sbb
lods
inc
pop
sub
fsts
ds
sbb
xchg
clc
scas
jne
out
cmp
daa
in
and
push
or
add
cwtl
fldenv
aad
push
sbb
incb
pusha
fisttpll
or
or
imul
fwait
aam
push
jle
cltd
shrl
loop
das
add
shlb
push
mov
rol
push
dec
mov
psubusb
ficomps
xchg
mov
cmp
inc
std
mov
and
mov
fildll
out
mov
xchg
xchg
xchg
or
mov
or
jne
cmp
aas
jns
jo
les
ret
aam
mov
push
jle
stc
pop
push
mov
sti
pop
and
push
adc
jge
cwtl
test
xor
push
mov
push
push
rorl
fdivrp
and
inc
sub
pop
sbb
jg
add
fildl
inc
xor
test
cmp
mov
ret
mov
push
and
jno
ds
test
or
and
push
hlt
add
jnp
test
adc
and
xor
xor
mov
aad
lret
fisttpll
adcb
mov
movsb
ja
pop
movsb
or
lods
add
fcomps
xchg
or
ds
std
xchg
dec
ss
lret
and
push
stos
aaa
fsubrs
in
xchg
jno
decb
add
lds
adcl
aad
pop
add
pop
xchg
push
imul
mov
scas
fdivrl
rcrb
push
adc
je
icebp
out
push
push
adcb
loop
xchg
pop
pop
aas
xchg
fiaddl
sbb
enter
inc
mov
out
popa
ljmp
sub
mov
arpl
lds
add
ds
push
popl
mov
jbe
lret
pusha
fcoml
aad
jns
es
popf
mul
push
sbb
out
sbb
je
lcall
cs
mov
adc
shlb
cmpsb
sarb
pcmpgtw
addb
pop
jns
jne
sub
jecxz
cmpsl
es
test
push
push
fstpt
outsl
std
in
xor
jo
jp
dec
mov
rorb
scas
pop
out
xor
stc
leave
pushf
cwtl
adc
outsl
out
cmp
fwait
add
test
sbb
jbe
adc
rcrl
test
rcrb
and
inc
sbb
push
out
out
into
repz
clc
cld
shll
push
inc
xor
dec
sbb
pop
scas
dec
arpl
xchg
orl
mov
fs
dec
mov
popf
xor
pusha
lock
nop
daa
and
mov
testb
dec
pop
push
movsl
orb
and
pop
lcall
adc
fcomp
xchg
and
mov
sbb
push
sbb
add
inc
adc
jns
lret
ss
xor
sbb
adc
xchg
sbb
dec
iret
scas
push
xchg
push
mov
fdiv
addr16
mov
imull
xor
cmp
test
dec
ja
scas
cld
in
lods
push
jmp
inc
into
pop
sarl
cmp
gs
andb
fidivl
shll
clc
mov
push
xor
xor
cwtl
fisttpl
mov
mov
daa
lea
movsb
inc
std
sbb
and
dec
mov
imul
and
pop
outsl
mov
sub
cmp
and
int
fisubs
pop
sub
jle
cmpsb
mov
add
dec
sub
cs
pop
fs
mov
mov
cmp
fisttpl
and
add
loopne
ss
add
icebp
mov
out
pushw
cmp
mov
mov
inc
mov
testl
cmp
and
and
loopne
rcrl
push
push
cmpsb
leave
movsb
cmpsl
push
out
xor
mov
inc
add
js
push
stos
pop
loopne
loop
pcmpgtd
ss
cli
inc
into
stc
pushf
clc
xchg
push
dec
cmp
mov
pop
sub
inc
addr16
sub
call
xchg
sbb
imul
dec
jge
sar
sub
sbb
push
sub
nop
negb
push
xchg
mov
sub
ja
xchg
and
es
mov
daa
mov
lret
sub
repnz
gs
scas
add
das
add
sbb
mov
testb
jle
inc
sub
push
sub
lahf
mov
ret
cmp
adc
mov
mov
test
mov
fwait
daa
filds
sub
sbb
mov
sbb
dec
lods
or
ret
or
in
cltd
lds
xor
sahf
pop
xor
mov
mov
xchg
cli
sbb
inc
pusha
cmp
loope
adc
leave
push
xor
enter
stc
jecxz
jg
into
push
mov
mov
arpl
into
lret
ror
out
jno
pop
jmp
aam
lods
and
insb
imul
pop
pop
cmp
or
xchg
iret
push
adc
push
das
pop
sbb
lahf
add
fwait
aaa
jae
jl
rolb
add
xchg
mov
fldl
popa
pop
test
jae
xor
aas
pop
mov
pushf
cmc
push
mov
and
lods
loop
rol
enter
mov
clc
cmc
pop
pop
sbb
cmp
push
mov
cmp
push
imul
pop
mov
call
fldenv
lret
sub
in
lods
lock
movsb
test
jb
xchg
mov
loop
jmp
jne
imul
mov
loop
nop
gs
mov
fcmove
mov
shll
pop
sbb
pop
push
daa
push
jo
and
daa
add
cmpsl
mov
call
aas
pop
adc
fisttpll
cwtl
push
lret
mov
sub
add
xchg
test
sahf
mov
push
into
movsb
mov
out
lret
dec
insb
out
je
outsb
mov
test
or
lods
xor
lock
jl
jne
push
imul
hlt
fimuls
mov
test
add
sahf
jne
sub
add
pop
rcrl
hlt
ret
sbb
pop
aad
adc
es
movsl
cmpb
fdivrl
push
scas
and
lea
movsl
mov
xor
add
xchg
add
dec
pop
jnp
pop
jae
imul
mov
outsb
loop,pt
cli
iret
xchg
in
roll
aad
lahf
test
mov
jge
and
loop
mov
and
add
mov
in
mov
lods
loop
jae
aam
xor
dec
scas
gs
push
xchg
jle
cmpsl
loopne
or
xor
fistl
mov
fstps
jge
adc
stos
jl
pop
scas
stos
push
incl
in
jge
out
add
add
adc
fstps
shl
into
lods
adcb
xlat
jge
sbb
cwtl
mov
mov
rorl
add
out
fwait
mov
outsl
add
jle
fs
in
aad
lea
out
test
movsl
lods
xchg
adc
sbb
xchg
sbb
inc
mov
add
cli
push
lods
out
sub
scas
cmpsb
adc
mov
push
movsl
mov
mov
xchg
sahf
jo
push
jae
xchg
sub
jne
fdivs
mov
insb
das
sub
hlt
pusha
push
lret
jmp
mov
fiaddl
in
dec
inc
jbe
mov
mov
jl
xchg
loop
pop
mov
xor
fs
stc
xchg
xchg
adc
lahf
mov
push
sbb
icebp
jb
insl
sbb
addr16
push
pop
data16
imul
popa
sbb
fmuls
dec
fadd
or
dec
or
out
add
pushl
iret
fwait
test
mov
adcb
outsb
cmp
mov
int3
adc
and
test
cmp
mov
sub
adc
inc
aad
xor
mov
in
dec
mov
dec
pop
int3
fildll
xchg
xor
sti
es
mov
es
jl
lds
pushf
mov
push
je
mov
mov
repz
pusha
lret
sub
push
inc
dec
inc
inc
insb
fstl
sub
adc
insb
cmc
xor
inc
sahf
or
cmp
sarl
scas
and
mov
jmp
mov
ja
movsb
mov
jmp
cmp
mov
cmp
cld
or
mov
imul
lahf
sub
sbb
jecxz
xor
adcb
adc
in
ljmp
jge
pop
inc
mov
sub
pushf
in
repz
fcompl
adc
in
sbbb
scas
mov
jmp
sub
leave
movsl
int3
fisubrl
inc
push
mov
xor
addr16
adc
mov
std
lea
repnz
dec
mov
mov
repz
ret
ficompl
aaa
mov
sbb
xlat
cmp
mov
int3
push
fmull
mov
or
shl
mov
bndldx
xchg
xchg
pop
in
test
adc
xchg
lcall
cmpl
push
mov
pop
dec
mov
mov
sti
std
les
pop
jns
push
shrb
pop
std
pop
addr16
jle
rorb
push
cmp
cmp
dec
pusha
fisttps
les
pop
repz
push
mov
pop
mov
addb
shl
out
fs
mov
lret
and
ret
mov
fsubs
out
xlat
mov
mov
fimuls
lock
ror
adc
xor
mov
inc
outsl
insb
gs
mov
pop
ljmp
mov
xor
jmp
inc
ljmp
xchg
mov
push
xchg
lcall
xor
mov
ss
mov
sub
push
mov
dec
outsb
xchg
imul
cmp
addr16
fdiv
xorb
adc
and
lcall
and
bound
nop
lods
testl
and
xchg
inc
push
adc
jae
fsts
sbb
sbb
dec
add
rolw
pushf
push
popf
push
mov
insb
aas
out
cmpsl
aad
addr16
sbb
inc
mov
xor
xchg
pushf
and
sub
rcll
xlat
cmp
cmp
adc
push
or
arpl
stos
pop
jb
push
aad
movsl
pushl
xchg
mov
popa
push
aas
pop
std
xor
inc
lahf
pusha
dec
sbb
stc
adcb
and
in
dec
and
nop
int
leave
xor
mov
pop
jp
mov
lret
sbb
and
inc
movsl
cli
testl
or
jp
xchg
jns
clc
das
xor
add
test
je
xchg
stos
push
mov
mov
ljmp
insl
or
cmp
or
dec
sti
jo
es
cmp
lret
push
aaa
out
xor
xor
or
push
dec
cmp
aaa
mov
and
loop
adc
pop
dec
mov
lahf
clc
iret
mov
push
sbb
jno
lds
inc
aas
push
imul
in
xchg
cmp
lret
sbb
adc
jne
inc
xchg
mov
xchg
sahf
mov
sti
push
in
and
sub
cmp
add
adc
daa
jb
xchg
sbb
add
pop
or
cwtl
scas
mov
dec
mov
out
jnp
int3
int3
add
pop
shll
nop
or
cltd
ljmp
fsubl
mov
mov
loopne
jnp
xchg
ljmp
push
jno
lods
push
outsb
add
mull
fs
mov
mov
fsubrs
mov
js
jmp
add
jb
in
out
outsl
loop
out
sub
mov
pushf
shrb
cltd
fdivs
inc
dec
repz
jg
ja
jns
fadds
jno
arpl
and
or
mov
cmp
adc
mov
adc
cmp
ss
mov
sbb
xchg
push
imul
sub
in
cmp
rcrl
hlt
ja
insl
out
sbb
loop
cmc
hlt
jp
push
test
dec
pop
shl
mov
incb
inc
jecxz
jb
mov
push
in
push
sub
fnsave
sti
mov
mov
mov
js
scas
or
xchg
sbb
or
out
stos
mov
movsl
and
sub
jmp
repz
cltd
fs
fsts
sbb
sub
cltd
mov
div
sub
mov
jle
into
mov
daa
push
test
push
jae
add
scas
clc
jb
push
pop
stos
inc
scas
sub
sti
sub
add
sti
js
fnsave
fnsave
movsb
xchg
shll
ret
inc
pop
shrl
sub
cli
movsb
lahf
inc
sbb
jo
jbe
lods
add
mov
movsb
rorb
lods
aam
inc
sub
cmp
ds
jmp
jns
jns
fmulp
test
and
add
ret
popa
push
push
mov
jo
sub
mov
jmp
xor
std
ja
adc
and
js
in
rolb
out
pop
mov
or
dec
or
push
push
mov
dec
pusha
ret
or
push
sub
fneni(8087
dec
jge
jle
stos
cmpl
mov
dec
or
test
cmc
out
xchg
xor
pop
xor
and
jge
mov
or
xor
and
mov
sti
mov
shlb
loop
mov
xchg
push
test
cltd
or
xchg
pop
cld
push
es
mov
scas
mov
jbe
je
mov
fldl
mov
mov
push
lahf
pop
loope
or
push
and
sbb
insl
iret
sub
cmpsl
popa
push
add
pop
and
mov
xchg
je
sub
push
outsl
pop
xchg
push
nop
cs
push
dec
jbe
add
stc
movsl
fdivl
ljmp
je
push
ss
nop
leave
fwait
leave
xor
rol
xor
add
stos
gs
cwtl
out
hlt
lcall
es
ret
lock
ja
dec
push
mov
iret
pushf
push
ret
lret
pusha
xchg
insb
enter
orl
jmp
rcl
inc
mov
dec
clc
loope
shll
insb
cmp
adc
in
mov
mov
repnz
or
cmp
lcall
stc
pop
or
cmp
lods
or
enter
ret
enter
fs
mov
jmp
xlat
inc
push
addb
lcall
popl
jle
sahf
movb
outsl
push
lret
push
push
shll
mov
cs
insb
gs
pop
push
push
inc
mov
test
ds
push
and
ljmp
pushf
mov
push
add
or
js
add
and
or
sub
enter
insl
mov
dec
lahf
push
fistps
or
xor
movsb
mov
daa
lahf
cltd
in
ss
mov
and
js
in
movsb
dec
ljmp
xor
in
fdiv
mov
dec
adc
cmp
cmp
jle
pop
mov
inc
gs
dec
rcll
dec
mov
outsl
cmpsb
mov
fs
push
lock
cmp
mov
aam
add
aam
mov
jb
addb
sahf
xchg
insl
rorl
cmp
cmpsl
stos
loopne
add
repnz
test
xchg
div
dec
xchg
sub
xor
fiaddl
jno
lods
inc
inc
shrb
into
jae
sbb
cmp
into
in
pop
repz
rorb
push
sub
lock
push
les
push
lods
and
xor
js
shll
mov
mov
mov
int3
test
sbb
push
mov
es
push
mov
xchg
stos
inc
addr16
cmp
mov
aam
in
test
xor
push
cmp
fildl
pushf
mov
or
adc
js
dec
add
cmp
out
sub
clc
icebp
test
cmp
pop
daa
lahf
outsl
mov
negb
mov
adcb
into
mov
cmp
xchg
push
mov
lret
fcoms
adcb
xor
xor
sbb
fs
out
ret
adc
sbb
repnz
sti
inc
minps
mov
hlt
test
dec
lcall
mov
shll
adc
pop
and
cwtl
pop
dec
sbb
out
jne
pusha
mov
add
jmp
dec
fistps
dec
xor
mov
call
mov
popf
das
pusha
scas
aas
loope
addl
sub
pop
and
sbb
mov
pop
sub
rcrl
or
test
cmpl
sbb
jmp
in
sub
mov
mov
push
xor
mov
cmp
fsubl
sub
aad
out
jne
xchg
int
add
repz
lcall
data16
sbb
aad
xchg
mov
stc
cmp
sub
lahf
aas
fcompl
ret
imulb
mov
adc
or
cmp
xchg
ret
and
cmp
mov
lcall
dec
inc
push
arpl
mov
jne
les
and
inc
in
fisubrs
jp
pop
xor
xor
jge
pop
sbb
mov
mov
xchg
ja
std
rcl
out
in
sub
clc
ljmp
adc
push
adc
push
gs
mov
data16
out
and
test
decl
xor
cmp
jmp
in
pop
lcall
ds
sbb
arpl
add
push
pop
or
ss
rorl
mov
adc
push
push
cs
outsb
dec
in
hlt
inc
lods
dec
dec
test
dec
or
adc
clc
insb
cwtl
mov
sub
cli
jno
jmp
stc
shrb
ja
popa
pop
mov
xor
and
inc
adc
fstl
xor
pop
ljmp
jg
movsb
cld
cmpsl
mov
or
in
dec
mov
push
sbb
testb
ljmp
icebp
adcl
cmp
sub
cwtl
push
adc
adc
outsb
scas
in
sub
or
pop
and
cmp
xchg
mov
pop
orb
jmp
inc
repz
pop
jo
pop
das
rcrb
add
push
sub
adc
icebp
add
hlt
sbb
ss
xchg
xchg
rcl
cmp
mov
scas
xchg
adc
es
mov
xlat
iret
jnp
sbb
xor
rorl
loopne
mov
aas
insl
in
adc
shl
das
in
cld
clc
sbb
or
cmpsb
movsl
stos
scas
mov
negb
mov
cmp
arpl
dec
or
sarb
cmc
mov
sahf
popa
cli
notb
loopne
jns
mov
jle
mov
test
lock
in
pop
sub
pop
movsl
jp
push
out
xchg
lcall
test
cmp
push
inc
pop
mov
cmpsl
xchg
push
push
adc
dec
inc
cs
mov
mov
mov
aas
fs
mov
lds
sbbb
pop
adc
fucomip
mov
rorb
test
xor
dec
pop
mov
push
push
jb
stos
or
int
and
sub
jno
xchg
sbb
enter
add
fsub
or
mov
mov
ljmp
adc
or
inc
pop
iret
cmp
jb
or
lds
std
mov
dec
xor
nop
scas
push
pop
jle
xor
pusha
jge
add
cld
push
push
leave
push
jne
adc
js
lds
icebp
cli
sarl
bound
push
mov
mov
xchg
jb
xor
test
and
push
aad
dec
push
rcl
pushf
jae
jb
std
xor
lcall
mov
xchg
jns
jmp
and
adcb
es
cmp
in
out
call
lahf
les
test
in
dec
es
pop
mov
jge
lret
cmp
push
and
mov
add
mov
ljmp
out
or
aam
lea
das
lahf
push
enter
roll
lods
add
inc
cmp
sub
dec
ja
fistpl
sub
into
push
lods
pop
push
mov
leave
sub
adc
xchg
jo
inc
inc
cmp
xchg
push
mov
mov
lds
and
gs
mov
movsl
push
dec
lcall
test
dec
xchg
jne
mov
and
jno
sub
cmc
mov
add
pop
outsb
inc
adc
gs
and
cwtl
outsb
xchg
sub
jnp
mov
sbb
mov
lahf
out
cltd
mov
mov
lods
call
mov
jo
hlt
jbe
mov
push
cmp
push
mov
cltd
sbb
repz
jp
loope
push
or
js
mov
ds
push
cwtl
imul
sub
out
cwtl
in
jmp
jns
xlat
loopne
fistps
push
xchg
xlat
xchg
lock
call
mov
sub
daa
ds
arpl
sbb
stos
mov
adc
push
pop
push
xchg
out
xchg
mov
adc
sub
fmuls
cmp
out
ss
stos
arpl
dec
pop
test
sarb
mov
cmp
and
fmull
mov
es
test
and
out
push
lea
int3
sub
xchg
in
ss
add
mov
leave
aam
stos
jle
pop
testb
and
adc
push
or
jle
fcmovnb
sbb
movsl
mov
inc
jge
mov
sbb
sub
adc
das
xor
mov
xor
cmp
nop
rcrl
xor
iret
test
data16
cli
jne
jo
xchg
jmp
call
fstpl
dec
test
xchg
fbstp
les
insb
repnz
call
sub
div
loope
sbb
pop
dec
inc
int3
movsb
mov
xor
xchg
daa
sbb
lods
mov
and
pmulhw
fcomps
loopne
inc
and
push
loopne
in
js
call
mov
jno
cltd
lds
fistpl
xor
jno
pavgb
dec
outsb
ds
push
into
sti
pop
xchg
sbb
or
jne
add
sub
inc
xchg
sti
jae
mov
fisubs
jbe
add
mov
add
dec
outsl
outsl
adc
or
xor
inc
sbb
loop
cmpsl
loope
mov
insb
addb
push
in
inc
nop
fnstsw
xchg
sti
mov
scas
lods
jmp
lret
and
jno
ja
lret
call
dec
or
inc
push
das
lock
cmp
pop
shll
or
outsb
adc
dec
mov
test
jmp
xor
xchg
jb
addr16
or
jnp
test
adc
fldt
or
inc
xor
into
mov
movsb
insb
shr
leave
popf
pop
andl
add
test
les
cmc
daa
mov
je
cmp
push
pop
pop
inc
xlat
xchg
in
test
adc
inc
out
in
test
jo
add
int
mov
xchg
add
fbstp
cmp
mov
dec
inc
mov
jp
dec
push
cmpsl
pop
push
pop
ja
insl
xchg
and
pop
mov
adc
lods
pop
pop
imul
mov
jp
aaa
or
xchg
xor
cmp
jp
ljmp
push
push
test
xchg
les
xlat
nop
inc
or
mov
aad
repz
lds
mov
sbb
xor
and
mov
ja
iret
push
jmp
stos
aam
push
jl
das
xorb
popa
jge
out
not
pop
pop
cmpsb
push
js
insl
inc
loop
xchg
stos
rolb
push
mov
push
aam
inc
inc
inc
or
xchg
js
lahf
sub
das
adc
jmp
sbb
jge
jae
push
and
push
repnz
and
test
mov
cmpsl
enter
movb
jae
mov
fistl
pop
pop
push
loopne
add
jecxz
cmp
fs
xchg
or
dec
mov
daa
cmpsl
sub
aas
and
inc
xor
and
mov
and
out
mov
or
dec
mov
fidivs
dec
stc
xor
ljmp
mov
jnp
push
icebp
pop
inc
mov
mov
adc
sub
sub
jns
jae
xor
cli
insl
repz
lahf
xor
fmull
lcall
add
daa
push
adcb
inc
scas
add
pop
pushf
adc
sbb
mov
int3
and
clc
push
dec
stos
and
arpl
cs
dec
popa
xchg
xlat
insl
mov
adc
mov
dec
xor
gs
mov
xchg
arpl
subl
mov
mov
pushf
or
call
imul
sbb
daa
jne
mov
pushf
movsb
in
pop
lret
and
into
pop
cmc
sub
mov
mov
push
jnp
jne
mov
cmp
or
pushf
dec
mov
ret
sbb
aaa
xor
add
pop
mov
jnp
jge
cmp
lahf
sub
test
mov
cs
and
repz
das
fcom
mov
sbb
xor
pop
push
adc
mov
sahf
pop
inc
mov
stos
and
push
enter
mov
add
pop
sbb
sbb
clc
mov
subb
push
pop
mov
leave
cmp
jns
add
push
lret
aad
sub
iret
sub
mov
test
daa
cmc
ja
inc
lahf
xchg
loop
clc
mov
js
mov
jmp
cmp
stos
jge
cmc
ja
aaa
pop
outsl
add
jns
mov
mov
xchg
aaa
cmp
out
call
pop
mov
lret
insb
pop
in
filds
sub
stos
xor
jns
jno
push
add
adc
flds
inc
test
pop
fsts
ss
mov
jo
mov
jnp
and
dec
jo
adc
sarl
js
and
movsl
dec
out
inc
lcall
pop
mov
out
hlt
fsubrl
jbe
xchg
mov
insl
callw
adc
cmp
data16
xor
jg
mov
fisttpl
sarb
rolb
xchg
jmp
jne
and
out
out
mov
xor
jg
mov
daa
lret
adc
shl
fcompl
sbb
sbb
mov
mov
daa
xchg
mov
inc
mov
outsb
or
cli
loope,pn
lcall
aas
scas
fnstenv
adc
inc
cmpsl
pop
and
fimull
insb
xor
sbb
xor
int
push
push
mov
and
mov
out
xchg
jl
mov
sub
mov
push
pop
test
jns
and
mov
cs
popw
and
fldl
cs
or
outsb
punpcklbw
mulb
dec
jmp
mov
and
daa
cli
enter
jg
add
inc
add
test
push
aad
xchg
int3
inc
mov
sarb
outsb
aam
xor
pop
lfs
sarl
mov
jg
loope
sub
add
jbe
cltd
das
xchg
mov
and
lret
mov
in
lods
lret
into
mov
push
inc
jns
xchg
outsl
test
aaa
mov
popf
xor
cmp
adc
out
jbe
sbb
shll
and
test
test
outsb
sub
or
mov
roll
or
fs
je
jnp
xchg
dec
mov
in
xchg
pop
jl
test
pop
push
jbe
mov
sub
sbbb
mov
mov
outsb
sub
cltd
and
loope
test
dec
shll
and
ljmp
cli
jle
aad
jle
fcoms
call
movsb
cmpl
movsl
inc
call
jmp
data16
ljmp
dec
mov
xchg
dec
lds
pop
scas
push
call
mov
push
mov
push
gs
lds
mov
xlat
repz
adc
into
repnz
insl
push
cmpsl
in
rclb
dec
dec
inc
mov
xor
push
inc
test
push
add
stos
pop
fs
jns
adc
bound
mov
iret
mov
cmp
sbb
xchg
xor
lea
jo
iret
popf
scas
adc
xchg
sub
xor
fadd
outsl
lock
jae
xor
push
ficomps
mov
jbe
out
aaa
mov
mov
push
fstp
arpl
sbb
cmp
scas
xor
jo
in
dec
and
femms
das
jns
clc
xlat
mov
scas
js
movsl
jmp
add
jle
push
cwtl
nop
xchg
hlt
and
test
mov
mov
mov
pop
sub
pop
loopne
cli
mov
cmp
outsb
out
hlt
xorb
inc
pop
and
add
mov
scas
sub
fisubl
adcl
pop
cmp
repz
or
fcmove
xchg
aam
sbb
imul
enter
jno
insb
dec
push
orl
push
inc
stc
and
popa
xor
popa
pop
jo
lea
repnz
add
and
mov
push
push
sub
lds
dec
arpl
add
or
push
xchg
pop
lock
loop
imul
outsb
gs
sub
mov
inc
das
adc
push
jb
sbb
fwait
add
pop
insl
stos
pusha
daa
mov
cmp
pop
movsl
test
std
cld
fnstsw
clc
inc
or
xor
xor
push
xor
fisubs
jl
into
mov
mov
pop
mov
pop
dec
imul
adc
cwtl
sbb
cli
push
jg
in
aam
insl
outsl
int
dec
int
sti
sub
mov
dec
sub
orl
nop
mov
or
jle
xchg
push
mov
insl
aaa
and
cmp
xor
inc
mov
push
aas
lds
cwtl
push
dec
push
push
stc
push
adc
clc
jb
sbb
adc
loop
movsb
movl
push
add
jmp
aad
sub
mov
popf
sbb
leave
cli
test
pop
pushf
xchg
push
mov
push
insb
cwtl
cmovnp
adc
mov
mov
adc
push
outsl
into
and
lret
test
data16
sub
pop
popa
pop
jne
mov
orl
mov
xor
in
cltd
ja
jne
loop
or
fldl
pop
cmp
mov
insl
mov
into
sbb
lret
js
inc
aaa
or
mov
fcmovu
mov
jecxz
cmc
arpl
jg
cmpsl
lea
pusha
mulb
or
jp
and
jmp
mov
mov
add
fisubrs
fwait
mov
xchg
pop
sub
push
cmc
xchg
jge
ret
faddp
ret
insl
pop
sbb
stos
cmc
out
push
fisttps
addr16
inc
pop
jo
das
cwtl
push
aad
mov
fcoml
test
push
rorl
lret
or
test
xchg
into
add
out
jno
jb
mov
fstpl
insb
inc
inc
movsl
mov
arpl
pop
mov
repz
mov
fcomps
clc
add
fwait
jmp
xor
xchg
clc
fcompl
dec
sbb
pop
sahf
jg
in
lret
int
mov
pusha
mov
pop
inc
push
xor
pop
fs
ds
add
xchg
mov
mov
rclb
sbb
dec
jns
sahf
fcom
std
push
inc
add
mov
cmpsb
clc
iret
in
pop
mov
shrb
fs
insl
cs
mov
pextrw
jb
inc
pop
sub
ss
stos
fldcw
rorb
adc
or
addr16
mov
lds
add
es
xor
pop
stos
cmp
xsha1
cmpsb
mov
rcrb
xchg
in
dec
imul
or
add
and
imul
pop
push
sub
js
mov
xchg
test
add
in
mov
andl
icebp
nop
sub
stos
dec
sbb
jno
fiadds
pop
sarl
push
in
dec
cmp
cmp
in
cld
aaa
cli
shlb
add
cmp
out
or
mov
nop
andl
jp
iret
push
pushf
bound
arpl
in
push
loop
loopne
lods
mov
dec
push
sub
mov
xor
sbb
push
insb
mov
dec
xorb
jnp
cmp
out
aaa
mov
and
mov
andl
inc
fistpl
fidivl
jb
sbb
repnz
shrb
dec
daa
xchg
mov
xchg
pop
or
shlb
mov
add
int3
stos
add
mov
push
and
aas
loope
fcoms
xor
or
jecxz
popf
fistpll
mov
add
xor
out
lea
push
inc
jbe
cmc
sub
in
xor
dec
cli
adc
dec
xchg
jmp
sub
cmpsl
in
rcll
add
fucomip
cmp
pop
ficoms
pop
dec
lahf
xchg
les
movsb
lods
subb
push
xchg
sub
and
subl
or
stos
int
mov
add
ds
out
scas
popa
sub
pop
pop
mov
sub
sub
or
fistl
push
imul
test
lock
dec
pop
inc
push
les
fisttps
iret
mov
scas
inc
jmp
repnz
sarl
inc
push
sbb
jmp
or
ss
pop
aaa
inc
fld1
js
test
stos
pop
push
mov
cli
mov
xor
cmp
adc
out
insb
sub
ret
iret
adc
test
jo
cmpsb
sbb
xchg
stc
xchg
xor
mov
scas
stc
xor
rolb
loopne
mov
out
movsl
cli
fistps
mov
mov
mov
sub
test
ds
loope
fiadds
push
push
xor
in
ret
stos
ror
fdivl
addr16
mov
jae
addr16
xchg
int3
mov
push
push
xchg
ret
stc
pop
jo
negb
mov
mov
add
rcll
xlat
xchg
dec
mov
and
sbb
mov
push
fildll
inc
test
cmp
mov
icebp
xor
mull
nop
out
test
push
jbe
out
push
call
pusha
push
clc
icebp
xor
pop
mov
fnstsw
or
mul
or
pusha
xlat
sbb
inc
stc
getsec
xchg
xrelease
mov
daa
arpl
jb
fidivrs
adc
scas
mov
xchg
sbb
or
pushf
pop
push
mov
pop
jl
push
out
popa
sbb
and
andl
fisubrs
or
loop
leave
rol
mov
call
std
adc
add
push
push
jo
add
cvtps2pd
jg
xchg
inc
jmp
mov
and
jmp
imul
add
xlat
jo
movsb
int
lock
mov
addl
sbb
adc
movsb
lods
aas
and
lea
xor
out
fcoms
mov
or
xor
xor
test
insb
loop
push
xchg
jmp
cmc
adc
jmp
fistpl
sbb
jns
mov
int
cli
rorb
mov
add
add
jl
ret
mov
xchg
mov
pcmpgtw
jmp
sahf
lods
out
xchg
jge
insb
mov
xchg
sub
mov
xor
out
sub
sub
inc
ret
sbb
stos
shrb
out
test
mov
xchg
inc
or
adc
mov
xchg
pushf
test
bound
push
aam
dec
ret
shr
dec
xchg
nop
inc
ds
adc
repnz
pop
push
popf
fcmovne
pop
shlb
inc
pusha
cmc
dec
test
lea
data16
pop
in
push
xor
cli
shll
add
pop
rcrb
push
adc
call
inc
fxch
ss
movsl
lcall
rol
adc
push
lods
fistpl
shr
mov
sbb
inc
in
jne
popf
jp
jno
push
fdivr
mov
jmp
out
and
mov
push
cmp
inc
cmp
into
xlat
mov
stos
je
iret
lods
cld
icebp
mov
cmpsb
xor
cmpsb
cmc
out
xchg
mov
cmp
sahf
xchg
shrb
or
xchg
test
shll
jge
lock
mov
pop
mov
out
xor
pushf
test
pop
pop
pop
adc
mov
mov
icebp
je
push
jns
push
jp
jb
fwait
out
cli
and
inc
pop
pop
testl
adc
out
sub
sbb
jo
inc
pop
test
fnstsw
das
lods
lcall
gs
push
xchg
push
in
lods
adcb
jl
dec
jnp
movsb
out
inc
or
shrb
std
je
dec
ljmp
xor
adc
push
fdivrs
lods
inc
scas
adc
adc
aas
enter
mov
cs
stos
pop
jns
lahf
fwait
dec
lcall
and
inc
push
push
jno
mov
pushf
fisubs
imul
dec
adc
jl
sbb
lahf
cmp
pop
aad
or
pop
cmp
adc
loopne
cld
out
or
into
push
lahf
xor
outsb
inc
xchg
gs
in
pop
pop
pusha
loope
inc
inc
push
inc
repz
divb
movsl
push
addb
sub
pop
mov
cmpsl
mov
repz
and
aam
aaa
std
pop
pop
and
clc
xchg
lcall
leave
push
aaa
sub
xchg
ljmp
inc
std
cmpsb
and
out
mov
in
mov
rcr
movsb
and
dec
mov
scas
test
jno
outsl
sarb
sbb
xchg
cmc
or
lret
and
adc
xchg
js
into
mov
xchg
addr16
jb
sbb
flds
icebp
pop
xchg
or
and
cmp
lock
rolb
or
and
push
std
jle
push
out
shl
mov
repz
cmpsl
or
mov
dec
movsl
push
lods
and
fadds
in
outsl
fbstp
mov
ja
rorl
sbb
outsb
lods
inc
ret
jmp
mov
test
add
bound
je
jmp
pop
and
es
add
and
aas
cmp
cmp
test
and
fcmovnb
or
mov
leave
add
cltd
rcll
or
ss
fidivrl
mov
lcall
dec
push
mov
sbb
popa
jb
repz
outsl
cmp
into
cld
pop
jmp
sub
inc
and
mov
cmp
pop
in
loope
xor
xchg
xlat
stos
loope,pt
lcall
mov
arpl
add
mov
xor
sub
cwtl
xchg
or
mov
and
int3
jl
cwtl
int
pop
cwtl
cmpsl
dec
cwtl
xchg
test
in
jne
ret
mov
leave
movsl
pop
sbb
dec
add
cmp
xchg
adc
xchg
mov
mov
inc
pop
pop
pushf
sbb
pop
jge
test
mov
or
loopne
and
dec
add
stc
iret
inc
cmp
rcrb
adcb
lods
scas
inc
fucomip
sahf
sbb
xor
jbe
loope
movb
pop
loope
lock
orb
clc
sti
dec
and
cmpsl
jge
scas
pop
stos
cmp
mov
cmpsb
dec
pop
sahf
adc
ja
jbe
inc
scas
push
jge
mov
prefetchnta
xor
cmc
call
subb
movsl
and
ja
inc
fidivs
mov
mov
aas
mov
or
push
push
aam
out
cmp
xchg
stos
inc
adc
inc
fwait
cmpsl
cld
mov
sbb
insb
pop
sti
ss
andl
xchg
adc
jge
lods
inc
add
in
cwtl
pop
fwait
cli
dec
jmp
jb
pop
insl
push
jnp
aaa
imul
jge
imul
fimull
add
lahf
push
lahf
rcr
cld
das
hlt
xchg
out
push
hlt
fmuls
sbb
cmp
jb
sub
fcompl
lret
xchg
xor
jl
into
ret
stc
call
push
test
adc
int
pcmpgtw
push
cltd
jns
push
cltd
imul
mov
je
lods
pop
dec
rolb
mov
call
pushf
jnp
rolb
or
add
cwtl
cmp
mov
insl
je
hlt
iret
sbb
sbb
inc
xchg
xchg
mov
shll
out
pop
inc
or
add
mov
push
test
sub
sbb
sub
jne
mov
push
adc
shll
lock
push
push
hlt
xor
dec
scas
cmpsb
inc
jecxz
add
repz
mov
pop
xor
hlt
incl
jge
mov
rorl
dec
or
mov
pop
fbstp
addb
rcr
cmpsl
push
in
idivb
sbb
pop
jg
fisttps
outsb
jnp
jo
xchg
cmp
pop
sbb
sub
das
cmc
or
pop
mov
sub
mov
inc
lret
aam
mov
rcrl
fstps
mov
lahf
push
lahf
or
mov
and
adc
mov
mov
movsl
rclb
pop
or
jmp
packsswb
aad
mov
xchg
pop
outsb
push
mov
aas
sub
mov
fwait
xchg
inc
add
lahf
out
inc
in
test
adc
addr16
loopne
das
jg
and
sbb
pop
rolb
in
and
test
inc
aas
cwtl
cmp
addl
imul
cmp
ja
mov
fiadds
mov
aaa
inc
shrl
lret
fisubl
stos
cmpsb
mov
sbb
cmp
and
outsb
cwtl
mov
dec
mov
add
jg
enter
or
cli
mov
mov
cmp
in
scas
aad
mov
or
out
mov
jecxz
stc
xor
loope
add
adc
fstp
bound
sarl
inc
lret
fld
aaa
mov
test
lods
lret
push
in
xor
mov
cmpsb
xchg
adcl
pop
or
xchg
sbb
nop
push
out
daa
lods
xchg
jns
into
sbb
hlt
jge
mov
push
xchg
ljmp
and
add
mov
jmp
xchg
es
sbb
andl
lahf
leave
cmp
out
mov
sbb
jns
add
fadds
cmc
jb
icebp
lret
dec
or
cwtl
and
push
pop
jne
and
mov
dec
mov
imul
mov
mov
xor
dec
sbb
rcrb
cld
push
jne
movsl
push
test
lret
fs
adc
je
pop
iret
pop
aad
jge
lock
fldl
lret
or
push
addr16
fisubs
dec
dec
jbe
pop
xor
jp
mov
dec
test
and
mov
cmp
or
in
outsl
lds
jp
jo
lea
test
mov
mov
xchg
cld
mov
lods
inc
cs
jg
xchg
stc
pop
jecxz
addr16
rclb
aad
inc
sti
jmp
mov
mov
scas
stc
mov
int3
pop
jns
sti
lret
enter
cmc
pop
or
insl
jno
xchg
mov
inc
pop
out
lods
add
pop
mov
mov
fsubp
daa
out
ljmp
data16
into
adc
aam
mov
js
adc
jge
mov
loope
out
addr16
leave
shlb
fcmovbe
in
das
lahf
lds
cmp
fisubrs
or
and
sub
jns
aaa
mov
incl
xchg
xchg
push
movsl
xor
push
jge
pop
push
push
inc
dec
xchg
cmp
and
test
mov
dec
inc
shl
fistps
sbb
mov
pop
int
sbb
dec
push
cmpsb
dec
loopne
push
and
int3
lcall
xchg
aad
dec
cmc
cmp
scas
ss
mov
dec
popf
in
or
lock
lcall
jae
fwait
out
xchg
jns
add
inc
push
stc
enter
lock
arpl
adc
div
call
dec
imul
popf
and
xchg
push
aad
push
ja
mov
shll
test
ds
int
aas
push
push
jp
dec
mov
and
mov
add
push
adcb
xchg
dec
mov
rcrl
jl
es
aam
sub
shrl
repz
aad
jbe
push
inc
push
jle
adc
inc
push
mov
dec
xor
dec
loope
inc
je
sub
rcll
mov
ja
inc
push
or
add
xchg
out
push
adc
mov
test
and
dec
test
test
test
movsl
loope
push
jb
xor
jo
enter
insb
lods
insl
sbb
addl
jo
dec
in
mov
sbb
dec
in
mov
lds
ret
repz
jp
pusha
in
cld
or
je
clc
or
lret
hlt
adcb
mov
scas
cmp
adc
cmpsl
cmp
cmpsb
jp,pt
mov
mov
nop
ret
pop
inc
dec
sbb
into
pushf
shlb
test
loope
lret
mov
test
stos
popl
push
int3
sub
lcall
push
xchg
pop
pop
cld
fcmovnbe
dec
test
jne
inc
lock
xchg
xlat
sarb
xchg
sub
insl
inc
push
mov
dec
loop
xor
dec
mov
imul
sbb
cmpl
adc
es
bound
jl
mov
std
push
cmpsb
sub
lods
test
xor
xor
pop
dec
add
add
js
daa
shlb
movsl
push
pop
xor
mov
pop
mov
inc
cmp
ss
fsubs
mov
cs
xor
pop
out
cmpsl
data16
in
scas
sub
jne
movsl
add
int3
jbe
xlat
sub
popa
out
push
pop
addl
sub
xchg
imul
scas
stos
dec
lea
push
pop
ss
jle
fimull
ss
add
stos
addr16
loopne
pop
jp
repnz
vmovdqu
cmpl
rcr
int3
push
inc
test
cli
lods
call
xchg
push
int3
call
popf
aam
and
sbb
cld
int3
jns
sbb
bound
pop
or
add
push
jle
cmp
inc
push
stos
xchg
dec
scas
enter
xchg
jmp
stos
mov
mov
xor
jno
mov
cmp
decl
xchg
push
push
stos
cmp
jge
incb
negb
push
mov
add
ljmp
xlat
sub
into
push
push
mov
mov
iret
push
xchg
mov
test
push
add
int
lahf
pop
insb
jp
cmp
popf
setae
jo
pop
arpl
adc
jo
inc
insb
jl
rcr
mov
rol
add
pop
js
mov
pop
ljmp
cmp
mov
jne
insl
mov
lcall
leave
orb
outsb
xor
jnp
and
push
loope
cmp
ret
in
arpl
add
in
mov
adc
inc
jle
and
and
inc
test
mov
lods
rolb
rolb
jb
in
cmp
mov
sub
ljmp
out
or
mov
lahf
cmp
stc
mov
ret
adc
subb
xor
lock
into
ds
inc
pop
push
mov
leave
adc
imulb
shr
jbe
testl
jle
pop
hlt
xchg
clc
outsb
ljmp
out
sub
adc
jo
or
hlt
xchg
sahf
and
iret
outsl
dec
xlat
shl
andb
in
mov
loop
lock
aaa
movsl
pop
inc
mov
out
or
mov
std
sbb
lret
jb
sub
scas
mov
sbb
out
xchg
inc
jp
push
lock
aas
and
and
data16
pop
sbb
adc
ss
addr16
mov
push
in
pushf
out
outsl
or
sahf
dec
sub
jl
jns
adc
enter
mov
inc
xor
xchg
add
inc
fcompl
sti
xlat
cmp
adc
mov
xor
add
stc
neg
fbld
mov
inc
mov
movsb
mov
xor
ds
lret
xchg
push
addb
lcall
movl
xor
adc
cmpsb
pop
fnstenv
mov
pusha
movsl
orl
negb
inc
sbb
xchg
clc
ss
mov
bound
push
inc
adc
xchg
out
sub
mov
fstps
inc
pop
mov
std
add
lds
push
in
sub
sub
ds
nop
pop
dec
lret
push
inc
lods
cmp
push
repnz
arpl
repnz
dec
mov
popf
stos
mov
sub
icebp
mov
hlt
outsb
sbb
xchg
jmp
lea
pop
pop
or
jnp
stc
in
sysenter
jecxz
faddl
sbb
rcl
mov
or
lcall
xchg
push
rclb
add
in
jmp
mov
test
pop
loope
push
cmp
jbe
dec
and
stos
scas
xor
jl
inc
sti
jl
sahf
sar
xadd
pop
fsubrs
stos
xchg
ljmp
addl
sub
mov
js
jne
mov
inc
repz
xlat
pop
fisttps
scas
sarb
sar
xor
jne
lret
sar
xchg
mov
xor
fwait
push
fsubrl
movb
mov
loop
push
mov
aas
xor
inc
stos
add
pusha
inc
mov
lds
iret
outsb
or
ret
fdivr
inc
fcmovnu
mov
sbb
lea
fwait
loopne
dec
insl
or
pop
jl
sub
xchg
and
mov
subb
js
orb
imul
pop
push
lret
adc
enter
aas
inc
popa
lds
mov
sub
mov
xor
adc
sarb
shlb
popf
push
repz
inc
aas
ds
frstor
icebp
inc
in
sub
mov
out
out
mov
or
mov
js
pushf
add
rcll
insb
cs
std
or
or
jge
rcrb
jns
hlt
mov
cld
cs
enter
in
outsl
sbb
add
cs
cmp
js
out
bound
mov
cltd
aas
aas
imull
outsb
hlt
dec
int3
and
pop
fimuls
inc
sub
adc
push
mov
sbbb
mov
fs
push
mov
lret
and
out
sub
push
xchg
repz
xchg
out
inc
pop
cmovae
jl
ret
stc
pop
test
mov
inc
es
ds
repz
aaa
rorb
push
clc
add
scas
out
mov
and
lret
jle
jbe
repz
mov
lods
sti
ja
dec
jmp
or
clc
out
push
outsl
scas
fs
push
jbe
popa
mov
ret
xlat
das
jns
pop
sub
add
inc
sbb
pop
cmp
pop
or
lea
iret
popf
fsub
inc
mov
mov
jnp
mov
pop
push
stc
aaa
lcall
push
inc
adc
xor
push
rdmsr
fcomip
sbb
push
gs
push
pop
std
lcall
stos
lahf
mov
and
lods
ret
cmp
push
sbb
xchg
dec
movsl
inc
sub
das
mov
xchg
fsubs
mov
fstpl
imul
and
pop
cltd
sub
icebp
jne
jmp
movsl
loopne
inc
dec
leave
sbb
into
dec
bndldx
xchg
aam
mov
sub
insl
add
enter
mov
stos
mul
sti
stc
dec
rclb
insl
cltd
dec
jmp
mov
mov
xchg
shll
pop
and
mov
js
pop
in
mov
sub
fs
xchg
xor
lret
adc
xchg
sarl
sbb
addr16
dec
mov
es
fbld
repz
mov
dec
mov
icebp
adc
dec
mov
xor
cmpsl
dec
ss
push
loope
aaa
jmp
add
pop
rcrb
stos
mov
xchg
mov
pop
stos
sub
fisubs
mov
mov
or
pop
add
xor
sub
rorl
sbb
xchg
call
push
es
push
mov
sti
pop
sbb
pop
push
test
xor
hlt
minps
sbb
inc
sbb
rolb
mov
data16
adc
arpl
mov
mov
icebp
inc
pop
or
lcall
xor
mov
fwait
dec
fcompl
popf
inc
daa
fmull
stc
pop
faddl
sub
stos
cltd
pop
lret
lahf
data16
inc
inc
stos
int
dec
outsb
cld
mov
cmpsb
mov
pop
pop
popl
adc
jge
mov
xor
inc
fcmovne
popf
movsb
mov
jae
packssdw
ficomps
dec
sub
dec
dec
add
scas
xchg
bnd
jp
arpl
mov
xchg
outsl
call
mov
cmp
shll
imul
fistl
lea
push
inc
arpl
push
mov
xchg
les
adc
stc
xchg
popf
fcmovnbe
jb
sbb
cmc
pop
fwait
movsl
push
daa
mov
push
inc
mov
xchg
lock
dec
mov
mov
outsb
repz
aam
loop
or
push
dec
adc
fcompl
icebp
and
insl
in
out
sahf
dec
pop
call
lahf
test
mov
sub
data16
dec
sbb
mov
pusha
movsb
cltd
pop
test
fdivrs
sahf
repnz
icebp
xor
cmp
mov
imul
mov
test
jg
bswap
adcl
jns
call
mov
sub
mov
je
adc
sub
sbb
sahf
cwtl
mov
mov
iret
mov
jl
fsin
test
and
add
aam
lret
dec
test
rorl
inc
imul
pop
sbb
sbb
cmpsb
add
dec
in
push
sti
fldt
repnz
mov
cmp
cs
push
js
jl
ss
xchg
les
out
xlat
shr
mov
adc
mov
aas
dec
sub
icebp
adc
imul
pop
fsubrs
push
mov
in
dec
pop
stc
nop
sub
js
mov
rcrb
pop
fildll
js
aaa
jmp
inc
cli
mov
adc
rcrl
lcallw
outsl
sbbb
inc
loop
imul
sbb
mov
popa
vorps
push
mov
sbb
div
xor
aad
js
stc
int
call
ds
pop
or
je
dec
cmp
mov
scas
sbb
mov
enter
pop
xchg
pushf
arpl
xlat
and
xchg
std
xor
iret
cmpsl
outsl
cmp
aad
jno
mov
inc
inc
cwtl
into
aas
mov
iret
outsl
and
pop
arpl
mov
mov
dec
loope
loope
loop
mov
ds
insb
cmp
push
fmuls
ret
jp
pop
in
and
pop
pop
xchg
xor
mov
cmpsb
inc
inc
mov
xor
sbb
aad
je
ficoms
mov
adcb
rcrb
mov
xchg
cwtl
xchg
push
arpl
jg
jnp
cmc
rcl
jg
pop
jmp
scas
shll
std
adc
sti
jg
sub
inc
pushf
test
lret
xor
fsts
in
sub
sub
idiv
xor
xchg
adc
gs
add
es
jl
mov
push
stos
es
sub
sub
jae
lds
mov
push
xor
adc
sbb
cmpsb
sbb
pop
or
cmpsl
adc
cld
cmp
out
mov
addr16
cmpsb
lret
pop
rcl
shlb
stos
cmpsl
jne
leave
mov
lret
and
cmp
pop
stos
loopne
xchg
scas
or
ljmp
lret
dec
jns
pushf
mov
jne
clc
and
rorl
dec
or
or
add
arpl
dec
daa
inc
push
push
dec
dec
xchg
xor
mov
mov
test
xchg
rorb
stc
stc
movsl
and
mov
add
push
push
mov
xchg
push
lret
mov
cmp
cli
test
dec
cmpsb
push
leave
mov
cmp
fisttpll
or
xlat
movsb
test
dec
int3
fdivrs
mov
sub
rorb
dec
inc
cmp
nop
ds
aaa
lcall
shrl
lds
imul
and
sbb
sbb
jl
dec
cmp
mov
loope
sub
inc
mov
fwait
mov
test
jl
xor
popa
dec
push
fnstcw
lahf
test
add
adc
mov
cmp
jle
or
xchg
or
push
xchg
outsb
add
jmp
mov
sarl
fsubl
fwait
iret
jecxz
jno
cmpsl
push
jl
jbe
cmpsl
sbb
ds
pop
pop
push
adc
testb
xchg
ja
jmp
hlt
inc
addr16
stc
jne
add
adc
add
jmp
cmpsl
int3
and
mov
mov
icebp
aam
ret
inc
pop
out
es
pop
lret
mov
out
or
add
jbe
ds
stos
sbb
mov
or
fiadds
hlt
arpl
fsubr
cmp
push
cmc
cs
add
icebp
jmp
aam
aad
sub
or
out
test
loop
adc
mov
xchg
clc
inc
aas
mov
push
and
dec
icebp
cs
insb
push
test
pop
movsl
scas
or
xor
divl
test
iret
or
pop
mov
jb
outsl
mov
adc
or
mov
sub
mov
in
and
addr16
mov
sub
lds
add
fisubrl
mov
xchg
scas
mov
cmp
jmp
cwtl
jmp
mov
sub
xchg
pop
in
leave
add
add
imul
xor
leave
in
cmp
sahf
xchg
ss
mov
or
mov
scas
pop
sub
movsl
insl
sti
fbstp
sbb
test
mov
inc
pushf
rcl
outsl
ret
mov
in
xor
cmp
push
imul
pusha
repnz
push
out
inc
pop
push
sbbl
test
push
cli
sbbb
adc
repnz
ret
mov
lahf
cmpsl
push
outsb
jbe
stos
clc
aaa
cmp
pop
jnp
jge
jg
ret
je
scas
and
inc
mov
pop
sbb
jecxz
or
jb
fsts
sub
xchg
leave
push
es
pop
outsb
sti
lahf
sarb
bound
xchg
orb
repz
mov
bound
adc
or
adc
adc
xor
xor
and
ljmp
xchg
push
adc
pop
and
int
fxch
stos
dec
fcomps
jo
mov
cmpsl
je
int
int3
jae
stos
mov
push
sbb
je
pusha
sbb
or
rorb
rcll
or
loop
mov
jns
inc
dec
inc
mov
jbe
pop
sub
ss
jae
fs
enter
inc
mov
sbb
mov
orb
daa
pop
mov
push
fistps
insb
ljmp
loop
mov
call
fimuls
aam
xlat
xchg
mov
fnstsw
outsb
mov
ds
mov
out
lds
lcall
lea
clc
je
xchg
mov
adc
aad
loope
xchg
mov
outsl
pop
fsubs
add
inc
scas
cltd
pusha
and
ss
xor
lds
push
cmpsl
push
fcomps
adc
push
add
mov
xchg
or
repnz
mov
dec
sub
orl
fimull
sub
inc
dec
and
add
lds
cmp
lods
enter
ja
mov
xchg
jne
out
mov
in
cwtd
mov
in
shll
int
ret
xor
xchg
push
or
xlat
sti
lret
shrl
scas
fwait
push
daa
mov
push
mov
pushf
pop
cld
adc
js
or
mov
fiadds
mov
stc
das
ja
or
incb
lds
sbbl
cmpsl
or
push
and
sbb
cld
adc
xlat
pop
mov
jg
push
mov
stc
lock
jecxz
push
mov
adc
fsubr
lret
fistps
mov
cmp
mov
add
mov
jnp
and
and
addr16
jbe
sub
xchg
adc
mov
dec
lods
lds
mov
es
cmpsb
lret
xor
rclb
out
iret
sbb
adc
push
push
mov
inc
mov
ljmp
jl,pn
fs
or
ret
sbb
jl
push
adc
sbb
mov
popl
mov
cmp
je
mov
stos
jp
loopne
test
jb
sbb
movsl
mov
xor
push
sahf
push
in
ret
out
xlat
in
xchg
das
xchg
data16
repnz
xchg
lea
daa
test
fisubrs
xchg
xchg
call
and
insb
sub
dec
aam
xorl
in
inc
pusha
xchg
inc
xor
mov
adcb
xchg
aaa
sub
jge
xchg
adc
fistl
test
mov
mov
loopne
cld
dec
sub
inc
xchg
push
xor
xor
sbb
pop
cwtl
and
ror
cmp
sub
mov
fisttps
jae
je
icebp
push
pop
into
ret
jg
sbb
jnp
dec
repnz
adcb
or
xchg
fsts
aas
sbb
gs
mov
lods
push
or
arpl
push
mov
imul
pop
cmc
xorl
in
jbe
jo
sub
add
inc
int
mov
shrb
or
das
xchg
inc
out
rcll
and
imul
cmpsl
testl
jo
xchg
inc
daa
mov
cmp
pop
xchg
mov
lods
pop
ficompl
push
decl
sub
addr16
pop
xchg
adc
dec
jge
jb
test
sub
shl
pushf
pop
jge
or
push
in
stc
in
mov
add
pop
lcall
mov
mov
test
sub
sbb
cmp
pop
dec
in
jle
leave
cltd
test
into
rcrb
enter
inc
dec
shlb
rol
into
cltd
sub
push
fs
sub
inc
lock
shlb
sbb
pop
in
fbld
fcomps
subl
cmp
pusha
popa
pusha
mov
adc
jmp
addb
sbb
xchg
pop
nop
scas
shlb
test
lods
pop
sub
pop
add
ljmp
movsb
cmp
inc
adc
dec
push
insb
jge
jmp
add
insb
pop
lods
inc
pop
push
pop
xchg
insb
cmp
jg
out
inc
mov
inc
imul
mov
int3
inc
sub
mov
call
mov
aad
jo
and
mov
lods
sbb
bound
imul
xchg
inc
enter
inc
mov
adc
pop
je
sbb
ljmp
jbe
or
mov
cmp
inc
push
add
mov
cmpsl
in
pop
mov
mov
cltd
inc
or
mov
clc
shr
sbb
scas
into
shll
lret
outsl
or
cs
push
insb
ja
std
jae
xchg
repz
int3
jp
or
repnz
andb
inc
cli
mov
rorl
leave
xchg
test
lods
xchg
movb
or
int3
push
add
scas
sbb
fistpl
xchg
mov
xlat
xor
mov
pushf
and
or
bound
sbb
pop
movsl
add
sub
pop
dec
xchg
jmp
or
jo
jno
dec
mov
mov
les
pusha
test
sub
push
ret
inc
add
xchg
movsb
jmp
push
clc
imul
out
mov
js
inc
mov
cmp
adc
in
jne
clc
cmp
imul
jne
in
push
push
or
test
pop
lcall
jmp
adc
xchg
pop
into
test
daa
inc
es
xlat
pop
fcomps
jge
addr16
movsl
gs
in
fsubr
aad
mov
sub
inc
adc
jbe
or
stos
lret
push
mov
and
xlat
adc
inc
xor
enter
push
adc
or
dec
sbb
sbbl
jmp
inc
mov
ret
int3
mov
sahf
push
stos
outsl
pop
mov
enter
notb
add
pusha
sbb
mov
or
test
dec
sub
mov
dec
imul
xchg
push
sub
sbb
cwtl
jno
pop
xchg
in
jbe
and
sbb
shlb
imul
inc
in
sbb
mov
clc
mov
loopne
dec
movzbl
dec
dec
inc
cmp
cld
cmp
dec
out
xchg
jecxz
adc
int
and
rcll
add
adc
icebp
sbb
dec
sbbl
or
fs
outsl
pop
lock
or
cli
push
or
or
jl
das
nop
xor
fmul
xor
mov
loopne
cwtl
les
mov
mov
pop
push
imul
xor
xlat
out
ljmp
jecxz
scas
psubq
mov
jbe
mov
daa
mov
mov
jnp
jnp
repnz
shlb
inc
mov
aam
mov
add
aad
fldcw
jne
test
adc
pop
in
mov
sbb
cli
xlat
daa
test
pop
inc
scas
or
xor
stc
insl
subb
bnd
jp
sub
notl
jmp
push
sbbb
fwait
data16
les
xchg
arpl
cmp
push
fdivs
mov
mov
pushf
xchg
dec
fldl
nop
mov
pop
push
sahf
pop
sub
pop
cmpsb
clc
jle
mov
or
pop
ss
outsl
jnp
jns
pop
cli
cltd
sub
test
lcall
test
arpl
sahf
aam
jmp
fxam
xor
or
xchg
and
fcmovnb
cltd
mov
mov
lods
lods
and
daa
xchg
push
fcmove
lds
xchg
or
dec
cmp
icebp
pop
iret
out
pop
sbbl
jmp
mov
xchg
scas
call
mov
pop
xchg
sbb
subl
add
aas
jmp
imul
jns
in
lret
loop
xlat
test
test
scas
lret
mov
inc
xor
shl
inc
mov
jecxz
lds
xchg
addb
lret
sub
daa
je
loop
ss
xchg
or
scas
adc
jmp
pop
inc
push
mov
pop
dec
loope
loop
xchg
inc
iret
movsl
imul
fucomp
mov
pop
fisubl
fisubrs
cld
cmp
or
fnsave
sub
xor
pushf
shll
mov
loopne
xor
mov
lcall
xor
int
cmp
loopne
jne
mov
mov
or
ljmp
jmp
sub
jmp
enter
stos
ds
pop
dec
xor
jbe
in
sub
in
test
jo
add
mov
jp
mov
scas
ret
jo
inc
xchg
dec
push
mov
insl
mov
lfs
movsl
jae
dec
xor
loope
stos
lock
addr16
stc
or
in
dec
push
add
inc
lcall
mov
push
inc
sub
repnz
push
popa
pop
pop
adc
call
jnp
pop
sbb
mov
add
xor
inc
fists
pop
adc
imul
dec
ss
lods
rcl
sbb
mov
xor
popf
in
rcll
push
test
cmpsb
mov
aaa
inc
popf
lret
call
push
sub
xlat
shlb
push
repnz
out
loope
adc
mov
adc
add
idivb
xchg
outsb
pop
shrl
negb
insb
inc
clc
mov
wbinvd
aas
imul
in
cmp
pop
neg
clc
mov
sbb
cmp
cmp
iret
push
clc
ljmp
cmpsb
push
xor
inc
mov
repnz
jne
insl
test
pop
test
les
scas
movsl
fdiv
jge
ss
dec
pop
cmpsl
add
fdivs
mov
divps
cmp
mov
pop
lret
or
jns
aas
stos
inc
pop
js
in
insb
adc
out
or
mov
xor
mov
loop
insl
cmp
loop
jp
push
push
or
cmpsb
into
push
and
mov
sub
outsl
loopne
push
adcb
stos
repnz
or
scas
dec
jge
push
leave
pop
pop
jo
cltd
sti
jnp
xchg
repz
adc
sbb
inc
lods
insb
or
dec
insl
icebp
cmp
call
popa
or
dec
xchg
js
loop
test
and
adc
jge
and
lcall
sbb
mov
pop
adc
std
pop
sahf
jbe
jecxz
inc
add
ljmp
inc
in
xchg
jl
adcb
xchg
jno
sbb
adc
xchg
fcmove
push
sbb
add
inc
and
pop
dec
sti
xor
mov
out
out
sbb
lret
rep
xor
adc
in
mov
push
push
mov
call
cmpsl
sbb
sti
cli
cwtl
test
mul
cwtl
lretw
fmull
dec
int
adc
mov
xchg
mov
sub
inc
mov
sbb
mov
cmp
mov
je
cmp
xor
dec
iret
ds
inc
scas
jno
mov
inc
mov
test
mov
stos
jns
repz
or
mov
inc
push
sti
loopne
in
xorl
sbb
adc
mov
cld
jmp
mov
mov
adc
cmp
outsl
sarb
sub
mov
add
bound
mov
les
dec
mov
fimuls
or
iret
cld
push
sbb
or
into
lds
les
cmp
in
add
jb
cmpsl
pop
sub
lahf
pop
and
lods
enter
and
int
cmpsb
pop
mov
lods
sub
jne
sub
add
mov
ja
es
cmp
and
imul
sub
cmp
fs
cltd
mov
or
mov
shlb
outsl
cmp
inc
nop
fs
and
insb
or
loopne
push
sarb
add
clc
inc
jecxz
testb
adc
mov
jp
cld
sbb
xor
lds
cld
mov
pusha
outsl
mov
shr
xor
js
jmp
cmp
and
and
aas
or
inc
dec
inc
std
and
movsb
int3
ficoms
popf
add
loope
mov
repnz
imul
test
shl
repnz
cld
xchg
lahf
stc
icebp
aad
mov
inc
pop
addr16
ja
leave
sub
xchg
bound
fwait
xor
leave
push
test
into
inc
mov
pop
nop
daa
pop
sbb
add
fwait
add
push
lcall
test
imul
adc
loope
jecxz
mov
add
fidivl
push
push
cmp
push
clc
push
and
cltd
or
push
shrl
xchg
sbb
shrl
pop
test
stos
jne
test
sahf
cmp
into
mov
dec
add
ss
out
pushf
xchg
nop
jmp
sbb
sub
fcmovu
dec
inc
out
cli
jge
inc
mov
jge
out
aaa
repz
pop
scas
mov
gs
rorb
mov
cmc
cmpsb
or
add
pop
pop
outsl
aad
loopne
aaa
pop
icebp
sti
roll
enter
fs
mov
add
xchg
or
out
repz
test
std
ljmp
mov
sub
adc
dec
mov
ss
js
mov
out
hlt
mov
jecxz
and
and
mov
sub
fmulp
stos
fdivrs
cmp
into
dec
outsb
sbb
jbe
and
mov
stos
lea
popf
cmp
iret
lret
ljmp
inc
adc
fiaddl
lcall
sub
adcl
inc
psubsw
mov
lret
jae
mov
out
add
or
add
cmp
fwait
lret
and
cwtl
fisubl
inc
pop
mov
inc
jmp
cmpsb
test
fwait
xchg
mov
or
adcb
cmp
pop
hlt
cmp
out
inc
mov
into
bound
mov
fistpll
sbb
sub
out
cld
mov
xchg
mov
lret
xchg
mov
fnstsw
or
mov
push
inc
xor
sbb
ljmp
ret
lods
mov
jnp
xchg
xor
das
aas
mov
pop
lcall
fdivp
enterw
in
popf
mov
xor
inc
iret
adc
cmp
pusha
inc
adc
xchg
idivb
pop
data16
mov
stos
stos
mov
jne
mov
xor
daa
divb
iret
jmp
sbb
mov
loopne
push
mov
cmc
adc
mov
in
add
dec
shlb
daa
push
xchg
loop
fisttps
clc
jle
in
jge,pt
stos
and
jae
out
cwtl
mov
nop
in
xorb
repnz
in
loop
xorb
shrl
aad
mov
xchg
scas
dec
loopne
mov
js
jb
pop
sbb
cmp
movsb
add
inc
mov
pop
mov
push
xor
sbb
leave
cmpsl
add
pop
sub
cmpsl
insb
dec
call
inc
pop
ret
and
cmp
rorb
iret
add
ret
dec
sbb
sub
inc
mov
icebp
mov
int
xchg
popa
mov
push
insb
daa
popa
inc
mov
mov
les
lret
add
mov
cmp
add
sub
ljmp
not
fildll
loopne
and
dec
sub
add
and
jo
lcall
inc
and
adc
dec
out
xlat
xor
data16
jo
addr16
dec
or
xchg
xor
mov
loope
pop
out
add
or
popa
sub
stos
std
mov
test
and
ja
aas
dec
jge
jmp
lcall
and
or
data16
loop
pop
daa
test
mov
mov
or
and
aaa
popa
mov
push
mov
dec
enter
mov
aas
fsubr
lahf
test
jge
xchg
xchg
mov
mov
and
test
push
test
adc
in
mov
into
mov
jecxz
adcb
in
push
insl
jne
lock
and
and
push
aad
mov
push
rcr
lock
cli
push
and
mov
int
jecxz
sahf
andb
xchg
pop
jmp
inc
xorl
xchg
ficompl
stc
scas
xchg
int3
mov
fwait
nop
jg
jl
dec
ret
jno
xor
nop
out
push
fildll
bound
test
sbb
and
push
das
or
xchg
into
inc
cmp
xor
iret
adc
lahf
inc
mov
insl
mov
jle
push
xchg
push
push
push
vmovshdup
xchg
cmpl
mov
mov
cmp
pop
mov
daa
adc
dec
sub
inc
or
mov
out
decl
cmp
ljmp
in
lahf
int3
xchg
sub
jns
sbb
inc
subl
mov
dec
imul
sbb
repnz
add
sub
cwtl
pop
stos
sub
xchg
outsl
adc
pop
mov
push
rclb
sub
aad
lahf
rolb
scas
jp
and
inc
and
sbb
add
mov
es
xor
mov
mov
adc
cmpl
push
imul
cmpsb
push
loop
in
inc
mov
aam
enter
dec
das
repnz
test
pop
or
loopne
fisttpll
subb
mov
pop
in
xchg
push
cltd
cmp
inc
sbb
add
mov
idivl
jno
divl
xor
out
shrl
add
add
movsb
orb
adc
pop
add
dec
inc
lcall
mov
or
pop
pop
adc
push
xchg
pop
leave
hlt
add
stos
and
clc
cwtl
mov
add
lea
cmp
notl
push
push
jl
mov
cmp
out
cmp
xor
jp
lahf
xor
lds
std
xchg
imul
pop
push
xchg
loop
sub
ss
test
sub
adc
sbb
and
add
lea
and
xchg
inc
inc
adc
jmp
cmp
or
jle
clc
fistpl
cmp
push
and
sub
stc
fmuls
lret
enter
xchg
dec
in
mov
push
scas
inc
inc
inc
adc
test
mov
inc
lcall
jne
and
add
fsubs
enter
in
xchg
xchg
mov
lods
inc
shrb
jp
std
fiaddl
cmp
clc
ja
dec
sbb
jmp
dec
dec
sahf
imul
stos
lods
cmpl
push
or
out
mov
cmp
push
shlb
jnp
enter
movsl
inc
sbb
rolb
lock
push
iret
adc
stc
rclb
addr16
movsl
push
xchg
adc
popf
mov
or
test
push
gs
push
inc
sbb
shrb
inc
xor
stos
pushf
push
ss
sub
push
shlb
xor
sarb
xor
lea
mov
lds
outsb
aaa
xchg
push
cmp
loope
sbb
push
fs
jle
inc
xchg
cmp
rcrl
xor
xchg
fsubl
lahf
das
and
movsl
scas
mov
cltd
out
outsb
int
cmpsb
xlat
std
lods
xchg
inc
loope
lods
fwait
sub
push
int3
cli
xor
or
pop
or
movsl
cld
or
sbb
negb
cmpsb
adc
dec
jae
insb
cli
out
push
nop
fmulp
xor
loop
push
or
das
jb
cmp
xchg
dec
fcom
movsl
adc
mov
hlt
int
subb
scas
jne
mov
cmp
jle
cmc
inc
cli
das
jmp
push
sub
dec
dec
lods
dec
jmp
ja
cmp
jb
movsl
lods
loop
fiaddl
jle
nop
xor
jl
mov
jo
xor
leave
andb
je
fucomp
xor
adc
sbb
rorl
pop
fs
inc
pop
dec
enter
popf
jl
mov
mov
das
push
inc
lahf
movd
push
bound
sbb
xchg
fsubl
push
sub
mov
cmp
bound
mov
out
gs
aaa
addl
leave
rolb
adc
cltd
push
xor
test
add
or
xchg
or
dec
mov
jno
xchg
mov
lea
sbb
pop
and
xor
pop
lds
mov
or
lock
jmp
sbb
sbbb
add
pop
xor
jg
rclb
js
jge
push
pop
or
cmc
mov
xchg
nop
mov
push
xchg
enter
cmpsb
mov
jl
test
xchg
mov
fisubl
cmc
jmp
mov
je
sub
adc
inc
mov
mov
rorb
xchg
xor
push
jp
cmpl
pop
ds
in
ret
mov
and
pushf
mov
dec
cmp
ss
fimull
cmpsl
ja
push
or
mov
xlat
cltd
dec
test
aas
push
gs
in
orl
jg
xchg
inc
outsl
clc
int3
and
shlb
xor
daa
loopne
fwait
pop
in
nop
cld
fadd
clc
icebp
dec
mov
je
clc
xor
sbb
fwait
push
mov
mov
pop
xchg
popf
xor
sbb
adc
mov
lret
js
dec
pop
inc
fdivl
scas
pop
xchg
aaa
inc
jl
test
adc
rol
lods
lds
shll
ret
sbb
xchg
pop
dec
jg
xor
dec
adc
add
lds
aaa
jb
in
aam
sti
hlt
inc
fadd
and
cwtl
aam
mov
daa
pop
pop
gs
dec
mov
insl
lahf
mov
icebp
lahf
int3
popf
pushf
dec
jbe
shl
push
mov
sub
fisubl
imul
cmp
vmovlps
rolb
xor
adc
mov
stos
mov
or
and
adc
jb
aas
stos
popa
sbb
insb
lods
xlat
lret
out
inc
inc
ss
rcll
mov
rclb
movsb
dec
cmp
mov
lret
into
sbb
int
pushf
jecxz
push
push
insb
push
and
and
popa
je
je
xchg
mov
lock
les
push
jo
lcall
push
pop
test
sti
adc
push
dec
dec
xor
inc
ret
push
mov
mov
clc
repz
sub
in
ret
jge
dec
lret
dec
jl
out
mov
mov
dec
jb
fs
mov
lahf
lds
hlt
pop
adc
imul
inc
sub
repz
incl
dec
and
shll
in
mov
fstl
add
or
or
fwait
push
sbb
dec
test
std
push
cld
xlat
out
cmpsl
push
mov
inc
inc
sub
mov
pop
daa
mov
das
sbb
push
fcmovu
filds
dec
rdtsc
jns
repz
in
cli
jecxz
clc
fdivs
mov
pusha
cmp
das
mov
push
mov
lcall
pop
aam
les
rclb
int
and
push
sarb
pop
iret
mov
mov
das
sbb
pop
jge
adc
jb
and
lahf
nop
lahf
sbb
push
push
mov
test
mov
daa
ds
and
mov
jmp
nop
and
jmp
pop
sbb
mov
sbb
push
pop
cmp
mov
push
mov
rorb
push
inc
rorl
clc
shlb
scas
inc
and
xorl
add
cmp
and
in
mov
pop
xor
xor
cmp
insb
lods
mov
je
dec
dec
cmp
push
cltd
jb
push
mov
imul
jle
jbe
stc
or
ficoms
call
jo
lret
mov
mov
inc
jae
jp
mov
xchg
loop
xor
sti
loopne
addr16
rclb
mov
stc
sbb
jo
cwtl
clc
push
xchg
inc
das
mov
fisttpl
xchg
add
dec
lods
ret
int3
and
adc
jecxz
mov
fwait
ja
xchg
sub
sti
push
outsl
lret
lahf
xchg
fildll
sub
pop
xchg
push
sub
shll
sbb
jecxz
inc
imul
adc
adc
jb
inc
sar
into
inc
hlt
xor
ja
add
fstl
mov
mov
lods
ret
repnz
insb
mov
nop
neg
stos
mov
mov
sbb
repz
lock
test
push
mov
in
jle
int3
loope
andb
insl
iret
or
ucomiss
rcl
std
dec
or
push
jmp
pusha
lods
pop
lds
push
mov
ds
clc
xor
fdivs
stos
xlat
pop
mov
lods
cwtl
cmp
and
xchg
movsb
pusha
push
clc
jbe
int
cli
pushf
push
push
sti
xchg
ds
jmp
jl
imul
loope
ljmp
add
js
mov
mov
push
adc
mov
stos
xchg
add
ret
mov
dec
mov
inc
mov
inc
loope
insb
dec
jnp
cmpsl
inc
mov
ds
mov
push
test
int3
dec
in
repnz
adc
mov
in
add
and
cs
bound
out
es
sarl
insb
mov
xor
jmp
jnp
test
je
push
or
cmc
das
inc
aad
jno
sub
fdiv
cmp
aad
imulb
in
das
sub
pop
cli
jle
dec
jno
inc
sbb
shrl
add
pop
jg
inc
or
xor
pushf
lahf
cmp
cld
sub
and
lcall
add
adc
mov
out
adc
int3
fisttpl
lods
and
xor
xor
inc
xchg
add
inc
fcompl
jbe
sbb
push
or
sub
movsb
sub
ret
xor
sbb
mov
mov
inc
je
out
lds
push
movb
test
adc
xchg
stc
aas
ljmp
out
or
lret
xor
mov
pushf
pop
inc
push
rorb
cld
xchg
inc
mov
adc
sbb
add
icebp
outsl
cmp
pop
mov
lods
ljmp
add
lock
cmp
jns
cld
jecxz
xchg
dec
jecxz
mov
xchg
subb
test
or
or
and
out
pop
mov
mov
sbb
aas
ficoml
jecxz
xchg
inc
mov
cmc
lret
movsl
mov
cli
div
jo
insb
dec
mov
adc
sub
and
shl
jne
inc
inc
rclb
mov
insl
dec
cs
cmc
rorl
call
xor
movsb
in
lahf
pop
cmp
or
mov
pop
mov
fmuls
cmp
and
or
nop
hlt
jnp
adc
jmp
jge
pushf
outsl
in
and
mov
jg
fistps
das
and
out
jg
mov
fiadds
push
out
xor
pop
shr
xor
lods
inc
push
movsb
pusha
lret
in
iret
push
pop
dec
lods
xor
jg
cs
mov
inc
cmp
mov
fwait
popf
leave
jnp
lea
and
lods
mov
test
inc
enter
jbe
pop
nopl
jmp
push
xchg
out
sub
dec
data16
fstl
add
cltd
pop
pop
xlat
in
push
inc
in
mov
mov
pop
ret
clc
cmpl
mov
mov
inc
and
sarl
mov
ret
in
in
shl
jae
xchg
add
push
rcr
push
pop
das
out
std
and
pop
testl
lahf
mov
loopne
mov
mov
imul
mov
mov
xor
test
mov
fbld
test
ds
nop
jecxz
xor
leave
mov
push
adc
inc
mov
jnp
jge
cmc
fdivr
or
mov
pop
push
inc
pusha
add
mov
popa
bound
mov
mov
sub
mov
aas
ret
gs
scas
pop
pop
lods
pop
in
sub
lds
mov
adc
mov
sub
out
jbe
sub
cmp
push
out
inc
pop
mov
mov
pxor
sub
call
arpl
addr16
movsb
ret
pop
add
ss
lods
xchg
rcll
sub
mov
and
test
loope
push
fnsave
sbb
sub
push
repz
cltd
inc
out
dec
stos
or
push
repnz
inc
pop
movsl
push
cmpsb
cmpsl
dec
in
mov
jg
jmp
iret
sbb
out
pop
push
mov
push
jle
mov
dec
jo
shrb
aam
pop
ret
jbe
test
xchg
mov
imul
pop
add
pop
scas
dec
mov
pop
lret
aam
xchg
cmp
call
orb
xchg
test
sub
ja
cld
add
pop
idivb
cmp
jbe
inc
jl
jge
pop
call
xchg
xor
jne
je
in
xchg
inc
xchg
andb
jae
scas
outsl
std
sti
adc
pusha
push
icebp
sbb
das
into
loop
js
mov
sub
xchg
mov
push
lea
mov
mov
pop
cmpl
mov
jno
cmp
mov
popa
jo
dec
cltd
ficoms
jb
es
nop
mov
aam
cmc
popa
test
jle
sti
addr16
addr16
repnz
leave
mov
mov
bound
xor
mov
scas
loopne
scas
movsl
push
ss
test
add
push
imul
and
mov
fnstenv
cli
dec
scas
hlt
push
jbe
inc
daa
data16
adc
mov
sbbb
xchg
xor
mov
jne
push
insl
int3
sarb
call
outsb
pop
inc
out
call
ds
ret
add
es
orl
or
fwait
push
outsb
pop
imul
inc
lods
push
mov
mov
sahf
push
insb
jno
mov
xchg
popa
repz
shrb
sub
mov
jle
cld
sbb
insb
pop
vpcmpeqb
mov
pop
gs
pop
xor
xchg
call
lods
pop
outsl
mov
and
mov
movsb
jbe
lods
movsl
fs
adc
pop
outsb
in
int
cmpsb
mov
push
jecxz
sub
jl
nop
in
push
and
jmp
ljmp
jmp
int
and
cmp
push
push
jns
lret
or
xchg
xor
push
adc
loope
mov
in
in
pop
push
in
push
jae
inc
add
js
push
fucom
rcrb
fimull
fildll
aam
test
pop
jmp
xchg
inc
gs
mov
cmpsl
and
into
push
mov
into
fisubs
fisubrl
lahf
scas
lret
ja
std
andb
test
sub
lods
mov
push
adc
adc
hlt
stos
xlat
sbb
imul
outsb
stos
lahf
add
mov
and
movsl
out
pop
inc
aad
mov
jp
xlat
movsl
pop
bound
pop
sarl
pop
push
leave
cmc
add
cs
dec
imul
push
imul
mov
iret
inc
jl
dec
bound
dec
pop
pop
xchg
mov
and
lret
les
sub
pop
icebp
test
xchg
mov
mov
lods
or
mov
sbb
fmuls
push
push
and
subb
into
into
jae
loope
inc
adc
xor
mov
dec
pop
out
mov
mov
leave
sub
iretw
out
pop
inc
ret
mov
jbe
ret
movsl
sbb
xchg
ljmp
xchg
mov
icebp
mov
es
ja
ret
adc
mov
adc
lret
hlt
mov
out
inc
dec
mov
push
loope
je
cmp
dec
sub
in
aad
scas
lds
and
aaa
add
cs
addr16
mov
int3
test
xchg
adc
jnp
jmpw
push
inc
daa
sbb
fdivrs
cmp
xchg
gs
lods
jns
addr16
mov
dec
scas
mov
mov
and
test
repz
jne
inc
sbb
sub
jg
lcall
dec
push
aaa
imul
mov
and
mov
pop
jg
ljmp
scas
jb
xchg
lahf
mov
insl
dec
lret
dec
cwtl
leave
pop
push
or
into
jecxz
nop
xlat
cmc
addr16
hlt
aad
cmc
pop
jbe
popa
and
push
bnd
sub
and
mov
mov
jns
jecxz
cmp
add
adc
ret
sub
stos
push
or
outsb
mov
lock
test
stos
cmc
fisttps
sub
leave
stos
xchg
loope
ds
ficompl
add
dec
sbb
or
int
hlt
mov
inc
jl
or
push
xlat
das
xor
push
ss
test
adc
or
jno
fcoms
into
cli
cwtl
jnp
nop
jmp
push
jl
and
xor
inc
pop
xor
cmc
adc
das
cmp
adc
aad
int3
lea
dec
gs
addr16
pop
mov
dec
rol
lret
jle
stos
dec
sbb
cmp
mov
fbstp
dec
sub
pop
cmp
std
pop
pop
or
fs
mov
xor
push
lret
lcall
push
sbb
cmp
and
setno
sub
or
lcall
or
pop
testb
outsl
leavew
and
popa
xchg
pop
mov
xchg
or
mov
fwait
ret
inc
xchg
adc
gs
popf
arpl
or
loopne
xor
push
pop
addl
out
ss
pop
sub
mov
stc
jge
mov
cmp
sbb
mov
fcmovnu
add
cltd
dec
push
into
fwait
sbb
js
mov
mov
in
mov
jnp
pop
repz
cmp
inc
mov
and
and
arpl
lcall
mov
dec
cmp
jae
mov
sub
aad
mov
xchg
imul
lods
out
insl
jle
pop
sub
pusha
jnp
xchg
lods
jo
movsl
das
jns
sbb
and
out
cld
inc
or
push
je
int3
push
pusha
int3
xor
jno
push
sahf
lea
inc
bnd
mov
or
jne
mov
mov
jo
push
cmpsb
mov
clc
shlb
mov
shl
xor
adc
pop
xor
xor
or
pop
loopne
push
mov
das
cmp
repz
popf
adc
pusha
mov
in
sbb
xlat
sahf
cmp
inc
imul
xor
xor
insb
mov
jbe
fs
test
cld
jp
pop
push
fstpl
stos
mov
orb
cld
mov
or
xchg
push
jne
mov
int
jp
pop
dec
xor
prefetchw
mov
and
push
pop
sbb
mov
in
mov
std
pushf
lret
dec
mov
pop
dec
pop
iret
hlt
std
stos
dec
sbb
xchg
cwtl
sub
cmp
pop
xor
sbb
sub
movl
mov
xor
jmp
aas
andb
cmc
xchg
dec
repnz
push
or
cli
and
pop
cmp
sub
inc
jbe
aaa
pop
ja
xor
stos
push
jg
lods
mov
xchg
jnp
xor
inc
rorl
mov
xchg
or
dec
xchg
sub
je
movsl
jl
pop
cmp
push
fcoms
cmp
jg
in
or
into
icebp
adc
repnz
jecxz
jb
jbe
and
cmp
cmp
es
test
push
int3
shll
lahf
loopne
mov
sub
pop
jns
adc
pop
repz
push
int
stos
in
inc
mov
jl
bound
movsl
and
pop
pop
test
in
daa
sbbb
addr16
xchg
lcall
ret
inc
inc
jl
out
mov
sbb
jecxz
adc
mov
fmuls
lods
stos
enter
sub
sub
xchg
pop
scas
das
push
mov
nop
xchg
inc
dec
jne
and
xchg
je
bnd
add
inc
push
lret
sti
xor
jno
cmp
iret
das
repnz
sahf
je
into
jne
ret
lock
push
out
lods
mov
ja
xor
rorb
mov
leave
nop
sub
andb
xor
adc
scas
mov
mov
push
lds
movsl
in
incl
push
loop
and
jge
add
jl
arpl
loop
pop
mov
insl
jno
mov
icebp
out
addr16
push
inc
les
pop
mov
sti
std
push
mov
mov
repnz
xchg
fwait
lds
cli
cmp
cmp
insb
pop
cmp
das
jg
shl
jp
inc
sub
add
lret
stc
lahf
and
xor
les
mov
jmp
popa
fstpt
jg
lds
adc
xchg
adc
cwtl
int3
cmp
lcall
adc
push
lcall
sbb
mov
mov
std
xlat
jl
cs
pusha
ftst
push
faddl
movsb
push
adcl
add
sbb
es
dec
cmc
xor
inc
dec
mov
xorb
pop
insb
loopne
lret
mov
add
in
hlt
mov
adc
packssdw
sub
or
test
daa
adc
lea
repnz
fst
jnp
jb
lret
fcmovnb
arpl
push
ss
jl
mov
inc
dec
add
rclb
adc
jg
sub
mov
test
xchg
jl
cld
or
inc
xchg
stos
out
lret
clc
jg
jbe
sbbb
roll
jnp
into
fwait
shll
arpl
pop
push
inc
xchg
mov
dec
adc
repz
mov
sahf
outsl
inc
outsl
mov
iret
jno
mov
repnz
scas
fisttpll
push
lret
pop
or
xchg
ljmp
pop
or
fistl
sbb
lds
mov
mov
clc
push
mov
outsl
hlt
sub
rorl
lcall
push
or
or
movsb
xchg
mov
leave
adc
test
aam
les
xchg
push
inc
fildl
imul
mov
jae
xor
popl
inc
test
push
cmp
mov
mov
fwait
inc
clc
sub
cmp
loop
fs
bound
pusha
loop
sbb
mov
js
shl
adc
dec
cmp
or
je
aam
mov
pushf
and
xchg
mov
xor
dec
arpl
or
lret
loop
insb
push
and
ja
filds
mov
ret
addr16
adc
mov
test
mov
int3
add
jg
cmp
sbb
mov
dec
mov
out
imul
jp
adc
fsubs
adc
adc
xorl
fisttps
mov
insb
aas
js
push
cltd
jo
xchg
testb
cmpsb
xlat
jb
or
mov
fwait
sbb
sub
pop
sub
xchg
push
mov
daa
and
hlt
mov
pop
in
hlt
fdivl
dec
daa
and
mov
sbb
sub
xor
pop
jge
mov
fisttpl
jl
pop
xor
mov
sbb
scas
xchg
sbb
dec
leave
mov
mov
iret
inc
lret
jno
pop
movsl
out
and
add
or
pop
jne
sti
lret
add
pop
insb
xchg
sub
aas
or
mov
fldt
add
movsb
mov
aam
pop
cli
mull
and
pop
or
jmp
movsl
pop
adc
and
mov
arpl
stc
mov
jmp
aam
pop
scas
int3
add
dec
aas
adc
jbe
sahf
test
or
dec
push
dec
pop
int3
andl
icebp
shll
aam
mov
dec
ja
ljmp
jne
sbb
dec
call
sbb
xchg
push
movsb
popa
pop
popa
test
sub
cmpsl
adc
clc
push
rcrb
lods
jbe
inc
fisttpl
nop
sbb
ljmp
iret
inc
daa
jno
es
xor
push
mov
add
cld
stc
mov
bswap
cmpsl
sub
aaa
icebp
sbb
das
xchg
or
rolb
and
lahf
mov
enter
xor
dec
mov
fidivl
pop
mov
rorb
stos
pop
xor
sbb
clc
lock
in
dec
mov
icebp
addr16
add
cltd
xchg
ds
mov
add
das
nop
dec
adc
xchg
pop
push
insl
mov
cld
pop
scas
push
xor
pop
pop
fidivs
cmc
stos
mov
pop
and
jle
stos
std
aam
out
scas
mov
jmp
add
subb
roll
stos
and
jnp
jae
xor
sub
and
adc
cmp
jl
pop
mov
cmc
adc
popf
aam
into
andb
shrl
cmpsl
pop
sti
hlt
xchg
add
outsb
jmp
ret
imul
dec
jmp
adc
mov
outsl
jbe
and
cs
sbb
loope
xchg
std
jb
nop
pop
enter
cmp
xor
jne
cld
cld
push
jge
and
jbe
fisttpl
mov
cs
stc
js
mov
mov
sarl
sbb
bnd
pop
and
xchg
cmp
mov
test
cld
cmpsb
mov
xchg
mov
push
scas
pop
jns
adc
sahf
loop
jl
scas
pop
xchg
sbb
fdiv
shll
mov
mov
dec
and
pop
repnz
imul
int3
cmc
pop
ret
pop
imul
add
in
and
outsb
in
and
subl
aaa
stc
stc
into
dec
fistl
loope
cmc
cmp
sahf
addr16
addb
xchg
xor
hlt
xchg
sub
lds
pop
and
cli
ljmp
inc
enter
movsb
insl
cld
lods
jno
cmp
and
jge
mov
std
cmpsb
lcall
lea
loopne
mov
out
enter
fmull
adc
sbb
call
aaa
jns
stos
mov
mov
out
and
jbe
out
push
jae
xor
lret
lret
sbb
outsb
jp
or
adc
and
and
pop
cmpsl
lods
cmc
sbb
cwtl
sti
fwait
mov
mov
sbb
xor
mov
mov
repz
movsb
lahf
lahf
sahf
int3
dec
shl
icebp
gs
aaa
dec
mov
cmpsb
ds
xchg
lret
inc
bound
add
in
lea
mov
add
xchg
aad
fstpt
push
scas
pop
mov
fiaddl
cli
xchg
mov
in
push
loope
push
xchg
insl
mov
xchg
je
imul
xor
fisubl
cmp
pop
in
pop
xlat
pop
icebp
jecxz
leave
call
xchg
fmulp
lahf
jns
cmp
add
pop
or
sub
push
inc
cmp
fisttps
loope
sub
mov
and
jo
fidivs
cltd
rolb
jne
mov
pop
lods
xchg
sub
es
cmpsl
cmp
push
dec
je
cmpsl
mov
sbb
loope
std
pop
daa
stc
jno
mov
scas
pop
adc
cs
ljmp
sbb
pop
movsl
adc
and
and
ret
jb
push
cmp
or
mov
mov
js
sub
in
pop
jmp
and
pop
mov
jne
sahf
fxch
cmp
push
push
push
imul
lods
js
or
jo
xor
pop
jg
xchg
jmp
test
mov
ljmp
test
lret
jae
mov
inc
push
add
jmp
xor
jge
mov
or
out
add
mov
jmp
lcall
xor
dec
xchg
stos
xchg
pop
lahf
mov
jg
insb
mov
push
in
cwtl
repz
sub
cmc
je
in
sub
es
push
or
jmp
push
pop
scas
lret
incl
rolb
push
lret
lock
dec
sub
push
cmpl
les
mov
cmpsb
arpl
std
lcall
scas
cmp
add
inc
or
sub
pop
and
sub
test
repz
dec
cmp
or
call
xor
xor
adc
jo
adc
inc
jns
in
and
jnp
movsb
aas
mov
adc
cmpsl
fwait
xor
mov
mov
scas
aas
xchg
cmpsl
mov
dec
push
mov
pop
mov
jp
cmp
xor
daa
mov
inc
gs
jns
lock
add
addr16
repnz
repz
fistl
xor
out
jp
lcall
sbb
fwait
aaa
int3
jl
leave
aad
jb
jge
imul
stc
pop
cli
shl
cli
fidivrl
cs
xchg
out
sbb
sub
cmp
lret
out
out
ficomps
pop
or
aam
push
pop
into
stos
fisttpll
push
lcall
fwait
clc
int3
mov
in
jne
cmpsl
scas
mov
cmp
mov
call
cltd
in
roll
fisttpl
out
mov
cmp
mov
or
xchg
scas
cmc
ret
out
arpl
fsubrl
ds
ja
sub
inc
or
hlt
test
call
scas
xchg
std
or
inc
stc
std
gs
aas
stos
pushf
jge
adc
add
or
jp
rcll
and
imul
insl
sti
sbbb
div
xchg
sbb
mov
xor
push
xor
or
ja
xchg
sbb
pop
push
mov
lea
sub
sub
call
leave
or
call
adc
ss
aad
jnp
scas
pop
stos
xor
out
jno
sti
xchg
sbb
jecxz
call
mov
into
sti
sti
jmp
aad
push
fcomi
lahf
sti
xchg
test
jle
das
adc
jp
mov
lahf
adc
xchg
aaa
add
fwait
in
rorb
stos
lret
pop
ljmp
test
mov
pop
loope
add
push
push
fildl
push
push
jne
mov
adc
pop
fnstenv
mov
lods
test
xchg
add
test
ss
popa
adc
dec
shrl
cmp
sbb
jge
or
lcall
cmc
mov
jecxz
xor
and
shll
mov
scas
sbb
fidivs
pop
mov
sti
pusha
outsb
sub
insl
mov
sbb
in
cmp
punpckhbw
fldl
and
adc
jae
ret
call
mov
loop
inc
popw
mov
cmovg
pop
repz
pop
fwait
cmpsb
jge
pop
repnz
out
iret
movaps
inc
push
inc
aad
outsb
and
push
loop
ljmp
mov
adc
fisttpl
sub
es
in
out
fimull
xchg
and
mov
cld
inc
or
cmpsl
pop
adc
sub
dec
push
and
inc
out
xchg
adc
push
notl
sbb
and
or
pop
loop
insl
iret
and
daa
sub
mov
xchg
les
cmp
and
les
pusha
fstps
idiv
lret
dec
cmpsb
xchg
daa
dec
fistpll
push
mov
and
insl
mov
mov
push
jge
in
pop
push
scas
in
and
sbb
imul
in
jno
adc
sbb
mov
sbb
mov
xchg
mov
dec
add
xor
ja
aam
dec
scas
xchg
bound
xchg
fnstcw
mov
loope
jmp
out
lods
xor
data16
cmp
pop
fcomps
cwtl
mov
pop
or
cltd
xchg
inc
mov
ljmp
stos
rcl
dec
dec
pusha
add
or
xor
add
jg
iretw
pop
lods
dec
mov
ljmp
negb
xchg
lds
dec
add
in
sub
xchg
movsb
inc
lcall
mov
xor
mov
imul
insb
and
cmpsb
into
xor
mov
inc
repz
xor
das
sbb
jo
lea
mov
idivl
sahf
mov
mov
jnp
lock
aam
jnp
gs
les
leave
das
fnstenv
leave
sbb
push
fstps
scas
call
cmp
cmpsl
je
sbb
call
add
xor
push
add
or
push
std
mov
cwtl
js
cmpsb
cmp
aam
or
cmpsb
mov
mov
repz
fistpll
mov
jecxz
push
jnp
push
sarl
add
repz
bound
xchg
sbb
test
call
into
cmp
xor
and
stc
push
fistpll
pop
jge
jg
pop
inc
or
inc
pop
jo
and
in
mov
insl
inc
dec
call
fwait
or
stc
clc
mov
in
je
dec
xchg
shl
pop
jmp
inc
bound
lods
pushf
xchg
lret
mov
mov
test
scas
ret
mov
enter
les
popf
and
mov
test
leave
jb
cmp
adc
and
fstl
jl
imul
inc
jp
pop
lret
outsl
push
bound
and
dec
aaa
not
aam
js
cmpsl
arpl
jne
or
imul
fdiv
pop
adc
scas
enter
pop
adc
adc
enter
sub
movups
sub
cs
inc
clc
dec
pop
pop
les
aas
jl
cwtl
inc
fidivs
in
inc
xorb
test
or
fisubs
cmpl
sbb
inc
je
and
and
dec
pop
mov
mov
xlat
ds
and
and
cmc
cmpsl
push
sbb
lret
xor
xorl
mov
mov
push
dec
lcall
je
and
inc
loop
mov
fmul
movsl
push
shlb
loopne
clc
aad
xor
jle
jb
mov
hlt
cld
or
jns
cld
sbb
xchg
push
mov
pop
mov
inc
imul
mov
inc
repz
out
es
outsb
cmp
or
mov
cmp
push
push
cmp
fxch
mov
or
dec
sub
mov
ljmp
idivl
pop
mov
or
inc
dec
incl
cmp
dec
push
aaa
insb
xchg
mov
add
ret
and
sbb
jns
cmp
inc
jno
xchg
scas
xchg
dec
add
xor
aaa
enter
mov
lcall
movsb
pop
out
test
ret
sti
adc
sub
push
adc
sub
ret
outsl
push
insl
bound
mov
outsb
mov
adc
shrb
cs
repnz
lea
and
inc
lret
cmp
xlat
mov
mov
ret
or
xor
dec
imul
jnp
rcll
cwtl
add
or
notl
xchg
cli
or
cmp
mov
ret
mov
gs
pop
movsb
mov
xor
loope,pt
mov
in
cwtl
push
push
in
pop
sub
je
movsb
jnp
loop
test
mov
jb
das
out
pop
arpl
jecxz
xlat
mov
es
push
push
sbb
sahf
cmp
sbb
aas
sbb
mov
outsl
lahf
cli
mov
das
adc
into
in
testl
fcmovnb
fstpt
inc
stos
aas
xchg
orb
movsl
lahf
sti
or
mov
or
push
sarb
gs
mov
int
dec
in
or
in
enter
mov
vprotd
daa
xchg
insb
jg
nop
dec
xchg
mov
fcmovbe
fbstp
mov
add
sbb
shll
inc
or
mov
mov
lods
imul
scas
mov
stos
mov
jbe
movsb
push
sarb
imul
fsub
hlt
lea
push
dec
in
js
dec
bnd
mov
clc
jmp
cmpsl
cs
scas
cmpb
mov
cmp
add
add
inc
in
movsb
fwait
lcall
repnz
mov
insl
js
mov
scas
dec
sbbl
adc
icebp
test
lds
vmread
ficoml
testl
xor
mov
stos
push
fildll
mov
sub
frstor
out
push
mov
mov
push
sbb
add
push
test
xchg
out
jnp
pop
cmp
xchg
cwtl
mov
mov
mov
push
push
adc
mov
mov
outsb
bound
dec
pop
adc
push
mov
push
iret
adc
test
scas
popa
lret
xchg
fnsave
cmp
jecxz
push
pop
adc
inc
sbb
popa
push
ds
push
addr16
xchg
jmp
or
push
sbb
cmp
fistps
jns
pop
lcall
inc
imul
dec
pop
cltd
xchg
add
popa
lea
rcll
push
fiadds
daa
sub
mov
outsb
incl
stc
jmp
ja
lods
aas
jecxz
outsl
jp
dec
imul
xor
sub
cmpsb
mov
pusha
xor
dec
lods
jl
ret
lods
lea
adc
sbb
ret
cmp
dec
pop
nop
mov
mov
mov
or
in
inc
sbb
loope
inc
jmp
popf
and
hlt
ljmp
out
push
push
inc
cld
lahf
lea
repnz
idivb
mov
cld
or
lahf
mov
add
mov
fcompl
sarl
out
xchg
mov
movsb
cmpsb
mov
cs
mov
add
aaa
pop
out
in
bswap
daa
iret
stc
outsb
loope
unpcklps
jl
mov
add
loope
out
pop
incl
sub
cs
inc
push
xor
mov
dec
adc
out
stos
jo
pop
fcmovne
lcall
add
scas
outsl
mov
repnz
sbb
and
and
das
jo
rep
rclb
pushw
cmc
int3
adc
ret
xor
jbe
pop
icebp
mov
jg
jo
inc
loope
mov
sub
cli
sub
jno
ficomps
inc
push
adc
dec
js
xchg
arpl
outsl
lods
jbe
leave
pop
movsb
jge,pt
pop
add
add
inc
fs
mov
sahf
frstpm(287
xchg
lods
cmc
pop
daa
das
xchg
xor
add
imul
js
push
push
xchg
lock
daa
stos
or
mov
fldt
cmp
cmp
jle
ja
hlt
jl
lods
insl
mov
xchg
fwait
out
out
loopne
fdivrl
pusha
lods
mov
push
mov
jo
in
ror
ret
cltd
shll
lods
testb
fsubl
push
out
xchg
pop
jo
popf
stos
js
xchg
push
dec
cwtl
mov
ja
mov
dec
mov
lods
in
pop
hlt
xchg
jnp
int3
push
loopne
adc
lahf
xchg
aam
xchg
imul
push
adc
jp
sub
inc
leave
and
mov
push
mov
fwait
pop
lds
stos
adc
push
push
fists
cli
pop
stos
lret
clc
dec
int3
loop
or
mov
mov
jp
mov
dec
xchg
mov
sub
test
adc
push
into
cltd
cmp
in
aam
cmp
push
ret
icebp
mov
test
rolb
sbb
movsl
mov
add
push
sti
int
test
or
xchg
jo
enter
push
adc
ds
and
dec
and
jle
jb
aaa
sbb
jle
inc
mov
jbe
lret
sbbl
push
rcrb
or
stos
jae
idivb
out
ds
mov
ja
mov
cld
clc
push
lret
test
icebp
add
rorl
scas
ret
adcl
xor
insl
daa
js
dec
push
inc
mov
mov
sub
rcl
scas
mov
fdivrl
mov
xchg
mov
xchg
adc
cmp
inc
arpl
and
push
mov
dec
sarl
iret
in
pop
fists
sbb
and
or
jo
adc
mov
xchg
adc
sbb
imul
dec
push
sub
lods
movsl
sbb
imul
dec
mov
lahf
ss
lock
push
or
jns
and
jmp
jmp
or
jae
pop
add
add
lea
inc
rcll
cld
and
nop
jg
mov
cmpl
in
sub
jecxz
rorb
int
repz
icebp
cld
ret
jle
pusha
fstpl
sub
ja
iret
fwait
or
inc
lds
cmp
xchg
jmp
sub
and
push
cmp
daa
add
lds
adc
loope
mov
rol
cmpsb
in
or
dec
adc
cld
pop
adc
inc
jo
repnz
popa
mov
sti
push
or
mov
push
add
popf
mov
dec
push
adc
inc
mov
rorb
std
push
pop
mov
xchg
push
and
inc
push
ret
in
fildll
int
pop
mov
les
dec
xchg
int3
jp,pn
insb
push
ret
in
sbb
dec
addr16
or
adc
xor
push
scas
and
lret
outsb
mov
fimuls
lock
adc
dec
movsl
imul
cmpsb
sub
orb
iret
inc
mov
lods
adc
cmpsl
sub
mov
xchg
mov
dec
test
inc
add
fistpl
add
in
or
ror
and
pop
scas
cmp
xchg
cmp
cmc
jg
into
in
jecxz
cmp
sbb
stos
out
inc
add
lcall
mov
xor
test
adcl
or
pop
or
std
pop
push
push
fcompl
dec
jp
mov
jnp
nopl
shrb
sub
loop
add
and
int3
jno
fdivrl
add
push
fistps
adc
iret
cmp
insb
cld
sub
jno
mov
jmp
sub
lahf
push
mov
pop
xor
lea
ja
cmp
loopne
scas
jo
xor
jns
and
inc
cmp
sbb
loopne
sbb
or
sahf
adc
mov
outsb
or
xlat
out
mov
stos
jae
lods
mov
test
ret
and
mov
jecxz
add
in
fsubrs
movsb
out
jmp
std
cmc
adc
les
les
mov
faddl
or
out
insl
sub
adc
testl
lea
xchg
xchg
lds
jle
mov
xor
test
cmp
sub
push
xchg
xor
lea
ficomps
div
leave
ss
je
inc
jle
mov
lods
inc
lret
sub
jl
jp
cmpsl
pop
mov
sub
dec
mov
cmp
fisubs
add
scas
lahf
dec
cmp
push
rcll
adc
mov
aas
sbb
addr16
cmp
shl
pop
iret
mov
push
xor
mov
jne
pop
add
xor
cmpsl
adc
test
or
mov
dec
gs
add
xchg
popf
xor
adc
mov
push
in
pop
addr16
insb
cmp
enter
in
test
mov
js
stos
mov
or
sbb
movsl
mov
nop
cmp
pop
lea
hlt
jae
sub
inc
add
jnp
lret
test
movsb
sub
testl
orb
mov
fbstp
pop
adc
xchg
inc
sbb
pop
arpl
inc
mov
push
xlat
fsubs
cmp
xchg
mov
imul
stos
testl
cli
xlat
ss
cwtl
nop
mov
xchg
jg
sbb
ret
insl
mov
push
jecxz
dec
cltd
mov
or
pop
jbe
mov
andb
stos
or
fmull
sub
xchg
mov
pop
sarb
out
adc
je
mov
das
xchg
pop
dec
jnp
dec
jne
insb
adc
arpl
leave
mov
or
in
add
cmp
jge
dec
movsl
xlat
mov
popa
xorb
lock
stos
pop
cmpsl
push
pop
loopne
add
adc
lods
dec
mov
sbb
rolb
lock
sbb
mov
adc
adc
lret
mov
mov
mov
fwait
mov
cld
push
push
gs
shll
cltd
lods
in
fdivrs
cli
test
cmp
pop
cmp
negl
ds
lock
orb
test
ret
addl
idivl
bound
mov
jo
jmp
daa
mov
leave
sti
xchg
in
xchg
ja
sub
addr16
loop
ljmp
sub
mov
xor
pop
mov
dec
xor
add
cmpsb
insb
mov
repz
pop
int3
mov
pop
inc
outsb
pop
mov
fidivrs
push
test
pop
pop
scas
in
data16
cmpsb
clc
fstp
mov
fcomp
flds
lods
fisubrl
stos
nop
dec
shll
fisttpll
pushf
test
adc
lock
sbb
push
jno
rcr
mov
jp
cmp
push
mov
fisubrs
cmp
data16
ja
cld
test
jecxz
lret
cmpsl
pop
rorl
movsl
into
repz
adc
jmp
cmpsl
fnsave
cmp
fmull
lea
repnz
mov
rcl
repz
push
fisttpll
cmp
pop
das
mov
jae
lods
jae
cld
cmpsl
or
adc
cmp
push
or
sbb
popf
pop
mov
jnp
lret
cmp
jno
iret
mov
lcall
arpl
mov
mulb
xchg
mov
jbe
jae
mov
arpl
in
rol
repnz
fwait
jne
pop
ret
or
cld
loope
xchg
mov
cs
adc
jb
std
nop
in
add
js
and
dec
xor
or
cltd
mov
aam
or
sub
and
scas
mov
xchg
dec
aas
pop
subl
into
in
mov
mov
jp
xchg
cmp
cwtl
jp
jp
sbb
filds
dec
aaa
jg
shlb
sahf
dec
cld
cwtl
push
dec
and
xorb
mov
xchg
nop
mov
movsb
mov
cmp
mov
ja
push
xor
pop
jp
adc
xchg
inc
dec
aas
adc
rclb
scas
lods
lea
pop
jns
sub
adc
mov
sub
and
pop
scas
lods
and
jo
add
mov
inc
push
mov
sub
lea
movsl
movsb
pop
paddsw
pop
inc
or
inc
jae
sub
call
mov
imul
lret
cmp
and
jo
or
mov
cmp
loopne
ljmp
mov
lret
dec
cmpsl
mov
mov
stc
ret
fisttps
push
cmp
pop
pop
inc
cmpl
and
cmp
add
xor
push
jmp
mull
and
inc
mov
fwait
xchg
aad
lret
mov
ja
or
test
lahf
xchg
pushf
sub
pop
sbb
in
outsl
lcall
sub
cs
int
je
inc
adc
cmpsb
jmp
mov
jo
dec
inc
fwait
xlat
test
in
inc
adc
aaa
jns
subl
mov
div
addr16
adc
loopne
shll
and
dec
shl
xchg
scas
fwait
and
mov
repnz
lcall
dec
pop
pop
test
into
mov
and
sti
testb
cs
mov
jl
lcall
or
dec
sub
scas
addr16
mov
xchg
stos
js
stc
pusha
outsb
les
sarb
rcll
insl
cli
push
enter
aaa
loopne
fdivrs
add
cs
call
jbe
jb
cmp
push
xchg
xlat
pop
xchg
out
sub
xchg
fcoml
gs
cmp
push
sub
es
mov
ja
test
push
insl
fnsave
push
jge
addr16
int
or
arpl
dec
lret
lods
xrelease
or
xchg
xlat
ret
sub
popf
daa
mov
add
cwtl
movsb
aaa
cs
and
cmp
adc
popa
sub
mov
movsb
adc
sti
adc
cs
jns
cmp
movsb
cmp
adc
test
xor
cmpb
and
hlt
or
add
call
jbe
push
pop
or
xlat
lret
cmc
inc
popf
add
add
bound
sub
mov
shr
jb
pop
cmc
ja
sahf
push
push
loopne
jae
std
push
jp
inc
xchg
data16
mov
push
lock
stos
aad
adc
jp
adc
lahf
lcall
movl
loopne
xlat
jnp
push
mov
dec
vcvtpd2dqx
push
adc
movsl
sbb
lds
les
adc
repz
xor
jg
or
mov
xchg
inc
add
xchg
ljmp
pop
lret
and
in
and
in
pop
fcmovnu
into
adc
test
cmpsb
mov
jp
push
jge
xchg
ret
mov
dec
jge
rol
shlb
xlat
mov
pop
das
sbb
pop
fwait
dec
gs
cmp
push
dec
fstps
scas
pop
mov
popa
js
push
es
ljmp
cld
mov
sar
inc
gs
add
jno
dec
sbb
cmp
test
pop
xchg
andb
call
adc
xchg
lods
inc
xorb
js
int
dec
sub
dec
loopne
lock
dec
xchg
popl
lods
cld
jp
pop
xchg
mov
or
scas
out
mov
stc
std
fdivrl
and
sub
addl
popl
cli
cli
mov
js
pop
pop
into
pop
mov
mov
mov
fistl
jmp
out
js
mov
insb
jnp
xor
and
call
and
xor
or
aad
lea
iret
pop
pop
roll
sti
adcb
cmp
xchg
fistpl
xchg
cmpsl
sahf
pusha
xchg
pop
stc
sub
xchg
jnp
or
xchg
test
sub
int
out
stos
sar
dec
push
sahf
push
ret
sti
jno
pop
cli
stos
cmp
dec
scas
mov
cs
mov
mov
in
movsl
jmp
int
pop
stc
test
popf
lret
cmp
mov
idivb
and
inc
xchg
xor
repnz
iret
data16
rolb
jae
cmp
jne
gs
sub
je
xlat
adc
lods
rorl
xchg
dec
mov
loope
jge
sbb
cmpsl
push
shl
xlat
pushf
and
ficoml
push
push
addb
sti
bound
fs
push
pushf
shrl
push
lret
sahf
dec
loope
push
pusha
xor
lds
add
cmpsl
add
test
aam
lods
xor
aaa
fimuls
mov
push
or
mov
lret
xor
popa
jns
orb
jg
mov
push
mov
sbb
fadds
jae
cmp
ret
xchg
pop
enter
int3
and
rcl
rep
pop
adc
imul
fildll
adc
hlt
xchg
in
sub
inc
jo
xchg
ficomps
cs
dec
test
loopne
pop
xchg
cli
mov
test
repnz
xor
adcb
imul
mov
mov
mov
mov
dec
loop
sub
in
add
xor
aaa
inc
push
xchg
inc
fidivl
and
stc
dec
sbb
loopne
dec
je
pop
mov
and
mov
pop
ja
push
jmp
lcall
add
into
adc
adc
call
xor
mov
xlat
push
push
testb
jp
sub
iret
lahf
push
sub
fldt
ret
cmp
aas
jb
lods
into
lock
xchg
fbstp
pop
mov
into
shr
loop
push
adc
cli
add
outsb
mov
sub
pop
stos
fxam
es
push
cs
dec
imul
icebp
xor
mov
not
imul
clc
cmp
jecxz
pop
xor
testb
cwtl
and
push
ret
dec
rol
jnp
pop
frstor
pop
mov
or
testl
xor
cmc
shll
push
inc
sbb
add
stos
loope
jns
push
pop
mov
shlb
test
adc
dec
outsl
pop
push
sub
adc
addr16
lea
sbb
gs
pop
aas
jo
ss
stos
in
cmp
rep
js
jge
xchg
and
mov
jmp
jo
xchg
adc
out
dec
popf
mov
cmp
sbb
ror
aaa
inc
xchg
imul
or
add
in
push
add
and
adc
sub
sub
in
inc
and
rcll
adc
push
bswap
add
mov
in
lcall
mov
push
jne
push
xchg
test
or
cld
jmp
push
or
arpl
iret
mov
dec
add
sub
pusha
and
dec
push
dec
lcall
jp
iret
mov
je
mov
mov
mov
push
jae
jp
xor
add
push
fists
add
repz
mov
pop
fbld
scas
xchg
repnz
cwtl
adc
sub
fwait
or
sbb
mov
push
jl
add
pushf
stc
ss
or
cmp
or
and
lahf
mov
inc
pop
xchg
mov
into
mov
scas
fwait
mov
fisubs
mov
out
or
xor
push
sbb
popa
ss
stos
jbe
or
sti
inc
pusha
sub
shll
out
imul
cmp
mov
inc
mov
scas
enter
push
inc
popa
enter
mov
pop
or
mov
in
sarl
movsl
mov
pop
push
push
sbb
pop
add
rcrl
inc
lret
call
in
push
lret
faddl
pusha
xchg
xchg
mov
leave
movsb
xchg
inc
mov
inc
insb
and
les
sbb
sub
dec
aas
cmp
cmp
add
dec
popa
seta
addb
ret
lret
and
pushf
jns
es
int3
push
loop
ljmp
mov
imul
mov
cli
test
xchg
scas
lahf
adc
sahf
cmp
sbb
jle
push
ds
add
in
jo
fistpl
jl
or
adc
jmp
or
xor
adc
cwtl
rorl
inc
cltd
shr
lds
jno
xor
cwtl
je
add
dec
cmp
adc
daa
jb
mov
mov
inc
sub
in
add
outsl
dec
cld
imul
fincstp
ja
adcl
sbb
insl
mov
aaa
sub
pop
or
or
movsl
jmp
mov
fs
jno
dec
popf
inc
and
imul
popa
dec
lahf
mov
pop
jo
es
dec
add
push
ja
mov
adc
sub
sldt
mov
ljmp
imul
push
mov
or
push
sub
movsl
xor
xchg
inc
mov
dec
xchg
push
popa
and
cld
test
and
and
movsl
mov
jbe
or
ds
inc
movsl
fnsave
mov
lret
mov
repz
add
add
and
inc
aad
jmp
pop
out
imul
rcl
xchg
ficoml
jae
sbb
mov
movsb
rcrb
sub
cs
sub
mov
in
or
popa
xchg
push
push
jmp
insl
stos
mov
hlt
sbb
add
testl
xchg
sub
mov
int
mov
xchg
testb
addb
adc
jl
nop
loopne
roll
ss
mov
mov
inc
repz
cmp
clc
push
adc
repz
adc
lret
je,pt
dec
cs
loop
pop
out
sbb
repnz
xchg
jnp
sbb
xchg
aad
cli
pop
push
js
dec
inc
iret
inc
push
test
repz
jmp
fadds
jnp
and
iret
sbb
push
aas
adc
add
lahf
add
and
sub
imul
pop
or
pop
or
inc
not
insl
test
sahf
stos
bound
fidivs
jecxz
call
xchg
fisubrs
xchg
pop
adc
push
in
iret
mov
movsb
dec
in
imul
les
xchg
dec
xor
rclb
cld
shll
lods
cli
into
in
cld
mov
inc
fsubrs
mov
sub
mov
mov
hlt
idiv
stos
sbb
xchg
cmpsb
pop
and
fs
xchg
andl
sahf
fsubrp
int3
ss
fimull
or
jb
pop
cmp
mov
inc
mov
aam
pop
movsl
outsl
cmc
popa
mov
stc
jb
push
daa
push
pusha
pop
lret
ljmp
mov
mov
ja
lret
jg
iret
pop
ds
xor
flds
mov
fmuls
and
out
scas
popa
fisttpl
cld
nop
aam
pushf
xchg
mov
int
push
mov
in
xor
outsb
es
xor
dec
repnz
sbb
pushaw
mov
pop
or
mov
push
xchg
movsl
jnp
mov
mov
repnz
aad
dec
jnp
ret
fsubp
loopne
adc
nop
test
mov
sbb
mov
xor
in
cmp
sbb
jae
lcall
out
mov
lret
mov
fidivs
cmpsb
mov
ja
lea
sahf
js
jle
push
jne
les
cmp
loop
sub
lock
and
add
rclb
ret
jle
fistpl
or
loop
dec
mov
ds
pop
ja
cwtl
xchg
or
or
lret
fiadds
mov
sbb
cs
or
inc
mov
dec
lea
adc
lret
add
cwtl
dec
cltd
jns
fdivs
mov
or
sub
mov
sub
sub
andb
adcl
or
xor
push
pop
cld
mov
out
lahf
imul
lock
outsl
adc
or
shll
repnz
movsl
mov
aaa
data16
and
das
lahf
xchg
dec
inc
jae
jp
outsb
sub
sub
and
sbb
lcall
fldenv
loope
icebp
xlat
push
mov
and
pusha
sahf
push
mov
in
mov
jle
push
mov
lods
sar
sub
adc
xchg
sbbl
mov
or
inc
mov
outsb
pop
pushf
jno
xor
jo
pop
pmaddwd
sbb
jmp
inc
sar
inc
mov
test
clc
sub
je
xchg
stos
xchg
stos
pop
andl
pop
test
fstpt
testl
testb
cltd
vhaddpd
das
push
inc
inc
mov
fs
sbb
lret
mov
mov
inc
mov
into
cmp
and
or
out
push
out
negl
pop
mov
xchg
push
loopne
mov
jg
fbld
mul
cmp
in
push
mov
call
fdivl
jle
loope
mov
scas
out
mov
das
sahf
mov
das
vmulss
push
lret
and
sbb
sub
fdivrl
xchg
xchg
jae
cwtl
clc
sbb
cld
jb
xor
mov
fildl
loope
mov
add
mov
iret
cmp
les
imul
cmp
sub
and
jbe
shrb
scas
mov
or
dec
rcll
sbb
push
or
mov
test
cmp
jns
lods
rcll
dec
std
xchg
cmpsl
cmp
mov
adc
and
sub
and
sub
mov
rorl
pop
stos
sbb
fwait
in
jnp
lods
xor
jnp
hlt
mulb
add
popa
cmpsl
mov
sbb
pushf
fs
and
adc
xchg
or
sub
mov
jmp
adc
sarb
sub
mov
ja
int3
xor
cwtl
in
aad
pushf
aaa
daa
cmp
shlb
imull
aad
dec
dec
out
daa
xlat
shrb
aas
in
sahf
mov
orb
sbb
aam
xor
cmp
scas
sbb
mov
inc
dec
push
or
mov
pop
notb
pop
sub
push
aaa
jle
dec
in
ret
movsb
jmp
xor
mov
and
pop
and
adc
xchg
aam
and
test
add
aas
aad
mov
and
repnz
aad
ja
test
out
icebp
movsb
stos
jl
push
pop
xchg
imul
and
push
sbb
cltd
test
shll
cmpsl
dec
adc
jmp
cmpsb
out
add
orl
xchg
aam
and
inc
leave
cmp
mov
xor
inc
mov
jmp
orb
fildll
hlt
dec
sub
aaa
jp
test
pop
stos
mov
cmp
loope
loope
mov
jle
jmp
fnsave
ds
jo
in
xor
mov
sbb
jb
mov
pop
fadds
push
loopne
push
ret
outsb
dec
and
aaa
and
xchg
fistpl
enter
lds
jnp
adc
dec
fs
rolb
outsb
stos
test
test
cmc
adc
out
mov
out
in
mov
ja
xchg
sti
movsb
jge
aam
pop
xor
jbe
in
adc
cmpsb
int
pop
adc
and
cmp
ficoms
iret
dec
mov
or
dec
stc
or
jg
inc
not
cli
data16
push
dec
or
pushf
mov
arpl
sbbl
int3
mov
mov
aas
ror
stos
mov
add
dec
pop
dec
fcoms
and
pop
aas
adc
xchg
jle
cltd
cmp
cltd
sub
ds
int3
mov
mov
lods
mov
push
rdpmc
adc
movsb
mov
ja
mov
jo
jecxz
sub
mov
pop
mov
repz
jne
repnz
xor
mov
mov
or
pop
test
mov
mov
pop
sub
jae
push
fsubrs
pop
movsb
cmc
jae
popa
loopne
or
push
add
aas
pop
xchg
adc
mov
push
xlat
mov
bnd
cmpsl
movsl
daa
jns
out
jbe
xchg
push
mov
push
jmp
addb
out
cmpsl
sub
xchg
test
sarb
jmp
fwait
mov
jno
clc
nop
xchg
jge
data16
shlb
inc
fwait
mov
inc
movsl
loop
or
or
inc
out
cmp
mov
mov
call
cli
or
mov
mov
sbb
std
mov
push
push
das
xchg
or
xor
stos
shl
adc
pop
fs
xchg
outsb
out
cmp
mov
cld
adc
insb
pop
mov
stos
bsf
push
cmp
and
and
and
in
mov
in
mov
in
add
xor
jae
ljmp
jne
dec
cmpsl
mov
mov
xor
out
mov
rcrb
in
movsb
sub
jnp
jecxz
dec
jp
je
adcb
popf
rcr
jae
inc
dec
xchg
sub
ja
xchg
mov
jns
roll
pop
mov
aad
paddd
insb
xchg
pop
gs
cmpsl
jp
xchg
or
and
xchg
out
rclb
and
cmp
js
jle
adc
jl
mov
sahf
test
movsl
push
mov
call
loop
jns
and
and
adc
lahf
xchg
inc
repz
and
mov
mov
mov
addl
dec
shrl
sbb
je
sub
rol
or
cmp
imul
imul
and
pop
test
lahf
out
inc
scas
inc
cltd
stos
mov
dec
add
out
jae
dec
arpl
or
and
out
data16
aad
int
jmp
add
daa
or
inc
xchg
scas
mov
ret
jnp
stos
and
mov
ds
and
mov
repz
xchg
jne
or
lahf
lcall
repz
dec
mov
mov
adc
lret
mov
xlat
mov
rcrb
std
mov
cmp
sub
inc
loope
xchg
xchg
pop
ja
je
lods
xchg
mov
test
std
gs
dec
pop
popf
add
test
dec
xchg
test
jmp
into
jns
jno
lret
jecxz
ror
icebp
push
jo
sbb
mov
mov
test
das
cmp
shlb
pop
cli
dec
inc
xchg
xor
dec
cmp
mov
and
testb
and
xchg
sub
push
dec
jp
lcall
arpl
out
outsl
adc
bound
jp
scas
call
sar
fisubrs
test
cmpsl
movsl
xchg
rclb
call
idivb
cmpsb
or
inc
cwtl
inc
sbb
push
mov
aad
mov
or
add
push
pop
cmp
dec
int
xchg
xor
popa
cmc
rorl
cld
fidivl
fistpll
mov
jo
rcrl
movsl
sub
sbb
jecxz
add
sbb
lods
lcall
nop
in
and
mov
sub
xor
adc
xor
fisttpll
int
cld
sarb
pop
sahf
xor
stos
int3
ret
subl
test
insl
inc
or
sbb
push
into
fadds
jbe
rcll
xchg
jg
lea
lods
mov
jae
xchg
std
jbe
push
and
das
fwait
cltd
imull
ja
enter
or
jg
popf
testl
outsl
xchg
xor
fcomp
sub
dec
push
fsts
ficoms
addl
mov
fsts
insb
inc
cwtl
jb
fcoms
adc
add
jae
js
and
pushf
or
fcmovnb
cmc
hlt
lret
shrb
imul
call
jg
mov
bound
stos
int
cmp
mov
dec
or
inc
dec
or
cmpb
sub
clc
fstps
outsl
mov
or
cltd
add
lods
pop
shll
cmp
scas
out
icebp
sbb
mov
popa
lret
pop
fists
repz
std
daa
or
mov
inc
bnd
and
movb
fistl
cs
sbbb
xchg
xlat
mov
cmp
mov
loope
mov
xchg
bound
ret
cmp
inc
mov
push
das
movsl
out
stos
stc
icebp
mov
test
popf
push
loope
les
xchg
mov
pop
or
cmp
jbe
clc
dec
addr16
inc
push
add
icebp
cmp
push
pop
cmp
jbe
insl
fiaddl
mov
inc
out
je
xor
leave
mov
sbbb
push
cmp
mov
loop
xor
pop
aad
xchg
sub
lret
ror
dec
dec
jno
ret
pop
enter
pop
push
scas
ftst
popf
cmp
mov
mov
or
sub
jae
pop
data16
xor
push
sub
call
pop
or
pop
fildll
sahf
fisubl
dec
arpl
mov
cmp
push
mov
test
shrl
pop
out
int
and
sub
jne
das
sub
pop
pcmpeqd
in
mov
xchg
sub
xchg
aad
imulb
je
inc
cmpsl
aam
jmp
repnz
repnz
fidivrs
inc
mov
lret
sub
jl
cmp
jge
mov
pop
fwait
dec
mov
mov
or
fs
testb
dec
dec
mov
cmp
adc
ja
sbb
outsb
rol
addr16
cwtl
or
mov
push
pusha
or
stos
xchg
xlat
cltd
xchg
dec
jmp
into
mov
jnp
mov
mov
xor
jo
push
dec
lret
addb
insb
mov
stc
cld
pop
loopne
adc
mov
mov
repz
outsb
iret
sahf
data16
mov
push
dec
and
mov
cmp
mov
pushf
and
lds
push
lret
pop
inc
fmull
push
in
xchg
xchg
push
int
mov
pop
mov
mov
into
pop
xor
cmp
mov
fwait
add
sub
pusha
repnz
push
les
push
ficoml
sbb
push
xor
testb
rcrb
int
mov
xchg
xor
dec
subb
dec
fbld
ja
gs
jo
dec
scas
test
mov
repz
push
add
dec
xchg
jp
cld
push
xor
fistps
je
lahf
xchg
push
mov
pop
aaa
sbb
mov
loop
dec
xor
pop
cmpb
nop
sub
sub
mov
ja
fs
mov
mov
and
outsl
or
mov
xor
cmp
mov
pop
xor
push
xor
fidivs
stos
imul
jae
fs
dec
sbb
fistl
in
mov
jne
ss
stos
and
jg
flds
xor
cmp
mov
add
notl
cmp
movsl
cmp
push
ds
scas
push
mov
inc
lcall
mov
outsl
shrl
les
jle
and
mov
xchg
add
ljmp
mov
and
adc
jge
rcll
scas
bound
mov
mov
popf
int3
movsl
lret
out
in
pop
insb
xor
out
or
mov
popf
and
sbb
orl
out
dec
lret
mov
xlat
pushf
pop
dec
ja
push
xor
push
sub
sub
mov
jmp
pushf
xchg
push
xor
inc
adc
insl
mov
ret
insl
or
sbb
out
push
xlat
sbb
xor
call
sarl
inc
aam
out
test
lods
pop
out
pushf
mov
ror
aas
xchg
rolb
in
int
pop
clc
cltd
repz
xor
xchg
movsb
cltd
cmpsl
jmp
cmp
gs
pop
push
lcall
lcall
push
js
nop
xchg
mov
dec
fistps
dec
pop
scas
mov
sub
xchg
imul
outsl
shlb
sbb
mov
notl
aam
adcl
mov
int
cmp
pop
mov
mov
pop
mov
testl
mov
js
pop
into
xlat
and
cmp
lods
imul
push
push
mov
mov
pop
pop
jno
and
loope
cmpsl
push
xchg
into
cwtl
and
mov
mov
xchg
fs
dec
pop
mov
in
mov
xchg
jne
or
lock
pop
or
test
xchg
ljmp
xchg
adc
xor
je
lds
adc
jns
sub
mov
divb
outsl
fwait
cltd
add
or
insb
jbe
dec
das
xchg
ret
cli
adc
cwtl
mov
adc
push
out
cmpsl
mov
push
ret
cmp
dec
push
pushf
push
sbb
lock
adc
inc
test
insl
or
fstps
test
icebp
fdivrs
fidivs
dec
dec
inc
movsb
sar
dec
mov
push
loope
push
inc
adc
xchg
mov
dec
ret
out
aam
leave
es
xchg
je
inc
push
jns
aas
sbb
enter
mov
jns
mov
rcr
push
daa
push
repnz
scas
sarb
sbb
and
movsb
dec
add
mov
scas
adc
lds
cmp
orl
jo
fs
clc
pop
sbb
jbe
stos
shlb
outsl
pop
mov
iret
pop
fwait
fs
jo,pn
fisubs
ret
jnp
insl
aas
clc
test
mov
pop
mov
int
out
or
jne
push
xchg
arpl
and
clc
mov
pop
loopne
lods
adc
xor
das
jecxz
inc
pop
sarl
push
sbb
pop
lahf
mov
jle
dec
pushf
sarb
dec
push
add
and
outsb
dec
and
sar
ret
cmpsb
jl
lea
dec
sbb
sbb
pop
pop
push
inc
or
inc
xor
aaa
mov
mov
out
xorb
daa
cmp
shrl
leave
mov
mov
out
loop
pusha
mov
sub
sbb
nop
push
iret
jbe
jno
add
das
push
shll
insl
xchg
iret
aam
jbe
add
sub
iret
sti
jb
cltd
filds
or
xor
cmc
call
mov
inc
je
or
arpl
xchg
pushf
imul
fwait
in
leave
adc
ljmp
or
mov
adc
mov
mov
mov
sahf
pop
notb
dec
arpl
jge
add
je
test
pop
iret
push
pop
dec
addr16
mov
in
pop
mov
sbb
xor
jo
mov
mov
lahf
sbb
jp
push
dec
jle
xchg
and
jp
imul
and
sarb
cmp
add
dec
notl
or
mov
lcall
ss
pop
inc
mov
push
ja
add
xor
orb
addr16
das
inc
or
adc
mov
or
adc
pop
jle,pn
push
leave
sahf
in
cmp
mov
pushf
or
out
sub
xchg
sbb
jns
dec
bound
hlt
pop
adc
scas
xchg
sbb
inc
mov
xchg
and
movsl
xor
mov
pop
add
xor
and
lahf
jmp
das
cmp
inc
int3
imul
push
dec
mov
andb
shlb
add
loope
and
movsb
mov
xorl
sbbl
hlt
ret
xchg
or
cmpsb
jl
add
dec
ja
mov
fs
lock
jl
sub
and
popa
dec
js
pop
ss
mov
xchg
jle
pop
iret
out
or
jnp
and
pop
mov
xor
xlat
add
outsb
mov
pop
les
mov
xchg
jnp
rolb
js
dec
stc
xor
jae
div
mov
adcb
push
xlat
pushf
mov
aaa
lahf
ss
mov
sbb
push
xchg
cltd
dec
sub
arpl
cs
or
test
insb
cmp
ds
insb
jmp
leave
mov
insb
or
xchg
mov
jge
cmp
sbb
repnz
les
push
mov
dec
into
pop
nop
test
enter
sbb
add
sub
aaa
mov
and
movsl
nop
mov
out
fsubl
mov
sbb
aaa
pop
mov
push
rcll
ja
sub
std
mov
mov
xor
mov
and
hlt
lds
rolb
out
testb
and
movsl
push
jle
mov
addr16
pushf
mov
xchg
je
into
xchg
mov
cmpb
sub
ds
sbb
stos
in
aas
pop
push
sbb
and
push
sahf
fisubrl
cmp
mov
push
xor
scas
cmpsl
outsl
leave
sbb
pop
or
jno
lea
inc
add
test
jnp
mul
lahf
imul
xchg
sarb
sbb
xor
data16
adc
adc
or
push
or
cmp
rorl
push
ljmp
rorb
lahf
or
dec
mov
fwait
out
and
mov
xchg
cwtl
lret
cmp
stos
sbb
cmc
push
pusha
in
loopne
inc
fwait
mov
popa
flds
call
fistpll
push
in
das
movsl
jge
ret
pusha
and
mov
dec
int3
adc
and
aas
scas
mov
inc
lret
dec
mov
adc
rcll
inc
mov
mov
stos
jmp
scas
adc
add
add
lea
jne
push
je
pop
in
in
xchg
xlat
sarl
xor
pop
mov
inc
inc
jno
sub
in
xchg
sub
scas
mov
or
dec
scas
ret
sub
aam
inc
xchg
mov
cmpsb
mov
push
adc
daa
adc
jne
adc
jmp
ja
inc
rolb
nop
adc
ja
and
mov
sub
sub
nop
in
inc
mov
mov
lret
or
mov
add
fs
inc
sbbb
mov
push
dec
data16
pop
dec
and
scas
xchg
mov
fimuls
mov
mov
repnz
xchg
push
stos
push
sarb
or
inc
mov
fldcw
daa
xor
hlt
mov
push
adc
rolb
push
dec
sbb
or
add
sti
mov
jbe
xchg
stos
push
loope
outsb
loop
les
mov
sahf
jno
imul
arpl
out
cmpsb
mov
orl
daa
xchg
push
icebp
addb
std
test
orb
dec
leave
cmpl
dec
add
jne
arpl
or
stc
ffreep
mov
leave
or
test
les
in
clc
shr
arpl
loope
mov
mov
and
jle
arpl
ret
add
jl
imul
iret
popa
sbb
add
push
mov
mov
loopne
mov
dec
push
cmp
popf
sbb
mov
jb
popa
add
lcall
add
xchg
sub
xchg
rcr
rorb
cwtl
fucomi
and
into
out
push
fists
add
arpl
cmp
mov
dec
test
mov
notl
sub
or
mov
andl
aad
mov
push
icebp
add
shrl
push
aam
sub
int
es
pop
hlt
addl
data16
push
push
fdivrs
jo
cmp
inc
cmpb
lds
cmpsb
adc
jnp
nop
push
stos
out
dec
push
flds
out
pop
pop
xor
out
mov
int3
add
dec
push
adc
fadds
popf
in
aad
int
jo
jl
daa
xlat
mov
jno
repz
fisttpl
cltd
pop
jecxz
aam
rclb
sbb
mov
inc
or
pop
stos
mov
mov
lock
push
insb
repz
fistl
call
icebp
jno
fsubrl
push
in
bound
rorl
popa
mulb
out
add
adc
mov
add
cmpsl
into
subl
orb
adc
fs
imul
stos
or
push
mov
pop
popf
shl
mov
shlb
fnstcw
push
xor
sti
test
mov
ja
xlat
mov
lcall
xchg
outsl
mov
jl
push
mov
mov
in
loop
pop
fisubl
xor
fidivs
test
imul
rolb
insl
repz
xchg
sub
pop
fwait
jne
sarl
in
les
lcall
adc
or
pop
push
pop
stos
jbe
xchg
mov
pusha
cltd
cmp
jae
cmp
push
scas
test
fdivrl
jo
andl
ficompl
scas
push
jne
aam
mov
ret
dec
test
mov
xor
ljmp
mov
out
xor
and
sub
jnp
dec
push
sti
cltd
sub
inc
outsb
dec
mov
popf
test
sahf
js
dec
jbe
mov
adc
in
fisttpl
imull
ja
scas
jge
add
pmullw
adc
mov
cs
or
fidivs
mov
dec
fnstenv
cmp
add
or
cmp
enter
push
out
lcall
jge
cltd
ffreep
mov
stos
mov
jae
cmp
mov
sahf
aas
and
test
sbb
test
xor
mov
jae
insl
mov
cmp
cmp
mov
shll
sbbb
lret
cvtps2pd
mov
outsl
icebp
dec
cmp
xor
insb
jmp
pop
icebp
and
ret
jb
adc
mov
mov
jl
jns
cmp
ret
adc
sbb
es
sti
hlt
mov
cwtl
push
cmp
xchg
inc
pop
xor
push
fdivl
pop
cmp
pushf
into
and
fdivs
xorl
jnp
dec
cmp
mov
je
mov
jl
push
add
jbe
jl
xor
cmpsl
jl
mov
jecxz
pushf
xchg
pusha
sbbb
push
outsb
xor
inc
sbb
adcl
push
in
pop
in
fistl
data16
ret
mov
addr16
sbb
sub
xchg
iret
shlb
std
leave
faddp
in
sbb
dec
sub
adc
pop
jecxz
jno
outsb
push
emms
sub
int
jo
test
or
jge
xor
loopne
fnsave
std
jge
sti
es
das
sbb
adc
or
ljmp
fdivrs
jmp
cld
pop
push
enter
mov
dec
testl
xchg
mov
shl
mov
mov
mov
in
pop
adc
pop
fmull
imul
pusha
lcall
or
cld
add
sbb
shll
jbe
mov
pop
dec
xor
sub
aad
mov
lods
dec
jl
adc
jno
rclb
arpl
iret
add
xor
and
xchg
push
test
or
cmp
icebp
shlb
je
cs
fmull
or
add
jp
adc
mov
arpl
lock
leave
add
scas
pop
aam
inc
scas
mov
movsl
in
mov
loop
dec
fsubs
ss
xchg
aad
dec
movsb
pop
mov
or
loopne
enter
mov
or
sbb
roll
xchg
cmp
or
rorb
push
cs
notb
cmp
es
dec
ret
std
test
mov
add
aas
movsb
or
insl
in
ljmp
inc
in
mov
inc
xchg
lock
xor
add
jmp
fnstcw
push
loopne
push
lret
ret
out
mov
cmp
pop
xchg
lcall
stos
lods
fmuls
cs
and
in
adc
dec
inc
imul
lcall
mov
mov
mov
inc
aaa
cs
cmp
stos
inc
sbb
and
pop
or
movsl
jno
hlt
jle
jmp
jecxz
daa
push
mov
mov
inc
cs
pop
jg
add
mov
into
out
xchg
dec
push
add
dec
sqrtps
sahf
stos
repnz
jns
xor
cmp
jne
mov
dec
sbb
loope
xchg
daa
sahf
mov
popa
dec
dec
nop
cmp
mov
inc
stos
dec
movsl
movsl
je
sub
xchg
push
out
mov
aas
adc
out
ds
insb
gs
push
jnp
leave
lock
stos
aad
pop
or
push
rclb
sub
cld
jne
lret
jae
daa
or
outsb
int3
inc
xor
into
leave
dec
lret
insl
push
push
cmp
lcall
aad
push
add
mov
cmp
xor
out
mov
mov
ss
jns
push
stos
sbb
mov
or
jp
mov
adc
enter
rol
or
xor
mov
aas
add
and
test
orl
push
movsl
cmpsl
stc
int
movsl
out
stos
pop
xor
lcall
cmp
ret
es
std
inc
cmpsl
mov
aas
mov
mov
and
inc
xchg
std
and
push
or
rol
jne
fisttpll
pop
add
push
aas
mov
int
mov
lret
adc
fdivrs
ss
jl
ja
pop
jnp
inc
dec
stos
rcrl
push
xchg
inc
test
lret
loop
lds
sar
rcll
ficoml
iret
arpl
and
jg
insl
pop
xchg
sbb
imul
adc
or
or
dec
pop
dec
arpl
pop
clc
pop
pop
pop
push
movsb
outsb
sbb
das
sbb
push
xor
pop
out
cmc
test
xchg
jecxz
mov
pop
mov
dec
insb
jp
js
adc
jo
int
test
dec
sub
dec
mov
out
icebp
imul
xchg
mov
push
bound
rorb
fwait
mull
loope
add
fstps
xchg
mov
jge
sahf
sub
test
gs
popf
mov
sbb
xchg
mov
cld
cltd
xor
adcb
mov
xchg
push
lods
pop
loop
xchg
dec
repz
jle
lods
or
je
fcmovb
xchg
rcll
js
jb
ficoml
add
insl
fisubrs
dec
xor
mov
movsl
loop
mov
adc
mov
sub
enter
les
push
and
jle
subl
out
push
pop
sub
push
sti
fildll
xchg
add
jmp
imul
jge
popf
lret
test
out
dec
mov
adc
scas
push
testl
mov
pop
sbb
ss
out
cmp
inc
xor
int3
dec
ds
test
int
ja
bound
mov
in
divl
xor
pop
les
gs
sti
mov
jmp
cmp
mov
gs
into
jno
xchg
test
push
pop
xchg
mov
or
insb
push
ss
pop
or
aas
mov
mov
sahf
icebp
push
orb
sub
dec
cwtl
popa
jb,pn
int
ja
xchg
repz
jmp
lock
aad
testl
cltd
or
jns
pushf
test
ret
test
jle
sub
cwtl
xchg
imul
das
xchg
xorl
sub
dec
add
lahf
jmp
add
adc
sbb
nop
mov
inc
push
test
mov
mov
lahf
adc
inc
in
xchg
adc
in
out
push
mov
ret
stos
repnz
mov
orl
dec
mov
xchg
cmp
lcall
insl
inc
sbb
outsb
mov
fninit
xchg
mov
inc
imul
addr16
iret
dec
sub
jne
ds
mov
add
inc
shlb
lea
std
in
leave
loop
cmp
cmp
sub
push
and
sti
jne
sub
out
adc
push
gs
cld
daa
inc
sub
popl
aas
jle
mov
shlb
sub
lea
loop
push
fcoms
cmpl
fldt
mov
dec
not
pushf
adc
mov
out
mov
jbe
out
ret
int
push
jns
pop
imull
lret
inc
cmp
jg
ret
jle
hlt
adcl
push
jb
cmp
adc
pop
xchg
pop
movsb
test
push
xor
fidivs
dec
popf
inc
xchg
pop
cmpsl
dec
scas
testl
icebp
pusha
jnp
sbb
or
cmp
cmpsb
daa
inc
cwtl
jle
mov
repz
aam
loope
push
add
dec
cld
ja
push
mov
outsl
sbb
cmp
dec
inc
push
repz
cli
mov
nop
cmp
movsb
nop
ficoms
fistpl
jge
arpl
inc
xor
adc
shlb
lret
adc
adc
sub
stos
pop
push
fwait
popa
inc
inc
xor
sti
cs
outsb
icebp
mov
ret
push
lret
mov
das
push
xchg
addr16
mov
pop
mov
lods
mov
lretw
push
or
rcrb
adc
out
mov
addb
stos
add
outsb
cmc
push
pushf
xor
or
lahf
cmpsb
mov
daa
vpmacsdql
jo
test
and
mov
push
lcall
lcall
xchg
pop
icebp
mov
insb
mov
fsts
sbb
sub
dec
movsl
ja
push
cmpsb
fs
or
push
daa
jle
orl
pop
mov
cs
mov
xlat
push
lret
xchg
les
pop
dec
iret
ds
xchg
add
mov
push
jae
cs
daa
int3
xor
push
js
push
mov
sahf
or
jns
jmp
pop
pusha
jno
or
push
js
bound
cld
dec
in
loop
fwait
scas
pusha
dec
aad
inc
mov
jp
fwait
adc
pop
jecxz
add
sub
mov
adc
or
push
pop
sbb
iret
adc
sub
inc
jg
adc
jae
adc
in
jae
push
ret
pop
xorl
adc
movsb
mov
inc
adc
les
cmp
loop
movsl
mov
mov
out
sahf
cld
mov
jbe
or
push
mov
je
sbb
imul
pop
jb
xor
in
aaa
imul
ficoml
jo
push
mov
add
mov
adc
or
dec
and
mov
xchg
mov
rcr
orb
es
adc
adc
add
fnsave
dec
inc
and
pop
sub
les
mov
repnz
xchg
push
ja
inc
aad
std
and
imul
mov
xor
push
mov
outsb
cmpsl
mov
push
jmp
roll
push
lods
movsl
mov
fldl
in
data16
test
lret
mov
sbb
mul
adc
mov
into
jecxz
xor
pop
popf
xor
add
push
call
mov
mov
pop
or
imul
mov
or
inc
jae,pn
mov
push
mov
mov
cli
adc
mov
ficoml
jnp
outsb
stos
add
adc
inc
test
fistps
jmp
loope
leave
pop
pop
js
dec
js
jnp
or
enter
mov
push
pop
es
or
mov
inc
mov
mov
pop
test
loop
xlat
fildl
in
pop
dec
mov
mov
mov
or
xchg
in
push
dec
inc
daa
icebp
aas
push
test
mov
xchg
cmpsb
jle
filds
aaa
jae
decl
jge
int3
mulb
push
ljmp
fmul
jle
aam
push
out
mov
jno
inc
jp
repz
push
push
or
cmp
fcom
leave
dec
mov
dec
jg
repnz
mov
sti
js
ret
sub
popf
xor
nop
popf
call
adc
das
mov
js
add
cmp
fdivl
adc
cs
mov
and
jmp
jno
in
psubusw
push
xlat
rcr
movsl
movsl
cmp
jge
xchg
mov
test
adc
pop
mov
jae
lret
repz
mov
ss
jg
fucomp
pop
jb
dec
push
push
out
insl
test
or
pop
fstpt
xchg
push
dec
jnp
int
subl
mov
pop
test
push
jb
inc
popf
push
repz
xchg
imul
and
dec
pop
sbb
xor
inc
inc
mov
mov
adc
addr16
jg
leave
lret
add
lock
test
jg
insb
jg
sbb
xchg
arpl
dec
hlt
cld
aaa
and
or
or
and
notb
or
dec
aaa
out
or
lods
dec
int
inc
dec
xor
aaa
outsl
sar
test
test
hlt
cmpsl
cmp
js
loopne
add
repz
insb
adc
ret
pop
or
mov
dec
pushf
xor
cmp
nop
and
in
pop
add
mov
jmp
xchg
cmp
cmp
xlat
dec
mov
pushf
sbb
fnstenv
stos
fbstp
fnstsw
inc
jo
push
dec
fwait
cs
mov
add
sub
jecxz
fisttpl
dec
das
mov
xor
cmp
aas
insb
push
push
pusha
mov
mov
xchg
or
sbb
ss
and
iret
mov
xlat
ret
lcall
xor
jge
loop
mov
insl
cmp
or
xor
mov
ficoml
rcrb
movsb
ss
or
and
adcl
pop
shr
ficomps
pop
testl
cmc
mov
lods
inc
in
inc
ficompl
cli
pushf
sub
mov
add
aas
dec
cmpsb
mov
lock
mov
in
add
cwtl
adc
test
scas
in
dec
push
dec
sti
ret
out
xchg
jne
ficomps
test
push
ror
and
sub
mov
jno
push
jbe
sub
jnp
sbb
jae
xchg
imul
aas
mov
mov
orl
inc
imul
mov
in
sahf
sub
xor
cmp
sti
mov
sub
rcr
and
mov
in
jne
adc
xor
dec
dec
xchg
inc
cwtl
leave
or
add
adc
cmpsl
ret
test
mov
xchg
xor
imul
mov
les
mov
arpl
dec
orb
leave
xchg
and
inc
sub
pop
das
mov
sub
cmp
mov
cld
xchg
xchg
xor
lds
add
adc
jl
lret
stc
sub
xchg
adc
mov
mov
mov
popf
daa
iret
fbstp
mov
insl
push
mov
jo
lret
xlat
fisubrl
xchg
in
bound
std
ds
ljmp
pop
push
push
pop
dec
pop
in
ds
int
roll
or
add
xchg
ss
orb
jmp
xchg
push
xor
nop
shlb
cmp
jmp
mov
mov
mov
in
cs
pushf
cs
in
pushf
or
pop
bound
rcrb
add
sub
lods
mov
out
xor
dec
pop
or
sbb
ret
scas
pop
mov
test
mov
and
mov
popa
sbb
inc
cmc
daa
bound
icebp
movsl
sar
in
test
jg
decl
or
pop
mov
fistpll
imul
jo
jno
inc
jl
dec
mov
xor
xchg
and
dec
cltd
push
out
mov
andb
ss
call
mov
aas
fs
xchg
imul
loopne
pushf
xchg
mov
cld
adc
inc
popf
dec
out
dec
push
xlat
addr16
xchg
ja
ss
and
into
outsb
jne
mov
aam
xchg
ret
repnz
cmp
hlt
call
sbb
ljmp
or
cmp
xor
ss
lds
outsb
jns
add
xchg
xor
or
xchg
xchg
jnp
cmpsb
jge
push
jl
adc
or
addb
jmp
aaa
or
and
mov
arpl
mov
mov
cmp
and
xor
fsubs
fs
lret
test
jecxz
and
mov
xchg
es
xchg
jge
pop
lock
lret
mov
push
jo
or
test
sub
add
dec
out
sbb
mov
subb
push
sbb
xor
faddl
out
inc
adc
inc
mov
dec
mov
adc
lods
mov
fidivrs
sbb
adc
scas
mov
sbb
mov
sub
movsb
add
out
ficompl
aaa
inc
loopnew
xchg
or
inc
ret
test
pop
je
push
cld
pop
xchg
mov
xchg
push
adc
movb
movlps
subb
inc
fildll
and
dec
xchg
xchg
in
rcll
xchg
ret
xchg
sub
sbb
enter
mov
pushf
mov
mov
and
jns
ja
adc
int
jp
repz
jae
xor
adc
xorb
sbb
push
mov
sbb
mov
push
test
jl
pop
scas
mov
xchg
jmp
int3
sbb
inc
sbb
mov
loopne
pop
add
push
add
divb
and
test
ja
insl
out
repnz
test
pop
push
jmp
bound
test
add
sub
imul
mov
ret
aaa
popa
push
dec
sub
push
cmp
or
js
lea
xor
cmpsl
jb
imul
in
pop
push
jge
push
mov
mov
repz
and
inc
xchg
fsubl
aad
inc
rcll
adc
jmp
push
fwait
mov
mov
cli
mov
adc
pop
addr16
mov
pop
jno
sbbl
std
add
bound
loopne
lret
sub
aam
int
lea
popa
pop
jp
mov
stos
jg
sub
mov
cmpsb
fsubl
pop
mov
call
scas
push
fwait
mov
push
cmp
pushf
inc
je
cli
and
les
rcl
repnz
stos
push
mov
test
das
sub
mov
stos
mov
fwait
daa
cmpl
mov
roll
or
call
mov
daa
mov
sbb
sbb
enter
fcmovne
mov
daa
das
xor
and
cmpsl
dec
insl
and
mov
daa
mov
rolb
fnstenv
jmp
jge
adcl
add
shrb
mov
sbb
pop
mov
fistl
dec
sbb
outsl
iret
test
mov
mov
dec
cli
iret
fwait
ja
rcrl
mov
test
leave
inc
std
je
into
dec
dec
mov
cmpsl
pop
xor
fs
add
addr16
dec
les
cmp
xchg
filds
loop
ss
sbb
xchg
sbbb
dec
sahf
cmpsb
rolb
xor
in
repnz
cmp
in
lods
and
jecxz
loope
push
sub
roll
ss
mov
mov
adc
add
jns
xor
adcb
push
pop
xchg
cld
sbb
jmp
shlb
sbbb
fwait
mov
out
inc
in
bound
ret
aaa
mov
loopne
faddl
inc
xchg
loope
jne
daa
xchg
enter
das
cmp
xchg
popf
loopne
rcl
ja
ret
je
rorb
mov
pushf
sbb
movl
ljmp
inc
pop
mov
shrl
push
jecxz
dec
add
insl
mov
cli
add
je
int
pop
rorb
out
push
imul
mov
pop
jns
rcll
cmp
push
add
and
test
or
add
xor
imul
out
outsl
inc
sbb
sti
add
popa
nop
xchg
jns
push
nop
les
jb
aam
push
xlat
ret
xor
cmp
arpl
dec
ret
fstpl
jnp
sbb
dec
pop
vandpd
push
jp
cmc
call
int
push
in
insl
loope
mov
push
cmp
cli
js
addr16
pusha
mov
push
inc
xchg
lock
je
fadds
es
mov
push
fisttps
lret
and
stos
add
xor
pop
out
cli
push
sbb
mov
jbe
and
lahf
jle
sbbb
pop
dec
push
pop
xchg
loop
dec
mov
das
sub
ljmp
imul
popa
sti
out
add
dec
and
jae
fs
jo
push
mov
jmp
dec
xlat
xchg
stos
fwait
add
mov
cmp
cmp
aam
fisubl
xchg
mov
pop
dec
shl
cmp
fstps
add
ret
movsl
push
push
and
stos
or
xorb
bound
jge
pop
sbb
fisttpl
nop
jbe
jo
sbb
push
outsl
push
and
movsl
or
out
popf
inc
or
enter
pop
int3
xlat
push
mov
jb
gs
adc
mov
add
mov
add
sbb
fstpt
pop
mov
movsl
movsb
mov
cmp
popf
jbe
in
cmp
test
ret
popf
ds
dec
shrb
jmp
jb
ret
pop
dec
push
mov
pop
jae
mov
inc
testl
push
mov
lods
in
xchg
pop
lahf
das
out
stos
jl
jae
xchg
sarb
or
or
xchg
pop
add
add
int
push
repz
inc
sub
xor
or
outsb
xchg
popf
dec
sbb
sbb
and
mov
movsb
aam
dec
jg
test
call
add
and
dec
mov
mov
mov
and
push
push
mov
xchg
aas
xchg
lahf
or
shl
incl
ljmp
cmp
mov
sbb
push
inc
dec
jb
adc
jnp
and
int3
push
dec
stos
push
sub
or
or
stos
out
hlt
mov
js
shrl
adc
lcall
fs
popf
dec
adc
inc
js
push
pushf
xlat
cmp
ficompl
and
rcl
rclb
xchg
cmp
pop
or
inc
push
hlt
inc
xor
mov
lea
sub
aas
adc
std
fldcw
jecxz
pop
popf
jp
inc
mov
sbb
les
mov
pop
mov
pop
ljmp
sub
push
mov
fcomip
xorb
iret
xchg
or
testl
movsb
push
icebp
push
repnz
int
imul
adc
inc
fildll
jne
adc
insb
adc
inc
adc
xor
out
popf
arpl
loope
mov
in
jo
xchg
shlb
loop
dec
lcall
mov
push
ret
ror
push
cmp
clc
scas
sti
push
cmpsb
or
cmpsb
sbb
scas
sar
adc
loopne
cmp
dec
js
cs
ljmp
xchg
jbe
lcall
pop
sbb
lea
rclb
out
xchg
movsb
mov
mov
pop
sub
xchg
out
jne
and
inc
clc
xor
add
push
sub
add
icebp
loop
dec
xor
sub
fbstp
sub
jo
pop
arpl
shrl
dec
push
cli
js
dec
movsb
lret
push
mov
mul
addr16
and
lret
dec
mov
or
pop
adc
push
pop
scas
popa
cmp
enter
pop
std
cmp
xlat
lcall
sub
mov
sub
sbb
fisttpl
mov
jb
in
popf
fwait
das
loope
add
imul
popf
sbb
or
movsl
and
pop
scas
mov
add
push
cli
hlt
xchg
shlb
mov
sbb
or
sahf
cmpsl
cld
adc
add
mov
pop
imul
jbe
or
dec
mov
fiaddl
sbb
test
fidivl
clc
stc
aad
mov
xchg
mov
mov
bnd
jbe
hlt
mul
mov
cmp
ret
and
pop
shlb
lret
pop
and
aad
mulb
cmp
adc
pop
pop
push
fistpl
popa
or
cmp
not
fwait
psrad
sub
arpl
std
xor
push
jo
mov
repz
fcomps
xchg
xchg
mov
mov
cld
inc
repz
add
lret
in
data16
jp
icebp
lret
add
jmp
cmp
mov
dec
and
push
push
sarl
std
xor
xchg
mov
das
aas
xchg
fisubrs
adc
fcmove
mov
testl
sub
stc
lock
jno
fildll
xor
in
sar
cmp
aam
rcll
push
adc
pop
mov
push
shrl
jmp
leave
aaa
int3
in
dec
add
mov
xor
fsubrs
sub
ljmp
inc
outsb
or
pop
dec
aad
fucomi
movsb
jne
mov
jne
inc
data16
jmp
incl
lock
out
dec
jns
div
jbe
mov
test
lea
jl
push
xor
mov
adc
int
xor
cmp
in
iret
add
in
das
lahf
mov
xor
jno
push
push
mov
mov
mov
jno
fcmovu
lds
sbb
sbb
divb
xchg
sbb
fdiv
sbb
pop
jns
aas
xor
dec
hlt
clc
mov
nop
push
or
stc
lahf
mov
mov
xor
or
movl
cmp
mov
movsb
movsb
mov
pusha
pop
push
pushw
inc
sbb
add
lahf
fdivr
xchg
stos
sbb
jmp
or
inc
popa
into
sbb
lods
jne
mov
popf
mov
pop
popf
mov
dec
insb
push
sbb
cmp
mov
mov
jno
sub
dec
pop
add
imul
sub
iret
cli
nop
sub
adc
cmpsb
pushf
dec
xchg
aas
adc
ja
in
and
test
aas
gs
and
cmc
push
adcb
xchg
cmp
lea
arpl
cwtl
add
out
pushf
adc
or
mov
aad
in
pop
fucomi
inc
xor
and
push
mov
add
add
add
add
loope
add
loopne
add
add
add
add
inc
loope
add
loopne
add
add
add
add
data16
add
loopne
add
add
add
add
jle
add
clc
loopne
add
loopne
add
add
int3
loopne
add
loope
add
loope
add
loopne
add
loope
add
loope
add
add
xor
add
add
add
push
loope
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
into
loope
add
add
add
add
addb
add
and
add
xor
add
add
add
push
loope
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
into
loope
add
add
add
add
addb
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
jb
inc
push
jne
insb
insl
outsl
outsb
cs
insb
add
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
popa
arpl
inc
imul
push
push
xor
fs
insb
add
add
push
jo
push
je
imul
inc
add
push
push
inc
push
xor
cs
insb
add
add
inc
outsb
jne
push
push
push
imul
dec
dec
inc
inc
push
push
xor
cs
insb
