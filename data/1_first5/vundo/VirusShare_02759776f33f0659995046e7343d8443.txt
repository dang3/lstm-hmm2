cmp
xor
imul
adc
mov
popa
mov
jecxz
inc
lea
sbb
mov
cmc
lds
faddl
or
shlb
jns
stos
mov
pusha
dec
aaa
stc
or
aam
mov
les
lods
divb
push
adc
sbb
je
shlb
ss
adc
sbb
or
hlt
gs
sbb
dec
jno
or
push
push
icebp
inc
pushf
das
aad
push
gs
aaa
mov
cmpsb
mov
jbe
push
int
sbb
fcmovu
int
mov
repnz
and
insb
pop
sub
xchg
xorb
sarb
lret
pop
cmp
outsl
in
xor
iret
dec
dec
sbbb
and
daa
jp
sbb
jnp
mov
int3
es
faddl
mov
xchg
mov
sub
inc
xchg
jle
or
xor
dec
jle
and
out
lea
cli
xor
and
fistl
in
lods
or
adc
xor
loopne
std
xor
jbe
mov
mov
out
jnp
mov
imull
sbb
cmp
and
or
xor
pop
lret
mov
inc
add
cmp
jbe
sti
cmp
repz
push
cltd
outsl
sub
jg
out
or
mov
jbe
in
pop
loop
pop
cmp
xchg
add
loopne
mov
sub
lea
push
in
jne
adc
cli
insb
mov
pop
lahf
loopne
inc
push
add
ja
mov
ds
mov
cltd
jno
lea
je
sbb
insl
fsubrs
pop
push
int
mov
rorl
out
push
cld
adc
inc
imul
orb
andb
push
and
add
in
sub
pop
cld
mov
ljmp
testb
or
mov
mov
bound
pop
cld
popa
sbb
adc
daa
mov
addr16
push
mov
pushf
pop
shlb
sub
loop
aaa
arpl
addr16
cli
or
sub
lahf
subb
jbe
cmpsb
jecxz
cltd
jno
loop
jno
add
dec
pushf
imul
addr16
jns
pop
xor
dec
sbb
dec
mov
sub
xor
ss
or
cmc
mov
mov
cld
pusha
clc
iret
xchg
xchg
inc
jecxz
xchg
in
into
iret
and
sub
dec
mov
push
lret
icebp
rcrb
fists
test
mov
jnp
mov
adc
pop
dec
sarl
sbb
pop
push
test
jecxz
nop
movl
test
gs
or
inc
mov
mov
jno
bound
fstpl
and
xchg
or
outsb
lods
insl
cli
fdivs
loopne
push
das
xor
push
lock
mov
adcl
js
mov
add
fisubl
pop
push
loope
sbb
shrb
out
inc
adc
ljmp
cmp
xchg
mov
testb
xor
inc
outsl
adc
push
pushf
cmp
xor
mov
jge
insb
stos
cmpsb
add
lahf
add
mov
leave
push
sbb
test
sbb
shlb
fcmovnbe
inc
jle
mov
scas
dec
dec
dec
cltd
pop
fdivp
outsb
lea
jno
js
fnstsw
adc
fistpll
xorl
jne
mull
pop
cs
and
mov
and
pusha
out
inc
js
xchg
cmp
mov
loope
in
cs
mov
or
and
les
sbb
das
js
mov
cmp
or
jno
pop
dec
clc
and
sti
or
push
scas
mov
in
or
xor
jge
pop
xchg
mov
xchg
mov
mov
pushf
xchg
pop
movsl
add
sbb
cmp
dec
xchg
xlat
mov
aam
or
imul
push
fists
dec
out
clc
test
sbbb
dec
jge
jl
push
pop
cmp
cmp
inc
fstpl
and
cmp
mov
lods
cmovb
xacquire
stos
add
enter
cmp
shr
jae
inc
ja
mov
jge
sbb
sub
mov
sbb
scas
sbb
roll
outsl
pop
out
sub
out
stos
lods
mov
fcomps
hlt
push
insl
shlb
or
lods
stos
addb
out
jbe
imul
jmp
mov
inc
push
inc
ror
or
rcl
lret
lds
jge
dec
pop
rcll
pop
mov
xor
and
aas
repnz
jns
add
lcall
pop
push
lods
and
loope
pop
aaa
fs
xchg
or
insl
fstps
sbb
jmp
push
push
push
dec
sbb
or
cmp
jl
inc
xchg
fsubrl
lcall
cwtl
mov
dec
mov
cs
dec
out
push
std
pop
lods
inc
icebp
cli
mov
adc
shll
mov
inc
mov
pushf
mov
pop
popa
inc
fildl
scas
lret
push
dec
out
stos
lods
popa
sarb
aad
fstps
mov
aas
add
mov
movsl
adc
jo
sahf
fidivl
push
test
pop
and
sbb
cld
ret
std
scas
push
lret
jne
push
jb
sahf
jmp
popa
lods
or
xchg
jno
adc
mov
mov
repnz
pushl
xchg
and
pop
in
jp
aad
mov
int3
roll
ret
and
xor
mov
jle
jno
roll
roll
ja
int
cmc
xor
xchg
mov
push
pusha
iret
inc
lahf
fnstcw
aas
xchg
add
cli
mov
stc
jle
in
dec
xor
mov
hlt
mov
std
or
sbb
icebp
cmp
mov
push
adc
ds
out
sub
mov
sub
sahf
ljmp
cmpsb
int3
xchg
push
shl
jge
mov
aad
mov
int3
into
lock
jecxz
adc
lret
push
cmp
daa
cwtl
clc
mov
mov
xchg
cltd
je
enter
inc
push
sbb
jle
nop
stc
mov
out
sbb
and
mov
pop
jo
ja
inc
mov
orl
xchg
iret
std
icebp
vcmpps
mov
mov
cltd
jmp
mov
das
out
jns
push
add
xchg
fwait
push
cmp
pop
adc
adc
inc
xchg
enter
imul
rcll
aad
adc
test
in
or
sahf
sub
mov
pop
mov
push
movsl
subl
add
bound
dec
adc
sbb
popl
pop
sub
fistpl
dec
inc
jnp
loope
mov
notb
mov
xchg
push
scas
int
and
mov
out
pop
pop
push
mov
inc
pop
mov
gs
adc
inc
fistl
sahf
sbb
into
out
push
inc
ret
aas
addl
jg
dec
sbb
in
or
mov
cmp
push
and
lods
push
jl
adc
gs
sbb
mov
or
fidivrs
test
xchg
popf
mov
xchg
sub
sti
jo
out
push
lock
ret
js
cmp
xor
leave
push
xchg
js
or
aad
and
cmpsl
jns
push
cmpsl
mov
xchg
rcrl
pop
pop
aam
inc
jnp
lods
in
xor
imul
adc
sti
mov
mov
aam
ds
movsb
test
iret
xchg
and
scas
fldcw
sub
sbb
sti
mov
sub
push
add
add
add
cld
data16
repz
push
sti
mov
ja
hlt
aaa
sahf
jae
jns
adc
dec
xchg
dec
dec
push
ljmp
call
loop
add
inc
movsb
mov
mov
lods
out
xor
jb
repz
push
xor
addr16
mov
sub
test
popa
leave
lods
inc
repz
sub
cmp
sti
mov
stos
test
push
jo
loop
cld
mov
add
pop
xor
and
rolb
jnp
lahf
or
mov
js
mov
sbbb
xor
lods
arpl
and
or
addl
push
arpl
inc
inc
cmpl
lret
in
xchg
in
cmp
scas
pop
xchg
xchg
mov
push
jns
inc
loopne
sub
in
and
iret
xchg
out
pop
cld
jbe
adc
fistps
lods
inc
mov
movsl
sbb
mov
dec
xchg
inc
ret
fbstp
lods
fidivs
insl
jae
push
dec
dec
cmpsl
cmc
add
int
mov
xchg
aaa
idivb
fsubs
mov
lahf
loop
and
and
sbb
cmp
aaa
xchg
shlb
aas
cmp
and
lret
inc
popf
pop
or
sub
movsb
or
pop
inc
xchg
mov
ja
pop
sbb
mov
fnsave
lds
sub
cmp
stc
mov
add
or
insb
cmc
add
xchg
mov
sub
jmp
lcall
sbb
adc
sbb
aas
dec
inc
xchg
aas
lock
addr16
rcl
scas
lret
enter
dec
xchg
pop
sub
or
lods
mov
jecxz
mull
into
imul
dec
in
sbb
orb
imul
cmpb
es
orl
outsb
inc
adc
imul
lcall
ffree
add
add
jnp
jmp
test
jb
lds
cmpsl
mov
nop
xchg
jns
inc
sub
inc
repz
mov
push
stc
mov
dec
std
scas
enter
ja
lcall
mov
mov
subl
lock
adc
lods
into
int
icebp
xchg
fldt
pop
shrl
and
xchg
cwtl
mov
lret
sub
pusha
scas
fptan
xchg
xchg
popa
cmp
mov
mov
xor
in
sub
testl
mulb
jp
scas
ret
push
mov
negb
mov
repnz
inc
lcall
dec
loopne
jne
pop
inc
mov
adc
out
arpl
jo
dec
pop
pop
xchg
ret
pushf
movsb
dec
in
pop
push
jmp
lret
jge
mov
fcmovnb
and
sub
adc
fwait
dec
andl
mov
mov
scas
xor
adc
xchg
gs
push
repnz
cmpsb
inc
sub
push
lahf
inc
sbb
inc
stc
out
stc
pop
addr16
data16
test
and
or
xor
cltd
and
inc
iret
xor
cltd
dec
and
push
xor
jmp
jb
int
bnd
xor
or
xor
test
push
sbb
push
add
test
mov
mov
dec
mov
jg
push
das
cmp
movsb
addr16
xor
mov
insl
push
sbb
les
out
shll
paddsb
sbb
jnp
enter
jo
mov
ljmp
mov
lcall
es
lods
sysexit
clc
sbb
sub
sbb
sub
in
pop
jmp
add
call
adc
out
push
int3
cs
push
je
clc
adc
lds
lods
lar
cltd
test
jns
pop
hlt
pushf
les
test
push
inc
mov
or
sbb
add
pushl
jp
pop
int
add
add
data16
inc
jp
pushf
repz
jno
push
mov
inc
mov
mov
and
loope
fisubl
or
pop
mov
orb
idivb
xor
sub
mov
mov
xchg
je
fcoml
jo
cltd
adc
dec
cltd
daa
test
out
mov
and
pop
push
je
dec
pusha
enter
lods
push
bound
sub
inc
inc
js
pushf
int3
jmp
push
movsl
fsubs
pusha
sub
repz
jge
into
xchg
call
pop
mov
int
stc
xor
jb
shll
xor
inc
push
fisubrs
cmpsb
mov
or
iret
dec
jb
iret
sbb
daa
cmp
mov
mov
test
or
mov
in
inc
cld
ss
je
out
xchg
dec
enter
dec
sub
push
pushf
sbb
cmpsl
mov
xor
addl
popf
rcl
sub
fwait
xchg
mov
dec
pop
xlat
hlt
add
push
dec
pop
lret
ja
jmp
or
out
jmp
inc
outsb
pop
shlb
jl
mov
das
dec
leave
dec
sbb
int3
and
cmpsl
and
pop
xchg
aas
leave
sahf
mov
push
jnp
fldt
pop
shll
js
test
dec
or
xor
sub
pusha
je
and
inc
xchg
test
addr16
push
fisttps
sahf
jns
pushf
or
stos
push
jns
icebp
push
push
cmpsl
mov
cltd
subl
scas
sub
lods
test
add
xchg
in
sarl
rorl
adc
addb
adc
push
dec
push
push
cmp
inc
and
jge
inc
shll
cmp
lret
xchg
movsl
ret
mov
clc
push
adc
stos
lods
mov
sahf
int3
xor
icebp
jnp
ret
or
ja
adc
jb
pop
xor
push
xor
jge
stc
mov
ficomps
cli
test
add
std
je
mov
movsl
sub
fldt
mov
mov
sbb
out
push
inc
and
jge
dec
lea
sti
ljmp
jl
addl
mov
ss
adc
or
cld
sub
mov
movsl
xchg
repnz
lds
jg
orl
cmc
pop
or
add
inc
sarb
sbbl
add
les
repnz
jg
push
loopne
and
adc
jecxz
push
js
aam
fiadds
pop
adc
and
xlat
cmpl
jnp
in
stos
push
pop
jae
out
mov
pop
mov
mov
lods
sbb
loope
stos
addb
xor
aam
add
xor
push
pop
daa
enter
mov
pop
sub
xchg
mov
pop
push
cmp
aaa
inc
xor
ljmp
push
sbb
mov
sbb
insb
or
jl
rol
or
xchg
cmpl
dec
pop
jle
inc
cld
pop
add
shl
xor
rcl
cltd
cwtl
addr16
loope
pop
out
push
pushf
insb
inc
mov
fisttpl
jmp
stos
and
lret
clc
scas
insb
cs
ret
fcmovne
lret
mov
and
icebp
inc
fwait
mov
sub
and
xchg
out
aas
aad
xor
mov
pcmpgtw
xor
out
adc
push
in
sti
adc
jo
adc
xchg
pop
fstpt
lret
sub
std
push
loopne
scas
cmp
insl
dec
aad
sarb
push
mov
fwait
jge
adc
rcr
fscale
xchg
ds
imul
jmp
or
outsb
les
shlb
cmpsb
js
repnz
insl
outsl
mov
dec
out
sahf
or
out
jmp
xchg
sbb
add
mov
cmc
pop
cmpsb
mov
push
adc
nop
inc
sub
pop
jle
mov
and
daa
jae
dec
mov
dec
or
adc
dec
dec
lcall
push
cmpsl
insl
loop
mov
ret
cmpsb
jg
mov
and
jns
je
pop
adc
mov
pop
lret
sbb
pop
std
mov
xor
sbb
pop
mov
add
inc
mov
fadds
jg
pop
inc
and
ljmp
cmp
pop
jae
sub
iret
ljmp
jg
and
push
push
cs
sub
out
jp
pop
enter
adc
xchg
sahf
push
xchg
sbb
pop
jp
jnp
fcompl
fwait
mov
jecxz
dec
add
push
cltd
hlt
xchg
cmp
xchg
push
push
mov
jle
inc
lahf
pop
mov
js
cmc
std
xchg
call
sarl
sub
or
inc
add
push
fiaddl
outsb
in
sbbl
sub
subl
gs
orl
jbe
hlt
rcll
mov
and
push
sub
sbb
scas
push
pop
pop
imul
aad
mov
push
mov
popa
cmp
inc
adc
addl
lds
or
icebp
int3
shll
adc
ljmp
in
imul
push
jo
push
sbb
sbb
sub
pop
out
call
xor
outsl
aaa
pusha
jbe
push
shlb
fdivrs
push
cltd
fdivrs
pop
or
repz
lcall
cmc
add
into
aad
data16
adc
lret
pop
xor
ljmp
bound
push
mov
arpl
push
ret
add
aaa
push
insb
jmp
cli
inc
sbb
mov
jb
lock
shrb
and
push
jp
sahf
call
mov
jae
adc
mov
sbb
imul
add
lcall
cmpsl
mul
jne
ss
pop
push
out
fldt
repnz
lea
mov
movsl
lret
fcomps
clc
arpl
shll
sub
mov
ss
fnsave
pop
mov
xchg
inc
mov
stos
add
js
or
dec
cmpsb
mov
pop
fistpll
rolb
daa
push
add
and
pop
ds
imul
loopne
mov
and
jno
das
xchg
fimuls
cld
push
add
in
arpl
sub
cs
sbb
push
imul
pop
mov
or
out
pop
jo
inc
push
cmpsl
dec
mull
dec
dec
test
insl
fdivl
jnp
or
test
mov
cli
or
popa
dec
add
dec
pop
jge
int
add
lret
pop
or
sub
sub
adc
cmp
pop
sbb
outsl
aam
aaa
mov
int3
ds
cmpsb
lea
in
mov
out
aad
mov
or
inc
xchg
jmp
stos
xchg
bsf
filds
dec
popl
dec
std
xchg
cmpsb
mov
mov
cmpsl
lea
fistps
out
out
in
mov
fnstcw
push
push
lds
mov
rcl
jns
popf
and
jno
cmp
lods
sbb
mov
mov
leave
shrl
ljmp
dec
enter
pop
aas
cmc
stc
rorl
jl
pop
faddp
sbb
jne
push
incl
call
mov
adc
mov
push
xchg
jno
and
pop
clc
push
das
dec
inc
mov
xor
or
push
mov
jne
movsb
popf
pop
mov
and
xchg
pop
jbe
daa
push
lret
icebp
fwait
out
popf
mov
cld
or
ds
das
push
inc
jp
add
out
aaa
mov
lret
xchg
stos
mov
clc
adc
shrb
push
xchg
scas
and
xor
dec
xchg
es
pop
xor
addr16
rcrl
push
jp
mov
hlt
push
push
lret
mov
xchg
mov
adc
popa
nop
addr16
mov
push
jns
cmpsl
inc
stos
or
pop
push
adc
xchg
clc
cmpsb
jl
test
add
push
gs
movsb
xor
sahf
dec
sub
adc
movsl
in
in
out
xchg
icebp
dec
pop
pop
fistpll
aas
add
xor
inc
add
dec
imul
loop
subl
pop
xchg
cmp
inc
incb
jmp
insb
cmp
aaa
test
push
add
cwtl
jnp
fwait
rorb
xor
mov
movsl
push
out
and
mov
push
pop
lea
mov
jl
out
push
jne
push
push
insb
inc
or
add
push
idivl
pop
iret
jbe
inc
adc
and
mov
and
mull
jp
data16
or
inc
shlb
mov
dec
sbb
dec
dec
sar
adc
push
mov
mov
xor
jp
mov
add
dec
pop
pop
out
dec
test
sub
sub
repnz
push
mov
stos
xlat
xor
in
dec
cmp
cmp
loope
pushf
xor
pop
mov
sti
and
mov
dec
scas
push
loop
inc
ficompl
cmc
cmp
dec
sbb
les
or
stos
inc
dec
pop
cmp
idivb
cmp
xor
out
rclb
test
push
jo
sub
and
addr16
shr
and
xlat
loopne
pop
dec
jae
pop
test
fidivl
mov
inc
mov
push
jbe
push
pop
push
push
mov
decl
call
or
insb
icebp
add
cwtl
hlt
dec
adcl
jle
xchg
aaa
pop
stos
and
es
push
sub
add
loopne
jmp
dec
push
or
out
mov
bnd
out
lods
js
ret
daa
rcl
xchg
mov
in
fs
adcl
mov
push
movsl
add
shrl
in
jle
ss
and
mov
inc
jecxz
add
push
jb
stos
push
xchg
mov
ret
sarb
js
adc
repz
sub
aaa
mov
mov
in
pushf
hlt
mov
lret
testl
ret
out
or
cmpsb
out
dec
inc
call
cld
loop
or
cmc
ficompl
or
xchg
cmc
jg
pop
mov
testb
out
psubsw
xlat
je
faddl
rcrl
in
jne
icebp
and
adc
push
pop
jo
xchg
test
jns
mov
pop
loope
mov
movsl
prefetch
or
dec
insl
adc
or
sbb
adcb
xchg
cli
push
mov
and
bound
sar
cmp
and
loope
and
jl
testb
fistpll
mov
push
in
dec
sarb
and
mov
push
icebp
mov
es
rorb
out
adc
mov
fadd
pop
inc
push
aam
push
jne
in
xlat
xchg
jmp
js
and
scas
mov
loopne
xor
nop
cmpsb
imul
xchg
push
and
fdivs
loope
sub
dec
mov
ret
pop
std
je
adc
lods
pushf
mov
and
inc
and
cmpsb
dec
mov
push
push
fsubrl
pop
or
insl
arpl
ret
push
out
dec
inc
dec
out
je
xor
xorl
mov
pop
mov
dec
addw
xchg
dec
lea
push
sub
movsl
mov
jp
ja
ss
icebp
mov
cld
xor
daa
jns
stc
push
sbb
inc
aam
fbstp
in
flds
fisubrs
sub
mov
mov
aas
sbb
xchg
dec
ja
les
ds
in
fcmovbe
push
push
lret
fnsetpm(287
dec
rcll
mov
and
leave
lock
lahf
jbe
gs
test
xor
dec
jmp
leave
int
jno
xlat
add
push
daa
stos
scas
testl
dec
jns
or
pop
pop
je
add
aad
or
es
js
leave
mov
mov
scas
pusha
pushf
mov
lods
leave
dec
fsubrl
popa
sbb
fdivrl
fwait
cmp
movsl
rcrl
aam
xchg
mov
inc
jmp
jnp
xchg
sarl
mov
sub
test
jge
imul
and
lock
cwtl
cmc
jnp
testb
std
xchg
sub
pop
in
push
cmp
mov
shrl
not
mov
into
rorl
xchg
and
fsts
sbb
mov
pop
into
mov
icebp
adc
push
xchg
loop
jae
and
dec
fsubrs
push
out
jb
push
or
movsl
push
nop
test
adc
rcl
mov
fisubs
mov
sbb
mov
xchg
lea
ljmp
sti
nop
addr16
pop
sub
mov
mov
and
or
pop
int3
insl
adc
incb
lea
jl
and
cwtl
ljmp
pop
js
mov
inc
lods
jp
clc
js
cmp
arpl
push
ja
subl
loop
imull
xchg
int
in
movsb
je
inc
pop
mov
pop
cmp
xor
movsb
mov
movsb
out
pop
stos
je
push
mov
repz
out
ds
in
dec
inc
lcall
aaa
arpl
sbb
rcrl
and
dec
cmpsb
push
inc
adc
rorl
sbb
xchg
pop
outsb
jle
mov
pusha
sbb
fcoml
xchg
test
cltd
inc
ljmp
mov
xor
add
test
imul
imul
add
push
jp
dec
add
xchg
stos
adc
hlt
mov
adc
push
mov
nop
jo
stos
cli
outsb
inc
fnstenv
daa
jg
pop
cmp
dec
or
in
mov
js
pop
pop
pop
pop
hlt
and
sbb
lea
je
cmp
jnp
imul
push
out
cltd
insb
xchg
fildl
jmp
loope
mov
jno
mov
sub
movsl
scas
js
mov
orl
mov
loopne
jmp
dec
mov
das
scas
mov
inc
pop
fwait
adc
ficompl
testb
xchg
mov
sub
shll
pop
clc
into
out
mov
fmul
push
jae
mov
fisttpl
xor
xchg
and
jecxz
jmp
aad
lods
inc
mov
cld
dec
or
xor
mov
jno
lods
lock
xchg
pushf
data16
xor
xor
bound
xchg
out
mov
jbe
cmp
call
in
test
std
in
movsl
sbb
mov
dec
sub
decb
mov
xor
mov
insl
nop
mov
cmpsb
hlt
push
loope
sbb
dec
jmp
idiv
aas
stc
pop
mov
jp
mov
dec
mov
aam
repz
repz
movsl
scas
pop
lods
mov
xchg
jecxz
push
cmp
xlat
jno
dec
stos
and
and
test
jg
imul
in
mov
add
mov
cmp
sub
scas
add
inc
pop
inc
cmc
pop
mov
lods
cli
mov
cmp
lahf
gs
in
je
add
jae
cld
ja
fdiv
gs
loop
push
lods
lods
pop
sti
mov
pop
cmp
mov
sbb
jno
and
xlat
lret
push
and
shll
push
mov
gs
push
push
adc
jns
cmpsl
cmp
out
add
jg
inc
shll
add
shrl
jae
xor
dec
push
or
fwait
out
jg
or
mov
enter
cmp
jns
mov
xchg
xor
loop
lret
mov
lcall
mov
idivl
xor
fadds
sbb
pop
cmc
xchg
xor
dec
sahf
push
xchg
test
enter
mov
repz
cltd
es
out
mov
rcrb
xchg
push
insl
jecxz
movsl
push
fstps
or
sbb
mov
data16
lods
aam
jl
outsl
mov
mov
negl
or
insb
mov
and
dec
push
or
aaa
aad
enter
mov
bnd
shll
out
push
out
fiaddl
adc
rorl
and
push
cli
jecxz
pushf
jnp
mov
imul
je
add
sub
ret
or
mulb
pop
pop
lock
aaa
jmp
jb
fldl
test
sbb
cld
data16
push
mov
fcoms
pop
sbb
push
xchg
sub
cld
sbb
stos
mov
jmp
jl
push
sub
push
popa
push
fisubrs
mov
pop
pusha
push
sub
pop
mov
push
sar
cmpsb
mov
cmc
fcoml
adc
jb
push
addl
inc
mov
cmp
hlt
dec
lods
insb
lret
test
pop
jae
dec
jb
imul
xchg
arpl
adc
push
adc
mov
stos
loopne
push
sub
jmp
je
pop
pusha
les
ds
jno
mov
fstpl
mov
loopne
sub
dec
jbe
and
xor
sti
imul
xlat
lods
jae
aas
lret
push
mov
loope
pop
cmp
adc
fldcw
loope
cmpsb
hlt
out
stos
lods
test
sbb
sbb
sbb
pop
ret
call
jne
inc
mov
jecxz
mov
iret
jne,pn
mov
jmp
int3
mov
pushf
lret
cmc
add
mov
add
dec
cs
sub
mov
dec
incb
lcall
sub
inc
lcall
mov
call
mov
fistl
push
mov
mov
jg
and
shr
push
or
outsb
push
test
sub
jl
fnstenv
jae
add
leave
rcrb
mov
idivl
or
enter
xchg
push
sbb
xchg
ficomps
icebp
xchg
add
sub
push
sub
dec
add
ds
cmp
sbb
xchg
mov
adc
inc
insl
scas
scas
jno
les
and
rolb
lds
iret
test
cwtl
push
movsl
out
mov
jb
mov
or
xchg
jo
xchg
nop
decb
xchg
lock
out
or
out
xor
jge
mov
pushf
mov
dec
add
xor
push
add
adc
int3
ret
push
push
add
fsub
pop
push
add
xor
movsb
cld
ret
pop
movl
push
pop
test
mov
repz
stos
cltd
scas
push
scas
in
inc
out
push
xchg
jo
test
je
sub
fistl
add
pop
mov
pop
icebp
neg
pop
mov
mov
jae
mov
sub
adc
ss
outsb
test
rol
xchg
popl
mov
push
mov
mov
push
jns
jp
xlat
mov
mov
dec
and
test
inc
iret
outsb
adc
test
sbb
jae
xchg
sub
add
iret
dec
mov
call
cmc
inc
jne
and
adc
fnstenv
inc
cltd
inc
push
inc
xchg
xor
inc
mov
repnz
push
lahf
ret
and
loopne
leave
clc
rorb
andb
dec
rol
pop
push
mov
movsb
and
mov
lock
scas
sahf
inc
mov
iret
mov
ret
je
jl
nopl
mov
int3
les
jns
rcrb
loope
shlb
add
or
cmp
xor
adc
pushf
fs
mov
lea
pop
add
lods
rcrb
pop
in
js,pn
cmpsl
aad
mov
testb
xchg
scas
cltd
test
cwtl
loopne
test
cmc
das
cs
add
lret
add
cltd
pop
add
sub
xor
out
loopne
mov
lods
fnstcw
lods
fadds
mov
daa
je
or
mov
rolb
cmc
outsl
sub
test
add
and
fimuls
inc
sbb
xor
sbb
xor
pusha
mov
icebp
lock
sbb
in
dec
mulb
and
loop
push
sbb
loop
test
fidivrs
pop
push
and
sub
adc
cmp
xchg
push
push
lcall
mov
ljmp
mov
pop
push
ret
in
lret
js
add
add
call
mov
arpl
inc
or
xchg
insb
pop
lods
push
es
xchg
mov
xor
jle
pop
mov
xor
mov
fcomps
js
iret
repz
test
out
cmpsl
dec
jge
pop
aam
test
xlat
iret
rclb
aaa
fadds
adc
mov
int
mov
dec
insl
shl
and
sbb
jae
lcall
sub
sub
jp
stos
out
xchg
push
mov
ss
out
cs
pop
push
jae
xchg
adc
adc
int
pop
inc
ret
rcrl
aad
dec
mov
jle
add
fcmovbe
aas
icebp
cli
call
insl
les
lock
mov
cmp
and
sbb
xor
xchg
in
mov
fwait
sub
cmp
and
jae
cwtl
and
addr16
cmpsb
popw
movhps
mov
push
xchg
mov
xlat
xor
xchg
and
jnp
inc
shl
mov
pop
jecxz
repz
stos
sbb
xchg
mov
pusha
inc
xor
mov
lods
sub
sbb
and
loope
jecxz
xlat
add
stc
stc
mov
pushf
je
out
mov
jle
xchg
xor
les
or
mov
sahf
rcll
lock
sub
jno
fdivrl
int
pop
je
mov
push
cmc
sti
mov
mov
aaa
jecxz
or
loopne
fstpl
jmp
clc
sbb
cs
or
sbb
sbb
fwait
sub
jg
or
imul
lahf
sbb
out
sub
dec
cwtl
mov
loopne
es
xchg
cwtl
lock
lea
inc
adc
out
test
mov
stos
shlb
loop
pop
pushf
repnz
adcl
pop
cmp
inc
ljmp
jne
nop
pop
sub
cld
sbb
test
jae
mov
str
xor
xchg
orl
dec
mov
sti
dec
iret
xchg
and
sahf
out
cs
es
ljmp
ret
mov
ret
sub
lret
shlb
inc
sbbl
in
fcmovnb
and
shrb
xchg
je
push
ja
xchg
dec
pop
xchg
pop
mov
dec
add
lds
fnstcw
sbb
fcompl
rorl
and
leave
pop
mov
sbb
mov
sub
loop
mov
lret
sub
mov
ret
shrl
jns
pop
cmp
jns
dec
lea
pop
je
xor
repnz
cmp
cmp
divl
mov
adc
or
sbb
into
mov
arpl
adc
mov
hlt
hlt
sbb
cmp
dec
out
push
orb
cmp
sub
in
mov
inc
mov
test
out
das
lahf
loopne
mov
inc
es
cld
mov
sub
pop
ret
aam
loop
xchg
or
or
mov
dec
ret
loop
pop
add
test
cli
test
pop
daa
push
and
fidivl
sbb
pop
add
test
cmp
js
and
les
subl
ret
pop
daa
xchg
outsb
and
popa
inc
loopne
enterw
mov
jb
cmpsl
jecxz
popf
adc
sub
sub
mov
enter
mov
mov
mov
pop
push
ds
cltd
in
nop
and
jp
and
insl
sbb
lds
mov
sbb
repz
data16
add
jecxz
lahf
lds
pusha
adc
fsubrp
jg
inc
iret
and
test
pop
nop
inc
ja
icebp
and
dec
call
iret
sbb
das
fstl
test
mov
inc
mov
fs
push
leave
mov
outsb
test
test
mov
dec
pop
mov
dec
shr
xchg
fisttpll
push
imul
sbb
lahf
xchg
adc
mov
scas
cltd
or
push
rcr
fcomps
leave
xor
nop
pop
jg
stos
inc
std
sbb
mov
or
sbb
mov
adc
and
and
data16
pop
xor
jne
mov
js
movsl
jge
cmpsb
lret
or
jne
insb
jecxz
xchg
and
dec
test
ds
ret
cmp
lcall
xchg
fisubs
xor
cmp
xchg
stc
mov
insl
push
sbb
jle
faddl
xchg
add
xchg
dec
sarb
fmuls
fistps
cmp
int
jecxz
cmpsb
fistl
daa
js
loop
push
xorl
enter
leave
sti
stc
push
pop
iret
lock
outsb
add
xor
add
pop
push
mov
movsl
lods
adc
cmp
add
in
insb
fmuls
push
jl
adc
push
pop
mov
je
xor
push
pop
sbb
lret
mov
pop
mov
pop
mov
cmc
loop
seta
push
cmp
cmp
insl
mov
enter
push
decb
mov
subl
sub
mov
jecxz
inc
in
pop
rclb
cmp
adcl
repz
ja
and
bound
das
and
sbb
mov
outsl
xorb
and
mov
push
adc
jl
dec
popf
jne
inc
cmp
jmp
xor
adc
mov
cmp
sbb
out
dec
or
jae
mov
dec
mov
jnp
sbb
dec
imul
cmpsl
xchg
ficomps
fwait
mov
hlt
add
xchg
mov
pop
out
aad
cmpsl
inc
mov
add
jbe
ret
and
shl
test
jbe
mov
mov
shlb
addr16
pusha
fildl
mov
push
inc
adc
jle
jmp
pusha
sbb
and
outsl
cmp
enter
movsb
out
sub
fmul
xchg
iret
repz
mov
test
pop
enter
fs
sbb
scas
insl
mov
popa
and
xor
test
cmp
sub
ret
sbb
adc
cld
pop
or
arpl
add
repnz
daa
es
sbb
dec
mov
xchg
sub
paddq
sbb
outsb
in
pop
adc
xchg
fwait
push
cmp
mov
fs
mov
inc
and
sbbb
repz
lods
mov
inc
inc
leave
clc
cmpsl
mov
push
push
adc
sub
cmp
adc
pop
bound
in
pop
lds
test
shrb
or
cmp
lret
test
sbb
mov
sub
mov
push
cmc
or
outsb
inc
repz
adc
lock
cmp
add
ret
out
loope
pushl
cmpb
sub
fldl
aad
mov
push
dec
adc
test
jl
test
in
mov
or
sbb
flds
movsb
push
inc
xor
adc
lret
loope
nop
sbb
cmc
dec
mov
inc
or
pop
sub
aam
mov
push
rorb
outsb
sahf
sbb
adc
dec
nop
push
cmp
pop
add
and
in
inc
xor
push
nop
mov
add
mov
mov
push
mov
adc
dec
movsb
cmp
mov
fnstenv
in
adc
test
jp
add
sbb
add
jge
lret
jbe,pt
sbb
ja
mov
gs
