mov
inc
add
or
add
xor
sub
push
add
add
add
add
add
add
push
add
add
nop
add
jo
testb
add
push
and
movsl
push
pusha
add
or
add
pop
lock
inc
add
push
pusha
add
add
add
add
add
mov
add
or
hlt
push
inc
add
add
lock
or
add
or
add
add
add
add
add
push
add
pop
and
xlat
add
add
jo
jno
mov
or
add
mov
and
fiaddl
rolb
or
rolb
xor
add
mov
add
nop
add
or
add
add
repz
jo
or
mov
add
or
add
add
add
add
dec
punpcklbw
mov
nop
add
rolb
incb
nop
add
rolb
or
add
pavgb
cmpsl
or
add
nop
add
lock
loopne
add
pop
add
add
or
add
addb
seto
icebp
or
add
jo
cmp
add
xchg
add
add
add
add
or
add
push
lock
add
or
add
lock
add
add
adc
add
add
fsubp
add
and
add
fidivs
add
xor
mov
pop
or
mov
add
add
mov
rolb
pushf
pop
mov
add
push
addb
add
add
push
mov
add
jo
in
add
add
or
push
or
add
push
add
add
add
mov
testb
add
or
nop
add
add
add
or
add
loopne
or
add
pusha
add
or
add
or
add
add
xor
adc
mov
push
pop
mov
add
add
add
addb
add
add
rolb
test
add
add
inc
add
or
test
nop
add
pop
and
xlat
or
add
or
in
movl
mov
movw
mov
mov
movw
call
mov
cmp
jne
movw
ret
push
popl
push
mov
push
mov
xorb
mov
sbbl
push
popl
pusha
push
popl
call
subl
addw
mov
addb
push
popl
push
addb
xorl
movw
addl
and
orb
push
orw
call
xorw
cmpl
jne
addl
call
push
popl
push
popl
ret
orl
jmp
push
popl
xor
orl
orb
mov
subl
movw
shl
xorb
mov
add
xorw
shl
subw
sub
mov
movb
cmp
jne
addw
mov
sbbw
sub
push
popl
push
popl
call
subw
movw
popa
push
popl
movl
pusha
and
call
add
orl
mov
add
add
push
orb
xorl
push
popl
sbbb
addl
sbbw
xorw
push
push
popl
call
addw
push
addl
xor
xorl
movw
addl
andw
movw
pop
push
popl
push
popl
cmp
jne
or
ret
andb
popa
push
popl
xorl
call
subw
push
andb
xor
xorl
xorb
push
popl
addl
xorw
xor
push
sub
call
push
popl
push
push
not
add
mov
sub
xchg
orb
sbbb
mov
xorb
xor
shl
subw
sbbl
push
movl
xor
subb
push
and
andw
call
push
popl
push
push
popl
mov
push
popl
push
push
popl
jmp
xorw
pop
and
mov
xor
push
popl
push
push
popl
orw
push
or
push
xor
movl
mov
push
popl
sub
mov
xorw
sbbl
rep
push
popl
sub
pop
andb
pop
push
ror
add
ror
lea
mov
add
xchg
push
push
add
mov
xor
pop
and
xor
sbbl
jmp
andw
push
popl
sub
and
push
popl
mov
push
popl
sbbw
sub
orb
mov
sub
push
popl
andb
mov
push
popl
push
popl
sub
orw
movw
or
jne
push
popl
add
push
popl
push
popl
jmp
addl
mov
addl
shr
movb
shl
subb
mov
push
popl
subw
add
push
popl
push
popl
jmp
movb
orw
sub
addw
mov
addw
sbbl
add
subw
xorw
cmp
jne
push
popl
push
popl
mov
addl
add
add
subl
addb
mov
xorl
addb
add
push
popl
cmp
jne
push
popl
push
popl
ret
sbbw
push
mov
subl
xor
push
popl
pushl
push
popl
pop
sub
mov
lea
movw
or
xor
push
popl
mov
sub
mov
movb
lods
push
popl
mov
push
popl
andw
pop
andw
ret
push
popl
push
popl
push
add
xor
mov
push
popl
xorb
add
orw
push
popl
push
and
push
push
popl
push
andl
push
mov
push
add
xorl
mov
sbbl
push
popl
mov
or
or
add
addl
push
popl
pushl
push
popl
mov
subb
sbbl
add
subw
add
addb
mov
add
add
push
popl
xor
sbbl
push
popl
lea
addb
mov
addl
addl
add
xorl
mov
orb
xorl
xor
push
popl
andb
rol
xor
andw
xor
orl
orw
inc
addw
xor
cmpb
jne
push
popl
cmp
je
push
popl
orl
inc
and
push
popl
cmp
jb
movw
orw
mov
xor
push
popl
add
subw
movzwl
or
push
popl
mov
addl
add
push
popl
push
popl
mov
push
popl
andl
add
xorw
push
popl
pop
movw
cmp
jbe
push
popl
or
cmp
jae
and
pushl
xorl
andl
pushl
push
popl
andw
push
xorl
xorl
andw
push
popl
addl
movb
sbbw
pushl
andl
sbbb
call
push
popl
call
push
popl
pop
orl
pop
xorw
andw
pop
push
popl
push
popl
pop
push
popl
andl
pop
andw
andb
leave
sbbb
mov
ret
and
sub
call
jmp
xchg
mov
mov
fnstsw
bound
add
popf
or
mov
int
das
sbb
cmp
enter
pop
cmc
adcl
out
pop
call
jg
xlat
jmp
stos
test
repnz
je
jge
jge
stos
cwtl
popa
cltd
xor
lret
xchg
test
lods
out
xchg
adc
stos
pop
rcrb
lea
cmp
inc
xchg
lock
sub
push
das
filds
xchg
pop
icebp
rcr
or
out
test
jmp
inc
mov
jle
pop
sar
lret
cltd
test
inc
add
data16
push
xlat
imul
mov
dec
out
aam
clc
subl
xor
imul
ret
ljmp
sbb
adc
push
cmc
adcl
or
dec
lret
out
pop
fldl
testl
lock
ljmp
mov
out
mov
xchg
ljmp
jg
mov
inc
hlt
loopne
rorl
push
inc
divl
cmp
sbb
jmp
xorb
cmp
jno
loop
bnd
leave
sbb
cli
mov
lods
int3
sub
pop
aam
jl
ja
lcall
cmp
jbe
sub
insl
adc
ss
scas
out
xor
xor
popf
in
jbe
rcll
int
call
mov
xchg
jbe
pop
push
das
andl
scas
fidivl
jle
xor
repnz
pop
jg
push
insl
mov
jmp
xlat
es
in
movsl
jmp
xlat
jmp
mov
call
add
subl
xchg
sbb
pop
rcrb
push
sbb
scas
jb
icebp
adcb
mov
pop
cmp
test
sbb
push
cmp
jns
js
je
inc
incb
pop
cwtl
lds
aad
std
dec
orb
xor
repnz
test
sahf
fs
loopne
out
in
inc
dec
repnz
cmp
cld
dec
loopne
fimull
lret
stos
dec
hlt
jg
lret
nop
mov
pusha
xlat
and
or
inc
in
notl
rcrl
or
aam
aam
pop
jge
loop
cwtl
pop
pop
dec
pop
mov
aam
mov
dec
mov
enter
mov
jp
pop
fcoml
fs
inc
add
cmp
inc
pop
lcall
popa
stos
test
out
outsb
ret
push
ljmp
idiv
inc
push
mov
pop
aas
pop
jae
out
sbb
out
cmp
push
mov
xchg
in
sbb
repnz
icebp
lods
iret
mov
jnp
out
mov
push
shll
cmp
jmp
jge
lock
test
jmp
jnp
cli
pop
pop
ret
icebp
gs
xchg
ss
pop
xchg
jbe
push
sahf
inc
daa
call
mov
sbb
dec
xchg
in
movsl
jne
aam
in
nop
bnd
fs
ret
dec
xchg
pop
neg
mov
jns
sarb
or
cmp
aad
pop
fadd
xchg
fdivrp
push
dec
pop
mov
aam
pop
push
jmp
jmp
xlat
xchg
pop
notl
es
aas
push
pop
adc
popf
pop
mov
aas
inc
sub
fcoml
imul
jbe
div
cmp
test
iret
pop
mov
inc
lock
jp
test
cmp
sbb
and
xor
mov
add
sbb
test
in
mov
aad
fidivl
aad
adc
arpl
nopl
mov
sbb
ss
pushf
ljmp
lret
mov
int3
lock
ret
xchg
aaa
xor
shrl
cmp
inc
xchg
icebp
jae
cmp
out
lret
push
js
push
in
mov
pop
xchg
pop
icebp
rcrl
fidivs
xlat
jmp
xchg
mov
cltd
adc
scas
std
popa
test
ret
push
sbb
in
nop
jmp
jne
stos
xchg
or
setae
ja
or
push
insl
loope
adc
push
add
push
xlat
jmp
shrb
pop
mov
add
dec
sub
lcall
mov
dec
out
fsubrl
mov
icebp
stos
or
mov
andl
xchg
popa
outsl
inc
xlat
mov
cmp
outsb
jmp
sub
fld
or
in
mov
or
test
out
stos
les
cmp
jp
jnp
cmpb
jnp
sbb
iret
xchg
push
mov
xchg
jbe
loopne
dec
mov
mov
xor
push
iret
or
repnz
xchg
sub
stos
loop
mov
lock
push
sub
ljmp
ror
fimull
jbe
leave
push
or
pop
adc
mov
out
aam
sti
add
minps
mov
or
mov
frstor
xor
xor
sbb
jmp
push
inc
test
sbb
push
insb
dec
sarb
ret
je
inc
test
push
xlat
jmp
scas
pusha
test
sbb
push
pop
fiaddl
mov
and
js
je
inc
xor
sahf
jns
rcrb
lret
sbb
inc
nop
and
xchg
push
xlat
xchg
jmp
lea
jp
aam
inc
cmpl
repnz
rcll
inc
cmpsb
jmp
adc
aam
out
sub
push
mov
test
push
into
das
or
outsb
subl
and
call
cmp
leave
call
pop
dec
loope
stos
and
fstp
fs
sarb
jmp
push
dec
jne
xchg
pop
xchg
cmp
pop
iret
push
ss
cwtl
jl
inc
add
call
pop
cmp
or
push
cmp
jno
mov
sub
or
dec
stos
arpl
std
xorb
mov
pop
fcompl
insb
xorps
setp
arpl
lock
mov
lea
stos
cmp
mul
shl
cmp
cmpsb
jmp
mov
push
jmp
sti
inc
incb
notl
rcrl
lea
outsb
jns
stos
stos
ret
mov
insl
sbb
aam
sbb
mov
int
inc
out
out
rcl
and
mov
xlat
jmp
imul
notl
cli
pop
pop
ret
cmpsb
mov
test
shl
enter
sbb
les
icebp
push
lret
and
pop
pop
sub
inc
inc
add
inc
popa
in
jb
pop
pushf
out
jle
lret
arpl
stos
xor
pop
bound
arpl
into
faddl
jne
icebp
jnp
xchg
movsl
jmp
mov
xchg
mov
sub
xchg
pop
fsubs
lret
loop
cmp
pop
or
sbb
stos
dec
aam
push
repnz
aad
xchg
and
jns
pop
aaa
arpl
sbb
jecxz
cwtl
leave
in
pop
xchg
stc
and
in
insl
adc
iret
inc
cmp
out
cmp
out
xlat
aas
cld
cmpsl
lret
shrl
dec
out
enter
movsb
xor
jge
lret
scas
bound
mov
cmp
jb
js
mov
xchg
jbe
shll
stos
test
scas
stc
pop
push
ret
ss
adc
ljmp
lcall
nop
pop
repz
shlb
cmp
xchg
cli
lret
mov
aad
stos
sbb
mov
cs
rcll
int
jbe
loopne
sbb
lds
data16
sbb
lds
sbb
sahf
pop
ja
jecxz
and
jno
inc
pop
xchg
aas
out
ret
mov
cmp
add
pop
push
cs
inc
xchg
xchg
dec
andl
hlt
andb
mov
repz
stc
sbb
xchg
push
xlat
cmp
les
or
jle
lahf
jae
test
fistpl
adc
pop
mull
pop
sbb
xchg
mov
xlat
xchg
sub
xor
mov
inc
add
jnp
xchg
loop
loopne
fdiv
jle
sbb
pop
rclb
notl
ljmp
fsubrl
fwait
repnz
orl
xchg
insw
insl
repnz
dec
add
test
insl
out
into
int
cmp
pop
sbb
les
sbb
imull
mov
mul
pop
lods
pop
cmp
mov
fcoms
scas
add
adc
jmp
xchg
jg
mov
fwait
mov
lret
mov
sahf
dec
xchg
es
daa
out
mov
aas
cld
cmpsl
mov
aaa
dec
out
fsubrs
lea
addr16
scas
sub
inc
cmp
insl
mov
or
xorb
in
xor
inc
dec
mov
add
aad
push
aaa
adc
enter
dec
push
pop
sti
or
mov
add
roll
jae
mov
aam
xor
ds
xchg
jmp
cmp
push
mov
add
mov
sbb
scas
mov
adc
aad
icebp
xchg
sbb
jge
pop
imul
jns
loop
lods
xchg
rcrb
push
stc
sbb
daa
out
adc
repz
push
pop
inc
xor
fwait
int3
sbb
xlat
jmp
cmpb
xchg
or
sbb
adc
xchg
cmp
cmp
mov
movsb
pop
or
test
imul
pop
out
cltd
pop
xchg
jg
xchg
pop
jbe
xor
sbb
dec
mov
xor
ja
out
shrb
sbb
pop
lahf
push
xlat
jmp
cmpb
xchg
repnz
out
sbb
popf
cmp
daa
movsl
lret
and
mov
out
mov
clc
pop
rol
out
ljmp
lahf
lods
pop
pop
add
jmp
cs
gs
dec
addr16
shrl
sub
aaa
lret
cmpsl
and
imul
loopne
movsl
jmp
data16
aad
aad
pop
shll
pop
mov
dec
aam
icebp
nop
in
outsl
adc
push
mov
ja
mov
addr16
dec
cwtl
lods
aam
cmp
rorl
cmp
ds
pop
mov
stos
imul
push
stos
mov
lods
xor
cld
shll
xchg
push
sub
cmp
add
fucomip
movsl
jmp
dec
in
nop
add
popa
mov
jnp
mov
nop
repnz
dec
mov
rclb
cmp
in
loop
and
xchg
push
mov
mov
bound
ds
sbb
inc
add
repnz
lret
out
add
je
mov
inc
push
cltd
ds
pop
mov
and
idivb
fwait
xchg
mov
scas
ss
popf
add
fwait
out
mov
movsl
jmp
add
xor
pop
dec
fs
pop
and
sbb
xor
mov
adc
ret
add
adc
mov
push
arpl
add
and
cmp
pop
inc
cmp
into
call
add
std
mov
ret
inc
xchg
adc
xor
lods
adc
pop
sahf
lock
inc
add
jmp
sbb
ret
xchg
out
outsb
movsl
insb
pop
sub
fnsave
jge
int
aad
dec
pop
pusha
mov
jbe
stos
push
mov
ljmp
sbb
stc
or
jge
mov
push
ja
cltd
jecxz
bound
enter
or
push
lret
pop
rcrl
loope
fadds
ljmp
daa
scas
pop
mov
mov
idivb
jno
add
in
notl
rcrb
lcall
mov
cmp
testl
pop
mov
aam
mov
inc
roll
push
cs
gs
movsl
add
add
lods
cmpsl
and
sub
in
jae
push
shrl
pop
jl
xchg
cmpsl
std
mov
aas
sti
cmpsb
mov
out
scas
and
icebp
lea
hlt
lods
daa
cmp
xor
mov
js
adc
imul
xchg
mov
or
ljmp
pop
int3
cmpsb
pop
and
mov
mov
icebp
lret
loop
stc
pop
lcall
out
dec
dec
pop
popa
sbb
pop
xor
fs
sbb
js
lret
and
adc
imulb
or
ret
shrl
lock
je
pop
jl
jae
sub
mov
ret
add
lcall
add
jne
fs
loopw
jne
out
leave
jg
fucomi
movsl
inc
out
push
sbb
jno
adcb
and
adcl
cmc
sub
pop
int
xchg
push
std
sbb
mov
jo
lret
insb
mov
add
jp
iret
jg
pop
ljmp
inc
push
mov
xchg
jbe
loope
cmp
stos
daa
dec
je
push
jp
push
insb
lret
movsl
lret
out
add
and
cld
aas
push
dec
icebp
and
call
add
stos
mov
push
jbe
mov
or
addb
movsb
imul
mov
push
adc
mov
inc
jne
addl
xor
pop
fsubrp
jp
push
jae
out
xchg
adc
shrb
sbb
push
insb
mov
pop
je
sub
andl
insl
lds
out
push
jno
pusha
call
stc
xor
pop
insb
bound
push
divps
add
fs
fstps
push
shlb
xor
xchg
daa
inc
jle
mov
in
mov
sarl
jmp
cmp
inc
rorl
or
sbb
adc
push
pop
sub
mov
push
lds
or
adc
rorl
fs
shll
test
xlat
and
icebp
pop
adcb
ret
and
daa
jecxz
push
dec
loopne
icebp
movsl
jmp
jne
xchg
add
popa
lahf
xchg
leave
push
stos
sbb
lods
scas
pop
sub
mov
out
jmp
mov
jae
adc
mov
push
jmp
add
sbb
pop
cmpsb
aam
jmp
sbbl
mov
sbbl
or
cmpsb
xchg
cmp
cmpsb
arpl
dec
rcrl
inc
push
xlat
std
mov
and
cmp
xchg
test
imul
aad
mov
or
sbb
add
lock
gs
inc
xlat
call
hlt
xchg
mov
dec
pop
cli
or
jle
hlt
arpl
add
hlt
add
sub
mov
cmp
jmp
test
mov
ret
pop
add
rorb
xor
sbb
mov
mov
or
loopne
cmc
leave
inc
out
loopne
rorl
push
mov
push
test
cld
pop
popf
lret
enter
xchg
adc
fdivrs
mov
test
scas
rcrb
or
xor
sub
adc
adcb
jne
insl
adcb
cmc
subl
pop
cld
repz
in
rcl
jno
jmp
pop
mov
sub
jnp
cmp
incl
aad
cmpsb
fstpl
jle
into
xor
mov
and
aaa
in
jmp
cs
ljmp
mov
dec
shl
xlat
call
addr16
scas
cmp
pushf
sbb
jno
pop
cld
or
jle
popf
add
shr
inc
inc
test
scas
ss
daa
out
push
movsl
jmp
and
clc
hlt
popa
lcall
jns
insb
rolb
xlat
jmp
addl
test
add
sbb
in
xchg
mov
xchg
add
push
add
pop
outsl
lock
movsl
movsl
repz
ljmp
fcmovb
mov
pushf
roll
cli
xchg
mov
add
ljmp
ret
loopne
dec
lahf
and
sub
sti
mov
bound
or
inc
arpl
icebp
add
pop
jl
popa
jmp
js
xlat
adc
sti
mov
outsl
test
in
int
pop
popf
mov
outsl
jne
jmp
cwtl
mov
dec
add
push
xlat
jmp
rorb
push
or
fs
mov
orl
inc
lret
repz
xor
fwait
enter
lret
ret
f2xm1
sub
ret
int3
and
fldcw
movsl
jmp
ret
aad
loop
sub
mov
adcb
jmp
mov
and
sbb
andl
mov
scas
ss
cld
aas
push
push
jb
popf
pop
mov
inc
mov
stos
mov
jae
outsb
jmp
ja
pop
popf
push
xlat
jmp
stos
test
push
jp
pop
je
insb
jnp
xchg
inc
push
mov
add
inc
sub
push
cmp
jmp
inc
inc
ret
aam
push
sbb
fcmovnbe
stos
jmp
adc
jb
and
add
scas
jnp
mov
lds
jmp
lcall
in
out
sarl
pushf
adc
dec
xlat
call
pushl
icebp
push
std
subb
sbb
sbb
call
xchg
pop
mov
mov
jge
lods
cmpsl
and
add
mov
jmp
cmp
sbb
enter
xor
scas
out
loope
xchg
pop
mov
dec
adc
clc
lock
mov
adc
dec
pop
insb
xor
ds
sbb
sub
cmc
or
les
jb
inc
push
roll
shrb
into
cld
xchg
imul
pop
or
jmp
xchg
add
call
xchg
push
jbe
ret
mov
xchg
lock
notb
popa
lahf
in
rcrl
push
hlt
xchg
xor
jns
in
cmp
iret
inc
or
jmp
cmp
jmp
or
data16
sahf
cmp
aaa
das
mov
xchg
jbe
xchg
push
pusha
push
std
xor
xchg
repnz
test
inc
mov
fcompl
mov
xor
out
in
stc
jle
dec
mov
pop
aam
sbb
jp
dec
dec
pop
and
neg
hlt
shlb
pusha
pop
lock
jmp
rorb
jno
enter
mov
cmp
or
out
pusha
jecxz
mov
das
into
adc
pop
es
mov
xchg
lods
call
test
xlat
jmp
andl
scas
enter
inc
pop
cmp
push
jnp
push
lock
fucomi
ja
es
lret
insl
insb
out
in
notl
pushf
jbe
push
insl
cmpsl
jo
addl
pushf
cmp
sub
shl
jne
mov
ffree
jg
xlat
jmp
outsb
jns
aad
inc
cmpl
lock
inc
and
out
movsb
and
enter
mov
xchg
push
pop
mov
stos
add
cltd
fs
inc
add
bound
pop
fstpt
in
add
jmp
ret
aad
dec
test
cltd
popa
lahf
push
test
mov
xchg
xor
jne
loop
notl
rcrl
mov
fwait
xlat
inc
sub
lret
in
adc
push
out
movsl
cmp
xor
out
mov
js
je
inc
movsl
pop
xchg
pop
xchg
push
xlat
jmp
scas
insl
add
test
cmp
inc
xchg
icebp
out
xchg
push
inc
int3
adc
js
pop
xchg
movsb
call
in
lret
in
notl
rcrl
test
ljmp
jno
insl
insl
icebp
cmpl
shl
int
mov
popa
ljmp
mov
add
lret
jb
jmp
sub
stc
shrl
loope
push
mov
adcl
cltd
mov
lods
lods
aam
loopne
xor
ss
lods
pop
addr16
jmp
or
test
sbb
push
dec
rcl
push
rclb
inc
cld
rcrl
xchg
push
ficompl
cmp
pop
cwtl
lds
sarb
jns
mov
lret
jnp
push
fiadds
sti
stos
mov
ret
mov
sahf
push
dec
out
arpl
sub
loopne
pusha
sub
pop
adc
rcrl
into
ret
ljmp
aaa
jne
aad
notl
rcrb
jle
jns
icebp
inc
cmp
inc
xchg
in
ss
nop
jmp
jne
lods
cwtl
lret
lcall
popa
jle
xchg
push
xlat
jno
aam
iret
adcb
insl
push
jns
push
lahf
pop
mov
cli
xchg
xor
push
cmpsb
sbb
call
jg
xlat
jmp
sbb
ret
aad
in
mov
push
insl
imul
int
push
xchg
pop
mov
xlat
jmp
lds
cltd
pop
mov
cmp
cmp
mov
inc
in
lret
in
or
or
dec
out
push
xchg
mov
push
add
xor
push
xlat
call
ja
dec
adc
sbb
mov
out
imul
ds
lods
fnsave
shlb
cmc
cmp
fadds
mov
xchg
dec
andb
lock
mov
push
fdivl
dec
out
ret
das
shrb
xchg
jbe
cmpsb
fists
inc
pop
pop
cwtl
push
xlat
jmp
aaa
push
add
jne
arpl
sbb
dec
sub
fwait
mov
mov
jbe
sbb
minps
push
sbb
adc
ficompl
xor
outsl
fs
push
push
pop
dec
xor
mov
pop
sub
inc
mov
shrl
test
mov
adc
mov
mov
cmp
mov
pop
push
in
call
or
add
pop
mov
pop
int
cmp
push
sarb
jl
push
mov
loopne
sarl
pop
push
push
aad
jo
in
jne
pop
sub
movsb
dec
adcl
fucompp
movsl
jmp
ret
pop
pusha
aas
aam
jmp
icebp
jle
sbb
jnp
jg
in
jmp
aaa
sbb
pop
jne
scas
push
cwtl
mov
shll
push
ljmp
cmpsb
jmp
ret
rclb
subl
or
sub
loop
lock
lret
and
inc
or
in
push
inc
test
in
cmpsl
ljmp
adc
adc
jmp
add
jo
mov
push
mov
mov
push
cmp
and
xchg
mov
and
rcl
lds
push
xlat
jmp
out
cmp
aad
inc
cmpl
aam
js
into
sbb
mov
add
dec
fisubrl
scas
cmp
outsl
xlat
xchg
push
mov
xchg
jbe
divl
aad
inc
cmpl
pop
jns
push
pop
pushf
movsl
int
jne
inc
pop
mov
iret
lahf
loopne
mov
pop
xlat
lock
add
or
ret
jb
arpl
sub
fmuls
pop
mov
cld
or
mov
jp
add
out
xor
repnz
xchg
jns
cmp
mov
stos
and
adc
cmpsl
add
and
xor
jle
sbb
xlat
jmp
addb
push
jno
add
movsl
pop
in
lock
pusha
sub
stos
push
stos
xorb
stos
push
pop
test
jp
cmpsl
out
dec
jge
dec
shr
stos
les
inc
lahf
pop
push
fidivl
jmp
xchg
mov
cmc
pop
xchg
shr
movsl
dec
in
stc
jge
dec
imul
pop
push
icebp
scas
cmp
mov
jno
mov
xchg
das
sbb
xchg
dec
vpmulhw
push
xchg
push
repnz
jmp
ds
xor
enter
test
or
dec
and
jae
jae
push
jmp
add
test
jb
sbb
jmp
xor
lods
shlb
mov
cwtl
popa
sahf
pop
sbb
jbe
stos
bound
scas
cmp
xor
out
dec
xchg
rcrb
ja
je
inc
xor
mov
mov
adc
add
jno
pop
lret
dec
dec
inc
and
mov
dec
inc
sub
cmp
imul
lret
lds
mov
jmp
mov
nop
mov
xchg
push
pop
dec
test
sti
cmpsb
and
dec
dec
out
iret
cmp
enter
ljmp
pushl
in
jne
rcrb
aad
dec
cmpl
fwait
sbb
cltd
cmp
add
jbe
cltd
mov
lods
sahf
jbe
rcl
adc
pop
pushf
push
xlat
jmp
cmc
cmp
pop
mov
pop
cld
mov
std
xchg
rolb
and
jnp
pop
js
cli
jmp
xchg
arpl
gs
insl
inc
mov
cwtl
inc
mov
add
ret
xchg
lret
pop
bound
pop
jnp
movsb
push
mov
adc
mov
negb
jns
cli
rcrl
adc
push
imul
or
pop
pop
dec
pop
stos
lcall
fimull
in
mov
pop
js
shrb
cmp
test
adcb
seta
pop
push
ret
mov
cmp
mov
inc
xchg
mov
pop
jo
test
jne
loopne
fistl
aas
pop
mov
cmp
ret
js
leave
in
pop
mov
fistl
mov
pop
push
ss
enter
daa
stos
sub
push
mov
rcrl
jmp
lcall
jmp
lcall
test
dec
xchg
fcmovnbe
subl
sub
leave
push
repnz
adcl
stos
into
xor
jmp
popl
int
add
adc
ret
adc
shlb
xchg
jecxz
data16
sbb
cld
cmpsl
or
push
rcrb
sbb
std
ljmp
imulb
or
ret
jns
iret
lea
push
in
xchg
lret
repz
inc
pop
xchg
add
out
pop
xor
jo
call
fdivrl
mov
add
ret
enter
jp
test
ret
sbb
lds
ds
dec
add
insb
or
push
add
mov
ret
pop
arpl
fs
xlat
mov
lret
lds
insb
adc
push
xchg
push
jo
dec
add
movsl
xchg
pop
repnz
movsb
fisubl
iret
push
divb
fcoms
lret
je
cli
mov
movsb
sub
das
dec
ss
sbb
push
pusha
xor
cwtl
sub
das
js
je
inc
movsl
pop
cmpsb
pop
adc
in
stc
jle
dec
ficoml
pop
aad
adc
lock
xor
out
cmp
mov
push
mov
cmp
mov
test
clc
or
and
jg
cmp
push
xchg
xlat
jmp
xchg
ljmp
xchg
push
jb
aaa
std
inc
jp
cmpsl
ret
aad
shlb
push
pop
mov
aam
into
lcall
loopne
rorl
push
js
into
aaa
sbb
cmp
in
push
add
jae
daa
icebp
push
mov
push
add
xchg
in
cmpsl
cmp
inc
out
or
sbb
mov
imul
mov
out
cmp
jo
fiadds
jmp
aas
cmp
push
jg
add
rorl
push
jno
push
adc
shlb
stos
cmpl
xchg
fisttpll
jmp
jb
and
into
push
movsl
sbb
pushf
fs
sbb
loopne
loope
sub
jo
mov
loope
mov
push
jne
outsl
cmp
pop
jg
cli
push
push
int
jb
icebp
jg
add
pop
cmp
dec
xor
cmc
in
stc
jge
dec
jnp
adc
cmc
xor
rcll
mov
popa
subl
sub
or
rolb
lods
test
sbb
dec
lods
xor
and
fidivs
mov
and
imul
fucompp
movsl
jmp
ret
dec
mov
jmp
jmp
out
out
jmp
out
fnstcw
jecxz
inc
dec
mov
imul
pop
add
addr16
sbb
ljmp
insb
lret
sbb
imul
mov
and
mov
repz
mov
jge
xchg
rcrb
jne
enter
dec
xchg
sbb
dec
xchg
cli
dec
or
xchg
int3
inc
repnz
lcall
lcall
push
push
cmp
dec
arpl
pop
pop
add
jae
fs
pop
adc
jle
fnstsw
in
lahf
cmp
ret
adc
test
adc
std
hlt
adc
xchg
xorb
rcrl
sbb
add
push
mov
jge
mov
add
data16
rol
cmp
dec
loope
jns
dec
sub
mov
sbb
repnz
cmpsl
out
jl
test
pop
insb
aad
ljmp
dec
jmp
dec
jne
or
pop
lcall
mov
pop
icebp
lcall
repnz
stc
sub
pushf
jbe
cmpsl
cs
or
fstps
loope
jae
sbb
loope
cmc
aad
adc
jmp
and
push
sub
ss
jmp
ret
aad
out
sub
pop
lods
test
xchg
out
xchg
xor
in
jg
in
lahf
xchg
sub
shrl
sbb
cmp
outsl
xlat
call
stos
mov
repz
mov
shlb
and
sbb
and
mov
jo
lahf
or
sahf
push
or
adc
iret
ss
shlb
jp
mov
cmc
mov
inc
jge
pop
pushf
push
xlat
jmp
icebp
cmp
jno
adc
cmp
das
push
cmp
mov
dec
out
mov
lcall
test
xchg
mul
mov
outsb
ljmp
out
dec
fsubr
leave
inc
out
leave
xchg
sarl
daa
jecxz
jb
mov
lds
loop
aaa
cltd
cmp
mov
fisubl
xchg
pushf
lret
xchg
test
add
lahf
imul
pop
lods
fmul
inc
mov
mov
mov
outsb
andl
outsb
lahf
jl
or
aaa
inc
jmp
mov
push
mov
popf
sahf
faddl
imul
movsb
pop
cmpsb
pop
enter
imulb
sti
scas
jae
shrb
aas
mov
bound
insb
roll
jmp
sahf
fldl2e
jecxz
movb
jbe
stos
mov
jmp
out
jb,pt
into
push
fwait
jge
js
je
dec
sub
xlat
jmp
xchg
shl
outsb
jmp
cmpsl
xchg
hlt
inc
mov
sahf
je
fnstcw
cs
fsubs
push
mov
mov
jg
xlat
jmp
sarb
adcb
repnz
dec
out
xchg
xor
imul
pop
call
jg
xlat
jmp
push
lock
aam
fmuls
jle
out
cmpl
xchg
std
jne
test
xchg
jbe
rcl
mov
fucom
pop
lahf
push
xlat
jmp
lods
cmp
inc
xchg
repnz
mov
popf
cmp
repnz
movsl
jne
lods
adc
mov
push
xlat
inc
xor
movsl
aad
add
pushf
pop
sub
mov
rolb
cli
aam
jns
inc
mov
adc
jp
mov
mov
dec
iret
inc
push
mov
mov
mov
mov
mov
xor
int3
cwtl
add
dec
sub
bound
js
movb
xchg
fildl
xchg
add
or
mov
pop
or
sub
mov
subl
in
add
sarb
lea
imul
jbe
into
jo
lahf
lods
test
inc
test
push
in
loop
out
lea
cmp
fcmovb
sub
ror
pop
jg
mov
dec
mov
pop
xor
ds
popf
sub
push
push
shll
lcall
je
xchg
andps
or
cmp
xor
sub
jno
shlb
js
je
inc
xor
mov
sbb
test
jle
xchg
push
xlat
push
push
sbb
cmp
inc
xchg
in
fistps
icebp
push
adc
jl
lcall
pop
lret
shrl
ret
in
aam
inc
cmpl
aam
rcll
ljmp
sub
xchg
jmp
cmp
xchg
push
or
sahf
inc
mov
imul
int3
adcl
out
dec
jmp
inc
push
push
sbb
out
test
sahf
jae
sbbl
cmc
scas
xor
in
jnp
add
push
les
push
leave
sub
or
mov
mov
mov
daa
incb
xchg
add
icebp
or
push
sbb
dec
push
dec
dec
fimuls
xor
or
push
lret
mov
sub
mov
out
fldl
mov
xchg
jbe
int3
sub
stos
sbb
scas
xchg
sub
or
sbb
inc
adc
xchg
call
dec
adc
into
xor
in
pop
nop
pusha
shll
sub
pop
push
adc
dec
test
out
repnz
jecxz
lds
mov
aaa
mov
dec
js
or
adcl
sbbl
daa
lret
mov
xchg
dec
add
inc
popa
pop
add
pop
fs
lahf
jmp
xor
pop
fisubl
mov
jo
fs
add
rcl
insb
ja
sbbl
or
mov
jnp
jl
shrb
popf
popa
popf
adcb
xor
mov
add
push
mov
adc
mov
scas
shlb
jmp
jbe
mov
imul
push
mov
sbb
and
stos
jbe
lcall
pop
pop
popf
push
xlat
jmp
lods
scas
ret
cmpsb
sbb
ret
mov
mov
lret
in
or
or
dec
shrl
mov
fbstp
add
add
in
mov
jnp
xchg
push
xlat
pop
cmp
mov
loope
sbb
pop
addr16
stos
subb
aaa
jmp
push
sarl
lahf
push
mov
xchg
dec
jo
or
addl
out
mov
mov
pop
push
daa
cmp
pop
dec
js
shrl
addl
cmpsl
in
mov
loop
shl
outsb
xchg
push
sub
js
jecxz
movb
in
or
sbb
out
pop
aam
sub
pusha
and
loope
xchg
scas
mov
push
arpl
or
or
iret
insb
cwtl
sahf
push
mov
cmpsl
xchg
inc
push
mov
into
dec
daa
leave
adc
sub
dec
cmc
pop
push
inc
jmp
jmp
mov
lcall
add
popa
mov
scas
or
nop
out
das
fistpll
rolb
pop
lret
mov
ja
or
xor
imul
mov
push
repz
xchg
movsl
sti
push
jne
fistpll
shrb
hlt
ret
aad
call
shlb
cli
pop
push
ret
mov
iret
add
int
xchg
push
sub
ljmp
lret
cld
push
jb
fcom
mov
ficoms
pop
lcall
iret
into
in
dec
jnp
jmp
out
lock
rcrl
sub
push
add
loopne
pop
jl
enter
data16
imul
cmpsb
push
lcall
mov
aas
rcr
or
ja
pop
cli
mov
sub
andb
jbe
test
lea
pushf
out
jge
jbe
mov
seto
cmp
adc
xchg
fs
jl
ret
jns
mov
repz
daa
shlb
jmp
sti
cmpsb
out
inc
imul
clc
testl
pop
mov
jmp
int
out
bound
xor
xor
pop
mov
pop
push
jno
lds
sub
xchg
loop
mov
imul
and
jo
or
mov
add
gs
gs
and
push
sarl
push
xor
sbb
xchg
inc
popa
movsb
pop
int
jmp
ret
and
mov
imul
sbb
xchg
lret
icebp
enter
out
cmp
dec
sub
jecxz
lock
mov
pop
push
xor
xchg
ja
aam
negl
mov
rolb
sbb
inc
mov
icebp
cmp
ljmp
xchg
aad
adc
js
pusha
icebp
scas
sbb
fistpl
add
ds
addl
xchg
pushf
sub
mov
and
in
aaa
adc
test
shr
mov
dec
sbb
inc
fisubrl
sbb
pop
in
mov
lcall
dec
mov
bound
or
scas
mov
cltd
pop
add
mov
and
mov
push
out
add
andl
int3
or
xor
or
cwtl
xchg
dec
dec
push
rcll
dec
jno
lds
out
js
arpl
jg
or
push
mov
mov
mov
push
movl
stos
push
cmpsb
jmp
iret
clc
jo
int
fwait
push
xlat
jmp
adcb
imul
mov
mov
stos
mov
cmp
jne
js
jle
xor
xchg
cli
out
popa
lcall
jnp
lret
sbb
fwait
je
inc
sbb
out
nop
jle
jmp
popf
mov
xchg
jbe
mov
push
xchg
add
popa
popf
lret
push
push
iret
dec
sbb
pushf
cmp
int3
adc
gs
in
stos
dec
dec
cli
notb
in
push
cmp
sbb
mov
pop
jns
mov
fimuls
mov
sub
mov
lock
rcr
push
cli
mov
pusha
mov
ljmp
daa
dec
push
adc
and
jmp
inc
movsl
pop
mov
jmp
cmpl
dec
jo
or
imul
cmpsb
push
pop
or
sar
cmpsl
std
icebp
ret
mov
repnz
aam
les
lds
pusha
into
adc
push
add
or
sarl
in
enter
push
xchg
lcall
adc
addr16
jg
dec
cmp
movsl
std
mov
orb
pop
scas
cmp
movsb
les
add
rcr
or
jne
mov
adc
adcb
addl
xchg
movsl
ret
adc
aam
lahf
cmc
cmp
aas
pop
outsl
fsubrl
xchg
jbe
lret
adc
jmp
fisttpll
and
lcall
in
out
in
push
push
mov
lret
in
movsl
xchg
and
mov
movsb
xor
iret
cmp
cmp
adc
test
dec
mov
movsl
xor
cmc
mov
in
inc
xchg
icebp
fs
stos
mov
adcb
xor
icebp
cmp
ja
rcl
ret
mov
lahf
push
xlat
jmp
cmpl
xchg
jmp
cli
pop
push
ret
sub
mov
mov
test
sbb
jnp
movsb
sub
lahf
xchg
push
aad
lret
cmp
adc
arpl
pop
push
mov
adc
lds
and
mov
xor
jmp
rcll
je
out
pop
mov
inc
jl
stos
adc
mov
mov
inc
or
shlb
xchg
jbe
rcl
test
lahf
push
xlat
jmp
inc
cmp
inc
xchg
out
cmp
stos
stos
aam
push
ja
lret
or
daa
rclb
add
icebp
xchg
fucomi
sbb
aaa
jmp
test
xchg
ret
adc
mov
out
jnp
mov
push
stc
or
and
mov
pop
jbe
cmp
les
dec
cmpsl
aas
daa
out
outsb
dec
lret
mov
outsl
push
xchg
add
lods
ret
shl
stos
filds
jl
fs
aam
movsb
pop
in
clc
and
push
xlat
jmp
repnz
clc
inc
push
adc
jmp
pop
lods
cmpsl
aam
add
das
inc
out
xchg
pop
repz
jmp
sbb
daa
adc
xlat
lahf
xchg
icebp
popa
pushf
jnp
into
mov
push
add
cmpsb
int
sbb
out
add
pop
sub
fcomps
pop
shrl
jb
push
shlb
fisttpl
pop
rol
jmp
mov
sarl
daa
lods
ret
iret
cmpsl
fdivr
leave
inc
lock
and
sarl
std
inc
push
adc
and
pop
mov
sub
mov
scas
ss
stos
cmp
jb
xchg
das
cmp
out
xchg
jbe
out
xchg
aad
inc
cmpl
cmp
stc
pop
push
ret
cmp
push
cmpsb
in
xchg
jbe
fistpll
or
adc
hlt
gs
stos
test
test
mov
pushf
loop
fcom
mov
push
jns
sub
ss
popf
fdivr
ja
dec
pop
repz
xchg
fs
push
cmpsl
shl
cmp
jecxz
jmp
test
xchg
out
fstl
insb
sti
inc
add
int
dec
mov
cmp
jle
xchg
push
xlat
out
lods
orl
fwait
cmp
cmp
push
mov
jbe
mov
or
jbe
pop
test
shr
lret
push
add
pop
inc
jge
add
fisubl
mov
mov
bound
cltd
leave
xor
add
cmp
mov
xchg
mov
addr16
dec
cwtl
aad
imul
xorb
std
pop
fnstsw
jmp
leave
push
or
repnz
pop
repnz
fld
or
adc
or
faddp
call
xor
add
mov
nop
or
jge
imul
mov
mov
cmpsb
xchg
loopne
add
xchg
lods
xor
lret
sbb
xlat
jmp
xorb
sub
mov
xor
push
adc
jmp
outsl
loop
sbbb
js
xchg
pop
decl
mov
movsb
aas
and
sarl
pusha
mov
sti
je
int
shll
mov
movsl
test
int3
fstpt
leave
xchg
mov
clc
je
xor
jg
push
dec
sub
enter
out
lea
adc
inc
push
shrl
jnp
test
cmp
in
mov
andl
dec
imul
rorl
stos
sub
jmp
or
ret
fadd
push
stc
ja
xlat
sbb
pop
lret
lock
idivb
fsubs
shll
sub
pop
adc
jl
pushf
shl
xlat
pop
add
pusha
and
je
int3
push
nop
fsubrl
sub
inc
and
lahf
fistl
ss
ljmp
ljmp
aaa
fucom
sbb
lret
ja
pop
sub
mov
pop
lret
sub
add
insb
cmp
mov
and
out
cmp
mov
dec
lret
jge
jg
ret
inc
cmp
bound
ljmp
shl
mov
cmp
jmp
dec
or
sub
pop
sbb
in
adc
mov
std
add
shll
out
jbe
pop
dec
cmp
incl
out
shl
mov
xchg
jbe
jecxz
adc
jmp
aam
dec
jge
pop
sbb
jbe
lock
push
jmp
cmp
push
inc
orl
sarl
imul
or
aam
adc
stos
adc
pop
cmpl
push
pop
test
push
xchg
inc
std
lahf
shrb
cmp
inc
xchg
repnz
xlat
std
in
xchg
sbb
cmp
dec
cmpsb
sub
cmp
jp
jmp
sbb
adc
or
jg
push
xlat
xchg
fsubr
inc
and
out
inc
xchg
lock
call
sub
fidivrs
cmp
das
mov
notb
mov
push
xlat
jmp
orl
popf
adc
pop
popf
js
test
aaa
sahf
cmp
xor
test
scas
ds
arpl
fdivl
pop
idivb
adc
or
pop
stos
shrb
ret
mov
popa
cli
addr16
pop
push
cmc
bound
cli
dec
mov
add
xchg
push
das
xor
push
push
es
cmp
pop
cld
and
pop
mov
cmp
popa
out
or
jne
sbb
cmp
pop
sbb
loope
dec
xor
push
add
dec
sbb
xchg
push
xlat
add
insb
push
mov
std
aam
pop
sbb
scas
jle
cli
pop
aaa
lea
pop
push
xlat
ds
aas
push
add
mov
pop
lcall
scas
xor
int3
push
bound
xchg
pop
xchg
cmp
sub
push
add
out
js
dec
and
out
outsl
fs
in
data16
xor
mov
push
mov
or
sar
pop
mov
in
pop
mov
leave
ficomps
fs
xchg
leave
mov
sbb
or
jae
xor
imul
jmp
add
mov
push
ja
push
xlat
pop
xchg
aad
cmp
das
lret
pop
inc
and
inc
dec
int3
and
xchg
rol
inc
push
pop
lcall
or
loope
sarl
dec
shll
and
das
lds
pop
fsubrl
sahf
pop
mov
xlat
jmp
mov
mov
mov
cmp
icebp
and
xchg
mov
scas
ss
and
mov
jmp
ds
cmp
lcall
add
popa
lahf
cmp
xor
sbb
stos
jb
int3
pop
inc
rolb
repz
mov
dec
out
lret
lock
jb
jp
mov
dec
std
inc
push
pop
adc
stos
test
sbb
ljmp
scas
ss
repnz
out
push
jae
dec
lock
jno
aas
jecxz
fisttpl
test
jg
jg
xlat
jmp
out
cmp
call
push
push
ret
call
sarl
std
inc
in
xor
sbb
push
dec
inc
rcl
mov
shll
cld
sarl
ljmp
mov
rcrl
xor
test
cmpb
pushf
popl
repz
jbe
lds
aad
mov
lea
bound
adc
xchg
aam
movnti
cmp
xchg
cli
mov
pop
adc
sbb
xor
jg
out
mov
rcr
iret
push
mov
xchg
jae
icebp
jl
movsb
js
lahf
jmp
out
mov
cmp
int
jmp
cmp
jecxz
hlt
enter
mov
movsl
fs
pushf
andb
ret
ret
xchg
jno
stc
pop
out
and
out
cs
lock
les
xor
pop
mov
divb
ja
lahf
lahf
add
jle
repnz
xchg
fmull
mov
cmp
jmp
mov
out
mov
cmp
mov
nop
aam
repnz
in
mov
fldcw
cltd
ljmp
xlat
jmp
push
mov
push
cmp
shll
js
je
inc
sub
xlat
jmp
xchg
push
xlat
aas
daa
out
push
pop
sub
mov
xor
mov
lods
xchg
int
rcrl
int
aaa
xor
cmp
insl
mov
xchg
push
sub
arpl
and
shrl
cmp
mov
cmpsl
adc
lahf
out
sub
cmpsb
test
xlat
jmp
xchg
push
daa
imul
fucomi
movsl
jmp
das
aad
lea
sbb
stos
mov
lret
jmp
loop
clc
sbb
daa
out
xor
movsl
jmp
ljmp
xor
adc
adcb
movsl
lret
out
xor
push
xchg
jbe
ror
add
push
sub
mov
cmp
jmp
inc
cmp
inc
xchg
out
push
insl
imul
jg
dec
cltd
and
cmc
in
lea
jmp
xlat
jmp
or
pusha
ffreep
mov
mov
xchg
xchg
mov
subl
cltd
sbbb
cmp
ret
push
jns
cli
or
cld
pop
nop
xor
adc
test
stc
push
out
jmp
xlat
jmp
xchg
push
imul
fcmovnbe
aam
rcrl
pop
push
aas
sbb
outsl
adc
mov
call
fwait
xchg
push
xor
jnp
ret
mov
jmp
mov
outsb
mov
js
jl
pop
ja
jp
xchg
sub
clc
sub
xchg
jbe
cmpsb
pop
out
out
and
movsl
ds
mov
rolb
shl
out
sbb
fst
scas
xchg
mov
fcompl
add
jl
push
push
xlat
jmp
and
sti
cmp
jecxz
and
jmp
mov
popa
pushf
push
pop
jl
push
loope
in
jnp
jbe
lods
daa
inc
daa
in
nop
push
add
out
les
jmp
xchg
out
aaa
cmp
pop
mov
aam
insb
mov
dec
xor
call
sub
or
lods
dec
imul
rorl
call
xchg
cmpsb
sub
lods
pop
addr16
dec
cwtl
mov
jmp
or
fildl
adc
sbb
clc
fistl
pusha
sbb
sub
scas
mov
daa
push
cwtl
adcl
lcall
call
ret
xor
test
mov
mov
sbb
sub
imul
dec
cld
push
sbbb
shrl
clc
lds
cmc
cmp
and
cmp
pop
mov
aam
les
lods
mov
leave
mov
adc
dec
daa
mov
mov
leave
inc
out
lret
and
out
xchg
enter
movsl
jmp
ret
aad
sbb
cmp
cli
pop
push
ret
scas
cmpsl
jne
scas
sub
inc
shll
ret
sbb
int3
lock
add
int3
adc
jge,pn
jg
and
sbb
push
testb
dec
jp
inc
fwait
or
fs
or
jnp
cwtl
push
mov
sbbb
lods
inc
push
ss
push
ljmp
xchg
icebp
xor
shll
stos
xchg
arpl
mov
lods
lods
aam
cli
pop
repz
repnz
xor
imul
hlt
sub
push
xlat
jmp
lock
ljmp
and
js
push
mov
lret
lret
call
add
cmpsl
arpl
mov
xchg
jno
cmp
mov
loope
sbbl
mov
arpl
out
pushf
fs
outsl
lods
sahf
jbe
cmpsl
pop
shll
inc
pop
repnz
sbb
movsl
pop
push
mov
movsb
or
in
popf
cmpl
ret
cmpsl
arpl
mov
push
cmp
test
mov
int3
pop
fcmove
mov
ss
insl
pop
jae
movsl
add
sbb
sub
jp
or
sbb
jae
push
or
lcall
dec
stos
pop
into
mov
cmpsb
add
push
pop
stc
or
adc
orl
mov
in
jmp
or
sbb
imul
ret
fildll
stos
or
dec
or
iret
je
jmp
xlat
and
mov
sbbl
mov
xlat
push
or
sub
ljmp
int3
sahf
jo
or
mov
sbb
aaa
adc
pop
cli
popa
mov
out
rorl
setns
mov
dec
lods
leave
in
pop
mov
outsb
and
adc
lods
pop
mov
pop
out
leave
cmp
add
and
bswap
sub
test
leave
fs
in
ret
in
push
pop
out
cmp
out
add
or
adc
jb
xor
mov
sbb
dec
arpl
push
sub
jae
mov
sbb
icebp
ret
fwait
jle
out
sbb
test
jle
xchg
push
xlat
mul
cmp
popa
stos
scas
ret
pusha
pop
cli
pop
push
ret
jge
iret
adc
rcr
xchg
xchg
push
jmp
and
dec
sbb
inc
sbb
mov
xor
cmpsl
xchg
outsl
aad
mov
inc
adc
movsl
lock
or
orl
or
sar
add
lock
sarb
nop
xchg
add
les
cld
xchg
sub
out
ss
sbb
movsl
xor
sahf
ljmp
in
das
pop
pushf
push
xlat
jmp
out
cmp
sub
pop
adc
mov
data16
cmpl
or
jae
in
aas
out
rcl
out
ret
pop
mov
cmp
es
ret
aad
fcoml
xlat
insb
insb
lock
cli
or
aaa
xor
ja
push
sub
rcl
out
orl
into
and
mov
pop
in
xor
scas
out
xor
sub
mov
mov
lock
mov
push
mov
jne
icebp
jge
or
imul
xor
repz
jbe
push
xlat
cmp
loop
pop
adc
mov
sbb
scas
roll
sbb
xchg
test
lods
aam
mov
or
jns
call
sbb
sahf
jg
xlat
jmp
int3
push
popf
add
ret
sbb
popf
cmp
pop
sub
movsl
jmp
xlat
jmp
les
outsl
lods
stc
test
xchg
push
or
sbb
and
out
cmp
scas
movsl
jb
outsl
xlat
ret
mov
out
jg
bound
shlb
and
ret
xchg
add
icebp
sbb
aas
neg
lahf
insl
insb
adc
int
mov
xchg
cmp
pop
loope
cmp
cwtl
mov
dec
add
call
rolb
pop
lret
sbb
or
xorb
sub
outsl
pop
cmc
arpl
pop
push
outsl
ja
sbb
jp
inc
jge
out
cmpsl
les
mull
sbb
push
push
mov
mov
adc
mov
push
cmp
mov
hlt
addb
lods
fwait
nop
sbb
mov
cmpsb
int
test
or
mov
jae
stc
pop
xor
adc
dec
je
popa
test
fwait
popa
arpl
das
add
mov
pop
testb
xchg
push
mov
push
ja
push
xlat
je
repnz
cmpsb
pop
shlb
in
adc
mov
ret
xor
fsubp
mov
arpl
dec
xchg
scas
sbb
sub
pop
mov
inc
sbb
aam
mov
and
mov
cs
outsb
shrl
popf
inc
add
cmpsl
sbb
pop
inc
daa
call
mov
mov
stos
jb
sub
add
cmpsl
aam
test
mov
int3
xchg
sub
cmp
das
pop
dec
jp
shrl
repz
ret
std
mov
out
cmp
push
cwtl
push
xlat
jmp
lds
or
push
shl
mov
mov
sub
dec
cmp
shrb
dec
lret
xchg
ja
mov
aas
jne
icebp
orb
sbb
sbb
xchg
jle
xchg
push
xlat
repnz
orl
mov
lds
cld
xor
inc
add
jmp
mov
xchg
and
std
push
mov
inc
add
cmp
out
shrl
jmp
das
aad
jo
sub
pop
pop
stos
cmpsl
aam
sub
push
in
pop
cwtl
jmp
pop
out
gs
cmp
movsl
mov
mov
push
cltd
aad
inc
cmpl
mov
aaa
sahf
cmp
jmp
mov
inc
cld
cmp
leave
ljmp
jae
adc
imul
jb
push
repz
lahf
fisttpl
or
gs
cmpsb
sub
es
addr16
or
scas
push
out
imul
rcll
xlat
jmp
cwtl
push
xlat
jmp
xchg
outsl
testb
dec
or
fdivs
dec
fsubrs
inc
mov
dec
push
jmp
mov
xor
test
das
arpl
cmp
and
and
and
enter
imul
jmp
lcall
pusha
inc
sub
jnp
pop
dec
scas
dec
mov
sbb
xlat
jmp
addb
lret
mov
test
fwait
pop
add
sbbb
mov
jae
mov
rorb
bound
cmp
add
iret
mov
cmp
add
mov
xchg
adc
test
cli
inc
and
mov
shlb
aas
sbb
adc
outsl
notl
sub
arpl
xor
xchg
adc
pop
mov
fisttpl
add
sub
mov
sbb
dec
mov
pushf
pop
jae
fs
das
add
push
ds
push
cmc
adc
jne
jmp
clc
pop
orl
push
jle
pop
mov
std
je
lret
jmp
lcall
dec
pop
shrl
enter
cmpsl
sbb
shlb
icebp
leave
jno
mov
imul
daa
mov
add
fadds
mov
aad
xchg
out
out
js
xlat
jmp
ret
xchg
inc
mov
sbb
sbb
testb
push
hlt
ljmp
xchg
dec
lcall
lods
and
pop
leave
and
std
push
clc
sbb
lret
or
and
imul
add
cltd
jno
mov
xchg
ljmp
inc
jg
push
icebp
add
mov
push
mov
jnp
stos
jmp
ret
aad
mov
subb
cmpl
aas
cmpsb
mov
dec
stos
xchg
push
ret
sbb
daa
ss
jmp
sbb
jbe
aad
addr16
mov
dec
adc
in
ret
dec
aam
xor
cmp
and
or
cwtl
mov
jg
leave
aas
or
mov
stos
pusha
movb
jl
das
sub
test
and
roll
shll
test
jl
jl
mov
jne
fs
aam
pop
adc
leave
jno
insl
in
mov
test
adc
repz
pop
test
jno
inc
push
fiadds
mov
iret
arpl
test
jl
aad
mov
fisubrl
jbe
cmpsb
sbb
mov
sub
not
ljmp
ljmp
xor
fadds
cmpsb
aad
out
jmp
mov
jbe
push
ds
cs
inc
xchg
in
pop
dec
sbb
stos
xchg
stos
sbbb
je
int3
in
or
or
es
pop
add
add
add
int
push
jne
rorb
jl
push
xlat
movsb
clc
xchg
orl
mov
in
popf
imul
cmc
sbb
xlat
jmp
cmpb
push
loop
into
and
or
adc
push
mov
aad
int3
incl
pop
shrb
push
cmc
jnp
movsl
arpl
int
jmp
jle
mov
iret
pusha
adc
jmp
dec
outsl
mov
scas
jmp
lahf
and
cmp
lahf
gs
push
addl
mov
ret
mov
jl
in
mov
andl
mov
lret
pop
mov
cltd
insl
jae
pushf
dec
shl
pop
mov
pop
xchg
fcmovb
pop
lea
lret
xchg
inc
sub
jne
fs
cmp
rcrl
out
jnp
pop
out
aam
cmp
movsb
adcl
icebp
mov
rcll
add
mov
mov
sar
repz
ja
jne
icebp
add
fidivrs
cmpsl
daa
imul
loope
movsl
jmp
ret
mov
jo
insl
push
jg
push
scas
frstor
cmc
cmp
test
pop
mov
adc
test
test
jne
stos
cmpl
mov
mov
rol
fdivr
leave
inc
lock
int
enter
mov
bound
les
test
cltd
fs
inc
add
xlat
jmp
and
daa
imul
sub
into
sti
sarl
fsubrs
insb
ja
pop
dec
leave
rorl
dec
xchg
add
xchg
pop
subl
mov
ljmp
addr16
xchg
push
jl
sbb
in
out
inc
xor
add
int
dec
or
les
pop
ret
lds
jmp
or
repz
push
popf
mov
mov
cmp
pop
lods
popa
push
push
cltd
fs
inc
add
or
mulb
dec
out
ret
xchg
outsb
fisubs
test
pop
xlat
loope
cmpsl
pusha
rcl
aam
jmp
mov
sbb
xor
cmc
data16
imull
ja
loopne
xchg
gs
pop
xor
inc
and
xchg
lds
fimuls
pop
lea
cld
jbe
push
mov
and
xor
jne
adc
mulb
dec
out
rolb
jg
std
es
lcall
jmp
fwait
jecxz
cli
jle
xchg
push
xlat
rcr
jp
jae
dec
or
sub
out
cmpl
add
jae
and
out
ret
adcb
or
add
add
popf
das
jmp
xchg
sbb
cmp
pushf
jp
iret
jne
scas
pusha
ds
sbb
pop
pop
fnstcw
or
cmp
xchg
adc
or
out
rcl
xlat
aaa
pusha
push
pop
sahf
push
xlat
jmp
andb
lods
dec
and
sbb
insl
insl
out
cmpl
jge
negb
cltd
add
insl
mov
xchg
cmpsl
pop
out
adcb
outsb
sub
mov
dec
xchg
xor
aas
xor
jmp
dec
cmpsb
rcrl
aas
leave
mov
jmp
xchg
out
inc
add
fisubrs
cmpl
jns
call
fisttps
lea
in
push
imul
icebp
mov
xlat
out
movl
lock
or
xor
sbbl
clc
sbb
cltd
mov
loopne
jne
fs
arpl
jne
stc
in
int
and
mov
pop
stos
pop
roll
shl
cwtl
mov
dec
add
shll
sahf
dec
sarb
pop
sub
mov
aam
add
movsb
aad
out
ret
jae
int3
pusha
ret
pop
arpl
push
push
shll
jle
cmc
cwtl
das
loopne
pusha
jne
fisttpll
and
jecxz
std
test
lcall
and
data16
and
rcrb
add
aas
or
or
xchg
daa
add
aas
or
movl
sbb
pop
push
lock
mov
out
test
jae
pop
adc
enter
sbb
inc
pop
sbb
repnz
jle
xchg
push
xlat
movsl
cs
or
xchg
outsb
or
mov
fldt
cmp
negl
adc
aam
out
ret
mov
movsl
lret
movsb
push
bound
mov
out
out
rcl
xchg
inc
sti
dec
pop
pushf
push
xlat
jmp
cmc
cmp
adc
mov
popa
lcall
enter
mov
or
ret
jbe
xor
jmp
or
out
dec
ljmp
mov
cmp
jmp
jl
ret
aad
and
push
cmpl
stc
dec
xchg
ror
inc
imul
pop
lahf
push
xlat
jmp
mov
inc
xchg
out
push
mov
mov
stos
aam
jnp
fcmovu
push
movsl
lret
out
mov
rcl
sub
mov
xlat
jmp
adcb
sub
outsb
inc
vphaddubd
mov
xlat
sbbb
xchg
gs
or
lods
jmp
in
xchg
repz
lcall
jg
xchg
lahf
push
out
out
xchg
ss
div
and
in
movsl
xchg
je
mov
movsb
jae
xor
push
fcoms
sbbb
sub
xchg
int
cmp
pop
xor
rolb
movl
dec
dec
ret
ffree
sbb
mov
lds
js
aaa
mov
maxps
outsl
cmc
and
les
bound
in
pop
das
lds
pop
add
fiadds
lcall
div
pop
int
cmpsl
xchg
loop
mov
cmpsb
sub
jmp
fsubs
lea
andl
or
lods
outsb
mov
lock
lcall
dec
es
shlb
mov
sub
rcrb
mov
and
mov
or
mov
lret
sbb
dec
mov
push
xlat
fstpt
cmp
mov
ret
aad
fnstcw
aam
icebp
nop
out
stos
and
xor
jmp
xchg
push
cmp
mov
dec
out
loop
divl
or
shr
lcall
cmp
das
cmp
push
inc
rol
scas
and
cmc
ja
je
inc
mov
xchg
jbe
xchg
stc
sub
popf
inc
fld1
or
cmpl
xchg
iret
pop
and
sbb
mov
dec
lods
xor
xchg
cli
iret
inc
add
sti
xchg
mov
add
jne
pop
decb
popa
outsb
stc
sbb
push
jne
icebp
andb
scas
and
push
ss
sti
ds
insb
lahf
and
sbb
dec
jo
dec
xchg
mov
sti
cmp
push
cwtl
sar
inc
mov
push
xlat
test
mov
mov
sub
sahf
or
push
rcrb
gs
rorb
stc
fmull
mov
xor
sub
mov
jle
or
jl
jo
xor
sbb
mov
call
jmp
push
shll
adcb
cmp
ret
sbb
repnz
bnd
push
xor
xchg
pop
xchg
cmp
pop
mov
scas
sbb
inc
add
outsb
cwtl
cmpsl
or
sbb
cmpsl
xchg
out
mov
leave
insl
adc
xor
cmp
pop
cmp
scas
add
repnz
iret
adc
subb
jle
sbb
xor
mov
adc
repz
adc
sub
mov
scas
sub
imul
notl
rcrb
xchg
addr16
roll
test
pop
push
ret
es
pop
repz
or
pop
xchg
into
out
lss
xor
imul
inc
mov
push
add
jnp
pop
enter
mov
pushf
sbb
ljmp
and
aam
mov
divl
sub
or
push
leave
fdivp
ror
cmp
mov
out
cmpsb
mov
into
adc
stos
and
cwtl
nop
sub
inc
outsb
shrl
pop
mov
mov
aaa
xchg
cmp
pop
cwtl
lds
shrl
sti
dec
sbbb
jne
rorl
or
or
push
pushf
cli
or
ss
cltd
adc
into
sub
sub
aam
outsb
gs
mov
sbb
icebp
fstps
imull
ja
push
xlat
pop
or
les
jp
mov
outsl
pop
xchg
icebp
mov
in
fst
push
pop
mov
cmp
mov
out
leave
repz
mov
arpl
inc
fisttpll
and
fisubrs
icebp
frstor
imulb
iret
outsl
xor
push
jne
lods
int
inc
xchg
xor
dec
rcll
ficoml
inc
jle
xchg
push
aas
daa
iret
xchg
jbe
push
dec
rcll
or
sbb
sub
lret
and
add
call
and
xor
pop
lret
mov
mov
test
jnp
push
movl
xchg
mov
ja
scas
pop
stos
mov
jae
xchg
push
mov
enter
in
idivb
xchg
push
xlat
dec
in
lods
lret
popa
stos
test
int
add
pop
stos
stos
aam
and
stos
movsl
cli
pop
push
xlat
jmp
xor
mov
mov
cmp
into
mov
xchg
xchg
mov
in
jbe
mov
jbe
xchg
adc
cmp
leave
inc
out
sti
push
pusha
pop
inc
cmpsl
jmp
sub
or
fldt
imul
mov
out
iret
lret
cmp
in
stos
push
push
mov
call
xchg
jmp
cli
pop
push
ret
sbbb
pushl
bound
ja
out
ror
std
mov
push
xlat
jmp
or
pushf
filds
insl
pop
jge
push
test
cmpsb
aad
jmp
xchg
addr16
or
shrb
or
aam
inc
out
out
jmp
cmp
mov
dec
out
jecxz
clc
push
jmp
lcall
in
notl
pushf
jbe
push
out
cmp
addl
pop
push
ret
in
xchg
pop
neg
fcom
ljmp
cmp
lret
xchg
jmp
cmp
jnp
js
loopne
adc
mov
mov
xchg
cmp
aad
aaa
add
mov
popa
pop
push
xchg
data16
mov
stc
sbb
out
test
adc
das
loopne
pop
pop
ret
movsl
das
xchg
sbb
ja
dec
jle
xchg
push
xlat
sbb
ret
jo
incl
fs
cwtl
imul
pop
ret
jae
jne
mov
stos
lods
jmp
out
cmp
pop
cwtl
lds
aad
mov
pop
loope
or
push
pop
in
inc
hlt
lea
xchg
or
hlt
insl
addr16
std
adc
js
jg
shlb
xchg
arpl
pusha
loope
das
stos
adc
dec
inc
pop
and
mov
dec
sbb
fnstenv
aad
ror
idivl
jl
sbb
mov
adc
mov
dec
cmp
and
inc
push
rorl
shrl
aaa
sub
and
xchg
xor
pop
inc
adc
test
aad
fistpl
mov
sarb
subb
js
aam
out
nop
jmp
jne
scas
cli
stos
out
call
gs
push
jo
xchg
lock
lcall
jg
mov
cmc
rcll
stc
sbb
push
xlat
cmp
mov
dec
out
mov
mov
fsubr
lcall
insl
cmpl
fs
mov
jle
push
xlat
jne
fwait
inc
cmp
pop
movsb
stc
pop
push
ret
mov
mov
int
push
std
out
jbe
or
das
or
fnsave
mov
dec
and
cld
cmpsl
fdivl
addr16
pop
dec
ljmp
mov
push
jmp
out
cmp
pushf
call
cs
or
xchg
pushf
fs
inc
fstl
stc
and
jne
or
je
int
and
sbb
mov
fldl
mov
mov
aam
fsubrl
fistl
adc
sbb
jb
jns
jmp
repz
mov
xchg
jbe
xor
stc
inc
orl
sbbb
loop
in
adcb
mov
jbe
int
sub
iret
in
mov
nop
js
push
sub
in
jo
test
sub
pop
sbb
mov
stos
mov
push
sub
insl
or
nop
ret
push
arpl
cmp
pop
arpl
inc
nop
xor
aaa
adc
fistpll
mov
add
add
jmp
jmp
add
out
mov
les
dec
mov
sub
sarl
icebp
mov
lret
aad
daa
cld
pop
in
bound
cmp
sub
pop
jle
inc
jp
mov
jne
icebp
orl
outsl
data16
sbb
fwait
push
xlat
je
fldln2
int
lahf
push
mov
pop
fwait
pop
leave
sarb
mov
cwtl
mov
dec
add
rcl
or
pop
push
pop
mov
xchg
add
mov
cmpl
pop
jle
push
jge
mov
in
xchg
call
leave
push
int
clc
pop
insb
adc
lcall
sbb
lds
aad
addr16
test
xorl
loope
mov
xchg
fsubrs
enter
mov
mov
pop
lahf
js
or
lret
mov
fcomi
lea
xchg
lret
mov
push
jl
sbb
test
xor
dec
out
leave
xchg
idivl
mov
pop
jmp
lcall
mov
hlt
pop
mov
jbe
mov
pushf
xchg
sti
cmc
popa
pushf
pop
lea
adcb
jmp
pop
cmp
xlat
jmp
xorb
dec
dec
pop
mov
les
lods
jne
aas
inc
push
xchg
push
and
dec
cltd
mov
or
cmp
mov
adcb
push
and
rolb
decl
xor
pop
fucompp
movsl
inc
in
xor
sbb
push
jbe
rcrb
js
je
dec
sub
cltd
int
dec
dec
addr16
adc
or
call
adcl
xor
push
adc
cmp
mov
aam
jnp
les
or
cwtl
dec
loope
cmp
and
xchg
loop
and
mov
movsl
jmp
xlat
jmp
push
mov
xor
adc
or
adcl
ret
push
dec
push
pop
int3
loopne
xor
js
mov
aaa
xchg
sbb
aaa
daa
ud1
fs
cmp
inc
inc
out
xor
leave
push
and
cmp
mov
sti
inc
add
ljmp
ljmp
cmp
lcall
test
cwtl
lret
push
int3
sbb
das
pop
push
jle
xchg
push
xlat
ds
cmp
aad
iret
xlat
rcrl
cmp
inc
movsl
das
or
psubw
mov
jae
push
imul
adc
add
fadd
inc
cld
cmpsl
sti
sbb
dec
out
rcl
test
lret
scas
mov
clc
xchg
push
push
ljmp
xlat
cmp
movsb
mov
addr16
push
push
xchg
mov
repnz
pop
imul
and
sbb
xchg
jnp
jle
xchg
push
xlat
cmp
test
sbbb
xchg
ret
pop
fwait
push
aam
in
nop
jmp
jne
stos
pop
inc
std
test
leave
push
mov
sbb
jmp
lcall
xchg
jbe
shl
jmp
out
cmpsl
xchg
sbbb
cmpsb
push
daa
shll
and
push
pusha
pop
or
dec
and
sub
jg
push
xlat
mov
or
dec
xchg
out
dec
idiv
js
insl
insl
lock
and
jg
bound
xchg
cmp
ss
mov
xchg
dec
dec
mov
ss
jmp
out
cmp
mov
data16
enter
and
push
lret
nop
into
sub
lods
push
ljmp
jne
and
cmp
add
stos
imul
mov
shl
dec
sbb
out
lods
int3
ret
xchg
adc
popl
dec
sbb
inc
and
nop
fldenv
inc
bound
jp
pop
aam
sbb
push
cli
sbb
in
mov
mov
pushf
orl
add
movsl
sti
xor
jmp
cmpl
insb
movsl
fidivrl
inc
or
sbb
adc
mov
out
cmp
push
jp
adc
shlb
adc
stos
ljmp
sti
nop
and
into
lods
pop
sub
add
jg
inc
sub
aam
dec
shrl
js
jmp
cmpsl
std
mov
xchg
cmpsb
jmp
sub
dec
jbe
shrl
xchg
fsub
je
sbb
and
xor
xchg
mov
rolb
jg
xlat
jmp
cmp
lock
lcall
jg
rcll
xchg
xor
jmp
push
xor
mov
jg
pop
mov
jnp
test
add
dec
dec
xor
test
pop
xchg
fs
or
dec
shll
rcll
xchg
arpl
inc
adc
lcall
lret
mov
push
aam
cs
lret
addr16
cli
jl
jmp
sbb
xchg
cwtl
sti
jle
xchg
push
xlat
loopne
std
icebp
popa
pushf
insb
xor
push
insl
pop
js
push
dec
cs
mov
dec
shrl
mov
imul
outsb
test
negb
inc
pop
cmp
rcrl
stos
jns
pop
push
inc
sbb
cmpsl
add
or
in
cmpsb
xchg
jmp
xchg
adc
adc
loopne
cli
sub
fcomps
jmp
xchg
xchg
and
stos
jp
mov
fadds
fcomps
daa
jecxz
fdivs
xchg
pop
ja
fildl
popa
stos
scas
ret
pop
mov
out
xchg
ja
dec
mov
and
mov
xchg
jbe
sub
adc
repnz
push
inc
sbb
mov
scas
jg
aaa
add
mov
das
jmp
sub
dec
outsl
mov
in
mov
test
jno
les
jnp
mov
cmp
push
cwtl
push
xlat
jmp
sbb
mov
jecxz
sarl
aad
leave
cmp
das
inc
arpl
jns
mov
test
bound
adcb
mov
rcll
inc
ss
das
sub
test
sbb
push
dec
dec
sarb
ja
je
inc
add
pop
jno
pop
out
mov
xchg
jbe
add
push
cltd
std
inc
cmp
scas
loopne
and
sub
insl
pop
jle
push
jae
vphadduwd
pop
shlb
mov
or
adc
stos
xchg
pop
cmpsl
ret
cld
stos
add
cli
pop
out
jnp
test
add
aam
nop
xor
inc
flds
push
shll
adc
in
pushf
dec
sti
je
cli
pop
dec
sub
jbe
iret
dec
xlat
cwtd
pop
push
dec
std
sbb
and
inc
ret
inc
notb
fisttpl
aad
addr16
sub
pop
add
popa
inc
xor
push
lret
fs
popf
adc
pop
mov
leave
ljmp
ljmp
sub
inc
mov
add
ljmp
cmp
pop
add
scas
sbb
jle
out
mov
jl
sub
psubsw
popa
sbb
mov
mov
nop
dec
fdivrl
pop
ret
push
sub
push
shr
mov
daa
jae
pop
xlat
jmp
loope
cmpsl
fs
out
popa
mov
insb
jae
imul
icebp
nop
in
adc
add
and
rcl
or
push
xlat
jmp
mov
inc
cmpl
loop
cmp
mov
stos
adc
mull
dec
out
jecxz
idivl
out
jnp
jmp
lcall
icebp
out
call
fbld
pop
pushf
push
xlat
jmp
lock
ret
adc
sbb
stos
xchg
push
popa
push
push
mov
xchg
mov
out
sbb
sbbb
movsl
js
push
push
ret
add
popa
pushf
cli
scas
insb
pop
jle
pop
shlb
pop
or
jne
xchg
lcall
or
mov
push
mov
mov
mov
and
inc
imul
lea
pop
push
push
xor
and
sub
fldcw
pop
jmp
jg
xlat
jmp
and
aad
roll
lods
sahf
popa
fwait
ret
pop
movsl
int
test
xchg
push
and
clc
sbb
push
cmp
in
dec
and
jmp
jo
mov
xchg
ret
cmp
js
rclb
xchg
jbe
cmpsb
pop
shlb
sbb
adc
sbb
addr16
inc
out
cmp
sar
sbb
and
out
stos
fisubrl
fs
or
fdivl
fld1
xchg
jbe
movsb
sti
cmp
mov
dec
out
mov
mov
jmp
lcall
stos
call
std
test
sti
push
mov
mov
lcall
es
out
cmovs
jbe
or
sub
popf
cmp
push
add
movsl
pop
iret
cmpsb
jmp
ret
sub
aas
jb
arpl
ljmp
add
test
andb
test
mov
jnp
mov
sub
push
and
or
cmc
mov
jbe
mov
jbe
dec
dec
out
push
or
jmp
sub
mov
out
mov
popa
lahf
jmp
loopne
xchg
xor
jmp
out
sarl
jmp
cmp
jecxz
and
clc
push
xor
xchg
in
lret
pop
push
out
cmp
xchg
lods
sbb
mov
dec
xor
sarl
mov
cli
or
jnp
and
js
push
adc
jno
pop
sub
test
add
int
les
cmp
pop
loope
xor
cwtl
mov
dec
add
cmpsb
dec
icebp
movsb
pop
sahf
lret
xchg
adc
mov
aas
or
aam
xchg
inc
or
sti
xchg
popa
mov
mov
pop
pop
minps
dec
pop
add
ficomps
scas
call
push
mov
jle
xchg
push
jmp
push
enter
pop
xchg
cmp
jb
fcompl
dec
out
push
pop
or
jns
pop
mov
cltd
pop
sti
inc
incl
sbb
mov
imul
push
xlat
push
repz
mov
cmpl
in
lret
dec
mov
jbe
push
xlat
.byte
movsl
.byte
