push
ja
js
ja
out
fdivl
mov
fidivs
ljmp
pop
ja
ja
xlat
fdivl
jns
ja
outsl
fdivl
insb
fdivl
mov
add
inc
iret
cmp
or
add
lods
jle
ja
mov
ja
xchg
ja
icebp
ja
ljmp
jns
icebp
ja
jo
ja
nop
icebp
ja
pop
icebp
ja
imul
sub
ja
xchg
ja
pop
icebp
ja
pop
icebp
ja
mov
ja
popa
icebp
ja
pop
icebp
ja
jge
ja
outsb
icebp
ja
mov
ja
jmp
icebp
ja
mov
ja
popa
icebp
ja
iret
repz
popa
icebp
ja
stos
icebp
ja
dec
hlt
ja
mov
ja
pop
icebp
ja
xchg
icebp
ja
add
add
cmpb
jl
scas
cmpb
jl
mov
cmpb
jl
fwait
cmpb
jl
cwtl
cmpb
jl
stos
cmpb
jl
movsb
cmpb
jl
xchg
cmpb
jl
pop
cmpb
jl
fiadds
jl
dec
test
cmpb
jl
nop
jl
jo
jl
lcall
pop
or
jl
scas
cmpb
jl
add
add
pop
stos
jl
sbb
add
divl
add
add
mov
jle
mov
jle
adc
jle
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
push
imul
jb
je
arpl
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
call
pushl
pushl
push
push
call
add
mov
add
cmp
jb
mov
leave
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
push
pushl
call
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
push
call
add
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
push
call
call
call
movzwl
mov
mov
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
dec
add
add
add
add
add
add
add
add
adc
add
add
add
add
mov
add
add
add
add
add
add
add
and
add
add
add
add
add
add
sub
clc
add
add
and
popa
outsb
and
pop
ja
jae
inc
dec
and
push
ja
mov
add
xor
pop
dec
fisttpl
xor
or
push
adc
push
lea
decl
test
std
out
jmp
test
jge
cmpl
add
dec
jno
sub
cmp
inc
add
add
push
dec
decl
int3
inc
lea
jge
push
push
add
incl
add
add
test
incl
adc
rcl
inc
or
inc
mov
add
call
arpl
add
repz
add
push
push
add
mov
clc
mov
add
add
jne
jns
add
add
pushl
add
xchg
add
insb
add
add
add
add
add
and
add
push
add
add
add
inc
inc
outsb
lock
inc
jne
adc
je
jo
sbb
popa
jo
xor
inc
gs
mov
lret
arpl
popa
xchg
insb
push
jae
cmp
jb
insb
push
jae
gs
jne
inc
push
jb
xor
gs
js
xor
add
add
icebp
add
add
add
mov
add
add
jl
add
add
add
add
in
add
add
add
add
sub
cmc
push
pop
adc
loopne
sub
adc
stos
mov
leave
and
call
sbb
jne
pop
cmc
mov
nop
fs
jge
jo
leave
out
add
lea
rorl
hlt
test
xor
ficompl
pusha
lods
jecxz
sti
push
mov
in
sub
loopne
sahf
lods
loopne
movsl
adc
xor
or
test
add
sub
adc
cld
pushf
xor
dec
xlat
dec
test
repz
jecxz
movsl
add
lret
ret
sbb
bound
push
sahf
mov
ja
add
jmp
sub
loope
mov
mov
das
dec
leave
pop
je
and
sbb
cmp
stc
lods
cmp
jle
negl
xor
sub
test
idivl
enter
mov
push
roll
adc
jp
cmpl
mov
cmp
js
or
mov
inc
dec
js
pop
cmp
stc
sbb
push
mov
sub
insl
call
roll
fbld
insl
movb
cmc
mov
cmp
pop
jae
sub
push
sbb
insb
jns
mov
loop
movb
std
popa
mov
push
cs
mov
jb
dec
xchg
push
push
test
les
les
push
or
mov
fstp
sbb
add
and
loopne
fsubrs
jp
inc
into
es
mov
icebp
mov
push
mov
inc
test
test
decl
lea
popl
pop
jle
jb
pop
fnstsw
in
ljmp
andb
stc
xor
push
lods
push
lea
cmp
jg
fcmovne
mov
andb
sbbb
js
jg
lock
in
jns
lret
in
cwtl
leave
addr16
enter
mov
add
jnp
or
pop
int
es
jae
xchg
sbb
aad
pop
insl
and
repz
inc
push
jns
insl
subb
cmp
pop
dec
femms
rcrb
and
ds
aas
mov
cmp
mov
xchg
xchg
sarb
and
mov
data16
les
scas
aas
cld
enter
and
imul
jno
fsts
in
out
jmp
sbb
sar
mov
or
pop
out
push
es
pushf
punpcklbw
xchg
dec
mov
test
cmp
fimuls
test
adc
dec
arpl
popf
xchg
lahf
dec
imul
cs
or
repz
lods
pop
inc
mov
xchg
daa
outsl
dec
addr16
andb
and
and
pop
mul
lcall
cli
mov
popf
bnd
inc
movsb
sub
das
mov
dec
cmc
xor
sbb
xorb
mov
std
movsb
cwtl
loopne
jno
xchg
dec
push
frstor
jmp
loopne
out
in
adc
inc
sahf
leave
jg
pop
and
mov
gs
hlt
and
mov
mov
dec
jo
jne
jmp
ret
notb
xor
iret
les
stc
ret
repnz
mull
jle
lea
xchg
arpl
xchg
outsb
lea
fisubl
adcb
aad
xchg
inc
adc
jmp
mov
dec
xchg
inc
xchg
insl
sub
push
pop
orb
jecxz
imul
xchg
push
cwtl
aaa
lods
add
mov
sbb
insl
xchg
sbb
pop
push
inc
pop
mov
cmp
test
add
popf
xlat
aas
xchg
leave
mov
push
lock
push
imul
xchg
rcrl
scas
or
inc
ret
push
pusha
jo
or
gs
in
dec
fnstenv
xor
mov
push
sti
add
push
fs
xor
mov
out
xor
iret
sbb
fidivl
fsubrl
clc
fcoms
movsl
jae
jmp
inc
test
jecxz
cmpsb
push
test
or
addr16
cld
les
idivb
pop
adc
out
mov
mov
mov
sbb
movsb
cmpsb
lods
jnp
sbb
pop
pop
xchg
mov
push
and
inc
sub
outsb
hlt
test
mov
mov
stos
loope
or
inc
push
xchg
lret
stos
jecxz
add
dec
push
cmp
adc
push
pop
cwtl
xchg
fwait
dec
jne
dec
shlb
pop
fldt
outsl
jae
pop
inc
pop
adc
lahf
hlt
test
inc
stc
sbb
push
insl
in
in
push
test
outsl
jp
sti
jmp
mov
xchg
clc
sub
test
pushf
cmc
push
popa
je
fwait
imul
loop
sub
and
scas
add
cli
lret
cmp
lods
pop
add
lds
popf
mov
cltd
mov
xchg
push
fists
popa
outsl
pop
jmp
pop
mov
repz
inc
hlt
sbb
imul
aaa
fs
mov
fildll
cmp
stc
cltd
xor
je
jno
inc
popf
mov
nop
push
sub
inc
icebp
incb
scas
aad
add
enter
xor
add
dec
scas
loope
xchg
shll
les
loopne
inc
mov
scas
mov
imul
cmc
lcall
push
aad
test
mov
mov
mov
push
add
ljmp
scas
xor
xor
pusha
int3
pop
pop
sub
jp
aaa
push
xchg
pop
dec
mov
mov
and
loope
xor
mov
or
mov
sbb
lea
sub
mov
xchg
aas
add
xchg
sbb
jmp
mov
mov
xchg
call
leave
mov
push
push
ret
jnp
sahf
pop
in
pop
fs
fcompl
pop
ds
adc
xor
imul
sti
adc
sbb
fidivs
faddp
push
jnp
cmp
add
rolb
jns
cmp
clc
std
negl
aas
xchg
inc
inc
cmpsl
cmp
lahf
int
push
mov
jne
movsb
cmpsl
pop
sbb
lods
scas
mov
push
fs
notl
xor
mov
mov
add
hlt
aad
add
shrl
push
lds
mov
loopne
push
fwait
jp
shlb
pop
popa
pop
pop
and
mov
mov
lods
filds
fsubrp
hlt
std
sbb
lret
xchg
rol
mov
rcr
in
sbb
shrl
push
pop
cmp
out
insb
int
jp
xchg
cltd
mov
rcrb
and
out
xor
stos
int3
sahf
pushf
inc
dec
adc
pop
int3
xor
scas
mov
fmuls
iret
push
adc
adc
test
imul
nop
xchg
lret
fbld
lret
cmp
jl
cmp
xchg
stos
int3
vpunpckldq
fidivl
push
mov
test
sub
mov
xor
fbstp
lods
dec
mov
xor
les
adc
repz
lds
insl
xchg
pop
jne
xchg
jae
xor
outsb
inc
add
cltd
jbe
hlt
pop
pop
pop
inc
int3
push
sbb
mov
test
pop
pop
inc
rorl
insl
and
call
cli
add
fsubl
hlt
lds
mov
cmpsl
insb
mov
mov
das
lret
cltd
xor
and
push
pop
pusha
pop
sbb
cmp
xlat
push
inc
mov
cmp
cmp
jl
pop
xchg
sbb
jbe
incb
mov
ja
cmp
cmp
dec
imul
popa
ret
mov
inc
jnp
shrb
push
push
insb
repnz
sub
aad
mov
add
inc
shlb
shll
in
out
scas
or
rorb
jbe
push
push
aaa
jmp
repnz
jg
dec
dec
ret
mov
add
sbb
cmpsl
cmp
out
push
push
hlt
sub
into
add
add
in
xor
xchg
mov
dec
notb
loop
std
icebp
inc
xor
push
push
es
jg
or
rorl
xchg
push
jo
leave
push
push
scas
xchg
mov
ret
movsl
dec
push
and
ret
sbb
scas
jno
scas
dec
pop
mov
std
push
rcr
lods
dec
cmp
inc
or
mov
ljmp
gs
outsl
push
adc
iret
adc
addb
fldt
insl
sbb
dec
fsubrs
cmp
pushf
jg
aam
xchg
add
xor
out
cmpsb
cmp
xchg
mov
dec
sbb
jbe
cmp
and
out
jbe
jnp
and
sbb
icebp
adc
mov
xchg
xchg
sbbl
cmp
fisubrl
jl
insl
pop
push
movsl
out
or
sbb
adc
sbb
mov
lds
scas
ret
or
pop
and
insl
sahf
pop
push
mov
into
inc
je
mov
scas
lcall
xchg
rcrl
scas
and
mov
mov
push
aad
fisubl
pop
cmp
out
push
hlt
mov
sahf
andl
stos
sarb
mov
je
fcompl
out
cli
repnz
lret
cld
outsl
inc
pop
or
xchg
cmp
shl
and
in
in
popf
jbe
scas
fiadds
iret
sbb
dec
lods
ljmp
fwait
neg
add
cmp
in
insl
adc
mov
inc
sbb
popf
and
pop
sahf
sub
fmull
mov
shrl
mov
or
loopne
cwtl
cwtl
dec
jae
nop
icebp
pop
stos
clc
pop
jle
add
xor
arpl
cmp
mov
and
sahf
jbe
mov
lret
lods
fbld
aam
outsb
fiadds
leave
pop
std
jge
out
notb
pop
xor
sbb
xor
xor
cmp
dec
jg
outsb
daa
int3
mov
pop
inc
ljmp
out
ret
push
sub
mov
insl
mov
or
adc
and
leave
test
std
stc
push
pop
push
arpl
loopne
mov
imul
cmp
sbb
ja
fcmovnbe
lods
fisubrl
in
leave
add
popf
iret
mov
sahf
in
cmp
aaa
addr16
jg
add
fisttpl
mov
js
cmp
fstpl
cmp
jno
cmp
pushf
outsl
xchg
mov
test
daa
inc
repz
stc
add
cltd
gs
sbb
sbb
imul
lods
inc
arpl
mov
dec
mov
fwait
sub
lea
adc
shlb
cmp
shrl
cli
sbb
test
je
fwait
in
mov
dec
add
into
psrlw
pusha
mov
mov
stos
push
and
mov
and
push
dec
aas
test
mov
push
and
movsb
jmp
jnp
mov
es
sti
jne
jnp
iret
xor
lret
dec
pushf
bsr
mov
add
iret
sub
dec
jg
xchg
es
cmovs
sbb
and
cmp
or
es
lret
inc
xor
xor
sub
aam
lods
inc
pop
jne
add
fidivl
outsl
jne
push
mov
pop
test
arpl
mov
sub
and
fadds
cmp
call
sub
push
addr16
xchg
add
ljmp
arpl
data16
mov
rcll
jbe
sub
ds
inc
inc
mov
adc
dec
sub
cmp
sbbb
inc
xchg
xor
fisttpll
movsb
pmulhw
inc
dec
rolb
ror
mov
sbb
mov
pop
jns
es
sub
jnp
lea
inc
pushf
and
insl
mov
into
loopne
adcl
mov
adc
iret
pop
inc
mov
idiv
or
bound
popf
fstps
cld
cmp
divb
data16
test
movsl
xlat
adc
and
cli
mov
pop
jge
int
jae
jno
pop
adc
dec
and
cmpsb
lahf
sbb
ret
jo
and
scas
or
push
popf
xlat
xchg
sbb
xor
xchg
andb
add
xchg
call
dec
add
stos
cmp
or
inc
push
push
cmp
inc
int
lods
add
push
inc
fld
mov
mov
push
cmc
shrb
inc
or
pushf
jecxz
repnz
push
pop
ret
add
xchg
push
adc
lods
mov
mov
sbb
ficoms
sarl
call
xchg
ds
inc
pop
xchg
mov
xor
or
mov
lods
sahf
arpl
cmpsl
pop
shrl
xchg
test
push
js
pop
sub
sbb
dec
popf
ljmp
adc
lds
push
lret
fdivs
dec
stos
dec
jnp
mov
push
lcall
mov
addr16
mov
push
lcall
sbb
inc
aas
dec
addr16
jnp
push
iret
mov
jmp
daa
push
insb
aaa
sbbl
out
shrl
outsb
fistpll
sbb
push
jns
in
daa
out
inc
jecxz
jbe
dec
mov
xchg
pop
jbe
cltd
push
pop
mov
mull
fmull
mov
rcrb
ret
sarb
inc
mov
outsb
gs
pop
xchg
lret
pushf
negl
test
pop
loop
shlb
sub
xchg
lahf
sub
mov
dec
mov
or
cld
ss
pop
push
cmpsb
jp
fidivl
icebp
push
filds
jae
sub
lret
and
arpl
or
sub
push
daa
in
fwait
popf
repnz
or
js
outsl
xlat
sbb
xchg
outsl
loope
pop
add
fcmovnb
sahf
in
push
add
pop
pop
lock
popa
add
xlat
out
mov
stc
sbb
sub
cwtl
jmp
xor
cmp
jb
xlat
mov
jns
stos
push
cmp
inc
in
dec
outsl
mov
movsl
jg
cmpsb
int
scas
aad
lods
jne
rorb
push
pop
idiv
xor
es
enter
add
xchg
rcrl
cmp
jg
shrl
inc
sub
out
xor
pop
adc
mov
cwtl
xlat
pop
xor
xchg
xor
mov
jb
cmovg
arpl
out
dec
jne
movsl
pop
dec
pusha
sbb
inc
pusha
mov
lea
dec
and
push
imul
cmp
inc
test
popa
xchg
mov
jb
push
in
arpl
sub
test
fisubs
pop
jg
or
pop
lock
fcmovne
push
stos
mov
push
lods
subb
lods
aad
pop
sbbb
xor
fcmovbe
mov
ljmp
or
gs
jp
lock
push
mov
out
cmp
xorl
loopne
mov
lret
movsb
inc
push
gs
icebp
mov
mov
imulb
jl
jp
mov
lcall
add
popa
mov
das
arpl
xchg
dec
sub
stos
pop
xchg
loopne
mov
and
cs
pop
pop
into
push
mov
pop
mov
xchg
mov
or
loop
in
cmp
mov
dec
xor
ss
inc
out
inc
les
or
loope
pop
clc
xlat
rcr
adc
movsl
jl
sysret
movsl
enter
sub
notl
fnstsw
inc
mov
lcall
dec
sub
stos
push
pop
fcmovu
in
cmp
or
sbbl
repz
pop
jae
stc
add
pop
dec
mov
mov
imul
daa
shrl
subl
test
pop
lret
xchg
cmp
xor
or
add
cmp
xor
jb
sbb
fs
adc
mov
cmp
or
xor
mov
call
adc
mov
shll
xchg
push
xlat
push
mov
popa
mov
lds
add
xchg
stos
sub
adc
cmp
insb
jge
addl
mov
sub
inc
pop
pop
mov
and
scas
pop
inc
jb
and
xor
mov
mov
fldl
sbbl
adc
sahf
lahf
sti
xchg
sub
add
nop
int
cmc
hlt
push
jne
jmp
xchg
pop
aas
cltd
push
int3
push
mov
xchg
sti
mov
push
sahf
popa
push
jne,pt
sub
pop
icebp
ret
scas
enter
cmpsl
inc
test
test
jge
pusha
inc
arpl
pop
lret
and
xlat
adc
pop
cmp
inc
and
pusha
add
cmp
fucomip
dec
push
test
rorl
cmc
sbb
xchg
in
sub
es
sbb
out
das
xchg
push
lret
cwtl
cmp
fldcw
sub
adc
fcmovnb
and
out
xor
shlb
mov
cmp
cwtl
xchg
outsb
or
inc
jecxz
scas
push
mov
fcmovne
inc
and
xchg
fdiv
mov
lret
push
sbb
cwtl
lock
jge
inc
jb
cli
sbb
les
sbb
out
push
dec
xchg
cld
ljmp
mov
imul
inc
jne
rcll
push
cld
xor
or
add
push
adcb
out
pop
sub
daa
loope
orb
mov
sahf
add
fcoms
mov
pop
inc
or
daa
fsubr
jle
hlt
jecxz
fsubp
xchg
jns
sbb
xor
xchg
adc
je
lods
pop
fistps
jecxz
mov
jmp
enter
jb
aad
inc
fmull
add
mov
and
add
xchg
inc
sub
clc
imulb
add
mov
dec
sbb
sub
mov
adc
hlt
and
adc
xchg
xor
mov
push
jmp
mov
xchg
cmp
sbb
ja
inc
fisubrl
bound
dec
pushl
jno
or
push
xchg
sti
xor
test
jne
test
add
push
les
call
fiaddl
pop
flds
jecxz
jno
imul
sub
xchg
mov
call
fldl
add
adc
inc
xor
loope
fucomi
or
add
cmp
movsb
outsb
sbb
xchg
clc
pop
insb
stos
or
cmpsl
jg
stos
clc
sbb
sub
ljmp
push
hlt
cmpsb
or
subb
sti
and
jmp
fcmovb
xchg
xchg
bound
mov
filds
mov
add
lock
xchg
pop
adc
and
scas
std
jp
pop
loope
or
lock
xchg
or
and
arpl
mov
push
out
xchg
dec
adc
dec
xchg
es
xor
stos
cmp
xchg
xor
int
out
mov
pop
popf
sahf
ljmp
jge
iret
out
pushf
popa
push
push
push
pop
insl
sbb
gs
dec
test
loopne
lret
sbb
dec
or
push
ljmp
jle
addr16
cmp
push
push
ret
inc
push
shrl
dec
loope
imul
mov
or
std
imul
shlb
jg
xlat
jl
inc
jmp
push
adc
and
xchg
into
mul
jno
inc
ss
push
mov
stos
gs
mov
and
adcb
mov
mov
stos
jp
push
adc
pop
jne
mov
pop
fsubrp
mov
mov
mov
cmpl
inc
or
ja
mov
int3
xchg
mov
push
test
sub
push
push
sahf
je
sarb
ret
scas
loope
es
xchg
pop
inc
enter
fs
dec
cmc
sbb
pop
sbb
dec
push
enter
test
mov
movsb
or
insl
shll
mov
dec
inc
xchg
pushl
mov
or
mov
cs
rcll
push
add
fistpl
pop
pushf
sub
shrl
fdivl
insl
enter
mov
int
cmp
xchg
and
pop
adc
sbb
repz
ret
repnz
jmp
inc
shr
call
fmuls
or
out
mov
sbb
or
or
fwait
roll
and
mov
das
scas
lds
dec
xlat
sub
push
pop
hlt
pop
xlat
popa
scas
and
stos
or
pusha
shlb
push
xchg
sarb
dec
jmp
and
cmc
adc
jmp
adc
inc
inc
dec
adc
mov
out
aad
push
ret
cmp
cmp
outsb
cmp
sbb
dec
shrb
std
cmp
push
popa
inc
cli
or
rolb
out
inc
add
mov
mov
ret
add
xor
mov
cli
pop
inc
cwtl
inc
jg
adc
fsts
fimull
fwait
inc
stos
movsl
cmp
adc
push
iret
xchg
pop
imul
jne
sub
dec
cmc
xor
orb
sahf
popf
int
std
adc
push
repnz
push
lret
pop
and
mov
xor
xor
push
adc
mov
or
adc
mov
lods
dec
sarb
add
push
adc
loop
sbb
roll
test
push
fisttpl
pop
and
dec
push
push
inc
mov
es
adc
movsb
mov
pusha
movsb
sbb
pop
mov
or
sbb
pop
pop
cmp
sbb
test
popf
inc
in
filds
mov
shll
out
push
cmpsb
jp
xor
into
xor
mov
loopne
cmp
repz
inc
sub
scas
add
adc
add
add
add
add
cld
add
xchg
add
add
add
insb
add
and
add
add
add
add
add
add
add
add
mov
add
add
dec
add
add
or
add
add
add
xor
and
sub
mov
sub
add
adc
add
add
add
stos
add
ja
mov
lcall
cmc
add
add
add
dec
jae
and
add
and
add
inc
add
add
sub
add
add
add
js
pop
add
fs
add
add
add
add
int3
sbb
sbb
sbb
lods
add
add
add
add
and
popa
das
push
dec
push
jbe
imul
push
cld
add
sti
jecxz
jne
leave
in
js
pop
cld
adc
mov
pop
in
lea
movl
leave
or
je
call
push
leave
in
cmp
push
lea
add
dec
or
adcb
sbb
add
lea
stos
push
call
mov
loopne
mov
mov
add
xor
push
loopne
add
inc
or
add
je
push
pop
lods
je
push
mov
mov
decl
add
push
add
lea
in
loopne
add
mov
or
inc
lcall
adc
loopne
add
add
pop
add
add
add
mov
sbb
pop
add
add
add
add
add
inc
jae
gs
add
imul
and
outsb
je
inc
fs
dec
add
test
je
fisttpl
inc
add
jns
das
jne
outsb
jae
jne
add
inc
xor
jb
mov
add
add
xchg
add
sbb
add
add
add
add
mov
add
add
add
add
add
add
push
das
je
cs
sub
mov
cmc
xchg
lods
sbbl
push
dec
mov
cmp
dec
dec
lea
sub
cltd
mov
mul
add
xchg
orb
xor
dec
cmpsb
sbbl
jecxz
lods
js
popa
scas
and
inc
mov
dec
pushf
jle
lds
stos
sub
subl
popf
or
push
jae
xchg
rcrl
out
dec
push
hlt
ret
ds
and
sub
insl
leave
or
sti
leave
sbb
call
aam
aam
mov
xchg
sub
roll
push
jb
cld
jmp
adc
inc
loope
fstps
mov
jl
or
movsl
mov
dec
loopne
xor
cmc
ret
pop
aam
mov
stc
add
sub
adc
add
sub
enter
hlt
or
out
jecxz
into
or
jge
pop
stos
and
jle
or
xor
mov
inc
or
cmpsb
gs
enter
adc
test
jge
jnp
aad
movb
aam
fistl
mov
or
rorl
jae
bound
push
hlt
pop
or
dec
mov
and
push
in
add
push
fwait
outsl
xchg
mov
in
stos
fstpl
jmp
int
insl
cmc
cmc
sbb
fyl2xp1
loope
xlat
iret
cmp
imul
cmpsl
xor
lds
out
out
es
nop
dec
stos
fcompl
dec
xor
push
cli
shl
bound
push
shr
dec
push
out
mov
push
push
stos
test
popf
mov
sbb
jge
je
sar
dec
push
scas
or
or
lds
xor
loope
xlat
adc
data16
mov
xchg
js
xchg
push
loopne
mov
jae
xor
adc
ja
cmp
push
jno
je
addr16
outsl
orl
inc
jmp
pop
or
mov
or
add
sub
les
or
xor
add
mov
pop
int
enter
mov
lcall
cmpb
andb
lea
fsubr
dec
mov
inc
es
loopne
push
js
inc
into
mov
inc
inc
fdivl
push
dec
inc
and
pop
sub
add
int
xchg
in
mov
push
fmul
pop
mov
lcall
fstps
dec
dec
int
inc
stc
rolb
fsubr
dec
mov
jo
shrb
inc
stc
push
rcrl
in
aam
repnz
pushf
fistps
inc
out
outsl
and
inc
clc
imul
inc
or
mov
sbb
mov
xor
xchg
test
dec
mov
loope
xchg
xchg
addb
inc
gs
sbb
adc
dec
cld
push
sub
adc
add
data16
jne
sbb
in
test
int3
mov
clc
push
mov
add
add
div
mov
xlat
insb
dec
imul
ljmp
les
aas
jne
push
lods
sbb
loope
add
xchg
in
mov
sub
inc
mov
cmp
dec
push
inc
adc
enter
pop
mov
test
gs
loopne
inc
add
lret
js
sbb
repz
lahf
push
cltd
mov
lock
jl
xor
mov
xchg
inc
in
mov
cmp
xor
stc
lcall
aad
test
popf
icebp
push
and
in
clc
daa
inc
sub
mov
pop
scas
xlat
out
fdiv
adc
divb
imul
filds
push
cmp
rclb
nopl
ja
adc
test
jb
outsl
stc
and
pop
addl
xchg
fiaddl
aad
xchg
pop
add
adc
in
outsb
cmp
popa
push
add
mov
je
xchg
lcall
repz
sar
jno
std
sbb
loop
push
jg
push
sbb
jae
iret
movsb
imul
rcrb
les
push
cmpsb
pop
jge
int
cmpsl
data16
mov
jno
push
adc
icebp
sub
pop
push
shrl
ss
adc
mov
or
pop
jnp
adc
sub
xchg
adc
sbb
outsb
aas
adc
aam
push
xor
jl
fs
repz
cmp
repnz
jle
push
iret
cmpsb
mov
pop
mov
add
push
loopne
pushf
stos
mov
jecxz
cmp
addr16
phsubsw
ret
js
cmpsb
and
movsl
lods
jnp
push
jmp
mov
or
out
test
das
xor
shlb
rorl
fimull
pop
in
mov
in
lret
pop
in
cmp
pop
repz
aaa
xor
pop
add
adc
jmp
nop
mov
adc
mov
xor
xor
gs
mov
popa
in
fdivl
fdivr
lea
outsb
mov
jle
xor
dec
fsubs
mov
push
test
sub
inc
scas
daa
rcll
push
push
add
sub
xor
pop
out
fs
jb
mov
int
into
out
out
jae
mov
xor
ret
mov
add
fimull
add
fs
outsb
dec
gs
lods
dec
fnclex
sahf
cltd
mov
jo
adc
call
adc
jne
adc
fisubrs
xchg
add
testl
cmp
lds
arpl
ret
pusha
mov
mov
addr16
or
xchg
adc
sti
jmp
cmp
xchg
jns
mov
mov
dec
aaa
xchg
push
stc
pushf
data16
js
std
enter
inc
inc
adc
sbbb
mov
mov
push
cmpsb
movsb
imul
sbb
cltd
and
out
insb
fwait
jnp
popa
ret
mov
and
ret
pop
lea
ret
pop
push
pop
sbb
test
shlb
clc
jno
lret
sub
outsb
lcall
xor
xchg
lret
cltd
mov
in
sbb
mov
xchg
mov
stos
jmp
stos
lret
fucom
inc
mov
enter
arpl
aaa
iret
cmp
icebp
rcr
cmpsl
fdivl
ljmp
cmp
js
sub
fcoms
loop
incl
add
add
and
push
std
pushf
mov
sbb
or
call
mov
adc
cltd
mov
leave
ret
pop
ss
rcr
rcrb
adc
and
sbb
movsl
in
les
push
jns
cs
or
rcll
fimull
push
stos
mov
sbbl
loop
sub
pop
out
and
data16
test
rcl
in
lret
jb
cmp
add
sbb
test
push
inc
sub
test
test
out
lret
movsb
popf
mov
pop
or
mov
repz
stos
shr
and
scas
test
aas
inc
aad
cmp
mov
mov
mov
mov
add
or
scas
dec
fildll
imul
cli
fdivs
aad
imul
inc
adc
stos
cwtl
add
sub
and
enter
shlb
xchg
dec
jmp
add
xor
int
jae
loope
and
out
out
jge
int
and
xor
fxch
lods
js
jg
dec
jns
andl
aaa
pusha
je
ret
movsl
add
xor
xchg
adc
fnclex
jae
pop
sub
scas
lret
dec
iret
push
test
mov
pop
push
jle
insb
rcrl
out
pusha
xchg
inc
inc
mov
repnz
pop
loopne
inc
mov
dec
xor
imul
push
jnp
push
jp
xchg
notl
jp
or
adc
and
or
jg
pop
repz
test
cli
mov
sub
scas
dec
int
and
bound
cvtdq2ps
imul
fldl
xor
es
movsb
mov
outsb
pop
xlat
add
lahf
lock
or
aaa
mov
push
outsl
sub
bnd
idiv
xchg
ss
popf
cmp
xor
add
mov
pop
sbb
sub
push
dec
cmpsl
xor
iret
mov
sbb
inc
push
lret
jnp
jmp
add
repz
cmpsl
sbb
mov
stc
call
jmp
imul
push
dec
push
pop
mov
ss
and
push
jne
loopne
inc
jmp
adc
repz
mov
mov
gs
pop
cmp
add
lcall
outsb
in
sub
pop
jae
push
mov
mov
loopne
sarl
sub
cs
adc
or
jmp
sahf
pop
pop
pop
ljmp
ja
cmpsl
xor
rclb
imull
or
mov
pop
xchg
jo
cli
xorl
jl
xchg
cmp
pop
adc
pop
aam
push
and
jns
push
andb
jecxz
inc
push
adc
insl
jns
popa
aaa
mov
loope
mov
lods
inc
pop
jmp
addb
lock
pop
pop
inc
enter
and
fiaddl
mov
test
dec
call
addl
mov
jle
push
xchg
adc
mov
aam
loop
shrb
push
or
shrl
addl
mov
bound
inc
and
fdiv
jbe
clc
arpl
or
outsl
pop
popf
repnz
ret
fistl
shll
pop
scas
out
xchg
imul
push
xor
movsb
mulb
add
cli
dec
sahf
gs
mov
sub
lods
rorb
mov
push
or
mov
sbb
and
int3
cld
std
fwait
mov
ror
jnp
dec
adc
or
mov
pop
push
ljmp
mov
pop
out
test
dec
movsb
mov
sbb
adcl
push
testb
xor
int3
fs
xchg
dec
mov
sub
push
push
or
lret
cmpsl
xor
dec
int3
nop
fsubs
stos
pop
mov
xchg
cmp
imul
fldl
jp
and
push
cmp
jb,pn
cld
inc
mov
pop
in
push
cmp
imul
ja
or
jne
push
xor
xchg
push
movb
add
push
lods
jnp
out
mov
leave
mov
mov
inc
inc
mov
fs
mov
ljmp
mov
dec
lods
sbb
dec
jbe
cmp
scas
xchg
sbb
insl
dec
inc
test
push
aad
insb
pop
cltd
pop
sbbb
jns
incl
int3
pop
pop
add
jo
push
add
mov
xor
fcomps
sbb
push
lock
es
sub
or
cmpsl
and
push
pop
movsb
fst
dec
mov
arpl
stos
push
push
je
fisubrs
cs
adc
scas
sarl
lods
repz
lcall
ja
daa
xor
pop
mov
xchg
add
mov
jecxz
cli
push
dec
popa
pop
add
dec
hlt
dec
or
sbb
sub
add
pop
sbbl
lds
mov
rcrl
stc
loopne
sub
clc
or
dec
xor
test
push
jge
sub
stos
add
pop
mov
jg
inc
push
cli
fsts
pop
outsl
sbb
lret
sub
addl
test
adc
or
shlb
pusha
mov
hlt
push
mov
jae
fldt
jae
shrb
jp
fimuls
pushf
jp
cs
push
push
xorl
pusha
pop
ss
out
cwtl
jle
sahf
mov
clc
mov
imul
pop
pushf
fstl
out
xchg
jno
loope
xor
or
loop
add
xor
insb
cli
inc
add
nop
test
mov
push
and
ret
lds
icebp
rorb
mov
test
imul
mov
or
out
int
inc
add
rorl
test
pushf
cltd
cmc
cmp
dec
jp
iret
out
push
xchg
add
xlat
or
mov
pop
movsl
or
aas
lret
ret
and
daa
ds
add
push
xor
push
aad
movsl
enter
dec
mov
pushf
mov
stos
pop
mov
jno
arpl
sahf
adc
xchg
pushf
dec
shl
or
out
cmp
adc
jmp
jle
or
insl
jnp
cmp
stc
aas
cld
mov
inc
lcall
jne
cmp
pslld
mov
enter
pusha
cli
pop
insw
pusha
sub
lods
or
scas
add
cltd
push
jge
cmp
sti
sub
int
test
jp
aam
inc
sti
aas
xor
lret
stc
lret
jno
iret
test
mov
mov
inc
out
push
sbb
jp
stos
loope
fcomps
test
aad
inc
cmc
xchg
fidivrl
popf
aaa
xchg
inc
cmpsb
test
or
push
mov
aas
stc
mov
ljmp
mov
add
xchg
pop
inc
mov
rolb
cmp
shll
xor
jmp
cmc
mov
rcrb
stc
out
sbb
stos
jp
mov
push
fcoml
jmp
movsb
sbb
mov
mov
pop
xchg
loopne
dec
sbb
popa
push
icebp
sub
rorb
mov
jmp
pop
ljmp
les
push
bnd
add
outsl
sbb
push
test
pop
lret
jne
test
push
nop
stos
inc
je
or
ds
ds
sbb
hlt
call
ss
cmp
and
nop
sahf
cltd
enter
imul
mov
xor
jnp
lds
in
mov
stos
iret
mov
and
and
and
or
push
ret
js
jg
pop
sbb
adc
pop
fildl
fists
jae
jb
jo
pop
xchg
mov
adc
add
inc
das
icebp
inc
test
push
mov
mov
push
sbb
xchg
lods
sub
or
subl
dec
sbbl
dec
call
push
xchg
xchg
sbb
mov
cmp
xor
cmp
outsl
xor
mov
test
movsb
outsl
and
ret
and
xor
fnstsw
jo
scas
or
pop
pop
out
mov
push
imulb
aas
jg
sbb
add
dec
sbb
add
insl
test
push
popf
and
test
xlat
adcl
outsb
xor
push
sbb
jl
cmc
test
mov
test
sbb
in
cmp
push
sbb
dec
mov
dec
repnz
xchg
fscale
mov
and
int3
stos
lcall
xchg
fistpll
pop
xchg
wrmsr
shrl
loope
shl
pop
mov
stc
dec
adcb
std
or
repz
in
mov
pop
mov
jle
sbb
or
loop
dec
xchg
cmp
inc
adc
repz
push
inc
lret
pop
loope,pt
fisubl
and
icebp
dec
lret
mov
test
insl
jo
xor
jle
popf
lcall
pop
sub
or
shl
ds
adc
xor
cmp
out
adc
lock
push
add
inc
in
add
add
repnz
shlb
dec
adc
mov
push
outsl
adc
jbe
aaa
and
pop
or
add
xchg
sub
mov
cwtl
xchg
inc
sbb
je
mov
dec
sub
cltd
add
xchg
push
out
inc
icebp
cmp
int
inc
fistpll
dec
mov
movsl
mov
adc
sti
out
lahf
js
scas
xchg
repnz
lret
aad
movsb
out
sbb
cmpsl
into
mov
stc
into
mov
jle
inc
jmp
mov
sub
jo
push
sti
sbb
and
jnp
and
daa
add
test
inc
mov
ds
je
mov
sub
popa
push
inc
jns
add
adc
loope
mov
pushf
jmp
fs
rcrb
fmuls
pop
sbb
push
rcr
xchg
inc
repz
movsl
cwtl
mov
lods
jno
pop
mov
adc
cwtl
lret
adc
mov
scas
push
push
popf
pop
inc
aad
ret
push
shll
cmp
jle
mov
or
jg
sub
dec
shll
xchg
lock
mov
add
mov
pop
repz
xor
data16
jo
adc
push
lahf
xor
cmp
mov
je
enter
mov
das
lahf
sbb
rcr
cmp
sbb
divl
inc
arpl
loopne
sahf
mov
cmp
arpl
imul
fcmovb
jno
js
sub
cltd
mov
pop
and
or
adcl
popa
push
mov
xchg
lock
scas
or
add
mov
lods
mov
jp
mov
add
push
push
ret
cmpb
mov
shlb
jne
into
jno
cmp
dec
pop
in
insb
arpl
mov
mov
fadd
sub
popf
inc
add
ret
insb
cmp
aad
das
mov
popa
lret
sub
ss
lret
xchg
pop
fisttpll
xor
gs
rorb
popf
dec
pop
out
cmp
out
jno
dec
aam
fwait
popa
cmp
mov
cmp
inc
js
and
clc
jl
cltd
dec
jo
in
add
dec
pop
adc
pop
cmp
adc
in
aam
push
xor
adc
xchg
mov
gs
mov
push
rcll
mov
test
mov
and
and
inc
mov
adc
in
jae
or
pop
rolb
mov
pusha
and
cli
lock
gs
xlat
xlat
std
cmp
jo
mov
dec
adc
adc
lds
aas
cmpsl
lret
cmpsl
int
mov
mov
dec
sub
push
mov
mov
sbb
lea
out
lods
mov
adcb
mov
rorb
stc
or
test
icebp
stos
outsb
mov
in
outsb
push
adc
outsl
mov
jecxz
pop
jp
popl
dec
inc
xchg
mov
inc
mov
push
ja
arpl
das
aas
pop
arpl
and
test
clc
cmp
movsb
jge
inc
and
je
mov
andb
das
xchg
inc
decl
lea
fxch
xchg
mov
add
popa
sub
ret
inc
mov
pop
adc
xchg
ret
jns
shll
jae
or
imul
push
std
inc
ret
loope
out
outsl
xor
xchg
nop
push
mov
inc
pop
mov
pushf
into
andl
jmp
mov
mov
sbb
and
mov
ret
shlb
mov
xchg
icebp
pop
and
mov
xchg
add
mov
dec
push
scas
cli
sbb
int3
movsl
jo
adc
scas
ds
xor
inc
pop
and
dec
jmp
clc
sahf
inc
ja
adc
movl
data16
cmp
add
je
dec
pushf
mov
or
cmc
pushl
dec
dec
jb
aam
jge
lods
jae
ljmp
mov
fstpt
xor
rolb
pop
mov
stos
push
sub
sahf
cmp
icebp
fcmovbe
pop
ret
test
leave
jl
scas
xlat
push
jmp
inc
adc
arpl
cwtl
adc
push
loop
jp
negb
pop
sahf
les
sbb
xchg
mov
iret
mov
insl
ret
push
xor
or
xor
aam
push
out
icebp
andl
insl
add
mov
cmp
and
jbe
dec
lret
adc
ds
pop
or
mov
pop
cs
add
or
ds
iret
aad
add
mov
addr16
in
lcall
mov
and
pop
mov
lret
test
sub
das
jle
jg
rcll
mov
das
fists
pop
xchg
and
into
xor
sub
mov
inc
stos
adc
ja
mov
aam
pop
and
dec
cli
rcrb
cmp
mov
inc
das
xchg
or
xchg
mov
and
pop
push
adc
inc
xor
dec
push
cmp
sbb
imul
push
push
or
sbbl
sti
mov
inc
and
xchg
jns
jp
daa
push
fwait
xchg
or
out
aam
push
xchg
sub
jae
loopne
jo
xor
push
mov
fldl
pop
out
xchg
sbb
push
outsb
pop
pop
and
scas
sub
mov
ficomps
mov
rol
popa
int
add
add
add
pushf
add
add
add
add
or
add
add
add
add
mov
add
inc
add
sub
add
add
add
add
pop
add
add
add
and
add
add
xor
add
add
add
add
add
stos
stos
jl
ja
mov
incl
fildl
inc
add
add
add
jb
and
pop
and
loopne
add
add
add
adc
add
add
add
xchg
add
add
add
add
add
mov
lcall
push
or
xor
and
jb
push
jb
push
jb
outsb
inc
dec
inc
add
gs
stc
fidivrl
roll
lcall
jmp
fcom
or
incl
in
add
ret
xorb
adc
push
mov
cld
push
call
or
push
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
jnp
in
in
out
call
xor
rolb
add
incb
decl
add
call
or
cld
xor
cld
and
adcl
inc
lock
adc
lcall
sar
dec
mov
scas
xor
push
mov
hlt
push
push
add
push
push
and
je
add
add
add
aad
movb
out
add
cmp
cmp
out
xor
add
push
jb
je
js
outsl
movsl
outsb
insl
je
add
inc
shlb
gs
inc
outsb
outsl
imul
push
jae
insb
imul
push
xor
push
jne
push
lret
xor
outsl
punpckhwd
jae
jae
loopne
insb
push
insb
adc
add
roll
add
add
arpl
add
add
add
add
add
add
out
iret
addr16
cmpsl
clc
sub
xor
fimull
jnp
add
scas
insb
cwtl
mov
int
or
rcrl
cmp
or
fwait
pop
mov
lods
cltd
cli
icebp
push
loop
mov
sbb
dec
stos
stos
insl
push
je
in
popa
adc
jge
cmpsl
adc
in
push
movsb
shll
pop
into
jnp
mov
imulb
push
xor
adc
dec
cmp
ret
std
in
jae
xor
jmp
xor
addr16
push
rclb
sbbb
cmp
jne
decb
lret
inc
xchg
loopne
out
movsl
mov
push
push
popf
add
push
mov
pusha
inc
pop
cs
xor
pmulhuw
into
mov
mov
mov
in
pop
xchg
or
push
inc
push
aaa
or
jge
jbe
or
data16
popl
and
add
mov
jg
out
adc
jbe,pt
adc
add
pop
popf
sbb
movsl
inc
icebp
mov
jne
or
sbb
sub
mov
aaa
popa
es
repz
fidivs
and
cltd
mov
mov
sub
nop
scas
lret
aaa
rcl
in
inc
rcrl
pop
xchg
push
inc
mov
xorl
imul
push
xchg
iret
cmp
aas
xchg
and
lcall
ret
jno
cwtl
push
xchg
sbb
popf
and
ret
pushf
je
xchg
lcall
dec
aam
mov
test
sub
jge
push
aas
rcll
dec
cmp
adc
testl
fists
jle
jo
pop
repnz
mov
xchg
xchg
insb
sti
dec
outsb
sbb
sub
dec
inc
or
add
data16
ja
adc
cmpsb
inc
clc
pop
movsl
jae
imul
sub
xor
je
out
mov
in
xchg
xor
sar
rcll
inc
mov
addr16
push
xor
jb
fs
push
push
movsb
xchg
shll
hlt
add
push
bound
out
or
xor
mov
mov
mov
xchg
lcall
push
hlt
insl
fld
js
push
jne
mov
cmp
shrl
in
test
out
test
inc
lods
mov
sub
enter
mov
inc
cmpxchg
cwtl
inc
ss
jge
jb
lcall
pop
pop
fisubl
lods
push
push
in
cltd
cmp
add
lock
sti
test
lret
rcl
mov
xorb
lahf
and
xchg
ficoms
dec
jno
push
insb
das
rcr
xor
shrl
sub
jno
inc
xlat
add
dec
pop
cmpsb
push
add
jmp
inc
cmp
fdiv
xor
cmp
pop
push
orl
xchg
xchg
xor
jb
push
addr16
cmpb
gs
mov
jbe
das
jbe
push
lods
fidivs
push
push
ret
cltd
jmp
xchg
xlat
push
pushf
mov
mov
mov
sahf
jne
add
lods
or
mov
in
cmp
dec
stos
and
loopne
int3
sti
sbb
cmp
push
mov
push
repz
xchg
xor
sbb
mov
add
xor
push
dec
mov
lret
ljmp
add
stc
add
cmpsl
into
push
mov
in
sti
rcll
insb
jl
cmp
xchg
stc
add
pusha
mov
xchg
hlt
and
or
adc
push
sbb
jo
pop
je
lods
mov
inc
xchg
outsb
outsb
lea
push
test
jnp
in
loope
fsubrp
mov
xchg
lds
pop
ret
xchg
dec
cs
add
lock
rcrb
popf
jge
xchg
push
jno
inc
imul
mov
pop
push
dec
inc
cs
add
test
icebp
cmp
xchg
lds
mov
adc
cwtl
fcoml
adc
movsl
sbb
add
or
mov
ret
stc
fdivrp
and
movsb
dec
jns
adc
cmp
call
jge
jmp
pop
adc
arpl
lahf
xor
leave
xchg
mov
xor
addr16
icebp
leave
mov
mov
push
aaa
mov
arpl
mov
mov
popf
call
out
clc
jg
cmp
outsb
leave
daa
pop
adc
mov
cmp
mov
std
push
cmp
testl
mov
adc
push
jae
cmp
pop
or
dec
jmp
sarl
push
mov
test
in
scas
jne
inc
out
sub
mov
shll
cmpsb
cmp
push
pusha
bound
jb
mov
mov
fildll
and
incl
dec
dec
imul
mov
add
push
cmp
mov
xchg
mov
rorl
or
jp
inc
jae
das
dec
ss
xor
or
sahf
xchg
out
cli
dec
ss
or
inc
outsl
cmc
into
mov
icebp
inc
cs
mulb
das
mov
adcl
repnz
popa
loop
cltd
jnp
rcrb
popa
inc
mov
pusha
mov
xchg
ret
pop
imull
sub
scas
std
mov
lret
add
push
and
push
loop
jns
mov
xor
mov
xchg
enter
les
mov
fsubrl
xchg
sbb
cmp
mov
lods
jecxz
lcall
push
adcb
xchg
repz
xor
mov
push
mov
mov
push
mov
insb
push
adc
inc
sub
std
js
jae
sbb
sbb
xor
jne
leave
mov
xor
inc
xor
lahf
shrb
jne
xchg
lods
test
cli
and
in
insb
and
cmp
xor
add
mov
jnp
push
push
cmp
cs
popf
xor
sbb
mov
fisttpl
fildl
test
adc
mov
in
cmc
mov
fldenv
ss
xchg
xor
dec
and
pop
lahf
outsl
push
fiadds
push
lock
jge
cmp
cli
leave
aam
sub
mov
in
sarb
out
mov
or
in
pop
lahf
cmp
in
adc
pop
or
sub
rolb
shll
stos
push
dec
das
dec
sahf
pop
imulb
aam
out
jae
ret
iret
ret
pop
je
and
mov
pop
push
cmpsl
push
out
aam
push
ret
rorb
shlb
aad
sbb
mov
leave
lret
clc
lcall
mov
cs
loop
aam
and
mov
jle
movl
cs
push
sub
stc
mov
sbb
es
stc
dec
push
in
das
cmp
xchg
test
movsl
push
cmpsl
call
sbb
mov
inc
mov
jle
dec
aas
pop
lock
inc
negb
loope
push
call
or
adc
cmpsl
mov
std
cmp
mov
inc
and
in
popf
mov
test
mov
xor
aad
mov
and
jbe
stos
jns
pop
inc
adc
push
pushf
jg
cmp
je
add
pop
pop
pop
imul
jl
inc
adc
jle
xor
lcall
stos
out
repz
mov
cmp
inc
testl
xor
add
test
inc
addb
repnz
cmp
cmpsl
pop
adc
push
sub
or
xor
push
loop
scas
or
orb
cmpsb
ja
test
and
loopne
mov
lret
jo
xchg
incb
sbb
cltd
enter
scas
mov
adc
leave
rcrl
decb
int3
dec
sti
add
movb
rcrb
cltd
adc
mov
xchg
sub
in
or
jle
repz
adc
or
sub
mov
mov
imul
sbb
mov
lret
inc
out
inc
pop
test
test
mov
daa
add
mov
stos
rcrb
xor
or
mov
mov
jb
pop
push
inc
or
push
jl
cltd
add
gs
dec
sbb
and
mov
sub
mov
daa
aaa
push
loopne
rolb
std
icebp
loopne
jp,pn
sub
je
std
push
or
mov
cs
add
and
dec
cmpsl
das
jle
inc
popf
shl
or
inc
ret
ret
xor
inc
add
mov
cwtl
outsb
xor
aad
and
lods
jb
popa
push
test
xor
aam
cmp
jae
cmp
loop
mov
sbb
and
and
das
xor
pop
scas
push
dec
mov
xchg
xchg
cmpsb
and
lods
pop
inc
push
testb
sbb
mov
cli
mov
xor
mov
decl
dec
and
xor
pop
xor
cwtl
ror
mov
not
in
push
data16
pop
adc
push
xor
test
rcrb
adc
icebp
push
mov
cmp
pop
es
imul
std
dec
and
movsb
adc
jo
and
packsswb
jnp
push
cwtl
sbb
inc
mov
dec
sbb
cmp
inc
add
xchg
subl
pop
jb
ljmp
cmp
pop
push
push
sub
push
sbb
out
imul
mov
xor
daa
push
cmp
fdivs
pusha
pushf
cmp
into
ljmp
std
imul
rcr
gs
cmp
nop
ret
xchg
bound
fistps
mov
xchg
outsl
std
shll
outsb
adc
out
push
sub
in
out
shl
in
mov
pabsb
sub
andb
leave
jne
std
jge
adc
icebp
movsl
nop
xor
aaa
xchg
out
lods
pop
scas
addl
repnz
aad
add
cmpsb
outsb
dec
fdiv
cmp
jbe
pop
jb
adc
or
daa
les
sarb
mov
daa
aad
inc
test
in
xchg
fisubrl
shll
dec
imul
adc
ret
insb
add
xor
sbb
rcl
gs
push
cmp
fnstsw
nop
dec
sub
cmp
mov
push
mov
shll
mov
call
lret
shrb
pop
stos
mov
push
lahf
push
xor
lahf
dec
adc
lret
pop
adc
jl
fistl
xchg
adc
mov
addr16
jb
aam
sub
testl
pop
stos
dec
insb
cmpb
repz
xchg
xor
int3
xlat
xchg
pop
xor
pop
mov
not
or
and
arpl
mov
mov
sub
in
rorl
add
cltd
leave
sub
cmp
imul
adc
xor
es
lahf
cltd
sbb
adc
dec
out
pop
jne
out
or
outsb
dec
lret
adc
and
outsl
sbb
push
mov
icebp
adc
add
fsubl
cmp
and
jbe
imul
int
jp
mov
iret
or
jnp
cmp
loopne
sub
mov
ds
sti
dec
cmp
int3
sbb
movsb
push
mov
xor
jmp
sbb
dec
insb
clc
jmp
leave
dec
test
nop
sahf
dec
pop
cltd
aaa
mov
test
jo
push
test
imull
jb
mov
cltd
mov
sub
push
cmp
pop
mov
leave
in
test
insb
jecxz
xor
sahf
hlt
pusha
and
je
mov
lock
jp
mov
jp
inc
push
inc
mov
das
icebp
xchg
aad
loope
inc
and
mov
dec
test
sbb
mov
and
cltd
inc
std
pushf
jne
mov
clc
lcall
cmp
lahf
and
loopne
rcrl
or
pop
push
pushf
inc
shrl
js
dec
mov
repz
outsl
repnz
mov
lar
mov
stos
pusha
fucomip
das
sub
lods
jbe
xor
sbb
aam
lahf
mov
les
push
scas
lret
pop
or
int
add
push
in
sub
and
lret
push
popf
js
jae
lods
add
adc
xchg
push
lds
iret
frstor
mov
jle
ljmp
enter
xchg
pushw
pop
mov
push
push
pop
aaa
mov
cmp
les
into
mov
inc
dec
jbe
lret
mov
jp
lock
sub
mov
dec
fs
call
or
mov
pop
mov
push
cli
lret
sti
data16
mov
mov
xchg
and
mov
ljmp
mov
lock
leave
cltd
mov
rcr
inc
mov
addr16
cmpb
daa
jle
pop
xlat
mov
andl
xor
mov
push
adc
outsb
jl
pop
ja
test
ja
xor
sar
cli
sub
loopne
cs
mov
in
lds
inc
pop
push
dec
push
pop
movsb
je
out
cs
arpl
out
push
push
andl
shll
or
test
les
movsl
inc
push
addr16
ljmp
lods
mov
mov
out
movsb
cmp
jnp
in
push
andb
movsb
xchg
and
sbb
lods
out
cmc
pop
xor
adc
and
ret
clc
shlb
cmpb
dec
push
pop
scas
ja
mov
ja
loopne
enter
push
cmp
jb
pop
test
sub
pusha
fs
mov
cmp
jae
xchg
ljmp
push
xchg
lds
stos
jo
mov
ss
leave
pop
jo
jge
movntps
lds
sub
cmp
bound
push
or
lahf
mov
lods
and
dec
jo
cmp
jge
and
test
dec
cmp
xchg
jno
and
into
lret
ret
pop
lcall
imul
fdivp
sub
les
add
fdivr
mov
fcomps
inc
pop
mov
push
mov
ret
pop
loope
sbbl
xchg
mov
xor
sahf
push
mov
and
mov
aas
inc
scas
dec
xchg
sub
fdivs
jecxz
cmp
sub
mov
dec
and
mov
xor
fmull
mov
mov
pop
outsl
xor
insb
cmp
out
daa
repz
push
xorb
xchg
sahf
les
pusha
ret
gs
insb
ja
cmp
add
pusha
mov
jb
repz
aam
iret
repnz
repz
mov
xor
iret
inc
push
sbb
push
or
sti
leave
xchg
inc
jnp
inc
loop
xchg
int
sub
xor
data16
into
arpl
mov
or
or
outsl
std
inc
test
lret
pop
outsb
and
sbb
push
je
push
movsl
sbb
stos
pop
jmp
adc
test
dec
mov
xor
pop
cwtl
mov
inc
mov
jae
dec
mov
inc
jns
rcrl
dec
push
repnz
xchg
andb
push
cmpb
sahf
mov
mov
xor
or
jb
in
mov
mov
loopne
lods
mov
out
pop
inc
lea
outsl
xchg
jecxz
cmp
and
adc
jl
out
repz
insl
mov
xchg
add
sub
push
vpsraw
addr16
cmpsb
jbe
je
fs
jg
pop
lahf
fbstp
xor
jp
out
imul
roll
mov
mov
insl
mov
fsubs
mov
pop
mov
mov
fdivrp
sbb
leave
imul
adc
add
add
ss
into
push
pusha
add
jnp
jle
lock
dec
and
push
js
sub
pop
sbb
xor
sarl
inc
pusha
sbb
mov
dec
data16
lahf
bound
es
sub
pushf
mov
arpl
adc
jb
js
pop
clc
xchg
imul
sbb
push
sahf
or
add
stos
push
repnz
adc
int
lret
inc
das
aaa
inc
rcll
inc
cmp
add
jae
cmp
and
xor
orb
push
repz
cmpsb
imul
add
and
lret
cmp
inc
jnp
add
gs
mov
aas
lea
outsl
adc
cs
lret
aas
mov
xchg
xchg
cwtl
ja
or
leave
inc
ss
cld
aad
fninit
popf
jne
enter
stos
je
push
mov
xor
ret
cmp
mov
nop
cs
jle
ret
out
outsb
or
out
cmp
notb
arpl
sbb
or
aaa
mov
sbbb
pop
jns
fcmovnb
addr16
into
fdivs
repnz
jo
mov
adc
ss
push
sti
sti
push
sub
idivb
pusha
popa
xor
cmc
or
dec
adc
xchg
sbb
or
jo
scas
xor
cmp
cmpsl
verw
in
mov
push
xor
dec
sbb
pop
xor
cli
outsb
mov
into
xchg
jnp
ficoms
les
push
push
and
inc
dec
adc
adc
mov
fmulp
gs
lahf
fwait
sbb
lcall
mov
movsl
push
mov
mov
aas
lea
shlb
sti
pop
pop
jp
push
cmp
mov
ds
push
mov
lock
cmp
and
jne
dec
daa
movb
jl
jbe
loop
sub
daa
mov
xchg
enter
ret
push
cwtl
out
lods
pusha
sub
leave
inc
adc
into
cmp
les
lock
mov
and
js
lods
test
fistpll
mov
push
daa
mov
cmpsl
inc
pop
pop
inc
lahf
mov
and
imul
adc
xor
cwtl
lea
scas
inc
adc
mov
into
and
sbb
jmp
sub
jecxz
aam
dec
xor
jmp
pop
cld
jmp
mov
and
sub
ds
mov
leave
fs
les
jns
adc
aas
jmp
test
imul
jge
xchg
push
ljmp
stos
cld
inc
mov
pop
lods
stos
pavgb
or
es
test
rcll
repz
scas
std
push
cwtl
lcall
adc
jae
imul
arpl
dec
adc
or
cmc
add
loopne
shl
divw
daa
cmp
leave
notl
jmp
inc
imul
dec
push
mov
sbb
movsb
and
sbb
mov
inc
pusha
js
lahf
sbb
gs
xorps
or
cmp
mov
cmp
insb
mov
movsl
in
les
call
ljmp
test
inc
inc
imul
xor
jmp
mov
pop
and
xor
ja
sti
ret
ljmp
lock
mov
test
add
sub
pop
divl
lds
cwtl
psubb
mov
sub
jecxz
movsl
jecxz
push
adc
cld
fdivs
dec
or
out
lahf
ror
lock
les
xor
dec
xor
jmp
dec
mov
jno
and
mov
test
xor
mov
movsl
daa
xor
push
push
mov
xor
dec
stos
push
cmp
dec
mov
ljmp
mov
cmpsl
xor
negb
mov
je
or
lahf
bound
push
lcall
movsl
push
inc
out
add
lods
imul
fwait
or
push
push
dec
mull
or
jge
sarl
fs
call
repz
jl
pop
sbb
lock
mov
shlb
jecxz
loop
les
dec
dec
or
xor
sub
jge
and
push
movsb
mov
iret
adc
imulb
dec
in
data16
pop
adc
jg
jne
cltd
dec
sub
xchg
fsubrs
fisttpl
call
pop
and
insb
ja
test
clc
call
int
push
cmpsl
pop
aas
aas
std
lea
jb
out
aaa
adc
pop
sub
jne
push
sarb
mov
push
cmp
pop
int3
pop
ficoms
mov
pop
movsl
rep
ret
sub
idivb
cmpsb
outsl
pop
stos
jmp
call
adc
daa
dec
add
popa
cwtl
cmp
mov
mov
xchg
bound
xor
leave
or
jne
xchg
iret
inc
hlt
push
in
and
mov
mov
fdivrs
sub
push
inc
in
movsl
stc
cmp
imul
fwait
js
mov
adc
cmp
faddl
addr16
adc
xor
cs
add
pop
xlat
pop
arpl
jns
mov
jnp
and
out
out
push
mov
out
cltd
push
or
test
shrl
xchg
in
pop
inc
add
divl
mov
call
je
jnp
dec
xchg
sbb
push
outsl
and
cltd
add
push
lods
mov
mov
imul
stos
push
in
rolb
daa
test
iret
jo
mov
add
add
add
push
add
add
scas
jecxz
add
add
jae
add
add
add
add
add
push
pusha
out
add
add
imul
rolb
add
data16
add
or
in
in
in
in
inc
add
add
ljmp
ja
mov
js
js
incl
add
sti
add
jne
or
add
add
imul
add
add
add
add
and
add
fwait
add
add
and
outsl
add
add
add
xchg
add
add
add
push
add
add
and
pop
gs
push
jae
inc
je
sub
outsb
add
push
getsec
xor
enter
or
pop
inc
cld
mov
in
mov
pop
std
mov
cld
inc
lods
inc
mov
adc
adc
add
push
add
lret
add
push
push
sarb
lret
mov
lea
add
shlb
adc
mov
pop
sti
add
lock
cld
push
add
clc
rorl
call
mov
inc
cld
or
adc
push
gs
adc
cmp
clc
mov
sub
xor
adc
inc
add
lock
in
push
inc
add
test
add
lock
or
add
add
fiaddl
xorb
add
add
clc
add
add
push
inc
add
inc
cs
outsl
outsl
outsl
imul
xchg
jg
inc
jo
jbe
je
arpl
and
inc
aad
insb
jb
addr16
jge
add
push
gs
imul
inc
inc
push
arpl
add
add
add
pop
add
aad
add
add
add
add
inc
add
add
add
jnp
add
mov
inc
outsb
ljmp
lcall
ja
jmp
mov
ss
xlat
lea
mov
push
shl
mov
sti
add
sbb
xchg
loopne
add
or
fsubrs
inc
divb
arpl
sti
push
xchg
dec
pshufw
fbld
in
cmp
mov
jmp
inc
push
les
fisttpll
ds
inc
xchg
fadd
add
hlt
push
js
cld
fsubrl
jnp
jl
fwait
popa
rclb
int
clc
aad
scas
mov
xor
inc
cmpsl
cmp
int3
lods
adc
or
jbe
out
aas
sub
clc
pop
inc
lahf
pop
jb
xchg
adc
lea
pop
shl
and
fistl
ds
or
ret
xor
mov
cmp
cmp
add
sub
stos
frstor
mov
push
lahf
pop
int3
mov
pop
jae
adc
hlt
das
in
xchg
xor
jnp
test
aaa
adc
inc
ljmp
gs
insl
movsb
mov
push
pop
cwtl
xor
push
mov
loopne,pn
xlat
je
add
dec
inc
enter
sbbb
lret
mov
push
mov
add
adc
mul
lret
fs
xchg
sub
mov
arpl
gs
xchg
dec
pop
dec
lret
mov
mov
cmp
mov
rclb
xchg
adc
add
lods
mov
xchg
pop
icebp
xlat
fld
or
mov
insb
fiadds
es
push
pop
adc
xor
jmp
testl
js
shl
addr16
inc
or
paddd
cmpsb
out
or
daa
arpl
xor
sahf
push
scas
jl
adc
lea
fnstsw
lock
dec
int
xchg
xchg
pop
push
and
into
imull
and
sub
mov
sub
sbb
pop
bswap
fistpl
mov
inc
lds
mov
adc
addl
push
cmp
mov
sbb
dec
movsb
add
jle
pop
movsb
and
push
mov
add
sahf
and
xlat
fnop
mov
out
lds
xchg
mov
sbb
fldt
jnp
inc
int3
pop
cli
jb
cmc
cmp
or
call
dec
enter
dec
xchg
dec
aam
cmpsb
xchg
hlt
mov
push
out
sub
push
xlat
cltd
and
dec
jle
inc
mov
push
inc
test
cli
jbe
idiv
jns
aas
mov
loop
lcall
sbb
mov
add
xor
fcmovnu
test
push
sarb
lods
repz
nop
call
mov
mov
inc
lds
jmp
adc
mov
pop
ljmp
arpl
mov
orb
adc
scas
or
call
clc
mov
gs
sbb
jb
insb
andl
sub
icebp
add
pop
cmp
jbe
insl
nop
adc
cmp
xor
es
add
xor
xchg
idivl
dec
pop
cmp
out
xchg
dec
mov
cmp
and
pop
push
push
rol
sbb
xchg
fldl
scas
inc
repnz
xchg
ret
cmc
insb
inc
xchg
jns
in
pop
movsl
ret
aaa
lods
xor
add
enter
xchg
nop
call
jbe
pop
hlt
int3
repz
pop
sarl
add
cltd
cmpsb
roll
je
mov
scas
dec
sub
imul
in
mov
add
sub
xchg
mov
push
ds
pusha
sub
mov
dec
sahf
push
std
fucom
mov
sbb
xor
fistl
leave
xchg
and
test
arpl
es
popa
aas
jb
lea
sub
xor
sbb
jbe
jg
aas
mov
aam
test
sbbb
mov
lahf
inc
fidivrl
dec
in
movsb
fldl
sarl
cmpsl
shll
jae
rclb
enter
in
xorb
subl
jno
dec
push
push
push
and
add
jns
imul
adc
push
jecxz
mov
in
loopne
arpl
shll
jb
fwait
cmp
cmp
repz
movsl
fidivl
js
dec
cwtl
ret
ret
xorb
mov
add
mov
sahf
and
dec
cmp
push
sbb
cmpsl
xchg
pop
fdivl
push
cmc
aas
test
jge
sarl
ror
cmp
mov
dec
mov
mov
fcmovbe
fidivl
xor
mov
and
mov
add
inc
cmp
dec
test
bound
cmpsb
pop
imul
or
pop
aad
jne
iret
push
and
pop
push
sarb
cmp
xorb
loopne
add
mov
add
dec
cmc
jo
mov
push
jmp
and
and
mov
xchg
jecxz
arpl
in
loopne
sub
adc
leave
dec
push
hlt
xor
jbe
mov
jae
sub
pop
jmp
ljmp
mov
pop
add
sub
movl
dec
lock
push
inc
pop
xchg
sbb
xlat
mov
mov
jae
lret
sub
lcall
sbb
fsts
xchg
push
xor
addr16
insl
and
jp
repnz
bound
push
and
movsl
cmp
stc
js
mov
adc
xor
jmp
and
nop
jns
xor
xchg
pushf
pop
sbb
mov
sti
imul
fcoml
cmpps
push
dec
mov
out
lret
sbb
out
sarl
sbb
jle
ret
dec
jmp
push
cmc
jp
bound
outsb
cli
aad
cmp
aam
mov
lock
add
cmpb
iret
ret
jecxz
sti
faddl
adc
loop
arpl
jp
sbb
jnp
icebp
repz
mov
jns
imul
xor
jbe
lea
pop
mov
movsl
push
ja
stc
ret
cmp
add
adc
adc
fadd
cmp
jmp
push
mov
xchg
inc
add
jo
loopne
or
pcmpgtb
addr16
lods
loope
push
sub
xchg
scas
popa
adc
int3
adc
and
in
pop
loopne
push
in
das
cmp
repnz
std
push
loop
int3
sub
bt
enter
test
fsubr
jne
lock
cmp
pop
add
shll
inc
cmp
inc
jno
sbb
inc
lock
ss
mov
jecxz
adc
popa
es
pop
inc
sub
xlat
bound
or
outsl
les
add
pushl
outsb
int
das
popa
jg
mov
repz
lcall
push
andl
cmp
xor
fsubp
jb
out
or
test
js
mov
adc
fincstp
adc
jp
push
push
addr16
and
std
mov
dec
sbb
imul
lret
xchg
cmc
loop
shlb
movsl
int
lock
adcl
adcb
mov
xchg
jo
pop
repz
imul
mov
sub
jge,pt
aam
shll
mov
int3
cmp
jbe
pusha
outsl
mov
jp
cmp
lods
adc
jle
mov
inc
jle
dec
mov
add
nop
mov
pop
jno
in
jge
cmp
inc
adc
or
sbb
cmc
lret
jne
adc
jo
call
mov
ljmp
loop
sbb
or
mov
add
xor
inc
das
pop
into
pop
mov
scas
subb
dec
adc
nop
pop
inc
sahf
imul
fwait
mov
arpl
mov
addr16
icebp
call
jle
push
ds
rcll
jae
mov
lcall
pusha
aam
push
fdivl
faddp
pop
ljmp
cltd
scas
dec
sahf
sbb
test
scas
xchg
xchg
inc
aam
inc
fimull
push
insl
outsl
pop
filds
push
addb
lods
sub
and
mov
cld
pop
mov
cld
out
repz
lods
lcall
repz
jmp
jecxz
push
aas
daa
adc
addps
cmpsl
jno
cmp
es
aas
sbbb
popa
neg
push
add
out
pop
lock
popf
das
stc
pop
jno
pop
test
lret
push
xor
mov
inc
pop
ja
popa
inc
fwait
outsl
sbb
bndstx
lea
decl
scas
int3
mov
in
xchg
cs
fs
pop
cmp
sarl
inc
out
out
mov
jae
iret
jbe
gs
sub
jne
lahf
xchg
jmp
movsb
js
push
mov
mov
push
add
xchg
loope
cmp
cwtl
inc
sti
sbbl
enter
loope
lret
jge
lret
push
xchg
cmp
jl
and
dec
mov
mov
cmp
cs
int
hlt
ljmp
mov
xchg
in
cmp
in
fbld
cli
and
dec
xchg
mov
es
sbb
xchg
and
outsl
mov
mov
stc
push
push
inc
jb
ss
add
out
enter
inc
pusha
jp
inc
call
sbb
je
xlat
xchg
pop
loop
pushf
pushf
jae
cmc
xchg
data16
add
gs
adc
ljmp
inc
addr16
pop
add
xlat
ss
mov
stos
loopne
inc
mov
jno
xor
adc
and
sahf
jne
movsl
inc
nop
or
sahf
sqrtps
dec
popa
pop
mov
jmp
js
cmp
sbb
sbb
xor
mov
inc
lea
fisttpll
test
add
out
in
sub
popa
mov
ljmp
mov
xchg
loop
aam
inc
aaa
je
icebp
imul
stc
push
lods
xchg
in
push
push
sbb
pop
sub
imull
data16
mov
inc
mov
call
or
cmpl
jae
iret
fld
xchg
dec
loopne
icebp
lahf
rol
rcrl
shrb
loop
mov
subl
call
add
mov
aaa
clc
jb
adc
out
arpl
testb
xchg
out
mov
pop
xor
jbe
adc
mov
les
and
arpl
xor
adc
push
inc
mov
loope
data16
stos
jle
ret
enter
in
ret
out
movsl
pop
cmc
mov
inc
sub
xchg
and
in
ss
mov
test
imul
mov
pop
nop
in
dec
ret
mov
in
jge
inc
sub
push
and
aad
xor
inc
outsl
inc
xchg
inc
mov
repnz
testb
or
jp
iret
and
sarb
xchg
pop
push
or
push
dec
ss
sahf
sub
shll
ja
xor
in
jnp
shrb
dec
out
imul
loop
lahf
mov
sub
adc
das
cwtl
xor
jnp
sbb
into
mov
push
xchg
fisubrl
adc
inc
fists
and
fcomp
jg
js
mov
ret
adc
sbb
cmc
ja
lds
mov
sub
nop
sbb
mov
test
mov
fisubrs
js
pop
fdiv
push
cld
mov
dec
js
mov
mov
loop
sbb
pop
pop
lret
cmp
jbe
mov
or
push
imul
into
aas
mov
xchg
xchg
arpl
movsb
inc
add
lds
dec
xchg
inc
sbb
push
aam
out
ret
negb
push
sbb
or
add
push
jg
push
int3
xchg
mov
mov
lahf
inc
daa
or
adc
divl
pop
outsl
popa
mov
sub
inc
pop
jle
mov
mov
sub
jnp
jne
fldl
sub
jb
mov
mov
jns
sahf
sarb
test
daa
jmp
xor
mov
xchg
adc
movsb
gs
movsl
or
push
or
push
jle
push
cwtl
loope
xchg
stos
fstpl
das
imul
sbb
test
repz
into
or
sub
shll
test
sub
outsb
fxtract
and
jge
xchg
movsl
push
jns
jl
jne
in
ja
and
lods
push
xchg
xchg
cwtl
add
push
ficoms
into
js
enter
jbe
mov
dec
gs
xor
scas
notl
dec
pop
mov
mov
push
jo
adc
adc
mov
mov
pop
clc
pop
jmp
out
sub
and
mov
lods
jp
xchg
roll
inc
shlb
xchg
and
cmpsb
es
scas
aaa
push
es
xor
divl
jbe
mov
jae
aaa
and
xchg
js
int
jno
sbb
pop
inc
iret
add
adc
inc
cli
sub
lds
fwait
mov
popa
pop
pushf
loopne
insb
add
sub
sarl
lods
int
mov
push
hlt
add
call
int3
dec
or
sbb
sbb
pop
ja
outsl
enter
mov
in
inc
jl
scas
cmpsb
xchg
push
pop
mov
mov
pop
pop
add
push
add
leave
xchg
outsb
sub
hlt
test
es
adcl
push
dec
mov
xchg
hlt
aam
push
das
cld
inc
sbb
pop
movl
rorb
aas
mov
scas
int
and
adcl
mov
sahf
dec
dec
out
aas
or
cmpb
and
sub
xchg
lahf
aad
pushf
sub
pop
pop
sti
pop
mov
jecxz
nop
loop
movsb
sub
ret
das
lods
jns
sbb
out
cmp
lods
lea
aam
sub
ss
push
jne
insl
into
push
jl
ds
pop
jecxz
inc
cwtl
popf
or
push
jge
scas
push
and
test
sti
repz
hlt
ret
xchg
dec
push
or
pop
and
or
mov
pop
int3
enter
jmp
mov
pop
int
adc
sub
and
mov
sub
jne
jb
aas
pop
testb
jg
mov
inc
mov
fdivrl
cmpsl
mov
inc
xor
in
inc
aam
lret
push
push
fistpll
jb
xor
clc
push
xchg
fsubrs
cmp
xlat
pusha
dec
adcl
arpl
xchg
dec
cmpb
out
and
loop
fdivrl
lods
pop
push
dec
in
add
jno
stc
jne
movsb
shl
sbb
jle
movsb
inc
arpl
stos
popf
popa
loop
dec
mov
xchg
push
push
cmc
adc
dec
mov
fsts
mov
and
inc
out
sbb
mov
inc
pop
inc
cmpsl
test
les
mov
or
mov
out
loop
lock
es
js
inc
bound
fwait
mov
jo
mov
mov
ljmp
or
jecxz
orl
subb
mov
repz
test
fldt
loopne
push
or
cmp
pusha
outsl
xor
gs
jnp
sub
or
loope
repz
push
jbe
mov
mov
mov
jno
sub
or
mov
xchg
fnstenv
sub
mov
inc
jo
lods
loopne
test
movsb
repnz
adc
int
icebp
xor
mov
pop
out
or
dec
cs
ja
ljmp
mov
sub
lock
add
leave
loop
ds
xor
xlat
sbb
cld
pop
push
adc
pop
jle
insl
mov
pop
and
lds
jb
mov
jl
popf
lahf
sub
ret
lret
jle
filds
lahf
popf
push
lods
and
push
xchg
push
cmp
sub
add
dec
test
xchg
movhps
mov
rcrl
testb
fiaddl
push
sbb
int
loope
add
lret
pop
arpl
xchg
fdivl
test
push
mov
pop
sbb
push
out
add
repz
push
cmp
stos
dec
test
inc
sbb
sti
dec
popf
push
rcrl
xor
mov
mov
out
scas
aaa
mov
fildl
mov
sbb
pop
mov
adcb
xchg
cmp
es
fsqrt
add
out
inc
jo
or
or
pusha
push
xor
into
mov
push
mov
nop
cmpsl
inc
cmpsb
pop
add
xlat
adc
das
lret
ret
and
stc
jo
outsl
sub
add
lcall
adc
inc
pop
mov
push
inc
mov
cmpsb
les
lods
dec
test
insb
subb
dec
sti
sti
rcll
pop
push
test
jmp
adc
sub
lock
push
sub
pop
ljmp
xor
andl
insl
and
inc
jae
jae
cli
mov
pushf
jmp
dec
and
pop
ficompl
sahf
and
addb
cmpsb
shll
sbb
lcall
negl
pop
pop
js
test
and
fistl
push
rcl
cmp
xor
je
cmp
inc
lret
push
inc
jle
mov
movsl
lods
mov
mov
into
fistl
js
bound
push
fwait
cltd
pushf
mov
inc
roll
loopne
cmc
pop
and
mov
adc
xorl
popa
adc
lods
or
fildll
add
xchg
pop
test
out
test
mov
sarl
mov
and
mov
jmp
xchg
pushf
sub
pop
cmp
push
scas
inc
mov
add
out
or
shlb
aad
in
shll
test
xadd
cltd
inc
mov
or
mov
movsb
jp
scas
aam
aas
gs
add
sub
xor
sti
imul
push
add
cmp
aam
repz
push
icebp
dec
sbb
sbb
enterw
fstl
out
mov
leave
mov
out
rcrl
ds
leave
xor
mov
and
mov
push
sarb
out
xorl
inc
iret
cld
dec
push
lods
xor
in
xchg
stos
mov
scas
inc
ljmp
push
add
aam
xchg
fldl
sub
jge
nopl
mov
ds
pop
fsubrs
js
cli
mov
orb
cld
sbb
imul
mov
mov
pop
sub
xchg
aam
push
mov
pop
add
mov
les
stos
stos
mov
xor
js
out
arpl
out
xor
shrb
loopne
data16
fildl
push
and
fwait
std
or
dec
test
inc
xchg
aam
pop
fldenv
into
push
jmp
pop
mov
push
mov
aaa
enter
mov
sbb
lret
and
pop
fwait
mov
test
fwait
and
xchg
sub
cmc
lahf
inc
iret
mov
js,pt
outsl
jmp
pusha
xor
mov
add
sub
rcr
push
test
cmp
pop
std
outsl
sub
mov
popf
in
aad
in
sub
popl
inc
in
sahf
sahf
incb
ja
fdivs
inc
repz
push
cmp
cltd
pop
decl
out
aad
lcall
or
rcll
stc
gs
or
inc
jo
cli
dec
imul
cltd
mov
sub
ret
jp
shll
pushf
scas
out
sub
xchg
mov
mov
adc
and
scas
xor
pop
in
in
in
lds
xchg
adc
or
cmp
ds
in
adc
add
xor
shlb
es
mov
in
jne
cwtl
mov
out
add
cmp
cmp
test
add
iret
add
aas
ret
imul
arpl
push
xlat
or
push
hlt
push
push
inc
pop
js
in
mov
in
je
insl
xlat
int3
insl
stos
call
icebp
pop
mov
dec
add
mov
adc
pop
sbb
aas
sub
xchg
mov
lods
rcl
jae
into
divl
imul
dec
push
cli
repz
push
in
add
inc
mov
out
loopne
push
pop
inc
call
adc
loop
add
xlat
call
and
test
mov
lahf
push
mov
cwtl
das
loopne
ds
loopne
push
or
in
lods
jl
pop
ja
cmpsb
xchg
push
cld
mov
mov
ja
cmp
test
jb
add
fmul
outsl
and
xchg
mov
cli
pusha
lcall
jns
lcall
clc
std
insl
or
add
fsts
fdiv
imul
or
jno
dec
jmp
sbb
pushf
repz
int
fs
or
adc
popf
adc
or
push
xchg
icebp
fnstcw
push
sub
xchg
int
jb
jo
jmp
push
arpl
test
xor
shll
jle
jecxz
shlb
mov
aaa
int3
aad
push
movsl
xchg
fadds
adc
cwtl
jle
fadds
aas
insb
add
add
add
push
add
add
add
dec
add
lds
add
add
add
add
mov
add
add
add
add
add
fwait
add
add
add
xchg
add
add
add
or
and
add
add
add
add
add
ljmp
orb
aam
add
add
add
xor
push
jb
outsb
push
or
add
add
add
add
add
addl
add
push
xor
add
rolb
add
jecxz
jae
and
add
add
fs
outsb
add
and
in
leave
mov
or
clc
jecxz
sbb
js
rcll
inc
fcoms
add
dec
or
clc
add
decb
pusha
incl
pushl
push
add
pop
divl
mov
mov
rclb
rol
add
aam
add
add
add
push
add
add
push
lea
test
call
push
cmp
shrb
std
pop
add
incl
xchg
add
enter
add
push
std
test
jmp
add
add
push
adc
cmpsl
leave
add
hlt
inc
adc
add
add
add
adc
add
add
addl
inc
insl
je
imul
adc
add
insb
imul
insl
add
popa
out
gs
gs
add
gs
js,pn
push
jae
inc
push
insb
add
insb
add
outsl
insb
jne
outsb
gs
inc
je
je
je
insb
add
add
popa
mov
add
sar
xchg
leave
mov
ds
push
stos
or
adcb
jno
mov
adc
ret
lock
shr
out
pop
push
fidivrl
lahf
dec
icebp
jnp
pushf
cmp
sahf
mov
or
lret
sarb
jecxz
in
push
ss
daa
ret
arpl
add
cmp
rcrb
jge
xchg
push
js
pop
mov
ja
jle
push
jl
popf
lahf
pop
jl
or
fdivrs
mov
movsl
sbbl
test
or
mov
mov
fadds
or
mov
std
jns
je
xor
add
es
ret
mov
and
iret
xchg
sub
mov
mov
adc
or
jne
jl
sbb
les
clc
cmp
adc
cmp
pop
mov
ret
dec
rorb
pop
ss
push
cmp
rcll
scas
and
out
popf
mov
rcrb
imul
data16
stos
shll
mov
sbbb
icebp
ss
ss
push
inc
ja
xchg
jg
lret
jae
cld
pusha
bound
mov
ljmp
or
loopne
lea
sbb
repnz
nop
enter
adc
mov
bound
jmp
pop
outsl
loop
xor
test
cmp
mov
mov
bound
mov
mov
xor
fisubrl
cmp
add
out
into
mov
mov
aad
ret
mov
stos
sub
cld
mov
movsb
push
mov
inc
fstl
leave
popf
add
stos
loop
jg
cltd
ret
or
dec
mov
add
pop
or
xlat
mov
jmp
inc
jbe
in
lret
repz
cmp
dec
cmpsl
sub
cld
push
cs
sub
rorl
lcall
xchg
dec
outsb
mov
pop
cmp
in
ja
or
in
cmpsl
adc
ljmp
cs
inc
fabs
xor
push
scas
mov
push
mov
divl
cmpsl
pop
jo
sbbl
add
and
dec
inc
call
into
bound
nop
add
outsb
inc
icebp
sbb
pop
mov
pop
xchg
pop
xlat
jae
mov
mov
call
pop
or
fwait
in
xor
dec
hlt
pop
jge
dec
xor
loope
stos
mulps
nop
leave
xchg
ljmp
in
adc
dec
fildl
les
xor
dec
pop
ljmp
repnz
popa
popa
sub
push
push
jge
pop
add
cltd
call
mov
jnp
jne
cmp
xchg
sbb
xchg
adc
insl
lcall
popa
jnp
shrb
mov
mov
mov
push
dec
pop
loopne
popa
cmp
add
and
lahf
mov
jnp
jl
scas
aaa
dec
pop
pushf
dec
loop
fisttpl
xor
add
loop
lock
sbb
push
mov
mov
shlb
fbstp
bound
mov
mov
pop
cmp
push
cmp
lret
sbb
mov
ds
or
and
in
adc
insb
movb
daa
sub
jmp
or
and
ss
inc
adc
imul
inc
loop
xchg
sub
pop
sub
imul
loop
pop
js
cmp
jle
fnsave
push
pop
sbb
loope
sbb
pop
jp
popf
pop
test
xor
mov
sub
mov
rclb
mov
lods
cltd
shrl
cmc
pop
push
sbb
stc
cmp
cmpsb
or
outsb
cmp
fwait
std
rcl
test
inc
dec
lods
jbe
push
cli
scas
xchg
out
add
mov
subb
enter
repnz
notb
jb
add
cmp
cmp
sahf
mov
inc
lret
testl
cmp
mov
or
sarb
cmc
fidivrs
hlt
mov
movsb
in
decl
scas
xor
mov
js
xor
sti
push
filds
lock
jne
xchg
mov
cmpsl
sahf
out
sbb
and
mov
mov
imull
int3
xchg
call
lcall
mov
jno
sub
fwait
adc
stc
stc
cmpsb
arpl
xor
gs
sub
jbe
lcall
push
into
push
lret
repz
popa
and
je
aam
cmp
push
xchg
adc
stc
sbb
sbb
aad
aaa
fs
call
decb
mov
js
cmpsl
xchg
inc
mov
arpl
in
push
xchg
mov
clc
cs
sbb
push
mov
les
adc
inc
add
mov
test
imul
lods
lock
cmp
jmp
inc
ret
popf
lods
aam
ret
xchg
icebp
pop
lcall
push
xchg
mov
push
ss
inc
mov
mov
add
fs
mov
jb
pop
lods
and
pop
jp
fwait
pop
jo
pop
data16
lar
xlat
add
aas
pop
dec
imul
out
inc
inc
or
xlat
stc
ss
fstl
mov
add
dec
fidivrl
xor
sti
adc
xchg
dec
xor
mov
xor
bnd
pop
sbb
add
push
test
lds
sub
inc
fnstcw
scas
mov
sbb
test
leave
psllq
xor
dec
sarb
in
cmp
add
push
and
fs
jmp
sub
sti
or
arpl
imul
mov
out
std
or
and
movsl
mov
cmc
sbb
mov
adc
ret
das
cmp
gs
out
lret
icebp
aas
xor
inc
mov
shlb
or
pop
fbstp
fadds
cmp
out
adc
lret
xchg
outsb
fcompl
std
and
xchg
movsl
cmpsb
lcall
popa
sbb
lea
aas
filds
mov
add
aas
cs
ds
pop
dec
push
jno
bound
fwait
mov
and
inc
mov
sub
or
daa
outsl
adc
mov
xor
stos
or
inc
out
xlat
push
xor
dec
and
add
mov
call
and
rcl
fsub
jle
pop
loop
cmp
scas
cmpsl
mov
xchg
cmp
jne
movsb
pop
push
adc
jbe
push
fdivs
pop
pop
pop
or
push
ljmp
jp
adc
pop
xchg
insb
mov
inc
sub
cmpsl
js
lods
cmp
iret
pop
in
dec
jnp
lcall
out
sub
push
lods
fnsave
sub
aad
into
sbb
lods
pop
mov
movsl
or
in
dec
inc
idivb
dec
daa
cmp
loop
into
call
push
stos
es
dec
cmp
int3
sub
or
mov
pop
cmp
cmp
aad
xchg
sarb
jle
xchg
push
daa
and
xor
int
fnsave
test
movsb
test
mov
sahf
or
inc
cmp
cmc
lahf
pusha
sarl
repz
mov
ja
pop
xor
cmpsl
xchg
mov
pop
xchg
push
and
sbb
sub
ret
shrl
cwtl
cmp
loope
mov
int3
es
shll
jne
push
in
cld
cs
add
je
mov
aam
int3
bsr
imul
out
push
jne
addl
aad
fadds
icebp
add
lock
jecxz
or
xchg
cmc
jl
ja
inc
int
cmp
ljmp
or
jl
aaa
es
mov
pop
clts
shr
out
outsb
fmull
popa
mov
push
mov
cmpb
sbb
xchg
stos
cmpsl
pop
lock
insl
adcl
inc
repnz
jbe
sub
outsb
jnp
jecxz
stos
pop
cmp
lods
adc
stos
sti
rcrl
xchg
mov
sub
cmp
imul
scas
popf
adc
or
mov
or
add
int3
fsubrl
or
push
lea
dec
sub
notl
inc
mov
scas
imul
out
sarl
xchg
pop
es
sahf
or
jbe
cmp
jbe
cmc
stc
insl
dec
lock
sub
sub
push
xor
fst
fwait
bound
pop
in
jl
cltd
cli
daa
push
inc
and
sub
xchg
inc
xchg
push
fwait
push
push
std
adc
gs
fwait
lods
jecxz
mov
repnz
repz
push
or
jb
and
xor
in
out
into
in
jmp
hlt
jno
mov
lock
ljmp
pop
stos
out
jp
iret
xchg
xor
aaa
lret
int
dec
jne
das
xlat
int3
adc
pop
sub
mov
fldt
lret
outsl
scas
inc
or
xchg
ret
divb
jl
dec
pop
jle
push
jns
xchg
adc
pop
aad
adc
out
mov
dec
cmp
rclb
out
icebp
inc
add
mov
enter
add
lret
dec
mov
repz
pop
popf
cmp
cmp
ljmp
jecxz
cmp
lock
rcrl
xor
sub
jle
popa
mov
jmp
incl
sbb
insl
fsts
bnd
push
or
in
or
roll
pushl
and
xor
test
pusha
dec
mov
push
jns
push
lds
es
cs
add
and
or
cld
and
xor
js
inc
lahf
fistps
adc
jb
enter
mov
sub
aas
add
or
push
loopne
lret
sbb
out
mov
jae
icebp
loope
mov
sbb
cli
daa
out
sub
mov
jnp
sbb
in
in
out
popa
out
jne
int3
stos
jbe
xor
lret
mov
sbb
mov
and
pop
rcll
imul
push
mov
xor
aaa
push
repnz
pop
loop
push
xchg
xchg
and
rcrl
cmp
aad
dec
xor
pop
imul
notb
jecxz
push
or
lcall
sbb
cmp
push
dec
pop
stc
sbb
adc
jl
in
mov
pop
cmpsl
bound
add
xchg
xchg
pusha
pop
andb
flds
dec
imul
call
lock
rclb
testl
cmpsl
aas
dec
test
in
outsl
int
imul
out
dec
scas
adcl
lahf
insl
lds
sahf
jae
inc
daa
fsubs
push
outsl
and
adc
lock
clc
mov
sub
aas
adcb
sbb
arpl
sub
cld
and
sbb
call
loop
inc
aaa
sub
cmpsl
inc
cmp
push
fisubs
mov
fisttps
stos
mov
in
xor
cli
popf
and
pop
fucomp
xlat
xchg
es
xchg
push
mov
fabs
fidivl
fcompl
dec
add
adc
hlt
mov
hlt
test
pop
ficompl
push
bound
fadd
into
ret
lret
sbb
jbe
cmp
mov
jge
mov
cmp
pop
out
fdiv
push
dec
ljmp
mov
xor
inc
aam
cmc
fisttpl
adc
pop
mov
clc
scas
mull
dec
out
and
sbb
std
popa
ds
test
faddl
add
cli
mov
iret
sbb
lods
lods
fyl2xp1
mov
xchg
ljmp
inc
xchg
adc
into
xchg
pop
mov
or
arpl
aam
adc
pand
ja,pn
cltd
push
cmpsl
pop
sub
jmp
sbb
cld
push
test
insl
inc
ljmp
sub
cmp
loopne
stc
mov
or
pop
dec
in
sub
ret
mov
icebp
or
fistpl
fs
mov
insb
aad
jo
jmp
lods
xor
pusha
insl
add
inc
add
jecxz
and
es
jne
insb
call
jbe
clc
insl
jnp
hlt
insl
cmp
cmp
jb
jb
sub
sbb
insl
or
mov
jne
lods
dec
inc
sbbb
jo
push
orl
gs
xor
cmp
cli
sbb
into
sub
clc
loopne
ds
dec
mov
outsl
pushf
ret
int3
push
push
arpl
mov
das
loop
jmp
mov
sbb
mov
adc
mov
sti
popa
push
pusha
imul
pop
lods
dec
adc
mov
cli
mov
inc
and
jge
shl
jbe
jbe
stc
push
push
movsb
or
pop
pop
into
ljmp
loopne
sub
lret
aam
test
jl
mov
mov
inc
jecxz
insb
addr16
mov
dec
adc
pop
jmp
in
call
jmp
and
jecxz
js
decl
fwait
adc
orb
cltd
add
add
or
leave
insl
lods
mov
int
daa
or
in
pop
push
fnstcw
movsb
mov
sbb
mov
cld
pop
sbb
sbb
test
scas
and
lcall
shll
add
and
xchg
movsb
frstor
jle
sub
mul
lahf
insl
in
sub
mov
mov
or
push
filds
enter
add
fisubs
jb
xchg
jle
lret
mov
jge
jmp
sbb
add
jp
aaa
xchg
sbb
sub
in
inc
lds
fcmovb
pop
jae
xor
xor
push
and
jp
inc
icebp
push
daa
movaps
in
jge
add
imul
jmp
scas
sbb
add
mov
out
sarl
push
push
pop
cmpl
cmpsb
inc
push
icebp
fwait
das
stos
mov
sbbb
mov
test
sub
jno
daa
sbb
mov
dec
cmpsb
xchg
repnz
mov
jge
cmp
mov
leave
lods
gs
mov
cs
cmp
adc
cmp
mov
inc
cmpsb
jle
adc
pop
fstl
inc
xor
clc
jnp
shr
mov
jno
out
pushf
cld
mov
cltd
jle
or
add
push
leave
xchg
push
or
sub
inc
pop
xchg
mov
cmc
sbb
ljmp
sbb
je
insl
cmp
push
sbb
mov
xchg
jo
pop
into
sbb
fucomi
jnp
xor
mov
adc
and
inc
xor
je
fwait
nop
loope
add
sub
mov
sub
mov
inc
and
nop
or
push
pmulhw
push
push
leave
push
leave
out
leave
mov
hlt
repnz
lahf
scas
xchg
clc
adc
jo
dec
sub
das
pushf
dec
push
add
push
pushf
pop
mov
pop
and
sahf
sbb
idivl
aaa
lods
push
xor
or
mov
push
push
shll
ja
pusha
mov
sub
sub
cmp
cmp
cltd
push
das
repz
xchg
mov
sub
mov
orb
cmp
ja
imul
add
push
dec
call
call
gs
inc
mov
pop
in
andnps
les
ret
loope
pop
mov
out
jo
xchg
test
sbb
pop
add
sub
addb
pop
or
loop
int3
int
and
mov
add
aad
xor
and
movsb
add
push
lret
repz
loop
inc
push
jnp
test
mov
push
ja
subb
cmc
gs
faddl
jb
xchg
and
out
mov
lcall
jg
pop
fucomi
cltd
lcall
sti
fdivl
std
aas
mov
nop
rcr
xor
hlt
test
rcr
sub
mov
xor
loopne
addl
xor
arpl
fbstp
aaa
jecxz
fbstp
pop
mov
xor
mov
inc
adc
leave
icebp
test
ror
mov
push
mov
clc
sub
test
xchg
out
dec
push
sbb
and
or
cmp
push
push
movb
and
ja
dec
xlat
out
inc
lds
fimull
frndint
dec
aam
jb
mov
xchg
inc
fnstcw
inc
sahf
insl
out
mov
sbb
jl
mov
movsl
lret
fsubrp
jecxz
cmp
sbb
push
popf
movsl
add
jg
lcall
mov
icebp
push
sbb
pop
mov
outsb
sub
mov
out
and
xor
mov
xchg
jae
sarb
std
in
pusha
icebp
add
mov
push
mov
pop
andl
jle
cmp
scas
mov
cmpsb
mov
pushf
push
pop
call
dec
gs
cwtl
mov
pop
dec
sbb
inc
idivb
shl
in
ret
inc
mov
ficoms
das
cltd
inc
pop
add
pop
push
cmp
mulb
out
popa
sub
outsb
jne
in
jmp
popf
push
loopew
push
stc
cwtl
dec
sbb
push
push
aas
shll
cmp
test
mov
push
in
ja
insl
cmp
cltd
push
adc
in
mov
dec
fldcw
cld
dec
jl
test
fstpl
xchg
in
ret
subl
cmc
cmpsl
xor
cmp
xchg
and
stos
gs
sub
sbb
repnz
leave
pop
mov
rol
aad
push
mov
ficoms
mov
insl
mov
jb
mov
sbb
clc
sub
shrb
fmul
dec
xor
mov
and
iret
clc
sbb
lcall
aad
sub
shll
roll
xchg
push
push
cmp
sub
inc
out
in
adc
loope
mov
adc
push
dec
rorl
xchg
imul
and
pop
lret
push
sbb
or
in
addr16
cwtl
xchg
adc
dec
adc
inc
sub
adc
pop
shrb
cmp
mov
or
add
xchg
cmp
jle
push
or
repnz
mov
cwtl
cmpsl
fsts
and
loopne
fisubrs
int3
movsb
add
test
roll
adcb
lods
testl
xchg
and
sti
std
pop
sahf
add
sbb
mulb
or
jg
aad
adc
push
sbb
loop
ss
insl
int
das
inc
repz
outsl
mov
lods
pop
and
lcall
lret
outsb
mov
cmp
add
fbld
push
mov
push
iret
push
sbb
mov
dec
cmpsb
dec
aaa
lcall
push
jo
cmp
adc
pop
js
xor
rol
mull
xor
das
xchg
cmp
ljmp
pop
je
jnp
aas
mov
push
push
insb
je
stos
sub
jmp
sub
mov
push
aaa
outsb
hlt
inc
das
loop
insl
cmp
mov
test
xchg
push
std
push
jg
bound
shll
pop
fisubrl
sti
sub
mov
mov
int
pop
mov
shlb
lds
xchg
repnz
mov
mov
loope
mov
imul
add
pop
and
repz
clc
int3
out
sbb
mov
notb
mov
push
dec
push
sbbl
loop
sbb
in
xor
ds
adc
jns
pop
push
bound
testb
push
sahf
fildll
ds
fsubs
cmp
call
sbb
fstpt
pop
jbe
stc
dec
xor
js
xchg
inc
pop
push
jg
push
push
in
sarb
shll
xor
out
xor
sbb
cmp
sbbb
rcr
stos
adc
add
sbb
jne
jns
mov
ret
filds
xor
insb
js
dec
and
out
inc
pusha
scas
shrb
dec
jp
push
mov
xchg
daa
aaa
pop
mov
dec
mov
ss
and
pop
and
add
xchg
push
hlt
cwtl
push
lods
inc
gs
fists
xorb
xchg
and
std
mov
or
push
xor
jno
sub
jp
mov
xorb
pop
cltd
mov
add
inc
lea
push
js
cmp
testl
inc
inc
cli
pop
adc
sub
adc
lods
sarb
push
mov
cmp
loope
clc
addr16
pop
dec
sub
out
leave
cld
rolb
fisubl
rcrl
mov
arpl
mov
jnp
xor
movl
imul
sarb
ljmp
cmpsl
pop
cli
ljmp
aaa
imull
mov
jp
popf
out
das
icebp
sahf
sub
dec
jbe
dec
push
iret
sub
mov
mov
fisttpl
or
dec
xor
pop
cmp
jmp
das
pop
outsb
mov
xor
jl,pt
lret
or
fnsave
sub
sbb
jnp
daa
pop
in
enter
dec
sti
mov
inc
mov
cld
insl
inc
add
xchg
xor
mov
in
add
imul
andb
jl
ret
mov
mov
cld
cmpsl
push
test
lahf
mov
mov
add
mov
add
adc
add
add
addl
add
add
add
push
xor
addb
add
add
add
add
add
add
jecxz
add
add
addb
add
add
ja
mov
jo
jo
add
add
add
mov
outsl
jb
or
add
add
add
add
add
add
add
add
add
fadds
add
add
adc
add
dec
push
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
clc
add
test
add
js
add
outsl
pop
jb
add
add
add
push
push
movl
add
sahf
jecxz
mov
test
movl
ret
incl
sub
xchg
fiadds
add
lea
adc
add
push
pushl
inc
insb
or
shr
std
incl
add
movsb
rolb
add
leave
add
incl
add
pop
popl
decl
decl
ljmp
decl
loopne
decl
scas
sbb
or
push
add
lock
add
call
call
data16
stc
pushl
repz
or
pushl
add
push
add
push
movl
add
add
add
add
add
add
outsb
sbb
sbb
sbb
push
add
add
add
imul
imul
add
gs
je
es
add
jae
add
outsl
add
outsl
add
insb
dec
add
stos
add
gs
popa
inc
outsl
add
imul
push
in
dec
insb
push
insb
push
add
add
sbb
add
add
add
add
test
add
add
cmp
add
das
dec
mov
int3
cmp
adc
xchg
divb
inc
pusha
push
add
test
adc
xchg
xor
stc
mov
pop
pusha
mov
xor
jo
push
jb
cmp
or
or
inc
sbb
push
pop
xorl
dec
inc
arpl
dec
cmpb
pusha
cmp
mov
and
stc
aad
lds
dec
sbb
insl
popa
cmp
dec
mov
stos
and
cmp
ldmxcsr
mov
call
push
push
out
das
and
scas
fnstenv
inc
sbb
leave
cmp
gs
dec
sbb
mov
mov
jmp
test
aad
iret
jg
fidivl
and
stos
lret
push
sbb
cmp
ret
mov
andb
mov
ret
in
fsubs
int3
lds
and
bndldx
aad
or
adc
lret
stc
scas
imul
jns
mov
inc
push
rorl
imul
jl
xchg
or
orl
in
xchg
xchg
jl
inc
mov
jno
pop
leave
jge
test
cmp
lds
cmp
and
fadds
ret
aad
inc
jp
or
push
cwtl
pop
mov
jbe
adc
pop
pushf
cmc
xchg
test
xorl
lahf
lahf
sbb
lock
jle
mov
imul
popa
xor
ficoml
out
and
jae
xchg
adc
or
std
mov
add
jp
mov
xchg
aam
cld
push
rcll
orl
bound
sbb
add
xlat
adc
dec
xor
push
out
pop
aad
xchg
adc
lods
cwtl
fiaddl
lods
add
into
test
out
shlb
jge
repz
xchg
inc
xor
xor
sbb
and
out
and
jbe
clc
scas
lahf
lods
xor
nop
aaa
scas
pushw
mov
xchg
nop
sub
jno
mov
ljmp
out
dec
lea
std
cmpl
cmpsl
pop
sbb
mov
fiadds
xlat
inc
dec
mov
fdivrl
push
out
jbe
shrl
lock
add
adc
insb
test
leave
inc
test
xchg
fstpl
out
pop
subl
inc
movsl
push
xchg
pushf
jns
xor
lods
sub
cld
shlb
data16
imul
dec
xlat
push
push
insl
in
aaa
mov
cld
push
stos
inc
cmc
or
in
xor
sbbl
loop
mov
fwait
repnz
push
push
nop
aas
jo,pt
jl
xor
push
adc
cmc
mov
inc
les
lret
aaa
fldt
push
xchg
mov
lret
insb
pop
inc
dec
push
sub
mov
ja
pop
negb
mov
lahf
notl
cmp
mov
push
jg
pop
fmuls
js
push
fwait
xchg
inc
loop
movsl
in
jmp
dec
orl
mov
or
into
out
loop
cli
push
or
sub
push
xlat
lret
or
outsb
je
mov
cmp
pop
out
data16
shrb
push
xchg
ja
or
pop
xchg
outsb
xchg
inc
dec
test
aad
ror
or
push
sbb
stos
add
leave
fisttpll
out
and
inc
popf
sub
fistps
mov
scas
fwait
insb
mov
sbb
inc
mov
adc
jle
sub
sub
add
popa
xor
mov
js
pop
hlt
mov
js
lods
aaa
cmp
sbb
stc
mov
test
lahf
xor
fsts
or
sti
shlb
xchg
iret
scas
pop
adc
fcomi
mov
loopne
nopl
dec
rol
or
or
or
dec
call
jp
fwait
lea
shr
push
enter
xor
xchg
xchg
push
imul
lcall
cmp
xchg
scas
stos
inc
and
pop
leave
aad
pop
leave
dec
push
mov
push
jbe
sbb
out
mov
xchg
enter
es
and
addl
fistl
pop
ja
cmc
push
jno
push
loope
in
cmpsl
lea
or
cwtl
inc
cmp
pop
add
sbb
inc
mov
movsl
mov
repnz
ljmp
or
arpl
xchg
push
cmp
cld
xchg
in
fbstp
cwtl
inc
js
sbb
sbb
leave
shrb
mov
push
ljmp
push
loope
std
stos
pop
or
sub
mov
xchg
mov
mov
pop
inc
jmp
and
dec
lcall
sub
pop
dec
jnp
push
les
pop
cld
mov
dec
jp
lods
push
mov
xchg
jle
jl
movb
fistpl
outsl
test
xlat
je
imull
pop
mov
mov
aas
pop
mov
test
ret
sub
adc
call
jb
rolb
dec
sti
jl
ss
mov
pop
pop
incb
test
mov
sub
xchg
or
push
ret
cmpsl
push
push
rcrb
add
data16
aas
es
xchg
addr16
xor
cmp
push
mov
jbe
fwait
sub
and
clc
cmpb
fsubrl
in
aas
sbb
inc
cmp
mov
xchg
sbb
cltd
inc
repnz
and
dec
push
pop
stos
push
sub
xchg
imul
inc
pop
mov
pop
bound
sbb
xchg
daa
ds
add
mov
xor
cmp
stos
add
push
jb
pop
iret
iret
cmpb
insl
xchg
and
fdiv
pop
ret
xchg
mov
mov
in
lahf
xchg
neg
mov
and
shll
jns
arpl
xor
testb
outsl
cmp
push
jne
imul
sub
clc
dec
shlb
fdivrp
xchg
int
decb
ljmp
fistpl
jo
loope
pop
inc
out
sub
or
icebp
lock
jns
jge
pop
add
inc
inc
or
idivl
loopne
movl
inc
mov
push
mov
fcoml
push
and
mov
jns
popa
stos
cld
sarl
rolb
test
test
cmpsl
fiadds
sbb
push
cld
in
xor
adc
pop
jle
xchg
frstor
xchg
adc
mov
push
mov
jo
jb
mov
out
inc
bound
mov
and
jmp
inc
and
sti
pop
push
inc
or
subl
push
loop
js
sub
mov
scas
xlat
mov
jg
mov
push
out
scas
xchg
jno
lock
cwtl
je
icebp
sbb
lds
in
sahf
rol
cwtl
mov
cmp
aam
adc
pop
jno
or
in
fcmovu
mov
movsl
xchg
mov
push
mov
fstps
add
sub
sbb
sub
loop
mov
iret
mov
dec
dec
imul
pushf
jbe
adc
jnp
sbb
push
sahf
pop
mov
clc
mov
lret
std
loop
mov
xchg
mov
push
dec
push
or
adc
outsl
mov
dec
cmp
mov
sbb
or
inc
xor
sbb
loop
or
cld
ss
push
jecxz
sub
lea
ds
lahf
inc
and
inc
popa
lods
inc
clc
shll
mov
mov
ja
lock
dec
or
in
repnz
je
push
jp
adc
ja
and
xchg
dec
movsb
sub
mov
imul
cmp
cmp
jo
push
add
pop
in
inc
dec
lret
pop
mov
bound
cmp
stc
scas
pusha
sbb
scas
ja
stos
repnz
fnstcw
mov
fldcw
cmp
lahf
fisubrl
aad
and
jns
pop
aad
and
out
mov
stos
shll
mov
dec
jmp
ds
enter
cld
or
mov
lret
or
or
sub
mov
sbb
lods
out
inc
push
ret
mov
jp
dec
loope
mov
iret
or
pop
divl
jge
lcall
xchg
loopne
das
cli
cmpb
push
out
adc
sbb
dec
fcomps
jo
push
xchg
dec
mov
iret
dec
jecxz
mov
xor
stos
pop
push
shlb
mov
outsb
push
pop
fisubrs
xchg
int3
cmpsl
test
pusha
js
mov
js
mov
lods
jnp
negb
dec
or
lock
dec
and
or
dec
imulb
loope
ret
jbe
imul
call
sbb
repz
and
lret
push
adc
lcall
in
push
into
pushl
xchg
adc
out
lods
imul
int3
cmpsl
push
push
and
call
fmuls
cltd
lods
aaa
cmpsl
sti
sub
push
in
loope
std
inc
ret
fs
jmp
mov
mov
inc
and
div
leave
xor
cwtl
sarb
test
add
popa
inc
or
loop
adc
inc
sbb
and
pop
mov
adc
jge
xor
bound
lods
and
stc
dec
mov
xchg
push
pop
mov
imul
mov
inc
stos
xchg
mov
push
jmp
stc
xor
xor
das
out
lea
jne
sbb
movsl
push
lods
jmp
ror
lret
insb
xchg
aas
mov
adc
fmull
pop
cmp
push
ds
es
out
call
xchg
jns
sub
lcall
jo
test
sbb
test
pop
stos
pop
xchg
popa
push
icebp
or
mov
fstps
inc
test
push
or
aad
ja
and
jae
add
mov
lret
inc
dec
push
mov
fs
jns
test
pop
int
pop
movsb
rorl
jl
cmc
neg
dec
sbb
mov
aas
cmp
pop
mov
aas
push
out
mov
adc
push
xchg
lret
jge
test
testb
je
push
push
adcb
jecxz
divb
sbb
mov
pop
mov
sbb
rcrl
insl
add
inc
cmp
lods
test
rcrl
pop
cmpsl
mov
in
pushl
xor
imul
adc
dec
mov
inc
or
out
xor
clc
dec
sub
je
and
cs
adc
enter
sti
adc
pop
or
int3
icebp
dec
scas
cli
vpslld
or
mov
js
inc
xchg
dec
adc
pop
pop
adc
in
nop
xor
pusha
call
lret
sub
and
pop
bound
mov
xorl
push
shrb
aam
jne
sub
int3
and
or
dec
xor
mov
cmp
imul
scas
inc
rol
imul
adc
mov
jb
or
cli
sub
cwtl
sbb
push
into
jno
xor
ja
lea
jnp
mov
hlt
mov
in
stc
lret
fstpl
xor
int3
aad
sbbl
xor
cmp
jne
sbb
rolb
xchg
adc
scas
adc
rorb
cmpsl
fnstsw
stos
bound
and
push
les
or
sbb
xlat
push
xor
mov
xor
in
lock
push
push
jb
xor
or
pusha
or
shlb
pop
sbb
insl
adc
scas
jmp
pushf
xor
push
fwait
test
mov
jae
push
mov
adc
or
mov
pop
mov
pop
pop
cmp
shll
mov
or
das
mov
iret
mov
cmc
push
daa
cmc
outsl
xor
ss
rol
fsubl
add
lods
mov
jg
cmp
adc
xchg
pop
divl
mov
loop
mov
loope
mov
aad
pop
dec
divl
xor
add
and
xor
fstps
xor
cmp
push
arpl
and
gs
xchg
push
fs
jl
dec
mov
imul
adc
idivl
push
incb
dec
dec
ljmp
leave
pop
sbb
cmp
lea
rcrb
daa
ss
mov
xchg
push
test
addl
jbe
loopne
ja
cmpsl
xor
in
mov
jne
in
lahf
icebp
add
dec
xor
jns
repnz
in
cltd
xlat
xchg
jmp
pop
arpl
ds
mov
orb
movsl
cltd
out
outsl
stos
popf
sub
jge
mov
xchg
es
les
orb
pop
std
mov
int3
mov
mov
xor
mov
cmp
push
push
xor
test
dec
and
cwtl
jns
cmp
add
pop
sbb
sbb
dec
std
and
push
adcl
loopne
inc
loopne
pop
xlat
jno
cld
frstor
mov
bsr
adc
lcall
adc
jg
pop
fcmove
push
fsubr
nop
xchg
lea
inc
inc
pop
popf
out
xor
popa
xchg
push
jp
sbb
orl
mov
pop
outsb
jg
mov
sub
fistpl
xor
and
jno
popa
test
adc
pop
nop
add
scas
mov
sub
jmp
xchg
outsl
ss
inc
in
xlat
push
cmp
data16
in
lds
repnz
add
addl
aad
popf
pop
jb
insl
cmc
xchg
pop
xor
imul
and
addr16
and
sbb
adc
data16
fsubl
out
call
push
cld
aaa
cmp
cmp
mov
rorb
sbb
jns
lret
push
sub
and
cmp
inc
xor
inc
push
xchg
insl
and
fisubs
inc
jb
add
and
dec
pop
mov
jns
xchg
mov
and
fists
das
jl
adc
jmp
jo
insl
call
adc
cmp
sbb
rcrl
int
movsb
mov
subb
repnz
mov
out
cmp
sti
add
xchg
faddp
lock
les
xchg
data16
loop
sub
icebp
xor
test
stos
sar
pop
sub
in
mov
and
mov
push
lret
cltd
push
add
pop
xchg
xor
pop
xlat
adc
inc
fs
mov
or
leave
cmpsb
pop
add
adc
xchg
jns
pop
inc
jmp
inc
loop
jle
jnp
pusha
stos
push
loop
xchg
movl
lret
movb
loop
mov
adc
cmp
movd
dec
or
jnp
mov
xchg
rcrb
std
sub
cmpsl
scas
in
jae
cwtl
xor
dec
push
fs
leave
push
cltd
out
scas
pop
imul
mov
ja
xchg
cmpsb
sub
fbstp
out
push
fisttpll
xor
ss
or
dec
dec
xchg
jecxz
sbb
sahf
mov
inc
push
aam
inc
gs
out
and
in
je
xchg
jecxz
xor
sbb
mov
jae
fcmovu
les
test
nop
inc
mov
xchg
xchg
popa
repnz
bound
dec
inc
or
ret
push
add
and
test
mov
in
cmp
mov
push
ficoms
fisttps
push
mov
xlat
sbb
xor
mov
cmp
stos
jns
mov
pop
cs
mov
mov
xchg
movsb
in
sub
mov
fnstenv
cs
jne
or
mov
imul
popa
rep
aaa
sub
fsubr
mov
xchg
lret
push
sbb
jl
push
add
or
rclb
jg
out
cwtl
push
cmp
and
jns
sbb
iret
ret
jne
lret
cmc
fstpt
lods
cmpsl
test
xchg
dec
call
incl
mov
cmp
sbb
into
pop
std
int
xchg
sbb
fcoms
push
xchg
outsl
pop
and
int
inc
xor
aam
lods
mov
movsl
xchg
or
ljmp
les
dec
xchg
addb
mov
pop
jge
pop
add
incb
add
outsl
imul
xor
shlb
pop
daa
mov
movsl
jno
cmpsl
cli
xchg
mov
mov
mov
lods
adc
and
sbb
pop
stc
loopne
imul
out
into
mov
ja
stos
mov
mov
shlb
lahf
shlb
dec
shrb
cwtl
push
in
or
mov
jecxz
cmp
xchg
cmp
nop
jmp
xchg
sti
out
push
lds
shll
aas
cmp
inc
dec
orb
aad
repnz
lcall
push
mov
in
xor
je
mov
ja
cltd
in
add
mov
leave
dec
sub
jge
cmpb
inc
add
push
in
scas
mulb
aad
inc
jbe
mov
sub
inc
add
mov
fdivrl
mov
mov
mov
ficoml
push
insb
and
adc
adc
and
leave
jmp
cs
dec
scas
adc
xchg
icebp
jmp
dec
dec
add
int3
call
push
or
xchg
jge
mov
mov
sub
pop
cltd
adc
jp
fwait
out
xchg
jl
push
movsb
pop
cmpsl
je
repz
je
clc
arpl
js
sahf
int
in
mov
loop
xchg
stos
jge
lret
ss
hlt
jecxz
ljmp
aad
pop
bound
int
scas
fistpl
mov
mov
jb
test
jmp
dec
outsb
xchg
rcll
stc
jo
jbe
adcl
or
shll
xor
pop
pushf
dec
stos
loop
sub
fs
pop
mov
sub
lret
cltd
mov
pop
sbb
mov
jg
mov
xchg
daa
hlt
jbe
or
or
dec
scas
and
jb
outsb
cmp
pop
loop
push
iret
dec
outsl
jno
mov
sub
fisubrs
inc
pop
and
mov
scas
xor
xor
jbe
and
shrl
test
sub
cmpsl
xor
jle
imul
sbb
pop
xchg
or
popa
insb
in
fcom
pop
sbb
lcall
mov
push
movsb
sbb
ljmp
mov
pop
jae
xor
test
and
icebp
pop
pop
push
jp
xlat
sbb
cmp
inc
xchg
lret
xchg
in
pop
ljmp
outsl
popa
popf
bound
pop
xor
mov
cmp
sub
jns
loopne
pop
inc
pushf
adc
fisubl
mov
jle
in
adc
jno
out
fstp
mov
out
js
jo
out
outsb
dec
push
sub
cld
in
cmpsb
fwait
pop
arpl
jmp
aad
pop
aad
mov
mov
mov
jge
mov
aaa
add
lret
cmp
inc
mov
aam
jge
xor
mov
js
roll
dec
mov
dec
mov
pop
dec
fs
xchg
fs
aad
cltd
xor
jecxz
shll
mov
push
jmp
pop
push
xlat
sub
cmp
jno
gs
lods
push
sub
and
lods
xor
sahf
cmc
shlb
inc
pop
jmp
dec
gs
clc
xchg
in
loope
dec
stc
xor
and
jb
je
ficompl
cmp
mov
ret
loopne
lods
xchg
lods
pop
stos
add
outsb
push
repnz
in
inc
ficoml
rolb
mov
test
jge
push
ficoml
and
and
das
iret
xor
ss
addb
push
int
imull
dec
adc
stos
das
push
or
cmpsl
add
scas
push
fisttpl
roll
daa
and
jmp
test
push
iret
cmp
and
paddusw
adc
hlt
add
sahf
lea
outsb
jge
nop
sbb
js
rol
rorl
in
in
mov
dec
mov
cmp
pop
xchg
enter
xchg
pop
cmp
inc
push
ret
and
inc
adc
es
dec
fisttpll
and
inc
sbb
mov
mov
add
mov
mov
repnz
inc
mov
sarl
jle
mov
inc
mov
and
or
push
cwtl
and
xor
cld
lret
mov
test
jbe
pop
rcrb
mov
aad
ljmp
lret
inc
jge
xlat
pop
cmc
cmp
dec
in
out
or
xchg
rorl
pop
xchg
push
call
loope
inc
adc
cmp
enter
add
test
mov
xor
sti
dec
cmpl
loopne
sub
and
scas
inc
or
sub
popa
dec
ret
inc
lret
insb
lea
cmp
mov
clc
dec
xchg
cmp
mov
pop
scas
push
lahf
inc
inc
push
out
add
out
adc
std
stos
xor
push
data16
test
pop
mov
test
movsl
pop
lea
inc
notb
mov
pop
cmp
add
divl
dec
rcll
das
pop
ret
xchg
push
test
dec
adc
xchg
test
je
xchg
mov
decb
adc
aaa
push
in
repnz
mov
movl
add
add
add
add
sub
add
add
add
add
mov
add
add
add
outsb
add
add
add
dec
add
jle
addb
add
fadds
add
add
add
add
push
add
add
add
fiadds
add
add
add
stos
stos
add
ja
cmpsb
mov
incl
incl
add
add
add
and
gs
gs
add
or
adc
add
add
add
add
add
add
fwait
add
popf
je
add
add
rolb
add
add
sbb
add
xor
add
mov
jecxz
cmp
cs
dec
push
inc
add
add
je
mov
add
mov
fimull
mov
adc
cld
inc
pop
mov
inc
cmc
mov
decb
out
mov
subb
notb
test
incl
mov
decl
fs
push
adc
jge
out
in
add
push
mov
mov
gs
add
add
add
fwait
sar
push
decl
push
push
push
cmp
cmp
mov
push
stos
add
cld
add
inc
mov
lea
adc
loopne
add
lret
clc
cmp
mov
push
add
adc
adc
add
adc
pop
add
pop
sti
adc
sbb
add
add
sbb
add
add
add
imul
sbb
pop
add
add
imul
notl
outsb
gs
inc
insl
inc
imul
inc
add
js
add
gs
mov
jns
popa
inc
je
gs
outsl
jb
sub
inc
fs
add
add
add
add
add
add
add
lret
add
insl
add
add
add
jnp
add
add
movsl
xchg
cmp
and
inc
popf
fnstcw
sub
stos
pop
mov
and
adc
adc
or
aam
cmpsl
and
sbb
push
movsl
in
lret
pop
arpl
cmp
dec
lods
mov
fcomps
aas
cld
and
adc
fisubs
test
test
pop
jb
push
loopne
mull
dec
fstpt
push
inc
ret
mov
sub
mov
sbb
mov
inc
lods
into
mov
and
daa
adc
lcall
rcrb
jl
mov
mov
jmp
mov
fstpl
xrelease
and
mov
add
adc
std
inc
sbb
js
popl
mov
call
nop
xor
adc
jl
push
jae
ss
aas
nop
xchg
popa
dec
mov
add
xchg
je
and
lahf
push
push
int3
mov
push
jl
pop
jo
je
movsb
stc
adc
aaa
addl
jge
rcl
inc
push
lahf
divb
fdivrs
sti
xchg
loope
rcrb
sub
fimuls
insl
pushl
and
jns
sub
xchg
jae
and
and
mov
shr
insb
mov
leave
inc
push
xor
xor
jle
xchg
mov
notl
test
mov
mov
mov
js
adc
or
push
fnsave
lcall
int
sbb
hlt
pushf
jnp
lahf
dec
cs
push
pusha
fwait
into
add
fdivrs
push
les
xlat
and
push
mov
adc
dec
popa
inc
daa
push
mov
xor
dec
andb
mov
mov
inc
pop
int
push
sbb
mov
push
icebp
sbb
cltd
lds
stos
jbe
roll
mov
imull
xchg
xor
sub
sbb
inc
or
imul
jmp
add
mov
mov
aaa
mov
fisttps
sbb
movsb
add
or
adc
stc
pop
inc
pop
xor
jp
jb
mov
ja
xchg
fimull
aam
xlat
or
sarl
rcrb
sub
loope
lret
sbb
enter
push
xor
add
adc
dec
idivb
fidivrs
int
in
nop
rcrl
fwait
imulb
add
shll
mov
cmpsl
push
or
mov
shl
shlb
xchg
and
and
jmp
mov
ja
mov
insb
enter
jne
mov
repnz
scas
mov
inc
fldenv
or
ret
jp
mov
mov
mov
push
movsl
sahf
fwait
push
cwtl
cmpsb
add
or
out
test
test
hlt
adc
cmp
ds
sub
cmp
push
push
sbb
hlt
popf
mov
ss
pop
nop
cwtl
dec
pusha
cli
inc
add
loope
shrb
pop
out
fucomi
lock
outsl
mov
sbb
cmp
movsb
out
sahf
cmp
jmp
and
das
add
cmpsb
int
push
ja
pushf
mov
or
jae
dec
ret
popf
jle
sub
mov
insl
jns
in
push
je
xor
decb
insl
jmp
dec
xchg
out
lds
mov
jmp
test
xchg
aaa
outsl
lods
push
mov
dec
ficoml
popf
js
adc
insl
cwtl
imul
dec
pop
sub
lret
call
mov
ja
dec
push
enter
jle
or
sub
xchg
xchg
ffree
lock
mov
sti
das
paddw
test
pop
in
ret
sbb
xchg
pop
in
aam
sub
push
testl
les
inc
fiadds
cmp
jo
cwtl
jle
lods
or
dec
cld
sbbb
jge
bnd
and
xor
mov
inc
shrl
scas
adc
frstor
ret
mov
out
rcrb
cmpsl
xchg
mov
xor
insb
outsb
ja
pop
shrd
imul
push
mov
test
int
inc
js
lods
push
imul
pop
pop
mull
cmc
out
dec
ret
xchg
add
and
sub
or
add
in
jl
xor
jnp
xor
or
mov
dec
or
mov
lds
in
mov
mov
in
pop
lahf
or
mov
mov
repnz
jle
scas
testb
out
inc
out
adc
fcoms
scas
cld
mov
in
add
lea
aas
pop
inc
mov
rorb
push
cltd
pop
push
test
addl
ljmp
or
mov
aam
lods
addl
mov
lret
clc
int
or
loop
or
dec
and
int
push
out
dec
dec
test
jbe
xchg
cli
mov
jge
jo
cmpsb
mov
and
sub
xchg
dec
daa
xor
stos
dec
cli
jnp
mov
cli
shl
pushl
or
inc
jb
inc
push
int
std
mov
mov
lea
lahf
mov
out
mov
xchg
ret
cmp
mov
mov
inc
shlb
movsl
fisubrs
fsts
lea
cli
data16
adc
cmp
pop
fisubs
lcall
add
sub
sub
mov
daa
pop
test
pop
je
mov
imul
mov
jbe
push
xchg
dec
or
inc
es
adc
mov
icebp
lds
mov
pop
xchg
daa
fldl
in
add
repz
or
add
clc
pop
jmp
loope
sbb
addr16
test
into
or
cli
fldln2
pushl
fimull
xchg
sbb
insb
and
ja
xchg
cmpb
clc
stc
cltd
pop
mov
fcompl
mov
jge
pop
pop
into
pop
xor
out
fmull
cmpsl
in
lret
mov
adc
cmp
xchg
adc
xlat
aas
adc
adc
sbb
ret
pop
mov
sub
nop
out
int3
xor
je
cmp
in
iret
iret
ljmp
add
mov
inc
mov
in
hlt
inc
cmp
dec
mov
add
mov
loop
xchg
int
test
pop
mov
sub
dec
jo
inc
inc
mov
stos
pop
adc
push
bound
stos
cmp
andb
inc
out
loope
dec
jb
add
jns
out
aaa
and
out
sbb
cmp
push
sbb
push
gs
mov
inc
sbb
les
pop
inc
inc
loop
scas
shlb
test
popf
sub
mov
sub
icebp
fisttpl
pop
lock
inc
push
xorl
fstl
push
arpl
sub
and
mov
aas
repnz
jo
ljmp
jmp
cmp
movsb
test
gs
push
jo
aas
xlat
rol
inc
adc
cmp
outsl
call
push
push
sub
mov
cs
repz
iret
fldcw
je
mov
cmpsb
or
cmp
out
js
lret
adc
mov
rclb
xchg
push
in
clc
jmp
call
les
test
pop
mov
jbe
roll
sahf
int3
xlat
in
inc
pushf
push
pusha
xor
sti
cs
adc
aam
and
mov
pop
xchg
lods
push
or
in
lcall
std
scas
cld
push
movsb
xor
rcrl
ss
mov
in
sub
xchg
push
sub
cmp
xor
xlat
test
push
inc
hlt
dec
nop
fsubp
xchg
nop
cmpsb
mov
stos
inc
jmp
arpl
xchg
mov
push
jo
pop
cmp
dec
scas
push
divb
xlat
lahf
test
aad
push
cmc
adc
and
int
popa
mov
adc
sti
or
cmp
mov
push
in
adc
mov
sbbb
movsl
scas
xor
inc
scas
mov
mov
test
movsl
xchg
not
clc
test
add
mov
mov
testl
and
jbe
or
mov
push
add
adc
mov
je
or
cwtl
lcall
aaa
xor
icebp
pushf
inc
and
test
cli
data16
and
jb
cwtl
mov
lods
cmpsl
jp
test
cmp
popa
inc
and
hlt
cmp
adc
cli
out
xchg
adc
inc
sbb
mov
mov
cmp
lahf
loope
xor
ftst
mov
movsb
xchg
jp
jae
or
loope
mov
lcall
mov
sub
or
mov
mov
mov
fs
adc
pop
mov
push
testb
fiaddl
jo
and
mov
cmc
and
sbb
xchg
xchg
popf
xor
jmp
adc
pop
xlat
xor
pop
in
sbb
hlt
push
je
mov
cmpsb
iret
je
inc
jb
jg
mov
cmp
and
scas
scas
das
ljmp
xchg
sbb
sub
and
pop
sahf
int3
adc
test
add
pop
jecxz
ret
sbb
test
int
pusha
lds
enter
sub
xchg
and
xlat
add
daa
aaa
lret
cld
sar
std
lods
push
jno
test
roll
xor
fldenv
mulb
aad
and
pop
and
nop
jp
aas
in
xchg
push
jecxz
mov
adc
arpl
rcrb
sti
loopne
sbb
push
sti
les
jbe
jle
hlt
fs
push
or
addl
dec
cmp
lods
lret
stos
fnsave
dec
rcl
aad
push
push
call
push
xchg
cwtl
scas
or
pop
xor
mov
xor
jge
imull
cmp
arpl
cmpsb
sub
test
xor
and
push
jge
out
rcrl
or
xor
mov
jns
cli
push
sub
jp
xchg
pop
arpl
inc
xor
mov
xchg
sti
sub
sub
loope
mov
imul
push
cwtl
fisubrl
cwtl
jns
and
in
scas
jecxz
xor
add
movsl
dec
ret
shl
repnz
mov
adc
cmp
cli
popf
jge
push
cmp
jg
test
fs
lds
movsb
pop
sbb
inc
fucomp
add
mov
dec
lret
scas
mov
fildl
cwtl
ret
call
xchg
mov
push
subl
cmpsl
pushf
lds
lods
mov
imul
xchg
jp
push
inc
data16
addr16
and
out
imul
sub
sbb
scas
sbb
in
xchg
fimull
cmpsl
pop
jl
mov
popa
inc
xor
sbb
dec
mov
mov
aad
cmp
and
cmc
xchg
cmp
lds
les
push
fisubl
popf
test
fnsave
dec
jnp
jp
or
xor
iret
xor
mov
mov
fstpl
mov
int
push
inc
mov
dec
inc
rol
cmp
mov
fs
out
inc
mov
mov
imul
xor
xor
push
sbb
out
mov
add
mov
mov
jo
scas
jp
push
lcall
push
pushf
and
outsl
or
and
ret
mov
push
lds
jge
ljmp
or
jbe
cltd
pusha
xor
mov
sub
faddl
mov
movsl
pop
aas
test
jb
add
lods
pop
subb
sbbl
push
stos
jno
sub
pop
push
cs
cmpsb
cld
jmp
xchg
test
cld
mov
sbb
cmp
shl
ret
mov
test
xchg
cwtl
push
inc
jecxz
and
push
inc
pop
pushf
test
jg
sbb
push
and
add
lret
in
movsb
pop
adc
sbb
out
fistl
repz
test
gs
add
dec
loope
sub
cmp
fwait
outsl
mov
mov
or
stos
jge
fdivl
or
fstpl
and
fsubrl
jb
cmp
aas
or
popf
fstpt
sub
scas
pop
out
sub
mov
dec
mov
sbb
mov
xchg
jbe
in
movsb
insb
movsb
fstl
xor
xlat
adc
sarb
push
mov
and
popf
fnstcw
cs
mov
in
inc
mov
jb
outsb
sbb
jns
icebp
fwait
daa
lock
cmp
sbb
cli
test
sub
clc
mov
iret
and
xchg
sub
subl
or
cmpl
pop
mov
fwait
jecxz
mov
or
lods
pop
xchg
or
xorb
mov
adc
dec
aam
and
movntps
pushf
sbb
imul
adc
sbb
fmul
jge
xlat
adc
push
xor
pop
adc
repz
cmpsb
mov
cmp
lock
dec
add
test
shl
adc
hlt
adc
popf
hlt
pop
gs
and
lret
and
mov
xchg
adc
or
daa
or
xor
clc
and
jno
mov
push
imul
test
fucomi
or
xchg
adc
adc
cmp
inc
inc
xor
fldt
inc
mov
jecxz
leave
and
out
je
loop
lods
nop
lahf
in
fists
in
fucomp
xor
pop
icebp
ss
test
dec
xchg
mov
sbb
push
daa
les
jg
outsb
clc
jle
sbb
mov
inc
push
or
test
pop
loopne
les
xchg
mov
movsb
sti
test
stos
sti
mov
in
ss
pushl
jge
and
jo
ficoml
call
cmc
mov
xor
xchg
ret
xor
cmpsb
pop
push
push
push
lahf
repz
fimuls
movsl
loopne
mov
fistpl
push
pop
xchg
test
je
lahf
and
xchg
inc
sbb
rclb
push
ja
inc
enter
mov
push
ljmp
mov
pusha
outsl
dec
add
pop
imul
and
jae
xor
adc
sub
lods
mov
es
cld
cs
lods
insb
fdivl
or
mov
int
and
lods
sub
xor
out
int
push
insb
pop
adc
fistps
mov
jo
js
xor
mov
repz
call
stos
mov
jmp
xor
or
movsl
jae
ljmp
movsl
and
cmpsb
xor
pushw
jecxz
movsl
or
into
sbbl
push
jl
jl
adc
les
push
sub
jne
lods
mov
or
xchg
pop
push
mov
lahf
data16
push
clc
addr16
and
add
gs
fsts
sub
enter
lcall
pop
clc
mov
or
mov
or
and
loopne
lock
lahf
adc
int3
mov
call
ds
or
loop
sahf
es
jns
inc
les
mov
xlat
inc
loopne
es
rcrb
icebp
jnp
xchg
int
push
adc
pop
leave
leave
sub
mov
add
scas
mov
add
xor
and
pop
les
cmpl
ljmp
mov
mov
daa
mov
push
iret
inc
enter
cmp
adc
cmp
mov
dec
imul
popa
frstor
outsb
mov
or
cmp
test
sub
fildl
test
add
mov
ss
mulb
in
rcll
push
inc
lods
mov
xchg
jl
sbb
xchg
pop
inc
pop
cli
in
and
movsb
cmc
jp
cmpsb
loopne
add
push
js
push
xchg
popa
cmpl
inc
imul
sbb
inc
cli
sub
dec
pop
sbb
jo
adc
cmp
lcall
movsb
loopne
cmpsl
cli
cmc
pop
ds
andl
ror
jge
and
in
fidivrs
pusha
sbbb
mov
and
jae
cmp
push
adc
jo
and
mov
lcall
test
pop
stos
push
in
cmp
jo
lret
adc
addr16
pop
ljmp
int
or
orb
fnstsw
lods
pop
sbbb
loope
mov
xor
mov
shrl
inc
aas
mov
mov
fwait
push
aaa
add
in
jge
pop
pop
leave
lds
push
and
js
dec
ret
call
mov
in
adc
in
inc
sub
jns
or
loopne
ja
or
cmc
pop
rorl
cltd
and
xchg
push
test
mov
out
sub
fildl
sbb
ret
push
lcall
xorl
orl
shll
sbb
test
lahf
outsb
adc
sub
jae
mov
mov
ds
loopne
push
lahf
sub
sti
negl
int
mov
jecxz
sub
fdivrl
push
pop
push
out
mov
xor
cmp
stos
inc
jl
xor
jns
fstps
jbe
cmp
add
jno
bound
xor
xor
sbb
mov
loopne
insb
enter
movsb
xor
jne
adc
movsb
imul
ret
and
daa
mov
mov
fs
lahf
or
aam
cli
push
mov
mov
jne
mov
adc
out
xor
xor
jno
sahf
xchg
cmp
std
adc
jo
fwait
inc
out
ja
or
imulb
add
in
cmp
in
push
in
mov
push
inc
ljmp
aaa
sbb
mov
xor
sbb
rcr
xchg
fsubrl
mov
xchg
cmp
sbb
and
roll
int
sar
les
jle
mov
aad
pushf
push
sbb
sub
cli
jmp
mov
mov
jbe
cli
pop
loope
mov
test
aas
cmp
sub
xchg
mov
repz
rcl
faddl
adc
adc
pop
lock
add
sbb
cmovnp
xchg
cwtl
mov
faddl
lahf
and
jo
add
cmp
out
add
mov
jbe
arpl
repnz
xlat
jns
repnz
repnz
add
movsb
push
jg
adc
in
pushf
pushf
xor
jb
or
or
xor
push
push
dec
outsl
shrl
inc
push
pop
pop
sbb
mov
daa
cwtl
inc
jbe
mov
pop
push
mov
lods
es
inc
jae
addr16
xor
les
adc
mov
mov
ja
jns
fidivrs
in
mov
push
xor
fucomp
mov
cld
mov
cmp
or
sub
test
jo
out
mov
scas
movsl
pop
fcompl
mov
aam
adc
mov
es
ss
push
xchg
xchg
gs
test
mov
fisubrl
and
mov
outsb
ror
xchg
inc
stc
mov
xchg
and
add
xor
pusha
iret
mov
mov
dec
push
mov
and
ret
mov
dec
idivb
test
dec
sbb
fisubrl
ret
push
repnz
add
cmp
aam
movsl
mov
nop
pop
or
scas
loopne
sub
dec
shrb
das
out
mov
jecxz
adc
xor
popa
and
mov
jmp
pop
lods
mov
test
inc
or
bound
xor
shrb
mov
iret
inc
mov
inc
scas
mov
lahf
mov
mov
in
jnp
jle
mov
xor
cmp
out
add
cmp
xchg
mov
dec
mov
jo
cmp
mov
mov
jb
sub
inc
xor
jg
lret
inc
jbe
in
andb
mov
inc
sarl
or
dec
mov
pop
inc
add
icebp
sub
js
push
or
fnstenv
lods
icebp
push
pop
shrl
jecxz
mov
adc
and
mov
mov
or
sub
pop
popa
xor
cmp
cmp
fstps
mov
sub
mov
arpl
push
popa
xchg
or
mov
inc
jne
scas
cli
imul
xlat
in
push
adc
std
and
cmpsb
pop
cmp
aaa
pop
sub
cmpsb
popf
sub
cld
sub
subl
in
mov
ficompl
lods
andl
ds
jnp
mov
lret
push
andb
push
popa
sbb
xor
dec
iret
aad
lock
shll
leave
push
dec
out
or
fwait
cmp
test
xor
adc
fsts
sbb
add
add
pop
add
add
add
dec
add
in
add
add
add
sti
add
jge
add
add
add
add
add
fwait
add
popf
add
add
add
or
add
add
add
add
add
add
mov
add
stos
stos
add
lret
mov
call
call
in
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
pushl
call
push
push
mov
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
nop
add
add
add
add
imul
adc
adc
add
adc
in
add
add
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
jns
jne
dec
imul
add
sahf
je
mov
and
sti
jecxz
out
sbb
push
push
push
decl
mov
inc
push
add
dec
repz
jne
jne
pop
push
std
pusha
call
lock
clc
test
pop
add
mov
mov
push
add
mov
add
rcrl
jmp
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
xor
call
jne
or
push
push
andl
push
incl
mov
test
mov
movsl
clc
add
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
in
je
inc
jb
gs
gs
add
inc
insb
gs
cld
outsl
mov
outsl
add
gs
dec
add
je
pop
mov
imul
dec
add
push
je
cs
gs
jae
push
addr16
je
add
add
add
inc
xor
imul
add
add
add
hlt
add
add
add
add
add
popa
call
push
jbe
pop
notl
nop
push
xor
idivl
adc
loop
stos
lahf
push
ret
mov
jmp
xchg
adcb
in
mov
xchg
sub
call
adc
or
lret
sub
dec
mov
sbb
jno
negb
xor
pop
push
movsb
add
fistl
fdivrl
repnz
enter
call
mov
pop
into
popf
pop
stc
push
loop
arpl
cmpsl
fcompl
adc
fs
push
sbb
lods
jmp
in
aam
pop
pop
repnz
call
mov
sub
cmp
xchg
jbe
xor
mov
sbb
cmpsb
dec
cld
jo
cmp
inc
xor
push
mov
shlb
inc
int
jmp
aaa
cltd
pushf
push
imul
gs
cmpsb
jno
es
popa
push
mov
stc
cld
es
pop
lahf
repz
into
dec
mov
mov
jp
bnd
cmpsl
fimuls
mov
adc
in
add
xchg
add
and
pushf
xor
sbb
mov
outsl
mov
inc
jle
bound
xorb
int3
repnz
mov
pop
jo
or
call
loop
dec
mov
mov
push
push
mov
push
sbb
ficoms
insl
and
sub
je
push
out
addr16
mov
test
movsb
xlat
mov
out
ss
mov
pop
mov
test
push
xlat
addr16
inc
rorl
fistpll
ljmp
setne
in
xchg
rcrl
mov
mov
cmpsb
push
jb
jl
pop
xchg
cli
pushf
mov
adc
insb
fcmovu
je
setge
cltd
je
xlat
das
push
jmp
sahf
and
dec
mov
sarl
mov
mov
sahf
sub
lods
sub
inc
movsl
mov
mov
cmp
pop
clc
jge
mov
jmp
mov
ret
xchg
dec
dec
loope
adc
cmp
pop
cmp
dec
dec
cld
es
in
mov
sti
and
add
cs
pop
push
jmp
out
adc
stc
testb
addl
movsb
lret
inc
sub
fsubs
loopew
xor
add
jle
push
incl
xchg
adc
sub
jge
xor
xchg
jnp
cmp
pop
fs
mov
mov
andl
rcrl
jnp,pn
or
shrb
xor
fcompl
and
dec
insl
push
rorb
clc
stc
cwtl
fimull
mov
mov
jecxz
je
enter
mov
rolb
or
lods
das
das
mov
jmp
add
shll
js
and
mov
jmp
ret
cmp
mov
mov
push
dec
mov
out
push
daa
inc
jb
push
sbb
add
push
inc
mov
les
filds
xchg
fadds
xor
adc
sbb
inc
lcall
les
testb
mov
sti
addb
cmp
roll
into
jge
push
xchg
lahf
mov
lea
dec
cmc
and
inc
popa
popa
inc
sub
rorl
push
inc
push
iret
aam
test
sbb
insb
and
icebp
fcompl
sbb
cmc
pop
jns
sbb
dec
mov
pop
xchg
cwtl
ret
mov
adc
pusha
pop
lret
cwtl
iret
mov
xchg
mov
xchg
pop
xor
out
xor
fldt
sbb
pop
scas
jnp
ja
icebp
fcoml
adc
ret
pusha
iret
add
pop
jmp
test
mov
add
out
adc
loope
xor
mov
test
aad
jne
push
hlt
mov
in
mov
xchg
adc
sbb
int
ret
pop
push
iret
pop
dec
arpl
cwtl
sbb
cmpsl
mov
jne
cmpl
push
fstpl
sbb
fldl
ljmp
add
xchg
or
fistps
xchg
xor
scas
xor
mov
mov
push
cmp
and
lahf
mov
xlat
int3
movsb
test
push
fdivrl
add
adc
pop
fidivs
fdivp
ja
add
adc
jle
cmpsl
dec
inc
cltd
xchg
fsub
dec
neg
pop
dec
fmuls
sbb
and
mov
dec
scas
mov
loop
ss
pop
ret
pop
push
pop
out
push
ds
add
insl
insb
and
gs
push
cmpsl
and
or
or
out
push
shll
jge
xor
xor
clc
jecxz
dec
repz
test
xchg
inc
add
ja
ret
and
mov
lds
mov
sub
pop
push
mov
inc
mov
outsl
xor
adcl
hlt
cmp
int
fadds
add
xchg
xchg
aad
out
and
cwtl
mov
fdivl
imul
mov
cmp
rclb
les
inc
jecxz
ljmp
mov
xchg
dec
mov
mov
outsb
cmp
sysexit
push
loopne
xor
jno
in
fdivs
mov
inc
aaa
movsb
and
mov
lock
xchg
mov
mov
sarl
jecxz
bound
shlb
adc
cmp
push
out
sbb
jae
outsl
xchg
lret
mov
pop
fcmove
mov
insl
icebp
mov
popa
fistpl
gs
mov
fldln2
push
inc
push
mov
in
stos
push
cmp
mov
inc
jecxz
rcll
lds
fcomps
mov
inc
sub
mov
repnz
jl
and
arpl
or
push
inc
inc
data16
cwtl
mov
ss
fwait
jae
push
fwait
sub
or
or
mov
les
push
out
cmpsb
outsl
bound
xchg
add
cltd
fistpl
cli
sub
jmp
mov
test
fs
adc
sbb
fcmovnb
dec
aas
rcrb
xchg
in
leave
out
sahf
adc
test
jl
fcomps
int
sub
dec
inc
das
repz
add
xchg
sbb
mov
mov
fucomp
mov
mov
fs
notb
clc
fisubl
xchg
push
mov
faddl
imul
cmpsl
js
stos
ss
pop
adc
pop
jg
mov
sbb
mov
std
sarl
jge
xchg
xor
mov
notl
stos
sub
adc
iret
and
pop
adc
push
xchg
inc
rcrb
cmp
mov
scas
cmp
fildll
jmp
and
test
aas
ret
push
sar
aad
daa
sar
icebp
xor
push
cld
insb
mov
icebp
mov
cltd
enter
test
adc
mov
mov
negl
jns
push
jg
lods
mov
mov
push
loop
arpl
mov
dec
pop
aad
sbb
idivl
sbb
xor
add
cmp
popa
fistpll
rcll
adc
jl
lds
add
lret
push
icebp
pusha
in
cmp
inc
fstp
cltd
sbb
jmp
aam
mov
in
in
imul
jb
xchg
lcall
push
daa
sub
or
xor
adc
push
xchg
add
jbe
fcoml
mov
mov
fcoms
mov
insb
xor
int3
push
lea
sub
outsb
push
xchg
cmp
pop
push
adc
mov
and
mov
add
scas
xchg
call
outsb
movsl
sub
loop
enter
xor
sbb
xor
dec
das
imul
lods
nop
dec
cmp
fcmovne
add
jp
mov
lods
clc
sbb
sub
add
adc
stos
orl
incb
aam
cli
xor
pop
jecxz
fists
add
mov
jbe
test
test
int3
cmp
cmp
xor
lret
xchg
jge
loop
sub
loopne
mov
test
lock
fstps
add
sti
lret
loop
and
pop
xchg
add
xchg
mov
xor
je
ja
lock
inc
add
decl
inc
add
ret
cmp
xlat
sub
ficompl
xchg
clc
out
shlb
jp
and
imul
push
inc
jmp
xor
and
imul
pushf
fsts
xchg
jb
lret
aas
adc
sahf
sub
cmp
pushf
jge
pop
xor
adc
and
andb
pop
adc
lods
pushf
pop
mov
cmpsl
mov
or
mov
movsb
jmp
and
stos
cmpsl
or
sbb
mov
or
cmp
jmp
or
loop
add
ret
dec
xchg
bnd
hlt
cld
jge
jecxz
repnz
dec
mov
lcall
popa
dec
lods
inc
lea
mov
sub
add
add
enter
scas
mov
jno
pop
outsl
mov
sub
push
pop
mov
mov
or
enter
xchg
loop
out
int3
pop
push
clc
jecxz
push
testb
xor
pushf
iret
jae
push
pop
insb
mov
testb
iret
pop
out
mov
mov
std
lea
jl
ficoml
aas
adc
scas
sub
mov
sbb
into
inc
push
loopne
mov
frstor
or
pusha
push
xchg
fldenv
movsb
mov
inc
in
orb
clc
jo
std
push
in
push
and
bound
iret
pop
xchg
inc
out
xchg
imul
movsb
sub
xor
dec
dec
cwtl
dec
outsl
add
rcrl
jbe
pop
ror
mov
les
jo
insl
mov
add
ja
jecxz
dec
fimuls
arpl
or
pusha
jno
repz
fistpl
ja
xor
mov
mull
adc
sarl
out
xchg
dec
mov
add
pop
ljmp
pop
xchg
mov
xchg
xor
dec
cs
bound
add
test
sti
jne
and
jge
or
rclb
dec
mov
push
sub
xor
add
incb
pop
push
cmpsl
les
fwait
arpl
and
std
test
addl
dec
test
loopne
imul
push
dec
xchg
cmova
aam
inc
jb
inc
xchg
mov
pop
test
jno
cmp
call
xor
aaa
enter
pushf
idivl
jl
mov
fwait
in
sbb
stc
sbb
test
leave
cmp
and
aad
aad
lahf
dec
mov
add
rcrb
jp
test
jne
jmp
mov
pushf
loop
scas
jl
test
in
mov
lret
push
adc
mov
xchg
inc
inc
arpl
lret
icebp
push
jmp
xchg
jb
jmp
ret
xor
or
in
dec
dec
gs
or
sbb
sbb
inc
jge
leave
or
add
cmp
aaa
and
ljmp
push
push
scas
lods
lret
fwait
and
shl
lea
mov
mov
divl
cmc
jb
pop
add
xchg
dec
lods
adc
cli
inc
shlb
in
mov
xor
mov
pop
jb,pt
pop
push
es
cs
adcl
into
aas
fmuls
stc
jns
ficompl
out
mov
inc
cmp
decl
movsb
mov
std
pop
push
scas
ljmp
jns
and
adc
imul
or
out
inc
dec
les
fwait
mov
call
mov
jp
fsts
sub
idivb
add
lds
clc
add
popa
xor
fstpt
cld
das
push
pop
ret
out
sbb
ljmp
js
xchg
and
repnz
or
fs
jnp
das
mov
insb
stc
mov
xor
int3
pop
push
xor
or
inc
call
push
fisttps
addr16
mov
test
and
movsl
jo
adc
xor
test
mov
imul
mov
jne
aaa
aas
cwtl
pop
in
mov
ljmp
nop
jle
aad
xor
pusha
pop
mov
and
jae
adc
sahf
xor
sti
inc
sub
push
jg
mov
or
cmp
lahf
arpl
jp
lods
sub
mov
xchg
add
jmp
lret
mov
cltd
xor
cwtl
fst
mov
cmp
inc
jo
inc
push
mov
sub
pop
ror
sbb
aas
push
ja
lds
sbb
sub
mov
mov
pop
cli
sub
and
add
push
jle
jmp
mov
cli
ljmp
mov
cmp
jg
clc
and
inc
ja
push
and
psadbw
cwtl
mov
cltd
sbb
shl
cmp
fstl
push
push
adc
sbb
mov
rclb
pop
aas
jo
popf
data16
and
cmpsl
nop
repz
and
inc
push
push
xchg
aam
jo
dec
sbb
cmp
lret
out
inc
jg
sbb
in
jnp
or
push
mov
outsl
lock
fwait
out
leave
sbb
dec
xchg
sbb
sub
out
out
lahf
lods
shll
mov
test
mov
in
outsb
pop
sbb
mov
nop
mov
pop
sub
daa
mov
pop
in
nop
add
sarl
outsb
lds
out
fistps
pop
dec
insb
inc
movb
stc
mov
adc
pop
lret
adc
icebp
sahf
scas
shll
daa
push
ret
mov
mov
pop
aaa
rcrl
push
or
add
std
js
xor
insb
mov
adc
xlat
xchg
push
mov
ds
mov
cwtl
and
or
mov
dec
inc
arpl
mov
test
push
pop
test
cmpsl
out
mov
sub
ja
testb
dec
xchg
out
xor
mulb
lods
xor
sub
jbe
loope
in
fcmovne
js
add
je
aad
mov
cltd
stos
mov
xchg
cltd
rcll
lock
xchg
add
pop
add
into
popa
pop
fsubrl
and
fstl
sbb
sub
pop
int
sub
sbb
mov
in
sbb
lahf
aas
movsl
je
insb
fidivl
push
or
mov
test
push
insb
or
xchg
aaa
mov
stos
pop
adc
ret
daa
out
int3
fisttps
int
sbb
mov
xor
fdivr
pushf
inc
pop
mov
data16
cmc
adc
stos
dec
cmp
jnp
leave
stos
scas
cwtl
outsl
and
insl
or
cmp
in
add
push
push
mov
jecxz
and
dec
or
inc
stc
pop
fwait
pop
inc
in
test
and
outsl
jo
push
in
inc
je
pop
push
test
mov
sarl
out
fs
jne
je
scas
jmp
addr16
lahf
test
sbb
fildl
fistps
pop
or
adc
xor
adc
cwtl
mov
ss
cmpsl
push
mov
dec
shll
sub
mov
aad
jl
cmpsl
xchg
add
mov
jnp
fwait
inc
int
es
sbb
mov
pop
or
pushf
push
stos
push
daa
push
adc
xchg
int3
adc
cmpsb
outsl
adc
fcmovnbe
std
insl
mov
clc
ficoml
jae
data16
mov
cmp
jge
sub
jns
ret
ret
mov
lret
mov
pop
bound
inc
ret
jge
jae
jmp
mov
fiadds
dec
add
pop
mov
in
and
adc
pop
add
push
lods
aad
jl
cli
sarl
cltd
pop
fstpl
repz
pusha
pop
insb
stos
pop
add
mov
add
sbbb
inc
orl
in
insl
add
add
push
insl
mov
or
movsb
rolb
es
inc
add
out
pop
clc
push
jg
jge
and
mov
jle
ret
jb
dec
insb
ret
aas
jno
aad
cmp
mov
and
cmp
and
xor
aad
cwtl
jg
negl
shll
inc
cld
or
mov
mov
sub
cmc
and
cmp
cmp
movsb
lods
dec
test
repz
xchg
and
sbb
pop
pop
xor
and
mov
test
or
dec
int3
ss
call
call
adc
add
pop
iret
dec
mov
adc
ss
fiadds
mov
lret
jo
int3
ss
popf
cs
cmp
out
pop
sbb
cli
and
add
lea
pop
inc
das
pop
mov
adc
lock
xor
mov
nop
pop
inc
sub
in
push
scas
mov
xchg
mov
and
es
call
mov
adc
push
xchg
add
notl
neg
xor
out
orb
aam
jge
mov
or
aaa
aas
sub
out
push
or
mov
arpl
iret
pop
rol
inc
xchg
cmp
adc
and
and
in
xchg
mov
push
inc
inc
mov
dec
cmp
rcll
out
stos
cmp
lcall
es
xchg
arpl
shl
repnz
xchg
jo
xor
adc
rolb
cmp
dec
mov
push
imul
test
repnz
xor
outsl
add
mov
pop
fldl
adc
mov
sbbl
add
insl
pusha
add
sub
aas
adc
dec
or
jp
push
sbbb
mov
fs
jmp
aam
testb
sub
mov
ljmp
insl
out
push
addr16
push
mov
fcmovnbe
aam
mov
test
mov
ljmp
fwait
pop
stc
jb
out
std
loope
arpl
add
cmp
add
pop
mov
jns
cmpsl
roll
or
cmp
dec
xchg
scas
andl
mov
jecxz
jo
jmp
xchg
xchg
mull
or
sahf
or
jnp
pop
lret
push
ljmp
rclb
xlat
shll
xor
daa
cmpb
clc
and
or
add
xchg
mov
inc
loopne
jns
jae
sub
push
xchg
mov
mov
mov
lea
ftst
ljmp
pop
push
mov
lods
hlt
dec
lods
adc
or
rcll
push
sarl
pop
mov
and
hlt
dec
lcall
mov
pop
and
sarl
pop
push
lea
sbb
inc
xor
scas
in
movsl
push
or
and
push
mov
push
notl
jmp
test
xchg
xor
cli
test
stos
cmp
movsb
cmpb
cld
sti
rolb
repnz
loopne
mov
dec
cs
and
add
lods
jae
repnz
out
sahf
ljmp
clc
ds
adc
popa
cmpsw
ja
sbb
mov
inc
jb
and
repz
xchg
aam
ror
jl
insl
jecxz
jp
jno
inc
sub
cmpsl
pop
inc
mov
addr16
pop
mov
xchg
xchg
les
pop
sbb
test
scas
fisubs
cmp
or
xor
xchg
mov
repnz
repnz
sub
jg,pn
dec
cmp
dec
sarb
or
xchg
imul
dec
inc
loop
xorb
ret
stc
lret
cmpsl
sub
and
outsl
xor
int3
fabs
fimull
out
data16
and
mov
aas
and
xor
leave
jno
hlt
or
cmp
and
movsl
pusha
jno
mov
xor
lds
push
scas
icebp
jno
cmp
sub
add
fnstcw
fidivl
mov
gs
jo
mov
add
scas
mov
lahf
inc
inc
mov
popf
stc
sub
je
xor
arpl
fbstp
xchg
inc
xor
add
cmp
mov
clc
push
loop
lea
push
xchg
xor
insb
stos
out
out
inc
push
rcr
cli
jle
pop
mov
xchg
shll
xor
clc
jmp
das
jns
mov
lods
jp
xchg
lock
cmp
dec
adc
adc
pop
lahf
push
pop
or
xor
push
repnz
dec
add
out
inc
push
pop
and
push
jno
adc
xor
mov
subl
mov
fisubrs
push
mov
loop
sub
cmpl
xchg
sub
sahf
pop
mov
incl
xor
add
xor
ljmp
sti
pop
jge
add
cltd
inc
mov
cmp
pop
sahf
fs
mov
xchg
insb
bound
call
add
and
and
dec
mov
inc
push
jge
jge
mul
cmp
xchg
imul
mov
add
push
sbb
mov
add
cmp
stos
xchg
add
add
add
add
add
add
add
add
filds
rolb
add
push
add
ja
mov
jg
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
in
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
in
add
lods
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
out
add
mov
out
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
lock
mov
lock
lods
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
lock
cld
lock
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
repnz
dec
repnz
push
repnz
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
repnz
lods
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
