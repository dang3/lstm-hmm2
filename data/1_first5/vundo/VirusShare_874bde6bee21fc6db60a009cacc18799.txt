add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
movsb
push
scas
test
sbbb
add
add
pop
add
add
add
pop
add
add
dec
add
add
jg
inc
add
add
add
or
stos
add
add
or
sahf
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
fldl
jecxz
add
insb
add
or
add
repz
int
fwait
add
add
push
add
add
dec
add
add
add
add
or
popa
add
lods
add
inc
add
add
sahf
add
add
add
push
add
add
add
adc
or
or
dec
add
add
add
add
sbb
addr16
add
add
add
into
add
add
add
add
add
add
push
dec
add
add
les
pop
add
add
mov
add
aas
add
popl
test
add
add
jle
jbe
inc
add
add
test
add
add
dec
add
add
add
push
cmp
addr16
add
add
addr16
add
add
add
add
lret
add
add
cmp
pop
add
add
mov
flds
xor
or
add
add
add
add
add
add
add
add
add
bound
inc
add
stc
add
add
add
add
lret
add
add
adc
add
add
add
add
add
sbb
test
sahf
add
add
add
add
arpl
ja
add
add
add
popa
add
cmpsb
add
add
stc
add
add
add
and
add
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
mov
add
add
add
add
mov
adc
popa
add
add
add
out
add
add
xor
and
mov
add
stc
add
add
add
add
scas
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
test
inc
add
add
add
add
add
add
add
add
add
add
add
add
fs
add
add
add
add
add
arpl
and
dec
add
add
add
add
add
add
add
add
or
rolb
pop
add
cmp
fwait
add
xor
or
aas
add
add
add
data16
add
push
les
add
add
add
cwtl
add
add
add
scas
add
add
lea
jg
add
mov
add
add
add
add
add
test
add
add
add
add
add
add
add
lret
add
add
dec
add
add
add
add
add
dec
add
add
add
push
add
add
add
sub
push
add
xchg
add
add
push
add
add
filds
push
orl
add
sub
movsb
adc
mov
mov
daa
and
jnp
in
mov
mov
test
pop
push
mov
subl
and
mov
gs
sub
cmp
push
inc
xchg
sub
sub
ljmp
xor
pushf
scas
loopne
dec
mov
mov
das
xor
pop
sarl
xchg
cmc
sub
stc
sbb
dec
fdivl
inc
fdecstp
sub
add
push
dec
cmp
stos
or
in
test
sub
adc
ficoml
repz
pop
xchg
xorb
or
inc
or
mov
xor
popf
mov
mov
inc
xchg
mov
jle
aaa
push
jle
fistpl
or
jb
ret
pop
imul
xchg
inc
mov
and
std
icebp
push
cmp
inc
call
sbb
add
pop
jno
inc
mov
pop
ret
outsb
and
mov
adc
and
xchg
icebp
pop
into
and
xchg
out
inc
jg
xchg
cli
xor
push
xor
outsb
in
gs
cs
mov
sub
hlt
add
mov
ficoml
ss
cmp
fadds
jge
rcr
fnsave
rcl
jo
adc
cmp
lcall
inc
and
dec
leave
add
push
test
dec
stc
dec
cmp
sahf
dec
fldcw
jbe
hlt
lds
scas
daa
sub
ss
sbb
mov
sub
mov
test
loope
test
sbb
jo
push
outsl
push
inc
pop
xchg
jecxz
xchg
mov
push
das
mov
test
pop
pop
cmpsb
ret
repz
jbe
jno
fisttpll
jmp
smsw
xchg
jne
inc
cmp
sub
scas
adc
xor
and
cmp
sbb
cmp
mov
dec
mov
or
sbb
mov
adc
dec
lahf
sbb
mov
jecxz
flds
rcll
fldt
or
mov
sub
xor
push
orb
fcmovnu
or
dec
shl
rorb
std
sub
inc
inc
clc
xchg
mov
arpl
mov
mov
inc
jge
push
shl
dec
dec
dec
nop
imul
mov
sub
in
add
sbb
mov
icebp
es
ss
pop
sbb
add
sbb
shrl
dec
push
or
adc
movsb
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
stos
cmpsb
lcall
adcl
es
or
push
push
dec
jbe
xchg
mov
cli
ljmp
push
sub
or
push
mov
jbe
xchg
mov
jecxz
repnz
not
push
fsts
adc
sbb
cmp
dec
iret
mov
les
xchg
or
mov
int
inc
push
jmp
adc
adc
jbe
jno
adc
push
add
mov
mov
mov
pop
mov
jle
sbb
out
cwtl
lods
ljmp
jl
fldenv
fildll
movsb
mov
ret
ljmp
fcmovb
sub
sbbb
stos
cli
adc
mov
shlb
and
int3
mov
fcmovu
push
out
test
ss
mov
out
pop
arpl
loope
push
inc
rclb
sbb
jge
push
cmp
sbb
push
pop
movsw
push
pop
fdivrs
mov
cli
ljmp
push
xor
add
adc
push
jge
pop
jbe
rcr
stos
ret
fwait
rorl
xorl
push
inc
dec
pop
and
aas
cmp
pop
and
test
in
imul
rorl
out
mulb
outsb
jae
and
add
out
sti
repnz
iret
sti
mov
xchg
ljmp
push
sub
sbb
or
push
push
pop
jbe
xchg
mov
cli
ljmp
push
sub
sbb
or
push
push
pop
jbe
xchg
xchg
cltd
sbb
sub
shl
mov
xchg
lea
mov
sbb
call
popa
imul
bound
lret
in
gs
and
inc
push
mov
jne
sahf
scas
repz
cmp
jecxz
lds
clc
xchg
mov
sub
out
pop
mov
insl
in
rorb
pop
ljmp
mov
sbb
aas
je
pop
pop
mov
rorl
add
subl
sub
lcall
pop
ror
and
push
xor
es
addb
cmc
xlat
cltd
cmc
movsb
sbb
roll
int3
andl
int3
jb
mov
jne
add
dec
mov
inc
das
add
cmp
and
icebp
cmpsb
push
out
test
lcall
mov
lcall
mov
shll
lahf
inc
xchg
xchg
or
clc
or
lods
push
xchg
cmc
loope
mov
aas
adc
push
jp
fs
push
cmp
jb
xchg
xchg
inc
push
inc
ja
inc
cmpsl
int
mov
mov
adc
in
bnd
ret
mov
cmp
pop
testl
inc
shll
xchg
outsb
sub
das
mov
rorb
xchg
push
les
cwtl
lds
push
mov
add
adcl
jne
push
adc
les
dec
lock
int
mov
jl
mov
dec
fwait
push
push
mov
test
jl
pushf
rclb
xchg
sub
pop
jge
sbb
sub
test
aam
insb
icebp
negb
int
add
outsl
aad
lea
cmpsl
xchg
adc
xor
adc
inc
xchg
pop
inc
jno
mov
push
mov
xchg
pop
sub
mov
xchg
jp
aad
push
or
rep
sub
movsb
mov
or
jecxz
lret
dec
and
testb
sar
or
dec
dec
cmp
sbb
subl
sub
fwait
jo
into
punpcklbw
insb
fsubs
imul
ja
or
or
pop
jle
and
jmp
popf
and
jne
inc
ja
bound
lods
jp
loopne
lcall
pusha
mov
cs
idivl
popa
sbb
out
inc
add
push
cmpl
repnz
andl
repnz
cmp
mov
scas
lret
inc
pushf
hlt
inc
xchg
std
popf
loope
add
scas
aas
add
int
fisubrs
lahf
push
and
cmp
xchg
into
add
inc
add
adc
push
add
rolb
repnz
add
insb
or
mov
mov
push
out
add
rorl
das
repnz
cmp
imull
sub
test
fldt
push
push
aas
insl
mov
add
xchg
jl
jl
jmp
test
xor
test
icebp
push
insb
sub
inc
imul
lcall
cmp
mov
cs
adc
xchg
mov
mov
out
mov
sbb
rorl
or
imul
xor
push
scas
test
fs
push
inc
les
ret
push
lret
inc
inc
and
xchg
shrl
cmp
pop
adc
push
push
inc
adc
movsb
push
jecxz
in
ret
scas
xchg
dec
jl
test
or
cmp
out
int
cwtl
or
hlt
push
adc
in
cmp
gs
mov
mov
movsb
or
add
out
push
into
rolb
addr16
rcrl
mov
adc
imul
inc
hlt
cmp
cmp
cld
loop
rcl
xchg
dec
jp
ss
lret
dec
pop
sub
jno
idivb
movsb
add
pop
outsb
add
adc
fldt
andb
mov
stos
cs
in
mov
fcmovb
sbb
sbb
lret
add
fiaddl
lcall
jle
xor
mov
push
or
mov
cmp
addr16
dec
shlb
xchg
xchg
andl
lret
mov
dec
aas
xor
lds
iret
sbb
jae
jb
lcall
mov
pop
or
repnz
pusha
mov
xchg
cmp
pop
std
sub
cmp
mov
add
or
cmp
and
scas
push
and
ja
daa
test
mov
testb
mov
lds
insb
dec
jl
ss
jae
jae
arpl
jecxz
es
aam
stmxcsr
mov
call
dec
fmull
mov
lods
in
insl
push
lds
aam
movsb
jge
mov
or
xchg
out
and
call
jl
mov
mov
xchg
stos
xor
test
insb
mov
stos
sbb
iret
xchg
rclb
sub
ret
mov
aam
mov
push
stc
andb
sub
xchg
lret
mov
mov
hlt
je
sub
mov
xor
sbb
es
pushf
xchg
aaa
mov
mov
mov
pushf
lods
nop
lock
andb
add
xor
sbb
fidivrl
xor
xor
mov
loopne
nop
sbb
mov
pop
jbe
sbb
outsb
mov
pop
dec
mov
jg
lret
adc
je
xor
and
mov
mov
loopne
inc
fisubrs
leave
sub
and
repz
popa
adc
sbb
mov
mov
out
ljmp
jnp
imul
dec
cmp
test
int
adc
adc
sbbb
inc
mov
adc
and
mov
jecxz
push
popa
ds
pop
add
popa
xchg
add
ficoml
cmp
or
sub
cmp
in
in
fsubp
scas
int
push
loope
and
iret
shrl
cmp
inc
jnp
mov
ret
hlt
add
outsb
in
jl
movl
dec
jnp
fisubl
shll
cmpsb
mov
inc
xchg
cmp
mov
jo
xchg
cmp
mov
lcall
pusha
mov
push
sar
in
sbb
mov
mov
push
mov
mov
imul
daa
bound
or
push
or
adc
inc
inc
dec
push
add
pop
xchg
or
jg
icebp
call
aam
inc
mov
mov
cmc
sahf
sbb
jp
cmc
jne
rcrl
pop
mov
je
js
cmp
sbb
jb
scas
mov
dec
lcall
stos
rcl
mov
in
ja
arpl
sub
shlb
pop
dec
out
popf
icebp
xchg
mov
movsl
jnp
pop
jmp
push
sbb
daa
sbb
outsl
cwtl
inc
dec
jnp
jo
in
cwtl
dec
push
cli
outsl
jecxz
pushf
cmp
outsb
push
dec
insb
negb
jne
jnp
sub
pop
ds
pop
and
and
int
clc
call
fimuls
enter
sti
cmp
leave
inc
add
mov
adc
xchg
push
testb
pop
mov
jg
enter
push
or
mov
sbb
pusha
enter
into
lea
mov
xor
lds
mov
inc
outsl
es
shrl
cmpsb
sahf
int
cltd
or
xor
ficoml
lcall
ss
dec
cmp
push
flds
xchg
es
out
push
and
leave
stos
push
adc
xchg
and
jge
stos
into
mov
adc
into
pop
ret
push
jmp
xchg
inc
sbb
pop
cmp
lret
hlt
and
shl
loop
sbb
jo
sub
sub
lods
sbb
pop
aad
es
addr16
pusha
leave
rorl
sub
fbstp
outsl
add
dec
jbe
fcomi
inc
and
ret
fwait
pop
inc
cmp
inc
add
xchg
loopne
in
imul
pop
sub
and
and
jbe
mov
or
mov
push
push
xor
arpl
push
fucomp
xlat
jmp
aaa
fisubrs
gs
and
call
imul
out
push
int
mov
mov
dec
ds
sbb
add
xchg
and
mov
enter
add
sub
sti
dec
push
mov
in
sti
mov
and
mov
fwait
movsb
ret
xchg
ja
mov
xchg
jg
fidivrl
sub
clc
aam
imul
repnz
and
xchg
mov
gs
dec
jmp
add
mov
jmp
bound
orb
rcll
mov
in
iret
idivl
or
scas
lods
daa
out
lret
push
jo
push
stos
and
in
pop
cmp
stc
sti
test
stos
rorl
xchg
frstor
in
mov
movb
jae
test
lcall
pop
xchg
pop
lret
fdivrs
inc
data16
bound
jns
ljmp
cmp
inc
lret
jl
fbstp
lret
sub
jle
add
aam
icebp
leave
pop
xlat
xchg
orl
pop
test
popa
sbb
fimuls
scas
gs
call
push
jo
push
cmp
out
xchg
sbb
mov
mov
test
xlat
leave
add
and
cltd
lea
jo
subb
mov
push
mov
xchg
outsb
and
adc
dec
outsl
insb
loope
inc
sbb
loopne
push
push
roll
aad
cmp
lret
and
popf
xor
mov
push
es
test
push
xchg
mov
cs
lock
movsl
push
lock
incb
mov
pop
pop
cld
xchg
inc
sti
mov
mov
cmp
mov
hlt
adc
sub
push
sbb
cmp
and
xor
pop
data16
fwait
out
cmp
rorl
fdivrl
inc
jge
jmp
shlb
sub
jnp
sub
pop
xor
mov
or
push
sbb
push
cmpl
cmc
dec
js
fmuls
or
movsb
pop
sub
hlt
dec
or
jg
jno
mov
inc
out
iret
jmp
sbb
xlat
loop
jmp
movsl
cmpsl
adc
mov
frstor
mov
icebp
ficoml
shrl
imul
pushf
ds
mov
test
lea
cwtl
dec
xchg
jmp
das
cltd
pop
mov
shl
adc
movsl
fdivr
push
add
xor
lea
cltd
arpl
xchg
icebp
aaa
cld
scas
andb
mov
stc
out
sbb
mov
mov
add
pop
imul
sub
shll
mov
orl
subb
xchg
jnp
das
or
rolb
pop
xchg
loop
cltd
int
popf
cltd
mov
jle
adc
cmpsb
pusha
jmp
adc
inc
dec
mov
sub
test
test
sub
inc
adc
push
pop
xor
int3
pop
cmp
rorl
sbb
test
push
sub
sti
mov
sbb
and
jnp
push
jge
mov
or
xor
adc
xor
sbb
ss
add
mov
lret
data16
fsubl
jmp
mov
or
and
and
nop
jnp
sbb
loope
test
js
into
mov
cmp
mov
push
sub
sub
test
sbb
xlat
aam
cmc
icebp
cltd
add
mov
stos
inc
and
mov
test
bound
fxch
xchg
xchg
je
xorb
bound
lock
mov
dec
ss
insl
pop
mov
pop
cwtl
jle
ljmp
aas
cmpsl
cmp
test
scas
mov
mov
imul
xor
inc
cmpsl
push
pop
inc
xchg
test
and
cmpsb
ja
imul
cmpsl
jmp
add
icebp
clc
and
test
in
sub
add
ljmp
lret
cmp
and
arpl
and
outsl
outsb
loop
push
inc
push
xchg
divl
loop
stos
mov
mov
mov
ss
clc
pop
leave
pushf
outsl
or
in
mov
movl
sub
mov
xchg
xor
cmp
jg
mov
add
adcl
aad
les
pop
pop
pushf
inc
enter
adc
mov
mov
pminsw
mov
cmp
jmp
call
in
es
sahf
xor
insb
and
inc
test
sarb
jbe
fs
jge
xor
mov
xchg
add
mov
mov
or
xchg
mov
xchg
addl
lds
mov
inc
cmp
pop
insl
push
jb
sarl
pop
outsl
test
lahf
mov
icebp
mov
jl
call
pop
shl
mov
pop
lods
loope
int
mov
rol
leave
cmp
or
jne
rcrl
mov
popa
mov
xor
pushf
push
stos
dec
lods
shlb
pusha
lcall
mov
je
sub
in
push
clc
fcoml
idivb
jmp
jmp
xchg
std
into
xor
mov
shll
insb
xor
lods
hlt
outsl
add
mov
lret
enter
mov
jecxz
jecxz
inc
push
mov
xor
mov
es
mov
and
repz
pop
ret
jge
cmpsl
fiaddl
add
pop
mov
in
stos
mov
and
pop
adc
pop
jbe
sub
adc
xchg
mov
sar
mov
dec
pop
ficompl
mov
mov
aaa
je
push
mov
call
xchg
test
rcll
sbb
lods
insb
stos
subl
and
fwait
or
loope
outsl
sbb
fwait
shrl
pop
test
arpl
push
popa
cmp
cli
shr
push
mov
js,pt
sub
push
mov
cli
pop
adc
loopne
pop
jmp
iret
xchg
add
jle
mov
push
mov
xor
and
mov
cli
aam
adc
jns
sbb
jp
out
les
lods
addr16
lds
cwtl
stc
cli
xor
and
mov
pop
sahf
mov
push
sbb
cmp
pop
lret
push
jae
sub
test
aas
dec
out
scas
loopne
mov
je
fdivl
jg
int3
lds
sub
cmp
test
jge
stos
ficoml
adc
test
lock
dec
dec
fmull
push
into
pop
js
mov
or
and
mov
xor
pop
pop
icebp
popa
xchg
lods
pushf
mov
mov
in
xchg
shl
movl
mov
cmc
dec
ret
inc
pop
xchg
mov
mov
pop
lahf
dec
add
jae
lret
pop
call
push
jecxz
out
fldenv
mov
je
repnz
push
or
cmp
dec
jnp
or
loopne
adc
cmp
enter
enter
or
out
xchg
out
das
loop
aam
jecxz
stos
jbe
pop
and
fmuls
mov
sub
sub
orb
test
pop
jmp
outsb
ror
insl
xchg
enter
xorb
jmp
or
sub
fidivrs
gs
imul
mov
insb
lret
xchg
pop
dec
iret
popa
mov
into
loopne
and
sbb
cmpsl
add
inc
push
call
arpl
loope
movsb
out
add
add
test
and
pop
jnp
cmp
out
inc
imul
inc
stos
mov
adc
test
aas
mov
adc
push
les
inc
dec
dec
pop
or
mov
or
jae
mov
push
ret
sub
insb
aam
mov
daa
iret
daa
adc
insb
xor
mov
rclb
or
fbstp
jg
xlat
push
jnp
adc
adc
jbe
shlb
loope
clc
cmp
cs
push
test
dec
pop
fwait
dec
movl
cld
mov
sahf
stos
in
outsl
rcr
les
psubb
pop
jecxz
fstpt
or
loope
rcll
jb
arpl
inc
dec
jmp
mov
mov
scas
mov
mov
pop
lods
jl
stos
rolb
test
shll
dec
in
inc
mov
stos
or
sbb
imul
cmc
cli
iret
pop
mov
xor
mov
cmpsb
cmp
and
mov
cmp
or
fs
inc
insl
stos
lret
xchg
pop
lds
add
or
shr
push
iret
jecxz
mov
and
fsubrs
push
mov
jp
dec
test
sub
xchg
mov
test
adc
fnstcw
test
nop
dec
xlat
jne
mov
mov
xor
xchg
mov
mov
push
jo
incl
int
addr16
ffreep
rorl
fucomp
add
dec
jmp
les
loopne
inc
jg
xor
mov
sbb
rep
mov
and
mov
and
rcrb
push
mov
cld
clc
repz
mov
in
shl
jecxz
in
push
pop
push
in
test
sbb
sbb
mov
mov
xor
or
push
cmp
rcrb
jnp
pop
pusha
sbb
mov
addb
sub
jo
pop
and
leave
sar
add
sub
mov
mov
pop
stos
push
mov
fdivs
mov
mov
pop
mov
rorl
mov
jmp
std
add
mov
jge
inc
lret
add
out
ljmp
xchg
cmp
fcmovne
test
mov
hlt
fs
push
stos
repz
inc
fsubrs
test
nop
in
cwtl
mov
xchg
ds
xor
xor
jcxz
mov
push
push
pop
and
add
inc
lock
or
das
cs
lcall
lcall
push
js
or
jge
sbb
dec
pop
sub
add
inc
mov
hlt
jns
stc
ret
jle
loopne
pop
and
push
inc
pop
dec
pop
cmc
ds
outsl
and
insl
mov
call
push
lods
pop
mov
xor
cmpl
scas
push
push
lret
sub
test
jns
mov
int
je
and
ret
dec
pop
pop
xor
test
lahf
xlat
jmp
pop
movsb
fdivr
inc
test
dec
push
test
lret
xchg
xchg
xchg
iret
sub
icebp
enter
or
sub
push
adc
xor
fldl
int3
or
addr16
cmp
lret
lea
push
mov
inc
stos
rorl
xchg
add
fcmovnu
sub
pop
cmp
push
pop
xlat
inc
jp
pop
push
push
shlb
pop
add
mov
in
pusha
addl
mov
shr
xlat
or
aas
jns
xchg
ret
xchg
cmpsl
shr
bound
jns
loop
mov
aam
aas
mov
jae
mov
push
imul
inc
loope
mov
push
pop
pop
xchg
stos
cmc
orl
ds
inc
jg
push
push
gs
lds
fstps
rorb
push
cmp
jo
jmp
scas
ljmp
mov
sbb
mov
popa
in
addl
pushf
aas
mov
lods
jle
sbb
or
xchg
cld
pop
jmp
xor
dec
shll
cmp
ret
and
push
mov
mov
cltd
aam
iret
les
in
sbb
add
aad
adc
movsb
mov
movsl
cmp
mov
jl
adc
mov
mov
jle
add
ret
inc
test
pop
adc
jg
xor
fdivl
inc
cmp
cmp
fs
xor
loopne
pop
add
mov
addr16
add
push
dec
jbe
jp
pusha
jecxz
mov
xchg
dec
jp
shlb
mov
xor
imul
cld
mov
sbb
sarb
jp
ja
pop
outsl
pop
dec
sahf
dec
js
mov
push
adc
mulb
adc
pushf
and
aaa
out
jp
imul
mov
sbb
push
push
add
addr16
and
frstor
fdivrl
mulb
xchg
mov
addr16
mov
mov
mov
arpl
out
sbb
push
xchg
int3
and
lahf
and
mov
repnz
je
aas
pusha
pop
xor
dec
mov
lods
sbb
iret
rcrb
jns
mov
and
or
pop
push
ljmp
movsb
jns
imul
mov
push
jle
or
mov
jmp
adc
jp
rcll
fcmovnbe
scas
in
jno
push
inc
jmp
add
es
roll
jae
dec
mov
outsl
mul
mov
pop
mov
sub
mov
movsl
sub
lretw
stos
pusha
push
add
in
xor
cmpsl
pop
xchg
xchg
insb
sbb
mov
dec
add
inc
daa
push
mov
fsubl
pop
lcall
iret
fsqrt
mov
inc
dec
xor
sti
or
popf
pop
xchg
cmpsb
pop
addl
pushaw
insl
fdivs
jmp
xchg
mov
js
push
in
popa
adc
outsl
jle
mov
jnp
or
aaa
in
or
mov
call
cld
or
mov
jbe
into
rol
loopne
mov
cmp
int
xchg
xchg
jg
sahf
adc
loopne
outsb
lods
lds
jno
loop
cmp
xchg
lcall
repz
test
mov
in
push
roll
pop
fcom
mov
in
cmp
jmp
jne
xor
or
inc
xor
lds
pop
or
jl
dec
sbb
popa
fidivl
cmp
pop
jnp
test
aaa
and
in
lcall
pop
cli
int
cli
lock
jnp
adc
cltd
fstpl
outsl
test
pop
test
scas
jge
insl
push
in
or
dec
mov
lea
mov
mov
jns
pop
mov
xchg
imul
jno
movsb
mov
icebp
add
lcall
sbb
pushf
jae
and
and
sub
jl
bound
lea
repz
pop
xchg
jnp
mov
sub
test
sbb
hlt
adc
stc
movsb
dec
xor
adc
jns
pusha
lods
adc
sbb
cli
ljmp
push
sub
sbb
or
push
push
pop
jbe
xchg
mov
cli
ljmp
push
sub
sbb
or
push
push
pop
jbe
xchg
mov
cli
ljmp
push
sub
sbb
or
push
push
pop
jbe
xchg
mov
cli
ljmp
push
orb
xchg
cltd
movsl
mov
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
insb
inc
jl
dec
fs
or
push
adc
dec
sbb
in
cld
test
fcoml
movsb
pushf
inc
insb
inc
jl
dec
fs
adc
add
xor
and
fsubrp
cld
nop
int3
fcoml
movsb
pushf
dec
insb
pop
jl
dec
jl
or
or
sbb
ror
mov
mov
jmp
inc
or
sub
mov
ljmp
das
lock
cmp
stos
js
mov
fs
cmp
pop
je
rcl
sti
ret
les
in
adc
push
cmp
insb
shll
pop
mov
pusha
fnstcw
stos
cmp
jnp
mov
or
movsb
leave
sbb
lods
rorl
xchg
push
jge
dec
out
dec
xor
and
loopne
lods
jmp
adc
xlat
in
hlt
jb
mov
sub
sub
ret
and
xor
fsubrl
in
ds
cmp
inc
test
dec
jmp
aas
aam
setns
adc
in
or
in
push
push
xchg
dec
push
cltd
movsb
pushf
xchg
insb
inc
jl
dec
jae
add
push
cmp
or
sbb
in
fdivr
in
int3
std
fmull
mov
scas
adc
add
jo
imul
add
xchg
loopne
rorl
sar
sub
or
push
pop
arpl
test
xchg
mov
ret
not
stc
movsb
repnz
cmp
inc
add
xor
and
aam
cld
hlt
int3
in
xchg
lods
test
insb
inc
jl
dec
fs
adc
add
xor
and
aam
cld
hlt
int3
in
xchg
lods
test
insb
xchg
mov
xchg
div
xchg
sub
cmp
ljmp
xchg
imull
mov
aad
adc
jecxz
jl
out
ja
les
push
mov
mov
pushfw
lock
sbb
mov
insl
test
add
or
cmpsl
jno
psrld
dec
mov
in
out
iret
sahf
adc
repnz
adc
insb
add
ud0
pop
add
mov
mov
inc
push
mulb
test
hlt
add
pop
test
ljmp
sub
fnstcw
cmp
push
jae
mov
rclb
cmp
ret
test
negl
push
mov
ret
inc
jl
fstpt
sbbb
dec
mov
sbb
inc
sbb
hlt
xor
in
mov
sbb
leave
inc
insl
dec
dec
adc
add
and
jp
int
daa
scas
ja
in
mov
lock
or
xor
mov
ljmp
pushf
les
mov
mov
cmp
mov
xor
dec
mov
push
inc
push
notb
les
and
xchg
inc
pop
in
popf
shlb
ds
and
and
pop
daa
dec
cmp
cmpsl
sub
loop
jecxz
sbb
push
out
jo
int
sbb
inc
into
stos
adc
dec
aaa
xchg
cld
lock
mov
imul
push
xchg
les
pushf
outsl
in
in
add
fsubs
xor
cmc
fbstp
dec
imul
inc
fstl
pushf
sub
or
xchg
lea
mov
push
adc
bound
cmpsl
sub
xchg
inc
dec
das
add
mov
ret
in
push
mov
mov
loopne
xor
push
pop
popa
clc
cmpsl
aam
or
xorl
xchg
inc
dec
sub
dec
xchg
xchg
mov
stos
pop
xchg
ficoml
xchg
mov
pop
xor
push
adc
fldenv
push
cmp
cmpl
fwait
push
lock
mov
cwtl
or
pop
loopne
int
jp
mov
faddl
inc
cwtl
mov
add
out
mov
fwait
js
jnp
push
or
lcall
sbb
cmp
into
jns
daa
cwtl
mov
add
in
push
push
cmp
sub
sahf
mov
jne
sub
jg
xlat
jb
inc
mov
cmpsl
arpl
mov
sahf
js
mov
xor
inc
out
mov
jno
jge
aam
inc
and
lods
inc
lods
inc
sub
sti
cwtl
pop
addr16
shr
sbb
in
incb
roll
jl
js
mov
add
decl
sbb
pusha
mov
sti
into
dec
loope
jno
inc
mov
aaa
pop
pop
popa
mov
xor
xor
sbb
roll
mov
xor
pop
lods
ja
scas
stos
add
dec
pop
cmp
xchg
adc
cmpsl
xchg
cmpsl
and
hlt
inc
aaa
data16
mov
int3
addr16
fs
mov
cmp
push
mull
scas
mov
sbbl
inc
push
jecxz
cmp
or
xchg
sbb
push
adc
out
and
cmp
jae
pop
jecxz
mov
or
stos
add
push
div
ds
and
insb
jmp
xorl
mov
mov
adc
inc
mov
int3
and
test
into
mov
stos
sub
fistps
popa
int
dec
mov
and
repz
lock
vzeroall
inc
pop
push
les
into
outsl
orb
scas
sar
repz
push
or
call
ja
stos
fdivr
sahf
mov
mov
shrl
lahf
mov
dec
adc
sub
lods
in
bound
or
sub
mov
inc
xchg
and
push
xchg
cmp
rcll
repz
dec
cmp
rorl
jg
dec
fldcw
xor
dec
add
xchg
shrb
clc
sbb
scas
mov
sub
dec
rorb
xchg
jp
cmpb
mov
push
or
inc
push
cmp
push
divb
mov
dec
mov
ret
inc
data16
clc
or
dec
pop
cmp
adc
fcmovu
daa
mov
mov
ja,pn
xor
sbb
fimuls
pop
mov
mov
and
std
mov
xor
jns
leave
dec
dec
pop
fstpt
sahf
repnz
test
dec
sbb
pop
cmovae
xchg
mov
cs
shl
jmp
mov
je
clc
sbb
xor
mov
mov
insl
fs
push
and
adc
mov
repz
xchg
arpl
std
adc
cs
cmp
mov
test
xchg
sti
in
jne
jbe
js
mov
pop
adcl
lret
test
ljmp
inc
jnp
cmp
call
sahf
mov
adcl
fwait
mov
rep
mov
push
fmulp
sbb
adc
repnz
pop
sbb
stos
ret
repnz
sbb
addr16
mull
mov
int
insl
pop
dec
scas
jno
xchg
dec
shrb
inc
and
call
xchg
icebp
xor
dec
imul
imul
mov
xchg
scas
xorb
sub
rolb
call
jg
inc
cmp
loop
clc
push
idivb
xlat
mov
js
outsb
mov
pop
sbb
sub
jns
pop
call
decb
cmpsb
jae,pt
scas
je
mov
cmpsl
cwtl
pop
fdivrl
popa
push
mov
int3
push
psubsw
xor
adc
cmpsl
into
fcomps
jmp
shrb
pop
pop
xor
cmpsb
lcall
nop
arpl
cmp
sub
pmulhuw
jnp
je
inc
cmp
ss
xchg
push
lahf
and
add
mov
add
xchg
sub
mov
outsl
mov
jg
cmp
jg
subb
mulb
iret
add
push
ds
shll
leave
cmp
arpl
in
out
ljmp
rolb
add
std
and
xor
fcoms
mov
pop
push
test
out
lds
bt
cltd
arpl
jae
mov
xchg
adc
sub
xchg
mov
lret
pop
jmp
sbb
ljmp
shll
or
push
out
scas
or
mov
add
js
push
xchg
fs
lock
push
out
fstpl
inc
inc
dec
push
mov
cli
adc
outsl
jbe
lret
and
mov
aas
fistl
cli
adc
sub
icebp
jg
clc
xchg
xor
arpl
sbb
jo
pop
test
rorb
cmp
popf
add
call
mov
cmp
or
ljmp
addr16
add
or
loopne
cld
jns
sarl
add
jl
mov
arpl
cli
mov
add
negb
adc
jecxz
fidivs
icebp
mov
pop
in
hlt
jae
add
cltd
dec
insl
movsb
or
popa
sbb
loopne
or
sub
nop
ret
sbb
xchg
fldenv
mov
aam
dec
test
cmpsl
pop
stc
fcoml
call
cmpsb
lret
fwait
jno
sub
xor
ret
pop
ljmp
inc
mov
cmp
add
push
push
aas
xor
rcr
or
lret
andb
fs
or
jno
add
ret
ds
sub
sahf
cmp
sbb
pop
xchg
mov
mov
xor
jnp
not
sub
hlt
mov
xor
imul
cmpsl
pushf
pandn
inc
in
scas
mov
add
in
pop
and
in
sbb
in
mov
mov
add
cmc
adc
push
mov
fisttpl
scas
sbb
test
mov
popl
ret
push
mov
mov
push
and
sbb
sbb
outsb
mov
lds
addr16
aam
insb
inc
xor
mov
dec
push
push
mov
cmp
data16
insl
pop
aad
hlt
pop
out
mov
lock
xchg
addr16
add
div
dec
xor
rclb
test
sub
sub
mov
out
inc
bound
lcall
rcrl
sub
cltd
ss
imul
call
out
std
mov
and
in
mov
cld
int3
sbb
jl
daa
xchg
cmc
xor
xchg
xor
scas
ret
xchg
sbb
xchg
int
push
ds
addb
inc
jp
out
sub
push
data16
jno
test
rcr
mov
jne
repnz
mov
sub
inc
and
and
mov
and
loope
stc
add
jns,pn
rcl
pop
push
ja
fdivrl
sbb
or
bound
mov
daa
adc
pop
popf
les
adc
inc
inc
dec
xchg
push
fsubl
inc
rcrl
mov
dec
or
sub
xchg
cmpl
sub
sbb
ss
xor
sub
mov
jo
pop
dec
xchg
cmp
push
add
lds
je
fiadds
cmpsl
adc
stc
sub
je
mov
sbb
push
sbb
cmp
jne
gs
push
dec
insl
jo
fidivs
test
aas
jmp
sub
divb
test
add
loop
lds
inc
testl
ljmp
xor
jle
dec
or
push
jmp
xchg
jb
mov
jmp
dec
repz
stc
out
pop
inc
stc
rorb
lcall
cmp
jns
dec
dec
insb
addr16
xlat
ljmp
or
dec
out
xor
push
mov
mov
adc
jno
jmp
xchg
inc
push
mov
xchg
cmp
inc
or
sbb
int3
jae
jmp
test
mov
lock
fisubs
cwtl
arpl
sub
arpl
push
or
decl
imul
cs
imul
adc
sub
fnstenv
dec
incb
mov
imul
push
jnp
sbb
and
lds
fldl
call
pop
xchg
lods
sbb
loop
andb
cld
or
cmp
fisubs
out
stos
push
pop
mull
or
cmp
out
cmp
aas
push
bound
je
add
lcall
aaa
out
cltd
std
push
std
test
mov
imul
adc
ja
lret
and
or
sbb
inc
je
es
inc
xor
sahf
mov
rol
fcmovnu
notl
push
cmp
sbb
xor
stc
pop
sbb
popf
sbb
gs
push
xor
adcb
push
xlat
xlat
cmpsl
fisttpll
inc
jmp
mov
pop
fnsave
bound
scas
call
ret
xchg
pop
jmp
inc
lcall
incl
push
movsl
mov
std
ljmp
jge
enter
call
fcoms
jne
aad
xor
dec
adc
add
gs
sub
sahf
mov
std
mov
inc
and
mov
test
test
ja
fiaddl
mov
sbb
pop
cld
adc
cmova
pop
sub
adc
in
xor
jl
insb
pushf
das
push
leave
lock
nop
pop
lds
dec
or
fs
sbb
or
in
mov
add
xchg
xchg
aaa
jae
lea
pushf
in
hlt
cmpsb
fmul
ret
push
adcb
aam
pop
dec
mov
cmp
sub
in
in
test
pop
pop
rorb
outsb
js
cmp
sbb
and
popa
ret
mov
mov
add
lock
cmp
mov
daa
aaa
into
scas
test
pop
enter
lods
scas
sub
js
mov
push
mov
mov
iret
into
lods
out
inc
sar
daa
fs
push
or
dec
bound
inc
mov
jp
lea
pop
inc
jne
pop
rep
idivb
mov
rcrb
cmp
jecxz
lahf
add
push
ljmp
pop
pop
arpl
hlt
adc
ljmp
sub
mov
cmp
adc
mov
jmp
test
insl
lcall
and
aas
out
inc
push
push
add
sbb
into
in
js
cld
mov
mov
gs
mov
cmpsl
adc
jbe
pop
inc
jb
mov
popf
jecxz
cmp
dec
fwait
mov
and
inc
in
or
lock
jb
mov
ja
arpl
mov
jns
sbb
clc
mov
jle
fdivs
xchg
test
inc
popf
fwait
dec
or
loop
push
xchg
jle
adc
lock
jns
push
jno
push
or
cmp
cmp
cmp
jb
fisttps
adc
movsb
iret
add
jnp
gs
xchg
inc
sbb
xor
mov
je
xchg
test
ficoml
xor
mov
pop
pop
or
dec
push
add
xchg
adc
inc
xchg
ss
pusha
add
jo
dec
sub
xchg
popf
xchg
cmp
adc
ljmp
rorb
dec
mov
mov
insb
addr16
std
pushf
leave
inc
push
adc
mov
das
mov
popf
int3
decl
xchg
adc
stc
push
jne
test
scas
cmp
lods
or
sbb
mov
mov
xchg
pop
stos
rorb
jl
pop
ret
js
sti
jns
mov
adc
and
adc
add
fwait
sti
pop
pop
mov
and
hlt
jbe
pop
imul
dec
ret
cmc
out
mov
mov
inc
push
out
data16
cltd
inc
sub
xchg
pusha
in
int
jmp
pop
and
ret
pop
xlat
daa
adc
lds
cmp
pop
sbb
imul
jb
fldt
xchg
iret
int3
test
cmp
push
pop
add
inc
fwait
sub
dec
fildl
sbb
jg
sub
mov
in
sub
jbe
add
loop
iret
mov
int3
popa
clc
pop
lds
jnp
call
shll
xchg
stos
addr16
sbb
test
inc
loopne
dec
push
mov
mov
popa
xchg
push
inc
push
insl
mov
in
gs
in
leave
mov
pop
mov
adc
push
movsb
das
lret
jecxz
rcll
xlat
call
dec
into
mov
xor
pop
xor
xchg
jp
inc
mov
stc
ds
inc
lds
repz
imul
dec
jmp
popf
mov
loope
daa
jle
frstor
cmp
xchg
addr16
pop
sahf
push
adc
test
xchg
jnp
dec
dec
fwait
add
fwait
or
sbb
aaa
xor
addr16
outsl
imul
int3
dec
inc
mov
pop
shrl
mov
dec
pop
pop
jnp
and
or
xchg
sbb
inc
hlt
sbb
lret
cmp
xlat
mov
mov
mov
mov
push
inc
cmp
bnd
sbb
in
inc
repnz
mov
and
mov
jb
pop
int
pushf
leave
scas
lret
push
inc
dec
xchg
xor
mov
incl
fwait
inc
stc
mov
ficomps
out
or
pop
aas
lcall
or
adc
lds
push
adc
ffreep
pop
inc
push
and
adc
lcall
pop
lods
and
mov
lahf
gs
mov
fs
out
pop
lods
dec
jnp
test
out
push
stos
push
roll
stc
popf
out
stos
jns
or
push
cmpsb
or
inc
ret
mov
data16
out
cltd
negb
mov
into
inc
adc
pop
addr16
lods
add
lods
mov
enter
arpl
in
add
ret
repz
addl
mov
xchg
cmp
dec
pop
cmp
movsb
daa
js
daa
dec
push
adc
jb
mov
add
xchg
sbb
test
rcr
int
pop
stc
nop
ja
pop
sub
into
mov
sub
es
negb
and
adc
ror
jle
jg
cmp
aaa
xor
and
add
dec
inc
xchg
jecxz
enter
mov
jle
mov
aas
xor
mov
add
pop
sbb
lods
jo
or
mov
std
mov
sti
add
movsl
lock
or
adc
sbb
xlat
aam
les
lret
sar
jo
enter
xor
icebp
xchg
mov
xor
mov
xchg
xor
stos
aad
mov
repz
ret
int
dec
out
xor
xchg
subb
test
notb
insb
das
mov
push
xor
ds
push
lods
or
inc
jecxz
and
jo
or
test
stos
cwtl
cltd
pusha
nop
lcall
mov
push
mov
sub
cmpsl
stc
cmp
xchg
mov
int3
fcoml
jns
jp
sbb
inc
mov
add
add
mov
sti
cwtl
mov
xor
mov
pop
int
lcall
jnp
int
repnz
xor
gs
cli
rcrl
or
aad
mov
lret
mov
push
insb
or
lds
dec
std
mov
jmp
mov
nop
inc
cmpsl
arpl
mov
cld
int
pop
mov
fcoms
mov
fcomps
pop
shll
jne
out
mov
bound
or
les
mov
and
sbb
dec
test
cmc
gs
sbb
mov
icebp
adc
jbe
cwtl
mov
aaa
pop
ficomps
lock
out
in
push
mov
push
jne
xor
or
cmp
test
mov
mov
outsl
inc
add
push
xchg
aam
orl
or
jo
data16
jo
test
js
sbb
out
rcll
sbb
or
es
jle
pop
ja
mov
js
pop
daa
outsb
outsl
sbb
and
mov
cmc
ss
mov
mov
nop
or
push
andl
cmp
outsb
test
inc
pop
jmp
lods
mov
mov
int
jp
mov
ja
add
pop
sub
orl
cmp
inc
push
or
push
pop
mov
push
or
rorb
xchg
icebp
ret
or
in
stos
insb
cmc
inc
jp
ficoms
sbb
fildll
or
xor
jmp
sarl
fs
sbb
dec
out
adc
stos
in
mov
andl
cmpsb
lcall
jno
mov
dec
les
lods
mov
jbe
in
pop
adc
xlat
int3
mov
cmc
and
adc
push
fsubs
pop
mov
and
mov
in
pop
sub
insb
xor
in
in
lcall
add
xor
orb
out
repnz
inc
jl
push
push
das
clc
jg
xor
dec
sbb
rcrl
loop
dec
mov
or
icebp
ds
rcr
ret
int3
clc
cld
cli
xor
jnp
mov
xchg
aas
mov
dec
pop
xlat
fld
test
lods
addr16
push
adc
jno
xchg
xchg
xlat
jmp
sbb
mov
sbb
ja
push
idiv
sti
test
fcoms
cwtl
movb
cltd
cmp
xchg
fists
push
clc
xor
xchg
or
push
ja
push
push
push
cmp
cmp
icebp
jecxz
shl
sub
ficoms
inc
inc
xchg
xlat
lock
push
dec
addr16
iret
push
push
add
inc
sbb
xor
fsubrs
push
aam
loope
lds
sub
rclb
int
ret
add
lds
pop
cmpsl
and
mov
out
jo
stos
mov
fsts
movsl
cmp
sub
inc
mov
aad
jecxz
pop
push
out
jmp
xchg
sub
decl
in
mov
jle
inc
pop
shrb
sti
fscale
or
inc
mov
ljmp
imul
add
pop
arpl
or
rorb
rcl
je
imul
rolb
mov
sbb
fnstcw
roll
xor
mov
mov
ja
out
mov
pop
mov
mov
mov
cmpsb
cwtl
sbb
shlb
dec
xchg
das
jnp
cmpsb
push
push
or
movsl
lret
mov
push
add
sbb
jl
adc
lds
xchg
jl
lahf
pop
mov
orl
add
addr16
in
pop
push
roll
cmp
jae
mov
clc
jo
pop
stc
mov
inc
xor
fadds
adc
jno
lea
ja
pop
fnstcw
in
pop
mov
sbb
lcall
rorl
fists
fwait
mov
lds
pushf
jmp
lahf
sub
inc
sub
xor
jecxz
pop
sub
das
or
jns
xor
clc
loopne
and
sub
shl
cmp
pop
je
and
add
int
mov
gs
mov
xlat
js
out
xchg
outsl
pop
imul
imul
mov
cmpsb
mov
mov
fcmove
ljmp
lcall
lcall
dec
sbb
sti
data16
cmp
call
pop
arpl
jmp
mov
pop
cwtl
pushf
jl
jnp
data16
dec
sti
in
cs
scas
mov
out
sub
xchg
cltd
dec
push
mov
out
sbb
inc
in
xchg
shlb
ja
xor
into
push
or
push
in
dec
maskmovq
testl
push
divl
es
arpl
mov
loop
imul
xlat
test
mov
iret
and
mov
and
loopne
mov
sub
mov
cmpsl
inc
cmpb
mov
dec
idivl
ficoml
std
loope
inc
inc
mov
ss
stos
or
cmp
ffreep
pop
lods
add
je
inc
push
scas
jne
pop
mov
xor
cld
sbb
arpl
cli
rol
cli
pop
cli
or
popa
sbb
fsubrl
push
pop
mov
sahf
push
or
pop
cmp
loop
xor
mov
adc
xchg
xor
sbb
lods
mov
ret
into
push
xor
mov
jb
dec
or
pop
sbb
mov
ljmp
frstor
pop
es
push
jge
bound
fs
adc
add
xor
and
aam
cld
hlt
int3
in
xchg
lods
test
insb
inc
jl
dec
fs
adc
add
xor
and
aam
cld
hlt
int3
in
xchg
lods
test
push
fs
adc
add
xor
and
aam
std
lock
in
xchg
lods
cmpb
jo
inc
dec
fs
adc
add
mov
movsb
jecxz
adc
push
pop
int3
in
jecxz
or
dec
jae
arpl
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
jmp
mov
cmpsb
ljmp
out
test
or
ss
popa
push
je
inc
push
data16
xchg
mov
test
hlt
mov
aam
je
xor
sub
adc
xor
inc
inc
jbe
data16
xor
add
mov
out
push
pop
and
inc
adc
sbb
adc
adc
ficoml
outsl
insb
mov
shl
jecxz
xchg
aaa
cli
or
insl
mov
mov
test
jecxz
mov
or
jle
insb
mov
leave
pushl
loope
in
aaa
hlt
xchg
insb
fwait
test
mov
in
and
sti
xor
fstps
sti
or
stc
mov
or
push
xor
addr16
adc
jmp
jmp
add
jns
dec
push
stos
sbb
sub
jmp
pop
es
add
and
jnp
xor
inc
jl
outsl
fcoml
int3
add
inc
je
add
cltd
xchg
xchg
mov
test
mov
imulb
push
cmpsb
push
fdivl
or
add
push
inc
jbe
and
xchg
ret
idiv
out
xchg
xorl
push
gs
or
add
add
pop
lds
mov
jne
popa
push
js
pop
xor
shlb
adc
aad
rcl
fisubs
not
out
push
xor
add
adc
fs
je
inc
jbe
data16
xchg
mov
test
hlt
mov
aam
and
xor
add
adc
fs
je
inc
jbe
data16
xchg
jo
sub
lret
popa
test
xchg
imul
lahf
mov
mov
jne
push
mov
or
push
push
scas
lret
and
sub
adc
imul
arpl
xchg
cmp
jle
push
jmp
inc
es
hlt
cmpsl
sbb
pusha
outsb
xor
xchg
std
adc
mov
rolb
sub
subb
cmp
lret
popa
lds
jae
pop
cmpsl
dec
aas
rorb
ud0
push
and
xchg
nop
incb
lock
cld
loopne
testl
dec
mov
cmpsl
add
jns
lahf
ja
je
iret
adc
pop
pop
test
or
movsb
jns
cld
mov
xlat
addb
sbb
mov
data16
xor
sub
iret
test
or
jae
fimull
ss
sub
inc
sbb
adc
xsha1
cmpsb
dec
and
cs
and
insb
add
std
test
dec
rcrl
jo
jbe
pop
push
inc
sarl
call
test
mov
daa
roll
and
jae
dec
add
dec
data16
das
lods
adc
dec
into
jb
cs
add
add
adc
test
xchg
pop
lds
fwait
test
jno
aad
ret
lret
xchg
xor
pop
mov
mov
out
stos
sbb
ret
incl
cld
jnp
iret
lock
pop
mov
and
adc
push
rolb
mov
sub
push
sub
xchg
mov
xchg
pop
jne
in
add
rcr
enter
lahf
lret
test
leave
ljmp
adc
mov
cmp
pushf
pop
int3
rclb
jecxz
sbb
push
icebp
adc
lock
idiv
xor
push
jae
mov
idivl
mov
testl
xor
loope
mov
mov
addr16
ret
xchg
popf
cmp
jae
sbb
lods
out
add
pop
mov
pop
pop
mov
jbe
jp
es
lret
sbb
jae
rclb
or
xor
mov
and
sub
out
lret
cwtl
xor
loope
xor
imul
cs
jle
addb
sbb
jnp
leave
mov
cld
jnp
je
sub
in
sub
lods
mov
aad
cmp
adc
outsb
cmp
push
repz
xchg
push
fst
push
mov
sbb
arpl
mov
sbb
xchg
cld
notl
dec
imul
call
inc
hlt
std
mov
sahf
mov
pop
ret
lcall
js
pushf
sbb
aas
jo
mov
mov
cmp
jp
mov
lea
popl
sub
mov
mov
adc
jbe
int
sbb
rclb
cmp
mov
outsb
pusha
bound
lret
mov
push
clc
push
insb
int
xor
jp
mov
dec
cmp
and
sbb
push
mov
sub
inc
rcl
dec
aam
mov
mov
andb
inc
or
lahf
insl
mov
subb
and
lret
add
or
mov
loopne
dec
cld
xchg
mov
shll
adc
push
pop
outsl
cld
mov
mov
jne
jno
mov
ja
mov
cmp
dec
leave
adc
dec
dec
mov
inc
and
push
sub
sbbb
inc
mov
sarl
mov
mov
stc
xchg
outsl
sub
dec
cmp
scas
mov
inc
and
adc
jge
jae
movsb
insl
jb
jecxz
lret
pop
mov
xorb
lret
dec
stos
xchg
fisttpll
filds
inc
testl
int
movsl
iret
ds
cmp
cltd
cmp
adc
pop
inc
js
mov
lahf
xchg
add
ljmp
sub
subl
adc
add
cwtl
jecxz
ja
xor
lds
imul
push
movsl
cmc
push
sub
lret
imul
insl
jne
pop
inc
insb
jmp
xor
test
lahf
xchg
xor
sub
inc
shll
push
xor
cmp
jae
std
shlb
lods
cltd
dec
or
ljmp
lods
cs
add
push
mov
cld
fdivrl
lea
add
in
xor
pop
es
push
xchg
sti
outsl
or
push
and
push
idivb
rorl
and
loopne
bts
es
into
push
inc
mov
ds
aas
xchg
mov
scas
mov
push
insl
mov
xor
push
incl
ds
lret
cmp
mov
sbb
xchg
cmp
dec
in
mov
cld
mov
and
mov
dec
insl
push
js,pn
out
or
stos
loopne
add
mov
add
leave
xor
jp
mov
incb
loope
and
cmp
jbe
push
cmp
jns
mov
frstor
xor
ret
lea
add
sbb
adc
and
push
dec
movl
mov
mov
cwtl
mov
jge
imul
and
ret
andb
sarl
cwtl
loop
lret
shll
mov
push
mov
mov
test
push
and
mov
xor
lea
xchg
mov
push
cmp
in
cmpl
jl
and
xor
add
inc
mov
add
aas
sahf
push
repz
xor
ljmp
mov
mov
in
jmp
fsubl
push
add
popl
xchg
lahf
stc
mov
jp
cmpsl
pop
lods
adc
mov
xlat
enter
inc
mov
fsubrl
adc
les
mov
push
mov
mov
xlat
inc
shrl
jp
add
mov
jg
mov
and
fisubrl
fcoml
stos
jge
mov
dec
push
sbb
inc
sbb
add
clc
fiaddl
fldt
inc
mov
out
ja
or
lods
adc
inc
inc
test
popf
fldcw
dec
test
push
fld
loop
mov
push
lds
out
lret
fsubrs
loope
ja
or
shll
or
mov
jge
fldt
mov
jnp
rorb
sub
cli
push
push
hlt
aas
jmp
movsb
das
fiadds
aas
or
and
push
sbb
or
xor
cwtl
shl
sbb
jne
out
cmpl
xor
push
mov
out
call
iret
xor
pop
cmp
popf
mov
filds
lcall
add
pop
add
push
sub
test
push
call
addl
cmpsb
adcb
outsl
in
ja
out
scas
call
push
aaa
inc
and
les
and
repz
sbb
jae
xor
rcll
int3
adc
test
fwait
in
and
xor
add
pop
cld
mov
pop
cmpsb
mov
jecxz
scas
push
add
xchg
fwait
inc
stos
jp
fstpt
test
mov
cs
jecxz
dec
mov
xor
loopne
and
in
jne
ljmp
divb
pusha
mov
ret
push
sub
std
mov
lcall
fsts
insb
fisubrl
out
xor
les
mov
leave
and
daa
adc
xchg
cmpsl
push
or
mov
shr
cmpsl
add
mov
add
fstp
push
cmp
adc
dec
in
mov
mov
sbb
cwtl
addr16
push
insl
outsb
sub
rorb
fdivrl
xchg
xor
je
dec
jmp
aas
sub
xchg
dec
add
lds
or
ljmp
out
cmp
call
sbb
inc
adc
mov
ret
outsl
lea
xor
mov
fwait
in
into
sbb
stos
sub
pop
pop
mov
or
daa
xlat
out
xchg
dec
adc
mov
adc
mov
fwait
cwtl
loope
pop
shll
dec
cmpsl
lds
repz
out
inc
inc
hlt
jo
mov
inc
add
out
testl
sub
mov
addr16
cwtl
cmpsl
into
xorb
sub
nop
into
ja
mov
out
lret
cmpb
lods
mov
mov
and
adc
ss
mov
add
jno
test
push
fldt
imul
clc
jmp
sub
stc
movsl
jecxz
popf
mov
icebp
fistl
jae
fsts
dec
stc
sub
push
shll
xchg
outsb
std
fists
mov
lret
test
pop
out
mov
aad
je
mov
repnz
push
into
pop
or
and
fwait
sbb
addr16
inc
out
xchg
inc
cmc
sahf
rclb
push
or
pop
adc
jl
inc
sbb
popa
pushf
cmpsb
dec
test
stos
mov
hlt
divl
jp
les
sbb
and
gs
jge
xchg
cmpsl
xchg
xor
sbb
cmp
fidivl
mov
pop
mov
adc
sti
cld
add
outsb
mov
cltd
hlt
outsl
scas
mov
adc
orb
and
mov
push
dec
popl
inc
inc
mov
sub
jbe
push
sbb
fmull
adc
mov
je
sub
mov
rcr
cmpsb
inc
out
adc
sub
scas
addr16
and
xor
jnp
mov
mov
jp
mov
sbb
sbb
leave
fmul
mov
push
insb
in
jno
dec
repz
arpl
adc
les
jg
test
fisttpl
dec
fs
adc
and
and
mov
mov
mov
outsl
xchg
stos
jecxz
dec
and
pushf
jae
sub
sbb
mov
lds
test
sub
inc
lds
adc
dec
add
dec
repz
clc
lahf
jo
std
pusha
push
lret
fldl
push
dec
push
pusha
xchg
xor
hlt
scas
dec
mov
sbb
xchg
in
data16
and
mov
imul
cli
test
stos
popa
imul
pusha
lret
fs
xchg
popa
or
in
adc
add
sub
inc
call
inc
add
js
and
push
sbb
popa
fsubrl
ret
mov
lock
push
push
xlat
pop
loop
sahf
fs
sbbb
cmp
lea
dec
test
or
push
cmp
cmp
movsl
mov
es
lods
push
xor
fimuls
jp
or
mov
or
push
nop
push
push
xlat
les
repz
push
iret
jnp
jno
stos
stos
mov
push
enter
mov
ret
pushf
jle
jge
enter
icebp
div
inc
sub
repnz
mov
std
jmp
dec
cmpb
adc
pop
movsl
lea
jns
sarl
push
sbb
aas
mov
pop
aas
fisubrl
cmc
shl
popa
cmp
cmp
repz
mov
stc
add
subb
add
sbbb
push
pop
jne
test
fists
adc
jae
push
outsl
gs
jb
lods
cwtl
inc
adc
push
lods
cli
push
lret
add
cmpsl
and
retw
and
je
xchg
mov
inc
movsb
invd
outsl
mov
dec
jg
stos
aam
inc
dec
sub
inc
inc
mov
and
inc
mov
and
sub
jmp
out
add
sahf
js
inc
enter
mov
bnd
mov
push
jge
dec
je
sub
adc
sub
sub
ret
xor
test
nop
or
lock
jl
fldt
pop
clc
pop
loop
push
jbe
xchg
or
push
ffreep
mov
and
insl
fstpl
arpl
or
outsb
subb
sti
mov
nop
pop
fwait
pop
or
adc
jp
psrad
and
bound
xor
mov
push
clc
mov
sub
push
sti
jle
insb
insb
or
dec
mov
enter
xchg
nop
jmp
sub
mov
sub
test
sbb
and
add
lcall
pop
lods
inc
mov
mov
xor
mov
out
sub
insl
out
popl
sahf
cmp
ret
out
out
fcmovnu
pop
rorb
cmp
movsl
add
adc
mov
insl
xchg
out
gs
dec
xor
in
loopne
ja
scas
or
sub
and
pop
jge
inc
dec
mov
dec
jmp
les
mov
jns
out
pop
inc
nop
pusha
inc
rorb
inc
arpl
cmpsb
mov
je
pop
insl
cs
sahf
out
das
pop
iret
xchg
lds
cli
fists
repz
rol
mov
ja
out
sbb
clc
pop
mov
xor
fdivs
pop
jb
sub
rol
in
iret
arpl
jb
pop
test
fnstcw
movsb
inc
fistpll
lds
jo
popf
xor
imul
popa
mov
fdivs
pop
imul
cmp
movsl
mov
daa
iret
sub
cmp
pop
lea
xor
lods
push
lret
pop
push
pusha
push
scas
sub
adc
test
ret
enter
jecxz
loopne
inc
xchg
jmp
mov
lds
test
sub
mov
jae
js
clc
les
mov
std
pusha
sbb
aad
hlt
outsb
mov
call
pop
adc
add
leave
fdivp
inc
inc
xchg
push
mov
scas
daa
mov
loope
sbb
mov
xor
arpl
jl
sub
stc
das
dec
pop
xchg
mov
xor
mov
daa
out
imul
add
sahf
aas
ljmp
and
test
idivb
mov
inc
push
mov
pop
mov
dec
jmp
dec
push
repz
insb
adc
sub
imul
mov
inc
popf
ja
mov
int3
addr16
lret
pushf
cmpsb
add
pop
xor
loop
inc
pop
cmpsb
cmc
jp
js
pop
pusha
test
adc
inc
lds
or
lret
or
pop
xchg
aam
xchg
jle
mov
orb
repz
jns
mov
jo
jge
fs
cld
mov
stc
int3
dec
pop
cmp
mov
stos
adc
jae
sbb
jmp
push
mov
mov
ret
xor
jle
push
adc
insl
fdivrs
rorl
hlt
mov
cmpsb
icebp
xchg
jbe
mov
sahf
adc
mov
xorl
clc
cmovne
lds
orl
icebp
push
leave
cmpsb
mov
insb
stos
dec
ljmp
ret
cmp
cwtl
pop
jmp
jle
inc
loope
dec
mov
int
daa
lret
cs
xlat
movsl
and
lods
jns
bound
sub
jo
sahf
sub
or
insb
jo
push
lret
loope
idiv
out
jb
rcll
repz
add
movsb
movsb
int
bound
fsubrs
cs
or
mov
push
pusha
ljmp
shrb
or
pop
dec
mov
loop
jae
cmp
dec
hlt
test
cli
adc
inc
lock
pop
fwait
or
stos
aad
fcmovb
push
pop
pop
dec
jo
push
or
bound
orb
xchg
shll
imul
pop
bound
cltd
scas
sbb
test
subl
loopne
mov
fwait
loop
rclb
pop
out
outsb
lds
jp
push
dec
inc
sbb
cs
xchg
jge
hlt
mov
adc
call
dec
das
cmp
nop
push
pop
pusha
cld
iret
cmc
cmc
xchg
lea
ja
js
adc
fdivl
popa
mov
in
sub
fsubr
mov
mov
clc
out
mov
fistpl
dec
sbb
fwait
lods
push
das
cmp
je
xchg
in
loope
sub
inc
stc
repnz
ds
stos
stc
test
xchg
pop
pop
jle
into
int3
in
pop
notb
cmp
idivb
sub
mov
loope
in
out
xor
inc
xchg
in
punpckhwd
mov
and
sub
rorb
mov
xchg
mov
xchg
in
push
popa
shlb
dec
adc
stos
arpl
in
daa
jmp
aad
fisubs
sub
jle
xlat
lds
imul
mull
rolb
xlat
push
xchg
sub
fiaddl
les
scas
test
add
cmc
jge
in
dec
mov
mov
arpl
xor
mov
shlb
icebp
sahf
xchg
dec
daa
push
adc
stos
sbb
jmp
test
cmp
sub
inc
testl
in
mov
mov
inc
and
enter
lea
xlat
xor
shll
in
inc
sbb
fiadds
pop
rorb
fsubr
xor
js
xchg
cltd
inc
push
ret
cmp
stc
xchg
xor
jo
mov
hlt
dec
call
adc
jmp
stos
mov
ret
add
dec
dec
xchg
loop
fistpl
xchg
call
xchg
insl
xor
xor
xor
stc
mov
bound
cltd
daa
insb
cmp
lds
fwait
xor
adc
pop
push
fsubr
push
mov
pop
gs
aaa
cmp
out
lcall
sbb
mov
test
das
lea
xor
ss
fcoms
cmpsl
and
lea
jp
jmp
js
scas
dec
insl
fdivs
dec
dec
stc
imul
jmp
call
sub
in
ret
cmpsl
mov
loopne
push
xchg
sbb
in
in
mov
jle
iret
out
stc
hlt
lret
sub
sub
xchg
mov
loope
test
stos
pop
mov
insl
dec
fwait
jnp
cmpsl
jp
les
test
sbb
in
out
cli
stos
pop
fildl
sub
push
scas
dec
loop
jge
mov
xor
mov
mov
pop
dec
movsb
pop
bound
cli
fdivl
jg
inc
xor
sub
jg
push
les
mov
and
imul
movl
and
xlat
cmp
ja
aas
stos
mov
fdivl
ja
mov
cli
test
dec
xorb
adc
fs
inc
dec
sbb
mov
into
rclb
bound
bound
out
mov
int3
in
inc
orb
add
ret
fstpl
cltd
fldt
aas
xchg
push
mov
xor
iret
jg
add
push
push
sub
pop
jno
out
mov
stos
xor
mov
out
imul
loop
xbegin
xchg
push
fwait
cmpl
cld
lret
adc
imul
or
in
add
inc
leave
rclb
sarl
push
cmc
mov
mov
jo
xor
push
je
mov
mov
cltd
xor
mov
fcomps
pushf
gs
pop
iret
out
into
pop
clc
lret
or
daa
xchg
loope
cmpl
add
pop
lret
aam
dec
cwtl
sarb
addr16
pop
cmpsl
push
xorl
mov
out
icebp
sub
int
enter
inc
push
jo
mov
call
jbe
sbb
add
mov
addr16
and
test
scas
sbb
xchg
pushf
into
icebp
jl
in
rclb
mov
arpl
sarl
stos
aam
mov
js
push
pushf
xchg
lret
mov
cli
mov
adc
pushl
jecxz,pn
imul
xchg
or
aad
shlb
fisttpl
hlt
mov
mov
stos
push
push
push
loop
mov
into
adc
lret
add
lods
jp
stc
rclb
out
jne
cmc
fcom
movsb
mov
sbb
sti
pop
mov
cmp
push
cmp
js
push
jecxz
mov
cmp
ret
loop
mov
fwait
arpl
dec
xor
rcll
pop
cmp
xchg
aaa
bound
xchg
jnp
scas
das
fs
test
cmp
adc
iret
scas
sbb
data16
sub
loop
lods
mull
jno
or
dec
pop
mov
adc
stos
ja
scas
cmp
clc
and
dec
adc
mov
fadds
mov
or
mov
pop
in
jmp
subb
rolb
mov
xor
daa
mov
shlb
ss
hlt
bound
pop
loop
push
mov
aad
push
or
xchg
rorl
jb
and
push
or
roll
imull
cmp
addr16
call
xor
test
repz
fcomi
or
mov
leave
push
out
lret
fmuls
jp
jp
xchg
push
and
sub
and
mov
sub
sar
jno
insl
in
jbe
push
xchg
cvtps2pd
mov
jno
jmp
push
movsb
test
mov
inc
sbb
adc
popf
mov
jae
stc
jne
push
adc
xor
xlat
adc
push
jecxz
cmp
xchg
test
cmp
mov
jmp
jns
pop
dec
call
sbb
call
das
cmp
jns
arpl
aam
adc
dec
xchg
imul
dec
xor
enter
mov
pop
xor
lea
xchg
xchg
inc
pop
roll
rcll
fmulp
push
cli
mov
dec
jnp
jb
mov
testb
sbb
scas
push
ja
sub
xchg
ffreep
pusha
test
lea
inc
adc
lcall
shr
sahf
cld
xchg
pusha
aad
sti
xlat
cwtl
sbb
scas
fcompl
stos
rclb
pop
push
mov
pop
inc
pop
dec
sbb
push
lds
test
mov
vhaddps
push
frstor
inc
or
xor
mov
clc
cmpsl
pop
sbb
sahf
fldenv
jo
lds
insl
scas
sar
jbe
addr16
rcl
cwtl
xchg
mov
fs
mov
mov
adc
xchg
jmp
loope
outsb
sbb
jae
fistpl
fidivrl
sub
cld
xchg
xchg
test
pop
mov
and
jo
cld
or
pop
sbb
mov
shr
pushf
push
outsb
movsl
pushf
mov
and
xchg
sti
repnz
rorb
mov
or
jae
test
fiaddl
outsb
xor
scas
and
je
clc
test
ficoms
and
jecxz
ja
fwait
insl
jle
decl
repz
scas
call
add
insb
shlb
mov
add
stos
pusha
mov
push
dec
adc
or
test
xor
or
jo
sbb
push
push
dec
jge
mov
ja
push
inc
pusha
mov
xlat
xor
xchg
fidivl
jbe
mov
out
test
cmp
in
fisubrs
jg
pop
xchg
hlt
mov
aam
and
xor
add
adc
fs
je
inc
jbe
data16
xchg
mov
test
hlt
mov
aam
and
xor
add
adc
fs
je
inc
jbe
data16
xchg
mov
xchg
mov
cmpsb
in
lock
aad
and
xor
or
push
insl
inc
inc
jbe
mov
xchg
mov
mov
push
es
lret
lods
scas
ss
adc
cld
mov
int3
int3
int3
int3
int3
test
mov
int3
pusha
mov
nop
inc
clc
push
push
inc
pop
lcall
push
cmp
loope
icebp
test
xchg
adc
inc
aad
in
cmc
pop
add
test
push
shll
jne
test
mov
lds
sbb
imul
add
rclb
xchg
es
xchg
sbb
icebp
inc
hlt
push
movsl
jb
push
lret
test
loop
mov
or
outsb
das
jecxz
pop
enter
lea
xor
pop
push
dec
into
lds
sbb
cwtl
insl
fistpl
loope
aam
mov
push
mov
iret
js
rcll
stos
sub
mov
fisubrs
test
mov
and
lods
push
sub
mov
cwtl
jno
pop
lret
aam
pop
popf
push
decb
and
dec
into
cmp
push
sbb
sbb
inc
adc
mov
jl
insl
out
lahf
push
dec
loope
push
pop
mov
inc
rclb
aad
pop
or
xchg
xor
inc
aad
in
cmc
jecxz
adcl
aas
gs
jne
loopne
idivb
dec
repz
mov
adc
ss
jo
push
add
rol
xchg
add
loope
push
hlt
pop
mov
or
in
repz
rorl
pop
and
xchg
icebp
jecxz
rcrb
or
cmc
jno
adcl
shll
jne
test
xchg
adc
inc
aad
in
cmc
jno
adcl
shll
jne
test
hlt
inc
cmp
adc
sub
and
imul
pop
stos
cltd
xor
pop
xor
add
adc
mov
push
and
mov
jno
mov
int3
pushf
lds
mov
sbb
repz
jl
dec
cmpsl
das
mov
mov
scas
inc
lods
xchg
or
pop
call
ret
sbb
mov
popl
es
out
insl
jne
mov
push
mov
push
in
and
dec
add
test
and
out
inc
inc
mov
je
mov
sub
icebp
sub
or
imul
pop
and
std
sbb
subl
adc
cmp
ja
mov
or
push
fidivs
xchg
ficomps
or
dec
dec
sbb
enter
es
in
lret
mov
fdivr
xchg
inc
push
into
add
cmpsl
jns
test
mov
mov
addr16
inc
sub
lock
std
sbb
movsb
pushf
sbbb
inc
fisttpll
popf
mov
jle
xlat
jmp
sub
call
cmpsl
cltd
and
xchg
decb
es
repnz
lock
repnz
aaa
mov
jo
push
in
cmp
add
mov
mov
pop
xchg
sahf
fcoml
adc
jae
cmp
test
rcl
sbb
sbb
repz
sub
outsl
sbb
inc
pop
mov
jecxz
mov
xchg
pushf
push
dec
daa
mov
imul
test
lods
add
mov
scas
nop
mov
dec
xchg
jge
and
das
icebp
int3
jp
jmp
out
ret
inc
loopne
pop
outsl
sbb
mov
add
je
push
lods
jecxz
push
xchg
je
push
pop
cld
mov
inc
popa
dec
ss
iret
cli
push
cs
ljmp
popf
pusha
sti
lahf
stc
pop
dec
cmp
xor
mov
adc
fs
xchg
insb
and
push
jmp
dec
popa
mov
cmp
es
leave
pushf
push
call
sarl
xchg
jns
das
inc
shlb
flds
pop
arpl
push
gs
mov
insb
fisttpll
idiv
sub
mov
pusha
dec
js
fistpl
out
mov
jne
push
mov
jmp
enter
aad
movsb
dec
enter
nop
push
mov
popf
outsb
mov
mov
pop
bound
das
mov
or
jp
xor
push
push
ret
gs
repz
mov
decl
xor
outsb
imul
push
lcall
cmc
mov
mov
fdecstp
mov
jo
cmp
cltd
incb
call
mov
sub
test
lahf
or
jb
jmp
xor
jb
push
cmp
outsb
or
sbb
fsub
push
mov
mov
cmp
pop
outsb
stc
repnz
sub
shlb
ss
and
out
ja
cmp
movsb
mov
cltd
cmp
ljmp
repz
ja
sbb
push
imul
jae
xchg
pop
ret
push
push
sarb
mov
cli
cmp
cmp
clc
mov
and
mov
ja
xchg
mov
lret
cmp
inc
lods
out
leave
mov
xor
inc
mov
repz
cmp
repnz
xchg
js
rolb
xor
pop
xchg
pop
mov
add
hlt
aas
push
sub
sbb
test
shrl
push
pushf
dec
xlat
mov
pop
fisttpll
repz
rorl
roll
enter
xchg
mov
mov
in
mov
pop
or
mov
insb
pushf
cmp
jnp
int
push
out
jle
add
dec
fcoml
xchg
lds
notl
stc
jbe
dec
sub
xor
daa
push
stos
and
add
mov
sub
lds
pop
mov
ret
mov
sarb
mov
outsl
jge
or
mov
and
ljmp
mov
in
in
test
mov
inc
out
fstpt
mov
sbb
loop
add
lods
mov
pop
ret
scas
jae
cmc
stc
mov
out
mov
or
and
and
rolb
js
icebp
adc
out
xchg
adc
aad
aad
mov
pop
out
or
mov
hlt
push
mov
mov
imul
xchg
fdivrs
mov
mov
cmc
xlat
lock
cltd
sahf
sahf
in
push
arpl
push
cli
enter
lahf
add
popl
push
lods
insl
arpl
shll
in
jle
loop
mov
cmc
test
sub
push
sbb
add
fnstcw
clc
jb
push
mov
mov
stos
addr16
xlat
insl
xor
jp
dec
sub
into
and
int3
ljmp
mov
loope
or
cmpb
push
push
roll
in
pop
add
fwait
insb
pop
mov
aas
jmp
inc
adcl
mov
and
movl
popa
push
icebp
mov
pop
subl
mov
lret
das
sahf
inc
fistpll
aaa
mov
bound
mov
jbe
sbb
andl
aas
sub
pop
inc
outsl
push
mull
inc
inc
inc
or
arpl
lods
jno
je
fldenv
push
negb
cmp
xlat
cmpb
outsl
mov
fwait
aad
xchg
icebp
mov
fists
mov
icebp
jbe
and
in
inc
add
pop
sub
inc
outsl
mov
push
add
xchg
out
gs
jbe
mov
xor
sub
test
rol
repnz
push
mov
lret
mov
add
clc
subb
dec
fisttps
cld
jns
lret
scas
xchg
xchg
movsl
out
or
shll
mov
cmp
int3
daa
pushl
in
sub
ja
pusha
icebp
xor
addr16
mov
push
mov
adc
mov
mov
lcall
sub
imul
sbb
inc
or
cltd
lods
incb
mov
clc
testl
int3
daa
repnz
loopne
mov
jns
add
sti
sbb
test
fistpl
rcll
test
js
in
and
mov
pop
dec
dec
test
sahf
inc
inc
jle
aam
adc
fdivrp
popf
sbb
cmpb
pop
push
rcll
cs
aaa
das
fstpl
xor
test
es
and
cmpsb
inc
xchg
outsb
fdivr
icebp
dec
out
xor
mov
pop
incl
push
fcmovnb
and
mov
cmp
icebp
movq
or
les
mov
pop
sarl
imull
jno
cmp
xor
popa
pop
mov
lds
and
pop
fsubs
ss
dec
mov
adc
mov
testl
mov
movsb
xor
test
push
addl
ficomps
jne
shl
or
clc
sbb
popf
aas
adc
push
add
or
test
pop
lcall
inc
bound
jg
mov
es
and
nop
dec
cmp
insl
pushf
pop
clc
dec
xchg
cmc
mov
mov
xor
inc
loope
mov
cmc
stos
cmc
push
out
jge
dec
adc
xchg
movsb
pop
sbb
leavew
scas
jle
clc
mov
or
push
movsb
pop
insb
and
ljmp
jns
mov
out
mov
jg
frstor
add
adc
mov
fists
pop
scas
pop
xchg
loop
cli
push
sub
or
jno
inc
sarb
out
inc
push
pop
jp
mov
std
iret
icebp
sub
xor
inc
gs
ret
je
lahf
lahf
xchg
pop
pop
mov
jg
and
sub
pop
xlat
cli
test
sub
nop
addr16
rolb
add
test
jmp
pop
xchg
aad
daa
pusha
sti
cmovge
xor
mov
icebp
pop
cld
push
pop
and
dec
cmp
jmp
pop
imul
bound
pop
inc
push
lods
xchg
mov
mov
pushf
inc
mov
adc
adc
or
or
data16
iret
push
nop
lds
sar
stc
pop
cwtl
pop
adcb
xchg
xlat
clc
mul
pop
jb
push
xchg
cmc
test
jl
stos
call
xor
enter
repnz
aaa
pop
sbbb
movb
push
cmp
inc
cmpsb
addl
jbe
add
repnz
data16
les
inc
arpl
dec
jns
jle
test
mov
sbb
fidivs
das
aaa
aaa
adc
push
popa
xchg
cltd
loop
adc
inc
stos
xlat
icebp
and
jb
add
inc
add
mov
mov
pusha
mov
and
sbb
dec
popa
jmp
jnp
push
dec
mov
enter
pop
xchg
and
test
mov
testl
iret
js
imul
les
js
push
cmp
mov
jmp
push
sub
or
pop
sbb
lock
mov
push
or
fcmovu
imul
xor
subl
push
xlat
xor
cmpsb
inc
push
clc
adc
outsl
adc
xor
pop
sti
jbe
std
jo
gs
insb
jnp
jno
pop
dec
inc
sub
cli
jbe
jg
jnp
push
fmul
pushl
or
cmp
nop
or
xorb
das
outsl
scas
repz
adc
cltd
jecxz
add
sbb
cmp
pop
jae
sub
iret
les
repz
lret
dec
movsb
xchg
mov
aad
cmp
push
jno
movsl
bound
cmp
push
js
jmp
mov
es
fstl
out
jne
loop
cltd
adc
or
cltd
cs
xor
mov
jl
arpl
xor
cmp
gs
sahf
inc
and
hlt
sti
xor
outsb
mov
xor
lret
icebp
or
lret
inc
add
in
push
out
dec
and
jl
adc
pop
sarb
sahf
adc
popa
lahf
lret
outsl
inc
and
add
mov
mov
mov
shrb
jne
div
sbb
fsubrp
rclb
jns
mov
push
daa
jo
cltd
jno
sar
mov
xchg
xchg
and
fsubs
arpl
sbb
sbb
shll
insl
data16
pop
mov
ret
popa
in
pop
xor
push
pushl
mov
mov
fisubrl
aad
dec
inc
push
filds
or
cmpb
mov
push
orl
dec
leave
mov
push
pop
adc
xchg
movsb
in
push
sub
dec
cs
xlat
dec
rcrb
cmp
sub
sbb
cmp
aas
jg
mov
leave
xchg
inc
insb
sbb
in
mov
cmp
mov
test
adc
sub
shlb
dec
mov
inc
cmp
iret
addr16
rolb
mov
or
js
and
aaa
cmp
inc
pop
mov
adc
ret
pop
pushf
ljmp
pop
and
bound
aas
in
shll
insb
icebp
dec
jae
stos
fildll
dec
call
or
cli
pop
out
in
xchg
jne
inc
cmp
repnz
pop
and
and
repnz
int
or
test
mov
aad
in
inc
daa
inc
icebp
xlat
scas
adc
popf
lret
mov
cmpsl
sbb
insb
into
ja
inc
mov
xchg
loop
mov
arpl
add
cmp
es
inc
js
cmp
pop
mov
adc
cli
mov
pop
lcall
cmpsb
or
sub
popf
jp
out
mov
add
adc
iret
pusha
fwait
jbe
shrl
jl
outsb
cmpsl
ljmp
jno
addb
xchg
jnp
mov
rol
arpl
lock
and
cmp
scas
js
stc
mov
cmpsl
lods
push
pop
mov
in
sarl
mov
shrb
inc
inc
lcall
xor
notl
loop
add
movsl
xchg
cmp
cmpsb
sahf
pop
pushf
xor
mov
negl
stc
div
pop
sbb
adc
push
push
sbb
rorb
movb
push
mov
mov
aaa
push
adc
fisttpll
cltd
dec
push
scas
push
pop
xchg
pop
and
xor
xchg
or
or
or
jle
mov
inc
push
out
das
mov
sti
mov
jae
inc
jb
hlt
dec
xor
add
sahf
int3
xor
cmpsb
or
xchg
push
in
jns
call
add
inc
shll
test
out
jle
iret
sub
pop
pop
int
pop
xor
push
mov
repz
out
cmc
jo
jns
push
sahf
or
cmpsb
subb
sub
jmp
mov
push
movsb
cmp
pop
dec
xor
nop
mov
mul
out
cmp
mov
mov
push
lret
pop
mov
inc
movl
cltd
and
mov
fsubp
cmp
leave
mov
push
lods
mov
inc
or
and
pop
xor
iret
lods
jae
cmc
mov
sbb
cmpsl
scas
inc
dec
jle
sti
cmpb
loop
rcll
rcrl
or
cltd
in
clc
out
pop
scas
xor
mov
cmp
jb
and
call
orb
push
mov
aam
push
rolb
jmp
mov
cmp
sbb
add
insb
jb
pop
cmpsl
loope
mov
js
sub
in
mov
mov
jb
jp
outsb
lds
sub
push
pop
sub
lea
push
movsb
notl
fwait
cmp
out
push
mov
aam
jo
daa
inc
ja
mov
xchg
inc
pop
lahf
adc
jp
push
sub
fcmovne
mov
in
pushf
lret
daa
jle
cmp
xor
push
or
push
aaa
push
fs
sbb
lods
dec
jp
sbb
stos
mov
adc
xchg
pop
outsb
pop
mov
mov
loope
adc
inc
imul
add
xor
or
mov
add
xor
scas
push
lret
push
aas
dec
out
lea
cltd
fimuls
sbb
xchg
push
daa
pop
xor
nop
dec
inc
xor
jle
mov
sub
int3
jne
ficomps
mov
repz
insb
push
ss
outsb
pop
in
lds
cmpsb
cmp
push
fstps
xor
mov
sbb
jo
xchg
test
push
cmp
mov
mov
jecxz
out
pop
adc
hlt
adc
hlt
imulb
sub
xor
inc
aad
pop
or
mov
incb
bound
pop
inc
or
fcoml
ret
mov
cltd
mov
daa
aad
leave
inc
push
jo
mov
int
adc
or
jbe
dec
iret
add
mov
aaa
jle
pop
fstpt
sub
push
outsb
push
adc
lods
aad
mov
mov
mulps
imul
pop
cld
in
xchg
cli
push
test
and
cmpsl
les
pop
mul
lcall
std
cwtl
into
xchg
mov
sbb
and
ret
dec
imul
sub
out
das
add
xor
loope
mov
jp
pop
adc
loope
ja
imul
lret
jecxz
xor
icebp
or
aam
out
adc
fs
xchg
outsb
jbe
out
mov
pop
test
mov
mov
mov
aam
mov
xchg
rclb
sub
sbb
cs
vphaddubq
cmp
mov
es
dec
lahf
cmp
mov
lret
cmp
jmp
fdivrs
push
sbb
sub
psllw
decb
lods
sbb
mov
xlat
xlat
jg
cli
mov
arpl
jmp
mov
push
and
sahf
or
je
xchg
push
out
mov
push
stos
fnstenv
popa
xchg
repz
push
pushf
jae
sbb
ds
out
adc
xchg
loope
cmp
adc
pusha
insb
push
stos
and
push
aaa
pop
push
stc
test
xor
mov
jnp
rclb
mov
ret
inc
test
dec
xchg
aaa
xor
pop
jbe
or
xchg
add
loopne
dec
sub
sbb
hlt
cmp
mov
jb
cmp
daa
mov
sub
or
mov
lea
lds
shll
adc
push
in
sbb
pusha
and
push
cmp
jle
hlt
dec
fxch
jae
jnp
jo
es
rclb
cld
dec
fimull
stc
mov
dec
or
push
in
lcall
xchg
outsl
mov
xchg
cwtl
fs
cmpsb
arpl
insb
sbb
xchg
ljmp
push
jbe
xchg
int3
mov
and
jno
add
stos
jnp
cmp
sbb
and
cmp
enter
ficomps
out
jb
xor
sbb
jecxz
sbb
lret
ljmp
push
inc
cmp
fwait
ret
add
jae
dec
xor
cmp
jp
cmc
outsl
test
dec
addl
cmp
mov
jae
sti
adc
outsb
add
or
imul
mov
adc
ret
mov
mov
in
push
push
jmp
cmpsb
pop
cld
cmp
add
push
and
pop
xchg
and
idivl
xor
addr16
jecxz
pusha
pop
inc
sbb
xor
mov
pop
xchg
adc
xchg
lods
xchg
shl
test
lods
mov
rcrl
xor
lds
dec
stos
clc
dec
iret
sub
push
test
in
push
xor
pop
pop
popa
shrl
test
sbb
rcl
mov
or
hlt
mov
repz
stos
imul
cmp
cmp
push
in
ret
outsl
notl
aam
adc
andb
lret
in
sti
ret
sbb
aaa
test
cmp
not
add
push
push
and
sbb
scas
jg
std
and
stos
aad
cmp
in
push
data16
popa
int3
jnp
mov
loop
jnp,pt
pop
mov
arpl
fstl
subl
pop
push
lcall
sub
loop
xchg
sbb
xchg
pop
lods
imul
test
jno
addr16
cmp
adc
jg
mov
cmp
sub
or
seto
jg
inc
in
push
mov
xchg
mov
mov
pop
shll
mulb
pop
outsb
inc
sti
or
jp
cmp
fisubs
mov
push
push
cld
pop
mov
aad
flds
in
cs
insl
les
sbb
dec
repnz
and
lock
out
hlt
sub
jns
push
repz
gs
orl
je
dec
icebp
nop
adc
insl
gs
fistpl
push
or
in
cmpsb
fnstsw
cmpsb
jo
xchg
pushf
inc
aam
or
and
test
outsb
popf
inc
scas
cwtl
mov
mov
sub
or
das
ret
mov
mov
or
nop
xchg
push
dec
jmp
mov
sahf
pop
push
pop
and
sub
pop
xlat
cmp
lods
or
mov
sbb
sub
sub
push
sub
repz
cmp
lcall
sub
cwtl
mov
push
or
stos
aad
adc
clc
orl
xor
stos
or
out
ds
imul
das
in
mov
in
inc
mov
lcall
pop
xchg
xor
or
jmp
bound
mov
sbb
push
mov
inc
testl
insb
xor
sbbb
mov
js
push
pop
in
ss
loop
jne
stos
int3
push
and
lcall
aas
xchg
cmp
jne
jno
fimull
fwait
push
test
shrl
or
in
fldl
fisubl
std
in
adc
popa
cmc
into
out
cmp
add
leave
mov
sti
mov
pop
and
roll
xchg
fistpl
inc
mov
nop
xchg
sub
aas
jne
or
sbb
inc
lahf
sub
xor
insl
iret
jne
and
out
xchg
xor
fdivrp
in
fwait
jge
sbb
sub
mov
push
and
xchg
fists
pushf
ljmp
inc
dec
sbb
sar
into
sbb
push
pop
jno
inc
xchg
mov
iret
and
iret
lea
pop
sub
mov
addr16
addr16
jbe
out
push
push
ret
dec
push
sar
lahf
daa
pop
in
xchg
popf
out
dec
mov
jb
orb
add
mov
test
insl
jg
enter
pop
js
aam
je
pushf
call
pop
xor
rcll
sbb
sbb
out
shll
idivl
xlat
out
or
fwait
jecxz
lret
enter
dec
add
pop
push
sti
iret
pop
shl
int3
pusha
xlat
mov
cmp
sub
test
cltd
xor
mov
cmpsl
sub
add
iret
test
mov
xchg
insl
cmc
fsubr
add
repz
cmp
sbb
daa
insb
jo
xlat
gs
mov
pop
loopne
sahf
and
out
and
scas
and
adc
sub
add
pop
push
fmull
cmp
lds
mov
repz
rcll
xchg
sahf
popf
jo
xchg
mov
icebp
iret
ja
movsb
mov
mov
jle
cmp
notb
movsb
mov
and
or
into
mov
into
jo
mov
popf
xchg
cs
jnp
int3
leave
hlt
sbb
pop
loope
push
pop
out
das
stc
sub
ret
sub
sub
stc
mov
mov
repz
inc
movsb
cmpl
leave
lahf
ret
and
xchg
hlt
fsubrs
in
jge
cmpsl
adc
and
mov
fs
mov
mov
lods
inc
cld
ret
pop
mov
push
loopne
pop
in
lret
test
lcall
mov
cmp
add
je
js
mov
rol
add
inc
lock
bound
add
dec
jg
inc
aad
push
cmp
stos
jnp
ret
adcb
fsubr
rol
ret
sub
or
ljmp
icebp
test
out
inc
add
push
mov
int3
sbb
mov
xchg
sub
push
aam
jecxz
les
cli
xchg
bound
icebp
jl
test
inc
dec
popa
pop
cmp
mov
loopne
mov
mov
xchg
mov
mov
jle
fisttps
fmul
pop
adc
xlat
push
push
xchg
or
ds
push
adc
inc
aad
in
cmc
jno
adcl
shll
jne
test
xchg
adc
inc
aad
in
cmc
jno
adcl
shll
jne
test
mov
lds
cmp
gs
jno
adcb
inc
lds
fs
xchg
cmc
movsl
lds
push
gs
mov
jle
cmp
mov
lea
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
maxps
dec
das
jg
outsl
xorb
add
jne
fistps
out
iret
lahf
fisttps
out
mov
pop
dec
das
jg
outsl
dec
pop
pop
movq
jg
fistps
out
setg
out
std
ljmp
das
jg
outsl
dec
pop
pop
movq
jg
ja
iret
ret
fwait
mov
loopne
int
scas
push
pop
jnp
das
adc
xchg
aam
fs
sub
inc
push
es
jle
mov
add
mov
insl
inc
or
mov
pop
lock
cmp
xor
inc
bound
ljmp
pop
pop
pop
pop
sub
sub
in
and
and
xor
sahf
mov
cmovp
int3
inc
mov
outsl
push
mov
rolb
add
mov
xor
lahf
jo
inc
lret
mov
rclb
sub
lods
addr16
cwtl
sub
ret
and
inc
and
leave
loopne
in
sbb
loop
jg
fsubrs
xchg
out
lahf
mov
stos
stos
jg
ret
pop
pop
dec
das
jg
outsl
dec
pop
pop
movq
jg
fistps
out
iret
lahf
fisttps
dec
xor
inc
push
push
push
dec
jae
ud2
jno
jg
mov
test
mov
jp
dec
jg
sbb
pop
dec
sub
mov
into
cld
mov
sbb
ljmp
pop
sbb
pop
push
or
pop
pop
movq
jg
fistps
out
iret
lahf
fisttps
maxps
dec
das
jg
outsl
dec
pop
pop
movq
jg
fistps
out
iret
lahf
fisttps
maxps
push
mov
adc
mov
cli
in
mov
fucom
mov
shr
lret
pop
inc
and
inc
and
std
inc
sub
sub
lods
cmc
leave
add
xor
imul
inc
jb
ds
jo
dec
lret
cwtl
sarl
mov
mov
lods
dec
jns
aad
fs
lods
mov
pop
adc
test
arpl
ljmp
popa
sub
mov
iret
mov
pop
fisubs
xorb
mov
jns
cmp
add
xorb
lret
inc
dec
dec
cmp
xor
cmpb
inc
ret
test
cmp
jmp
mov
arpl
sbb
inc
cmp
mov
cmpsl
mov
mov
int
enter
std
arpl
xchg
push
push
loop
xchg
fcomps
rcll
add
adc
pop
adc
pop
mov
mov
in
pusha
shll
loop
xor
repnz
pop
stc
pop
fs
pop
sarb
rol
dec
ja
sbb
jb
test
outsb
or
pop
orb
sub
fisubs
daa
cmp
ja
sub
aas
rcl
pushf
or
xchg
xchg
call
or
pop
out
jns
mov
sahf
into
scas
imul
popa
shrb
dec
les
call
push
and
sub
lds
mov
popf
es
ljmp
cmc
leave
mov
or
mov
jbe
rcrb
mov
jg
adc
lret
or
lahf
sbb
cmp
inc
es
decl
add
subb
mov
cs
iret
nop
sub
inc
and
call
repnz
jecxz
aaa
repz
stos
xchg
sbb
ret
and
gs
dec
jl
arpl
adc
jnp
xchg
cwtl
aad
xor
xor
scas
test
mov
insl
mov
fsubl
ljmp
jne
mov
mov
push
movsl
pushf
sub
aas
and
lahf
movsb
stos
xchg
lcall
out
cwtl
cmpsl
pushf
lods
or
lods
xchg
cmp
insb
xor
leave
fsubl
loope
lds
negb
ja
sbb
lret
mov
mov
and
les
sbb
divb
sahf
ret
jo
dec
add
sub
int3
jecxz
lret
push
mov
xchg
movsb
xchg
inc
sbbb
outsl
jno
aas
arpl
and
sbb
sub
jne
mov
nop
jne
xor
aaa
cmpsl
pop
out
icebp
lea
cmpsl
sub
adc
pop
push
push
mov
pop
pop
sahf
sub
in
xor
bnd
imul
mov
sbb
mov
movsl
insb
mov
sub
mov
mov
mov
cld
add
jo
loopne
hlt
shll
ja
pop
pop
add
cs
in
dec
lock
addb
cmp
das
dec
cmpsl
push
add
scas
loop
imul
rep
sub
es
pop
mov
xchg
clc
aas
std
inc
mov
lods
pushf
push
sub
push
or
cmpsl
hlt
xchg
jmp
inc
cld
pushf
int
sub
or
push
xchg
jp
fwait
jge
decl
and
lret
mov
jmp
xchg
cltd
icebp
lcall
cs
fucomi
shlb
push
jo
mov
mov
add
dec
push
dec
sti
cli
pop
pushf
xlat
or
xor
das
xchg
in
or
mulb
popa
jp
add
add
fwait
and
xchg
je
lods
sbb
loop
cmp
sub
es
insl
mov
jbe
dec
pop
and
adc
cmp
mov
ds
loopne
sub
je
jmp
fs
pop
ret
xchg
test
subl
sarb
ret
jnp
mov
lahf
ss
xor
orb
ds
or
imul
pop
push
pop
in
cli
mov
jbe
dec
loop,pn
push
mov
jno
and
mov
mov
loope
adcl
inc
pusha
lret
xor
jbe
push
push
sub
outsb
lret
cmpsl
outsl
fcmovb
lcall
mov
sub
or
cli
pop
lea
fcoml
lock
xor
and
rolb
push
jmp
je
call
mov
test
xor
sub
jg
inc
and
fdivrs
inc
inc
push
stos
adc
pop
sbbb
cmp
lods
cmp
enter
faddl
inc
int
aas
jle
sbb
fnstsw
test
jecxz
outsb
pop
frstor
test
mov
out
xor
xchg
lock
sub
jo
xorb
aam
or
push
insl
dec
sar
jge
xlat
int3
into
or
or
lock
jns
test
mov
cmpl
fwait
in
mov
pop
pusha
mov
and
push
mov
int
int3
inc
xchg
push
mov
cltd
iret
adc
out
scas
test
jmp
out
lret
adc
cli
fistpl
shll
sub
arpl
cmp
insb
jns
int
outsl
iret
mov
pop
sbb
imul
in
and
cs
out
mov
xor
mov
pop
mov
lret
jo
test
adc
push
jg
aad
sub
mov
mov
ss
jmp
insb
add
pop
cwtl
adc
mov
lea
mov
popf
fs
lret
daa
test
sub
push
loop
lock
shlb
or
fsubrl
fcomps
ror
jae
mov
and
das
jg
push
loop
insb
data16
fs
cmp
loope
cmp
gs
imul
and
addr16
clc
xorl
jmp
add
les
cmpsb
or
pop
je
cs
or
mov
pop
cwtl
ret
ja
rcl
cmp
loop
rorb
sbb
jl
adc
mov
mov
popf
inc
js
xchg
mov
jle
sub
mov
repnz
and
sbb
popf
aas
daa
out
out
xchg
mov
xchg
loope
push
mov
scas
frstor
push
xchg
xor
inc
or
pop
xchg
xchg
not
sub
les
enter
push
dec
dec
mov
cmc
inc
sti
ljmp
jl
insl
cmp
xor
push
xorl
insb
movsl
push
cmpsb
mov
push
jle
adc
lret
adc
stc
ror
jmp
lea
push
fs
xchg
inc
fisttps
into
and
mov
sub
or
or
aad
xorb
adc
sbb
mov
dec
insb
adc
jecxz
add
fwait
inc
adc
jmp
jb
sbb
xchg
nop
lea
in
inc
xchg
push
and
mov
dec
push
cmp
inc
sbb
and
lea
ljmp
test
aaa
mov
rorb
jmp
and
adc
pushf
push
ficoml
mov
push
or
out
divb
pop
mov
xchg
adc
adc
imulb
xchg
dec
das
lahf
pop
fs
mov
inc
test
movsl
xchg
addr16
aas
int3
dec
xor
xchg
inc
inc
xor
cli
mov
enter
xchg
clc
cmpsb
lods
xor
xor
push
js
dec
mov
mov
lock
loope
mov
outsl
leave
jmp
dec
scas
faddl
xor
cmp
fwait
aad
dec
add
push
sub
test
mov
sbb
inc
lds
adc
xchg
loopne
sbb
adc
stc
or
push
movsb
dec
pushf
repnz
testb
shrb
jo
adc
ss
and
and
shlb
out
xchg
push
js
gs
jae
rcr
movsl
cltd
shl
cmp
push
inc
pop
jg
fcmovbe
cmc
mov
minps
lret
push
fs
jnp
or
in
sbb
negl
adc
push
lret
aaa
addr16
push
pusha
ss
xrelease
push
into
nop
bound
ret
jnp
test
push
iret
scas
cmp
lahf
fwait
mov
arpl
xor
mov
out
jns
and
sahf
mov
ds
cmp
jae
mov
cmp
ret
mov
sub
popa
lods
movb
repnz
mov
rorb
push
int3
sub
insb
clc
xchg
pop
fwait
mov
std
cmpsl
push
lret
jnp
shrb
mov
push
sbb
in
jne
xchg
out
out
jae
sbb
jbe
lods
xchg
flds
arpl
cmp
js
loop
mov
ss
lods
loop
mov
xor
cmpsb
pop
mov
push
das
xor
sub
push
mov
mov
les
pop
pop
and
ret
mov
fcmove
outsl
adc
inc
cld
lcall
mov
stc
add
cmpsl
jns
in
movsl
cs
mov
and
pop
dec
ljmp
add
add
push
mov
cld
mov
loop
dec
xor
leave
jae
fcomps
cmp
daa
leave
jne
in
and
lds
jo
sbb
int3
dec
jg
inc
mov
gs
jns
ljmp
pop
movsl
mov
cltd
xor
xchg
and
cmc
dec
cvtdq2ps
xor
insb
xlat
call
or
ret
movl
scas
imul
and
adcl
jmp
test
outsl
lods
push
into
mov
add
pushf
stc
jg
jno
fdivl
lds
fnstcw
push
filds
mov
loope
lods
inc
js
mov
clc
jmp
es
mov
shlb
leave
mov
fistps
jmp
rcrb
lcall
fldt
lcall
xor
sbb
push
mov
movsb
lret
iret
pushl
dec
nop
insb
push
and
iret
call
add
push
movsl
push
xchg
fwait
arpl
push
xchg
push
addr16
aaa
and
inc
push
sub
and
data16
xor
cld
out
add
adc
lcall
dec
sbb
enter
and
ljmp
xchg
enter
dec
mulb
or
sarl
inc
nop
or
lea
aas
in
dec
add
push
add
and
push
ss
mov
mov
cld
addr16
hlt
mov
arpl
sub
cltd
test
jb
sbb
fs
repz
mov
je
hlt
lret
add
xchg
push
into
insb
es
adcb
fs
outsb
adcb
rcr
imul
cmpb
pop
sub
xchg
inc
loopne
in
inc
repz
xchg
loopne
out
xchg
mov
jl
mov
push
mov
loope
sbb
or
xor
fcmovb
fisttpll
xor
or
shlb
xchg
cs
lods
outsl
xor
in
ret
cmp
cmp
lea
cwtl
jne
xchg
push
push
in
xchg
jo
jne
sti
pop
movsl
mov
and
insb
sub
mov
mov
and
mov
lahf
xor
fs
pushf
mov
int3
into
sbb
rcrl
in
lcall
scas
mov
or
push
aad
dec
push
imul
xchg
add
imul
adc
mov
sub
test
pusha
lods
add
cmc
adc
mov
bound
sub
out
jns
movsb
cmp
jl
fxch
mov
or
or
mov
mov
aad
test
mov
xchg
aad
popf
dec
xchg
pop
mov
mov
pushf
ret
pop
xor
xchg
out
pop
icebp
lock
push
dec
sbb
add
ds
rclb
stos
leavew
in
pop
sbbl
dec
fstpt
push
pop
nop
pop
xor
sbb
push
ret
sbb
xor
jne
sub
in
jns
pusha
das
pop
and
cwtl
addl
fst
dec
cmp
int
mov
mulb
sub
clc
out
out
xor
out
repz
cltd
fwait
dec
dec
movsl
pop
in
mov
mov
push
dec
cs
lret
loop
pop
cmp
mov
and
push
out
mov
xchg
aas
test
xor
and
xchg
xorb
pop
sub
dec
nop
xor
adc
mov
xchg
rcll
xchg
push
fs
inc
or
sub
clc
mov
out
inc
mov
mov
xlat
loope
mov
in
shr
jo
out
push
test
mov
ffreep
pop
iret
div
adc
push
sub
xor
jle
sub
xchg
pop
or
cmp
cmp
out
aad
or
pop
xchg
pop
pop
aam
repz
mov
scas
xchg
mov
dec
pop
cwtl
addr16
in
int
inc
fwait
leave
add
add
scas
jo
cmp
pop
cmp
sbb
inc
mov
jae
xchg
les
icebp
xorl
arpl
mov
movsb
cmp
mov
outsb
inc
loope
mov
call
arpl
push
loopne
sub
ds
push
mov
mov
xor
dec
ss
inc
push
lods
pop
clc
testb
mov
std
push
ret
idivb
mov
js
inc
int3
and
popf
pop
sub
jne
jp
cmp
scas
adc
sbb
push
fmul
inc
pop
add
mov
cmpsb
out
ror
jge
jecxz
out
repz
sbb
out
popa
test
incb
lcall
or
dec
rcrb
les
sub
andl
cmpb
cmpsb
pop
xchg
mov
stc
add
out
pushf
xchg
jne
int3
sub
jmp
cmpb
or
push
cmc
sahf
adc
mov
lea
cmp
push
add
loopne
mov
add
fldl
mov
or
aam
int
aad
out
xchg
push
scas
xchg
testb
cmc
cli
pop
inc
imul
inc
cmpsb
mov
movntps
or
enter
and
andb
test
test
mov
addr16
enter
pop
jmp
dec
rolb
adc
xlat
mov
and
popa
xor
xor
fists
repz
pop
out
mov
orl
lods
lcall
cmp
and
dec
xchg
pop
sahf
fldl
inc
scas
add
enter
mov
cld
out
out
pop
cld
mov
pop
inc
std
fcompl
addr16
mov
mov
inc
adcb
mov
push
test
dec
pop
lret
pusha
not
push
into
sbb
lods
dec
jmp
pusha
sub
push
dec
push
jecxz
pushf
add
ficoml
sahf
ss
call
push
fcoms
push
pop
cli
xchg
mov
mov
popf
in
lret
jge
mov
mov
or
push
loope
mov
pusha
jmp
dec
icebp
mov
dec
movsb
mov
std
push
mov
or
pop
sbb
pop
xorb
lods
pop
fiadds
xor
sub
xlat
pop
hlt
inc
inc
jnp
subps
jo
in
lods
cmp
sub
push
adc
mov
cld
or
ja
push
les
xor
popf
push
adc
clc
push
sbb
js
nop
call
es
lret
testl
add
inc
or
xchg
sbb
leave
push
inc
mov
repz
ret
and
xchg
dec
push
lcall
jle
data16
jge
pushf
into
inc
push
push
pop
out
imul
fsubrl
add
mov
mov
fs
xchg
mov
mov
sti
mov
loope
inc
cmp
dec
scas
filds
adc
sbb
loopne
pop
out
fcmove
pop
sbb
jns
xor
sbbb
dec
sbb
or
mov
clc
fistps
loope
sub
sti
sbb
clc
lods
pusha
pop
ds
mov
out
jne
jo
add
pop
jecxz
dec
ljmpw
or
arpl
add
cld
pop
cmp
test
pop
std
mov
pusha
rorl
push
lret
jno
add
decb
mov
jns
add
xchg
test
sbbl
xor
sub
jle
cmpsl
dec
icebp
mov
xor
iret
inc
push
add
lds
ret
out
out
dec
xchg
mov
stos
or
cmpl
repnz
scas
adcl
movl
push
test
mov
data16
cmpl
adc
stos
imul
decl
je
lock
fwait
cmp
jo
fidivl
enter
mov
adc
test
and
lods
mov
push
pushf
adc
or
mov
and
aad
pop
add
sbb
mov
sbb
daa
xchg
loope
push
lret
jl
mov
test
xchg
divl
push
push
adc
adc
out
mov
inc
fxch
call
pusha
mov
push
in
sub
rorb
div
imul
dec
jne
lods
push
and
shl
pop
add
push
fisubrl
add
aam
in
mov
mov
ds
scas
adc
mov
fistl
push
das
cmp
inc
push
lds
xor
add
jbe
lret
jnp
pop
stos
scas
repz
sub
push
xor
adc
push
cmc
int
or
add
mov
cmp
arpl
jecxz
sub
mov
push
aam
lret
push
out
mov
jg
dec
cs
push
mov
mov
fsubs
test
mov
sbb
mov
negb
mov
xor
loop
mov
fists
adcb
push
in
subb
dec
rorb
lods
les
movsb
jbe
ja
aam
or
push
jp
jge
fmuls
mov
fistpl
xchg
sub
jnp
sub
icebp
dec
push
call
rclb
cmp
mov
test
fsubrl
mov
into
imul
push
adc
and
test
out
pop
rolb
pop
aaa
dec
pusha
inc
cltd
test
cmp
sahf
cs
mov
shlb
pop
test
stos
xor
fld
xchg
fidivs
enter
mov
or
push
fs
adc
push
pop
repz
ror
inc
enter
in
lcall
or
mov
jb
lds
scas
xchg
loop
daa
fwait
ret
dec
and
xchg
in
dec
push
stc
jl
dec
fwait
jb
mull
loop
pusha
dec
adc
in
mov
out
push
cmp
loope
sbb
push
cltd
aam
ljmp
loopne
out
jg
mov
lock
test
jno
sbb
xor
in
imul
loopne
orl
pop
lock
out
add
push
imul
call
jnp
and
out
lea
mov
in
flds
pop
pop
cmp
and
sahf
int
pop
lods
ret
das
mov
push
sub
jae
or
fdivl
sbb
in
mov
pop
in
rclb
int
loope
cld
imul
insl
jns
xlat
call
cli
pop
mov
mov
adc
loopne
test
lret
inc
or
faddl
push
icebp
enter
test
pop
pop
pop
xchg
sbb
out
out
mov
pop
xchg
mov
xlat
xchg
dec
cltd
mov
lods
jbe
cmc
xor
sbb
mov
in
icebp
fsub
popl
mov
jbe
idivl
cmp
inc
les
cs
hlt
addr16
and
xor
jb
ljmp
rcll
daa
shr
fisttpl
dec
and
and
lcall
mov
lea
pop
jb,pt
push
std
test
or
jne
pusha
mov
sbb
int3
cmp
bound
data16
jp
aad
out
loop
jmp
lcall
sbb
mov
mov
rcrb
push
dec
jl
aaa
dec
adc
ljmp
push
mov
xchg
pop
mov
mov
jle
fldt
mov
movsb
movsl
imul
xlat
jl
jo
xor
jnp
hlt
popa
hlt
push
dec
sti
xchg
or
loopne
push
fdivrl
cmpsl
lcall
jge
cmpsl
mov
push
cmp
or
mov
pop
jmp
xchg
pop
inc
cmp
mov
inc
mov
xlat
push
cmp
insb
pop
mov
pop
jge
rclb
cmp
test
jmp
hlt
inc
push
insb
jnp
test
mov
ds
cmp
movsb
std
jle
out
test
in
lret
je
iret
xchg
push
sub
jmp
out
jne
xchg
mov
aam
fsubr
fwait
xor
mov
mov
lods
pop
push
in
mov
ds
out
jne
dec
les
push
push
sub
xchg
push
and
mov
mov
xchg
pop
aad
mov
jns
xor
icebp
jne
clc
pop
adc
movsl
icebp
pop
pop
testl
xor
scas
into
outsl
or
movb
cs
xchg
aad
dec
lods
push
add
setbe
lcall
mov
cwtl
fdivs
pop
lret
inc
xor
push
xor
inc
scas
popf
cmp
jnp
sbb
les
andb
popf
out
int3
inc
stos
mov
repz
or
pop
lea
xlat
push
outsl
nop
inc
pusha
inc
shl
push
and
sbb
sbb
push
stos
jne
ret
insl
lcall
push
push
int
lock
test
lea
les
stc
inc
xor
dec
hlt
pop
and
xor
xor
xchg
fidivl
sbb
xchg
mov
je
ss
cmp
sub
nop
pop
into
enter
mov
fisttpl
push
adc
adc
mov
xor
test
jo
push
cmp
sbb
stos
add
sysenter
es
imul
repnz
sbb
loopne
pop
mov
pop
mov
sbb
pop
push
jno
sarb
jbe
push
pop
ficoms
pop
shr
int
pop
mov
notb
dec
xchg
bound
imul
cmp
cmp
adc
cmp
jg
mov
pop
lcall
scas
jo
dec
insb
lret
xchg
mov
int
in
cs
imul
push
stos
jge
out
test
sbb
insb
xchg
outsb
adc
divl
adc
imul
pusha
mov
in
cld
lods
ss
push
xchg
test
sbb
push
enter
dec
xchg
sbb
daa
jp
ljmp
cli
xor
and
lds
movsl
lock
leave
push
adc
mov
dec
jg,pn
outsl
dec
pop
pop
movq
jg
fistps
out
iret
lahf
fisttps
maxps
dec
das
jg
outsl
dec
pop
pop
movq
jg
fistps
out
iret
lahf
fisttps
maxps
outsl
iret
pop
pop
outsl
aas
ljmp
pop
lahf
iret
scas
mov
out
mov
pop
dec
das
jg
outsl
dec
pop
pop
movq
jg
fistps
cwtl
mov
inc
push
int3
int3
int3
int3
int3
mov
stos
mov
stc
lret
jne
leave
sbb
sub
cmp
imul
mov
mov
fldl2e
leave
cmpb
sub
js
or
cmp
imul
mov
or
mov
ljmp
jno
insb
pop
adc
sbb
xlat
stc
in
cltd
ret
std
ljmp
jle
sbb
jecxz
inc
cmp
imul
fsts
sbb
or
xlat
lret
push
loop
lock
jle
in
aas
cmc
pop
xchg
xchg
pop
push
sub
in
xchg
in
rcrb
rcrl
cli
scas
outsl
pop
sub
imul
ret
sarl
imul
add
cmc
sub
popf
scas
neg
xchg
movsb
pop
pusha
dec
jnp
movsb
lret
adc
add
addb
cmc
stos
push
sbb
dec
ds
imul
sysenter
pop
cwtl
mov
add
es
mov
nop
sar
das
hlt
dec
cmp
pop
push
outsl
loop
lcall
sbb
ljmp
outsl
sub
cmp
dec
arpl
push
adc
mov
fucomi
stos
icebp
mov
lods
lods
leave
scas
cmp
sbb
dec
or
pop
aas
xor
sub
hlt
out
int3
jmp
call
xchg
sub
pushf
sahf
pop
inc
jnp
sbb
pop
add
pop
xor
adc
clc
fcomp
fildll
ljmp
sbb
or
jns
imul
mov
mov
fldl2e
leave
cli
cmp
sub
sbb
or
jns
imul
mov
repnz
inc
dec
js
mov
pop
cmpsl
insb
jp
mov
jmp
sub
enter
mov
xlat
loope
icebp
fs
es
aas
lcall
cwtl
and
leave
ljmp
in
and
pop
sbb
push
pop
jmp
pop
add
lock
sti
mov
popf
cmp
adc
dec
jmp
rcr
int3
jae
lock
ds
je
or
outsb
ds
pop
cwtl
sbb
jl
gs
dec
pop
arpl
push
push
dec
dec
insb
fistpl
xor
and
fbstp
stos
loopne
out
xorl
dec
fildll
pushf
ret
shr
jo
push
mov
aaa
push
pop
mov
inc
lods
add
clc
pop
sti
ret
pop
sub
movsb
cld
jae
adc
add
lcall
subb
out
xor
xorb
cli
sbb
adc
mov
pop
fisttpll
jge
xor
xchg
jo
int3
ret
stos
and
mov
lret
lods
jbe
or
fstpl
mov
nop
je
xchg
cli
in
es
mov
pop
inc
pop
arpl
jp
pop
jp
xor
push
push
imul
call
das
add
jae
or
adc
sub
fst
ss
dec
cld
mov
push
nop
hlt
mov
pop
insl
or
add
inc
mov
loope
push
add
inc
dec
inc
fldl
mov
push
and
pop
outsl
loop
cmpsb
sbb
sbb
call
ret
sbbl
insl
jns
mov
xchg
out
sbb
adc
inc
sub
nop
and
mov
mov
repnz
sub
orl
outsb
mov
pop
xor
loop
in
dec
dec
xor
iret
inc
jp
rorb
daa
add
insl
test
fadds
add
aas
pop
xor
or
sbb
and
jmp
add
and
lea
std
mov
xchg
mov
cli
mov
xor
sub
roll
loopne
dec
jmp
adc
cwtl
xchg
and
lahf
aaa
xchg
das
add
pop
mov
jns
lret
fsubrl
push
jl
clc
xor
mov
inc
aad
shrl
adc
lahf
ret
mov
pop
pusha
and
leave
outsl
js
push
cmp
mov
idiv
in
pop
jae
shlb
aaa
and
mov
push
inc
dec
das
bnd
mov
pop
mov
push
sbb
xchg
xor
cmp
notl
push
adcl
mov
push
lcall
mov
inc
pop
out
inc
mov
push
repz
bound
mov
push
movsl
aad
or
ljmp
dec
faddp
ret
cmp
movsl
push
int3
pop
jle
pushf
arpl
fstps
psubsb
in
mov
imul
adc
sbb
lahf
jmp
pop
or
cli
jne
jnp
das
adc
inc
stos
sub
push
pop
test
push
pop
add
xchg
scas
shll
lods
cmp
inc
jne
pop
push
pop
lods
fcomps
stos
mov
sub
mov
inc
mov
jmp
inc
lea
or
mov
lods
cmp
and
cmovge
mov
sbbb
or
daa
push
repnz
out
test
sbb
jge
outsb
loopne
outsl
cmc
dec
or
aad
sbb
cli
subb
aad
jl
jb
ficoms
dec
loop
cmpsb
cmpsb
sub
mov
jg
leave
xchg
pushf
lods
jmp
js
sbb
pop
pop
xchg
sub
cld
dec
push
adc
xchg
push
insl
jp
das
stc
ds
push
mov
xchg
adc
out
jbe
inc
arpl
or
bnd
mov
aam
insb
or
movsb
inc
lret
iret
push
cld
sarl
sahf
mov
mov
dec
or
mov
push
roll
dec
xorb
ss
ret
cmp
push
cmpsl
das
pop
cmc
sub
cmp
and
into
cmp
xchg
int3
xor
push
stos
push
mov
add
lock
js
shll
clc
sub
jno
in
adc
dec
add
push
rcll
or
push
dec
mov
push
divl
fstl
adc
leave
imul
scas
inc
jnp
cltd
clc
cmp
mov
out
xlat
or
movsl
orl
popa
movl
push
push
cltd
inc
das
dec
pop
rolb
sub
xor
sub
dec
clc
push
mov
push
aas
xchg
xchg
pop
sbb
cmc
sbb
pop
movsb
mov
bound
dec
xor
cmpsl
inc
aam
rclb
cmpsb
mov
hlt
insl
scas
addr16
dec
or
into
fiaddl
mov
sbb
mov
xor
jb
fsubs
push
sbb
xorl
add
dec
roll
rorl
and
jne
cmp
inc
loop
dec
pop
daa
inc
nop
das
outsb
adc
fldt
add
mov
pushf
jecxz
inc
or
lock
call
jae
xchg
divl
rcll
lock
mov
dec
into
xchg
pop
push
enter
jnp
xchg
cli
sub
xor
xchg
aad
enter
cmpl
jg
loopne
pop
js
clc
arpl
out
lock
dec
pop
cmpsb
frstor
push
nop
add
fdivs
or
testl
mov
popf
push
mov
fiaddl
imulb
mov
in
lea
jae
jmp
pop
ja
dec
mov
jnp
es
add
mov
pop
inc
or
mov
shlb
or
lods
adc
pop
cmp
test
mov
ljmp
dec
jo
popf
in
and
or
sub
mov
cmp
or
xchg
subl
jmp
pop
jecxz
inc
xchg
and
inc
xor
mov
cmp
push
jns
xchg
lret
aaa
sub
repz
sbb
pop
test
cltd
lahf
int
sub
lds
cmpsb
add
push
rcrl
gs
jae
inc
jmp
out
cmp
arpl
jne
shrb
mov
xor
sbb
mov
mov
inc
pop
xorl
jp
push
add
std
adc
cmp
fdivr
cmp
lods
cltd
xor
push
push
sahf
sub
cmp
mov
pop
aad
push
pop
dec
lods
fstpt
mov
jle
sti
sti
leave
inc
mov
mov
mov
cmp
je
add
mov
and
aaa
cmpsl
adc
aaa
movsl
cmpsl
sbb
es
inc
das
sbb
daa
ljmp
cwtl
iret
dec
jmp
push
jo
gs
pop
xchg
push
cltd
push
inc
add
fistpl
cli
or
mov
mov
jle
push
or
xorb
push
adc
xor
mov
jnp
aas
pop
scas
inc
outsb
pushf
test
ficomps
aam
imul
xlat
popf
je
jae
mov
mov
in
addl
sahf
cmp
addb
mov
and
sbb
or
gs
mov
jecxz
orb
bnd
push
shrb
ja
loop
out
inc
push
daa
jle
push
adc
dec
sarb
sbb
mov
dec
push
xchg
xchg
dec
or
lods
sbb
rol
stc
rol
pcmpeqb
aas
adc
dec
push
push
pop
insb
mov
pop
jg
daa
xchg
cmp
shll
xchg
pop
mov
in
in
mov
add
jno
int3
andb
fmul
in
fdivl
addl
jl
mov
lret
jne
and
pop
push
ds
jo
lods
mov
xchg
or
inc
push
lock
push
cmc
sub
xor
mov
mov
lods
sub
popl
sub
jnp
scas
rcl
popf
fwait
inc
pop
mov
adc
xchg
aad
and
pop
cmp
mov
xor
aad
or
js
fistps
push
xchg
loopne
mov
push
lahf
daa
adc
jl
fildl
out
dec
stc
hlt
lret
jl
sbb
pop
dec
lret
mov
mov
add
or
in
hlt
sbb
rol
sbb
das
xor
pop
inc
jmp
mov
xchg
daa
add
cmpsb
sar
push
and
jae
arpl
mov
jmp
icebp
dec
push
movsb
lret
xchg
sbb
enter
lcall
jbe
pop
xchg
push
or
into
inc
xor
dec
dec
cld
iret
jae
pop
lcall
adc
dec
lret
mov
push
dec
add
cltd
xor
insl
sub
xor
sarb
ret
jbe
mov
pop
xchg
jmp
xor
push
jecxz
cmp
cwtl
rorl
mov
scas
leave
jmp
pop
or
subb
dec
mov
lahf
les
das
dec
mov
mov
pop
or
in
xchg
sub
in
pop
stos
dec
sti
xor
add
pop
mov
aam
jl
pushw
xchg
std
orb
fstpl
ret
out
sbb
sub
fwait
inc
mov
push
jecxz
fs
fstpl
mov
roll
or
ret
mov
insb
jo
mov
cmpsb
adc
loope
cmpb
mov
int
out
outsl
std
adc
sub
stos
jbe
in
pop
jle
jne
inc
or
shll
inc
lods
dec
mov
ja
push
sbbl
movsl
insl
mov
dec
push
push
jo
addr16
mov
cmp
jmp
ss
test
imul
aam
xor
sar
insb
mov
nop
outsb
fmull
icebp
mov
es
fidivrl
rclb
mov
dec
mov
scas
iret
int3
pop
test
std
push
inc
in
jne
test
jb
fstl
push
arpl
xchg
mov
push
iret
push
inc
xor
dec
xchg
andl
les
sub
test
mov
cltd
aam
lods
sarl
fistps
xchg
sbb
lds
sbb
bound
lods
fstl
add
jecxz
xchg
xchg
fwait
call
add
jp
aaa
dec
cwtl
mov
ljmp
aam
lods
insl
hlt
mov
and
dec
jle
and
cmp
mov
sbb
das
add
xor
pop
sbb
xchg
mov
adc
xchg
mov
push
aam
nop
lret
pop
pop
push
or
mov
and
jno
dec
test
xor
cs
rcll
lahf
out
ret
and
aaa
dec
sub
jecxz
insl
add
push
cmp
jle
xor
enter
imul
mov
or
cmp
negl
inc
shl
push
dec
mov
cmpsb
mov
test
jnp
pop
or
test
sahf
jne
rcl
pop
in
lret
cmp
jne
and
mov
dec
fistl
popa
ss
mov
std
ljmp
dec
or
lahf
sbb
xor
cmpsl
xchg
stc
inc
ljmp
add
push
inc
cmp
out
imul
rcl
cltd
mov
and
sub
mov
sub
xchg
xor
mov
and
sahf
and
icebp
incl
push
adcl
sbb
dec
icebp
dec
add
into
pop
idivb
rclb
pop
jnp
aad
pop
test
cmp
out
rcll
xor
repnz
cltd
dec
fstl
repnz
push
loope
fsubr
in
push
sbb
out
dec
cltd
out
mov
cs
dec
es
sub
dec
je
xchg
sti
daa
adc
in
das
xor
or
xor
imul
jecxz
ret
sub
test
das
jb
cmp
cmp
sahf
fmuls
add
fcmovnb
clc
stos
scas
rcrb
movsb
in
lcall
inc
shll
pop
sub
rorl
out
xchg
adc
cmp
and
enter
outsl
notl
mov
mov
je
and
lea
out
adc
xor
test
mov
jge
cmp
mov
xor
mov
inc
insl
sbb
push
mov
dec
pop
pop
sub
mov
fsubl
push
xor
lock
movsl
pop
mov
iret
cmp
or
xlat
int
xor
pushf
and
bound
test
insl
lea
js
fistl
adc
fsubrs
add
out
jbe
ja
enter
popf
xchg
inc
sub
fadds
push
cmpsb
xchg
and
mov
aad
inc
add
imul
mov
mov
clc
mov
mov
sbbb
cmp
xchg
push
pop
ja
leave
loopne
call
mov
cmp
loopne
pop
add
lods
xchg
repz
sbb
aad
inc
sbb
sahf
ret
lret
jns
mov
mov
cmpsb
push
mov
pop
movsb
pop
loopne
and
inc
cmpsb
xor
fsubr
testb
daa
mov
add
dec
cwtl
in
cmc
inc
cli
push
add
cmp
xchg
fs
iret
mov
adc
jb
cmp
loopne
ljmp
sub
xor
popa
cmp
xor
push
test
push
push
inc
xor
push
sti
xor
xchg
mov
jle
inc
inc
jmp
mov
mov
sub
jne
pop
test
mov
int
push
out
dec
cmp
sub
mov
out
mov
cli
and
loopne
or
or
je
or
pop
push
xchg
xchg
jbe
es
int
pop
cld
lods
call
push
adc
mov
dec
dec
lret
mov
cwtl
mov
adc
call
adc
pop
sub
sub
push
mov
loop
xor
sbb
adc
jnp
ret
shlb
mov
js
insb
mov
mov
jb
inc
nop
aaa
pop
in
ret
add
xchg
aas
std
inc
leave
dec
pop
add
and
out
pushf
jp
sub
out
mov
dec
or
inc
dec
jb
adc
cwtl
mov
pop
int
sub
xor
jg
sti
out
fwait
dec
or
cld
xchg
into
mov
lret
jle
xlat
int
xchg
aam
test
push
cmp
scas
lcall
lcall
xchg
adc
inc
pusha
int
xchg
mull
sbb
jg
xorl
int3
mov
jle
addr16
addr16
xor
leave
dec
cltd
mov
add
clc
mov
lahf
inc
sub
add
call
hlt
add
repnz
fs
int3
mov
out
or
sbb
and
jne
or
fbstp
sub
sub
ja
or
outsl
insb
or
sarl
xor
xchg
in
dec
push
popf
outsb
je
enter
hlt
mov
sbb
xlat
mov
adc
dec
and
mov
lahf
stos
pushf
dec
cld
iret
fisttpll
pop
movsb
bound
fmul
es
lds
fldl
addr16
cmp
xchg
xchg
jg
ds
lods
nop
outsl
xchg
pop
jmp
pop
out
in
push
nop
mov
test
jecxz
out
adc
mov
mov
dec
outsb
xor
or
out
clc
pop
mov
jmp
xchg
and
pop
cmpsb
mov
dec
mov
cmp
sbb
sbb
hlt
mov
lret
mov
mov
inc
pop
inc
xor
jle
inc
cmc
dec
repz
jl
jle
lea
xchg
cmp
insb
push
sbb
lret
xchg
xor
adc
fnstcw
cmpsl
add
int3
daa
jne
jecxz
sbb
shl
sbb
aam
and
push
mov
mull
int3
xor
xchg
mov
push
loop
sbbl
test
shlb
xchg
mov
push
and
jmp
push
mov
stos
ja
inc
adc
sbb
or
adc
flds
es
es
push
rcrl
lret
leave
das
cmc
clc
ljmp
sbbl
lods
mov
mov
cli
aas
loopne
andl
shlb
mov
in
and
clc
mov
repnz
popf
hlt
mov
pushf
outsl
adc
jmp
jg
mov
rcll
push
cltd
es
add
push
ficomps
adc
inc
std
scas
jo
mov
jge
push
addr16
xchg
nop
cmp
bound
push
test
or
cli
stc
mov
jl
movsl
push
add
sub
loopne
outsb
fs
pusha
pop
xor
and
xchg
or
es
adc
pop
and
adc
loope
dec
pushf
outsl
push
push
xchg
incb
push
cs
hlt
and
imul
lret
jno
cvtps2pi
rorl
cmp
in
sub
arpl
or
or
dec
cmp
push
addr16
push
js
mov
sahf
adc
or
dec
in
jle
mov
pop
xchg
adc
cmpsl
mov
int3
and
dec
push
out
repz
mov
decb
lods
xchg
jno
mov
cmp
mov
aaa
sahf
notb
cmp
mov
push
or
loopne
inc
pushf
out
sub
lods
mov
add
stos
or
notb
dec
jnp
cmpsl
mov
inc
data16
ret
idivl
cwtl
push
fcoms
pop
clc
xchg
shrb
add
add
add
movl
jo
and
fcomip
adc
add
rcrl
and
daa
repz
shl
fsubr
push
mov
scas
sub
rorl
jno
add
sbb
cwtl
push
and
sbb
ret
or
repz
jno
sti
lods
dec
push
int3
shll
lods
imul
out
arpl
cmp
nop
inc
mov
in
pop
cmp
jbe
adcb
add
cmp
dec
jle
xlat
push
jp
aaa
loopne
lds
ret
stos
mov
test
adc
and
pop
sub
dec
mov
cmpb
xchg
or
out
pop
sub
mov
push
jbe
or
jbe
adc
push
shll
popf
mov
jl
inc
clc
jbe
imull
xchg
sahf
jbe
dec
dec
out
outsb
aas
mov
jne
cld
add
sbb
cmp
lret
rclb
rep
jge
xchg
lods
lret
repz
xchg
cmp
xchg
jecxz
sbb
mov
jae
ret
sbb
and
sbb
shl
outsl
lret
and
cltd
xor
fiadds
pusha
add
xor
xchg
cs
dec
mov
ret
lret
popa
push
mov
mov
ja
enter
push
les
orb
out
sahf
jno
jl
push
or
lock
pop
ror
jnp
inc
mov
mov
cmc
push
decl
or
jno
xor
pop
push
pop
shr
addr16
xchg
pop
adc
mov
xor
sbb
pusha
add
inc
pop
ret
add
sub
pop
in
and
jl
daa
mov
push
mov
mov
out
or
adc
addl
test
movsl
pusha
cmp
and
lcall
jbe
pop
adc
dec
or
mov
jns
dec
sahf
add
xor
rcr
loopne
add
jmp
push
clc
int
out
cltd
mov
cmpsb
mov
cmp
out
pop
sub
in
xor
lods
cmpsb
push
dec
xchg
mov
pop
cmpsb
movsb
jecxz
scas
arpl
mov
pop
mov
cld
sub
mov
fisubl
fsub
jecxz
mov
lock
pop
inc
enter
xor
adc
jo
stos
inc
and
adc
jg
and
xchg
or
and
cld
sbb
movsb
jecxz
jnp
cmp
sub
add
sbb
jno
sbb
jmp
insb
lret
fldl
push
xor
mov
mov
test
xor
std
pusha
imul
lods
push
push
jecxz
cmp
dec
nop
pusha
add
inc
adcl
inc
pushf
aas
adc
dec
cmp
jmp
ljmp
push
fs
push
dec
inc
inc
into
nop
loope
push
dec
push
push
icebp
mov
addr16
rorb
js
or
lcall
xchg
sub
sarb
in
fucomp
mov
cmp
aad
cmp
test
cld
std
subb
xchg
and
mov
pop
mov
jns
insl
insl
pop
push
bound
and
data16
mov
das
stc
jle
daa
ds
xor
cld
je
or
mov
sbbb
inc
cmp
pushf
mov
int3
jmp
outsb
loopne
pop
jge
pop
xor
jbe
bound
or
out
lock
fnsave
inc
push
xchg
je
stos
std
sbb
jle
rorl
popa
sub
or
push
pop
fnstcw
rolb
mov
mov
xor
shll
hlt
cmc
cmc
aaa
int
push
sbb
xchg
dec
mov
movsb
into
push
fldcw
cmpsl
sbb
ljmp
inc
lret
ret
jbe
adc
xchg
jecxz
out
mov
daa
xor
inc
adc
inc
jg
sub
int
and
aaa
mov
ja
das
xchg
mov
lahf
mov
loope
bound
xchg
inc
repnz
jmp
lea
add
ds
out
stos
inc
sub
pusha
sbb
and
xchg
outsl
insl
ja
or
jns
je
jb
stos
pop
loope
mov
jmp
mov
inc
ret
or
jmp
adc
mov
push
push
push
iret
xchg
in
notl
dec
icebp
mulb
pusha
enter
lahf
fisttpl
push
pushl
pop
pop
pop
std
mov
ret
out
ret
adc
mov
adc
xor
rclb
loope
lret
fistps
test
insl
push
fdivrl
pop
out
lock
int3
aam
pop
rclb
outsb
push
rorl
mov
aas
dec
pop
push
jnp
and
loopne
hlt
dec
gs
movsb
pushl
ret
fnstcw
lahf
je
insb
scas
xchg
xchg
aad
mov
inc
ja
rcl
xor
cmp
pushf
adc
cmpsb
dec
dec
or
and
jnp
imul
sub
out
insb
aad
rclb
or
or
mov
in
in
dec
lret
xchg
mov
inc
pop
sar
ror
ss
test
and
adc
cmpsb
bound
icebp
ficompl
inc
pusha
sub
push
mov
cwtl
pusha
nop
aaa
mov
cmpl
mov
adc
xchg
sub
xchg
scas
je
inc
cmp
ficomps
in
mov
add
and
daa
loop
fcoms
mov
ljmp
push
mov
fwait
das
mov
popa
jge
aad
or
out
dec
fbld
jno
insl
pop
rcll
sub
and
shrl
cs
lcall
jmp
cli
cmp
sub
sbb
or
jns
imul
mov
mov
fldl2e
leave
cli
cmp
sub
sbb
or
jns
imul
mov
mov
fldl2e
or
cmp
sub
jmp
dec
jns
pop
push
jp
mov
lcall
stc
fcmovu
ljmp
mov
or
ret
cmpsb
xchg
mov
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
in
cmc
push
lds
cmc
adc
fidivl
cwtl
xor
inc
in
cmc
and
movsl
adc
push
lds
jne
add
xchg
inc
jne
jne
inc
in
cmc
and
in
mov
xlat
in
push
int
mov
lret
xchg
sub
sbb
pop
cld
pop
roll
mov
cmp
adc
sahf
inc
cmp
jecxz
mov
daa
or
sbb
loopne
jmp
into
or
imul
add
ja
loopne
test
test
cmp
inc
or
jg
pop
push
xor
xor
push
jge
fdivrs
movsl
leave
xchg
add
test
inc
or
icebp
int
add
xchg
lret
je
jo
stos
or
test
out
push
js
dec
ss
push
enter
gs
mov
inc
and
xchg
cli
mov
dec
or
je
dec
pop
inc
mov
jbe
popf
leave
lcall
in
pusha
test
add
inc
in
movsl
vpmullw
add
mov
pop
cmc
dec
mov
pop
movsl
adc
push
mov
jno
jp
dec
xchg
push
sbbl
ss
xor
in
aam
add
leave
push
test
pop
mov
adc
and
les
adcb
adc
popa
mov
test
jne
inc
in
cmc
and
movsl
adc
push
lds
jne
add
xchg
xor
inc
in
cmc
and
movsl
adc
cmpb
pop
leave
pushf
mov
cmpsb
rorl
push
jecxz
and
outsl
mov
sub
sub
into
jnp
push
ja
fmulp
pop
push
cmp
adc
dec
jl
fmul
mov
outsl
jp
cmpsb
addr16
xchg
jg
jns
push
mov
scas
dec
jmp
test
sbb
rorb
cld
push
jmp
dec
lcall
adc
decb
pusha
sub
jmp
enter
and
arpl
das
adc
xchg
in
test
jge
leave
pop
mov
jbe
adc
jp
sbb
imul
mov
xchg
mov
sub
mov
inc
pop
push
xor
pusha
fimuls
push
sbb
sbb
xchg
aad
data16
ljmp
xchg
or
imul
stos
pusha
dec
test
push
mov
add
lret
jecxz
jle
out
cs
push
cmp
pop
xor
mov
lods
cmp
sarb
fists
xor
cmp
dec
push
pop
inc
sub
xchg
xchg
insl
mov
add
ficompl
scas
out
jmp
testl
fimull
xor
jp
mov
or
xor
xor
cmp
jb
loopne
pusha
fcmove
lahf
xchg
scas
jns
adc
dec
dec
pop
push
jbe
into
cwtl
inc
mov
rcl
mov
das
das
ds
adc
sub
xor
jp
mov
shrl
mov
mov
cs
aas
pop
test
cwtl
jmp
jp
in
jbe
or
cmp
daa
loopne
add
std
cmp
clc
mov
mov
cmpsl
mov
pop
test
loope
in
push
and
push
sub
xchg
jl
bound
inc
jl
cmpsl
mov
pop
or
dec
addl
ja
int3
lea
stos
mov
dec
das
inc
xchg
inc
hlt
mov
mov
add
cmc
lret
shll
int3
sub
mov
sbb
mov
fisttps
out
xor
push
aam
cmp
popf
out
push
leave
punpckldq
jg
cmp
test
xchg
fdivs
mov
jle
jp
jb
xchg
stos
mov
cmp
cli
insl
cltd
pop
cmpsl
push
les
insl
movsl
xchg
ret
cmp
and
xchg
cmc
pop
xchg
je
pop
pop
mov
push
mov
xor
dec
orl
mov
aam
outsb
or
and
cmp
jno
imul
jg
je
imul
inc
xor
mov
inc
xor
cmp
in
pop
mov
mov
jae
sbb
mov
fbstp
cmp
adc
loopne
push
and
lret
or
adc
add
inc
out
dec
push
mov
cmp
jl
cld
jnp
int3
adc
mov
std
jo
jge
addr16
fldcw
out
xchg
loopne
lods
mov
mov
aaa
popf
lcall
pop
ret
inc
ret
mov
mov
ret
push
leave
mov
jb
or
mov
insl
push
push
xor
cmp
cwtl
jns
ja
fbld
ret
std
scas
add
outsb
cmc
lret
or
xchg
lahf
push
pusha
movsb
insb
mov
xchg
cld
ret
jp
mov
cmp
repz
jnp
jmp
ss
cmp
sub
jl
fistl
add
dec
and
cwtl
dec
nop
mov
mov
lret
loopne
mov
movsb
dec
shrl
loope
imul
dec
aad
cmpsl
cmp
les
push
fucomip
add
jp
mov
data16
lahf
push
out
fisubl
inc
into
xor
out
xor
fstp
addr16
inc
add
cmc
movsl
pop
test
test
imull
xchg
inc
fdivl
out
outsb
pusha
adc
stos
mov
xor
pop
cmp
ret
inc
push
in
xchg
xor
mov
rcr
int3
dec
in
push
aaa
loop
mov
inc
mov
jo
mov
decl
imul
or
mov
jo
out
mov
sub
adc
arpl
cwtl
jb
pop
push
sarb
xor
movl
jge
or
mov
arpl
mov
adc
inc
add
mov
xor
popa
pcmpeqd
sar
xchg
rcll
mov
dec
pushf
lods
push
mov
push
outsb
pop
mull
inc
into
pop
cli
and
sub
pop
cwtl
stos
xor
xchg
mov
test
mov
xchg
loope
mov
ja
xchg
sub
push
aam
andb
or
adc
imul
cli
sub
xor
or
push
test
out
jo
mov
arpl
in
push
pop
cwtl
push
add
sub
das
xor
imul
mov
xor
out
and
sar
jne
ds
jo
filds
and
enter
fildl
push
stos
fstp
loope
jp
es
fsubrp
and
cmp
sub
repnz
aaa
push
fisubl
mov
cmpsl
mov
sub
cmp
testb
clc
loop
lea
fbld
arpl
gs
notb
push
inc
xchg
jae
xchg
dec
orb
out
shll
sbb
ja
or
arpl
stos
and
sbb
aam
push
push
in
repnz
mov
es
scas
fs
fsubrl
pop
sbb
jle
dec
movsl
push
rcrl
cmp
test
pop
faddp
pop
movsl
repnz
jp
subb
aad
dec
adc
cmpsl
add
aas
lret
mov
sub
mov
insb
inc
pusha
or
pop
sub
jmp
icebp
fcoml
pop
subb
and
ja
pop
and
pop
ja
push
pop
push
rorl
mov
lea
push
pop
pop
std
sti
gs
fbld
add
inc
pop
jne
xchg
fpatan
sbb
fdivrl
sub
repnz
cs
or
push
js
add
cmpsl
cltd
pop
leave
cld
lock
popf
pop
or
jb
movsb
jp
and
adc
hlt
outsl
adc
rclb
mov
repz
mov
jge
xchg
push
xchg
push
xor
inc
pop
ja
push
repnz
adc
pop
aas
in
pop
jae
stos
inc
pop
scas
sub
xchg
test
cwtl
sub
mov
fiadds
loop
push
popf
shll
xor
inc
int
push
or
lret
xchg
mov
add
cmp
inc
dec
mov
xor
jo
xor
mov
lods
push
loopne
push
loopne
in
gs
mov
pop
xor
adc
mull
outsl
mov
iret
pushf
movsb
bound
pop
xor
jb
xchg
pop
xor
shll
or
mov
repz
inc
push
int
das
mov
shrb
andl
push
mov
xor
cmpb
xchg
loopne
cmp
nop
lret
mov
push
pushf
inc
dec
xor
inc
push
add
enter
leave
lea
and
vhaddpd
cmc
int3
cli
or
pop
pop
enter
and
push
es
pop
sub
mov
xor
xlat
mov
or
test
xor
xchg
mov
adc
pop
cmc
mov
aas
test
cs
das
pop
and
fsubrs
mov
xlat
mov
jno
rcll
dec
mov
hlt
xadd
add
rcr
int3
mov
inc
mov
jge
int
pop
shll
pusha
int3
sbb
cs
iret
imul
mov
sbb
mov
or
dec
sbb
sbb
sarb
sub
mov
cwtl
decl
dec
cmp
test
cmp
stos
dec
push
mov
loop
xlat
rcll
adc
ja
call
icebp
pop
and
adc
inc
add
jbe
pushf
ficompl
or
inc
mov
data16
jecxz
sbb
fisubs
lahf
mov
outsl
dec
inc
jbe
daa
xlat
sar
loopne
add
mov
mov
lea
adc
add
or
inc
test
pop
cli
cltd
sbb
lret
mov
sbb
sbb
imul
stc
push
pushf
push
jbe
pop
dec
fdivr
adc
dec
int3
subb
iret
lea
cmp
enter
mov
cmp
adc
push
xlat
fisttpl
je
mov
out
jp
stos
cltd
imul
add
mov
push
ret
inc
sub
hlt
sub
shll
leave
xchg
sbb
arpl
testl
and
cld
lahf
xor
sub
popa
and
sub
mov
pop
push
out
ljmp
mov
xchg
fistps
cltd
mov
int3
js
mov
test
pop
or
pop
add
sub
add
sbb
add
sbbb
in
xchg
inc
xor
loop
sub
subb
in
addr16
out
and
push
es
fldl
daa
mov
push
mov
jmp
add
jns
shlb
pushf
pop
cmp
shrl
jp
inc
mov
add
mov
and
adc
in
aas
push
and
sub
jge
dec
mov
icebp
or
pop
xchg
jbe
inc
sbb
sbb
flds
mov
call
sbbl
push
out
addr16
xlat
cmc
sub
adcb
mov
leave
sub
xchg
js,pn
cmp
mov
mov
ss
sub
xor
push
in
daa
jl
dec
in
mov
mov
in
push
xchg
or
mov
jb
mov
mov
push
test
ja
jne
xchg
push
ret
in
sbb
cmp
xor
adc
test
mov
and
sti
in
call
mov
pushf
arpl
sahf
push
mov
mov
stos
lods
mov
or
adc
mov
or
sbb
dec
pop
xchg
movsl
insl
int3
test
dec
jnp
lods
jecxz
pop
fstl
shrb
jmp
sbb
xor
ret
cwtl
xor
lods
loopne
push
jmp
or
pop
fcoml
mov
nop
shll
pop
fldt
sub
inc
inc
outsb
rcll
push
int3
dec
jne
mov
xchg
test
std
int
arpl
popa
int
cmp
out
js
lahf
jae
decb
es
pop
into
call
fstsw
fs
push
inc
sbb
jbe
rorl
lcall
je
jo
or
sbb
mov
nop
jl
sbb
jns
movsb
mov
out
sbb
and
jle
js
cmp
lods
xor
xchg
lods
xor
mov
xchg
aas
inc
xor
xor
repz
clc
push
cld
inc
pop
fiadds
push
inc
xchg
mov
mov
addr16
sbb
or
and
sub
pop
outsb
shlb
push
dec
inc
adc
push
adc
add
pop
inc
repz
mov
in
jo
std
mov
imul
or
mov
dec
xor
flds
in
gs
into
and
add
xchg
repnz
jne
or
addr16
lock
dec
sub
push
into
sub
paddsw
mov
cltd
int
inc
mov
das
hlt
adc
pop
sub
inc
mov
call
stc
sahf
ud2
lahf
adc
mov
xchg
dec
xor
sbb
mov
mov
jo
mov
stos
mov
mov
mov
arpl
je
and
dec
xlat
jae
lret
sub
pop
or
stos
mov
pushf
xor
scas
mov
movsl
xchg
ss
adc
movsl
ja
ja
sbb
jbe
xor
shll
mov
rsm
pop
filds
xchg
les
sub
clc
jle
sti
and
sbb
mov
xchg
int3
cmp
into
jecxz
mov
cmc
andb
pop
leave
ror
push
mov
pop
test
stos
mov
lea
out
int3
inc
stc
jbe
sbb
insb
ljmp
pop
xchg
xchg
lahf
nop
sbbb
adcl
insl
ja
cmp
xchg
add
lret
mov
repz
das
jl
push
push
data16
aam
outsb
jl,pt
insl
jb
sbb
dec
xor
sbb
sub
mov
or
sub
jnp
ja
xchg
insl
pop
out
sub
daa
sub
cmp
fcompl
lods
popf
out
inc
aaa
cld
mul
mov
add
scas
stc
xlat
push
adc
push
addb
popf
mov
test
cmp
sub
aaa
jnp
movsb
mov
dec
std
adc
in
xor
loope
fstpl
or
inc
ret
idivb
mov
pushf
add
pusha
test
adc
push
adc
mov
pop
test
adc
mov
cld
push
incb
aad
xor
sbb
mov
mov
mov
es
push
es
pop
adc
sbbb
jbe
push
inc
jno
leave
xchg
pop
mov
rorl
adc
jns
xlat
or
bnd
cli
pop
mov
add
test
dec
mov
pop
das
add
gs
cmp
mov
jp
xchg
ja
sub
cmp
stc
add
and
adc
adc
inc
inc
mov
xor
divb
dec
stos
fwait
repz
ja
dec
movsb
out
mov
addr16
mov
xchg
push
add
ljmp
outsl
adc
pop
sbb
gs
mov
pusha
push
mov
or
movsl
nop
pop
mov
daa
pushf
iret
popf
add
lret
jmp
es
mov
ss
mov
pop
hlt
mov
inc
sub
jnp
out
pop
jnp
mov
negl
fwait
popf
lret
xchg
and
jnp
or
fdiv
jo
clc
mov
orb
outsb
xchg
insl
sbb
ja
or
add
call
bound
imul
jmp
inc
bound
les
and
mov
fmull
pop
lods
dec
addr16
fcmovu
mov
sbb
lods
cmp
mov
sub
sbb
and
mov
lret
sti
adc
fs
push
sbb
test
ret
sbb
add
mov
cmpb
jp
outsl
add
ja
dec
fwait
and
and
and
std
xchg
mov
xchg
lods
or
jle
xor
out
mov
shlb
mov
mov
lcall
mov
in
push
in
lods
das
cwtl
sbb
icebp
les
dec
enter
test
sarb
xlat
decb
adc
or
cmp
pop
sub
roll
add
pop
movsb
daa
popf
cmp
stos
popa
aas
fstp
pop
xchg
ljmp
es
rclb
dec
aam
cwtl
fisubl
pop
jno
adc
pop
ret
jle
jo
lret
pop
stos
inc
xchg
xchg
adc
repnz
ror
mov
cmp
inc
xchg
daa
jl,pn
inc
jle
cmp
jmp
inc
aaa
out
pop
cmpsb
ljmp
adc
mov
out
mov
cmc
push
pop
sbb
mov
stos
cmp
jno
xchg
or
push
mov
pop
pop
inc
data16
add
inc
lret
mov
scas
out
pop
aad
ss
xor
mov
mov
je
jp
jle
mov
aam
aaa
shl
push
icebp
and
or
cmp
dec
jle
sub
in
sub
cmp
enter
mov
cmp
movsl
es
mov
rcrb
and
cmp
mov
jl
pop
jmp
inc
loopne
and
xchg
push
imul
push
out
in
mull
dec
insl
push
and
inc
imul
cmc
xor
scas
jecxz
and
lods
jecxz
xor
adc
iret
mov
aas
repz
in
sub
sbb
push
mov
movb
cmc
mov
test
jno
mov
xor
test
pop
push
aas
cli
aam
xor
enter
pop
pop
sub
mov
push
sbb
dec
out
cmpsl
or
inc
into
or
mov
push
cmpsl
push
scas
lds
bound
les
and
push
sbb
faddl
xchg
repnz
fldcw
lods
sub
cltd
or
out
iret
dec
jnp
jno
maxps
push
adc
sahf
mov
loope
es
lea
jns
cmp
lods
loopne
adc
out
int
mov
inc
xor
iret
or
sub
es
bound
sbb
xchg
jle
xchg
or
loopne
inc
sub
add
mov
je
jmp
mov
lcall
popa
and
mov
hlt
je
repz
out
push
add
and
xchg
pop
xchg
mov
sub
and
sub
mov
imul
das
mov
incb
out
adc
testb
xchg
jp
xchg
stos
fsubr
popa
push
repz
dec
fld
test
add
call
lcall
xchg
cmp
decl
push
sahf
mov
cli
cmp
es
pushf
xchg
stos
cmpsl
push
jne
push
cmpsb
pop
dec
outsb
inc
adc
shll
jl
inc
pop
vcvttss2si
push
push
adc
adc
xchg
mov
and
pop
test
dec
xchg
imul
adc
xchg
idivl
js
pop
push
dec
outsb
fwait
xchg
aas
xor
pop
jo
addr16
xchg
add
mov
xor
addl
addr16
or
mov
rorl
lods
insb
iret
insl
push
pop
ret
pop
mov
push
adc
push
cwtl
sbb
sub
test
outsl
mov
cmp
clc
add
mov
stc
divl
scas
shll
sub
enter
jl
xor
icebp
adcb
cwtl
mov
mov
imul
mov
out
rcl
iret
out
add
out
mov
mov
adc
mov
test
fnstenv
out
lods
clc
mov
jno
push
das
pop
mov
sahf
out
mov
push
xor
inc
adc
cmpsb
cmp
aaa
cltd
mov
cmp
or
lods
adc
cmc
sub
adc
mov
outsb
dec
inc
cmp
mov
cld
stc
orb
dec
scas
in
cmp
mov
mov
pop
xorb
inc
popa
pop
sub
sti
mov
mov
inc
rcr
jmp
or
xor
xlat
cmp
icebp
push
pop
test
cmp
inc
in
jb
ret
or
cmpsl
cmp
stos
rolb
jo
loopne
fistl
sub
xchg
das
xchg
movb
out
and
mov
fwait
jg
mov
icebp
jmp
jle
pop
not
push
daa
or
push
mov
xchg
test
js
in
push
jae
fwait
pop
icebp
test
mov
scas
sarl
cmp
outsb
insb
das
xchg
pop
mov
imul
stc
outsl
sbb
sbb
mov
lcall
int
movsl
mov
mov
pusha
daa
test
lods
or
pop
sub
jge
jo
out
mov
mov
add
jl
inc
jnp
pushf
pusha
das
fdivrs
dec
fbstp
push
movsb
in
sbb
shrl
aam
pop
gs
and
push
xchg
mov
in
loope
inc
sbbb
ret
insb
sti
ret
sub
in
push
cld
cmp
and
inc
sbb
popa
outsb
pop
es
add
out
xchg
mov
push
aas
iret
jl
sbb
sarb
sub
sbb
push
fisubl
pop
adc
mov
push
sbb
lds
dec
fistpll
clc
jbe
jno
mov
sbb
xor
mov
xchg
dec
out
mov
xor
sub
mov
jmp
mov
fs
into
pop
pop
test
cmc
adc
clc
or
sbb
in
xlat
cmp
addr16
inc
mov
add
cmp
fwait
enter
in
sub
mov
jmp
push
lea
cld
lock
outsb
in
or
sbb
mov
xor
cmp
jge
push
adc
mov
xor
int
ja
or
stc
mov
push
push
and
ljmp
stos
bound
xchg
outsb
dec
jnp
hlt
inc
stos
test
xlat
lds
dec
out
in
das
test
sub
jle
pop
and
ret
cmp
mov
pop
cwtl
je
outsb
shll
adc
cli
or
dec
les
xor
mov
fimuls
and
xchg
test
popf
or
loop
int
mov
sbb
imul
mov
pop
cmp
cli
je
xor
mov
repz
jg
dec
frstor
pop
mov
push
xchg
pop
aad
mov
adc
nop
mov
mov
sub
dec
aad
rcrb
add
das
lret
movsb
aaa
add
xchg
icebp
push
push
and
bswap
pop
stc
cltd
xlat
dec
or
stc
cmpsl
adc
stos
lods
or
imul
push
xchg
mov
aaa
test
in
sahf
cmc
fs
jg
push
or
mov
int3
dec
mov
push
imul
mov
scas
mov
daa
ds
imul
outsl
jge
aaa
sub
mov
jl
jbe
sbb
stos
aaa
call
test
bound
in
push
dec
sahf
push
inc
jbe
stc
pop
or
cmp
push
xchg
xor
popf
cmp
lea
inc
adc
dec
and
fsubrp
ror
mov
dec
mov
loopne
insb
xchg
mov
mov
mov
sbb
xchg
jmp
ret
lods
arpl
and
mov
cmp
push
push
xor
dec
int3
cli
aaa
hlt
sbb
xor
sub
mov
sub
sbb
xchg
mov
cmpsb
adc
push
adc
je
mov
mov
lret
inc
or
jg
jle
ds
shlb
or
repz
sbb
sub
xchg
or
frstor
in
dec
mov
lods
xchg
push
lahf
aam
int
mov
sti
inc
add
mov
cwtl
mov
lahf
xor
sub
push
adc
movsl
je
adc
jnp
daa
mov
lods
ds
mov
push
je
insb
addr16
mov
or
inc
pop
divb
sbb
shlb
in
xor
mov
pop
xor
mov
int3
test
roll
jae
sub
fwait
mov
scas
xchg
and
dec
fnstcw
mov
pop
rolb
jecxz
add
or
mov
es
iret
or
jne
add
xchg
xor
inc
in
cmc
and
movsl
adc
push
lds
jne
add
xchg
xor
inc
in
cmc
and
movsl
adc
sbb
movsl
add
xchg
xor
inc
in
cmc
and
test
mov
inc
notl
gs
cmpsl
add
adc
jg
in
adcb
push
pop
ljmp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmp
mov
mov
scas
cmpb
or
dec
jge
pop
imul
test
cld
leave
int3
jmp
cmp
insl
sub
insb
cmp
imul
mov
mov
int3
icebp
fsub
sub
cmp
insl
push
jns
clts
adc
push
fadd
mov
fisubs
fcompl
aaa
or
push
lods
sarl
push
add
call
add
mov
adc
mov
repz
test
out
jns
xchg
sub
subl
lcall
inc
fisubrl
sbb
jecxz
shr
mov
cmp
xlat
mov
ljmp
fdivrl
cli
out
hlt
mov
jne
fcompl
imul
mov
add
hlt
lods
int3
loope
xchg
inc
cmc
dec
out
rcrl
aas
dec
adc
leave
cmp
in
push
push
sbb
or
xor
xor
sbb
jns
xchg
sbb
mov
repz
mov
mov
int3
jmp
cmp
or
sbb
insb
push
jl
dec
jae
js
mov
jmp
int3
rcr
scas
lret
cltd
mov
inc
data16
arpl
xor
push
sub
clc
fcmovbe
mov
cwtl
xchg
int3
popf
movsb
lret
jle
push
jl
dec
jns
daa
cmp
pop
sbb
inc
or
out
int
cld
lods
cli
cld
fxch
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
test
cld
fxch
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
cs
mov
sub
xchg
pusha
mov
push
pusha
loop
adc
xor
jb
pop
imul
mov
mov
mov
iret
cmp
jmp
loop
shlb
adc
mov
jg
jnp
addr16
popf
out
fbld
push
enter
popa
xchg
out
sbb
mov
out
popl
sahf
jb
rcrl
xor
sbb
movsb
push
add
dec
jmp
mov
pop
or
push
mov
pop
mov
int3
add
mov
xchg
pop
addr16
cmp
stos
inc
in
mov
and
je
dec
or
enter
enter
pop
dec
in
inc
movb
mov
lcall
out
pushl
jbe
jp
rorb
pop
dec
mov
sti
or
mov
pop
jecxz,pt
in
or
jecxz
pop
inc
ret
test
loopne,pt
pop
cmpsb
iret
pop
mov
lods
inc
fs
out
mov
lds
or
stc
push
cmp
add
into
lret
mov
ja
inc
sub
int
push
lock
xchg
and
std
mov
cmp
insb
sbb
add
or
xchg
in
mov
aam
sti
sub
stos
test
xor
mov
fucom
cmpsl
mov
add
jbe
cmp
push
in
mov
fwait
mov
fstpt
stos
sub
es
inc
mov
repz
jmp
imul
cmc
fwait
sbb
outsl
popf
push
and
mov
aam
xchg
xor
push
andb
sbb
jns
mov
test
icebp
in
jecxz
xchg
rol
sbb
in
cmp
xor
lds
push
fmul
orb
mov
inc
add
hlt
mov
into
cmc
fs
fildl
push
mov
jle
adc
sbb
ss
fld
les
jmp
out
fwait
push
jmp
inc
jge
rclb
mov
insb
xor
mov
adc
movsl
int
aaa
cli
inc
push
mov
jl
push
cli
leave
out
jge,pt
or
fstps
pop
xor
aad
mov
loop
pop
pop
push
add
or
mov
ret
jae
scas
pop
pop
sbb
push
popf
dec
stc
push
cld
mov
inc
sub
das
or
aaa
fsubrp
out
insl
add
mov
sbb
test
fidivl
test
or
cmpsl
in
arpl
and
xchg
sub
hlt
pop
mov
push
xorl
negb
mov
add
arpl
cmp
xor
mov
dec
hlt
dec
mov
xchg
dec
in
clc
pusha
test
cmpsb
xor
rorl
pop
jne
mov
stos
or
adc
orb
in
insb
ljmp
pop
loop
dec
sbb
mov
outsb
iret
cli
inc
or
add
inc
xchg
movsl
push
inc
aaa
scas
mov
push
jae
mov
inc
push
movsl
xchg
lcall
aas
fldl
mov
adc
cmpsl
jle
jmp
jo,pt
out
cld
mov
pop
mov
mov
push
lcall
ret
push
test
jle
hlt
test
mov
subl
and
sub
mov
subl
enter
cmp
stc
pop
jg
insl
dec
leave
lock
push
jge
ficompl
jns
jle
xor
jno
fsub
ficompl
stos
lods
sbb
pop
xor
adc
popa
scas
addr16
add
jecxz
leave
push
and
mov
insl
in
ss
out
cmp
pop
dec
xor
adc
fs
jle
fwait
mov
xchg
add
xchg
jnp
inc
xor
mov
or
scas
fists
hlt
xchg
std
out
sti
mov
popa
cmp
or
add
xchg
and
sub
mov
arpl
ret
or
mov
cmp
adc
mov
lret
or
testl
adc
xor
orb
in
fistpl
out
push
pop
arpl
sbb
mov
xchg
mov
mov
inc
iret
test
ljmp
repz
cs
fwait
out
pop
mov
sbb
in
mov
lret
pop
or
pop
cltd
popf
je
push
test
push
jl
xor
xor
xchg
add
xlat
in
orb
cpuid
mov
in
inc
andb
pop
xor
xchg
pushf
cmp
and
mov
inc
xchg
inc
movsb
fstl
adc
or
pop
xchg
push
sub
xchg
mov
es
mov
leave
mov
mov
dec
and
test
in
cwtl
adc
mov
mov
or
jge
push
xchg
cmp
lods
xor
in
imul
dec
outsl
mov
pop
repz
dec
push
stos
mov
and
adc
test
data16
sub
stos
push
fbstp
sub
rcrl
jl
xlat
cmpsb
imul
dec
in
jmp
js
subb
pushf
dec
insb
out
lcall
ret
sbb
les
mov
push
aam
sahf
fdivs
xor
sbb
lret
pop
mov
outsb
loope
pop
dec
jo
jmp
jnp
lock
push
lret
and
insl
ljmp
int3
or
xchg
lcall
jns
push
pop
inc
scas
push
and
pusha
push
sbb
adc
cmc
or
in
push
loopne
lds
lock
insl
cld
mov
dec
mov
mov
add
mov
ljmp
sbb
fwait
sbb
fistpl
push
mov
mov
rorb
xor
aad
out
inc
ds
leave
fiaddl
push
and
loopne
xor
sbb
daa
xor
mov
pop
mov
popf
xchg
cs
xorl
cwtl
in
jnp
insl
xor
add
les
ljmp
test
pop
idiv
cltd
fcoml
lea
jmp
mov
ss
daa
in
or
mov
int3
xchg
lock
dec
xchg
clc
cmp
pusha
in
inc
adc
mov
jnp
push
xchg
xchg
cwtl
and
imulb
pushw
and
inc
push
push
mov
inc
pop
dec
subl
xchg
decb
xchg
push
fildl
lods
stc
and
xchg
andb
mov
or
mov
dec
add
mov
mov
inc
push
lret
shrl
rcr
adc
shl
ja
ret
stc
dec
push
cmc
stos
or
or
and
mov
clc
jmpw
imul
adc
fmuls
aaa
lods
fldcw
lock
xor
pop
jmp
repnz
fsts
push
dec
mov
fstl
and
int
sar
nop
pusha
push
xchg
push
loopne
leave
ret
jbe
shlb
xchg
push
jmp
pop
or
dec
push
sub
xor
dec
shrl
lahf
pop
ja
mov
and
jne
xchg
push
inc
xchg
push
in
lret
jo
ja
fcoms
cmc
mov
push
dec
movsl
hlt
xchg
jmp
addr16
fwait
mov
dec
loop
mov
nop
movsb
daa
ja
shlb
mov
sbb
imul
xor
jp
mov
bound
adc
or
xchg
push
ret
and
cmpb
loop
pop
add
sub
mov
lret
js
push
mov
mov
cmp
mov
into
push
xchg
je
lods
aaa
and
adc
add
imul
in
out
push
incb
cmc
in
cmpsb
and
add
inc
insl
addr16
push
gs
sub
sti
dec
fcomps
fists
sti
cli
push
leave
cmp
pushf
fwait
ret
test
pusha
mov
clc
push
adc
sbb
cmp
mov
movsb
or
mov
mov
in
aas
inc
fdiv
push
popa
js
scas
rcrl
call
test
neg
stos
pop
fcomp
fsubl
cmp
mov
fldenv
cmp
jmp
dec
insb
xor
lods
push
push
dec
mov
sub
je
popf
hlt
popa
jno
jmp
clc
jmp
shlb
rcl
repz
adc
dec
jne
int3
data16
test
roll
inc
jecxz
fbstp
mull
addl
sbb
pop
nopl
fcompl
adc
xchg
test
xor
mov
idivl
cmp
out
dec
pop
lock
push
sub
jo
das
adc
inc
xor
movsl
add
std
dec
mov
iret
fidivs
mov
mov
adc
jp
mov
lahf
repz
jbe
daa
jmp
pop
aaa
cmp
jb
mov
mov
push
pop
inc
arpl
cmpsl
xchg
mov
test
mov
inc
add
rclb
mov
sbb
ret
sub
pop
loope
and
mov
cmp
ret
push
enter
stos
aas
sarl
lret
and
and
add
aad
insl
sti
push
aam
inc
mov
repnz
rcr
cltd
push
mov
or
scas
aas
jge
inc
shrb
sub
rcrl
sahf
daa
into
arpl
icebp
xchg
xorl
es
or
adc
mov
scas
xchg
loop
pop
add
mov
jl
pop
add
andb
popf
loop
dec
in
cmpsb
es
sti
mov
cmp
jns
test
imul
cwtl
iret
inc
adc
or
mov
fsubr
call
popf
mov
mov
addl
add
call
jb
ss
cmp
and
xchg
jns
movsb
orl
stos
mov
and
pop
cltd
cmp
sbb
sbb
pushf
mov
leave
or
in
add
mov
dec
xchg
mov
add
ljmp
cmc
outsl
push
sbb
sbb
sub
les
jae
ret
pop
leave
xchg
xor
sti
jle
push
adc
pop
fwait
loop
pop
pop
imulb
sti
movsl
mov
pop
mov
dec
pushf
dec
ja
cmp
pop
pushf
ret
call
mov
sbb
int3
jns
scas
jns
push
lret
mov
and
aaa
addr16
sbb
movsb
cmp
mov
sahf
aaa
popf
mov
sti
cmc
stos
inc
xchg
dec
or
lds
sbb
sub
repz
push
sbb
inc
dec
aaa
orb
insb
mov
call
pop
cmp
fnstcw
adc
movsb
pop
fstpl
lds
loope
push
cmp
rolb
out
xor
pusha
and
fldt
fwait
jne
cltd
repnz
lea
arpl
out
shrl
push
jle
icebp
call
cltd
jb
mov
subl
or
and
inc
lcall
stos
sub
imul
mov
lods
mov
dec
xchg
lret
and
pop
divb
dec
cmp
or
jne
xor
push
rcr
repz
add
fstpt
int3
push
push
sbb
mov
cltd
mov
arpl
pop
aad
stos
cmp
sub
jbe
add
lods
andb
cli
es
sbb
pop
cs
and
out
dec
xchg
sub
cmp
xchg
jno
mov
int
xchg
mov
add
xchg
xor
ds
out
mov
icebp
and
xchg
dec
jmp
pop
add
aas
ret
je
sahf
sahf
push
adc
pop
lahf
ret
mov
adcb
add
rorl
loope
shll
loopne
or
es
aad
mov
dec
and
shl
push
cmp
and
jae
ds
mov
pop
jmp
xchg
add
jmp
xor
push
lahf
lds
mov
adc
test
pop
loopne
inc
jne
dec
cmp
pop
push
pop
sbb
movb
mov
fsubs
sbb
loopne
fimuls
nop
push
fisubl
out
inc
test
inc
rcll
lret
jne
stos
imul
or
je
out
jmp
sbbl
les
push
xchg
jl
insl
cmp
aaa
adc
ljmp
push
and
filds
pop
cmpsl
leave
or
jb
cmp
or
test
stos
scas
push
int
inc
push
xor
clc
loope
repnz
inc
in
pop
push
add
cli
xchg
dec
out
add
les
mov
out
test
xor
adc
lret
mov
mov
test
std
xchg
arpl
mov
loope
push
jno
pushf
xor
cmp
xor
pop
pop
ret
mov
inc
ljmp
xchg
pushf
add
push
sbb
lds
cs
pop
dec
inc
push
test
lret
call
clc
scas
xor
pop
mov
lods
loopne
jae
scas
call
dec
int3
ja
pop
lar
int
jl
lahf
pushf
cmpl
sub
sbb
add
inc
xchg
push
lods
dec
cmp
lret
or
push
dec
jnp
pop
dec
pop
xchg
add
mov
arpl
jp
push
movsb
cmpsl
imul
inc
lcall
adc
adc
xor
test
ret
add
mov
xchg
xor
inc
test
and
dec
and
sbb
loope
mov
out
into
jecxz
clc
jge
push
push
cwtl
adcb
movsl
and
scas
fstps
dec
bound
repnz
jle
inc
mov
mov
out
mov
lea
push
sub
push
dec
adc
sub
push
and
xor
cmp
arpl
add
sbb
mov
mov
cmp
outsb
cmp
dec
cs
clc
sub
dec
inc
adc
push
roll
test
jo
jecxz
mov
mov
mov
hlt
or
sbb
mov
cld
push
xchg
fildl
and
jecxz
push
xchg
jmp
pop
jecxz
icebp
inc
jle
pop
popa
stc
or
mov
xchg
or
es
cltd
std
in
es
mov
cli
push
jb
aaa
sbb
push
jge
sub
repnz
add
mov
test
sbb
mov
mov
pushl
dec
test
dec
enter
in
push
pop
pop
iret
cld
imul
hlt
pop
or
push
inc
jle
jp
jnp
mov
pusha
xchg
pop
test
sbb
ja
jmp
and
sbbb
jne
scas
inc
add
add
dec
mov
xchg
lds
divb
divl
jge
call
scas
cmp
add
pop
jne
xlat
or
inc
repnz
mov
xor
hlt
mov
pop
icebp
inc
pushl
or
sti
or
rorl
js
xor
xchg
mov
sub
push
mov
mov
loop
jns
loop
idivb
ljmp
je
fs
out
xlat
out
test
push
mov
cmpsb
mov
inc
add
les
daa
data16
pop
xchg
and
int
call
push
add
dec
sti
sub
outsl
mov
push
pop
and
imul
inc
arpl
sub
out
roll
sub
pop
sbb
adc
lret
dec
cltd
adc
lret
pop
inc
or
xorl
pop
adc
pusha
push
out
in
lods
cmpb
std
cmc
or
or
incb
lahf
pop
call
out
adc
xchg
mov
mov
cmp
mov
jno
push
push
cld
mov
push
adc
inc
jl
fcomps
jb
push
idivb
xchg
add
xchg
dec
inc
vpsubusb
xchg
mov
sbb
or
adcb
cltd
dec
mov
mov
cwtl
scas
lods
jecxz
cmpsb
enter
and
sub
add
call
pop
add
push
and
repnz
stos
ret
loope
add
add
pop
aaa
sbb
hlt
add
icebp
stos
inc
or
mov
cmpsb
dec
cld
pop
adc
mov
adc
fsubl
and
addl
out
xchg
cld
fisubrl
je
stos
mov
fsub
outsl
icebp
addr16
sti
add
pop
xchg
jecxz
repnz
mov
pop
mov
faddl
inc
into
lods
jp
mov
cmp
sbb
mov
lea
mov
cmc
dec
xor
xchg
int
jle
xchg
mov
mov
cli
enter
mov
arpl
sub
pop
inc
sahf
andb
fsub
xor
cs
dec
shlb
sti
lds
pop
inc
out
cmpsl
pop
fdiv
mov
or
incb
push
cmpsb
rol
lret
mov
out
lods
sub
lods
cwtl
mov
sahf
push
mov
ljmp
mov
mov
or
jnp
sbb
dec
pop
sbb
lock
xchg
or
popa
test
outsb
adc
pop
push
mov
js
out
mov
and
or
push
daa
lret
daa
mov
xor
cld
fwait
cmp
dec
mov
outsl
push
mov
mov
mov
jmp
fs
popa
shlb
sub
test
mov
stc
dec
and
jmp
pop
rcrl
sbb
sbb
je
push
lods
xor
lcall
and
loope
cltd
adc
mov
mov
lcall
orb
cld
popl
sub
stos
loop
flds
add
or
xchg
leave
add
dec
enter
adc
mov
push
jb
movsl
dec
jg
call
mov
adc
bound
negb
sbbl
mov
cmp
and
jmp
jne
add
add
shlb
popf
xor
xor
ret
fisttps
mov
sbb
adc
inc
shl
push
mov
dec
xor
xchg
mov
incb
jno
jge
mov
push
cld
insl
jle,pn
xchg
in
mov
adcb
pop
push
stos
cmp
or
bound
adc
dec
push
test
out
mov
ja
addl
sub
push
dec
iret
inc
cmp
lds
add
mov
test
call
aaa
and
mov
aam
lea
mov
mov
add
push
sti
jb
js
jb
fwait
cltd
movsl
or
pop
push
into
das
cwtl
adc
fcoml
cmp
out
fisttps
shl
inc
je
sub
inc
out
xchg
das
inc
jns
jo
jne
mov
mov
inc
push
fimuls
add
sahf
or
aam
pop
pop
ljmp
lods
fs
dec
xchg
ret
test
mov
in
mov
jg
dec
mov
sbb
in
push
adc
sbb
jl
aaa
aas
imul
mov
cli
sub
test
and
imul
movsb
int
lock
leave
pusha
jno
cld
sub
andl
push
into
add
roll
push
cmc
mov
out
jecxz
shll
mov
adcl
xor
orl
jp
daa
adc
lds
push
cld
pop
add
das
fwait
push
dec
arpl
sub
or
neg
sti
sub
push
lea
loop
stc
adc
int3
leave
dec
sti
mov
loope
fcmovnbe
add
or
imulb
pop
enter
push
mov
pusha
inc
and
sub
loopne
push
mov
push
dec
inc
and
lods
in
adc
mov
pop
es
mul
repz
das
hlt
sbb
icebp
cmpb
aas
insl
xor
mov
addr16
js
cli
inc
loop
dec
inc
sbb
incl
lods
add
xchg
fnstenv
scas
scas
and
jbe
js
cld
fmuls
mov
mov
inc
lahf
outsl
inc
lods
fdivr
xchg
shl
repz
ss
cmp
in
shl
push
fimull
or
push
sbb
icebp
test
in
lahf
pop
add
mov
sub
repnz
stos
sbb
nop
xor
push
cmpsb
push
xor
or
lcall
in
cmp
mov
pop
mov
ret
call
loop
call
or
addl
insl
xchg
mov
out
leave
lret
sbb
pop
mov
and
sub
hlt
bound
jb
xor
sub
loopne
mov
dec
push
fildll
cwtl
out
mov
and
gs
mov
mov
aad
mov
lret
jp
aaa
scas
insl
cmpsl
sbb
push
jae
roll
push
push
add
cmp
scas
xchg
gs
aad
stc
and
add
aaa
jae
mov
pop
cld
mov
cli
mov
test
jnp
lds
push
mov
sti
aaa
repnz
mov
mov
jl
cwtl
sbb
fisubrs
enter
addr16
xchg
push
es
mov
xchg
mov
aas
mov
sub
and
mov
shlb
loopne
test
or
and
sahf
mov
xchg
movsb
insl
and
fisttps
inc
leave
aaa
jmp
pop
shlb
mov
mov
aam
pop
movsb
out
sbb
cmp
mov
pop
stos
mov
push
pop
mov
pop
scas
push
xchg
in
idivb
add
ds
mov
fcompl
mov
ffreep
adc
sti
gs
sub
outsl
adc
test
test
mov
mov
int3
jnp
mov
pop
sub
mov
fidivl
je
test
ss
adc
enter
adc
flds
aad
jo
mov
adc
mov
or
ret
xchg
jp
push
bnd
add
mov
int3
push
mov
mov
jmp
and
insb
subl
inc
insb
in
jg
and
aas
lods
test
push
out
imul
jg
rorl
andb
push
push
jno
repnz
mov
or
out
mov
add
fildl
arpl
inc
in
push
fdivl
jbe
out
std
mov
add
das
push
cmp
jbe
aaa
aaa
push
insb
cli
lret
xchg
and
push
adc
hlt
mov
das
fnsave
les
fsubrs
push
dec
sbb
sbb
mov
subb
fxch
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
test
cld
fxch
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
test
cld
fxch
jmp
cmp
or
sbb
insb
dec
jl
dec
insl
pop
jge
lea
mov
int3
jmp
cmp
cmpsb
sub
sbb
hlt
es
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
