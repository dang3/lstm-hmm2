add
mov
shr
mov
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
add
jmp
nop
jmp
call
xchg
jmp
jmp
jmp
jmp
jmp
jmp
xchg
mov
and
add
mov
and
xchg
sub
mov
mov
addr16
andl
xchg
push
addr16
xor
xchg
jmp
push
mov
add
mov
push
mov
call
xchg
sub
sub
xor
sub
and
add
shl
mov
and
and
mov
add
mov
jmp
call
addr16
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
mov
shl
shr
and
shl
rol
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
xchg
push
push
pop
push
mov
push
mov
xor
push
pop
push
and
or
add
sub
xor
dec
add
mov
add
sub
mov
dec
test
jne
pop
pushl
inc
or
rol
ror
add
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
cld
pop
add
pushl
and
pop
jmp
jmp
jmp
xchg
mov
sub
inc
mov
push
xchg
jmp
xor
xchg
jmp
push
mov
jmp
push
mov
push
nop
push
push
pop
push
xchg
pushl
xchg
call
nop
jmp
sbb
movsb
push
nop
call
xchg
movl
addr16
jmp
jmp
jmp
jmp
jmp
jmp
xchg
and
dec
mov
mov
push
mov
push
xchg
push
mov
call
jmp
push
popl
jmp
jmp
jmp
jmp
jmp
push
nop
and
sub
shr
dec
add
mov
sub
nop
sub
xor
dec
or
mov
mov
mov
andl
mov
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
nop
jmp
jmp
xchg
jmp
push
push
je
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
push
addr16
jmp
push
xchg
xor
nop
push
xchg
push
xchg
push
mov
push
mov
jmp
jmp
call
addr16
mov
push
pop
mov
xchg
mov
push
pop
jmp
xor
nop
inc
xchg
jmp
add
xchg
mov
xchg
jmp
jmp
call
xchg
jmp
shr
or
mov
and
xor
mov
jmp
xor
xchg
jmp
jmp
push
xchg
jmp
push
nop
push
mov
or
mov
inc
mov
and
rol
mov
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jno
call
rolb
xchg
jmp
mov
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
incl
xchg
jmp
jmp
jmp
xchg
or
ror
add
mov
push
xchg
jmp
jmp
jmp
jmp
mov
nop
nop
nop
nop
nop
add
xor
sub
mov
jmp
ror
and
add
push
nop
push
push
pop
push
nop
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
push
addr16
push
nop
push
xchg
call
mov
jmp
jmp
jmp
jmp
addr16
and
rol
shl
mov
sub
xchg
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
add
sub
add
xor
mov
push
mov
add
shl
xor
sub
add
mov
push
nop
rol
ror
or
mov
add
mov
jmp
jne
or
add
xor
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
xchg
mov
nop
movl
addr16
add
or
ror
mov
jmp
inc
xchg
push
xchg
mov
xchg
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
add
push
mov
push
xor
add
inc
rol
xor
add
or
mov
or
inc
and
and
dec
test
jne
pop
xor
dec
and
add
add
call
jmp
push
mov
xor
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
dec
mov
add
inc
sub
mov
jmp
and
mov
inc
mov
or
xor
or
add
mov
push
xchg
push
nop
rol
inc
xor
add
add
mov
nop
nop
nop
nop
nop
mov
xchg
add
addr16
add
mov
add
mov
jmp
xor
nop
add
or
shl
pop
jmp
jmp
jmp
mov
xchg
mov
mov
mov
addr16
jmp
cmpl
push
pop
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
xchg
pushl
push
pop
pushl
push
pop
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
rolb
mov
mov
jmp
jmp
jmp
add
shl
and
inc
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
shlb
jl
add
push
mov
call
nop
movl
xchg
push
xchg
jmp
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
aas
in
sbb
cmp
mov
jmp
push
nop
or
mov
xor
or
sub
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
sub
inc
mov
xor
pop
or
xor
pop
add
or
or
xor
pop
inc
add
sub
add
add
pop
jmp
rol
sub
xor
xor
dec
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shlb
rolb
push
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
adc
idiv
incl
add
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
add
ror
dec
shr
xor
mov
pop
jmp
inc
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
notl
inc
arpl
sub
and
add
inc
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
add
shl
sub
or
mov
rol
mov
mov
xchg
mov
mov
or
and
shl
sub
mov
and
sub
shr
rol
sub
pop
jmp
call
xchg
sub
mov
pop
pushl
xchg
push
addr16
pushl
nop
push
addr16
call
push
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
or
call
addr16
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
shr
xor
mov
pop
add
shr
add
xor
and
add
pushl
add
mov
add
xor
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
ror
rol
and
add
push
shl
pop
add
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
xchg
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
jmp
and
mov
add
addr16
push
push
pop
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
notb
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
push
pop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
lock
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
xor
mov
mov
mov
jmp
cmp
mov
pop
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
addr16
call
xchg
or
add
and
add
or
pop
jmp
xchg
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
add
push
pop
jmp
jmp
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
and
add
pop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
mov
jmp
push
xchg
xor
and
sub
inc
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
sub
mov
sub
mov
jmp
andl
nop
add
mov
mov
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
sub
mov
add
mov
cmpl
push
pop
je
push
nop
and
shl
mov
jmp
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jecxz
ds
mov
add
and
mov
push
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
jmp
rorb
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
imul
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
addr16
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
add
add
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
or
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
or
xor
mov
and
xchg
jmp
mov
shr
xor
ror
add
mov
mov
xchg
or
and
rol
or
mov
add
mov
mov
nop
jmp
call
addr16
add
mov
push
popl
movb
xchg
movl
push
pop
call
mov
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
mov
sub
nop
mov
nop
mov
addr16
jmp
movb
addr16
jmp
jne
mov
nop
sub
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
mov
inc
mov
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
and
sub
mov
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
incl
nop
sub
or
shl
inc
ror
mov
mov
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
mov
push
mov
call
nop
and
xor
and
or
or
mov
movl
push
pop
call
xchg
add
pop
sub
inc
mov
call
xchg
jmp
jmp
push
pop
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
nop
call
xchg
push
sub
rol
inc
sub
shr
pop
add
add
xor
mov
call
addr16
jmp
incl
xchg
jmp
and
inc
or
ror
mov
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
mov
xor
mov
jmp
jle
and
xor
add
mov
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
call
mov
shl
xor
add
mov
mov
jmp
lret
cmp
push
pop
jne
and
xchg
add
mov
add
xchg
add
addr16
pushl
and
pop
inc
push
pop
inc
xchg
jmp
mov
and
mov
mov
dec
mov
or
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
jmp
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
addr16
cmpl
push
pop
jne
add
xor
xor
add
sub
pop
mov
mov
mov
nop
jmp
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
or
or
mov
and
xchg
inc
nop
jmp
add
nop
add
nop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jne
or
and
xor
add
mov
cmp
xchg
je
incl
addr16
xor
ror
mov
cmp
nop
jl
jmp
push
mov
sub
rol
mov
push
xchg
call
mov
push
xchg
xor
add
or
add
pop
sub
and
add
xor
mov
push
mov
jmp
add
push
pop
sub
inc
inc
add
dec
pop
push
popl
xor
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
add
mov
cmp
xchg
jmp
inc
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
clc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
add
push
mov
add
or
dec
push
ror
sub
or
shr
rol
and
add
inc
mov
or
dec
test
jne
pop
lea
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
jmp
je
sub
dec
sub
rol
mov
mov
or
xor
sub
sub
mov
sub
nop
mov
mov
jmp
jle
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
testb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
decl
bound
jge
inc
pop
or
out
adc
push
push
inc
pop
or
and
pop
jmp
loope
push
jmp
sub
dec
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
xchg
jmp
pop
push
dec
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
and
pop
mov
sub
or
pop
or
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
insl
xchg
dec
push
cs
sbb
inc
and
add
dec
mov
add
pushl
mov
pushl
sub
shl
and
pop
mov
xor
dec
add
mov
add
xchg
call
nop
or
sub
mov
pop
push
push
pop
pushl
push
pop
jmp
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
addr16
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
pushl
cli
or
and
shr
pop
add
add
pop
xor
sub
sub
mov
pop
or
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
call
mov
shl
or
rol
inc
mov
mov
xchg
jmp
xorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
sti
in
inc
call
mov
mov
mov
jmp
jmp
mov
mov
mov
xchg
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
cmp
mov
jne
nop
nop
nop
nop
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
or
dec
or
xor
mov
sub
mov
mov
add
and
xor
shl
mov
mov
nop
jmp
sub
shl
mov
inc
sub
sub
sub
mov
add
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
xchg
call
nop
nop
nop
nop
nop
nop
push
nop
call
mov
add
mov
dec
mov
shl
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
ror
inc
add
mov
and
sub
mov
jmp
xchg
cwtl
jbe
inc
and
nop
jmp
mov
mov
sub
xchg
jmp
rol
and
shr
and
mov
sub
addr16
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
sub
xchg
jmp
dec
nop
dec
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
clc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
and
shr
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
inc
mov
mov
and
mov
cmp
mov
jmp
sbb
ror
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
incl
mov
nop
nop
nop
nop
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
mov
jmp
mov
add
add
add
nop
nop
nop
nop
nop
add
push
pop
add
xchg
jmp
xchg
cmp
call
xchg
cmp
push
pop
jmp
jg
add
nop
pushl
sub
or
pop
addl
xchg
jmp
popf
fdivl
jb
inc
xchg
cmp
xchg
jb
inc
addr16
cmp
xchg
jmp
and
inc
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
inc
add
cmpl
xchg
jmp
mov
daa
add
add
sbb
push
inc
jne
call
mov
mov
xchg
jmp
test
fildl
rclb
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
and
dec
or
mov
xor
xor
mov
sub
xchg
mov
nop
incl
nop
jmp
pop
mov
mov
xchg
mov
xchg
and
sub
or
mov
jmp
mov
jnp
addr16
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lahf
add
add
fwait
push
repnz
call
nop
nop
nop
nop
nop
nop
push
mov
mov
nop
call
xchg
add
and
sub
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
test
decl
pop
xor
xchg
inc
xchg
jmp
sub
or
inc
sub
sub
mov
jmp
scas
xchg
cmp
test
call
mov
cmp
add
and
xor
rol
and
mov
nop
nop
nop
nop
nop
mov
addr16
incl
nop
incl
xchg
mov
mov
xor
mov
jmp
imul
add
xchg
jmp
and
mov
add
xchg
push
xchg
nop
nop
nop
nop
nop
call
mov
cmp
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
sub
or
add
and
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
outsb
jecxz
popl
nop
je
inc
or
sub
mov
sub
xor
shr
mov
or
pop
sub
push
pop
rol
or
pop
and
mov
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
inc
mov
pushl
mov
inc
pop
inc
mov
nop
nop
nop
nop
nop
add
mov
nop
nop
nop
nop
nop
add
xchg
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
shr
and
add
add
nop
nop
nop
nop
nop
nop
add
push
pop
push
xchg
nop
nop
nop
nop
nop
pushl
xchg
call
addr16
mov
addr16
add
mov
add
mov
nop
nop
nop
nop
nop
sub
add
ror
and
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
xchg
cmpl
xchg
nop
nop
nop
nop
nop
jne
call
addr16
mov
xchg
dec
and
mov
or
mov
push
xor
and
and
pop
add
nop
nop
nop
nop
nop
inc
add
pop
xor
or
shl
inc
pop
shr
pop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
cmp
mov
jne
pushl
add
and
pop
add
xchg
mov
mov
pushl
add
pop
add
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
imul
mov
bound
xor
es
in
in
repnz
shrl
sub
mov
outsb
test
pop
add
jl
loopne
scas
jbe
mov
push
add
mov
pop
xor
nop
and
scas
jno
mov
clc
pop
lods
sarl
mov
pop
dec
out
sub
xchg
push
fsub
fsubrs
loop
mov
push
fistl
out
cmp
lods
icebp
jge
into
mov
nop
adc
fstpl
push
in
cmp
ja
lock
inc
mov
je
imul
and
or
xchg
xchg
inc
lcall
test
add
jl
sarb
je
cmp
jmp
mov
outsl
pop
aam
shl
cli
jb
jno
notb
mov
cs
push
mov
idivl
std
push
lods
test
pop
lahf
inc
je
mov
pop
mov
std
lcall
ret
rolb
cmp
cmp
adc
cld
pop
pop
enter
add
mov
add
insl
out
push
sbb
sub
adc
lds
icebp
in
cmpsb
in
das
ss
sbb
xor
je
inc
test
out
mov
icebp
xchg
lret
stc
call
lods
popf
and
sub
bound
int
mov
stc
scas
scas
jp
dec
inc
sub
lret
into
push
mov
std
ret
adc
outsl
mov
sahf
mov
mov
or
daa
pop
sub
insb
fadds
and
push
ljmp
call
addb
adc
addl
jmp
or
fistl
faddl
andl
push
outsl
cmp
js
das
mov
sub
sub
pushf
addb
cld
gs
lock
sub
das
addb
and
aam
test
and
cmc
inc
lock
insb
push
and
fldcw
sbb
icebp
pop
mov
aaa
out
or
pop
push
aaa
cmpsl
push
add
mulb
dec
daa
popf
rol
add
pop
in
cmp
gs
outsl
psrld
rclb
cmp
jmp
jp
imul
inc
cmp
pop
hlt
int3
mov
push
xor
out
cwtl
popa
pusha
das
lcall
enter
add
xchg
lret
outsb
lahf
pop
pop
adc
sub
jnp
es
std
sub
and
lret
addr16
stos
push
xchg
adc
sub
dec
dec
icebp
push
ljmp
dec
mov
jns
fnop
adc
subl
icebp
aaa
invd
and
lcall
aad
mov
jae,pt
cmp
adc
shlw
pop
into
js
fcomi
int
pushf
mov
add
popa
adc
jl
dec
inc
mov
cmpsb
addr16
sub
adc
inc
shr
leave
ret
jle
incl
sahf
nop
mov
sti
clc
outsl
jmp
mov
cli
pop
iret
stos
cmp
mov
mov
sub
and
and
xchg
roll
mov
rol
addr16
int
rorl
push
hlt
psrlw
ret
loopne
adc
daa
in
enter
cmp
test
sbb
cmpsb
js
arpl
and
ljmp
fcmovbe
mov
stos
gs
lods
push
inc
jg
addr16
fstl
dec
inc
push
adc
cmp
or
jne
arpl
pop
adc
pop
mov
xchg
add
lock
bound
xchg
ud2
nop
mov
loopne
inc
imul
inc
or
int3
ficompl
dec
xchg
sub
in
imul
or
mov
ljmp
pusha
xchg
cltd
mov
mov
outsb
jmp
mov
mov
xchg
scas
cmp
cmp
movl
lea
push
std
in
push
or
push
fwait
mov
inc
fisubrl
mov
sub
adc
ja
xchg
and
jb,pn
test
pusha
aas
das
inc
add
xchg
mov
bound
pop
jmp
pop
jmp
mov
cmp
xor
pop
sti
mov
shrl
aas
sahf
lods
xor
stc
cmp
mov
or
or
or
rclb
cmp
daa
mov
add
inc
sub
adc
mov
stos
leave
sti
cmp
push
nop
lods
pop
negl
lret
cmpsl
xchg
outsl
int
ljmp
cmpsb
and
rcrb
push
test
loop
lds
outsb
mov
enter
out
mov
xchg
jl
loopne
insb
aas
movsb
xchg
sub
ret
and
jo
or
adc
xchg
xchg
jl
jge
stos
pop
or
mov
in
mov
pop
icebp
out
pop
sbb
fistpll
pop
jl
xor
rcrl
mov
and
dec
pop
rorl
shll
in
jne
ljmp
inc
pop
out
fisubrs
jmp
cli
push
aad
mov
xor
cmp
adc
ja
pop
xchg
ret
aad
mov
loop
add
dec
in
xor
dec
loope
daa
dec
out
add
cmc
les
inc
mov
pop
int
xchg
subb
cltd
addr16
aas
aas
cs
add
push
xchg
inc
loope
jge
lcall
int
jecxz
lods
xchg
mov
fisubs
adc
push
test
movsb
xchg
add
mov
mov
sbb
and
pusha
inc
cmp
push
cwtl
rcrl
stos
shl
daa
pusha
sahf
mov
xchg
fimuls
faddp
pop
packuswb
imulb
outsb
pop
mov
pop
aaa
cmp
roll
or
dec
dec
out
ret
or
daa
insl
add
jo
test
in
xor
loopne
push
stos
and
mov
mov
adc
push
and
inc
adc
cltd
mov
insb
mov
xor
loope
adc
push
cli
pop
xchg
adc
out
pop
dec
dec
cwtl
sbb
xchg
movsb
enter
xchg
out
pop
adcl
jno
enter
adc
or
xchg
hlt
dec
insl
andb
mov
dec
mov
pop
dec
push
popa
mov
rolb
jl
jnp
lcall
es
xchg
cmpsl
push
push
jae
mov
test
xchg
movsl
aad
and
inc
ss
pop
xchg
lods
test
cs
dec
pop
xor
shl
cwtl
aas
xor
int
adc
cmp
dec
scas
aas
subb
mov
dec
cmp
hlt
stos
push
pop
inc
mov
inc
adc
pushf
movsl
imul
icebp
lret
add
sbb
push
int3
add
pop
ficomps
push
data16
push
idivb
adc
dec
inc
ss
lahf
add
cltd
mov
xchg
clc
push
pusha
sub
push
sub
shll
mov
mov
sbb
sti
and
or
movsb
dec
and
jmp
push
out
imul
sbbb
adc
jno
jne
inc
jno
add
mov
inc
es
dec
inc
das
mulb
in
push
or
adc
gs
stc
jmp
ret
clc
pop
mov
mov
in
push
or
cli
out
out
xor
sub
fs
sti
daa
cmp
repnz
arpl
out
sbb
mov
idivb
sbb
jo
stos
insb
push
jbe
insl
outsb
das
push
xor
inc
adc
and
and
xchg
inc
adc
lret
andl
mov
mov
or
cmp
pop
and
xchg
roll
push
xlat
xor
mov
arpl
das
inc
negl
imul
movsb
add
nop
add
lret
xchg
shrl
xor
test
cmc
imul
out
and
xchg
enter
push
mov
mov
adc
cmpsb
adc
push
jle
mov
mov
or
ja
push
popf
stos
int3
sub
push
add
adc
mov
nop
fsubs
decb
cwtl
xchg
pop
mov
xor
adc
test
push
or
call
inc
inc
out
and
push
pop
pop
jne
push
dec
insl
mov
stos
insl
arpl
shlb
das
sub
sarb
sub
icebp
ljmp
push
sbbl
daa
push
mov
lret
cmp
sbb
sbb
mov
or
jno
or
pop
dec
movups
push
out
pop
pop
or
js
leave
mov
in
inc
shrl
and
rcrb
add
pop
inc
out
scas
ss
clc
mov
sub
push
pop
dec
int3
cmp
stos
sbb
inc
add
xchg
bndldx
or
aam
mov
mov
aam
lods
rcll
arpl
jae
pop
mov
add
xchg
or
xlat
push
mov
lods
jne
jns
imul
inc
xor
pusha
repz
dec
lods
mov
mov
jle
sub
pusha
cld
imul
adc
rcr
std
outsb
ret
dec
jns
int
and
out
sti
jle
movsl
inc
enter
or
jl
clc
adc
jb
push
imul
pop
repz
adc
ss
js
pop
nop
cmp
pop
cli
push
je
and
and
xor
ljmp
xor
jns
outsb
js
out
adc
lods
popa
dec
or
cs
testl
outsb
lahf
sub
hlt
mov
push
pop
adc
pop
clc
repz
jno
and
pusha
call
xchg
mov
xchg
pop
lock
inc
into
sub
xorb
push
and
add
insb
jle
sbb
inc
lret
inc
lea
ja
mov
push
clc
sarb
mov
and
icebp
fs
in
pop
aam
mov
xchg
push
mov
and
negb
sbb
xor
jo
mov
dec
cli
fildl
leave
addr16
out
mov
cwtl
arpl
pminub
xor
mov
sub
in
add
add
int
pop
pop
jbe
xor
pop
jp
clc
dec
int
cmpl
fldl
andb
and
das
addl
int3
mov
ss
xchg
mov
int
test
icebp
fs
inc
das
and
fidivs
xchg
sbb
les
mov
arpl
xor
arpl
scas
arpl
rcll
test
mov
jne
and
popa
sub
lds
icebp
pop
std
nop
jnp
fwait
.byte
xlat
add
inc
dec
add
shll
inc
mov
sub
dec
mov
mov
adc
jg
outsl
sub
js
sti
jmp
js
pop
push
adc
pushf
mov
mov
cmpsb
int
aad
fnstcw
imul
repz
add
call
mov
adc
ret
lret
jo
adc
pop
into
sbbl
mov
inc
cmpsb
jbe
or
rclb
pop
out
push
ss
aam
jp
push
pop
pop
loopne
add
in
sahf
push
xchg
push
push
pop
sbb
cli
stos
xchg
mov
incl
mul
pop
sbb
pusha
hlt
subb
or
in
jle
cmpsl
pop
sub
lret
xchg
sbb
mov
in
ds
jnp
sub
pop
repnz
push
outsb
stos
lret
sbb
jne
mov
xor
adc
cmpsb
notl
mov
sbb
jno
add
loop
xchg
stos
jne
scas
aas
pop
and
xchg
mov
call
mov
xor
stos
je
call
jb
push
out
and
dec
xor
into
add
xor
pop
xchg
bound
mov
int3
mov
xor
lcall
pop
pop
push
pop
push
mov
test
mov
lds
xchg
xchg
sbb
cmp
loopne
sbb
mov
mov
push
sub
fisttps
jl
arpl
mov
push
in
push
xchg
flds
out
imul
outsl
pop
adc
mov
into
jge
sub
lods
jmp
push
test
push
outsb
sub
adc
push
hlt
fistl
shr
and
jecxz
inc
imul
xchg
mov
xchg
cmc
add
and
es
je
dec
xor
or
pop
add
out
add
les
mov
sbb
outsb
ret
push
stc
test
dec
loop
cmp
sub
cmpsl
sar
lret
jo
xor
leave
push
pushf
and
cld
or
adc
pop
pop
andb
add
pop
xor
ds
xor
mov
add
pop
lcall
xchg
sub
push
stos
shl
in
xor
mov
cmp
mov
jno
outsb
popf
rorb
popa
mov
lret
xor
jl
dec
outsb
and
dec
and
mov
imul
cmp
es
dec
fimull
xor
dec
mov
push
ss
adc
int3
dec
jmp
and
jns
jae
pop
loope
add
mov
xor
ss
mov
add
cmp
in
js
inc
and
jns
push
enter
comiss
jge
add
adc
je
std
das
xchg
fs
and
jne
xchg
or
push
lret
std
xchg
aaa
pop
call
aam
into
mov
mov
cmpb
js
ficoms
sbb
loope
pushf
xchg
cmp
inc
dec
or
mov
xchg
ficompl
mov
push
pop
ds
mov
xorb
push
hlt
call
lahf
jnp
push
sub
push
pop
add
sbb
ret
jge
xchg
rcrb
cmp
cmp
pop
movsl
mov
push
or
inc
cwtl
js
adc
push
xor
mov
into
xchg
shrl
cmp
mov
lcall
cmc
mov
repz
enter
loop
clc
push
or
mov
icebp
pop
sbb
and
xchg
xchg
mov
out
xchg
adc
mov
cld
push
test
lret
and
add
in
adc
mov
inc
xor
jns
addr16
shrl
inc
aas
push
insb
xor
mov
sub
lds
and
les
xor
add
insb
xchg
mov
pop
add
fwait
inc
out
lea
sahf
inc
es
gs
js
dec
data16
ja
mov
dec
xor
rorl
movaps
scas
mov
pop
popf
test
push
pop
or
fnstenv
stos
cmpb
or
out
ds
sub
and
fists
imul
mov
xorb
dec
pushf
jecxz
pop
pop
add
or
cmp
xor
or
das
jns
push
xor
mov
int
cmp
cwtl
lahf
lahf
in
mov
aad
movsl
das
jle
mov
push
jge
jns
ret
jbe
loope
jbe
xchg
xor
loope
jne
loope
and
aam
jmp
ret
pusha
sub
dec
cmp
jmp
mov
add
test
icebp
daa
aad
mov
hlt
jno
inc
cld
sub
adc
sub
lea
pop
iret
lahf
cmp
inc
jp
adc
fldl
and
stos
in
push
cmp
sub
mov
pop
xchg
cmp
pop
push
dec
push
cmc
stc
popa
mov
imul
mov
or
fldenv
push
mov
out
cli
fs
iret
sbb
cld
mov
mov
push
std
imul
loopne
mov
divb
push
or
sub
sub
lcall
repnz
out
lds
mov
cs
adc
popf
lea
mov
mov
in
adc
clc
adcl
push
lret
add
push
adc
lahf
pop
fs
es
cmpsl
adc
lcall
mov
fucom
fisubrl
cmp
stc
mov
cmp
jle
and
cltd
das
fistl
nop
in
mul
lods
test
cmpsb
movsb
adc
jns
xlat
push
mov
mov
mov
in
sub
adc
lock
mov
in
dec
cld
scas
mov
shlb
and
sbb
xchg
add
pop
inc
insl
rorb
mov
adc
xor
sub
lret
mov
jl
jno
inc
push
sbb
mov
shr
jae
int3
cmp
cmp
imul
xchg
pop
les
mov
inc
adc
ror
xchg
mov
stc
cwtl
imul
loop
inc
adc
pop
popl
repz
popa
push
or
lcall
mov
mov
push
push
xor
out
lods
lds
enter
push
fcom
dec
jno
enter
pop
push
popa
inc
and
push
adc
into
aad
xor
xchg
and
scas
adc
mov
outsl
gs
rorb
push
dec
addr16
add
icebp
cli
sbb
cmp
rcr
idiv
inc
xchg
scas
sub
adc
loop
jmp
mov
dec
fsubl
inc
gs
xchg
xchg
pushf
pop
adc
in
ja
pop
inc
adc
addr16
lock
mov
lcall
push
lcall
fisubs
call
sub
or
mov
sub
push
pushf
ja
daa
leave
adc
pop
or
shrl
push
jmp
in
xor
mov
in
push
pop
and
stc
cmp
cmpl
into
lcall
es
popf
les
pusha
bound
pop
inc
sbb
push
pushw
fucomp
mov
push
push
jo
repz
jb
push
ss
nop
jge
cmp
cmp
or
cltd
les
dec
or
nop
sbb
dec
jo
test
outsb
xor
inc
repz
push
call
rorb
in
stos
movl
inc
aaa
bound
cmp
pop
stc
xlat
pop
dec
cltd
fwait
adc
jg
sub
sbb
mov
push
pop
mov
int
dec
inc
loope
mov
insl
push
fimuls
and
or
cmp
xor
test
aam
dec
jb
dec
lock
inc
push
insl
xor
insb
call
sbb
hlt
push
cmp
cwtl
sbb
lret
mov
cmp
mov
les
adc
call
int
sub
dec
fmull
jnp
jmp
add
sbb
imul
push
sub
inc
jg
das
mov
test
push
jae
push
dec
push
sti
push
xchg
lcall
loopne
lcall
in
jl
jno
xlat
adc
mov
mov
inc
fistl
jno
lock
mov
rclb
mov
push
inc
sub
arpl
enter
leave
pop
jg
std
into
jecxz
dec
xchg
or
mov
xchg
pushf
sub
cwtl
dec
mov
mov
push
aaa
cmpl
sub
movsb
incl
fldt
ret
mov
sub
fucomp
mov
mov
xlat
sbb
sti
fistl
movsl
inc
and
push
push
repnz
sub
inc
in
shr
adc
pop
ret
jns
mov
dec
cmp
mov
mov
jns
outsl
fistpl
fidivrl
je
lock
lock
push
flds
cmp
hlt
repz
test
inc
cmp
testb
orb
cmp
jo
lods
fcompl
.byte
.byte
jecxz
stos
pop
xchg
das
sub
xchg
les
pop
jecxz
or
mov
jbe
divl
out
into
push
adc
mov
js
mov
fmull
dec
sub
dec
dec
mov
cmp
mov
push
roll
js
insl
push
es
add
adc
xchg
lcall
mov
jne
scas
push
cltd
dec
jl
rclb
lock
out
fisttpll
sbb
adc
repz
jecxz
jb
ffreep
pop
out
mov
jl
insl
test
das
popa
mov
adc
hlt
addl
pop
addr16
inc
scas
fwait
out
loopne
xchg
or
insb
lods
inc
push
cmpsl
adc
sbb
xchg
sub
sbb
pop
jae
fistpl
jmp
in
shll
subl
pushf
and
lods
imul
lods
and
into
test
push
nop
daa
mov
scas
and
aaa
lahf
gs
xchg
fstpt
inc
into
jno
shll
mov
pop
hlt
ret
fwait
push
enter
push
ficomps
and
push
enter
jae
loopne
or
stc
xchg
jns
and
xchg
pusha
xor
push
mov
pop
out
inc
test
les
inc
sarb
and
jg
cmpsl
adc
add
mov
xchg
xchg
xchg
lods
jp
inc
mov
cli
mov
cld
loopne
mov
push
mov
ret
xor
cmp
enter
insl
daa
pop
sub
scas
test
aaa
in
push
jb
out
pop
adc
cld
test
je
shlb
in
loope
adc
xchg
inc
adc
mov
adc
inc
out
int
imull
xor
lea
or
xor
or
movsb
inc
mov
mov
inc
or
sub
dec
jle
popf
hlt
pop
add
pop
mov
mov
sti
dec
cmpsl
pop
inc
fdivs
sub
and
sub
or
pusha
out
cmp
out
dec
pop
in
idivl
arpl
sar
subl
popf
adc
mov
popa
rorl
cli
lret
faddp
jl
and
lock
arpl
add
xor
or
pusha
xor
mov
xor
push
les
pop
push
pop
mov
cs
roll
out
mov
sbb
fcoms
sbb
jne
repnz
jecxz
leave
xor
jo
ficoms
push
mov
and
xchg
push
xchg
jae
cmpsl
sahf
out
xor
mov
nop
mov
in
fadds
pop
iret
psllq
imul
test
xchg
movsb
insl
or
jg
test
xor
iret
imul
gs
in
scas
push
mov
sub
movsl
pusha
shll
jecxz
aaa
cmp
pop
and
stos
lods
sub
cmc
aam
fidivrs
pop
aad
dec
test
cmc
das
sbb
in
daa
test
into
dec
mov
enter
cld
inc
jle
sbb
ljmp
pop
xchg
cli
push
lds
dec
aad
es
sbb
roll
sbb
xchg
xchg
ret
lret
test
xor
xchg
jb
orb
rclb
push
nop
ret
sbb
mov
pushw
xchg
push
sbbb
adc
push
and
cmc
xlat
mov
lds
xor
leave
push
lahf
in
and
inc
lods
popf
les
je
add
pop
pop
mov
mov
mov
stos
inc
and
xor
aas
cmc
fisubs
repz
addb
popfw
cwtl
cmp
stos
clc
sbb
inc
call
pusha
push
int3
sbb
jg
adc
out
mov
shl
dec
loopne
and
rorl
and
stos
gs
or
inc
sub
adc
outsb
add
add
sub
andl
add
mov
movsb
xchg
xchg
shll
cmp
enter
jl
je
aaa
rclb
dec
std
xchg
push
fldt
or
call
push
jbe
insb
jecxz
dec
jns
scas
mov
subl
pop
cmp
imul
lret
leave
xlat
pop
js
pop
shrb
cwtl
mov
insb
adc
xor
movzwl
lcall
inc
leave
loope
sahf
xlat
repnz
into
sarl
out
and
mov
adc
movsb
ja
outsl
mov
fldt
xor
rorl
out
std
push
push
and
add
xorb
jnp
xor
in
outsb
lret
mov
shrl
loopne
add
insl
push
lock
pusha
int
sub
lds
and
leave
aad
daa
mov
aam
and
sbb
push
js,pt
pop
mov
mov
jmp
loope
pop
mov
push
inc
cmp
in
ja
mov
mov
stos
fdivr
repz
mov
add
lods
aad
sub
cmpsb
mov
lret
inc
sbb
imul
movsb
leave
imul
js
sbb
stc
push
pop
bound
fsubrs
xchg
sub
call
xor
hlt
mov
ja
dec
mov
aad
mov
push
push
jmp
or
xchg
lahf
xor
lahf
lock
dec
and
test
xor
cmpsb
mov
loop
loopne
jb
dec
mov
and
outsb
dec
mov
and
pusha
fdivl
jo
sbb
cs
cmpsl
out
inc
or
or
popl
daa
movsl
ficomps
xor
push
mull
imul
or
scas
and
ret
sbb
pop
adc
cmp
notl
fisubl
pop
sub
leave
stc
add
or
daa
inc
xchg
inc
push
fisttps
and
mov
out
into
gs
cmp
sbb
dec
es
cli
je
outsb
mov
inc
inc
std
inc
data16
imul
repnz
push
pop
clc
shlb
fwait
stos
roll
ret
add
push
add
inc
mov
inc
stc
fs
xor
and
mov
imul
sahf
mov
mov
inc
orb
jno
call
mov
jmp
pusha
roll
sub
inc
xlat
dec
xor
pop
push
jbe
cs
stc
loopne
scas
loop
lods
aaa
clc
push
jne
mov
imul
es
adc
xor
mov
push
out
arpl
into
sbb
out
mov
aam
popa
int3
xchg
sub
aad
jp
dec
pop
mov
xor
dec
into
and
enter
nop
and
gs
lods
fmul
push
dec
fwait
mov
fbstp
mov
mov
rorl
ficomps
arpl
es
and
outsl
call
lods
cmp
xchg
aad
cld
ror
sti
aas
jno
jmp
popf
mov
hlt
movsb
fldcw
