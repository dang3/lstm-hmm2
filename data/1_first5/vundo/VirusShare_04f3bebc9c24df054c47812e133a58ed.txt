int
push
fistpll
pop
and
push
fistl
scas
pop
aam
jmp
fstp
and
push
pop
data16
jmp
inc
dec
ficoms
push
cmpsb
xchg
adc
dec
xlat
fisttpll
sbb
lods
data16
and
lods
adc
in
in
imul
out
xor
aad
mov
gs
sbbl
xor
imul
cli
add
adc
cwtl
sbb
sar
jae
cld
xchg
repz
lods
into
pop
push
xlat
fnstenv
test
dec
outsl
ret
jnp
loope
push
and
sub
mov
lret
js
push
cmp
movsl
cmc
ss
cld
cmp
push
js
cmc
and
sub
pop
fildl
sbb
mov
jb
shll
cmp
and
shrl
mov
sub
jb
dec
gs
imul
cmp
insl
xchg
xchg
and
mov
mov
inc
or
mov
call
add
xor
jo
adc
adcl
enter
inc
fidivrl
fstpl
mov
or
hlt
out
push
pushf
jnp
xor
mov
sarb
addr16
cmc
cwtl
cmpsl
js
xor
sbb
push
xchg
mov
cmpsl
shlb
cmp
dec
and
xor
add
mov
xor
jae
pop
bound
adc
sbb
ret
jo
or
lock
mov
xchg
adc
movsb
jne
enter
aad
mov
sub
push
mov
sbb
push
sahf
push
das
test
cmpsb
stc
xor
push
pop
mov
hlt
dec
cmpsl
pop
cld
or
sub
jb
jmp
and
ret
push
adc
test
repnz
out
rol
mov
sub
mov
xor
enter
subl
dec
icebp
je
sbb
rol
jns
hlt
nop
sahf
xor
int3
lret
ds
jg
mov
repz
or
test
repnz
and
fidivl
push
ds
dec
mov
mov
pop
xchg
jo
js
dec
jp
mov
stos
ds
mov
cld
mov
sbbl
mov
xorb
push
sub
pop
stos
sbb
mov
dec
addb
ds
out
out
outsl
sub
cmpsb
mov
repnz
hlt
and
jp
stc
bound
fwait
xor
fsts
pop
fisubs
cmp
jl
mov
mov
pop
mov
inc
mov
lret
je
shr
es
mov
adc
or
dec
cli
fdivs
mov
or
lods
icebp
loopne
xchg
dec
cmp
stc
dec
sbb
lcall
leave
iret
pop
ficompl
dec
addl
push
lods
xor
sub
mov
ficoms
adc
pop
dec
jle
xor
fwait
push
leave
push
enter
mov
push
xchg
in
mov
lea
sbb
icebp
jns
mov
jbe
sbb
outsb
mov
pusha
or
dec
jmp
sub
cltd
in
sbb
push
fnstsw
in
ret
int3
subb
dec
fcomp
mov
test
mov
add
add
xchg
adc
cmp
jne
and
mov
push
sub
ss
and
jno
pop
add
ja
out
or
push
mov
les
or
movsl
sbb
hlt
aad
daa
dec
sub
cld
outsb
rcl
inc
or
dec
movsl
push
jne
faddp
es
pop
aaa
jno
shll
popf
test
mov
cs
mov
fldl
lods
dec
stos
lret
jbe
movsb
or
stos
cwtl
orb
mov
daa
sbb
negb
mov
inc
add
test
out
out
xorb
sub
fidivs
adc
jae
dec
push
fsub
push
xchg
fmulp
cld
push
jmp
xchg
dec
xchg
lret
jbe
out
loopne
std
shll
cs
insb
add
sti
out
mov
jl
subb
lods
sahf
jl
add
mov
push
test
lahf
sbb
push
aam
sbb
roll
out
int3
popa
nop
scas
ret
repnz
push
repz
lret
xlat
cmp
rol
mov
push
lods
pop
cltd
dec
mov
test
repnz
push
fldcw
lods
mov
in
jp
dec
sti
cmp
sbb
sub
jl
mov
aam
jne
cmpb
adcb
ljmp
mov
cmpsl
adc
les
es
push
dec
adc
sbb
data16
int
mov
dec
bound
mov
aas
jmp
fidivl
jmp
sbb
sahf
pushf
mov
pop
fidivrs
lret
sub
subb
pop
sbb
ret
inc
dec
cmpsb
push
xor
mov
jne
sub
sbb
das
jb
dec
mov
dec
pop
idivb
and
enter
ja
fwait
dec
ret
push
hlt
stc
movsl
or
imul
sub
mov
and
xchg
mov
into
sbb
out
cld
xor
pop
negl
sub
jl
lret
clc
movsb
jb
movsb
rolb
stos
test
js
fdivrl
jns
hlt
sarb
mov
xchg
or
loopne
adc
sbb
sub
jns
push
negb
or
jns
arpl
adc
adc
mov
fcmovnb
mov
rorl
inc
xor
loop
lock
addb
ljmp
fs
in
or
jbe
adc
inc
out
sbb
pop
mov
sbb
icebp
cmp
decb
cmpb
inc
and
std
lods
mov
jl
xor
popa
cmpsl
mov
mov
lds
pop
inc
mov
add
cmp
es
call
pop
sub
cld
std
ljmp
sbb
gs
jle
jno
xchg
movsb
imul
int3
mov
out
pop
mov
mov
dec
fs
xchg
test
cmpsl
cli
test
fsubr
je
sbb
jl
sbb
mov
imul
add
sub
inc
cld
add
cmc
mov
add
inc
popf
bound
leave
and
out
push
xchg
inc
lds
and
lock
push
lret
imul
sub
adc
faddl
jbe
pop
adc
loope
mov
and
movsl
pop
or
dec
mov
loop
adc
dec
or
mul
xor
jecxz
mov
dec
jbe
sub
cwtl
or
lcall
testb
imul
mov
push
lret
xor
and
mov
and
xchg
adc
sbb
scas
pop
ficoms
enter
mov
fisttpl
lahf
xor
test
jge
test
xorb
andb
sbb
or
xchg
mov
mov
jb
jl
fcoml
outsl
mov
sub
push
lds
rolb
fs
ljmp
mov
fidivs
loopne
cmp
cmpsl
repz
xchg
mov
dec
cmp
sub
inc
fcomi
aad
dec
xchg
in
and
or
mov
pop
gs
dec
in
inc
cmp
out
sbb
sbb
mov
mov
insl
hlt
shr
adc
repnz
fisubrl
lods
xchg
sti
enter
add
jae
pop
pop
pusha
enter
or
fildl
adc
dec
cmp
dec
movsb
xorps
addr16
pop
sub
jb
and
jecxz
leave
sbb
inc
popa
mov
lods
fisubs
imul
sub
xor
ja
fwait
pop
imul
lea
xor
sub
push
loopne
out
sbb
xlat
cmp
jne
cmp
lock
pop
stc
shrb
cmpsb
js
mov
mov
sti
xor
andb
movl
xorl
gs
mov
jnp
pop
or
cmp
js
gs
rorb
xor
push
hlt
dec
repnz
lods
out
mov
outsl
dec
and
fs
stc
xchg
stc
int
out
mov
pushl
or
ret
sbb
add
xchg
outsb
rcll
loope
xor
cmc
movsl
cmp
mov
or
and
movsl
andb
and
fs
sbb
call
shrl
add
adc
mov
idivb
pushf
js
stos
popf
repnz
adc
mov
fildl
fildl
aam
out
xor
aas
sahf
fldt
xchg
push
fcmovu
mov
div
inc
inc
push
je
add
cld
mov
aam
xor
test
sbb
pop
xor
ds
mov
add
xlat
enter
test
push
add
gs
sub
adc
test
jp
andl
rorl
lds
mov
pop
testb
sbb
cmp
cmp
ret
mov
push
sub
stc
test
rcr
pusha
mov
pop
pop
jbe
jns
aas
jb
imul
pushl
mov
notl
lea
aam
out
or
call
inc
jne
lahf
mov
cwtl
aad
jae
movl
js
les
jmp
clc
mov
ret
adc
ja
in
sub
cld
stc
jmp
mov
mov
into
lcall
ljmp
int3
leave
xor
scas
xchg
pop
stos
lcall
fbstp
lods
dec
cmp
es
mov
jp
testb
mov
add
sbb
fcompl
loope
jns
sbb
adc
sbb
pop
inc
xlat
sbb
ror
outsl
shll
test
lock
sbb
icebp
sahf
push
inc
movsl
in
mov
jmp
pusha
push
arpl
inc
sarl
enter
movsl
push
xlat
fcoms
loopne
xchg
sub
or
fistl
sub
pop
out
xchg
lcall
mov
xlat
nop
in
es
out
dec
bound
push
lret
push
mov
testl
arpl
mov
call
pop
hlt
ljmp
pop
adc
jecxz
jae
cmp
jno
mov
imul
sub
mov
pop
iret
sbb
aaa
shll
push
aaa
or
fwait
mov
xor
call
jl
in
xor
sti
push
clc
mov
push
mov
adc
outsb
popa
and
pushf
aas
mov
adc
sub
or
cmp
les
test
dec
into
out
cmc
mov
out
js
add
mov
stos
std
sbb
ret
pcmpgtd
sarb
xchg
lea
in
lea
push
hlt
imul
dec
jge
adc
dec
repz
bound
cltd
iret
rcrb
int3
mov
xchg
inc
stos
or
out
mov
or
pop
pushf
dec
mov
jle
dec
rcr
outsl
out
cmp
lods
std
or
stos
movsl
xor
bound
inc
cmp
or
adc
fs
dec
out
mov
pop
gs
xchg
mov
cmp
out
nop
incl
cmp
ret
mov
lahf
push
push
sub
jecxz
xchg
adc
mov
bound
lcall
or
pop
in
jp
outsb
hlt
mov
pop
sbb
push
jo
jb
lock
pop
les
pop
popf
mov
push
jp
imul
jns
cld
test
or
out
push
sub
insb
cli
add
ss
cld
les
leave
mov
jg
pop
fbstp
ds
mov
shll
inc
push
insl
cmp
sub
mov
scas
add
push
cmp
test
lret
or
subb
mov
sub
cmc
cld
out
decb
test
rol
loopne
mov
lods
outsl
pop
cltd
mov
pop
lock
jp
fnstsw
mov
mov
roll
cmc
popf
and
insb
jbe
mov
hlt
xlat
jp
outsl
dec
push
and
cmp
test
lret
sub
inc
ss
inc
xor
mov
mov
adc
fimuls
dec
mov
test
pop
popa
into
mov
loopne
ret
into
dec
dec
mov
pop
lods
push
dec
adc
nop
repnz
sub
mov
sar
or
outsl
adc
sub
cmp
jbe
imul
icebp
or
mov
cmp
insl
push
lds
dec
pushf
sbb
js
add
adc
mov
mov
sahf
test
cmp
sbb
orl
mov
popa
mov
sahf
pop
aam
jo
sbb
lahf
mov
test
icebp
dec
icebp
inc
dec
pop
pop
mov
add
push
negl
repnz
mov
xchg
push
pop
mov
mov
pushf
pop
inc
mov
repnz
sbb
mov
cmpsl
sub
fstps
aam
mov
adc
adc
lcall
pop
dec
fcmove
outsb
jg
push
sbb
mov
adc
mov
adc
mov
push
adc
pop
lahf
mov
cld
xchg
dec
adc
jl
mov
adc
add
shrl
dec
adc
dec
xchg
add
fiaddl
test
ret
out
clc
in
in
push
dec
ret
sbbb
shr
test
push
jg
pop
das
dec
into
ljmp
or
bound
jg
scas
roll
mov
rcrl
and
xchg
in
sbb
loop
mov
daa
sbb
pop
sub
jne
out
push
mov
pop
or
pop
or
test
pop
in
mov
xorl
sub
js
dec
xor
adc
subl
xor
pop
push
or
fiaddl
pop
in
imul
push
dec
ljmp
push
cmp
inc
jo
cmp
lds
cltd
lods
and
jg
js
js
adc
nop
mov
popa
iret
loop
testb
jnp
xor
rclb
and
jno
inc
jecxz
xchg
inc
push
mov
outsl
pop
shll
idivb
aaa
in
mov
mov
dec
mov
and
icebp
test
pop
dec
testl
aaa
decl
adc
xor
lods
lret
addr16
cmpsb
add
and
mov
sub
iret
and
dec
inc
lahf
int
punpckhdq
fwait
stos
add
push
int3
iret
js
lcall
movsb
in
scas
dec
test
loopne
adc
push
mov
stos
adc
fdivs
mov
stos
xchg
negb
lods
add
xchg
inc
out
jecxz
pushf
cli
mov
adc
insl
mov
pop
dec
test
mov
lea
xchg
int
mov
and
lods
jmp
lret
jl
dec
push
push
sahf
test
out
aaa
out
add
movsl
sti
insb
dec
lods
add
jg
jl
or
add
inc
les
loope
mov
xchg
push
xchg
jle
gs
mov
or
inc
add
lret
or
cmp
inc
js
push
test
pushf
xor
pushf
je
or
in
jae
fwait
mov
in
movsb
mov
stos
xor
shll
mov
aam
mov
mov
in
adc
sub
jb
xor
ret
outsl
lret
cmpsl
mov
movsb
and
pop
ret
std
mov
scas
lock
adcb
jne
movsl
dec
inc
pop
dec
es
cmp
inc
jg
mull
into
stos
fs
cld
mov
pop
imul
mov
adc
jl
cli
push
test
stos
fwait
add
xchg
push
and
jp
popa
ljmp
addr16
inc
xor
xor
xchg
in
sbb
jl
repz
or
cltd
iret
jo
pop
mov
adc
arpl
mov
adc
cmp
inc
mov
es
in
les
mov
adc
and
fcompl
pop
loopne
inc
dec
pop
cmp
xor
push
jnp
or
cmpsl
mov
ljmp
stos
mov
fs
fcoms
mulb
in
mov
mov
and
mov
lret
xor
ret
rol
clc
sbb
adc
dec
cmpsl
stos
jae
xor
rcll
inc
sub
insl
and
mov
pop
push
dec
pop
into
sarl
pop
mov
lods
lret
ret
cmp
cwtl
push
fmull
cmp
push
aam
roll
ljmp
shll
lret
inc
loope
stc
cmp
or
lret
and
add
ret
mov
add
pusha
enter
loope
cmp
add
sbb
cmpsl
sbb
leave
mov
or
mov
mov
fwait
loopne
aad
sub
daa
in
jbe
or
adc
dec
push
pop
push
test
test
push
cwtl
xchg
addl
jmp
push
sbb
das
decb
fwait
shrb
lods
mov
push
sbb
dec
dec
sbb
pusha
mov
scas
fdivrl
mov
sub
rorb
repz
pushf
xor
push
or
xchg
repz
add
jg
je
fcomps
fldt
imul
sbb
xor
popa
and
sbb
incl
sbb
xchg
push
stos
imull
or
jbe
imul
outsb
repz
insl
inc
ljmp
sub
xor
pop
dec
push
dec
xchg
in
rcr
mov
cs
ret
xchg
addr16
stos
aam
mov
sub
and
dec
sbb
mov
cmp
mov
adc
ret
xchg
mov
lret
pop
xchg
jmp
ja
outsl
aam
push
ljmp
add
mov
jns
sbb
mov
jecxz
lock
ret
test
push
mov
and
xchg
and
sub
pop
cs
sub
dec
loop
stos
js
xchg
aad
repz
enter
pushl
add
cld
push
flds
dec
lahf
cli
test
xchg
push
test
daa
ja
aam
dec
sbbb
push
cs
iret
jo
mov
fcoms
push
sbb
pop
or
xor
int
cmp
adc
sub
sbb
adc
inc
mov
add
sub
xor
adc
jl
and
inc
outsb
jmp
movsl
test
adc
pop
mov
lea
cwtl
xor
dec
sbb
popf
pushf
xchg
out
push
js
push
jb
pop
push
sti
sbb
aaa
xchg
jne
ret
mov
mov
fnstenv
sti
sarb
ljmp
cli
adc
ja
js
dec
cmp
and
jb
pushf
out
mov
xor
dec
jl
push
test
push
xor
pop
xor
adc
jge
xchg
xor
pop
fistl
sti
aad
sbb
arpl
or
dec
ljmp
or
fsubp
mov
jecxz
jne
xor
dec
in
js
or
add
fdivrs
lret
adcb
pop
das
cs
icebp
loopne
push
loop
xbegin
sub
xchg
cmp
mov
pop
pop
adc
movsl
rorl
add
xchg
testl
mov
iret
ljmp
and
cmp
xor
lea
cmpsb
stos
push
into
int
lods
movsb
and
mov
dec
sub
clc
stc
mov
mov
dec
in
stc
sbb
push
clc
or
jo
pop
mov
aad
stc
insl
int
iret
aam
clc
or
pushl
mov
xchg
mull
xor
scas
inc
movsl
stos
and
xchg
ficoms
sbb
and
mov
loope
jmp
xor
adc
int3
pop
rorl
andl
into
test
testl
inc
lds
dec
add
movswl
inc
jne
test
sbb
dec
cmc
stc
out
fidivl
lret
sub
pop
push
or
repz
popf
pushf
data16
jne
lret
scas
loop
mov
sbb
aad
addr16
xor
fldcw
leave
rcr
lahf
dec
aaa
inc
cmp
aaa
sub
popf
clc
adc
ret
or
add
lcall
insb
in
pop
call
dec
jmp
pop
cltd
std
cmp
push
in
adc
dec
mov
scas
test
dec
imul
lds
add
dec
mov
outsb
mov
divb
mov
pop
push
stos
pushf
and
inc
jp
push
cmc
and
push
adc
lret
ret
jecxz
push
or
inc
and
mov
fnstenv
lcall
mov
pop
inc
imul
insl
sbb
xchg
mov
pop
cmpsb
inc
push
enter
lock
push
sbbl
sub
mov
mov
inc
mov
ja
jmp
cmpsb
mov
jle
mov
mov
jecxz
cs
xor
jae
inc
push
je
movsb
insb
call
stos
into
aam
xor
lock
mov
les
stos
mov
sbb
push
cwtl
popa
adc
mov
mov
into
outsb
mov
push
test
and
aad
dec
mov
xlat
cwtl
push
pop
push
cltd
sub
jno
xchg
testl
mov
aas
fabs
repz
cmp
adc
dec
fadd
jl
scas
mov
adc
es
mov
push
and
mov
mov
fs
xchg
sbb
and
int
cmp
fadd
mov
xlat
mov
or
mov
loopne
cmp
repz
repnz
xchg
push
pop
test
ficomps
mov
jl
notl
xlat
mov
cmp
cmpsb
add
int3
mov
test
iret
fwait
mov
ficompl
mov
dec
xor
adc
jo
pusha
and
enter
xlat
inc
loopne
mulb
orb
mov
inc
xor
ja
sub
inc
rorl
xor
push
mov
sbb
mov
nop
adc
hlt
bound
xchg
shll
or
push
jecxz
fsubrl
cli
rcl
cmpsb
and
lcall
inc
dec
pop
out
dec
sbb
jno
insl
out
sub
or
sbb
shl
ret
repnz
lods
aaa
cmpsb
insb
repz
and
pop
cmpsb
and
out
or
mov
xor
testb
int3
mov
ficomps
dec
pop
scas
jne
lock
cmpb
xchg
dec
stos
xchg
aas
mov
jmp
pop
mov
xchg
xchg
push
mov
mov
adc
cs
sub
dec
sub
call
xor
pop
mov
mov
dec
jl
or
fisttps
cmpsl
int
int
out
fnstcw
stc
pop
xchg
hlt
pop
dec
aad
shlb
arpl
adc
pop
inc
mov
inc
sub
jo
cmc
push
xchg
or
inc
sbb
pusha
xor
imul
js
and
fcomps
scas
sbbb
pop
push
pop
jne
push
jmp
lock
mov
mov
sbbb
sarb
outsb
pop
addl
std
fisttpll
sbb
mov
xchg
xchg
lcall
sbb
fcmovne
fs
jne
int3
xchg
xchg
dec
rorb
lcall
xchg
scas
cli
mov
jge
add
fnstenv
int3
inc
cld
out
movb
fs
and
dec
add
jmp
jb
in
mov
add
cmpsl
cmp
sub
mov
sbb
mov
stos
scas
into
lods
dec
push
loope
pop
and
mov
jge
loop
xor
cmc
cmp
or
push
push
sub
and
sbb
dec
ret
fnstsw
int3
xor
and
pop
lock
fsubp
cmpsb
mov
in
mov
mov
cmp
pop
jl
mov
xor
jae
jmp
sti
add
clc
fs
imul
jb
adc
pop
sbb
xchg
cmp
pop
idivl
aas
mov
inc
pop
sbb
mov
daa
pop
pushf
xchg
out
out
je
lea
mov
loop
or
push
push
add
cmp
sub
jge
out
out
loope
mov
pop
xorl
push
add
pop
inc
xchg
sub
or
sbb
xchg
mov
rorl
shlb
xchg
clc
daa
xor
bt
mov
mov
xor
lods
jp
cmp
movb
jne
or
movsb
int3
push
mov
cmp
push
lea
jmp
or
in
js
mov
sti
mov
nop
enter
fildl
and
dec
cwtl
mov
lahf
pop
mov
jl
jle
arpl
inc
adc
or
cmpsb
cld
mov
inc
pushf
ss
jae
push
repnz
jecxz
lahf
mov
call
xchg
xchg
loope
adc
popa
out
inc
push
cmp
negb
cmc
pusha
jp
or
sbb
cmp
int
inc
mov
leave
imul
and
sahf
out
test
sbb
sbb
stos
sarl
push
mov
pop
frstor
fs
bound
adc
jge
and
movsl
push
lret
adc
and
mov
xor
cs
or
xor
ror
xor
mov
movsb
sub
add
mov
sahf
mov
jne
add
into
xor
push
push
fucomp
cmp
negb
cmc
les
adc
mov
lahf
add
push
lret
stc
add
mov
inc
inc
inc
pusha
lds
aad
cwtl
movsb
dec
pop
jecxz
inc
xor
loop
xchg
or
add
lret
mov
cmp
or
aam
bound
in
jge
sub
inc
and
mov
xor
mov
xor
lret
popa
sub
fbld
xor
movsl
mov
sub
ret
push
adc
repnz
adc
cmp
cmp
es
inc
leave
cmp
mov
cs
pop
xor
scas
push
mulb
pop
clc
insl
xchg
xchg
sub
scas
stc
ror
cmc
and
daa
xchg
xchg
cmpb
iret
lret
cmp
xor
ds
and
sub
hlt
xor
rorl
mov
lahf
mov
dec
cmp
jle
inc
int
cmc
and
dec
insb
inc
pop
mov
cli
cmp
mov
or
add
mov
cwtl
aam
fstpl
jnp
enter
stos
mov
mov
xchg
ja
xchg
repz
xor
mov
scas
add
mov
cmp
and
js
bound
stos
scas
inc
decl
rolb
push
loopne
loop
mov
add
or
dec
js
xchg
andl
add
cmp
imul
cli
nop
out
pop
rcll
test
pop
test
xchg
xor
push
dec
mov
pop
lahf
mov
in
packuswb
add
das
cli
mov
push
push
mov
adc
enter
das
in
jl
jle
int
test
loope
add
scas
cld
adc
mov
cmp
xor
jno
icebp
mov
aas
or
jo
es
addr16
aas
push
mov
inc
xchg
sti
jae
je
inc
cli
iret
sub
lcall
stc
int3
adc
test
pop
jle
rclb
jae
outsl
sti
mov
es
into
outsb
or
xor
repz
xor
xrelease
jmp
jg
mov
stos
push
in
mov
call
and
jb
mov
in
call
mov
pop
ret
push
mov
vzeroall
dec
div
fwait
xchg
aad
inc
xor
dec
jl
into
push
mov
test
int
xchg
add
hlt
cmp
fs
lds
xor
cmp
pushf
cli
mov
fsts
sarl
or
add
sbb
mov
sub
xor
shr
incb
push
adc
mov
test
mov
dec
xchg
sbb
mov
inc
sbb
push
dec
sub
fnstenv
lods
push
mov
dec
mov
or
push
push
mov
testl
pop
shll
xchg
das
ljmp
scas
mov
pop
and
lret
push
bound
xchg
test
cmpsl
insl
add
fsin
xchg
jne
scas
mov
jne
jg
clc
or
into
sbbb
push
inc
dec
lcall
cmp
mov
ficoms
push
mov
mov
aas
repnz
jne
adc
sub
outsb
adc
lret
call
cltd
sub
pushf
mov
mov
add
or
outsb
mov
mov
loopne
call
mov
xrelease
jnp
pop
sti
sbb
cmp
jae
jae
push
mov
jp
lock
sub
andb
mov
push
cli
sub
dec
xchg
leave
rcr
loop
popf
pushf
mov
or
out
xchg
push
push
push
push
cmp
decb
sbb
popa
bound
nop
cmp
mov
call
mov
pusha
movb
xchg
xor
in
add
sub
push
xchg
lods
xchg
jns
pop
and
js
adc
mov
push
mov
popa
mov
dec
pop
xchg
pop
into
in
cmp
sbb
pop
xor
cmp
xor
hlt
cmp
lods
in
gs
shll
mov
int3
in
rclb
pop
push
enter
les
jnp
arpl
sbb
xor
jnp
mov
std
sti
pop
aas
adc
xchg
pop
jae
fmul
ret
test
lock
loopne
nop
mov
dec
mov
mov
cmp
je
sub
and
jl
cwtl
cwtl
enter
cmp
xchg
jns
pop
out
orb
xchg
add
xor
xchg
aaa
cld
fcmovu
inc
pop
in
shrl
mov
testb
lahf
jno
inc
add
push
out
push
and
xchg
cmp
std
ret
int3
mov
xor
push
les
sbb
mov
pop
mov
or
test
pop
mov
in
sub
cmp
sahf
scas
outsl
mov
andl
orb
mov
cmpsl
adc
push
bound
in
incl
push
insb
stc
imul
scas
mov
in
ret
orl
out
enter
add
lahf
neg
fwait
cmc
rorb
scas
popf
push
adc
pop
sub
imul
addr16
or
rorb
dec
pop
push
pop
or
sub
mov
cmc
dec
jbe
imul
js
adc
pop
scas
je
repnz
cmp
mov
js
testw
maxps
dec
pop
cmp
test
and
xchg
fucomip
int3
std
mov
inc
sahf
test
and
cs
or
sbb
pushf
and
xchg
lods
negb
jns
in
lcall
shll
cmpsb
sbb
popf
cmp
adc
adc
repnz
mov
aad
ret
push
xor
subl
push
push
int3
mov
jl
sub
movsl
adc
push
fwait
call
aam
nop
call
jmp
fisttps
mov
data16
xlat
mov
test
lods
jb
push
lds
push
out
jnp
fwait
jmp
jno
aaa
push
and
xchg
outsb
mov
sub
lock
mov
data16
xchg
addl
les
aas
movsb
adc
xchg
dec
aaa
mov
pop
add
cltd
pop
movsb
or
xchg
pushf
nop
pusha
push
orb
movsb
ljmp
adc
jg
fbstp
and
dec
ljmp
or
mov
and
daa
cmp
scas
cmp
test
mov
movsb
testb
and
xchg
icebp
xchg
inc
push
add
andl
fsubl
add
cmp
or
scas
mov
lahf
jbe
sahf
jecxz
nop
pusha
ds
xor
jbe
shll
add
imul
sub
loopw
jle
imul
rcrl
das
mov
cmp
cmp
mov
mov
xor
inc
jl
inc
stc
pop
mov
test
cmp
test
pop
scas
push
or
and
repnz
lahf
mov
xchg
pop
mov
call
cmp
or
jno
pusha
movsl
cmpsb
mov
dec
sub
mov
xor
mov
fwait
das
sbb
pop
xor
insb
push
mov
inc
cmp
cli
sub
jp
orl
pop
mov
jecxz
mov
dec
sti
mov
dec
and
cmp
out
jp
xchg
add
into
push
xor
std
mov
inc
add
icebp
in
fistpl
mov
daa
orb
test
call
cwtl
or
pushf
sar
loop
mov
push
and
call
mov
mov
and
sbb
and
xor
aas
jmp
adc
adcb
jecxz
xchg
inc
mov
mov
dec
xchg
in
cwtl
jae
lret
push
repz
dec
repnz
fstl
sar
fwait
inc
inc
daa
enter
adc
outsl
insb
cmp
pushf
mov
mov
and
in
xchg
rorl
mov
fildl
inc
push
push
xchg
mov
idivl
fcoms
xchg
inc
in
test
mov
movsl
lcall
add
mov
fwait
hlt
adc
and
ret
testl
shrb
or
sti
jae
aaa
sbb
ljmp
push
and
push
leave
movsb
or
sub
cld
push
mov
pop
repnz
mov
push
adcb
mov
cmp
test
lret
inc
int3
mov
shl
jp
mov
mov
cmp
into
mov
pop
mov
mov
sub
add
out
call
push
or
sbb
mov
divb
mov
rcrb
hlt
cmpsl
mov
inc
xchg
in
xchg
jg
mov
aas
xorb
fwait
xlat
dec
dec
js
stos
xchg
ret
inc
sub
cmc
iret
out
cmp
scas
cld
std
pop
mov
rcr
insl
test
pushf
mov
push
shlb
cmpsl
push
cmpb
and
out
stos
cmp
mov
shll
xchg
mov
jmp
lods
or
shrb
push
sysenter
fsubrs
ret
mov
ret
lock
mov
fwait
jp
enter
and
push
sub
mov
pop
test
adc
xor
ja
insl
add
loop
iret
das
pushf
xor
lods
repz
in
loop
jae
fisttpll
push
mov
out
dec
mov
sub
outsl
pmaddwd
and
cltd
xor
enter
cmp
cmp
lods
rorl
and
add
comiss
push
add
mov
pop
dec
icebp
movsl
inc
shll
and
lahf
clc
mov
out
xor
push
nop
outsl
gs
ds
adc
test
fs
cld
dec
roll
push
or
iret
imul
lcall
decl
inc
sarl
xor
out
pop
into
mov
add
dec
pop
in
adc
lods
jmp
loopne
rclb
pusha
idiv
fwait
ds
add
inc
xor
imul
jl
push
lods
call
test
lock
fdivrs
add
cwtl
andl
dec
inc
mov
mov
cmpsb
mov
pop
inc
push
adc
jne
mov
push
inc
aaa
fs
popa
adc
xchg
mulb
push
xor
jle
out
rcll
insl
test
xor
adc
cmp
insb
bound
pop
popf
push
sbb
hlt
frstor
lock
lahf
repnz
paddusb
jle
and
push
aas
push
ljmp
xchg
adc
sahf
ss
sbb
icebp
push
les
in
sub
cs
and
sub
push
adc
push
sub
imul
ljmp
push
fwait
dec
xor
mov
icebp
xor
test
loop
fisubrl
stc
stos
je
jp
shl
xchg
add
mov
fwait
push
mov
cmc
adc
stos
or
sub
mov
imul
mov
or
movsb
fs
stos
adc
cmpb
sub
repnz
pop
outsb
sub
xor
data16
cmp
xchg
loopne
push
mov
pusha
pop
test
dec
lods
pop
lret
pop
inc
lock
push
fimull
nop
jno
add
lods
sbb
lret
fistpll
mov
jp
inc
or
lret
mov
icebp
fisttps
test
adc
mov
lret
out
inc
mov
cli
adc
add
dec
into
adc
push
xor
mov
fldt
lcall
sbb
imul
push
shlb
or
sti
call
aam
cli
or
pop
jns
fcmove
out
jmp
push
dec
xor
pop
arpl
xchg
lahf
mov
jge
mov
xchg
lock
add
add
mov
inc
jecxz
xchg
ss
sbb
jp
push
iretw
push
negb
pop
push
loopne
pop
js
cld
xor
cmp
add
in
icebp
cld
dec
je
nop
test
lret
stc
int3
and
ds
lret
mov
or
lods
or
call
mov
push
bnd
push
jl
sbb
cmc
cmp
dec
dec
test
mov
lcall
fisubs
adc
cmp
add
mov
sub
jmp
aam
es
sar
ljmp
xlat
std
add
mov
adc
dec
dec
and
dec
aad
test
jns
xor
rcrl
bound
cmp
fsubrp
sbb
jle
jno
cmc
cmp
ficoms
jnp
insb
fxch
int
add
jg
sbb
inc
fwait
hlt
xchg
xchg
push
cltd
int3
push
rdpmc
inc
mov
dec
arpl
sti
in
add
jge
aam
jge
lahf
mov
scas
bound
out
pop
xchg
add
push
les
scas
sub
adc
dec
add
stos
call
add
aad
dec
hlt
cmp
push
mov
jmp
pop
data16
dec
repnz
push
outsl
xchg
or
outsl
popf
sub
ja
fstl
scas
sbb
and
push
js
xchg
sti
aam
push
dec
movsl
mov
clc
rorl
data16
test
xchg
mov
ror
xor
cmp
push
call
inc
inc
mov
push
lods
cmpsb
or
adc
pop
repnz
cmpl
stos
mov
sbb
adc
add
clc
lcall
push
iret
std
les
cmc
js
inc
lcall
popa
sahf
mov
mov
sub
add
cli
pop
or
inc
push
int3
cmp
and
inc
and
sub
sbb
shl
popa
test
repz
test
movsb
js
iret
sbb
int
and
imul
test
jmp
push
loopne
jecxz
addr16
mov
jno
jl
xchg
inc
mov
sti
push
inc
push
ds
jb
xchg
ret
sub
clc
mov
or
inc
iret
jae
sub
pop
mov
aad
dec
outsl
mov
mov
in
arpl
ss
arpl
outsl
std
xor
int3
add
xchg
pop
sbb
push
xor
lds
in
sbb
xchg
jl
mov
mov
mov
call
push
clc
in
and
lcall
in
and
mov
push
or
rorl
pshufw
lods
xchg
sbb
cwtl
faddl
xchg
negl
mov
fs
mov
outsb
inc
test
and
jo
ret
mov
xor
gs
and
ficomps
pop
cwtl
and
and
mov
and
cltd
push
mov
aaa
imul
cmp
jl
arpl
jns
xchg
out
add
lret
test
or
cmpsb
in
jae
in
dec
or
mov
stc
inc
pushf
outsl
pop
mov
imul
jmp
xor
mov
scas
int
push
mov
popf
jmp
jno
lds
mov
cmpsl
ljmp
mov
inc
pop
pop
ret
lahf
loop
out
pop
popa
cli
into
jle
mov
cmp
sar
push
pop
lret
pop
cmp
mov
mov
pop
inc
cmp
jg
mov
jo
pop
popf
xor
call
adc
xchg
xchg
jne
lds
cmc
lahf
jmp
scas
sahf
mov
add
clc
loop
cmp
adc
sarl
test
cld
test
movsb
ret
sti
jb
xchg
in
add
push
lods
xchg
sub
dec
clc
push
cmp
jecxz
xor
push
sub
mov
scas
mov
adc
push
mov
in
jo
sub
jns
inc
mov
aam
fstpl
subb
fstps
dec
push
jb
xor
xchg
xchg
imul
outsb
push
sub
sahf
inc
xchg
push
adc
js
aam
sub
inc
sub
sbb
push
sti
push
push
or
jle
fadd
inc
xchg
or
pop
mov
aam
sbb
mov
jbe
push
lcall
lods
call
stc
sbb
shrl
iret
bound
pop
add
inc
mov
or
jae
loopne
test
and
jnp
nop
clc
ljmp
pop
lods
mov
aad
inc
xchg
inc
mov
jecxz
ds
test
mov
imul
std
jle
in
add
das
movl
dec
xlat
out
dec
int
roll
ret
mov
jmp
test
gs
sarl
lock
inc
cmp
fimull
inc
xor
aam
insl
push
fsubr
adc
aaa
dec
cmp
cmp
out
sbbb
sub
aad
movl
incb
test
cmp
daa
jge
jb
jne
ret
jecxz
adcb
or
xor
imul
je
or
sub
jns
xor
enter
js
or
xchg
add
cmp
pushw
lods
rcr
push
jle
cld
ds
sub
sub
sbb
mov
push
lods
inc
ret
lods
sub
xor
cmpsl
stos
add
ja
dec
adc
lods
pop
outsl
mov
jns
push
adc
dec
out
mov
sti
movsl
clc
fwait
lods
insl
test
fsubrs
adc
jp
je
aad
inc
shll
imul
dec
push
and
movsl
in
lds
inc
sub
cmp
add
inc
popa
mov
test
push
nop
jbe
loope
xor
jnp
cmp
std
fisubs
jecxz
inc
dec
push
mov
fwait
cmp
mov
jmp
jae
in
jno
fidivrl
and
cmp
out
hlt
cmp
push
mov
add
ret
add
sub
lahf
xor
adc
xor
and
push
pop
imul
sti
sub
inc
mov
or
jo
adc
adc
pop
inc
aad
dec
mov
pop
xchg
jno
int3
mov
push
in
mov
push
inc
xor
jl
imul
imul
imul
flds
push
mov
filds
sub
test
or
inc
inc
jp
aam
mov
mov
test
pop
or
jne
cli
sbb
or
jl
aad
add
adc
mov
fcompl
cltd
mov
bnd
jl,pn
and
out
std
cmpsl
cwtl
inc
jp
int
add
or
xchg
jp
jg
fcmovbe
std
out
fsts
xchg
sub
sub
adc
hlt
sbb
fstpl
add
cmpb
jbe
mov
cmp
inc
sbb
lock
xor
pop
jbe
ficomps
mov
xchg
test
cmpsl
mov
sub
or
out
std
pushf
cmp
rcrb
repnz
mov
andb
adc
int
pop
mov
pop
cmp
mov
jnp
shrl
jbe
xor
add
dec
pop
je
imul
clc
stos
cwtl
and
dec
rcll
fnstenv
fwait
xor
mov
in
lock
mov
negl
imul
add
adc
fcmovnbe
iret
mov
xor
cwtl
add
push
xor
inc
jo
sub
ret
jle
or
xchg
lret
pop
hlt
imul
fdivr
out
sub
pop
xchg
les
mov
jmp
repnz
mov
out
jl
sbb
fmulp
testl
cmp
pop
cli
cmp
ljmp
lret
pusha
ds
repnz
pop
and
jle
pushf
popf
les
sub
jns
push
cs
in
inc
lds
fcomps
mov
sahf
mov
movsb
and
out
mov
aad
sub
lods
sub
call
mov
cmpsl
push
mov
jge
sub
add
aad
and
in
xchg
ficoms
sub
push
mov
xchg
push
cmpsb
mov
movsl
cmp
movsl
mov
loopne
mov
mov
sbb
xor
inc
mov
cmpsl
jecxz
adc
mov
and
cmp
inc
pop
stos
jecxz
sub
jl
int3
push
xchg
repnz
cmpb
repz
lods
enter
outsl
inc
inc
add
pop
leave
sub
imul
popa
add
testl
in
jae
rclb
mov
out
inc
rorb
ret
adc
or
shrl
test
fs
iret
adc
and
sub
sub
psubq
ss
scas
mov
sbb
bound
fwait
lahf
popa
shl
pusha
jg
scas
aad
mov
imul
ret
push
pop
jno
add
mov
mov
pop
add
or
outsb
xor
mov
int3
or
pop
inc
jmp
test
test
lea
into
add
jne
test
in
fcmovne
or
sbb
sarb
imul
lods
insl
push
mov
adc
add
andl
pop
mov
in
inc
adc
push
lds
adc
cmp
scas
fstl
scas
inc
or
push
sbb
faddl
scas
insl
js
pop
mov
es
mov
sub
int
aam
pop
test
inc
pop
in
ret
out
idiv
inc
in
mov
jl
sbb
popa
test
push
lods
fstpl
jae
sub
mov
lahf
lret
adc
shll
push
jg
lods
test
fsubrl
hlt
lcall
cmp
adc
testb
mov
sub
adc
add
stos
fistpll
jg
cltd
in
or
es
loop
sub
lcall
adc
outsb
mov
out
std
popf
out
xor
lret
xchg
outsb
imul
and
es
nop
bound
xchg
cmpsb
loop
push
mov
cld
int
push
notl
pop
add
pop
or
lock
stos
mov
std
or
jle
push
pop
pop
cwtl
sahf
pop
mov
outsb
pop
pop
test
adc
jmp
pop
sub
sub
daa
cs
gs
pop
fiaddl
shlb
mov
add
xchg
pop
repz
imul
sbb
adc
ret
stos
mov
and
into
ljmp
pop
xchg
dec
scas
dec
je
scas
sbb
push
and
imul
repnz
mov
mov
dec
jmp
and
jl
xor
fisubl
sbb
mov
xchg
frstor
mov
bnd
sub
pop
jns
fbstp
xor
leave
add
repz
xchg
aas
out
jbe
js
jbe
in
in
xchg
add
jmp
cmp
lock
cwtl
pop
dec
mov
jb
push
sub
shll
inc
push
inc
and
popf
mov
cs
je
stos
and
jecxz
in
arpl
mov
push
xchg
dec
cmpsb
jbe
lods
aad
inc
addb
orl
sbb
insb
add
inc
cwtl
shll
xchg
mov
fidivs
jg
lock
in
sbb
iret
jo
fcmove
lahf
movsl
popf
movsl
lcall
inc
test
outsl
aaa
sbb
les
inc
mov
mov
push
out
iret
data16
cwtl
add
bound
xchg
mov
pop
add
jae
push
xor
push
sub
out
pop
js
cli
daa
cmp
jmp
mov
fcompl
xchg
mov
or
mov
or
and
shll
mov
push
push
imul
rcrl
xchg
rolb
aaa
arpl
and
gs
adc
jle
setno
test
sarb
pop
mov
pop
popf
in
out
addr16
js
outsb
or
mov
fmull
pushf
xchg
add
orb
mov
roll
hlt
in
ljmp
mov
call
jg
cmc
shll
ror
inc
inc
cmp
das
cmpl
out
jmp
pop
push
aas
dec
pop
xchg
sbb
rcrl
cmp
or
es
dec
xor
es
cmp
push
jp
dec
push
into
pop
je
jne
inc
rclb
lds
inc
cmpsl
test
scas
int
cli
mov
adc
faddl
mov
xor
out
xchg
mov
rcll
outsb
cmpl
mov
cmp
fcoms
push
daa
in
xchg
fldl
in
cmp
nop
stos
pop
inc
shll
gs
mov
pushf
push
shl
xchg
or
in
orb
or
nop
cwtl
out
pop
or
repz
push
mov
adc
mov
mov
dec
xchg
push
test
sahf
addr16
mov
add
jl
pushf
push
add
mov
test
aam
cmpsb
add
jmp
sbb
pop
das
dec
shlb
es
sbb
scas
mov
push
negl
sbb
push
push
cli
call
inc
xor
xchg
inc
push
iret
rclb
add
mov
addb
xlat
pop
movsl
testl
shll
push
sbb
mov
mov
ret
mov
adc
jo
push
cmpsl
push
fs
daa
jg
popf
xor
cs
loope
pushf
fnstcw
and
inc
movsb
clc
std
cli
fildll
mov
inc
cmp
push
sbbl
cli
sbb
orl
xlat
fildl
repz
int3
out
mov
lcall
push
jns
sub
fs
out
sbb
xchg
dec
cmp
call
ss
push
xorb
push
inc
inc
lcall
or
popa
ret
jae
pop
push
dec
mov
fcompl
pushf
xchg
mov
sub
pop
lods
popf
je
sub
insl
lods
sub
mov
outsl
test
xchg
push
mov
int3
dec
or
push
pushf
stos
push
sub
pushf
jmp
sub
push
pusha
rorl
push
adc
push
daa
js
shlb
sti
in
scas
movsl
sbb
icebp
mov
sub
lods
fucomi
repz
xor
push
or
sbb
mov
mov
pop
xor
xorl
fimull
jne
mov
outsl
jmp
sub
faddl
lds
xorb
sbb
into
leave
fs
add
push
sbb
or
rcrb
dec
jl
mov
push
lret
add
cmpsb
jmp
icebp
pusha
cmpsl
push
or
arpl
lds
rclb
sbb
add
sti
shrb
negb
jae
adc
or
dec
popf
jp
xchg
out
and
notl
sub
adc
inc
add
pop
or
jl
or
daa
sub
stc
js
out
mov
test
mov
addr16
nop
aas
sub
xchg
test
mov
jl
sbb
jg
pusha
in
mov
or
sbb
sar
jb
mov
rorb
sbb
jecxz
mov
jno
add
shrb
pop
adcl
add
pusha
stos
push
sar
inc
cmpsb
shr
push
pop
adc
or
fsubr
jbe
mov
test
dec
sbb
jecxz
pop
dec
pusha
test
inc
lret
fwait
cld
loopne
jecxz
repz
push
mov
mov
cmpsb
inc
pop
imul
dec
sbb
dec
and
into
sub
xchg
movsl
push
test
mov
movsb
cs
xor
jnp
iret
xchg
mov
psubsw
mov
push
lahf
pop
loopne
shrl
test
adc
push
mov
enter
sub
movsl
mov
cmp
gs
add
nop
aaa
and
fisubrl
push
addr16
int3
imul
in
mov
pop
or
mov
sbb
scas
push
mov
and
xchg
mov
jb
sub
jnp
jo
mov
push
and
mul
shrb
xor
jle
gs
jmp
add
xchg
insb
or
xchg
stos
cli
sahf
leave
add
mov
mov
mov
int3
test
loope
js
mov
fs
pop
std
mov
sahf
aas
pop
jb
test
add
mov
or
lock
sti
arpl
xchg
jne
cmp
or
jg
loope
bound
aas
sti
adc
dec
xchg
mov
or
nop
jp
mov
cld
popa
imul
lds
mov
and
pop
xchg
in
dec
xor
sbb
fcmovb
inc
in
mov
outsl
and
sahf
cli
test
icebp
xchg
gs
test
jecxz
push
jl
cmp
movb
cmp
dec
movsb
aam
adc
fstpt
ret
jg
shll
pop
popf
in
cld
xchg
pusha
jo
lea
cmpl
cs
mov
cld
adc
mov
testl
or
int
and
jne
popa
inc
negl
inc
leave
sub
push
sbb
dec
mov
add
popf
jbe
inc
lcall
sahf
in
lcall
lret
add
push
xor
sti
push
test
sub
outsl
pushf
stos
ja
pop
sub
dec
in
fsqrt
add
and
pop
cld
pop
hlt
ljmp
mov
add
fiadds
mov
push
inc
movsl
jle
sbb
and
imull
xor
cli
lret
es
popf
sub
in
jbe
mov
cmp
inc
cwtl
in
not
or
pop
mov
test
or
test
enter
enter
bound
and
das
jl
loop
and
out
xchg
mov
rolb
sbb
jae
imul
stc
in
and
adc
icebp
ss
pop
sub
push
imul
inc
lahf
fstl
sub
les
scas
outsl
enter
or
popa
push
hlt
sbb
enter
dec
jg
and
dec
in
mov
ja
push
or
aas
out
lahf
xor
cmc
outsl
push
pop
mov
adc
test
into
ret
xchg
addr16
mov
jmp
mov
adcb
jmp
mov
test
dec
js
out
push
xor
outsb
popf
xchg
andb
ficompl
test
andb
add
cmp
mov
xorb
jo
imul
sbb
shll
push
xchg
cmpsb
imul
aaa
mov
or
xor
jnp
fwait
iret
lcall
mov
das
push
mov
cs
and
scas
and
xchg
ljmp
jbe
xchg
or
inc
xor
sahf
inc
pushf
jecxz
cmp
or
mov
ljmp
jne
lods
adc
lods
insl
nop
mov
jmp
xor
lock
out
enter
jnp
decl
sahf
insb
jmp
cltd
dec
sub
dec
add
lods
imul
out
cmp
inc
jb
mov
pop
pop
push
nop
mov
rolb
pop
xchg
jnp
adcb
aaa
lock
cmp
inc
sbb
repz
fsubrs
xlat
cmp
imulb
xor
xchg
cltd
xor
les
popa
and
fstps
dec
cmp
imul
loope
insb
adc
xchg
xchg
lcall
sbb
fs
loope
mov
nop
mov
pop
in
fcomip
mov
and
in
out
in
inc
pop
xchg
ljmp
lods
ljmp
outsb
mov
lods
xor
popf
repz
divl
aaa
shlb
add
push
ret
stc
lahf
xchg
mov
jnp
pop
or
je
pop
call
dec
dec
adc
jl
notl
rcrb
sahf
mov
mov
adc
lds
aas
pop
lds
pop
cwtl
mov
mov
sub
sbb
fmul
repnz
sbb
fisttpll
xchg
push
cmp
loop
sahf
dec
and
mov
leave
outsb
stos
insb
dec
inc
nop
jg
sahf
xor
stc
or
rorb
mov
mov
test
inc
outsb
and
aaa
cmpb
jbe
pop
xchg
adc
add
and
in
pop
mov
imul
push
insl
or
xor
mov
or
pop
and
inc
mov
enter
or
push
loop
push
jmp
inc
cwtl
push
dec
xlat
loope
jns
lcall
jne
hlt
insl
cmp
loope
pop
repnz
mov
pop
xor
push
pop
mov
addr16
stos
lods
add
mov
lods
push
rcl
arpl
push
adc
inc
xlat
sbb
dec
fsubrl
shll
subl
test
sub
and
aas
jle
push
clc
inc
or
adc
mov
jg
shlb
sub
aaa
push
mov
inc
in
adcl
push
sub
adc
jns
and
add
mov
add
pop
lret
jnp
lds
push
loop
arpl
push
pusha
mov
cmp
pusha
fucomp
cmpsl
arpl
pop
cwtl
xchg
mov
pushl
call
in
ror
lods
bound
inc
or
in
xchg
cld
cwtl
cmp
enter
lret
addr16
popa
ljmp
push
call
test
lods
add
pop
imul
movaps
lret
jne
and
xlat
dec
mov
mov
or
arpl
pop
dec
mov
cmp
xchg
sarl
and
jne
js
push
out
jnp
inc
mov
sahf
out
sub
push
mov
test
sub
xchg
xchg
pusha
dec
lret
imul
arpl
pop
pop
cli
sub
dec
or
push
sub
mov
xor
je
test
clc
out
subl
sub
fmull
mov
mov
in
int3
ljmp
dec
popa
pop
add
xchg
inc
sub
ficoms
cld
lods
mov
add
push
hlt
inc
fldenv
repz
lock
xor
sub
mov
and
push
clc
lock
lock
adc
nop
xchg
dec
inc
shrl
inc
pushf
sbbb
pop
xor
iret
mov
pusha
test
inc
into
mov
test
iret
jl
and
sub
mov
lock
jmp
push
mov
rcr
cmp
and
pop
lret
mov
subl
outsl
enter
sbbl
xor
mov
ja
int3
sqrtps
pop
aad
insb
scas
das
xor
lahf
inc
push
mov
lret
cmp
fs
xor
movsb
test
imul
call
inc
int
inc
fdivs
leave
cmpsb
aaa
sbb
cmc
pop
inc
xchg
add
add
inc
pop
fistpl
mov
push
movsb
jl
rcr
push
cmc
nop
jecxz
or
mov
mov
nop
adc
mov
cmp
inc
loopne
cmp
jg
iret
push
jg
lods
fiadds
fidivl
cmpb
xor
xor
inc
mov
leave
mov
addr16
outsb
adc
imul
movsb
xor
ja
mov
xchg
enter
mov
or
pushf
xchg
hlt
ljmp
dec
jno
cmp
push
insl
sub
hlt
push
dec
out
or
nop
dec
fadds
inc
jnp
adc
xchg
mov
inc
jmp
pop
inc
in
and
mov
jno
jmp
adc
cmpsl
xor
adc
insb
jns
push
xor
jle
cmp
xor
mov
rcrl
mov
mov
imul
pop
mov
repnz
pop
aaa
imul
jmp
push
xchg
fistpl
call
cmp
ret
das
mov
adc
xchg
sbb
jb
cld
jns
mov
pop
nop
jmp
repz
or
mov
ret
xlat
frstor
adc
xor
adc
pop
mov
sahf
push
xchg
insb
mov
add
ss
outsl
cld
xor
and
mov
ss
cwtl
mov
mulb
cmp
hlt
aam
fxch
shrl
pop
mov
add
lods
popf
jnp
lret
rorb
imulb
push
push
push
add
push
loop
outsl
repz
inc
cmp
adc
inc
lret
sbb
mov
sti
pop
pop
jno
mov
xor
call
push
lahf
lcall
insl
pop
mov
inc
inc
inc
add
or
cmpsb
movsl
jbe
iret
fs
cmp
and
adc
pop
cmp
xor
cwtl
dec
xor
xchg
mov
sub
xor
popf
fildl
mov
xchg
inc
dec
imul
cmpsl
imul
pop
inc
mov
mov
push
fcoml
sbb
adc
mov
adc
jl
lret
jl
cmp
dec
mov
xor
jmp
xor
adcb
loopne
mov
rcrl
pop
dec
cwtl
repz
jl
pusha
decl
adcl
ljmp
xor
mov
int3
or
sbb
stc
fs
fisttpll
add
cltd
out
test
jb
inc
ret
pop
dec
jecxz
testl
pop
dec
mov
ret
jl
adc
cmpsb
inc
mov
pop
dec
mov
sbbb
mov
mov
andl
rclb
sbb
mov
jg
add
fidivrs
ds
ficomps
std
pusha
movsb
ds
ficompl
inc
test
out
lcall
push
push
imul
imul
mov
cmpsl
mov
cmp
add
mov
pop
jmp
or
cmp
xchg
pop
cmp
add
ret
rorl
nop
sbb
bound
sub
xor
leave
repnz
inc
push
lret
pushf
jbe
dec
les
out
push
push
push
xchg
pop
pop
add
cmp
mov
or
movsb
pop
push
insb
inc
or
push
inc
scas
pop
lahf
cld
push
cmp
imul
pop
fstps
cmp
mov
pop
mov
push
imul
mov
mov
jge
dec
or
mov
xchg
movsl
jp
frstor
testl
pop
sbb
xor
mov
mov
loopne
fsub
shl
jb
jmp
pop
adc
pop
lcall
dec
iret
mov
cli
pop
mov
rcll
pop
adc
aam
mov
in
rcr
enter
mov
xchg
push
mov
add
lret
sub
and
xchg
mov
scas
fldcw
add
test
sarl
or
add
cltd
fdiv
and
dec
mov
mov
imul
arpl
cld
mov
sbb
push
mov
fwait
js
ds
sub
insb
xchg
push
les
adc
xor
out
pop
ds
ljmp
in
mov
adc
iret
dec
int3
sub
sub
adc
mov
nop
mov
push
int
add
fwait
xlat
add
cmp
dec
sarb
and
dec
std
adc
std
jle
lods
sub
int3
stos
in
rcr
in
jbe
ret
xor
or
sub
cmc
lret
rcl
push
cmpsl
or
and
jae
imul
push
jae
jmp
mov
pusha
ds
cmc
dec
out
push
jo
test
bound
mov
aas
lods
imul
sbb
dec
fldenv
ja
and
hlt
push
and
mov
into
in
mov
xchg
adc
nop
movsb
push
mov
jo
sahf
fucomi
ret
jmp
popw
imul
stos
mov
add
je
in
mov
fcomps
xorl
lret
xor
mov
es
xchg
fs
scas
jmp
mov
movsl
dec
pushl
in
int3
adc
mov
out
dec
jne
push
lahf
add
and
das
ficomps
sti
adc
xor
movsb
or
xchg
dec
add
sub
dec
loop
mov
mov
insb
xor
xor
cwtl
xor
sbb
pop
cmp
insb
pop
sbb
daa
cmp
mov
sarl
testl
sets
in
sbb
dec
add
ss
xchg
lret
jno
dec
popl
movsb
repz
sahf
fnsave
lret
or
es
scas
cmp
fldenv
scas
push
sbb
pop
mov
movsl
test
or
pop
push
adc
or
cmp
and
mov
sbb
pop
xor
cwtl
aaa
xor
into
int3
sahf
scas
std
fdivs
gs
orb
enter
sbb
mov
test
mov
jl
daa
ss
es
pusha
jl
nop
mov
fdiv
int3
lret
and
inc
rol
push
mov
aaa
push
repnz
push
push
pop
sub
push
xchg
pop
pop
sarb
or
mov
xchg
jno
lds
or
lahf
std
xchg
leave
ret
xchg
lahf
or
pop
adc
testl
push
int
adc
sub
orb
xchg
mov
mov
cmp
xchg
mov
mov
aas
jnp
fwait
xor
shrl
pop
push
mov
jmp
hlt
and
fs
mov
add
cmc
or
adc
ret
sub
push
inc
inc
rcrl
and
fcomps
loopne
and
pop
mov
xchg
mov
test
rcrl
add
fldcw
mov
adc
int3
fs
xchg
setle
push
xchg
mov
cmpsb
cmpsb
ret
xlat
mov
stc
fcmovnbe
add
out
ljmp
mov
xor
inc
inc
sbb
loope
pop
xor
mov
clc
lock
icebp
cs
imul
push
adc
sbb
add
add
xor
decb
jbe
push
mov
cltd
repz
sub
lock
lret
je
and
jne
mov
cmp
mov
dec
xor
push
add
inc
int
mov
mov
cld
int
and
pop
iret
ja
sbb
les
push
movsb
mov
rcr
inc
sub
sbb
mov
push
dec
hlt
mov
jbe
inc
and
dec
gs
push
mov
movl
jno
fucomi
mov
xlat
pop
repnz
fwait
cmc
or
inc
and
ret
dec
call
xor
xor
sbb
add
lret
mov
jle,pn
xlat
cld
sbb
imul
sbb
rcrb
dec
test
jno
sbb
lea
xchg
cmpsl
sbb
inc
fmulp
movsb
mov
pop
push
dec
or
adc
dec
or
lods
xchg
mov
mov
sub
push
cmc
inc
lods
inc
es
mov
and
sbb
inc
addr16
ljmp
sub
pop
mov
divb
inc
jae
das
jp
adc
cmp
inc
xchg
xchg
aas
rorl
sbb
insb
mov
mov
out
orl
cmpsb
inc
int
cmp
xor
shll
aad
xlat
or
mov
sti
pop
popa
mov
cli
fcmovu
lahf
mov
dec
loop
dec
jno
adc
out
xor
xchg
push
hlt
shll
loop
lods
ds
mov
ftst
inc
outsb
or
repz
movsb
cmpsb
xchg
cmpsl
data16
sbb
add
mov
mov
cmp
jo
fwait
xor
sub
insl
int
inc
mov
popa
in
inc
test
mov
push
ret
or
jae
ficoms
xchg
sub
xchg
lds
pop
push
stc
dec
out
cmpsb
ret
outsl
cmpsl
inc
icebp
push
pop
xor
clc
jne
data16
bound
fmull
fcoml
das
hlt
insl
sub
repnz
out
int3
xlat
sbb
mov
mov
inc
loopne
or
aaa
rcll
or
stos
lds
lret
dec
int3
aas
fistpl
nop
aam
ret
andb
jp
stos
mov
daa
add
or
fsubrl
hlt
mov
lods
int3
pop
imul
daa
pop
popf
cmp
adc
negl
adc
stos
xor
adc
inc
pop
mov
jne
adc
mov
jns
mov
cwtl
xchg
sbb
add
popf
cld
or
or
and
std
popf
insb
fadds
stc
jb
xchg
rcll
stos
xchg
pop
jle
in
mov
adc
pop
push
cmp
int3
shrb
test
mov
aaa
adc
aam
les
rclb
adc
aad
xchg
xor
scas
jmp
cs
and
lea
jmp
je
xchg
outsb
pop
mov
inc
fiaddl
cli
rorb
pop
adc
pop
testb
insb
ficoms
std
sbb
mov
mov
and
pop
imulb
lock
and
out
ret
xlat
mov
xchg
loope
jg
loop
add
imul
repnz
jecxz
mov
mov
and
mov
xor
cli
scas
aam
ja
inc
fldl
aad
ja
loopne
xor
xchg
add
repz
pop
jne
mov
ret
sub
pop
lods
mov
pop
sub
jb
xlat
lea
loopne
push
aas
mov
xor
scas
dec
mov
fsubl
mov
push
jne
mov
ja
xchg
add
adc
mov
jge
sub
and
mov
in
gs
pop
pushf
pushf
loop
bound
cmc
push
gs
xor
test
pop
enter
mov
rorl
aad
add
stc
dec
inc
arpl
inc
push
ds
sub
mov
mov
ja
leave
and
dec
mov
push
loope
mov
rorl
bound
ja
add
jp
popf
std
pop
pop
push
mov
outsb
cmpsl
insb
fscale
mov
adc
inc
lods
dec
insl
lahf
xchg
or
cltd
pop
push
cld
pop
mov
pusha
mov
xchg
xor
inc
adc
repz
push
ljmp
test
jg
lcall
sub
dec
jmp
mov
mov
and
jp
cmp
inc
aam
mov
scas
push
pusha
pop
xlat
mov
and
push
subb
push
popf
por
aaa
insl
pop
xchg
fstpl
inc
jno
pop
f2xm1
daa
inc
out
ss
fimuls
scas
cmpsb
fadd
loope
ret
mov
test
xor
mov
sti
lock
add
mov
filds
sbb
push
sbb
das
ret
das
mov
js
mov
mov
add
push
scas
dec
mov
push
push
add
and
cmp
cltd
sti
leave
popf
filds
add
add
sti
dec
aad
hlt
adc
lds
ljmp
push
iret
out
xchg
pop
fdivrs
mov
inc
in
mov
mov
xor
fsts
in
sub
cmp
loopne
sbb
cmp
popf
sbb
addr16
loope
movsl
dec
rorl
or
imull
out
js
xchg
or
push
lds
lods
ret
pop
adc
cs
ss
inc
rorb
mov
pop
xor
or
push
fdiv
aas
loopne
mov
outsl
jb
mov
ja
sbb
lods
inc
and
xchg
sub
xchg
jge
jb
mov
addr16
pushf
shr
pop
adc
cmc
lods
ja
mov
faddl
mov
imul
adc
jp
in
mov
out
outsl
xor
jp
jo
push
xchg
and
out
add
cvtdq2ps
neg
in
dec
stos
sbb
mov
sbb
mov
mov
fs
int
outsb
cmp
ss
mov
and
shrb
andl
enter
inc
lret
aaa
movsl
out
jmp
dec
icebp
sarl
insl
mov
mov
shll
test
xor
inc
or
loopne
lahf
into
testb
sbb
addl
sub
call
and
pop
rcrb
loop
mov
cmpsl
ds
clc
push
xor
out
out
push
fbld
push
cmpsb
std
cmp
sahf
add
or
push
int
mov
pop
lcall
mov
or
add
dec
jmp
mov
inc
mov
inc
mov
jp
dec
out
adc
jo
xchg
pop
add
popf
dec
sbb
andb
xchg
xchg
inc
adc
test
sahf
stos
into
push
pop
test
push
xor
call
pop
in
fisubs
pop
ret
mov
stc
push
lds
mov
inc
xchg
xchg
mov
mov
loopne
add
out
xor
add
jae
mov
sahf
mov
ficompl
in
or
fdivp
dec
js
out
leave
and
pusha
pop
sti
cmpl
xchg
and
add
rorl
and
xlat
adc
mov
pop
mov
or
jnp
in
xor
xor
or
and
loope
loop
mov
pop
int3
pop
jns
aaa
es
xchg
popf
mov
hlt
xchg
lea
dec
xor
mov
in
mov
xchg
ret
out
push
fcomi
les
adc
push
push
push
stos
inc
dec
xchg
adc
outsl
cmp
jle
jmp
scas
stos
cmp
jge
adc
mov
nop
call
gs
jns
jne
xchg
test
xchg
ljmp
nop
int
jae
pop
mov
mov
adc
mov
push
cltd
mov
stos
jp
sti
icebp
dec
ja
xor
jmp
jae
xlat
and
out
xlat
mov
test
xchg
dec
dec
mov
mov
push
jbe
div
dec
pop
insb
in
xchg
lcall
je
mov
lock
xlat
dec
test
push
dec
sbb
ds
vunpcklpd
adc
repnz
sub
jp
push
in
push
sahf
sub
dec
dec
loope
aam
or
sbb
dec
repz
jno
sbb
in
adc
testb
popl
into
es
cmp
mov
outsb
loop
inc
out
test
incb
ja
and
pop
pop
shlb
outsb
mov
lds
scas
cld
jecxz
jns
aas
or
adc
dec
xchg
jo
icebp
hlt
movsl
pop
pop
movd
push
int3
test
jle
pop
shlb
push
push
mov
and
cmp
cld
repz
rolb
add
mov
rcll
idivb
test
xor
dec
push
dec
adcb
push
mov
test
ss
sbb
out
jecxz
cmc
xchg
xor
loop
test
cli
pop
pop
xchg
xor
lret
push
sub
or
sub
push
or
and
leave
dec
and
fdiv
fdivs
mov
xchg
sbb
jp
and
mov
insl
cmpb
push
pop
fdiv
aad
sbbb
and
mov
icebp
arpl
mull
dec
imul
xchg
mov
cmc
in
mov
mov
inc
inc
xor
adc
xchg
push
jmp
cmp
cs
pop
scas
es
mov
mov
fdivl
mov
cld
inc
adcb
ficompl
in
and
les
loop
ds
add
jl
mov
shlb
rol
in
imul
popf
jne
shrb
sub
scas
add
repnz
test
jbe
jg
adc
loopne
les
jmp
fbstp
pop
mov
and
push
sub
adc
aam
jle
mov
lret
dec
mov
stc
stos
fidivrs
pop
adc
pop
xor
and
lds
adc
inc
xchg
jle
fistpl
push
jo
push
lds
add
mov
scas
cmpsl
call
cmp
jb
push
adc
xor
fstp
and
insb
mov
scas
nop
inc
xor
sub
mov
cli
daa
in
cmp
inc
fcoms
popa
je
loopne
fisttps
pop
out
mov
pop
mov
sar
add
outsl
dec
cmpsb
pushf
xchg
xchg
mov
pop
pop
rorl
pop
sbb
sbb
xor
inc
or
insb
xchg
push
shlb
dec
in
jl
mov
stc
lds
lock
jle
outsb
cmpsb
xchg
enter
xor
daa
es
jbe
cltd
inc
mov
aas
inc
xchg
movsl
mov
hlt
popa
daa
jmp
sbb
or
in
movsl
fbld
xchg
aam
mov
mov
xchg
jo
aad
mov
mov
inc
fisubrs
cmp
mov
jo
cmc
jne
xor
gs
in
sbb
mov
lret
pop
mov
clc
fsubl
cmp
in
jo
stc
popa
outsl
xchg
and
mov
shlb
sahf
adc
cltd
test
mov
xor
pop
add
popa
cld
test
mov
daa
test
shrl
jnp
leave
dec
xchg
dec
sbb
push
push
sti
xchg
mov
inc
shl
push
es
lods
nop
cmp
and
mov
es
repz
mov
out
ret
jno
movsb
outsb
cmp
mov
stos
pop
bswap
mov
repnz
insb
xchg
bound
ret
cmp
rorl
pop
movsl
lods
xchg
cmpsb
xchg
mov
mov
lds
jg
and
sub
or
or
fnstcw
scas
push
dec
dec
aad
aad
mov
mov
incl
lds
push
mov
fdivrp
pusha
inc
enter
or
aas
pop
andl
sahf
cmc
mov
inc
movsl
inc
repz
mov
add
andb
cmp
mov
out
andl
cmp
cmpsb
sub
xchg
jecxz
in
jg
loopne
cmp
jbe
imul
mov
not
mov
xor
or
jo
mov
mov
and
ss
cli
scas
test
fisttpl
lods
out
adc
ret
jecxz
je
mov
xchg
lea
sbb
mov
ds
push
add
movsb
mov
adcb
jb
js
aaa
mov
sbb
mov
dec
jo
lcall
pop
cmp
scas
jno
scas
cmp
into
mov
fisubrl
mov
push
aaa
dec
pop
lods
adc
mov
lds
push
neg
iret
rclb
sbb
inc
mov
mov
sarl
pop
mov
sub
mov
push
push
and
les
lds
fld
mov
inc
in
push
je
xchg
popf
dec
sti
cld
adc
add
shrb
sbb
fisubl
jle
ret
imul
and
mov
inc
inc
movsb
movsb
mov
rorl
adc
data16
xchg
push
xchg
xchg
or
fidivl
or
sti
in
lea
fistl
adc
xchg
pop
pusha
imul
pop
sbb
xchg
dec
and
in
mov
jno
imulb
pop
jmp
stos
fisttpl
aas
cmp
jp
loop
adc
rolb
das
pop
shld
movsb
shrb
or
and
xchg
pop
xor
cmpsl
mov
jne
rcrb
imul
jmp
jp
hlt
inc
aad
pop
fdiv
fistps
ds
fs
push
cmc
mov
movsb
rorl
push
negb
or
or
in
xor
cs
dec
xchg
lahf
jg
testl
rorb
outsl
mov
push
and
scas
or
dec
jae
push
pop
jnp
xchg
iret
or
les
cwtl
dec
pop
int3
sti
sub
leave
push
mov
adc
stc
ss
ja
shll
cwtl
ds
mov
ljmp
sahf
cwtl
sub
lea
fwait
int3
xor
fsubr
mov
pop
and
fdivrs
lock
pop
cmpl
daa
gs
fstpl
jle
mov
push
aad
fstpl
mov
cmp
cmp
in
push
add
cltd
and
inc
mov
adc
addr16
pop
js
sub
sbb
jno
ret
shrl
mov
jae
dec
or
mov
fxch
or
inc
mov
repnz
mov
lods
mov
pop
fistpl
mov
imul
loopne
xchg
jne
leave
leave
cmpb
out
adc
dec
push
lods
cmp
cmp
in
cmpsb
ficoms
fadds
push
repz
mov
cmp
shl
je,pt
insb
push
mov
in
sbb
dec
and
fsubs
mov
lcall
icebp
pushf
or
dec
sbb
jge
pop
pop
push
in
jmp
imul
cmp
test
cltd
or
mov
cmpb
mov
and
in
and
xchg
test
mov
ljmp
sti
out
fwait
dec
mov
pushf
nop
cmpsb
mov
out
mov
enter
dec
jnp
push
lea
sbb
loopne
repnz
mov
jae
xor
fwait
loop
sub
adc
ss
mov
lods
mov
sti
or
pop
gs
xchg
sbb
pop
idivl
mov
cmp
xchg
loopne
ss
fsubp
xchg
pop
cmpsl
mov
and
inc
out
lcall
rcll
or
sti
cld
and
cmpsb
mov
xor
fldt
mov
fs
push
push
mov
add
jne
xor
shl
aaa
in
mov
lcall
and
out
pop
pop
push
jo
ljmp
add
dec
sbb
aas
movsb
jne
mov
jecxz
sub
cmp
inc
insl
icebp
dec
adc
cmpsb
movsl
jne
stos
arpl
ja
push
mov
dec
lea
mov
in
pop
xor
push
in
cmp
xlat
lret
mov
xchg
sub
adc
mov
inc
aas
xchg
jnp
sarl
std
cs
rcr
int3
add
or
mov
pop
lahf
fsubs
dec
bound
sub
clc
mov
mov
adc
lock
xchg
jae
enter
in
inc
pop
stc
js
call
faddl
in
dec
add
orl
js
fs
js
mov
inc
shlb
out
mov
mov
pop
fdivrs
jle
imul
out
jae
loop
loope
rcrl
leave
loopne
int3
sub
call
inc
push
cmp
mov
test
ljmp
clc
cwtl
add
fisubl
jp
dec
cmp
gs
pop
loope
lods
rcrl
jnp
cld
test
fistpl
and
popa
enter
pop
insb
adc
stos
movsl
shrl
add
mov
out
push
imul
pop
push
insb
mov
nop
add
sbb
jbe
jno
fwait
adc
aad
xor
sbb
cli
cmpsl
popl
lahf
sbb
arpl
cmp
fadds
add
insl
nop
repz
hlt
xchg
mov
cld
mov
push
add
and
fisttpll
andl
sub
daa
loop
int3
xchg
scas
js
or
xor
push
aam
ret
jp
mov
or
and
or
cmp
inc
xor
mov
pop
inc
in
mov
int
jmp
sub
decb
mov
loop
mov
pop
fstps
inc
inc
cmpb
add
mov
xchg
xor
subl
lret
shlb
and
cmpsl
add
sahf
dec
push
enter
aaa
daa
pushf
test
popf
ss
push
shlb
push
and
xor
je
ret
dec
sbb
pop
xor
jne
rorb
or
scas
mov
cmpsl
out
ffree
test
insb
daa
popa
jle
ljmp
inc
mov
xchg
mov
or
lea
mov
xchg
cmpsb
mov
xor
imul
push
pop
push
push
ficomps
cmp
jmp
sub
aad
sbb
mov
dec
adc
cmpsb
aaa
rcll
cmpsb
aas
push
dec
inc
dec
dec
jb
icebp
into
and
or
mov
cli
or
pop
frstor
pusha
pop
in
das
jp
imulb
js
loop
aas
jo
idivb
cmpsb
cmp
jp
loopne
out
movsb
loopne
in
sarb
mov
adc
popa
mov
adc
orb
pop
jge
test
icebp
xchg
cmpsb
inc
repz
aad
push
cmp
stos
movsb
clc
sub
adc
add
addl
aaa
push
pushf
jno
or
push
push
or
push
jae
cwtl
sbb
ret
scas
cs
push
push
jbe
xor
pop
xor
in
insl
add
jecxz
mov
insl
sbb
fwait
mov
mov
xchg
inc
rolb
cs
into
xchg
jns
fiadds
cmp
dec
pop
mov
jge
lahf
jmp
pop
push
jo
aam
dec
negl
jnp
hlt
sub
and
mov
loopne
test
int
mov
adc
xchg
inc
nop
mov
js
mov
jge
sahf
mov
arpl
adc
psrad
mov
das
out
jne
in
add
mov
aam
test
jb
mov
jnp
push
int3
shr
inc
dec
stos
in
sbb
movsl
fbstp
sub
addl
test
rcll
adcb
loope
jl
outsl
xchg
jle
and
add
fisubrs
ret
mov
jl
aaa
xchg
xchg
and
jae
push
pop
mov
pop
sub
addr16
call
push
cmp
mov
mov
or
fs
test
rorb
js
gs
addr16
nop
push
inc
frstor
iret
cmpsl
and
jbe
and
sbb
sub
mov
js
mov
pushf
enter
mov
cmp
adc
lea
daa
xchg
inc
push
in
mov
ret
jnp
inc
hlt
add
scas
push
shll
sbb
arpl
and
ljmp
mov
mov
adc
mov
fwait
mov
aad
es
mov
or
cmp
outsb
aad
mov
out
add
or
pop
inc
hlt
pop
fisubrs
xlat
gs
dec
pop
movsl
insl
ss
jge
lock
xchg
stc
jecxz
add
xchg
aaa
roll
or
push
mov
add
jecxz
movsb
mov
daa
mov
cmp
data16
popf
mov
xchg
inc
je
inc
loop
cld
pop
mov
dec
xchg
in
call
faddl
jecxz
jle
fisttpll
pop
cld
outsb
dec
and
xor
mov
pop
inc
xchg
lcall
sbb
mov
testl
xchg
mov
jb
push
xchg
add
stos
inc
ljmp
cmp
cmpsb
fbstp
sub
ret
mov
leave
aaa
inc
shrl
dec
cmp
icebp
dec
mov
daa
int
dec
je
pop
inc
fiadds
sub
adc
mov
ret
stc
sbb
pop
lock
mov
mov
xchg
adc
clc
xchg
ret
outsb
mov
test
lea
xor
add
mov
aam
pop
out
sbb
lock
mov
mov
fists
roll
sti
imul
and
mov
in
xor
insb
pop
scas
mov
and
mov
adc
mov
ja
fstpl
jl
cmp
stc
pop
popa
into
xor
mulb
ds
js
cmpsl
lret
pop
mov
ret
adc
adc
xor
sbb
sub
shll
sub
in
sbb
neg
mov
pop
add
mov
and
jbe
jecxz
xor
mov
sbb
push
test
dec
mov
xchg
nop
imul
sub
jbe
sar
xor
jmp
mov
outsl
pop
push
adcl
ret
mov
fsubs
aad
dec
sbb
sub
shll
fmulp
in
sbb
loopne
test
shll
in
mov
mov
das
push
adc
rolb
aam
xchg
in
mov
push
aad
fs
sbb
out
js
inc
push
pusha
push
mov
sti
insl
in
fisubl
stos
das
xchg
out
pop
sbbl
jp
pushf
out
pop
bound
sub
mulb
cs
or
rcr
or
insb
dec
mov
popa
push
cmp
jge
jge
or
sbb
sub
mov
dec
or
cmc
std
testl
inc
leave
lcall
imul
xor
mov
or
lds
stos
lret
inc
sbb
cmp
push
cmp
in
out
inc
inc
imul
add
shrb
jp
mov
aas
add
es
outsl
call
int3
repnz
push
mov
dec
loop
jo
push
shrb
lahf
sub
sub
ss
out
out
aaa
xchg
jge
jl,pn
cmpsb
inc
cltd
xchg
sbb
jmp
xor
fistl
lods
repnz
or
and
repz
ss
out
js
ret
inc
clc
dec
inc
mov
enter
adc
imul
popf
cmp
or
sarl
das
call
add
push
inc
sub
adc
subl
xor
js
test
movsl
out
jge
pop
leave
push
xor
push
xlat
add
fs
pop
inc
rcrl
les
roll
push
jmp
mov
sti
dec
out
mov
adc
and
nop
shll
jp
mov
aad
dec
scas
mov
lds
and
or
ljmp
jecxz
xlat
sbbb
push
and
fisttps
dec
outsb
lock
xchg
mov
adc
inc
addr16
dec
les
sub
int3
and
aad
push
jae
les
outsl
scas
xorl
bound
cld
out
and
fbstp
cmp
xlat
repnz
push
jns
gs
dec
push
and
xchg
clc
fsubrs
and
xchg
call
jnp
inc
inc
add
push
sub
in
jmp
test
mov
xchg
add
xor
jle
mov
div
lret
daa
inc
out
orl
mov
xorb
out
les
xchg
sub
das
jns
in
fistps
addr16
lods
jl
fisttpll
out
sbb
add
xlat
xor
mul
and
adc
sarl
pop
jae
enter
mov
std
sbb
sbb
jo
xchg
or
cmp
mov
mov
cli
mov
push
xchg
lods
je
adc
mov
imul
xchg
stc
orl
nop
sub
lret
inc
adc
js
mov
xor
or
push
jmp
bound
push
insl
call
or
inc
xlat
mov
mov
fwait
cltd
mov
push
dec
aaa
out
insl
inc
dec
outsb
adc
lds
mov
xor
pop
outsb
or
sub
test
lret
ret
jnp
pop
or
xor
addr16
push
jno
lods
xchg
mov
enter
xor
jge
popf
test
data16
fstl
ljmp
push
mov
in
rcrl
and
shll
push
inc
jge
jnp
jns
into
pop
ds
into
shlb
jns
and
cmp
scas
mov
mov
inc
lods
mul
sub
scas
int3
mov
icebp
inc
aaa
je
or
loopne
stc
xorb
popa
dec
insb
cmp
fsin
daa
sub
insl
mov
je
loope
xor
cmpsl
jns
fmul
out
push
sub
add
jp
mov
and
mov
or
and
fcomp
sub
icebp
sub
sub
pop
sbb
inc
ffree
lahf
sub
xor
fists
aad
add
cmp
mov
and
xchg
pop
aad
loope
ret
sti
and
mov
dec
outsl
pop
fidivs
mov
rorb
fcompl
daa
xchg
ret
mov
jnp
jb
lods
xchg
aad
in
les
xchg
or
mov
cmpl
add
fwait
mov
dec
adc
add
lds
xorb
pop
pop
shlb
mov
lret
push
shrl
xor
andb
adc
ret
inc
pop
mov
xchg
pop
mov
xchg
mov
je
xor
sub
sbb
ds
sbb
mov
dec
pop
sbb
pusha
lods
push
inc
sub
sti
adc
inc
or
mov
jbe
scas
dec
sahf
loopne
ret
mov
or
mov
ret
push
loop
bound
and
or
cmp
xchg
push
xor
lea
xchg
adc
cmpsl
pusha
mov
cs
jg
add
es
movsl
inc
mov
push
cwtl
int3
dec
popf
sahf
adc
xorb
cmp
outsb
mov
mov
jl
loop
xor
push
insb
divl
popf
lods
add
divb
push
loope
ret
ss
jns
lcall
jle
mov
dec
mov
daa
jnp
jo
pop
cmp
mov
push
inc
jmp
movsb
dec
sahf
loope
mov
daa
push
loope
dec
dec
and
loope
je
jae
stos
xor
push
pushf
pop
call
nop
in
shlb
orl
or
fwait
lcall
jbe
pop
stc
inc
mov
inc
cwtl
lock
cwtl
shrl
xor
daa
jb
xchg
adc
xor
pop
adc
or
arpl
cmpsb
lods
fst
or
and
jns
shll
mov
loopne
cltd
shl
js
sub
and
xchg
xlat
mov
pop
inc
aaa
hlt
int3
fdiv
push
leave
push
ret
pop
mov
mov
cltd
jmp
fs
aaa
es
sub
add
popa
jbe
or
aas
rol
shll
push
jp
mov
mov
movsl
mov
gs
das
fcoml
jae
nop
adc
arpl
aas
lock
fs
mov
decb
out
add
jl
in
shlb
inc
mov
mov
pop
xchg
pop
cld
ja
lock
rorl
inc
mov
test
jbe
lea
js
push
aam
or
mov
xchg
mov
jno
or
xor
mov
xor
dec
pop
sub
mov
mov
in
cmp
pusha
cmpsb
jl
ret
cltd
add
sub
cmc
jp
test
mov
sub
mov
sub
sbb
sbb
test
arpl
in
sub
es
cltd
aam
outsl
lret
aas
ret
inc
in
inc
outsl
and
pushf
sbb
repnz
xchg
adc
bound
add
and
aad
test
sarl
jbe
mov
xlat
test
test
shr
int
shrl
adc
cmpsb
insb
sbb
lods
cli
or
xchg
add
sahf
mov
popf
add
stos
lods
and
scas
mov
push
sbb
ss
sbb
dec
push
inc
fisubl
lret
rorl
scas
xor
lahf
adc
mov
sti
lods
fsubrs
mov
scas
inc
outsb
int
fmuls
arpl
mov
repz
std
repnz
xlat
mov
cmp
lods
hlt
cmp
cs
mov
movsl
jg
mov
aad
sub
scas
sahf
ljmp
adc
ds
mov
lret
push
inc
sbb
roll
mov
xchg
jns
faddp
sbb
rorb
mov
test
inc
or
mov
call
sub
and
sahf
lret
call
pop
or
push
mov
call
adc
mov
daa
and
mov
cmpsb
popf
subl
addr16
rcrb
aaa
adc
xor
pop
fs
sbb
sbb
mov
inc
mov
outsl
sarl
and
loop
sbb
dec
lret
lea
xchg
rorb
adc
movsl
push
ret
clc
mov
push
popw
jp
pop
xchg
push
shrb
lcall
cmpsl
aaa
cmp
jns
push
adc
ljmp
je
and
pushf
aad
sbb
jno
divb
ret
lods
mov
lods
jmp
mov
jp
mov
cmp
sbbb
stos
xor
inc
repnz
imul
testb
clc
pop
lahf
stos
push
mov
popa
push
pop
dec
loope
es
out
or
ja
add
lods
enter
jmp
cwtl
jb
jmp
push
push
mov
fisubs
ds
call
popa
lcall
xchg
int3
cmc
pop
jge
inc
add
or
jbe
and
sahf
icebp
sbb
inc
sbb
pop
xor
jp
inc
lcall
xchg
or
cmpsb
sbb
xor
shrl
push
mov
sub
clc
sahf
sbb
push
mov
imulb
sbb
xchg
iret
sub
in
xor
enter
pop
aaa
add
cmp
rorb
sub
jne
outsb
pop
lret
inc
loope
enter
ret
iret
mov
lret
stos
pop
inc
and
out
lcall
in
clc
cld
pop
push
cld
test
adc
repnz
jge
pusha
push
shlb
pop
mov
test
adc
popw
sbb
jbe
xchg
clc
call
or
aam
xor
pop
jns
xchg
pop
movsb
sbb
shlb
int3
push
das
or
outsl
cmpsl
gs
hlt
insb
inc
shll
call
cmp
inc
ljmp
imul
fwait
stc
call
xlat
adc
orl
std
push
push
mov
push
jmp
lea
dec
mov
ja
mov
scas
out
shlb
mov
pop
mov
popa
xchg
push
ja
fwait
sub
cltd
mov
dec
xchg
scas
pop
rol
mov
jbe
mov
lods
xor
mov
roll
mov
xchg
cwtl
lcall
push
enter
dec
fs
lret
fs
mov
dec
cmpsb
fld1
or
jno
sbb
mov
lock
fidivl
ss
mov
dec
xchg
xor
cmp
je
dec
or
je
je
jl
or
cwtl
mov
push
fsubp
ret
test
in
push
or
adc
add
jnp
xchg
or
or
in
aad
adc
adc
fs
and
and
fwait
cmp
mov
add
test
jnp
movsl
addr16
into
int3
aad
cmp
inc
out
lea
sbbl
lods
rolb
cmc
mov
stos
mov
ja
and
inc
sbb
nop
push
add
cmp
add
cltd
dec
inc
jo
pusha
pop
dec
mov
rcll
fmuls
inc
cmp
sub
outsb
sbb
lods
xor
ret
outsb
push
push
jb
stc
pop
mov
movsb
inc
jne
insl
test
fcmovb
sti
je
and
out
int3
mov
shr
and
push
fidivl
rorb
xor
icebp
ljmp
sti
test
arpl
mov
sbb
jle
icebp
mov
out
dec
xchg
cmp
rcrl
jle
xlat
in
iret
xchg
jo
push
and
int3
cli
sti
je
inc
fxch
scas
xchg
mov
inc
aas
loopne
inc
add
shlb
jbe
call
loope
push
lret
and
icebp
lret
in
fcmovnbe
outsb
inc
leave
sbb
je
push
dec
push
loope
jae
mov
loopne
or
pop
adc
ljmp
pop
cmp
loop
add
cmp
js
sbb
mov
mov
sahf
aaa
dec
xchg
pop
xor
add
jns
lods
inc
add
iret
add
test
addr16
and
test
xchg
push
inc
push
push
add
push
addr16
insl
icebp
or
pop
popf
mov
xchg
hlt
rol
adc
pop
jmp
jl
loop
dec
add
mov
lcall
cmpsl
cmp
mov
mov
push
lock
cmp
pop
xor
xor
f2xm1
or
pop
inc
adc
jecxz
out
sub
jl
xchg
cltd
mov
ljmp
stos
jns
cmpsl
fwait
icebp
cltd
cmp
mov
sbb
sub
enter
dec
aad
push
loopne
ss
mov
push
push
jb
pushf
adc
test
fisttps
jmp
pop
repnz
mov
int
repnz
ds
arpl
mov
mov
ret
ret
mov
aam
mov
sti
sub
icebp
addb
pop
stos
mov
repz
or
movsb
out
push
push
cmc
push
jbe
dec
adc
test
push
out
mov
push
or
loope
imul
or
sub
mov
negb
nop
iret
push
inc
cwtl
sbb
or
jne
test
imul
mov
imul
and
dec
mov
idivl
stos
pusha
jecxz
pop
sti
lods
cs
push
popf
push
jne
sub
aaa
mov
mov
jmp
lods
in
andl
mov
pop
sub
nop
aam
sarl
ror
mov
sbb
loope
mov
call
lock
hlt
out
test
ja
iret
cmp
lods
lods
jns
shrl
and
mov
ret
adc
sub
lcall
push
pop
push
rorl
mov
pop
in
and
inc
or
push
hlt
repnz
jecxz
fs
mov
cltd
xchg
lret
mov
adc
in
pop
loopne
pop
mov
test
jbe
pop
mov
push
dec
das
inc
push
gs
jmp
in
jmp
js
push
mov
or
insl
or
or
fcompl
iretw
ret
loopne
les
jb
in
add
sub
outsl
push
xchg
sub
xchg
pusha
movsb
or
outsb
ror
mov
mov
rcrb
enter
inc
faddl
loop
sub
sub
mov
or
adc
icebp
hlt
mov
dec
fdivl
mov
and
push
mov
fstp
push
cli
fisubs
jle
jae
mov
or
mov
xchg
mov
dec
jno
sub
in
lahf
mov
rorb
popf
push
movsl
lods
cld
xchg
mov
dec
in
push
sbb
hlt
fsubl
nop
mov
and
push
or
out
mov
mov
push
lcall
pop
xchg
mov
and
or
jmp
ret
fisttpll
push
pop
dec
test
int3
rcrl
insl
cmpsl
into
sbb
mov
xchg
cmp
sub
in
fisttpll
or
mov
inc
mov
jns
sahf
push
test
shrl
data16
out
jg
aad
jnp
or
mov
sub
cmp
dec
mov
mov
lods
xchg
cmc
adc
xchg
std
cwtl
test
pop
adc
shlb
cmp
lods
repz
aad
add
test
ja
in
cld
shll
xchg
stc
and
push
aad
or
xor
jmp
iret
and
pop
or
mov
movsb
mov
and
lea
jecxz
mov
mov
push
inc
mov
pop
jp
and
ficoml
notb
sbb
mov
mov
daa
adc
outsb
and
mov
jae
test
insb
inc
lock
repnz
xlat
mov
xchg
ljmp
mov
jl
mov
lds
lcall
add
jb
mov
fiaddl
jmp
sub
pop
xchg
and
gs
pop
popf
fisubs
aaa
sub
lea
enter
jnp
mov
fs
jno
daa
mov
adc
xor
hlt
mov
and
pop
arpl
xchg
push
dec
pop
rol
adc
jg
repnz
sub
inc
dec
dec
xchg
inc
adc
inc
mov
sbb
into
mov
cmp
movsb
xchg
vpcmpeqd
mov
mov
xchg
inc
daa
fnstsw
adc
in
lret
addr16
xchg
lret
sbb
enter
imul
mov
rcr
sub
shrb
add
pop
dec
loop
movb
inc
add
mov
mov
xchg
sbb
push
or
dec
mov
mov
jnp
xchg
scas
ret
sub
lods
cmovp
sbb
or
jmp
pushf
xchg
decb
mov
push
cltd
mov
call
mull
xchg
xchg
leave
shlb
inc
adc
sub
mov
icebp
cmpsb
das
jo
jmp
push
inc
inc
mov
jne
xchg
xor
inc
xchg
adc
pop
jecxz
aaa
or
cmp
rclb
cmp
popf
jns
pop
add
mov
pop
out
lock
xor
add
repz
out
cltd
add
pop
jle
mov
cmpsl
les
pusha
dec
pushf
pop
sbb
or
aas
test
enter
push
insl
shl
add
aam
fwait
fs
scas
ljmp
das
push
xor
gs
push
sub
mov
out
andb
pop
jl
shrb
pop
imul
cmc
je
mov
xchg
and
addl
sbb
testl
scas
pop
xchg
shrl
push
or
jge
fisttps
push
pop
cltd
out
les
push
adc
fcomps
xchg
inc
mov
jecxz
movsl
or
loope
les
mov
add
sub
sbb
test
nop
lods
mov
sti
sbb
xchg
inc
push
inc
in
jb
sub
out
mov
add
push
sub
lcall
sbb
fsts
inc
jb
mov
pop
ror
inc
shrl
out
mov
sbb
mov
cmpsb
out
push
ss
push
call
mov
std
imul
xchg
cmp
in
pusha
loopne
push
xchg
fidivs
fidivs
lahf
sbb
dec
repz
retw
or
insb
aam
cs
xor
sub
addr16
jmp
dec
xchg
inc
stos
and
loopne
push
pop
sbb
in
push
jbe
movsb
xchg
aaa
push
pop
sbb
in
add
dec
fldenv
aaa
fs
inc
add
sbb
jp
jl
jne
mov
dec
mov
adc
sbb
shlb
in
mov
lahf
xchg
adc
movsl
popa
sub
out
repz
inc
jle
cmp
or
out
sti
gs
sbb
movsl
sbbl
add
cli
sti
lahf
xchg
and
inc
jl
ja
xchg
das
sbb
jle
sub
sub
insl
mov
adcl
jmp
dec
mov
test
push
cmc
cmpsb
xchg
mov
sub
mov
es
je
xchg
repnz
mov
movsb
jge
int3
hlt
fcmove
mov
dec
mov
les
push
les
gs
dec
xchg
pushf
lods
pop
sub
and
sub
pop
es
or
ja
cltd
lods
pushf
sub
fisubrl
sbb
inc
cwtl
fwait
call
pop
inc
xor
mov
push
in
push
and
xor
push
inc
rcrb
nop
push
and
mov
in
aam
cmp
lods
and
xor
pop
shll
mov
movsl
sbb
xchg
loope
aam
add
call
jecxz
aas
dec
mov
and
inc
cwtl
pop
sar
or
mov
push
mov
call
ret
or
xor
test
dec
dec
adc
icebp
adc
push
ficompl
pop
cmpsl
leave
pop
pop
cs
dec
out
inc
jecxz
mov
add
mov
push
je
sub
mov
add
mov
xlat
sub
loope
cmc
lahf
sahf
mov
mov
shrb
pop
ljmp
jecxz
ret
fidivrl
in
ljmp
add
cmp
sub
pop
mov
das
inc
and
sbb
fisubrl
inc
fld
and
nop
jnp
int3
mov
sbb
add
sub
xor
cmp
and
dec
rolb
jbe
cmc
pop
dec
fwait
outsb
stc
pop
dec
stc
push
aas
loop
xchg
jae
into
shrl
in
mov
lahf
adc
nop
das
add
insb
mov
add
popf
push
fistl
inc
movsb
or
icebp
sbbb
xchg
add
xor
inc
in
testb
adc
and
fsubs
imul
inc
mov
push
in
pop
scas
xlat
and
out
mov
insl
sbb
push
mov
lea
pop
push
test
cmp
lahf
and
jg
ret
mov
xchg
pop
pusha
push
iret
scas
std
fcomp
xor
push
jnp
dec
sarb
and
dec
push
push
popf
sub
pop
stos
mov
mov
fwait
mov
push
sub
xor
pop
lods
xor
push
mov
push
dec
and
sub
dec
pop
fadds
xchg
mov
xchg
mov
inc
xor
mov
lds
rcrl
scas
cli
jbe
popa
xchg
enter
mov
push
test
stos
int
sarl
adc
insl
cmp
mov
stos
push
mov
rcr
jge
cld
jecxz
fcmovu
add
mov
xchg
pusha
mov
call
push
aaa
dec
sbb
dec
aaa
pop
fisttpll
cmp
or
imul
stos
mov
or
cli
dec
sti
test
les
inc
imul
ret
in
xor
call
dec
xor
and
sbb
aas
test
push
and
mov
add
shl
push
lea
das
popf
shr
bound
lods
rcrl
jge
in
inc
rcrl
sub
and
ffree
xchg
fldt
decl
cs
hlt
pusha
xor
mov
dec
sahf
fucom
jge
cmp
je
out
adc
mov
fiaddl
outsl
inc
out
iret
mov
push
insl
mov
cmp
push
mov
xor
scas
lock
insb
iret
inc
pusha
push
mov
cmp
sub
and
sub
aaa
mov
adc
jns
mov
out
or
cmc
fcmovnu
int3
in
mov
xor
xchg
mov
adc
xor
adc
shll
or
xchg
lods
popf
sbb
rep
cmp
movsl
std
int3
xor
daa
mov
movsl
int
addr16
ret
incl
pop
push
or
iret
lret
aam
jge
movl
mov
or
xor
xor
call
data16
shlb
push
mov
pop
xchg
xor
lret
inc
les
add
test
lods
mov
ljmp
movsb
push
jp
jo
mov
fisubrl
and
sub
push
sub
mov
xor
lock
cmp
pop
mov
pop
and
mov
cmp
mov
push
decl
pushf
cld
or
mov
dec
ljmp
je
xor
lret
cmp
lea
fxch
jl
jae
movsl
mov
push
dec
mov
subl
sbb
in
mov
jmp
aad
jge
in
push
push
and
loop
popf
xor
es
es
lret
xor
push
shrd
mov
jo
es
adc
sub
cmpsl
inc
mov
push
mov
jbe
sub
or
inc
sub
insb
xor
mov
cmp
push
jl
and
and
xor
insb
or
aaa
sbb
lea
rcl
out
push
mov
mov
mov
dec
insl
mov
out
mov
mov
jns
jb
add
and
cmp
loop
dec
cli
jbe
push
mov
dec
add
lock
xchg
addr16
push
or
out
inc
mov
iret
enter
push
pushf
cmp
out
loope
cltd
cmp
inc
lock
fldl
cltd
push
mov
data16
daa
cmp
mov
jp
nop
xchg
out
push
scas
sub
and
or
rolb
jns,pt
pop
xorb
arpl
faddl
xchg
lcall
dec
sub
sbb
movsb
adc
fistl
sahf
pop
push
fnstenv
sbb
aad
push
sub
clc
ds
aam
mov
ss
xchg
mov
dec
call
or
les
jl
cli
or
xorl
insl
cmp
push
test
push
sub
mov
xchg
test
repz
pop
inc
nop
jge
popa
mov
das
iret
xor
icebp
out
mov
sti
loope
loopne
test
or
push
fcmovne
mov
or
jg
or
jmp
sub
pop
mov
pushw
jbe
pop
push
leave
push
out
add
shl
xchg
ret
les
aaa
or
push
orb
cmp
in
mov
nop
xchg
dec
aad
push
add
in
enter
or
fwait
push
sbb
push
dec
out
les
mov
push
inc
int3
out
mov
pop
sub
mov
dec
xlat
int3
pop
std
bound
rcr
cmc
sahf
gs
mov
imul
adc
clc
cltd
sbb
sub
xor
mov
pusha
insb
add
cltd
cmpsb
mov
insl
push
cmp
push
inc
sbb
mov
or
mov
jle
leave
pop
mov
xchg
and
mov
mov
fidivrs
test
sahf
rolb
rorl
pop
cmpb
and
jle
test
ret
aam
and
cmpsl
loopne
adc
imul
mov
dec
das
shll
in
mov
out
xlat
test
test
test
jno
clc
lods
dec
adc
and
test
sbb
sbb
push
stc
clc
call
mov
loop
scas
test
jb
push
or
push
fdivs
dec
leave
or
sti
jle
mov
mov
sahf
pop
sbb
lret
cmpsb
test
cmp
lret
mov
stos
inc
adc
add
adc
enter
fs
or
mov
jp
or
xor
ljmp
or
out
je
dec
mov
call
or
pop
mov
adc
push
jg
lea
add
sub
int3
js
cli
das
jns
add
cltd
pop
push
jo
insb
pop
or
sbb
adc
mov
ja
cld
pushf
push
enter
mov
jmp
xor
push
adc
sahf
add
mov
mov
iret
xchg
shlb
pusha
xchg
inc
stc
sub
mov
mov
popa
inc
pusha
iret
push
or
int3
in
xchg
cmp
sbb
sbb
inc
into
xor
cwtl
mov
jno
lods
jbe
out
cmp
cmpsl
push
fildl
push
repnz
out
aas
dec
mov
jg
in
in
cmp
in
data16
lods
mov
jbe
scas
xchg
lahf
hlt
inc
int
hlt
xor
push
cmp
adc
sub
mov
push
inc
pusha
fists
pop
test
clc
mov
mov
mov
jecxz
inc
jl,pn
fmuls
shll
dec
cli
ja
pushf
mov
mov
out
sbb
gs
push
dec
gs
xlat
int
sarl
clc
sbbl
dec
cmp
addr16
inc
jne
sub
pop
imul
xor
loope
fmulp
or
repnz
and
aas
xchg
cmpsb
push
mov
pop
movsb
lret
movsl
pop
adc
scas
out
mov
rcrb
mov
xchg
or
mov
roll
insb
stos
xchg
push
flds
lods
repnz
cmpsl
je
int
ds
pop
int3
orb
idivb
mov
add
out
aam
xchg
jo
xchg
pushf
hlt
mov
push
push
scas
mov
out
xlat
daa
add
aas
inc
jae
test
stc
roll
cs
push
js
xlat
mov
inc
mov
mov
in
jecxz
insl
popf
sub
iret
mull
pusha
adc
xchg
out
ret
xchg
mov
add
mov
fsubrs
inc
int3
aad
popf
leave
lret
jmp
ds
mov
mov
adc
jle
or
int
stos
popf
fidivrs
ljmp
and
mov
sub
or
push
mov
divb
and
popf
das
lds
and
mov
cmp
loop
in
hlt
pop
fidivs
sub
pop
sub
push
jns
fsubr
cmpsb
lcall
cmp
push
xlat
xchg
adc
jle
fidivl
jge
mulb
int
into
fistps
loop
sub
add
mov
mov
cmc
cmpsb
jbe
shrb
mov
dec
dec
outsb
xchg
out
cli
insl
lock
lods
mul
stos
in
push
cwtl
sbb
das
xchg
and
mov
adc
inc
mov
xchg
aas
and
mov
stos
mov
and
adc
mov
sar
jmp
cmpsb
fldcw
cwtl
ja
push
dec
xchg
psubusb
xor
test
push
mov
movsl
repz
jg
scas
xchg
sub
clc
enter
imul
push
stc
inc
test
aaa
pushf
outsl
pop
mov
pop
adc
std
xchg
daa
sub
push
rcll
push
push
push
out
shrl
sub
jbe
mov
mov
ja
popa
aad
lods
inc
adc
hlt
cmpsl
loopne
lock
inc
out
int3
xchg
rolb
push
mov
ror
sbb
mov
jno
mov
sbb
sbb
pop
repnz
xlat
fwait
cli
outsl
shr
fildl
leave
dec
cmpb
xchg
or
pop
adc
out
sahf
mov
lock
cmp
je
out
dec
cmp
ss
xchg
clc
hlt
mov
push
mov
jns
mov
fs
push
pop
push
rolb
xchg
push
add
mov
ss
add
xchg
cli
and
stos
pop
push
in
or
xchg
or
test
sub
push
mov
dec
pop
jmp
nop
or
cmpsb
mov
cmpsl
arpl
adc
sub
outsl
sti
sub
fisttpll
mov
mov
mov
test
dec
sahf
dec
mov
std
mov
xchg
add
popa
add
mov
repz
cmp
add
lret
sbb
push
pop
into
lods
fdivr
aas
cmc
pop
push
lods
push
fwait
nop
popf
sbb
je
shlb
sub
nop
add
out
je
es
int
jle
movsb
or
cli
bnd
mov
cmpsb
pushf
jp
dec
jl
lock
test
pop
stc
lcall
sub
pop
lods
cmpsb
inc
insl
aad
jnp
sbb
addr16
or
arpl
add
xor
cmp
cmp
shlb
test
cmp
sbb
pop
mov
push
fisubrs
lds
xchg
cmc
pop
dec
xchg
fidivrl
jecxz
divl
aas
rcrl
lea
push
mov
push
cmp
mov
lret
mov
in
cmp
xor
gs
adc
inc
sti
imul
pop
sbb
jne
int
push
xchg
sbb
and
subb
movsb
cmp
arpl
outsb
xor
push
call
shr
orb
xchg
push
les
mov
idivl
mov
arpl
sbb
add
inc
pop
push
gs
test
and
jbe
xchg
add
pusha
dec
movsb
xlat
pushw
inc
sub
ds
adc
xchg
fcmovnbe
cwtl
shll
movsb
mov
or
fwait
rcll
push
into
ret
mov
add
ret
dec
pushf
movsl
rolb
iret
nop
push
jmp
movups
xchg
xor
xlat
mov
push
xchg
push
mov
xor
xlat
inc
jnp
cltd
mov
push
hlt
inc
in
bound
cmc
jl
bound
push
pop
and
adc
clc
sbb
add
jo
cmp
sbb
ficoms
fwait
mov
mov
cli
and
pop
jecxz
mov
gs
push
sbb
sti
out
in
faddp
aad
loope
push
jle
sbb
ljmp
stos
and
add
rcrb
js
js
imul
unpckhps
test
out
cmpsb
mov
mov
jmp
push
lds
pop
fstps
and
adc
dec
sub
nop
out
fiadds
mov
xchg
repnz
sbb
push
push
rcrb
imul
int3
mov
outsl
sub
xchg
mov
adc
fimuls
repz
cmp
push
jmp
add
outsl
popa
ds
notb
out
sub
sti
es
jl
sub
dec
lret
mov
pusha
or
pop
test
insl
add
cmp
insl
adc
push
in
xor
sub
inc
mov
pop
stc
aaa
xor
pushf
mov
push
cli
mov
push
lds
enter
test
mov
mov
push
sbb
pushf
in
mov
sbb
fsubs
popa
dec
test
cmp
fwait
mov
test
mov
dec
movsb
adc
call
inc
lods
insb
mov
mov
stos
ja
adc
in
xchg
jne
outsb
mov
jbe
mov
and
jle
sub
call
out
repnz
int
and
mov
adc
or
push
sar
add
loopne
or
out
jb
js
or
adc
xlat
dec
es
mov
xchg
je
out
aam
add
std
cwtl
pop
pop
cs
movsl
dec
jecxz
int3
ss
adcb
mov
fists
sbb
dec
push
mov
jbe
test
jo
push
notl
jns
adc
lret
movsl
jmp
inc
loope
pop
jno
cmc
and
lret
mov
addr16
mov
pop
cmp
push
mov
sbb
jge
loop
sar
ljmp
and
ds
outsl
fs
jno
jmp
testl
add
xlat
test
lea
in
rcrl
xlat
cmp
or
rcrl
add
pop
clc
loopne
jle
xchg
pop
jae
push
je
lahf
gs
inc
enter
adc
mov
aam
push
mov
mov
inc
sbb
and
push
push
addr16
xchg
xor
jmp
inc
mov
sub
mov
ja
lods
into
and
xchg
jo
jmp
pop
xchg
cwtl
mov
cld
push
jle
lcall
gs
icebp
push
sbb
movsl
out
je
test
movsb
cmc
jbe
in
lret
jecxz
add
ljmp
movsb
sub
jnp
in
adc
mov
mov
mov
fwait
out
lret
jmp
cmpsb
adc
cmc
mov
sub
mov
xor
push
mov
pusha
push
cmp
dec
push
and
mov
arpl
out
pop
pushf
mov
loop
mov
ss
inc
or
xchg
pushf
out
mov
inc
sbb
xchg
jmp
push
pop
clc
cli
inc
mov
je
scas
mov
mov
int3
dec
push
push
jp
jmp
mov
testb
mov
mov
lahf
hlt
loope,pt
mov
or
cwtl
jo
int
jg
scas
in
cmpsl
loopne
popa
xor
pop
out
imul
enter
push
daa
push
andb
or
xchg
jl
into
into
push
pushf
inc
inc
xchg
cmp
cs
mov
mov
sub
pop
jecxz
pop
mov
popa
int3
dec
push
sub
ja
dec
inc
cmp
cmp
sbb
pusha
dec
icebp
add
jo
bound
jl
orl
add
adc
dec
pop
jmp
adc
jo
call
cmp
sti
sarb
addr16
int3
mov
sub
and
shl
in
in
shrb
sbb
in
test
movsb
pop
jmp
inc
dec
jae
fnstenv
je
add
add
int
push
and
push
lahf
jmp
push
adc
into
lea
data16
xchg
xlat
xchg
loop
jne
mov
pop
cs
xchg
ss
push
xlat
mov
xchg
sahf
xor
scas
sbb
dec
aas
ds
es
and
test
cs
and
pusha
add
push
xchg
sti
ja
pushf
add
ret
out
das
push
jp
add
test
test
test
and
fmuls
int3
ficomps
mov
cmp
addr16
mov
mov
int
jo
clc
scas
in
jnp
or
lret
jne
push
mov
scas
roll
movsb
xor
xorb
aas
fcomps
ret
test
mov
enter
mov
adc
push
stos
mov
ret
in
jle
jle
add
lods
xchg
lahf
lock
xchg
or
jge
jg
daa
mov
inc
sub
pop
scas
leave
mov
call
adc
sub
inc
outsb
or
leave
mov
leave
loop
in
mov
dec
ljmp
addl
sbb
push
lea
add
enter
inc
repnz
pushf
in
sub
xor
lret
iret
stos
and
or
lds
cmc
cmp
out
adc
ss
imul
call
outsb
mov
aad
jmp
movsl
mov
jae
pop
mov
mov
int3
sub
cmc
pop
dec
push
mov
xchg
fwait
outsl
nop
xchg
fistps
in
lods
sbb
push
daa
stos
push
movsl
mov
cmp
inc
push
enter
or
mov
push
xchg
sahf
stc
lret
cmpsl
jns
mov
cltd
lock
mov
push
push
stos
insl
pop
lcall
xchg
sub
into
ret
stc
inc
xor
cmpsl
mov
pop
pop
outsb
inc
inc
nop
orb
lahf
int
mov
xor
mov
add
sahf
dec
lret
into
sbb
xlat
lahf
push
cld
pop
test
mov
pop
or
outsl
push
ss
add
mov
fwait
add
fidivrl
daa
mov
inc
cmp
lcall
mov
sbb
repnz
je
aad
fistl
dec
mov
sub
jp
push
jmp
mov
xor
mov
addr16
add
stos
aas
add
daa
pop
xchg
lahf
jne
in
leave
in
mov
xchg
xor
or
push
inc
cld
sbb
or
stc
push
adc
aaa
jo
cmpsb
lock
test
insl
fnstsw
jb
push
sbb
vpsubw
pop
push
addl
pusha
loope
mov
dec
dec
int3
pop
addb
sub
ds
mov
movsb
divb
je
out
mov
ret
dec
cli
frstor
sub
inc
sbb
outsl
cmp
test
lcall
add
add
push
outsl
and
in
sbb
andb
test
cmp
or
push
or
jno
dec
les
push
cmp
or
rcrl
cmp
xchg
bound
ficompl
and
push
shlb
mov
insl
cltd
push
sbb
fistpl
and
and
add
xchg
inc
pop
cs
push
test
mov
fcomps
call
push
dec
sti
pop
dec
leave
popf
mov
pop
je
ret
fdiv
out
std
mov
add
xchg
pusha
xorb
inc
adc
imulb
movsl
repnz
cmp
stc
js
push
xchg
fcoms
mov
insb
push
cmp
sahf
iret
cli
in
inc
mov
dec
pop
insl
push
or
aaa
jg
adcb
rorb
dec
jnp
rorl
cli
ja
ljmp
movsl
and
cmp
push
test
adc
adc
push
or
clc
jecxz
push
cli
dec
push
mov
or
cmp
aam
jmp
cmpsl
jg
out
fildll
dec
pop
inc
iret
rcrb
sub
repz
mov
gs
out
daa
pop
xor
andl
mov
add
jbe
sbb
pop
jg
adc
insb
rcrl
ret
arpl
mov
xor
pop
jae
adc
pop
inc
sub
rcr
push
mov
ss
push
mov
js
sub
incb
arpl
xchg
cmp
stos
dec
shrl
push
arpl
lea
push
sbb
popf
jbe
sub
ret
leave
dec
adc
mov
push
cmp
jp
add
sub
pop
jne
fbstp
stos
fwait
push
inc
sub
fidivl
mov
shrb
fidivs
dec
in
loop
mov
push
arpl
sub
adc
adc
add
in
fistps
jmp
sub
pop
jb
aas
sbb
pop
add
or
inc
in
add
fmuls
int3
pop
sub
sub
cmpsb
adc
mov
aaa
jl
mov
jnp
xlat
sti
stc
xchg
sub
test
fnstcw
outsb
push
insl
mov
cmp
out
and
or
ja
mov
sub
shll
pop
jle
sahf
leave
xchg
mov
push
mov
sub
jne
dec
into
adc
push
scas
jns
add
cmp
inc
pop
ret
outsl
inc
cmp
stos
mov
push
lds
and
pop
cltd
inc
and
adc
lret
outsl
push
out
addr16
xor
mov
pop
andb
cli
fisttps
vpminub
out
add
lds
out
das
pushf
gs
lahf
xchg
mov
cltd
mov
xchg
in
or
andb
icebp
push
adc
out
jl
negl
mov
cmp
adc
ret
sbb
add
xor
inc
fnstcw
sub
je
int
in
pop
stos
mov
pop
dec
jecxz
clc
sbb
mov
in
push
mov
in
xor
xchg
or
clc
das
adc
gs
aam
pop
icebp
or
jmp
pushl
cmpsl
out
jg
pop
shl
lret
mov
test
cld
in
dec
jle
mov
iret
or
pop
cs
imulb
mov
xor
test
in
or
test
mov
xorb
outsl
pop
adc
xchg
dec
xor
cmp
and
mov
mov
pop
cwtl
fcoml
enter
call
sbb
pop
rcr
loopne
mov
test
xchg
aaa
js
mov
jmp
lock
or
push
xor
icebp
push
mov
add
inc
rcll
add
pop
iret
mov
sbb
aad
sahf
cld
ret
shlb
std
dec
call
ds
cmp
mov
test
push
pop
cli
cmp
mov
cmpl
sahf
test
orl
out
or
lcall
outsb
mov
andl
ja
leave
cmp
mov
or
and
jp
pop
xchg
inc
sub
ja
or
dec
call
shlb
mov
and
mov
mov
inc
or
jno
cmp
push
orl
xor
push
add
sbb
mov
test
dec
icebp
add
ja
out
mov
jg
add
xlat
pop
jb
jns
or
mov
shll
dec
incb
repz
mov
das
jns
xor
dec
or
xchg
jnp
xor
mov
lahf
mov
mov
inc
mov
sarb
scas
xchg
aam
push
inc
xor
rclb
stos
sub
shr
and
xchg
cld
sbb
inc
mov
jg
push
outsl
mov
jbe
jmp
add
jb
and
js
add
xor
xchg
movl
add
fdivs
pop
push
and
dec
scas
cmpsl
xchg
das
outsb
fstpl
clc
jo
jl
inc
loopne
and
ds
lret
pop
jnp
adc
and
inc
pop
adc
addr16
icebp
sbb
or
sahf
mov
cmpsb
cmp
adc
push
xor
mov
dec
and
mov
mov
sub
ja,pn
mov
mov
in
hlt
movsb
adc
xlat
jne
test
mov
dec
mov
mov
pop
ret
shrb
sbb
imul
cmp
jne
cmp
mov
aam
adc
outsb
add
call
into
fisttpll
cmpsb
mov
dec
outsb
push
mov
aam
cmp
test
lds
cmpsl
mov
xchg
mov
icebp
sbb
xchg
mov
pop
cmpsl
cs
loopne
push
sbb
inc
dec
sub
mov
cld
sahf
sub
add
add
icebp
xchg
or
les
ret
insl
arpl
mov
scas
outsb
addb
jge
push
pop
add
fsub
data16
cld
mov
mov
mov
int3
xchg
out
aas
mov
call
mov
out
or
add
sti
sub
enter
addr16
das
enter
lock
das
adc
in
dec
dec
jae
jmp
mov
mov
xchg
sub
into
and
ljmp
rcll
dec
add
push
lcall
sahf
and
pop
inc
cmpb
and
dec
add
les
faddl
js
fildll
cmc
and
jecxz
leave
adc
dec
push
pop
add
and
gs
notb
xchg
sub
test
inc
cmp
cmp
movb
fcoms
jb
pusha
xchg
pusha
xor
add
cltd
test
mov
adc
dec
nop
sbb
jne
js
test
cmc
xchg
jae
js
mov
mov
jp
iret
inc
inc
test
or
cmp
subb
lods
ds
mov
pusha
jns
inc
add
or
mov
ds
xchg
mov
div
dec
jmp
dec
stos
repz
mov
cmp
xchg
dec
jle
aaa
dec
fisubl
push
xchg
fisttpll
sub
push
in
adc
cltd
pop
fsub
add
imul
xchg
lock
fcompl
ja
decb
fbld
es
pop
adc
push
bound
out
sahf
test
fists
sub
mov
jae
cmp
pushf
xchg
in
add
outsb
xchg
push
sub
push
movsl
arpl
dec
and
jnp
inc
aaa
xor
jae
dec
repnz
mov
test
add
jnp
sbb
xor
mov
movsb
mov
inc
pop
iret
int3
sub
jnp
loopne
sti
sub
add
sbb
jno
clc
dec
inc
out
push
mov
movl
mov
lret
jle
test
test
lcall
call
lods
cmp
pop
out
lds
push
pusha
add
jle
outsb
xchg
jmp
leave
ljmp
xor
out
pushl
fwait
inc
pusha
or
int3
dec
int3
test
out
fildll
and
mov
jbe
ja
aaa
cltd
adc
mov
mov
pop
daa
xor
jo,pn
into
lea
jmp
dec
push
pop
push
ja
das
jne
pop
lret
sahf
lods
mov
fmul
cwtl
push
clc
push
or
fmuls
loopne
test
rol
cmpsb
mov
fistpl
mov
sbb
sbb
sub
add
in
adc
jne
cwtl
aam
mov
int3
add
cmp
je
imul
ljmp
xorb
jg
repz
ljmp
pop
cmp
mov
cwtl
sbb
daa
lods
cmp
movntq
and
push
int3
ret
jo
mov
fld
sbb
std
bound
pushf
jecxz
mov
push
enter
sub
into
jns
jb
cmpsl
push
aaa
lret
mov
xrelease
aam
jl
jb
bound
adc
push
xchg
add
xchg
out
pushf
ret
nop
fs
push
fisttps
vdivpd
push
push
jg
xchg
fdivr
push
lahf
jmp
lret
lret
in
je
mov
and
cmpsl
jge
loopne
gs
xor
ljmp
push
xchg
sahf
mov
daa
and
lret
cs
cli
jmp
adcb
mov
call
loop,pt
xor
xor
sub
in
xor
push
sub
ljmp
in
push
shll
int3
sbb
dec
inc
pop
mov
shlb
xchg
outsb
je
jge
call
loope
scas
mulb
jecxz
insl
jmp
lret
and
push
stc
and
popf
mov
test
inc
cmp
cmp
sub
adc
fsubl
fwait
xor
cs
imul
pop
sahf
in
or
cs
test
sub
pop
sbbl
cmp
jae
xchg
cmpsl
pusha
lds
push
sbb
xchg
inc
pop
inc
arpl
pop
cli
hlt
adc
mov
call
aaa
jle
and
test
lds
inc
mov
xor
xchg
scas
jae
jnp
jno
sbb
xor
xor
ret
stos
mov
cmp
jecxz
fsubs
ret
dec
push
adc
pop
cmp
xchg
daa
stc
aad
pop
add
or
test
pop
dec
out
enter
fmuls
test
test
lods
iret
xchg
in
xchg
js
out
xlat
pop
xor
pop
jno
xchg
mov
subl
call
aad
mov
adc
out
fistpl
dec
into
test
test
das
pop
xor
and
repnz
mov
stos
neg
and
push
mov
loope
cmp
pop
sahf
cld
mov
leave
mov
daa
popa
mov
add
dec
push
jmp
stos
in
sbb
or
fstpt
out
lock
sub
and
pusha
jg
cld
rorb
add
fs
movl
inc
inc
out
inc
sub
pop
inc
push
adc
aam
or
or
jbe
mov
ficoms
js
and
or
push
or
shl
push
jo
aam
fcmovne
dec
sbb
xlat
inc
sub
mov
mov
filds
les
movsl
pop
outsb
ror
sbb
mov
mov
pop
loop
scas
enter
sbb
push
mov
out
rolb
fdivp
sbb
xor
jl
mov
fs
ret
dec
lea
mov
xor
ljmp
mov
lds
int3
sbbb
lods
mov
cs
out
add
push
cmpsl
cltd
repz
mov
mov
insl
lcall
clc
xchg
dec
xor
push
jnp
jns
mov
jg
sbb
inc
lods
mov
push
adc
push
add
mov
adc
xchg
add
mov
lods
cmpsb
daa
inc
adc
pop
xchg
xchg
and
scas
aam
stos
fmull
in
add
cmpsb
enter
cs
add
lret
sahf
fidivrs
popa
stos
mov
sub
jbe
mov
aam
jne
xchg
xor
popa
xor
push
cmpl
mov
inc
and
cmp
outsl
pop
daa
clc
pop
pop
and
xchg
pop
push
add
pop
cs
fwait
push
aaa
pop
dec
xchg
adc
jns
js
push
mov
add
sub
mov
int
lret
jg
and
sbb
cmc
int
bound
mov
jae
rolb
pop
loopne
xchg
dec
aad
iret
fidivrl
jne
pop
fnsetpm(287
or
lahf
and
bound
pop
push
inc
insb
orl
movb
sub
fs
jbe
add
inc
fld
dec
sbb
jbe
sbb
add
jl
adc
shrl
insl
dec
rolb
lea
orps
fidivrl
adcl
push
pop
jecxz
ficomps
imul
xor
outsl
mov
in
aad
aam
outsl
sbb
frstor
stos
dec
push
xor
inc
jno
push
jns
ret
adcl
loope
sbb
adc
dec
inc
push
stos
adc
sub
mov
movsb
daa
sbb
fcomps
fnsave
fcomps
shl
jp
ret
add
inc
and
fwait
jae
or
xor
sbb
cmp
test
cmpsl
fcomps
cld
sbb
pop
push
aam
dec
pop
cmp
data16
inc
or
int
jnp
out
lods
xor
add
pushf
mov
push
popa
jg
sub
out
xchg
dec
mov
or
xchg
movsl
mov
mov
inc
ret
sbb
negl
sbb
mov
adc
arpl
pop
inc
gs
cmc
add
int3
xchg
dec
rorb
xor
out
jmp
push
rep
dec
movsb
inc
jge
ja
pop
les
shlb
enter
xchg
push
dec
sbb
inc
insb
mov
gs
jae
aas
mov
stos
sbb
or
cmpsb
inc
sbbl
xor
addb
push
adc
push
xchg
mov
sbb
mov
testl
in
int
xchg
adc
jb
cli
test
repz
and
lock
add
inc
lahf
mov
maxps
lret
pop
dec
dec
into
add
aas
sbb
push
jle
dec
stos
xor
add
addr16
fstps
push
shlb
pop
pop
daa
jle
mov
pop
pushf
ss
hlt
mov
scas
sub
aas
inc
or
sub
mov
imul
inc
outsb
negl
xor
mov
push
ret
or
test
rclb
lock
negb
shrl
subl
mov
add
push
leave
mov
loop
pop
and
adc
ficompl
jb
fwait
or
and
idiv
xchg
dec
cwtl
dec
xorb
push
pop
mov
inc
rcl
movzbl
xlat
push
mov
push
sbb
sub
sbb
xchg
adc
sarb
add
sub
mov
pop
test
dec
fsub
jne
ret
loopne
bound
xchg
cmp
and
in
and
iret
movsb
sub
and
mov
jmp
jae
jecxz
sub
leave
faddp
aaa
movsl
dec
inc
aas
push
sahf
add
pop
push
pop
cmc
mov
cmp
jnp
mov
pop
cmpsl
scas
movsl
enter
jno
push
and
nop
stos
xor
add
movsl
mull
mov
jne
nop
stos
and
nop
and
shlb
push
ret
and
fptan
add
movsl
insl
inc
dec
dec
enter
jb
stos
mov
clc
or
mov
mov
icebp
xchg
inc
mov
xchg
nop
repnz
pop
cmpsl
and
das
les
cld
mov
mov
cmpsl
sub
loop
repz
jne
cmpsb
or
out
mov
movsl
jne
adc
loopne
mov
or
rcrl
xorl
out
aad
add
push
pcmpeqd
jae
pop
iret
dec
fwait
adc
and
inc
notb
sahf
xchg
xchg
jbe
test
outsb
popa
inc
int
pop
int3
or
int3
add
dec
sub
stos
enter
cltd
into
mov
js
xor
aam
rcrb
and
sbb
aad
ja
xchg
pop
push
fcoml
fwait
subb
sbb
pop
add
enter
pushf
in
inc
nop
xchg
push
fwait
mov
in
das
daa
lds
pushf
mov
je
fbld
xchg
aaa
fdivrs
insl
dec
xchg
mov
mov
into
inc
ljmp
sbb
mov
int
xchg
mov
mov
aaa
ret
popa
mov
std
mov
outsl
inc
movl
jo
lcall
outsb
cmp
mov
add
mov
mov
fwait
imul
mov
loop
jo
lfs
pop
inc
pop
test
stc
cwtl
fbstp
mov
mov
jbe
jecxz
clc
and
sbb
xorb
inc
mov
cs
mov
mov
adc
fisttps
dec
insl
dec
ss
scas
ret
jns
ss
icebp
stos
or
add
inc
dec
add
and
cli
add
arpl
add
in
xchg
mov
xlat
jb
imul
je
or
pusha
out
and
push
fwait
negl
xor
clc
sarb
std
loop
cmp
cmpsb
mov
xor
xchg
dec
iret
scas
xchg
test
cmp
cmp
xor
add
dec
mov
in
lcall
jmp
int3
sbb
loope
rcr
push
xchg
ss
pusha
cld
or
dec
inc
mov
jo
outsl
pop
inc
or
add
aas
push
inc
xchg
das
shrb
sbb
jge
fmull
mov
mov
fisubl
rcll
mov
cltd
mov
inc
jp
mov
adc
push
fisttpll
ficompl
imul
pop
cmp
dec
lods
add
push
das
data16
mov
dec
cwtl
mov
mov
sti
mov
stos
mov
xor
or
pop
push
popf
mov
pop
inc
notb
mov
xchg
sti
lcall
hlt
inc
xor
push
addr16
mov
das
mov
push
les
jle
movsb
or
in
and
stos
cmp
adc
in
or
adc
mov
inc
stc
push
or
pop
std
loopne
cltd
inc
fwait
xor
and
stos
dec
jne
dec
lret
push
xchg
out
or
pop
insb
inc
dec
scas
lcall
stos
and
mov
pop
mov
or
repnz
test
xor
adc
lods
mov
ret
shlb
stc
pop
sbb
cwtl
mov
mov
pop
mov
lea
jl
push
xor
pop
lock
lahf
mov
sahf
cld
nop
aas
mov
mov
inc
jle
and
jp
pushf
dec
pop
lock
jb
mov
dec
sti
fistl
xor
aad
mov
xchg
inc
mov
enter
jle
pushf
mov
push
rol
fadd
mov
dec
pushl
push
cmp
jae
in
inc
daa
mov
cmpb
sbb
dec
adc
cmpsl
stos
mov
bound
or
sub
mov
das
arpl
roll
or
cwtl
jb
xor
test
aad
out
aas
sbb
andb
sbb
dec
addr16
sub
push
xchg
mov
cmp
mov
out
les
adc
lods
ret
daa
movsl
add
outsb
call
push
adc
jnp
loop
lods
out
mov
call
scas
cli
popa
flds
div
stos
xchg
nop
inc
lods
adc
jns
pop
orb
mov
or
push
mov
int
push
in
jp
push
mov
repnz
dec
andb
jno
lahf
mov
mov
shll
int
out
add
out
rcrl
jl
jo
stc
shr
stos
pop
cli
test
fadd
push
cltd
das
mov
or
out
adc
xchg
inc
cs
or
lock
mov
mov
mov
imul
jl
test
dec
dec
push
sbbb
scas
push
mov
sub
dec
lahf
mov
nop
inc
jecxz
imull
pusha
cld
sub
mov
ds
mov
sbb
sbb
lea
mov
fldcw
inc
and
dec
jno
xchg
jae
jge
add
push
push
dec
xor
pop
fisubl
bound
push
mov
std
push
and
clc
jmp
aas
insl
push
leave
sti
pop
lahf
shrl
xchg
call
nop
jmp
inc
push
dec
daa
and
jno
or
sbb
xchg
jne
movsl
and
jmp
add
mov
inc
iret
aas
addr16
inc
fsubp
sbb
scas
fistl
ret
rcl
testb
aaa
popa
cmp
cmp
fs
out
push
adc
in
fsub
mov
stos
stos
xor
push
out
int3
mov
xchg
adcl
xchg
cli
push
push
subl
push
adc
out
pop
int3
add
negb
cmp
mov
mov
ret
adc
je
xchg
je
in
movsl
cmp
clc
mov
clc
jnp
inc
jecxz
call
adc
ljmp
out
mov
inc
xchg
mov
fs
and
out
stc
ljmp
dec
xchg
sub
dec
ficompl
imul
sbb
movsl
jle
outsb
pop
fldcw
xchg
stc
aad
lods
fnstcw
mov
mov
int
shlb
int3
aaa
mov
aad
jae
orb
lods
mov
cld
mov
add
fwait
xor
cmpsl
pop
pop
push
inc
bound
shll
int
push
or
hlt
pop
nop
scas
mov
jae
aas
xor
int3
adc
cwtl
rorl
sahf
cli
mov
ret
cmpsb
adc
xor
xor
sahf
cmpsb
dec
jle
push
dec
enter
loop
or
repnz
inc
nopl
xor
pop
xchg
or
cmpsl
pop
adc
add
xchg
or
jp
xchg
lods
or
mov
notl
cltd
nop
sahf
push
or
dec
scas
stos
shr
jne
pusha
adc
adc
clc
fimull
fists
pop
fwait
out
or
jne
xchg
xor
mov
and
cltd
mov
xchg
and
mov
add
xchg
dec
xchg
mov
or
mov
fisttps
inc
or
sub
popf
push
and
outsb
call
jnp
pop
add
fstpl
pop
mov
out
ficompl
je
push
mov
adc
scas
data16
mov
test
in
fchs
test
nop
push
fsubrs
push
push
inc
pop
xchg
cmp
repnz
jp
das
adcb
dec
cmp
and
bt
pop
inc
push
pushf
stos
out
sub
mov
int3
loopne
mov
bound
cs
or
fiaddl
pop
cmp
es
int
js
or
jns
fwait
popf
cmpsb
les
add
test
jno
xchg
dec
xor
mov
int
jmp
jge
bnd
or
fisttps
nop
loope
test
in
mov
push
shl
cmp
inc
repz
sbb
cli
aam
push
stc
movsb
aaa
jecxz
fstps
mov
add
test
daa
scas
lods
adc
mov
pop
cltd
xchg
dec
lods
popf
shr
stos
test
dec
lods
push
outsb
rcll
aaa
mov
dec
mov
dec
mov
or
pushf
and
scas
sbb
cli
inc
xlat
mov
stos
cmp
push
pusha
mov
adc
movsb
test
dec
cli
mov
or
xchg
fwait
imul
or
repz
lea
dec
push
popl
lods
outsb
bnd
mov
xchg
push
aas
loop
inc
repnz
aaa
stos
jp
je
inc
rclb
jle
sub
into
in
mov
dec
xchg
addl
dec
movsb
adcl
icebp
push
bound
loope
int
fcmovb
push
or
inc
cmp
pushf
lods
pusha
cmpl
adc
inc
mov
xor
push
pop
push
mov
cmpsb
dec
es
cs
push
int
dec
xchg
dec
outsb
add
pusha
xchg
shl
divl
adc
addb
push
mov
inc
int
pop
mov
push
cmpsb
js
pop
push
xor
aas
mov
push
or
dec
clc
pop
push
mov
cs
outsb
push
pop
xlat
jae
clc
aas
cmp
xchg
xor
push
in
iret
adc
sahf
cwtl
and
dec
mov
or
out
sub
push
inc
shl
sub
inc
add
adc
lock
push
mov
xchg
inc
mov
mov
sbb
popa
dec
sub
xchg
jno
or
hlt
imul
fsubl
mov
fimuls
mov
loop
dec
clc
lahf
mov
dec
jle
push
addb
aas
add
pop
mov
mov
test
adc
stos
pop
bound
inc
addr16
mov
cmp
push
jae
xchg
fcoml
insl
dec
jg
dec
xchg
pop
mov
ds
add
add
mov
insb
xchg
xorl
cmp
in
jge
inc
repnz
adc
dec
loope
add
out
pop
sub
mov
cmp
add
pop
xor
adc
loop
rolb
pop
pop
dec
xor
push
in
push
jg
cwtl
push
inc
movsl
into
and
fdivrl
imul
jo
daa
jno
out
test
xchg
outsl
in
adc
divb
aad
dec
dec
xchg
in
xchg
ret
push
les
test
movsl
jae
inc
mov
mov
hlt
dec
adc
stc
mov
rcrl
aas
scas
xchg
or
adc
xor
mov
shl
sahf
arpl
push
testl
test
push
je
mov
mov
sub
das
je
push
in
ret
bound
cwtl
adc
sub
arpl
add
dec
adc
mov
repnz
fsincos
ljmp
loope
add
inc
xor
fldt
jecxz
jbe
std
fdivl
ss
ret
push
mov
push
es
xchg
mov
lahf
jne
adc
ja
jp
xor
xchg
cli
and
mov
fs
ss
dec
insb
push
mov
pushf
push
fwait
xchg
mov
jnp
jne
and
stos
and
jbe
dec
nop
jb
aad
sbb
xchg
jne
jb
cmp
dec
and
mov
icebp
mov
fnstcw
negb
mov
push
int
mov
add
jge
or
pusha
xlat
sub
or
imul
mov
and
xor
and
lock
fs
out
subl
mov
in
dec
filds
push
test
test
cwtl
cltd
popa
pop
mov
fistl
mov
mov
mov
aad
aas
or
add
jns
xchg
sub
inc
das
inc
adc
mov
fbld
mov
jmp
es
jns
mov
xor
mov
xchg
scas
mov
pop
jbe
jns
dec
stc
push
xor
fwait
and
notb
cld
aad
dec
jnp
sbb
mov
lcall
sub
jne
outsl
daa
xchg
add
adc
push
inc
mov
sbb
push
incl
enter
inc
rclb
stos
sarl
enter
addb
jo
mov
outsl
ds
fisubrs
push
mov
mov
pushf
xchg
inc
lods
insl
mov
sbb
inc
xlat
inc
pop
out
stos
and
clc
ffreep
ret
out
xchg
pop
fstps
jne
ret
pop
jo
dec
je
pop
xor
inc
push
and
and
rcl
and
in
movsl
mov
test
aas
push
dec
pop
imulb
insl
add
sbb
shll
mov
jg
add
and
mov
test
sbb
lds
aam
push
or
mov
mov
sbb
popa
arpl
int
or
sub
pop
out
ds
nop
mov
repnz
ficompl
cmpsb
orb
insl
jnp
lret
lock
sbb
leave
in
aaa
in
mov
out
jbe
in
mov
std
adc
andb
and
roll
mov
adc
iret
ret
sbb
mov
in
loop
add
xor
jbe
push
push
mov
lcall
push
imul
dec
repnz
jae
fs
rorl
xlat
in
in
mov
clc
pop
xor
ret
sbbb
push
inc
cmp
movsb
sub
cltd
pop
mov
ljmp
add
push
adc
test
push
movsb
aam
insl
xchg
cltd
xor
jns
or
lods
mov
stos
xchg
clc
in
addb
test
lods
mov
push
scas
lds
ss
mov
lea
jle
mov
mov
inc
and
dec
sub
dec
push
out
mov
pusha
bound
in
xor
push
mov
jnp
mov
mov
fisubrs
inc
sub
sbb
or
sbb
ret
loope
iret
sahf
xchg
scas
fsubl
in
and
pop
les
outsl
loopne
loopne
addl
dec
cmp
faddl
xchg
int3
cmpsl
jb
dec
test
sbb
adc
sbb
clc
inc
lock
dec
mov
push
mov
gs
std
dec
ds
jo
iret
cld
jg
sahf
pop
dec
dec
push
aas
inc
out
je
cwtl
lret
mov
cmp
or
add
adc
mov
jbe
insl
dec
or
inc
mov
jg
ljmp
ret
cli
cltd
mov
jmp
mov
and
jbe
jge
aam
mov
gs
xchg
decb
icebp
adc
and
lds
pop
xchg
pop
sbb
pop
jp
jp
outsl
int
pushf
addr16
inc
jge
test
mov
fwait
test
pop
mov
and
sub
pause
in
push
sahf
test
ret
lahf
add
iret
jg
mov
xchg
push
xor
leave
adc
call
jecxz
fs
jecxz
ja
iret
jbe
cmpsl
pop
xchg
outsb
fwait
sub
ret
dec
shll
sbb
fwait
add
dec
xor
sub
jo
or
xor
push
lcall
xchg
mov
mov
push
mov
xchg
mov
jno
fstps
sbbl
je
or
dec
xor
sub
fmul
fwait
push
push
mov
sub
push
mov
daa
push
mov
mov
mov
fstps
jp
mov
lock
mov
xor
xor
add
les
add
adcl
pcmpeqw
push
and
jnp
decb
stc
mov
sti
lea
push
loopne
and
aaa
das
rol
cmpsb
inc
add
adc
cmpsl
inc
or
push
out
pusha
loope
jo
or
add
dec
xor
jo
add
out
addr16
cmc
lods
push
add
pop
aad
rcrb
jno
sbb
loope
arpl
pusha
jns
mov
push
sti
dec
sbb
or
push
mov
scas
cmp
jo
lret
push
outsl
jne
sbb
jl
daa
loop
ljmp
and
lcall
mov
mov
sbbb
mov
mov
faddp
andb
add
out
adcb
and
icebp
xlat
shll
insl
fistps
pop
or
pop
outsb
sub
ss
cmpsb
or
stos
mov
loopne
xlat
sbb
loope
push
sbb
cmp
in
aaa
cmp
mov
bound
hlt
dec
xorb
xor
lods
adc
aad
cs
loope
cltd
push
mov
outsb
lea
lahf
divl
jle
jge
lods
sub
mov
aad
push
fstl
mov
rolb
test
mov
cmp
inc
xchg
dec
mov
ret
stos
test
lea
add
repz
call
bound
add
sub
adc
test
test
int3
add
xchg
js
jbe
shlb
lods
adcb
jp
ror
adc
cmp
add
and
je
stc
cs
xor
add
cmp
loop
outsl
lods
pop
jb
or
js
insb
cmp
lcall
mov
test
mov
dec
xlat
xor
lock
imul
mov
dec
or
rcl
sub
ret
xor
and
and
repz
out
inc
inc
repz
mov
outsb
leave
rcl
sub
mov
add
out
sub
mov
flds
add
hlt
popa
xor
int
dec
sub
or
or
mov
mov
imul
idivl
xlat
sarl
push
sbb
xor
ds
mov
clc
jb
sub
aas
mov
sub
loop
xor
cmp
mov
cwtl
daa
outsl
xor
imul
nop
inc
mov
dec
mov
jns
xor
cltd
dec
pop
xchg
xchg
loope
fcompl
nop
gs
cli
push
xchg
inc
test
jp
or
cld
mov
loope
sar
inc
jbe
out
jle
es
aam
sti
or
adc
adc
mov
mov
push
jl
mov
gs
int
dec
sahf
adc
push
and
subl
sete
or
jne
test
decl
cmp
add
sbb
dec
add
movsb
in
xchg
cmp
sub
inc
or
ret
mul
adc
aas
bound
arpl
mov
scas
pmaxub
movsl
popa
push
cmpsl
inc
aam
inc
mov
dec
or
sub
push
fidivs
push
sub
dec
sbb
or
into
mov
repz
lods
scas
outsl
or
adc
mov
mov
cld
sub
out
nop
ljmp
jno
cs
lock
lds
fs
adc
cmp
xor
bound
movsl
cltd
movsb
stos
adc
inc
adc
cli
iret
xor
or
sub
lcall
lahf
adc
call
mov
loop
push
push
dec
enter
fcmovbe
fs
push
push
movsl
ljmp
stc
xchg
cmpsb
add
aaa
push
or
insl
in
jmp
sbb
sbb
mov
pop
lahf
push
scas
sbb
pop
mov
dec
addr16
cmp
adc
mov
xchg
andl
jmp
or
sbb
test
rcll
mov
push
xor
test
test
out
jne
out
fnclex
xchg
cltd
pop
sbb
push
gs
xchg
xor
mov
cmp
ss
mov
jle
iret
hlt
mov
jecxz
cmp
mulb
mov
ret
loopne
push
jo
and
pop
mov
pushf
loop
pop
clc
cmpb
cld
call
ret
cli
rol
lds
les
add
ljmp
js
mov
sbb
mov
repnz
ret
gs
mov
jp
add
mov
adc
or
movsl
fsubrs
inc
cmc
and
adc
loop
mov
aam
push
sub
outsb
popf
and
mov
jbe
dec
testb
cmp
inc
pop
pushf
out
pminsw
cmp
jmp
push
stos
pop
add
push
sbb
mov
mov
add
outsl
inc
std
cmp
or
setbe
xor
cmc
dec
gs
mov
push
dec
gs
xlat
cmc
dec
rcr
xlat
imul
sti
imul
pop
jp
test
sarb
add
and
inc
jp
stos
and
int
sahf
rcll
jmp
loope
je
or
push
repnz
dec
mov
mov
mov
scas
cmp
sub
push
ljmp
aas
mov
mov
mov
dec
outsl
daa
call
mov
pop
jnp
js
in
push
lahf
jl
push
sti
adc
movsl
pop
cmp
rorb
or
dec
sub
pop
adc
imul
es
jecxz
dec
xchg
mov
jle
mov
pop
sub
test
push
or
icebp
loope
xor
dec
sbb
inc
in
jl
sbb
ret
dec
pop
push
inc
pop
popf
push
pusha
mov
mov
mov
mov
ljmp
xor
jmp
filds
leave
inc
arpl
mov
aas
pushf
jbe
imul
shll
sbb
or
in
scas
push
pop
pop
fimull
rclb
das
or
sub
mov
adc
leave
rcll
push
ficomps
dec
mov
test
in
jg
mov
dec
cli
mov
and
test
add
cmpsl
and
das
or
lods
cmpsb
aas
lret
aad
dec
movsl
add
lods
es
cld
and
sub
pop
insb
mov
pop
inc
fs
mov
cmp
cltd
jmp
jo
cmp
cwtl
mov
push
movsl
sahf
pop
xlat
test
push
cmc
arpl
push
adc
stos
jmp
jno
cmp
in
add
mov
mov
ds
mov
xchg
mov
in
cmpsl
or
xor
test
scas
mov
xchg
jne
xor
jl
imul
clc
add
addl
mov
mov
lock
xor
cmpsb
pop
xchg
mov
fisubrl
sbb
mov
fsubs
and
out
cmp
enter
das
stc
jmp
bound
sbb
test
ret
aaa
aas
outsl
lret
insl
shrl
rcrb
xchg
jns,pt
das
dec
xor
add
add
shll
and
les
add
push
loope
push
dec
pusha
fisubrs
repnz
pop
xchg
cmp
fsubrs
adc
repz
repz
add
aad
movsl
lods
nop
dec
pusha
mov
sbb
in
inc
jge
call
cld
out
fisubs
jae
inc
cli
ja
enter
xchg
iret
lock
sub
mov
cmpsb
pop
andb
sbb
jl
imul
adc
ror
inc
xchg
arpl
pop
cmc
clc
cmp
mov
mov
sahf
sbb
mov
xchg
sub
out
xchg
mov
ret
add
gs
mov
fxch
gs
add
mov
dec
int
aaa
nop
pushf
repz
loop
into
nop
hlt
in
adc
pop
sub
rol
fs
dec
sbb
jl
jecxz
sahf
add
int
pop
fdivrl
mov
fimuls
xchg
subb
xor
cmp
inc
arpl
mov
dec
out
clc
push
pop
aas
enter
clc
sbb
sub
xor
xor
mov
negb
adc
ja
iret
mov
dec
xchg
std
into
dec
jbe
push
hlt
cmp
sub
mov
ffree
mov
lods
dec
test
test
or
ret
mov
adc
test
insl
in
or
ljmp
aad
ljmp
adc
push
call
lret
std
cmp
jecxz
and
subb
push
inc
push
cli
popf
addr16
fisttpll
into
mov
fwait
and
inc
mov
jmp
fldl
sbb
fwait
xchg
cmp
rcr
adc
bound
inc
mov
popa
out
sarb
inc
movsb
cltd
and
xor
gs
out
mov
mov
or
jne
outsl
inc
invd
jno
push
jg
int3
xchg
xor
xor
sub
mov
jae
movsb
jnp
stos
push
add
loope
mov
popa
adc
call
js
in
mov
inc
lret
pushf
out
pop
dec
stc
fst
cmp
sbb
fsubl
scas
in
or
dec
ja
movsb
sub
hlt
jg
push
mov
jae
into
orb
lods
jb
push
sub
pop
sub
cs
xchg
dec
imul
or
outsb
fstl
cmpb
sahf
mov
or
in
std
sbb
fiaddl
and
inc
sub
xrelease
xor
mov
xchg
aad
jmp
mov
rcr
sub
cmpsb
jbe
mov
cltd
mov
pusha
dec
pop
inc
sub
jns
ds
mov
mov
into
cltd
and
cmp
push
in
mov
std
inc
push
shlb
repz
xchg
movsl
sbb
sbb
adc
aaa
dec
pushf
out
mov
jmp
pop
xchg
sbb
call
sbb
shrl
mov
je
mov
fs
aas
lret
int3
mov
stos
sahf
cwtl
push
out
mov
std
rol
jecxz
or
mov
cmpsb
mov
mov
pop
clc
pop
mov
pop
mov
jb
and
mov
lret
lret
cltd
lods
cmpsl
lgs
pop
mov
lock
call
aas
sbb
push
xchg
adc
std
xchg
mov
inc
testb
sub
in
xchg
mov
inc
ret
and
xor
nop
gs
loope
popf
inc
and
jno
mov
mov
pop
mov
in
jo
and
inc
ljmp
or
vmovhpd
cmp
lock
mov
lret
mov
and
or
ret
pop
idivl
add
and
mov
mov
xchg
ficompl
out
add
sbb
loope
stc
test
or
std
cs
shl
daa
mov
dec
xchg
dec
jbe
js
cmp
pop
mov
in
pusha
mov
mov
ret
test
xor
stc
lock
jg
inc
or
xrelease
shll
outsl
xchg
mov
test
repnz
out
push
lcall
cmp
lea
lea
inc
mov
xor
dec
push
push
push
pop
xor
push
inc
stos
aam
adcb
xchg
and
xchg
arpl
pop
and
fwait
mov
lock
ret
data16
addr16
or
je
adc
hlt
rorl
movhps
imull
sarl
movsl
pop
inc
in
cmp
aad
movsb
les
pcmpeqb
iret
cmp
call
xchg
jecxz
imul
insb
jmp
mov
loope
inc
ja
iret
inc
addl
rolb
test
outsl
daa
push
pop
mov
hlt
cmp
popf
adc
dec
xchg
insl
call
lahf
pop
push
jno
sub
ret
fwait
mov
nop
addr16
call
pop
shll
fbld
aam
push
lret
cmpl
sahf
adc
sub
cmpsl
pushf
push
addl
fidivrl
xchg
daa
cmp
nop
add
add
jmp
stos
sbb
shl
call
jne
mov
xor
loopne
adc
push
adc
movsb
push
insl
subl
jg
lds
mov
sbb
xchg
pop
repnz
push
xor
push
lods
cmp
in
repz
stos
cmp
cmp
out
test
decb
push
bound
ret
push
cmc
lds
outsl
data16
test
mov
cmp
rcr
sub
pop
xor
les
cmpsb
insb
not
or
sub
in
mov
aaa
mov
sti
inc
ret
lods
shrl
pusha
push
xchg
xchg
subl
or
mov
lods
shll
inc
dec
jge
mov
push
or
cmpb
cmpsl
adc
pop
aad
jne
dec
addr16
cmp
lds
rcrl
stos
push
sar
mov
mov
mov
dec
insl
leave
pop
xlat
xor
imul
jnp
rcrb
push
push
jno
jnp
dec
mov
loope
and
cmp
jb
add
jle
ret
lret
nop
pop
inc
push
mov
rol
jl
insb
adc
daa
push
cltd
and
sti
xchg
sbb
ja
lock
xchg
loopne
gs
jp
mov
pop
aad
leave
rclb
shl
loop
addr16
push
xor
cmp
pop
shrb
mov
pushf
imul
fwait
int3
ds
aam
scas
jecxz
xchg
push
add
or
in
cld
loop
inc
xor
push
ret
daa
jns
sub
ret
shlb
push
lock
mov
adcl
xchg
add
popf
mov
push
sub
xlat
pop
imulb
ficomps
iret
mov
out
mov
or
xchg
and
clc
shlb
out
pop
mov
inc
inc
push
cmp
fisubs
mov
or
jo
int
andl
add
ret
mov
in
imul
mov
sub
cmp
fwait
adc
push
loope
out
push
notl
in
lods
out
sbb
mov
mov
js
push
and
repz
jb
adc
cmpsb
adc
imul
test
or
in
mov
add
xchg
mov
test
and
and
ja
mov
and
pop
fcmovne
pop
inc
mov
xchg
and
int
inc
fisubl
xchg
pop
std
adc
xor
and
ja
push
lret
add
fidivrl
movsb
popa
inc
adc
or
jl
xchg
bound
pop
std
add
mov
dec
dec
sbb
jno
cmpsl
push
jmp
cmp
sub
out
stos
or
push
jno
nop
rcrb
jbe
aad
enter
jmp
mov
lret
push
aam
mov
or
std
xchg
adc
lds
lds
and
loop
sbb
sub
aad
ja
fistps
push
popa
push
and
ds
ja
lahf
and
addb
mov
in
gs
stc
mov
jne
mov
push
sub
mov
cmp
or
scas
in
lds
sub
scas
push
loope
fisubrl
or
and
bound
mov
les
cltd
or
imul
sbb
std
int3
mov
and
jmp
pop
pop
shrb
aad
aam
add
js
sbb
mov
dec
cld
and
mulb
jle
xchg
fildll
ljmp
jecxz
adc
icebp
notb
cli
ret
cmp
push
lea
ljmp
stc
jge
out
sbb
jle
jmp
imul
pushf
out
inc
fdivrp
and
push
movsl
jne
into
mov
pop
sub
repz
and
bound
loope
in
xchg
cmp
dec
xchg
or
mov
in
in
cmp
and
sbb
push
sarb
pop
xchg
jecxz
mov
push
shll
mov
adc
dec
lods
test
inc
daa
xchg
out
pop
ret
pop
daa
cwtl
mov
cwtl
daa
push
sahf
call
aaa
pop
insb
push
std
jae
cmp
in
loope
insl
push
pop
insl
pop
sahf
mov
and
mov
push
mov
jbe
and
lcall
test
add
cmpsb
push
lret
lret
cmp
in
cmpsb
jecxz
mov
push
loop
les
dec
lods
cmp
lock
and
scas
test
xchg
loop
adcl
fs
push
je
jnp
pop
outsb
and
mov
jge
dec
fdivrs
pop
addb
negl
cmpsb
lfs
popa
or
mov
lods
mov
fwait
and
adc
mov
mov
xor
cwtl
fwait
pop
outsb
push
in
xor
lahf
mov
in
push
cmpl
jmp
xchg
lds
sub
jg
clc
sbb
adc
cmp
add
outsl
fcomip
shr
mov
lahf
sbb
jp
mov
jo
jnp
and
popf
and
ss
dec
ja
xchg
outsl
adc
mov
fldl
addr16
aas
and
push
sub
jb
fiadds
push
jle
mov
pop
lea
and
adc
lea
das
mov
movsb
into
frstor
fwait
adc
inc
stos
dec
inc
mov
adc
adc
sti
or
sbb
scas
mov
inc
es
add
faddl
add
shrb
sub
ret
outsb
pop
xchg
mull
xchg
subl
aas
add
insb
xor
dec
fnstcw
out
mov
ja
fcmovnb
push
fwait
sub
mov
nop
mov
ss
adc
jnp
aam
into
shll
das
pop
dec
cli
into
inc
push
movsl
sub
imul
bnd
cmp
dec
mov
cmpsb
ficomps
jo
inc
sbb
push
pop
int3
and
out
jae
in
cmp
fidivs
mov
cs
pop
mov
iret
cwtl
add
lea
cmc
pusha
add
cli
adc
xor
iret
adc
jp
or
jge
flds
sub
cltd
andb
mov
mov
sbb
in
jmp
cmp
or
cmp
xchg
pop
pop
dec
pop
loopne
pop
stos
out
dec
call
cs
xor
aaa
push
fs
mov
test
mov
xchg
leave
adc
les
fwait
sti
xchg
sbb
mov
das
cmp
lahf
outsb
stos
insl
lods
pop
aad
bound
mov
cmp
inc
add
cmp
lea
push
mov
call
imul
scas
hlt
add
xchg
sbb
icebp
fst
lock
mov
add
jne
push
cmpsb
leave
mov
dec
cmc
fs
push
push
stc
add
mov
cmp
lahf
adc
and
mov
and
adc
jle
enter
and
filds
mov
pop
ja
bound
sarb
popa
xchg
popa
in
outsl
std
or
subl
xchg
push
adc
jbe
ja
andb
in
lret
cmpsl
in
cmp
sub
insl
or
je
jno
dec
aaa
jle
inc
dec
testl
sbb
mov
ljmp
nop
mov
outsb
subl
enter
adc
cli
mov
push
nop
clc
adc
fidivrl
movsl
popa
addl
mov
cmp
add
and
addr16
test
sub
cmpl
and
jg
iret
imul
mov
inc
sti
ret
imul
xchg
sbb
arpl
mov
fisttps
orb
add
scas
mov
dec
xorl
aas
sub
sarl
pop
movsb
and
adc
xchg
push
dec
mov
pop
xchg
inc
idivb
mov
out
and
mov
jle
fiadds
jb
icebp
xchg
lock
cmc
rcrl
lret
push
sub
push
mov
rorb
adc
sbb
cli
sti
and
fimuls
sti
xor
inc
xchg
int
mov
ljmp
cmp
add
out
lahf
push
cmp
mov
addr16
mov
sahf
pop
outsb
daa
inc
in
cld
pop
mov
repz
mov
cmp
addb
push
add
ret
push
lea
stos
lock
jecxz
jecxz
imul
in
out
lcall
xlat
shl
adc
or
push
popf
jle
pushf
sahf
int3
fdivs
jnp
add
outsl
xchg
sarl
bound
inc
orb
pop
add
sbb
fistpl
pop
test
sub
mov
stos
xchg
adc
mov
rorb
and
mov
loop
movsl
xchg
jne
rcr
jle
mov
xchg
sar
in
cli
testl
dec
je
push
jge
sbb
inc
xchg
inc
xor
inc
bound
popf
es
arpl
shrl
jb
mov
out
movsb
inc
mov
xor
icebp
mov
mov
lods
fisubl
dec
movsb
pop
sbb
adc
jo
mov
in
lock
into
pushf
popa
jne
xor
mov
add
pop
push
js
je
pop
fstpl
cwtl
popa
ss
cmp
jge
enter
jb
pop
adc
scas
fmulp
push
cmp
inc
mov
xor
leave
or
ss
xchg
mov
rorb
out
mov
pop
and
jge
je
xchg
stos
jg
out
repz
cmpsb
nop
mov
push
subb
dec
push
jmp
mov
leave
push
decb
scas
cld
insb
pop
aaa
out
mov
inc
fs
jmp
in
aas
push
outsb
dec
jno
or
mov
addb
sub
stos
pop
jo
push
ficompl
jb,pt
fdivrs
mov
pop
out
inc
cwtl
cmp
fisubrl
mov
lcall
xor
mov
add
fwait
outsb
sarl
jg
mov
mov
sbb
mov
add
lods
push
dec
loope
pop
fnsave
jae
iret
push
xor
pushf
mov
or
pusha
sub
stos
cmp
push
fcomp
addr16
dec
out
insb
sahf
imul
ds
ljmp
mov
push
xchg
sub
ffreep
icebp
mov
lret
ss
std
outsb
inc
lcall
push
mov
add
mov
jo
roll
popf
insl
mov
inc
inc
rcr
jns
pop
dec
jmp
aam
lret
add
xchg
jo
mov
mov
arpl
lods
lods
jbe
ret
jmp
pop
and
lret
mov
xor
movsb
pop
in
or
mov
pushf
lcall
add
ja
jecxz
inc
mov
mov
pop
add
cmpsb
adc
cmc
addb
or
rep
gs
mov
jns
sti
xor
gs
shlb
sbb
jo
popf
or
mov
in
and
xor
shlb
xor
sbb
cltd
dec
jecxz
jne
lret
dec
sub
cmp
gs
inc
test
imul
outsl
data16
xchg
enter
pusha
mov
jge
cld
int3
rorl
sbb
out
scas
mov
lret
jmp
xchg
add
fsubrs
inc
das
cmp
jbe
xor
inc
cmp
vmwrite
ss
dec
xor
push
mov
rcll
int3
std
popf
sub
cmp
fcmovne
hlt
push
insl
stc
cwtl
arpl
xchg
aaa
les
inc
xor
fwait
jbe
push
leave
mov
xor
add
sbb
outsb
enter
stc
mov
or
fsubl
mov
xorb
push
daa
cltd
outsb
adc
pop
sti
es
cwtl
and
arpl
adc
inc
sbb
and
flds
iret
loope
filds
out
insb
mov
fistl
dec
mov
xchg
adc
lret
jo
xchg
and
sub
out
lret
cmp
pop
adc
add
cmp
testl
sbb
push
push
pop
in
dec
xchg
or
inc
xor
sub
aaa
enter
lea
inc
ret
out
fsubrl
mov
les
adc
icebp
daa
scas
jnp
sti
rcll
pop
adc
mov
jp
pop
add
out
notb
loop
addr16
mov
mov
dec
mov
in
js
pop
dec
xor
cli
clc
xor
rorl
add
cwtl
shl
insl
out
cmpb
mov
inc
mov
pop
add
ret
shrb
fiaddl
dec
mov
stos
in
pusha
fstpl
pop
or
adc
insb
loop
xchg
adc
pop
and
pop
pushf
imul
out
fldl
test
xor
cmp
xchg
xor
addl
push
add
fs
lret
in
inc
sbbl
push
lods
arpl
or
cmpsl
jne
cmp
pop
jmp
cli
std
mov
incl
loope
mov
in
add
sarl
dec
xchg
jg
dec
dec
inc
push
insl
or
jbe
xchg
cltd
push
cwtl
inc
mov
push
xchg
xor
push
jmp
repnz
jo
push
decl
cmp
fs
or
fs
pop
shrb
in
fld
das
sub
cmp
stos
adc
std
pusha
cli
push
mov
push
mov
dec
push
mov
fidivl
mov
in
in
sbb
mov
dec
push
or
in
outsb
or
mov
loopne
fwait
jae
mov
pop
aaa
jnp
jno
push
jmp
mov
dec
test
mov
cmp
xor
inc
pop
cmovnp
sbb
test
sahf
scas
lret
sarb
dec
out
rorl
or
cmp
mov
leave
leave
movzbl
sub
mov
mov
adc
xchg
mov
loop
jnp
sub
hlt
pop
movsl
mov
dec
and
lock
xor
mov
xor
jmp
clc
jl
pop
dec
dec
std
cltd
fs
fildl
jo
pop
add
sbb
cwtl
pop
jo
lods
in
ljmp
fnstsw
inc
std
adc
in
sbb
loop
das
cs
inc
fcomps
ret
sub
filds
into
test
fcoml
pop
les
inc
aad
shl
mov
xchg
xlat
xchg
rcll
stos
ror
into
mov
sbb
push
mov
xor
or
lahf
inc
pushf
inc
dec
fidivrl
dec
dec
cmpsb
loop
shufps
jbe
inc
or
xor
pop
xchg
fisttpl
repz
or
push
xchg
loopne
out
das
inc
mov
das
inc
dec
or
sbb
add
dec
cmpsl
lret
dec
adc
mov
addr16
je
mov
pop
xor
mov
jae
pusha
dec
pop
movsb
xor
aaa
sbb
cwtl
jle
cld
cltd
rorl
out
xchg
jnp
nop
stc
repnz
rorl
rcrb
jns
les
push
push
sub
mov
clc
nop
sub
mov
mov
or
dec
sub
es
xchg
cmp
ror
roll
jo
jecxz
lret
or
cld
movsl
pop
xchg
int3
mov
loopne
sti
cmp
mov
in
leave
fsubp
xlat
pop
inc
mov
test
das
lcall
inc
fwait
xor
adc
dec
popf
arpl
nop
shll
fwait
inc
daa
mov
cmp
out
test
adc
cmpsb
push
outsb
and
mov
clc
lock
rcr
mov
and
pop
pop
mov
lahf
sbb
lahf
xor
xor
aad
ja
mov
into
scas
pop
imul
mov
enter
cs
mov
outsl
push
fsub
cmc
mov
xchg
lea
sti
adc
mov
xlat
mov
mov
add
outsl
repz
sub
cmpsb
jbe
lahf
or
lcall
adcl
orl
jmp
lods
xlat
pop
test
jb
mov
insl
jno
nop
std
push
pop
sub
sub
jmp
xor
stos
pop
das
int3
push
test
cmpsb
jo
xchg
addr16
push
das
jno
ja
pop
sti
pop
out
mov
ljmp
test
and
sub
clc
jb
setae
int
clc
mov
cmp
mov
rol
push
out
jb
daa
mov
pop
dec
pop
flds
cmpsl
addr16
call
fcoml
lds
fdivr
inc
add
cmp
pop
pop
rcrl
movsb
test
adc
xor
imul
xor
fcompl
idivb
xchg
dec
ss
mov
in
out
pop
addr16
push
add
mov
push
mov
mov
aam
mov
cmp
sbb
cmp
dec
outsl
push
fists
lea
fwait
and
pop
ljmp
push
loopne
jbe
dec
flds
repnz
stos
loope
pushf
incl
xchg
push
pop
ds
jbe
add
add
lds
mov
xchg
fstps
mov
xchg
xchg
pop
lds
hlt
add
mov
adc
mov
subl
pop
mov
pop
jecxz
and
mov
cmp
jne
sub
rolb
into
and
sub
cli
repnz
aas
xor
jbe
cmovge
adcl
xor
incb
les
sbb
into
add
jge
sbb
xchg
dec
sbb
and
cmpsl
pop
in
cmp
movb
mov
mov
fiaddl
jecxz
outsl
out
inc
notl
xchg
unpckhps
lret
out
pushf
adc
jp
mov
cmp
stc
mov
cltd
mov
xchg
ljmp
push
fwait
and
mov
out
xchg
inc
inc
test
andl
xchg
idivb
inc
jg
mov
xor
loopne
sahf
int3
pop
jbe
pop
mov
sbb
mov
inc
sarb
clc
pop
xor
xchg
jo
jo
pop
cmp
rcl
cmp
ja
aaa
arpl
inc
adc
mov
mov
arpl
push
cmovno
push
xchg
sbb
sbb
sbb
ror
fisttpl
cmp
insb
outsl
inc
push
out
subb
mov
jno
push
pop
iret
sarl
int
rorb
mov
imulb
shll
cmpsb
inc
jecxz
jb
pop
mov
sub
inc
or
sti
pop
mov
sbb
add
mov
test
mov
in
mov
mov
mov
sub
aad
ljmp
out
lahf
hlt
mov
clc
mov
cmp
in
and
out
xchg
push
pop
imul
adc
pop
stos
and
pop
mov
cmc
sarb
lea
dec
fidivs
lods
jp
sbb
jno
adc
data16
xchg
xor
lea
notl
aaa
adcl
movb
aas
aaa
frstpm(287
adc
add
mov
xor
jno
pop
fcompl
xchg
mov
inc
pop
daa
fistl
push
xchg
dec
cmp
push
pop
push
fildl
lods
dec
test
test
xchg
sarl
outsl
xor
call
cmp
jge
push
xchg
pushf
movsl
or
cld
mov
or
dec
sarb
mov
sub
in
loopne
mov
jns
sub
insb
jns
or
js
lock
mov
cmp
xchg
xchg
push
clc
pop
out
cmc
xchg
outsl
and
sbbl
repnz
mov
xchg
jns
sbb
fistpll
nop
inc
idivl
xchg
mov
and
in
and
scas
out
aaa
dec
pop
jmp
jmp
in
pop
mov
cwtl
fdivl
or
cmp
push
call
popfw
nop
ljmp
scas
jnp
in
movsl
stc
and
inc
cmp
jnp
lock
dec
and
push
xchg
andl
sub
negl
pop
es
jne
movl
jns
lret
nop
fstpt
push
les
mov
das
shl
loope
std
je
xchg
cmpl
or
fwait
dec
daa
imul
sbb
mov
popf
jb
pop
xor
js
call
aaa
jae
stc
mov
pop
ljmp
add
inc
lods
notl
push
mov
or
inc
addb
and
or
cli
jecxz
sbb
shr
dec
mov
les
pop
pop
sub
jmp
jp
sbb
insb
fsubs
ret
pusha
clc
mov
push
inc
test
or
jp
ja
loopne
lret
js
adc
pop
lea
sub
fbld
in
mov
push
ja
jmp
and
movnti
mov
mov
fucomp
out
addr16
pop
xor
insb
in
dec
jns
call
fistps
xor
mov
jle
stc
inc
jae
sub
loope
addr16
je
mov
adc
pop
loopne
enter
vdivpd
sbb
sub
nop
fdivs
arpl
mov
int
mov
jnp
push
shlb
stos
insb
sub
or
ds
lahf
imul
sbb
sbb
roll
push
xchg
add
adc
xchg
iret
jl
in
cli
test
or
repnz
out
or
std
adc
pop
or
dec
fildl
add
arpl
pop
repz
sbb
daa
or
adc
and
mov
push
cs
fisttpl
mov
and
mov
popaw
rorl
jp
push
push
loopne
es
push
std
insb
orl
xorl
mov
cmp
sub
adc
mov
loope
xor
jle
leave
jmp
ljmp
mov
sbb
sub
cmp
jge
cmc
xchg
inc
std
sub
add
cmc
cltd
ljmp
jmp
and
xchg
push
leave
lea
ret
jne
mov
sub
ficoms
insb
and
mov
push
in
dec
push
cmp
lock
ss
mov
cwtl
shrb
negl
popa
or
ss
or
rcrl
repnz
mov
add
call
outsb
fs
push
jle
lahf
std
pop
out
mov
mov
repnz
inc
flds
xchg
pop
lahf
cmpsl
int3
frstor
movsl
adc
or
nop
testb
xchg
inc
xchg
jg
fwait
cmpb
aam
inc
cmp
pop
rorl
adcl
sub
sbb
test
into
mov
and
js
dec
outsl
fldcw
insb
mov
outsl
sbb
mov
fucomi
ljmp
popf
int3
jmp
dec
andb
sub
movsb
sbb
cmp
adc
gs
pop
xor
arpl
xor
dec
jecxz
sbb
sti
es
into
and
cmp
pop
je
mull
int3
sub
and
push
push
scas
xchg
or
jbe
jl
cmp
insl
mov
shrb
mov
ja
inc
ret
std
ds
lret
lods
icebp
sahf
cmp
leave
cmpsl
mov
shlb
loope
xor
pop
aam
fistpll
les
dec
cmpl
je
mov
or
rolb
in
push
mov
outsb
sbb
push
stos
mov
scas
arpl
sbb
aad
cmp
or
pop
or
int
xor
sbb
mov
mov
aaa
sbb
popl
xor
pop
inc
fdivrs
mov
sbb
xor
mov
out
adc
addr16
out
das
or
pop
outsb
shlb
pop
sub
in
icebp
jnp
ljmp
inc
or
mov
mov
push
orl
sahf
mov
dec
push
movl
jbe
sub
sbb
pop
test
xor
bound
in
sahf
sbb
test
xchg
cli
jns
and
icebp
jl
scas
leave
or
fisubs
or
movsb
lods
jae
jns
jnp
pop
lcall
fcompl
cmp
int3
sbb
mov
out
jge
adc
popa
mov
scas
xchg
test
fistpll
jp
sbb
pop
xchg
rcll
cmp
xor
rcll
pop
js
push
sahf
dec
es
and
adc
dec
cmpsb
pop
fildl
dec
je
pop
mov
lea
add
pushf
cmpsb
data16
sub
add
mov
sbb
test
in
test
fstps
inc
and
sbb
dec
cltd
xchg
jae
or
loop
ds
jno
mov
inc
add
mov
pop
sbb
and
xchg
push
faddp
jae
sbb
test
ficoml
mov
inc
dec
sbb
icebp
sbb
pop
xor
jne
dec
cmpsb
sbb
push
stc
push
int3
outsb
xchg
lret
imul
mov
lds
mov
ret
test
pop
ret
lcall
fisubrl
mov
mov
push
or
sqrtps
or
test
bound
mov
sbb
push
lods
dec
pop
stos
shll
xchg
mov
xchg
push
dec
adc
xchg
test
xor
and
inc
xor
xchg
repz
inc
and
mov
cld
jns,pt
cmp
and
fwait
mov
xor
pop
fs
mov
or
in
testl
adc
cltd
push
imul
imul
and
fistl
inc
out
push
je
push
and
jne
dec
test
push
cs
stc
pop
jg
pop
sub
push
mov
imul
mov
fdivrs
pop
add
mov
add
add
add
add
pusha
call
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
fnop
fwait
lea
lea
cmpb
fwait
jmp
lea
jne
mov
mov
xchg
mov
fwait
jmp
mov
jmp
mov
test
jmp
xchg
jmp
jmp
xchg
jmp
jne
lea
fwait
mov
lea
mov
lea
pop
mov
mov
mov
mov
lea
popa
lea
jmp
lea
mov
mov
jmp
lea
mov
ret
jmp
xchg
lea
mov
lea
jmp
xchg
lea
mov
lea
xchg
lea
xchg
jmp
lods
lea
mov
mov
xchg
lea
mov
lea
jmp
jmp
jmp
fwait
mov
fwait
xchg
jmp
mov
xchg
xchg
fwait
mov
push
mov
mov
jmp
mov
xchg
lea
xchg
jmp
jmp
mov
mov
lea
mov
xchg
mov
mov
mov
xchg
lea
fnop
lea
add
jmp
fnop
jmp
xchg
xchg
xchg
lea
mov
mov
push
xchg
fnop
fwait
mov
lea
lea
mov
jmp
mov
fnop
add
mov
mov
mov
mov
xor
jmp
xchg
dec
lea
lea
mov
xchg
fwait
jmp
inc
jmp
mov
fnop
jmp
mov
fwait
fwait
lods
fnop
xchg
fwait
mov
jmp
jmp
jmp
add
lea
jmp
xchg
xchg
push
jmp
lea
lea
xchg
jmp
lea
lea
xchg
xor
mov
mov
lea
movsbl
lea
fnop
mov
lea
lea
lea
jmp
cmp
fwait
xchg
xchg
mov
je
lea
mov
fwait
mov
ror
fnop
xchg
lea
mov
add
fnop
lea
mov
fwait
lea
jmp
xchg
inc
xchg
lea
fnop
lea
jmp
jmp
cmp
jmp
jmp
mov
mov
jmp
mov
xchg
pop
jmp
mov
mov
jne
xchg
jmp
lea
fwait
mov
xchg
lea
lea
pop
xchg
xchg
jmp
lea
lea
mov
xchg
jmp
lea
mov
xchg
lea
lea
xchg
jmp
add
xchg
xchg
mov
fwait
mov
mov
fwait
lea
lea
fnop
fwait
fwait
xchg
mov
lea
fwait
add
jmp
xchg
mov
xchg
fnop
jmp
mov
lea
mov
mov
mov
fnop
xchg
fwait
xchg
lea
jmp
lea
add
lea
xchg
pop
fnop
jmp
fnop
lea
mov
jmp
lea
xchg
fnop
jmp
xchg
fnop
jmp
mov
add
fwait
lea
lea
jmp
fwait
mov
add
fwait
fwait
mov
mov
lea
lea
mov
mov
fnop
xchg
xchg
fwait
lea
mov
mov
jmp
fwait
fwait
xchg
xchg
jmp
mov
mov
mov
inc
lea
mov
fnop
fwait
lea
fwait
mov
fwait
mov
call
jmp
mov
jmp
rdtsc
mov
xchg
jmp
fwait
xchg
fwait
mov
mov
fwait
mov
fwait
mov
xchg
xchg
lea
fwait
pop
lea
xchg
lea
mov
xchg
xchg
mov
push
xchg
xchg
fnop
mov
jmp
jmp
xchg
jmp
xchg
lea
jmp
fwait
jmp
jmp
jmp
xchg
lea
mov
mov
lea
jmp
mov
lea
xchg
jmp
lea
lea
mov
xchg
xchg
jmp
mov
jmp
fnop
fnop
pop
fwait
xchg
mov
jmp
mov
fnop
xchg
mov
not
mov
ror
mov
fwait
xor
mov
fwait
jmp
push
mov
mov
fnop
jmp
xchg
xchg
pop
lea
jmp
jmp
lea
lea
xchg
mov
jmp
xor
fnop
mov
sub
xchg
mov
mov
pop
lea
xor
xchg
push
fwait
jmp
mov
lea
lea
mov
jmp
mov
pop
jmp
xchg
mov
xchg
sub
mov
lea
lea
mov
mov
jmp
jmp
xchg
jg
fwait
jmp
lea
fnop
lea
jmp
xchg
mov
xchg
mov
jmp
xchg
jmp
fwait
lea
jmp
pop
xchg
fwait
lea
rdtsc
xchg
lea
lea
xchg
lea
mov
mov
xchg
jmp
mov
xchg
jmp
lea
fnop
lea
rdtsc
fnop
xchg
xchg
sub
lea
xchg
sub
fwait
jmp
mov
jmp
mov
xchg
sub
jmp
jmp
mov
jmp
lea
mov
jmp
xchg
xchg
jne
xchg
fnop
mov
xchg
lea
fnop
mov
xchg
ret
jmp
mov
fwait
mov
popa
mov
mov
jmp
jmp
fnop
jmp
jmp
mov
mov
pop
lea
lea
mov
mov
lea
mov
xchg
jmp
lea
popa
fnop
jmp
lea
fnop
mov
cmpb
jne
pusha
call
mov
add
lea
lea
xor
call
push
push
push
push
call
mov
jmp
pusha
pushl
pushl
pushl
call
popa
add
cmpl
jne
lea
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
push
call
mov
test
je
mov
jmp
mov
mov
test
je
xor
push
mov
movl
jmp
pushl
pushl
call
test
je
mov
add
mov
jmp
inc
cmpb
jne
inc
mov
testl
jne
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
push
push
pushl
call
call
popa
jmp
popa
ret
push
push
mov
or
je
mov
mov
sub
add
pop
pop
ret
pusha
mov
or
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
rcrl
into
pop
add
imul
gs
xor
cs
insb
add
pop
add
lock
add
add
add
pusha
add
add
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
add
add
add
add
add
add
adc
adc
adc
add
add
add
add
add
pop
add
add
add
adc
adc
xor
adc
add
add
sub
gs
popa
in
xor
stos
aam
call
insl
ds
pop
adc
fwait
push
xor
pop
xor
scas
out
in
lds
dec
mov
std
jnp
xor
fsubrl
xor
daa
add
nop
xor
pop
cmpsb
jb
clc
loopne
inc
lcall
gs
enterw
pushl
xchg
pop
push
lock
idiv
stos
pushl
fwait
sbb
gs
jle
jecxz
aas
push
or
test
inc
add
sub
xchg
push
dec
mov
mov
int
int
andl
push
outsb
xchg
out
mov
nop
std
mov
ret
divb
jecxz
daa
lret
mov
fbld
je
dec
cmp
jg
sbb
js
sub
xor
repz
ds
gs
or
negb
sahf
lcall
sbb
icebp
pop
sbb
or
sbbb
out
xor
cmpsb
inc
movsl
aam
imul
inc
xor
int
push
mov
loopne
push
call
nop
ss
mov
lds
push
testb
cmp
imul
std
stos
aas
dec
pop
es
fsub
mov
pop
jae
es
jecxz
inc
mov
cmpsl
lret
imul
enter
and
out
sti
pop
or
xchg
adc
add
adc
cs
pop
std
les
cmp
mov
imul
push
testl
lret
fiadds
fcompp
mov
hlt
outsl
pop
and
aaa
pop
in
xchg
nop
jae
xchg
pop
shl
cld
stos
fisubrs
loop
loop
add
roll
push
outsb
out
je
mov
scas
enter
cwtl
pop
mov
fimull
mov
fdivs
adc
push
iret
int3
in
int
insb
xor
push
inc
outsl
outsl
ret
icebp
lret
mov
dec
popa
add
jo
cmp
test
das
cmp
hlt
addr16
jmp
mov
loopne
roll
jbe
cmpsb
pop
add
sbb
fbld
jns
push
sbb
push
xor
hlt
and
jmp
mov
mov
jno
mov
sarb
loop
mov
enter
mov
je
push
ret
iret
arpl
in
test
xchg
cmpsb
adc
inc
adc
jp
mov
in
lea
test
test
xchg
adc
push
jbe
shlb
rcr
cmp
or
or
cmp
mov
push
and
mov
and
mov
sbb
addl
inc
push
push
sahf
es
push
sub
aaa
imul
xchg
lock
insl
mov
jno
lds
fimuls
sbb
xlat
mov
subb
mov
jmp
scas
outsb
sub
lods
mov
es
shlb
or
pusha
divb
adc
jns
mov
or
pop
repz
cmp
test
dec
lahf
add
xlat
mov
xor
outsb
je
and
push
mov
pushf
mov
test
dec
int
sub
mov
or
sbb
sub
pop
lcall
int
add
jno
ffreep
mov
outsl
ja
adc
mov
xchg
add
ss
fwait
jmp
push
push
push
sbb
add
xchg
mov
stos
and
js
das
xchg
add
sbb
mov
test
pop
and
hlt
lret
dec
xlat
pop
push
std
inc
mov
xlat
jbe
pop
pop
adc
inc
out
sub
cmp
pop
cmp
lds
aaa
aas
jns
fstpl
movsl
loop
or
cltd
js
jmp
mov
adc
scas
adc
pop
nop
fs
adc
sbb
inc
jae
cmpsb
movsl
sbb
cmpsl
push
and
out
sbbl
popf
rorb
add
inc
add
add
add
add
add
add
add
and
add
xor
add
add
add
add
push
add
gs
dec
add
add
add
add
dec
dec
inc
cs
insb
add
pop
imul
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
add
add
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
add
orb
add
fadds
add
lock
cmpb
add
or
add
and
add
cmp
add
push
add
addb
add
addb
addb
add
mov
add
enter
xchg
add
loopne
add
clc
add
sbbb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
insb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
in
add
add
add
enter
sub
add
in
add
add
add
hlt
sbb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
in
add
add
add
cmp
add
addb
add
add
add
add
add
add
add
add
add
add
