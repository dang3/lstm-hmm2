jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
cmp
push
jb
jnp
push
mov
xchg
in
jae
add
add
add
add
add
adc
inc
add
aas
add
add
add
add
add
add
add
aaa
add
movsb
add
mov
jae
mov
dec
add
add
add
and
pop
add
cmp
rolb
dec
add
add
add
add
jae
adc
push
add
lock
add
add
add
and
jae
mov
add
jle
push
add
sub
add
or
add
pop
add
add
leave
add
add
add
add
push
add
sub
mov
pop
add
add
test
addb
add
mov
sub
test
jle
fiaddl
jae
and
inc
add
add
add
add
add
add
inc
add
leave
add
add
add
add
push
add
sub
in
verr
add
and
jne
push
add
add
add
or
add
cmp
push
add
js
pop
add
add
sbb
add
jae
and
mov
jns
arpl
adc
add
adc
inc
add
add
pop
add
add
add
add
flds
test
jae
cmp
add
jae
mov
add
add
push
add
add
add
add
inc
add
add
js
lds
sbb
add
flds
daa
add
js
cmp
cwtl
add
add
push
add
add
add
fiaddl
jl
add
push
add
add
add
flds
jae
jae
add
dec
add
add
add
add
dec
add
push
add
add
add
add
add
daa
add
add
add
add
add
or
add
fldl
inc
add
add
or
push
add
add
add
add
add
inc
add
add
add
add
addb
add
add
and
js
or
inc
add
add
sbb
add
jae
mov
jb
add
xor
mov
jae
and
test
or
cwtl
add
push
add
add
add
add
mov
aad
inc
add
dec
add
cmp
add
and
jae
jle
cmp
inc
add
pop
add
add
add
and
jae
xchg
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
mov
pop
add
add
add
add
adc
mov
inc
add
loopne
xlat
add
jl
cmpsb
add
int3
add
add
add
add
add
add
add
add
add
add
jl
adc
add
add
add
add
add
dec
add
mov
pop
add
xchg
add
add
xchg
sub
or
add
int3
add
add
add
adc
add
cmpsb
add
test
rolb
lods
add
add
add
add
add
mov
xor
pop
add
dec
add
mov
jae
push
add
add
inc
add
add
flds
sub
out
inc
add
add
fiaddl
sub
addb
add
add
add
add
add
fiaddl
jecxz
push
add
jae
jb
js
popa
add
add
in
add
pop
add
roll
add
inc
add
add
add
flds
push
add
add
add
add
add
add
add
add
add
mov
insb
js
repnz
sbb
cmpsl
mov
loope
fwait
mov
push
mov
cs
xchg
push
push
stos
jl
add
call
mov
rorl
dec
or
xor
fnstcw
mov
or
sub
push
mov
or
adc
jne
insb
stc
sub
mov
aam
addr16
lahf
dec
shlb
xlat
push
lock
test
mov
push
dec
ljmp
jl
inc
stos
jae
cwtl
mov
aam
mov
mov
jae
lahf
push
or
mov
add
cld
inc
int3
push
inc
jbe
sqrtps
ficoml
pop
stos
jbe
jmp
test
sub
inc
adcb
aaa
sahf
and
push
test
cmpsb
orb
push
mov
sahf
shll
test
sti
push
inc
int
cld
mov
mov
mov
mov
push
pop
andb
hlt
iret
cltd
aaa
popf
jecxz
xor
cmpsb
test
xchg
xchg
xchg
mov
lods
add
dec
shlb
fmulp
pop
or
add
loop
call
xlat
adc
popf
jl
mov
xchg
and
cmc
inc
cs
or
mov
jo
fnstenv
push
pushf
mov
int
mov
push
clc
push
xchg
pop
cltd
lods
adc
test
mov
add
cmp
pop
push
in
dec
scas
out
cs
lods
loope
out
dec
lods
cmp
out
scas
adc
mov
jp
sub
pop
stos
stos
mov
mov
adc
imul
insl
pop
inc
scas
arpl
lcall
and
stos
cmp
repnz
icebp
jmp
or
aas
push
mov
push
sbb
pop
cmp
lahf
add
or
sahf
jmp
stos
pop
push
stc
xchg
adcb
sarb
jns
jle
push
stos
lea
xchg
es
add
sub
inc
cmp
mov
sub
fdivrp
jbe
les
jne
mov
mov
and
test
sbb
out
mov
outsb
addr16
mov
sub
pushl
mov
inc
mov
cltd
out
mov
mov
sti
xor
or
xor
sbb
loop
scas
fwait
push
jmp
stos
mov
out
imul
mov
shl
lcall
pop
jg
add
test
lock
sbb
push
and
daa
int3
scas
pop
out
sbb
je
pop
dec
cs
stos
or
in
cmp
insl
jecxz
jnp
fcmovnu
pop
pop
into
stos
jb
call
aas
push
adc
jmp
data16
repnz
lret
push
iret
das
inc
add
stc
push
pusha
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
out
divl
data16
fistpl
je
pop
out
sub
push
jbe
push
out
xchg
daa
xchg
push
out
divl
data16
push
cmpsl
push
cmpsl
xchg
jecxz
imul
testb
push
push
xchg
push
incb
jbe
iretw
push
mov
es
addr16
lcall
inc
ret
jne
js
stos
and
fildll
jbe
fidivrs
mov
daa
push
rcr
ret
mov
push
out
jge
into
cltd
xchg
xlat
push
inc
enter
sub
sbb
loope
sub
push
jnp
pushf
jno
adc
mov
addr16
ja
sub
sti
mov
pop
cmpsb
push
push
mov
data16
cmpsl
adc
pop
xchg
or
mov
clc
xchg
pop
test
cmp
ret
arpl
ds
nop
mov
fwait
out
lds
cmpsl
xchg
stos
sbb
pop
aam
hlt
adc
sbb
ud2
xlat
repz
inc
out
fisubs
push
cmpsl
push
mov
xchg
mov
addr16
outsl
negb
dec
xchg
aas
xchg
mov
cmpsb
push
pop
out
test
mov
je
push
jmp
repnz
or
xor
push
and
push
cmpsl
inc
stc
dec
repz
mov
xchg
adc
and
push
xchg
push
call
arpl
out
negl
mov
push
mov
xchg
xchg
addr16
ja
inc
out
xchg
daa
xchg
mov
cmpsb
pop
push
out
divl
data16
push
cmpsl
push
mov
xchg
xchg
addr16
ja
inc
out
xchg
daa
xchg
mov
cmpsb
pop
push
out
in
inc
dec
aad
sub
pop
push
push
setl
fs
aad
mov
push
cli
fisubl
sbb
mov
pop
xchg
jbe
into
andb
dec
enter
push
inc
xchg
mov
test
inc
cmc
add
movsl
pop
push
adc
or
cmp
mov
xchg
popa
cmpb
xor
or
into
mov
nop
fisubs
pop
cld
sbb
or
test
jecxz
ret
loopne
adc
decl
fucomp
adc
mov
shrl
cmp
sub
pop
mov
movsb
ja
mov
push
jge
inc
in
outsb
loop
cwtl
jnp
xchg
dec
jge
fwait
mov
jg
ret
hlt
loopne
addl
je
mov
out
ljmp
mov
data16
lods
cmpsl
adc
outsb
addr16
lret
sub
ja
out
popf
sbb
fmull
aaa
dec
repz
cld
jae
jmp
rcr
test
sbb
popf
pop
idiv
mov
int3
or
dec
inc
les
xchg
adc
mov
and
dec
inc
cmp
cmp
in
mov
sbb
shrb
dec
adc
sbb
and
fwait
pop
add
cwtl
lods
jns
inc
mov
xchg
clc
dec
xchg
mov
call
mov
cs
lods
nop
sub
leave
popf
add
jo
pop
out
xor
inc
imul
cs
push
adc
mov
sahf
dec
ret
mov
jnp
mov
pop
cmp
mov
cltd
inc
and
push
insb
push
push
jge
ljmp
mov
aas
test
dec
mov
jb
sahf
shll
and
sbb
test
sub
mov
adc
mov
lret
mov
adc
lret
or
popf
sti
sti
jns
mov
xor
sar
arpl
lods
shrb
fcom
insl
rcrl
dec
xor
xchg
cli
insb
jo
push
subl
xchg
mov
adc
xlat
cmp
mov
and
repz
add
and
or
mov
ljmp
dec
mov
or
and
xor
popf
stc
jge
leave
sahf
jecxz
mov
jae
test
xchg
out
lea
xchg
inc
sub
jo
out
les
jnp
or
and
mov
cmp
sub
jp
lea
add
xor
inc
jl
push
push
cli
sub
fiadds
jb
test
or
cmpsl
pushf
je
scas
sub
cmp
jno
xlat
xchg
daa
mov
push
or
pop
iret
and
mov
cmpsb
in
sbb
mov
push
cmc
jge
arpl
fs
icebp
push
pop
mov
push
push
pop
sub
or
lods
jae
mov
cmp
ds
test
pop
jmp
jno
fnstenv
mov
aam
lret
cmp
ds
enter
cmp
mov
ds
pop
scas
push
lea
xor
xor
scas
cmp
es
jle
fcmovnb
insl
ds
mov
loopne
xchg
ss
sti
test
and
aam
nop
nop
fld
xor
cmp
add
pop
test
pop
and
push
imul
mov
xchg
and
jmp
mov
stos
cmp
xlat
xchg
lds
inc
adc
fs
cmp
insb
cli
std
adc
jle
adc
sbb
mov
stos
cmp
fistl
faddp
jae
xor
pop
loope
dec
xchg
or
sub
jns
paddsb
sahf
pop
aad
xchg
es
lret
mov
pop
in
stc
dec
add
push
rep
fwait
mov
dec
test
and
and
add
pop
daa
mov
fnsave
adc
aaa
mov
test
in
xor
stc
fstl
cmp
imul
stos
out
sahf
or
jecxz
inc
mov
mov
les
scas
and
stos
aam
jne
aaa
mov
push
sbb
test
stos
lea
xchg
mov
inc
gs
xor
sub
cmpsl
inc
add
iret
inc
pop
andl
jb
cwtl
addl
xchg
fs
adc
and
mov
movsb
test
xchg
dec
xor
mov
test
mov
aam
lock
scas
inc
sub
mov
cld
pop
mov
push
icebp
pop
int
shr
mov
dec
cmp
loop
xchg
out
faddp
cld
mov
dec
addr16
aaa
mov
ljmp
in
fwait
mov
mov
leave
mov
pop
cmp
cmpsb
push
loope
cmp
jmp
pusha
add
cwtl
ds
loope
jbe
mov
fisubs
push
mov
sub
cld
out
das
mov
test
xor
sub
xchg
imul
repnz
push
mov
sub
pop
imul
xlat
or
adc
repz
aam
inc
jb
nop
ss
fwait
xor
add
push
loopne
push
test
and
sub
mov
cmp
add
mov
repz
aas
test
mov
adc
or
sbb
adc
cli
in
shl
sbb
sahf
pop
sub
or
push
inc
int
xchg
mov
mov
cmp
fwait
jne
aas
xchg
js,pt
adc
jbe
mov
and
loope
pop
in
jle
or
xor
adc
enter
cli
int3
scas
and
cmp
out
pop
ja
popa
xchg
lea
dec
xor
add
add
mov
xchg
les
cmpl
adc
sub
inc
cmpsb
dec
pop
cld
xchg
iret
sahf
out
fwait
inc
fucom
lret
pop
mov
xlat
mov
xor
xchg
bound
repz
ret
in
cld
in
shrb
push
xor
mov
cvtps2pd
xchg
xor
and
sbb
or
adcl
add
stos
lret
aaa
pop
xor
aam
sub
cmp
mov
fsubrl
mov
call
mov
cmpsb
and
pop
loop
in
lods
push
jns
push
sbb
rol
lahf
jecxz
sub
in
lods
fwait
sbb
leave
cmp
fwait
xor
inc
std
push
mov
sbb
jb
pop
loopne
sub
push
sub
jae
repnz
and
pusha
dec
fsubl
inc
jo
cmp
mov
pop
and
nop
xlat
jne
sub
jge
xor
int3
in
xchg
lahf
pop
and
mov
mov
mov
inc
int3
jp
loop
rorl
fcmovne
in
sbb
fnstcw
scas
daa
inc
mov
inc
cmpsl
add
enter
mov
data16
sbb
dec
push
sbb
push
xchg
pushf
mov
pop
mov
mov
shll
pop
or
inc
xchg
and
pop
scas
xor
pop
sbb
inc
fisubrl
out
imull
add
sarb
decb
xchg
call
insb
jg
ss
lahf
sub
jge
push
fisubs
mov
mov
jge
xlat
sbbl
clc
pop
push
push
mov
divl
inc
hlt
xchg
popa
jne
int
shrb
mov
shll
jnp
test
push
mov
fadds
dec
fcoml
and
fwait
add
notb
stos
cmpsb
dec
lds
in
lock
xchg
cld
popa
mov
xor
imul
mov
mov
mov
es
push
lds
jo
ds
stos
xor
mov
leave
mov
fcomps
jae
out
imul
adc
pop
push
and
icebp
jne
out
fldenv
inc
in
mov
imul
lret
mov
insl
cmp
push
and
xor
xchg
ficomps
stos
mov
jmp
cmpsb
xchg
xchg
mov
mov
xor
loope
in
or
and
jae
push
inc
ret
mov
inc
cmpsl
popa
push
mov
insb
dec
and
mov
popf
jle
xchg
dec
mov
sub
inc
wrmsr
mov
jge
fildll
push
or
dec
cmc
stc
fdivs
pop
adc
and
testb
sbb
fsubl
and
adc
pop
sub
lea
popf
push
cmp
scas
pop
cwtl
adc
mov
sbb
out
add
adc
js
adc
pop
mov
leave
jmp
or
das
into
insl
notl
and
fst
popa
and
inc
fimuls
pop
arpl
add
icebp
add
adc
jp
out
pop
xchg
decb
jne
int
fisttpll
sbb
stc
pusha
fucomi
cli
or
sbb
scas
jae
xchg
loope
aaa
push
fcompl
je
icebp
in
sti
push
popa
sbb
mov
inc
outsl
sbb
xlat
aas
and
repz
or
das
sti
rol
push
lcall
test
mov
cmp
jp
fmul
outsb
adc
shrb
xchg
cld
adc
xchg
jns
leave
mov
pop
push
push
sub
or
mov
aad
insl
insl
and
aam
fwait
movsb
and
outsb
arpl
addr16
imul
aam
inc
adc
sbb
xchg
idivl
jae
out
cmc
lock
inc
dec
push
aaa
repz
add
push
or
or
repnz
fidivrs
repz
adc
mov
dec
xchg
sub
add
mov
fists
jg
cmp
cmp
mov
into
mov
dec
int3
lods
mov
pop
out
enter
lcall
jecxz
mov
pop
neg
sahf
dec
jno
inc
or
cwtl
sbb
push
inc
in
add
rcrl
jno
inc
ficompl
js
arpl
lret
nop
push
push
pop
mov
mov
in
ds
inc
and
fdivs
stos
adc
or
loope
jnp
fistl
xchg
int
xchg
loopne
call
lds
notb
jbe
mov
pop
or
xor
int
sub
imul
xchg
push
jl
call
stos
xchg
ljmp
mov
jo
xor
sub
mov
cwtl
movl
pop
or
mov
mov
pusha
mov
repz
fsubs
pop
xor
nop
dec
inc
ret
in
adc
xchg
js
mov
insb
add
aaa
inc
xchg
cmpsb
jle
clc
add
das
and
pusha
and
insl
xorl
imul
pop
adc
xor
in
inc
es
sbb
dec
test
test
jecxz
mulb
xor
cmc
les
aad
cmp
xchg
push
outsb
jns
sub
dec
outsl
push
cwtl
daa
add
push
xor
sub
and
popf
popa
push
fs
test
popa
call
sub
mov
dec
enter
shrb
sbb
loop
std
cmp
pop
mov
pop
pop
lahf
xor
popa
xor
cmc
ficoml
imul
stos
aam
popf
pop
jns
iret
bound
push
mov
push
push
push
insb
sub
adc
jmp
aas
out
jo
pop
dec
sahf
loopne
lahf
cwtl
stos
xorl
inc
hlt
and
arpl
fs
iret
sbb
shll
sub
inc
roll
movsl
cmp
cwtl
xorb
and
inc
lods
sbb
sbb
mov
inc
and
sub
repz
mov
add
jmp
cmc
mov
addr16
inc
mov
mov
les
and
aaa
dec
faddl
out
pop
mov
inc
nop
hlt
shl
mov
mov
aam
rclb
jle
mov
insl
lahf
in
pop
ljmp
lods
pop
sub
insl
pop
stos
das
mov
sbb
xchg
mov
add
mov
sub
cmp
fnstenv
add
mov
out
lods
fldenv
add
mov
adc
push
cmp
lods
inc
push
add
inc
jae
cwtl
mov
xorb
in
cmp
es
jmp
addb
xor
sub
xor
fstl
add
or
fldcw
mov
push
sub
pop
aam
pop
out
fcmovbe
in
shl
adc
sub
xor
out
or
and
mov
movsb
outsl
xor
out
jmp
fmul
and
add
clc
jne
mov
mov
sbb
notl
fcmove
and
dec
add
imul
cs
pushf
sbb
pop
lock
xchg
sub
sub
or
out
adc
data16
sub
and
mov
mov
shlb
lret
movsl
je
loop
shl
sbb
rol
int
jb
mov
xchg
daa
sbb
jb
fucomi
imul
les
andl
dec
sub
popf
fnstcw
dec
sbb
push
scas
jmp
into
push
pop
movsl
sub
mov
iret
mov
loop
jbe
ss
cmp
mov
test
dec
imul
js
out
test
push
sub
scas
adc
sbb
outsl
scas
mov
sti
shl
bnd
nop
mov
rclb
inc
add
pop
mov
aaa
ret
stos
pop
mov
mov
js
ljmp
sub
mov
mov
mov
pause
sub
stos
cmc
lods
jmp
jge
in
xor
arpl
adc
loop
or
repnz
add
dec
and
mov
les
cmc
ret
xor
inc
jne
sbb
mov
std
fwait
scas
and
mov
rclb
sub
sub
inc
mov
mov
jns
mov
fldl
int
scas
push
mov
sub
xchg
out
jns
jle
in
clc
dec
jg
icebp
and
adc
into
lcall
stos
lret
mov
push
push
lds
jnp
sub
stos
pushl
mov
fsubrl
sub
stos
mov
sbb
jbe
insl
test
xor
mov
test
fwait
inc
pop
inc
jnp,pt
aad
xchg
mov
gs
clc
movsb
in
in
dec
insl
lods
enter
xchg
repz
mov
adc
sahf
outsb
xor
or
outsb
push
insl
iret
inc
or
mov
push
imul
movsl
mov
push
aas
cwtl
fwait
lods
pop
les
xchg
cld
jle
or
inc
cmp
ja
push
shlb
imul
or
or
add
and
int
dec
inc
push
shll
xchg
sub
in
pop
mov
data16
sbb
pop
sub
es
in
xlat
js
into
mov
inc
adc
into
lods
stos
dec
leave
dec
cwtl
dec
int3
test
inc
pop
inc
mov
cmpsb
cmp
out
dec
into
frstpm(287
xchg
ret
push
lahf
mov
cmpsb
inc
stos
in
pushf
js
dec
mov
jle
sub
inc
dec
out
inc
lods
xor
xchg
cmp
jne
call
loop
imul
int
out
test
adcb
out
xlat
pop
scas
xchg
mov
ficompl
dec
and
mov
out
mov
push
mov
xchg
jno
mov
in
loopne
rorb
mulb
inc
cld
inc
add
outsb
cmp
xchg
cmpsl
sbb
xchg
cmp
fst
fdivr
inc
mov
mov
push
fwait
andl
push
xor
and
push
test
xor
push
pop
mov
cmp
xor
push
pop
std
out
outsb
xor
sub
adcl
ss
mov
and
pop
lods
in
push
jno
sarb
scas
imul
push
push
jae
xor
xchg
push
mov
sub
jge
push
jo
fsubrl
push
jae
and
repz
in
loope
pop
popa
dec
cli
cltd
dec
mov
jg
push
jae
xchg
movsb
sbb
in
inc
es
andl
sti
mov
fnsave
jnp
lret
mov
pusha
push
xchg
movsb
lods
cmc
xchg
push
test
imul
cmp
xor
jne
jg
mov
pop
aas
sbb
aam
dec
int3
out
push
sub
cmpsb
clc
push
pop
jae
jmp
iret
xchg
std
movl
mov
repz
addr16
arpl
dec
sub
mov
or
pop
jg
push
scas
stc
sbb
add
lret
sub
inc
or
mov
cltd
imul
or
lret
dec
iret
cwtl
sub
jg
test
mov
xor
aas
in
rclb
xchg
loopne
inc
imul
fildll
fcoml
lock
out
push
inc
in
mov
fistpll
fsincos
mov
aad
stos
and
mov
or
int3
or
or
and
jae
movsb
xor
pop
insb
rorl
fs
cmpsb
fs
mov
pop
div
data16
lret
fisttpll
dec
cld
movsl
mov
ret
sub
pop
fildll
cmp
std
xor
icebp
xor
pop
jo
mov
test
jb
iret
callw
jne
mov
lahf
pop
mov
xchg
nop
adc
inc
data16
mov
roll
ret
adc
push
pop
loope
xchg
dec
add
jno
repz
das
test
jb
sub
xor
bound
ficoml
sahf
jmp
je
lods
fs
lret
xor
dec
lret
push
push
xor
leave
sti
xor
leave
and
pop
mov
test
inc
mov
iret
mov
hlt
xor
push
push
push
fcmovnb
adc
mov
out
jbe
pop
sahf
add
push
xchg
test
iret
cmpsb
test
pop
pop
and
ror
xor
sub
divl
inc
pushf
je
fnsave
cmpsl
or
leave
cmpsb
idivb
rolb
test
add
push
clc
adc
pusha
push
pop
or
xchg
rcrb
cmp
adc
test
inc
jmp
xor
cs
mov
jbe
pop
dec
and
jo
fnsave
arpl
add
adc
cmp
mov
jo
cmpb
cmp
shll
es
mov
jmp
stc
mov
or
fisubrs
sahf
push
in
pop
pop
movsl
or
dec
xor
mov
or
ss
or
xor
jns
test
aaa
xor
cmp
push
mov
add
sbb
sbb
mov
pusha
js
aam
jb
dec
out
push
aam
inc
sbb
lods
test
jg
out
scas
xor
shl
movsl
pop
mov
push
sub
mov
js
add
subb
dec
outsb
loope
insl
and
lcall
xor
stos
xor
push
into
outsb
int3
push
cltd
jecxz
jle
lcall
fwait
cmp
nop
dec
in
ficoms
sub
mov
xchg
stos
fs
sub
in
xor
xchg
aad
sahf
daa
jecxz
jge
imul
and
mov
mov
push
test
xchg
or
aam
or
inc
adc
mov
mov
test
jmp
pop
and
aaa
inc
adc
mov
push
xchg
lods
jb
push
fimuls
ss
lea
lahf
push
adc
xchg
mov
xchg
hlt
xor
sub
lret
lds
add
jae
mov
xchg
jge
ss
mov
ss
xchg
fisttpl
scas
jl
adc
mov
and
test
lcallw
lock
outsb
mov
push
popf
inc
jno
fcomps
mov
mov
cltd
mov
stc
add
mov
pop
inc
clc
cld
xchg
xchg
inc
push
mov
or
mov
xchg
or
cltd
or
sbb
mov
es
bound
into
cmp
sub
inc
or
out
pop
clc
push
jb
dec
push
fcmovne
jne
mov
cmp
sub
inc
dec
or
cmc
lock
cwtl
andl
sbb
xor
sti
pop
and
sbb
jb
les
cltd
popf
mov
int3
and
mov
leave
mov
stos
ljmp
jg
cmpsb
and
sbb
shr
ljmp
mov
mov
fisubrl
into
and
mov
das
cwtl
push
mov
sbb
pop
mov
dec
mov
addb
fildl
loope
jnp
icebp
daa
push
ret
lret
clc
arpl
jge
sahf
popa
out
scas
pop
je
aam
fldcw
dec
dec
out
neg
loopne
leave
aad
add
jl
cli
pop
imul
and
push
inc
int3
test
mov
add
stos
mov
adc
stos
and
sub
adc
cwtl
pusha
mov
inc
or
jle
fildll
inc
rolb
jecxz
dec
fcmovnb
xor
inc
cmp
stc
jne
nop
test
insl
cmp
iret
ficoml
mov
xchg
negb
and
arpl
rcll
cltd
dec
test
pop
push
mov
push
rcrb
jmp
sbb
push
inc
dec
or
and
daa
popl
addr16
jle
inc
jp
jecxz
adc
sub
add
aas
divl
data16
push
cmpsl
push
mov
xchg
xchg
addr16
ja
inc
out
xchg
daa
xchg
mov
cmpsb
pop
push
out
divl
data16
push
cmpsl
push
mov
xchg
xchg
addr16
ja
inc
out
xchg
daa
xchg
mov
cmpsb
pop
push
out
div
data16
xchg
cmpsl
push
mov
xchg
ja
inc
out
xchg
daa
xchg
mov
cmpsb
adc
inc
repz
data16
push
cmpsl
push
mov
xchg
push
addr16
fstpl
and
scas
testb
push
push
dec
inc
fidivrl
out
pop
je
fs
ljmp
mov
mov
lcall
inc
pop
xor
and
icebp
ljmp
mov
mov
lcall
inc
pop
xor
and
adc
add
icebp
xor
out
test
out
lcall
xor
jno
and
xor
cmp
or
aaa
sbb
rol
loope
imul
sbb
pop
pop
iret
iret
stos
pop
mov
mov
nop
mov
mov
jg
push
leave
je
jns
add
xchg
icebp
mov
inc
stos
push
adc
inc
mov
pusha
push
pop
shl
sub
push
out
icebp
imul
pop
jmp
es
stos
leave
inc
xchg
bound
xchg
cmp
jns
mov
sub
add
sbb
mov
dec
fidivrl
mov
mov
mov
mov
mov
xor
mov
push
das
push
mov
inc
push
xor
and
adc
add
rcr
rcll
mov
jp
or
pop
pop
push
jg
lods
in
mov
lods
mov
aad
aad
jb
adc
add
and
ja
dec
or
add
jecxz
nop
scas
test
jecxz
xor
cmp
inc
cmp
dec
and
adc
add
icebp
ljmp
mov
mov
lcall
inc
pop
xor
and
adc
add
icebp
ljmp
mov
mov
lcall
gs
mov
sub
popw
int3
jp
or
arpl
test
jne
repz
leave
inc
in
jb
inc
arpl
pop
scas
push
lock
adc
fs
cmpsl
std
sahf
inc
scas
outsl
mov
out
outsl
cmp
mov
fisubs
mov
cmp
subl
sub
aad
mov
dec
subl
mov
mov
iret
aad
arpl
xorl
cmpsl
mov
cmpsl
mov
fwait
inc
and
loop
gs
jno,pn
or
adc
xor
xchg
jb
outsl
jae
xchg
cwtl
out
jns
pop
enter
jnp
in
sbb
movsl
or
insb
pop
jl
in
jge
imull
mov
cmp
popa
sbb
gs
test
loop
data16
sub
add
lret
mov
movsb
repnz
jge
andb
pmaxub
shrl
lea
push
jae
aas
lods
cmp
daa
jnp
jb
aas
arpl
cs
mov
pop
sub
scas
or
test
xorb
sub
xor
mov
inc
xchg
add
les
pop
addb
imul
pushf
inc
icebp
lcall
jle
mov
xor
aad
in
outsl
addr16
shlb
movsb
aam
mov
pusha
mov
push
pop
pusha
mov
mov
xor
mov
shlb
mov
and
jle
scas
cmp
jno
mov
out
and
cmp
shrl
movsl
lahf
mov
pusha
mov
call
add
lret
out
push
loope
xor
sub
movsl
insb
repnz
cmp
mov
div
push
mov
loope
mov
xor
dec
add
es
mov
inc
nop
mov
mov
jae
icebp
pop
out
outsb
xchg
inc
lock
pushf
jo
jnp
pop
ds
out
movsl
dec
iret
aaa
aas
mov
or
mov
dec
call
xor
fiadds
iret
xor
repnz
sbb
sbb
int3
xchg
mov
push
les
fs
jp
stc
arpl
cltd
daa
stc
nop
outsb
cmpsl
ljmp
pop
rep
xchg
subb
xlat
outsl
inc
int
in
cmp
clc
add
hlt
frstor
stos
push
mov
jne
out
ljmp
or
jmp
jo
lods
test
bound
enter
add
mov
push
scas
mov
lret
repz
cld
xlat
sub
jae
sbb
aaa
push
data16
sbb
xor
or
sbb
dec
das
xchg
inc
jmp
and
pop
mov
lods
adc
cli
inc
sbb
aam
push
cmc
jmp
pushf
cld
mov
scas
jae
dec
mov
enter
les
scas
fiadds
xor
push
stos
mov
cld
lods
mov
hlt
js
es
in
push
jbe
mov
mov
dec
call
cmc
ljmp
mov
cmp
js
cmpsb
xchg
test
sub
or
daa
push
xor
xchg
jp
sbb
or
ss
out
cmp
popa
cs
inc
fstl
sub
pushf
jl
jl
test
jp
push
jbe
cmp
mov
mov
xor
in
and
fildl
test
add
pop
push
mov
movsl
pop
mov
addr16
jbe
inc
add
dec
mov
sbb
pop
push
fstpl
pop
je,pt
out
jbe
xchg
imul
andl
in
xchg
gs
outsl
adc
lret
andl
jns
mov
insb
push
shll
mov
pop
sbb
mov
xchg
ret
cmp
adc
subb
scas
iret
sub
clc
test
mov
rcrb
hlt
push
cmp
mov
ret
pop
inc
ds
pop
aas
cmpsb
repnz
aas
pop
movsb
icebp
loopne
xchg
xchg
mov
or
ret
jl
sbb
scas
and
icebp
clc
mov
mov
jecxz
mov
scas
fists
push
xchg
cmp
out
imul
dec
outsb
or
and
int3
mov
dec
mov
pusha
out
xor
das
leave
mov
xor
adc
loope
popf
inc
outsl
movsb
mov
push
mov
jmp
sti
test
mov
and
inc
add
sahf
mov
add
cltd
mov
xchg
fadds
fldcw
pop
imul
iret
adc
and
fcoml
sbb
loopne
push
mov
add
sbb
mov
pop
fmul
fidivrl
adc
jbe
inc
pop
aam
push
lds
jnp
push
pop
push
dec
cmp
stos
mov
mov
mov
jmp
mov
cli
lcall
data16
idivb
mov
xor
pop
push
in
aas
xor
imul
adc
fwait
into
pop
repz
stos
sub
push
pop
iret
add
jae
xchg
dec
mov
fdiv
push
ds
cmc
fildl
lret
mov
arpl
cwtl
nop
sahf
mov
dec
out
fstpt
scas
out
imul
jb
adc
pusha
push
jo
arpl
stos
jge
lods
stc
adc
xchg
pop
push
aad
iret
push
xor
fcomip
add
xor
pop
ret
or
leave
mov
xorl
dec
lahf
push
subb
adc
adc
int3
add
in
sarb
outsb
mov
cmpsb
icebp
fisubrs
or
xor
aam
enter
xchg
jns
mov
mov
out
les
jmp
and
aaa
mov
stc
imul
xor
popf
jle
in
fsts
adc
jge
push
jg
jnp
xchg
xchg
push
mov
xchg
mov
pop
xor
or
int
jne
sbb
imul
cmp
xchg
bound
ret
inc
aam
push
xor
inc
xchg
sub
repz
hlt
out
movsb
adc
mov
ljmp
scas
xchg
and
dec
pushf
enter
test
ds
xor
call
push
sub
das
add
in
repnz
enter
popa
ret
push
mov
bound
push
aaa
loop
shrl
xlat
fbld
sbb
sub
fistps
cmp
popf
or
xchg
mov
fwait
shll
dec
test
lret
cmc
fwait
pop
lret
pop
imull
jbe,pn
lcall
push
arpl
mov
push
sbb
iret
aaa
fmull
movsl
xchg
push
jle
stos
aad
mov
adc
push
ja
dec
xchg
sbb
cld
sbb
lret
and
ror
sahf
aad
lret
data16
adc
jne
jno
out
std
notl
dec
test
pop
loope
sub
xchg
stos
loope
int
push
es
jno
sahf
ja
dec
ja
iret
dec
push
pop
into
mov
stc
rorl
mov
adc
bound
mov
fnop
mov
hlt
icebp
ja
mov
mov
repnz
add
pusha
dec
mov
jno
ret
sbb
iret
mov
jmp
pop
lret
jmp
or
sub
sub
mov
mov
outsb
inc
or
xor
movb
pop
jge
xchg
push
add
push
scas
outsl
cli
add
aam
cmp
or
ret
xor
and
daa
xchg
jge
and
out
jns
mov
sbb
or
sbb
out
out
sti
jo
dec
and
lods
push
pushf
jg
aas
imul
push
or
or
stos
test
jp
xchg
js
fsubr
jp
adc
dec
lret
sub
sarl
pop
mov
leave
jnp
outsb
cmp
sub
and
sbb
jns
stos
pop
mov
and
cli
sub
pusha
adc
pushf
push
mov
or
cmp
repnz
pop
lret
xor
pop
dec
loopne
mov
popa
sub
out
mov
push
inc
shrb
in
rol
jae
addr16
aam
loop
inc
pop
ds
push
nop
jbe
add
and
pop
imul
dec
jp
mov
cmpb
hlt
add
mov
cmp
cmp
dec
mov
test
mov
dec
mov
add
ljmp
lods
jg
in
mov
xchg
push
and
incb
movsl
xorb
mov
dec
push
inc
mov
aas
xor
dec
sbb
adc
daa
sbb
pushf
gs
testb
dec
mov
mov
loop
int3
mov
rcll
sti
inc
mov
xlat
mov
fcomi
mov
loop
cmp
popa
cmpsb
or
xchg
mov
push
sub
les
xor
cmp
repnz
popa
pop
data16
bound
add
dec
hlt
dec
in
pushf
inc
push
lea
clc
aad
push
fs
out
fidivl
mov
ret
push
stc
lret
jl
addr16
iret
addr16
fucomi
mov
cs
and
xlat
and
je
add
rclb
xchg
and
mov
xchg
subb
pushf
mov
xlat
into
mov
je
add
push
inc
icebp
aas
sub
xchg
insl
pop
dec
jl
test
mov
add
shrl
push
jle
jnp
mov
test
shl
and
in
in
mov
test
lret
mov
aam
insl
mov
xchg
cld
inc
jle
sub
sti
call
inc
and
mov
xorb
cld
jns
cmpsb
test
sbb
ss
pop
mov
ja
pop
dec
stos
fisubs
test
xchg
mov
jecxz
mov
and
mov
lock
int
xlat
jg
lock
int
mov
out
fs
dec
sbb
int
mov
test
int3
push
mov
test
pop
jno
mov
or
addr16
icebp
leave
out
icebp
mov
hlt
lock
test
pop
aam
adc
and
jge
pusha
mov
dec
mov
nop
stos
push
jp
int3
push
and
sbb
jge
jbe
cmp
sub
adc
push
jg
sub
pusha
xchg
in
mov
lahf
sbb
mov
cld
and
add
enter
lock
adc
addl
aam
cmp
cld
inc
insb
pop
stos
adc
jne
lods
xchg
mov
cmp
bound
arpl
lret
fwait
xor
rol
add
loop
loope
xchg
dec
lea
mov
sub
into
dec
out
pusha
push
enter
mov
out
sub
jge
xchg
in
cmp
push
lret
sbb
jmp
lds
outsl
je
es
sub
jl
lahf
push
orl
sub
cmp
mov
or
pop
or
test
movsb
pushf
jge
movsb
stos
or
mov
in
cwtl
data16
nop
ficoms
mov
jbe
test
xchg
sub
out
icebp
movsb
dec
dec
xor
outsb
pop
add
in
out
and
sbb
and
push
sbb
stos
cwtl
in
cmp
das
xchg
mov
sbb
pop
pop
xchg
xor
stc
jne
bt
pop
pop
sub
or
pushf
adc
pusha
sub
pop
mov
inc
inc
outsb
push
push
pop
jle
hlt
cwtl
arpl
jb
xchg
inc
cmc
xlat
push
shll
fnsave
shll
into
bound
xor
mov
cld
mov
dec
out
daa
loop
sbb
out
fsub
cmp
mov
leave
shl
adc
adc
sbb
int3
in
push
inc
in
push
out
mov
xor
fdivs
loopne
sub
popf
or
popa
cmp
mov
or
inc
mov
pop
in
sub
ja
or
push
dec
jo
imul
jb
inc
pop
popf
mov
push
sbb
flds
cmp
or
xchg
bound
sti
and
add
test
xchg
xchg
popa
dec
cmp
jl
adc
pop
mov
and
fwait
ljmp
fistl
push
sbb
aas
aad
and
fwait
xor
push
icebp
ret
inc
lret
call
mov
ret
add
mov
push
cmp
xchg
mov
ret
cli
mov
out
mov
xor
fprem1
adcb
jp
punpcklwd
icebp
jmp
fnsave
jle
popl
push
fwait
push
hlt
sbb
xor
insl
add
or
jge
push
int3
cs
dec
arpl
push
xchg
mov
xchg
sahf
leave
jbe
out
subl
adc
sbb
xchg
adc
and
lcall
mov
aaa
fs
mov
xchg
pop
cmc
adc
sub
mov
mov
movsb
sbb
xorb
sub
and
xor
gs
ja
shlb
lret
pusha
sub
dec
out
rcr
jb
es
subb
data16
cs
cltd
xchg
stos
subb
dec
icebp
mov
pop
insl
sub
pop
jmp
out
lret
je
pop
mov
insb
fiadds
loopne
lods
and
pop
dec
push
adc
cmp
in
xor
fldcw
pop
repnz
test
dec
fiaddl
insb
test
loop
mov
cmp
and
push
popa
push
sti
arpl
mov
stc
dec
xor
mov
inc
mov
addr16
pusha
cld
cwtl
dec
mov
pop
lods
out
mov
sub
mov
add
adc
sub
fsubs
mov
in
pop
adc
testl
shrl
das
mov
adc
call
add
inc
xor
icebp
jbe,pn
cmp
add
inc
leave
add
inc
jb
mov
push
sub
mov
lcall
mov
fisttpll
mov
lds
lret
jo
add
call
rorl
mov
sbb
sbb
pusha
ror
jg
cmp
push
cld
dec
pop
xor
push
or
aas
mov
lcall
xor
mul
in
sbb
adc
sbb
popw
jno
pushf
test
jno
lret
imul
xlat
push
fmull
mov
movsb
iret
and
or
jbe
mov
adc
xor
aam
in
dec
fcoml
enter
and
mov
adc
add
jp
xchg
fcoml
nop
inc
adc
bound
rorb
cltd
xchg
addr16
mov
inc
popf
pop
sub
push
fidivl
mov
je
test
xchg
cmc
push
jne
jb
add
sbb
pop
cmp
sbb
roll
nop
in
jo
dec
cmp
les
loopne
sbb
loopne
test
dec
mov
icebp
mov
and
out
jne
cld
or
xor
push
mov
mov
mov
popa
push
push
bound
jmp
fists
bound
mov
jno
cmp
iret
decl
sub
in
and
xor
or
dec
lds
jp
popf
xchg
push
shlb
rclb
sub
lods
jns
adc
fistl
mov
andb
xor
scas
cmp
push
add
push
pop
ja
call
loopne
or
mov
fiadds
call
fldt
push
adc
pop
mov
mov
lea
pop
icebp
dec
and
dec
mov
sbb
xchg
shlb
pop
pop
out
sahf
fsubrs
lds
jp
inc
lods
int
sub
mov
in
shlb
pop
sub
mov
mov
and
xor
xchg
lock
push
fisubrs
jecxz
push
iret
popa
mov
in
ljmp
lea
gs
or
call
pop
jno
movsl
stos
stos
and
nop
imul
outsl
adc
push
fsubr
xor
shll
iret
cld
add
pop
sbb
into
xchg
and
rcrl
add
imul
ja
lods
scas
jb
xorl
fs
mov
shlb
les
ljmp
psllq
xchg
inc
mov
pop
xor
nop
jge
sub
inc
sbb
ret
in
fstl
movsb
inc
ret
decl
xchg
xchg
push
cld
mov
and
or
in
jne
cwtl
aas
repz
enter
jae
mov
adc
mov
or
lds
mov
dec
jo,pt
sbb
dec
mov
roll
sar
mov
jo
imul
sub
mov
rorb
mov
adc
push
jbe
cld
push
dec
scas
lods
in
scas
mov
add
lods
xor
mov
adc
aad
pushf
ss
sahf
jbe
jns
flds
pop
jae
mov
push
and
push
pop
pop
mov
push
jg
popf
or
andb
js
mov
and
xchg
mov
movsl
inc
jmp
popa
add
movb
cmp
popa
mov
add
cmp
lcall
jg
dec
rol
sbb
mov
adc
mov
sub
fdivrl
test
adc
or
add
not
mov
inc
xor
mov
dec
hlt
push
cli
inc
sub
dec
sbb
stos
fs
ret
jg
and
lret
aad
insb
addr16
and
or
cmp
push
sub
ja
and
mov
in
int
arpl
enter
xchg
daa
mov
sub
xor
idivb
jp
pop
inc
push
fs
fcoms
sbb
jl
mov
cmpsb
lods
and
push
insl
mov
idiv
addb
inc
or
sub
fmull
fcompl
or
shrb
cld
and
inc
add
push
ja
leave
test
lock
fisubs
fs
fsubs
enter
add
inc
aad
xchg
outsb
mov
sub
xchg
incl
cltd
aad
or
rorl
mov
dec
arpl
inc
test
loop
jg
xorl
push
push
nop
ljmp
pop
movsl
stos
jg
mov
cltd
jne,pt
sub
repnz
sahf
jge
shlb
ds
sub
nop
pop
inc
mov
mov
scas
loopne
insl
aad
movsl
iret
sbb
sahf
repz
loop
movsb
popa
xor
in
enter
orb
or
int
ds
rcl
fs
in
mov
stos
inc
insb
mov
imulb
iret
mov
mov
and
jle
push
sub
push
subl
out
mov
mov
out
sub
cmc
ficoms
test
push
cmp
adc
rorl
fcmovnbe
xchg
aam
inc
adc
mov
fadds
sbb
push
inc
out
in
jbe
inc
dec
mov
iret
cmp
jb
xchg
loope
loopne
out
xchg
jns
mov
imul
push
xor
jb
inc
mov
xchg
fisubs
mov
mov
fiadds
mov
loope
dec
pop
ret
xchg
cli
mull
lcall
mov
dec
sbb
andb
push
es
jg
mov
repz
sub
stos
mov
dec
mov
and
fwait
sbb
cltd
in
hlt
xchg
xchg
iret
pusha
lcall
sbb
xor
pop
bnd
outsl
insb
mov
sti
sbb
xchg
into
sbb
sbb
adc
push
mov
loopne
adc
dec
push
sbb
dec
std
rcl
dec
adc
sbbb
movsb
leave
movsl
sbb
sub
jge
in
shlb
xchg
and
jmp
jns
add
fists
sbb
mov
sbb
pop
int
sbb
icebp
push
sbb
inc
push
icebp
xlat
cmpb
stos
adc
xchg
push
fcom
mov
sub
mov
push
inc
stc
je
lods
xchg
in
hlt
je
mov
and
faddp
jae,pt
out
out
lods
xorb
jno
test
andl
out
cli
sub
xor
leave
push
shlb
movsl
jb
push
and
xor
lods
test
xchg
push
andl
and
jns
push
xchg
shrl
outsl
das
push
sbb
mov
add
jp
xor
push
aaa
clc
xchg
cmp
es
inc
xor
insb
test
cli
ss
scas
lret
mov
imul
outsl
outsl
arpl
pushf
imulb
ret
mov
jecxz
sub
inc
xchg
xor
bound
mov
jg
or
dec
mov
xchg
das
cmp
inc
lcall
stos
xchg
pop
xor
aam
xchg
jne
fnstenv
cltd
into
pop
lock
jbe
push
jge
das
fsubs
cli
in
das
and
pop
push
xchg
ja
ret
jp
es
pop
xor
and
adc
add
icebp
ljmp
mov
mov
lcall
inc
pop
xor
and
adc
add
icebp
ljmp
mov
mov
lcall
inc
pop
xor
and
icebp
xor
cli
ror
rcr
stos
mov
lcall
inc
pop
xor
and
adc
loope
jnp
shrl
jne
gs
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
test
mov
fwait
lods
lret
mov
in
pushl
out
arpl
push
cmp
xor
xchg
adc
pop
in
jecxz
jecxz
ret
fwait
mov
mov
cmc
jns
arpl
aaa
add
jnp
dec
add
or
fucomi
stos
fstpt
jmp
aas
push
imul
push
sub
cli
lahf
fsubrs
add
mov
scas
lock
mov
ja
mov
adc
test
js
call
fs
pop
jo
xor
and
aam
lods
hlt
dec
dec
jle
and
rorb
lcall
add
sub
int3
cwtl
xchg
stos
repz
xchg
pushl
push
inc
scas
or
push
hlt
pop
sbb
mov
daa
adc
inc
mov
fs
arpl
orl
daa
jnp
pushf
insb
inc
jmp
jmp
add
outsb
sahf
sbb
adc
pushf
decb
push
movsb
sub
jae
test
mov
imul
repz
add
xor
jecxz
sar
aam
mov
lret
lcall
or
sub
xchg
adc
imul
dec
into
xchg
xchg
mov
arpl
scas
sub
adc
aas
data16
in
jecxz
mov
shl
mov
call
push
pop
sub
push
jnp
add
lcall
test
lret
sbb
sub
push
or
xor
jnp
dec
add
stos
jecxz
rorl
mov
arpl
push
or
xor
jnp
dec
add
stos
and
mov
stos
jne
mov
push
xchg
dec
or
out
push
enter
xchg
mov
lahf
xor
jmp
mov
dec
popf
pop
incl
cmp
es
clc
cmpb
hlt
mov
jmp
mov
xlat
or
arpl
fcoml
outsb
jp
mov
sbb
xchg
pop
push
fwait
dec
hlt
je
push
fwait
mov
sub
aas
push
xchg
push
jge
in
scas
js
pushw
and
cmp
orl
hlt
add
cld
ret
adcb
xor
in
mov
add
pusha
aas
scas
repz
in
sub
and
or
mov
or
inc
or
pusha
fdivs
sub
mov
mov
fnsave
dec
pop
or
sub
or
xor
xor
or
and
in
jnp
fcmovbe
add
addb
pop
push
pop
pusha
add
xchg
sub
lahf
push
stc
idiv
loope
maxps
sbb
dec
or
decb
das
lcall
sbb
les
dec
inc
test
jge
mov
dec
scas
mov
xor
jb
xor
fstl
nop
mov
and
les
jmp
pop
push
and
pop
es
inc
add
dec
mov
and
pop
push
inc
jne
ja
cli
call
xchg
pop
cmp
pop
shl
mov
pop
stos
jmp
jae
idivb
into
das
pop
out
loope
sub
xor
push
repz
fs
adc
xchg
mov
insl
aaa
add
jle
cli
sub
ljmp
fwait
mov
stos
lods
test
int3
sbb
rcrb
push
imul
rorl
add
clc
pushf
push
into
cmp
data16
mov
mov
ds
shrl
sub
ss
jo
sub
mov
mov
mov
mov
lock
test
out
je
in
fwait
rorl
pusha
das
fsts
and
sbb
mov
jns
lcall
insb
icebp
push
int3
push
loope
xchg
sub
daa
shrb
sub
pop
jb
test
xchg
out
in
js
mov
sbb
add
popf
or
btc
outsb
into
stc
fldl
mov
or
cmpsb
adc
roll
lock
cmp
daa
add
xor
or
xor
pop
sub
test
or
loope
sub
into
in
mov
lret
cmp
pop
xchg
imul
or
mov
mov
sub
xor
aam
andb
inc
cmp
inc
arpl
mov
xchg
dec
arpl
sub
jnp
subl
lock
push
aam
gs
xchg
std
jecxz
push
cmp
leave
push
fcmovb
leave
and
mov
repnz
sahf
enter
and
sbb
jle
loope
sbb
test
adc
xor
or
into
decb
lock
js
popa
addl
cmp
cwtl
into
sub
jl
sbb
mov
ljmp
sbb
jae
or
fnstcw
pushf
pushf
arpl
mov
sub
xchg
jle
pushf
jmp
rolb
sar
cld
rol
jge
adc
mov
sti
je
movsl
in
mov
push
pop
mov
loope
outsl
imul
jp
ss
mov
lods
dec
cs
and
outsb
push
add
scas
cli
cmp
popa
cli
and
cmp
aam
add
mov
aaa
movsl
addr16
fistps
ret
mov
push
popa
cmpsb
push
inc
rcll
movntps
adc
inc
adc
xlat
bound
dec
or
pop
push
and
divb
dec
ror
sti
adc
fistpll
mov
das
and
test
in
mov
int3
out
ficoms
callw
test
dec
je
daa
inc
movsl
xchg
insl
mov
in
xchg
xor
lret
das
or
and
mov
mov
icebp
jo
enter
and
call
xorl
pop
imul
pop
dec
dec
jb
aas
popa
movb
mov
into
ffreep
or
int
mov
mov
scas
int
inc
pop
cmp
and
loopne
inc
aam
jo
pop
xchg
enter
inc
xchg
xchg
inc
sahf
lret
mov
stc
out
or
cmp
inc
into
xchg
sbb
insb
fisttpl
cmp
cmpb
and
sub
push
and
inc
repz
mov
pop
scas
sbb
sbb
das
pop
cld
push
addr16
mov
jge
popf
sub
aaa
orb
je
push
aad
fsub
add
dec
push
dec
cmp
insb
es
mov
jne
icebp
bound
jns
fcoml
sbb
in
icebp
stos
rcrl
loopne
push
iret
loop
cmp
push
inc
xor
daa
ds
sub
fcmovbe
sbb
xchg
push
ss
push
cmpsl
xchg
daa
arpl
gs
inc
fcomp
fs
shll
cmp
or
push
add
lods
outsb
xchg
mov
hlt
add
jbe
push
pop
and
inc
push
mov
add
xor
insb
cld
push
pusha
js
sbb
movsb
mov
inc
jns
test
pop
push
or
adc
or
pop
or
mov
mov
push
scas
jl
add
daa
mov
imul
sub
mov
jnp
aas
jge
sarb
pop
setge
push
inc
or
mov
and
xor
jnp
nop
and
or
jmp
push
mov
inc
movsb
pusha
adc
jbe
int
insb
or
mov
sub
cld
or
dec
or
ret
cld
sbb
cmc
and
inc
stc
inc
dec
fldcw
push
mov
cli
stos
adc
add
mov
pop
jl
jg
jl
inc
jb
test
pop
stos
popa
inc
or
jb
in
dec
enter
cmp
mov
push
andl
hlt
jmp
or
xor
adc
mov
mov
ror
pop
daa
repz
mov
outsb
add
ljmp
push
stc
pop
mov
pop
adc
mov
or
out
incl
or
fbld
stos
xchg
push
stos
iret
ja
dec
push
cmp
inc
jb
lret
subl
inc
inc
pop
fistpll
jg
sub
dec
mov
imul
xchg
and
jmp
fsub
pop
stos
je
xor
xchg
xchg
mov
jnp
dec
xchg
jmp
jb
or
add
into
fadd
mov
jnp
int
in
jmp
push
xchg
jl
lock
sbb
mov
cmp
loope
inc
mov
adc
pop
push
dec
push
cmp
xor
call
dec
jae
mov
int3
or
fcoms
loop
push
add
or
addr16
mov
xor
xchg
adc
mov
mov
mov
ds
dec
mov
movsl
sbb
pop
push
orl
sub
cmpb
jo
dec
imul
test
adc
and
mov
add
sub
sti
pusha
sub
jae
flds
test
hlt
jbe
test
adc
aam
lret
sti
ret
mov
mov
inc
std
push
dec
iret
subl
mov
cmp
inc
sub
ficoml
inc
repz
pop
push
fistps
mov
les
and
and
mov
push
jl
pop
cmpsb
das
add
mov
jns
mov
and
xor
and
push
adc
cmpsb
xchg
xchg
test
mov
pop
cmp
mov
arpl
mov
mov
icebp
push
fcoms
or
roll
fistpll
test
dec
jp
dec
sub
jecxz
jnp
cmp
shl
mov
cmpsb
jb
mov
jmp
add
pusha
cmpsl
jae
popf
cld
loopne
lock
js
mov
xchg
ret
adc
jmp
lock
dec
stos
and
pop
notb
mov
xor
xchg
dec
pusha
jle
popf
dec
sbb
arpl
jnp
inc
mov
jmp
inc
or
lods
pop
jmp
cmpsl
sub
add
das
cld
and
mov
dec
mov
sti
sysexit
mov
pop
add
repnz
orb
ror
aad
adc
xchg
xchg
xor
push
push
push
fneni(8087
mov
cwtl
lock
cmp
or
scas
mov
and
add
repz
clc
loop
mov
in
cmpsb
fwait
push
jle
push
loope
lds
mov
sub
ret
add
mov
pop
scas
pop
enter
les
fldt
jo
cmp
and
das
push
and
and
mov
jnp
xchg
inc
jno
fiaddl
jno
dec
les
out
dec
inc
popf
setne
push
jmp
inc
dec
mov
adc
dec
dec
jecxz
rclb
push
packuswb
sarb
adc
mov
arpl
repnz
add
xor
lcall
sub
pusha
mov
lahf
jecxz
mov
and
les
mov
cmpsl
add
inc
arpl
cmp
mov
popf
sub
lahf
pop
push
subb
andl
pushf
bound
dec
jle
xchg
inc
out
dec
imul
push
daa
xchg
mov
roll
mov
jmp
inc
sarb
xor
mov
lahf
jne
aad
inc
xchg
mov
mov
and
loope
scas
lahf
stos
sbb
push
or
inc
cltd
in
push
das
push
xchg
push
call
jmp
pop
imul
xor
icebp
dec
xchg
sahf
mov
xorb
and
in
xor
movsb
inc
dec
jne
and
xchg
fisubs
jle
dec
push
test
dec
mov
mov
xor
add
pop
and
int3
push
aad
adcl
rclb
xor
je
mov
jl
ljmp
push
mov
scas
and
out
idivb
push
jecxz
out
adc
je
xchg
mov
jg
mov
xlat
movsl
push
mov
je
xchg
push
mov
adc
jg
add
xchg
xchg
sbbb
dec
jecxz
pop
lds
lcall
and
mov
gs
and
in
fcomp
js
ljmp
in
fiadds
pop
out
dec
xchg
je
xchg
das
pop
and
inc
inc
mov
cmp
mov
test
cmp
fidivl
push
bound
mov
bound
sbb
addr16
aad
into
inc
shl
cmp
outsb
jno
lods
fmuls
lret
cmp
sbb
xlat
sub
inc
enter
pop
cwtl
out
xchg
jecxz
arpl
movsl
sbb
mov
shrl
add
jo
dec
sti
dec
push
mov
pop
cmc
fs
scas
loop
cltd
xor
mov
fisubrs
pop
jno
ja
lea
stos
cmpb
call
or
sbb
lods
xor
xchg
test
mov
inc
leave
mov
sub
jecxz
dec
shlb
inc
sbb
mov
sub
movsb
cs
jmp
add
test
mov
flds
ss
mov
mov
out
and
fsubl
or
dec
pop
xor
fdivl
stos
xchg
jns
xchg
xchg
negl
push
stc
outsl
aad
jg
in
rcrb
shr
or
sbbb
pop
mov
push
in
cmp
loope
adc
push
iret
lds
fbstp
sub
ds
xor
cltd
xchg
test
leave
decl
jb
jne
lock
jbe
or
sub
mov
rorb
and
hlt
out
cld
mov
insb
jo
push
mov
bnd
out
mov
adc
pop
pushf
insb
hlt
pop
adc
fnsave
push
fs
js
push
push
les
imul
pop
sahf
fsubp
and
scas
enter
mov
mov
mov
inc
add
pop
add
sti
aad
dec
dec
jnp
xor
cmp
repnz
outsl
fildl
cmpsl
outsb
pop
or
sub
addr16
jno
decb
mov
adc
int3
icebp
insl
loopne
mov
mov
xor
sahf
pop
int3
adc
mov
or
lret
jmp
cmp
push
lret
mov
aas
andb
scas
gs
adc
fucom
popa
and
fidivs
repnz
cmp
xor
in
sub
dec
rorl
jnp
ret
arpl
jnp
dec
sbb
push
push
fisubrs
and
movsl
mov
pop
fimuls
pop
mov
arpl
pop
bound
pop
dec
int3
addr16
icebp
aas
cltd
ds
mov
push
or
mov
push
mov
mov
daa
push
cmp
lods
pop
push
cwtl
fidivrs
arpl
xor
cmpsl
jle
in
sti
dec
push
xlat
pop
sbb
outsl
scas
add
int3
fisttps
adc
inc
imul
push
rorb
mov
mov
sbb
mov
in
xchg
pop
shlb
roll
orb
lods
adc
xor
int3
pop
inc
movb
mov
mov
jle
add
or
movsl
add
test
divb
xchg
ljmp
jmp
aaa
push
mov
xchg
or
mulb
mov
loop
sub
insl
sbb
pop
adc
iret
and
arpl
rcl
dec
pop
enter
cmc
xchg
ljmp
xor
insl
push
cmp
aaa
clc
adc
out
xchg
xor
addr16
fbstp
push
scas
xor
stos
int3
insl
into
add
enter
out
push
lods
sarb
ss
pop
leave
and
pop
pop
cmp
cmc
aam
call
fcomp
xor
out
lret
mov
std
xchg
imul
aad
rcll
sbb
mov
or
xchg
sahf
push
add
dec
pop
mov
lcall
inc
and
shll
rdmsr
cmp
jle
lcall
pop
out
arpl
test
pop
xchg
mov
dec
lret
xlat
std
and
mov
js
outsb
sti
leave
and
mov
js
std
add
jmp
sub
stos
push
sbb
sub
sub
adc
sbb
mov
push
push
dec
xchg
and
jl
jp
sub
mov
xlat
add
dec
push
inc
loopne
cmc
lds
outsb
ss
jo
mov
lds
mov
sub
scas
icebp
ret
push
add
sbb
fisubrs
and
arpl
add
sub
pop
insb
cmp
sub
ss
lds
jbe
sub
push
xor
dec
rcll
adc
repz
shll
pop
or
xor
mov
les
xchg
jae
cmpsb
mov
or
mov
imul
mov
push
pop
jns
jns
jae,pt
test
loopne
sbbb
mov
sbb
pop
mov
xchg
mov
aas
jne
mov
ret
ljmp
push
les
push
out
push
mov
cmp
sbb
stc
scas
in
cltd
movsl
inc
and
daa
in
mov
bound
and
pop
insl
push
xchg
pushf
ss
jns
scas
push
mov
aaa
inc
push
xor
adc
pop
sahf
iret
cmp
or
adc
lods
add
jl
clc
xchg
dec
in
shll
lods
mov
add
jmp
push
test
dec
sbb
and
int3
pop
fsubl
outsb
test
mov
push
scas
dec
and
ret
push
xor
arpl
jp
daa
repnz
and
enter
mov
in
adc
into
mov
jbe
lods
mov
repnz
popa
inc
das
jb
fwait
sahf
lds
cmp
fs
inc
shl
cmp
sbb
fs
js
cmc
lock
repz
mov
xor
or
jecxz
mov
jmp
add
out
pop
xor
fs
hlt
rcrb
mov
adc
mov
loope
stc
mov
xchg
adc
or
aas
inc
out
xchg
jmp
cmp
pop
leave
push
mov
mov
push
mov
push
or
pusha
hlt
fscale
inc
rorb
ret
adc
push
mov
or
pop
mov
rcrl
sbb
and
sbb
jl
xchg
adc
out
add
shrb
sahf
movsb
xor
or
push
push
sahf
xchg
push
xor
sub
rorb
sarl
xor
aaa
sbb
imul
popa
mov
and
lret
aas
mov
inc
sbb
adcl
mov
neg
rcll
sti
jb
lods
aad
sub
sub
in
icebp
rcll
xor
es
fs
repz
jl
push
fisttpll
je
pop
sub
and
stc
imulb
adc
flds
pop
fisttps
lods
iret
push
aad
adc
stos
add
or
mov
mov
idivl
inc
pop
adc
jge
shll
loope
mov
xchg
inc
cli
and
sbb
pushf
jbe
pop
or
adc
add
popf
jmp
push
iret
sbb
mov
loopne
lret
lahf
imul
xchg
sbb
leave
and
in
or
fmulp
mov
fwait
or
sbb
push
adc
pushf
cld
imulb
and
int3
mov
mov
call
sahf
lcall
or
cmc
jl
jne
es
gs
jno
xchg
es
cli
jle
mov
lods
lods
xchg
sbb
ss
test
push
cltd
sbb
sti
sbb
fs
sbb
rcr
int3
scas
sbb
mov
jno
push
mov
fistpll
dec
adc
ret
cmpsl
stc
lea
mov
cmc
dec
sbb
lahf
and
xchg
incl
lods
cmp
popa
shl
sbbb
movsb
xchg
dec
pop
hlt
xchg
mov
aam
arpl
lahf
jle
fdivs
mov
ds
mov
sub
lcall
mov
sub
adc
sub
add
movsl
aam
mov
sahf
jle
xchg
sub
push
or
ljmp
mov
movsb
cmp
ret
rcrb
inc
pop
daa
sub
aas
faddl
addr16
mov
sub
inc
push
mov
and
sbb
cmpsl
insl
push
push
fsubrl
lahf
mov
xchg
scas
insl
ret
outsl
pop
test
xor
pop
jb
inc
or
and
addr16
ret
and
pop
rcll
sbb
xorl
sub
xchg
push
clc
fcoml
mov
mov
xchg
adc
pavgw
or
mov
pop
shll
sahf
and
outsb
fimuls
mov
lahf
push
cmp
out
push
mov
sub
mov
sysexit
inc
cmp
dec
sbb
pop
dec
sahf
mov
cli
filds
gs
stc
lea
lock
dec
test
mov
add
in
or
jo
mov
and
adc
ret
inc
test
jle
popa
call
je
mov
out
mov
jmp
lcall
outsb
loop
pop
sbb
inc
imul
cli
mov
test
sti
or
mov
int3
shl
lods
es
orl
inc
jae
fstps
movsb
jmp
in
daa
popa
jle,pn
cmp
adcl
iret
add
mov
mov
fcomps
in
xchg
sbb
push
pop
enter
mov
adc
cmc
dec
cli
mov
rcll
loope
pop
shlb
repnz
popf
or
mov
push
mov
dec
hlt
mov
cmp
and
dec
in
jne
punpckldq
fdivrp
repz
jns
jl
mov
jg
sub
mov
jae
add
cmp
mov
pop
adc
gs
and
out
enter
xlat
movsl
mov
inc
cmp
or
mov
testb
jp
loopne
sbb
lahf
dec
pop
repnz
xchg
jg
fidivs
shll
dec
sbb
pop
imulb
repz
divl
bound
outsl
push
add
popa
loope
insb
pushf
sub
xor
ds
sub
mov
xorl
push
sub
scas
pop
insl
push
mov
or
mov
adc
xchg
push
or
aas
lahf
mov
test
mov
mov
cmp
lods
mov
inc
xchg
mov
adc
adc
sub
rorb
lret
hlt
int
in
iret
gs
sbb
test
fwait
scas
not
add
popa
cmp
or
or
mov
cmp
inc
pop
cmp
inc
push
sbb
les
in
cld
cmpsl
aam
dec
and
mov
mov
pop
adc
cwtl
sarb
repz
add
jecxz,pn
sbb
jp
inc
lahf
jbe
jmp
push
xor
mov
leave
xchg
jle
insb
or
push
fwait
mov
mov
arpl
push
or
xor
jnp
dec
add
stos
jecxz
rorl
mov
arpl
push
or
xor
jnp
dec
add
scas
jecxz
rcll
mov
arpl
push
or
xor
jnp
inc
xor
in
ret
dec
add
mov
pushf
xchg
stc
or
inc
adc
and
or
mov
shr
int
movsl
icebp
pop
mov
push
push
cmp
jno
or
mov
rorl
pop
add
js
push
push
cmp
jno
or
mov
rorl
pop
add
or
sbb
jnp
jnp
inc
push
lods
int
loope
repnz
push
loop
hlt
nop
andb
jp
jp
enter
sahf
outsl
mov
xorl
cmp
rorl
jnp
adc
out
xchg
xchg
and
push
or
outsb
fnstcw
daa
xchg
mov
jbe
mov
jb
divl
out
pop
adc
in
into
sbb
sub
cmp
shl
jmp
out
mov
push
or
mov
outsb
jge
adc
ds
mov
icebp
pop
incb
cmc
fsubp
xor
mov
or
xchg
in
xor
mov
add
imul
mov
cld
push
pop
add
popa
sub
clc
mov
mov
mov
add
js
push
push
cmp
aaa
mov
loopne
lock
xchg
movsl
xlat
test
or
inc
sahf
xor
pop
adc
in
mov
sar
add
std
mov
fildll
fs
arpl
and
push
add
and
mov
repz
mov
add
js
push
push
cmp
jno
or
mov
rorl
pop
add
js
push
push
cmp
jno
subl
jle
fstpl
insl
sub
mov
lret
inc
and
xchg
xor
sti
lds
arpl
test
in
xor
xchg
mov
push
sub
ret
lods
cmp
lds
fildll
aam
fdivl
roll
xor
push
add
pop
movsl
pop
mov
jge
fsubs
xchg
sbb
cs
test
jmp
sub
cltd
cmp
jmp
cmpl
into
sbb
adc
dec
sbb
inc
xchg
add
int3
les
xor
dec
mov
add
sub
push
pop
mov
aas
imulb
adc
or
push
hlt
or
sbb
and
jno
loopne
xchg
sbb
pop
aad
pop
jg
fisubs
lea
addl
xor
sahf
add
out
xchg
sbb
sbb
and
cmp
ja
push
and
jns
mov
xor
mov
add
sar
addr16
mov
pusha
cwtl
subb
mov
fsubrp
jp
pop
addl
push
or
aam
and
popa
stos
aas
adc
add
push
cmp
dec
movsl
mov
cwtl
sub
ret
loopne
je
pop
mov
push
ss
xor
int
gs
jmp
outsb
js
divb
inc
cld
shlb
xor
mov
sbb
fcmovu
dec
data16
mov
xchg
push
lret
stc
rolb
xlat
jge
cli
ret
test
cwtl
inc
out
dec
mov
popa
clc
mov
fists
xchg
cmp
in
cmp
cmp
in
je
adc
mov
xchg
mov
adc
sub
test
dec
adc
insb
or
or
mov
lret
push
outsl
nop
lret
jmp
mov
stc
and
jp
aaa
pusha
rclb
xor
fs
or
sti
jb
add
adc
jge
add
fisubl
lret
jae
pop
scas
data16
lahf
mov
jno
in
jge
ja
aam
inc
cmpsl
fbstp
xor
movsl
xchg
mov
cmp
rcll
cmp
mov
cmp
and
sbb
jg
movsl
rclb
add
push
loopne
in
xor
data16
mov
add
cld
enter
jmp
pop
xor
flds
pop
cli
pop
or
xor
dec
xchg
fsubp
adc
es
divb
jns
test
mov
cmpsl
xor
movsl
data16
pushf
push
insb
jge
mov
fistps
push
notl
sub
cmp
mov
das
lods
mul
push
push
mov
stos
xor
jmp
or
adc
push
pop
leave
jbe
pop
int3
in
ss
cltd
das
cmp
daa
icebp
cmp
imul
adc
popf
mov
lds
mov
xor
xchg
push
or
dec
mov
pop
rcrl
loopne
adc
iret
int
jle
mov
fmuls
cwtl
mov
stos
pop
out
mov
fstpt
mov
arpl
loope
xchg
add
inc
mov
insb
stc
mov
testb
lods
xchg
mov
shl
rorb
ljmp
shrl
leave
icebp
in
sar
pop
or
push
repz
sti
adc
dec
jo
and
push
mov
negb
ss
test
inc
sbb
negl
sbb
jno
jle
ficoml
loopne
or
add
inc
push
out
hlt
out
and
pusha
sub
call
sbb
pop
mov
jg
scas
cmp
pop
xor
mov
xor
scas
daa
enter
ds
mov
mov
lods
jg
jge
je
xor
iret
test
inc
outsl
addr16
sbb
divl
dec
arpl
sub
mov
lods
sub
push
pop
lret
pushl
jmp
jnp
inc
xor
lahf
faddl
stos
ret
jb
data16
xor
push
cltd
mov
mov
cmpsl
mov
insb
fcoms
ljmp
loopne
add
dec
loope
push
jo,pn
call
lods
pop
fwait
loope
filds
or
push
and
data16
and
imul
jns
fwait
cmp
das
test
push
loopne
insl
enter
test
negl
and
mov
xorb
dec
shlb
inc
test
jbe
into
mulb
push
imul
dec
outsb
ja
rep
out
popf
lret
daa
jno
lea
test
cmp
popa
mov
int
mov
jle
in
lea
dec
aam
xchg
bound
push
cmp
cmp
jp
mov
push
pop
sbb
lds
int3
adc
into
inc
mov
jb
cmc
stos
sub
inc
mov
pop
pop
je
mov
ds
xchg
mov
or
pop
pop
sbb
mov
pop
pop
mulb
jmp
gs
dec
test
sbb
jmp
lock
jmp
mov
fiadds
xchg
shl
jl
mov
mov
mov
sub
sbb
mov
rorl
pushf
in
xchg
pop
icebp
mov
ljmp
aaa
add
fsts
daa
testb
addr16
sbb
repnz
pop
mov
lret
test
cld
data16
dec
add
fmuls
lock
les
xchg
insl
dec
jns
aam
jp
mov
push
jl
pop
je
dec
stc
sbb
scas
in
cmpsb
int3
testl
dec
cmpsb
mov
lret
movsb
movntq
xchg
stos
ficomps
pop
aam
sub
ret
mov
call
mov
addr16
jns
std
outsb
into
orb
dec
stc
lretw
pop
out
mov
stos
dec
inc
sbb
adc
jo
jl
jp
mov
sahf
cmp
or
and
cmpsb
inc
sar
mov
cmpsb
sbb
xchg
es
icebp
incl
notl
loope
pop
int
mov
mov
and
sbb
das
push
xchg
rcll
inc
add
push
or
int
ss
mov
add
arpl
xchg
xor
inc
loopne
cmp
xlat
movsb
xchg
ret
push
pop
inc
push
rorl
repnz
pushf
in
mov
mov
push
lcall
mov
out
les
ljmp
inc
jnp
sbb
outsl
ret
push
bound
push
sahf
dec
xchg
pushl
inc
or
inc
aas
iret
cmp
xor
test
and
xchg
sarb
push
sub
mov
lret
fisubs
icebp
stos
lcall
aad
jle
pop
test
sbb
cmp
insl
lahf
call
jbe
jbe
and
sub
sti
into
mov
addr16
jg
jo
js
xor
popf
inc
push
ds
aas
sub
cltd
or
mov
pop
mov
or
sbb
sbbb
stos
stos
or
pushl
js
inc
int
loope
imul
and
bound
pop
outsb
dec
xor
jg
std
cmpsb
pusha
mov
les
xor
fs
cwtl
push
adcl
cwtl
or
cs
dec
or
pop
lods
mov
lods
dec
adc
push
xchg
movsl
jnp
push
pop
or
xchg
mov
ljmp
adc
aad
cmp
adc
xlat
sti
pop
cmp
sbb
mov
jl
push
push
fsubl
and
dec
rcrl
xorb
iret
dec
pop
cmpsb
push
add
sub
inc
in
xor
jae
or
rcrl
ret
addr16
push
mov
mov
xchg
xchg
icebp
push
cmc
sub
test
cmp
cmpsl
hlt
or
iret
js
inc
mov
inc
push
add
and
jmp
xchg
lds
test
popf
xor
push
ds
or
lods
xchg
lock
push
jle,pt
je
ds
add
add
jmp
dec
popa
lret
jno
push
adc
es
js
lock
popf
and
mov
cmp
or
pop
popa
adc
adc
sarb
movb
inc
lahf
shl
inc
out
pop
pop
mov
inc
mov
nop
lret
xchg
or
aaa
mov
mov
add
popa
ss
or
inc
into
mov
outsb
push
adc
mov
cli
cmpsl
cmp
mov
rclb
clc
or
pop
shll
notl
stc
lahf
jbe
dec
fwait
out
jo
inc
int
mov
xor
insb
in
xor
sahf
inc
mov
std
iret
imul
push
and
add
sahf
pop
jns
ja
push
and
outsl
test
pop
out
stos
mov
push
gs
or
sbb
sub
mov
rcr
ret
andb
dec
cli
test
lods
in
mov
mov
mov
lret
xor
push
pop
mov
adc
fcomip
pop
pop
sbb
repnz
nop
outsl
xchg
test
xchg
dec
adc
pop
in
or
or
cmp
push
or
sar
ds
hlt
pop
addr16
call
dec
add
shrb
jnp
ja
psrlq
push
lea
adc
sbb
sub
in
or
jno
jno
push
aad
sub
xchg
mov
or
pop
icebp
mov
mov
mov
out
jne
mov
test
fs
mov
adc
sahf
jmp
push
pop
outsl
push
mov
xchg
cmpsl
lods
sbb
jle
xor
sub
scas
push
push
xchg
xor
mov
int
push
out
xor
add
icebp
lahf
ljmp
adc
push
mov
subb
cmpsb
popa
cmp
aad
outsl
add
xchg
cmp
or
cmp
aaa
and
icebp
or
inc
stos
int3
add
pushf
add
call
int3
loope
xchg
mov
mov
sbb
dec
push
cmp
int
int3
push
dec
push
cmp
adc
xor
xor
xor
jge
push
mov
push
xchg
sti
lret
insb
mov
out
popa
sahf
rcpps
lods
add
fs
in
mov
or
ljmp
ret
fsin
inc
stc
stc
cmp
hlt
scas
pcmpgtb
xchg
enter
and
std
or
jnp
lcall
mov
mov
adc
sarl
es
out
push
inc
adc
movsl
mov
sahf
imul
and
mov
stc
std
pop
or
jne
nop
fadd
cmp
dec
cs
or
stc
inc
push
push
pop
pop
out
inc
sub
cmp
call
scas
push
addr16
mov
jmp
orl
dec
ds
jge
loopne
iret
mov
shrl
lret
and
add
mov
lock
lea
clc
pop
in
cmp
mov
jae
into
leave
dec
lock
pop
push
in
loope
and
add
mov
shlb
sub
push
imul
popf
outsl
mov
lods
out
push
sbb
add
ja
inc
and
fdivs
inc
mov
cmc
ja
mov
sbb
mov
scas
rorl
addr16
sub
sub
out
xchg
add
icebp
and
dec
cmc
fcmovnbe
adc
jmp
sahf
xlat
adc
hlt
lret
pop
std
lret
fwait
inc
pop
push
or
xlat
inc
mov
addb
aad
cmp
test
lock
dec
cmp
stos
sbb
or
and
imul
js
vmovaps
cmpl
adc
xor
into
repz
sbb
in
cmp
jmp
imul
push
out
cld
sahf
push
pop
push
cmpb
push
add
ss
push
cli
and
inc
scas
test
je
mov
xor
mov
mov
test
mov
pop
sbb
lock
sbbl
xorl
pop
cmpl
sbb
fs
std
cmp
sub
mov
pushf
mov
fists
add
xchg
mov
lds
enter
pushf
enter
mov
fists
and
or
push
lock
daa
iret
shl
cld
jp
popf
mov
ljmp
test
aaa
sbb
repz
sbb
mov
test
and
push
bound
call
insl
push
inc
push
or
dec
mov
inc
lock
mov
bound
movsb
cs
push
cltd
add
push
sbb
test
test
mov
xor
fsubp
cmp
mov
mov
push
push
test
repnz
pop
cmpsl
xchg
aaa
aad
sub
mov
in
mov
cli
in
mov
jl
std
lods
sahf
pop
mov
js
lahf
std
ds
push
scas
dec
xlat
pop
cmc
nop
imul
ljmp
fistl
add
arpl
fs
stos
imul
xchg
aas
fadds
sub
jae
cmpsl
xor
mov
mov
fidivrs
sahf
in
dec
ss
mov
push
adc
sub
ffreep
mov
push
mov
repnz
ffreep
jno
push
pusha
outsb
call
cmp
in
pop
or
hlt
xlat
jbe
push
dec
lock
ljmp
outsl
inc
fistpl
or
fistps
jmp
inc
dec
gs
pop
sub
stc
xchg
jmp
fwait
lret
mov
push
mov
inc
sbb
sbb
pop
mov
mov
xlat
sub
or
cld
jne
push
mov
jle
jmp
lret
sbb
jns
mov
cmp
adc
fstps
sub
lock
mov
out
dec
aam
jb
or
imulb
xchg
lret
add
ret
cltd
jae
xor
repz
addr16
pop
outsl
inc
or
iret
pop
mov
sbb
dec
pop
imul
dec
inc
lcall
cld
or
test
and
add
sub
mov
cmc
cmpsl
fbld
jmp
sarb
jle
push
lods
addl
xor
sbb
add
in
aaa
sbb
sub
cmpsb
mov
idivl
push
or
fldt
and
cli
sbb
dec
in
dec
sbb
and
leave
mov
movl
and
call
sahf
aad
mov
or
popa
mov
dec
or
faddl
jbe
test
pop
aaa
pop
fs
push
mov
and
sub
xlat
jns
mov
push
sub
test
out
lods
mov
test
arpl
js
lret
mov
es
push
pushl
aas
mov
ds
popf
call
xor
mov
and
mov
loop
pop
scas
dec
negb
push
sub
in
sbb
pop
sbb
scas
addr16
jmp
cltd
pop
push
sarb
mov
insb
mov
out
push
fadd
add
fsubl
sbb
pop
repz
subb
ret
inc
scas
lret
out
icebp
push
jbe
mov
out
adc
out
or
sub
notl
pop
cmpsl
mov
fidivs
sub
inc
rolb
daa
test
imul
inc
mov
xor
xchg
pusha
enter
test
mov
aaa
mov
insl
lahf
call
rol
mov
std
push
rclb
jae
imul
cmp
addr16
stos
pop
loope
imul
mov
sub
mov
sbbb
mov
pop
or
adc
sub
popf
movsl
leave
gs
jmp
ds
pop
sbb
lahf
ss
loopne
add
in
jnp
cld
cmp
xchg
ss
mov
lret
jne
dec
iret
sub
mov
mov
test
clc
inc
dec
aam
arpl
call
mov
cli
inc
push
inc
and
pop
icebp
mov
test
pop
mov
jg
pop
jnp
subl
movsl
in
push
adc
lea
mov
je
pop
xor
mov
jg
clc
jne
and
xor
inc
aam
push
xchg
xlat
add
sbb
or
decl
sbb
inc
mov
scas
fnstcw
xor
dec
dec
push
push
jb
stc
jnp
jb
xchg
mov
jo
mov
out
sub
addr16
outsb
mov
insl
push
lds
sbb
ljmp
rcrl
add
repnz
in
fidivrs
jmp
pop
addb
xor
mov
jg
jnp
dec
or
pop
xor
or
push
inc
fs
int
cmpsb
add
xchg
push
sarb
rcrb
popa
imul
bound
add
mov
test
mov
pop
push
fs
cmp
xorb
sub
dec
cmpsb
or
dec
mov
or
mov
add
add
test
fdivs
mov
jge
push
pop
ffreep
cmp
xor
cwtl
fcoml
sub
shlb
xor
aam
or
inc
adc
push
xchg
jecxz
push
and
mov
daa
mov
push
scas
test
cwtl
fistpll
clc
sahf
sub
aaa
mov
xchg
outsl
jno
std
mov
xor
in
inc
or
lock
call
and
imul
mov
fcompl
test
push
iret
stos
rcll
inc
insb
pop
xchg
adc
lret
jae
cmc
scas
mov
push
mov
or
dec
push
sti
and
div
and
jmp
out
leave
pop
popa
sub
add
mov
sub
pop
loope
xchg
les
loopne
inc
inc
dec
pop
and
adc
jnp
lods
nop
scas
sbb
popf
aam
xchg
popf
out
stc
mov
roll
dec
subl
pop
lret
ds
lcall
cmc
mov
add
cli
out
lods
inc
out
add
jno
sti
mov
mov
les
cmpb
int3
cld
hlt
lret
test
inc
push
cmp
add
mov
sbb
and
sub
in
lds
vmovaps
repz
pop
inc
popa
jnp
mov
repz
enter
test
and
jbe
cmpsl
adc
inc
enter
in
movsl
mov
das
outsl
push
cmp
mov
lea
sub
shl
adc
sbb
dec
jbe
jge
xchg
inc
outsl
mov
int3
cmp
xchg
push
outsl
fildl
adc
mov
add
sar
js
dec
mov
mov
cwtl
stc
push
and
xchg
jge
jo
aam
xor
mov
lods
push
adc
xor
mov
int
cmpl
out
ret
das
lahf
dec
shlb
push
cmp
cmp
and
cmp
xor
adc
ds
dec
fdivl
scas
mov
xchg
or
xor
frstor
mov
stc
xchg
mov
dec
inc
pusha
pusha
xorb
dec
mov
in
jg
push
incb
ret
loopne
sub
outsl
or
arpl
push
sarb
push
pop
sbbl
imul
push
in
push
jae
subb
icebp
sbb
or
sub
das
into
push
mov
push
les
rcr
dec
add
push
arpl
mov
int
jl
das
repz
fnstcw
mov
pop
cmp
pop
jne
and
push
sub
scas
fldt
jg
cmp
int3
inc
and
fs
imul
or
mov
lcall
xor
dec
push
or
pop
or
lahf
lret
xchg
aad
repnz
jne
mov
jmp
ljmp
add
mov
add
in
iret
in
add
shlb
pop
push
or
mov
repnz
jmp
pusha
sub
sahf
fs
mov
lods
dec
addb
int
mov
mov
js
mov
fmull
push
and
mov
push
adc
push
xorb
das
push
roll
push
clc
aad
fisubl
shll
pop
mov
push
dec
loope
ja
daa
mov
cmc
push
mov
cltd
mov
nop
das
jns
jmp
loopne
dec
stos
insl
jb
cmovae
mov
iret
leave
addr16
sahf
scas
jge
and
dec
xchg
inc
call
arpl
mov
in
pop
lds
jns
push
mul
pop
xor
or
cmp
pop
xor
test
clc
push
ret
jl
xor
dec
pop
add
out
xchg
fcomps
les
out
loopne
scas
or
sub
jno
mov
add
sub
mov
xchg
or
rcrb
xor
sbb
or
in
xchg
sub
inc
lea
jge
fadd
pop
dec
cmpsl
mov
jno
sbb
rcll
mov
add
fwait
push
push
sub
cmp
clc
xchg
mov
mov
mov
add
js
push
push
cmp
jno
or
mov
rorl
pop
add
js
push
push
cmp
jno
or
mov
rorl
pop
add
js
imul
cmp
jno
or
mov
rorl
cmpsl
add
inc
outsl
leave
subb
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jle
outsb
mov
dec
stos
mov
inc
movsl
insb
mov
jmp
sbb
pop
fisubrs
into
sub
imul
pop
mov
cs
push
sti
push
jmp
sbb
or
sbb
sub
jnp
imul
mov
push
mov
ret
push
jecxz
icebp
out
int
orl
and
pop
fwait
add
pop
iret
cmp
insl
xor
adc
gs
sub
adc
jge
mov
ja
xchg
lret
repnz
adc
cs
jnp
jecxz
sub
sub
fidivrs
andl
std
lea
pop
test
xchg
mov
test
mov
sti
das
or
mov
out
hlt
jmp
xor
inc
or
add
mov
scas
dec
sar
aaa
push
stos
ljmp
sub
scas
popa
jnp
xchg
xchg
xchg
mov
mov
sub
in
roll
add
arpl
mov
or
ds
test
pushf
pop
stos
dec
mov
fstpt
lret
push
loop
repnz
notb
and
xor
jnp
movhlps
or
dec
lea
push
xchg
push
xchg
jb
jae
outsb
stos
inc
mov
jnp
push
adc
jnp
push
test
stc
push
lahf
pop
xchg
dec
lds
pop
ljmp
fisubl
fidivs
cs
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
fldt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
or
lcall
cmp
mov
jle
inc
inc
mov
mov
stc
test
ja
dec
adc
das
hlt
test
fstpl
test
sub
mov
add
frstor
add
mov
dec
push
adc
or
cmpsl
dec
jbe
scas
outsl
inc
js
sub
and
jb
mov
push
mul
add
jg
outsb
add
into
pop
xor
sub
mov
ds
rol
add
movups
add
test
xor
leave
jmp
adc
pop
mov
mov
test
xchg
jbe
or
daa
aam
adc
xlat
movsb
or
pusha
mov
leave
scas
std
jb
sbb
jge
pop
and
std
ud2
sub
mov
aam
jo
jne
popf
icebp
inc
lret
lods
pop
lahf
nop
jb
push
adc
jne
dec
outsl
xchg
lahf
stc
or
mov
loope
cltd
out
sub
test
dec
fimull
sub
int3
pop
mov
aam
jno
xchg
in
sahf
mov
movsl
xor
rclb
dec
lds
jns
int
jg
pop
xlat
into
push
push
pop
std
sbb
test
or
sbbl
mov
into
mov
cmp
xchg
or
mov
mov
jg
jae
mov
mov
punpckldq
xor
cwtl
and
fstp
aas
ret
stos
xlat
xor
fcompl
std
cs
clc
mov
insb
arpl
xlat
mov
lds
jb
popf
cmc
add
add
pop
ret
jne
push
cmp
test
jg
pop
iret
jo
inc
inc
fdivl
out
fldl
xchg
jecxz
xchg
push
inc
cltd
lods
dec
push
mov
mov
xchg
pop
pop
shr
es
cmp
sbb
xchg
sbb
dec
sub
xchg
mov
sub
pop
subb
push
stos
xor
and
jno
ds
add
sub
jns
insl
es
jmp
adc
aad
rolb
dec
sti
cmp
mov
scas
fsubrs
imull
pusha
sahf
sbb
and
scas
add
fcmovnb
jae
sub
mov
arpl
stos
cmp
call
xchg
or
dec
jns
scas
jo
push
sbb
or
cs
push
inc
mov
ds
es
insl
mov
aam
inc
pop
jae
push
mov
stos
out
fnstcw
push
and
das
nop
mov
lock
test
xchg
sbb
popa
in
dec
xorl
imul
fprem
push
cwtl
or
and
dec
loopne
pop
lret
std
push
mov
rcrl
adc
mov
repnz
xor
loopne
notb
cwtl
xlat
push
leave
out
push
andps
mov
sbb
mov
adc
outsl
pop
pop
xor
xor
mov
add
adc
mov
sub
dec
dec
xchg
out
inc
or
pop
nop
jle
adc
pop
push
mov
add
mov
cmpl
add
mov
cmp
xor
inc
popa
lret
dec
or
ds
xor
test
fnstsw
mov
into
mov
mov
data16
mov
mov
fisubrs
xchg
pop
sub
adc
popf
lret
inc
inc
dec
xorb
mov
dec
repz
adc
jmp
dec
push
mov
lret
xlat
add
icebp
cwtl
and
pushf
mov
es
push
out
sbb
mov
jg
push
sbb
aad
fsubs
icebp
push
aam
pop
adc
mov
pop
sub
fimull
sub
jecxz
movsb
aas
divb
leave
mov
mov
or
lahf
xchg
sub
cmc
push
ljmp
lock
loop
push
movb
imull
xchg
sbb
jo
adcb
int
test
jnp
ja
or
ficoml
xor
lock
arpl
cmp
add
mov
jge
ss
push
mov
je
mov
rcrb
negb
cmpsb
loope
stos
push
scas
stos
aaa
dec
dec
jp
mov
jno
mov
jge
out
icebp
or
aad
mov
mov
or
je
stos
xor
lods
js
out
pushf
fs
fstpl
jg
mov
pop
mov
sub
pop
cmc
jo
outsb
xchg
inc
gs
xorl
and
cmpsl
dec
mov
cmp
jno
aad
pop
adc
daa
push
mov
jbe
das
out
fwait
push
rorw
das
and
outsl
sbb
xchg
sub
mov
add
pop
out
pop
sub
cwtl
loop
jge
fcompl
idivl
sub
aaa
add
sbb
mov
push
lods
popf
jmp
out
jg
push
push
pop
lods
sub
out
js
sbb
jl
loop
mov
mov
add
mov
jo
mov
push
mov
mov
or
aam
inc
push
addr16
xor
stc
imul
mov
lcall
sbb
bound
ljmp
mov
daa
adc
cmpsb
out
les
repz
adc
jnp,pt
pusha
push
lea
cltd
mov
xchg
aam
mov
inc
loope
mov
jl
add
or
shlb
adc
jne
pusha
icebp
stc
aad
push
int3
xchg
sbb
xchg
aaa
in
mov
mov
aad
inc
cltd
aam
sub
andl
inc
fcompl
adc
xorb
xchg
mov
mov
add
repz
test
mov
inc
cltd
sbb
dec
pop
pop
pusha
pop
fadds
test
inc
and
xor
jnp
xchg
or
popa
popf
lret
stos
xchg
adc
push
shrb
icebp
jne
mov
aam
mov
adc
mov
inc
jg
pop
scas
lock
jbe
push
aas
aaa
or
cmc
stc
out
mov
imul
mov
outsl
jae
sbb
pusha
rcrl
mov
and
pop
push
aam
rorl
std
dec
xor
stos
jb
repnz
into
cmp
aaa
pusha
fadds
cmp
inc
or
jecxz
data16
xor
icebp
sahf
push
fnsave
ds
cs
cmc
mov
cmp
and
cmpsl
ss
cmp
xor
mov
or
mov
xlat
xlat
insl
push
push
pusha
inc
mov
xchg
int
mov
ss
mov
and
sarl
pop
pusha
mov
mov
inc
cmp
pop
add
dec
xorl
lea
daa
pop
mov
and
rcrb
pushf
and
dec
mov
push
cltd
out
or
xor
mov
mov
xchg
push
pop
sbb
lcall
fcoms
mov
mov
cmp
in
int
adc
mov
sub
mov
gs
test
mov
das
fisubrl
lods
jo
sbb
pop
sahf
cmp
clc
xorl
int3
sbb
je
popf
add
dec
aam
ds
pop
lret
push
lret
lock
pop
aaa
out
out
scas
in
lret
mov
popa
pop
xchg
pusha
shll
shrl
pop
test
mov
enter
sbb
mov
cmp
fsub
jg
loop
stos
hlt
dec
and
pushf
mov
or
jg
andb
jne
dec
ja
jae
mov
jl
push
shrl
push
pop
pop
in
outsl
jns
stc
push
fadds
jmp
mov
shlb
call
mov
rorb
in
lock
push
outsb
cmc
es
fdivr
lahf
xor
jno
xor
xchg
adc
pusha
lds
fsub
pop
xchg
imul
fmuls
jbe
les
ss
repnz
repnz
std
aaa
pushf
loope
arpl
sub
ja
dec
cmp
pop
mov
int3
xorb
xor
adc
test
in
jle
sbb
insl
jecxz
cmp
pop
or
test
dec
scas
loopne
sub
lcall
jno
idivl
mov
jbe
pop
das
mov
jb
xchg
pop
or
pop
push
mov
sbbb
mov
add
lea
es
adc
stos
push
insb
adc
mov
push
mov
lods
cltd
push
adc
lret
out
mov
adc
jg
push
xchg
xor
negl
push
into
fidivrs
jne
int
cli
mov
mov
push
punpckhdq
dec
inc
lods
imul
outsb
pop
mov
sbb
or
dec
inc
mov
mov
inc
xchg
sbb
mov
xchg
push
das
sbb
cmp
dec
hlt
js
adc
sbb
aad
das
xor
cmp
popa
mov
data16
xor
sub
push
cwtl
inc
pop
in
jno
arpl
mov
dec
xchg
sbb
cmp
mov
lds
lds
popf
or
insb
push
push
cwtl
mov
push
inc
jge
pop
sbb
aas
call
sbb
add
inc
mov
outsl
sbb
jo
sti
push
sti
dec
sarb
jns
push
call
sahf
mov
cltd
out
push
orl
call
inc
cmpsb
insb
mov
sub
fstps
mov
fwait
iret
insl
and
je
outsl
lock
sbb
adc
dec
addb
fnstenv
cmp
out
inc
daa
aaa
or
push
int
adc
mov
aas
ret
lret
adc
adc
sub
and
mov
repnz
push
orb
xchg
fmuls
mov
xchg
popf
dec
mov
fscale
xchg
sbb
je
mov
mov
mov
je
pop
xorl
mov
mov
aas
lcall
out
cmpb
gs
shlb
inc
xchg
mov
mov
lea
push
adc
add
outsl
inc
add
movl
mov
movb
imul
jns
movsl
jl
sub
mov
and
dec
xchg
jge
into
into
mov
sbb
mov
mov
adc
lods
hlt
mov
mov
arpl
sbb
inc
pusha
inc
jl
scas
xchg
inc
pop
jns
jae
pop
fldcw
pop
pushf
inc
mov
in
cli
lods
inc
jno
sti
mov
int
sbb
dec
adc
adc
out
cwtl
test
out
xchg
fidivrl
jmp
adc
pushf
in
adc
imul
rep
jo
and
testb
xor
sub
pop
test
jp
out
mov
fnstcw
call
scas
cmp
movsl
orb
sub
add
sar
nop
xchg
int3
xchg
test
imul
subl
aad
xchg
outsb
mov
filds
jae
pushl
pop
in
pop
pop
or
test
das
push
jno
push
mov
add
or
sbb
lahf
mov
cmc
jnp
shrl
and
lret
xchg
dec
add
aaa
lahf
out
daa
test
je
mov
cli
mov
and
cmp
jns
sbbb
shlb
mov
pop
inc
jmp
popf
mov
subb
xlat
orb
cld
and
cmp
xchg
scas
pop
push
jle
in
xor
rorl
mov
out
lret
cmp
push
jg
in
lods
sti
testb
ficomps
in
mov
mov
fnsave
push
aas
inc
int
pop
pop
dec
aad
mov
imulb
in
lahf
cmpsb
inc
pusha
add
jecxz
or
movsl
out
fbstp
mov
aad
xor
jp
adc
nop
test
insb
hlt
push
push
sar
or
ljmp
lock
mov
sbb
icebp
aam
sbb
ret
scas
rcll
mov
aaa
ja
mov
sahf
arpl
jmp
dec
adc
fwait
pushf
clc
dec
pusha
out
frstor
imul
popf
wrmsr
xor
sub
jmp
adc
mov
in
push
test
and
hlt
add
sti
xor
sahf
add
stos
mov
mov
xchg
xchg
jmp
and
or
pop
add
push
mov
sbb
inc
xor
push
inc
mov
pop
imulb
es
lret
mov
push
insl
scas
mov
xchg
pop
inc
sub
push
mov
inc
icebp
add
aas
mull
shlb
popf
or
and
jno
repnz
mov
fistpll
cmp
and
xchg
cmp
sbb
outsl
jmp
leave
sub
rdmsr
push
dec
into
shll
loopne
pop
outsl
adc
push
sbb
lea
sahf
xchg
ret
cmpsb
fpatan
ds
je
xchg
lret
mov
mov
mov
lea
dec
loope
popa
aad
dec
lds
xchg
push
and
inc
dec
and
ljmp
jl
jmp
pop
pop
mov
or
push
or
in
sub
imul
ljmp
sti
and
adc
icebp
pop
movsl
cmp
or
push
jl
cmp
loope
scas
ret
mov
pop
sbb
or
scas
es
rcll
cld
dec
dec
ss
sub
pop
lods
js
stos
movsl
cmp
aas
mov
rolb
repz
cltd
or
arpl
xchg
sub
push
cmp
sub
and
cs
sbb
std
and
sbb
insb
arpl
outsl
mov
jge
adc
stos
mov
test
mov
es
mov
push
push
jo
xor
loopne
sub
movsl
hlt
sub
addr16
loop
jmp
xchg
call
lret
lcall
nop
scas
cmp
push
clc
mov
xor
cltd
xor
mov
repnz
dec
popa
sub
pop
stos
jae
adc
adc
test
dec
loop
test
dec
adc
ret
adc
pop
test
mov
bnd
mov
pop
repz
loop
iret
push
cli
js
dec
sbb
pushf
pop
aas
jg
or
gs
mov
dec
dec
rcrl
mov
push
repz
adc
lock
dec
jl
and
mov
push
mov
jmp
jbe,pn
adc
scas
lahf
sti
xchg
jmp
cmp
mov
idivl
xlat
loope
cmp
jg
mov
xor
adc
adc
xchg
movsl
sub
mov
adc
and
xchg
push
push
data16
addr16
scas
insb
pop
in
inc
fists
rcrb
stos
mov
fiadds
in
in
test
aam
rolb
repnz
lock
pop
fimuls
hlt
push
push
inc
clc
or
pop
je,pt
or
or
into
jge,pn
nop
push
xchg
dec
insb
cltd
mov
call
addr16
mov
out
loope
cli
mov
hlt
jbe
xor
dec
in
jb
insb
addr16
and
xchg
cvttps2pi
data16
scas
jnp
andb
or
jno
fwait
inc
pop
lock
cmpsl
jg
jg
pop
pusha
in
fwait
dec
fcoms
or
popf
loopne
outsl
out
es
or
mov
xchg
ljmp
js
jo
pop
mov
or
addr16
pop
std
addr16
dec
stc
jp
scas
pushf
lret
subb
adc
or
fucomp
inc
push
add
pmulhuw
movsb
or
cld
in
pop
dec
data16
je
sbb
punpckldq
cwtl
fidivrl
in
scas
pop
out
pop
movnti
pop
jnp
orb
inc
mov
mov
cmp
shl
std
aaa
cmp
cli
enter
adc
and
jno
icebp
testl
aaa
fs
pop
sti
xchg
inc
out
das
push
test
push
pop
xor
shlb
mov
inc
in
nop
mov
jb
aas
xorl
mov
sub
xor
or
imul
cs
sbb
mov
mov
and
icebp
cmp
inc
mov
pop
incl
cmp
test
mov
sub
cwtl
inc
mov
mov
je
jle
gs
out
jg
mov
push
add
add
dec
pop
jmp
and
add
jg
loope
jae,pn
insl
xor
jg
in
repz
js
xchg
stos
mov
mov
negb
loop
jp
fwait
inc
out
test
aaa
mov
ja
test
lret
pop
pop
stos
inc
jecxz
lock
lret
add
cmp
aad
cli
adc
mov
ret
iret
adc
add
aas
pop
and
inc
test
mov
mov
sub
call
fiadds
cmp
stc
outsb
inc
daa
adcb
in
fcmovnu
sarl
or
ficomps
adcl
cmpsl
int3
adc
mov
addr16
xchg
jge
js
arpl
fcomps
sbb
mov
pop
std
ret
push
lret
pop
xchg
pop
pop
ljmp
pusha
mov
or
push
int
and
aas
xchg
dec
lds
gs
out
xor
sub
insb
icebp
insl
xchg
mov
inc
pop
rolb
lods
mov
add
inc
pop
ss
mov
xor
push
dec
inc
psrlw
les
inc
outsb
and
hlt
pushw
popf
add
cltd
js
xlat
nop
push
push
rorb
inc
repz
bndldx
pop
adc
bound
iret
repnz
mov
mov
push
in
mov
mov
bound
and
pop
xor
jo
pop
out
push
jns
mov
cmp
into
scas
sub
test
add
cmp
xchg
shlb
bound
or
mov
sub
mov
je
mov
out
and
mov
cmp
adc
int3
cmp
clc
aas
jp
xchg
fwait
arpl
popf
jae
ret
daa
inc
cmpsl
cmpsb
adc
sbb
jl
add
cltd
mov
cs
sub
icebp
sub
and
outsl
xchg
push
xchg
sub
xorl
std
in
xor
lcall
sub
rorl
push
dec
dec
jae
adc
aad
xchg
push
add
xchg
stos
daa
clc
pop
xchg
fst
les
addb
dec
jg
cmpsb
in
addr16
je
or
stos
cmpsl
or
push
ret
in
mov
popf
xorl
mov
pop
pop
dec
ljmp
xchg
jbe
jmp
mov
sti
shrd
push
xor
fwait
lods
insb
js
push
std
dec
test
and
int3
shrd
mov
xor
and
mov
mov
or
leave
ss
and
cmc
push
insb
movsl
cs
sbb
jle
cld
cmp
xchg
dec
jnp
xchg
lcall
cltd
adc
mov
int3
loop
rcrl
sub
xlat
sub
gs
or
outsl
arpl
push
ret
pushw
je
into
cli
shlb
dec
rol
ss
cmpsb
mov
fadds
sbb
push
nop
cmp
mov
loope
lea
aaa
test
mov
inc
add
arpl
mov
sbb
xor
lods
jae
add
ja
xchg
mov
or
xchg
mov
roll
pushf
rol
sub
jno
pop
adc
push
cld
xchg
gs
pop
sahf
mov
pop
inc
test
sarl
dec
jmp
add
inc
jbe
cmpsl
or
mov
test
outsl
fisubrs
in
add
shl
rolb
sbb
out
xor
push
je
push
scas
pusha
ffreep
sub
xchg
lret
mov
or
xor
mov
sbb
lcall
mov
jmp
popf
xchg
les
and
xchg
out
pop
mov
adc
cmpsb
popa
and
fdivs
leave
jg
inc
repnz
in
js
cmp
or
adc
cmc
pop
xor
xchg
test
and
fxch
adc
inc
clc
inc
xchg
jmp
shlb
jne
cmp
stc
mov
xchg
jae
or
test
in
fs
daa
push
ljmp
pop
adc
xchg
pop
adc
and
lret
bndstx
pop
sbb
test
movsb
push
out
pop
addb
xor
dec
daa
ret
xchg
inc
jae
shrl
push
jnp
movsb
push
and
fcoms
test
push
and
call
mov
aam
lea
pusha
out
and
inc
shll
scas
imul
pop
imul
fwait
or
pop
mov
hlt
and
mov
mov
inc
out
xchg
mov
xchg
mov
dec
cmp
mov
xor
daa
enter
lret
filds
pop
pop
jbe
sbb
test
sub
or
loope
rcr
arpl
push
push
dec
stos
fldt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
fldt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
fldt
lret
push
sti
push
jmp
sbb
or
cmp
sub
jp
imul
mov
dec
stos
cmp
cs
sahf
sti
mov
add
adc
leave
shll
mov
test
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
scas
jecxz
repz
pushf
shr
testl
jae
inc
sbb
insb
and
add
jecxz
repz
pushf
shr
mov
fcoml
insl
inc
sbb
sub
jl
dec
add
jecxz
repz
ret
inc
shl
mov
fcoml
xor
pop
jno
push
sbb
adc
jecxz
xchg
cld
jb
xor
imul
push
inc
xchg
add
and
jmp
mov
inc
jmp
mov
rcrb
sub
pop
jl
inc
push
fcmovu
dec
adc
jecxz
mov
push
idiv
and
and
test
adc
cmp
sbb
xchg
jl
cmp
test
pusha
adc
aam
imul
cld
mov
sub
mov
jl
dec
std
pop
xor
mov
lods
adc
je
inc
jl
lds
mov
pusha
sub
jl
mov
push
inc
push
and
ret
adc
mov
dec
jmp
bound
fsubrl
dec
push
pop
adc
jecxz
repz
pushf
rorl
mov
jp
ljmp
push
and
jbe
jle
pop
push
lds
in
or
repnz
movq
imul
cmp
mov
std
test
in
mov
or
fs
adc
jbe
jge
mov
xchg
mov
cmpsl
mov
sbb
sub
cmp
or
sbb
insb
and
add
jecxz
repz
pushf
shr
mov
fcoml
or
sbb
insb
and
add
jecxz
out
xor
xchg
js
sbb
mov
outsl
push
mov
lods
les
push
sbb
lahf
push
and
push
sub
add
xchg
or
repz
xchg
add
jmp
ret
mov
push
fisttpll
call
dec
mov
mov
dec
dec
scas
enter
arpl
xchg
push
cld
fidivrl
in
fildll
cmp
fdecstp
inc
dec
dec
test
incl
jae
ror
popf
or
lds
mov
out
and
lcall
dec
xchg
sub
repnz
cld
inc
inc
jb
pop
sbbb
jl
inc
stos
cmpsb
mov
jno
sbb
xchg
fmuls
mov
xor
pop
into
mul
leave
ffreep
je
aad
add
int3
push
pop
mov
cmc
inc
movl
cmp
mov
movsl
jae
adc
mov
push
sahf
pop
rolb
arpl
ret
cmpsb
jle
cmp
imul
and
jle
dec
push
dec
pop
push
jge
imul
mov
ret
sbb
int3
loope
and
and
ss
arpl
in
test
es
sti
out
out
add
or
js
psrlq
out
pusha
xchg
xchg
mov
loopne
sbb
adc
cmp
pushf
arpl
cli
sbb
or
cmpsl
fsubrl
cli
sbb
insl
test
shl
dec
pop
pop
data16
adcl
inc
sub
xchg
mov
imul
add
sub
je
test
cli
cmpsl
paddusw
xchg
int3
or
xchg
add
inc
dec
subb
outsb
pop
xlat
pop
sbb
stc
je
outsb
cli
scas
pop
pop
push
call
push
cmp
xor
jp
jne
xchg
hlt
icebp
shlb
add
pop
ljmp
lods
scas
and
jo
xchg
sbb
add
push
stos
aaa
mov
xor
loope
clc
into
push
movsb
sub
dec
jns
adc
loop
push
inc
in
repnz
je
es
adc
sti
out
repnz
add
movsl
aas
mov
or
push
das
ljmp
imul
mov
xor
ret
shrb
rcrl
lds
jnp
jne
dec
imul
into
pusha
jecxz
sbb
jge
cwtl
iret
pop
jne
loope
xor
jmp
int
inc
mov
loope
xor
stos
imul
sbb
push
std
jne
aaa
xor
pop
add
sarb
mov
fcmovnu
xor
loope
and
pop
add
mov
push
mov
and
inc
and
dec
out
shl
arpl
daa
xor
gs
sbb
ret
adc
das
xorl
insl
sbb
into
xchg
setne
lea
pop
pop
jmp
sub
and
xlat
sbb
dec
xor
push
jle
std
mov
loop
hlt
std
mov
xchg
or
xchg
cmp
repz
jbe
push
push
fdivrs
xchg
mov
gs
adc
repnz
and
cmp
jo
push
aaa
push
stos
mov
daa
addl
adc
mov
js
jmp
mov
sub
xchg
movl
mov
shr
jns,pt
jge
fs
pop
testl
enter
jno
cli
xchg
mov
dec
xchg
imul
insb
gs
dec
loop
add
mov
je
stos
push
insl
mov
imul
mov
and
fstl
pop
xchg
pop
lock
xchg
mov
adc
in
pushf
fdivl
adc
mov
xlat
idivb
test
popa
cwtl
xor
int3
ret
mov
sbb
jb
rolb
icebp
test
add
pop
dec
loop
jge
popf
das
xchg
push
test
into
sub
inc
mov
lcall
dec
jnp
divl
add
xchg
out
mov
or
sbb
data16
mov
repz
cwtl
jb
loopne
cmp
subb
outsl
jge
sbb
adc
shl
add
add
mov
xchg
cmc
xor
les
test
popf
addr16
inc
sti
xor
add
cld
jne
mov
mov
dec
jb
cmc
test
xchg
mov
in
ljmp
push
pusha
je
xor
mov
outsl
movsl
addr16
sub
add
adc
aam
sarb
loop
adc
nop
push
jne
and
inc
pop
clc
ja
xor
fbstp
cli
cld
jb
inc
pusha
fisttpl
clc
add
mulb
mov
add
shl
mov
pop
icebp
jmp
aas
inc
divl
mov
mov
addr16
setnp
test
mov
sub
mov
inc
dec
cwtl
and
lods
gs
jbe
ja
xchg
test
and
iret
push
dec
bound
mov
cli
popf
and
mov
fstl
dec
sub
outsb
wrmsr
mov
mov
push
mov
insb
jmp
imul
jmp
mov
push
stos
into
popw
mov
enter
orl
inc
add
dec
out
in
notl
enter
sub
outsl
push
jns
and
pop
scas
jo
insb
ljmp
or
xchg
inc
mov
ja
pop
push
mov
mov
lds
sub
push
imul
dec
xchg
adc
cmp
das
xchg
cmp
hlt
cmpsb
ficoms
cmp
je
inc
fiaddl
aam
ja
das
cs
inc
ret
inc
orl
leave
mov
dec
popa
out
sbb
es
lahf
cwtl
insl
test
inc
aad
lods
mov
cli
pusha
cli
jl
xor
push
loopne
xor
dec
jmp
lret
les
mov
nop
and
jbe
cmp
push
and
cli
inc
jp
xor
fs
hlt
cmp
xchg
loop
ret
in
fs
dec
adc
inc
rcll
stos
xchg
jae
call
or
into
inc
sti
fnsave
adc
jb
sub
dec
repz
outsb
xor
dec
mov
lret
lock
sub
dec
sbb
stos
orb
jb
sbb
mov
nop
mov
cmc
in
out
adc
xchg
sub
mov
push
mov
arpl
inc
adcb
pop
test
dec
ds
test
mov
cmp
fstpt
pop
out
xchg
and
dec
xchg
mov
xor
adc
adc
push
mov
sbb
cmp
dec
test
ljmp
mov
mov
dec
jne
pusha
addr16
xchg
adc
out
xchg
push
sbb
add
xchg
jne
pop
and
inc
rcr
sbb
vaddsubps
adc
push
mov
cmp
pop
push
sti
cmp
int
mov
or
sti
xchg
dec
hlt
or
cmc
repnz
add
sbb
xchg
les
xor
into
loop
jnp
aad
xor
test
jb
add
xor
fwait
mov
mov
je
cmp
push
ret
rolb
out
sub
mov
cwtl
pop
inc
and
xchg
lea
clc
enter
into
pop
rorl
pop
jmp
sub
test
sbb
pop
clc
push
inc
mov
fs
xchg
and
or
arpl
jecxz
jp
jo
push
divl
out
mov
jo
into
mov
cld
ret
mov
sub
mov
inc
sub
cmp
jge
shll
mov
sti
mov
outsl
xor
xchg
repz
push
pop
jnp
mov
stc
int3
sub
inc
ds
mov
loopw
mov
int
int
ret
mov
or
loop
movsl
stc
jns
in
lock
cs
dec
jnp
add
mov
jecxz
jl
or
bound
in
jne
push
outsb
mov
and
mov
inc
loope
mov
lods
imul
mov
xchg
idivb
adc
mov
outsb
mov
sbb
lret
test
jp
sub
repz
pop
jle
lock
xchg
pop
add
js
scas
sub
ret
imul
cs
push
push
mov
or
and
fs
loopne
sahf
arpl
imul
fstps
call
call
xchg
sbb
in
jbe
push
repnz
mov
and
mov
jle
sub
pop
cld
xchg
lret
add
fstl
cltd
jne
mov
pop
and
mov
fsubs
into
imul
in
das
mov
or
std
in
push
jecxz
and
push
mov
test
xchg
hlt
cmpsb
xor
sub
dec
xlat
lret
sbb
xor
add
jae
jnp
adc
int
push
ss
add
mov
lds
dec
mov
fs
aas
xor
jno
mov
xchg
rorb
mov
push
cmp
or
repz
pop
mov
rclb
shrb
pop
jp
das
adc
cmp
sub
daa
and
inc
add
icebp
inc
pop
out
jp
movl
cld
cs
mov
rorb
lret
cmp
lods
jg
xorl
lcall
add
mov
pop
test
xchg
pushf
and
cmpb
pop
rorb
xlat
not
mov
leave
xchg
xlat
std
inc
xlat
jecxz
push
jge
and
repnz
sahf
mov
jb
push
mov
xchg
add
in
lret
pop
and
ffreep
jmp
dec
dec
xchg
outsl
add
test
fisttpl
sbb
mov
sub
dec
test
mov
jmp
push
dec
mov
xchg
jb
xor
leave
cmp
mov
and
xor
mov
int
leave
scas
ret
in
jg
scas
loopne
xchg
and
mov
add
inc
std
test
gs
leave
in
or
add
dec
mov
cmp
insb
fbstp
xchg
push
shrl
in
pop
sbb
shlb
nop
cld
xchg
and
in
jae
dec
inc
mov
mov
push
pop
dec
outsl
push
lds
push
pushf
popa
xor
shll
cs
pop
pop
stos
popf
lret
ljmp
shrl
and
mov
dec
cmp
xchg
incl
cmp
cs
pop
clc
or
imul
xor
or
imul
fmul
movsl
push
push
push
lret
dec
iret
imul
into
inc
adc
sbb
sub
sub
xchg
cmpsb
mov
push
mov
push
mov
sub
mov
cmpsb
aam
icebp
cli
xchg
xchg
push
sub
popl
jmp
jl
sbb
icebp
pop
jae
push
sub
xlat
jmp
and
mov
rorl
jne
ret
dec
inc
imul
push
xor
adc
ds
pop
mov
sti
jns
sub
xchg
inc
xchg
push
jb
gs
inc
pop
divb
fcmovu
inc
xlat
mov
mov
xchg
out
jnp
cltd
jmp
popa
lea
inc
aaa
test
inc
sub
jge
cmpsb
add
inc
adc
mov
and
mov
push
aas
enter
sub
pop
dec
jns
leave
add
js
xchg
pop
cwtl
xor
push
push
fldcw
mov
push
sub
lcall
les
out
pop
in
fdiv
cs
shll
xchg
sbb
push
loop
insl
dec
insl
lods
lret
cmp
iret
nop
cmp
mov
sub
jg
andb
jle
pop
std
xlat
cs
rcl
push
mov
jmp
mov
mov
pop
lcall
test
std
xor
hlt
loopne
out
insl
jb
imul
xor
mov
call
pusha
ss
push
mov
andb
dec
idivl
adc
test
sub
push
xor
cli
jnp
xchg
enter
sbb
or
popf
mov
push
cmp
rep
mull
call
mov
in
pop
sbb
push
cmp
mov
push
insb
aas
icebp
mov
mov
imul
dec
xlat
fwait
ja
push
xchg
mov
lret
roll
sbb
lods
push
and
adc
jp
popa
cli
mov
cwtl
insl
push
mov
popf
pop
notb
pop
and
fsubs
inc
out
jl
cltd
fisttpl
ficompl
leave
fwait
jno
aam
out
sub
pop
fists
icebp
in
fwait
ja
mov
adc
test
inc
fsubs
test
pop
ret
lahf
push
jecxz
mov
push
or
cmpb
pop
dec
push
outsl
sbb
jle
push
in
ret
mov
lcall
jg
das
add
outsb
jle
out
or
sti
fsubr
xchg
mov
rolb
push
mov
cmpl
sub
fnstcw
mov
aad
xor
cmc
rcr
mov
out
sbb
mov
add
bound
pop
bound
es
into
push
jnp
mov
cmp
cmp
stc
push
sbb
mov
jbe
xor
addr16
ja
loop
push
pusha
xchg
mov
mov
rcrl
popf
pop
add
lods
push
mov
les
test
mov
push
inc
loope
and
mov
or
inc
sub
bound
push
lret
test
cli
in
mov
inc
test
cmpb
es
push
in
roll
outsb
cltd
jmp
add
fldl
sbb
xchg
sub
stos
movsl
gs
movsb
sbb
es
jmp
push
xchg
mov
aam
mov
mov
arpl
mov
xor
dec
mov
or
fiadds
test
lods
and
es
fs
loop
mov
sbb
orb
cmp
xchg
xchg
sub
pop
add
or
fnstenv
mov
adc
lret
inc
stos
in
imul
movsl
sub
popf
cli
cltd
loop
es
jecxz
cwtl
pushf
into
icebp
xor
clc
add
xchg
fwait
lret
repz
ret
sub
push
inc
lret
jmp
test
imul
ljmp
cmp
das
das
mov
push
push
sbb
cmpsb
xorb
cmp
call
mov
sbb
adc
movsb
xchg
and
dec
sub
xchg
cmpsl
out
or
lods
mov
pop
nop
outsb
sbb
mov
mov
push
xchg
cmpsb
daa
insl
xchg
mov
and
jle
xor
xor
pop
ret
xchg
and
jo,pn
ret
adc
pop
cmp
call
push
pushf
mov
inc
cmp
cmpsb
scas
jmp
test
enter
nop
cld
in
jae
cmpb
fst
fsts
mov
lret
popa
jne
mov
pop
divb
pop
mov
adc
push
sbb
fisttpl
test
inc
inc
jne
inc
shlb
fcomip
mov
and
jnp
xchg
inc
scas
ficoms
scas
mov
inc
cmp
int
lock
fisubrl
imull
test
mov
adc
mov
mov
xor
mov
fcomps
mov
or
cmpsl
xor
test
cmp
fildll
test
daa
call
imul
stos
flds
and
lds
in
inc
pop
mov
jp
sub
hlt
cmp
mov
xchg
jnp
and
into
outsb
xchg
mov
xchg
xor
int
jle
mov
mov
leave
xorl
mov
jae
mull
dec
and
mov
mov
or
mov
adc
fildll
roll
add
cmp
cmpsl
add
sbb
inc
call
fsubrs
inc
fldcw
sub
sub
mov
mov
push
cmpsb
and
push
pop
mov
jecxz
add
daa
or
rolb
jnp
lahf
loop
test
cmp
lea
mov
mov
cld
out
gs
mov
sbb
dec
mov
in
data16
scas
dec
mov
mov
popf
fadds
orl
jecxz
pushf
adc
pushf
fsts
jl
shl
pop
ljmp
adc
add
mov
mov
cltd
xchg
jmp
mov
popa
xchg
jp
int
ds
dec
cmp
hlt
aas
sub
push
sbb
add
in
mov
ja
dec
sti
movsb
sahf
movsl
js
sbb
cmp
fstp
pop
xor
out
push
push
nop
pop
lods
jmp
ret
mov
std
push
jae
sbb
bound
idivb
push
cs
ds
adc
lea
mov
sar
adc
movsb
xchg
or
xlat
pop
push
lret
leave
push
sbb
sub
sub
sbb
mov
div
inc
in
jle
cwtl
fisttps
sahf
mov
cli
push
or
adc
xchg
mov
dec
jecxz
inc
sbb
sbb
rcrl
inc
lcall
clc
jno
data16
jns
shrb
add
mov
cmp
push
or
pop
insb
sbbl
jae
pop
adc
dec
mov
bound
mov
sbb
movsl
fyl2x
jg
cmpsl
fisubs
movsl
dec
lods
and
add
push
psrad
add
sbb
xor
mov
sub
inc
cld
xchg
ds
icebp
dec
movsb
cmpsb
in
pop
or
lcall
pop
rclb
adc
lahf
xchg
mov
push
dec
ror
loope
inc
pop
int3
addr16
jmp
cld
add
arpl
inc
push
or
out
add
sub
es
mov
xchg
mov
loope
bound
mov
dec
pop
into
jle
mov
add
and
adc
adc
jle
rcrl
sti
out
sub
pop
lock
or
add
sarl
stc
jnp
sbb
lods
scas
pop
xorl
loopne
sub
outsl
cmp
push
push
imulb
pop
sub
fisubs
out
rcl
inc
inc
sahf
xchg
push
clc
sbb
in
xchg
xchg
in
and
pop
cmp
jp
mov
mov
lock
mov
popa
jno
pop
shlb
mov
ret
mov
cmp
push
leave
and
sbb
inc
sbb
mov
push
push
mov
test
mov
cld
mov
lock
push
lods
fcoml
ds
jmp
jbe
fnstenv
or
cmp
inc
out
mov
ds
cmpsb
int3
dec
pop
add
inc
jle
cmp
pop
jnp
xor
movsb
push
cli
push
pop
lret
mov
adc
sub
inc
mov
adc
pop
mov
mov
inc
inc
and
inc
and
pop
add
call
mov
aam
lock
subb
pusha
int3
pop
jl
int3
out
pop
mov
in
push
pushf
arpl
test
pop
cmpsb
test
rcrb
mov
push
cltd
inc
sbb
mov
jmp
xor
pop
push
mov
adc
mov
mov
out
mov
jns
xor
clc
inc
pop
jno
fmuls
mov
mov
pop
movsl
dec
mov
or
lds
inc
pop
stos
mov
in
mov
jns
inc
and
jnp
sbb
movsl
movsb
xlat
inc
inc
fidivs
jle
sub
jecxz
das
in
lds
es
mov
xchg
adc
in
and
dec
cmpb
out
pop
pop
jbe
test
pop
add
lock
loopne
int
add
incb
ffree
dec
or
push
pop
rorl
cltd
cli
sbb
push
sub
mov
call
add
mov
sub
and
xchg
scas
pop
sub
int3
sbb
aas
sub
dec
push
cwtl
sub
pop
int3
sahf
xchg
stc
mov
stos
mov
fxch
fiaddl
test
push
in
sbb
fisubrs
adc
xlat
pop
pop
inc
loope
mov
xchg
or
sbbb
ljmp
les
cmpsb
adc
jg
cmp
outsb
xor
stos
rcrb
testb
pop
jle
add
fidivrl
sbb
jmp
inc
add
sub
push
rorl
inc
jns
inc
loop
out
push
xchg
pop
fsubp
jge
rcr
jnp
mov
lods
push
mov
stos
jo
in
add
jb
lods
push
jg
addr16
cmp
mov
jmp
or
in
iret
push
inc
fisttpl
jg
movsb
ficomps
out
lods
jmp
fisubl
mov
push
fdivrs
mov
pop
add
inc
test
scas
xchg
inc
pushf
cmp
movsb
cltd
stos
or
push
ds
push
lahf
cmp
mov
sbb
dec
fmull
imul
repz
ret
in
mov
fcoml
or
sbb
insb
and
add
jecxz
repz
pushf
shr
mov
fcoml
or
sbb
insb
and
add
out
repz
ret
pushf
sarb
mov
sbbb
arpl
cld
inc
sbb
insb
and
add
ret
mov
xor
add
pushf
ret
fldenv
stos
hlt
int3
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
les
je
fs
scas
push
and
push
cmp
or
cld
in
cmc
fsub
int3
xchg
mov
movsb
mov
insb
jne
fs
adc
add
xor
and
aam
les
mov
movsb
mov
insb
je
fs
adc
add
xor
and
aam
in
xchg
mov
in
ret
xchg
out
lret
mov
inc
xor
xor
iret
pop
or
in
mov
daa
jecxz
das
dec
add
leave
in
add
and
sarl
adc
adc
leave
jnp
mov
and
jle
stos
add
std
mov
add
sub
loope
xchg
imul
cmp
and
les
add
je
xlat
push
movsb
arpl
xchg
daa
fnstenv
cld
cmp
and
mov
and
or
lods
in
push
xor
add
loope
hlt
dec
int3
mov
sub
imul
mov
movsl
lea
jl
insb
je
fs
adc
add
xor
and
aam
in
hlt
fsub
int3
xchg
mov
movsb
in
adc
insb
sbb
popa
sub
push
inc
pop
mov
mov
mov
sahf
ror
or
add
jno
pusha
dec
xor
pop
or
test
mov
in
mov
aas
pop
xor
sub
add
xor
and
aam
in
hlt
fsub
int3
xchg
mov
movsb
mov
insb
je
fs
adc
add
xor
and
aam
in
hlt
fsub
int3
xchg
mov
movsb
mov
and
addr16
rclb
inc
cmp
fsubs
test
jecxz
pop
hlt
fcomps
jl
call
dec
popa
frstor
dec
mov
call
jmp
mov
xchg
sbb
xchg
inc
test
xchg
rcrl
fisttps
imul
xor
pop
and
pop
imul
fs
push
xchg
nop
sub
lods
leave
repnz
or
cld
pushf
popa
mov
es
jl
jge
into
mov
jmp
je
imul
fldcw
jo
add
pop
jmp
je
movsb
ss
outsl
insb
add
arpl
stos
cltd
decb
push
stc
add
hlt
ja
sub
mov
or
mov
pop
fdivrl
push
jmp
sub
mov
int
nop
notl
mov
xchg
jecxz
stos
fsub
outsb
mov
mov
add
ffreep
sub
idivb
int3
data16
cmp
push
push
aaa
ja
and
adc
xor
pushf
or
push
add
pop
or
cmp
or
adc
jae
add
mov
inc
stos
pop
aam
xchg
in
pop
cmp
mov
popf
orl
add
incl
ficompl
dec
nop
lods
mov
pop
in
sub
insl
pop
call
mov
loope
ret
mov
mov
sub
jl
push
sub
inc
loop
pop
jmp
adc
fs
ja
mov
outsb
add
sbb
cmpsl
cmp
jl
xchg
push
mul
dec
imul
sti
jmp
fbld
loope
imul
jge
sti
mov
xchg
jne
xor
loope
adc
icebp
or
scas
and
mov
push
iret
xchg
cmp
xchg
in
or
cmpsl
movsl
pop
mov
dec
fnstsw
or
outsb
fmull
in
mov
lret
sub
pushf
pop
cwtl
adc
iret
out
push
mov
mov
dec
shlb
cld
lar
lahf
in
insl
mov
inc
pop
int
mov
inc
push
lahf
cli
test
sbb
insb
stos
inc
fcomps
jo
roll
in
xor
sbb
adc
jno
das
mov
xchg
movsl
lahf
fmull
into
sub
sti
fcomps
and
lret
jle
js
popa
rcr
or
push
xor
and
push
cmpb
pop
cli
shl
or
pop
or
shll
sub
mov
mov
mov
and
cltd
movsb
lods
and
sbb
imulb
dec
push
mov
push
mov
cltd
mov
shrl
mov
jmp
stc
mov
and
ljmp
jl
mov
shrb
inc
mov
daa
cmp
mov
push
lods
andl
pop
dec
sbb
fstpl
mov
int
aaa
dec
xor
inc
ret
rcll
sbb
loop
and
mov
scas
xchg
orl
sbb
inc
add
pop
ljmp
or
outsl
push
lea
loop
sub
jnp
into
or
dec
sbbb
cmp
shrb
flds
xchg
pop
mov
push
icebp
adc
add
shl
inc
in
loop
fisubrl
sarb
mov
movsb
xlat
mov
inc
nop
xchg
push
loopne
lods
push
inc
aaa
popf
push
stc
push
cmpsl
push
dec
dec
loope
or
nop
jae
popl
mov
sbb
lret
out
pusha
jge
jo
xchg
push
dec
or
pop
out
cmpsl
mov
ds
jle
and
jb
jae
jno
std
bound
leave
aaa
adc
mov
fs
jbe
pop
pop
dec
cmpsl
in
cli
icebp
shll
xor
ja
mov
inc
sbb
pop
lahf
int
jg
stos
xor
push
xchg
stc
inc
pop
lcall
pop
sub
pop
xchg
push
adc
pop
outsb
sbb
lret
imulb
add
xor
pop
in
mov
insb
mov
pop
out
loopne
adc
and
jp
leave
mov
out
jae
pop
inc
iret
dec
gs
stc
mov
imul
xchg
stos
sbbl
xor
lock
aad
mov
xor
push
in
data16
push
mov
mov
pop
inc
outsb
push
addl
shrb
push
mov
mov
xor
pop
in
aas
lcall
cltd
lret
outsb
aam
mov
jnp
jno
push
lock
call
cmp
dec
sbb
or
insl
in
lret
icebp
add
cltd
inc
hlt
mov
test
call
nop
icebp
sar
xchg
lahf
and
jb
bound
cltd
sti
fiadds
xchg
addl
cwtl
xchg
pop
and
mov
push
push
push
mov
add
mov
inc
xchg
or
push
movsl
push
dec
ret
sbb
shrb
lock
rcll
dec
fwait
pushf
push
jle
xchg
jae
in
in
sub
data16
mov
pushf
mov
addr16
fildl
leave
js
int
out
int3
addr16
push
or
out
cmpsb
int3
jecxz
dec
or
loope
das
push
test
sti
inc
cmpsl
fldl2t
test
fmul
jno
imul
cmp
gs
cmp
adc
popf
pop
add
in
movl
into
out
jecxz
scas
imul
xchg
into
pop
push
stc
fstps
in
imul
test
rcl
sbb
mov
and
incb
lret
cltd
cli
or
gs
sbb
mov
repz
sub
aam
das
insb
sbb
or
and
mov
jle
jne
xor
jns
mov
dec
push
push
cmp
xor
adc
pusha
mov
loope
mov
pop
xchg
xchg
xor
lock
sbb
inc
mov
lahf
test
and
mov
in
fdivl
sub
sbb
push
dec
rcll
ret
xchg
call
jmp
outsl
fidivl
xchg
loop
stos
imul
jge
sahf
in
add
data16
in
xor
mov
cld
push
dec
add
cmp
rclb
movsl
rol
or
xchg
inc
call
ret
or
outsl
shl
iret
mov
mov
test
mov
test
mov
push
cmc
push
js
popf
adc
inc
and
arpl
mov
mov
xchg
out
fisubl
xchg
negb
loope
mov
xchg
mov
fsub
test
outsl
cmp
imul
cmpsb
xor
lcall
fdivl
dec
mov
xorb
das
adc
lcall
and
pop
mov
sub
or
cmc
sub
mov
push
mov
or
push
push
xchg
ss
jno
push
aas
idivl
push
lds
cwtl
dec
push
jnp
cmp
fs
sub
or
and
test
int3
pop
sbb
cmp
mov
sbbl
jge
pop
sub
popf
lcall
push
inc
inc
inc
push
jns
jnp
es
int
sub
push
imul
andb
push
in
test
loop
inc
mov
pop
jmp
movl
or
test
add
push
jge
cmp
mov
xchg
mov
mov
or
inc
inc
imul
jp
jp
arpl
mov
lret
loop,pn
lods
xacquire
sub
cli
std
xor
cltd
stc
dec
jo
inc
mov
push
stos
ds
jmp
into
inc
ja
dec
and
jmp
aaa
push
mov
sbb
outsl
mov
stos
je
or
push
jns
aas
add
jo
push
push
push
addr16
stos
popf
mov
sbbb
jecxz
cmp
outsb
loop
xor
outsb
mov
sub
push
sbb
jecxz
cwtl
shrb
outsb
dec
not
and
cmpsb
xchg
stos
arpl
cli
pop
loop
aaa
pushf
shll
outsb
movsl
cmc
into
inc
sti
xchg
xlat
mov
jb
push
ja
shll
mov
divl
loop
add
dec
nop
push
lahf
iret
push
es
cmp
xor
xchg
int3
clc
sub
loop
or
dec
sub
xchg
repz
mov
mov
sbb
lods
add
cwtl
popa
or
nop
insb
mov
cwtl
add
xchg
inc
bound
cld
add
xchg
rcrb
xchg
das
in
outsl
sbb
cwtl
pop
cmpsb
add
cmp
mov
aas
outsb
mov
jge
mov
in
mov
add
or
repz
mov
xchg
fabs
mov
sub
mov
out
and
xlat
fwait
scas
in
cmpsl
mov
jecxz
jb
testb
pop
out
stos
loope
jg
test
jo
mov
call
enter
add
es
cmp
pop
pop
fdivs
and
lea
in
cmp
push
mov
gs
arpl
xchg
jnp
inc
in
mov
cmp
push
push
adc
pop
mov
xor
xchg
xchg
test
mov
mov
push
inc
rorb
xchg
mov
cmp
inc
xor
fldt
js
jmp
fwait
pop
js
cmp
mov
int3
pop
jmp
mov
mov
or
lods
or
stc
xor
pop
xor
dec
dec
scas
pop
lcall
sbb
das
jbe
xor
push
scas
in
lods
stos
dec
test
int
mov
add
aam
mov
dec
es
stc
push
mov
into
sub
ret
loopne
cmpsl
pop
dec
addl
cltd
test
add
mov
jbe
mov
mov
sub
mov
xor
stos
iret
cli
or
sbb
dec
pop
in
xchg
ds
push
jae
pop
sub
xchg
sbb
push
std
lahf
loop
leave
out
mov
cmpsl
addr16
lret
push
inc
imul
or
scas
mov
jg
lret
jne
adcl
outsb
sti
and
mov
xchg
or
push
outsl
adc
popa
jns
fstl
aas
jg
ds
std
je
xchg
inc
pushf
fisttpll
out
int
cs
sbb
push
push
xchg
cli
movsb
mov
jno
pop
adc
dec
leave
stc
mov
jne
testl
mov
xlat
push
int
test
shl
cmp
mov
jno
shll
xchg
xor
add
push
cmpsb
ds
test
mov
ja
dec
neg
push
mov
rclb
adc
pop
lods
mov
mov
push
push
stos
jne
out
es
pop
je
xlat
mov
cmpsb
out
les
sbb
cmp
xor
sbb
add
and
das
pop
xchg
mov
lret
xchg
xchg
and
jg
push
dec
mov
jno
vpunpckhbw
jl
sbb
xchg
mov
inc
xlat
sub
int3
push
inc
bound
and
gs
mov
aaa
mov
jecxz
pop
in
push
push
push
jp
sbb
xlat
es
mov
rorw
and
popa
jno
in
jae
xor
or
pop
cmp
jge
clc
mov
or
add
loop
xchg
mov
xchg
pop
dec
rorl
mov
fwait
stos
mov
test
lods
lcall
cmp
dec
xchg
dec
lods
fsubrs
inc
jo
dec
sahf
outsl
mov
ffreep
sub
rolb
enter
and
lds
cmp
stc
cmp
stos
push
pop
lret
inc
out
andb
repz
test
movsl
ds
js
outsb
pminub
ja
int3
out
inc
cmp
or
dec
mov
sub
sub
xor
je
add
xor
int3
into
mov
jo
test
add
pop
insb
cmp
jmp
xor
cmp
sbb
jno
xlat
and
daa
fstpt
dec
ljmp
mov
adc
aam
cmpsb
int
mov
cmp
mov
sbb
sbb
pop
sbb
clc
xchg
stc
xchg
clc
inc
jmp
fwait
or
cmp
cwtl
add
sar
mov
enter
lock
xor
test
popf
dec
aas
add
inc
pop
and
jp
add
mov
mov
subl
cltd
das
xchg
aad
fcmovb
ss
ret
les
arpl
sti
int
dec
sti
in
pop
mov
lret
sub
js
push
popf
push
push
in
mov
into
pop
push
loop
inc
arpl
adc
jg
out
mov
cmp
icebp
sbb
sub
xor
jno
and
sbb
mov
or
ret
mov
in
ja
mov
add
sbb
dec
inc
xchg
iret
lds
mov
xor
mov
cmpsb
mov
std
movsl
mov
push
or
and
lret
cmp
ja
or
push
lock
orl
dec
arpl
cld
push
icebp
clc
in
idivl
ds
pop
add
pop
mov
jne
pop
es
adc
xor
in
pop
loopne
add
jge
push
and
vandps
daa
pop
xchg
or
pop
adc
fcomps
ja
pop
lret
xor
sub
mov
or
aas
aad
add
or
fwait
ret
push
or
mov
sub
pop
ss
push
ret
mov
jg
sbb
mov
or
add
test
movb
cmp
push
enter
lock
pop
adc
dec
mov
inc
lods
out
add
adc
cmp
add
das
mov
jb
movsl
xor
rclb
lock
and
icebp
int
adc
dec
loope
inc
or
jg
bound
push
push
mov
fcmovb
push
xchg
cmp
and
jne
fldl
insb
inc
les
packuswb
dec
fcoml
lea
inc
ret
lret
xchg
push
out
sahf
pop
jmp
sbb
cmp
orl
pushf
add
inc
and
pop
sbb
xchg
imul
jb
aam
std
dec
iret
lahf
insb
push
aad
loopne
inc
test
popf
test
ret
imul
dec
imul
leave
sub
xor
fcomip
or
xor
adc
sbbl
inc
jl
dec
shll
jl
push
sub
xchg
mov
inc
or
sub
sbb
jg
pop
stc
jae
rcr
lea
jbe
inc
aas
out
jne
sbb
mov
inc
sbb
xor
cs
mov
cld
lock
arpl
in
add
inc
outsl
cmp
es
mov
callw
sti
sub
xor
dec
adc
fwait
or
test
icebp
mov
jo
dec
push
hlt
daa
bound
pop
in
mov
pop
addr16
push
pop
imull
dec
shll
movsb
sti
fwait
inc
inc
pop
add
add
jmp
jle
pushf
xchg
cmpsl
xchg
loop
lahf
mov
and
les
repz
push
lret
in
adc
pop
fistl
loop
int
pop
or
xchg
xlat
sbb
and
push
out
pop
inc
pop
mov
aad
xor
mov
in
sbb
mov
addr16
cmc
dec
dec
or
xchg
push
mov
pushf
dec
lea
cmpsl
and
ds
ficompl
jns
mov
mov
repnz
inc
arpl
ss
jp
sbb
sbb
rcll
xor
sub
push
lret
ret
sbb
xchg
mov
push
dec
pop
adc
mov
subb
jb
dec
dec
or
mov
insb
outsl
ret
and
cmpl
push
xchg
or
int
addb
cmp
addr16
mov
mov
movsb
or
icebp
push
insl
cli
mov
mov
mov
xor
lods
fimuls
or
fadds
gs
cmc
and
inc
pop
ret
fs
adc
pop
fidivrl
insl
mov
adc
jnp
xor
pop
arpl
outsl
fs
stc
mov
add
jge
and
hlt
js
gs
je
sub
sub
lret
push
frstor
mull
sub
and
mov
push
and
test
cltd
inc
in
sahf
aad
xchg
inc
pop
lods
pusha
leave
lods
out
shll
hlt
push
pop
xchg
pop
mov
notl
pop
mov
rolb
mov
mov
mov
jo
lea
clc
push
daa
cmpsb
sbb
or
xor
mov
sbb
mov
int
cld
mov
mov
sub
insl
jbe
imul
cmp
int
dec
mov
sub
rclb
pop
mov
test
mov
adc
shrb
loop
out
mov
push
mov
orb
or
adc
inc
push
cmc
mov
imul
test
pop
sbb
push
dec
add
fcompl
outsb
pop
roll
clc
xchg
sub
jge
gs
pop
jl
mov
scas
fdivrs
or
add
mov
outsl
ret
leave
scas
dec
lret
fsts
fstp
cmpsl
push
int
das
lret
aas
rsqrtps
xchg
and
cmpsb
out
hlt
enter
pop
adc
in
aaa
int3
aam
mov
jge
mov
and
mov
test
lods
push
lds
nopl
cmp
fcmovnbe
pop
inc
shrb
ljmp
push
mov
dec
mov
adc
and
mov
mov
xor
xlat
lods
sbb
jnp
xchg
fucomp
push
adc
jae
cmp
adc
and
mov
ja
stos
loopne
int
sub
dec
cmpl
xchg
divl
mov
pushf
fldl
pop
mov
sbb
stc
lret
pop
cmp
scas
imul
ss
push
xor
into
cwtl
loop
pop
jns
cltd
sbb
pop
or
mov
pop
and
pop
xchg
movsl
hlt
lock
divb
stos
stc
adc
mov
arpl
jb
into
imul
mov
xchg
push
adc
stos
jp
inc
jo
xor
mov
rclb
call
mov
jno
pop
arpl
add
mov
jae
shll
vaddps
sbb
adc
add
pushl
rolb
inc
jge
pop
mov
inc
sbb
test
jmp
pop
out
mov
cltd
icebp
sbb
ret
cld
cmpsb
ds
lock
js
xchg
sbb
mov
jno
addr16
loop
xchg
cmpsb
cmc
out
lds
fidivs
aad
pop
sbb
push
movsb
jge
jecxz
adc
popa
dec
mov
fstps
ret
push
pop
jmp
bound
xchg
xor
subl
outsl
dec
mov
shll
jo
push
test
imul
lret
enter
mov
pop
or
movb
xor
gs
in
cmpsl
aam
mov
sub
lods
push
es
jne
pushf
cld
pusha
testl
hlt
xchg
mov
outsl
pop
adc
cltd
push
fs
inc
inc
jecxz
xor
clc
mov
mov
arpl
xchg
mov
cld
inc
rolb
pop
in
loopne
std
add
int3
jmp
mov
lret
and
dec
mov
add
or
push
imul
daa
mov
jnp
mov
je
fdivrp
cwtl
or
out
cmpsb
cli
in
leave
adc
out
or
rcl
xor
icebp
push
mov
jp
sub
push
addr16
adc
arpl
mov
iret
stos
inc
pop
rcrl
push
insl
arpl
push
loop
and
xchg
or
sub
icebp
or
loop
adc
mov
jp
xchg
lods
les
add
daa
cmp
pop
jle
scas
push
push
rclb
je
sbb
sub
lahf
inc
pop
xor
es
add
popa
in
addr16
sbb
lods
mov
je
xchg
xor
outsb
cwtl
scas
scas
sbb
loope
pop
xchg
sbb
xchg
sbb
jns
and
bound
jae
scas
cmp
jl
cmpsb
inc
nop
jmp
imull
pop
adc
mov
int
gs
sub
jb
shlb
adc
pop
jmp
xchg
add
bound
iret
sbb
cmp
imul
adc
adc
fxtract
mov
test
insl
push
cltd
data16
movsb
pop
sbb
pusha
pop
mov
and
movsl
jo
mov
lret
mov
cmc
add
dec
dec
push
fsubrs
mov
lock
or
lcall
js
mov
xchg
and
push
jecxz
push
xchg
sti
bound
sub
xorl
andl
popa
ja
dec
and
mov
sbb
int3
minps
cli
pusha
adc
cmp
test
out
or
or
cmp
mov
dec
pusha
int3
dec
lahf
mov
pop
test
lea
pop
sti
pusha
or
lret
fcoms
or
mov
dec
pop
fs
adc
add
xor
and
aam
in
hlt
fsub
int3
xchg
mov
movsb
mov
insb
je
fs
adc
add
xor
and
aam
in
hlt
fsub
int3
xchg
mov
movsb
mov
in
je
fs
adc
add
xor
and
aam
in
hlt
fsub
int3
xchg
mov
movsl
mov
inc
insb
jne
fs
adc
add
xor
and
aam
les
fsub
mov
dec
arpl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
je
xchg
jp
dec
or
data16
sub
jmp
lret
cld
stos
jmp
lcall
or
sub
pop
or
jmp
lret
stc
lea
jecxz
test
pop
imul
mov
mov
mov
mov
scas
in
jmp
pop
and
repnz
pop
orl
xchg
add
mov
pushf
add
lds
push
sbb
sub
adc
fbld
jl
js
pop
mov
push
ja
and
mov
stc
mov
ja
push
mov
xchg
and
pop
bound
mov
in
adc
jbe
je
jmp
int3
xorb
mov
sbb
xlat
xchg
add
jns
stc
mov
xor
jmp
fs
pop
lods
sbb
sub
pop
inc
sti
push
test
jl
jmp
jp
dec
gs
jns
sub
sbb
cmp
inc
lret
cltd
stos
idivl
dec
outsb
pop
cmp
addr16
pop
dec
sbb
dec
dec
sub
xchg
call
scas
nop
jmp
mov
cmp
mov
pop
adc
jbe
arpl
jle
mov
in
mov
mov
dec
sbb
imul
imul
mov
lret
stc
stos
jmp
lcall
or
sub
pop
or
mov
lret
stc
stos
jmp
lcall
push
cwtl
xor
xor
jne
dec
ds
xor
icebp
add
sub
jmp
pop
out
xchg
push
aad
or
call
int3
aas
insl
push
imul
out
mov
mov
bound
nop
daa
insb
fwait
sub
or
stos
mov
popf
sub
or
pop
mov
int
mov
mov
push
imul
arpl
andl
push
xchg
scas
test
cmp
pusha
rorb
and
or
push
pop
and
test
fld
subb
jecxz
ss
dec
pushf
in
and
add
scas
push
pop
inc
movsb
sub
cmpsb
push
loopew
sub
test
pop
icebp
mov
test
shrl
shl
add
fwait
popf
mov
or
fcmovbe
outsl
cmc
sbb
in
fs
mov
push
setns
jecxz
jns
inc
test
pushf
lds
loopne
xor
pushf
into
xchg
xchg
pop
popa
lods
cmp
not
and
pop
adc
data16
mov
cmp
je
out
insl
sub
dec
lds
jbe
int
sbb
push
sahf
push
sub
cld
mov
das
or
popa
lahf
or
add
and
xor
sub
fs
push
adc
pushf
jne
icebp
push
or
cmp
mov
pop
sbb
and
lea
xchg
mov
cmp
fisubrs
mov
jns
pusha
sub
std
jmp
sbb
mov
aad
dec
fimull
sub
mov
push
mov
mov
push
inc
jnp
adc
and
in
das
outsl
orl
inc
out
sbb
mov
js
pop
clc
ret
das
stc
test
dec
in
xchg
stc
fisubrl
inc
mov
push
pop
cltd
push
jecxz
andl
add
pusha
pop
icebp
out
mov
dec
pushf
mov
popa
cmpsb
mov
popf
bound
push
leave
sarb
aam
mov
sbb
and
pop
jb
jns
push
and
fsub
jecxz
mov
mov
jge
orl
mov
lret
mov
rorb
push
inc
inc
push
jne
lahf
sub
jns
mov
cmp
cmp
sub
add
dec
jp
mov
sbb
add
mov
ja
pushf
mov
into
lret
jg
push
lahf
push
push
inc
sti
aad
outsb
aad
xchg
mov
stc
push
cmp
cmp
jae
stos
data16
and
pop
add
mov
into
movsb
dec
test
fstpt
and
aas
dec
and
cmpsl
popa
push
int
ja
addr16
or
mov
sbb
test
scas
xor
jmp
loop
sbb
push
lods
push
xor
rcll
sub
clc
mov
add
clc
or
ja
sub
adc
push
inc
sahf
out
mov
jno
test
xchg
es
mov
pop
imul
and
clc
dec
test
pop
cli
xlat
cltd
inc
lods
js
stos
push
cmp
mov
insb
pop
jl
sub
int3
jmp
push
outsl
jg
cmp
sbb
push
fidivrl
pop
hlt
jp
loope
inc
dec
jmp
mov
loope
jbe
adc
bound
jns
dec
mov
fldl
inc
adc
cmp
loop
and
or
sbb
mov
movsb
filds
cltd
imul
int3
xchg
push
jmp
jmp
xchg
sub
or
mov
dec
and
movsb
jae
mov
popl
jb
mov
mov
dec
xchg
cwtl
fdivrp
dec
sahf
out
cmp
fildll
dec
test
gs
sub
test
cwtl
mov
jg
dec
neg
lods
hlt
jl
mov
push
test
lcall
rorl
fildll
sbb
sbb
divl
adc
rcrl
stos
sub
lcall
lret
xchg
mov
mov
add
jno
mov
sub
cmpsl
stos
adcl
jo
lret
push
push
in
jmp
inc
insl
stos
out
arpl
push
mov
movl
mov
sub
sahf
rclb
mov
cmc
ja
xchg
push
daa
jb
imul
shlb
ljmp
fsubl
xchg
iret
mov
ljmp
adc
mov
push
xor
add
mov
add
out
adc
push
mov
push
movsb
sti
es
jmp
push
test
stos
xor
dec
iret
lods
jnp
push
sahf
movsb
mov
jns
add
or
es
jo
jae
dec
dec
outsb
push
shrl
dec
enter
pop
push
ja
add
add
xor
aaa
mov
pop
call
dec
pushf
mov
in
lds
out
cmpsb
inc
sub
inc
pop
pop
loopne
xor
mov
push
dec
pop
test
jle
adc
jp
cmp
imul
jb
cmpsl
and
lcall
xchg
mov
popf
aam
jb
xchg
pop
sbb
sub
adc
loopne
stos
mov
inc
lds
in
xor
dec
xchg
jnp
push
loopne
jmp
aad
push
jns
movsl
mov
adc
cmp
jmp
ss
add
fsubl
and
repz
lret
cmp
aas
scas
jl
xor
out
test
and
sarl
rcrb
push
push
outsb
iret
inc
fs
jl
clc
sbb
repnz
fcomps
adcb
xlat
jne
pop
cmpsb
fdivl
pop
test
dec
push
int
cmpsb
aam
adc
adc
movsb
dec
hlt
cmp
xor
mov
pushf
pop
cmp
adc
inc
out
inc
sti
jecxz
push
shr
mov
or
sub
xchg
sub
stc
cmp
jb
insl
jge
mov
jl
sti
or
stos
popa
or
jp
shlb
pop
xor
xchg
lahf
push
in
xchg
inc
leave
jmp
cmp
aam
repz
stos
daa
dec
xor
ljmp
and
adc
cmpsb
test
jg
mov
pop
cmp
pop
xor
stos
movsb
sbb
insb
mov
dec
popf
jb
jb
pushf
push
in
jge
je
sub
dec
in
cmp
mov
dec
ja
in
fwait
addb
ja
lahf
mov
data16
cmc
int
mov
mov
push
sub
add
mov
aad
xor
roll
mov
and
lcall
sti
imull
jno
ss
loop
cmpsl
dec
and
roll
mov
mov
out
mov
cmp
xchg
aas
pop
lahf
pop
mov
and
cld
pop
ja
add
push
and
mov
mov
mov
push
adcl
sbb
popf
cli
xchg
hlt
movsl
out
lea
ja
cs
inc
mov
jp
mov
xor
aam
stos
xchg
nop
pop
sbb
pusha
adc
lock
bound
leave
cmp
cmpsl
and
adc
rcrl
mov
jge
push
dec
out
xorb
mov
cmp
into
cmc
hlt
test
stos
jne
inc
mov
popf
pop
movzbl
in
andb
fidivl
and
clc
popf
shlb
xchg
inc
mov
mov
cmpb
loop
cmp
dec
xor
jo
lahf
cmp
stos
arpl
in
negl
mov
push
rorb
je
sub
jno
mov
in
sub
scas
aam
fmull
lcall
mov
adc
mov
fnstenv
scas
inc
lret
into
cmp
aaa
jns
dec
mov
popa
ftst
jne
fs
mov
inc
pop
pop
scas
lahf
jno
ja
mov
fdivrp
sub
movsl
xchg
icebp
inc
std
mov
enter
sub
rorl
inc
pop
adc
inc
mov
xchg
hlt
pop
loopne
mov
loope
add
pop
xor
loop
shrl
out
or
add
pop
jnp
and
das
xlat
jl
fiaddl
dec
lds
stos
lods
out
int
shlb
cltd
add
pop
imul
fnsave
mov
int
and
lahf
outsl
push
add
icebp
pop
push
movsl
repnz
shll
test
in
mov
cmp
cltd
sbb
shlb
popf
adc
divb
lcall
jmp
and
cmp
lods
push
inc
into
test
adc
clc
inc
divb
pusha
mov
xchg
lods
hlt
aas
adc
gs
cmc
out
cmp
leave
cmp
pop
xchg
adcl
movsl
mulb
loope
mov
cmp
decl
adc
or
dec
mov
push
into
aad
sub
aas
int
pop
add
leave
push
pop
out
cld
ja
xchg
pause
shrb
mov
lea
or
outsb
out
ds
test
push
lds
mov
lds
mov
subb
neg
and
add
xchg
es
es
jae
sbb
lock
pusha
cmp
jmp
push
mov
bound
clc
mov
paddsb
sti
imul
lret
enter
fs
mov
xor
sub
aaa
or
cmp
test
add
jnp
lret
scas
jns
sbb
movsb
mov
loope
ds
sbb
xor
scas
or
pop
push
int
mov
add
fidivl
test
dec
sarb
add
lods
ds
test
imul
push
ds
pop
xchg
shlb
xchg
inc
jne
mov
xchg
xchg
lods
mov
push
dec
mov
mov
mov
jbe
sub
push
jl
popa
lahf
and
adc
leave
sub
imul
cld
aaa
jmp
sti
aaa
xor
cmp
sub
cli
pop
rep
add
fisttpll
pop
or
mov
xor
test
xchg
and
mov
mov
lcall
sbb
sub
or
push
aad
loopne
adc
popf
ja
aas
test
dec
sahf
or
inc
xchg
pop
and
mov
push
dec
in
clc
adc
fs
mov
or
fstp
repz
mov
sbb
jno
inc
shlb
sub
mov
dec
sbb
add
out
into
xchg
sub
inc
mov
cmp
lea
out
in
dec
cmp
and
mov
leave
daa
mov
cld
sbb
adc
cmp
sarb
xchg
push
and
or
leave
or
adc
mov
sbb
es
jns
mov
into
in
adc
mov
mov
push
js
mov
dec
orl
int3
xlat
sbb
add
in
neg
dec
fcomp
ficomps
jne
inc
rorb
divb
pop
lahf
clc
rolb
push
ret
movsl
xchg
and
jle
adc
ret
pop
loopne
in
mov
aaa
pop
insb
sub
pop
mov
mov
out
dec
cmp
outsb
mov
jp
xchg
inc
fldcw
xchg
ljmp
dec
int
sbb
cmp
mov
mov
jne
data16
fs
arpl
insb
sub
outsl
ljmp
mov
out
movsb
fsubrl
fldcw
xchg
sbb
imull
aas
xchg
jle
xchg
sub
mulb
push
jmp
out
insb
dec
mov
jp
adc
das
ret
jecxz
mov
sub
subb
test
mov
std
popf
push
shr
scas
lds
shrb
test
in
dec
inc
pop
xor
leave
push
xchg
mov
inc
mov
hlt
push
mov
pop
sub
scas
xor
jmp
add
dec
jo
sub
or
clc
pop
jne
xor
mov
aam
dec
loop
cmp
mov
pop
and
pop
sarb
movsl
mov
outsl
mov
pop
mov
shrb
sbb
mov
mov
mov
adc
add
bound
lods
mov
pop
adc
push
mov
ss
rorb
aad
inc
add
fistps
inc
xchg
int
fnstenv
dec
ljmp
xor
push
arpl
xchg
cltd
pop
lcall
stos
dec
xchg
out
inc
sahf
shlb
into
or
mov
mov
or
jle
sbb
sbb
cld
lea
rorb
cld
rorb
outsb
sub
popf
inc
xor
xchg
cmp
inc
outsl
int
jecxz
sbb
dec
and
retw
mov
pop
jp
mov
scas
aad
inc
jmp
lahf
inc
fs
dec
insl
ljmp
and
sub
out
add
lods
xor
jg
inc
test
lock
iret
mov
cli
or
repz
mov
jmp
iret
jg
mov
mov
mov
outsb
or
jae
cmp
outsl
fwait
add
fistpl
je
jmp
es
fwait
xor
mov
rol
jae
and
push
push
and
sbb
repz
dec
push
xchg
cmp
sbb
dec
hlt
das
pop
pop
sahf
sub
push
or
fimuls
aam
icebp
mov
out
lods
xchg
jp
mov
clc
lods
cmp
pop
out
mov
and
fstps
cmc
cli
sub
lods
enter
xlat
add
loop
pop
bound
jo
fcompl
or
add
rclb
pushf
sub
stos
lahf
sahf
fistl
shl
das
scas
aad
push
jle
fisubl
and
push
or
mov
dec
pusha
movl
mov
jae
out
push
lds
mov
and
rolb
sub
sub
push
add
add
sbb
shlb
xchg
push
std
xor
in
xchg
es
cmp
mov
adcb
xor
cltd
inc
jp
std
les
cmp
jge
jnp
jae
mov
jl
mov
sbb
cmp
rcll
into
jg
jg
mov
lcall
xlat
int
mov
mov
aaa
mov
xchg
push
ret
mov
scas
das
lods
push
pop
test
xchg
inc
lcall
or
push
push
pop
or
push
lea
jl
or
int
sbb
ja
adc
pminsw
test
repz
inc
dec
je
or
pushw
jle
or
rcrb
cltd
nop
lea
dec
or
push
out
pusha
xchg
insb
pop
scas
arpl
cmp
jp
adc
loope
and
les
mov
ficoms
jnp
xchg
ja
cmp
jecxz
push
loopne
xor
push
imul
sbb
cmp
inc
int3
sbb
adc
jo
sbb
mov
mov
out
imul
imul
cwtl
and
mov
adc
pop
lea
or
lods
pop
jp
inc
mov
movsb
out
inc
and
cltd
lahf
sub
push
je
outsl
cmp
cmp
pusha
push
push
sahf
sub
add
mov
jne
add
mov
and
push
dec
xchg
fdivs
mov
enter
sub
inc
add
mov
ja
rcrb
ficoml
loop
or
sarl
push
xchg
imul
pop
cmpsl
jne
sbb
sar
outsb
jns
push
hlt
mov
and
int3
lods
loopne
jbe
sahf
ds
jmp
jbe
sbb
and
repz
mov
fidivl
imul
mov
xor
imul
call
aaa
xlat
sbb
jg
pushf
js
movsb
movsb
sbb
insl
imul
or
push
std
adc
cmc
mov
pop
add
stos
push
loop
imul
stc
mov
add
jb
loop
sub
pop
cmpsb
sti
sbbl
in
test
dec
ffreep
xor
test
ss
in
stos
mov
andl
jnp
mov
aas
xor
mov
cmpsb
cltd
sub
cmpsl
and
sbb
inc
cmp
push
adc
sub
std
sub
lret
iret
sub
and
cmp
cmp
mov
into
sbb
lea
subb
add
pop
jecxz
fistpll
xor
mov
jge
in
inc
stos
inc
testb
por
lea
loopne
outsl
jle
sub
cltd
ficoms
pusha
lods
push
int
arpl
and
cmc
jg
or
xchg
daa
shr
mov
outsl
test
pushf
pop
cmc
popa
add
push
outsl
mov
decl
sbb
shlb
sbb
fidivrs
add
jo
mov
pop
add
push
add
out
or
aas
xor
cmp
and
push
and
sarl
jns
xor
pop
imul
sub
add
test
out
xchg
pusha
mov
push
scas
xchg
movsl
add
idivb
mov
std
push
jmp
fnstsw
pop
and
push
sub
xchg
mov
xchg
mov
pop
lds
orb
ds
inc
push
insl
std
sub
sbb
mov
sub
pop
mov
xchg
mov
jecxz
mov
mov
cmc
fcmovb
mov
into
jg
roll
imul
push
adc
loope
pop
xchg
popa
jb
pop
and
jne
cmp
lods
dec
jno
arpl
xor
out
jmp
les
cmp
aas
push
jb
adc
mov
mov
das
push
cmpsl
dec
sbb
push
inc
adcl
and
in
add
pusha
jmp
mov
xor
daa
mov
jb
inc
or
loopne
xor
lret
addl
push
push
out
inc
adc
sbb
lock
cmpsb
aam
int
mov
ret
add
sbb
fldl
iret
mov
cmp
jnp
loope
dec
dec
xor
mov
sbb
shrl
insl
shl
mov
or
arpl
dec
pop
loopne
in
mov
test
loop
scas
hlt
cmpsb
push
mov
mov
pushf
mov
pop
cld
add
sysenter
lret
in
sbb
ret
add
mov
pop
cmp
xchg
loop
test
xchg
sbb
fcoms
loopne
aad
sbb
push
rorl
push
push
in
add
dec
fcoms
das
lret
xchg
fisubl
std
mov
aas
or
push
fcomp
push
adc
loop,pt
inc
testb
mov
jns
fnstsw
je
in
pop
mov
mov
pop
jecxz
push
scas
es
das
hlt
popf
or
xlat
sub
push
das
and
fsubp
pop
fimuls
lret
sti
pop
push
jg
lahf
mov
xchg
add
xchg
push
push
call
out
dec
movsl
cld
and
dec
inc
rol
mov
jp
test
sbbl
inc
sub
inc
scas
imul
jmp
in
and
stc
jnp
aad
jge
mov
mov
call
pop
adc
rcrl
jmp
cld
fadds
fdivrl
xlat
mov
pop
mov
mov
sbb
push
fldl
rclb
std
push
popa
jg
aas
stc
ss
adc
stos
stc
mov
xchg
pop
mov
sbb
push
mov
sub
int3
enter
cs
ret
popf
jne
mov
xchg
enter
loope
leave
sbb
push
push
xchg
mov
jbe
loopne
mov
cld
push
and
insl
leave
xlat
jle
ficompl
cmpl
sbb
jl
std
mov
push
dec
test
fidivrl
fsub
and
sub
mov
pop
push
xor
jmp
mov
adc
or
pop
mov
sub
test
jmp
in
inc
push
fcomip
pop
xchg
dec
adc
stos
ret
mov
and
mov
out
icebp
repnz
roll
mov
test
sbb
mov
mov
pop
call
mov
jle
das
dec
cwtl
pop
push
add
mov
mov
mov
jge
push
jb
push
lcall
inc
or
dec
cmpsb
in
popa
fcoms
in
bnd
add
ret
push
bound
lea
sub
je
hlt
aas
data16
pop
mov
das
push
xor
jecxz
les
fucomp
jecxz
jbe
push
or
insb
scas
xchg
addl
je
scas
xor
mov
or
inc
push
pushf
push
mov
add
outsb
pop
push
mov
nop
cmp
lahf
or
rorb
mov
jl
test
imul
orb
rolb
pop
add
and
test
cmp
mov
xor
stos
mov
push
push
pop
fisttpl
dec
xchg
scas
or
out
out
cld
loopne
inc
and
call
jecxz
jl
movsb
cmpsb
push
push
mov
dec
test
mov
cmc
lret
sub
push
mov
insl
mov
cmp
nop
inc
sbb
sbb
xchg
push
ss
test
mov
ficoms
adcb
scas
fwait
pop
mov
pushf
and
pop
xchg
sub
out
outsl
cmp
mov
inc
pop
lea
mov
scas
mov
aam
imul
in
stos
sahf
push
sbb
cmp
mov
in
mov
pop
jns
imul
mov
lret
stc
stos
jmp
lcall
or
sub
pop
or
mov
lret
stc
stos
jmp
lcall
or
sub
pop
or
mov
lret
stc
stos
lock
and
jp
dec
and
sub
pop
or
sbb
lret
mov
popa
inc
es
gs
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
