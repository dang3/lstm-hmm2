icebp
push
and
inc
lea
shrl
sbb
push
call
cwtl
xchg
xor
mov
subb
jo
fcompl
xor
jp
mov
jmp
bound
das
js
cmp
xchg
or
scas
push
lret
push
fsubs
fldl
sub
sub
fdivs
mov
dec
fstp
loope
call
sbb
mov
dec
call
aaa
mov
dec
rol
cmpsb
dec
cwtl
notrack
xor
std
xchg
and
xor
mov
ficoml
dec
sahf
and
daa
into
fisubrs
aam
subb
imul
add
in
mov
js
test
lods
dec
cwtl
xor
in
mov
or
xor
aaa
addb
dec
mov
pop
sbb
mov
out
jg
popa
dec
sub
lcall
mov
stos
icebp
mov
mov
jge
shrb
dec
jne
xchg
pusha
adc
ljmp
mov
or
scas
mov
adc
repz
cmc
repnz
push
je
sub
and
cmp
pop
dec
int
add
or
or
cmp
or
test
mov
sbb
sbb
mov
or
or
jle
js
stos
notb
jae
cmc
movl
jmp
iret
inc
sbb
clc
push
mov
dec
inc
pushf
xor
arpl
sub
inc
jecxz
xchg
adc
pop
sbb
daa
sbb
pand
pminub
mov
jbe
pop
cwtl
imull
ds
mov
xor
sti
mov
add
loopne
lds
push
stos
aaa
cmp
sub
jae
dec
cli
dec
add
xchg
dec
ja
roll
hlt
mov
es
lock
mov
xor
ficomps
pop
cmp
cli
sub
cmp
cmp
cmp
mov
mov
sbb
jl
pop
movsl
add
dec
cli
or
and
and
sbb
incb
ss
mov
test
lea
out
cmpsl
mov
sbb
xchg
loopne
add
mull
mov
daa
pop
inc
incl
sti
sub
gs
xor
icebp
shrl
lret
aaa
sbb
rorl
add
inc
cmp
in
push
dec
push
dec
pop
fcomps
imul
or
sub
xor
ret
pop
inc
das
mov
loopne
push
mov
xlat
sub
pop
pop
sub
or
call
jmp
add
xchg
push
in
xchg
inc
mov
jecxz
push
es
xor
mov
pop
xchg
aas
dec
cli
dec
add
xchg
dec
ja
subl
jg
repnz
lods
sti
pop
popf
cmp
sub
test
xchg
out
mov
shll
add
loop
xchg
push
mov
push
inc
aam
xchg
push
jb
dec
inc
es
inc
cmp
push
ret
and
mov
mov
push
lahf
xor
xchg
dec
jbe
inc
cmp
mov
add
int3
cwtl
xor
popa
test
mulb
cli
ss
jl
xchg
test
imul
notb
push
cmpsb
cmpsl
mov
movsl
in
add
aad
jge
jnp
shll
repz
jbe
ja
out
iret
call
push
test
push
push
push
addl
sahf
xor
outsb
jmp
cwtl
push
cmpsl
scas
lock
sub
outsb
aas
lods
xor
shld
cmp
xchg
lods
fs
xor
nop
movsl
inc
cmp
in
mov
mov
stos
lods
lahf
jl
cltd
mov
pop
fucomp
inc
mov
outsb
pop
sub
add
xlat
xchg
pop
jmp
iret
inc
sbb
clc
push
mov
insb
mov
shlb
mov
xlat
out
xor
inc
jnp
and
ljmp
sub
outsl
pop
leave
fistpll
stos
ja
scas
xchg
outsb
add
or
sti
xchg
xchg
mov
and
fs
movsl
mov
sbb
js
cltd
popf
cmpsl
mov
rclb
push
ficomps
repz
dec
dec
inc
mov
mov
call
std
jbe
xchg
mov
popf
and
imul
iret
ret
jecxz
xchg
fldenv
insl
adcb
pop
lock
shl
inc
fisubrs
ja
push
lret
push
shl
aaa
pop
lcall
sub
push
pop
lea
xor
sub
add
flds
ficoml
push
insb
js
adc
jae
push
add
lcall
out
push
sti
pop
repz
repnz
fst
popa
iret
xchg
mov
fs
mov
pushf
and
lods
out
cmp
or
test
int
add
insb
inc
mov
into
outsb
jg
push
xchg
pop
out
inc
pop
add
rcrl
mov
popf
push
int3
testb
add
xor
ljmp
xor
lds
sbb
dec
dec
cwtl
xor
push
or
xchg
or
int3
mov
sbbb
add
xchg
cmp
inc
bound
stos
mov
fsubrl
sub
adc
ljmpw
pop
push
or
inc
test
ret
lods
mov
insl
or
mov
inc
movsl
push
cs
sahf
cmp
and
shll
cs
push
push
decl
mov
pop
hlt
push
sbb
or
sbb
into
test
jmp
dec
dec
fdivr
inc
lock
jle
icebp
and
xor
loopne
fnstsw
mov
popa
jmp
in
rcr
repz
add
push
mov
in
push
pop
test
lds
mov
jle
inc
fsubl
test
sahf
fildll
mov
daa
lahf
cmpsb
out
sub
fnstcw
sub
sub
icebp
push
sti
test
inc
xchg
aas
inc
push
arpl
mov
dec
pop
or
insb
inc
mov
into
outsb
jg
repnz
adc
jecxz
add
popf
cltd
and
adc
filds
cli
sub
add
dec
sbb
cmpsl
jns
add
jmp
sahf
mov
and
sbb
in
xor
loopne
repnz
xorb
xchg
push
sbb
fnsave
inc
inc
jp
adc
lods
test
add
fimull
jecxz
test
addl
jecxz
nop
xchg
xchg
scas
shlb
mov
pop
sar
test
sub
cmpsl
cld
jne
dec
pop
pop
lods
lret
mov
mov
call
loopne
mov
cltd
sbb
jb
fcmovnu
sahf
test
or
adc
hlt
xor
pop
dec
fidivrs
loopne
cmpsb
xchg
gs
add
flds
fisttpl
in
push
add
lcall
andb
icebp
jmp
cmpsb
xor
xor
mov
jnp
in
pop
repz
test
xchg
push
pop
test
pop
jno
in
dec
jge
mov
push
dec
ret
test
insl
test
xchg
daa
hlt
pop
push
and
fnsave
movb
mov
mov
ret
xor
out
data16
inc
or
sbb
lcall
std
cmp
dec
sarl
mov
push
mov
mov
xor
cmpl
xchg
xor
xor
jbe
roll
test
push
movsl
aas
stos
jge
mov
add
jno
addr16
lret
xlat
in
xchg
fmull
pop
jno
fisubs
mov
push
mov
loope
push
sti
leave
fisubrl
xchg
cli
inc
scas
inc
mov
cmpsb
fadd
xor
fs
cltd
sbb
and
jno
lock
leave
fisubrl
mov
fimull
lea
lods
mov
or
push
and
lock
mov
push
stc
jg
inc
imul
rcrl
sahf
inc
push
pop
rcll
or
push
inc
lea
dec
mov
pop
ficompl
icebp
push
aam
mov
jae
push
insb
movsb
pushf
cmpsl
rcl
add
fiadds
cltd
fistpll
popf
xchg
enter
sub
and
mov
mov
add
mov
sar
xchg
cmc
xchg
inc
add
jns
movsl
cmc
sbb
addl
pushf
lcall
jp
sbb
pop
add
mov
das
mov
xor
test
imul
pop
jmp
cs
add
inc
pop
adc
jle
push
dec
pop
xchg
pusha
iret
cwtl
xor
notb
xchg
sbb
dec
fisubrl
push
jb
dec
mov
in
adc
mov
fsubrs
in
cmp
pop
jnp
jle
mov
imul
and
xchg
addb
mov
mov
lods
jo
push
ja
lock
xchg
xor
orl
xchg
in
ret
rclb
add
sahf
outsl
mov
movsl
sub
ja
jae
and
xor
mov
xchg
std
jae
inc
jne
sub
stc
push
sbb
loop
sbb
jp
adc
xchg
icebp
adc
out
push
lahf
add
mov
mov
stos
xchg
mov
ror
xchg
lret
fprem1
mov
inc
in
cmp
pop
fidivl
or
push
ficomps
imul
popf
jb
ljmp
daa
mov
call
test
jp
push
outsl
mov
inc
sbb
inc
ljmp
aad
sbb
ret
mov
sbb
iret
icebp
fidivrl
inc
and
paddb
fwait
enter
xchg
xor
push
mov
out
testl
xor
xchg
lret
mov
bound
sahf
shlb
sub
into
and
sbb
dec
inc
pushf
mov
add
jmp
xchg
scas
out
push
mov
push
mov
push
imul
sub
int3
cwtl
or
std
lock
mov
sarl
mov
decb
add
cmp
cmp
pop
jnp
jle
mov
imul
sarb
hlt
pushf
adc
in
sbb
xchg
cmpsl
cmp
clc
gs
call
mov
cmp
mov
pop
push
rorb
xchg
xor
outsl
pop
addb
cwtl
arpl
xor
lcall
push
call
inc
sbb
inc
mov
jp
movsl
xchg
xor
int
mov
popf
lcall
loope
sbb
lds
sarb
fadd
rcrl
test
mov
aam
mov
das
popf
or
mov
push
lret
xlat
mov
add
iret
ret
jecxz
xchg
fldenv
insl
adcb
aas
cmpb
xchg
jo
lret
decb
jmp
fistpl
push
sub
loopnew
dec
or
xchg
jmp
cmpsb
sub
addb
dec
mov
mov
inc
bound
scas
and
outsl
add
jae
sbbl
jae
add
pop
icebp
xor
pop
fdivl
add
push
jbe
je
insl
int3
cwtl
xor
loope
push
jp
das
ret
es
fs
xor
pop
adc
repz
cmc
daa
lods
mov
pusha
adc
std
sub
mov
push
xlat
fimull
mov
jle
pop
mov
adc
outsb
cmp
repnz
lret
sub
xor
lods
ret
stos
adc
js
ja
loop
sbb
ss
pop
push
rcl
inc
rolb
jnp
sbb
in
cmc
or
cli
add
add
cmp
and
cmpsl
or
test
mov
loope
and
jecxz
jmp
pop
fs
mov
insl
jmp
adc
mov
cs
call
mov
repnz
dec
cwtl
fisubl
loope
fisubrs
bound
roll
or
pop
push
aad
mov
adc
sub
fmuls
inc
pop
mov
test
dec
push
pop
cmp
cmp
cmp
mov
ret
lea
xor
les
add
or
xor
or
lods
mov
scas
and
insl
sbb
push
mov
js
xor
inc
xor
dec
inc
mov
rcll
mulb
cli
lcall
cmp
dec
in
pop
hlt
xchg
rorl
push
add
push
stos
movsl
or
mov
into
in
pop
fsubl
inc
adc
add
or
jno
pop
iret
pop
int
std
jbe
cmpsl
or
sbb
out
cld
pop
outsb
mov
xchg
xor
jae
mov
adc
and
push
rcrb
sahf
pop
enter
fs
cld
jo
dec
push
pushf
xor
arpl
sub
ret
test
sub
jne
xlat
adc
shlb
and
xchg
data16
or
fdivs
adc
cmp
js
xbegin
push
call
gs
rcr
lds
int
push
ja
aas
sbb
aad
call
ret
fcompl
cmp
mov
sbb
dec
dec
addb
jecxz
jb
pop
dec
filds
xlat
imul
shlb
push
test
inc
sub
cmp
dec
pop
cmp
popa
xchg
and
aas
dec
cli
dec
add
xchg
inc
push
inc
addr16
jl
lds
xor
int3
cwtl
pop
push
cmpxchg
into
repnz
lahf
data16
outsb
pushl
stos
inc
addb
and
imul
sbb
cmpsl
lahf
ja
repnz
xchg
lret
test
addb
pop
adc
test
mov
mov
lods
push
mov
fistl
in
push
cmpsl
push
cmp
or
lock
jmp
test
shrb
pusha
icebp
sbb
and
push
ror
mov
adc
cltd
out
cs
dec
pop
lds
out
jp
mov
and
dec
fwait
clc
push
mov
sub
dec
push
add
push
cltd
mov
cmpl
scas
clc
cmp
fstl
daa
cmc
inc
out
sbb
mov
test
sahf
bound
xlat
adc
shlb
and
xchg
data16
add
jae
std
lock
shll
repnz
aam
cli
lret
call
movsb
andl
popa
push
xlat
or
dec
ret
fsubs
lea
cltd
xor
sbb
lods
ljmp
scas
imul
add
das
sbb
push
cmove
xlat
in
or
push
loopne
in
lods
jo
xchg
xor
mov
popf
jne
add
xchg
nopl
or
xchg
imul
sbb
or
mov
sbb
dec
jmp
shl
stc
jns
popa
aaa
fwait
ret
xchg
rcl
loopne
push
jg
jae
lahf
jno
outsl
orb
scas
pop
push
shll
xor
cmp
cmp
test
pop
out
inc
inc
out
xor
js
repz
iret
cmp
inc
inc
xchg
loope
imul
dec
inc
lea
popf
pop
add
mov
pop
sahf
call
popf
inc
inc
push
mov
fimull
fs
push
inc
add
inc
loope
insb
shrl
or
mov
push
lret
cmp
dec
push
fmuls
movsl
add
lds
arpl
xchg
fdivrp
dec
loop
ljmp
xor
jl
lea
xchg
mov
sub
sti
out
adc
ret
popl
enter
xor
pusha
cmpsb
shl
js
inc
dec
dec
insl
stos
ss
clc
lds
pop
pop
into
adc
aaa
sahf
mov
fisubrs
aam
out
xor
jb
xor
int3
loopne
stc
and
add
rorl
add
adc
xor
push
and
adc
jge
outsl
adc
and
jo
les
cmp
xchg
xchg
mov
int
pusha
in
cmp
pop
jnp
jle
mov
imul
sarb
hlt
pushf
adc
in
repnz
xchg
cmpsl
ficompl
cmp
mov
pop
push
bound
cmpsb
jg
test
ds
mov
xchg
js
cltd
dec
xchg
mov
push
fmuls
fdivrs
pop
dec
push
fisttps
jbe
ja
icebp
sbb
mov
adc
out
dec
push
mov
iret
cmp
dec
inc
jo
sub
pop
or
data16
icebp
or
adc
mov
stos
fnstenv
jecxz
jmp
mov
lea
xor
imul
int3
sbb
dec
test
sti
sub
mov
into
mov
ja
push
lret
cmc
or
mov
into
out
xchg
add
rcrb
cwtl
pushf
xorl
inc
addb
add
and
lret
add
loopne
xchg
mov
data16
xor
test
mov
shlb
enter
xchg
or
sub
cmp
lea
xor
bound
stos
and
sub
and
decb
leave
xor
orb
xchg
out
push
rcrl
sub
ds
lea
and
push
mov
out
mov
sub
cwtl
push
pop
faddl
popf
arpl
sub
inc
cmp
in
push
dec
push
dec
or
mov
add
jae
cmpsb
int3
push
mov
push
and
or
test
aam
pop
out
testb
push
pop
dec
in
aas
dec
pop
ds
cwtl
adc
add
lret
pop
jns
sahf
aam
idivl
adcl
mov
xchg
iret
lcall
push
js
sub
cmpsb
jecxz
sub
jmp
out
and
std
pop
pop
pop
dec
mov
roll
test
daa
cmpsl
in
add
fs
xor
sbb
clc
push
mov
insb
dec
test
sub
add
pop
stos
movsl
dec
inc
cmp
mov
xor
fsubs
mov
js
dec
cwtl
xor
orb
mov
outsl
lods
adc
cmp
xchg
cmp
xchg
cli
inc
scas
inc
mov
cmpsb
fadd
fwait
icebp
outsb
aam
push
pop
xor
pop
scas
fisubrl
cwtl
xor
sub
push
hlt
add
nop
push
out
fidivrs
lock
push
test
and
push
cmp
adc
push
dec
pop
mov
inc
orb
or
pop
out
sub
pop
outsb
movb
or
fs
inc
dec
push
arpl
xor
pop
stos
andl
clc
mov
adc
arpl
lea
dec
mov
pop
test
out
cld
stc
pop
dec
mov
je
xor
popf
int3
rcll
pop
adc
into
mov
movsb
sub
and
or
jnp
sti
push
jnp
xor
xor
xchg
loop
pop
data16
pop
lcall
movsb
fcoms
daa
mov
lahf
aaa
leave
aam
insl
cmp
ss
inc
sub
mov
loop
das
inc
xor
ret
add
insb
inc
scas
sbb
data16
mov
aaa
fs
add
mov
mov
lret
sub
and
sub
push
iret
inc
sbb
clc
push
mov
insb
mov
shlb
or
xor
dec
dec
cs
mov
sti
pop
dec
filds
xlat
imul
push
loopne
mov
jb
pusha
mov
pop
add
rcrl
int3
fstpl
cwtl
xor
sbb
xor
mov
out
add
xor
pop
sub
in
lret
repnz
xchg
ds
mov
ret
xor
std
xor
pop
push
or
sub
stc
push
mov
test
aas
mov
cmc
inc
mov
fisubs
lods
mov
insl
or
pop
ja
xchg
test
dec
data16
lret
orb
jbe
addr16
in
xor
dec
clc
lods
sub
outsl
lret
rcr
inc
push
adc
imul
popf
jb
add
js
xor
lret
call
lods
rcrl
loop
inc
mov
aaa
rolb
sti
in
push
fnstenv
shll
and
cli
ss
mov
add
add
dec
pop
repnz
cli
das
adc
mov
cmp
push
addr16
ds
fwait
sti
adc
mov
fisubl
mov
sub
bound
lahf
cmc
in
add
jmp
int
shrb
data16
lea
xor
cmp
ja
xor
cwtl
xor
outsb
pop
sub
add
cmpsb
int
mov
cmp
out
mov
cwtl
xchg
xor
jmp
jbe
add
loop
cli
ret
and
outsb
ret
cwtl
rol
jne
adc
stc
stos
cmp
xchg
or
add
sbb
inc
call
imul
cs
call
mov
repnz
ja
xor
mov
pop
fldenv
fbld
and
lods
insb
mov
sub
xchg
jecxz
cwtl
xor
fimull
xor
pop
lea
fdivs
cld
cld
mov
or
fs
int
sbb
dec
jb
add
js
aaa
in
dec
cmp
lret
fadd
in
incb
cwtl
dec
or
jg
sbbl
jns
mov
push
repnz
lahf
in
rcr
gs
fdivp
cmp
test
jg
aas
jne
push
push
cwtl
fsubrs
inc
push
inc
jb
pop
or
inc
dec
adc
push
dec
imul
fwait
cmpsl
stos
aas
gs
aaa
leave
aam
insl
cmp
mov
or
sub
pop
and
mov
or
in
push
inc
or
shl
jge
insb
push
and
mov
lods
push
dec
dec
arpl
cmp
stos
mov
cmp
mov
adc
testl
and
movsb
popa
int
adc
rorl
and
push
bound
fisttps
cmp
scas
push
pop
add
imul
int
mov
popf
lcall
loope
adcb
idivb
pusha
lock
mov
ss
fwait
pop
mov
pushf
mov
fwait
add
pop
dec
or
push
jbe
jo
mov
hlt
in
in
push
pop
ficoms
rolb
mov
sahf
rolb
xor
aad
inc
out
xor
dec
aad
rclb
shlb
push
mov
iret
cmp
fwait
lret
xor
test
repz
cmp
test
aam
or
sbb
add
and
xchg
test
es
dec
mov
nop
into
jb
incb
xor
divb
add
loopne
rol
sub
loopne
add
imull
daa
mov
mov
daa
pop
inc
mov
pop
push
les
sub
lret
aaa
sbb
rorl
add
mov
cmp
add
scas
call
lds
xchg
or
popa
push
mov
cmc
movsl
fwait
xor
rcrb
add
xor
imul
lods
and
notb
jae
into
int
push
ja
aas
sbb
arpl
add
data16
enter
sbb
stc
aam
mov
imul
add
adc
and
sub
cmpsl
push
push
in
decb
push
outsl
xchg
out
int
loop
jnp
in
ret
rclb
add
movsb
hlt
js
mov
xor
repnz
push
xchg
or
xchg
add
fimull
ret
fcmovnu
dec
orl
jae
cmp
jb
and
adc
push
mov
int3
adcl
sub
fwait
jle
xor
push
icebp
in
inc
and
stos
mov
stos
out
push
iret
loop
insl
and
pop
sbb
data16
imul
mov
or
xor
insb
sub
cmpsb
daa
push
cmpsb
dec
daa
mov
fsubl
fucom
adc
imul
ret
int
iret
mov
sti
sub
gs
xor
fstp
outsb
xchg
push
loop
stc
repz
cmp
fisttpl
arpl
outsl
cmp
lahf
push
or
mov
lock
xor
sahf
cmpsb
out
sub
fnstcw
jle
cmpsl
idivb
sub
enter
dec
and
test
xchg
jae
sbb
stc
cmp
and
sbb
cmp
fimull
daa
fstpt
mov
cmp
mov
imul
loope
daa
sbb
subps
sub
pop
dec
xchg
mov
push
lret
adc
loop
pop
jecxz
pop
bound
xor
sub
adc
ljmpw
fimull
sbb
jb
xor
or
test
fidivs
push
cwtl
pop
mov
or
fnsave
shlb
stos
pop
shr
sub
xlat
fcompl
les
ret
jno
add
lea
dec
mov
pop
ficompl
icebp
push
aam
mov
mov
mov
out
lods
sahf
notb
jae
pop
fdivl
pop
jns
mov
icebp
bound
mov
call
roll
testb
nop
imul
int
fcoms
cwtl
jae
lahf
aaa
leave
aam
insl
cmp
mov
or
sub
pop
and
mov
or
test
add
mov
mov
push
lds
aaa
fs
add
and
arpl
xor
addr16
add
rcrl
pusha
inc
xor
push
mov
lock
dec
xor
xchg
jl
lahf
sub
fwait
pop
iret
popa
loop
add
mov
pop
outsl
cmpsl
jo
inc
cmp
inc
lock
insb
jecxz
xchg
mov
ret
mov
jg
aad
push
outsl
xchg
out
push
xor
xchg
in
ret
rclb
add
cmpb
insb
xor
cs
fmuls
fabs
das
call
sbb
out
and
imul
sbb
jge
sub
int3
xchg
mov
lea
pop
sti
sbb
test
aaa
pop
fisubs
fisubl
sub
push
cmpsl
add
push
and
adcl
dec
inc
cmp
outsb
xchg
iret
cwtl
or
xchg
int3
flds
ja
sub
aaa
fdivs
ret
xchg
push
push
or
fists
lret
mov
mov
sbbl
mov
mov
add
lds
sbb
push
idivb
dec
call
mov
add
adc
hlt
repnz
xor
ret
xor
mov
cltd
loopne
jns
daa
xchg
mov
ds
push
sbb
pop
stos
test
cs
mov
out
int
sub
fnstenv
stos
pop
xlat
sti
insl
shll
mov
jge
pop
xchg
inc
stos
mov
mov
ljmp
xchg
fwait
add
mov
lock
mov
mov
movsb
or
pop
into
mov
js
cmp
cmp
mov
adc
sub
lret
repnz
xchg
ds
jno
js
jbe
mov
push
test
and
push
jae
mov
or
mov
mov
mov
stos
dec
or
stos
or
lods
mov
push
jb
cmp
mov
cwtl
rcrb
push
mov
xor
xor
jns
and
sbb
inc
fisubl
cwtl
xor
jno
mov
sub
mov
shll
xor
in
xlat
inc
mov
bound
mov
jecxz
je
clc
pop
rcrl
pop
mov
sar
xchg
cmc
xchg
inc
add
jns
pusha
push
and
ja
cmp
dec
xchg
pop
push
and
aad
fadds
aam
enter
pop
and
add
xor
lcall
andb
or
mov
lods
aaa
add
mov
leave
aaa
push
cltd
fs
push
jecxz
lcall
xlat
popa
sbb
pop
popf
out
adc
iret
and
bt
fwait
jae
sbbb
push
int3
cmpsl
lods
push
pop
mov
jnp
test
sbb
xor
jmp
dec
adc
lret
dec
lret
or
ja
or
jb
stos
stos
jno
push
out
int3
adc
push
pop
jno
cmp
nop
lcall
inc
jnp
jno
out
flds
cwtl
mov
sbb
mov
pop
fsub
push
jb
nop
loop
int
addr16
es
stos
lret
push
xor
in
push
xchg
fwait
push
push
incl
or
xor
out
dec
xor
out
xchg
rclb
fdivrp
dec
loop
jns
and
arpl
fcmovnu
int3
cwtl
xor
ret
shlb
test
sbb
pop
adc
mov
enter
cmpsl
sub
ret
xchg
repnz
cmp
xchg
push
adcl
mov
dec
loope
push
ret
fcoml
mov
inc
adc
jb
ret
pushl
xchg
roll
sbb
mov
test
fidivrs
loope
xchg
mov
cs
mov
and
sbb
cmp
fimull
daa
lea
ljmp
xchg
adc
pop
sbb
daa
sbb
subps
add
add
xor
inc
dec
jne
int3
jo
xchg
xor
stc
xchg
mov
push
lahf
dec
aad
pop
fisttpll
pop
outsl
pop
out
iret
xchg
cli
inc
scas
inc
mov
cmpsb
faddl
ficomps
push
aas
scas
sbb
jnp
fnsave
data16
cwtl
fisubrl
dec
push
push
in
mov
ret
pop
xchg
sbb
dec
cs
test
fidivs
push
cwtl
pop
mov
or
fnsave
shlb
nop
dec
iret
in
cli
out
fmuls
inc
cmp
outsb
xchg
iret
cwtl
ficoml
lahf
pop
push
dec
rcll
push
lds
dec
add
push
pop
cs
xchg
push
push
or
fidivs
jge
dec
outsl
pop
jns
mov
cmp
mov
mov
push
fimull
sub
outsb
aas
lods
xor
shld
cmp
xchg
lods
fs
jbe
mov
out
test
inc
stos
in
or
mov
push
xor
sarl
mov
sub
loopne
push
mov
xlat
sub
pop
pop
sub
or
repnz
andl
jl
rclb
fdivrl
jecxz
push
es
xor
mov
pop
xchg
aas
dec
cli
dec
repz
cmp
out
push
sbb
data16
push
push
in
mov
xor
push
les
jnp
mov
adc
hlt
adc
mov
xchg
loop
xchg
xchg
ljmp
test
pop
sub
inc
mov
out
or
xor
loop
ljmp
dec
cwtl
xor
rcrb
push
dec
dec
addb
aam
mov
and
fidivs
test
movsb
ret
ds
in
repz
push
test
pop
push
or
call
dec
jb
xor
popa
adc
cltd
xchg
test
push
fstl
xor
rcrb
jmp
xchg
pop
bound
mov
fcmovne
icebp
sti
adcb
int3
mov
mov
pushf
cmpsl
ret
mov
sbb
adc
jecxz
shr
cmp
sarb
mov
cmpsl
cld
sbb
add
lret
pop
jmp
popa
xchg
es
jle
cmpb
ljmp
cmpsb
out
sub
fnstcw
dec
ret
test
and
cmp
mov
pop
push
and
aad
dec
sub
stos
pop
cs
inc
sarb
jl
popa
aad
push
jnp
test
or
sub
daa
adc
data16
mov
popa
and
ds
out
jmp
add
mov
in
xor
stos
cli
push
push
enter
push
mov
imul
jne
fiadds
out
and
push
arpl
call
push
repnz
adc
and
cmp
mov
das
and
jmp
jae
inc
jne
sub
adc
shlb
pushf
faddl
data16
inc
cmpl
mov
inc
or
push
add
pop
or
mov
xorl
test
push
push
out
in
cmp
cmp
push
negl
pop
clc
fimull
lcall
inc
aam
lcall
nop
jne
and
bswap
and
mov
mov
cmp
test
ficomps
adc
gs
jae
cmpsb
push
mov
dec
sbb
call
sbb
daa
mov
nop
jo
mov
dec
mov
mov
sub
lahf
or
mov
das
or
mov
shll
test
and
sub
sub
call
iret
dec
inc
cltd
call
xchg
inc
add
adc
push
cmpsb
dec
cwtl
cmpsb
out
fnsave
pop
xlat
adc
and
lods
add
cmc
loope
inc
arpl
push
mov
cmp
sbb
daa
inc
ret
inc
add
mov
lds
add
dec
pushfw
cmp
test
mov
xor
cmpl
lock
pop
or
push
cmpsb
dec
cwtl
dec
sti
aaa
pop
dec
jno
add
lea
filds
mov
into
ss
cmp
mov
aam
cli
ficomps
imulb
adc
cmp
xchg
imul
and
movsl
sub
dec
in
fs
inc
adc
push
dec
dec
cltd
in
xor
cmp
pop
xor
fbld
dec
and
xchg
adc
rcrl
sbb
jge
or
xchg
mov
std
pop
lock
sbb
andl
aaa
cld
hlt
lret
add
fisubl
add
insb
or
scas
pop
out
mov
or
xor
xor
lods
cltd
out
inc
mov
xor
push
aam
adc
and
sub
into
cwtl
xor
push
dec
rclb
cwtl
mov
adc
xor
test
dec
push
mov
mov
mov
int
iret
mov
sti
sub
gs
xor
fcmove
push
dec
inc
in
sti
pop
xor
push
cmp
fidivrl
test
in
push
dec
push
xor
mov
or
mov
aaa
xlat
sub
mov
mov
push
sbb
add
xor
mov
or
repnz
xchg
sbb
jne
cmpsl
jns
add
jmp
jl
rclb
fmul
mov
pusha
cwtl
pop
cmp
dec
pop
cmp
popa
xchg
cli
inc
scas
inc
push
or
jae
les
cmpsb
cmpsl
aad
je
pop
dec
fcom
adc
dec
sti
arpl
sub
and
mov
outsb
cmp
xchg
movsb
inc
addb
add
pushf
and
pushf
fwait
jnp
sub
dec
cmp
repz
aam
fdivr
orb
add
js
aas
jg
ret
or
mov
inc
outsl
cmp
test
stc
pop
jg
push
sub
sub
ficomps
movb
or
fs
int
sbb
and
jg
sub
xchg
enter
call
lret
and
mov
in
dec
jle
or
jmp
aaa
jp
adc
mov
stos
test
dec
jl
sub
pusha
mov
inc
mov
mov
cs
mov
jg
mov
test
sahf
bound
xlat
dec
scas
imul
fistpl
adc
outsl
adc
and
jo
les
shl
mov
and
gs
and
cmp
push
cmpsb
dec
jae
sti
aaa
pop
dec
jno
mov
loopne
out
iret
fucom
mov
mov
lods
jo
push
ja
stos
sbb
push
pop
mov
movsl
xchg
jae
mov
call
jl
mov
test
pop
imul
psllq
insl
fildl
push
dec
bound
jno
push
daa
mov
gs
xlat
mov
dec
js
das
pushf
or
pop
cmpsl
les
ret
jecxz
xchg
fldenv
insl
adcb
dec
mov
ss
mov
notb
cmp
sbb
dec
jmp
ret
dec
pop
lds
out
jp
mov
and
dec
fwait
clc
push
mov
sub
int
iret
mov
sti
sub
gs
xor
fcmove
push
aas
jp
dec
cmc
lret
aaa
sbb
rorl
add
inc
cmp
in
push
icebp
pop
cmp
mov
test
adc
aad
jno
popa
std
pusha
sbb
call
jle
sbb
stc
jle
scas
jae
pop
sub
cs
cltd
jp
add
lods
inc
jnp
sub
mov
pop
jae
sahf
sbb
dec
cmp
arpl
fiadds
jmp
jae
inc
jne
sub
cmp
add
shlb
mov
adc
fadds
aam
mov
mov
sub
orw
call
scas
add
fnstcw
int
xor
adc
push
and
ljmp
xchg
lcall
sahf
test
jno
mov
dec
pop
or
xor
loopne
fnstsw
mov
xchg
pushf
mov
add
or
arpl
lea
aad
push
lcall
xchg
rolb
les
lahf
jbe
jae
loop
xchg
ds
sbb
add
or
pushf
ficompl
adc
push
cmp
xor
add
sub
jnp
sbb
cmp
fstl
daa
cmc
inc
out
jno
das
push
arpl
pop
repz
pop
call
xchg
mov
out
int
sub
fnstenv
xor
ret
xor
mov
mul
dec
add
lock
data16
cwtl
and
mov
jnp
push
cld
lock
inc
dec
push
or
lock
pop
and
in
xor
sbb
and
adc
sti
and
xor
jbe
les
cmc
mov
jge
dec
adc
push
inc
fwait
lcall
orl
xchg
icebp
adc
adcl
or
subb
int
cmp
dec
inc
cwtl
xor
mov
mov
shufps
jb
jmp
sbb
imul
insl
fildl
push
dec
bound
jno
push
out
adc
mov
adc
shl
pop
cmpsl
push
cmp
xchg
pop
icebp
xor
sub
idiv
mov
xchg
mov
jmp
mov
jo
das
int3
pop
out
push
pop
daa
rcr
dec
and
rcr
dec
xor
clc
sub
mov
inc
sub
divb
and
pusha
testb
fiadds
shr
int3
xchg
test
or
or
fnstenv
adc
push
xor
clc
std
push
and
mov
mov
mov
fdivrp
dec
xchg
lods
psrlq
pusha
push
mov
dec
jns
pusha
xchg
fs
fstl
add
sub
mov
sub
int3
cwtl
pop
add
xchg
mov
lds
clc
cmp
dec
adc
or
dec
cmp
xchg
push
jo
fcompl
xor
or
mov
ljmp
mov
rolb
jmp
xchg
dec
pop
xor
xchg
in
ret
push
out
or
xor
mov
insb
ljmp
rcr
fadd
xor
jl
rolb
xchg
bound
stos
and
xor
imul
imul
out
jno
scas
pop
roll
push
pusha
lock
jne
addr16
in
add
cmc
addb
fstps
cld
mov
and
inc
add
dec
push
dec
aas
or
and
push
enter
pushf
jmp
test
arpl
adc
jns
and
arpl
bnd
lret
jg
jmp
rorb
mov
pop
inc
mov
stos
test
mov
and
cltd
mov
pop
pop
mov
je
stos
xchg
jmp
jno
xchg
xchg
sub
mov
fimull
pop
pop
mov
test
hlt
stos
in
or
mov
inc
fs
int
pop
jno
aaa
xchg
jbe
test
testl
dec
mov
in
adc
into
call
cmp
cmp
pop
jnp
jle
mov
into
jo
xor
push
mov
iret
fldl
enter
fsubl
decb
jae
pop
lret
outsb
xchg
add
and
rcl
adc
sub
lret
repnz
xchg
ds
jno
js
jbe
mov
push
test
and
mov
mov
js
jecxz
data16
lret
enter
jae
hlt
inc
mov
xchg
out
sbb
insb
push
add
mov
ret
sbb
sub
pop
pop
push
scas
enter
cmp
adc
data16
cld
cld
loopne
pop
fucom
mov
xchg
das
mov
xor
test
push
dec
inc
and
cmpsl
sbb
int
popf
fdivr
sbb
cmpsl
fisttps
ljmp
xchg
jb
scas
and
outsl
add
jae
add
loopne
rol
sub
out
adc
imul
push
pushf
nop
mov
daa
pop
inc
mov
gs
and
je
stos
xchg
inc
in
sti
pop
xor
or
rorl
add
inc
cmp
in
popa
scas
call
ds
int3
xchg
test
adc
aad
jno
ret
pop
inc
das
dec
mov
pushf
sub
insl
push
stos
mov
or
call
push
xchg
jne
mov
repz
add
outsb
test
aaa
dec
leave
jg
push
call
cmp
popa
xchg
cli
inc
scas
cmpsl
push
add
xchg
dec
ja
cmp
dec
pusha
lea
lods
sti
pop
popf
cmp
sub
sub
je
divb
jnp
popa
movb
pop
fidivrs
std
ja
xchg
lods
mov
push
gs
icebp
cmp
inc
js
outsb
scas
jl
pop
lret
pop
push
popa
sub
mov
xor
icebp
ds
pop
ficompl
icebp
push
aam
mov
xchg
xor
push
add
pop
sub
jmp
popl
fs
les
dec
jae
inc
fimull
fsubrl
xor
push
scas
mov
cmpsl
stos
aas
gs
aaa
leave
dec
xchg
dec
bound
cld
sub
push
mov
sub
cld
jo
jmp
aas
and
xchg
and
inc
arpl
push
test
inc
add
cwtl
push
imul
in
call
sarl
mov
daa
push
and
ficomps
xor
call
dec
xlat
in
xchg
fmull
loope
add
inc
or
ret
xchg
mov
cmpsl
or
lret
ret
mov
dec
push
bound
stos
jae
inc
adc
push
dec
int3
jne
cmp
jmp
pop
xor
sarb
dec
lods
pop
xor
jp
add
sahf
ljmp
je
xchg
mov
outsl
xorb
nop
fisubs
mov
add
dec
cwtl
or
or
repz
xor
lea
mov
lock
ljmp
dec
cmc
iret
daa
sub
dec
mov
aas
jg
pop
jae
cmp
in
repnz
add
xor
jae
add
loopne
rol
subl
mov
repz
clc
in
sbb
test
call
add
push
cltd
cmp
aam
nop
pop
jle
in
mov
mov
add
and
pop
daa
mov
sub
lret
out
stos
rorl
adc
mov
pop
jmp
pop
jmp
int3
xor
lahf
xor
push
inc
or
shl
pop
in
inc
lds
stos
cwtl
ds
push
arpl
mov
or
mov
stos
scas
sbb
jnp
test
or
sub
daa
adc
sbb
ret
scas
call
sbb
arpl
jb
ficomps
mov
push
call
xchg
jl
lahf
sub
fwait
lret
aam
cli
lods
xor
movsb
add
xor
mov
xchg
aas
mov
movsl
sub
dec
in
fs
and
stos
into
dec
sbb
call
xor
jmp
pop
xor
sarb
dec
lods
pop
xor
jp
add
sahf
rcll
fsub
cmp
arpl
divb
ja
stc
jg
int
cltd
mov
cmp
push
test
mov
icebp
out
push
stos
dec
or
stos
or
lods
mov
sub
push
test
ficomps
adc
gs
xor
cmp
movnti
jns
inc
popa
sbb
sub
popa
push
add
jge
sbb
lahf
pushf
shl
roll
and
repz
mov
adc
insb
fsubrs
lea
data16
pop
lcall
or
xor
mov
in
popa
paddb
aam
in
sti
pop
xor
push
cmp
cmc
inc
dec
xor
jge
movsl
xchg
xor
xchg
aas
iret
rcr
xchg
daa
hlt
pop
push
and
in
xor
iret
pop
push
cmp
popa
xchg
loop
dec
sub
dec
nop
inc
aaa
fs
add
call
push
xlat
shll
dec
cwtl
je
ljmp
push
push
push
mov
jo
xchg
adc
jmp
add
push
adc
sbb
cli
ret
inc
add
das
mov
popf
pop
iret
icebp
mov
test
or
mov
mov
adc
push
fwait
push
cli
sar
xchg
cmpsl
cmp
jb
ja
scas
fimull
sbb
jp
cmpsb
jg
test
sbb
pop
aad
sbb
pop
mov
push
push
in
mov
sahf
cmp
and
mov
shrb
call
mov
mov
call
std
jbe
pop
dec
rcrl
pop
std
pop
pop
in
rcrb
inc
lcall
mov
mov
sub
mov
cltd
ds
sub
inc
xor
pop
pushf
xorb
sub
sti
xor
shl
popa
sbb
mov
out
jb,pt
sbb
rcr
repz
add
clc
popa
es
push
hlt
dec
fxch
pop
push
je
xchg
scas
icebp
bound
cmc
jge
frstpm(287
enter
roll
mov
dec
sub
xor
stos
int
sub
fnstenv
pusha
or
xor
push
mov
add
dec
jp
add
jnp
push
cld
lock
mov
push
adc
fs
addb
in
sbb
insb
lret
dec
cli
xor
inc
insl
jle
mov
fsubl
shll
rcrl
scas
in
add
mov
mov
sbb
mov
das
sbb
dec
inc
ljmp
fistpll
mov
pop
xchg
aas
dec
cli
dec
add
xchg
sbbl
jnp
fisubrl
lahf
enter
rcrl
mov
cmc
push
jecxz
xor
jg
push
mov
xchg
adc
int3
and
scas
mov
mov
push
sub
ret
out
dec
addb
pop
mov
mov
ljmp
cmp
pusha
aaa
iret
scas
repz
addb
inc
or
push
or
pop
mov
jmp
fsubrs
lea
sub
clc
adc
hlt
bound
das
inc
pushf
jno
lds
cmp
xor
adc
mov
pop
push
mov
jge
stc
jno
lds
xor
pusha
push
pushw
shl
mov
repz
fsubrs
repnz
cs
lret
jmp
dec
dec
imul
lea
jmp
call
mov
loopne
dec
add
pop
sub
cli
das
adc
sbb
pop
es
cltd
int
fcoms
cwtl
gs
and
adc
and
push
rcrb
sahf
pop
enter
dec
iret
pushf
and
lods
add
cmc
lea
pop
test
int
add
insb
inc
loope
mov
arpl
mov
out
add
xor
sarl
mov
daa
push
and
cmp
stos
cmp
lock
and
daa
sahf
out
andl
cmp
lock
mov
mov
testl
es
leave
mov
mov
mov
les
dec
and
aad
sbb
inc
mov
aas
dec
cwtl
lods
fimull
mov
test
ret
lods
mov
insl
or
imull
inc
orl
shrl
or
pop
cmpsl
les
push
call
lcall
repz
mov
imul
gs
mov
pop
into
test
sub
adc
push
xchg
in
aas
mov
shl
shll
sub
sbb
data16
sub
sbb
push
fimuls
adc
jl
pop
aam
cmp
popf
xchg
enter
sub
and
stc
xchg
sbb
sub
pusha
mov
xor
cmp
cwtl
paddw
aas
pop
xchg
mov
iret
lea
xor
xchg
mov
out
mov
fdiv
or
movsb
fisubrl
or
insb
inc
xor
cli
fdiv
cmp
dec
nop
inc
aaa
fs
add
mov
jge
sub
std
das
push
cmpsb
dec
popf
imul
or
push
xchg
cmp
out
mov
sub
jno
mov
mov
lods
stc
loopne
cmp
pop
jl
jmp
push
push
mov
jecxz
jb
pop
dec
jae
and
mov
adc
loop
pop
jecxz
pop
bound
xor
sub
adc
push
and
loope
jl
movsb
jbe
mov
mov
push
pop
in
and
adc
mov
das
outsb
add
xchg
lahf
add
insb
je
fs
mov
ljmp
dec
or
stos
or
lods
mov
sub
jmp
fisubrs
repz
jno
arpl
insb
lds
loope
inc
push
outsl
mov
inc
call
jnp
lret
jg
jmp
iret
pop
xor
xor
fcoms
ss
imul
mov
bound
or
adc
mov
lea
xor
or
pop
repz
pushf
xor
arpl
sub
mov
scas
cmp
push
sbb
lds
push
pop
dec
mov
xchg
dec
mov
jp
lods
dec
cwtl
xor
in
mov
test
call
inc
fisubrl
cwtl
xor
xchg
daa
xor
adc
in
pop
dec
jmp
adc
data16
out
aad
cltd
inc
pusha
sbb
mov
xlat
xchg
pop
jmp
iret
inc
sbb
in
or
sbb
push
pop
cmpsb
dec
cwtl
test
sbb
daa
cli
cmp
in
add
xorl
add
pusha
mov
hlt
dec
fisubrl
insl
subl
std
cmp
mov
out
add
pusha
lret
sub
int
rep
sub
frstor
dec
sub
ds
and
lret
dec
lret
clc
mov
shl
xor
test
push
fsubrs
test
jno
jne
shll
int3
or
icebp
sbb
hlt
fisubrs
mov
dec
inc
fst
mov
dec
and
lds
pop
mov
fistl
in
push
cmpsl
push
cmp
lret
in
mov
and
sub
and
mov
repz
lahf
pop
push
dec
dec
jno
push
aam
mov
mov
mov
mov
movsl
in
add
aad
jge
jnp
shr
fdivs
lahf
or
mov
int3
dec
jae
les
sub
insb
mov
mov
dec
cmc
xchg
push
xor
xorl
scas
call
ds
int3
xchg
test
ja
out
aad
cltd
inc
pusha
sbb
call
jle
push
and
in
xor
add
mov
into
cmp
push
gs
and
jno
or
and
push
arpl
lcall
pusha
loopne
adc
mov
insl
jmp
cld
jmp
push
imul
lea
daa
cltd
repnz
adc
push
out
es
insl
fildl
fldt
pop
ljmp
mov
sbb
cmp
out
je
dec
pop
mov
cmpsl
imul
movsl
push
sub
lock
cmpsb
call
mov
jmp
or
sub
adc
or
push
shll
inc
fisubrs
aaa
pop
cmp
mov
jno
adc
mov
sub
mov
push
lods
sti
push
ljmp
or
lock
cmp
rclb
cwtl
cwtl
dec
or
icebp
sbbl
jno
push
les
mov
popa
psrad
inc
lods
stc
out
fs
mov
clc
push
and
dec
hlt
repnz
jb
aas
mov
sahf
adc
outsb
movsb
aas
jmp
mov
and
pusha
lret
sub
xor
jb
mov
dec
mov
dec
test
inc
mov
insb
xchg
ret
pop
inc
das
mov
loopne
push
mov
dec
mov
dec
sbb
add
or
xor
jne
outsb
into
mov
outsl
mov
jo
fcompl
mov
cltd
fs
pop
push
pop
xchg
les
dec
jns
imul
insl
popf
out
or
dec
sbb
jl
pop
inc
out
inc
sti
fidivrs
sti
fwait
popa
and
ret
leave
mov
mov
mov
les
dec
and
aad
sbb
inc
mov
mov
push
or
inc
test
ret
lods
mov
jae
bound
scas
ret
mov
mov
je
add
or
pop
cmpsl
les
iret
xor
dec
push
xchg
fwait
jle
xor
push
ss
mov
notb
cmp
sbb
mov
dec
xchg
test
sbb
clc
push
mov
out
pop
jmp
lret
mov
insb
leave
insl
in
push
les
sub
lret
aaa
sbb
ds
jno
add
jg
cld
les
aam
mov
add
out
cwtl
outsb
insl
pop
mov
sbb
aaa
or
cmp
insb
fwait
xchg
insl
out
add
push
or
xlat
sub
dec
fdivs
mov
inc
testb
xchg
pop
jmp
iret
inc
sbb
mov
pop
sub
stos
cli
jecxz
inc
cmc
test
cmp
inc
mov
call
or
sbb
mov
cli
xor
inc
insl
jle
mov
jno
and
sbb
dec
pusha
test
test
test
sbb
arpl
sub
adc
loop
cmp
aad
sbb
push
mov
movsl
lcall
scas
rolb
mov
lds
jns
lods
sti
pop
popf
rolb
and
out
xor
jns
push
out
or
xor
sub
stos
test
aam
data16
lea
nop
adc
and
cmp
add
in
bound
mov
int
lahf
fdivs
popa
imul
dec
dec
addb
movsl
lods
inc
sub
jns
xor
dec
xor
xor
sbb
ret
sub
jo
mov
daa
add
sbb
cld
hlt
lcall
mov
fcmovne
icebp
outsb
dec
pop
data16
push
shlb
insb
sub
cmpsb
ljmp
ljmp
aas
cwtl
je
add
xchg
mov
sti
and
clc
push
and
dec
hlt
repnz
jb
aas
mov
sahf
adc
outsb
movsb
aas
jmp
adc
outsb
popa
int3
and
pusha
lret
sub
xor
lods
ret
stos
adc
js
ljmp
mov
imul
or
dec
inc
sbb
ficoml
aas
test
aad
dec
xor
xchg
jl
lahf
sub
fwait
lret
aam
clc
mov
outsl
lods
stos
mov
imul
xchg
ficoml
pop
mov
sub
out
int3
cld
adc
cmp
push
outsl
xor
and
pop
xor
sarb
xchg
and
test
shll
xchg
lret
xchg
lcall
stos
add
sbb
cmp
pop
icebp
sbb
scas
mov
mov
stos
fnstenv
jecxz
sahf
and
dec
clc
lods
sub
out
popa
cmp
testb
xor
lea
mov
call
test
jp
push
outsl
mov
inc
sbb
inc
add
xor
insb
sub
ret
dec
dec
js
adc
mov
lea
xor
sub
mov
inc
jle
stos
arpl
push
cmpsb
xchg
lock
sub
outsb
aas
lods
xor
push
mov
test
xchg
out
mov
and
fisubl
push
fbld
out
arpl
addl
rcr
inc
push
mov
decb
sti
aam
mov
imul
jb
push
jmp
and
test
ss
insl
xchg
int
add
insb
inc
mov
fdivl
xlat
ljmp
xchg
adc
lods
cltd
orl
arpl
stos
jge
movsl
aas
lods
inc
sbb
outsb
pop
mov
lds
popa
and
test
fisubl
jl
mov
dec
dec
push
push
inc
sub
orl
in
xchg
cmpsb
div
stc
add
outsb
test
aaa
dec
leave
inc
inc
add
add
rcrl
int3
test
adc
jo
loope
addr16
test
sub
lret
cmp
and
daa
mov
inc
jbe
std
inc
pop
cmp
loop
xchg
in
add
cmc
mov
pop
sbb
aad
dec
xlat
and
stos
shlb
ficomps
cmp
addr16
ds
sbb
sbb
mov
mov
add
xor
lock
pop
pushf
xorl
or
repnz
and
inc
adc
push
cmc
and
jae
addb
fsubrl
test
jle
or
add
mov
cmc
data16
adc
push
notl
lret
lea
mov
rolb
inc
pop
out
or
mov
mov
mov
fisttpll
lock
xchg
mov
sub
adc
dec
loopne
mov
sbb
lahf
daa
gs
cwtl
paddb
cmp
mov
mov
xor
lds
adc
dec
xorl
scas
pop
test
lcall
ret
ljmp
mov
pop
and
add
sbb
jmp
pop
xchg
inc
stos
rcr
shll
cmpsb
sub
bound
xor
int
pop
ljmp
add
push
push
mov
insb
mov
shlb
movsl
nop
xor
leave
aaa
push
cltd
fs
pop
pop
pop
dec
les
lds
iret
addr16
dec
pushl
fistps
fucomip
sub
stc
stos
cmp
xchg
ficoml
loopne
roll
mov
inc
call
shl
shlb
lock
cs
lock
iret
ret
ja
xor
mov
pop
fldenv
popf
cmpsb
jl
xor
out
in
fidivs
push
cwtl
pop
mov
or
fnsave
shlb
nop
imul
enter
mov
and
sub
shlb
lea
cmp
push
test
push
aam
mov
lods
cwtl
dec
or
jno
mov
xchg
fistpl
jns
jae
pop
fdivl
pop
jns
mov
cmp
mov
ret
xchg
lock
jmp
popa
xchg
es
pop
stos
je
pushf
ljmp
fimull
push
jns
pusha
push
and
ja
cmp
jge
mov
xchg
xor
int
movsb
pop
enter
add
adc
je
call
ss
sbb
sub
mov
int
push
ja
aas
sbb
aad
sti
xchg
and
sub
xchg
sub
lret
aam
cli
lods
xor
movsb
add
xor
mov
xchg
aas
dec
stc
dec
push
bound
stos
mov
push
dec
dec
insb
in
xor
cmp
enter
mov
sti
ret
and
xchg
adc
rcrl
sbb
jge
or
xchg
imul
xor
cmp
sarb
aad
shrb
addb
sub
dec
mov
lock
pop
add
adc
and
cli
ss
mov
negl
sahf
jp
jg
daa
mov
js
adc
fdivp
push
cli
pop
lcall
movsb
fcoms
cwtl
gs
and
adc
and
push
rcrb
sahf
pop
enter
dec
iret
pushf
and
lods
add
gs
mov
aad
clc
rcrl
pop
pop
je
test
jns
mov
insb
std
fwait
bound
jmp
mov
mov
data16
adc
pop
lea
add
and
dec
jle
jnp
ljmp
adc
addb
sahf
std
iret
fs
cli
ret
and
cmc
mov
daa
mov
cmp
mov
push
in
xchg
fmul
call
imul
pop
hlt
enter
jae
outsl
pop
pop
add
pop
mov
ficoml
cmp
bnd
mov
pop
push
push
mov
adc
jno
cmp
pop
insb
pop
sub
loop
jne
out
lods
push
aaa
pop
fidivrs
std
mov
lahf
ds
aaa
mov
push
lret
cmp
dec
push
and
in
mov
jle
add
sbb
mov
rcrl
sti
inc
loope
mov
cmp
movnti
pop
orb
nop
push
shrb
sbb
gs
dec
fisubl
cwtl
xor
xor
mov
ss
xchg
xor
push
mull
insb
xor
xchg
xor
adc
adcl
aam
sahf
and
cli
cmp
inc
add
jns
pusha
push
addr16
fisubl
xchg
sub
add
cmc
push
call
inc
fsubs
sub
jecxz
xorb
arpl
inc
jns
fstpt
outsb
xlat
sub
mov
mov
push
sbb
add
xor
xor
fimull
lea
incl
or
in
pushf
jb
es
mov
pusha
cwtl
pop
cmp
dec
pop
cmp
popa
xchg
cli
inc
scas
inc
mov
cmpsb
fadd
xor
jl
dec
dec
addb
jnp
fidivl
jb
pop
mov
mov
fimull
adc
cmp
cli
sub
mov
orl
shrl
or
pop
mov
xchg
lock
jge
in
dec
outsb
or
mov
int
sbb
adc
mov
xchg
xor
mov
cmc
out
dec
xor
dec
jno
arpl
lea
xchg
jb
scas
push
lock
lods
cltd
out
cs
dec
pop
lds
out
cltd
icebp
outsb
cmp
in
pop
mov
push
lock
cwtl
mov
aad
test
mov
pop
ljmp
inc
setbe
data16
cwtl
fsubs
mov
cwtl
push
adc
arpl
fistl
adcb
cmpb
test
sbb
xor
pushf
subl
lea
les
test
movsl
sti
test
lods
fbstp
lds
insb
inc
scas
sbb
sbb
daa
clc
mov
inc
push
pop
sbb
ret
dec
loop
sysenter
mov
sub
jecxz
jae
cltd
pop
enter
inc
cs
aam
scas
inc
jne
mov
or
lods
jno
insl
subl
std
cmp
mov
pop
cmpsl
jmp
ss
push
pop
test
movsb
hlt
jns
jnp
sti
mov
push
out
jae
jb
pop
push
punpcklwd
adc
pop
fimull
push
add
xor
fisubrl
and
cmp
insb
shrl
or
mov
inc
cwtl
cmpsb
cmp
jl
push
movsl
pop
testl
pusha
insl
mov
loop
jns
and
arpl
bnd
daa
mov
mov
mov
sbb
iret
dec
movsl
jecxz
pop
in
in
dec
test
into
xchg
pop
enter
cmp
out
divl
mov
and
jmp
jecxz
outsb
insl
pop
mov
sbb
aaa
or
leave
pop
mov
inc
sbb
lcall
pop
sbb
ret
inc
lods
fidivl
icebp
sub
jecxz
jae
cltd
pop
enter
inc
cs
aam
scas
inc
jne
adc
rorl
in
cmp
add
shlb
xor
sahf
jb
pop
add
cmc
addr16
lea
fdivrl
test
bound
xor
sub
adc
dec
test
cltd
fs
mov
lea
xor
xchg
mov
dec
fsubrs
call
mov
js
insl
fidivs
cmpsb
ljmp
fsubrl
shll
dec
sbb
scas
shlb
mov
pusha
xor
aaa
cmp
push
enter
dec
arpl
dec
addr16
add
dec
add
pop
icebp
add
mov
repz
sub
lcall
cmpb
std
or
sahf
leave
cmp
rcrb
shl
ret
jp
fidivl
ret
dec
popa
adc
inc
adc
jb
ret
pushl
repnz
and
add
rorl
add
adc
into
push
push
icebp
xlat
jg
popa
test
repz
adc
ret
imul
inc
ss
pop
add
loope
mov
cltd
scas
in
scas
inc
inc
and
rorb
inc
aaa
add
jl
and
arpl
aad
jno
or
sti
mov
push
or
xor
mov
pop
xchg
inc
dec
test
sub
cmc
data16
iret
mov
popa
lods
fwait
insl
sbb
imul
ret
and
cmc
mov
popf
jno
arpl
lea
pop
stc
roll
add
xor
lret
mov
jge
mov
pop
push
bound
mov
les
dec
and
aad
sbb
inc
mov
aas
xchg
xchg
push
fmuls
fdivrs
lahf
in
es
ja
icebp
xlat
mov
pushf
or
pop
cmpsl
les
ret
jecxz
xchg
fldenv
insl
subb
subb
fwait
hlt
push
idivb
add
push
xor
adc
cmc
sbb
mov
adc
push
mov
jne
sbb
mov
es
cli
sub
ffree
ja
lret
xor
mov
dec
xchg
adc
add
repnz
or
in
in
sub
lock
lret
xor
inc
lock
insb
mov
bound
cmpsl
xor
ljmp
add
icebp
inc
int3
loopne
stc
and
add
rorl
add
adc
imul
inc
scas
sbb
stc
cmp
mov
js
xbegin
add
lea
add
jae
fbstp
xchg
nop
lods
stc
loopne
cmp
pop
jl
bound
stc
lret
imul
fnstsw
xor
push
rol
mov
std
sub
dec
push
jbe
xchg
fs
xor
inc
mov
push
repnz
xchg
cmpsl
cmp
jae
dec
inc
cwtl
xor
dec
leave
and
gs
lret
imul
mov
test
pop
imul
mov
lea
xor
push
or
call
cmc
jne
shll
add
mov
inc
orb
or
sbb
test
mov
adc
dec
mov
jmp
mov
mov
in
and
sahf
test
mov
cmpsl
rcl
add
cmpsl
or
jmp
jle
scas
test
fisubl
dec
add
xchg
push
dec
xchg
add
lret
pop
jmp
fiadds
push
mov
cmc
cmp
rorb
lods
ds
push
aas
iret
rcr
xchg
daa
hlt
pop
push
and
out
ljmp
mov
pop
and
add
dec
pop
pusha
add
inc
dec
insb
jo
repnz
xchg
adc
jecxz
xchg
cmp
cmp
and
sub
cltd
gs
lcall
icebp
mov
xor
push
aad
stc
jg
popa
xor
push
sub
push
outsl
cmpsl
js
inc
test
push
push
in
test
push
mov
add
or
lret
mov
xchg
or
xchg
push
outsb
nop
loopne
roll
mov
addl
lret
sub
sub
dec
adc
fmuls
fiaddl
fdivrl
lods
adc
cmpsl
je
pusha
cmp
or
sub
or
sbb
adc
and
mov
jno
arpl
lea
lcall
pop
mov
cld
loopne
pop
frstor
ficomps
aad
idivl
xor
dec
mov
pop
mov
pop
push
jmp
repz
test
fs
filds
orl
mov
popa
mov
mov
xchg
in
mov
test
in
xlat
popa
rcrb
mov
or
scas
mov
sbb
add
or
repnz
popa
mov
mov
stos
cwtl
shll
jge
sub
std
push
mov
bound
data16
cwtl
pop
mov
inc
cmp
mov
addr16
popf
xorl
in
and
sub
movsl
xor
ret
pop
inc
das
mov
loopne
push
mov
xlat
sub
pop
pop
sub
or
call
push
xchg
jne
mov
repz
push
dec
mov
cwtl
pop
cmp
dec
pop
lea
ret
fimull
and
imull
enter
jo
adcb
addr16
jl
lds
jns
lods
fidivrl
mov
jne
shlb
add
xchg
sub
mov
in
or
pushf
adc
mov
dec
cwtl
fisubrl
pop
mov
pushf
mov
fwait
pop
push
out
push
sbb
data16
mov
repnz
ret
addr16
fisubrl
pop
sar
test
sub
cmpsl
in
aaa
jecxz
jecxz
cwtl
xor
cmpsb
push
jg
arpl
mov
cld
dec
loop
jns
and
arpl
bnd
lret
jg
jmp
rorb
mov
or
test
mov
and
ficoml
pop
pop
mov
adc
andb
jo
mov
add
mov
jmp
lret
sub
int
cmp
lods
push
sbb
repnz
mov
les
push
xchg
lcall
outsl
pop
insb
jnp
test
push
xchg
pop
in
pushf
fisubrl
lods
jae
out
adc
sbb
aas
adc
add
mov
and
into
cmp
push
gs
adc
test
jl
cmp
ret
xor
cwtl
stc
cmp
out
movsl
pushf
xor
stc
xchg
mov
pop
mov
xor
pop
jno
xchg
xchg
fisubrl
jb
pop
add
loop
cmp
test
mov
mov
aas
ret
push
push
sbb
sub
adc
pop
cmpsb
dec
cwtl
inc
mov
push
loope
imul
inc
or
aas
data16
cwtl
data16
inc
add
sbb
sbb
out
imulb
shll
js
push
and
fidivs
test
movsb
ret
mov
leave
out
push
mov
xchg
ds
sbb
sbb
mov
call
dec
mov
imul
ret
cli
addr16
call
pusha
or
cmpsb
ljmp
in
sbb
lock
lods
mov
or
js
jmp
xor
fisttpl
and
sub
mov
test
lods
cmp
fwait
cmp
dec
mov
fst
mov
ret
inc
inc
push
mov
push
out
mov
push
dec
xchg
inc
cmp
iret
cmp
addr16
hlt
jno
fisttps
fldl2e
or
xor
add
jae
std
lock
mov
shlb
sbb
add
adc
loopne
xor
stc
adc
fimull
int3
ficoms
in
jge
mov
sub
or
mov
push
lret
adc
loop
pop
jecxz
pop
bound
xor
loope
rcrl
and
lods
incl
xchg
ds
jno
js
icebp
roll
bound
icebp
push
push
pop
jmp
stos
inc
mov
mov
js
jecxz
data16
lret
dec
scas
add
out
in
jae
mov
inc
sti
aad
jl
jo
lds
sbb
pop
jmp
ds
sub
enter
out
push
mov
lods
aas
dec
movsb
mov
in
and
mov
sbb
sbb
cmpsl
ja
repz
add
clc
popa
es
push
hlt
dec
fxch
pop
push
je
sub
and
pushf
arpl
cli
aas
xor
push
push
fldl
or
add
loope
push
sub
ret
test
les
mov
or
pop
dec
dec
xor
push
and
orb
sub
xlat
mov
push
aaa
jns
loope
sub
or
pop
imul
shll
cmpsb
sub
pop
mov
call
pop
enter
inc
cs
int3
jae
add
cmp
push
cmpsb
dec
cwtl
sbb
mov
popl
push
insb
push
mov
and
mov
pop
mov
sub
lea
xor
xchg
cmp
fdivr
or
shrb
xchg
jl
or
arpl
cli
lods
xor
movsb
add
xor
mov
push
lcall
jp
pop
mov
xor
loope
cmpsl
aad
je
pop
dec
fcom
hlt
imul
pop
jno
scas
mov
imul
push
movsb
adc
aad
add
xor
stos
mov
dec
jno
arpl
lea
fdivr
stos
xchg
inc
add
inc
loope
or
sub
movsl
xchg
xor
cs
inc
mov
nop
cmc
icebp
fs
popf
mov
lds
mov
jmp
mov
scas
aam
xor
dec
cmp
lret
mov
dec
jae
xor
sbb
add
sbb
pop
arpl
bnd
lret
jg
jmp
dec
cwtl
xor
inc
and
sub
les
jns
mov
cmp
mov
jg
push
cmpsl
mov
xchg
sub
pusha
mov
aaa
data16
cwtl
fsubs
adc
call
cmp
push
ret
inc
add
mov
bound
shll
inc
lea
xor
add
dec
popa
in
push
and
inc
mov
stc
or
iret
imul
and
pop
sbb
mov
push
pop
sub
loop
pop
sti
push
rorl
or
ja
cmp
and
in
xor
inc
scas
sbb
imul
sahf
dec
fsubl
test
iret
cmp
pop
mov
aas
push
jb
sub
loop
xor
js
movsl
mov
arpl
jae
cltd
pop
enter
inc
cs
ds
mov
xchg
cmp
push
jbe
pop
lahf
stc
aad
pop
jmp
lock
cs
int3
das
repnz
in
push
push
pop
or
ficoml
jno
insl
inc
adc
cmp
jl
pop
out
pop
sbb
data16
ret
leave
mov
mov
pop
sbb
pop
data16
fisubs
cmpsb
jg
test
sbb
repnz
jns
or
ja
or
and
popf
cmpsb
jl
xchg
adc
lret
lods
insb
mov
sub
lods
push
mov
fistl
int
popf
mov
shlb
nop
dec
iret
in
cli
mov
cmp
bound
in
fisubl
push
sbb
xchg
mov
push
cmc
ljmp
or
cmp
add
lea
push
aas
loopne
cmpsb
xchg
gs
sub
rcrl
xchg
fbstp
inc
dec
xor
outsb
imul
sbb
cmp
movsb
fcoms
cwtl
gs
and
adc
and
push
rcrb
sahf
pop
enter
dec
iret
pushf
and
lods
add
cmc
loope
inc
arpl
jae
shl
jge
insb
push
and
mov
adcb
in
and
or
or
dec
inc
sbb
fwait
mov
cmp
mov
andb
push
inc
sub
orl
in
xchg
fmull
loope
add
jb
fimuls
dec
or
addb
cmp
dec
mov
fimuls
sub
adc
push
int3
pop
pusha
loopne
icebp
sub
imul
rorb
sbb
xor
jmp
dec
adc
lret
dec
lret
or
ja
or
jb
xor
or
test
mov
mov
adc
cmpsl
add
insl
ret
lret
in
mov
add
sbb
dec
inc
stos
mov
push
lds
lahf
pop
push
dec
imull
addr16
xor
cs
lret
jmp
dec
dec
imul
mov
xor
addr16
lds
out
add
xor
or
fcoml
xchg
outsb
dec
push
fbstp
xchg
or
dec
inc
addb
mov
mov
insb
lds
or
cli
lret
pop
jmp
popa
xchg
es
lock
cmp
cmp
xchg
lods
fs
xor
int3
mov
lea
xor
add
or
xor
xchg
adc
xor
std
cmpsl
sahf
call
lahf
cmp
mov
pop
in
or
and
mov
dec
aaa
cmpsb
push
sbb
mov
add
aaa
mov
xor
mov
xor
daa
xchg
outsb
into
mov
outsl
mov
jo
iret
fsubs
lea
test
adc
std
fucomip
push
inc
cmpsl
push
push
in
decb
cwtl
xor
outsb
cli
lods
xor
movsb
add
xor
mov
xchg
push
fs
mov
insl
jmp
cld
jmp
aad
je
pop
dec
fcom
hlt
fisubl
inc
std
sub
dec
mov
dec
insl
loope
inc
inc
movsb
lods
mov
push
scas
ret
mov
mov
adc
shlb
mov
shrb
add
push
repz
dec
xlat
and
and
dec
ja
out
xchg
xor
xor
ss
aam
call
data16
out
dec
xor
out
xor
lock
pop
sbb
push
dec
and
add
xor
mov
add
loopne
rorl
push
jp
xor
add
mull
mov
test
pop
pop
mov
push
and
xchg
jmp
jno
xchg
xchg
sub
xchg
sbb
aas
lcall
mov
or
repnz
in
push
call
add
mov
mov
push
inc
or
inc
jbe
arpl
in
add
mov
shlb
mov
inc
sub
orl
ficoml
fwait
lret
aam
cli
lods
xor
movsb
add
xor
mov
iret
addr16
rolb
sbb
and
call
push
mov
out
push
lods
test
dec
rclb
cwtl
es
std
and
mov
in
cmp
adc
lret
lods
insb
mov
mov
mov
mov
fnsave
shlb
nop
dec
iret
in
cli
mov
cmp
clc
mov
xchg
mov
mov
pop
loope
sbb
sub
aaa
cld
cmp
incl
mov
mov
movsl
in
add
aad
jge
jnp
shll
pusha
testb
mov
push
mov
push
xchg
aaa
cmp
cmc
xchg
pop
in
mov
adc
lods
add
jbe
out
nop
movsl
inc
cmp
addr16
hlt
jno
fisttps
outsl
inc
addb
jnp
test
dec
ret
in
in
adc
stos
je
mov
insb
mov
shlb
gs
and
jno
or
and
push
arpl
sub
repnz
pusha
ficoml
mov
lahf
mov
insl
jmp
cld
jmp
jae
inc
jne
sub
stc
push
or
je
add
adcb
data16
pop
gs
or
inc
add
sub
push
add
pop
or
mov
mov
lcall
mov
mov
shll
xor
cmp
std
pop
pop
xchg
jbe
pop
or
int
std
and
dec
inc
sbb
inc
cmp
insb
std
icebp
test
and
in
in
push
dec
js
cmpsl
sahf
or
xor
push
mov
mov
push
popf
xchg
enter
lds
sahf
filds
mov
add
mov
sar
xchg
cmc
xchg
inc
add
ds
push
aas
iret
rcrl
mov
xchg
mov
xor
pop
call
and
dec
out
imulb
and
mov
addb
dec
arpl
cmp
lock
jp
push
loope
dec
cwtl
xor
cltd
cmpsl
xchg
inc
push
mov
push
pop
push
addr16
pop
push
ficompl
dec
jg
call
xchg
fwait
push
psubb
rclb
or
cld
mov
mov
mov
pop
negb
stos
adc
add
lret
pop
call
repnz
ret
in
xchg
sbb
sahf
cmp
inc
add
jae
repnz
mov
ljmp
aam
scas
inc
jne
test
and
lret
js
dec
leave
imul
push
or
or
cltd
repnz
lahf
or
call
arpl
lea
idivl
jl
sahf
scas
sub
icebp
sub
aad
repnz
xchg
ds
jno
js
jbe
mov
jb
daa
ljmp
call
mov
js
insl
fidivs
push
fstl
push
mov
push
or
fisubl
cwtl
xor
rorl
or
cwtl
xor
or
xor
test
dec
pop
test
or
imul
cmp
dec
call
mov
and
xor
mov
cmp
ret
mov
mov
jno
mov
dec
dec
sbb
mov
sub
inc
fs
bound
daa
negb
into
frstor
adc
outsl
sbb
cmp
dec
in
pop
hlt
dec
cmp
xchg
fcomps
ja
xor
push
adc
dec
cmp
je
add
xchg
mov
pop
xor
add
popa
cmp
push
addps
pop
pop
popa
scas
jg
or
inc
aaa
in
mov
fadds
outsb
cmp
repnz
lret
sub
xor
lods
ret
stos
adc
ljmp
jle
js
stos
notb
jae
into
int
push
ja
aas
sbb
js
adc
sub
dec
xor
pop
scas
imul
jmp
and
adc
mov
outsl
lods
adc
cmp
xchg
imul
and
movsl
sub
dec
in
cmpsl
dec
sbb
and
adcl
xor
repnz
pop
daa
mov
rcll
adc
jno
cmp
pop
insb
pop
sub
loop
out
push
xchg
sbb
adc
pushl
inc
sbb
sbb
fidivs
imul
loope
or
fnstenv
mov
or
or
stos
mov
cld
hlt
lret
ret
mov
fcmovne
icebp
push
push
stc
or
call
outsl
add
iret
fisubl
xchg
xchg
mov
mov
icebp
xor
pop
jge
jnp
stos
ljmp
das
adc
mov
stos
test
dec
rorb
cmp
inc
lret
fbld
add
fdivs
fs
ret
pop
mov
mov
pushf
ljmp
add
jns
pusha
push
and
ja
cmp
jge
mov
push
cmpsb
int3
push
mov
arpl
push
movsb
pop
enter
icebp
pop
outsl
loope
lods
imul
mov
jecxz
xchg
adc
push
add
push
cld
mov
sub
push
cs
aam
xchg
loop
lahf
push
es
xor
mov
cmpsl
mov
mov
test
push
adc
ljmp
out
jno
jnp
js
cltd
popf
adc
cmpsl
je
pusha
cmp
cmp
cli
ljmp
clc
rorl
lahf
mov
sarl
out
jno
lret
test
mov
icebp
push
push
decl
mov
push
mov
mov
in
imulb
or
sahf
push
lock
cwtl
sub
xchg
pop
rolb
xor
pmaxsw
inc
inc
or
add
push
repnz
dec
std
xorl
fmull
lock
adc
ret
lret
fisubrl
cwtl
xor
dec
add
xchg
push
cmp
xor
hlt
or
cld
lods
push
add
cmp
fstl
mov
cwtl
xor
loopne
push
lcall
cmc
call
outsb
insl
pop
mov
sbb
aaa
or
cmp
push
cmp
ja
loop
sbb
ss
sbb
je
and
rclb
xor
dec
in
adc
xchg
shl
fsub
push
xchg
jae
push
mov
add
or
lret
mov
xchg
or
xchg
push
outsb
nop
loopne
roll
mov
dec
leave
and
jl
sbb
dec
call
daa
push
insl
ret
push
hlt
add
std
aad
mov
adc
imul
out
in
fidivs
mov
mov
adc
cmpsl
add
arpl
pusha
call
pop
add
jmp
cld
test
jmp
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
jmp
pusha
sbb
mov
js
mov
and
jmp
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
jmp
mov
mov
test
xor
imul
stos
or
popa
push
push
lea
mov
not
inc
mov
repnz
xor
cld
pop
pop
push
push
push
pop
add
jmp
jg
xchg
stos
fwait
cmp
jbe
xchg
push
push
pop
jmp
push
dec
dec
outsl
jl
pop
mov
es
fsubr
or
add
mov
pop
lods
jne
jnp
push
jmp
sub
scas
mov
jmp
dec
fsub
mov
inc
je
adc
sub
jmp
loopne
pop
jmp
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
fsubr
and
outsb
setl
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
push
push
mov
jmp
cmp
sub
mov
sbb
xlat
add
jmp
les
cs
pop
add
jmp
cmp
push
jmp
hlt
sbb
jmp
xchg
arpl
fidivrs
js
mov
les
adc
add
mov
lea
nop
mov
lret
test
pop
cmp
je
jmp
sar
jmp
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
rorb
adc
dec
outsl
jmp
jl
pop
mov
es
adc
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
insb
and
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
sub
ret
inc
jns
pop
insb
xor
xchg
pop
add
in
in
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
mov
push
push
shl
cld
pop
pop
add
push
push
jmp
cmpsb
out
cmp
or
fisubs
add
jle
sub
mov
sbb
xlat
les
add
jmp
jae
test
or
add
loope
hlt
sbb
fidivrs
xor
add
ljmp
lea
nop
mov
jmp
inc
lcall
std
repnz
sar
lahf
pop
add
jmp
push
xchg
pop
push
mov
add
jmp
xor
imul
add
add
cli
stos
or
int3
jmp
mov
push
and
fstps
add
jmp
jg
xchg
stos
fwait
cmp
jbe
jmp
ja
dec
add
push
add
push
jmp
add
es
mov
push
mov
jmp
cmpb
xchg
add
jmp
or
icebp
push
inc
sub
jmp
sub
add
push
push
or
mov
cmc
cld
pop
pop
xor
push
mov
jmp
popf
adc
loopne
pop
aas
push
mov
jmp
or
push
clc
shll
aaa
movsb
or
jmp
rcll
or
das
cmp
sbb
inc
out
aam
pop
add
jmp
jns
pop
insb
xor
xchg
pop
add
and
test
not
dec
cmp
cld
pop
pop
rol
push
push
lea
dec
cld
pop
pop
inc
push
push
push
pop
mov
shr
cmp
test
xchg
mov
mov
dec
cld
pop
pop
dec
jne
push
jmp
inc
pop
xor
shlb
int3
adc
sbb
mov
int
lret
adcb
test
push
pop
jmp
add
adcl
add
add
cmp
sub
mov
jmp
sti
sbb
xlat
les
cs
pop
pop
mov
push
mov
jmp
loope
hlt
sbb
jmp
arpl
fidivrs
or
js
mov
and
inc
push
nop
pop
push
push
mov
jmp
mov
add
add
lcall
add
sldt
add
std
repnz
sar
lahf
in
mov
pop
add
push
push
add
cmp
xchg
not
test
push
pop
sbb
repnz
pop
pop
pop
jmp
xor
xchg
test
xor
imul
add
stos
or
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
push
push
jmp
push
dec
dec
outsl
jl
pop
mov
mov
sub
jmp
es
jmp
addr16
mov
cmpb
jnp
push
jmp
sub
scas
dec
fsub
mov
mov
jmp
xchg
popf
adc
loopne
sahf
add
add
jmp
cltd
pop
aas
or
push
jmp
pop
clc
add
push
jmp
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
fmuls
pushf
movsl
jp
mov
inc
pop
xor
shlb
ret
