add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
aam
pop
faddp
nop
stos
cmp
or
mov
add
pop
add
add
push
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
out
add
add
add
mov
adc
rolb
add
or
mov
add
add
add
push
add
add
add
mov
add
add
add
add
add
push
add
add
inc
add
add
lahf
add
add
add
dec
add
add
add
and
add
add
add
push
add
xor
adc
nop
add
add
add
add
adc
test
xchg
add
add
add
add
lahf
add
add
add
daa
add
imul
adc
imul
jb
filds
sub
inc
add
dec
add
add
add
rolb
popa
add
add
mov
sub
mov
add
add
add
mov
add
push
out
add
add
add
jns
jb
pop
add
and
mov
pop
add
add
add
mov
popl
sub
jb
xchg
add
roll
mov
add
add
add
add
add
add
mov
sub
stos
add
push
add
sub
cld
add
add
jb
or
fadds
mov
cmp
add
add
add
add
add
add
add
jnp
mov
add
add
add
add
mov
add
push
add
add
ret
add
add
add
add
add
add
xor
mov
xchg
add
add
outsb
add
add
rolb
jb
mov
add
add
add
add
add
add
mov
adc
pop
add
add
add
add
hlt
add
hlt
add
mov
add
add
add
add
add
add
jb
scas
add
add
and
aaa
add
or
popl
or
and
jb
jb
mov
out
add
add
add
add
add
add
add
mov
add
add
mov
jb
mov
or
outsb
add
add
add
add
jne
jecxz
jb
outsl
add
pop
add
add
add
add
add
jno
imul
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
filds
mov
add
add
push
pop
add
inc
add
add
add
add
add
add
mov
mov
add
fildl
push
add
add
adc
daa
add
add
daa
add
add
add
add
add
add
bound
adc
add
add
jb
aad
popl
inc
add
add
imul
roll
sub
filds
jb
dec
add
add
add
add
add
jb
pop
add
add
jb
loope
out
add
mov
add
add
add
addl
dec
add
add
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
add
hlt
add
add
add
call
add
add
xchg
pop
add
add
add
add
icebp
daa
jg
jnp
adc
fdiv
and
fidivrs
inc
sub
inc
inc
clc
and
outsl
pop
cmp
insl
dec
rolb
xchg
pop
adc
mov
arpl
pushf
sarl
and
xor
in
push
loope
aas
mov
leave
push
ficompl
sbbb
inc
cmc
add
fxch
cmp
cmp
out
icebp
cmpsb
cmpsb
sbb
sbb
mov
into
in
or
sbb
pop
xchg
mov
ds
sarb
test
adc
sub
cmc
repz
sarl
mov
insb
dec
stos
pusha
mov
subl
enter
pop
push
fsubs
and
xor
adcl
cs
outsb
mov
push
adc
imul
mov
es
mul
sbb
addl
repz
test
inc
call
cmpsl
mov
rolb
mov
lret
popf
adc
shlb
pop
pop
shrl
pop
cmpsl
cltd
lods
mov
rcrb
push
andl
xor
pop
sub
jo
shrb
jg
cmp
or
pushf
add
pop
inc
outsb
mov
popa
xor
rorb
push
push
push
test
adc
xchg
cmp
inc
push
mov
repz
cmc
int3
shl
dec
mull
mov
in
mov
mov
sub
icebp
cmp
xchg
fiadds
sbb
arpl
gs
ss
cmp
push
call
gs
and
cmc
adcb
jns
testl
push
ss
dec
hlt
mov
push
sbb
xchg
shrb
mov
imul
add
inc
lahf
add
stos
lock
rolb
jo
push
pop
jg
mov
jno
dec
jae
out
mov
cwtl
fs
pop
inc
mov
stos
xchg
sub
les
pusha
xor
in
lret
ds
lret
push
shlb
rcrb
pop
xor
cmp
cld
in
addr16
xor
dec
clc
popf
in
fldt
inc
inc
imul
add
loopne
inc
inc
sbb
shll
pop
pop
loopne
je
pop
adc
cmc
int3
fcmovbe
inc
pop
add
bound
pop
pop
jecxz
mov
shll
pop
std
call
loopne
mov
sub
add
cmp
scas
rorl
stos
xchg
mov
mov
xor
fdiv
lahf
ja
jecxz
and
cmpsl
jg
pop
push
push
jge
and
ret
pop
aad
je
inc
xor
mov
rorb
jo
movsb
popa
push
aaa
sbb
mov
or
arpl
mov
cmpl
push
or
pop
xor
and
inc
mov
mov
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
test
sub
pop
gs
pop
adc
insb
xchg
and
lods
aam
int
in
in
adc
cmp
sub
pop
inc
dec
jne
or
mov
cld
in
adc
cmp
sub
pop
inc
dec
jne
gs
xchg
pushf
test
mov
lods
nop
aad
mov
jns
jne
fsubp
mov
adc
xchg
out
out
push
push
mov
inc
sbb
sbb
push
mov
push
adc
loopne
jp
in
inc
sub
std
inc
sbb
int3
cmp
inc
jmp
adc
cmp
adc
jecxz
pop
push
imul
lock
mov
sbb
pop
imul
inc
jae
jp
sub
mov
in
call
ret
xor
mov
sub
lock
in
movsl
lods
xchg
sbb
andb
mulb
mov
leave
sub
int
pushf
hlt
cld
in
dec
sbb
or
cmp
sub
pop
inc
dec
jne
gs
xchg
pushf
test
fadd
int3
cmc
cld
in
popa
sbb
jne
jge
insl
push
sbb
cmp
sbb
sbb
in
aaa
xchg
rcr
test
mov
jo
pusha
inc
je
dec
xor
and
jne
sbb
dec
fcmovnb
sahf
mov
cli
mov
push
pop
add
dec
jne
gs
xchg
pushf
test
fadd
int3
cmc
cld
in
adc
cmp
sub
pop
inc
dec
jne
gs
xchg
pushf
test
fadd
int3
cmc
cld
in
adc
push
ja
es
mov
je
rcl
sti
mov
dec
aaa
in
call
scas
inc
pop
iret
lods
xchg
jne
sarb
push
pop
loope
add
repnz
xor
push
pop
lods
inc
flds
out
sub
leave
mov
xchg
daa
sbb
stos
mov
mov
mov
inc
sub
leave
std
xchg
sbb
push
and
adc
scas
in
add
out
dec
andl
leave
int3
or
in
pop
rcll
roll
xchg
add
or
icebp
repz
sub
jns
xchg
xlat
dec
xchg
lock
push
or
nop
push
jo
in
fmulp
shlb
adc
loope
scas
push
call
dec
mov
push
lods
test
ret
ret
ret
mov
mov
push
inc
adc
xchg
loopne
mov
xor
rcl
test
push
mov
loopne
pop
out
sub
jecxz
test
jl
fmulp
in
jo
mov
dec
pop
push
out
mov
stos
fistps
adc
dec
cmp
jmp
mov
jae
push
jne
sarb
je
xchg
dec
dec
into
inc
mov
push
mov
mov
jp
fdivrs
mov
ror
mov
test
fwait
cmp
mov
pop
in
jecxz
cld
stos
add
negl
sbb
xchg
sbb
xor
fsubrs
sbb
imul
fwait
xor
jl
inc
pop
mov
sbb
and
sbb
pop
lret
xchg
out
xor
inc
mov
sub
test
imulb
xor
scas
outsb
push
enter
jle
xorl
or
das
mov
dec
adc
pop
mov
hlt
call
xchg
fsubr
mov
mov
adc
cmp
nop
xchg
and
add
adc
sbb
push
push
jno
add
test
mov
xor
and
xor
imul
lahf
ret
xchg
loop
mov
mov
inc
adc
std
and
jns
sti
shrl
dec
rcll
les
jb
dec
std
adc
or
mov
cmc
loope
inc
add
lahf
movsb
je
xchg
sub
push
fdivs
mov
bound
mov
or
push
loope
xchg
les
pop
push
xchg
loope
jbe
dec
fisttpll
out
xchg
and
mov
bswap
jnp
insl
or
sub
inc
push
mov
adc
push
shll
push
out
out
sbb
mov
xchg
or
mov
adc
dec
arpl
enter
sbb
int3
loopne
and
or
xor
inc
cmpsl
int
jg
test
xor
push
dec
xor
sbb
push
ret
dec
inc
push
ficoml
lahf
sbb
outsl
push
sub
mov
sbb
push
sbb
fsts
cmpsl
inc
out
clc
mov
test
lcall
jb
push
enter
mov
mov
stc
mov
jb
jge
movsb
jb
jle
mov
or
frstor
cld
lds
js
dec
push
sbb
xchg
mov
mov
pop
arpl
pop
mov
mov
mov
and
ret
jp
aam
mov
rorb
xchg
orl
sbb
cmpb
fstpl
cmpsl
fwait
fwait
loop
loopne
xlat
push
insb
sti
dec
adc
and
es
xlat
pop
hlt
add
aaa
popf
lcall
push
test
lret
cmp
or
mov
pop
inc
ja
jp
cmpsl
test
cmp
push
or
fdivp
fadd
cld
and
jb
jae
add
mov
pop
mov
push
push
add
movsl
jp
sti
in
outsl
jle
mov
lods
pop
jno
jbe
stos
ret
or
lods
inc
stos
inc
adc
or
push
mov
xor
xor
repnz
lret
ds
jp
pop
pop
mov
push
push
cwtl
sub
loop
jp
push
popf
leave
jnp
lock
cmp
pop
jbe
stos
jle
ja
inc
or
inc
stc
jecxz
pop
cltd
pop
out
jns
in
int3
xor
les
pop
mov
lret
jnp
adc
pop
enter
mov
cld
stc
pop
or
push
pop
fsts
and
stc
loop
iret
out
into
push
push
andb
scas
test
sbb
adc
lods
loopne
idivb
loope
mov
cmp
mov
and
xchg
mov
iret
mov
addl
daa
sbb
cmc
icebp
push
add
mov
roll
add
push
loope
in
stc
add
push
mov
adc
fsub
fcoms
and
popa
test
adcb
cld
push
mov
aad
xlat
stos
out
cmp
pop
dec
xor
push
push
xor
add
pop
loop
and
xor
jns
movsl
xchg
mov
icebp
xchg
mov
xor
jge,pt
mov
push
cmp
lret
aaa
cmpsl
pop
sub
test
les
cmpsl
pushf
je
and
and
fstpt
cli
in
sti
bound
xchg
pop
push
fxch
jb
das
fiadds
cmp
fwait
int
movl
push
push
into
xchg
imul
xor
lcall
add
mov
inc
jp
cmp
cs
mov
jge
inc
mov
inc
xor
jbe
add
int3
cmp
daa
push
out
mov
jae
dec
and
imul
hlt
sub
mov
mov
dec
mov
xchg
flds
mov
ja
jno
and
pushf
pop
cmpsb
inc
push
push
lahf
xor
cwtl
and
bound
mov
inc
add
jmp
xor
in
std
out
ja
ss
iret
add
sbb
push
push
movsl
cmp
push
or
pop
sbb
sub
add
cli
mov
inc
js
cli
xor
push
rcrb
mov
mov
test
xor
or
xor
push
lds
popa
pushf
aaa
fwait
or
fwait
jecxz
frstor
sub
ret
sbb
imul
xor
add
ficoml
test
in
xchg
in
or
pop
cmp
insl
leave
add
xchg
mov
cwtl
les
stos
xor
inc
lret
xorl
je
cwtl
test
inc
aam
out
jne
imul
sbb
int3
mov
mov
into
pop
pusha
mov
pusha
dec
adc
dec
xchg
adc
sti
andl
es
and
dec
cmp
adc
icebp
xor
cmp
mov
dec
and
mov
push
ja
adc
test
mov
add
das
jo
sub
shlb
pop
mov
mov
lahf
jp
std
iret
and
shr
imul
jne
adc
jnp
lea
js
xor
xor
or
xchg
movsl
rcl
lret
cltd
pop
xor
dec
pop
lods
lods
int3
xchg
sub
pop
leave
xorb
jge
lock
xchg
cmc
insl
xchg
xchg
xchg
int3
scas
rcrb
icebp
addr16
inc
outsl
sbb
cwtl
arpl
mov
bound
jne
cltd
cmpsl
mov
and
pop
sbb
jge
jge
jns
xchg
out
fwait
cmp
sub
in
jmp
cmp
or
pop
arpl
mov
jbe
ljmp
sub
loope
mov
int3
cmc
pushw
movl
loop
jmp
ficoms
movsl
mov
ror
cmp
mov
mov
push
xchg
push
and
int3
and
das
ja
inc
xchg
and
outsl
cmc
in
mulb
std
cmp
jns
scas
fldt
enter
add
in
iret
lret
xchg
jmp
inc
or
sub
imul
hlt
mov
les
stos
and
mov
rorb
xchg
xchg
aam
or
addr16
cli
mov
inc
lret
fldt
fadds
mov
inc
xchg
addl
xchg
sub
push
loopne
cmp
add
push
sbbb
sub
adc
mov
push
cltd
xor
and
xor
push
pusha
sbb
in
popf
scas
push
imul
hlt
out
dec
adc
dec
test
sub
mov
adc
jmp
rcr
lcall
mov
rcrb
and
ret
dec
les
and
mov
out
add
icebp
jno
mov
rcrl
cmp
mov
call
iret
or
fmul
cmpb
loope
cmp
adc
inc
push
cmp
mov
add
dec
push
loopne
hlt
pop
jo
xor
add
ret
dec
jecxz
rcll
or
jns
inc
push
in
sbb
mov
fucom
hlt
inc
xchg
sbbb
mov
or
pop
mov
dec
dec
cmp
push
pop
insl
inc
ja
and
addl
adc
dec
push
das
mov
add
leave
cmpl
gs
jle
sarl
cmp
push
sub
mov
shrl
adc
in
mov
mov
xor
jl
stos
pop
cltd
in
loope
fs
xchg
in
std
cli
xchg
stc
xchg
out
push
mov
cmp
insl
por
push
cmp
mov
jo
cli
xchg
cld
push
stos
push
jns
aaa
mov
lcall
shl
mov
jno
mov
bound
rcrb
aad
dec
ja
fs
adc
ret
jo
ja
mov
add
repz
out
outsb
mov
scas
fdivs
lods
mov
andb
push
dec
stos
xchg
xor
pushf
clc
or
test
mov
jmp
sub
xor
sarl
pop
mov
out
cld
push
in
xchg
pusha
jmp
lods
cmp
mov
xchg
dec
pushl
cmp
in
call
repz
add
int3
addr16
cmp
pop
dec
mov
dec
push
sub
pushf
rcrb
dec
jge
adc
popa
cmp
fwait
clc
addb
les
aas
sbb
xlat
sub
mov
int
imul
pop
lds
mov
test
xchg
push
xlat
sbb
mov
xor
popa
cmp
mov
xchg
repz
sahf
jae
rol
pushf
lahf
and
aam
or
cs
test
mov
mov
mov
out
mov
xor
jl
sbb
jbe
or
push
test
mov
pusha
sbb
in
jns
or
sbb
mov
cli
mov
and
test
ret
sub
ret
insb
mov
es
add
sbb
mov
es
loop
or
lea
lods
mov
das
js
add
aaa
outsb
fcomip
adc
sub
popa
lea
scas
aaa
push
fadds
xchg
mov
int
xchg
repnz
icebp
pop
mov
insl
fimull
adc
dec
sbb
pop
int3
adc
and
dec
jne
pop
pop
cli
push
mov
incl
les
mov
stos
sbb
movsb
enter
daa
mov
js
out
popf
lock
mov
sub
in
push
pop
rclb
stc
mov
cmc
divl
sub
xchg
dec
sahf
inc
ffree
adc
arpl
and
roll
push
nop
add
cmpsl
xchg
ret
sbbl
push
gs
inc
adc
mov
inc
movsl
dec
lea
and
faddl
mov
mov
lret
fcmovnb
add
push
xlat
stos
pop
das
xchg
fdivrl
insb
leave
or
imul
sbb
ret
push
sub
push
movb
and
fidivs
movsb
icebp
adc
lcall
les
jle
sbb
xor
inc
pop
pop
push
shlb
ljmp
out
add
push
mov
ss
or
pusha
fnsave
push
popf
jmp
sub
dec
or
jmp
cld
and
enter
dec
pop
sti
adc
mov
push
push
xor
pop
inc
xor
cltd
lret
std
ds
cmp
cmpsb
push
pop
sub
inc
or
sub
shrl
das
iret
xlat
out
pop
arpl
lea
pop
lcall
test
popf
rorl
jmp
xor
clc
jg
nop
xchg
mov
xchg
and
lds
adc
jge
xchg
jp
ja
movsl
idivb
cmp
inc
xlat
inc
adc
adc
sub
jmp
push
pop
xlat
sbb
clc
pop
xchg
movsl
testb
cmp
jg,pt
test
pop
fs
ret
jl
xor
insl
add
sub
jnp
mov
dec
jnp
les
lcall
lock
cmpl
mov
js
inc
sahf
xchg
add
sub
ss
add
lods
dec
test
xchg
call
xor
mov
mov
imul
imul
ss
ds
pop
mov
ljmp
jmp
inc
jmp
aam
pop
imul
arpl
pop
push
sbb
pop
daa
pusha
loope
int3
xlat
sub
xchg
aam
sbb
dec
xor
sub
popf
mov
push
cld
subb
mov
pop
pop
mov
das
push
lock
sub
aad
sbb
out
dec
xchg
xchg
cmpsl
out
call
daa
cs
push
inc
push
and
sbb
daa
sbb
lret
jae
shl
xchg
mov
adc
xlat
fistpll
xchg
sub
enter
pop
dec
add
pop
cmp
pop
ljmp
xorb
add
mov
stos
les
mov
dec
test
icebp
dec
ja
xor
arpl
mov
fcomps
into
sub
arpl
or
insb
or
and
jge
mov
fnsave
jmp
pop
ret
add
popf
xor
imul
and
inc
fdiv
clc
stos
or
scas
or
outsl
lods
lahf
pop
aad
xor
dec
and
and
jne
dec
cmc
push
inc
mov
or
add
adc
out
dec
inc
test
cwtl
dec
xchg
sub
popf
pop
lea
dec
add
pop
cmpsl
sti
insl
push
push
xchg
xor
pusha
mov
test
push
movsl
loopne
jmp
and
cmp
subb
div
fwait
shrb
pop
and
lcall
mov
lcall
leave
inc
pop
add
hlt
sbb
int
cld
or
aas
popa
cmpsb
push
test
push
cmp
xchg
xor
or
push
mov
cmc
cmp
pop
mov
jge
mov
cmp
inc
mov
cmp
in
pop
or
lods
cli
cmp
dec
sub
and
inc
mov
les
jg
mov
inc
or
dec
cwtl
pop
pop
mov
sbb
inc
push
or
cs
cwtl
add
jp
add
inc
mov
dec
xchg
jp
sbb
in
mov
pop
dec
xchg
inc
nop
jo
mov
pop
cmp
mov
sbbl
stos
mov
push
sub
lret
mov
cmp
cltd
lcall
xlat
movsl
push
or
or
out
push
es
repnz
lds
int
js
iret
push
sbb
cmp
and
out
jnp
sub
int3
popf
decb
pop
and
in
cwtl
cmpsl
mov
cli
movb
mov
push
mov
sub
mov
dec
jg
jg
add
fbld
add
stos
mov
add
nop
scas
dec
push
add
movsb
xchg
mov
add
inc
iret
inc
pop
lret
cwtl
out
and
scas
jnp
cmc
add
cmp
sahf
adc
shll
addb
mul
divl
fcoms
mov
push
addl
decb
inc
inc
push
mov
inc
mov
hlt
or
xchg
jae
cmp
iret
fnstcw
sti
jge
add
aad
pop
adc
lret
pusha
js
daa
sub
popf
inc
pop
sub
adc
or
loope
clc
jno,pn
scas
jb
adcl
lret
out
sub
scas
out
xchg
test
sbb
js
out
and
or
xchg
xlat
xor
push
cld
or
adc
add
gs
and
je
rcrl
cli
imul
inc
movsl
push
arpl
pushl
jnp
loop
insl
icebp
fcom
lea
call
xchg
movsl
nop
test
daa
xor
in
push
sbb
xor
mov
mov
fimuls
adc
mov
aaa
mov
nop
mov
fldt
xlat
movsl
fwait
sub
pop
sub
lret
push
dec
add
push
test
pop
xor
push
sbbb
test
inc
movb
cmp
xchg
iret
push
rcrl
aaa
sbb
adc
sbb
arpl
add
lret
div
outsb
idivb
dec
bound
leave
stc
cs
jl
xchg
sbb
pop
movsb
lods
mov
xor
das
jmp
inc
in
orl
leave
cmp
dec
jb
mov
dec
dec
stc
ret
add
inc
mov
pop
ss
inc
fldenv
and
scas
or
adc
in
enter
repnz
pop
call
add
mov
mov
repnz
cmp
inc
andb
cmp
dec
push
fiadds
jle
pop
sub
push
jno
add
sub
dec
xor
cmp
mov
std
js
fidivs
sahf
sbb
cmp
xchg
je
inc
int3
into
stos
popf
pushf
das
ret
test
lds
mov
sub
scas
push
stos
xor
aam
lcall
mov
pop
ret
clc
adc
mov
rcrb
das
cmp
mov
xor
jb
repnz
mov
div
jns
adc
arpl
mov
add
jge
dec
sub
push
xchg
mov
fsubl
in
test
adc
xlat
popa
sbb
add
xor
cmp
or
pop
daa
push
in
jg
js
adc
push
loopne
push
mov
out
cmpsl
jno
cmp
rcll
js
int
xor
or
adc
push
aas
loopne
mov
mov
fsubrl
jb
outsb
jns
add
pop
inc
ret
test
ljmp
mov
and
aas
addb
test
add
addl
cmp
negl
outsl
sub
cltd
ss
mov
jo
out
sbb
scas
xrelease
sub
pop
shrb
sub
mov
out
out
add
and
in
xor
push
mov
jnp
rcr
mov
lods
cwtl
jb
movsl
add
insl
push
dec
ss
test
int3
sbb
shll
insl
dec
insl
and
rcll
test
inc
mov
mov
add
js
or
test
lea
adc
mov
push
into
jmp
cld
pop
dec
xor
push
sub
pop
dec
repnz
mov
fcmovnb
ss
cmp
or
lret
in
mov
mov
add
andb
cld
lcall
lret
lods
xor
call
jge
mov
and
in
sbb
ret
das
std
icebp
dec
push
mov
lods
sbb
or
mov
cltd
int
jbe
adc
inc
loopne
pop
cli
test
cmp
cmpsb
jmp
pop
xor
pop
cmp
xor
cld
leave
push
or
stc
inc
add
je
test
fisubs
pop
scas
leave
push
imul
or
mov
stc
enter
ret
inc
sub
jg
or
inc
ja
mov
fwait
lods
dec
aas
and
inc
shrb
fsubl
or
rclb
push
jge
cmp
dec
sub
in
xchg
mov
or
std
std
lret
add
and
outsb
and
sub
or
mov
enter
pop
mov
push
icebp
hlt
xchg
fldt
lret
repnz
and
lea
xchg
jbe
or
or
jmp
and
daa
jp
insl
jle
dec
ret
push
inc
pop
sub
xlat
fldenv
pop
movsb
fistpll
notb
xlat
sbb
push
sub
lret
jno
xor
pop
and
push
xchg
jb
or
mov
push
lahf
cmpsl
jecxz
js
aaa
pushw
dec
push
inc
pop
mov
adc
add
jg
xor
daa
shrb
pusha
sub
adc
cld
popf
dec
mov
aas
pop
les
jbe
outsl
mov
pop
pop
in
mov
add
outsl
xabort
mov
push
cmp
dec
push
pop
and
xor
popf
add
enter
push
add
and
dec
jne
gs
xchg
pushf
test
fadd
int3
cmc
cld
in
adc
cmp
sub
pop
inc
dec
jne
gs
xchg
pushf
test
fadd
int3
cmc
cld
in
adc
cmp
sub
pop
inc
dec
jne
gs
xchg
pushf
test
fadd
int3
cmc
cld
in
adc
add
xor
and
dec
jne
lods
xchg
pushf
test
pop
mov
dec
xor
add
adc
call
adc
and
mov
loopne
andb
push
xorb
add
adc
and
and
cmpsb
add
adc
inc
xchg
fsubl
adcb
mov
adc
and
and
jo
sub
pushf
jl
insb
mov
pop
jno
or
pop
ret
imul
sahf
jle
push
fwait
xchg
fstpt
cltd
test
andl
push
inc
cmp
pop
movsl
ss
mov
add
ja
lods
inc
adc
movsl
es
mov
and
int
cmp
xchg
adc
dec
adc
push
adc
push
adc
adc
push
shr
and
loopne
sarb
jge
xchg
cmp
mov
inc
jg
shl
mov
adc
and
xor
ret
mov
sbb
roll
inc
xchg
adc
ds
rorb
xor
jge
jnp
pop
and
clc
jmp
xchg
and
xor
test
loop
repnz
ljmp
push
enter
inc
clc
dec
in
sbb
adc
xor
xchg
arpl
aas
or
aad
aam
fnstenv
jl
dec
mov
mov
nop
inc
xchg
adc
push
push
out
and
lds
xlat
jnp
jge
dec
xorl
xorl
shll
push
mov
adcb
mov
adc
and
xor
ret
adc
and
xor
pusha
mov
inc
adcb
mov
adc
and
xor
ret
and
in
test
lods
pop
cmp
ljmp
push
push
jne
loope
in
sbb
pop
pushf
shrl
out
add
xchg
sub
dec
mov
mov
imul
sub
ret
cmp
sti
mov
add
sahf
je
imul
or
push
xor
sub
xchg
or
or
push
lods
movsb
vprotq
and
test
dec
mov
out
call
fcom
pop
dec
add
std
pop
cmp
out
das
cltd
fcmovbe
mov
shr
and
or
pop
sti
xlat
addr16
ds
aam
xchg
xor
mov
mov
add
loop
or
and
dec
mov
cmp
sub
jmp
pop
xor
mov
imulb
repz
adcb
cmp
ds
mov
fstl
inc
sub
fcmovbe
dec
xchg
or
outsl
arpl
push
pushf
fbstp
xchg
inc
insb
push
lods
call
dec
cmc
mov
fcmovu
stos
fucomip
mov
icebp
test
pop
lock
dec
rcr
mov
lcall
cmp
clc
ret
shll
lock
mov
adc
dec
mov
fdivl
mov
sub
repnz
pop
lcall
stos
ds
jno
push
push
dec
inc
pop
into
les
add
flds
fadd
xor
mov
das
fdivrs
lret
cmp
sbb
aad
push
pop
mov
mov
fistl
sbb
ljmp
loopne
pop
mov
in
in
mov
fwait
jnp
adc
mov
adc
add
int
xchg
decl
pop
or
gs
fcomps
repz
outsb
pop
jns
dec
mov
insl
mov
das
shl
cmp
jbe
and
jnp
sub
or
adc
inc
mov
jns
and
xchg
scas
or
bound
push
sbb
mov
test
push
xorb
mov
inc
lcall
or
stos
fisttpl
mov
icebp
xchg
push
push
iret
mov
push
push
decl
aaa
popw
loopne
fdivs
ja
mov
pop
mov
lahf
fstl
mov
sub
pop
jne
scas
inc
repz
pop
ss
movsl
and
push
mov
fnstcw
test
scas
ds
loopne
xchg
nop
cld
lock
mov
jbe
xor
add
xchg
xor
mov
cmpsl
ret
sub
dec
or
inc
stos
xor
into
or
in
sub
mov
mov
dec
or
test
jmp
cmp
addr16
test
xor
movb
repz
addb
jmp
test
ljmp
loopne
movsl
popf
insl
push
jb
mov
ss
jmp
pop
dec
pop
mov
jp
mov
cmp
adcl
arpl
xchg
test
xor
pop
popf
inc
adc
jp
test
in
fldenv
jnp
lret
lahf
movsl
dec
mov
dec
xchg
dec
repnz
ljmp
loopne
jge
je
into
loopne
mov
lret
mov
loopne
xor
sub
cmp
and
mov
fisttps
addl
aam
mov
cltd
xchg
dec
push
sub
pop
fisubrs
adcl
test
inc
fcompl
in
outsl
dec
jns
ret
dec
cmp
loopne
je
call
mov
push
cmpsl
inc
int3
jge
adc
xchg
ffreep
pop
pop
mov
lock
adc
add
icebp
fnstcw
js
je
pop
lret
cld
and
or
in
outsb
shrb
mov
push
bnd
clc
ljmp
pop
mov
pop
push
dec
mov
int
sub
inc
repz
lret
inc
test
cmp
add
sub
call
and
or
pop
mov
xchg
icebp
stos
ret
lea
test
cli
pop
sub
bound
icebp
and
dec
cmp
inc
or
push
mov
sahf
push
ja
sub
aad
mov
push
adc
icebp
pop
mov
sub
push
mov
fimuls
mov
testb
push
push
mov
inc
lahf
adc
jecxz
or
xchg
mov
pop
lock
pop
into
std
pushf
pop
or
insb
xorl
into
cmp
mov
jmp
js,pt
mov
arpl
add
stos
dec
push
xor
xchg
test
dec
jbe
ja
xchg
inc
orb
das
push
test
mov
idivl
frstor
mov
sub
add
mov
decl
fcmovnu
jge
pop
cmp
push
inc
adc
pop
rcrb
dec
int
inc
mov
sub
pop
cmp
mov
xchg
into
daa
sub
jl
in
hlt
out
dec
xlat
scas
mov
daa
sub
loopne
mov
mov
movsb
rcl
mov
mov
inc
cmp
dec
mov
dec
fldenv
sub
stos
sbbb
cmpsb
xchg
mov
dec
inc
and
orl
cmp
fimuls
jb
fsubrp
push
push
cmp
ljmp
mov
push
adc
mov
dec
cmp
lea
add
inc
call
lret
imul
adc
mov
jle
pop
adc
push
insl
outsb
imul
int3
jo
mov
imul
and
mov
xchg
jle
add
dec
push
lret
jbe
sahf
mov
and
adc
cli
mov
enter
pop
stos
sbb
mov
xchg
mov
jl
pop
sarb
pop
xor
jl
orb
jno
mov
dec
cmc
xor
mov
test
adc
movsl
mov
fcmovnu
xchg
dec
jne
jbe
cmp
add
scas
xor
xchg
xchg
inc
cltd
das
jbe
push
outsl
fwait
inc
cld
cmp
int3
es
push
cmp
stos
sub
push
jl
imul
cmp
cmp
out
inc
iret
repnz
imull
sbb
mov
cmp
jb
and
call
push
cmc
mov
repnz
push
mov
loop
xchg
jne
in
push
push
leave
adc
mov
xchg
adc
int3
bound
push
imull
es
in
pop
mov
sbb
outsb
jmp
dec
pusha
sbb
mov
xchg
jl
xor
lds
arpl
xor
cmpsb
clc
notb
add
push
cmp
and
xor
cwtl
out
notb
mov
aam
or
pop
push
addr16
push
or
out
jp
loope
lea
xchg
dec
mov
xchg
lock
aad
jns
dec
fdiv
scas
adc
push
fwait
jnp
pop
aad
cmp
cmp
pushf
or
ljmp
xchg
mov
cs
loope
insl
or
das
jmp
sub
pop
sub
lret
xchg
sub
push
dec
xor
xorl
test
xlat
inc
into
imul
mov
and
fwait
mov
pop
push
mov
repnz
xchg
rcll
sbb
fsubs
pop
mov
add
xchg
cli
cmpsl
inc
ffree
in
mov
mul
xchg
cld
jne
movsl
lahf
icebp
jb
sahf
loopne
push
cli
nop
pop
jl
pop
fnstsw
or
jae
inc
std
mov
gs
xor
shrb
test
cmp
add
jb
pushf
fdivrl
inc
stc
in
sar
js
adc
loope
pcmpgtd
cmc
lds
xchg
loopne
xchg
xorl
pop
and
shll
inc
call
test
mov
inc
les
lret
mov
mov
mov
dec
mov
xor
fildll
addr16
sbb
sbb
cli
xor
mov
cld
sbb
mov
lret
mov
or
cli
arpl
in
movsl
outsl
iret
subl
adc
jmp
inc
aad
stos
les
cs
cmp
mov
jecxz
inc
ret
xor
outsl
xchg
js
ss
addr16
adc
mov
xor
adc
xchg
stos
xchg
adc
pop
inc
int3
cmpsb
push
dec
insl
pop
gs
pop
shlb
fadds
inc
cmp
cmpsl
jnp
pop
mov
adc
test
insl
insl
insb
push
push
les
js
fsubs
sub
mov
sub
rorl
lret
negl
imul
mov
int
lret
popa
sub
cmp
push
inc
test
out
cmp
pop
stos
aas
dec
sbb
push
int
push
inc
popf
mov
pop
push
or
add
adc
lret
sbb
ffree
push
out
loope
out
jge
lods
pushf
sbb
xchg
adc
bound
mov
and
rcrl
cmp
mov
int
out
in
mov
hlt
inc
xchg
and
das
pop
cmp
ret
xorl
subb
fisubl
stos
lods
jbe
rorl
in
xlat
pop
xchg
lock
push
or
subl
sub
int
pop
sbb
into
ss
jl
lcall
into
sar
int
sbb
and
mov
in
mov
add
or
pop
in
int3
mov
and
sub
pop
mov
sbb
jge
in
or
aaa
arpl
rcll
jecxz
jnp
adc
and
add
negb
sub
cmp
in
dec
or
add
mov
adc
pop
cmp
mov
sub
das
ficompl
fcoml
lcall
inc
xchg
sidtl
mov
aad
aaa
iret
push
xor
adc
repz
dec
fisubrl
loop
xchg
iret
sub
fnstcw
mov
cmp
sub
jb
out
pusha
adc
inc
mov
fistpll
icebp
js
cmpsb
dec
xor
mov
pop
sarl
insl
repz
lock
sti
jge
inc
clc
mov
lahf
mov
aaa
addr16
add
jp
ret
rcr
or
fildl
adc
pop
sbb
sub
repz
nop
sub
jg
test
mov
rcrl
and
push
inc
xchg
loopne
adc
jg
inc
sbb
dec
mov
sbb
js
pop
pop
sub
push
stc
xchg
adc
out
lds
bound
sbb
rorb
cmp
jl
les
inc
xor
loopne
mov
fidivl
pop
loope
sti
repz
push
out
pop
pop
out
movsl
or
in
icebp
xor
jmp
mov
mov
outsl
neg
adc
xor
fcompl
fwait
jecxz
adc
divl
jns
dec
scas
mov
repnz
lret
xor
dec
adcl
stos
xchg
ds
mov
in
ss
mov
insb
in
cltd
outsl
fistpl
por
push
out
pop
push
or
dec
push
add
mov
loope
or
or
cmp
cmp
push
and
pop
dec
add
nop
cs
aas
out
xchg
jmp
aad
ds
icebp
nop
movsl
inc
idivb
loope
iret
cli
sarl
lret
push
adc
test
sbbb
xor
ss
js
mov
mov
orl
mov
rorb
pop
inc
popa
mov
push
xchg
mov
mov
jo
mov
and
xor
iret
inc
mov
mov
xor
dec
cs
inc
jge
lcall
adc
sub
fcompl
sbb
adcl
mov
mov
popf
jbe
push
repnz
sub
cmp
outsb
mov
push
jae
fldt
jo
pop
pushf
mov
jno
jge
jp
rcrl
cmp
in
int
mov
fldpi
and
andb
xlat
or
mov
pop
xchg
sub
add
lods
xchg
sub
loope
notb
repnz
clc
cmp
xchg
xchg
inc
leave
pop
ja
cmp
xchg
cmp
ja
je
shlb
jmp
lcall
dec
ret
pop
mov
fidivrs
and
push
movsl
push
push
nop
cmc
enter
mov
iret
mov
adc
in
data16
or
jns
fstpl
fdivl
sbb
sbb
mov
xor
out
pop
xchg
sub
pop
push
sbb
or
nop
pop
mov
test
ljmp
xchg
cmp
sub
xchg
cmp
bound
add
in
sub
add
push
inc
clc
mov
icebp
sbbb
mov
jle
pusha
fs
cwtl
shl
push
and
in
sbb
mov
ljmp
sub
sbb
cld
je
fsubl
push
adc
fstl
jo
out
sub
cmp
fsubl
adc
call
lea
stos
sahf
jno
dec
dec
imul
mov
dec
sbb
aam
push
dec
mov
mov
mov
jne
mov
inc
adc
mov
ja
xchg
stos
mov
mov
repz
cwtl
test
inc
js
popf
into
dec
mov
mov
inc
xchg
insb
push
fld1
sti
addr16
push
jle
pop
into
jmp
pop
fsubrl
xorl
add
inc
mov
mov
fwait
popf
mov
lcall
and
iret
divb
xchg
mov
lock
loop
notb
inc
or
jae
pop
mov
mov
inc
insb
ja
xor
repz
and
and
pusha
add
mov
imul
or
mov
sub
or
mov
std
inc
filds
push
les
mov
pop
jae
jb
pop
icebp
mov
btr
test
sub
add
test
push
and
lock
adc
jp
xor
adc
mov
into
adc
adc
or
lret
aaa
pop
or
lods
out
mov
stc
push
push
faddp
lret
leave
and
sub
fbstp
fdivl
inc
rcrl
adc
pop
mov
nop
jmp
mov
cltd
mov
xlat
cmpl
fldl
addr16
movnti
adc
mov
mov
outsl
daa
or
push
shl
add
rcrl
lea
das
mov
xor
inc
rclb
outsl
andl
bound
pop
arpl
jmp
jp
or
leave
test
shlb
sub
imul
or
mov
lret
push
fs
insl
bound
insb
loopne
mov
aas
loop
jns
cmc
mov
xchg
in
xchg
dec
mov
xor
push
out
sub
jnp
or
jns
adc
scas
fs
cmp
inc
repnz
push
xchg
cmpsb
repnz
mov
fwait
cltd
cmc
les
idivl
push
adc
movsl
shrl
repz
arpl
ds
pushf
es
xchg
ja
xchg
add
jge
add
xchg
xor
sub
std
out
mov
push
adc
sarl
movl
lods
or
pop
xchg
mov
jb
add
notl
jg
negl
jmp
mov
lods
jg
dec
push
mov
divb
and
or
pop
popf
arpl
mov
lock
decl
dec
or
jns
jns
sbb
repz
fsubrp
sarl
data16
js
inc
jl
pushf
std
dec
jbe
int
jns
inc
sbb
sbb
pop
scas
cvtdq2ps
cmp
in
movsl
lods
arpl
jno
push
pusha
xchg
test
or
add
popa
ja
stos
and
dec
sub
js
jbe
ss
mov
jp
lods
adc
xor
rcl
pushf
out
and
fiaddl
jmp
adc
inc
lea
push
xchg
adc
and
andl
inc
xlat
cmp
jp
jecxz
and
out
clc
outsb
jns
or
fs
pop
mov
or
mov
jno
mov
hlt
mov
dec
cs
sub
mov
and
mov
jmp
jnp
pop
sbbb
mov
jae
mov
pushf
dec
mov
pushf
insl
cmc
outsl
dec
sbb
dec
add
test
mov
jge
inc
ret
push
rcrl
or
jmp
push
lret
iret
mov
test
sub
mov
out
pop
int3
xchg
dec
les
roll
rolb
ss
sbb
adc
lods
xlat
mov
push
jg
hlt
cmp
or
arpl
or
and
sub
leave
mov
stos
bound
push
lahf
xor
mov
add
lret
add
push
jp
push
push
enter
xor
push
repz
lds
enter
shlb
xchg
das
sub
push
push
mov
fcoms
mov
inc
cltd
pop
or
pop
loope
mov
rorl
add
sub
test
ficompl
inc
xchg
nop
out
shrl
arpl
inc
xchg
lret
dec
and
adc
inc
push
pop
out
mov
mov
adc
ret
jmp
sbb
lods
lahf
xor
pusha
sbb
or
fnsave
pop
xor
inc
mov
mov
leave
dec
jecxz
dec
cmp
divb
add
cmpsb
xor
dec
pop
int
loopne
insb
jo
mov
mov
lods
mov
lahf
jb
movsl
cmpsb
add
das
sbb
jle
scas
adc
lcall
lret
pop
fwait
aaa
dec
mov
push
int
sbb
adc
pop
jle
mov
mov
fiaddl
adc
rcrl
mov
jg
test
insb
xor
jle
jae
in
movsb
adc
dec
cmp
mov
sarl
lahf
push
and
adc
mov
mov
mov
std
movl
call
cwtl
out
ret
push
pop
inc
pop
push
jbe
pop
mov
inc
outsl
cmpsb
int3
pusha
subl
dec
adc
mov
mov
sbb
jecxz
inc
cmpsb
jmp
inc
fistl
sub
jecxz
mov
jae
sub
mov
imul
or
or
roll
popa
jle
jb
mov
out
mov
mov
pop
sbb
jg
cwtl
xchg
inc
inc
lds
cmp
sarb
ret
popf
lds
popf
or
and
jle
push
pop
xor
push
ss
fsubl
lea
dec
dec
sub
mov
or
sbb
push
pop
jb
lcall
arpl
jg
pushf
out
cmp
adc
pop
lds
xchg
or
sarl
cmp
push
fidivrs
in
pop
repz
icebp
inc
xchg
and
ljmp
jg
push
cli
inc
mov
pop
pusha
cmp
xchg
out
jb
clc
and
cmpsl
pushf
add
pop
push
dec
mov
jo
lret
push
jns
out
pop
inc
shr
or
jmp
ss
xchg
add
sub
dec
rep
inc
in
repz
push
xchg
mov
arpl
inc
mov
dec
aad
push
cmp
lods
gs
pop
xor
rolb
sahf
mov
jp
je
push
cmp
add
lret
adc
dec
iret
sub
push
js
adc
iret
iret
sbb
mov
outsl
add
xchg
jns
ds
sbb
pushf
pop
jae
push
cwtl
and
addr16
pop
inc
in
and
mov
jge
stos
sub
mov
fistps
xchg
lret
fwait
popf
inc
mov
inc
mov
pop
sbb
cmp
mov
xchg
push
and
mov
clc
lods
fs
push
mov
push
jne
pmulhw
mov
ja
mov
push
stos
int
repnz
dec
popf
movsb
cs
out
mov
stos
jmp
pop
sahf
lahf
lret
and
sub
in
inc
inc
sbb
dec
fsts
pop
fstps
iret
int3
sbb
sub
int
xchg
xor
test
addl
test
shlb
mov
sub
ret
fbstp
mov
ljmp
dec
jl
call
dec
mov
repnz
add
nop
mov
loop
fildll
enter
mov
mov
enter
pop
shll
lahf
lock
sub
dec
sub
psraw
cmc
mov
psubsw
andl
sub
scas
mov
movb
fmuls
xor
adc
push
lcall
dec
push
mov
out
neg
repnz
popf
cld
repnz
cmp
xor
out
lds
push
scas
inc
pop
inc
and
xchg
ljmp
fisttpl
pop
xor
or
sar
lcall
add
in
arpl
sbb
stos
or
lcall
ds
push
push
cltd
imul
ret
into
xor
cs
clc
or
movsl
dec
repnz
pusha
mov
inc
adcb
mov
adc
and
xor
ret
adc
and
xor
pusha
mov
inc
adcb
mov
adc
and
xor
ret
pop
sbbb
adc
clc
mov
pop
push
nop
xchg
mov
add
and
add
xor
loopne
jo
jg
cmp
mov
lcall
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
fstpl
in
scas
xchg
xchg
std
lods
fcomp
enter
dec
aas
insl
das
sbb
jg
outsl
fstpl
in
scas
popf
fisttps
xchg
pop
pop
dec
wbinvd
aas
insl
das
sbb
jg
outsl
fstpl
in
scas
popf
fisttps
out
pop
pop
dec
sub
dec
inc
dec
jne
outsb
sbb
inc
sbb
in
int
mov
lahf
scas
lret
push
fs
cld
xchg
jp
idivb
push
xchg
sbb
xor
jno
or
pusha
sub
negl
stos
imul
sub
dec
loop
sbb
and
aad
test
rorb
pop
dec
daa
addb
test
cli
in
xlat
cwtl
fcmove
stos
mov
popf
into
inc
xchg
lds
pop
loopne
lock
gs
jne
outsb
and
mov
and
push
xchg
xchg
lods
iret
dec
loopne
inc
insl
shl
nop
or
dec
fnstsw
xchg
and
cmc
add
fimuls
mull
stos
or
sub
and
sbb
jg
jp
lahf
int
std
mov
iret
mov
pop
dec
aas
insl
das
sbb
jg
push
fwait
fwait
movsb
into
cwtl
mov
les
sbb
dec
push
push
pop
add
sbb
sub
jns
fdivrp
mov
scas
lods
mov
push
dec
jbe
insb
sub
xor
dec
sub
xchg
int
lret
iret
mov
pop
dec
aas
insl
das
sbb
jg
outsl
fstpl
in
scas
popf
fisttps
out
pop
pop
dec
aas
insl
das
sbb
jg
outsl
fstpl
leave
insl
inc
stos
adc
adc
lods
adc
pop
or
aaa
dec
cmp
int3
push
imul
pop
sti
xor
sbb
mov
push
gs
mov
inc
push
mov
inc
adc
clc
mov
sub
pop
je
jae
in
add
mov
scas
lret
inc
lds
fnclex
or
loope
cmc
jno
sub
loopne
dec
xchg
or
test
into
sub
aam
cli
xor
add
mov
fistps
or
repnz
or
inc
pop
clc
icebp
push
sbb
cmc
pop
fistpl
sbb
cmc
adc
push
cmc
inc
outsl
ljmp
jbe
jecxz
in
mov
mov
lea
mov
test
and
or
xchg
jecxz
cmpsb
scas
repz
ror
std
mov
push
cwtl
xchg
dec
fisttpl
cmp
cmc
pop
adc
lock
push
xor
or
pop
push
daa
and
sub
int
pop
out
jo
int
jmp
adc
push
aaa
mov
int3
pusha
mov
or
test
arpl
sbb
pop
cmp
xchg
call
sub
iret
push
xor
int3
daa
cmp
stos
mov
lock
or
xor
xchg
cmp
pop
cmp
jl
inc
cmp
mov
push
les
mov
pop
dec
xchg
push
insb
xlat
rol
ret
nop
test
adc
call
pop
push
and
popf
hlt
and
sub
cmpsl
ss
xchg
loop
cltd
adcl
mov
adc
and
rcrl
pop
addl
add
dec
jg
nop
fimuls
pop
fcmove
push
inc
dec
fs
push
and
jae
ja
insl
xlat
cmp
mov
and
stc
and
sbb
add
stc
movsl
push
mov
add
adc
cmp
inc
jmp
add
cli
ret
push
cwtl
ja
addl
push
adc
add
in
push
in
push
in
mov
mov
test
push
xorb
xor
lcall
stos
cs
add
test
cmpsb
lret
repz
pushf
pop
ret
push
incb
adcb
adc
fcmovnbe
psrad
dec
jbe
arpl
fcomps
mov
sub
add
imul
mov
dec
orb
mov
cmp
ret
in
shll
sbb
cmpsb
out
imul
imul
add
mov
jb
inc
ljmp
in
adc
adcb
jb
cld
push
cmp
dec
jmp
fdivrl
xchg
imul
fsts
mov
add
sbb
xor
or
xchg
push
lods
daa
scas
call
cmp
pushf
stos
push
in
push
cmp
sub
in
mov
inc
sahf
test
inc
mov
mov
and
sub
jmp
and
sar
test
les
add
js
nop
inc
sub
push
imul
sahf
mov
testb
push
lds
mov
stos
out
loop
test
sahf
xor
and
xchg
stos
lock
adc
xor
pop
xor
movsb
add
adc
jnp
add
stc
sbb
insl
and
inc
stc
dec
mov
enter
leave
push
pop
jo
pop
mov
mov
idivl
out
sbb
pop
sub
adc
mov
fnsave
ret
xchg
scas
jmp
lret
es
dec
loope
roll
jl
add
pop
pusha
into
pop
sbb
push
inc
or
sub
nop
inc
mov
add
ss
mov
stos
repz
lods
inc
aam
mov
loope
out
and
loop
xchg
xchg
icebp
push
fst
add
pusha
add
lret
js
fwait
enter
popl
sub
into
and
jnp
test
adc
lahf
sbb
loop
jp
inc
jbe
sti
pop
sub
ja
adcl
pop
jbe
jae
repz
popf
mov
test
test
push
gs
popa
imulb
scas
hlt
imul
sub
push
mov
jmp
loop
ficoml
in
push
in
into
or
shlb
stos
xchg
std
jb
orb
and
and
xor
or
push
pushf
ds
adcb
out
pushf
cmc
scas
pushf
push
sub
out
and
sub
xchg
in
cmp
add
dec
into
inc
adc
cmp
loopne
les
xchg
dec
or
and
into
loope
mov
mov
sub
inc
xor
jae
cmp
mov
mov
sub
in
mov
cmp
push
mov
and
xor
add
push
adc
mov
js
ja
test
mov
inc
mov
aas
cmp
rolb
mov
cli
test
push
sbb
cltd
and
out
pop
cmp
adc
lret
ficomps
jnp
xchg
popl
lods
mov
lcall
jae
push
outsb
xor
inc
fmuls
sbb
xlat
movsb
pop
nop
sbb
cmp
into
dec
jl
add
std
and
push
pavgw
jg
or
pop
lcall
xchg
or
jl
push
popf
out
cwtl
clc
add
adc
inc
push
dec
lcall
daa
in
xor
xchg
mov
mov
xor
fwait
sbb
jl
dec
dec
xchg
mov
pop
inc
jnp
and
jmp
sub
and
iret
lods
push
lahf
popa
movsb
inc
lds
inc
xchg
inc
call
mov
js
movsb
xchg
sbb
outsb
jo
inc
push
stos
jmp
push
or
mov
fists
pop
and
sbb
xchg
push
fldenv
jmp
loopne
pop
int
mov
cli
mov
lret
xor
fdivl
sbb
cmpsb
dec
mov
push
cmp
sti
push
cmpsb
dec
push
sbb
hlt
iret
js
nop
sarb
fldenv
inc
mov
xchg
rcl
adc
pushf
jae
lret
add
test
nop
hlt
jle
pop
add
sti
mov
addl
mov
add
sub
loopne
lds
sub
ss
sub
mov
or
int3
gs
sbb
das
push
adc
inc
inc
dec
cld
loop
push
stos
fcomip
push
cmpsl
xor
shrl
data16
or
push
xor
popa
cmc
mov
out
aam
data16
out
cltd
mov
cmc
dec
pop
push
repnz
faddl
xor
push
inc
or
pop
enter
fcmovu
fabs
xchg
xchg
out
jge
insb
mov
xchg
int
mov
mov
pop
jno
pop
and
add
mov
adc
cs
fmull
rolb
je
add
add
out
icebp
push
inc
insb
and
lret
lods
sub
jno
mov
mov
scas
outsl
adc
xchg
lret
mov
sbb
and
sub
pop
sbb
dec
push
pop
or
mov
add
push
cmpsb
cmp
jl
int
adcb
ljmp
movsl
and
xchg
sti
xor
adc
lods
mov
enter
cmpsb
cld
mov
sti
test
sahf
dec
and
mov
and
sbb
dec
imul
loope
push
clc
mov
cmpsb
mov
shll
divw
dec
add
mov
mov
stos
jecxz
adc
fstpl
in
es
xor
out
notl
mov
rcll
push
stos
int
daa
cs
sbb
xchg
or
pop
mov
sti
orl
mov
jl
lods
enter
xlat
xor
pop
adc
out
test
add
pop
mov
xchg
dec
fisubs
in
xlat
fidivrs
aam
js
jmp
and
xchg
daa
mov
loope
stc
cmp
mov
sbb
add
mov
xor
push
mov
push
push
cld
dec
inc
jnp
push
daa
ss
mov
pop
mov
and
xchg
icebp
test
es
cmp
insb
rorl
jge
cmpsl
leave
mov
in
loop
fs
scas
es
mov
lret
addr16
and
pop
outsl
rcl
fidivs
aas
mov
ficoml
faddp
or
sbb
mov
pop
mov
xor
cmp
and
jbe
loop
aas
out
lret
loope
mov
cmpsb
jne
movsb
xor
sbb
mov
hlt
into
decl
iret
mov
adc
jne
int
les
jle
dec
movsb
sub
out
lea
pop
mov
shl
nop
sbb
mov
xchg
add
test
leave
dec
xor
mov
insb
mov
sbb
in
out
pop
out
fwait
jns
mov
dec
adc
lds
cmp
sbb
popf
pop
pushf
xor
fildl
push
sbb
nop
ret
or
mov
lea
dec
xor
mov
int
sahf
stos
jl
enter
std
jo
dec
sub
call
pop
and
cmc
adc
sub
leave
cmpsl
ljmp
insb
pop
rol
outsb
xor
repz
jmp
into
xor
movsb
mov
out
enter
cmp
xor
inc
popa
jmp
lea
fsubs
mov
jne
incb
popa
adc
mov
pop
push
cmp
pop
and
sub
dec
cmpsl
adc
neg
fucomi
cwtl
mov
cli
push
xor
adc
inc
mov
ficomps
rcr
inc
std
in
fisubrl
or
push
fsubrl
enter
dec
xor
add
or
cmpsl
in
sub
in
xchg
dec
ja
in
fs
lcall
or
jae
insl
lea
adc
in
dec
and
add
and
xchg
iret
adc
or
lret
jnp
push
aad
ja
sbb
pusha
clc
push
arpl
cmpsl
js
mov
cmp
mov
sbb
stos
jmp
stc
or
and
mov
mov
mov
adc
add
test
rcrl
gs
mov
sub
pop
sbb
pop
pop
testl
push
push
into
cld
adc
loope
pop
push
movsl
push
jg
xchg
jbe
sub
adc
daa
fsts
out
cmpsb
call
cmp
and
lods
adc
mov
dec
setne
stos
fadds
aas
mov
call
shlb
sub
mov
lret
dec
fidivrs
inc
rep
add
mull
lods
mov
imul
adc
cli
repz
pop
xor
and
iret
dec
xor
push
add
inc
push
out
js
fcmovu
xor
or
sar
imul
mov
xchg
mov
sahf
lahf
inc
dec
inc
jne
xchg
sub
pop
xor
lret
fcompl
push
sbb
cmpsb
sub
xchg
mov
xor
test
xor
jp
hlt
dec
popa
lods
in
push
cld
sub
frstor
lods
testb
mov
jp
jnp
xlat
push
subl
or
cwtl
pop
dec
enter
xchg
std
jbe
cmp
push
jl
std
mov
subb
mov
adc
jns
sahf
mov
mov
inc
movsl
dec
pop
sub
lret
test
xchg
lea
lret
jb
mov
std
popf
xor
or
xchg
les
adc
sbb
lods
insb
cmp
call
add
xchg
or
or
mov
lods
leave
stos
pushf
loop
ret
popa
ljmp
out
fistpl
add
pminsw
sub
mov
imul
xchg
das
pop
mov
and
shlb
xchg
push
adc
or
add
test
test
jl
pushf
ds
out
lods
fxtract
inc
xor
push
gs
je
fisttpll
gs
pop
pop
adc
jo
sbb
sbb
sarl
xchg
jle
ds
mov
repz
xchg
pop
ss
mov
in
leave
xchg
jbe
aad
cmp
pop
xchg
out
pop
inc
cmpsb
ret
pop
cmpsl
push
dec
outsb
outsb
aam
mov
inc
lret
mov
out
rol
fidivl
std
xor
sahf
das
shll
sti
fidivrl
fstpt
loop
dec
mov
add
push
cmp
outsl
sub
orl
int3
push
nop
iret
in
lods
out
rcrl
mov
and
test
adc
out
xor
jmp
pop
dec
jae
je
inc
sub
push
xchg
mov
sub
mov
mov
fxch
jnp
arpl
sub
outsb
test
mov
cmc
inc
and
xchg
pop
xchg
adc
les
aad
les
xor
shll
cltd
xchg
int
or
dec
mov
cmpsb
std
sbb
sahf
test
aam
fsts
push
xorb
ret
xchg
jmp
iret
sub
in
sub
adc
rcrl
xor
jp
cmp
in
stos
out
mov
mov
call
lock
jnp
xchg
cwtl
cmc
fs
push
xor
aam
lcall
push
pop
push
mov
mov
jb
mov
mov
mov
movsb
dec
rcll
pop
add
int3
scas
lret
cmp
cmp
cmp
cmp
js
into
xchg
aam
lods
jno
filds
sbb
ljmp
cmp
dec
aas
mov
pop
xor
orb
int
add
enter
in
mov
mov
pop
xchg
arpl
fisubl
sbbl
jne
mov
and
or
adc
lret
cmp
sub
xchg
adc
add
push
imul
loop
push
jecxz
out
and
jns
pusha
sbb
xchg
jle
xor
sti
push
mov
add
mov
sbbb
shrb
push
repz
enter
and
mov
and
push
insl
add
pop
popa
xchg
psubw
jo
outsl
hlt
add
pop
jbe
out
inc
adc
or
pop
repnz
icebp
sub
and
cmp
and
dec
xchg
fmul
bound
cld
enter
inc
dec
enter
fldenv
add
pop
mov
roll
lock
jp
in
sahf
ud2
xorb
mov
push
sbbl
adc
stc
adc
jl
sbb
mov
adc
cmpsb
imul
push
add
jns
mov
loope
xchg
dec
push
jns
pop
insb
frstor
add
and
push
out
or
pop
dec
sub
and
or
lock
fbstp
enter
mov
pop
sub
adc
jb
cs
insl
jle
push
ss
imul
xchg
jg
cmpsb
fwait
ret
insb
sbbl
jge
loopne
push
sbb
jo
inc
negb
lahf
push
push
cmp
loop
call
add
outsl
mov
imul
add
popa
mov
hlt
sbb
adc
enter
in
sbb
mov
fidivrl
ja
enter
sub
push
xchg
fadds
xor
fcmovb
xor
inc
sub
in
mov
lods
stos
mov
push
leave
jecxz
inc
subb
xchg
dec
outsb
pop
push
int3
aaa
pop
mov
dec
sahf
mov
into
js
mov
xchg
mov
xchg
cmpsl
sub
clc
pop
sbb
out
mov
jbe
test
mov
das
mov
mov
ss
cmpl
xchg
cmp
jge
mov
out
dec
pop
sbb
jg
push
clc
imul
cmpb
jmp
inc
fwait
inc
nop
add
rcl
jecxz
das
aam
fstl
aas
nop
test
pop
ret
es
and
add
shr
mov
push
in
inc
loopne
dec
push
cmp
xchg
in
push
imul
push
mov
nop
xchg
adc
pushf
hlt
stos
cmp
lahf
maskmovq
notl
fbstp
imul
mov
and
stc
cld
insl
pusha
cmp
adc
out
out
fstpt
mov
test
pop
sbb
ss
gs
nop
fs
out
cmpb
cmp
fstl
inc
out
dec
xchg
pop
jge
xchg
xor
lea
fs
ja
xchg
lds
and
rcll
xor
jecxz
je
jge
push
in
add
add
inc
cmp
add
test
lock
and
xor
cmpb
cmp
std
ds
push
fldl
push
loop
cmpsl
sub
aas
cli
xchg
xchg
adc
jae
pop
push
not
or
es
push
xchg
imul
aas
mov
repz
cmp
scas
and
xchg
cmp
xor
mov
pop
icebp
inc
add
fcomps
dec
adc
jnp
or
push
movsb
sub
jl
mov
div
fidivrl
insb
lds
mov
inc
push
mov
test
pushf
sub
insb
fisttpll
sub
adc
data16
scas
jmp
push
out
faddp
pusha
dec
fucomp
pop
inc
dec
ret
cmpsl
shll
xor
into
repnz
mov
mov
test
imul
stc
mov
cmp
scas
cmp
mov
jmp
pop
adc
push
mov
cmpsl
and
push
lock
int
push
fs
daa
mov
jbe
gs
xchg
or
pop
mov
fbstp
pop
inc
dec
adc
pop
lret
insb
ljmp
adc
push
jmp
stos
in
in
mov
dec
int3
incl
in
out
and
outsl
push
jne
mov
leave
push
rcl
dec
leave
adc
dec
xchg
mov
ficoms
and
dec
insl
js
or
cmpl
rclb
and
pusha
repz
rorb
pop
test
mov
mov
jle
xlat
dec
jns
xchg
sub
xchg
aas
dec
test
or
out
push
iret
mov
sub
in
dec
lcall
jns
sbb
and
push
sahf
adc
pop
mov
popa
push
xor
out
mov
nop
pop
ffree
inc
or
jmp
enter
inc
hlt
into
mov
fs
or
xchg
adcb
out
rclb
xchg
pop
pusha
pop
mov
lods
dec
sbbb
cs
fisubrs
inc
mov
rolb
push
push
outsb
jp
mov
xor
pop
shlb
rorb
lds
lods
sub
rcrb
rcl
and
sbb
ss
adc
lcall
repz
fs
data16
loop
dec
test
cwtl
lahf
sbb
lds
mov
inc
pop
jnp
stc
push
push
repnz
and
mov
insl
cmp
adc
push
pop
lret
int3
mov
dec
xchg
lcall
movsl
mov
test
cmp
repnz
out
out
jp
inc
jge
mov
test
jbe
mov
imul
je
jb
insb
pop
aam
xor
mov
hlt
add
inc
incl
stc
movsl
cmp
hlt
popf
pop
int
mov
xor
pop
jae
jbe
test
sub
dec
mov
mov
jmp
cmp
xchg
testb
sbb
test
push
cld
add
sbb
int3
jb
xchg
mov
inc
push
icebp
cmp
out
fbstp
out
outsl
sub
test
mov
fisubrl
int
xor
sbb
inc
and
and
dec
pusha
sbb
shll
pusha
jge
mov
fs
adc
test
add
add
and
nop
orb
gs
ljmp
push
mov
xor
popa
fidivrs
mov
pop
xchg
fdivrs
in
repnz
mov
hlt
test
mov
fsubs
cmp
call
loope
dec
test
or
ja
dec
sub
sub
in
jbe
icebp
jge
sbb
aam
push
addr16
rorl
aas
push
lret
xor
test
sahf
xchg
and
add
in
jl
aas
cmp
cli
lret
inc
in
cltd
dec
mov
pop
sbb
aad
aaa
mov
test
repnz
lds
xchg
push
dec
jle
sub
lods
pop
addr16
scas
fnstcw
jp
mov
xchg
in
das
in
adc
arpl
enter
int
and
test
mov
rclb
test
jo
fiaddl
std
mov
movsb
xchg
add
adc
into
test
icebp
sti
sbb
cli
inc
das
cwtl
aad
xchg
xchg
xchg
xor
cmp
fdivr
adc
adc
nop
jno
mov
mov
mov
rcll
mov
jg
test
inc
or
pop
test
sbb
rcrl
jge
insb
cmpb
pop
lds
insb
inc
dec
mov
lods
xlat
sbb
scas
popf
fisttps
out
pop
pop
dec
aas
insl
das
sbb
jg
outsl
fstpl
in
scas
popf
fisttps
out
pop
pop
dec
aas
insl
das
sbb
jg
outsl
fstpl
in
scas
popf
fisttps
out
pop
pop
dec
aas
insl
das
sbb
jg
outsl
fstpl
in
scas
popf
fisttps
out
pop
pop
dec
movsl
xlat
aas
insl
pop
push
test
ret
and
adc
or
push
pop
mov
or
jns
imul
mov
test
jae
inc
jmp
rcrl
jmp
pop
jecxz
repz
imul
mov
arpl
jae
inc
push
sbb
add
jbe
add
or
mov
movl
cltd
adc
cmp
lds
sub
lret
adc
gs
mov
inc
and
rorb
dec
movb
pop
xchg
xchg
in
adc
mov
lock
imul
enter
icebp
mov
imul
xor
cmp
pop
dec
ss
mov
iret
and
cld
fdivl
int3
jmp
fistpll
jl
ret
fmull
sbbb
jbe
loopne
fucomp
mov
jmpw
rclb
pop
mul
sub
sub
repz
pmuludq
pop
jns
mov
mulb
ljmp
ret
divb
cltd
negb
cltd
xlat
imul
mov
arpl
jae
inc
lock
add
xor
jns
jo
ljmp
jp
shld
test
insl
or
dec
jmp
aad
subb
cltd
and
popa
lods
sub
push
sbb
or
jl
pop
cld
cmp
cmp
lock
pusha
fsubrl
jbe
arpl
jae
inc
jmp
mov
subl
pop
jecxz
repz
imul
mov
arpl
jae
inc
jmp
mov
subl
pop
jecxz
repz
imul
loopne
rcll
cmpb
cli
sbb
mov
push
ss
aam
cltd
xor
adcl
hlt
jg
enter
jge
mov
js
jnp
lock
mov
or
inc
add
fsubrl
jp
and
push
shr
sbb
xlat
scas
scas
sbb
divl
adc
push
and
sub
aad
pop
iret
and
cmp
jae
or
movsb
cmp
push
push
adc
push
aad
pop
das
mov
push
aas
imul
popa
cmpsb
adc
jo
jp
mov
cli
aam
sbb
xchg
mov
aas
sub
and
cltd
movsb
iret
sbb
dec
orb
mov
lods
ret
outsb
packssdw
aaa
sbb
sub
int3
xchg
push
fcomp
insb
adc
and
addr16
push
add
pushf
sub
int3
loope
daa
sub
addb
jmp
fistps
push
push
and
cmpsb
mov
test
bound
jg
jmp
ret
imul
fildl
in
mov
push
int3
cmpsl
stos
bound
xchg
mov
aam
das
push
daa
xor
pop
mov
js
lods
std
sub
outsb
adc
jnp
xor
lret
cwtl
popf
mov
push
notb
jecxz
dec
popf
es
sbb
cmp
shlb
add
rolb
sbb
adc
sub
xchg
iret
xorb
mov
mov
push
mov
sar
push
and
sub
push
mov
ret
cld
arpl
or
dec
js
enter
sar
mov
mov
imul
ja
loop
jle
xchg
adc
dec
and
mov
std
pop
mov
mov
sbbl
jns
push
dec
xor
dec
sub
popf
stos
rolb
pop
dec
push
les
or
inc
lods
test
push
adc
mov
mov
jo
mov
cmp
cmp
sub
pusha
leave
inc
add
jnp
xchg
sub
sub
xor
mov
xchg
data16
vpackuswb
jmp
sub
inc
or
cmp
or
aad
or
popa
js
call
movl
scas
add
add
mov
add
jb
rolb
pop
js
xor
mov
inc
xchg
scas
dec
jp
dec
call
out
fwait
repnz
pop
mulb
push
mov
loop
aaa
push
mov
dec
sub
mov
cmc
dec
inc
inc
sub
ljmp
or
and
mov
hlt
inc
in
jle
out
sahf
lods
loop
push
cld
cmp
nop
mov
cmp
jmp
cmpsl
push
push
scas
sub
xchg
sub
add
pop
sub
or
lds
xchg
add
cmp
xchg
test
sahf
mov
inc
add
stc
mov
inc
aaa
pop
add
mov
mov
and
sbb
inc
stos
and
sub
test
in
in
out
je
addr16
enter
xor
xorb
xchg
inc
and
mov
jae
dec
fistpll
add
xchg
cld
outsl
lea
int
fdivrp
hlt
xorl
outsl
hlt
xor
jge
insb
fists
adc
xchg
hlt
scas
adc
sbb
into
icebp
fs
mul
ja
inc
jl
push
loopne
idiv
mov
movsl
popa
sbb
mov
mov
mov
loop
add
push
pop
movsb
adc
int
test
arpl
jo
ljmp
cmp
js
jmp
in
fwait
daa
stc
mov
outsl
mov
enter
shr
xlat
lods
push
sbb
shr
imul
repz
ja
or
scas
push
xchg
es
stc
jnp
jmp
and
mov
popa
mov
nop
lods
dec
jp
testb
add
fsubrl
movsl
stc
mov
test
cmp
std
dec
fs
loopne
pop
jae
mov
inc
sbbb
inc
scas
add
stos
js
mov
lds
dec
sub
xor
or
test
mov
or
mov
gs
repnz
cli
lds
loope
subl
and
aaa
pushl
xor
pop
lock
mov
fstps
sub
jb
in
and
xor
andb
ss
pop
sbb
daa
xchg
inc
ja
adc
cltd
outsl
xchg
lock
adc
mov
cltd
adc
adc
jle
pop
ja
mov
dec
ds
cmpsb
frstor
add
roll
dec
cmp
test
adc
pop
loopne
loopne
inc
add
scas
pop
fs
and
ret
cli
mov
and
xchg
pusha
add
xchg
sbb
cwtl
fildl
dec
push
jnp
stc
dec
mov
cwtl
loopne
jle
int
icebp
push
cltd
cmp
xchg
jno
jp
lea
hlt
dec
jo
and
loop
sarl
enter
mov
in
fisubl
negl
int
jle
jl
scas
dec
jno
or
xchg
push
insl
test
adc
cmp
popl
sbb
push
aaa
gs
push
cli
cmpsb
insl
cmpsl
jo
or
cltd
bound
add
and
mov
push
add
das
mov
adc
ficompl
sbb
push
mov
addr16
push
mov
fsub
lret
push
pop
push
repz
or
push
stos
dec
nop
push
pop
or
out
xlat
mov
leave
int
mov
cld
push
jno
adc
lahf
in
jge
push
add
icebp
dec
outsl
cmp
shrl
fimuls
dec
in
cmp
mov
cltd
jecxz
add
or
loopne
gs
xchg
mov
ds
adc
mov
sbb
push
mov
aas
push
jg
push
ficoml
fldt
ffree
mov
push
pop
add
rep
jbe
out
dec
cmpsb
push
and
jb
enter
ficomps
sti
repz
sub
jle
adc
jle
loopne
stc
adc
ret
lods
sbb
dec
cmc
lods
jmp
popa
repnz
sub
pop
gs
imulb
test
repz
and
cwtl
ds
push
and
cli
repnz
movsb
and
fidivl
xchg
loope
jecxz
pop
pop
loop
cmp
addl
adc
stc
cmc
out
jg
lods
sub
nop
mov
cmp
je
mov
push
sti
cmp
lods
pushf
inc
mov
loope
adc
cmp
jmp
mov
clc
scas
iret
iret
ficoml
mov
inc
push
xor
movsl
shll
cmp
fidivrs
push
in
stos
ljmp
jg
fwait
or
je
sbbl
std
hlt
or
xor
jg
pop
andb
xor
in
movsb
xchg
cmp
lret
mov
icebp
negl
jae
pop
push
inc
sub
adc
imul
xor
and
les
and
lea
fwait
inc
dec
pop
jp
dec
fucomi
push
dec
xchg
add
fstpl
add
pop
rorl
adc
inc
cli
mov
in
adc
dec
jo
xor
rorb
negl
rolb
xlat
icebp
sbb
sahf
in
les
adc
andb
sti
test
ja
push
mov
adc
out
dec
jl
rolb
outsb
pushf
leave
nop
inc
adc
mov
cmp
sarl
mov
in
mov
cmpb
or
dec
inc
mov
push
adc
adc
adc
pop
ljmp
mov
jle
and
loop
ficomps
sahf
call
mov
cwtl
outsl
jmp
adc
bound
add
push
adc
movsb
mov
jl
gs
push
lahf
inc
vxorps
iret
add
and
sbb
dec
adcl
stos
test
lgs
cmp
out
shrb
repnz
fistps
mov
insb
mov
jnp
pop
jae
pop
popf
mov
movsb
jmp
inc
lock
push
push
xor
and
movb
jmp
iret
in
mov
rorb
mov
les
repz
lcall
test
push
dec
cmpsb
int3
mov
mov
fldt
cltd
movsb
sbb
iret
lret
lahf
jo
xor
sbb
clc
pop
pop
aad
aaa
clc
pop
mov
insl
add
xor
data16
lea
lds
pop
shrb
dec
incb
aaa
loop
xchg
xlat
lret
dec
arpl
stos
lock
inc
mov
in
clc
sub
xchg
pop
and
inc
nop
loopne
mov
pop
mov
jge
mov
mov
mov
fsubl
jae
cltd
mov
sahf
faddl
mov
dec
enter
addr16
js
mov
out
iret
orb
xor
jae
ret
dec
out
ret
pop
cmpsb
daa
pop
cmpsb
pushf
mov
jg
daa
cld
movsl
and
sarb
inc
jns
aaa
jle
adc
xor
cvtps2pi
dec
xchg
fistpll
pop
pop
mov
data16
pop
mov
hlt
xchg
shrb
shrb
rol
outsb
scas
aam
hlt
pop
cmp
lcall
stos
inc
and
mov
rorb
or
aam
xchg
pop
mov
cmp
jae
mov
fidivs
mov
iret
hlt
dec
sub
fbld
pop
repz
insb
fstpt
scas
fcoms
insl
pop
lahf
neg
lods
jns
loope
adc
xor
shlb
cmp
and
mov
xorl
mov
out
mov
ljmp
lods
add
jnp
cmpl
inc
mov
addb
jno
sbb
add
inc
sbb
test
mov
xor
int
lods
add
aam
int
or
mov
fistpl
mov
gs
push
fstpt
insl
push
stc
mov
mov
push
aam
cmp
xor
dec
scas
xor
dec
decb
cmp
mov
add
dec
popf
adcb
mov
mov
lret
inc
ja
stos
fcoms
push
mov
pop
adc
inc
mov
push
sahf
add
pop
add
in
adc
adc
insl
add
and
adc
mov
test
test
and
fsubs
dec
and
lret
xorb
push
ss
andb
fisttps
fs
pop
mov
jae
or
mov
jmp
imul
inc
jl
outsl
pop
adc
mov
push
testb
adc
jecxz
pop
jmp
add
push
outsl
xor
testb
fsts
jl
sahf
cmpsl
mov
insb
gs
pop
aas
dec
test
iret
pop
cmp
in
mov
pop
test
jmp
outsl
test
ljmp
add
lods
dec
lds
stos
sub
mov
stc
lods
cmp
loope
mov
add
push
add
adc
imul
adc
repz
mov
or
shrb
or
ljmp
push
pop
xor
sbb
iret
mov
sub
lcall
dec
pop
mov
mov
sti
test
mov
inc
inc
aas
xchg
jbe
adc
jae
mov
sbb
sbb
imul
lods
sub
outsl
cmovne
in
cli
fistpl
arpl
fdivrs
cmp
mov
mov
and
and
lcall
fsubrs
xorb
iret
rcr
jmp
in
adc
shrb
sbb
sub
sarl
fimuls
ljmp
jecxz
rcrl
dec
ljmp
mov
pop
adc
lods
cli
dec
xchg
mov
aam
mov
push
iret
xchg
pop
xchg
dec
lock
int3
lds
mov
jbe
xlat
ret
and
enter
inc
jae
xor
jo
cs
mov
loop
repnz
or
gs
and
cmp
movsb
pop
sub
das
jno
pop
and
cltd
aad
mov
insl
pop
roll
or
inc
lcall
mov
aam
jge
and
xchg
mov
dec
sub
fwait
shlb
loopne
and
repz
push
mov
inc
cmp
sbb
popf
push
sub
pop
dec
mov
into
lock
jne
cli
in
in
jl
pushf
mov
mov
pusha
into
add
pushf
lods
stc
imul
pop
out
js
mov
pop
xor
lret
jle
pop
xchg
lea
or
mov
shlb
pop
sbb
in
test
jnp
cmp
or
pop
test
mov
test
mov
cs
jno
adc
call
add
mov
adc
or
js
in
push
out
mov
add
dec
and
pop
dec
out
lock
scas
adcb
imul
inc
mov
xchg
sti
aam
outsl
enter
js
notb
jmp
push
xchg
adc
or
cmpb
leave
xchg
push
or
es
insb
fdiv
jb
mov
or
out
push
scas
lret
xchg
dec
jecxz
inc
mov
dec
and
hlt
dec
xchg
or
andnps
lret
movsb
push
and
cli
push
lods
dec
mov
xchg
inc
stos
ret
inc
push
inc
aad
mov
fwait
popf
int3
testb
jbe
mov
add
ss
jno
sbb
lahf
loop
jno
jns
push
jno
mov
sub
dec
loopne
dec
fdivl
shlb
mov
in
xor
mulb
bound
mov
bound
pop
xchg
inc
pop
into
mov
and
and
cwtl
in
test
scas
stos
lcall
aad
adc
nop
add
repz
jbe
and
xchg
arpl
stos
add
inc
call
cmpsb
push
stos
in
inc
popa
outsb
xchg
mov
adc
fadds
stc
js
pop
imul
pop
dec
jge
jne
cwtl
stc
test
cmp
add
and
gs
or
cmp
inc
aad
xchg
pop
jae
fdiv
aaa
das
je
pushf
stos
popf
test
inc
adc
cmp
dec
mov
loopne
add
aaa
insb
les
scas
nop
add
or
mov
outsl
lods
mov
popf
add
ljmp
inc
xor
sbb
mov
test
pop
cmp
mov
xor
les
subb
push
aas
pop
mov
mov
pop
cmp
lea
mov
sbb
dec
daa
stos
sbb
aas
stos
mov
or
loopne
inc
mov
push
dec
insb
repz
inc
adc
mov
bound
ja
xor
push
jmp
mov
xchg
add
and
lcall
jmp
sub
imul
lds
push
std
call
add
lds
clc
cltd
int
daa
jl
add
xor
movsb
push
mov
or
adc
mov
dec
cs
and
mov
inc
mov
movsl
and
jns
jnp
fdivrl
mov
mov
mov
faddl
lods
mov
pop
cmp
xchg
xor
mov
xchg
jmp
sub
sub
mov
in
dec
das
jecxz
cmp
pusha
xchg
push
and
popf
cmpsb
scas
pop
pop
leave
pop
mov
imul
lahf
sarl
movl
mov
jg
xchg
sbb
lds
mov
cmp
mov
mov
movsl
inc
mov
push
jg
into
mov
mov
cmp
add
mov
mov
shlb
sub
lret
dec
aam
fiaddl
cmp
jle
in
js
lods
iret
mov
in
jbe
lods
pop
enter
mov
into
xchg
add
cmpsb
xchg
xor
enter
sub
mov
and
sub
jl
jle
je
add
int3
cmp
outsl
roll
sarb
pop
xchg
mov
das
shll
pop
test
movsl
lds
adc
aas
js
cltd
out
add
xchg
cmp
icebp
loopne
sbb
mov
mov
mov
mov
sar
pop
dec
fildl
jns
xor
inc
pop
mov
cli
fdiv
aad
shlb
js
outsb
out
mov
inc
xor
pop
cmp
mov
cli
or
int3
daa
mov
xor
out
lcall
jp
xor
dec
mov
pop
lock
repnz
je
add
jmp
xchg
pusha
mov
pop
xchg
rcrb
jmp
dec
sbb
jl
lds
sbb
pop
stos
icebp
iret
scas
push
mov
or
ds
lods
inc
sub
dec
pushf
mov
rolb
push
sti
prefetchnta
push
and
pop
orl
push
push
cmp
mov
mov
movsb
out
or
pop
jne
xchg
stos
push
sub
xchg
mov
jge
insl
mov
or
ljmp
adc
shll
jecxz
push
aad
pop
sub
add
scas
lods
sbb
mov
cmp
repnz
mov
and
ret
and
and
inc
push
push
inc
pop
dec
aad
xchg
xor
stos
ja
sub
addb
push
mov
lea
push
jb
cmp
sbbb
lea
sbb
inc
mov
inc
push
cmp
sub
mov
and
add
jecxz
sbb
pop
and
lahf
in
xor
fbstp
jo
pop
sub
sbb
ficoms
or
push
mov
xlat
scas
ret
fisttps
mov
mov
out
mov
mov
out
and
jecxz
cltd
mov
xchg
jno
sbb
rolw
add
stos
ljmp
or
mov
loopne
sub
and
push
jno
and
popa
fimull
xlat
fwait
add
fisubs
xchg
cmp
adc
xchg
jns
js
cmp
add
mov
xchg
imul
lahf
mov
scas
popf
mov
push
loope
ljmp
sub
jp
imul
in
and
cmp
sbb
nop
daa
adcb
loop
insb
lds
pop
int
mov
popa
and
cmp
xchg
mov
add
and
sub
outsb
mov
mov
or
pusha
push
push
sbb
push
cwtl
xor
enter
daa
sbb
lods
jle
int3
ja
pop
test
aam
out
pushf
loop
mov
mov
sub
add
pop
inc
mov
sub
pop
add
mov
aad
jp
push
fcmove
inc
push
inc
mov
add
sbb
push
lcall
or
loopne
add
mov
mov
xor
shll
push
imul
imul
lea
lds
gs
xor
xchg
pop
dec
shr
adc
push
clc
popa
call
cld
mov
add
jbe
push
mov
dec
daa
dec
and
fdivl
sti
movsb
add
jecxz
pop
fdiv
movsb
dec
cmp
sahf
jle
xor
mov
adc
mov
loope
sub
shll
adc
ret
sti
pusha
fistl
les
xchg
jns
imul
pop
insb
xchg
stc
pop
pushf
adc
dec
xchg
sub
out
in
in
out
repz
pop
lds
sahf
enter
sbb
lea
jno
gs
xchg
push
and
xchg
mov
sub
leave
sti
scas
jecxz
out
test
mov
iret
sahf
shlb
adc
fstpt
call
int
jns
in
out
pop
mov
movsl
mov
mov
sbb
out
pop
repnz
stc
movsb
test
rcrb
pop
icebp
jmp
test
pop
inc
or
jne
movaps
dec
outsl
out
push
inc
sbb
add
fwait
sub
insl
pop
faddl
icebp
add
and
ficoml
fxch
jmp
enter
xchg
add
mov
dec
pop
add
sub
addr16
adc
push
dec
mov
mov
sahf
jbe
daa
imul
inc
out
xchg
rcrl
ds
and
and
out
add
and
dec
push
into
or
inc
js
inc
es
cli
insb
jle
sub
and
addr16
std
mov
cmp
clc
iret
adc
mov
jnp
test
pop
inc
inc
xchg
add
popf
mov
hlt
mull
lds
xchg
mov
js
clc
jae
mov
mov
jnp
in
mov
pop
dec
cmp
fisttps
cmp
in
xchg
imul
push
ret
and
sbbl
loop
push
bound
push
add
jne
in
and
mov
adc
adc
into
idivb
cmpsl
jge
or
jnp
stc
add
fimull
mov
sbb
test
xchg
or
cmpsb
pusha
jle
pushf
repnz
push
inc
xor
test
jae
inc
jmp
mov
subl
pop
jecxz
repz
imul
mov
arpl
jae
inc
jmp
mov
subl
pop
jecxz
repz
imul
mov
arpl
repz
inc
jmp
mov
subl
pop
jecxz
repz
pop
shrl
add
jae
inc
imul
subl
cs
xchg
sub
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lods
mov
mov
in
fwait
mov
xor
and
sbb
insb
jo
and
inc
lods
mov
mov
in
lock
loopne
rcr
shrb
and
sbb
insb
jo
pusha
dec
push
pop
inc
lods
mov
mov
in
lock
loopne
rcr
shrb
jl
pusha
jns
insb
and
add
xor
fst
mov
cmc
insb
jecxz
stos
and
rcll
in
pop
jne
adc
push
loope
idivl
inc
mov
popa
jg
or
pop
xor
xor
nop
lea
add
mov
jmp
push
or
jbe
addr16
mov
xlat
addl
sub
sbb
cltd
shrb
push
iret
scas
pop
inc
lods
dec
fwait
mov
test
add
xchg
cmp
nop
faddl
mov
in
out
jecxz
cmp
jl
mov
xlat
popa
ljmp
popa
jge
lock
xor
push
xchg
sub
in
xchg
xor
cld
and
nop
xor
arpl
cmp
push
iret
jns
cld
adc
add
inc
pop
inc
outsl
mov
mov
in
lock
loopne
rcr
shrb
and
sbb
insb
jo
pusha
dec
push
pop
push
leave
fstp
jae
fcmovb
mov
pop
mov
pop
pop
dec
jg
pop
outsb
ljmp
and
out
nop
fst
mov
cltd
rcrb
dec
jno
sbb
fwait
pop
sbb
and
loopne
aam
in
hlt
test
rcr
shrb
and
sbb
insb
jo
pusha
dec
push
pop
inc
lods
mov
mov
in
lock
loopne
rcr
shrb
and
sbb
insb
jo
pusha
dec
push
pop
inc
lods
mov
mov
push
cmp
rcrl
mov
hlt
or
xchg
dec
push
cs
sbbl
in
and
pop
mov
shlb
nop
xor
xchg
inc
cmp
bound
adc
cmp
insb
jo
xor
pop
mov
mov
xchg
sbbl
scas
xchg
sti
mov
jb
and
aas
mov
pop
jmp
fistl
jno
mov
adc
dec
dec
scas
mov
xchg
daa
sub
gs
xchg
dec
sub
insl
je
fnstcw
inc
xchg
int
shll
dec
sarl
inc
shlb
test
jecxz
mov
mov
out
cld
push
xor
in
push
sub
out
lods
leave
arpl
pop
imul
adc
std
imull
or
inc
int3
sbbb
jbe
and
mov
hlt
xor
test
xchg
int3
lret
jle
leave
lods
aad
inc
xor
movsl
xor
inc
xchg
inc
and
mov
mov
lock
and
mov
push
or
nop
add
xchg
dec
test
lret
out
fstp
je
or
or
popf
sbbb
fwait
outsb
mov
in
jae
aad
or
dec
sbb
scas
mov
and
rcr
cwtl
mov
imul
sub
mov
pop
pushl
rcrb
mov
adc
xor
xchg
mov
and
push
mov
stos
movsb
or
rorl
mov
out
pop
and
outsb
mov
inc
fldl
int
scas
int3
adc
out
sarb
pushf
test
jg
xor
bound
loopne
test
xchg
sbb
mov
cmp
or
aam
lods
push
rorl
or
rclb
cmpsb
adc
mov
xor
gs
cmp
adc
enter
lods
out
xchg
sbb
ficomps
pushl
aas
rorl
xchg
jmp
cmp
or
mov
ret
ret
aad
cmpsl
pop
jns
lcall
sub
xor
and
jle
dec
cmp
sbb
lods
pop
lods
dec
outsl
add
jo
out
shr
sbb
rcr
fstl
test
pop
and
cs
lret
aas
add
idiv
mov
add
xchg
jmp
sub
push
popa
out
insl
je
dec
xlat
or
jmp
punpckldq
fidivl
jno
push
mov
xchg
and
aas
mov
jecxz
mov
mov
popa
insb
aaa
aam
loopne
mov
pop
add
mov
in
sbb
sub
xor
arpl
les
jmp
int
sbb
jno
mov
out
out
movsb
lret
aam
ljmp
xor
ljmp
mov
sti
cmp
call
arpl
mov
jns
mov
add
movsl
push
pop
fistpl
repz
subl
gs
cmp
imul
mov
shrl
pop
cmc
test
mov
mov
mov
lods
das
imul
mov
sub
aas
mov
in
jl
xchg
stc
jns
add
push
xchg
std
ficomps
adc
insb
add
je
bound
fs
je
inc
sub
add
lds
cmp
mov
imul
push
fwait
or
jmp
shrl
adc
sarb
rclb
inc
xchg
push
cmp
xchg
das
xor
cltd
xor
xlat
jne
test
push
mov
ds
dec
sub
jl
pop
mov
addr16
out
subl
xchg
adc
inc
ljmp
popf
cmp
sbbb
outsb
sbb
jecxz
mov
pop
es
sub
nop
cs
xor
mov
add
stos
nop
out
stc
cmp
xor
sub
sub
xchg
mov
aad
rcr
mov
mov
punpcklwd
adc
mov
sbb
adc
inc
xchg
jo
adc
loopne
bnd
mov
jg
sbb
in
xchg
jae
gs
lea
es
cltd
decl
insl
xor
jne
cli
icebp
jo
es
or
push
xchg
mov
les
fstl
stc
insb
clc
xchg
xor
fnstenv
mov
jns
adc
repnz
jge
xor
and
test
aam
jo
cmc
vpsubw
loope,pt
adc
mov
cwtl
in
test
xchg
orb
or
dec
lahf
xchg
adc
popa
cmp
cmp
jmp
mov
sub
mov
shlb
lods
call
pusha
sub
mov
push
xor
fmul
pop
mov
ret
call
push
movsb
mov
push
inc
mov
inc
hlt
xor
pop
nop
movsl
cli
addr16
int3
mov
mov
scas
mov
scas
pop
adc
iret
pop
ret
jo
jle
sti
xor
and
mov
inc
shll
lahf
sti
in
lods
ss
adc
jle
stos
xchg
je
mov
aad
fistpll
ja
pop
pop
adc
icebp
dec
adc
loope
xchg
les
adcl
pushf
sub
xchg
in
ljmp
and
push
jns
cmpsb
shlb
or
std
nop
popa
pushf
aas
inc
xchg
mov
adc
mov
add
mov
mov
movl
lea
testl
mov
stos
inc
shlb
outsl
mov
call
dec
shll
pop
insl
insl
xor
inc
sub
lds
les
and
mov
packuswb
gs
hlt
jnp
cmp
add
cmpsl
lods
sahf
mov
mov
push
stc
cmc
sub
into
shl
gs
call
test
jne
decl
rcrl
faddl
test
subb
out
fldenv
test
shr
testl
sub
add
push
shl
lds
shll
sub
add
insl
cld
mov
or
repnz
mov
sar
adcb
in
int3
add
xchg
xchg
popf
push
fdivs
xor
scas
dec
cmc
push
mov
and
aad
pop
movsb
imul
repnz
nop
xchg
push
jo
vpaddq
test
cmp
cs
into
loop
pop
jecxz
shll
iret
pop
popf
or
sbb
maskmovq
inc
sbb
popa
jae
cmpsl
sbb
movsl
xchg
mov
mov
jmp
mov
icebp
ss
mov
sbb
mov
data16
cmp
jae
mov
cmc
mov
aas
mov
add
cmp
xchg
leave
jno
les
inc
rol
ret
xor
jnp
lret
iret
js
inc
lret
shlb
enter
pop
or
inc
shlb
and
mov
sbb
out
sub
out
out
xor
sbb
xor
loope
or
push
push
repnz
lret
fsts
psrlq
xor
adc
or
inc
lahf
add
xchg
push
ss
sub
sub
sbb
jge
fadd
cmp
xchg
xor
sbb
xor
and
iret
adc
mov
sub
adc
shrb
insb
push
lds
and
mov
sub
jnp
or
jo
outsb
fimuls
addr16
sbbb
or
xchg
mov
movsb
cmp
inc
push
fiaddl
dec
sahf
out
pop
mov
jecxz
mov
stos
pop
xor
or
enter
fcmovbe
stos
dec
in
bt
hlt
loop
add
push
dec
stos
sti
or
or
push
add
xor
inc
lahf
dec
fimull
dec
aad
iret
push
and
dec
cmp
lret
mov
and
or
pop
lcall
mov
and
cmpsb
or
xchg
int3
mov
push
jecxz
inc
mov
mov
pusha
push
fwait
adc
pop
add
cmp
pop
add
xchg
lock
pop
clc
popf
int
mov
xchg
adc
mov
dec
cwtl
push
js
dec
cmc
repnz
add
fidivrl
out
js
loopne
hlt
push
push
mov
nop
in
cs
inc
popa
dec
aaa
xor
ret
mov
ret
cmpsb
pusha
fldt
test
lods
dec
or
lret
loopne
cmp
out
es
les
call
sti
xchg
outsl
pushf
jge
das
test
xchg
dec
pushf
arpl
call
notb
in
arpl
xchg
test
sbb
inc
pop
mov
sub
scas
mov
mov
paddsw
dec
ja
cs
loop
and
and
in
cmp
iret
mov
iret
jnp
push
negl
fisubs
movsl
mov
popf
xor
lock
jb
pop
in
test
dec
bound
sbb
loope
add
push
add
mov
int3
jmp
push
mov
rolb
cwtl
ja
es
loop
je
insl
lods
dec
les
ror
xchg
mov
jl
out
pop
mov
push
or
add
sarb
jmp
jg
leave
dec
jg
insl
mov
rorb
pop
std
fs
push
push
movsl
jl,pt
lcall
rcr
sub
sahf
mov
push
pop
lret
mov
lret
jns
push
loopne
les
cltd
sub
aad
lock
movl
shll
out
dec
rorb
push
dec
mov
cmp
popf
stos
sbb
sarl
jecxz
not
pushf
pop
jl
push
fsubl
mov
sarb
jno
xor
inc
or
stos
ss
jmp
xchg
lods
fimuls
lods
dec
leave
dec
ds
mov
mov
test
or
lock
pop
sbb
icebp
sbb
cmp
mov
push
sbb
stos
loope
arpl
mov
xchg
fmuls
mov
fidivl
es
jle
inc
sbb
push
out
call
and
push
adc
cmpl
imul
dec
xchg
mov
push
sub
repnz
adc
out
int
sbb
or
add
aas
mov
cmp
stos
push
mov
xchg
jmp
inc
sarl
xchg
aam
lahf
inc
loopne
js
call
xchg
cwtl
mov
mov
sbb
xor
pop
aaa
and
stos
loope
add
popa
push
add
adc
pop
pop
ljmp
fs
pop
repnz
test
sub
mov
xchg
fwait
and
dec
cwtl
sbb
inc
cmp
mov
mov
pop
loope
sbb
and
scas
or
or
xor
ficomps
testl
add
bound
jge
scas
enter
push
pop
testb
add
mov
jbe
ret
push
dec
adc
mov
dec
jns
mov
or
pop
push
xchg
dec
xor
push
dec
ficoms
xor
sub
leave
lods
sub
xchg
add
insb
data16
jb
lahf
pop
sbb
hlt
jle
add
inc
mov
movl
or
bound
in
or
add
mov
das
pop
push
insb
xchg
call
iret
cmp
ret
jle
adc
idivb
loopne
dec
inc
adc
pop
cmpl
gs
outsl
int3
loopne
in
clc
enter
cwtl
cmpsb
mov
dec
sahf
jg
ss
sub
in
adc
dec
mov
loope
mov
iret
cld
scas
pop
scas
adc
sbb
cli
adc
cmp
mov
cmpsl
loop
das
lods
adc
das
add
add
addr16
out
lcall
sub
jae
mov
cs
adc
inc
adc
js
repnz
jo
movaps
xor
pop
xor
pop
dec
ja
jne
pop
xchg
mov
mov
adc
mov
sbb
or
mov
cmp
stos
ljmp
jp
or
imulb
roll
out
pop
cli
add
xor
dec
iret
mov
lea
out
cwtl
push
test
hlt
hlt
bound
jne
shrl
in
shrb
jp
sub
push
push
add
mov
dec
fnstenv
es
shrb
add
jns
sub
and
add
mov
xchg
rcll
mov
or
jbe
push
mov
mov
mov
rcl
fs
jl
lods
popf
xor
mov
dec
cs
xor
adc
push
and
jp
movsb
in
push
gs
cli
cmpsl
shrl
dec
mov
jge
xor
iret
je
test
in
into
sti
pop
clc
mov
pop
inc
xlat
and
ror
fistpl
gs
xchg
mov
fwait
out
pusha
or
cmpsl
jp
xor
cvtps2pd
pop
loope
inc
int3
arpl
inc
popa
push
fcmovnb
xchg
mov
leave
cmp
and
mov
dec
pop
mov
push
repz
fwait
inc
mov
cwtl
xor
cltd
mov
xchg
in
pop
in
es
movsb
movsl
cmp
adc
ja
pushf
xchg
dec
mov
mov
dec
adc
mov
testl
sbb
push
jbe
jns
add
outsb
mov
divb
sti
sub
fistpll
inc
sarl
cs
aaa
jle
scas
ja
sbb
pop
std
add
lahf
xchg
jp
mov
or
adc
xor
push
push
sub
pusha
lcall
push
push
mov
cmpsl
stos
jns
sbb
sahf
sub
insb
mov
push
insl
je
adc
push
pop
daa
cmpsb
add
in
and
jbe
cld
mov
notb
pop
or
pop
dec
lahf
dec
in
adc
idivl
lret
es
outsb
mov
or
gs
daa
test
mov
out
push
pop
aaa
add
es
sub
pop
xor
ljmp
inc
add
cmp
cmpsl
and
cmp
dec
ja
sub
xor
jae
sub
push
rclb
dec
mov
pop
std
das
imul
fstpl
inc
mov
inc
test
xrelease
cmp
pop
pop
pop
inc
lds
add
xor
mov
xchg
jle
add
or
or
or
sub
cmp
push
jne
test
xlat
or
xor
jg
xchg
lcall
adcb
lcall
push
lret
sbb
adc
sbb
faddl
mov
dec
decb
and
orb
and
mov
mov
leave
pop
mov
inc
inc
mov
andb
pop
inc
sbb
pop
in
sub
pop
addr16
stos
push
pop
popa
mov
cmp
adc
int3
inc
out
mov
jge
loop
or
dec
xchg
sbb
push
mov
cmpsl
inc
movsb
hlt
and
and
fldl
fsubr
xchg
bound
aad
fstl
inc
mov
in
dec
movsl
pop
std
sbb
dec
jecxz
enter
repz
inc
les
cltd
stos
xchg
pop
sub
in
mov
leave
repnz
int3
mov
push
test
mov
cmp
imul
or
dec
fildl
xor
mov
iret
das
pop
daa
and
sub
daa
pusha
rcrb
fs
divl
sub
dec
cmp
mov
and
sub
adc
rorb
add
fwait
ljmp
xor
mov
ds
fcomps
sahf
jl
inc
dec
outsl
add
lcall
fldl
stos
aad
cmp
leave
shrb
mov
push
add
popf
mov
daa
lea
inc
mov
loop
stos
push
out
repnz
test
sti
jmp
xchg
movsb
xchg
out
jl
cmp
xchg
inc
sbb
sub
jne
mov
mov
cmp
dec
and
jb
jl
mov
or
fimull
mov
sub
adc
jne
mov
fstpt
jns
dec
mov
mov
clc
inc
jle
lock
xchg
filds
pop
sbb
xchg
mulb
cld
mov
mov
int3
decb
sti
test
mov
rcl
sub
cmp
jle
inc
ret
or
dec
in
cwtl
lret
les
in
sbb
cld
cmp
mov
sti
mov
push
adc
mov
fsubs
jb
mov
xor
xor
fldl
xchg
adc
and
lcall
or
call
sub
outsb
jne
stos
dec
push
cmp
dec
add
mov
shl
jae
addr16
push
cltd
pop
test
repz
and
cmpsl
int
js
xor
repnz
ror
and
lock
mov
add
xchg
leave
and
xor
jge
int
pop
pop
scas
test
xor
outsb
repz
ficoml
jmp
xor
lahf
mov
iret
cmp
cmp
add
pusha
outsb
pop
pop
pop
in
repnz
pop
or
jg
pop
mov
sbb
int
movsl
mov
or
sbb
cs
pushf
or
sarb
xor
xchg
gs
popf
push
popf
out
pop
adc
mov
sbb
fs
aad
cmp
icebp
push
sub
popa
adc
les
jecxz
push
movsl
repz
cs
push
arpl
sbb
sbb
sahf
aad
pop
sub
stc
push
orl
ds
or
fmul
inc
int
add
or
jne
and
add
xor
dec
or
add
xchg
lret
das
sbb
pop
add
mov
mov
pop
xlat
out
pop
push
pop
insl
into
call
insb
push
mov
xorb
inc
xor
cmp
mov
and
dec
or
push
shrb
popa
mov
push
fistl
sti
adc
dec
leave
jp
xchg
nop
xchg
movsl
pop
das
mov
cld
popf
push
mov
insb
loopne
mov
push
insl
and
sbb
je
and
daa
push
ss
pop
mov
ljmp
pop
sub
jmp
fsts
cltd
cmp
push
fsubl
sbb
pop
sub
stos
stos
mov
test
mov
sub
push
sbb
cmp
push
xchg
mov
jns
or
dec
sbb
jo
jnp
pop
iret
mov
lock
mov
push
xchg
ljmp
sbb
cmpsl
sarl
je
pop
in
das
xor
jle
in
dec
mov
push
or
mov
jns
mov
jecxz
jle
adc
cmp
imul
inc
jmp
and
jnp
xchg
pop
xor
adc
push
pop
xlat
rolb
sbb
int3
pop
lock
dec
push
adc
movsl
pop
mov
pop
test
sahf
imul
jmp
jle
enter
pop
sub
or
jg
nop
cmpsb
push
xorb
inc
cmp
add
movsl
cmc
dec
dec
loopne
mov
mov
cltd
int
inc
je
add
add
or
xchg
cmp
xchg
add
loopne
xchg
out
fldenv
testl
mov
xchg
jne
jns
and
inc
adc
jl
or
insl
mov
leave
jl
mov
std
and
imul
pop
mov
push
sbb
insl
ficomps
stc
sbb
adc
lds
cmp
test
aam
gs
push
pop
xor
mov
mov
outsl
or
jle
cmpsl
push
cmpsb
dec
fs
jns
add
mov
call
insl
mov
pop
lahf
mov
sahf
mov
or
loope
or
outsl
push
sub
add
es
imul
push
in
push
mov
mov
aas
push
or
ficompl
xor
jl
xchg
mov
fstl
je
loop
pop
sbbb
adcb
sub
inc
sbb
mov
in
idivl
inc
in
xor
xlat
sbb
sbb
push
mov
jle
das
sub
dec
jnp
call
adc
push
sbb
in
stos
inc
popa
push
lea
dec
dec
icebp
sbb
mov
add
xchg
adc
jb
int3
repz
stc
jbe
pushf
mov
or
movsb
aam
jmp
daa
pop
cs
ss
stos
push
ljmp
shl
jle
xor
mov
push
mov
jmp
adc
ret
out
cmpsb
pop
mov
iret
in
mov
adc
mov
sub
test
fcmovnu
in
dec
ss
icebp
cli
cmp
lds
jmp
bound
mov
jb
jnp
inc
adc
leave
lahf
mov
mov
scas
lds
push
mov
cmpsb
stc
sti
imul
jg
outsl
mov
adc
mov
test
mov
jp
sbb
push
mov
cmp
pushf
insl
cmp
lahf
sub
push
ret
cmp
cs
inc
mov
pop
shl
in
mov
insb
iret
bound
mov
pushf
sub
cld
loopne
rcr
shrb
and
sbb
insb
jo
pusha
dec
push
pop
inc
lods
mov
mov
in
lock
loopne
rcr
shrb
and
sbb
insb
jo
pusha
dec
push
pop
inc
lods
mov
mov
in
lock
loopne
rcr
shrb
sbb
pusha
dec
push
pop
inc
lods
mov
mov
in
lock
pusha
dec
push
pop
aas
ror
ret
mov
clc
hlt
lahf
mov
movsb
mov
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmp
sub
sbb
or
mov
sbb
xor
inc
lods
mov
insb
mov
sbb
or
sub
sub
fsubrl
int3
sbb
or
jp
push
pop
mov
stos
dec
lcall
cmp
sub
lds
int3
sbb
or
jp
push
pop
movsb
dec
mov
mov
mov
test
push
sub
fmull
sbb
loope
push
and
adc
cmp
ror
jb
mov
adc
ss
inc
fsubrl
movsb
gs
jne
add
cmp
popa
push
and
mov
pop
mov
enter
fsin
mov
or
or
ret
cmp
fcompl
jg
dec
push
aaa
or
mov
pushf
loopne
add
mov
inc
sub
and
lods
push
sar
dec
pop
cmp
insb
test
cmp
rol
rcl
sub
cld
andl
xlat
xchg
in
pop
pop
pop
imul
cmp
fsubrl
fistpl
in
or
jp
push
pop
movsl
dec
mov
inc
stos
push
lcall
sbb
cmp
dec
jnp
pop
int3
jae
arpl
jp
sbb
rorb
mov
sub
add
jno
pop
mov
movsb
dec
int3
jg
jmpw
das
mov
fbld
mov
sti
outsb
test
push
mov
test
ss
pop
mov
stos
dec
lcall
or
cmp
sub
fsubrl
int3
sbb
or
jp
push
pop
mov
stos
dec
lcall
or
cmp
sub
fmull
dec
xchg
and
mov
add
in
or
jl
cmp
orb
push
mov
in
fucomip
add
out
mov
leave
lds
add
fwait
sbb
dec
dec
inc
out
add
insl
ret
cmp
and
sub
xchg
push
xchg
pop
lods
and
pop
sub
or
in
mov
mov
cmp
mov
mov
jae
call
dec
aam
fisubrl
repz
aas
xchg
call
xor
incl
add
jne
push
mov
dec
mov
inc
xchg
jp
movsl
jmp
loope
aam
cmp
inc
pop
sub
negb
int
fdivs
ret
pop
mov
aaa
sub
jae
jno
in
cmp
mov
cli
loop
sbb
inc
rcrl
fsubrp
dec
imul
sub
push
mov
icebp
push
daa
inc
and
in
pop
cmp
filds
add
and
lcall
mov
push
dec
mov
mull
adc
ret
push
sbb
xor
mov
xchg
lods
cmc
or
pop
mov
lock
xor
dec
pop
add
lahf
outsl
fdivl
loope
in
push
ror
cltd
sbb
jmp
pusha
ljmp
shl
cltd
mov
sahf
push
mov
cld
imul
hlt
xchg
jnp
outsl
inc
jle
setge
push
test
dec
sbb
cltd
adc
aaa
inc
pop
js
arpl
cmpb
jae
dec
xor
mov
in
push
addb
xchg
repz
iret
icebp
sti
jmp
les
loope
jg
lcall
cmc
cli
pop
push
or
xchg
into
imul
es
mov
in
cli
cltd
arpl
mov
or
hlt
or
es
int
into
fldenv
loop
and
mov
mov
pop
jle
rorl
enter
pop
int3
sti
ljmp
dec
in
stos
cmpsb
inc
jmp
imul
fistpll
mov
repz
push
arpl
or
ljmp
jmp
add
inc
jbe
inc
icebp
mov
lcall
int3
lret
data16
mov
fdivs
aam
pop
pop
je
stos
lods
je
mov
pop
inc
adcl
mov
mov
xor
adcb
lret
int
sub
pop
and
pmaddwd
push
sub
jno
cmp
push
jnp
adc
xor
rorl
adc
or
xchg
ja
negb
sub
inc
mov
mov
inc
sbb
and
lock
out
jge
aam
mov
dec
cs
icebp
fucomi
and
ret
xchg
notb
out
mov
out
push
imul
out
sbb
out
std
lds
mov
xor
jge
pop
mov
int3
sub
ret
add
jge
movsb
and
xchg
fcmovb
sbbl
sbb
popf
mov
sub
push
or
push
sbb
scas
into
addl
lcall
mov
xchg
pop
or
cmp
jle
movsb
das
ja
icebp
push
mov
jne
mov
mov
push
xchg
in
add
sahf
int3
xor
cmc
fsubrl
adc
xchg
pop
mov
jno
ret
mov
inc
and
fdivrl
pop
jb
dec
and
sbb
cwtl
pop
jne
mov
jae
pop
dec
lock
sbb
mov
inc
shr
out
imul
popf
pop
push
mov
cmp
mov
movsb
stos
xor
stc
push
subb
jb
sub
xchg
add
sub
cmp
test
lds
mov
xchg
ret
divb
shl
outsl
dec
push
mov
clc
jmp
add
mov
inc
and
add
ret
pop
ja
mov
outsb
lea
adc
push
mov
je
mov
push
cmp
scas
sbb
cld
fmull
inc
icebp
cmp
or
mov
jne
in
popf
int
fidivl
int3
push
inc
or
popa
in
or
cmp
or
jg
stc
or
ret
xchg
lahf
bound
test
jae
outsl
cmp
fildll
dec
pop
or
in
insb
in
push
pop
fisubrl
mov
or
enter
sub
clc
ret
ss
and
enter
inc
mov
aad
rcrl
bound
add
jno
xchg
add
ja
inc
aad
jns
cwtl
jo
lret
xlat
jp
mov
add
aaa
mov
outsb
sub
mov
adc
jle
sbb
insl
xchg
mov
and
inc
xor
loopne
insb
jnp
insl
xor
sub
les
or
sbb
and
pushf
mov
mov
out
das
jo
inc
cltd
imulb
push
loop
imul
jo
out
cmp
inc
adcb
cmc
mov
in
xor
cmpsb
js
xor
pop
fxch
loopne
stos
fnsave
or
push
push
or
sbb
sti
out
enter
ljmp
xor
dec
in
pop
ret
jl
dec
xor
stos
roll
shlb
test
and
or
adc
jb
enter
loopne
xchg
lock
adc
inc
dec
sbb
pop
mov
mov
xchg
decb
jg
inc
mov
fs
add
movsl
dec
cmp
xchg
inc
mov
outsb
push
jg
and
iret
cmp
aad
push
mov
push
push
loop
arpl
hlt
rcl
or
add
test
imul
or
jno
sub
cmp
pop
repz
push
push
mov
sub
sbb
cmpl
xor
dec
shl
fucomip
xor
pusha
sbb
mov
sub
stos
mov
pop
loop
test
shl
insl
mov
into
jecxz
add
and
mov
sbb
arpl
inc
mov
sbb
repnz
jge
pop
aam
push
je
sub
pop
pusha
stos
stos
and
cmp
rol
sbb
setle
xchg
cld
lock
je
fwait
xor
lahf
push
lods
shr
mov
les
mov
push
lods
mov
jle
mov
mov
ljmp
fidivs
add
insl
sbb
adc
mov
push
push
test
daa
dec
push
jo
insl
std
cmp
adc
outsl
fwait
or
push
push
ljmp
push
scas
test
cli
xor
xchg
ljmp
in
sbb
dec
out
out
cmp
andb
push
push
pop
xchg
xor
inc
imul
pushf
adc
int
aam
mov
dec
mov
cli
rol
pop
pop
xchg
pusha
xorb
and
or
cmpsb
out
scas
popa
fcmovnb
hlt
inc
xchg
pop
cmpl
clc
fimuls
scas
mov
loop
mov
adc
repz
imul
jge
dec
filds
popf
ja
sahf
push
dec
xor
push
aas
inc
inc
fildll
inc
adc
cmp
sbb
cld
nop
jmp
enter
push
daa
scas
inc
lret
sbb
dec
xchg
mov
test
jp
movsb
push
cmp
pop
in
gs
hlt
movsb
dec
push
pop
int
mov
jge
loop
xchg
aad
out
pop
addl
push
fdivrp
inc
pop
inc
repz
out
loop
imul
fbstp
sti
orb
push
fmuls
sti
stc
push
sbb
leave
iret
fdivrl
sahf
pop
or
mov
cmp
jg
lods
movsl
fwait
aas
cld
jb
fmul
scas
in
mov
sub
sbb
inc
push
push
clc
dec
rclb
repnz
repz
pop
add
lcall
mov
dec
stos
or
xor
scas
std
jmp
lahf
mov
add
ja
fldl
imul
or
stc
mov
push
xchg
mov
out
push
test
setnp
cmp
xor
fs
aad
repnz
ljmp
mov
cli
push
add
rorb
cltd
cltd
clc
and
fwait
jg
and
dec
aam
inc
rcr
lret
push
pop
cwtl
faddl
mov
out
dec
popl
push
shlb
push
mov
mov
aam
push
and
or
in
fstpt
pop
xchg
jg
jmp
pop
enter
addr16
and
arpl
push
aad
int
daa
jp
mov
jo,pt
sbb
sub
dec
mov
jnp
aas
daa
daa
jge
mov
inc
leave
push
lods
les
scas
fcoms
and
inc
scas
fwait
mov
mov
sub
xchg
jge
repnz
nop
bound
jl
pop
rcrl
aad
xchg
pop
pop
pop
sbb
lret
xchg
or
add
cmpsb
adc
imul
sar
test
xor
fiaddl
ret
and
iret
jp
cmpsl
lcall
mov
cmpsl
xor
in
pop
add
sbb
jg,pt
mov
pop
outsl
ret
lret
add
call
out
jnp
push
les
or
push
fdivl
in
and
andb
sbb
fisubl
je
fcmovne
rcr
ljmp
ss
daa
loope
mov
add
or
push
rep
out
or
outsl
dec
xchg
clc
iret
xor
ret
int
int
fnop
dec
pop
dec
cwtl
rcr
mov
dec
sbb
dec
push
xor
test
out
pop
mov
and
xchg
js
xor
aad
aas
dec
fisttpll
sti
mov
push
std
popa
push
cs
rcll
jo
nop
movb
inc
pop
or
sbb
loopne
movsb
inc
mov
das
sub
sub
outsb
mov
dec
movsl
push
repz
or
sarb
and
call
lret
push
movsb
push
in
dec
mov
stos
or
aas
icebp
ss
adc
and
imul
leave
fldt
insb
xor
dec
repnz
fmuls
dec
xor
loope
jge
xor
pop
int
cmpsb
sbb
pop
icebp
push
fs
xchg
push
inc
enter
or
jnp
push
je
gs
stos
xchg
das
movsl
adc
mov
ror
fwait
sahf
push
mulb
ljmp
xor
jo
cmpsl
inc
inc
add
sbb
inc
pushf
in
hlt
cmp
sbb
lret
shl
or
dec
xchg
and
adc
jp
andb
inc
sarb
scas
repnz
fcoml
mov
xorb
in
fldt
push
test
clc
test
jno
lds
dec
mov
mov
mov
repz
jmp
and
adc
sti
lods
mov
mov
in
mov
and
std
xchg
mov
pop
pop
imul
pop
stos
icebp
xchg
popf
jb
jae
out
lds
movsl
push
mov
dec
add
insb
jecxz
and
push
jae
int3
and
mov
sbb
jb
adc
addr16
scas
mov
out
loopne
stc
out
shlb
mov
dec
arpl
jne
mov
in
rcr
mov
hlt
xor
out
add
dec
in
gs
push
lock
popa
bound
shrb
stos
cltd
add
jg
xchg
sti
pop
dec
movsl
mov
jle
out
in
jl
push
cmpsb
add
icebp
add
sub
mov
or
stc
inc
sub
clc
push
or
xlat
popf
push
cltd
mov
test
fidivs
iret
loope
pop
sbb
lock
std
mov
stos
jp
and
pop
xor
xchg
call
mov
aam
test
jnp
adc
pop
fistl
mov
push
adc
stos
or
or
fistps
into
test
dec
stc
dec
addr16
out
loope
cmp
mov
jb
mov
or
mov
mov
dec
aam
lods
inc
mov
or
xor
sbb
dec
add
mov
inc
dec
add
xor
mov
data16
push
sbb
sub
mov
in
adc
jo
aas
lret
lds
or
imul
popf
mov
fsubrl
dec
push
insb
repz
jne
movsl
push
popl
push
repnz
pop
sbb
mov
adc
popa
xor
imul
mov
out
sahf
dec
dec
out
lcall
mov
mov
loopne
loop
loop
adc
jmp
push
in
movsb
sarl
mov
cld
pushf
in
in
mov
xchg
jnp
clc
and
call
test
xor
decl
or
iret
cwtl
mov
mov
in
insl
adc
pop
adc
or
mov
xchg
add
scas
adc
mov
xor
dec
cmp
mov
jg
loopne
inc
ret
dec
lret
js
testl
jne
ljmp
or
pop
aaa
xchg
adc
jmp
sub
btl
ja
xchg
jecxz
lea
sbb
loopne
into
in
adc
outsb
shll
cmpsb
sti
insb
outsl
cmp
jbe
push
mov
lods
xor
test
lret
sbb
fnstcw
and
shlb
fcmovu
inc
push
enter
fcompl
push
mov
idivl
sub
xchg
stc
and
inc
imul
in
stos
lds
aad
idivl
cmp
jb
add
lock
cld
cmp
push
jmp
testb
xchg
aad
push
mov
push
inc
dec
xor
and
outsb
cmpsb
jae
out
inc
xorl
lcall
sti
shl
jae
in
adc
jp
pushf
in
sahf
mov
cli
roll
lahf
shrb
inc
in
push
inc
adc
push
mov
in
inc
mov
aad
inc
xor
arpl
test
inc
call
jno
repz
xor
stos
push
mov
mov
ss
add
mov
ds
jne
jle
cmpsb
popf
and
mov
test
mov
pop
push
hlt
jbe
arpl
das
iret
clc
sbb
or
outsl
outsb
in
addr16
loopne
test
cmc
push
cmp
jecxz
iret
ja
xor
mov
std
push
mov
mov
dec
adc
mov
lret
fidivs
add
fsubr
addl
cmpsl
jno
mov
xor
push
xchg
xchg
movsl
dec
jp
inc
les
imul
or
das
ficoml
cmp
dec
adc
out
outsb
jmp
mov
lahf
call
adc
xchg
pop
xor
xor
ss
imul
or
mov
push
imul
mov
sub
inc
shrb
sub
mov
pusha
add
dec
add
and
mov
add
fwait
mov
xor
cmp
push
lock
cli
push
add
mov
fisubl
lcall
mov
into
sbb
xchg
outsl
pusha
inc
mov
mov
push
test
xchg
push
or
popf
xor
test
mov
insl
sbb
xchg
add
mov
sub
sarl
pop
cmc
les
adc
dec
sarb
dec
add
add
movsl
test
push
aam
cmp
fwait
andl
push
lcall
xor
mov
leave
loopne
jno
xor
in
fs
movsb
test
scas
sbb
adc
mov
add
mov
mov
imul
mov
push
and
inc
mov
or
xor
lret
in
and
push
add
imul
es
les
cmpsl
adc
and
test
lock
stos
shrb
lods
enter
orb
outsb
sbb
push
push
mov
stos
ja
jle
or
repz
push
mov
clc
xchg
movsl
test
hlt
pop
mov
push
xor
mov
jmp
pusha
mov
mov
imul
jg
sub
gs
cli
add
xor
fdivl
stos
xor
jno
in
ret
shlb
js
inc
loopne
loopne
aas
inc
adc
jnp
stos
and
frstor
rcll
inc
pop
and
gs
movsb
out
mov
and
jbe
repz
lahf
xchg
mov
xchg
xchg
jne
data16
xchg
xchg
leave
and
fists
nop
inc
adc
sbb
adc
jae
sbb
dec
ss
rorb
xchg
mov
cli
jp
inc
and
add
stos
lcall
sbb
lret
fimull
mov
cltd
inc
pop
push
sub
icebp
xor
pop
popa
pushf
arpl
insb
aad
pop
xor
lahf
or
inc
cwtl
stos
add
push
ret
mov
adc
push
rcl
jo
dec
out
sbb
lods
adc
cltd
mov
das
pop
aad
jnp
mov
sbb
cwtl
mov
sbb
mov
mov
pop
nop
fnstenv
cmpsl
loop
and
mov
arpl
aaa
push
loop
add
cmp
xchg
lock
add
jmp
inc
imul
out
out
cwtl
sarl
cmc
pop
push
movsb
scas
jecxz
cltd
xchg
or
fdivr
cmp
cmpsl
xor
jmp
aam
jae
dec
pop
cmp
or
ror
adc
xchg
mov
out
shl
mov
shrb
pop
xor
movsb
mov
push
hlt
jae
inc
clc
icebp
outsb
enter
nop
lahf
mov
mov
adc
and
mov
outsb
in
addr16
mov
and
stos
push
hlt
xor
cmp
loopne
lahf
cmp
leave
adc
cmp
inc
cmp
lret
pop
xor
xchg
pushf
es
out
adc
bound
sub
push
mov
jge
enter
ret
loop
imul
int3
or
mov
lcall
jbe
loope
lret
push
into
push
add
addb
stos
out
mov
movsb
sbb
push
ja
jae
cmpb
les
aam
push
mov
sarb
xor
mov
and
inc
push
repnz
in
popa
jns
imul
sub
sbb
add
cmpsl
dec
mov
out
jnp
adcb
std
mov
movsb
inc
jg
or
pop
add
fwait
cltd
lods
int3
push
daa
inc
add
paddsw
cmp
stc
cmp
arpl
mov
es
sarl
out
sub
adc
add
in
xor
clc
out
loopne
fmul
into
inc
push
cmpsb
xor
sahf
movsb
mov
mov
cltd
dec
dec
mov
outsb
test
add
cmp
sbb
push
xchg
mov
imul
xlat
repnz
inc
inc
jg
nop
dec
adc
pushf
jnp
dec
inc
mov
insl
movb
das
insl
jno
repz
sbb
inc
out
pop
dec
aaa
mov
mov
xchg
movsl
sub
and
ss
stos
or
test
std
pushf
insl
lods
xor
mov
repnz
sbb
xchg
cmc
leave
sbb
pop
pop
inc
jo
outsb
loope
leave
loope
jno
repnz
shr
negb
dec
pop
fistpl
xor
add
sbb
xchg
outsl
mov
lahf
test
add
and
mov
movsb
sbb
hlt
rcrl
ljmp
sub
xor
jns
scas
hlt
das
dec
mov
dec
fldl
mov
out
push
mov
jg
sahf
mov
adc
sbb
fsubrs
repz
fisubs
sub
roll
jp
aad
push
stc
sbb
pop
ds
xor
pop
aad
pop
test
push
pop
xor
sbb
es
out
or
adc
cwtl
or
dec
pop
jnp
jo
mov
or
fstps
mov
pop
pop
lods
insb
rorl
pop
arpl
testb
mov
das
push
sbb
push
and
enter
enter
push
negb
pop
push
adc
push
push
lods
mov
movsb
or
pushf
notb
mov
pop
pop
xor
xlat
sti
in
fidivrl
and
mov
push
xchg
push
and
incb
pop
inc
cmp
mov
and
arpl
push
dec
inc
test
mov
fwait
mov
dec
aaa
xchg
fldt
mov
dec
push
xchg
mov
fcmovnu
inc
mov
cltd
pop
into
mov
lret
sbb
in
mov
lcall
sar
lods
inc
decl
test
mov
inc
mov
jge
test
addr16
js
pop
mov
push
out
sti
out
pop
pop
cmpb
daa
daa
xor
push
mov
icebp
xor
xlat
mov
sub
divl
enter
and
and
cmp
mov
fimull
orl
fcoml
mov
mov
fsubl
dec
rcrl
or
in
arpl
rclb
pop
mov
fiaddl
pop
add
xchg
in
add
pop
stc
mov
jmp
cltd
cmp
clc
push
cs
lods
or
test
jno
lock
int3
sbb
or
jp
push
pop
mov
stos
dec
lcall
or
cmp
sub
fsubrl
int3
sbb
or
jp
push
pop
mov
stos
dec
lcall
or
cmp
sub
fsubrl
in
cli
pushf
push
pop
mov
stos
dec
lcall
or
cmp
sub
sbb
or
jp
push
pop
mov
stos
out
jl
sbb
ret
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
rolb
popa
movsl
stos
cmc
xchg
pop
xor
add
gs
xor
les
hlt
aad
lds
inc
add
je
sub
jne
gs
bound
int3
mov
fsubr
scas
in
or
es
add
sub
push
xor
sub
mov
rcll
xor
and
iret
stos
mov
faddl
fistl
jp
int
sbb
call
jo
nop
mov
scas
lcall
mov
inc
insl
jle
and
inc
or
idivl
repz
les
hlt
sub
in
sahf
roll
fidivl
adc
lds
or
cmp
inc
or
mov
xchg
mov
addr16
add
aad
lods
outsb
inc
add
cmp
repnz
pop
and
lret
addr16
aam
mov
pop
mov
mov
push
adc
jne
gs
pop
dec
pushf
hlt
mov
movsl
hlt
ret
xchg
cmc
movsb
cld
es
sbb
dec
dec
cmp
outsl
cmp
push
stc
loopne
rorb
mov
repz
roll
inc
and
push
or
and
ficoml
int
xchg
pusha
and
dec
cs
inc
add
mov
xor
mov
cwtl
popf
enter
movsb
in
adc
fs
adc
and
xor
les
hlt
aad
lds
inc
add
je
add
adc
and
xor
les
sbb
fs
movsl
int
in
ss
jl
xchg
int3
arpl
sub
dec
add
in
test
jno
daa
int
cmpb
jae
mov
lea
cli
or
loopne
and
lcall
pop
stc
xchg
inc
ljmp
inc
add
ds
fwait
xor
loop
stos
or
nop
sub
out
xchg
push
add
out
call
jmp
std
mov
mov
test
xchg
cmpb
add
orb
and
mov
inc
lods
mov
je
iret
roll
jmp
fcoml
cli
pop
pop
cmp
icebp
push
sti
push
mov
fmuls
push
adc
jp
push
pop
aad
jb
pandn
aad
xchg
dec
inc
adc
xchg
adcb
repnz
movsl
int
mov
bound
sti
ja
pop
push
sti
pop
movsb
xchg
negl
neg
pop
adc
data16
mov
popf
arpl
adc
cmp
or
out
scas
fwait
inc
leave
arpl
xor
and
pop
push
in
imul
aaa
mov
sbb
pop
adc
dec
test
pop
in
adc
lds
ja
iret
stos
enter
clc
js
push
int3
and
cmpsl
xchg
sbbl
movsl
scas
movsl
mov
shll
roll
shrl
pop
inc
aaa
popa
xchg
jno
andl
push
or
sbb
ds
fwait
iret
mov
pop
es
lahf
inc
xlat
pop
sti
xchg
into
popf
inc
outsl
jbe
int3
insb
lods
scas
mov
imul
inc
lods
push
and
push
stc
loope
cli
add
add
mov
add
test
mov
jne
lods
mov
dec
dec
lret
js
dec
sbb
and
imul
inc
outsl
imul
test
arpl
mov
jns
cli
shlb
ljmpw
dec
imul
mov
insb
adc
fisttps
sti
push
orl
xchg
xor
int3
jl
jae
iret
lret
ljmp
test
xor
dec
mov
test
outsb
fmuls
mov
xor
pusha
inc
or
pop
sbb
scas
adc
pop
outsb
or
sub
lcall
shrb
test
lds
out
xor
outsb
inc
push
mov
shll
outsb
and
push
jne
push
sub
mov
dec
xchg
mov
fistpl
jno
in
repnz
fisttpll
mov
pop
out
imul
cwtl
sbb
add
mov
inc
xchg
adc
mov
or
add
cltd
inc
jge
mov
ret
ret
add
mov
outsl
jbe
aad
aaa
call
enter
ret
repz
mov
dec
dec
imul
inc
call
dec
testl
sub
dec
fldenv
sahf
jecxz
mov
and
lcall
mov
mov
dec
mov
outsb
das
repnz
pushf
ss
push
cs
std
xchg
mov
loope
arpl
dec
pop
outsb
leave
mov
sahf
add
push
popa
push
or
es
nop
rclb
and
inc
setae
rcll
xor
insb
movsl
lahf
ret
lock
push
sbb
gs
fnstenv
out
or
cli
cli
aaa
sbb
mov
movsl
adc
cli
push
loop
xchg
ja
sub
lods
lret
or
jae
lds
push
sbb
add
out
push
inc
push
push
mov
out
xor
lods
adc
jge
icebp
jns
inc
dec
out
mov
imul
nop
je
jl
mov
jg
sub
dec
mov
loopne
sub
test
adc
xchg
xchg
dec
mov
and
mov
pop
cwtl
fisttpll
sahf
ss
cmp
cs
cmp
aad
adc
push
inc
dec
movsl
push
dec
lret
shll
lret
fdivr
sub
sbb
dec
ret
xchg
mov
iret
cmp
mov
jle
scas
xchg
call
popf
xchg
dec
pop
dec
mov
test
push
or
bnd
push
rcr
sbbb
adc
jmp
divb
stos
fldz
mull
pop
fists
dec
arpl
and
into
xor
ret
idivb
xchg
lods
das
pushf
xor
cld
into
xor
ror
sub
xchg
es
lcall
in
cmpsl
in
push
divl
mov
push
loopne
imul
cli
les
xor
movsl
or
stos
cmp
les
jae
mov
mov
aas
mov
pusha
test
mov
push
jno
dec
jl
jbe
into
mov
fwait
and
sbb
xchg
jno
cmovae
arpl
hlt
adc
stc
push
out
xchg
push
dec
push
ja
mov
xor
rorb
mov
add
negl
cmp
jg
mov
stc
xor
sub
sbb
out
or
andl
mov
mov
push
cli
popf
stos
dec
ficoms
into
mov
jb
mov
out
jb
jb
aas
push
sarb
outsb
test
inc
jno
sahf
push
bound
int
or
sbbl
xchg
mov
rcll
outsb
push
xchg
push
jp
sub
rcll
sub
or
scas
or
dec
cwtl
cld
cs
mov
sub
div
or
xchg
jnp
dec
mov
mov
sbb
dec
rcrb
repz
mov
jmp
stc
mov
inc
je
cmp
shufps
mov
shll
ret
pop
std
push
dec
mov
push
cmpsb
push
add
pop
sbb
jo
mov
lds
cmp
pop
mov
cmc
push
push
jae
sti
or
mov
pusha
push
push
cmc
lods
or
icebp
lret
leave
stos
sbb
rcll
mov
test
outsl
dec
mov
pop
stc
nop
cmpsl
daa
and
adc
add
ljmp
push
fildll
dec
lods
xchg
mov
stos
fnstenv
mov
and
das
inc
pushf
test
cld
sbb
and
lods
mov
inc
ja
xlat
test
add
dec
pop
addr16
jl
fnstcw
fadd
int
and
cmp
mov
idivl
inc
jle
mul
add
add
inc
fisttpll
push
imul
push
fdivp
cmpl
cli
push
adc
and
pop
adc
mov
aad
mov
imul
inc
rorl
and
cmpsl
ljmp
bound
inc
cwtl
pop
in
int
or
or
rorl
mov
sbb
inc
test
mov
adc
sbb
imul
mov
sbb
popf
test
fcomip
ja
out
xchg
mov
cld
lds
int
lret
cld
test
xchg
cmp
dec
mov
adc
xchg
repnz
mov
repnz
lea
in
in
mov
testb
push
aas
mov
test
shlb
lret
repz
rol
frstor
xchg
dec
cmpsl
rorb
outsl
inc
cli
cmpsl
scas
outsl
push
push
adc
mov
sub
mov
pop
and
icebp
sahf
in
xor
adc
xchg
call
inc
divl
sar
mov
sbb
push
sbb
cwtl
jp
jmp
dec
femms
fildl
cltd
ds
aas
sarl
pop
cli
out
aad
idiv
leave
push
inc
ret
xor
aam
xor
dec
aam
add
repnz
loopne
outsb
daa
ret
pop
shlb
ficoml
dec
add
sub
mov
sahf
push
push
lock
sahf
inc
fcomip
xchg
pop
mov
xchg
dec
into
cmp
fs
test
mov
cli
mov
in
pop
inc
fnsave
in
dec
aad
mov
fbstp
dec
push
test
repz
jle
fwait
jbe
sbb
into
push
xor
add
jae
movd
je
movsb
test
inc
add
cmpsb
pop
xchg
inc
test
cmp
jae
into
jmp
into
push
jecxz
adc
inc
cwtl
mov
cwtl
mov
sbb
and
mov
lods
or
push
cmp
icebp
scas
cmp
cmc
cwtl
mov
nop
cmp
mov
and
sub
repnz
push
cmc
xchg
pop
jge
aad
mov
jns
xchg
jae
adc
xchg
xchg
mov
mov
cmp
adc
jle
push
stos
mov
sub
aas
pop
lods
lods
jle
mov
out
pop
js
mov
jl
push
ljmp
shll
sbb
push
xor
bound
lods
pop
jne
roll
fisubs
xchg
mov
pop
sbb
xchg
enter
fisubl
jnp
ret
jne
or
in
sub
dec
daa
in
xchg
test
je
fmuls
lds
scas
inc
insb
ljmp
test
cwtl
jnp
mov
cmp
shll
cwtl
dec
add
cmp
negl
pop
mov
mov
push
inc
sbb
mov
mov
pop
cmpl
jbe
pop
mov
dec
test
stc
inc
out
and
sarl
outsl
stos
mov
push
push
sahf
int3
int
hlt
xchg
push
hlt
and
cld
test
lock
mov
xchg
test
leave
adc
push
scas
decb
and
incb
pop
mov
jno
push
jns
cmp
fiaddl
insl
fstpl
test
mov
movsl
jnp
sub
and
or
jp
and
push
jo
xchg
dec
push
adc
daa
jno
out
cmpsb
ljmp
mov
cmp
inc
lods
xchg
or
jle
enter
decl
aaa
das
rcrl
into
arpl
lcall
adc
in
ret
and
mov
ret
lea
jg
xchg
mov
mov
lret
movsb
sub
xor
sbb
imul
fadds
enter
scas
jge
push
adc
fists
lret
pop
movsb
ja
andb
in
push
popf
je
jmp
push
or
gs
ficompl
push
mov
bound
and
xchg
popf
jno
mov
repnz
aaa
and
or
aam
jns
loope
push
repnz
jge
ljmp
gs
cmp
push
inc
mov
mov
call
or
xchg
sub
sbb
les
das
fwait
pop
cs
nop
jle
sub
push
outsl
mov
imul
lods
ret
popa
mov
push
cmpsl
lret
cmpsb
mov
mov
jno
stos
sub
add
pop
call
ror
out
cli
inc
decb
mov
mov
push
cmp
sbb
imul
test
dec
mov
lea
push
addr16
andl
sbb
nop
adc
bound
jmp
clc
push
mov
xchg
fnstcw
mov
jl
jmp
ret
iret
fiaddl
mov
das
xlat
or
jl
cltd
dec
sbb
cmp
fldcw
rcrb
cmpsl
lods
ja
jge
xchg
jge
cmpsb
ret
in
lret
sbb
xor
sub
dec
xchg
add
pop
push
call
and
xchg
imul
xchg
pop
add
imul
jmp
adc
adc
sti
mov
or
inc
lock
cld
xor
or
sub
cmp
lock
fdivrp
movsb
jp
add
and
in
dec
jg
add
mov
inc
and
ficoms
xlat
jbe
xchg
popa
popa
push
fcoml
sub
xchg
cmp
pop
orb
out
cmp
jmp
mov
sbb
mov
cmp
popw
jns
das
mov
aad
add
test
adc
xchg
pop
lcall
push
mov
ss
pop
imul
cltd
in
lods
les
mov
pop
xchg
mov
fstl
ljmp
add
fcmovnb
lods
sbb
out
fcomp
sbb
adc
inc
xchg
rolb
ja
dec
sub
pop
popf
sub
scas
or
enter
pop
int3
inc
pop
and
and
in
sub
in
cmp
jae
leave
outsl
or
dec
dec
push
js
jo
sub
ret
rclb
sbb
mov
mov
adc
dec
add
in
lods
mov
or
cmp
add
cmc
adc
push
adc
movsb
enter
cli
fidivrl
stos
cmpsb
cmp
test
mov
pushf
add
fidivl
insb
inc
push
dec
rcrl
push
jl
gs
add
cwtl
pop
nop
jae
xchg
inc
test
cmp
fisttpll
push
lret
in
adc
cmc
pop
popa
outsb
stos
push
dec
cmp
mov
es
pop
or
lret
je
loop
imul
enter
and
out
out
adc
mov
mov
stos
call
fwait
push
insb
jecxz
mov
decb
pop
jl
mov
and
xor
mov
imul
daa
filds
in
jae
or
cmp
sbb
jb
jg
sbb
push
popf
mov
in
dec
dec
adc
mov
lahf
test
cld
sbb
jecxz
repz
jae
sbb
shr
sub
mov
inc
jecxz
cld
icebp
sbbl
pop
jge
jbe
clc
or
jae
inc
pop
out
sub
fldenv
adc
int3
test
xchg
mov
pop
jne
push
mul
jae
mov
cmp
out
pop
popa
jg
or
leave
fwait
xchg
mov
test
test
inc
cmp
mov
cltd
xchg
push
call
inc
sbb
imul
call
jmp
ret
mov
sbb
ss
iret
cmp
mov
and
faddl
mov
xchg
test
sub
push
scas
jle
ss
mov
out
push
ret
add
jmp
inc
fldt
push
cwtl
pushf
mov
xor
adc
ljmp
or
adc
xchg
sub
xor
shl
sub
sub
sbbl
into
xor
jp
out
sub
ljmp
je
pop
outsl
or
ficoms
cli
mov
pop
jno
sarl
push
jmp
xor
fcompl
pop
mov
in
and
shr
mov
pop
in
lret
or
dec
int
ficompl
mov
fldenv
movsl
stos
loop
shll
fistl
xchg
xlat
stos
mov
leave
cmp
lea
in
loop
out
shrl
sti
sub
pop
gs
inc
sti
jg
cmp
repz
fiaddl
ljmp
mov
dec
lods
sub
and
jbe
stos
add
ja
mov
lcall
pop
lcall
roll
arpl
push
popf
adc
call
sub
pop
add
lock
mov
push
movsb
dec
pop
and
xchg
dec
imulb
imul
mov
in
aaa
pop
dec
enterw
add
sub
int3
mov
jb
and
rcrl
cmpsl
imul
xchg
loop
cwtl
add
fiaddl
mov
out
test
sub
sbb
imulb
adc
adc
fstp
nop
inc
mov
aas
or
sub
loope
out
inc
sbb
push
cltd
cli
push
push
lcall
or
hlt
xchg
mov
imul
stc
ljmp
pop
cmpsb
test
sub
xchg
cmpsl
imul
cltd
pop
pop
cmp
jbe
cmp
icebp
loop
add
fsts
adc
scas
jno
icebp
push
movsl
notl
push
mov
loopne
mov
insb
adcl
movsb
and
comiss
xor
cmp
enter
ja
rcl
jae
cmpl
mov
imul
aaa
sub
sahf
ja
mov
sahf
mov
lret
cwtl
jbe
stos
sbb
lret
icebp
push
fcmovnbe
in
push
pop
mov
in
icebp
sbb
cmp
mov
loopne
cmpsb
cwtl
xchg
out
push
sub
xorl
loopne
aaa
movsl
push
jno
and
push
cmp
ds
and
mov
push
enter
push
es
add
push
movsl
roll
pmaddwd
pop
sub
jecxz
xchg
sbb
int
insl
popa
fnstsw
push
and
sbb
rcll
sbb
pop
insb
mov
cmp
fadds
pop
pop
mov
dec
jmp
push
jnp
aaa
jle
inc
test
push
adc
pop
mov
inc
cmpsl
ds
fisubrl
loop
in
je
cmp
movsl
dec
pop
inc
inc
mov
jns
xchg
cwtl
repz
fsubl
and
cmp
addr16
stc
push
xor
or
push
dec
mov
jmp
test
xchg
mov
mov
sub
pop
enter
loop
inc
test
aaa
lret
add
or
test
loope
mov
cld
sahf
arpl
pop
outsb
aam
jo
xchg
add
jl
in
int
mov
jae
push
lcall
aad
ja
pop
push
insb
fs
in
imul
int
and
neg
ficoms
xor
dec
subl
imul
dec
or
and
push
add
mov
mov
ret
iret
xchg
xchg
cmpsl
outsl
test
sub
test
stos
dec
add
mov
push
mov
jo
insb
sbb
lcall
sar
jp
and
insb
sbb
pushl
cmp
push
add
leave
movsl
inc
cmc
fcompl
es
or
inc
sbb
pop
inc
popa
or
and
fsubl
xchg
mov
sub
add
out
mov
stc
add
out
or
and
dec
mov
in
push
adc
adc
sbb
lds
inc
jmp
mov
mov
lea
es
dec
je
stc
shrl
inc
fldcw
inc
lods
cmp
in
ss
lds
sub
gs
pop
jno
fdivrl
imul
repz
sub
sub
xor
mov
rol
or
lods
ljmp
sbb
mov
or
outsb
stos
es
imul
out
xor
add
loopne
mov
pop
jmp
outsl
insb
fildl
mov
xor
push
les
cmp
jo
out
rcll
mov
fcmove
jg
call
cmpsb
jns
pushf
fdivs
loope
xorl
repz
bound
int3
lahf
in
cld
jle
repnz
mov
adc
adc
in
orl
jecxz
xor
sahf
call
repnz
mov
inc
push
or
xchg
and
popa
push
insl
dec
jle
loopne
mov
sbb
sub
mov
icebp
dec
add
push
scas
pop
adc
stos
xchg
pop
xchg
rclb
pop
lds
and
aaa
sbb
push
sbb
mov
hlt
imul
xchg
stos
mov
add
push
mov
ss
and
xchg
xchg
push
sbb
jp
push
mov
iret
mov
xor
clc
push
inc
pop
cmp
mov
mov
fdiv
pop
jb
ljmp
jns
ret
mov
or
in
xor
mov
ljmp
inc
fdivs
mov
and
push
mov
out
push
sbb
jge
movsb
cmp
mov
std
adc
fwait
dec
bound
push
ss
dec
sbb
push
add
pop
push
test
pop
cmp
jns
inc
fs
and
fldt
ret
or
add
jo
out
mov
push
mov
das
daa
jnp
xchg
int
loopne
in
inc
leave
xor
ds
lods
add
or
addr16
int3
ljmp
rorb
fcom
cmpsb
js
mov
aas
test
sarl
test
pushf
mov
lret
loope
mov
lret
dec
pop
sub
mov
jmp
jne
cmpsl
push
and
dec
xor
jbe
in
cmp
jmp
xchg
sbb
push
push
mov
fadds
add
insl
int3
rorb
cwtl
jecxz
push
scas
add
xor
lahf
cmp
out
pusha
pop
pusha
jo
mov
sbb
push
sub
incl
or
cmpsb
int3
mov
into
push
imul
nop
imul
aad
fsubr
movsl
clc
dec
inc
lods
pop
mov
pushf
loopne
cmpb
push
sub
dec
push
fnstenv
and
mov
cli
pop
insl
verw
in
repnz
adc
lret
ss
outsb
fistpll
sub
cmpsb
sub
jmp
mov
sub
scas
cmp
cmp
xor
jg
add
fcomps
inc
xchg
cmp
lahf
cmp
push
jbe
push
pop
stos
sbb
ds
aam
loope
hlt
aad
lds
inc
add
je
add
adc
and
xor
les
hlt
aad
lds
inc
add
je
add
adc
and
xor
rolb
aad
mov
add
jge
add
sub
xchg
mov
movsl
mov
test
xchg
jne
gs
mov
and
insb
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cltd
sub
or
sbb
and
pop
add
inc
mov
adc
add
xor
and
fsubrl
les
hlt
or
sbb
movsb
sub
movsb
inc
mov
adc
pusha
cli
xor
and
push
xor
adc
add
pop
inc
push
test
fwait
adc
add
mov
push
mov
fs
mov
xchg
jg
mov
cmpsl
mov
jb
cmc
jnp
out
fwait
iret
adc
jno
adc
mov
add
les
jnp
lahf
mov
cmpsl
rclb
inc
mov
addr16
mov
and
fs
sbb
cmc
push
sarb
adc
mov
addr16
mov
enter
jbe
mov
mov
xchg
push
cmpsb
fldl
pop
inc
fs
adc
and
fcmovne
push
lods
cmp
or
and
imul
xor
addr16
ljmp
push
xlat
les
inc
xchg
sbb
jl
xor
or
fs
rolb
lret
out
les
hlt
adc
js
dec
sbb
cmpsb
test
mov
je
sbb
xor
inc
fldenv
insl
mov
push
sbb
movl
cli
inc
cmpsl
arpl
jnp
ja
push
xlat
push
faddl
lcall
lods
cmpsb
sub
cmp
test
dec
movsb
pop
push
test
mov
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
test
mov
adc
add
xor
and
aam
add
pop
mov
mov
jmp
xchg
inc
testl
roll
add
pushl
mov
popf
pop
aam
pop
pop
jl
push
mov
xchg
inc
cwtl
xchg
dec
lods
jne
in
in
mov
aaa
xor
aam
mov
lahf
sub
mov
xor
adc
popa
and
sbb
lods
mov
hlt
xchg
rcrb
add
jecxz
xchg
jno
sub
imul
repz
push
push
xor
sub
rorl
nop
sub
cltd
enter
xchg
push
js
test
push
push
pop
testb
adc
ret
add
or
push
mov
pop
xchg
fisttpll
dec
jne
sbb
jl
mov
fwait
or
xchg
lcall
mov
outsb
xchg
cmp
xor
jbe
or
jne
sbb
repnz
shlb
incl
push
inc
inc
ret
adc
mov
and
sub
stc
jecxz
add
adc
sub
int3
sbb
or
dec
divl
imul
fisubrs
negb
cmp
jmp
mov
sub
rcrl
inc
mov
fstpt
es
clc
test
inc
in
push
std
xchg
stos
xchg
inc
inc
and
int
enter
cmp
iret
insb
out
push
jg
out
sbb
imul
ficoms
adc
sbb
cmp
fcompl
ret
jl
jo
les
mov
jl
ljmp
shrl
mov
sub
jb
mov
out
aam
jmp
mov
sbb
push
xor
xlat
mov
mov
xchg
call
dec
and
xor
ljmp
xchg
jae
fisubs
and
mov
fwait
rcl
dec
mov
fnstsw
inc
lcall
outsb
scas
mov
push
mov
sub
in
add
fs
adc
rolb
pop
inc
xchg
cmpsl
shl
and
inc
outsb
mov
in
pop
imul
jmp
mov
iret
js
pop
hlt
mov
cwtl
mov
xchg
xchg
lock
dec
dec
fistpl
sbb
jg
call
xchg
into
or
in
std
xor
popa
repz
push
adc
add
scas
sub
mov
jb
inc
sbb
push
test
mulb
adc
mov
xchg
mov
fistpll
outsl
insb
shlb
adc
pop
inc
pop
int3
lea
aaa
jo
fs
aaa
imul
xor
inc
inc
cmp
out
jns
push
mov
shlb
fucomi
add
lods
mov
mov
out
inc
neg
pop
aas
cltd
pop
out
jno
cli
in
push
enter
cwtl
sbbb
mov
js
iret
shr
push
gs
das
inc
loope
jne
mov
mov
sub
icebp
add
shlb
les
mov
enter
cmp
dec
addb
aam
fs
mul
fisubl
out
fwait
push
jge
movsl
fdivl
sbb
inc
lds
jbe
adc
push
imul
push
insb
pop
pop
pop
xor
repnz
cmpsb
cmpsl
xor
mov
inc
cld
jmp
mov
xor
or
call
loopne
push
jg
add
push
fdivrl
sub
loopne
dec
in
pop
je
test
jno
insl
loope
insb
cmp
lret
adc
inc
insb
leave
mov
xchg
fmull
add
or
lcall
sub
xchg
push
cli
test
faddl
add
pop
jge,pt
test
mov
xor
arpl
xor
xor
rorb
sub
loope
xor
and
inc
pop
and
sbb
and
jns
jp
aam
clc
mov
jb
std
negl
inc
shll
pusha
pop
fdivl
push
cmp
jns
lcall
fstps
jmp
insl
mov
and
test
add
mov
call
rcll
insl
mov
insl
push
cmp
add
icebp
arpl
js
test
dec
sub
adc
push
in
lret
push
popa
lds
cmp
adc
xor
and
jnp
rol
loopne
jg
movsl
es
mov
rorb
or
jnp
call
lock
cmp
mov
push
jae
lods
call
xchg
push
or
jp
inc
ds
adc
and
aas
add
mov
cmp
stos
mov
mov
jb
js
mov
jmp
mov
dec
xchg
dec
pop
and
sbb
pop
jbe
mov
mov
cltd
jmp
lahf
ja
jns
sbb
lcall
lcall
mov
inc
aaa
stos
shlb
push
repnz
ds
cmp
push
xchg
cli
pop
inc
inc
push
and
pushf
push
sub
pusha
mov
sub
add
mov
push
add
push
mov
mov
leave
fdivr
movsb
sbb
lahf
das
fs
pop
shlb
dec
sbb
jo
xchg
pop
mov
mov
sti
xor
mov
cmp
in
in
xchg
pop
xchg
popf
loopne
fdiv
insl
xor
push
pop
cmp
sub
mov
fildl
inc
arpl
and
push
lods
shl
inc
lret
push
scas
pop
int3
inc
pop
or
out
mov
loope
loope
movb
sbb
pop
mov
jo
sbbl
scas
aam
mov
lret
inc
and
inc
movl
mov
imul
call
cmp
in
xor
xchg
rolb
lods
mov
pushf
pop
mov
jge
mov
xor
lods
fld
hlt
xlat
cld
aam
and
xor
xchg
jno
adc
in
das
cwtl
inc
fdecstp
punpckhdq
in
mov
inc
dec
sbb
ret
roll
jb
sbb
jo
cmp
pop
dec
pop
adc
cmp
inc
cmpsl
push
cmpsl
pushl
mov
jo
je
loope
loopne
cmc
std
and
xor
push
xor
test
mov
jle
mov
int3
mov
inc
fnstenv
rorb
nop
aad
imul
shrl
rcr
xchg
call
in
stos
lret
sti
repz
and
add
mov
xchg
push
pop
lods
test
mov
js
cmp
jae
sti
xchg
outsl
mov
and
xor
repnz
dec
fiadds
sub
mov
inc
fwait
sbb
mov
mov
das
jmp
cwtl
jnp
cli
jmp
out
lds
mov
jb
adc
cltd
jno
mov
sub
cmp
jnp
leave
mov
xor
and
vmovd
push
lods
testl
mov
push
cmp
stos
enter
pop
cmp
inc
das
aad
sub
dec
mov
xor
fildl
fdivl
fisubl
cltd
ja
xor
xor
xor
lretw
out
adc
and
inc
cwtl
xor
add
xchg
xchg
adc
dec
dec
lret
jp
lahf
mov
fs
ss
sub
dec
data16
lods
jnp
lret
sub
je
inc
push
nop
xor
lahf
dec
movsb
xchg
mov
lods
lret
sbb
test
mov
jo
xchg
sahf
test
mov
pop
sub
push
jmp
mov
mov
adc
mov
and
add
adc
in
aad
push
push
fnstenv
repnz
stos
andb
jl
imulb
jne
cs
sub
repnz
ss
xchg
inc
inc
cs
adc
in
outsl
push
into
mov
les
orl
xchg
inc
or
or
pop
xor
popf
popl
lret
out
stos
dec
ret
push
xor
in
addr16
mov
pop
mov
adc
lds
int
call
lret
xor
cmp
dec
je
sub
out
jp
imul
ret
fistpll
sub
mov
stos
test
popf
leave
adcb
jb
mov
jae
lsl
fnstsw
jge
clc
test
sub
jns
sbb
les
push
mov
mov
sbb
xchg
mov
sbb
lahf
jbe
mov
rclb
aad
pop
push
imul
add
or
xchg
jp
pop
pop
push
into
fmull
in
sub
lret
sarl
inc
fidivs
add
aaa
sarb
pop
mov
outsl
sbb
xchg
cmc
lcall
icebp
mov
push
cli
push
sub
scas
push
add
rcrl
into
xchg
pop
lods
inc
das
dec
fidivs
outsb
and
mov
setl
stos
and
dec
dec
jg
in
fdiv
inc
lds
mov
inc
decl
mov
dec
dec
xor
push
ds
test
mov
push
clc
mov
mov
aad
or
out
xor
or
jno
rolb
mov
mov
sub
cwtl
adc
add
pop
mov
sbb
sbb
in
mov
or
jmp
xchg
mov
push
mov
imul
repnz
addl
out
clc
adcl
add
lret
dec
or
mov
lret
add
fsubr
mov
jo
adc
sub
xchg
roll
inc
add
sti
cmp
mov
insl
jne,pt
inc
stc
lock
jbe
loopne
or
add
jb
pop
adc
daa
sub
push
jo
jge
in
fidivrs
xchg
jno
xor
xchg
pop
mov
xchg
fs
stos
xor
pushf
mov
xchg
inc
inc
ds
jmp
jle
xor
mov
jo
jae
jecxz
push
pop
sub
mov
and
movsb
repnz
and
mov
jb
fdivrs
daa
xchg
sub
push
imul
sub
inc
inc
cmc
mov
pushf
adc
sub
fstps
cmp
das
bswap
out
sub
cmpsb
lcall
jbe
add
je
dec
xchg
sbb
mov
mov
adc
out
fs
sub
jg
mov
inc
stos
stos
dec
cmpsl
shlb
add
orl
mov
movsl
inc
fisttpll
push
xor
fsubrs
or
mov
ret
mov
adc
testl
push
push
mov
dec
pop
push
push
inc
jmp
pop
adc
rcll
or
sbb
fcomps
pushf
pushf
jbe
js
jno
mov
outsl
sub
ret
add
sub
xor
mov
int3
inc
cli
inc
test
leave
add
push
inc
pop
rcrb
icebp
pop
sub
jbe
rcl
scas
mov
out
xor
insl
aad
xchg
mov
adc
leave
xchg
or
out
sahf
test
les
enter
sub
push
shlb
cmc
xor
sub
pop
and
cmc
fbstp
sbbb
add
insl
stc
xor
jmp
pop
inc
out
mov
push
cmp
test
push
xchg
das
and
sbb
pop
cmp
cmp
add
int
or
mov
and
lock
jmp
push
test
cmp
jb
inc
ja
arpl
xor
mov
jnp
dec
pop
jmp
pop
jo
and
pusha
cmpsl
xor
push
stos
mov
ss
or
inc
inc
in
mov
stos
out
cltd
pop
push
jl
lret
fistl
pop
fidivrs
rclb
jl
jp
sbb
jmp
icebp
dec
dec
jecxz
push
mov
xor
call
push
ret
outsb
int
mov
jo
bound
xchg
pop
repz
jge
mov
sbb
loope
movsl
nop
and
loop
dec
aaa
dec
shlb
push
xchg
popa
scas
jb
push
data16
sbb
into
xchg
xchg
and
daa
je
sub
lds
jae
mov
mov
fisubrl
fxch
push
cli
xor
roll
jbe
in
outsb
mov
or
mov
and
push
add
ret
dec
mov
sub
outsb
mov
je
mov
pop
sub
sbb
cmp
cmc
out
jle
lock
aas
sbb
testl
xor
push
or
repnz
jecxz
repz
repz
pop
cmp
and
push
mov
hlt
je
flds
loop
and
xor
xchg
sub
scas
and
and
lret
imul
xor
xchg
sbb
pop
lret
les
adc
sbb
sbb
sub
repz
testl
iret
call
adc
loopne
push
push
sahf
sbb
fisubs
jecxz
test
xchg
push
jecxz
xor
subb
leave
or
adc
add
out
in
add
ret
add
js
xor
fnstenv
xor
ret
jo
jnp
xchg
or
sbb
jbe
mov
lcall
inc
std
dec
cmc
fisttps
lods
cmpsb
data16
aad
hlt
ljmp
imul
imul
wbinvd
daa
fisttpll
push
pop
orb
fldcw
int3
mov
add
bound
daa
push
dec
xor
lds
repnz
xadd
pop
and
xor
mov
cwtl
mov
push
cmpsl
insb
jbe
stos
test
in
mov
or
sbb
xor
jg
scas
mov
shl
or
dec
aas
es
mov
scas
test
xchg
mov
cld
push
inc
sbb
cmc
loopne
xorb
cmc
loope
jg
adc
getsec
or
popa
inc
lea
push
inc
mov
in
push
rorl
or
jnp
or
sti
mov
sbb
jnp
jg
mov
lret
sti
scas
xchg
mov
mov
inc
popa
sub
dec
mov
add
mov
scas
and
mov
rol
mov
adc
outsl
or
fmuls
xchg
ret
ja
mov
ss
inc
xchg
pop
adc
rcll
cmpl
and
or
jle
insb
xchg
jae
imul
cmp
add
test
in
or
fsubs
mov
inc
cmp
call
sub
dec
jns
lods
lods
jecxz
mov
add
push
jmp
jae
mov
inc
pcmpeqd
or
add
popf
inc
dec
adc
inc
pushf
adc
inc
jecxz
stos
fstps
mov
mov
sti
dec
popa
das
xor
test
jg
stos
pop
jnp
ss
repnz
ret
cmp
push
cmc
jnp
xchg
cmp
mov
mov
jo
data16
jne
dec
fdivrs
cld
jmp
call
adc
cwtl
lock
lcall
cmp
or
adc
dec
iret
test
jnp
les
fsubrs
lods
dec
sub
lods
and
add
or
jmp
xchg
cs
js
lahf
adc
inc
push
inc
std
mov
loop
test
imul
rorb
insl
movsb
add
loop
lcall
xchg
outsb
xlat
dec
imul
pop
out
test
xor
aad
sub
mov
mov
sub
mov
jo
hlt
xchg
xchg
bswap
inc
sahf
lret
pop
adc
push
jbe
xchg
cmp
adc
and
mov
icebp
pop
cmp
cmp
xor
jo
imul
adc
mov
push
and
inc
jl
inc
and
ret
stos
add
sbb
addl
xchg
cmpsl
push
mov
push
mov
pop
enter
loope
push
adc
xchg
stc
test
fisubl
jno
adc
mov
jbe
jno
mov
sub
mov
jg
cmp
xchg
sbb
sub
icebp
into
pop
add
mov
fsubrs
stos
mov
mov
xchg
mov
jmp
xchg
icebp
mov
das
mov
sbbb
mov
xorb
xlat
push
es
pusha
xchg
cmc
cmp
or
mov
xor
or
mov
push
aas
xchg
dec
mov
jne
insb
dec
pusha
and
dec
jae
xchg
add
int
add
mov
inc
adc
mov
or
ret
dec
shrb
sahf
or
lcall
popf
cmp
xchg
mov
jb
xchg
insb
mov
inc
cmpb
jp,pn
fcoms
imulb
test
lock
jmp
adc
outsb
xchg
xchg
stos
fs
mov
add
bound
and
cmp
hlt
adcb
jns
out
addr16
ficompl
xlat
jp
ficomps
pop
clc
out
add
outsb
testb
ficoms
sti
jae
mov
es
xor
in
call
sbb
xor
push
stc
xor
xor
or
ret
and
add
addr16
adc
scas
idivb
mov
mov
cmp
mov
and
mov
xor
aaa
dec
or
cmpsl
into
pop
mov
xchg
pop
xor
xor
dec
push
jae
ret
rcrb
insb
jmp
in
roll
dec
rcrl
inc
es
cli
sbb
pop
je
cltd
pop
xlat
inc
pop
aam
and
lds
push
out
scas
or
and
mov
mov
lock
test
lss
aaa
cmp
jl
sub
ror
aad
out
xor
lahf
cmp
xchg
ss
gs
sub
mov
dec
pop
shl
mov
je
stc
push
in
outsl
mov
cmp
es
in
pusha
aaa
cmpsl
jp
or
xchg
cli
shll
shlb
fwait
rcll
ljmp
mov
and
mov
xor
scas
in
fwait
imul
loope
cwtl
hlt
mov
push
dec
cld
add
imul
and
aaa
push
pop
xor
add
out
out
cmp
adc
in
adc
andb
xor
insb
cmp
push
push
bound
sub
rorb
mov
scas
addr16
pop
roll
fs
cmp
test
and
pusha
sub
inc
mov
int3
sbb
sub
flds
stc
lea
cmp
add
sub
jno
sub
data16
iret
mov
loop
fisubrl
cmp
movsl
test
dec
push
imul
or
cli
cmp
int
sbb
push
js
out
icebp
roll
add
cmc
lret
lahf
sub
add
dec
push
add
and
ficoml
mov
bound
icebp
shlb
adc
xor
mov
loopne
test
jnp
testb
test
mov
adc
and
mov
les
stos
dec
add
push
jecxz
cmp
repz
lret
nop
or
imul
cmp
sub
and
in
or
dec
pop
sbb
imul
cmp
fmuls
lock
in
xor
int
sahf
adc
mov
rorl
fldl
adc
scas
filds
sahf
add
mov
dec
sub
cwtl
ja
roll
add
retw
lret
bound
movsb
in
adc
dec
and
int3
aam
data16
pop
fnstenv
pop
rcll
mov
test
dec
out
jno
or
or
and
aam
imul
jnp
movsl
in
xor
xorb
jne
xchg
adc
outsb
mov
cld
mov
cmpb
outsb
movsb
es
pop
mov
pushf
insb
iret
imul
std
push
filds
sub
es
mov
lea
nop
xor
add
push
push
cmc
fildl
lcall
insl
lahf
mov
test
jecxz
incb
or
jmp
xchg
ljmp
push
dec
pop
pop
inc
lods
ret
lret
sti
jne
addr16
aas
roll
mov
clc
jb
mov
xchg
push
cmpsb
sub
xchg
or
and
outsl
negl
mov
lahf
incl
enter
mov
bound
inc
test
adc
pop
mov
lcall
mov
pop
repnz
push
cmp
fldl2t
insb
lret
inc
or
and
arpl
cmp
add
jne
adc
repnz
cld
movsb
in
push
lcall
cmp
or
sbb
movsb
pop
push
test
mov
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
test
mov
adc
add
xor
and
aam
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
sbb
fmul
sub
cmp
or
sbb
and
push
test
adc
mov
pusha
mov
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
