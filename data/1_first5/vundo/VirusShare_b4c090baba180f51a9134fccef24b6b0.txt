jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
ret
xor
mov
notl
dec
pop
or
pop
add
add
add
push
add
add
add
lock
add
add
add
add
test
icebp
add
add
add
adc
dec
add
nop
add
add
test
hlt
add
add
add
add
add
add
add
test
in
inc
add
fiaddl
pop
add
sub
and
add
add
rolb
add
add
push
add
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
sub
inc
add
lahf
add
add
sldt
sbb
inc
add
add
add
add
add
add
mov
aam
test
cmp
rolb
add
mov
lahf
add
inc
add
add
add
inc
add
add
add
flds
test
add
add
fldl
test
cmp
pop
add
add
xchg
add
add
add
add
cwtl
add
add
pop
add
add
mov
test
pop
add
add
ja
sub
inc
add
add
add
add
add
add
sbb
test
sbb
inc
add
add
add
add
add
xchg
add
add
ja
or
movsb
add
adc
flds
daa
add
sbb
pop
add
add
add
add
add
inc
add
add
add
mov
add
add
add
add
add
add
pop
add
mov
or
popa
add
ds
add
add
add
cmp
test
push
add
add
inc
add
pop
add
add
xor
fiadds
add
daa
add
sub
loop
or
add
mov
and
mov
push
add
add
les
test
cmp
add
add
and
test
movsb
add
add
xchg
dec
add
add
pop
add
add
mov
add
add
add
add
xor
add
ja
cmp
test
insl
add
add
add
insl
add
les
rolb
cmp
test
push
add
sbb
rolb
add
pop
add
pop
add
add
add
add
aas
add
fiadds
xor
inc
add
add
ds
add
add
inc
add
add
add
add
inc
add
aaa
add
in
ds
add
add
filds
pop
add
jae
push
add
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
aam
rolb
sub
test
scas
add
add
mov
push
add
add
add
add
pop
add
test
jae
pop
add
add
add
add
pop
add
jno
push
add
add
gs
add
inc
add
add
mov
imul
add
insb
add
add
add
sub
rolb
cmp
test
pop
add
loope
pop
add
test
insb
add
fwait
add
dec
add
add
pop
add
adc
rolb
test
pop
add
add
add
add
add
xor
add
lock
add
add
inc
add
xor
push
add
cmp
in
fwait
add
add
add
add
ds
sub
jae
int
jg
cmp
push
push
sbb
xor
mov
xchg
aaa
cmp
mov
out
int3
stos
gs
push
hlt
lcall
cmp
jmp
imul
adc
adc
andl
adc
lret
xlat
dec
dec
lods
flds
inc
bound
bswap
fstps
mov
gs
aas
sbb
pop
pushf
push
xchg
mov
shlb
or
mov
mov
dec
or
jl
xchg
roll
stos
jp
push
fcompl
mov
xor
xchg
rol
push
or
inc
repz
jp
nop
push
stos
mov
cmp
dec
daa
fsubs
mov
pop
mov
jmp
dec
xchg
and
mov
mov
mov
mov
les
jl
imul
movsl
lret
enter
fwait
std
adc
xor
add
mov
bound
dec
cwtl
ficoms
inc
push
mov
aam
loopne
shrl
imull
iret
insb
xchg
push
cld
ret
movsl
or
xorl
xchg
ljmp
lods
push
daa
xchg
fs
shl
mov
and
lods
pop
pushf
and
lds
mov
idivl
stc
imul
xchg
loop
dec
jecxz
into
sub
cli
cld
jmp
shlb
inc
rcl
cmp
xchg
cmp
cmpb
xor
cmp
xchg
cmp
lcall
xor
in
scas
mov
inc
dec
loope
inc
stc
push
xor
jb
insb
push
movsb
sti
add
cmp
xor
and
ja
iret
jmp
sub
fst
rcll
jbe
lock
rorl
jae
scas
cmp
cmp
mov
repnz
mov
sub
and
add
jnp
mov
adc
mov
adc
outsl
add
out
pop
cli
test
pop
sahf
pop
pop
movsb
adc
jnp
fadd
push
push
aaa
test
mov
aaa
jl
fisubl
test
outsb
pop
push
pushl
roll
jne
rclb
cltd
andb
jmp
arpl
xor
mov
xchg
fdivrl
sub
sbb
and
decb
push
js
inc
lret
insb
popa
and
out
jle
sub
cwtl
push
or
into
and
ds
mov
pushf
jne
lcall
popf
enter
or
cmp
ljmp
xchg
lret
push
pop
clc
adc
inc
jecxz
dec
lods
sbb
in
mov
jno
mov
xlat
jae
and
stc
imul
fsts
ffreep
arpl
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pop
inc
dec
push
jp
push
scas
add
xor
fstpt
in
cmc
lcall
mov
inc
dec
push
jp
push
sbb
sub
cli
in
cmc
lcall
mov
inc
push
push
bound
jne
add
sub
movsl
adcb
out
std
ret
and
adc
or
sti
es
xor
sub
mov
xchg
or
loopne
pop
fwait
jno
inc
mov
add
clc
xor
mov
sub
sbb
lret
into
mov
push
mov
mov
mov
mov
ljmp
jecxz
or
sub
inc
mov
dec
and
add
adc
push
cmp
sub
and
jne
shrb
stos
negl
adc
ja
fidivl
sti
sbb
cmc
mov
mov
stos
inc
cmp
dec
or
and
nop
mov
lds
inc
push
push
jp
push
or
and
rcl
loop
repz
addb
repz
das
sub
and
xor
inc
insb
popa
ja
sub
mov
int3
mov
out
ror
xlat
shlb
sub
or
jb
sbb
subb
int3
ror
aas
add
push
push
add
or
cmp
lret
in
cmc
lcall
mov
inc
dec
push
jp
push
sbb
sub
cli
in
cmc
lcall
mov
inc
gs
or
mov
lock
mov
out
dec
mov
pop
les
popf
scas
mov
cmc
or
pop
data16
arpl
aam
out
ljmp
jb
and
xchg
lds
push
push
jno
push
test
inc
mov
jo
jmp
dec
cmp
andl
sub
jmp
pop
fimull
cmp
sub
inc
test
ror
jno
pop
test
pop
inc
ja
popa
daa
out
mov
ja
xchg
test
cmp
add
jno
xlat
int3
mov
cmp
pushf
fildl
xchg
sahf
xchg
jbe
pop
adc
lea
cmp
xor
lret
mov
or
mov
mov
fdiv
leave
cld
push
imul
mov
add
ljmp
pop
jo
xchg
add
mov
xor
push
xchg
push
pop
jo
lods
or
push
cld
imul
ja
add
in
out
sbb
sarl
adc
cmc
pop
lods
mov
mov
ret
push
mov
adc
pop
jo
mov
pop
pop
mov
dec
push
xor
bound
data16
push
dec
stos
pop
dec
cmp
sbb
lret
xchg
sub
lea
jmp
ror
mov
not
dec
test
push
jns
or
jo
adc
lds
test
dec
xchg
mov
jmp
aam
or
inc
mov
xor
mov
cld
push
sbb
sbb
js
push
cwtl
mov
mov
mov
mov
sub
jecxz
dec
insl
into
dec
iret
mov
xchg
popf
mov
or
test
sarl
jg
in
cmpsb
and
xchg
nop
rorl
das
aaa
lcall
add
cmp
pop
fisttpll
mov
clc
sub
pop
dec
dec
sahf
adc
xor
cmc
or
ljmp
push
scas
in
dec
test
test
jp
or
pusha
mov
jns
add
insl
mov
pop
mov
xchg
adc
repnz
insb
mov
sbb
xchg
jecxz
jns
lods
repnz
pop
or
gs
inc
inc
mov
xchg
mov
shll
pop
hlt
inc
push
add
and
in
fstps
mov
jge
mov
shrb
or
push
push
xchg
enter
xchg
in
sahf
out
pop
stos
or
push
enter
sbb
pop
sbb
sub
xor
stc
out
ret
fstpt
sbb
imul
mov
or
mov
fwait
mov
push
popa
ja
in
or
or
jg
push
cwtl
mov
ja,pn
fs
add
mov
cmp
and
repnz
cwtl
mov
rolb
adc
loop
cli
mov
out
or
aad
fdivs
bound
pop
dec
mov
hlt
xchg
cs
imul
adc
insl
and
rcrb
mov
icebp
mov
push
xchg
dec
cli
cwtl
mov
cmp
test
mov
mov
out
xchg
sahf
jge
in
lret
and
addl
sub
inc
cmpsl
notb
ja
cmp
xchg
in
fisubrl
iret
bound
add
lods
dec
movsb
xor
xlat
shrb
mov
cmp
mov
xor
lock
data16
mov
inc
scas
fldcw
loop
test
push
negb
cmp
sub
fwait
insb
shll
and
push
push
jp
jno
push
and
jp
stc
imul
adc
mov
cmp
mov
push
imul
sub
rcr
out
push
cmpb
mov
mov
sub
inc
and
lcall
pop
js
movsl
ss
lcall
sahf
dec
jae
loope
ja
cmpsl
out
sub
lods
pop
xor
xchg
vcvtps2pd
inc
incb
sbb
daa
out
fiadds
in
cs
in
or
jecxz
pusha
out
inc
mov
clc
inc
in
imul
aam
mov
sbb
add
test
push
lds
cmp
lcall
rep
fsts
xor
lods
inc
cmp
jecxz
pusha
add
fdivs
sbbb
rep
mov
push
popa
fwait
leave
lret
adc
mov
pop
cmp
out
jg
inc
push
mov
xor
mov
adc
and
jl
sbbl
dec
and
lock
push
jno
xchg
cmp
dec
setle
mov
xlat
bound
mov
sbb
mov
adcb
mov
sbb
aaa
inc
inc
jg
jns
cld
adc
jl
add
fidivl
and
movsb
sub
cmp
pop
push
xchg
cmpsl
mov
mov
add
lock
mov
lds
pop
fs
outsl
push
jp
ffree
jnp
pop
loopne
add
bound
sbb
scas
cmc
outsb
mov
jp
iret
push
cs
add
je
mov
xcrypt-ofb
cmpsl
sub
outsl
scas
jmp
outsl
loop
mov
push
pop
mov
imul
inc
jnp
xorb
and
xchg
cmp
js
cmpsl
mov
aas
cmp
out
xchg
push
aaa
scas
cmpb
test
negl
jae
xor
add
pop
dec
jmp
sub
push
fwait
push
adc
jbe
mov
sti
rcl
or
xlat
jle
insb
inc
push
movsl
test
mov
aad
jne
mov
push
and
jo
aas
jne
push
imull
mov
fs
push
negb
repz
out
adc
push
cmp
mov
pop
in
jge
das
inc
push
push
dec
pop
cmp
lret
mov
xchg
imul
ja
fmuls
jb
test
inc
js
or
xchg
leave
in
pushf
sub
sbb
outsl
jg
and
mov
nop
xchg
cmpsl
popf
push
push
leave
add
imul
popa
dec
ficompl
fs
inc
push
fcoms
mov
mov
popa
scas
insb
and
push
sub
sbb
lods
imul
inc
cmp
jae
xor
or
mov
xlat
test
mov
push
or
jp
pushf
jmp
push
sbb
mov
lods
add
cs
xorb
test
nop
mov
lahf
and
sarb
ret
dec
mov
xor
xchg
insl
loop
dec
sbb
adc
jmp
xchg
pusha
cwtl
dec
mov
mov
mov
adcb
cmp
mov
sbb
sbb
or
pop
popf
pop
push
add
stc
imul
stc
sbb
xchg
outsb
jnp
out
jns
jp
jae
push
jecxz
add
jecxz
push
lret
daa
mov
mov
pop
cmp
icebp
xlat
jg
std
imul
out
ja
push
pop
je
out
sub
mov
jne
add
insl
dec
aaa
sbb
push
lret
sub
adc
xchg
xor
stc
dec
test
inc
cwtl
aaa
sti
adc
inc
stos
cmp
or
outsb
mov
jle
sbb
mov
das
cltd
dec
xchg
arpl
push
int3
add
mov
add
cmp
cltd
lock
nop
inc
aad
test
inc
ljmp
fucom
das
test
mov
pusha
mov
fdivs
insl
imul
xchg
filds
xorl
dec
xor
jg
icebp
hlt
pop
js
fs
mov
pushf
mov
fnsave
fcmovnu
mov
inc
repz
jp
sbb
inc
in
sbb
in
adcb
out
mov
popa
lret
xchg
sbb
xor
dec
mov
daa
push
mov
test
pushf
sarl
sub
push
mov
mov
mov
sbb
icebp
int3
cmp
dec
mov
scas
mov
and
inc
mov
shll
pushf
mov
mov
rcr
lock
stos
test
dec
fsubrl
xor
das
jp
sub
es
mov
hlt
push
adc
lcall
sub
lahf
sbb
add
insb
mov
and
push
adc
rclb
repz
cmp
lock
dec
aaa
sahf
mov
sub
or
aam
sub
sti
or
in
insb
mov
jbe
negb
dec
mov
and
stc
push
pop
outsl
cmpsb
adc
arpl
enter
inc
and
xchg
mov
repnz
fstpl
pop
repnz
cmpl
mov
mov
push
mov
inc
enter
sub
pop
lods
imul
adc
add
add
xor
sbb
je
shlb
sub
dec
lcall
insl
dec
loopne
mov
fbld
push
mov
xchg
scas
and
cli
dec
lahf
add
jg
add
sarb
lahf
popa
leave
adc
dec
jle
mov
xlat
mov
fistl
aam
movsl
adc
mov
or
xchg
adc
cmp
aas
cs
ficoml
fs
dec
pop
aas
mov
das
subb
cwtl
mov
xchg
dec
mov
mov
dec
and
fwait
ror
ret
xchg
and
sbb
add
ret
popf
jp
lahf
or
call
mul
mov
lock
mov
sub
nop
push
push
lcall
aad
sbb
xchg
rcrl
aaa
fwait
inc
xor
scas
imul
fwait
lret
popa
xchg
test
inc
push
dec
pop
lock
int
mov
out
lea
jbe
xrelease
fiadds
jnp
out
popa
dec
mov
pop
mov
cmp
gs
icebp
add
push
fsubrs
and
sub
rolb
scas
xchg
andb
lahf
inc
mov
cmp
cmp
scas
cld
cwtl
jl
inc
dec
or
movsl
lret
std
stos
shlw
lea
loop
test
sbb
adcl
xchg
xor
ja
cmp
dec
pop
jo
rcrb
test
xchg
mov
pop
mov
adc
ljmp
mov
popa
mov
lahf
or
xor
mov
or
fcompl
mov
inc
out
test
xor
std
cld
iret
divl
fldl
mov
lock
aad
cmp
jl
dec
orb
test
test
adc
imulb
adc
stos
push
jg
enter
push
stos
push
enter
cwtl
jns
jns
and
jecxz
dec
and
push
cli
xchg
scas
pop
and
dec
into
lds
lods
dec
mov
mov
dec
xor
sub
jo
jg
fildll
pop
jge
xlat
hlt
mov
lcall
jne
in
xor
popa
loop
sbb
jbe
xchg
cmpsb
sbb
repnz
or
sub
in
add
test
subl
hlt
push
data16
mov
std
sbb
push
or
in
jns
dec
push
push
adc
leave
or
sarb
test
jns
cld
xchg
repz
lret
shrb
mov
or
fprem1
stc
insb
int3
adc
int
mov
sbb
adc
test
mov
cmpl
sahf
cmc
inc
mov
mov
lcall
std
std
dec
pop
arpl
push
int
inc
int3
inc
insb
stos
je
ss
mov
addb
mov
sub
loop
mov
ret
mov
stc
movsb
cli
fadd
sub
push
int
inc
mov
lods
pop
jmp
pop
inc
es
dec
sbb
aaa
mov
pop
jno
loopne
stos
and
movsb
mov
xor
or
fidivrs
lret
jae
insl
fs
mov
pop
jbe
repnz
in
or
add
inc
loope
lcall
add
pop
mov
ret
push
fiadds
sub
repnz
lods
push
outsb
ljmp
std
out
mov
call
ljmp
repnz
and
mov
mov
xor
es
repnz
ljmp
popf
mov
and
fldpi
mov
cmc
adcb
movsb
decb
hlt
lods
lods
vmovq
outsb
enter
mov
popf
in
outsb
mov
mov
cmp
cwtl
or
pop
cmp
loop
add
popf
leave
cmpsl
aaa
out
ret
dec
xchg
shll
or
fisttps
jb
popf
push
sub
je
pop
sub
add
loop
pop
sbb
cmp
lds
fcoms
les
xor
in
out
int3
das
push
and
and
cld
jnp
imul
inc
xor
sbb
test
out
push
jl
cwtl
push
cmp
out
sub
dec
lods
jecxz
and
push
xor
inc
lods
pop
shll
aaa
or
test
idivb
outsb
and
cmpsb
sti
jne
ss
mov
sbb
cs
in
xchg
xchg
pop
xor
out
sub
pop
jne
pushf
aas
sub
loopne
cmpsl
cmp
stc
movsl
or
cmp
into
mov
sub
mov
mov
mov
mov
outsb
push
pop
leave
jne
sbb
cmp
popa
std
lods
bnd
push
aad
fisubl
fisubl
xchg
arpl
xor
rcr
push
jbe
jno
aas
loopne
mov
cwtl
sbb
or
mov
scas
out
mov
inc
xchg
iret
loope
dec
inc
inc
mov
fsts
popl
jne
dec
and
mov
icebp
int
pop
aam
dec
jne
rol
adc
fidivs
sub
and
loopne
cmp
jecxz
mov
cmp
call
out
and
aad
pop
fmull
pop
imul
test
lret
stos
xchg
or
pop
out
xchg
mov
dec
inc
push
mov
iret
ljmp
pop
cmp
daa
out
test
sub
cmp
int
lods
mov
mov
pop
jbe
xorl
pushf
gs
xchg
popa
daa
rorb
jge,pn
mov
movsl
or
adc
cwtl
sub
jnp
shll
mov
rorb
jge
lret
and
push
vcvttss2usi
sarl
js
mov
xchg
mov
mov
jp
jge
add
cli
scas
jb
imul
and
mov
mov
mov
repz
push
add
loope
stos
jnp
out
add
mov
sbb
xchg
stos
icebp
ja
fcoml
xor
pop
inc
sbb
inc
subl
leave
push
xor
das
xchg
sbb
xchg
mov
cmp
sbb
mov
mov
pop
loope
imul
sahf
aas
push
inc
stc
sti
xchg
and
addr16
inc
les
push
pop
lods
icebp
pop
cmc
rcrl
fidivl
mov
sbbl
add
dec
out
into
into
cltd
mov
jbe
jb
fsubr
mov
sub
out
jg
cmp
enter
add
movd
dec
cmp
xor
mov
in
pop
mov
lret
mulb
in
inc
shlb
adcl
cmp
in
jl
mov
xchg
or
in
test
jle
scas
pop
cmp
cwtl
xchg
leave
xchg
cmpsl
xchg
sbb
je
mov
out
add
das
orb
out
jo
int
dec
mov
loopne
push
sti
add
dec
outsb
pop
outsb
fidivl
push
jmp
das
dec
push
inc
repnz
push
pop
push
cmp
jg
adc
push
mov
xchg
sbb
gs
jmp
xchg
movsl
cwtl
sub
sbb
ret
mov
pop
out
dec
mov
push
jno
out
push
in
test
mov
push
push
addr16
jmp
mov
xor
cltd
cmpsb
outsw
lret
mov
or
pop
jae
jo
pusha
cmp
sti
gs
mov
fisttps
out
jns
aad
push
bound
jge
ret
arpl
sbb
shlb
scas
sub
je
mov
dec
inc
int
gs
inc
je
lret
js
cwtl
pop
xchg
mov
pop
dec
lret
jb
andl
bound
cs
movsl
into
out
mov
clc
outsb
push
arpl
movsb
sarl
icebp
xchg
jae
cmp
adc
pcmpeqb
xor
mov
aad
mov
pop
inc
int
ficomps
ja
cmpsl
fadd
loopne
fisttpll
pop
push
rorb
cltd
dec
mov
sub
scas
scas
jl
mov
push
or
mov
bound
out
mov
das
subl
mov
dec
outsb
xchg
push
mull
lsl
mov
dec
add
mov
lea
loop
stos
roll
imul
sbbl
lds
or
dec
ja
sti
cld
xchg
ror
movsl
sub
or
iret
out
mov
pop
pushf
ljmp
cmp
ja
mov
test
pop
xchg
arpl
cwtl
push
gs
sbb
movsl
sarl
add
in
push
mov
pop
xlat
mov
rcll
mov
dec
jl
ds
popa
push
xor
mov
pop
fsubrl
mov
lock
test
add
cmp
dec
pop
push
xchg
mov
jge
jle
push
dec
add
fwait
cli
loopne
cmp
ds
mov
or
sbb
and
mov
sbbl
pop
mov
repz
es
pop
push
add
outsb
ret
and
add
mov
ror
cmp
outsl
xorl
cmp
xor
rcrw
sbb
cld
or
test
mov
popf
cld
mov
jo
jge
cmp
js
popa
mov
ljmp
push
ja
inc
int3
add
dec
shll
push
or
in
in
or
pop
lods
mov
into
mov
pop
inc
mov
jl
cltd
pop
stos
negb
sub
les
scas
mov
add
xchg
jp,pt
cltd
shlb
je
scas
hlt
fidivrs
push
scas
gs
jmp
test
jecxz
sbb
xor
cmpsb
mov
fists
stc
loope
outsb
push
cmc
cli
rcl
bound
jmp
inc
sub
daa
cmp
add
sahf
scas
pop
add
sub
push
inc
cmp
ret
aas
push
pop
pop
ja
loopne
mov
fwait
shl
cmc
fdivrs
lret
sti
mov
inc
mov
inc
jmp
xchg
adc
lea
mov
sub
inc
lods
mov
mov
jno
jge
fisubs
fcmovbe
cmp
xchg
int3
xor
lods
jns
add
xor
ljmp
add
ss
jne
adc
shlb
ret
shlb
mov
cmp
cld
xchg
leave
fnsave
jo
cld
jl,pn
dec
lret
add
add
aam
xchg
insl
addl
inc
mov
lea
mov
mov
cli
cmp
sub
mov
jl
pop
or
div
xchg
rcr
test
or
add
sub
imul
les
inc
and
mov
mov
push
pushw
or
daa
xchg
test
mov
movsb
lret
mov
cmpsl
xchg
adc
inc
stos
loopne
mov
fcoms
cmpsl
mov
or
or
fdivs
inc
int3
or
stos
mov
jne
mov
jae
sahf
mov
adc
or
inc
imul
dec
pop
hlt
mov
mov
scas
push
and
in
xchg
jecxz
or
pop
dec
sti
flds
enter
jmp
mov
mov
lods
sti
jb
sbbl
ja
adc
std
push
jle
mov
dec
out
or
test
in
outsb
das
ss
movsb
test
xor
cltd
neg
pop
nop
push
stos
call
in
movsb
cltd
ja
lcall
mov
cmp
or
mov
stos
sbb
rcll
mov
mov
out
jle
lret
xchg
adc
dec
cmp
loop
xor
push
jg
jo
lcall
enter
push
and
push
and
shrb
mov
sub
jle
or
xor
sbb
pop
addr16
jl
in
xchg
xchg
fimull
shlb
inc
mov
sub
mov
sbb
and
stos
cmp
rcll
movsl
call
add
sahf
jno
aam
sbb
xor
and
inc
lods
or
xchg
out
jb
jge
imul
fdivl
das
push
sub
cmp
dec
adc
xor
and
dec
inc
pushf
xchg
test
sbb
sbb
pop
mov
imul
push
ret
jg
or
mov
push
jnp
inc
dec
dec
jmp
fisubrl
ja
and
lret
mov
or
jecxz
jae
mov
push
stos
outsb
das
nop
fwait
jno
add
adc
aam
bound
push
in
clc
jmp
mov
adc
adc
xchg
or
enter
in
sbb
fnstenv
lret
push
rcrb
or
cltd
loop
mov
fcomps
dec
test
or
lcall
fnstsw
fistl
gs
sbb
sub
cli
in
cmc
lcall
mov
inc
dec
push
jp
push
sbb
sub
cli
in
cmc
lcall
mov
inc
dec
push
jp
push
sbb
sub
cli
in
cmc
lcall
mov
inc
dec
push
jnp
push
sbb
stos
cmc
and
in
sub
add
pop
push
dec
outsb
xchg
and
adc
add
imul
movsb
je
sub
icebp
shll
hlt
push
movsb
test
jne
and
add
je
lds
lret
mov
cmp
in
aam
les
xor
shrl
jge
dec
call
mov
scas
es
push
lock
fildl
test
add
les
push
jl
cwtl
cmp
jbe
and
sahf
pop
cli
pop
ja
into
orb
cs
test
pop
mov
fwait
dec
movsb
or
stc
imul
jne
inc
mov
cmp
dec
sub
in
push
cmp
gs
add
pop
adc
or
add
hlt
mov
movsl
push
shll
xor
int3
in
lret
jno
mov
xchg
mov
js
dec
jo
and
movsb
les
sbb
test
pop
aas
in
pop
es
aam
and
pop
rorb
mov
outsl
in
inc
pop
push
imul
dec
xor
hlt
add
les
hlt
sbb
fs
lds
ja
adc
popf
sbb
imul
push
inc
xchg
inc
ljmp
or
rclb
out
ljmp
add
ret
jno
push
leave
add
add
mov
movsb
jo
addr16
adc
movsb
adc
push
pop
out
gs
add
or
lds
in
adc
test
aam
les
xchg
and
adc
add
je
lds
in
adc
test
aam
les
xchg
out
dec
enter
mov
inc
xchg
mov
mov
repnz
pop
mov
stos
ret
mov
ror
lcall
ret
jp
and
inc
xchg
jbe
test
push
ret
cmpsb
adc
fisttpll
xchg
mov
cmp
pop
loopne
in
mov
stc
loop
push
sbb
js
mov
nop
push
popa
nop
mov
jne
out
loop
mov
sub
movsb
add
imul
call
lea
push
push
mov
xchg
or
loop
jne
pop
in
inc
jnp
in
adc
inc
movsb
and
sub
test
inc
stc
pop
fstl
mov
aad
inc
xlat
clc
cmpsb
jbe
xchg
popf
jge
mov
mov
in
mov
movsl
arpl
pop
cmp
leave
dec
shrl
sbb
daa
inc
ficoms
fisubrl
clc
icebp
inc
sti
pop
dec
xor
nop
loop
psubw
ljmp
push
outsb
jnp
pop
sti
add
add
fs
inc
cmp
and
jo
les
jmp
movsl
xchg
jae
dec
pop
pop
nop
mov
and
push
sub
rcrl
test
cmp
xchg
pop
popa
cmp
jge
xchg
fucom
adc
leave
mov
mov
and
cmp
in
mov
mov
sub
fists
xor
dec
or
mov
mov
pop
and
in
add
push
mov
mov
sub
sbb
xorb
leave
and
imul
ljmp
outsl
cmp
lcall
in
mov
sub
aam
pop
clc
aam
pop
popf
aaa
jecxz
pop
or
sub
fsubrl
adc
decb
jns
mov
add
xchg
fiadds
mov
icebp
jnp
fdivrp
dec
hlt
stos
and
dec
inc
jmp
stos
push
jp
adc
mov
call
into
jns
inc
insl
movsb
cmp
jl
xchg
pop
popa
outsl
sbb
out
jl
or
push
int3
and
and
sbb
xchg
add
lock
adc
and
test
sbb
mov
add
sbb
push
dec
cmp
mov
jge
popa
out
cmpsb
jne
rcrb
xchg
xor
mov
jg
mov
pop
ja
daa
pop
in
push
mov
push
movsl
push
cli
mov
out
adc
jle
loop
fdivs
push
inc
sbb
xchg
jbe
and
movsl
inc
aad
add
pop
adc
cmp
test
popf
in
sti
push
les
fcomi
jae
add
adcb
fists
jno
out
mov
test
or
sbb
insb
sbb
sbb
dec
adc
jg
imul
aaa
xor
outsb
jp
xchg
lret
dec
mov
lret
push
int3
icebp
lcall
int3
mov
mov
jno
in
addr16
push
pop
out
xchg
xor
mov
xchg
mov
fcomi
dec
dec
pop
enter
cmp
jmp
jns
jecxz
dec
cmpsb
and
insb
pop
lret
pop
mov
add
lods
xor
pop
dec
cwtl
mov
aam
cli
jl
dec
movsb
mov
push
ljmp
sbb
test
add
or
gs
movsl
lret
mov
lock
xchg
in
ljmp
bound
outsl
adc
std
mov
test
repz
lock
xchg
xor
div
mov
lds
push
mov
xor
mov
mov
shr
inc
repz
mov
aad
jns
lds
test
mov
inc
and
loope
adc
adc
in
dec
or
ds
adc
cmp
popf
sbb
sbb
mov
or
test
dec
push
and
cmp
cmp
int
or
sub
out
aad
lahf
mov
clc
icebp
insl
jecxz
outsl
add
jmp
lock
jae
fistpl
inc
arpl
sahf
sub
inc
scas
cmp
cmpsb
ret
dec
xor
and
push
adc
ss
xchg
cmp
pop
push
cli
pusha
dec
pop
stos
bnd
push
or
dec
incl
dec
mov
cmp
sub
aas
ret
filds
ret
test
into
aas
int3
mov
repnz
inc
push
outsb
pop
add
cwtl
inc
jbe
mov
mov
push
sub
sbbl
cwtl
movsl
cs
push
sbb
xchg
jnp
lds
sbb
push
xor
arpl
dec
mov
nopl
shll
mov
in
jp
das
mov
add
sbb
add
aas
inc
outsb
add
adc
test
cmpsl
xor
pop
repnz
pushf
ds
xor
stos
and
ja
test
xchg
adc
jecxz
pop
es
push
push
cld
fs
push
fcompl
data16
repz
hlt
sub
shrl
inc
and
shl
xor
sub
popf
jno
mov
pop
sbb
add
xchg
mov
int
cmp
inc
call
push
sub
mov
sub
mov
jg
mov
call
ret
push
inc
dec
aaa
sub
mov
sbb
inc
daa
loopne
xchg
xchg
popl
push
xor
js
js
int3
jns
call
jge
outsb
pop
arpl
pop
mov
ja
mov
inc
sbb
fs
sub
cld
xor
or
cltd
out
int
fwait
add
repz
int3
mov
mov
push
and
jmp
mov
mov
pop
sbb
stos
xchg
out
push
and
ds
mov
aas
dec
addl
jnp
pop
dec
lock
jmp
or
mov
fistpl
sti
push
pop
jne
pop
fs
aad
and
add
insl
xchg
add
aas
in
pop
or
xor
push
lods
push
mov
and
mov
imul
pop
xlat
fiadds
jbe
jecxz
xchg
cmp
lods
push
xlat
dec
or
ret
and
aad
inc
xor
jo
xor
mov
or
gs
imul
mov
cltd
add
xchg
mov
rcrb
cmpsl
call
test
insb
xchg
lcall
pop
jmp
inc
dec
push
addl
je
mov
mov
mov
cmc
mov
inc
sahf
ljmp
ret
mov
push
xchg
jo
loopne
mov
mov
sub
dec
scas
sahf
xor
push
or
inc
xor
pop
cmc
dec
rclb
loop
mov
loope,pn
adc
pop
stos
mov
in
js
std
xor
inc
jnp
js
ss
outsb
dec
in
sbb
rcr
repnz
clc
scas
stc
xchg
rcr
sbb
cltd
mov
sbb
movsb
inc
sarl
add
jp
dec
nop
mov
dec
pop
and
xor
pop
rclb
mov
cld
push
stc
xchg
xorb
iret
sub
sub
adc
fs
and
inc
mov
jl
push
inc
leave
and
fwait
sub
les
cs
outsl
stos
xor
test
ficomps
mov
aaa
sbb
ljmp
mov
jb
bound
lods
cmp
repnz
mov
into
jg
daa
lds
out
jns
leave
cltd
lods
scas
outsb
loope
ljmp
cmp
mov
loopne
xchg
push
jnp
add
orl
jmp
insl
jge
add
sub
cmpsl
addr16
cmp
dec
out
inc
fstp
int
xchg
mov
and
test
inc
out
xchg
or
xchg
scas
pusha
push
mov
jnp
icebp
sbb
das
movsl
mov
cmp
test
adc
sbb
mov
and
xchg
and
push
lcall
mov
and
pop
pushf
fisttps
adcb
cmc
fdivp
xchg
insb
sbb
mov
cmp
push
pop
aaa
inc
out
mov
pop
jne
add
pop
and
xchg
mov
fisubrl
jl
enter
add
cmp
sub
mov
jl
aad
jnp
hlt
fcoml
xchg
push
dec
jge
push
dec
sbb
je
gs
mov
cmp
das
add
gs
popa
andl
sub
sbbl
inc
lods
loop
cmp
pop
jmp
mov
sbb
fsub
outsb
fbstp
sbb
dec
pop
push
das
outsl
fbld
add
jae
or
and
dec
mov
sbb
mov
sub
mov
cld
neg
popa
fdivrs
cmp
rorb
and
mov
inc
push
jmp
jle
cmp
in
or
and
sti
adc
pop
xchg
mov
lea
addl
lods
sbb
clc
or
and
data16
xor
inc
push
lods
inc
addr16
ficomps
and
jbe
adc
xor
mov
cmp
out
stos
push
xor
icebp
pusha
push
xchg
sub
arpl
pop
jo
cmp
mov
cwtl
outsb
push
push
push
push
roll
pop
loopne,pn
adc
mov
push
push
jl
xchg
xchg
jle
push
cld
sub
mov
sti
pop
adc
inc
repz
leave
int3
or
insl
adc
or
jmp
add
sti
lcall
imul
cli
pop
mov
mov
inc
sbb
sti
imul
addl
sbb
shll
cld
ret
mov
dec
adc
xchg
je
xchg
sub
pop
movsl
mov
inc
and
inc
jns
sbb
inc
mov
dec
lods
inc
gs
sbb
pop
sarb
shrl
dec
adc
mov
xor
shlb
bnd
repnz
in
lea
mov
mov
and
lods
out
xchg
jnp
mov
or
push
bound
jl
pushf
adc
lock
fdivrl
movsl
cmp
std
lods
cwtl
mov
ja
mov
imul
mov
aam
jge
imul
hlt
inc
xchg
dec
jne
inc
push
fsts
sub
out
cmp
scas
adc
leave
ret
xlat
sub
push
lea
cmp
add
ret
xor
mov
movsl
mov
out
mov
sub
mov
jo
pop
mov
push
scas
push
lret
inc
test
in
div
inc
dec
dec
push
mov
add
shll
dec
fs
xchg
mov
cmp
xchg
ret
pop
out
sub
test
rcll
rcrb
test
mov
pop
frstor
into
das
leave
jae
ret
pop
aas
push
aas
mov
mov
sbbl
dec
jl
ja
inc
std
add
iret
pop
fwait
lods
cmp
les
enter
jb
scas
mov
std
out
scas
and
cs
daa
roll
subb
or
inc
shrl
outsb
arpl
cmp
and
mov
and
ja
js
andb
jb
outsl
orb
dec
mov
mov
mov
ss
adc
out
iret
out
push
out
cltd
add
jbe
sbb
test
mov
and
and
inc
push
insb
and
push
rcrl
dec
pop
pop
dec
popf
sbb
shlb
movsl
or
or
dec
leave
pop
repz
sti
mov
and
loop
push
lods
mulb
ret
push
adc
imul
lcall
inc
rol
jmp
shrb
js
enter
pop
inc
mov
cmpsb
jo
add
inc
sbb
sub
ret
cwtl
sub
bound
ss
jno
ret
imul
sbb
fistl
cmp
xchg
imul
stc
arpl
dec
and
mov
sbb
std
jmp
fstpt
iret
pop
lcall
inc
adc
cmp
shrl
jmp
loope
cmp
add
inc
xchg
adc
xor
push
arpl
fimull
lcall
mov
punpcklbw
sbb
sub
je
and
ret
subl
lock
adc
and
mov
lcall
movsl
add
push
push
aaa
test
mov
in
cmc
dec
xchg
fdivs
cmc
push
test
cli
mov
mov
and
test
out
mov
sub
sbb
jp
inc
jne
test
add
fldt
push
stc
jecxz
pop
cmpb
imul
fs
stos
or
das
faddp
xchg
nop
pushf
push
lods
mov
addl
or
jmp
mov
enter
xchg
and
cltd
int3
icebp
movsb
pop
cmp
popa
jns
xchg
lcall
fisubl
cmp
jnp
daa
popf
loopne
inc
mov
insb
cmp
pop
adc
fwait
insb
jmp
adc
and
leave
scas
jp
jge
ret
sub
sbb
into
push
lret
dec
in
stos
cs
jmp
mov
lret
sti
xchg
jmp
push
js
mov
dec
xchg
inc
int
xchg
sbbb
shl
test
push
lret
and
xchg
shrb
or
jge
or
xchg
mov
insl
nop
insl
jmp
inc
cmp
xchg
inc
mov
jl
bound
lods
inc
jns
dec
nop
mov
ret
push
das
adc
in
xlat
xor
outsb
popf
push
xchg
data16
mov
int3
push
push
inc
sbbl
leave
xor
jl
xchg
popa
xor
and
cmp
xchg
and
fsts
cmpsl
xchg
push
inc
std
mov
pop
xor
xor
jecxz
or
add
push
lahf
adc
std
inc
hlt
mov
and
in
jnp
dec
pusha
and
push
or
out
rorb
stos
mov
mov
rclb
stos
add
lods
and
mov
mov
mov
int3
inc
sbb
je
push
je
and
inc
ss
cmc
adc
and
mov
cmpsl
sbb
sbb
push
loop
adcb
cmp
push
mov
inc
sti
push
jmp
iret
xchg
out
jns
fsubrs
mov
scas
arpl
inc
aam
xor
lret
insl
jmp
mov
loopne
addb
insl
mov
or
xchg
xor
cli
add
das
jecxz
fwait
out
ljmp
pop
aaa
lcall
mov
pop
stos
das
pusha
sbb
adc
into
xor
xor
mov
sbb
pop
dec
xchg
pop
mov
pop
ret
and
pop
lahf
popf
cmp
es
mov
popf
push
cmp
fsubl
jl
mov
arpl
das
setne
cld
mov
out
arpl
scas
cltd
jo
xchg
stos
leave
orl
jg
and
stos
pop
in
push
xchg
mov
mov
pop
ljmp
cld
mov
fidivrs
mov
sub
cltd
cmp
cmp
faddl
sahf
js
xchg
out
push
add
mov
cmc
sbb
repnz
jle
dec
in
ljmp
test
stos
aaa
xchg
iret
scas
sbb
sbb
or
xor
push
in
xlat
jg
pusha
cmpsb
cmp
ja
xorb
mov
shrl
movb
mov
cmp
adc
fldcw
out
mov
adc
dec
inc
stc
push
mov
stos
push
or
sbb
insb
mov
negl
cmp
ds
mov
jae
push
in
out
jb
push
xchg
add
int3
xor
sbbl
sbb
pop
ss
rclb
and
lret
push
mov
cli
imul
mov
mov
cmp
sbb
xchg
ljmp
sbbl
mov
sub
pop
jne
scas
neg
test
sbb
jl
xlat
stos
jmp
popa
xlat
ret
add
pop
lahf
pop
add
mov
test
nop
dec
ret
mov
pop
jle
mov
call
push
loopne
mov
mov
cmp
fwait
jp
pop
movmskps
les
and
pop
popa
movsl
fidivrl
mov
jno
inc
sub
adc
push
add
add
es
test
in
mov
jae
dec
mov
fdivs
add
dec
mov
leave
pop
popa
cmp
dec
cli
fcmovu
mov
inc
cmp
inc
jb
push
popa
hlt
jecxz
mov
int
cld
push
scas
push
push
jecxz
arpl
aaa
cmp
and
rolb
in
ss
mov
cmpsb
inc
jecxz
test
out
outsb
icebp
jbe
pusha
bound
or
fisttpll
mov
inc
outsl
ret
addl
scas
lret
adc
xchg
outsb
sbb
dec
push
lods
mov
in
fadd
inc
and
push
insl
sbb
pusha
les
mov
les
mov
jmp
or
loopne
inc
nop
in
lret
xchg
sarl
sub
mov
enter
dec
shlb
js
aad
pusha
jae
out
mov
and
adc
xor
jle
pop
mov
lret
xor
movsb
lret
push
sbb
inc
fstl
mov
pop
out
das
ror
xor
mov
adc
fcom
add
pop
repz
xchg
jbe
mov
jae
sub
enter
imul
sub
incl
and
into
lret
jl
push
xor
mov
lock
les
into
adc
in
add
ja
js
shrl
pop
push
iret
nop
or
mov
push
dec
adc
adc
and
movsl
stos
cmp
cmp
cs
or
cmp
aad
inc
mov
lret
inc
decl
mov
insl
xor
jnp
nop
mov
hlt
pop
test
jbe
rcrl
int
stos
push
mov
incl
mov
pop
or
fistl
aad
popf
cmp
outsl
mov
insb
fldt
dec
cmp
and
out
mov
std
dec
mov
insl
mov
cmp
push
sbb
push
inc
xor
mov
dec
das
xchg
ret
out
xor
imul
nop
sub
shll
add
ja
push
inc
or
fidivrl
xor
mov
movsb
mov
test
sub
jns
in
jne
test
cmpsb
jmp
sbb
aas
hlt
fidivl
push
jmp
dec
push
loope
sbb
jp
out
lret
addr16
ss
pop
mov
out
dec
add
enter
idivl
shlb
xchg
movsb
repz
jae
aad
xchg
mov
cmp
push
xlat
sub
test
mov
inc
dec
iret
xchg
xchg
nop
loopne
leave
enter
xlat
lds
jns
je
shlb
push
scas
cmp
scas
sub
cmp
mov
dec
inc
push
bound
in
jg
inc
sarl
test
aam
adc
pop
mov
rorl
into
out
arpl
sub
into
aad
push
scas
mov
repz
jns
push
push
inc
cwtl
push
and
mov
push
int3
xchg
cs
inc
inc
hlt
dec
mov
mov
outsb
jbe
push
and
int
add
pop
mov
mov
fsubrs
xor
or
jg
jb
call
dec
loopne
ljmp
inc
sbb
loope
jmp
call
dec
mov
lods
test
pop
pop
in
rolb
aam
jl
mov
adc
pop
test
bound
sbb
push
adc
mov
push
dec
mov
iret
mov
mov
push
mov
sbb
mov
fwait
in
into
push
jns
jns
push
into
push
jge
xchg
jb,pn
add
pop
data16
ss
pop
leave
and
jge
loopne
push
push
jle
aas
jbe
xchg
xchg
insl
xor
nop
inc
es
aaa
mov
sub
ds
xor
repnz
lods
repnz
add
popa
fnstcw
test
xor
insb
hlt
adc
hlt
pushf
add
shlb
jg
enter
dec
mov
mov
aaa
nop
cmp
test
push
hlt
xor
push
add
mov
rclb
nop
cld
xor
ss
xlat
pop
xchg
rorb
cmp
xchg
pop
push
adc
jp
mov
xor
aas
add
cs
fcmovb
sbb
mov
into
or
add
push
sbb
push
ret
adc
jae
xchg
fimull
dec
dec
fldcw
jbe
adc
roll
mov
incl
cmp
aaa
sub
mov
insb
test
pop
jg
xor
sbb
ds
clc
int3
jmp
add
in
push
dec
movsb
mov
xchg
loop
jae
jo
dec
adc
jne
aam
add
ljmp
pusha
dec
clc
test
hlt
and
jmp
sub
cmpsl
adcl
je
xchg
or
and
mov
decl
mov
repz
xor
inc
stos
mov
xor
je
lds
in
adc
test
aam
les
xchg
and
adc
add
je
lds
in
adc
test
aam
les
xchg
and
adc
add
je
fs
push
icebp
inc
in
adc
add
push
loopne
aam
cmc
addl
push
add
je
fs
les
ds
insb
cmp
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cmp
in
mov
lock
mov
icebp
insb
and
inc
cmp
sub
sbb
or
cld
xchg
in
int
mov
sarl
add
inc
pop
xor
push
sub
sbb
or
cld
arpl
xor
imul
lcall
dec
dec
cs
sub
xor
frstor
lds
pop
inc
lahf
and
jle
mov
cmp
xchg
jne
insl
scas
insl
and
push
sub
xchg
or
movsb
dec
int
mov
sbb
pop
jg
aam
aam
cmpsl
lret
nop
sub
outsl
ret
sub
loope
add
adc
test
mov
pop
fwait
ds
shrl
add
iret
lods
mov
push
jno
jle
pushf
mov
cmp
idivb
and
je
add
push
sub
sbb
bnd
or
mov
mov
leave
xor
aas
test
lds
cmp
jg
sbb
sbb
cld
in
mov
mov
push
mov
jl
insb
push
pop
add
pop
sub
sbb
gs
fmul
int3
scas
fnstcw
fadds
add
push
cmp
jg
dec
or
inc
int3
cltd
hlt
mov
mov
mov
adc
movsb
call
and
dec
sub
push
ds
in
mov
loop
xchg
xchg
shrl
jl
insb
and
inc
cmp
sub
sbb
or
cld
xchg
in
mov
mov
icebp
mov
jl
insb
and
inc
cmp
sub
sbb
or
cld
aaa
test
jno
push
enter
cmpsb
bound
cwtl
loop
xchg
scas
mov
inc
andl
stos
mov
mov
push
pop
xlat
sbb
lcall
push
filds
leave
dec
inc
sti
pop
cmp
icebp
lea
sti
mov
xor
daa
mov
aas
out
aad
pusha
out
inc
not
mov
dec
out
adc
inc
repnz
iret
and
je
stc
xor
stc
xchg
leave
out
cld
xor
out
lret
mov
cwtl
popa
out
pushf
divl
fstl
cmp
mov
pop
dec
cs
inc
jno
mov
das
incl
push
ja
mov
test
lods
jb
mov
xchg
clc
addl
aam
xlat
jo
nop
pop
mov
movsl
mov
rcrb
push
mov
fwait
movsl
pop
jp
sbb
in
test
jp
std
or
jb
sub
loopne
jno
ret
ds
adc
rorb
outsl
shlb
imul
stc
xlat
cli
insb
pop
stos
mov
and
jne
data16
sbb
in
sub
fidivrs
adc
incb
iret
inc
lret
and
test
shl
push
sub
adc
sub
imul
jbe
rcr
sub
cmp
adc
psubw
imul
cmpsl
lds
lock
icebp
pushf
or
inc
inc
mov
push
mov
cs
orb
popf
ljmp
daa
jns
pushf
scas
xchg
enter
ss
inc
leave
mov
mov
cmp
and
adc
stc
xchg
inc
add
xchg
mov
mov
cli
mov
push
adc
pusha
notl
jmp
mov
xchg
mov
sbb
les
hlt
je
push
cltd
mov
test
jge
nop
jae
mov
pushf
in
clc
das
jl
aaa
popf
mov
and
stc
daa
and
rolb
xor
out
adc
xlat
xchg
stos
testl
fs
jecxz
fidivrl
insl
leave
jae
mov
add
call
dec
xchg
out
dec
push
xchg
cs
inc
xor
fdivl
jne
frstor
sub
sub
test
xchg
add
xor
stos
inc
inc
mov
mov
add
push
jb
mov
dec
cli
or
inc
mov
fnsave
and
jmp
outsl
filds
mov
jnp
popf
in
and
cs
fsubs
pop
pop
test
jle
sti
push
xchg
sbb
pushw
int
xchg
sub
or
or
icebp
dec
mov
in
repz
js
sahf
mov
mov
sub
push
pusha
xchg
pop
repz
rcrb
subl
out
mov
loope
xchg
mov
enter
add
sub
rorb
add
test
inc
stc
jg
xchg
pop
jmp
xchg
sti
je
jo
mov
outsb
imul
pop
mov
xor
push
rclb
mov
js
jno
call
jno
mov
sub
mov
mov
adcl
dec
inc
and
sbb
arpl
cltd
push
push
mov
jo
and
movb
jp
ret
lahf
sbb
pop
daa
pop
rcrl
and
lcall
mov
and
and
pop
aas
jns
jl
pop
jnp
cmpsb
adc
in
jno
icebp
mov
icebp
inc
movsl
pop
aas
jg
push
push
push
imul
movups
push
mov
jl
add
ret
mov
adc
mov
enter
ja
mov
mov
lahf
pop
sbb
scas
dec
xor
and
repz
adc
mov
mov
mov
loopne
in
out
sti
lahf
imul
popa
aam
pop
mov
dec
lea
imul
and
rorl
outsl
push
repnz
xlat
push
adc
data16
ss
test
push
leave
clc
repz
jecxz
mov
fstpt
sarl
xor
and
mov
das
sub
mov
shr
adc
inc
aad
pop
ljmp
call
inc
jno
mov
sub
sbbl
mov
lcall
mov
sbb
sub
sub
mov
mov
or
xchg
fstpl
sbb
xchg
push
out
inc
daa
leave
adc
dec
adc
cmpsl
repnz
fsubrs
jge
in
stc
mulb
lret
movsl
fidivrl
clc
bound
icebp
mov
nop
rcll
mov
push
sbb
lret
rcrl
pop
int
add
sahf
mov
pop
nop
call
pusha
push
dec
xchg
fwait
das
not
dec
into
aas
or
pop
aam
cmpb
xchg
jmp
sbb
repz
cmpsb
mov
lret
test
mov
jle
xor
add
xorb
ja
fcompl
inc
mov
dec
mov
test
sub
ds
aam
inc
dec
push
push
movsw
pop
adc
mov
xor
jmp
cmpsb
jbe
and
lret
sarl
in
cmp
and
loopne
mov
std
jb
sbbl
idivl
sbb
cmpsl
and
lds
push
pop
scas
cmpsb
scas
xchg
push
mov
cmp
jg
cwtl
lcall
leave
test
adc
adc
imul
push
sub
or
sub
pop
jg
adc
mov
mov
shll
adc
dec
pusha
xchg
int
pop
test
imul
testl
jnp
daa
in
popf
popf
cmpsl
mov
add
fdivl
dec
pop
js
nop
xchg
test
adc
dec
and
mov
cld
loopne
jg
mov
shlb
cmp
and
ret
adc
icebp
pop
push
jg
cwtl
xor
iret
or
cld
mov
aad
and
fisubrs
adc
sarb
mulb
pushf
dec
in
adc
push
fsubrs
rorb
in
sub
and
sub
xchg
inc
sub
dec
jnp
cmpsl
rol
pop
adc
mov
call
push
fwait
xchg
call
hlt
xor
mov
adc
xor
lock
or
cmp
pop
mov
fisubrs
sbb
stos
inc
inc
icebp
inc
push
loope
data16
jb
cmpb
mov
adc
shr
ja
or
push
push
cmp
jnp
arpl
add
jmp
imul
push
in
mov
pop
stos
vmaxpd
push
cld
insl
pop
mov
cmpsb
mov
hlt
mov
in
test
and
shl
xor
lods
xlat
sbb
pop
lahf
xchg
xor
add
sub
jl
xchg
cmpsl
stos
insl
sbb
cmp
xchg
sbb
jns
mov
cmp
jecxz
andl
mov
add
in
lcall
loop
insb
sub
out
cltd
pop
push
mov
gs
aas
lret
test
jae
sbb
test
out
xor
insl
mov
es
dec
in
xorl
orb
pop
push
repz
outsb
sub
dec
sub
fcompl
les
call
adc
dec
push
or
add
or
jo
push
cld
and
mov
mov
jbe
imul
std
mov
mov
ret
sub
mov
dec
adc
add
std
sbb
js
rep
jnp
or
cmp
push
sbb
pop
pushf
pop
jmp
dec
cmp
pop
inc
aad
jo
testb
sub
mov
add
sbb
or
mov
fsubs
sbb
push
and
or
add
outsb
pop
out
xor
movb
rcrl
sub
sbb
mov
shr
sahf
push
gs
mov
push
dec
jl
cmc
pop
mov
pop
mov
adc
dec
sub
adc
sbb
mov
xorb
shll
lds
cmpb
mov
cmp
lcall
data16
dec
cmpsl
xchg
and
sarb
inc
out
jle
sbb
punpckldq
test
mov
mov
ficompl
sub
lods
movsb
stc
adc
out
sbbl
jl
inc
xor
xlat
icebp
inc
dec
and
inc
ss
sbb
push
ljmp
jae
lcall
aaa
jecxz
dec
test
and
push
or
lret
sbb
sub
leave
mov
shl
jae
cltd
mov
je
pop
xlat
jo
mov
scas
fsub
cwtl
test
mov
fiaddl
jecxz
pop
xlat
sub
xor
roll
cmp
add
mov
data16
cld
call
cmpsb
out
adc
jle
in
lods
push
lods
xor
fsubrp
sbbb
mov
cli
out
add
popa
jp
fisubrs
pop
xchg
ret
repnz
fcmovbe
cwtl
cmpsb
adc
not
movsl
fucom
pop
movsl
test
pop
aas
ret
jo
cmp
fcmovne
subl
icebp
inc
push
gs
pop
ret
into
xchg
adc
jb
sbb
inc
xchg
lods
lahf
mov
jo
sub
out
mov
jecxz
orb
xchg
fimull
ret
lcall
call
xchg
repz
fisubs
pop
sahf
dec
xchg
test
or
test
pop
call
ret
jns
rorl
mov
add
daa
lret
addr16
scas
popa
in
sbb
loopne
in
movsb
outsb
in
outsb
xchg
sub
imul
and
or
stos
mov
adc
in
loop
pop
test
in
adc
mov
and
inc
cltd
or
subb
addl
dec
pop
mov
shll
cltd
or
jp
lods
lret
mov
pop
inc
adc
add
int
mov
mov
je
lahf
push
mov
pusha
lds
xor
bound
mov
sbb
cli
xchg
shlb
mov
lcall
jae
inc
les
pushf
sbb
mulb
adcb
aaa
push
mov
xchg
lods
clc
repnz
and
xchg
into
cmp
dec
pop
jb
test
imull
push
movsl
mov
je
cld
loop
jno
cmp
jne
icebp
mov
insl
add
leave
outsb
adc
adc
int
xor
fisubs
jecxz
pop
adc
in
mov
and
pop
mov
jge
cmc
and
or
addb
in
xchg
jo
xor
mov
fucom
add
mov
dec
jle
cli
icebp
je
test
clc
inc
fs
or
popf
idivl
jns
mov
push
or
fisubs
push
dec
pop
mov
pushf
sub
pop
or
or
insl
mov
mov
mov
push
ss
push
dec
adc
ret
pop
bound
cli
ljmp
stos
sbb
icebp
add
aam
enter
pop
test
jnp
xlat
dec
mov
add
jecxz
jp
iret
mov
dec
movsb
cmp
mov
push
mov
xchg
inc
ret
xchg
cmc
js
rolb
popf
push
xlat
popa
and
in
cmp
mov
jae
pop
in
mov
xor
xchg
mov
pop
and
dec
jb
xor
icebp
mov
inc
lea
in
and
cs
out
push
movsl
jne
hlt
sbb
movsb
clc
out
push
mov
xlat
mov
mov
dec
aam
dec
xlat
int
mov
adcb
lret
shlb
mov
rorb
fistps
xchg
adc
adc
and
pop
test
jmp
cltd
cltd
jno
adc
pop
push
iret
adc
mov
cmp
pop
iret
in
sbb
clc
xchg
fidivrl
mov
pop
rcrl
in
pop
xchg
add
ret
in
nop
pop
xchg
xlat
ffree
xchg
cmc
adc
jg
int
movsl
xor
sahf
xor
push
jno
test
sub
out
out
jo
cmpsb
push
jbe
icebp
mov
int
lahf
imul
jp
xchg
add
mov
adc
dec
shll
loop
int
cmp
mov
insb
sbb
mov
insb
mulb
sub
inc
push
jo
cmp
jmp
mov
jo
ret
xchg
dec
cwtl
sbb
xor
xchg
push
mov
nop
std
push
sti
lret
dec
jae
insl
cmp
mov
les
and
dec
add
inc
mov
test
jg
mov
jae
xchg
ffreep
sarl
cwtl
sbb
imul
je
dec
fadds
add
je
cld
decl
mov
test
cmp
sarl
xor
and
inc
fcoms
shlb
inc
mov
push
push
std
push
call
lret
jle
mov
out
push
gs
cmp
dec
push
mov
cmc
mov
cmp
cmpsb
pxor
xabort
cmp
pop
int
push
es
out
push
sub
into
scas
sbb
lret
in
dec
loope
inc
cli
mov
sahf
mov
ja
add
hlt
pop
cmp
pop
fimuls
dec
inc
xchg
insb
xchg
gs
mov
push
es
dec
inc
pop
pop
outsb
subb
and
jno
mov
jp
andb
xchg
insb
out
gs
adc
clc
cmp
sbb
xchg
xchg
cmp
xlat
mov
xchg
clc
or
jmp
cmp
ret
jnp
sub
xchg
ds
leave
call
sahf
aad
int3
push
insl
dec
pop
pop
pop
cwtl
das
mov
rorb
in
js
clc
push
enter
xor
mov
xchg
stc
add
or
dec
bound
rcrb
mov
mov
pop
push
shrl
jmp
inc
push
pop
fsubl
imul
nop
mov
xor
aad
leave
add
sahf
mov
mov
mov
popa
jg
icebp
xchg
fs
mov
iret
push
xchg
add
mov
std
test
in
sub
fiaddl
mov
jno
add
add
mov
xorb
or
pop
push
pop
iret
clc
popf
inc
inc
cmpsb
fsubrs
outsb
mov
inc
out
out
fists
pop
dec
pop
jp
mov
mov
gs
jg
jmp
pop
xchg
inc
sbb
rcrl
mov
cltd
shl
data16
scas
sbb
lahf
je
mov
stc
sub
leave
idivb
dec
jecxz
aad
jmp
fdivs
iret
lods
jmp
dec
xor
pop
popa
subl
or
es
pop
les
inc
in
sbb
icebp
fidivl
xor
jns
lret
or
lahf
cmp
ficoms
out
addr16
xor
mov
jmp
mov
or
imull
lods
fildl
fucomp
int3
cmc
sti
push
mov
mov
int3
sbb
daa
inc
mov
add
popf
imull
sub
push
in
aaa
pop
dec
xchg
call
mov
pop
pop
dec
test
in
and
push
sub
stos
push
mov
in
ficoms
jl
imul
or
xchg
mov
pop
or
data16
or
xchg
xor
mov
lds
pop
fstl
and
call
lock
sbb
pop
lea
and
jg
fnstenv
jns
outsl
ljmp
mov
pop
pop
or
movsb
shl
repz
imul
repz
mov
icebp
mov
sub
cmp
mov
fistl
sbb
dec
lods
dec
xchg
xor
dec
inc
negb
push
mov
sbb
mov
dec
test
daa
adc
dec
dec
adc
aaa
ljmp
xchg
iret
mov
cwtl
int
out
push
rcr
push
pusha
lret
in
cmpl
or
dec
pop
push
and
ds
push
cli
inc
cmp
fldl
xor
mov
and
rcr
pop
faddl
loopne
cmp
and
lea
aam
in
cwtl
fsubrl
pop
pop
fadd
pop
mov
sti
pop
lods
addr16
xchg
inc
stos
pop
adcb
push
and
mov
and
mov
and
push
push
add
ret
adc
cmpsb
lods
loopne
pop
pop
cmp
aaa
sbb
fs
inc
imul
ja
push
mov
orl
cwtl
and
rorl
popf
icebp
push
mov
clc
cmpsb
inc
out
adc
xor
sub
add
pop
aaa
pop
jp
sub
xchg
fiadds
sarb
js
imul
cmp
gs
jno
out
xlat
fsubr
cmp
mov
mov
sbb
sbb
les
jne
add
outsl
jne
out
imull
add
mov
mov
fcompl
orb
sub
pop
xchg
loop
mov
pop
in
ljmp
sti
jno
bound
dec
mov
popf
or
mov
loop
dec
fadds
push
insl
dec
daa
jmp
ljmp
and
push
sbbb
mov
hlt
jge
lahf
pusha
push
call
ljmp
jo
lret
dec
xchg
loop
push
xchg
jo
fbstp
jns
sbb
xchg
and
out
jbe
xchg
jns
pushf
lds
fnstsw
push
cld
notb
gs
sbb
outsl
push
jo
push
jns
dec
cmc
sbb
jge
pop
pop
sbb
addr16
addl
leave
fwait
cmpsb
pop
pop
rclb
call
push
lods
and
popf
xlat
es
and
in
out
mov
inc
test
ret
cli
mov
cmp
adc
out
cmp
mov
mov
test
jle
fsubrp
pop
sahf
rorl
aad
pop
repnz
inc
out
jbe
sub
mov
or
cmpsl
insl
enter
inc
jecxz
cli
mov
rcrl
xor
lods
rorl
xchg
addr16
scas
add
push
insl
jb
lcall
inc
add
push
sub
push
les
add
dec
js
cmc
push
push
cwtl
jne
add
loop
push
jge
faddp
xchg
xchg
push
loop
jge
lcall
ficomps
cmp
push
cld
pushf
aaa
add
sub
inc
mov
gs
inc
repz
and
sub
andb
ja
clc
clc
notb
inc
jl
pop
nop
mov
aaa
jmp
and
push
into
sbb
es
test
mov
mov
out
pop
or
jnp
nop
rorl
add
dec
adc
jmp
adc
clc
ds
dec
xchg
call
icebp
and
repnz
movsb
ret
xchg
sub
sbb
rol
push
call
mov
mov
pop
gs
push
je
ret
pop
cld
xor
xchg
or
jae
ja
cwtl
and
test
mov
mov
dec
rcrb
je
mov
mov
repz
dec
adcb
ds
cs
ss
lahf
or
mov
push
or
insb
pop
inc
enter
mov
cld
ret
movsb
jns
les
jg
dec
add
pop
repz
mov
pop
es
sbb
je
cwtl
repnz
mov
pusha
push
xchg
rcrl
bound
shrb
mov
ljmp
xchg
adc
jle
xchg
ror
xor
cwtl
and
into
es
jmp
test
ret
push
push
loopne
or
push
xor
fcomip
dec
dec
in
test
add
int3
xor
push
cli
or
shrl
or
pop
push
xor
adc
test
dec
lock
roll
dec
jg
jnp
fs
or
jp
stos
jmp
cmp
lret
mov
push
scas
mov
dec
adc
mov
jmp
mov
pop
lods
and
nop
jge
mov
inc
je
lds
subb
pop
jno
insl
mov
ret
rcrl
pusha
sbb
pushf
inc
cmpsb
jl
fisubrl
push
clc
lret
negl
leave
cli
sub
addb
andl
ljmp
clc
pop
pop
mov
clc
push
inc
aad
aas
jge
mov
add
sti
and
add
orb
xchg
jle
xchg
cld
inc
nop
sbb
daa
mov
gs
dec
or
cld
addr16
lahf
sbbb
bnd
xor
and
sbb
mov
std
les
lret
call
xchg
mov
jae
ss
das
adc
mov
cmp
mov
insb
cmpsb
cmc
fsubrp
iret
out
cld
fwait
cmp
inc
jecxz
add
loope
mov
xchg
aad
sub
mov
nop
xchg
cmp
out
imul
popa
ss
mov
dec
pop
jb
xor
pop
mov
jecxz
mov
xchg
fimull
adc
stc
or
mov
mov
add
inc
je
push
cmpsb
in
mov
mov
out
mov
sarl
add
and
inc
cmp
sub
sbb
or
cld
xchg
in
mov
mov
icebp
mov
jl
insb
and
inc
cmp
sub
sbb
or
cld
mov
int3
push
mov
xor
pop
xor
inc
sub
sbb
or
cld
int
sti
fcoml
lods
loope
jno
add
mov
ss
rcrl
push
clc
inc
enter
cmpsb
jg
push
push
negl
sub
sbb
enter
test
mov
daa
push
negl
sub
sbb
enter
test
mov
daa
push
xchg
jbe
inc
rcrb
inc
lds
mov
sbb
in
in
arpl
stos
dec
mov
bound
mov
inc
cmp
xchg
cmp
xorl
addr16
aas
push
cmp
neg
push
loop
imul
out
adc
jae
add
test
lret
push
aaa
xor
mov
fsubrs
lods
inc
stc
les
push
test
jbe
lock
push
mov
std
push
js
dec
sbb
pop
mov
mov
adc
mov
mov
cltd
movsb
js
test
movsl
xchg
jnp
dec
or
mov
push
bound
ja
adc
cmp
sbb
inc
or
clc
inc
enter
test
mov
daa
push
negl
sub
sbb
scas
cmp
push
les
pop
in
jns
ja
mov
mov
lahf
xor
dec
notb
dec
mov
out
push
mov
ja
adc
mov
daa
or
xchg
sbb
in
jp
sbb
sbbl
flds
test
mov
daa
push
negl
sub
sbb
enter
test
mov
daa
push
negl
sub
sbb
jae
cld
and
inc
in
std
mov
jecxz
xchg
repz
sub
mov
mov
sbb
dec
movsb
add
mul
or
jl
jg
cltd
cmp
mov
mov
call
pushf
loop
das
fld
and
add
xor
shll
jbe
pop
mov
xor
ljmp
in
jae
mov
das
and
out
enter
and
mov
jg
fst
loope
ljmp
cmp
cmp
insb
mov
repnz
mov
rcll
inc
ret
leave
push
sbb
outsl
inc
mov
js
pop
out
sbbl
pop
sbb
mov
push
aam
pushl
cmpsb
xchg
push
clc
cli
scas
les
mov
cmp
std
jge
ss
mov
or
cmp
push
fildll
or
out
lock
push
fnstenv
ljmp
jnp
lods
repnz
inc
insl
lds
test
in
jle
pop
movsb
testl
xor
lods
imull
jmp
mov
jge
out
bound
xor
enter
jnp
xchg
int
mov
dec
push
mov
cmp
and
ss
and
dec
out
push
jp
cmp
cmpsb
rcll
mov
mov
sbb
fsubs
pop
push
sti
ds
js
jmp
int3
mov
add
mov
sbb
and
fsubrl
leave
in
in
sbb
mov
cmp
cmc
icebp
loope
into
and
movsl
cli
jno
ss
call
xorl
jae
jle
outsb
dec
cmp
or
xchg
jmp
adc
fcompl
xor
lcall
mov
jle
push
repnz
add
lret
mov
and
shl
imul
inc
rorl
fst
and
int3
jno
repnz
bound
xchg
mov
fimuls
int3
push
fidivrs
std
or
lea
out
sbb
cmp
stos
mov
push
leave
xadd
adc
es
insl
stos
stos
fs
dec
xor
bound
push
loope
ja
or
scas
xchg
and
xorl
cmp
repz
xor
or
mov
dec
jl
sub
xor
dec
pop
popf
int3
mov
xchg
ds
mov
lcall
shl
insb
lret
and
ret
popf
not
xchg
dec
int3
sub
mov
pop
lds
jmp
inc
shlb
xchg
sti
adc
push
inc
jg
test
jno
sub
aam
gs
xor
push
push
add
fsubrl
xor
stc
aas
mov
int
mull
inc
clc
jmp
lock
cmpsl
inc
sub
cmp
and
mov
inc
std
call
cli
dec
cmp
adc
sub
mov
sahf
movsb
sub
inc
push
sbb
stos
cmp
jg
inc
addr16
mov
sbb
inc
ja
lcall
nop
mov
xchg
loop
push
or
xchg
adcl
in
xor
mov
out
mov
orl
xor
es
lock
test
add
mov
jge
dec
cmp
movsb
push
push
pop
dec
nop
hlt
push
pusha
ja
mov
mov
push
sub
cmpb
daa
js
popf
adc
or
mov
inc
outsl
es
mov
cmp
imul
stos
rcrl
js
sar
stc
push
or
insb
scas
jl
push
lock
xor
mov
popf
imul
fidivl
or
cmp
cmpsb
jge
mov
mov
cmp
hlt
arpl
and
sub
mov
rorb
test
cmpl
cmp
inc
mov
aas
push
fsubs
in
ret
mov
lods
shrl
fs
in
mov
movsl
mov
and
icebp
sub
xlat
ja
inc
push
cmc
sub
mov
add
jg
pop
sbb
lds
aas
pop
icebp
popa
fcmovu
out
sti
rcrb
pop
xor
xchg
loopne
mov
push
icebp
lock
adc
inc
decl
push
mov
pop
ds
dec
fbstp
pop
jmp
hlt
in
jecxz
insl
jl
mov
cmpsb
xchg
je
popf
movaps
lods
pop
xor
pop
mov
jne
test
aam
mov
in
inc
mov
jle
sbb
mov
loop
mov
mov
call
int
push
push
or
jns
sub
imul
push
andl
fdivl
mov
push
inc
xor
sub
inc
pop
xor
mov
jp
cmp
aas
cmpsl
cmp
dec
mov
xchg
pop
repz
mov
popf
add
cmpsb
cwtl
pop
xor
push
mov
aaa
mov
aam
icebp
rolb
cli
jecxz
sub
jecxz
mov
stc
out
sahf
fnstenv
js
adc
test
in
cmpsl
cmp
repz
jle
ds
scas
dec
fwait
dec
sbb
andl
mov
jp
or
xor
sub
loopne
stos
ss
imul
pop
cmp
std
je
bound
adc
popf
js
push
adc
int3
imul
aam
lds
sbb
pop
inc
in
negl
inc
insb
add
pop
push
xor
scas
push
jp
inc
push
insb
popa
setns
es
adc
nop
in
ljmp
test
jne
xchg
imul
mov
pop
xchg
pop
adc
into
fwait
cmp
jo
add
clc
cmpl
test
mov
push
pop
xchg
out
insb
fstl
pop
in
cld
test
mov
mov
and
mov
icebp
mov
and
sbb
inc
mov
jae
push
inc
scas
in
push
imul
sbb
add
cmpsl
outsl
pop
ret
inc
add
icebp
orl
cld
enter
out
dec
push
mov
in
arpl
sub
xor
mov
and
mov
cmpsl
push
ret
shlb
xchg
repnz
sub
subb
and
dec
shrb
aaa
or
jb
cmp
pop
mov
dec
or
and
jo
push
insb
notb
inc
inc
jge
xchg
pop
popa
dec
sub
lcall
out
cs
mov
sub
loope
jns
pop
push
mov
cs
rclb
mov
inc
aam
lahf
jmp
mov
je
xor
pop
cs
inc
dec
mov
lcall
mov
iret
test
xlat
mov
idiv
scas
lods
int
cmp
sbbb
repnz
lahf
or
repnz
cltd
xor
std
adc
andl
sbb
jo
out
scas
push
sti
int
subb
dec
leave
shr
mov
xchg
pop
mov
call
hlt
mov
inc
aas
imulb
xchg
sbbl
outsb
daa
in
notl
out
lock
add
xor
popf
mov
aam
ja
loop
xor
sahf
adc
adc
mov
test
pop
mov
repz
outsl
or
movsl
pusha
loope
and
sbb
scas
mov
dec
test
repz
jae
sub
dec
cmp
and
mov
movb
jns
outsb
cltd
daa
cmp
stc
inc
adc
push
xchg
insb
jne
andb
jg
mov
and
xor
test
lcall
test
adc
xor
nop
outsl
es
stos
outsb
fs
jae
mov
adc
mov
arpl
dec
mov
pop
add
xchg
push
push
xor
test
call
dec
lea
mov
push
push
pop
cmpsb
xchg
xchg
push
jno
cmp
fisttps
aas
xchg
icebp
fldcw
pop
in
mov
jmp
les
rclb
out
js
jb
int3
leave
ljmp
xchg
mov
xor
pop
aam
popf
das
mov
ss
pop
sub
sarb
push
push
rcrb
loop
xchg
in
std
les
mov
xor
push
test
sbb
dec
lods
mov
pop
int
lods
pop
shll
jle
lods
pop
stc
push
iret
xchg
xchg
test
stc
xor
out
cmpb
js
loop
mov
hlt
push
pop
jne
inc
push
dec
cmpsb
xor
xchg
loope
sahf
adc
in
je
add
jmp
cwtl
mov
push
aam
ds
scas
jnp
mov
test
jmp
ficoms
mov
insl
in
or
dec
adc
ds
sub
and
jge
fdivr
lret
pusha
shl
lret
das
lock
cmp
sbb
mov
add
test
mov
add
mov
testb
sbb
add
mov
sbb
adc
idiv
outsl
stc
dec
nop
add
sbb
jnp
negl
aam
sub
orb
je
push
mov
aaa
mov
xchg
cmpsl
dec
test
or
mov
or
fcmovu
rcl
fcompl
mov
xor
add
leave
scas
movsl
outsb
mov
ss
test
jg
in
dec
dec
sbb
jmp
mov
mov
mov
enter
imul
jmp
push
xchg
fwait
sub
lcall
add
pop
pushf
or
inc
lods
scas
xchg
fsts
fwait
jl
and
fcomps
inc
push
pop
mov
fstps
and
inc
xchg
mov
sbb
jmp
mov
adc
sub
imul
adc
aam
ret
int
adc
pop
xor
or
ja
sbb
mov
shll
stos
cwtl
inc
aad
pushf
in
shlb
sub
cmp
mov
test
mulb
pop
add
adc
aas
push
mov
mov
push
outsl
leave
loopne
jge
loopne
adc
add
scas
cmp
sub
ss
push
lods
xchg
aas
scas
movsb
push
insl
sbb
xlat
jge
sahf
dec
call
into
mov
pop
sub
sbb
aaa
ret
leave
push
hlt
jbe
inc
and
sub
sub
xor
ror
sub
mov
jb
sarl
cmc
push
arpl
int3
sahf
ret
sahf
cmp
shl
enter
mov
aas
inc
subl
into
push
add
call
fidivrs
mov
insb
dec
sbb
dec
loope
nop
hlt
xchg
sbb
iret
xor
shlb
mov
lds
pop
cmp
pop
sbb
outsl
imul
lahf
dec
push
and
xchg
fs
daa
adc
in
xchg
jg
mov
inc
repz
scas
cmpl
dec
lret
cmp
mov
mov
fnstenv
jo
cld
dec
fisubl
adc
push
dec
leave
leave
cmp
in
sbb
add
sub
stc
das
adc
inc
add
or
out
jmp
xchg
xchg
add
mov
fs
hlt
arpl
push
aad
xlat
std
ret
and
repz
fstpt
lcall
imul
leave
nop
pop
fsubs
idivb
adc
leave
pusha
mov
mov
lods
scas
and
scas
aad
and
push
aaa
mov
mov
and
or
xchg
push
loopne
ret
addb
inc
sub
or
fwait
inc
jge
or
loop
mov
lcall
pop
rorb
cmp
pop
dec
jp
dec
push
xor
hlt
adc
xchg
jle
adc
adc
inc
add
pop
jl
cmpsb
cltd
jg
loop
xchg
mov
hlt
out
mov
mov
push
dec
jb
lock
dec
xor
or
int
shld
movsl
jae
jge
into
scas
test
xchg
hlt
jl
popa
pop
jecxz
into
sahf
xor
cmpsb
dec
cmp
negl
gs
add
inc
and
push
mov
lds
or
scas
fimuls
mov
xchg
ret
and
sbb
fmull
add
jp
push
add
cmpsb
sbb
aad
sub
mov
jmp
dec
xlat
jg
movsb
aad
lcall
push
jmp
pop
jl
cmp
add
inc
pop
sbb
fcmove
xchg
push
jecxz
add
pop
mov
mov
dec
clc
push
mov
push
mov
add
sub
shrb
insl
xchg
ss
fs
in
dec
cli
dec
pop
adc
mov
pop
mov
sub
xchg
nop
dec
and
mov
jno
jge
mov
cltd
jp
push
xor
fs
and
repnz
and
sub
mov
sbb
push
arpl
cwtl
arpl
pushf
sbb
jbe
movsl
rorl
in
jb
pop
pushf
or
loopne
inc
pop
or
sub
push
lods
sahf
mov
rcrb
cmp
dec
lcall
push
lret
mov
push
push
pop
shlb
and
pmullw
or
aas
pop
loop
test
sub
ret
nop
push
cwtl
or
inc
sar
pusha
addr16
sbb
sahf
lret
pushf
lret
mov
data16
clc
pop
or
jmp
cmpsl
xchg
add
popa
push
out
xchg
in
dec
daa
cmpsl
push
dec
jecxz
ss
pushf
pop
xor
cwtl
inc
mov
loopne
fucom
loop
push
fsubrl
sbb
fisttpll
bnd
fwait
push
sbb
sbb
test
mov
rcl
adc
or
fucom
mov
xchg
jbe
jne
fbld
jb
pop
call
xchg
sbb
and
stos
or
jle
push
adc
repz
add
bound
int
add
outsl
dec
cmpsl
xchg
jne
hlt
mov
jnp
mov
xor
xchg
test
xor
testb
push
or
les
jge
cmp
ss
in
int3
adc
int3
stc
in
int3
lcall
mov
dec
outsb
pop
adc
imul
cmp
xchg
mov
inc
sub
inc
imul
pop
lock
ljmp
pop
cmp
or
in
sub
push
insl
mov
pop
mov
push
mov
je
jle
ds
cwtl
cmc
mov
lea
jmp
jp
pop
rcrb
enter
into
aam
mov
jbe
out
mov
xor
dec
push
pushf
sbb
mov
arpl
push
mov
daa
aas
add
in
in
or
xor
imul
or
out
xchg
push
dec
jnp
push
inc
mov
xor
insb
xor
aam
loopne
movl
jmp
imul
or
mov
mov
cwtl
das
fiadds
sbb
orb
mov
add
adc
inc
pop
mov
in
and
rcl
xchg
out
jb
push
dec
xor
rol
out
jmp
fsubr
test
mov
inc
and
stc
inc
into
negb
push
lods
add
pushf
fwait
enter
sbb
push
xor
add
push
int3
insl
push
or
scas
popf
repz
mov
inc
pusha
popa
stc
ljmp
mov
inc
push
pushf
add
and
inc
pop
xchg
cmpb
mov
iret
jno
sub
or
in
test
loop
fwait
sbb
cmp
inc
pusha
sub
or
mov
je
and
loope
test
sbb
ret
or
cld
lret
jmp
leave
repz
add
test
test
add
cmp
out
or
xor
cmp
pminub
sub
push
cs
mov
aad
sar
push
pop
in
std
and
insl
mov
inc
loope
dec
xor
cwtl
pop
mov
xor
outsb
in
jl
xchg
xlat
bound
stos
out
sbb
rclb
xchg
out
sti
shll
cld
xchg
imul
and
fldt
hlt
cmc
push
sub
out
jnp
mov
push
dec
lock
int3
push
rcll
in
add
ds
arpl
mov
lahf
icebp
adc
xchg
push
sub
out
sbb
add
lock
jbe
mov
cmp
int3
or
in
xchg
inc
cli
jnp
inc
int3
test
pop
inc
movsl
in
negl
xchg
push
shrb
mov
ret
cmp
dec
movsl
lcall
rcr
dec
xchg
pusha
jmp
mov
dec
idivl
sbbl
inc
or
dec
rcrl
sbb
sub
sahf
inc
mov
clc
xor
xlat
jnp
pop
rorl
ljmp
jnp
push
adc
push
push
addl
mov
decl
xor
idivl
sub
daa
call
in
cmpsb
icebp
lahf
mov
mov
in
ret
inc
loop
mov
pop
and
test
jb
ljmp
or
pushf
dec
xchg
xchg
adc
add
scas
or
jne
test
adc
out
xchg
adc
inc
mov
mov
repz
std
in
lods
xchg
jg
mov
stos
in
dec
mov
mov
mov
xchg
call
or
push
cmp
in
fimull
mov
push
insl
pop
cltd
mov
push
inc
jge
aaa
pop
add
mov
lret
push
shrl
nop
mov
leave
adc
stos
mov
jmp
ljmp
mov
lods
push
lods
mov
cmp
push
mov
pop
mov
dec
mov
iret
dec
insl
jl
xchg
push
pop
andb
sub
push
hlt
mov
cmpsb
es
call
push
leave
jp
pop
or
insb
xlat
mov
pop
pushf
movsl
arpl
addr16
repz
je
call
into
je
imul
jno
or
sbb
hlt
mov
xchg
fisttps
lods
je
and
pop
data16
mov
in
rcrl
jg
mov
mov
push
scas
sub
decb
adc
sbb
mov
xchg
imul
ljmp
inc
enter
into
lcall
or
jl
in
les
dec
xchg
ret
add
mov
dec
in
mov
jle
mov
add
inc
fwait
mov
daa
loope
xchg
lahf
jge
jmp
negb
scas
cmp
and
gs
rcpps
dec
dec
fdivrs
pop
push
dec
jb
aam
dec
xchg
cmp
push
inc
push
test
mov
pop
xchg
ret
cmpsb
icebp
inc
movsl
mov
shll
lret
mov
test
cmp
xchg
ljmp
out
add
out
repnz
inc
dec
dec
cmpsl
sti
mov
jbe
movb
scas
push
and
cs
mov
les
xchg
xor
fisubrs
daa
mov
pop
shrb
mov
fistl
dec
sbb
jb
notb
dec
push
sub
jle
dec
cmpsb
push
in
push
xacquire
clc
fwait
xor
xor
lods
cmovg
lcall
arpl
imull
cmc
jmp
jmp
inc
push
sbb
xor
sub
mov
shlb
pop
jl
dec
inc
push
and
imul
in
and
push
pop
push
jp
mov
or
mov
lock
xor
sub
stc
fcomip
sub
cmc
divb
pop
fcoml
jo
mov
xchg
mov
pusha
mov
pop
cmp
fidivl
pop
out
inc
mov
or
pushf
push
sahf
stc
lds
je
adc
loope
loop
push
ljmp
pop
or
scas
jo
xchg
call
fisttps
cmp
nop
stos
rcrl
sbb
outsb
sahf
outsl
lret
xchg
mov
out
push
call
mov
js
xchg
jl
cmp
jnp
and
bound
dec
adc
adc
gs
push
pop
cmp
cmc
mov
jecxz
cmp
fstpl
dec
xchg
push
jle
jmp
sbb
fcomps
je
je
divb
imul
mov
outsl
cmp
fisubrl
mov
sub
mov
insb
or
pop
inc
xchg
mov
mov
mov
lds
lret
scas
mov
lsl
inc
arpl
mov
fisttpl
sahf
pusha
daa
scas
es
aaa
arpl
jmp
aam
sub
pop
fsts
jno
jp
aad
sahf
shll
test
enter
sbb
insl
ret
push
lret
loope
mov
or
ficompl
test
daa
ret
sub
divl
psllw
rolb
mov
jb
rcrb
aaa
push
jp
outsl
mov
mov
clc
lahf
cltd
lret
fnsave
mov
jae
inc
sbb
outsl
mov
pop
jge
mov
lret
fimuls
ss
xchg
cmp
jmp
mov
inc
or
sbb
adc
ds
mov
ficoms
neg
adc
repz
lret
jae
fstl
xor
mov
insb
xchg
in
outsl
in
scas
loopne
push
into
scas
sub
fs
dec
adc
sbb
rcl
mov
sti
addr16
popa
or
adcb
pop
test
push
aam
push
test
lock
jge
subl
loop,pt
jae
scas
mov
cmp
mov
cmp
lods
mov
ljmp
std
mov
push
sbb
inc
aam
add
xlat
rol
int3
inc
into
inc
insl
mov
lcall
das
or
ret
shrl
add
push
fisubs
ret
insl
push
or
pop
mov
daa
push
negl
sub
sbb
enter
test
mov
daa
push
negl
sub
sbb
enter
test
mov
daa
push
negl
sub
sbb
enter
test
mov
daa
push
negl
pop
pop
mov
testl
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
movsl
inc
mov
test
jbe
push
xchg
js
jne
ss
aaa
add
xchg
inc
cmpsb
push
mov
inc
mov
test
jbe
push
cmc
push
lds
aad
and
out
mulb
je
inc
cmpsb
push
mov
inc
mov
test
jbe
push
cmc
push
lds
aad
and
xchg
jo
gs
repnz
ret
cmp
roll
and
shlb
in
ficompl
orl
adc
lods
sub
dec
push
jp
push
jmp
cltd
jnp
mov
out
divl
inc
jne
adc
filds
mov
daa
popf
mov
mov
push
and
adc
xchg
movsl
pop
push
mov
mov
xchg
bound
iret
aad
aad
mov
or
pop
ficoms
add
aad
cmp
pop
pusha
and
cmp
lds
cmpsl
push
out
ret
dec
scas
mov
int
adc
bound
jo
cmc
loop
testb
push
mov
inc
mov
test
jbe
push
cmc
push
lds
aad
and
out
mulb
jne
inc
cmpsb
push
lock
test
and
xor
inc
push
inc
push
stos
push
mov
jecxz
xor
and
sbb
data16
andb
orb
push
adcl
mov
lcall
aas
fadd
push
mov
ret
adc
add
es
and
out
mulb
jne
inc
cmpsb
push
mov
inc
mov
test
jbe
push
cmc
push
lds
aad
and
out
mulb
jne
inc
cmpsb
push
mov
inc
aam
sbb
fstp
mov
add
push
sub
or
ljmp
loopne
inc
pop
stos
xor
cs
push
cwtl
push
pushf
out
arpl
and
xchg
add
nop
mov
ret
sbb
dec
sub
inc
sbb
dec
mov
mov
aam
mov
or
push
cmp
lds
dec
dec
sbb
push
test
dec
lahf
inc
pop
sub
gs
pop
outsb
mov
push
and
cwtl
sub
jmp
jge
orb
enter
iret
stos
scas
and
in
add
jl
adc
into
mov
inc
hlt
fdivrl
sbb
je
fdivs
mov
push
mov
jbe
cmp
sbb
pop
shl
enter
mov
mov
add
sbb
loopne
repz
push
movsl
imul
inc
popl
sti
jnp
push
xor
pop
pushfw
mov
lea
xchg
jmp
mov
repnz
jbe
push
iret
mov
push
xor
shl
shrl
push
lret
adc
fstp
loop
inc
push
cltd
push
fwait
sbb
xchg
aaa
std
dec
pop
mov
dec
test
int3
dec
cld
pop
fiadds
cmc
mov
test
add
pop
fcomps
dec
inc
pushf
sub
mov
xchg
in
enter
cmp
push
andl
int3
cmpsl
adc
inc
jb
fcmovnb
sub
xlat
jae
dec
rolb
jo
test
push
nop
cmp
daa
jb
lret
notl
cli
scas
adc
push
scas
in
push
lret
cmpsb
push
mov
push
imul
mov
xchg
je
jge
pop
cltd
or
mov
loopne
inc
lret
in
lret
or
lock
mov
push
sub
dec
lahf
dec
mov
test
mov
imul
xchg
mov
je
dec
pop
cmp
push
cmp
idivl
mov
por
add
pop
adc
mov
test
push
fwait
pop
rcll
aas
in
ja
fisttpll
and
lcall
arpl
stos
bound
nop
outsl
sub
icebp
sub
adc
inc
mov
jle
jo
pop
add
pop
and
es
mov
mov
add
jne
stos
loopne
and
fwait
iret
xchg
jp
jmp
lods
leave
mov
adc
lods
mov
sbb
cltd
and
int
push
aas
ret
les
mov
js
pop
sarb
inc
sub
add
outsb
loopne
jle
stc
test
aam
movsl
push
insb
inc
xchg
mov
pop
jl
sub
addl
sbb
inc
jge
inc
add
in
sbb
cwtl
cmc
mov
stos
pop
mov
sbb
or
test
add
pop
or
push
movsl
sahf
cmp
jge
dec
jae
or
or
mov
jo
insl
clc
outsl
loope
xor
cmp
incb
xchg
sbb
fs
adc
mov
cmp
mov
mov
cli
xor
repz
lcall
push
jae
inc
mov
std
in
sbb
jns
stos
in
test
fstl
pop
ja
fs
loope
push
pop
cmp
data16
les
cmp
cmp
lds
sbb
int3
pop
lods
pushf
stos
cwtl
mov
das
out
test
inc
push
pop
ret
cmp
imul
mov
in
bound
fdivl
mov
mov
jmp
fisttps
inc
data16
cmp
into
call
xor
lea
xor
mov
loop
jp
shll
pop
jle
test
or
jne
leave
push
daa
mulps
inc
scas
pop
mov
mov
or
or
es
fimull
and
fwait
test
lea
jo
cmc
lods
lods
pop
in
fwait
lock
mov
fdivrl
data16
lahf
mov
sbb
xor
lahf
ds
jmp
and
std
in
pusha
jl
mov
scas
int
in
fidivl
xor
sub
ret
and
mov
lock
adc
addr16
xchg
mov
loope
mov
nop
or
push
test
push
out
inc
fcomps
xor
in
lock
cmp
js
push
loop
lcall
adc
xchg
bound
insl
mov
repnz
add
lahf
shll
les
adc
jbe
pop
lahf
es
ds
jge
xchg
push
add
xchg
xchg
arpl
rcl
loope
mov
jbe
or
inc
hlt
movl
mov
stos
xor
scas
scas
popf
push
fiadds
inc
and
outsb
sub
xchg
cmp
sub
or
push
pop
fiadds
xchg
sub
es
add
lret
daa
fld
jb
add
fdivrs
mov
jb
popl
and
sbbl
ds
add
repz
xor
and
mov
stos
inc
test
xchg
xchg
sarb
imul
sub
dec
pop
mov
jmp
mov
mov
lcall
rcll
pop
test
popf
adc
sub
pop
and
pop
jg
inc
jbe
adc
shrl
jne
and
dec
testb
mov
jnp
call
outsb
xor
fbld
movsl
pop
aas
cwtl
mov
rcl
and
mov
enter
xchg
es
je
pop
pop
jae
imul
shr
cmp
sbb
call
xorb
int
jae
notl
or
fs
mov
xlat
xlat
xchg
ja
bound
xchg
stos
fcmovne
lret
rclb
stos
divb
call
fldenv
dec
fwait
daa
lcall
test
jp
mov
subl
lcall
imul
dec
push
xchg
sub
fistpl
sahf
sti
je
pop
ret
mov
mov
les
fnstsw
mov
xchg
sbb
cmp
dec
and
mov
test
push
call
sbbl
fisttpll
cmp
fst
imul
cmp
cmp
xor
pop
mov
pop
push
pop
iret
loop
mov
xchg
stc
jle
std
push
push
divl
inc
mov
andl
jg
loop
jg
mov
dec
adc
lods
fisubrl
addr16
sub
test
pop
ret
leave
aam
in
cmp
dec
jbe
fdivs
hlt
lret
mov
mov
fisttpl
dec
and
sbb
pop
sbb
pop
inc
jle
mov
pop
imul
test
lahf
pop
mov
loopne
adc
cmc
pop
add
or
fmull
stos
insl
and
mov
inc
fnstcw
stc
mov
cmp
xor
inc
inc
cmpsl
lods
jge
sbb
mov
pop
in
cld
sbb
rcl
leave
xor
inc
jnp
mulb
push
out
cwtl
fildll
mov
fldl
pop
daa
xchg
test
arpl
mov
mov
scas
cmp
mov
scas
adc
jmp
dec
inc
or
iret
ljmp
and
mov
mov
pop
movsb
mov
movsl
cmp
sahf
jne
and
dec
stos
jne
insl
jb
testl
sbb
mov
dec
cmc
sub
mov
imul
sub
mov
out
vpmulhw
ja
push
xor
loopne
in
pop
inc
inc
cmp
jge
pop
data16
call
and
xchg
push
mov
gs
sti
ja
mov
dec
insb
mov
decb
inc
test
cmp
loop
mov
fwait
sahf
and
xor
and
sub
sub
cld
xlat
pop
icebp
mov
popa
mov
mov
pop
pushf
mov
enter
cmc
adc
jbe
push
out
scas
scas
mov
mov
add
test
add
push
mov
push
pusha
mov
mov
sub
pop
dec
clc
lds
and
cli
xor
jno
in
inc
dec
mov
adc
repz
inc
cmc
mov
sbb
les
popf
push
jl
inc
clc
push
cltd
pop
sbb
mov
std
jg
jge
adc
jns
and
leave
jb
cmp
pop
xor
in
mov
pslld
adc
adc
mov
outsl
jbe
push
call
push
inc
jmp
sahf
movsb
mulb
fsubrs
mov
aaa
mov
jmp
push
imul
adc
int
sbb
cs
push
sbbb
adc
pop
sbb
mov
subl
fldl
jp
inc
and
push
add
mov
pop
mulb
shrb
int
std
sub
xchg
roll
ffreep
iret
sbb
rcll
mov
psrld
xor
sub
imul
mov
ret
shlw
inc
push
jns
pusha
inc
jae
in
subb
mov
mov
adc
popa
cmp
or
divb
in
add
shll
leave
mov
jnp
ss
pop
dec
jo
add
sbb
lock
popf
inc
push
mov
andl
sub
xor
add
mov
lahf
push
cltd
sti
pop
push
in
aaa
rclb
andl
out
imul
movsl
cld
stc
les
add
data16
int
cwtl
pop
outsl
in
ss
mov
aad
push
gs
lea
int3
jecxz
lcall
xor
loop,pn
sub
gs
fnstsw
pop
addr16
xchg
push
fs
push
push
xlat
sbb
cmpsb
add
jmp
jmp
sbb
add
mov
jns
loope
cli
xor
std
sub
push
adc
sahf
lret
mov
stos
cmp
lret
insb
push
jo
push
xor
outsb
sti
enter
mov
mov
div
je
pushf
daa
mov
ss
and
repnz
adc
mov
add
cmp
jp
rclb
adc
inc
shrl
mov
and
mov
cmp
and
rol
inc
mov
pushf
inc
mov
xchg
cmp
dec
leave
addl
stos
pop
in
dec
fs
movb
mov
in
jne
int
mov
xor
add
jl
rolb
push
pop
or
cs
mov
jb
aad
punpckldq
stos
inc
adc
std
fisttps
sbb
mov
hlt
ret
inc
arpl
and
ja
mov
je
mov
jae
fdivrs
fs
mov
outsl
sbb
mov
push
or
or
lret
insl
or
les
sub
rorl
cmp
std
cltd
push
mov
dec
push
into
inc
lcall
mov
adc
mov
test
jbe
adc
push
fsts
mov
leave
xchg
cmp
adc
pop
add
insb
push
fucomip
jb
push
loopne
imul
lock
push
pop
pusha
adc
xchg
mov
and
pop
dec
cmc
push
xchg
pop
push
xorb
mov
pop
and
mov
pop
jae
pop
lea
clc
popa
leave
push
cwtl
lock
das
scas
imul
mov
xchg
repz
pop
fs
lcall
adc
xchg
pop
ljmp
dec
test
jns
test
mov
xor
test
stos
xlat
ficompl
pop
ja
inc
les
mov
ret
and
fstpl
mov
cmp
xor
fdivrs
xchg
cmpsl
gs
cmpsl
int3
mov
pop
test
jb
adc
push
addb
stos
mov
or
lret
ret
adc
lret
xchg
cmp
js
cmpxchg
out
scas
loop
mov
shrb
dec
testl
jo
sbb
mov
inc
divb
pop
jmp
in
pop
mov
pop
add
imulb
shlb
fwait
loopne
cmc
arpl
push
out
pop
fdivs
dec
inc
pushl
cmpsb
insl
loop
and
rclb
lods
mov
lahf
enter
jecxz
or
xchg
cld
in
fdivrp
jbe
inc
mov
cmpsl
mov
in
add
pop
sbb
pushf
mov
repnz
nop
shl
pop
std
cmp
mov
jno
sub
in
xchg
pop
mov
push
je
aas
and
cld
dec
cltd
jge
mov
cltd
mov
loopne
popa
xchg
dec
rorl
sub
rcll
mov
pop
cmp
fwait
jbe
cld
js
pop
into
xor
out
loop
and
cmp
movsl
lret
mov
push
out
test
test
add
mov
pop
pop
push
imulb
sub
sub
mov
in
outsb
jbe
mov
shr
ss
hlt
push
rcrl
insb
scas
popa
in
inc
xchg
repz
nop
xchg
inc
jo
icebp
inc
shll
aam
imul
aas
repnz
inc
fiadds
test
insl
std
rorb
push
mov
cs
add
or
and
add
mov
cmp
cmp
adc
sbbl
push
pop
jge
daa
stos
pop
sbb
add
movsl
dec
xchg
arpl
push
inc
mov
or
jbe
inc
mov
fdivrs
push
jb
int3
js
mov
int
int
jne
inc
sub
test
or
stos
xchg
push
test
aam
pop
jl
pop
lods
cli
popa
lods
xchg
inc
pusha
popa
addr16
fistpll
pop
inc
and
lock
jns
in
mov
push
je
lds
inc
xor
sbb
es
insb
inc
test
xcrypt-cbc
cmpsl
push
in
and
lret
cld
sbb
mov
jl
cmc
xlat
fcoms
mov
dec
add
fistpl
pop
jle
xchg
xchg
push
ss
jge
or
lods
test
cmp
xchg
int
cwtl
cmp
and
jmp
ljmp
outsb
subl
dec
xchg
add
sbb
sbb
sbb
pop
repnz
cmp
push
jl
mov
popa
loope
lcall
inc
sti
pop
sub
movsb
jg
fucomp
in
xchg
popf
sub
dec
jne
pop
mov
push
cmp
dec
sbbb
cmp
icebp
pop
mov
sub
sbb
cltd
push
adc
sub
fidivs
mov
imul
dec
lea
inc
and
sbb
jb
jne
cmpsb
or
adc
sub
mov
xchg
xor
lods
shlb
add
nop
lea
js
aam
lods
adc
fnstsw
enter
notb
mov
in
jb
jbe
and
xchg
pusha
jnp
dec
xlat
cmp
adc
mov
pop
xchg
stc
test
daa
aaa
faddl
push
cs
mov
and
xorl
and
int3
or
cmp
sub
jl
dec
sbb
push
mov
jp
test
and
and
in
xor
add
xchg
mov
mov
popf
shl
shrb
jle
fcmovb
push
stos
add
cmp
shrl
jae
push
xchg
inc
sub
lret
jae
scas
push
inc
mov
call
jne
jmp
dec
inc
push
stos
sub
jl
or
xlat
out
ret
fldlg2
sub
dec
in
push
xor
call
out
test
jmp
mov
or
out
pop
sub
dec
jl
pop
add
and
xor
movb
lods
jns
adc
ret
scas
outsl
jns
and
mov
dec
mov
add
aad
imul
jp
push
or
and
mov
cmp
cmpl
cmp
in
xchg
adc
or
in
jb
ja
pop
divb
and
fidivl
sbb
test
imul
adc
xchg
push
lahf
jo
lds
repnz
mov
pop
sbb
out
and
orl
sbb
xchg
and
in
pcmpeqd
cmpsl
dec
in
std
in
adc
mov
push
je
mov
lcall
fnsave
pop
repnz
pop
inc
pop
in
mov
shrb
push
push
or
ja
or
outsl
xor
outsl
and
jae
aas
insl
lods
sub
stos
repz
sbb
lahf
mov
fs
mov
lahf
push
mov
mov
lea
loop
pop
dec
sbb
sub
xchg
insl
pop
cmpsl
andb
pushf
xchg
sbb
add
pop
loop
sub
or
test
or
mov
jmp
lods
popf
push
dec
mov
xor
add
int3
daa
mov
imul
xchg
adc
pop
test
dec
lret
mov
pop
or
jge
sbb
and
mov
mov
sub
sub
sahf
lock
std
sbb
shlb
movsl
or
push
jmp
mov
mov
cmp
data16
cmp
xchg
adc
cs
nop
push
mov
movsl
adc
inc
mov
or
add
sub
inc
lea
addr16
jnp
jg
mov
push
dec
fdivrs
mov
xchg
lcall
dec
lods
mov
jb
js
addr16
clc
lds
ficomps
lret
push
mov
test
jl
and
push
pop
pop
add
adc
icebp
loopne
or
pop
in
inc
popw
sub
arpl
test
xchg
stos
xor
daa
sub
sub
mov
mov
or
call
movsb
xchg
jbe
inc
adc
es
dec
sbb
xchg
lret
xchg
jb,pt
fistl
and
mov
ss
mov
paddsb
fstl
sub
js
test
arpl
pop
jbe
dec
jo
cmpsl
fistpl
pop
push
jp
mov
ds
es
out
movb
aas
mov
scas
lods
xchg
imul
cmc
mov
add
jnp
stc
xor
add
sbb
xchg
inc
or
cmpsl
cmp
es
jmp
rcrl
lcall
jge
mov
popf
jns
mov
sub
out
inc
inc
cmp
lahf
loop
mov
and
repz
scas
inc
xchg
in
adc
int3
mov
pop
fs
inc
mov
lods
add
xor
inc
jle
jg
and
out
cwtl
cli
pushf
stos
lock
add
lahf
mov
push
loop
fnstenv
sbb
mov
mov
mov
mov
loopne
sub
iret
push
sub
mov
push
out
and
lcall
xchg
mov
sub
fwait
or
insb
add
xchg
xor
jl
pop
out
cmc
push
jp
std
jb
fmul
xchg
adc
fbstp
cmpsl
je
push
scas
jmp
sti
push
sbb
pop
dec
dec
je
iret
mov
fisttps
push
cmpsb
xor
dec
xchg
xor
dec
cmp
addr16
jmp
xchg
popa
sub
insb
sub
inc
popf
sub
and
stc
insl
or
xchg
mov
adc
addl
clc
iret
mov
shrb
mov
fs
fwait
adc
or
push
sbb
pop
scas
xor
jp
test
repz
mov
ret
test
cmpsb
xor
out
adc
add
or
cmc
jecxz
sub
jae
stos
dec
jmp
call
loop
mov
mov
or
lahf
mov
mov
push
xchg
mov
dec
stos
or
rorl
enter
fs
sub
sub
sub
cmpsb
push
cmp
loope
sbb
cmp
or
jp
mov
pop
rol
aaa
fsubrl
fisubrl
lods
mov
addl
xor
xor
roll
mov
das
fstpl
fistpll
ds
cli
adc
push
test
jecxz
mov
aam
repnz
insb
je
addl
pop
lock
add
js
dec
pop
sub
push
notl
push
cmp
push
arpl
dec
or
imul
pusha
mov
sbb
repnz
insl
mov
stc
or
xor
scas
xchg
dec
call
lods
mov
mov
mov
cmpsb
addr16
test
sbb
aaa
and
xor
xchg
or
leave
pop
enter
jbe
out
push
sub
cmp
and
push
out
test
push
mov
test
inc
jne
xor
mov
jb
scas
inc
inc
shlb
mov
or
mov
test
adc
mov
mov
fimuls
xorb
adc
jno
mov
je
adc
mov
xchg
pop
shrd
loop
int
jg
loopne
pop
and
push
cmp
js
int3
in
mov
add
stos
ds
in
mov
lea
fildl
dec
gs
mov
fmull
xchg
and
cmp
xchg
dec
cltd
dec
cli
cld
repnz
mov
adc
jl
dec
popf
fisubs
xchg
fwait
lret
push
mov
push
cmc
push
lds
aad
and
out
mulb
jne
inc
cmpsb
push
mov
inc
mov
test
jbe
push
cmc
push
lds
aad
and
out
mulb
jne
inc
cmpsb
push
mov
inc
mov
test
ja
push
hlt
push
lds
aad
and
xor
mulb
jne
inc
cmpsb
push
mov
inc
mov
test
jb
push
cmc
xchg
inc
cmpsb
push
leave
fidivrl
lret
out
adcl
pop
lods
dec
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
inc
jnp
xchg
pusha
movsb
jo
int
bound
rolb
loopne
icebp
addb
je
je
test
pusha
movsb
jo
add
adc
and
xor
rolb
adc
add
xor
daa
nop
test
popf
push
xchg
pusha
mov
adc
and
xor
shl
mov
xor
add
fidivs
xor
pusha
rcrb
leave
sub
xor
imul
aad
icebp
cwtl
mov
or
fcmovnbe
cmp
adc
fisubrs
jl
test
pop
xor
xor
rcll
adc
adc
add
aam
nop
outsb
sbb
addl
lds
push
xchg
or
adc
mov
push
jmp
les
stos
and
test
mov
pop
push
pop
in
sub
mov
xor
sub
f2xm1
fs
mov
movsb
sti
jg
loop
lods
fidivs
jns
add
fsubs
pop
sbb
mov
scas
add
adc
and
xor
rcrb
loopne
lock
mov
loope
xchg
or
bound
shrb
loopne
mov
sub
sbb
aam
mov
mov
out
andb
jge
jne
push
lock
ss
cmp
or
adc
lds
dec
test
aam
in
hlt
rolb
loopne
lock
inc
nop
push
mov
test
pusha
movsb
jo
add
adc
and
xor
rolb
loopne
lock
inc
nop
push
mov
test
std
test
stc
mov
jle
push
mov
lret
jb
ret
mov
in
ljmp
cmpsb
flds
mov
scas
mov
das
inc
sub
adc
mov
push
dec
sub
iret
xchg
sbb
lock
or
push
lret
mov
adc
cmp
jp
das
aam
adc
call
lods
push
repnz
lock
jge
mov
xor
shlb
mov
in
dec
movsl
xchg
fcomps
ljmp
mov
orb
or
cmp
xlat
cmpsl
xchg
sbb
rorl
movsl
adc
cmp
sarb
cmp
shl
and
lret
in
out
adc
jno
pop
ja
dec
inc
sub
es
hlt
xchg
cwtl
mull
faddp
fists
add
dec
sub
pop
xchg
xchg
das
xchg
add
pop
sub
fbld
scas
pop
imul
ret
aaa
inc
lds
mov
inc
dec
add
inc
subb
jae
jmp
xor
add
pop
movsl
cmp
loop
scas
jmp
and
fidivl
sub
sub
je
pop
out
and
pop
movsb
andb
lret
and
roll
pop
test
and
xchg
fxch
add
inc
loope
shlb
xor
cmc
sub
jne
or
cmp
scas
mov
stc
xorb
mov
pop
mov
pop
arpl
dec
jmp
inc
aam
scas
pusha
cmp
int
stc
or
dec
jns
mov
addl
dec
pushf
mov
int
sti
arpl
push
cli
pop
push
cld
mov
adc
push
pusha
lret
sub
bound
daa
movsb
enter
rclb
mov
cs
and
pop
mov
scas
xor
sub
call
fisttpll
ljmp
mov
ljmp
ret
insb
ret
scas
rcrb
push
test
xchg
dec
or
sub
xchg
dec
adc
dec
fdiv
xchg
out
fiadds
aam
imul
jle
adc
lahf
xor
sub
in
sti
and
dec
ror
mov
pop
cs
xchg
or
jb
test
shll
ficoml
aaa
je
dec
test
andl
insl
cmp
mov
sub
pop
popa
inc
dec
mov
fsubl
aas
push
in
sub
fimull
xchg
faddp
sub
fadd
and
jb
jg
sbb
xchg
inc
rcl
adc
sbb
loop
jno
fsubs
test
cmpsl
out
jmp
add
add
add
push
icebp
stc
nop
jecxz
es
lods
js
rcrb
lods
jae
out
pop
fistpll
mov
inc
jle
ficoml
shll
rcll
data16
pop
fcoml
adc
jb
mov
pop
jns
outsl
ret
shlb
inc
sbb
frstor
les
lods
jns
jb
inc
nop
lahf
jae
out
rcr
dec
add
test
sbb
clc
and
mov
inc
jge
out
pop
xchg
sub
or
xor
cmc
mov
push
test
mov
push
mov
mov
and
cmp
cmp
outsb
dec
sahf
test
fldcw
jl
push
mov
pusha
nop
ret
mov
imul
cmpl
adc
pop
cld
icebp
stos
in
stc
and
mov
pop
repz
cmp
mov
cmpsl
cmp
sub
es
call
movsl
mov
mov
mov
ret
repnz
inc
stc
sti
mov
sub
enter
insl
jl
push
xchg
lock
roll
sti
xchg
adcl
mov
ss
add
cwtl
mov
gs
push
and
lock
and
test
stos
add
add
je
aaa
dec
or
jbe
sub
and
or
jae
xchg
arpl
push
cmp
iret
and
call
xchg
inc
sti
and
pop
add
adc
aas
xor
or
jmp
cmp
lcall
inc
movsl
push
or
jg
enter
xchg
push
test
sub
jo
fstps
add
jle
imul
cmp
je
inc
jle
inc
lea
test
cmp
fisubrl
stos
movsb
xchg
mov
inc
lds
imul
ret
out
outsl
sub
mov
enter
pop
leave
xor
frstor
dec
pop
loop
mov
add
fmul
imul
ss
dec
loopne
repz
mov
mov
sub
fstpt
mov
pop
sub
cmc
lock
mov
lret
jae
inc
test
sub
int3
insl
push
xor
mov
pop
xor
mov
out
fstpt
movsb
orl
lods
fsubrs
jnp
pop
push
movsl
sbb
inc
mov
inc
mov
xor
push
sub
cmp
cmp
mov
je
es
loop
sub
ret
inc
pop
inc
push
jbe
clc
pop
movsl
sub
add
fs
add
sub
out
jle
mov
push
xchg
call
lret
aam
pop
pop
aaa
push
icebp
jl
orb
xchg
mov
in
pop
sub
repz
xorl
orl
lds
pusha
xchg
jne
cltd
mov
lret
clc
inc
xor
pop
pop
out
xor
sti
or
jmp
adc
cmp
mov
pop
mov
fwait
jmp
fcomps
cltd
sub
fs
js
mov
sub
icebp
arpl
sbb
loopne
inc
inc
jp
jns
mov
mov
inc
add
iret
stos
mov
ja
pop
lds
lods
popa
push
mov
jns
ljmp
jbe
shll
aas
mov
std
jne
sbb
pop
imul
call
pop
fwait
gs
arpl
stos
and
mov
aas
mov
and
mov
stos
je
into
cmp
pop
jg
rclb
xchg
call
fsubs
xchg
xchg
add
dec
or
pop
les
mov
mov
sarl
adc
push
sti
dec
pop
mov
jo
mov
mov
xchg
js
cmp
xor
mov
pop
nop
lret
mov
xor
jns
cmp
popa
adc
or
and
fisttpll
dec
rcrb
fisubrl
pop
sahf
loop
and
pop
mov
sub
iret
push
mov
cld
lret
lea
adc
outsl
sti
int3
mov
repnz
dec
sarb
add
sarb
jecxz
addr16
adc
push
fnstsw
push
mov
pop
fnstcw
xchg
jmp
sub
inc
sbb
jmp
mov
push
sub
or
lods
aam
aam
xor
fucomp
pop
jbe
pop
lea
sub
and
mov
add
pop
cmpl
mov
xchg
cmp
sahf
movsl
add
iret
mov
adc
std
rorb
leave
leave
lret
sahf
jle
roll
mov
test
pushf
fnstcw
in
mov
lahf
test
xor
testb
in
icebp
iret
repz
enter
out
pop
push
mov
mov
test
inc
lret
scas
and
xorl
mov
pop
adc
jno
sarl
inc
push
inc
mov
sbb
cld
push
and
add
fsub
mov
mov
cli
outsl
jmp
daa
mov
aad
in
mov
dec
xor
add
dec
push
xor
inc
ret
xchg
loop
insb
jg
xchg
dec
push
xchg
pop
ja
lret
jg
clc
lahf
inc
in
fstps
and
jge
sbb
cwtl
adc
les
call
mov
sub
ret
pop
mov
loopne
inc
daa
add
test
cld
scas
dec
aaa
or
ds
xor
xor
in
and
xchg
stc
sub
or
inc
clc
push
cmp
enter
dec
cmp
outsb
leave
clc
push
out
pop
outsl
call
push
push
inc
push
ret
and
arpl
insl
ja
jno
leave
adcb
sub
cmp
lcall
cli
pop
std
mov
xchg
xchg
mov
adc
in
shrb
jle
mov
pushf
repnz
push
push
test
sbbb
aas
cmp
in
sti
xlat
pusha
xor
ret
jns
rol
sti
jg
mov
or
xor
lcall
or
mov
push
mov
xor
jge
sbbl
push
hlt
dec
daa
and
add
out
pop
ret
cmpsb
mov
mov
mov
clc
push
out
sbbl
mov
xchg
or
inc
in
push
cmp
notb
inc
pop
cmpsb
mov
mov
test
nop
ret
pop
fs
imul
daa
cld
jnp
mov
dec
shlb
jge
lock
add
dec
mov
stos
add
cmp
cmp
jbe
mov
int
icebp
movsl
hlt
lret
mov
mov
insb
sahf
fs
nop
cmp
sbb
test
adc
arpl
daa
ds
mov
out
rcll
loopne
gs
lds
mov
mov
cwtl
lds
xor
sbb
and
sbb
mov
add
jl
mov
hlt
iret
push
dec
adc
jo
xchg
pop
cld
insb
xchg
mov
pop
sbb
fidivrs
cwtl
insb
ljmp
icebp
xor
mov
fs
pop
stc
dec
fdivl
rolb
out
mov
out
mov
fistl
mov
insb
or
movsb
xchg
sub
pop
test
sti
xchg
outsb
mov
cmpl
fxch
fsubr
ficompl
dec
scas
inc
and
outsl
sbb
shl
add
inc
or
xchg
mov
push
fs
mov
push
das
dec
in
lret
sbb
mov
mov
xchg
xchg
js
sbb
add
ror
jle
lods
inc
xor
jg
test
and
bound
add
sub
popa
push
pop
cmp
leave
es
mov
jnp
or
cmp
vlddqu
pop
not
add
sbb
je
jbe
aas
ret
or
add
lods
mov
pop
inc
orl
ds
repnz
out
sub
push
inc
jecxz
fwait
cmpsb
or
outsl
mov
in
lcall
mov
dec
add
aaa
test
cs
ret
sbb
mov
dec
xor
or
mov
inc
cld
mov
mov
jg
sbb
rolb
iret
jae
iret
xor
icebp
xorb
push
das
mov
or
and
mov
mov
lret
pop
sub
test
adc
inc
not
xor
je
sbb
jo
idiv
je
or
roll
mov
test
fnstcw
pushf
fdivp
dec
adc
mov
pop
enter
es
jnp
sub
inc
inc
dec
daa
movsb
in
cmp
push
ja
repnz
dec
push
pop
fs
imul
in
les
xchg
dec
pushf
jl
loop
push
int3
les
or
and
and
testl
mov
aas
xchg
mov
and
call
add
sub
mov
bound
mov
movsb
xor
cmp
into
test
sbb
mov
addl
andb
popa
inc
jle
pop
aas
subb
jns
push
stc
aas
test
stos
cmp
xchg
sbb
xchg
lea
lret
inc
loop
dec
xchg
mov
fsubrs
pusha
push
jne
into
insb
cmp
jp
sub
lods
push
and
loope
xlat
jg
sbb
jmp
and
lds
dec
dec
adc
inc
shl
xlat
dec
cs
push
rol
outsb
frstor
ds
inc
repz
mov
nop
jns
lret
mov
std
mov
mov
std
xchg
cmp
push
inc
sub
mov
xor
mov
jle
aas
stos
sti
cmp
jbe
add
and
cltd
cmp
sahf
test
shr
ret
mov
inc
in
cli
lret
add
sbb
testb
dec
mov
xchg
lea
mov
cwtl
mov
or
bound
out
mov
inc
fsub
mov
and
push
mov
aam
loope
pop
mov
jno
jp
call
pop
mov
add
jns
jle
jo
and
cli
adc
mov
in
inc
xchg
inc
jns
push
xchg
scas
das
dec
xor
mov
fcomp
xchg
das
rcl
out
adc
loope
cmpsb
mov
int3
pop
cltd
movsb
shll
mov
cmp
jbe
ja
sar
push
clc
rcll
cmp
cld
mov
pushf
sahf
mov
xchg
jae
fldcw
das
jnp
pop
repz
fstpt
call
pop
add
rcrb
pop
push
shrb
or
inc
jge
out
stos
mov
adc
xor
push
stc
js
dec
js
xchg
std
or
outsw
nop
pushf
xchg
mov
and
dec
and
cmpsb
xchg
xor
push
inc
jbe
or
sbb
in
and
adc
dec
inc
mov
sub
jl
daa
push
test
inc
cmpsl
std
sti
jns
pop
aaa
movsl
stc
ss
cmpl
sbb
test
sub
fldt
jae
mov
mov
push
cmp
enter
push
dec
mov
divb
xor
jmp
pop
push
lock
cmp
mov
cmp
dec
in
xchg
mov
fsubs
adc
div
xchg
push
and
ret
int3
out
cmp
push
and
cmpsl
pusha
hlt
push
jg
loopne
sahf
imul
cmp
aas
in
hlt
xorl
loopne
imul
or
out
add
pop
int3
cmpsl
sub
fcoml
cltd
and
sbb
int3
pop
mov
mov
ds
add
xchg
sti
pop
jae
sbb
into
sbb
fwait
mov
xchg
fcmovb
into
xor
mov
leave
int
leave
ja
cld
add
ds
mov
adc
xchg
fnstcw
and
inc
jns
inc
add
xor
xlat
shlb
inc
mov
cmp
push
and
movsb
lods
pop
in
flds
cs
hlt
dec
pop
cmpb
xlat
push
mov
cmp
arpl
repnz
dec
stos
cmpl
sub
pop
sbbb
jne
std
mov
ficomps
popa
sub
popf
es
loop
scas
xchg
and
inc
rcrb
sbb
jae
mov
leave
cltd
cld
add
clc
jno
sbb
lcall
cmp
sbb
xor
ret
jns
inc
lret
icebp
mov
cs
mov
ja
test
stos
mov
js
shr
xchg
xor
xor
pop
stc
mov
mov
inc
adc
stc
mov
pop
enter
adc
jbe
pusha
cmpsb
push
jl
or
cmp
dec
outsl
and
xchg
scas
loop
enter
movsl
outsb
xchg
add
jg
test
mov
addr16
loop
stos
sbb
lret
stos
aaa
pop
add
adc
push
pop
or
cmp
lea
pushf
push
test
push
or
repz
ss
mov
xor
mov
loope
cmp
mov
jo
ljmp
jno
test
dec
cwtl
cmpsl
test
jle
ljmp
es
aaa
int
inc
or
cli
add
cmpsb
xor
push
jecxz
in
das
xchg
push
mov
inc
mov
cmpsb
sbb
sub
out
ret
aad
or
fcoms
adc
xchg
xchg
cmc
or
jge
into
fldpi
pop
js
stos
inc
call
pop
sahf
out
mov
hlt
or
jge
dec
xlat
mov
sbbb
pop
inc
loop
add
popa
ret
jns
es
adc
scas
mov
leave
pop
push
pop
xor
inc
pop
pop
mov
es
vmovq
jnp
push
sar
cmp
cmpsb
dec
rol
mulb
out
dec
fs
and
jmp
dec
pop
mov
je
leave
icebp
sub
add
sub
test
cmpsl
xchg
imul
pop
sahf
and
roll
mov
negl
jecxz
adc
mov
xor
test
add
loope
cmp
sbb
dec
mov
dec
jns
ljmp
add
call
mov
ljmp
jb
push
pop
mov
daa
in
sub
iret
or
or
sbb
std
push
xchg
ret
scas
mov
xchg
sub
sbb
jns
dec
mov
jmp
fdivr
push
sbb
adc
mov
sub
repz
push
out
enter
mov
lcall
mov
int3
push
lods
pop
mov
xchg
fs
das
xchg
movb
mov
sbb
cmp
cmp
das
lcall
sub
test
fstpl
mov
negl
and
ds
sub
push
jo
xchg
sbb
pop
loop
rorl
and
shll
mov
fimuls
int
push
cwtl
mov
or
imul
je
inc
add
dec
mov
mov
adc
jl
imul
add
aad
push
push
push
xlat
pushf
fs
ds
out
mov
test
fisttps
jl
outsb
lea
xchg
xorb
mov
xchg
jo
mov
adc
sbb
call
mov
mov
rcrb
mov
jbe
adc
je
pop
or
stos
pop
in
push
or
call
addr16
pop
push
in
cmp
aam
iret
sahf
adc
imul
insl
pop
sahf
xchg
nop
jno
xor
mov
je
std
punpckldq
inc
outsb
pop
inc
lret
daa
or
cmp
jge
sarl
loopne
dec
dec
ss
sub
les
int
stc
stos
fldl
push
ja
cmc
imul
gs
int
jmp
sti
fisubl
jp
push
dec
pop
roll
fdivs
int
fldcw
fisubl
jge
adc
add
fwait
pop
lahf
xor
out
lret
gs
ret
pop
mov
add
scas
push
mov
outsb
and
iret
inc
fidivs
jns
inc
jne
jmp
xacquire
push
mov
xor
sahf
dec
mov
push
lahf
cltd
popl
test
pop
xchg
mov
jb
xchg
cmp
jbe
or
stc
popa
adc
call
fisttpll
cmp
sbb
or
addr16
sub
mov
mov
fs
iret
jne
jg
loopne
incl
cli
push
icebp
push
lods
leave
add
pusha
jge
daa
mov
xchg
ljmp
js
ss
mov
lcall
push
sub
ja
lret
dec
dec
data16
push
mov
adc
mov
lods
sub
fsubrp
sub
push
mov
or
outsb
dec
jg
pop
dec
jle
xor
test
lods
sbb
sub
or
out
pop
adc
popl
bound
sbb
push
je
fstl
dec
sub
add
jnp
sbb
inc
add
aaa
pop
popf
jle
pop
in
sti
mov
ss
ds
mov
cmpsl
add
mov
pop
rorl
dec
sbb
sahf
sti
je
sbb
aas
ret
or
in
insb
das
mov
mov
mov
mov
adc
ror
adc
adcb
jp
pop
aaa
mov
xchg
sbb
jp
daa
adc
jo
jmp
inc
or
inc
into
jne
shl
sub
jns
xor
pop
jl
add
sti
cs
jg
sub
sbb
push
pop
add
dec
stos
mov
nop
or
mov
cwtl
xor
data16
gs
gs
lods
pushf
xorb
adc
jmp
mov
adc
push
or
mov
cli
push
inc
jg
cmp
sub
mov
push
pusha
and
jg
leave
mov
push
cltd
test
test
pop
mov
nop
xor
jmp
mov
bsf
enter
xor
out
inc
fwait
cmp
adc
xor
shlb
jae
pop
popa
adc
subl
xor
mov
jb
adcb
inc
into
test
fisubrl
pop
xchg
imul
adc
mov
mov
xlat
jb
leave
lret
scas
sub
pop
andl
insl
xlat
cmp
mov
push
data16
shr
pushf
popf
push
add
sub
ret
mov
push
mov
int
repnz
jnp
loopne
xor
clc
sub
scas
or
mov
mov
ja
cmp
cmp
ret
shlb
dec
pop
je
movsl
and
xchg
loope
cmpsl
jmp
inc
lret
dec
hlt
pop
pop
lcall
in
pop
icebp
cmp
sub
inc
mov
decb
pop
ret
ds
cmp
inc
hlt
pop
icebp
cmp
push
pop
sub
mov
les
aam
in
hlt
rolb
loopne
lock
inc
nop
push
mov
test
pusha
movsb
jo
add
adc
and
xor
rolb
loopne
lock
inc
nop
push
mov
test
xchg
loopne
jo
add
aam
in
hlt
rolb
loopne
lock
mov
test
pusha
movsb
jo
add
adc
and
xor
rolb
dec
and
inc
lock
loopne
rcrb
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
ljmp
test
xchg
or
js
outsb
push
fstpt
stos
lret
mov
jp
push
pop
cmp
cmp
les
js
sbb
cwtl
ljmp
mov
enter
call
pop
nop
dec
sub
sub
or
inc
ljmp
pop
mov
or
push
push
dec
sbb
outsl
or
loope
cmp
aad
fwait
call
int
add
das
bound
xchg
cmp
mov
cmp
mov
inc
mov
xchg
stc
jb
lcall
imul
or
jecxz
adc
xor
enter
clc
mov
sub
and
orl
ljmp
push
pop
fyl2xp1
aaa
mov
cmpb
imul
jl
or
xchg
lret
lahf
cwtl
mov
test
mov
leave
pop
jmp
push
shrb
iret
adc
pop
loop
loop
int3
xchg
add
inc
inc
mov
fldcw
insb
and
mov
sub
mov
ljmp
hlt
stos
xor
dec
or
jnp
push
jns
dec
daa
pop
adc
xchg
ficomps
mov
scas
ror
out
idivl
sub
pop
add
sbb
jb
test
xchg
mov
mov
test
cltd
xchg
orl
dec
cmp
dec
jnp
sub
js
push
fidivrl
stos
enter
call
pop
cmp
cmp
dec
sbb
push
fidivrl
stos
enter
call
xlat
fwait
sbb
rorl
decb
imul
stos
imulb
sti
fstpt
fiadds
sahf
push
fdivrl
call
testl
mov
mov
shlb
lahf
jnp
mov
imul
fildll
popa
out
pop
movsl
sub
pop
addr16
push
mov
in
out
call
imul
xor
jl
sub
mov
cmp
ret
dec
xchg
ds
bound
jae
cmp
and
testl
dec
sbb
ss
rcll
push
cmpsl
notb
mov
jns
push
pop
xorb
mov
mov
jle
xor
sbb
call
or
and
mov
sbb
mov
xchg
ja
fidivrs
jnp
add
cmp
jbe
jmp
inc
adc
push
out
aaa
sub
pop
call
push
addb
popa
test
ja
inc
add
add
enter
fldenv
cmp
rcl
add
xchg
sub
and
outsl
ret
push
mov
pop
imul
inc
and
lret
aaa
fsubs
inc
les
fsts
mov
cmc
pop
arpl
mov
scas
and
or
inc
mov
mov
cmp
adc
mov
shlb
jb
xor
add
jg
sbb
loopne
push
or
lcall
outsb
mov
mov
rorb
fdivl
dec
cwtl
or
pop
and
aaa
mov
inc
cli
movsl
and
fs
cmp
mov
ljmp
pop
mov
inc
notl
xor
sub
insb
cmp
and
mov
dec
fldenv
cmpsl
ja
movsl
inc
lret
imul
out
fwait
data16
cwtl
push
loopne
bound
call
sbb
mov
movsb
test
push
aas
stos
insb
ja
inc
add
add
sub
ljmp
jns
add
iret
jmp
xor
cld
sub
ss
pop
clc
xchg
add
lret
daa
dec
jo
xchg
repnz
xor
dec
call
ficompl
mov
out
mov
bound
push
ljmp
or
xor
test
sub
loop
add
push
mov
pusha
push
xchg
mov
pushf
inc
imul
fdivp
bound
jbe
int3
push
jmp
in
test
mov
jae
lock
jge
mov
movsl
sub
push
mov
push
cs
jl
into
call
test
fcoml
pop
mov
imul
testb
cwtl
push
push
iret
testb
adc
stos
cmp
sub
jb
inc
mov
fisttpl
repz
pop
xchg
movsb
ss
xor
das
scas
aad
testl
xor
sub
ljmp
and
fisubl
ficomps
and
jg
dec
jecxz
adc
lods
jbe
cmp
dec
enter
enter
lock
daa
cmp
xlat
cmp
push
movsl
jmp
das
add
push
popa
xor
mull
jge
fsts
fdivr
dec
mov
pop
mov
or
add
in
scas
mov
mov
gs
add
jae
aam
stos
xor
out
sbb
mov
scas
mov
in
into
cld
loopne
and
inc
daa
fistpll
jae
mov
xlat
sbb
mov
pop
fwait
fwait
js
push
popa
or
pop
cmpb
jnp
xor
loop
mov
cmc
add
xchg
std
jle
mulb
push
iret
in
mov
push
rorb
add
cmp
pop
pop
push
mov
mov
arpl
adc
or
sub
or
or
mov
test
test
sub
mov
dec
mov
jnp
and
xchg
dec
sbb
inc
jb
mov
daa
pop
xchg
jnp
lods
push
cli
rolb
cmp
mov
mov
or
mov
aam
pop
aad
mov
addr16
sbb
cmpsb
outsl
dec
sub
orb
pop
jb
pop
enter
push
cltd
dec
push
popa
mov
fidivrs
sti
sti
clc
daa
ja
enter
inc
call
cltd
into
scas
repnz
pop
into
stos
and
xor
mov
xchg
push
adc
pop
inc
ljmp
sbb
iret
jbe
cmp
mov
add
jbe
sbb
push
push
ss
pop
and
mov
inc
lds
nop
pushf
test
xor
adc
mov
jecxz
daa
scas
pop
jo
loop
test
movsb
cmp
insb
lock
out
pusha
int3
sub
and
jns
jae
mov
inc
clc
mov
xchg
mov
addb
insb
jmp
cmpsb
ja
or
and
pushf
ret
pop
les
aaa
clc
icebp
pop
xor
push
adc
cmp
std
push
rclb
xchg
test
js
dec
outsb
iret
aad
jb
inc
test
cmpsb
pop
inc
dec
sti
test
push
loop
jae
dec
inc
xor
mov
mov
mov
aam
sub
xchg
adc
lock
sahf
dec
cmp
out
faddl
cmc
dec
mov
cmp
repz
arpl
js
fsubr
movsb
lds
les
loope
cltd
jge
ret
testb
cmp
inc
arpl
add
movsb
pop
ljmp
sarb
cli
xchg
cmp
sbb
xor
sbb
sbb
fidivrs
jl
sbb
fucomp
flds
test
xor
mov
mov
jns
aas
je
jbe
jae
stos
aas
push
and
mov
out
pop
shl
add
in
lret
mov
xchg
sub
adc
cmpsb
in
sbb
jb
mov
out
cmpsb
cmp
fs
sbb
pop
sub
push
lcall
int3
aaa
push
cmp
pop
jae
jbe
mov
push
jbe
push
xchg
or
xchg
pop
jno
andl
xchg
xchg
or
into
icebp
pushf
into
enter
cwtl
mov
movsb
pop
push
xchg
adc
dec
xorl
xchg
push
dec
or
add
gs
xchg
jns
mov
add
and
es
into
push
push
loop
inc
dec
mov
out
cmp
adc
lock
pop
in
jmp
xchg
cld
cwtl
addr16
pusha
sub
inc
aad
xor
inc
lcall
or
mov
je
jmp
sub
dec
or
shl
stos
lods
and
js
xlat
int3
notb
mov
mov
or
sbb
pop
pop
shlb
shlb
xor
shl
pusha
xorb
outsb
xchg
addr16
mov
fimull
movb
mov
mov
fucomp
lret
push
mov
frstor
jle
insl
jecxz
dec
fsubr
sbb
test
pushf
xor
push
aaa
jp
cltd
and
int3
mov
lahf
je
ret
movsl
mov
das
mov
fiadds
adc
ret
xlat
xor
gs
hlt
mov
dec
test
test
adc
clc
mov
pop
std
repnz
lcall
hlt
pop
and
cmp
mov
lcall
cli
iret
daa
dec
pop
out
and
dec
mov
cmc
test
mov
inc
push
sub
addr16
out
push
repnz
cs
sbb
mov
je
cmp
lcall
adc
push
sub
sahf
loop
inc
and
mov
xor
in
testl
pusha
pusha
sarl
mov
jb
adc
push
lret
xchg
nop
adc
inc
sahf
fs
call
sahf
jno
dec
cli
adc
mov
js
cmp
repz
sub
xchg
cmp
or
ret
div
imul
xor
lods
test
mov
jnp
adc
mov
icebp
in
jp
loope
test
cltd
add
imul
or
jle
xor
cmpsl
mov
adc
jb
or
repnz
jp
lcall
cmp
das
jno
cmpsb
and
in
push
push
mov
bound
rorl
sub
xor
xor
push
data16
std
adc
test
imul
cmp
dec
adc
cwtl
push
out
mov
push
adc
iret
dec
loop
adc
sti
and
inc
into
pop
stc
xor
shlb
sbb
pop
mov
push
hlt
insb
cmp
pop
insl
repnz
cmpsb
shlb
sub
mov
ret
mov
mov
sub
and
rol
je
mov
jbe
hlt
dec
data16
mov
sbb
cmp
pop
pushf
mov
add
inc
lahf
scas
sbb
cmp
or
mov
cmp
push
out
lock
add
xor
xor
or
ss
stos
pop
and
pop
and
cmp
push
fs
dec
icebp
cmc
punpcklbw
adc
lods
push
xchg
ljmp
adc
imul
nop
push
sbb
add
arpl
add
data16
push
pop
sti
scas
mov
mov
jge
push
pushf
fistpll
jns
ljmp
add
xlat
imul
pusha
mov
testl
lahf
in
sbb
add
jnp
add
daa
aas
cmpsl
inc
divps
dec
xor
cmp
jge
loop
xchg
cwtl
fnsave
lret
popa
mov
inc
ffree
cld
mov
sbb
adc
sbb
pop
sbb
mov
xorl
lahf
out
cld
push
dec
mov
jo
adc
mov
dec
pop
xor
mov
pushf
lahf
fs
dec
mov
or
or
aaa
adc
outsb
out
lds
jno
adc
pop
dec
sahf
mov
aaa
popf
cmpsb
mov
sub
loop
dec
xchg
lahf
mov
pop
loopne
mov
test
xlat
mov
ret
pop
mov
in
mov
pusha
mov
pop
scas
or
jecxz
aaa
pop
lods
enter
out
pop
or
call
jne
mov
das
jb
idiv
fwait
stos
leave
dec
movsb
outsl
sbb
ss
aad
cld
jne
ja
pushf
or
jge
inc
pop
test
push
jecxz
loopne
and
sbb
fbstp
inc
mov
jb
mov
push
cld
inc
cs
push
std
xchg
test
movl
push
push
sub
outsl
xor
pop
pop
and
inc
inc
cmp
outsb
pop
or
mov
xchg
test
xor
mov
inc
sub
jne
aam
mov
mov
xchg
cmp
jae
stc
lea
movsl
jecxz
mov
xchg
pop
mov
repnz
or
dec
outsl
lods
int3
pop
mov
inc
mov
call
mov
fbstp
push
jmp
and
sbb
cwtl
stc
sbbl
pop
cmp
and
xchg
xor
mov
pop
push
stos
mov
cli
cwtl
inc
jmp
push
mov
lods
aaa
roll
mov
andl
mov
lcall
sbb
and
cmpsl
pop
das
push
aam
std
xor
add
popa
scas
notl
cmp
cmp
call
or
mov
daa
and
sarb
ss
ja
fcmovne
cmp
addr16
fwait
ss
mov
add
jg,pt
jl
xor
aaa
push
mov
mov
in
xchg
aaa
enter
into
flds
rorb
fistpll
fwait
push
sub
cs
les
add
add
inc
mov
das
lret
lahf
push
popa
jae
cld
ds
out
stos
mov
cld
pop
and
stos
or
bound
xchg
in
int3
jp
mov
rol
sbb
lahf
or
push
pop
cmp
test
xchg
jo
jae
mov
iret
jbe
leave
jnp
jo
or
lock
push
xor
aaa
repnz
je
pop
out
js
test
jbe
or
mov
dec
mov
mov
push
fsubl
addr16
sbb
aam
aas
fidivrl
inc
inc
rorb
dec
nop
imul
mov
loope
nop
loope
push
pushf
mov
testb
fstpt
notb
dec
ret
xchg
aam
mov
jecxz
lock
xor
mov
sbb
rcr
mov
lea
arpl
push
inc
xchg
cmpsl
xchg
in
scas
test
mov
lret
xchg
negl
cmp
shrb
or
mov
add
fildl
sbb
lret
cwtl
mov
push
or
add
mov
sub
push
push
dec
mov
and
sbb
hlt
pop
mov
stos
jae
daa
push
in
jbe
xchg
out
imul
mov
popf
sar
lds
aam
mov
xor
popa
mov
sbb
push
mov
pop
sub
add
dec
pop
out
int3
enter
aas
jbe
sti
es
dec
jnp
sbb
and
icebp
xchg
mov
shr
mov
clc
xlat
repz
arpl
adc
inc
shrb
jae
push
aad
xchg
inc
lods
rorb
pop
mov
aaa
sbb
popa
fdivrp
cmc
fldl
ds
sbb
sbb
int
icebp
ss
lcall
clc
mov
dec
push
dec
adc
mov
xor
jnp
push
out
aam
pushf
jbe
iret
fs
push
sar
xor
in
repnz
scas
ja
and
stos
aas
xchg
and
mov
int
xchg
pop
mov
out
std
rcr
cld
sti
fs
mov
sub
jle
jne
inc
push
aas
out
sub
adc
stos
rcl
mov
stc
and
lahf
sbb
dec
out
scas
daa
dec
movsl
mov
jns
stos
mov
inc
shl
sub
shll
add
push
cli
xor
scas
movsl
dec
mov
dec
xlat
jo
mov
sub
hlt
fcomps
or
push
movsl
cmp
push
xchg
adc
outsl
jmp
jbe
cmp
xorl
mov
xorl
notb
stos
std
pop
xor
in
adc
and
in
inc
dec
pop
sbb
in
mov
jae
mov
jbe
arpl
mov
repnz
xlat
adc
xlat
sti
push
mov
arpl
push
push
cmc
or
xor
mov
or
sbb
mov
sub
clc
jb
repnz
fsts
lret
aas
and
cltd
or
iret
xlat
inc
mov
mov
test
add
aaa
fwait
add
loopne
dec
mov
leave
xchg
int
add
lods
dec
inc
das
pop
mov
sub
and
mov
xchg
dec
mov
mov
mov
test
into
loope
dec
sbb
inc
push
fstpt
and
sarl
popf
mov
push
mov
and
outsl
aaa
jp
pushf
add
mov
cmp
into
test
sub
mov
in
add
repnz
pop
mov
cltd
mov
test
inc
add
jnp
ret
je
imul
fsubrs
add
icebp
mov
pusha
movsl
jmp
outsb
pop
cmpsb
popa
dec
lahf
in
mov
int3
jg
sbbb
jg
ret
pop
fstpl
mov
in
cmpsl
and
mov
jo
push
in
and
je
enter
cli
jmp
ret
mov
arpl
aaa
fstps
jp
cmc
cltd
stos
in
adc
fstpl
adc
mov
cltd
dec
push
xchg
fistps
mov
test
sub
pop
xor
cmpsb
dec
ret
pop
adc
andb
into
xor
hlt
mov
push
sbb
cmp
std
ret
xor
add
dec
add
xor
inc
je
in
mov
lret
popf
in
pushf
aas
lock
xor
aaa
jmp
add
push
dec
add
inc
dec
lea
cmpsl
fdivp
sbb
cmp
cmp
aam
add
push
das
push
push
xlat
xor
outsl
loope
or
arpl
sbb
adc
pop
push
dec
inc
inc
addr16
lods
dec
pop
lock
sbb
ret
rcr
or
popl
jno
rclb
adc
lcall
popa
push
dec
jg
xchg
pop
fdivrs
pop
test
push
adc
jb
fmull
pushf
mov
push
or
mov
lcall
loope
out
in
ja
das
loopne
jl
mov
insl
adc
and
daa
or
dec
les
test
nop
pop
adc
jns
pusha
push
mov
adc
movsl
push
and
shlb
fwait
loop
int3
mul
mov
ret
sti
mov
call
xchg
mov
ret
inc
jl
inc
mov
sbb
xchg
and
loopne
daa
mov
popf
add
ret
sti
sub
xchg
in
add
lds
in
mov
fldt
mov
sbb
and
xchg
mov
jle
insb
sbb
adc
jns
lds
xchg
or
outsb
xchg
mov
mov
dec
xchg
push
repnz
fiadds
jmp
cmp
testl
dec
enter
mov
or
shrl
or
mov
mov
stos
testl
pop
ret
hlt
addl
cmc
shrb
xchg
popa
sahf
push
mov
test
xor
xchg
mov
mov
ret
pop
jns
push
jecxz
popf
and
mov
sbb
sbb
mov
cmp
mov
adc
xor
aam
inc
sbb
pop
ja
mov
pop
pushf
mov
jne
mov
xchg
daa
mov
mov
int
push
cmp
out
inc
mov
leave
mov
or
push
xchg
sbb
mov
testb
pop
push
vprotw
or
jne
ret
cmp
mov
ja
pop
pushf
les
call
nop
cmpsl
shrb
in
andl
divl
popa
lods
dec
js
lock
cli
adc
or
in
jno
inc
push
inc
scas
sbb
cmc
pop
in
add
test
addr16
push
in
mov
call
es
or
outsb
and
rolb
jmp
mov
mov
loop
add
hlt
std
jne
hlt
out
fimull
xchg
sbb
mov
lahf
jb
mov
sub
xor
test
testl
lock
mov
add
bound
scas
or
hlt
test
mov
xchg
mov
push
jns
jle
test
lret
pop
es
and
xchg
xchg
fwait
xor
or
jns
cs
cltd
gs
push
inc
push
mov
hlt
mov
push
jmp
xchg
sub
aam
cmpsb
shl
in
js
mov
xchg
adc
add
js
lods
loope
xor
mov
enter
adc
add
sub
sub
or
outsb
outsb
inc
cli
call
or
push
ret
in
jecxz
mov
mov
pop
aaa
enter
fwait
mov
test
and
jmp
nop
inc
pop
adc
xor
out
push
xchg
cmp
gs
adc
adc
push
rorl
sbb
adc
and
mov
inc
pop
pusha
or
sarl
pusha
xor
add
mov
mov
push
mov
ret
hlt
icebp
xchg
push
mov
nop
xor
mov
push
jbe
stc
lods
fmuls
aad
pop
outsl
ds
pop
sbb
mov
fsubs
out
push
add
mov
inc
je
jno
push
cltd
test
arpl
xchg
pushf
pop
and
jg
mov
call
cmpsb
inc
or
in
push
push
jb
mov
adc
jbe
jecxz
push
cltd
inc
ret
pop
dec
jnp
jg
or
mov
test
push
cli
popa
fcompl
add
pop
add
fldl
xchg
dec
or
pop
scas
ds
push
sbb
cmp
dec
test
sahf
xor
push
push
xlat
faddp
cli
loop
popa
fisttpll
popa
push
inc
xor
lret
addr16
in
cmp
mov
jno
fwait
fs
cmp
mov
mov
and
fwait
inc
inc
xlat
std
pop
jne
aad
dec
add
es
jmp
lock
xchg
ljmp
push
insb
fwait
insl
push
mov
mov
pop
imull
add
mov
data16
outsl
mov
add
pushl
mov
adc
out
dec
aad
dec
bound
cmp
pop
xchg
mov
xchg
and
nop
sahf
andb
or
inc
pop
out
lcall
sub
pop
cltd
push
int
fs
out
sub
xor
lds
aam
cmc
push
mov
sub
push
dec
sub
pop
sub
js
push
fidivrl
stos
enter
call
pop
cmp
cmp
dec
sbb
push
fidivrl
stos
enter
call
pop
inc
dec
sub
pop
sub
sbb
push
fidivrl
stos
enter
call
pop
cmp
cmp
dec
sbb
or
addr16
push
and
gs
jne
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
outsl
jecxz
repz
lea
fimuls
adc
push
out
arpl
jae
push
mov
xor
jecxz
repz
cmpl
aas
mov
repz
out
dec
fbstp
add
ja
and
push
jbe
inc
xor
aaa
popl
dec
adc
add
lock
fistl
loopne
xor
pop
cmpsl
cmp
cmpsl
cld
mov
jo
push
mov
fadds
and
pusha
add
iret
jg
in
push
jp
rorl
fmull
add
xor
outsl
mov
add
insb
jae
or
push
add
lods
out
pushf
mov
xor
sbb
lret
stos
nop
sahf
mov
insb
aas
mov
pop
add
jae
mov
adcl
ss
int3
lahf
inc
cli
cs
sbb
xor
jl
adc
pop
sti
addl
adc
adc
inc
adc
sbb
push
lds
mov
mov
push
dec
pop
mov
and
xchg
and
jecxz
lahf
dec
cmpl
das
mov
inc
idivl
cmpsl
or
mov
cmp
dec
mov
shrb
nop
adc
xor
adc
push
lock
ret
push
pop
push
movsb
sub
and
aas
repnz
iret
imul
jnp
adc
jo
jbe
push
clc
jb
mov
loopne
xchg
cmp
das
mov
call
arpl
jae
add
xor
jecxz
repz
cmpl
das
mov
call
arpl
jae
add
xor
dec
fsubrs
imul
leave
or
imulb
sub
sahf
sub
call
or
jo
test
pop
ljmp
xchg
cld
sub
or
or
cmp
adc
mov
xchg
or
dec
shlb
lret
fldcw
mov
pop
xor
mov
cmp
xchg
popf
fs
loope
ljmp
lods
test
pop
inc
aam
leave
inc
fsubrl
repnz
fnstsw
cmp
pop
adc
adc
jmp
inc
cli
test
adc
ret
fisubl
scas
dec
or
icebp
xchg
pop
pop
push
mov
int3
mov
mul
arpl
dec
aad
pop
mov
test
xchg
rcrl
incl
xor
test
adc
fldcw
or
roll
loope
mov
cmp
clc
mov
push
jno
lods
cs
ljmp
mov
ficomps
xor
mov
cmc
jnp
add
arpl
xor
jge
jnp
pushw
push
and
mov
push
mov
lea
or
pop
or
iret
mov
pop
rorb
add
rorb
loop
sub
pushf
mov
mov
shl
mov
cs
mov
cmp
mov
xchg
into
inc
mov
xchg
sub
fisubrs
add
into
rcll
add
dec
sbb
sbb
pop
mov
sub
xor
stos
dec
jb
icebp
nop
add
sub
ss
sbb
call
mov
push
sbb
push
das
jmp
push
addr16
and
mov
inc
mov
imul
sahf
aaa
add
sbb
pop
sub
negb
mov
mov
adc
fs
loope
and
and
push
in
aad
call
mov
sbb
xchg
add
loop
or
in
adc
sub
pop
out
js
fcmovb
mov
or
jb
xlat
pop
scas
xor
fildl
movsb
fimull
lret
mov
test
das
jne
mov
int3
jnp
xchg
inc
fimuls
xor
imul
insb
ss
cmpsl
push
dec
jno
ss
cli
mov
sub
or
dec
pop
mov
inc
addr16
and
stc
pop
mov
pop
arpl
push
mov
xor
sbb
jg
xor
dec
stos
inc
or
lds
push
dec
jbe
jl
cmp
add
fildll
cli
jnp
rclb
sub
push
dec
pop
loop
imul
popa
imull
cmp
shlb
dec
jle
das
push
mov
mov
cmp
jae
jnp
ljmp
add
popf
imulb
movsl
daa
or
xor
stos
lock
mov
das
das
xchg
enter
xchg
xchg
adc
imul
loopne
cld
jae
xchg
mov
mov
outsl
testb
sub
jl
xchg
push
hlt
xor
mov
loopne
sbb
mov
dec
fwait
int
lahf
mov
loope
sbb
call
je
shl
enter
ficomps
mov
nop
mov
sub
mov
push
lahf
sbb
xlat
mov
int
or
inc
jbe
xor
pushf
pop
mov
test
xchg
out
mov
dec
sbb
cmpsb
add
subps
xor
add
mov
ds
xchg
neg
adc
inc
mov
inc
push
pop
push
push
outsl
cmp
inc
repz
jne
adc
std
imul
shll
fildll
mov
adc
adc
lret
push
into
mov
push
movsb
xor
fisubs
pop
pop
into
sbb
pop
push
xchg
mov
cli
ret
repnz
outsb
lods
gs
dec
mov
sbb
xchg
frstor
mov
cmp
subl
xchg
push
jbe
xor
lret
lcall
pop
mov
xor
in
sub
jl
mov
dec
lods
aad
or
daa
mov
or
mov
addr16
std
rcrb
dec
cli
sub
push
xchg
add
mov
jl
sub
imul
sbb
bound
mov
jl
aas
mov
dec
push
es
jmp
mov
dec
xchg
mov
insb
out
out
dec
or
jb
xor
xor
dec
sub
mov
mov
imul
jnp
cmp
aam
aaa
xchg
lcall
cld
imul
pop
pop
leave
scas
and
decb
sbb
enter
push
cmp
cltd
push
pop
jo
movsb
push
mov
insl
inc
shl
std
addr16
orb
push
insb
inc
movsl
dec
add
je
outsb
fcompl
cmpsb
and
gs
ljmp
imul
push
xchg
rclb
jle
enter
les
cmp
mov
daa
adc
adc
insl
add
cmp
inc
xchg
inc
fcoml
in
dec
into
ds
inc
outsb
fs
mov
movsb
mov
fimull
insb
mov
addr16
xchg
adc
adc
cwtl
pop
push
imul
clc
bound
sbb
aas
mov
cmp
dec
int
ja
rcll
add
sbb
fstps
gs
cmp
pop
mov
cmp
outsl
jne
sbb
cwtl
cmpsb
popa
xchg
jle
out
test
in
dec
sub
jg,pn
push
xchg
xchg
es
mov
push
mov
pop
out
cli
cmc
and
dec
xchg
xor
xor
and
pop
stos
add
or
dec
ss
xor
push
jbe
xchg
sub
cmpsb
xchg
jmp
pop
cmpsb
fdivrs
test
arpl
adc
mov
das
outsl
jb
dec
mov
out
inc
mov
cmp
pushf
or
and
xchg
imul
adc
test
and
daa
cli
mov
sbbl
pop
test
sti
sahf
loop
je
jge
push
shrl
rclb
fistpll
xor
movsb
and
cmp
mov
pop
mov
cmp
nop
int
mov
lods
mov
repnz
test
xor
hlt
dec
daa
jge
xor
decl
mov
push
push
or
xchg
rclb
sbb
hlt
cmpl
stos
fcoms
jae
rol
test
pushf
and
sub
insb
xorl
rclb
sti
jg
fucom
out
jge
je
cli
in
push
sub
ficoms
repz
inc
cmpb
jmp
mov
jno
jle
jl
lret
repnz
or
fistps
or
out
movsl
dec
mov
push
inc
fdivrp
stos
loopne
gs
mov
jle
push
ja
in
mov
hlt
jge
jle
add
sub
mov
push
cmp
test
cli
bound
inc
outsb
adc
aam
test
std
pusha
test
sub
mov
jb
div
into
ror
aad
or
nop
cmpsb
and
lahf
mov
mov
shll
cmp
out
mov
movsl
mov
mov
push
xchg
out
mov
sub
clc
test
and
out
aad
sbb
cmpsl
or
mov
jo
rcll
push
ret
sub
imul
mov
add
sub
xchg
jmp
cmp
add
loope
je
sbb
dec
xchg
ss
lds
js
sub
insb
push
cli
mov
adc
fucomi
out
xlat
test
scas
in
ds
mov
sarb
mov
sahf
imul
pushf
fdivrp
jmp
sub
adc
or
pop
or
pop
jecxz
or
xchg
xor
jmp
inc
pop
sbb
arpl
sbb
ds
aas
lea
dec
jno
dec
pop
imul
lret
lods
mov
ds
lods
cwtl
outsl
sbb
in
inc
insb
cmpb
mov
sub
decb
inc
sub
sbb
vzeroall
sarl
loop
add
fsubrp
pop
int
fwait
mov
je
push
sbb
inc
negl
fadds
push
inc
fcomps
lcall
fsubrs
pop
pop
jno
and
mov
cmp
cmpsl
mov
lds
inc
jae
mov
pop
cmp
daa
out
lock
enter
push
sbb
or
cld
sub
test
push
adc
xchg
mov
jne
add
lods
out
pusha
dec
and
jmp
cmp
jae
push
xor
sub
cmp
mov
aas
sbb
inc
ljmp
aam
popa
outsl
sub
test
xor
inc
popf
sbb
jl
mov
lret
loope
repnz
xchg
mov
lea
push
inc
dec
mov
in
ljmp
xchg
mov
fistl
xlat
mov
fildll
pushf
pop
mov
ds
insl
fisttps
shr
jecxz
sti
pop
jns
fimull
addl
stos
mov
jb
stc
jno
pop
bound
xchg
push
into
addr16
push
lods
mov
push
xchg
sbb
mov
int3
sbb
pop
mov
add
stos
std
out
imul
pop
insb
add
jg
loope
nop
and
mov
enter
shr
psubusw
sub
xchg
ds
gs
data16
bound
mov
pushf
xchg
fstpt
sar
sti
inc
in
sahf
mov
add
mov
loop
jl
stos
scas
jno
adc
pop
add
dec
xor
andb
std
das
mov
test
xor
mov
outsl
rolb
das
mov
adc
scas
and
movsl
push
and
add
das
pop
dec
dec
push
mov
mov
movsl
add
into
mov
inc
test
fs
loopne
clc
sbb
add
ljmp
add
ljmp
xchg
inc
stos
mov
fcmovnu
pusha
xchg
sub
sub
lret
xor
in
nop
jne
and
xchg
test
jbe
ss
dec
mov
and
outsl
push
and
outsb
mov
fcoms
add
jmp
cwtl
jmp
loop
sub
test
incl
and
cmp
aas
data16
movsb
xor
imul
insl
lcall
sbb
test
pop
jns,pt
cltd
cltd
stos
and
repnz
ret
mov
insb
xor
dec
rorb
psubq
mov
das
or
xchg
outsl
sub
dec
es
sbb
pop
add
cmp
xchg
je
inc
sbb
cmc
add
jl
mov
clc
mov
lcall
lret
fstpt
mov
or
popa
mov
popa
mul
insb
cld
movl
inc
mov
mov
mov
and
sub
pop
or
dec
push
fstpl
mov
repnz
or
add
xor
add
and
mov
jmp
int
jle
scas
insl
jnp
in
xchg
fists
stos
adc
andb
lahf
adc
mov
xchg
add
adc
mov
sub
dec
jp
jle
sbb
mov
jbe
pop
mov
out
xchg
cmc
mov
aaa
lcall
push
shlb
jl
and
jge
dec
jb
add
mov
test
and
pop
aam
and
xchg
lret
push
xchg
adc
fdivs
mov
in
and
mov
mov
inc
imul
ret
mov
aas
dec
das
fs
sti
mov
sub
sub
mov
push
fnstcw
test
mov
push
mov
cwtl
mov
cwtl
adc
mov
jns
cli
dec
adc
daa
sbb
aaa
xchg
out
inc
lds
into
mov
xchg
loope
or
daa
sub
ja
movsb
add
sahf
xor
or
xchg
test
sbb
and
lahf
cld
aam
inc
pop
lock
movsb
addr16
jno
cmpsl
dec
movsb
or
jge
sub
sbb
cmp
push
add
aas
xchg
mov
and
xor
ds
mov
imul
ljmp
cmp
cmpsb
shll
aad
js
sub
arpl
in
inc
adcb
push
mov
ljmp
mov
scas
sti
sahf
mov
sub
jmp
mov
xor
mov
add
adcb
sub
dec
xor
out
pushf
mov
xor
stc
dec
pop
push
lcall
mov
addb
cmp
adc
fs
push
push
cmp
fldt
rclb
jp
inc
rolb
cwtl
cs
adc
hlt
push
mov
sub
enter
xor
mov
sahf
lds
fiadds
jge
inc
ss
xor
test
inc
inc
stos
inc
push
cltd
adc
lret
xchg
test
xchg
pop
pop
jo
xchg
sarb
ret
mov
out
imul
ret
jo
push
lea
dec
fdivrl
sbb
xor
dec
mov
xor
jns
scas
out
or
outsb
jns
and
xchg
stos
imul
cmp
sub
pop
dec
in
popf
push
jbe
xorl
std
jbe
negl
insb
jmp
pop
pop
cli
cld
mov
or
and
adc
imul
mov
js
int
pop
ret
dec
pop
inc
mov
out
push
je
je
ja
pop
stos
pop
cmp
jmp
shrb
ljmp
mov
dec
cwtl
lock
mov
dec
fsubs
or
popf
push
iret
pop
cli
and
xor
cmp
xchg
andl
rolb
popf
pop
sarb
std
jns
cltd
rcrb
nop
adc
mov
add
add
lods
sbb
icebp
xor
loop
lret
mov
aas
lods
and
sahf
dec
fninit
sbb
push
ret
int3
mov
ljmp
fwait
in
lret
outsl
sub
jbe
adc
outsl
outsb
sti
sbb
outsb
mov
aad
or
mov
movsl
rclb
mov
push
into
and
mov
adc
sti
fiadds
je
mov
cmp
push
movsb
mov
stc
xchg
bound
mov
jb
bound
insl
lods
push
stos
add
das
add
bound
fiadds
incb
out
cld
gs
shlb
add
jne
push
push
xchg
cwtl
sbb
call
jecxz
mov
call
xor
mov
mov
sub
and
pop
mov
and
sbb
dec
xchg
sbb
cmpsl
insl
fstpl
pop
ss
pop
push
cmpsl
je
add
fisubrs
adc
testl
jnp
bound
and
pushf
ljmp
into
pop
daa
cmc
jecxz
push
pusha
xchg
push
bound
xor
pop
fadds
cld
lods
jnp
cmpsl
stc
stos
test
mov
insl
mov
adc
add
pusha
nop
and
or
fsubp
repz
pop
dec
out
je,pn
testb
ljmp
inc
jg
mov
hlt
jp
inc
xchg
sbb
sar
shlb
xchg
popa
test
xor
fidivs
push
js
adc
loopne
cmp
xchg
shll
jne
mov
pop
dec
mov
mov
mov
insb
test
add
add
in
aam
jp
xchg
push
test
xchg
lcall
insb
pop
add
orl
cmc
jae
inc
scas
xchg
pop
adc
shlb
push
jb
mov
sbb
in
adc
ret
ds
pushf
in
or
pushf
subl
movsb
mov
daa
lea
fstpl
inc
mov
xor
sub
jg
fwait
sti
sbb
repnz
iret
stos
mov
jns
test
ds
lahf
imulb
fmull
xchg
addl
push
xor
or
cmp
jns
push
jno
clc
mov
movb
push
jns
adc
push
mov
jae
mov
lret
push
mov
lahf
les
leave
dec
adc
sub
out
adc
pop
rolb
loop,pn
aam
xchg
setp
ret
call
fwait
jbe
xlat
sub
iret
in
movsb
push
mov
rorl
xchg
out
dec
push
cld
jo
dec
inc
in
test
and
mov
fcom
jg
cs
inc
rcrb
lcall
cs
push
dec
inc
fst
cli
insb
pop
inc
jmp
jecxz
imul
sub
lcall
jp
and
push
pop
xor
pop
and
cmp
push
nop
jbe
adc
ss
sbb
pusha
loop
loopne
stos
xchg
imulb
mov
lcall
xor
lahf
loop
push
push
idivl
in
arpl
or
test
or
and
aam
enter
aam
pushf
push
rcrl
inc
or
xor
out
hlt
pop
daa
adc
inc
cmp
test
insb
push
xchg
or
sbb
shrl
jno
pop
dec
mov
inc
imul
mov
ljmp
xor
ds
mov
das
addr16
ja
stc
ret
push
mov
adc
movsb
fcmovbe
movsl
movsl
int3
scas
jnp
jne
pop
inc
push
cmpb
jo
bound
repnz
lahf
adc
xchg
scas
ljmp
icebp
mov
pop
jecxz
leave
add
and
pop
push
les
jp
pop
dec
adc
or
push
jo
mov
or
sub
mov
nop
adc
dec
jmp
imul
jb
add
je
and
mov
jnp
xchg
sbb
ret
iret
imul
cmpsl
sbb
fdivl
mov
ja
arpl
sbb
dec
fs
push
sub
xchg
lahf
mov
mov
sub
cltd
pop
cmp
addr16
add
dec
add
out
mov
jae
xor
sbb
or
push
jmp
or
mov
mov
and
mov
mov
cmp
lds
mov
stc
pop
mov
mov
call
dec
into
add
jne
std
xchg
int3
push
popf
imul
and
movsb
ljmp
add
cmp
rorb
adc
jmp
test
ja
sub
xor
mov
xchg
push
inc
stos
ret
fwait
and
dec
dec
xchg
and
rcll
out
adc
jne
psllq
add
cmp
les
or
jp
icebp
outsb
dec
test
sahf
jg
or
sti
push
or
mov
add
mov
and
fcomi
addr16
repnz
ror
stos
cs
cmpsb
popa
icebp
xchg
jns
fcoms
mov
pop
or
lds
ret
mov
in
and
fbld
xor
ljmp
pop
sahf
xchg
stos
sbb
and
pusha
cmpsl
enter
push
sub
sub
in
pop
inc
cmpb
dec
adc
mov
ret
cmp
mov
sub
adc
outsb
insw
nop
xor
sbb
pop
adc
xlat
xor
cmp
xchg
push
adc
xor
lock
or
xchg
xchg
shr
push
into
xchg
or
cwtl
je
in
sub
jmp
pushf
je
cmc
testb
idivb
fsubp
inc
ds
mov
stos
adcb
adc
sbb
in
push
movsl
mov
insb
xchg
cmp
push
mov
lcall
or
push
xchg
lds
xchg
scas
xchg
pop
in
lock
add
movsb
fwait
jnp
xchg
testb
stc
ret
fistl
fisubs
mov
fnstcw
pop
test
xchg
clc
and
xchg
nop
dec
dec
loope
inc
inc
cmp
cmp
mov
ljmp
xchg
loope
test
push
mov
shr
cmpsl
mov
xchg
sub
inc
mov
frstor
mov
fldcw
xlat
add
inc
fisttpll
lret
shrb
pop
test
out
cmp
or
leave
in
dec
loope
mov
bnd
or
adc
sti
es
cmc
rcr
sub
mov
cmc
xchg
add
icebp
addr16
mov
rorb
les
push
int3
or
jno
lcall
test
push
pushf
xlat
daa
mov
sub
lret
xlat
jmp
or
das
xchg
push
mov
inc
push
jbe
ror
mov
mov
xchg
adcl
jge
lock
dec
aad
decb
sub
lods
pop
mov
adc
mov
ret
mov
sbb
push
outsb
dec
out
push
xchg
imul
jns
outsb
or
and
pop
call
inc
mov
aam
and
dec
mov
push
or
or
sub
out
dec
cmpl
das
mov
call
arpl
jae
add
xor
jecxz
repz
cmpl
das
mov
call
arpl
jae
add
xor
repz
repz
cmpb
das
mov
call
push
ja
add
add
imul
cmpl
das
mov
ljmp
je
fwait
rcr
loopne
lock
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
