add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
pop
xor
cld
aad
icebp
iret
std
aam
mov
add
or
add
add
add
or
sbb
mov
xor
jmp
add
add
cltd
add
add
test
sub
xor
xchg
add
pop
add
add
add
add
addl
mov
insl
add
add
add
add
add
add
lret
add
add
add
add
xor
inc
add
add
add
add
mov
lret
add
add
dec
add
mov
xor
pop
add
sub
xor
push
add
xchg
add
mov
xor
cmp
add
add
insl
add
add
add
xor
add
add
xchg
add
jge
xor
sahf
add
xchg
xor
pop
add
pop
add
mov
xor
movsb
add
add
add
add
mov
xor
cmp
add
add
insl
add
add
add
add
add
add
mov
add
add
jns
pusha
add
add
add
add
xor
add
jmp
add
xor
lret
add
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
rolb
cltd
add
add
add
add
add
add
add
jle
ret
add
add
or
mov
outsb
add
add
mov
add
add
add
add
add
inc
add
add
add
mov
xor
xchg
mov
addb
add
add
add
add
add
add
dec
add
add
add
cmp
enter
cltd
add
add
add
add
movsb
add
add
add
add
testb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
out
test
inc
add
add
add
add
push
add
add
add
add
add
add
add
xchg
add
jl
dec
add
inc
add
add
add
add
add
add
add
daa
add
xor
mov
add
add
add
rolb
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
outsl
add
sahf
add
add
add
add
add
add
add
add
add
daa
add
add
cltd
add
add
add
add
add
and
loopne
imul
xor
mov
mov
or
add
add
xor
daa
add
add
add
sahf
add
add
add
add
push
add
add
add
add
and
add
or
add
add
add
pop
add
sbb
xor
mov
sbb
push
add
add
sbb
mov
xor
sbb
js
sbb
jmp
add
add
jl
test
jle
pop
add
add
mov
and
add
add
add
out
mov
roll
mov
rolb
xchg
add
add
xor
jl
stc
mov
and
sub
mov
hlt
inc
shlb
imul
mov
fsubs
mov
adc
lods
xor
lcall
dec
xlat
ja
mov
loop
dec
or
popa
pushf
clc
or
addr16
push
push
idivl
aas
mov
loop
std
call
mov
xchg
sbb
adc
scas
shll
repnz
test
inc
mov
in
mov
pop
cmp
mov
pop
inc
mov
sub
sbb
popf
xchg
pop
pop
xchg
or
jp
jmp
xchg
mov
jl
ret
out
cwtl
in
andl
cmp
sbb
adc
test
jne
loop
and
pop
sub
mov
rcrl
add
lock
ss
push
xor
mov
testl
push
out
popa
ss
pop
dec
or
outsl
fldcw
jnp
sub
lret
lcall
lahf
sahf
xor
mov
mov
mov
cltd
test
or
push
repz
push
popa
ffree
or
adc
dec
sub
push
add
xchg
mov
pop
and
test
inc
mov
aad
cmp
xor
pop
cld
adc
jae
mov
outsl
mov
adc
shl
xor
outsl
push
aaa
data16
sti
cmp
pop
xchg
add
add
inc
dec
test
lahf
adc
dec
icebp
sbb
mov
std
jp
sahf
in
data16
mov
add
loope
pusha
mov
mov
jp
jae
data16
fidivrs
call
inc
xchg
mov
lcall
in
mov
ja
cmc
mov
push
push
aad
push
sbb
out
fsubl
jno
jnp
lcall
ret
xlat
call
xor
out
mov
cld
iret
xchg
aaa
dec
mov
inc
sbb
mov
sub
xor
jmp
xchg
ljmp
loopne
xchg
mov
cmpsl
and
xchg
sub
mov
xor
js
jmp
inc
jp
je
rcrl
lret
int3
xlat
dec
sub
mov
shll
cs
imul
dec
mov
push
jl
mov
negl
jge
xchg
scas
cmpb
xlat
add
adc
pop
xchg
outsb
sti
stc
ja
xchg
cwtl
outsb
dec
fs
pop
jno
or
mov
insl
inc
inc
roll
inc
negb
lcall
data16
push
dec
popa
insl
test
push
jno
lret
xor
pop
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
shrl
sahf
dec
mov
sbb
scas
xchg
mov
ret
cld
out
neg
ucomiss
ds
push
aaa
push
inc
outsb
push
repnz
ja
xlat
scas
xchg
sahf
mov
mov
out
neg
fnstsw
sbb
push
pop
inc
dec
mov
sti
ffree
rcl
in
out
mov
inc
cs
push
arpl
dec
int3
pop
adc
arpl
xchg
cmp
sbb
xchg
jae
mov
orb
inc
das
pop
push
mov
orb
add
pop
mov
inc
cmp
push
das
pop
cmp
adc
xor
cmp
dec
aad
and
pop
add
cmp
pop
adc
test
inc
out
outsl
cs
push
bound
data16
mov
mov
dec
bound
aad
repnz
fcomps
fwait
mov
inc
aas
pop
inc
std
scas
pop
dec
mov
xor
xlat
pushl
out
pop
sbb
xchg
and
sub
mov
cmpsb
jno
xchg
xlat
add
cs
into
daa
mov
inc
outsb
adc
xchg
iret
fidivs
add
cmpsl
ret
out
xchg
mov
jl
arpl
xor
sbb
adc
cmp
call
imull
mov
pop
imul
add
dec
or
add
mov
jmp
stc
mov
mov
xchg
scas
mov
jne
and
push
pop
jbe
add
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
lods
push
stos
inc
cmp
subb
std
xchg
rcll
jl
mov
xchg
stos
out
inc
pop
out
jo
xor
mov
cmp
fiadds
or
push
jns,pn
mov
mov
insb
pushf
repz
lds
popf
sbb
sarb
dec
push
bndstx
jge
data16
ljmp
daa
jno
repz
lods
dec
loopne
push
xchg
sub
sbb
cmp
fcomp
mov
or
lods
lock
in
and
mov
fildl
ror
pop
jns
imul
jmp
jne
insb
lock
out
mov
pusha
sub
jns
repnz
std
and
cli
jp
pushf
mov
push
mov
xchg
pcmpeqd
test
das
dec
inc
mov
cmp
xchg
jmp
roll
repnz
iret
bound
inc
inc
mov
xchg
dec
add
xchg
into
dec
mov
inc
mov
bound
dec
mov
mov
mov
hlt
sbb
divl
fmull
inc
arpl
inc
adc
mov
loop
mov
fnstcw
lret
and
sub
imul
push
push
xchg
add
jnp
pop
or
add
rclb
pushf
lds
pop
fmul
cmp
sbb
outsl
cmp
jle
jae
inc
xchg
movsl
pop
shl
pop
fcmovb
sub
ficomps
or
mov
inc
add
adcl
fistps
cmpb
adc
inc
ss
dec
cmp
clc
add
pop
mov
add
cmp
or
dec
or
out
mov
xchg
mov
push
or
jb
dec
in
aaa
sub
int
mov
stc
aad
mov
out
lahf
call
and
daa
pop
sub
rcrl
nop
and
add
mov
mov
ror
mov
xor
push
jmp
sbb
movsl
out
out
inc
pop
mov
repnz
repz
adc
fdivrs
std
mov
sbb
pop
fwait
sub
loop
and
insb
add
mov
inc
ljmp
mov
push
lahf
insb
in
add
jae
rolb
adc
ljmp
cltd
and
insb
repnz
xchg
inc
add
fcomi
test
decl
rcrl
or
mov
xchg
in
inc
test
adc
lret
jns
mov
add
daa
lock
out
rorl
ljmp
lret
xchg
push
xor
cwtl
test
pop
mov
xchg
imul
bnd
insb
andl
jae
shlb
mov
mov
xor
mov
cmp
icebp
lods
lods
testl
pop
jg
adc
orl
cmp
ss
or
or
push
clc
and
hlt
and
in
pop
adc
inc
lret
lret
fucomi
mov
cmp
jmp
jle
mov
int3
mov
dec
aam
pop
adc
jp
and
aam
sub
adcb
mov
pop
and
scas
into
push
pop
lods
mov
testb
sub
pop
rolb
test
cltd
mov
lods
fimull
pop
leave
ret
xchg
push
or
xchg
adc
mov
enter
dec
pushf
stc
sub
mov
jg
popa
loopne
mov
jo
movsb
loope
and
jmp
out
adc
test
hlt
xlat
pop
fdivrl
call
and
popf
mov
push
fdivr
and
in
gs
in
sar
sub
pop
add
inc
dec
jmp
out
sbb
push
cmp
cli
fisubrl
pop
rcl
pushf
rcr
cld
jmp
js
negl
xlat
and
sub
popa
inc
loope
pop
notl
dec
add
loop
imul
cli
das
testb
sbb
popf
sub
cli
jl
loope
daa
fwait
movsl
ljmp
push
orl
cmovb
xchg
push
sbb
das
mov
les
sbb
xlat
sub
fidivrl
lock
out
cld
mov
lcall
out
cmp
test
sbb
inc
sub
loop
ds
mov
pushf
mov
rcrl
or
cltd
sahf
sub
mov
adc
loopne
lock
stos
add
into
clc
and
stc
mov
inc
inc
cwtl
lods
and
jg
inc
dec
popa
ret
add
pop
inc
lods
cwtl
sbb
push
ret
cmp
mov
lods
push
icebp
cmp
jecxz
dec
into
lcall
rcr
mov
inc
jle
adc
notl
jns
push
push
das
mov
sbb
mov
fdivl
rcrl
iret
push
pop
call
fwait
shrl
pop
ja
es
pop
lahf
xor
jbe
dec
sbb
mov
jae
pusha
push
or
pop
hlt
mov
js
shl
shr
cld
mov
mov
lret
pop
push
inc
lret
or
cs
negl
add
jg
mov
jecxz
mov
ja
andb
daa
pop
add
xchg
xlat
lret
clc
jne
lock
jp
sbb
in
jge
clc
jg
jno
aam
cmpsb
pop
mov
sysexit
mov
js
or
or
sub
lds
ljmp
add
jmp
addr16
loope
push
mov
sbb
notl
cmp
icebp
cld
lret
loope
mov
test
fwait
and
repnz
subl
jo
repnz
dec
ljmp
inc
mov
push
xlat
push
into
out
das
jnp
mov
sbb
lock
iret
filds
scas
aaa
dec
mov
mov
push
ret
push
movsb
push
stc
mov
repz
sbb
aaa
pop
mov
pushf
pop
idiv
cmpsl
jae
test
outsl
mov
out
jno
jns
aas
fnstenv
cmc
loopne
shlb
sbb
cmp
adc
test
mov
leave
xchg
jmp
ja
jno
les
fdivrs
or
je
jno
aam
movsl
jmp
or
and
sub
imul
decl
cmp
in
push
lahf
inc
push
mov
pusha
insb
mulb
sub
cltd
test
scas
pusha
orb
sub
inc
xor
or
mov
arpl
and
imul
xlat
repz
std
lock
push
pop
pop
sub
mov
imul
jb
es
pop
lret
aas
adc
pop
pop
iret
pop
insl
xchg
clc
test
mov
or
pop
pop
and
and
sub
or
inc
rcll
mov
pop
ret
pop
test
adc
pop
bound
mov
adc
or
cmpsb
lods
xchg
adc
jl
jo
mov
ret
mov
add
fwait
inc
iret
dec
std
je
inc
xor
imul
call
movsl
aam
jae
mov
lcall
mov
out
shrb
sbb
mov
mov
inc
fwait
into
xchg
pop
and
insl
push
push
enter
pop
dec
xor
xorl
pop
bswap
and
jnp
adc
mov
out
mov
scas
mov
int
loopne
or
cmp
out
cmpsl
fwait
push
shrb
jle
push
aas
repnz
aaa
test
xchg
pop
in
push
cs
clc
pop
xchg
jb
mov
xchg
or
or
xchg
popa
loop
sahf
xchg
ja
inc
jmp
jmp
test
pop
fcompp
imul
push
insb
data16
mov
sbb
and
jmp
lods
test
das
in
mov
dec
pop
lea
xor
stc
scas
in
imul
mov
inc
xchg
jae
inc
bound
aad
mov
int3
andb
aam
sub
testl
cs
sub
push
fs
aam
jbe
leave
dec
enter
dec
inc
inc
fnstsw
xchg
in
addr16
movsl
jl
mov
loop
xchg
push
leave
mov
bound
test
cmpsb
and
hlt
loop
sbb
dec
jmp
jo
shlb
ret
addr16
lcall
add
and
lods
mov
lock
xor
jns
jecxz
xchg
repnz
hlt
mov
push
pop
adc
divl
cmc
lods
sahf
pop
sub
mov
aas
sbb
into
xor
leave
xchg
adc
daa
mov
cmp
push
and
mov
mov
notb
lock
jns
xor
mov
rcr
xor
dec
cmp
add
pusha
mov
jg
mov
mov
call
fldt
ja
jecxz
insb
aam
and
mov
fucom
adc
shl
inc
mov
mov
repz
mov
push
pop
inc
pop
jne
outsb
frstor
or
cs
divl
les
imul
jle
jg
jmp
pop
xor
dec
fdivs
out
pop
in
in
in
mov
testl
dec
arpl
dec
lret
cmc
in
inc
in
pop
cltd
scas
push
enter
mov
cmp
adc
push
je
xchg
cmp
cmp
mov
sub
mov
jl
xor
das
mov
call
xor
xchg
mov
push
mov
cmpsl
bound
out
and
test
dec
sbb
pop
or
enter
aas
mov
cmpsl
je
jmp
lods
jge
aad
pushf
rcll
mov
out
loop
cld
iret
push
mov
popa
pop
cmp
mov
in
lock
mulb
repnz
or
adc
ret
mov
adc
or
cli
fisubl
popf
movsl
lds
daa
sets
xchg
nop
dec
roll
rorb
cmp
cltd
sub
call
add
ror
xor
xchg
icebp
or
add
negl
outsl
negb
js
mov
shll
stos
orl
fisubl
inc
cltd
nop
fs
call
and
inc
pusha
jnp
cmp
and
mov
pop
subb
ret
sarb
arpl
adc
arpl
mov
pop
add
fldenv
xchg
das
xorl
xor
pop
lcall
dec
push
sbb
in
pop
xlat
xchg
jmp
inc
or
and
dec
inc
cmp
js
dec
lea
jmp
cltd
push
imul
decb
cmpsl
jmp
movsb
pop
rcl
mov
jnp
dec
pop
inc
mov
aad
mull
popa
add
add
xorl
xchg
or
das
pop
pusha
jo
fmull
cmp
es
filds
or
nop
mov
add
arpl
jmp
push
enter
pusha
jl
cmp
or
movntps
push
push
mov
push
sub
xchg
stos
sbb
outsb
sbb
push
test
imul
add
add
mov
pop
movsl
push
pop
inc
cmp
and
or
add
jl
dec
push
outsb
xor
xor
mov
in
inc
js
dec
stos
nop
adc
mov
mov
data16
xor
jbe
push
dec
cmp
jo
cmp
sbb
movsb
push
xchg
lahf
or
ds
shl
add
leave
pop
idivb
cmp
fcoms
insb
push
inc
inc
lcall
sub
push
jne
mov
mov
imul
sub
out
addr16
and
sbb
lods
shrb
call
jo
aad
mov
scas
cwtl
out
in
roll
pop
js
pushf
pop
xor
sub
nop
repz
subl
call
out
dec
jmp
jge
cmpb
dec
imul
dec
or
test
xchg
add
ret
cli
movsb
dec
add
pop
jne
shlb
lret
pop
loop
mov
mov
pop
adc
xchg
add
xlat
cmc
pop
mov
sub
repz
jle
lret
push
dec
ds
and
sarb
cmp
addl
lret
int
pop
roll
fcompl
sbb
pop
repz
les
jb
or
xchg
cmpb
xchg
sbb
test
sbb
mov
outsb
push
int
fidivs
enter
inc
movsl
mov
adc
or
mov
xor
xchg
or
clc
sub
shl
cmp
fldcw
push
xchg
push
movl
sub
push
or
je
adc
sbb
push
mov
sub
inc
mov
movsl
pop
fidivl
insl
js
push
int
dec
fdivr
xor
mov
rclb
popl
cmp
push
pop
test
mov
xor
aam
loopne
jle
aas
fs
cltd
imul
call
cmpsb
inc
inc
sbb
test
add
lds
outsb
cmp
adc
cmc
push
rcl
mov
jne
dec
orb
mov
inc
jl
imul
in
mov
sbb
pushf
xchg
ljmp
addr16
xchg
mov
cmovb
in
push
es
mov
stc
push
fwait
out
pushf
aaa
and
movsb
addr16
mov
push
insb
mov
ror
hlt
arpl
sub
dec
pop
mov
scas
xor
test
xor
mov
mov
scas
outsb
dec
mov
mov
popf
xchg
pop
jecxz
scas
or
arpl
mov
xchg
pop
sub
cwtl
ss
int
test
add
add
gs
imul
xchg
push
or
mov
mov
insb
xchg
jnp
jmp
push
sub
cs
xor
scas
ficoml
cmpsb
xor
mov
jle
sub
imul
push
xchg
roll
xchg
repz
and
jecxz
lret
mov
sbb
int
daa
add
fwait
cmpsl
add
mov
add
shrb
xorl
jle
mov
cwtl
jl
dec
jge
shlb
jb
aam
daa
add
and
pop
fwait
int
ficomps
in
add
test
icebp
in
push
lods
loop
push
pop
add
push
into
fs
daa
loopne
sar
inc
jo
mov
mov
push
dec
push
int
call
cli
push
shll
pop
dec
xchg
jp
sub
ja
mov
cmpsb
ljmp
dec
mov
add
loope
add
test
and
inc
pop
or
jp,pt
mov
xor
jge
mov
stc
sub
shrl
dec
gs
movsl
mov
insb
imul
cmpsl
xchg
push
paddusb
mov
sub
arpl
rol
shlb
cmp
mov
push
add
lcall
sbbb
push
data16
mov
add
pop
mov
or
sub
fdivrs
push
fcoml
dec
lcall
xor
xchg
xor
jg
mov
sub
dec
mov
pop
sbbl
lret
fnsave
out
inc
fstpl
cltd
imul
inc
push
mov
int3
push
lods
adc
jge
bound
shlb
fistpl
lods
sahf
pop
popf
das
leave
dec
lods
xchg
adc
gs
sahf
repz
xor
mov
push
lods
or
les
shll
aam
aaa
mov
iret
push
mov
inc
fisttpl
inc
mov
and
push
in
jb
add
xorb
outsb
hlt
pusha
xor
jnp
lock
xor
pushf
test
ret
fistps
test
cmc
jne
cmc
mov
jo
insb
sub
mov
leave
sbb
mov
aaa
push
inc
pop
inc
daa
add
aad
fdivrl
xchg
adc
call
and
xor
shlb
icebp
clc
xchg
jno
cmp
cmp
push
mov
pusha
mov
scas
sub
adc
and
test
mov
into
int
add
test
sbb
pop
gs
dec
roll
imul
lea
loope
negl
sbb
test
mov
ss
inc
fwait
jg
mov
xchg
es
sbb
jg
jne
cmp
sbb
fsubrl
jp
outsb
sbb
pop
in
das
les
xorb
inc
inc
push
call
cmpsl
mov
movsl
xor
and
cld
aaa
cmp
cmp
cwtl
sti
pop
sub
mov
jnp
pop
inc
and
and
pop
adc
or
jge
jnp
cmpsl
dec
mov
repnz
sahf
ret
arpl
sarl
enter
push
in
icebp
sub
or
jno
mov
jge
repnz
cltd
inc
repz
xor
jbe
sub
out
loopne
cwtl
lahf
dec
iret
xchg
loopne
inc
sub
xchg
rorb
and
sbb
pop
mov
fsubrp
cmpsb
or
pop
leave
das
adc
mov
mov
pusha
mov
xor
cltd
fstpl
mov
insb
loopne
lret
or
and
and
lea
fbstp
pop
cmp
or
and
mov
push
fmull
mov
cmc
mov
cmp
out
pusha
leave
jmp
xlat
or
aad
mov
or
adc
mov
loopne
cmp
cmc
mov
stos
push
sti
xchg
mov
lcall
xor
jmp
add
je
push
jg
andl
or
lret
lcall
push
ficompl
jmp
addr16
sub
insl
gs
and
adc
out
out
or
loop
loop
cmc
xor
pop
adc
ficomps
es
mov
outsl
loopne
cld
adc
xor
aad
daa
fidivs
sbb
fildl
mov
enter
adc
mov
pop
dec
mov
and
mov
fildll
inc
cld
mov
mov
nop
push
call
mov
dec
dec
mov
popa
das
jnp
mov
jmp
gs
jb
int3
and
stos
jbe
or
rorb
or
bound
add
sbb
or
pushf
nop
mov
cmpl
nop
jge
mov
and
in
movsl
inc
push
lods
movsb
or
fs
pusha
int3
cmp
cmp
cltd
nop
xor
push
fldcw
jl
cmp
mov
pop
fs
icebp
cli
sbb
mov
fnstenv
push
pop
adc
mov
xchg
roll
mov
jbe
test
mov
mov
mov
xchg
push
icebp
mov
adc
dec
imul
xor
addr16
shlw
push
add
dec
pop
movsl
ret
add
cmp
add
and
adcl
lds
inc
jns
adc
movsl
in
pop
sahf
adc
sbb
aam
cwtl
xor
sbb
aaa
jecxz
xchg
pop
loop
int3
mov
fs
stos
imul
inc
jb
adc
push
push
mov
das
iret
popa
dec
cmp
mov
xchg
adc
outsl
jb
mov
popa
sub
fs
sahf
inc
icebp
mov
sub
data16
xchg
sbb
repz
inc
dec
mov
mov
mov
xor
insb
out
aam
mov
cmp
mov
xchg
ljmp
push
cs
js
mov
adc
fwait
rcll
pop
int3
lahf
jecxz
aaa
xchg
into
xor
and
mov
pop
insb
sbb
rcl
cmpsl
daa
movsl
inc
bound
jns
mov
sti
mov
sbbb
adc
das
pop
fdivr
pop
test
xlat
sbb
xor
or
adc
inc
xchg
sar
in
mov
inc
cld
dec
enter
cmp
stos
idiv
movsl
pop
pop
lcall
push
outsl
dec
xchg
stos
ss
aam
add
outsb
cmc
subb
sbb
sbb
xor
mov
jmp
les
nop
push
and
dec
add
aas
in
jbe
and
loop
into
iret
adc
push
out
ja
inc
push
xlat
movsl
rcll
inc
inc
mov
and
repnz
stc
adc
mov
fsts
gs
in
xchg
shr
xchg
sbb
inc
int3
push
pop
inc
cmp
stc
mov
in
mov
dec
call
cmpsl
cmp
inc
pop
inc
popa
mov
xor
xor
outsl
mov
jne
mov
repnz
jnp
fisttps
push
imul
pop
push
lods
and
pop
lds
jge
sub
pop
int
mov
sbb
mov
mov
shlb
je
push
sub
push
xlat
jbe
lods
xchg
je,pn
std
dec
out
enter
sub
mov
outsb
jae
or
lret
mov
fisttpl
int
mov
xchg
ret
mov
sbb
sahf
jecxz
invd
out
push
adc
jmp
cmpsl
cmp
mov
insb
movsb
xchg
push
je
and
or
hlt
xorl
push
push
jns
leave
xchg
jge
icebp
repnz
mov
jge
inc
pop
arpl
call
mov
xchg
mov
jmp
lock
mov
jns
and
or
aad
ds
sub
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
ds
push
aaa
push
inc
outsb
push
jle
dec
ja
xchg
mov
out
xlat
out
neg
pop
cs
aaa
jbe
push
inc
outsb
push
addr16
jbe
xorl
scas
mov
jecxz
ficomps
cmp
scas
push
pop
pop
inc
outsb
inc
jle
into
negl
push
push
jmp
sbb
or
shlb
loope
xchg
cmpsl
repz
xor
add
jae
and
push
xor
mov
mov
xchg
repz
push
xor
adc
popa
add
add
push
and
mov
mov
repz
scas
shll
jg
arpl
jp
jae
gs
mov
testl
and
das
jb
cs
push
push
je
mov
cmp
andb
add
fildll
cmpsl
mov
add
mov
call
das
cmpsb
test
fs
pop
movsb
shrb
xchg
inc
pop
repz
frstor
ret
add
push
stc
lods
sbb
mov
outsb
repnz
push
add
cmc
in
lahf
cld
out
and
xor
lods
and
cs
pop
roll
jle
repz
sub
xchg
jno
ret
out
and
push
mov
sub
pop
lock
pop
imulb
push
inc
int3
inc
xor
pop
xchg
add
and
mov
mov
jne
stc
jecxz
roll
ret
xchg
xor
and
adc
pop
jae
arpl
push
and
test
cltd
out
mov
push
pop
adc
jge
insl
arpl
outsl
sbb
inc
es
repnz
jmp
clc
xchg
in
inc
mov
adc
inc
sbb
sbb
or
es
sub
nop
out
test
shll
and
popa
add
jae
arpl
push
and
mov
mov
xchg
repz
push
xor
jno
popa
add
jae
arpl
push
and
mov
mov
popa
and
ss
sbb
or
jl
stc
xchg
fsts
push
add
rcrb
sbb
xchg
call
inc
sbb
pop
dec
dec
push
xchg
mov
dec
in
das
jmp
jnp
lock
inc
ret
cmpl
add
pop
shl
or
jecxz
mov
lcall
xlat
test
xchg
adc
lret
mov
push
push
xchg
cltd
icebp
or
imul
adc
push
mov
enter
pop
loop
aas
iret
insb
or
sbb
sub
pushf
lcall
pop
xchg
dec
jno
inc
inc
adc
jmp
mov
aas
sub
jge
out
outsb
xchg
inc
inc
mov
jb
dec
jp
sub
inc
cmp
hlt
jae
loop
call
pusha
clc
mov
daa
mov
push
lret
std
repz
je
pop
sbb
stos
sahf
jmp
and
icebp
mov
test
fisttpl
jbe
jmp
inc
pop
push
scas
lock
dec
stc
push
pop
lds
lods
mov
adc
pop
cmpsl
mov
push
daa
int3
movsl
daa
inc
sbb
adc
or
scas
aas
xor
sub
inc
inc
icebp
push
hlt
mov
dec
out
ljmp
out
stos
lea
scas
mov
sbb
xchg
pop
ljmp
xor
add
cmpsl
scas
mov
call
fisttps
cmpl
or
inc
push
xchg
aaa
or
lods
fdivrs
dec
dec
xor
sbb
ljmp
push
scas
call
dec
mov
ljmp
loop
adc
or
ret
lcall
add
sti
lahf
mov
sbb
jl
lock
push
cmpsb
scas
sbb
mov
inc
sub
sbb
cmp
popa
pop
scas
and
xchg
fadd
stc
in
pop
inc
push
je
cltd
or
dec
xchg
or
jnp
push
insl
xchg
rcr
mov
fsubrs
mov
lret
fiaddl
cmp
pop
mov
add
mov
adc
mov
repnz
sbb
jmp
sbb
mov
cmp
sbb
mov
dec
cmp
mov
pop
dec
push
in
ret
cmp
cmpsl
das
int
mov
test
bound
fldenv
pop
sub
jge
pushf
jecxz
icebp
mov
lcall
je
cmp
dec
repz
sbb
mov
dec
stc
mov
add
pusha
ja
in
sub
mov
lods
sbb
out
lahf
dec
andb
lock
imul
cmp
jge
mov
cmp
pop
pop
push
fisubrs
cmp
nop
pop
jnp
mov
call
cli
ret
sbb
into
dec
inc
loopne
cmp
ficoml
sub
dec
mov
lret
mov
xchg
xchg
or
push
ret
add
ljmp
cwtl
js
lcall
inc
and
mov
inc
call
xchg
push
pusha
aam
cmpsl
dec
pop
cli
fsubrl
popa
aas
frstor
xorb
inc
jo
mov
dec
rcrb
scas
fadds
jo
loopne
inc
aas
add
sbb
leave
int
imul
scas
or
sub
std
sub
xchg
mov
push
dec
lret
or
inc
mov
shrl
push
roll
cltd
fimuls
or
sub
dec
dec
lcall
out
les
mov
movsb
mov
dec
and
or
imul
jmp
push
push
push
push
enter
xor
xorb
sbb
rcrl
pusha
gs
cmpsb
in
jl
pop
mov
sti
add
lock
out
xchg
mov
addr16
cmpsl
repnz
push
ja
add
mov
xchg
sbb
lahf
sub
aaa
rorb
ret
mov
mov
pop
lds
cmc
js
fildl
dec
fistpl
add
push
cltd
xchg
adc
pop
jne
scas
icebp
fnsave
mov
pop
addr16
shlb
out
arpl
or
cmpsl
xlat
js
xor
mov
push
xchg
sub
std
inc
xor
nop
dec
jl
inc
xchg
sub
cmp
xlat
popa
pop
sbb
dec
mov
xor
fisttpl
rolb
sbb
adc
test
lret
daa
loope
sbb
lret
dec
outsl
decl
stos
data16
xchg
inc
cmp
jg
xchg
lret
imul
adc
xchg
and
stc
jo
jle
cmpsb
in
pop
lea
add
repnz
mov
ret
scas
insl
out
push
lcall
test
and
out
mov
test
push
jg
sbb
cmp
aaa
aad
and
pop
popa
xor
jmp
pop
inc
lcall
movsl
xor
ljmp
pop
mov
enter
bound
xchg
rcpps
sahf
push
in
movsb
test
orb
aad
push
cmp
clc
stos
xchg
mov
mov
mov
lret
mov
movsl
lret
inc
push
sbb
out
jb
xchg
add
cwtl
hlt
arpl
jbe
mov
in
dec
xchg
lock
sbb
pop
sbb
pop
jns
mov
mov
xchg
xchg
mov
dec
ret
and
sbb
cmp
in
stos
add
pop
adc
out
fidivrl
mov
jo
ljmp
xchg
mul
scas
lods
fsub
clc
scas
or
dec
movsl
fstl
dec
sub
lret
and
ffree
mov
pushf
cs
in
pop
jne
ja
pusha
mov
xchg
cmp
loop
ljmp
jle
mov
pop
lcall
add
icebp
mov
nop
cmc
rorb
pop
jo
ja
insl
push
aam
shrl
mov
pop
mov
push
sbb
jle
cltd
lret
mov
sbb
push
xor
mov
repnz
mov
sbb
xchg
movsl
je
fstpl
je
aaa
mov
dec
cmp
imul
repz
and
adc
pop
pop
pop
xchg
dec
sti
pusha
test
arpl
fbld
js
push
fs
lret
jb
push
pop
pop
addr16
idiv
mov
jo
out
aam
aas
jo
rcrl
and
and
dec
xor
cmpsb
sar
fisubs
cmp
xor
xlat
pop
ds
aam
mov
inc
movsl
test
and
rcrb
xor
pop
add
aaa
out
movsb
pop
push
fwait
out
fstpt
sub
pop
scas
add
cli
inc
add
lock
out
push
icebp
and
enter
inc
xchg
adc
loopne
mov
jb
inc
iret
mov
mov
mov
roll
stos
cmc
test
jbe
sub
test
push
stc
or
popa
data16
rolb
dec
lds
sub
xchg
loop
cmp
and
cld
jbe
clc
xchg
mov
pop
mov
mov
das
gs
jl
inc
push
inc
dec
xor
push
sbb
out
in
mov
inc
adc
jnp
out
or
jns
mov
mov
shlb
stc
jmp
cmp
scas
jg
xchg
mov
lea
adc
or
sub
dec
push
pop
sahf
cwtl
lods
lea
or
shrl
stos
into
test
imul
cmp
cwtl
mov
pop
xor
ljmp
popa
or
fstl
mov
rorl
stos
pop
dec
adc
pop
ds
and
sbb
test
ficoml
test
mov
mov
subl
xchg
xor
push
fsubrp
cmp
addl
int3
adc
movsl
int
xor
fistpl
aas
cmp
inc
jge
jle
add
imul
cmp
jno
pop
aas
push
jns
lcall
add
dec
pop
mov
pushf
mov
cwtl
cwtl
or
sub
rcll
mov
or
adc
inc
cs
fucom
cmp
lcall
xchg
stos
aas
in
and
movsb
xor
repnz
jge
enter
das
inc
ljmp
mov
pushf
jp
aam
insb
xchg
and
inc
jne
push
cmp
in
pop
add
std
add
hlt
test
in
jp
push
jmp
push
je
notb
enter
mov
adc
pushf
ret
nop
mov
cmpb
cmp
cmpsb
addr16
push
pop
xchg
psrlq
mov
loope
xchg
inc
ljmp
sbb
mov
adc
out
movsb
mov
xor
sarb
aas
dec
and
dec
es
pusha
mov
sub
mov
jo
add
inc
sub
xchg
notb
pop
fld
sahf
clc
fisttps
call
daa
fcmovu
sbb
jecxz
mov
cli
iret
pop
inc
pop
out
movsl
sbb
fs
rorb
add
lea
or
jbe
inc
jo
loope
cmpsl
popa
pushf
into
cltd
stc
rcl
icebp
rorb
cmpsb
add
mov
mov
fwait
sub
pop
mov
cmpsl
mov
mov
cmc
mov
call
loope
cld
mov
cmc
pop
mov
adcl
pop
add
dec
or
and
dec
inc
icebp
xor
push
sbb
repnz
popa
jns
pushf
mov
mov
push
adc
js
aad
jb
pop
outsl
mov
fcoms
std
mov
jo
jp
hlt
jge
lods
mov
stc
xor
aad
daa
pop
rol
enter
sti
mov
lods
out
adc
jg
jmp
add
xorb
aaa
pop
mov
xchg
mov
dec
outsl
jge
les
aam
sbb
push
cwtl
mov
pop
and
xor
mov
loop
ja
mov
scas
mov
data16
insl
add
nop
inc
adc
jg
sub
out
addl
iret
push
or
jmp
sbb
fwait
sub
lcall
orl
daa
sbb
es
cld
xor
cmc
in
js
arpl
test
mov
insl
mov
inc
jmp
nop
jae
cmc
data16
outsl
add
pop
int
jns
ja
and
mov
inc
das
hlt
jns
out
xor
xchg
addr16
fadds
and
gs
aaa
add
mov
rorl
jno
inc
aaa
std
daa
xchg
insb
hlt
sahf
lret
add
lods
test
ja
xor
les
roll
out
mov
push
hlt
cmpsb
call
fmull
xor
push
push
mov
std
xor
mov
ret
jg
aaa
aaa
sti
sbb
push
imul
out
out
dec
aad
test
pop
inc
mov
mov
leave
and
mov
ret
nop
sbb
mov
mov
and
lcall
cli
test
xchg
mov
hlt
inc
fcmovb
test
cmp
and
stc
test
sbb
rcrb
dec
sub
loop
subb
adc
repnz
cwtl
push
stc
dec
and
and
adc
sbb
pop
mov
outsb
jle
lahf
sub
pop
sbb
test
aas
fiadds
mov
loop
cmpsb
pop
inc
in
inc
sbb
repnz
mov
cmpsb
je
sub
ss
out
cmp
xchg
xchg
mov
xchg
in
lods
pop
sti
pop
hlt
and
cwtl
inc
rolb
xorl
jge
xchg
ds
mov
fucomi
sub
push
arpl
sbb
icebp
jnp
std
fnstenv
push
push
ret
mov
ljmp
pop
out
inc
jb
insl
xor
mov
test
mov
mov
cmovae
push
dec
cld
sub
inc
mov
add
ret
js
mov
mov
add
sub
adc
xor
mov
mov
call
cmp
pop
mov
lock
adc
out
dec
insb
jne
push
pop
popa
in
xchg
jge
pusha
jae
mov
popa
pop
and
dec
stos
pushl
adc
mov
ret
mov
cld
sub
movsl
mov
or
or
or
in
pop
or
movl
or
aas
shlb
xor
gs
fisubrl
xorl
insb
es
movsb
repz
inc
add
pop
jnp
xchg
or
mov
jg
adc
aas
insl
lods
clc
lret
movsl
pop
or
in
and
iret
jecxz
int
xor
sub
inc
or
lret
pop
sbb
mov
aad
pushf
lock
inc
std
cltd
test
pop
adc
out
sub
mov
sbb
lcall
xchg
jp
adc
jecxz
insl
cmp
mov
mov
int
js
lret
jns
jle
lcall
out
adc
inc
add
cs
mov
sarl
cmp
jae
mov
mov
mov
iret
aad
out
lret
mov
push
test
movsb
push
cmpsl
rcll
push
fsts
imul
cmp
pop
jg
mov
outsl
movsl
or
fwait
pop
fidivs
push
push
lret
sbb
xchg
aam
or
push
nop
dec
test
mov
movsl
mov
mov
adcl
bound
or
jnp
jecxz
cmp
test
xor
dec
dec
jb
pushf
inc
jp
inc
xlat
andb
pop
fwait
jmp
enter
pusha
nop
fchs
inc
ja
add
scas
pop
mov
and
pop
movsb
fcmovb
mov
cmp
push
in
scas
imul
lret
cmpsl
insb
stc
pop
loope
ja
mov
fisubrl
adc
popa
loop
iret
push
dec
bound
js
scas
pop
lea
mov
cbtw
mov
and
inc
adc
cld
adc
dec
pop
std
in
jmp
ja
mov
aad
cmp
aaa
push
stc
test
jb
adc
fstpt
mov
xchg
pop
xor
inc
jge
idivb
loope
push
pop
aaa
rolb
sub
scas
adc
mov
out
push
mov
pop
pop
out
mov
aam
into
ret
sub
icebp
add
jmp
sti
adcb
cs
cmp
push
sbb
and
bound
mov
xor
shrb
leave
les
das
dec
cmpsl
xchg
sub
mov
mov
fsubrl
into
xor
fsubp
das
and
cmp
sahf
mov
fsubr
xchg
mov
pop
or
dec
test
fwait
lahf
sbb
xor
mov
jb
shrb
cmpsl
pusha
xchg
mov
push
mov
xlat
sub
fdivs
int
mov
pop
sti
fcmovb
rcr
push
movl
lock
add
adc
adc
ret
lcall
mov
das
sub
jge
out
cli
push
xchg
push
cmpsb
es
adc
hlt
add
scas
orb
jo
xor
dec
jbe
xchg
loope
or
scas
ffreep
push
fcomip
icebp
inc
push
jnp
adc
or
inc
push
fistpll
or
ljmp
in
fdivrl
ds
mov
cmp
std
mov
adc
shlb
dec
and
ret
inc
or
xor
andl
or
jns
jl
outsb
sahf
jae
dec
pop
mov
bound
mov
ja
jb
dec
cmp
jae
add
nop
or
xchg
mov
jp
aam
mov
and
sub
and
or
cwtl
je
push
into
jmp
insb
jno
mov
pop
aaa
in
sysenter
push
ja
popf
mov
push
test
push
scas
mov
mov
sbb
mov
data16
adc
aad
push
cltd
sti
mov
pop
loope
imul
movsb
loopne
xor
mov
clc
cld
adc
sarb
mov
sbb
test
mov
or
pop
push
cmp
aam
push
es
or
or
shr
idivl
push
data16
jl,pn
cmp
add
or
dec
mov
aam
dec
arpl
psubsw
inc
cmc
xlat
adc
mov
call
scas
inc
xor
jge
stos
pop
mov
add
rorb
repnz
push
insl
movsb
xlat
ds
xor
inc
clc
icebp
mov
imul
push
fwait
lahf
std
outsl
or
cmp
sbb
jge
cmp
in
cmp
js
mov
pop
stc
dec
cmpb
pop
sub
cmpsl
in
icebp
jp
inc
fucomp
jb
cmp
xchg
cs
xchg
xor
pop
mov
adc
mov
popa
pop
push
leave
lds
sbb
stos
jnp
fidivrl
xor
into
in
pop
ja
lret
pop
lret
push
stos
ret
mov
pop
out
sahf
push
aaa
mov
pop
mov
xchg
and
jnp
cwtl
mov
popa
imul
and
lods
inc
push
push
dec
ffree
xchg
jge
ret
mov
jl
mov
popa
cmp
out
insl
sbb
xor
scas
mov
jns
sub
cld
add
repz
test
popf
fisubrl
arpl
cld
lods
fsub
out
jno
aad
les
mov
lods
and
mov
jp
xchg
pop
mov
inc
rol
ret
stos
out
daa
fildll
inc
inc
or
mov
sub
ds
jg
in
push
mov
out
sti
sub
nop
add
dec
xchg
pop
jge
sub
inc
sbb
movsl
adc
and
push
movsb
daa
dec
pop
test
jmp
push
jg
popf
js
mov
cwtl
rcll
push
push
push
cmp
adc
sub
in
pop
loop
mov
andb
cmp
inc
mov
inc
inc
mov
xchg
into
xlat
add
sti
pop
enter
lock
push
pop
jb
mov
scas
loopne
addr16
cmpsb
bound
repnz
pop
dec
les
add
or
enter
cwtl
or
or
xor
adc
sub
subl
scas
clc
scas
cmc
adc
jmp
cli
repz
lods
popf
push
xchg
das
sbb
adc
ret
push
and
add
or
into
xchg
or
fwait
imul
aam
and
je
ljmp
stos
sbb
jp
in
in
jmp
sbb
test
add
push
pop
mov
cli
lret
inc
cmp
testb
xchg
inc
pop
xor
mov
rcl
or
clc
outsb
cmc
cmp
and
dec
xchg
jecxz
movsl
and
out
imul
xchg
movsb
in
xchg
outsb
add
lret
sub
jg
xchg
stc
mov
loope
xchg
pop
and
add
xchg
cli
jnp
into
test
lcall
cmpsb
dec
leave
aad
dec
xchg
aam
bound
pop
cmp
repz
dec
mov
push
xor
cmp
mov
nop
adc
clc
fadds
dec
hlt
sbbb
dec
lds
lea
das
lock
stos
inc
cmpsl
pushf
push
out
scas
adcl
jle
or
mov
dec
mov
jae
push
inc
sti
cmp
adc
stos
xchg
popf
lret
in
hlt
icebp
sbb
mov
sbbl
addr16
pop
cmp
xchg
loope
pop
fstpl
pop
lods
xchg
xchg
xchg
pushf
inc
sbb
add
jmp
pop
xchg
xchg
mov
xchg
mov
cli
popf
jo
jg
mov
and
jmp
inc
daa
mov
fidivrs
sub
adc
fdivrl
sub
in
mov
sti
and
sbb
cmpsb
sbb
sub
addr16
xchg
cmpsb
sbbb
dec
mov
push
mov
pop
loop
xchg
push
xchg
sbb
xor
cwtl
dec
xchg
out
mov
fdivrp
add
faddl
dec
mov
jmp
xor
add
call
mov
pop
in
into
push
rcr
jne
lahf
subl
into
and
jns
int3
push
int
mov
push
sbb
xor
or
inc
mov
jns
sbb
push
mov
sbb
cmp
repnz
push
push
jmp
add
lcall
jb
fildl
outsl
imul
test
push
insb
gs
add
push
out
js
in
lcall
roll
lods
test
enter
xchg
mov
push
xchg
mov
push
mov
clc
and
xor
push
mov
sbb
in
sbb
add
cmp
sbb
add
mov
and
aaa
lods
sbbl
xchg
or
test
xchg
fstpl
and
xor
lahf
pop
repnz
sub
push
mov
dec
mov
outsb
pop
shrl
fwait
xorl
hlt
mov
loopne
out
or
ss
lcall
sub
xchg
pop
inc
mov
js
xchg
dec
mov
sub
ret
push
push
aad
mov
dec
test
test
jl
push
xor
or
adc
stos
sub
fcoml
sub
shl
cmp
das
aaa
std
test
mov
inc
sub
dec
nop
xchg
mov
xchg
repz
push
xor
jno
popa
add
jae
arpl
push
and
mov
mov
xchg
repz
push
xor
jno
popa
add
jae
arpl
push
and
mov
mov
add
and
push
xor
adcl
adc
push
leave
inc
lds
roll
push
and
int3
mov
je
sti
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
fucomp
int
std
iret
in
mov
fnstsw
cli
aam
lods
jg
outsl
dec
pop
imul
pop
cmp
out
int
std
iret
in
mov
mov
outsl
dec
sub
insl
aas
outsl
das
nopl
out
aam
in
cmc
mov
movsl
mov
pop
outsl
outsb
sub
popa
sbb
dec
jns
dec
popa
inc
mov
out
mov
call
dec
adc
je
mov
jns
outsb
mov
aas
xchg
fstl
sub
inc
mov
xchg
inc
jns
mov
lret
jge
push
push
int
aad
inc
cmpsb
pop
into
inc
mov
push
mov
lock
add
xchg
lahf
mov
iret
push
test
popf
mov
sub
jg
rolb
inc
mov
ret
add
xor
pop
movsb
clc
sahf
mov
lds
xchg
mov
test
aam
pop
sub
test
and
mov
inc
pop
outsb
sub
add
das
xor
or
pop
aas
sub
fstp
in
in
mov
mov
outsl
push
pop
fs
je
add
cvttps2pi
cwtl
stos
mov
lahf
out
cli
ror
enter
dec
cmp
and
pop
js
cvtdq2ps
inc
cld
mov
movsb
mov
ret
lahf
leave
lahf
sbb
insl
sub
sbb
outsl
pop
insl
jnp
insl
pop
mulps
cltd
into
test
scas
scas
lea
pop
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fisttpll
fs
out
gs
aaa
dec
mov
rorl
inc
adc
repz
clc
xor
cs
insl
call
push
xor
mov
sbbb
das
jl
and
nop
sbbb
icebp
call
push
xor
xchg
pop
call
push
push
pop
fabs
imul
xchg
xor
and
rorl
xor
cmp
lahf
adc
out
add
sbb
lcall
mov
mov
dec
sub
jecxz
je
sahf
pushf
sub
loop
inc
lahf
sarb
mov
stos
andl
mov
pop
push
mov
outsb
xchg
outsl
test
inc
decb
and
stc
xor
or
push
mov
test
in
out
pop
sub
in
sti
aam
mov
aas
inc
add
dec
std
mov
jb
dec
mov
outsb
les
test
push
out
lea
inc
js
or
mov
pop
negl
insl
inc
aam
dec
xor
fiadds
mov
das
xchg
adc
xor
xchg
inc
or
ljmp
jns
jnp
adc
call
add
in
adc
mov
jne
push
adc
add
subl
clc
sbb
pause
jl
sub
ds
sub
mov
jle
pop
mov
sub
imull
rcll
push
es
insl
inc
jg
call
xlat
cmpl
idivb
push
imul
addl
xor
nop
notl
or
sub
mov
iret
ffree
push
mov
sbb
scas
sbb
push
jl
ds
cltd
imul
outsb
daa
mov
fimull
pop
jp
sahf
or
or
mov
or
cli
cwtl
pop
pop
jae
movsb
xor
mov
jns
dec
jl
mov
inc
xchg
arpl
cmp
cmp
adc
into
xchg
mov
aam
or
xchg
fsubr
mov
aad
dec
pushf
fcomps
pushf
add
jmp
mov
inc
add
int3
inc
mov
sbb
jne
sbb
xor
cmp
jb
sbb
gs
mov
push
and
out
movsl
inc
dec
les
jne
or
aad
cwtl
add
pop
cmp
leave
in
pop
in
jg
xor
push
loope
mov
push
jb
cmp
jo
adc
jns
loop
loop
or
scas
lods
and
pop
lahf
and
mov
mov
scas
jns
pusha
sahf
cmp
in
inc
ret
push
mov
sub
adc
ljmp
out
out
fs
push
or
js
sbb
sbbl
scas
dec
adcb
lret
fbstp
scas
dec
cs
out
mov
mov
pandn
push
pop
jbe
lods
lock
scas
fcmovu
shll
loop
push
adcb
into
or
mov
push
xchg
sahf
pop
add
add
jg
mov
ljmp
mov
sub
les
add
mov
je
push
jl,pn
mov
stos
adc
jae
mov
cli
xchg
inc
sbb
jecxz
decb
data16
pop
loopne
loop
mov
inc
fxch
cmp
ret
cmp
pop
and
or
mov
mov
jmp
dec
jb
xor
nop
popa
sub
in
push
pusha
cmp
and
sti
loopne
xor
adc
or
lea
mov
jmp
cmp
fcompl
pushf
jmp
pusha
lods
lods
lods
push
mov
ret
pop
stc
jo
jns
std
sbb
cwtl
and
outsb
insb
hlt
mov
out
pop
or
xchg
lcall
add
xor
push
clc
push
mov
outsl
pop
call
or
mov
xor
inc
cmc
xor
push
cmp
test
cwtl
xchg
loopne
cwtl
divl
lds
loope
out
fcmovu
sub
sbb
or
loope
pop
nop
sub
cmp
add
lds
push
rorl
call
lock
jns
mov
rcrl
lea
mov
or
jle
jmp
dec
mov
mov
mov
fucomi
insl
sub
out
sub
inc
lahf
cmp
xchg
push
mov
xor
dec
jge
mov
scas
ficoml
jp
mov
rol
imul
and
stos
dec
xchg
mov
aad
mov
gs
dec
stos
pop
mov
hlt
adc
mov
add
data16
leave
add
mov
and
and
ljmp
loope
loope
push
xor
push
int3
and
in
pop
enter
sbbb
xor
nop
les
mov
insb
xor
cmp
out
pop
andb
xchg
adc
inc
inc
pushf
sbb
pop
popa
add
inc
repz
mov
rorb
mov
inc
ljmp
leave
xchg
fistps
pop
xchg
inc
dec
adc
cmp
pop
jle
adcb
cmp
les
stc
out
cs
testl
xor
xor
pop
jmp
cmp
push
sbbb
push
mov
push
imul
andl
jae
cmc
fsubp
inc
pop
int
mov
jne
xchg
shrb
dec
outsl
sbb
jo
mov
or
outsb
es
mov
mov
sbb
into
cmp
fstl
ficoms
jecxz
push
sbb
in
and
lret
inc
jg
shlb
jb
mov
xchg
xchg
mov
iret
mov
shrl
mov
stos
ret
stos
mov
push
sbb
stc
mov
jecxz
ljmp
fs
add
mov
mov
pop
push
mov
fdivrl
dec
and
dec
lods
ja
test
mov
xchg
push
popf
mov
inc
mov
arpl
ret
push
leave
push
sbb
sbb
lahf
clc
cmp
sub
movq
push
sub
mov
or
arpl
xor
pop
dec
addr16
ja
sahf
add
in
dec
push
ficoms
mov
mov
inc
cli
fldenv
xor
stos
jge
cmp
adc
call
add
mov
arpl
mov
ret
adc
jge
push
outsl
add
inc
mov
mov
hlt
les
fld
and
push
adc
stos
cmc
or
repnz
jne,pt
call
insl
das
cmpsl
xchg
fidivrl
cmp
pusha
mov
popa
out
mov
cmpsl
fs
outsb
xor
and
jns
jp
mov
inc
push
inc
and
mov
jb
lods
loop
cltd
xchg
pop
popa
repz
orb
imul
xchg
cmpsb
push
pushf
stos
test
out
mov
pop
adc
hlt
iret
sbb
clc
addb
inc
outsl
addr16
cs
scas
mov
jnp
xchg
inc
mov
push
adc
jmp
inc
cld
lret
xchg
sahf
clc
lock
mov
jo
subl
inc
outsl
push
mov
inc
mov
adc
scas
jg
in
test
movsl
dec
in
mov
sarl
adc
xor
push
jne
fstp
outsb
pop
daa
or
push
daa
mov
sti
inc
jg
das
pop
loope
pop
addl
lock
mov
into
push
std
xor
mov
inc
popf
xor
mov
mov
adc
dec
test
adcb
adc
jno
bound
scas
test
sbb
adc
ret
jae
imul
cmpb
xchg
xchg
fildl
sub
mov
inc
cwtl
mov
mov
pop
jmp
push
rcll
jne
push
int3
add
push
shll
pop
jl
jno
lds
xchg
jp
or
lret
cmpsb
sub
add
adcl
mov
clc
das
lods
xchg
stos
cld
inc
jo
scas
pop
lds
mov
add
clc
jne
sub
pop
cltd
mov
mov
test
jnp
sub
add
mov
mov
test
fldl
sbb
xor
jecxz
and
dec
pop
xchg
lcall
inc
xchg
in
pop
cmp
adc
cmc
insl
mov
push
in
loope
cmpsb
or
enter
lret
insb
les
repnz
test
cmpsb
ret
add
fidivrs
xor
cmp
test
fbld
mov
xchg
push
or
xor
cmp
xor
mov
call
add
xor
pop
out
cmp
sbb
mov
mov
mov
cmpsl
popa
jmp
pop
mov
icebp
out
sub
aas
stos
xchg
fnsave
clc
ljmp
aaa
pusha
lds
mov
iret
pop
lods
xchg
aam
or
inc
or
addb
mov
sbb
adcb
jne
scas
push
pop
andb
add
in
popa
incl
test
sub
jno
das
pop
fmuls
xor
iret
jg
gs
es
int3
push
inc
sub
mov
out
test
xchg
cwtl
add
addr16
mov
call
jb
jecxz
popf
sarl
inc
sbb
sbb
jnp
sbb
cmp
stos
aad
pop
sti
and
adc
decl
cli
or
push
aaa
sahf
dec
jg
out
pushf
sub
mov
xorb
jbe
gs
add
sub
jb
aad
xchg
and
arpl
mov
dec
xorb
out
xchg
and
add
sti
loope
jecxz
mov
pop
and
pop
cmpsl
int
cmp
lods
mov
mov
mov
xor
cwtl
mov
movsl
rcrl
sbb
sub
xchg
mov
insl
mov
addr16
mov
fmull
out
or
ljmp
pusha
imul
scas
jae
mov
out
xor
push
imul
ret
gs
in
clc
lahf
inc
xchg
xchg
mov
dec
cmp
mov
add
in
cmpsl
mov
lods
adc
push
xchg
shll
hlt
or
mov
pop
pop
pusha
imul
mov
insl
pop
lcall
xor
jmp
lods
daa
push
outsb
aam
sti
adc
push
fstps
adc
js
rorb
sub
call
popf
mov
loope
mov
cli
and
mov
inc
mov
scas
inc
cmpsl
mov
mov
mov
sti
mov
and
insb
and
in
mov
dec
es
scas
cmp
or
adc
rolb
divl
daa
mov
adc
stos
fwait
scas
and
push
sbb
add
loope
imul
sarl
lahf
mov
ret
pop
fildll
or
popl
loop
push
inc
movsb
mov
call
xor
or
bound
idiv
sub
outsl
cld
and
fnstcw
pop
xchg
pop
push
in
lods
xor
pop
popa
jb
add
sub
xchg
stc
flds
mov
std
mov
push
lock
jge
pop
cmp
add
jae
mov
inc
in
inc
sub
out
arpl
jecxz
adc
sub
dec
cld
lods
lret
mov
mov
pop
jbe
inc
iret
mov
in
loopne
ret
and
ret
sbb
mov
sbb
jecxz
lds
mov
or
lds
adc
cmc
inc
jmp
lds
inc
dec
fnsave
mov
jmp
add
into
dec
lock
push
inc
xlat
repnz
adc
inc
fnstcw
sbb
and
mov
clc
or
aas
lock
xchg
lea
jb
sub
cwtl
cmp
cmp
scas
rdtsc
std
lods
mov
idivl
mov
stos
stc
or
xchg
idivb
test
repnz
mov
js
adc
imul
dec
lahf
and
xor
push
or
out
cmpsl
or
lret
divl
pushf
pop
nop
cmp
mov
jge
sub
cmpsl
jae
add
cmp
imul
and
js
mov
sub
fwait
adc
xor
ja
ret
jnp
add
pusha
push
xchg
jmp
add
sbb
mov
aam
cmp
jecxz
insl
jnp
imul
pop
adc
jo
arpl
jno
or
push
sub
jle
in
pop
mov
inc
push
sub
add
fst
mov
jp
repnz
add
push
int
and
scas
pop
shl
addl
push
loope
loop
xchg
out
mov
enter
leave
push
fwait
push
aaa
pushf
pop
dec
js
negl
cld
dec
xor
push
pop
or
jge
sbb
les
outsb
add
jae
mov
sbbb
jne
jnp
mov
xchg
cld
mov
sbb
push
push
enter
cmpsl
mov
shl
fldl
dec
hlt
jnp
adc
cs
aam
out
push
mov
cmpsl
imul
js
jl
xor
add
fbld
sub
mov
push
aas
cs
lret
mov
mov
test
movsl
cmpsb
negl
addr16
mov
adc
adc
sub
aaa
imul
sahf
loope
ja
je
jle
adc
insl
xchg
jb
pop
push
insb
rep
ja
jmp
xchg
xorb
dec
andb
adc
hlt
in
std
adc
xchg
clc
lret
movsl
and
outsl
dec
gs
or
mov
dec
pop
push
cmp
test
sbb
pop
add
pop
stos
xor
inc
push
lret
int
je
addl
mull
scas
stos
jmp
jb
rcrb
adc
jg
out
das
test
xchg
xor
push
push
cmp
hlt
iret
sub
mov
loop
push
jg
mov
push
mov
add
push
shlb
test
div
mov
cld
add
outsb
mov
cmpsl
pop
ja
out
dec
lods
ret
repnz
mov
and
imul
arpl
mov
dec
xchg
iret
imul
or
jecxz
repnz
jnp
push
outsl
dec
mov
jle
dec
add
leave
shl
adc
clc
leave
addr16
sbb
mov
push
loop
test
add
cld
mov
push
test
and
out
es
xorl
mov
in
ja
icebp
dec
jb
in
sub
dec
and
adc
pushf
loopne
xor
dec
xchg
adc
pop
daa
sbb
leave
xchg
push
mov
sub
hlt
jne
out
mov
xor
enter
jge
mov
data16
loope
pop
es
movsb
cmp
xchg
jl
jl
mov
mov
loop
push
xchg
cwtl
xchg
cmp
xor
inc
lods
xchg
in
lods
iret
cmp
cmc
lds
mov
adc
adc
addr16
scas
scas
push
inc
hlt
and
inc
pop
dec
xor
ror
gs
les
aad
rorb
inc
xchg
sub
leave
and
mov
jecxz
int3
add
xor
xchg
lds
jne
das
fdivs
dec
cmp
stc
repnz
cmp
sti
iret
or
insl
int
gs
fcomps
imul
and
add
repnz
subb
mov
es
pop
decl
rorb
out
inc
inc
push
test
xchg
or
xor
int
ret
nop
aam
sub
jne
pop
adc
xchg
inc
push
sbb
push
dec
es
aam
gs
add
inc
test
outsl
out
out
jp
dec
ret
cwtl
push
xchg
adc
xchg
in
jb
call
and
fsubs
aas
mov
xor
js
mull
mov
adc
jbe
sar
adc
imul
adc
in
mov
leave
push
xor
lret
popf
xchg
stos
and
imul
push
cmpsl
jl
iret
rcl
in
sti
jae
dec
lods
test
and
cmp
dec
mov
dec
lcall
movsl
mov
arpl
dec
xor
aad
lds
sub
inc
add
add
jmp
aam
pop
in
mov
inc
mov
fadd
sub
add
jg
pop
mov
movsb
call
jg
pop
mov
cmp
mov
shl
nop
sbb
fld
xchg
movsb
pushf
jnp
cmc
std
loopne
xlat
lock
push
mov
sahf
sbb
pop
stos
jmp
iret
add
cli
jb
or
mov
fisttpl
test
xchg
xchg
mov
popa
lret
or
push
dec
idivb
mov
ret
call
push
lods
xor
pop
mov
nop
xchg
stos
dec
mov
ljmp
leave
add
xchg
xor
dec
repnz
in
lds
mov
jmp
xchg
xor
push
icebp
sub
loope
sub
mov
dec
xchg
sbb
mov
sbb
inc
popf
pop
sbb
or
mov
sar
mov
sub
sti
lea
add
jle
or
sbb
mov
mov
push
je
mov
rcll
out
jae
adc
scas
sub
mov
xchg
xchg
sub
cmpsl
pop
call
pop
movsl
jle
pushf
icebp
in
inc
ds
cmpsl
lret
pop
bsr
out
xchg
xchg
notb
cmp
pop
cmp
imul
ss
lahf
sub
out
push
je
ret
dec
add
cltd
push
pop
sti
es
mov
jae
cli
movsb
cmp
rolb
adc
adc
outsl
jnp
mov
daa
mov
ret
popa
cs
incl
push
push
roll
lahf
xlat
add
cmpsb
push
mov
jle
sub
sahf
mov
int3
pop
inc
cli
cmp
int
and
gs
ret
iret
cmc
xchg
leave
movsb
xchg
out
icebp
dec
mov
pop
inc
sahf
jp
test
add
in
mov
mov
sti
dec
aam
jl
add
pusha
xchg
faddl
and
xchg
shrb
out
aad
jp
sti
into
imul
sti
les
dec
cmc
rcll
push
mov
leave
pop
dec
mov
stos
shlb
lret
rcl
fwait
adc
imul
mov
sub
xchg
mov
insb
sub
jns
hlt
cmovl
mov
xor
sbb
cli
and
adc
shrl
xchg
mov
jo
sub
add
subb
pop
adc
mov
and
fisubl
inc
gs
sbb
shll
inc
aas
dec
lods
lcall
pop
or
test
xlat
hlt
pop
xor
arpl
add
ficoms
pusha
or
idivb
fldl
adc
ljmp
and
pop
jle
fcomps
cmp
repnz
mov
jmp
fisttpl
in
cld
out
rcrl
scas
add
inc
dec
xorb
subl
jmp
ss
mov
shl
popa
rol
xchg
mov
jnp
adc
aam
jge
xchg
mov
enter
adcb
mov
test
stos
cmp
mov
push
xor
les
jmp
xor
pop
sahf
cmp
sti
xchg
ret
pop
lods
test
lea
dec
push
jnp
push
add
gs
jo
sti
loope
jle
or
scas
les
sahf
jns
int
clc
hlt
or
push
iret
outsb
add
push
lods
scas
add
push
insl
cmp
and
fstpt
sbb
push
push
mov
dec
sbb
xlat
std
push
pushf
pop
andl
inc
fistpll
mov
xlat
bound
lahf
cs
gs
mov
add
and
jle
stc
hlt
xor
xlat
mov
add
inc
ljmp
xor
inc
xchg
jb
xor
push
dec
push
add
lds
push
add
push
dec
push
jmp
inc
xlat
pop
jmp
push
je
in
mov
lods
mov
adc
pop
mov
mov
adc
mov
jle
frstor
jl
cli
bound
test
pop
outsb
lds
std
lods
stc
mov
pop
add
lret
xchg
adc
out
add
cmc
rcr
inc
leave
das
shl
xor
enter
aas
es
add
xor
sub
cmp
sbb
lock
mov
sub
push
and
shll
inc
inc
shrl
cmpsb
call
popf
pop
add
bswap
and
mov
adc
loopne
data16
adc
sub
popf
mov
clc
enter
inc
adc
xchg
and
jge
int3
fildl
or
lods
loopne,pn
insl
mov
push
adc
fcmovnu
adc
mov
inc
arpl
repnz
mov
mov
gs
repz
dec
mov
inc
and
enter
cmpsl
je
ljmp
mov
xchg
fcomip
jns
je
jl
sbb
jg
add
iret
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
outsl
dec
pop
jge
imul
cmp
sub
leave
iret
in
mov
mov
outsl
out
jge
sbb
cmpsl
jb
inc
lock
enter
call
or
cmp
inc
mov
dec
ja
shrl
jns
or
cmp
call
or
pop
dec
leave
pop
fldcw
js
enter
sub
fcomps
imul
sbb
leave
jnp
add
js
or
ja
pop
int3
push
into
xchg
add
xchg
sbb
mov
mulb
dec
xchg
and
dec
add
jns
cmp
orb
mov
pop
hlt
ja
cwtl
xchg
push
mov
frstor
xchg
push
xchg
negl
mov
cwtl
pop
rcrb
add
and
out
dec
leave
or
push
jbe
movsl
dec
and
jne
fmuls
clc
das
scas
or
fld
xor
adc
pop
jns
fmull
cmpsb
or
cwtl
imulb
js
cmp
push
add
mov
cmp
adc
dec
sub
jae
dec
inc
push
and
leave
test
xchg
pushf
push
push
pop
cwtl
xchg
leave
insl
test
fcomps
imul
sbb
leave
pop
fldcw
js
or
cmp
mov
and
dec
ljmp
mov
add
dec
fstpt
lods
and
xchg
sbb
jle
pop
sub
mov
or
jbe
inc
int3
dec
in
lods
or
or
cmp
cmp
pop
fldcw
js
or
cmp
call
or
cmp
pop
fldcw
js
or
cmp
jne
xlat
mov
sbb
mov
mull
addb
mov
iret
sbb
mov
push
popf
out
add
jmp
repz
mov
out
lret
xchg
in
add
icebp
xchg
xchg
pop
pop
and
or
cld
fisubs
jge
fldt
out
pusha
rorl
loope
rcr
xor
mov
and
fadds
push
and
xchg
jne
adc
outsb
sti
pop
cli
cltd
in
adc
cmp
cmc
xor
into
cwtl
and
pop
repz
popf
mov
push
ja
adc
xor
lahf
sbbb
adc
es
dec
popa
iret
cmc
loop
mov
inc
push
rcll
mov
das
out
mov
push
dec
cld
cli
data16
ficoml
lret
jecxz
insb
jg
push
push
out
and
int
cmp
fisttpl
jge
mov
add
adcb
enter
mov
rcrl
mov
adc
clc
and
loope
pop
fisubs
adc
dec
pop
inc
data16
imul
dec
loope
jle
hlt
xor
sbb
inc
ret
adc
js,pn
add
test
sbb
dec
sbb
pop
hlt
xor
push
outsl
jecxz
and
push
push
or
pushf
push
mov
repnz
imul
ds
lret
outsl
into
outsb
or
aad
stos
sahf
mov
cltd
aad
push
xchg
outsb
mov
sub
xor
xlat
mov
sub
sahf
fs
enter
push
add
mull
cld
add
adc
sbb
jle
cmp
xor
push
mov
into
cmp
test
xor
xchg
dec
pusha
inc
push
lods
push
std
shll
scas
cmp
mov
mov
bnd
push
adc
mov
popf
push
and
movsb
sbb
sub
cmp
xchg
les
movsl
push
scas
mov
inc
jb
cmc
and
push
cmp
into
push
jl
xchg
adc
or
cld
xlat
divl
or
jno
sub
push
test
addr16
orb
aaa
call
sub
cmpsb
gs
dec
push
loope
stos
daa
rcll
add
add
pop
data16
int3
inc
mov
xor
cmp
xchg
push
std
test
sbb
loope
cmp
lahf
adc
lea
loop
scas
mov
sub
lret
and
jns
dec
mov
jo
sahf
dec
and
push
jle
push
pop
insb
pop
loope
pop
lods
pop
out
in
aam
mov
mov
xchg
jne
hlt
push
aas
lcall
mov
repz
push
inc
dec
divb
xor
xlat
cltd
rorb
data16
push
mov
insl
push
jge
push
pop
xor
movb
stos
dec
push
test
or
fwait
in
mov
mov
jg
inc
xchg
dec
mov
cmp
cmp
orb
push
iret
iret
test
imul
inc
rol
jo
in
lea
in
bound
jecxz
imul
and
cmpsb
cmpsb
adc
mov
add
push
mov
shr
inc
add
rclb
out
push
in
cs
cmp
add
shlb
loop
movsl
repz
sarl
and
cltd
sub
pop
xchg
lock
mov
jmp
stos
out
cltd
or
xor
push
xor
adc
nop
jle
lock
rolb
mov
subl
adc
lret
rol
cmp
cmpsl
sbb
jo
adc
inc
clc
syscall
mov
mov
loope
xlat
int
cmc
and
nop
push
jno
push
mov
xchg
sbb
ljmp
scas
and
pop
fidivrl
xor
dec
fstl
sub
add
mov
sti
test
add
push
sbb
cmp
mov
sti
push
cmpsl
divb
push
lock
or
push
cltd
fdivl
mov
add
push
adc
dec
test
sti
das
push
mov
fimuls
mov
dec
aaa
addr16
nop
stos
test
aam
popa
aaa
cs
sbb
ficomps
fwait
lods
lock
stos
or
je
mov
fisubl
xchg
add
mov
mov
punpckldq
shrb
enter
dec
sarb
push
mov
fs
les
xor
cmp
clc
je
add
lret
scas
jg
fcomi
fcmovb
out
lcall
fcomps
notb
lret
pop
pop
scas
int3
fcmovbe
loope
call
inc
xchg
test
jmp
dec
scas
or
incb
sub
jne
sbb
movsb
dec
jg
jmp
sub
xchg
or
inc
mov
mov
xor
adc
out
scas
popa
into
iret
mov
add
andb
xchg
xor
mov
ja
addb
std
push
dec
adc
cmp
inc
push
clc
push
jge
fs
dec
fucomp
xchg
mov
dec
add
fistps
movsb
xchg
ret
push
xchg
sbbl
lret
aad
stos
pop
icebp
dec
cmpsl
loope
inc
es
sbb
push
popa
cmp
sub
ljmp
xorl
push
aaa
sub
lea
pop
sub
jge
fdivrl
mov
mov
rclb
push
leave
jmp
loopne
ret
mov
pop
sub
cld
inc
es
and
insb
push
jl
dec
or
lods
leave
lea
out
fstpl
xchg
jl
int
inc
frstor
daa
stc
mov
dec
sub
fisttps
xchg
imul
iret
loopne
mov
orb
jns
nop
mov
cmp
mov
mov
push
jecxz
mov
xchg
fwait
cmp
adc
pop
es
dec
xchg
lcall
out
dec
shll
and
out
dec
test
rorl
pop
sbb
mov
xlat
adc
pushf
push
push
mov
lret
or
leave
add
jo
pusha
xchg
test
addr16
lock
inc
ret
sub
lret
xchg
lods
aas
xor
repnz
scas
das
mul
mov
out
loope
pop
fdivrl
inc
fldt
and
addr16
out
cmp
bound
aam
sbb
pop
repz
xor
das
xchg
int
sbb
out
icebp
pushf
lds
in
mov
mov
mov
cwtl
dec
mov
or
cmp
xchg
mov
mov
sub
jp
sbb
pop
xor
dec
das
dec
out
push
lods
stc
push
mov
jbe
dec
inc
cmp
repz
dec
cwtl
inc
fs
pop
or
cmp
or
sbb
jns
xor
adc
adc
decb
enter
lock
es
inc
jge
mov
jno
lcall
addb
xor
or
push
lock
js
xchg
add
subl
jnp
ja
jg
pop
jnp
xchg
mov
inc
retw
repnz
pop
xchg
sbb
leave
ljmp
pop
imul
lods
mov
fidivs
and
cmpsb
ljmp
sub
ljmp
shll
pop
repz
jnp
dec
inc
cmp
pop
mov
sbb
stos
addl
xor
aam
rep
mov
sub
add
push
arpl
add
dec
mov
sbb
ret
and
int
stos
sbb
popa
jne
mov
andb
xchg
jmp
lret
mov
scas
dec
dec
outsb
cmpsb
movsl
ret
jne
sbb
ja
inc
sti
jae
dec
in
iret
loop
cli
xor
dec
pop
jl
in
mov
movsl
push
fiaddl
shll
pop
and
and
call
rcr
insl
pop
or
inc
xchg
lods
or
sbb
xchg
xor
or
gs
push
mov
outsl
sub
rorb
push
jns
sarb
cs
leave
dec
repz
outsl
cmp
dec
movsb
outsb
mov
out
into
repnz
or
xor
pop
testl
adc
clc
movsl
mov
stos
xchg
adc
test
movsl
or
jmp
inc
sub
rclb
and
aam
fimuls
mov
test
add
dec
xchg
dec
jecxz
jg
stc
clc
sbb
add
std
insb
push
loope
icebp
cmp
mov
bound
repz
sbb
pop
lret
out
inc
adc
test
aaa
test
in
xchg
dec
cmp
shll
cmp
pop
es
mov
push
sub
dec
popf
lcall
xor
xor
pop
mov
fwait
pop
cmp
inc
cmpl
xor
pop
cmc
shll
sbb
mov
pop
dec
leave
xchg
aas
ja
push
cmp
or
loope
dec
add
mov
push
hlt
mov
jo
jle
fstl
bound
mov
lock
cld
popf
out
shl
popa
or
mov
mov
stc
mov
mov
xor
cmpsl
cmp
fists
pop
jge
out
adc
add
adc
push
int3
jle
adc
add
xor
sub
sbbb
jl
sub
xchg
sarl
cwtl
movsb
and
adc
js
xchg
sahf
lret
fildll
jno
adc
jno
add
rcrl
dec
dec
xchg
pushf
addr16
jnp
add
inc
movsl
aas
push
fsubrs
cmpsl
mov
sub
popa
outsb
or
inc
int
movsl
push
mov
std
cltd
lods
lods
int
fcompl
and
fimull
pop
arpl
mov
leave
sbb
adc
mov
mov
push
addl
dec
adc
xchg
cs
mov
xchg
mov
xor
ja
adc
push
cmp
xorl
or
dec
mov
or
bound
pop
lahf
mull
in
jl
adc
or
jo
jo
xor
push
or
ljmp
mov
cltd
dec
mov
sbb
cli
int3
ret
test
or
jnp
jnp
test
dec
dec
mov
sub
push
adc
dec
pop
aas
in
rcpps
dec
cmp
cmp
bnd
jp
cmove
shll
adc
ss
pop
lods
lcall
loop
in
fadds
push
lds
or
dec
mov
lcall
inc
rcl
iret
negl
jns
daa
mov
out
mov
rcl
outsl
jb
xlat
pop
in
inc
pop
and
mov
jp
add
pop
js
repz
cmp
pop
cmp
xchg
lds
push
clc
and
mov
clc
mov
lea
mov
lret
fstl
adc
dec
xor
jle
mov
movsb
push
mov
mov
mov
lret
sbb
or
pushf
mov
xorb
int
sbb
dec
jecxz
cmpb
nop
inc
shll
and
insl
int
fsubp
xchg
rorl
lock
push
pop
inc
adc
jp
xchg
mov
fsubrs
dec
les
daa
ds
xchg
mov
in
mov
outsl
add
sbb
add
ret
sti
sbb
pusha
add
and
push
jae
ljmp
mov
out
jb
push
pop
cmc
pop
lods
push
push
cmpsl
test
lret
and
xor
mov
lods
dec
ret
popa
adc
test
sbb
das
push
xchg
push
xor
xchg
es
or
mov
idiv
or
imul
aas
add
nop
mov
xchg
xchg
or
add
mov
arpl
popf
mov
add
sbb
jno
insl
mov
and
sahf
insl
dec
aas
push
jg
mov
ds
xchg
loop
lds
cmpsb
rclb
sub
mov
fisubrs
sbb
gs
ds
inc
imul
mov
dec
jbe
loopne
add
jno
mov
div
data16
jge
pop
mov
sub
xchg
dec
sub
adcl
jb
jp
adc
lcall
push
pusha
cmp
adc
dec
pop
sbb
shlb
fimull
adc
cmp
pusha
in
sub
cmpb
test
test
jmp
inc
pop
xchg
test
mov
adc
mov
leave
sub
mov
and
mov
test
and
jmp
mov
pop
jno
loopne
int3
jl
mov
mov
jmp
andb
jg
cmp
aas
push
pop
xor
dec
dec
gs
adc
push
sub
sbb
push
out
rorb
push
jns
popf
icebp
faddp
xchg
cmc
movsb
cmp
fsubl
imul
push
movsb
xchg
outsl
shll
in
gs
mov
and
mov
gs
lock
mov
jg
negl
xor
stos
mov
int
cmpsb
aad
or
inc
js
inc
das
xchg
lock
dec
jne
decb
mov
arpl
xor
pop
push
sarb
pop
pop
xchg
cs
mov
adc
xchg
in
das
test
call
adc
mov
inc
mov
cmp
or
scas
mov
insb
loop
aad
sbb
push
mov
jb
out
xchg
int3
stos
push
cli
sub
enter
lock
lahf
cltd
jg
xchg
mov
cmp
sub
je
dec
mov
ret
jl
sub
into
and
dec
xchg
adc
pushf
xor
mov
mov
fs
push
out
rcrb
ret
pop
fwait
jmp
btr
push
mov
mov
out
sbb
dec
popa
mov
aas
inc
jne
insl
pop
outsb
dec
push
adc
aad
lea
and
dec
sub
nop
lret
outsl
cmp
and
hlt
call
adc
movsl
filds
dec
stos
jmp
lahf
inc
add
and
adcb
fildll
mov
aam
aas
jecxz
lea
add
mov
mov
int3
lods
jno
icebp
mov
lods
test
inc
mov
adc
xor
cmpl
xor
stos
and
mov
inc
addr16
jne
aad
mov
jns
xor
jo
jmp
stos
es
loop
test
cmpsl
pop
mov
lahf
mov
jbe
cmp
push
cmp
fdiv
incb
jg
sarb
test
rcl
into
jno
inc
jmp
stc
adc
movsl
jl
addl
bound
and
mov
shr
mov
mov
xchg
push
inc
adcb
cwtl
sbb
dec
rcrl
jl
push
adc
inc
cmp
mov
cli
scas
ja
xchg
adcb
xchg
xchg
cmp
push
jbe
xchg
outsb
pop
fs
sub
cmp
movsl
xorb
inc
add
push
mov
imul
inc
stos
cs
lcall
cld
lcall
rorl
fisubrl
cmp
mov
inc
call
rcl
jae
xor
iret
adc
dec
pop
mov
mov
addb
lock
jb,pt
mov
sbb
or
mov
jb
shll
ljmp
jle
cli
lea
push
sub
pop
pop
test
or
rorb
inc
shlb
push
stos
push
stos
imul
pop
imul
sbb
jp
xchg
ds
mov
inc
xchg
mov
add
loop
push
popa
fstl
mov
cmp
gs
sti
xor
sbb
out
pop
dec
outsl
jns
mov
jg
es
lock
nop
pop
pop
leave
pop
scas
scas
nop
mov
mov
fbld
mov
aad
push
mov
and
mov
inc
add
leave
inc
mov
call
push
imul
pop
lds
repz
jns
or
pop
pop
cmpl
fbstp
xor
popa
sbb
test
icebp
push
or
jno
jne
dec
mov
jecxz
adc
cltd
adc
cmp
and
pop
sarb
xor
subb
lods
loopne
sti
in
rcrl
dec
xchg
das
fldl
or
xchg
loopne
mov
fadds
inc
cmp
fisubrl
and
mov
mov
or
xor
xchg
jge
test
jl
les
fiaddl
cmc
or
adc
scas
mov
minps
xchg
pop
inc
mov
jle
hlt
subb
in
jns
xchg
adc
inc
mov
inc
es
fs
sub
jno
cwtl
lods
jne
push
les
add
mov
adc
cli
mov
sti
pop
xchg
push
sti
dec
fimuls
iret
das
outsb
dec
adc
nop
test
xor
inc
add
icebp
loopne
jns
dec
sbb
cli
cmp
negl
je
into
add
scas
jns
insb
pop
jge
inc
mov
add
jmp
sahf
aad
cmpsl
cmp
jge
mov
inc
cli
aas
jp
int
into
lods
xor
jge
and
push
inc
sub
cltd
xlat
mov
xlat
rorl
mov
inc
std
leave
enter
xchg
jge
mov
loope
ret
test
or
hlt
or
push
jg
pop
icebp
xlat
je
mov
xor
inc
cmp
mov
cld
testl
inc
out
xchg
cmp
lret
xor
push
lret
inc
scas
stos
mov
sbb
jns
shll
test
xchg
jns
push
xor
pop
sub
ficomps
ror
xor
sbb
dec
xchg
mov
sub
jno
xchg
test
mov
ret
mov
pop
lret
rorb
sub
or
jg
movsb
jg
jb
xchg
sbb
jmp
mov
or
outsl
sysenter
adc
add
xchg
and
stos
mov
and
and
mov
test
inc
ljmp
bound
xlat
push
test
xchg
mov
ds
enter
jae
sbb
popf
dec
or
insb
in
aas
jno
lock
mov
cs
adc
inc
cs
pop
ficomps
ret
push
ror
pop
bound
sub
daa
push
lret
sub
push
arpl
outsb
ljmp
orl
leave
cmp
daa
add
test
cmp
ret
cltd
les
add
in
fdiv
and
push
sub
scas
mov
out
shl
lahf
and
fistl
xchg
rorl
add
mov
sub
xlat
je
mov
and
push
cwtl
xchg
scas
push
xchg
adc
ss
or
dec
or
cmp
mov
jmp
outsl
cmp
pusha
movsl
mov
sbb
sub
push
push
call
aaa
into
mov
shll
gs
cmp
in
clc
jmp
push
js
stos
sub
in
je
cmp
cwtl
inc
xchg
and
xor
imul
jl
ret
jb
push
andb
loopne
in
add
cmc
mov
push
inc
xlat
cmpsl
or
cld
into
mov
scas
adc
or
adc
lret
mov
sub
pop
int
jg
add
jbe
test
xlat
adc
inc
popa
les
push
xchg
mov
pop
pop
mov
icebp
scas
mov
push
repnz
ret
push
sub
dec
cli
or
jecxz
loope
pop
jns
rcl
popf
cli
rol
adc
sub
mov
pop
lahf
jg
dec
test
or
cmpsb
fisubrs
cmp
and
push
orl
sbb
sbb
mov
in
push
sarl
xchg
jl
scas
adc
xchg
fdivr
lret
sub
pop
adc
lea
movsb
adc
inc
cltd
icebp
aas
movb
mov
adc
sub
mov
out
clc
adc
jecxz
orl
repnz
pusha
mov
insb
adc
ljmp
dec
fists
nop
inc
push
icebp
icebp
nop
push
out
cmp
shl
subb
call
popf
out
pop
rcll
jnp
std
int3
outsb
in
inc
mov
xchg
inc
int3
cmp
pop
cltd
ds
cmpsl
mov
jl
mov
gs
add
aas
jl
sbbl
movsb
iret
mov
push
or
fstpt
jne
cmc
fnsetpm(287
movsl
and
test
sahf
roll
mov
out
sti
mov
cmp
lods
fwait
pop
inc
pusha
ds
dec
stc
add
std
adc
xchg
mov
jmp
xrelease
cli
or
inc
mov
les
lcall
repz
test
mov
sahf
test
mov
adc
cmp
mov
vmaxsd
nop
lcall
stc
outsb
add
clc
push
arpl
add
pop
dec
mov
arpl
repnz
add
sbb
jl
jmp
rcl
inc
push
xchg
in
sarb
mov
xor
ds
lret
test
push
add
scas
into
inc
fisubs
fistpl
pop
inc
cmp
mov
cs
add
xchg
jg
mul
mov
inc
pop
pop
and
pop
or
sub
arpl
push
imul
rol
jg
jecxz
leave
js
cmp
mov
rorb
sub
fs
imul
mov
sub
jmp
or
cmp
pop
fldcw
js
or
cmp
call
or
cmp
pop
fldcw
js
or
cmp
push
or
cmp
pop
fldcw
js
or
cmp
call
or
stc
dec
leave
pop
jae
jmp
push
inc
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
arpl
jae
inc
or
xchg
dec
pop
adc
add
repz
lcall
xchg
ficoml
cmp
push
sbb
push
jp
dec
adc
test
mov
mov
lret
jp
push
pop
adc
cmp
bound
push
adc
dec
rolb
mov
pushf
fimull
sub
inc
jle
xchg
jo
xor
and
xor
mov
stos
add
and
sub
or
xor
sub
push
aas
lcall
or
xchg
pushf
aad
mov
loopne
mov
mov
shll
sti
ss
pop
mov
xor
fisubl
arpl
mov
ja
fmull
mov
push
push
gs
mov
xchg
mov
adc
fcmovne
cmc
mov
fmull
xchg
jecxz
jecxz
xor
lcall
andl
or
lock
xlat
sbb
jle
mov
mov
xchg
lret
push
inc
sbb
xor
and
push
or
mov
mov
mov
lret
cmovg
cmp
or
sbb
push
adc
adc
jecxz
lahf
ret
mov
mov
lret
or
adc
sub
and
dec
sbb
dec
add
inc
mov
xchg
fldenv
cmpsb
idivl
das
imul
imul
jp
dec
adc
stos
repz
mov
lret
arpl
jae
inc
or
and
jp
dec
adc
stos
repz
mov
lret
arpl
pop
mov
dec
push
inc
dec
popa
scas
sub
sub
xor
in
popa
rcll
add
fdiv
call
jg
dec
inc
mov
int3
or
mov
stos
mov
cmp
arpl
jae
pop
xlat
adc
rcll
xor
mov
push
fldl2t
adc
rcll
int
nop
cwtl
arpl
or
sbb
hlt
cli
adc
sub
adc
or
test
jecxz
daa
add
mov
mov
out
pop
push
xchg
into
mov
outsl
cmpsb
xor
add
ret
subl
sub
adc
dec
dec
loopne
aas
mov
cli
xlat
in
and
icebp
outsl
cltd
and
sbbb
cmpsl
scas
mov
mov
dec
push
lcall
inc
dec
inc
int
cld
out
in
mov
and
stos
cmp
push
movsb
inc
push
jg
jo
popf
sub
jb
int
xchg
mov
pop
and
jecxz
popw
xlat
xor
mov
leave
popa
cs
jae
lcall
xchg
ret
adc
push
xchg
and
and
aad
or
push
popf
outsl
xor
sbb
mov
test
push
iret
rol
mov
mov
pop
dec
jge
push
popa
add
cmpsb
popa
sbb
enter
jl
nop
pop
and
int3
aam
dec
and
xlat
jl
cmp
add
xchg
pushf
mov
jle
sub
std
leave
push
jg
mov
stos
sub
pop
and
mov
test
mov
mov
xor
pop
test
xlat
scas
and
push
or
das
xor
jbe
mov
push
mov
push
jp
ljmp
cmp
dec
inc
in
cmp
pusha
cwtl
repz
imul
adc
int3
roll
in
cmp
and
hlt
insl
pop
mov
push
loopne
rclb
or
lods
inc
pop
inc
jge
pop
dec
repnz
mov
fadds
add
inc
push
nop
pop
push
es
mov
jg
xor
fidivrl
adc
pop
test
sbb
mov
mov
ljmp
push
stc
mov
pop
mov
xchg
stos
lock
jb
push
jge
nop
jae
fdivrs
dec
xor
xchg
mov
sub
add
inc
or
jp
hlt
push
mov
enter
sub
outsb
pop
xchg
add
std
lret
mov
and
sbb
int3
test
out
and
mov
add
inc
icebp
sub
pop
fildll
mov
xor
dec
mov
shlb
and
imul
fisttps
popa
xor
data16
pop
inc
and
xchg
subl
inc
fstps
mov
and
pop
into
arpl
int3
mov
cld
in
fidivl
mov
rolb
xchg
dec
lcall
inc
sub
scas
imul
xor
cmp
add
fwait
test
jle
cltd
adc
lea
cmpsl
rolb
push
addb
inc
mov
loope
std
mov
je
aam
jnp
push
xchg
in
adc
fistl
mov
or
push
inc
mov
stos
gs
mov
cwtl
xchg
ss
adc
addr16
fnstcw
jecxz
sbb
pop
sub
scas
fchs
stc
jno
mov
jo
lea
mov
xchg
movsl
iret
lret
mov
xor
roll
add
xor
addr16
in
mov
adc
pop
dec
xchg
adc
push
fdivs
adc
mov
mov
xchg
sbb
mov
gs
stos
push
testb
jl
mov
push
outsl
in
xlat
sahf
dec
mov
into
int3
lods
ficomps
xchg
lea
dec
jg
aas
xor
outsl
mov
sub
pop
lcall
push
add
enter
loop
arpl
mov
dec
out
dec
cmpsb
sbb
repnz
fdivrp
sbb
repnz
repnz
mov
mov
add
mov
jmp
js
shrl
or
outsl
cwtl
jg
dec
push
pop
sbb
sub
or
jmp
inc
fcmove
inc
hlt
xchg
movsb
ret
add
cmc
je
fdivrl
mov
imul
jmp
dec
jle,pn
push
movsb
fmull
xor
and
aas
xchg
cltd
shlb
and
xlat
fucomip
scas
pop
jg
enter
arpl
imul
sbb
insl
cmp
pop
pop
daa
in
mov
push
cmc
xchg
sub
sbb
ret
lods
and
push
xlat
xchg
stos
inc
neg
popl
into
pop
pop
test
notl
dec
cmp
loop
int3
or
jnp
nop
gs
mov
push
out
rcl
xor
mov
mov
sbb
mov
xchg
stos
imul
dec
je
imull
loope
inc
push
or
inc
cmovb
xor
inc
out
fwait
scas
fcompl
pop
pop
test
add
repz
mov
xchg
testl
imul
or
adc
int3
push
pop
mov
xchg
xchg
icebp
mov
loop
aad
jns
adc
or
rcl
cli
aaa
or
jp
dec
rcrl
or
rcrl
or
test
sub
out
cltd
and
pushf
xor
fstl
pop
adc
pusha
add
mov
jbe
mov
js
mov
and
popf
mov
outsb
movsb
bound
in
aaa
dec
cmp
sub
pop
fadds
xchg
lock
das
fnstcw
out
out
inc
dec
out
cmp
sahf
test
ss
sbb
add
pop
sbb
out
addl
pop
dec
in
dec
add
sbb
jns
push
push
repnz
add
cmp
fcompl
push
xchg
icebp
pop
adc
jp
or
bound
push
mov
xor
jle
pop
fnstcw
and
push
push
fisttpll
or
arpl
or
fnstcw
pop
int3
or
mov
mov
jo
sub
aam
aas
cmp
into
sarb
mov
xor
push
fld
cmp
test
mov
mov
punpckhbw
or
add
arpl
clc
add
fwait
xor
repnz
jb
neg
sub
lcall
xor
fsts
jb
push
out
dec
sbb
xchg
jl
mov
mov
in
jmp
es
and
push
ds
xor
mov
aam
std
push
rcll
ret
sub
in
jno
ss
sbb
cmp
add
fimull
xlat
inc
fistpl
loop
cmpsb
pop
xor
jo
sbb
lret
in
jo
repz
nop
push
mov
push
arpl
cltd
sbb
mov
jl
mov
das
out
inc
cmp
inc
rorl
xor
pop
test
test
inc
sub
push
sbb
sub
mov
sbb
jmp
sbb
outsl
insl
pop
popf
dec
icebp
mov
ja
in
ret
sahf
adc
in
and
sub
jp
jae
push
adc
jmp
push
pop
cmc
adc
jae
mov
sub
push
data16
dec
inc
xchg
scas
andl
mov
and
arpl
or
pop
inc
aas
in
outsl
or
xor
stos
xor
sub
adc
pop
outsb
jmp
dec
adc
cltd
dec
loop
adc
stc
mov
sahf
and
inc
cltd
rorl
or
add
inc
pop
cltd
int3
xor
adc
lods
jmp
pop
sbb
and
add
mov
mov
xor
mov
enter
jbe
bound
fdivrl
test
sbb
adc
mov
mov
mov
data16
and
dec
lds
and
adc
xchg
jb
inc
ret
xor
lds
aas
dec
sub
fimull
ret
mov
mov
add
fisttpll
rclb
imul
je
push
scas
idivb
inc
or
and
movsb
or
jg
andb
mov
jo
lea
mov
pop
arpl
xchg
cld
mov
pop
inc
sbb
popl
pushf
addr16
mov
sbbl
scas
xchg
fldt
loope
and
cmp
sbb
dec
in
ret
cs
shlb
sub
loop
and
and
inc
xchg
jns
adc
repnz
cmpsb
mov
push
in
pop
in
cli
jl
popf
fwait
jno
adc
cmpsb
and
or
jmp
imul
push
inc
pop
js
sub
jp
adc
mov
loope
push
inc
cs
shr
insl
xor
aaa
daa
repz
add
sahf
push
xor
iret
loop
push
jecxz
aad
xchg
push
push
fs
fs
std
push
out
pop
bound
cmp
pop
fldcw
and
sbb
xchg
pop
test
mov
sub
ljmp
mov
dec
outsb
pop
push
push
enter
mov
pushf
mov
push
add
inc
sub
loope
repnz
cmpsl
movsb
cmp
je
sub
popa
je
jbe
dec
pop
pop
and
push
call
or
mov
mov
adc
add
fdivl
cmpsb
mov
test
test
pop
sarb
icebp
aad
cmp
jmp
lcall
xor
rcl
or
adc
xorb
sti
mov
cmc
lcall
imul
cmpb
ss
je
jbe
aad
loop
jle
xor
xchg
sti
es
daa
mov
add
pop
cmp
xchg
xor
lret
sub
pop
mov
std
mov
cmp
ret
sbb
bound
and
push
rcll
adc
sbb
pop
fsubl
aam
xchg
inc
ret
mov
and
lcall
test
popl
xlat
hlt
xor
mov
ds
sbb
stos
push
das
mov
push
sub
loope
and
mov
aam
adc
addb
jae
jb
sub
adc
lods
jb
stos
sahf
mov
cmpl
stc
mov
dec
xchg
add
add
xchg
adc
std
mov
xchg
out
add
das
cmp
dec
cmp
repz
and
fs
sub
jmp
out
xchg
inc
adcl
hlt
out
ljmp
jg
xchg
jae
cwtl
loop
inc
add
insl
add
xchg
cmpsl
mov
dec
adc
jnp
sbb
shlb
sbb
sub
lds
push
aas
adcl
mov
faddl
push
and
ds
test
dec
mov
add
mov
xchg
mov
pop
sbb
pop
sbb
mov
icebp
data16
das
loopne
dec
imul
cmp
sub
jae
movsb
inc
repz
rcrb
mov
mov
lock
jge
outsl
pop
add
and
cmp
cs
ljmp
xor
xor
gs
push
mov
adc
enter
cmpsb
shll
in
or
xor
into
adc
mov
mov
out
cli
mov
ja
jae
movsb
iret
mov
rcrb
dec
inc
loop
or
pop
cli
scas
or
and
add
mov
aas
arpl
ljmp
fstpt
icebp
sbb
push
push
sahf
inc
pop
daa
test
pop
xor
daa
imul
int3
iret
imul
ss
push
xorl
cld
sbb
or
sahf
aad
sbb
jns
cmpsl
loopne
cli
xor
nop
inc
fwait
push
aas
jne
scas
mov
push
jl
imul
sub
imul
mov
jg
aaa
push
clc
dec
or
cmp
test
movsl
inc
mov
fs
fimuls
aad
jbe
out
jge
aad
fnstcw
and
mov
inc
mov
push
jbe
fxtract
pop
dec
push
test
xorb
nop
aad
popf
add
jmp
adc
dec
mov
mov
jp
mov
mov
dec
xor
test
aad
fisubs
push
pop
mov
and
mov
and
adc
mov
cmpsb
cmp
push
or
sub
clc
jno
xchg
outsb
and
pop
insl
repz
and
xchg
std
into
filds
xchg
mov
inc
int
mov
mov
shrl
mov
bswap
push
fstpl
xor
popa
fwait
push
adc
mov
and
pop
xchg
sbb
mov
cmp
mov
test
addr16
mov
xor
loope
xchg
push
jecxz
or
icebp
outsl
aad
subl
aas
enter
jg
add
dec
xchg
push
or
sti
test
seto
in
mov
inc
mov
jns
dec
push
shll
in
jne
mov
xor
es
cli
into
shlb
add
cmpsl
roll
dec
push
aad
inc
ret
adc
pop
xchg
repz
push
adc
fisttpll
les
sbb
push
adc
xlat
jmp
jg
mov
aam
xchg
and
add
xchg
mov
push
popa
and
push
mov
stos
mov
jge
push
mov
lods
int
outsb
enter
mov
mov
icebp
cmp
loopne
cs
fcoms
xchg
out
fisttpl
imul
loope
andb
push
fsts
nop
cld
dec
sub
xchg
dec
sub
and
lods
mov
orb
jbe
xchg
fbstp
push
and
xchg
push
mov
lret
sub
fdivs
jle
idivb
jns
sub
lds
repz
mov
jbe
push
xlat
inc
in
mov
mov
lret
and
jecxz
out
idiv
push
fiadds
mov
xchg
lods
nop
dec
fldl
pop
mov
iret
add
orb
call
mov
mov
ds
icebp
stos
inc
cmp
aad
fists
bound
and
psraw
test
scas
inc
add
inc
xchg
jbe
jl
inc
mov
jns
loopne
stos
and
cmc
lcall
sbb
sub
test
dec
cld
mov
dec
in
pusha
pop
les
mov
mov
pusha
cmp
cwtl
and
and
add
fwait
lahf
clc
shlb
sbb
idiv
test
pop
xor
int3
addr16
dec
xor
cmp
xchg
pop
mov
aad
add
and
xchg
add
cmp
test
fwait
xor
sbb
jnp
js
lahf
jo
jmp
sub
pop
aaa
adc
icebp
fcomp
mov
sbb
vmovmskps
xchg
pop
mov
mov
clc
test
sarl
mov
ja
cmp
cmp
addr16
enter
xor
jp
imul
ficoml
sub
mov
sahf
mov
gs
in
cmovp
mov
clc
out
ret
sub
sub
xor
xlat
int3
out
icebp
mov
push
sbb
jge
and
lahf
notl
push
sti
dec
fcompl
mov
sbb
test
or
fwait
xorb
sbb
popa
or
sub
xor
mov
or
jb
adc
repz
test
les
mov
inc
add
lods
jo
xor
and
fldcw
xor
into
fstps
dec
mov
loope
dec
push
mov
pop
jnp
pop
repnz
out
inc
movsl
and
data16
shr
sbbb
pop
cmpsl
jmp
stc
mov
dec
mov
mov
mov
adc
stc
xlat
adc
adc
sbb
and
andl
sbb
negl
jns
pop
xchg
repz
pop
inc
xchg
xchg
stc
push
rclb
hlt
inc
shll
sti
inc
push
lcall
mov
fmuls
xchg
dec
dec
mov
ret
cmpsb
push
daa
insl
adcl
jae
lcall
in
sbb
sub
lahf
ror
add
xchg
inc
or
loopne
mov
out
icebp
cmp
rcrb
scas
inc
pop
push
jo
mov
fwait
cmp
aam
cmp
loope
shll
jnp
ret
add
sub
jmp
repnz
pop
xor
int3
lods
fisttpl
rorb
adcb
shll
mov
push
arpl
sbb
mov
hlt
cmpb
cli
pop
addr16
pop
fs
sbb
mov
scas
out
idivb
inc
lods
push
jge
jno
mov
pusha
pop
fwait
cmp
cmc
inc
lret
mov
int
add
pop
mov
rorb
adc
mov
fld
pop
mov
lcall
call
je
xor
bnd
or
test
sub
iret
les
or
jne
xchg
adc
pop
add
test
pop
fcmovu
xchg
enter
jg
sbb
dec
clc
xlat
fldcw
fildl
cwtl
jg
hlt
add
add
mov
movsl
data16
incl
push
xor
push
shrb
sarl
mov
lods
repnz
loop
xchg
scas
negb
sbb
loop
pop
sbb
push
mov
mov
add
imul
ret
ljmp
lret
test
inc
cmpsl
in
add
hlt
ret
in
mov
out
or
dec
jo
pop
pop
mov
les
adc
in
pop
cmp
adc
fnsave
xchg
pusha
inc
and
aaa
xor
iret
loop
sti
clc
enter
sub
add
xchg
pop
mov
sub
cmp
lahf
dec
inc
lcall
and
jmp
dec
mov
mov
repnz
cwtl
ds
fwait
shlw
pusha
or
adc
mov
xor
push
push
bound
pop
in
arpl
iret
jle
jge
pop
sub
adc
and
xchg
insl
bound
jae
in
loope
jp,pt
pop
mov
inc
out
mov
ret
out
stos
or
cmc
sbb
shlb
mov
arpl
sarb
js
sbb
sbb
or
adc
mov
and
sbb
pop
testb
popa
push
in
mov
push
std
sahf
fnsave
ss
fbstp
inc
mov
adc
jne
add
ljmp
cld
cmc
outsb
or
and
adc
cwtl
cltd
jb
sbb
ret
out
and
mov
in
test
adc
cld
xor
xor
dec
stos
call
xchg
outsl
fcoml
pop
in
int3
add
jbe
mov
jbe
outsb
cmc
pop
aaa
insl
dec
jae
inc
pusha
xor
sahf
lods
cli
adc
cmp
mov
and
mov
pop
incl
xchg
xchg
rcrb
in
iret
xchg
xor
jl
aaa
dec
out
arpl
xlat
pop
push
dec
insl
imul
iret
xchg
adc
shlb
popa
adc
dec
cmp
jl
clc
inc
sub
pop
lret
addr16
out
out
pop
rol
or
loop
xor
cmp
jb
and
ret
mov
pop
loope
dec
in
and
test
hlt
pushf
je
adc
sahf
movsl
negb
cmp
cld
xor
movsb
dec
insl
pop
outsl
std
loope
scas
pop
sub
mov
sbb
mov
gs
hlt
jb
ja
or
dec
cld
clc
fmull
rcrl
mov
fwait
push
rcll
cmp
xor
cltd
add
pop
adc
jns
mov
mov
pushf
filds
pushf
sub
cmp
jge
sub
fisubrs
pushf
ljmp
or
adc
lds
push
and
adcb
xchg
jbe
mov
gs
pushf
adc
cld
popf
mov
inc
les
mov
movsl
sbb
mov
lds
xor
jl
adc
add
fwait
rcrb
loopne
pop
push
sbb
outsb
sbb
enter
bound
mov
int3
aas
push
in
xor
xchg
jl
and
jmp
sbb
enter
fistpl
xchg
jns
lahf
aas
cmp
scas
mov
iret
addr16
pusha
xchg
inc
push
adc
test
mov
addl
xchg
xchg
clc
outsb
pop
clc
xor
sbb
add
and
xchg
push
cmp
hlt
lock
dec
mov
lock
cmp
and
cli
out
fldcw
pop
mov
stc
mov
test
dec
in
sbb
push
jp
dec
adc
stos
repz
mov
lret
arpl
jae
inc
or
and
jp
dec
adc
stos
repz
mov
lret
arpl
jae
inc
or
and
jp
dec
adc
stos
repz
mov
lret
xchg
fisubl
jno
inc
or
and
jp
dec
xchg
pop
sbb
or
imul
insb
and
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
imul
movsl
adc
add
outsb
xchg
adc
jno
mov
xchg
mov
enter
add
and
add
jno
popa
movsl
push
xchg
inc
stos
mov
pop
inc
inc
icebp
sbb
and
sub
and
dec
sbb
dec
lahf
push
mov
jne
inc
std
xor
aaa
fisubs
inc
mov
mov
movsb
pop
xchg
jns
popf
pop
bound
mov
lcall
sbb
dec
xor
lods
adc
sahf
mov
mov
outsb
stos
mov
cmp
popf
and
pop
pusha
pop
inc
gs
fidivs
push
jle
push
movsb
fnstcw
push
ret
xor
icebp
rorl
xchg
mov
lock
test
and
jns
and
sbb
jne
and
push
jns
push
pop
xor
loopne
pop
inc
cmp
pop
mov
ljmp
es
xor
xor
pusha
xor
shrl
and
adc
jnp
push
xchg
pop
pop
test
mov
jns
or
lret
rorl
inc
mov
test
push
loopne
ret
mov
es
jb
dec
mov
movsb
insb
xor
add
cmp
adc
adc
pop
hlt
jne
jp
and
pop
xchg
add
or
popa
movsl
push
xchg
inc
test
push
addl
adc
and
adc
add
jno
popa
movsl
push
xchg
inc
test
push
addl
adc
loop
dec
test
sub
jge
rcll
hlt
mov
loop
adc
mov
std
imull
sbb
out
adc
jae
mov
imul
xchg
xchg
sub
movsl
sbb
sbb
sub
sub
add
fsubl
sub
out
cmc
lods
arpl
out
ja
jg
add
pusha
or
cmp
xor
inc
add
or
sub
outsb
and
pop
inc
pusha
in
jp
sub
ret
push
cltd
jnp
add
pop
notl
push
fwait
mov
outsl
in
std
movsb
dec
mov
out
rcl
lock
sub
mov
or
mov
sub
inc
popa
adc
adc
or
sub
iret
sbb
or
shlb
mov
xchg
jnp
pop
aaa
shll
push
xchg
dec
adc
dec
add
fs
push
sub
pop
dec
cmpsb
scas
mov
pop
pop
push
repnz
push
xorl
pop
mov
cltd
push
or
fstp
shll
push
push
clts
xlat
cmpsl
mov
aad
loopne
xor
xor
xchg
xchg
ficoml
prefetchw
ret
adc
dec
push
push
mov
jmp
mov
xchg
push
push
imulb
movb
adcl
push
enter
jo,pt
lahf
pushf
adc
cmp
loope
inc
outsl
movsl
int
dec
popf
sbb
mov
sar
push
sahf
and
add
idivb
push
add
lea
popf
pushf
shl
mov
lahf
and
call
lea
xchg
in
cld
sub
or
adc
cmp
xchg
js
dec
pcmpgtb
inc
out
adc
xlat
sub
xchg
jge
movsl
cli
lcall
pop
adc
xchg
stc
cmp
stos
out
xor
fwait
push
test
mov
addl
xchg
or
scas
mov
ja
mov
adc
xchg
imul
mov
mov
int3
test
popf
xchg
iret
pop
test
cmp
mov
xlat
sbb
dec
sahf
push
inc
jl
cld
mov
adc
xchg
inc
in
jnp
sarb
adc
cld
inc
add
push
popf
mov
or
push
in
sub
popl
int3
mov
push
lahf
lret
mov
add
mov
adc
inc
inc
addr16
pop
movsb
ljmp
fstl
jne
test
pop
imul
adc
repz
fwait
mov
pop
jg
fldcw
xchg
jo
aad
sub
cmpsb
cwtl
in
cmp
sbb
sub
lret
xor
aaa
or
scas
mov
leave
stos
mov
imul
movsb
lock
mov
int
shlb
jo
mov
jge
xchg
xor
xchg
pop
add
jnp
add
out
sub
pop
cmp
or
jl
cmp
add
push
and
fdivs
or
test
loop
loopne
aad
pop
dec
cmpsl
cld
imul
icebp
xor
and
popf
pop
mov
xchg
inc
pop
je
mov
sbb
add
or
xchg
and
pop
fbstp
xchg
cmp
push
or
aaa
mov
and
sub
inc
or
das
call
jecxz
xlat
loope
xchg
clc
adc
inc
popf
ficoms
sahf
int
das
pop
repnz
icebp
js
xchg
cmp
jecxz
xor
mov
js
shlb
xchg
mov
bound
or
inc
dec
jne
push
add
and
sub
sub
mov
jmp
out
cli
xchg
test
ficompl
xor
ljmp
pop
stc
cmp
pop
mov
rorb
dec
hlt
subb
shrb
sidtl
inc
xchg
pop
out
xor
fwait
cmc
mov
fdivr
insl
sahf
or
lahf
pop
das
and
sub
faddl
rolb
and
daa
out
or
mov
mov
dec
pop
adc
cmc
push
sub
push
mov
jmp
rcrb
cltd
stos
sub
xchg
cmp
in
daa
fiaddl
sti
xorl
ret
mov
mov
in
sub
push
xchg
push
out
out
mov
popf
pop
sub
icebp
push
pushf
inc
xchg
popf
dec
dec
outsl
fs
mov
xlat
popa
push
dec
dec
popf
cmp
sbb
jns
add
and
bound
xchg
jns
or
jle
pop
out
cmpsl
jl
cmpsl
lods
loope
sub
push
lret
inc
dec
js
js
ljmp
pop
mov
ds
clc
jge
push
mov
ss
cmp
outsb
fsubrs
cmc
outsl
rol
test
and
dec
in
mov
scas
out
jp
add
and
je
pop
aas
xor
cmpsl
push
sar
dec
sub
mov
aaa
ja
sahf
lods
dec
mov
add
pop
aam
mov
jns
nop
pop
call
dec
and
cmp
loopne
scas
loopne
stc
stos
jae
out
add
sbb
mov
outsl
ljmp
iret
inc
in
cmc
inc
mov
jnp
jmp
fnstcw
jb
outsl
cmc
pop
jecxz
test
inc
lahf
xor
out
out
outsb
push
mov
loop
mov
movsl
mov
jns
cmpsl
addb
sub
sub
imul
aaa
sbb
pop
pop
adc
test
mov
lds
push
and
out
leave
mov
ljmp
cmp
mov
push
adc
insb
add
fmuls
pop
xor
inc
lcall
rol
mov
push
cmpsl
adc
ret
and
aas
arpl
inc
inc
fistpl
push
popa
adc
push
shr
cwtl
out
lds
pushf
and
enter
pop
insb
loopne
es
bound
sub
movsl
les
sub
push
jg
cmp
mov
push
int3
sub
pop
adc
pushf
push
iret
idivb
jns
push
mov
push
and
mov
jg
std
jne
mov
sbb
cmp
pop
es
xor
and
push
jo
insb
fmull
inc
shl
mov
lcall
xorb
pop
data16
push
pop
popf
aad
pop
nop
inc
dec
mov
repnz
jp
cld
or
push
jge
mov
les
aad
ror
and
repz
cmp
sbb
aas
fmull
xchg
movsb
and
jp
adcb
in
and
test
shll
hlt
mov
pop
cmp
jmp
dec
mov
and
dec
xchg
and
les
dec
push
pop
ficoms
movsl
or
in
mov
mov
dec
mov
insb
fmul
jl
and
cmp
add
inc
fcomps
cmpsl
mov
push
pusha
push
sbb
je
add
push
loope
sbb
mov
push
inc
std
xchg
test
sbb
inc
mov
sub
dec
push
xchg
push
cmp
sub
ljmp
shl
lahf
dec
dec
cmp
add
shrb
sbb
testl
jp
mov
cmpl
pop
fisubs
std
ret
jno
fs
int3
addr16
jno
jne
lods
fisttpll
inc
or
xchg
idiv
clc
lock
ljmp
repnz
data16
or
pop
aam
ja
mov
sbb
stos
jns
xor
cmp
mov
cmpsl
dec
mov
movsb
mov
xor
aaa
stos
scas
push
mov
cmp
or
call
adc
aad
xor
mov
push
jo
pop
cltd
xlat
mov
mov
sub
xor
movsb
mov
mov
mov
add
pop
adc
insl
push
xchg
leave
dec
mov
lret
mov
mov
mov
dec
mov
imulb
or
push
dec
pushf
pop
cltd
scas
add
mov
push
add
push
test
jne
push
cmpsb
call
jg
adc
xchg
ja
adc
xchg
popf
sub
out
or
jl
push
inc
in
or
orb
fiadds
mov
xchg
fmul
shrb
ss
sbbl
rorl
push
jo
dec
subl
sti
das
cmp
and
push
in
adc
mov
scas
fs
in
mov
cwtl
or
fistps
cld
push
or
loop
cmpsl
fcompl
sub
push
ret
ds
push
ljmp
sub
repz
inc
sbb
inc
ljmp
jg
pop
in
aad
arpl
aaa
sahf
in
loop
addb
bnd
lock
pop
dec
add
and
stc
push
mov
add
jl
adc
outsb
ja
hlt
pop
into
test
imulb
les
cmp
jns
dec
dec
and
jecxz
mov
fwait
movsb
and
pop
xor
je
hlt
jo
jo
movl
add
xchg
push
sbb
popf
jb
mov
push
int
jmp
mov
jb
lahf
test
push
jge
jnp
lods
mov
cmc
xchg
movsl
jae
ret
mov
aad
in
out
test
mov
out
in
divb
jne
jnp
movsl
or
cld
jecxz
pop
push
lea
sbb
repz
xlat
subl
lcall
std
dec
test
jae
test
jns
cmp
les
jnp
scas
adc
adc
pop
xchg
pop
mov
mov
fisubs
jno
stos
sarb
jg
xchg
cmp
xor
xchg
shl
and
push
sahf
movsb
dec
out
sub
ret
or
adc
mov
subl
movl
dec
mov
cmp
ret
push
or
popf
inc
daa
shll
cmpsb
xor
push
cwtl
outsl
sbb
sub
pop
sub
mov
inc
mov
and
call
pop
mov
xchg
pop
ret
push
clc
dec
inc
push
push
inc
inc
bound
mov
fsubrl
lahf
xor
cmp
arpl
lds
and
movsb
jnp
pop
gs
dec
jg
inc
ret
lea
dec
pop
aaa
mov
mov
nop
mov
iret
loopne
cwtl
jg
dec
aad
adc
loop
mov
call
les
test
stos
call
sub
in
mov
fnsave
ljmp
or
mov
dec
les
sub
cwtl
lock
push
pop
call
push
or
cli
mov
mov
sub
dec
lods
push
jae
mov
cmp
push
outsb
xor
repz
push
les
lds
lods
jb
pop
xchg
jns
mov
adc
cmc
fs
xchg
xor
inc
stos
es
int3
jno
push
xchg
lods
sbb
mov
sbb
aad
and
cmp
mov
push
mov
pop
daa
sbb
aas
xchg
mov
xchg
mov
sbb
mov
imul
add
flds
icebp
mov
xchg
inc
mov
lret
inc
jne
ret
push
push
int
stc
mov
test
mull
fimuls
bound
leave
dec
jecxz
outsl
cmp
popa
into
stos
xchg
inc
mov
ret
in
mov
and
mov
add
arpl
mov
mov
sub
leave
insb
inc
fs
js
in
mov
cmp
test
or
ja
jb
mov
mov
aaa
jno
mov
and
fisubrl
leave
enter
aaa
add
sub
add
in
fdiv
fwait
and
and
sbbb
push
int3
call
insl
outsb
mov
push
mov
or
aad
sti
aad
inc
or
dec
or
in
cmc
inc
ljmp
in
mov
cld
sub
lods
rcr
mov
idivl
outsb
es
repnz
and
mov
pop
sbb
mov
mov
rorb
xchg
push
inc
lock
mov
and
cs
mov
test
cmp
popa
adc
ds
push
data16
daa
aaa
iret
push
and
int
push
sarl
mov
push
xchg
sub
out
std
loope
adc
andb
jg
jb
jmp
inc
data16
dec
jnp
mov
push
sbb
sbb
dec
jecxz
push
test
fmul
mov
insl
mov
pop
cld
arpl
ja
xchg
push
int
inc
adc
jnp
push
jbe
mov
call
sahf
mov
es
jno
cmp
and
and
sbb
dec
js
and
push
cmp
scas
xchg
sub
pop
pop
jo
xor
mov
scas
lcall
dec
jbe
inc
test
adc
push
cmp
jge
jno
repnz
or
jg
daa
rol
sbb
pop
jle
dec
sub
mov
into
les
mov
aaa
push
daa
lahf
int
test
mulb
mov
mov
nop
pushl
fldenv
mov
sub
or
add
cmp
dec
sub
or
mov
or
mov
cld
fnstsw
push
cmc
mov
test
loope
test
fs
cltd
sub
xchg
or
lcall
aas
fcoms
scas
pandn
rcll
or
lahf
dec
sub
mov
std
test
sub
stc
into
mov
mov
jbe
imul
daa
jne
cltd
lock
dec
cmp
test
mov
sub
or
fxch
hlt
movsb
mov
cmp
cmp
enter
push
sbb
mov
sbb
outsb
xor
mov
dec
cmpsl
jb
sub
clc
shlb
std
pop
roll
xlat
popa
es
sbb
inc
mov
loope
or
mov
repnz
es
sbb
dec
lock
sbb
mov
sub
mov
scas
aad
and
xcrypt-ecb
cmpsl
int
popa
fs
pop
push
out
push
mov
push
dec
imul
out
adc
push
std
or
pusha
movsb
sub
sbb
in
pop
fidivrs
sahf
ja
aad
mov
out
stc
movsb
sbb
pop
negb
int
add
ljmp
add
in
mov
iret
loope
addr16
adc
cmp
sbb
es
shlb
ret
sti
ret
push
imul
cmp
js
les
cmpsb
or
lret
cmp
scas
pop
scas
fwait
dec
sbb
ret
les
jg
xchg
lock
add
cmp
movsb
mov
sti
mov
out
mov
js
jle
sbb
into
mov
xchg
sub
movsl
mov
and
mov
lods
cmp
push
jl
adc
xchg
lahf
mov
xor
movsl
rolb
je
bound
adcl
in
fnstenv
jg
jl
js
nop
adc
orl
outsl
sbb
jecxz
dec
cmpsb
rorb
mov
xor
pop
int3
rcrb
inc
lret
mov
mov
inc
fisubrl
adc
mov
mull
mov
std
jnp
or
or
movl
adc
inc
pusha
jge
and
cmc
pop
cmp
add
lea
sub
cmp
jecxz
pusha
roll
push
dec
inc
and
jbe
pop
test
jbe
mov
push
pop
push
cmp
and
cmp
xchg
or
jmp
inc
ret
arpl
xchg
pop
fwait
mov
roll
jnp
push
orl
and
rcrb
sub
cmp
xor
push
or
jno
out
jmp
orb
fnsave
repnz
dec
dec
xchg
inc
dec
rolb
int
and
movsb
xor
mov
sub
pop
out
sbb
mov
xchg
stos
push
test
ret
jp
aaa
mov
mov
bound
xchg
pusha
jnp
addl
xchg
sub
mov
cmp
mov
sbb
add
dec
pop
pop
pop
in
into
inc
mov
adc
loopne
add
mov
jae
shufps
pop
lcall
mov
in
mov
test
mov
mov
mov
xor
pop
xchg
push
pop
pop
mov
lds
pop
out
enter
push
jbe
fbstp
ret
jle
ja
push
lret
std
pop
push
sbb
cmpsb
pop
pop
jp
sti
cmc
dec
std
hlt
leave
jo
adc
aad
in
jo
cltd
jno
xchg
loope
popf
mov
std
rcll
icebp
aam
and
cmpb
insb
sbb
punpcklbw
cli
and
jnp
push
in
xchg
mov
fucom
jns
enter
pop
cmp
popf
fldt
jl
sub
and
adc
mov
sbb
movsl
std
sbb
sub
xorl
inc
icebp
call
lret
pop
adc
cwtl
orl
mov
mov
or
sarl
sbb
push
sub
pop
inc
repz
lds
sub
cmp
ja
ret
mov
stc
push
subl
lret
ja
jne
imul
push
pop
rcrb
xor
int3
jo
push
sbb
jbe
mov
and
scas
out
ret
dec
loopne
xor
dec
mov
inc
clc
ja
xchg
jecxz
arpl
movl
fcomip
jecxz
add
and
push
fwait
js
rcll
fcom
insl
push
mov
arpl
pushf
cli
push
jmp
push
adc
or
int3
xor
mov
or
or
or
call
fstpl
xor
std
sub
jmp
mov
push
adc
xchg
cld
cld
xchg
ss
fidivs
and
icebp
test
mov
inc
into
aad
push
xor
ds
xchg
mov
dec
loope
adc
hlt
pop
cmp
fnsave
cmp
sbb
adc
pop
cmp
adcb
jbe
stos
mov
test
pop
dec
popf
bound
sbb
out
dec
movsb
jno
push
ss
mov
and
xor
or
cmp
or
stc
and
stos
inc
inc
fstps
dec
push
ljmp
scas
sub
sub
lcall
test
in
xchg
add
push
bound
xchg
pop
ret
push
cmp
pop
fidivrl
push
cltd
xchg
inc
push
lahf
pop
in
mov
idivl
int
daa
dec
mov
and
or
orl
pop
mov
aam
jmp
pop
enter
and
lods
hlt
test
pushf
aam
ljmp
scas
or
sub
jmp
into
divl
sahf
add
insl
fisubs
pop
add
lahf
mov
lcall
sub
sbb
in
aaa
add
push
ljmp
insl
sbb
lahf
mov
or
adc
xor
mov
xor
inc
shrl
cmp
clc
xchg
dec
sbbl
pop
movsl
adcl
sbb
dec
xchg
repz
ljmp
sub
mov
fcoml
nop
pop
xchg
and
ret
adc
add
push
fisubrl
and
cli
sar
pop
mov
push
test
testb
pop
repz
xor
mov
mov
orb
dec
jno
shlb
pop
adcl
or
cmp
add
in
xor
scas
test
mov
adc
mov
js
fistpll
jl
cmc
dec
lea
jnp
subb
movsb
jge
jbe
mov
orl
stos
stc
outsb
lret
or
jmp
out
push
jle
cmp
stos
mov
sbb
sub
dec
fisttpll
jge
cmpsl
cmpsl
sub
mov
inc
daa
scas
push
fnsave
mov
pop
sbb
in
xchg
orl
add
arpl
mov
mov
sbb
loope
iret
leave
dec
cmp
fldln2
mov
stos
or
loop
jne
rcrl
inc
push
test
out
mov
icebp
mov
pop
xor
mov
imul
and
jne
sbb
pop
mov
call
pop
bound
inc
mov
mulb
cmp
in
aas
nop
mov
xor
mov
repz
stos
inc
iret
movsl
dec
push
cltd
outsl
pushl
mov
mov
sub
lret
idivb
xor
xchg
mov
lock
test
cmp
cmp
and
insl
mov
jae
mov
stos
jl
push
jmp
add
cmp
sub
fucomi
sbb
test
aam
lret
mov
leave
push
mov
mov
cmp
popf
sahf
stos
lds
lods
sahf
jecxz
add
stos
or
fmulp
mov
cwtl
sbb
dec
faddl
out
jne
out
cmp
push
pop
andb
lods
sbb
dec
pop
mov
dec
cmp
xor
push
mov
pop
daa
cmc
and
cwtl
cmp
push
sub
in
inc
pop
push
mov
sbb
sub
adc
mov
les
mov
jo
vmovhpd
sub
lods
adc
in
rolb
lds
popa
movsl
push
xchg
inc
test
push
addl
adc
and
adc
add
jno
popa
movsl
push
xchg
inc
test
push
addl
adc
and
adc
add
jno
popa
into
push
xchg
inc
test
push
orl
lock
adc
test
popa
movsl
rcll
pop
iret
cmp
xor
insl
jge,pt
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
imull
lcall
mov
je
cmp
inc
sbb
push
jp
dec
pop
pop
imull
lcall
xchg
push
or
aaa
push
es
dec
pop
pop
imull
lcall
xchg
ja
inc
sbb
js
jnp
ds
sub
sbb
repz
loop
lcall
or
mov
ret
inc
bound
roll
stc
sbb
sub
cmp
mov
cmpsl
jg
ret
lret
pop
ljmp
push
mov
dec
push
or
stos
lea
loop
jne
pop
cmp
mov
push
ret
jg
jp
iret
pop
loop
out
rcrb
dec
pop
sti
into
mov
ljmp
push
test
inc
mov
fisubs
push
fidivrl
pop
dec
bound
cli
jbe
outsl
jbe
cmc
int3
push
cmp
dec
pop
movsb
lret
das
pop
aaa
in
lcall
xor
xchg
lahf
xor
and
repnz
sub
dec
add
mov
mov
cmpsl
cli
xchg
lret
ja
cmp
inc
sbb
push
jp
dec
pop
xor
mov
xchg
clc
mov
mov
push
add
and
add
sub
jb
ja
or
xchg
shlb
add
pop
inc
jg
add
jnp
sbb
xor
xchg
clc
mov
cli
xchg
lret
ja
cmp
inc
sbb
push
jp
dec
pop
pop
imull
lcall
xchg
ja
cmp
inc
sbb
push
jp
dec
pop
pop
imull
mov
addr16
cmp
pop
imul
and
icebp
sbb
dec
or
push
aas
mov
insb
adc
inc
add
popa
push
imul
pop
les
les
inc
pushf
push
dec
or
jbe
sub
sub
add
hlt
addl
imul
icebp
dec
inc
popa
sub
dec
rolb
addr16
loope
pop
mov
hlt
lret
popa
divl
fnstcw
ja
adc
sbb
insb
inc
gs
mov
subb
and
data16
stos
dec
sbb
inc
sbbb
sbb
repz
adc
and
adc
jp
lods
movsb
push
adcb
scas
mul
sbbb
fimull
fisubl
add
jge
aaa
pop
arpl
imul
out
repnz
loope
xchg
cmp
inc
shll
mov
xor
and
add
cmp
popa
jge
xchg
nop
cmpsb
or
mov
push
or
movsb
jne
add
inc
push
cmp
dec
sahf
jp
and
mov
adc
call
jb
push
mov
fadds
fnstenv
inc
ror
sbb
lods
xor
sbb
add
push
mov
cwtl
pusha
mov
int
mov
aas
lods
and
cmp
bound
cmpsl
in
fwait
repnz
push
cmpsl
push
movsb
gs
sbb
xor
stos
sub
xor
out
aaa
sbb
mov
xchg
icebp
imul
loopne
in
mov
les
xor
das
push
dec
xchg
testl
lock
mov
mov
les
rcl
sub
and
jae
jne
xor
mov
stos
push
push
fdivrp
test
lds
cld
or
sti
or
or
sbb
push
lahf
mov
mov
mov
fldenv
mov
adc
imulb
lahf
cltd
mov
lea
sbb
in
stos
test
fwait
stos
orb
mov
dec
add
repnz
fpatan
pop
sub
aam
ljmp
xchg
or
adc
dec
pop
sbb
rcll
sub
and
mov
inc
xchg
jmp
mov
pop
orl
ficoms
and
jge
fwait
insl
dec
add
ret
sub
push
outsb
xor
sub
push
sarb
cmp
shrb
loopne
inc
hlt
int
ret
test
mov
bound
popl
push
movsl
out
sti
lock
lret
adcl
les
test
lods
sub
lret
dec
xchg
jmp
cwtl
xchg
and
pop
lods
pop
xor
add
add
dec
sti
roll
pop
pop
das
bound
jno
cmc
sahf
inc
sti
out
pop
push
in
mov
mov
imul
ja
leave
test
add
dec
dec
xchg
lret
mov
frstor
and
andb
int
int
outsb
test
jg
jmp
xor
or
or
stos
in
inc
mov
fisubs
sub
bound
sub
int
out
jo
loopne
cli
mov
xor
xchg
pop
and
int3
pushf
lcall
gs
push
inc
cmp
xchg
cmp
dec
mov
imul
inc
sahf
mov
dec
cltd
mov
int3
rolb
push
sbb
movsb
test
dec
out
jne
jae
shll
or
jns
push
pop
test
jns
popa
add
sbb
jle
pop
imul
popf
aaa
lahf
mov
fwait
sbb
xor
inc
inc
fs
fdivrs
and
jecxz
sub
pop
mov
lret
mov
adc
aas
ja
jl
les
fwait
nop
test
sti
cli
mov
lea
addr16
mov
mov
pop
add
xchg
sbb
lahf
push
or
lcall
fsubp
fwait
je
mov
insl
sbb
inc
fwait
notl
xor
add
movsl
add
cmp
and
cltd
mov
stos
fcomip
xchg
mov
lea
mov
cld
stos
xchg
subl
or
js
fucom
daa
dec
cmp
xor
jo
cmp
dec
push
cmp
cmpsl
das
mov
and
cmpsl
jbe
addb
inc
sbb
mov
je
sbb
dec
xor
dec
popf
or
xlat
les
mov
lods
mov
dec
cld
movsl
inc
cmp
dec
or
adc
adc
pop
jnp
movsb
ss
enter
scas
or
stos
pop
fistpl
lock
add
sti
jne
jo
dec
cmp
test
pause
out
rorl
jg
lret
push
test
mov
pop
sub
cmp
rcll
popa
jo
inc
sti
imul
push
cwtl
jnp
dec
xchg
inc
xorb
ss
jne
loope,pt
cmp
mov
cmc
jp
cmp
jecxz
insb
das
dec
add
xchg
pushf
push
orl
and
pushf
or
sbb
in
fiadds
cmp
or
das
fimuls
lock
mov
mov
sub
enter
adc
or
clc
jns
dec
cmp
pop
fdivl
fstpl
mov
test
cmpsb
mov
jo
add
divl
dec
out
xor
adc
clc
lds
testb
jp
je
and
mov
enter
aas
fdiv
cmpsb
cmp
iret
fnstenv
rol
xchg
add
shll
insb
mov
enter
imul
pop
insl
shl
mov
xchg
adc
jo
jle
xchg
imul
cmp
dec
loop
inc
inc
dec
mov
lods
mov
rorl
out
adc
xor
pcmpgtw
mov
cmp
lds
sbb
dec
gs
repnz
xchg
cmp
dec
pop
stos
sub
push
out
xchg
pop
cmc
hlt
imul
movsl
stos
fidivrs
out
mov
and
call
inc
pusha
stos
popa
mov
js
mov
mov
jno
testb
add
push
test
cmc
xchg
daa
fyl2xp1
jns
inc
mov
dec
lcall
xchg
jns
adc
push
orb
notl
cltd
popa
inc
sub
mov
add
xchg
rcrb
jmp
out
mov
movsb
movsb
pop
rcr
or
sbbl
dec
lods
ss
xchg
pop
stos
mov
inc
cmpsl
stc
mov
jmp
xor
push
cmp
jnp
dec
lods
cmp
out
mov
inc
add
pop
inc
test
mov
pop
inc
sbb
fwait
jnp
pop
movsb
sub
lea
dec
jle
mov
arpl
out
cmc
push
push
xchg
dec
dec
fsubrl
add
or
lock
scas
push
rcrb
rcrb
push
mov
popf
cmpl
cmp
mov
add
call
push
imul
add
movsl
mov
xchg
sbb
or
out
mov
fidivrs
push
das
aam
xchg
dec
inc
sub
and
add
loope
popf
inc
jg
or
push
add
cmpsl
mov
in
pop
dec
aaa
inc
jne
cli
or
xchg
ret
mov
cwtl
imul
ret
shrl
test
inc
xor
sub
mov
xor
js
movsb
sub
pop
ja
push
rcrb
mov
mov
rcrb
popa
inc
lcall
sbb
xchg
inc
pop
or
xchg
sub
sub
fwait
js
jl
inc
add
mov
push
add
ret
testb
cmp
outsb
mov
cmp
and
or
enter
pop
inc
pop
sti
push
shlb
push
sub
cmpsl
test
xchg
dec
push
sub
push
rclb
push
fwait
scas
mov
fidivrs
mov
xor
cmpb
push
dec
adc
fs
mov
pop
lock
daa
loopne
mov
jecxz
mov
arpl
push
rep
push
movsb
test
ds
sbb
cmp
rcrl
into
mull
push
dec
test
stc
loope
iret
xchg
mov
cmp
cmp
mov
test
jmp
cmp
fisubrl
or
xchg
jo
test
dec
arpl
push
fbstp
lret
data16
jg
mov
cmpsb
cs
subb
mov
cmpsb
add
fisubrl
scas
jle
imul
cltd
shlb
je
idivb
mov
icebp
fldenv
cltd
pop
je
arpl
popa
daa
jmp
push
cld
push
cwtl
dec
cli
hlt
cs
cmp
adc
stos
sub
call
loop
test
cmp
into
xor
lea
jecxz
mov
xchg
push
and
addb
cltd
fwait
pop
inc
lock
ror
xchg
dec
xor
repz
ret
mov
add
movsb
and
dec
in
stc
xchg
loope
pop
push
and
jle
test
les
hlt
and
shl
sbb
pop
lods
lahf
or
cltd
pop
sbb
mov
cli
movsb
cmp
gs
fimuls
std
cld
or
sbb
adc
gs
mov
lret
add
sar
mov
add
aaa
jl
pop
xchg
out
sbb
mov
dec
data16
add
cwtl
and
or
outsl
push
xchg
out
dec
scas
imul
mov
cmpsb
aad
push
mov
xchg
sub
pop
loope
shl
jmp
mov
cmp
or
out
or
outsb
or
xor
jecxz
inc
lret
or
sahf
inc
sti
leave
push
push
ss
daa
add
fdivrs
mov
loope
dec
push
push
jge
push
jmp
lahf
fnstcw
mov
adc
sbb
rcll
lret
lcall
mov
mov
aas
dec
xchg
xor
pop
popf
test
jmp
aaa
sub
test
and
enter
sub
or
dec
cltd
mov
aas
inc
in
aad
sbb
adc
rolb
add
sbb
jmp
add
pop
sub
xchg
and
mov
mov
xor
popa
mull
addr16
add
dec
push
pop
mov
or
or
dec
jmp
pop
and
icebp
testb
sub
stos
mov
mov
xchg
or
shrl
decb
dec
push
sbb
mov
adc
mov
push
xchg
lds
test
xlat
push
repz
xchg
mov
bound
adc
cs
insl
jg
sbb
xchg
pop
adc
jbe
cli
lahf
mov
and
pop
pop
ror
sbb
std
adc
dec
clc
loop
pop
ds
pop
mov
add
mov
hlt
mov
adcb
push
fst
fidivs
or
movsl
fsub
xchg
inc
incl
cmpsl
mov
adc
cmp
aad
out
pop
mov
out
arpl
mov
int
mov
jg
es
mov
mov
out
sbb
ja
cmpsl
ss
cmpsl
sub
xchg
xchg
stc
roll
cwtl
cld
jge
clc
lret
lds
sbb
mov
adcl
test
mov
xor
pop
xchg
add
aas
cmp
outsl
fisubrl
addr16
mov
insb
add
pushf
mov
aad
outsb
in
xor
lahf
test
lock
sbb
dec
mov
xchg
cmp
loope
sbb
xchg
daa
pop
mov
in
and
mov
mov
xor
xor
fcompl
aaa
jmp
push
js
mov
insl
or
xorb
dec
mov
pop
and
or
mov
pusha
mov
rcrb
cs
mov
fwait
sub
lret
mov
push
mov
ret
ds
ljmp
jns
cmpb
or
xchg
xchg
enter
inc
outsb
xor
stc
mov
mov
sub
mov
psubq
add
imul
loopew
into
ss
int3
mov
ljmp
ret
add
mov
mov
repnz
mov
push
jl
ja
iret
fsts
pop
adc
stc
scas
out
push
cmc
cwtl
mov
fsub
lods
mov
fsubl
pop
mov
xchg
mov
cmp
sub
dec
out
pushf
cltd
push
xchg
jo
popf
or
pop
xchg
lds
js
jbe
out
lret
inc
xchg
mov
lret
jp
imul
sbb
or
push
mov
xchg
scas
inc
bound
cli
ds
and
int
lcall
adc
inc
mov
aam
imul
ss
xchg
pop
xor
sbb
mov
sub
mov
push
fistps
mov
mov
push
mov
movsl
lds
sbb
xor
adc
sbb
xor
push
jae
cmp
ja
loop
rol
add
outsl
decl
mov
clc
mov
subb
mov
push
mov
push
jl
mov
sbb
roll
push
lcall
adc
mov
jnp
push
mov
inc
mov
adc
daa
and
mov
pop
xor
adc
sbb
test
pop
jmp
add
pop
sub
xchg
lds
jge
push
mov
into
stc
pop
pop
aad
or
xlat
jp
xor
call
dec
or
das
mov
rcl
lods
or
jns
shrb
int
push
movsb
inc
mov
adc
jmp
add
dec
jno
lahf
out
mov
pop
fsqrt
add
outsl
mov
adc
jecxz
mov
leave
cmp
js
js
mov
sub
lret
ret
push
jle
push
inc
push
jmp
mov
pop
xchg
sbb
pop
ret
scas
inc
dec
cmpl
fsubrs
sub
lock
push
leave
mov
hlt
stos
rol
push
call
je
xor
add
jns
mov
insl
pop
outsb
cmp
jmp
sbb
cmp
iret
ja
cmp
mulb
jp
cmp
test
xchg
mov
xchg
jmp
xchg
cmpl
aas
pop
mov
js
fadd
lock
popa
imul
and
cmp
push
xor
push
dec
enter
sub
adc
add
xor
mov
cmp
push
divl
xchg
mov
mov
les
or
dec
cmp
cmpsb
negl
push
mov
push
test
arpl
xchg
sbb
fsubl
and
mov
pop
push
pop
dec
and
xor
inc
or
mov
sahf
aas
pop
ljmp
adc
shll
clc
xchg
adc
push
leave
movsbl
mov
xchg
xchg
scas
push
push
outsl
cmp
mov
pop
sahf
jnp
adc
xchg
dec
in
xor
daa
cmp
mov
pop
xchg
mov
sub
mov
adc
push
std
push
add
mov
push
lret
sbb
movsb
jp
mov
mov
inc
loope
scas
sbb
push
xchg
lds
lods
or
jne
xchg
push
pop
adc
and
sub
adc
sbb
dec
adc
cmc
jo
test
gs
out
iret
imul
rcrb
xor
mov
pop
sub
gs
mov
cmpsb
les
jle
add
lcall
sub
mov
call
or
pop
mov
cwtl
jle
movsl
xchg
lret
mov
ds
bsf
lcall
push
popa
mov
sbb
roll
adc
or
push
pop
jo
in
mov
jns
push
subl
or
pop
mov
and
movsb
cmp
pop
cld
divb
mov
rcll
dec
adc
push
mov
mov
adcb
rcll
daa
int3
jnp
sbb
mov
test
xor
jbe
aaa
pop
push
rcrb
cltd
pop
cmp
xor
lea
jne
push
push
pushf
cmpsb
push
shrb
dec
imul
sub
xor
pop
fcmovbe
xchg
push
or
mov
fiaddl
dec
xlat
insb
dec
xchg
sbb
jbe
cmp
jmp
push
iret
sub
pop
mov
clc
jno
rorl
xor
and
test
mov
iret
jno
adc
lret
out
in
outsl
pop
das
push
inc
xchg
mov
xor
inc
aaa
ret
adcb
mov
mov
rolb
mov
into
loop
cmp
iret
test
cmp
mov
nop
mov
and
scas
inc
in
ret
cmp
subps
sbb
inc
je
dec
inc
imul
jnp
mov
push
push
rol
xlat
push
or
push
dec
loope
fidivrs
mov
push
fisubl
scas
out
mov
test
repz
lahf
push
dec
lds
mov
mov
dec
pop
inc
cmp
push
popf
test
jbe
inc
xchg
daa
js
and
xchg
pop
clc
and
add
xor
sbb
cmp
iret
inc
push
loop
ss
xchg
sets
jbe
shr
aad
aas
pusha
sarl
sub
scas
test
dec
push
std
push
jl
popf
mov
cmp
rorb
jne
adc
cmpsb
test
rorl
and
add
dec
icebp
lcall
ss
mov
cld
sub
pop
or
inc
scas
std
dec
push
sbb
xlat
clc
leave
jecxz
dec
outsl
mov
jle
int3
lock
cwtl
fwait
pop
push
std
cmp
enter
loope
jmp
jge
fisttpl
xor
ror
lods
sub
imul
cmp
in
jns
adc
popa
adc
pop
gs
movsb
icebp
addr16
loopne
cmp
dec
icebp
shrl
test
push
xor
ss
cmp
jae
mov
or
dec
and
scas
adc
mov
aas
lcall
cld
xor
xchg
repnz
out
les
jno
adcb
mov
lea
adc
js
out
inc
loopne
fsubrs
pop
mov
mov
hlt
jge
dec
add
stos
aas
add
mov
fstpl
mov
jo
int3
sti
push
dec
inc
pop
inc
outsl
sahf
mov
dec
fimull
clc
push
lock
sub
mov
dec
jle
xchg
jp
adc
outsb
js
into
mov
test
insb
dec
mov
out
and
repz
mov
xor
es
out
or
adc
adc
xorb
mov
cmpsb
ss
dec
push
mov
ds
mov
or
arpl
xchg
fstps
push
repz
imul
push
cmp
mov
push
roll
and
scas
stc
leave
and
push
cmp
cwtl
xor
xchg
push
inc
adc
shr
loope
leave
fnstsw
or
jbe
or
in
dec
inc
es
inc
repnz
or
xor
inc
mov
xor
mov
lods
sub
jae
xchg
cmp
lcall
mov
add
out
sub
ffree
mov
pusha
push
test
ja
push
leave
stc
sbb
cmp
lahf
iret
jle
aad
jne
les
jmp
sub
pushf
pusha
push
and
cmp
cmpsb
mov
push
jo
lods
pop
jne
imul
mov
aaa
push
popf
add
mov
pop
cmpsb
mov
mov
bound
jno
or
mov
jbe
mov
xor
mov
push
dec
xchg
insl
sbb
add
cmp
sbbb
sahf
adc
inc
sarb
lock
das
cmc
add
mov
mov
adc
fisttpl
gs
pop
je
cmp
push
addr16
sahf
pop
dec
sbbl
aaa
jns
inc
jns
mov
sub
inc
add
xchg
mov
std
and
ror
mov
lret
cmpsl
dec
stos
inc
je
mov
cld
inc
push
sbb
jp
and
movsb
pop
cmp
mov
ljmp
addb
les
jecxz
mov
jo
enter
push
pop
outsb
xor
push
sbb
add
int3
mov
aad
inc
mov
xorb
shll
jle
push
loop
sbb
int3
sbb
add
push
inc
mov
inc
mov
sahf
adc
pop
xchg
add
jb
hlt
cli
movsb
add
mov
int3
daa
cmpsl
out
rorb
sub
jnp
add
adc
adc
rcl
aam
jecxz
testl
cmpsl
in
in
inc
lds
pop
jge
jnp
je
push
addb
fnstsw
mov
cmpsl
cli
xchg
lret
ja
cmp
inc
sbb
push
jp
dec
pop
pop
imull
lcall
xchg
ja
cmp
inc
sbb
push
jp
dec
pop
pop
imull
lcall
xchg
jbe
cmp
inc
sbb
push
jp
dec
pop
pop
imull
lcall
pop
fimull
or
inc
loop
test
mov
movsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
mov
in
mov
xchg
lods
sbb
ds
jge,pn
insb
push
sbb
pop
sub
fdivrl
in
mov
lods
into
pop
ds
dec
sbb
jle
outsb
cmp
sub
fdivrl
in
mov
lods
into
pop
xchg
dec
cs
cmp
sbb
inc
dec
lods
mov
mov
or
frstor
cmp
in
push
cmpsl
mov
clc
lods
jno
jge
adc
fcomp
mov
mov
and
or
xorb
pop
pop
out
mov
cwtl
jae
aas
aaa
sahf
fldenv
pop
ret
sbb
sub
xchg
repz
mov
int3
sub
pushf
jmp
xor
inc
jge
test
adc
xchg
sub
es
and
push
scas
sbb
jno
incl
xor
cmp
loope
into
dec
outsb
fs
mov
sub
push
jbe
imul
stos
push
mov
push
loope
push
dec
sub
scas
cld
sahf
in
mov
lods
into
pop
ds
jl,pn
insb
push
sbb
or
cmp
sub
test
mov
fists
leave
sahf
xor
pop
adc
dec
push
pop
pop
jae
sahf
movsb
cld
stc
mov
mov
and
jg
popa
push
sbb
xor
stos
mul
std
lahf
test
mov
mov
ds
jl,pn
insb
push
sbb
or
cmp
sub
fdivrl
in
mov
lods
into
pop
ds
jl,pn
insb
push
sbb
or
cmp
sub
fdivrl
mov
pop
add
in
and
fisubl
push
and
mov
test
sub
test
mov
cwtl
fsubrl
dec
inc
xchg
dec
aam
xchg
stc
stos
lahf
jae
add
mov
push
loop
dec
sti
scas
repz
and
jbe
movsl
mov
fnsave
icebp
and
or
sub
lds
or
pop
inc
jne
jne
xchg
cmp
je
repz
nop
xchg
dec
jle
lret
das
sub
push
mov
insb
xchg
pop
mov
jbe
int3
mul
sarb
adc
mov
push
inc
push
insb
mov
mov
daa
sahf
out
iret
xor
inc
repnz
dec
push
or
sbb
pop
outsb
pop
jmp
sarb
dec
fcoml
push
test
hlt
xor
lods
out
jns
pop
inc
rcr
mov
jge
sbb
test
popa
xchg
ja
add
push
jnp
movsl
out
add
test
sbb
pusha
sarl
mov
dec
cmp
jmp
int
cli
inc
cld
into
cli
stc
test
or
out
dec
sub
in
xor
insl
in
in
mov
pop
cmc
inc
out
shll
ret
fwait
lock
insb
sti
repnz
mov
xchg
data16
lock
push
pop
fsubs
pusha
jae
fisubrl
jmp
mov
in
jle
lods
mov
pop
mov
xor
scas
es
es
adc
or
inc
clc
jmp
out
mov
call
loope
pusha
mov
out
sbb
shlb
pop
leave
xchg
jge
dec
xchg
jns
xor
rorl
sti
fimuls
jge
shrb
pop
fwait
lods
xlat
rcrb
sub
ss
jmp
xchg
movsb
stos
pusha
shll
mov
lret
add
mov
ficoms
mov
adc
xlat
add
fwait
or
sub
incl
add
je
enter
pusha
jg
loope
mov
call
inc
cmpsl
mov
mov
ret
ret
pop
pop
sbb
ss
push
dec
and
cltd
into
ja
cmp
push
and
shlb
filds
xchg
inc
xlat
int3
xor
lea
dec
pop
jecxz
mov
cwtl
int3
adcl
add
leave
pop
sbb
mov
loopne
and
xor
jge
adc
sahf
out
imul
pushf
push
add
xlat
jno
pushf
and
inc
lahf
std
push
dec
test
fiadds
adc
mov
fldcw
cmp
mov
lock
mov
xchg
mov
push
popa
pop
popf
mov
xchg
ja
lret
add
cld
pop
push
mov
mov
sbb
scas
fstp
lock
movsl
out
ret
push
fisubrl
inc
aam
pushf
mov
lret
and
add
dec
lods
inc
push
dec
cmp
repnz
or
mov
mov
jl
mov
jge
jo
ror
mov
pop
jg
dec
int
jl
rclb
xchg
sub
or
adc
sti
ljmp
loop
dec
mov
pop
and
das
les
mov
mov
sbbb
sti
mov
loopne
mov
inc
add
out
out
in
push
repz
popf
push
sahf
mov
je
xchg
push
dec
div
daa
ja
mov
xchg
daa
out
jmp
je
sub
je
xchg
les
dec
test
add
ret
popf
into
add
and
fldt
ss
ret
add
out
pop
jle
roll
dec
daa
jmp
inc
inc
pop
cmpsl
mov
sub
jle
cmp
movsl
dec
bswap
scas
insl
inc
adc
ja
popa
movsb
inc
mov
outsb
shll
lock
ds
fisubrs
xlat
push
cmp
and
push
cmpsl
mull
sub
fistl
jo
push
fsubrs
pop
jo
push
clc
add
pop
out
dec
push
mov
lods
xor
fs
cmp
cmp
mov
cmp
xchg
nop
das
mov
in
or
loopne
add
xor
or
cwtl
lds
inc
imul
ret
pop
fs
out
mov
inc
add
and
mov
cmp
fcmovne
sti
pop
xor
xchg
inc
out
or
pop
or
sarl
cmpsl
dec
xlat
rclb
push
in
js
sbb
xchg
xchg
aas
xchg
xchg
cmp
cmp
movsb
mov
fwait
pop
jle
or
mov
mov
xchg
inc
adc
or
xor
cli
nop
or
inc
lea
lds
dec
mov
mov
mov
pusha
inc
out
jnp
sub
push
in
js
xchg
mov
sbb
popf
adc
mov
mov
imul
add
push
and
lods
in
mov
and
jo
and
insl
imul
testb
adc
jno
neg
decb
in
sbb
mov
aas
ret
mov
xchg
sub
sub
outsb
daa
arpl
sub
xchg
pop
int3
jbe
iret
call
jl
lock
std
and
sahf
lods
adc
push
mov
or
imul
adc
imul
jns
aas
lods
sub
xchg
enter
xchg
std
mov
jl
shlb
fucomi
or
cwtl
xchg
shl
push
or
addb
mov
sub
push
cmp
fnstsw
rorl
cmp
ljmp
out
je
cmpsb
xchg
push
jecxz
cmp
shrl
push
iret
sub
hlt
mov
or
popf
inc
cmp
out
scas
insb
or
test
mov
push
jnp
mov
ljmp
lcall
aas
int3
mov
xchg
iret
shl
lret
sbb
es
fs
loope
pop
sbb
cld
test
mov
clc
cmp
or
dec
mov
jecxz
mov
std
add
movsb
sub
cmp
jl
enter
sub
int3
aam
pop
loopne
adc
lret
repnz
sbb
movsb
push
aad
jb
mov
shll
xchg
jge
xor
pop
pushaw
sbb
loop
data16
imul
outsb
or
inc
mov
leave
dec
jb
sub
xchg
or
adc
lahf
sbbb
popa
or
js
sarb
mov
jno
sbb
dec
test
push
icebp
ror
cwtl
ljmp
imul
call
dec
dec
nop
pushl
je
cwtl
add
out
sub
mov
cmp
pop
js
ds
jg
lret
movsl
jg
sbb
test
jno
aaa
cmpb
les
in
sub
push
in
insb
ja
lahf
adc
or
aas
sahf
mov
mov
or
jns
pushf
xor
mov
push
push
in
or
outsb
lcall
pop
inc
jg
lods
loope
shrb
cmp
dec
xchg
or
pop
and
int
ja
jae
add
jp
subl
fs
movsb
leave
shrl
imul
cld
pop
cmp
pushf
scas
ret
or
xorl
insl
subb
decl
xor
xchg
jle
jno
repz
sbb
insb
icebp
popa
icebp
mov
je
mov
sbb
cmc
mov
stos
mov
repnz
inc
aam
test
push
xchg
jl
push
cmpsl
test
sbb
lds
dec
mov
push
mov
mov
jg
pop
push
lret
ljmp
adc
addr16
stc
or
inc
adc
cmpsl
les
jmp
push
aad
in
outsl
cld
aas
fbstp
test
push
jnp
pop
iret
cwtl
jno
sub
idivl
sub
stos
in
jecxz
add
inc
dec
mov
xor
call
jge
clc
add
push
add
and
aaa
mov
sbb
idivb
push
scas
mov
nop
int
mov
mov
and
xchg
stos
dec
test
cmpsb
inc
mov
cmp
sahf
es
gs
inc
mov
cmp
mov
or
lret
push
xor
stc
pop
fildll
decl
jge
push
sub
add
cld
call
jbe
mov
cmpsb
pop
inc
idivb
jns
out
loop
movsl
sbb
popa
mov
not
push
les
xor
loope
icebp
dec
enter
clc
cmp
inc
jmp
in
je
inc
inc
adc
fmul
or
xchg
inc
daa
loopne
es
int3
xor
out
push
iret
fsubp
decl
sub
imul
mov
jp
pusha
mov
cmc
outsb
out
pop
rcr
mov
push
scas
mov
push
lret
imulb
testl
cmc
mov
aam
decb
rcll
mov
clc
clc
pop
or
arpl
fldcw
sbb
pop
xchg
cmp
dec
cmp
push
mov
jno
push
pop
push
out
xchg
push
or
nop
cmpsb
jl
int3
idiv
add
in
add
out
dec
lock
mov
out
inc
mov
inc
add
lret
imul
xchg
add
into
jle
dec
outsl
add
sbb
mov
mov
or
ja
cli
jle
imul
add
push
ffree
xor
nop
out
add
or
in
adc
push
sbb
in
mov
adc
push
sbb
ja
mov
mov
sub
cmpsl
cwtl
jle
jo
fsts
movsb
inc
sbb
int
shl
jbe
push
add
mov
ds
cmc
clc
int3
push
ficoml
cmp
call
dec
pop
sbb
out
outsb
scas
push
rorb
lret
into
xor
inc
sbb
loope
and
or
dec
xorb
push
cmp
mov
popf
nopl
jmp
push
lods
cs
mov
push
inc
jbe
sub
inc
dec
jmp
cli
add
xor
pop
out
sbb
loope
xchg
push
out
rcrl
fs
ret
out
mov
movsb
scas
inc
lock
iret
sbb
out
es
cmc
scas
icebp
adc
fsqrt
xchg
push
je
fiaddl
fcoms
cmpsb
js
xchg
mov
les
cmpsl
data16
or
xchg
lcall
or
or
or
jne
mov
xrelease
and
cld
fdivr
loopne
xchg
out
das
iret
push
mov
sti
lahf
jmp
mov
add
add
iret
jns
pop
into
dec
pop
or
push
adc
rclb
add
cmp
mov
mov
pop
push
or
lret
and
iret
movsb
and
inc
ret
inc
sub
and
pop
xor
loopnew
test
sti
insl
or
insl
outsl
mov
fistl
jnp
pop
mov
out
or
fstps
ljmp
pusha
jns
out
pushf
mov
loope
movsb
sub
dec
mov
repz
dec
push
jl
pushf
or
int3
mov
cmp
and
add
in
jp
insb
push
call
into
popf
sbb
jl
cmp
imul
outsb
or
into
sbb
dec
ljmp
js
dec
sbb
fcom
in
out
pop
rclb
mov
sub
ficoml
stc
inc
aas
mov
inc
dec
dec
jae
fildl
xchg
mov
jo
sub
aad
test
imull
xchg
and
push
cmpsl
ja
mov
mov
adc
pop
jno
inc
repnz
cmp
popa
je
inc
sbb
mov
dec
cmpsl
sbb
pop
sub
add
bound
ljmp
call
repnz
jp
mov
shr
shlb
adc
cmp
jmp
xor
movsl
daa
jmp
or
fwait
outsb
cmp
aaa
push
xchg
jno
addr16
xchg
js
lahf
add
adc
or
mov
or
lock
sarb
ds
cmp
push
int
bound
adc
stos
mov
insb
mov
enter
sbbl
flds
lret
pop
cltd
ficomps
imull
clc
jne
lret
dec
jle
pop
das
mov
adc
mov
inc
fsubrl
iret
or
iret
fs
sub
shrb
popa
test
arpl
adc
cli
jne
shrb
lods
jbe
dec
adc
sahf
mul
sbb
sahf
je
xor
or
dec
inc
sub
add
pop
or
je
sub
adc
mov
cltd
ficomps
xchg
and
mov
xor
cmp
cltd
pop
stc
mul
pop
data16
jmp
cmp
aaa
mov
push
stos
cs
sub
inc
sti
mov
cwtl
insb
jecxz
cld
cltd
out
out
mov
jecxz
pop
dec
outsb
mov
jl
in
and
or
faddl
dec
lds
ds
out
sbb
loopne
mulb
and
test
and
roll
add
enter
cmp
idivb
lods
out
leave
push
mov
cs
aad
push
or
loopne
fcmovbe
imul
and
inc
mov
out
sub
push
pop
je
cs
xchg
mov
jp
or
sub
stos
push
popa
jle
pop
iret
mov
insb
daa
into
jmp
adc
mov
xchg
jae
xchg
in
pop
in
jl
xor
orb
xor
xor
mov
popf
pop
movsl
unpckhps
dec
dec
movsb
rorb
xor
jmp
mov
mov
mov
cmpsb
pop
popa
stos
jno
mov
shll
pop
sub
ret
sub
dec
xchg
mov
test
mov
test
fiaddl
xchg
push
and
test
pop
div
mov
nopl
stos
sbb
hlt
in
inc
add
ret
inc
or
lods
cld
pusha
jge
mov
outsb
jl,pn
lock
dec
push
inc
pop
push
in
cs
cmpsl
sbb
enter
pop
outsb
push
int
or
mov
cmp
jnp
pop
jb
mov
pop
cmp
or
scas
test
into
lahf
xchg
jno
dec
pop
push
sub
or
aam
enter
mov
iret
cld
cmp
lahf
cmp
add
pop
mov
mov
jg
mov
test
bound
lret
adc
lock
adc
outsl
or
push
inc
lea
jae
jo
fbld
test
push
sbbl
mov
lods
adc
fbld
mov
push
fsubr
sbb
adc
ja
negb
push
xlat
pop
je
sbb
mov
dec
mov
insl
cmp
lds
xor
fiadds
mov
imul
popa
orl
sub
outsb
fistpl
mov
insl
dec
pop
inc
jmp
outsb
sbbl
sub
cmp
cli
sbb
mov
movsl
fwait
mov
inc
loopne
push
inc
loope
enter
jb
inc
sbb
and
pop
cltd
add
xchg
mov
add
sub
or
aaa
mov
and
shr
ja
mov
add
mov
pop
push
das
pusha
imul
mov
lods
les
imul
sub
xchg
cwtl
lods
dec
dec
ljmp
gs
sbb
jbe
sbb
mov
sti
movsb
insb
sysenter
pop
sub
out
aaa
jb
adc
mov
jge
or
mov
xlat
or
and
xchg
insb
in
dec
and
fstpl
jae
imulb
dec
mov
jno
inc
int3
adc
shlb
mov
aam
pushf
pop
push
mov
mul
mov
outsl
sti
add
add
or
mov
jne
insb
push
enter
fcomip
jns
bound
sbb
cmp
ds
and
push
fmull
call
test
shl
add
xor
fmuls
mov
mov
add
mov
cmpsl
test
out
fst
sbb
cld
icebp
cmc
int3
stos
and
add
mov
loop
mov
push
push
jecxz
lds
pushf
push
dec
out
test
xor
movsl
ja
pusha
xchg
push
cltd
daa
int
dec
cltd
cld
or
dec
imul
dec
cltd
inc
and
sub
pop
adc
mov
or
adc
fbstp
xor
jg
cmp
inc
cmp
inc
xchg
sub
mov
fcoms
scas
cmpsl
outsl
dec
fiadds
aad
inc
repnz
pop
mov
push
fmuls
lods
or
xor
div
fdivrl
aam
xor
adc
push
fists
stos
inc
ret
mov
pop
jl
aam
xchg
inc
xchg
pusha
mov
movsb
mov
xchg
mov
bound
push
pop
or
fistpl
aam
sti
mov
inc
inc
mov
out
arpl
pop
push
and
dec
dec
add
dec
and
cmp
jle
insl
xchg
out
add
test
adc
lahf
lods
lds
add
cmp
mov
lcall
pop
or
pop
sub
pop
mov
adc
xchg
pop
lods
leave
or
mov
lea
add
icebp
xchg
jae
cmp
cltd
add
cld
rorb
into
fmull
adc
lcall
lahf
cmp
pop
sub
jl
add
cmc
or
cmpsl
push
mov
xchg
fyl2x
fimull
loope
mov
sub
insl
ret
rolb
adc
sub
fsubl
addr16
sbb
int
insl
mov
nop
dec
pop
jne
sbb
push
aad
xchg
ja
jbe
sbb
les
dec
adc
and
jns
mov
stos
stc
jl
add
loope
xor
or
adc
push
inc
mov
fistpll
push
pop
dec
aas
cld
sti
dec
daa
call
sub
lods
arpl
daa
ret
in
pop
push
mov
dec
lcall
cmp
or
lahf
or
adc
cmpb
xchg
cmpsl
mov
and
lds
mov
cmpsl
and
push
push
repnz
xchg
xchg
xor
push
and
enter
in
dec
call
push
pop
fmul
push
fs
pop
cmc
sub
stos
xchg
dec
shll
xchg
rcl
sub
and
out
pop
ret
into
adc
into
and
fs
jne
mov
movsb
push
or
pop
in
bnd
hlt
mov
pop
mov
push
push
xor
in
jmp
int
rcr
ficompl
and
mov
jp
aam
scas
pop
gs
jp
mov
addb
mov
jae
and
sbb
xchg
push
inc
shrl
rorl
inc
dec
roll
push
ds
sub
pop
mov
dec
adc
mov
lock
jae
rolb
aas
repnz
jne
sti
mov
sahf
scas
mov
ror
fcoms
aas
mov
sahf
sub
xchg
xchg
mov
cmp
jns
cmp
mov
test
cmp
ljmp
movb
mov
xchg
lcall
add
push
mov
idivb
adcl
out
cmp
sub
icebp
lret
and
add
orl
pop
ja
call
js
jl
xor
int3
popf
repnz
inc
inc
cmpsl
fwait
pop
popf
mov
sub
cld
xor
je
jbe
push
test
les
push
lcall
or
iret
lret
jno
cld
faddl
mov
sub
outsl
ss
and
xchg
mov
mov
dec
sbb
leave
daa
dec
test
dec
dec
pop
lock
stc
cmp
push
jmp
mov
fsubrs
cmp
cld
cwtl
ret
cmp
adc
cmp
lea
ret
das
daa
mov
dec
mov
shll
mov
jg
popa
sub
test
dec
add
js
sub
incb
or
push
stos
sub
xchg
rcr
ret
cmpb
shlb
add
popa
dec
lods
lea
stc
pop
movsl
xchg
xchg
out
test
pop
jmp
pop
sbb
xchg
and
leave
mov
daa
out
mov
sbb
mov
ds
rcr
stc
popf
and
xor
cmp
dec
add
xor
in
mov
test
mov
sarb
fstpt
call
xor
mov
iret
jb
or
cli
test
lret
push
mov
inc
mov
jl
dec
mov
sub
lret
out
cwtl
lret
pop
scas
push
add
inc
mov
adc
xchg
xor
cwtl
cmpsb
sbb
pusha
xlat
movsl
or
out
fs
cmpsl
sbb
dec
insb
mov
ret
gs
mov
ret
mov
fmuls
dec
sub
add
mov
scas
mov
mov
lods
ret
push
lods
lret
and
pushf
rolb
rolb
pop
sbb
scas
add
in
mov
lods
into
pop
ds
jl,pn
insb
push
sbb
or
cmp
sub
fdivrl
in
mov
lods
into
pop
ds
jl,pn
insb
push
sbb
or
cmp
sub
fdivrl
in
mov
lods
into
pop
mov
insb
push
sbb
or
cmp
sub
scas
std
sahf
in
mov
lods
into
pop
ds
test
push
insb
jns
testb
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
