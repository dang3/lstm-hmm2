inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
or
dec
out
pop
adc
popf
and
add
add
add
add
or
and
rolb
add
add
in
add
add
add
addr16
add
and
pop
add
add
add
cmp
arpl
inc
add
add
add
add
add
add
add
add
add
add
add
add
flds
xor
ljmp
add
add
add
add
cmp
xor
and
sub
and
cmpsb
add
add
in
add
xor
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
lret
add
add
add
add
loopne
cmp
cmp
xor
xchg
sub
in
add
xchg
add
mov
add
add
sub
outsb
add
add
add
in
add
add
add
add
add
add
add
add
in
push
add
add
add
add
add
add
or
add
add
add
xor
push
add
add
pop
add
add
add
add
pop
add
flds
and
mov
add
add
add
add
add
add
add
pop
add
mov
add
add
add
add
and
pop
add
add
xor
xor
adc
jne
xor
xor
int
add
add
or
filds
xor
sahf
add
add
ljmp
add
push
add
add
add
cwtl
add
add
filds
ja
insb
add
pop
add
mov
inc
add
add
add
jge
xchg
add
add
and
mov
add
add
add
add
add
add
roll
ja
sub
and
cmp
movb
add
push
add
add
filds
ja
and
and
in
xor
cwtl
add
add
mov
add
add
add
rolb
filds
or
and
insb
add
add
filds
xor
jne
jne
insl
add
add
add
add
add
add
ja
filds
push
add
add
push
cmp
mov
filds
or
jle
or
cmp
fadds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xchg
add
add
add
add
xor
stos
add
add
add
les
and
pop
add
add
xor
jge
xchg
add
les
sahf
add
add
xor
sub
or
xor
xor
in
and
loope
rolb
and
xor
pop
add
add
add
add
add
add
add
add
add
push
add
mov
add
pop
add
add
add
and
les
and
and
cmp
inc
add
add
add
add
add
add
add
filds
push
and
mov
add
add
and
ja
cmp
int
push
add
and
out
add
add
add
mov
add
add
add
add
add
add
add
adc
in
dec
add
add
sti
add
add
add
es
add
add
es
add
add
add
add
add
add
xor
add
add
fsubl
jmp
fists
nop
outsb
rorl
sub
aaa
inc
adc
fcoms
or
js
jg
in
dec
jae
pop
mov
push
push
pop
cmp
sbb
ja
xchg
cmpsb
es
cmpsb
mov
pop
xchg
pop
lock
int3
and
mov
popa
lret
xchg
je
test
xchg
jle
fisubrs
es
std
iret
bndstx
add
or
pushw
std
xlat
imul
fs
jmp
push
imul
sbb
mov
sub
cmp
cli
loop
js
push
cmp
ret
dec
xchg
push
jne
pop
add
pop
jle
sbb
popf
xchg
push
jb
into
push
jb
aas
sub
sbb
loope
test
dec
adc
repnz
jne
jle
les
mov
pop
xacquire
or
lods
mov
mov
lods
out
add
add
les
jmp
stos
dec
in
out
movsb
jge
scas
aaa
add
rclb
sbb
hlt
aad
repz
cmp
or
push
push
loop
xor
stos
add
and
repnz
xor
or
add
repz
loope
int3
sub
mov
shlb
in
repz
cmp
push
enter
lahf
xor
mov
lods
mov
mov
mov
negb
insb
push
enter
inc
mov
out
das
sti
mov
fwait
jmp
adc
pop
mov
and
lods
addr16
xorb
insb
lretw
in
dec
pop
hlt
fdivrp
lret
adc
ss
insl
pop
movsb
xchg
cmp
lcall
xchg
mov
fcmovnb
pop
outsl
cmpb
sub
sub
xchg
imulb
and
pop
fsts
pushl
and
jl
daa
outsl
jnp
xchg
shll
ficomps
pop
je
mov
add
or
xor
jnp
cmp
pop
outsl
cmp
mov
fnsave
dec
inc
pop
or
xchg
mov
nop
sbb
add
dec
push
int
dec
jle
cs
jg
sub
jns
inc
enter
icebp
popl
shrb
push
stos
movsb
push
mov
xor
mov
fs
mov
imul
xchg
push
out
add
imul
inc
loope
movsb
test
aad
std
xchg
jmp
xchg
pop
aam
sbb
inc
ljmp
scas
js
dec
mov
xchg
roll
cli
aaa
mov
imul
cmc
mov
lret
sbb
xor
and
arpl
lods
push
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ret
shll
ret
scas
repz
in
lcall
inc
jae,pn
arpl
pop
xchg
jle
xchg
sahf
ret
scas
repz
sub
mov
add
arpl
cmp
outsb
jno
and
ret
sub
js
ficoms
push
mov
dec
pop
pop
arpl
add
or
pushf
ljmp
pusha
ljmp
dec
and
mov
xchg
aam
mov
cmp
addb
sbb
adc
jl
mov
jecxz
mov
aad
lret
iretw
out
out
arpl
jb
mov
popl
scas
push
lcall
mov
mov
rol
popf
int3
and
sarl
jmp
iret
xchg
and
sbb
shll
jns
cld
jnp
subl
xor
mov
into
scas
dec
adc
mov
ds
or
push
xchg
sbb
inc
out
push
imul
inc
mulb
out
das
arpl
lret
push
pop
les
daa
outsb
and
repz
into
xchg
lcall
push
mov
jae
arpl
adc
outsb
xor
dec
cld
mov
rorb
std
std
lahf
rep
ss
aaa
jle
pop
and
sbb
cmp
rcll
shr
jne
cmpsl
fstpt
mov
dec
adc
cmp
push
aas
jae
lcall
mov
mov
jae,pn
arpl
pop
add
jle
mov
sahf
ret
scas
repz
sub
mov
jae,pn
arpl
pop
add
jle
mov
pop
mov
inc
loope
sbbb
lret
or
cmp
mov
sbb
pop
mov
fsubs
nop
cmp
xchg
shr
icebp
or
mov
fnstcw
jl
out
les
shlb
cmp
ds
popl
pop
cmp
inc
push
addr16
jae
cmpsb
daa
add
out
add
sarb
xor
dec
adc
xchg
test
push
icebp
in
or
das
outsl
inc
pop
jno
jl
and
mov
inc
sub
mov
scas
in
orb
sbb
fisttpl
cli
in
or
sti
je
test
aaa
sub
push
arpl
inc
icebp
adc
push
aaa
pop
int3
mov
inc
mov
repnz
shll
loope
push
ja
cmp
jae
inc
je
mov
out
enter
rcll
addr16
cmp
cmp
jle
stos
jp
sbb
jae
out
inc
xchg
std
sbb
std
insl
push
inc
cli
and
cmp
lods
cmp
in
ljmp
mov
sbb
stos
movsl
mov
sti
pop
nop
lds
xchg
imul
dec
jno
outsl
loopne
int
inc
int3
dec
pop
dec
subb
cmp
daa
imul
xchg
xchg
in
aaa
fisubrs
aad
hlt
mov
mov
addr16
dec
inc
aad
sub
sub
push
jle
push
arpl
mov
or
dec
cwtl
mov
inc
shr
aas
push
jae
inc
inc
and
ja,pt
lahf
xlat
jno
add
xchg
mov
dec
clc
add
and
ret
jg
js
mov
in
insl
mov
add
out
inc
lcall
daa
sahf
sub
leave
pop
xorb
rclb
or
out
movsl
hlt
movsl
std
stos
addr16
out
dec
add
outsb
mov
mov
int
jb
sub
lods
sbb
fsts
mov
add
mov
adc
inc
pop
fcoms
cmp
addr16
mov
cltd
lret
mov
into
addr16
clc
mov
add
push
movsl
int3
lahf
shlb
push
rcrb
es
pop
pop
out
inc
add
cmp
push
push
repz
je
stos
fistpl
lods
jae
int
and
inc
jmp
cmpsb
call
sub
inc
fisubs
aam
dec
dec
hlt
ret
ffree
lret
adc
daa
das
iret
xchg
outsb
push
xor
subl
mov
rol
scas
jg
icebp
mov
mov
sbbl
pop
fprem
or
lcall
and
sbb
mov
fwait
push
sahf
push
lahf
xchg
push
loope
ss
rol
sbb
or
test
push
rcrb
sub
jmp
mov
mov
xchg
stos
mov
mov
fbstp
add
ja
cmp
test
adc
lds
frstor
daa
cs
and
jbe
popa
sbb
cltd
das
arpl
mov
loopne
pop
in
fists
pop
mov
jbe
and
jge
xor
pop
push
mov
cltd
test
pop
sbb
inc
dec
mov
dec
sbb
rclb
jp
jno
jno
mov
xor
xchg
mov
fisubl
adc
jle
movsb
xchg
add
in
xchg
repnz
inc
or
jnp
or
scas
dec
jle
add
call
sbb
xor
cli
jae
cmpsl
imul
pop
popf
sub
fs
shlb
and
cwtl
in
jl
mov
sub
gs
mov
lcall
inc
xor
mov
gs
stos
jne
push
or
sbbb
sub
dec
mov
test
les
cmc
jmp
xor
lahf
dec
jmp
fucomp
pop
stos
and
xchg
adc
stc
repz
and
inc
sbbb
inc
push
mov
mulb
jo
pop
inc
sbb
fcoms
dec
add
ret
js
mov
arpl
inc
adc
mov
fbld
xchg
in
jmp
sbb
add
dec
xchg
mov
icebp
pusha
int
or
dec
push
mov
repz
mov
mov
dec
pushf
xor
fbld
js
sarl
scas
shll
mov
mov
add
pop
fistl
push
aad
pop
ljmp
add
cltd
leave
fld
sbb
pop
mov
jecxz
adc
movsl
js
sti
push
test
icebp
enter
dec
ss
xor
mov
rcr
add
mov
or
xor
mov
mov
cli
js
jmp
clc
mov
shlb
sbb
ror
mov
push
jnp
mov
jg
idivl
adc
jbe
mov
or
pop
pop
mov
jne
popa
inc
push
cli
mov
repz
in
imul
mov
sbb
in
test
adc
ja
inc
xchg
mulb
add
sub
or
ljmp
inc
subb
enter
dec
cmpsb
cmp
je
aas
dec
add
cmp
mov
in
outsb
sbb
ja
add
pop
sbb
jcxz
mov
mov
jp
int
pop
inc
movsl
sub
dec
shrl
mov
adc
and
outsb
cmp
push
dec
and
push
push
jo
arpl
mov
cmp
mov
aaa
repz
test
hlt
dec
sti
push
push
push
leave
mov
pop
mov
imul
test
stc
cltd
imulb
lea
test
cltd
add
outsl
sarl
mov
test
inc
add
lds
push
add
push
sbb
dec
insb
lret
jmp
sbb
push
iret
xchg
add
fdivr
push
xor
jg
in
stos
out
call
mulb
sbb
jl
xchg
std
fsubs
push
sub
xchg
imul
or
out
xchg
inc
mov
mov
xorb
sbb
xchg
cs
jns
mov
lret
jp
inc
cmpsl
mov
jne
jmp
in
rolb
and
push
mov
je
xchg
pop
lret
or
mov
push
outsb
push
jle
or
lods
jb
in
out
lock
sbb
stc
xor
add
jg
sarb
mov
shrl
outsl
and
insb
or
inc
mov
dec
dec
lods
loop
repz
stos
xor
and
cmc
jns
imul
imul
push
lds
or
int
jbe
xor
jae
fcomp
adcl
mov
sbb
loop
adc
sbb
pushf
dec
test
inc
mov
xor
xor
fstpt
pop
dec
mov
test
jno
add
movb
push
cmp
outsb
outsb
xchg
dec
sub
push
loop
ret
jmp
rcl
cld
inc
dec
popf
jg
adc
mov
movsb
scas
adc
fwait
in
popa
and
pushf
pop
pop
inc
daa
enter
dec
es
dec
jl
cwtl
or
or
nop
es
movsl
sbbb
out
mov
movsl
sarb
bswap
ds
push
push
in
push
xchg
xchg
rorb
iret
jns
pop
xchg
pusha
mov
add
xor
popa
aas
pop
jmp
fadds
loopne
out
push
sbb
outsb
add
andb
inc
aam
xor
clc
or
test
shr
aam
adc
sbb
mov
adc
or
dec
cld
cmp
cld
pushf
xchg
cmpsl
aad
out
jb
imul
adc
and
or
in
cli
ja
mov
lods
pop
add
add
push
inc
jne
adc
and
xchg
std
aam
loope
jbe
clc
fisttpl
cltd
dec
roll
push
inc
jmp
loopne
int
inc
push
inc
leave
int3
pop
fcmovu
sub
inc
daa
aas
in
push
or
mov
out
pop
addr16
cmpsb
imul
fcmovu
fwait
aam
ret
xchg
imul
movsl
add
mov
setg
pop
out
or
sbb
or
sti
inc
inc
pop
repz
mov
push
mov
push
xchg
push
add
fmul
push
imul
ljmp
or
bound
ss
fstl
cmp
inc
inc
shrb
stc
cmp
add
pmaxsw
popa
or
in
dec
out
push
stos
scas
mov
cmp
frstor
mov
sbb
cmp
cmp
scas
scas
je
add
mov
push
repnz
sub
mov
ss
test
mov
repz
js
push
xcrypt-cfb
cmpsl
data16
std
pop
js
xor
add
mov
testb
add
dec
cmc
fsubrs
out
lods
mov
jg
rcr
jbe
mov
movb
pmuludq
icebp
cld
out
dec
push
movsl
xor
sub
fldcw
jge
in
stos
cltd
movsl
dec
inc
popa
mov
inc
in
lret
and
and
ret
push
cld
movsb
jne
inc
mov
add
lods
and
dec
cmpb
xor
jmp
adcl
pop
jne
and
jge
mov
jmp
jl
xchg
xchg
scas
loop
mov
jns
cmc
sarb
notb
add
pop
hlt
dec
inc
adc
sti
sub
arpl
dec
pop
stc
jo
insb
fsubrl
mov
and
icebp
adc
ficoml
mov
adc
xor
in
and
dec
dec
in
lock
nop
popf
les
je
insb
loop
mov
outsb
out
pop
xor
sub
and
js
sbb
adc
mov
push
pusha
xchg
shrl
jne
add
and
inc
mov
test
pop
aam
push
sub
jecxz
int
movsb
shl
repz
lret
dec
test
pop
add
pop
test
adc
jle
inc
sub
inc
adc
es
ja
ss
rolb
mov
jne
repz
mov
insb
decb
repz
out
out
fistpll
xchg
add
pop
pop
xchg
nop
stos
mov
xor
adc
sbb
cmc
in
in
push
andb
push
xorl
jl
mov
imul
add
shlb
sub
insb
in
push
xchg
sbb
mov
rcrb
add
xor
fistl
pop
inc
xchg
popf
dec
rolb
mov
push
test
jl
xchg
fistps
pop
std
lea
mov
xchg
test
bound
cld
mov
inc
jecxz
adc
ja
inc
ficomps
dec
mov
leave
sub
xchg
push
imul
dec
mov
mov
xchg
jle
ja
sub
lcall
pop
or
hlt
jp
fbstp
xchg
mulb
orl
sarl
push
sub
mov
daa
jb
stc
daa
push
cmp
movsl
pusha
ds
clc
movsl
push
ret
mov
dec
mov
repz
jae
loope
sti
dec
dec
xchg
ret
ja
imulb
push
lock
les
cmp
adcb
pop
popf
insl
je
rep
push
and
cmp
pop
hlt
adc
imul
xchg
hlt
dec
arpl
inc
mov
ja
mov
cmc
push
add
in
sub
outsl
push
add
fidivrl
xchg
mov
call
or
daa
mov
push
push
cwtl
adc
stc
mov
popa
and
jg
jecxz
out
sub
int
lods
and
and
lret
mov
mov
jb
or
scas
sbbb
push
inc
cmpsb
mov
fnstsw
xchg
aad
loope
mov
sar
arpl
xchg
sahf
and
loop
jecxz
vpdpbusd
ret
insb
mov
aaa
mov
leave
mov
jecxz
enter
push
xchg
add
scas
mulb
inc
pop
push
add
out
lcall
ret
and
rcl
or
dec
fs
push
in
dec
cli
mov
outsw
add
dec
mov
cmpsl
pop
bound
sti
fs
push
push
jl
inc
mov
push
addr16
loope
in
jo
addb
cld
or
clc
cwtl
adc
loopne
iret
cmp
insl
popa
lea
out
pop
sbb
mov
jno
aam
and
mov
scas
mov
loope
insl
sbb
mov
add
popf
pop
ror
mov
xor
cmp
movsb
movsl
cmpsl
push
rep
shll
ret
popa
mov
lock
mov
into
je
gs
fistpl
lcall
jbe
out
push
dec
fildll
arpl
xchg
pusha
adc
pop
rolb
std
lds
ret
and
or
jo
outsb
fimuls
sbb
mov
or
xchg
cmpsl
push
mov
mov
xchg
jnp
jle
inc
fucomp
xor
rorb
sub
jb
mov
pop
push
mov
cmp
add
daa
push
je
out
cmp
adc
les
hlt
jge
pop
imull
xor
mov
div
lods
fists
pop
repz
daa
xchg
pop
int
lods
jg
mov
outsl
hlt
orb
lock
adc
push
lock
test
mov
shrl
fisttpll
js
lahf
sub
xor
inc
or
mov
pop
lds
jae
sub
out
cmp
pusha
pop
adc
fnstenv
mov
push
aas
movsl
xchg
or
dec
outsl
xchg
xor
xchg
aas
icebp
sbb
push
pop
mov
fldcw
mov
cltd
call
nop
sub
sub
insl
loope
lods
in
add
ds
adc
dec
shrl
gs
cmp
adc
push
cmp
and
cmp
ffree
push
rolb
xlat
push
push
leave
sahf
lret
push
mov
in
xchg
sbb
mov
popa
push
dec
bound
mov
pop
jbe
ret
cmp
xchg
and
les
cmp
out
sbbl
data16
fwait
xchg
cwtl
lds
mov
aas
lds
pop
mov
fisttpll
daa
lds
cli
sub
mov
enter
pop
dec
icebp
mov
scas
dec
lock
mov
adc
hlt
out
movsl
int3
addr16
imul
or
negb
adc
stos
adc
fimuls
movsb
inc
loope
dec
cltd
xchg
pusha
ja
add
dec
sbb
dec
xor
lds
lret
mov
xchg
je
pop
je
rolb
xor
dec
cwtl
insb
xlat
lret
xchg
xchg
mov
xor
jne
mov
lret
out
dec
out
fst
pop
sbb
or
lods
outsb
imul
mov
jb
mov
cmp
adc
cmpsb
shlb
pop
mov
xor
std
cld
sbb
mov
loope
or
popa
lahf
adc
add
xor
imul
test
xchg
xchg
jl
cmp
sarl
sub
jg
lds
push
jge
nop
test
push
cli
aas
pop
adc
adc
outsl
test
mov
les
sti
popa
decl
sub
fwait
jle
lock
dec
mov
outsb
xchg
cmovl
ja
xchg
xor
daa
inc
jp
push
ret
jns
mov
mov
xchg
lods
in
push
dec
mov
movsb
insl
jne
je
lock
sub
dec
addr16
sub
loop
pushf
dec
jge
inc
call
sbb
or
adc
dec
xlat
daa
cmp
scas
sbb
lret
mov
mov
test
rolw
jmp
jbe
mov
outsb
jbe
add
mov
jecxz
test
xchg
les
stos
push
jbe
pop
outsl
scas
out
sbb
fdivs
push
lods
ja
mov
pop
cmp
push
jns
push
in
movsl
in
shll
rcr
push
mov
pop
scas
push
jbe
lds
data16
mov
cli
jnp
add
dec
pop
mov
fdivrl
ret
mov
and
dec
call
mov
rorl
rcrl
xor
cld
jl
mov
ja
mov
jecxz
inc
mov
add
imul
mov
fadds
ret
clc
subl
ja
test
pop
aaa
pop
xchg
stos
jns
add
gs
xor
jge
xor
xlat
and
movsb
mov
jae
lea
pop
test
lret
or
into
and
shlb
dec
cld
jo
lds
pop
test
test
arpl
mov
hlt
sbb
push
cmp
xchg
in
cmp
xchg
dec
jmp
cwtl
aas
aam
cltd
mov
pop
mov
or
in
jp
mov
mov
push
pop
sub
stc
dec
pop
int3
cmpsb
sbb
or
movsl
arpl
aas
pop
or
loop
xor
add
out
inc
les
out
push
mov
jae
mov
pop
dec
xlat
mov
fs
lret
pop
outsb
cmc
jl
mov
fsts
push
lret
pop
movsb
jl
dec
movsb
loope
xor
ljmp
fcmovnu
xchg
lret
mov
cld
push
outsl
das
adc
inc
push
lcall
xor
loopne
ret
cmp
mov
and
sub
push
fcmove
mov
jae
ds
js
push
aas
shl
mov
pushf
and
nop
mov
push
inc
sub
les
jg
dec
loop
in
adc
dec
cmp
xor
icebp
lret
sbb
ljmp
push
sbb
fisubrl
sub
mov
add
add
dec
dec
enter
ret
dec
and
inc
sub
jl
es
fdivl
fs
popf
jl
mov
mov
pop
add
xor
rclb
jae
in
pop
pop
xchg
fsubl
nop
insb
jg
lock
adc
mov
sbbb
andl
stc
fmuls
inc
ficomps
sbb
out
and
add
lea
mov
lcall
repz
jle
jno
cld
add
xchg
ret
pop
sahf
add
test
ds
push
dec
pop
test
pusha
dec
push
push
or
pop
sbb
fsubrl
lock
movsb
and
cmc
mov
dec
in
fwait
je
adc
data16
pushl
movsb
pop
sbb
pusha
clc
lods
sbb
test
inc
adc
sub
mov
mov
sbb
xchg
inc
mov
sbb
mov
pop
pop
das
push
pop
dec
lds
xlat
jno
add
shld
dec
cltd
add
or
cs
jecxz
pop
push
aam
sbb
out
into
pop
xchg
cmpsb
aaa
sarb
aas
pop
adc
add
arpl
adc
xchg
fists
dec
aad
fdivl
push
out
stos
jecxz
mov
les
test
mov
clc
bound
lret
sub
mov
inc
jmp
push
insb
lahf
pop
aad
fldl
mov
test
shlb
cltd
fsubs
popa
call
aaa
nop
cmp
cli
inc
or
addr16
or
nop
ja
imul
rcll
pop
movsb
repz
and
jle
sub
outsl
dec
mov
add
ss
pop
cmp
ja
repnz
xchg
mov
ret
in
xchg
mov
cmp
and
jl
data16
jo
leave
push
and
insl
sub
mov
lock
sbb
jg
cmpsl
sub
and
in
cli
daa
or
repnz
push
scas
dec
cmp
push
cmp
sbb
popa
cmp
xor
xchg
mov
pop
mov
arpl
js
xlat
pop
mov
xchg
xor
xchg
ficomps
adc
nop
sub
sub
pop
sahf
int
outsl
jl
dec
push
pop
sub
jnp
stos
inc
lcall
mov
insb
js
xor
fldcw
clc
js
add
idivl
fistpll
mov
data16
mov
and
ss
clc
inc
mov
bnd
xor
movsl
or
mov
scas
mov
mov
xchg
fwait
movsl
insb
mov
inc
pop
sbbl
jno
cmp
xor
js
xchg
imul
and
pop
mov
mov
notb
add
inc
or
les
hlt
xor
add
pop
add
mov
add
inc
bound
sbb
icebp
out
stc
push
jmp
jae
and
mov
pop
in
inc
mov
nop
rol
inc
jg
aas
rorl
fxch
adc
mov
enter
push
push
pusha
mov
add
cwtl
test
mov
xchg
lea
pop
imul
push
dec
sbb
fcmovne
cmp
fs
mov
mov
sub
inc
repz
lret
pushf
xchg
pop
cmp
mov
enter
mov
int
or
jnp
cmp
inc
dec
jg
xor
mov
sbb
pop
into
jecxz
xchg
nop
jb
enter
xor
arpl
lock
cmpsl
enter
ja
das
arpl
sub
or
pop
movsb
mov
outsb
mov
stos
movsb
sub
pop
pop
leave
inc
mov
outsb
leave
and
push
es
pop
dec
push
push
mov
xchg
mov
jns
test
ret
xor
sub
sub
fisttps
int3
jle
addr16
push
sbb
rcl
mov
cwtl
pop
sub
jl
dec
fdivrp
in
nop
adc
inc
push
cmp
jno
mov
sbb
mov
sub
mov
jae,pn
arpl
pop
add
jle
mov
sahf
ret
scas
repz
sub
mov
jae,pn
arpl
pop
add
jle
mov
popf
inc
mov
xchg
fiaddl
out
mov
mov
daa
jae
arpl
inc
add
dec
and
repz
jecxz
xchg
into
sub
jle
push
push
loope
test
adc
fwait
cld
xchg
int3
sbb
xchg
xchg
adc
or
and
and
jbe
inc
pusha
push
pusha
cmpsb
nop
mov
xchg
test
lock
loopne
adc
add
push
and
jbe
inc
jo
pusha
cmpsb
mov
mov
call
cmp
cmp
push
adc
pusha
out
nop
mov
cmc
in
cmpsb
aas
negb
dec
outsb
sub
mov
xor
jbe
mov
push
cmp
cmp
pop
int3
pop
jb
int
and
nop
sbb
mov
xchg
and
jo
sub
dec
out
push
les
test
or
xchg
pop
sar
jl
movb
and
mov
lock
nop
out
out
cmp
decl
add
mov
pop
test
popa
in
dec
scas
inc
pop
lock
cmp
mov
lret
jne
and
cmp
jo
lahf
pop
lahf
mov
mov
imul
aaa
and
lret
jbe
pop
adc
and
ja
inc
jo,pt
nop
mov
xchg
test
jmp
sbb
sub
cmp
jbe
inc
jo
add
cmc
filds
mov
xchg
lea
xor
gs
add
add
shl
mov
xchg
mov
xor
inc
inc
push
arpl
and
das
xor
push
add
out
rcll
rol
loopne
adc
add
xor
and
jbe
inc
jo
pusha
cmpsb
nop
mov
xchg
test
lock
loopne
adc
add
xor
and
jbe
inc
jo
pusha
cmpsb
nop
adc
cmp
in
outsb
idiv
adc
stos
stos
out
dec
jp
std
jb
je
jns
ficomps
clc
mov
in
fldl
sub
stos
mov
sbb
adc
jle
pop
mov
mov
mov
or
sbb
jg
repnz
mov
dec
push
adc
addr16
notl
xor
pop
cmpsl
stos
pop
sbb
and
jle
clc
sbb
xchg
dec
sahf
aad
mov
mov
sub
cmp
aaa
pop
shl
movsb
loope
dec
movsb
dec
add
push
ja
scas
mov
shlb
jecxz
fs
fs
nop
inc
gs
arpl
lods
lcall
ljmp
jp
test
fwait
sub
xchg
ret
pop
mov
cmp
push
add
lret
lds
pushf
mov
subl
aas
cmpsb
sbb
dec
push
out
sbb
push
imul
jmp
cmpsl
xlat
push
sub
jnp
gs
cs
xlat
mov
push
ljmp
mov
and
push
xor
xor
mov
xor
xchg
jmp
fs
dec
addps
std
sub
mov
cmc
daa
jecxz
mov
sub
push
mov
js
cld
cmpsl
int
test
or
repz
jecxz
push
or
notb
shrl
nop
cmp
mov
nop
scas
push
pop
das
pop
xchg
inc
lahf
xchg
push
dec
xchg
and
mov
sub
adc
imul
daa
aas
cmp
fists
lret
mov
or
out
xchg
les
cmp
inc
sub
and
sbb
jge
lea
cmpsl
jle
lods
rorl
adc
xchg
addr16
xchg
stos
xor
outsw
and
pop
mov
push
pop
pop
popf
jae
add
pop
push
sub
mov
ret
adcb
fbstp
dec
cmp
imul
dec
cld
mov
fs
jns
mov
pusha
stos
push
lods
push
lock
inc
adc
or
movsl
outsl
mov
ds
fidivs
in
negb
jmp
xor
das
dec
sbb
pop
outsb
iret
jne
mov
and
add
inc
xchg
ret
test
and
fistpl
pop
cmp
mov
pop
addl
jb
xchg
lret
lds
mov
dec
lea
cmp
pop
testb
ret
inc
mov
push
mov
xchg
lret
repnz
sub
mov
dec
negl
decb
leave
daa
add
push
lret
ret
xor
sub
mov
xorb
xchg
sbb
ficomps
sbb
and
incb
sub
xor
fwait
pop
push
xchg
and
out
daa
dec
loop
enter
mov
add
flds
sub
xor
fstl
xchg
fmulp
aad
nop
jle
aam
xor
adc
jbe
xor
cmp
push
out
cmpsb
aaa
adc
enter
adc
outsl
or
jl
xchg
or
sahf
jl
cwtl
lds
pushf
popf
nop
in
sub
jecxz
cmp
xchg
xchg
fisubl
lods
shrb
mov
gs
gs
in
call
stos
sbb
sub
adc
push
test
mov
aam
dec
push
mov
mov
int3
sbb
jle
cs
sub
dec
push
je
bound
iret
into
scas
addr16
inc
inc
mov
pop
jns
mov
int3
sbb
sbbl
stos
frstor
cmpsl
mov
ret
sbbl
mov
mov
pop
mov
jmp
xchg
scas
mov
xchg
scas
mov
out
aas
mov
cli
sahf
mov
jbe
xchg
mov
push
mov
xlat
sbb
mov
fidivrl
sub
inc
cmp
push
mov
xchg
push
jns
mov
aam
fcompp
jno
mov
cmpsb
imul
cld
xchg
sti
cmp
xchg
roll
ret
mov
add
mov
sub
cmp
iret
daa
fidivrs
xor
cmpsb
cmp
push
pop
outsb
icebp
xor
sub
gs
mulb
adc
xchg
mov
inc
push
jmp
jne
push
imul
stos
mov
sbb
push
testl
sahf
notb
cli
mov
jo
into
insl
push
sub
inc
imul
movsl
xchg
shlb
dec
loopne
jle
aam
outsl
insl
stos
push
lock
mov
outsl
pop
and
in
mov
cld
insb
out
std
movsl
sbb
cmp
mov
dec
lods
mov
outsb
xlat
icebp
or
insb
xchg
xor
aad
add
roll
jmp
ret
in
mov
mov
rcll
sti
dec
mov
pushf
rorb
out
xlat
mov
loope
je
out
ret
dec
push
or
lret
xchg
push
addr16
sar
jae
scas
lock
pop
mov
and
add
loop
js
dec
mov
fnstcw
test
mov
movsl
mov
xchg
mov
in
cli
push
shrl
pop
ficoml
cltd
repnz
mov
lret
cmpsb
or
into
out
sbb
or
mov
test
cmp
jno
inc
aaa
cmpsb
lahf
push
mov
push
outsl
jmp
xchg
push
push
mov
or
cmpsl
mov
and
stos
jp
outsl
adc
pop
cltd
jns
add
popa
sbb
xor
mov
cs
pop
dec
sbb
hlt
mov
int3
pop
dec
cmp
scas
xchg
outsl
and
aad
clc
das
cltd
mov
cmp
aaa
and
xor
lods
xchg
inc
mov
adc
cmp
sub
xor
pushf
pushf
xchg
pusha
cmp
lret
pop
jp
lea
imul
shrl
and
in
cwtl
jmp
mov
mov
ss
lret
jg
push
scas
std
push
subb
mov
cmc
fisubl
push
sub
cmc
stc
inc
pop
mov
mov
fbld
subb
out
clc
add
lret
inc
idivl
and
push
repz
jmp
xor
ret
inc
stc
ffree
pop
pop
push
push
lods
cltd
shrb
sub
loopne
or
add
fwait
jb
sahf
sub
pop
idivb
fcmovne
jl
bound
dec
lret
sub
test
adc
add
adc
jle
sbbb
imul
call
push
shll
add
sbb
lret
push
xchg
aad
arpl
adc
mov
push
jecxz
mov
xor
push
loope
into
test
in
inc
add
xchg
lcall
lcall
sbbb
pop
gs
ret
mov
mov
jl
lods
je
mov
mov
dec
pop
rcrb
dec
fwait
xchg
mov
jb
mov
push
jge
jle
xchg
adc
and
imull
in
icebp
sti
xchg
dec
push
add
dec
lods
lods
push
mov
adc
adc
outsl
mov
jne
xor
ljmp
mov
stos
sbb
push
mov
cmp
movsb
out
out
out
xchg
pop
mov
incl
xchg
push
out
pop
lret
faddp
adc
fbld
pop
into
xchg
fisubrs
jo
jo
test
mov
mov
push
adc
out
cltd
mov
push
mov
mov
mulb
cmp
movsb
jp
ret
fs
sub
inc
cltd
cmp
rorb
jl
add
testl
loope
lock
call
clc
xchg
adc
inc
je
dec
sbb
adc
ret
pop
jge
mov
mov
mov
and
mov
scas
std
xchg
dec
dec
ss
mov
lea
lret
sub
xchg
outsl
push
and
divl
xchg
repnz
adc
mov
dec
inc
push
enter
lcall
popa
or
enter
fisubrs
hlt
jg
jnp
mov
fsub
ret
and
jg
aaa
mov
cmp
cwtl
sub
shll
hlt
negl
gs
stos
xchg
dec
repnz
xor
mov
jl
adc
jbe
sti
cs
push
mov
pop
es
push
ror
dec
adc
incb
stos
sbb
pop
xor
repz
pop
je
and
cmp
andl
in
leave
xor
cmpsl
mov
scas
fwait
orb
sub
push
push
fildll
and
adc
add
mov
out
popf
in
mov
fwait
mov
sub
mov
enter
lcall
jg
std
cmpsb
xor
popa
fcompl
cli
enter
add
sub
jae
fnstsw
lahf
jp
xor
jle
sbb
in
cmc
mov
into
mov
pop
mov
stos
pop
jns
in
sbb
iret
dec
das
push
dec
nop
call
idivb
rcrb
lea
xchg
adc
jns
sti
dec
and
sub
cmp
cs
loope
arpl
in
dec
push
popa
nop
sub
repnz
adc
loopne
sub
pop
sub
arpl
xchg
jbe
mov
push
add
and
mov
mov
xor
and
sarb
cs
add
add
cmp
cwtl
fdivrs
bound
lret
sub
outsl
add
jno
and
adc
jns
dec
pop
mov
and
mov
push
inc
imul
stos
add
adc
sub
bound
fsubr
xorb
dec
orb
and
and
mov
jle
xchg
mov
call
mov
mov
pop
out
lcall
push
lahf
orl
pop
cmpsl
inc
cli
mov
inc
outsl
and
addr16
sub
outsl
loope
mov
hlt
out
add
jne
push
sub
dec
push
adc
roll
daa
movsl
xor
mov
jg
ficomps
mov
mov
add
iret
mov
inc
adc
push
lods
lahf
mov
bound
orl
cli
sbb
jle
repz
inc
dec
mov
lcall
je
cmpsl
mov
repnz
shll
out
inc
pop
jl
add
leave
mov
js
mov
movsl
jg
sbb
adc
aad
test
dec
addr16
sarl
fiaddl
sub
and
data16
dec
cmpsl
scas
sub
xchg
push
cmp
mov
aas
inc
sti
mov
cmp
cmp
add
add
cld
push
and
xlat
imulb
icebp
rolb
ss
sub
sti
mov
inc
xchg
aaa
mov
xor
pop
call
fisubs
mov
lea
add
ds
das
fidivs
lahf
int
inc
call
jno
and
data16
stc
pop
mov
aas
dec
lock
mov
mov
jmp
mov
inc
xor
mov
out
daa
fists
mov
es
outsl
fisubrs
insb
mov
jb
dec
xor
mov
and
aaa
adc
ficompl
lods
lret
in
inc
data16
mov
stos
xor
in
daa
cmp
cmc
je
in
shrb
add
les
cmpsl
pop
dec
pop
mov
dec
add
adc
mov
jp
jne
fiaddl
push
jge
xchg
or
cmp
mov
clc
mov
jo
adc
jo
jle
or
or
xor
test
mov
add
and
scas
mov
or
lret
stos
xor
ja
nop
xor
xor
cmpsl
je
sub
mov
xchg
in
addr16
inc
mov
loopne
gs
mov
addl
mov
lcall
sub
sbb
push
lret
and
test
jb
and
pop
add
ret
enter
or
mov
and
or
push
dec
pop
and
xorb
hlt
push
push
addr16
dec
pop
js
jg
or
and
xor
outsb
xchg
cmc
mov
add
popf
outsb
xchg
gs
add
popf
stos
call
or
call
inc
test
outsl
inc
sti
cmp
shrl
xchg
xchg
sbb
push
decl
adc
inc
testl
fdivl
push
sti
cltd
out
mul
cmp
fstl
lret
andb
leave
mov
jno
outsl
xor
adc
shrl
push
and
rolb
xor
sub
sbb
push
push
mov
movsl
mov
and
xchg
push
popa
roll
xor
subb
fsub
sbb
xchg
mov
push
sbb
movsb
and
ret
fisttps
xchg
mov
xchg
pop
leave
push
jno
jge
fisubl
xchg
aas
add
fs
fstl
das
fstpt
daa
adc
js
cmp
mov
insl
lcall
xor
xchg
dec
dec
push
in
scas
roll
lods
sub
push
xor
lea
js
xchg
xchg
call
gs
loop
sbb
xlat
jno
in
int
jmp
push
popa
cld
lock
aaa
lret
inc
pushf
push
mov
jl
rol
mov
sub
cs
mov
cmpsb
or
jge
cmp
fsubl
push
fisubl
add
sahf
mov
test
addr16
in
dec
and
pop
orb
xor
sbbb
stos
xchg
cmpsb
leave
or
fs
jp
movsl
or
mov
push
mov
pop
mov
scas
imul
push
xchg
shrb
lods
ja
jns
stos
mov
cs
cmp
fs
sub
out
mov
mov
imul
test
mov
dec
cmp
jg
jmp
xchg
pop
push
mov
dec
icebp
jmp
lds
cmpsb
fildll
xlat
jecxz
outsb
mov
sahf
arpl
jecxz
dec
pop
push
jl
xor
pop
enter
mov
lret
mov
test
and
xor
jp
jecxz
addr16
inc
xor
jno
jnp
jmp
scas
cwtl
cs
sub
dec
dec
xchg
aam
addr16
xor
imull
dec
xchg
jb
lods
mov
popa
movsl
test
jmp
jnp
push
pop
push
imull
jle
jecxz
icebp
in
xchg
aas
jb
add
mov
fcmovne
fwait
push
mov
stos
aaa
mov
rorb
xchg
and
imulb
mov
mov
mov
and
lods
jnp
push
neg
sub
cwtl
outsb
push
in
mov
data16
cmp
and
inc
inc
push
add
push
push
push
scas
cmpsb
mov
mov
gs
aam
test
xchg
or
push
lock
jbe
cwtl
lret
push
sbb
movsb
lcall
mov
arpl
popa
das
jnp
xor
pop
mov
dec
sbb
stos
mov
sub
sub
cmp
scas
xchg
fnsave
sub
xor
mov
cmp
in
test
dec
mov
lods
out
pop
push
mov
imul
sahf
jo
popf
fstpl
mov
bound
push
mov
ret
and
push
dec
inc
subl
stc
enter
mov
add
push
pushfw
dec
pop
in
adc
sbb
clc
addr16
xchg
dec
mov
xchg
push
xor
add
fs
and
xchg
jle
pop
push
ss
int3
and
mov
imul
and
jbe
xchg
sbb
inc
out
aas
xor
popa
sub
cmpsl
push
xchg
jo
daa
jne
les
push
inc
and
rcll
pop
pop
jae
in
sahf
test
jecxz
out
out
outsb
adc
jle
je
scas
cmpsb
jge
stos
cmpsb
xchg
dec
xor
imul
into
jg
pushf
sub
pop
fsubrl
mov
cmpsb
add
pop
popa
cmp
nop/reserved
fsubrl
dec
fwait
cltd
aam
xchg
fimuls
cmp
movsl
std
das
into
lea
insb
out
pop
mov
jecxz
cmp
sahf
aam
sub
mov
test
inc
test
sbb
jmp
incb
push
adc
xchg
aaa
push
cmp
mov
push
adc
fst
add
insb
mov
imul
movsl
cltd
pusha
and
and
arpl
repz
cmp
ret
xor
rcr
push
pop
push
mov
xor
inc
xchg
add
sub
xor
leavew
fldenv
mov
in
aas
aam
jb
dec
jg
pop
sub
js
adc
push
frstor
push
push
pop
mov
imul
pusha
dec
pop
movsl
xor
shl
pushf
cltd
inc
in
lods
inc
sub
add
repz
xchg
adc
fisubs
add
jbe
dec
cmpsb
add
mov
cmc
test
stos
loop
subl
outsl
sbb
lahf
push
mov
pop
test
mov
jge
mov
sub
in
jne
fbld
rcr
xchg
sub
mov
push
outsl
pop
sbb
xor
xchg
pusha
pushf
cmp
out
cmp
lods
sbb
rorb
mov
mov
add
ljmp
add
dec
pop
mov
or
rolb
and
repnz
mov
inc
ret
dec
add
mov
addb
mov
idiv
or
inc
xor
xchg
cld
push
stos
mov
popa
push
pop
enter
lds
fs
enter
inc
ss
cmp
scas
lret
test
push
sbb
push
orb
hlt
mov
pop
jnp
lods
inc
sub
sbb
inc
lahf
jb
and
int
xchg
add
call
icebp
ret
je
push
jge
in
stos
cmpsb
insb
fwait
sub
aas
stos
or
mov
mov
xor
dec
pop
iret
das
and
cmp
in
pushw
push
hlt
loope
dec
gs
aaa
cli
dec
fists
loopne
dec
aad
push
xlat
es
add
xchg
imul
jae
xchg
aas
aaa
jo
fists
insl
add
pop
xchg
mov
xchg
data16
insl
jp
mov
dec
xacquire
fadd
dec
aam
sbb
scas
or
or
insl
mov
jns
xchg
in
xchg
adc
jae
outsl
dec
jne
mov
xchg
addb
shlb
inc
stos
out
lahf
bnd
add
jle
stc
pop
push
mov
pop
lea
jmp
xor
movsl
std
fbld
movsb
jns
adc
unpckhps
jbe
and
jge
jne
jecxz
xorl
lret
mov
push
daa
cmp
mov
subb
pop
adc
std
push
lcall
mov
into
mov
xchg
push
cwtl
pop
lea
and
add
mov
outsb
hlt
daa
xor
in
shl
roll
fcmovb
leave
or
aam
jge
and
pop
pop
lahf
xor
imul
loopne
mov
insl
or
adc
inc
or
popa
xchg
pop
repnz
xor
push
popa
push
adc
add
int3
dec
cld
dec
pop
dec
xor
xor
fwait
aad
loope
ss
dec
or
add
sbb
cmp
xchg
inc
pop
dec
or
in
mov
jnp
test
repnz
les
cld
cld
jnp
sbb
ss
mov
pushf
in
scas
push
or
jge
loop
mov
cli
pop
push
jbe
orb
sbb
adc
test
add
cld
and
stc
pusha
mov
and
push
cmpsl
and
xchg
fistpl
popf
leave
or
ret
adc
sub
xor
sahf
pop
ljmp
xor
pushf
or
pop
cmpsl
cmpsb
insb
or
jle
fdivs
loope
mov
ret
or
mov
jle
mov
lahf
test
insb
jnp
loope,pt
test
mov
inc
and
push
xor
stos
and
jno
movsb
push
sbb
test
out
and
jns
fcomps
int
jne
addb
add
sbb
test
jl
jmp
hlt
xchg
fisubl
cmpsl
push
cs
xor
add
addr16
mov
loopne
xchg
jle
push
fldl
nop
outsl
and
mov
lods
mov
sub
jecxz
adc
dec
dec
xor
inc
mov
or
push
ljmp
out
push
mov
popa
repz
xor
pop
adc
mov
xchg
pop
sbb
adc
test
jmp
adc
sahf
add
sub
mov
mov
clc
imulb
mov
out
push
adc
lods
mov
adc
xor
jae
push
or
xchg
xor
push
ja
shr
je
lahf
push
fmul
scas
dec
jne
push
mov
mov
addr16
adc
cld
sti
int3
dec
ret
jb
dec
stos
mov
adc
jb
enter
add
dec
or
lret
xchg
icebp
fidivrs
add
jnp
dec
adc
dec
push
sti
fcmovnb
push
mov
fldt
xchg
dec
outsl
imul
jmp
sub
mov
pop
lahf
mov
jle
testb
into
jbe
sbbl
push
xor
sbb
testb
idiv
icebp
mov
or
pop
lds
mov
ljmp
into
xor
jne
jno
scas
cwtl
rclb
out
das
idiv
sbb
cld
pop
xchg
mov
lock
loopne
adc
add
xor
and
jbe
inc
jo
pusha
cmpsb
nop
mov
xchg
test
lock
loopne
adc
add
xor
and
jbe
inc
jo
pusha
cmpsb
nop
mov
xchg
test
lock
loopne
adc
add
xor
and
jbe
inc
jno
pusha
cmpsb
nop
mov
xchg
test
lock
loopne
adc
stos
lods
xor
push
adc
mov
push
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
dec
cs
outsl
push
jg
ret
adc
xor
mov
out
lahf
mov
dec
cs
outsl
push
jg
movd
jle
dec
aas
pop
iret
scas
fistpll
dec
out
lahf
scas
into
mov
outsl
push
jg
movd
jle
dec
aas
pop
iret
nop
cld
loop
lcall
fisubrl
cmp
push
repnz
test
mov
scas
mov
jmp
mov
leave
lret
jmp
mov
jle
pop
and
xchg
pop
adc
adc
adc
sahf
jne
into
xor
pop
cmp
push
cmp
movsb
dec
popa
outsb
mov
mov
pop
fucomip
loop
lret
fisttps
pop
aas
add
outsl
or
cmpsl
aas
push
inc
popf
pop
stos
adc
popa
jo
fildll
mov
mov
jecxz
outsb
pop
subl
subb
iret
mov
lods
pmuludq
movsl
in
jge
test
fistpl
mov
sahf
fists
adc
ljmp
outsl
push
jg
movd
jle
dec
aas
pop
iret
scas
fistpll
out
lahf
scas
into
mov
in
push
dec
push
pop
insl
aas
dec
sub
xlat
out
loopne
lock
stc
mov
or
adc
or
push
and
stos
jmp
shr
fdivr
repnz
lret
jle
dec
add
push
add
jle
dec
aas
pop
iret
scas
fistpll
out
lahf
scas
into
mov
outsl
push
jg
movd
jle
dec
aas
pop
iret
scas
fistpll
out
lahf
scas
into
mov
sub
cld
push
iret
icebp
stos
insl
sbbb
lret
and
xor
pop
inc
jb
push
mov
mov
bound
lea
mov
push
and
test
scas
shlb
xlat
incb
sbb
jnp
cs
je
sti
sub
mov
xchg
pop
jmp
mov
cmpsl
mov
and
pusha
out
push
mov
and
xor
iret
adc
mov
mov
lcall
mov
sub
jl
movsb
shr
int
add
repz
add
mov
pop
gs
mov
aam
dec
scas
mov
and
push
push
adc
mov
cmp
or
inc
jmp
jae
cmp
push
call
aad
push
add
je
xchg
add
ja
pop
pop
or
int
cli
fadd
call
pusha
int3
cmp
mov
jl
sti
mov
je
ljmp
jmp
int
insb
add
loopne
hlt
test
xor
rcll
pushf
inc
inc
mov
iret
ljmp
or
enter
dec
jo
inc
ret
dec
xor
mov
test
mov
aad
rorb
int
bound
xor
push
imul
stos
andb
rclb
mov
das
jg
adc
push
insb
sbb
cmp
inc
push
fisttpll
aas
jg
in
or
xchg
jno
sbb
add
or
addb
mov
mov
cmpsl
cltd
outsl
dec
push
push
cmp
xchg
mov
lea
add
icebp
and
rcrb
out
mov
push
loope
imul
adc
sbb
test
inc
push
testb
xchg
loope
mov
jno
sub
in
jle
xchg
jnp
sbb
mov
or
fwait
cld
cs
outsb
imul
push
in
std
ret
movb
pushf
cli
mov
push
mov
adc
in
sbb
jb
dec
cmpsl
mov
iret
sbb
ljmp
push
add
imul
pop
les
out
test
cmp
into
mov
sbb
das
xor
xchg
rolb
loopne
xchg
clc
sub
mov
in
addl
adc
cli
mov
jle
xchg
mov
xor
mov
mov
stos
outsl
cmpsl
sbb
add
xchg
in
lods
mov
xchg
fst
pop
and
shlb
out
jecxz
mov
int3
lahf
jo
dec
xchg
inc
fsubl
hlt
push
into
negl
pop
xchg
sbb
push
es
scas
mov
adc
lea
repnz
cmp
sbb
fisubl
pop
and
xchg
fisttpl
or
xor
popa
subl
js
xlat
mov
cmp
repz
jg
mov
pop
cld
call
mov
push
mov
mov
scas
out
sbb
mov
and
cld
jo
cli
arpl
addl
into
inc
dec
sub
mov
lcall
es
or
std
push
mulb
lret
jecxz
in
rol
cmpsl
andl
out
cltd
cmpsb
push
bound
daa
pop
cmpxchg
shrl
enter
pop
mov
cmpsb
icebp
lahf
push
les
in
push
sub
push
fwait
jae
mov
into
jmp
xor
push
lahf
cli
sbb
out
xor
scas
sub
fidivs
ret
dec
jmp
push
int3
shrb
mov
xor
les
out
ret
pop
test
aas
pop
lret
or
shl
sub
leave
arpl
inc
jg
push
mov
mov
xor
adc
cltd
cmp
outsb
push
jne
jl,pt
ret
stos
push
push
xor
push
xor
push
lret
inc
iret
pop
repnz
cmp
sbbb
scas
je
jo
add
mov
cmp
fistps
or
dec
push
mov
cmp
and
stos
inc
mov
loopne
xchg
scas
dec
ret
add
icebp
out
notb
pop
add
lods
jl
scas
clc
mov
pop
sbb
sub
mov
push
add
popa
mov
add
out
clc
test
inc
stc
daa
mov
stos
cmp
movsb
loop
out
test
clc
jns
rclb
mov
dec
xor
dec
mov
mov
cltd
shl
pop
xchg
imul
stos
mov
push
sbb
push
andl
out
push
cs
mov
lret
push
aam
sub
arpl
inc
fs
rol
push
jg
add
pop
scas
cs
jns
mov
dec
js
aad
inc
sahf
or
lret
popa
inc
pushf
nop
out
mov
rcrb
ja
add
cmpsb
push
faddl
xor
cmpsl
pop
sbb
imul
in
gs
loop
inc
aas
test
push
mov
cmp
sub
lea
jo,pt
data16
fiaddl
pop
sbb
push
mov
cmp
mov
orl
mov
into
gs
push
jno
cmpsb
movsl
je
fdivrs
out
dec
dec
scas
adc
sub
rcrb
add
jno
in
mov
sbb
mov
sbb
sub
pop
mov
fdivrl
mov
shll
pop
mov
out
mov
lods
mov
adc
lock
lahf
jns
fs
lcall
cmp
rolb
mov
push
icebp
xor
jg
xchg
loop
cld
cmp
xchg
enter
pop
ljmp
into
into
aas
and
mov
cwtl
data16
jns
adc
sub
dec
js
lock
in
push
ss
cmp
arpl
mov
inc
adc
cmp
bound
sub
or
push
insb
pop
xlat
sahf
lock
lea
aad
lret
clc
mov
scas
cld
push
out
adc
push
mov
outsb
sbb
xchg
leave
imul
cmp
fisubs
into
inc
mov
outsb
push
lods
andb
mov
pop
adc
movsb
mov
cmc
jmp
mov
testl
jge
adc
arpl
loopne
mov
nop
inc
call
std
sub
mov
outsl
std
mov
jae
stc
pop
nop
cmp
in
outsb
push
cwtl
fcomps
push
jmp
mov
pop
mov
hlt
sub
cwtl
push
movsl
cmp
cmp
sarl
push
adc
lock
pop
daa
cmpsl
je
repz
add
sbb
sub
inc
jns
mov
adc
inc
mov
into
fistpl
adc
outsb
sub
mov
pop
sub
pushf
push
cs
xlat
jp
mov
clc
or
jmp
fucomi
mov
cmp
ffree
jne
inc
xchg
push
mov
cmpsb
fnsave
popf
xor
inc
in
sub
out
sar
mov
dec
cmc
ret
sbb
mov
outsl
jl
repnz
adc
or
insl
add
mull
push
lock
lods
mov
movsb
mov
mov
clc
pop
in
mov
jmp
dec
out
stos
inc
icebp
jbe
push
and
cmp
stos
imul
lret
cmp
adc
fisubrs
addr16
jmp
mov
jmp
xor
push
movsl
aaa
fbstp
xor
int3
mov
test
aas
xor
push
push
jl
test
loope
shlb
pop
aas
push
cmp
in
mov
lock
xchg
sub
add
aad
iret
clc
mov
cmc
push
subl
test
fmul
jecxz
cmp
fnstenv
push
repnz
cmp
jno
stos
js
pop
mov
add
adc
js
mov
adc
cmp
or
mov
lret
stos
push
mulb
int3
pop
push
ret
fsubrl
aad
cmpsb
addr16
test
sbb
push
xor
push
ljmp
movsb
movl
dec
subl
cmp
jp
mov
inc
jae
add
jne
or
xlat
pushf
adc
int3
cli
mov
lret
push
pop
add
in
mov
xor
cmp
cmpsb
jns
jae
push
repnz
dec
iret
cwtl
xchg
sahf
fbstp
add
xchg
fcoms
in
xor
popf
inc
shr
iret
xor
mov
pop
stos
xchg
je
test
js
and
or
packssdw
and
xchg
jns
iret
cmpsb
leave
bound
int
add
stc
mov
loop
mov
lea
mov
jne
mov
leave
adc
fnstenv
cmp
xchg
addl
dec
out
hlt
into
mov
sbb
xor
mov
xor
mov
les
inc
subl
dec
imul
stos
cmp
std
dec
dec
mov
mov
xor
xchg
push
mov
fcom
push
mov
cli
adc
fcoml
mov
xchg
movsb
xchg
fnstsw
aad
loopne
insb
mov
lahf
add
xchg
lods
pop
fnstsw
mov
sahf
sub
movsl
in
rclb
push
sub
pop
xchg
inc
sbb
fidivl
push
dec
andl
xchg
test
push
add
mov
xor
std
cmp
mov
mov
mov
in
xchg
jns
sbb
fadds
ljmp
ljmp
xchg
pop
ljmp
mov
enter
inc
xor
enter
lods
sub
ret
iret
jge
adc
inc
aas
inc
mov
scas
lods
inc
jp
lds
out
adc
pop
mov
push
mov
cltd
cmpsb
divb
adc
jg
mov
fldt
and
inc
loopne
pushf
fs
add
repnz
jecxz
mov
or
mov
cmp
inc
jmp
sub
cmc
and
xor
lds
popa
add
and
sub
mov
sbb
xchg
mov
fistpll
aad
addr16
sub
aam
popl
dec
test
pop
push
jle
jnp
push
test
jmp
icebp
int3
mov
fcoms
and
mov
lea
mov
neg
jp
xchg
cmp
daa
inc
adc
adc
sbb
es
jp
push
mov
inc
pop
test
imul
cs
bndldx
dec
les
outsl
ss
roll
pop
adcb
into
xlat
cmpsb
jne
push
pop
jle
or
aas
mov
cs
push
lods
jo
mov
lods
sub
aaa
inc
sub
mov
filds
dec
cs
sub
lret
dec
sbb
cli
adc
jnp
pop
iret
arpl
sub
cld
mov
imul
es
outsl
adc
inc
inc
jp
xchg
sahf
ja
or
sub
push
xchg
and
sbb
pop
mov
push
xchg
ret
xor
mov
fsub
scas
scas
push
in
iret
test
xchg
inc
add
pop
cs
cltd
js
pusha
push
mov
fadd
ds
ljmp
cmc
insb
out
jns
jle
mov
icebp
xchg
mov
mov
cld
lds
mov
xchg
jg
insb
or
sbb
cld
jnp
lahf
rcrl
pop
outsb
test
iret
jbe
sbb
cltd
xchg
in
and
jb
mov
cmp
out
test
hlt
add
dec
adc
sbb
xor
mov
and
mov
sbb
js
adc
icebp
pop
pop
ss
jge
dec
xchg
adc
xchg
add
inc
mov
adc
mov
push
add
mov
sub
and
xchg
inc
cld
mov
aad
rol
cs
or
mov
adc
fs
push
mov
in
push
jmp
je
cmp
mov
pop
xor
stos
inc
incb
outsb
xor
cld
push
sbb
in
push
fs
ret
aad
inc
insb
push
aad
adc
test
ds
dec
xchg
into
ret
daa
cmp
fbstp
sbb
inc
and
dec
add
pop
je
jg
stos
sub
mov
call
sbbb
cmp
aam
testl
outsb
int
xchg
sub
or
cmp
push
arpl
jns
cmp
jno
out
cmp
push
mov
andl
fdivl
xchg
xor
push
nop
cld
stos
push
mov
jno
nop
lret
cmp
xchg
std
in
mov
mov
add
push
scas
loope
dec
mov
sub
lahf
ret
cmp
pop
mov
mov
xlat
cmp
rorb
push
lret
repnz
sbb
outsl
pop
pop
movsl
ja
xchg
stos
mov
pop
shll
and
xchg
popf
test
jmp
or
js
lret
mov
or
stc
dec
jecxz
mov
outsl
adc
notb
xchg
stos
sub
pop
sbb
clc
xchg
icebp
sub
xlat
xlat
int3
sbb
or
mov
jmp
lea
icebp
or
jns
sbb
mov
add
icebp
jecxz
or
stc
push
xor
adc
mov
jp
push
xchg
and
stos
sbb
mov
xchg
fwait
lods
aam
adc
dec
outsl
repnz
aaa
pop
shl
enter
mov
in
mov
mov
cmp
or
mov
pop
sub
xchg
mov
xor
sbb
sub
add
addps
push
adc
sbb
xchg
mov
push
das
pop
and
test
jmp
ror
ss
xor
push
sbb
jae
and
cli
push
jne
loope
add
xchg
pop
lock
je
push
out
xlat
loop
mov
push
aam
lock
outsl
mov
pop
data16
xchg
adc
add
lods
and
rcrb
pop
mov
addb
pop
mov
sar
sarl
in
mov
fisubrs
clc
cmc
das
int3
out
aas
pushf
add
ret
leave
lahf
outsl
pop
cmpb
addr16
imul
lods
sti
cmp
fdivs
push
sti
jno
out
jp
out
mov
int3
cld
xchg
or
lea
in
into
loope
inc
wrmsr
pop
push
ret
jmp
pop
fcomi
mov
sbb
rcr
pop
lea
mov
push
repz
mov
sahf
sub
cld
adc
push
push
pop
cmp
inc
out
inc
ret
xor
jo
adc
mov
imul
and
dec
cmp
xchg
loopne
jecxz
sbb
push
jge
mov
cmp
outsl
xchg
jp
mov
insb
cmp
mov
sbb
jbe
rolb
jnp
xor
mov
ljmp
push
xor
add
std
lods
mov
mov
mov
mov
inc
test
sbb
push
pusha
leave
push
push
and
insl
dec
sbb
movsl
dec
jl
mov
test
fwait
inc
out
stos
xorpd
ja
xor
daa
out
lahf
push
lods
addr16
adc
mov
jge
movsl
movsb
pop
insl
enter
xchg
fs
xchg
push
inc
int3
pushfw
mov
mov
jnp
inc
mov
pop
add
mov
xor
xor
sub
mov
pop
xchg
push
int
adc
and
sbb
mov
inc
dec
mov
inc
inc
pop
or
mov
das
xchg
adc
ficoml
idivl
pop
and
lret
jno
dec
out
xchg
xor
mov
mov
test
pushf
adc
sub
push
pushf
cwtl
cld
mov
test
pop
stos
stos
mov
pop
mov
enter
inc
cs
cmp
push
lcall
or
mov
shll
xchg
xchg
lds
int
mov
pop
mov
xchg
xchg
sbb
arpl
cli
adc
xchg
jle
push
mov
aad
pop
movsl
in
movsb
mov
ja
fstps
adc
pop
cmp
les
fldenv
xchg
orl
js
mov
xorl
pop
stos
cs
pushf
add
rclb
cmp
cmp
mov
push
and
inc
xchg
cmp
push
inc
pop
mov
inc
mov
insl
pop
fimuls
fsubl
push
mov
or
cmp
imul
inc
adc
jmp
addr16
push
mov
lcall
or
pop
ret
pop
cmp
adc
xchg
pop
lahf
push
jmp
xlat
outsl
rcll
hlt
in
sub
push
subps
pusha
pop
xor
arpl
jecxz
inc
and
sbb
jecxz
and
push
cmpsl
enter
mov
xor
mov
bound
lret
sub
jmp
mov
pslld
push
int3
inc
dec
cmp
mov
out
fadd
push
les
push
and
mov
shlb
and
jno
pop
pop
jmp
rcrl
mov
mov
push
push
call
sti
pop
pop
rcll
adc
in
cltd
add
hlt
adc
mov
dec
sahf
add
and
adc
sub
pop
outsb
sbb
in
shrl
mov
mov
mov
mov
dec
xchg
nop
div
inc
sbb
add
fdivrp
adc
fiadds
dec
cmc
lahf
xor
inc
and
adc
ss
pop
inc
mov
xor
cmp
mov
sub
ror
push
mov
and
sar
jae
pop
mov
leave
mov
hlt
dec
ret
pop
add
cmpsb
ss
fdivp
mov
push
jge
push
sub
and
inc
jne
mov
outsl
push
into
or
rcll
popa
fidivs
popf
jle
and
int
scas
or
arpl
sub
cmpsl
call
popa
testl
and
jmp
or
out
clc
popa
repz
mov
movsl
jge
test
lds
adc
ss
sbb
add
jecxz
rol
outsb
push
out
cmpsl
out
fnstenv
sbb
xchg
xor
cld
cltd
in
lds
shlb
mov
jl
sbbb
mov
pop
cmovl
sarb
mov
xor
mov
gs
addl
jle
mov
leave
adc
testl
jecxz
aad
inc
dec
xchg
cld
and
jl
and
pushf
xor
jle
repz
pusha
adc
gs
nop
pop
mov
or
cld
rol
cld
loope
insb
dec
stos
sub
sub
mov
mull
jno
xchg
jmp
pop
xor
mov
mov
add
jae
pusha
jbe
lock
xor
mov
inc
sub
out
les
imul
sarb
push
out
loopne
cmp
xchg
mov
fstp
add
enter
pop
push
cmp
test
jle
xchg
ljmp
sub
lahf
mov
push
dec
stc
xor
enter
rolb
clc
xor
or
addr16
out
enter
incl
and
mov
jecxz
rcll
or
ror
mov
dec
ret
jp
push
dec
sbb
jl
mov
movsb
fldcw
movsl
push
adc
idivl
cmp
mov
lds
addr16
inc
sti
jmp
sbb
addb
inc
outsl
push
imul
adc
xchg
adc
pop
add
mov
inc
fcmovu
cmp
ficoms
imul
gs
mov
pushf
cmp
inc
in
mov
loopne
pusha
xchg
insb
cmp
xor
pusha
adc
loop
pop
repz
and
sahf
fsub
ja
pop
ret
pusha
sbb
mov
add
jb
addr16
mov
decb
jae
mov
inc
and
cmpsl
mov
hlt
fcoms
fwait
xchg
cmp
lahf
inc
jo
cmc
mov
js
mov
inc
inc
iret
inc
xlat
or
movsl
das
scas
dec
sub
loop
call
xor
pushf
jb
das
cmp
mov
sbb
jne
xchg
mov
das
mov
xchg
or
rcrb
or
cmovl
popf
add
movsb
adc
loop
mov
aas
mov
out
mov
add
mov
xor
movsb
call
jecxz
dec
dec
jno
test
les
shll
inc
fnstsw
lret
xchg
jp
mov
jno
stc
icebp
jmp
stc
lahf
inc
pop
aam
stc
or
in
dec
imul
ss
dec
fwait
inc
jp
push
mov
xlat
mov
lahf
jg
mov
sub
das
mov
push
push
push
test
lret
gs
mov
pop
cmp
ja
dec
mov
scas
cli
push
jo
cmc
push
jmp
out
inc
lahf
fadd
gs
add
rorb
xor
sbb
sub
dec
jecxz
sub
ficomps
and
daa
or
fcomip
mov
shll
aad
mov
sub
mov
movsl
jl
mov
lds
test
mov
jns
push
mov
inc
jns
outsb
movq
movd
jle
dec
aas
pop
iret
scas
fistpll
out
lahf
scas
into
mov
outsl
push
jg
movd
jle
dec
aas
pop
iret
scas
fistpll
out
lahf
scas
into
mov
ds
push
jg
outsb
pop
jle
dec
mov
mov
out
lahf
scas
into
mov
outsl
push
jg
movd
das
into
aas
mov
inc
mov
jmp
fbstp
iret
and
jecxz
mov
aas
xlat
sti
xchg
sbb
mov
mov
pop
call
movntq
imull
aas
xlat
dec
cmpsl
pop
mov
xchg
lahf
addr16
ja
dec
mov
iret
or
aaa
out
pop
call
push
inc
push
xor
pop
daa
mov
ja
jg
xchg
addr16
and
mov
test
mov
dec
mov
test
dec
scas
add
push
or
mov
add
fidivrs
aaa
clc
into
pop
mov
loopne
push
mov
sub
pop
cmp
js
push
push
mov
iret
push
lock
jecxz
fcompl
fisttpl
ja
int3
fsubs
addr16
inc
xor
out
sar
rorb
out
mul
ret
sbb
mov
pop
xchg
loop
xchg
lcall
mov
pop
xor
sub
inc
imul
dec
cmpsl
aaa
dec
fbld
adc
out
decl
push
call
ja
jo
adc
rclb
mov
jmp
jge
imul
das
mov
xlat
pop
cmpsl
dec
mov
xchg
xchg
addr16
mov
cmpsb
imul
fprem1
pop
jmp
dec
stos
dec
mov
and
jg
and
pop
fsub
pusha
mov
jle
mov
dec
mov
outsl
out
sub
int3
push
cli
add
push
fwait
fs
jae
inc
stos
push
mov
outsl
xchg
addr16
ja
inc
mov
aaa
out
pop
call
movntq
imull
aas
xlat
dec
cmpsl
pop
mov
xchg
addr16
ja
inc
mov
aaa
out
pop
call
movntq
mov
and
sub
inc
out
sarl
xchg
rorb
mov
popf
imul
xor
cmp
nop
cmp
mov
loopne
xchg
subl
cli
pusha
mov
mov
jb
fwait
mov
jno
sahf
jl
inc
mov
insb
lods
test
mov
jnp
ret
addr16
aas
fldt
ds
xchg
inc
testl
mov
mov
lods
adc
shr
outsb
aas
je
cmc
cmc
mov
fyl2x
out
mov
mov
mulb
jbe
xor
xor
not
lret
xor
data16
mov
add
cmc
or
ds
sahf
or
data16
and
pushf
lds
and
fidivrs
xchg
popa
js
push
inc
loop
dec
jo
idivb
add
xchg
test
xchg
inc
mov
mov
sahf
pop
dec
dec
xchg
xor
aaa
cs
movsl
out
push
xor
dec
int
xchg
movsb
test
sbb
gs
sbb
jecxz
in
je
or
cmp
pop
dec
sti
xchg
adc
push
cmp
jnp
sub
iret
cs
and
rolb
arpl
insb
cmpsb
mov
cmc
xchg
jno
cmp
pop
dec
out
frstor
fcomip
dec
inc
and
mov
mov
pop
mov
sbb
popf
fidivs
int
and
mov
cmc
add
pop
movsb
rcr
sbb
xchg
cld
inc
add
xchg
loope
jae
mov
or
jbe
jmp
cmpsb
cmpsl
xor
push
xchg
mov
mov
jno
jp
mov
cmpsb
add
mov
adc
inc
test
pop
add
outsb
call
dec
inc
mov
pop
lea
cld
cmp
insl
dec
div
mov
add
pop
xchg
fadds
mov
leave
dec
int
sahf
inc
das
or
mov
dec
push
push
lods
or
and
stos
push
inc
nop
pop
pop
jo
xchg
mov
movsl
push
not
jnp
mov
push
cmc
lea
cmp
jmp
dec
repnz
andb
pop
inc
mov
dec
icebp
fsubrl
mov
jns
dec
out
ficoms
lret
xor
rcll
ja
mov
lock
or
inc
fwait
hlt
in
mov
inc
jl
mov
call
xor
inc
pop
push
cmp
cmp
addr16
jno
mov
ficoms
lds
or
xlat
fs
xor
int
inc
jmp
call
inc
jb
pop
ss
mov
stc
ja
cs
jne
into
sub
inc
mov
mov
pop
push
movsl
and
data16
mov
and
shrl
sbb
inc
sub
shll
mov
xchg
mov
jp
mov
mov
fstpt
clc
inc
cmp
test
sbb
nop
adc
ja
pop
aaa
popf
fisttpl
lcall
add
mov
and
test
pop
pop
xchg
shlb
or
cmp
and
andl
mov
inc
orb
mov
sbbb
inc
cmpsb
lock
inc
or
jmp
cmc
sub
xchg
sarl
adc
xor
clc
xchg
mov
mov
pop
push
inc
add
js
dec
out
fistps
push
in
cmc
clc
push
or
test
pop
and
test
ss
jmp
push
int
inc
adcl
negl
sbb
mov
fwait
icebp
sub
add
test
sub
out
aas
mov
mov
aas
loopne
daa
fnsave
and
cli
pop
hlt
dec
cld
test
cmc
mov
lods
testl
test
mov
mov
push
dec
shlb
iret
ljmp
pop
mov
inc
push
rcl
sub
jg
gs
cmp
mov
cmp
out
insl
dec
adc
mov
xchg
fisttps
push
cmpsl
mov
addr16
arpl
or
mov
push
add
mov
stos
mov
out
sahf
mov
test
or
leave
cmc
inc
adc
mov
add
jmp
lahf
push
push
and
add
pusha
sti
xchg
dec
subb
popa
pusha
cmp
sub
dec
cmpsb
iret
cld
in
scas
add
test
inc
stc
andb
jo
or
and
add
fcoml
mov
sub
test
or
adc
mov
rorb
mov
daa
test
test
sbb
roll
cmp
ret
test
loopne,pn
lds
pop
or
add
leave
js
mov
pusha
aas
or
inc
gs
xor
mov
pop
mov
mov
out
mov
xchg
adc
and
jecxz
push
xor
orl
sbb
shrb
jp
div
push
lret
movsl
push
js
xor
andl
add
out
pushf
mov
adcl
jg
push
dec
loop
add
in
cmp
sub
add
jg
sbb
dec
call
iret
sbb
mov
subl
cmp
cmp
sub
nop
test
aas
fcmovne
adc
mov
insb
adcb
xor
pop
scas
in
cmpb
inc
jo
popf
idivl
fiadds
xchg
sub
sbb
leave
cmp
sub
push
push
jecxz
les
mov
cld
mov
dec
xor
mov
sub
mov
push
mulb
jo
mov
sub
fstpl
add
neg
mov
push
jp
incl
lret
mov
mov
cmp
pushf
xor
or
push
mov
cmp
and
ja
fldenv
xlat
call
xchg
inc
test
sub
adc
xlat
push
out
mov
inc
mov
inc
into
das
fdivrl
push
dec
roll
xchg
inc
in
xchg
xorb
testb
int3
pop
call
or
shll
ja
and
lods
out
outsl
cmpl
sub
addr16
xor
or
add
leave
out
mov
sbb
popf
out
xchg
adc
hlt
negb
jnp
xchg
xlat
and
lcall
inc
push
mov
aas
push
pop
push
imul
inc
jno
jns
arpl
jl
pop
mov
loop
prefetcht1
and
aaa
mov
not
pop
jmp
fildll
add
add
dec
cli
lock
enter
dec
aas
jle
dec
jmp
xor
inc
sub
mov
cmp
jo
dec
push
data16
dec
scas
fstpl
pop
ljmp
jge
push
hlt
rolb
adc
dec
sub
loopne
pusha
faddl
fs
jbe
repnz
pop
dec
ss
push
sbb
je
sbb
aaa
pop
mov
lock
jno
icebp
mov
inc
out
lds
fbld
aaa
inc
pop
jns
out
sub
sbb
js
jmp
cltd
pop
insb
inc
addl
push
and
lret
add
xchg
jmp
sti
shl
popa
push
ret
xor
roll
sbb
arpl
cwtl
adc
jae
sti
mov
imull
pop
mov
bound
iret
inc
xor
add
stc
divb
imul
jmp
adc
sub
sub
fsts
xor
data16
addr16
dec
and
jnp
and
scas
lret
mov
lahf
adc
dec
into
lds
jl
inc
inc
dec
inc
inc
stos
dec
arpl
fbstp
insl
adc
xchg
aaa
dec
pop
gs
dec
xchg
dec
out
pop
dec
jmp
and
fildl
cmp
sbb
mov
pop
xor
mov
mov
jp
ret
loopne
in
mov
dec
push
pop
int3
pusha
push
cmp
sbb
sub
out
insl
mov
jmp
out
iret
std
les
out
push
aad
or
jecxz
push
cli
es
xor
cmp
pusha
out
cmpsb
jg
sub
roll
leave
shll
sub
xor
mov
dec
xchg
push
shll
rol
aam
push
mov
mov
push
xchg
loopne
and
pop
ficoms
jp
repz
mov
fnstenv
loop
sti
mov
movsl
add
xchg
in
lods
es
fucomi
out
arpl
sti
or
adc
imul
xor
xchg
outsw
mov
test
scas
jnp
sub
jge
imul
fmull
das
mov
inc
cmp
add
mov
inc
int
cmp
pop
xor
les
popa
xchg
pop
pushf
pusha
fimull
jge
in
in
rorl
fsts
sarl
push
push
lods
dec
ja
mov
rorl
jp
jb
cmc
jmp
push
xchg
fs
les
jge
pop
outsl
ljmp
inc
pusha
add
call
sahf
or
scas
ficoml
and
xchg
leave
dec
inc
scas
xchg
xchg
xchg
cmc
cmpsl
out
xchg
adc
add
dec
pop
test
pushf
push
jae
jnp
shlb
mov
adc
jge
jmp
nop
cld
pop
popf
addr16
std
jle
sub
outsl
lahf
pop
int3
lret
sahf
es
xchg
insl
push
test
aad
cmp
pop
adc
adc
or
and
or
popf
insb
insb
movsb
lds
shlb
dec
shlb
pop
punpckhwd
pop
fmul
prefetcht0
bound
sti
push
push
mov
mov
sub
mov
shrl
xchg
cli
jno
int3
fnstcw
into
aad
pop
mov
lret
nop
inc
test
xor
rol
dec
hlt
pop
adc
mov
loop
mov
mov
mov
adc
xchg
inc
mov
inc
pop
pop
mov
sbb
jecxz
scas
dec
es
or
cwtl
pop
sub
ja
loope
stc
fwait
sbb
jns
hlt
pop
xchg
push
idivb
dec
adc
test
sbb
dec
fisubs
cmp
and
and
ret
sub
mov
or
dec
add
aaa
mov
scas
sub
inc
into
jecxz
ljmp
loope
repnz
aad
mov
imul
and
push
jne
inc
mov
frstor
cmp
mov
stos
stc
and
jo
sbb
sub
add
pop
xor
dec
fisttpll
jg
pushf
xor
jp
loope
mov
xchg
out
test
mov
or
push
adc
ret
cli
outsb
pop
loopne
pop
arpl
adc
int3
mov
mov
mov
in
outsl
fnstsw
pop
popa
mov
xchg
push
add
out
and
cld
push
sub
jns
stos
jo
fidivs
neg
or
lea
pushf
imul
mov
outsb
push
inc
jecxz
insl
pop
lret
repnz
fs
out
in
or
dec
mov
adc
sub
and
sbb
lods
mov
jae
push
cmp
leave
icebp
nop
or
lret
inc
or
int
lock
mov
dec
inc
xchg
shrl
imul
push
dec
ss
movl
test
xor
push
cli
sub
push
test
add
es
movsl
xor
lret
push
and
sub
sbb
decl
ljmp
movsl
add
pop
push
mov
in
and
pop
rorl
cmpsl
test
jns
js
pop
cltd
dec
pushf
cmp
cmp
sbb
sub
mov
mov
pop
shrl
ja
pop
pop
add
push
cmpsw
dec
and
add
cmp
dec
pusha
push
repz
ficomps
fs
rolb
cmp
repz
int
loopne
sbb
jecxz
scas
leave
inc
adc
arpl
sub
outsl
xchg
adc
inc
sbb
repz
mov
lods
aaa
inc
push
push
cmpsl
push
out
les
ss
xchg
xchg
ss
jae
dec
pusha
mov
dec
push
imul
and
js
push
mov
mov
scas
mov
fistps
pop
adc
outsb
adc
lret
mov
jnp
imull
je
jecxz,pn
sbb
les
out
push
js
ret
add
repz
out
inc
jle
imul
or
mov
inc
sub
mov
cmp
ret
inc
sub
jne
int
mov
xchg
and
sbb
call
pop
iret
shll
mov
inc
adc
mov
pop
out
pop
je
xor
or
mov
pop
fwait
sub
and
imul
int3
test
jno
rep
aam
or
jge
enter
jl
pop
sbb
push
jbe
inc
push
mov
push
adc
mov
es
in
movsl
sahf
mov
inc
in
xchg
shl
push
aad
sti
pusha
cmp
mov
push
mov
adc
fs
jmp
leave
adc
sahf
es
xor
into
int3
xor
mov
frstor
lret
cmc
leave
jge
ja
rclb
sub
add
pop
and
in
shr
mov
in
mov
nop
mov
push
sbb
mov
aaa
popa
in
addb
in
lods
mov
lods
stc
sti
mov
fs
icebp
sub
fsts
pop
into
jae
testl
pusha
push
xchg
mov
fsubrl
call
sbb
inc
fcomip
gs
xor
js
sbb
mov
ss
xlat
leave
scas
cmp
ret
dec
xor
in
int3
inc
and
sbb
sahf
enter
or
scas
adc
enter
cmp
or
cmp
test
ret
dec
dec
test
pop
int
paddq
xchg
pushf
cmc
jg
pop
sub
repz
xor
fnstsw
push
mov
dec
sbb
std
movsl
or
mov
push
sbb
stos
dec
xchg
fidivrs
pushf
lock
xor
cmpsb
xchg
and
stc
sub
inc
cld
xchg
sub
ds
push
xchg
mov
aad
rcrb
mov
mov
cmp
test
je
addr16
pop
mov
dec
add
fucom
inc
sub
fimull
lods
lea
or
push
cmc
sahf
pop
pop
and
xor
pop
or
mov
dec
add
add
or
adc
xor
loopne
push
sub
nop
cwtl
cmp
shl
and
inc
lret
ret
jae
mov
mov
test
mov
scas
fstpt
sub
icebp
inc
bound
aaa
test
rcr
inc
or
cwtl
pop
test
lcall
inc
adcb
mov
cmp
adc
push
int
xchg
lds
xchg
pop
dec
pop
push
test
js
popf
test
repz
test
stos
iret
mov
mov
mov
mov
inc
pop
mov
add
push
jo
aas
pushf
mov
xor
xchg
gs
test
gs
push
jge
and
and
jecxz
inc
adc
mov
repnz
jmp
cld
inc
pop
enter
js
mov
mov
xor
or
jae
btc
jae
push
adc
cli
xlat
sbb
pop
xchg
out
cltd
popa
push
pusha
mov
adc
mov
inc
mov
pop
mov
cltd
cmp
shrl
rclb
jg
aad
add
outsb
adc
pushf
push
add
addl
lcall
mov
fs
or
popf
adc
or
mov
dec
popa
xor
out
subl
aad
xlat
mov
add
dec
loop
dec
mov
and
mov
cmc
fistpl
dec
push
cmp
pop
push
jnp
icebp
inc
push
or
mov
adc
add
nop
rorb
test
xchg
jno
mov
pop
xorb
pop
lea
adc
stc
iret
add
jg
xor
movsl
mov
scas
addb
inc
js
xor
pop
cmp
jmp
sub
pusha
sub
and
dec
adc
cmpb
pop
fmull
xchg
pop
dec
cmp
sub
add
jmp
cmpsl
cmp
pop
xchg
and
adc
dec
popf
cmp
cmpsl
adc
data16
enter
nop
ret
jp
add
aas
mov
jmp
pusha
mov
pop
movsl
cmp
je
test
mov
js
xchg
push
xchg
test
addr16
xor
cltd
and
inc
ficoml
adc
icebp
cmpsl
ret
repz
mov
cs
push
xor
clc
dec
sub
add
js
int3
cwtl
scas
dec
jnp
inc
imul
push
or
dec
jae
int3
addr16
addr16
iret
and
or
xchg
cmpsl
test
shlb
ret
std
sahf
or
test
in
xchg
std
rcl
hlt
mov
jnp
add
clc
xchg
jbe
inc
jmp
xorl
ljmp
pop
rol
rol
and
xlat
lcall
dec
push
jno,pn
dec
push
adc
xor
or
dec
push
inc
scas
mov
mov
jne
fsubrl
dec
gs
adc
fwait
jmp
insb
hlt
gs
mov
imul
loope
loopne
sbb
or
ja
stc
sahf
xorb
push
sahf
pop
push
into
stc
lahf
aaa
pop
je
icebp
push
imul
mov
pop
xchg
cmp
pop
add
rcll
call
js
ficomps
or
and
sub
xor
lcall
dec
xorb
or
outsl
cmp
je
lods
test
pop
mov
outsl
aaa
pop
fwait
call
xchg
adc
daa
lcall
cs
ret
sub
fstpt
aas
xchg
adc
mov
cmp
inc
aas
pop
jecxz
xor
rol
cltd
sti
inc
add
loopne
addr16
in
mov
into
dec
gs
fs
test
lret
xor
fidivs
mov
jbe
sub
xchg
adc
movsb
mov
inc
cmc
mov
push
outsb
sarl
inc
or
cs
xchg
cmp
fidivrl
lock
fcoms
inc
jb
mov
ret
cmp
shll
jne
xor
jg
xchg
inc
mov
jecxz
mov
loopne
add
and
rcr
movsb
int
adc
dec
jbe
ds
mov
sub
into
test
mov
fwait
lret
pop
adc
popf
xor
call
xor
orl
icebp
in
cld
in
adc
daa
gs
popf
xchg
das
outsl
test
sub
das
adc
jmp
icebp
fs
mov
pop
scas
fwait
movl
scas
sbb
jnp
dec
cld
add
imul
ljmp
jns
test
pop
push
out
loopne
xchg
insl
mov
or
sbb
clc
sbb
jne
data16
lcall
mov
mov
out
fwait
sub
dec
xchg
inc
fisubl
and
mul
jno
jle
test
xor
ffree
jge
lock
add
xchg
add
out
into
or
lcall
out
sub
dec
aam
cmpsl
inc
push
lret
cmp
out
dec
lret
cld
int
lret
xchg
inc
adc
push
push
fistpl
lock
cs
mov
add
and
stos
jl
and
xchg
push
push
jle
xor
push
and
xor
inc
dec
mov
data16
xlat
adc
repnz
in
mov
lret
mov
mul
or
cli
cmpsl
jp
daa
pop
jb
and
aaa
cmpb
sub
cmpsb
cmp
lods
cmp
xchg
mov
sti
push
ljmp
dec
jl
inc
rcrb
daa
mov
mov
das
iret
leave
xor
lret
inc
call
mov
fadd
arpl
xlat
or
jmp
repz
mov
sbb
inc
push
repz
pop
fucomip
add
jg
jmp
lret
mov
mov
push
jmp
cmp
or
jb
pusha
test
sbb
or
repz
mov
inc
daa
out
std
or
sti
sub
fimull
sbb
cs
outsl
cli
mov
xchg
ljmp
mov
inc
js
xor
xlat
dec
jbe
mov
fwait
lahf
shl
and
popa
ljmp
dec
pop
push
mov
aam
mov
in
mull
in
push
outsb
rorl
into
dec
jnp
sbb
or
in
ss
lcall
and
mov
pop
outsl
dec
mov
in
dec
or
pop
sub
jge
test
xchg
popf
and
push
push
fnstcw
ljmp
xchg
adc
mov
adc
sbbl
iret
inc
lods
push
ljmp
test
cmp
xor
nop
scas
movsb
fcomps
mov
jbe
out
clc
mov
cmpsb
loope
xor
adc
fcomi
and
cmpsl
pop
mov
xchg
addr16
ja
inc
mov
aaa
out
pop
call
movntq
imull
aas
xlat
dec
cmpsl
pop
mov
xchg
addr16
ja
inc
mov
aaa
out
pop
call
pavgw
stc
das
fistpll
rorl
pop
fsubrl
jg
data16
jae
inc
mov
aaa
out
push
std
repz
xchg
dec
cmpsl
pop
mov
pop
call
cwtl
pusha
fldl
pop
push
dec
adc
outsl
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
add
lret
sub
pop
and
mov
mov
mov
loope
shl
out
push
and
adc
add
jo
pusha
push
push
jbe
adc
mov
cmpsb
lock
loopne
shl
shl
mov
adc
add
jo
pusha
pop
push
outsb
inc
jl
xchg
mov
rcll
test
jbe
push
push
inc
sti
sahf
inc
xchg
dec
mov
movsl
cld
je,pn
xchg
dec
lahf
gs
lods
mov
inc
jbe
outsl
mov
mov
js
out
pop
or
push
cmp
mov
and
add
ljmp
xchg
lock
fdivrl
dec
jae
jg
testb
xor
in
jne
push
dec
push
mov
inc
jecxz
jbe
js
dec
push
inc
rorb
test
inc
leave
adc
xor
inc
push
fsubrs
jns
dec
sbbb
aam
push
movsl
aas
arpl
jmp
test
ja
ss
jbe
in
or
es
shl
add
push
adc
add
jo
pusha
inc
push
jbe
jg
xchg
mov
mov
shr
shl
push
fs
push
dec
inc
xor
pop
sbb
xchg
mov
ret
test
mov
outsl
jg
outsl
fs
dec
dec
adc
add
push
loop
int
call
cmpsb
xchg
movb
push
push
jae
and
gs
inc
push
jbe
data16
mov
cmpsb
lock
loopne
shl
shl
push
and
adc
add
jo
pusha
inc
push
jbe
data16
mov
cmpsb
lock
loopne
shl
shl
push
and
and
fstl
push
sbb
push
mov
nop
out
add
shrl
sti
sbb
hlt
mov
pop
sub
fcmovnb
int
xchg
push
and
and
jmp
popf
xchg
xor
mov
dec
pusha
jo
ret
aam
mov
or
add
adc
pushf
movsl
ret
mov
test
jmp
push
lock
mov
inc
cli
cmpsb
adc
push
inc
sub
dec
into
repz
xor
xor
cmp
jmp
aam
ret
jle
xor
push
dec
enter
std
pop
pop
out
sbb
cmp
pushf
xchg
mov
repnz
dec
in
xchg
repnz
test
test
pop
inc
mov
sbb
add
add
or
sti
inc
out
pusha
lods
in
mov
or
sbb
cli
movsb
inc
fwait
shlb
jnp
xorb
inc
icebp
repz
jbe
fs
jmp
push
xorb
jl
inc
faddp
arpl
lds
cwtl
mov
rorl
pop
mov
mov
sbb
dec
subb
mov
loop
jae
nop
add
call
and
adc
lods
jecxz
rclb
loop
ret
fsubrs
idiv
or
outsb
in
sbb
push
pop
ret
sub
cli
jns
xchg
outsl
or
outsl
dec
or
cmp
in
cmp
aad
push
push
mov
mov
xor
xor
cmc
xchg
mov
vpaddw
gs
xlat
and
xchg
pusha
ficoms
and
negl
xor
lock
inc
cmp
sbb
pop
stc
sub
rcll
push
push
das
call
or
adc
sub
cmp
into
lret
mov
mov
leave
inc
ret
cld
adcl
add
lcall
push
test
lods
outsl
loope
imul
xor
dec
fimuls
cmpsb
jbe
xchg
push
mov
iret
aam
test
inc
push
adc
loopne
aad
subb
jae
std
and
test
ljmp
dec
mov
mov
hlt
lea
inc
aad
sbb
sub
fidivrs
cli
movsl
movsl
sahf
jne
fldcw
adcb
je
dec
sub
sahf
xchg
adc
fs
dec
enter
lock
or
cltd
out
or
or
in
loop
mov
mov
cmp
sub
xchg
push
shlb
or
out
in
dec
mov
dec
fisttpll
scas
mov
cvtpi2ps
add
lret
mov
cmc
sahf
pop
repnz
out
xor
popf
pop
mov
lea
and
shlb
xor
inc
push
sub
cld
sahf
or
inc
in
out
jo
insb
cmc
xchg
inc
fildl
shlb
mov
test
fiaddl
inc
lods
bound
push
in
imull
divb
dec
scas
dec
mov
imul
popa
jne
data16
pop
xchg
mov
gs
test
push
jbe
cwtl
cwtl
mov
sbb
in
mov
imul
cmp
mov
pop
enter
push
daa
xor
rcr
clc
jp
sub
popf
pop
xor
and
and
push
pop
xchg
and
dec
jl
mov
dec
pop
sbb
outsl
pop
hlt
mov
fnsave
lret
lods
mov
mov
fiadds
sbb
mov
jnp
mov
push
bound
aas
lret
mov
xlat
dec
sub
pop
pop
dec
mov
inc
sub
clc
fsubl
pushf
jo
dec
stc
addr16
stos
nop
lds
pop
mov
mov
add
inc
in
jmp
push
jno
in
mov
outsb
mov
xchg
bnd
icebp
jne
out
lret
pop
lret
leave
lcall
ds
mov
cmp
mov
mov
popf
mov
pop
sbb
mov
insb
add
sahf
punpckhwd
adc
enter
test
lods
fisubrs
push
push
jge
in
bound
dec
fsubl
mov
cmp
insl
add
subl
cli
adc
ret
ja
shll
and
mov
sbbb
mov
das
mov
fdivrp
mov
jo
sub
push
sub
mov
xchg
xchg
enter
imul
fstps
mov
in
in
imul
sub
sub
pop
subb
or
cmc
add
push
loopne
add
jnp
lds
call
mov
adcb
gs
shrl
addr16
leave
stos
iret
mov
cld
xchg
push
test
push
pop
rclb
jno
loopne
push
fidivl
sbb
icebp
out
mov
dec
imul
lret
and
jbe
mov
jb
cli
cmp
xor
adc
ja
jne
into
ds
cmc
or
aas
or
push
and
leave
or
mov
fdivrs
fwait
scas
fdivl
in
jle
sbb
roll
js
xlat
sbbb
test
sub
xchg
shl
mov
xchg
xchg
test
cmc
inc
jbe
dec
outsb
or
addb
rcrl
repnz
mov
ljmp
call
bound
cmp
adc
jns
cmp
cmp
add
inc
addb
nop
ds
push
mov
jl
and
push
stc
hlt
lds
pusha
sub
dec
inc
mov
stos
lea
xchg
ret
ljmp
adc
mov
jb
in
push
aas
cli
mov
stos
andb
inc
mov
call
jo
xchg
jmp
inc
mov
or
in
jmp
mov
cld
dec
push
push
mov
popa
stos
mov
sbb
fdivr
in
sbb
nop
notb
pop
cmp
mov
scas
inc
aaa
and
inc
pop
pushl
xchg
xor
and
cmp
and
mov
fstpt
sub
push
dec
xor
mov
jle
and
add
add
pop
adc
enter
movsbl
inc
movsb
call
fst
clc
push
pop
add
call
xor
cmpl
mov
jg
pop
pop
out
out
push
sbb
push
int3
andb
cltd
adc
dec
cs
xor
mov
aam
sub
push
xor
lea
pusha
out
repnz
add
fcomps
sahf
pop
jnp
push
push
pushf
mov
xchg
or
xor
inc
sub
movsl
sbb
jo
nop
lods
ja
jmp
loopne
mov
test
xchg
mov
inc
xchg
test
cmp
sub
cwtl
jge
fbstp
imul
mov
or
iret
test
les
es
cli
mov
out
push
adc
mov
add
jl
jg
aas
idivb
dec
mov
mov
ret
loopne
stos
ret
ret
les
aaa
wrmsr
xchg
sub
and
ja
adc
or
test
imul
or
and
xchg
push
sub
sub
data16
mov
stc
aad
mov
push
jns
std
push
in
xlat
leave
jnp
push
fdivrp
lret
inc
lcall
inc
rcll
push
movsl
imul
xor
insb
or
sbb
sub
daa
sub
out
imul
popf
pop
ja
fildl
clc
cmp
push
sbb
and
xchg
pop
xor
lcall
pop
cli
mov
mov
sub
push
lds
or
in
mov
out
sti
jl
shll
cli
out
sub
sbb
movsl
enter
stc
fpatan
push
sub
std
push
push
cltd
or
adc
hlt
mov
divb
movups
jbe
sbb
fiaddl
sbb
fs
aam
nop
push
scas
cmpsb
int3
sbb
push
jg
dec
std
ret
jno
and
mov
lea
dec
fidivrl
dec
scas
add
pusha
aad
pop
insb
dec
push
fimull
sub
shl
inc
push
jecxz
mov
les
ljmp
xlat
xchg
dec
push
lcall
mov
stos
shrb
subl
push
pop
fs
lods
sbb
mov
aas
int3
and
and
xchg
or
jl
jns
arpl
inc
xchg
jmp
fmul
xchg
sbb
stc
hlt
repnz
push
ror
mov
test
js
ja
mov
mov
mov
mov
pop
stos
mov
shl
loopne
cmp
cltd
gs
add
xchg
pop
sbb
sarl
jg
pushf
xchg
popa
mov
cmpsb
insl
aaa
sbb
and
jg
mov
adc
mov
arpl
pop
nop
add
push
das
ret
decb
pop
mov
mov
daa
cmp
push
pop
mov
subb
adcb
adc
scas
or
dec
mov
sub
jne
inc
dec
out
dec
xor
or
and
sub
rol
mov
adc
sbb
cltd
into
push
pop
incb
cmp
rcll
xor
and
ja
pusha
mov
addr16
shrl
jp
cld
inc
jmp
decb
inc
cmp
aaa
insb
cltd
nop
lcall
clc
lahf
dec
lods
xchg
lret
mov
mov
lock
pcmpeqb
ja
xchg
mov
add
xlat
stos
jno
lret
fwait
mov
lea
sub
inc
out
fnstsw
rolb
into
popa
cmp
sub
inc
lea
or
in
popf
rclb
test
xor
int3
stos
pop
mov
fistps
inc
jb
or
bound
pushf
sub
mov
lahf
cli
rcll
jmp
fsubrl
jmp
mov
add
into
mov
xor
or
cli
pop
xchg
pop
sub
cmp
lret
je
jne
cli
mov
addl
imul
xchg
sub
jb
lock
arpl
popf
rcrb
pmaxub
cmp
movsb
xor
outsl
dec
sbb
ret
push
btc
adc
in
ss
and
jp
sbb
xor
jns
push
jnp
push
and
push
mov
sbb
cmpsb
shrb
iret
cwtl
push
rclb
mov
xor
xor
sbb
push
adc
fidivrs
xlat
fildl
ja
or
orb
cmc
repz
and
shll
cmovle
mov
xor
mov
add
push
pop
add
mov
clc
outsl
cmp
rcrb
sbb
loopne
push
imul
sbb
out
sub
cmpsb
xor
push
push
cs
lods
pop
jae
or
inc
jl
dec
cld
out
rorb
imul
push
ljmp
dec
imul
xor
push
les
lods
sub
cwtl
pop
dec
in
pop
mov
lea
ror
test
rol
ss
inc
xchg
add
sti
xor
data16
popf
push
stos
sub
jbe
int
in
or
sahf
and
shll
jns
mov
mov
enter
and
rcll
xchg
insl
adc
adc
adc
dec
leave
mov
lods
or
loope
lods
mov
xchg
push
mov
call
push
jg
pop
push
xor
xlat
or
xor
xchg
or
sub
rorb
sub
loop
mov
mov
sbb
xchg
loopne
push
aad
es
add
pop
addb
das
mov
sbb
jp
popa
insb
shll
and
mov
sahf
adc
adc
push
xlat
mov
dec
int3
or
xchg
sub
sub
xor
xchg
mov
loop
ja
in
test
cmp
out
mov
mov
dec
adc
enter
in
xchg
jnp
pop
jo
inc
mov
es
notl
pop
int3
push
sbb
jl
sub
loopne
divb
jl
dec
jae
push
loop
scas
imull
lock
mov
pop
cmpsb
nop
cmp
repz
push
sbb
mov
ret
loop
mov
push
subb
mov
add
mov
jo
pop
xchg
lahf
shrl
and
adcb
cmpsl
lds
mov
adc
orl
inc
lret
fwait
inc
mov
cmp
jl
aas
loop
frndint
adc
mov
rorl
sub
and
test
pushl
sbb
adc
and
and
mov
cltd
fidivrl
inc
mov
pushf
insl
xor
inc
test
lock
fists
sub
scas
xchg
rcrb
mov
aas
scas
cmpl
mov
jnp
es
mov
sub
push
stc
and
and
std
jo
cmpsb
add
frstor
js
pop
adc
shlb
fs
out
movsb
cmpsb
subb
aaa
xchg
testb
lock
in
pop
dec
sub
mov
filds
inc
cs
adc
pop
clc
fidivs
add
stos
and
dec
popa
cmpsl
jae
arpl
add
hlt
sub
mov
mov
lea
push
fwait
insl
gs
cmp
sti
ret
add
jbe
pushl
inc
int
xor
sub
and
adcb
jno
in
push
test
xchg
faddp
mov
sbb
nop
ljmp
cmpsb
xchg
mov
xchg
mov
mov
xlat
popa
jp
test
aaa
stos
jnp
int3
xchg
or
adc
push
push
gs
lds
ret
dec
jg
sbb
pop
jne
popf
in
es
sbb
sub
test
pop
xchg
mov
xor
mov
pop
xchg
test
xor
js
pop
cmp
loop
inc
mov
and
add
add
clc
pop
jno
and
icebp
inc
lds
stos
pushf
ds
push
shll
out
cmpsl
rol
mov
lock
or
sbb
scas
call
jb
fidivrs
cli
imul
imull
or
mov
enter
fnstcw
dec
test
and
insb
xchg
dec
mov
or
idivl
scas
pop
fwait
iret
in
icebp
roll
sbb
sbb
hlt
lret
xor
stc
iret
cmc
jne
mov
icebp
sbb
push
xchg
add
jmp
roll
sub
push
push
or
test
mov
leave
cltd
iret
xchg
sbb
movsl
sbb
mov
jmp
mov
sbb
mov
out
fidivs
sti
addb
testl
test
les
mov
push
xchg
call
dec
outsb
shlb
pop
jge
jl
xchg
mov
fwait
std
inc
push
sub
and
push
mov
push
and
arpl
jge
add
imul
push
cmp
in
pop
jnp
mov
mov
and
and
dec
mov
adc
jo
aam
cmpl
jl
dec
cmp
clc
cmp
cmp
xor
out
adc
js
add
rcrb
fs
in
xor
or
inc
sbb
addr16
int3
or
fists
xchg
int
and
jb
dec
push
lahf
or
jecxz
adc
nop
andl
push
sbb
sub
adc
sub
push
push
inc
push
mov
in
mov
icebp
adc
cmpsl
arpl
mov
push
or
dec
mov
add
lock
xor
pop
ljmp
pop
mov
nop
mov
jns
fwait
jg
mov
mov
cmp
movsb
push
sub
sar
inc
aas
mov
insl
fldt
inc
mov
test
pop
push
or
pop
inc
fdivl
hlt
mov
mov
aas
push
loopne
fadd
pop
sub
adc
mov
xchg
ret
mov
test
pop
inc
roll
adc
mov
outsl
repnz
dec
add
gs
clc
cmc
adc
sub
int
or
mov
cmp
ja
jne
negb
fwait
xchg
jmp
ss
cltd
pop
sbb
bound
pop
stos
push
into
or
sub
nop
test
out
fbld
inc
stc
jns
negl
inc
push
iret
pushf
addl
scas
cmp
sub
adc
cmp
xor
loop
outsb
and
movsb
aas
cmp
cs
xor
xor
add
xchg
ja
fisubrs
xor
mov
push
sbb
into
jb
adcl
pop
fiaddl
adc
pop
adc
sbb
add
imul
and
xor
sub
xor
fcoml
inc
in
pop
and
xor
stos
sub
inc
out
jne
xlat
pop
mov
push
popf
das
add
sbb
pop
daa
push
pop
jge
cld
cmp
lret
mov
ss
lods
imul
push
int
push
test
add
lds
cli
setns
pop
mov
jno
dec
add
push
popa
adc
lret
int3
inc
jnp
lea
inc
shrb
or
testl
dec
pop
stos
mov
stos
and
dec
cmpl
mov
pop
sub
fisubs
loope
push
xchg
dec
xchg
into
mov
jb
insl
js
ss
in
add
nop
mov
in
pop
int
imul
add
fidivl
in
insb
jae
adc
or
or
aaa
xchg
iret
mov
movsb
pop
or
xchg
push
fwait
sbb
imulb
cmp
inc
mov
xchg
mov
push
js
add
inc
inc
lcall
pop
sub
stos
xchg
push
push
ffreep
imul
add
pop
mov
sbbl
xchg
and
fucomp
cmp
pop
xchg
out
push
and
jmp
leave
je
shr
jmp
or
adc
cmpsl
hlt
add
mov
push
push
negb
sub
lods
inc
push
and
andb
fwait
add
add
and
and
imulb
mov
repz
sbb
or
pop
push
sbb
jp
cmpsb
sub
or
sbb
ss
aam
cs
ja
rclb
fisubl
aas
js
jne
cmp
xchg
int
xlat
cmpsl
fwait
dec
outsb
fiadds
call
inc
or
cmpsl
adc
in
test
lret
sbb
xchg
xchg
and
call
daa
cmc
jge
mov
cltd
jne
out
movsl
inc
stos
inc
ljmp
lock
mov
addr16
test
cltd
movl
test
sbb
push
shl
orb
outsb
imul
xchg
hlt
add
outsl
cwtl
adc
pushf
push
mov
mov
add
data16
cmp
jle
inc
testl
pop
popf
adc
in
mov
in
daa
xor
movsl
dec
std
ds
sub
lods
or
mov
lods
mov
and
jns
aad
mov
mov
leave
cli
fnstcw
pop
mov
add
pop
pop
sub
fiaddl
ficompl
or
gs
cltd
lock
sub
mov
xchg
fsubrl
sub
xchg
lret
clc
imul
jb
enter
xchg
jg
mov
push
movsl
sbb
sub
pusha
xor
cmp
and
test
das
xchg
or
hlt
and
jge
sahf
ds
sarl
jge
xchg
mov
push
iret
sbb
outsl
cli
lcall
filds
iret
adc
jle
les
imul
imul
pop
sbb
in
popa
lret
inc
mov
repnz
adc
int
xchg
cld
iret
mov
in
sub
push
pop
aaa
sbb
xor
fldt
inc
push
dec
enter
mov
daa
push
out
xchg
mov
outsl
negb
xchg
jmp
pop
mov
cli
xchg
pop
popa
xchg
xchg
pop
repz
icebp
ja
dec
push
stc
push
xor
pop
cmp
push
inc
or
fwait
stos
mov
sarl
inc
lret
add
mov
add
int3
repz
fdivrl
mov
ljmp
add
pop
arpl
loope
insb
outsb
mov
out
fs
mov
and
outsl
je
cmp
mov
lock
test
int3
stos
jae
sub
or
jmp
in
ds
rcll
pop
dec
outsb
scas
xor
push
sbb
loopne
push
add
jo
cmp
mov
loopne
cmp
test
xor
loope
call
call
movb
and
mov
insl
inc
mov
mov
xor
shll
jnp
add
jge
or
nop
sbb
cwtl
repz
xor
fstps
add
cmp
jno,pn
sbb
cld
push
iret
leave
mov
jmp
bound
fwait
incl
pop
cwtl
pop
jo
add
jo
pusha
inc
push
jbe
data16
mov
cmpsb
lock
loopne
shl
shl
push
and
adc
add
jo
pusha
inc
push
jbe
data16
mov
cmpsb
lock
loopne
shl
shl
push
and
adc
add
jo
pusha
inc
push
jbe
data16
mov
mov
shl
shl
adc
add
xor
es
pusha
inc
push
jbe
cmpsb
mov
mov
roll
mov
cltd
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
dec
mov
insl
test
outsl
stc
or
mov
adc
sub
cmp
jns
jns
mov
add
sbb
pushf
int
fstpl
mov
std
cmp
sub
pop
lods
imul
mov
xor
cmp
cmp
pxor
and
adc
insl
cli
adc
or
ss
push
cld
mov
jo
enter
test
mov
xor
fstps
jae
sbb
sub
pop
roll
roll
mov
sbb
jnp
jle
test
xor
cmp
das
std
popf
mov
gs
mov
add
mov
enter
loope
sbb
cmc
fucom
imul
popf
mov
mov
push
dec
push
loopne
icebp
inc
xchg
cmpsb
mov
pop
or
mov
dec
push
add
insb
pop
xorl
arpl
jo
or
sbb
add
or
mov
cltd
insl
test
fldcw
or
fwait
sub
cmp
dec
xchg
pop
lahf
imul
clc
bound
cmp
add
cmp
fcomps
in
cmc
pop
loope
fisubl
pushf
fdivrs
imul
test
sub
iret
les
sub
or
rcrl
fldcw
or
sbb
sub
cmp
imul
mov
sub
or
sbb
sub
cmp
imul
jle
cmp
adc
sbb
inc
nop
cmpsl
loopne
cmp
add
dec
jge
dec
insb
mov
or
inc
mov
icebp
lret
cmp
nop
inc
adc
sbb
lea
icebp
xchg
aam
leave
push
pop
sahf
mov
pop
insb
sti
inc
xchg
bound
jmp
insl
aam
inc
lods
dec
popa
cmc
dec
dec
lcall
pop
adc
push
jge
les
sbbl
jge
popf
je
iret
jnp
into
lock
jge
cmp
mov
js
add
data16
das
mov
rolb
sbb
test
ljmp
mov
dec
lock
fcoms
clc
inc
pop
outsb
add
push
mov
cmpsb
sbb
lcall
outsl
sahf
imul
or
js
inc
or
mov
gs
sahf
loopne
dec
or
movsb
fnsave
jnp
ret
popf
les
out
mov
lret
inc
cmp
xor
adc
and
push
xor
lea
shrb
pop
sti
outsb
cltd
fisubs
sbb
imul
cli
pop
pop
movaps
jmp
xorl
mov
xor
dec
mov
das
outsb
rcl
hlt
mov
aam
mov
jae
inc
and
pop
dec
mov
std
pop
jb
or
xor
add
dec
jp
lret
mov
mov
jmp
mov
cmp
or
imul
adc
shr
loope
mov
jmp
mov
jbe
cmp
xor
mov
scas
incb
cmp
movsb
daa
push
test
iret
jp
jg
push
sbb
je
orl
rol
fcomps
push
sub
add
je
stos
cmp
cltd
mov
adc
pop
or
add
sbb
lock
iret
xchg
xchg
or
mov
in
mov
dec
jne
outsl
std
jbe
xchg
inc
ljmp
imul
pop
aaa
push
xor
aas
mov
je
sbb
mov
js
lret
mov
cmp
jb
scas
xor
mov
sbb
xor
inc
dec
sti
mov
enter
mov
test
xchg
inc
lcall
dec
in
xchg
leave
inc
aas
inc
call
dec
icebp
ucomiss
inc
xchg
into
lret
jp
aam
shlb
rcl
loopne
pop
mov
dec
leave
inc
pop
test
nop
std
xchg
dec
fimuls
mov
rclb
jbe
push
cmp
lahf
imul
mov
loop
xchg
ds
insl
and
in
mov
scas
iret
es
fwait
xchg
icebp
fs
fnstenv
out
std
sub
pop
or
int3
ret
shll
mov
or
popf
loope
push
dec
sub
loope
aaa
rcrb
daa
in
jp
ds
inc
pop
cli
pop
and
cmpsl
push
cld
xor
push
sub
pop
inc
aad
push
test
popa
inc
leave
dec
push
dec
ret
mov
xchg
inc
xlat
push
xchg
inc
dec
jnp
mov
js
xor
xor
loop
lods
insl
pop
cmp
push
add
scas
stos
ljmp
adc
mov
inc
outsl
ret
sub
hlt
pushf
jle
out
adc
push
xor
insb
mull
sub
push
ljmp
inc
shl
fdivrl
push
pop
add
pop
xchg
scas
pop
xor
jbe
fnsave
test
cmp
dec
dec
lea
fcmovnu
dec
fistps
mov
mov
xor
sbb
sti
test
insl
xor
aad
ljmp
mov
add
inc
adc
dec
push
jl
mov
mov
add
lcall
insl
sub
inc
nop
std
xor
mov
cli
pop
jecxz
lcall
lret
adc
test
int
jae
adc
rorb
mov
or
mov
jns
pop
push
gs
xchg
cs
cmpsb
and
cmp
push
push
mov
mov
pop
fwait
iret
js
push
fisubs
dec
stos
or
or
dec
sbb
test
into
iret
cwtl
daa
inc
mov
shll
pop
and
mov
lret
out
adc
stc
lea
fists
loop
mov
mov
mov
mov
jmp
movsl
xchg
mov
fwait
xchg
xchg
or
cmp
nop
rcl
lock
cmp
gs
cmpl
sbb
test
test
fbld
adcl
and
mov
cmp
jno
mov
cwtl
adc
sti
andl
lret
and
loopne
push
shlb
lds
jae
mov
ret
mov
bound
pop
ja
jmp
jecxz
cld
dec
pop
std
rcrb
jno
cmpsb
mov
fisubrs
sbb
jl
sub
mov
shrb
xor
xchg
mov
dec
cmpsb
push
icebp
and
xchg
in
testb
jns
or
popf
pop
test
pop
xor
fsubrl
popa
fnstsw
test
xchg
sbb
sub
xchg
lea
push
je
add
pop
adc
pushl
ds
xchg
imul
ja
cmp
jo
and
add
jb
xor
repnz
mov
and
jl
cmpsb
movsb
iret
or
bound
xlat
dec
mov
decb
mov
xor
mov
mov
rolb
sub
hlt
cmc
ljmp
int
or
mov
flds
lods
cmc
shl
push
aas
mov
rolb
data16
sti
inc
sbb
loop
push
mov
lods
xor
push
ret
jne
inc
sarl
mov
cmp
ret
mov
dec
stos
rorb
imul
push
pop
enter
call
pusha
lret
pop
pushf
int
outsb
pop
or
cmp
xchg
cmp
test
inc
mov
xor
or
pop
cli
push
insb
lcall
int
mov
xchg
jge
or
jns
mov
xor
push
sar
les
iret
lds
stc
nop
adc
xchg
test
lock
mov
fbld
cld
mov
sbb
mov
mov
push
adc
mov
pop
bsr
ljmp
pop
fwait
mov
push
and
mov
outsb
sub
xor
xchg
mov
xor
cld
jl
sbb
jmp
lds
aaa
stos
xor
pop
iret
ret
add
rorb
adcl
pop
xchg
sub
stos
or
int3
or
and
jb
mov
mov
jb
hlt
fwait
xor
pushf
fildl
and
and
dec
jecxz
dec
mov
jbe
les
mov
into
bound
aaa
lds
jecxz
mov
pop
mov
daa
repz
xchg
adc
mov
int
test
mov
into
dec
ja
loopne
or
pop
cwtl
lcall
outsl
push
xor
out
nop
test
jge
cmp
ljmp
or
mov
jo
subb
lret
loope
mov
popf
mov
pop
fisttpll
inc
or
xor
pop
mov
xor
push
push
or
stos
fldenv
and
adc
scas
cmp
and
arpl
ret
popa
jb
lods
inc
addl
mov
xchg
sti
inc
in
push
lods
stos
mov
mov
jl
cmp
xchg
mov
sub
fs
out
mov
or
movsb
mov
lea
inc
es
pop
aas
addr16
lods
les
inc
pop
ds
xchg
cmp
stos
pop
mov
jne
shlb
fiaddl
mov
pop
addr16
xchg
fdivrs
int
dec
jns
adc
negl
mov
lret
mov
xchg
cmc
pushf
jnp
cmp
xchg
adc
sub
and
and
xchg
sub
cmp
mov
mov
sbb
mov
pop
push
dec
sub
cmp
inc
test
in
mov
xor
fnsave
dec
dec
or
xchg
pusha
stc
mov
into
xchg
xorl
xlat
mov
iret
test
mov
jle
mov
add
and
sbb
scas
push
stos
inc
out
adc
cli
add
into
adc
pop
sbb
adc
push
sahf
call
or
inc
mov
popa
lret
shl
imul
mov
mov
add
call
mov
xorl
arpl
jl
add
xchg
dec
imul
jns
fdivs
mov
fisubs
mov
add
repnz
or
popa
je
inc
daa
sti
or
mov
iret
or
jmp
mov
pop
sbb
xor
pop
popa
pushf
or
movsl
fwait
loope
add
xchg
dec
inc
cmp
ds
loop
fwait
xchg
scas
sbb
xorl
sub
adc
inc
pushf
jecxz
jg
sbb
lods
jecxz
inc
xchg
or
repz
ret
lret
mov
jnp
cs
dec
lea
dec
lret
cwtl
push
fwait
hlt
pop
shlb
inc
jmp
lret
ljmp
and
test
enter
fidivrs
sub
cltd
divl
jecxz
outsl
pop
sarb
lret
jle
mov
jmp
or
mov
mov
ja
and
xor
roll
cmpsb
data16
mov
lcall
dec
sbb
shlb
xchg
subl
cld
adc
mov
sub
or
incb
pop
sub
jle
cmpl
fistps
fwait
iret
fistpl
call
sbb
mov
cpuid
mov
int
lods
sbb
push
cmp
sub
movsl
shlb
xchg
sti
jmp
mov
and
adc
ja
pop
jne
mov
lret
xchg
jnp
adc
inc
dec
out
mov
lea
jle
test
cmpsb
dec
imul
loopne
in
jl
cmp
add
mov
mov
sahf
xchg
outsb
jge
and
push
out
into
push
jno
mov
sub
lds
sahf
dec
jge
dec
cmp
out
jne
xchg
mov
jge
in
lcall
lods
insb
adc
dec
pop
push
dec
repz
fmuls
test
jle
mov
arpl
clc
repnz
aas
jae
xchg
leave
loopne
xchg
jmp
push
addr16
imul
and
lds
in
xchg
jl
jp
out
mov
lcall
pop
test
imul
pop
shlb
or
mov
cmp
outsb
out
xchg
in
outsl
mov
inc
inc
sub
mov
pop
adc
sbb
add
lods
fidivrl
sub
add
ljmp
cs
jecxz
adc
in
cmp
dec
mov
and
or
xchg
repnz
hlt
repnz
jo
pop
cli
frstor
outsb
dec
les
sbb
insb
in
cmpsb
mov
test
stc
push
jl
jne
pop
dec
divl
fcomps
cmc
cmp
jp
lock
jb
fistps
out
stos
test
imul
lahf
sub
inc
mov
pop
mov
cltd
fnstsw
iret
fstpt
mov
and
xchg
repnz
jo
or
mov
fisubrl
jg
inc
adc
mov
xchg
mov
xchg
push
and
xabort
pop
push
jae
aam
push
jecxz
mov
mov
scas
and
and
das
mov
mov
je
dec
cmp
mov
mov
mov
mov
push
mov
aaa
xchg
pop
mov
adc
cmp
xchg
fcom
sub
cmp
addr16
dec
push
insb
hlt
adc
and
dec
repz
idivb
mov
stos
out
cmpsl
inc
push
fisubrl
stc
icebp
mov
xor
or
push
ss
cmp
les
and
sbbb
and
sub
add
inc
es
xchg
push
sub
xchg
data16
push
jno
mov
push
lds
pop
aam
das
push
repz
jmp
fcomip
fsub
addr16
stc
jmp
daa
mov
pop
fcom
or
xchg
mov
inc
es
or
add
push
addr16
push
inc
xor
out
enter
xchg
xor
cs
add
mov
add
adc
pcmpeqd
test
leave
lods
loop
fmuls
jge
sbb
imul
out
pushf
jo
sbb
xor
test
pop
cld
imul
xor
js
add
jo
jb
xlat
pop
push
leave
movsb
sbb
inc
arpl
test
inc
imul
es
push
or
movsb
test
or
mov
shll
or
popa
xchg
jg
jae
add
sub
push
jns
cmc
pop
lea
stos
adc
mov
jo
loopne
mov
dec
test
jbe
cmp
sbb
push
cs
cwtl
iret
add
sarl
or
je
push
rcrl
lret
dec
imul
sbb
pop
cmpl
xor
sub
into
fcoml
sbb
pop
dec
lret
ret
ret
fisubl
push
dec
add
xchg
xor
pushf
adc
sub
popf
in
jp
push
push
in
and
mov
pop
lock
jl
loope
test
and
bound
cs
xchg
test
pop
sbb
sub
cmp
es
push
push
cwtl
mov
dec
enter
mov
testb
setbe
jno
sbb
pop
cmp
addr16
nop
outsl
imul
subb
or
aam
jnp
fistpl
cltd
nop
push
popa
int3
jns
or
xchg
and
test
mov
mov
stos
insb
stc
and
jb
ret
xor
xor
mov
lods
leave
lock
push
mov
aad
sti
sub
sbb
pop
mov
add
test
inc
jg
fs
xchg
xchg
mov
add
iret
xchg
sbb
mov
xchg
mov
jns
cld
adc
insl
cmp
or
movsb
stos
scas
ss
push
xchg
jmp
ja
pop
jno
movsb
mov
xor
and
mov
insl
add
pop
cli
ret
out
loope
std
mov
jl
cmp
or
sbb
jno
ud0
jmp
dec
clc
cmp
cmp
je
cmp
add
fistpl
aam
add
jp
mov
add
gs
ss
imul
mov
scas
sub
in
xor
and
push
add
and
sub
cmpsl
push
pop
mov
js
pop
xchg
sbb
std
test
sarl
adc
xlat
pushf
sahf
cltd
imul
inc
jns
jo
into
gs
inc
cld
sbb
mov
xchg
cld
xchg
mov
jp
and
test
iret
in
xor
nop
xor
clc
stc
lock
iret
in
or
fidivs
pop
sbb
jecxz
xchg
jae
inc
jl
sub
push
inc
aas
cld
mov
pop
out
popa
add
nop
test
inc
mov
leave
xor
lcall
pop
sbb
jl
fldenv
fcmovb
add
ret
sub
pop
inc
or
mov
stos
mov
mov
cwtl
mov
cmp
xchg
sub
or
fildl
push
jno
mov
or
pop
sub
adc
lret
jmp
jns
sbb
out
fwait
jns
adc
or
fs
icebp
adc
sbb
enter
cmc
scas
xor
mov
jo
mov
jge
insb
or
aad
or
add
into
pop
pop
jecxz
sti
jnp
inc
das
ss
std
icebp
adc
leave
shrb
sbb
pusha
push
push
push
rol
sbb
cmp
xchg
cmp
xor
cmpsb
dec
adc
fmulp
push
mov
lcall
cs
scas
lret
je
adc
arpl
mov
aaa
xor
fadds
in
jg
adc
lods
loopne
sbb
pop
sbb
dec
jle
push
inc
cmp
add
iret
xchg
mov
xchg
push
scas
inc
xchg
xchg
jb
rol
scas
les
lret
mov
call
in
inc
test
dec
out
mov
outsb
jnp
or
aas
aaa
ret
scas
ret
pop
xchg
jmp
push
mov
loope
cld
jb
sbb
and
cmpl
inc
mov
aaa
dec
mov
into
cmp
pop
adc
jmp
xor
mov
cmp
arpl
sbb
jmp
mov
sbb
loope
push
push
not
out
negb
and
mov
fs
dec
into
push
add
test
jnp
mov
int3
or
or
mov
cmc
fsubrl
push
lea
adc
jp
je
lahf
dec
sub
lcall
adc
std
xchg
pop
aaa
xor
mov
xor
mov
loopne
and
dec
jl
rolb
sahf
mov
out
jl
xor
push
jb
and
arpl
mov
out
add
jg
xchg
jg
adc
jo
cwtl
ret
mov
bnd
sti
sub
pop
jmp
pop
fiadds
fwait
add
jl
mov
js
addr16
scas
mov
push
nop
pusha
xor
add
icebp
sarb
rcr
inc
pop
push
mov
ficomps
mov
mov
lock
movsb
stos
test
cmpsb
sub
xor
pop
filds
mov
xor
mov
or
daa
or
xor
cmp
push
push
lea
aaa
pop
cltd
popa
pop
pop
or
sub
lret
insb
lea
ret
in
outsb
lock
roll
js
rol
stc
into
mov
iret
out
cmpsl
rcrl
dec
movsl
push
repz
jb
pop
pop
mov
push
push
cmc
insb
sbb
fidivrl
rorl
adc
inc
ja
inc
scas
ret
fsubrs
lods
or
sub
ss
repz
dec
es
js
pop
fdivrs
ret
add
pop
adc
roll
cmp
and
mov
sbb
jb
aas
les
pusha
mov
mov
push
jne
nop
xchg
jl
jl
ret
dec
dec
mov
pop
out
xchg
test
fiadds
daa
cltd
lods
ljmp
adcb
fwait
shrb
out
mov
sbbl
jl
stos
pop
cmp
fstpl
mov
in
adc
push
cmp
jbe
les
es
test
jno
shlb
les
ftst
inc
out
arpl
lahf
frstor
sbb
es
int3
addr16
push
test
jecxz
mov
xchg
testb
push
sub
add
shlb
das
cmp
jle
jp
dec
scas
je
leave
test
mov
fcomps
jle
fists
int3
and
jle
inc
adc
push
aaa
or
inc
push
std
inc
push
cli
call
rolb
mov
insl
outsb
adcl
cltd
xchg
jno
ss
stc
mov
or
fdiv
adc
sbb
pop
aaa
lret
jno
shrl
cmp
gs
push
out
and
xchg
pop
adc
dec
fimuls
mov
jg
cwtl
out
push
mov
mov
mov
or
ret
push
cmp
push
insb
jo
clc
mov
jle
sub
ss
into
xchg
dec
and
out
sti
adc
dec
sub
dec
movsb
ss
mov
mov
or
icebp
mov
push
lods
fcmovnb
incl
pop
pop
or
jns
push
jne
inc
outsl
push
out
push
mov
in
mov
je
bound
mov
mov
sub
scas
out
jg
sub
sbb
xchg
and
sub
pop
lret
xor
into
sub
pop
jge
sub
ljmp
lods
pusha
add
push
cmpl
pop
shrl
jge
jecxz
lods
outsl
inc
or
adc
mov
inc
fwait
mov
daa
rcrl
adc
push
push
or
imul
mov
xchg
mov
subl
pop
cs
mov
inc
lods
insb
jmp
decl
test
fiadds
xchg
dec
pop
mov
mov
dec
xchg
pop
fcmovb
shll
pop
push
inc
repnz
in
sbb
mov
call
pop
or
outsb
movl
lcall
rorl
idiv
pop
xchg
fcompl
inc
mov
lds
push
test
jp
lods
test
inc
jle
or
push
jno
outsb
mov
xchg
push
mov
ljmp
fdivl
and
rorl
sub
ja
ret
call
das
jne
mov
lea
jnp
cmc
sub
add
cmc
stos
cmp
pop
cs
dec
or
jl
mov
jge
mov
mov
xchg
jle
xchg
dec
sbb
adc
stos
sub
movsb
xor
cltd
sub
sbb
stc
int
fstpl
in
sub
cmp
imul
mov
sub
or
sbb
sub
cmp
imul
mov
sub
or
sbb
dec
lea
imul
aaa
test
or
cmp
or
mov
sub
dec
cli
rcll
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
aam
enter
call
rcrl
dec
je
fs
xor
and
aam
enter
call
mov
movsb
rclb
dec
je
fs
xor
and
aam
enter
call
mov
movsb
test
pop
imul
add
adc
ja
ja
dec
pop
mov
nop
call
pop
xor
and
arpl
cltd
pop
sbb
mov
ja
mov
inc
or
or
call
insl
fwait
or
sbb
bound
jne
sub
scas
lds
nop
push
or
sti
std
ljmp
cmp
mov
jecxz
aaa
shl
mov
in
shlb
xchg
cld
fwait
mov
test
scas
sub
test
imul
add
das
mov
dec
add
xchg
insb
inc
dec
test
lret
cmp
call
call
cmovo
mov
in
adc
sbb
push
pop
repz
cmp
hlt
clc
in
xchg
cwtl
test
push
pop
inc
dec
je
fs
xor
and
mov
cmpsl
mov
std
jmp
and
and
and
sbb
inc
insl
push
inc
push
data16
popf
movsl
call
icebp
shl
int3
adc
xor
sub
jbe
or
dec
inc
mov
les
shll
movsb
test
pop
inc
dec
je
fs
xor
and
aam
enter
call
mov
movsb
test
pop
inc
dec
je
fs
xor
and
aam
movsl
mov
inc
in
mov
lds
mov
push
push
xchg
push
adc
shrl
ret
cwtl
add
cmpsb
dec
push
notl
pop
int3
cmp
mov
aam
mov
pop
cmp
stos
iret
sbb
scas
sub
addb
pop
mov
loop
ror
andb
addr16
movsl
or
mov
push
mov
cmp
inc
orb
fsubs
nop
je
ret
shll
xor
test
dec
subb
outsl
mov
pushf
js
or
sub
adc
pushf
out
sbb
iret
pusha
aad
pushf
cwtl
pop
inc
adc
dec
dec
dec
jmp
sub
adc
mov
inc
adc
pop
jmp
mov
lods
cli
fcmovu
repnz
or
gs
pop
std
inc
mov
pushf
jmp
fmul
push
popa
mov
or
cmp
fsubl
push
pusha
sub
adc
icebp
sbbl
test
test
or
fs
lret
push
int3
jmp
lret
js
adc
cmp
mov
sbb
and
push
enter
xor
jecxz
xchg
pop
das
add
mov
mov
pop
jmp
inc
and
pop
jle
push
and
subl
sarb
sub
sub
ds
loope
cmpsb
test
scas
out
add
inc
fistpl
imul
and
pop
ret
mov
arpl
sbb
popa
add
adc
push
mov
add
mov
mov
push
in
xorb
pusha
inc
push
sbb
sbb
pop
loop
fmuls
push
dec
jns,pn
ffree
shr
in
outsl
dec
popf
mov
gs
ss
sbb
jg
adc
ds
inc
or
mov
shll
int3
je
push
pop
mov
test
je
imul
in
adcl
mov
mov
fs
arpl
imul
pop
mov
xchg
popl
dec
push
mov
adc
insl
fidivrl
push
icebp
sub
mov
xchg
sbb
jae
and
xchg
cmpsl
or
mov
fisttpl
pop
fidivl
in
sbb
inc
push
std
adc
faddl
push
adc
add
push
inc
and
push
inc
lgs
loopne
xor
or
add
lea
mov
ret
xor
jg
mov
notl
clc
jl
or
jle
aas
sub
cmp
roll
add
add
in
push
out
pop
jmp
cmp
scas
adc
add
jle
test
mulb
je
add
or
and
cmp
adc
je
jg
addr16
xchg
les
int
or
mov
icebp
jmp
pop
mov
xlat
js
mov
cwtl
gs
leave
lods
inc
mov
inc
ficoml
sahf
push
fcoms
lods
dec
loopne
push
mov
adc
aas
sub
mov
xor
ds
mov
sub
or
push
es
in
jne
inc
adc
loop
das
lock
mov
push
mov
mov
sbb
cld
aaa
xor
fnsave
and
xchg
mov
aaa
pop
mov
add
pop
push
mov
mov
subb
xor
xor
movsl
xchg
jnp
inc
jns
jp
sarb
ds
ss
xor
mov
add
adc
mov
nop
cmc
arpl
mov
rol
pop
imul
adc
cmc
test
add
adcb
lock
out
push
push
mov
ljmp
and
pop
mov
xor
pop
popa
push
rolb
clc
dec
repz
jnp
popf
adc
pop
and
cmp
push
std
add
xchg
adc
xchg
pop
add
inc
andb
aas
xor
repz
lods
push
mov
xorl
push
lods
xchg
sbb
or
lods
mov
ss
adc
aaa
shll
jo
or
xchg
sbb
loopne
push
and
xchg
add
out
sbb
mov
jle
inc
mov
xor
fwait
test
fdivrl
ret
adc
or
add
pop
daa
push
inc
pop
lcall
sbb
mov
xchg
insb
fisttps
stos
shrl
lods
imul
lret
add
call
scas
lret
fildl
addr16
add
call
iret
pop
sub
fmull
cli
inc
fcomps
aam
rolb
xlat
sub
or
xchg
sti
mov
xor
jnp
insl
dec
mov
mov
add
dec
xor
mov
inc
scas
lods
test
xchg
stos
in
rcrb
xchg
fmul
mov
cmp
gs
or
ficoml
divb
lret
jae
pop
test
clc
decl
jp
repz
xor
inc
cwtl
lahf
or
jae
sub
ljmp
adc
in
mov
mov
dec
call
pop
push
sub
int3
xor
push
or
sub
test
fildl
sbb
test
int
in
imulb
test
cltd
mov
out
add
adc
aas
inc
pusha
jb
in
dec
test
jmp
mov
xchg
jns
cmp
pop
pop
mov
fsub
stos
jl
mov
xor
xor
stc
mov
movl
pop
repnz
aas
ljmp
shr
ja
fstpl
ret
iret
ss
jge
jle
call
stos
popf
push
jnp
jp
and
add
add
mov
inc
out
cmp
lock
push
in
jge
arpl
mov
sti
inc
test
loopne
jns
dec
push
lret
jecxz
sub
sbb
or
add
mov
cmp
mov
std
imul
jns
flds
gs
stos
pop
shrl
or
pop
and
ret
insb
cmp
push
mov
out
pusha
loope
int3
cmc
fwait
arpl
push
push
fs
nop
or
xlat
aam
jno
dec
gs
rolb
nop
cwtl
icebp
shr
rcr
push
xchg
and
and
adc
pop
cmp
xchg
xchg
pop
js
jle
loope
sub
in
jg
adc
mov
xor
fwait
inc
mov
cltd
lds
inc
push
test
addr16
xchg
jl
je
xor
in
jb
mov
pop
bound
in
inc
push
arpl
pop
movb
repnz
jns
inc
dec
bound
dec
mov
xchg
jg,pn
pop
mov
pop
mov
stos
cmp
scas
pop
cltd
pop
pusha
ds
cwtl
xor
subb
addl
sbb
ljmp
mov
cmp
or
or
ret
cltd
or
and
decb
jnp,pt
ja
icebp
std
rcr
sub
lret
mov
pop
and
aaa
xor
jmp
icebp
xor
js
inc
jo
sub
cli
lds
nop
inc
dec
xor
packsswb
out
imul
push
xchg
jo
sti
jnp
jbe
test
pop
rcrl
and
lret
lock
jne
or
fsubrs
xchg
xchg
dec
fistpl
xor
xchg
cmp
addr16
push
dec
jle
repz
loop
cld
xchg
cld
push
or
jae
adc
outsl
add
pop
icebp
sarl
cltd
mov
pop
ficomps
pushf
pop
add
pop
pop
sbb
jae
call
push
flds
push
std
or
cmp
push
inc
jle
mov
push
out
mov
rcll
pusha
xlat
test
adc
sahf
je
lret
hlt
fcoml
imul
mov
xchg
ret
jg
loopne
or
dec
push
sub
out
jl
inc
cmp
sub
pusha
mov
mov
pop
jge
mov
pop
scas
cmp
adc
je
and
mov
ret
mov
bound
push
add
mov
sbb
push
sub
in
lahf
out
cwtl
cmpsl
jo
dec
stos
dec
stos
xchg
pop
dec
mov
add
loop
and
cmpl
cmp
pop
sub
sbb
pop
daa
mov
js
add
inc
fs
fstl
imul
push
movlps
mov
mov
sbb
test
or
stos
xchg
mov
scas
aad
mov
out
mov
jge
or
aaa
in
rorb
mov
xchg
sbb
adc
cmp
lret
xor
push
leave
jmp
pusha
mov
lea
imul
int3
cwtl
jg
pop
leave
cmpl
icebp
icebp
push
popf
jecxz
int3
xchg
sub
pop
std
inc
xchg
adc
addr16
aad
cmpsb
add
out
adc
or
fdivr
xchg
xor
xlat
pop
pop
rorl
sahf
outsl
fists
jno
pop
nop
or
cmp
pop
mov
stos
jmp
int
sarb
adc
idivb
daa
sti
or
fwait
cwtl
les
orl
fisttps
cli
adc
sbb
cltd
les
xchg
jp
outsb
xor
sub
stos
jne
sub
mov
movsb
movsl
adc
add
adc
and
adc
jbe
sub
dec
and
jmp
dec
jecxz
out
and
xchg
out
mov
fildll
int
repz
fistpll
pop
sub
testl
and
mov
out
pop
sbb
adc
inc
mov
mulb
xor
xorl
pop
scas
pop
lods
outsb
lret
test
fsubl
or
enter
es
repnz
repz
jae
int
sub
rolb
shlb
jp
xor
ja
outsb
clc
lret
push
std
jecxz
push
jbe
push
pushf
sbb
fdivrl
and
sbb
cmp
icebp
mov
mov
xchg
add
or
imul
sub
pushf
jmp
jnp
push
pushf
xor
mov
adc
lods
stc
or
leave
mov
mov
xor
inc
sbb
cmpsb
adc
out
or
jo
xchg
sub
ss
lcall
lahf
dec
pushl
mov
in
pop
jmp
ja
pop
add
mov
push
shl
mov
and
or
dec
mov
xchg
scas
clc
lds
inc
push
mov
dec
sbb
ss
add
xlat
loop
mov
cmpsl
call
mov
das
out
les
push
lahf
dec
insb
jl
inc
jl
lods
subb
es
popa
fdiv
inc
popf
and
gs
adc
push
adc
push
ret
fidivl
std
pop
dec
pop
pop
rcll
xlat
daa
inc
push
jnp
outsb
pop
out
movsl
sbb
jg
mov
lcall
test
cmpsl
repnz
mov
mov
jecxz
ds
gs
push
movsl
mov
andl
push
add
cmpsb
sbb
stos
pop
scas
aad
lcall
js
subb
int
pop
dec
into
clc
pushf
pushf
pcmpgtb
movsl
ret
push
cmp
push
cwtl
in
iret
inc
int
loop
inc
pop
mov
xchg
dec
cmpsl
mov
mov
sbb
loope
inc
sbb
out
loop
pop
dec
lods
mov
inc
mov
mov
push
push
fisubs
jg
shlb
pop
repz
daa
faddl
sub
jnp
xchg
imul
imul
sarb
jae
mov
mov
es
pop
adc
adc
mov
jg
jecxz
push
xchg
fs
hlt
push
xor
push
xchg
and
hlt
aad
sbb
cld
dec
adc
pusha
call
mov
push
ss
xchg
sub
ds
and
sti
fbld
lods
jl
xchg
outsl
jecxz
ja
lds
mov
mov
dec
push
stos
add
lods
mov
pop
fucomp
addl
mov
and
stos
push
sbb
repz
xchg
xchg
mov
xchg
hlt
mov
subl
lret
mov
cmp
add
iret
je
addb
sub
and
cld
adc
and
push
add
dec
push
mov
or
mov
out
lods
inc
sahf
push
test
arpl
outsl
pop
sub
int3
pusha
jecxz
pop
fcoms
repz
and
adc
jnp
mov
xchg
mov
in
out
pop
je,pn
lcall
push
pop
mov
mov
arpl
mov
lcall
frstor
ret
movsb
lcall
in
jecxz
pop
in
dec
mov
pop
lcall
cli
xchg
add
mov
icebp
bound
xchg
lods
sti
fistpl
mov
stos
outsb
jno
out
and
push
sbb
rcrb
pushf
inc
sti
jg
adc
inc
mov
sbb
sub
push
bound
mov
inc
daa
rolb
add
aad
movsb
inc
bound
je
sbb
aam
add
dec
data16
sub
rcrl
and
inc
cmp
test
es
jns
cmp
int
imul
xchg
sub
inc
xchg
jae
iret
sub
pop
mov
dec
jmp
orl
or
dec
push
push
mov
mov
xorl
jecxz
popf
cmpsl
mov
pop
stos
and
and
das
lret
add
lds
pop
idivl
test
mov
lock
leave
out
xor
repz
mov
and
je
mov
mov
outsb
push
faddl
gs
xchg
add
and
and
je
or
mov
daa
lcall
lret
shrl
push
sub
clc
and
pop
out
in
or
sbb
and
cmpsl
inc
mov
pop
inc
stos
inc
jg
test
sbb
push
cmpsl
movsb
cmp
dec
push
lods
ja
aad
imul
ljmp
mov
aaa
inc
pop
mov
loopne
xchg
xlat
dec
cmc
mov
ss
popf
scas
mov
in
inc
js
xchg
popa
xchg
jp
lock
pop
xor
jl
js
pop
cld
test
jo
fwait
mov
stos
daa
lods
bound
mov
stos
dec
adcl
push
imul
sarl
jge
mov
cmp
add
out
push
cltd
loope
inc
push
and
mov
shrl
ljmp
pop
pop
pop
or
jnp
insl
mov
aad
pop
dec
ja
mov
mov
sbb
add
shlb
cmp
clc
add
jmp
mov
mov
cmp
cli
push
and
dec
scas
jecxz
xor
mov
pop
into
sub
inc
cli
fnsave
pop
imulb
mov
adc
rorb
sub
movsb
xchg
mov
dec
push
pop
mov
arpl
xlat
mov
call
add
inc
lods
lret
inc
movups
jno
adc
add
adc
jle
add
sbb
push
ss
mov
lods
push
jne
das
enter
sbb
or
adc
jmp
add
fsubr
push
pop
xlat
idivl
push
jge,pt
cli
lret
pop
movsl
orb
in
sti
test
aam
jge
dec
cwtl
sbb
leave
mov
pusha
into
fcmovnbe
call
or
iret
outsl
popa
cmp
sti
scas
inc
repz
insl
cs
jns
fucomp
add
push
mov
mov
mov
popf
aaa
xorl
mov
xchg
jne
push
leave
or
xor
sarl
mov
icebp
in
lock
adc
adc
xlat
mov
inc
push
or
xchg
test
clc
iret
jne
push
mov
in
add
cmp
inc
push
inc
push
outsb
fcmovnb
test
push
adc
paddb
cli
fmuls
fnstsw
test
loopne
shll
call
roll
scas
adc
pop
push
pop
data16
push
mov
dec
int3
jmp
inc
and
aaa
dec
or
jge
push
stc
add
xor
pop
pop
imul
adc
stos
jg
mov
sub
movsb
add
je
inc
outsl
pop
sub
jbe
icebp
adc
push
pushf
inc
imul
addr16
scas
test
cmpsb
add
sbb
jmp
inc
add
and
mov
jg
add
lods
cwtl
and
inc
sbb
xchg
repnz
inc
mov
ret
cmpsb
jnp
mov
xchg
rorb
in
out
mov
push
gs
jle
out
cmp
orl
cmpl
pop
popaw
es
pop
scas
loopne
sahf
iret
cmp
sar
adc
cmp
je
filds
shll
push
aad
mov
in
out
clc
cs
int3
jnp
xor
jbe,pn
fsubl
xchg
jle
hlt
xchg
cwtl
ret
popf
mov
push
es
xchg
clc
outsb
xchg
notb
cmc
btr
sbb
xor
sub
mov
cmc
clc
mov
xor
xchg
adc
stos
push
lods
js
sarl
inc
push
clc
adc
cmp
mov
adc
jg
int3
and
and
push
xor
stc
fs
cli
xor
lods
pop
jns
jl
cmp
mov
push
cs
js
push
mov
xchg
je
out
sbb
and
mov
sub
or
clc
ds
pmaddwd
adcl
fldl
cmp
adc
jl
jge
ret
lds
mov
lcall
sbb
fidivs
push
push
push
nop
cmpb
mov
and
pop
pop
das
mov
gs
les
cmp
ds
xor
lods
shrl
and
mov
push
fimull
lods
jnp
add
inc
jns,pn
movsl
dec
shlb
jbe
jae
dec
and
cmp
repnz
es
in
sbb
ret
inc
insb
jp
mov
stc
mov
jle
bound
out
ret
rolb
loope
add
inc
xchg
sar
adc
push
stos
aas
mov
push
jb
orb
ljmp
cmp
andb
adc
adc
sub
testb
or
je
fs
aam
add
popa
aam
mov
roll
daa
mov
into
outsb
out
lock
pop
mov
sbb
hlt
add
jae
pop
cwtl
mov
stc
out
dec
xor
or
mov
movlps
in
fisubrl
ljmp
shl
js
in
sbb
out
inc
adc
inc
push
jl
jg
xlat
and
adc
cmpsl
push
cmp
out
shrl
inc
nop
inc
sub
sub
cmc
sbb
daa
push
and
cmp
cmc
adc
cltd
mulb
aaa
or
ret
sub
cmp
es
sbb
popf
mov
test
mov
dec
lret
jne
fsubl
imul
sbb
test
pushf
mov
jge
lds
mov
jle
mov
pop
pop
daa
bound
pop
and
mov
mov
flds
inc
faddp
add
rcrb
inc
fcmovb
jp
std
iret
mov
leave
jp
or
loope
jle
xorps
ret
ret
mov
inc
clc
fbld
bound
dec
mov
sbb
adc
pusha
out
insb
std
ucomiss
mov
push
add
fildl
call
cmp
xchg
mov
mov
fbstp
mov
sub
out
xchg
xchg
stos
jbe
adc
push
arpl
stos
loope
loopne
das
pop
push
or
loopne
inc
out
add
and
push
leave
jne
xlat
fcoms
mov
or
pop
outsl
mov
ds
dec
push
pusha
push
dec
outsl
mov
dec
inc
dec
mov
adc
ja
stc
fistpl
xor
out
mov
fmul
cmp
lds
stos
and
jle
orb
test
popa
mull
rcrl
push
sub
xor
andl
cmp
mov
loop
loopne
and
fldenv
cmp
shrb
adc
fucom
push
mov
xchg
add
out
fcmovu
ja
mov
push
test
popa
xor
xchg
dec
sbb
mov
mov
mov
fcmove
shll
repnz
mov
outsl
mov
das
popf
andl
je
xchg
jge
ds
ja
ss
adc
ljmp
inc
aaa
addl
inc
mov
mov
mov
mov
cmpb
sbb
testb
jge
imul
cmp
repnz
mov
cmpsb
pushf
enterw
call
mov
movsb
test
pop
inc
dec
je
fs
xor
and
aam
enter
call
mov
movsb
test
pop
inc
dec
je
fs
xor
and
aam
enter
call
mov
movsb
test
pop
inc
dec
je
gs
xor
fadd
enter
call
xor
and
stos
pop
mov
pop
arpl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cs
inc
push
ja
out
ficoml
xor
imul
xlat
in
mul
out
xchg
in
xchg
mov
cmpsl
arpl
inc
fs
addr16
and
adc
add
xlat
in
mov
push
out
clc
movsl
xchg
jge
dec
fistps
sub
aas
hlt
or
movsb
mov
shr
out
in
cmpsl
add
sub
add
xor
fmuls
aam
jge
xor
pop
or
jmp
fcomi
push
in
int
cmp
lahf
leave
testl
mov
sub
push
fs
sbb
inc
and
lods
negb
inc
test
push
mov
xchg
ja
mov
xchg
je
mov
iret
fists
pop
xor
int3
add
shrb
xchg
aam
cwtl
sbb
xchg
idivl
pop
insl
hlt
xchg
inc
fwait
scas
or
xor
inc
add
adc
cld
test
xlat
shll
out
les
pop
xchg
xchg
fs
sbb
pop
mov
test
ja
fisttpl
xlat
sbb
je
mov
je
test
mov
fs
repz
insl
and
ds
adc
sbb
add
out
scas
lods
mov
popf
leave
pop
add
and
arpl
push
pop
imul
subl
icebp
mul
je
fs
xor
inc
inc
inc
js
xor
pop
inc
dec
divb
mov
rol
xlat
lret
in
test
sbb
daa
inc
add
jae
pop
adc
add
hlt
xlat
in
aam
out
xchg
movsb
xchg
fs
push
ja
addr16
and
adc
add
hlt
xlat
in
aam
out
xchg
movsb
xchg
cmpsl
nop
or
mov
rcll
cmpsl
cmp
add
and
cmp
push
push
popf
repnz
fistpll
dec
jg
mov
orb
sub
cs
or
js
fldenv
add
sub
int
fistl
add
in
xchg
or
and
mov
cltd
aad
xlat
jle
push
movsl
adc
mov
lea
mov
jno
int
out
xchg
loopne
fsubr
mov
subl
int
dec
outsl
mov
xchg
sub
insl
cld
imul
int
inc
sub
mov
mov
xlat
dec
movsl
test
push
push
push
cmp
jnp
loop
scas
pop
jne
incb
popa
imul
fwait
lock
inc
xchg
xchg
sbb
mov
and
mov
aaa
fistps
sbb
out
inc
mov
fcmovbe
sub
xrelease
cmc
js
cmp
dec
int
xchg
pop
inc
jl
inc
xor
mov
inc
or
inc
shll
fcmove
pushf
push
push
xchg
cwtl
fdivrl
iret
lock
shrb
mov
not
les
pushf
mov
push
out
sub
lock
jnp
xchg
call
bound
es
cmp
arpl
mov
imul
fcmovbe
fnstsw
inc
jmp
iret
add
lock
jge
adc
je
push
inc
movsb
or
pop
cmp
fimuls
inc
incl
push
cmp
notb
xlat
icebp
and
notb
or
jle
mov
in
pushf
or
mov
xchg
sub
jp
sahf
sub
mov
in
movsb
in
mov
data16
inc
jl
sub
mov
xor
js
mov
cmp
repz
cld
filds
loope
push
dec
dec
push
mov
in
xchg
or
fsubrl
les
inc
xor
mov
fistps
mov
sbb
icebp
pop
xchg
lcall
push
in
adc
mov
and
cmpb
pushf
roll
sub
daa
xor
mov
outsl
cmpsl
cmpsb
mov
inc
ret
rclb
xor
or
xchg
xchg
mov
xor
cmc
das
mov
mov
push
ss
clc
xchg
ljmp
pop
dec
xchg
jmp
subb
js
mov
pop
mov
jno
scas
mov
lea
loop
dec
mov
xchg
ss
test
scas
movsb
cmp
pop
mov
sbb
cld
into
jecxz
adc
push
adc
push
push
jae
lods
mov
lea
add
pop
xor
xor
mov
loopne
add
out
lea
jae
push
rcll
push
ret
cmp
mov
es
jbe
pop
icebp
out
xor
inc
dec
or
jg
push
mov
popa
jecxz
test
js
dec
mov
movsl
mov
or
arpl
cwtl
xor
add
sub
fidivrs
xchg
fnsave
adc
inc
in
sbb
or
int
andl
loope,pt
sahf
jecxz
ret
sbbl
sub
scas
mov
adc
std
push
pop
fbld
insb
pop
iret
xlat
ja
mov
stc
shll
sahf
push
xor
imul
lcall
and
pop
test
jo
ret
das
push
add
stos
idiv
or
int3
inc
xchg
push
cmc
push
add
loopne
sbb
pop
mov
out
js
in
xorb
pop
xchg
mov
sti
into
dec
test
out
or
pop
in
gs
sahf
cmp
ret
mov
ja
jns
das
push
add
or
jle
stos
push
sub
iret
mov
mov
inc
adc
inc
lret
mov
xchg
mov
daa
movsb
in
stc
dec
out
sarb
and
fdivr
test
fs
addr16
fiadds
notl
push
push
push
add
dec
push
lcall
fcoms
dec
inc
adc
jmp
pop
hlt
popf
lcall
pushf
test
data16
xchg
sub
adc
mov
and
dec
xchg
test
jl
imul
and
add
mov
or
push
xorl
scas
adc
sbb
push
out
mov
jbe
push
sbb
pop
cmp
js
test
push
mov
aad
and
add
cltd
sti
ss
xchg
or
aam
mov
sbb
inc
test
ret
outsl
mov
stos
adc
int3
mov
jno
dec
dec
mov
subb
int3
cmpsb
leave
cmp
out
jnp
lret
or
out
cmc
pop
add
adc
aad
add
daa
xchg
ret
cwtl
popa
repz
mov
jbe
ffreep
dec
popa
cltd
inc
jle
lret
xchg
pop
fisttpl
push
pop
xchg
subb
sarl
ds
pop
inc
stos
or
and
dec
mov
ret
movsl
cmp
lea
fwait
subl
or
lcall
pop
mov
fwait
mov
imul
mov
mov
loope
sbb
repnz
mov
out
jmp
ret
test
icebp
cwtl
mov
outsl
sub
mov
jecxz
setne
or
sahf
lds
cmp
or
pop
sbb
push
cmp
push
dec
push
dec
ja
sub
adc
or
cmova
mov
movsl
mov
mov
fdiv
and
mov
mov
xchg
mov
jne
lcall
jns
lret
aam
xor
push
insb
xchg
cmc
dec
test
rcrb
scas
adc
lods
pop
stos
mov
stos
jg
std
scas
inc
fmul
or
addr16
iret
test
imul
std
adcl
mov
cli
add
in
sbb
movb
rcll
and
jl
sub
movsl
sub
cs
loope
jl
mov
pop
nop
mov
mov
bswap
or
ret
fists
jb
insl
stc
push
in
xchg
in
in
mov
cmp
lods
or
dec
mov
out
adcb
pop
out
lcall
add
push
push
lcall
jbe
sub
cld
gs
imul
push
and
mov
xor
add
fwait
out
in
sub
arpl
dec
fistps
push
mov
or
sub
adc
in
fnstcw
outsl
jno
aas
xchg
pop
adc
mov
or
movsl
addb
lea
test
jg
sbb
outsb
pop
into
and
dec
les
inc
dec
clc
adc
mov
movsb
jmp
sub
mov
mov
add
popf
in
inc
popa
jns
mov
cmp
dec
xlat
sti
push
cmp
andb
sbb
pop
lods
das
rcll
push
cltd
or
test
sub
push
repnz
and
aam
mov
clc
add
test
pop
cmp
dec
pop
insl
aaa
inc
inc
call
lcall
notl
xlat
mov
mov
and
les
gs
pop
lea
mov
mov
shll
aad
sub
into
xlat
mov
sbb
push
lret
inc
and
xchg
out
inc
decb
push
pop
fisttpl
nop
out
inc
dec
add
push
in
les
cmpsl
jmp
push
rclb
sahf
stos
mov
pusha
push
lods
repz
fwait
sub
mov
loope
mov
sub
lcall
cmp
movsl
cld
aas
daa
imul
push
mov
fadds
dec
stos
or
push
mov
xchg
sti
pop
decb
dec
adc
int
repz
push
push
jecxz
aas
inc
lcall
xor
aaa
imul
movsb
push
movsl
pop
ja
inc
int
pusha
insb
xor
cmpsb
iret
ja
loope
push
fucom
mov
cmpsb
mov
xor
jo
hlt
mov
pop
inc
call
lea
sub
test
push
push
orb
mov
inc
adc
mov
imul
xor
and
mov
pop
lods
cli
or
fcmovb
scas
and
popf
loop
push
insl
sub
inc
hlt
rcrb
mov
out
das
xchg
inc
sub
testb
into
call
sub
into
xor
push
cmove
adc
push
lahf
push
and
pop
mov
sahf
add
pop
cwtl
loopne
mov
lds
notl
test
data16
clc
lcall
iret
dec
sarl
outsb
cld
roll
into
mov
ficompl
and
andb
dec
fcoms
hlt
jae
mov
cmp
sub
jle
or
lret
or
pop
mov
inc
popf
cmpsb
add
imul
popa
pushf
mov
push
jl
push
xchg
test
test
mov
addr16
mov
cmp
lea
and
int3
adc
mov
xor
adc
xchg
movsb
mov
pop
and
icebp
out
jecxz
shll
je
aam
jns
and
pop
loop
cli
shll
je
add
sbb
jle
movsl
pop
adc
test
fidivs
mov
pushf
lret
push
arpl
out
xchg
and
test
mov
test
cmc
mov
sbb
enter
insb
push
inc
fmuls
loop
jle
mov
icebp
jb
dec
inc
dec
hlt
imul
fwait
dec
inc
fs
mov
push
and
xchg
loop
push
movsl
pop
ficompl
mov
dec
adc
cmpb
in
xchg
cmpsb
push
inc
sbb
gs
mov
dec
push
insb
pop
xor
push
test
pop
dec
stc
jno
outsb
mov
add
ret
es
mov
mov
imul
mov
dec
dec
mov
adc
pop
orl
pop
repz
mov
mov
adc
pop
mov
pop
add
aas
or
ja
pop
enter
push
mov
xor
mov
scas
pop
xchg
cmp
mov
out
ficompl
jns
xorl
andl
pop
addr16
or
js
in
xchg
cs
sbb
iret
pusha
clc
hlt
mov
mov
scas
int3
cltd
sahf
mov
xchg
mov
dec
inc
jl
imul
push
test
leave
pop
pushf
out
in
mov
mov
inc
fcoms
jl
ja
mov
xchg
push
dec
mov
sahf
lcall
xor
mov
loopne
add
and
imul
mov
push
inc
addr16
sbb
popf
inc
lea
dec
jnp
stc
push
pop
out
sbb
cmp
mov
dec
mov
mov
movsl
dec
in
inc
loope
lods
sbb
das
pushf
add
sahf
icebp
xor
stos
out
and
ret
xchg
repz
test
lock
in
lret
ret
shlb
mov
clc
lds
sub
mov
adc
mov
dec
lcall
jne
pop
fstl
push
and
cmc
ret
cmpsl
xchg
jge
xchg
adc
in
mov
test
fnstcw
mov
out
fs
test
mov
xor
inc
dec
lock
or
and
mov
fwait
inc
xor
inc
xchg
mov
pusha
mov
cmp
adc
push
iret
stos
leave
sub
and
std
xor
pop
mov
inc
adc
fstpt
push
sub
sub
in
jnp,pn
popf
adc
add
jb
div
scas
xchg
hlt
adc
mov
lahf
ljmp
xchg
clc
divl
lcall
jl
aad
lea
insl
mov
loop
cmp
mov
cmpsl
jge
push
jp
cmp
dec
fstps
mov
fsts
outsb
pop
out
fdivs
mov
push
cmp
dec
leave
cmpsb
inc
inc
pop
out
es
sub
mov
push
jo
prefetch
push
xchg
aad
dec
hlt
pop
fistpll
out
cmp
mov
mov
fucom
outsl
add
inc
push
xchg
mov
in
lock
sbb
jle
push
out
mov
pop
xor
or
push
bound
imul
cwtl
jb
sbb
pushf
lods
gs
stos
push
mov
add
test
inc
sub
in
jae
xor
mov
inc
pop
cli
xchg
add
repnz
test
jae
cmc
jne
mov
clc
lret
cmp
test
push
gs
mov
xor
stc
ret
ret
push
les
pop
cmpsl
nop
rorb
int3
out
call
ss
sbb
sub
sahf
arpl
fdivl
mov
gs
push
insb
das
aas
daa
and
pop
scas
mov
jbe
push
mov
xor
out
add
mov
roll
or
add
sbb
pusha
cmpsl
jmp
repz
loope
or
loopne
mov
jle
inc
xor
test
pop
mov
lock
xchg
push
sub
mov
daa
fdivrp
or
fmul
in
into
push
cmp
adc
outsl
fucom
push
xchg
and
mov
dec
add
jns
test
mov
add
sub
mov
ljmp
xchg
sbb
mov
jne
fcompl
sbbb
addr16
in
xchg
dec
repnz
mov
test
lcall
sub
inc
push
add
cmp
cltd
jp
adc
cmp
imul
test
lods
movsb
rcll
test
loopne
aas
sbb
cmp
push
imul
sbb
and
leave
jl
aam
xchg
sub
sub
scas
mov
je
pop
and
mov
jbe
lret
pusha
lods
lcall
pop
ja
mov
popf
adc
leave
and
movsl
push
and
insb
lods
or
inc
xchg
and
pop
iret
mov
add
imul
xchg
sti
xchg
test
cltd
flds
sahf
cltd
cmp
mov
push
push
orl
roll
pop
inc
adc
repnz
jmp
add
leave
in
inc
inc
out
pusha
mov
sar
sahf
pop
sbb
mov
and
mov
stc
inc
sub
mov
pop
mov
test
lock
dec
out
stos
jnp
xor
jl
push
and
repz
add
and
add
mov
fs
icebp
scas
cmpxchg
push
imul
jne
adc
or
or
cmp
cmpsb
es
or
inc
jae
push
xchg
or
test
repz
ret
fisttps
mov
mov
ret
xchg
or
sbb
dec
push
or
or
fdivrs
lret
inc
loope
imul
call
cltd
xchg
push
lahf
xor
fdivr
sbb
add
imul
clc
sahf
fstpl
testl
notb
addr16
aad
sbb
out
lret
lret
mov
inc
push
ja
add
pushf
push
mov
jnp
test
ret
call
mov
imul
mov
out
mov
mov
xchg
div
nop
pop
aas
ja
inc
mov
xor
or
lods
adc
jo
call
dec
imul
jg
and
loope
xor
pop
fmul
pop
roll
rep
mov
xchg
jne
pop
jg
lcall
mov
popf
dec
xor
adc
pop
icebp
sti
pcmpeqd
loope
rclb
sbb
xchg
jg
mov
add
mov
jno
mov
out
leave
lods
cmp
ror
xlat
lds
jo
inc
pop
push
outsl
pop
fcomps
sub
dec
push
push
xchg
mov
mov
mov
aas
dec
adc
mov
mov
mov
cmpl
rcr
pop
jo
pusha
mov
movsl
insl
sub
scas
lret
mov
sub
jnp
stos
bound
cmp
adc
js
mov
data16
outsl
enter
int
dec
adc
push
mov
inc
dec
add
sub
loop
mov
xchg
xchg
jle
add
inc
popa
in
mov
add
lods
jle
hlt
dec
sbb
sahf
testl
dec
dec
or
add
mov
insb
push
pop
pop
stc
dec
mov
popf
mov
push
inc
adc
or
push
cmp
xchg
lods
cmp
sub
fdivs
into
mov
test
lea
aam
add
cmp
lahf
lea
mov
mov
into
into
arpl
loop
mov
sarb
ss
sti
mov
fists
add
xchg
dec
add
out
pop
test
inc
mov
es
sbb
xor
jecxz
call
pop
pop
push
addl
adc
leave
cli
ret
sub
fcoml
js
push
add
leave
cmpsb
jo
jnp
clc
mov
mov
inc
sub
in
js
in
sub
xchg
xchg
mov
insl
data16
pushf
jge
repnz
mov
pusha
lods
xchg
fucom
cmp
adc
call
jmp
lahf
xchg
mov
dec
sbb
cmc
loope
movsb
std
mov
pushf
movsl
int
stos
adc
pop
push
js
xor
mov
inc
pop
test
inc
and
dec
mov
mov
push
cmp
jmp
out
test
sbbl
mov
pop
pop
xor
scas
lods
mov
and
and
je
popa
xor
jae
push
rorl
cld
xor
ror
or
loopne
adc
arpl
mov
sbb
icebp
movsl
out
sub
xor
mov
ficoml
pop
mov
adc
mov
pop
aad
push
jne
xchg
pop
add
dec
pop
stos
or
push
pop
aam
loop,pn
xchg
ret
shl
fidivs
out
iret
mov
jno
dec
xchg
sahf
cmp
xchg
insb
cs
test
fmulp
inc
push
sub
ds
cmc
inc
push
repz
mov
xor
or
orb
or
and
aam
fldl
out
pop
mov
add
movsb
cmpsl
dec
push
js
xor
into
jg
aad
sbb
ljmp
les
cld
add
dec
test
jecxz
mov
in
out
push
jl
bound
mov
std
mov
ss
jnp
int3
inc
aaa
xor
and
icebp
adc
mov
or
xchg
loop
add
sub
mov
xchg
ja
mov
popf
push
sahf
ss
mov
sbb
sub
lahf
fdivrs
int3
dec
sbb
xor
xorl
call
push
dec
cld
push
out
testl
push
in
cld
push
inc
add
stos
stc
xor
into
xor
pop
dec
fld
lcall
push
scas
bound
xchg
mov
xchg
fwait
test
cmc
mov
insb
into
shr
sti
pop
cmpsl
jns
xorl
aad
scas
xchg
cmp
sub
and
adc
xchg
push
xchg
lcall
fsubr
xor
es
lods
clc
aam
or
sub
xor
testl
xchg
cmpsl
inc
push
xor
outsl
imul
dec
call
mov
out
mov
adc
nop
roll
call
or
test
loop
rorl
sbb
repnz
fdivs
insb
jecxz
outsl
das
adc
or
out
sbb
adc
mov
or
rcl
lock
icebp
test
ja
jmp
xchg
cmp
ds
inc
lods
pop
int3
gs
mov
out
sub
sub
sti
inc
shrl
cmp
cmp
ds
push
inc
add
xlat
in
add
jecxz
or
xchg
add
inc
stc
pop
add
jp
icebp
dec
jbe,pn
into
jle
out
inc
seto
icebp
out
iret
dec
pop
insl
mov
mov
mov
cmpsb
les
or
jae
lcall
dec
and
mov
pop
push
mov
enter
rorb
fdivrl
icebp
xor
xor
std
dec
lret
and
fistpll
sbb
or
mov
scas
fwait
and
outsb
jns
fistl
push
lods
out
dec
dec
lret
jno
pop
sti
lret
pop
sahf
adc
cld
in
mov
jl
push
xchg
je
push
mov
stos
mov
insb
pop
add
mov
mov
movsb
ret
xchg
add
imul
in
lods
pop
push
jl
xchg
paddusw
mov
daa
xor
test
push
pop
xchg
aam
cmp
mov
mov
scas
mov
xor
mov
enter
cmp
push
or
movsl
adc
sbb
mov
cmpsl
jecxz
dec
jecxz
and
fnstenv
mov
sub
stos
cwtl
mov
loopne
or
mov
into
inc
mov
imul
push
out
jmp
inc
and
mov
incl
add
sbb
pop
and
adc
add
hlt
xlat
in
aam
out
xchg
movsb
xchg
fs
push
ja
addr16
and
adc
add
hlt
xlat
in
aam
out
xchg
movsb
xchg
andps
inc
addr16
and
adc
add
hlt
pmulhuw
shl
out
xchg
mov
cmpsl
inc
push
push
inc
bound
data16
and
xchg
mov
daa
or
sbb
test
js
dec
jnp
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
