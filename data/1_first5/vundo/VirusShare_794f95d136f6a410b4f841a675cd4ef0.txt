cltd
testl
add
add
add
add
adc
add
ret
push
add
mov
push
add
or
push
jmp
add
gs
add
add
add
or
add
inc
add
add
ja
add
int
add
or
mov
or
add
sub
add
popf
or
add
pop
or
out
inc
or
fidivl
add
or
pop
mov
push
add
loope
add
call
or
fldenv
add
sub
add
sub
or
in
push
add
add
loopne
add
add
fwait
add
add
or
add
sbb
add
scas
push
add
push
add
mov
or
jecxz
add
lcall
add
push
add
ss
add
or
xchg
stos
lldt
push
add
call
lods
sldt
rorl
add
inc
or
cmc
push
push
add
add
pop
orl
add
inc
add
clc
xchg
add
and
or
dec
push
or
add
or
mov
ss
mov
add
test
add
jmp
push
add
or
mov
aad
add
or
or
add
roll
add
sub
add
popa
add
pop
or
add
add
or
or
jge
pop
add
jae
add
loop
add
jp
add
add
verw
xor
add
ljmp
inc
filds
add
and
add
mov
add
or
or
xchg
add
add
or
loopne
add
jne
or
and
add
push
add
add
stos
add
fcoms
add
add
inc
or
popa
mov
or
add
mov
pop
add
or
test
or
out
ljmp
xchg
out
add
xchg
add
and
hlt
or
sbb
or
push
cmp
add
add
or
adc
verw
add
add
repz
rcl
add
nop
and
add
xor
add
orb
sub
or
les
add
jle
add
popa
add
push
or
xchg
push
add
push
add
push
rorl
cmp
add
loop
add
add
sub
push
add
or
test
or
add
or
add
gs
add
jge
add
mov
add
in
add
jo
add
les
add
add
or
pop
inc
or
ds
or
loop
add
adc
or
adc
fildl
add
test
add
add
lea
pop
add
inc
or
enter
xchg
or
add
sub
imul
add
adc
add
push
add
dec
or
cs
add
add
int3
scas
verr
add
or
add
add
add
sbb
add
repnz
std
adc
add
mov
add
stos
ret
add
lods
adc
add
cmc
push
add
xor
add
add
je
add
add
or
xor
or
jle
or
fildl
add
or
sbb
add
std
add
xorb
pop
push
mov
addw
andw
pop
xor
jmp
movl
mov
mov
push
mov
addl
pop
and
mov
and
jmp
sub
mov
push
popl
and
cmp
jne
lea
mov
push
or
mov
popl
mov
mov
and
andl
jo
push
mov
addb
pop
cmp
je
xor
push
popl
ret
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
sbbw
pop
push
mov
add
push
push
push
push
mov
addb
pop
push
mov
mov
add
pushl
mov
add
add
mov
add
addl
xor
lea
mov
push
mov
sbbb
pop
add
mov
xor
rol
xor
inc
push
mov
sbbb
xorl
pop
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
push
xor
add
popl
mov
add
mov
add
pop
push
mov
andw
andl
pop
cmp
jbe
cmp
jae
pushl
pushl
push
mov
orl
orl
pop
sub
movl
addl
pushl
push
mov
subl
andl
pop
call
call
pop
pop
pop
pop
push
mov
subl
pop
leave
ret
call
test
jne
ret
push
push
mov
add
call
sub
movl
addl
push
mov
orw
pop
push
call
push
mov
subw
pop
push
push
lea
mov
add
xchg
mov
pusha
call
mov
sub
movl
push
popl
addl
push
call
mov
mov
push
mov
xorw
pop
xor
xor
rol
inc
dec
jne
cmp
je
push
mov
andb
andb
pop
cmp
jne
popa
shl
push
xor
push
call
push
mov
push
push
mov
movb
subl
pop
jmp
jmp
popa
shl
push
xor
push
call
push
popl
push
mov
push
jmp
pop
mov
push
push
jmp
cmp
adc
dec
stos
icebp
jg
or
xchg
mov
hlt
xor
jmp
sbb
sub
es
fwait
mov
rcr
nop
repz
mov
or
mov
rep
push
popl
pop
pop
push
sub
inc
shl
add
mov
mov
ror
mov
add
xchg
push
push
dec
add
mov
xor
pop
push
mov
xorb
pop
xor
jmp
sub
push
mov
sbbw
pop
mov
add
sub
mov
add
or
jne
pushl
popl
add
jmp
call
dec
or
and
mov
xchg
fadd
mov
ja
test
pop
push
insl
add
ret
adc
sbb
push
jns
subl
in
xchg
sub
rorl
das
popf
xor
push
sub
sbb
push
fsubrp
loopne
sti
inc
dec
mov
ljmp
push
out
or
lock
negb
inc
jno
xor
pop
ja
mov
ret
sahf
popa
insb
imul
adc
addb
call
push
aam
fucomp
cmpsb
push
stos
fldenv
aam
mov
aad
mov
sbb
stc
xor
out
pop
sub
push
xchg
rol
sbb
pop
mov
adc
xchg
fwait
jle
rolb
jecxz
stos
sub
js
pop
push
daa
jmp
enter
xchg
in
push
cld
int3
mov
add
neg
jmp
xchg
add
lds
push
fldl
loop
xchg
xchg
sbb
inc
leave
mov
fnsave
mov
xor
add
out
subb
stos
fiadds
xor
lret
shrb
mov
imul
int
mov
mov
dec
and
in
enter
das
mov
fld
lods
adc
xchg
ja
stos
out
mov
add
push
cmpsl
lcall
mov
mov
pusha
dec
imul
cmp
rcrb
decb
insb
jo
fcoms
mov
pushf
xchg
clc
cmp
sub
dec
mov
dec
adcb
leave
dec
in
lahf
add
add
pop
xor
js
dec
mov
sbb
adc
xchg
dec
mov
dec
test
pop
pop
enter
push
out
sbb
mov
push
clc
mov
stc
sub
into
lock
fdiv
lock
sub
jno
repz
sbb
inc
mov
cwtl
and
repnz
lret
jbe
sbb
mov
add
sub
xchg
rorb
lcall
jecxz
das
fs
inc
pop
xorl
notl
sub
and
cmp
pop
sub
jmp
in
jecxz
mov
in
inc
arpl
and
test
sub
lahf
cmp
sub
in
lods
fs
out
adc
mov
lcall
xchg
pop
xchg
and
fs
ja
pop
add
and
imul
aad
repz
mov
insb
pop
adc
lret
push
push
dec
jae
mov
or
test
jns
out
adc
loopne
std
sub
sahf
cmp
xchg
lods
es
enter
or
mov
test
mov
mov
lret
imul
cmc
mov
rcrl
sub
dec
aam
cs
mov
push
xor
outsl
icebp
push
neg
jg
xchg
xor
imul
push
cmp
inc
jno
hlt
sbb
dec
add
xchg
sub
nop
mov
push
ss
daa
jne
stos
xor
imul
mov
or
mov
jnp
fbstp
add
cmpsb
and
xchg
push
test
mov
push
dec
jge
sub
leave
push
mov
arpl
push
ja
sub
jns
inc
cld
aad
sub
adc
arpl
or
xchg
setne
imull
decb
push
adc
adcl
mov
fisttps
into
push
fildll
in
or
aad
sub
mov
push
xchg
stc
popa
imul
test
rcrb
jmp
in
adc
jae
push
pop
jae
mov
inc
push
lds
mov
inc
cmp
mov
std
std
xchg
decb
dec
push
fldl
add
and
jl
jo
and
inc
dec
cs
repnz
mov
rorl
test
sbb
push
stos
mov
sub
adc
push
jne
mov
pop
mov
add
in
int
jo
enter
cltd
popa
cmpsb
push
addr16
int
mov
out
cli
lods
fisubrl
xor
ret
shrb
add
fnsave
fs
popa
pop
inc
mov
sub
add
mov
cs
pop
mov
movsb
adc
out
aaa
popf
pop
adc
pop
add
sarb
or
rorl
xor
std
fbstp
fldenv
pop
mov
xchg
loopne
mov
jno
loope
dec
pop
or
mov
mov
mov
jge
or
jp
call
inc
es
mov
jge
mov
das
inc
xor
out
testb
mov
cs
int3
jge
mov
dec
lods
mov
incb
jp
pop
add
push
ja
xchg
inc
jno
xchg
push
cltd
decb
out
ljmp
lock
rorb
xchg
cmp
dec
jp
mov
cltd
mov
ret
sbbl
leave
std
js
xor
into
lock
cli
cli
les
pop
je
fbld
cmovge
inc
jno
mov
mov
mov
cld
xor
in
mov
pop
fildl
add
enter
rorl
xchg
pop
cmp
pop
dec
clc
lods
and
js
jecxz
das
pop
xor
js
dec
sbb
jl
sbbb
stos
in
rcll
lods
mov
mov
push
adc
int3
inc
and
jbe
push
or
pop
mov
pop
repz
mov
sbb
fbld
movsb
cmp
loop
jmp
in
xor
pushf
fstpt
push
or
inc
jmp
add
pop
std
push
sbb
leave
add
dec
stc
xchg
push
push
mov
lods
push
mov
dec
jle
adc
fs
jne
mov
fwait
pop
ds
jmp
dec
orl
jno
mov
ficoms
pop
mov
mul
sub
mov
sbb
push
mov
mov
hlt
jne
dec
sbb
inc
mov
nop
push
add
mov
or
arpl
jno
push
ret
dec
je
sbb
ja
push
addl
mov
xchg
test
push
in
pop
out
decl
push
mov
cmp
fldl
mov
push
sub
lea
add
mov
inc
pushf
jp
gs
repnz
jo
mov
mov
cs
gs
push
fldl
adc
mov
test
shll
popa
pusha
add
mov
xchg
mov
cmc
pushf
pop
insb
ds
movsb
xchg
pop
imul
pop
and
or
adc
xchg
iret
rcrl
inc
fldl
cmpsb
lret
inc
mov
pushf
and
addr16
inc
inc
jecxz
adc
aam
imul
inc
jmp
gs
xor
and
scas
out
ja
roll
xchg
movsl
mov
pop
mov
insl
jg,pt
mov
negb
rol
jmp
jb
fstp
fsubl
lahf
jno
jmp
mov
adc
fucomi
ja
mov
mov
into
dec
xor
incl
pop
mov
mov
and
addr16
pop
xor
je
mov
jnp
cwtl
dec
jb
packsswb
push
lret
aas
sub
jle
mov
pop
dec
sub
pushf
xor
ret
sbb
and
lcall
aaa
iret
movsl
xchg
and
sbb
mov
xchg
sbb
scas
inc
inc
fldl
jnp
loopne,pt
sbbl
nop
push
dec
lahf
sub
mov
push
ret
mov
sub
clc
ret
xchg
int3
clc
pop
push
int3
dec
xor
fs
dec
mov
or
inc
jmp
and
adc
int
and
lds
fldlg2
ret
out
lcall
cmpsb
js
mov
push
xchg
or
jae
adc
sbb
or
xor
mov
dec
roll
aas
jae
inc
mov
ljmp
mov
cmpsl
mov
jne
fldl
cmp
cmp
sti
bound
sub
xchg
xor
push
fwait
adc
js
repnz
push
sub
mov
cmc
adc
fwait
cld
push
dec
pop
dec
sub
cmc
in
dec
inc
icebp
adc
xchg
scas
pop
mov
sbb
push
decb
out
loope
xchg
cmc
sub
ja
push
cwtl
ljmp
mov
sbb
push
pusha
sub
insl
push
popa
mov
mov
jno
jmp
sub
dec
xchg
dec
or
pop
insl
pop
shrl
ja
push
push
ret
sub
add
outsl
hlt
test
fs
mov
push
loop
jle
push
lcall
lea
dec
mov
inc
jno
leave
hlt
xchg
sbb
inc
sti
out
push
out
pop
cltd
fimull
mov
mov
lods
test
enter
cmp
ja
xor
mov
adc
or
xchg
or
sahf
mov
mov
idivb
cltd
sbb
xor
adc
push
push
cli
repz
push
dec
jl
dec
pop
xor
jno
shl
sbb
inc
mov
adc
js
scas
mov
pop
sub
data16
jle
insl
adc
mov
jle
movsb
push
push
pop
dec
cmp
fcoml
cmpsl
pop
mov
mov
pushf
pop
jmp
jbe
and
mov
inc
sbb
inc
sub
pop
ret
mov
fsin
lahf
jb
cmpsb
jne
faddp
mov
cmpsb
hlt
push
sbb
sub
add
cmp
inc
inc
cltd
and
aaa
mov
outsb
cmp
sub
mov
jnp
xchg
or
shl
enter
sarl
repz
addl
pop
pop
push
hlt
cltd
sbb
inc
push
xor
mov
cli
mov
mull
mov
xchg
scas
out
jns
sub
scas
aad
xchg
mov
add
inc
into
call
call
lods
xchg
pop
jp
or
inc
jno
xor
imul
addr16
and
lret
mov
out
stc
popf
mov
and
or
xlat
daa
lods
mov
aas
int
lahf
cli
mov
xchg
leave
dec
pop
jge
or
cld
xor
jecxz
sub
xor
and
mov
and
sbb
mulb
xchg
dec
enter
cmp
xor
fimull
pop
icebp
fimuls
jg
pushf
xchg
out
andb
fcmovb
sub
call
call
out
dec
lods
cmove
mov
dec
inc
fldl
fs
cmp
mov
mov
arpl
shl
mov
gs
mov
hlt
insl
ficoms
adc
push
sahf
pusha
movsl
cli
push
iret
rcrl
sbb
jno
push
or
bound
bound
shr
add
jbe
adc
or
mov
dec
fsts
add
ret
mov
inc
in
test
dec
bound
sub
rcr
mov
adc
roll
or
outsb
cmc
shll
loope
cld
or
in
mov
mov
test
dec
cmp
fucomi
push
in
ljmp
les
out
lcall
push
rcrb
or
push
xor
in
fcompl
into
in
pop
mov
stc
mov
imul
mov
adc
lock
push
hlt
dec
and
cmc
add
jbe
dec
cli
fstl
pusha
add
scas
pop
enter
jg
cmp
test
js
in
pop
aad
mov
cmpsl
cmp
jno
xchg
fsubl
in
xor
test
and
pop
jo
push
pusha
mov
sub
jecxz
or
dec
fidivl
test
lret
mov
mov
jae
in
ret
movsl
xchg
ss
mov
xor
push
mov
jecxz
movsl
push
cmpsb
sbb
jmp
sti
cmpsl
ljmp
dec
sub
test
ja
or
pop
lods
stos
aad
or
adc
mov
out
push
decb
adc
jb
jnp
cmpsb
and
mov
push
and
ret
pop
aam
mov
dec
ret
jno
xor
pop
pop
mov
pop
je
mov
int3
add
xchg
ficomps
decb
fs
stos
rclb
icebp
push
test
divb
out
mov
xorl
xchg
dec
mov
pushf
mov
clc
cmp
sbb
incb
push
repnz
xchg
lcall
outsl
push
je
hlt
pushf
inc
pop
aam
adc
inc
stos
xchg
and
pop
jo
sbb
mov
shll
int3
les
icebp
inc
add
loopne
mov
lahf
fwait
and
cmp
cmpsb
frstor
xchg
mov
or
inc
add
idivb
push
push
push
and
popf
pop
in
cwtl
lea
popf
mov
and
xchg
stos
mov
pop
loop
mov
push
in
in
bound
addr16
stc
out
test
decb
fs
mov
sub
inc
jle
icebp
in
pop
outsb
outsl
sbb
inc
cmp
imul
adc
loopne
mov
xchg
fwait
mov
inc
and
xor
cs
jbe
out
mov
loope
mov
dec
incb
pop
leave
aaa
mov
pop
xchg
decb
fs
testl
and
lds
push
jo
jno
sbb
fwait
lods
add
xchg
lds
or
cmp
clc
aam
push
and
sbb
inc
jno
je
dec
movsb
loopne
jno
cmp
sbb
sti
das
aam
loope
imull
add
jmp
xchg
scas
xchg
push
xchg
rolb
in
outsl
mov
clc
dec
pop
sbb
ret
aam
xchg
jp
imul
push
repz
xor
inc
hlt
fcomip
or
movl
sbb
repnz
sub
push
cltd
push
mov
adc
dec
cmp
pmaxub
popa
dec
jp
inc
jno
jae
dec
aaa
fldl
or
lret
pop
cli
enter
shl
pop
mov
cmpsb
pop
pop
enter
push
push
daa
pop
pusha
rcrl
popl
sbb
inc
shr
inc
mull
decb
and
sahf
fwait
push
inc
and
or
push
sbb
int
fisubs
scas
mov
test
aaa
sti
cmp
xor
push
and
or
mov
fsubrp
shll
test
mov
mov
or
stos
sbb
ss
jle
bound
or
push
mov
dec
mov
mov
pop
in
enter
add
dec
jno
mov
dec
push
fldl
sub
arpl
push
fidivrl
mov
mov
xor
xor
enter
pop
add
gs
arpl
mov
pop
inc
loopne
jae
addr16
xchg
repz
fldl
jl
cmpsb
ficoml
cli
cs
sub
jbe
sbb
into
push
fisttpl
sub
ret
jp
adcl
ret
es
dec
or
sbb
aam
enter
pop
int
push
cld
push
adc
mov
ljmp
cwtl
mov
loope
mov
enter
sub
test
xlat
push
repz
sub
inc
pop
mov
or
popa
xchg
sbb
dec
test
mov
push
rorl
jae
fs
push
js
fnstsw
mov
cli
pop
push
repz
sbb
jno
adc
sbb
xchg
or
and
outsb
xchg
aas
add
stos
icebp
jne
jno
push
jge
imul
aad
mov
push
ror
adc
test
mov
inc
mov
mov
push
mov
and
xchg
jp
dec
lret
mov
push
rcr
sbb
out
or
push
cs
add
nop
add
inc
cmpsl
or
insl
std
lock
mov
mov
adc
and
push
push
into
shll
in
outsb
repz
sub
inc
pop
jno
mov
lea
xchg
xlat
rcrb
dec
cmp
lock
ss
dec
fmull
pop
out
cmp
pop
mov
fs
sbb
sub
scas
out
jge
fldl
outsb
or
scas
mov
loope
dec
push
sub
test
push
cmp
sbb
push
inc
jno
or
xor
out
sbb
mov
test
cmp
clc
dec
mulb
adc
sbb
test
inc
sarb
cmpl
pop
xchg
decb
fs
xchg
bound
jns
mov
jns
push
push
rclb
dec
pcmpgtw
cmp
adc
adc
or
mov
mov
mov
inc
xor
pop
dec
aas
xorb
or
mov
mov
mov
push
inc
loope
pop
in
fwait
add
and
jbe
push
pop
add
xchg
push
imul
in
dec
pop
dec
push
fldl
add
sub
or
cmp
dec
popa
cmpsl
mov
mov
addl
lds
jge
sbb
repz
lods
pop
mov
sarl
cmp
dec
push
and
mov
ffree
ret
gs
sahf
push
xor
adc
mov
xchg
idiv
xor
int
sbb
sub
jmp
adc
rcrb
in
gs
out
pop
push
lods
push
dec
out
in
add
lcall
out
iret
pop
in
mov
enter
cmp
fsubr
divb
jo
js
add
lock
into
xor
lahf
push
loop
jns
mov
sti
xor
cld
xlat
push
xchg
mov
lock
dec
xor
or
pop
push
fwait
movsb
scas
xlat
lret
adc
or
je
lods
xor
in
int
scas
jnp
in
imul
rol
iret
push
push
add
add
popf
js
or
mov
popa
push
sarb
dec
dec
les
addr16
pop
cld
test
nop
and
popa
cmp
movsl
mov
pop
jg
insl
cmp
mov
inc
push
mov
cmp
sbb
ret
jns
cs
pop
lds
mov
or
xor
xchg
sub
jo
xchg
adcl
bound
imul
xchg
cltd
xlat
les
push
xor
insb
jecxz
das
pop
xor
js
xlat
push
repz
inc
fldl
decb
fs
test
mov
enter
rcll
shlb
nopl
lea
pop
cmpsb
popa
mov
dec
fiadds
adc
iret
xor
enter
or
jl
cmp
jmp
in
xchg
out
dec
adc
pop
xchg
decb
fs
pop
mov
pop
add
stc
fadds
daa
iret
xchg
dec
xor
decl
add
lret
or
pop
or
sub
sbbl
push
loop
jbe
sub
fisubrs
adc
push
pop
mov
or
inc
jno
sbb
and
pop
mov
mov
test
loope
sbb
pop
fs
push
mov
xor
popa
iret
xchg
test
sar
jae
aas
into
push
xchg
or
push
cmp
jg
gs
test
xchg
jo
cmp
sbb
stos
scas
ljmp
mov
or
cmp
fndisi(8087
and
decb
out
outsl
jmp
sbb
pop
fldl
in
inc
sbb
fldl
inc
push
std
xor
cmpsl
push
fs
movsl
mov
frndint
add
lock
aam
loope
pop
sub
pop
ss
mov
js
adc
ret
fwait
pop
loopne
mov
addr16
mov
push
negb
jbe
adc
xlat
adc
adc
inc
aad
into
and
loop
and
jp
rcr
jns
sub
fstpt
test
pand
cli
mov
out
pop
call
xor
out
loope
add
dec
jns
xorb
cmp
cmpl
movsl
cmpsl
xchg
insl
cmp
pop
xchg
dec
jb
out
xchg
push
sub
ficomps
lds
bound
and
aam
jb
decb
jno
add
cmpsl
add
inc
jno
imul
in
dec
pusha
pop
movsb
jmp
inc
mov
scas
sub
xor
push
popa
decb
in
repz
jno
jb
jnp
jp
mov
pop
shlb
fiadds
jo
cli
mov
enter
cmp
mov
xorl
add
add
ds
mov
mov
nop
dec
cmpsl
mov
shrb
rcll
add
xor
out
insl
jno
stos
outsl
xor
pop
imul
test
sbb
insl
test
sub
xchg
inc
mov
lods
inc
inc
mov
aad
mov
add
imul
fstpt
divl
rorl
ja
add
and
mov
mov
sub
or
out
jo
cmc
shl
loopne
sub
js
imul
loope
sub
dec
rcrl
add
adc
sbb
sbb
inc
jno
mov
inc
icebp
dec
sub
sbb
fcompl
cmpsl
sbb
test
inc
xor
sbb
test
iret
mov
fnsave
loop
inc
xor
and
insl
flds
xorl
sbb
cs
adc
sti
notl
mov
daa
jno
jb
mov
pop
cwtl
pop
push
mov
pop
lea
cwtl
mov
andl
ljmp
inc
stos
push
imul
pusha
shl
mov
pop
push
fidivs
add
mov
xor
sahf
es
pop
pop
lock
sbb
in
xorl
cmp
mov
sbbl
jmp
sub
jmp
andl
adc
aad
std
jbe
sub
push
sarb
into
jne
add
jns
hlt
jno
cmc
jg
sub
jecxz
std
push
xor
shrb
cld
add
pop
sub
mov
imul
movsb
dec
jl
sub
into
fistpl
or
fdivr
pop
cmp
scas
sub
mov
fs
push
mov
push
les
push
add
dec
inc
fldl
mov
push
in
pop
lds
jp
mov
mov
sbb
lret
es
sub
inc
pop
imul
fmuls
mov
je
add
stos
int
cmp
cmp
and
ret
ljmp
stos
mov
mov
inc
loope
stc
enter
stos
aaa
test
cmpsb
jge
rol
int3
add
jno
pop
jae
repz
sbb
inc
shll
cmp
and
sahf
addr16
repz
pop
dec
inc
cld
aas
or
sub
out
xchg
daa
sbb
lahf
sbb
ret
jb
dec
hlt
dec
add
popf
sbb
inc
mov
mov
push
add
lods
inc
in
and
sub
int3
and
adc
cmp
cwtl
xchg
cltd
test
add
add
add
mov
fs
mov
lahf
ja
or
add
dec
sub
lock
push
and
mov
jmp
mov
sbbb
addb
stos
sub
xorb
shr
shrb
lock
sbb
xorb
xlat
push
cmp
lds
pop
cmp
push
add
js
inc
inc
dec
pop
xchg
mov
lods
add
mov
and
insl
cwtl
xchg
cmp
into
int3
rolb
daa
sub
decl
mov
jnp
push
add
nop
jle
mov
les
jno
push
jb
cmc
mov
pop
lret
stc
notl
mov
mov
stos
test
pop
out
or
jae
in
add
or
scas
sub
movsb
insb
hlt
add
lea
or
stos
inc
add
pushf
lret
subb
inc
jmp
mov
sub
pop
decb
dec
aas
fldl
scas
push
out
sbb
in
jne
dec
pusha
push
fdivrl
push
inc
push
dec
xchg
fdivrl
addr16
or
dec
push
mov
or
fmul
adcl
aad
cs
shl
push
jecxz
jle
daa
jne
mov
inc
jae
sub
rolb
inc
jno
stos
dec
mov
add
mov
xchg
pop
ror
xchg
mov
xor
mov
xor
mov
popa
jno
aaa
popa
ss
arpl
arpl
adc
pop
or
xor
shrb
rcll
outsl
push
or
xor
test
aas
sub
lea
inc
lret
jle
das
cs
fmul
out
mov
test
je
shlb
add
or
dec
cmp
insl
mov
inc
sub
mov
inc
call
pop
and
mov
hlt
jne
mov
xchg
xchg
fldl
jbe
xorb
jno
push
pushf
sahf
push
inc
cmp
pop
fistpll
cwtl
sbb
iret
clc
ret
push
adc
gs
ss
cmp
or
lahf
dec
dec
sub
jle
add
push
pop
pop
or
mov
cs
sbb
jo
push
notb
daa
js
mov
in
jbe
lods
mov
inc
leave
lcall
loopne
dec
mov
aas
out
jg
fistps
call
inc
nop
jbe
testb
cmc
aam
xor
int
sbb
sub
fstpl
jae
andl
fstp
cltd
js
sarl
aam
nop
lahf
mov
gs
adc
into
adc
push
data16
fstpt
xchg
push
add
xchg
sub
enter
jne
mov
jns
lea
push
sub
mov
jmp
dec
cmpsb
std
inc
jno
ljmp
lea
mov
mov
push
lret
and
leave
popa
inc
imul
cmpsl
mov
add
stos
xor
xchg
dec
negb
add
xchg
icebp
pop
mov
sbb
lds
mov
jns
push
ja
pop
out
sti
jmp
dec
rclb
sub
adc
mov
test
fldl
jbe
xorb
pop
ja
les
stos
fcmovnbe
sti
adcb
jo
add
cmpsb
inc
out
std
fldt
loopne
cli
ror
les
mov
nop
push
test
push
pop
jnp
sub
lret
clc
or
xchg
sbb
xor
push
or
dec
pop
xchg
decb
add
js
testb
push
jmp
cmp
aam
fs
jl
inc
bound
les
cs
jns
and
stc
mov
fimull
movsl
insb
adc
adc
lds
mov
add
pop
xor
js
dec
xor
dec
lcall
in
pop
sub
mov
mov
ljmp
pop
stc
mov
pop
loope
jb
popf
popa
mov
mov
cld
push
pushf
xchg
repz
fldl
cmp
es
jae
push
jne
repz
outsl
add
js
cmp
jge
or
sub
jg
rcrl
aam
pop
daa
les
mov
inc
push
lds
out
lock
test
dec
push
sbb
fdivr
divb
fistpl
sbb
hlt
inc
or
es
addr16
cs
fs
stos
sbb
inc
fwait
push
inc
in
cltd
stc
pushf
cwtl
repz
popa
pop
cmp
popa
iret
notb
cld
jp
sti
in
push
or
or
xor
fimull
shll
mov
sub
add
jmp
and
pop
cmp
or
bound
jmp
fs
dec
dec
mov
aam
add
jnp
and
lock
mov
out
xchg
mov
xor
es
iret
into
push
and
insb
ficompl
enter
push
add
jg
xchg
adc
fwait
pop
imul
insb
add
mov
ljmp
rcr
sbb
and
sbb
inc
or
xchg
jb
mov
out
jbe
push
outsl
shl
arpl
jo
and
mov
xchg
or
fldl
push
icebp
pop
sbb
sub
push
lds
or
jne
pushf
add
es
in
mov
and
test
aad
jno
jmp
and
lcall
loopne
lahf
push
jbe
inc
jge
insl
les
int3
test
push
mov
inc
fldenv
xor
jae
or
fldl
pop
xor
pop
int3
rolb
jns
sti
pop
das
sbb
or
sbb
cmpsb
shll
js
inc
imul
mov
testb
rcrb
cmp
or
mov
xor
cmpsb
cltd
mov
inc
les
push
add
inc
jno
icebp
jmp
bound
sub
dec
push
dec
cmp
mov
xchg
pop
test
jbe
lret
ret
or
sbb
insb
gs
lret
jo
gs
ret
mov
mov
lds
dec
loopne
into
jae
and
dec
cmp
hlt
hlt
dec
ss
mov
pop
sub
inc
scas
xorl
mov
lea
cmp
jp
test
lock
push
jb
testb
mov
and
stc
push
scas
int3
and
lahf
repz
pushf
inc
aas
cmp
jmp
rolb
pop
pop
scas
sbb
mov
jmp
sub
ja
out
cmp
mov
aam
loope
push
cmc
jecxz
gs
daa
xor
enter
das
fst
sub
aad
incb
in
pop
adc
adc
fs
sbb
fimull
mov
loope
hlt
repz
lret
lret
insb
and
push
xlat
outsb
psrld
ja
out
push
jmp
in
into
out
jb
sbb
sbb
fildll
jns
mov
xchg
ss
scas
test
dec
sub
inc
jno
jne
ret
pusha
aam
xchg
imul
and
mov
test
xchg
xor
sbb
mov
push
cmpsb
mov
xor
jle,pn
das
lahf
adc
or
les
ret
xor
jecxz
fistpl
add
adc
cmp
sub
pusha
sbb
lea
popa
decb
rolb
fcmovnu
cs
dec
gs
stc
pop
les
push
jle
push
hlt
sbbl
inc
idivb
sarl
dec
in
sub
jae
mov
or
cmp
clc
pusha
in
into
pop
dec
sub
xchg
aam
sbbb
inc
test
push
mov
jg
push
ljmp
push
add
or
add
movsl
pop
dec
je
cmp
lods
decb
jl
cs
out
mov
mov
cmp
sub
push
test
inc
aad
in
test
xchg
mov
push
inc
xchg
sub
cld
xor
mov
xor
or
dec
das
enter
inc
jno
sbb
lock
mov
mov
jo
test
xchg
decb
movsl
sbb
or
mov
hlt
push
push
js
xchg
movsb
add
mov
xor
hlt
xchg
cmp
mov
fidivs
out
jo
out
push
or
arpl
push
ficompl
dec
aad
fwait
inc
dec
xchg
iret
mov
out
fs
into
mov
inc
and
rolb
popa
mov
add
inc
jno
mov
inc
xchg
add
sub
xor
push
mov
aaa
insl
mov
pop
subl
jle
negb
push
jnp
jae
jno
mov
push
popa
lock
aam
or
fstpt
push
cmp
lods
mov
inc
xor
in
int3
push
mov
pop
hlt
xchg
sbb
inc
push
iret
mov
subl
adc
out
cmpsb
insl
ret
add
scas
cmc
and
sub
out
and
movsl
dec
in
mov
jl
fisttps
or
mov
cmpsl
sbb
fimuls
push
es
cwtl
cld
dec
or
add
lods
mov
xor
sub
je
inc
jmp
lcall
pop
xor
int
sbb
xor
mov
enter
inc
mov
cmp
pop
mov
mov
pop
popa
dec
inc
testb
ljmp
push
je
jns
fldl
sub
ss
and
xchg
fs
add
data16
jl
fwait
loope
imul
loope
scas
dec
cld
rolb
jae
and
test
xchg
pop
pusha
sbb
mov
ss
out
mov
lret
add
mov
sub
sub
jne
lock
mov
mov
dec
mov
orb
jnp
sbb
shll
sub
push
jb
sub
loopne
jno
adc
jno
ds
imul
jno
push
or
jb
insl
mov
ljmp
cmp
sbb
pop
data16
into
popf
movsl
inc
pop
decb
fs
push
out
ja
int3
or
gs
xor
stos
sbb
adc
sbb
add
loop
sbb
add
and
scas
xor
cmc
int
sbb
ret
and
or
or
in
sbb
sbb
jmp
push
bound
mov
xchg
test
pop
clc
sahf
insl
sbb
push
fs
leave
and
add
adc
pop
xchg
shrb
inc
pop
mov
or
push
and
or
arpl
out
push
pop
sub
adc
scas
imul
insb
movsl
leave
vmwrite
and
mov
mov
mov
dec
lods
je
fisttps
inc
mov
inc
mov
jae
rcl
je
repnz
movsl
and
add
int3
sub
lds
out
fs
imul
inc
pop
xchg
es
mov
cli
sbb
adcl
mov
in
hlt
add
pop
jg
shr
std
mov
decb
dec
dec
fldl
xchg
push
push
pop
push
stos
scas
push
daa
inc
ret
out
xor
imulb
lods
push
push
lods
inc
outsl
js
mov
imul
pop
mov
pop
shr
cwtl
inc
fildll
nop
cltd
and
fldl
dec
push
or
ret
ja
or
fwait
mov
pop
dec
dec
orb
cmpsl
in
scas
cmp
and
or
outsl
leave
aaa
ret
pushf
adc
jmp
mov
jne
pop
add
xchg
jmp
lahf
loope
dec
insl
dec
les
lds
fldl
jo
or
dec
and
or
dec
jno
decb
cmpb
push
outsb
pop
cwtl
fdivp
das
shll
dec
pop
arpl
decb
mov
inc
mov
mov
and
imul
jg
inc
lcall
and
cltd
insl
in
cmovge
fldl
add
stc
dec
nop
mov
icebp
mov
popa
jecxz
mov
aas
repz
ja
lcall
decb
jg
or
cmc
fwait
addr16
push
mov
popf
aad
jecxz
xor
dec
fdiv
sbbl
dec
addr16
sub
and
nop
insl
rcll
decb
jmp
jge
xor
rol
or
outsl
enter
adc
mov
imul
push
pop
out
jle
jb
mov
iret
pop
mov
bound
fldl
loopne
and
stc
stos
pop
scas
mov
scas
pop
in
sub
dec
into
jp
xchg
stc
addr16
mov
enter
dec
cli
sub
mov
jo
mov
xor
in
add
dec
pop
pusha
xchg
fcoms
repnz
stc
push
rcr
jp
enter
test
movsl
inc
lods
shll
mov
or
sub
sbb
jo
lods
movsb
dec
mov
push
xchg
cli
inc
sub
xchg
inc
popf
add
sub
xchg
xchg
sub
sbb
pushf
insb
pop
mov
sub
jmp
lods
outsl
pop
out
stos
jmp
jne
negl
jle
mov
ret
out
popa
jl
cwtl
lret
xchg
sbb
scas
mov
aam
mov
xchg
push
pop
cmpsb
rcrb
hlt
popf
sbb
inc
and
xorb
pop
icebp
in
decb
cmp
push
imul
xchg
clc
jge
sbb
in
mov
scas
loopne
push
xchg
test
mov
push
pop
or
sbb
lea
leave
xor
mov
push
clc
daa
mov
test
xor
sub
pop
ja
mov
xchg
ret
pop
adc
cmp
adc
xor
insb
enter
sti
int
cltd
iret
pop
stos
imul
mov
inc
mov
add
jns
enter
mov
jmp
pop
gs
fldl
dec
add
popf
imull
les
mov
xorb
sbb
lcall
xchg
mov
cltd
mov
or
ja
mov
fnstsw
lcall
dec
fsubrs
xchg
movsb
dec
xchg
les
fstps
xor
dec
cmp
inc
jno
pop
ficompl
insl
gs
xchg
mov
sahf
fisubs
cld
push
mov
mov
jecxz
dec
repz
fldl
pop
mov
jno
add
pushf
lea
dec
lret
mov
mov
sub
data16
mov
mov
lods
loopne
add
out
enter
inc
dec
aas
xchg
faddp
paddw
mov
sbb
jae
add
push
or
jns
xchg
outsb
and
movsb
aam
and
les
pop
decl
mov
xor
dec
cmp
mov
sub
inc
or
shlb
adc
inc
scas
sbb
push
call
out
test
dec
inc
fldl
ds
mov
pushl
lods
add
sti
push
test
sub
lea
cmp
pop
popa
push
lea
cmpsl
cwtl
addr16
decb
inc
ret
push
movsb
or
mov
cmpsb
pop
lcall
aam
mov
stos
das
jae
sub
inc
pop
cmp
dec
cld
pop
mov
es
adc
push
test
daa
or
jns
mov
sub
mov
out
add
or
loope
jb
je
and
loop
jg
iret
dec
inc
ljmp
mov
aas
jl
outsl
pusha
gs
decl
dec
mov
dec
mov
dec
jle
stos
lret
into
xor
jne
inc
jno
xor
sbb
jo
rcrl
sbb
xor
pushf
lea
mov
xor
xchg
inc
cmpsl
xchg
daa
cmp
push
mov
sti
shll
bound
or
dec
hlt
dec
add
ja
fldl
lock
aas
push
xchg
add
pushf
dec
and
lret
ds
notb
dec
and
test
daa
xchg
or
pop
xacquire
adc
lea
jb
je
jg
and
pusha
ljmp
icebp
pusha
or
jmp
je
push
in
aaa
sar
sbb
jmp
and
xorb
jno
decb
fsubs
adc
gs
loopne
or
mov
cmp
fwait
sbb
xor
jne
out
pop
push
push
stos
adc
call
sbb
or
out
mov
jb
movsl
jge
xor
add
movsl
adc
push
decb
push
je
sub
dec
xor
inc
scas
or
pop
inc
bound
or
pop
fistl
int3
pop
or
filds
std
or
mov
outsl
enter
cmp
dec
out
inc
xchg
xchg
inc
imull
mov
push
jecxz
sti
sub
xchg
push
jno
jnp
incb
sahf
xor
jl
in
lcall
in
je
enter
and
xchg
loop
jle
jns
je
xchg
les
in
fisubl
stc
lahf
push
test
movsl
and
or
jg
sub
fcompl
shl
or
sti
aaa
and
push
xchg
pusha
sub
or
repnz
cmp
cli
pop
testb
sbb
inc
cmp
sbb
jne
test
push
adc
mov
mov
mov
or
ficoml
out
sbb
clc
rcl
mov
jo
cmpsl
lret
sub
movsl
cmp
jge
lret
pop
insb
insl
mov
xor
lods
sbb
cltd
push
cmp
inc
insl
or
sub
sbb
sub
test
and
inc
lods
mov
icebp
jle
cld
lahf
inc
iret
stc
push
jno
outsl
popa
mov
loop
out
outsl
cmc
inc
dec
xchg
stc
hlt
jg
fldl
in
mov
adc
enter
pop
daa
enter
sub
pop
sub
and
addr16
loop
mov
ret
and
fcomi
mov
ja
or
jecxz
scas
ja
adc
aas
pop
mov
icebp
lret
aaa
dec
aam
fisubrs
inc
cmc
and
push
xlat
movsb
sbb
mov
in
out
lahf
pop
mov
jl
ss
movsl
fldt
sbb
fimuls
sub
xchg
mov
lcall
roll
add
and
xor
aam
fidivl
add
cmp
dec
flds
or
test
pop
scas
add
fcmovne
add
sub
ja
push
sub
xchg
jp
add
notb
rolb
push
in
xchg
cmp
lods
push
test
mov
add
push
in
mov
add
dec
enter
and
inc
add
movsl
pop
ljmp
out
push
xchg
in
std
subb
aad
subb
jge
mov
inc
sub
fldcw
ja
jp
test
xchg
sub
or
fs
cwtl
mov
mov
inc
cmp
add
pop
push
xchg
pop
mov
sub
and
xchg
push
pop
cltd
out
xchg
out
sub
mov
cltd
jb
movsl
ja
adc
mov
add
dec
jg
mov
call
daa
mov
pop
sbb
xchg
scas
dec
sbb
aad
inc
jno
aam
dec
cmp
cmp
shr
and
in
cmpsl
mov
pop
aad
fldenv
push
int3
out
nop
cld
mov
hlt
lock
rorl
mov
in
int3
test
jb
cmc
inc
and
lea
jo
aam
dec
fldl
xchg
mov
gs
icebp
icebp
daa
adc
js
pop
cmpsb
mov
inc
adc
leave
cmpsb
add
decl
mov
fbstp
lock
xor
cmpsl
and
lahf
pop
jno
mov
mov
incb
cmpsb
sub
mov
mov
sbb
push
shll
or
pushf
insb
imul
fimull
dec
xor
into
outsb
mov
dec
push
fldl
data16
xchg
pop
sbb
inc
test
pusha
int
into
call
add
insl
rolb
bound
aad
ja
pop
out
mov
mov
xor
ss
call
mov
addr16
inc
jno
cmc
out
dec
dec
fldl
imul
sahf
push
mov
dec
xchg
stc
add
pop
push
das
mov
adc
popa
out
or
ja
or
outsl
jge
int3
jae
sbb
jno
out
fs
sti
jbe
push
pushf
adc
fidivrs
nop
gs
test
shll
fcoms
sub
push
sahf
mov
xchg
adc
ja
aam
into
in
adc
test
mov
into
cmp
jae
out
sbb
mov
sbb
add
or
nop
jno
ljmp
out
std
cmpb
push
jo
das
add
inc
pop
xchg
decb
fs
inc
stc
testb
push
pop
mov
xchg
shl
popf
clc
jmp
fists
mov
loopne
stos
sub
leave
push
int
inc
loope
in
arpl
and
stc
or
jge
jmp
inc
pop
popf
dec
and
or
push
jno
and
test
popa
mov
cmp
or
es
mov
pop
imul
pop
testb
fidivs
adc
inc
mov
cmp
mov
int
sub
cmp
shlb
xor
sbb
adc
and
mov
stc
das
jo
imul
outsl
test
or
push
imul
jno
push
out
xchg
pop
sub
daa
sbb
mov
shlb
sbb
cmc
aam
addr16
add
orl
mov
cli
mov
mov
shl
push
dec
xchg
xchg
cltd
xchg
nop
cmpsl
push
xchg
mov
push
fwait
xor
pop
int
cmc
out
cltd
movsl
test
repnz
fcmovu
leave
aas
xchg
mov
mov
movsl
dec
ja
seta
mov
fistl
out
rcrb
dec
test
ds
ficompl
inc
in
lock
sub
and
xchg
test
jle
insl
cmp
push
add
repz
ror
xchg
roll
dec
mov
pushf
cwtl
pop
jb
xlat
aam
es
mov
mov
mov
das
pop
dec
pop
repz
ret
add
leave
push
pop
jg
mov
nop
and
repz
sbb
inc
popa
cmp
int
ja
pusha
add
icebp
repz
test
push
push
test
jg
jp,pt
dec
bound
pushl
xchg
gs
pop
mov
mov
pop
xor
or
sub
mov
test
mov
pop
xchg
jns
call
movsl
es
jno
out
fs
or
mov
mov
shlb
xorb
mov
outsb
fnsave
pop
cmpsl
movsb
pop
pop
mov
arpl
mov
lahf
add
dec
aas
lock
stos
dec
cwtl
push
or
call
cmp
call
arpl
jns
loop
mov
lret
push
mov
xchg
jns
push
divb
addr16
mov
jmp
pop
sbb
iret
insl
xchg
adc
sbbl
mov
cmp
imul
adc
sahf
fisttpl
in
jl
jb
xor
pop
out
and
jp
push
js
int
push
lock
mov
mov
push
repz
fldl
and
nop
and
fldl
jne
mov
push
or
pusha
movsb
add
scas
sub
mov
testl
nop
cli
inc
enter
mov
or
ja
test
shrl
call
mov
xchg
jnp
cli
call
lcall
mov
pop
cwtl
je
outsb
cmp
fldt
inc
mov
add
inc
jno
xchg
bound
xor
pop
inc
fistpll
mov
jmp
push
and
sbb
xchg
cmp
idivb
xor
xor
jae
adc
mov
mov
jl
add
xchg
dec
mov
pop
lcall
ja
cltd
pop
xchg
decb
fs
pop
pusha
imul
sub
test
xchg
lahf
xor
jnp
xor
lock
ret
fiadds
push
mov
add
push
fs
adc
xchg
xlat
cli
xchg
outsl
add
inc
jno
jnp
mov
das
ret
mov
js
lds
arpl
dec
or
inc
fldl
adcl
addr16
push
lcall
imul
mov
mov
jns
fwait
mov
adc
in
addr16
mov
mov
add
inc
jno
and
xchg
out
outsb
fistl
push
mov
fldl
and
in
and
inc
pop
xchg
decb
sub
popa
mov
out
std
inc
mov
xchg
jae
mov
fwait
test
pop
pop
and
bound
pop
repnz
sub
mov
nop
and
popa
lret
je
repz
sbb
inc
adc
mov
mov
push
arpl
repz
xchg
inc
pushf
pop
lea
sub
jno
loopne
es
aad
adc
sub
pop
decb
dec
inc
fldl
in
lods
shrb
jns
jecxz
stos
ret
pop
wbinvd
rorb
pop
inc
sbbl
cmp
pusha
dec
push
lahf
sbb
and
pop
jno
mov
mov
imul
popa
subl
stos
push
pop
or
push
adc
rorl
inc
dec
push
out
pop
lods
adc
pushf
in
repnz
sub
out
sbb
insl
fsubs
insl
loopne
loop
dec
jl
mov
scas
dec
jmp
fldl
xchg
outsb
pop
jae
scas
inc
jno
call
pop
cli
enter
push
xor
jle
sarb
pop
and
jb
es
mov
mov
jg
bound
ret
hlt
idivb
sub
sub
jno
xchg
mov
or
cld
jmp
or
mov
sub
push
jle
or
pop
subl
fs
jae
pushf
pusha
jno
cmpsl
cmpsl
mov
pop
pop
fs
dec
jmp
inc
faddp
xchg
enter
sbb
cmc
out
pushf
test
adcb
xchg
pop
mov
or
xor
push
cmove
mov
pop
cmpsb
xchg
add
inc
push
jp
inc
mov
and
data16
cld
mov
mov
mov
je
sub
stc
mov
jecxz
popa
jno
aad
jmp
in
gs
leave
int3
out
lock
stos
lock
jecxz
out
loop
and
push
or
in
hlt
xchg
sbb
inc
mov
cmp
lcall
push
push
jmp
das
int3
adc
mov
scas
popa
lret
jne
js
aam
icebp
sub
mov
test
sbb
lds
cs
decb
call
daa
ret
lods
jno
add
sub
fisubrl
inc
in
add
lock
xor
sbb
add
nop
adc
fcoml
popa
inc
jb
cmc
and
pop
ds
dec
notl
loop
xchg
insb
push
out
cmp
cmp
jno
jmp
push
cmp
xchg
push
sbb
adc
imul
rcrl
ret
fucompp
jle,pn
fisttpl
dec
inc
shr
loopne
dec
xchg
test
dec
sti
dec
inc
fldl
mov
movsl
cmp
cmp
mov
sub
iret
ret
pop
inc
bound
mov
xchg
fwait
mov
out
orl
xchg
jne
sti
inc
jno
adc
mov
mov
and
pop
into
jle
cmp
add
cmp
cmp
push
cmp
mov
inc
xchg
jnp
in
enter
or
fldl
push
nop
pop
cmp
dec
insb
xchg
sbb
rorl
mov
cmp
fld1
jno
pop
push
cmpsb
push
aaa
push
les
inc
jno
dec
pop
dec
scas
filds
dec
push
popf
mov
pop
xor
and
pop
out
cmp
das
shl
outsb
pop
sbb
leave
addr16
xlat
fs
imul
pop
cmp
mov
sbb
cld
incl
ficoml
jnp
lret
mov
popa
dec
inc
and
addr16
sub
pop
decb
ljmp
or
addr16
mov
sbb
loopne
jnp
sbb
imull
mov
mov
mov
sub
mov
xlat
out
xchg
jne
and
test
or
pop
ss
movsb
xchg
push
xor
pop
push
mov
popa
sbb
outsl
mov
mov
ljmp
jno
call
push
pop
jge
sbb
or
dec
shrl
jb
lret
cwtl
inc
mov
decb
jno
push
lods
add
addr16
jne
add
inc
sbb
repz
test
sub
scas
ljmp
gs
inc
inc
push
xchg
sub
mov
mov
mov
add
inc
jno
ds
mov
xchg
ficomps
cld
ljmp
fldl
sub
dec
cltd
leave
xchg
cmp
lret
lahf
mov
inc
leave
cmp
adc
adc
in
jne
stos
adcl
adcl
fidivrs
popa
orb
xchg
fldl
in
or
lds
add
sub
jno
cmc
xchg
mov
or
jl
pusha
jno
dec
ja
or
pop
cmpsl
lret
mov
and
or
mov
sub
test
or
ss
movsb
fcmovnb
jno
sbb
cmp
inc
jno
jmp
pop
into
test
add
adc
jmp
add
mov
mov
mov
jno
jno
mov
inc
stos
das
xchg
cs
cltd
cmpsb
das
loop
rorb
push
mov
stos
mov
cmpsl
rcll
push
fs
mov
xor
lea
fstp
sbb
mov
outsl
xor
sub
in
mov
dec
in
mov
dec
icebp
pop
outsb
sbb
jne
or
jnp
and
notb
lock
fmull
lods
sub
jo
divb
adc
and
fwait
cltd
je
cwtl
mov
hlt
push
dec
dec
mov
into
in
shl
xor
mov
add
pop
icebp
inc
call
push
icebp
fisttpll
mov
or
mov
loopne
sbb
call
add
sbb
inc
cld
cmpsl
ljmp
cmpsl
out
notb
nop
push
dec
test
jg
gs
pushf
stc
pop
xchg
add
sub
cmp
push
popl
or
mov
adc
aaa
fmull
pop
add
inc
jno
nop
ret
inc
sbb
inc
cltd
imulb
sbb
test
add
mov
and
mov
jns
sarl
jbe
stos
jb
inc
mov
mov
outsl
dec
xchg
out
pop
lcall
call
in
inc
sti
dec
xor
inc
jno
cli
imul
pop
imull
aas
xchg
mov
push
mov
pop
testb
stos
sub
cld
pushf
xchg
in
dec
xchg
xor
cli
enter
sarl
xor
sub
sbb
cli
test
cld
iret
stos
push
inc
int3
push
popf
daa
push
outsb
divl
loopne
popf
cmp
shll
enter
pop
das
or
int3
jno
xchg
cwtl
lahf
stc
xchg
daa
mov
cmc
mov
in
sub
dec
jae
fwait
daa
mov
int
inc
jp
push
js
dec
push
fldl
icebp
sti
lods
shlb
sbb
adc
fcomp
or
pop
faddl
push
leave
adc
nop
jmp
jmp
lret
pop
push
aas
test
lahf
aad
sbb
and
pop
sar
rcll
jo
add
and
and
sbb
loope
movsl
test
int3
shll
fsubrp
mov
dec
js
aad
cmp
push
testb
cwtl
mov
xchg
lds
fadds
ja
loopw
jmp
out
jmp
mov
jnp
add
add
mov
in
xchg
loopne
dec
add
lret
dec
dec
fldl
mov
jo
push
lret
sti
fwait
adc
push
lods
cmpl
popf
pop
adc
outsl
movsb
sbb
dec
aas
sbb
push
adc
pusha
sbb
lds
das
lahf
push
repz
mov
addr16
push
nop
fs
lods
xchg
and
fwait
cmp
out
cmpsb
sub
inc
or
les
add
mov
adc
in
mov
int
lods
dec
mov
xchg
dec
xor
jmp
xchg
ret
mov
mov
mov
cmp
and
dec
test
mov
push
mov
jnp
add
push
popa
or
push
or
fcomp
sbb
das
inc
mov
rcrb
cmp
jl
notb
sub
enter
sbb
outsb
insl
pop
pop
pop
cmc
aad
clc
rcrb
stos
cmpsl
xor
loope
outsl
or
pop
lahf
stos
in
in
pop
adc
in
sahf
lods
popa
jb
dec
inc
mov
lock
sti
fidivrl
mov
and
test
cmp
daa
mov
pop
mov
xchg
les
iret
int3
xor
sub
dec
xor
add
xlat
mov
and
test
rolb
push
xchg
repz
in
jns
adc
cmp
push
ret
mov
xchg
enter
sbb
and
sbb
mov
pop
addr16
lea
jo
leave
jb
lret
push
and
setno
cmpsl
icebp
cli
pop
ja
or
xor
jo
mov
mov
iret
andl
mov
movsl
lods
call
xchg
jecxz
mov
push
imul
cwtl
lret
into
jo
into
ss
xor
add
incb
addb
jo
mov
inc
cmp
out
rcrb
aam
mov
dec
mov
pop
mov
daa
int
bound
hlt
pop
negl
cmp
and
cmovbe
decb
fs
xchg
jmp
cli
pop
inc
loope
lahf
mov
pop
sahf
and
les
sbb
sub
cmpsb
inc
jno
cmp
sub
jno
push
lahf
cmc
push
repz
or
inc
jno
movsb
fldl
les
mov
dec
xor
or
pushl
push
xchg
xor
jl
push
mov
xor
in
push
das
addr16
cli
test
jmp
cli
insb
sbb
xchg
sarl
ja
dec
xor
push
xchg
inc
pop
inc
movsl
and
and
mov
rolb
fbstp
in
lods
cmp
cmp
stos
jno
addr16
and
mov
rolb
mov
sbb
or
movsl
add
dec
sub
hlt
or
jmp
mov
mov
and
fisubs
popf
pop
jns
insb
and
mov
outsb
dec
sti
roll
inc
popf
movl
jno
mov
inc
jno
or
push
xor
das
pop
fs
sbb
sbb
and
sbb
out
cmp
xor
push
daa
pushw
mov
stc
mov
and
push
inc
jno
push
testb
ja
sub
mov
lods
jno
push
and
enter
sarl
sbb
dec
xor
fs
in
mov
jmp
mov
clc
push
rcrb
das
icebp
out
dec
jl
leave
and
daa
sarl
mov
mov
ss
repz
hlt
fdivp
add
adc
xchg
add
inc
cmp
iret
mov
daa
sti
adc
pop
lods
stos
lea
stc
add
data16
aas
sbb
je
cmp
adc
adc
stc
shl
xlat
push
repz
push
fldl
xor
cmp
fcoms
clc
and
repnz
rcrl
addr16
push
imul
mov
add
add
lock
ret
enter
mov
lea
fldl
lret
jmp
adc
jne
shr
out
or
je
adc
or
lds
je
mov
sub
rcr
sub
mov
lret
mov
adc
in
mov
fsts
mov
jp
sbb
cmp
push
and
mov
repnz
je
das
popf
loop
dec
and
or
push
jns
xlat
inc
push
push
ret
leave
adc
insb
subb
cli
inc
and
or
sbb
and
inc
.byte
