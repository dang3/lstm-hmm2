sti
idivl
incl
and
add
cmp
jge
jmp
sub
dec
add
mov
sub
sbb
xchg
sub
sarb
sub
in
cmpsl
jbe
xor
xor
bnd
scas
insl
ds
mov
or
or
push
adc
add
mov
jbe
popf
aaa
repnz
adc
dec
sub
push
add
in
sbb
or
in
ja
add
cmp
sbb
add
mov
mov
ret
nop
push
movl
jp
inc
mov
and
jle
cmpl
call
mov
mov
push
call
orb
dec
add
fucomi
mov
push
in
jae
xor
jne
mov
cmp
ss
xchg
xchg
push
sbb
daa
add
sbb
pop
in
fistpl
loopne
mov
pop
xchg
adc
mov
sarl
sub
int3
setp
jg
jg
pop
inc
les
cmp
or
add
adc
adc
mov
sar
jg
call
mov
popf
xor
add
add
dec
fwait
aaa
sahf
add
push
add
ss
mov
incl
lret
add
rolb
push
call
jae
cltd
roll
mov
pusha
and
push
pop
jg
mov
repnz
inc
test
or
mov
lret
dec
sbb
inc
mov
incl
mov
pushl
cmp
mov
add
mov
xchg
test
loopne
outsl
jmp
dec
jo
xor
shll
cmp
push
in
mov
mov
xor
add
incb
adc
shll
or
mov
xor
add
add
add
lahf
andb
fbld
push
addr16
mov
add
jae
adc
cld
cmpsl
mov
push
add
add
sbb
and
cmc
mov
mov
sbb
inc
popf
out
xor
cmp
adc
fcmovu
mov
int3
icebp
insb
add
ret
xor
inc
adc
sar
cld
and
xchg
mov
add
mov
and
jmp
in
lret
cmp
mov
dec
xchg
jne
arpl
add
and
cld
mov
sti
mov
ret
add
call
and
in
out
cmp
push
adcb
jne
push
lcall
xor
jg
jo
mov
mov
imul
or
dec
shr
scas
mov
push
shlb
pop
rcrb
gs
sbbb
xor
xchg
jo
pop
jl
test
mov
rcrl
call
add
decl
sbb
test
incl
mov
rcl
fisubrl
sub
aad
push
pushf
mov
cs
addr16
sar
mov
push
stc
clc
or
cmp
jno
clc
pop
and
cmp
adc
mov
adc
fildll
or
pop
jb
add
es
inc
gs
mov
or
std
outsb
pop
decl
xchg
leave
call
lock
add
in
push
mov
stc
or
add
sub
js
int
movsb
jge
pop
mov
jbe
inc
mov
mov
adc
out
xor
inc
dec
ret
fistpll
jp
rcl
push
push
lods
mov
push
jmp
mov
push
sar
in
xorb
scas
mov
push
xorl
xchg
cmpsl
loopne
ljmp
jmp
mov
add
push
mov
pop
scas
push
add
lock
add
ljmp
add
sbb
or
dec
in
pushl
jae
aam
pop
adc
sub
gs
sbb
in
mov
sub
jge
push
pushf
inc
test
clc
movsb
or
stc
mov
xorb
jae
xor
mov
lret
sti
clc
aaa
imul
into
je
cmp
jae
mov
and
or
mov
fs
jne
ds
sahf
adc
jle
adc
aam
sti
lcall
push
jne
orl
mov
sti
in
cmp
mov
mov
outsl
add
js
lods
pop
lret
mov
fcmovbe
in
and
das
sub
out
notb
add
adc
pop
mov
inc
cmpb
mov
lock
lea
pushf
idivl
outsb
dec
lods
pop
pop
data16
int
push
lods
adc
mov
mov
mov
int3
and
inc
cli
adc
cmp
outsl
into
in
call
mul
pushf
insb
jne
rcr
fs
sahf
jge
lock
and
push
clc
incb
ljmp
aam
or
sarl
je
sbb
and
roll
cmp
xor
jb
cmp
pop
mov
add
loope
rorb
add
push
jge
sub
cmp
les
add
or
pushl
aas
insb
jg
dec
je
jne
cmp
call
cmc
bound
imul
outsb
sub
insb
test
mov
imul
das
or
dec
leave
add
scas
test
mov
std
push
fisubs
jl
std
das
inc
subl
sub
fcom
mov
sub
jecxz
adc
loop
outsb
cmpl
cs
xchg
outsb
xor
pop
iret
in
cmpb
mov
add
aad
iret
push
lods
bound
add
sar
lock
add
cld
das
add
mov
lea
jle
je
int
cli
shr
pusha
jo
ds
jne
incl
fldcw
cmp
lcall
das
push
insb
loop
add
mov
jb
dec
push
dec
add
outsl
clc
push
pusha
xlat
add
add
push
rcl
or
mov
fadd
and
jb
push
lock
cld
cmc
pop
shlb
into
pop
sub
pop
or
add
jl
or
mov
test
jbe
sub
shrl
mov
je
je
mov
mov
cmp
adc
test
jb
test
adcb
aaa
je
mov
and
jo
pop
mov
push
call
inc
mov
sub
fnsetpm(287
mov
sarb
mov
jb
in
add
add
lods
shll
call
or
insl
mov
cld
call
movsl
or
mov
aaa
or
stos
add
cmp
ds
pushf
and
inc
and
incl
add
lea
cmp
or
int3
push
jb
add
rcrl
in
xchg
add
out
enter
push
jo
add
mov
aaa
pop
inc
faddp
orl
mov
xchg
call
gs
scas
xor
fdivp
call
xor
ja
nop
pop
dec
ret
cmp
mov
pop
inc
jnp
jne
xor
mov
sbbb
inc
ret
ret
add
sub
dec
mov
ds
into
movsb
je
cli
push
sub
ja
inc
es
lea
loopne
iret
sti
aaa
lods
test
jns
or
jle
fsts
and
or
out
xchg
push
pop
insl
invd
add
cld
dec
mov
push
sbb
ss
test
jnp
sbb
fidivs
inc
mov
lret
add
bound
inc
xor
push
and
xor
imul
xchg
test
ljmp
or
mov
jmp
adc
xor
mov
movsb
jne
mov
adc
cmovo
hlt
add
test
xor
sbb
ret
or
push
cmpb
addb
in
adc
ficoml
add
add
mov
dec
daa
push
jmp
data16
test
sbb
gs
mov
sub
ret
add
mov
jbe
or
insl
cmp
push
lock
test
rcrl
into
mov
or
daa
call
xchg
ja
push
lea
pushl
push
ss
xchg
int3
ret
jp
dec
adc
insb
clc
in
adc
add
push
or
insb
push
addl
out
das
pusha
jb
cs
aas
push
xor
adc
sbb
add
sbbl
adc
push
jge
adc
lea
inc
pop
push
or
dec
lea
das
xor
xchg
jno
jmp
sub
in
hlt
lea
or
ljmp
or
shlb
fistl
pop
out
stc
aaa
inc
imul
mov
mov
ja
push
decl
fwait
mov
add
jecxz
mov
popa
xor
in
sar
add
push
icebp
inc
jb
mov
pop
add
rol
stos
pop
sbb
cld
pop
call
push
movb
jbe
movsb
cmc
cld
loop
scas
mov
rolb
gs
out
pop
add
hlt
addl
mov
inc
or
ja
xchg
out
xor
add
mov
fs
mov
adc
cmp
loopne
jnp
sub
sti
mov
or
ja
inc
out
fs
xorb
xor
jecxz
adc
mov
jne
fwait
inc
or
out
push
add
add
and
push
std
ret
test
fsubr
cwtl
add
stos
push
test
jnp
mov
adc
dec
pop
jae
sub
jns
push
push
fistpl
js
popa
cs
sar
int3
dec
add
jle
adc
mov
loopne
lock
pop
add
push
jae
addl
inc
or
rolb
cmp
shl
jecxz
cld
xchg
movsb
clc
cld
outsl
call
sbb
add
mov
pop
subl
add
data16
mov
pushl
cmp
les
sbb
movl
jg
and
adc
aas
push
decl
pop
mov
faddl
xor
pusha
repnz
leave
jge
ret
pop
push
test
in
aas
sbb
and
shll
or
dec
pop
jno
mov
lea
xor
mov
je
sub
pusha
sti
jecxz
add
jbe
cs
jp
mov
enter
ljmp
lea
ljmp
sbbb
sbb
fcomp
or
push
mov
clc
lcall
popa
clc
mov
sub
jne
lea
push
mov
sub
mov
and
adc
push
jl
aaa
rorl
lock
clc
rclb
sub
fdivrs
std
ljmp
add
add
push
insb
lea
mov
popf
xor
ljmp
into
add
xor
or
push
mov
lret
lock
add
mov
data16
sub
int
adc
je
pop
clc
pop
or
add
int3
sub
outsw
sbb
xor
sub
inc
inc
loop
jg
add
sbb
add
loop
sti
or
test
add
pop
cmc
cwtl
or
add
inc
ljmp
shrl
and
je
push
xor
adc
pop
mov
pop
int3
push
adc
mov
or
add
lock
push
add
xchg
rorl
aad
bound
adc
test
je
pop
mov
add
loopne
int
push
and
xchg
jmp
test
jg
mov
mov
inc
mov
jnp
repz
dec
dec
test
clc
sub
add
mov
in
jb
mov
dec
sarl
push
mov
ss
adc
or
jb
out
mov
rcll
mov
add
mov
clc
incl
add
jb
pop
push
xchg
call
cld
testl
jne
sarl
ljmp
push
sub
leave
data16
sbb
and
rolb
adc
xor
or
add
es
jle
push
rolb
jmp
pextrw
mul
mov
loopne
push
sbb
sub
stos
lea
mov
lods
lea
inc
inc
jp
mov
lock
pusha
jne
adcl
mov
sbb
and
and
inc
or
je
jp
pop
jne
imul
test
icebp
loopne
mov
mov
jecxz
adc
push
pushl
mov
test
mov
add
and
outsb
xchg
ret
or
lods
adc
sarb
enter
negb
inc
add
sub
aas
mov
incl
push
adc
jb
add
mov
jl
test
push
mov
mov
push
and
icebp
outsl
movsb
lea
mov
lea
adc
push
xor
jae
xchg
sub
push
call
and
fs
xlat
ja
ljmp
lea
cmp
mov
adc
cld
std
cmp
mov
std
fbld
mov
ret
dec
cmp
and
repz
cmp
or
mov
jne
add
add
bound
push
ret
adc
dec
jbe
lock
push
daa
xor
imul
push
call
test
add
push
adc
xlat
add
add
mov
inc
scas
clc
sub
sbb
xchg
mov
sahf
hlt
sub
lock
stos
cmp
dec
int3
push
add
or
push
ret
jle
jb
cmp
xor
scas
jl
pop
dec
dec
fidivl
roll
leave
cmp
push
pop
mov
xor
xor
rorb
scas
add
sbb
and
outsb
cmp
mov
pop
inc
mov
std
pushl
push
or
add
pop
mov
push
in
inc
mov
xchg
call
orl
lea
mov
push
or
jl
test
push
out
mov
jne
cmp
jmp
rcr
mov
fildl
roll
mov
jmp
lcall
inc
jge
jno
adc
outsb
outsb
cmp
incb
add
mov
pushl
push
ljmp
mov
push
sar
outsl
mov
pop
mov
or
test
pop
jno
add
inc
add
add
pop
je
jle
or
mov
cld
dec
push
xrelease
lods
std
repnz
pop
ds
cmp
in
clc
push
js
sub
mov
push
rcrb
add
adc
cld
mov
push
cld
jg
lock
bound
add
int3
cmp
cmp
inc
push
fbstp
adcb
jb
xor
sub
mov
pop
add
push
lock
das
clc
scas
mov
mov
loop
jmp
add
pop
sub
cmpsb
int3
call
std
jle
das
mov
ljmp
inc
fidivs
mov
addb
imul
gs
xchg
gs
ret
test
ljmp
or
hlt
mov
scas
cmp
loope
nop
mov
xchg
lea
add
clc
fmuls
push
loop
mov
inc
in
push
jno
movl
sub
and
clc
pop
or
mov
jo
mov
je
test
loopne
xor
idiv
or
mov
jg
fisttps
mov
mov
scas
ret
mov
iret
mov
push
cld
pop
xor
lret
sub
inc
fmuls
test
and
mov
fisttpll
leave
pop
jbe
adc
aaa
mov
inc
addb
inc
xor
imul
cli
cmc
iret
inc
jb
adc
clc
adc
mov
pop
sub
adc
test
popl
lret
orl
cmpsb
sbb
cmp
in
push
rorl
into
fnstcw
jo
mov
inc
fdivrs
mov
pusha
test
mov
push
add
push
jno
enter
dec
push
mov
ret
ljmp
adc
daa
popl
sub
jmp
jg
cmp
sbb
mov
pop
sbb
jne
push
cmp
push
cmpsb
fisubrl
lods
cmp
divl
add
clc
pslld
adc
insl
mov
fidivrs
xchg
lea
ret
add
jmp
push
fdivrs
test
insb
ret
xor
shlb
dec
add
mov
push
add
inc
fisttpl
sub
loopne
and
std
outsl
repnz
and
shrl
bound
sub
cmp
mov
lret
loope
shlb
mov
pop
and
daa
lret
or
loop
gs
push
push
into
sbbl
sub
mov
and
or
cmpb
jmp
dec
mov
xor
push
sti
inc
dec
mov
into
and
icebp
hlt
in
dec
mov
addb
movl
rcr
push
sbb
or
repz
loopne
lahf
mov
call
mov
xor
push
mov
idivb
push
insb
adc
aam
xor
popa
ret
icebp
imul
addb
scas
dec
push
ret
mov
mov
and
jb
push
push
push
jge
fldt
enter
pushf
mov
adc
push
rolb
mov
push
add
std
int3
push
or
mov
adc
or
or
fadds
add
dec
or
fmuls
cmp
push
push
faddl
shrl
je
cmc
sbb
xor
mov
mov
jle
add
inc
cld
lcall
incl
or
add
cmp
int3
jne
mov
sbb
add
decl
adc
call
imul
lcall
hlt
call
orl
sbb
sarl
or
xor
fadds
pop
int3
movsb
mov
mov
cmp
xor
push
outsl
dec
and
je
push
ds
fdivrl
add
test
lret
mov
push
jmp
and
dec
lock
outsl
jo
mov
inc
push
and
test
outsl
push
adc
pusha
lret
add
test
sub
pop
outsl
cs
loopne
addl
ds
outsl
mov
jl
dec
call
xor
mov
std
push
shl
ss
jne
push
int3
push
out
lods
xor
push
mov
sub
push
jmp
adc
xlat
push
icebp
add
ficomps
enter
adc
mov
decl
jo
inc
and
cld
push
cmp
or
add
push
add
sbb
inc
add
cmpb
insb
ret
jg
mov
pop
int3
cwtl
mov
out
push
jg
pop
push
test
push
jl
arpl
popf
insb
lea
or
adc
sti
mov
fs
js
mov
pop
insb
push
ja
idiv
push
adc
orb
xchg
push
mov
jmp
hlt
pop
data16
rorb
or
loop
push
mov
in
mov
xor
and
nop
adc
mov
jne
add
push
sub
mov
inc
push
add
dec
enter
jp
sub
pshufw
sub
decb
sub
mov
sahf
pop
mov
loopne
cwtl
test
clc
lods
or
xchg
nop
imull
sbb
add
mov
and
xchg
pop
sbb
jl
std
das
jp
push
and
and
pop
jmp
inc
ror
adc
test
adc
outsl
fcmovnb
adcl
cmpsb
cld
lock
jae
stc
sahf
out
cli
and
push
mov
xor
mov
shl
jne
js
add
inc
or
push
inc
imul
or
adc
mov
mov
decl
inc
cmp
ficoms
in
add
jmp
and
adc
xor
push
xor
inc
mov
add
mov
jp
mov
pop
jae
jecxz
mov
mov
cmp
add
jp
mov
add
leave
xor
dec
xor
cmp
cmp
dec
test
pop
pop
lock
pop
or
scas
sub
int3
in
repnz
icebp
insb
cmp
add
push
dec
adc
stos
rorb
pop
lret
movsb
fidivrl
pop
inc
aam
mov
loop
jg
push
push
test
aam
and
and
je
lar
xor
repnz
decl
lock
mov
jmp
mov
cld
sbbl
push
je
cmp
rclb
mov
jno
add
mov
ret
dec
loopne
loope
inc
adc
loopne
adc
adc
cmc
and
repz
sub
add
mov
sub
jg
call
mov
into
imul
or
push
shrl
data16
push
jns
test
push
dec
test
push
lret
call
cmp
xor
xor
pop
inc
and
pop
push
jne
inc
add
lahf
fsubl
jg
mov
aaa
loope
mov
jae
and
clc
incl
add
dec
js
jno
xorl
ljmp
in
add
dec
mov
mov
pop
gs
mov
test
leave
cmp
mov
push
decl
push
rol
sbb
dec
jae
inc
sahf
dec
adc
incl
mov
push
insb
fcompl
mov
aaa
cld
sti
dec
shrb
and
adc
cli
cmp
adc
fdivs
rcl
sbb
rcr
call
les
sub
push
mov
enter
add
pusha
mov
ret
js
stos
mov
std
ret
adc
inc
cmp
inc
loopne
loopne
cmp
int3
pop
je
add
sbb
cwtl
add
stos
or
mov
push
in
orl
call
xor
sbb
lret
jmp
jnp
adc
jmp
adc
and
add
aam
mov
test
icebp
or
incb
or
mov
push
jmp
sahf
xor
imul
mov
xchg
adc
sub
iret
ss
sbb
mov
std
pop
mov
fldenv
push
inc
rcll
dec
test
pop
mov
nop
push
rcrb
in
int3
pop
or
dec
daa
rol
outsb
adc
fs
int3
cwtl
sbb
les
add
lock
out
test
add
or
test
mov
ljmp
imul
subb
jae
sahf
insl
inc
cli
jne
dec
cmp
sbb
jbe
push
clc
outsb
mov
add
test
xchg
or
pop
mov
shlb
imul
add
push
or
cwtl
adc
push
mov
cwtl
add
xor
lock
jge
sahf
or
sbb
js
add
leave
jbe
fisubl
aas
mov
pop
pop
loopne
mov
mov
cs
pushf
shrl
pop
push
sarb
test
jmp
jmp
test
add
emms
insb
aam
mov
rcll
fldt
inc
fimull
aam
call
dec
inc
pop
shl
xor
fbstp
aam
int3
dec
je
cmp
data16
mov
xor
push
loopne
cmp
pop
mov
add
je
negb
jge
inc
jnp
cmp
or
xlat
fdivl
pop
push
sarb
gs
outsl
push
pusha
daa
in
loopne
mov
int
jbe
leave
mov
sbb
adcb
cmp
cmc
cld
out
incb
xchg
adc
inc
out
ds
xor
popl
je
clc
xor
push
scas
xchg
pop
out
cmp
push
sbb
pop
mov
add
push
add
test
adc
test
jmp
push
test
fcomip
orl
cmp
add
adc
dec
cld
or
incb
out
int3
and
roll
jg
loop
es
cmp
mov
ds
aas
pop
mov
jne
push
push
add
ror
adc
mov
adc
test
test
jle
test
loopne
jge
adc
pop
jno
sub
push
test
push
push
jp
mov
jle
cmp
dec
popf
push
fcomps
dec
lock
fwait
lock
sub
or
ljmp
add
cmp
cmp
xor
in
add
call
ja
aaa
mov
sub
dec
cmp
lock
cmp
add
jo
gs
shlb
jb
ret
jg
mov
cld
mov
test
in
fidivrs
jmp
jne
loop
push
es
pop
outsb
pop
test
xor
inc
add
pop
out
jno
jb
bound
push
outsl
or
aas
cs
pop
or
cmp
add
andb
inc
add
jo
xor
enter
fidivs
mov
xchg
inc
shl
ret
mov
push
mov
pop
int3
inc
xor
push
clc
ja
cltd
fisubrl
into
outsb
dec
push
add
rorb
std
mov
out
mov
aas
into
adc
xor
call
mov
dec
dec
jmp
cmp
decb
subl
fimull
mov
cmp
pop
sbb
jp
or
or
push
inc
mov
mov
and
fs
insl
icebp
adc
stos
mov
sbb
lds
jmp
mov
fiaddl
js
and
decl
js
or
sbb
push
lea
push
mov
inc
jb
add
or
mov
shlb
cs
add
aas
push
orb
js
ret
loopne
dec
int3
ficoml
lsl
add
pop
lcall
shl
lods
inc
call
pop
cmp
add
ret
jo
lret
sbb
ss
stos
loopne
cld
add
ret
mov
cmp
ss
aad
push
cwtl
mov
cmp
rorb
mov
leave
mov
add
scas
adc
clc
pop
or
sub
mulb
add
push
cmpsl
sbb
push
mov
lret
call
clc
sub
lea
in
xchg
jmp
repnz
call
pop
pushl
xchg
rorb
xor
dec
xor
out
into
cld
pop
data16
movl
jp
fwait
xorl
sub
cmc
xchg
jl
in
and
push
push
push
xor
cmpb
outsl
push
and
enter
cld
int
push
cld
dec
mov
nop
jne
jl
fstpl
fiaddl
and
pusha
aaa
or
inc
sub
sub
mov
insb
pop
cmp
pop
test
push
or
push
cwtl
pop
mov
add
ja
gs
jb
or
aam
int3
mov
add
js
dec
int3
insb
mov
push
add
in
xor
adc
pop
mov
push
out
or
and
subl
call
incl
fisubl
and
out
add
mov
pop
mov
sbb
std
cmp
cmpl
cmp
and
ret
mov
out
outsb
lret
lock
test
jmp
gs
push
orl
adc
popa
push
adc
pop
leave
fimull
sarl
cmp
sub
fcomps
mov
in
mov
and
call
add
sub
or
ja
xchg
add
sub
jne
pop
stos
xor
cld
xchg
insb
iret
lea
lcall
sub
lock
aaa
sbb
leave
mov
sbbl
js
call
fs
mov
mov
push
out
dec
dec
ljmp
add
incl
leave
jp
mov
fistpl
ja
jne
daa
pusha
fsub
test
int3
incl
mov
inc
fsubs
pop
mov
mov
inc
inc
and
pop
push
sub
imul
clc
das
out
cmpsb
lret
pop
rol
addb
adcb
jne
pop
xlat
dec
lods
incl
adc
and
and
testl
dec
mov
mov
mov
andl
test
scas
subl
clc
cwtl
out
mov
lods
repnz
jb
and
dec
sti
lods
inc
roll
and
jb
add
jno
jl
data16
dec
xchg
arpl
xor
jbe
ds
inc
out
add
sub
adc
dec
cmp
pop
and
jns
test
or
test
out
stos
loop
xor
data16
mov
pusha
insb
incl
or
gs
dec
inc
push
mov
jl
fnstsw
sbb
add
inc
mov
dec
xor
outsb
add
push
es
push
xor
inc
and
in
in
mov
jno
mov
inc
imul
incb
or
pusha
cld
subl
xor
jno
mov
add
push
lcall
addb
insb
adc
xor
adc
in
cs
es
sub
add
sub
add
popf
repnz
enter
inc
add
pop
lock
pusha
sub
mov
mov
sbb
aam
pop
mov
adc
cmp
lea
xor
in
incl
ficoml
test
cmp
shl
cli
inc
adc
rol
xor
clc
in
add
cmp
bound
cmp
std
add
and
subb
push
or
add
dec
or
imul
cmp
test
or
inc
or
inc
mov
cmp
inc
dec
mov
xchg
in
adc
rcl
js
dec
push
cmp
daa
inc
adc
cld
cmp
push
je
aas
in
fdivl
push
pop
jmp
cmp
jp
add
inc
test
lea
hlt
pop
cmc
int3
xor
sbb
gs
gs
or
push
neg
mov
push
adc
sub
cmp
sub
clc
inc
mov
scas
ret
mov
rorb
push
scas
rcrb
xor
cmp
add
fdivl
shll
xor
lock
dec
adc
adc
add
sbb
xchg
lock
add
sub
fcompl
mov
add
rcrl
pop
push
and
outsl
add
xchg
adc
cwtl
xchg
add
shrl
pop
sub
or
test
out
andb
push
cwtl
push
je
push
fildl
jle
mov
ret
call
sbb
stos
dec
decl
jmp
clc
aam
mov
addb
shlb
sbb
cld
ljmp
push
mov
add
cmp
mov
in
xor
jmp
jmp
jmp
jo
test
movsl
push
mov
rorl
push
jne
pusha
inc
sbb
jb
fsubrl
fcmovnbe
sbb
jne
dec
mov
movl
push
push
aam
push
lods
push
jmp
adcb
arpl
xor
add
orb
push
loopne
add
push
imul
cwtl
pop
icebp
jmp
lea
fwait
les
inc
mov
call
jecxz
inc
testb
in
in
cmp
xor
test
inc
test
jmp
xchg
adc
push
push
jge
mov
jmp
push
mov
in
jle
cmp
aas
sar
adc
add
add
test
imul
mov
mov
and
lds
leave
iret
pop
fcmovu
lret
sub
mov
lods
or
add
sti
pushf
add
fisttps
xor
add
push
adc
add
or
sub
adc
inc
add
cmp
js
mov
xor
dec
push
jle
pop
pusha
xor
sti
mov
push
les
dec
cmp
push
inc
outsl
jo
push
cmp
in
sub
or
adc
jb
sub
jl
jge
mov
jle
inc
adc
call
test
push
in
xor
dec
sbb
dec
in
mov
xor
andb
lret
inc
test
sbb
cmp
mov
repnz
push
jl
or
sbb
mov
ucomiss
push
sbb
fst
push
cmp
addb
and
test
scas
es
mov
test
repnz
lcall
inc
sbb
ja
xchg
arpl
xchg
add
mov
mov
mov
scas
push
inc
adc
xor
popl
push
movsb
add
cmp
clc
enter
jl
adc
pop
int3
aas
loop
in
rorb
pop
mov
mov
popa
add
fidivs
cmp
sub
lahf
mov
sbb
push
add
adc
mov
into
mov
loop
push
loope
push
mov
mov
fsub
out
cli
xor
shl
pop
outsl
out
push
insl
xor
testb
adc
cmp
dec
push
ret
gs
push
negl
sbb
bound
lods
je
jp
in
and
push
jae
pop
cmc
pop
cltd
add
add
out
pop
inc
leave
adc
and
fildl
mov
cmp
inc
mov
mov
sub
lds
je
push
fwait
xchg
and
fsubs
inc
mov
loopne
inc
js
adc
test
pop
xor
sar
cs
rcrl
dec
dec
cs
inc
push
shrb
jg
add
push
loopne
rorl
fwait
sbb
inc
push
or
dec
jmp
and
aad
xor
in
pop
int3
mov
stos
aad
lret
mov
push
jns
pop
insb
incl
sub
dec
inc
sarb
xor
jne
add
int3
mov
mov
loope
push
leave
or
gs
cwtl
fs
daa
lea
pop
jb
pop
jo
adc
stc
dec
rolb
add
pop
mov
mov
and
dec
push
fucomi
sarb
dec
clc
push
mov
out
call
cmp
sbb
mov
xor
or
lock
fwait
data16
ret
or
std
ret
mov
add
ljmp
andb
sbb
loop
test
sbb
aad
inc
js
mov
mov
out
cli
aaa
xor
lret
pop
or
mov
rclb
adc
push
pop
adcb
rcll
mov
add
and
movb
xchg
loopne
pop
fs
lcall
stos
pusha
rorl
lds
insb
hlt
cwtl
mov
call
push
mov
sbb
sub
jl
or
das
add
xchg
and
xchg
mov
ret
shlb
jb
cld
mov
xchg
std
pop
jmp
bswap
in
push
divl
xor
mov
add
jle
xor
int
ficomps
mov
leave
push
inc
lds
pushf
gs
and
fs
mov
or
add
xor
sub
push
mov
cli
pop
faddl
in
push
dec
and
ret
imul
cmp
in
push
icebp
faddl
push
mov
rorb
inc
dec
roll
stc
fsubrp
pop
fsub
and
stos
in
mov
mov
sbb
sub
inc
mov
mov
sbb
lock
add
lcall
es
lcall
push
xchg
jb
pop
cmp
add
popf
pop
cmp
outsl
dec
clc
mov
adc
inc
orb
pop
lds
test
xchg
inc
push
adc
cmp
mov
add
cli
ljmp
int3
mov
adc
mov
xchg
fidivl
pop
xor
dec
cs
das
add
mov
push
push
add
add
pop
clc
inc
shr
test
mov
dec
dec
mov
popa
inc
popa
pushl
inc
mov
cmp
ljmp
aam
cmp
sti
sbb
mov
sti
call
fbld
jl
jb
or
add
cmp
int
ret
leave
test
call
gs
push
lock
dec
cld
call
mov
mov
xor
xchg
or
mov
pusha
scas
mov
jb
div
imul
sub
cmp
cli
push
mov
xor
lods
fisubrs
dec
add
jns
or
ret
pusha
rorl
jbe
ljmp
xchg
adc
dec
and
mov
push
mov
loop
mov
subb
test
cmpsl
hlt
lock
pop
fdivs
add
cmp
jge
lcall
mov
arpl
add
push
decb
pop
xor
pop
push
pop
pop
test
fdivr
sbb
pop
add
cmp
add
subb
mov
inc
fidivl
dec
hlt
repnz
ret
int
shrb
rorb
mov
je
inc
inc
or
mov
decb
adc
pop
mov
setle
popf
clc
loopne
imul
add
sub
or
fisubl
inc
dec
fisubrs
out
arpl
jmp
and
pop
nop
adc
add
lahf
aad
shl
inc
or
push
mov
mov
rclb
or
pop
inc
int3
fucomi
pop
jge
pop
xor
or
lock
sti
add
dec
loopne
adc
sbb
jl
mov
lock
addl
sbb
cvtdq2ps
call
sub
sbb
push
data16
ljmp
subl
les
mov
test
inc
mov
adc
inc
xchg
loopne
push
mov
or
loopne
inc
cmp
das
js
lock
xchg
pop
aam
fisubrs
jne
shrb
in
lock
call
mov
ds
xor
push
call
ss
xlat
jp
jg
out
xor
fadds
sbb
push
add
out
jno
sub
cs
bound
lds
sub
in
ss
pop
dec
js
jp
testb
inc
data16
mov
out
in
rolb
lods
and
shlb
mov
inc
das
push
xchg
negb
dec
lock
orl
jmp
orl
dec
js
ret
sbb
jb
fst
jp
lea
cmp
mov
fcompl
or
outsl
mov
cli
cmpb
jge
xor
add
push
add
mov
movsl
es
xchg
push
cmp
cmp
hlt
clc
bound
test
clc
mov
mov
cmp
loopne
adc
faddl
and
stos
cmc
jo
cs
mov
ss
jge
pop
js
add
and
dec
xor
cmp
aam
hlt
in
test
fimuls
pusha
pop
mov
pop
adc
push
gs
xchg
cmp
ja
mov
mov
mov
loopne
cmp
xchg
mov
cmc
inc
scas
xor
cld
dec
fadd
fcomip
cmpsb
fildll
and
adc
mov
and
mov
mov
ret
jns
js
leave
adc
mov
testb
and
inc
test
jg
mov
mov
pop
hlt
stos
adc
jle
notl
lods
push
and
imul
das
jle
adc
and
add
dec
aaa
shll
add
js
jecxz
dec
lods
or
mov
movsl
push
jl
inc
jge
mov
add
mov
popa
push
int3
adc
imul
pop
add
aas
mov
adc
push
add
in
and
sbb
fistps
and
fs
jmp
scas
sbb
push
jae
out
and
xor
adc
mov
dec
mov
pop
or
pop
jae
pushl
mov
mov
push
pop
call
add
sbb
adc
pop
loopne
xorb
leave
aaa
mov
loope
call
inc
mov
arpl
dec
add
jl
xchg
sbb
js
xchg
pop
mov
sub
ret
and
mov
cmp
xchg
cmp
jg
mov
je
pushf
das
dec
mov
sbb
and
punpckhdq
fldl
lea
push
les
mov
and
mov
cmpsb
fdivs
test
jmp
inc
push
nop
push
fs
subb
inc
in
xchg
mov
fwait
or
loopne
and
js
push
pusha
jge
jae,pn
jge
fmull
push
mov
psraw
mov
out
dec
xor
push
mov
out
xchg
push
pop
add
mov
add
cwtl
dec
mov
test
and
or
mov
lea
jb
je
call
aam
mov
out
inc
rorl
cmp
out
jge
and
in
inc
fwait
xor
enter
push
int
push
mov
pop
push
iret
jl
sbb
nop
push
roll
xchg
loopne
cld
cld
inc
push
fisttps
ror
std
cmp
adc
test
int3
aad
out
stos
or
test
into
rclb
loopne
clc
in
rorb
and
shrb
aam
mov
icebp
sbb
dec
sarb
mov
dec
lock
movsl
outsl
sub
call
rolb
cmp
clc
aaa
fsubl
or
or
sbb
mov
jne
or
in
xor
sbb
clc
aaa
aaa
jmp
loop
adc
add
adc
sahf
iret
adc
cmc
fiadds
xor
adc
jp
or
or
clc
xor
loop
jecxz
out
data16
mov
adc
cld
ss
push
push
push
xor
mov
jno
enter
add
int3
inc
mov
adc
pop
fildll
add
loopne
dec
lock
add
cld
jbe
dec
rorb
mov
inc
jns
mov
jne
adc
outsb
pushf
cmp
push
add
mov
lcall
inc
sar
inc
cmpsb
add
out
and
or
add
mov
or
mov
hlt
mov
push
mov
outsb
inc
in
mov
fsub
lock
add
xchg
cli
js
mov
jmp
lock
add
pusha
shrl
xchg
clc
cwtl
sub
dec
inc
add
dec
push
mov
and
icebp
sub
decl
dec
lock
hlt
jne
shr
ljmp
jne
insl
push
test
adc
pop
and
add
testb
hlt
stos
in
jno
mov
and
lods
xor
ret
sbb
andl
push
lock
aaa
fnsave
add
push
data16
imull
movsb
mov
inc
and
add
push
leave
sbbb
pusha
cld
pop
hlt
push
mov
leave
lea
adc
gs
push
ret
test
bound
xchg
jbe
mov
jb
jmp
ret
pop
push
lock
cmp
add
popa
jae
xchg
add
mov
adc
sub
inc
decb
mov
ret
mov
clc
aaa
mov
pusha
mov
xor
pop
add
cmp
inc
repz
mov
ror
jno
mov
sbb
rol
jge
cli
cmp
push
cld
cwtl
push
push
jne
loopne
jns
add
idivb
push
clc
fwait
mov
cmp
into
test
addl
xor
mov
or
sub
or
pop
scas
cli
cmpl
inc
aaa
ss
pushl
cmp
cmp
movsb
cmc
in
inc
movl
pushf
jno
jne
jl
xor
jb
ljmp
repnz
inc
mov
gs
test
testb
es
shl
inc
jo
inc
les
scas
add
vpmacsswd
xor
jge
rorb
sbb
daa
mov
das
inc
int3
clc
notl
mov
test
mov
out
sti
xor
mov
loop
pop
dec
push
xchg
xor
mov
sar
mov
or
mov
mov
inc
loop
push
rorl
fcomps
inc
stos
mov
add
add
adc
sbb
xchg
add
std
sbb
ss
test
sub
mov
sub
xchg
push
push
mov
inc
jbe
jbe
add
inc
adc
pop
lret
cs
sbb
data16
sti
pop
push
cld
add
clc
aam
inc
cld
jo
cli
dec
ds
mov
imul
in
add
mov
ret
orl
lock
adc
push
popa
mov
pop
jg
adc
imul
inc
and
mov
inc
xchg
sti
mov
call
testl
jg
mov
leave
inc
fisttpl
out
sbb
les
add
inc
sar
adc
scas
adc
sub
mov
fdivp
jg
les
mov
mov
cmpb
cmc
cmp
lea
xor
push
xor
xorb
pop
loopne
xor
push
and
lret
add
jno
je
sbb
add
pop
cld
xorl
leave
iret
inc
sahf
adc
clc
mov
adc
adc
icebp
add
lock
jb
imul
pop
fs
mov
inc
popa
dec
shrb
mov
cmpsb
add
jno
loopne
push
repz
mov
jbe
in
add
pop
fmull
mov
jle
ljmp
and
jb
mov
push
lock
sbb
and
cmpsb
dec
fsubrl
sti
outsb
loop
adc
and
mov
add
ret
gs
popa
ret
popa
and
icebp
cmp
aaa
loopne
fisubl
outsb
addb
shll
hlt
adc
dec
or
cmp
cmpsl
dec
std
call
enter
int3
hlt
xchg
cli
pop
ret
jb
sbbb
lea
push
cld
add
std
inc
mov
lahf
jbe
out
inc
shlb
jns
ljmp
or
dec
es
fdivrl
mov
roll
fadd
movsl
pop
or
std
cmp
add
scas
scas
and
jle
push
lock
in
jl
pop
lret
es
icebp
nop
adc
stos
jae
mov
adc
or
call
add
jmp
lcall
mov
ret
cs
loopne
jg
lods
fs
addr16
mov
add
xchg
pop
sbb
ret
mov
scas
test
jle
jbe
incl
imulb
repnz
pop
cld
dec
pushf
decl
je
cmp
fildl
adc
fstps
inc
mov
ss
roll
pop
add
rcll
sbb
fmuls
ret
push
push
mov
xorl
and
inc
xchg
out
test
push
add
inc
sub
popf
and
adc
jl
ja
ljmp
mov
lcall
xchg
xchg
jno
inc
add
push
xchg
adcl
fdiv
pop
clc
ret
icebp
fdivr
in
xor
jnp
insl
andb
add
ret
fiadds
xor
je
ror
jmp
and
add
mov
pop
lods
dec
mov
or
das
adc
iret
inc
dec
in
adc
push
adc
adc
std
fstl
mov
sbb
cmp
daa
ret
add
or
push
insb
out
cwtl
lea
mov
int3
rcrl
call
rolb
mov
xchg
cld
pop
pushf
std
lcall
incl
mov
mov
or
cli
inc
fsubrs
mov
lods
pop
movsb
icebp
xor
xor
fcmove
add
inc
inc
addl
add
jecxz
add
repnz
adc
cld
mov
mov
out
mov
xor
outsb
test
push
lods
decb
ljmp
or
jg
lcall
test
mov
test
jl
mov
cmpsl
cmp
push
pop
add
rcrl
pushf
fists
mov
jb
sub
jp
scas
add
adc
sbb
add
call
js
shlb
mov
call
ret
jo
cld
jp
sub
xor
mov
cmpsl
inc
arpl
test
add
add
cmp
push
int3
mov
out
sahf
adc
and
pushf
push
nop
aam
insb
icebp
adc
sti
rcrl
jbe
jl
sub
add
add
and
push
shll
xor
jg
mov
test
adc
jmp
jb
pop
jp
jl
loope
pop
cmpsb
and
call
adc
pop
sbb
inc
sbb
fimuls
push
mov
or
test
cmp
ljmp
push
inc
dec
ja
jge
jne
leave
orl
fsubs
ljmp
cmp
clc
fcmovnbe
sbb
sub
ret
out
in
je
pop
stc
jae
inc
sti
aas
lods
or
push
rolb
out
push
imul
fs
fiaddl
pop
push
xor
sub
and
mov
push
sub
js
mov
push
or
mov
outsb
adc
adc
fldt
jge
cmp
lods
in
or
cltd
adc
mov
test
lret
mov
data16
insl
cld
add
in
inc
adc
push
add
pop
decl
sbb
int3
mov
orl
jge
mov
rcrl
pop
dec
add
nop
test
push
mov
fimull
mov
dec
aaa
mov
in
jecxz
pop
in
mov
dec
mov
and
sti
int
ret
pusha
cmp
mov
andl
xor
jo
mov
ret
ljmp
and
sbb
jg
xorl
outsl
insb
data16
call
push
shrl
inc
mov
cmpsb
dec
repnz
cld
rol
pop
loope
mov
rclb
imul
js
ret
fbstp
mov
xor
inc
mov
rorl
inc
push
mov
add
xchg
fdivs
jg
xor
cmp
jecxz
inc
inc
inc
test
popf
mov
leave
pusha
incl
fcomp
jno
xchg
rorl
sbb
ljmp
jae
xchg
push
cmpsb
pop
test
mov
fcoml
pop
test
ret
lret
pop
push
icebp
pop
dec
add
das
cmp
lcall
outsl
jne
ds
inc
into
into
adc
jle
pop
adc
mov
add
add
mov
hlt
shlb
add
fiadds
shl
push
sub
shl
xlat
aas
dec
mov
pop
data16
mov
fidivs
out
sub
add
imul
fisttps
fcomps
push
mov
dec
add
les
jbe
push
in
rolb
loop
and
inc
or
stc
in
cld
add
and
mov
xor
mov
mov
call
jne
int
nop
mov
pop
shrb
pop
add
fsubr
xchg
orl
cmp
pop
or
shlb
add
test
cmp
xchg
jne
pop
ds
insb
imulb
ffreep
popl
sbb
movb
movsb
decl
sub
adcb
out
hlt
mov
test
inc
mov
mov
repnz
adc
pop
add
jp
push
push
add
adc
inc
inc
call
pusha
popl
pushf
ds
sub
or
rcrl
lret
aas
xor
lock
sahf
scas
push
inc
lcall
punpcklbw
pop
nop
adc
sbb
outsl
mov
scas
mov
and
mov
mov
bnd
adc
sub
lock
addb
add
mov
jecxz,pn
rclb
rorb
aaa
jnp
fs
or
xchg
xor
stos
or
in
push
pop
mov
jmp
decl
inc
jge,pn
fidivrs
cmpsb
or
ret
loopne
adc
jne
jmp
cld
or
xor
cmp
arpl
dec
push
ret
lahf
jmp
push
add
inc
not
fidivs
jo
in
repz
push
jl
jg
je
je
inc
mov
out
movsl
icebp
inc
data16
test
sub
xor
or
test
pusha
xchg
add
subb
cmpsb
test
or
sub
pop
fcomip
test
push
pop
cmp
mov
cmp
or
iret
fcomip
push
fiaddl
push
sub
mov
cmp
or
sub
orb
jb
addl
push
adc
int
inc
or
adc
dec
mov
mov
mov
js
subb
add
std
add
mov
sub
shll
inc
test
sti
push
shll
add
cwtl
fidivs
lret
adc
je
push
xor
pop
sbb
movsb
jl
imul
roll
call
fwait
lock
dec
xorb
jbe
mov
ret
mov
call
ss
or
fcoms
addr16
es
push
cld
rorl
je
ret
test
xor
lock
xchg
cmp
cmpsb
pop
adc
movsb
pop
ret
ds
movsb
push
in
sbb
pop
int3
popl
adc
repnz
or
hlt
sub
sub
jo
jo
cld
call
and
ficomps
cmp
jge
xchg
mov
pop
in
pmaxub
in
testb
mov
lock
add
xor
fwait
out
sbb
jmp
xor
hlt
ljmp
sbb
add
push
cld
add
loopne
and
adc
clc
add
call
jbe
mov
sbb
dec
pushf
jle
add
push
cli
push
xorl
mov
aam
subl
jge
sub
pop
jne
imul
push
imull
add
pop
bound
push
jmp
push
movb
cmp
aaa
mull
mov
rolb
add
sbb
push
addl
push
fildl
jecxz
pop
out
add
jp,pn
orb
and
je
push
mov
adc
pushf
daa
xor
aad
sub
incl
jl
adc
jmp
xchg
adc
add
add
add
xchg
jb
inc
push
sub
cmp
insb
jg
adc
push
push
je
cmp
adc
jne
popf
enter
add
call
rorl
mov
dec
add
push
fmuls
rolb
shrl
mov
sub
cs
xorl
and
push
or
adc
jbe
add
fcoml
jmp
sarb
mov
xor
jge
push
sbbb
in
add
les
adc
xor
mov
mov
mov
test
adc
rolb
imul
cmp
dec
ljmp
jg
jle
jmp
stc
cli
cmp
outsl
mov
lock
ljmp
jle
mov
xorl
push
adcb
add
lods
xor
loope
fdivs
pop
pusha
inc
cmpsl
and
call
fsubs
aad
push
mov
and
add
add
scas
lret
das
js
or
rcrb
das
jmp
bound
int3
dec
cld
int
mov
adc
jnp
sar
or
ljmp
adc
cld
jle
lock
incb
push
jp
ret
add
sub
in
sbb
test
add
outsb
pop
mov
shlb
mov
or
add
add
xchg
pop
inc
xor
incl
scas
push
adcb
mov
jp
popf
fsubrp
pop
add
mov
and
inc
mov
subb
inc
call
jle
push
js
sub
loopne
mov
hlt
push
in
outsl
mov
adc
lret
rolb
test
push
divb
lcall
test
fidivrs
jl
fcomps
sub
jp
ror
inc
inc
lock
sbb
add
ljmp
add
lret
cmp
std
dec
sub
add
nop
jmp
sbb
add
je
add
jmp
add
test
cmpsl
out
pop
ret
add
xchg
daa
mov
inc
mov
push
cwtl
inc
testb
gs
jge
pusha
dec
jmp
inc
je
lock
jle
cmp
bnd
outsb
pop
push
push
add
adc
sbb
mov
fistpll
jmp
add
test
nop
popf
push
push
shlb
jmp
mov
mov
inc
iret
imul
enter
loopne
lret
call
push
out
or
shll
mov
ja
add
aam
ret
pop
rorb
add
int3
out
or
pop
fwait
push
fstpl
inc
aas
repnz
or
lock
mov
sbb
ret
sti
call
std
out
call
data16
outsb
loope
fs
imul
xor
sub
xchg
sbb
call
cmp
ss
loope
cwtl
jbe
inc
lret
push
int3
dec
das
jl
push
pushf
mov
insb
lcall
daa
push
outsb
stos
ss
add
or
hlt
test
int3
call
push
mov
lcall
or
je
mov
jbe
mov
dec
mov
inc
pop
add
push
sub
cld
pop
pusha
stc
addb
mov
stos
dec
rolb
jb
notb
rorb
ss
call
shlb
xchg
add
jg
push
pop
dec
and
inc
cld
sbb
inc
je,pn
nop
mov
das
mov
or
clc
nop
xchg
push
lea
and
add
xor
cwtl
mov
xor
xor
ret
pop
cld
movsb
or
test
push
aam
adc
or
add
jle
mov
add
add
jne
sbb
faddl
dec
lcall
push
jl
out
enter
adc
mov
push
ds
inc
mov
mov
adc
lock
lcall
in
cmp
lcall
in
je
add
call
mov
loopne
lock
lock
jae
jl
jne
jo
mov
or
mov
push
jmp
xchg
mov
addr16
call
and
push
out
mov
dec
insb
mov
sub
repnz
ja
xchg
clc
jg
sarl
add
adc
daa
push
sub
sahf
cmp
add
movswl
inc
mov
add
xor
push
jl
int3
adc
and
sub
hlt
filds
adc
and
clc
and
mov
adc
add
pop
lea
mov
aaa
scas
push
cmp
les
mov
fadd
ds
int3
jmp
icebp
das
fdivrs
orb
push
fmuls
ret
stos
call
pop
cli
aas
test
mov
inc
add
lea
mov
fiadds
adc
dec
xor
enter
aad
adcb
ds
enter
and
pop
popf
scas
and
rorl
jbe
pop
les
cmc
sbb
adcl
outsb
xor
lock
add
ret
mov
test
cmp
out
hlt
idiv
cld
jl
push
sgdtl
scas
filds
push
add
pop
add
pop
cmpsb
outsl
or
add
je
cmp
cld
outsl
ja
ds
fs
add
adc
test
int
push
xchg
lea
push
or
push
loope
sbb
adc
popa
call
add
sub
test
adc
mov
xchg
mov
jge
sub
and
repnz
ret
sbb
or
rorl
in
sar
add
inc
icebp
ss
push
dec
push
call
xchg
dec
pop
mov
adc
stc
mov
adc
cwtl
add
out
or
sbb
push
rorl
dec
fwait
loop
sbb
subb
scas
dec
mov
dec
mov
pop
inc
and
pop
adc
add
add
add
dec
in
dec
lock
inc
jge
and
jae
lea
notb
mov
cli
into
loopne
or
dec
sub
jno
pop
jge
add
inc
cld
idivl
fwait
pop
mov
mov
sub
push
mov
in
lcall
mov
mov
adc
jg
dec
xor
stc
inc
outsb
cmp
adc
xor
ss
ret
push
adc
loopne
mov
jl
shlb
pop
inc
push
ljmp
mov
into
push
cmp
mov
mov
or
call
push
test
sub
es
je
inc
mov
or
xor
popa
sahf
sbb
mov
pop
push
xchg
into
sub
sbb
inc
rorl
decl
scas
inc
jns
cmp
jmp
xor
roll
jb
rorl
in
add
or
jl
lcall
mov
sbb
push
jbe
out
jge
jo
cmp
out
jne
push
mov
pop
andb
ffreep
pop
mov
pop
jb
jno
cld
pushl
gs
call
push
sbb
aas
mov
je
test
sahf
xor
adc
adc
call
fwait
insb
rolb
gs
int3
pop
not
push
push
mov
mov
je
cmp
mov
mov
and
pop
push
addb
pop
leave
mov
jge
icebp
fisttpl
test
pushf
int3
inc
mov
mov
or
lds
lret
dec
pop
sti
mov
jl
sbb
dec
pop
mulb
addb
out
adc
sbb
add
push
or
testb
and
addl
testb
aas
jbe
cmp
or
dec
jmp
pop
sbb
fisttps
push
je
addl
mov
loopne
mov
je
pop
adc
shl
mov
ljmp
jl
adcl
fisttpl
mov
in
sbb
jge
inc
jne
lcall
rolb
subl
add
lea
jp
jle
or
ss
push
test
sub
fldenv
fwait
adcb
loop
pop
orl
adc
pop
adcb
loop
xchg
pop
rclb
push
jmp
mov
adc
add
dec
mov
cli
or
test
arpl
cmpsb
xchg
push
xchg
fstpl
and
dec
mov
std
out
cld
and
and
dec
call
adc
inc
and
jb
push
outsl
incb
insl
xor
sahf
pop
cvtps2pd
adc
ret
inc
ljmp
adcb
mov
xlat
insb
push
data16
and
add
pushl
dec
mov
lcall
add
push
mov
add
mov
and
inc
test
dec
push
shll
rcr
hlt
dec
stos
mov
test
cmp
push
add
inc
add
push
add
pop
gs
scas
into
cmp
inc
scas
add
mov
gs
into
pop
incl
movsl
add
cli
faddl
lcall
adc
cmpb
loope
jge
add
sub
cmp
enter
outsl
ljmp
add
ret
cs
dec
mov
adc
jge
add
mov
dec
inc
ds
mov
fwait
mov
pop
cld
and
sbb
mov
addb
adc
mov
mov
enter
mov
ror
xor
stos
add
and
cli
push
lock
dec
inc
imul
adc
roll
outsb
xchg
aaa
or
es
outsb
lcall
lea
cwtl
add
je
pushl
fsubrp
push
and
mov
dec
add
xchg
in
fisubrl
xor
or
scas
dec
inc
push
test
roll
mov
loop
inc
cmp
xlat
fwait
test
call
cmp
jo
xor
call
imul
nop
shlb
rcrl
or
insb
je
cmp
sahf
cld
xor
push
fidivrl
mov
dec
dec
je
dec
inc
inc
pushf
sbb
std
aaa
sahf
mov
mov
adc
es
dec
call
ret
je
mov
hlt
push
call
sub
push
je
fildll
enter
jecxz
mov
lods
pop
lcall
inc
xor
or
aad
add
sbb
imulb
and
jmp
xchg
jae
jnp
mov
jp
jne
in
int
or
add
inc
pusha
mov
in
or
orl
daa
faddl
loopne
sub
cmpsl
call
rorb
inc
ja
mov
fdivs
idivb
push
pop
mov
in
mov
push
sarb
outsb
loope
popa
jne
fs
fdivrs
pusha
loope
ds
rcrb
push
sbb
or
cmpsb
pop
ss
mov
popf
test
mov
mov
insl
test
ret
lock
cmc
add
mov
dec
fldl
xchg
mov
cmp
pop
shl
in
ljmp
icebp
mov
inc
jo
in
and
out
pop
loopne
lock
js
adc
and
movsb
xor
ret
add
inc
xor
mov
icebp
lahf
popa
jae
xor
in
add
xor
filds
fxch
pop
imul
add
out
or
ret
lahf
push
pop
add
je
cld
ud0
cmp
pop
fildll
add
mov
fstpt
sbb
add
mull
sbb
test
mov
outsb
cmp
je
lret
das
add
lds
cmp
mov
repnz
sub
xchg
test
xor
ret
inc
mov
cld
orb
out
adc
sub
add
mov
mov
mov
push
push
stos
test
js
mov
aas
push
sbb
out
push
adc
cmp
sub
shlb
push
mov
out
adc
dec
pop
pop
mov
sub
xor
adc
lcall
test
add
leave
test
push
pop
add
je
mov
adcl
jle
ret
out
popf
negb
sbb
push
ret
adc
ret
and
repz
lds
mov
decb
xchg
sbb
pop
test
adc
adc
sub
and
xor
mov
gs
adc
sub
mov
jmp
lods
ljmp
adc
outsl
jb
push
or
loop
sub
push
mov
fildll
out
sbb
mov
adc
div
xor
jmp
xchg
mov
adc
lods
add
mov
test
or
loop
push
stos
push
pushaw
or
cld
xchg
or
lcall
mov
mov
push
push
les
inc
jb
cli
in
movsb
add
lea
les
lea
js
xchg
mov
add
jo
incl
inc
scas
cld
and
loop
inc
sub
push
call
push
pop
mov
dec
cmpsb
dec
ret
test
add
std
push
stos
or
adc
add
cmpl
cmp
stos
unpcklps
call
mov
pop
xor
lcall
mov
mov
ljmp
adcb
andb
xor
mov
lea
xchg
xchg
or
mov
inc
and
cmp
jb
push
cmpb
mov
and
xor
cwtl
fisttpl
pop
loopne
xchg
push
add
jle
add
test
lcall
movsb
mov
mov
enter
cld
scas
out
fiadds
ljmp
mov
subl
lahf
mov
data16
int3
mov
ds
add
and
xor
mov
pop
nop
sbb
jmp
push
popf
ljmp
dec
incl
ljmp
leave
xor
insb
clc
stos
push
mov
mov
mov
sar
test
mov
add
stos
add
test
or
mov
xchg
adc
mov
sub
roll
adc
out
adc
mov
mov
or
test
pop
mov
hlt
mov
pusha
inc
ret
cmove
xchg
cld
fistpll
fisubs
pop
inc
cmc
out
jns
pop
call
push
and
or
sub
cltd
jo
inc
imul
std
aas
scas
mov
xchg
pop
mov
orb
jmp
dec
out
shl
mov
add
xchg
je
pop
movsl
cmp
adc
incb
and
push
sarb
mov
and
push
inc
enter
add
loope
in
and
mov
sub
sbb
stos
in
xor
rorb
or
shrb
test
mov
mov
icebp
or
decb
sub
sbb
nop
xorb
mov
adc
mov
jbe
loope
jb
int3
sub
scas
cmp
xor
lock
or
push
or
xor
mov
pop
pop
loop
ret
decl
and
test
inc
inc
push
ret
ret
popl
decl
cwtl
lahf
mov
movsl
fs
pop
pop
jmp
mov
stos
lds
mov
mov
sub
addb
or
push
out
daa
and
call
enter
sbb
mov
cwtl
mov
or
jb
push
add
mov
hlt
push
cmp
xchg
lock
mov
mov
jp
jbe
sbb
sarl
ds
xor
mov
movsl
mov
sub
loopne
mov
scas
jp
mov
nop
cmpsb
mov
cs
pusha
ret
pop
cmp
enter
push
sub
add
aas
testb
ret
adc
add
subb
lea
in
dec
sub
mov
xor
ret
pop
rcrl
js
jmp
adc
sbb
xor
push
or
cli
or
pop
test
push
mov
push
inc
rorb
or
or
cmp
xor
push
sub
ja
imul
add
mov
and
add
add
mov
xchg
pop
ljmp
mov
outsl
xor
cmp
and
cmp
jg
lock
push
dec
inc
sub
pusha
jmp
xchg
movsb
push
adc
mov
shl
adc
icebp
xor
mov
clc
add
add
enter
and
lcall
mov
cld
adcb
pop
inc
int
movb
jne
mov
pop
js
sar
subl
add
test
dec
clc
push
mov
ss
cmp
jl
mov
add
inc
cld
mov
push
add
sbb
stos
push
data16
mov
mov
mov
lea
out
mov
orb
adc
lahf
shll
adc
push
lret
jbe
mov
sbb
inc
mov
gs
push
inc
xor
int
js
movsb
dec
mov
movsl
scas
cmp
cmp
mov
xchg
cmp
adc
xlat
lods
push
mov
jb
push
xor
dec
jno
popa
inc
sbbb
in
mov
jge
movl
test
inc
ja
mov
in
test
sub
add
fsubrs
inc
loopne
push
mov
ret
pop
rorl
addr16
orl
test
adc
add
je
scas
stos
jg
in
mov
aam
pop
iret
ret
test
rolb
imul
inc
fimuls
orl
cmp
jg
cwtl
js
cld
jle
jl
mov
add
rclb
popa
test
cmp
dec
mov
in
or
push
mov
sbbb
fdivl
js
rcll
sti
inc
ljmp
movsl
lods
addb
cmpsb
sbb
jb
xchg
pop
out
push
insl
xor
insb
jb
inc
inc
adc
pop
mov
jle
aad
jbe
cmpsl
push
leave
xchg
je
std
jg
mulb
jmp
hlt
ret
push
xor
lret
movsb
mov
sar
add
adc
lahf
add
push
je
jl
push
insl
pop
pop
cld
add
int3
add
fiadds
mov
sbb
sahf
shl
cli
cld
push
rol
mov
ja
das
imul
hlt
call
or
inc
xor
ja
push
idivb
add
scas
pop
clc
ds
fisttpll
or
add
cld
ja
mov
mov
xor
cmp
mov
inc
mov
into
clc
add
mov
push
pop
inc
shll
pop
mov
das
lods
in
pop
adc
inc
lea
jg
mov
push
xor
mov
rdpmc
decl
roll
pop
sub
mov
clc
rolb
fcomps
sub
adc
sub
push
xor
push
dec
mov
mov
fs
cmp
cmpsb
pop
pop
popf
adc
mov
inc
cmp
fdiv
decl
pop
fimull
cmp
dec
push
sti
add
and
gs
mov
outsw
fldl
mov
orb
pop
cmp
mov
pop
xchg
xor
mov
jmp
dec
cmp
sub
adc
push
adc
add
aaa
inc
inc
add
test
push
mov
xchg
insb
mov
clc
lds
and
lret
hlt
sub
lcall
sbb
inc
outsb
xor
adc
out
inc
mov
mov
movsb
sub
pop
jbe
mov
push
std
and
shrb
pop
push
test
clc
jne
sbb
test
push
xchg
sbb
popa
jne
pop
mov
sahf
lods
xor
shlb
pop
cld
lods
es
or
das
dec
inc
loopne
dec
nop
push
int3
mov
call
cmp
ja
shlb
ficompl
lret
scas
fmuls
std
mov
fs
jmp
es
jg
in
cmp
pushf
fdivrs
mov
js
and
sarb
push
mov
jb
push
add
shrl
ret
inc
push
xor
repz
std
mov
xchg
cmp
fsubr
les
inc
leave
mov
loop
fstpt
adc
insb
mov
mov
or
lock
jbe
mov
test
mov
mov
mov
jle
mov
adcb
and
push
shlb
call
mov
add
adc
adc
movsb
arpl
or
fdivrl
test
out
std
call
pop
and
cmp
cld
test
js
push
mov
test
sbb
jae
ss
prefetchnta
xchg
jo
inc
push
or
push
shl
jge
xchg
adc
mov
inc
testb
mov
add
rolb
clc
push
add
rcrb
sarl
pushf
adc
movb
push
call
daa
shrb
jge
rolb
cli
add
jge
out
cli
in
das
loopne
push
mov
cmp
inc
out
popa
mov
mov
lret
jmp
jg
pusha
or
shl
fs
xor
ljmp
imul
std
inc
ds
dec
adcl
icebp
aaa
dec
jge
rorl
rcr
mov
imul
adc
mov
or
xchg
dec
enter
cmp
outsb
popa
nop
dec
or
push
pop
dec
nop
pusha
jb
add
mov
sub
mov
add
mov
outsb
stos
lods
add
cmp
cmpl
push
mov
adc
push
rclb
mov
mov
push
mov
xor
xor
fcmovnu
lock
jmp
inc
aam
cmp
fisubrs
xor
popf
jecxz
rcrb
rolb
stos
lock
jl
adc
jno
insb
xchg
inc
call
arpl
decl
mov
add
ret
rol
jne
cli
je
aam
jmp
xchg
int3
push
sub
add
jne
mov
xor
and
sub
scas
xor
push
dec
add
fxch
div
test
xor
xor
pusha
cmc
push
jecxz
sub
jle
xchg
add
cmp
jmp
test
lods
dec
cmp
in
inc
add
adc
cmp
xor
loopne
into
cmp
lock
pushf
insb
test
dec
sub
out
sbb
fmuls
jle
orb
xor
mov
fstpt
fwait
into
xor
mov
rcl
dec
mov
cmp
dec
xor
add
mov
xchg
add
add
pusha
cmp
mov
add
cmp
xor
roll
mov
nop
pop
dec
enter
jp
cld
fndisi(8087
push
daa
jb
adc
mov
xchg
adc
jmp
fwait
lcall
mov
shlb
dec
nop
cmpl
push
aam
call
inc
mov
mov
mov
lds
rcl
bound
sarl
xor
setb
mov
loopne
fbld
int3
pop
and
inc
add
fdivrp
outsl
pushl
mov
test
aas
xor
in
xor
cmpl
inc
xorl
adc
lea
inc
sbb
inc
xchg
sbb
mov
adc
out
popf
addl
in
mov
in
rolb
sti
jb
push
jmp
sbb
adc
mov
xchg
dec
jne
pop
insl
jg
ss
or
mov
mov
add
outsb
jb
mov
inc
int3
ss
inc
je
xchg
pop
lret
xchg
push
adc
lea
xor
ds
xorl
das
clc
lds
add
cmpl
dec
add
clc
enter
cmpl
jl
ljmp
aam
adcl
mov
sbb
jp
or
adcb
mov
mov
ljmp
call
mov
sbb
cmp
adc
mov
jnp
add
add
mov
and
dec
les
psubsb
mov
dec
shrb
add
mov
outsl
into
pushl
test
fdivr
xor
add
ja
sub
decl
mov
cli
xlat
out
mov
xor
or
repnz
push
addl
and
or
or
push
enter
inc
in
adc
push
jmp
mov
test
mov
inc
fidivrs
in
incl
push
mov
bound
decl
dec
xchg
cmp
add
pop
mov
imul
lea
jnp
sub
lods
lea
test
mov
sub
xchg
ss
loop
lods
or
and
and
icebp
mov
or
add
push
adc
xor
xchg
arpl
dec
inc
rcrb
push
ret
push
ja
mov
dec
cld
outsl
adc
mov
xor
add
hlt
jmp
mov
mov
add
cwtl
push
mov
add
jne
lods
jl
call
leave
xor
cld
mov
ret
insl
mov
xor
jp
into
add
sbb
hlt
fs
and
in
jp
or
add
repnz
lock
frstor
adc
or
testl
das
jmp
sbb
add
mov
mov
jmp
subps
rcrb
and
movsl
test
les
shll
add
and
out
hlt
aas
outsb
mov
or
ja
in
xor
sub
or
pop
inc
fs
mov
fisttpl
hlt
aaa
mov
insb
rorl
adc
sub
outsl
out
push
fsubr
test
ret
or
mov
sbb
lock
test
add
mov
mov
mov
jle
cmp
jge
add
inc
add
hlt
outsl
mov
xor
in
and
push
pop
orb
mov
mov
shrb
mov
jmp
xchg
in
mov
lds
repnz
jecxz
cmp
in
xor
ds
inc
sbb
out
adc
out
addr16
adcb
aas
push
xor
mov
push
mov
sbb
lods
push
add
addb
sub
jmp
xchg
stos
add
or
xor
jne
lock
jne
sub
push
push
cmp
jo
mov
sbb
add
xor
or
sbb
add
cmp
add
loopne
and
fdivl
testb
sub
jb
push
test
mov
cld
test
shl
pop
push
push
or
push
int3
lods
clc
jo
mov
sahf
adc
xor
mov
xor
dec
inc
xchg
sub
je
xchg
sub
push
outsb
pop
js
add
mov
std
lods
rorl
cli
inc
outsb
push
push
call
push
jne
iret
sbb
testl
ret
je
loopne
push
sti
aam
xchg
mov
mov
mov
fmull
sbb
imul
mov
scas
ja
lods
jmp
test
push
rorb
sbb
test
push
inc
cli
incl
jmp
das
movsb
movsb
inc
inc
mov
frstor
adc
mov
fcmovnu
in
add
add
add
or
dec
icebp
jmp
adcl
pop
loop
dec
repnz
dec
push
sbb
mov
rorb
call
mov
mov
loop
ljmp
xor
cmc
scas
aas
sbbb
arpl
js
enter
loope
daa
cmpsb
push
dec
or
mov
mov
lea
pop
dec
mov
cli
push
sbb
pop
orl
push
mov
out
es
test
sete
sti
ja
adc
xor
and
ret
push
inc
xchg
test
add
les
scas
xchg
js
xor
push
and
mov
or
lds
push
fisubrs
dec
movb
inc
int3
adc
jle
data16
or
push
adcl
ret
adc
icebp
inc
ret
call
sub
mov
inc
dec
push
pop
ljmp
pop
hlt
sub
adc
pop
incb
jb
movsw
daa
outsb
mov
add
jne
adc
or
jne
mov
lock
mov
mov
nop
decl
or
jns
movsl
mov
xchg
mov
push
dec
lea
mov
loopne
out
fiaddl
add
ja
push
leave
or
pushf
mov
xorl
cmp
mov
call
inc
sub
inc
fildll
fmul
push
adc
jmp
cld
mov
xchg
adc
ret
add
mov
or
jnp
std
out
push
mov
sub
into
popf
fstpl
mov
shlb
incb
push
fnsave
or
out
add
or
pusha
roll
loopne
fs
adc
or
jecxz
adcb
mov
mulb
jbe
adc
ret
add
mov
or
cld
pop
push
mov
mov
cwtl
inc
xchg
pop
and
jmp
pop
gs
jb
int3
adc
pop
lahf
jp
jmp
data16
sub
or
add
mov
add
aad
lods
test
std
test
sti
ficoml
cwtl
add
pop
roll
adc
js
les
outsl
fiadds
aaa
std
pushl
daa
mov
dec
test
jo
ret
fcoml
inc
clc
cld
imul
xchg
int3
push
add
adc
ret
loop
jle
sub
js
mov
xor
jle
sub
aaa
cwtl
add
fucom
inc
jg
xor
mov
or
inc
fbstp
inc
sbb
and
jbe
sub
rorl
cld
push
call
xchg
scas
ss
mov
push
scas
mov
cld
in
mov
aaa
aad
mov
add
aam
and
into
sub
outsb
rolb
pop
movsl
shlb
mov
adc
mov
mov
inc
push
imul
test
cli
outsb
push
hlt
add
mov
rcl
fs
fstpt
loope
clc
mov
sub
or
inc
je
adcb
jecxz
inc
add
stos
sti
in
xchg
fsub
pop
fld
icebp
inc
or
shll
outsb
xchg
out
inc
add
data16
aad
and
push
std
js
push
xor
adc
adc
pop
add
sbb
sbb
pop
or
ds
push
jns
add
and
inc
xor
xchg
mov
incl
clc
inc
mov
mov
jl
mull
lods
sbb
push
mov
lcall
cmp
out
xor
sbb
jmp
push
pop
adc
inc
pop
pop
lods
ror
and
loope
add
jne
mov
cmpl
push
inc
ret
inc
add
ffree
aas
clc
adc
inc
je
decl
add
fisubs
std
pop
ljmp
inc
mov
ss
sarl
push
lcall
xchg
jae
xor
add
in
cli
nop
adc
add
in
dec
ljmp
push
xlat
outsb
mov
repnz
incb
shrl
in
push
inc
jne
jle
sbb
sub
cs
loop
fs
push
lea
or
lret
pop
dec
pop
adc
lods
in
sar
push
cmp
cwtl
push
inc
jne
push
clc
nop
inc
add
push
inc
call
out
std
stos
fsubl
les
dec
mov
pop
mov
test
mov
stc
jge
pop
xor
test
bt
mov
push
jbe
cli
and
adc
clc
push
mov
xorb
xchg
bnd
xlat
mov
popa
adc
es
les
inc
aaa
inc
push
push
jle
pop
ret
gs
pop
xor
js
call
jmp
adc
mov
inc
inc
incl
jge
enter
dec
xchg
jp
adc
jbe
out
js
pushf
out
sbb
sub
or
dec
or
je
js
adc
lcall
cli
fiadds
lods
xchg
pusha
lret
dec
xchg
dec
icebp
stos
add
movsb
ss
mov
dec
or
nop
std
mov
add
dec
mov
dec
ficoms
mov
jle
push
pusha
cmpsl
lock
jecxz
cmp
add
push
push
jg
xor
ja
loopne
cmp
push
mov
test
or
cmp
std
sub
aas
push
dec
aam
pusha
mov
mov
or
loopne
pop
imulb
push
xchg
ss
ret
pop
jl
mov
decl
sub
adc
rolb
js
xor
sbb
cmp
mov
loopne
push
enter
push
jp
push
mov
pop
mov
lock
push
pusha
rolb
push
sbb
pop
and
loop
or
jb
mov
incl
sub
popa
roll
mov
pop
ret
lea
jg
ljmp
jne
out
incl
mov
add
rclb
mov
frstor
pusha
cmpsl
jb
loop
push
inc
hlt
mov
mov
push
outsb
std
mov
hlt
jle
add
mov
push
cli
fs
call
pop
push
hlt
dec
mov
or
decb
xor
aam
push
in
cmp
nop
mov
sbb
lret
and
in
inc
rolb
inc
pop
repnz
or
or
int3
lret
cmp
mov
xchg
and
mov
in
ljmp
je
add
mov
les
jmp
add
nop
xchg
jne
mov
imul
add
shlb
add
rclb
sbb
lods
cld
scas
add
addl
cmp
fwait
popa
jno
cmp
shl
add
inc
add
call
mov
in
mov
adc
mov
mov
orl
sub
push
and
mov
xor
mov
je
and
cwtl
lods
fsub
sar
mov
xor
pop
mov
lods
dec
push
xor
inc
loopne
rol
popa
pop
xor
cmp
cld
or
outsb
adc
outsl
call
and
mov
adc
int3
push
aam
push
lock
test
push
sbb
xchg
sbb
and
scas
pop
jecxz
fiaddl
test
pop
mov
ja
mov
inc
push
add
outsb
add
mov
mov
cld
insl
add
mov
or
sub
mov
cmp
mov
sbb
pop
mov
fildl
mov
enter
call
mov
and
mov
ss
or
daa
or
push
adc
push
xchg
jecxz
out
jae
ss
cmc
das
rcrb
add
loopne
push
rcrl
out
and
adcb
sub
fiadds
jecxz
add
call
dec
push
dec
and
out
sbb
sub
push
scas
iret
hlt
rorb
jg
fwait
les
add
nop
inc
jb
outsb
lock
dec
dec
adc
push
mov
inc
test
stc
mov
inc
mov
mov
push
xchg
shrb
pushf
cld
jle
mov
or
movsb
test
mov
andl
jl
dec
xchg
hlt
pop
icebp
call
push
push
pushf
mov
bound
pop
dec
mov
cmpsb
inc
and
push
ljmp
lods
sbb
clc
mul
repz
les
pop
outsl
enter
call
outsl
outsl
xchg
mov
cmp
inc
pop
pushl
dec
sar
shlb
movsb
gs
sub
cli
and
subl
jmp
pop
add
add
mov
mov
repnz
xchg
dec
mov
inc
ret
icebp
or
cmp
repnz
pop
lcall
jmp
aaa
mov
out
leave
icebp
lahf
aam
jne
inc
lds
daa
cmp
lock
jb
push
js
mov
sub
mov
loopne
dec
std
push
jg
add
cmp
ljmp
mov
inc
xchg
add
insb
jge
dec
and
scas
cmc
mov
aas
xor
movsl
and
aad
test
or
pop
rorb
lcall
lods
fwait
sub
xchg
fisttps
out
inc
rol
mov
sbb
adc
pop
adc
test
or
lods
xor
scas
adc
mov
rolb
stos
in
insb
add
inc
inc
ret
jp
mov
subb
sbb
cld
pop
dec
xchg
ficomps
inc
cmp
or
sub
sarb
add
pusha
pop
sbb
sub
adc
jne
sbb
loop
fcmove
shlb
sub
js
fdivs
aam
scas
inc
rorl
cmp
sub
test
lods
adc
insw
mov
les
cmp
std
inc
push
cld
jmp
cmpb
sbb
int3
hlt
add
or
or
fs
loop
fsub
jmp
test
adc
mov
enter
addb
je
cmc
add
inc
or
sub
das
xlat
add
scas
push
xor
mov
fsubs
lea
in
adc
push
aad
mov
push
jle
dec
loopne
add
mov
fistl
fdivrs
data16
jg
jae
or
shlb
xor
or
add
arpl
aad
push
cmp
jmp
push
aam
jl
pushf
mov
ss
add
lds
dec
cmp
adc
enter
call
outsl
jmp
adc
mov
pop
jb
es
enter
inc
icebp
or
or
and
xlat
mov
repnz
dec
adc
sbb
pop
decb
fcmovu
pushf
xor
mov
push
mov
decb
mov
scas
mov
add
aaa
lret
and
sbb
push
push
sbb
shl
sti
mov
push
and
call
sub
cmp
lds
cmp
and
cmp
insl
sbb
adc
jp
insl
push
mov
out
cmp
sub
sar
pop
cli
fists
push
sub
pop
cmp
outsl
rolb
mov
test
ja
cs
movsb
inc
in
cs
dec
daa
std
push
fs
and
mov
push
jmp
call
cmp
xchg
lcall
jb
cwtl
std
fcoml
or
roll
rolb
ss
push
adc
cs
cwtl
mov
decl
xorl
shlb
dec
jb
jbe
or
push
push
pushf
cltd
pop
rcl
out
jb
push
dec
mov
pop
nop
je
sub
mov
mov
jge
int
test
int3
rclb
out
inc
fdivrs
or
pop
testl
mov
push
ljmp
pushf
cld
ljmp
inc
inc
or
mov
andl
in
nop
jecxz
dec
pop
mov
addb
aad
adc
adc
mov
push
add
mov
xchg
dec
shrb
xor
push
stos
mov
js
loopne
rolb
aaa
sbb
mov
xor
adc
push
std
fadds
pop
jbe
add
push
ret
adc
test
negb
adc
roll
sub
in
xchg
fs
adc
add
call
inc
sub
dec
jl
cld
add
js
sub
cmp
roll
add
push
and
inc
ret
mov
adc
add
and
pop
push
mov
nop
int
add
pop
filds
aaa
or
pop
jae
mov
add
inc
add
lcall
cmp
jne
push
mov
inc
loope
fbld
ljmp
or
into
orb
repnz
sub
sahf
xor
cmp
adc
cmp
xor
xor
push
jbe
scas
lea
call
cmp
pop
cmpsl
xor
jo
add
and
push
add
lock
xor
int3
mov
std
xchg
inc
push
ret
sbb
mov
add
add
and
in
and
int3
dec
sbb
mov
xor
cs
cld
or
cmpsb
or
add
sarl
push
adcl
pop
jo
sbb
shr
rcl
mov
insl
inc
lret
adc
mov
mov
jp
popa
add
sub
and
pop
cmpb
mov
into
sbb
mov
push
push
xor
cmp
adc
push
inc
jae
pop
mov
stos
mov
cmp
and
jno
fs
mov
cld
aaa
push
insl
fistpll
pop
fs
or
jmp
mov
mov
fnstenv
add
push
lock
add
insb
push
mov
outsb
mov
adc
in
orl
push
test
sbb
sbb
sbbb
mov
jb
cmp
and
mov
out
dec
mov
icebp
jbe
mov
add
out
mov
push
mull
cli
in
add
xchg
push
fadds
push
mov
mov
sbb
sbbb
ds
test
sbbb
xor
pop
and
xor
jg
xchg
jecxz
lds
xchg
int3
call
out
push
jl
cld
adc
xor
pop
aam
filds
sub
pop
sbb
cmp
sub
sbb
cmp
mov
enter
imul
sub
out
ljmp
xor
enter
inc
jnp
call
xchg
jmp
rorb
ds
fdivr
xchg
imul
mov
pusha
xor
mov
ljmp
mov
out
shrl
mov
add
and
push
stos
hlt
inc
jge
xchg
add
mov
pop
icebp
mov
cld
fistl
push
mov
add
shll
lcall
cmp
push
jle
jmp
lahf
imul
add
jne
push
mov
testb
and
dec
sarb
sti
mov
cmp
adc
pop
mov
mov
mov
lods
loopne
notrack
hlt
cmp
lcall
mov
jne
icebp
adc
fsubrs
dec
add
mov
stc
leave
jmp
rorb
mov
push
xor
testb
ret
or
les
loopne
hlt
mov
mov
movsb
add
push
clc
roll
fadds
gs
and
jbe
adc
mov
pop
inc
add
mov
jp
and
int3
sar
pop
aaa
shlb
stos
push
inc
insl
jo
add
sarb
add
stos
outsb
adcl
mov
and
sbb
aas
jb
je
andl
scas
mov
inc
pushf
mov
inc
cmp
cmpb
mov
popf
cmp
test
adc
gs
test
mov
adc
mov
push
notb
call
js
in
jb
cmpb
nop
cmp
stc
inc
add
dec
fdivl
ret
jle
pushf
cs
mov
or
mov
roll
orb
pop
clc
aas
push
mov
mov
fimuls
mov
jae
ja
jl
das
or
fcoms
push
hlt
xlat
push
jbe
mov
into
popa
or
shlb
mov
testb
and
mov
push
test
out
mov
jbe
add
inc
std
and
add
insl
decl
xchg
test
inc
in
bound
add
adc
cmc
jmp
cmpl
fdiv
shlb
jb
clc
mov
loopne
xor
cmp
test
incl
push
dec
lds
fs
js
test
push
test
inc
xchg
jle
push
hlt
or
incl
mov
scas
and
mov
jne
movb
pop
mov
ret
adc
inc
add
add
out
ret
add
pop
cmp
adc
jmp
ss
adc
enter
loop
inc
movsb
sub
inc
jne
mov
jmp
shl
call
pushf
xchg
mov
mov
shlb
push
add
or
les
xor
pop
adc
loopne
inc
push
lret
notb
mov
pop
add
lcall
stc
push
inc
and
test
push
je
jl
mov
pop
shrb
lea
fsts
in
or
pusha
add
add
in
in
in
pop
cli
mov
adc
ds
ror
mov
fs
add
es
cmp
xchg
pop
andb
push
lods
jg
rolb
inc
push
sub
fcomps
clc
add
or
sarb
mov
mov
cld
sub
daa
and
push
push
adc
pop
loopne
jle
mov
and
inc
ds
or
dec
add
ja
movsl
decb
rcll
incl
hlt
jg
or
and
ljmp
pop
aam
mov
push
add
insl
or
in
pop
mov
je
lock
mov
movsb
aad
mov
roll
es
sbb
mov
fdivr
push
pusha
push
shr
pusha
pop
add
push
sub
adc
lock
jge
mov
sub
sub
pop
xor
push
jmp
dec
inc
dec
lock
sub
xchg
subl
ljmp
xor
movsb
push
push
mov
and
test
sbb
jmp
in
invlpg
sbb
add
scas
xlat
sbb
add
jmp
inc
aaa
popa
and
sahf
aas
xor
cmp
inc
push
inc
push
dec
mov
push
cmp
mov
je
jp
push
mov
xchg
dec
clc
and
nop
xor
in
leave
dec
addb
inc
out
and
xchg
or
lret
das
ss
jne,pn
daa
cmpb
push
fiaddl
std
pause
sbb
jecxz
movsl
sub
jl
ss
das
add
daa
jb
inc
adcb
loopne
jp
push
popa
scas
clc
sbb
je
scas
lea
mov
add
or
jmp
pop
cs
sub
loope
decl
rorb
stos
jo
mov
xchg
mov
mov
pop
xor
imul
cld
mov
push
out
lahf
fisubs
lea
or
fs
cmp
jecxz
push
adc
jl
jbe
xchg
stos
inc
ljmp
cmp
and
inc
xor
add
adc
sub
les
push
pop
mov
outsl
xchg
mov
and
jle
mov
push
add
adc
call
fstps
xor
les
jbe
add
dec
add
fdivs
test
and
push
test
mov
or
repnz
pusha
js
aas
xor
and
loope
jle
cmc
outsl
pop
mov
mov
jne
push
and
jp
adc
cmpsb
lea
or
mov
mov
outsb
sbb
call
xlat
mov
subb
xor
aaa
push
add
adc
jnp
mov
je
push
jge
ja
add
push
jg
mov
dec
adc
push
icebp
push
push
cmp
je
pop
outsb
cld
add
mov
and
int
jne
and
cmp
inc
adc
scas
xor
clc
adc
nop
add
push
and
decb
push
icebp
sub
pop
fadds
testl
cmp
ret
pop
pop
add
addr16
push
xchg
jle
clc
stc
enter
adc
adc
mov
dec
pop
jp
pop
mov
call
inc
test
and
js
enter
cmpsl
nop
mov
push
mov
jno
cli
ret
push
fmull
inc
push
jp
mov
jl
sbb
adc
or
jb
aaa
add
or
inc
cmp
adc
imul
rorl
add
loope
mov
pop
xchg
stos
sar
push
fs
sahf
jge
pop
and
mov
hlt
cmc
jbe
add
xorl
inc
xchg
ss
cwtl
hlt
mov
call
fsts
push
rorb
add
je
cmpsl
mov
mov
aam
push
fs
xchg
push
push
sub
or
sub
inc
xorl
fiaddl
mov
xchg
and
push
jmp
notb
adc
dec
jg
stos
mov
lock
insb
xchg
stos
jno
adc
lea
adc
sbb
mov
jbe
or
ret
mov
or
es
je
sahf
pop
xchg
push
leave
mov
mov
or
test
das
mov
lock
stos
pop
call
add
inc
adc
push
xchg
push
mov
mov
mov
mov
cmpsb
sub
or
repz
das
mov
out
cmpb
cs
add
fisttpl
add
cmp
mov
repnz
shrl
sub
and
nop
inc
std
push
pusha
lods
jbe
cmp
push
call
cld
mov
stc
push
xor
pop
mov
sub
call
pop
push
jmp
mov
mov
into
push
js
xchg
rcl
cmp
arpl
in
xchg
adc
mov
push
xchg
dec
std
pop
mov
in
adc
add
ret
inc
or
lock
adc
cmpsb
ss
and
mov
jp
lret
dec
inc
std
push
xchg
in
push
daa
cmp
lret
adc
adcb
movsl
jo
shlb
jno
xor
movsb
lahf
je
fimull
cmc
jno
dec
add
outsl
aaa
andl
mov
sbb
push
lcall
std
adc
clc
imul
push
rolb
mov
push
push
adc
jmp
cmc
dec
push
mov
js
xchg
cld
add
rolb
inc
into
mov
call
or
mov
and
mov
push
pop
rol
cwtl
or
mov
push
pop
mov
jg
adc
inc
push
inc
in
mov
mov
scas
mov
dec
enter
mov
test
adc
pop
std
push
sub
xchg
mov
adc
les
addr16
ljmp
push
fiadds
outsl
fs
adc
jle
adc
pusha
inc
lcall
dec
inc
pop
repnz
xor
into
fcmovbe
data16
cmp
movl
push
rorb
call
in
pusha
aad
xor
push
clc
sub
cmp
std
clc
pop
sbb
ljmp
icebp
mov
sarb
or
out
push
jle
adc
pusha
inc
inc
xor
inc
lods
adc
or
pop
push
in
and
inc
mov
mov
pop
int3
shrb
add
loopne
call
shrb
nop
inc
jge
pop
sbb
and
nop
cltd
cmp
shlb
aas
cld
inc
mov
xor
inc
dec
add
mov
pusha
dec
sub
std
pop
movsb
add
and
xor
cmp
xor
hlt
jnp
sarl
push
xor
clc
test
mov
inc
sbb
in
andb
push
adc
mov
inc
stos
lock
and
cs
mov
lods
ljmp
pop
xor
xor
mov
push
pop
mov
or
leave
inc
push
pop
call
jne
std
dec
jne
xor
add
and
sbb
push
and
mov
clc
aaa
adc
push
mov
mov
adc
pop
cmp
movsb
jo
cld
dec
push
dec
fcoms
xor
sub
pushf
filds
mov
xchg
das
jne
jbe
movsb
sub
add
cli
lret
ja
lea
lods
xchg
stos
push
mov
es
scas
xor
or
or
es
jbe
cmpsb
fucomi
xor
les
sbb
ret
cmpsl
sbbb
sbb
call
inc
sbb
int
mov
jp
push
mov
cli
lea
test
push
sub
aas
mov
mov
in
or
jl
decl
jmp
mov
add
mov
movsb
push
stos
mov
jmp
pop
mov
mov
subb
js
sub
jmp
test
sbb
cmc
js
cwtl
mov
xchg
inc
inc
mov
outsl
push
pop
call
in
push
call
repnz
bound
push
fistpl
sbb
and
inc
ss
roll
mov
ds
adc
jmp
sub
or
jo
pop
or
gs
pop
xor
adc
rol
mov
push
add
xchg
and
cmp
fs
jl
mov
add
pop
test
mulb
rorb
add
push
or
pusha
sbb
lds
popa
or
or
mov
jl
shlb
push
leave
cmovns
cmpl
icebp
xchg
jo
loopne
andb
fwait
sbb
in
sbb
sub
enter
push
cmp
in
cmpsl
push
loope
shlb
stos
inc
dec
jecxz
add
mov
xorl
cmpb
cmp
outsb
mov
xlat
inc
imul
mov
add
dec
lock
mov
mov
lock
xchg
add
cli
mov
push
inc
add
add
inc
jbe
popa
jecxz
cmp
jne
pop
insl
mov
enter
add
adc
fistpll
das
and
sti
enter
inc
test
lcall
mov
or
lcall
lock
dec
adc
sbb
push
pop
push
icebp
and
push
lret
add
and
orl
shlb
pushf
test
pop
negb
or
jecxz
pushf
ljmp
incl
pushl
pop
jle
repnz
ss
jge
or
int3
xor
pop
and
into
mov
xchg
int3
int3
and
add
dec
in
out
xor
lret
mov
inc
pushf
jne
push
adc
mov
ret
push
loop
dec
mov
test
xchg
imul
rol
sbb
fdivl
scas
js
ss
ss
add
pop
outsb
mov
push
pop
jl
std
mov
in
fs
add
add
bound
mov
pushf
daa
mov
cmc
lahf
xor
adc
inc
xor
loope
lods
fsubl
jge
idivb
fcmovbe
lcall
fsubl
add
mov
sbb
mov
dec
imul
adc
cs
shll
gs
mov
decl
add
ret
sub
jmp
out
mov
addr16
je,pn
incb
pop
or
jno
in
nop
cli
int
call
rolb
loopne
sbb
outsb
sub
paddb
js
or
adc
push
push
cmp
pop
lods
stos
sbb
xchg
and
pop
lock
jbe
adc
les
fisttpll
dec
loopne
rorb
ljmp
mov
pop
jmp
shl
add
and
cli
jecxz
jge
mov
mov
cmpsb
inc
cwtl
cmc
insb
insb
jp
push
mov
pushf
insb
stos
inc
fisubl
aam
adc
xchg
ljmp
mov
in
adc
clc
mov
xor
mov
loopne
cld
test
movsl
inc
adc
inc
clc
sub
test
add
add
scas
adc
pusha
mov
inc
scas
push
loope
gs
cmp
cmp
test
xchg
call
or
push
pop
ss
dec
in
imulb
mov
mov
sbb
push
les
pop
lea
or
popa
jl
sbb
or
mov
dec
int3
xor
daa
sbb
fistl
test
dec
rcrb
mov
ljmp
lock
sbb
xor
insb
cld
and
and
jb
cmpsb
stos
test
jmp
in
mov
mov
fmuls
adc
mov
xor
leave
or
pop
in
inc
repz
mov
mov
xchg
sbb
or
subb
sbb
fcomps
jmp
pop
push
lcall
ret
aad
add
fcoms
jnp
jmp
jne
fsubrs
ret
loopne
sbb
decb
xor
dec
add
in
add
pushf
inc
cmp
pop
aam
inc
jp
mov
outsl
adcb
sub
je
xchg
xor
das
sbbb
inc
mov
push
lcall
push
mov
xor
ljmp
stos
mov
sub
pushl
push
xchg
lea
gs
adc
je
push
push
mov
add
repnz
adc
xchg
jb
push
jmp
xor
xchg
sub
inc
and
cmp
lcall
out
add
jb
jae
dec
int3
or
jne
push
das
inc
mov
push
mov
push
xchg
fidivl
cmp
ljmp
cld
shl
inc
fildl
int3
inc
cmp
rorb
inc
loope
aas
lea
adc
mov
mov
inc
add
or
push
add
xor
xor
mov
add
nop
sbb
xchg
clc
jle
sub
out
les
jl
push
mov
jp
add
leave
cmc
fldenv
je
pop
xor
hlt
xor
mov
add
fidivrs
pop
lret
jp
push
test
adcl
pop
or
dec
add
aam
out
add
add
das
sbb
sub
mov
dec
in
inc
inc
jo
loopne
jp
push
jmp
and
in
jb
push
xchg
push
push
dec
outsb
int3
push
adc
xchg
cwtl
pop
sub
test
sbb
test
je
lret
mov
rorl
inc
push
aaa
test
push
loop
dec
pushl
xor
or
jne
cwtl
mov
xchg
xor
and
inc
lret
fcmovnbe
and
jmp
stos
jp
mov
add
pushf
stc
test
xor
lahf
idiv
mov
aam
mov
outsl
fwait
shrb
lds
add
push
inc
push
les
xor
call
adc
sbb
sbb
cld
lret
mov
iret
movsb
push
gs
mov
enter
mov
fwait
mov
dec
sub
or
cmpsl
mulb
xor
add
dec
push
add
stos
pop
pop
aam
inc
and
fldenv
into
jns
adc
subps
loop
cwtl
movsb
xor
jne
mov
insb
jmp
or
push
and
loopne
mov
push
movsl
cld
ret
sahf
push
xchg
push
call
les
lcall
adcl
jge
incl
insb
mov
ds
jmp
dec
bswap
xchg
cmpsb
sarb
sbb
popf
xor
push
xchg
mov
pusha
lcall
aam
mov
add
in
jnp
mov
sub
mov
dec
mov
xchg
mov
sub
cld
xchg
xchg
es
inc
ds
clc
fsubr
pop
sbb
repnz
fcoms
push
push
adc
out
lock
inc
pop
adc
mov
jmp
pop
scas
bound
jmp
pop
cmp
dec
stos
mov
xor
sti
add
mov
movb
pop
dec
ret
xor
cwtl
adc
clc
add
push
and
adc
fimull
jmp
jg
pop
test
fs
push
pushf
das
push
mov
mov
cld
repnz
ret
je
push
movsl
xchg
or
and
pusha
mov
adc
pop
cmc
push
stos
adc
inc
int3
test
mov
fnstcw
fbld
leavew
jbe
mov
test
mov
les
and
jne
subl
pop
push
andl
fimuls
mov
or
jbe
xorb
mov
int3
sub
data16
int3
push
test
adcl
loope
js
and
or
roll
pop
hlt
and
mov
inc
and
inc
jg
or
clc
xchg
and
test
xor
faddp
mov
adc
flds
scas
cmp
clc
inc
sbb
jae
inc
mov
add
movb
inc
outsl
rol
sub
cmpb
je
push
push
sub
outsb
mov
or
inc
xor
incb
cs
mov
xchg
pop
or
mov
sbb
adc
adc
or
aas
rclb
mov
std
pop
mov
out
cmp
jne
int3
or
aaa
xchg
fisubs
iret
sahf
nop
inc
cmpsb
decl
jo
lea
cld
call
adc
stos
sar
or
xchg
sbb
mov
push
mov
jmp
pop
int3
and
mov
push
xor
sub
or
std
push
inc
and
cmp
dec
in
jbe
cmpb
jge
shrb
mov
jno
call
sar
mov
scas
mov
cld
notb
aam
dec
clc
data16
dec
push
leave
insb
or
and
test
insb
rorl
mov
insl
dec
adc
cld
sub
pop
stos
inc
add
adc
in
add
push
xchg
inc
push
inc
popf
push
push
pop
xlat
sbb
pusha
or
ss
xchg
sub
adc
loope
sbb
loop
lods
mov
stos
jae
popa
jo
lea
fst
dec
hlt
mov
xor
xorb
test
fisttpl
inc
mov
andb
cs
xchg
and
out
push
incb
jb
jl
adc
xor
jp
mov
push
inc
aad
add
mov
add
lcall
ret
sub
popf
add
aad
sti
jb
sbb
adc
icebp
dec
bound
fs
sbbl
aad
xchg
cmp
into
bound
js
or
outsl
mov
data16
xlat
or
xchg
jo
jae
loopne
repz
test
mov
imul
xor
sub
mov
and
jne
mov
ficomps
ja
cli
fcomip
jo
xchg
push
inc
xchg
and
jne
push
pmulhuw
mov
or
push
fidivrl
mov
aam
cmp
inc
mov
and
pop
sarl
rclb
add
test
ret
jg
and
sarl
aad
out
push
std
cmpsl
pop
mov
inc
xor
mov
mov
dec
clc
ret
lock
ss
call
rcrb
mov
out
push
jo,pn
sub
fcoms
fistpl
incb
adc
in
sbb
test
sbb
mov
fisubrl
es
jle
ret
loopne
addb
add
inc
cwtl
or
jbe
faddl
xor
and
jb
shll
fs
cmc
decl
mov
add
int3
ret
adc
subl
orb
enter
iret
push
adc
outsl
test
push
xchg
xchg
and
mov
dec
mov
mov
ret
add
fsts
sbb
or
aaa
std
out
and
js
inc
xor
je
adc
icebp
pop
cmc
jg
bound
cmp
mov
cmp
push
inc
push
jmp
mov
nop
addb
lods
dec
xchg
gs
andb
fimuls
aas
pushl
or
sbb
pop
lods
lahf
ret
ss
data16
inc
roll
aas
add
subb
inc
fwait
lods
mov
adc
and
jg
aaa
sub
add
mov
insl
push
fdivrp
iret
into
shr
icebp
orl
testb
ds
jb
add
test
or
mov
das
xorb
call
aas
add
subl
push
add
popf
mov
dec
jp
lock
push
mov
mov
les
push
cld
loop
sbb
adc
mov
cs
test
cmp
in
fcmovnb
sub
pusha
shlb
mov
ss
inc
add
xlat
adc
roll
rep
push
or
add
add
outsb
sahf
jo
push
fs
inc
push
add
outsb
xor
jne
js
aad
sub
enter
es
and
clc
and
loopne
inc
cld
inc
sar
mov
mov
seto
rolb
cld
sti
push
cli
pop
imul
nop
sbb
lahf
psrld
in
insb
imull
into
test
xchg
stos
popa
or
push
sbb
hlt
push
add
mov
lock
fcomi
dec
inc
hlt
mov
mov
mov
mov
cwtl
mov
sub
cmpsb
subb
loope
sbb
sbb
push
mov
mov
or
hlt
jp
cltd
push
or
jno
pusha
xor
pop
xor
cmpsb
arpl
hlt
mov
jo
cwtl
pop
ljmp
or
adc
insb
out
int
push
cmp
xchg
cwtl
test
shlb
and
daa
insb
push
decb
pop
insb
enter
call
int3
xor
or
xlat
das
in
hlt
mov
inc
or
mov
sub
jne
jg
sbb
addb
push
cmp
adc
js
daa
cld
pushl
lea
addr16
shlb
call
dec
push
cmc
cmp
xor
cmp
dec
add
pop
je
les
outsl
cmpsb
outsl
lock
in
sbb
and
idiv
jg
mov
mov
add
mov
notb
add
mov
cmpsb
push
add
inc
rorl
rclb
mov
es
ss
aam
jnp
pop
mov
or
es
adc
add
push
cmp
pushw
sbb
clc
scas
adc
sbb
mov
cmc
pushf
cmp
cld
int3
outsl
pop
push
xor
je
shll
adc
cmp
mov
std
or
adcb
lea
dec
lea
dec
jl
notb
movsb
xorb
or
or
mov
push
call
sbb
and
call
adc
pop
roll
inc
adc
mov
adc
dec
fcomip
push
add
xor
push
pop
jmp
incb
cmp
add
jne
mov
popa
mov
pusha
cmp
and
out
push
cld
jo
push
outsl
xor
push
je
or
jno
or
icebp
pop
mov
mov
mov
mov
xchg
lcall
fbld
cmp
and
clc
rdpmc
pop
or
adc
orl
or
jb
loop
ficoml
jmp
in
test
inc
or
sub
sbbl
jne
mov
mov
or
or
add
test
mov
mov
push
and
dec
mov
add
mov
ret
dec
mov
adc
and
sahf
sbb
mov
mov
ss
and
pop
sarb
mov
lea
xor
add
mov
and
pop
call
xor
call
out
xor
mov
inc
sub
shl
xor
incl
ret
popa
in
push
mov
pop
jne
push
push
js
adc
push
xor
cmp
dec
addl
sub
pop
mov
pop
pop
jae
lock
ljmp
dec
movb
adc
call
mov
ljmp
fdivs
sub
filds
aaa
add
cmp
dec
dec
call
pop
decl
mov
sub
adc
outsb
insb
std
xor
insb
fadd
add
stos
mov
int3
mov
movsb
lret
ret
pushl
jge
adc
push
adc
mov
fmuls
cmp
or
aad
add
push
add
xor
clc
sbb
sbb
or
xor
mov
lcall
mov
ja
add
cld
aas
add
xor
int3
sub
es
mov
lea
call
fldt
inc
add
mov
test
lret
data16
jb
jg
or
cmp
ljmp
push
pop
int3
push
shrd
fisttps
mov
inc
add
outsb
inc
inc
cmovge
add
rolb
call
or
jl
cmp
jae
addl
cli
scas
push
loopne
icebp
add
mov
add
adc
hlt
lea
and
int3
rolb
pop
mov
xor
push
insb
icebp
or
aam
xor
call
push
test
push
out
call
lods
mov
mov
or
mov
stos
pop
sarl
push
and
jne
xor
hlt
push
push
or
sbb
add
je
pop
ret
lock
not
int3
pushf
sub
xor
jmp
pop
gs
mov
or
jle
std
not
leave
jmp
std
ret
push
jl
xchg
in
call
xchg
xor
inc
xlat
clc
mov
sbb
xchg
cwtl
sbb
or
inc
push
sub
add
fadds
xor
cmp
and
mov
jmp
test
adc
inc
xchg
fisttpll
mov
pop
sbb
cli
stc
std
call
in
mov
or
inc
add
add
ss
xchg
lods
test
imul
cmp
cli
jbe
jne
shr
jb
sbb
push
or
inc
mov
jl
jne
loopne
aad
sub
and
fisttpl
add
add
cmpsb
inc
xor
xchg
or
cmp
push
mov
fs
sbb
fnstsw
data16
add
pusha
es
push
cmc
add
pop
push
mov
mov
or
and
xlat
add
test
xor
inc
insb
ss
test
fcomps
push
jl
add
xchg
out
inc
test
add
loop
ds
inc
fdivl
jl
mov
and
push
mov
cld
xor
shl
aam
fnsave
loopne
test
add
mov
decb
push
cld
add
test
adc
loope
mov
loope
rclb
js
jl
xorb
mov
and
loopne
icebp
mov
rorb
aam
jno
pop
dec
mov
pop
xor
dec
fwait
and
jb
clc
cwtl
sbbb
pop
shlb
mov
jns
es
xor
mov
cmp
mov
ret
aaa
add
test
push
push
je
jmp
mov
dec
repz
fwait
lock
xchg
stos
call
int
and
incl
push
stos
nop
and
xchg
cmp
push
ljmp
jno
pusha
push
pop
sbb
inc
lcall
orb
jle
adcb
add
xchg
push
add
xchg
push
dec
mov
cmp
add
stos
ret
mov
mov
lret
shlb
pushf
in
lea
or
jmp
test
mov
lock
incl
pop
push
sub
add
dec
fimull
push
movsl
mov
mov
push
dec
cli
mov
or
aam
add
shlb
cmp
das
push
mov
call
dec
mov
cmp
jbe
xor
nop
sbb
and
fwait
enter
add
add
jno
repnz
scas
or
dec
mov
mov
ret
aaa
dec
aaa
adc
add
iret
fcoms
add
scas
cmp
cltd
and
jbe
xor
and
cmp
add
aad
sub
pop
mov
fimuls
lock
and
pop
std
inc
fs
mov
add
cmp
push
shlb
leave
into
cmp
in
lret
xor
inc
test
push
in
or
stos
ret
cmp
sbb
aam
xchg
fadds
cld
push
clc
xchg
jb
ljmp
cmp
cld
cmc
cmp
adc
dec
sub
add
jae
je
pop
aad
cmc
mov
jp
sbb
sbb
jp
nop
ret
out
mov
cmpl
xor
sub
add
arpl
int3
jne
fs
push
push
mov
pop
dec
call
jg
push
dec
push
loope
clc
enter
cmp
and
stos
orl
cs
push
jnp
xor
mov
cwtl
push
rcrb
inc
mov
call
pushl
lcall
inc
mov
cmc
or
cmpsl
js
dec
mov
mov
and
pop
jle
push
push
rcrl
int
push
and
push
inc
nop
outsb
inc
aam
sub
sbb
dec
mov
mov
cld
lcall
push
add
xor
mulb
sub
test
fcmove
push
adc
js
es
cmovp
lock
stos
sub
inc
mov
jl
xor
fwait
cmc
add
in
enter
les
loopne
ljmp
pop
or
insb
push
or
jg
in
shll
rclb
inc
xor
out
shrl
into
rcrl
jb
int3
jle
or
movsl
in
pushf
mov
push
add
mov
nop
xor
shrb
clc
sub
fsubrs
lock
movsb
xchg
adc
outsb
jne
or
cmp
mov
ja
or
add
dec
and
gs
or
mov
pushl
test
dec
jbe
movsb
mov
out
test
adc
jmp
add
add
xor
test
jmp
enter
sub
mov
es
push
cmp
loop
add
push
gs
cmp
mov
inc
repnz
jl
inc
pop
in
stos
and
cmp
adc
iret
add
mov
daa
xor
push
mov
shlb
adc
aad
adc
fmuls
push
shlb
add
cmp
ret
inc
movsl
incl
inc
inc
jb
push
leave
push
call
js
xor
mov
mov
pop
sub
mov
pushf
cmp
add
rclb
dec
fwait
sub
ret
pop
ficoml
push
je
imul
out
js
int3
sbb
lods
push
jmp
int3
fimuls
lcall
cld
lock
jmp
sarb
mov
or
mov
sbb
inc
movsb
xchg
inc
mov
add
outsl
inc
push
jae
mov
push
fcmovu
push
adc
sbb
or
pushf
inc
outsb
outsl
stos
sbb
rorl
out
lods
jp
test
test
daa
push
or
adcb
cmp
fcoms
push
cmp
out
or
adc
orl
std
fildl
test
in
call
fs
sbb
inc
cwtl
push
hlt
and
adcl
pop
pop
jne
mov
pushl
or
sub
jb
js
xor
cmp
icebp
mov
call
pop
cmpb
rclb
repz
adc
mov
out
in
ret
mov
jg
outsb
adc
xlat
je
pushl
sub
mov
push
mov
dec
fmuls
mov
jno
adc
add
outsb
sbb
add
cltd
insl
xchg
mov
add
sbbl
int3
cli
mov
movsb
cmp
xor
xor
mov
jbe
mov
pop
incl
push
or
add
cltd
push
cmpsb
or
dec
test
mov
subl
inc
xchg
or
fiaddl
push
popa
call
clc
push
xor
and
and
ds
push
jmp
pushf
jp
mov
mov
out
mov
rorb
add
cmp
rcr
xchg
shl
fcomip
push
flds
test
add
xchg
rcl
std
and
mov
add
push
inc
lods
inc
dec
movsw
mov
jg
movnti
push
cs
or
jp
mov
jmp
in
out
mov
fs
or
mov
ss
lcall
je
in
cmpsb
dec
mov
mov
jbe
add
pop
mov
push
mov
push
mov
insb
popf
jle
adc
jl
jle
out
xchg
adc
rolb
or
pop
je
add
cmp
fimuls
jp
call
xor
mov
cs
call
mov
jo
or
push
clc
mov
jg
mov
mov
push
mov
rcll
fs
add
jae
pushl
mov
jo
xchg
or
rcll
add
pop
or
push
xchg
clc
push
add
ret
cmp
popa
xchg
mov
decb
int
mov
lea
and
rol
add
inc
or
xchg
mov
fcomps
push
adc
adc
adcb
mov
lock
out
outsl
shl
stos
dec
pop
and
or
popa
mov
pop
fiadds
adc
mov
scas
in
imul
add
jle
or
rolb
mov
leave
add
loope
mov
push
or
call
cmpb
mov
cwtl
testl
dec
or
bound
jg
sbb
and
mov
inc
jo
push
inc
sahf
mov
data16
add
arpl
xchg
scas
shlb
adc
lret
std
decl
add
aaa
add
mov
xor
add
inc
outsl
inc
inc
test
pop
cld
and
cmp
pop
jne
xorb
push
jbe
fisttpll
mov
nop
adc
sahf
sbb
push
pop
jb
add
rolb
cmp
or
add
ljmp
cwtl
mov
mov
pop
jae
mov
add
inc
add
mov
cmp
sbb
mov
mov
mov
push
add
or
sar
outsl
lock
fsubrl
pusha
sbb
inc
pusha
inc
push
sub
lea
mov
pushf
inc
fidivrl
and
pop
fdivr
push
ret
push
dec
pop
inc
sub
and
std
cmpb
ret
sar
inc
push
inc
js
and
mov
lcall
cmc
lea
sub
dec
sar
mov
js
pop
sub
mov
inc
xor
sahf
mov
or
xor
rclb
lods
repz
push
bound
lcall
call
cmp
add
xchg
les
hlt
andb
sahf
xchg
sub
test
ljmp
jle
push
jne
add
aam
xor
mov
mov
inc
or
int3
ljmp
pushf
adc
add
xchg
test
test
pop
nop
pop
and
mov
jecxz
loope
cld
into
shll
mov
jp
mov
mov
mov
imul
ljmp
mov
xor
enter
mov
and
ret
subl
mov
out
add
push
mov
popw
adc
xor
cmp
mov
adc
out
gs
mov
fdivrl
icebp
jg
sbbl
insb
js
cmp
push
mov
cmp
bound
xchg
inc
fisttpl
cmp
sahf
jae
adc
ds
test
loop
xor
orl
js
cmp
mov
fiadds
add
ret
pop
mov
enter
xor
lock
adc
add
adc
pop
out
rorl
add
xor
mov
add
and
and
jge
ljmp
jge
push
in
dec
clc
adc
mov
sub
mov
std
jne
sub
cmp
mov
mov
jae
inc
test
mov
les
lret
xchg
and
jg
adc
push
gs
sbb
add
ss
jp
scas
out
dec
lods
and
in
mov
repnz
xor
xchg
fldcw
inc
cwtl
mov
jbe
clc
jb
gs
push
cmp
jbe
or
mov
push
sti
and
std
xchg
sbb
dec
mov
addr16
add
inc
sarl
lcall
and
outsb
call
cld
in
int
roll
lods
inc
or
pop
andl
inc
or
int3
mov
cmp
adc
cmp
jl
fsubrs
pushf
jb
mov
and
ret
rcr
test
add
repnz
inc
imul
push
sbb
ja
fwait
add
imulb
fwait
mov
mov
push
lea
jb
inc
sbb
repnz
adc
into
sub
or
daa
push
cmp
cmpl
es
push
sub
sub
or
dec
div
inc
loopne
mov
outsb
scas
push
stos
inc
cli
fisttps
inc
clc
and
push
pop
lcall
ja
mov
test
mov
xor
leave
cmp
push
stos
and
jl
or
pushf
or
pop
sbbb
xchg
dec
loop
mov
ljmp
mov
sub
add
cmp
lock
and
dec
push
jb
loope
stos
fmul
mov
push
jmp
dec
fucomp
and
fdivr
jb
js
lock
push
in
pop
mov
loopne
inc
xchg
cmp
rolb
pop
pop
inc
fmull
test
fistps
xor
mov
pop
inc
pop
and
push
push
mov
jg
jne
je
jnp
xor
cmp
add
cld
adcb
xchg
inc
enter
or
lods
push
pop
addb
jle
ss
sub
subl
orl
inc
inc
dec
dec
xabort
mov
shlb
push
std
out
xor
aaa
sub
call
push
cli
mov
lock
add
shrb
shlb
lea
decb
xchg
call
or
adc
enter
stos
mov
nopl
call
movsb
idivl
xor
cld
shr
stos
call
dec
adc
inc
pop
sbb
and
in
aam
push
sub
mov
cmpsb
pop
jae
sub
int
lahf
adc
mov
adc
mov
test
dec
cmp
lock
std
push
fidivrl
mov
fs
je
adc
jl
ret
aad
xor
jle
mov
call
and
je
xchg
xor
adc
mov
cmp
loopne
and
rcrl
lcall
or
mov
inc
pop
mov
cmp
out
add
sub
clc
mov
jbe
stc
fdiv
in
insb
imulb
je
push
popa
and
xor
or
push
insb
inc
mov
mov
push
rorb
lock
sub
je
gs
sbb
arpl
and
fcomp
push
in
and
or
add
test
repz
inc
aaa
loop
push
sbb
les
iret
pop
cmp
push
ss
dec
mov
add
out
add
lock
fisttpl
lret
add
pusha
pop
push
push
sbb
dec
mov
repz
popa
sbb
incl
aam
mov
lret
push
insb
imul
adc
push
and
or
pop
push
ret
call
call
stc
or
ss
or
fiadds
mov
xor
loopne
test
aad
loope
push
and
push
sub
push
lods
mov
fisubl
aaa
adcb
add
pop
je
loopne
xor
or
cmp
add
inc
repnz
js
test
sahf
ret
insb
gs
clc
add
cld
adc
sub
aaa
jne
inc
aad
enter
outsb
push
ljmp
aam
fcmove
inc
push
jge
add
outsl
pop
push
test
or
clc
lock
xchg
mov
fld
stos
call
mov
ret
push
jmp
xor
jle
mov
cli
mov
adc
pusha
cli
mov
movsl
or
xorb
mov
or
or
je
lock
js
test
push
mov
test
mov
xor
out
ret
or
mov
fsubp
les
fdivr
sbb
add
test
enter
cmp
loopne
sbb
or
pop
adc
clc
fisubrl
int3
push
jmp
add
insl
inc
push
mov
adc
loopne
pop
add
xchg
mov
xor
lods
push
psrad
push
pusha
dec
adc
push
sbb
inc
and
cmp
les
jl
stos
mov
repz
mov
pop
push
mov
dec
jb
inc
or
scas
sub
call
call
adc
adc
clc
sbb
in
inc
add
scas
adc
jne
inc
or
mov
mov
cmpl
ljmp
je
sbb
je
inc
push
icebp
mov
enter
or
test
notl
lcall
ret
loope
push
dec
add
nop
hlt
shll
push
cmp
std
push
ds
call
or
adc
sbb
cld
and
fsubr
paddsw
into
pushl
rolb
pop
pusha
push
xor
push
sub
in
out
mov
int
pop
push
jmp
push
sub
push
or
lcall
out
je
or
cli
das
xor
clc
inc
cli
cwtl
int3
add
dec
cmp
dec
and
jbe
xor
mov
gs
xor
insb
sbbb
pop
xor
aad
xor
pop
or
lret
adc
and
stos
cmp
pop
incl
dec
xchg
inc
call
and
jge
or
bound
adc
sbb
rcl
add
dec
adc
jg
ljmp
jmp
stos
incl
neg
push
movsl
rclb
mov
je
mov
dec
test
sbb
das
stos
sbb
add
fdivr
inc
cmp
pushl
pop
push
insb
push
add
test
push
scas
lcall
enter
sahf
push
sub
clc
mov
fs
pop
pop
js
mov
cli
push
inc
inc
push
push
and
inc
loope
cmp
sbb
call
js
nop
jl
dec
or
cmp
or
xor
add
nop
jo
jg
call
add
add
sub
sbb
mov
pop
test
push
cld
add
ret
mov
cmp
push
add
or
scas
jbe
andb
ret
enter
pop
mov
das
add
push
test
xchg
scas
xor
adc
xor
cld
xchg
imul
mov
mov
mov
add
jne
pop
cmp
inc
jp
or
adc
adc
xchg
cmpl
mov
lea
popf
add
or
inc
imul
cmp
rcl
jb
mov
xor
cmp
mov
mov
cmc
aaa
call
jl
or
std
mov
mov
int3
push
stos
ss
push
push
mov
sub
in
roll
iret
inc
lea
insb
lods
add
push
lea
mov
push
pop
sbb
cmc
cwtl
add
mov
mov
testl
xchg
sbb
mov
rorl
fidivrs
xchg
fiaddl
or
mov
dec
stos
out
mov
andb
add
icebp
dec
cmp
adc
sub
xor
rcl
adc
sub
rorb
sbb
les
ljmp
push
ficomps
sbb
fbld
xor
ds
push
outsl
inc
call
adc
pcmpeqb
xor
fs
test
clc
repz
les
sbb
mov
fs
xchg
std
incl
dec
jb
cld
data16
testl
mov
into
gs
jp
mov
jmp
call
loopne
lcall
jg
insb
scas
jle
int3
dec
jmp
mov
dec
test
dec
je
adc
mov
les
stos
xor
inc
mov
sahf
xor
clc
imul
inc
je
out
ljmp
push
pop
arpl
enter
cmp
hlt
dec
inc
aam
cld
pop
jbe
fucomi
andl
add
adc
adc
xchg
dec
test
outsb
lahf
pushf
push
xchg
je
pop
clc
orb
cld
add
mov
mov
pop
add
loopne
jp
enter
or
loop
dec
sbb
orl
push
pop
or
clc
mov
js
dec
add
and
std
pop
inc
pop
mov
inc
nop
xor
outsb
adc
ret
cmp
arpl
mov
cmp
cld
push
pop
xor
push
push
push
add
mov
cmp
or
mov
add
pop
push
in
inc
sbb
mov
out
add
push
aas
sbb
clc
adc
daa
inc
loop
pop
icebp
and
outsl
cmp
incb
sbb
rorb
mul
dec
sti
loope
stos
xchg
jle
xchg
ficomps
iret
daa
mov
and
push
pop
push
sbb
jne
sub
cmp
and
sbb
sbb
cmp
inc
ds
mov
adc
repz
fsubs
xor
jge
dec
add
cmp
pop
mov
rolb
fiaddl
push
add
repz
adc
ds
or
xor
adc
cmp
sub
outsb
pop
jl
mov
cmp
mov
pop
pushf
xor
sub
add
mov
ljmp
jbe
push
decb
push
pushw
fmuls
stos
loopne
and
nop
dec
into
andb
pop
cs
fs
pop
js
jnp
in
add
daa
std
ljmp
mov
add
roll
jmp
cltd
push
pusha
jl
sbb
shr
push
add
call
imul
pop
add
xchg
ret
mov
adc
dec
fsubs
aam
adc
xlat
pop
and
push
inc
data16
ljmp
enter
or
xchg
outsw
int3
cmp
shrl
push
inc
add
jb
mov
push
arpl
or
xor
adc
loope
outsl
lock
jns
leave
les
jmp
aad
stos
xor
xchg
out
fmuls
out
push
adc
and
push
and
fmuls
ss
insb
mov
pop
rclb
inc
jle,pt
cmovne
lock
decb
arpl
add
decb
incb
ljmp
int3
faddl
bound
loopne
bound
xor
add
jno
inc
int3
call
push
mov
xchg
sarb
xorl
mov
pusha
out
add
push
sub
hlt
aaa
in
mov
ljmp
inc
in
push
push
mov
or
or
idivb
les
or
dec
push
fcomps
movsl
add
sbb
clc
push
int3
push
mov
mov
imul
pop
sarb
inc
xor
in
clc
xlat
sbb
mov
cld
sub
jmp
rclb
mov
pop
mov
adc
add
push
hlt
je
add
pop
js
jecxz
adc
mov
xor
les
and
and
jecxz
sar
and
mov
add
es
adc
pop
fs
inc
mov
add
and
ja
addr16
jbe
mov
jno
rolb
lahf
test
xorb
mov
cmp
les
shl
dec
mov
ficompl
push
lcall
ss
stos
mov
cmp
push
fistpl
ljmp
movsb
ret
cmp
ret
lock
and
mov
inc
or
pop
cmp
fildll
push
pop
adc
jl
gs
mov
test
movsb
xchg
mov
filds
int
add
jmp
test
hlt
lods
stos
cmp
fs
inc
insb
pop
add
bound
pop
jp
shl
int
pop
std
in
inc
add
shrb
xor
sbb
int3
lods
scas
push
push
dec
sbb
pop
mov
mov
mov
xor
dec
call
add
inc
inc
stos
sbbb
movsb
popf
xchg
inc
mov
outsb
xor
mov
incl
cmp
add
js
push
mov
mov
inc
xor
cmp
stos
jmp
mov
hlt
outsl
or
aam
add
and
mov
in
xor
incb
call
add
and
jge
ss
jne
and
aas
js
sbb
jmp
cltd
aaa
shlb
shr
cmp
adc
aaa
adc
icebp
mov
lds
or
movsb
inc
add
sar
hlt
inc
fistl
stc
add
shr
movsb
test
mov
push
xor
xchg
push
rdpmc
dec
xor
adc
sub
outsb
out
jmp
mov
xlat
icebp
xor
mov
or
subl
push
int3
mov
xchg
fidivrs
xor
push
push
sbb
stos
push
sbb
xor
das
mov
or
int3
push
in
cvtpi2ps
jns
push
insb
aaa
lock
jbe
adc
cld
mov
rol
int
data16
cmp
decl
add
outsl
sbb
outsb
rcl
shll
add
push
aad
jo
add
sbbl
xchg
mov
in
adc
js
add
jo
popa
fdivrs
push
out
sbb
fcomip
fbld
ds
inc
cmp
adc
mov
adc
xor
in
inc
shrl
mov
add
jne
enter
shrb
mov
mov
inc
add
shlb
push
fs
lock
jge
xor
or
aam
mov
stos
sahf
aas
dec
ja
imul
and
push
and
mov
xor
adc
fwait
addr16
or
add
push
push
mov
rclb
mov
adc
ret
and
add
ds
inc
aaa
popf
adc
cmp
ljmp
test
test
and
inc
das
add
mov
xlat
scas
pop
jmp
inc
xor
jge
call
dec
insb
or
mov
add
dec
in
pushf
push
push
hlt
mov
and
jne
adc
cmpsl
ds
dec
js
mov
aaa
test
jnp
mov
data16
ljmp
or
lea
fs
dec
clc
push
push
or
lahf
incb
and
mov
in
daa
cld
or
jmp
data16
int
in
je
loop
test
test
mov
cmp
inc
cltd
jne
xor
and
in
fcomip
ljmp
xor
in
push
call
pushw
mov
les
test
mov
mov
hlt
ljmp
test
icebp
lock
jmp
lcall
xchg
loop
inc
sbbb
pushl
lea
cli
rolb
or
dec
jne
jbe
dec
call
sbb
clc
dec
jb
mov
add
dec
adc
mov
aam
ret
mov
into
int3
pop
mov
lds
jp
pushl
ja
je
imul
stc
gs
ja
sbb
xchg
mov
loopne
mov
mov
idiv
sub
pop
ljmp
mov
daa
push
add
inc
sbb
jbe
hlt
adc
je
and
fiaddl
sub
call
or
pop
cld
inc
fcomip
rorl
jge
xchg
dec
call
add
in
cmp
incl
sahf
shll
jne
aam
push
leave
cmpb
add
xchg
xorb
ret
mov
incl
addl
push
sbb
movsb
cmp
out
mov
sbb
mov
loop
dec
sub
xchg
cmp
xchg
push
inc
and
idivl
dec
sub
sarb
test
dec
mov
stos
inc
xor
hlt
fidivrl
jg
std
inc
mov
add
mov
call
and
orb
cmpsl
rcrl
cmp
mov
les
inc
or
mov
mov
push
push
mov
dec
or
in
pop
jmp
inc
push
or
cmp
je
popa
cs
or
loope
les
inc
or
inc
cli
dec
or
cli
ja
mov
push
add
xor
push
fiadds
mov
mov
scas
xlat
lea
out
push
scas
js
xor
shr
add
outsb
push
sub
out
sbb
lock
add
ljmp
orl
ds
add
arpl
xchg
sub
out
les
jle
add
fwait
mov
les
addl
insb
decl
push
ret
rcrb
or
lods
cmc
call
pop
mov
and
adc
push
fimuls
hlt
mov
lds
movsb
stos
add
dec
pop
mov
push
in
rcrb
mov
rcrl
push
ret
jo
in
dec
cld
divb
stc
test
inc
loopne
xchg
sub
xchg
inc
add
notl
xchg
xor
mov
or
push
rclb
in
xor
dec
ljmp
jle
mov
fisubl
and
jne
sub
movsl
dec
add
cmp
enter
divl
sbb
jb
jo
repz
add
test
or
jge
enter
add
adcl
jno
scas
sbb
cmp
jl
repz
xor
insb
push
pushf
add
mov
mov
cs
ret
mov
aad
cld
aad
xchg
adc
xchg
mov
adc
cmp
scas
push
das
push
push
xchg
sbb
adc
cmpsl
cld
mov
adc
inc
clc
mov
xchg
adcl
xchg
mov
jge
data16
aas
mov
add
xorb
mov
xor
in
lock
inc
js
and
inc
add
add
repnz
nop
dec
shl
hlt
incl
loopne
sbbb
or
mov
fisubrl
sti
mov
stos
call
jne
adc
stos
mov
std
sti
cs
xchg
add
movsb
shrb
test
mov
jne
bound
mov
clc
clc
ljmp
mov
inc
movsb
and
adc
dec
test
dec
mov
and
icebp
call
inc
pop
adcl
inc
jge
scas
in
icebp
jb
jg
dec
test
push
inc
test
push
lea
jg
jle
cmp
clc
dec
fsubrp
sbb
lock
fisttps
cld
sar
clc
push
push
je
in
mov
xchg
icebp
cmpsb
push
inc
es
jg
loopne
andb
call
cmpsb
sbb
pushf
js
call
push
ljmp
in
push
mov
imul
push
push
fcomp
sub
pushf
fsubl
popa
ret
xor
jecxz
push
pop
int3
cld
sahf
repnz
mov
and
xchg
sub
rcrl
inc
ljmp
inc
das
ja
jns
dec
cmpsb
in
popa
pop
in
xchg
inc
pushf
jle
fwait
mov
sbb
ret
js
nop
mov
add
inc
push
jg
pop
xor
lock
call
jb
rorl
mov
sub
clc
or
cmpl
mov
inc
dec
subl
xchg
push
cmp
pop
jl
cmpsb
push
or
fisubrs
in
incl
dec
adc
xor
mov
cld
xlat
push
adc
adc
mov
mov
add
adc
sbb
or
loop
cmp
dec
outsl
adc
test
addb
clc
mov
call
loop
cli
dec
fidivrl
rcr
and
movsb
add
cmp
pop
cmp
scas
ret
cld
mov
jbe
or
adc
cmpsl
or
das
add
int3
adc
cli
outsl
out
clc
xor
data16
loope
mov
jbe
mov
mov
rclb
adc
sbb
notb
push
cld
in
push
add
decb
rorb
or
ja
rorl
inc
subl
into
push
outsb
fidivl
pop
sub
ljmp
xchg
leave
bnd
add
ljmp
push
rcrl
mov
cs
inc
in
mov
mov
mov
lret
test
xchg
call
inc
xor
xchg
mov
insl
repnz
rcl
sub
add
mov
mov
mov
mov
mov
shr
cs
fdivs
or
es
std
add
xchg
leave
mov
jbe
sbb
jl
ds
jne
pusha
xchg
sahf
sub
inc
cmp
daa
adcl
jmp
cld
xchg
imul
mov
mov
loope
es
sbb
push
jge
scas
out
in
aas
jmp
cmpsl
mov
pop
jmp
inc
lods
xlat
rcr
movsb
mov
or
lea
add
test
scas
mov
and
xor
adc
mov
ljmp
sbb
add
push
out
and
adc
push
loope
push
test
fadds
cli
fcoms
inc
lret
mov
mov
and
mov
out
hlt
mov
fdivr
push
cmp
add
and
insb
mov
add
pop
sbb
nop
ss
pop
sub
jb
dec
paddd
pushf
out
push
sbb
push
jl
inc
gs
rclb
sbb
sub
cmpl
shr
sbb
or
into
sarl
mov
testb
pop
mov
movsb
out
mov
jge
loop
add
stos
fsts
mov
insb
lods
dec
ret
addl
imul
stc
mov
lahf
fisubl
pop
outsl
loop
pop
fimull
js
lea
xlat
sti
cld
or
test
add
ret
jp
adc
scas
clc
sub
mov
xor
or
inc
cmp
std
push
cmp
insb
rcrb
inc
lea
aaa
sub
scas
hlt
clc
push
hlt
fildll
icebp
sbb
push
or
xchg
jl
or
loopne
adc
xchg
push
push
das
je
mov
jg
jmp
test
adcb
mov
pop
inc
in
mov
inc
and
mov
aaa
or
push
inc
ss
and
imulb
movsb
subb
stos
sub
push
call
enter
or
or
rcrb
outsb
rcr
lock
and
mov
push
inc
mov
and
cld
ja
jae
inc
inc
mov
dec
scas
loope
mov
ret
sub
dec
sti
sbb
ljmp
fdivrs
stos
shrb
xor
mov
bound
imul
jle
jae
std
addl
aam
popa
and
in
lock
or
rol
test
push
cli
std
jmp
xor
in
das
mov
int
loop
inc
lea
or
add
push
insb
sahf
jge
int
popf
sbb
or
imul
in
leave
insl
pushf
adc
cmp
fnstenv
xor
or
sub
xor
rol
mov
outsl
les
push
movb
sbb
adc
jne
pop
test
pushl
ret
dec
xchg
add
in
gs
enter
push
call
inc
sub
loop
rcpps
in
in
js
cwtl
fdivrs
enter
inc
adc
in
mov
jecxz
cmp
xchg
in
call
xor
pop
dec
adc
mov
and
or
fists
push
xchg
repz
popf
sarl
nop
jl
mov
incl
lock
add
add
test
insl
adc
push
into
loopne
jo
cmc
out
scas
adc
jns
notb
mov
add
push
sub
add
rcr
repz
clc
out
adc
push
orl
js
mov
xor
mov
je
sub
aas
lods
pop
call
mov
inc
jbe
dec
inc
int3
mov
testl
test
pop
daa
pop
cmp
pop
hlt
addl
pop
clc
push
sub
lock
decl
add
add
mov
sahf
add
push
adc
jp
push
inc
add
mov
int3
lea
inc
sub
ljmp
mov
or
xor
jp
adc
xor
pop
push
outsl
shlb
add
scas
inc
aam
mov
loopne
sbb
movsb
aam
stc
mov
ss
in
push
mov
push
and
pop
js
mov
mov
and
sbb
and
inc
and
outsl
mov
mov
loope
fldl
adc
and
test
push
test
call
or
dec
inc
orb
pushl
les
lea
shrb
inc
out
inc
imul
mov
ret
js
push
add
jne
data16
cwtl
test
test
lret
ret
sbb
mov
enter
add
push
inc
cmp
push
mov
mov
cmp
jg
call
lods
cli
pop
mov
add
pop
in
pop
sub
push
psrlw
outsb
int3
jp
mov
mov
cmp
cli
out
lock
sub
mov
sub
add
mov
pop
mov
in
lret
mov
hlt
ljmp
es
push
or
mov
out
roll
loop
add
mov
add
xchg
mov
pop
sub
or
pop
or
mov
dec
lcall
sub
pop
iret
mov
adc
jl
inc
mov
gs
stc
xor
rclb
fdiv
cld
mov
push
add
ret
mov
test
and
pop
push
int3
ljmp
gs
jmp
out
dec
les
sub
and
ret
push
adcl
inc
repz
ljmp
shlb
in
add
fdivrl
ficoml
decl
insb
add
in
adc
das
mov
push
pop
push
js
lock
nop
mov
ror
ss
js
mov
mov
repnz
ds
ss
sbb
adc
cmc
sub
mov
and
out
dec
and
mov
mov
add
js
add
pop
lret
jg
add
int3
fsubl
push
xchg
ret
out
or
sub
in
ss
dec
mov
lock
or
and
loope
outsl
xchg
xor
or
add
jb
mov
rclb
sub
inc
or
adc
pop
test
and
pusha
xchg
add
jo
xchg
dec
mov
jg
fwait
and
adc
dec
mov
inc
call
mov
cld
idiv
aaa
inc
cmp
fldcw
pop
xlat
je
rclb
push
cmpsb
cld
out
xor
mov
add
nop
cmp
out
and
je
jmp
push
clc
je
mov
fistl
inc
adc
dec
pop
pusha
test
das
orb
push
add
xor
insl
add
scas
aam
jbe
and
lea
mov
pop
ficoms
cmpsb
jmp
or
lods
inc
cmp
fcomps
leave
popa
lock
mov
mov
mov
dec
inc
xor
push
xor
add
ret
mov
pop
call
add
outsb
mov
adc
imul
sbb
sysret
lea
dec
out
pop
push
clc
add
push
outsb
add
fucomi
das
xor
xor
ljmp
cwtl
pop
push
xchg
mov
sbb
adc
orb
mov
add
outsb
faddl
lea
int3
pop
and
subl
sub
bound
jb
test
fistpl
cld
and
push
sub
sahf
stos
lret
js
sbb
adc
dec
sub
subl
and
lods
jge
push
decl
mov
xchg
pop
scas
dec
mov
subl
int3
add
cmp
imul
sbb
std
inc
ljmp
test
mov
jl
les
fcomip
decl
mov
xchg
push
jle
int
pop
push
outsl
mov
add
insb
add
xchg
test
test
ljmp
stos
add
cld
push
xor
pop
js
roll
mov
lock
rolb
push
decl
xchg
dec
clc
push
push
shlb
movsb
adc
scas
sbb
cmp
scas
mov
cmp
sub
inc
insl
call
inc
gs
sub
xorb
into
mov
and
lcall
or
cwtl
or
or
stos
stmxcsr
into
and
add
adc
outsb
notb
frstor
arpl
sarb
cmc
call
or
add
jge
push
outsw
dec
add
lods
mov
mov
ret
mov
add
es
orb
int3
mov
mov
xor
cmp
std
adc
fisttpl
pop
adcl
cmp
adc
sbbb
nop
js
dec
push
pop
mov
outsb
mov
sub
xor
xor
mov
test
push
jo
and
or
dec
fcmovnbe
mov
pop
aad
and
sub
adc
lret
inc
cmc
rcrb
adc
mov
test
or
xor
and
lcall
mov
cmp
icebp
and
adc
call
call
sub
pushf
decl
jge
dec
paddd
mov
movsb
cmp
add
mov
and
fbld
push
inc
mov
fcoms
sbb
insb
xchg
lea
push
mov
cmp
push
inc
js
les
pop
pop
cwtl
push
pop
icebp
test
sub
mov
mov
outsl
mov
xchg
mov
and
dec
shlb
cmpsb
sti
fsubrs
sub
test
sub
mov
js
jb
cli
ss
push
push
mov
out
mov
add
js
add
mov
call
cli
test
cld
jl
dec
lods
inc
js
mov
xchg
incl
pushf
loopne
sub
movsb
add
jne
clc
sbb
xchg
pushl
loopne
inc
add
push
dec
testb
hlt
xor
jle
ljmp
or
push
data16
mov
cs
cld
pop
and
rolb
adc
mov
ret
xor
inc
std
adcb
clc
ljmp
clc
push
lfs
jb
rcll
pop
pop
lock
mov
dec
gs
push
xchg
int3
and
notl
stc
je
clc
test
push
insb
add
mov
aaa
rcrb
in
mov
nop
add
or
and
ljmp
idivb
pop
add
xor
or
or
push
add
mov
mov
adcb
pusha
cmp
jle
call
popa
sbb
arpl
or
jle
push
mov
adc
hlt
ja
sahf
out
std
mov
jmp
add
mov
or
push
push
incb
jne
pop
add
and
mov
adc
cmp
sbb
jge
fisubrl
mov
and
adc
mov
inc
push
leave
lock
cs
cmpsl
sbb
cld
imul
in
pop
cmp
jge
xor
aaa
in
ficoms
jge
add
push
adc
rdmsr
or
int3
shrb
cmpsb
push
xchg
xchg
push
sbb
cmp
push
pop
inc
push
gs
xor
fldenv
mov
bound
mov
cld
xor
dec
jo
push
pop
ret
and
or
push
lods
jp
cwtl
rorb
rcr
pop
push
in
add
stos
std
pop
fsubs
pop
or
loopne
pop
in
lods
je
call
mov
loopne
add
int3
add
mov
or
bnd
lahf
or
and
insb
or
pop
lock
je
jmp
or
inc
add
xor
mov
jl
pop
and
rclb
adc
mov
jmp
je
cmp
lds
outsl
fcomps
mov
rcl
jle
lea
xor
ds
add
jle
ficompl
filds
ds
mov
into
mov
icebp
subps
inc
daa
mov
cmp
jge
fdivs
mov
test
repz
fwait
lock
data16
xor
and
je
andl
xchg
and
mov
xor
jp
ss
jle
mov
adc
pop
xchg
mov
fstpt
cli
cmp
push
rolb
inc
bound
movsl
push
out
pop
mov
loop
dec
fs
or
addb
or
sar
sub
push
cli
and
push
into
aam
jmp
mov
push
outsb
fs
dec
push
adc
sbb
adc
je
add
mov
inc
fs
or
jae
jp
jg
or
repnz
out
in
and
adc
sbbl
cmp
cli
into
cmp
or
add
mov
inc
inc
int3
subl
loopne
and
loope
loopne
negb
sub
int3
jne
add
stos
call
cmp
inc
mov
movsb
mov
sbb
jns
push
adc
sub
inc
fildl
jg
sarb
jmp
push
fmuls
push
add
mov
inc
sbb
dec
mov
dec
sub
or
bswap
outsl
decl
stc
add
pop
rcrl
mov
stc
cwtl
je
jne
pop
stos
dec
inc
ja
lahf
loopne
or
out
cmpb
pop
fsub
in
test
inc
in
push
mov
xorb
aaa
inc
fisttps
ljmp
cli
sbb
and
faddl
inc
or
cmp
mov
sbb
stos
pop
add
rcl
cmp
lcall
inc
mov
fdivrs
int3
mov
adc
cli
add
mov
jg
imul
dec
adc
fs
pop
push
jl
out
jo
test
xchg
or
adc
popa
add
fwait
mov
push
jb
lods
xor
jmp
inc
testb
out
adc
rol
mov
add
hlt
sbb
nop
pop
clc
mov
out
pop
cmp
jns
jl
adc
or
xor
or
ret
je
sbb
rorl
push
add
sub
push
icebp
push
inc
add
xchg
jmp
add
xchg
inc
lds
lds
cmp
dec
pop
or
mov
in
cmp
test
lea
push
mov
je
jmp
lock
push
mov
cmp
sahf
loop
rcrb
xchg
mov
xchg
push
fcoms
fistps
call
pop
mov
daa
repz
add
inc
rclb
fstpt
jb
enter
or
sbb
movsb
test
cmp
decl
aad
add
jecxz
daa
mov
mov
roll
xchg
sbb
inc
or
mov
lret
xchg
in
or
test
pop
in
jno
test
in
cmp
mov
and
sbb
adc
into
mov
jmp
add
test
push
rcr
stos
shlb
leave
out
inc
js
and
outsl
adc
pop
and
add
push
jle
dec
and
cmp
or
xchg
and
xor
mov
inc
push
push
jb
fsts
jmp
hlt
and
testb
or
or
xor
add
ja
jbe
std
repz
xor
mov
outsl
in
fsubrs
adc
xorb
jae
fldcw
out
mov
inc
mov
mov
std
push
sbb
cmp
adc
inc
roll
jbe
imul
mov
pushf
cmp
ja
pop
push
les
add
jmp
inc
test
call
xlat
add
shl
ret
mov
je
and
lcall
pop
mov
mov
outsb
sbb
cld
push
sub
dec
lods
and
sarb
mov
clc
xor
aas
cmp
xor
adc
or
test
dec
or
or
jne
mov
js
add
jecxz
stos
xor
or
jb
mov
shrb
ror
test
fsubrl
out
aam
mov
adc
xchg
dec
mov
mov
outsb
pop
mov
push
sahf
test
ljmp
clc
jne
add
jle
js
shl
fwait
mov
add
int3
and
or
mov
xor
push
sbb
push
div
leave
clc
out
and
mov
insb
mov
mov
or
andb
lods
js
movsl
in
pop
int3
lock
rorb
inc
mov
mov
test
push
add
not
inc
push
jo
shll
pusha
shrl
popa
sbb
add
push
mov
push
lea
les
imul
or
inc
cmp
test
pop
push
out
movsb
jo
add
jne
pusha
in
add
jle
adc
clc
xor
fstps
mov
push
pop
lock
xchg
inc
sub
mov
cs
out
mov
pop
imul
and
movsl
ret
test
jb
leave
add
or
sbb
mov
lods
jbe
decb
adc
sti
or
and
and
scas
hlt
fiaddl
xlat
out
andl
cmp
and
fmuls
mov
inc
repnz
add
and
pop
test
sbb
decb
or
inc
dec
call
pop
inc
inc
bswap
push
sbb
test
dec
nop
jl
mov
add
adc
sub
pop
mov
cmp
mov
and
roll
dec
loop
cmp
call
cmpsl
inc
push
outsb
add
cmc
add
subl
pop
or
cmpsl
jle
nop
popa
mov
mov
sbbl
repnz
insl
mov
cld
in
filds
xchg
mov
in
push
push
in
mov
mov
adc
rorb
add
aaa
mov
clc
sbb
jo
push
les
fildl
push
gs
shl
je
add
clc
ret
jmp
aam
out
pop
mov
dec
int3
popa
push
mov
xor
mov
or
aaa
sbb
repnz
xchg
outsl
push
jo
hlt
mov
daa
push
mov
add
and
mov
xor
std
push
shlb
data16
and
mov
out
add
mov
clc
xchg
cmp
add
fs
xchg
adc
sbb
pushf
cld
subb
ret
orl
push
loope
adc
adc
call
add
or
jle
mov
in
lcall
addr16
and
cmp
ret
push
push
in
xchg
and
xchg
inc
subl
test
or
add
jmp
subb
mov
lret
mov
nop
sahf
mov
dec
pusha
mov
stc
into
cmpl
mov
int3
mov
add
loopne
jg
in
add
jl
andl
mov
sti
xor
mov
push
xchg
cld
ja
inc
mov
cld
mov
rolb
dec
mov
pushf
les
out
fs
xchg
jp
imul
push
outsb
xor
mov
add
jo
pop
gs
mov
push
xchg
jl
adc
push
add
incl
push
add
add
jae
xchg
stos
gs
cld
rorl
jecxz
push
outsb
jle
cmc
adc
roll
jnp
lock
iret
jmp
adc
pop
cmc
nop
stos
dec
sbb
je
sbb
adc
test
lret
jmp
fs
in
mov
dec
sub
add
inc
add
mov
push
xadd
jb
pop
and
inc
adc
or
mov
mov
std
cld
int3
jo
inc
push
add
jle
add
out
rorl
inc
pop
sub
les
pop
xchg
mov
jno
or
jb
call
dec
rclb
or
stos
dec
andl
ss
or
push
jle
test
andl
inc
dec
inc
outsb
sbb
xor
sbbl
lret
xor
cmc
mov
cli
push
cmpsb
mov
pop
mov
jae
decb
sbb
mov
movsb
cmp
outsb
or
inc
les
imul
rcrl
pushl
add
adc
xor
dec
mov
mov
in
aad
aaa
insb
jge
and
dec
add
mov
cmp
dec
pop
mov
mov
pop
mov
push
js
mov
aaa
mov
rcll
insl
xor
inc
aas
out
je
cmp
clc
cmc
mov
call
xor
sbb
dec
pop
call
xchg
adc
jbe
mov
pusha
je
push
test
push
in
pop
push
dec
in
mov
movsb
sub
jp
mov
subb
push
aas
adc
xchg
inc
pop
push
jo
add
xchg
add
jne
mov
add
ljmp
add
sar
adc
ljmp
cmpsb
jb
mov
pop
push
or
push
and
aaa
push
push
outsl
rclb
int3
je
mov
call
cmpsl
out
mov
sbb
stc
fs
mov
add
pop
and
sbb
add
sbbb
dec
test
fs
dec
add
mov
movsb
gs
in
or
enterw
or
mov
negl
les
pop
cld
push
clc
test
lds
add
jne
adc
xor
filds
inc
aaa
cmc
push
cmp
lock
mov
out
std
pop
lock
insb
lock
add
jmp
pop
mov
or
fs
xor
js
jne
loopne
mov
into
ss
mov
sbb
and
add
and
inc
mov
mov
ja
add
dec
in
stos
sbb
mov
xchg
je
fnsave
push
cmp
gs
fsubl
pop
or
fsubl
xor
mov
mov
lea
add
je
add
hlt
jns
add
das
cmp
inc
rcrb
ret
xchg
xor
add
add
ds
xchg
add
xor
fs
mov
js
adc
cmp
or
call
shlb
adc
mov
in
aas
dec
jp
add
pushl
in
jmp
mov
inc
in
xchg
les
mov
pop
cmp
int3
and
hlt
je
push
push
push
add
dec
icebp
incl
fs
dec
jns
cmp
fcmovbe
mov
test
mov
sub
stos
lods
je
mov
fs
test
out
add
pop
push
push
inc
call
push
ficoml
push
dec
pop
inc
xor
push
mov
je
test
pop
mov
dec
test
fwait
into
ljmp
or
les
subl
lock
out
orl
or
or
add
push
cli
pop
loop
into
mov
insl
add
aas
shl
push
jno
mov
and
mulb
push
xor
je
push
mov
mov
std
dec
add
dec
adc
sbb
call
jmp
jge
cld
lret
ret
and
pop
icebp
or
std
aas
test
std
xor
loop
jecxz
push
jns
inc
adc
dec
aam
sarl
mulb
cmp
cmc
adc
fmul
push
in
or
and
adc
pop
bound
shll
data16
mov
popf
insb
push
pop
lea
push
aas
push
or
movsb
add
loop,pn
xor
add
or
in
add
ljmp
jb
adc
fadd
xchg
mov
decb
ja
push
push
mov
je
paddusb
or
xchg
int3
call
rorl
les
sbb
push
push
repz
cmpsb
jge
push
aaa
push
push
dec
fdivp
pop
dec
das
movsl
push
adc
mov
push
jne
mov
je
jbe
or
in
sbb
push
push
mov
cmp
or
fldenv
pop
mov
cld
mulb
mov
cmp
adc
ja
inc
in
mov
pop
jmp
aam
add
jge
add
add
cli
add
xor
push
inc
dec
std
dec
gs
das
xlat
lock
pop
shlb
add
insl
les
or
sub
jmp
jl
inc
int3
cld
adc
sbb
int3
ficomps
jmp
adc
dec
mov
and
mov
je
pop
dec
ljmp
jle
leave
mov
roll
arpl
mov
outsl
lea
or
jnp
add
bnd
mov
push
loope
add
dec
dec
inc
push
mov
mov
int3
es
dec
popa
popa
loopne
jb
sbb
lock
sbb
xor
out
xor
push
sbb
adc
push
cwtl
add
jge
push
xor
inc
dec
mov
push
and
test
jg
repnz
inc
addl
stc
divl
fdivrl
das
push
add
out
xor
xor
popf
and
pushf
pop
int
or
cmp
cwtl
adc
or
and
sub
mov
ljmp
filds
mov
call
lods
rcrb
ror
test
push
dec
mulb
stos
sbb
adc
data16
flds
ljmp
ret
push
xor
sub
pop
adc
adc
stos
shll
pop
pop
dec
mov
and
aaa
dec
stos
lcall
push
mov
push
lea
fistpl
pushf
mov
jbe
mov
jg
add
call
push
sbb
jle
gs
jmp
loop
inc
outsl
dec
inc
jge
inc
jl
sbb
mov
add
xchg
pop
inc
fiadds
jae
outsb
inc
sti
add
adc
push
fidivrl
cmpsb
jmp
into
mov
jle
sub
leave
add
or
sub
cmpsb
rclb
xor
and
push
push
mov
rcrl
je
or
pushf
clc
push
popa
jnp
xor
xchg
jge
lret
inc
inc
xor
in
jo
cmp
inc
push
je
cmpsb
jo
inc
add
add
xor
mov
pusha
pop
faddl
cld
lds
mov
pusha
dec
loopne
cmp
enter
ljmp
cmp
out
decb
sub
imul
cmp
ret
push
xchg
push
jle
add
mov
stos
cmp
xor
les
mov
xor
inc
cmp
dec
jp
fld
pop
mov
sbb
mov
xchg
jo
jne
dec
add
es
and
push
subl
mov
ja
call
mov
lcall
xchg
minps
dec
movsb
stc
inc
cmp
push
mov
add
lcall
clc
cmc
mov
push
ljmp
outsb
arpl
and
je
inc
mov
test
je
test
and
decl
sub
stos
xorl
mov
add
aam
lcall
pop
lea
cld
mov
rol
jmp
int3
mov
cmc
mov
xor
int3
xor
popl
jbe
or
sub
mov
mov
adc
inc
inc
push
pop
xor
push
loop
cwtl
subl
iret
or
rorb
loop
mov
jmp
pushl
mov
inc
imul
je
inc
or
es
aas
test
cmp
mov
cli
out
es
add
mov
shlb
mov
shll
pop
jo
sti
cwtl
add
stos
dec
sub
clc
cmpsl
leave
cmc
stos
pusha
inc
inc
rcrl
xor
inc
xchg
fnstsw
add
js
mov
call
jbe
xchg
pushl
adc
dec
jle
ret
dec
cld
test
cmc
xorb
pop
mov
loopne
inc
adc
and
mov
xor
inc
mov
xor
divb
xor
xor
mov
add
or
add
pop
push
or
jb
jb
push
cmp
gs
mov
inc
xchg
popa
roll
lcall
ss
hlt
mov
sbb
into
sbb
add
adc
mov
or
or
cmp
add
mov
inc
sbb
sbb
jmp
mov
jo
sub
push
mov
data16
adcb
mov
jecxz
sti
test
js
add
das
lock
pop
mov
sub
or
cmp
pop
or
popa
gs
pop
mov
roll
push
jecxz
in
fs
dec
push
mov
push
or
adc
aad
adc
mov
int3
outsl
xor
and
add
dec
fisubl
dec
je
or
lods
inc
push
push
sub
andl
incl
push
gs
jo
jl
xchg
jo
jno
insl
and
pop
add
mov
lods
add
jp
test
mov
or
cmc
cld
stos
push
add
inc
int3
outsb
clc
incl
call
add
bswap
jle
insb
jno
add
out
enter
aam
imul
add
lahf
lret
jmp
fs
lods
dec
jns
mov
and
mov
loop
xchg
jl,pn
push
outsb
ljmp
test
or
mov
mov
xor
mov
push
aas
push
shlb
add
mov
clc
dec
or
popa
ret
adc
mov
push
inc
xor
xlat
dec
cs
add
pop
xor
std
fwait
shrb
inc
inc
leave
xor
dec
int3
mov
es
add
push
push
xor
dec
or
mov
es
add
ret
add
add
push
inc
fcomps
add
push
mov
popf
jge
inc
outsl
cmp
icebp
ljmp
cmp
inc
lea
add
push
mov
adc
add
add
push
js
push
loop
sub
push
in
push
sbb
repz
mov
pop
gs
pop
adc
pop
inc
mov
push
out
push
rorb
jne
shlb
push
insb
and
push
adc
mov
jo
mov
aam
outsl
setg
stos
push
hlt
sbb
lods
mov
jo
pop
push
and
test
or
fdivrl
inc
shlw
je
cmpsb
or
and
arpl
mov
mov
insl
sbb
pop
mov
xor
orl
inc
or
add
adc
push
dec
jl
sub
push
xor
hlt
div
mov
jle
cmp
ljmp
ja
lea
fistl
es
aas
cwtl
test
mov
imul
push
push
fmulp
sbb
test
xchg
dec
jo
mov
out
in
test
call
scas
mov
enter
dec
jne
xchg
pop
cld
test
adc
dec
loop
xchg
cld
cmp
dec
push
xor
je
mov
js
arpl
das
sbb
pop
dec
sub
call
xchg
rcll
test
pop
cltd
jg
inc
xor
push
cmp
sar
xchg
or
cmp
push
outsl
imulb
aas
pop
xor
js
ljmp
outsl
pop
orl
mov
nop
add
inc
mov
cmp
and
outsb
cli
or
mov
or
sub
mov
mov
pop
and
imul
push
and
mov
jecxz
das
test
dec
or
or
cmp
fsubr
inc
push
push
xor
jo
mov
sub
daa
ss
and
ja
stos
shll
and
add
mov
mov
lcall
inc
data16
pop
pop
ffree
xchg
fs
fs
mov
mov
mov
push
xchg
mov
sub
insb
sbb
mov
addb
je
mov
push
sub
cmpb
mov
mov
sbb
es
clc
jg
mov
mov
cld
jl
les
lea
sbb
test
jno
and
fmul
mov
mov
mov
test
jg
push
jno
call
mov
out
ret
shll
addl
out
outsb
or
cmp
and
sub
push
mov
and
nop
jmp
aaa
mov
jmp
add
push
sub
aad
ss
aam
or
sbb
imul
inc
pusha
mov
lret
push
cld
aaa
je
jg
leave
mov
fisttpl
jp
jecxz
in
mov
or
push
insl
mov
cmp
pushf
pop
and
and
outsl
cs
js
sbb
je
add
sti
loop
incb
cmpsl
push
dec
sbbb
add
flds
push
mov
hlt
xlat
gs
ljmp
nop
scas
add
pop
cwtl
mov
mov
cmp
dec
scas
cmovp
cmc
pushl
sbbl
jmp
inc
add
mov
mov
gs
adc
xchg
jmp
push
xor
dec
cmp
loop
or
fs
ret
inc
sbb
mov
cmp
ss
cli
stos
pop
notb
jbe
inc
adc
push
xchg
arpl
push
and
push
xchg
fcomps
cmp
adc
in
jns
jge
cli
pop
push
jne
movsb
mov
nop
push
aad
sbbl
icebp
sbb
xchg
shr
sbb
add
mov
mov
mov
in
xchg
call
enter
lret
jns
and
imul
pushf
mov
push
mov
popa
xor
aad
pop
push
mov
add
mov
and
sub
les
lret
dec
ljmp
cmp
pop
sbb
jno
rorl
pop
mov
xor
mov
jg
and
jg
insb
cmp
lcall
sarl
fs
or
adcb
ret
test
data16
add
dec
stos
call
xor
hlt
lcall
push
mov
es
rorb
out
test
mov
push
xor
pop
mov
adc
insb
cld
pusha
shlb
add
mov
scas
xor
leave
outsb
mov
rclb
fs
jno
mov
mov
or
loop
rol
push
cli
mov
adcl
adc
fbld
mov
pop
add
mov
pop
lock
mov
sub
inc
xor
inc
pop
shr
test
adcb
sti
rcrl
mov
decl
sar
testl
inc
rorb
sub
pushl
inc
cld
xorb
jle
call
call
mov
or
push
cmp
and
cmp
jb
clc
mov
rorb
dec
sub
pop
loope
push
inc
mov
cmp
dec
or
sbb
das
cmp
push
add
rol
pop
test
xchg
add
aas
adcb
out
shl
cli
inc
adc
shrl
fldcw
jecxz
in
jp
jmp
je
jmp
fbld
mov
and
into
in
jg
sbb
jl
cmp
dec
shlb
insl
into
cmp
sbb
shlb
data16
push
js
push
cmp
or
movsb
insb
mov
movsb
scas
in
pop
adc
cs
shl
jge
sub
ret
mov
lea
loopne
cld
jo
add
ret
insl
mov
jo
push
ret
adcb
cmp
hlt
gs
test
pop
mov
call
std
add
std
sub
into
adc
shlb
xchg
cwtl
shrb
lock
sarb
adc
xor
ja
xor
andb
mov
in
jp
add
jge
push
xorb
inc
xor
decl
sub
dec
lea
repnz
call
or
bound
adc
mov
jbe
cmp
jbe
popa
cmp
or
inc
xchg
hlt
or
inc
adc
gs
fiadds
mov
pop
adc
mov
cld
out
pop
push
and
add
mov
les
add
xor
push
hlt
xchg
push
pop
clc
testb
insb
pusha
sar
push
adc
jmp
mov
jge
icebp
add
xchg
push
out
int3
inc
push
fidivl
mov
insl
inc
hlt
pop
sti
fcomps
in
rol
cld
or
data16
add
ja
cmpb
fs
and
rcl
add
adc
sub
lock
mov
mov
in
lock
lock
test
fildl
loopne
adc
push
aaa
mov
popa
cli
lret
imul
cmp
je
xor
push
inc
test
jp
sahf
decb
sub
xorl
fisubs
insl
xor
pop
pop
les
and
dec
and
shlb
popf
js
and
insl
push
xchg
inc
jge
pop
sbb
adc
dec
mov
scas
ja
pop
push
je
and
push
rorl
sahf
push
sti
push
pop
ss
mov
jp
add
les
and
test
cwtl
push
arpl
mov
add
add
push
je
push
gs
out
jne
ja
je
aaa
std
je
sarl
adc
add
cmp
rolb
in
jg
mov
push
or
push
xor
sti
or
inc
sbb
imul
loope
add
cmp
and
popa
fnstsw
adc
dec
mov
icebp
add
mov
loop
fcomps
andl
outsb
add
call
lcall
mov
adc
push
cwtl
pop
inc
fiadds
adc
pusha
aam
jb
pop
imul
add
orb
mov
add
mov
je
inc
sbb
mov
xorb
jp
mov
push
mov
pusha
ss
push
lea
pop
push
adcb
adc
push
dec
mov
xor
call
fidivrs
push
push
clc
cmp
sbb
cmp
outsb
mov
das
mov
fs
mov
sub
movsb
adc
sbb
loope
push
mull
jnp
jne
sbb
or
sub
fs
cmp
push
xor
or
incl
mov
les
je
mov
push
adc
fcompl
mov
push
or
roll
call
push
mov
nop
xor
outsl
sbb
adc
mov
pcmpgtd
mov
jmp
mov
or
adc
pop
jo
lcall
dec
mov
xchg
mov
out
pushf
mov
fiaddl
mull
push
sbb
mov
in
out
clc
popf
xorb
add
int3
add
adc
lods
dec
fsubs
pop
jb
xorb
push
hlt
hlt
mov
dec
dec
add
int
es
out
outsb
add
sub
fstps
push
add
pop
add
popf
or
jbe
aaa
hlt
fistpl
bound
jne
xor
pop
pusha
cwtl
pop
sub
adc
addr16
pop
clc
add
xor
rcll
mov
add
idiv
mov
clc
dec
icebp
loopne
push
xchg
xchg
push
sahf
add
xor
jbe,pt
mov
arpl
push
cmp
pop
jb
flds
cmp
xor
add
and
jg
push
mov
iret
cmp
add
ret
xor
imul
or
mov
xor
add
and
or
and
cs
push
jmp
push
mov
fwait
jne
cmp
mov
ret
and
out
paddb
mov
fdecstp
xor
adc
out
inc
rol
call
pop
in
add
sbb
and
sub
test
mov
sub
add
addl
sub
adc
int3
lock
pop
inc
clc
cmp
jo
pusha
call
dec
push
inc
inc
xchg
mov
subl
test
cmc
add
and
inc
cld
xchg
cld
in
popa
mov
inc
adc
mov
clc
lret
xor
std
or
adcl
ds
movsb
incl
arpl
dec
jne
mov
lea
inc
popf
xor
lock
push
mov
and
push
sarl
pop
inc
cmp
xor
leave
stos
or
test
test
inc
insb
adc
je
inc
and
or
mov
dec
insb
pop
jae
nop
push
fucom
add
sub
dec
int3
xor
and
aas
sbb
int3
decb
inc
inc
std
pop
shl
xor
lods
inc
ret
outsl
add
ss
push
add
imul
push
add
add
dec
inc
addb
imul
adc
aam
loop
mov
aas
adc
call
sarl
addr16
push
cs
cmc
mov
sub
mov
test
push
ret
and
mov
adc
adc
enter
outsl
call
jo
int3
or
repnz
ds
mov
not
add
dec
add
pop
or
ret
add
pop
enter
lea
xor
enter
sbb
xlat
and
xchg
mov
cli
mov
rcll
push
pop
and
push
jo
dec
mov
ja
jle
adc
push
movsb
aas
push
mov
shr
add
fcmove
ret
sub
adc
subb
incb
addb
mov
mov
call
aas
add
call
test
xor
adc
loopne
inc
xorl
addl
dec
pop
jp
xchg
mov
jne
xchg
mov
or
jne
rclb
pop
add
jbe
pushf
push
std
mov
lock
incl
test
aas
into
inc
daa
cli
cmp
scas
and
mov
cmp
dec
fwait
inc
jo
lock
add
adc
pop
sbb
sbb
push
push
ret
inc
addb
jnp
add
pop
addl
stc
adc
dec
xchg
cld
std
rorl
sahf
inc
out
clc
mov
mov
repnz
inc
addr16
add
or
lahf
sbb
pop
fmuls
inc
adc
push
jmp
mov
dec
sar
push
jg
call
or
cmp
add
aaa
and
fwait
pop
in
ret
mov
push
xchg
data16
dec
aam
adc
xor
and
inc
xchg
call
adc
pop
inc
aaa
dec
sub
je
jb
rcrb
inc
fisubrl
sub
sbb
pop
dec
lea
xchg
daa
aam
push
xorl
add
or
or
fwait
xchg
mov
loop
ljmp
imul
mov
lods
lcall
push
fwait
mov
aad
test
sbb
mov
fcmovnb
xor
sub
add
shrl
xor
hlt
pop
pusha
rolb
bound
dec
repnz
fs
wbinvd
cmp
add
outsb
aas
jecxz
inc
mov
cmp
das
adcl
dec
js
loopne
mov
ss
les
xor
js
stos
sub
adc
push
clc
pop
push
nop
rorb
mov
xlat
ja
cmp
sti
dec
js
cmp
cmp
test
fimull
sbb
mov
sub
mov
xchg
shll
add
daa
mov
int3
add
aad
sbb
loope
jmp
cmp
shrb
lea
cld
fs
fsubrl
push
mov
andl
lock
xchg
hlt
lock
inc
rorb
add
popf
jb
pop
push
xchg
test
loopne
dec
or
mov
jno
cld
sub
mov
and
clc
mov
mov
decb
and
push
es
testb
or
adc
xchg
sbb
mov
mov
sbb
mov
push
lret
dec
sbb
mov
daa
mov
inc
jb
push
pop
clc
xor
mov
or
ja
mov
dec
gs
cmp
fidivs
andb
cmp
mov
adc
stc
call
int3
add
add
pop
pop
lret
das
and
push
xchg
sbb
or
xor
cmp
mov
stos
aam
adc
js
sbb
test
mov
hlt
test
sub
popf
jmp
or
push
push
inc
push
jo
out
jne
push
mov
cmp
loopnew
cmp
dec
adc
mov
or
loopne
add
add
incb
add
or
call
ret
sub
cmpsl
call
or
inc
arpl
xchg
inc
js
cmp
dec
mov
sub
outsl
xor
and
je
jns
mov
fcomip
or
clc
jl
inc
adc
fmull
mov
mov
outsb
mov
dec
push
jb
mov
and
push
daa
mov
mov
add
add
mov
push
mov
adc
push
inc
dec
mov
cmpsb
jo
or
add
js
dec
in
pop
inc
rcll
fisttps
sbb
pop
push
add
adc
jmp
sbb
pop
xor
cs
test
fwait
push
push
pop
ret
push
add
cmp
pop
pop
push
cmp
dec
jnp
in
fdivrs
pop
fwait
or
mov
mov
les
sub
xchg
inc
fwait
test
or
mov
js
pop
dec
shl
add
cmp
adc
and
lock
gs
inc
ja
js
sub
mov
or
xchg
loope
scas
aad
fcoml
add
ljmp
push
loope
push
add
push
ret
test
xor
int3
jb
es
dec
popa
add
fs
fstps
shl
dec
or
in
cld
in
xchg
fwait
sar
push
mov
enter
push
or
mov
sub
mov
lock
sbb
dec
inc
lret
lea
repnz
push
cmp
cwtl
and
movsb
fwait
add
stos
ljmp
mov
in
cld
or
paddd
movsl
jmp
dec
cmpsb
aad
adcl
inc
testb
fwait
out
xchg
xor
mov
enter
mov
or
je
mov
cmc
mov
and
in
call
sub
mov
push
xor
lea
std
aaa
push
adc
xor
fbstp
andb
imul
cli
pushl
mov
xchg
call
add
std
in
push
push
scas
push
pushf
mov
inc
push
outsb
clc
add
bound
in
js
mov
gs
xchg
mov
mov
lcall
movsb
and
push
adc
adc
add
jo
inc
dec
mov
push
add
and
jp
js
sbb
xor
shrb
call
sbb
flds
stos
push
mov
pop
sub
mov
outsb
push
add
stc
ds
inc
mov
lea
aaa
jmp
rolb
pusha
jae
mov
ret
mov
cmp
sbb
sub
pop
push
push
fwait
mov
shlb
mov
es
xor
push
push
sub
aam
test
ret
mov
loope
xchg
mov
add
mov
xchg
test
mov
aam
adc
mov
push
gs
inc
shrb
xor
dec
inc
mov
add
cwtl
xchg
cmpsb
lods
and
enter
dec
bound
dec
pop
repnz
loope
or
push
push
jno
inc
xor
sub
fldl
or
jmp
incl
inc
shrb
cmp
jl
arpl
ret
pop
std
pop
mov
daa
and
jbe
push
sbb
mov
test
subb
insb
or
mov
xchg
les
les
dec
and
insl
sarb
push
push
call
shrb
test
dec
cmc
sbbb
cld
push
dec
or
mov
jge
add
xchg
add
mov
jne
mov
pop
or
call
es
push
dec
cwtl
dec
and
loop
lods
addl
es
pop
cmp
mov
xor
fdivr
add
jmp
or
mov
xor
mov
add
or
nop/reserved
push
popa
icebp
push
out
cmp
fwait
push
jne
mov
add
push
lods
inc
cld
movsb
orl
sub
aam
and
sbb
add
jle
adc
in
rolb
pop
xor
add
les
jge
test
mov
add
dec
push
mov
sar
and
outsb
dec
popa
jecxz
ret
lock
inc
add
loop
or
adc
dec
das
adc
push
daa
pop
add
mov
mov
movsb
mov
push
or
repnz
orl
shlb
inc
mov
mov
leave
les
push
push
sbb
adcb
inc
test
in
pop
ljmp
add
into
adc
cmp
je
pop
mov
add
mov
subb
mov
and
inc
add
rorb
inc
sti
cmc
xchg
enter
lea
outsb
loopne
mov
dec
mov
jbe
and
fs
push
mov
nop
cmpb
xor
add
mov
fmull
insl
dec
test
mov
in
je
inc
fmuls
add
int3
mov
mov
add
sub
daa
push
xor
mov
into
push
add
cld
jg
popa
test
cmp
rcrl
mov
pop
or
mov
shrb
push
hlt
movsb
and
jne
int3
int3
int
sub
cmp
dec
cmp
inc
mov
les
or
mov
ret
sbb
int3
sar
pushf
mov
and
inc
fs
lds
push
movsb
mov
fs
dec
xor
je
or
call
or
push
fidivrl
jo
mov
push
negb
in
push
shll
push
or
cmp
les
les
fadd
mov
ljmp
push
mov
push
pusha
add
jp
stos
or
mov
daa
adc
mov
dec
adc
out
cli
dec
ret
mov
lcall
out
and
push
jmp
pushl
add
leave
pusha
inc
pop
sarb
xchg
call
xor
call
rcrl
xor
sub
sbb
inc
sub
cmp
adc
inc
inc
hlt
rorb
lea
adc
push
push
xor
ljmp
insb
sub
pop
std
adc
out
xor
movl
inc
xchg
dec
call
je
and
lock
into
hlt
fsts
jg
scas
ds
aas
mov
je
mov
pop
stos
pop
jl
cmp
add
scas
cmp
mov
jb
pop
int
mov
mov
fcmovnbe
jl
je
adc
aas
shrb
push
in
fucomi
jle
adc
mov
mov
dec
arpl
fiaddl
mov
addb
aad
dec
cld
incl
mov
mov
call
fxch
push
int3
mov
jo
fdivr
lcall
jl
sbb
inc
mov
movsl
les
mov
adc
out
test
push
ret
push
sarb
mov
das
sahf
pop
adcb
fisubrl
jmp
clc
ret
adc
loop
mov
add
fsubr
mov
add
cld
sbbl
rolb
stos
cmpsb
test
sub
outsb
sub
outsl
ret
mov
sbb
je
mov
and
xor
test
fildl
les
cmc
and
pop
cmp
pop
push
rclb
jnp
mov
outsl
push
mov
mov
add
xor
insb
dec
pop
or
xor
loope
push
mov
insl
pop
ds
popa
push
cltd
add
mov
mov
mov
dec
dec
push
lea
clc
int3
pusha
rcr
and
xor
cld
nop
add
out
adc
sbb
inc
gs
or
inc
cld
mov
xor
xor
movsb
test
loop
push
pusha
mov
adc
mov
cwtl
je
push
push
pop
or
and
testb
sub
and
mov
xor
inc
mov
les
inc
xor
hlt
adc
mov
scas
jb
mov
ss
or
jecxz
and
int3
sub
clc
in
inc
fcomp
cmp
mov
mov
dec
mov
aas
xor
xor
incl
sarb
adc
jmp
fs
push
and
not
movsb
loopne
loope
in
xor
data16
jp
push
scas
js
jmp
out
ffreep
les
push
decl
sub
add
xor
add
ret
in
mov
and
and
xchg
mov
mull
cmpsl
xchg
subb
sbb
loopne
xchg
jecxz,pn
jge
add
mov
sar
or
xor
ret
push
orl
push
les
popa
int
addb
mov
mov
lock
lcall
jmp
mov
add
or
ret
push
pop
aas
cltd
adc
inc
iret
push
cmc
xchg
jno
call
inc
mov
stos
dec
dec
aaa
xor
add
fs
push
mov
push
jl
cwtl
adcl
jb
test
into
jmp
in
pop
jmp
jecxz
clc
std
filds
jae
mov
add
lock
js
in
test
je
lahf
pop
cmp
pop
and
lods
lahf
xchg
in
mov
cmp
push
and
aaa
jmp
mov
outsb
adc
push
loopne
sub
mov
mov
shrl
xor
and
inc
shlb
dec
fbstp
inc
mov
pslld
ret
pop
mov
and
push
add
jg
lea
xor
mov
jbe
call
xor
pushl
outsb
clc
push
jge
cld
cld
in
rol
bound
push
jo
outsl
jmp
test
fistl
xor
pop
add
sub
mov
lea
data16
push
jo
leave
inc
mov
cs
idivl
dec
fdivr
sbb
cmpsb
mov
jl
pop
push
dec
push
sub
shl
idiv
dec
mov
call
mov
add
push
fprem
inc
frstor
mov
push
push
pusha
mov
in
mov
jl
sub
push
xor
jns
insb
clc
sbb
pop
mov
add
rorb
jo
loopne
gs
xor
add
and
call
testb
inc
add
shr
leave
daa
add
or
repz
cmp
mov
dec
lea
sbb
insl
pop
jnp
cmp
or
aam
xchg
jle
test
popa
and
mov
adc
push
jp
mov
std
xchg
pop
inc
xor
pushf
dec
lea
cmpsb
pop
sbb
rclb
push
xor
dec
jbe
pop
inc
dec
dec
fwait
gs
repz
dec
push
mov
sbb
outsb
mov
xchg
stos
test
and
pusha
pushl
pop
pop
hlt
add
sbb
gs
mov
fsubrs
sti
xorb
inc
out
mov
into
les
mov
insl
ljmp
aam
pop
mov
mov
and
outsl
xchg
loope
mov
add
popa
rorl
aaa
lods
or
mov
inc
cmp
test
xchg
pop
icebp
mov
outsb
xor
and
pop
jne
sar
mov
icebp
mov
les
enter
push
push
mov
xchg
inc
adc
icebp
clc
movlps
adc
mov
sbb
xor
jp
lea
mov
ret
orb
dec
stos
mov
add
test
stc
cmp
pop
xor
lods
add
je
sbb
lds
pop
jecxz
adc
mov
out
call
adc
sti
xchg
lock
inc
dec
pop
addb
hlt
sub
inc
pop
fdiv
out
lea
sub
jo,pn
aad
xor
insl
je
je
push
out
inc
call
pop
loopne
dec
mov
cmp
notb
push
xchg
rorl
mov
jmp
push
int3
int3
jl
inc
jb
inc
clc
adc
cld
pop
mov
int3
test
xchg
adc
and
dec
pop
ljmp
mov
lcall
cmp
sbbl
aam
in
leave
cmp
pusha
adc
ds
jg
sub
mov
pusha
sbb
pop
movsb
rolb
adc
out
sbb
cltd
sub
jo
subb
push
loopne
icebp
and
adc
mov
rcll
loopne
decl
and
push
rorb
nop
inc
into
mov
xchg
push
push
into
mov
call
data16
enter
adc
adc
rorl
xorl
outsl
add
jl
fmull
lahf
lods
sub
jae
dec
in
add
mov
xchg
pop
adcl
mov
enter
inc
imul
loope
movsb
push
fcomps
insb
mov
insb
call
xchg
sbb
jb
pop
pop
lock
mov
popf
mov
call
insl
cld
mov
fistl
lods
outsb
scas
and
nop
mov
inc
add
stos
mov
pop
or
repnz
fs
negb
jle
cltd
stos
rcrb
cmp
mov
mov
xor
or
in
clc
stos
in
and
or
mov
xor
lock
fcmovbe
out
sub
mov
decb
adc
or
inc
addl
sub
movsl
ss
ljmp
lock
mov
adc
lret
ret
cs
loopne
add
jge
lea
jo
insb
push
mov
or
and
jg
int3
js
jge
cmp
xor
mov
add
ja
call
inc
psubb
sub
hlt
in
xchg
test
pop
fst
xchg
or
cmp
pop
cmp
sbb
jl
cld
mov
lret
pop
and
scas
push
lret
sarl
mov
push
mov
call
fsubs
inc
push
and
sarb
and
jmp
stos
incb
leave
push
nop
push
rcrb
pop
sub
lcall
fidivs
sub
outsl
adc
or
ljmp
adc
jne
mov
mov
ret
cmp
insb
push
jp
movsb
mov
shr
inc
inc
push
cld
adc
cmp
cmp
mov
add
rcll
mov
test
mov
aam
push
test
cld
ret
js
movsl
loop
ret
sbbb
ret
xor
test
inc
call
popl
iret
clc
cmp
call
and
adc
push
fwait
movsb
pop
incl
les
inc
add
xchg
scas
add
dec
fdivs
or
add
sbb
xchg
mov
mov
add
xchg
sub
add
data16
cmp
mov
scas
mov
js
sbb
pop
or
add
out
adcb
ljmp
push
push
dec
pop
popf
or
jle
dec
aas
xor
pop
repnz
mov
jp
dec
push
push
push
push
dec
inc
ret
jle
clc
in
pop
lock
cli
rclb
inc
xchg
xor
push
xor
push
or
adc
push
or
adc
scas
cmp
int3
and
mov
fs
ds
and
add
pop
mov
adc
xchg
or
mov
or
inc
xor
inc
push
sbbl
add
push
mov
dec
adc
mov
cmp
call
rcll
mov
repnz
out
add
das
outsb
xor
xor
gs
jp
or
jmp
ss
jae
jb
ljmp
stos
insb
addb
lock
in
dec
outsb
mov
or
sbb
inc
xor
rolb
in
adc
sbb
call
dec
pop
inc
jb
fs
sbb
loopne
les
outsl
pushl
outsl
nop
insb
or
mov
push
repz
into
xor
or
or
inc
ret
pop
fsub
mov
or
loopne
push
test
lret
sarb
int3
mov
daa
mov
cld
or
mov
pop
and
dec
idivb
andl
adc
call
aam
push
decl
imul
push
push
jbe
das
mov
movsb
dec
add
inc
mov
pop
cs
mov
mov
loope
test
xorb
push
and
sub
and
mov
nop
pop
inc
mov
xlat
mov
adc
add
or
sahf
ret
add
or
arpl
push
cld
arpl
sar
push
loopne
aaa
std
lret
gs
nop
mov
adc
pop
add
scas
mov
add
outsb
pop
push
mov
pop
xor
js
push
xbegin
xor
push
pop
add
jmp
add
int3
scas
jg
inc
push
xor
push
mov
inc
mov
int3
pop
pop
jg
add
lcall
and
jb
jbe
sub
rorl
pop
add
fstps
rorl
test
push
add
mov
sbb
into
mov
fs
cld
or
add
mov
fcompl
inc
inc
ja
sub
ret
lcall
add
sar
mov
mov
rol
jo
les
mov
pop
popa
jecxz
scas
shrb
add
lock
mov
inc
nop
add
cltd
outsb
sub
divb
mov
clc
or
in
outsb
mov
in
mov
sarb
mov
sub
lea
mov
add
or
loopne
push
pop
inc
rorb
add
inc
xchg
add
inc
shr
in
jge
scas
fsubs
fdivr
sub
daa
lods
mov
pop
cmp
addr16
je
inc
add
mov
test
add
enter
pop
or
ret
ret
adc
int3
pop
ljmp
adc
or
or
cmpsb
push
or
mov
pushl
push
add
xor
pop
jbe
das
push
jge
or
adc
nop
push
adc
inc
and
call
cmp
push
loop
outsb
inc
shrb
mov
into
sub
mov
test
pop
loop
or
xor
or
std
jg
push
cmpsb
repnz
sbb
dec
push
cmp
iret
decl
sub
daa
ss
rsqrtps
cld
lock
neg
popa
mov
sahf
inc
fldt
pop
sar
and
aaa
push
cli
scas
push
loop
lock
jb
add
xor
adc
sub
ficoms
fisttpl
into
in
cmp
cld
test
mov
xchg
cmpsl
jne
adc
mov
fisttps
mov
mov
adc
fdivr
rclb
rol
mov
ds
fstps
pushf
cmpsb
call
sbb
pop
lods
outsl
or
sbbl
cmp
dec
or
aam
subb
mov
and
sbb
mov
and
mov
out
jno
mov
jmp
jp
hlt
movups
test
cld
sbb
xor
std
sbbl
lock
mov
push
cli
lods
jb
fadd
sub
add
mov
or
xor
fcomps
jle
les
mov
sbb
xor
int
ss
stc
roll
push
or
rcl
jne
xor
and
push
movsl
sarl
push
jmp
insl
lods
and
cmp
mov
jmp
sti
pop
xor
mov
add
mov
test
mov
xor
or
pop
pop
fistps
sbb
xor
sub
xor
test
ja
push
lock
push
js
add
call
mov
or
mov
jae
mov
lret
xor
js
cmp
xchg
and
test
dec
les
jg
movsb
mov
adc
push
ds
ss
push
mov
or
lret
or
je
jmp
loopne
add
mov
enter
lret
fbstp
lock
adc
mov
sbb
shlb
jb
imul
jge
mov
cmp
add
cmp
mov
add
idiv
test
mov
adcb
xchg
ret
leave
xchg
clc
loop
subl
clc
mov
ja
push
fildl
add
cmp
push
xor
aaa
stc
mov
sbb
test
outsl
mov
inc
movsb
dec
call
outsb
clc
jb
and
loop
mov
jo
hlt
je
inc
mov
mov
idiv
or
inc
call
sbb
shrb
xchg
add
in
sub
sbb
mov
data16
rolb
in
push
xchg
clc
les
and
loop
std
pushl
mov
les
call
inc
mov
rolb
adc
pop
inc
data16
jb
std
iret
popf
fs
fwait
lock
push
xor
call
mov
push
aad
sub
hlt
jl
push
cmp
loopne
ret
xchg
adc
lret
gs
adc
jbe
lods
mov
orl
fiaddl
sbb
ret
popf
lods
mov
dec
ret
call
rcr
andl
frstor
mov
idiv
fimuls
or
into
js,pt
aaa
in
add
ljmp
and
addl
outsl
hlt
loopne
divb
add
cmp
loopne
inc
pushf
inc
mov
push
or
fisubrl
sub
sbb
ret
mov
push
push
mov
cwtl
and
mov
mov
jb
fdivrs
aad
push
mov
mov
jne
mov
ljmp
sub
push
pop
je
loopne
test
or
mov
jne
gs
pushf
lock
jmp
and
fadd
mov
cmpsb
xchg
mov
out
add
insl
jae
test
lahf
je
rorb
fistpl
cmovo
fldenv
adc
int3
into
clc
decb
pushf
inc
cld
push
mov
les
cmp
push
std
and
dec
jns
cli
sub
fs
int3
bnd
leave
roll
std
scas
push
aam
or
add
xor
test
mov
sub
push
mov
dec
data16
mov
jae
inc
and
daa
push
call
jbe
sub
ret
jle
imul
mov
outsl
add
sub
add
inc
jg
es
outsb
and
mov
cmp
add
mov
cmp
inc
data16
ret
mov
xchg
push
adc
insl
pop
adc
aaa
mov
cmovp
add
sbb
inc
test
adc
xor
pop
pop
jle
pop
inc
cld
data16
lcall
call
inc
mov
ja
add
xchg
call
pop
or
jnp
rolb
inc
je
int3
xor
cmp
in
inc
loop
shlb
movsb
daa
push
pop
inc
icebp
sub
sbb
ret
push
mov
roll
add
cmc
lods
stos
idivl
mov
out
rcll
jbe
ret
test
fimuls
xor
nop
adc
sbb
jge
push
xchg
mov
jno
mov
dec
fs
sti
ja
aaa
adc
add
rcrl
xchg
adc
out
lds
loope
incl
dec
pop
xor
jb
xor
and
incl
std
adc
adc
push
les
mov
mov
xlat
mov
jmp
jmp
fdivs
cmpl
cld
jne
incl
mov
push
xchg
sahf
fdivrs
pcmpeqw
push
and
push
xchg
insb
movsl
add
fwait
rcrb
cmp
jmp
adc
and
inc
xorl
dec
fidivl
lods
cli
xor
test
sbb
mov
or
call
cmp
loop
mov
xor
dec
xlat
lea
clc
aas
test
lret
or
outsl
pop
xchg
or
lea
loop
orb
roll
les
js
dec
pop
jno
movsl
xor
mov
sbb
lret
ret
stos
inc
test
test
cld
pushf
or
or
lods
int3
jbe
sbb
js
adc
leave
popf
fs
mov
jmp
cwtl
loopne
lds
aam
jns
lods
xchg
incl
das
inc
outsl
mov
mov
mov
sahf
push
sbb
add
fwait
aas
add
sub
or
xchg
daa
mov
sbb
cmp
cmpsb
ja
jg
fdivrs
cmp
rorb
inc
pushf
shrl
call
lock
sub
sub
dec
bound
add
ljmp
pop
push
add
adc
mov
add
mov
cmp
mov
ret
cmp
pop
mov
sub
push
cmp
or
pop
std
push
or
adc
adc
mov
bound
pop
push
mov
hlt
pop
dec
pop
adc
je
lods
add
lods
inc
jp
xchg
mov
adc
or
adc
mov
push
sbb
dec
call
inc
pop
mov
fidivrs
insb
and
fsubl
push
ret
pop
dec
dec
test
call
movsb
repz
cli
sbb
and
leave
jo
test
inc
dec
xchg
mov
fdiv
clc
inc
pop
test
jp
ss
pop
mov
sahf
inc
inc
push
and
rorb
jne
or
sbb
bound
nop
and
popa
adc
cmpsb
ljmp
inc
push
sbb
lea
inc
and
jne
fstpl
dec
sbb
out
mov
shll
xor
cld
testb
adc
addl
test
lret
sub
je
cmp
loopne
loop
adc
dec
pusha
adc
call
cmp
inc
sti
call
xchg
insb
movsb
cli
aam
pop
shrl
sarb
push
cli
sub
mov
rorl
add
mov
and
das
loope,pt
ret
insl
sub
ljmp
sbb
adc
and
fsubrl
insl
cmp
mov
ficoml
and
inc
mov
add
xlat
and
push
daa
sbb
pop
add
or
popf
or
mov
or
mov
inc
add
cmp
jge
pop
icebp
add
xor
pop
jo
cli
mov
mov
inc
mov
xor
push
mov
cli
popa
call
je
add
xorb
fsubl
mov
pop
arpl
dec
inc
push
mov
and
mov
cmp
inc
decl
dec
mov
std
lea
adc
lea
push
add
ljmp
lret
push
andb
pop
inc
shr
dec
filds
cwtl
mov
pop
add
in
mov
pop
pushf
mov
enter
xor
fld
ret
inc
repz
insl
mov
in
fadd
pop
xchg
clc
sub
mov
lock
ficoml
in
or
cs
fisubs
sub
xchg
adcl
inc
clc
pushl
inc
das
std
mov
xadd
outsb
push
js
ss
insb
sbbl
ficoml
jo
lods
cs
mov
jmp
push
xor
xor
idivl
or
inc
fdivp
shl
add
xchg
mov
rcl
enter
test
mov
jnp
xchg
ss
adc
pop
xor
push
jmp
in
call
mov
or
inc
loop
mov
jmp
test
cmpsl
mov
xchg
stos
push
shl
mov
aas
or
test
test
dec
or
jl
sbb
xor
sbb
push
xchg
lods
adc
movsl
mov
das
ljmp
push
test
lcall
add
add
pop
shl
lea
pushf
cmp
jmp
mov
xor
les
or
mov
xchg
and
mov
hlt
mov
lock
cmp
movsb
and
cmp
xor
dec
ret
cmpsb
idivb
push
push
push
out
sub
xor
xor
aas
push
mov
dec
or
std
mov
jl
or
mov
rcll
iret
std
and
cltd
repz
dec
jmp
rcr
push
xor
mov
fisubs
fildl
mov
xchg
xor
call
sub
int3
cmovbe
mov
ror
lods
ss
lcall
sbb
mov
push
sti
push
sub
sub
or
scas
add
fcomps
mov
adc
xor
out
jo
notb
ret
mov
push
add
jge
fwait
addb
mov
testl
aas
mov
gs
mov
lds
std
jne
nop
loopne
rclb
fwait
shrl
mov
or
adc
and
pop
js
jns
les
push
adc
adc
sahf
push
imul
cmp
daa
add
pusha
add
out
and
mov
insl
mov
xchg
add
cmp
jno
xchg
dec
inc
testb
mov
mov
push
xchg
mov
imul
scas
inc
gs
push
bound
pop
push
xchg
lcall
mov
or
ret
aam
mov
push
filds
imul
mov
dec
aaa
pop
push
inc
movsb
cli
xchg
fs
push
test
push
js
mov
pop
mov
lods
fxam
xor
push
lea
pop
push
not
pop
and
sarl
push
dec
add
adc
clc
xor
inc
xor
dec
cs
mov
mov
fmul
mov
jmp
add
enter
test
insb
cmc
inc
ss
loop
add
add
sub
or
cwtl
pop
or
adc
je
mov
pop
lods
cs
ljmp
adc
daa
mov
in
mov
mov
decl
je
mov
ret
movsl
out
jbe
popl
xor
inc
push
fs
lea
lods
pop
push
add
enter
test
cmpsl
mov
das
test
xlat
cmpl
orl
fisttpl
out
bound
mov
leave
aam
insb
mulb
pushf
mov
and
xor
push
daa
cld
sub
int3
add
inc
cli
push
stc
mov
mov
mov
xchg
arpl
push
mov
stos
insb
cmp
inc
pop
clc
jne
aaa
mov
jb
mov
or
inc
test
test
mov
xor
sub
push
xchg
movsb
test
dec
push
ds
adc
push
hlt
mov
fwait
fs
push
xchg
add
xor
inc
shll
add
mov
or
dec
lock
push
out
in
rcrb
clc
popa
pop
hlt
popa
insb
fiaddl
xchg
test
xchg
mov
sbb
xor
mov
iret
push
call
jmp
subb
cmpsb
rcrb
lea
incl
or
sti
ficompl
gs
lods
cld
xchg
jbe
sub
roll
and
jg
jl
xlat
sub
mov
push
push
mov
test
dec
sbb
sub
enter
icebp
pop
test
jl
jae
push
inc
es
or
jl
pop
aaa
imul
and
push
add
cmp
adc
adc
mov
enter
dec
mov
ret
gs
lea
xor
add
mov
pop
add
les
inc
arpl
pop
sarb
mov
lret
push
fdivr
and
popa
fdivl
loope
negb
lock
rclb
xchg
je
inc
adc
subb
cmp
mov
ret
sbb
ret
push
repz
sbbb
inc
push
hlt
int
inc
mov
nop
icebp
or
sbb
push
inc
pop
fs
mov
stos
or
pop
adc
mov
daa
ljmp
dec
mov
stos
adcb
addl
sahf
adc
push
leave
lcall
jmp
lret
push
lock
inc
adc
cld
mov
inc
push
ret
outsl
push
push
orl
push
or
or
call
imulb
pop
imul
das
fs
inc
sub
mov
ficoms
shrl
and
sahf
out
mov
mov
sbb
or
dec
test
jmp
inc
xor
inc
ja
lods
push
fnstcw
neg
push
hlt
add
cmp
mov
out
cmpsb
js
dec
xor
or
lcall
ds
std
jb
push
cli
or
int3
loope
push
mov
jge
xchg
mov
xor
mov
movl
unpckhps
cmp
push
out
test
add
cmp
popf
inc
cltd
imul
insb
les
fbld
or
out
imul
cld
adc
lods
aas
add
incl
xchg
movsb
push
sub
mov
fs
sub
or
sarb
push
repz
adc
js
xchg
rclb
jmp
inc
sub
mov
in
sub
enter
mov
mov
sbb
push
test
cli
addl
mov
sub
xor
inc
xchg
adc
sbb
les
into
adc
mov
mov
mov
push
fwait
rorb
fcomip
orb
test
test
mov
add
mov
add
mov
sbb
add
orb
das
mov
xchg
dec
xor
sar
push
mov
aam
add
push
pushl
pop
push
and
mov
cmp
dec
fdivrs
popf
lock
pop
mov
push
adc
decl
sbb
test
and
or
lock
pushf
sbbl
adc
call
js
mov
cmp
sbbl
loope
scas
push
loopne
xor
or
and
ss
aad
call
std
adc
mov
shr
sar
lods
push
mov
ret
mov
mov
push
popa
sub
jb
and
pop
test
data16
dec
mov
push
shlb
xchg
jg
jle
loopne
cmp
stc
push
xor
or
data16
push
jb
inc
jmp
fdivp
mov
dec
add
test
push
aam
jle
sub
inc
pop
push
shr
fwait
test
jmp
jnp
mov
mov
rcrb
popf
test
mov
mov
int
pop
mov
push
hlt
mov
xchg
icebp
mov
adc
xor
or
movsb
push
inc
or
push
mov
incl
jb
xor
sti
out
jb
icebp
sbb
insb
or
push
cld
rolb
pop
addl
inc
leave
inc
arpl
mov
mov
sbb
test
mov
les
mov
ds
mov
mov
sbb
icebp
jne
and
add
inc
mov
mov
add
popa
jecxz
xchg
jp
jno
pop
mov
inc
adcl
jne
jp
xor
js
push
fildl
not
int3
loope
out
js
ss
test
sbb
mov
mov
das
sbb
loopne
mov
xchg
mov
bound
outsb
adc
push
das
inc
outsl
mov
cld
filds
les
je
push
cmp
popf
push
or
sub
es
test
call
inc
data16
mov
adc
call
or
sub
jne
cli
inc
fstpt
fdivp
lods
sub
mov
iret
add
mov
add
mov
inc
and
ds
ljmp
inc
mov
mov
pushf
mov
or
xor
cmc
sub
aaa
call
xlat
sbb
mov
hlt
jae
sarb
xor
add
or
add
leave
repnz
push
les
push
cmpl
loope
cmp
xchg
mov
je
insl
loope
push
xchg
mov
in
mov
and
std
mov
and
mov
xor
mov
outsl
push
xor
jo
push
push
ret
xor
jmp
fs
insl
add
push
outsl
or
mov
and
gs
shlb
je
jo
jno
addl
xchg
sbb
cmp
jl
and
in
xchg
cmp
adc
rclb
add
and
sub
mov
push
lea
scas
push
inc
int3
in
in
subl
push
scas
push
clc
mov
xchg
rclb
inc
lods
cld
rorb
or
mov
inc
mov
xchg
sbb
adc
ret
divb
sbb
mov
xchg
or
orl
outsb
xchg
sub
push
push
or
push
jo
pushf
dec
push
sub
std
or
xor
push
jge
les
aaa
fcoml
jge
xor
rcrb
add
sti
push
lret
fs
jp
mov
add
sub
mov
sti
aas
fstpt
into
lea
push
sarl
test
loopne
mov
or
out
dec
mov
adc
xchg
aam
pop
not
filds
inc
insb
mov
shr
mov
rorb
in
push
lret
ss
mov
clc
les
sub
pop
or
mov
pop
cmpsl
add
dec
fisttps
mov
push
adc
fisttpl
xchg
push
push
push
mov
xor
fcmovnb
dec
xchg
pop
sbbb
pushf
sbb
int3
fcomps
and
pop
mov
xchg
cmp
int3
xor
test
call
incb
cmp
push
add
rorb
push
fwait
and
out
push
add
push
imul
fs
add
pop
dec
adc
sub
xchg
dec
das
clc
or
nop
sar
mov
adc
ss
mov
push
sahf
pop
adc
cmp
cmpsb
in
fildl
aaa
xor
arpl
inc
fisubrl
adc
sbbb
mov
aaa
mov
imul
push
add
push
inc
mov
pop
rclb
clc
sub
sub
int3
shlb
cs
or
jg
cmp
inc
cmpsb
loopne
adc
ss
fs
jns
mov
outsl
mov
data16
arpl
add
mov
mov
lods
js
dec
fimuls
and
lock
xor
cli
jp
xchg
ficoml
lods
mov
icebp
stos
leave
push
push
xor
pop
push
orb
push
dec
aam
inc
xchg
and
std
jnp
cmp
lea
clc
push
cld
adc
iret
stos
push
clc
sti
add
xor
or
ljmp
inc
or
sub
inc
test
push
fldenv
mov
call
gs
adc
out
clc
xchg
pop
inc
push
push
ljmp
or
mov
std
or
sar
mov
nop
sbbl
imul
add
xorb
shll
mov
inc
aaa
scas
repnz
add
ljmp
push
subb
cld
shlb
sbb
repz
cltd
or
xchg
pop
rolb
xor
les
adc
clc
or
or
mov
sbb
push
sub
push
push
decb
in
je
inc
es
sub
gs
and
adc
lock
mov
mov
nop
xlat
or
adc
js
lods
jo
fs
mov
mov
xor
add
les
adc
imul
inc
fsubrl
js
ljmp
sahf
pop
adc
or
es
inc
lock
and
adc
push
adc
clc
stc
pop
push
inc
and
or
and
std
adc
mov
jl
fisttps
inc
loopne
xchg
gs
inc
xchg
mov
stos
call
mov
out
xchg
adcb
xor
fildll
rorl
xchg
call
push
es
pushl
cmp
xor
movsb
or
xor
divb
and
jmp
cmp
xchg
out
jecxz
cmp
lock
and
or
testb
or
call
adc
les
jle
push
pop
dec
int3
cmp
or
mov
iret
shlb
inc
orl
sti
inc
imul
idivb
fimuls
push
cwtl
inc
push
ret
jl
fs
scas
push
xchg
and
mov
xchg
xor
iret
rorl
call
bound
mov
cmpsb
xchg
or
add
sbb
or
add
loopne
rolb
aaa
sub
fiaddl
jle
cmp
ljmp
xor
movb
loop
pop
lret
int3
jg
jne
outsl
push
inc
add
es
cmp
mov
pop
add
into
add
push
jl
and
movsb
fsubrl
add
jne
xchg
fiadds
jnp
icebp
mov
cmp
mov
or
gs
dec
cmpl
jge
fildll
mov
adc
jnp
or
fcoms
inc
xor
test
ja
fildl
lods
push
xchg
or
xchg
sub
pop
jg
mov
dec
outsl
paddsb
andl
add
lea
jo
jb
test
jl
lret
fadds
xlat
inc
sbb
mov
pop
lcall
repnz
add
push
jbe
sub
sbb
in
fbstp
dec
js
mov
gs
testl
test
setbe
aaa
mov
xchg
xor
adc
adc
test
decb
jg
xchg
pop
fsubrs
or
xchg
fisttpll
push
mov
and
adc
ret
rolb
jl
push
fldenv
xchg
rclb
or
or
shrb
inc
sti
xor
mov
clc
inc
clc
shll
push
sti
sahf
fcmovbe
jae
and
push
push
xchg
loope
fistl
jmp
insb
ja
xor
dec
and
cmp
addb
adc
jle
and
pop
icebp
scas
dec
in
faddl
hlt
out
sarb
sbb
jg
out
call
ror
movsb
cli
fs
mov
sahf
xor
mov
aaa
or
test
sbbb
add
mov
inc
mov
add
or
sbb
mov
fs
xor
jb
and
cli
push
and
add
push
je
mov
cltd
or
mov
pop
loop
lods
je
xchg
pop
inc
mov
mov
pop
cmp
push
push
sbb
jne
add
mov
mov
add
lock
push
notb
push
ret
ss
pop
push
sub
xchg
or
push
insb
mov
aas
add
push
rolb
or
in
push
dec
inc
ljmp
mov
dec
int3
sub
sbb
sub
pop
sbb
push
icebp
outsb
lea
mov
rorl
xor
add
cld
push
js
adc
cwtl
add
aas
fcmovnu
add
ret
leave
push
jne
int3
cmpb
nop
jo
sbb
js
and
inc
fidivs
push
imul
adc
mov
lock
hlt
js
inc
add
adc
jl
pop
outsl
mov
and
and
dec
push
faddl
les
cmp
loope
aas
xor
adc
xchg
push
loopne
les
ljmp
and
addl
inc
xor
test
cs
int3
ret
sbb
les
mov
clc
inc
mov
add
enter
xchg
xchg
lods
test
add
loop
add
mov
pop
adc
pushf
paddb
xchg
jb
push
sub
push
cld
dec
int3
push
rolb
mov
push
pushl
popf
mov
fs
in
daa
dec
repnz
inc
add
sbb
mov
mov
jle
add
sub
jge
pop
mov
mov
aas
xchg
xor
jns
mov
int3
or
rorb
cli
ljmp
pop
or
pushf
jp
or
xchg
data16
pop
mov
shrl
shr
mov
add
mov
movsb
or
test
inc
cmpsb
pop
ficompl
pop
clc
in
dec
inc
lock
pop
ljmp
add
add
dec
test
test
das
cli
xorb
mov
pushf
insb
add
call
mov
shll
add
mov
subl
pop
inc
dec
inc
mov
jne
mov
popa
jl
pop
int
cmp
mov
cmc
xchg
jmp
inc
ljmp
cmpsb
and
mov
mov
mov
fildl
ret
ljmp
pop
pop
std
add
aaa
incl
mov
add
inc
adc
lea
es
or
daa
add
jp
xor
xchg
jge
cmp
jnp
test
push
dec
and
push
outsl
mov
cs
aas
js
push
inc
hlt
inc
pusha
adc
ljmp
scas
sub
outsb
push
push
ret
add
inc
ja
or
sbb
jnp
xor
dec
inc
popa
add
dec
pushf
std
sbb
testb
sbb
push
or
pushl
push
or
xor
or
sbb
test
icebp
mov
inc
xchg
add
in
pop
sbb
dec
jle
mov
movsb
push
int3
aaa
mov
add
popa
cwtl
stos
mov
call
pop
ja
and
out
mov
cmp
pop
xchg
jge
adc
pop
inc
xor
scas
icebp
jmp
add
and
pushl
push
jo
fbstp
pop
adc
or
jb
leave
lea
ljmp
jp
rorl
test
push
sarb
xor
scas
jne
mov
ds
mov
addb
sbb
nop
or
aam
push
das
sarb
lods
push
cmp
lea
mov
mov
or
mov
mov
mov
shlb
add
ficomps
and
inc
aam
faddl
add
dec
les
sub
aam
ljmp
call
add
pop
je
mov
add
mov
aam
jmp
and
dec
mov
xor
out
les
dec
fisubl
mov
repnz
and
or
lock
repnz
add
add
sqrtps
mov
push
mov
push
jo
int3
bound
mov
loop
push
cmp
in
loopne
cmp
cli
shll
cmp
jl
testb
or
in
fcoms
xor
add
jg
xchg
dec
xchg
push
pop
lret
or
sbb
cmp
ret
jb
sub
adc
aaa
lea
jge
lret
sbb
aad
jno
xor
js
or
inc
push
shrb
and
cld
push
enter
cmpl
push
bound
cmp
test
push
adc
xor
les
xor
mov
adcl
sbb
loopne
rol
jo
sbb
xor
sub
scas
scas
xorl
and
mov
pop
add
and
jp
call
rcrb
scas
pusha
outsl
ficoml
dec
aaa
inc
push
loopne
xchg
jge
add
push
mov
aaa
cs
in
cmp
sub
aam
adc
psrad
sub
or
jne
mov
push
call
stc
rorl
cld
sub
add
xchg
xchg
rcr
inc
movl
fistl
call
xor
out
sub
jno
adc
lock
lds
mov
or
or
push
jg
pop
xchg
pop
cwtl
sub
fimuls
xchg
mov
jmp
or
or
mov
les
adcb
push
or
das
mov
and
mov
fsubrs
pop
sbb
xchg
mov
lea
mov
out
push
adc
lds
add
xchg
imul
jo
std
or
jbe
xor
and
mov
int3
dec
notb
inc
mov
enter
test
add
sub
mov
cmp
loopne
push
fbstp
inc
leave
mov
xor
sub
inc
gs
mov
ljmp
push
sbb
jg
push
add
call
lods
mov
jne
int3
roll
test
aad
mov
sub
sub
sbb
mov
xor
call
jg
aad
daa
and
push
and
cmp
mov
push
cmp
mov
dec
in
jne
pop
nop
ss
lret
mov
mov
je
lods
test
xor
fldl
sarb
dec
adc
mov
inc
add
fcoml
pop
movsb
push
add
adc
cmp
movsb
stos
pop
or
testb
xchg
enter
sbb
mov
xor
inc
dec
pop
jmp
xor
cld
cmp
test
dec
inc
inc
pop
pusha
adc
sub
sarb
das
xchg
jle
inc
int3
int
push
adcb
adc
outsl
xor
mov
pushf
sbb
jbe
xlat
loopne
pop
clc
jne
adc
ret
or
sti
lods
pop
mov
into
push
int3
shlb
xor
mov
es
pop
je
xor
pusha
xor
cltd
sbb
bound
jns
jp
rcrb
push
pop
mov
fcompl
in
rolb
xor
lea
mov
lea
loopne
xchg
les
iret
dec
jle
hlt
fwait
sub
cmp
clc
data16
insb
in
adc
push
push
dec
leave
das
js
mov
test
mov
rcrl
cmp
cmp
xor
and
das
jb
call
movl
int3
sgdtl
enter
enter
ss
pop
jl
loop
aaa
movsb
push
scas
int3
fdiv
sbb
push
orl
sbb
pop
pop
imul
mov
ret
test
add
ss
vpcmpeqw
pop
out
orl
aas
in
mov
adc
loopne
js
pop
pop
call
ret
push
xor
sub
stos
stc
pop
pop
rclb
or
mov
add
inc
push
pop
pop
rclb
dec
cmpsb
jle
lret
xchg
mov
cwtl
out
push
test
pop
adc
fstpt
pop
sbb
gs
cli
pop
ds
shlb
adc
movsb
arpl
jo
mov
xchg
std
jp
xor
pop
mov
aam
add
addb
cs
pop
pop
imul
inc
add
add
pop
add
cmp
lret
push
xchg
test
jbe
pop
clc
jmp
xchg
test
jmp
sbb
sub
mov
popf
or
inc
arpl
test
or
mov
test
pop
cmp
ret
jle
cmp
add
sahf
jbe,pn
jle
rolb
andl
inc
add
jp
sbb
cmpsb
jl
sti
pop
sub
xchg
mov
xor
sbb
cmp
incl
add
jmp
and
inc
int3
ljmp
inc
and
call
and
jb
pushw
hlt
pop
inc
aad
add
js
pop
cmp
decl
mov
lcall
in
shrb
shrb
je
cwtl
mov
jnp
sbb
pop
add
imul
insb
fsubrl
fnsave
push
shlb
mov
add
jmp
pop
push
mov
jmp
fisubl
daa
sub
pushl
cmp
push
or
mov
dec
push
or
jp
fs
push
and
xor
fs
mov
out
sub
loopne
pop
jns
cmp
mov
mov
ljmp
and
lods
push
mov
or
mov
adc
or
or
dec
pop
aam
adc
or
xchg
add
mov
pop
adc
jg
dec
and
cmp
and
or
mov
jo
mov
rclb
add
pop
add
mov
ret
jbe
call
sbb
pop
outsl
push
xor
ss
cmp
hlt
sub
in
imul
xchg
mov
jl
add
sbb
add
pop
push
jne
jb
mov
mov
inc
subl
adc
cmc
pop
pusha
lsl
ret
push
dec
in
enter
mov
mov
push
inc
jmp
pusha
aad
adcl
push
inc
ret
cmp
mov
rcrb
outsl
shlb
or
jae
cld
mov
mov
xor
xchg
loopne
loop
sub
cmpb
insb
in
dec
enter
push
inc
adc
sub
inc
push
aam
mov
and
clc
cmp
loopne
loop
push
inc
mov
imul
test
jb
mov
xor
movsb
xor
push
pop
mov
repnz
sbb
loope
stos
rsqrtps
mov
xor
add
jbe
stos
dec
push
add
mov
ds
out
aad
loope
testb
and
cmpb
or
rolb
dec
mov
pop
add
mov
push
mov
xor
shlb
loop
into
outsb
int3
mov
fsubrs
cmpsl
jbe
mov
hlt
pop
pop
mov
or
mov
in
out
inc
cmp
out
xor
mov
mov
inc
in
incl
push
mov
mov
sub
rorl
jle
cld
mov
xchg
adc
loopne
jae
pushf
test
xlat
push
cmp
shlb
mov
sub
push
pop
sub
dec
xchg
mov
pop
mov
movsb
insb
mov
xchg
push
mov
test
mov
or
fiaddl
loopne
data16
xchg
jp
jno
stos
call
mov
and
push
or
into
add
aas
push
je
adc
jg
ret
call
shlb
fwait
les
dec
jne
add
int3
test
fisubrs
adc
add
fstps
adcl
ss
cld
jmp
iret
add
cmpsb
or
sarb
cli
test
push
mov
push
cmpsb
sbb
jo
xor
or
adc
pop
push
add
or
inc
dec
push
jns
jb
out
je
adc
insl
aam
idivb
and
sub
sbb
inc
fwait
xchg
test
adc
sub
adc
push
js
cmp
and
je
push
fidivrl
std
sub
mov
push
xorb
jge
nop
rolb
add
test
inc
mov
cmp
or
xor
mov
into
lock
ss
pop
and
cmp
cmp
mov
sbb
xor
mov
pusha
add
stos
cmp
push
repz
inc
leave
ja
xor
test
les
sbb
or
cmp
inc
xlat
fildl
push
mov
sbb
js
sub
pop
scas
inc
mov
jb
jle
inc
dec
repnz
xor
icebp
and
mov
fsubrs
cmpsb
mov
nop
jp
and
popa
sub
push
or
sbb
lods
popl
and
add
hlt
adc
and
out
push
scas
insb
mov
jg
push
push
dec
inc
fcoms
adc
and
lea
sbb
pusha
pop
dec
mov
xorb
and
xchg
lret
stos
test
pmullw
inc
push
push
test
sbb
mov
mov
sarb
or
inc
std
incl
push
sbb
ljmp
lret
inc
add
mov
jne
fadds
fwait
loop
out
xchg
pop
rcl
jg
sbb
mov
inc
jecxz
lds
cs
push
cmp
leave
mov
cmpsb
push
scas
clc
sub
cmp
incl
cmc
xchg
xchg
int3
rclb
je
xor
aas
pop
inc
cli
dec
lods
sbb
adc
ja
ret
inc
movsb
mov
xchg
mov
incb
add
sub
mov
clc
sub
mov
and
add
jbe
stos
into
fmuls
sbb
pop
push
push
jle
in
outsb
mov
xchg
sbb
mov
xchg
mov
push
mov
pop
aad
add
lret
or
pop
in
mov
xor
loope
fidivrs
adcl
clc
je
push
push
bnd
mov
push
adc
test
fcoms
test
xor
adc
cmp
outsb
lret
fs
cmp
or
imul
sub
std
push
jecxz
cmp
and
cmpl
mov
mov
enter
roll
add
out
ficoms
gs
mov
cmp
mov
mov
jmp
and
push
push
push
mov
loopne
push
shrb
lock
lock
incl
xor
mov
dec
push
shll
inc
adc
int3
jb
scas
add
add
push
in
fs
dec
push
fs
xchg
mov
sbb
pop
sbb
dec
cmp
pop
adc
enter
push
or
fmull
xor
push
int3
mov
adc
pop
lock
jle
addb
mov
idiv
adc
push
orb
pop
lock
outsb
mov
mov
je
jp
inc
push
adc
cld
dec
inc
mov
push
jg
add
pop
fs
add
negb
dec
bound
out
lret
gs
pop
mov
mov
out
sub
add
sbb
xor
or
addl
mov
insb
and
add
je
fmuls
cmp
xor
out
adc
out
gs
xor
or
aam
cmp
outsb
aam
test
and
pop
ficoms
cmp
decl
movsb
add
fldt
mov
sub
jbe
insl
inc
shrl
aam
test
incl
add
mov
sbb
outsl
fiaddl
adc
add
inc
push
stos
lcall
and
ret
add
mov
pop
add
xor
pop
jne
call
add
jg
cld
cmp
rolb
push
mov
inc
jl
inc
loop
gs
test
push
jmp
jle
cli
mov
aaa
in
mov
xchg
and
cli
iret
movsb
lahf
cmp
lock
ds
pop
push
int3
stos
bound
adc
sbb
sarb
incl
pop
jne
add
cmp
adcb
adc
xor
pop
cmpl
adc
sub
decl
xor
adc
call
test
cli
push
adc
cld
incl
adc
sbb
addb
loopne
mov
fwait
enter
hlt
loop
les
push
add
sbb
add
fwait
xor
xchg
add
outsb
ja,pn
sub
or
inc
lds
pop
add
int3
nop
add
lods
push
cli
pop
sbb
xor
pop
hlt
jae
outsb
cld
push
push
mov
icebp
fwait
inc
lock
or
pop
add
push
add
add
add
popa
or
pop
lcall
fdivl
mov
add
loopne
mov
sar
in
push
cmpsl
icebp
xchg
and
out
push
lea
jo
sbb
jae
jo
cli
in
out
data16
jg
repz
mov
repnz
or
push
lea
int3
xor
cmpsb
pop
xor
push
lock
adc
aam
mov
cmc
sbb
add
xor
ret
mov
sbb
jge
push
cltd
stos
cld
cmpsb
js
add
mov
fsubr
mov
cmp
xchg
icebp
add
test
add
xor
insb
jne
jbe
std
imul
fs
sbb
add
stos
ljmp
call
imul
inc
mov
jge
mov
or
jg
or
xor
cmpsb
movsb
mov
cmc
pop
icebp
xchg
mov
inc
lock
fcoms
lock
xor
mov
aad
inc
dec
push
push
mov
add
add
mov
lcall
mov
popa
movl
push
mov
dec
jne
les
sbb
sbb
inc
inc
test
je,pn
or
push
popa
or
push
add
jne
sbb
mov
mov
dec
push
fstpt
out
mov
dec
mov
mov
xor
shrl
mov
add
push
push
nop
ljmp
jge
fimull
push
es
stos
repnz
test
jle
pushl
or
sub
add
int3
add
or
ret
cmp
popa
xor
inc
push
test
fists
mov
jmp
enter
imul
popa
je
mov
mov
fs
sbb
ljmp
leave
fdivs
mov
repz
mov
dec
dec
ds
xor
pop
push
es
cmp
cltd
xchg
pop
pop
jbe
nop
inc
mov
inc
lods
pop
xor
jl
loopne
sub
in
push
push
roll
fwait
aam
or
mov
mov
mov
xor
or
cmpsl
or
dec
add
inc
ret
fsubl
pop
adc
inc
cmp
xor
imul
push
or
cld
push
lods
dec
jne
das
mov
jmp
mov
outsb
dec
punpcklwd
std
movsb
testl
xchg
cli
pop
or
loopne
lea
fisubrs
je
sub
loop
je
repz
and
pushl
shll
mov
push
andl
pop
sbb
inc
dec
insb
out
mov
inc
jg
dec
adc
jns
mov
or
lahf
pop
test
loopne
hlt
or
jge
mov
outsb
pusha
dec
jmp
lods
inc
mov
push
inc
lods
outsl
test
lret
or
loopne
add
xorl
dec
roll
and
ljmp
mov
js
loopne
push
jg
mov
subb
loopne
loope
and
rorb
cmp
cmp
clc
into
imul
jno
notl
xor
xorl
sub
mov
loop
fidivrl
fmuls
fs
push
add
mov
sub
or
test
xor
push
std
repz
ret
xor
fdivrs
loope
mov
mov
sub
or
push
cmp
mov
cmp
aam
aas
int3
in
add
add
sti
aaa
hlt
aad
loopne
pop
stos
sbb
mov
mov
out
cmp
addb
push
js
adc
mov
jnp
daa
cmp
pop
inc
jnp
dec
mov
lock
fbld
push
dec
push
popf
data16
sub
bound
insl
mov
icebp
aad
adc
mov
bound
jne
insl
add
or
add
xchg
pusha
cs
test
add
movsl
call
loop
cmpb
push
incb
ss
sti
mov
inc
add
clc
sbb
addb
and
sub
and
test
fisubrs
sbb
sbb
sti
cld
xlat
add
shrb
bound
cli
push
mov
ss
mov
int
leave
mov
shr
aam
xor
mov
in
je
adc
inc
pop
mov
mov
call
and
pop
por
sbbb
or
pop
push
adc
and
sub
mov
in
ret
push
jg
fucomi
add
incl
push
lods
sbb
mov
stos
xor
sub
mov
inc
insb
pop
dec
jge
lcall
jp
or
push
jle
nop
stos
sub
xor
rol
cmp
add
into
cmpl
xlat
cmp
jbe
mov
mov
mov
cmp
fbld
inc
addl
in
movsb
push
cld
fnstsw
push
inc
or
jne
adc
mov
xchg
fstps
test
xchg
sbb
mov
lods
mov
in
test
shlb
push
sbb
call
mov
test
cmp
pop
jne
mov
add
mov
add
xchg
mov
cmpps
dec
ret
stos
hlt
add
scas
dec
ret
inc
test
xchg
pusha
mov
pop
aam
shl
lea
add
push
imulb
xchg
and
es
and
mov
sub
les
dec
lods
push
adc
or
push
mov
add
movb
addl
lods
push
xor
daa
rcrl
data16
ljmp
adc
cld
pop
repnz
outsl
sub
fbstp
jle
cmp
test
mov
ja
loopne
push
adc
lea
shr
mov
fcmovnu
das
notl
pop
es
inc
push
bound
data16
lea
jp
xor
dec
pop
sbb
aaa
je
or
mov
pop
cli
and
jne
imul
cmp
cmpb
mov
mov
insb
xor
mov
push
mov
fstp
shll
stos
fmuls
gs
push
sub
or
push
je
data16
popa
inc
push
push
jmp
adc
int3
shll
shlb
mov
add
mov
or
cli
push
movsb
mov
dec
dec
ret
add
in
cmp
mov
add
and
add
inc
cmp
mov
incl
mov
cld
or
jecxz
fsts
adc
cld
shll
add
add
dec
into
clc
add
dec
loope
ret
mov
inc
mov
or
lea
jne
insb
push
out
ss
es
mov
fadd
stc
cmovl
mov
out
xor
push
pop
popf
mov
insb
pop
outsb
or
mov
pop
je
push
push
es
adc
pop
mov
call
lret
mov
pushf
xor
addr16
xor
mov
push
repnz
test
lret
fs
fwait
loope
dec
jbe
add
add
rdpmc
hlt
loopne
inc
push
or
pop
sub
push
mov
mov
xor
mov
mov
mov
mov
ficoms
cmp
push
stc
sub
add
jle
cli
mov
imul
pop
arpl
xor
fcoms
push
fs
push
in
add
or
or
mov
xor
loope
scas
inc
push
sbb
lcall
inc
outsl
dec
xor
push
mov
xchg
leave
int3
outsb
xchg
push
jecxz
aas
sbb
jo
testb
aaa
add
jmp
in
cmp
fistpl
std
mov
pop
test
sbb
cmp
imul
repnz
dec
data16
nop
push
sub
test
cmp
jno
sti
cld
push
or
sar
repnz
push
pushf
gs
test
outsl
cli
add
nop
inc
sub
jmp
mov
bound
cli
push
les
imul
cmc
shll
jg
aad
jo
or
call
aam
inc
orb
push
notb
pop
cli
and
and
mov
pop
sbb
test
mov
lock
lea
add
inc
xor
xor
add
mov
shlb
adc
adc
xor
icebp
cwtl
add
paddd
mov
push
mov
outsb
or
jmp
mov
call
fs
inc
sub
mov
xrelease
filds
inc
nop
int3
xchg
xchg
adc
push
add
stos
mov
cmp
inc
inc
cmp
dec
clc
xor
dec
push
rorb
push
sub
push
adc
inc
movsb
or
push
inc
out
pop
xor
pop
aaa
mov
xrelease
test
add
xor
cmp
adc
push
lret
sbbb
pop
icebp
addb
push
jle
outsw
push
loope
push
dec
or
hlt
xor
cli
mov
cmp
pusha
adc
pshufw
jb
scas
sub
mov
or
fucomip
in
aas
aam
mov
sbb
in
push
or
push
cmpsb
test
xchg
mov
cmp
or
pusha
call
inc
test
inc
push
sbb
aad
std
or
or
dec
add
insb
ja
adc
push
push
xor
or
out
or
jecxz
add
nop
add
lock
pop
insb
push
icebp
adc
cmp
rclb
inc
inc
pop
mov
cmpb
xor
test
test
sub
sarb
pop
shll
ret
inc
cmp
or
xor
cld
fwait
push
dec
mov
shll
cmp
mov
dec
std
mov
xchg
in
sbb
add
and
or
xor
outsl
push
jne
leave
decl
mov
jmp
jmp
pop
fwait
repz
xor
xor
cltd
stos
dec
jl
ljmp
imul
sbbb
lock
pop
dec
or
pushf
fdivl
or
js
sbb
xchg
rcr
ret
es
lods
sbb
and
push
jge
push
ljmp
jge
cld
sbb
test
ret
rorb
xor
nop
mov
test
push
inc
pop
fcmovu
jbe
add
pop
popa
or
xor
push
lret
das
inc
cs
mov
adc
loopne
push
imul
fcmovnb
call
sahf
push
mov
jecxz
into
and
les
cli
jecxz
add
push
mov
aas
cmp
ret
cmp
fimuls
ljmp
cmpsb
icebp
lahf
loope
push
push
shl
shlb
dec
ret
lock
call
xchg
int3
mov
jle
add
sbb
mov
pop
cmp
ret
loopne
cld
inc
add
inc
bound
icebp
int3
mov
add
fadds
pop
mov
pavgb
or
pop
sahf
inc
mov
jb
outsb
mov
loop
inc
ror
dec
dec
cmc
and
cmp
pop
pop
adc
scas
inc
je
mov
ret
hlt
inc
cltd
test
int3
jl
or
xor
sub
cmp
adc
inc
in
lret
daa
inc
test
or
pop
es
push
hlt
dec
cli
fimull
pushl
push
and
adcl
adc
inc
push
test
sahf
mov
aaa
aam
add
test
imul
ds
xor
jne
leave
lcall
sub
mov
push
imul
pop
inc
sub
add
cmp
sbb
ds
decl
fdivl
sbb
hlt
lods
lea
scas
cld
dec
loop
scas
jp
mov
jnp
xor
es
fidivrl
dec
xorb
add
incl
test
rolb
pop
dec
jp
rolb
ret
aaa
call
loop
cs
test
push
insl
xlat
add
testl
insb
sub
hlt
adc
push
ja
stos
and
data16
ljmp
loopne
pop
cmp
cli
push
pop
pop
push
push
sti
jbe
lock
mov
jne
scas
gs
inc
mov
ljmp
mov
xor
pop
jno
xchg
outsl
cmp
jmp
fldl
lea
loopne
and
adcl
insb
cmp
nop
sar
ja
or
inc
inc
push
inc
adc
lock
adc
or
orl
cwtl
call
popf
add
mov
pop
daa
aam
gs
adc
test
les
std
fldt
xchg
mov
stos
mov
or
cwtl
fidivrs
data16
adc
inc
xor
ret
mov
mov
pusha
sbb
out
loop
test
je
sub
ljmp
push
jl
int3
in
mov
push
mov
lods
subl
test
push
pop
fadd
and
loop
imul
mov
pop
aam
lock
fsubrp
cmp
sub
inc
rclb
mov
xor
mov
int3
mov
xor
fs
push
or
scas
mov
andl
xor
pop
aaa
pop
or
loop
arpl
push
fwait
pop
adc
in
push
jbe
cmp
cli
lods
loop
push
sbb
in
pusha
or
fstpl
dec
mov
mov
add
pop
adc
inc
push
mov
ljmp
aam
and
push
and
enter
and
dec
ljmp
cmp
add
sahf
xor
inc
xor
dec
or
je
ljmp
add
popa
jl
or
mov
cmp
lea
cmp
lcall
cld
jb
jmp
movsb
mov
shll
ret
mov
lcall
inc
es
add
call
mov
jl
inc
sbb
jle
inc
jl
push
jge
decl
mulb
mov
adc
push
test
daa
mov
sar
inc
mov
mov
xchg
mov
in
daa
movsl
dec
fcmove
incb
outsb
mov
imul
and
jno
dec
jge
add
ret
or
inc
cli
inc
movsb
xor
movsb
push
clc
cld
bswap
push
xchg
int3
aaa
lcall
cmp
sbb
fisttpl
aam
mov
loop
ret
jne
or
mov
ljmp
sbb
mov
push
outsl
jo
js
sti
pop
pushf
add
loopne
mov
arpl
mov
jle
out
dec
add
icebp
adcl
or
std
mov
push
jns
mov
sbb
push
mov
fisubl
lcall
add
jno
mov
xor
fldlg2
add
jne
jp
nop
dec
or
cmp
dec
inc
mov
xchg
test
or
sahf
fs
push
sub
pop
repnz
add
push
inc
or
push
dec
sbb
xor
cld
add
push
jmp
pusha
and
adc
jge
sub
mov
js
std
push
call
pop
loope
and
into
sub
push
ret
push
jno
push
mov
hlt
neg
fsubs
js
push
xor
clc
mov
scas
mov
dec
test
xchg
stos
pushl
enter
dec
jmp
push
jne
scas
jns
pop
adc
xchg
xchg
add
sbb
or
lret
add
or
fildl
mov
sahf
fidivl
mov
aas
and
xchg
jg
add
mov
mov
mov
add
push
sbb
fsubrp
inc
adc
aad
jmp
pop
mov
mov
dec
notb
inc
sub
mov
mov
or
call
cs
arpl
sub
dec
pop
mov
movb
jge
inc
push
mov
pop
push
and
test
cmp
pop
jg
or
or
nop
cmp
test
js
xchg
cmp
xchg
xchg
fcmovu
jb
add
fsubs
pop
les
push
orb
adc
test
pop
xor
int3
dec
pop
pop
test
arpl
inc
jp
or
sub
or
pusha
sbb
rolb
push
mov
push
xchg
jae
xchg
sbb
sbb
xchg
lock
or
leave
invd
ficomps
insb
aam
sahf
mov
aam
push
outsb
in
into
add
addb
mov
jl
addb
cmp
add
or
sbb
movsb
test
fiaddl
in
test
clc
sbb
or
cmp
rorb
adc
sbb
mov
loop
nop
cwtl
sbb
inc
mov
loop
mov
pop
add
stos
jo
nop
mov
jae
ficoml
loope
shlb
lret
insb
test
sbb
inc
push
cmp
outsb
imul
inc
inc
cmp
in
cmp
outsb
out
hlt
into
les
inc
add
xor
outsb
inc
inc
or
out
mov
pop
outsl
cli
into
fmuls
iret
pushl
ljmp
add
dec
adcl
push
clc
inc
push
xor
ficompl
pop
mov
scas
test
int3
mov
mov
jo
pusha
or
cli
and
inc
les
lods
into
push
mov
lock
sub
fdivrs
cmp
adc
scas
xchg
mov
enter
xchg
mov
jne
mov
std
inc
stos
in
inc
insb
adc
insb
shl
jne
pop
pop
mov
pop
jae
or
test
pushf
cmp
lods
lods
sub
sbb
jo
inc
sbb
bound
sub
adc
pop
mov
inc
inc
adc
inc
inc
aas
mov
mov
mov
cmp
es
call
mov
or
mov
cli
outsb
dec
clc
test
lods
leave
push
cmp
vphaddubw
movsb
mov
ret
mov
out
or
inc
jo
mov
ret
data16
cltd
or
cmp
sbb
incl
call
jmp
push
lcall
call
scas
dec
cli
inc
test
aad
std
mov
add
mov
inc
repnz
adc
rcl
mov
bound
in
aaa
idiv
add
jnp
ret
xor
arpl
mov
mov
pushf
rcl
xchg
fildl
rolb
ret
mov
scas
mov
mov
outsb
shrb
pop
add
jae
stc
shl
dec
mov
cmp
rcrb
pop
outsb
jle
mov
mov
movsb
ja
jb
or
adc
jno
adc
or
pop
mov
std
sub
cli
addb
push
rclb
fsubs
call
adc
inc
add
loop
adc
sar
scas
and
lock
cmp
mov
cmp
cld
enter
sbb
ja
sub
data16
pop
enter
test
xchg
ret
inc
jl
jb
and
test
jge
add
pop
xor
popf
and
movb
jl
push
in
add
mov
xor
sbb
jne
push
aad
sbbb
jne
mov
pushf
mov
out
jg
jmp
mov
pop
outsb
lock
mov
loopne
xor
sahf
fs
in
jbe
mov
fiaddl
push
pop
inc
hlt
movsl
test
call
aam
mov
into
xor
jne
ss
pop
jae
cmp
adc
rclb
pop
leave
push
pusha
add
or
insb
cmp
mov
cmp
pop
adcb
xchg
jbe
insl
outsb
mov
nop
in
xor
jecxz
xor
adc
popa
or
cmp
pop
inc
out
xor
call
mov
push
in
test
push
call
daa
mov
sub
adc
push
cli
push
adc
dec
or
fwait
push
sahf
leave
orb
mov
ud2
mov
cli
cmpsl
jb
mov
lds
int3
inc
mov
mov
or
inc
pusha
pop
xchg
call
loopne
add
mov
mov
sub
outsl
mov
dec
xchg
lcall
mov
cmpl
outsl
cld
ss
inc
rorb
xor
outsb
mov
inc
icebp
lea
mov
push
and
mov
inc
mov
or
push
dec
jnp
aas
mov
add
adc
fdivrs
mov
aad
pop
and
mov
or
pop
popa
rclb
mov
push
notb
test
dec
orl
or
cmp
pop
xchg
xor
pop
js
inc
inc
mov
subb
call
and
cmp
inc
popf
mov
mov
mov
xchg
jecxz
mov
or
pop
cmp
cmp
xchg
sbb
int3
clc
ss
jb
xchg
pop
js
sbb
jne
jmp
adc
dec
pop
add
cmp
sub
or
mov
push
movsl
ljmp
add
out
ud0
inc
or
cld
pop
sbb
dec
add
add
pop
movsb
lahf
add
adc
das
mov
mov
xor
cmp
jo
je
or
insl
mov
cld
in
sub
add
adc
inc
in
jl
daa
cmp
icebp
jmp
or
mov
push
fstpt
sbb
inc
cs
clc
cmovle
es
arpl
test
push
cmp
mov
mov
cmpb
sti
pusha
pop
push
sub
shlb
dec
mov
loope
fiaddl
roll
push
or
mov
pop
mov
jp
in
mov
cmovb
add
shlb
rolb
lock
in
jne
push
std
or
xchg
cmp
je
xor
ret
mov
loop
shrb
sub
jbe
pop
dec
fisubrl
inc
cld
imulb
cmp
add
js
jo
xlat
sbb
inc
js
add
inc
dec
mov
loopne
andb
loop
or
fcmovu
xchg
pop
aaa
loop
ret
adcl
cmpb
decl
leave
and
or
sbb
cmpsb
mov
xchg
jae
inc
gs
in
fsubrs
pushl
xchg
push
jo
dec
stos
and
mov
cli
dec
sbb
into
scas
inc
push
loop
jge
lock
cmp
pop
pop
mov
hlt
add
or
push
mov
push
outsb
andl
stc
mov
mov
add
out
xor
cs
fidivrl
xchg
clc
xchg
ret
data16
inc
dec
movsb
repnz
cmp
pop
pushf
mov
lahf
hlt
pop
mov
int3
pop
out
jbe
mov
inc
xchg
dec
push
jle
mov
incl
cld
jne
loopne
rolb
or
movsl
mov
push
addr16
xor
shlb
and
pop
fprem
clc
mov
cmp
mov
add
xchg
push
sub
push
adc
cmc
outsl
mov
js
sub
xchg
cwtl
xor
sbb
xchg
mov
nop
jb
mov
adc
fsubrl
inc
and
jg
je
std
xlat
adc
push
push
insl
sbb
push
mov
adcl
jns
cld
push
lret
fisttpll
mov
hlt
lods
enter
or
inc
and
pop
add
sbb
add
test
testb
in
loope
add
out
cmp
rolb
inc
push
aaa
push
rolb
icebp
idivb
inc
jne
mov
cmp
ds
lret
fsubrs
hlt
sub
sbb
dec
fcmovbe
sub
or
cmp
jbe
pop
outsl
pop
mov
push
repz
in
aam
jmp
mov
mov
push
loop
hlt
nop
jne
pop
jmp
ss
inc
jae
ret
xor
es
aaa
loopne
data16
shlb
push
or
notb
fidivrs
mov
jae
in
push
push
push
xor
adc
roll
adc
or
mov
add
xchg
outsb
fcoms
cmp
call
loopne
inc
push
jge
dec
ret
add
test
hlt
xchg
ret
sbb
push
lods
mov
call
clc
xor
inc
shl
and
jecxz
adc
inc
and
cmp
and
mov
push
fiadds
loopne
add
cld
jmp
shlb
inc
ja
pop
daa
or
movaps
dec
ja
jno
hlt
mov
orl
mov
out
mov
pop
out
add
mov
call
push
aas
cld
test
push
jl
cltd
rcrl
push
clc
inc
mov
cmc
sbb
or
scas
js
pop
inc
movsl
mov
testb
mov
lods
jg
clc
jo
fs
mov
adc
push
adc
clc
lods
lret
jno
add
mov
repz
decb
mov
stos
sub
add
xchg
mov
ficompl
clc
xchg
lcall
ljmp
stos
les
add
and
lahf
dec
mov
test
inc
scas
sbb
in
phsubd
mov
xlat
adc
mov
mov
cs
dec
add
rcll
clc
mov
mov
int3
test
push
xchg
mov
popa
addb
addl
pop
faddl
sbb
je
fstl
xor
adc
in
fbld
or
adc
inc
dec
jo
mov
push
ja
mov
dec
or
and
js
sbb
adc
mov
fcomps
fldenv
call
test
sbb
or
aam
loope
cmp
je
ss
push
dec
jecxz
scas
add
adc
cmpsl
or
lret
xor
or
mov
ret
adc
jmp
push
sub
outsl
or
aad
adc
inc
xchg
ret
dec
lock
xchg
repnz
insl
fs
add
cmpb
lods
test
and
test
jb
fidivs
push
pop
je
jno
out
test
sbb
push
adc
and
xlat
in
pop
mov
inc
aam
lcall
jae
es
push
cmpsb
mov
inc
sub
addl
rorb
mov
in
aam
inc
lock
sub
push
mov
orl
inc
fisubrs
xchg
add
imulb
xor
clc
mov
add
mov
adc
or
addb
push
aam
in
xor
and
repz
data16
push
mov
adc
push
adc
shrb
xchg
jnp
lret
and
mov
mov
adc
add
xchg
add
lock
rcrb
and
popa
and
mov
cmp
mov
std
add
hlt
out
cs
xor
mov
icebp
pop
pop
test
and
outsb
mov
mov
mov
dec
sarb
ljmp
add
push
adc
jg
lea
cmp
addl
inc
add
or
lock
in
call
movsl
dec
icebp
test
leave
pusha
test
jbe
add
mov
insl
or
aaa
inc
adc
ds
cmp
mov
sbbl
loope
lock
leave
mov
daa
push
test
push
out
xor
add
loope
mov
loop
call
shlb
sub
adc
push
pop
std
push
sbb
cmc
cmp
lret
inc
mov
add
loop
testb
pop
sbb
je
das
shlb
xor
inc
arpl
jle
dec
xor
fbld
xor
add
aas
add
mov
cld
cld
or
loopne
nop
insb
push
mov
mov
fisubl
or
and
sbb
or
mov
or
ret
rclb
and
xor
data16
cmc
in
ret
sbb
mov
inc
clc
subb
sbb
and
adc
or
ficomps
xor
aam
out
int3
jb
lds
push
sub
scas
inc
imul
dec
inc
mov
mov
inc
add
adc
scas
icebp
adcl
es
mov
xor
pop
xor
add
adc
mov
sub
fistl
cmp
xchg
dec
pop
pop
test
jg
and
pop
xor
enter
xchg
xchg
faddl
stc
fbstp
dec
pop
jne
xchg
mov
or
adc
int
push
xchg
sti
jns
push
xor
jl
jle
rorl
xorl
mov
pushf
mov
mov
push
or
add
inc
add
push
movsb
add
fmull
and
repz
adc
test
loopne
jne
xchg
negb
stc
subb
cmp
mov
sahf
push
paddq
ds
inc
or
xchg
out
je
xor
int3
jnp
dec
add
mov
dec
mov
inc
push
fistpl
divl
les
or
rclb
mov
decb
aad
jmp
fs
sub
sbbb
clc
or
ret
inc
andb
mov
cmp
pop
mov
int3
js
inc
xchg
outsb
fistpl
pushf
lods
push
add
lock
cld
mov
in
repnz
push
pop
adc
xor
pop
add
mov
sarb
fdivl
dec
mov
rcll
xor
in
or
out
cmpsb
add
jl
jl
add
push
inc
enter
add
jge
fiadds
xchg
ficoml
and
shrb
push
adcb
ret
xchg
cmc
int3
imul
add
xchg
fidivrl
or
loop
addr16
mov
cmp
shl
roll
and
push
adc
push
test
gs
cmpsb
outsb
outsb
fnstcw
aad
mov
in
call
pop
jle
nop
scas
mov
cmp
add
xor
or
adc
ret
dec
jmp
movsb
lea
xor
jp
icebp
mov
jb
or
arpl
inc
add
add
push
pop
je
sbb
popa
cmpsb
push
pop
push
icebp
inc
mov
mov
mov
push
cli
fwait
sbb
mov
mov
fsubs
dec
aam
mov
adc
adc
xor
push
push
outsl
add
push
xchg
mov
mov
subb
mov
pop
cmp
outsl
adc
dec
hlt
jmp
fisttpl
std
mov
inc
push
aaa
sub
or
mov
adc
inc
sub
in
rcll
sbbl
shr
sar
add
or
int3
incl
hlt
mov
sahf
rcr
pop
push
and
inc
nop
shr
les
and
or
push
inc
lods
aam
cmp
movb
ja
pop
lcall
push
xor
cmp
dec
call
push
repz
add
pop
push
or
inc
inc
mov
inc
push
pop
and
inc
int3
xor
cmp
ret
cmp
xchg
inc
ret
mov
pushl
jmp
dec
shlb
lea
xor
adc
push
inc
fwait
addb
push
add
scas
movsl
and
push
push
jbe,pt
dec
dec
das
dec
lcall
scas
jp
sti
in
push
push
inc
je
mov
pushl
jp
jne
sub
push
es
fimuls
filds
push
inc
inc
cmp
add
rcrl
rorb
push
loop
loopne
cmp
or
dec
push
imul
xchg
adc
or
rcrb
icebp
mov
adc
cmpsb
cli
xchg
lea
and
dec
les
mov
out
lock
add
push
mov
mov
xorps
mov
rclb
in
hlt
testb
test
loop
ret
jo
adc
mov
cs
orps
push
icebp
pop
ljmp
enter
xchg
movsb
xor
push
insl
dec
lea
add
in
dec
fs
lock
insb
and
addb
jb
cs
fisubrs
out
mov
jl
adc
clc
xor
jno
sbb
int3
or
mov
jmp
lret
data16
int3
mov
dec
shrb
mov
add
and
lods
mov
je
add
push
gs
or
into
adc
add
xchg
mov
fucomi
push
fadd
pushl
mov
and
enter
push
hlt
outsb
sar
lock
jns
jbe
add
mov
sar
sbb
rolb
sub
js
divb
mov
sub
aas
or
sub
jno
adc
int
cmp
and
ret
add
xchg
mov
sbb
pusha
dec
push
push
adc
jg
rclb
scas
jnp
jg
dec
dec
push
mov
icebp
adc
sub
jo
sub
cmpsb
sub
and
inc
mov
push
pop
inc
ret
sub
pop
fdivl
add
xor
xor
or
rcrb
call
inc
lea
in
je
loopne
mov
dec
xor
and
clc
xchg
jmp
pop
lea
push
aam
mov
mov
adc
mov
jmp
int3
and
xor
xor
pusha
mov
stos
and
jne
mov
outsb
mov
inc
jmp
xor
js
adc
xchg
xor
mov
testb
add
inc
push
test
popf
or
bound
adc
or
pop
fnsave
and
lcall
cmp
push
std
sub
ljmp
sub
dec
loop
gs
notb
mov
pop
xchg
test
repz
jmp
adc
pop
mov
add
cmp
cwtl
add
call
cli
cli
push
mov
push
xor
outsl
sub
scas
add
cmpl
fidivrl
movnti
xor
data16
fiadds
test
fcompl
sarb
in
inc
sbb
lock
mov
push
rol
lea
mov
les
cmp
mov
or
mov
mov
cmc
fistps
dec
ret
sub
mov
movsb
incb
pop
jb
cli
call
push
jb
fdivs
push
por
mov
mov
mov
nop
or
sub
movsb
lea
xchg
add
mov
inc
jbe
sti
andl
shlb
incl
cwtl
xchg
call
pop
push
mov
and
jbe
inc
sub
inc
shrb
imul
ds
adc
and
repnz
xchg
inc
and
nop
pop
mov
cli
pop
add
adc
adc
pop
test
push
mov
and
add
in
add
in
pop
adc
add
inc
dec
and
cmp
pop
fwait
and
cmc
into
jne
mov
lods
psrlq
fcoml
add
push
cli
and
lock
sarb
shr
cmp
add
nop
or
inc
push
rorb
sub
and
mov
daa
push
in
jmp
cld
stc
cmp
daa
sbb
hlt
pop
add
in
and
fists
call
xchg
lcall
dec
mov
test
mov
loopne
stos
dec
les
out
jl
hlt
add
cwtl
pusha
jge
cmp
sbb
call
mov
inc
call
ret
or
adc
shlb
or
push
add
push
dec
int3
mov
stos
add
mov
les
cmp
cld
pop
inc
clc
cmp
outsb
pop
es
mov
lds
inc
cmp
sbb
mov
or
xor
inc
vpsrad
sbb
mov
mov
cli
mov
shr
dec
xor
jne
add
jo
jne
mov
cmp
mov
into
mov
xor
pop
cmc
mov
or
push
cmp
aas
mov
loopne
mov
jo
icebp
mov
dec
cld
mov
pop
jne
ret
icebp
cli
js
push
sbb
shrb
mov
xchg
shrl
mov
add
stos
jecxz
lods
push
sbb
cld
outsl
fbstp
jb
cli
push
shlb
shrl
add
inc
inc
push
leave
mov
and
cmp
mov
cwtl
sbb
pushf
dec
jge
mov
sbb
push
and
or
loopne
and
addb
mov
fs
inc
mov
xor
or
mov
test
pop
jbe
jo
lock
ret
adc
das
sbb
adc
insl
decb
sub
je
mov
loop
xor
je
jle
icebp
dec
adc
adc
gs
push
jb
fiadds
popa
repnz
cmpsb
aas
or
or
fsubrl
jne
subb
add
int3
push
lods
push
add
or
cmp
inc
nop
mov
jl
pop
push
movsl
lods
dec
jno
sbb
add
or
in
or
es
pop
hlt
shll
ret
insl
mov
pop
inc
cmp
xor
cmp
inc
push
inc
push
mov
pop
popa
cwtl
and
int3
mov
sub
es
cmp
dec
jl
mov
data16
add
add
xor
jp
and
fbstp
fs
aaa
sahf
cmp
xor
aam
push
mov
adc
sbb
repnz
mov
mov
jp
push
adc
add
movsb
rcr
popf
xchg
ficompl
jp
and
mov
add
and
out
lods
adc
mov
jle
fisttpl
mov
imul
decl
divl
dec
mov
lea
sub
jge
add
lock
push
mov
aaa
scas
js
test
nop
inc
pop
lock
sbbb
pop
outsl
cmpsb
aas
cmp
add
je
and
jae
push
push
inc
dec
mov
mov
mov
mov
mov
fildl
lret
or
fmuls
add
xor
pushf
mov
aad
pop
add
xor
clc
inc
mov
cld
jmp
push
inc
mov
iret
jl
adc
pushl
sbb
pop
mov
divl
or
adc
mov
jae
cvtps2pd
or
xchg
cld
or
ja
lea
fimull
clc
shrb
mov
push
push
loopne
push
mov
test
lods
add
lods
lds
dec
adc
or
lahf
adc
gs
xchg
clc
xor
and
pop
inc
enter
in
xor
push
mov
cmpsb
mov
mov
cmpsb
hlt
inc
pop
push
add
pop
jle
adc
push
mov
mov
clc
and
fs
mov
mov
pop
cmp
jle
mov
fcomps
call
pop
add
fsubs
icebp
adc
push
cld
mov
call
mov
inc
test
fadds
inc
fs
inc
add
push
cmp
mov
adc
in
adc
test
dec
in
xor
dec
push
aaa
lcall
push
je
ja
or
cmp
mov
mov
je
jno
out
ss
or
cli
incl
shl
pusha
add
gs
inc
and
mov
sbb
idiv
or
mov
mov
int3
daa
clc
mov
pop
xor
add
lea
call
mov
xchg
xor
push
std
pop
insb
ds
pop
mov
ret
les
in
lock
mov
and
push
mov
sti
incl
and
fdivl
call
mov
jmp
inc
dec
lcall
cmp
repnz
mov
jae
add
scas
testl
push
push
dec
add
gs
in
shr
repnz
pop
dec
in
fdivrs
pop
push
dec
sub
test
pop
adc
or
in
test
and
fnstcw
mov
fdivr
shrl
add
ljmp
sub
or
pop
lea
push
lods
mov
push
and
xor
nop
call
ja
es
push
sahf
or
xor
pop
hlt
mov
adc
loope
stos
movsl
mov
fnstenv
mov
jo
iret
dec
mov
aas
xor
insl
movl
call
scas
cmpsb
pop
into
sbb
pop
inc
pushf
add
mov
adc
sbb
cwtl
add
and
sbb
fidivrl
lcall
and
mov
pop
mov
adcb
pop
inc
movsb
add
adc
fdivs
pop
push
sbb
rsqrtps
cs
push
push
scas
dec
ret
xchg
lcall
in
mov
jbe
fildll
mov
shl
mov
popf
add
sbb
pop
sub
enter
pop
mov
push
xchg
dec
adc
inc
pusha
roll
mov
sub
mov
sarl
cmpsb
outsb
dec
in
pop
push
push
mov
cmpb
bound
popf
adc
jmp
sbb
push
cmp
lods
rcl
cmc
aad
push
xchg
pop
xorb
cmp
add
mov
add
xchg
add
xchg
ret
rcr
popa
xor
pop
xor
call
test
jmp
or
add
cs
cmp
xor
or
dec
add
fsubrs
add
cmc
lea
out
sbb
cld
pop
mov
and
pop
mov
adc
je
mov
cmpsb
addl
fs
push
push
mov
sub
add
jp
pop
lods
pop
scas
jne
inc
into
push
stos
jb
adc
ja
jp
adc
sbb
scas
push
mov
fs
fiaddl
add
xchg
inc
decl
insb
cmp
sarl
push
add
mov
add
pop
mov
dec
mov
std
mov
dec
fwait
ljmp
shlb
or
or
lea
test
daa
jmp
jmp
orb
shll
and
push
push
and
enter
mov
add
adc
sbb
inc
add
inc
lcall
mov
sub
popa
push
push
inc
jae
imul
test
leave
not
jp
das
push
fidivl
add
test
in
int3
mov
andl
adc
stos
loopne
or
clc
adc
sarl
lea
mov
cmc
scas
daa
outsl
js
imul
filds
leave
decb
mov
stos
test
cmp
mov
sbb
add
rolb
push
jbe
bound
fwait
lret
add
jg
loope
add
pop
loope
jne
or
pop
pop
leave
jnp
fcoml
repz
mov
call
xchg
pop
ss
in
mov
mov
mov
or
and
jo
mov
pop
shl
push
inc
mov
jge
sbb
xor
int3
cmp
scas
mov
inc
mov
cmp
outsl
mov
cli
mov
shlb
pushf
mov
xorl
incb
push
ss
fildll
lods
inc
aam
adc
call
andl
insb
fstp
or
cmp
shlb
subl
push
loopne
mov
js
mov
mov
popf
cmp
or
aas
ds
add
dec
xchg
rcrb
std
xlat
and
dec
cmp
inc
fs
in
je
ss
sbb
pusha
cli
push
lcall
mov
adc
das
lea
je
pushf
xor
or
pop
sub
cmp
xor
cmp
jb
loope
or
stc
xchg
and
add
lret
mov
or
push
and
jp
inc
sbb
push
push
ljmp
cmp
jo
mov
int3
add
ljmp
les
push
mov
sub
jne
mov
lea
adc
mov
out
mov
adc
push
gs
outsl
popf
idivb
inc
add
pop
jo
icebp
outsb
bound
into
xor
adc
mov
add
cld
test
mov
add
jl
js
cmp
test
or
push
dec
int3
ret
adc
es
dec
push
testb
dec
lock
fcom
repnz
push
decl
dec
je
aam
jbe
mov
jp
int3
addl
mov
fdivs
xchg
es
std
and
push
nop
mov
jb
nop
mov
icebp
dec
bound
push
dec
push
lcall
insb
stos
and
fidivs
incl
fwait
movsl
mov
test
lcall
mov
std
mov
pop
mov
test
mov
jge
call
mov
add
jo
fs
cli
push
test
roll
push
cmpb
or
cmp
xor
dec
xchg
mov
sarl
push
faddl
test
jo
imul
add
nop
bnd
push
jne
mov
push
nop
adc
lcall
xchg
cmc
mov
mov
or
in
add
or
movsb
fdivl
inc
fs
mov
cli
mov
cmp
jmp
shlb
mov
lods
ja
jmp
sub
and
cmc
cld
push
outsb
fistl
inc
cmp
movl
push
lods
cs
jb
mov
pusha
jge
push
pop
rclb
fsubs
out
inc
mov
pop
mov
fists
inc
mov
addl
in
sub
jmp
lods
or
sahf
push
pop
jmp
push
nop
push
mov
mov
pop
push
jmp
dec
inc
mov
dec
jbe
push
popf
xor
xchg
adc
decb
inc
movsb
dec
lods
ljmp
fcoms
xor
jne
lods
cld
incb
and
aad
das
nop
mov
and
add
sub
mov
ficoml
jecxz
add
and
mulb
push
sbbb
loop
add
adc
paddd
bswap
jmp
inc
cmp
pop
push
out
fdiv
stos
fmull
or
push
or
test
daa
mov
int3
jp
pop
lea
sarb
out
inc
call
std
fadd
jne
hlt
push
inc
and
xor
js
gs
push
cmp
mov
outsb
dec
adc
xchg
and
sub
xchg
add
mov
pop
jbe
and
bound
xchg
cmp
cs
push
cmp
repnz
fs
cmp
inc
or
and
push
mov
jne
pop
mov
xor
push
mov
jmp
pop
pop
fs
adc
dec
push
pusha
int3
arpl
addl
test
int3
mov
lret
fs
jg
pop
mov
add
subb
jmp
jo
mov
sub
mov
cmp
jne
cmp
adc
rol
sub
es
daa
mov
or
or
mov
add
pop
push
xor
or
dec
daa
mov
jbe
inc
sub
movsb
inc
push
xchg
mov
loope
cmpsb
fildl
xchg
hlt
mov
cld
adc
fucomp
pop
xchg
mov
outsl
testb
icebp
sbb
inc
push
mov
aaa
neg
popf
add
push
shr
rorl
pop
out
inc
jnp
dec
or
incl
inc
jb
add
scas
mov
loopne
or
mov
mov
mov
sbbb
cmp
dec
inc
call
adc
and
or
push
push
or
ret
push
shl
test
add
pop
sub
pop
orl
mov
mov
push
and
push
sub
int3
lea
out
mov
mov
mov
pop
sub
popf
xorb
xor
mov
xchg
adcl
scas
clc
dec
or
sub
push
rcr
add
cli
jg
mov
sbb
adcb
lock
aas
xchg
shrb
inc
test
loope
testb
adc
pushf
call
rcrb
hlt
fsubl
add
mov
ds
adc
dec
mov
inc
sub
in
les
fadds
pop
push
push
add
in
lea
add
xor
mov
pop
enter
pop
adc
shlb
jg
xor
push
gs
jne
or
ja
cli
cli
jg
fidivs
out
ja
xor
shlb
pop
and
int
and
jp
mov
ret
pop
jnp
add
outsl
shlb
fdivrp
es
scas
and
and
incl
jecxz
test
sub
outsl
clc
int
fists
movsl
xor
xchg
add
or
rorl
jle
push
and
mov
push
inc
fs
push
inc
xchg
cmp
fists
jmp
jp
xchg
fidivrl
xor
adc
add
push
cmp
dec
mov
inc
adc
xor
pop
xorl
push
mov
outsb
cmp
mov
push
cmp
imul
movsb
sahf
cmc
and
pop
mov
movsb
cs
pop
and
mov
jae
sub
push
mov
or
push
outsb
dec
sub
and
push
sub
fcoml
call
mov
push
xor
shll
push
ficoms
xor
call
jb
push
mov
jo
and
xor
sub
les
sahf
xchg
sbbl
add
jp
or
pop
jl
dec
inc
test
jb
cmp
gs
call
or
fidivs
mov
inc
or
xchg
lods
sub
cmp
push
nop
adc
mov
sbb
mov
mov
ja
or
scas
adc
xor
sbb
push
out
data16
add
fwait
nop
cli
or
leave
or
nop
push
or
add
in
out
ret
pop
mov
test
xchg
outsb
xor
xor
add
enter
mov
adc
mov
std
xor
leave
je
insb
adcb
mov
lods
test
add
and
test
sti
sub
mov
je
ss
hlt
call
sub
xorl
je
aas
dec
mov
add
icebp
inc
pusha
mov
das
push
fistps
shl
add
jl
jno
adc
pushl
loop
add
lock
icebp
scas
cmp
inc
xor
add
movsb
cli
jg
mov
popa
add
sbb
push
dec
insb
mov
in
call
cld
mov
jl
loop
xor
adc
push
pop
jb
lret
les
scas
das
std
enter
clc
and
cmp
cli
add
call
movl
adc
in
and
fistpll
and
aas
push
cli
rolb
add
pushf
mov
inc
inc
shrb
jl
mov
test
or
fsubs
or
xchg
ljmp
nop
and
xadd
mov
inc
mov
mov
int3
push
xlat
lcall
push
lds
int3
icebp
ret
mov
and
adc
ja
cli
push
jb
inc
rorb
lea
ljmp
or
adc
mov
fcomp
cli
phaddw
jg
into
xor
or
add
add
inc
imul
sub
sub
fnstcw
dec
dec
xchg
add
and
sub
sbb
call
or
leave
mov
insb
int3
cmpsb
ja
xchg
sbbl
lret
int3
pop
loopne
cmpb
sarb
outsb
pop
lods
fsubrs
add
push
mov
int3
call
shll
lret
xchg
scas
repnz
call
cs
rcll
xor
mov
adcl
sbb
jle
orb
sbb
fsubrs
xor
adc
cmpsb
jmp
iret
push
das
data16
mov
jg
sub
pop
push
or
enter
popa
insb
mov
dec
ljmp
cli
inc
test
pop
jmp
sub
or
add
mov
fadd
xchg
loopne
cmp
sbb
xchg
jecxz
mov
mov
shr
lods
adc
in
subb
jg
mov
push
add
mov
mul
mov
lock
xor
dec
test
test
daa
or
and
out
mov
incl
les
sbb
js
ljmp
push
push
xchg
lcall
mov
dec
dec
mov
push
push
repnz
mov
sub
xor
adc
add
movsb
dec
mov
mov
decb
dec
decl
inc
push
ret
sub
mov
inc
push
int3
push
sbb
mov
les
or
cld
daa
loopne
movsb
cmp
inc
inc
fldl2e
mov
xchg
push
lret
inc
popa
xor
inc
in
sub
xchg
js
lods
lock
aam
and
js,pt
push
mov
mov
leave
repnz
test
xchg
and
movsb
int3
lahf
adc
jl
orl
jg
pop
mov
sub
sub
shll
rcr
call
add
mov
adc
push
lea
add
xor
push
xchg
sbb
jl
andb
and
xor
shlb
and
mov
add
adc
cmp
jmp
icebp
xor
push
aas
repz
add
push
dec
add
cld
cmp
mov
pop
inc
xor
xchg
loopne
dec
jle
jl
clc
mov
cmp
xor
mov
jns
mov
loopne
and
dec
test
cld
cmp
jmp
mov
add
xor
xchg
dec
inc
ljmp
mov
ss
and
neg
sahf
int
outsb
add
mov
movsl
scas
test
or
loop
ret
add
and
jle
dec
xor
jb
popf
mov
sarl
mov
fidivrs
shrb
xor
sbb
sbb
push
pop
ja
leave
xor
hlt
jg
cmp
or
imul
push
fiaddl
dec
rolb
je
in
cld
pop
jo
or
data16
cmp
push
roll
or
cli
and
pop
cmp
cld
arpl
mov
xor
cmp
lods
inc
imul
add
mov
out
test
mov
jno
push
jl
ret
push
jbe
xchg
ss
test
inc
nop
cld
aas
or
shr
pop
push
sub
cmc
mov
inc
mov
mov
mov
push
lods
sbb
xor
out
push
push
cwtl
movsb
test
sub
bound
dec
dec
loopne
out
jge
add
fimuls
dec
inc
add
clc
mov
ficompl
lea
jge
movsb
push
shl
ret
pop
lock
iret
fs
xor
fmuls
outsb
flds
sbb
outsl
xchg
shll
fdivrl
or
push
adc
mov
scas
inc
hlt
pusha
rclb
or
outsb
pop
and
outsb
sub
je
jmp
jno
sarb
push
adc
cmp
pop
mov
xor
out
add
jmp
jo
mov
lea
addl
scas
aad
or
mov
lods
adc
popa
sbb
mov
in
mov
or
adc
mov
mov
nop
movsl
pushl
dec
inc
fdivrs
sbb
pop
mov
sbbl
jmp
cmp
clc
push
mov
mov
call
pushf
enter
adc
call
or
stos
sbb
dec
add
addb
pushf
rcr
sbb
fwait
push
sub
data16
pop
or
jle
mov
mov
or
adc
repnz
add
in
and
sbbb
xchg
stc
xchg
or
pop
cltd
outsl
sbb
jge
add
andl
imul
scas
cmp
push
lret
or
cmp
xor
cld
jl
ret
insb
sete
shlb
pop
and
xor
ss
push
jle
repz
lar
mov
cltd
push
cmp
jmp
jo
inc
push
into
es
push
mov
out
jle
push
mov
psllq
movsb
add
gs
cmp
idiv
sbb
sub
sub
ficoms
icebp
decl
nop
bswap
lea
push
cmp
push
jb
ret
pop
adc
push
cmpsb
aaa
jl
loop
cli
dec
cmp
mov
lods
fnsave
imul
outsb
test
dec
xchg
jle
les
cmp
mov
ja
popa
outsb
test
mov
adc
inc
or
inc
push
mov
dec
cs
mov
jge
stc
mov
fneni(8087
addr16
xor
lcall
dec
xchg
push
cmp
test
call
pusha
jo
stos
scas
push
cmp
jo
push
into
fcompl
into
dec
dec
lcall
adc
adc
push
sub
cmp
rclb
daa
pop
pop
jne
sbb
pop
daa
enter
or
aam
cld
jg
mov
test
into
clc
xor
aad
inc
mov
xor
shlb
pop
mov
pop
inc
push
pop
push
incb
fcmovnbe
or
out
adc
xchg
mov
sbb
and
and
jp
push
push
mov
sbb
jo
jecxz
incl
adc
mov
mov
dec
push
iret
out
mov
cmpb
mov
push
add
pop
pop
sbb
and
cmpsb
xchg
mov
jle
push
inc
popa
push
cld
pop
push
lock
sub
and
adc
sub
test
mov
pop
dec
inc
add
es
or
int3
ss
testb
mov
jg
dec
xor
ret
cld
push
clc
sti
inc
jecxz
stos
lret
push
and
pop
cmp
pop
pop
jmp
enter
outsb
clc
push
lret
mov
pushl
int3
adc
or
ffree
ljmpw
and
pop
push
sbb
push
or
test
push
imul
mov
push
xchg
jp
xor
into
dec
or
or
mov
test
lock
dec
inc
adcl
xchg
xorl
add
out
or
jge
lods
jl
inc
jmp
hlt
or
xchg
pop
inc
mov
and
loop,pn
shrl
out
leave
pusha
mov
sub
jge
cmpsl
push
mov
or
jne
and
push
mov
jmp
push
inc
imul
xchg
cmp
jne
mov
insb
sub
mov
cmp
push
jle
add
adc
ss
xchg
ret
jbe
dec
ret
aam
rorb
popf
call
mov
jo
stos
cmp
subb
popa
xor
mov
pop
push
or
sarl
push
push
push
xor
fnsave
insb
test
test
test
push
inc
mov
rcll
adc
add
pop
ret
mov
mov
xchg
push
or
pop
dec
mov
testb
push
mov
mov
iret
mov
fwait
mov
pusha
sub
add
and
pop
mov
push
add
or
inc
fcomp
aam
add
je
add
jne
je
jno
add
push
xor
mov
or
pop
push
cld
std
cld
jge
push
fbld
add
pop
adc
cmp
ja
adc
push
sub
xor
jo
stc
adcb
mov
cli
push
dec
adc
repnz
pop
or
add
out
sub
das
sbb
in
mov
clc
push
mov
xchg
xor
fadds
call
call
inc
jno
xor
push
jl
push
je
loopne
les
or
fimull
adc
sub
ss
decl
jge
sub
fidivrl
movsb
sub
std
dec
adc
add
subl
dec
outsb
jbe
fisubs
cmp
cmc
decb
and
adc
mov
and
fadds
adc
in
inc
loopne
shl
ss
cwtl
fidivl
inc
pop
pop
push
lret
das
mov
test
sarl
fsubs
and
sbb
xlat
mov
sar
pop
push
jns
lcall
mov
mov
nop
add
lods
mov
mov
sbb
xor
mov
add
cmp
stos
test
pusha
jg
icebp
sub
sub
add
sti
call
lret
cmp
ret
or
movsb
jmp
jecxz
imulb
add
cli
out
cmpl
push
pop
gs
and
cmp
pop
sub
fidivrl
scas
xchg
mov
je
push
ret
inc
jmp
adc
cmp
cmp
cmpps
push
jnp
stos
sub
push
jge
outsl
incl
ret
cmpsb
fmull
sarb
mov
push
push
fsubrl
arpl
mov
das
loopne
jb
mov
sbb
and
add
scas
cwtl
dec
adc
push
or
sbb
mov
ret
rcrb
inc
sub
shlb
xchg
pop
inc
sahf
mov
jp
add
push
test
mov
dec
stos
mov
call
adc
loop
loopne
aam
outsl
xchg
jle
adc
xorps
shrl
add
test
add
jp
lret
lock
xor
sarb
mov
fiadds
xor
sbb
add
sub
decl
insb
fbstp
jle
shlb
js
pop
inc
xchg
sub
and
dec
out
cmc
mov
daa
repnz
pop
in
inc
cs
add
out
push
loopne
or
icebp
cmp
in
add
pop
add
insb
sbb
add
jg
loope
push
jbe
and
test
pop
subb
loopne
mull
mov
mov
sarl
mov
and
andl
inc
adc
mov
loopne
test
outsb
xor
push
adc
incb
outsb
test
popa
les
pop
dec
aaa
cmp
cmp
sbb
cmp
cmpsl
outsb
jecxz
sub
pusha
xor
lods
ret
inc
outsb
icebp
push
gs
mov
cli
pop
xchg
js
daa
outsl
push
test
or
push
adc
xchg
negl
or
mov
or
pop
fiadds
cmp
xor
xor
mov
ds
data16
adc
mov
and
push
leave
out
or
push
call
cmp
mov
inc
test
popa
je
mov
jno
jmp
sbb
sbb
jne
js
add
fimull
or
inc
cli
xor
fnstsw
add
and
pop
mov
std
jbe
sbb
filds
dec
cld
add
add
push
push
cmp
xchg
fmull
fs
outsl
sti
mov
inc
mov
push
incl
sarl
mov
push
mov
jp
aas
lock
xchg
lock
mov
inc
adc
rorl
inc
push
jle
enter
inc
jmp
out
shl
dec
mov
pop
mov
pop
inc
push
cmc
clc
pop
shll
loop
nop
sub
mov
mov
pusha
xchg
andb
push
enter
mov
add
test
jle
push
imul
add
stc
out
pop
dec
jl
ss
xorb
ljmp
jle
mov
cmp
adc
cmpsb
out
cli
xchg
cmc
nop
inc
les
fmull
xchg
fidivrs
mov
fdivrl
js
mov
icebp
jg
stos
sub
movsl
test
in
add
xchg
pop
xlat
incl
push
int3
push
push
push
outsl
push
aam
shr
mov
sub
hlt
mov
xor
xor
and
push
inc
lock
adc
jp
jl
inc
cmpsb
mov
jnp
sbb
push
mov
jns
js
daa
imul
jae
and
or
fistl
rolb
xchg
or
xlat
jo
sub
ficompl
pop
mov
add
lock
fidivs
je
imul
mov
repnz
mov
test
add
xorb
dec
rolb
mov
cmpsl
mov
mov
xor
pushf
xor
dec
mov
mov
or
push
or
mov
add
jno
leave
sti
jg
jle
in
mov
mov
out
fmuls
xor
jl
je
and
dec
sbb
outsb
push
push
sub
ja
push
sub
push
and
adc
push
testl
sbb
call
adc
cmc
test
data16
cmp
or
outsl
push
insb
test
cmp
push
aam
dec
sbb
inc
jl
inc
xchg
fstl
clc
push
jp
push
int3
les
pop
xor
pushw
push
mov
rorb
jbe
dec
mov
bound
negb
add
adc
inc
mov
xchg
rclb
enter
push
mov
push
dec
ja
aad
mov
movb
xchg
ljmp
xor
mov
push
insb
mov
cmp
pop
sub
mov
fwait
add
xchg
int3
je
jns
jmp
loope
mov
out
jecxz
xchg
rcr
out
adc
mov
jmp
fadds
js
int3
adc
hlt
incb
in
inc
int3
mov
pop
int3
test
rol
aam
push
pop
push
push
mov
jno
cli
xchg
xchg
push
mov
insb
sub
inc
push
add
and
je
push
pop
dec
xchg
adc
sti
pop
sbb
adc
mov
std
mov
inc
push
jmp
jp
adcb
shlb
aas
xor
push
nop
or
cld
xor
mov
mov
rclb
and
cli
in
pop
nop
jmp
mov
inc
add
lods
int3
xor
pop
lods
std
xor
add
mov
xchg
bound
jl
arpl
jg
push
xchg
cmp
pop
leave
test
cmp
jp
mov
xchg
and
sbb
stos
mov
fidivs
je
add
repnz
push
dec
mov
subb
jp
or
mov
push
cmp
dec
jmp
loopne
pop
adc
xchg
mov
mov
mov
jns
jb
jmp
sarl
insb
out
adcb
repz
sbb
pop
or
ljmp
mov
mov
cmp
mov
add
mov
rolb
mov
xchg
push
pushf
mov
fisttps
int3
cmp
push
push
movsb
lret
orl
xor
sub
push
push
pop
mov
filds
xchg
lock
test
mov
in
inc
xor
jbe
mov
call
test
cmpl
cmc
inc
rcrb
inc
add
mov
js
sbbl
mov
push
dec
add
pop
icebp
and
pusha
push
fs
call
daa
push
mull
test
lea
lea
pop
add
pop
les
or
lods
addr16
rolb
push
roll
inc
shll
shr
hlt
and
cli
das
faddl
les
int3
pop
jp
clc
add
call
jbe
xor
shrl
repnz
and
or
es
movsb
aaa
es
dec
es
xor
dec
and
aaa
xor
in
mov
je
pushf
imul
imul
jae
and
jle
leave
fiadds
jmp
decb
cmp
inc
inc
cmova
add
dec
loop
test
or
sub
sub
push
jo
push
mov
add
int3
xchg
adc
inc
dec
and
sarb
mov
xor
mov
adc
cmp
or
jle
cld
mov
decl
xchg
jp
ret
shll
xchg
or
pop
inc
das
ss
dec
data16
mov
push
adc
and
lock
adc
xchg
dec
jno
dec
add
jg
sbb
gs
idiv
mov
hlt
and
cmp
fcmovnu
cmc
inc
add
dec
int3
jae
xor
add
lods
call
dec
mov
shl
push
xor
mov
test
jle
mov
jle
adc
jmp
mov
mov
cwtl
or
mov
xor
test
pop
scas
push
fs
mov
orb
push
stos
out
les
or
outsb
insl
adc
push
insb
mov
xchg
mov
int3
pop
test
enter
add
rclb
pop
movsl
dec
sbb
jne
mov
das
sahf
gs
inc
jl
xor
stos
movsb
jno
mov
pop
push
sbb
adc
loopne
cmp
and
add
cli
call
bound
iret
mov
pop
add
dec
and
push
and
pop
daa
mov
inc
mov
mov
call
add
mov
jg
push
pusha
je
lods
mov
and
sub
cs
imul
inc
push
mov
push
js
divps
shlb
cmp
shrb
sahf
les
add
subb
adc
das
les
call
jp
rolb
gs
xchg
mov
push
or
decl
repnz
add
and
mov
jmp
inc
or
aas
mov
ds
mov
imulb
roll
rolb
fsubl
lods
cli
pop
sub
mov
or
in
pop
mov
sbb
or
into
sahf
insl
jl
mov
xchg
add
outsl
lea
in
filds
mov
lcall
out
and
sbb
jbe
fs
pop
inc
jne
mov
pop
push
popa
rol
dec
aam
ficoml
sub
sub
js
and
in
test
jle
jne
fs
xchg
cltd
mov
es
pop
test
pop
cmpsb
test
mov
clc
push
push
push
inc
cmp
mov
out
dec
pop
test
mov
std
int3
aad
dec
cli
cmp
xor
leave
mov
or
mov
imul
adc
data16
add
sub
out
adc
idivb
arpl
add
bound
filds
add
sbb
mov
sbb
divl
aaa
outsb
stos
add
jg
cmp
int3
shl
inc
or
mov
or
in
nop
jp
inc
jae
or
push
add
or
inc
push
inc
sub
push
in
pop
ret
lods
mov
add
xchg
ljmp
sbb
push
mov
mov
cmp
add
fwait
cli
es
cld
pop
adc
int3
into
xchg
add
data16
mov
sub
dec
push
mov
xchg
pop
sbb
inc
push
orl
add
xchg
push
mov
lea
jmp
mov
cld
or
sti
adc
adc
je
xchg
add
addr16
lea
aam
jnp
xchg
dec
outsb
cmc
insl
pusha
adc
lock
ret
mov
xchg
or
push
add
inc
test
test
into
pop
adc
idivl
push
ret
movsl
outsl
pop
pop
shlb
mov
inc
or
clc
push
xchg
mov
sub
popl
add
pop
adc
xchg
xor
add
xchg
add
ds
cmp
stos
mov
lock
cmp
and
sub
add
or
dec
dec
sub
shrl
cmp
xchg
push
call
mov
lea
jbe
sarb
and
insb
lea
mov
jne
mov
sub
jl
les
add
decb
incl
sub
inc
js
jecxz
mov
add
cmp
push
cs
test
and
push
repnz
or
inc
jle
xchg
test
sub
add
test
das
mov
and
mov
adc
add
data16
out
lock
dec
jae
in
mov
cmp
push
nop
inc
dec
push
or
clc
ret
adc
inc
popa
or
mov
testb
incb
pop
mov
inc
insl
rclb
and
xchg
jge
hlt
dec
ret
add
mov
push
jne
cmp
push
dec
je
cwtl
sbb
je
dec
mov
fcompl
loop
out
incl
inc
test
andb
jmp
mov
movsb
shlb
leave
lods
sbb
xchg
push
sbbl
sub
or
in
call
or
addr16
jne
mov
push
jo
jb
mov
cmp
pop
mov
adc
add
jne
pusha
add
xchg
inc
lar
mov
jb
lods
shrb
push
mov
js
pop
mov
sbb
mov
add
mov
lea
mov
cmp
ret
xchg
add
in
shll
lock
loop
push
xor
leave
js
aam
addb
scas
int3
popa
jo
push
shll
adc
sbb
mov
sub
ret
jmp
jmp
adc
push
and
ret
push
fnsave
mov
add
imul
jge
inc
jg
inc
std
and
add
xor
jge
shll
pop
popa
popf
add
rorl
outsw
and
std
mov
jmp
incl
adc
push
sbb
arpl
pushf
in
adc
cli
jg
lds
dec
and
xor
je
aaa
ret
popa
mov
sar
mov
xor
add
outsb
push
or
jmp
sbb
adc
mov
pop
or
push
enter
ljmp
ss
lods
sbb
fnstcw
mov
jns
ret
notb
add
and
int
incb
outsl
cmp
shr
rorb
xchg
jmp
push
or
jo
icebp
call
cld
fcoml
cli
jns
mov
and
inc
or
push
int
lock
inc
inc
or
in
add
popa
lods
shlb
shll
inc
xchg
mov
or
clc
xor
insb
xor
mov
jg
dec
ret
shll
adc
les
aam
push
ds
jno
mov
addl
adc
push
inc
sbb
and
or
mov
icebp
push
pop
js
dec
push
pop
mov
fs
data16
movsb
inc
outsb
xchg
adc
hlt
push
stos
sub
getsec
push
cmp
mov
cmpsb
in
sub
xchg
insb
add
fildl
xorb
pushw
int
xor
pusha
mov
pushf
shlb
pop
or
rorb
insl
pop
and
popa
mov
add
jg
and
test
shlb
cli
in
ss
insl
ljmp
fs
push
push
add
push
mov
mov
jmp
pop
jne
adc
clc
jle
push
imul
or
clc
xor
cmpsb
leave
inc
lods
cmp
loopne
jmp
inc
mov
mov
outsl
and
dec
fcoms
push
insb
lods
xor
mov
push
jbe
mov
clc
repz
ret
and
pop
mov
dec
xchg
push
push
add
fcomi
pop
adc
aas
gs
imul
cmp
fbstp
cld
sbb
out
and
xchg
push
loope
push
cli
xchg
mov
mov
movsl
mov
push
push
lcall
mov
cmovo
mov
pop
push
mov
js
icebp
pushf
push
das
jecxz
xorb
jl
jne
cli
add
adc
mov
stos
mov
dec
and
add
push
push
jecxz
jg
mov
aad
mov
or
roll
rolb
pop
adc
andl
js
mov
inc
xor
js
adc
incl
in
push
popa
add
stos
add
pop
add
inc
rcl
fidivl
push
popf
jo
mov
faddl
jno
idiv
icebp
push
mov
in
sub
mov
dec
xor
mov
mov
pop
inc
mov
mov
fadds
call
and
ljmp
push
jmp
pop
das
rolb
orl
nop
jo
xor
loopne
xchg
sbb
repnz
cli
add
pop
lret
rsqrtps
mov
es
mov
pop
punpckhdq
mov
ljmp
push
xchg
ret
in
xor
rclb
ljmp
xor
and
jmp
jb,pt
push
adc
push
jg
aaa
push
pop
lock
scas
pop
icebp
test
out
fistl
cld
inc
es
je
push
jmp
xchg
bound
stos
add
dec
std
jb
add
mov
sbb
cs
sarb
add
push
pop
aam
push
sub
enter
add
or
decl
shlb
aas
insb
mov
push
loopne
adc
jae
sub
jle
xor
jecxz
shrl
add
xchg
les
jne
and
xor
sub
mov
push
ret
push
or
rolb
movsb
movsb
xchg
clc
sub
and
or
aam
sbb
mov
sbb
cmp
push
cmp
jae
cmp
adc
add
data16
mov
push
push
pop
mov
and
push
mov
imul
push
out
add
out
jl
pop
fwait
pushl
mov
sub
or
test
test
cs
dec
clc
das
pop
push
mov
jae
and
or
mov
test
pop
ljmp
test
cmp
inc
leave
test
std
mov
xor
fs
mov
inc
movsb
sahf
decb
push
xchg
add
and
aas
or
jl
jle
xchg
inc
push
stos
xor
decb
adc
es
ret
sbb
jle
jge
cmpsb
addr16
fistpll
pop
inc
adc
test
or
clc
rorb
jl
clc
cmp
push
mov
mov
enter
test
push
insb
pop
mov
cmpsl
and
adc
add
arpl
and
adcl
dec
add
addl
add
mov
dec
outsl
decb
repnz
inc
xor
test
xorl
xor
fmull
pop
add
icebp
or
jb
sbb
sub
std
in
call
push
jge
push
scas
add
push
imul
sub
jp
negb
xor
add
fiaddl
add
rcr
dec
add
xchg
fs
ljmp
or
dec
fs
decl
mov
sbb
push
pop
call
cld
das
xor
mov
int3
cmpsb
xchg
add
inc
push
inc
sbb
mov
cmp
and
lea
insb
pop
pop
jg
mov
push
pop
es
jo
cmp
gs
call
add
mov
ja
rorl
mov
lea
adc
and
xchg
jno
aam
sub
mov
xor
add
add
out
lock
adc
sbb
push
push
fdivl
fdivrl
cwtl
sbb
cmpb
je
mov
mov
bound
add
ljmp
lea
jb
jb
iret
rcl
je
les
mov
inc
or
daa
dec
mov
dec
dec
add
sti
imul
leave
bound
cli
mov
adc
inc
lcall
ljmp
mov
sarb
enter
cmp
int3
inc
push
aas
mov
pop
add
jae
jb
lock
pushl
jno
imul
shrb
or
sbb
sbb
adc
or
jl
xor
cmp
xlat
cli
dec
add
arpl
js
mov
les
and
sarb
sub
test
test
das
inc
enter
mov
sub
mov
insb
lods
stos
fs
adc
cs
aaa
sbb
insb
add
shlb
jo
push
outsl
push
or
sub
pop
xlat
mov
loop
push
sar
jmp
in
push
loopne
sbb
mov
rclb
stos
push
loope
or
or
add
mov
sbb
add
push
lock
xlat
mov
call
pop
or
ret
jge
clc
inc
into
in
jbe
ror
jnp
push
mov
push
rorl
rol
loopne
aas
cmc
fwait
into
cld
xor
test
push
shrb
fsubrp
inc
cmp
xor
je
test
adc
subl
bound
hlt
mov
pop
scas
fdivrp
bound
insl
push
jo
fisubl
mov
xor
add
nop
mov
pop
aam
loopne
call
xchg
xor
xor
pusha
adc
mov
aam
xor
push
mov
xchg
mov
add
and
cmp
ficomps
aas
pop
xor
add
adc
testl
dec
push
pop
or
mov
into
shr
test
fbld
call
add
jne
pop
add
add
pop
push
jmp
cli
add
and
inc
test
dec
mov
das
lcall
pop
shlb
into
jb
xchg
cmp
cs
dec
mov
mov
adc
in
dec
jg
add
or
jnp
cld
test
xchg
dec
jno
cli
dec
or
rclb
jg
jp
sbb
aaa
das
xchg
pop
testl
add
bound
shrl
fimull
lret
cwtl
add
out
fdivl
clc
pop
push
push
push
call
ljmp
push
shr
mov
outsl
cmp
add
lea
sub
and
lret
dec
push
sbb
call
adcb
int3
enter
mov
add
inc
pop
call
adc
sbb
push
mov
xchg
adc
and
fdivs
adc
inc
out
sub
mov
je
push
in
inc
outsb
add
insb
data16
mov
loop
push
or
mov
adc
jl
add
incl
fildll
push
push
xor
call
call
dec
dec
sbb
incl
mov
pushl
arpl
ljmp
jne
add
and
cld
inc
dec
fucomi
outsb
sbb
call
dec
add
jb
xor
cmpsb
fs
sbb
xor
ljmp
andb
ja
jge
add
leave
and
and
ror
call
add
or
rorb
ds
ds
push
inc
mov
ret
lds
imul
loope
leave
jmp
jl
mov
je
stos
insb
jne
xor
orl
mov
xor
inc
pop
pop
add
ret
push
adc
lcall
nop
inc
adc
rcrb
jb
repnz
out
mov
cmp
idiv
dec
cmp
testb
hlt
pop
adc
fdivl
push
add
jne
and
leave
push
das
dec
lcall
shll
loopne
push
and
lret
xchg
dec
test
inc
repnz
jecxz
clc
add
mov
cmp
push
insl
xlat
es
std
mov
push
sub
std
jb,pn
cmp
sub
bound
inc
outsb
mov
mov
cli
fadds
mov
inc
mov
mov
mov
ficoml
sbb
in
jl
lea
mov
dec
lock
sti
das
sub
out
sarl
mov
data16
or
dec
neg
push
aaa
sbb
push
xor
inc
mov
aad
mov
shll
cld
ret
jp
stos
jnp
loopne
add
adc
or
fmuls
mov
mov
add
xchg
add
inc
mov
loopne
pop
mov
mov
dec
pop
mov
xchg
loope
or
jbe
add
cli
shrl
xlat
add
push
jbe
add
xor
add
lret
jl
add
jne
fisttps
lock
or
gs
pop
mov
jecxz
cmp
out
push
jmp
dec
lods
xor
insl
push
and
fimuls
lea
xor
fwait
mov
adc
jae
adc
cmp
add
xor
add
daa
add
mov
inc
cmp
adcl
push
adc
cmc
cwtl
call
mov
call
mov
push
or
out
mov
xchg
orl
ljmp
mov
pop
mov
inc
or
xor
outsl
mov
decl
or
inc
sub
add
xor
add
roll
aaa
push
inc
jge
xor
sbb
hlt
xabort
lea
jle
rcrb
imulb
jp
adcb
test
sbb
mov
and
aaa
les
jg
stc
mov
xor
add
inc
push
jmp
and
cltd
sub
adc
lea
sub
imul
ret
fisubl
testb
and
mov
push
mov
fwait
cld
push
lds
lock
xor
xor
xchg
add
loopne
lods
push
sbb
add
test
push
dec
enter
fistpll
adc
testb
nop
rclb
jmp
mov
ljmp
dec
repnz
inc
jns
mov
mov
pop
fdivrs
aas
push
icebp
mov
adc
xchg
rolb
inc
icebp
mov
mov
ret
or
data16
scas
ss
int
loopne
sbb
xchg
ss
sub
je
outsb
out
xor
nop
incb
push
incl
mov
and
jne
push
loopne
cmp
xchg
pusha
setb
xchg
movsl
and
das
jo
imulb
inc
imul
les
mov
or
jg
ficoms
cmp
cld
fcmovnb
sbb
shlb
aas
call
mov
cli
adc
clc
ja
xor
push
int3
adc
mov
ss
add
je
jle
mov
in
mov
push
dec
ret
xor
inc
push
mov
ljmp
fisubl
outsb
adc
test
fmull
pop
add
inc
pop
leavew
inc
andl
out
add
cmp
mov
and
inc
cmp
push
and
and
testb
fsubp
inc
mov
jge
fadds
outsb
fdivs
sarb
loop
fimuls
sub
push
and
push
shrl
adc
fisubs
into
adc
adc
clc
fildll
xor
ret
cmpsb
test
mov
test
dec
int3
std
mov
test
rclb
icebp
bound
or
add
or
pusha
cmp
or
in
je
dec
mov
push
je
sbb
lret
loopne
xor
add
cs
inc
inc
lods
call
and
lsl
push
and
xor
or
sbb
cmpsl
addb
xchg
dec
enter
xor
cwtl
and
jno
jmp
mov
jb
mov
mov
or
ret
dec
inc
mov
xchg
test
or
adc
sub
add
incl
icebp
stos
mov
adc
lods
dec
hlt
daa
inc
cmovs
mov
rol
roll
push
test
and
jp
or
jmp
add
lret
popf
dec
sub
lods
roll
outsl
fimull
xor
mov
cmpsl
cld
ss
rorb
add
insb
sbb
mov
jecxz
mov
nop
pop
lock
dec
lcall
call
das
or
popf
cmp
or
pop
outsl
ss
mov
mov
inc
dec
mov
push
push
call
sub
inc
fdivs
insb
je
shl
cld
dec
outsl
mov
nop
mov
clc
adc
daa
push
sbb
xor
xchg
test
push
enter
test
faddl
ljmp
inc
inc
mov
aad
sub
nop
arpl
push
fisttpll
addr16
jnp
movsb
mov
int3
in
inc
mov
or
jae
jmp
clc
es
loope
inc
sbb
or
push
mov
push
sbb
jl
in
ljmp
dec
and
adc
mov
cmp
and
push
pushl
mov
test
repz
cld
xor
add
dec
mov
aaa
addb
mov
or
int3
xchg
bound
mov
sbb
inc
aam
sub
mov
int3
fmul
or
enter
inc
ss
test
sub
inc
sub
pop
sub
scas
add
mov
jb
fldcw
mov
mov
fdiv
mov
push
push
movsb
mov
ja
xchg
xchg
push
out
cmp
push
jo
cmpsb
mov
mov
aam
pop
stos
std
rcl
daa
push
ljmp
rorl
mov
push
xor
fs
ret
outsb
bound
sub
ret
jns
js
js
adc
cmp
or
mov
cmp
fs
test
data16
movsb
and
fisttps
or
insb
gs
xchg
mov
jecxz
and
hlt
push
repz
testb
call
pushw
clc
mov
inc
push
test
cld
pop
inc
mov
lea
and
add
push
or
popf
pop
lock
mov
aaa
bndldx
incl
out
push
mov
daa
push
or
mov
shrb
sub
hlt
popa
inc
push
sbb
adc
shlb
pushf
lea
mov
add
ret
mov
movsb
nop
pop
xor
mov
addr16
aas
cld
pop
xor
xchg
cld
cmpsb
shll
cmp
scas
xor
rcll
xchg
sbb
outsl
jmp
cld
inc
fs
jmp
mov
and
push
mov
push
add
xchg
clc
loop
jl
fwait
inc
sub
and
xor
adc
mov
mov
mov
int
adcb
and
pusha
int3
pushf
ja
mov
fmuls
in
mov
bound
mov
pop
jle
push
mov
popa
push
fcom
jge
adc
xor
cmc
or
aaa
shl
pop
in
add
es
mov
jae
jbe
test
cmpsb
or
mov
xor
add
pusha
loope
out
out
loop
loopne
jo
jl
pop
rcrb
dec
insb
adcl
loop
sub
test
aad
pop
fstps
out
sub
lods
std
xchg
ficomps
out
ret
sub
in
adc
gs
mov
dec
bound
jl
dec
test
mov
jnp
mov
xchg
jle
mov
sub
sbb
call
aas
add
lds
lock
orl
test
mov
xchg
inc
sbb
ss
dec
and
mov
cmc
push
pop
cmp
daa
mov
push
call
push
int3
or
lock
rcll
push
xor
pushf
insb
sub
xchg
push
push
push
test
mov
mov
mov
int3
int
push
bound
rclb
aaa
out
mov
shlb
shl
push
jg
xor
and
xor
int3
cmp
arpl
inc
push
sbbl
sbbb
loop
xor
mov
icebp
xchg
cmp
rol
sti
imul
mov
add
inc
rclb
jbe
adc
fs
xor
jle
lods
mov
nop
jle
ret
daa
xor
pop
jg
xchg
lret
adc
or
outsb
push
dec
inc
pop
ret
ds
adc
int
pusha
push
pop
adc
mov
out
leave
sbb
add
je
add
mov
outsl
jle
xor
jbe
call
push
sti
insb
mov
shr
pop
add
repnz
pop
inc
push
push
inc
ror
push
ljmp
mov
add
mov
ljmp
popf
cs
inc
fs
not
sub
rol
out
xor
sub
mov
and
push
xor
or
mov
mov
test
je
dec
lret
sti
xor
inc
test
inc
int3
mov
mov
xchg
loopne
xchg
xchg
clc
call
lcall
sbb
lock
nop
fs
insb
mov
pop
movsb
ja
jo
lock
mov
dec
lea
loop
mov
sbb
int3
mov
arpl
popf
clc
cmp
or
xor
cli
test
ss
push
add
and
cld
push
xchg
add
popf
in
adc
sar
sub
test
sub
pop
rol
loop
or
and
mov
cmpsl
fsubrl
cli
xor
je
xorb
inc
pop
hlt
fwait
test
jbe
sbb
rcl
jae
sbb
mov
sbb
clc
mov
mov
call
enter
add
or
inc
sbb
cli
cli
pop
jl
mov
repnz
ret
stos
jg
cmp
gs
jne
clc
loop
mov
mov
lods
push
push
gs
decb
pop
jle
xor
mov
clc
inc
or
out
adc
add
das
mov
jmp
mov
xchg
fldt
xchg
push
inc
jmp
jge
test
aas
adc
popf
aam
mov
in
mulb
mov
inc
lods
adc
add
cmp
inc
cld
xor
int3
lret
dec
dec
add
jle
ss
and
jp
mov
pushl
jl
inc
xor
push
sbb
call
mov
cld
repnz
mov
inc
or
je
call
add
shl
in
stos
add
aaa
arpl
add
cmp
daa
jb
shll
test
inc
xchg
fs
stos
dec
std
jg
mov
or
dec
sbb
mov
imul
mov
lret
push
adcb
popf
insb
add
mov
push
add
fcoml
sbbb
lods
nop
inc
sbb
push
lret
push
mov
test
movsb
cmp
xor
insb
rolb
jmp
xor
mov
fisttpll
icebp
adc
or
std
test
pusha
mov
dec
push
push
jbe
jl
insb
jb
pop
movsb
adc
outsb
orb
je
test
adc
adc
sub
cld
adc
ljmp
inc
repnz
inc
pop
outsb
xor
mov
inc
xor
sub
in
add
inc
sbb
add
mov
clc
je
push
mov
xlat
ret
ds
mov
rolb
jae
dec
test
push
pop
jge
inc
or
adc
cmp
mov
push
loope
xlat
mov
cli
addl
sub
ja
in
dec
movsl
or
pop
fisubl
and
roll
mov
lds
stos
cld
rorl
aaa
adc
fcoml
cld
jo
test
push
cmp
call
sarb
gs
dec
push
mov
cmpb
lea
pop
out
lock
test
sub
insb
out
shrb
push
rcl
and
cmp
rorb
sub
ret
or
clc
in
add
andb
sbb
adc
and
mov
dec
ljmp
pushl
mov
cmp
mov
or
inc
or
cld
jb
push
push
mov
int
xchg
pop
mov
mov
jo
out
jmp
cld
into
nop
decl
add
repz
xor
aas
ret
fdiv
mov
das
push
jbe
int3
xor
or
call
rol
cs
bound
lret
jne
daa
out
lret
ret
ret
and
xchg
outsb
push
and
dec
mov
pushf
lret
and
test
enter
push
mov
popf
mov
out
xor
ret
test
fwait
pop
jl
push
fucomi
les
adc
adc
inc
or
mov
test
sub
lods
jge
loop
dec
pop
clc
test
rclb
mov
sub
test
push
ss
cld
add
sbb
aam
shl
ja
or
mov
mov
adc
adc
push
cltd
mov
stos
xor
mov
jb
std
das
xchg
add
xchg
jge
mov
adc
cld
fldl
ljmp
push
inc
nop
shl
bound
and
cld
adc
sbb
ret
pop
in
popa
add
mov
add
mov
add
cs
mov
add
cmp
dec
dec
push
adc
incb
pusha
das
or
fs
fs
mov
lds
loopne
lock
fcmovbe
movb
dec
sub
cmp
pop
rorb
je
es
je
push
pop
xor
mov
jg
jecxz
imul
aam
ficomps
add
dec
lea
mov
pushf
out
mov
std
jg
push
cli
mov
push
jbe
shlb
push
inc
cmp
pop
js
lods
or
loope
dec
jg
adc
xlat
in
out
mov
jmp
mov
mov
pop
pop
in
flds
jle
ljmp
rolb
mov
push
je
xchg
rorb
adc
pushf
sub
loopne
adc
cld
dec
nop
jne
jge
les
into
ror
push
and
adc
mov
xor
xor
sbb
and
js
decb
insl
add
dec
add
test
aas
je
les
cli
or
sbbb
sbb
stos
ss
test
pop
jle
aam
cld
mov
xor
cmp
push
jp
test
faddl
test
pop
test
and
lea
loopne
nop
fidivs
pop
xor
outsb
or
mov
xor
cli
adc
add
push
subb
jo
sub
rorb
mov
push
in
mov
pop
sub
mov
test
jno
sbb
pop
les
test
and
sbb
jecxz
pop
les
and
jmp
sub
lods
mov
sub
orl
clc
loopne
lock
and
lea
inc
mov
adc
icebp
hlt
inc
in
jne
pop
and
mov
mov
cmc
in
mov
leave
repnz
adc
mov
jle
call
ss
sti
mov
fs
mov
mov
jne
sar
xor
clc
movsl
jo
scas
je
lret
shlb
imul
dec
sub
add
je
sbb
add
insb
fdivs
or
mov
add
fs
call
pop
pop
inc
ss
ret
add
inc
sbb
aam
pop
sub
and
add
fistps
and
sbbb
fs
daa
push
mov
les
jg
inc
add
les
add
inc
xor
pop
push
insb
xor
ret
or
mov
cmp
mov
mov
push
subb
clc
jge
inc
ret
ret
ret
insl
adc
and
fsubrl
clc
mov
popf
mov
ret
cmpsb
sbb
stos
sbb
shl
fdivrl
jb
push
mov
mov
in
lock
or
dec
jo
sahf
cmp
hlt
popf
sbb
mov
mov
in
rolb
imul
xor
insb
sbb
in
ja
insl
pop
lds
jge
jle
clc
adc
lock
nop
sbb
insb
xor
mov
ljmp
push
cld
out
sti
into
mov
adc
xor
rol
adc
mov
pop
jae
xor
xor
add
daa
add
push
lcall
cwtl
out
xchg
fidivs
add
add
nop
add
adc
xchg
stos
xor
lods
dec
outsb
leave
adc
xchg
mov
mov
fsts
call
les
addr16
jae
ret
lcall
fcoml
test
push
sub
mov
mov
and
mov
jl
cmp
lcall
jg
mov
shl
gs
xchg
push
cs
sbb
and
sub
add
mov
outsl
jmp
push
xchg
lret
lods
and
and
adc
pusha
repnz
call
aas
xor
mov
and
mov
pusha
in
dec
outsl
cld
pusha
or
shr
shlb
and
push
pop
and
mov
cmp
dec
mov
add
and
ja
rcr
inc
sahf
rcll
cld
cmp
popf
inc
pop
jne
lret
cmp
jg
out
mov
outsb
je
push
mov
jp
inc
add
inc
rol
sbb
orl
movsb
or
test
enter
dec
add
inc
insb
mov
fs
rolb
or
mov
xor
sbb
mov
adc
shlb
or
cmp
stos
test
aaa
add
xor
rcrb
or
clc
nop
sub
rorb
outsl
out
mov
xor
in
cmp
loop
pushl
mov
lock
push
in
das
lods
inc
fcompl
ljmp
sub
add
fadds
and
xchg
test
xor
addb
jo
les
repnz
ret
ss
cltd
in
test
jle
in
inc
insb
int
xchg
adc
cmp
pop
xchg
fmulp
test
lcall
cmc
add
mov
sbb
pusha
add
add
xchg
cmp
push
pop
and
mov
cmp
test
push
pop
dec
push
cld
sub
sti
mov
ja
jmp
xchg
negl
outsb
add
cmp
jbe
fldt
push
inc
bnd
inc
add
push
push
sahf
gs
fcomp
mov
or
movsb
ss
push
cmp
inc
adc
in
cmpsl
pop
adc
lods
fs
adc
test
or
jo
mov
and
fidivs
in
incb
daa
jb
popa
pop
mov
clc
insl
orl
push
ja
ds
addl
sbb
jecxz,pn
pop
xchg
clc
jne
cmpsl
idivl
and
pop
std
mov
out
clc
or
int3
jp
in
test
jnp
adc
inc
cmc
fwait
inc
add
jo
cld
or
add
insl
lcall
push
jp
sbb
ret
add
push
and
and
jg
inc
jb
mov
inc
hlt
cmpsb
jo
stos
xchg
fucomp
repnz
call
xor
clc
cs
or
mov
fistl
or
fs
mov
stos
mov
sbb
adc
inc
mov
ljmp
push
ljmp
dec
js
scas
dec
jmp
and
mov
or
cmp
lock
gs
fs
xor
inc
sti
pop
or
dec
ja
mov
fs
pop
fldcw
in
jb
jmp
jp
mov
adc
xor
or
dec
jle
sbb
cli
loopne
mov
push
loop
test
mov
daa
lods
scas
pop
outsb
test
push
push
bound
ret
jb
inc
cli
dec
inc
mov
dec
sub
xchg
mulb
sub
jl
repnz
addps
callw
mov
mov
mov
dec
je
je
inc
and
push
and
ss
add
inc
sar
rorb
icebp
adc
sbb
int3
sub
push
mov
lods
pushl
inc
push
pop
orl
call
scas
adc
dec
ja
loope
movsl
mov
dec
inc
es
call
add
loop
call
into
ss
inc
mov
dec
jecxz
sbb
aas
push
fisubrl
fmull
mov
fwait
jle
add
and
mov
add
sbb
in
adc
movsl
inc
jmp
and
call
fdiv
add
sub
mov
or
dec
lds
push
mov
loop
or
pop
cmp
jecxz
push
inc
sub
pop
mov
sub
push
fimull
lock
sub
sub
test
out
shrb
pusha
adc
push
mov
sbb
test
inc
test
mov
xor
je
jae
adc
les
lret
movsb
enter
inc
rcrl
popf
inc
pop
or
inc
jb
cmp
mov
or
and
sbb
mov
or
jl
jne
jb
mulb
jno
je
and
push
lock
xor
sbb
cmc
repnz
pop
cmpsl
test
and
repz
nop
cmp
push
sti
mov
push
xchg
push
stc
pop
add
rol
std
cmp
jmp
lea
ds
clc
xor
sbb
mov
lds
adc
lahf
xor
dec
lahf
add
xor
fisttps
add
push
sbb
push
push
fdivr
cwtl
mov
inc
push
loope
mov
push
mov
mov
cmp
push
mov
sub
fstl
in
shrb
cld
pusha
mov
outsl
sbb
adc
add
adc
in
and
add
outsl
xchg
mov
inc
mov
dec
in
add
es
inc
sbb
pop
dec
cmp
mov
add
mov
pop
xor
jg
pushf
xor
mov
cmp
lock
push
cmpb
inc
or
mov
clc
sub
inc
subl
adc
inc
or
je
and
mov
dec
push
daa
test
aas
xor
lods
mov
inc
jmp
incl
sub
dec
decl
int3
xor
sbb
and
or
dec
loope
inc
xchg
ficoms
or
mov
jp
cmp
mov
xchg
dec
pusha
imul
orb
imulb
lock
push
mov
ficoms
jle
mov
movsb
add
inc
insb
mov
inc
add
push
pop
nop
movsl
fdivr
add
mov
int3
adc
inc
adc
inc
je
sbb
std
mov
pusha
lock
das
mov
jae
mov
sub
mov
or
and
call
int3
dec
sbb
dec
das
test
adc
dec
add
decb
arpl
mov
mov
xchg
push
inc
in
gs
je
and
inc
mov
lods
cmp
push
rclb
test
roll
fbld
xchg
push
mov
add
xor
mov
outsb
mov
sub
sbb
dec
cmc
mov
push
arpl
dec
pop
jl
ficomps
and
pop
and
adc
cmp
push
sbb
jp
push
inc
add
push
sub
ja
inc
pop
push
add
aam
movsb
xchg
mov
lahf
movsb
inc
cmp
mov
push
sub
mov
or
and
cld
mov
pop
and
mov
cs
arpl
insl
push
push
mov
adc
mov
ret
es
rclb
push
js
fiadds
xchg
cmp
decl
or
aam
cmp
push
add
cmp
leave
lcall
test
cld
inc
fcmovnu
push
sbb
pusha
and
outsb
and
fs
and
add
mov
mov
and
or
roll
mov
mov
xor
jb
sub
out
test
pop
push
out
jp
jmp
inc
ljmp
mov
mov
mov
mov
stos
cmp
adc
hlt
pop
mov
inc
aas
mov
xor
test
clc
ffree
add
mov
fbstp
mov
push
and
ja
or
add
adc
adc
xor
add
loope,pt
adc
mov
mov
insb
xor
popa
push
sub
mov
or
out
mov
pop
fs
push
scas
insl
stos
fildl
subl
add
lahf
je
dec
pusha
sbb
mov
sarb
incl
mov
cmpsb
push
mov
mov
enter
loop
xor
push
add
das
mov
or
or
add
call
test
ficomps
cmp
xor
mov
popa
adc
jb
add
pushf
clc
mov
sbb
dec
cmc
sub
rcll
mov
hlt
pop
lock
rorl
cmp
clc
mov
add
xchg
sbb
insb
fisubl
xchg
inc
and
mov
lds
pop
adc
fsub
mov
stc
scas
orb
mov
mov
shrb
and
pop
shlb
dec
scas
es
push
sbb
pop
push
jb
or
fmull
call
test
loop
mov
ficoms
cs
test
jne
incb
add
and
outsb
or
or
push
out
shll
mov
cmp
ret
negb
pop
xor
mov
xor
push
int3
sahf
mov
xchg
adc
inc
mov
mov
jmp
out
dec
jno
mov
inc
adc
in
fisubs
adc
mov
push
aam
or
jmp
or
or
inc
decl
lea
pop
sbb
adc
ret
rol
xchg
xor
pop
aaa
fdivrs
mov
andb
xchg
dec
popf
adc
cmpsb
push
dec
push
sub
add
imul
push
rorb
dec
fistl
rolb
dec
or
adc
sub
xor
pop
test
inc
movsl
mov
mov
xchg
mov
decb
mov
inc
ret
rcr
not
scas
mov
in
add
xlat
jns
outsb
adc
ds
or
addb
ret
rorb
mov
insb
xchg
xor
int
insb
add
lret
adc
sub
jge
push
or
jno
mov
fdivrs
call
icebp
lahf
fs
inc
lods
jo
pusha
push
inc
clc
test
fadds
rol
inc
push
mov
dec
pop
ss
sbb
push
rcl
cld
sbb
inc
cmp
popa
pop
jmp
clc
pop
mov
mov
inc
inc
jb
das
cmpsb
sbb
cld
lock
push
jmp
dec
pop
push
mov
jecxz
xchg
pusha
push
inc
std
fs
or
or
jle
adc
adc
jb
adc
dec
jmp
cmp
add
mov
dec
add
xor
rcr
mov
ret
jbe
shrb
xchg
jb
add
dec
jge
mov
movsb
add
mov
mov
and
mov
test
mov
aaa
push
dec
addb
pop
add
add
or
push
mov
stc
test
push
test
push
cmpsb
adc
cmp
je
add
adcb
mov
inc
in
rcrb
jecxz
std
test
sti
jp
mov
lcall
add
adc
push
and
aas
icebp
addl
inc
adc
movsb
push
pop
push
push
adc
clc
test
push
pusha
lcall
call
push
sub
call
clc
mov
add
movsb
nop
hlt
jg
mov
add
push
std
aaa
xor
lahf
dec
mov
jge
mov
adcb
lcall
mov
aam
nop
dec
xchg
fistl
sbb
pop
or
cwtl
pusha
sub
mov
pusha
xchg
inc
add
stos
adc
pop
lock
push
jg
pop
out
shll
call
inc
aaa
cmpb
pop
adc
xor
mov
cmpsb
and
mov
mov
loope
shl
scas
mov
movsb
mov
cld
imul
add
xorb
fdivl
fisubrl
xor
into
test
jle
aam
mov
xor
jne
test
fs
inc
push
push
mov
or
cwtl
xchg
test
push
cmp
adc
mov
inc
addl
adc
sub
or
mov
jo
cld
mov
xor
movl
loop
adc
je
or
jmp
nop
pop
fs
mov
or
jae
imulb
mov
dec
push
mov
add
repz
push
push
sbb
push
xchg
push
cmp
call
bound
out
push
clc
shrb
bound
movsb
lds
sub
cmp
pop
mov
test
sub
add
loope
add
dec
push
lret
sti
jmp
ret
cld
dec
test
sub
pop
xor
mov
rolb
sub
ljmp
outsb
jmp
push
aam
push
rcrb
sahf
mov
stos
lods
and
push
orb
pop
xchg
push
call
lea
mov
mov
shrb
push
adc
lea
ret
add
mov
and
xchg
xor
add
pop
cld
in
push
leave
dec
jne
push
sub
lods
imul
ret
jb
and
popa
mov
xchg
xchg
call
je
mov
pop
je
or
push
ljmp
jo
cld
bound
pushl
imul
pop
cmp
push
push
in
in
adc
push
repnz
ljmp
mov
lock
hlt
pop
inc
push
inc
cwtl
cld
ljmp
xor
sar
or
int3
cld
xor
push
push
leave
stc
decl
adc
sbb
test
test
inc
inc
test
add
or
dec
cli
out
les
into
jmp
imulb
lds
inc
test
aas
or
icebp
cmp
push
sub
hlt
cmp
push
in
mov
fsubrl
sub
mov
mov
test
int3
testl
push
shlb
push
aas
inc
inc
adc
lea
pop
pop
sbb
in
incl
push
inc
sbb
cltd
mov
mov
outsl
sbb
sbb
inc
movsb
sub
outsl
inc
mov
xor
pop
pop
ret
dec
nop
ficoml
mov
pop
enter
add
push
pop
push
mov
push
shlb
lea
pusha
mov
xorb
mov
enter
sahf
rcrb
jo
push
pop
cmc
pop
mov
outsb
add
nop
mov
inc
lea
call
movsl
sbb
gs
inc
pop
or
loop
icebp
jge
pop
mov
cmp
adc
ret
mov
pop
mov
jge
rclb
and
popf
add
adc
loope
pop
test
loop
loopne
movsl
adc
or
add
std
mov
shlb
cmp
xor
stc
push
fs
mov
add
cwtl
mov
or
cld
mov
sbb
or
add
data16
sub
sub
call
add
sub
xor
push
mov
clc
jg
sahf
jo
xor
nop
popa
xor
test
test
ljmp
mov
fidivl
outsb
jl
jle
shll
fs
sbb
js
xor
jecxz
sub
lock
fnstcw
movsb
inc
out
aas
xor
data16
fwait
adc
jl
mov
lea
xchg
icebp
mov
cld
jmp
lahf
test
mov
sbb
mov
xor
std
add
cmp
xor
imul
daa
xchg
shlb
adc
std
cmp
fdivr
inc
repnz
pop
mov
ja
idivb
lods
sbb
js
sbb
outsb
test
xchg
mov
jl
mov
push
lret
mov
cwtl
je
pop
add
jp
mov
pop
ret
fcomip
loope
shr
shlb
push
lea
add
or
push
cmp
push
mov
or
push
sbb
es
mov
adc
mov
push
and
cmp
inc
loopne
inc
js
fisubl
mov
jge
dec
cld
and
inc
imul
jbe
dec
inc
xor
mov
mov
xor
outsb
mov
xor
out
movsb
pop
je
lock
sub
dec
mov
adc
cmp
ja
rol
in
jne
call
sub
add
mov
xchg
pop
mov
inc
sbb
add
movups
fistl
sub
sbb
std
cmp
inc
test
pushl
push
inc
subl
xchg
lods
cmpsb
mov
repnz
mov
loopne
push
je
test
in
out
int3
test
mov
ret
pushf
push
inc
adc
loopne
adc
inc
fiaddl
movsb
data16
mov
or
mov
push
outsb
and
adc
aam
loope
rorl
retw
roll
lods
ds
push
fdivrs
rclb
mov
jge
add
in
add
xchg
nop
mov
mov
mov
cmp
call
mov
jge
adc
dec
adc
pop
dec
xchg
cmp
push
nop
call
lods
sub
add
mov
cmp
cld
gs
pop
outsb
mov
or
pop
sub
sub
inc
jecxz
and
add
mov
add
decb
or
movb
xor
dec
clc
or
ljmp
cld
js
jbe
xchg
loope
mov
insb
jb
jle
adcb
jle
dec
dec
sub
sbb
in
pushf
or
aaa
dec
dec
or
ret
cli
push
gs
das
das
ja
pop
xor
inc
or
adc
ret
je
jmp
cmp
or
sub
adc
and
push
lds
or
sbb
xor
ljmp
test
xor
test
mov
or
and
cld
or
lea
das
enter
ret
mov
repnz
divb
shlb
aas
frstor
pop
cmp
cld
dec
ret
test
adc
decb
mov
frstor
aam
xchg
sbb
inc
jne
add
orl
orl
mov
mov
outsb
stos
xor
push
cmp
test
mov
mov
shrb
sbbl
clc
pop
or
mov
mov
orb
jae
or
inc
pop
lds
addb
push
push
jp
push
incl
mov
je
shlb
das
inc
lea
mov
or
jle
test
fidivl
decl
jmp
loop
xchg
test
adc
and
imul
aaa
pop
cmp
mov
andb
cli
stos
hlt
sahf
add
push
cmp
data16
or
std
cs
adcb
adc
jbe
push
push
test
dec
and
or
sar
push
outsb
and
movq
jnp
movsl
sub
fs
pop
in
xor
push
lock
adc
repnz
mov
sub
cltd
test
xor
adc
xor
push
rolb
das
or
js
or
andl
or
lods
loopne
add
dec
js
out
cmp
scas
add
outsb
fs
mov
mov
mov
clc
gs
xchg
stos
cmp
rcr
jle
inc
jo
sbb
jnp
jp
inc
fcompl
jns
xor
jnp
jecxz
fistpl
push
cmp
test
add
pop
sbb
or
or
fisubl
sub
push
lock
ljmp
inc
lea
cmpsb
and
or
ss
fcmovnu
mov
adc
adc
adc
jmp
inc
sti
outsl
add
mov
fs
mov
or
xchg
repnz
imull
sahf
pop
test
pop
pop
fdivrs
repz
mov
or
addl
pop
pop
add
cwtl
loop
push
and
cld
push
ret
push
mull
inc
in
cmpsb
mov
invd
and
mov
adc
clc
push
cld
xchg
push
mov
lret
fadd
fmull
inc
sti
xor
imul
mov
ds
pavgw
insb
mov
push
adc
enter
inc
rorl
les
dec
clc
mov
mov
mov
decl
pusha
mov
xor
mulb
or
adc
mov
adc
pop
xchg
dec
xor
outsl
mov
sub
int3
inc
xor
add
in
pop
or
jne
loop
adc
push
or
icebp
dec
sub
call
inc
jo
sar
sub
mov
in
inc
push
inc
mov
pop
shlb
cld
and
mov
divb
call
popa
incb
xor
dec
adc
mov
pop
std
or
addb
addl
lds
cmc
clc
add
int
push
mov
inc
adc
fsubrp
pop
je
lret
add
add
mov
xor
pop
ret
ljmp
mov
mov
jle
inc
std
jbe
test
stos
mov
xchg
pop
testb
sbb
call
or
push
xor
ljmp
mov
pop
cmp
jb
dec
mov
push
cmp
jb
pop
bound
push
pop
and
pop
mov
ljmp
pusha
or
js
push
incl
lods
mov
xor
inc
xor
add
pop
je
pop
addb
or
adc
pop
inc
lret
inc
mov
push
or
dec
mov
test
ja
and
inc
mov
or
xor
pop
cmp
inc
xor
mov
outsb
push
push
addl
and
loopne
xchg
inc
mov
cmp
pop
ljmp
ret
call
shlb
pop
pop
mov
push
push
and
lock
jg
adc
or
push
test
fadds
xchg
aam
mov
pop
icebp
xchg
cmp
inc
fdivr
insb
inc
mov
mov
mov
push
aaa
dec
aas
rcrb
loopne
lcall
inc
xor
leave
add
ror
add
ret
scas
xchg
ret
dec
outsl
clc
lock
push
mov
jno
add
fists
or
mov
inc
mov
iret
push
fcmovbe
sbb
call
push
add
adc
jg
inc
mov
push
clc
push
and
or
lds
cli
push
addl
sti
into
ret
inc
test
test
icebp
mov
cli
clc
mov
pop
arpl
add
mulb
pop
scas
add
fildl
add
nop
mov
mov
aas
std
sub
sub
xor
rcll
mov
or
push
push
imul
test
jae
push
pop
xor
add
sbb
mov
lods
rorb
add
push
cwtl
mov
out
pop
jb
iret
popa
les
push
sbb
cli
ret
inc
cmpsl
test
mov
rorl
cmc
and
sti
xlat
add
xor
ss
jmp
leave
jp
test
fmull
mov
mov
xor
push
inc
pop
xor
push
sub
pushf
fs
scas
cmp
fmuls
ret
loopne
shlb
rorl
or
out
sub
add
mov
mov
rol
inc
jb
cld
loop
sbb
jo
jo
push
call
movsb
arpl
mov
fdivs
pop
inc
push
stos
dec
sub
jbe
xor
dec
and
mov
mov
fsubrl
or
add
xor
outsl
andl
mov
test
mov
sahf
sbb
test
push
std
aas
into
push
imul
enter
movsb
je
xor
adc
mov
test
and
loopne
adc
movsb
xchg
jge
push
add
outsb
adc
mov
pop
pop
popf
push
cwtl
xlat
inc
aam
test
xor
fisubrl
jle
mov
pop
frstor
negb
ja
hlt
mov
jo
sbb
ret
jle
nop
adc
jno
mov
sarb
add
inc
adc
push
sub
sub
jbe
push
add
dec
outsb
out
jecxz
outsb
dec
mov
add
es
sbb
jno
jmp
mov
loopne
pop
mov
and
push
test
es
mov
push
cmp
aas
jl
negl
inc
sti
es
outsl
xchg
cmp
cmp
add
add
push
sub
jns
adc
cmp
xchg
add
cld
push
add
fldt
add
inc
add
add
rorb
int3
dec
cmp
xchg
mov
popf
and
sub
adc
or
push
lcall
retw
orb
lret
call
mov
mov
ljmp
movsb
cmp
popa
mov
repnz
mov
jne
movsb
pop
and
divb
ja
mov
push
fdivs
test
out
jo
push
mov
cld
sub
incb
wbinvd
sub
test
hlt
outsb
add
cld
or
jo
fidivl
sbb
nop
xor
adc
repnz
xchg
dec
aad
adc
cwtl
xchg
cs
test
inc
push
cmpsb
push
mov
rcr
mov
repz
fistpl
inc
pop
inc
les
add
pop
push
cwtl
push
adc
xor
or
or
fucomp
ret
dec
mov
mov
test
mov
mov
dec
and
into
fcmovu
inc
loopne
inc
ret
lods
and
fcomps
popf
or
jne
outsb
mov
dec
inc
mov
dec
hlt
or
jg
push
sti
push
repnz
add
adcb
shrb
loopne
testb
pusha
rcll
in
jo
pop
jo
add
push
shll
or
ds
in
jo
push
adc
jle
rorb
inc
popf
lcall
stos
dec
jo
or
mov
leave
jb
and
test
stos
pop
add
ds
outsb
xor
add
mov
int3
push
inc
pushl
push
call
aam
mov
sbb
push
enter
mov
stc
enter
push
jg
push
out
adc
adc
dec
mov
notb
mov
leave
add
mov
into
sub
jl
pop
or
lods
inc
and
in
in
outsb
xor
test
dec
push
aam
or
xchg
mov
sarb
rclb
mov
pop
aam
jae
xor
rcr
jne
loope
mov
mov
pop
xor
pop
mov
je
push
inc
add
out
test
inc
xorb
stc
or
or
pop
or
sub
imul
les
jge
mov
push
idiv
dec
pop
pushf
inc
and
call
js
adc
cmp
adc
ljmp
push
pop
int
jo
enter
xor
sbb
call
mov
cmp
inc
jp
add
test
mov
push
push
fs
add
insb
adcb
push
push
nop
nop
fdiv
add
scas
mov
test
pop
test
jb
je
aaa
incl
sub
pop
jb
scas
in
icebp
hlt
pop
mov
incb
xor
shrl
cmp
dec
das
mov
fcmovbe
in
fs
movsb
jb
rcrb
movl
pusha
pop
jmp
push
pusha
insl
dec
or
adc
and
lock
lock
test
mov
push
addb
pop
and
add
mov
jo
filds
or
pusha
loope
enter
loope
or
mov
or
inc
inc
inc
xchg
adc
arpl
adc
and
imul
sub
adc
inc
sbb
add
push
push
movsb
mov
jmp
cmp
hlt
dec
out
ret
call
ja
nop
push
or
add
mov
lock
push
jo
pop
mov
fcomps
add
inc
jl
loop
lret
add
mov
jo
mov
outsl
cld
imul
xor
outsb
push
ss
cli
imul
and
fwait
sbb
into
int3
adc
ljmp
xchg
test
add
sub
call
add
sbb
pop
insl
cmc
lcall
dec
adc
sarb
aad
jg
push
sbb
je
mov
ret
and
test
testl
adcb
push
and
and
or
fdivs
pop
dec
adc
inc
insb
std
push
adc
dec
icebp
push
ret
leave
adc
shlb
orb
fmuls
add
add
sbb
call
test
ud0
std
mov
rorb
sbb
add
loopne
arpl
fwait
sub
std
adc
data16
adc
mov
test
js
push
dec
jp
scas
cmpsl
sub
clc
or
mov
dec
test
cmovge
movsb
mov
andb
push
inc
push
decl
lahf
popa
push
loop
push
mov
mov
fidivl
daa
test
push
add
add
cmp
mov
stc
in
cli
ret
jb
add
std
sbb
pusha
add
inc
add
in
mov
out
push
ret
lcall
cli
into
adc
dec
add
xchg
jl
shrb
or
test
ret
push
inc
clc
cmp
je
shrl
test
cwtl
dec
adc
or
push
add
and
adc
std
adcb
push
repz
dec
iret
dec
call
jb
fmull
out
pop
add
inc
mov
xor
sti
test
push
lret
cmp
mov
mov
mull
lock
std
popa
loopne
mov
inc
or
loop
jne
dec
cmp
xor
notb
xlat
inc
or
jp
ret
cmp
sarb
jb
test
pop
std
bound
mov
scas
jb
loop
ret
inc
faddl
fcmovb
push
mov
incl
pushf
cs
popa
mov
add
idivb
fists
cld
adcl
adc
hlt
gs
fisubl
popf
scas
add
or
dec
arpl
xor
pop
sar
fists
fcoml
cmp
mov
shlb
or
xchg
shlb
ret
sub
dec
mov
jo
pop
sarb
jb
cmc
stos
add
sbb
jge
fwait
mov
adc
mov
rorb
or
je
mov
or
xchg
cmp
invd
cmc
mov
sbb
dec
scas
sbb
push
mov
jne
jb
loopne
fcoms
inc
jmp
inc
and
push
int3
push
jne
xor
and
mov
jb
aam
les
decb
lcall
mov
sub
fldl
outsb
pop
or
inc
mov
dec
mov
mov
aam
icebp
movsl
test
stc
push
inc
mov
sbb
cmp
push
inc
push
sbb
scas
mov
sahf
add
pop
orl
adc
jg
adc
imul
push
popf
push
push
mov
mov
lahf
inc
std
adc
cmp
cmp
decl
faddl
add
test
or
add
push
inc
icebp
xchg
mov
leave
add
iret
and
push
push
pop
mov
or
dec
rol
add
mov
inc
and
je
mov
inc
lock
and
adc
addb
mov
jle
mov
push
pop
enter
xor
jle
test
clc
pop
sbbb
ret
les
dec
in
adc
pop
sub
icebp
mov
rolb
add
add
loop
mov
sbb
mov
cs
inc
mov
sbbl
jae
mov
inc
insb
mov
out
cvtdq2ps
sbb
cld
mov
or
aas
in
idiv
fxch
loopne
jne
or
mov
xchg
sbb
stos
cld
adc
testb
mov
lods
icebp
test
cmpsl
and
dec
fidivl
mov
pop
pushf
inc
pusha
xchg
jp
sahf
inc
jg
add
std
pop
arpl
ret
add
cmp
push
mov
lock
enter
andb
insb
insb
decl
add
inc
sub
xor
test
aam
push
icebp
mov
cmc
aam
decb
aad
push
push
push
pop
mov
inc
lods
loopne
ffreep
enter
jb
cmp
sbbb
int3
test
add
mov
loop
les
paddusb
cmp
popa
cmp
aam
neg
into
sub
pushl
js
ss
add
je
outsl
loopne
jecxz
idivb
aaa
mov
cmp
paddsw
push
je
mov
xor
inc
sbb
mov
push
jne
sahf
inc
xor
cld
imul
clc
or
mov
test
mov
out
clc
arpl
mov
xor
fbstp
sub
xchg
mov
or
pop
mov
pop
pusha
jne
adc
or
test
pushl
imul
mov
mov
sub
adc
out
les
sbb
ljmp
scas
test
add
sbb
push
jp
lock
mov
clc
xor
pop
lea
push
ret
fcoml
dec
addr16
xchg
mov
call
cmp
test
loope
push
and
loopne
inc
loopne
test
pop
clc
add
cli
inc
mov
sbb
jne
pop
dec
js
jp
in
or
aam
lods
stos
xor
push
lds
or
in
jl
sti
and
jno
int3
aam
stos
in
pop
addl
adc
inc
sub
add
add
inc
push
push
add
xor
xor
shll
mov
movsb
mov
sub
mov
xor
adc
and
fmul
mov
fsts
ljmp
sub
add
rorl
push
outsb
clc
bound
les
test
pop
or
ja
and
xor
inc
lods
adc
insb
cmovl
pop
and
rol
pushl
or
outsb
mov
movsb
icebp
push
mov
xchg
std
nop
xor
roll
jle
sbb
lock
push
mov
inc
mov
test
or
mov
push
pusha
or
push
lret
icebp
pop
inc
fs
or
pop
outsb
test
gs
test
fistl
or
pop
inc
cmp
lods
dec
fst
cmp
sahf
cmc
and
push
mov
push
icebp
adc
dec
sahf
mov
ss
mov
roll
inc
movsl
dec
cmpsb
call
rorb
mov
arpl
add
lods
or
cs
shrb
ljmp
add
push
idivl
fiaddl
jbe
dec
inc
xchg
mov
pop
rorb
dec
out
xchg
xchg
in
sahf
addl
dec
sub
movsb
jg
call
jecxz
add
into
aaa
mov
dec
bound
and
roll
mov
ljmp
and
cmp
or
clc
mov
aam
cmpsb
call
mov
aas
push
cmp
popa
std
push
scas
push
test
push
in
mov
sub
xor
push
lea
jge
mov
ljmp
andl
push
gs
clc
or
or
aaa
cld
lcall
sub
rcrb
or
inc
aad
flds
test
xchg
cmp
or
inc
cld
fdivrp
mov
mov
mov
jae
pushw
aas
mov
xchg
outsb
sbbl
xor
ficoms
testb
dec
aad
outsb
sbb
add
pop
cmp
test
jo
or
add
mov
fwait
test
je
sbb
arpl
inc
push
adc
test
stos
icebp
pusha
jmp
adc
in
jl
and
pusha
aad
loop
xchg
loopne
push
call
cmp
jl
mov
cwtl
add
adc
mov
testb
add
icebp
jmp
dec
out
mov
cltd
jp
outsb
add
call
in
inc
shlb
cmp
mov
add
fdiv
and
inc
ficompl
push
aam
int3
inc
xor
dec
or
xor
xchg
add
sbb
adc
xor
jmp
adc
int3
jo
hlt
jg
pop
add
inc
or
rcl
call
test
inc
dec
aas
pop
inc
cli
jbe
test
mov
je
or
in
mov
add
out
pushw
dec
inc
inc
jb
std
push
pop
inc
dec
push
pop
ljmp
xor
nop/reserved
ret
inc
mov
incl
mov
push
mov
icebp
cmp
movsb
nop
sub
gs
cmpsl
jne
hlt
xchg
and
js
dec
sub
in
cmp
sub
jo
ss
xor
pop
cmpsl
and
ret
sbb
mov
add
sub
mov
std
sub
push
fildl
or
xor
out
testl
jae
es
jnp
inc
aaa
jle
faddl
push
aad
pop
movsb
or
jo
mov
inc
xor
dec
and
imul
xor
mov
inc
cli
out
iret
pop
cmp
insb
dec
pop
or
mov
jmp
adc
lds
ret
xor
and
and
fucomi
into
int3
cld
inc
inc
or
aas
or
xor
inc
loopne
rol
cmovl
add
test
mov
add
ss
mov
outsl
inc
popf
push
dec
ja
shlb
fs
mov
cmpl
push
ds
incl
loop
add
and
movsb
decl
push
rol
or
cld
ljmp
push
int3
test
inc
push
dec
mov
mov
aad
scas
mov
mov
mov
std
fsubrs
setnp
sbb
pop
loopne
mov
cmc
aad
and
dec
mov
cli
mov
lods
or
dec
add
mov
hlt
sarb
fiadds
andb
je
dec
into
cwtl
ss
inc
mov
add
daa
xor
adc
ds
push
mov
mov
add
mov
push
cmp
into
divb
movsb
inc
adc
push
add
fisubrs
aad
push
fimuls
lock
add
ret
mov
cld
out
sar
fstpt
add
std
pusha
cmp
inc
fisttpl
xor
push
pop
dec
nop
xor
sbb
jmp
or
das
mov
add
jmp
out
and
pop
mov
rcr
mov
lods
mov
xor
jbe
inc
mov
in
adc
gs
sub
dec
push
jmp
pop
dec
push
jle
mov
popa
jecxz
add
adc
or
nop
or
inc
sub
mov
adc
je
mov
push
rorb
movsl
lds
mov
adc
stc
mov
jmp
or
das
pusha
pop
xor
xor
inc
and
dec
rolb
mov
and
icebp
call
sub
loopne
mov
enter
test
mov
fadd
popf
inc
loopne
test
push
fs
int3
daa
popf
and
data16
and
pusha
in
ficoms
mov
insl
subl
xor
mov
jmp
inc
and
adc
sbbl
loopne
mov
fiaddl
into
push
sbb
js
pop
jle
in
sub
xorl
aaa
and
xor
sarb
call
out
jb
mov
mov
or
loopne
mov
dec
test
push
jo
lods
cmpb
pop
lds
stos
mov
shrd
mov
xorl
push
popa
je
mov
add
dec
adc
lock
adc
push
call
or
subb
pop
fiaddl
std
cmpl
xchg
or
rol
fidivrs
cld
adc
jmp
orb
pop
inc
xor
add
xor
mov
jbe
add
js
insb
sub
dec
and
outsb
out
add
insl
and
lret
lea
mov
mov
decl
cmp
xchg
js
or
cld
inc
jmp
adc
pop
mov
sahf
or
add
dec
add
or
ja
outsl
mov
mov
jecxz
dec
xchg
cmp
mov
jmp
push
ds
pusha
mov
popa
mov
mov
loop
pop
sbb
mov
imul
mov
mov
arpl
add
dec
xor
inc
jge
push
mov
cltd
jns
jmp
or
adcb
add
cld
lods
pop
jae
lret
push
cld
nop
mov
pop
push
sub
sub
mulb
sub
pop
push
int3
out
pop
push
sub
push
gs
test
pop
aas
decl
sub
ret
or
fiaddl
out
arpl
cmp
shlb
and
enter
mov
xor
int3
cmpsl
add
cwtl
mov
sbb
jmp
pop
fbld
adc
test
imul
movsl
mov
jge
xor
cli
dec
ret
or
test
mov
or
pop
adc
jp
or
int
imulb
and
sarb
inc
adc
hlt
stos
std
xchg
lea
xchg
push
enter
lods
int
inc
int
rorb
push
jmp
jl
test
mov
push
pop
push
mov
ds
ret
or
xor
or
xor
add
jmp
push
mov
jl
mov
repnz
push
cmp
lods
sahf
shrb
pop
and
test
cmp
cmp
subl
mov
mov
cld
orb
shlb
adc
cld
aaa
sub
rorb
mov
and
rolb
cld
xor
inc
mov
push
mov
int3
clc
ror
and
push
jge
add
xor
mov
push
aas
aas
ret
cld
inc
add
sbb
std
adc
lcall
adc
ret
push
inc
xlat
adc
mov
incb
fs
or
fistpll
or
cmpsb
add
or
mov
push
or
out
es
jge
imul
push
push
inc
pop
shlb
fistl
stos
cld
jge
push
ss
cmp
dec
mov
pop
je
or
in
or
xor
fcoms
loopne
in
or
shr
mov
outsl
cmp
pop
hlt
and
inc
pop
cli
adc
testb
fldt
jl
cmp
inc
or
cmp
in
loop
mov
jmp
jb
out
jo
pushf
clc
pop
cld
cmp
add
or
es
inc
jmp
cmpsb
ret
sbbl
adc
mov
mov
inc
xchg
out
mov
push
mov
push
or
and
adc
pop
cld
test
call
jo
pop
inc
icebp
dec
pop
das
leave
repnz
add
jp
jg
mov
cmp
sbb
pop
stos
inc
clc
inc
add
dec
sahf
daa
push
xchg
das
pop
lahf
or
jl
int3
pop
pusha
leave
je
loop
sbb
push
push
call
lea
call
xchg
add
pop
cld
das
push
ja
xor
faddl
scas
les
mov
jno
pop
push
and
adc
jg
sbb
jge
add
or
mov
lods
add
adc
mov
loop
adc
jp
or
or
movsl
pop
adc
out
jge
mov
std
inc
call
pusha
pushl
lock
dec
adc
insb
sahf
jbe
add
sahf
cli
sbb
sbb
std
testb
sarb
dec
lods
lret
mov
ds
mov
out
or
call
pop
and
or
adcb
pop
add
loopne
addr16
lcall
jns
jbe
mov
notb
arpl
mov
cwtl
mov
sbb
lock
imul
push
xor
lds
push
fldt
sbb
push
call
nop
fadds
cmp
cmpsl
stos
or
add
or
rorl
push
ss
jb
push
lods
test
stos
or
add
fstpt
push
mov
fdivrl
fs
test
fsubl
int3
gs
push
sbb
pop
aam
xchg
mov
push
neg
mov
iret
sbb
in
mov
enter
xor
leave
push
jmp
dec
cld
cli
or
adcl
lock
and
xchg
inc
inc
or
clc
xor
inc
jmp
or
jg
dec
hlt
jo
orl
loop
outsl
cli
or
sahf
push
or
out
add
insb
int3
pop
inc
and
mov
push
jg
pusha
mov
push
mov
ljmp
je
inc
pop
push
xor
mov
inc
rcr
cld
xchg
cmpsl
call
loop
mov
mov
lea
jne
push
int3
add
inc
inc
inc
roll
cmpsl
daa
loopne
ret
pop
cli
or
sub
movsl
add
jb
dec
cli
push
scas
js
dec
inc
push
push
inc
stos
fsubs
mov
jmp
rcr
retw
mov
xchg
mov
jecxz
movsl
sbb
mov
cmp
and
jmp
mov
add
mov
mov
ds
aaa
call
nop
fcmovnu
xchg
jne
jl
jle
mov
sahf
xlat
push
loope
or
jp
lcall
adc
xor
adc
cwtl
lods
push
xchg
jb
lds
sahf
movsl
enter
or
inc
lea
push
ss
push
or
pop
aam
aam
pop
mov
push
fnstcw
pop
sub
dec
xor
mov
and
aad
or
or
mov
mov
mov
jle
jl
add
adc
xchg
pop
test
pushf
mov
mov
inc
xor
fs
and
jo
push
mov
outsl
mov
xchg
movsb
add
xor
inc
push
pop
and
xsavec
test
push
add
jp
mov
popa
in
cs
inc
imul
adc
clc
add
out
or
jbe
scas
call
push
sbb
mov
pop
dec
pop
inc
push
inc
jg
dec
mov
test
mov
popa
in
or
add
mov
add
in
or
lea
popa
fwait
or
dec
xchg
add
sbb
push
push
fisttpll
loopne
push
cli
std
outsb
adc
add
stos
add
rcrb
jp
movsl
pop
lcall
shl
xor
pushf
pop
add
jno
push
inc
xchg
add
pop
add
mov
test
push
or
mov
mov
xor
mov
mov
clc
gs
call
mov
in
pop
je
in
shll
mov
adc
push
adc
rcl
jg
in
lods
or
sbb
ficoml
push
push
pop
jge
pop
pop
inc
je
int3
add
mov
decl
cltd
movsl
data16
scas
mov
loope
scas
mov
pop
rolb
pop
add
test
fidivs
and
movb
jo
cmp
leave
mov
mov
je
jbe
push
add
ror
lret
mov
adc
mov
call
mov
fwait
adc
dec
test
loop
clc
je
lods
sbb
outsb
loopne
mov
ljmp
adc
aam
and
shll
test
out
xchg
clc
imul
mov
cli
add
into
push
incl
adc
gs
idivl
jae
xor
xchg
lea
cmp
push
mov
andb
add
or
sbb
or
pop
adc
rorl
mov
inc
xchg
movb
inc
xchg
js
xchg
icebp
pop
cld
push
rorl
cltd
lods
pop
sub
or
jb
inc
mov
jge
adcb
sbb
mov
rorl
dec
mov
outsl
mov
in
leave
push
cwtl
mov
ljmp
adc
out
sub
test
mov
xchg
mov
mov
or
test
movl
je
adc
pop
bound
xor
testb
push
sbb
jne
inc
sti
cmpsb
in
mov
xchg
out
call
push
sub
dec
sarl
jmp
cwtl
punpckhwd
subl
je
shrl
sub
mov
fwait
cmp
sub
cmp
cmp
clc
push
wrmsr
xorl
ljmp
sbb
mov
dec
push
dec
xor
jge
pusha
out
rorb
cld
shrl
cmp
rolb
insb
or
xchg
pusha
pmaxub
push
inc
test
or
cld
into
or
xor
sbb
push
pushl
push
loopne
push
loop
add
inc
test
inc
call
pop
xchg
ljmp
dec
movsb
mov
xor
mov
rclb
insb
jmp
movsl
or
adc
adc
fs
imul
xor
loop
cmp
push
cld
mov
les
imul
pop
jg
repnz
fistpll
add
sub
push
negb
or
mov
mov
xor
fisubrl
mov
push
adc
mov
repnz
cmp
mov
cmp
lock
adc
sti
or
mov
shll
mov
adc
cld
outsb
pop
in
push
fcoms
xor
mov
pop
or
xchg
in
adc
mov
inc
mov
cmp
pusha
xor
push
rorb
loop
addl
scas
icebp
int
lret
mov
ss
mov
add
mov
sbb
outsl
adcb
mov
push
movsb
movl
push
or
jp
hlt
sub
loopne
add
fbld
cmp
add
jg
scas
cmpsb
sar
sub
loope
or
mov
adc
lcall
cs
lret
pop
rorb
adc
adc
or
pop
or
rol
std
push
rcll
bnd
sahf
add
sbb
or
push
mov
push
pop
cld
xorl
pop
pushf
lds
dec
sub
out
dec
aaa
jne
stos
pop
sub
lods
out
movb
test
add
xchg
or
sub
das
sbb
jp
sub
inc
cmp
enter
push
sub
add
dec
or
pop
es
je
and
lock
and
add
push
xor
adc
shlb
sar
testb
and
aam
add
sbb
mov
clc
out
mov
hlt
or
sbb
sub
popl
clc
xchg
call
sub
das
loop
clc
adc
push
inc
rcr
xorb
pusha
cmp
or
hlt
testl
cld
decb
idivb
pushf
add
mov
xchg
es
dec
jl
xchg
and
lock
incb
pop
sbb
aaa
mov
std
mov
insl
or
lcall
lods
jnp
fimuls
or
aas
jb
pop
inc
cmpb
fnsave
push
mov
pop
repnz
sub
sbb
loopne
int3
test
cmp
mov
pop
adc
pushf
lea
ret
add
inc
scas
cmpsb
sahf
or
xchg
push
cmp
and
jne
adc
icebp
xchg
jg
movsl
inc
lcall
mov
sub
stos
rolb
inc
add
or
aad
scas
mov
dec
gs
pop
call
dec
outsb
loopne
stos
add
pop
push
mov
data16
aad
mov
scas
stc
test
incl
pushf
sub
in
dec
cld
daa
jge
jge
rcll
sub
mov
hlt
cmp
je
mov
sti
add
je
push
push
int
jle
jne
pushf
add
push
xor
outsb
imulb
les
and
ljmp
fs
sbb
push
ja
jb
nop
dec
cmp
push
test
mov
xchg
sbb
xchg
in
popf
mov
ret
imul
add
orb
icebp
bound
xor
test
jl
lock
loope
js
out
lods
pop
add
push
jb
ja
outsl
cmp
mov
or
add
pop
std
gs
repz
mov
fwait
loopne
test
lea
inc
fildl
ss
lret
mov
jae
inc
sbb
loope
cmp
je
decl
lcall
lods
cmp
decb
pop
call
shrb
dec
insb
cmpb
and
and
pop
jle
lods
pop
adc
xchg
cmp
push
or
pop
mov
aaa
jl
inc
stos
nop
hlt
mov
and
lcall
incb
scas
cmp
in
aam
mov
insl
or
inc
push
hlt
mov
stos
and
rolb
icebp
add
test
push
lods
or
sarl
int3
insb
ret
faddl
mov
push
incl
add
add
mov
or
jle
rcrl
add
ret
rolb
test
or
and
xor
xor
xor
dec
cmpsb
inc
pop
dec
jbe
hlt
xor
xor
cmp
dec
ud0
sub
pop
fidivrs
insl
lret
mov
fdivrs
insb
mov
add
inc
jmp
xchg
dec
idiv
or
fsubs
inc
jl
jo
mov
push
into
xor
pop
adcl
aam
mov
pop
fcmovnb
fadds
and
fimuls
pushf
bound
and
sbbb
inc
push
sti
mov
mov
push
push
push
inc
cmc
mov
test
dec
add
je
xchg
fisttpl
xor
pop
mov
fdivs
hlt
xchg
push
imul
fdiv
xor
or
mov
sub
mov
jns
cmp
cmp
test
jo
push
jp
cmp
push
mov
movsl
cwtl
mov
movsb
inc
add
xor
fadds
js
movsb
xor
popa
insl
add
and
add
pop
push
xorb
pushf
rolb
ss
adc
mov
das
inc
je
sub
jbe
add
pop
pop
sub
bound
sahf
movsb
orb
mov
lret
and
jne
testb
mov
push
push
or
mov
mov
mov
add
out
and
gs
orl
xor
or
mov
int3
xor
or
add
jno
sbb
rolb
insl
jmp
ret
ljmp
mov
ret
push
adc
sbb
fxch
movsb
pop
sti
bswap
lock
or
std
dec
push
xchg
add
shll
div
pop
jp
pop
jle
pop
sub
loope
xor
or
jb
add
xor
cmp
pop
sbb
int
push
mov
jbe
fisubrl
cmp
lock
cs
daa
in
add
incb
or
scas
pop
adc
adc
push
and
add
out
movsb
xchg
mov
inc
adc
pop
or
int
push
std
mov
dec
or
loope
or
stos
jle
jle
jo
aam
or
jg
aad
pop
int3
sbb
sub
or
or
inc
sub
adc
ds
add
scas
dec
rcr
aaa
or
icebp
mov
fsubrl
xor
orb
test
aam
adc
call
or
mov
inc
xor
jp
mov
bound
cld
jae
xor
or
lcall
fmul
dec
mov
push
adc
dec
push
inc
and
loope
loope
add
fsubp
test
roll
pop
sbb
ds
test
test
pop
repz
xchg
or
mov
popa
xchg
in
mov
jae
jae
cmp
mov
push
int3
into
jns
adc
jmp
mov
mov
pop
call
adc
or
push
dec
fldenv
loopne
mov
mov
loopne
into
mov
xchg
je
add
jl
mov
test
jp
jne
push
add
inc
xor
push
adc
mov
inc
movsb
inc
push
push
and
lea
inc
add
sbb
ret
pop
and
scas
sub
test
cmp
or
lock
add
insb
inc
jo
xor
cmp
test
mov
jbe
xor
add
sub
jle
cmp
aas
push
and
sub
mov
mov
sub
imul
fs
mov
jo
fsubrl
repz
js
in
sarl
inc
or
and
inc
call
push
inc
fbld
sbb
push
outsl
xor
and
gs
arpl
mov
andb
mov
xchg
xlat
xor
imul
sub
cmp
push
mov
aam
jg
lret
or
push
dec
push
or
cs
insb
lret
lock
xchg
rorl
and
add
and
add
adc
inc
popa
dec
scas
mov
inc
in
jle
mov
shlb
sub
das
rorb
sbb
sbb
popa
iret
clc
push
xchg
ljmp
cli
cld
loope
sub
stos
mov
inc
sahf
mov
hlt
xchg
cwtl
mov
inc
insb
xor
in
pop
adc
push
inc
je
jne
loopne
adc
cld
mov
dec
push
clc
mov
insl
mov
stos
add
ljmp
lea
sarb
enter
lds
jne
lahf
add
cli
rcrl
ljmp
shl
lahf
aaa
mov
push
popa
sub
xchg
or
sbb
lock
jmp
jmp
mov
cmp
sbb
dec
push
std
sub
and
sub
and
pop
push
pop
inc
test
xchg
ljmp
pop
hlt
pop
sarb
and
adc
xchg
inc
fisubs
enter
xchg
test
adc
sahf
add
ficoml
add
lcall
aaa
xor
sbb
shlb
call
and
adcl
and
xchg
in
mov
mov
ret
mov
mov
pop
je
jb
data16
pusha
pop
les
fadds
add
and
rorb
imul
jg
cmpsl
call
insb
movsl
incb
in
inc
xor
andl
int3
or
movsl
push
lods
mov
rolb
inc
mov
sbb
test
or
notb
adc
push
xchg
xor
ficomps
sti
inc
cmp
add
xchg
lcall
divb
rolb
inc
jmp
rolb
add
xlat
fadds
decb
xchg
inc
subb
push
push
pusha
pop
mov
jg
pop
mov
dec
jne
mov
or
cld
push
out
mov
lea
fbstp
jne
loop
imul
sbb
mov
loopne
mov
add
mov
or
test
int
mov
push
push
xchg
fcomps
cmp
out
aas
add
mov
xor
add
pop
mov
incb
aam
addl
and
jno
fistpll
push
push
inc
into
add
adc
outsb
xchg
xor
jb
mov
incl
inc
test
lea
xchg
sbb
cld
ljmp
sti
cld
ja
xor
mov
push
sti
out
bound
movswl
mov
shufps
mov
fnstsw
push
mov
cwtl
cmp
sub
push
testl
nop
pop
adc
fdivrl
pushf
call
adc
jp
and
adc
jp
inc
mov
xchg
and
cmp
pop
test
cld
xchg
int3
push
mov
cmp
jne
mov
je
ds
jae
push
aam
lock
mov
outsb
push
push
insb
add
test
push
fistpll
mov
mov
std
inc
mov
jge
push
push
jl
or
jl
xchg
lock
dec
out
ret
or
dec
push
mov
pop
test
in
js
jmp
adc
mov
adc
or
mov
mov
dec
xor
push
inc
or
pop
ljmp
mov
jmp
cmp
sub
xchg
lcall
add
mov
mov
push
test
ret
mov
and
daa
jmp
in
pushf
int3
cmp
lcall
mull
ret
mov
hlt
fdiv
adc
mov
mov
cmp
int3
mov
shlb
xchg
movsb
aaa
push
cmp
aam
dec
pop
xchg
loopne
inc
add
sbb
inc
and
dec
data16
push
mov
je
in
dec
mov
jle
outsb
mov
pushl
and
lea
inc
mov
mov
lret
mov
dec
jg
dec
ret
jmp
push
push
inc
in
xchg
or
or
mov
jge
mov
xor
fcompl
sbb
mov
bound
jne
dec
scas
fidivl
mov
call
pusha
bnd
mov
fisttpll
imul
outsb
jo
add
ss
mov
push
mov
lods
cwtl
loope
daa
hlt
jmp
xchg
les
xor
testb
je
push
pop
int
mov
movsb
jge
pop
stos
pinsrw
notb
cmc
aas
test
mov
push
xor
adc
lahf
shll
les
pop
cld
sbb
fcmovnb
push
push
mov
lods
insb
arpl
das
nop
push
push
test
inc
stos
ret
scas
ljmp
iret
xor
inc
pusha
sbb
hlt
push
mov
mov
ljmp
jo
call
cld
sub
mov
pop
insb
add
call
hlt
arpl
in
ret
test
outsb
sub
cmp
loop
cmp
orb
xchg
ret
sarb
add
hlt
mov
cwtl
mov
xchg
jno
lock
adc
mov
cmp
xor
rorl
call
add
lods
in
or
fistpll
mov
xor
xchg
lods
or
adc
push
rcrl
push
clc
add
adc
jl,pt
dec
push
sbb
mov
and
mov
pop
sub
mov
pop
pop
ss
rolb
fcompl
and
push
lock
out
xchg
add
mov
cmpsb
mov
mov
adc
ret
adc
pop
out
inc
xorl
xor
jp
enter
xchg
mov
rolb
adc
mov
add
jg
push
mov
in
push
outsb
and
scas
add
mov
imul
ret
pop
dec
push
mov
lock
jecxz
cmpl
adc
cld
jl
jno
push
inc
xchg
push
push
int3
int3
cmp
xor
cwtl
xchg
cmp
out
sbbl
arpl
movsb
or
fdivrp
das
ljmp
mov
fcoms
push
and
insb
cmpsb
push
jl
stos
test
and
add
and
jl
scas
aaa
dec
test
add
or
inc
das
push
rolb
fldl
or
add
lcall
fsubr
and
mov
dec
xor
mov
call
fsubrs
xlat
or
lods
dec
fs
pop
lea
push
push
in
push
xorb
sti
incl
mov
xor
add
int3
dec
loope
mov
mull
std
outsb
test
outsl
sub
push
roll
add
shlb
clc
sub
xchg
lods
jns
cwtl
pop
mov
mov
adc
and
lock
inc
cltd
push
mov
lods
aam
mov
cmc
decl
push
int3
stc
inc
push
das
add
clc
adc
mov
lock
sar
ret
push
cld
pop
iret
mov
add
aaa
cld
test
sbb
stos
sub
daa
or
test
fmuls
enter
adc
inc
pop
sub
cmp
gs
adc
jle
dec
and
out
cmp
push
and
or
and
xor
rorb
push
int3
mov
xchg
test
add
test
xchg
call
push
out
xchg
cs
pop
push
das
and
pop
leave
call
push
rsm
addb
and
pop
sub
jmp
dec
and
into
mov
push
add
arpl
mov
std
or
mov
test
pop
inc
pop
push
call
loopne,pn
leave
ret
clc
aas
cs
mov
or
jae
mov
cmp
popa
push
and
xor
adc
enter
ret
dec
jle
lock
push
sub
jne
in
shl
ret
xor
dec
push
pop
lret
fmuls
adc
cmp
push
ret
push
sub
mov
mov
xchg
xchg
daa
adc
mov
cmp
pop
pop
jne
fsubrl
inc
jo
movsb
data16
jecxz
add
push
and
lret
adc
sbb
movsb
cs
adc
and
mov
ljmp
rorb
test
ljmp
fistps
loope
adc
loopne
push
loopne
xchg
call
std
xlat
jnp
push
xor
pop
mov
add
inc
add
mov
in
cld
dec
cmp
das
xor
xchg
rorb
pop
gs
or
rcll
dec
cmp
sub
xor
xor
dec
jecxz
and
sub
hlt
outsb
xchg
inc
insl
inc
pop
push
clc
insb
mov
testb
push
loope
fdivs
je
pop
sub
test
sarl
xor
push
xor
xor
clc
jae
push
mov
adc
adc
push
jge
out
push
rcrl
and
lods
xor
movb
shrl
mov
xchg
notb
sti
inc
push
mov
or
xor
ficompl
pusha
je
or
jbe
mov
pop
inc
mov
inc
push
sub
mov
mov
mov
add
pop
aad
aas
lea
test
jg
sub
std
mov
test
mov
leave
es
aam
xchg
and
shlb
filds
test
add
xor
std
ret
xchg
adc
adc
lea
jge
test
jle
roll
jbe
push
pop
in
push
aam
push
fsubrs
loope
ljmp
push
mov
jmp
out
in
sbb
xchg
sub
test
cmp
clc
sub
sub
fwait
push
mov
pop
and
mov
dec
mov
stos
add
scas
sbb
int
cmp
dec
push
ret
nop
aaa
andb
faddl
pushf
xchg
mov
xorl
xchg
mov
ljmp
test
pop
sub
int3
inc
xchg
mov
lea
in
hlt
push
mov
mov
loop
pop
pop
jp
push
add
xchg
cmp
mov
or
dec
es
dec
jmp
test
adc
and
shlb
insl
mov
aaa
lea
pop
pusha
test
or
gs
inc
fidivs
mov
div
lahf
shlb
add
inc
xchg
sbb
clc
mov
xchg
inc
clc
cmc
fldcw
mov
andl
outsl
push
jl
fmulp
mov
add
es
add
pop
rolb
add
int3
xchg
or
add
arpl
mov
jne
add
xchg
das
js
jle
jmp
js
xchg
xor
and
pop
add
jge
mov
mov
in
push
std
rclb
mov
cmp
aam
mov
jb
xor
ret
int3
inc
push
and
es
popa
mov
sbb
add
adc
addl
ss
adc
aaa
xor
icebp
mov
mov
xorb
out
inc
rcrl
xchg
mov
push
adc
mov
push
loope
and
xor
jne
decl
push
shll
or
rcr
or
pop
in
shlb
dec
lods
in
fldpi
inc
mov
loopne
bound
fnsave
sbb
adc
ss
inc
and
in
push
stos
mov
in
je
sbb
enter
mov
lock
inc
add
out
add
xor
nop
inc
imul
push
into
xor
lea
cmp
cs
lcall
dec
cltd
mov
dec
inc
sbb
adc
mov
sub
sub
inc
dec
sbb
stos
test
add
add
push
into
subb
je
clc
pop
jo
imul
in
inc
pop
mov
inc
jo
mov
push
pop
xchg
gs
dec
xchg
jbe
js,pt
push
jno
mov
push
sub
mov
arpl
xor
arpl
push
xchg
or
mov
mov
cmc
inc
cld
lcall
jo
xor
mov
cwtl
dec
add
test
xor
pusha
adcl
push
push
call
test
mov
test
ret
push
mov
jae
data16
mov
push
jle
cmpsb
pop
add
or
push
add
test
xchg
pop
add
push
push
dec
pop
fsubl
jmp
fsubrs
pop
sub
hlt
shlb
adc
jg
hlt
mov
push
jno
xchg
jle
inc
push
mov
je
mov
f2xm1
ret
cltd
push
enter
mov
jle
cli
push
fstl
pop
push
daa
and
or
fdivs
lcall
push
add
adc
addl
iret
prefetcht0
int3
mov
push
dec
stos
mov
out
nop
push
stos
test
dec
push
test
or
sbb
movb
add
repnz
adc
call
repnz
jb
pusha
or
xor
mov
fcmovnu
arpl
push
idivb
xor
add
mov
cld
inc
xchg
decl
add
enter
hlt
lcall
mov
out
sbb
mov
ljmp
cmp
cli
mov
inc
notb
fsubs
daa
push
inc
push
sub
mov
shrb
bound
fs
ja
shl
xchg
or
push
cmpb
pop
sub
add
push
rclb
mov
aam
mov
inc
fs
xor
mov
inc
pop
inc
xor
jle
push
push
mov
add
loopne
sbb
dec
inc
jmp
rcr
lea
lock
lock
stos
je
pop
and
imul
add
sub
nop
adc
inc
push
sub
mov
inc
mov
push
dec
rcl
or
decb
sbb
and
jp
pusha
fdivs
pop
sar
sahf
mov
mov
insl
stos
jae
sbbl
adc
je
ret
cli
mov
mov
sub
push
cli
ds
xor
mov
dec
cmp
inc
mov
pop
les
cld
int
pop
cmp
xchg
cmpsb
inc
mov
inc
shrb
cli
push
or
mov
ud0
mov
pop
test
fstpl
or
insl
mov
push
and
mov
adc
int
add
jbe
mov
jl
xchg
push
cld
icebp
rol
adc
icebp
test
imul
mov
mov
sbb
add
jg
mov
push
test
lock
or
cs
in
decl
cmove
lds
test
push
lea
xor
or
xchg
ljmp
scas
mov
pop
adc
ds
pop
insb
jns
jmp
loop
xchg
push
mov
jnp
jb
dec
or
dec
cld
mov
sarb
decl
cmp
mov
dec
adc
ret
fimuls
in
jo
test
push
das
xchg
jbe
add
or
dec
or
movsb
jecxz
mov
or
cmp
add
mov
jg
pop
mov
mov
clc
inc
jp
aas
jmp
pop
mov
sub
gs
addl
mov
sub
pop
and
mov
call
sub
xchg
mov
jmp
push
loope
inc
aam
loop
jo
sub
std
dec
fs
mov
dec
pop
push
insl
insb
nop
cltd
xchg
js
adc
mov
push
push
dec
fcompl
push
add
xchg
test
or
push
xor
or
jp
shrb
je
adc
or
or
mov
sbb
mov
add
lods
mov
insl
mov
rcr
fsubl
adc
std
psubsw
orl
cmp
repnz
xchg
cld
xor
xor
loop
es
addr16
inc
dec
add
pop
or
inc
xor
pop
andb
push
shlb
nop
pushf
aam
mov
pop
loopne
push
int3
movsl
jne
lcall
call
repnz
mov
add
lock
inc
or
dec
enter
cs
mov
out
jmp
cli
lods
inc
push
ljmp
mov
mov
outsl
push
mov
add
jae
bound
gs
rcrb
xor
fsubrs
insb
and
andl
lock
repz
shlb
loopne
ret
push
inc
cmp
xchg
mov
lock
lret
in
jp
testb
ja
adc
jne
add
call
in
mov
add
jp
inc
stos
decb
xor
test
mov
ret
jo
dec
pop
bound
shlb
ljmp
xchg
dec
push
notb
and
fwait
pop
push
or
pop
icebp
jmp
adc
stos
mov
dec
push
dec
pop
pushf
push
jnp
or
repnz
insb
mov
sbb
jo
xchg
dec
cmpsb
fisubrs
xchg
push
xor
pop
push
mov
aaa
inc
mov
into
sub
arpl
adc
jl
mov
jg
xor
mov
push
sub
xor
repnz
mov
push
jp
or
in
add
call
mov
scas
mov
xor
or
sub
orb
rclb
sahf
pop
or
push
shl
and
add
inc
mov
inc
aad
cld
and
nop
inc
and
mov
or
and
ret
mov
ljmp
jg
adc
cmp
stos
mov
push
xchg
add
mov
call
outsl
mov
dec
popa
mov
and
pop
ret
or
pusha
xor
push
cld
adc
sbbb
push
pop
ret
icebp
jnp
cli
lods
dec
mov
add
clc
mov
push
inc
sti
adc
clc
mov
ss
jbe
scas
sbb
nop
push
adc
and
popf
shlb
gs
dec
rolb
mov
bound
push
push
xchg
sbb
xor
shr
mov
jge
mov
add
cmc
inc
ja
mov
roll
xorb
xor
mov
sub
or
push
cmp
xor
jmp
add
stos
jb
fs
inc
inc
jo
test
push
aam
loopne
pusha
orps
hlt
psubusb
test
test
andl
add
add
push
mov
add
xchg
dec
xchg
mov
cmp
mov
inc
jp
xchg
xor
pop
inc
xor
jge
xor
jb
push
mov
test
pop
jge
xchg
inc
add
lea
mov
mov
cmpsl
xchg
je
adc
aam
mov
faddl
pusha
and
or
loopne
jb
hlt
push
mov
das
jb
je
add
sarl
fadd
hlt
ret
xlat
or
mov
fisubrl
les
or
jmp
ret
pop
call
fwait
icebp
rol
lock
add
adc
loopne
and
in
inc
add
push
adc
pop
inc
cmp
adc
out
decl
fstpt
dec
movl
or
test
or
dec
cmp
pusha
int3
mov
inc
push
les
popf
loop
adc
data16
jg
dec
mov
mov
ljmp
cltd
shrb
daa
adc
push
fs
push
xchg
add
push
cld
pop
add
jg
pop
fmulp
add
pop
mov
mov
lret
loopne
in
sub
mov
std
lea
cmp
fisttps
out
sar
xor
jbe
inc
out
mov
mov
inc
and
push
mov
movsb
clc
or
jge
push
mov
xchg
aam
inc
push
push
sbb
fwait
sbb
sahf
adc
clc
test
mov
je
lcall
ss
inc
mov
cmpsb
cmp
cld
pand
inc
ja
xlat
arpl
or
push
ljmp
mov
lods
jecxz
ljmp
jb
cmp
orl
popa
gs
pop
je
xor
fiaddl
mov
mov
adc
pop
imul
faddl
punpckhdq
lea
cli
mov
lcall
jecxz
pop
sub
cmp
xchg
sub
sub
icebp
ds
arpl
inc
cmpsb
mov
lea
andb
sbbb
shll
call
dec
sub
pushl
mov
adc
sbb
ret
push
shr
incl
push
push
inc
gs
and
inc
jnp
xchg
les
fdivp
or
or
outsb
and
pop
sub
cmc
rcl
dec
aad
lods
rolb
cld
or
push
mov
std
pop
sbb
int3
mov
loopne
call
jo
rolb
dec
xlat
rcrl
ret
scas
push
dec
or
xchg
data16
pop
std
inc
ret
in
pushl
mov
push
clc
aas
and
lds
dec
or
insb
in
xchg
xchg
pushf
add
inc
cld
sub
mov
cvtps2pd
mov
mov
lret
jecxz
sahf
jne
pop
inc
iret
jo
dec
mov
dec
test
fcompl
jbe
push
rcll
mov
inc
cmp
cmc
add
mov
and
pop
mov
in
fs
jp
pusha
fs
je
adc
or
mov
mov
cmp
and
lock
jae
shrb
xchg
cli
outsb
mov
mov
push
sahf
repnz
push
and
cmp
jo
movsb
inc
out
fs
sub
cwtl
pop
jge
ja
push
mov
add
and
or
sub
add
pop
push
subl
test
cmpb
fdivs
inc
aam
mov
les
rcr
incl
xor
xor
insb
cmp
push
push
std
aas
xchg
jo
add
push
int3
pop
jp
and
loope
fiaddl
push
or
add
mov
call
push
pusha
and
sub
jecxz
pop
enter
in
inc
sbb
pop
push
xchg
stos
nop
test
ret
incl
jl
enter
negb
adc
cmp
insb
adc
mov
cmp
aam
or
test
psubd
mov
sarb
pop
idiv
lea
jmp
xchg
mov
sahf
mov
add
xor
into
int3
mov
inc
inc
jbe
and
int3
pop
xchg
outsb
push
loope
add
push
aaa
test
fwait
inc
sub
push
or
lods
sub
adc
mov
testl
std
or
mov
add
inc
leave
mov
fmull
lcall
cmp
adc
lret
jle
adc
pop
pop
mov
mov
or
add
dec
mov
iret
lea
sub
enter
out
rolb
inc
fadds
jmp
pop
jnp
std
outsb
jbe
fcmovb
ljmp
call
push
adc
jl
shlb
or
pop
sti
add
sbb
mov
push
cmp
mov
shlb
cmc
and
es
lcall
or
ja
inc
adc
inc
pop
fs
add
shlb
mov
add
xor
pop
test
pop
adc
mov
add
ret
pop
clc
pop
jo
mov
sub
mov
cwtl
aaa
cmp
loopne
or
in
push
outsb
std
xchg
jge
dec
or
loopne
push
cmc
outsl
adc
pmuludq
decl
add
imulb
add
icebp
jb
mov
std
mov
mov
add
or
in
xchg
rol
push
push
cmp
call
mov
pop
mov
clc
sahf
test
stos
test
mov
sbb
test
push
sub
xchg
sbb
mov
and
out
mov
xchg
divl
add
adc
pop
scas
mov
cwtl
les
stos
subb
movsl
xchg
icebp
mov
nop
push
cmpsb
mov
lcall
push
dec
int3
mov
cmp
insb
mov
cmp
out
cmc
and
or
xchg
cmp
aad
cmc
add
and
xor
clc
push
mov
and
repnz
ret
sub
bnd
cmp
xchg
mov
add
inc
jmp
into
push
incb
mov
sub
sub
mov
mov
adc
cld
jo
push
fcmovb
call
push
std
andl
inc
mov
dec
das
test
xchg
mov
in
dec
or
dec
je
orb
push
mov
sub
xchg
inc
outsb
andb
xor
pop
cmp
inc
or
out
adc
push
gs
lea
aaa
mov
add
imul
popa
adc
cs
jmp
push
movsl
bound
cmp
rclb
negb
sub
lea
mov
insb
cmp
mov
add
sbb
add
xor
xchg
push
jle
add
into
stc
jg
mov
push
test
cwtl
cmp
mov
in
xchg
and
jmp
and
or
inc
es
xor
add
mov
xchg
insb
js
xor
loope
test
or
test
dec
ret
sub
pop
push
int
nopl
pop
inc
push
ret
and
lea
mov
dec
push
xchg
mov
pop
rclb
add
into
add
lret
mov
mov
sti
js
push
adc
xor
int3
stos
stos
push
stos
mov
insb
call
inc
fldt
xor
jmp
cmpsb
push
xor
pop
or
sbbb
push
inc
or
and
test
scas
add
lret
mov
push
add
sti
fists
jecxz
xor
inc
rorb
repz
call
ja
jp
or
inc
push
jmp
mov
lods
lock
and
shr
adc
push
adc
and
push
notb
test
jns
cvtpi2ps
push
loope
jle
xchg
xor
jnp
xchg
jle
in
xchg
sahf
out
xor
dec
mov
addb
sub
xchg
scas
mov
dec
scas
cmpsb
jnp
fisubl
or
adc
ljmp
dec
add
push
lret
loopne
pushf
test
pop
ret
mov
fimull
cld
jb
stc
clc
and
sbbb
sbb
fucomip
xchg
pushl
roll
out
sbb
add
in
sbb
or
cmp
mov
xor
adc
loope
dec
push
data16
movsl
das
dec
add
adc
lcall
mov
sub
or
or
adc
sbb
push
cwtl
sub
ds
in
outsl
pop
cmpsb
sbbb
popa
mov
decb
mov
test
jae
ja
lcall
gs
cwtl
imulb
jnp
aaa
mov
ds
mov
add
mov
js
insb
aam
push
adc
adc
leave
jmp
gs
lret
and
xchg
jmp
call
push
cld
jp
int3
sbb
movsl
scas
mov
mov
movsl
icebp
int3
popa
mov
fxtract
push
mov
push
jnp
pop
push
mov
mov
fmuls
stos
add
cwtl
mov
sub
add
sub
idiv
xchg
out
add
adc
int3
test
hlt
add
adc
xor
xchg
ja
mul
dec
push
and
add
pop
push
cli
mov
pop
je
iret
dec
jg
and
mov
mov
bound
or
mov
sbb
dec
add
int3
inc
insb
outsb
dec
pushf
inc
shrb
push
and
cmp
sbb
inc
jge
clc
lods
inc
repz
cmp
sbb
cmp
inc
pop
or
inc
fmuls
xor
ljmp
dec
cmpsb
xor
jo
pop
fs
stos
pushf
inc
mov
call
aad
or
cld
shrb
outsb
xchg
std
mov
fs
mov
pop
inc
mov
mov
das
adc
test
les
mov
inc
inc
cli
sbbb
push
pusha
mov
jg
xor
ss
lea
or
mov
scas
into
sub
pop
loopne
je
mov
pop
pop
push
hlt
mov
push
inc
repnz
orl
dec
test
sub
data16
fdivr
testl
sar
es
jb
insl
sbb
jmp
cltd
mov
jno
int3
jbe
push
loopne
int3
add
lea
cmpsl
ffreep
scas
adc
sbb
lods
xor
ret
cli
adc
loop
cmpsb
and
adc
iret
cld
mov
add
popf
into
icebp
std
mov
orl
or
sub
mov
cwtl
xor
mov
inc
and
ja
jb
push
mov
jge
jbe
in
sarl
fisubrs
stos
inc
and
sbb
push
jo
add
in
data16
aas
out
test
decl
push
shl
rorb
sub
bound
ret
jp
mov
subb
in
std
outsb
mov
repnz
add
adc
fiadds
mov
mov
push
add
add
mov
xlat
mov
leave
test
lock
adc
ds
sbb
adc
mov
outsl
es
push
fldenv
movsb
punpckhbw
push
mov
movsl
mov
cld
jae
mov
call
iret
shlb
and
cli
jo
xor
jl
push
adc
xor
dec
cs
test
add
push
mov
dec
push
sub
add
lock
jo
xchg
add
hlt
or
sbb
sbb
insb
sarl
bound
adc
and
in
mov
shr
adc
lock
jb
test
or
mov
mov
and
mov
xchg
outsl
cld
std
popf
xor
xor
aaa
rcrb
cmp
cli
cmp
xor
shrb
xchg
push
mov
dec
call
adc
push
inc
hlt
or
add
sub
inc
int
push
fistpll
jb
or
dec
rclb
mov
xchg
sub
jb
push
xchg
leave
es
mov
pushf
cmp
ficomps
push
fmul
add
ss
dec
dec
add
push
movsb
mov
loop
adcb
sbb
stos
test
ljmp
addl
or
dec
cli
push
orb
and
ds
iret
outsb
sbbb
jmp
push
test
bswap
jmp
ret
or
insb
add
jo
mov
pushf
movsl
inc
jmp
xor
fcmovne
cmpb
mov
call
in
lcall
xor
mov
mov
jle
negl
nop
push
std
sbb
adc
push
cmpsl
push
sahf
xor
pop
inc
ud0
and
inc
sub
push
shll
add
xorb
je
pusha
jl
sub
je
rcll
js
add
push
xchg
xchg
lods
inc
inc
push
cs
test
cmp
test
mov
cmp
mov
lret
adc
dec
testb
push
push
mov
loop
mov
sub
mov
inc
xchg
hlt
pop
mov
mov
and
or
push
jne
cmovp
pop
scas
stos
sub
test
inc
stos
sub
insl
test
mov
gs
or
inc
pop
int3
adc
inc
add
pop
ss
inc
std
mov
outsb
aaa
outsl
adc
test
mov
pusha
pop
ds
push
inc
xchg
outsb
les
pusha
inc
push
gs
stos
jg
push
movb
insb
sub
pop
jne
xor
pop
hlt
mov
push
dec
loope
aam
cld
lret
adc
pop
or
mov
aas
int3
out
test
dec
call
in
aam
outsl
scas
ss
les
inc
jb
enter
xlat
xor
lcall
sbb
jmp
lea
gs
cmp
and
mov
xchg
sub
out
test
or
xchg
in
mov
and
xor
sbb
xor
ja
aas
dec
test
push
test
mov
adc
sbb
je
nop
scas
add
mov
push
sbb
call
and
lea
push
add
clc
jno
xor
adc
ret
jecxz
test
shlb
out
jge
aad
jae
mov
adc
pop
clc
mov
push
mov
sbb
into
gs
and
sub
ret
loope
nop
rcr
or
nop
push
or
rol
call
sbb
rorb
dec
add
data16
mov
ret
or
mov
call
rolb
or
insb
ret
cli
inc
mov
push
mov
mov
cmpsl
call
push
test
cmovo
and
mov
ret
faddl
cld
out
and
push
mov
jnp
mov
mov
cmpb
je
mov
popf
test
pushl
cmp
push
imul
xor
nop
xor
cmp
jne
test
or
sub
inc
sbb
add
push
dec
ret
imul
rol
or
pop
dec
test
jg
shrb
jmp
rorb
call
shl
push
push
or
mov
fstpt
adc
sahf
xchg
orl
ss
ljmp
pop
push
and
xlat
ret
dec
add
add
dec
int
je
lock
and
push
aam
add
xchg
pop
push
or
jl
mov
xchg
subb
mov
aam
enter
in
lea
jne
sub
icebp
cmp
mov
pusha
ret
dec
mov
insl
leave
push
cli
cmp
mov
enter
pop
adc
mov
or
fcom
push
out
rorb
data16
push
adc
or
inc
push
imul
shlb
gs
xor
mov
add
mov
pusha
cmp
pop
fstpl
push
adc
xchg
push
mov
sub
mov
gs
push
xorl
rorl
xor
nop
mov
sbb
adc
pop
ret
sub
adc
cld
lock
sbb
dec
push
mov
xchg
mov
jle
stos
inc
push
loopne
push
or
shlb
sbb
add
jbe
fimuls
dec
ljmp
sub
rol
add
pop
sahf
push
data16
rol
decl
sub
pop
jle
movsl
outsl
andb
insl
fwait
aaa
inc
jle
inc
cli
and
sti
mov
imul
lock
out
xchg
pusha
jb
push
pushf
outsb
and
xor
pop
mov
mov
cmp
jge
sbb
mov
add
cmp
mov
outsb
dec
call
clc
ret
inc
mov
addb
adc
cmp
ret
je
data16
inc
push
enter
add
push
insb
xor
fs
push
movsl
clc
jb
ljmp
mov
xor
dec
dec
ljmp
clc
call
sbb
lret
push
mov
test
jae
sub
or
pop
je
movsb
adc
push
mov
sti
mov
icebp
or
pop
mov
leave
push
je
xchg
les
cmp
stos
adc
test
popf
jmp
push
adc
shlb
mov
and
je
sbb
test
test
scas
addb
xor
xchg
pop
movsb
push
sub
popa
fmuls
inc
mov
add
adc
lock
push
sbb
pushl
mov
jl
lock
sbb
adc
push
sbb
pop
stos
adc
cmpsb
xchg
xchg
jnp
nop
inc
mov
popf
fmuls
les
js
cmpsl
xor
dec
pusha
bound
inc
stos
push
mov
fs
adc
roll
pusha
adc
lea
inc
jp
and
add
and
or
sbb
sub
lret
add
in
push
sahf
adc
push
push
outsl
xchg
xor
je
add
pop
and
pop
xor
sub
mov
push
and
push
cs
inc
xor
and
lahf
add
jl
fistps
adc
and
adc
push
xorl
stos
add
ret
and
mov
imul
cwtl
add
cmpb
loopne
mov
xchg
cmp
adc
ljmp
mov
test
push
mov
popl
in
inc
mov
mov
bound
or
shlb
mov
jo
lret
or
add
mov
enter
mov
insl
adc
jle
fdivr
pop
or
js,pt
inc
cmp
sbbl
or
ret
push
decb
xchg
hlt
pop
je
mov
mov
pop
pop
jne
rclb
sbb
pushf
clc
add
in
out
adc
cmpb
pop
clc
inc
data16
mov
fadds
add
aas
push
insl
sti
movsl
jle
fucomi
call
mov
jo
adc
jmp
or
ja
dec
add
add
jmp
les
sbb
daa
add
test
sub
mulb
je
xchg
xor
xchg
jle
fbld
xorl
loope
adc
push
wbinvd
jl
jne
gs
not
cmp
hlt
inc
sub
or
ficoms
dec
lcall
push
pop
dec
jne
add
xchg
pop
push
push
leave
or
faddl
fisubrs
jmp
mov
or
shlb
into
int3
add
fisubs
jno,pn
inc
int3
mov
xchg
inc
nop
sbb
pop
rcrb
pop
out
push
pop
addr16
adc
mov
lea
das
adc
and
or
loop
push
testb
inc
adc
test
call
outsb
add
pop
cli
int3
adc
pop
mov
mov
movb
rorb
add
and
out
inc
adc
cwtl
icebp
movsl
orb
lahf
inc
and
pop
mov
push
aas
cli
cli
inc
pop
addb
sbb
mov
test
fisttpl
out
stos
mov
out
movsb
sbb
xor
test
or
ficomps
or
pop
call
dec
push
add
hlt
push
adc
inc
xchg
test
lea
ret
mov
pop
test
lods
inc
je
mov
fmull
jge
jb
push
insb
mov
push
push
pop
xchg
shlb
xor
pushl
call
test
cwtl
inc
xchg
popa
sub
xor
push
fdivr
orb
mov
mov
push
mov
cltd
sbb
nop
add
pop
in
mov
sbb
push
into
scas
ljmp
les
inc
lcall
add
int3
sub
or
jle
xchg
pop
rclb
add
jbe
adc
sti
inc
sti
xor
adc
adc
push
xlat
cltd
out
mov
fsubrs
call
mov
xchg
add
pushf
mov
push
cmp
mov
mov
jg
cmc
ret
movb
fadd
rol
or
jge
ss
hlt
decl
xor
and
adc
adc
dec
jg
rcrb
test
les
lods
lret
adc
clc
aam
stos
shll
mov
jb
cmpsb
jp
fildl
mov
jl
addl
inc
or
movsl
push
inc
xchg
mov
icebp
arpl
adc
insb
loopne
add
xor
xor
pop
or
pop
mov
mov
jnp
dec
add
sar
lcall
inc
add
int3
inc
repnz
push
mov
fxch
adc
inc
mov
test
lock
inc
inc
ret
cli
test
push
test
in
enter
pop
les
popa
pop
dec
stos
jbe
jb
rolb
mov
inc
lods
outsl
pusha
test
add
bound
ljmp
ret
bound
rclb
ret
cltd
dec
cli
ds
fsubs
popa
inc
mov
push
push
inc
shrb
aaa
ficoms
inc
mov
push
add
mov
mov
dec
bound
popl
nop
push
decl
incl
int3
ret
sbb
jge
test
sub
push
jg
je
add
ret
push
inc
or
dec
gs
mov
cli
dec
inc
data16
sbb
inc
iret
clc
mov
mov
testl
push
pop
or
adc
pusha
pushf
sub
sbb
outsl
mov
pusha
ret
push
adc
stc
fmull
push
or
push
adc
jmp
dec
movsb
outsb
pop
xchg
rolb
push
ret
neg
pusha
ja
sarl
push
jb
dec
adc
ljmp
inc
lea
cmpsb
and
inc
ja
xchg
lcall
mov
xor
push
data16
je
push
dec
add
lcall
ds
add
mov
push
mov
xchg
add
dec
push
mov
mov
mov
mov
js
xor
add
jnp
shlb
icebp
or
movq
clc
add
ljmp
add
mov
or
adc
shlb
jg
add
cmpb
mov
mov
fcomp
cwtl
clc
outsl
push
and
adc
sti
gs
mov
fstpl
sbb
pop
and
or
cld
dec
push
shlb
test
lods
adc
movsb
and
dec
adc
or
and
sbb
xchg
js
int3
loopne
aas
sub
push
cli
mov
stos
rcrb
ljmp
jl
mov
ret
daa
mov
je
aam
sarl
add
push
into
inc
movsb
fdivp
andb
jmp
and
and
movsb
fldl2e
mov
outsl
mov
mov
pop
add
push
adc
add
sarb
push
pop
add
jmp
addl
jmp
stc
xchg
ja
pop
or
dec
and
aaa
xor
pop
mov
test
clc
or
xchg
sbb
push
add
nop
add
pop
jno
movsb
xchg
inc
jne
nop
mov
mov
es
cld
aas
leave
push
push
pusha
clc
pushl
lods
and
mov
add
or
adc
mov
xchg
clc
jo
add
xchg
sahf
aam
rolb
scas
add
lcall
inc
hlt
aad
and
in
dec
out
and
push
xchg
dec
std
push
jmp
and
lds
mov
cmpsb
lret
push
xor
rorb
std
pop
xchg
jae
mov
mov
adc
jne
xchg
jne
adc
adc
push
pusha
pop
movsb
ljmp
cmpsb
ljmp
jbe
loopne
adc
mov
push
stc
jbe
jb
lea
test
lret
shlb
js
inc
dec
js
lds
stos
cmp
fs
jne
dec
sub
inc
xlat
dec
outsl
dec
pop
cli
inc
xlat
insb
leave
stos
add
push
xchg
fcompl
dec
outsb
sbb
mov
jg
adc
pushf
std
in
push
mov
aad
xor
mov
gs
sub
add
fcom
fwait
testb
push
inc
int3
inc
pop
sub
dec
push
nop
popf
add
frstor
mov
loop
jns
lock
filds
jne
push
rolb
out
add
jmp
out
mov
gs
ficoms
or
pushf
je
push
pop
nop
rorl
cmp
and
cmp
sub
jp
incl
mov
cltd
sub
lock
jae
pop
mov
push
dec
dec
movsb
out
mov
mov
pop
mov
mov
xchg
sub
pop
inc
sub
ret
sbb
mov
jo
xchg
mov
pop
mov
outsb
cmpsb
xchg
push
cmp
jmp
or
into
xor
popa
cli
dec
jmp
jo
dec
pop
popa
or
pop
inc
inc
xor
rorl
cmp
xchg
dec
je
xor
sbb
lret
mov
push
cwtl
incl
fcompl
push
clc
fwait
lock
ret
std
jge
push
add
cld
in
subl
adc
ss
and
adc
adc
push
jge
test
mov
fs
dec
pop
add
xorl
in
jbe
fwait
add
push
in
jbe
mov
int3
repz
push
push
hlt
xor
sbb
je
je
add
loopne
imul
dec
add
xor
jg
sub
es
test
push
push
or
int3
cmp
rcrb
or
cld
push
je
ja
cli
icebp
mov
arpl
dec
cli
push
inc
sbb
fs
sub
adcl
cli
push
xchg
lock
add
cld
scas
rcl
divb
mov
mov
and
scas
and
in
in
pop
pop
mov
mov
outsb
insl
xchg
adc
xor
adc
dec
or
add
je
pop
inc
loope
gs
outsb
cmp
sbb
les
mov
js
pop
ret
jecxz
jmp
rclb
dec
fcoms
mov
iret
cmpsb
jns
mov
repnz
push
aam
rclb
cmc
sbb
mov
stc
loopne
inc
clc
inc
xor
mov
add
or
sub
or
push
out
aaa
fs
imul
xchg
inc
push
push
cli
xor
rcrl
or
fcomps
pop
push
push
in
test
or
pushf
js
adc
mul
adc
sbb
sbb
pushf
mov
rclb
insb
ss
dec
loop
shl
xor
stos
lcall
in
inc
mov
fwait
mov
sub
lods
cs
adc
ss
xor
xchg
int
fdivrp
mov
shlb
orl
insl
jecxz
lods
icebp
clc
cmp
dec
int
add
jge
add
push
push
filds
cld
push
ljmp
inc
adc
and
lret
push
mov
lea
xor
and
movsb
cwtl
pop
stos
ja
test
push
leave
dec
jl
pop
cmp
call
push
nop
push
pop
sbb
sub
xor
or
jo
je
mov
adc
aas
sbbb
mov
sub
aad
add
pop
insb
push
sbb
outsb
push
dec
std
sub
shl
sbb
sahf
ret
std
add
xor
jne
jecxz
ss
inc
scas
inc
mov
push
cwtl
outsb
jo
ret
repnz
call
sahf
mov
push
in
sub
xchg
dec
inc
pusha
icebp
mov
pop
sahf
lcall
ljmp
movsb
cmp
iret
arpl
inc
sub
mov
test
push
pusha
push
fxch
imul
push
mov
push
push
test
mov
fmuls
add
fdivrl
out
add
mov
ret
clc
push
jb
adc
rcrl
jg
add
shrl
lock
dec
les
ds
hlt
sub
in
pushf
sbb
ret
or
or
inc
cld
test
push
jne
dec
out
clc
adc
cmp
dec
cmp
ret
aad
add
jl
mov
ljmp
push
cmp
jecxz
inc
pop
adc
mov
push
movaps
xchg
push
popf
mov
xor
cwtl
notb
jmp
mov
das
rol
mov
pop
ret
pushf
insb
xor
and
sub
cmp
xchg
and
sub
test
loop
repnz
sub
sbb
inc
popa
mov
pop
cwtl
in
inc
aam
ljmp
push
xor
mov
push
mov
clc
inc
aaa
push
ljmp
call
adcb
sub
inc
stos
rorl
imul
cmp
jmp
std
push
mov
mov
jl
jbe
push
rorb
das
mov
je
or
lret
sar
data16
dec
or
ud0
cmp
inc
loopne
aas
decb
mov
or
add
stos
loopne
cmp
and
or
jle
std
out
es
lea
dec
out
leave
adcb
int3
jl
xor
je
inc
sar
int
loopne
xor
cmp
aaa
ret
jp
sahf
inc
push
cmp
ss
xor
cwtl
or
push
cld
pop
mov
daa
or
mov
leave
push
pop
push
es
sbb
fcmove
mov
sbb
dec
int
ljmp
adc
out
push
lret
push
push
mov
add
inc
pop
jle
jmp
lock
outsb
cmp
push
clc
pop
cltd
cmp
movsl
mov
fwait
jno
xchg
cmpsb
call
sub
jne
or
adc
adcb
movsl
rolb
pop
data16
enter
pop
jmp
mov
push
push
dec
test
addl
xor
and
add
test
inc
mov
add
pushf
pop
loop
and
movsb
sub
loopne
adc
mov
jge
or
sub
mov
hlt
jo
xor
js
pop
popa
jl
pop
addr16
loopne
add
test
jle
xorps
fmuls
test
cwtl
mov
adc
cli
push
inc
or
js
mov
cmpb
fmuls
std
rcl
movsb
call
ljmp
adc
or
out
adc
shl
mov
or
je
adc
fmull
fadds
cwtl
aaa
pop
adc
mov
call
cli
add
xor
add
xor
les
out
adc
dec
pushf
inc
je
xlat
mov
inc
mov
or
adc
fwait
shl
jecxz
push
aam
into
test
aas
in
or
dec
sub
or
jmp
sub
test
negl
dec
add
in
orl
out
xor
jmp
add
pop
xchg
and
push
mov
mov
add
rol
mov
adc
movsb
addl
sub
mov
test
das
clc
call
movsb
int3
call
push
mov
xchg
dec
cmp
dec
add
jo
add
push
pop
or
mov
push
cmp
fadd
xor
pop
adc
gs
call
js
adc
add
sub
push
lea
jne
and
adc
and
lret
push
call
enter
sub
sbb
movsb
and
push
cmpsb
sub
pop
mov
pop
mov
push
cmp
xchg
cmp
xchg
fiadds
adc
adc
mov
jl
sbb
xor
or
xchg
push
mov
xor
mov
shll
enter
mov
hlt
add
push
mov
cmpsb
shlb
jne
int3
pusha
addr16
dec
add
or
sub
jmp
inc
push
push
addr16
fcoms
gs
loope
aas
sub
testl
in
dec
sbb
or
or
in
mov
dec
push
jmp
push
sub
xchg
cmp
movsb
xchg
mov
stos
xlat
mov
stc
push
mov
jmp
or
sbb
test
mov
cmp
lock
arpl
push
lock
mov
adc
ds
add
and
jp
leave
je
loopne
and
aam
mov
jp
outsl
ljmp
push
enter
gs
std
sti
mov
add
cwtl
cli
and
add
orb
jmp
pop
pop
cmp
pop
pop
cmp
gs
inc
or
dec
rol
pushf
cwtl
cmp
hlt
cmp
push
pop
sbb
insb
mov
and
movsb
mulb
movsb
jne
gs
or
add
std
dec
mov
std
mulb
cli
test
outsb
dec
cli
mov
sbb
push
add
dec
or
xor
movsb
inc
push
or
int3
mov
mov
push
or
pushf
lcall
lret
clc
mov
rcrl
mov
call
ret
sbb
xor
xor
and
das
push
cmp
in
ja
xchg
add
clc
or
lahf
hlt
xchg
sbbl
push
push
enter
scas
adc
iret
gs
loope
xchg
or
cld
insl
inc
inc
add
mov
cmpsb
adc
dec
pop
xchg
fimuls
push
mov
pminsw
in
inc
inc
push
and
add
mov
sub
loop
add
inc
test
in
and
and
ds
jl
sub
daa
rorb
dec
ret
push
aam
fsubl
jb
fisttpl
add
stc
cmp
fbld
sbb
add
cs
inc
inc
mov
imul
clc
xor
mov
cmpb
xchg
sub
out
cmp
mov
xchg
out
xor
mov
push
mov
aas
fdivrl
push
inc
decl
arpl
mov
push
pushf
or
sbb
xchg
pop
mov
jns
dec
add
enter
mov
and
add
in
or
call
push
dec
test
lock
aaa
mov
gs
aaa
nop
ljmp
adc
mov
and
call
rolb
test
inc
and
cmp
add
pop
xchg
jge
dec
push
imul
iret
loop
fs
pop
or
mov
push
cld
pop
adc
fisttps
pop
jbe
ret
adc
inc
loop
cmp
xchg
pushf
enter
xor
pop
or
int3
adc
and
out
push
nop
insb
inc
aam
outsl
push
mov
push
pop
mov
shrb
lahf
push
loope
push
fistpll
cmp
std
out
push
mov
inc
add
xor
add
pop
push
push
or
test
pop
ficompl
insl
cld
and
mov
jl
nop
mov
dec
push
cld
loopne
push
loope
mov
ss
loope
xchg
adc
fistl
adc
pop
lret
push
faddl
push
mov
ret
call
es
outsl
rolb
int3
jge
sbb
icebp
rcl
xor
ret
jbe
jle
das
mov
add
sbb
mov
pop
pop
pop
jbe
jne
movsb
je
mov
cli
mov
repnz
scas
add
int
mov
dec
jmp
jl
std
or
lret
inc
push
test
push
sbbb
inc
mov
sbb
pushf
push
call
lock
cmc
je
jno
call
push
mov
out
dec
cmp
pop
pop
add
scas
xchg
xor
mov
sub
movsb
testb
popa
aam
inc
flds
xor
lock
fwait
sub
test
flds
adc
sbb
nop
into
shlb
or
mov
add
jo
loop
daa
mov
xor
inc
call
pusha
sbb
dec
fisubrs
ss
fldcw
fisubl
mov
out
push
jl
test
or
push
repnz
mov
or
sub
pmaxub
frstor
pop
pop
sub
adc
sbb
or
add
push
cld
rcl
mov
and
dec
fs
stc
subl
sub
mov
push
mov
fbld
orl
add
pop
mov
loope
and
lods
adc
movsb
push
and
mov
je
loopne
and
jmp
popa
dec
mov
push
arpl
je
mov
add
fdivrp
ret
mov
in
inc
ret
not
loopne
add
jg
js
gs
rcrl
scas
or
inc
mov
push
call
in
mov
adc
lcall
mov
mov
mov
test
aad
cmp
adc
adc
pusha
sub
int3
xor
xchg
mov
inc
add
sar
add
push
adc
mov
cli
loopne
mov
outsb
popa
push
jae
mov
xor
test
sub
or
jg
pop
or
inc
add
inc
jl
xchg
or
add
mov
mull
shrb
xor
add
rclb
add
jmp
int3
or
outsb
pushf
fst
fsubl
push
mov
add
insb
and
imul
mov
adc
testl
jbe
pop
pop
add
mov
int
push
cmpsb
rol
push
cwtl
push
push
ss
xor
inc
insl
and
xchg
movsl
inc
in
or
mov
cmp
xor
adc
daa
lods
scas
inc
push
shlb
inc
enter
shrb
lea
pop
imul
clc
sbb
mov
sub
int3
aas
gs
jbe
push
or
stos
add
cld
cmc
mov
add
adc
hlt
ss
jo
sbb
fadd
or
cmp
addl
cmp
fisubs
lret
push
rcl
pop
ret
cmp
add
push
stos
das
push
mov
mov
movl
sub
loope
jle
shrb
mov
pop
loopne
push
push
mov
les
cmp
push
push
rorb
cltd
mov
sub
dec
sbb
jle
sarl
dec
rorb
jnp
ljmp
jmp
mov
out
push
rorb
rorb
gs
sbb
mov
dec
subl
test
out
push
jo
adc
push
jmp
push
les
mov
pop
cld
and
rclb
xorl
add
jle
dec
shlb
hlt
insb
clc
push
enter
mov
adcb
aas
stos
std
mov
clc
clc
sbb
insl
int3
lock
cmp
popa
dec
jp
pop
push
xchg
jmp
add
and
outsb
push
ds
ret
mov
icebp
incl
pop
or
cmp
inc
std
je
mov
jmp
hlt
xchg
and
out
push
xor
xchg
jecxz
xor
sbb
push
mov
mov
cld
jg
sbb
or
gs
dec
fcmovnu
popa
cld
mov
mov
int3
adc
jb
mov
xchg
aad
sets
in
popf
mov
sbb
data16
movsb
or
rorb
jmp
cli
push
outsl
add
pop
jne
cld
add
add
inc
inc
je
push
lea
mov
or
insl
lahf
push
pop
fcomps
xchg
mov
imulb
sub
loopne
add
int3
cmp
and
jmp
sub
mov
xchg
call
push
mov
jbe
rorb
xchg
int3
pop
add
adc
dec
xlat
adc
scas
mov
mov
xchg
rol
leave
cld
les
cli
outsl
clc
es
cmc
loopne
nop
pushl
jle
push
mov
shlb
sub
pushf
loop
cwtl
subl
inc
loopne
mov
dec
in
cmp
cmp
clc
and
ljmp
xorb
ja
sarl
lret
inc
orl
sub
jae
mov
pop
inc
aaa
xchg
int
mov
inc
jl
imul
mov
push
inc
cltd
lock
sub
shl
ror
mov
call
add
bnd
mov
test
mov
jl
add
in
inc
mov
loopne
push
mull
cltd
adc
add
mov
and
cld
inc
jecxz
sbb
mov
andb
jae
roll
gs
lcall
push
mov
cwtl
add
mov
xchg
add
add
pop
or
sub
or
xor
push
push
outsl
add
sub
imul
or
sbb
test
mov
movl
fwait
test
data16
pop
mov
stos
jp
sub
fldl
lods
xchg
decl
js
mov
push
push
jmp
enter
push
mov
testb
lock
int3
scas
fbstp
cmp
clc
insl
add
lcall
insb
popa
xor
jl
sbb
xchg
in
jge
dec
sbb
stos
sbb
or
mov
or
hlt
icebp
xor
fidivl
push
cmp
orb
dec
mov
push
push
add
xchg
sbb
add
ret
out
sbb
cmp
and
ljmp
mov
add
pop
adc
rorb
xor
in
xor
cwtl
daa
test
ret
loopne
in
clc
int
jg
icebp
aam
pop
or
lds
rcr
iret
gs
int3
add
cmpsl
inc
repz
leave
sub
xlat
and
push
fildl
js
add
je
add
xorb
or
mov
int3
jb
clc
rorb
cmc
pop
and
shr
clc
jne
loopne
pop
and
loopne
add
pop
mov
or
fmull
mov
loopne
and
jmp
xor
add
sub
push
fstpl
adc
push
pop
rolb
rcrl
add
or
loopne
dec
mov
pusha
push
sub
insb
fmuls
stos
aad
mov
jbe
js
cwtl
sub
sub
sub
pop
cmp
idiv
fucomip
pop
push
stos
jae
fs
add
decl
rolb
cmp
dec
les
cmp
je
insb
push
mov
adc
and
xor
inc
add
or
movl
sbb
pop
jbe
mov
jle
lea
ds
mov
mov
and
push
subl
sbb
divl
fs
mov
push
cmp
add
imul
je
invd
je
les
push
in
add
sahf
cmp
cld
pop
cli
or
and
fnstsw
int3
fcomps
mov
cmp
and
pop
add
cmp
add
and
movsb
addb
mull
or
push
sub
pop
sub
sub
scas
inc
mov
mov
popf
movsb
mov
out
sbbb
hlt
out
clc
les
lods
pop
cmpsb
and
scas
mov
pop
pop
jo
fisubrl
jo
inc
popf
dec
or
nop
and
in
aam
mov
loopne
test
mov
inc
outsl
mov
jne
movsb
or
cli
test
js
mov
pop
push
and
pushf
pushl
das
fcoml
mov
test
sbb
pop
leave
sahf
push
inc
push
add
cmpb
fadds
mov
loopne
mov
nop
psubusb
shlb
fcoms
stos
mov
mov
rorb
xor
stc
test
adc
je
in
sub
push
gs
cmp
adc
adc
sbb
shrl
icebp
sete
pop
repnz
sub
ss
adc
dec
push
out
sbb
and
in
sub
in
out
lods
inc
cmp
adc
mov
mov
or
inc
xchg
cmp
shrb
fsubs
sub
add
sub
mov
add
dec
mov
dec
addr16
fbstp
js
dec
test
mov
cld
sbb
test
hlt
rorb
and
push
andb
and
incl
add
sub
ljmp
pop
mov
aam
xlat
std
popa
mov
outsb
je
data16
inc
adc
mov
mov
lods
sub
xchg
pushf
rolb
and
nop
add
add
inc
roll
enter
and
inc
push
push
test
repnz
dec
in
xchg
lret
data16
aam
sbb
stc
mov
cmp
or
pop
es
and
and
cld
push
pop
negb
test
xor
ja
xor
loop
sbbb
mov
pop
jmp
add
clc
lods
lods
call
pop
xchg
stc
fldt
insb
push
jg
push
lahf
pop
xor
adc
mov
fwait
dec
jg
bound
push
loope
jae
std
cmpsl
das
ret
mov
lock
je
lea
dec
aaa
hlt
xchg
movsb
inc
psubb
add
adc
ret
clc
inc
pop
inc
insb
fsubl
stos
xchg
shrb
test
cmp
imulb
jne
push
push
movsb
mov
jl
sbbl
lock
ret
and
push
inc
std
rcrl
jb
int3
push
sub
cmp
and
lods
jecxz
mov
scas
sbb
inc
xchg
mov
inc
ljmp
add
sub
add
mov
icebp
out
sbb
mov
out
mov
fiadds
pop
mov
in
jle
push
or
fildl
pop
cli
ret
sub
loop
aad
filds
sub
insl
int3
or
inc
lret
ljmp
xor
mov
cmpb
nop
lock
std
or
pop
cmp
adc
ret
sbb
hlt
push
jmp
jge
lock
adc
inc
jmp
adc
xlat
pop
push
and
push
add
int3
es
push
push
push
xchg
mov
mov
xor
mov
popa
add
push
aam
pop
shrl
mov
and
cmp
rclb
mov
mov
xor
push
push
ja
add
push
add
mov
call
add
gs
mov
fimull
mov
add
jecxz
dec
sbb
movl
aaa
in
push
gs
push
aam
pop
push
add
test
sbb
or
mov
scas
dec
cwtl
aam
aam
sarb
sbb
and
js
inc
ss
push
push
push
jb
mov
pop
mov
add
outsl
outsl
mov
or
jne
movsb
pop
sub
xchg
adc
in
mov
adc
imul
insl
cmp
xchg
jne
sar
incl
xchg
mov
add
mov
lret
mov
lret
sbb
add
imul
lods
movsb
sbb
in
mov
addb
push
push
cmp
push
cmp
js
subb
rorb
aam
push
scas
pop
or
dec
inc
lret
xchg
push
jg
adc
orb
mov
adc
jp
fdiv
dec
add
mov
mov
add
inc
test
fmul
outsb
ror
nop
mov
pusha
inc
test
jb
cmpb
pusha
fdivrs
cmp
push
jmp
in
mov
jo
cmp
mov
dec
adc
xor
pushf
pop
sbb
sbb
stos
and
or
cmpsl
lcall
and
jo
jne
es
out
rcrb
add
fwait
jp
fsubrl
adc
hlt
stos
in
adc
push
cmp
loop
mov
add
jge
mov
shl
and
ret
stos
add
push
mov
mov
jno
jle
jnp
in
clc
cmp
xchg
inc
jb
add
adc
or
pusha
add
rolb
cmovne
sbb
das
jp
sbb
push
insb
cmp
fimuls
jl
adcb
or
inc
sub
pop
aam
jb
adc
fwait
mov
and
sbb
jle
aas
mov
add
loopne
inc
add
imul
pop
loop
adc
adc
je
pop
jp
pushl
add
jmp
dec
inc
fdivrl
xor
pop
cwtl
ss
sbb
inc
cmpsb
lods
push
adc
or
mov
lea
inc
xchg
cltd
sbb
and
mov
rolb
mov
testb
repz
fldl
pop
imul
inc
lret
cmpsl
out
jmp
jecxz
cmp
cmc
int3
cmp
imul
mov
decb
lea
popa
and
and
add
pop
loope
jbe
mov
bound
lea
rcll
shll
fistps
adc
sbb
xchg
add
dec
cli
xor
adc
jb
jecxz
sbb
add
shll
inc
inc
cmp
jecxz
pop
inc
mov
mov
int3
cld
mov
inc
rolb
xor
and
pushf
sarb
enter
or
sbb
add
pop
and
or
aam
std
inc
mov
jecxz
pushf
add
lcall
int
mov
std
cmp
xchg
pcmpeqd
or
call
xor
add
pop
test
jne
inc
insb
mov
add
movsb
inc
mov
inc
aaa
mov
and
add
rcrb
pop
add
mov
int3
dec
inc
shr
mov
dec
loop
push
int3
and
push
mov
fsubl
hlt
mov
fistl
lds
std
insb
rorl
push
sub
cli
inc
adc
xchg
adc
and
push
dec
in
orps
stos
insb
mov
push
ja
sub
test
pop
or
rcll
cmpsl
js
and
mov
dec
lret
andl
cmpsb
cmpb
daa
lret
loopne
int3
sub
lea
mov
sub
cmp
inc
jne
push
mulb
pop
orl
jne
incb
fucom
int
les
lret
outsl
cmp
jne
nop
xor
in
xchg
push
xor
inc
or
adc
enter
iret
mov
js
jne
addb
mov
nop
mov
push
cld
pop
add
push
add
fnstcw
jle
xor
add
sub
aaa
push
movsl
mov
mov
aam
mov
jp
pop
push
sbb
xchg
inc
push
orl
out
aas
cmp
sub
adc
push
push
lcall
add
jne
push
and
mov
inc
pop
clc
mov
hlt
mov
sub
adc
push
xor
das
push
lea
add
fisubrl
add
jne
in
rorl
pushl
rolb
jo
mov
push
cld
call
je
xchg
decb
shlb
test
cmp
scas
add
inc
jp
clc
jmp
add
in
aaa
mov
push
loop
jmp
ss
mov
mov
hlt
pop
js
inc
pop
push
push
clc
xor
mov
mov
push
pop
dec
mov
aaa
fdivrl
out
int3
jne
xchg
sbb
inc
test
xor
push
mov
mov
icebp
mov
es
jg
fsubr
pusha
enter
push
fs
scas
inc
ja
mov
lock
xchg
lods
add
add
clc
mov
mov
or
adc
clc
mov
hlt
sub
inc
les
sub
mov
gs
and
inc
sbb
adc
nop
pushf
int3
xchg
or
xchg
cld
lahf
inc
aas
lods
jmp
pop
push
xchg
adc
fmul
xor
and
cli
mov
ficoml
lret
or
xchg
push
xorl
mov
sub
cwtl
movl
mov
or
push
inc
jge
incb
shlb
jl
jge
cmp
mov
lock
and
lock
add
in
add
jecxz
inc
inc
movsl
mov
int3
xlat
xchg
add
sahf
movups
jo
jmp
clc
inc
or
cmp
ljmp
shrb
and
andb
cmp
inc
cmp
mov
sbbb
mov
lret
in
ret
lret
jne
sbb
outsb
xchg
inc
pop
adc
push
sbb
dec
push
add
mov
adc
cld
inc
ja
clc
orb
and
adc
jne
andl
repnz
dec
mov
in
or
dec
xor
fistpl
sahf
inc
and
dec
push
or
push
dec
dec
cmp
incb
aaa
and
adc
hlt
xchg
int3
movl
popa
enter
clc
scas
ds
xchg
push
jle
repnz
or
enter
xorb
js
add
inc
push
fs
es
push
sbb
push
dec
je
inc
mov
incl
or
gs
loope
mov
loop
lods
add
inc
push
rorb
not
xchg
ss
cmp
or
dec
pop
cmpl
inc
mov
outsl
js
in
hlt
or
jle
or
xchg
rorl
outsb
push
jge
mov
or
push
fidivs
jb
stc
push
rcll
xchg
sbb
int3
bound
jo
and
pop
mov
loop
mov
mov
lds
mov
loope
es
mov
inc
addl
dec
mov
mov
mov
ret
push
xor
imul
mov
test
cli
jbe
lcall
in
dec
insl
push
lahf
dec
xor
sbb
jmp
filds
add
pop
push
stos
inc
push
out
cmp
incl
mov
adc
sahf
mov
sbb
mov
push
sarl
jne
jmp
in
mov
addb
ret
nop
pop
lock
sub
ljmp
adc
or
incl
push
jbe
push
dec
rorb
inc
out
pop
ljmp
inc
jecxz
push
mov
jns
pop
cli
orb
mov
neg
jo
pop
push
push
jbe
add
push
adc
jp
cmp
mov
add
push
adc
jae
or
lret
mov
push
in
xchg
mov
ss
shll
cmpsb
mov
in
stos
test
mov
pop
cmp
mov
in
adc
mov
ljmp
pop
outsl
iret
ret
subl
ror
mov
outsb
or
pusha
and
or
sbb
add
sbb
adc
stos
sahf
test
rorb
lahf
scas
xchg
xor
ja
sti
sub
xor
mov
cmp
or
test
mov
std
rcr
andl
pop
add
sahf
push
adc
or
aam
enter
das
inc
es
jb
rcll
nop
das
and
shll
pmulhuw
jb
cwtl
rolb
in
xchg
jge
sbb
sarb
jmp
mov
push
enter
outsl
xor
cld
mov
cmp
loope
mov
or
test
and
jp
lods
nop
dec
sbbl
inc
scas
mov
pushf
aad
clc
mov
loop
sbb
mov
inc
data16
sarb
aam
insb
push
andl
insl
jb
jl
jle
or
lret
mov
mov
add
ret
dec
lods
test
jbe
jb
repz
sub
mov
dec
sub
pop
test
cld
mov
in
add
add
push
lods
xor
cmp
or
mov
ja
adc
test
xor
fnsave
int3
dec
dec
pop
jbe
dec
pushf
jge
cld
sarb
pushf
mov
test
push
lods
int
gs
push
data16
imul
jnp
add
inc
adc
mov
adc
jo
push
mov
test
add
insb
add
orb
ror
loopne
mov
loopne
pusha
les
cmpsb
js
push
sti
int
mov
mov
imulb
adc
adcb
int3
push
arpl
insl
cltd
std
movsb
int3
inc
mov
cmp
fdivl
mov
inc
test
ret
or
ds
jbe
stos
sbb
in
add
inc
adc
xchg
cmp
mov
xor
jle
mov
outsl
fmuls
je
rol
mov
test
or
pop
push
sbb
cmp
push
dec
imul
or
sbb
js
adcl
add
sti
dec
and
test
adc
fidivrl
jl
sbb
or
inc
push
adc
insb
adc
iret
inc
jmp
insb
or
push
ljmp
je
enter
inc
cmp
ds
cs
add
lock
cmpsb
push
push
mov
call
dec
push
sbb
out
hlt
lock
push
ret
fcomps
int3
or
mov
cmp
inc
loop
nop
xchg
cmp
cmp
gs
mov
xchg
mov
dec
popa
loop
stos
mov
push
fidivl
push
pop
mov
ret
add
adc
cwtl
outsl
call
in
ljmp
jo
mov
lea
dec
movsl
dec
das
xor
adcl
cmp
outsl
mov
and
or
sbb
push
and
or
push
and
repz
adc
xor
rolb
inc
addps
fwait
lret
mov
mov
orl
adc
inc
fdivrs
push
add
in
mov
xor
fbstp
fiaddl
aam
and
inc
add
adc
mov
rolb
or
fnstsw
pop
lea
push
mov
jnp
push
add
push
lods
mov
inc
jmp
shufps
js
sbb
rclb
add
inc
movsb
add
dec
dec
sub
lret
dec
je
mov
pop
inc
sub
rorb
sbb
lods
neg
or
add
test
mov
push
pop
adc
mov
push
cld
inc
cmp
ljmp
out
test
les
cmp
cmovne
or
xor
sbb
or
inc
std
aad
mov
push
jmp
pop
jg
and
das
cld
jmp
outsb
mov
push
ljmp
in
repz
xor
out
jo
inc
mov
dec
das
je
dec
outsb
xlat
inc
pushf
mov
adc
sbb
es
push
jbe
add
pop
lock
adc
daa
sbb
les
push
adc
dec
add
adc
push
mulb
repnz
adc
les
fcoml
test
call
sub
and
sbb
pop
aam
mov
and
push
sub
pusha
mov
pop
sbb
and
xor
push
add
movsb
inc
data16
xor
out
cmc
mov
rol
std
ljmp
mov
cmp
scas
jp
push
mov
les
fmull
hlt
rcr
push
push
aaa
cmp
ss
xlat
pushfw
and
lds
movsb
sbb
sti
incl
inc
mov
xchg
jae
jg
add
ss
pop
mov
or
dec
test
outsl
cli
aas
push
add
sahf
das
cmp
dec
xchg
inc
mov
inc
jae
dec
pop
test
pushl
cmp
js
ret
xor
add
dec
subb
inc
pop
outsl
or
fistl
test
sbb
lock
sbbb
xchg
cli
dec
movsb
jle
sahf
out
mov
gs
add
lret
and
mov
mov
lock
enter
hlt
dec
pushf
test
mov
ret
xchg
int3
lods
xor
or
xchg
fiaddl
and
xchg
rolb
add
std
push
jp
arpl
mov
mov
adc
dec
inc
adc
add
lock
inc
sub
and
add
sub
decl
mov
repnz
cmp
cmp
lds
add
mov
sub
and
xor
push
or
dec
nop
add
inc
adc
cmp
int3
cmp
mov
pop
jo
push
dec
cmpl
mov
inc
and
or
mov
jbe
or
add
xor
adc
sbb
cmp
and
sub
test
hlt
add
or
mov
add
pop
adc
loope
mov
cwtl
je
adc
fimull
pusha
add
test
push
cmpb
mov
mov
sbb
stos
stos
pop
cwtl
add
rolb
add
or
adc
or
dec
fs
jp
push
dec
cmp
or
adc
pusha
fdiv
push
adc
and
fidivl
xchg
jb
outsl
inc
movsl
push
addl
pop
aaa
mov
scas
sbb
sbb
loope
push
mov
xor
jb
or
ljmp
test
pop
adc
ret
push
add
test
outsl
outsb
fcmovnbe
lock
je
cmp
js
arpl
push
or
test
fdivs
mov
inc
loopne
pop
xor
add
adc
fwait
fnsave
add
push
std
pop
mov
incl
push
dec
in
adc
inc
call
cmpsb
out
es
fidivrl
mov
dec
je
test
cwtl
jmp
push
dec
jge
mov
in
test
sbb
mov
xor
mov
out
in
mov
fnstsw
movsb
stos
xorb
cld
push
pop
imul
stos
cmp
test
repz
cmpsb
test
fs
push
mov
divb
out
icebp
xchg
cmc
int
scas
add
subb
sahf
xor
mov
stos
inc
xor
mov
lods
movsb
je
in
rclb
insb
mov
add
adc
push
mov
push
insb
cmp
les
mov
xchg
cmpsl
loopne
shll
outsl
scas
push
mov
jb
ljmp
lock
filds
pop
cmpsb
out
pusha
add
in
mov
ljmp
adc
cli
jae
ret
ret
stos
gs
jg
add
push
into
ret
cmp
outsb
scas
popf
inc
jecxz
iret
pusha
xchg
add
cli
sbb
incl
lret
xor
in
jge
and
cld
and
xor
adc
out
add
fidivs
std
pop
leave
adc
lret
mov
cmp
sub
js
into
jp
add
test
ljmp
mov
ret
xchg
dec
jb
cld
mov
sbbb
jbe
add
sbb
mov
mov
push
jne
sbb
aas
jge
shrb
push
int3
dec
add
dec
cld
pop
inc
jb
int3
dec
pop
add
push
jae
dec
xor
call
sbb
and
mov
enter
out
mov
dec
inc
cmp
loopne
xchg
ljmp
jg
pop
mov
daa
in
call
test
dec
insb
test
sub
or
fdivrp
or
loop
out
and
loop
cld
mov
and
movsl
cmpsb
das
sbb
add
out
daa
sahf
call
cs
dec
cmp
dec
sahf
fcmovne
test
pop
inc
pop
into
int3
fimuls
pop
add
mov
lret
sub
cmp
inc
shll
insb
scas
sbbb
decl
inc
not
jecxz
xchg
roll
push
or
out
ljmp
out
cmp
inc
sub
out
aaa
icebp
jle
pop
ret
inc
mov
add
push
test
cwtl
inc
jl
bnd
fdivrs
pusha
mov
std
mov
cmpsl
sbbl
or
mov
gs
push
inc
loope
sub
out
inc
aaa
pop
fs
xor
push
push
mov
call
std
jne
inc
sub
fwait
lea
fldenv
inc
and
je
pop
in
or
pop
leave
jmp
lahf
je
test
pusha
xchg
repnz
cmp
jg
sbb
mov
dec
add
dec
or
ljmp
sub
int3
adc
or
int3
pop
test
pop
clc
test
jmp
add
push
jmp
incb
mov
add
lea
add
pop
pop
xor
and
lds
fs
or
cmc
sbbb
pop
idiv
clc
mov
and
cmp
cld
add
lret
add
lods
daa
sub
adc
cmpsb
int3
adc
in
pop
mov
or
shll
add
xor
add
xor
mov
into
push
xchg
cmp
push
push
das
push
add
test
sbb
cs
sub
out
imul
mov
incl
mov
add
cmpsb
xchg
dec
cmc
aaa
pop
mov
rcrb
cld
mov
int3
jge
or
add
jg
lock
lret
jne
dec
ud0
ret
and
inc
jmp
adc
je
ret
lea
sub
orl
pusha
incl
ret
scas
leave
inc
lods
mov
mov
xor
mov
xor
mov
sbbl
and
adc
cmc
shlb
push
pop
adc
xor
orb
andl
dec
mov
and
movb
xor
adc
andb
movsb
dec
scas
outsb
push
adc
jl
mov
sub
clc
xchg
bound
xchg
loope
mov
mov
push
iretw
add
mov
mov
mov
arpl
or
add
pcmpeqb
in
aaa
pop
jle
ss
jmp
add
fcomps
outsl
push
insb
mov
popa
dec
inc
cld
loope
test
or
mov
xor
ret
jmp
inc
xor
lret
imul
and
repnz
hlt
ja
andl
jle
or
lods
xor
adc
int3
test
repz
sar
push
and
add
subl
aam
push
sub
jmp
dec
dec
in
fdivr
mov
sbbl
sti
and
fdivrp
ss
cmpsb
xchg
mov
mull
into
push
test
or
popf
loope
lret
cmc
mov
xchg
mov
and
dec
xchg
mov
pop
push
adc
and
dec
cvtpi2ps
inc
mov
push
adc
loop
jne
push
jecxz
icebp
jp
push
std
rcr
lea
mov
jmp
loopne
add
dec
pusha
fimull
jne
inc
insb
ss
jns
inc
add
inc
mov
inc
adc
daa
scas
mov
mov
dec
cwtl
pop
dec
data16
sbb
push
incl
mov
mov
mov
push
or
or
push
push
das
icebp
sarl
leave
push
inc
adc
push
loop
cmc
icebp
ljmp
push
aaa
pop
jl
mov
les
add
jp
pop
js
push
mov
cmp
loopne
xchg
jmp
add
call
cmp
add
add
xchg
jbe
inc
mov
sbb
pop
dec
js
push
xor
add
xchg
gs
fcoms
xchg
orb
aaa
test
pop
mov
cmp
shlb
je
jnp
inc
test
push
xchg
mov
mov
cmpb
mov
cmp
fsubr
stos
cld
leave
add
mov
adc
sbb
ljmp
outsb
test
pcmpeqb
fidivrl
cs
mov
xor
sarl
or
sar
divl
subb
xchg
faddl
out
mov
stos
outsl
adc
mov
repnz
or
or
add
jb
push
rcll
xor
rolb
mov
inc
pop
mov
dec
repnz
fadd
data16
dec
inc
shl
inc
add
sub
das
movsb
movsb
push
sbb
pop
sahf
hlt
mov
lods
inc
cmp
xor
mov
ret
push
test
cmp
std
push
or
xchg
jae
js
daa
test
push
es
jne
js
push
or
out
adc
mov
inc
xchg
lahf
decl
add
add
fistpl
push
ret
push
mov
repnz
dec
pop
push
pop
rolb
test
and
xchg
push
sbb
das
test
aaa
xor
call
adc
loope
inc
ret
or
insb
fstl
dec
rorb
jp
mov
shrl
mov
sub
int3
in
rorb
incl
mov
incl
xchg
and
roll
cmp
in
pop
int
outsb
mov
mov
rorl
pop
add
les
adc
or
and
daa
pop
and
jne
fstps
mov
xor
sahf
push
cmc
mov
rclb
add
inc
adc
scas
and
pop
xchg
test
ljmp
mov
add
adc
or
rcl
pop
rcrb
add
mov
les
cmp
xor
dec
mov
add
in
decl
push
pop
ds
rorb
mov
mov
cmpxchg
mov
add
imul
dec
xor
ds
push
ret
xchg
test
dec
pop
dec
les
inc
mov
decb
cld
test
pop
movsb
movsl
imul
and
pushl
xor
adc
loope
push
cs
mov
imul
sarl
std
int
sub
shrb
mov
xor
mov
pop
movsb
push
push
sbb
fs
pop
mov
mov
push
pop
ret
xchg
cld
add
mov
arpl
lock
inc
loop
cld
jne
pusha
stos
testb
mov
dec
or
rcrl
xor
mov
add
cltd
out
dec
mov
cld
mov
sub
xchg
pop
in
adc
aaa
xor
hlt
xchg
sarb
sbb
mov
mov
stos
ja
mov
push
mov
push
add
lds
icebp
loope,pn
jae
scas
xor
aam
enter
xor
or
stc
inc
xor
pop
adc
mov
push
in
jbe
adc
and
call
jbe
cli
mov
push
xchg
lods
out
push
pushf
cld
cmpsb
out
pusha
out
add
or
sub
cmp
adc
popa
dec
pop
repnz
aad
sub
test
sub
in
popa
sub
dec
xchg
lret
xor
insl
mov
and
add
ss
jno
sbb
jmp
or
jl
pop
push
mov
movsb
mov
pop
push
roll
xorb
fdivrp
inc
push
rol
xchg
ficoms
and
xchg
push
dec
mov
add
push
inc
dec
outsb
cmpl
adc
and
je
sub
imul
call
and
push
xchg
pop
in
bound
mov
jle
xchg
leave
and
and
inc
xlat
add
je
lret
inc
insb
xchg
pushf
fadd
sub
push
cwtl
cs
push
push
pop
inc
stos
sub
ss
add
sub
jl
jle
push
lock
jb
push
aas
or
jl
jge
mov
aam
outsl
les
std
aad
push
es
push
cwtl
xor
add
call
scas
inc
sti
dec
les
fadds
pusha
ljmp
adc
add
aas
out
mov
test
or
push
add
jecxz
lods
test
cli
lock
cltd
and
sbb
push
adc
cmp
call
mov
and
roll
dec
or
nop
push
mov
xchg
loopne
jne
retw
jnp
xor
add
cld
clc
sbb
or
and
aaa
jb
cld
mov
lock
call
aaa
mov
clc
pop
rorl
cmp
lret
leave
push
subb
lret
pushf
adc
jo
push
push
xor
add
or
cmp
shll
cmp
imul
shll
and
mull
and
push
mov
sbb
aam
pop
call
jp
inc
leave
call
and
les
imul
jo
jle
adc
xor
jb
scas
add
push
push
mov
adc
jb
std
imul
inc
and
mov
adc
sub
mov
flds
xchg
out
pop
out
cwtl
mov
shll
mov
je
lods
dec
mov
push
jae
rclb
pop
shrl
insb
loopne
push
stc
outsl
or
ds
rcll
pop
push
sbb
and
mov
sar
mov
xchg
gs
int3
sarb
cmp
or
add
push
push
sahf
test
dec
add
leave
inc
dec
dec
push
add
and
pop
sbb
dec
test
lods
or
inc
inc
add
jo
ret
rorl
mov
ret
cmp
or
fisubl
icebp
pushl
xchg
stc
lea
pop
sti
rorb
leave
xchg
sbb
dec
sbb
mov
adc
cmp
fcmovnu
cmp
pop
pop
je
sti
notl
cmp
lcall
mov
add
mov
push
inc
push
sub
not
and
aad
shrb
testb
push
sub
aam
mov
push
lods
mov
mov
push
xor
loop
adc
push
dec
or
inc
add
push
push
or
rorl
idivl
mov
call
leave
sbb
jmp
push
adc
pusha
es
into
testb
xchg
xor
ljmp
push
clc
cs
adc
adc
shl
ret
or
sub
movsb
ds
ds
cld
stos
mov
add
and
mov
or
inc
push
ds
in
enter
stc
cmp
adc
jb
mov
rorl
inc
orl
xor
pop
xor
push
std
inc
lea
into
adc
aam
add
pop
jmp
push
movsl
dec
jbe
dec
repz
fcmovbe
pop
xor
adc
mov
sub
in
jl
sbb
push
xor
pusha
std
or
and
cmp
jg
in
movsb
mov
dec
enter
jmp
dec
hlt
shlb
inc
push
orl
shrb
or
dec
push
pusha
cmp
inc
and
sbb
push
stos
push
in
ja
sub
pop
inc
fdivl
insb
xchg
test
mov
pop
xor
or
inc
adc
inc
pushl
js
pop
inc
cmp
inc
fdivrs
fwait
adc
xlat
pop
adc
outsb
test
push
punpckhwd
addr16
push
adc
mov
cld
inc
fists
adc
mov
push
lahf
add
sbb
int3
mov
inc
cmp
dec
loopne
mov
into
and
jl
lea
aad
xchg
inc
pop
adc
jmp
push
rolb
push
pop
dec
enter
add
mov
sub
dec
inc
mov
mov
aam
jl
test
adc
mov
call
mov
push
sub
divl
jl
inc
dec
push
cmp
jg
mov
pop
add
cmp
decl
cmpl
cld
jmp
movsl
das
dec
bound
xor
mulb
in
mov
std
xor
and
pop
jl
or
cmp
lds
loope
xchg
repnz
lret
test
add
jne
loop
jb
ss
test
hlt
push
add
cs
int3
pop
adc
mov
mov
cmp
mov
icebp
ja
inc
adc
cmp
push
subb
mov
add
es
sub
std
add
or
lea
cld
andl
xor
add
adc
push
call
mov
xchg
mov
mov
mov
xor
xchg
xor
and
sub
mov
testb
sbb
add
cmp
outsb
mov
pop
sub
add
fdivs
je
sbb
xor
call
pop
sub
popl
andl
lea
mov
push
inc
xchg
imulb
dec
test
adc
int3
sub
push
roll
xor
jl
pop
cmp
xchg
les
add
push
mov
push
lret
sub
mov
loop
xor
mov
inc
mov
sbb
pusha
or
and
out
scas
xor
sbb
pop
sub
add
scas
hlt
enter
xchg
js
mov
fs
jge
test
dec
ds
inc
xchg
icebp
pop
xchg
call
adc
ror
mov
push
clc
cmc
add
filds
incl
push
roll
dec
movsb
inc
jo
push
stos
fwait
add
push
sbb
fcom
movsb
pop
push
outsb
add
inc
push
dec
jbe
fs
bound
fisttpl
xchg
sub
and
pushf
stos
push
sub
pop
push
test
fs
insb
sub
sub
adc
or
aaa
pushf
mov
popa
data16
imul
push
mov
xor
adc
sti
and
ja
dec
or
enter
popf
in
or
sbb
push
idivb
stos
je
mov
jl
inc
and
mov
cmc
pop
xor
div
in
test
push
and
popl
das
mov
add
lods
push
add
loope
push
and
xchg
mov
mov
xor
adc
inc
je
test
inc
mov
stos
imul
mov
inc
ret
cmp
lret
cmp
push
out
push
es
lods
test
pop
ret
leave
adc
xor
add
inc
into
ret
decl
inc
adc
cli
pop
shlb
adc
push
lock
add
push
cwtl
js
loopne
jmp
or
in
push
mov
je
dec
mov
add
mov
adc
test
and
loope
push
add
ss
xor
mov
orb
inc
push
mov
mov
add
fimuls
fs
nop
and
mov
jmp
mov
mov
or
xor
adc
mov
sub
dec
mov
xor
push
and
sub
mov
xchg
mov
cmp
incb
in
incl
test
mov
cmp
jmp
jne
cli
mov
js
fiadds
adc
mov
pusha
das
xor
push
mov
mov
xchg
xorb
xchg
inc
movsl
or
push
mov
jne
cmp
test
fimull
or
xchg
xor
scas
xor
je
jp
push
pushf
dec
shlb
pop
fidivs
mov
sub
mov
push
add
decb
repnz
or
or
and
loopne
dec
js
test
add
js
cwtl
dec
into
push
std
sbb
jo
inc
jp
adc
sbb
adc
cld
leave
pop
inc
test
inc
mov
loop
hlt
inc
int
rorb
inc
or
jle
dec
adc
data16
aad
fmull
cs
dec
je
add
fisttpll
mov
ss
mov
sub
jg
adc
lea
mov
mov
add
push
xchg
sub
and
mov
clc
push
lods
cmp
xchg
cmp
mov
addr16
pop
xchg
imul
ret
into
jecxz
mov
add
cmp
inc
xor
pushf
or
les
xlat
inc
add
xor
mov
call
inc
push
out
popa
inc
or
cld
push
push
push
mov
adc
mov
ss
fdiv
outsb
or
cwtl
cmp
jo
subb
jne
loopne
lods
jle
ret
test
leave
nop
into
cmp
mov
loopne
sub
ret
jbe
adc
enter
sub
xchg
or
pop
and
jle
mov
addl
add
push
fstpt
mov
push
push
cmp
cmp
push
ret
pop
mov
fs
vmread
mov
adc
or
push
movsb
sub
sbb
lds
pop
dec
es
xchg
pop
xchg
out
ffree
in
cwtl
lea
fwait
shlb
lcall
ja
stos
test
cli
sub
arpl
mov
inc
mov
add
call
inc
aad
gs
insl
push
mov
xor
aad
test
stc
hlt
mov
cmp
testb
jge
mov
test
icebp
inc
or
cld
pop
enter
jmpw
hlt
xchg
rorb
enter
inc
scas
lock
xchg
add
stos
xor
jmp
addl
jg
je
bound
lea
or
inc
pop
dec
outsb
push
xchg
cmp
loope
push
or
add
or
push
xlat
adc
fldenv
in
or
jmp
dec
pushw
inc
push
cmp
or
int
adc
adc
adc
sbb
rorb
aaa
fcmovu
push
add
lea
or
fwait
add
call
add
cli
dec
pop
cmp
dec
mov
cmpsl
aam
inc
nop
adc
push
fs
inc
sub
sub
nop
lret
xchg
jge
cmpsl
push
pop
lock
sbbb
dec
scas
test
daa
add
or
inc
ret
mov
ljmp
jbe
xchg
mov
incl
sbb
adc
test
or
cmp
fisubs
add
mov
lea
sub
test
push
in
popa
shlb
inc
int3
push
hlt
call
adc
dec
mov
stos
and
and
jle
insb
sub
cmp
push
mov
cmp
mov
jmp
arpl
popf
push
pushf
push
lock
mov
xchg
nop
push
clc
test
jmp
in
mov
cld
adc
pop
mov
aaa
sbb
and
adc
jmp
int3
shlb
and
clc
nop
cli
insb
in
push
aaa
pusha
mov
je
gs
rcr
pop
sbb
jp
cmp
push
cli
repz
dec
cld
shrl
mov
jb
test
sub
movsb
mov
mov
push
and
adcb
sbb
mov
aam
or
push
js
ss
jp
test
call
adc
sar
push
add
fwait
std
mov
cld
out
adc
loop
inc
mov
movl
rolb
push
xor
push
std
pop
xorb
sbb
xlat
push
jmp
mov
mov
xor
pop
outsb
dec
fcom
push
mov
fldcw
jnp
mov
jl
and
rcrb
xor
mov
clc
dec
aaa
call
stos
pop
jne
add
negb
imul
inc
sub
lret
and
push
fnstsw
inc
ret
mov
subl
je
mov
and
jo
mov
sub
inc
add
stos
fcmove
out
fdiv
push
push
test
pop
push
leave
adc
fsubs
sub
outsb
insb
push
clc
ss
jg
add
inc
outsl
aas
rolb
cs
loopne
data16
pop
jne
aad
popf
bound
test
jg
int3
push
stos
push
pop
test
scas
mov
leave
sar
adc
mov
pop
jl
push
pop
insb
mov
test
insb
es
clc
push
shrl
int3
loope
or
push
das
fsubs
mov
xor
loopne
js
push
fs
es
cli
pop
ficomps
sti
xchg
into
mov
aam
xor
outsb
jg
lret
leave
xor
repnz
mov
fsubs
cmc
add
daa
rcl
or
insl
pop
mov
insb
out
sub
xor
mov
mov
clc
cmpsb
mov
test
jb
push
cmpsb
cwtl
ret
scas
dec
push
sbb
mov
arpl
cld
inc
aas
fs
aam
rorb
cmp
dec
or
sub
push
fcompl
sbb
sti
push
dec
add
pop
jg
test
fsubs
push
icebp
sub
ja
jle
xchg
push
loope
adcb
add
xor
mov
lods
dec
adc
push
pop
or
add
sbb
cmp
jo
mov
inc
cmp
inc
mov
jno
inc
lea
inc
outsb
hlt
push
iret
lock
add
sub
ret
data16
inc
add
dec
sub
ffree
aaa
push
fdivs
dec
inc
out
mov
cld
jp
sarb
cld
sub
lods
xchg
mov
out
aas
xor
cmp
mov
jle
xchg
adc
sub
ljmp
ds
mov
adc
sbb
mov
mov
cmpsb
jne
filds
xchg
adc
sti
pop
mov
adc
push
push
mov
stos
jne
inc
jg
xor
and
test
pushf
mov
aas
cmpsb
mov
orb
insb
shrb
cld
push
shrl
sti
inc
gs
in
jmp
push
xorl
andl
loopne
inc
in
push
call
add
dec
nop
cmp
fcoms
call
loope
cld
fsubs
add
xchg
decb
rorb
aas
clc
pop
or
dec
ficoms
cmp
add
push
aam
inc
or
mov
je
push
inc
xorl
in
add
lea
mov
lods
mov
jo
sar
loope
mov
jle
xor
and
in
mov
xchg
fidivrs
ret
mov
push
inc
mov
pop
mov
adc
js
pop
ret
addl
mov
mov
insb
mov
or
mov
ljmp
adc
adc
jnp
int
mov
ret
adc
incl
outsb
pop
or
sti
adc
pushf
push
xorb
call
fisubrs
inc
sbb
cmpsl
mov
pop
sbb
inc
cmp
pop
push
movsl
repnz
sub
mov
jb
push
pop
rorb
std
and
adc
pop
int3
fcmovnb
xchg
inc
in
jl
xor
cmp
xchg
or
loope
push
ljmp
in
add
xor
stos
lods
mov
clc
push
push
sbb
gs
pop
js
loope
or
mov
or
xchg
mov
pop
sbb
cwtl
mov
gs
mov
insb
push
dec
mov
cbtw
shll
or
mov
add
pop
mov
push
jle
ja
push
clc
fimull
xchg
add
mov
pop
mov
std
xchg
add
jmp
add
pop
shl
movsb
roll
and
mov
adc
leave
wbinvd
cld
test
or
lock
push
es
fdivr
push
test
outsb
sbb
cmp
push
pop
sub
add
test
decl
lock
mov
push
push
sbb
je
pop
inc
dec
call
or
add
push
mov
mov
pop
aas
inc
fucomp
pop
inc
shlb
aam
or
pop
aam
pop
and
lds
push
lock
lea
add
test
push
ja
test
lods
add
out
ss
mov
inc
xor
push
stos
add
or
xor
lds
xchg
pop
fisttpll
adc
mov
les
xchg
repz
mov
popa
push
mov
incl
jmp
add
add
mov
inc
push
push
js
sbb
ficompl
lock
ljmp
in
and
xorb
js
lods
sub
outsl
mov
rclb
rolb
cmp
sarb
lea
adc
dec
jp
mov
or
iret
add
in
add
jmp
or
cmp
jle
into
xor
xor
pop
xchg
decl
push
ret
add
lret
ret
je
pop
icebp
pop
adc
mov
sbb
cld
mov
add
loopne
or
mov
add
jg
cli
in
in
push
test
call
jo
nop
call
cmpb
jle
or
jl
or
mov
sahf
call
fiaddl
sub
or
add
xchg
jecxz
call
mov
jge
mov
and
mov
cld
call
mov
xchg
ds
js
sbb
cmp
mov
or
decl
add
mov
add
icebp
scas
add
inc
or
push
decl
ficomps
insb
lea
les
test
in
stos
in
inc
out
incl
jo
je
mov
inc
lea
notb
xlat
fisubrl
rcll
mov
push
sbb
xlat
push
mov
fsts
arpl
xor
dec
rolb
jne
faddl
es
jb
lock
mov
ljmp
test
pop
fs
ljmp
inc
cmp
pusha
or
push
xor
dec
rclb
push
enter
cmp
push
mov
sbb
loop
adc
fbstp
sarb
js
cld
test
ljmp
add
cld
xchg
mov
js
or
lods
mov
push
shll
scas
push
pop
lock
pop
pushf
aaa
mov
popf
push
mov
mov
or
xchg
add
lcall
xor
push
or
or
outsl
xchg
sbb
test
push
pop
lea
jb
test
inc
xor
test
repnz
inc
jb
add
je
out
popa
inc
in
adcb
incb
testb
cld
gs
jge
or
or
inc
adc
mov
dec
call
mov
into
xchg
clc
xchg
lea
adcb
ret
fdivrl
sub
or
add
xchg
fmuls
adc
les
or
mov
and
clc
insl
add
pop
fdivl
cmp
sub
sbbl
aas
lods
js
jo
or
loopne
dec
adc
fmull
adc
int3
add
jne
scas
dec
in
adc
test
xlat
outsl
push
pop
add
xor
dec
fwait
ja
dec
data16
ret
or
pop
mov
data16
ret
lock
sbb
or
add
mov
ret
scas
std
or
adc
dec
add
sub
fidivs
pop
les
or
sub
jmp
xor
incl
sbb
dec
add
sarb
movsb
inc
or
cs
sbb
dec
add
cmp
sti
imul
nop
aaa
add
ret
mov
clc
addl
std
inc
and
test
mov
in
ljmp
je
test
repnz
dec
adc
xor
in
scas
daa
mov
jmp
adc
xchg
pop
lods
jl
mov
sbb
push
push
sar
test
mov
or
push
mov
stos
sarl
cli
mov
and
xchg
dec
jl
jle
add
ja
sbb
push
add
inc
ja
push
dec
bound
gs
xchg
or
or
adc
subb
rcrb
in
push
adc
pop
mov
push
pop
jl
xchg
js
inc
cmp
mov
xchg
sbb
mov
inc
adc
test
inc
sarl
or
mov
mov
es
call
cmp
xor
mov
movl
mov
push
mov
mov
pop
pop
lea
test
xor
push
sti
in
cmp
dec
add
fistps
lock
in
inc
pop
mov
rcr
push
adc
mov
cltd
aas
movsb
sbb
insl
and
sub
arpl
ret
por
mov
into
adc
or
xor
test
adc
test
push
pop
leave
push
jbe
subb
cmp
arpl
xor
je
and
ljmp
push
cmp
subb
andb
call
push
loopne
les
cmp
loopne
push
adc
cli
adcl
notb
add
push
xlat
mov
pusha
loope
addl
lea
push
push
cld
fmul
and
cwtl
lock
ss
int3
mov
insb
loopne
mov
rcrb
loopne
push
in
jb
inc
adc
dec
mov
dec
xor
cli
pusha
outsl
adc
inc
cli
cli
enter
popa
mov
fdivr
aaa
sub
fs
add
cmpsb
test
mov
rolb
pop
js
loop
mov
cmp
adcl
les
or
jp
pop
or
or
divl
outsl
inc
lock
push
cld
xchg
test
mov
and
xor
lods
cli
lock
gs
jae
ret
stc
bnd
cs
add
inc
jo
adcb
ret
xchg
stos
xor
popa
sbb
xchg
fcmovb
mov
rorb
adc
mov
or
push
sti
dec
jmp
xchg
push
or
pusha
popa
add
xor
and
aam
add
xchg
mov
adc
mov
pop
lock
adc
xor
jmp
outsl
ret
jae
cmp
inc
xchg
aam
push
insb
sahf
xchg
aaa
fwait
cli
sub
fs
imul
inc
xor
shlb
inc
add
lock
xchg
mov
or
ss
mov
gs
or
adcb
jno,pt
push
stos
adc
incl
rorl
adcl
xchg
lret
shl
inc
dec
insb
sbb
ljmp
push
adcl
testb
sbb
test
adc
xchg
sar
int3
dec
push
adc
add
pushl
or
leave
dec
fidivrl
push
ret
mov
ja
push
jo
mov
push
lods
nop
imul
jp
push
xor
out
arpl
or
icebp
test
push
push
aam
inc
mov
jecxz
push
mov
xchg
push
stos
fstpl
dec
rcr
mov
test
add
lret
and
add
outsl
movsl
jmp
test
aas
lea
aam
test
mov
or
sub
rolb
std
out
push
push
mov
mov
lea
dec
inc
mov
int3
push
adc
jp
xor
jb
mov
add
mov
sar
int3
ss
push
outsl
add
out
clc
sbb
ret
dec
test
movsb
inc
je
repnz
lahf
push
mov
add
adc
pop
lea
bound
decb
add
pushf
jns
push
out
or
inc
addr16
add
mov
xor
add
inc
or
add
decl
lcall
ret
pop
inc
lret
sub
xchg
push
inc
lods
rol
mov
mov
jb
fimull
fdivl
js
push
arpl
or
xchg
das
fcomip
and
adc
push
xor
cli
pushl
inc
ret
test
daa
sbb
push
adc
mov
push
add
loopne
clc
xchg
push
nop
mov
push
enter
pop
pusha
mov
pushf
sub
shl
inc
inc
and
fisubrl
add
mov
inc
inc
in
mov
loope
aad
and
pop
cld
mov
mov
dec
subb
sbb
add
mov
xchg
jge
leave
repnz
hlt
fcmovnu
movsl
dec
ljmp
push
xchg
adc
clc
comiss
clc
pushl
pop
in
mov
xor
add
les
je
add
sbb
outsl
push
je
cli
adc
push
loopne
and
sti
add
out
jle
inc
dec
stos
or
push
adc
mov
leave
cmp
call
add
aam
les
lds
sub
cmp
lock
in
daa
jb
pop
add
jecxz
sar
loop
movsl
mov
jle
loope
or
int3
inc
sub
jg
xlat
aaa
dec
addr16
fs
daa
or
fs
sub
and
mov
call
xor
outsb
gs
std
lock
arpl
ja
mov
mov
add
jo
xchg
pop
pop
and
jle
sbb
aam
or
xorl
ljmp
in
sbb
push
cmp
or
push
inc
std
jl
push
xchg
pop
sub
cmp
push
add
add
loope
scas
xchg
mov
adc
mov
mov
sub
in
pop
mov
add
xorl
pop
and
sbb
lock
jbe
pop
push
clc
bound
dec
cmpsb
inc
or
or
jae
cmp
das
inc
sbbb
push
addb
mov
sub
outsb
or
inc
push
sbb
pop
xor
inc
inc
in
cmp
orl
std
dec
or
shlb
sbb
xchg
sub
inc
out
push
push
aaa
fs
push
pop
stos
js
pop
mov
xchg
mov
push
movl
inc
mov
fidivrl
inc
adcl
sub
pop
leave
ss
test
nop
pop
mov
ljmp
dec
mov
push
sarb
jbe
ret
test
ficomps
inc
les
mov
mov
mov
push
lcall
add
xor
xchg
mov
add
test
add
mov
cmpsb
mov
jg
sbbl
add
dec
sub
shr
jne
push
adc
aad
cld
push
jl
mov
div
insl
je
inc
sahf
ret
bound
adc
movsb
rorl
subb
mov
add
lret
or
pop
push
push
hlt
loopne
push
add
inc
inc
push
adcl
adc
and
push
xchg
add
sbb
add
mov
xor
xor
push
lea
cmp
movsl
jbe
jbe
jle
add
mov
pop
inc
xchg
inc
inc
cmpsb
adc
sub
add
mov
xor
jl
mov
je
cwtl
es
fs
shlb
push
or
push
test
data16
jge
inc
cli
iret
fdivrl
add
test
lret
adc
dec
sbb
push
dec
xchg
mov
pop
and
xor
push
shl
fldt
or
mov
dec
inc
ljmp
subb
jne
into
fcoms
inc
adc
nop
inc
jo
and
mov
or
insl
cli
ret
jne
inc
fs
pusha
or
ret
shrl
adc
sahf
out
loopne
bound
or
adc
dec
call
jecxz
mov
cmp
xor
or
adc
cmpb
pushf
mov
and
je
stos
mov
addl
ja
nop
xchg
jo
mov
loop
adc
rcrb
push
xchg
test
shlb
rorl
std
and
cmp
cmp
inc
stos
insb
inc
push
out
pushf
and
test
call
xchg
mov
inc
push
int3
loope
dec
add
lock
sbb
jge
inc
add
push
push
cmpsb
and
xchg
push
add
mov
test
outsb
or
aam
mov
ss
lea
push
xor
rcrl
or
daa
test
inc
loop
cmp
push
or
dec
dec
push
push
add
shl
or
xor
jbe
jne
mov
lahf
dec
fsubl
lea
fabs
jns
out
rorl
repnz
jge
push
adc
xchg
test
push
mov
push
ret
insb
aam
dec
or
xor
ds
jne
popa
mov
arpl
mov
je
push
cmpsb
sbb
cld
adc
call
imul
push
adc
sahf
or
push
push
adc
pusha
inc
or
cld
dec
push
mov
in
mov
cmp
push
dec
add
and
pop
mov
push
pop
and
call
and
lock
std
xor
mov
mov
cld
pop
gs
xchg
ss
xor
add
pop
xor
jmp
daa
xchg
add
push
mov
mov
add
fwait
mov
je
pop
sub
inc
jecxz
or
fldt
xor
inc
out
lcall
rcr
and
adc
push
mov
add
sbb
add
or
jl
movsl
setbe
test
push
add
inc
ret
inc
mov
sub
ret
push
adc
out
mov
sub
push
repnz
or
test
sub
aad
xchg
not
aas
mov
cmp
inc
xor
insl
sub
out
jmp
pushf
rolb
cmp
inc
xchg
cli
push
sbb
sbbb
bound
gs
test
xchg
movsb
fisttpl
lahf
test
mov
inc
test
push
or
aam
and
int3
lods
xor
cld
push
sbb
and
scas
pmullw
mov
pop
nop
int3
add
aaa
jo
jne
adcl
call
or
xchg
push
lret
test
xor
pop
push
lods
cmpl
pop
push
movsbl
f2xm1
xchg
fimuls
icebp
insl
xchg
je
add
ret
pop
sub
ret
xchg
jne
clc
mov
gs
inc
xchg
je
sub
mov
and
adc
sarl
popa
push
add
in
or
inc
mov
jbe
push
sbb
mov
sub
sarb
test
xchg
mov
jo
cmp
dec
les
shrb
xor
cs
js
test
mov
mov
mov
push
pop
es
rorb
pop
and
sbb
pop
data16
xor
aas
dec
push
xlat
sbb
imul
push
outsb
cmp
sbb
out
cmp
lods
clc
jne
mov
cli
daa
or
mov
fs
push
je
xor
icebp
ret
push
jg
roll
sar
mov
add
fs
rolb
inc
dec
mov
outsb
mov
xchg
mov
push
or
jne
cmpsb
dec
into
fidivrl
xchg
xor
scas
test
test
inc
mov
xchg
mov
mov
sbb
push
xor
inc
xor
test
xor
add
pop
sbb
jne
or
rcl
rcl
add
pusha
movsb
xchg
stos
add
xchg
je
rcl
cmc
out
enter
hlt
pop
dec
mov
lret
loopne
rolb
je
push
pop
push
cwtl
dec
lret
lock
lock
je
mov
ds
mov
rol
rcrb
xor
je
cmp
je
push
inc
aam
inc
sbb
push
sbb
jmp
push
add
sbb
mov
mov
cld
les
dec
in
dec
les
push
fwait
and
pop
push
push
ja
pop
lock
loopne
in
je
adc
mov
pop
adc
dec
loopne
pusha
fwait
push
inc
mov
mov
push
jne
sbb
cmc
mov
sub
cltd
mov
lock
fildll
xchg
and
jo
enter
frstor
xorb
imul
or
shrb
mov
dec
dec
leave
jo
enter
sbb
fs
cmp
stos
cs
sbb
pop
sub
or
mov
inc
or
fmuls
jp
push
ficoms
out
insb
andb
xor
ficoms
lods
jl
mov
or
xor
and
or
inc
pop
leave
push
test
or
ds
pop
adc
jl
add
cmp
mov
inc
jp
adc
ds
or
xor
push
or
cltd
ret
and
lods
adc
dec
add
loopne
adc
mov
mov
fdivrl
fs
xchg
push
add
outsl
ja
push
cwtl
xor
xor
jnp
lea
cltd
test
loopne
inc
add
add
jge
lods
fistpll
adc
in
popa
int3
int3
clc
add
fs
adc
filds
int3
fmull
jb
cli
cs
inc
rcll
push
mov
pop
jbe
push
sbb
fmuls
dec
pop
roll
cld
addl
ds
cli
or
add
rcr
mov
mov
clc
jge
andb
add
popa
mov
and
and
push
scas
or
mov
lea
hlt
shll
int3
add
push
mov
and
cmpl
mov
nop
imul
xor
cmp
mov
cmp
cwtl
movl
insb
adc
in
mov
jne
outsb
push
xor
andps
fwait
mov
push
pushf
push
mov
push
mov
shlb
sub
jo
and
mov
mov
mov
sub
jae
gs
sbb
sbb
btc
push
push
add
fs
pop
add
movsl
call
faddl
int3
jmp
inc
aaa
dec
pusha
in
outsl
push
hlt
adc
inc
adc
jle
mov
jl
mov
je
inc
loop
or
mov
add
add
adc
jno
sbb
cld
dec
cmp
faddl
loop
notb
mov
je
movl
ret
and
mov
test
scas
add
rcll
add
data16
push
push
sbb
test
inc
push
das
sbb
mov
add
test
shl
add
test
sbb
xor
mov
sub
push
add
inc
pop
shlb
mov
pop
pop
pop
test
jge
rclb
push
pushf
repz
mov
lock
int3
ror
adc
add
push
xchg
pop
dec
das
pushl
test
or
mov
dec
ret
cltd
les
add
aas
adc
test
test
gs
faddl
inc
mov
or
int3
lea
push
mov
push
pop
clc
adcl
int3
mov
xor
inc
xor
or
jmp
and
rcrb
pop
sbb
sahf
adc
xchg
nop
inc
icebp
pinsrw
lea
mov
es
add
adc
push
adc
mov
ret
loope
imul
ja
jo
or
popa
cmp
push
add
les
insb
fisubs
push
js
mov
sbbb
jle
pusha
adc
dec
sub
or
jecxz
cmp
cmpb
jle
jb
or
pushl
dec
std
push
mov
sub
inc
add
mov
call
mov
adc
lock
cvtps2pi
xchg
or
cmp
push
clc
dec
push
ja
cld
jp
das
sub
mov
push
and
jmp
dec
sbb
ret
mov
or
mov
mov
cmp
lret
filds
and
push
gs
sub
fisttpl
pop
add
xchg
jp
arpl
test
push
or
cmp
stos
lds
dec
mov
or
decl
inc
rclb
popf
fadds
negb
in
outsl
xorl
and
test
jnp
dec
in
add
add
inc
nop
xor
call
inc
jge
fisttps
xchg
push
inc
cmp
dec
mov
push
mov
push
pusha
mov
jne
sti
sahf
dec
add
and
or
cmp
mov
and
adc
insl
mov
adc
in
xchg
rcrb
std
xlat
das
clc
dec
outsb
and
aam
pop
enter
jl
in
add
xchg
add
mov
into
incl
jb
aaa
or
es
call
xor
test
sbb
out
lock
or
jne
and
mov
mov
lcall
and
mov
inc
jb
sbb
jno
je
jno
adc
inc
loopne
sbb
std
clc
mov
mov
or
je,pn
ret
mov
add
cmp
push
xchg
mov
or
jg
add
sbb
test
lea
push
out
push
test
stos
push
inc
addb
inc
mov
sbbb
dec
push
pop
ret
adc
push
adc
lock
sub
dec
mov
clc
testb
arpl
xor
ds
popf
sub
test
sub
cs
sbb
add
in
pop
dec
insb
loopne
aad
data16
adc
push
mov
mov
es
int3
inc
add
fxch
xor
lds
mov
adc
jmp
fwait
out
xchg
xchg
mov
push
add
add
lret
int
sbb
push
inc
mov
mov
fsubrl
fisubrs
sbb
mov
xchg
ret
insl
cld
nop
jle
jo
mov
adc
les
mov
ret
lods
push
fcoml
cmp
inc
xchg
lea
sub
cmp
xchg
out
ret
push
and
adc
clc
iret
test
add
fiadds
and
test
in
push
sub
fwait
lock
cli
inc
adc
incl
mulb
mov
les
lahf
and
jle
cmp
orl
lods
test
lahf
mov
and
ret
add
dec
ficomps
jg
test
cs
test
dec
cwtl
push
mov
adc
cli
rorl
outsb
and
mov
rcll
mov
push
enter
outsb
dec
mov
stos
lret
pop
add
sub
or
pop
stos
pop
insl
inc
sbb
daa
jge
xchg
or
cmp
popl
mov
xchg
mov
jle
in
outsl
mov
inc
jne
push
arpl
stc
incl
cld
hlt
shll
and
sub
add
adc
rcrb
arpl
fistpll
push
pop
xchg
mov
dec
adc
nop
push
mov
es
movsl
or
cmp
call
inc
fs
rclb
and
lahf
inc
mov
mov
andnps
mov
cld
mov
shll
cmp
test
fsubrl
xchg
xchg
daa
out
pusha
add
sbb
add
mov
pop
pushf
push
adc
fstpl
cmpb
fs
scas
push
sbb
xchg
mov
outsl
pusha
sbb
insl
enter
add
pushf
inc
sub
add
sub
cmp
or
push
shlb
pop
bound
loopne
and
jne
xchg
ret
inc
pusha
pop
lods
pop
lock
bound
inc
jne
sahf
jle
mov
xchg
add
and
lret
add
lcall
push
pop
sar
xchg
cmp
icebp
inc
push
loop
add
stos
aam
enter
mov
lahf
jecxz
scas
or
inc
outsb
arpl
mov
clc
inc
lcall
push
xor
jo
repz
jge
adc
xor
dec
push
xchg
push
add
mov
mov
int
adc
mov
add
add
dec
fmuls
jae
outsb
rcrb
lods
imul
dec
ja
mov
inc
inc
add
xchg
push
pop
push
call
xor
inc
add
push
in
stos
pop
jmp
jns
icebp
cld
dec
add
push
std
outsl
pop
and
pop
add
add
xor
incl
daa
enter
push
test
insb
pop
add
sbb
sbb
or
das
push
add
outsl
pop
orb
push
xor
js
sbb
mov
in
rcrb
mov
mov
mov
ljmp
ss
ret
shrb
fsub
adc
mov
push
jl
inc
adc
pop
outsl
pop
dec
dec
jge
repz
fmulp
aas
rorl
mov
rcrl
ja
mov
push
icebp
outsb
inc
pop
pushf
cld
or
test
icebp
fldl
cmc
imul
and
cmpsb
popa
mov
test
mov
adc
inc
cs
outsw
or
inc
js
inc
pop
in
rcrl
sbb
xor
add
js
clc
js
inc
push
adc
or
add
push
xor
jg
push
add
or
aad
or
jge
enter
decl
cmp
jmp
testl
mov
call
das
dec
push
dec
outsb
decl
inc
ret
fcmovu
sub
push
je
out
sbb
mov
xor
mov
test
call
mov
mov
shr
lcall
cmpsb
nop
xorb
cmp
paddb
clc
cmp
test
xchg
faddl
inc
fstl
out
aas
cwtl
cltd
push
imul
jmp
cwtl
push
ret
mov
cmp
pop
fs
push
adc
out
push
add
stos
mov
sbb
std
and
mov
frstor
inc
dec
jle
rcr
mov
shll
or
add
test
lds
mov
pop
call
add
repnz
movsb
testb
pop
sbb
cmp
hlt
ds
and
add
xor
inc
push
add
shl
sbb
sbb
jne
add
sbb
test
sub
cmp
add
mov
pop
dec
or
add
mov
shrb
decb
xor
outsl
out
sub
adc
test
and
xor
fstpt
mov
sbbb
or
sub
or
and
push
add
rcll
jmp
loopne
lea
cmp
mov
mov
push
mov
mov
push
push
sbb
andl
cmp
notl
rolb
aam
movsl
sub
push
ret
lret
or
sub
js
js
call
gs
pushf
mov
adc
add
loope
daa
mov
repz
lods
and
add
adc
xor
jg
add
add
xchg
and
ret
push
fldt
xor
dec
mov
mov
cmp
popa
xlat
les
mov
outsb
icebp
sub
xor
aad
push
xor
xchg
cltd
mov
sbb
push
sahf
mov
into
test
jmp
jle
add
adc
ret
adc
les
outsb
inc
in
or
andb
fists
adc
mov
aaa
ret
mov
jp
incl
push
cmp
loop
xchg
push
ds
movsl
and
sbb
call
push
adc
sarb
xchg
leave
cmc
sub
mov
ljmp
xchg
cmc
and
clc
pop
mov
cld
test
inc
je
dec
jne
in
fstpt
in
xor
inc
adc
cltd
cld
push
mov
ret
aad
xor
js
test
sub
lea
inc
lods
test
and
notb
inc
lret
addb
fs
sub
mov
jp
mov
imul
movl
ljmp
jge
clc
addps
ret
imul
sub
add
dec
lock
enter
mov
repnz
mov
mov
sbb
fsubr
mov
xorb
add
mov
add
clc
adc
test
xor
inc
jo
mov
dec
xchg
cli
add
push
push
lock
xor
mov
jne
call
inc
xor
jb
sub
mov
dec
jbe
int3
dec
inc
mov
adc
in
push
sbb
loopne
push
loop,pn
loope
cld
shrb
dec
or
xor
ss
sub
inc
xchg
dec
call
test
and
arpl
leave
sbb
test
test
fs
add
jg
add
xor
fstpt
and
jb
push
dec
in
lods
cmp
xchg
dec
call
fisubl
pop
pop
pop
cld
and
and
mov
into
inc
jge
aaa
lea
sub
pop
clc
push
pop
or
add
push
je
inc
movsb
xor
lods
xor
stc
out
rclb
inc
xchg
or
mov
dec
inc
sbb
dec
pop
sbbb
cmpsb
sbb
je
xor
aaa
scas
mov
add
in
and
inc
data16
sub
dec
addl
lock
mov
xchg
adcb
jge
push
cmpsl
push
int3
imul
mov
xchg
lcall
bound
lcall
faddl
and
fcompl
in
add
adc
call
push
mov
push
rcr
jp
mov
loopne
inc
fnstsw
je
mov
insb
leave
lret
sbb
cld
fdivrs
shlb
in
adc
pop
inc
pushl
xchg
push
stc
mov
dec
xchg
loope
gs
lcall
mov
mov
xchg
mov
inc
push
jecxz
lock
divb
test
push
mov
push
inc
pop
sbb
and
sbb
das
sbb
stc
iret
push
jo
adc
rorb
mov
outsb
cmc
push
lea
pushf
gs
idivb
sub
xor
push
push
lds
pop
inc
fucomip
lock
adc
mov
mov
outsb
adcl
ret
popa
xor
rol
outsb
adcb
jg
jae
sbb
push
xchg
and
or
adc
stos
pop
je
dec
es
lahf
shl
imul
cli
mov
fwait
ret
push
into
or
pop
push
jbe
outsb
das
mov
mov
in
ss
stc
addr16
push
pushl
adcl
lock
mov
pop
jnp
mov
lock
add
or
stos
loopne
ljmp
testb
inc
cmp
mov
sub
adc
bound
movb
bound
pop
aas
lods
je
rolb
push
xchg
xchg
bound
mov
sub
add
movsb
clc
aas
sub
arpl
inc
inc
adc
sbb
or
jl
push
inc
mov
les
test
and
pushl
cmp
fimuls
push
inc
lret
movsb
mov
insb
push
outsb
pop
fs
jne
flds
add
push
sbb
add
and
inc
push
inc
add
testl
sub
popa
xchg
adc
adcl
cwtl
push
pop
loopne
es
xchg
std
adc
or
jl,pn
negb
test
mov
ret
stc
call
lock
ss
push
cmpsb
out
pop
xchg
push
inc
ret
js
adc
jb
shl
jge
je
inc
fists
jb
repnz
sub
std
ljmp
adc
mov
popa
clc
ret
mov
and
or
or
cmp
sarb
rcrb
sub
push
hlt
addl
adc
dec
jg
inc
xchg
cmp
mov
rcll
into
jle
inc
inc
ds
ja
pop
jae
je
popa
imul
mov
jle
cwtl
push
sub
or
add
scas
fisubrs
jbe
push
rolb
nop
clc
inc
sub
mov
or
mov
imul
adc
ja
mov
pop
add
or
adc
cmc
add
aas
stos
lret
movsb
xor
fildl
sahf
push
inc
icebp
lods
mov
repz
sbb
in
cmp
xor
sbb
sub
lret
addl
cmpsb
mov
insl
pop
in
clc
loope
stos
popl
lret
pusha
fidivrl
sbb
sbb
inc
popa
cld
adc
rcll
push
jecxz
pushf
loopne
lock
push
xchg
mov
xorl
es
xchg
pop
mov
addb
call
jecxz
and
push
mov
jne
in
fildll
icebp
insl
add
out
mov
push
or
sar
mov
pop
or
outsb
or
fimuls
cli
test
aaa
pop
xor
lock
mov
roll
fdivl
push
nop
aam
lock
adc
add
shl
pop
cmp
mov
andw
and
add
cwtl
dec
sbb
jle
outsb
xorb
iret
inc
mov
loopne
outsl
repnz
dec
sbb
aam
stc
cli
inc
les
inc
inc
jo
xor
rolb
je
es
loop
fldt
mov
hlt
inc
push
mov
out
lcall
mov
stc
dec
mov
js
lods
stos
dec
cmp
add
push
or
push
ret
jg
push
pop
fdivl
data16
enter
or
push
pusha
and
test
lret
shlb
add
scas
add
dec
insb
jb
push
or
je
sarl
test
aaa
mov
mov
or
mov
jbe
gs
jmp
jl
cmp
push
pop
ds
jle
adc
xor
push
cli
add
xchg
inc
pop
movsl
xchg
popf
add
icebp
ss
daa
mov
pop
push
shll
stos
mov
dec
inc
test
popa
nop
out
inc
pusha
push
add
mov
dec
push
mov
dec
push
add
enter
sbb
jno
mov
pop
repnz
push
or
inc
add
add
icebp
or
sbb
stos
or
or
rorb
inc
jecxz
mov
cmc
sub
inc
fs
sbb
add
shll
push
mov
sar
lcall
dec
and
pusha
stc
push
or
pusha
cmp
icebp
movsb
icebp
adc
inc
xchg
xor
xchg
sbb
cld
mov
jb
jg
loopne
movb
out
add
loop
in
add
or
iret
shrl
push
push
xor
enter
nop
out
fists
jo
es
adc
jno
push
mov
insb
sub
xor
mov
cmpl
push
insb
std
aam
cmp
jg
enter
mov
dec
or
xchg
rcrb
or
sub
adc
push
cli
cli
sbb
xor
inc
inc
push
leave
pop
mov
jns
dec
cmp
jb
mov
mov
js,pt
outsl
sub
sbb
xor
inc
and
addb
sub
or
daa
sti
ja
sbbl
and
adc
cmc
dec
call
adc
jne
bound
subb
mov
jecxz
mov
aas
cmpsb
push
mov
add
ret
rclb
mov
inc
push
orb
xor
inc
jb
movsl
mov
mov
pop
mov
inc
movups
mov
xadd
loope
jo
cmp
xor
adc
movsb
outsb
push
icebp
hlt
pop
cmp
call
cld
fdiv
add
push
cmp
out
sbb
loope
jg
dec
jb
sbb
ja
adc
ret
ljmp
sti
add
push
push
negb
bound
and
movsb
or
mov
adc
push
mov
in
push
js
les
add
jl
in
push
orl
mov
pcmpeqd
into
lea
dec
imul
inc
fldl
pop
lsl
aaa
or
push
mov
mov
jae
ljmp
sbb
lock
cmp
or
lds
and
pusha
pop
or
inc
lods
imul
mov
aam
roll
push
pop
adc
pusha
adc
hlt
push
push
loop
sub
add
pushf
daa
xor
or
in
movsb
sbb
xor
sub
xor
jle
repz
inc
ret
and
shrl
jl
xchg
call
pop
jmp
push
rorl
es
cwtl
enter
ret
mov
mov
inc
xor
mov
outsl
movsb
mov
cwtl
js
adc
push
lock
adc
sbb
insl
or
mov
or
pop
call
bound
adc
push
stos
jle
lds
hlt
gs
cld
mov
xchg
push
jmp
xchg
add
mov
add
cmp
push
mov
in
jae
dec
testb
inc
inc
inc
imull
loopne
jbe
mov
pop
js
push
xchg
mov
add
add
mov
sub
jle
inc
pop
test
sub
mov
enter
rclb
scas
mov
in
add
add
cmpl
std
int
nop
mov
adc
inc
mov
int3
js
jb
lcall
inc
je
xor
or
adc
add
mov
lret
shlb
mov
add
les
dec
call
inc
or
inc
mov
or
xchg
push
popa
jp
ds
xorps
dec
aam
push
xor
sti
in
mov
cmc
or
fs
inc
sarb
mov
and
dec
into
push
and
shlb
jecxz
orb
loop
movsl
adc
inc
add
fildl
leave
ret
sub
cmp
inc
out
push
icebp
xchg
jne
pop
xor
or
push
jmp
or
sub
pop
pop
lea
inc
jmp
sbb
test
andl
sbb
in
push
adc
adc
out
xor
inc
mov
pop
pop
mov
stc
rclb
mov
test
scas
adc
ja
ss
adc
lods
lock
pop
and
test
ss
mov
push
and
or
test
and
push
and
mov
pop
jae
mov
nop
hlt
mov
ja
pusha
add
mov
mov
sbbl
push
cld
xchg
enter
push
pop
sbb
add
cwtl
arpl
out
mov
fs
call
push
lea
or
enter
adc
push
mov
mov
adc
int
into
push
lock
fimuls
jb
aam
and
mov
andb
jle
push
sub
dec
pop
test
mov
add
loopne
mov
lock
inc
sub
jmp
outsb
aam
pusha
test
push
loopne
xlat
outsl
xchg
js
jne
inc
pop
adc
mov
inc
and
inc
dec
jne
fidivl
cli
test
test
push
push
pop
mov
sbb
sub
inc
movsl
dec
xor
inc
sbbb
es
imul
outsl
add
bound
fistl
sub
repnz
mov
ja
outsb
adc
out
rorb
pop
inc
sbb
xor
lea
addl
mov
add
add
adc
ret
nop
cmpsb
cmpsl
add
or
clc
cmp
test
pop
rorb
mov
mov
adc
outsl
add
add
mov
scas
loopne
cmp
mov
add
pop
push
pop
pushf
mov
xchg
inc
rorb
or
int3
imul
enter
test
sar
into
sub
divl
test
xor
movsl
add
lahf
push
sar
inc
mov
inc
std
dec
cmp
sahf
adc
in
push
mov
test
ds
fistl
add
movl
fs
ret
mov
push
bound
test
pop
decb
fildll
fidivs
iret
sub
call
mov
or
jmp
mov
fcmovnbe
lock
aam
push
push
sub
ljmp
push
std
cli
cmpb
push
sbb
bound
mov
mov
sub
loop
aam
aam
xor
jecxz
movsb
ret
fs
stos
add
mov
push
dec
clc
int3
add
mov
loopne
mov
out
fbstp
add
sub
ja
mov
pop
int3
mov
inc
xchg
add
incb
push
mov
adc
call
xchg
pop
push
pop
cmc
inc
pop
fsubrs
je
and
roll
add
push
mov
or
add
call
mov
call
ds
inc
xor
dec
pop
inc
jg
lret
clc
cmp
adc
clc
jge
insl
mov
loopne
sbb
addl
add
mov
mov
push
std
xor
push
mov
jg
in
int3
int3
cmp
fcompl
mov
js
push
int3
and
shlb
aas
mov
stos
xchg
enter
inc
add
add
je,pn
xchg
ljmp
aas
adc
jb
xor
xchg
in
dec
cmp
xchg
rcrb
test
pop
jbe
push
das
aam
jmp
or
add
add
clc
fnstsw
inc
sbb
adc
loop
adc
leave
or
imul
inc
inc
incl
mov
or
xor
cld
icebp
cmpb
aam
xor
jmp
lcall
sbb
clc
inc
shlb
decb
cs
mov
jp
sub
pop
inc
add
cld
ja
push
mov
xor
mov
lods
add
arpl
cli
ljmp
xor
mov
mov
jb
mov
mov
and
out
bound
mov
fcmovb
lret
int3
cmp
adc
xchg
popa
enter
xor
rorb
cmp
aas
mov
and
or
loop
test
test
test
dec
mov
movsb
aam
call
and
add
mov
lret
fsubr
insb
cld
pop
out
mov
inc
out
push
dec
scas
xor
data16
inc
pop
pusha
mov
cmp
sub
loopne
mov
lcall
decb
das
and
sub
aaa
jmp
push
decb
hlt
js
aam
xor
mov
jo
jmp
les
or
pushf
pop
sbb
aas
lcall
jmp
xchg
jo
xor
shll
cmp
push
push
fsubrl
test
das
mov
adc
insb
decb
lret
ljmp
mov
mov
adc
xchg
les
jg
pop
or
nop
cmp
dec
jge
call
push
lock
push
xbegin
cmp
mov
clc
ret
test
in
inc
out
rorb
and
in
cld
push
push
and
jmp
inc
cld
or
jl
jmp
fnstenv
mov
mov
push
pop
or
in
rcll
clc
xchg
mov
ret
jp
idivb
orb
fs
dec
add
add
test
pop
popf
or
mull
js
fwait
push
jns
out
adc
add
pop
sti
mov
fwait
test
loopne
mov
fimull
sar
lds
add
inc
jne
jb
mov
les
or
ds
adcl
aam
out
into
add
xor
test
je
loopne
push
shlb
or
sub
jl
or
outsb
xor
addl
adc
in
mov
mov
jmp
add
mov
bound
fprem
pop
je
jmp
dec
sbb
inc
add
jbe
add
ss
xor
insl
aam
adc
aam
push
mov
std
loopne
stc
mov
push
mov
addl
pop
fs
sbb
data16
clc
dec
dec
fiaddl
add
inc
dec
pusha
and
and
push
pop
push
test
jo
leave
sbb
or
mov
adc
jb
rolb
movsb
icebp
shlb
cmpb
adc
add
and
add
inc
pusha
fmull
push
lea
inc
sub
pop
inc
cld
push
in
sbb
adc
mov
lods
or
mov
fimuls
xchg
add
pop
pusha
add
adc
fcmovnbe
push
fadds
sbb
decl
lea
loop,pt
mov
clc
loope
jle
popf
push
xor
adc
sbbl
pop
sbb
cmp
cli
pop
lret
inc
pop
movsl
or
push
mov
lock
sbb
add
ret
lret
jmp
pop
jmp
xor
add
hlt
into
pop
jo
mov
push
or
jb
pop
imulb
rcrl
xor
lret
ljmp
ftst
push
stos
or
push
add
or
fcompl
out
test
shrb
and
mov
and
sub
pop
sarb
mov
add
add
mov
lods
sub
int3
adc
enter
jne
cmpsb
xchg
hlt
das
sbb
dec
mov
fistl
lock
xchg
mov
sub
das
jne
mov
aam
or
les
inc
sub
or
push
cmpsl
adc
lock
ret
sbb
shrb
pop
cmp
outsb
mov
push
add
loop
clc
loope
ds
or
arpl
mov
gs
jmp
push
mov
test
xchg
add
pop
mov
push
mov
jne
sbb
rcll
push
mov
fsubrs
pop
gs
inc
repz
aaa
lock
adc
adc
cmp
add
mov
inc
es
jge
dec
add
addr16
push
adc
inc
push
dec
shrb
repnz
pop
mov
ljmp
cmc
xor
mov
call
je
lods
mov
stos
dec
ror
movb
jmp
or
cmovge
sub
into
into
sbb
call
lea
lea
decl
add
outsb
pop
insb
xchg
push
sbb
jmp
xor
lds
in
cmp
movsb
xor
mov
test
std
inc
dec
push
mov
insb
mov
scas
clc
xchg
call
addr16
mov
adcb
adc
jge
cli
js
pop
or
ljmp
std
push
sub
fs
test
cmpsl
pop
gs
push
sbb
dec
pusha
rorb
jle
jg
andb
cmp
mov
clc
dec
addl
scas
xor
jbe
ret
add
and
dec
or
insb
test
push
pusha
test
arpl
incl
pop
adc
je
mov
fmuls
icebp
fildll
dec
inc
and
mov
jl
xorb
clc
sysexit
push
cld
push
testb
mov
or
out
sarb
fs
addl
icebp
fistps
pop
mov
pushf
add
inc
add
mov
inc
sbb
outsl
or
adc
nop
dec
ja
incl
mov
pop
adc
jl
arpl
inc
dec
pop
pop
imul
pop
add
push
lods
push
decl
sub
mov
mov
and
enter
jmp
inc
pop
in
insb
xor
insb
adc
ss
call
dec
adc
aad
or
xchg
and
add
sarl
lcall
push
or
fstl
out
cmp
gs
dec
or
mov
lock
dec
clc
mov
xchg
xor
push
inc
cmp
mov
sub
mov
inc
or
outsl
adc
das
add
pusha
gs
or
sbb
and
fimuls
dec
scas
cld
pop
nop
rorl
inc
ret
mov
fsubs
push
and
mov
cmpsb
jp
xchg
push
outsb
gs
cmp
push
mov
pop
cwtl
pop
mov
pop
insb
or
adc
fnstenv
es
sarb
call
rorb
fsubl
or
pop
xchg
outsb
test
mov
jae
in
xor
nop
push
add
pop
aas
mov
fnstcw
push
or
pop
test
add
mov
inc
push
loope
mov
cli
popl
xlat
shrl
and
aas
jge
dec
aam
arpl
cmpsl
stos
xchg
jb
xchg
jb
sub
pop
pop
jbe
es
push
jecxz
sbb
mov
or
arpl
push
mov
lods
test
ret
cld
jo
mov
pop
rolb
mov
jno
dec
test
add
pop
shl
jbe
jbe
inc
and
pop
test
pushf
push
fdivl
xchg
dec
jmp
addb
inc
mov
dec
dec
jmp
cmp
dec
call
mov
mov
es
push
dec
pushf
ret
or
cld
shrb
lret
int3
std
fildll
jl
xor
push
jno
add
mov
or
into
jo
push
jbe
jp
push
and
inc
cmp
insb
sbb
fucomp
movb
data16
es
pop
push
jnp
or
scas
add
cli
lcall
test
rclb
jp
call
mov
shlb
movsb
mov
xchg
fimuls
into
jo
mov
push
inc
clc
push
data16
shrb
ljmp
je
ds
xor
es
imul
or
add
add
adc
mov
rclb
mov
in
rcrl
jmp
insb
sub
pop
inc
call
mov
das
jb
cmp
rcrb
push
jne
and
cmp
les
sbb
xor
outsb
add
push
les
and
pop
cmc
pop
xchg
test
sub
push
xor
xchg
add
pop
xchg
dec
add
clc
fs
mov
pushf
add
and
bound
imul
add
push
leave
and
cmp
cmpsl
and
or
test
jne
test
jl
aas
inc
loope
dec
or
or
cmp
mov
adc
addr16
fidivrl
ss
add
pop
addl
lock
je
add
xchg
xchg
and
je
push
add
arpl
addl
cli
leave
push
fimull
test
or
lret
jno
subl
cli
insb
or
loope
inc
or
gs
push
inc
mov
inc
loope
stos
mov
push
and
mov
das
add
pushf
inc
aam
dec
mov
jne
or
mov
cmc
arpl
loop
add
xor
insb
loope
sub
call
sbb
mov
inc
or
cmpl
andl
push
cld
dec
inc
std
sub
ret
pcmpeqw
sbb
jp
sarl
cmpsl
fildll
push
roll
loopne
inc
sbb
cmp
hlt
dec
les
or
mov
lret
pop
inc
jne
arpl
add
shll
fmuls
ljmp
hlt
aam
bound
rcrb
add
inc
pop
add
ljmp
leave
add
jae
int3
stc
mov
lea
jae
add
inc
std
adc
add
ficoms
and
loopne
fstpl
rorb
cmp
pop
out
in
aam
add
lcall
roll
inc
cmp
jb
add
test
in
push
cld
add
pop
lods
cmpsb
clc
bound
pop
std
pop
test
lcall
and
cld
lods
sub
xchg
add
cs
dec
dec
mov
jb
cs
shl
xor
push
mov
inc
dec
out
std
out
insb
cmp
cmp
add
inc
cmp
mov
adc
jl
mov
cmp
cmp
xor
shlb
push
pusha
pop
pop
daa
mov
ja
add
jbe
mov
mov
js
loop
in
stc
jb
ja
in
sbbl
clc
call
cmc
push
ljmp
pop
in
and
adc
xor
sbb
sbb
mov
fcompl
fsubp
sbb
and
imul
add
lods
and
sarl
test
addb
or
mov
pop
enter
lds
jbe
jecxz
repz
mov
inc
shrb
mov
push
or
outsb
data16
xor
push
xchg
cmpsb
std
or
cmp
and
mov
ret
pusha
push
add
in
sbb
cmc
or
jae
daa
lea
add
push
add
lods
dec
aam
test
fsubrs
and
inc
jb
pop
add
jl
cmp
jle
inc
negb
rol
ret
push
push
inc
in
stos
sti
mov
rolb
nop
adc
mov
js
lock
push
adc
inc
ret
das
int3
add
sbb
inc
inc
inc
mov
push
push
sub
mov
adc
int3
push
cli
lods
sub
test
icebp
xchg
add
mov
xchg
fs
mov
push
adc
cli
mov
ficoml
or
mov
call
and
outsl
in
clc
out
push
jo
rolb
test
jb
or
enter
inc
enter
xchg
jle
aaa
test
mov
push
out
rcrl
pop
add
add
push
pop
fcoml
fimull
mov
cmp
pop
push
es
shll
sub
cli
pop
cli
ljmp
cwtl
sbb
pop
aaa
dec
inc
rolb
or
call
sub
add
mov
pushl
mov
nop
dec
inc
movsb
add
incl
add
mov
ljmp
xor
cmp
jne
push
add
mov
jno
mov
loopne
add
sbb
fimuls
mov
loopne
popa
mov
push
ja
sbb
sar
push
punpckhbw
ja
int
push
dec
add
ljmp
mov
pop
test
push
outsb
and
jmp
lea
shlw
testb
idivl
cwtl
mov
push
add
inc
add
push
mov
insl
popa
mov
and
inc
pop
or
aaa
pop
loopne
and
pop
sti
rorl
data16
or
mov
inc
sub
addl
jb
mov
cmp
xor
std
in
test
clc
pop
add
cld
mov
cmp
sarl
fisubrs
pop
cmc
pop
sub
mov
shrb
mov
inc
mov
jg
inc
jbe
and
add
pop
fbstp
push
xchg
or
xchg
xor
decl
or
inc
xor
mov
test
sbb
cmp
and
push
push
jmp
popa
sbb
ret
fildl
lea
or
mov
mov
test
aas
push
adc
inc
xor
sbb
pushf
mov
push
addr16
xchg
or
mov
add
mov
enter
pop
xchg
testb
cmpsb
mov
aaa
mov
pop
loopne
jne
mov
test
push
mov
call
daa
mov
fisubs
xchg
mov
mov
nop
adc
clc
pop
xor
adc
fnsave
sahf
out
sbb
imul
aas
sub
jo
scas
cli
jb
adc
pop
fwait
call
jg
xchg
xor
push
in
clc
sbbb
fsub
cmp
in
and
sbb
cmp
adc
rcrb
mov
push
jb
xchg
or
mov
mov
scas
add
dec
ljmp
shll
dec
pop
inc
and
out
pop
add
andb
andl
stos
add
pop
push
scas
out
sbb
das
jg
mov
mov
xchg
mov
mov
inc
rclb
or
rclb
dec
dec
lods
lcall
dec
inc
push
pop
push
sti
mov
dec
add
mov
xor
sahf
pop
mov
movsb
push
imul
xchg
mov
js
adc
loope
jge
push
or
or
subl
syscall
mov
in
jo
push
in
jmp
mov
jae
jmp
pushf
clc
add
imul
or
into
add
inc
pusha
call
and
outsb
ret
ds
or
dec
mov
push
mov
add
or
sub
xchg
cmp
nop
loopne
xlat
cmpsl
mov
rolb
adc
add
dec
push
inc
and
or
push
mov
lock
dec
add
sub
lock
js
cld
jl
pop
ljmp
push
inc
in
sub
mov
add
test
mov
mov
mov
inc
loop
daa
inc
xor
mov
adc
inc
add
aam
and
jecxz
mov
or
jmp
cmc
add
cmp
add
xchg
pusha
cmp
lret
inc
sub
aaa
lock
insb
or
js
cmp
push
mov
enter
pop
dec
bound
into
orl
enter
mov
addr16
cli
fcmovne
je
nop
add
fisubs
adc
into
push
add
xchg
xchg
lock
inc
and
cld
sbb
test
sub
add
rcl
outsl
mov
lods
or
xchg
dec
jg
pushl
inc
daa
and
lods
fbstp
xchg
mov
mov
jns
inc
les
xorb
jle
int3
orl
loopne
les
jne
xor
cmpsb
mov
mulb
dec
jp
aas
mov
mov
imul
dec
dec
in
push
or
push
or
fidivrl
push
or
jg
inc
negb
mov
add
add
push
cmpsb
adc
push
adc
mov
cvtdq2ps
mov
xor
push
enter
mov
pop
mov
lret
dec
mov
add
add
and
or
pushf
push
push
add
and
xor
movsb
sbbl
ret
rorb
mov
mov
dec
sbb
lcall
jp
jp
jg
adc
mov
or
xchg
xorl
and
fmull
sbb
push
mov
mov
aad
lods
add
push
fs
aas
ret
cmp
push
or
adc
pop
mov
mov
mov
or
inc
out
loope
and
pop
es
icebp
dec
mov
int3
je
std
data16
ds
scas
xchg
outsb
jno
add
dec
mov
insl
push
ljmp
ds
das
lea
xor
je
data16
in
pusha
movsb
das
adc
ljmp
xor
loope
mov
cli
cld
imul
repnz
add
dec
push
cltd
clc
lock
rcrb
jp
mov
add
in
iret
adc
inc
xchg
inc
mov
jno
jl
fstps
inc
idivb
mov
and
fs
js
add
shlb
dec
cld
stos
jg
add
xlat
movl
jge
decb
xor
lret
and
xchg
repz
test
mov
mov
leave
test
mov
xor
cmp
mov
test
jmp
and
jno
andb
xor
sbb
dec
add
adc
ret
jmp
ret
pop
push
les
add
ss
aad
xor
inc
rcl
jp
leave
mov
sbb
sub
scas
or
cld
push
pop
push
fs
mov
mov
xor
mov
mov
out
mov
iret
loopne
dec
xchg
out
jno
mov
dec
std
call
add
xchg
jb
push
je
mov
sbb
mov
jno
mov
inc
std
push
sbb
and
mov
jnp
dec
xor
adc
push
jmp
std
hlt
pop
cmc
pop
ja
sahf
push
adc
lock
shrb
fsts
push
sahf
sbb
cmp
add
cmpsl
fs
addl
std
iret
lahf
push
fdivr
pop
adc
aad
jl
mov
add
mov
int3
mov
lret
lods
not
cld
push
fdivrs
or
mov
loop
mov
clc
lcall
pop
jle
andl
and
inc
pop
insb
es
ret
mov
or
pop
call
cmp
or
mov
xor
jge
data16
pushf
test
hlt
pop
or
jp
jne
fistl
rolb
mov
test
arpl
repnz
and
or
test
inc
std
shlb
test
cmp
dec
cmp
movsb
nop
or
jnp
push
gs
sub
sbb
push
cmpsl
int3
pop
aas
mov
add
jnp
adc
imul
or
cmc
clc
push
push
in
in
cmp
sti
outsb
jp
cmp
rcll
incl
xor
pop
inc
call
mov
icebp
popaw
jmp
xchg
imul
jg
jbe
sub
pop
jmp
sar
ret
imulb
pop
adc
stc
mov
sti
dec
push
push
push
add
sub
mov
add
ss
insb
in
or
sbb
ss
pop
pushf
mulb
mov
mov
push
mov
idivb
xchg
rcll
out
push
daa
mov
and
sti
test
xor
cmp
test
ja
clc
xor
push
js
je
xor
push
js
int3
inc
push
nop
loopne
sbb
ss
popf
adc
cli
dec
xchg
jp
cltd
sbb
fsubrl
jnp
inc
call
mov
push
test
or
inc
inc
inc
sub
jmp
push
fs
mov
push
decl
inc
push
add
cmp
das
push
add
inc
adc
dec
inc
subb
and
inc
or
mov
stos
add
jp
ds
outsb
nop
jle
push
jge
rol
push
mov
add
leave
push
pop
js
movb
cmp
jmp
mov
adc
fadds
out
pop
or
mov
fimull
xor
outsb
clc
aaa
insb
inc
and
pop
push
rorb
fcmovnb
aam
rolb
pop
and
mov
cmp
or
cmp
inc
adc
mov
sub
bound
negb
mov
adc
test
add
push
insl
out
mov
add
std
mov
cwtl
in
mov
xor
xor
pop
lods
pop
les
push
mov
int3
testl
filds
adc
xlat
inc
in
into
adcl
pop
push
push
enter
pop
xchg
inc
sbb
adc
jbe
js
push
add
jge
push
cld
ret
adc
push
and
inc
and
cwtl
into
loope
xchg
lock
mov
or
and
call
and
or
shll
bound
mov
cwtl
add
fildl
fidivrs
and
in
das
and
mov
cwtl
icebp
scas
push
mov
push
out
jmp
mov
sbbb
and
popa
push
loope
shrb
ljmp
ljmp
mov
xor
fs
mov
pop
fcompl
lock
std
loopne
sar
or
inc
es
push
insb
and
fildl
push
xchg
fsubl
or
je
rsqrtps
loope
inc
inc
ret
into
mov
into
rcll
mov
icebp
dec
push
adc
enter
inc
mov
mov
jb
imul
or
and
and
out
mov
lock
fldl
mov
scas
lcall
pop
clc
popa
xor
jo
ljmp
lock
jg
mov
mov
cld
lea
lds
mov
push
lock
ds
xchg
test
cmpsb
cli
add
loope
cli
adc
fwait
and
scas
mov
jecxz
inc
sti
repnz
xor
mov
in
ss
add
pop
jg
or
xor
and
push
mov
je
mov
in
hlt
leave
push
js
loop
sarb
lods
cmp
int3
in
push
pop
mov
or
xchg
aam
in
and
aas
iret
fiaddl
lea
jno
decb
cmp
fimuls
idiv
xchg
mov
int3
lock
enter
es
mov
f2xm1
mov
shlb
mov
mov
push
add
mov
cmpsl
lods
and
push
orl
adc
incl
and
dec
lcall
les
jge
dec
jp
insl
shlb
xchg
test
ljmp
cwtl
mov
pop
or
test
cld
mov
fists
mov
pop
push
lret
shlb
call
and
bts
fsubrl
mov
test
movsb
and
jp
pusha
add
arpl
or
pop
loope
into
push
fcoml
adc
or
and
int3
test
pop
loope
push
aam
ret
decl
repz
xchg
mov
mov
cmpsb
sub
or
pushf
jbe
adc
pop
mov
xchg
ss
sub
popa
mov
cmp
into
cld
shll
ret
mov
rorb
loopne
in
cmp
sub
inc
add
hlt
iret
xor
idivb
pushl
adc
insb
add
mov
sbb
sbb
loopne
xor
xchg
aam
mov
jg
mov
dec
paddq
pop
mov
test
in
push
incl
adc
mov
and
insb
mov
outsl
push
fdivrp
mov
je
pop
or
iret
cmp
and
ss
sbb
ret
fdivrs
and
xchg
push
jge
cmp
push
rcrb
or
aaa
incb
daa
add
pop
outsb
jl
fisttpll
fidivl
loope
cmp
mov
inc
in
push
or
icebp
add
xor
cwtl
mov
jo
inc
mov
push
push
andl
xchg
or
fcoms
mov
push
scas
cli
push
fadds
into
dec
dec
xor
jne
mov
je
push
cmpsl
push
xchg
gs
push
testb
aad
mov
mov
xchg
cs
sbb
and
pushf
or
rorl
iret
dec
out
gs
add
sbb
sbb
sub
cmpb
jae
mov
push
and
cs
loopne
loopne
cmp
add
hlt
dec
enter
pop
mov
je
jg
insl
add
xor
push
jle
shlb
pop
in
sub
jmp
and
pop
jbe
in
jmp
test
in
aam
add
int3
cmpb
out
mov
inc
addl
cmp
clc
jmp
ret
fld
and
push
bound
mov
stos
xchg
dec
sbb
mov
stos
outsb
cmovbe
incl
pusha
mov
aaa
rcll
rolb
lahf
fmuls
js
clc
shll
ret
decl
repnz
cmp
outsl
ljmp
push
cmp
adc
jl
add
cmpsb
add
test
mov
or
push
popf
jge
negb
inc
mov
je
std
mov
cmp
iret
jne
pop
cld
dec
push
arpl
mov
and
dec
add
cli
jl
add
outsb
loope
shl
pop
sub
aam
cmpsb
dec
dec
push
adc
hlt
xchg
cmpsl
mov
xchg
add
ficoml
add
into
cmp
xor
aam
sbb
sbbl
gs
shl
addb
ja
insb
mov
mov
add
int3
out
je
or
jns
call
fs
mov
or
mov
popa
add
mov
cmp
inc
dec
jmp
cmp
adc
adc
jo
nop
call
les
fs
xor
inc
or
adc
hlt
lods
aaa
mov
push
in
sti
push
mov
es
dec
fcmovnu
mov
adc
adc
in
add
rclb
js
push
aas
loop
inc
or
nop
outsb
mov
dec
jne
in
push
fwait
inc
loop
adc
pushl
enter
push
test
add
sbb
ds
ret
jbe
lcall
add
xor
pop
mov
add
aam
dec
inc
push
jmp
or
loope
testb
int3
mov
jmp
addr16
les
add
mov
incl
and
jo
js
test
insb
mov
pop
enter
je
nop
xorl
test
pop
or
mov
mov
mov
loope
lea
sbb
subb
push
sub
cmp
adc
addb
adc
add
inc
adc
shrl
imull
pop
call
or
and
hlt
mov
outsb
loopne
cmp
js
mov
inc
add
or
repnz
test
xor
cld
movb
sbb
pop
or
push
lods
xor
test
in
lahf
inc
aaa
fwait
push
pushf
and
add
aam
arpl
addr16
add
or
dec
in
lahf
js
mov
inc
add
mov
sbb
pushf
push
aaa
xchg
pusha
orl
lcall
test
and
push
push
sub
imul
cmp
cmp
cmp
cmp
loopne
sbb
jp
sub
adc
stos
lret
lret
and
xchg
push
xorb
sti
xchg
pusha
test
sbb
insb
mov
sub
movb
inc
xor
dec
pushl
sub
pop
lahf
test
pop
roll
outsb
push
inc
decl
mov
aam
or
int3
int3
mov
pop
call
imul
xchg
rol
insb
push
push
andl
test
inc
movsb
ljmp
dec
sbb
push
or
int3
pop
ret
inc
jle
or
fwait
xor
jb
out
xor
or
and
jno
mov
bound
add
push
outsl
adc
mov
cld
jne
push
loop
add
sbb
mov
mov
js
jnp
sub
testl
xchg
hlt
mov
lock
inc
int3
aas
ljmp
cli
or
ds
test
jbe
jb
push
mov
repz
fisubl
movsb
and
push
mov
mov
fs
mov
add
stc
push
mov
test
dec
sbb
add
int3
push
sub
push
addr16
insb
test
sub
in
pop
dec
lods
les
cmp
or
jl
mov
add
xor
sar
cmpsb
outsb
mov
dec
int
add
push
xlat
sbb
test
pop
push
call
ret
pop
idivb
jno
pop
push
int
push
cwtl
into
inc
ret
test
je,pn
inc
and
rorb
or
pop
fiaddl
mov
andl
adc
inc
ds
mov
mov
and
or
std
or
cmpl
push
mov
fiadds
int3
cs
cmp
and
sub
xchg
loop
push
ss
dec
add
sub
push
add
mov
and
adc
pop
ret
fwait
mov
push
mov
push
scas
mov
or
call
std
hlt
mov
push
ret
push
mov
int3
popf
xorb
push
ljmp
repnz
push
and
mov
inc
loopne
inc
sbb
loopne
mov
and
push
pop
nop
push
pop
mov
lock
fsubrs
ret
ljmp
adc
call
jle
mov
movsb
or
dec
jbe
jb
mov
adc
adc
push
adc
push
sbb
pop
jb
stos
ret
or
sub
adc
cmp
into
mov
xor
jmp
call
dec
xlat
pop
inc
rolb
test
jne
jmp
or
inc
push
les
inc
inc
jmp
dec
sar
roll
mov
xchg
push
jmp
int3
lock
test
xor
subl
test
int3
jmp
dec
test
fnsave
mov
in
and
push
pushl
mov
je
rorl
rolb
loopne
push
xor
test
ja
shlb
dec
jl
repnz
jno
bound
jbe
mov
mov
add
mov
xchg
xor
dec
jbe,pt
and
fadd
push
loopne
and
ret
pop
and
cmp
add
test
lea
inc
adc
cld
das
rcrb
ficomps
inc
pop
mov
push
mov
lar
adc
xor
ljmp
inc
xchg
loope
mov
fimuls
ljmp
sbb
or
mov
push
mov
dec
sbb
mov
sub
repz
je
mov
mov
nop
xlat
and
roll
addl
lret
ret
push
aas
fsubs
and
and
dec
or
aaa
lea
mov
dec
arpl
std
dec
testl
fwait
cmp
pop
xor
pop
or
fldl
adc
out
in
add
push
push
push
sub
imul
dec
xor
cmp
xchg
loope
mov
int3
test
push
std
sub
faddl
shll
fnstcw
bound
sbb
rcrl
adc
hlt
mov
mov
jo
xchg
mov
cmp
inc
add
xchg
lret
or
add
iret
lcall
pop
pusha
push
jns
push
inc
add
fcoml
sti
push
sbb
dec
push
or
mov
push
shrl
mov
pop
mov
sti
call
inc
adc
xchg
jbe
lea
add
clc
sbb
push
cld
xor
rcrb
hlt
inc
add
cld
in
movsl
or
sub
sub
in
mov
sbb
or
inc
mov
cmpsb
mov
add
cmpb
mov
adc
jmp
jecxz
jg
pop
call
mov
jne
iret
add
mov
xchg
push
push
jnp
insb
mov
inc
ss
inc
jb
or
sub
xchg
pusha
in
add
in
nop
pop
test
inc
inc
adc
sbb
notl
sub
movb
inc
pop
notb
out
jb
in
add
je
or
roll
inc
call
push
inc
imul
pop
add
mov
jb
add
jne
insl
cmp
cmp
call
hlt
push
cmpsl
in
imul
repz
out
push
add
add
jmp
adc
rcrb
pushf
pop
js
or
call
xor
mov
je
aam
adc
jl
test
test
cli
adc
int3
xor
aas
push
sub
and
imul
int3
mov
in
sti
xor
xor
push
jge
dec
scas
cs
es
scas
add
push
add
aaa
cltd
lods
push
test
je
loopne
jmp
mov
inc
xchg
call
enter
jno
call
pop
pop
and
ss
and
rol
hlt
in
xor
cli
add
test
push
sub
je
mov
cli
dec
jle
imull
cmp
inc
ss
mov
out
dec
ret
ret
jl
adc
fiadds
roll
sbb
add
insl
jge
adc
mov
test
inc
test
jne
add
fnstsw
jmp
in
rorl
jmp
or
stos
pop
inc
fiadds
mov
xorl
in
xchg
dec
mov
out
pop
call
outsb
insl
inc
jge
fs
out
je
adcl
push
push
jmp
cmp
inc
mov
cmp
test
loop,pt
ja
xchg
lcall
popa
sub
jo
rclb
fsubrl
call
add
push
inc
lea
mov
pop
xchg
orb
ljmp
push
loop,pt
inc
mov
ret
and
fmuls
shl
sti
push
sbb
pop
call
outsl
inc
mov
mov
cmp
mov
cltd
adc
insb
mov
lea
cmp
pop
mov
stc
int3
loope
cmp
xorb
add
or
je
add
add
jo
and
icebp
frstpm(287
pop
into
call
fldl
xor
mov
fs
lds
mov
adc
loopne
sub
stc
cmc
sbb
cli
push
mov
ret
jecxz
mov
mov
adc
add
cmpsb
rclb
jle
inc
and
das
mov
fisubrs
and
inc
inc
or
icebp
mov
pop
lock
mov
cmpsb
test
add
inc
sub
add
fiadds
in
or
push
mov
lock
jge
mov
fisttps
sbb
mov
lock
jl,pn
lock
ljmp
in
cmpsb
jge
mov
int3
jp
ret
sub
or
mov
mov
rclb
popa
aaa
mov
andb
jmp
in
add
out
iret
pop
add
jnp
mov
mov
push
inc
inc
loop
scas
and
mov
jge
jno
gs
scas
jo
aaa
jecxz
cli
jne
test
pop
outsb
jne
idiv
jg
call
or
clc
mov
lcall
decb
jne
mov
pushf
mov
cli
sbb
rclb
andl
int3
pop
aam
adc
add
push
push
or
aad
and
cmp
std
or
cld
pop
push
shlb
and
mov
std
dec
lea
mov
or
adc
or
mov
pop
dec
add
xchg
jae
dec
mov
pop
adc
ss
adcl
je
fs
rolb
xchg
dec
sub
mov
mov
rorl
loopne
mov
stos
jp
xchg
rcl
cld
adc
mov
mov
sahf
push
and
mov
or
fcmovbe
and
pop
jb
ljmp
mov
imul
xchg
in
call
xchg
or
mov
sbb
mov
pop
and
hlt
inc
std
pop
insb
xor
add
add
push
lea
inc
loopne
cmpsb
mov
cli
mov
push
subl
pop
xchg
lcall
hlt
clc
fadd
nop
cmpb
cld
adc
inc
jb
cwtl
lahf
clc
or
js
jo
jo
gs
add
pop
jl
mov
jl
pusha
loop
push
xchg
add
lea
setae
cld
and
sahf
mov
mov
fidivl
jbe
or
divl
mov
std
jmp
mov
xor
add
inc
add
xor
xchg
pop
dec
loopne
sbb
push
xor
sbb
aad
int
pop
xor
clc
and
pop
std
push
insl
add
orl
xchg
mov
fsubr
adc
call
inc
cmp
test
ja
call
das
ja
push
pop
in
mov
adcl
cmpsl
mov
push
lahf
mov
pushf
dec
sub
sbb
sub
fimull
cs
or
insb
inc
pop
incb
add
add
push
or
sbb
rolb
call
mov
stos
cmp
dec
xor
push
les
inc
xchg
faddl
jp
and
test
loopne
and
lea
sub
pop
clc
pop
notb
inc
mov
or
cmp
fs
fsubl
sub
shll
and
push
mov
mov
fs
jp
mov
mov
je
ret
or
jge
and
rol
jmp
stos
loopne
shl
add
adc
test
bound
mov
enter
lcall
sbb
mov
into
add
dec
dec
or
hlt
cmp
add
pop
mov
pop
xor
hlt
push
leave
pop
jmp
push
pop
in
adcb
adc
repnz
js
inc
and
add
enter
mov
xchg
insl
pop
push
loopne
test
pushl
and
jne
out
aam
jbe
call
subl
pop
std
outsb
insb
mov
jbe
int3
or
inc
cltd
or
inc
out
mov
movsb
pop
dec
pop
in
jb
fs
xlat
jne
data16
subb
add
les
sar
inc
or
push
dec
sbb
mov
nop
cmp
pop
rcrb
sub
cmp
push
test
sub
mov
in
inc
addb
jo
pop
shlb
nop
test
inc
cmp
mov
and
mov
jp
push
jecxz
add
jo
add
and
rcr
inc
loopne
cmp
lcall
add
andb
adc
gs
notl
test
push
add
pop
push
cmp
ljmp
xor
rolb
ljmp
lock
and
stos
jl
iret
loopne
push
or
filds
rol
mulb
adc
test
cmp
inc
clc
push
aam
add
jecxz,pt
add
or
nop
out
jne
pop
mov
out
mov
jg
shrl
xor
les
or
push
sbb
outsb
dec
push
cmp
add
and
sub
add
cmp
jne
jle
xor
push
jo
or
mov
xchg
dec
mov
inc
das
and
xor
call
icebp
aad
xor
gs
mov
sahf
pop
push
jmp
dec
pop
insb
or
ret
inc
orb
sub
adc
and
or
inc
test
add
ljmp
and
xor
clc
inc
outsb
in
test
rorb
lcall
je
aam
jne
add
outsl
jl
loopne
inc
cld
push
mov
and
pop
les
sbbl
mov
jbe
add
add
scas
cld
and
lret
push
adc
ret
inc
fdivr
or
mov
jae
sub
push
cmp
mov
das
jbe
sub
cmp
fs
lods
clc
mov
daa
ljmp
jne
ret
jne
js
jbe
xchg
add
inc
mov
lock
outsb
lods
jbe
std
lock
inc
rolb
sbb
jno
xchg
push
push
mov
jbe
or
rcl
and
add
pop
xchg
mov
jecxz
mov
pop
xchg
inc
in
int
cmp
push
or
pop
sub
es
jo
push
out
mov
outsb
jl
push
sub
clc
out
push
xchg
or
in
adc
xchg
push
cmp
sbb
xorb
dec
std
lea
ret
shlb
mov
cld
mov
mov
dec
mov
push
inc
cltd
test
sub
je
orl
push
movsl
popw
push
adc
shl
loopne
add
xor
or
shlb
insl
mov
loope
sahf
lea
test
xor
fs
and
mov
incb
mov
ret
ret
fdivr
sysenter
test
ficompl
mov
cmpb
mov
adc
cwtl
and
xchg
inc
jg
inc
jmp
decl
mov
lods
cmc
insb
rcrl
adc
mulb
sti
or
mov
pusha
shll
es
adc
jge
sbb
adc
test
xor
loop
or
call
xor
inc
cmp
test
andps
cld
xchg
ret
lods
call
in
jecxz
cmp
shlb
mov
bound
mov
lock
xor
sub
pcmpeqw
pop
cmp
dec
xchg
mov
push
and
inc
mov
xchg
outsb
loop
push
ljmp
les
xor
aas
lea
icebp
outsb
in
push
pop
inc
fimull
loope
inc
or
mov
mov
add
mov
mov
push
cs
or
addl
int3
inc
jecxz
mull
sub
jae
inc
mov
fildll
push
sub
xchg
jns
add
test
push
pusha
icebp
adc
add
jo
xor
test
or
jp
mov
adc
mov
and
mov
jns
jb
lock
sub
dec
add
mov
ret
add
pop
test
lcall
add
or
inc
rolb
inc
clc
lret
mov
xorl
sub
or
mov
insb
adc
lretw
hlt
hlt
add
push
or
or
fcoms
add
gs
cmp
ss
cli
jae
wbinvd
jne
xor
push
jp
and
mov
outsl
push
dec
inc
add
or
nop
adc
test
ret
test
sub
lock
push
bnd
add
cli
xchg
add
mov
mov
or
inc
shll
pop
cmpsl
and
adc
xor
mov
or
andb
dec
ret
pop
xor
scas
push
push
lods
adc
test
pushf
call
popa
pop
adc
movnti
lds
cmp
push
pop
sub
das
daa
or
mov
call
push
push
mov
aam
sbb
inc
test
je
mov
data16
insb
enter
push
clc
movsl
incb
cmp
jg
pop
and
inc
fdivrs
movsb
fsubs
mov
dec
inc
push
dec
loop
imul
into
mov
andl
rorb
add
push
push
call
insb
mov
add
add
enter
add
pusha
adc
push
inc
mov
xor
xor
push
call
adc
push
test
les
test
incb
in
mov
push
shll
mov
add
into
cmp
add
inc
arpl
shl
and
or
sar
mov
push
pop
xchg
adc
lock
lea
or
aad
xchg
outsl
jae
lea
aaa
add
lcall
inc
cmpsb
adcb
icebp
xchg
clc
sarb
lahf
fnstsw
repnz
hlt
xor
xor
xorb
test
pop
fs
jle
push
mov
push
ror
xchg
shr
mov
xchg
ret
mov
jmp
xor
ljmp
mov
mov
clc
sbb
lods
xor
xchg
pushf
shl
mov
xchg
loope
cmp
fs
sahf
movsb
cmpsb
out
mov
sbb
xchg
mov
mov
sub
mov
and
fists
mov
pop
lock
outsl
icebp
mov
test
jg
sbb
std
xor
insl
xchg
push
push
data16
push
or
stos
fimuls
jo
inc
inc
inc
mov
sarb
mov
mov
clc
adc
adcl
das
jmp
or
push
cld
push
push
add
add
sbb
mov
kmovb
outsb
dec
push
mov
int3
adc
push
in
or
jo
push
mov
jb
loopne
movsl
shlb
pop
cli
xorl
dec
faddl
nop
nop
mov
xor
mov
sub
ja
dec
adc
and
inc
sbb
push
movl
gs
mov
dec
dec
sub
and
add
fidivrs
out
and
mov
stc
lock
mov
pop
cld
in
ror
das
not
mov
inc
rorb
out
clc
sbb
mov
in
test
sbb
fdivr
arpl
lock
mov
rorb
loopne
xor
sbb
sub
lods
inc
insb
sub
enter
jne
cmp
sbb
aad
gs
fwait
jp
je
pop
fwait
rolb
sbb
iret
clc
mov
xchg
xor
loopne
rcr
enter
push
mov
xor
ljmp
movl
xchg
insl
xchg
adc
inc
fisubs
mov
fcom
jb
fisubrs
adc
add
ss
data16
std
adcl
rcr
or
jmp
fimuls
rol
lods
jmp
dec
and
add
xchg
notl
cmp
and
sbb
mov
sub
push
stos
mov
cmp
dec
push
mov
push
pop
push
cltd
movsl
dec
fadd
mov
jecxz
nop
insb
scas
pop
lret
mov
inc
xchg
test
movsb
xchg
push
inc
jmp
out
sbbl
adc
insl
lock
pushf
insb
fsubrs
into
push
adc
insl
mov
test
cmpl
bound
loope
dec
jno
or
pop
icebp
rorl
xor
xchg
inc
mov
subl
lods
je
lea
sti
insl
or
jb
cmp
xor
xchg
mov
and
jl
xchg
insb
gs
bound
in
stos
dec
mov
fnstcw
push
and
lret
xor
call
add
lods
mov
push
adc
je,pt
pop
jg
adc
mov
xor
test
push
sbb
xor
pop
add
loop
mov
int3
int3
mov
clc
xchg
std
into
in
or
mov
push
das
jnp
pushf
cmpl
mov
mov
orb
scas
aam
or
adc
loopne
mov
mov
cmp
daa
cld
pop
xor
sbb
and
sub
icebp
mov
jg
pop
or
inc
inc
and
push
inc
inc
jo
pop
sub
div
dec
in
test
fidivs
cmc
in
and
cld
mov
inc
or
repnz
std
cmp
xchg
mov
dec
testb
andl
push
mov
test
aad
mov
orl
dec
insb
test
add
int3
insb
xor
or
mov
adc
xor
dec
adc
push
aaa
pop
lock
call
sub
mov
aam
ret
rcr
clc
adc
das
add
pop
jo
fldl
outsb
mov
xchg
or
or
fiaddl
test
mov
call
inc
out
mov
push
sub
push
stos
inc
mov
inc
lcall
cli
fistps
or
fidivs
xor
hlt
inc
std
mov
int
add
pop
adc
pusha
imul
daa
push
xor
push
pop
add
fiaddl
and
mov
jl
lock
es
and
xchg
pmulhuw
pop
jp
mov
add
movsl
add
sbb
icebp
popf
push
xor
sub
mov
incb
cli
adc
outsl
cmpsb
out
push
orl
mov
inc
inc
test
test
cmpsl
inc
test
sub
cli
or
clc
je
pop
dec
xor
push
in
mov
inc
inc
and
cwtl
mov
dec
sub
outsb
ret
call
inc
es
jp
lock
pop
add
add
adc
or
xchg
aas
in
das
push
inc
pop
mov
inc
push
pushl
xor
mov
mov
push
mov
sbb
add
dec
pushf
adc
popf
movb
pop
test
jp
das
xor
dec
inc
mov
icebp
jb
push
cmpsb
jo
add
cmp
sub
or
shlb
lcall
and
fmull
inc
lea
sbbb
mov
cld
mov
sbbb
add
imul
dec
in
cwtl
ljmp
add
push
adcb
xor
hlt
pop
fadds
xchg
cmp
push
cwtl
mov
cld
call
leave
or
push
inc
sub
sar
mov
xchg
mov
mov
push
repnz
pop
cmp
add
in
lret
push
loope
les
hlt
idivb
push
sbb
push
inc
jl
dec
push
add
xor
loopne
jg
jnp
rcr
lea
jo
add
add
int3
out
movsb
adc
fistps
inc
mov
enter
mov
cld
outsl
outsl
inc
sar
cmp
mov
cmp
inc
test
shr
mov
mov
and
punpckhbw
into
or
jg
cs
dec
fimuls
andb
mov
dec
dec
std
cld
push
int3
dec
testb
test
pop
lods
xorb
push
js
add
rcr
aad
or
bound
mov
mov
ret
test
mov
push
pop
cmp
mov
and
add
mov
popa
aad
lock
test
adc
jmp
ja
rcrb
les
xchg
fimuls
lea
mov
or
aaa
inc
icebp
pop
pop
push
push
loope
je
popf
add
push
mov
bound
add
jb
repnz
movsb
jne
add
mov
xor
pop
mov
dec
rorb
mov
push
addb
push
cli
lcall
adc
mov
rcrl
negl
in
out
pop
out
in
rolb
and
push
aaa
pop
outsl
or
lea
add
lret
add
mov
mov
add
xor
jle
inc
ret
fwait
pop
jl
sarl
andb
cmp
sub
insl
nop
adc
std
insl
inc
cwtl
add
cld
imul
dec
call
ss
push
and
mov
push
pop
inc
and
aad
loopne
mov
mov
repnz
test
xchg
ret
xchg
test
add
mov
push
aaa
out
inc
dec
dec
cmp
push
test
mov
adc
mov
mov
pop
adc
arpl
lock
decl
adc
call
int3
mov
clc
mov
movsb
insb
mov
shrl
adc
scas
add
addr16
fdivrs
outsl
xor
out
std
and
mov
cltd
jle
push
clc
in
cmp
jo
and
std
addr16
lods
add
sbb
mov
bts
icebp
jns
push
and
neg
test
mov
cmp
mov
push
insb
mov
xor
daa
dec
sbb
jo
inc
lcall
or
clc
dec
mov
imul
or
xor
add
fs
nop
cmc
int
sub
mov
jmp
sub
fmuls
hlt
mov
push
add
into
push
subl
mov
incl
outsb
lret
add
or
cli
outsb
mov
repnz
test
sub
mov
dec
clc
in
sbb
sahf
sub
js
mov
xor
mov
pop
cmp
cmp
add
xor
mov
xor
clc
sti
lahf
addb
les
mov
add
fmul
mov
pop
mov
mov
loopne
add
push
cmp
das
or
adc
outsb
js
push
jae
adcb
lock
sub
dec
fimuls
fsubrs
jp
adc
push
xchg
call
mov
inc
aas
sbb
jns
xorb
inc
add
pop
inc
cld
jge
adc
xchg
mov
jno
cwtl
cmp
lahf
add
insb
ret
fadds
pop
dec
xor
xchg
jo
pop
das
mov
push
lret
xor
push
cmp
xchg
arpl
mov
cld
call
test
mov
loopne
mov
out
jnp
adcb
jle
pop
ja
xor
mov
rclb
lods
fists
mov
mov
xchg
add
pop
pop
fimuls
clts
loopne
data16
mov
add
mov
sbb
jo
loope,pt
push
lcall
mov
mov
pusha
or
cs
or
aam
push
aam
insb
mov
dec
and
shll
mov
arpl
ljmp
jno
inc
push
incb
pop
loop
ljmp
add
mov
sbb
cli
lret
jp
mov
cmp
mov
adc
inc
mov
mov
or
out
in
popf
loopne
std
add
int3
repz
decl
add
or
push
je
je
inc
popa
in
mov
pop
xor
rorb
aaa
xorb
rcl
sbbb
mov
jl
std
insb
pop
jmp
clc
push
xor
jmp
mov
pushl
cld
mov
or
sub
push
orb
js
adc
mov
adc
or
pop
add
lock
scas
or
sbb
int3
cmp
dec
or
out
ss
std
les
test
lds
jne
push
inc
dec
cld
or
or
add
insb
cmp
mov
das
test
add
sbb
sbb
call
and
cltd
add
inc
cld
out
mov
dec
push
or
jns
shlb
mov
mov
add
adc
adcl
pop
bound
andl
and
xorb
push
sbb
jmp
xor
adc
or
mov
mov
ss
add
inc
cs
arpl
sub
xchg
aad
shrl
fildl
inc
clc
push
push
mov
sbb
or
fcomps
xor
call
cmp
mov
mov
sub
mov
fmuls
xor
mov
je
inc
xchg
rolb
negl
cld
pop
mov
mov
into
cmpsb
arpl
inc
call
orb
xchg
movsb
dec
xorl
lods
push
and
mov
mov
pop
add
push
addb
shl
adc
adc
mov
xor
inc
push
out
cmp
loop
sbb
inc
add
ret
into
adc
mov
inc
psubq
cmp
sbb
inc
xor
push
mov
mov
mov
push
pop
decl
jo
xor
mov
dec
mov
lcall
push
jmp
int3
or
jno
mov
lods
add
ds
pop
bound
les
jo
mov
ja
js
adc
rolb
add
xchg
test
pop
bound
hlt
scas
adc
inc
loope
test
cmp
cmpsl
or
pop
clc
pop
add
mov
dec
pop
cmp
ret
mov
mov
cmp
in
in
pop
mov
sarl
add
pushl
js
jmp
mov
push
pusha
push
push
jg,pt
add
mov
inc
adc
mov
push
push
adc
call
icebp
cmp
repnz
xor
mov
xchg
mov
sub
lods
jg
ror
aam
adc
xor
jmp
mov
out
jle
or
mov
inc
mov
popa
fsubl
ja
movsb
movsl
sub
out
fimull
xor
sarl
aas
lcall
or
cld
pop
jl
mul
push
scas
adc
pop
jns
fcomps
filds
dec
sub
and
lea
sbb
push
in
cmp
sub
test
add
mov
add
xchg
ret
movsl
cli
mov
add
shlb
push
add
sub
xchg
test
scas
pop
std
jg
adc
pushf
pop
in
je
push
mov
push
xor
jg
push
fmull
push
int3
sub
push
pop
loope
jmp
adc
shlb
push
fsubs
push
mov
or
jae
sub
sbb
stc
test
icebp
mov
jbe
loop
push
xchg
mov
les
ljmp
or
loope
and
inc
pop
xor
dec
xor
data16
mov
add
mov
pop
test
call
adc
sti
push
inc
adc
rcl
mov
jno
mov
or
fwait
into
lock
push
loope
dec
adc
adcb
mov
or
outsb
add
mov
push
and
mov
or
mov
cmp
ds
push
mov
mov
subb
xor
dec
stos
mov
inc
add
outsb
jecxz
fiaddl
scas
mov
dec
out
loope
and
sar
gs
push
sbbb
sbb
inc
fisubrs
xor
cmp
cmpsb
or
inc
cld
fiaddl
push
xor
clc
xchg
ss
mov
mov
scas
mov
pop
push
inc
pop
jle
shl
decl
sbb
adc
nop
xor
stos
lea
int3
orb
sarb
sahf
ret
push
cmpb
std
lahf
mov
add
push
ja
jmp
into
jbe
roll
add
ss
inc
mov
rorl
push
dec
dec
xchg
js
in
testb
faddl
dec
loope
hlt
adc
lret
push
adc
xor
jo
clc
cmp
sbb
jg
and
dec
jb
push
leave
adc
dec
mov
outsb
pushw
rcr
adc
data16
add
xchg
faddl
stc
lcall
fisttpll
clc
mov
call
lods
fs
adc
test
aaa
xor
fcmovb
adc
xchg
add
mov
fimull
rolb
push
icebp
add
ja
jne
cld
ret
fmuls
mov
je
mov
add
sub
dec
or
mov
mov
adc
into
cmp
sbb
repnz
push
jne
and
adc
cmc
mov
adc
xorb
add
push
dec
clc
jp
into
sbb
mov
mov
sub
dec
cmp
add
and
aaa
jl
add
mov
sub
push
xor
jle
fmuls
add
and
inc
nop
inc
xor
in
pop
push
rol
xorb
stc
adc
add
sbb
cli
decl
aas
jmp
call
add
pop
and
inc
adc
sub
stc
adc
sbb
push
imul
aaa
xor
xor
mov
jno
jmp
jnp
mov
adcl
push
push
leave
mov
push
cwtl
and
outsb
pop
nop
dec
aam
mov
dec
sarb
adc
sbb
je
repnz
jb
cmovb
dec
mov
jbe
rol
push
cli
add
je
xchg
enter
imul
sub
push
xor
mov
repnz
push
cmp
outsb
push
repnz
test
jmp
inc
lea
jne
jl
imul
push
cmp
jb
cld
pop
cmp
or
sti
paddw
adc
call
or
xor
mov
and
je
shlb
cld
dec
dec
xor
xchg
add
scas
dec
rcl
ds
movl
pop
jae
mov
es
mov
mov
rcrb
jo
or
or
jne
xor
push
and
dec
mov
pop
add
sub
je
push
shll
xchg
int3
and
orb
add
inc
mov
dec
jne
int3
call
insb
cltd
push
push
inc
mov
rol
push
xchg
mov
jmp
pop
fs
loope
pop
lock
lret
mov
inc
mov
mov
cmp
mov
xor
xchg
sub
dec
add
movaps
mov
adcl
cli
jle
cmp
aaa
sbb
mov
dec
testb
mov
jg
xor
es
pushf
inc
xchg
sub
imul
push
cmp
mov
or
int3
adc
add
and
and
cmc
sbb
fwait
mov
adc
aad
shll
push
clc
in
lea
jl
add
mov
push
movsl
les
mov
shlb
mov
adc
sbb
mov
shlb
inc
cld
pop
fildl
cmpsl
aam
push
je
pop
out
pop
pop
cld
test
mov
sarb
pop
imul
and
nop
xor
outsb
ret
pushf
inc
jmp
imul
or
clc
fidivrs
xor
and
add
decl
pop
rol
mov
mov
mov
iret
mov
dec
loope
xor
sti
xchg
inc
add
and
mov
mov
inc
fmuls
bound
mov
cwtl
pop
daa
insb
dec
cmp
push
in
rcrb
lea
int3
xor
jb
fwait
cmpsl
or
int
ret
and
cld
mov
dec
aas
inc
std
xchg
cwtl
call
lret
jbe
push
popa
faddl
sti
popf
roll
das
adc
mov
dec
or
lods
jo
and
sub
loopne
in
mov
xchg
push
jle
jbe
push
jg
sbb
xchg
mov
hlt
add
pop
notl
lock
movsl
fisttps
add
sub
cld
fwait
icebp
push
pop
in
lock
jmp
dec
dec
enter
xor
inc
jnp
xor
jb
jno
fwait
loop
outsl
shlb
xchg
pop
add
push
lock
mov
sbb
inc
inc
pop
pop
mov
jge
xchg
or
mov
adc
lea
stc
aaa
in
or
xor
jmp
jae
xlat
push
jle
jle
pop
andl
iret
cmp
subb
sbb
mov
rcll
push
xor
ss
mov
ss
add
test
mov
incl
pusha
loope
jbe
jge
lret
sub
lock
lods
test
cmp
lea
push
lea
or
dec
and
push
sbb
test
je
cwtl
pcmpgtb
ljmp
push
mov
pop
add
ficoml
ja
adc
jl
nop
aad
adc
add
outsb
cmp
call
andb
mov
dec
clc
xchg
push
mov
cmp
fstp
dec
xchg
clc
cld
xor
push
jno
je
xchg
pop
lea
andb
add
in
ss
mov
or
inc
and
mov
push
cli
or
mov
jmp
sbb
dec
outsl
or
add
push
aad
les
pushf
and
mov
push
ret
xor
xchg
sub
jmp
or
sbb
inc
enter
lcall
sahf
ret
push
or
clc
push
mov
xor
inc
pusha
sbb
cld
cmpb
ret
and
or
insl
hlt
mov
add
and
divb
addr16
and
and
mov
or
lock
dec
lea
inc
addl
popa
xchg
ror
xor
push
ret
ret
ret
push
inc
popf
adc
pop
sbb
int3
cld
mov
dec
or
push
lcall
sub
xor
inc
ret
outsb
sbb
imul
movsb
pushl
rorb
das
dec
jmp
std
push
jo
test
xchg
scas
add
movsl
addl
lods
outsl
push
mov
sbb
shlb
sub
pop
fimuls
and
cmp
cmp
cmp
pop
adc
je
push
mov
add
lods
pop
cmp
rorl
out
into
inc
jo
fstps
aam
icebp
andb
mov
repnz
mov
jne
push
pop
mov
idivb
pop
fs
push
dec
sbb
test
aad
dec
dec
push
sub
addl
bound
push
stos
mov
cli
sub
pop
jle
mov
pop
sub
add
lret
push
add
and
clc
dec
jbe
je
lds
add
mov
add
mov
inc
fistpll
imul
or
outsb
push
clc
inc
fldt
dec
and
push
add
imul
mov
in
les
and
inc
bound
adc
test
mov
xor
or
ficomps
or
pop
inc
lods
mov
sbb
cmpb
lret
test
dec
popa
test
mov
aaa
jmp
or
lcall
pop
inc
lea
dec
pop
es
jbe
fnstenv
cmp
cld
push
xchg
xchg
and
or
inc
mov
mov
adc
lret
push
and
mov
ja
ja
lahf
pop
in
test
mov
sbb
mov
ficompl
movsl
mov
hlt
mov
push
fisttpl
cmp
sbb
push
mov
popa
mov
test
cmc
adc
adc
mov
mov
mov
jmp
dec
std
push
pop
mov
lret
and
ret
sbb
subl
jecxz
add
xor
std
call
pop
inc
test
mov
adc
push
shrb
int3
out
add
jb
hlt
incl
mov
ret
xor
insl
push
sbb
push
jecxz
mov
jl
mov
cs
dec
push
or
add
inc
out
jmp
add
aaa
mov
adc
movsbl
push
cmp
mov
mov
shl
popa
ret
lret
mov
notl
enterw
aaa
sbb
adc
adc
rcl
jbe
int3
cmp
push
inc
xor
fs
test
int3
jbe
enter
gs
add
xor
dec
cmp
jp
pop
jle
lret
inc
add
ret
addl
nop
int3
aas
cmpsb
incl
inc
aaa
loopne
sbb
cmp
out
rclb
push
mov
cmp
shlb
sbb
or
test
pop
outsl
mov
int3
lea
imul
out
test
call
movb
mov
sbb
das
push
js
adc
test
and
pop
and
ja
fsub
fcomps
mov
in
cmp
jnp
pushl
mov
sub
jnp
insl
inc
mov
orl
jnp
mov
lret
push
adc
add
ret
push
adc
or
xor
filds
or
testl
not
out
pop
js
cmp
ret
add
rolb
lea
and
push
jo
sbb
xor
mov
push
dec
or
mov
ret
dec
push
mov
shrb
fisubrs
insb
push
test
lods
sub
loopne
pushf
cld
lea
mov
movsl
inc
and
in
les
dec
inc
shll
pusha
clc
inc
cmp
pop
jg
fs
lret
shrb
cmp
xor
or
and
push
ljmp
pushl
dec
xor
arpl
stc
mov
shll
subl
orb
xor
add
mov
outsl
adc
push
cli
int3
sub
lock
push
sar
cli
add
faddp
mov
pusha
ret
mov
and
push
mov
jp
movb
leave
test
push
xchg
rorl
mov
sub
add
fcoml
xor
add
subl
mov
scas
xchg
popa
pop
add
push
int3
outsl
or
push
cld
sub
pusha
sub
adc
sub
and
ficompl
jp
add
mov
mov
jecxz
pop
shrl
adc
add
dec
xchg
call
or
je
push
push
fcmovb
mov
adc
xchg
ss
data16
cmp
int3
push
add
incb
imulb
mov
call
lea
stos
outsb
or
shrb
sub
inc
push
stc
cmp
mov
mov
ret
ss
pop
stc
xchg
lea
out
loopne
loopne
cmp
outsl
ljmp
outsb
decl
cmc
and
nop
into
add
xchg
mov
ss
inc
xor
decb
ficoml
int3
mov
sub
lahf
loop
inc
loope
add
subl
adc
sbb
lods
xor
fs
in
jle
inc
dec
mov
adcl
lea
push
in
mov
adc
inc
dec
inc
add
ja
lock
inc
mov
xor
outsl
dec
xor
mov
push
mov
in
js
mov
and
mov
orb
push
addr16
rorb
clc
cmp
test
inc
lds
ret
jo
icebp
xor
cmp
and
add
push
cmp
sub
mov
mov
lahf
add
int3
nop
mov
mov
pop
add
or
ret
rcrl
adc
and
rcr
mov
sub
pop
pop
xor
rorb
in
xor
or
jp
sbb
iret
ja
jmp
ret
pop
cmc
dec
test
jmp
or
adc
add
ss
rclb
ficoml
xor
adc
push
fidivrs
out
jge
xorb
mov
mov
pop
inc
ljmp
mov
std
xor
cmp
lcall
pop
push
cwtl
mov
pop
pop
sub
jb
mov
repz
lea
nop
sub
loope
sbb
sbb
movsb
cmc
or
daa
lea
xor
mov
mov
or
mov
pop
sar
sub
rorb
mov
cmp
loop
arpl
mov
cmp
movsl
jl
push
cmpl
fisubs
pusha
je
enter
adc
adcb
pop
jbe
cmpsb
and
xlat
or
push
jmp
cmp
push
or
cmovo
pusha
jne
jmp
mov
rcr
fstps
dec
mov
push
loop
bound
orb
inc
push
inc
inc
xchg
nop
mov
push
jge
xor
adc
clc
pop
cli
add
or
and
mov
cmpsb
test
lock
push
dec
aam
cmp
cs
xchg
dec
setle
js
pop
mov
xor
fimuls
in
push
insb
mov
mov
adc
inc
or
aam
mov
ret
loopne
sub
add
pop
jno
ljmp
jne
data16
pop
push
inc
pop
int3
add
cmpsl
mov
hlt
pop
sbb
push
cld
enter
mov
nop
rcr
xor
in
pop
lock
je
cmpsb
jo
pushf
dec
xor
adc
cmpsb
push
scas
outsb
call
sub
xorl
or
or
incl
push
lret
shlb
sbb
or
popf
sub
sub
or
sti
jl
ret
dec
cmpl
setno
out
jg
push
loope
pop
jne
add
and
lea
je
popa
or
jo
outsl
pusha
lea
imul
sub
jne
mov
pop
push
dec
idivl
insb
jp
test
mov
ret
inc
push
mov
fwait
push
fdivs
add
adc
adc
cmpsl
pop
mov
dec
push
cwtl
pop
mov
push
imul
pushf
repz
nop
loopne
hlt
int3
push
sub
rcrb
pop
inc
jg
sbb
add
push
in
xor
cmp
and
jmp
jp
sbb
stos
cmp
push
pop
fbstp
jmp
adc
jg
dec
icebp
gs
data16
and
and
or
push
push
stos
lcall
inc
xchg
mov
gs
dec
out
adc
rolb
int3
mov
add
sar
inc
lcall
mov
dec
dec
movsb
dec
rorl
insb
inc
or
xor
mov
jbe
inc
or
push
mov
lea
mov
lcall
ss
and
push
pusha
dec
shll
and
add
inc
inc
push
sbb
mov
xchg
shrl
dec
loop
add
mov
push
and
int3
lcall
imulb
in
mov
in
orl
fs
les
imul
and
leave
pop
sbb
inc
pop
and
push
sub
mov
cmc
fdivs
ret
push
in
addr16
pop
inc
out
js
jg
out
push
pusha
jmp
add
div
hlt
fdivp
fcom
pushf
adcb
fneni(8087
adc
imul
push
cltd
mov
mov
les
mov
sbb
add
mov
xor
adc
nop
xor
push
adc
jb
lret
addr16
rorb
mov
cwtl
add
or
adc
addb
repnz
movl
pop
or
mov
aas
sbb
or
mov
clc
je
xor
enter
push
ds
insl
and
ljmp
or
ret
dec
f2xm1
sbb
inc
adc
inc
push
push
cmp
pop
inc
repnz
mov
pop
sbb
pop
fdivrl
push
push
out
aas
fcmovb
adc
push
xchg
test
mov
incb
fsubrp
cld
or
or
int
scas
inc
mov
jb
hlt
inc
xor
out
shlb
add
in
rclb
dec
loope
or
cmc
and
aas
cld
pop
pop
pop
faddp
jmp
and
imul
or
adc
ljmp
xor
test
psadbw
dec
push
cmp
xchg
jne
mov
xchg
inc
es
pop
add
fnstsw
bound
addb
xor
mov
cld
mov
orl
mov
sbb
dec
add
pop
aam
adc
sbb
sub
ljmp
ret
pushl
inc
or
lock
sub
and
or
cmp
insl
add
stos
jne
xorl
scas
push
imul
cmp
mov
and
fsubrl
inc
js
fdivrp
add
mov
pop
push
notb
xor
loop
mov
push
cld
and
cmp
aas
cwtl
movsb
lock
push
sbb
mov
call
lods
pop
mov
dec
xor
movsb
cmp
jmp
inc
adc
and
insb
mov
add
aam
push
cmp
sbb
mov
jp
xor
mov
pushf
ret
and
mov
aas
lods
pop
insb
repnz
or
fucompp
mov
mov
sub
das
cmpsb
or
mov
jo
adc
push
xchg
mov
aas
shl
mov
dec
repz
lea
js
push
add
stos
mov
xchg
out
cwtl
inc
int3
pop
xor
xor
mov
push
xor
add
lds
rol
aaa
outsl
stc
cmp
callw
or
cmp
mov
arpl
pop
xchg
add
and
gs
ret
fadds
test
fidivl
outsl
jge
and
pusha
popa
xchg
icebp
sub
fists
push
mov
mov
mov
clc
push
pop
ss
xchg
push
mov
sbb
je
or
cmc
xchg
mov
and
add
fcoml
sar
push
rcl
mov
mov
cmp
data16
mov
and
or
and
aam
test
ja
or
aaa
push
push
bound
push
pop
xchg
icebp
dec
sbbl
test
jmp
fs
push
in
xor
push
push
xorl
or
pop
testb
lahf
fisubs
sbb
add
jne
rcll
cld
adc
cmp
xchg
sbb
sti
test
orl
nop
aaa
leave
jno
push
sub
lock
mov
loope
dec
dec
clc
js
loopne
insl
movb
lret
mov
dec
add
cmp
add
sar
push
fcmovne
push
mov
das
and
mov
adc
dec
aaa
or
in
add
or
pop
add
jb
scas
adc
ss
mov
inc
or
sbb
and
sbb
mov
mov
pop
test
mov
xor
outsl
pop
mov
push
or
or
sub
or
jg
and
lods
test
in
cmpsb
cmp
and
mov
push
jp
dec
sub
sub
and
fimuls
mov
add
gs
ljmp
add
sub
inc
mov
lcall
pop
mov
dec
ret
daa
call
add
int
cs
ret
mov
push
or
outsl
test
and
xor
xchg
or
fs
xchg
fwait
jg
or
push
cs
add
add
dec
add
add
jp
mov
and
ljmp
mov
or
and
jbe
cwtl
push
scas
add
mov
mov
dec
pop
mov
pop
mov
add
mov
jg
scas
shr
dec
pop
add
je
xor
fimull
add
inc
and
and
mov
clc
out
add
or
aas
cmpsb
mov
outsb
add
call
mov
sub
push
push
cmp
in
bound
test
push
outsl
or
fdiv
jg
mov
add
insl
movsl
and
loope
and
lods
sbb
lea
lods
fisubl
movsb
enter
push
xor
push
push
jb
ss
push
pushf
test
push
push
loop
popl
inc
ret
pop
js
and
icebp
fimull
bound
stc
xor
or
or
js
sub
jp
dec
loope
sub
adc
xchg
mov
mov
std
decl
mov
or
and
pop
subl
data16
add
and
fisttps
das
push
test
movsb
lahf
movsb
sbb
push
inc
pop
pop
xor
inc
push
xor
push
lock
mov
pop
loope
adc
and
shrl
add
or
das
mov
hlt
inc
jbe
lahf
or
add
aam
push
adc
mov
or
push
loopne
mov
add
dec
jp
pop
jns
inc
add
push
test
int3
les
dec
xor
cmpb
ds
or
push
insb
sbbb
in
into
aad
lods
xchg
cli
mov
mov
inc
inc
or
dec
je
add
into
gs
push
xchg
inc
in
decl
xlat
gs
clc
mov
cmp
cmp
cltd
xchg
push
adc
pop
push
aas
hlt
pop
jge
pop
ljmp
push
stos
xorb
push
icebp
pop
and
sbb
inc
push
mov
es
lahf
dec
clc
jg
or
dec
gs
cmp
je
fisubs
dec
jle
lods
mov
into
fldt
lods
adc
inc
adc
cs
jmp
xor
loope
negl
gs
pop
xchg
pxor
mov
push
mov
pushf
inc
jo
pop
cwtl
loopne
sub
lock
and
push
call
add
daa
bound
sub
add
add
sahf
fsubrl
sub
fs
xor
cmp
xor
movsl
or
cli
cmp
fisubrs
test
push
xchg
cld
cli
lods
push
and
jb
xchg
pusha
add
push
sbb
sub
vmread
pop
mov
inc
dec
shl
jge
adc
je
add
push
add
mov
xlat
add
sbb
inc
out
fstpl
dec
js
sbb
stos
and
std
scas
lock
popa
lret
push
or
lcall
je
int3
std
ret
cmp
and
sbb
mov
inc
jl
jp
push
idiv
jle
sbb
out
mov
andl
cld
pop
je
add
lret
push
ja
ds
mov
mov
push
jne
dec
mov
dec
push
sar
das
loopne
xor
pop
mov
in
daa
rol
scas
stos
sbb
push
adc
out
lock
mov
lret
data16
pcmpeqw
movb
js
pop
dec
cmp
inc
pop
icebp
scas
mov
lahf
in
mov
mov
xchg
mov
outsb
or
adc
adc
inc
nop
call
je
push
in
inc
fidivs
or
and
sbb
or
test
lock
xchg
lock
push
push
fistps
mov
frstor
mov
loope
mov
add
mov
cmpl
loop
pop
jbe
and
sbb
mov
or
and
or
nop
cltd
int
inc
cld
adc
dec
les
and
cmp
in
mov
push
fists
lods
push
inc
cld
adc
mov
push
sahf
add
xor
adc
pop
inc
dec
outsb
push
sub
adc
ljmp
mov
xor
push
aam
ficoml
xor
cli
in
arpl
xchg
add
orb
in
dec
loope
mov
add
fwait
and
adcl
std
addb
es
xchg
jle
subl
loop
fmuls
aam
mov
pop
std
cmp
jne
aam
inc
inc
cld
in
inc
popf
int3
push
inc
test
sbb
jle
testb
jle
test
shrl
sub
dec
and
xchg
jo
cmpsb
addb
push
cmp
pop
mov
addl
jmp
xchg
xor
mov
mov
hlt
dec
mov
add
into
sub
es
mov
mov
jp
shlb
jb
out
jnp
popa
cmp
push
mov
or
lods
or
js
mov
ret
push
or
aad
shlb
mov
push
imul
inc
repnz
or
imul
add
jne
xlat
push
orl
mov
mov
sbb
cs
ljmp
xor
shlb
int3
pushf
dec
push
mov
and
loopne
hlt
mov
loopne
dec
int3
incl
addl
rolb
gs
jb
hlt
xchg
fiaddl
out
pop
loopne
or
mov
mov
push
or
testl
mov
mov
xorl
stc
xor
loopne
dec
mov
lret
outsb
jne
inc
add
inc
outsl
jae
mov
outsb
dec
mov
dec
and
mov
mov
jg
sbb
and
cmpsl
call
adc
jb
mov
jl
lret
pop
sub
add
xchg
mov
ret
cmp
nop
xor
pop
xchg
cmpsb
inc
dec
test
xor
js
add
adc
shrb
psubb
push
adc
int3
sar
jmp
or
adc
mov
jae
mov
fwait
out
cld
mov
fisttpll
or
outsb
movsb
inc
dec
stos
sub
push
sbbl
adc
test
and
or
lods
sti
lret
mov
cmp
std
pop
cmp
xor
mov
sub
and
pop
add
mov
shl
pop
in
jecxz
adc
int3
out
jp
pop
int3
xorb
mov
cmp
cwtl
sbb
andl
pushf
push
or
xchg
imull
adcb
loope
cmp
dec
or
ret
xor
rol
in
mov
mov
jae
shll
adc
add
push
inc
aam
xor
pusha
mov
xor
imul
xchg
adc
sub
inc
xor
jp
mov
inc
sub
sbb
cmp
dec
sbb
mov
fidivs
scas
movsb
and
fimuls
icebp
cmp
sub
ljmp
push
adc
ret
fmul
inc
pushf
pop
ror
adc
fcmovnbe
mov
push
fsubrs
mov
mov
ljmp
mov
adcb
push
inc
mov
aas
mov
or
adcb
loope
adc
or
outsl
stos
sub
pushl
push
sahf
das
aas
adc
test
loope
or
mov
sti
mov
out
rolb
enter
xorb
xchg
lock
jo
jo
add
shrb
cwtl
je
add
js
adc
cli
jge
fistpl
pop
jno
adcl
mov
inc
orb
into
pop
and
sub
fs
testb
adc
adc
nop
mov
mov
fadds
sub
shlb
cmpsl
icebp
mov
cmp
jle
lea
adc
jg
test
jmp
test
js
push
jl
stos
xchg
test
or
sub
jo
sub
icebp
xor
int3
rolb
cmp
cmp
and
into
data16
push
sub
add
mov
aaa
adc
cwtl
rcl
mov
adc
loope
rcl
lret
mov
add
ss
pusha
std
cwtl
inc
lcall
test
cmp
dec
decb
sbb
test
push
fsub
or
mov
jne
inc
push
push
incl
aaa
adc
and
add
sbb
inc
mov
outsb
cltd
add
add
jmp
or
jns
popa
out
jns
adc
xchg
mov
mov
ss
lock
push
bound
shrb
andl
fwait
adc
pcmpgtd
inc
mov
nop
inc
dec
ret
jl
scas
sbb
push
xor
sbb
popa
or
data16
adc
dec
test
cmp
mov
sub
dec
inc
xor
cmp
shlb
mov
fstps
inc
xchg
dec
mov
movsb
push
popf
add
jmp
ljmp
jbe
jns,pn
inc
lods
mov
mov
mov
adcb
mov
fcomi
xor
shrb
into
gs
decb
popa
dec
scas
clc
dec
push
sub
add
insb
mov
das
mov
js
xchg
sbb
in
jo
outsb
mov
mov
add
sbb
aaa
sub
aaa
push
add
ror
mov
push
lock
push
nop
mov
mov
jno
add
cmpsl
movsl
paddd
sub
sarb
int3
add
adc
push
mov
mov
adc
and
push
fadds
std
ljmp
inc
lea
add
das
push
les
dec
sub
jb
call
pop
cmpsl
push
popl
inc
jecxz
ret
push
mov
shl
mov
outsb
cmp
push
clc
cmp
dec
jmp
cld
adc
cli
rep
ret
mov
enter
adcl
inc
mov
and
cmp
fldl
pop
jb
movb
enter
add
nop
adc
outsb
add
mov
add
or
push
jp
orb
nop
cmp
and
mov
add
adc
shll
dec
iret
mov
bound
icebp
lds
clc
jne
test
sar
call
add
mov
lea
test
lock
aam
push
xor
dec
lods
mov
call
add
lock
mov
lret
inc
test
dec
shl
rcl
adc
test
fimull
rcrl
and
test
shlb
lea
push
jg
clc
insl
test
dec
cld
cmp
cmpl
int3
mov
int3
inc
inc
cmp
inc
in
mov
push
incb
popf
mov
add
inc
add
nop
test
ljmp
dec
dec
mov
rcrb
pop
fs
ret
sahf
inc
rol
add
test
fisubs
mov
addl
push
adc
lea
and
mov
imul
sbb
test
adc
jp
rorb
dec
mov
or
sbb
push
clc
pop
push
bound
mov
cmp
rcrl
or
mov
sub
cmp
sub
mov
call
fisubrl
jb
jb
test
add
dec
pop
in
out
std
fwait
jbe
add
testb
mov
jg
arpl
adc
loopne
or
mov
out
outsb
jle
popf
sti
inc
push
mov
test
cld
add
add
pop
or
mov
push
and
imul
xor
cmp
mov
scas
fimull
jmp
push
adc
or
cwtl
int3
ljmp
cmp
xor
test
fs
dec
and
add
clc
or
mov
lods
cli
pusha
ror
cmp
dec
out
cmp
push
mov
mov
or
in
adc
shrl
test
cmovg
adc
cmp
sub
inc
shlb
adc
mov
mov
push
sub
sbb
push
aas
rorl
ficoml
and
adc
ljmp
mov
xchg
movb
pop
mov
outsl
cmp
insb
sub
rorb
icebp
in
fistps
ss
mov
cmpl
mov
and
test
scas
cmpsb
leave
push
je
jbe
hlt
inc
jae
xorb
je
int3
sahf
shlb
fcmovnb
xchg
lock
daa
std
shl
aaa
mov
aaa
out
fsubrs
mov
and
andb
sub
mov
add
fimull
je
mov
ds
lock
add
outsb
mov
pop
dec
daa
sbb
or
or
mov
or
shlb
push
jg
pop
push
fdivr
xor
jl
loopne
mov
mov
sbb
cmpsl
lock
mov
mov
inc
and
cmp
mov
call
and
mov
mov
ljmp
test
lcall
outsl
addps
push
ss
inc
pushl
jl
fnsave
inc
xor
and
push
sub
mov
fadds
test
xchg
inc
das
lcall
int3
xchg
mov
push
and
in
lea
cli
mov
mov
ret
movsl
lea
mov
dec
std
shll
mov
aad
test
sbb
ret
in
adc
mov
add
mov
push
push
or
lea
push
xor
insl
jmp
out
lret
jns
adc
test
shl
mov
outsl
scas
test
inc
push
mov
mov
mov
dec
test
push
adc
lods
jp
mov
mov
shlb
mov
xor
add
int3
mov
std
mov
hlt
test
add
jle
dec
roll
data16
test
inc
rolb
adc
fs
cmp
add
clc
test
addr16
push
int
xchg
ficoml
push
subb
or
add
hlt
rclb
test
loopne
jl
push
xor
mov
test
inc
mov
push
add
xor
cmpl
xlat
or
movsb
add
clc
mov
push
or
cmpsb
xchg
fildl
loopne
xor
mov
ffreep
push
inc
divl
push
add
pop
incb
inc
mov
inc
xor
adc
decl
add
and
push
imul
fisttpll
pop
ret
sub
and
sbb
out
mov
mov
mov
push
es
sarb
adc
pop
mov
xor
add
imulb
js
loopne
add
xor
decl
loop
pop
pop
adc
out
xor
add
call
mov
cmp
lock
add
mov
push
insb
mov
xor
add
fadds
outsl
jo
push
add
orl
sbb
push
roll
call
pop
sub
inc
cmp
jne
sahf
cld
repnz
xor
add
push
add
adc
pop
sbb
push
sub
and
in
out
scas
mov
xor
cld
push
jp
cmp
sbb
sbb
add
xchg
hlt
data16
pushf
jmp
dec
es
or
push
adc
push
addl
or
jge
sbb
jne
test
jne
mov
lahf
and
in
cld
test
sbb
fprem
cmp
sti
je
cmp
cld
mov
ds
stos
sbbl
loopne
ret
push
push
inc
xchg
sub
lret
je
out
mov
loop
test
fs
ret
pop
or
inc
or
mov
popf
mov
adc
insb
cmpb
arpl
decb
and
es
bound
inc
lock
dec
jne
movsb
and
imul
mov
pop
lods
pop
mov
xchg
lret
or
es
test
jp
mov
cmp
popf
sbb
mov
outsb
push
inc
movsb
bound
inc
pop
pop
cvtdq2ps
xchg
movsb
and
stc
cmp
add
xchg
push
int3
movsb
xor
xor
xor
ss
mov
aam
dec
outsb
ss
movsl
lcall
insb
add
mov
insb
test
add
ljmp
xchg
fs
inc
sbb
mov
mov
mov
push
fstpt
or
in
xchg
or
scas
inc
nop
inc
add
cld
mov
rol
xor
pop
shlb
sub
gs
jns
or
jbe
mov
fldl2e
int
mov
cmp
cwtl
mov
dec
pop
cmc
push
xorl
gs
mov
mov
dec
jl
inc
mov
and
inc
ror
adc
add
push
jg
mov
push
std
push
orl
push
hlt
jo
addr16
pushw
outsl
inc
xor
enter
rorl
movsb
das
add
lret
dec
rol
cld
filds
mov
jp
xchg
sub
add
inc
loopne
shl
icebp
push
push
inc
enter
orb
mov
jnp
lods
mov
add
xrelease
cld
or
fucomi
dec
adc
mov
mov
mov
cmp
loop
call
jg
dec
sub
adc
push
movb
js
daa
mov
lea
mov
push
mov
mov
push
jl
rclb
cmc
add
xchg
xor
dec
aad
into
mov
scas
push
negb
push
mov
les
push
cmp
add
ret
mul
mov
dec
sbb
jg
dec
mov
push
adcb
or
cld
or
cs
mov
aaa
add
out
jne
mov
add
mov
sahf
push
fidivs
clc
decl
clc
fldl
fistps
push
mov
movsl
lods
adc
test
pusha
test
or
mov
jbe
mov
dec
adc
xorb
or
ljmp
or
mov
fdivrl
cli
push
xor
cwtl
push
div
jl
xchg
jl
cld
inc
pop
addr16
cmp
lods
or
add
jl
cwtl
in
adc
push
clc
pop
push
mov
xchg
dec
pop
xchg
adc
outsb
shlb
push
push
xchg
inc
add
aam
push
sarl
movsb
xorl
jge
sarb
cmp
fbstp
ds
fwait
in
enter
lods
enter
clc
xor
ss
push
ret
gs
js
adc
test
loopne
test
dec
js
aad
insb
jae
cli
cltd
rcr
push
and
push
fcompl
scas
add
dec
ret
xorl
mov
insb
sar
cwtl
cmp
push
and
rorb
loopne
mov
push
jb
inc
fldt
push
mov
lods
call
or
push
pop
dec
jecxz
mov
fdivrs
xchg
inc
loop
pop
push
inc
adc
xchg
dec
mov
fmuls
add
jmp
mov
push
enter
ss
in
out
les
pusha
fs
int3
pop
and
adc
mov
mov
les
clc
or
sub
sub
sbb
mov
imul
call
test
jmp
xchg
and
jl
mov
add
push
xor
mov
leave
xor
mov
je
shl
arpl
mov
cmp
add
cmpb
test
add
adc
push
pop
orl
call
and
sub
push
push
je
jae
arpl
ficomps
mov
fldl
testb
cmp
in
inc
mov
out
xor
push
scas
std
test
rclb
inc
push
jo
rol
sbb
bound
lods
int3
jae
bound
lock
push
add
jecxz
insl
ret
or
inc
sbb
jmp
push
jo
std
aas
mov
xor
dec
inc
mov
scas
inc
push
adc
cmp
fmull
jecxz
es
rol
push
push
mov
fmuls
lds
stos
and
mov
mov
push
adcl
shlb
idiv
rclb
mov
push
int3
ret
xor
adc
push
call
adc
jae
fs
mov
adc
sbb
inc
lods
jbe
and
imul
and
or
or
cwtl
add
ja
cmp
xor
inc
lea
lret
in
mov
fsubr
mov
jb
inc
push
cmp
out
ret
lret
add
fldl
lahf
aam
out
xor
sub
pop
sub
or
mov
stos
add
sbb
fldt
push
arpl
in
ds
add
test
jg
or
repnz
sub
add
ds
nop
ljmp
lods
andl
mov
xchg
jecxz
cli
clc
cld
nop
data16
jo
inc
adc
jne
mov
push
movsb
jae
jbe
sub
les
ret
dec
int3
out
dec
add
je
mov
dec
mov
into
inc
inc
in
push
dec
inc
mov
mov
filds
lcall
in
out
rolb
ss
push
aas
testl
ss
mov
xchg
pop
js
rol
notb
sub
mov
mov
add
in
sbb
pop
or
cmp
movsl
test
cmp
inc
leave
stos
cmp
sti
or
daa
lea
xchg
out
sbb
or
std
mov
jmp
push
inc
je
push
jns
inc
cmp
add
and
inc
cmp
insb
arpl
ljmp
ss
inc
test
xchg
add
clc
push
sbb
xchg
out
in
sbb
dec
popf
jg
adc
add
filds
xchg
inc
add
add
xor
xchg
cld
jp
call
jmp
cmp
cld
pop
xor
inc
adcl
add
test
test
test
mov
cmp
xor
flds
cmpsb
in
and
xor
hlt
jno
sbb
cmp
js
movsb
scas
mov
test
mov
test
push
add
loop
xor
push
shrb
aaa
adc
ds
and
and
test
lock
pop
shlb
mov
pushf
sbb
sbb
je
incl
add
inc
jecxz
sbb
add
call
int3
call
mov
subl
out
inc
clc
push
shr
or
mov
fldt
rcll
push
vmovdqa
inc
adc
hlt
aad
loop
insl
adc
adc
pop
lea
lea
inc
loopne
hlt
mov
adc
mov
inc
xchg
scas
sub
cld
es
mov
in
call
or
mov
mov
jmp
push
and
cmp
push
dec
add
testb
les
ret
gs
mov
lret
sbb
sbb
push
mov
sub
insb
mov
test
in
jge
mov
mov
push
pop
sbb
lret
push
mov
insb
pusha
pcmpgtw
ffreep
add
scas
sub
adc
pshufw
push
or
addb
add
mov
mov
pop
lock
insl
test
dec
inc
jg
aas
push
je
cmpl
jl
pusha
fs
imull
mov
ja
mov
and
cmp
rorb
outsl
xor
inc
adc
or
mov
decl
jae
arpl
mov
mov
in
test
pop
sbb
out
add
sub
jl
and
mov
je
and
push
xor
jl
inc
test
lea
mov
adc
rolb
pusha
cmpxchg
sahf
xlat
push
mov
xchg
mov
int3
mov
adc
xor
rcll
add
and
push
adc
or
mov
fisubl
lahf
mov
mov
pop
fmul
and
cltd
push
cld
push
push
sbbb
adcl
roll
xor
shlb
add
outsb
stos
fnstsw
sub
mov
sarb
mov
lea
or
xchg
fs
pop
adc
and
loop
pop
xor
sbb
mov
or
push
sub
add
mov
add
cmpsb
sbb
je
jecxz
jnp
push
xor
inc
or
imul
pop
add
lcall
add
add
roll
cmp
add
loopne
cmp
jmp
sbb
jne
jbe
addl
mov
data16
xlat
xchg
lea
mov
das
cmp
das
cli
add
mov
enter
fcomps
adc
stos
adc
enter
stos
jecxz
aas
mov
js
add
jb
nop
aad
cwtl
test
jle
loopne
adc
and
inc
xchg
and
jmp
dec
in
shlb
push
adc
and
sbb
lds
add
loopne
add
lods
cld
add
andl
in
outsb
shll
or
out
xchg
push
mov
in
outsb
pop
adc
ljmp
or
and
outsl
nop
jbe
mov
add
arpl
cld
subl
sbb
push
push
push
imul
jmp
cmp
push
adc
pop
add
dec
cmp
cmpsb
push
cli
dec
jecxz
hlt
inc
mov
inc
pop
push
mov
or
add
inc
popa
js
mov
cld
mov
nop
mov
adc
jbe
dec
ret
clc
hlt
pop
jnp
mov
jle
and
and
loopne
clc
cld
push
mov
sbb
je
fld
pop
cwtl
lret
idivb
out
fimuls
or
insl
jo
or
sbb
loop
lock
call
sub
lret
mov
sbb
and
or
add
orb
test
jo
jne
xor
andb
clc
inc
out
test
xchg
bound
fstpt
cmc
xor
xchg
repnz
aad
test
sahf
std
dec
ret
push
enter
pop
inc
je
inc
inc
xlat
push
dec
or
ja
testb
call
lods
xchg
jo
outsb
push
aas
inc
mov
xchg
mov
inc
rorb
leave
jb
mov
shr
std
or
or
add
hlt
push
push
shl
xchg
jle
pop
mov
inc
sbb
je
pushf
sub
dec
mov
aas
mov
pop
ljmp
inc
cmp
sbb
mov
cmp
ss
add
sub
ficoml
or
inc
andl
add
lds
push
mov
test
inc
ss
cmpsb
add
push
notb
js
shl
cmp
jmp
mov
mov
cmp
mov
test
jl
ds
cmpb
lar
push
adc
rcll
add
aam
jb
mov
or
dec
pop
outsb
push
int
inc
shlb
aaa
xchg
pop
and
add
stos
test
pop
sbb
mov
clc
jb
les
bswap
push
cmpsl
ret
ret
jnp
jmp
jae
lods
mov
and
mov
out
testl
cmpb
push
push
cld
push
lret
insb
ds
mov
inc
xor
push
loope
add
mov
adcb
test
mov
adc
mov
adc
push
stos
std
lock
jle
adc
std
push
and
shlb
push
js
push
sysenter
push
cmp
cwtl
add
mov
outsb
iret
subb
cmc
nop
loope
sbb
fimuls
lock
sarb
lret
pushf
inc
mov
xchg
les
sbb
call
pop
and
fdivs
sub
push
clc
push
inc
xchg
add
adc
sub
pop
mov
dec
lret
xchg
js
loopne
into
rorb
inc
sub
pusha
jmp
or
loopne
cmp
outsb
jp
dec
add
inc
leave
mov
lock
push
adc
cmp
and
ret
inc
sub
repz
and
mov
fildll
pop
pop
or
pop
mov
adc
dec
mov
add
jae
ljmp
lahf
mov
pop
pop
pop
mov
add
in
jne
add
pusha
in
cli
incl
nop
shll
lea
mov
in
shl
pop
jle
cmc
movd
adc
dec
jecxz
int
lcall
adc
adc
ret
adc
je
decl
add
pushl
or
cmc
inc
sub
stos
or
pop
test
lea
adc
ret
push
mov
inc
and
stos
enter
push
jecxz
xor
mov
sbb
lcall
in
sub
xor
adc
sub
sub
inc
dec
pop
pushf
fs
sub
orb
fdivl
inc
xor
outsl
outsb
inc
jle
cmp
xor
ljmp
jno
dec
mov
stos
std
dec
je
call
xchg
jg
lret
xor
add
mov
push
or
dec
les
fcompl
inc
cmp
cltd
ror
jo
addl
adc
or
out
cmp
lods
sti
aaa
data16
inc
mov
xor
add
sub
jne
mov
fdivp
lock
scas
call
jle
xchg
add
clc
mov
adc
mov
add
cmp
sbb
jl
add
call
pop
and
dec
xchg
xchg
jo
or
clc
fisubrs
hlt
lret
cld
jbe
xchg
ret
lret
add
push
cmp
je
adc
repz
jg
push
xor
out
out
mov
lcall
ret
jge
jne
ret
or
inc
mov
ja
pop
outsl
add
and
imulb
xorb
inc
ja
pop
or
mov
aam
gs
adc
mov
decl
cs
jl
adc
inc
mov
or
xor
mov
jg
mov
push
xchg
jo
rorb
inc
notb
clc
daa
dec
lea
sbb
ljmp
mov
add
inc
loopne
cmp
dec
cmp
jp
xorl
mov
or
sbb
call
inc
inc
push
repz
mov
call
cmp
js
and
ss
in
mov
sub
xchg
add
and
loopne
push
push
ljmp
ss
fs
lret
clc
andb
sbb
pop
adc
push
les
xor
add
mov
push
or
shl
push
loope
mov
mov
scas
je
jmp
xor
or
push
js
cld
aam
pop
popa
insb
and
enter
or
je
dec
mov
in
call
xchg
add
mov
insb
xor
push
cltd
ficoms
inc
jo
mov
mov
ja
inc
jne
and
lahf
sub
daa
inc
pop
jne
js
int3
push
pop
shrb
fs
or
push
xorb
stos
aad
inc
fs
push
in
aas
sub
fisubl
mov
in
enter
push
sub
lds
or
push
push
sub
sbb
shrl
adc
or
leave
call
bound
aam
cmp
je
out
mov
xchg
repz
xor
push
movsl
sub
mov
sahf
lcall
mov
ljmp
push
jle
in
sub
mov
inc
int
add
adcb
loop
inc
out
mov
or
or
aaa
mov
test
movsb
jmp
adc
ret
jl
and
lret
push
or
push
inc
or
hlt
aad
sub
add
insl
push
pop
inc
add
fists
mov
ss
rcrl
xor
push
popa
enter
add
add
pop
mov
lea
std
add
jp
push
pop
mov
int
pop
divb
in
cltd
add
scas
jne
shrl
test
and
push
inc
mov
sub
movsb
jg
clc
push
jae
pop
adc
mov
add
xor
xor
pop
mov
jp
rcrl
mov
shrl
add
sbb
shl
adc
ss
push
rcrb
cld
xor
in
mov
insb
and
jb
add
jg
push
jb
cmp
js
sti
mov
xchg
add
cmp
ss
clc
ja
jmp
adc
sub
inc
pop
mov
xchg
push
mov
dec
stos
ret
lods
adc
out
mov
mov
testl
scas
inc
les
pop
ljmp
in
cmp
test
add
shl
jno
sub
call
sbb
decl
popf
rorl
sub
roll
orl
loopne
hlt
pop
lock
cmp
test
add
adc
cmc
mov
mov
fimuls
add
push
fsubr
sarb
aaa
mov
cmp
fwait
xchg
cli
push
jne
call
or
decl
subb
pop
jne
and
push
adc
add
rolb
es
mov
mov
inc
and
movsb
pushf
or
rorb
and
mov
pop
push
testb
inc
add
ret
cmp
in
incl
pop
xchg
lret
notb
sbb
jl
rcl
jne
adc
mov
mov
sub
jns
add
pop
and
ret
sub
sbb
es
insb
jnp
add
sbb
leave
gs
inc
and
adc
cmp
popa
popfw
or
aam
fsubrl
xchg
mov
pop
icebp
test
movsb
push
mov
pop
hlt
test
mov
cmp
lret
fistps
popa
and
je
xchg
ret
mov
shlb
adc
pop
lock
mov
out
cmc
mov
xchg
or
sub
lods
aaa
es
mov
jb
mov
fmuls
inc
add
dec
add
fmull
jp
xchg
add
mov
push
inc
xchg
cwtl
or
cmpsb
jmp
sub
mov
jae
outsl
push
cmp
xchg
shl
xor
mov
fwait
dec
icebp
add
cmp
inc
mov
mov
lea
mov
daa
pop
pop
add
xorl
mov
cld
adc
and
push
pop
inc
push
add
mov
sbb
fs
jb
dec
xor
stos
jb
add
je
cmp
jp
xchg
push
stos
mov
push
rcrb
xor
stos
shld
mov
xor
push
insl
mov
mov
aam
mov
les
pop
aaa
fcmovu
roll
mov
cmp
or
je
stos
mov
sub
push
mov
aaa
jmp
jmp
fucomip
and
fs
insl
fildl
in
pop
mov
adc
sub
test
pushf
call
popa
sbb
jno
jne
outsl
sbbl
adc
cli
test
mov
mov
jg
sbb
cmp
dec
rcll
mov
aam
aam
jp
call
xor
add
ret
jb
push
xor
add
add
dec
pop
adc
int3
test
movsb
xor
push
int3
mov
mov
clc
jo
mov
mov
add
js
or
fiaddl
push
es
sub
mov
lret
adc
add
and
lods
imul
pop
loop
dec
fisubrl
xchg
leave
ljmp
xor
and
sbb
cmp
mov
add
add
sbb
repnz
adc
push
jmp
int3
jo
add
ret
clc
clc
jmp
push
sarb
idivb
scas
sbb
movl
mov
jo
inc
add
sbb
push
cmp
clc
iret
mov
mov
adc
pop
inc
mov
pop
mov
imulb
add
mov
sbb
arpl
loope
ss
aad
jle
xor
xor
and
push
dec
les
testb
add
cmp
fistps
int3
push
xchg
or
test
sub
jp
push
fcmovnbe
cmp
cwtl
fsts
icebp
sar
fcmovnbe
data16
js
and
lea
call
jge
insb
fiadds
push
sbb
into
je
adc
popa
ret
icebp
lock
xor
or
sbb
cmp
adc
out
lret
out
mov
xor
cmp
inc
jp
inc
cld
mov
jmp
andl
test
stos
adc
sbb
sti
loopne
jecxz
push
ss
js
dec
and
movsb
push
rorl
lock
and
xchg
push
or
cmpsl
jl
ficompl
mov
xchg
push
enter
ss
add
lahf
jp
adcl
and
mov
and
inc
inc
cmpb
mov
inc
aam
fiadds
jo
adc
and
enter
mov
adc
pusha
in
out
pop
cmc
es
inc
inc
clc
inc
sbb
scas
or
mov
cmp
add
fisttps
test
std
out
cmp
lcall
pop
mov
mov
test
std
inc
mov
push
dec
jecxz
inc
outsl
int3
push
les
cmp
xorb
incl
adc
pop
rorb
xor
and
gs
lods
push
clc
call
and
push
in
jg
jp
cmc
inc
sbb
mov
sub
aad
outsb
sbb
test
mov
inc
mov
inc
mov
xor
ja
adcl
cmpb
clc
faddl
in
push
fs
cld
orb
pop
js
or
mov
push
insb
jle
or
icebp
incl
cmp
pop
xchg
add
or
subb
push
xor
and
movb
and
out
mov
push
add
lret
cmp
cmc
pop
mov
sub
pop
imul
inc
rorb
and
push
fnsave
test
cli
addr16
lock
sub
daa
add
inc
stos
lcall
fcmovnu
push
and
cmp
sub
sbbl
or
and
or
ficomps
js
or
in
bswap
jmp
arpl
push
cmpsl
insl
int3
shrb
fidivrs
dec
call
pop
int
rorl
cmp
jle
adc
loop
jno
gs
add
mov
push
add
mov
add
test
mov
xchg
fprem
or
mov
fdivrp
mov
jns
clc
jp
add
idivb
clc
cmp
adc
inc
mov
test
push
jb
push
outsl
divb
repz
ret
ret
mov
cmovb
dec
call
and
fistpl
inc
push
mov
or
add
xor
mov
cwtl
mov
xchg
xorb
imul
subb
adc
nop
pop
xor
push
negb
test
push
ret
mov
leave
icebp
mov
sarb
lods
cltd
dec
inc
rcrb
and
lahf
push
sbb
pop
out
adc
jb
out
cli
roll
iret
pop
cmp
pop
pop
out
movsb
ret
js
mov
push
mov
data16
dec
mov
test
rolb
dec
sbb
sub
loop
xor
fcmovbe
test
insb
sbb
adc
mov
jb
lea
incl
mov
je
and
leave
adc
mov
mov
mov
das
xor
push
mov
inc
scas
dec
mov
inc
shll
ljmp
gs
push
rorl
pop
clc
psubusb
test
sete
rolb
shr
xor
ljmp
movsb
lock
int
aam
gs
pop
in
repz
mov
add
mov
mov
xor
or
jb
jb
pusha
inc
add
inc
pusha
rolb
add
js
ja
sub
mov
cmp
pop
loop
sub
repnz
je
push
mov
sub
and
jecxz
add
xor
in
inc
ss
icebp
iret
xchg
cltd
sbb
imulb
adc
add
dec
and
add
loope
and
mov
movsl
mov
mov
add
sbb
pavgb
add
mov
and
das
lret
insb
hlt
add
xor
les
test
add
jae
scas
push
xchg
jle
cmp
mov
push
jne
push
or
mov
stos
mov
sbb
mov
add
add
sub
push
pop
call
mov
add
pop
xchg
jge
hlt
xchg
repnz
mov
mov
scas
test
nop
push
out
cmp
sti
pop
xchg
cltd
push
mov
cmp
stos
inc
mov
mov
std
fcos
jbe
icebp
jge
fnstsw
dec
ficoml
add
orb
jne
sub
pop
lock
outsl
lret
jne
inc
mov
movsb
loopne
mov
ss
add
lcall
popa
inc
mov
popa
jecxz
mov
xchg
jo
or
xor
ja
dec
cmp
mov
mov
xchg
test
add
or
mov
test
inc
mov
mov
jl
or
dec
mov
loopne
jge
jmp
mov
lcall
fwait
dec
mov
loope
or
jmp
mov
fmul
mov
cwtl
adc
jne
insb
hlt
add
mov
and
pop
ja
call
scas
lahf
add
dec
call
lock
and
js
js
negl
push
inc
xor
stos
mov
loope
lock
shll
mov
add
pusha
jg
sbb
push
jle
mov
call
xchg
cmp
cltd
test
mov
xor
add
stos
cmpsb
add
push
pop
or
dec
inc
mov
jmp
adc
xor
xor
cmp
popa
jnp
pop
pop
push
inc
ret
dec
dec
int3
incl
lahf
pop
sbbb
dec
xchg
cmp
sbb
xor
mov
or
cmpsl
insb
fdivrl
es
mov
dec
adcl
xor
push
data16
repnz
jecxz
int3
mov
or
cs
mov
add
add
cld
dec
cld
push
out
adc
bound
mov
mov
repnz
outsb
and
or
inc
jne
jmp
pop
les
loopne
cmpb
inc
out
cld
mov
fwait
or
pop
mov
rolb
nop
dec
jp
pop
lret
scas
adc
ret
jae
or
push
and
and
pushl
call
or
lock
mov
mov
xchg
jle
push
sub
pop
adc
insb
sbb
bound
ds
add
movb
bound
or
sub
mov
and
sub
je
adc
lcall
clc
xchg
adc
and
lcall
jmp
adc
jle
push
je
mov
add
ficomps
cli
loope
lea
sbb
and
rorb
and
pop
test
push
add
jl
data16
icebp
xchg
inc
testl
ret
xchg
xor
mov
push
popa
fs
add
cmp
add
sub
jle
or
or
inc
clc
icebp
aaa
add
mov
daa
inc
sub
out
lret
or
pop
cmp
clc
sub
and
jecxz
ret
sar
sub
nop
rorl
adc
mov
sub
add
test
dec
mov
fs
inc
or
pop
push
push
cltd
dec
ret
and
sub
dec
stos
decl
mov
push
xor
push
test
mov
mov
test
xlat
xchg
fs
xchg
out
inc
js
hlt
aam
pushf
mov
push
xor
fadds
pop
lcall
add
in
push
mov
pushaw
arpl
xor
addr16
mov
sbbb
int3
cmp
pop
push
insb
sti
cwtl
xor
xor
jg
icebp
into
lahf
add
andb
pop
arpl
ret
mov
lods
push
pop
movsb
dec
mov
mov
mov
loop
add
pusha
jmp
xchg
mov
mov
jne
or
jmp
xor
add
xchg
adc
decl
test
xchg
pop
xor
fnstenv
fwait
mov
sbb
ds
add
loop
mov
push
arpl
out
pop
sub
in
jno
pushl
jmp
add
ficoms
test
ret
icebp
jg
inc
push
xor
add
pop
lret
test
stos
push
pushf
mov
outsl
mov
mov
std
dec
call
insb
cmpsb
es
pop
add
adc
ds
lcall
add
aaa
popa
test
push
enter
mov
loopne
imul
ds
addr16
loope
divb
pop
pop
sub
roll
pop
add
push
das
fs
adc
push
xor
sbb
jg
or
inc
cmp
jb
out
ss
inc
inc
xor
pop
out
xor
ret
ja
loop
mov
out
in
or
push
push
xlat
es
push
mov
gs
cvtpi2ps
aaa
add
into
lea
sbb
incl
test
xchg
lcall
decl
neg
mov
fadds
mov
jle
lods
sarb
or
pop
fdivl
icebp
inc
dec
lcall
mov
sbb
movsb
es
mov
and
fisubs
fisubs
call
pop
push
sub
add
repnz
shll
pop
jne
test
dec
cmp
lds
fwait
test
mov
sub
mov
xor
stos
push
xlat
sub
cwtl
xor
push
xor
insl
and
ret
inc
test
sub
jne
xchg
mov
sbb
add
dec
sub
stc
ds
pushf
or
and
lret
mov
pop
xchg
push
xor
mov
hlt
pop
sub
mov
jl
js
adc
pusha
inc
pop
mov
out
xor
jne
push
filds
loope
mov
sar
push
shlb
or
add
pushf
es
lahf
test
mov
add
in
pop
push
and
movlps
sub
mov
mov
mov
jge
pusha
shlb
inc
push
adc
outsb
ret
lock
push
into
idiv
push
orl
adc
dec
ss
mov
add
jmp
mov
sbbl
pushf
add
adc
hlt
pop
ss
call
data16
rolb
pop
xor
and
cmpb
mov
add
pushf
scas
and
aad
and
jge
xchg
roll
lcall
mov
sub
addl
sahf
popa
jg
in
pop
add
scas
jl
aam
push
outsl
lock
cld
xor
mov
scas
jl
sbb
pop
scas
sbb
and
ds
incl
add
pushf
call
cld
cmpsb
ficoml
jge
xorl
or
clc
push
movsb
jge
fdivl
adc
and
daa
mov
nop
sub
mov
fiaddl
fistl
pop
mov
lea
fimull
dec
rolb
clc
ret
jg
and
push
fisubrs
mov
imul
cmpsl
cmp
int3
sbb
cli
fbld
sbb
and
jne
clc
call
jl
stos
fimull
mov
cmp
out
addb
rorb
mov
add
lret
mov
add
ret
add
imul
pushf
add
jmp
mov
xor
in
fbld
add
fidivl
pop
xchg
dec
sbb
fs
incb
lret
repz
out
push
aad
fstl
xchg
xchg
sub
adc
les
and
mov
outsl
fucomip
scas
mov
scas
lock
adc
push
mov
adc
add
jg
in
mov
stos
push
xor
mov
or
cmp
adc
ja
pop
aam
xlat
out
sbbl
adc
mov
and
scas
or
cmp
mov
movsl
out
lock
stos
incb
xchg
mov
pop
adc
test
mov
xlat
stos
jno
push
jg
mov
call
lea
outsl
and
push
jg
push
nop
sbb
mov
inc
loopne
inc
and
aaa
pop
pop
xor
rclb
ds
jmp
lcall
inc
pop
sbb
adc
pushf
hlt
jae
rcl
shrb
cs
loopne
hlt
fisubrl
rorl
es
rorb
mov
out
pop
sbb
scas
xchg
aad
jae
movsl
dec
dec
lret
jl
and
sbb
mov
jp
inc
loopne
mov
mov
scas
push
clc
and
orb
orl
and
std
test
add
out
mov
cs
dec
cli
call
push
sbbb
mov
aaa
loop
fsubrs
dec
mov
adc
clc
push
mov
mov
push
sbbb
xlat
mov
lret
pop
hlt
and
rolb
jne
cmpl
or
inc
dec
sahf
or
mov
add
and
mov
mov
jbe
hlt
cmp
jb
xchg
pop
sub
mov
ret
and
in
mov
xorl
cld
pop
les
mov
or
in
stos
inc
inc
ljmp
fsubl
mov
fmull
inc
ss
add
cmc
pop
xor
adc
push
fistl
dec
inc
xchg
jl
ds
and
mov
shlb
cmp
lea
mov
jb
or
inc
dec
outsl
test
jb
iret
fisubrl
rorb
or
mov
inc
mov
rorb
mov
adc
jno
fwait
divb
mov
icebp
mov
adc
negb
in
fildll
ret
scas
add
cltd
jb
push
aas
ljmp
add
push
adc
shrb
lret
lods
aad
out
push
fbstp
mov
add
fadd
add
lods
pushf
mov
jns
rclb
loop
push
mov
loopne
rolb
mov
sbb
movsb
add
or
or
fidivrl
fdivl
fsubrs
jne
mov
jg
add
xchg
std
xor
loopne
fcoms
shrb
lock
shr
sbb
inc
aam
sti
jle
jb
out
adc
test
sahf
rolb
mov
pusha
mov
cwtl
inc
insb
mov
ret
adc
data16
test
xorb
jge
rorl
mov
add
adc
cmp
pop
push
mov
xor
push
mov
mov
stos
mov
xor
lock
in
jne
out
out
push
in
jne
mov
cmc
jb
adc
mov
aaa
sub
roll
cmp
call
int3
outsl
pop
jl
mov
data16
pop
push
loopne
std
mov
mov
push
lods
add
bsf
mov
or
andb
jb
test
in
or
in
cld
stc
and
enter
pop
xchg
icebp
or
or
lds
push
or
call
inc
jne
insb
mov
jns
imulb
push
xor
xchg
inc
inc
mov
out
mov
add
dec
mov
cmp
cs
ljmp
jge
mov
mov
sbb
decl
mov
cmp
sti
lods
pop
mov
dec
mov
out
adc
shr
pop
neg
add
lcall
jecxz
cmp
jmp
sahf
pushf
pmaxsw
fbstp
js
mov
push
jo
inc
adc
push
test
jecxz
push
jle
fdivrs
int3
jmp
into
sbb
pop
lock
data16
mov
je
push
add
fldt
mov
mov
addb
pusha
mov
mov
popa
in
popa
je
cld
mov
push
pop
inc
lcall
pop
insb
cmp
repz
sub
xchg
mov
loope
and
adc
lock
mov
push
dec
xorb
pushl
dec
inc
popa
cmp
and
std
add
bound
rclb
inc
cmp
mov
pop
pop
cltd
clc
jmp
jle
pop
add
subb
mov
inc
and
sbb
xchg
adc
enter
push
sarb
and
jg
inc
jno
mov
je
mov
cmp
es
lock
xlat
push
mov
ret
ljmp
movsb
shl
xchg
or
imul
outsl
test
mov
jbe
shrb
cmp
pop
mov
adc
jo
pusha
aaa
dec
jg
std
or
subl
aad
shl
inc
cmpsb
outsl
inc
mov
push
xor
in
mov
movd
pushl
test
xor
gs
nop
test
lea
movsb
adc
mov
push
je
aaa
or
aam
xor
push
call
xchg
pop
nop
sbb
pop
nop
mov
cmp
inc
mov
cld
notb
adc
int3
pop
jecxz
mov
adc
in
inc
pop
dec
cld
ja
lret
dec
mov
inc
je
subb
loope
call
push
mov
add
or
mov
sbb
xor
or
mov
adc
fs
in
nop
sub
push
fmull
mov
outsb
pushf
shll
mov
or
repz
push
addb
adcb
fdivp
inc
xchg
shll
shlb
cltd
add
push
leave
mov
popf
add
ljmp
sarb
cmp
mov
mov
push
adc
cmp
fmull
xchg
mov
out
test
lods
push
sahf
arpl
jg
movsl
and
and
mov
jb
jo
adc
aas
sbb
sbb
lock
pop
push
and
pop
gs
shrb
sub
sub
lea
stc
jne
sub
adc
mov
add
hlt
mov
push
sub
test
jmp
call
add
add
mov
pop
aas
inc
cli
aam
loopne
je
pop
mov
add
push
pushf
int3
icebp
mov
sbb
loopne
addl
out
mov
adc
aad
xor
xorb
fs
sub
loopne
and
cmp
dec
push
sti
popl
nop
cmp
mov
xchg
cmp
loope
fdivrl
add
rclb
in
outsb
mov
xor
mov
lock
je
pop
cld
repnz
sub
sub
dec
pop
into
push
add
inc
cmp
out
js
xlat
xorb
mov
inc
fnstcw
js
daa
in
jmp
enter
imul
insl
rorb
test
or
push
lods
shlb
mov
cwtl
push
jmp
sbb
ss
pop
fwait
cmp
push
mov
jmp
sub
call
add
outsb
out
xor
add
cmpsb
lcall
das
adc
push
imul
mov
adc
pusha
mov
sti
pop
xchg
fimull
movsb
lea
sysexit
cmpsb
dec
loopne
sub
or
lea
and
mov
push
sub
or
push
mul
pop
mov
lock
pop
gs
jmp
insb
or
xor
lods
jnp
test
mov
xchg
push
loopne
cld
push
cmp
rol
dec
mov
fwait
mov
jne
pop
dec
dec
ds
add
dec
jb
push
mov
rcrl
cmp
std
sbb
movsb
mov
scas
fcomps
and
scas
xchg
ss
xorl
and
js
mov
mov
add
sub
push
or
adc
sub
or
outsb
cmp
cmp
jle
pop
and
cli
bound
add
ret
es
inc
call
push
dec
decl
or
ret
sub
in
dec
xorb
xor
xor
push
or
lcall
idivl
inc
into
test
in
outsl
or
fisubl
or
insb
cld
pop
cmpsb
pushl
inc
insb
adc
xor
andb
and
pushf
ds
ds
rcl
cmp
inc
stos
adc
pop
adc
jmp
xor
je
ljmp
sub
das
sbbb
cmp
add
pop
xor
mov
lret
jge
inc
repnz
xchg
and
xchg
or
mov
jl
push
adc
cmp
dec
jo
sbb
outsl
push
dec
rorb
roll
nop
or
stos
fcomip
mov
rorb
cwtl
adc
fadd
test
stos
xchg
pop
aam
pusha
mov
push
push
pop
adc
insb
js
dec
arpl
outsl
subb
ja
adc
mov
lds
int3
aad
mov
sub
paddb
arpl
pushl
sarl
sub
cld
pop
fnstsw
sub
sub
adc
push
test
mov
ret
cli
test
ja
dec
addr16
mov
rorb
xor
cld
pop
fldcw
push
pop
add
dec
movsb
test
inc
and
bound
jb
push
adc
or
inc
in
or
xor
outsl
and
dec
adc
jecxz
shll
sub
adc
and
mov
cs
rcr
stc
ret
mov
leave
push
sub
rorb
ret
aas
sub
pop
cmpsb
push
addps
adcl
cwtl
orb
and
push
mov
jl
push
fisubl
pushl
and
cmc
xchg
dec
fadds
or
test
jne
or
call
mov
cli
mov
addr16
inc
fisubrl
icebp
inc
fidivrl
push
in
ret
push
jb
dec
jmp
jge
or
inc
ror
push
add
pop
ret
adc
sub
inc
xchg
xchg
clc
pop
test
sub
inc
sub
test
pop
jbe
or
idivb
loope
add
cmp
mov
pop
stc
shrb
clc
ficompl
push
leave
mov
push
mov
popf
add
jle
mov
jl
test
push
inc
sti
mov
mov
das
add
push
jp
mov
inc
je
push
mov
int3
cld
push
mov
cmpsb
mov
aad
rcr
jbe
test
inc
add
cmp
lds
jg
mov
mov
cmp
push
shlb
fisubl
fs
lock
gs
insb
repnz
add
daa
xchg
and
or
jne
mov
jno
mov
xchg
addr16
ret
mov
xor
jp
aam
push
fs
adc
ret
andb
orl
test
std
cwtl
rclb
clc
inc
lret
pop
stos
cwtl
add
maxps
jns
dec
loop
and
insb
cltd
bndldx
dec
mov
cmp
jg
and
clc
out
out
fildl
xor
movsb
bound
aaa
push
sar
jnp
call
push
or
jns
shl
mov
popa
in
das
mov
add
mov
adc
push
push
ljmp
mov
push
stos
in
adcl
sub
shlb
test
inc
dec
bound
sub
nop
xor
jecxz
jl
pop
rcl
mov
cmc
in
cmp
add
push
ss
std
movb
mov
fiadds
jge
or
add
mov
cli
lds
outsb
mov
lods
pop
rol
fimuls
pop
roll
sub
clc
in
mov
cmpb
push
mov
int3
or
add
mov
or
sti
pop
push
jmp
test
push
jb
cmc
push
aaa
loope
mov
mov
jne
gs
stos
movsb
inc
dec
inc
lock
test
dec
add
mov
testl
cltd
and
or
add
push
push
stos
cld
insl
addl
jp
push
mov
jmp
mov
push
add
ds
jle
pop
xchg
rorl
andb
fldenv
out
mov
xchg
or
scas
pop
test
push
in
mov
mov
stos
mov
into
or
mov
mov
xor
jle
pop
insb
add
movsb
mov
mov
out
xor
cmp
add
mov
int3
mov
mov
popa
gs
sbb
add
notb
add
jbe
daa
jo
nop
cli
orl
push
test
cmp
adc
scas
loope
test
xor
cli
ss
call
inc
or
add
add
ret
xor
sti
jo
push
xor
jb
inc
cwtl
xor
mov
fsubs
or
push
cmp
add
aad
rol
loop
fcompl
dec
aaa
or
scas
imul
cmp
push
jno
xchg
adc
dec
sahf
lcall
inc
lcall
mov
in
mov
mov
jne
stos
mov
pop
jbe
icebp
lcall
inc
mov
jg
add
and
loopne
xor
faddl
mov
int3
rol
xor
cmpsb
mov
push
je
or
loop
jnp
or
aas
push
jne
inc
and
mov
fists
jae
es
std
cmp
loop
cs
push
pusha
or
mov
xor
inc
add
leave
mov
ret
push
add
add
test
mov
sti
pop
lcall
sar
add
jbe
mov
imul
daa
adc
inc
push
pop
lods
fildll
xchg
pop
add
inc
fs
pusha
mov
dec
jp
cmp
xor
dec
inc
inc
cli
out
sub
mov
rdtsc
inc
mov
sbb
fisttpl
xchg
adc
sub
sub
or
arpl
ret
mov
jecxz
mov
mov
add
cmp
mov
xorb
cwtl
push
jns
mov
and
loope
movsl
cmp
mov
lea
cmp
dec
or
in
add
testb
call
inc
bound
icebp
outsl
stos
ss
scas
sarb
or
and
aaa
fidivs
loop
pop
cmp
lock
push
push
rcll
decl
shr
or
mov
pop
push
fisttps
add
sub
mov
das
mov
dec
mov
push
jno
pop
add
jae
push
cld
inc
inc
sti
filds
dec
pop
mov
lcall
cmp
scas
jl
ret
fsubr
das
sbb
shrb
std
cmp
push
inc
adc
or
mov
mov
xor
pop
loopne
cmp
daa
loopne
rorb
test
orl
movb
jo
cli
mov
in
sbb
inc
cltd
int3
je
dec
cld
enterw
cli
cmp
mov
mov
imul
jo
pop
lock
mov
cld
sub
mov
sar
mov
mov
mov
popf
and
xchg
sarb
cmp
mov
std
push
loope
in
cmpsb
pop
add
jp
lret
mov
push
xor
xor
ss
xorb
icebp
and
push
pop
pop
or
inc
add
ror
divb
or
ret
movq
and
lea
les
mov
ja
jne
enter
cmpsb
jecxz
and
nop
ret
lock
call
or
roll
xchg
ret
mov
or
aam
xchg
ja
add
cli
sbb
sahf
arpl
cld
stc
push
xchg
add
adc
pop
test
clc
mov
clc
in
rorb
nop
push
jbe
jmp
mov
sbb
mov
mov
cmc
add
call
cli
add
fiaddl
jle
cli
cmp
jns
scas
adc
pop
push
leave
cs
dec
lret
cmc
in
pushf
lahf
xchg
inc
aas
ret
jmp
int3
ficomps
or
mov
xorb
add
mov
sbb
clc
xor
add
and
adc
fs
sbb
test
add
mov
push
inc
jge
pushf
sub
mov
xchg
adc
or
into
test
dec
faddl
ret
nop
ret
test
lods
xchg
push
dec
dec
push
xchg
or
cmp
push
inc
adc
fbld
je
cld
mov
dec
and
cmp
insb
fadds
sbb
rcrb
pop
push
xchg
sbb
cli
mov
push
outsb
xor
pushf
mov
or
jmp
ja
lods
push
sub
sbb
andb
into
xchg
inc
push
pop
loopne
adc
mov
insl
pop
pop
pop
inc
cwtl
cmp
jno
loopne
test
xchg
mov
push
sub
inc
mov
dec
jecxz
adc
call
shrb
insb
xor
mov
sahf
xchg
in
add
jmp
sub
xchg
sbb
jo
add
les
jo
stos
jp
hlt
and
mov
in
inc
or
pushf
add
or
sbb
sub
ljmp
pop
dec
dec
test
jnp
jno
pop
icebp
cmp
mov
shlb
sbb
int3
inc
push
clc
and
lock
daa
inc
and
js
sbb
push
into
pop
pop
jle
outsb
mov
stos
inc
jl
push
push
cmp
fmull
dec
push
push
bound
cmp
and
ljmp
jns
into
add
adc
add
les
call
add
xor
adc
cld
ficoml
std
mov
inc
in
fdivrs
inc
inc
mov
and
dec
add
xchg
hlt
dec
pusha
xchg
inc
bound
cmp
xor
cld
push
adc
je
or
call
mov
popa
filds
test
jl
mov
mov
ret
rclb
or
xchg
enter
ds
in
adc
lret
adc
push
sahf
fildll
dec
or
push
cmp
andl
mov
dec
outsb
cltd
clc
push
adc
js
sub
xchg
loope
popa
sarb
sbb
loop
testb
push
mov
mov
push
cmpl
xor
or
cld
cmpsb
hlt
sub
sub
mov
xor
dec
dec
push
andl
push
cmp
stos
and
push
mov
push
mov
dec
in
inc
ljmp
outsb
adc
mov
mov
dec
jae
push
xor
mov
xchg
cmc
mov
jae
and
adc
mov
and
push
xor
push
stc
out
xchg
inc
xchg
mov
inc
add
and
xorl
shr
dec
push
loop
and
popa
jo
sahf
idivb
loopne
adc
jle
loope
push
push
lock
js
scas
cwtl
dec
repnz
fimull
clc
std
daa
out
sub
sbb
test
clc
hlt
hlt
sahf
cmp
dec
mov
lock
dec
shlb
loope
mov
repnz
hlt
ret
js
loopne
sbb
data16
jno
lods
fxch
lcall
or
ljmp
mov
mov
jle
sbbl
mov
add
sub
push
mov
leave
mov
das
add
mov
aad
jl
ljmp
cmp
mov
and
push
xor
push
cmp
mov
pop
fwait
jno
and
and
imul
push
jno
inc
push
or
int
sarb
add
lea
out
push
cmp
xchg
mov
dec
sbbb
pushf
fs
pushf
push
fs
mov
or
jg
inc
cmp
loopne
push
adc
fistpll
cwtl
pop
mov
test
xor
mov
lea
pop
inc
jo
add
inc
insb
fcomps
jmp
add
and
daa
adc
xor
imulb
pop
inc
out
mov
inc
and
notb
shrb
mov
adc
imul
je
cli
cmp
push
icebp
out
call
imul
int3
inc
int3
gs
inc
jge
and
ret
xchg
xor
push
inc
xor
test
sub
push
stos
enter
sti
jo
pop
add
pusha
sub
in
xor
sbb
mov
out
and
negb
mov
xor
xchg
pop
or
pop
dec
xor
or
add
adc
fdivrp
inc
or
add
shl
bound
mov
xor
insb
cmp
hlt
inc
cwtl
shll
call
or
cs
pop
xor
inc
mov
add
dec
pop
push
cwtl
fmuls
shl
push
test
pusha
mov
xchg
jp
loop
imul
fcmovnu
insb
adcl
jne
push
jmp
mov
cli
nop
jl
es
scas
jbe
mov
cmp
inc
push
sub
stos
xchg
jg
add
mov
adc
dec
test
adc
jecxz
jmp
add
push
ror
jmp
in
cs
and
add
cmp
add
fdivrl
and
xor
or
push
sti
sub
add
fidivrl
nop
roll
ret
push
inc
or
jg
sub
aaa
sub
cs
push
out
mov
cwtl
andl
inc
push
decb
fs
mov
test
mov
sub
sbb
mov
test
int3
sbb
cmpl
mov
mov
mov
jmp
pop
fs
push
add
popa
push
sar
adc
jle
sbb
xor
dec
pop
icebp
das
dec
jb
or
loopne
cld
jg
shrb
lock
je
cmp
aam
fidivrs
jo
pop
mov
in
lcall
sub
shrb
adc
and
les
inc
sar
imul
or
or
jl
hlt
ret
pop
cmp
mov
adc
fisubl
xchg
ret
inc
dec
or
push
jp
lea
dec
inc
push
sub
adc
xchg
adc
add
mov
xor
dec
dec
repnz
jle
add
inc
mov
cmp
adc
pop
ja
pop
inc
dec
outsb
and
add
mov
xor
shll
mov
xchg
out
icebp
add
sahf
ja
pop
mov
not
cmp
ds
pop
mov
jle
test
aad
mov
mov
inc
out
and
xchg
test
nop
sub
or
cmc
stos
or
inc
push
rcl
mov
inc
sbb
pop
js
shlb
mov
jmp
mov
pop
lds
icebp
add
clc
cwtl
mov
mov
orl
xor
lea
add
pop
addb
xchg
repnz
xchg
jmp
lret
adc
lcall
test
insb
nop
mov
inc
xor
lea
pop
addb
jp
add
icebp
or
outsl
add
dec
cmp
dec
into
and
adc
outsb
add
loopne
dec
cli
test
decb
dec
lock
mov
inc
inc
xorl
add
gs
inc
out
sub
addb
push
xchg
pop
adc
xchg
xchg
xor
imul
and
lock
pop
das
pop
inc
sbbb
mov
into
aas
jmp
mov
push
ret
data16
add
add
int3
in
pop
ss
inc
ret
cmp
imul
sar
fdivrl
jb
leave
les
loop
mov
mov
pop
addr16
add
fstp
addb
xchg
cmp
mov
pop
add
add
js
inc
ja
jne
mov
jl
and
loope
jl
sbb
dec
mov
inc
add
fmuls
xor
je
icebp
insb
jne
stos
add
lret
ret
pop
popa
inc
fists
popa
add
xorl
jg
adc
or
inc
or
adc
cld
mov
mov
mov
data16
inc
jb
cli
xor
jbe
mov
mov
cs
and
pushl
mov
insb
cmp
adc
idivb
cmp
aaa
dec
pop
or
movsb
add
jle
fs
and
add
mov
jb
fiadds
push
or
std
ljmp
je
push
pop
xor
and
inc
jbe
aas
or
fstl
push
shll
cs
std
leave
push
cmp
les
cld
adc
mov
cli
mov
jno
mov
imul
sub
jg
inc
push
shrb
out
push
pop
push
sbb
shlb
mov
call
and
cli
pop
cmp
xchg
sub
lret
xor
sarb
jle
sub
frstor
xchg
aad
or
jecxz
call
addl
icebp
push
stos
jb
nop
push
push
push
mov
add
ss
inc
add
les
jne
outsb
xchg
cmc
pop
mov
std
popa
imulb
insb
clc
mov
loopne
dec
enter
sbb
fldt
in
loope
mov
aas
cmpsl
mov
mov
je
pop
inc
push
push
unpckhps
rcrl
or
rclb
ret
sub
ja
push
pop
cmp
movsl
shl
or
push
repnz
jno
sbbb
int3
inc
adc
pop
mov
push
loope
fdivr
mov
add
push
pop
xchg
add
sbb
xor
rcrb
lock
insl
or
cmp
jl
mov
push
imulb
mov
movsb
add
pop
adc
or
data16
push
inc
out
aaa
aam
in
add
xchg
jg
xchg
test
cmpl
mov
aaa
mov
lock
popa
or
push
sbb
and
mov
mov
cld
push
sbb
les
mov
shr
loopne
push
mov
loop
aaa
push
push
test
pop
push
scas
loop
daa
nop
xor
mov
scas
push
andb
push
push
test
into
pop
fcomip
jg
mov
aam
mov
xor
fcompl
or
loopne
je
cmpsb
scas
adc
cmp
dec
lea
mov
add
push
push
adc
push
sbb
push
xorl
es
pop
fs
in
mov
or
stos
js
int3
rolb
adc
sbb
or
mov
mov
push
pusha
inc
shll
add
push
add
in
leave
inc
js
ds
clc
push
lea
inc
push
fidivrl
rcrl
clc
and
push
adc
adc
ja
rcll
mov
mov
push
imul
xor
test
xchg
push
mov
or
pop
fisttps
icebp
movsb
aas
xchg
inc
loopne
push
out
je
sub
sub
pushf
xchg
inc
stc
std
loope
popa
clc
je
xor
push
les
aaa
jbe
mov
je
xor
addr16
adc
adc
into
inc
jp
pop
mov
insl
mov
shlb
ljmp
cld
insb
or
pop
hlt
test
insb
je
mov
add
dec
mov
push
cli
andl
arpl
rorb
jg
push
mov
aam
add
and
jbe
rclb
sbb
inc
push
test
mov
cmc
sub
fs
es
inc
cwtl
push
sbbb
cmp
dec
add
ret
cs
mov
or
mov
mov
inc
shrl
xor
adcb
add
fildl
sbb
mov
mov
sub
or
popf
repnz
jg
push
add
cmpsb
or
and
jecxz
fucomi
je
mov
xor
mov
dec
fadd
lds
lea
add
pop
add
fdivs
rorb
sub
enter
jo
sbb
add
shlb
fstpt
and
xchg
inc
xchg
cld
or
cli
pop
popf
mov
out
ret
or
cmp
xlat
inc
jmp
cmpsb
adc
add
or
loopne
aam
jl
and
mov
xor
mov
sahf
and
std
jmp
cmp
mov
shll
cmp
cmpb
loope
bound
aas
sbb
or
mov
inc
ret
mov
aas
jmp
sbb
or
rolb
add
mov
inc
stc
add
adc
out
jl
adc
shl
cs
ret
jne
out
movsb
push
dec
hlt
shrb
pop
sbbb
ljmp
or
adc
adcl
and
lret
adc
xor
fs
add
test
cmp
sbb
fs
add
sub
jp
int3
dec
decl
mov
mov
cld
jb
jmp
lret
push
fisttps
or
test
push
and
ret
clc
gs
rclb
xor
adc
jno
rorb
subb
xorl
push
test
lea
push
mov
les
shlb
ret
push
sub
mov
stos
cmpsb
enter
ss
lods
bound
push
or
jge
lock
push
hlt
test
cld
inc
mov
push
cmpsb
test
lret
dec
mov
adc
popa
pop
push
nop
enter
adc
cmpsb
or
or
call
jne
lods
cmp
mov
scas
fdivr
cmp
and
int3
push
cs
in
mov
pop
js
cld
cld
dec
cmp
jg
or
pop
or
inc
sbbl
in
dec
xor
adcl
loopne
adc
push
mov
ficompl
mov
les
xchg
sbb
sbb
orb
add
data16
push
std
inc
sub
sar
jecxz
jle
in
or
and
pop
loopne
ret
mov
push
xor
enter
jmp
dec
lock
stc
xor
call
loope
fs
mov
ret
shl
jecxz
punpckhdq
push
sbbb
mov
mov
push
push
in
add
fcmovbe
cmp
in
ret
mov
sub
nop
ss
inc
push
out
and
icebp
aaa
adc
push
data16
push
xor
dec
mov
push
mov
lods
ret
or
and
scas
fimull
scas
ret
mov
fs
cmp
xlat
adc
incl
das
push
enter
js
push
adc
addr16
mov
std
and
in
inc
push
shlb
cltd
adc
sub
iret
mov
xor
fcmovnu
les
ds
pop
pop
outsb
mov
inc
imul
push
pusha
pop
and
push
sub
push
popl
push
aam
std
sub
push
jne
test
adc
std
dec
or
or
xor
pop
add
rcr
mov
fists
scas
sbb
test
mov
jb
call
mov
jmp
outsb
rclb
fdivl
jb
sub
das
jl
rcr
jmp
add
lods
dec
pushf
movsl
paddd
jmp
cmp
cs
je
pop
xchg
lcall
dec
or
incl
fdivp
ss
shll
in
xor
push
sbb
inc
inc
push
xor
shl
inc
popl
push
mov
call
mov
jle
push
rolb
jge
mov
xor
mov
loopne
adc
adc
loopne
aam
shll
jnp
jl
cld
lea
or
add
fwait
xor
pushl
in
call
cmp
adc
sbbb
mov
lock
sbb
mov
cmp
sti
sbb
rcr
addb
add
sbb
cmp
adc
or
cmp
and
std
inc
mov
push
loope
push
mov
mov
push
push
ja
shrl
lcall
mov
add
jno
pop
js
stc
and
push
insb
clc
push
pop
add
test
inc
mov
mov
fsubrl
incl
push
cmc
mul
pop
gs
js
jne
data16
and
pop
les
add
leave
je
mov
aad
gs
and
jge
cmc
add
stc
ss
inc
adc
xor
lret
jp
outsl
rclb
cmp
mov
mov
inc
push
mov
xchg
mov
mov
fstpl
ljmp
inc
dec
or
movl
ret
and
fnclex
jg
push
inc
outsl
xor
add
inc
test
test
rorl
call
or
sti
call
jno
inc
or
test
dec
add
nop
fsubl
xor
add
fcmovb
cmp
es
cli
imul
icebp
dec
mov
mov
lods
mov
js
ret
addl
mov
dec
or
push
jo
add
xlat
pop
incb
les
lea
mov
sub
mov
fwait
xchg
cli
dec
xor
fs
cmc
pop
adc
and
lock
cld
jg
xchg
fcmovb
das
out
int3
cmp
aaa
pop
push
mov
mov
insb
out
inc
adc
bound
xchg
and
call
mov
cltd
mov
jg
clc
jb
add
pop
les
jmp
fadd
xchg
loopne
loope
cld
mov
add
std
adc
inc
stos
and
aas
sub
int3
clc
push
incl
inc
push
out
sarb
jne
mov
jne
and
jb
add
or
add
push
cli
ss
mov
lds
rcrl
adc
lret
ss
xchg
bound
mov
xor
pop
mov
jge
fcoms
aas
loop
orl
inc
pop
xor
int3
jp
or
lock
clc
add
inc
mov
mov
pop
xchg
and
cs
sub
adc
movsb
inc
sbb
push
leave
push
in
xchg
add
xor
into
lock
pop
dec
xchg
iret
inc
jle
icebp
ret
aam
pushw
xchg
enter
inc
cwtl
lods
lea
pushf
jp
mov
mov
lock
cs
incb
shlb
mov
aam
cmpb
test
inc
sar
icebp
stos
lea
subl
push
in
cwtl
pop
aaa
in
sub
and
or
sub
jecxz
cwtl
movsb
pushf
daa
ret
cld
pop
cmpb
jp
mov
mov
sar
sar
sub
dec
sub
inc
add
pop
cmc
daa
jb
jge
mov
sub
aas
push
push
call
jbe
ss
mov
pop
lock
or
mov
sti
cmpsb
repnz
ror
cld
pop
in
and
mov
hlt
mov
ret
repnz
iret
aaa
adc
push
loopne
mov
in
mov
add
es
mov
divl
jl
in
stos
jo
push
gs
scas
clc
jne
adc
or
mov
test
or
ficomps
std
add
out
jecxz
mov
dec
das
dec
mov
dec
push
out
inc
jecxz
sub
and
inc
lret
pop
push
ret
test
in
pushf
xor
mov
xor
xor
mov
xlat
sub
inc
and
faddl
rorb
mov
add
je
and
das
sbb
fimuls
xor
and
dec
add
loop
adc
dec
fdivrl
mov
xor
xor
sbb
inc
push
cmpl
adc
out
jo
std
in
xor
gs
ret
ret
dec
cmp
push
outsb
int3
mov
sbb
add
sbb
cmp
jo
std
xor
sub
ret
add
mov
testb
shrb
push
add
mov
test
jbe
std
or
jle
mov
mov
js
inc
inc
pop
sbb
imul
les
adc
inc
add
jo
mov
mov
inc
mov
bound
inc
jl
out
in
adc
mov
lods
in
insl
sbb
dec
out
cld
mov
mov
sahf
push
fdivr
and
and
mov
push
cmp
mov
inc
mov
leave
pop
ret
push
ss
jmp
inc
cli
cli
add
push
test
adc
pusha
inc
movsl
out
lahf
fistl
or
pop
mov
pop
mov
rolb
push
inc
pushf
ret
cmp
pmaxub
je
fldt
enter
mov
inc
cmp
mov
addb
js
or
pushf
cmp
test
lock
jnp
mov
push
aam
xchg
push
add
daa
inc
sub
into
mov
js
sbb
and
push
push
push
dec
xor
aas
add
stos
mov
ret
ss
test
aas
clc
push
arpl
incl
xchg
std
jb
xor
test
mov
and
sub
lods
inc
or
cwtl
lock
fimuls
jmp
pop
xchg
xchg
clc
push
andl
pop
pushf
outsb
cmc
inc
fs
cwtl
xor
add
inc
sub
imulb
pushf
push
rorl
outsl
add
test
inc
push
pop
ret
mov
xor
test
dec
and
push
adc
sar
shlb
pop
jne
fdivr
pop
mov
jbe
sub
out
popa
add
incl
sub
movsl
or
dec
add
inc
rolb
mov
outsl
in
push
cmp
lods
cmpl
fs
popa
fmuls
pusha
popa
imul
cmp
ljmp
add
fisttpl
out
cmp
shlb
sbb
fistps
nop
lea
jl
inc
daa
push
jg
mov
gs
cmp
cmpsb
jae
jb
push
cwtl
push
jo
push
cmp
loope
lret
call
pop
adc
ret
sub
testl
fiaddl
cmc
add
and
mov
ficomps
ljmp
xchg
inc
mov
inc
ret
inc
add
ret
add
mov
add
lds
add
in
dec
mov
push
and
shr
mov
pushf
xchg
jp
lea
xor
cld
pushf
popf
adc
push
jp
pop
lret
inc
push
hlt
pop
pusha
loop
loop
vinsertps
or
out
ficomps
push
or
push
push
push
cli
in
scas
xchg
dec
popf
clc
and
mov
fs
add
xor
lock
mov
out
jmp
inc
cmpsb
decl
inc
je
sbb
je
cmp
je
inc
clc
testb
mov
cltd
dec
jne
sbb
adc
xchg
lock
stc
mov
sub
sbb
lods
std
cmpsb
push
mov
cmp
jo
inc
cs
push
and
add
mov
popa
paddd
or
enter
cmp
xchg
insl
push
test
adc
stos
and
xchg
xchg
push
dec
ret
add
sbb
mov
and
jle
jle
call
daa
testl
pusha
mov
add
adc
nop
aam
cmp
setne
jg
or
fucomi
inc
cli
jmp
insb
push
mov
sub
or
cmc
xchg
rcl
lods
xor
adc
cli
fimull
xor
inc
mov
and
mov
pop
addr16
cmpsb
push
push
or
jb
mov
sbb
push
mov
mov
aam
push
clc
or
sbb
cmp
jnp
and
push
adc
xor
repz
dec
ret
int3
and
or
and
sar
imul
insl
in
add
mov
xchg
push
ret
xchg
sbbl
sub
rcrb
es
inc
lds
hlt
test
out
imul
mov
pop
adc
inc
add
dec
clc
mov
pop
or
mov
pop
and
mov
fadd
dec
xor
ret
hlt
push
mov
data16
outsl
push
dec
insb
xor
call
gs
mov
and
push
cltd
in
decl
mov
pop
push
mov
xor
or
or
dec
outsb
mov
mov
adc
pusha
fsubrs
or
push
mov
xor
jp
clc
sahf
sbb
add
loopne
gs
xor
cmpl
outsb
push
mov
push
stos
repnz
aad
xor
mov
ficompl
cmpsl
or
cmpsb
incb
inc
js
push
test
fwait
inc
push
and
imul
xor
mov
icebp
outsb
bound
jne
push
sub
or
mov
adc
jo
mov
mov
icebp
decl
rolb
mov
lcall
mov
cmp
xchg
sarb
cmp
push
cmp
adc
push
lea
or
je
mov
pop
addb
add
test
clc
in
movb
seta
lret
imul
stos
adc
push
inc
cmp
sub
hlt
pavgb
call
inc
and
int3
mov
shrl
mov
stos
add
xor
clc
mov
mov
iret
dec
dec
arpl
or
sub
push
outsb
out
jmp
xchg
std
jne
scas
mov
mov
fisttpl
mov
stos
add
push
test
int3
ja
dec
jp
icebp
lods
nop
loope
fsub
loop
test
rolb
sbb
push
aas
mov
pop
icebp
pusha
mov
arpl
inc
ret
sub
jmp
clc
jle
xchg
mov
add
ret
data16
bound
pop
xchg
and
jl
mov
cmp
shll
ds
pop
and
pop
aam
hlt
push
cwtl
js
or
pop
push
lock
or
and
sbb
push
fnstcw
inc
cmp
fisttpl
int3
movsl
cld
sub
das
subl
insb
cld
sarl
stos
loope
test
add
rclb
jp
ret
test
shlb
aad
xor
sbb
mov
xchg
cmpsb
mov
fsubp
call
orb
mov
push
dec
or
sub
push
xchg
cmc
mov
orb
dec
es
cmp
dec
insb
movsb
push
add
lock
jge
or
sahf
xchg
xor
push
sbb
mov
testb
sbb
sbb
push
lea
xor
pop
je
push
inc
sahf
gs
negb
and
pop
sub
push
int3
fadds
fwait
push
or
mov
or
call
mov
repz
sbb
subb
clc
mov
xchg
test
xchg
dec
xchg
hlt
mov
jl
ret
cld
mov
aaa
push
lods
jbe
jno
imul
mov
bound
subb
lcall
push
jnp
stc
inc
sub
sub
jb
sub
cmp
xchg
sub
push
sbb
jle
sub
stos
adc
gs
in
imul
pusha
inc
icebp
sar
jmp
jae
adc
mov
xor
mov
je
add
scas
push
scas
bound
xchg
cmp
cmp
xchg
xor
and
xchg
dec
cwtl
mov
stos
push
mov
sub
mov
rcrb
xchg
mov
push
dec
out
cs
pop
icebp
inc
push
lea
pop
pop
add
jle
clc
dec
rcrb
cwtl
aam
sbb
add
out
bound
insl
mov
cld
pop
adc
or
call
out
maxps
ss
xchg
cmp
push
aam
or
out
aam
push
incl
push
sar
fimull
ret
xor
dec
cmp
xchg
push
xchg
test
or
xor
push
int3
and
pusha
loope
lds
je
test
push
mov
xor
mov
outsl
nop
adc
pop
test
fmul
add
leave
in
icebp
aaa
scas
inc
push
fs
sub
fisttpl
sbb
mov
sub
sbbb
adc
int3
and
ja
pop
inc
out
xchg
test
stos
insb
mov
and
inc
addb
jne
shrb
jecxz
sbb
push
push
adc
sbb
test
ds
cltd
jbe
insl
xlat
dec
cld
push
inc
lock
rcrb
xchg
movb
inc
xchg
je
sub
js
lock
rorl
dec
inc
dec
outsb
dec
cmp
cli
mov
mov
jmp
outsb
jmp
add
insb
add
sbb
adc
arpl
mov
call
call
aaa
insl
add
xor
call
xchg
lock
jb
into
mov
add
cmpb
cmc
push
mov
push
and
lock
test
dec
mov
adc
mov
fcomps
jmp
pop
loopne
mov
mov
mov
je
or
les
push
push
and
ds
add
mov
sbb
xor
jae
les
scas
mov
and
cltd
fsubrp
xchg
adcl
pop
or
je
movb
sub
arpl
out
loopne
add
push
aaa
mov
ret
pop
inc
mov
mov
ss
pop
add
les
pop
sub
push
popf
push
ljmp
add
shrb
adc
jl
std
fidivrs
mov
out
inc
or
es
xchg
out
adc
cmpsb
cli
sbb
outsb
cmp
pop
jno
mov
jne
repnz
jns
pop
pop
je
jp
test
jp
cld
jmp
sub
call
inc
cwtl
sbb
mov
inc
jg
push
dec
pop
aam
out
jmp
lods
xor
push
mov
pop
inc
test
inc
lock
sarb
pop
pop
shrb
mov
push
ret
popaw
decl
dec
sbb
fs
loopne
lds
push
ss
adc
in
dec
sub
inc
bound
sub
cmp
ss
scas
and
ror
test
cmp
fcoms
xor
push
inc
sbb
scas
xchg
cmpsb
add
ficoml
movsl
mov
cmp
movsb
cmpsb
xchg
lds
inc
sub
lcall
push
pop
pop
jb
or
mov
aam
push
lcall
sub
rol
inc
xorb
xor
sbbb
pop
mov
mov
mov
cmp
dec
sub
addb
mov
jl
jle
and
ror
cmp
mov
push
add
adc
scas
sub
push
fistpl
cmp
mov
pinsrw
hlt
lock
shlb
mov
imul
aas
nop
lcall
or
jne
lods
sbb
ret
dec
jb
pop
rolb
test
fmuls
add
jo
cs
in
sbb
hlt
pop
pushf
or
cmp
lods
push
and
mov
stc
iret
lock
imul
rcll
sti
sub
orb
add
outsb
scas
or
movsb
ds
jne
je
mov
dec
ss
fcoms
or
in
add
clc
jnp
and
loopne
ds
jo
stc
jl
loopne
xchg
lea
xchg
xor
gs
pop
inc
mov
inc
rorb
adc
mov
mov
mov
jp
jp
repnz
shlb
mov
lea
push
cmc
push
ss
test
pushf
ret
mov
je
fdivs
enter
sbb
add
jmp
inc
test
jb
jne
enter
add
jne
jp
dec
cmp
add
jo
sbb
dec
sub
stc
cmp
int
jecxz
inc
or
or
es
or
jg
or
es
clc
sub
lret
mov
and
pusha
adc
sub
mov
outsb
xor
mov
xor
mov
add
or
push
pop
xchg
adc
pusha
xor
or
and
jno
stos
out
push
fiaddl
mov
mov
jl
add
sub
push
add
sbb
icebp
or
mov
adc
push
inc
xor
nop
and
inc
cmp
into
jge
inc
roll
mov
wbinvd
scas
xor
sub
rolb
pop
gs
leave
push
push
mov
jb
sahf
mov
add
push
inc
add
outsb
test
movl
insb
mov
dec
inc
insb
fs
pop
pop
sahf
cs
mov
lds
adc
push
mov
scas
insl
xchg
fdivs
sbb
incb
push
clc
add
jmp
lods
cld
add
sub
cld
add
jo
cli
adc
jbe
sub
loopne
shrl
test
or
xor
insb
ss
inc
ljmp
mov
xor
div
test
out
mov
fcmovb
push
es
inc
mov
xor
push
adc
dec
std
inc
test
xor
xchg
or
aad
or
adc
cmp
jns
fidivrl
outsb
outsl
js
hlt
popf
jns
mov
adc
adc
mov
pop
aam
dec
dec
leave
ret
leave
mov
loop
mov
call
pop
add
std
sbb
call
fsubs
sub
push
es
adc
xchg
nop
arpl
adc
les
add
test
sbb
jo
sub
jmp
mov
fs
and
jns
sub
loopne
mov
sub
push
leave
pop
mov
outsb
inc
mov
mov
inc
jmp
and
or
push
cli
jg
loopne
push
in
xor
add
jg
shlb
int3
js
mov
call
arpl
pushl
ret
xchg
sarb
and
incl
push
iret
xchg
mov
mov
ficoms
dec
jl
pop
mov
repnz
push
ss
add
or
test
sahf
cwtl
inc
push
cld
and
xor
push
jmp
filds
pushf
les
cwtl
mov
add
add
mov
lods
xlat
jle
cwtl
pop
ret
xor
cmp
or
or
jae
add
mov
shr
ljmp
xchg
fmull
pusha
cld
inc
pop
ss
xchg
adc
out
jp
adc
movsl
mov
push
sahf
ds
inc
jl
cltd
mov
fdivrs
enter
call
sti
add
cwtl
cwtl
mov
leave
cmp
test
mov
das
push
and
clc
data16
push
and
in
cwtl
mov
popf
outsl
and
or
inc
jle
pop
sub
filds
inc
shrb
mov
mov
pop
mov
jg
jg
ret
jbe
push
add
add
enter
push
dec
cli
mov
add
sti
mov
mov
test
fmuls
or
dec
es
sub
xchg
hlt
cs
push
or
lcall
and
mov
inc
ljmp
nop
inc
ss
sbb
xchg
loope
test
xor
sub
pop
sub
ds
loopne
cli
ficoms
pop
push
testl
or
mov
mov
push
in
jne
or
sub
jmp
inc
add
in
add
les
mov
or
mov
shll
test
mov
push
stos
dec
cld
leave
inc
push
lea
movsb
outsl
pusha
fnsave
pusha
push
rcrb
sbb
rcl
ljmp
xor
je
jle
ret
cmpsb
mov
mov
es
mov
int3
mov
push
aaa
xchg
mov
or
test
xor
insl
insb
lds
arpl
scas
shlb
xor
push
pop
mov
das
shlb
dec
dec
outsl
inc
ljmp
or
mov
lea
or
ret
adc
cli
adc
cmp
lret
pop
sbbb
mov
mov
xor
test
mov
ja
sub
pop
insb
sub
int
cmp
call
push
loopne
rorb
jb
loop
or
sub
dec
les
adc
ret
lret
call
into
add
rorl
or
divb
decl
cmpsl
gs
fs
nop
mov
cmp
push
sti
shll
roll
clc
call
xorl
insl
pop
fisubs
sub
and
mov
lods
mov
mov
andl
movb
test
jmp
in
sbb
into
outsl
roll
imul
sub
pop
sbb
push
loopne
add
xor
icebp
mov
and
sahf
loop
jmp
cld
addb
je
xchg
xor
and
cld
testb
fistpl
fsubl
xchg
loop
insb
ss
sbb
lock
roll
jmp
inc
test
lea
mov
loop
call
push
mov
push
adc
dec
jo
imul
mov
mov
les
incb
or
mov
test
pop
loopne
xchg
fidivs
les
insl
hlt
mov
aaa
into
jg
cmp
or
mov
js
cmp
mov
cmp
addr16
sarb
mov
pop
adc
lea
int3
mov
pop
inc
xchg
fsubp
pop
daa
lock
sbbb
out
xchg
jmp
inc
jl,pt
jge
mov
jmp
enter
add
cs
or
push
mov
aaa
cld
push
lea
daa
test
inc
test
cmp
adc
lcall
cmp
mov
mov
cld
mov
mov
or
sub
jnp
lahf
subb
mov
into
es
loopne
push
adc
pushf
lock
ja
cld
inc
lock
pop
or
mov
push
cmp
test
xor
mov
push
popa
push
xchg
xor
adc
push
add
rcr
dec
mov
push
cli
sbb
inc
mov
and
cmpsl
cmc
push
sahf
pop
jae
nop
ss
int3
cmp
jno
aam
mov
lcall
nop
push
popf
inc
pushf
imul
pop
roll
push
push
sub
dec
push
or
xor
jb
clc
daa
xchg
and
fcmove
lock
in
push
xchg
mov
lret
mov
cmpl
negb
adc
ss
inc
ret
leave
setg
push
bound
pop
or
and
push
add
sub
jb
pop
or
xor
rorl
arpl
or
pop
fsubr
xchg
pushf
unpckhps
ds
in
lock
lret
xor
xchg
mov
add
xor
add
add
aam
add
or
ret
iret
adc
jle
fs
fcmovnu
rclb
add
inc
mov
push
and
xor
inc
insb
cmp
cmp
test
add
xchg
cmp
roll
fisubl
mov
rorl
jmp
insl
call
and
aam
data16
jp
or
cmc
jae
pop
push
fsts
test
sbb
sbb
negb
or
lods
mov
lods
mov
mov
loop
xchg
sub
lcall
loopne
mov
push
sbb
push
xchg
lahf
inc
xor
jl
outsb
faddl
add
jle
mov
roll
icebp
xchg
xor
push
les
cmpsb
add
fsubp
test
fdivs
mov
es
mov
lea
popf
adc
aam
jmp
fisubs
and
jmp
scas
add
fcomp
mov
dec
or
stos
add
sbb
insb
or
add
shll
lods
in
push
out
shlb
mov
add
aaa
mov
jg
and
mov
rcr
clc
pushl
cmp
cwtl
mov
test
test
mov
loope
push
cmc
xchg
je
mov
lods
mov
movsl
je
movsl
or
addb
xor
cmp
mov
lea
xchg
push
inc
fiaddl
mov
pop
mov
inc
inc
loop
jne
add
in
filds
and
xor
jmp
imul
ds
add
pop
ljmp
add
push
jg
add
gs
inc
mov
adc
test
jge
sub
lock
int3
mov
sub
ds
and
push
icebp
adc
cld
call
adc
sub
sub
or
push
cs
push
or
pusha
bnd
lahf
decb
add
push
push
orl
mov
roll
sub
lret
cmpsb
xchg
es
pop
add
cli
bound
fsubr
pop
cmp
mov
and
or
jne
mov
fnstsw
xchg
push
pop
je
jne
fs
je
test
pop
mov
jle
add
pop
jge
or
je
mov
in
adc
das
lock
shlb
inc
sub
out
mov
call
dec
and
sbb
push
inc
push
add
ds
dec
mov
mov
jle,pn
add
movsb
or
xchg
lock
sub
icebp
sarb
fcoms
and
mov
xor
push
cld
ret
push
es
idivb
inc
test
push
add
addr16
nop
push
ud1
insl
adc
loop
xchg
bound
rcl
inc
adc
lcall
std
stos
pushf
push
out
xorl
fadds
cli
push
or
mov
scas
cs
jmp
dec
and
add
ljmp
mov
mov
cli
stc
jo
dec
adc
mov
ret
mov
repnz
notl
cwtl
icebp
call
sbb
shlb
test
jne
fistps
ljmp
pop
mov
dec
popa
add
hlt
shl
into
int
call
pop
pop
pushf
ret
call
and
or
sti
imulb
or
mov
test
mov
js
sbb
imul
inc
cmp
sub
mov
jmp
sub
filds
jle
inc
repnz
or
int
add
int3
and
adc
jg
test
pop
insl
lods
adc
mov
lcall
xchg
xor
sbb
test
adcl
movsb
dec
lock
sub
jle
lds
lods
sub
xchg
cld
scas
cltd
aas
mov
inc
fcoms
orb
cmp
and
icebp
call
push
push
pop
stos
cmpl
js
enter
scas
clc
adc
outsl
mov
mov
xor
or
popa
dec
jmp
cs
int3
jge
mull
fimuls
push
cs
mov
inc
sarb
push
add
test
adc
and
shlb
cld
lea
fs
sub
aaa
adc
roll
push
or
adc
call
loop
jmp
mov
push
pusha
daa
add
cmp
and
cmp
adc
rol
cmp
bound
jp
add
punpckldq
pop
sbb
xchg
xor
mov
insl
fmull
test
sub
push
push
nop
shll
lea
adcb
push
jnp
push
pop
fsubrs
xchg
sbb
pop
adc
out
movsb
push
xchg
xor
out
cmpsb
lea
inc
add
fiadds
sarl
mov
sbb
stos
mov
jbe
add
and
arpl
lods
test
push
cli
push
or
xchg
add
rcrl
and
add
rcl
gs
push
mov
addl
fdivr
pop
sahf
shrl
adcb
lahf
daa
or
xor
push
inc
or
mov
push
test
pop
mov
push
dec
in
andb
lock
inc
bound
or
cld
cltd
es
cmpsb
pop
pusha
lods
es
call
push
sti
rorl
pusha
aam
incl
loopne
or
popa
xchg
add
aas
add
fsubs
inc
shl
data16
outsb
inc
sar
outsb
cld
in
dec
jecxz
adc
aaa
adc
cli
cld
cmp
pop
rcrl
filds
cld
out
ret
mov
inc
jmp
call
pop
je
incl
je
cld
nop
add
test
test
or
ret
pop
sub
inc
push
std
rolb
jl
jp
scas
push
add
shll
int3
cli
lcall
cs
mov
inc
dec
inc
inc
sub
shlb
add
sbb
fs
jnp
sarb
jb
push
fs
lock
sub
sub
sbb
hlt
mov
mov
inc
and
mov
divb
je
scas
xor
dec
nop
xor
dec
push
add
sarb
mov
xchg
fwait
clc
add
ret
enter
adc
jmp
clc
subb
aaa
sar
adc
cmovs
add
push
mov
push
cld
int
lret
ss
inc
stos
jne
and
jg
inc
ficoms
jmp
pusha
mov
mov
cld
aam
call
mov
mov
stc
testb
mov
imulb
fidivrs
jmp
sub
push
inc
inc
imul
aas
sub
xchg
fcom
jge
mov
clc
ret
adc
call
mov
inc
jb
mov
jp
xchg
adcl
aas
loopne
inc
mov
sbbb
cmp
ret
push
rolb
andl
push
jle
cwtl
pusha
js
xorl
nop
sar
or
sar
add
int3
pop
xor
push
or
pop
inc
adc
call
xchg
shlb
cli
adc
push
aas
xchg
xor
int
cmpsl
or
mov
fwait
clc
ljmp
pusha
not
jb
or
fcompl
sub
add
jg
fdivrs
or
das
movsb
pop
push
rolb
cmc
mov
xorb
inc
cmp
jecxz
push
sub
clc
push
dec
pop
rcrb
or
push
ret
xchg
mov
cmp
rolb
sbb
clc
negl
push
sbbb
gs
mov
or
pop
mov
xor
jb
dec
jmp
or
and
and
xor
std
xchg
sub
push
faddp
cmp
add
js
testb
jp
mov
nop
lret
push
push
pop
xor
cmp
into
loopne
test
push
mov
ret
and
pop
clc
outsl
dec
addb
sbb
jne
fs
pusha
add
and
xchg
addl
add
or
dec
fidivrs
shll
cs
das
adc
sub
push
mov
inc
test
fwait
pusha
mov
ss
mov
inc
push
cmp
das
cli
fists
mov
femms
in
mov
inc
adc
mov
sub
fs
je
push
outsl
cli
mov
sbb
mov
bswap
dec
jo
loopne
sarl
mov
ret
jb
push
mov
mov
cmp
cmp
fsubrl
fmuls
push
bound
push
or
hlt
cmp
int
insl
in
clc
mov
outsb
push
dec
mov
mov
cmp
movsb
jne
push
push
js
or
roll
and
cmp
scas
shrl
movsb
outsl
push
fisttpl
leave
aaa
or
pop
xor
movb
cli
in
lea
and
lcall
or
call
in
rcrb
cmp
adc
in
fsubrl
test
test
sahf
inc
push
enter
mov
mov
sti
push
or
mov
addb
adcl
scas
test
or
clc
lods
pop
add
push
sbb
fdivrp
shrb
xlat
jmp
les
call
subb
cs
lea
in
loopne
pop
jb
push
stos
or
adc
lock
out
jne
adc
push
xor
dec
mov
jmp
mov
test
and
push
rclb
mov
pushf
xchg
cmc
shlb
jbe
das
out
or
fsubrl
pop
outsb
test
or
mov
call
ret
push
push
cli
fucomip
adc
mov
in
xor
adc
and
fisubrs
push
aas
popf
xchg
mov
mov
shl
pop
adc
insb
adc
pusha
xchg
scas
push
mov
sub
vmovq
add
outsb
adc
mov
dec
das
jb
mov
mov
dec
sbb
add
jo
and
icebp
cli
cmp
xor
lods
lock
ja
dec
sub
int3
fistl
cmp
sub
je
unpcklps
sub
mov
aaa
push
cmp
pop
or
fs
sub
pushf
rcrb
test
push
sub
arpl
repnz
pop
add
sbb
aas
mov
fsubp
push
imul
add
xchg
insl
fwait
orb
dec
nop
sbb
push
mov
rcl
jg
fiaddl
sbb
xlat
sarb
aaa
les
lock
pop
sbb
sub
test
ret
mov
mov
cmp
pop
pop
or
stos
add
clc
popa
push
pop
push
fidivl
sbb
js
add
mov
pusha
mov
dec
dec
xchg
popa
fbld
xorb
aam
add
mov
adc
lea
cs
mov
mov
cld
add
push
loop
jp
cmp
add
xor
add
mov
cwtl
les
pop
pusha
mov
pop
insl
sub
cwtl
inc
add
loopne
aas
and
popa
xor
jbe
mov
ret
and
jle
add
cmp
aaa
xor
rol
lea
rcl
frstor
lret
sbb
jo
or
sub
push
insl
fsubl
inc
or
sahf
mov
orb
inc
cmp
cmp
negb
mov
out
mov
pop
adcb
jg
add
dec
adc
or
mov
mov
out
inc
mov
mov
dec
and
inc
fstl
jg
rcrl
dec
sub
pop
pop
cmpsb
addl
lret
mov
dec
popl
push
jne
aad
lcall
jecxz
std
addr16
imul
les
mov
bnd
push
mov
xchg
data16
push
xor
dec
adc
pop
test
mov
test
divl
int
test
mov
mov
or
mov
pop
mov
pop
mov
push
xor
jo
lock
mov
mov
popa
mov
je
mov
das
adc
jle
stos
loopne
xchg
and
mov
sbb
add
mov
call
jle
test
test
sub
or
insl
mov
inc
xchg
xor
ss
mov
int3
inc
mov
in
adc
xlat
mov
adc
sbb
adc
movsb
clc
fistps
mov
dec
add
push
pop
pushf
and
cld
add
gs
cmp
pop
mov
sub
add
out
or
cmp
int3
lcall
ds
sbb
call
xchg
xchg
call
sub
inc
or
xor
pop
fmull
addr16
ret
test
cmp
cmp
add
aam
xor
xchg
add
or
sub
or
insb
add
lock
les
jl
adc
and
mov
jmp
add
jge
mov
add
or
or
loop
add
cld
data16
or
call
add
jne
mov
ret
mov
pop
or
cwtl
test
repz
push
js
jecxz
or
hlt
lock
or
sbb
adc
sub
xor
mov
out
ss
sub
fldt
mov
inc
imul
fucom
mov
repnz
subb
mov
push
xchg
push
lods
push
mov
je
inc
rorb
je
das
clc
pop
or
sbb
ret
nop
xor
aam
or
jge
pop
sbb
xchg
rcrb
adc
lock
aad
inc
cmp
pop
mov
iret
lods
addl
scas
test
or
jp
jns
aas
add
lods
push
inc
ljmp
divb
fxsave
mov
ss
ret
add
jge
fadds
xchg
push
mov
push
inc
cs
dec
sar
adc
fcomps
sbb
xor
das
inc
push
inc
loopne
mov
jg
inc
daa
int3
cmp
pushl
fisttpl
pop
adcl
adc
clc
ja
mov
jae
rcl
std
push
and
jne
sub
lds
out
fiaddl
in
sbb
push
aad
repnz
or
popa
pop
sub
mov
imul
test
adc
adc
sub
movsl
or
jo
js
cli
leave
inc
xor
jne
dec
lea
pop
sahf
sarb
push
loopne
xor
inc
push
pop
aam
test
adc
pop
pop
adcb
mov
add
adc
pop
arpl
test
dec
jbe
push
xchg
jbe
int3
and
fs
arpl
mov
ja
lds
mov
les
push
clc
xor
jno
mov
mov
ret
push
punpcklwd
scas
xchg
data16
pop
inc
dec
sete
inc
sahf
ja
popf
aam
adc
call
push
movsl
lcall
std
scas
adc
mov
fs
jp
dec
mov
lods
aam
xchg
cmc
fldt
mov
jne
and
in
xor
push
inc
jmp
clc
jge
cs
xor
pop
push
or
cmc
and
xor
or
add
dec
aam
out
and
fbstp
xchg
out
into
movsl
mov
push
int3
and
xchg
add
xor
outsb
inc
inc
fdivl
and
rolb
sub
divb
lea
jbe
cmpl
adc
inc
idiv
orl
lock
lcall
mov
lods
js
mov
lahf
js
loop
add
mov
push
test
insl
add
and
jle
mov
mov
popf
jmp
add
push
push
test
jnp
leave
jp
jne
push
jl
xor
mov
movsl
add
ret
and
hlt
stos
ja
mov
add
negl
cmp
cli
es
bound
les
pusha
mov
out
inc
lcall
dec
outsb
in
mov
in
je
lret
jbe
adc
mov
pop
cmp
stc
xchg
and
stc
xchg
pusha
pop
movsb
popa
cmp
jb
das
shlb
ss
or
and
mov
push
test
jp
out
dec
xor
and
pusha
je
lret
xchg
in
dec
jnp
fisubl
mov
stc
je
addl
add
bndldx
lcall
outsl
aam
push
sbb
jg
imul
call
mov
cmp
xchg
loop
in
push
jl
push
inc
jge
ficoms
pushf
cmp
xchg
pushl
nop
or
add
jle
or
xor
fidivl
mov
add
or
les
push
xchg
es
notb
jb
push
shlb
pop
dec
pop
xor
dec
push
bound
movsb
sbb
mov
or
add
adc
punpcklbw
sbb
mov
shlb
cli
gs
icebp
outsb
add
inc
loopne
aaa
pop
pop
xorb
add
ds
inc
dec
lock
xchg
mov
sub
mov
adc
and
stc
pop
dec
or
idivl
add
rcrb
sarl
loopne
or
mov
int3
push
std
int3
ss
cli
pop
stos
pop
and
adc
add
pop
jg
adc
jg
ss
add
push
jge
or
fs
jns
notb
andl
inc
roll
adc
add
sahf
or
sub
jg
stos
enter
mov
mov
lods
rol
push
lcall
repz
and
cwtl
cmpsb
or
jge
jno
jne
adc
cld
dec
call
je
xchg
pop
push
push
leave
mov
sbb
jge
in
stos
orl
cmp
adcl
pop
or
rcll
mov
mov
out
mov
ret
js
or
ret
insb
cmpsb
mov
je
sub
add
data16
lods
hlt
jl
aaa
ret
inc
inc
mov
js
and
mov
xchg
sbb
pop
fstpl
adc
cmpsl
xchg
ds
and
xchg
lret
sbb
loopne
cli
test
pop
or
gs
fs
loopne
push
push
inc
add
ficomps
inc
or
clc
jg
incl
in
jl
inc
aad
lds
fcmove
in
and
or
cmc
test
xor
movsb
add
mov
cmpb
dec
cli
adc
imul
outsb
rcr
pusha
dec
enter
mov
out
jo
scas
out
jne
insl
sti
xchg
les
push
dec
cmp
out
and
incl
cld
popa
mov
mov
cli
or
push
sub
les
cmp
jno
push
push
pop
pop
mov
inc
mov
push
mov
cwtl
sahf
clc
ds
dec
andb
pushl
outsl
dec
push
add
outsb
adc
adc
adc
inc
dec
and
mov
inc
inc
adc
mov
add
or
adc
push
push
decl
mov
jne
adc
je
jbe
push
push
mov
pop
shrb
les
cmp
rcrb
adc
or
cmpsb
sub
je
mov
jg
jo
xchg
pop
or
je
jne
add
js
add
sub
test
pop
out
dec
mov
ja
fstpt
mov
xor
flds
push
jle
mov
adc
sub
test
mov
pop
subb
dec
inc
cwtl
pop
inc
mov
jle
add
dec
adc
in
and
push
jg
jmp
xchg
inc
ret
mov
enter
cs
out
lret
mov
adc
aaa
add
clc
dec
leave
shr
push
xchg
pop
test
inc
pusha
mov
add
dec
pop
movsb
fcomps
or
jne
xchg
cmpsb
ds
je
lock
int
inc
call
push
orl
add
adcl
popa
or
push
dec
lods
push
cs
cmp
mov
push
pop
inc
add
add
add
adc
push
ljmp
test
and
shrb
or
lea
jmp
test
add
imul
lahf
and
sbb
pop
fistpll
or
add
dec
fistl
stc
pop
sbb
pusha
lods
out
pop
cmp
test
sbb
decl
fadds
bound
mov
add
idiv
pop
sbb
cmpxchg
xor
das
rorb
fildl
imul
adc
dec
sarl
mov
push
sti
insb
in
mov
call
into
xor
push
and
xor
cmp
or
mov
sbb
dec
mov
clc
inc
sub
test
push
js
in
or
sbb
outsl
jne
push
push
inc
ds
sbb
mov
int
cs
movl
sti
add
les
mov
mov
add
mov
sbbb
std
fwait
sahf
rclb
orb
sbb
pop
test
mov
insl
push
mov
push
iret
ror
adc
xor
ljmp
js
and
push
pushf
lcall
sub
mov
inc
jb
mov
lods
adc
rorb
shrl
in
imul
and
cmp
movsb
dec
lret
std
or
add
mov
add
mov
test
add
rolb
test
mov
sar
mov
jp
cmp
mov
bnd
add
insb
jbe
fistpl
mov
mov
int3
aad
pushw
mov
mov
inc
mov
sub
push
xor
xor
xchg
push
adc
ret
test
int3
push
push
cmp
push
addb
inc
outsb
xor
jo
psubsw
mov
xor
cmp
hlt
add
stos
add
aam
paddsw
inc
mov
stos
push
add
pusha
sub
sahf
fs
jae
xchg
mov
les
pop
or
push
mov
pop
or
push
pop
push
lcall
inc
insl
push
je
bound
and
pushl
cmp
dec
loope
sbb
pop
pushl
fs
inc
pop
add
and
xchg
inc
xor
inc
inc
jmp
leave
ret
in
roll
sbb
mov
sbb
js
fsubrl
cmpsb
test
stos
ret
hlt
sbb
adc
sbbl
sbb
cld
add
push
mov
rorb
mov
sub
cli
in
inc
lcall
loop
mov
sti
out
adc
out
sbbb
out
xchg
adc
aam
cmpsl
test
or
outsl
loopne
sub
cmp
add
or
adc
movsb
fistl
mov
cmp
mov
mov
push
sub
enter
push
nop
jg
test
xorb
incl
aaa
adc
add
sahf
inc
rorb
or
or
lret
sub
leave
je
loopne
ficomps
in
mov
icebp
hlt
mov
sbb
dec
cmp
adc
pop
mov
xchg
sub
insb
cwtl
mov
pop
ret
idivb
cmpneqps
pop
xor
mov
mov
sarb
add
jne
add
lret
and
gs
mov
ret
xor
repnz
ja
dec
jns
imul
enter
adc
shll
int3
add
add
mov
mov
push
xor
push
sub
add
push
push
in
js
xor
xchg
xchg
xor
dec
xor
xchg
inc
scas
aaa
pmovmskb
sbb
and
mov
and
fildll
rclb
sbb
ja
ljmp
dec
inc
scas
call
or
dec
lds
xor
mov
test
adc
lea
shrl
sbb
and
mov
or
pop
mov
push
sti
inc
push
stos
lods
push
push
stos
and
and
pop
sbb
mov
and
ss
jo
mov
mov
add
cmp
xor
push
data16
jo
in
push
xor
adc
les
push
inc
adc
dec
dec
push
scas
in
fisttpl
cld
pop
inc
enter
cmpsl
or
and
ljmp
mov
mov
mov
notb
adc
jb
sub
push
adc
call
pop
add
into
mov
js
cld
repz
and
jb
sarl
push
jne
add
pop
push
jns
fistpl
adc
mov
aad
mov
aaa
dec
push
xchg
push
js
mov
imulb
mov
add
cmp
scas
pop
add
inc
mov
xchg
dec
out
add
lea
inc
mov
cld
dec
lret
aas
mov
movsl
dec
jl
in
or
xchg
test
mov
mov
and
cmp
add
ljmp
aaa
lea
mov
test
cmpb
mov
mov
lock
scas
rorb
js
sbb
pop
mov
stos
in
pop
adc
mov
in
fstpt
pop
cmc
incl
lock
mov
dec
sub
inc
adc
adc
aam
inc
fsub
xchg
xchg
mov
or
ljmp
fsubs
jg,pt
sub
sbb
es
dec
movsb
dec
or
adc
mov
xor
jle
out
mov
xor
int3
pop
les
aad
les
add
rcrl
push
inc
adc
sub
call
outsb
pop
jne
in
dec
cmpl
add
pop
jmp
mov
inc
xchg
mov
ret
xchg
repz
jne
pop
in
cld
or
dec
pop
push
daa
or
jnp
pop
push
fadds
sbb
push
jae
add
add
movsb
inc
ret
inc
xchg
mov
insl
adc
add
push
test
adc
sub
shlb
ljmp
js
jle
rolb
adc
bound
inc
rdpmc
or
ret
js
mov
xlat
jbe
inc
sbb
jmp
mov
cmp
bound
shrb
in
push
cli
dec
leave
and
sbb
pop
inc
rolb
lret
pusha
sub
rorl
outsb
ret
jb
clc
pop
les
push
sbb
sbb
or
mov
or
fidivrl
xor
add
inc
mov
or
adc
adc
fistl
rolb
inc
mov
push
js
or
dec
loopne
lds
sbb
les
push
pop
inc
adc
push
pushf
adcb
je
jb
data16
and
mov
add
es
cs
cld
and
testl
add
sbb
int3
push
sub
push
jae
imul
push
aas
hlt
push
push
jl
andb
testb
cs
test
loop
or
movsb
mov
decb
mov
aad
xchg
faddl
add
add
shr
mov
mov
dec
sbb
cmp
ret
cmpsb
or
xor
rorb
mov
xor
adc
sarb
inc
jmp
out
sbb
aam
push
clc
in
lret
jmp
adc
mov
mov
ret
sub
fisubrl
rcll
xchg
scas
aas
dec
jmp
cmc
outsl
dec
mov
std
ret
bt
data16
ret
pop
je
clc
sub
in
lock
cmp
push
pop
jge
in
insb
or
adc
pop
pop
enter
adc
test
insb
mov
in
adc
and
jp
cs
jno
push
cld
popf
mov
sbb
clc
mov
aas
shl
jns
lea
push
push
fs
lret
sahf
repz
enter
insl
xor
and
sbb
pop
popa
arpl
movsb
stos
insl
not
mov
sub
mov
push
mov
roll
pushf
loopne
push
mov
cwtl
pop
jle
ljmp
outsl
adc
push
movsl
sbb
sahf
pop
lock
insb
leave
inc
sub
inc
scas
adc
addb
or
push
dec
mov
shlb
ss
jl
inc
mov
fdivrs
dec
int3
jbe
mov
sub
out
insl
jg
inc
ret
lea
sbb
or
mov
aad
pop
jne
sbb
ds
test
bnd
nop
data16
stos
pop
push
int3
pusha
call
icebp
addr16
mov
shll
sti
outsl
dec
mov
xor
push
shrl
pusha
aaa
loop
fdivrl
and
inc
pop
push
clc
stos
mov
cmp
xor
jp
mov
sarb
add
nop
shlb
loopne
jg
enter
scas
roll
push
and
out
clc
mov
or
sbbb
gs
scas
or
add
fs
inc
jae
js
xchg
mov
out
dec
inc
cld
outsl
sub
shrb
or
mov
add
mov
andl
and
jge
je
dec
push
pusha
adc
shlb
test
lods
fildll
sbb
fists
in
mov
pop
inc
ret
mov
call
adc
xor
aam
inc
xor
incb
rclb
pop
sub
adc
xchg
mov
rclb
fwait
inc
nop
mov
inc
fdivp
push
fists
sbbl
xor
mov
in
xor
dec
mov
push
push
jge
mov
adc
sbb
bound
dec
xor
push
fstpt
sbbl
or
pop
xor
dec
fimull
cmp
je
cmc
daa
rolb
xor
icebp
aaa
sub
sbb
jnp
dec
dec
sbb
or
push
or
inc
icebp
or
or
push
adc
inc
mov
lea
das
gs
pop
inc
or
stos
inc
lcall
xor
dec
and
inc
mov
dec
mov
cs
iret
cmpsb
leave
and
inc
cmpsl
xchg
addr16
je
insl
lcall
pop
jmp
mov
jge
mov
ret
imul
jle
movsb
inc
mov
dec
in
outsb
sub
sbb
test
push
decl
inc
out
jns
aaa
shl
inc
push
or
cmp
adc
xorl
xor
sbb
fcomi
shrb
sub
cmpb
jg
rolb
xchg
lods
mov
clc
inc
data16
mov
mov
pop
dec
inc
pop
outsl
adc
sbb
aam
test
pop
es
shrb
push
call
loop
push
and
add
sub
inc
mov
inc
icebp
or
bound
data16
adc
add
das
out
leave
decb
cmc
or
outsb
jno
ljmp
pusha
fs
add
add
shr
scas
mov
pusha
decl
add
sti
push
insb
aaa
jbe
ret
addb
inc
inc
int3
in
and
test
jg
pushf
loop
cli
shrb
enter
mov
add
pop
addl
jo
add
xlat
call
orb
jo
xchg
les
push
je
stc
sbb
cld
and
or
je
mov
or
mov
and
jae
pop
cmovno
les
mulb
and
or
push
sub
mov
lock
js
in
cmp
mov
mov
shl
les
mov
or
xor
gs
xchg
push
lea
xor
dec
into
mov
insb
mov
xchg
test
je
inc
cmp
in
fildll
ret
icebp
clc
loope
push
outsl
inc
mov
and
push
dec
push
add
mov
mov
pop
ret
or
pop
or
ss
stos
outsb
jle
leave
mov
jp
cmp
pushl
xorl
jmp
adc
inc
xchg
decb
fs
mov
loop
add
mov
loopne
push
into
rclb
sub
or
push
mov
push
pop
movsb
sbb
pushf
inc
adc
shr
fdecstp
add
and
jmp
xchg
push
add
gs
xlat
and
fildl
mov
fcomps
sbb
sahf
shr
stos
mov
mov
adc
lcall
mov
jle
jns
xor
add
jmp
add
shl
cld
mov
dec
pop
cmp
xor
pusha
push
jne
enter
jmp
popa
in
inc
mov
or
loope
adc
xchg
nop
mov
dec
rcll
add
test
pop
or
dec
sarb
jp
and
or
test
or
push
shlb
mov
or
cli
rcll
push
push
push
mov
inc
clc
roll
lea
shl
or
mov
xchg
movsl
aas
or
add
aam
roll
roll
mov
mov
test
pop
add
xchg
std
jp
jb
pop
ja
sbb
push
dec
std
outsb
cmp
and
sbb
stos
add
test
jo
push
inc
pop
sub
xor
pop
xor
je
arpl
mov
push
inc
lds
rcrb
push
addl
jo
hlt
mov
inc
test
ret
scas
push
mov
imul
jns
je
insb
lret
pop
inc
cmp
fisubrs
mov
and
test
push
ja
cwtl
gs
fs
fsubr
mov
shl
mov
fwait
or
mov
pusha
push
pop
pop
insl
or
mov
or
push
rcrb
nop
xchg
push
fiadds
cmp
mov
jge
pop
xor
pusha
imul
mov
ljmp
mov
inc
xor
xor
dec
call
rcl
insl
inc
cwtl
vmread
fs
push
nop
pop
test
pop
clc
mov
adc
xor
mov
jp
imul
adc
jg
rolb
ljmp
lea
inc
push
clc
test
inc
fiadds
mov
lock
xor
les
add
push
fdivrs
popf
mov
add
xchg
add
in
aad
loopne
das
test
adc
flds
lahf
mov
jl
xor
aam
out
aaa
loopne
add
mov
mov
mov
adc
jne
cmpsl
ds
js
andb
add
sub
mov
call
aad
lcall
xchg
rcrl
in
les
cmpsb
push
rcrl
push
push
inc
nop
divl
stc
pop
sub
adc
call
jbe
je
insb
rcr
add
mov
aam
push
cmp
mov
sub
jae
jne
mov
shll
xchg
lods
cmp
data16
imul
cld
loopne
push
or
aaa
aaa
add
sti
pop
ret
repnz
or
sbb
cmp
mov
xchg
mov
xchg
rcrl
mov
add
inc
jecxz
pop
sbb
hlt
mov
xchg
push
or
push
loopne
xchg
test
mov
add
das
daa
test
and
mov
add
sarb
push
call
gs
mov
pop
lret
mov
movsb
add
sub
xchg
dec
orl
xchg
dec
sahf
jg
stos
mov
push
out
sti
std
adc
ljmp
pop
pushf
sbb
stos
or
lock
nop
in
inc
mov
push
push
inc
pop
xorb
lock
jmp
xor
pop
jo
inc
ljmp
out
idivb
mov
push
enter
dec
ljmp
dec
std
jb
mov
test
rol
inc
stos
test
es
mov
xor
and
icebp
mov
pop
std
push
jge
popa
mov
push
enter
pop
rol
paddd
add
add
lods
jg
decb
pushf
ret
jb
pop
cld
test
sbb
data16
pop
mov
and
adc
push
test
push
andb
mov
ss
and
cmp
loop
ss
aad
or
ret
movsb
push
add
inc
aaa
jle
mov
push
lcall
ror
or
mov
mov
xor
cli
sub
ljmp
dec
in
add
repnz
and
testb
add
hlt
add
push
mov
pop
shrb
fcmovu
push
lock
jmp
lock
pop
pop
pusha
jb
jl
xor
mov
mov
mov
movsl
lock
jb
xchg
popa
xchg
jmp
cli
aas
mov
ret
mov
lea
dec
bound
in
pusha
mov
inc
mov
gs
hlt
cmc
xor
mov
call
mov
rcll
push
dec
jl
mov
aam
test
mov
pop
test
cli
popa
adc
cmp
inc
call
push
xchg
mov
into
into
mov
punpcklbw
and
sub
dec
add
inc
loop
mov
add
cltd
incl
inc
add
loope
push
clc
add
xchg
repnz
hlt
add
ljmp
fcmovu
fiaddl
sbb
jbe
push
lcall
sub
push
or
push
daa
dec
rolb
ret
lret
hlt
stos
jecxz
pusha
adc
lret
dec
mov
mov
leave
dec
pop
enter
rclb
leave
jae,pt
ret
cwtl
push
xadd
push
and
in
or
ds
cmp
adc
sub
or
aas
push
pushf
je
add
add
aad
sbb
xor
inc
popf
lcall
sbb
mov
aaa
jne
frstor
scas
pop
add
mov
outsl
arpl
cmp
xchg
adc
je
cmc
jp
fwait
ja
test
xor
nop
inc
stos
test
rcrl
loope
lods
and
loopne
data16
lods
sub
stos
xor
push
repnz
ret
ret
inc
jmp
aad
imul
xor
pusha
pop
xor
sbb
cmpl
sub
sbb
xor
ror
cmp
mov
rcl
test
add
loopne
adc
push
push
ret
and
and
pushf
push
adc
xchg
adc
jg
ret
mov
hlt
cmp
mov
add
pop
add
loop
push
adc
and
sub
insl
mov
inc
jl
dec
inc
lea
cld
mov
movsl
and
xchg
adc
pop
add
loope
rcrb
push
cmp
lods
xchg
aam
inc
inc
pop
xchg
sbb
fiadds
ds
push
loopne
mov
push
call
xchg
jo
mov
add
clc
push
rcrl
mov
sti
sub
les
xchg
adc
sbb
aam
push
movsl
test
loopne
xchg
add
test
icebp
rorl
and
pop
sbb
rorl
hlt
or
rcr
mov
fbstp
cmp
loopne
xlat
daa
call
int3
push
stos
or
test
icebp
push
push
dec
xlat
call
dec
outsl
mov
cs
jno
sbb
stos
xchg
mov
test
adc
idivl
sbb
hlt
stc
dec
test
or
xchg
inc
inc
in
aam
jne
test
loop
call
mov
mov
xor
repnz
mov
insb
cld
or
test
fadds
inc
sti
push
pop
scas
or
leave
cmp
xchg
cmpb
sbb
mov
push
mov
rcll
mov
mov
or
xor
int3
mov
pop
or
push
push
sbb
jnp
es
xchg
jb
sub
fwait
dec
imulb
mov
jns
pop
decl
pop
loope
std
aad
sub
or
jns
sbb
hlt
cli
pusha
ss
test
inc
cmp
mov
test
mov
je
mov
int3
movb
rorb
out
and
mov
cmp
in
push
orb
mov
dec
and
mov
addb
pop
cmp
rcr
out
xor
cli
pop
ja
ss
sbb
mov
jne
aad
rorl
fstp
stos
fcmovb
mov
sbb
ss
fwait
dec
inc
or
sub
dec
ja
int3
mov
lret
mov
jno
inc
push
jbe
shl
cmp
inc
stos
pop
pop
push
pop
inc
int3
mov
xor
pop
fidivs
adc
rolb
adc
into
fs
aam
or
cli
shl
add
loope
pop
xchg
push
neg
sbbb
add
mov
add
mov
rcll
out
in
cwtl
mov
xlat
jg
cs
and
cmp
ljmp
outsb
and
push
push
testl
add
inc
gs
adc
punpcklbw
mov
in
add
imul
jmp
xor
testb
aad
dec
inc
and
lds
jp
dec
xchg
pop
inc
pop
add
mov
pop
mov
adc
hlt
push
add
push
shlb
mov
cli
push
cmp
mov
sub
add
xor
std
add
roll
sti
pop
popa
sbb
add
and
and
fadd
xor
ret
imul
lods
adc
popa
push
cmp
rorb
mov
sbb
not
push
xor
movsb
ret
popa
in
mov
pop
mov
add
dec
inc
xor
mov
or
lock
ljmp
mov
popf
or
test
ret
das
pop
add
jo
aaa
test
lods
das
cmp
inc
ret
aam
in
fisttps
push
mov
push
cld
push
lods
fistpl
js
jmp
mov
mov
and
mov
push
je
add
inc
sbb
pop
and
push
jnp
aas
and
lods
push
jl
cmp
pop
mov
loop
mov
mov
mov
popa
cmp
push
ret
push
xor
insl
jne
clc
call
test
or
movsb
into
cli
mov
mov
xor
or
lods
push
jp
adc
add
sbb
cld
dec
jl
stos
jo
push
sub
xchg
mov
pop
lock
push
push
arpl
loope
push
ss
mov
inc
pusha
cwtl
fs
ror
push
mov
add
mov
icebp
loopne
lcall
movsb
xchg
push
push
stc
push
inc
cmp
inc
mov
mov
inc
adc
and
sahf
es
icebp
push
pusha
out
lea
add
dec
enter
icebp
sub
lea
dec
hlt
xchg
push
ljmp
mov
or
xchg
mov
shl
and
lret
outsl
xchg
adc
incl
push
loope
xor
sub
cmp
sub
aad
adc
xchg
or
lock
cmp
and
fnstsw
enter
jmp
lcall
addr16
mov
xor
dec
sub
cs
dec
dec
ret
push
aaa
mov
fwait
adc
inc
jmp
mov
es
mov
jp
lcall
and
ljmp
push
and
mov
inc
dec
sar
push
push
push
gs
test
lea
cmpsl
sub
aas
mov
and
jmp
push
push
cmp
xor
sahf
push
adc
das
mov
mov
imull
and
cmp
rsm
add
xchg
mov
mov
add
cmpsb
test
cltd
jne
mov
xor
xchg
jmp
call
test
jnp
mov
aas
int3
xlat
and
movsb
pop
pusha
add
inc
test
adc
push
push
or
ret
pop
push
lcall
or
aaa
lock
sbb
push
rclb
push
mov
mov
jl
call
inc
aas
push
or
mov
or
inc
mov
andl
sbb
pop
clc
mov
xor
add
or
test
adc
lods
jmp
cld
fmul
addl
mov
imul
es
jge
sbb
and
pop
js
add
inc
in
adc
arpl
test
out
xchg
insb
adc
push
ds
add
push
and
add
testl
fs
insb
push
outsl
mov
int3
leave
jne
sbb
inc
sbb
push
hlt
fwait
and
data16
cmp
lahf
scas
and
scas
add
testl
inc
movsl
pop
inc
xchg
in
cltd
pop
aaa
mov
nop
xor
decl
dec
mov
outsl
cmp
inc
pop
or
push
mov
sarb
ror
xchg
rolb
dec
inc
mov
lcall
test
jmp
jmp
test
hlt
push
or
jbe
xchg
daa
or
orl
notb
inc
add
mov
pop
adc
dec
je
fimuls
rorl
and
or
add
pusha
and
call
sbbl
rolb
pop
mov
pop
dec
push
inc
sbb
pop
jl
cmp
test
loopne
ret
dec
jecxz
sbb
data16
inc
push
mov
cli
movsl
push
xor
mov
and
mov
ljmp
in
aam
mov
lcall
cmp
lret
inc
clc
pushf
xor
jmp
cli
mov
push
js
movsb
inc
hlt
rcrl
mov
test
jl
jge
mov
jmp
int3
test
subl
sbb
jecxz
xor
dec
mov
stos
push
push
stos
xchg
daa
inc
mov
outsb
adc
daa
out
cmp
les
dec
sub
test
outsl
cmp
adc
push
adc
mov
pop
jne
add
cmpb
jo
aad
jo
outsl
clc
inc
mov
hlt
popa
mov
fdivr
mov
nop
push
dec
outsl
fs
cmpl
jecxz
adc
outsl
mov
fnsave
aaa
andl
jl
out
xchg
add
jo
cli
rorb
xor
mov
fs
fldl
fstpt
mov
leave
sub
and
pop
fimuls
ret
mov
cmp
mov
xchg
or
insl
lret
insb
adc
ss
dec
loop
lock
push
int3
cmp
data16
test
fs
shrb
outsl
fildl
mov
test
incl
mov
fcmovu
outsb
push
dec
imulw
or
les
mov
pop
or
je
inc
add
clc
sbb
call
jbe
es
dec
pushf
cmp
cmc
vmread
cld
mov
add
inc
pop
xor
and
cltd
add
or
sbb
xor
xchg
jb
js
data16
shlb
mov
jmp
cmp
fldenv
mov
rol
andl
add
inc
dec
mov
mov
mov
sarb
adc
jno
or
sbb
cmp
dec
xor
sbb
ss
mov
nop
xor
repnz
insb
dec
inc
jae
loop
mov
adc
inc
push
add
je
xchg
inc
sarb
scas
pop
lea
rcrl
lock
cmp
xor
jl
cmp
rol
xor
lret
mov
push
testb
jp
arpl
mov
ret
ljmp
mov
adc
or
xor
sbb
in
mov
cld
sub
sahf
push
daa
mov
and
sub
cmp
les
jge
ds
pop
add
clc
xor
int3
sub
dec
jne
js
mov
fsubl
sub
pop
push
scas
lods
addl
inc
xor
sbb
mov
daa
cmp
sbb
adc
push
pop
shlb
cmc
lds
hlt
ds
pushf
arpl
lea
cmp
leave
clc
push
jmp
ss
insl
adc
je
call
pop
ret
shl
popf
pushf
sahf
sub
test
in
mov
aas
cmpsb
aam
pop
jb
pushf
cmp
add
mov
sbb
les
addb
ljmp
xor
pop
adc
test
ret
clc
stos
pop
lret
add
test
shll
loope
mov
ret
mov
push
shrb
ret
inc
mov
and
sbb
adc
xchg
movq
sub
in
fucomi
or
es
popf
rcrb
loopne
int3
cld
rolb
and
jg
inc
xor
pusha
push
es
push
xor
push
dec
je
mov
loopne
dec
hlt
emms
fmull
xor
stos
mov
push
and
adc
push
loopne
add
push
and
scas
movsb
aas
adc
outsl
adc
jp
rolb
xchg
add
pop
imull
xchg
sbb
jl
ret
pop
push
mov
pcmpgtd
inc
ja
mov
add
xchg
outsl
xchg
mov
clc
sbb
daa
jb
fmuls
sbb
mov
inc
cwtl
adc
fsubs
cld
jge
outsl
stos
inc
les
add
ficoms
lock
addl
sbb
fstpt
mov
mov
jl
fwait
adc
pop
mov
sarb
fsubrs
sarl
pop
je
ljmp
pop
es
push
fstpt
data16
pop
jo
adc
ret
mov
sar
and
and
pusha
fcmovne
mov
nop
lods
pop
gs
pop
or
jae
mov
insb
ss
mov
outsb
fs
or
loop
leave
or
adc
testb
pushf
mov
aas
inc
sahf
test
ljmp
movb
add
mov
test
cmc
addl
cwtl
cmc
scas
in
repnz
cmc
pop
push
xor
jb
mov
jbe
inc
cmpsb
loopne
or
inc
loopne
xor
xor
push
ss
and
push
rclb
fdivr
ret
jg
call
fdivs
sub
adc
clc
sarb
mov
mulb
sti
push
sahf
mov
mov
or
push
push
dec
rorb
insb
out
and
scas
push
xor
dec
test
int3
jle
mov
jmp
dec
pusha
xchg
sarb
cmp
lods
sub
orl
inc
mov
mov
and
and
add
dec
mov
add
orb
test
push
add
testl
add
mov
xor
push
clc
mov
loop
call
out
test
jo
mov
sub
pop
insb
loopne
or
lcall
fwait
push
dec
adc
pop
inc
outsl
das
sub
test
or
and
test
adc
xchg
ss
xor
jle
cmp
xchg
adc
rorb
pop
jo
call
shr
nop
adc
lock
cli
inc
loope
jge
push
iret
xor
rol
les
stos
fdivs
fs
sub
xor
or
int3
xchg
rcr
sub
icebp
outsl
mov
push
call
add
movsl
add
lcall
sub
add
gs
dec
movl
inc
mov
test
push
inc
lea
les
clc
movsb
adc
mov
stc
mov
mov
xchg
inc
jne
cwtl
and
adc
sbb
loop
pushf
jl,pn
mov
fiadds
inc
dec
dec
loope
dec
retw
ret
lea
mov
clc
inc
loop
push
push
and
fiadds
xor
lods
bnd
sti
repnz
jo
or
loopne
lea
stos
dec
loope
dec
cld
xor
pop
pop
inc
inc
and
movsb
push
jmp
movsb
sbb
rcrb
aam
sbb
sbb
je
popa
mov
sub
out
cmpsb
insl
and
dec
dec
cld
mov
jle
add
inc
xor
repz
push
pop
xor
sbb
mov
cld
xor
xor
into
and
sbb
mov
cwtl
out
inc
adc
cmp
popa
or
inc
call
adc
and
cld
xlat
add
or
mov
xchg
bound
sbb
fdivp
xchg
rol
inc
ljmp
adc
lods
outsb
pop
xor
add
addl
stos
add
mov
push
or
xor
mov
jg
push
push
mov
rclb
inc
es
movsl
add
and
jb
pop
lock
int3
int3
pop
push
les
inc
push
mov
sub
sahf
add
rolb
clc
aad
aam
js
sbb
fidivrl
icebp
in
dec
cwtl
ret
pop
rol
repnz
cmp
hlt
jge
jecxz
inc
fs
xorl
lea
sub
rcr
in
push
jne
repnz
pop
jo
fisubs
mov
mov
popa
sub
xchg
xor
push
mov
jns
xchg
sbb
aad
inc
push
fldt
xchg
mov
and
sbb
data16
in
or
sbb
pop
mov
lods
cmpsb
pop
lea
sub
mov
mov
mov
pop
add
add
lods
loopne
mov
add
rorl
inc
mov
add
cld
gs
lahf
push
cli
mov
pop
inc
mov
scas
mov
call
insl
loopne
shlb
rcrb
out
hlt
xchg
push
xchg
mov
push
add
add
jbe
jg
and
jmp
mov
cltd
xor
mov
faddl
add
shlb
push
add
inc
mov
pop
adc
in
in
jne
int
and
movsb
and
add
shl
repnz
pop
dec
insb
sbb
sbb
add
or
in
jmp
jae
jmp
xor
pop
sarb
sub
cmp
add
jo
nop
insl
shl
jne
out
dec
fldl
enter
jo
dec
sbb
pop
fsubs
test
inc
rcll
push
scas
rorb
mov
xchg
jl
cmpsl
movsb
fs
shlb
inc
adc
cld
in
in
sub
hlt
adc
outsl
rcrb
jmp
aaa
sbb
cs
dec
inc
mov
adcl
daa
int3
cmpsb
mov
xchg
fsubs
adc
jg
mov
lret
mov
neg
lods
dec
xor
xlat
xchg
dec
std
mov
adc
dec
mov
adc
mov
mov
add
mov
cmpsb
xor
and
cli
push
pop
ds
jp
lret
lods
pop
scas
sbb
in
jb
insb
mov
ficompl
mov
mov
jb
fwait
mov
test
add
sub
mov
mov
lock
mov
pop
pshufw
nop
adc
or
test
push
fildll
jo
mov
dec
xchg
xor
push
ret
and
mov
decl
popa
push
cmp
mov
mov
adc
jbe
adc
xor
pop
add
add
in
push
jecxz
ljmp
xor
loopne
outsl
inc
fsubrl
fdivl
push
popf
sub
inc
inc
xor
xor
test
and
pop
mov
mov
xor
pop
and
or
mov
mov
jbe
inc
add
mov
or
jg
cmpsb
jo
jo
add
add
adc
aam
popa
clc
cmp
pusha
les
mov
dec
mov
mov
inc
icebp
or
push
movb
cmp
insb
add
xor
jle
aas
xor
add
sbb
mov
orb
shlb
rcll
inc
loope
add
push
inc
add
add
mov
cmpsl
push
fcmovb
es
call
and
mov
adc
push
popa
adc
adc
test
jecxz
inc
inc
add
cmp
rorl
das
pop
mov
or
lcall
pop
popf
jecxz
sbb
loopne
call
sbb
fnsave
push
mov
cwtl
test
xor
scas
dec
lret
push
xor
mov
or
mov
push
insl
pusha
xor
les
faddl
loop
mov
inc
mov
push
je
adc
es
or
and
cs
inc
pmulhuw
loope
test
jbe
aam
adc
mov
rolb
push
mov
pop
sbb
ds
es
aaa
loopne
sbb
fisttps
hlt
js
mov
in
or
or
mov
cs
xchg
cwtl
nop
pusha
je
xor
rorb
lock
adc
sbb
jp
cmp
jl
and
xchg
es
xor
test
cmovnp
inc
in
leave
pop
dec
pushf
mov
xor
fiaddl
addb
decb
dec
pop
addb
cmp
test
inc
sub
or
mov
ret
xor
lock
inc
jo
test
cmp
mov
imul
cli
pop
push
xchg
dec
xor
enter
scas
cmp
or
inc
and
pop
shlb
inc
inc
dec
loopne
je
test
in
pushl
loope
or
roll
insl
cmp
pop
or
int3
dec
unpckhps
jo
stos
sub
push
add
outsb
push
push
add
inc
shrb
push
f2xm1
clc
out
nop
shlb
xor
dec
and
dec
xchg
in
insb
fisubs
add
adc
imul
xchg
subl
and
jae
mov
dec
add
scas
push
or
or
xor
aas
jbe
add
in
lcall
or
push
clc
mov
dec
rolb
pop
aas
enter
push
dec
jmp
repnz
or
mov
jmp
pop
es
mov
mov
xchg
and
enter
cmc
std
sarb
or
mov
sbb
ret
xchg
inc
pop
xor
cmp
xor
shlb
adc
out
pop
inc
push
xchg
imulb
int3
es
pusha
mov
mov
scas
or
mov
repnz
or
pop
mov
loop,pt
cmp
xor
ficoml
cmpsb
jo
pop
notb
add
sbb
cltd
push
hlt
jge
aas
sub
dec
dec
and
les
mov
idiv
push
rolb
test
xor
fs
sub
and
jle
mov
mov
into
xor
daa
loope
xor
bound
xchg
daa
inc
and
call
negl
mov
fdivrl
in
popa
popa
jl
dec
mov
loopne
js
adc
mov
push
dec
adc
jno
or
mov
dec
notb
bound
xchg
rolb
add
jne
mov
gs
jmp
mov
ret
clc
adc
push
movb
shlb
fdiv
jmp
jg
pusha
sbbb
mov
add
adc
and
or
mov
adcl
fcompl
rorl
push
push
sub
mov
pop
ja
sbb
push
push
test
and
cmpsb
je
adc
popf
add
cs
int3
test
and
or
clc
add
add
cwtl
pop
adc
icebp
repnz
cmp
std
fisttps
add
leave
in
adcb
mov
mov
ss
aam
add
jg
enter
push
mov
adc
or
mov
pushf
rcr
fstpt
xchg
shl
shll
jmp
stos
pop
adc
xorb
test
cmp
andl
mov
or
pop
hlt
scas
in
and
cld
into
lock
leave
xor
mov
cmp
mov
fsts
test
inc
loope
int
js
lds
pop
sarb
sub
and
cmpsb
push
sbb
outsl
movsb
je
push
mov
inc
cmpb
lods
add
mov
and
cld
push
inc
dec
or
xor
rol
rorl
xor
jb
inc
enter
xorl
add
jg
outsl
sub
add
adc
jae
test
mov
cmp
inc
xchg
pusha
jne
lds
and
inc
adc
cmp
aad
popa
push
sub
xor
clc
mov
clc
cld
sbb
add
mov
add
xchg
rol
mov
loop
in
or
ret
repz
add
insb
push
testb
or
push
inc
mov
js
mov
js
aas
aaa
movsl
xchg
mov
lret
dec
ret
cmp
pop
sub
loop
test
call
arpl
incl
cwtl
mov
cmp
xor
add
push
loop
and
push
sub
retw
fs
adc
fwait
sub
mov
icebp
add
shr
sbb
mov
mov
adcb
movsb
push
adc
mov
cmp
outsb
jbe
sub
mov
pusha
sub
jbe
daa
std
push
or
push
inc
inc
dec
xor
arpl
dec
adc
movsl
mov
nop
mov
fbld
inc
dec
roll
mov
inc
mov
dec
mov
imul
mov
add
aam
sub
notl
pop
xchg
lea
jbe
add
mov
sub
push
test
pushf
cs
subl
jmp
and
mov
leave
push
pop
inc
inc
test
jl
outsb
mov
inc
or
icebp
mov
xor
popf
pop
lock
dec
and
inc
push
and
jge
test
call
sbb
xor
mov
lea
sbb
cltd
jl
pop
incl
inc
xor
add
mov
test
jle
and
mov
imulb
clc
mov
icebp
push
push
adc
push
sbb
bound
add
xchg
pusha
adc
push
cmp
lea
data16
arpl
push
mov
mov
jge
push
mov
push
inc
mov
mov
fsubrp
lock
dec
ret
dec
jle
push
int3
call
int3
dec
insb
mov
inc
inc
aas
pop
or
pop
pop
aaa
pop
add
mov
inc
add
sub
divb
cmp
mov
fnstcw
rcll
pop
add
mov
jecxz
imul
mov
xchg
rorb
and
cs
inc
push
icebp
hlt
mov
fwait
adc
das
dec
pop
adc
gs
inc
cli
std
mov
and
mov
mov
orl
adc
dec
push
roll
adc
xchg
mov
inc
xchg
mov
sub
call
dec
cmp
cmp
or
adc
fists
sub
add
and
es
sbb
add
mulb
imul
cmp
adc
dec
int3
or
cmp
insb
jbe
gs
add
std
push
mov
cmp
adc
call
xchg
xor
call
je
jmp
cmpb
nop
inc
test
mov
sbb
add
ds
ljmp
cltd
mov
adc
stos
aam
cld
idivb
mov
test
push
inc
nop
push
xorb
les
push
lea
xchg
fs
cmp
call
shlb
and
or
nopl
out
inc
add
jecxz
clc
decl
mov
test
or
and
loop
adc
push
repz
or
jge
push
ljmp
dec
sbb
push
jl
xchg
sub
or
fists
loopne
je
mov
jp
fadds
enter
sbb
add
mov
call
push
scas
cmpsb
popa
ret
test
jmp
or
ljmp
push
in
or
test
push
bound
popa
push
loopne
call
cmp
jg
nop
sbb
xchg
dec
add
mov
push
adc
dec
push
jbe
sarl
stos
mov
decl
xchg
stc
pmuludq
loope
jo
dec
push
out
push
cli
or
sbb
dec
data16
sarb
mov
dec
subb
dec
mov
in
test
int3
xor
lds
push
mov
imul
sbbb
pop
std
outsl
out
movsl
aam
rolb
mov
cmp
nop
or
mov
or
cs
insl
fcompl
call
ret
add
out
xchg
add
les
ja
bound
pushf
jle
outsl
and
or
or
mov
dec
jne
js
adc
mov
clc
gs
nop
xchg
add
les
cld
fstpt
add
adc
rorb
push
insb
xor
ss
jmp
sbb
cmpsb
lock
push
add
jb
lock
data16
dec
sbb
dec
jecxz
jmp
sbb
stc
pop
or
inc
dec
jae
mov
pop
and
xchg
movsb
scas
sub
inc
ljmp
pop
pop
mov
out
cs
add
imul
or
or
lea
pusha
fwait
push
rcll
inc
pop
or
dec
cmp
and
out
aaa
pushf
jge
test
cmp
hlt
jb
mov
cmp
ret
aam
push
decb
fs
add
jbe
sbb
test
mov
cld
adc
mov
fidivs
adcb
pusha
loopne
mov
sbb
adc
cmp
mov
dec
mov
or
mov
shlb
cmpsb
jnp
sbb
mov
dec
push
bound
loopne
inc
adcb
xor
ret
push
mov
push
mov
cltd
jp
inc
cld
or
add
test
pop
pop
fmull
decl
das
add
rol
xor
lea
cld
ljmp
rcrb
cmp
nop
add
jecxz
orb
mov
dec
sub
int3
push
cmp
sbb
jo
sbb
xor
test
sbb
pop
add
xchg
jmp
dec
dec
mov
push
inc
lret
and
jne
push
mov
popa
pop
jge
not
adc
push
xor
js
pop
imul
dec
mov
enter
daa
pushl
adc
and
scas
pop
int3
insb
mov
movsb
jge
add
inc
in
out
loopne
inc
xor
call
cmpsb
mov
inc
push
cld
sub
fs
inc
jnp
or
je
push
in
inc
or
xor
dec
push
inc
das
ljmp
sub
dec
notb
fsubs
jo
cmpsb
adc
rorl
mov
xlat
les
fs
mov
clc
inc
data16
mov
aad
push
into
js
in
push
adc
adc
sub
or
je
push
inc
sbb
sbb
cmp
inc
mov
add
jg
mov
rolb
test
pop
mov
jne
aam
dec
das
sbb
icebp
arpl
mov
inc
clc
outsl
dec
inc
dec
xor
notl
out
mov
jge
movl
push
nop
mov
lea
or
or
into
jl
jne
jne
jo
loopne
outsl
cmp
pop
add
and
inc
rol
into
sub
stos
or
xor
sbb
clc
nop
mov
push
and
dec
jecxz
adc
mov
pusha
xchg
or
or
and
hlt
hlt
mov
add
inc
lods
mov
ss
or
fimull
fdivrs
int3
mov
je
les
outsb
addl
test
insb
and
push
sub
aam
fdivrs
pop
dec
inc
stc
rolb
push
add
jb
and
scas
jo
pop
jp
inc
ljmp
loope
sbb
sub
mov
loopne
ret
add
out
daa
es
xor
in
inc
mov
mov
inc
mov
notl
cwtl
xor
sbb
mov
les
ret
mov
out
jb
mov
ds
sub
jle
or
pop
sub
outsl
dec
cli
sbbl
push
mov
pop
test
aas
arpl
in
add
mov
adc
and
adc
cmc
and
push
add
mov
ret
xor
jmp
nopl
test
ja
push
mov
sbb
aaa
xchg
mov
outsb
and
je
add
paddsb
inc
xchg
aad
jg
mov
inc
pop
or
test
sbb
push
fldt
cmpsl
fbld
or
repz
in
mov
mov
mov
hlt
or
shl
and
mov
mov
stc
add
jne
adc
shlb
loopne
sbb
fadd
pusha
jmp
jp
xadd
imul
mov
sbb
xchg
nop
aaa
into
mov
inc
bsf
add
cmp
lahf
jbe
cmp
pop
cmc
cmp
ret
int3
mov
lock
test
cmp
adc
xor
pop
mov
frstor
add
or
inc
pop
cld
mov
adc
dec
xchg
jo
add
ss
ret
jp
lea
xor
test
push
add
cmc
xor
ret
test
add
dec
decb
in
sbb
fmul
add
lcall
xor
bound
jl
stos
add
push
jmp
test
sbbb
mov
insl
mov
outsb
rclb
lcall
or
out
in
mov
mov
pop
rolb
faddl
clc
out
fucomip
jle
insb
stos
arpl
push
pop
lret
xchg
pop
jo
rorb
sbb
mov
push
adc
test
loopne
pop
fcmove
mov
ret
sbb
insl
std
pop
inc
roll
mov
enter
ljmp
sbb
xor
pusha
popf
lret
insl
pop
sub
add
jns
jne,pn
pop
in
xchg
or
sub
jge
pusha
inc
mov
loopne
and
call
cld
les
sub
lock
jecxz
inc
shrl
push
dec
js
jo
pop
mov
orb
cli
adc
leave
and
xor
rorb
rorb
add
ljmp
loopne
rorl
xor
in
in
cmpsb
xchg
call
je
mov
push
cld
pushf
shll
inc
cmp
into
fnstcw
sub
sbb
stc
inc
pop
cmp
in
dec
daa
sub
cmc
push
int
inc
dec
mov
enter
les
test
and
pop
decb
or
lcall
adc
sub
jmp
sbb
mov
fadd
inc
or
push
inc
fwait
sub
fidivl
jne
dec
je
add
jae
js
push
add
adc
ss
inc
sti
dec
clc
dec
pusha
xchg
pop
mov
nop
sub
inc
pop
in
mov
or
insb
adc
rclb
push
call
push
push
cmp
clc
push
sub
sar
add
outsb
add
arpl
sub
pusha
push
scas
cpuid
adc
mov
fcomps
xor
les
pop
test
lret
cld
cwtl
movsb
std
shl
pop
pop
mov
andb
cli
cmp
add
dec
cmpsb
dec
dec
push
repz
add
lret
add
inc
jmp
cld
cs
dec
lret
insb
into
inc
cwtl
adc
mov
loopne
or
mov
jl
popa
pusha
sbb
pop
incl
pop
pop
dec
push
add
fidivrs
inc
cmp
add
clc
outsl
scas
and
hlt
outsb
push
shl
icebp
or
push
xor
orb
sbb
cmp
out
and
or
insb
jle
fcompl
out
mov
dec
insb
cmp
add
adc
gs
push
add
sbb
mov
cmp
xor
loope
scas
jb
repnz
or
inc
call
inc
adc
std
or
outsb
out
add
call
mov
adc
test
jb
mov
xchg
stos
adc
jo
dec
insb
ficoms
lea
decb
mov
push
pop
je
punpckhbw
sbb
cmp
loopne
xchg
roll
jo
daa
xor
mov
mov
cmc
push
inc
jb
out
popl
enter
or
add
cmpsb
mulb
xor
aam
out
add
sti
int3
adc
cmp
add
or
daa
xor
adcb
fcom
or
mov
adc
call
and
cs
mov
call
mov
fucomip
pop
cmp
xor
and
add
add
lods
mov
std
mov
sti
add
daa
out
pop
inc
out
push
mov
mov
cmp
add
jmp
data16
sahf
add
into
inc
and
xchg
lret
sub
hlt
dec
mov
or
xor
and
mov
andb
pop
lock
cmp
cli
sbb
cmp
lea
mov
push
and
jbe
das
add
outsb
scas
push
or
jb
loopne
pop
or
cli
push
dec
scas
clc
clc
sub
or
or
movsb
sbb
into
in
hlt
lock
or
sub
in
sub
inc
jmp
adc
int
add
mov
incl
shr
mov
or
sbb
xchg
jo
in
call
into
mov
or
mov
popf
mov
clts
pop
lss
mov
bound
int
push
ja
decl
cwtl
push
inc
mov
in
ret
gs
adcl
icebp
or
int
mov
ds
lock
and
ljmp
call
and
insb
je
je
das
cltd
mov
or
sbb
lock
ret
test
sbb
add
mov
push
pop
cmc
jmp
fs
aaa
mov
sub
cmp
arpl
xchg
or
pop
inc
dec
das
xor
in
out
xor
lahf
or
add
mov
stos
mov
push
fs
dec
sbb
stc
adc
mov
int3
jp
inc
push
fildl
das
push
push
sbb
lret
add
add
fisttps
add
cld
in
or
lret
or
das
scas
subl
fdivrp
rclb
xchg
jo
dec
int3
pop
rorl
mov
xor
inc
repz
push
sub
pop
adcb
add
sbb
add
nop
adc
dec
xchg
out
push
mov
xor
mov
xchg
ss
inc
sub
in
inc
cmp
movsb
jo
in
adc
sub
dec
xor
test
xchg
rcrb
add
push
ret
or
mov
dec
push
push
mov
mov
dec
push
push
imul
cmp
loopne
fldl
pop
jle
fsub
add
xchg
movsb
and
ljmp
mov
add
cmp
test
js
mov
xchg
xchg
inc
sub
jne
pusha
adc
pop
enter
sbb
gs
sub
ret
pushl
push
and
bound
jge
adc
dec
gs
xchg
inc
or
les
lods
jbe
push
cmp
movsb
std
mov
call
inc
xor
nop
lods
push
int3
jmp
and
inc
lea
jmp
imul
cli
ret
rcll
fst
fwait
lcall
cmp
and
imul
jl
aaa
mov
movsb
push
inc
inc
roll
xchg
xor
rcr
int3
outsb
mov
loop
jmp
in
push
ljmp
mov
and
jbe
mov
pop
xabort
or
sub
push
pop
push
mov
xor
mov
testb
mov
mov
and
pop
pop
mov
inc
shlb
rcr
mov
scas
inc
pop
and
push
xor
inc
fbstp
in
xor
decb
jb
test
aas
adc
jl
or
sub
in
mov
mov
or
and
push
cs
mov
mov
mov
and
jne
sub
cld
mov
std
adc
jle
xchg
inc
cmp
sbb
jmp
pop
xchg
ja
sbb
imul
je
or
or
das
test
jg
mov
lea
cmp
mov
lock
rorl
retw
cmp
scas
repz
adc
sub
jne
mov
vandnps
test
popa
cmp
in
xchg
pop
mov
rclb
in
xor
and
or
insb
or
shlb
mov
xchg
subl
push
add
jo
fisttpl
jne
dec
mov
rolb
or
push
mov
sub
push
mov
cmp
pop
and
mov
dec
jge
xor
mov
push
add
cmp
cld
push
sbb
push
sub
add
cld
xchg
cmovo
cmpsl
jle
xor
xor
inc
addl
add
mov
roll
pop
inc
push
adc
add
add
cmp
mov
call
or
xor
cmp
push
xchg
adcl
in
insb
jmp
cmp
pop
inc
sub
filds
xchg
pusha
sti
in
ret
lret
or
punpckhbw
ds
dec
jle
js
loopne
and
nop
jo
add
add
mov
inc
mov
adc
sbb
daa
dec
repnz
rclb
popf
sar
inc
or
pop
cmp
nop
or
sub
mov
insb
xor
es
stos
pusha
and
lcall
mov
xor
mov
adc
push
mov
dec
clc
mov
jl
mov
push
cmp
and
test
cmp
and
shlb
dec
arpl
movsb
cs
push
mov
cmp
and
sbbb
jb
jmp
lea
inc
aaa
push
cmp
aas
andb
add
loopne
enter
adc
lea
or
addl
push
cld
inc
pusha
mov
add
lods
pop
out
outsl
and
shlb
outsl
in
adc
jne
aas
mov
or
adc
add
js
mov
pop
cmp
or
int3
dec
sbb
inc
int3
sbb
ljmp
call
fnstenv
sub
ret
test
or
sbb
xchg
das
clc
mov
adc
jnp
popa
xor
daa
imul
inc
xchg
push
cmpb
add
cmp
pushl
or
jmp
mov
rcr
dec
sti
dec
dec
rclb
mov
add
pop
xchg
pusha
xor
mov
xor
in
daa
daa
inc
fcomps
fsubrs
xor
pop
dec
ficoms
stc
sti
js
sahf
inc
mov
ljmp
mov
ret
and
in
les
push
out
sbbb
and
jae
pop
inc
push
mov
mov
mov
inc
mov
xor
out
fs
add
dec
push
mov
outsl
inc
sar
and
or
jg
fst
syscall
push
rcl
cmp
in
movsb
stos
adc
mov
mov
jne
mov
or
mov
out
and
xor
mov
mov
dec
push
or
add
mov
testl
jo
cmp
jge
add
pop
mul
adc
addl
adc
mov
cmp
pop
pop
shrb
outsb
mov
xchg
and
inc
cli
push
ljmp
xor
push
xchg
push
outsb
pop
testl
hlt
add
std
pop
push
push
movsb
das
cmpsb
add
push
or
mov
add
inc
je
subl
and
mov
or
lods
push
test
jb
inc
fnstenv
mov
mov
pop
and
test
xchg
add
jg
dec
in
add
mov
adc
inc
incl
test
pop
pusha
jp
nop
mov
xor
pop
sub
aad
nop
add
test
mov
clc
mov
mov
push
sbb
or
int3
pusha
mov
les
shll
enter
pop
nop
push
repnz
jmp
lods
ljmp
inc
cmpl
lret
sub
dec
ljmp
pop
xor
push
insb
cmc
inc
ficompl
aad
rolb
or
push
pop
in
dec
add
adcl
clc
push
jg
cmp
nop
xchg
push
and
test
adc
lock
sub
xor
xor
scas
mov
aaa
mov
pusha
imul
push
in
cli
sbb
xchg
adc
jp,pt
scas
adc
call
out
insl
imulb
std
das
adc
andl
xor
add
push
add
enter
sbb
dec
inc
push
inc
mov
aas
out
xor
pop
pop
hlt
ja
push
sbb
aas
lock
jae
dec
loopne
movsb
and
les
stos
imulb
inc
jbe
pop
enter
in
aas
jmp
rcl
or
dec
in
xchg
and
rcr
int3
leave
and
test
push
call
jnp
xor
insb
xorb
cmp
ja
mov
push
push
pop
jo
enter
rorb
out
fcomps
push
jns
call
add
pop
or
mov
cmp
cs
mov
lahf
aam
inc
lods
push
fs
inc
mov
mov
popl
lock
or
pop
add
xor
inc
push
int3
inc
xor
push
test
mov
stos
icebp
scas
jo
inc
flds
sub
inc
xor
push
outsb
test
sbb
push
fcoml
lock
inc
call
lret
inc
mov
push
movzwl
cli
daa
xchg
and
lods
fs
add
add
or
dec
cwtl
adc
clc
lahf
sub
pushf
fidivl
mov
add
adc
dec
mov
mov
test
clc
sbb
jae
push
rorb
aam
xlat
or
lock
ss
or
lea
fsubs
jae
dec
mov
inc
adc
inc
push
call
std
mov
fistps
add
pop
dec
cmpb
fs
je
dec
es
inc
sti
and
jmp
dec
push
enter
loopne
mov
test
jb
push
orl
and
lea
mov
cmp
mov
mov
and
inc
inc
jecxz
cld
inc
adc
mov
in
sub
push
call
test
dec
dec
add
jg
cmp
mov
push
in
xchg
sti
mov
mov
inc
pop
and
js
push
add
scas
inc
loop
push
mov
mov
adc
outsl
insb
sbb
inc
stc
outsl
mov
inc
out
xor
inc
lcall
bound
inc
push
cld
cmp
pop
fidivl
or
add
imul
lea
in
stos
cli
addl
test
aad
add
xor
xchg
push
and
and
movsl
ja
mov
stos
mov
and
adc
jbe
cmpsl
xor
or
cmp
push
mov
mov
add
and
or
ret
mov
xchg
adc
or
pop
lock
in
xor
testb
in
cmp
xor
pop
cmc
add
cmp
ret
jg
cmp
push
xor
mov
daa
hlt
and
or
xchg
aaa
inc
add
loopne
inc
pop
jl
test
push
mov
pop
dec
fwait
test
les
dec
mov
mov
ret
or
mov
dec
cli
inc
adc
std
or
std
xlat
call
mov
insb
cld
loope
dec
or
inc
test
xchg
aad
mov
mov
xor
mov
mov
mov
gs
pop
mov
lret
push
cmp
inc
push
xor
add
adc
loop
sar
cmp
or
shlb
rclb
and
ret
cmc
pop
rol
data16
pop
inc
mov
lods
inc
xor
cli
push
pop
mov
cmp
fsubrs
mov
es
jb
fimuls
cwtl
adcb
xor
and
jno
sbb
fadd
test
cld
cmp
mov
stc
movsb
xor
shlb
testb
sub
adc
dec
lret
call
imul
fiadds
rcl
add
decb
pushl
add
shl
mov
adc
pop
iret
xchg
mov
push
mov
cmp
cli
callw
inc
pop
adc
fmull
cs
shlb
ljmp
jle
jo
inc
jle
bound
jb
clc
loope
xor
bound
xor
dec
fiadds
into
mov
mov
jl
imul
push
push
push
mov
jne
add
aaa
inc
test
push
lods
out
add
cmovo
add
adc
adc
fidivs
ffreep
loopne
xor
cld
adc
and
jl
pop
adc
jl
sti
cs
cmp
movl
rolb
test
ja
in
or
add
int3
jmp
push
lock
pop
nop
ja
jle
test
mov
aam
inc
mov
inc
push
lcall
dec
mov
xchg
clc
pop
and
incl
insb
sahf
int3
dec
les
mov
add
aam
inc
fucomip
lods
cld
sub
lea
mov
push
hlt
roll
or
mov
or
and
aaa
jg
sbb
dec
daa
jb
les
lahf
xor
dec
cmp
lock
cmp
outsb
jp
push
testb
fimuls
pop
dec
shll
pop
dec
outsb
adcb
fisubrs
jne
jmp
fimuls
push
push
aad
adc
mov
rcll
cmp
cmp
fs
add
xchg
dec
push
sarb
lea
imul
fs
jle
xor
int3
int3
or
shll
ret
mov
and
push
mov
enter
xor
int3
inc
sub
mov
or
inc
push
in
shr
insl
subb
jmp
push
pop
stos
mov
ret
and
jne
in
fcomps
incl
inc
push
scas
orl
sub
in
aas
jo
push
gs
xor
adcb
sbb
test
push
mov
pop
cmp
xor
mov
je
jne
cmp
adc
test
inc
call
pop
adc
push
clc
outsl
push
lcall
insl
loopne
pop
inc
mov
sub
pop
push
xchg
movl
jb
cmp
sub
jg
cld
push
jge
lods
add
pop
cmp
popa
add
adc
and
xchg
cmp
cmpsb
pushf
mov
icebp
add
cmp
adc
adc
jle
or
cmp
in
movb
xor
in
stos
subl
cld
mov
mov
adc
inc
xor
and
lcall
test
or
xor
mov
mov
addb
cmpsb
add
push
orps
adc
cli
std
sub
cmp
add
xlat
cmp
or
pop
push
in
jbe
jge
aaa
add
add
cmp
sarl
icebp
and
negb
pushf
out
and
dec
je
push
dec
imul
mov
sbb
or
jbe
add
ljmp
jae
cmpsb
ljmp
dec
cmp
popl
inc
cmpsl
les
push
mov
cld
out
push
loopne
jp
add
or
xchg
lea
or
jno
add
mov
hlt
mov
shrl
pop
cmp
lret
mov
fstl
gs
sbb
dec
xor
aaa
mov
sbb
ret
adc
cmp
dec
sub
jge
push
jno
daa
and
or
or
divl
adc
sub
add
roll
add
sub
lods
or
loope
aas
pop
push
or
rcrb
add
cld
pop
push
aam
ss
pop
mov
inc
daa
mov
pop
and
cld
jp
aam
test
adc
pop
xchg
mov
pop
xor
cli
add
ljmp
or
and
outsl
mov
data16
inc
xor
mov
pop
arpl
lods
faddl
lea
rorb
xorb
jp
jbe
rolb
cmp
sub
sub
std
fucom
mov
sbb
outsl
lahf
add
je
inc
inc
addb
inc
testb
sbbb
movsb
add
push
ret
test
add
clc
xchg
cmp
ret
sbb
xchg
mov
jae
std
jg
and
movb
or
xchg
lods
es
add
inc
sbb
fistpll
jo
push
gs
in
push
fs
push
add
out
imul
jmp
mov
push
inc
loope
les
add
andb
call
ss
add
std
mov
mov
incl
or
mov
push
sub
add
insl
xchg
fisubrs
shrb
xor
push
dec
cmc
sbbl
adc
inc
pop
inc
aad
dec
jl
lea
sbb
mov
xor
cmp
inc
gs
jo
sbb
push
adc
fcomi
inc
mov
lcall
ret
pushf
pop
cmpb
iret
mov
lock
dec
sbb
pop
lret
jp
cmp
mov
pop
push
xor
pop
sub
fs
adc
cmp
out
fldt
push
push
fs
mov
sbb
les
imul
aas
pushl
mov
mov
push
mov
andl
adc
sub
inc
mov
rcll
test
jl
int3
mov
sbb
repnz
mov
scas
test
incl
lea
add
sub
add
ss
test
jg
push
out
ret
icebp
cmp
sbbl
push
jne
cmc
mov
lcall
adc
ds
les
aaa
jle
dec
std
arpl
movsl
add
fs
call
push
idivb
and
fadds
lods
dec
push
pusha
mov
les
mov
cld
push
ret
add
lock
aas
cmpsl
outsb
cli
sti
lock
mov
push
cltd
int3
add
sarl
data16
sbb
mov
push
hlt
sub
push
arpl
faddp
adc
jne
or
add
push
or
pushf
rorb
aaa
incb
cmp
inc
ret
inc
or
pushf
shrb
cmp
or
mov
sti
pusha
sbb
in
jb
into
repnz
mov
mov
cli
inc
xor
adc
cmp
jge
and
fisttpl
stos
scas
aad
outsb
mov
mov
movsb
jmpw
ja
push
mov
mov
js
xchg
jne
push
push
and
sbb
jle
stos
and
add
mov
mov
das
jle
dec
jo
decb
add
dec
and
push
mov
jl
pop
or
cmp
jb
inc
mov
or
out
jge
loopne
push
sti
roll
popf
leave
or
movsb
mov
rorb
sahf
or
jo
mov
push
mov
or
push
aaa
data16
jle
xor
pop
popa
mov
inc
mov
push
add
push
and
push
dec
cmp
hlt
add
mov
cmp
xor
push
mov
stos
shrb
jne
scas
mov
cmc
add
xchg
mov
add
scas
dec
loope
andb
int3
mov
xchg
push
test
cmp
es
jbe
inc
xor
adc
jg
or
push
lret
out
loope
mov
insb
xor
inc
dec
das
ljmp
adc
mov
rcrl
daa
mov
or
xor
or
adc
pop
pusha
inc
adc
mov
mov
adc
mov
ret
stc
fsubrs
add
sti
cmpsb
shlb
rorb
add
out
rcrb
dec
inc
outsl
mov
sbb
lods
es
mov
push
inc
cli
cmpsb
inc
jno
call
fisubrs
shl
fstl
add
cmp
xor
cmp
lods
inc
xor
xor
xlat
imul
lret
adc
mov
sub
cmp
call
or
decl
or
idiv
cmp
adc
push
loope
hlt
mov
dec
cmp
push
mov
mov
pop
dec
lret
push
mov
jle
push
stos
in
mov
outsb
xor
clc
sbb
lret
cs
mov
mov
movsb
mov
ljmp
mov
shlb
push
std
dec
call
jmp
ret
out
mov
es
call
call
add
ret
loopne
adc
movaps
call
or
jae
aas
mov
fisubrl
add
mov
call
enter
mov
jg
xor
jae
fsubl
xor
adc
or
enter
xor
jo
adc
push
inc
jg
mov
or
scas
cmpb
push
adc
xchg
adc
inc
shlb
adc
jmp
xor
mov
mov
jmp
out
add
je
inc
ljmp
aam
das
shl
mov
lea
mov
jmp
sub
inc
sbb
mov
xchg
inc
sub
nop
pop
mov
je
or
in
add
xor
push
inc
rcrb
lock
clc
jnp
icebp
add
test
sub
es
mov
daa
rcr
andb
mov
adc
sbbb
or
test
in
push
adc
movsb
subb
jg
mov
addl
movsb
or
out
shlb
add
xor
sbb
mov
dec
add
or
mov
jl
dec
ret
jb
mov
ret
cmp
jl
mov
push
jbe
push
inc
jp
pop
cmc
loop
push
push
sub
pop
jno
test
cmp
pop
je
adc
inc
mov
rolb
or
cmp
jb
inc
aam
xchg
dec
and
aad
rolb
add
jmp
inc
pop
sbb
or
lcall
jbe
mov
xchg
sub
lock
out
fucomi
call
cli
jmp
sti
adc
ljmp
or
sarb
pop
dec
je
outsb
push
test
mov
lret
mov
imul
repz
sub
clc
ret
aad
cmp
mov
ds
in
add
dec
mov
mov
pop
jbe
cmp
push
cmc
xor
dec
xlat
push
in
pop
fs
fnstsw
sbb
cmpsb
jle
cmpsb
movsl
pushf
enter
sub
ljmp
arpl
sar
push
sub
or
into
mov
jno
sub
insl
imul
in
ja
dec
mov
cmp
ret
lea
xor
mov
incl
push
inc
pop
mov
lds
inc
pop
mov
test
inc
jne
dec
test
pop
mov
cli
loopne
mov
mov
scas
js
or
adc
addb
mov
mov
incl
pop
mov
adc
mov
ret
cld
sahf
sub
jg
daa
inc
filds
push
clc
dec
or
push
aam
ret
add
pusha
loop
push
adc
loop
leave
in
mov
cmp
dec
test
dec
push
sbb
or
push
adc
push
mov
adc
mov
pusha
shll
jbe
clc
outsb
loopne
incl
fimuls
pop
jne
daa
mov
pop
dec
hlt
pop
decb
mov
mov
call
es
in
xchg
in
xor
adc
mov
and
mov
hlt
bound
push
or
mov
xor
test
pop
call
xor
push
stos
add
inc
jp
jg
jne
lea
fwait
stc
dec
lahf
adc
out
pop
inc
and
inc
and
pop
clc
invd
inc
inc
hlt
push
ljmp
sbb
test
add
movsb
or
sbb
insl
rorb
ret
adcb
sarb
pusha
mov
dec
dec
jmp
out
push
push
pushf
jb
pop
adc
push
icebp
xor
pop
xchg
sbb
rorb
fcoms
notb
mov
push
mov
xor
jmp
jg
rcll
xor
push
pusha
incl
lock
xchg
xchg
inc
repz
xor
fistps
daa
or
mov
inc
enter
pop
or
and
xlat
loope
pusha
push
inc
les
call
cmpsb
test
xchg
std
push
push
mov
and
outsl
call
inc
inc
pmullw
cmpb
jb
cmpsl
xor
cmp
aam
sub
or
incb
orl
fidivl
scas
pop
push
mov
aad
sar
mov
push
sbb
sub
in
movb
or
leave
lret
mov
or
push
xchg
inc
ret
rdmsr
jmp
cld
rcrl
jge
test
gs
xor
mov
aam
data16
mov
jg
xchg
rolb
bound
in
or
int3
adc
sub
pusha
loopne
xor
mov
nop
daa
pop
ja
push
sub
push
cmp
clc
aaa
inc
xchg
push
jp
and
lds
mov
loopne
cmp
ret
adc
ret
inc
sbb
push
movsb
out
mov
and
inc
adc
enter
mov
incl
pushf
pop
push
cmp
sbb
fdivs
aaa
loop
pop
rclb
outsl
sbb
fdivl
push
sbb
and
adcb
popl
push
call
adc
std
mov
cld
ss
into
addr16
or
mov
or
lcall
lods
inc
adc
add
std
adcl
inc
mov
pop
insl
pop
fdivr
jne
in
push
std
hlt
out
mov
add
jno
add
inc
sti
lcall
clc
fisubrs
inc
fbstp
fsubr
push
sub
or
decb
popa
cmpsl
test
insb
shrb
es
test
mov
or
jl
pusha
or
das
inc
scas
sahf
loopne
int3
faddl
sbb
es
mov
xor
test
mov
ret
push
inc
call
or
mov
lock
xchg
jmp
add
ds
jb
dec
mov
mov
je
mov
or
dec
or
inc
outsl
andb
lret
rorb
push
mov
fmull
add
hlt
cwtl
je
fdivrp
out
shll
pop
mov
cli
inc
js
jno
aam
dec
pop
test
orb
outsl
andb
pop
dec
cld
jl
push
xor
mov
imull
cmp
inc
lock
faddl
pop
jo
shlb
xchg
gs
ret
fsubp
jo
jge
in
adc
hlt
adc
lods
icebp
mov
dec
inc
add
push
add
dec
mov
sbb
sar
and
adc
pop
cmp
push
ljmp
push
dec
mov
cmp
jle
mov
inc
arpl
xor
mov
stos
call
test
mov
cmp
mov
pushf
clc
jbe
jecxz
xchg
mov
ljmp
pop
sbb
shrl
cmpsb
mov
icebp
test
lods
adc
or
sbb
out
adc
add
xchg
pushf
inc
push
pop
scas
xor
cli
add
lock
mov
jg
cwtl
sahf
add
pop
fiadds
dec
lea
add
rcl
push
aam
stos
jle
imul
ret
inc
test
adc
adc
adc
lods
ret
in
mov
cmpsl
mov
push
xchg
call
inc
mov
and
push
pop
and
enter
sbb
insw
mov
and
insb
mov
mov
xor
rorl
sub
or
sbb
jl
mov
add
test
push
rorl
dec
test
lock
or
and
adc
add
push
int3
mov
repnz
divb
orl
or
incl
inc
test
gs
mov
dec
mov
cmp
jecxz
bound
sub
mov
add
sbb
jp
out
xor
loopne
js
je
shrb
mov
test
xor
shr
cmp
adc
or
mov
in
cmp
js
fsubrp
aad
mov
mov
push
pop
dec
add
loop
push
shrb
cs
in
xor
mov
rclb
dec
ret
pop
mov
loope
test
shll
out
cld
sbb
je
sub
shl
pushf
pop
or
aas
mov
push
and
and
outsl
dec
push
ss
divb
fbstp
iret
jb
push
push
bound
or
push
pop
mov
xchg
jp
jbe
nop
ja
roll
xchg
add
ljmp
testb
cwtl
ret
mov
aad
lea
pop
push
push
je
test
lock
adc
test
add
mov
loope
dec
add
sbb
lock
outsb
rcr
mov
dec
mov
dec
ljmp
jle
inc
shrb
xchg
push
push
rcl
sar
inc
cmpl
dec
lret
xor
les
inc
add
adc
add
inc
ret
out
adc
add
mov
jnp
pop
xor
pop
or
scas
ljmp
rol
sti
fdivrp
push
dec
pop
decb
pusha
pop
push
push
mov
pop
scas
add
ss
fs
sbb
rorl
test
mov
sub
subb
mov
cwtl
in
rcl
pop
imul
or
jmp
add
mov
adc
lods
adc
adcl
adcb
testb
jp
call
in
cmpsb
push
shlb
jno
mov
add
sbb
sbb
mov
adc
jge
insl
movswl
mov
push
cs
pop
sti
bound
mov
sub
lods
mov
test
pop
jp
fs
test
jecxz
mov
dec
clc
add
add
add
add
inc
lock
mov
pop
xor
or
push
sub
out
xor
sbb
add
inc
clc
movsb
push
mov
adc
lret
inc
out
imul
jle
push
xchg
stos
or
mov
sub
insb
test
sbb
or
ja
push
dec
add
ret
or
call
sub
lea
jnp
orl
cmp
sub
inc
add
leave
in
mov
mov
flds
push
cmp
jo
mov
repz
mov
add
mov
outsb
push
mov
xchg
or
add
push
lret
sbb
or
pop
subb
inc
lea
dec
aam
decl
mov
add
push
add
xor
dec
lret
mov
in
rclb
mov
pusha
sub
push
push
fstpl
xor
stos
dec
incb
push
sub
sbb
add
push
pop
push
cltd
leave
mov
faddl
insb
stos
cmc
add
test
andl
mov
rcll
cmpsb
loop
rcll
dec
fbld
ja
sbb
enter
or
adc
jmp
push
into
sub
mov
xchg
shrl
lock
stos
sub
dec
and
sub
mov
xchg
fcmovbe
stos
js
lea
stos
mov
and
jl
add
cmpb
lods
mov
in
shrb
or
rcrb
dec
shl
dec
add
movsb
inc
enter
add
bound
push
and
or
fistps
cmp
push
and
incb
cmp
shll
outsb
mov
xchg
sbb
jge,pt
cmp
sarl
mov
shrb
and
in
pop
and
push
sahf
add
fsubr
fnstsw
fadd
fs
rcrb
adc
icebp
ret
mov
mov
xlat
mov
add
dec
mov
jno
aaa
add
lods
and
faddl
movl
or
pop
adc
out
inc
ret
and
adc
or
movsl
cmp
test
cli
xchg
test
orb
jmp
nop
xor
and
icebp
std
jae
test
lea
out
test
repnz
fwait
outsl
pop
xorl
int3
xchg
pop
cmp
pusha
cmp
xchg
sarb
xor
mov
cmc
orl
mov
xor
imul
hlt
fildll
sub
insb
mov
decl
sbb
adc
pushl
add
rol
fistpl
or
cmp
push
aaa
cmp
aas
pushf
push
repnz
and
and
fwait
vmptrst
outsb
and
xchg
in
or
push
test
test
inc
mov
jge
add
and
scas
out
mov
clc
mov
mov
in
ret
lea
nop
inc
jb
dec
or
pusha
xor
incl
pusha
push
sbb
add
push
or
pop
push
ss
cmp
movl
in
cld
bound
lds
add
cmpsb
ja
xor
test
arpl
movd
xchg
mov
sub
icebp
push
push
mov
fisttpll
jb
and
call
jbe
sub
or
movsl
aas
daa
lods
mov
push
add
getsec
mov
xchg
mov
jo
add
mov
jae
jp
add
movb
test
cmpb
imul
jl
stos
mov
ja
js
mov
inc
addl
sub
dec
daa
stos
dec
add
xchg
out
add
push
dec
ret
fiadds
mov
scas
mov
incl
add
imul
fsubs
faddl
pushf
inc
mov
hlt
xchg
out
fadds
xchg
inc
sahf
subb
push
pop
es
pusha
push
popf
sub
mov
test
add
xor
jb
push
xchg
loope
das
xor
cld
adcb
sbb
outsl
inc
incl
pop
add
sbb
push
xchg
or
cmp
dec
les
cmp
jae
sbb
dec
pop
inc
push
mov
lea
xchg
xchg
pop
push
in
inc
mov
mov
jbe
les
xchg
xchg
aad
push
push
lea
sub
popf
in
jb
fdivl
push
mov
inc
xchg
push
adc
out
sahf
xor
jge
dec
add
rcrb
insb
pop
dec
mov
lcall
test
shll
xor
hlt
inc
inc
loope
in
push
sbb
aaa
inc
xor
mov
pop
clc
aas
adc
sub
cmpsb
and
mov
sub
leave
or
es
es
ss
fwait
cmpb
xchg
std
jae
sbb
daa
dec
jb
std
pavgb
pop
inc
cwtl
mov
sbb
pop
xor
out
add
mov
lock
movsb
test
int
std
add
ja
mov
testb
sbb
sub
inc
sub
mov
adc
es
stos
push
mov
fsts
les
and
push
roll
push
hlt
inc
outsb
or
xchg
push
sbb
mov
push
sbb
cwtl
test
adc
outsl
bound
mov
ror
iret
aam
mov
call
dec
xor
push
xchg
sbbl
pop
push
stos
sarl
and
pop
jg
pop
shlb
lcall
cld
inc
adc
jo
or
adc
enter
movsb
dec
nop
push
stos
fdivrp
loopne
push
sbb
jp
push
movd
scas
and
adc
les
std
leave
mov
mov
adc
cld
and
ret
and
imul
and
push
add
in
subb
mov
es
addb
mov
xor
stos
xor
push
sbb
mov
pop
dec
dec
adc
xor
mov
popf
xchg
dec
mov
pop
lods
add
inc
js
cld
push
call
outsb
jmp
test
testl
fcom
mov
out
test
pop
mov
cmp
push
sbb
cmp
or
subb
out
aam
pushf
and
lds
rolb
push
adc
inc
mov
add
sub
mov
or
cmp
mov
mov
or
icebp
insb
jmp
xchg
cli
or
in
xor
fcomps
jo
or
inc
test
pop
faddl
sti
cmp
ficoms
imul
add
add
ret
adc
test
fstps
out
aad
outsl
inc
adc
mov
push
fs
insb
pop
mov
dec
loop
sbb
cmp
push
fildl
sti
nop
rcll
mov
andb
xor
andl
mov
sub
lods
cs
or
sub
sbb
test
clc
pop
mov
push
adc
rolb
loopne
les
repnz
push
xchg
cmp
addl
scas
mov
jp
les
dec
or
and
test
and
mov
loop
push
xchg
push
dec
aam
leave
add
xor
mov
and
int3
mov
sub
inc
add
mov
int3
sbb
mov
push
push
push
inc
out
int3
lcall
sahf
hlt
mov
shlb
or
or
jmp
std
inc
addl
fidivrl
and
inc
sarb
lret
mov
or
push
pop
mov
xchg
sub
xorb
in
pusha
insb
or
push
cltd
push
adc
sbb
clc
outsb
jbe
ja
mov
add
inc
fnsave
fs
add
cld
mov
fs
jmp
push
enter
jp
in
gs
xchg
inc
inc
pop
adc
pop
ss
xchg
cmp
dec
rorb
inc
std
adc
test
cs
call
std
inc
mov
scas
ds
fdivs
add
lods
cmpsl
call
test
ret
fisttps
clc
sbb
mov
clc
push
xor
mov
aas
pop
and
sub
push
dec
fidivrl
dec
rolb
xchg
push
bound
inc
add
mov
dec
cmp
aam
inc
out
jmp
test
test
call
lret
subl
cmp
jb
fadds
fdivrs
pop
add
fmull
mov
rclb
insb
sub
test
popf
andb
int3
mov
incl
add
sub
mov
loop
jecxz
test
and
stos
hlt
jecxz
sbb
pop
test
adc
rorl
cmc
dec
orb
cmp
int3
loopne
push
push
pushf
int3
and
pop
out
adc
pop
inc
insb
ror
ss
cmp
stos
inc
loope
add
push
sbb
je
xor
loopne
fcoms
inc
dec
add
add
jl
adc
rorb
add
and
or
jecxz
push
and
je
rcl
lods
dec
fistpll
popf
xor
lods
es
mov
inc
shll
xor
sbb
jl
aam
adcb
mov
loope
or
and
shrb
lods
jmp
fs
sbb
roll
mulb
repnz
mov
test
js
xor
pop
inc
or
xchg
orl
dec
inc
mov
in
sbb
cmpsb
mov
into
dec
movb
inc
add
cltd
stos
lods
stc
push
add
adc
adc
sahf
mov
in
mov
call
and
mov
enter
shl
mov
inc
push
fisubrl
mov
add
jno
lock
mov
shr
push
push
or
lret
insb
bound
inc
push
and
das
js
ret
adc
aas
push
test
xor
dec
out
cmpb
ss
in
js
adc
jne
push
lods
repz
or
test
add
shlb
outsl
xchg
dec
fbstp
icebp
xchg
push
add
popl
sub
xor
push
inc
adc
je
mov
xchg
mov
cmp
inc
and
movsb
add
dec
jmp
xchg
cmp
in
inc
push
shlb
sbb
lods
xchg
push
mov
add
mov
jno
jne
call
mov
push
fwait
pop
add
xor
sub
lods
daa
and
ss
popf
ss
cmpsl
stc
enter
subb
icebp
add
rclb
loopne
mov
pushf
xor
rcrb
sti
pop
inc
pop
dec
or
or
dec
lods
lods
mov
cltd
sub
aas
dec
mov
or
adc
daa
xchg
cmp
jae
jo
bound
xchg
ss
test
mov
xor
gs
pop
outsl
mov
decl
mov
push
mov
fldt
sub
or
jle
test
push
and
roll
jecxz
hlt
mov
cmp
sbb
pop
cld
leave
test
shr
lret
add
mov
or
fmuls
or
xor
jb
mov
inc
in
xor
sbb
push
jne
loop
nop
test
xchg
mov
mov
mov
pop
aam
lock
cmp
adc
add
test
std
inc
jl
jmp
jne
add
and
sub
fistpl
jp
mov
push
inc
push
data16
test
mov
enter
mov
cld
jo
sbb
xor
js
test
mov
mov
or
xor
hlt
cmp
jge
in
fcoml
push
adc
sbb
movsb
add
inc
inc
pop
aam
push
add
push
add
push
or
decb
push
cmp
aas
cwtl
push
fwait
je
mov
negb
ret
insb
movsb
mov
adc
and
test
aaa
cmc
test
add
popa
insb
adc
add
idivb
loopne
push
mov
lea
outsb
pop
xor
xchg
and
gs
add
inc
add
shrb
adcb
sbb
xchg
gs
popf
je
in
mov
les
adc
clc
xor
mov
adc
push
dec
call
push
push
add
xor
inc
mov
in
mov
adc
sub
sbb
sub
test
andl
je
seta
into
sbb
or
ja
out
add
cld
xchg
pop
cltd
push
pusha
mov
ja
pop
int
lcall
push
jnp
mov
mov
js
xor
filds
cwtl
loopne
lea
movb
xchg
rorb
loope
fs
cld
adc
sub
jecxz
xchg
mov
mov
fisubl
incl
xor
mov
sbbl
cmp
add
das
xor
addr16
ss
out
rolb
push
dec
inc
fcompl
pop
rorb
xchg
nop
jp
fsubp
adc
sub
addb
adc
shll
xor
cmpsb
cld
xor
sti
inc
mov
iret
mov
xchg
or
cmp
leave
add
sbb
cli
fs
je
push
clc
lret
push
mov
fisubrs
mov
insb
test
inc
mov
fcmovnu
add
add
jo
lods
xchg
ss
das
push
inc
aam
fsubl
lods
inc
dec
cld
push
add
mov
add
mov
outsl
lock
mov
mov
ljmp
xor
cmp
movsb
push
dec
or
mov
call
test
cmp
xorl
outsb
ret
push
add
dec
mov
ljmp
push
les
clc
in
cld
jbe
or
jmp
xchg
cmpsb
nop
mov
adc
push
jle
inc
push
inc
das
sbb
in
adc
and
testb
and
or
inc
aaa
add
ret
add
orb
jle
add
mov
sub
or
out
xchg
and
call
add
imulb
adc
and
aaa
ret
pop
fmull
and
loop
in
outsl
fdivl
mov
jmp
in
outsl
lea
push
loopne
add
fsubr
notb
cmp
xchg
lods
out
add
cmp
mov
inc
mov
add
insb
or
or
adc
mov
les
in
mov
mov
ret
adc
gs
inc
cld
jmp
divb
push
hlt
sbb
popa
mov
mov
dec
call
mov
sub
mov
lcall
adc
mov
fs
dec
ljmp
push
dec
lods
loop
pushf
int3
jb
clc
mov
mov
pop
and
inc
pusha
cmp
and
rorb
push
inc
or
xchg
and
jbe
pusha
shll
xchg
xchg
fmull
xlat
ss
push
mov
xchg
inc
sbb
add
aam
inc
or
ja
xchg
or
mov
add
fwait
pop
into
rcll
scas
and
mov
mov
sub
adc
push
xchg
stos
or
orl
pop
or
js
pushf
inc
and
fisubl
and
je
or
les
int3
push
imul
in
mov
push
or
sbb
push
mov
adc
add
sbb
jmp
xor
mov
scas
push
push
xorb
stos
icebp
jg
loope
adc
shll
fcmovnbe
push
lea
mov
jge
ret
push
sub
cld
rdtsc
push
sahf
add
add
mov
icebp
mov
testl
fincstp
faddl
mov
movsl
movsb
lcall
push
je
mov
inc
movsl
and
insl
into
test
add
xlat
sbb
mov
push
insb
stos
and
and
xor
inc
jo
testb
xor
stos
or
mov
inc
shlb
add
mov
ret
lock
xchg
push
jnp
add
cmp
sbb
mov
rorb
cld
xchg
mov
sub
or
scas
rorb
loopne
or
dec
nop
out
mov
add
fs
pop
cmp
dec
std
sbb
push
and
inc
movq
mov
insb
idiv
das
clc
es
push
mov
or
jo
or
inc
mov
lock
and
lea
enter
jle
jg
test
mov
or
popf
xor
fmuls
ret
push
arpl
cmp
ret
xor
fstpt
in
or
inc
shlb
sbb
stos
fiadds
jbe
cli
hlt
push
inc
jmp
rclb
jle
insb
outsb
push
call
cmp
rol
and
outsl
sbb
test
add
jb
jl
sbb
roll
int3
test
add
aam
jo
je
inc
arpl
and
movsb
loopne
push
dec
rorl
sbb
xchg
or
aas
arpl
pop
je
push
in
adc
fs
cmp
hlt
and
mov
test
bound
and
data16
cmp
sbb
jle
in
std
sbb
inc
add
icebp
loope
mulb
inc
add
add
stos
pop
mov
notb
jge
adc
add
cmp
add
mov
push
lock
stos
jae
and
dec
jp
leave
pusha
push
xorl
and
iret
nop
add
fcoms
insl
nop
xchg
pop
pop
push
iret
adc
and
arpl
and
stos
in
and
cmpsb
xchg
sar
adc
xor
add
adc
mov
adc
subl
hlt
insb
push
call
dec
loope
inc
xor
clc
pop
push
test
cwtl
lea
test
sub
mov
sti
mov
push
das
jle
dec
repz
or
inc
push
outsb
pop
loope
dec
movsbl
rolb
mov
pop
cwtl
dec
mov
mov
push
jge
xor
cmp
je
xor
inc
inc
ffree
insl
inc
adc
inc
jle
hlt
add
fldt
jl
int3
insb
mov
jnp
les
pushw
mov
sub
pop
int
mov
sub
add
fstpt
mov
int3
je
js
inc
pop
bound
and
push
cmc
mov
fwait
inc
mov
add
xor
xchg
lds
and
stos
cmp
sbb
pop
or
js
fsubrl
mov
and
in
adc
mov
add
fxch
mov
hlt
cmp
mov
jo
loopne
js
pop
inc
push
jnp
mov
decb
lods
je
ljmp
cli
push
js
mov
ds
sub
dec
jp
sarb
sub
jne
cmp
test
lods
mov
inc
xor
and
adc
push
test
xchg
je
add
in
sbb
and
push
insl
fcomp
adc
xor
xchg
pop
ds
in
ret
xorl
jg
push
jle
inc
daa
inc
test
push
pop
jno
test
mull
add
adc
add
lret
insb
jp
outsl
daa
gs
sbb
xorb
es
stos
outsb
cli
jo
xor
outsl
jmp
and
add
mov
jp
pop
pop
addr16
jb
mov
not
dec
sbb
ss
jbe
add
mov
stos
lds
mov
fmuls
jne
lcall
ljmp
test
testb
es
sub
inc
cmp
xor
cmpsb
ret
call
adc
and
mov
aam
pavgb
popa
inc
push
add
scas
push
incb
inc
push
mov
jmp
sarb
in
mov
mov
repz
jne
mov
xchg
in
sub
xor
sbb
and
call
repnz
cmpsl
pop
cmc
pop
insb
push
lock
int3
mov
mov
jmp
inc
aad
sub
inc
jl
in
in
sbb
call
adc
dec
mov
add
jmp
aaa
inc
mov
mov
test
cmp
dec
out
and
mov
shl
mov
dec
xor
adc
lock
add
fldl
xor
nop
je
incl
jmp
insb
call
push
in
jmp
pop
dec
adc
lcall
inc
je
pop
incb
adc
adc
sbb
fwait
xor
jle
adc
inc
shll
or
fisubs
mov
inc
adc
dec
mov
je
pop
gs
aam
loopne
push
je
push
push
or
hlt
cli
inc
mov
mov
pop
xchg
inc
lock
mov
mov
inc
sbb
adcl
rcrb
sbb
lea
decb
mov
loope
pop
adc
outsl
cmpsb
inc
adc
je
fidivl
jmp
cld
shll
inc
clc
ljmp
cmp
jl
mov
inc
add
dec
mov
mov
xchg
inc
test
incl
adc
loop
lret
xor
out
mov
aaa
sub
or
rorl
loop
shr
pop
cmp
xor
call
fsubs
jo
je
adc
jno
jb
imulb
pop
hlt
push
mov
push
add
push
js
orl
cli
loop
add
fcmovb
xlat
test
test
test
dec
mov
adc
adc
and
jne
jb
je
rcrb
sbb
pusha
add
mov
fdiv
push
mov
fs
add
int3
faddl
rclb
sbbb
ret
aam
push
cmp
mov
nop
xchg
push
add
pop
lea
cmc
adc
lret
cmc
stos
pushl
or
add
ja
dec
dec
ds
shll
loop
mov
ret
test
push
test
xchg
aam
xchg
adcb
jg
adc
jmp
clc
fstpt
and
inc
ds
jg
adc
push
and
ss
push
cmp
mov
xchg
mov
jne
push
and
mov
mov
loopne
in
js
and
inc
push
jmp
clc
leave
jl
add
sub
push
rcl
and
and
mov
xchg
ljmp
xchg
fs
mov
add
pushf
rorb
xor
inc
imul
pop
or
push
inc
das
lods
dec
mov
inc
arpl
or
out
dec
sub
dec
lret
loopne
adc
loop
cmp
push
inc
push
mov
add
enter
jg
mov
mov
mov
insb
adc
andb
in
push
out
push
xor
pop
inc
das
inc
or
inc
rcrb
sbb
orl
sub
sahf
fcomip
test
add
aam
jnp
nop
sbb
addr16
callw
add
cmpsb
xchg
xor
inc
dec
pushf
jp
dec
rclb
jno
jg
add
add
inc
nop
sub
lock
mov
pop
cmpsb
xchg
aam
push
pusha
testl
mov
je
xor
loopne
orps
out
add
js
ret
xchg
push
pop
orl
shrl
test
push
test
in
shll
mov
sbb
loop
mov
and
push
mov
push
mov
cli
hlt
adc
jge
push
mov
in
add
fiaddl
jle
incl
mov
mov
inc
cwtd
ret
push
rolb
gs
js
xchg
cs
pushf
adc
mov
mov
notb
test
pop
test
out
cli
mov
add
insb
jl
xlat
jb
sbb
scas
fs
clc
bswap
test
pop
ror
mov
shrl
jge
add
orl
jg
jge
repnz
push
push
les
shl
jbe
push
aaa
adc
orb
fs
out
loop
aaa
xchg
std
lock
xor
cmp
sbb
das
adc
add
pop
call
data16
inc
sarb
mov
mov
inc
enter
loope
mov
mov
addl
sbb
inc
cli
mov
in
or
add
push
sti
rclb
or
push
mov
inc
mov
cmp
daa
test
mov
pop
leave
pop
js
xor
lcall
arpl
cli
mov
adc
dec
in
mov
mov
loopne
sbb
xor
adc
out
add
aad
xor
xchg
push
cmc
and
cmp
add
mov
insb
dec
and
sub
or
push
sbb
fsubrs
adc
out
dec
in
pop
fiadds
inc
jbe
mov
pop
pop
xor
xorb
add
into
cmp
movsb
add
sbb
xchg
cli
and
aaa
xchg
and
addb
inc
inc
mov
addb
pop
jge
pushf
mov
pop
scas
insb
inc
inc
or
jp
rclb
push
cvtps2pd
loop
push
cmp
jp
mov
enter
movsl
shll
pop
dec
shlb
push
and
int
aam
sub
xchg
mov
or
roll
xor
fsubs
mul
push
cmpsl
jle
cmp
dec
in
gs
mov
daa
dec
inc
sbbb
cmp
js
stos
sub
adc
pusha
adc
mov
push
jp
push
xorl
mov
jmp
pop
insb
dec
data16
and
inc
bound
xor
mov
pushf
push
clc
in
jb
outsb
mov
add
std
das
push
sbb
cmp
popa
dec
push
add
lcall
icebp
sbb
mov
or
sar
outsb
sub
imul
jl
add
jl
or
push
and
int3
mov
js
jbe
lea
mov
shlb
add
loopne
idivl
dec
add
or
lock
adc
ss
fisttps
ds
adc
lock
call
cs
sbb
pop
add
call
jne
mov
and
jo
repz
movsb
nop
std
dec
aam
std
aaa
mov
in
mov
inc
lret
add
mov
lods
ss
mov
loopne
inc
in
movsb
jmp
cli
leave
out
fists
adc
mov
rorl
mov
push
push
mov
push
inc
les
mov
sbb
outsb
fstpt
push
ret
inc
sahf
lret
inc
movl
jg
hlt
idiv
insb
inc
push
es
sub
icebp
mov
imul
call
ja
aam
inc
test
bound
and
add
ret
jo
sti
inc
mov
push
int3
adc
popf
in
shll
inc
pop
aaa
or
add
or
cmc
cmpsb
scas
movsb
push
adc
into
push
addb
test
add
sbb
jecxz
add
mov
push
pusha
sbb
ss
pop
decl
popf
fs
cld
hlt
pop
jmp
shlb
fdivr
or
outsb
je
cltd
jg
mov
push
adc
rorb
int3
xor
add
ret
or
lds
cmp
add
xor
nop
movsb
mov
xchg
mov
jle
jle
xchg
and
mov
daa
negb
mov
mov
test
add
mov
inc
mov
lcall
push
repnz
sub
pop
clc
cs
rorl
push
inc
clc
push
cmp
cmp
hlt
dec
aaa
and
mov
bound
xchg
push
enter
mov
loopne
pop
add
mov
fdiv
inc
stc
in
cmpb
and
pop
shlb
sbb
jbe
inc
cmp
call
xor
punpckhbw
mov
sbb
jb
cmp
add
loopne
stos
insl
jl
mov
adc
adc
mov
dec
jb
rep
dec
dec
loopne
rclb
push
and
mov
cmp
mov
test
cmp
fs
incb
dec
roll
cs
jb
jmp
mov
pop
sub
adc
xchg
cmp
xchg
add
jb
js
pop
mov
loope
ret
lret
js
test
ja
testl
ret
imul
dec
push
adc
mov
cmp
adc
adc
or
push
test
dec
push
nop
fcom
ret
in
mov
sub
sbb
js
cmp
add
adc
inc
add
and
xor
or
insl
in
add
sbb
dec
push
loop
gs
cmp
jne
imul
inc
push
mov
movsb
adc
push
dec
xor
pop
sub
push
inc
xor
jmp
and
faddl
sbb
int3
incb
push
jns
subb
xor
add
push
push
xchg
push
movsb
pop
mov
in
pushf
test
sbb
jno
push
inc
inc
gs
dec
shr
addl
jb
and
sbb
mov
jne
jmp
in
add
lcall
sbb
xchg
xchg
pop
movsb
sbb
cmpsl
and
cwtl
mov
insb
xor
mov
xor
inc
pop
jo
pop
mov
inc
cmp
mov
gs
push
sub
ss
movsb
or
js
mov
inc
fbstp
xor
cld
popa
popaw
adc
out
push
fcomps
jle
loope
push
mov
mov
mov
xchg
mov
hlt
push
addb
jg
or
xor
fcompl
hlt
adc
mov
jl
inc
std
incl
sarb
test
pop
sti
sbb
add
loopne
xchg
sub
in
cmp
ds
jl
inc
jecxz
mov
push
mov
mov
fdivrs
faddl
mov
dec
jg
mov
mov
in
gs
fmuls
mov
aam
pop
call
popa
cmp
add
je
mov
cmpsb
insb
or
dec
mov
push
inc
sub
sub
xor
rclb
inc
xor
cld
popa
or
xchg
pop
adc
and
and
subl
push
sbbl
mov
mov
lock
adc
cmp
mov
in
adc
inc
push
adc
xchg
inc
in
mov
adc
pop
sub
cld
or
sbbl
fistpl
cli
cmp
push
dec
inc
jmp
ret
push
cmp
push
out
xor
xor
mov
inc
add
jl
bound
push
add
orl
adc
addb
testb
add
lea
or
ret
ret
out
inc
jl
stos
in
dec
or
adc
jmp
add
inc
out
mov
sub
inc
mov
inc
and
pop
je
sbb
outsb
call
inc
pop
loop
je
sbb
stos
push
jb
and
cld
hlt
sub
rolb
add
adc
mov
cmp
jle
fdivr
sbb
sub
mov
data16
dec
cs
imul
or
shlb
mov
xor
shlb
fwait
pop
pusha
cmp
call
in
aad
jl
cmp
test
stos
and
sub
ss
or
or
dec
xor
xchg
adc
adc
dec
push
add
cmpsl
mov
add
sbb
add
dec
subb
inc
push
and
sub
loope
decl
sub
sbb
push
fildll
jbe
sahf
mov
cmc
sarb
xorb
mov
lret
das
icebp
or
int3
mov
call
jno
jmp
in
mov
iret
adc
or
cmp
xor
push
mov
or
js
mov
loop
pop
push
dec
ss
or
mov
je
fs
adc
testb
inc
cld
pop
or
pop
in
add
daa
sbb
addb
dec
inc
mov
add
push
fdivs
add
cmpl
into
mov
leave
test
gs
call
inc
sub
adc
data16
or
mov
push
and
movsb
ds
insl
xor
or
mov
or
cs
adc
and
hlt
dec
sub
mov
pusha
leave
sbb
push
sbb
adc
fs
cmp
pop
js
stos
sub
in
xor
push
sbb
add
pop
lock
mov
rolb
repnz
mov
and
jl
sahf
jbe
push
shrb
push
arpl
push
lods
push
cld
inc
jno
rol
xor
mov
cs
filds
ret
mov
in
inc
jbe
xchg
outsl
jne
aam
push
xlat
jecxz
add
cmp
dec
subb
inc
xchg
mov
mov
data16
fs
xchg
jle
sbb
jle
add
jmp
pop
dec
adc
inc
add
push
ljmp
outsl
mov
data16
pop
fiaddl
sbb
stc
adc
and
or
fiadds
enter
fs
je
and
and
mov
xor
loop
sbbl
pop
insb
add
sub
rol
or
or
cs
dec
test
and
popa
dec
sbb
push
cld
jbe
xchg
mov
out
xor
shl
adc
jo
loopne
outsb
pop
in
jl
cld
jle
mov
shll
call
jecxz
xchg
or
and
outsb
outsl
inc
add
shll
sub
and
mov
data16
insl
cmp
loop
stos
lea
lock
xchg
mov
sub
shll
push
mov
bound
xor
imul
add
mov
inc
mov
mov
fistl
push
mov
hlt
nop
adc
cs
clc
movsb
stos
int3
jle
add
enter
add
ret
test
sbb
xor
push
mov
mov
icebp
cld
mov
push
icebp
or
dec
mov
loope
nop
call
jmp
js
and
push
or
pop
jmp
xor
adc
cmp
test
fdivrp
arpl
mov
ret
add
push
fs
adc
add
call
and
cmp
push
and
subb
bound
jne
mov
jo
scas
add
pop
sbb
xorl
jmp
cmp
stos
push
in
jmp
icebp
and
cmpl
rclb
test
pop
add
push
shlb
add
pop
add
and
and
push
sub
xchg
and
pop
add
dec
sub
pushf
stos
pusha
and
xor
or
mov
aaa
dec
push
xchg
xchg
mov
add
out
inc
aam
loope
je
mov
aad
cmp
sti
pop
dec
sbb
or
test
mov
sub
popf
add
add
inc
cmp
rorb
fldt
and
lock
je
rorb
add
sbb
sbb
xchg
sub
nop
pop
push
out
or
push
orb
int3
gs
ret
scas
or
pop
dec
test
jbe
cmpsb
xchg
fcoms
xchg
clc
das
fsubr
ja
mov
inc
push
je
inc
cmp
jb
or
testb
jle
xor
aam
outsb
lds
push
jo
cmp
into
mov
nop
adc
pop
push
repnz
sbb
lcall
in
jo
xor
inc
pop
cld
outsl
dec
and
cs
call
cld
inc
orl
aas
mov
inc
test
or
fs
jp
sbb
enter
cs
jg
test
shlb
mov
inc
push
popa
pop
in
insl
jmp
test
mov
sub
inc
jl
lock
movsb
and
sarb
adc
push
mov
and
and
shl
std
dec
bound
cmpl
or
fisubl
pop
push
and
loope
imulb
cmp
xor
push
jmp
add
inc
jbe
mov
push
sub
or
lret
mov
je,pn
std
xchg
cli
xchg
nop
sarb
cmp
loopne
dec
in
push
inc
mov
jne
stos
mov
fsubp
int3
fwait
add
cmp
sti
enter
mov
rolb
es
jbe
mov
mov
add
pusha
incb
ret
test
inc
push
push
popa
jb
test
hlt
movsl
cmpl
je
lock
cmp
sbb
negl
inc
fdivrl
aas
inc
data16
cmp
lea
mov
loopne
sbb
mov
js
or
pop
lret
adc
sbbb
add
pop
and
mov
enter
rcrb
and
cmp
inc
mov
sbb
cld
out
inc
jmp
xor
inc
mov
decl
push
fildl
add
xchg
jno
mov
lea
enter
aam
inc
sub
fs
add
jo
cmc
pop
cmp
insb
cmp
es
push
jb
inc
sub
push
and
cs
mov
add
stc
in
out
jne
adc
xchg
adc
jmp
add
es
imul
inc
add
xchg
pop
sub
ss
daa
sub
movb
lods
sub
sbb
adc
adc
je
shlb
test
mov
lea
and
shl
pop
mov
mov
mov
cwtl
scas
push
enter
xchg
aam
test
pop
jb
mov
ret
das
out
add
jecxz
ja
pop
and
mov
test
dec
test
int3
testb
and
add
push
mov
decb
lods
call
or
test
fadd
sbb
rol
or
cmpl
mov
gs
adc
add
insb
mov
rolb
dec
jbe
test
movb
adc
cs
inc
ret
fdiv
popa
scas
mov
xor
and
sbbb
stc
inc
inc
dec
std
fidivs
push
pop
lea
test
int
popa
cmp
out
cmp
cmpsb
pop
pop
clc
testl
scas
mov
bound
xchg
mov
enter
stos
xchg
sub
loop
pushl
ljmp
and
push
inc
dec
mov
cli
mov
sbb
rolb
outsl
pop
popf
or
pop
push
out
lock
cld
mov
xor
pop
int3
pop
movsl
or
jmp
decl
mov
adc
sarb
inc
insb
jb
retw
mov
or
xor
addl
adcb
sbb
or
mov
das
pusha
subb
adc
or
jp
xor
aaa
loopne
dec
enter
inc
jle
xchg
jo
shrb
sbb
sbb
jle
call
fsub
inc
jle
orb
out
outsb
add
adc
inc
lods
mov
imul
adc
xchg
mov
mov
sbb
gs
and
dec
outsl
call
pop
add
push
inc
mov
inc
dec
cmp
fsub
dec
or
sub
mov
or
call
in
ss
rcrb
xor
and
sbb
sub
rcrb
inc
std
inc
jle
leave
or
sahf
pusha
cld
cmp
jo
rclb
jge
add
cli
pop
nop
mov
add
out
je
push
gs
mov
or
push
cmpsb
ficoml
push
xor
or
jb
adc
shll
xchg
subl
push
rolb
sbb
cmpsl
clc
adc
les
cmpb
jnp
rcll
pop
pop
or
fldt
pop
aas
mov
int3
hlt
jmp
fs
xchg
xchg
sbb
adcb
dec
and
add
lahf
pop
push
jbe
add
pop
add
js
insl
add
pop
cmpsl
or
pushl
in
jo
test
or
xor
imul
subb
rorb
dec
das
mov
cmp
pop
mov
sub
adc
and
ss
insb
into
or
mov
and
stos
adc
jbe
or
cmp
add
in
adc
idivl
lods
testl
pushf
jge
jg
mov
jl
jp
jne
adc
cmp
and
ret
bound
or
dec
call
call
adc
mov
cmpsl
movsb
push
sub
inc
rcr
aad
jg
addb
xchg
pushw
jo
nop
loopne
adc
pop
sbb
pop
scas
sahf
sbb
pop
mov
std
push
push
add
orb
xor
mov
sbb
mov
nop
adcb
xchg
and
push
out
mov
jbe
mov
inc
pop
negb
xorl
push
mov
mov
dec
dec
jl
and
js
cmc
xchg
lea
loopne
jecxz
mov
out
sub
or
push
insb
xchg
mov
mov
hlt
daa
dec
in
les
add
ljmp
pusha
std
sub
mov
jo
das
pop
jae
nop
ret
xchg
cmpsb
out
mov
xor
inc
ss
pushl
ret
incl
sub
adc
cmp
mov
or
push
add
dec
sub
call
ret
and
out
clc
gs
out
add
sub
mov
mov
lcall
dec
jne
push
clc
nop
pop
sbb
sbb
lcall
jmp
in
pop
add
shlb
test
popa
dec
jne
sbb
and
push
mov
iret
cmp
ds
fdivrs
outsl
lcall
mov
add
lret
mov
mov
pop
clc
or
add
cmp
mov
jg
ja
cmp
cmp
test
mov
scas
add
aam
adc
andl
fs
cs
mov
pop
inc
iret
sahf
sub
testl
mov
sbb
cmp
shlb
fisttpl
clc
mov
cli
jbe
faddl
popf
test
sbb
pop
fsubrl
add
sub
lea
mov
incl
mov
imul
sti
mov
dec
add
jb
lea
faddl
mov
dec
xor
inc
cmp
xchg
enter
inc
inc
fimull
cmp
and
out
jne
adc
cltd
adc
in
call
pusha
jo
push
xchg
mov
adc
gs
jmp
xchg
push
add
add
sub
rcr
jo
add
sbb
sbb
shlb
cli
add
cmp
add
xor
xor
push
sbb
mov
je
sbb
pop
jg
sbb
ret
push
dec
push
notl
sub
stos
inc
xchg
adc
jbe
mov
mov
adcb
loope
xor
repnz
lcall
xchg
les
cli
das
xchg
pop
pop
or
mov
and
mov
xor
sbb
adc
in
in
xor
in
cmpsb
subl
xor
adc
jp
xor
sub
cs
enter
push
or
cmp
sarb
leave
rcr
add
adc
jge
sbb
jle
cmp
push
jbe
paddsb
mov
jns
test
aas
push
stos
dec
jbe
xor
cs
lock
fdivl
xchg
or
push
inc
outsb
incl
inc
jg
mov
fidivl
cli
cli
int3
dec
les
jecxz
push
mov
xchg
xchg
cmp
enter
rolb
sub
mov
ret
xchg
repnz
or
lret
fs
mov
jb
jmp
notb
mov
and
inc
fs
aas
push
add
add
test
mov
test
xchg
cmp
sub
mov
cmp
inc
mov
push
stos
out
test
call
pop
mov
push
rcrl
inc
insb
sarb
inc
xorl
inc
es
cmpsb
or
mov
jge
dec
loopne
std
push
or
jb
dec
je
xor
xchg
arpl
push
adc
mov
mov
addb
or
adc
shlb
scas
decl
shr
cmp
clc
sbb
stos
pushl
fmuls
or
cmp
mov
stos
sub
jle
jle
mov
jp
inc
cmp
mov
sub
js
out
cmp
add
push
enter
xor
aas
andb
loop
mov
add
adc
add
mov
mov
jge
mov
cmp
pop
adc
pusha
jge
or
insl
cmp
inc
jl,pn
icebp
loop
cmp
sub
mov
ret
xlat
outsl
mov
mov
int3
dec
testb
loopne
test
imul
dec
cmpb
inc
or
jmp
rcll
jp
call
pop
add
jmp
mov
add
mov
divb
mov
icebp
sbb
mov
adc
inc
js
adc
mov
mov
or
and
inc
lcall
jle
insb
push
push
insl
xor
xor
test
mov
jo
add
outsb
js
mov
mov
movsl
xorl
test
rolb
or
lret
jmp
cmp
mov
add
hlt
rol
lock
cmp
push
pusha
push
inc
sub
inc
add
orl
decl
add
xchg
or
adc
iret
lea
add
cmp
adc
add
or
cmpsb
lcall
jb
rcrl
popa
sbb
push
jle
ljmp
imul
push
out
es
hlt
jge
stos
add
jecxz
leave
or
mov
and
stos
cmp
pop
mov
inc
push
xor
mov
leave
jbe
sub
mov
sti
dec
aaa
loopne
xor
les
xchg
dec
js
icebp
pop
xor
insb
in
push
movsb
movsl
bound
push
inc
fucomp
and
lret
and
mov
and
shr
sbb
insb
add
cmp
enter
rolb
cld
mov
add
fadds
cld
mov
scas
inc
call
or
pop
push
add
int3
jo
xor
fcoml
adc
in
or
pop
xchg
decb
add
push
or
push
add
sbb
adc
pop
cmp
push
and
sahf
or
ret
xor
mov
out
jmp
xorl
gs
sahf
mov
push
ficompl
cmp
xor
pop
cs
inc
mov
clc
add
jmp
sti
aas
pop
mov
push
call
xchg
cmc
rolb
cmp
movl
stc
mov
loopne
into
cltd
sbb
aad
inc
sarb
jmp
push
dec
push
mov
add
test
sub
ljmp
je
push
inc
push
sub
notb
lock
mov
cmp
cmp
add
mov
rol
insb
stc
shrl
sub
adc
es
lods
pop
test
std
stc
push
push
js
movsl
inc
cld
out
or
pop
incb
bound
call
mov
jmp
shl
lods
pop
and
es
shlb
das
push
call
scas
xor
popa
jae
pop
lods
jmp
jmp
rcrb
stc
lea
ja
pop
mov
fsubs
jle
pop
mov
push
mov
dec
repnz
cli
dec
add
int3
std
lret
push
leave
gs
cmpsb
inc
andb
push
xchg
sar
and
xor
outsb
mov
out
push
and
cmp
cld
push
daa
mov
addb
mov
aam
test
jmp
faddl
add
outsl
jb
jne
push
icebp
fsubr
adc
cld
push
xor
testb
test
push
jo
inc
mov
or
loopne
repz
nop
inc
mov
lods
jae
add
push
roll
dec
or
sbb
dec
push
and
adc
gs
xor
pusha
incb
dec
shlb
adc
fbld
in
ret
pop
inc
ja
hlt
aaa
jb
rolb
lcall
sub
mov
lock
or
leave
or
out
and
sbb
sbb
test
cs
call
cmpl
addr16
xor
push
and
push
test
scas
sbbl
push
or
or
movsl
bound
push
cmpsb
jmp
rcrl
sub
clc
add
les
push
cwtl
mov
mov
pop
incl
fcom
js
cmp
add
or
into
orl
jge
mov
xor
into
bound
leave
popf
xchg
in
inc
or
inc
inc
dec
test
mov
es
xchg
dec
mov
hlt
mov
leave
lods
inc
loope
cld
stc
adc
cmp
lods
movl
push
xchg
fs
ret
cwtl
add
push
jmp
and
mov
dec
adc
add
and
adc
sbb
shrb
packssdw
popf
push
pop
adc
xchg
test
clc
cmp
insb
inc
or
orb
movsl
and
cmpsb
inc
pop
sbb
or
dec
push
jb
inc
ja
jmp
adc
rolb
push
and
popa
adc
test
sbb
mov
xchg
pusha
add
aam
sub
cmc
pop
ljmp
std
mov
push
dec
lock
xor
lods
push
sbb
loopne
mov
xchg
lods
orl
sahf
xchg
mov
and
fs
stos
outsl
nop
dec
mov
insb
push
push
sbb
inc
or
mov
or
push
mov
pop
or
cmp
xchg
ret
ret
call
fs
test
push
sbb
mov
ret
mov
test
jg
call
inc
pop
loope
xchg
adc
ret
jmp
lock
inc
sub
cmpsb
xor
fs
xor
stos
lods
insl
adc
sarl
popf
inc
sub
stos
adc
lock
mov
cld
xor
push
jne
mov
mov
jp
lock
and
psrlw
push
and
pusha
jns
xor
fs
inc
cmpl
imul
lcall
sbb
lods
mov
push
add
adc
pusha
test
xor
shr
nop
and
div
or
mov
mov
cmp
sub
aam
or
mov
jp
test
dec
es
pop
sbb
push
xlat
ds
push
lahf
add
ss
jnp
in
inc
incb
cmp
xor
je
or
lcall
xchg
jge
sbb
rolb
ret
or
xor
mov
ss
mov
pop
clc
inc
ret
cmp
add
mov
mov
test
mov
pop
fucomi
or
clc
scas
xor
mov
add
mov
aas
dec
ljmp
jle
push
push
jle
sub
adc
rorb
in
movb
sete
jmp
fiaddl
push
jmp
add
jo
leave
cmp
jg
sbb
mov
sbbb
dec
push
inc
into
out
or
lcall
cmp
inc
dec
lock
xor
push
pop
out
xor
mov
loop
movsb
and
clc
dec
cs
add
enter
xor
test
push
int3
in
test
xchg
outsb
and
vpaddq
cmp
daa
rorl
pop
cli
dec
aaa
ljmp
or
jge
outsl
notb
sbb
xor
loopne
andl
push
call
mov
and
sbb
call
std
push
popa
jl
mov
dec
inc
push
imul
pop
mov
clc
fcoml
lock
add
mov
mov
lret
or
int3
loope
pushw
or
pop
xor
mov
enter
push
push
shrb
mov
mov
loop
or
hlt
icebp
add
out
scas
jb
add
inc
fcomps
ret
and
bound
adc
xor
shlb
aaa
adc
loopne
cmpsb
jmp
dec
and
pop
cmc
mov
inc
test
sub
and
fsubrl
cld
jecxz
sti
data16
das
and
cli
or
sarb
enter
sbb
test
xchg
shlb
jo
xchg
cmpsl
pop
shlb
jmp
mov
adc
mov
cmp
xor
mov
pop
inc
mov
and
sub
mov
nop
movb
lcall
xorb
int
ret
popa
dec
aam
lock
out
clc
add
add
in
xor
call
xchg
cli
adc
addl
fdivp
sub
push
int3
cmp
xchg
shrl
or
add
push
negb
pop
pop
add
adc
push
aas
cmpb
add
pop
testl
sbb
fiadds
dec
icebp
and
cmp
or
sub
aam
jp
in
sub
addr16
lahf
mov
mov
lea
repnz
mov
outsb
sbb
xchg
cld
jnp
in
ss
loopne
push
inc
sub
add
sub
jne
adc
inc
sbb
mov
aam
jb
push
int3
in
dec
shrb
xor
sarl
loopne
popa
lods
ds
stos
dec
push
push
pop
pop
or
xchg
and
and
rclb
or
xchg
cmp
xor
dec
push
mov
mov
jmp
arpl
xor
sub
and
data16
fs
xchg
mov
adc
test
notb
add
lea
cmpl
xchg
mov
stos
cli
or
pop
pop
in
movsb
jae
cli
lcall
aaa
call
jo
test
clc
xor
jo
pop
sbb
call
mov
lock
sahf
push
and
push
add
and
loope
mov
push
add
sub
mov
dec
arpl
clc
arpl
inc
mov
mov
adc
inc
fistps
mov
test
mov
in
push
pop
icebp
subb
sar
test
push
dec
sarb
push
or
jecxz
mov
testb
sbb
fdivs
dec
js
jbe
push
ror
sub
push
and
lock
ret
fmuls
sub
mov
cmpsl
fmuls
ss
add
lea
mov
out
cmp
add
mov
ss
shrb
push
repnz
or
sar
shlb
shrb
lea
pop
aaa
sub
mov
lds
call
pop
movsb
aam
mov
inc
push
push
push
mov
cli
add
std
testb
push
test
add
fcom
lahf
es
sub
aaa
cmp
shrl
das
or
xchg
dec
or
fs
ret
push
sub
jne
jne
sub
in
or
lods
cwtl
mov
mov
mov
xor
add
incb
pusha
shll
adc
lods
testb
sub
jo
and
test
and
push
mov
dec
movsb
push
out
in
or
jmp
or
shlb
add
stos
rcrb
dec
dec
add
test
hlt
fdivrp
movsb
inc
pushf
dec
jne
orl
into
cmp
sbb
loop
adc
sbb
test
inc
mov
pop
jno
jmp
test
in
push
call
mov
nop
push
mov
sub
testl
ret
popa
or
xor
es
push
pop
lret
rcrb
xor
jmp
mov
lea
les
jp
sub
mov
sbb
sahf
lock
fiadds
adc
std
pop
ss
pop
jge
incl
push
inc
fadds
inc
or
ret
mov
fstl
jb
inc
test
push
mull
cmc
xchg
inc
dec
rorl
test
test
dec
and
sbb
test
clc
pop
jg
dec
and
in
inc
pavgb
mov
add
out
data16
test
shlb
jne
sub
hlt
jg
push
add
inc
xor
jo
je
adc
out
xchg
dec
cmp
andl
out
aaa
andl
pop
mov
inc
call
sarl
xchg
mov
push
dec
call
mov
ss
decl
pop
push
pushf
push
mov
sarb
push
mov
and
repnz
inc
pop
pop
add
into
mov
inc
cmp
aam
int3
xchg
aaa
cmp
pmaxsw
fadd
in
clc
fcmovnb
in
daa
inc
push
dec
rclb
inc
push
cwtl
jge
nop
jno
mov
imul
and
jl
lock
movsb
fdivp
pushf
add
inc
ja
test
inc
and
or
add
sbb
lock
rorl
dec
mov
xor
sbb
data16
pop
push
rclb
mov
fildll
mov
dec
test
cld
jp
sarb
mov
or
xor
push
adc
inc
jo
sbb
mov
clc
fs
mov
xlat
paddd
loop
xor
outsb
adc
xchg
inc
xchg
adc
or
ljmp
sarl
ds
pop
jmp
and
addb
push
mov
inc
inc
ret
rorb
jbe
sbb
add
repnz
sarl
cmc
negl
mov
cmp
shlb
dec
int3
or
aam
xor
adc
movsl
data16
mov
loop
mov
nop
push
mov
mov
xor
push
dec
loop
ret
enter
pop
sub
inc
mov
loopne
ret
fistl
ljmp
jmp
and
lock
inc
mov
outsl
ss
push
in
xor
push
xor
inc
xor
test
aad
xchg
jl
enter
repz
sbb
ret
nop
cmp
jae
int3
add
cltd
lock
cwtl
test
in
push
push
rcrb
hlt
clc
mov
jo
add
push
and
and
dec
add
enter
in
push
jb
rclb
les
add
pop
inc
dec
jb
pusha
fmull
cwtl
pop
sub
test
adc
test
js
push
adc
repnz
push
pop
add
sahf
cmp
lret
pop
cmp
pop
or
jl
test
inc
add
adc
or
mov
dec
add
adc
xchg
test
sub
mov
jb
jl
pop
aam
cltd
xor
call
mov
pop
into
in
xor
pop
pop
lea
mov
popf
push
fistpll
and
clc
mov
cmp
ret
shll
push
mov
je
fadds
test
in
cld
pushf
mov
mov
insb
jo
loopne
test
dec
clc
push
adc
or
movsb
ljmp
pop
rcl
mov
cmc
lea
and
mov
push
push
fdivrs
stc
pop
push
jge
adc
mov
sub
mov
mov
mov
scas
or
fiadds
lcall
lea
push
pop
push
aam
pop
or
inc
test
andl
add
inc
xchg
cmc
inc
cmp
je
add
aas
ja
adc
xor
push
insb
pop
into
and
inc
push
hlt
roll
adc
jl
add
sarb
je
cld
xchg
add
addb
inc
lea
xorl
add
mov
and
lcall
lret
or
jge
pusha
shrb
or
adc
add
outsl
dec
mov
js
xchg
ss
or
outsb
stc
xorl
mov
xchg
stos
and
push
add
dec
rolb
pop
nop
xor
lock
dec
loopne,pn
add
cmpl
inc
mov
cmp
dec
lea
je
dec
inc
into
ret
sub
clc
cld
out
lea
push
incl
stos
jp
call
push
or
std
xor
jp
clc
test
les
push
jg
add
subl
jo
popf
push
xor
fmull
add
add
mov
pop
ss
jl
cld
ror
gs
shll
push
mov
sub
addl
fildl
mov
pop
adc
aaa
xchg
and
push
mov
cbtw
ljmp
mov
adc
push
imul
sbb
pop
loopne
inc
sbb
xor
rolb
push
mov
adc
lods
push
adc
push
ret
int3
or
lcall
and
sub
fldl
rcrb
push
int3
or
xor
xor
mov
inc
mov
cmp
cld
cli
cmpsb
jne
inc
cmc
mov
mulb
test
xor
inc
cld
jbe
lea
and
mov
arpl
mov
movsb
xor
mov
incl
inc
sub
pop
xor
push
pusha
outsl
test
sub
sbb
push
cmp
xor
and
btsl
jp
das
sbbl
inc
add
fldl
push
popf
inc
jb
push
js
sbb
or
stos
add
int3
dec
js
push
add
ja
dec
pop
clc
inc
xor
scas
shlb
dec
lret
pop
lea
movsb
cmc
mov
and
mov
xor
lods
js
jle
in
mov
sub
xor
add
hlt
lea
jmp
adcl
mov
daa
or
mov
add
mov
popf
lea
and
pop
idivl
mov
clc
sbb
or
jl
jle
jne
lock
clc
or
mov
sub
sub
adc
add
pop
cmp
shrl
xlat
std
sub
in
sahf
jmp
adc
dec
clc
incl
enter
inc
dec
push
cwtl
mov
dec
pop
ja
cli
les
outsl
andb
xor
dec
call
push
jl
pcmpeqw
mov
testb
xor
jo
enter
jg
lods
inc
jmp
pop
push
inc
or
and
mov
cld
js
rcrl
ret
lret
arpl
or
out
subb
inc
inc
icebp
call
movsb
es
mov
inc
mov
movsb
addl
test
test
test
popa
dec
sub
add
mov
add
add
dec
xor
into
sti
ljmp
sbb
rdmsr
mov
ret
aam
fiaddl
loopne
loopne
mov
jl
mov
and
sbb
add
jmp
decb
cmp
aam
pusha
sysret
mov
dec
fs
lds
jmpw
mov
push
xor
jo
sarb
shlb
and
repnz
inc
mov
mov
test
ret
cmp
test
leave
adc
mov
aas
xchg
mov
or
rcrl
dec
dec
jmp
mov
notb
subb
sbb
fldl
push
inc
mov
push
xchg
sbb
pop
inc
das
mov
push
push
lret
testl
inc
sbb
cmpsl
prefetch
or
outsb
jb
adc
subl
mov
pop
lcall
push
sbb
push
jno
subb
and
sarb
insl
ja
dec
jmp
cwtl
cld
adc
add
jmp
dec
pop
ret
stc
inc
adc
mov
add
imul
pop
add
mov
incl
ss
stos
add
push
sbb
or
pop
add
add
sbb
jbe
push
inc
adc
xchg
or
push
adc
adc
adc
add
xchg
add
mov
jmp
inc
arpl
outsb
inc
leave
les
addr16
adc
adc
push
add
push
loope
push
xchg
cmp
dec
out
xor
jo
std
mov
cmp
ret
je
shl
cmp
call
movsb
sub
inc
nop
mov
bound
call
push
xor
mov
inc
push
sub
adc
fwait
outsb
xchg
xchg
mov
xchg
loopne
pop
pop
inc
lea
adc
ss
lods
jl
loopne
insb
dec
cmp
jns
or
lcall
inc
inc
out
cmc
gs
ljmp
js
dec
push
jb
cmpsb
mov
ret
jbe
aaa
ret
cld
push
xor
push
xor
test
fmul
push
sub
mov
dec
sbb
mov
dec
bound
outsb
daa
insb
sbb
mov
adcb
or
pop
notl
cld
add
ror
les
outsb
inc
dec
pop
mov
mov
fcmovbe
clc
push
insl
mov
mov
mov
mov
pop
shl
mov
cld
or
dec
xor
push
push
pusha
add
psrld
ficoml
mov
mov
mov
mov
mov
jmp
add
js
push
adc
daa
pushf
mov
fidivs
lods
jp
xor
add
mov
jp
dec
out
add
ss
test
popa
lea
inc
loopne
add
dec
ret
pop
or
in
fadds
push
mov
xor
in
insb
push
clc
data16
pop
inc
je
xchg
gs
dec
data16
and
gs
shlb
sub
sub
adc
cmp
jnp
outsb
push
xor
stos
pop
sbb
sbb
dec
jl
sub
daa
push
test
fsubs
push
or
in
inc
sbb
jecxz
mov
mov
subps
in
lea
ret
and
mov
pop
add
mov
cli
inc
loopne
int3
mov
mov
jne
cli
dec
add
add
loop
adc
cmp
inc
adc
xor
dec
push
js
mov
mov
push
add
outsb
push
cmp
xchg
icebp
sub
fdivp
and
lods
lcall
ficoml
subb
mov
jb
mov
test
push
rcrl
incb
andb
jbe
inc
lret
jae
fwait
xchg
enter
popf
push
lock
cmc
orl
cmp
pop
inc
dec
aam
test
bound
add
mov
sub
pop
cld
in
fildll
cmp
jbe
inc
andl
inc
enter
sbb
loopne
stos
jmp
cmp
adc
psllq
push
fwait
pop
dec
cmp
jecxz
xor
js
sub
lahf
add
enter
adcl
push
mov
rol
push
adc
add
cmpsl
rcrb
add
adc
andb
ljmp
mov
xchg
out
js
add
inc
hlt
jl
inc
xlat
hlt
add
cmp
sub
inc
clc
call
fildll
or
mov
cli
mov
cmp
andl
lret
movsb
cwtl
es
fimuls
lods
xchg
mov
inc
inc
mov
push
rorb
mov
jo
imul
loope
add
data16
popf
enter
xchg
pop
enter
aam
lock
cli
aam
push
sbb
lcall
push
rcll
shrb
mov
add
fnstcw
loope
shrb
sbb
dec
adc
rcr
outsl
aam
cld
out
data16
add
jp
movsb
inc
inc
ret
and
jmp
push
int3
popf
test
insb
leave
push
fadds
pop
push
icebp
xor
jg
pop
sahf
push
dec
les
shlb
mov
mov
pop
cmpl
pop
shrl
push
push
inc
repnz
dec
popf
cmp
je
pop
add
add
xchg
movsl
rcrb
out
pop
push
jmp
nop
or
lods
pusha
rcl
mov
ljmp
pop
movsb
clc
push
pand
aas
add
lock
xchg
rclb
push
xor
int3
mov
cs
lds
pusha
loope
out
es
cs
add
inc
pop
add
inc
and
cmp
insb
ret
and
jne
popa
push
aas
mov
cwtl
xchg
lea
add
fs
mov
push
dec
lods
sbb
pop
test
daa
cwtl
enter
or
les
loope
xchg
add
adc
loopne
sub
mov
ret
ljmp
adc
xchg
sbb
js
cmc
daa
pop
or
nop
cmc
push
push
call
sahf
sbb
xchg
jecxz
scas
clc
enter
cmp
and
and
lock
and
mov
sbb
xlat
xlat
fistpll
and
jp
push
in
mov
add
gs
add
or
jp
mov
es
out
std
push
add
ljmp
bound
adc
jg
mov
addb
dec
or
jne
mov
loope
mov
arpl
in
xchg
sbb
je
adc
nop
adc
outsl
add
out
sbb
mov
mov
cmp
cmpsl
rcl
push
adc
dec
imul
cld
mov
insb
or
adc
mov
sub
xchg
or
pop
and
stos
ja
sbb
dec
mov
movsl
jno
sar
dec
mov
lock
imul
jg
add
ja
aaa
cmp
dec
jle
dec
stos
push
les
sti
clc
ret
shr
cmp
dec
cmp
jmp
mov
cmpsl
sbb
dec
mov
dec
push
popl
mov
sahf
call
jmp
cmc
inc
mov
subl
add
cmpsl
cltd
std
sub
add
mov
in
add
pop
jle
lea
inc
dec
test
mov
ret
test
dec
subps
adc
mov
adc
or
push
test
aaa
pop
clc
incl
inc
cld
xor
adc
push
push
xor
lea
fwait
rcr
add
or
out
fs
or
jge
stos
mov
aam
jp
aaa
mov
add
test
pop
push
into
es
or
adcl
aam
cmc
dec
out
clc
adc
push
insb
cmp
int3
xchg
call
int3
mov
sbb
mov
out
add
add
hlt
xor
mov
fld
xor
add
sub
sub
pop
lock
lods
cmpsb
cmpsl
or
pop
imul
jmp
jb
jne
fdivr
pop
or
jnp
push
or
out
sti
push
inc
pusha
xchg
push
pusha
ret
mov
mov
loope
xchg
mov
andl
sbb
mov
pop
loopne
push
mov
les
push
sub
add
add
mov
pusha
ficomps
ja
jmp
lgdtl
mov
and
push
jecxz
add
ss
adc
inc
sub
inc
loope
or
call
and
je
clc
or
or
add
add
jae
std
cmpsb
dec
mov
sub
iret
jmp
add
mov
xchg
movsl
sub
fcomp
sub
dec
es
daa
mov
xchg
fnstsw
push
and
imul
call
dec
pop
inc
aam
nop
jb
cmp
lods
inc
inc
sbb
pushl
push
sbbb
filds
rcrb
sahf
dec
je
dec
in
push
dec
lds
aam
dec
rcrb
push
pop
int
push
test
clc
call
adc
shlb
cmpxchg
add
aam
push
jb
test
add
mov
daa
mov
jb
pop
lods
xchg
adc
inc
flds
ret
loopne
push
fdivrs
rol
rclb
hlt
or
fsubrs
outsb
pop
push
in
xchg
decb
jno
push
pop
std
add
lcall
xchg
je
fidivrl
pop
outsl
sbbb
test
pop
loop
or
pop
fildll
stos
je
shlb
push
sbb
and
inc
inc
jo
je
or
pop
dec
and
ror
ss
decb
push
cwtl
clc
inc
push
gs
and
stc
pusha
sub
adc
mov
push
mov
sbb
sbb
repz
mov
xchg
mov
dec
add
fsubrp
mov
mov
cmp
mov
inc
test
sub
inc
mov
sub
es
mov
add
inc
outsb
hlt
jmp
sub
imul
and
call
pusha
je
sahf
aam
aad
sub
je
xchg
mov
out
test
pushf
dec
loopne
jp
inc
push
das
insb
fisttps
fs
push
js
call
fstps
mov
cmp
jae
sbb
mov
addr16
sub
mov
cli
add
pop
mov
mov
add
mov
or
dec
clc
int3
pop
adc
push
enter
sahf
test
dec
mov
jg
or
bound
aaa
inc
loopne
sbb
add
notl
pop
mov
nop
cmc
push
and
leave
insb
and
push
add
or
or
push
pop
dec
in
add
andl
jo
test
dec
sub
scas
mov
in
call
inc
rcll
add
mov
mov
pop
adc
call
inc
inc
ss
mov
fs
sub
add
or
mov
mov
or
or
jp
cmpsb
adc
push
pop
jne
dec
mov
test
rcl
sbb
lcall
xchg
add
adc
sub
insl
sbb
fiadds
shlb
test
and
pop
lret
popf
adc
mov
or
xchg
mov
mov
call
add
setbe
and
xor
das
push
adc
or
test
out
jl
ljmp
jo
inc
push
sbb
adc
fldt
subb
and
lock
cli
sub
stos
adc
mov
fimull
jg
push
push
push
xchg
add
outsb
add
sarb
adc
push
push
mov
sbb
cmp
out
js
mov
mov
adc
fsin
aas
mov
jo
xor
push
push
or
cltd
mov
int3
push
jo
sbb
ret
lock
adc
ret
xchg
xorb
pop
movsb
mov
add
rclb
in
out
xorl
pop
clc
ret
add
dec
and
add
sbb
lcall
adc
and
mov
sti
outsb
outsb
push
adc
push
repnz
and
inc
inc
dec
inc
sbb
pop
lcall
push
mov
xor
rcrb
mov
mov
cmovno
inc
push
cmp
dec
mov
gs
addb
jl
test
push
jno
jns
mov
decl
loop
inc
cmp
add
adc
loop
mov
inc
test
out
out
ja
mov
fidivs
pop
orb
cmp
test
lock
cmp
ds
fisubl
loop
popf
or
popa
push
push
inc
pusha
push
jl
push
jo
or
cmp
popa
push
aaa
into
clc
stos
push
fdivs
mov
mov
cs
sub
addr16
push
push
jmp
mov
or
mov
ret
in
and
pushf
hlt
in
xchg
jno
push
cmpb
pop
mov
xlat
cs
fisubrl
add
or
subl
dec
push
adc
jmp
sbb
jae
push
popa
jne
mov
lcall
and
repnz
cmp
add
xor
xchg
inc
sbb
dec
dec
test
clc
aaa
push
or
push
fdivs
enter
insb
mov
jmp
inc
shlb
inc
loop
push
loopne
out
sub
jne
jmp
and
hlt
add
jmp
in
dec
lahf
cs
push
int3
cmp
int3
mov
push
aam
jge
or
mov
pop
cmp
push
es
mov
ret
and
das
dec
fsubrl
rolb
mov
fsubl
int3
ds
or
fisubrs
or
add
or
pusha
stc
pop
clc
inc
je
das
cli
int
mov
or
lea
or
adc
mov
inc
xor
js
dec
ljmp
or
cmp
lahf
aas
pop
flds
push
lock
mov
add
cmp
int3
cmp
nop
sbb
int3
test
stos
inc
lds
jmp
fcoms
gs
mov
jne
sub
hlt
add
xchg
add
fiadds
ds
and
mov
mov
lock
pop
sarb
or
inc
xchg
sbb
xbegin
in
orl
fistpl
xchg
jbe
add
and
std
ljmp
lea
push
jmp
dec
cld
arpl
and
imul
movsl
in
lock
dec
cwtl
fidivs
ret
push
test
int3
insb
enter
inc
or
loope
rolb
inc
sbb
cmp
or
mov
cmpsl
icebp
xor
dec
shrb
dec
aas
in
push
mov
pop
or
popa
add
jbe
hlt
aaa
add
or
mov
in
adc
sahf
jae
jb
inc
pop
sub
daa
inc
mov
xor
adc
lea
mov
aas
in
xchg
cmp
xchg
int3
jle
rcrb
mov
mov
cmp
mov
or
repnz
pop
sbb
lock
cli
mov
std
mov
icebp
cli
push
js
push
push
aaa
cwtl
cli
lcall
xor
pushl
aaa
je
imul
and
push
divl
imul
lret
dec
out
jns
pop
loope
add
nop
clc
repnz
add
add
hlt
fimuls
flds
out
addps
sbb
xlat
push
mov
inc
ret
jbe
loop
jl
mov
inc
jg
nop
les
lret
sub
adc
pop
jmp
clc
mov
xor
xor
les
je
xchg
xchg
or
inc
int
addl
mov
mov
and
subb
mov
mov
add
fisubrl
mov
les
push
in
push
sbbb
ja
add
mov
clc
adc
dec
mov
out
loop
xor
or
cli
std
mov
jbe
jmp
add
mov
add
test
test
mov
inc
cli
pushl
add
mov
xor
adc
dec
push
out
mov
mov
cmp
inc
ret
and
xchg
mov
fnstsw
jp
jecxz
sbb
mov
push
fdivrl
sub
lods
xchg
gs
lock
mov
or
jmp
loopne
in
sub
js
fwait
add
jbe
sbb
testl
mov
mov
mov
icebp
jge
lret
mov
insb
xchg
fs
pop
push
nop
sbb
call
pop
popf
push
jp
js
iret
or
hlt
and
and
pop
les
inc
insb
cmovno
adc
mov
roll
outsl
sub
xor
das
sbb
pusha
push
js
js
pusha
dec
pinsrw
ljmp
fcoms
idiv
or
pop
add
mov
pop
pcmpeqb
aas
pusha
shrb
mov
cli
loope
cmp
mov
or
dec
or
sub
movsl
lock
and
lcall
cli
inc
add
mov
pop
mov
fimuls
pop
icebp
inc
push
cli
ds
push
loope
pushf
mov
ret
adc
cmpl
ret
add
repz
jb
out
loopne
dec
fwait
loop
not
adc
and
add
cld
sarb
ds
bound
fcomps
aas
inc
sub
out
movsl
pop
insb
cmp
mov
popa
mov
inc
xchg
pushl
push
or
dec
js
push
rcll
jmp
xorl
clc
xorl
cwtl
ds
lea
sbb
movsl
mov
inc
adc
faddl
je
call
fsubrs
ss
adc
or
or
cmpsb
gs
adc
shll
shll
pop
shl
insl
sarl
lods
or
push
pop
incl
lea
fadds
or
sti
inc
push
test
aam
out
lods
add
in
outsl
adc
mov
push
dec
mov
lret
jmp
add
dec
enter
xchg
rcrb
lods
gs
fisttpl
or
in
cmp
dec
cmpsb
mov
repnz
pop
mov
fdivr
xchg
fs
call
inc
nop
jmp
lock
mov
mov
inc
push
or
adc
xchg
sbb
pop
or
push
lock
in
sbb
or
aad
cmp
gs
push
mov
add
ss
clc
mov
adc
jne,pn
scas
inc
xor
fisubrl
lock
pop
mov
addl
sbb
pop
int
hlt
xor
push
mov
cld
or
dec
cld
or
xor
or
add
add
jnp
outsb
push
inc
or
inc
cwtl
fsubr
add
ljmp
xchg
and
pop
xchg
adc
hlt
xchg
aam
cmp
cmp
lods
test
daa
push
testb
mov
enter
add
loope
shlb
dec
fsubs
mov
shlb
in
les
enter
stos
push
inc
loop
mov
inc
mov
push
adc
sub
je
jmp
push
rcrl
add
lea
adc
orb
push
call
add
push
aaa
fisubrl
pop
mov
sub
mov
cltd
in
push
hlt
inc
dec
push
mov
mov
inc
push
sbb
repz
sbb
pop
jo
dec
por
loopne
mov
xor
jle
ret
call
dec
jb
sbb
les
call
fwait
add
add
mov
ret
mov
jb
bound
pop
scas
adc
mov
mov
dec
pop
mov
jns
pop
fisubs
mov
push
bound
or
ljmp
arpl
xor
push
mov
add
movsb
popa
call
std
xor
jl
lods
push
push
neg
dec
shr
xorl
lahf
outsb
iret
clc
decl
rolb
inc
lret
mov
jo
add
ds
jg
mov
dec
mov
das
ret
xchg
jae
mov
mov
rcrl
inc
add
add
pop
xchg
xor
pop
outsl
aas
negb
es
icebp
rolb
fmull
adc
add
fistl
pop
xchg
lods
into
push
xchg
std
mov
inc
aad
dec
cmp
stc
pop
add
dec
pushf
std
stos
inc
sar
out
cltd
mov
mov
les
dec
cld
cmp
and
sbb
lea
sub
push
xor
or
movsb
add
add
mov
xchg
sahf
inc
les
insl
mov
test
pop
add
push
insl
sbb
add
dec
insb
dec
xor
add
lock
aam
call
arpl
xchg
cmc
lea
cmp
or
sub
adc
mov
lods
pop
cld
mov
mov
pop
mov
add
jmp
push
adc
aad
push
push
leave
int3
in
push
fdivs
insl
xor
or
scas
dec
ljmp
push
mov
hlt
mov
popa
test
pop
or
push
mov
lea
nop
or
in
lret
ja
mov
test
pop
out
pop
xchg
push
push
sbb
cmp
push
push
incl
inc
out
jne
cmpsl
inc
in
mov
add
test
insb
daa
loop
loop
mov
insb
or
test
call
xor
rol
or
lock
push
push
insl
inc
out
nop
lea
rcrl
xor
repnz
lea
push
cmp
push
dec
inc
lcall
jae
test
jp
pop
loope
mov
aaa
std
aaa
or
push
jae
ss
and
std
add
push
adc
mov
data16
nop
mov
popa
inc
mov
shll
dec
loopne
mov
dec
enter
cmc
cmp
daa
ret
jne
out
ss
add
sbb
pusha
sbb
inc
inc
push
inc
out
mov
adc
xchg
popa
fistpl
outsl
popa
push
inc
pop
add
clc
jg
inc
loopne
mov
jae
mov
pop
or
mov
call
mov
add
roll
sbb
ret
clc
out
push
add
add
sbb
push
fsubl
add
inc
lea
add
adc
inc
jle
js
decb
enter
inc
jmp
and
dec
fdivl
rcr
test
orb
xchg
dec
add
jle
gs
pop
dec
movsb
dec
stc
aam
stos
or
push
jl
jmp
mov
insb
es
call
mov
mov
dec
mov
sub
jge
pop
and
or
clc
std
in
add
out
vpbroadcastd
mov
sbb
sub
lret
out
and
and
adc
push
in
jge
scas
aas
sub
mov
adc
loop
sub
bound
or
out
mov
rolb
cmp
or
lret
add
push
insb
jo
xor
dec
js
xchg
mov
jl
mov
fimull
xor
sub
mov
mov
jns
adcl
ljmp
cld
cld
xor
gs
inc
and
cmp
stos
bound
jmp
andb
cmp
test
push
xorb
pusha
jl
mov
jl
cmp
inc
ja
dec
scas
cmp
mov
sbb
sub
movsl
mov
decb
fmulp
lcall
or
or
jg
inc
jns
mov
shrl
xor
adc
and
push
push
int3
mov
lock
sub
inc
pop
pushf
jg
dec
mov
jo
sarb
sbb
push
add
cs
and
add
enter
ljmp
sbb
es
xor
adc
xor
sbb
test
pushf
rorb
sub
push
pop
xor
pop
outsl
mov
mov
mov
repz
popf
outsb
add
gs
sti
aad
negb
mov
dec
popa
ljmp
test
add
sub
inc
sub
icebp
jbe
sub
ss
es
xor
stos
in
fsub
and
push
mov
bound
mov
inc
dec
inc
jne
out
cld
inc
ror
mulb
out
and
clc
fmuls
mov
mov
cmpsb
dec
fs
les
mov
push
adc
lea
loope
scas
cli
adc
xor
cld
xor
xor
mov
aaa
dec
push
jb
notb
add
rclb
or
cmpsb
out
sbb
loope
jb
adc
or
lret
mov
hlt
movsl
mov
inc
push
dec
pop
test
fldl
xor
mov
sti
mov
outsb
and
ret
loop
inc
dec
imul
pop
fdivrl
ss
aam
mov
push
mov
pop
lea
adc
outsb
cmpsb
jbe
mov
xor
adcl
sbb
jno
gs
mulb
es
dec
inc
push
das
jle
inc
push
add
orl
jo
mov
out
aam
jmp
unpckhps
lock
jne
ljmp
dec
push
rcrl
inc
in
popa
aam
push
loopne
jmp
setle
sbb
iret
test
or
or
rolb
aaa
xor
insl
push
jnp
std
data16
mov
shl
push
push
inc
mov
les
pop
and
lahf
call
inc
xchg
push
pop
hlt
inc
mov
clc
push
xor
incl
inc
fiaddl
mov
fcomps
das
and
into
movsb
inc
cmpsl
inc
mov
push
sub
movsl
adc
xor
add
decl
fdivl
push
pushf
sub
push
aam
rcr
lret
hlt
orb
xor
clc
xor
mov
sbb
mov
pop
pop
or
push
data16
adcb
std
mov
jnp
sbb
pop
xor
add
pop
mov
push
adc
pushf
sub
or
test
add
je
add
jp
icebp
inc
xor
and
mov
cs
mov
mov
sub
push
and
rolb
xor
push
shlb
js
mov
sahf
mov
push
sub
popa
sub
adc
mov
dec
pop
xchg
and
mov
dec
jg
inc
lock
enter
hlt
call
cli
sbb
mov
or
mov
push
scas
pop
mov
test
add
ja
sbb
adcb
incb
bound
add
and
lcall
sub
data16
test
icebp
sbb
push
lea
push
cld
movsb
mov
lcall
jb
pop
xchg
sti
push
jl
jmp
cmpl
mov
test
jae
into
xchg
ds
jecxz
aad
notb
add
mov
sub
bound
lret
push
sbb
jle
and
cmp
andb
test
or
or
and
pop
adc
jmp
mov
rolb
xor
jmp
add
sbb
shll
dec
push
jge
adc
into
nop
add
mov
mov
and
ljmp
push
fisttpll
xor
xchg
aaa
call
or
shl
dec
decb
jbe
xlat
mov
test
push
repnz
dec
std
mov
mov
adc
and
pop
jne
insl
dec
sbb
xor
pop
xorb
sub
lods
inc
pusha
jo
sbb
ja
sarb
push
pop
mov
pushl
fwait
fs
dec
mov
test
add
jge
and
call
jecxz
push
movsb
leave
mov
loopne
mov
cld
fsubrs
inc
inc
push
mov
push
fcomps
add
push
and
push
pushf
or
push
push
icebp
cmp
fadds
sub
push
adc
mov
add
push
mov
clc
mov
sub
or
push
call
sbb
les
enter
push
xchg
adc
mov
fwait
sbb
aaa
pop
jne
dec
jnp
add
call
lea
hlt
ds
push
push
rolb
and
test
pop
hlt
add
xchg
mov
and
ret
add
clc
push
mov
loop
pop
decb
add
push
add
pop
rclb
push
mov
xchg
lret
jl
sub
jb
sub
push
rcll
in
cmp
shl
mov
pusha
dec
popa
push
mov
stos
or
xor
push
xor
mov
andb
push
fsubr
test
cwtl
jmp
sub
outsb
mov
testb
push
shlb
sbbl
push
xor
or
mov
je
pushf
and
es
nop
add
mov
inc
test
dec
jle
xor
adc
push
pop
pop
clc
sarl
test
fadd
lcall
loopne
sub
icebp
pushl
mov
movsb
jge
adc
into
mov
pop
into
add
je
out
ret
out
mov
pop
cmp
cwtl
sbb
ret
call
lods
add
xchg
arpl
sti
in
mov
daa
adc
lods
inc
sub
clc
mov
aaa
inc
push
ljmp
add
in
ret
sahf
cs
jb
aaa
test
push
push
jbe
bound
dec
inc
xlat
clc
xchg
fs
push
sub
xchg
jnp
loop
jns
add
adc
inc
int
cwtl
and
nop
push
adc
cld
mov
push
mov
bound
lock
pushw
sbb
aam
xorl
and
push
mov
insl
and
pop
push
cmp
mov
movsb
insb
adc
mov
cmp
push
cld
cmp
add
dec
jmp
ret
mov
cmp
call
lret
adc
je
pop
je
xlat
sub
or
mov
mov
outsb
stos
mov
lods
push
adc
imul
sub
in
and
jmp
repnz
mov
clc
or
sbb
loopne
mov
ljmp
icebp
xor
mov
add
ret
mov
dec
repnz
inc
xchg
sbb
push
test
fldcw
movsb
inc
ss
daa
orl
movsl
cmp
je
and
es
or
push
add
inc
frstor
push
jmp
add
mov
cmp
sub
adc
cld
adc
mov
setl
mov
push
rcll
pop
mov
jmp
inc
dec
cld
popa
pop
mov
sbbl
jge
or
daa
xchg
mov
cmp
push
aam
int3
js
jo
sbb
xlat
bound
cmpsl
mov
jmp
hlt
shrl
mov
or
inc
cmp
or
or
or
ret
cmp
incl
jo
les
pop
es
and
je
pop
call
repnz
ret
mov
gs
aad
mov
int3
cli
cmpb
je
or
mov
push
jmp
adc
fisubs
mov
je
cld
cmp
cmp
xor
mov
add
push
inc
ljmp
inc
rcr
int
ret
sahf
call
mov
out
stos
aam
inc
sti
lgs
mov
je
jle
cld
sarb
icebp
add
push
push
pop
mov
ret
pop
pop
push
mov
push
or
aam
add
or
mov
imul
and
add
imul
cld
jl
adc
adc
in
fldl
cmc
adc
mov
js
mov
add
sbb
push
cmp
or
add
xor
aaa
loopne
lock
adc
std
push
mov
stc
mov
push
adc
jb
mov
adc
add
test
push
insb
lods
sbb
sar
adc
fisubs
jecxz
add
adc
and
xchg
jle
mov
iret
lock
hlt
pop
adc
inc
dec
aam
enter
push
lods
cmpsb
es
cmp
dec
mov
jg
push
push
imul
bound
cmp
lcall
inc
add
js
jo
dec
je
ret
inc
lock
pop
jae
mov
add
sbb
nop
fiaddl
rcrb
aaa
cwtl
fs
test
fmuls
add
cmp
mov
cmp
mov
cmpsb
icebp
dec
sarl
mov
js
mov
imul
enter
adc
aas
add
mov
mov
test
lea
into
cmc
push
jmp
xor
aaa
pop
shrl
or
dec
pusha
sti
loope
lret
fistl
into
inc
xor
push
mov
rcll
mov
adc
nop
jbe
inc
jl
mov
movsb
mov
cmp
add
sbb
rolb
mov
shlb
sbb
gs
cld
pop
js
xor
dec
push
dec
sbb
pop
add
int3
push
call
cmpl
push
pop
ret
hlt
mov
xor
pusha
lock
les
or
jl
jle
inc
jne
mov
cli
leave
sbb
rol
add
sbb
mov
fwait
pop
pop
aam
and
test
std
push
pop
lea
imul
mov
addl
mov
jmp
mov
mov
rorl
adcb
das
add
decl
add
and
add
sbb
inc
push
xor
outsl
and
cmpsb
mov
out
sbb
mov
loopne
cmp
mov
inc
das
js
scas
mov
or
adc
push
push
das
stos
adc
in
test
fwait
mov
mov
daa
mov
gs
mov
hlt
xchg
pop
filds
cmp
je
mov
clc
es
mov
xor
cmp
sti
add
insb
pop
push
or
shlb
rolb
ret
jg
dec
push
inc
or
cli
insb
add
shrb
shlb
sub
cmp
jge
dec
jecxz
ds
sub
cmp
push
push
mov
and
aad
ljmp
es
stos
pop
adc
jp
into
and
sub
push
addb
xchg
cmp
inc
sti
jle,pn
sub
adc
ret
cmpl
aas
xchg
jmp
les
enter
push
das
testb
mov
xchg
ret
lock
insb
xor
in
loop
dec
out
xchg
test
addb
dec
aam
or
test
call
pop
add
push
add
add
scas
dec
outsl
push
jbe
add
xor
fdivrl
xor
test
mov
aas
jbe
enter
arpl
jmp
fistl
push
jle
mov
test
nop
push
cmp
dec
sub
xor
dec
lods
add
sub
repz
jb
lock
pop
clc
and
shrb
cmp
jl
sbb
in
fnstcw
inc
cmp
fsqrt
dec
jmp
jne
jae
mov
rcll
cmp
test
mov
icebp
sar
mov
push
pop
rcrb
lea
fs
fcom
cmc
adc
mov
xor
xor
inc
mov
insb
lahf
dec
push
dec
mov
inc
adc
or
sbb
gs
sbb
shlb
fldenv
mov
push
outsb
fiaddl
lock
fiaddl
lods
xor
xchg
bound
roll
fimuls
inc
or
cmp
outsb
or
out
xor
push
nop
mov
int3
inc
insb
add
mov
aas
popa
clc
push
mov
or
mov
lods
add
mov
jo
lock
pushf
xor
push
add
movsl
dec
fwait
mov
in
inc
lret
mov
gs
out
cli
pop
push
mov
or
fs
inc
cmpsb
mov
and
add
cmp
dec
fcmovnu
mov
mov
ds
inc
arpl
pop
and
je
mov
in
stos
mov
mov
mov
loop
xchg
outsb
jbe
out
js
add
jno
cmp
xchg
push
shrb
xor
mov
inc
cmp
mov
mov
mov
mov
loop
jle
mov
push
push
jb
add
and
stos
pop
sbb
loope
xor
add
sbb
adc
xchg
pop
lods
and
shrb
push
and
call
jne
shlb
pop
cs
jbe
jmp
loopne
xor
jp
and
nop
andl
push
les
inc
inc
mov
mov
jecxz
lock
push
xorl
jl
lret
sub
sbb
jmp
test
lea
jecxz
and
lea
inc
cmp
sub
lock
mov
adc
lret
cwtl
sbb
and
icebp
mov
fsubs
sbb
inc
repz
adc
in
rcr
jb
inc
mov
or
lret
mov
movsb
imul
jbe
jb
dec
js
repnz
push
shr
sbb
hlt
mov
add
pslld
push
outsl
test
inc
je
add
cltd
adc
fs
sub
inc
rolb
xchg
jo
or
pop
add
scas
xchg
pop
mov
cmc
imull
mov
xor
lods
lcall
inc
push
dec
xchg
test
jnp
xchg
lock
mov
jg
xor
mov
lar
stos
lea
jo
add
adc
clc
mov
clc
add
cld
ret
je
outsb
test
jo
push
popa
push
xor
adc
loop,pn
add
stos
arpl
test
mov
xor
popa
and
sbb
sbbl
divb
call
das
push
xor
or
mov
add
out
and
jbe
hlt
cli
add
xchg
call
adc
and
lahf
aas
in
in
add
dec
xchg
outsb
mov
xor
add
or
pop
mov
xchg
add
jb
in
aas
mov
fisttpll
bound
push
jbe
sub
xchg
lret
push
aam
push
xor
xchg
lret
sub
cwtl
mov
cld
xor
clc
mov
cld
sar
lock
xchg
lock
jmp
mov
lock
sbb
ds
pop
push
xchg
dec
xchg
add
jmp
insl
add
or
xchg
mov
jo
or
add
sbb
call
mov
mov
pop
clc
push
push
mov
sub
push
sbb
cmp
cmc
lea
inc
je
xor
jg
sub
pop
sub
lea
dec
out
inc
xorl
out
xor
mov
mov
mov
add
sub
inc
and
cmp
ret
xchg
dec
sub
ret
ljmp
jb
lock
sbb
mov
adc
mov
cli
cmp
cmp
sbb
hlt
arpl
cmp
add
cli
push
icebp
mov
es
in
js
xchg
pop
roll
loopne
push
push
nop
add
add
leave
or
sbb
ret
aaa
sbb
je
insl
jno
movsl
and
stc
mov
xor
je
pop
aam
jg
sub
fdiv
out
and
add
adc
shll
or
and
and
push
decl
sub
inc
add
mov
lcall
fistpl
call
or
fwait
mov
jo
mov
adc
ljmp
or
shll
pop
and
push
inc
add
xor
mov
pushl
jmp
push
inc
rcll
lret
inc
xchg
pop
clc
adc
push
push
or
in
mov
sbb
adc
sbb
xorb
aas
push
idiv
fsubrl
and
adc
and
insb
inc
sub
lds
sbb
xchg
std
add
push
xor
das
js
inc
and
dec
adc
add
or
loop
cwtl
push
mov
std
push
rcl
rcl
loop
lods
int3
sbb
sbb
scas
or
ds
and
xor
frstpm(287
loop
inc
fisttpl
add
fidivrl
cmp
xchg
adc
imulb
dec
sub
cwtl
mov
cmp
adc
pop
xor
roll
jge
xchg
dec
inc
aad
pop
push
sbb
inc
cwtl
dec
pusha
sbb
rcrb
adc
daa
out
xchg
je
cs
insb
push
into
popa
sbb
sbb
mov
adc
adc
and
es
lods
outsb
xor
jp
inc
ljmp
push
lock
and
ror
xor
mov
or
and
jae
mov
or
or
fdivrl
loope
xchg
pop
mov
mov
subl
or
in
mov
or
jns
and
pop
test
out
or
mov
aam
dec
mov
shlb
clc
enter
push
dec
or
and
cmpsb
adc
hlt
sub
and
dec
call
test
ss
stos
mov
aaa
mov
dec
xor
cmpb
sbb
incb
xor
and
sub
cmove
push
inc
pop
stc
lock
cmp
mov
inc
mov
or
add
jp
and
dec
pusha
push
ljmp
sahf
test
jno
cld
inc
test
xchg
hlt
ret
cli
push
inc
cmp
roll
fsubs
xor
add
push
xchg
xor
or
imull
sbb
cld
aam
cmp
lret
in
cli
dec
sbb
adc
aam
mov
mov
addr16
cli
nop
jmp
lock
sub
xor
mov
ret
cld
jg
mov
loope
cmp
fs
add
jg
es
clc
mov
sti
xor
add
lods
inc
loope
dec
rcrl
sub
test
sub
cmc
rol
push
out
mov
mov
mov
mov
lea
push
in
mov
out
shll
push
cld
jle
and
jl
xor
test
pusha
fiadds
lea
inc
lock
jae
adc
push
fadd
dec
lea
adc
dec
hlt
add
cld
or
shll
pop
add
xor
faddl
in
push
mov
xor
cs
pusha
jmp
rcr
mov
push
orb
pop
xchg
mov
pop
insb
lock
scas
mov
inc
je
and
jmp
sbb
test
mov
mov
xchg
pop
call
mov
call
loopne
sbb
test
push
jmp
mov
cmp
ret
pop
xchg
sbb
inc
fisubrs
fs
fisubs
mov
lock
pcmpgtd
dec
or
push
sub
mov
test
outsb
dec
lods
aaa
mov
jb
push
mov
fcmovb
xorb
sti
jbe
push
sbbl
in
push
aam
mov
add
push
push
dec
sbb
mov
cmpsb
adc
xor
mov
les
rsm
cmpsb
fdivrl
or
or
repz
es
lock
loopne
inc
clc
jbe
add
pushf
or
in
sbb
inc
fldt
test
lock
mov
xlat
enter
ds
aam
aam
je
mov
dec
loop
add
mov
mov
sahf
xchg
xchg
inc
lock
in
int3
dec
mov
add
mov
push
jns
xor
jmp
aam
xlat
popf
xor
aam
std
xor
jl
cmp
xchg
lea
xor
mov
and
cmp
adcb
nop
flds
into
push
movl
cmp
mov
adc
js
add
jbe
mov
cmp
jbe
and
sub
sar
scas
sarb
sahf
daa
int3
ds
add
push
xchg
jp
lock
dec
sub
jne
and
jne
hlt
cmp
mov
pop
nop
mov
add
push
es
test
lock
ret
xchg
loop
sbb
in
cld
push
sbb
pop
mov
jb
out
push
into
mov
and
or
add
push
add
stos
ljmp
dec
mov
sbb
adc
add
mov
lock
jo
popf
lock
pop
loopne
outsl
and
lea
hlt
sub
cmpb
add
aaa
pusha
add
push
jle
outsb
push
into
xchg
das
push
jl
pop
mov
ret
ret
cmp
mov
inc
test
xchg
mov
add
cmp
ja
in
fiadds
mov
imul
ret
mov
jo
insl
mov
ret
mulb
xor
int3
mov
inc
loopne
shll
xchg
sbb
pop
add
enter
rcrb
dec
adc
xor
or
push
lods
rorl
test
pop
or
lock
jae
loopne
xor
daa
leave
dec
cld
into
in
push
rcl
adc
sarb
pop
xchg
xchg
shr
or
jmp
in
scas
stos
shlb
pop
sbb
jne
mov
insl
test
bound
cmp
test
inc
lock
js
cmp
leave
nop
adc
shll
sub
jle
cmp
xor
addb
mov
leave
insl
or
shrb
inc
jo
shlb
dec
mov
fisubrl
jns
adc
push
inc
dec
cmpsl
mov
ret
jmp
mov
add
negb
rorb
nop
jbe
hlt
cmp
xor
into
xor
mov
test
pop
test
pop
lea
push
add
sbb
dec
and
lea
xorl
pop
and
mov
in
inc
aaa
and
out
mov
add
lahf
cmpsl
add
push
sti
lock
cmpsb
jne
add
push
push
jmp
jmp
dec
xor
push
sub
daa
rcrb
mov
dec
add
push
subb
aaa
pop
aaa
sbb
jmp
enter
hlt
adc
jmp
out
mov
add
xor
aad
mov
das
insb
dec
ds
mov
jne
cmp
fs
outsb
loopne
decl
sarl
push
and
push
add
incl
shrl
inc
call
shr
jg
in
jne
cwtl
push
decl
lock
insl
add
in
sbb
stos
xchg
jne
pop
add
adc
movsb
sub
mov
dec
push
adc
add
xchg
pushf
popa
xor
add
test
push
popf
inc
xchg
shlb
dec
outsl
fmuls
mov
adc
loop
scas
add
or
push
jo
cld
test
sar
fs
mov
dec
loopne
popa
rcrl
inc
pop
sub
or
sbb
pop
inc
push
loopne
sahf
test
dec
cmp
pop
cmp
gs
fwait
jbe
cs
and
xchg
mov
loop
hlt
not
inc
sbb
push
adc
decl
fwait
jp
lds
sub
rol
cmpsl
mov
lcall
sub
inc
sarl
inc
push
nop
add
push
mov
pop
imul
jbe
push
int3
cmp
in
xchg
js
mov
push
push
test
int3
outsl
mov
test
dec
sbb
cmp
or
fsubrl
jl
add
mov
add
xchg
push
fucompp
insb
and
mov
ss
ret
mov
ja
outsl
xchg
test
bound
and
inc
cs
add
in
mov
lcall
xor
dec
push
das
outsb
pusha
and
lret
pop
xlat
loopne
mov
inc
dec
ss
pop
push
and
roll
addr16
mov
and
add
cmp
mov
test
push
mov
add
adc
adc
sub
sub
pop
mov
mov
add
outsl
mov
arpl
pushf
sbb
dec
bound
mov
pushf
lock
cltd
push
mov
and
jmp
loope
out
and
xor
orb
jbe
out
fiaddl
mov
mov
rcl
aas
add
mov
adc
mov
movsb
cmp
mov
xor
mov
daa
sbb
shl
push
into
loope
sub
stos
add
push
dec
icebp
pop
loopne
inc
jl
insl
cmp
ret
js
pushf
jp
add
mov
dec
pop
xor
push
adc
ret
into
and
add
mov
fldl
jecxz
jbe
insl
dec
push
adc
andb
pop
pop
jge
mov
lods
clc
ja
loope
mov
into
jge
fisttpl
sbb
les
mov
shlb
ret
push
stos
mov
ror
dec
xor
pop
sbb
cltd
loopne
push
fcoml
cmpsl
pop
je
cmc
mov
aam
sbb
outsb
jl
inc
cld
sub
push
inc
rcll
mov
mov
les
cs
icebp
mov
out
test
adc
in
push
sub
fadds
sbb
je
jo
cmpsb
mov
adc
imul
jb
mov
call
mov
dec
je
xlat
enter
and
cmp
or
adc
and
adc
rcrl
shrl
xor
xor
xchg
add
or
inc
ret
mov
sub
lea
xor
lret
movb
cld
cli
sbbl
sbbb
mov
in
mov
mov
and
pop
sub
out
xorl
mov
add
dec
mov
rclb
cmp
in
fidivl
dec
js
lea
outsb
pushf
mov
aaa
mov
pop
dec
pop
pop
adc
and
mov
loope
in
adc
push
mov
or
inc
and
mov
push
loopne
mov
stos
push
ret
shrb
or
rcrl
inc
mov
loopne
adc
xor
cmp
mov
sbb
xchg
pop
mov
addl
adc
push
jne
test
jbe
test
sub
std
es
dec
scas
cs
push
xchg
cmp
add
call
test
in
adcb
adc
mov
jl
sub
dec
adc
or
insb
adc
push
cmp
pop
mov
pop
dec
int3
stos
mov
mov
xchg
fdivr
or
ret
loope
sbbb
cmp
insb
js
imul
push
and
test
xor
outsl
sahf
je
push
ficomps
inc
cmp
js
int3
mov
adc
jns
add
add
pop
cmc
or
push
push
scas
movsb
push
add
fcompl
scas
mov
int3
rorb
popl
cwtl
push
push
push
dec
sbb
mov
jmp
mov
add
inc
into
xchg
add
add
dec
int
lea
in
pusha
add
jbe
add
or
lahf
pop
mov
jp
and
call
xor
imulb
add
sub
shr
outsl
nop
mov
loopne
divb
push
inc
je
mov
ja
test
dec
inc
dec
loopne
icebp
adcb
lea
imul
and
loopne
popa
sbb
xchg
in
xor
orl
push
fsubr
or
and
sub
push
jb
out
dec
mov
in
stos
inc
std
and
pop
in
imull
xor
xchg
mov
cmp
subl
ret
roll
or
lods
stos
xor
cs
sbb
outsl
sub
aaa
aam
or
or
dec
dec
aam
loopne
push
sub
das
pop
add
cmp
and
push
nop
or
mov
cmpsb
test
push
fildl
ss
pop
out
pop
loope
and
fwait
insb
insb
loopne
shlb
jmp
add
outsl
aas
shrb
dec
add
rcl
sbbl
push
loop
cli
dec
add
mov
call
pop
out
dec
hlt
js
and
adc
outsb
xor
shl
loopne
std
xchg
inc
cmpb
aam
cmp
enter
test
cmpsl
or
aad
sbb
adc
sub
decl
lods
loope
ds
out
fwait
lcall
shrb
xchg
hlt
test
outsl
inc
js
push
jl
push
minps
pop
and
sbb
cmpsb
push
jmp
aad
dec
cmp
ljmp
cmp
mov
adc
aaa
inc
jo
clc
adcb
nop
out
insl
je
shlb
call
into
lcall
js
xor
fwait
mov
fs
ret
mov
je
dec
dec
mov
dec
dec
sbb
loope
rolb
or
fwait
mov
xor
xor
loope
pusha
into
imul
mov
fdiv
mov
sub
out
pop
mov
adc
adc
xchg
or
ret
push
testb
mov
lahf
or
sahf
lds
mov
mov
shrl
and
aaa
pop
dec
push
or
add
ret
mov
jne
jl
xchg
add
push
adc
fstpl
add
cs
push
repnz
out
popa
xchg
jns
adc
je
cs
cmpl
and
test
outsb
or
call
scas
rclb
mov
mov
add
movsl
push
cmpl
fcomps
in
push
jb
mov
std
push
testb
add
adc
mov
cli
push
flds
es
cli
sub
sahf
dec
inc
xor
jle
mov
int3
inc
inc
mov
idivb
mov
outsl
out
outsl
adc
push
into
imulb
xor
je
or
outsl
pop
adc
and
insb
sub
pushl
lods
into
arpl
sbb
and
clc
out
push
rcll
daa
push
xor
rcrb
and
or
push
addb
aam
xchg
mov
add
push
loop
xchg
sub
xchg
push
cli
xlat
cmp
addr16
mov
inc
push
cld
xchg
mov
cmpsb
movl
and
rol
push
imul
outsb
scas
nop
sbbl
inc
inc
sub
enter
xchg
iret
nop
sahf
sbb
daa
xor
cmpl
and
dec
sub
daa
cmc
orb
cmp
hlt
incb
pop
inc
mov
and
push
sub
or
test
mov
js
and
lock
push
lea
xchg
xor
xor
sub
or
mov
and
ficomps
inc
rclb
jl
lcall
fsubrs
inc
aas
out
ja
aad
subb
push
icebp
sub
add
pop
test
mov
dec
cwtl
popa
xchg
rolb
or
sub
xor
add
mov
cmovne
xor
or
push
mov
js
outsb
dec
movsl
pop
mov
sub
add
decl
inc
jb
and
shrb
mov
std
push
push
andl
push
rolb
movsl
pop
mov
pusha
add
pop
dec
mov
sbb
inc
push
push
ja
mov
dec
ds
sub
add
push
pop
sbb
cmp
xchg
mov
mov
xor
xchg
add
mov
clc
inc
ds
xor
adc
loop
xor
inc
or
daa
andb
nop
mov
sbbl
cmp
xor
arpl
fdivr
sarl
push
fcos
jmp
or
enter
ret
js
ret
sbb
loopne
xchg
xor
add
jne
xor
sbb
add
decl
ucomiss
in
mov
mov
mov
cltd
icebp
cmp
xchg
es
and
inc
or
dec
mov
cmpsl
inc
mov
sbb
pop
jne
xor
and
loopne
outsl
jb
ret
insb
pop
icebp
decl
int
cwtl
jp
jl
icebp
aas
daa
mov
addb
push
cld
hlt
rcl
adc
adc
inc
mov
xorl
jae
mov
lea
div
and
rcrb
mov
cmp
mov
sbb
add
incb
aad
jge
and
dec
cwtl
dec
mov
and
enter
sub
add
sub
test
or
pop
loop
push
push
pop
ret
ret
jne
mov
insb
mov
xor
or
fildll
outsb
push
paddd
push
sbb
sar
mov
loop
inc
push
lock
inc
adc
adc
inc
adc
xor
mov
jo
addl
adc
or
inc
es
xor
lea
push
mov
bound
movsb
insl
sub
xor
and
clc
int3
push
pop
add
les
or
mov
cwtl
add
fisttpll
fdivr
dec
mov
and
gs
insl
push
add
pop
das
fdivrp
and
adc
adc
ss
inc
pusha
mov
call
add
push
jo
xchg
movsb
push
push
adc
cmp
push
int3
mov
push
inc
and
test
notb
jmp
adc
outsl
xor
lea
mov
cs
inc
jb
cmp
std
insl
repnz
pop
and
cld
or
jne
xchg
cli
mov
lea
out
pop
aam
pop
sub
in
add
adc
icebp
out
dec
js
ret
cltd
lock
dec
or
xchg
add
mov
iret
inc
pop
xlat
les
adcl
push
mov
add
pop
dec
mov
insb
clc
dec
adc
mul
jne
faddl
clc
pop
sbbl
out
iret
adc
outsl
mov
sahf
push
fs
es
jmp
mov
push
push
and
mov
enter
jo
jge
dec
mov
dec
xchg
dec
icebp
xchg
loopne
test
loopne,pn
cmp
popa
std
cmp
jecxz
push
test
cli
push
push
mov
dec
std
ljmp
mov
lea
shl
fsubp
sbb
subb
je
shlb
jge
popa
xchg
shr
jmp
push
lods
and
inc
and
aas
jb
inc
inc
xlat
incl
imul
push
push
cmc
fcomip
and
add
or
imul
cmp
pop
dec
mov
mov
fdivrs
sbbb
stos
in
out
sarl
orl
push
popa
jg
xor
adc
cmp
push
xor
xor
pop
aam
cmpsb
mov
gs
in
dec
cmp
or
mov
cld
incl
lock
or
pop
xchg
mov
jmp
mov
stos
ljmp
test
mov
and
faddl
or
sub
xor
xchg
lea
jo
push
sbb
test
cmpsl
and
inc
je
add
jp
jmp
adc
hlt
sub
in
lds
dec
in
adc
dec
out
pushf
ffree
push
je
mov
pop
test
mov
xor
pop
popa
gs
loopne
add
decb
pop
mov
or
xorb
sub
push
les
add
xor
std
xchg
sbb
push
pop
jle
jnp
adcl
mov
jnp
testl
jp
mov
inc
repnz
and
iret
aam
pushf
out
ret
mov
cld
push
in
loope
or
loop
jmp
into
enter
mull
add
sbb
fiaddl
je
xor
outsl
push
pop
inc
cwtl
xchg
add
sbb
fsubl
enter
loop
inc
stos
push
or
pusha
pop
jmp
insl
jmp
push
ret
mov
imul
xor
ficompl
push
jb
xchg
push
test
mov
xchg
and
cld
js
and
js
lock
adc
fs
pop
je
pop
loop
popa
inc
icebp
inc
inc
and
xor
add
or
test
aad
inc
cmp
bnd
shll
ret
or
fbld
mov
cmp
jno
das
test
orb
ret
push
adc
mov
insb
push
pop
mov
ret
mov
mov
flds
pop
je
scas
clc
pop
add
jp
sbb
daa
pop
decl
jo
test
test
and
fadds
inc
mov
test
test
jmp
xor
adcl
ljmp
mov
adc
enter
xor
push
add
cmp
and
insb
nop
push
mov
xchg
mov
inc
leave
add
or
push
pop
decb
or
xor
xchg
stos
jge
enter
outsb
rcr
insb
mov
rorl
xor
xor
mov
std
fmuls
rclb
sub
push
xor
inc
pop
and
inc
dec
rolb
xchg
cwtl
decb
xchg
pop
or
pop
add
sbb
adc
js
lods
fnstenv
jnp
clc
idivb
jmp
out
mov
les
adc
and
jle
std
call
sarb
mov
test
call
add
in
lods
push
sub
push
mov
or
add
or
pop
push
pop
sbb
cmp
jo
les
push
insb
jle
in
add
add
or
adc
add
movsb
or
push
mov
sbb
xchg
js
or
jmp
insb
shlb
cmp
out
and
push
jp
pushw
inc
addr16
pop
scas
nop
in
mov
lea
jle
push
push
lock
lea
inc
insb
add
mov
sub
call
scas
adc
add
jne
call
mov
cld
inc
std
fistpl
daa
mov
jbe
xor
pusha
call
adc
cmpps
cltd
push
xorl
mov
add
mov
mov
pop
inc
testb
lcall
add
jo
lcall
rcl
std
inc
bound
xor
out
push
add
add
pop
pop
push
push
jl
clc
jb
aas
mov
mov
mov
adc
ficompl
mov
and
sbb
push
mov
adc
test
call
add
add
out
inc
inc
pop
adc
and
into
lods
shlb
ret
mov
and
shlb
fidivs
aas
mov
gs
jmp
push
rolb
mov
test
lea
sub
mov
rcrb
mov
mov
add
adc
sbb
push
loope
pop
mov
push
sbb
dec
orl
es
lea
fs
shr
stos
xor
jae
divb
xor
xor
jbe
pop
mov
adc
inc
ret
xchg
dec
and
push
cli
in
pop
loopne
jb
cmpsb
ret
sub
mov
adc
jg
fadd
mov
lea
or
or
sbb
outsb
loop
push
enter
mov
mov
mov
mov
test
cmp
insb
loopne
push
add
lock
fnstenv
mov
fmuls
push
mov
data16
jg
pop
mov
es
or
pop
nop
clc
or
mov
call
add
inc
dec
ds
test
cmp
mov
adc
mov
cmp
inc
lret
xor
pop
lock
call
fmuls
cmp
fidivrl
mov
mov
pop
scas
push
rorb
repz
orl
add
cli
insl
cmp
leave
mov
adc
lock
mov
leave
cmp
sbb
cli
dec
dec
add
lock
cli
imul
push
xchg
dec
jp
add
pop
add
xor
jge
ss
dec
push
popa
scas
adc
je
push
and
gs
mov
jmp
fwait
test
adc
push
hlt
js
cld
fistl
sar
fcoml
int3
jmp
das
test
data16
sub
add
paddd
cmp
pop
jg
xor
shrb
sbb
pushf
inc
add
jg
inc
jo
add
mov
push
int
cmp
or
xchg
or
add
loopne
push
mov
sbb
xchg
sbb
aaa
inc
insl
fs
psubusb
out
mov
fwait
push
dec
mov
xor
and
push
xor
std
add
sti
xor
cmp
and
pop
mov
sub
mov
out
and
in
mov
add
mov
ds
jecxz
icebp
movsb
xchg
movsl
cli
std
fdivrl
and
lcall
fwait
mov
sbb
scas
dec
inc
cld
mov
lahf
outsb
push
jmp
sbb
adc
or
or
add
inc
adc
cwtl
mov
mov
test
cmp
decl
add
push
in
rorb
pop
aaa
lods
arpl
adc
leave
mov
inc
sarl
nop
mov
fildl
outsb
shlb
adc
lret
xchg
xor
mov
mov
fcoml
and
nop
ds
jmp
push
pop
and
add
jp
mov
push
adc
jo
inc
add
pop
outsb
push
xchg
adc
or
mov
mov
or
in
in
cmp
lds
je
stos
add
mov
pop
in
pop
pop
gs
mov
add
std
add
ja
andl
add
aaa
pop
movsl
add
test
adc
pusha
inc
add
mov
pop
fs
xchg
inc
xor
lcall
ss
and
inc
call
data16
add
jae
cmp
inc
and
notl
cmp
push
xchg
push
mov
mov
dec
lods
sub
mov
adc
cmp
dec
mov
and
decb
xchg
fs
shr
jmp
and
mov
jne
out
dec
push
or
out
fiaddl
call
inc
mov
stos
or
inc
loop
mov
or
inc
dec
clc
add
cmp
fidivrs
js
and
inc
and
in
scas
xchg
outsl
ret
cmp
sbb
std
mov
les
sub
daa
mov
fistpl
xor
inc
or
adc
add
mov
add
dec
mov
aam
mov
inc
pop
push
mov
mov
test
js
push
and
sub
std
out
xchg
mov
aad
mov
stc
testb
inc
out
nop
sbb
mov
pop
inc
push
shlb
push
add
mov
and
dec
clc
jb
mov
in
dec
cmpb
bound
scas
add
ucomiss
inc
cwtl
pop
bound
push
stc
mov
rolb
rcll
mov
loop
add
pop
xchg
push
mov
and
push
inc
addl
sub
call
or
add
ljmp
xchg
je
dec
imul
mov
adc
cmp
jge
xchg
pop
and
sarb
call
push
sbb
mov
sahf
lcall
sbb
adc
lock
sbb
cmp
jp
repnz
lea
inc
js
jge
inc
insb
and
je
sub
or
call
out
sub
and
mov
test
push
mov
arpl
xchg
xchg
mov
ljmp
jg
jg
inc
pop
xorb
loop
fstl
jmp
les
enter
add
out
mov
or
add
sbb
rolb
test
push
ret
add
jecxz
or
outsl
daa
and
xchg
and
sbb
adc
and
leave
sub
sti
clc
movsb
leave
sar
and
jb
sub
mov
mov
insb
jns
dec
incl
push
sbb
sbb
mov
mov
test
dec
dec
sub
mov
leave
adc
scas
xor
sub
lock
push
mov
aad
lock
in
mov
sub
push
push
pop
repnz
push
pop
and
push
xor
mov
je
mov
mov
push
adc
stos
push
fmull
mov
ds
xchg
mov
mov
xchg
cmpb
imul
out
push
or
xchg
mov
xchg
mov
std
pavgb
pop
mov
mov
mov
in
lds
outsb
xor
cli
incl
icebp
jg
loope
fsubr
nop
xchg
add
outsl
cmpps
xchg
pop
je
repnz
mov
inc
mov
mov
mov
and
pop
fisubl
popa
jl
mov
aam
sub
gs
test
or
cwtl
adc
cld
divl
dec
shlb
or
pop
fcoms
fistps
stos
int
ret
push
ss
cld
cs
call
pop
add
cmp
mov
sahf
push
aas
mov
outsl
and
jmp
repnz
popf
shlb
mov
jb
inc
fimuls
lock
add
xchg
and
aas
xor
xchg
sbb
cmpsl
lods
push
add
data16
mov
pop
lock
inc
pusha
in
insb
mov
shrb
ret
cwtl
inc
test
addl
mov
or
pop
rolb
adc
inc
inc
lcall
mov
jne
sub
testb
gs
enter
shlb
push
sub
rclb
or
sub
je
repnz
xor
decl
xor
pop
leave
leave
inc
mov
ds
arpl
push
ret
mov
cld
mov
jp
and
add
jae
jno
sbb
xchg
push
pop
je
rclb
adc
jmp
xchg
sub
push
ret
test
add
xor
dec
xchg
push
xor
add
or
jl
orb
xchg
inc
cwtl
and
mov
push
nop
jp
in
adc
push
daa
mov
xchg
lret
dec
mov
mulb
roll
roll
mov
cmc
aas
std
mov
jbe
fidivl
mov
inc
ja
push
std
hlt
and
push
sub
jge
push
into
and
jmp
cli
dec
adc
dec
add
jo
xchg
rorl
das
add
es
push
jb
and
rorl
adc
jne
mov
mov
int3
nop
jne
push
mov
xor
push
cli
lcall
dec
adc
icebp
fmuls
pusha
mov
xchg
push
or
popa
mov
xor
cmp
or
inc
push
clc
inc
fsubrs
jo
lock
cmpsb
pusha
mov
notl
cli
sbb
adc
add
je
add
lock
dec
sbb
xchg
pop
pop
mov
clc
arpl
xor
aaa
popa
mov
jg
icebp
out
mov
stos
add
mov
das
enter
pop
in
sub
xor
loope
popa
sub
lods
pop
sub
loopne
push
sahf
dec
imul
push
fsubl
outsb
add
mov
imul
inc
punpckldq
out
mov
ljmp
mov
stos
inc
cmpsb
add
imul
lock
and
inc
mov
scas
mov
lret
push
mov
mov
push
jmp
out
call
lcall
sbb
jl
xor
sub
loopne
mov
das
clc
adc
add
and
adc
mov
adc
jns
xchg
pop
push
sub
data16
sub
subb
sub
leave
add
push
add
push
or
loopne
jp
int3
jb
jbe
rcrb
push
mov
outsl
jno
lcall
leave
add
cmp
xchg
and
scas
adc
pusha
pop
lock
or
pop
mov
jne
loopne
push
mov
cld
mov
mov
and
push
mov
dec
cmpsl
andl
mov
call
stos
mov
sbb
xor
out
or
gs
mov
std
movsb
aas
push
data16
add
cmp
test
pop
add
push
loop
xor
adc
gs
lods
popf
mov
in
inc
inc
and
adc
inc
push
mov
decb
enter
addb
les
testl
enter
inc
dec
mov
and
adc
cmp
xor
cmp
xor
mov
mov
jb
and
movl
xchg
sub
xlat
mov
push
or
push
test
dec
push
in
shrl
jbe
stos
mov
add
push
movsl
cmp
in
add
push
pusha
fisttpl
pusha
dec
inc
push
mov
cwtl
dec
fmuls
int3
pop
pop
xor
adc
add
mov
ret
adcl
call
arpl
rolb
fs
sarb
and
mov
mov
mov
rcrb
mov
jo
inc
pop
in
pop
ljmp
mov
adc
nop
jne
xor
add
lock
mov
lods
push
inc
or
lods
mov
jecxz
mov
fmuls
dec
cld
test
icebp
insl
xchg
dec
bound
adc
ret
mov
xchg
cmp
gs
movsl
test
add
fisttpl
push
dec
mov
mov
loop
dec
dec
outsb
sahf
int3
adcl
outsb
sbb
in
idivb
adc
imul
es
pushf
test
sub
js
and
fbstp
mov
dec
cmp
xor
test
pop
add
cli
dec
enter
pop
mov
inc
mov
faddp
xor
adc
adc
jl
insb
loop
movsb
add
std
or
and
pop
jo
mov
push
shrb
rcl
fdivrs
mov
pop
or
jo
inc
sub
aad
inc
inc
and
in
mov
jo
xchg
inc
add
ss
lock
cld
lods
nop
decb
shlb
in
fcom
mov
loope
or
and
mov
adc
and
xor
inc
fidivs
es
mov
lods
rclb
jg
sarb
mov
ret
lods
fiadds
out
dec
and
mov
call
sbb
lea
shll
or
add
inc
adc
mov
mov
push
loopne
xchg
push
lods
jb
mov
mov
lea
adcl
mov
shrb
jo
test
rorb
jne
sub
adc
jb
ljmp
adc
mov
in
les
jbe
pusha
js
shll
add
and
outsb
adc
xchg
pushl
rclb
lods
jae
movsb
and
outsl
sbb
icebp
imul
sub
sub
mov
pop
sbb
add
pop
and
fs
xor
in
lcall
inc
push
sub
push
insl
jge
ds
adc
std
jo
outsb
filds
cmp
in
test
test
mov
in
ret
fisttps
int3
nop
pop
shll
shlb
and
add
sbb
push
orb
pop
test
mov
call
lea
andl
or
out
xor
jp
pop
sarb
imul
mov
dec
jge
push
jns
pop
ror
rcrb
pop
test
inc
stos
stos
or
out
and
mov
lret
out
pop
pop
pop
lock
mov
jo
rclb
add
addb
or
push
dec
or
test
lahf
popf
jle
xor
add
jl
mov
mov
gs
lcall
in
and
lock
std
add
mov
push
out
adc
and
mov
and
mov
popa
es
xchg
cltd
call
dec
ret
push
jne
add
xor
sbb
fnstsw
je
outsb
loop
adc
call
cmp
fiadds
das
or
add
fistpll
out
pop
dec
push
dec
add
roll
insb
inc
sbb
adc
and
leave
aam
mov
xor
cmp
pop
xor
or
les
push
lret
push
cli
out
add
mov
fadds
incb
mov
push
xor
jmp
jg
loopne
mov
int
imulb
cmp
int3
sub
jle
fists
call
int
cltd
jp
push
ja
fiaddl
icebp
cld
xor
jmpw
imul
out
sub
pop
loop
jle
adc
jno
addb
fwait
xchg
sbbb
inc
add
sarb
setno
inc
fmull
data16
push
lcall
out
nop
push
add
movsl
fbld
xorb
mov
cmp
xor
sbb
enter
push
dec
loopne
dec
inc
call
add
mov
push
inc
push
and
cld
stos
and
adc
jo
rolb
es
scas
incl
mov
xchg
clc
sub
and
push
out
shlb
and
nop
mov
inc
rcrb
pop
sbb
mov
stos
mov
mov
add
hlt
rolb
rsqrtps
je
adc
out
cli
add
fsubrs
fmull
add
loop
xor
sbb
xor
insb
or
test
mov
push
push
mov
mov
xchg
hlt
fwait
outsb
sbb
mov
stc
jo
arpl
loop
dec
mov
enter
fwait
push
jo
add
ret
xor
rcrl
adc
mov
sub
jle,pt
enter
and
mov
add
adc
pop
aad
in
pop
loopne
ljmp
mov
xchg
sbb
cmp
jb
jo
dec
dec
aam
inc
xor
pusha
inc
jg
adc
xor
js
xchg
rclb
mov
adc
stos
inc
mov
inc
loope
cmp
shll
or
jmp
sarl
pop
aaa
mov
jg
inc
shlb
add
or
je
jle
inc
outsb
cld
or
sub
jge
push
hlt
mov
in
aas
or
jp
cli
cs
rolb
sbb
dec
cmp
pop
push
push
loop
xchg
xchg
pop
insb
mov
clc
xchg
pop
push
and
mov
lods
and
lcall
mov
pop
insl
dec
sbb
rcrl
adc
cmp
outsb
outsb
cld
add
shlb
add
pop
addr16
push
test
test
rcl
sti
hlt
inc
pop
and
jmp
dec
das
jmp
rolb
lock
sub
xchg
push
inc
inc
sarl
ds
outsb
enter
push
aaa
jno
pop
push
pusha
lods
stos
flds
add
es
es
jne
adc
lock
and
push
xchg
ret
adc
mov
xor
lds
adc
pusha
sahf
sbb
or
add
inc
sub
stos
in
cmp
and
cs
xor
pop
jge
cli
pop
push
pop
jbe
xchg
aam
mov
cmp
mov
lock
je
sub
xlat
dec
loop
fsubp
stc
loop
sbb
inc
adc
sub
push
cmp
inc
js
or
or
adc
loopne
adc
dec
inc
jae
movsb
sub
and
je,pn
add
insb
les
dec
mov
push
mov
test
jns
sbbl
fstps
mov
mov
aam
push
push
lds
outsb
clc
sbb
mov
inc
test
mov
clc
mov
out
outsb
add
xchg
mov
cmp
nop
mov
fdivrp
scas
or
and
inc
mov
adc
add
xor
add
out
pop
add
push
adc
shrb
or
xor
mov
imulb
pop
and
mov
jbe
jmp
rorb
add
cld
jne
xor
les
xchg
push
sub
cld
dec
add
call
jge
add
sub
pop
sub
add
fdivs
fisubl
testb
xor
test
adc
and
inc
and
iret
and
sub
jle
imull
rcll
push
mov
push
sbb
shrw
sbb
mov
scas
inc
dec
je
xor
cmp
rsm
and
push
adc
subb
mov
es
mov
enter
mov
ret
cmp
cmp
adc
pop
inc
sbb
add
subb
mov
lret
mov
and
sbb
jo
hlt
incl
push
dec
and
pushf
adc
les
int
lock
test
jne
bound
push
psubusb
outsl
sets
jns
xchg
push
pop
outsl
push
pop
xor
pminub
jbe
cmp
push
mov
test
and
sbb
cmp
push
fisubs
push
lds
shrb
xchg
mov
jg
mov
adc
inc
fcmovu
sbb
sbb
shr
adc
mov
pop
push
jmp
std
and
push
andl
jne
xor
test
gs
or
mov
in
out
cltd
fcmovu
sbb
inc
loop
fwait
sub
andl
pop
aaa
lods
xchg
sub
ss
mov
jl
adc
call
add
jl
xchg
ret
sbb
les
je
and
pop
push
push
pop
inc
xlat
xor
mov
xchg
adc
mov
icebp
pushf
xor
fs
arpl
adc
adc
subb
mov
dec
sbb
add
jmp
imul
nop
fdivrp
mov
inc
jne
xor
inc
mov
mov
popf
jbe
xor
jne
ret
mov
jb
gs
dec
push
cmc
fidivrl
not
jp
lock
jae
jb
adc
cmp
mov
incl
inc
jmp
lea
insb
lock
jo
clc
int3
repnz
je
stos
and
cld
inc
sbb
lcall
mov
mov
xor
sub
fs
xor
push
lock
cmp
cld
scas
push
icebp
outsl
aas
test
push
or
in
loop
pop
adc
in
out
fldcw
push
push
push
inc
push
fsubl
add
imul
test
xor
add
jnp
sbb
fnstcw
push
sub
sub
dec
and
jo
add
mov
cs
jp
popa
mov
mov
add
dec
into
xchg
sub
lahf
push
xchg
xor
cli
stos
add
mov
test
mov
adc
orb
test
fwait
sub
movsb
push
add
or
xchg
xchg
or
ror
mov
and
ljmp
in
imull
push
cmp
enter
xor
adc
pop
shrb
lret
mov
lock
insb
lea
in
jmp
out
in
mov
sub
push
sub
xor
cmp
mov
mov
push
call
add
fnsave
test
mov
fwait
or
cmp
jg
jo
cmp
imulb
sbb
dec
xchg
push
orl
test
test
in
aaa
mov
push
icebp
aam
push
test
dec
add
outsb
addr16
inc
movsl
hlt
dec
test
les
dec
popa
push
jbe
sbb
mov
jae
addr16
rcrb
xlat
test
xchg
mov
push
xchg
sub
dec
gs
ret
shlb
push
mov
inc
cmovnp
ljmp
call
and
and
mov
pop
inc
dec
xorb
mov
leave
or
ror
sub
comiss
sub
lods
push
and
or
js
movsl
push
xor
inc
mov
movsb
jne
fdiv
es
pushf
mov
xlat
call
adc
and
imul
mov
add
cld
push
les
repnz
pop
xchg
pop
loopne
sahf
cmp
call
lock
adc
xorl
in
cmp
dec
or
sub
sub
push
subb
push
lahf
adc
scas
fisttps
inc
add
leave
pop
jae
cmp
cli
sti
lahf
leave
mov
mov
in
xor
arpl
or
loope
in
enter
or
clc
das
cmpsb
je
pmaxub
cmp
xor
pop
outsb
addb
je
jne
shl
xchg
push
adc
add
and
es
repnz
and
rclb
loope
movb
je
adc
mov
xchg
nop
sbb
loop
mov
call
mov
enter
mov
sub
mov
int3
jne
mov
subl
cli
mov
mov
mov
movsl
mov
mov
mov
jb
clc
fcmovbe
stos
adc
adc
xor
shl
dec
lds
rorl
lea
or
loopne
je
mov
add
in
add
mov
stos
jge
adc
xor
or
lock
push
pusha
into
dec
subl
jp
test
pop
inc
or
cmc
sarb
cwtl
pop
mov
test
int
push
insb
fdivrs
cld
cmp
and
testb
pop
lcall
adc
inc
add
in
mov
and
mov
push
shl
pop
inc
mov
test
mov
or
cmp
pushf
jmp
push
xor
add
inc
sbb
js
sub
mov
dec
xchg
ss
inc
mov
adcl
dec
dec
mov
fistpl
ficomps
mov
andl
adc
add
adc
cld
fcmovnu
pusha
or
pop
or
xor
or
jo
push
inc
ljmp
mov
mov
outsb
je
push
mov
push
scas
and
aad
xor
mov
rorb
imul
mov
cs
jecxz
cmp
xor
orb
test
or
test
cmpsb
outsb
or
push
jl
cmp
popa
and
ljmp
dec
or
testb
or
pop
or
gs
adc
mov
push
insb
xchg
inc
into
out
loopne
aaa
or
cld
push
mul
inc
incl
pop
mov
mov
add
pop
xchg
add
xorb
sub
ret
mov
cld
sbb
jmp
imul
dec
inc
lret
ds
add
adc
nop
adc
fbld
add
loopne
push
clc
push
repnz
mov
gs
arpl
or
and
cmp
mov
aas
sbb
and
xor
add
test
mov
dec
mov
dec
inc
inc
add
mov
mov
and
in
push
hlt
cs
mov
lcall
or
scas
rol
or
rcll
inc
inc
pop
adc
add
inc
loop
push
lea
pop
hlt
push
push
inc
xor
sbb
les
inc
push
ljmp
mov
inc
sub
mov
mov
dec
or
push
xchg
incb
mov
mov
jb
cmp
xchg
push
dec
outsb
stos
loopne
div
push
mov
subl
rcr
lock
cmp
cmc
lahf
mov
icebp
shll
mov
mov
pop
mov
xchg
clc
mov
cltd
mov
push
mov
lcall
fdivr
outsl
pop
sbb
mov
loope
in
in
pushf
or
sbb
clc
sbb
jp
ljmp
mov
jno
jmp
in
into
sub
test
and
shlb
add
xchg
or
jge
mov
adc
push
pop
jle
insb
mov
les
cmp
sub
push
jecxz
adc
push
dec
dec
test
dec
cmp
daa
dec
inc
mov
mov
push
xchg
sub
das
adc
add
call
cld
test
sub
jl
dec
adcb
out
or
mov
mov
das
mov
lret
fisubrl
xchg
pop
outsl
adc
inc
add
sub
decb
rorl
mov
mov
mov
and
rcl
test
int3
jae
insl
cmp
fisubl
pop
push
int3
pop
add
mov
bound
mov
dec
mov
and
lcall
inc
sbb
or
test
aaa
std
std
orb
jg
lods
jl
and
lock
mov
insl
dec
mov
jbe
je
push
shlb
std
and
cmp
cwtl
push
and
jb
add
out
jl
and
or
pop
rorl
push
in
jns
stos
sub
inc
in
sbb
aaa
or
inc
imul
push
push
and
aam
mov
inc
in
cmp
jno
add
movsb
jbe
cwtl
stos
mov
test
add
dec
push
inc
add
mov
pushf
adc
dec
add
fs
or
fsubl
data16
jge
and
aam
mov
xor
jmp
hlt
pop
xlat
push
adc
test
and
push
mov
xchg
test
jo
pop
cwtl
cli
test
fs
std
fimull
xchg
lock
sbb
or
and
das
push
mov
fs
or
out
jne
inc
stos
push
push
cld
adc
cmp
call
xchg
mov
cwtl
insb
jo
mov
xchg
push
add
aaa
int3
adcl
movsb
push
out
mov
sarb
idivb
clc
adc
inc
mov
sbb
inc
orl
cmc
push
push
xor
and
ljmp
mov
int3
add
ds
rolb
mov
icebp
and
int3
cmp
jns
filds
dec
mov
xor
in
push
mov
or
stos
or
pop
push
push
outsb
sbb
orl
std
in
adc
bnd
pusha
inc
aam
jmp
call
push
ret
jmp
push
xchg
rol
mov
xor
jge
mov
and
cmp
mov
call
cltd
std
sbb
and
notb
and
sub
rorb
pushf
add
fwait
dec
jge
sub
xchg
jl
jecxz
sti
movsb
push
aaa
sahf
cld
dec
push
rol
shll
mov
imul
xor
movsl
inc
clc
es
lock
mov
fcomps
or
xor
and
sti
add
ljmp
lods
outsl
out
das
xchg
push
push
lcall
sbb
mov
mov
incl
sub
or
stos
fiaddl
xor
pop
or
jle
loopne
in
daa
and
ja
stos
imull
mov
pop
clc
fists
sub
aaa
cld
test
data16
stc
mov
mov
cmp
or
icebp
adc
sub
stos
shl
adc
lock
mov
sbb
out
punpckhbw
dec
jmp
adc
ds
js
mov
pop
ret
sub
mov
adc
fmuls
out
cmp
sub
cmp
mov
jbe
add
je
add
aad
jbe
ljmp
push
mov
je
and
repz
rcr
mov
out
sub
xor
lret
int3
cmpb
or
inc
jle
sbb
sbb
jge
adc
add
push
lea
incl
fs
pusha
mov
loopne
movsl
mov
mov
repz
ret
sub
add
inc
sbbb
ds
aas
inc
jl
push
xor
and
movsb
test
xor
adc
push
jmp
fsubp
and
inc
mov
daa
mov
or
dec
leave
xchg
notb
push
jo
dec
jg
loopne
cli
push
daa
dec
jne
inc
xor
js
arpl
je
xor
call
loope
fs
ds
jmp
adc
or
cmp
call
or
cld
adc
data16
in
xor
and
es
popa
jge
fdivrs
or
cltd
mov
inc
push
bound
movsl
cmp
cli
mov
mov
and
mov
sub
pop
pop
push
inc
call
mov
rcl
nop
iret
mov
movsb
or
stc
push
jmp
shl
or
add
push
dec
je
out
adc
sub
dec
ds
hlt
push
push
push
mov
or
rorl
adc
add
pop
xchg
pop
int3
test
mov
jnp
iret
push
inc
out
or
add
push
out
sub
mov
mov
dec
pop
adc
dec
decl
test
test
sbb
mov
clc
call
addb
fsub
call
inc
adc
scas
lods
fdivl
hlt
icebp
xor
enter
dec
lods
mov
and
sub
aam
xchg
shr
adc
daa
jno
push
push
fisubrl
push
ret
mov
mov
ret
test
and
jg
out
hlt
mov
push
push
sbbl
and
aaa
in
push
stc
jae
loopne
das
xchg
push
sub
cmp
mov
sbb
mov
adc
push
adc
lea
ja
int3
test
adcb
stos
xor
push
and
mov
push
pop
cmp
inc
test
sarl
repz
or
mov
pop
in
incl
cmp
inc
pop
xor
in
mov
mov
push
sbb
push
shlb
push
pusha
or
mov
insl
gs
xor
fcomps
aam
pusha
cli
pusha
pusha
sbb
mov
loop
ds
xorb
fidivs
adc
xor
ljmp
mov
ss
cmp
lock
call
aam
je
jle
js
adc
pop
loopne
jae
add
add
cwtl
daa
ss
out
inc
clc
imul
xchg
pop
push
loopne
pop
std
adc
xor
xchg
adc
test
adc
inc
sbb
or
daa
callw
rcrb
mov
aam
sub
pushf
call
arpl
push
sbb
jne
repnz
roll
inc
imulb
mov
push
aam
sub
popa
outsl
add
xor
or
push
add
mov
sub
cmp
and
xchg
stos
ret
test
insl
aad
push
mov
jmp
stc
sub
std
pop
mov
test
sbbb
sub
mov
pop
mov
add
or
lcall
sbb
ret
mov
jne,pt
fadd
decb
push
mov
mov
orb
xor
cmpsb
xlat
dec
lods
test
pushf
bound
jae
test
data16
stos
das
sahf
sbb
push
mov
lds
add
test
mov
rorb
adc
pusha
jo
add
adc
fidivrl
pop
push
push
lods
stos
nop
ds
repz
dec
mov
cmpsb
mov
push
jmp
jle
mov
sub
ljmp
rol
out
add
jg
jge
ss
cmp
clc
or
mov
inc
cwtl
fimull
movsb
jp
outsb
test
stos
in
jne
push
popf
dec
mov
xchg
dec
mov
das
add
inc
inc
sqrtps
dec
add
push
repnz
dec
push
add
movsl
or
adc
dec
inc
test
sub
in
xchg
cmp
pcmpeqw
cli
add
cmp
call
jp
dec
ljmp
sbb
pop
sub
xor
pop
xor
cmp
jb
or
lods
xor
bound
icebp
or
cmp
lret
std
mov
sbb
dec
outsb
jo
or
cmp
movsl
mov
jo
push
add
ljmp
inc
pop
lret
and
incb
aam
push
xor
adc
push
sbb
cmp
pop
scas
dec
and
jo
adc
xor
clc
mov
ds
ljmp
push
movsb
and
jmp
pop
mov
loop
push
sub
call
test
or
lock
ss
mov
jp
add
orb
xor
jb
fsubp
add
jl
xchg
inc
mov
sbb
mov
loopne
xchg
dec
push
or
test
mov
sub
cld
sub
add
dec
inc
ljmp
adc
pop
es
loopne
xchg
jb
xchg
add
inc
mov
daa
repnz
insl
gs
sub
or
sub
dec
data16
push
pop
test
dec
repnz
add
mov
push
jp
mov
mov
adc
mov
xor
add
dec
aaa
aad
add
and
nop
pop
and
cmp
orl
mov
outsb
mov
mov
jb
or
rcll
add
dec
adc
mov
xorl
shl
rcrb
scas
push
mov
push
adc
inc
add
mov
inc
rcr
dec
mov
jle
sbb
xchg
js
sub
add
dec
dec
std
mov
aaa
push
inc
std
push
mov
sbb
jle
or
es
pop
pop
test
loop
mov
add
fs
and
sbb
mov
popf
push
and
lea
adc
ret
lea
mov
add
fstp
sbb
push
pop
insl
jo
subl
adc
mov
ud0
fs
lock
adc
aad
add
jo
rolb
std
sbb
push
mov
outsb
add
push
and
cmp
fbld
jmp
loopne
les
int
stc
shrb
popl
xchg
dec
mov
and
rcr
lea
mov
mov
adc
push
push
sti
stos
dec
sahf
loope
nop
idivl
xchg
cwtl
les
xor
inc
push
in
add
and
lea
call
sub
rorb
shr
cli
sbb
xor
push
pop
mov
push
adc
and
adc
int
fsubs
movsb
cmc
xor
push
mov
push
sub
cmp
les
or
xchg
shlb
push
xchg
xor
pop
clc
stos
cli
sahf
sbbb
lret
stc
push
add
in
lahf
push
popa
and
lea
adc
jmp
loop
ret
rcll
pop
lods
adc
inc
data16
movsl
ret
xor
mov
jg
daa
cmp
and
sbb
pop
pop
mov
out
dec
jecxz
mov
lods
bound
push
xor
xor
test
jmp
mov
fildl
pusha
js
push
mov
js
mov
push
stc
int3
jmp
inc
cmp
jne
mov
nop
mov
inc
jle
andb
mov
into
in
mov
or
outsl
rorl
cmp
movsl
add
fmull
movsb
push
push
push
out
sub
shlb
out
inc
sub
sbb
rorl
mov
add
pop
xor
pop
xor
mov
roll
adc
push
mov
roll
sbb
enter
mov
dec
out
das
jb
sub
push
pop
mov
nop
mov
sub
push
push
icebp
mov
in
in
push
addb
mov
scas
lock
adc
pop
int3
mov
hlt
outsb
stos
test
push
inc
mov
movsb
push
out
push
inc
movsl
sub
inc
and
pop
xchg
addl
mov
jne
shlb
mov
js
ret
dec
test
mov
mov
inc
cmove
ret
in
sbb
cmp
xchg
cmp
les
lcall
jecxz
fbstp
call
sub
shll
sbb
xor
jne
cmp
mov
ret
adc
mov
cli
pusha
test
inc
lea
pop
mov
hlt
hlt
mov
adc
jb
cmpsb
cmp
jmp
mov
sub
in
fs
out
negl
push
cld
insb
sarb
mov
mov
mov
outsb
add
jl
mov
adc
mov
fs
or
mov
js
lods
orb
cmpsb
je
push
aam
mov
inc
or
inc
mov
cmp
adc
inc
cli
mov
or
cld
imul
or
cmp
lock
xchg
loopne
mov
add
push
push
outsb
hlt
push
dec
ljmp
pop
or
loope
mov
mov
jno
or
je
les
dec
inc
jmp
or
pop
cmc
cmp
mov
mov
adcl
hlt
mov
xor
aaa
lret
cs
jnp
mov
clc
call
aam
je
repz
push
push
add
push
cmpsb
adc
xor
jp
mov
pushf
dec
push
sub
sub
sbb
jno
sbb
inc
enter
add
mov
or
clc
dec
enter
xchg
xlat
sbb
je
data16
loopne
lret
and
dec
fcmovnbe
test
cmpsl
mov
and
jecxz
dec
arpl
mov
jp
mov
cld
pop
inc
pushl
sbb
lret
bound
leave
ret
add
shlb
jp
cld
in
cli
and
frstor
mov
pop
lods
mov
rol
push
jmp
mov
stos
inc
fs
test
and
clc
leave
cmp
add
jo
je
or
daa
cmpxchg
add
xchg
enter
adc
xchg
push
frstor
addl
das
inc
push
jmp
xchg
call
sbb
lock
push
outsl
sbb
mov
add
into
adc
mov
xor
popf
shlb
int
and
scas
popf
je
outsb
mov
lods
mov
subb
popa
dec
xchg
jns
pop
add
test
inc
mov
loope
pop
mov
cmp
shlb
je
mov
in
lock
call
push
ret
imul
mov
xor
sahf
xor
out
loopne
sub
and
cwtl
gs
inc
imul
les
shrb
add
test
sub
mov
lret
fcmovne
sbb
and
enter
pop
cmpl
sbb
add
dec
dec
ljmp
inc
dec
pushf
mov
add
push
out
std
bound
push
inc
adcb
mov
push
jp
or
movsb
cld
cld
add
jmp
test
popa
cmp
xchg
test
xor
and
or
int3
sbb
sbb
inc
add
jmp
scas
jb
and
jb
mov
cmp
mov
xchg
adc
movb
pop
mov
fs
xor
cmp
inc
test
pop
mov
mov
mov
push
dec
inc
gs
lods
pop
add
sbb
inc
sarb
mov
cmc
dec
add
test
xor
test
pop
clc
push
clc
mov
loope
cmp
sub
xor
mov
cmp
add
sbb
cmp
inc
push
jg
stos
or
repz
cmpsb
and
clc
xor
rorl
rol
and
xchg
dec
pop
ss
lahf
pusha
stos
inc
stos
and
aaa
loop
adc
dec
pushf
aad
inc
mov
push
shll
and
xchg
adc
sbb
xorb
hlt
adc
pop
mov
bound
adc
add
cwtl
ljmp
add
mov
mov
mov
mov
lret
pop
sbb
lods
add
push
push
paddusb
adc
fs
test
push
arpl
xchg
and
pop
jge
sub
ret
or
jo
das
xchg
mov
inc
test
or
or
or
lock
cli
mov
jns
fstps
leave
insb
call
hlt
lahf
and
rolb
adc
andnps
ljmp
sub
movsl
shlb
xlat
call
adc
movsb
add
test
data16
test
loopne
shrb
int3
int3
imul
imul
stc
dec
jb
std
fwait
ljmp
in
xchg
push
fcomps
push
aam
in
pop
bound
in
inc
mov
pop
icebp
pop
add
add
mov
xor
mov
add
dec
mov
scas
jl
fsubrl
subb
ljmp
loop
and
lcall
push
inc
psubd
mov
dec
mov
mov
cwtl
inc
cmp
fsubs
es
add
xchg
pusha
dec
mov
rorl
add
fnsave
imul
shlb
pop
xor
mov
rorl
sub
test
bound
movsb
mov
pusha
push
icebp
jg
add
hlt
icebp
in
add
out
rclb
add
and
push
stos
and
int3
sub
cli
inc
adc
mov
jle
jge
adc
mov
push
test
into
push
mov
dec
cmp
rolb
subl
dec
inc
mov
shr
or
dec
adc
mov
adc
test
hlt
cwtl
jp
shlb
inc
fisttpl
inc
orb
mov
mov
outsl
mov
xor
pop
push
xchg
inc
inc
sbb
adc
mov
addb
out
jl
add
push
adc
add
push
fwait
dec
push
pop
push
movsb
data16
mov
fbld
push
lea
or
pop
push
add
pop
shll
add
sbb
jecxz
out
add
sbb
mov
ja
arpl
lea
gs
pop
inc
mov
xchg
je
les
inc
mov
add
hlt
xchg
fistl
adcb
fildl
or
adc
jbe
nop
mov
cld
sbb
shll
mov
push
jecxz
fwait
repnz
add
adc
rclb
jae
push
pop
mov
inc
fisubrs
fimull
not
loopne
inc
rol
ss
xchg
lea
xorb
icebp
or
popa
pop
stos
jmp
lea
pop
clc
inc
push
xchg
adc
cmp
push
pushf
mov
loop
loope
and
pop
cmp
inc
mov
fdivrs
sub
jne
inc
push
sbb
inc
pop
sarb
shrb
xchg
xchg
sub
nop
jmp
sub
fs
xchg
add
and
stos
bound
cs
loope
test
inc
imul
mov
or
scas
mov
shlb
xor
loop
daa
or
lcall
cmp
mov
inc
push
push
shlb
pop
ljmp
xchg
xchg
rolb
jge
and
mov
dec
jg
add
or
mov
leave
clc
test
mov
fs
test
inc
rcrb
test
jne
push
adc
pop
mov
push
inc
enter
hlt
js
clc
push
and
and
push
add
jl
mov
pop
mov
sbb
jecxz
test
jb
test
xchg
mov
or
or
sub
inc
cld
or
imul
xor
int
mov
adc
sahf
push
gs
mov
ss
jbe
push
inc
add
call
hlt
ja
aas
and
dec
and
aas
add
or
insb
mov
or
out
inc
je
in
lret
cmp
jb
xor
imul
sub
int3
jmp
jp
xchg
rcr
push
jb
inc
mov
inc
xor
adc
mov
add
xor
shlb
xchg
cmpsb
loopne
enter
cld
or
xor
rclb
das
cmpsb
int3
and
shrb
inc
mov
or
add
cs
jnp
nop
ss
lretw
aad
fs
sbb
lock
ja
add
adc
xor
sar
jge
push
hlt
pop
scas
fcmovbe
adcb
sub
mov
mov
and
jp
stos
mov
push
push
adc
xor
mov
mov
xchg
add
pop
pop
jg
test
test
jb
mov
data16
sbb
mov
mov
adc
pop
and
lcall
les
push
bound
ds
std
add
mov
sbb
cmp
push
xor
movsl
je
add
lods
sar
xor
or
movl
xchg
repz
subb
daa
mov
inc
iret
mov
push
aad
gs
mov
jle
in
stos
ds
or
js
in
je
push
pop
jp
mov
mov
cmc
inc
dec
sub
pop
les
push
mov
xor
scas
xor
les
jb
sbb
ret
dec
adc
sbbb
inc
sti
push
mov
lahf
test
mov
sub
outsb
xchg
pavgb
les
dec
pop
shrb
mov
push
mulb
sub
xchg
mov
sub
out
jne
int3
jae
xlat
cltd
adc
push
pop
push
adc
stos
xor
or
mulb
fs
or
jecxz
jbe
or
add
or
lods
enter
ret
add
sbb
xchg
mov
call
jne
adc
pop
loop
sarb
and
movsb
sti
mov
and
adc
and
inc
bound
cwtl
or
lea
les
cmp
mov
xor
push
add
push
cmpl
out
lock
mov
mov
jb
fdivr
push
gs
or
sbb
dec
ret
jmp
data16
mov
test
sahf
dec
imul
push
mov
cld
pop
push
inc
call
push
xchg
push
jne
leave
push
fsub
or
push
repnz
std
dec
pop
or
adcb
xchg
inc
cmpsb
sbbl
cmp
loop
lods
and
xorl
cmpl
sub
mov
inc
fisubl
rolb
push
in
pop
add
xor
pop
pusha
leave
outsl
adc
das
adc
subl
mov
inc
addb
divl
shlb
shlb
ss
pop
out
xchg
cmp
daa
cld
in
mov
out
addb
dec
add
fld
inc
ret
or
adc
jmp
and
loope
jno
loop
sbb
pop
gs
sub
lock
jl
mov
mov
icebp
stos
aad
popa
jb
and
int3
mov
cmp
mov
aam
mov
jns
ficoms
sbb
jae
inc
cmp
iret
std
mov
fstps
pusha
jp
pop
gs
pop
hlt
add
mov
js
pusha
loope
aaa
shrb
rclb
jbe
add
pop
pushf
scas
mov
dec
mov
inc
jecxz
jg
stos
sub
je
pop
daa
pop
call
fsubrs
mov
popf
mov
ja
fidivl
icebp
pop
loop
mov
sbbl
call
adc
inc
jl
xchg
cmp
pop
and
add
lock
std
add
jmp
add
inc
mov
mov
or
rorb
mov
xor
aam
xor
xor
icebp
xor
shlb
aam
inc
or
add
negb
ret
movsl
ret
cmp
pop
xchg
sub
test
repnz
out
sbb
test
or
dec
mov
loope
xchg
inc
call
loopne
filds
add
inc
shlb
add
push
lret
jle
add
add
or
ss
add
pop
shrb
mov
inc
in
lret
sbbb
pop
ret
pop
jp
jmp
dec
inc
add
es
add
mov
push
push
cwtl
scas
mov
outsb
pushl
shl
mov
in
pop
sbb
or
lods
cmc
push
in
in
pop
add
gs
sbb
mov
movsb
cmp
popl
cwtl
xor
rorb
hlt
in
adc
or
cmpsl
jne
testb
xor
sub
sub
std
popa
mov
push
cmp
sbb
pop
call
iret
push
rorb
sarb
int3
mov
sub
mov
jns
push
mov
scas
andl
xor
pusha
jle
dec
push
push
js
gs
fs
lea
cmp
fstpl
push
shr
rorl
push
inc
or
fidivrs
pusha
test
cltd
push
ret
pop
clc
notb
jo
push
movsb
or
dec
pop
fcmovnu
mov
dec
inc
ret
std
cs
cld
cmc
inc
mov
fs
or
xchg
ds
mov
ficomps
pusha
jbe
or
testl
movsl
ss
call
sahf
adc
dec
xor
jg
add
or
es
movl
sbb
jecxz
dec
mov
xchg
push
push
xor
mov
inc
aam
aaa
jbe
push
rorb
into
sbb
push
adc
aad
xchg
test
mov
mov
mov
sub
arpl
ret
push
fimuls
ret
cmp
push
mov
and
out
mov
roll
test
jp
jle
inc
jp
pop
xchg
idiv
cmc
cmp
jge
inc
lea
fsubs
or
aaa
adc
incl
fst
mov
xor
pusha
push
adc
add
enter
in
push
cwtl
hlt
shll
ret
pop
sub
mov
subb
inc
nop
adc
xchg
std
jne
minps
sbb
xchg
add
cmc
mulb
push
scas
hlt
xor
daa
fisubs
andb
je
mov
dec
mov
sub
mov
in
xor
xchg
xor
jne
mov
in
adc
decl
add
sub
jmp
fimull
shrb
nop
pop
and
sbb
fisttpl
jb
mov
mov
pop
xorb
push
inc
aaa
push
andb
mov
call
pop
and
adc
mov
bnd
stos
and
insb
sub
and
mov
mov
cmpsb
mov
testl
jle
mov
sbbl
adcb
out
and
mov
inc
shrb
int
add
push
and
pop
jmp
insb
xor
xchg
adc
cs
ja
imul
std
push
dec
cld
rclb
xlat
and
icebp
out
mov
cld
es
fistpl
push
test
xor
mov
add
repnz
push
jge
xchg
mov
pop
imul
fsubrs
pusha
inc
push
sahf
repnz
std
shrl
cmpsb
roll
pop
dec
or
clc
xchg
push
test
jge
les
insb
xor
aad
and
dec
popf
xchg
push
mov
jo
push
lds
std
or
add
add
xchg
subl
sub
mov
call
inc
shlb
pusha
add
imul
mov
mov
mov
shrb
add
mov
or
test
mov
insl
and
sub
lcall
cltd
clc
jns
sbb
jmp
popa
mulb
push
push
xor
jne
dec
notb
mov
mov
ss
sbb
push
xor
mov
xchg
push
jns
dec
imulb
mov
fsubl
jo
or
and
lcall
inc
or
insb
dec
add
js
call
adcl
pusha
sti
mov
xor
mov
pop
je
std
or
mov
fdivr
or
lret
les
and
in
or
cmpl
into
inc
push
sbb
data16
xor
sbb
jmp
hlt
or
add
or
mov
je
adc
inc
pop
and
cltd
lods
movsl
mov
mov
fidivs
xor
sub
mov
jl
testb
mov
xchg
rol
push
push
ret
pop
mov
test
and
leave
out
add
mov
scas
mov
data16
push
aaa
mov
lret
pop
ret
jle
lea
fs
push
mov
or
push
jne
mov
xor
fs
lea
mov
aad
mov
xor
jo
push
ret
scas
stos
jb
sbb
in
mov
lcall
ds
mov
pop
int3
cli
add
incl
call
push
mov
inc
rorl
mov
mov
cmp
dec
orb
data16
mov
inc
sub
pop
lock
sar
test
inc
das
cli
jb
fs
jbe
clc
cld
inc
sub
shlb
xorb
jbe
dec
cld
lea
and
push
adc
sub
mov
imul
loop
mov
and
inc
mov
xor
jecxz
xchg
add
mov
cmc
out
es
je
pop
ret
subl
outsb
cmp
cwtl
nop
loop
pop
mov
aam
push
mov
ret
jg
aad
dec
add
inc
daa
cmp
inc
test
push
pushf
fs
push
push
shrb
pmaxsw
mov
add
dec
and
leave
es
mov
call
sbb
dec
xor
ficoml
loopne
sub
addb
leave
dec
push
das
inc
ja
imulb
push
or
jnp
icebp
xchg
and
fstps
mov
push
sub
sahf
xor
shr
jbe
stos
mov
xor
movb
aad
fstl
push
addl
inc
ljmp
and
add
mov
cmp
call
stos
jg
sub
push
addr16
pop
pop
lock
jnp
mov
mov
mov
sub
aam
fwait
mov
je
mov
pop
or
sub
jg
adc
je
fdiv
adc
push
lret
or
mov
mov
lods
out
pop
ljmp
lock
ljmp
xor
cmp
decl
flds
rolb
outsb
clc
inc
adc
and
mov
aad
push
mov
mov
in
dec
popa
adc
jae
cli
testl
mov
stos
in
fsubl
lea
adc
and
and
call
outsb
stos
mov
addr16
movsl
je
cmp
or
fcomps
loop
dec
filds
mov
mov
mov
jb
mov
pop
sub
push
add
test
notl
push
push
xor
push
lar
sbb
insl
xor
or
sbb
mov
lret
incl
or
or
push
ljmp
xor
mov
mov
push
outsb
call
push
or
inc
mov
loopne
push
adc
mov
ret
mov
sub
add
mov
shlb
push
mov
out
loope
je
mov
es
inc
push
or
enter
adc
dec
int3
cmp
rcrb
nop
enter
clc
clc
roll
jb
pop
inc
in
mov
rolb
inc
cmp
mov
in
mov
xchg
add
pop
call
test
cld
jne
xchg
int3
lods
ret
lock
push
loop
xchg
mov
mov
sbb
jecxz
inc
pop
inc
adc
push
sbbb
gs
jb
adc
insl
out
in
nop
mov
pop
mov
mov
cs
scas
mov
bound
mov
add
adc
adc
xchg
mov
loop
push
add
or
movsb
push
fimull
xchg
push
inc
pop
jno
test
addl
jb
jo
xchg
adc
mov
push
dec
cmc
sub
mov
pop
mov
lock
fcoms
add
mov
mov
sub
cmp
sub
ss
test
flds
jg
into
rolb
stos
mov
push
mov
mov
or
jmp
outsb
adc
scas
adc
rclb
bound
or
add
push
ret
push
js
lock
subb
xchg
es
int
dec
or
inc
inc
cmp
js
ds
rorb
xchg
push
orb
data16
ljmp
adc
xor
jbe
rorl
test
push
popa
clc
add
add
cmp
sub
in
push
dec
outsl
cmp
push
xor
inc
inc
loopne
fwait
test
inc
xorl
mov
push
stos
xor
lods
mov
aas
loope
scas
add
xor
ds
and
and
adc
mov
or
cmp
mov
cwtl
dec
gs
mov
jp
movsb
push
je
ds
mov
adc
insb
push
push
jae
push
loope
mov
adc
jb
je
inc
hlt
pop
lock
ret
inc
inc
aaa
fadds
push
out
xor
add
loop
adc
add
sti
and
iret
or
mov
fucom
push
sbb
push
cmpsb
and
aaa
jae
ffreep
repz
push
jb
jmp
incl
fbstp
es
sbb
add
xor
cli
mov
imul
jne
and
dec
test
and
test
lcall
sbb
nop
push
xor
cli
add
fdivs
cld
aaa
mov
or
inc
pop
orb
push
test
xchg
cwtl
imul
sub
test
popa
popa
pusha
xchg
xor
dec
fdivs
lock
mov
test
shrd
lock
inc
lcall
push
mov
sti
cmc
repz
ja
rorl
and
pop
enter
icebp
mov
pop
sbb
jbe
add
ja
pop
or
shrl
pop
or
incl
dec
cld
pop
cltd
inc
mov
mov
add
pop
std
sub
icebp
sbb
je
rclb
pop
cld
movsl
and
aaa
cld
lcall
movsl
insl
jo
pusha
sbb
popa
fs
push
pop
cld
jecxz
sub
adc
in
jg
pop
sub
adc
test
push
push
nop
and
mov
push
push
dec
maxps
mov
sti
test
les
ret
or
shrb
je
xor
negb
push
xchg
push
rcrb
inc
jle
loop
add
push
sar
lock
fldt
cmpsl
xor
or
add
or
push
shlb
in
adc
push
mov
int
or
sbb
fildl
sbb
sbb
xchg
mov
jbe
jns
mov
fimuls
push
sbb
and
imul
lea
sub
push
mov
dec
sbb
rorb
pop
roll
pop
mov
sub
and
in
mov
xor
mov
shr
mov
mov
shr
xor
out
or
push
adc
leave
repz
cmp
and
adc
adc
adc
xor
repz
imul
sbb
jnp
sbb
sbb
xor
sbb
sbb
xchg
cmp
sbb
sbb
dec
repnz
push
sbb
mov
sub
sub
loope
add
shll
adc
and
mov
out
or
pop
sbb
dec
mov
fcomps
push
jl
sbb
les
loopne
lock
add
xor
mov
shll
adc
push
or
and
jl,pn
xor
mov
xchg
push
inc
xor
loopne
cmpsl
inc
fiadds
icebp
ljmp
push
mov
mov
xor
mov
adc
ret
mov
pop
sub
mov
das
push
push
pop
mov
dec
xchg
jne
pop
sbbl
jle
pop
mov
push
push
arpl
imul
rclb
pop
stos
inc
sbb
fmul
hlt
sub
push
stos
dec
and
cmp
jbe
fimull
lock
roll
push
rol
out
sub
xor
mov
pop
pop
neg
sub
xor
sbb
xchg
inc
repnz
lcall
les
into
pop
jb
lea
and
and
pop
pusha
cmovp
into
std
and
sahf
sbb
insb
mov
mov
cmpsb
sub
stos
scas
loope
push
mov
jne
sahf
psubb
add
or
cmpl
jp
jl
sub
in
push
adc
sbb
out
shll
mov
cmpsb
push
or
push
jnp
out
sbb
push
sbb
sbb
lret
mov
jmp
adc
jne
sub
adc
ror
shl
fidivrl
sub
bnd
call
inc
in
push
in
fisubrl
adc
mov
or
fists
sbb
pop
xor
xor
or
dec
adc
iret
cmp
jge
mov
or
or
inc
add
filds
sbb
les
inc
xor
in
lea
dec
inc
add
or
fcmovnu
jo
mov
sub
sub
xacquire
dec
rcll
ret
mov
add
in
adcl
push
fwait
sub
push
add
movsl
lock
or
ret
rep
lea
insl
sub
mov
insb
icebp
cmp
cmp
adc
inc
stos
sarb
stos
cmp
adc
sbb
sub
enter
push
adc
lock
add
or
adc
hlt
xor
or
push
dec
or
incl
or
or
cmp
paddd
or
loope
cmp
mov
sbb
or
push
push
lea
jb
adc
stos
inc
pop
fadd
xlat
test
adc
incl
sub
adc
xor
or
loopne
cld
mov
sub
jns
add
shrl
cmp
push
ds
cmp
pop
rolb
sub
inc
insl
stc
lcall
clc
ljmp
sbb
or
addr16
vmovdqu
push
or
dec
mov
stos
mov
push
jo,pt
pusha
push
or
jle
popa
mov
or
ldmxcsr
in
fdivl
popa
mov
cmp
iret
bound
jo
sub
clc
int3
xor
into
loope
push
xor
icebp
mov
jg
mov
addb
fimull
add
inc
or
cmp
rolb
xor
inc
shlb
js
xchg
shl
mul
imul
mov
inc
ret
out
enter
inc
xor
mull
mov
dec
pop
jle
cmp
jg
mov
xchg
call
adc
mov
test
inc
mov
jl
mov
lea
jmp
pop
pop
jo
xchg
out
cld
adc
add
adcb
jmp
outsl
jb
and
das
rol
jl
mov
fcmovu
je
xor
insb
fistl
add
sub
xchg
rcl
add
pop
push
fwait
mov
jmp
cmp
jle
je
lret
out
pusha
dec
jg
ret
jle
fneni(8087
sub
jle
cmp
jne
jno
add
inc
cmp
jge
jo
sbb
add
sbb
outsl
push
pop
cmp
lock
ret
xor
out
fnstcw
fstl
mov
add
inc
mov
mov
aaa
in
mov
jl
add
push
lret
nop
jbe
scas
inc
les
xchg
popf
or
pusha
pop
pop
push
pushf
adc
data16
mov
nop
cmp
sub
mov
ds
dec
pop
pop
sbb
clc
inc
cs
mov
xor
sti
or
adc
shlb
outsb
inc
mov
mov
jne
fdivp
xor
mov
dec
add
jne
or
xor
add
cmp
and
cmp
mov
scas
sub
pop
cs
and
jns
pop
sub
daa
bound
out
cltd
sub
cmp
or
jno
pextrw
sbb
lea
pop
jge
xchg
sbb
test
mov
push
or
icebp
push
add
push
sbb
cli
mov
push
lea
xor
add
mov
xchg
mov
dec
pop
xlat
cmp
pop
xor
sub
push
out
and
mov
mov
and
jl
imul
jne
repz
test
repnz
stc
or
nop
sub
test
push
lcall
xchg
sbb
iret
inc
outsb
cli
mov
roll
orb
adc
mov
push
sub
jmp
insb
jl
imul
rcl
push
cld
pop
xor
mov
or
pop
loopne
xchg
cmc
xor
sbbb
mov
adc
pop
mov
movsb
inc
dec
and
testb
or
sbb
popf
cmp
push
std
xor
adc
xor
xchg
mov
xchg
or
rcr
push
push
mov
rclb
mov
fwait
sbb
xchg
dec
cmpb
mov
adc
jle
ficomps
xor
and
sbb
pushf
pusha
sub
push
es
dec
mov
dec
ja
add
aaa
cltd
adc
cmp
mov
jbe
jo
push
sbb
hlt
lcall
add
cld
adc
push
shlb
jo
cmp
push
jnp
jne
lods
push
pop
push
std
sbb
push
fldl
push
adc
or
jns
in
xor
sbb
push
nop
and
add
adc
in
add
sbb
push
cmp
xor
cs
and
adc
xor
xchg
sbb
xchg
dec
pushf
mov
mov
mov
subb
xchg
jmp
leave
jno
dec
mov
mov
mov
or
xlat
mov
add
loop
shl
jl
adc
shrl
icebp
mov
xor
xor
mov
and
jmp
or
das
cs
jl
insb
sbb
mov
xor
fstps
and
in
ss
lds
inc
sbb
mov
add
sbb
xor
cmp
dec
sbb
push
daa
add
xor
and
pop
lods
sbb
leave
or
daa
or
sub
adc
mov
push
daa
or
inc
push
sbb
pop
mov
push
fsubrp
out
sub
fdivr
adc
cli
mov
sub
js
insl
mov
ficoml
and
ljmp
cs
push
jecxz
sbb
adc
xor
pop
js
or
ret
cmp
pop
push
lea
pop
sub
mov
push
lcall
ljmp
lds
or
sub
rol
push
sbb
pop
je
pop
sub
and
lds
js
inc
xchg
pop
test
and
sbbb
xor
pop
cmpsb
add
mov
adc
pop
inc
mov
dec
push
movsb
lods
test
mov
mov
movsl
add
adc
xchg
pop
lock
iret
js
jge
repnz
dec
lea
ficoms
lock
aam
push
xor
push
lahf
push
mov
int3
xor
andps
and
mov
sbb
and
jl
add
das
push
fmull
or
mov
stos
jecxz
pop
pop
xor
xor
or
or
and
lea
loope
xlat
dec
loope
lea
loopne
bound
adc
shlb
add
sbb
xor
cmpsl
addr16
dec
mov
xor
xchg
sbb
test
icebp
adc
ret
js
test
outsb
roll
adc
push
mov
leave
jne
lock
jbe
xor
mov
or
fs
xor
push
test
je
cmp
in
xchg
cmp
pusha
insb
cmp
mov
in
inc
inc
jmp
jne
aaa
popf
add
cmp
enter
cmp
inc
push
sbb
and
loopne
push
sbb
jbe
or
and
xchg
inc
or
add
dec
ret
sbb
or
sbb
pop
dec
sub
xor
dec
push
and
jp
adc
mov
jne
mov
push
mov
pop
out
les
ja
sbb
or
ja
repz
pop
mov
sub
mov
and
or
cld
ja
xchg
call
pop
imul
sub
add
pandn
daa
inc
out
push
xchg
ret
inc
push
fmuls
or
mov
push
mov
dec
call
adc
lea
jnp
mov
push
out
lret
sub
out
xchg
jne
or
mov
cmp
or
lret
pusha
test
enter
sti
mov
and
mov
enter
mov
pop
pop
stos
or
add
pop
add
push
movl
int3
je
rclb
add
test
sub
pop
xor
mov
push
test
adc
mov
xor
mov
or
shlb
add
repz
and
or
add
sbb
xor
je
dec
je
dec
mov
mov
mov
inc
sbb
addr16
in
sbb
mov
xchg
sub
jne
cld
stos
jns
and
cli
jbe
push
push
pop
sar
call
call
in
add
cmp
mov
jb
pop
pop
ss
inc
std
out
into
loopne
adc
jle
rcl
jl
into
sbb
out
add
mov
xlat
and
mov
or
loop
add
dec
jecxz
xchg
stc
inc
push
mov
pop
repnz
inc
cmp
test
cmp
adc
nop
in
lock
push
add
lds
mov
inc
xchg
inc
or
lock
sbb
sbb
test
jmp
in
mov
mov
hlt
inc
nop
jns
sbb
mov
and
adc
sbb
imul
imul
and
enter
testb
and
or
sahf
mov
or
xchg
and
cmpb
pop
sbb
or
xor
sbb
sbb
cmp
repnz
iret
push
sbb
sbb
sbb
mov
fiadds
repnz
push
dec
xchg
and
and
cmpb
shr
shrl
add
mov
in
mov
testl
call
cmpsb
jmp
mov
inc
and
test
push
and
pop
rolb
inc
cmp
mov
jl
test
lock
test
into
pop
mov
cmpsb
pop
add
mov
adc
mov
mov
push
push
mov
mov
insb
inc
dec
ds
push
mov
lods
sub
rclb
mov
scas
aam
test
mov
aas
and
dec
add
lret
sarb
push
fwait
or
adc
adc
repz
jne
pop
pop
mov
inc
jle
int
push
pop
xor
mov
cmp
ss
mov
pop
xor
out
and
scas
sub
nop
sbb
lock
add
iret
outsb
aas
mov
pop
cmp
fldenv
push
sbb
jns
or
in
mov
xor
movl
dec
sbb
test
add
mov
shl
push
mov
bound
pop
inc
nop
xchg
mov
mov
inc
arpl
lock
or
mov
mov
roll
add
sbb
loop
mov
pop
sub
inc
xor
lds
enter
mov
dec
or
jo
mov
enter
dec
les
inc
sbb
fidivl
sti
push
loop
ljmp
xor
decl
adc
lret
je
cmp
cmp
fisttps
andb
jb
je
shll
stc
int
nop
je
test
in
adc
adc
or
dec
test
sbb
adc
fld
push
xchg
jo
add
push
or
mov
mov
push
push
dec
add
imul
dec
js
stc
jo
inc
adc
dec
or
add
and
mov
arpl
add
sbb
cmp
pop
or
cwtl
mov
pop
or
pop
inc
xor
lret
icebp
cmpsl
loope
mov
push
cld
mov
shll
scas
inc
add
sbb
iret
sbb
or
lock
shll
inc
jae
pop
and
inc
or
je
addl
mov
pop
pop
push
push
lea
and
sarb
and
push
call
pop
pop
scas
xor
js
adc
xchg
dec
push
sbb
loop
add
cmp
xorb
push
fldl
or
js
xor
mov
cmc
jmp
mov
dec
add
sbb
orl
jmp
out
push
movsl
pop
xor
jl
pop
in
adc
arpl
lret
jo
inc
sbb
ljmp
int3
add
add
call
out
das
insb
xorl
mov
add
inc
sub
stos
je
repnz
mov
mov
push
push
push
sahf
inc
dec
pushl
arpl
cmp
aad
rcrl
or
pushf
in
out
add
mov
jne
push
cs
adc
ret
popl
push
pop
sbb
dec
mov
clc
push
loopne
pop
mov
cli
cmp
jne
mov
loopne
icebp
push
push
mov
adc
loopne
aas
cmp
jp
pop
ds
adc
pop
lret
add
adc
and
xlat
popa
popf
mov
ret
push
push
sbb
xor
pop
mov
lods
mov
mov
mov
dec
add
mov
mov
adc
pop
test
lods
sbb
sub
insl
add
into
add
adc
adc
cwtl
call
cmpw
jne
lods
clc
pusha
decl
cmpl
mov
cmp
sbb
mov
jmp
cmpl
push
jbe
and
mov
add
xchg
testb
jns
push
loop
push
fsubs
xchg
shrb
or
and
dec
add
push
jmp
pop
sti
add
or
addr16
bound
push
out
xlat
push
jb
repnz
push
sub
lret
ja
dec
sub
or
sub
rorl
or
push
push
lret
jle
cmp
je
push
sub
mov
push
push
std
add
aam
shr
push
pop
cmp
push
or
imul
sbb
cmp
jne
pop
les
push
addr16
or
jmp
mov
sbb
push
stc
es
xor
adcl
inc
into
pop
sbb
orl
ja
pop
lea
sbb
lock
je
jle
or
ret
add
mov
push
add
or
fldcw
add
pop
inc
inc
pop
or
mov
push
xlat
dec
xor
inc
and
jle
push
in
stc
xchg
cmovnp
js
mov
es
add
mov
sarb
loopne
or
ds
cmp
out
icebp
imul
out
loopne
and
or
cmp
pop
sub
test
out
dec
int
ret
or
pop
sbb
xor
add
jb
jge
add
mov
hlt
test
in
je
cmpsb
jp
es
xchg
roll
and
ss
or
incl
xchg
loopne
fldenv
xchg
fimull
lea
jbe
or
fisubrl
cmp
jae
testb
jne
test
push
cli
sbb
test
test
inc
or
rcr
lock
mov
cmp
dec
sub
test
adc
in
sarb
push
jne
sarb
jg
mov
fstpt
xchg
lods
mov
inc
cmp
testl
inc
mov
call
loopne
int
jmp
sbb
ss
push
inc
adc
or
ret
mov
mov
lcall
adc
add
jns
push
jge
lret
mov
fcoml
sbb
leave
dec
push
lea
inc
cmp
icebp
xchg
cmp
pop
sar
sub
leave
ret
push
scas
xchg
idivb
push
push
and
jne
cli
imul
int3
mov
or
xchg
pop
pop
push
push
mov
or
aad
add
adc
mov
fistps
cmpl
in
and
push
scas
ds
pop
mov
mov
pop
jae
ficompl
shl
add
ss
inc
push
xor
loopne
xor
adc
push
sub
and
cmp
mov
in
loopne
jne
mov
enter
mov
shr
lret
aam
test
daa
add
dec
mov
sbb
mov
pushf
sbb
or
pop
adc
nop
outsb
mov
adc
addl
ljmp
pop
ret
push
loopne
push
dec
dec
and
mov
movsb
add
inc
sbb
dec
push
lea
push
xchg
lea
add
test
push
and
lds
pop
push
les
and
and
push
jo
sub
outsl
and
js
mov
cmp
jne
cmpl
mov
lret
push
cmp
cmp
clc
lahf
or
adcb
xchg
hlt
or
push
sbb
push
je
cmp
dec
add
fcomps
xor
loope
popa
jg
cmp
jbe
sbb
mov
add
clc
push
xor
aas
pushl
lea
pop
inc
jns
jmp
add
loopne
cmc
std
pop
pop
add
push
or
jno
xchg
mov
push
outsl
aaa
xor
push
lea
xchg
mov
in
ss
push
adc
jbe
adc
push
lahf
xor
pop
or
cwtl
push
add
mov
repnz
and
mov
sbb
mov
pop
sbb
sub
mov
sti
loop
mov
dec
or
adc
xor
add
imul
mov
push
jb
xor
test
sub
add
add
test
mov
cwtl
adc
sbbb
aas
lret
jne
adcl
push
mov
insl
xorl
or
stos
sub
rclb
pop
or
lret
aaa
jge
or
ret
jg
jp
cld
notb
data16
or
jne
mov
fldl
adc
int3
xor
adc
xchg
int3
je
add
xor
daa
andl
test
test
lea
xchg
dec
xchg
xchg
or
adc
or
pop
mov
push
testb
mov
int
jmp
call
cmpb
pusha
sub
cmp
mov
out
stos
sahf
aam
negb
or
push
cmp
ja
test
xchg
lods
pop
cs
cmp
jne
sar
sete
mov
cpuid
test
mov
flds
jge
popl
inc
inc
jmp
push
pop
inc
bound
cmc
test
jae
fadd
push
xor
cmp
imulb
repz
xor
push
icebp
xor
cli
add
jne
mov
shll
scas
pop
cmp
pushf
jnp
shrb
push
jge
test
sub
push
insb
cmp
add
push
pop
cmp
scas
xor
push
lret
movb
cmp
jne
mov
or
mov
repnz
jl
ds
mov
dec
enter
xchg
adc
push
or
ljmp
mov
hlt
movl
mov
add
lahf
cmpsl
loope
cmpb
push
rolb
shll
push
mov
add
inc
or
inc
pushl
adc
out
mov
sbb
aaa
jnp
mov
sbb
or
rcrl
jle
add
inc
loop
mov
stc
xor
adc
icebp
xor
mov
or
mov
inc
inc
inc
cmpsb
push
fucom
pop
je
cmp
test
pop
push
cld
outsl
fsubr
dec
nop
dec
add
roll
loopne
dec
cld
insb
xchg
shr
push
pusha
inc
insl
mov
sti
pop
pop
incb
int3
repz
dec
outsl
aam
cmp
cld
xor
pop
sbb
pop
fadd
push
into
inc
fs
wrmsr
leave
testb
sub
ljmp
ds
cmove
cmp
and
sti
roll
pop
xchg
add
rcl
sub
mov
add
mov
pop
loopne
push
xchg
clc
loope
pop
and
fdivs
lea
mov
add
lea
push
dec
or
ret
subb
cld
rolb
add
mov
xor
xchg
stos
and
gs
call
dec
push
inc
pop
or
mov
xor
push
xchg
cmp
stos
mov
add
out
mov
mov
push
test
push
dec
push
loopne
outsb
cli
sar
js
mov
mov
cmpsb
fistps
adc
imul
push
push
divb
lds
sbb
or
add
mov
sar
inc
push
push
adc
callw
sub
jmp
jmp
je
mov
dec
aad
push
fidivs
inc
sub
jp
testb
adc
out
addb
dec
ret
jmp
cmp
mov
sub
inc
sub
hlt
loopne
lock
je
inc
cmp
sti
or
aad
div
inc
push
sbb
jns
outsb
shlb
cld
and
fimuls
sub
push
stc
gs
xlat
and
mov
arpl
test
cli
sbb
add
dec
jmp
outsl
sub
mov
push
add
jecxz
ja
add
add
loop
sbb
or
cmpw
dec
cmp
packsswb
pop
push
xchg
push
push
lea
in
lock
jl
out
fstpl
sarl
mov
dec
push
xor
orl
add
sbbb
add
lock
iret
pop
xchg
adc
mov
add
shlb
roll
add
or
jne
jmp
pop
cwtl
mov
dec
sub
testl
mov
pop
mov
inc
inc
add
xlat
jno
jl
pop
andb
lock
mov
cs
pop
jmp
mov
dec
neg
sbb
push
cmc
mov
pop
mov
insb
jmp
pop
push
int
jg
jne
cmc
clc
add
add
prefetchnta
cmp
mov
jmp
or
jl
pushl
mov
push
dec
pop
test
adc
jne
movl
mov
cmc
cli
or
es
shlb
push
mov
jl
cs
jmp
dec
xchg
mov
mov
cs
ret
inc
xchg
out
jle
add
add
cmp
dec
push
movsb
push
shrb
sub
mov
mov
andl
out
loopne
movsb
sbb
push
push
icebp
cmp
psubsb
ficoml
inc
testl
sub
aam
stos
dec
scas
dec
js
cli
movl
mov
lock
pop
ret
dec
pop
sbb
mov
das
jae
dec
add
gs
add
dec
movsb
mov
dec
addb
sub
mov
add
sub
les
mov
movsl
add
and
fmull
out
sub
inc
je
pop
pop
cli
mov
cmp
ret
jae
mov
hlt
icebp
jae
into
add
push
push
mov
or
fadds
sub
pop
ret
xchg
sub
out
or
stc
add
into
hlt
sub
push
mov
aam
jecxz
jmp
ret
lods
jp
push
sbb
out
sbb
dec
mov
jmp
add
xlat
push
hlt
mov
push
jo
testl
push
push
push
inc
outsb
je
je
jbe
dec
push
and
bt
sub
cmp
loop
adc
addr16
testl
or
cmp
sbb
cmpsb
mov
or
add
roll
rcrb
mov
jb
sbb
adc
jmp
in
adc
push
mov
inc
fstp
inc
mov
mov
and
or
adc
push
ss
pop
pop
int3
add
sarb
aam
lea
aas
push
push
test
sar
popf
xor
and
add
inc
pop
icebp
mov
mov
pop
test
stos
cmp
jne
and
push
or
out
das
cld
add
int
jns
jmp
or
jmp
std
jmp
push
mov
sbb
mov
mov
ljmp
std
out
fcomps
bound
divb
ret
ds
adc
ffree
jo
pop
ret
rcl
lahf
adc
inc
add
sbb
mov
mov
push
cld
xchg
jle
shrl
or
es
xorl
or
jne
mov
add
shlb
das
push
inc
or
jbe
in
dec
jne
rolb
dec
inc
aaa
sub
in
ret
mov
jmp
mov
mov
je
out
and
pop
pop
out
push
xchg
fdivl
in
sub
or
les
add
sbb
sub
repnz
stos
xchg
fsubr
push
cmp
ljmp
ja
imul
loopne
aas
cmp
or
lea
shll
xor
leave
enter
or
rol
xchg
adc
std
cld
push
add
mov
sbb
mov
daa
popf
push
lahf
adcb
add
or
loopne
add
mov
movzbl
sub
test
fisubs
lds
add
and
sub
rcrb
xchg
xor
sub
andps
cmpsb
je
or
jmp
je
mov
hlt
mov
adc
or
push
push
add
aad
mov
stos
adc
test
and
out
or
sbb
add
nop
dec
outsl
cmp
ss
dec
arpl
ss
push
pusha
popf
jp
testb
inc
clc
ja
cmp
jb
mov
mov
test
and
lea
push
jg
add
cmp
ja
sub
inc
iret
lea
mov
inc
push
pop
aaa
call
rcrl
shlb
lea
or
push
iret
dec
mov
out
std
push
cmp
inc
dec
sub
xchg
cld
pop
shlb
pop
mov
mov
inc
adc
jo
push
andb
pop
sub
mov
jmp
xor
sub
daa
mov
jecxz
sbb
outsb
sarb
add
mov
inc
jb
or
sub
mov
and
pop
xor
adc
jp
push
cmp
and
loopne
pop
cli
imul
xor
fldl
mov
lahf
xor
sub
mov
mov
add
test
popa
js
sub
sub
je
cld
jne
mov
jp
movsl
mov
cmp
arpl
mov
xchg
push
sarb
icebp
std
fbstp
add
inc
cmp
orps
cmp
stos
sti
sub
incl
jge
mov
out
out
stos
testl
adc
in
add
sub
push
sar
aas
mov
and
inc
lea
shl
mov
stos
decb
sbb
push
mov
mov
jmp
mov
mov
add
cli
cmp
mov
rorb
nop
xchg
xchg
hlt
dec
mov
es
inc
rorl
add
push
add
push
jo
orb
jo
call
lea
movsl
mov
movsl
jmp
sub
cli
hlt
inc
inc
cmpb
dec
mov
popf
xor
inc
inc
cmp
out
testl
hlt
push
xchg
jmp
cmp
push
push
mov
inc
jle
stos
call
and
addl
pop
arpl
into
pop
ss
ret
out
test
faddp
test
je
dec
push
add
adc
les
push
pop
dec
ljmp
imul
pop
jge
adc
pop
out
ja
or
pop
clc
cmp
and
inc
adc
add
insb
pop
pusha
cltd
jbe
lock
mov
popf
call
cmp
jae
mov
sbb
adc
push
mov
inc
in
dec
push
or
inc
mov
push
mov
push
cmp
jge
xor
add
cmp
jbe
cmp
jb
jl
pop
adc
jecxz
pushl
mov
stc
or
rep
jmp
mov
jmp
add
enter
scas
repnz
in
or
cld
nop
push
adcb
cmp
fcomip
jns
pusha
and
sbb
mov
or
nop
scas
imul
mov
testb
add
push
test
movb
mov
or
push
enter
repz
sarb
sahf
decl
inc
in
call
sahf
in
lock
hlt
clc
cwtl
and
clc
cld
cld
sahf
or
sbb
clc
sbb
inc
out
sbb
add
push
adc
pop
xorb
inc
pop
sti
xor
push
inc
and
push
lea
jl
cld
pop
and
pop
rorl
cld
out
mov
fs
insb
adc
cmp
gs
rolb
int3
ror
call
mov
mov
mov
add
aaa
adc
mov
dec
addr16
add
mov
add
out
outsl
cmp
inc
push
dec
push
pop
fs
icebp
jns
jg
aaa
sbb
sahf
out
sahf
sbb
adc
adc
jns
out
or
or
add
xor
add
cwtl
or
iret
mov
dec
aaa
push
add
outsl
dec
add
dec
cmp
add
lock
stos
jp
cmp
or
add
jnp
sbbb
or
mov
aas
adc
fs
mov
mov
mov
push
mov
adc
push
or
cli
add
mov
rclb
dec
addl
pop
insl
jl
outsl
push
mov
sub
cld
shr
mov
imul
inc
pop
es
add
push
dec
jbe
cvtps2pd
sub
fldenv
push
lcall
add
sub
mov
mov
dec
cli
add
aas
jbe
push
pop
xchg
fdivrs
dec
cmp
push
and
andb
pushl
mov
shr
lea
not
and
decb
dec
insb
loop
jg
and
jmp
lea
xor
cmp
pop
add
mov
rcll
adc
add
pop
and
cwtl
loop
push
or
cs
aam
pop
clc
and
pop
hlt
outsb
bound
and
sti
add
pop
pop
shlb
lret
cmp
jbe
mov
push
cmp
andb
cmp
je
shrb
data16
cmp
mov
out
not
and
rcrl
dec
add
sbb
loop
repnz
mov
sbb
pop
add
adc
jmp
pop
jo
mov
enter
je
mov
rorl
pop
dec
or
cmc
mov
xor
dec
pusha
mov
mov
adc
mov
jae
cmpb
xor
push
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
push
adc
xor
lock
fmul
cmpsl
cmp
neg
xchg
or
push
push
call
loope
add
scas
jp
mov
sbb
dec
xor
mov
cltd
cmp
sub
dec
inc
adc
dec
adc
pusha
add
and
xchg
pusha
imul
or
and
aas
cli
push
add
shl
cli
sbb
inc
adcb
push
lea
imul
mov
or
mov
add
or
cmpsb
adc
push
leave
push
pop
pop
pop
adc
or
ficomps
xor
push
push
inc
addr16
lret
push
adc
cmc
push
out
rcrb
pop
aad
in
sub
adc
scas
sub
or
pop
lea
jo
cli
into
dec
push
ja
inc
push
push
add
push
cmp
divb
push
icebp
jmp
orl
xchg
ficoms
or
or
xchg
pop
test
stos
cmovne
jae
jo
fcmovnu
shl
inc
lahf
xchg
scas
mov
imul
inc
clc
push
pop
lods
negb
inc
or
movsb
dec
jne
add
sti
add
out
adc
add
addb
push
inc
stos
lahf
xchg
cli
loop
decl
cld
ja
ljmp
adc
dec
clc
jmp
aad
inc
in
in
nop
xchg
or
sub
mov
sbb
jmp
int3
adc
add
xchg
add
inc
movsb
mov
mov
inc
fs
mov
sahf
jo
pop
fwait
outsb
xchg
inc
mov
add
jne
or
adc
ss
push
rclb
or
adc
jo
cmp
mov
xlat
sub
pop
shrl
lcall
loope,pt
xor
icebp
mov
and
xchg
jo
cwtl
jle
jecxz
pusha
or
add
jbe
cmp
lock
sar
dec
cmp
sub
xlat
mov
jbe
xchg
pop
push
mov
pop
add
inc
cmp
into
fcompl
xchg
add
lods
cmp
push
lcall
sbb
add
add
sub
add
fcoms
movsl
pop
adc
lret
aas
push
cld
jmp
mov
pop
pushf
sti
push
int3
pop
xchg
jbe
pop
jg
or
pop
dec
pop
pop
repz
rcll
adc
pop
push
inc
sub
adc
loopne
jmp
add
jmp
aaa
xchg
ljmp
adc
push
add
xchg
out
lcall
lea
mov
sub
js
clc
aam
sti
mov
mov
lds
xor
push
sar
dec
cmp
test
sbb
xor
lock
addb
xor
and
clc
cmp
dec
scas
dec
je
sbb
xchg
fisttps
scas
dec
cmp
andb
add
dec
in
xor
fimull
push
icebp
push
sbb
push
xchg
sarl
and
in
jb
into
mov
cmp
jns
ret
lods
dec
or
cmpsb
enter
sbb
inc
mov
jo
mov
push
inc
pop
inc
sub
push
push
cmp
xchg
jecxz
icebp
lea
mov
or
sbb
std
ljmp
shr
cld
mov
sti
fmul
hlt
cmp
jmp
dec
and
in
fstpt
and
decb
iret
jne
ret
adc
pop
cmp
jg
sbb
push
jne
mov
jmp
inc
or
mov
call
ficompl
mov
and
incl
or
mov
add
jno
mov
pop
insb
clc
lods
lea
xor
add
mov
movsl
cwtl
sub
aaa
out
push
mov
cmp
jmp
or
test
into
jne
lret
sbb
mov
jmp
cmpl
cmpl
jnp
cmp
jb
andl
xor
das
aam
lock
inc
fs
loope
mov
inc
sbb
lods
rorl
mov
xchg
pop
cmp
mov
jae
neg
lock
shl
inc
test
cwtl
cli
push
rorb
mov
cld
jle
mov
negl
dec
inc
cmpsl
adcb
jge
iret
jg
insl
push
or
in
and
mov
fiadds
jne
in
sub
or
sub
dec
cwtl
popf
test
mov
js
cmp
mov
lods
dec
push
and
mov
clc
into
pop
jp
push
lcall
cmpsl
movsl
push
push
inc
es
pop
popa
or
and
jo
cwtl
out
or
or
or
push
cmpsb
sub
or
push
clc
jb
mov
or
mov
push
or
jo
aad
shl
rcr
and
cli
in
mov
fmull
jne
cmp
xchg
xchg
cmp
pop
je
xlat
and
inc
add
mov
test
adc
or
or
inc
jp
mov
dec
pop
or
fimuls
ljmp
inc
xorl
add
ja
ret
add
nop
js
cmp
ja
push
push
lcall
inc
je
jmp
push
cmp
popf
mov
and
dec
push
push
fadds
arpl
jo
daa
xor
cmp
push
aad
fists
inc
jle
jg
test
jne
push
addl
sbb
aas
dec
sbb
sub
jmp
pop
push
or
cmp
jg
push
mov
or
pop
mov
cmpsl
les
push
pcmpeqb
and
or
lods
hlt
ret
push
jmp
decb
adc
mov
cmp
jne
mov
push
inc
mov
jl
push
pushf
in
jge
fdivp
push
cwtl
xchg
ss
nop
inc
hlt
xor
and
loopne
mov
popf
pop
movsb
add
inc
sbb
ja
cld
inc
dec
add
mov
shll
sub
sub
nop
call
dec
cmp
mov
out
jbe
je
mov
inc
in
test
push
js
add
jns
sti
adc
jbe
mov
inc
sarl
loopne
test
and
imul
arpl
or
les
out
pop
inc
jp
and
inc
jl
mov
add
push
jg
and
inc
xor
bound
and
lahf
or
mov
push
xor
mov
inc
add
sbb
ret
int3
push
push
cmp
cmp
rolb
and
xor
scas
lods
xchg
jle
sub
jmp
xor
cmp
pop
adc
sbb
inc
and
cmp
pop
dec
insb
in
shrb
leave
call
sub
imul
push
or
jne
mov
faddl
ret
push
aam
incb
mov
stos
add
cmp
push
andb
and
or
jne
scas
es
lea
pusha
mov
mov
mov
jne
jae
rcrl
cmp
push
pop
inc
ss
inc
adc
addr16
mov
or
push
mov
sub
mov
mov
jbe
movsl
lcall
scas
enter
nop
or
out
ds
lahf
push
cmp
jo
in
movl
pop
add
sub
cltd
daa
test
adc
or
dec
jns
add
nop
sub
loopne
inc
loopne
jbe
loopne
sub
adc
inc
xchg
int3
push
out
jo
xchg
loopne
and
inc
jne
or
push
xor
xlat
fcmovnb
dec
mov
roll
in
insb
dec
test
fcomps
mov
test
sbb
push
nop
sbb
pusha
in
fwait
cmp
xor
out
popf
lds
into
iret
push
mov
cmpsb
sbb
and
sbb
fsubl
je
pop
cld
or
push
ret
push
sbb
jmp
adc
push
addr16
jne
or
mov
mov
je
icebp
xchg
xchg
dec
inc
and
add
add
fdiv
fcmove
sbb
imul
lea
push
dec
and
enter
rorb
sbb
sbb
push
insb
push
jmp
ss
imul
fldpi
sbb
scas
or
test
lea
xchg
pop
aad
test
idivb
xor
push
insl
in
in
push
push
jnp
jo
sub
dec
mov
inc
inc
mov
push
aad
inc
xor
add
loop
fmuls
daa
pusha
push
mov
loopne
or
pop
push
push
sub
nop
push
es
sbb
test
mov
xchg
mov
pop
sub
mov
movsl
lods
aam
cmpl
adc
negb
xchg
imul
sub
addr16
loopne
mov
sbb
push
push
inc
cmp
aas
mov
jge
push
and
sub
xchg
push
rolb
fiadds
sbb
push
insl
sbb
xor
xor
je
mov
adc
mov
add
cwtl
ja
mov
inc
mul
sar
fs
enter
movsl
jo
sarb
adc
repnz
sub
inc
popa
cmp
or
pop
repz
jl
mov
cmpb
sub
repz
fmuls
xchg
push
or
jns
iret
add
popa
lock
add
jg
jmp
loopne
sbb
inc
push
push
bound
cmpl
fsubrs
xchg
bound
fmull
adc
mov
loopne
arpl
arpl
and
add
sahf
out
jl
test
mov
out
mov
fwait
popa
inc
fmuls
loopne
lock
adc
rolb
add
cmc
jle
push
add
cmp
and
cli
xor
xchg
mov
sub
mov
jmp
or
js
lcall
or
cmp
adcb
jl
or
push
ljmp
push
clc
clc
movb
mov
inc
jne
cmp
enter
adc
inc
mov
int3
fistl
mov
mov
rclb
inc
les
sub
dec
rclb
mov
js
je
mov
rorb
and
cmp
sbb
sbb
lods
xor
mov
inc
pusha
enter
arpl
test
lahf
or
enter
pop
insb
xchg
fmull
fcoms
add
outsl
pop
inc
inc
push
pop
add
jo
jae
fbstp
push
add
fcomps
fsts
dec
mov
cmpsl
cld
shlb
addl
outsl
inc
inc
push
adc
data16
inc
int3
jmp
mov
push
mov
rcr
inc
xchg
push
sbbl
subb
int3
inc
inc
pusha
mov
cli
jmp
push
outsl
ds
in
mov
mov
dec
mov
mov
and
insl
cld
xor
push
pop
mov
not
fmul
push
sbb
mov
and
fwait
sub
mov
jl
mov
andb
and
sub
push
dec
xchg
decl
xor
adc
scas
icebp
add
cmp
mov
das
arpl
ds
lcall
test
outsl
xor
and
test
je
js
hlt
loop
inc
in
fcoms
je
adc
clc
jae
cmp
jae
pushf
out
inc
and
cmp
clc
jnp
and
mov
mov
add
dec
add
movsb
daa
adc
push
shll
or
fmulp
mov
ja
dec
jne
movsb
popf
hlt
xchg
dec
cmp
movsb
mov
pop
jne
push
or
lock
jne
cmc
sbb
mov
xchg
out
in
xchg
daa
jmp
movzbl
push
push
pop
ds
fwait
loopne
insb
sbb
inc
jl
mov
fmuls
jne
mulb
mov
xor
cmp
jmp
add
repnz
add
add
inc
jmp
push
sub
sahf
in
xor
addl
pop
inc
into
lods
xchg
jbe
scas
stos
push
call
adc
jo
inc
or
pop
and
add
sbb
scas
push
mov
push
add
sub
add
je
push
in
mov
mov
push
sbb
loopne
int3
pop
adc
mov
or
jle
pop
aad
or
adc
jne
jmp
sub
xchg
or
adc
adc
scas
sbbl
pop
xor
pop
je
and
je
jns
js
sub
stc
or
aas
imul
push
add
test
cmpsb
sar
push
int3
xchg
sbb
pusha
aad
dec
or
adcl
cld
mov
insb
mov
or
adc
push
inc
insl
mov
pushl
popa
push
inc
outsl
jb
js
divb
inc
std
je
jb
arpl
insl
jae
and
scas
add
gs
jb
outsb
je
insl
and
adc
or
cs
dec
push
push
and
inc
in
fistps
dec
inc
and
add
xor
cmp
sub
and
jae
popa
jo
insb
imul
or
stos
xor
and
and
imul
popa
arpl
in
imul
or
jb
inc
outsl
sub
lahf
loopne
imul
push
and
or
fidivrl
adc
popa
jae
push
outsb
daa
mov
daa
fdivl
sbb
xor
and
iret
push
push
mov
and
adc
inc
cs
push
sbb
bound
pop
outsl
inc
imul
stos
test
push
lret
dec
aaa
outsl
or
push
les
gs
outsl
ja
jno
nop
nop
imul
orps
jbe
xchg
jne
or
dec
arpl
add
xor
pop
push
xor
pushf
pop
lret
or
lds
xor
out
outsl
jo
mov
fcomps
fs
push
cmp
dec
arpl
pop
enter
insl
jne
pop
inc
sti
shrb
xor
fs
arpl
sub
outsb
popa
pop
insl
imul
mov
subl
rorl
xor
and
cmpsb
out
push
mov
mov
jo
outsb
into
addl
xor
xchg
insb
popa
and
push
and
adc
popf
lret
cmp
addr16
popf
mov
xor
fadd
mov
or
xor
cmpsl
sub
xchg
fimull
cmovl
jb
jns
or
lods
lds
and
addr16
neg
ds
cmp
add
cmp
and
popa
push
jb
fimull
imul
outsb
outsl
cwtl
ds
movsl
push
push
pop
fsub
fmuls
xchg
inc
xchg
fs
je
mov
push
jb
bound
dec
mov
fnsave
inc
jle
dec
add
iret
loopne
fists
fisubl
pop
pop
sti
dec
nop
lea
inc
outsl
js
jne
xor
pushf
jp
add
xchg
std
and
bound
push
xchg
mov
mov
bound
js
es
mov
push
cmpsl
cli
inc
jo
sti
push
or
sarb
insb
ss
aas
subb
js
sti
fadds
outsl
xor
insb
jns
pop
fsts
inc
jne
js
jne
ds
mov
jl
adc
fs
add
sub
mov
xor
scas
inc
mov
jb
lods
cmp
push
jns
add
nop
addl
and
or
mov
addb
add
popaw
imul
pop
cmp
pop
in
add
xchg
add
and
in
push
xchg
adc
addl
adc
mov
and
inc
xchg
dec
leave
push
imul
cltd
jbe
add
ja
adcb
incl
pop
cmp
adc
aaa
add
pop
rcll
fimull
sub
add
or
pop
and
and
pop
inc
pop
or
leave
jbe
mov
push
loope
add
mov
xchg
gs
gs
fs
xor
or
adc
pop
inc
addl
dec
xlat
arpl
jnp
imul
add
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movsb
jb
mov
xchg
hlt
jmp
ss
test
jno
xor
sbb
and
daa
mov
jg
es
sbb
mov
sub
das
test
lcall
in
and
mov
push
mov
iret
shr
stos
sti
inc
dec
pushl
add
stc
add
cmp
test
mov
cmp
mov
call
push
ror
or
in
pop
xchg
inc
pop
les
sbb
orl
inc
out
mov
ficomps
fneni(8087
xor
or
and
ret
bound
enter
aad
test
jmp
scas
or
cmpsb
mov
call
mov
mov
dec
add
push
popa
xor
incl
clc
cwtl
adc
mov
push
sub
mov
inc
push
pushl
arpl
clc
jl
test
ja
cltd
idivb
push
repnz
fisubrs
mov
pop
add
xchg
vandpd
xor
add
addr16
out
sbb
stos
stos
out
jbe
lcall
sbbb
jge
xchg
cli
incl
jmp
adc
inc
leave
sti
lock
lods
in
mov
aam
mov
lcall
mov
ljmp
movsb
mul
jb
xchg
decl
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
push
div
add
xor
pop
push
movsl
movsl
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
jmp
xor
adc
add
xchg
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
or
lcall
adc
sbb
loop
int
jmp
dec
daa
daa
imul
mov
ljmp
sbb
sub
je
sbb
cs
sbb
ljmp
mov
pop
out
pop
mov
push
divb
cmp
popa
jge
mov
push
sub
jnp
jecxz
jmp
ds
das
das
jno
test
mov
shr
sub
and
jmp
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
aam
push
lret
lret
inc
addr16
cmp
dec
decl
cwtl
dec
dec
aam
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
incl
lcall
push
adc
inc
iret
jmp
add
push
jg
andl
cmp
inc
and
test
jecxz
push
push
repz
mov
inc
rolb
call
mov
icebp
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
or
orb
cld
std
repz
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
mov
mov
cs
pop
cmp
cmpsl
cmpsl
repnz
jle
cmpb
inc
enter
mov
pushl
sbb
sub
jae
xchg
shlb
sbb
dec
shll
and
push
sub
jle
cmp
mov
out
out
sub
mov
cmp
jns
pop
pop
loop
incl
push
or
sbb
shl
xor
push
je
cmp
or
push
xchg
dec
dec
fildll
fisttpl
push
or
and
pop
in
ret
lcall
rcl
outsb
inc
lods
lods
out
les
cmpsb
cmp
xchg
movsb
shl
in
bnd
mov
out
inc
cli
or
enter
aaa
aaa
mov
mov
decl
aad
pushf
dec
dec
rorb
test
mov
push
push
cli
repz
hlt
pop
iret
ljmp
std
gs
hlt
jp
cmp
scas
jmp
and
outsl
mov
mov
and
jb
sbb
and
cmpsb
cmpsb
push
jae
mov
xchg
mov
lret
call
fnstsw
je
ds
pop
and
mov
mov
jo
jp
jo
jl
ds
incl
mov
int3
data16
nop
dec
dec
fadds
add
add
sbb
push
adc
popa
popa
mov
outsl
adc
pop
adc
imul
sar
pop
hlt
pop
cmp
mov
jmp
clc
adc
cwtl
cwtl
mov
adc
xor
imul
mov
pop
mov
cmpsl
sub
push
push
and
jmp
xchg
xor
dec
stos
push
mov
jp
mov
mov
mov
gs
mov
xor
push
ret
sub
sub
adc
jns
pushl
cld
insl
mov
push
cmp
jns
out
or
out
sahf
push
add
sahf
out
out
inc
popf
inc
out
sahf
out
adc
out
sahf
in
addr16
ljmp
xchg
pop
ret
out
sahf
out
pop
inc
add
out
sahf
pop
hlt
xor
xchg
jae
sahf
out
push
aas
or
gs
sahf
out
sub
jns
or
fwait
cmp
out
int
sbb
out
sub
out
sahf
testb
jnp
jns
out
jno
cmc
push
out
pusha
pop
enter
jns
mov
aam
sahf
out
call
out
sahf
out
vandnps
adc
xor
jns
jecxz
inc
out
sahf
out
lods
mov
jns
ffreep
jne
xor
jns
out
push
insl
dec
adc
out
sahf
out
loope
int3
cmp
repnz
jns
out
sub
jns
out
data16
sbbl
sarl
loop
sahf
out
sbb
out
sahf
out
fisttpl
insb
in
out
sahf
pop
outsb
out
cmpsb
test
jns
out
aaa
mov
inc
pop
out
sahf
out
mov
sahf
out
sahf
mov
pop
and
out
jmp
out
sahf
out
and
push
sahf
out
sahf
and
fstp
jns
out
xchg
jns
out
fadds
jns
mov
pop
jns
out
daa
mov
jns
out
mov
out
sahf
mov
xchg
and
jns
out
js
clc
and
sahf
out
fidivl
mov
ret
mov
adc
cld
jns
out
cmp
ja
jns
out
repnz
out
sahf
xor
addr16
xlat
jns
out
stos
jbe
or
jns
out
cli
pop
inc
lock
out
sahf
lods
aam
scas
pushf
movsb
jns
out
jb
mov
xchg
out
sahf
out
ss
test
xor
in
jno
jns
out
xor
jns
out
sbb
jns
pop
adc
sahf
out
mov
or
out
sbb
mov
push
cmp
mov
jecxz
sahf
out
das
test
add
jns
out
and
mov
sahf
out
sahf
push
mov
sahf
out
pop
iret
shr
stos
out
sahf
out
inc
dec
xor
inc
stc
add
cmp
sahf
out
lahf
test
mov
out
xchg
popf
cmp
sahf
out
sahf
mov
jns
out
repz
or
out
sahf
out
pop
xchg
inc
pop
sahf
out
sahf
les
jns
out
sbb
orl
and
nop
mov
out
mov
sahf
out
or
loopne
cmp
jns
out
dec
push
and
sahf
out
sahf
ret
bound
jns
jns
enter
sahf
out
aad
test
insb
push
hlt
ljmp
scas
or
sahf
out
sbb
mov
sahf
out
sahf
call
mov
mov
jns
out
dec
add
push
sahf
out
sahf
popa
xor
jns
out
sbb
out
sahf
out
imul
jns
fwait
push
xchg
into
push
jns
out
sub
mov
out
mov
out
sahf
inc
cltd
sub
sahf
out
mov
out
sahf
out
repnz
out
sahf
xor
addr16
xlat
jns
out
stos
jbe
or
jns
out
cli
pop
inc
lock
out
sahf
lods
aam
scas
pushf
movsb
jns
out
jb
mov
xchg
out
sahf
out
ss
test
xor
in
jno
jns
out
xor
jns
out
sbb
jns
pop
adc
sahf
out
mov
or
out
sbb
mov
push
cmp
mov
jecxz
sahf
out
das
test
add
jns
out
and
mov
sahf
out
sahf
push
mov
sahf
out
pop
iret
shr
stos
out
sahf
out
inc
dec
xor
inc
stc
add
cmp
sahf
out
lahf
test
mov
out
xchg
popf
cmp
sahf
out
sahf
mov
jns
out
repz
or
out
sahf
out
pop
xchg
inc
pop
sahf
out
sahf
les
jns
out
sbb
orl
and
nop
mov
out
mov
sahf
out
or
loopne
cmp
jns
out
dec
push
and
sahf
out
sahf
ret
bound
jns
jns
enter
sahf
out
aad
test
insb
push
hlt
ljmp
scas
or
sahf
out
sbb
mov
sahf
out
sahf
call
mov
mov
jns
out
dec
add
push
sahf
out
sahf
popa
xor
jns
out
sbb
out
sahf
out
imul
jns
fwait
push
xchg
into
push
jns
out
sub
mov
out
mov
out
sahf
inc
cltd
sub
jmp
jns
push
push
hlt
cmpsl
push
jle
gs
sbb
movsb
ret
cmp
pop
xchg
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
testb
dec
and
dec
in
cld
lds
lret
xlat
es
xorb
pop
dec
and
ljmp
pop
inc
loope
das
jne
orl
imul
movb
pop
out
xchg
pushf
xchg
mov
jmp
push
pop
fcmovbe
mov
and
dec
loopne
sub
ret
hlt
mov
cltd
pop
ds
ljmp
mov
dec
mov
mov
data16
cmp
sbb
adcb
jmp
push
jg
mov
ja
mov
cmp
ljmp
xchg
jo
push
sbb
clc
mov
jae
and
add
jecxz
push
push
ljmp
pop
das
mov
add
aaa
or
and
push
in
push
incl
sub
pop
repnz
imul
int
add
bound
les
decb
mov
mov
xor
call
incl
out
stos
pop
jno
push
mov
and
fldl
cmp
dec
out
xor
ret
inc
jno
add
enter
outsl
pusha
xor
jg
cwtl
sti
and
mov
inc
int3
fstps
call
mov
jns
out
mov
hlt
inc
psubsw
test
pop
or
incl
push
adc
insb
pop
jb
std
push
mov
cmp
sub
fldenv
cmpsb
and
ss
addr16
pushl
mov
xchg
rcrb
fwait
xchg
sahf
add
dec
popa
fsubl
mov
sbb
sbb
loop
mov
or
mov
loopne
adc
pop
sbb
mov
lods
sub
push
ljmp
test
cltd
fnstsw
testl
cmc
mov
pop
sti
out
clc
jle
mov
jbe
and
fdivl
icebp
arpl
xor
lret
test
adc
call
adc
test
jge
mov
xor
sub
dec
fdivl
incl
jecxz
sub
mov
cli
inc
jmp
mov
mov
jge
fsubs
xor
fnstcw
rol
mov
mov
cmpsb
cmc
or
pushl
mov
in
js
or
push
jle
testb
call
cld
cmp
pop
add
repnz
call
sub
mov
lods
cltd
cmp
sbb
call
cmp
or
sbb
in
lcall
lcall
jmp
jle
mov
call
ss
ljmp
aam
mov
xor
xor
movsl
xchg
xor
mov
or
loopne
shlb
icebp
add
dec
inc
in
jg
push
push
call
xchg
imulb
jbe
lea
mov
int3
stos
dec
push
in
add
sahf
shll
sbb
sub
mov
inc
gs
jg
pop
ljmp
xchg
or
mov
sbb
push
jmp
test
inc
adc
mov
adc
jmp
cmp
decl
mov
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
sbb
jns
aaa
mov
pop
std
stos
pop
fistpll
fildl
mov
and
sub
mov
lcall
sbb
and
lcall
incl
jno
or
mov
pushf
fs
rcll
xor
sarb
repz
mov
push
ret
xchg
lret
repz
repz
stos
xchg
push
test
cmp
xchg
and
cmp
repz
addr16
loope
repz
repz
repz
jmp
sub
iret
repz
js
fnsave
pop
data16
or
cmp
pusha
inc
loopne
sbb
cmp
repz
sbb
iret
repz
sub
add
repz
lcall
iret
repz
xchg
lock
repz
mov
iret
xor
stos
push
push
cmp
repz
cmp
cmp
repz
iret
repz
int3
ja
mov
fstpt
repz
jmp
cmp
repz
lods
dec
sti
push
iret
repz
push
daa
fs
cmp
repz
psrld
repz
iret
repz
inc
sbb
cmp
repz
dec
mov
iret
repz
iret
repz
push
and
repz
clc
adc
repz
repz
shrb
repz
cli
and
sbb
out
cmp
repz
sar
iret
repz
repz
movsb
in
iret
repz
fwait
call
repz
jl
mov
repz
repz
outsb
jnp
hlt
iret
repz
add
cmp
repz
into
aam
scas
repz
repz
shlb
iret
repz
mov
dec
testl
cmp
dec
push
repz
repz
repz
jae
pop
push
xor
cmp
repz
jp
mov
repz
repz
iret
repz
jns
ljmp
cmp
ds
jb
cmp
repz
inc
jno
iret
repz
pushf
nop
popa
jo
inc
cmp
repz
movsb
pop
imul
iret
repz
pop
add
insl
iret
repz
jbe
xlat
lret
inc
mov
pop
sbb
shlb
iret
repz
stc
pop
pushf
iret
repz
jp
andl
enter
cmp
jns
jno
repz
rep
lods
cmp
iret
repz
xor
scas
mov
cmp
std
insb
clc
shl
cmp
repz
repz
jnp
xchg
repz
mov
loop
repz
repz
iret
repz
loope
in
out
lahf
adc
repz
push
add
iret
repz
aam
sti
jmp
inc
sahf
inc
mov
cmp
repz
nopl
xchg
cmp
repz
jo
cmp
repz
aad
fldenv
repz
out
xchg
iret
repz
mov
iret
loopne
or
iret
repz
pop
frstor
repz
repz
cmp
iret
repz
cld
icebp
faddl
repz
cmp
cmp
repz
push
mov
dec
mov
sub
cmp
repz
shll
iret
repz
repz
int3
inc
adc
repz
xchg
sub
iret
repz
mov
cmp
mov
outsb
out
call
fwait
or
cmp
repz
cmp
rcr
cwtl
ficoml
cmp
repz
mov
add
repz
xrelease
push
ljmp
inc
sbb
iret
repz
or
cmp
repz
repz
in
fbstp
repz
into
aaa
int
outsl
fstpt
repz
les
ret
repz
repz
iret
repz
in
test
repz
inc
pop
daa
stos
repz
repz
cli
jecxz
jbe
repz
int3
add
sub
cmp
mov
cmp
repz
inc
rorl
iret
insl
push
mov
iret
repz
mov
loope
cmp
xrelease
into
fistps
iret
repz
push
push
imul
dec
inc
fidivrs
repz
repz
pop
push
jmp
iret
repz
lds
sub
repz
jns
imul
add
iret
repz
mov
andl
cmp
repz
fnstsw
out
repz
repz
push
cwtl
mov
inc
fld1
mov
enter
cmp
inc
test
xor
iret
repz
pop
push
test
repz
scas
sub
cmp
repz
push
out
fwait
shl
iret
repz
xchg
mov
and
or
repz
jne
jg
repz
repz
sti
inc
and
repz
in
in
arpl
cmp
mov
cmp
repz
shll
xchg
jmp
cmp
repz
cmp
aam
repz
repz
lods
cmp
repz
pop
jle
fdivrs
ret
cmp
repz
rcl
and
repz
cmp
lcall
iret
repz
outsl
lahf
mov
repz
repz
movsl
mov
cmp
nop
cmpsl
add
int
cmp
repz
out
stos
xchg
shl
cmp
repz
gs
mov
repz
xchg
fistl
cmp
repz
mov
cmp
repz
sbb
shl
iret
repz
adc
idiv
cmp
cmp
push
cmp
repz
or
cmp
mov
lret
xor
aas
push
or
xor
movsl
cmp
repz
sti
jl
cmp
xor
inc
incl
jmp
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
dec
insl
mov
and
xchg
push
aam
pop
int3
pop
gs
insb
jo
push
std
in
mov
call
lea
add
pop
add
shrb
add
scas
mov
add
adc
inc
dec
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
std
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
sarb
lcall
int
hlt
pop
loope
xor
sub
pusha
out
sbb
jp
xchg
leave
pushf
out
mov
loopne
dec
scas
sub
mov
jmp
cmp
push
cltd
popa
pop
sub
mov
imul
jmp
es
movsb
xchg
push
cmp
mov
mov
push
mov
movsl
push
outsb
cmp
test
xchg
push
jbe,pn
movsl
xchg
push
cmp
pop
call
inc
sbb
mov
movsl
xchg
pop
imul
movsb
test
push
jbe
mov
cs
xchg
jbe
sahf
push
push
pop
call
cmp
xchg
xchg
xchg
pop
dec
jbe
xchg
mov
jle
mulb
out
ss
jp
movsl
into
movb
pop
dec
ljmp
imul
pop
ss
outsb
xchg
xchg
cmp
mov
jmp
sbb
test
push
xchg
xchg
xchg
fisubrs
mov
push
mov
jg,pn
xchg
sbb
mov
test
push
xchg
xchg
push
jle
movsl
movsl
mov
pop
fiadds
jbe
imulb
sbb
mov
push
cmp
xchg
mov
xchg
push
ficoms
movsb
xchg
jp
pop
out
mov
pop
jmp
xchg
cmp
jbe
es
test
ljmp
lods
movsl
xchg
jp
jle,pt
xchg
cmp
fidivrs
pop
jmp
cmp
test
push
jbe,pn
test
sahf
mov
lods
movsl
push
cmp
out
divb
push
jbe
cmp
ds
jp
lods
mov
push
push
push
xchg
xchg
scas
out
movsl
mov
mov
dec
scas
inc
inc
xchg
jp
lods
cs
xchg
outsb
jmp
push
cs
sahf
jp
mov
cmpsl
mov
jle
cs
cmp
lods
out
ds
test
testb
pop
scas
test
push
jle
sahf
jp
push
es
xchg
into
sbb
test
pop
jp
movsl
mov
incb
lods
mov
mov
push
lods
mov
fisubs
push
testb
jmp
dec
mov
jp
test
push
mov
push
push
lods
mov
cmp
out
mov
jle,pn
jle
add
inc
lods
jne
cmpsb
jbe
jbe
cmc
aam
mov
data16
jp
add
inc
mov
inc
add
or
out
push
sbb
jns
out
pop
push
dec
inc
sahf
out
sahf
je
bound
mov
cmpsb
lods
pushf
xchg
mov
jns
out
call
out
sahf
iret
rcr
jnp
jns
out
insl
push
pop
inc
out
sahf
out
and
xor
sahf
sbb
lret
sarb
jns
out
icebp
out
sahf
out
xchg
cwtl
test
mov
std
jns
out
loopne
fcmovbe
int3
out
sahf
out
scas
movsl
mov
sahf
orb
sahf
out
push
pop
push
jl
jns
out
push
adc
jns
xor
and
lea
fwait
nop
mov
sahf
out
aad
ret
enter
sahf
stc
repnz
in
ss
out
sub
adc
pop
out
sahf
out
outsb
jae
sahf
out
sahf
dec
inc
pop
push
idiv
jns
out
loope
fcmovnbe
int
jns
out
scas
movsb
mov
sahf
orl
sahf
out
push
pop
imul
jns
out
pop
adc
add
cmp
sahf
out
lcall
sahf
out
aam
ret
out
sahf
clc
repz
in
aaa
jns
out
sub
adc
push
out
sahf
out
outsl
jb
sahf
out
sahf
dec
inc
pop
push
add
jns
out
pop
sbb
es
jns
out
pop
push
dec
inc
sahf
out
sahf
jne
arpl
mov
cmpsl
lods
popf
xchg
mov
jns
out
jmp
out
sahf
fdivrs
jns
out
insb
addr16
pop
inc
out
sahf
out
and
xor
sahf
out
sahf
push
add
jns
out
out
lock
sahf
out
xchg
cltd
test
mov
or
sbb
xor
cs
sahf
out
push
out
sahf
pop
push
inc
dec
rcr
jns
out
lret
jmp
out
mov
out
sahf
mov
jns
out
mov
out
sahf
out
rcr
leave
les
ljmp
out
jno
pop
push
inc
out
sahf
out
add
sbb
out
sahf
aaa
cmp
sahf
out
ja
pop
push
inc
out
sahf
out
add
out
sahf
xor
es
jns
stos
mov
sahf
aad
iret
ret
jns
loope
sti
not
fstpt
out
int3
shl
clc
out
sahf
out
mov
out
sahf
mov
jns
out
sbb
xor
sub
jns
out
outsb
arpl
out
sahf
pop
push
inc
dec
fcmovbe
jns
out
ror
jecxz
out
sahf
out
mov
test
sahf
out
sahf
xchg
jns
out
adc
jns
out
bound
jne
out
sahf
push
pop
dec
inc
popa
insb
jns
out
jnp
push
pop
dec
out
sahf
out
or
push
sahf
out
sahf
cmp
mov
stos
cmpsb
test
out
ret
into
sahf
out
sahf
in
loopne
cli
mov
jns
out
lods
mov
jns
out
out
sahf
jmp
icebp
cld
addr16
sahf
out
jge
push
pop
dec
out
sahf
out
lar
sahf
cmp
and
add
out
push
sbb
xor
out
imul
push
pop
dec
inc
jns
out
lret
call
sahf
out
mov
scas
mov
orb
sahf
out
adc
and
ss
sahf
out
dec
inc
pop
push
sahf
out
sahf
insb
gs
nop
cltd
jns
out
orb
sahf
out
fcom
lret
out
sahf
cld
cmc
out
out
xor
out
sub
pop
push
or
add
jp
push
push
pop
inc
dec
stos
mov
mov
out
sahf
out
jecxz
icebp
clc
sahf
out
sahf
into
aad
jbe
jns
out
fs
push
pop
inc
out
sahf
out
ds
sub
sahf
out
sahf
sbb
or
out
jns
out
hlt
std
ret
out
sahf
out
scas
cmpsl
mov
sahf
mov
jns
out
pop
push
imul
jb
or
push
sahf
out
sahf
and
xor
fst
jns
out
iret
stc
lock
jns
out
xchg
pushf
xchg
mov
mov
sahf
out
test
sahf
out
movsb
lods
mov
sahf
out
sahf
orb
sahf
out
outsb
addr16
push
dec
out
sahf
out
xor
es
sahf
out
sahf
adc
add
xlat
fidivrs
out
cli
loope
jns
out
lahf
xchg
lea
mov
mov
out
push
pop
arpl
out
sahf
out
clts
sbb
sahf
sub
cmp
lcall
cmpl
fcmovnb
leave
sahf
out
sahf
idiv
in
or
jns
out
sbb
cs
cmp
jns
out
inc
dec
push
pop
sahf
out
sahf
outsw
je
mov
jns
mov
jns
out
jmp
out
sahf
int
xor
jns
out
and
adc
sahf
out
jns
imul
jns
pop
push
dec
inc
add
repz
repz
add
adc
inc
iret
repz
sbbb
insb
fsubrs
dec
lcall
repz
xchg
xor
iret
aam
jge
out
loope
xchg
mov
incl
dec
cmp
sub
in
psrlq
and
iret
lcall
and
adc
aas
cmp
cs
fwait
mov
ja
call
push
xchg
jmp
dec
fnstsw
fcoms
jg
xor
dec
out
cmpsl
pop
loop
outsb
pusha
sub
adc
sub
jmp
movsl
cmc
fdivp
iret
dec
mov
movsl
jne
cmp
clc
mov
jle,pt
repnz
incl
stos
lods
jo
lds
movsb
and
mov
jge
and
sub
or
jg
mov
push
xchg
scas
addr16
add
and
aas
les
lcall
pop
xorb
sbb
mov
inc
in
fnstcw
mov
jb
jne
mov
sahf
push
xchg
and
and
icebp
aas
sahf
jmp
xchg
iret
inc
push
loope
xchg
cld
out
add
inc
out
sahf
out
mov
push
push
or
or
sarl
adc
imul
adc
jb
out
sahf
out
sbb
sahf
sbb
in
jno
dec
idivl
cmp
and
dec
repz
cmp
incl
add
rorb
sbb
leave
leave
jae
or
pop
nop
xchg
xchg
sahf
out
jb
add
pop
or
sbbb
aas
out
mov
add
add
movsb
pusha
pusha
jb
and
cmpb
cmpsb
fisttps
mov
sbbl
mov
mov
cmovo
add
mov
inc
mov
mov
clc
iret
mov
mov
jle
test
push
add
mov
xor
jno
stc
rcr
fsubp
stc
xor
pusha
js
bound
and
cs
andb
adc
orb
push
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
push
dec
sub
push
pop
or
inc
add
dec
add
dec
xor
sbb
dec
xchg
add
out
pop
sbb
insb
sbb
notl
or
jne
add
idivl
data16
cmp
add
inc
add
cmp
outsb
cmp
outsb
iret
out
push
popa
inc
jbe
popa
imul
idivb
add
divl
inc
aas
push
pop
ja
out
gs
and
add
or
inc
imul
push
lock
testb
sti
adc
inc
mov
mov
insl
xor
jns
mov
and
jg
scas
mov
pop
fbld
sub
out
mov
jb
push
jns
sub
jl
mov
arpl
xchg
cmp
sbb
ss
push
xor
xchg
xlat
fidivs
jp
and
pop
dec
add
cmp
dec
and
jae
xchg
les
roll
sbb
clc
sbb
sti
push
imul
jp
jno
je
cmp
xchg
jbe
js
jp
inc
test
inc
push
inc
sbb
dec
and
fcompl
adc
add
dec
mov
add
out
sbb
push
xor
pop
cmpsl
adc
or
xor
xor
xor
pop
mov
cmp
clc
mov
ret
daa
jnp
and
out
push
sbb
mov
outsl
inc
outsb
addr16
inc
sarl
mov
jbe
pop
fisttps
jp
lds
sahf
fs
and
xor
push
mov
pop
pop
sbb
ss
adc
or
je
sbb
push
or
push
out
inc
ret
sbb
xchg
fs
ja
roll
and
out
fisubs
paddd
sub
ret
adc
cmpsb
jp
jno
adc
das
sbb
shrb
cmp
pop
jp
adc
dec
jnp
xor
mov
inc
aaa
xor
sub
jg
mov
pushf
sbb
sub
xor
stc
lock
push
je
insb
adc
push
lcall
lahf
ror
cmp
and
shlb
arpl
xchg
dec
xorb
mull
pop
jecxz
push
mov
addr16
dec
cmp
ret
pop
push
dec
sahf
insb
cmp
fcomp
pop
add
fcmove
adc
lret
mov
fs
add
setnp
or
sub
lret
fdivp
leave
dec
cmp
cs
vmread
outsl
repnz
cmovb
mov
shrl
movaps
sub
aaa
lret
add
add
sub
xlat
push
push
push
push
xor
out
push
insb
push
inc
push
xor
orb
inc
and
clc
pusha
add
push
jb
jg
addb
push
inc
gs
outsl
insl
insl
fisubrl
popa
outsb
fs
imul
insb
push
outsb
ja
fs
dec
outsl
fs
not
out
insb
gs
cmp
inc
and
popa
xorb
and
and
in
adc
stos
jb
testb
gs
arpl
addr16
fisubl
push
jne
jns
fistpll
pop
inc
fs
push
pusha
sub
adc
jnp
jne
cmp
push
jb
gs
imul
pop
fs
ja
dec
popa
insl
arpl
push
aaa
pop
gs
push
cmp
inc
inc
and
fsubrs
or
int3
mov
jbe
imul
js
fldcw
test
jns
mov
aaa
or
sub
jns,pn
andl
jne
dec
ja
jns
test
int3
lcall
xchg
sbb
mov
jo
mov
adc
jl
outsl
popa
fs
popa
fcmovnu
adc
dec
inc
dec
adc
imul
out
imul
imul
pushw
jbe
push
arpl
push
mov
fcompl
pop
push
adc
dec
subl
push
jns
subb
jae
mul
push
out
xchg
out
push
ret
sbb
xchg
push
push
inc
push
xchg
pop
addr16
pop
lods
inc
pop
aas
dec
in
popa
mov
popa
repz
addr16
inc
lret
aas
enter
add
fistpll
out
inc
loopne
sidtl
add
jmp
ljmp
das
add
pop
mov
int
push
jb
push
add
cs
mov
or
bswap
xlat
fidivs
sahf
sub
or
sbb
dec
les
loope
cmp
scas
cwtl
pop
shlb
pusha
smsw
sub
jb
insb
inc
adc
push
adc
mov
add
jns
mov
fsubs
dec
inc
nop
jnp
jo
rcrb
push
sahf
js
dec
dec
shlb
test
das
sbb
or
dec
xchg
and
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
