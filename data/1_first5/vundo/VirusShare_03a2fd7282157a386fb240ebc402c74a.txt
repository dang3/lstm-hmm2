jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
inc
cli
mov
lock
scas
pop
flds
or
add
add
or
add
add
addl
pusha
add
cmpsl
add
cwtl
add
add
add
add
add
testl
in
add
add
add
add
or
pop
add
add
add
add
add
add
test
inc
add
add
add
add
add
add
addl
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
aaa
add
add
add
add
or
aaa
add
add
add
or
sub
testl
js
aaa
add
add
add
lds
outsl
add
add
leave
add
add
jbe
or
addb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
mov
xor
pop
add
add
add
add
add
add
pop
add
add
inc
add
and
add
adc
add
rolb
test
xor
mov
add
add
add
add
or
or
pop
add
add
add
add
mov
js
xchg
add
add
loope
or
jmp
in
int3
add
add
add
add
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
popf
add
add
add
add
add
add
add
add
mov
and
add
add
add
sahf
add
push
add
add
add
add
add
add
add
sub
or
jno
sub
xor
testl
adc
pop
add
addl
xchg
add
add
testl
loope
add
bound
or
pop
add
add
lahf
add
add
pop
add
add
add
lods
add
add
add
add
add
add
add
mov
call
add
sbb
mov
fwait
add
add
cmp
add
add
add
aas
add
add
add
add
and
rolb
fildl
add
add
add
add
addl
aas
add
add
add
add
add
add
add
or
call
add
add
add
add
add
add
add
addl
stos
add
add
add
add
add
in
add
add
add
aaa
add
add
add
add
add
mov
pop
add
add
add
add
stos
add
add
add
push
add
addl
leave
add
add
add
add
add
cmp
testl
fwait
add
stos
add
add
add
add
add
add
stos
add
imul
iret
add
add
add
jo
push
or
push
xor
inc
mov
js
mov
mov
cwtl
or
insl
addb
in
fcmovnu
push
pop
test
and
out
inc
sub
cmpsl
cmp
arpl
jl
pop
stos
nop
sbb
inc
mov
xlat
stos
sbb
xlat
push
jge
fwait
add
mov
aam
cmp
push
scas
lods
jae
in
push
rcrb
sbb
fildll
test
ja
fsts
dec
cmc
xor
repz
lds
pop
les
xchg
test
sbb
mov
sbb
pop
adc
or
mov
shrb
push
mov
mov
sub
adc
cmovnp
les
xchg
rorl
or
test
clc
or
ljmp
pop
jl
mov
jbe
fildl
and
and
icebp
mov
mov
es
int3
mov
xchg
jno
sub
cmp
js
je
in
pop
and
insl
mov
lock
and
insb
out
mov
adc
movsb
jnp
xchg
fisttpll
mov
push
notb
addr16
sub
sbb
sub
orl
inc
lea
pop
push
mov
sar
or
jo
cmp
hlt
push
jle
adc
fadds
jp
int
mov
mov
pop
mov
cltd
scas
test
add
pop
insl
mov
mov
fnstcw
in
shrl
add
push
inc
add
movsb
jb
add
push
aaa
cld
adc
dec
sti
rorl
adc
sar
mov
dec
fs
dec
mov
adc
jns
jae
mov
loope
imul
inc
test
pop
in
stc
cmp
jecxz
lcall
imul
xlat
or
addb
hlt
mov
fldcw
cmp
icebp
cli
icebp
xchg
cmpsl
mov
out
sbb
outsl
and
std
push
movsl
add
aam
mov
cmp
cmp
fisubrl
out
hlt
and
or
and
ret
cmp
mov
pop
sarb
mov
ss
sub
xchg
test
adc
dec
inc
cmp
mov
or
dec
sbb
xor
iret
mov
ss
ret
scas
mov
scas
lods
mov
int
fidivrs
jno
rclw
pop
icebp
jbe
loope
sbb
jecxz
or
lret
call
cvtps2pi
in
fs
sub
mov
jb
std
xchg
xor
add
push
lds
push
outsb
test
aaa
xlat
push
inc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
or
out
jge
or
jle
push
insl
pop
jns
imul
popf
sub
adc
sub
ja
pop
insl
pop
jge
dec
aaa
jae
lods
xlat
mov
xchg
repz
cmpsl
int
fstpl
xchg
mov
pop
pop
pop
xor
lods
mov
out
cmpsl
mov
les
and
js
bound
and
xor
hlt
es
call
xor
xchg
pop
jns
loop
js
testb
mov
sbb
int
clc
push
mov
pop
inc
inc
fs
imul
popl
clts
xchg
arpl
sbb
push
sbb
sbb
sub
and
lea
pop
divl
pushf
or
xchg
jo
xor
ret
rcrb
xchg
jl
mov
pop
mov
insl
je
xchg
call
ret
ret
ror
mov
out
mov
das
in
out
div
add
cmpsl
mov
mov
sbb
daa
dec
iret
xor
rorl
out
xor
popa
sbb
enter
cmp
cmpsb
out
xchg
int
sub
xchg
sarl
fistpll
jle
jno
aas
jbe
dec
and
outsb
dec
xchg
enter
lods
hlt
mov
imulb
pop
popa
ss
and
jge
dec
aaa
pop
lods
xlat
mov
xchg
xchg
std
cmpsl
int
fldl
push
cmp
pop
insl
pop
jge
dec
aaa
pop
lods
xlat
mov
xchg
xchg
std
cmpsl
int
fldl
xchg
imul
sub
dec
or
in
add
xor
xchg
xor
loopne
insl
dec
cmp
add
xchg
and
dec
insb
xchg
push
call
or
fsubrp
xlat
jns
xchg
dec
js
rcrl
aam
and
mov
cwtl
icebp
cwtl
or
and
push
sub
push
inc
mov
addb
cmp
nop
cmc
imul
inc
mov
jecxz
jno
pop
sub
pop
push
enter
inc
andb
leave
imul
inc
xchg
adc
pop
add
or
lret
mov
pushf
shrl
fdivr
xchg
cs
adcb
adc
fmul
mov
pop
sub
push
fiadds
inc
test
insb
xchg
icebp
jmp
cmp
xchg
jo
mov
mov
mov
pop
pop
push
inc
stc
dec
testl
outsl
inc
push
xchg
daa
or
arpl
jb
dec
movsb
aas
mov
xchg
cmc
add
stc
jge
rcrb
ret
pop
cmp
adc
data16
sahf
push
pusha
inc
cltd
imul
arpl
stos
ret
lcall
xchg
lcall
sbb
xor
clc
lret
push
mov
test
movsl
adc
pop
aaa
testl
lds
dec
push
sbb
adc
pop
xchg
sbb
enter
push
dec
sub
push
sub
mov
gs
and
push
daa
cmp
lea
jns
inc
pop
xchg
mov
fsubr
movsb
pop
mov
aad
and
mov
xor
jno
incb
add
xor
push
sarl
xor
out
insb
mov
cld
pop
repz
and
cmc
jmp
pop
xchg
loopne
pop
or
mov
inc
fmulp
xor
sbb
cltd
lods
pand
mov
lcall
stos
bnd
xchg
mov
loope
insl
mov
and
sbb
pushf
sub
daa
hlt
pop
cmp
sbb
pop
inc
push
xchg
dec
inc
das
dec
jbe
adc
rcll
dec
jl
lcall
sbb
scas
nop
jl
push
inc
or
lahf
fisttpll
movsb
sahf
cmc
mov
cs
mov
das
adcb
inc
adc
ss
scas
sub
mov
mov
jnp
in
cli
xchg
clc
fildl
dec
adc
lods
mov
dec
mov
xchg
add
xor
cwtl
notl
std
cmpsb
or
mov
or
sub
or
xchg
lret
addl
addr16
leave
inc
mov
push
push
inc
adc
pop
bound
lret
movsl
dec
fildll
cmpsl
mov
repnz
inc
out
sub
sub
jp
or
or
push
hlt
add
imul
mov
mov
ficoms
popf
dec
push
sub
dec
pop
push
cltd
sub
js
mov
cmpb
orb
mov
mov
sbb
and
gs
int
pusha
sbb
ret
xor
lahf
aaa
je
pushf
or
sbb
insl
jecxz
dec
xchg
sub
ss
pop
push
mov
jmp
pusha
stos
mov
data16
popf
inc
cmp
sbb
pop
ja
ljmp
adc
sti
call
mov
and
xchg
mov
cmp
ds
mov
jge
js
clc
xor
xor
sbbl
jmp
sti
xor
das
or
xor
nop
scas
andl
pause
nop
pop
shr
jg
mov
jmp
push
lret
mov
adc
rclb
inc
popa
adc
popf
sarb
stc
stc
mov
movsb
inc
mov
lret
push
dec
enter
mov
adc
and
pop
fdivl
mov
sub
out
and
ds
pop
icebp
daa
pop
popw
mov
pushf
jae
adc
int
fidivrs
adc
or
add
lahf
cmp
in
out
ljmp
fistl
dec
jmp
adc
out
inc
adc
cmp
push
and
in
mov
daa
jb
push
pop
pushf
cmp
adc
sbb
stc
test
cmpsb
jnp
js
sahf
add
fsubl
fcmovne
out
enter
adc
jle
pop
mov
lcall
pushf
sbb
movsb
inc
movsl
shll
cmp
les
cmpsl
orl
dec
dec
notb
hlt
and
cltd
mov
mov
mov
push
fisubrs
fsubrl
sbb
cmp
xor
xchg
lods
pop
pop
fwait
std
out
cmp
or
into
adc
sbb
test
je
mov
pop
push
jmp
or
nop
in
or
or
dec
jp
cs
dec
out
cmp
or
cwtl
mov
jge
mov
jnp
lahf
dec
rolb
mov
and
aas
fadd
mov
adc
mov
leave
hlt
mov
out
movsl
insl
mov
adc
inc
cli
xchg
inc
dec
leave
imul
sbb
orb
inc
xor
xchg
mov
je
in
pop
movsb
lock
scas
mov
into
repnz
fs
jb
and
and
mov
cmp
add
push
lret
pusha
ret
mov
and
loopne
sub
ret
xchg
stos
pop
aas
jg
adc
setns
mov
sbb
sub
in
cmp
lock
xchg
mov
cmp
mov
mov
pop
ljmp
popa
lock
fisttpl
dec
inc
aam
mov
or
dec
xchg
cmpsl
mov
dec
in
outsb
ljmp
es
and
mov
jne
cmp
adc
rclb
pop
xchg
fs
add
shll
sbb
sahf
in
add
sub
pop
inc
inc
pop
movsl
xor
cli
lea
xor
in
shrb
movsbl
pop
push
dec
repz
scas
icebp
es
jbe
or
ss
out
xchg
int
call
fs
mov
lret
and
mov
xor
int3
int3
jg
insl
sbb
rcrl
xor
adcl
push
subl
out
xor
je
ljmp
iret
sbb
call
add
incb
fisubl
mov
jle
repnz
pop
aam
sub
push
push
divb
xchg
or
add
pushf
lods
stos
mov
mov
add
repnz
sub
dec
decl
push
sub
push
add
or
mov
adc
cmp
imul
aaa
in
adc
push
loopne
mov
xchg
test
fsubrp
test
and
aad
sub
mov
inc
pop
sbb
cmp
push
jo
xor
vcmppd
data16
mov
scas
jg
cmp
lcall
out
xor
leave
outsb
mov
adcl
xchg
xchg
or
aas
insl
fcmovnbe
test
test
sbb
fisubrl
scas
loope
lods
mov
scas
das
int
andl
pop
jb
scas
pop
mov
mov
shll
enter
push
sbb
sub
cmp
dec
pop
push
test
jle
inc
add
mov
pop
mov
mov
jl,pt
cmp
ss
ss
or
or
clc
pop
or
bnd
test
push
jns
divl
sahf
or
ret
in
cmc
andb
sbb
cmc
sub
mov
icebp
sub
incl
jns
inc
pop
scas
cmp
jp
mov
mov
mov
cwtl
pop
mov
adc
jne
jo
mov
mov
cmpsb
sub
test
outsb
hlt
pusha
dec
jno
fwait
xchg
icebp
aam
pop
in
in
pop
imul
cmp
out
inc
push
sbb
cmp
pop
cltd
sbb
stos
cmp
test
jno
sbb
cmp
mov
xchg
and
mov
daa
cmp
xchg
pop
push
adc
es
mov
pop
sarl
loopne
xchg
mov
push
popf
cmpsb
push
divb
jmp
notb
sub
mov
sub
sub
ret
pushf
or
xor
mov
jo
inc
icebp
dec
popa
in
and
inc
xor
pop
inc
pop
push
movsl
adc
movsb
test
cmp
or
add
adc
and
jo
pop
movsl
int
sbb
mov
mov
add
adc
enter
das
xor
pop
inc
sbb
dec
lret
mov
cmpsb
and
rclb
leave
loopne
cmc
out
or
mov
shl
cmc
xor
xchg
loop
movsl
push
or
fimuls
lods
adc
push
push
popf
shr
mov
in
in
fldl
enter
mov
lcall
or
fldt
cld
mov
lcall
mov
pop
les
lcall
inc
sbb
inc
movsb
mov
and
addr16
insb
data16
mov
cmp
inc
test
pop
ljmp
xchg
dec
je
cmpsl
xchg
cs
add
xor
loopne
pop
push
sti
xor
sbb
sub
hlt
push
in
jno
or
stos
stc
out
or
nop
jge
cmpsb
imull
stos
lods
fwait
push
sub
mov
fcoml
repnz
jbe
jbe
mov
xor
rclb
sarl
or
xor
add
loop
mov
into
test
out
xchg
dec
jge
push
sbb
cmp
cld
push
xchg
xchg
xchg
dec
mov
xor
icebp
cs
cmpb
xchg
push
adc
cmp
jnp
repnz
gs
dec
cmpsl
jmp
in
call
notb
mov
pop
adc
jae
jo
mov
cmp
pop
call
pop
jnp
addr16
add
hlt
ret
jecxz
xor
add
rorl
jo
call
add
push
in
xchg
icebp
test
mov
cwtl
in
leave
lret
and
je
dec
push
push
mov
pop
dec
lret
mov
movsb
inc
mov
adc
outsb
jo
adc
mov
aam
jle
xor
add
int3
nop
xchg
xorl
mov
push
dec
mov
insl
xor
fwait
nop
lea
lods
das
rcl
mov
pop
les
aaa
lods
sub
inc
daa
sub
mov
pop
outsb
outsb
fwait
imul
push
mov
cmp
repnz
mov
sarb
mov
push
addr16
push
jmp
jg
notl
mov
add
adc
push
xor
inc
enter
adc
loope
sub
insb
lret
push
push
add
idivl
or
xchg
mov
push
cmp
shr
test
xchg
xchg
scas
filds
xor
and
sbb
inc
mov
or
in
xchg
jge
adc
cmp
add
mov
imul
movsb
sbb
fucomp
mov
cmp
out
jb
or
mov
dec
pop
cmp
les
mov
cmpsl
xchg
lea
incl
bound
lds
in
pushf
movsl
cmp
jecxz
inc
jne
jno
adc
push
pop
mov
in
loopne
mov
notb
inc
cs
push
dec
and
mov
and
js
and
ds
or
fildl
outsl
xor
cwtl
int3
fs
test
and
xchg
dec
icebp
inc
jo
sti
cmp
pop
cld
shll
test
or
scas
std
fisttpll
loop
shlb
and
jecxz
out
pushf
in
push
inc
xor
loope
mov
shlb
mov
mov
xor
mov
pop
and
pop
push
andl
mov
mov
in
and
pop
rorl
sti
cmpsb
enter
pop
mov
dec
cmp
cmpsl
sbb
push
mov
fcoms
lret
fisubrs
cmp
pop
imul
test
outsb
xchg
ret
add
jmp
or
and
pop
mov
not
pop
mov
lods
aas
cmp
popf
sub
nop
mov
jne
stos
andb
fsubrs
mov
iret
mov
xor
mov
arpl
jg
push
stos
push
inc
lret
ficompl
push
push
cmpsb
jge
test
mov
mov
cmc
fs
dec
dec
jmp
popa
movsb
fwait
dec
mov
jne
insb
stos
pop
rcl
pop
flds
les
out
cmp
adc
stos
das
or
in
jae
mov
scas
out
ja
mov
icebp
dec
movsl
and
sub
fistps
movsb
jns
int
dec
and
push
mov
into
xchg
xor
orb
repz
push
cmp
out
sub
mov
in
imul
in
inc
or
ja
data16
adc
jmp
pop
adc
fcomps
je
imul
sbb
lahf
inc
push
xlat
pop
adc
push
fimuls
jae
dec
inc
xlat
es
xchg
xorl
jbe
imul
inc
mov
sbb
or
mov
out
mov
fists
xor
cmpsl
xchg
or
mov
popa
sbb
testl
iret
fcmovu
xor
xorl
adc
outsl
fs
add
xchg
aaa
lcall
jmp
out
pop
push
inc
jmp
iret
fwait
je
lret
push
dec
sub
ds
sub
xchg
sbb
les
insl
inc
xor
pop
push
rclb
iret
leave
roll
sub
js
sti
les
cmp
pop
mov
roll
lods
pop
push
xchg
rorb
dec
out
fsubrs
adc
push
and
push
xor
add
pop
iret
dec
xor
jmp
insb
out
mov
inc
push
sbbb
cld
insb
jg
xchg
scas
sub
jno
orb
clc
ret
in
and
test
jb
jns
rcll
xchg
pusha
and
lods
outsl
pause
cmpsl
cld
xor
std
xor
xchg
or
packssdw
ret
pop
cmp
sbb
lds
into
cmpsb
ja
je
dec
xlat
rcll
xor
mov
das
cmp
sub
fldl
out
imul
mov
ffreep
loope
mov
jmp
jae
adc
dec
lahf
mov
addl
fwait
cmpl
mov
in
test
out
pusha
std
aas
xor
jnp
xor
repnz
jne
xchg
fucomp
push
sahf
cli
add
inc
inc
dec
pop
iret
es
sub
notb
rorb
fwait
dec
daa
fcomps
cli
jmp
pop
xorb
xchg
jae
sub
mov
sub
fstpt
push
push
rorl
adc
lock
pop
fmul
push
jge
sub
dec
mov
inc
jle
xor
in
push
lret
sbb
psubsb
hlt
inc
xchg
jnp
or
ret
test
inc
pusha
mov
stc
mov
xor
mov
xor
mov
jne
inc
jno
sbb
lock
mov
inc
mov
mov
inc
inc
sbb
sbbb
add
dec
iret
dec
data16
add
inc
cmp
push
add
out
dec
subb
pop
xorl
or
jbe
fisubrs
push
les
jge
enter
xor
leave
push
mov
lds
repnz
sbb
pop
loopne
pop
fstpl
dec
icebp
jge
fs
cmc
out
jbe
in
push
sbb
dec
xor
jnp
nop
push
dec
mov
mov
rcrl
jle
sarl
jns
pop
iret
loope
lock
stos
in
cmp
cmc
arpl
mov
fnsave
rcr
adc
cmpsb
lock
sti
std
lds
cmp
lea
add
aaa
lret
push
sbb
sub
mov
and
sbb
push
rolb
es
ljmp
cltd
inc
lret
mov
es
push
outsl
js
out
sub
mov
popa
inc
es
fcomps
push
outsl
mov
fistl
xchg
jle
dec
fucompp
pop
loop
dec
stos
xor
sbb
adcb
or
fdivrs
ja
and
sahf
jg
sti
jl
mov
mov
push
fimull
dec
andb
bound
repz
aam
xchg
add
fiadds
fsubrl
xor
or
add
mov
jg
jno
xchg
add
rcrb
enter
dec
sub
lcall
push
sub
add
or
inc
enter
jb
movsl
sub
sub
and
dec
lods
ficoms
fwait
lock
in
dec
hlt
mov
popa
sub
or
fcomp
ja
lea
shrl
int3
adc
xchg
xchg
mov
push
jne,pn
push
push
mov
sub
hlt
test
shll
cmova
xor
xchg
scas
add
mov
mov
movsb
scas
scas
test
cmp
mov
clc
daa
sub
add
mov
sbb
lcall
test
and
inc
cmp
lcall
stc
loopne
shl
or
enter
add
or
cmpsb
test
xor
cmp
dec
dec
mov
dec
aad
and
ds
mov
push
jle
js
ret
gs
js
adc
in
loopw
push
xor
popa
xor
js
cmpsl
es
and
mov
das
scas
enter
ret
xor
xchg
div
mov
push
orb
dec
cmpsb
jns
shll
pusha
stc
or
ja
jge
mov
hlt
add
ret
push
leave
sbbl
scas
cld
das
pop
fstpt
sub
and
xchg
incb
mov
push
js
loopne
and
ret
fs
jle
fistpl
pop
insb
jb
adc
mov
pop
test
inc
cmp
popa
lahf
xchg
jmp
sub
repz
popf
mov
pop
mov
sti
push
or
xchg
xor
xor
mov
sub
test
cmc
cmp
mov
push
inc
jnp
shll
lea
mov
add
es
xor
mov
arpl
cmp
jp
daa
loop
ljmp
add
rol
repnz
lahf
xchg
jbe
fldcw
push
ja
add
in
aaa
mov
jg
ret
mov
jmp
js
or
test
dec
mov
add
iret
call
call
mov
divb
cmc
jecxz
mov
adc
inc
aad
xor
test
inc
cli
lods
stos
adc
call
sbb
fwait
mov
jae
dec
push
in
imul
js
or
dec
or
ficomps
or
xchg
pop
or
ficoml
out
scas
ds
jbe
lds
subb
or
cmp
xor
xchg
sub
xchg
shll
fdivl
shll
test
jb
insb
cmpsl
xor
sbb
inc
leave
mov
js
loop
jmp
scas
or
push
and
cmp
mov
shrb
mov
and
push
in
negl
xchg
cld
dec
and
iret
dec
add
imul
cmc
in
fists
out
sbb
inc
pop
mov
mov
dec
jle
aam
sahf
pop
enter
sbb
jnp
orb
or
daa
mov
dec
cmp
sbb
leave
sbbl
xchg
out
add
addr16
cmp
xchg
adc
cmp
mov
cmp
cli
cmpxchg
loope
mov
rcrb
jge
arpl
mov
mov
popf
ss
shll
fimuls
repz
aaa
cld
push
or
loopne,pt
push
ret
mov
pusha
sti
mov
sysenter
mov
pusha
ds
std
pop
leave
daa
cmpsb
or
sbb
inc
loopne
popf
sbb
xchg
mov
negl
mov
push
outsb
jmp
shll
cltd
fisubrl
dec
pop
cld
or
pusha
add
iret
inc
jnp
outsb
imull
or
dec
cmc
fs
cld
jl
xchg
mov
jb
xlat
xchg
dec
dec
jnp
shlb
dec
mov
jle
pop
xchg
pusha
leave
sub
test
cld
jg
inc
xchg
xor
adc
into
dec
pop
sub
mov
ja
pop
and
data16
cmp
add
leave
add
adc
leave
mov
sub
movsb
int3
adc
sub
mov
lahf
and
inc
add
xor
mov
mov
pop
sub
dec
pop
xlat
iret
sbb
adc
push
aad
sbb
mov
mov
xchg
neg
lahf
pop
loope
jno
or
dec
and
nop
jno
rorl
test
pop
pop
mov
push
call
jmp
jle
jbe
cmp
js
daa
cld
sbbb
pop
lock
and
push
iret
lea
mov
ja
fisttpll
scas
repnz
test
and
cmp
xchg
mov
pop
dec
scas
jle
add
stos
call
cmpsb
pop
mov
testl
push
push
pusha
movsl
push
fsubl
xor
push
jl
push
dec
cmp
cmp
pop
insl
pop
jge
dec
aaa
pop
lods
xlat
mov
xchg
xchg
std
cmpsl
int
fldl
push
cmp
pop
insl
pop
jge
dec
aaa
pop
lods
xlat
mov
xchg
xchg
std
cmpsl
int
fldl
push
xor
ja
push
insl
adc
daa
dec
ss
ret
lods
xlat
mov
xchg
mov
mov
leave
jnp
out
jmp
pop
jge
int
popf
push
sub
dec
imul
lock
pop
test
dec
movsl
pop
pop
dec
mov
subb
ret
push
dec
lea
rcr
and
ds
adc
adc
push
lods
push
pop
mov
insl
xchg
sbb
ret
frstor
int
std
and
adc
inc
lods
push
pop
mov
insl
mov
fisubrl
or
and
sbb
adc
push
sub
add
adc
cmpsb
adc
push
ljmp
mov
mov
orb
outsb
sbb
dec
lds
mov
adc
lret
daa
jmp
cld
pop
mov
frstor
dec
mov
repnz
fdiv
in
mov
push
jb
mov
push
mov
ret
fs
sbb
adc
int
lea
push
lcall
loop
sub
rcr
scas
lds
jo
data16
or
lods
popa
lods
mov
inc
adcb
cltd
clc
cmp
es
xor
pop
jp
scas
inc
sahf
mov
insl
mov
fldt
sub
sbb
or
inc
lods
ss
cs
subl
js
bound
dec
test
mov
jge
bswap
and
inc
fnstsw
sub
cmp
js
inc
sarb
mov
xorb
push
call
aaa
cmp
dec
xlat
cmp
or
pop
mov
rcr
and
xor
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
adc
and
cwtl
lods
testl
adc
lock
and
repnz
pop
in
test
icebp
inc
rcrl
into
leave
inc
fimuls
adc
push
xor
pop
insb
ss
pop
mov
pop
pop
incb
push
adc
xchg
rcrl
cltd
aad
and
shll
daa
sbb
insb
xchg
jo
lahf
xchg
xor
dec
xchg
lods
push
pop
rcrl
inc
test
sbb
rorl
adc
or
out
and
sub
xchg
or
xchg
les
jne
adc
out
or
mov
mull
cmc
cmp
ret
js
adc
leave
jb
and
mov
mov
test
pop
test
push
dec
adc
outsb
inc
push
pop
pusha
pop
popf
bnd
frstor
cmp
out
xchg
sub
sarl
dec
or
xor
jno
stos
jne
fcoml
les
xor
and
rcrl
jmp
test
mov
aam
jecxz
add
mov
mov
jbe
imul
outsb
into
mov
int
push
add
jb
cmc
dec
adc
and
rcl
rcl
inc
mov
cmp
cmpsb
inc
call
out
sarb
std
outsb
dec
in
lds
lock
mov
and
lods
pop
and
int
je
sbb
and
ret
jmp
test
dec
push
inc
cwtl
adc
xchg
mov
std
cmc
movsl
inc
loopne
dec
xor
sbb
push
out
movsb
fists
cmpsl
push
mulb
push
addr16
icebp
sahf
pop
icebp
data16
pushf
dec
push
sbb
incl
int3
pop
xor
mull
jl
sub
stc
lods
mov
pop
sub
xor
ljmp
mov
pop
sbb
adc
push
and
data16
bound
imul
pop
jecxz
ror
dec
cmpsb
cmp
mov
fucomip
in
sub
out
push
push
mov
and
popf
pop
or
pushf
dec
push
mov
cltd
cmp
inc
jno
xchg
pop
pop
inc
sbbl
adc
cmpb
iret
cmp
pushf
cld
mov
cmc
cs
jns
pop
mov
jb
out
mov
popf
and
sbb
pop
enter
in
adc
and
lods
inc
insl
sbb
sar
out
cmpl
and
pop
mov
adc
pop
in
fs
xchg
mov
test
aaa
sub
sbb
pop
in
mull
movsb
es
adc
das
jp
pop
jge
ficompl
mov
mov
cmp
cmpsb
out
ret
push
xor
rolb
pop
call
cmp
add
dec
add
push
test
mov
sbb
enter
push
jbe
clc
sbbb
cwtl
adc
outsl
sbb
fisubs
pop
loop
fistl
iret
mov
pop
xor
rcrl
xor
addb
mov
orb
les
cld
addr16
stos
pop
add
js
ss
add
popa
add
sbbb
test
xchg
cmp
scas
push
data16
pop
cmp
loop
pop
dec
xor
enter
xchg
jmp
dec
in
insl
lds
inc
pop
sbb
mov
mov
push
mov
xchg
sub
jmp
push
stos
cmp
lods
cmpsl
lret
push
loopne
iret
mov
int
out
sub
lods
and
add
test
push
fnsave
test
or
fwait
js
popa
ds
lock
insb
sub
loop
loope
sbb
sbb
out
fsubrs
outsl
jb
outsb
hlt
pop
jmp
xor
cld
testb
sub
shll
jo
cmpsb
imul
roll
negb
cmpsl
stos
lods
scas
xchg
popf
cmpsb
popf
push
loop
push
lods
cmp
sbb
fsts
or
jmp
pop
sti
mov
push
cmc
mov
jae
add
and
icebp
aam
and
xor
xchg
cmp
js
or
pop
pushf
es
pop
mov
sub
xchg
popa
mov
test
out
xor
sbb
dec
jmp
push
pop
or
push
pop
add
xchg
js
fdivl
xlat
push
fcmovnu
scas
cmp
movsb
pop
rorl
xchg
icebp
inc
insl
mov
mov
filds
arpl
pop
mov
mov
mov
cmp
loop
pop
add
andb
sbb
test
andb
xchg
add
sbb
and
push
or
cmp
mov
cmp
xor
and
cmc
es
and
cmpsl
mov
lret
pop
scas
enter
push
or
inc
push
add
lahf
aas
push
cmpsb
add
jo
dec
ficompl
clc
test
mov
pop
mov
push
add
sahf
fistl
orl
daa
or
add
lret
lahf
sbb
xchg
test
inc
sbb
mov
sbb
jns
mov
sti
mov
repz
adc
sarb
dec
cltd
aam
dec
pop
jae
cmp
notb
lcall
add
test
js
or
inc
xchg
imul
dec
dec
sti
out
lea
mov
mov
push
push
push
popa
dec
mov
xchg
sub
jge
push
cmp
test
aam
pop
out
mov
arpl
mov
outsl
mov
jbe
out
sbb
sbb
leave
jae
xchg
mov
push
mov
mov
add
pop
push
pop
or
cmp
add
pusha
mov
jno
mov
inc
repz
mov
js
pusha
aaa
inc
jne
mov
fimull
shlb
loop
shll
push
sarb
repz
cltd
fisubrl
sub
dec
cmp
fldenv
loope
or
xchg
dec
sbb
xor
notl
cmp
clc
push
xchg
lcall
scas
in
insb
and
gs
scas
jl
add
shlb
mov
in
cmp
clc
movsb
int
dec
cwtl
aam
ljmp
sbb
jae
jle
sbb
sub
rcrb
stc
int
or
es
pop
and
jo
gs
pop
fbstp
sub
or
stc
push
push
push
mov
aad
cmc
outsb
test
mov
enter
ljmp
mov
dec
in
sub
repz
or
into
and
inc
dec
xor
xlat
es
inc
xchg
jb
sbb
inc
dec
popa
adcb
hlt
xchg
and
outsb
out
pop
push
xor
scas
jbe
adc
push
in
cmp
cli
ja
ret
jb
les
xor
jo
sbb
out
adc
dec
inc
xor
gs
lret
lcall
inc
test
xchg
jns
les
in
fidivl
scas
pushf
in
xchg
in
ret
lahf
test
sub
rorl
cmpsl
rclb
push
mov
les
adc
fists
sbb
sarl
sub
mov
int3
jnp
xchg
mov
rorb
js
into
call
out
and
jne
mov
mov
lret
in
xchg
out
and
into
test
adcl
cmp
jmp
xorl
out
pop
in
lds
pop
fs
mov
mov
jnp
mov
pop
adc
push
mov
bnd
mov
rcr
and
subl
dec
sbb
test
aad
aaa
xor
mov
pop
dec
sub
jmp
cld
and
testb
xchg
fwait
sarb
es
nop
inc
sub
lahf
push
sub
inc
sarb
push
enter
leave
cld
pop
movsl
frstor
pop
test
push
cmp
lods
imul
add
xor
ja
add
dec
xor
dec
push
xchg
pop
mov
dec
adc
lahf
lods
test
mov
out
pushf
adcl
lds
mov
mov
and
push
xor
and
in
scas
cmp
scas
add
cmp
in
rcll
sbb
inc
mov
mov
adc
js
out
call
add
jne
in
idivb
jmp
test
mov
sub
dec
rcll
push
iret
movsb
fadds
out
call
cmpsb
sbb
rclb
scas
f2xm1
pusha
fs
xor
pop
jecxz
mov
fldl
push
outsl
push
cmp
outsl
call
ds
loop
out
jp
negl
pop
mov
ds
ja
iret
pop
in
loope
in
pop
mov
adc
mov
lcall
hlt
fs
int3
repz
mov
imulb
imull
lahf
ds
js
lds
xchg
add
int
inc
mov
xor
xchg
test
xchg
jb
rdmsr
pop
pusha
lock
in
push
jmp
mov
stos
adc
ret
xlat
mov
jecxz
mov
or
loop
orl
idiv
inc
mov
popa
fldt
cli
xchg
cld
xor
add
cmp
sbb
outsb
enter
bound
jb
je
jo
sbb
pop
and
mov
push
dec
xchg
sbbl
push
movsl
mov
test
mov
push
shrb
add
sbb
dec
push
pop
cld
inc
out
push
xor
imul
in
mov
mov
pop
inc
xor
sub
into
mov
xchg
cmp
pop
add
cmpsl
dec
fstpl
xor
shr
mov
push
fldl
int
pushf
mov
hlt
inc
adc
out
jno
sahf
lods
loop
and
push
push
mov
stos
push
xor
add
push
add
push
loope
mov
jge
sub
sub
mov
sub
cmpl
push
mov
subl
scas
scas
inc
xor
test
stos
xor
ljmp
popa
xor
add
lock
ffree
xor
enter
xchg
stc
mov
insb
dec
add
push
sbb
jl
jp
bound
jl
pop
notl
ss
lods
stc
xor
fs
jae
lods
ss
insb
subl
pop
inc
iret
mov
cs
add
lret
push
es
inc
xor
push
push
in
fistpl
repnz
aas
xor
inc
adc
mov
jmp
or
fnsave
sbb
movsl
add
cmovs
loope
stc
pop
adc
outsl
jle
mov
push
in
test
add
fcmovnb
and
lea
pop
dec
adc
lcall
dec
jno
pushf
pop
add
adc
aaa
cmc
jle
push
adc
lods
int3
popa
data16
movsl
test
scas
popa
adc
sub
hlt
or
add
rcrl
lret
push
pop
add
dec
xchg
and
xchg
repnz
rorl
push
movsl
mov
xrelease
sub
clc
sub
repz
cmp
shlb
ss
aas
pushf
pop
cmpsl
repz
sti
sub
sbb
mov
or
adc
dec
mov
stos
aam
fsubrs
inc
pop
and
xchg
mov
dec
popa
je
fscale
clc
shr
inc
mov
ret
push
push
add
je
mov
xchg
pop
fidivrl
rcrb
test
es
test
leave
mov
imull
mov
pop
ljmp
incl
lahf
cmpsb
dec
outsl
bnd
wbinvd
enter
cmp
clc
add
mov
test
and
jmp
cltd
jp
mov
lods
jmp
fadds
cltd
adc
sub
fimull
ret
inc
xchg
ret
fistps
and
mov
and
mov
test
cmpb
lcall
xor
shl
inc
hlt
test
popf
cmpsl
insl
mov
mov
cmp
cmp
popf
adc
iret
mov
sbb
jo
push
repz
cmpsb
andb
jo
mov
inc
mov
stos
sahf
aad
sub
push
cmpsb
ftst
sub
push
sub
xlat
decl
xor
movsl
add
fldl
test
dec
and
sbb
cvtpi2ps
outsb
inc
jecxz
jecxz
inc
or
or
daa
fmull
mov
test
int
mov
mov
mov
dec
pop
imul
and
js
inc
pop
sbb
or
push
psubb
adc
add
pop
fadd
rcll
mov
andb
add
mov
xorl
dec
insl
mov
sub
je
sub
aaa
or
xor
js
pop
xchg
insl
jnp
rorl
shr
sbb
push
xor
loope
js
repnz
xor
fstl
jne
adc
sub
pushf
pop
je
pop
xchg
jne
jge
or
inc
inc
jo
test
lret
mov
repnz
out
jnp
fcomps
sbb
subb
int3
mov
subl
push
out
fsubs
push
orl
and
fistl
bound
mov
sbb
xchg
pop
cld
and
pop
or
mov
xchg
inc
dec
xor
dec
jle
jns
cmp
xchg
xchg
mov
aas
sbb
sub
mov
mov
dec
mov
movsb
movsb
test
jb
mov
leave
pop
dec
test
sub
jae
movsb
dec
xor
push
xchg
and
out
sub
mov
sbb
and
sbb
out
push
sub
mov
scas
pop
insl
jp
cmpsl
jg
xor
sub
cmc
jbe
push
push
repz
jl
push
xchg
sahf
insb
dec
mov
test
mov
stc
cmp
mov
xchg
pop
mov
out
in
xchg
repnz
and
stos
fiadds
lret
out
jne
repz
xchg
les
inc
jp
push
xchg
stos
popf
lahf
fiaddl
pushf
jno
data16
pop
cwtl
mov
aaa
testl
sti
cmc
add
inc
push
and
mov
lds
dec
lcall
outsl
stc
cwtl
sqrtps
imul
cli
sti
jnp
add
nop
and
sbb
push
pop
popa
push
mov
stos
push
push
pop
out
jge
push
sub
pop
lea
pop
arpl
js
das
cld
pop
mov
lock
popf
subl
pop
add
adc
out
sti
gs
cmp
mov
jle
loope
xchg
inc
and
ret
xor
xor
lods
pop
and
test
cld
or
scas
fidivrs
mov
push
add
cmp
sbb
aaa
mov
insl
dec
mov
xchg
cmp
mov
adc
jnp
leave
popf
sbb
clc
mov
sahf
jno
sahf
mov
scas
popa
loopne
xor
and
add
imul
test
mov
andb
cmpsl
dec
les
icebp
xchg
ja
add
sub
fbstp
fdivrs
and
in
mov
test
pusha
push
xchg
ds
sub
cmp
test
movsb
or
inc
stos
aas
sahf
jno
pop
mov
adc
andb
mov
sub
test
push
test
or
incl
pusha
cltd
pushf
loope
fistps
cmp
mov
mov
and
push
mov
cmpsl
addl
mov
adcb
or
jo
stc
dec
mov
cwtl
movd
sub
and
fwait
hlt
and
and
loopne
dec
loope
cmp
dec
jns
xchg
and
pop
sub
mov
jb
mov
add
adcb
add
js
cli
push
into
rol
pop
lahf
push
adc
jmp
outsb
rcrb
ds
add
aaa
sub
gs
fstpl
outsl
in
sub
out
mov
sbb
xor
xor
mov
inc
rorb
ret
xchg
rcr
or
insl
mov
xor
xchg
inc
in
inc
inc
bound
pop
imul
sbb
mov
xchg
data16
pop
xchg
faddl
xchg
or
push
nop
sbb
pop
mov
mov
pop
pusha
xchg
imul
fcomps
shrl
test
std
rcrb
sti
sub
bound
or
xor
xchg
push
xor
pop
inc
mov
sub
movsb
jno
enter
lret
imul
and
and
jecxz
sub
and
jae
pop
sub
dec
iret
inc
cmp
lods
add
and
or
fwait
mov
add
loop
fstl
fwait
mov
xor
cmp
scas
inc
xor
in
push
or
push
push
clc
popf
inc
les
in
sub
and
fimuls
mov
adcl
xchg
int3
fldenv
movsl
aam
sti
cmpsl
add
insb
inc
push
fsubrl
push
and
push
sub
mov
sub
movups
icebp
arpl
out
inc
loope
pop
pop
test
stos
add
add
push
scas
pop
aaa
jno
and
and
scas
pop
test
mov
push
dec
jge
aas
push
aad
sbb
xor
lcall
sbb
push
xchg
push
daa
inc
dec
popf
aas
add
pop
pop
scas
cmpsl
test
mov
testb
lods
ret
jle
sbb
add
leave
push
outsl
repz
mov
mov
jp
jno
frstor
xchg
mov
pop
test
mov
mov
sbb
sbb
xchg
push
movl
jecxz
mov
out
xor
out
cld
xor
cmp
out
jp
inc
cwtl
je
dec
test
aas
rorb
leave
enter
sbb
fstps
cmp
mov
loope
push
jmp
pop
push
inc
bound
mov
xchg
mov
sub
mov
fidivrl
loopne
cld
jo
xor
mov
scas
in
out
dec
out
sbb
out
sbbb
mov
pop
loope
mov
cwtl
dec
mov
push
mov
fcmovu
cld
inc
sub
fstl
lods
cli
dec
xchg
mov
lea
adc
iret
cld
es
mov
push
lcall
jnp
or
push
cmpsb
data16
loop
nop
dec
stos
xchg
ret
dec
jne
or
push
pusha
aas
pop
and
fcomp
mov
xchg
test
sbb
mov
ss
inc
vpminub
push
dec
ja
mov
or
aaa
dec
mov
push
inc
test
add
mov
pop
xorb
and
test
fisubs
lds
popf
loopne
inc
add
add
jmp
mov
stos
and
clc
sbb
add
mov
bound
iret
mov
sbb
xor
iret
mov
dec
in
sti
rorb
imul
pusha
adc
leave
orb
hlt
movsb
pop
xor
cmp
push
and
jb
int
lcall
test
gs
and
aad
jbe
movsl
in
mov
leave
int
testl
dec
mov
out
pop
sub
es
jecxz
xlat
imul
pop
sbb
and
aas
test
sbb
icebp
cmpsl
lcall
sbb
xor
sub
cmp
cmc
fisubl
pop
sbb
sub
fldcw
sbb
jge
data16
mov
or
lahf
push
adc
movsb
sbb
jb
movsb
lcall
cmp
or
pop
jl
cmpsl
sub
ljmp
inc
call
mov
cld
lock
popa
aad
testl
xor
mov
jb
jnp
stc
mov
hlt
sub
sbb
jmp
cmc
int
fidivrl
enter
pop
dec
loope
movsl
adc
scas
daa
test
and
xlat
stc
sub
mov
pop
pop
mov
and
pop
cmpl
pop
adcl
push
pop
jmp
in
xor
cmp
add
cmp
lock
pop
inc
sub
in
repnz
les
sbb
xchg
push
sbb
repz
sub
test
adc
in
xor
les
loope
mov
idivl
xchg
pop
outsb
lcall
inc
inc
in
ja
sbb
mov
adc
lret
xchg
jmp
rcrb
ret
mov
shrl
int3
mov
mov
dec
shl
rcll
lods
jle
lods
and
push
mov
sub
enter
pusha
cmp
push
push
xchg
arpl
das
or
mov
and
push
scas
jo
jne
aad
cltd
xchg
xchg
icebp
iret
bound
lock
adc
arpl
outsl
mov
clc
push
test
xor
fst
and
cltd
iret
adc
loopne
jge
mov
and
sub
lock
jnp
lret
and
xchg
ds
adc
int3
mov
sbb
subb
ja
dec
les
add
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
fsubl
int
std
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
and
xor
ljmp
lods
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
imul
sub
push
addr16
cmpsb
aam
lret
in
xchg
mov
movsb
push
push
jp
es
sub
add
xor
and
aam
les
xchg
mov
movsb
rclb
fdivs
xor
pop
add
xor
and
ljmp
rol
loopne
rol
movsb
add
xor
xor
shlb
xor
lods
enter
hlt
push
mov
xchg
mov
insl
xchg
lret
fwait
add
mov
sub
imul
jp
inc
aas
xchg
aas
orl
jnp
add
sub
fcomip
fisubl
xchg
pushl
mov
adc
jne
jo
adc
sbb
cli
rorl
and
push
mov
test
mov
mov
or
jns
lret
xlat
out
pop
mov
hlt
xchg
shl
mov
aad
roll
cmc
ljmp
mov
inc
lock
imul
mov
sub
dec
je
fs
adc
add
xor
and
aam
les
mov
mov
cmp
xchg
xor
and
push
inc
jle
sbb
test
mov
stc
aam
jecxz
inc
daa
adc
cmp
inc
jno
sub
pop
dec
and
xchg
test
lret
mov
sti
aad
jecxz
fcmovne
push
add
xor
add
adc
cmp
xor
and
aam
lret
in
xchg
mov
movsb
push
jp
dec
je
sub
add
xor
and
aam
lret
in
xchg
mov
movsb
push
fcoml
xchg
iret
subl
test
add
pop
test
testl
jbe
sub
in
test
arpl
shlb
add
daa
loopne
rol
sti
sub
fidivl
pop
mov
push
adc
sub
icebp
xlat
jnp
mov
ss
mov
sbb
test
arpl
xchg
dec
lcall
mov
dec
int3
mov
mov
movsb
or
ds
mov
mov
sub
leave
push
dec
jl
cmpsl
pop
and
push
inc
js
sbb
jbe
cmp
jge
mov
orb
pop
pop
adc
cwtl
vcvtss2si
cmp
cmp
push
mov
js
adc
shrb
imul
pop
mov
mov
std
in
divps
lods
lret
fdivl
push
test
xorb
aaa
ljmp
mov
popf
and
add
xor
paddusb
lea
and
jg
dec
jnp
les
dec
in
mov
mov
fistpll
pop
adc
dec
jne
pop
icebp
jae
repz
cmp
pop
inc
push
sbb
out
aaa
lcall
pop
pop
aas
les
cwtl
cmc
inc
out
push
add
or
fidivrs
adc
shlb
insl
ficomps
mov
adc
mov
mov
cld
stc
add
fs
pop
lods
pusha
push
and
pop
and
cmp
sub
sub
int3
or
or
addr16
out
push
imul
cmpl
jp
inc
fimull
in
inc
data16
and
pop
ja
fdivl
push
jbe
and
les
lret
iret
sbb
std
pop
push
in
in
test
xchg
stc
lret
aaa
push
mov
push
out
or
adc
sbb
push
cs
out
sti
scas
ja
xchg
jns
popl
xchg
or
cmp
jmp
xor
in
cmpsb
pop
loopne
aam
adc
rcl
cmp
inc
adc
mov
loop
lret
and
xchg
mov
test
adc
lret
mov
sarb
cmc
add
xchg
adc
or
outsl
hlt
mov
rcrl
dec
push
repnz
push
adc
sub
mov
jecxz
out
cs
mov
cli
ss
sarl
test
sub
lret
fidivs
mov
addr16
sbb
cmp
sub
mov
jno
lret
adc
ljmp
arpl
mov
aaa
mov
fisubrl
ja
inc
dec
inc
xor
fwait
xor
xor
lret
pop
fisubrs
sbb
arpl
pushf
jl
test
inc
jmp
push
cmp
xchg
adc
jo
pop
and
vandnps
out
inc
push
dec
addb
and
and
inc
inc
or
loop
jbe
ja
fbld
shll
imul
jle
cmpsb
out
xchg
xchg
fldt
neg
xchg
and
pop
or
add
pop
incl
nop
lea
cmp
loopne
into
fisubrl
addr16
cmp
fwait
xchg
mov
sub
dec
fwait
testb
sub
cmc
pop
clc
fcmovnbe
xor
js
push
sub
pop
xchg
cltd
outsb
cwtl
pop
sti
lret
enter
mov
int
jecxz
pushf
cmp
add
or
fnstsw
sti
pusha
dec
push
test
sub
pop
in
add
sub
jae
data16
lods
and
mov
ret
das
test
pop
push
lret
mov
js
js
shl
repz
pop
sbb
lods
lods
mov
int
das
clc
andb
mov
loope
add
int
repz
pusha
push
outsl
jns
bound
cmp
xchg
test
cli
cmc
jb
es
in
fs
add
gs
inc
ret
ds
lret
shrl
in
jl
call
int
inc
or
jmp
sti
push
jp
mov
ja
mov
adc
sbb
pop
or
xlat
and
sbb
pop
and
jb
mov
push
mov
push
jecxz
or
out
fisubl
and
aad
fs
in
xchg
inc
es
or
jno
adc
shll
mov
aad
xchg
ret
lahf
xor
adc
and
hlt
cmpsb
inc
outsb
push
aam
dec
push
into
rcrl
arpl
js
std
ja
scas
push
mov
adc
ds
xchg
ds
jle
sbb
daa
andb
imul
fbld
mov
mov
repz
ret
movsl
outsb
sub
inc
xchg
xchg
aad
insb
outsb
sub
mov
arpl
cltd
jno
push
insl
xor
dec
sbb
inc
adc
jge
outsl
jle
xchg
push
push
jb
fmuls
jmp
shll
xor
ret
and
cli
cmp
out
test
cld
jge
mov
mov
roll
aas
and
pop
pushl
sub
inc
ja
dec
pusha
or
movsb
cld
mov
loopne,pt
decl
jae
sub
jle
xchg
jg
bound
jle
inc
cwtl
out
cli
flds
addr16
push
cli
dec
shrl
imul
in
and
lcall
lcall
test
enter
jle
push
shrb
xchg
int3
inc
popa
dec
mov
mov
movsl
inc
test
push
cmp
push
aad
stc
inc
clc
push
loope
nop
push
testl
pop
rcll
dec
push
fisubs
cld
sti
jno
add
lahf
ds
hlt
inc
lds
gs
repnz
pop
outsb
inc
dec
arpl
loope
push
es
adc
lret
pop
sub
jno
mov
xchg
je
xor
ds
lahf
xlat
push
repnz
lcall
or
add
nop
xchg
mov
mov
addb
popa
xor
nop
mov
into
cmpsb
push
hlt
out
or
dec
ds
movsb
adc
rcrl
jle
stos
sbb
add
pop
lret
ret
pop
adc
lods
das
pop
fsubr
cmpsl
jge
popf
adc
xchg
scas
pop
pop
add
xchg
imul
icebp
aaa
cmp
mov
mov
sub
aam
jmp
push
xlat
xchg
sbb
cmp
push
rcrl
xchg
sbb
jo
lcall
and
inc
out
dec
inc
nop
and
fsubrl
xchg
push
arpl
dec
lea
pop
fisubrs
insb
cmp
jnp
sbb
pop
push
push
pop
sub
ds
or
in
mov
push
mov
cs
lcall
adc
andb
sub
cmp
pop
jecxz
xchg
mov
sub
pop
ret
adc
jno
test
daa
jno
mov
fs
xchg
hlt
mov
out
mov
fisubl
arpl
bound
cli
mov
fstp
dec
inc
xchg
mov
or
mov
clc
insb
xchg
faddl
xor
jg
jmp
mov
sbb
pop
hlt
dec
mov
cmpb
cltd
xchg
mov
js
add
cld
adc
jg
insb
or
inc
sti
cmc
mov
mov
pop
addr16
inc
jbe
fldenv
xchg
lcall
xchg
jae
mulb
inc
push
push
in
jo
jge
pop
mov
jne
mov
repz
jmp
ja
jle
and
dec
jns
mov
inc
aas
xor
xchg
dec
pop
in
dec
pop
movsb
push
push
lcall
pop
mov
loopne
mov
jg
adc
pop
mov
dec
cmc
pop
int
out
das
std
push
jns
dec
mov
xchg
adc
clc
lahf
test
jmp
pop
mov
xchg
aas
pop
cmpsl
mov
jecxz
popa
sbb
test
push
sbb
das
mov
mov
cmp
mov
add
fwait
adc
iret
pop
scas
pop
and
push
insl
lcall
pop
cmc
add
cmp
divb
adc
in
dec
add
lret
hlt
lret
out
daa
cmp
mov
testl
sub
sub
pushf
jle
fs
mov
adc
jnp
adc
mov
in
jecxz
iret
ljmp
sar
inc
and
cmp
sbb
gs
out
mov
push
xorl
out
sub
mov
aaa
enter
jp
mov
xchg
dec
ss
pop
jb
mov
push
shll
sub
clc
jmp
in
pop
xlat
xor
add
cld
mov
or
xchg
movsb
outsl
testb
std
loop
je
cwtl
add
push
dec
push
push
roll
fiaddl
popf
les
aad
push
ret
and
sub
mov
push
cli
xchg
jge
cmc
or
dec
mov
push
jne
adc
jo
rclb
xor
and
mov
cmp
xor
push
push
ja
fnstcw
xchg
mov
mov
rorl
jle
pop
test
shll
ljmp
push
pop
mov
adc
adc
outsl
in
jb
inc
lea
fisttpl
jo
insb
fs
call
fs
loop
idivl
cmp
loop
push
xchg
jge
or
cmp
inc
pop
jge
adc
std
add
dec
dec
or
cmpsl
in
leave
dec
lods
outsb
ja
or
testb
sti
sub
out
pop
adc
rol
nop
lret
cmp
xor
or
ret
sbb
pop
push
mov
adc
xchg
hlt
jle
sti
ret
loop
xchg
aam
mov
orl
push
mov
fnstsw
daa
test
and
int3
orl
and
cmpsl
cwtl
adc
pushf
shl
jo
cltd
dec
push
mov
scas
sub
or
sti
mov
mov
rolb
rcrb
push
adc
loopne
xor
jecxz
cld
mov
shrb
add
enter
jae
ljmp
aaa
mov
or
xchg
sbb
pop
mov
dec
mov
jnp
jbe
jnp
xchg
out
lret
ljmp
inc
je,pn
cltd
sbbb
push
addr16
mov
fistpl
xor
push
mov
mov
pop
mov
jg
or
or
and
cli
mov
cmp
cmp
sub
stos
push
out
push
or
or
fisttpll
xor
xchg
dec
jp
add
scas
mov
imul
loopne
lret
mov
xchg
inc
scas
push
pop
xchg
xchg
mov
sub
xlat
bound
cld
push
fdivr
stos
outsl
mov
insl
in
aam
popf
fldt
jbe
mov
jb
cmpsl
mov
push
scas
push
cli
pop
adc
addr16
mov
xchg
pusha
insl
sahf
or
nop
iret
xor
das
popf
and
mov
les
dec
cli
mov
inc
popl
sarb
stc
imul
test
adc
add
js
fistl
test
aad
add
outsl
xchg
iret
leave
mov
pop
repz
mov
movq
mov
repz
fisubs
push
ds
std
test
mov
loopne
sbb
fcomps
mov
fldcw
popa
lret
cmpsb
add
scas
out
adc
mov
sub
push
pop
pop
ljmp
shlb
imul
data16
es
inc
or
lock
add
rcl
cmp
mov
mov
xchg
dec
imul
mov
xor
jle
add
jns
cmp
aad
loope
pop
aam
push
cltd
jnp
sub
sbb
aad
lods
das
fimull
cmp
push
sbb
out
roll
inc
outsl
stos
ss
sub
aad
xor
rclb
push
mov
cld
imul
fisubrs
push
test
scas
inc
or
jle
cltd
mov
mov
jbe
lods
dec
jp
leave
fisttps
push
ficompl
xchg
repz
xor
mov
mov
js
cmp
sti
out
add
add
push
mov
ds
or
daa
ljmp
addr16
jg
jb
lods
repz
imul
sar
adc
shlb
and
xor
mov
xor
sub
xchg
fdivs
cmp
pop
adcl
jno
jo
pop
scas
dec
mov
in
and
inc
sub
jbe
loope
movsl
fistl
addl
adc
inc
btc
pop
shlb
ss
add
jae
mov
out
sbb
mov
loop
adc
mov
imul
push
and
repnz
sahf
pop
and
int
mov
roll
ret
hlt
test
push
mov
lahf
pop
push
jbe
dec
mov
bound
mov
call
and
mov
mov
jl
subl
dec
jno
xor
loop
fstpl
int3
int3
daa
xchg
in
lds
cmp
cwtl
jns
scas
call
xor
adc
cmp
hlt
sar
aas
test
cmc
jecxz
push
push
bound
fsubs
mov
jb
out
loopne
aad
sbb
cmp
pop
scas
push
xchg
push
sbb
ljmp
test
push
out
sbb
cmpsb
sub
or
stos
movsb
je
or
fadds
push
mov
pop
jo
push
in
and
dec
jmp
movsl
stc
mov
fsub
test
ret
push
aas
call
aaa
cwtl
add
xor
pop
sub
sbb
lret
jge
pop
in
mov
roll
lea
neg
outsb
test
cmp
push
stc
shr
lods
orb
data16
mov
or
daa
xor
dec
lock
loopne
cmp
je
pop
iret
dec
imul
fsubrl
and
iret
pop
sbb
xchg
daa
dec
insb
arpl
roll
movsb
mov
test
cltd
sbb
sub
es
and
dec
mov
fs
xchg
xchg
lcall
dec
or
push
pusha
daa
inc
ja
fwait
pop
cld
popf
arpl
adc
xchg
dec
test
call
movsb
mov
ja
cmp
xchg
insb
call
inc
inc
push
dec
mov
add
add
movsb
sub
lock
scas
fsubs
dec
test
pusha
pop
mov
inc
pop
adc
iret
clc
adc
pop
xor
aaa
jo
xchg
sbb
arpl
dec
pushf
mov
cmc
cmpsb
aaa
xchg
subl
test
pusha
cli
adc
xorb
pop
mov
out
jle
push
push
orl
lcall
mov
scas
mov
xor
push
dec
aas
cmp
fistl
or
adc
psubsb
lds
cmp
pop
cld
and
push
sbb
hlt
inc
mov
jge
jle
fdivr
sub
das
in
or
scas
dec
mov
cmp
cmpsb
mov
mov
cwtl
pop
rorl
mov
mov
xchg
icebp
and
xchg
mov
xchg
sahf
movsb
push
xor
insl
push
sub
dec
jb
and
pop
jno
jle
or
ss
aas
subl
push
cmp
repz
cmp
cmp
arpl
pop
mov
mov
cmp
mov
or
cmpsl
mov
jno
je
nop
sub
cmp
test
xor
lds
aam
xchg
sbb
jle
mov
test
enter
mov
inc
or
add
adc
bnd
cmp
andb
lods
add
sub
and
add
lret
lods
push
cmp
and
xor
cmp
sbb
andb
test
mov
and
xor
mov
cld
add
xor
pop
cmp
test
mov
es
sti
cmp
scas
cmp
jle
aam
cmp
jge
js
ja
imul
sarb
mov
pop
les
outsb
icebp
stos
lods
adc
shlb
loop
mov
xchg
in
das
adc
add
push
in
or
lods
dec
push
jp
ret
mov
adc
imul
pop
push
or
test
int3
jecxz
fcmovne
push
and
jecxz
xchg
jp
inc
push
cwtl
mov
inc
mov
lahf
jo
aas
dec
dec
or
icebp
add
or
inc
loopne
stos
or
jl
mov
mov
repz
mov
icebp
fxch
dec
add
enter
sub
mov
pop
std
push
jp
mov
jnp
push
push
outsb
and
and
imul
stos
or
cmp
test
bnd
loop
hlt
lea
popl
add
sti
in
insl
or
pushf
je
sub
pushf
xchg
lock
mov
push
lret
xchg
in
or
push
push
fistpl
inc
stos
push
ss
mov
jns
gs
mov
jmp
in
mov
mov
sahf
sbb
adc
dec
cmp
aaa
sub
dec
outsb
cltd
cltd
jecxz
dec
hlt
not
push
lcall
sub
cwtl
lret
es
ja
pop
pop
adc
sub
lock
push
push
fcomps
in
fwait
mov
sti
and
mov
xchg
popf
notb
dec
testl
dec
shlb
addb
sub
lea
add
and
addr16
aad
outsb
pop
push
sbb
pop
ficoms
xchg
mov
enter
sbb
mov
fists
mov
rcrl
sub
sar
xor
call
stc
out
into
sarl
push
aam
cmpsl
or
push
movsl
les
push
jp
fldl
xlat
call
lret
inc
push
dec
cwtl
aad
push
mov
in
and
xor
int
xchg
lret
push
cltd
adc
pushf
jae
jo
pop
repz
sbb
cmp
mov
orb
pop
mov
adc
xchg
and
shl
dec
js
xor
lock
shll
pop
dec
imul
xor
xchg
pop
pop
fcmovb
push
push
jbe
movsb
addr16
push
push
call
ss
addb
rcll
and
sbb
mov
jae
pop
gs
jns
enter
mov
or
fdivrp
push
and
sbb
shr
xlat
dec
lahf
aas
stc
mov
stos
xchg
lahf
cld
jle
mov
cmp
cli
or
in
jnp
les
insb
or
inc
jo
jmp
adc
xchg
rep
ret
mov
ficoml
mov
lock
in
add
push
pop
stos
shl
mov
cmp
sbb
or
imul
out
lea
jl
sbb
push
out
pushf
lea
adc
cmpsb
repz
mov
mov
lods
sub
cmp
fsts
popa
mov
or
loop
into
push
in
lea
mov
cmp
rclb
push
xor
std
enter
pop
sbb
pop
mov
dec
int
sub
popa
cmp
lret
pop
push
stos
das
pop
repnz
sti
repnz
test
mov
mov
lret
xor
push
cmp
mov
daa
push
dec
or
pop
jp
sub
sub
pop
jle
sbb
add
or
cmp
dec
les
sub
jle
xchg
in
xchg
imul
mov
popf
push
shll
loope
faddl
aam
cmp
aam
cmpb
sahf
loop
into
and
adc
and
cmp
and
in
mov
mov
ret
cmp
jmp
stos
cmp
dec
add
xlat
lods
fs
movsb
sub
fstpl
shrb
loopne
mov
out
cmp
ret
pop
push
cs
mov
cmp
push
repnz
jne
lret
cmp
ljmp
mov
and
mov
sub
inc
repz
jnp
int
jp
add
std
xor
outsb
inc
sub
in
dec
insb
bound
and
out
xchg
xor
and
and
add
or
sub
pop
shrl
fnsave
mov
loopne
fwait
cmpsl
loopne
in
ljmp
jg
mov
dec
enter
xchg
or
mov
dec
mov
sub
rcrl
int3
mov
mov
adc
in
fidivrs
pusha
pop
cld
xchg
outsl
je
cmpsl
icebp
push
xchg
mov
xchg
or
addr16
push
lret
lcall
xchg
sub
and
outsl
pop
test
fldcw
ror
int3
xchg
cltd
mov
xchg
xchg
dec
xor
movsb
mov
rolb
mov
enter
push
push
rorl
ret
xchg
push
mov
adc
jl
test
add
mov
cmp
sub
ljmp
test
ss
mov
or
ja
iret
das
sub
cmp
pop
jno
cmp
cmp
je
push
pop
add
inc
sbb
pop
push
jl
mov
adc
push
fs
xor
cmpsl
aad
shlb
in
outsb
pop
cmpsl
hlt
pusha
rcpps
pop
fisttps
adc
aam
sbbb
aad
sbbb
jae
lahf
shrl
cmpsb
je
lcall
leave
mov
sahf
jne
or
xor
sub
std
mov
pop
loop
divb
cmp
scas
enter
ret
inc
or
adc
add
xor
and
aam
lret
in
xchg
mov
movsb
push
jp
dec
je
sub
add
xor
and
aam
lret
in
xchg
mov
movsb
push
dec
inc
sub
mov
xor
cli
lds
hlt
stos
xchg
stos
test
push
es
adc
sub
test
mov
fucomi
sub
xchg
fstpl
jnp
dec
gs
mull
mov
mov
aad
stc
mov
or
inc
sub
pop
daa
dec
pop
jns
imul
mov
cmpsl
inc
xchg
stc
xchg
push
cmp
divl
daa
dec
pop
cmp
imul
adc
stos
mov
cmpsl
cmc
xchg
pop
xchg
ja
inc
push
inc
pop
aaa
push
dec
and
imul
int3
stos
cld
jle
sub
pushf
in
xor
sbb
imul
add
mov
jecxz
adc
imul
mov
mov
mov
cmpsl
cwtl
out
mov
mov
shl
sbb
fldenv
xchg
xor
jns
dec
jb
pop
jns
pop
out
mov
fnstenv
push
cli
out
pop
test
pop
addr16
xchg
xor
or
sub
std
cmpsl
mov
ret
dec
xor
sar
cmp
fs
dec
inc
push
sbb
test
xchg
jne
push
dec
sbb
xchg
popa
test
outsl
xor
stos
mov
jns
in
cmp
mov
xchg
and
iret
push
sub
aaa
jne
mov
jns
pop
mov
xchg
mov
lods
aad
pause
test
dec
aas
inc
ss
cmp
xchg
faddl
mov
xchg
aad
adc
push
pop
inc
dec
or
jnp
jb
xchg
iret
out
mov
mov
xchg
ja
or
inc
sub
pop
daa
dec
pop
jns
imul
mov
cmpsl
leave
xchg
stc
xchg
ja
or
inc
sub
pop
daa
dec
pop
jns
imul
sbb
test
add
leave
pop
xchg
sbb
scas
stos
out
pop
ja
stos
cli
pop
pop
cmpsl
xorl
push
repz
mov
mov
pop
and
aad
int
adc
scas
mov
jecxz
stos
pop
data16
mov
sti
ds
push
mov
xchg
shrb
bound
jp
push
gs
fldt
cmpsl
aas
adc
leave
jmp
mov
dec
push
ja
divl
or
ds
lock
ss
push
mov
pushf
call
hlt
inc
mov
sarb
adc
sbb
outsb
mov
into
jno
lret
int3
sub
pop
aam
pop
outsl
clc
mov
clc
std
dec
testb
jae
add
lret
dec
sub
xchg
repz
lret
adc
mov
mov
jecxz
insb
mov
cmp
cmp
repnz
or
mov
inc
or
sub
inc
xor
mov
mov
outsl
sub
add
adc
dec
pusha
push
xchg
inc
xchg
rcrb
pop
sbb
test
cmp
and
inc
xchg
out
xorb
aas
fwait
pop
gs
xlat
mov
xchg
and
inc
dec
add
cld
out
mov
ret
repnz
daa
insl
dec
xor
mov
inc
stc
in
imul
sub
add
int
mov
inc
ss
push
call
inc
loope
jae
cmpsb
mov
lret
ror
cmpsb
sbb
popf
push
mov
or
repnz
ret
les
lods
mov
scas
jmp
lret
fwait
scas
fistpll
mov
loopne
mov
xor
sbb
mov
enter
loope
jle
fwait
inc
and
jmp
icebp
mov
scas
push
cs
fildl
mov
std
push
dec
jb
cwtl
repz
aaa
push
outsl
cmp
add
scas
dec
jmp
aas
stc
jg
cmp
adc
and
push
out
fldenv
les
aas
xlat
nop
mov
fwait
dec
sbb
mov
sbb
js
xchg
inc
sarl
push
cld
hlt
arpl
insb
mov
mov
inc
cmp
stc
xchg
mov
xlat
mov
insl
out
es
inc
aaa
push
inc
dec
push
dec
and
push
ja
fidivrs
add
or
pop
mov
iret
add
enter
push
in
sub
sub
ret
shl
mov
je
or
fdivr
popa
or
xchg
pusha
data16
outsl
call
ret
fstl
fmuls
lret
inc
insb
popf
sti
fnstenv
gs
hlt
scas
cmc
sub
jl
mov
jno
add
pop
es
xchg
leave
jg
mulb
adc
jl
test
into
jno
dec
aad
sahf
inc
xor
rolb
adc
aas
cmpsl
lods
mov
das
and
xchg
bound
fmul
hlt
mov
and
mov
popa
push
or
xchg
lret
dec
or
inc
adcl
dec
loopne
and
mov
int
jbe
cmc
or
nop
mov
mov
sti
dec
push
in
or
adc
lahf
stos
or
scas
das
cs
imul
iret
or
add
dec
push
or
pop
xor
fs
sbb
mov
push
leave
test
jge
pop
mov
mov
call
ss
call
inc
and
sbb
fstp
dec
pushf
in
cmp
cwtl
lahf
mov
cwtl
mov
fs
cltd
test
in
mov
jecxz
or
sahf
sbb
cld
loopne
int
ljmp
aam
push
movsl
int
jecxz
push
xchg
push
in
pop
addb
cli
aaa
or
sub
push
mov
cmc
mov
out
cmp
sbb
test
stos
mov
jmp
mov
mov
int
outsb
movsb
imul
insl
mov
insl
jmp
jecxz
dec
idivl
jp
pushf
rorb
fsubrs
and
sbb
sub
fists
jl
aas
jne
pop
lcall
cmp
xor
sti
push
out
ljmp
dec
pop
mov
xchg
in
xchg
jp
push
jne
or
jno
filds
ljmp
out
mov
movsb
mov
in
sub
push
adc
cmp
inc
mov
push
jbe
adc
nop
xchg
out
lods
push
adc
mov
into
jmp
pop
idivb
jp
mov
jno
add
rcrb
adc
je
dec
lcall
cmp
cmp
orl
fldz
fldenv
ret
cmpsb
int3
inc
out
mov
push
mov
es
push
ss
out
xor
dec
imull
cmpsl
jecxz
test
out
push
das
jl
repz
movsl
push
mov
pop
or
xor
sub
bound
lds
xchg
stc
mov
mov
add
add
in
sti
mov
jne
dec
insl
fcmovb
aam
out
divl
int3
inc
cltd
psubusb
sbbb
inc
xor
iret
xor
or
dec
cltd
xchg
aas
jno
cmpsl
shll
inc
or
cmp
push
dec
sub
pop
jp
ja
sahf
inc
xchg
test
into
jg
test
aad
in
pop
or
arpl
in
push
inc
imul
ljmp
cmp
mov
ja
mov
mov
in
or
jnp
enter
lcall
lret
sub
or
mov
sub
or
push
cmp
pop
jecxz
stos
push
fwait
mov
sbbl
jnp
push
lds
aad
stc
lods
inc
mov
jae
sbb
aad
dec
adc
fsubrl
mov
jno
lods
jno
gs
arpl
xchg
lock
aaa
add
xchg
shlb
lcall
cmp
les
xor
mov
mov
aam
add
outsb
and
push
mov
or
adc
xchg
pusha
sbb
cmp
fistl
pop
mov
or
adc
cmp
adc
dec
fstpt
ret
pop
lods
sbb
pop
mov
pop
ficoms
mov
call
mov
das
sub
pop
gs
adc
pop
sbb
test
push
dec
dec
jo
fcomip
jo
push
lock
add
arpl
cmp
pop
push
fsubr
push
xor
ss
ja
mov
in
aas
std
ror
xchg
mov
mov
pop
repnz
inc
xor
bound
adc
cld
jbe
pop
mov
inc
jecxz
jecxz
mov
jl
movsb
mov
adc
les
mov
ja
outsl
rcrl
fcmovnu
shll
notb
and
stc
dec
xor
repnz
adc
outsl
aas
stos
dec
jle
xchg
lahf
sbb
test
out
ljmp
cmpb
xchg
std
cmpsb
mov
flds
rorl
and
insb
rcl
rcrb
mulb
mov
push
vunpcklps
inc
lods
sub
cltd
mov
insl
pop
or
jne
scas
cmp
and
or
or
in
pop
out
dec
add
sub
jg
xchg
ljmp
mov
push
xchg
cmp
xor
add
stc
enter
mov
in
mov
es
pop
and
insl
mov
je
mov
hlt
mov
push
cmp
add
imul
add
lret
mov
jno
mov
movsb
or
scas
rolb
nop
ljmp
push
lock
ret
cmp
cmp
push
pushf
es
jb
inc
subl
icebp
int3
add
mov
and
subb
daa
arpl
push
push
xchg
ljmp
ja
out
jnp
sbb
insb
pop
imul
adc
aaa
mov
mov
dec
push
cmc
loop
stos
and
js
add
mov
ljmp
loopne
cs
ret
loope
adc
sub
hlt
sub
pop
jae
rcll
loop
adc
xlat
ret
jmp
inc
and
mov
test
pushf
pop
jbe
pop
scas
dec
mov
and
insl
cmp
out
pop
fs
mov
cmpsl
loope
enter
loopne
lods
test
xor
addr16
ret
or
adc
loop
fcomps
adc
repnz
add
leave
pop
repnz
fistpl
cmp
inc
jge
cmpsb
mov
addr16
mov
add
push
repnz
test
sbb
push
fnstenv
inc
sar
mov
cld
data16
push
inc
adc
dec
inc
jne
nop
divl
int
lcall
cmp
push
push
and
cmc
jl
fiadds
das
in
jg,pt
call
mov
cli
jns
add
in
sahf
adc
cwtl
jne
test
sahf
lds
mov
xchg
rorl
xor
add
or
mov
pop
ret
iret
inc
sub
test
lock
pop
inc
enter
and
jns
and
test
mov
cwtl
aaa
pushf
inc
test
dec
lods
popa
scas
sti
rcrl
jmp
add
inc
jle
mov
jecxz
xor
adc
pusha
iret
xchg
adc
dec
xorb
aam
sub
repnz
ja
pop
xchg
and
push
xchg
mov
jp
dec
and
rclb
jae
pop
adcb
dec
or
cli
cld
push
iret
jp
and
mov
in
lods
or
sub
push
das
sub
mov
aas
add
sub
push
jl
jo
sub
out
mov
out
push
cmp
dec
aam
sbb
cmp
sbb
add
in
sub
or
dec
loope
adc
rcll
push
cmp
loopne
push
jp
mov
divb
mov
sbb
insl
mov
add
out
dec
imul
mov
inc
pop
xchg
js
mov
cmp
cmp
inc
pushf
fsubs
lds
lods
aas
jbe
fmulp
jno
pop
push
cmp
leave
lret
xor
hlt
pop
inc
cmp
or
or
loopne
sbb
ds
cmpsl
arpl
sbb
sub
push
jbe
inc
fistpl
pop
push
or
cmp
movsb
adc
push
icebp
int
jae
pop
mov
or
inc
icebp
stc
cmpsl
cmc
fcoms
dec
jecxz
lcall
adc
mov
ss
popa
ljmp
shld
xlat
mov
xchg
sahf
cmp
je
iret
dec
jge
pop
jb
adc
mov
clc
decb
or
jae
iret
and
addl
cmpsl
mov
mov
sarl
push
push
sbb
into
and
les
sub
add
les
iret
roll
popf
xlat
mov
sti
mov
or
dec
lahf
inc
rcrb
mov
les
lret
push
shl
pop
mov
jge
scas
add
fcoms
lock
cmp
sub
pop
into
loope
aad
add
xlat
out
repnz
dec
popl
ljmp
dec
fistps
es
rolb
xchg
mov
test
pop
adc
pop
push
jns
mov
push
cmp
jbe
fwait
jbe
lret
lcall
sbb
shlb
clc
mov
xchg
pushf
mov
dec
aam
std
adc
jo
jb
arpl
ljmp
xor
lret
push
mov
cmp
cwtl
cltd
dec
add
jl
test
arpl
shl
xlat
shrl
icebp
es
call
jecxz
sti
imul
popf
sub
mov
cmc
loope
and
sub
js
xchg
xchg
ljmp
stc
jge
mov
xchg
outsl
sti
fldt
orb
pop
mov
pop
sbb
andl
pop
pop
mov
dec
or
mov
mov
addr16
or
add
clc
adc
jnp
imul
jp
shlb
jbe
shlb
sub
and
loope
das
popa
xchg
adc
push
data16
push
jp
outsb
pop
pop
inc
and
scas
mov
xchg
cld
add
sarl
mov
imul
jecxz
cmpsb
xchg
fstl
push
push
mov
xorl
xchg
push
inc
lret
mov
rorl
lods
add
divb
jb
aaa
xor
xchg
sub
push
sbb
mov
stos
cmp
adc
pop
cmpb
add
mov
insb
loope
es
jns
pop
xor
loop
into
or
addl
lret
js
push
add
test
hlt
push
cmpsl
push
int3
xchg
xchg
mov
aas
push
stos
jbe
dec
inc
cltd
cmp
in
int3
es
hlt
or
pop
rorb
fidivrl
dec
outsl
js
into
ss
lret
pop
push
pusha
push
sub
jmp
or
xor
js
outsl
hlt
dec
out
test
cmp
sbb
faddp
outsb
xor
test
or
cltd
mov
dec
cli
mov
cmp
jne
out
lcall
push
mov
adc
scas
stc
in
xchg
pusha
pop
popa
push
ljmp
mov
ljmp
stc
hlt
xchg
in
movsb
sbb
jmp
outsb
divb
xor
out
sub
or
dec
xor
dec
call
jg
push
cmpsb
mov
out
mov
mov
in
lds
stc
mov
and
xchg
adc
inc
jns
std
mov
fildl
and
dec
pop
push
clc
pop
push
adc
dec
clc
inc
dec
sbb
xchg
mov
or
mov
lahf
push
adc
jecxz
shlb
repz
xchg
iret
xor
add
sbb
call
arpl
shl
push
ret
jnp
jp
les
cmp
xchg
in
add
aaa
cmp
jg
ret
xchg
clc
ss
jne
mov
sub
rclb
loop
daa
pop
fwait
sti
dec
imul
mov
data16
iret
cmp
sub
jg
int3
shrl
mov
sarb
hlt
lret
jbe
mov
into
xlat
dec
push
or
dec
or
dec
pextrw
xor
mov
inc
lods
call
nop
fisubrl
push
push
lock
sub
fwait
adc
add
shll
hlt
in
xchg
xchg
push
sbb
setnp
dec
popf
sbbb
lods
fimull
inc
fadds
xlat
jo
dec
push
cs
jle
cmp
test
inc
lahf
cmp
push
mov
jg
pop
dec
cs
into
sbb
loope
jmp
xchg
shrd
das
fmulp
add
sub
mov
mov
fsubl
pusha
and
int3
pop
pop
in
jo
xor
pop
pop
icebp
jb
mov
mov
add
mov
aam
xchg
push
xor
stc
push
mov
xchg
daa
clc
pop
sub
adc
mov
jg
aas
push
add
jo
daa
push
dec
jo
mov
and
fimull
bound
mov
popf
jae
cli
and
mov
jno
mov
lock
cmovge
outsb
shlb
mov
inc
add
mov
sub
and
into
xor
mov
xchg
jge
sti
out
mov
mov
or
jge
popa
push
data16
dec
mov
orb
into
sub
xchg
cmc
add
pushl
push
repz
popf
dec
ret
test
add
mov
out
jmp
pop
mov
adc
jnp
mov
dec
js
xor
sti
scas
and
sbb
push
inc
loope
addl
mov
std
push
or
dec
iret
mov
sbb
adc
fisubl
push
mov
mov
and
bound
jmp
rcl
fisubrs
pop
xchg
xchg
mov
xor
dec
rolb
cmp
enter
fnstenv
fimull
and
mov
mov
scas
movsl
push
scas
fwait
push
out
pop
jae
data16
shll
insl
push
or
stos
adc
rcll
decl
fisubrl
dec
ds
shrl
jae
stc
cmp
or
lea
sub
xor
into
jo
cltd
xchg
jp
lcall
cmpsb
xor
push
xchg
movsb
and
pop
aaa
cmp
int3
cld
push
fimuls
nop
aaa
xchg
fwait
ret
imul
xchg
imul
dec
bound
fisttpll
inc
mov
orb
inc
mov
loopne
sub
jp
das
jg
addb
cmpsb
inc
rcll
push
pop
icebp
pop
dec
mov
mov
xchg
cs
cli
add
out
jl
loop
enter
pop
pop
shlb
loop
push
out
xor
adc
mov
pop
fildl
add
adc
mov
fcmovnu
sub
mov
sub
push
dec
sub
jle
sbb
js
cmpsb
xchg
fwait
imul
lods
repnz
fisubrs
rcll
lret
callw
fistps
mov
dec
or
cmpsb
lahf
pop
ljmp
js
stos
ret
adc
pop
and
cmp
pop
pop
cld
jbe
fidivs
push
mov
mov
lea
enter
mov
or
mov
add
movsb
aam
sub
xor
cmp
or
inc
rolb
push
idiv
aaa
xchg
bound
lret
test
adc
sarl
pushf
rcrl
and
mov
lock
mov
cmp
mov
fadd
cmp
xorb
cmp
push
xlat
aaa
dec
cmp
repnz
sbb
inc
jmp
mov
daa
push
ret
out
test
dec
lods
mov
xor
pop
sbb
hlt
or
outsl
out
sub
inc
popf
mov
inc
test
je
enter
mov
mov
sub
jg
clc
ret
mov
out
push
jb
aas
mov
in
and
mov
push
or
shlb
daa
xchg
cmp
and
imul
xor
cmp
fcmovu
cmp
das
fsubl
outsb
in
sbb
xchg
inc
and
push
xor
pop
shl
addr16
clc
outsl
cmc
in
sbb
jmp
addr16
ljmp
mov
pop
nop
ret
test
add
pop
addr16
push
mov
stos
pop
or
jmp
inc
inc
cmp
and
pop
out
mov
in
pop
sahf
cmpsb
fsts
lods
enter
xchg
mov
adc
test
fwait
lods
dec
stos
addr16
dec
mov
mov
mov
testl
icebp
xor
and
out
jae
movsb
repz
push
mov
and
or
cmp
in
sbb
mov
jge
lock
cmp
clc
mov
movsl
popa
pop
std
cmpsl
xorl
insl
ljmp
sbb
xor
cwtl
scas
push
pop
mov
cmc
lods
xchg
pop
dec
mov
sub
jg
or
iret
cmp
popa
inc
jno
in
jo
cld
into
pop
sub
cltd
dec
es
addr16
mov
stos
dec
fdivr
test
out
fisubrl
xchg
cmpsb
test
mov
cli
out
mov
jno
jle
std
xorl
fistl
xor
shlb
bound
nop
push
pop
jnp
add
mov
int3
pop
add
pop
mov
mov
int3
ljmp
lret
sub
imull
pop
sub
xchg
test
iret
gs
clc
jmp
cwtl
fwait
jg
add
test
sbb
hlt
and
stc
adc
sbb
gs
push
loopne
cmp
jge
loopne
push
cmp
cwtl
xor
out
cmp
jno
idivl
dec
js
xlat
mov
and
xor
popa
call
cmp
loop
aam
pop
xchg
pop
mov
xor
sub
add
mov
jg
ds
pusha
call
and
push
ror
loope
popa
cmp
stos
mov
shlb
fcompl
pop
push
mov
aad
mov
jne
jge
lcall
movsl
pop
pop
movsb
xor
dec
addr16
fidivrl
insb
lods
dec
add
hlt
mov
stos
sbbb
mov
xchg
nop
pop
das
filds
and
mov
xchg
loopne
fistl
pop
sub
jbe
pop
sub
in
in
stos
inc
lahf
les
ljmp
movsl
inc
stos
push
jbe
xchg
ret
jmp
sub
push
xchg
sub
fistpl
fistpl
ss
outsl
jb
push
stos
aad
push
js
adc
leave
dec
insb
sbb
sbb
test
cli
xor
and
jmp
int3
repnz
push
xor
ja
dec
xchg
inc
test
movsl
mov
sbb
jnp
xchg
adc
xor
jg
xchg
sti
sbb
and
pushf
loopne
aas
ror
movsb
rorl
popa
loopne
push
insb
add
into
lahf
daa
pop
dec
adc
push
sub
les
sbb
in
sbb
test
and
or
ror
jmp
sbb
int3
sub
mov
cmpsl
leave
xchg
stc
xchg
ja
or
inc
sub
pop
daa
dec
pop
jns
imul
mov
cmpsl
leave
xchg
stc
xchg
ja
or
inc
sub
pop
daa
dec
pop
jns
imul
rol
aaa
fldenv
jmp
push
cmp
aaa
pop
daa
dec
pop
pop
pop
imul
mov
cmpsl
leave
xchg
jns
jmp
std
cmp
inc
rcll
xchg
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jmp
neg
out
dec
jmp
imul
sub
cmp
jmp
neg
out
xchg
mov
cmpsb
imul
sub
cmp
or
jmp
neg
out
xchg
mov
cmpsb
imul
ja
inc
push
pop
imul
stc
cltd
mov
push
mov
mov
andl
sub
bound
push
sbb
mov
out
mov
fsubr
arpl
or
ja
mov
add
push
mov
sbb
dec
imul
mov
insb
leave
fldcw
mov
xchg
test
pop
imul
push
stc
or
sbb
mov
xchg
mov
mov
test
pop
mov
cmpsb
movsb
push
cmp
jmp
inc
sarl
nop
cmp
push
jecxz
or
adc
and
inc
mov
sbb
adc
and
mov
stc
leave
neg
out
xchg
mov
cmpsb
imul
sub
cmp
or
sbb
mov
mov
xchg
clc
fdiv
sub
jge
sub
xor
jne
xor
addr16
xchg
out
loop
rcrl
or
sbb
dec
jne
insl
jnp
sbb
lahf
popf
xchg
mov
xchg
mov
cmpsb
imul
sub
cmp
or
sbb
jmp
neg
out
xchg
mov
cmpsb
imul
sub
cmp
or
sbb
jmp
inc
std
mov
cld
cmp
xchg
xchg
jb
stos
cmp
sti
ds
imul
lret
dec
je
ja
and
cmc
sbb
lods
push
add
and
rcrb
movsb
dec
jg
sbb
mov
lahf
lea
sbbl
out
xchg
xchg
ljmp
hlt
cld
lret
xchg
lea
jnp
popa
hlt
ret
add
jnp
cld
inc
and
mov
dec
enter
repnz
dec
ds
scas
stc
es
jmp
jmp
push
test
ficomps
jae
push
inc
pop
pop
rclb
pop
cmpsb
stc
shlb
jae
pop
mov
in
inc
push
pop
push
jle
mov
leave
call
mov
inc
or
mov
mov
clc
sub
add
xor
out
xchg
scas
loopne
pop
clc
outsb
lds
pop
jge
or
jp
cwtl
xchg
iret
xor
dec
and
xchg
addb
jmp
repnz
inc
popa
loopne
xor
jb
mov
sbb
aam
das
cli
lock
sub
cmp
add
dec
daa
inc
pop
or
inc
xchg
sbb
aad
call
pop
movsl
mov
dec
mov
stc
inc
mov
mov
xchg
push
mov
dec
test
loopne
xlat
cmp
mov
sub
inc
js
inc
scas
lret
mov
stos
or
sbb
aam
daa
jo
test
inc
inc
ss
pop
sar
scas
sti
std
mov
cmp
rorl
inc
int3
push
fsubl
mov
mov
dec
xor
cmp
jmp
jle
add
push
std
das
andl
invd
push
jmp
mov
mov
or
shr
andb
loopne
jmp
popa
pop
dec
rorb
fs
dec
sbb
xchg
jge
xchg
fwait
sbbb
add
xor
sbb
mov
and
leave
xchg
inc
xchg
pop
jmp
cmp
scas
mov
and
loopne
rcll
cmpsb
pop
sbb
mov
daa
loop
test
lcall
cmc
pushf
lcall
inc
popf
mov
xchg
sbb
cli
repnz
mov
sub
inc
movsl
xchg
inc
and
fimull
xor
mov
sbb
push
or
jge
push
mov
in
mov
xchg
dec
lock
popf
xlat
scas
xor
lods
daa
pop
inc
aaa
test
lcall
sub
xlat
cmp
rcr
xorl
rcr
cmp
adc
loopne
cmp
xchg
xchg
sbb
xchg
nop
arpl
add
inc
add
mov
ret
sub
add
or
fidivs
xor
call
lods
or
cli
jmp
dec
scas
add
mov
inc
jnp
lods
aas
pop
stos
mov
outsb
fwait
pop
ret
mov
sbb
mov
out
bound
ret
js
lret
aas
add
out
test
cmp
adc
push
jmp
repnz
pop
or
lcall
mov
pop
loopne
jmp
fwait
pop
mov
mov
jo
js
out
ds
test
inc
test
or
insb
cli
sub
fistps
sar
adc
sub
lea
or
inc
fmuls
push
cmp
xchg
test
fsubr
inc
dec
rclb
stos
gs
fiaddl
push
mov
mov
cmp
pushf
cmp
dec
wrmsr
mov
xchg
or
cmpb
mov
add
hlt
jecxz
subl
nop
push
call
and
lea
adcb
dec
nop
mov
mov
or
mov
and
mov
adc
imul
dec
sbb
daa
pop
fidivl
push
adc
cmp
outsb
repnz
adc
jge
xorb
sbb
icebp
sub
stos
in
scas
subb
pop
xchg
es
or
inc
loop
outsb
das
xchg
popa
aam
mov
insb
roll
jnp
inc
sbb
cmp
cmp
in
mov
jne
xor
jno
mov
dec
jmp
xchg
pop
push
push
fmull
lods
adc
jmp
mov
adc
push
cmp
icebp
iret
xchg
and
push
push
dec
sub
enter
push
gs
and
enter
enter
xor
mov
dec
pop
lcall
sbb
pop
push
out
jmp
sbb
adc
xlat
inc
pop
lret
sub
pushl
int
call
lcall
js
jb
xor
scas
rcrb
xor
sbb
loop
adc
fwait
push
lret
outsl
push
hlt
mov
inc
sbb
jnp
addr16
or
in
mov
push
cli
cmc
dec
cmp
repnz
js
lods
sub
and
arpl
rorl
mov
mov
ds
fs
or
pop
fs
sub
lret
sbb
hlt
pop
mov
dec
dec
ja
lahf
call
and
pop
outsl
mov
data16
mov
outsb
lcall
jg
stos
jno
pop
lahf
pop
sbb
jle
frstor
mov
xor
ja
pop
les
ds
dec
sti
jle
cmp
and
movsb
mov
mov
pop
mov
neg
insl
xchg
insl
xlat
jne
sbb
aad
add
leave
mov
adc
roll
aam
imul
pop
pop
xlat
push
ljmp
or
hlt
xor
dec
out
aad
sub
lds
jp
xor
inc
xchg
mov
or
xchg
xor
lsl
mov
lods
repz
out
dec
cmp
mov
pop
mov
loope
add
push
push
cmp
push
xor
test
mov
cltd
push
repnz
dec
push
or
iret
dec
mov
aam
lods
rclb
cmc
leave
aam
popa
out
xlat
jecxz
leave
sbb
popf
push
out
cmpsb
sbb
lods
adc
adc
adc
adc
mov
pop
mov
ret
push
push
repz
or
in
leave
movb
icebp
push
fstl
add
sub
out
xor
jmp
sbb
xchg
jmp
or
testl
dec
push
rorl
popa
loope
test
fadds
sbb
int
repnz
lods
cld
into
pushw
xor
repnz
sub
sbb
xor
movb
dec
filds
in
mov
das
rolb
int
fldcw
jbe
or
in
cs
rol
dec
hlt
adc
leave
xchg
int3
mov
sub
push
lret
lret
xchg
int3
mov
mov
jbe
into
mov
ss
xor
add
ret
call
inc
dec
ret
xor
sbb
push
outsb
adc
mov
inc
jo
push
add
dec
pop
sub
into
xchg
mov
in
pop
sti
mov
pop
mov
jb
roll
int3
loopne
xchg
ss
scas
jge
js
bnd
lock
add
ja
add
adc
rorb
pop
jmp
jmp
dec
push
mov
dec
mov
cmp
arpl
pop
lahf
std
loope
lods
dec
pop
cwtl
mov
cmp
mov
imul
mov
addr16
mov
cwtl
jmp
cli
mov
aad
xchg
push
sarl
std
xchg
inc
loop
sub
hlt
aaa
cmpsb
inc
sbb
in
test
inc
jne
lods
jge
pop
push
faddl
pop
mov
popf
adc
push
repnz
cmp
outsl
push
jg
lods
repnz
sub
addr16
aaa
xchg
adc
in
bound
mov
mov
cs
mov
inc
mov
aam
fs
loope
or
orb
sarl
xor
ret
xchg
cmp
bound
imul
sub
mov
ret
fldt
dec
insb
jne
pop
xchg
pop
fwait
lods
lcall
sub
test
inc
lret
icebp
fldt
flds
dec
mov
scas
sbbb
or
inc
leave
jp
popw
jnp
jle
cmp
pop
jle
fildll
jg
aaa
or
fldcw
fs
adc
xchg
or
push
es
sub
outsb
dec
sbb
data16
add
in
aaa
push
sub
cmp
and
xor
sub
jmp
leave
lds
or
lds
mov
xchg
and
outsb
mov
adc
lds
scas
stc
mov
loop
in
mov
mov
aas
cli
sub
jbe
push
mov
mov
and
lods
xor
ss
mov
cmp
jmp
push
mov
jl
xor
dec
repnz
jb
xchg
cmp
lea
push
mov
bswap
mov
lea
das
outsb
pop
add
pop
push
aad
sub
cmc
int
ljmp
and
xor
or
shlb
adc
jle
xchg
mov
mov
dec
xchg
ljmp
sar
pop
je
cmc
add
and
jae
in
or
cli
mov
jnp
icebp
dec
push
xlat
and
jae
ret
mov
bnd
outsl
mov
xchg
dec
jns
and
pop
jp
shl
fldenv
popa
cmp
add
xchg
je
sbb
fdivrs
cmpsl
jg
sbb
shrb
test
inc
and
adc
pusha
adc
jge
cmc
out
pop
jge
negb
jns
dec
cmp
fnstsw
add
movsl
xchg
lcall
movsl
js
and
pop
and
insb
aam
push
mov
hlt
cli
jle
mov
mov
jno
jns
cld
mov
pop
lcall
jo
mov
mov
out
inc
add
xor
ja
inc
mov
inc
fdivrs
leave
jae
jecxz
mov
pushf
xchg
adc
push
or
xchg
mov
hlt
sbb
cmpsl
ret
lods
xor
pop
or
insl
inc
aaa
adc
lret
dec
and
inc
add
out
xchg
lahf
cmp
mov
lret
jb
pop
jo
ja
xor
iret
inc
shlb
sbb
push
xlat
adc
pop
sub
jns
stc
push
scas
mov
add
mov
inc
jg
insb
mov
stos
push
adc
pop
insl
pop
jb
sbb
cmp
addr16
test
rolb
and
mov
cltd
sahf
add
leave
iret
ret
icebp
jmp
test
loop,pn
sahf
push
hlt
jle
sahf
cwtl
and
icebp
xor
ficompl
mov
das
and
and
push
xchg
adc
out
jg
jle
push
sub
pusha
lret
xchg
ljmp
xchg
or
pop
fildl
mov
jmp
pusha
push
jnp
jns
dec
add
push
data16
or
xchg
inc
shl
mov
mov
sub
mov
pop
lds
push
cli
add
pusha
mov
js
mov
lods
or
cmp
mov
loop
inc
imul
popa
xor
pop
and
adc
push
push
cmp
ret
sub
pop
jp
scas
fcmovnu
pop
fnsave
les
mov
jp
sbb
ja
stos
loopne
out
cmc
cli
and
lahf
addr16
fcmove
rorl
cmc
mov
adc
xor
mov
rcl
cmp
xchg
xchg
ds
aas
aam
mov
scas
xlat
jge
sbb
shrb
flds
adc
in
sbb
and
icebp
cmc
fildl
inc
cld
cld
and
inc
jae
out
push
pop
mov
daa
out
sbb
mov
push
es
dec
hlt
popa
stos
push
adc
and
lret
leave
pop
jae
cltd
fwait
mov
jp
pusha
test
stos
repz
insb
int
rclb
stos
fcomps
loop
out
pop
popf
inc
in
push
mov
sbb
cmp
sbb
push
mov
xorb
pop
mov
push
xchg
imull
nop
je
out
xor
dec
aam
and
repnz
jo
out
test
cmp
test
xorb
add
lock
adc
stc
mov
rcll
push
icebp
jbe
lock
mov
and
cli
sbb
das
pusha
cmp
stc
adc
lret
cvtdq2ps
xchg
out
push
cmc
mov
imul
add
or
xorb
mov
jb
dec
mov
add
pop
and
jo
aaa
lret
inc
lret
imul
mov
jecxz
fstps
sub
pop
or
mov
add
and
jbe
jns
ror
test
push
xor
fldl
jnp
clc
cmp
ja
xor
lock
sub
jle
cld
cmpsb
and
cmp
push
addr16
cmp
xor
js
bound
mov
pop
iret
mov
rcrb
cltd
push
lret
icebp
in
addr16
cs
cmpsb
mov
jnp
outsb
sahf
dec
in
mov
push
movsb
lcall
fistpll
jno
cmpsb
push
clc
in
xchg
xchg
add
pop
lahf
stc
sbb
xor
dec
aas
push
lret
popf
call
push
in
mov
dec
into
cmp
mov
push
pop
loopne
ja
jo
loopne
jecxz
outsb
push
test
pop
lret
call
add
stos
cli
mov
pop
mov
addr16
sub
fwait
sbb
jbe
mov
fists
loop
dec
stos
mov
out
test
jg
or
add
es
pop
mov
mov
ja
pop
mov
push
mov
orl
movsl
rolb
dec
lods
cmp
jecxz
les
or
and
or
lea
inc
inc
gs
call
cmc
in
sub
xlat
and
inc
pop
mov
sar
popa
add
in
mov
data16
xchg
adc
cmpsb
insl
std
out
adc
ljmp
mov
push
mov
push
jo
aad
mov
rorb
cmp
push
repnz
inc
jecxz
mov
fbld
ljmp
mov
xor
int
jne
mov
dec
add
add
jno
sub
icebp
jge
aad
repz
dec
test
test
std
cltd
jl
add
in
mov
inc
lret
dec
jmp
aas
ret
adc
dec
test
pop
lods
daa
fdivrs
pop
dec
mov
scas
push
int
inc
call
mov
fnstcw
fdivrs
std
jns
adc
lcall
adc
stos
sahf
lods
jne
outsb
and
mov
aad
push
testl
push
inc
mov
dec
stos
fmul
sar
imul
pop
pop
lcall
xchg
lock
ss
fs
adc
push
mov
push
mov
testb
add
imul
xor
lods
push
or
and
rolb
insl
arpl
pop
push
mov
stos
das
add
xor
jns
pusha
out
popf
jae
roll
xor
pop
inc
or
dec
lret
lret
movsl
insl
mov
test
lcall
cmp
pop
dec
lds
fwait
sub
inc
mov
or
xor
insb
mov
shl
push
push
in
inc
data16
and
inc
in
push
and
in
sbb
jmp
jb
or
or
push
cmc
add
or
mov
bound
flds
inc
jnp
mov
movsl
lret
jb
add
mov
in
adc
lahf
pop
inc
ljmp
js
pusha
mov
adc
test
or
scas
sbb
cmp
mov
cmp
sub
rcrb
dec
pop
sub
adc
xor
ljmp
insl
adc
lods
push
lds
shll
int3
rclb
xor
rcr
and
push
leave
repnz
call
mov
stos
jb
cmp
lret
loop
inc
filds
mov
dec
fldlg2
idivb
movsb
or
push
cmpsb
add
sbb
jo
mov
fldt
mov
cmp
inc
cli
pushf
in
or
imul
aas
mov
enter
neg
dec
add
push
pop
sbb
popa
dec
jbe
mov
aad
or
pop
sarl
mov
jmp
insb
sub
pop
lahf
lret
sub
pop
imul
and
mov
or
insl
xchg
inc
mov
insb
xor
and
lcall
in
fstl
pusha
loop
or
popa
ret
mov
lcall
push
leave
push
pop
test
and
inc
push
ja
mov
mov
fsubl
adc
add
cmp
test
iret
push
aam
xor
jl
xor
push
dec
aam
mov
sar
jb
add
iret
cmp
je
add
cltd
and
mov
dec
dec
xchg
adc
pushf
dec
lods
xchg
bound
push
mov
push
mov
out
jp
cltd
sub
push
pop
in
clc
loope
cmpb
outsl
cltd
out
aam
lcall
add
mul
xorb
outsb
out
rclb
fsubp
jl
cs
and
jns
and
into
jbe
mov
lret
mov
push
mov
mov
xchg
fadd
xor
fcmovnu
and
int3
cli
push
jne
adc
and
ret
mov
dec
pop
dec
sbb
shlb
test
scas
lret
rorl
test
mov
inc
push
pop
xor
into
adcb
decb
or
inc
push
mov
xchg
ficoml
jb
testb
jmp
nop
push
or
dec
fistpl
or
and
rorl
mov
and
out
xchg
jnp
pusha
ficoml
mov
mov
fcomp
cmpsb
xchg
sub
aas
add
insb
jno
ds
push
or
addl
adc
adc
jmp
mov
mov
cmp
xchg
call
out
pushf
fmuls
cmpsl
adc
and
mov
mov
mov
test
ljmp
sub
lods
loop
fs
pop
mov
test
nop
cmp
shrl
comiss
jbe
loop
mov
inc
mov
pushf
sub
out
repnz
adc
pextrw
or
scas
xor
xor
cmp
mov
sub
icebp
sbb
loopne
loop
jmp
inc
fcmovnu
aaa
add
jb
into
mov
inc
pop
loopne
out
and
push
pop
jl,pn
pop
mov
int3
mov
imull
jle
ret
mov
popa
jno
lods
mov
leave
arpl
cs
movsb
jecxz
sbb
mov
mov
stos
outsb
cmp
lahf
jle
aaa
movsb
int3
pop
push
inc
sub
cld
mov
pcmpeqd
addr16
insb
cwtl
sarl
imul
ss
mov
xlat
dec
mov
inc
ja
dec
pop
cltd
fdivrl
cmp
or
inc
mov
arpl
jg
or
loopne
inc
repnz
icebp
shlb
and
xchg
push
sub
sbb
and
out
shlb
rcll
popf
cs
mov
pusha
pop
push
incb
arpl
mov
cmp
pop
xchg
and
movsl
dec
mov
lret
sub
scas
adc
pop
ret
repnz
jl
sub
ret
rclb
ljmp
aad
push
dec
scas
imul
cwtl
out
push
jg
ret
es
sub
lret
imul
jmp
sbb
jne
pop
je
sbb
mov
pop
fisttpll
sub
in
inc
cli
pop
xor
test
xchg
inc
sub
mov
jp
mov
popa
int3
rcrl
out
mov
out
lcall
jmp
fsts
mov
push
test
xchg
fs
hlt
jp
mov
aad
in
push
js
mov
or
jno
mov
xlat
pop
add
mov
scas
pusha
aas
cmp
inc
test
int
les
mov
aas
xor
cld
lea
or
bound
hlt
xor
add
push
std
add
mov
xchg
lods
sub
lcall
lret
out
pop
loope
push
push
xor
sub
push
ja
jno
loopne
push
shrb
rol
push
cmp
mov
jb
pop
dec
int3
dec
dec
or
aam
push
sbb
andb
xchg
push
or
ljmp
ret
mov
xchg
shll
movsb
jge
mov
sbb
in
cli
dec
fsubrl
mov
in
scas
or
aas
ja
lret
repz
movsb
sbbb
push
push
jl
fidivs
test
pop
dec
sub
lcall
inc
mov
add
aas
in
and
jb
pop
xchg
or
and
xor
xlat
mov
dec
fwait
sbb
dec
add
xorl
and
mov
movsb
sub
push
xchg
or
ds
jb
divb
lods
mov
stos
call
mov
fildl
clc
stos
cmpsl
mov
xor
inc
pop
bound
icebp
test
mov
test
mov
cmpsb
imul
sub
cmp
or
sbb
jmp
neg
out
xchg
mov
cmpsb
imul
sub
cmp
or
sbb
jmp
jbe
out
xchg
mov
cmpsb
imul
pop
sub
cmp
or
sbb
jmp
neg
out
xchg
mov
cmpsb
imul
adc
mov
test
fsts
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
mov
mov
jo
sbb
or
jp
push
dec
pop
dec
dec
mov
sahf
mov
fcmovnu
lret
mov
sub
jp
or
jnp
imul
dec
dec
mov
sahf
mov
fcmovnu
lret
into
cmp
sub
sbb
add
jnp
and
lret
int
out
neg
mov
lret
jmp
push
clc
inc
mov
xlat
pop
jbe
cmp
jle
aad
adc
in
es
ret
cli
in
push
mov
roll
xchg
jle
cmpsl
push
pop
mov
ds
ljmp
sub
jnp
dec
inc
hlt
pop
lds
outsb
fcomp
push
idivb
mov
pop
out
cmp
rcrl
lcall
dec
push
inc
dec
inc
lret
enter
adc
push
rcrl
loope
or
sub
mov
inc
cmp
into
sbb
and
and
or
jge
out
sbb
jle
cmp
in
stos
scas
fwait
sahf
mov
fcmovnu
lret
into
cmp
sub
sbb
or
jnp
imul
dec
daa
iret
mov
lds
pushf
cwtl
scas
lcall
outsl
jp
cmp
aas
add
fucomi
lret
out
sti
ret
mov
mov
stos
imul
imul
sbb
or
cli
test
clc
in
stos
jmp
shr
out
fcmovnu
lret
into
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
sahf
mov
fcmovnu
lret
into
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
jae
dec
mov
and
sbbl
int
or
adc
pop
filds
out
mov
mov
cltd
cvtps2pi
pop
push
imul
lods
cs
in
adc
xor
icebp
mov
xchg
or
add
fwait
cmp
mov
scas
sbb
xchg
sahf
sarl
push
sbb
fcoms
mov
lcall
test
ret
fwait
or
ficompl
fdivrl
repz
cmp
fistl
mov
push
testb
xor
lea
pop
sub
imull
repnz
pop
jne
pop
push
add
cltd
mov
out
push
fs
scas
fsubl
xchg
out
bound
adc
mov
mov
and
inc
pusha
out
ss
rcrl
int
ja
flds
sbb
inc
mov
sbb
int
inc
xchg
fst
push
jl
mov
mov
in
sti
movsl
push
lahf
imulb
pop
pop
jg
sub
shr
fisubrs
aad
xor
lds
and
bound
out
jns
inc
nop
push
stos
dec
dec
push
call
icebp
xchg
lds
divl
adc
sub
push
out
add
and
xlat
pusha
std
psllq
mov
mov
nop
mov
jecxz
aaa
ret
mov
clc
int
and
xchg
in
xor
mov
pop
jo
mov
out
sbb
mov
jnp
jecxz
xor
sahf
jle
insl
stos
xor
mov
aas
jg
or
scas
xlat
mov
outsb
sti
int3
dec
fwait
pop
je
cltd
xchg
adc
mov
adc
and
outsl
lret
pop
and
add
jno
cltd
lahf
ret
mov
add
cmp
in
cmp
shlb
aad
ret
pop
jns
dec
lock
bnd
mov
or
or
into
adcl
adc
cwtl
dec
aam
add
repz
lcall
pop
add
push
jae
bound
in
sbb
push
stc
or
add
mov
shr
sub
adcl
insb
adc
out
jmp
cmp
pop
and
call
rcrb
repnz
sti
or
insl
hlt
mov
and
lahf
ds
and
mov
xchg
add
sub
push
jecxz
arpl
jns
cwtl
out
addl
dec
mov
mov
cwtl
mov
movsb
mov
fistl
add
pop
inc
scas
xor
loop
push
mov
xchg
cli
aaa
test
mov
leave
inc
ret
dec
aam
pop
push
negl
repnz
xchg
sbb
add
jnp
xchg
insb
jg
cmp
jecxz
mov
movsl
adc
sbb
jb
orb
lahf
or
jae
and
dec
inc
xchg
in
pop
lock
mov
aam
sub
testb
js
cld
test
dec
pop
sbb
shrb
repnz
je
repz
and
lahf
out
xor
mov
pop
cmp
test
movsb
pop
bswap
sahf
ja
ret
pop
inc
imul
mov
xor
out
scas
push
inc
call
xchg
xor
sub
mov
mov
into
push
lea
mov
scas
jns
mov
insb
mov
xor
mov
push
xchg
add
xor
cld
xor
imul
divl
dec
mov
inc
cmp
push
mov
mov
inc
sar
out
xchg
push
lea
movsl
mov
imull
xor
mov
xchg
and
jne
addl
adc
push
sarb
mov
mov
xchg
mov
cmp
insl
push
add
xor
xchg
mov
ljmp
xor
sub
je
rcr
cld
bound
cmpsl
arpl
aas
jns
add
mov
jns
in
scas
jecxz
push
xchg
mov
out
arpl
cmp
mov
lods
movsb
mov
add
cmp
push
add
fcomps
push
adc
int3
add
dec
cmp
das
mov
test
sub
pop
fwait
out
lods
mov
xchg
in
out
pop
or
cmc
mov
insb
or
push
push
inc
xchg
mov
ficoms
das
notl
inc
call
test
dec
dec
aam
mov
cmp
xchg
fisubrs
adc
mov
mov
insb
sbb
push
xorl
pusha
aam
movsb
cs
and
mov
cmp
push
test
ret
sub
xor
repnz
inc
mov
jg
jp
cmp
mov
mov
and
jbe
mov
mov
inc
frstpm(287
pop
push
inc
lods
aad
xchg
cmp
stos
iret
xchg
sbb
inc
js
jmp
sahf
jnp
outsl
pop
jb
int
xor
add
das
push
jne
jnp,pt
imul
and
mov
loope
gs
jne
lret
xchg
push
push
inc
pusha
decb
lcall
xchg
int
test
nop
inc
cmpsb
insb
mov
gs
imul
popa
cmp
mov
mov
outsl
sahf
cwtl
jne
fwait
idivb
sub
xlat
and
xchg
popa
fwait
rcrw
lahf
sar
out
lods
lret
jecxz
ss
xchg
movsl
add
adc
mov
push
sub
pop
dec
adc
add
pushf
push
insl
mov
scas
xor
loope
xor
enter
incl
lods
jne
stos
mov
adc
xor
setg
loopne
adc
lret
in
sbb
mov
sub
cmc
mov
fdivr
mov
push
pop
sbb
orb
stos
fdivs
leave
mov
mov
dec
inc
adc
sub
mov
bound
mov
add
hlt
test
jbe
imul
jg
hlt
adc
add
in
insb
mov
and
push
cmp
inc
outsl
inc
stos
mov
hlt
faddl
jl
xchg
decb
sub
push
hlt
cmp
or
mov
adc
int3
out
aad
xchg
mov
xorl
mov
stos
mov
cld
fdivp
ret
jo
int
and
or
pop
mov
xchg
and
out
dec
jbe
fcoms
data16
xor
fwait
mov
notb
imul
in
xchg
jno
adc
jp
mov
mov
pop
pop
push
or
push
cltd
mov
cmp
xchg
ret
iret
ret
push
inc
arpl
push
jo
push
repnz
arpl
fs
xor
mov
adc
sub
jg
orb
lret
xchg
adc
hlt
xor
jl
nop
daa
fmuls
and
add
mov
pop
jne
pop
lcall
xchg
lods
fs
sbb
out
add
lahf
mov
xchg
fs
cmp
sub
cmp
sub
popf
aaa
mov
cmp
cmp
adc
mov
lds
lods
cwtl
adc
outsb
cmpl
xchg
scas
jne
jne
popa
and
icebp
clc
scas
js
mov
jg
aam
shl
adc
jmp
je
xor
jp
sbbb
jmp
dec
scas
daa
pop
or
test
ss
int
adc
jno
out
dec
mov
inc
repz
sub
push
pop
out
sbb
mov
and
divl
f2xm1
pop
icebp
mov
in
lcall
icebp
mov
pop
jno
pushf
mov
mov
cmp
push
andb
adc
dec
sbb
jecxz
inc
or
sbb
pop
inc
insl
cmp
outsb
addl
mov
push
stos
sub
stos
fsubs
fdiv
ror
jno
push
ja
loop
in
adc
mov
cmpsb
cmp
mov
mov
sbb
xchg
xchg
jl
cltd
xchg
das
subb
cltd
gs
fmuls
dec
call
sub
je
ljmp
mov
adc
insl
mov
jns
push
cmp
jns
mov
daa
rclb
mov
mov
addr16
pushf
add
cmp
lock
stc
iret
das
gs
jmp
rcrb
cwtl
icebp
roll
jns
adc
pop
xchg
push
mov
fs
dec
js
pop
jne
mov
mov
xchg
in
add
loopne
mov
loopne
mov
mov
ds
stc
jnp
pop
rcrl
lods
pop
pop
xor
xor
pushf
sub
gs
push
sub
hlt
test
mov
dec
pusha
pop
mov
xchg
fldl
cmp
scas
out
cltd
inc
cmpb
add
mov
sub
test
xchg
in
sub
sarb
js
mov
cld
das
das
cld
push
lock
lods
call
push
lock
adc
mov
fcomps
dec
les
pop
in
insl
mov
out
imull
pop
rorl
inc
adc
pop
jle
add
pop
loope
jns
pop
push
or
xor
xchg
pop
xor
aad
nop
mov
cmp
push
stc
cmp
iret
inc
sar
sbb
dec
sbbl
andl
and
xlat
mov
push
push
sub
ljmp
pop
xchg
mov
dec
jns
xchg
cmp
sahf
js
and
test
subb
in
mov
adcb
add
xor
pop
add
popa
es
push
cmp
xor
push
pop
scas
push
inc
nop
jl
mov
mov
push
iret
enter
jne
in
xchg
cmpsb
xchg
fst
addb
xchg
mov
push
and
adc
xor
add
mov
outsl
pop
aaa
in
mov
push
push
cmp
xchg
cmp
loope
mov
int3
mov
push
adc
push
or
addl
xor
icebp
scas
popf
push
js
inc
out
mov
in
push
call
add
inc
int3
push
push
fisubrl
mov
cli
decb
push
sbb
mov
jg
sbb
or
pop
lcall
pop
add
loop
lds
loop
in
jbe
xchg
push
cli
push
jecxz
or
stos
dec
push
inc
jp
into
mov
mov
mov
scas
xor
mov
dec
jecxz
loopne
movsb
mulb
hlt
jl
nop
icebp
pcmpeqb
jno
je
push
insl
pop
mov
jp
sub
lret
ds
xchg
dec
sub
stc
and
in
cltd
rolw
and
push
xor
jecxz
cmp
push
push
out
inc
mov
xor
push
mov
pusha
mov
cmp
sti
into
imul
adc
hlt
pop
push
arpl
cmp
popa
out
popf
int3
inc
aaa
les
cmp
lods
testb
in
inc
out
push
xchg
sti
jo
xor
es
push
roll
fcoms
adc
movsl
jae
mov
mov
lea
insb
pop
repnz
cmpl
mov
lea
out
xchg
xlat
icebp
sti
loopne
in
mov
sub
xchg
sub
jnp
aam
test
out
cs
loope
mov
cmp
mov
adc
iret
sbb
iret
test
pop
cmp
icebp
push
rclb
sti
outsb
and
jl
mov
push
imul
cmc
sub
test
std
cmp
and
dec
iret
dec
xor
sub
sub
push
cli
push
push
inc
and
aam
dec
popf
or
shlb
xchg
out
into
fsubl
push
testl
in
dec
jns
inc
imull
jno
pop
test
mov
mov
out
push
rcrl
sbbl
xor
daa
xchg
inc
mov
flds
xchg
xchg
cmp
ja
add
sub
mov
and
dec
inc
out
mov
jp
test
adc
imul
inc
stos
in
mov
std
add
mov
les
lcall
inc
in
scas
sub
mov
rcr
sub
pop
call
out
pop
or
xchg
orb
lcall
call
mov
jno
add
stos
pop
cmp
mov
loop
shl
push
shll
std
adc
xor
push
inc
mov
sbb
scas
mov
loopne
mov
data16
cwtl
inc
xchg
shlb
int3
xchg
or
inc
test
cmp
mov
das
cltd
pop
cmpsl
cltd
lock
mov
js
scas
testl
or
leave
test
mov
dec
sbb
repnz
scas
inc
cwtl
shrl
mov
aam
movsl
sub
imul
inc
xchg
pop
jnp
add
pop
sbb
pushf
cld
mov
inc
js
mov
jae
repz
push
inc
fwait
mov
gs
loope
sbb
add
aaa
sbb
sbb
cmp
mov
and
jno
in
xor
pop
data16
popa
outsb
cld
pusha
movsl
test
lcall
sbbl
xchg
mov
push
ficoms
adc
lods
push
push
xor
dec
cs
cs
pop
and
addr16
dec
je
mov
mov
cltd
mov
jg
jl
pop
xchg
pop
mov
cmp
das
sbb
jmp
das
movsbl
nop
pop
ret
test
data16
ds
pop
jp
movsl
pusha
push
jb
push
aad
pop
in
idivl
dec
or
xor
insb
mov
jns
adcb
mov
or
sahf
testl
andb
or
and
xchg
bound
fs
sarl
ficompl
fistpll
imul
and
cmp
cltd
mov
mov
sarl
dec
jmp
dec
adc
fiadds
add
testl
and
mov
mov
sti
xor
lahf
dec
xchg
neg
jmp
push
push
mov
add
repz
adc
ljmp
sti
xor
xchg
or
pop
mov
sub
or
jnp
imul
jl
js
sbb
in
mov
push
repnz
jb
out
in
out
roll
scas
movsl
dec
out
cmp
add
inc
push
xor
push
std
loopne
popa
jns
inc
subl
adc
sub
lods
nop
mov
out
movsb
mov
jns
sub
xchg
leave
ret
dec
aam
push
jle
insb
ror
push
or
mov
or
shrl
outsl
testl
sub
mov
and
mov
cmp
and
push
pop
aad
inc
pop
ficompl
cmp
popl
jmp
xor
movsl
cmp
and
popa
pop
mov
test
push
je
inc
fisttpll
bnd
xchg
or
fistps
loopne
or
repz
cmp
jmp
jb
xchg
sub
repnz
push
fisubs
nop
sub
pop
insb
mov
xchg
mov
mov
cmc
mov
pop
fst
or
shll
inc
xchg
aas
data16
cltd
or
std
mov
ds
je
push
test
push
cli
inc
adc
ret
dec
inc
lock
fisttps
and
addr16
sbb
pop
pushf
jnp
fsubr
mov
leave
push
clc
pop
jb
xchg
push
mov
push
push
inc
xor
loop
mov
ret
cwtl
sbb
enter
sbb
push
outsl
enter
push
mov
test
ss
mov
movsb
push
xchg
sbb
aam
insb
imul
sub
push
std
leave
xor
sbb
cmp
out
sub
inc
jl
jl
aad
mov
sbb
push
pop
ljmp
in
cld
fnstcw
mul
sahf
lret
sbb
mov
inc
cmpsl
mov
popa
jne
ds
lahf
aaa
fstpl
xchg
movsl
cs
movsl
mov
mov
inc
mov
out
outsl
mov
adc
mov
xchg
cmp
cmpsl
outsb
insl
addr16
lods
test
push
mov
adc
daa
xchg
inc
ljmp
daa
jg
jnp
xor
fcmovb
adcl
test
stos
inc
sbb
cwtl
cltd
cld
xchg
xor
xchg
icebp
push
push
adc
lret
sub
pushf
jb
scas
iret
jmp
out
and
cld
xor
negb
lret
adc
dec
insl
sbb
sbb
je
js
cmp
mov
sarl
pop
outsb
popa
jae
mov
popa
loop
push
cli
xchg
mov
fcomp
stos
pop
jg
imul
leave
sub
jl
loop
mov
cld
cmpsl
mov
stos
pop
leave
adc
sbb
leave
cmp
push
and
test
test
jg
int
jnp
or
sub
mov
arpl
movsb
add
ljmp
in
mov
test
jno
jno
shufps
test
das
sar
hlt
insb
cmc
and
je
cmp
popa
mov
in
inc
dec
sbb
rcrb
adc
int
sbb
push
pop
sub
or
out
cmp
pop
cwtl
sbbl
sbb
mov
inc
cmp
test
cli
or
mov
adc
popa
push
jg
adc
adc
and
popa
mov
andb
or
mov
int
pusha
dec
lea
dec
ret
pop
fwait
jge
xchg
mov
lds
in
rcl
jge
xlat
es
pop
push
push
pop
loop
cwtl
sbbb
jmp
in
xor
sbb
mov
xor
push
sahf
xor
flds
sub
cmp
or
jg
sbb
insb
push
mov
xor
xchg
jecxz
inc
pop
and
mov
push
mov
cmp
jae
scas
mov
cmp
jle
jne
sbb
cltd
mov
cmp
mov
fidivl
fistl
xor
cmpsl
shll
sbb
mov
nop
stos
xor
and
stc
lret
or
rolb
ds
fnsave
aaa
sub
ds
cmp
add
movsb
sub
adc
adc
ret
dec
leave
sub
ror
mov
push
fsubs
add
sub
dec
jne
rolb
pop
inc
jmp
mov
xchg
in
out
dec
jae
and
push
xchg
ljmp
hlt
pop
out
outsb
sub
jno
lods
faddp
xor
mov
lds
cvtpi2ps
fiadds
out
mov
int
ss
lret
js
pop
loop
mov
mov
clc
pop
mov
imul
aas
dec
mov
push
jp
xor
insl
xor
sbb
cmp
xchg
adc
or
dec
and
cli
cmp
sahf
mov
mov
xchg
xchg
add
jae
mov
pop
ja
dec
adc
in
xlat
cmp
fists
inc
add
push
out
icebp
adc
push
or
stos
adc
adc
fidivs
bnd
aaa
lods
fimuls
xchg
je
ret
dec
rcrb
xor
iret
fst
scas
daa
sbb
cld
cmp
mov
je
roll
leave
test
xchg
hlt
int3
aaa
push
fdivr
add
jl
fnstcw
dec
jnp
xor
mov
xchg
dec
pop
mov
jne
xor
dec
daa
sbb
andb
lock
or
add
testl
mov
insb
sbb
push
repnz
xchg
push
or
sub
insb
out
push
and
in
cmpsl
loop
dec
lret
pop
fildll
and
jbe
in
mov
repnz
xchg
sub
sti
xchg
inc
inc
adc
or
sti
dec
insb
xlat
shl
adc
dec
leave
pop
lock
push
xor
add
shr
push
in
sbb
push
ljmp
mov
pop
out
xchg
or
scas
inc
movsl
fstps
dec
subl
enter
insl
push
cli
or
mov
xchg
js
mov
push
icebp
xor
aam
lock
pop
jno
push
xor
push
jl
out
ret
aaa
adc
inc
imul
xor
cmp
fcompl
xor
jne
mov
ds
testl
sub
pop
adc
push
pop
cld
mov
jns
mov
repnz
push
ret
mov
cmpsb
repnz
leave
mov
dec
or
inc
inc
js
test
je
jp
dec
inc
jns
mov
clc
roll
repz
fidivrl
mov
pop
pushf
pop
sub
push
sti
fstl
outsb
jecxz
sahf
ret
jne
inc
jnp
xor
cmp
out
es
push
xor
out
mov
sbb
cli
rol
ret
mov
mov
in
xorb
mov
ljmp
or
push
jl
aad
add
cmc
cmp
fcompl
inc
stc
dec
inc
mov
push
stc
mov
mov
fs
in
jae
nop
scas
mov
jmp
fcmovnu
lret
into
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
sahf
mov
fcmovnu
lret
into
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
sahf
mov
fcmovnu
lret
into
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
sahf
mov
fcmovnu
lret
into
cmp
sub
mul
xchg
movsb
mov
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
imul
jge
mov
jo
inc
adc
call
stc
fldln2
test
lods
cltd
mov
dec
insl
pop
jge
or
sbb
sar
leave
in
xlat
std
test
lods
cltd
mov
push
jne
xor
add
lock
xchg
xchg
mov
jmp
add
push
sub
jp
cmp
enter
outsl
pop
add
mov
push
test
call
fs
add
out
mov
mov
insb
xor
and
in
test
inc
xchg
roll
and
xchg
pusha
mov
xchg
sub
mov
imul
negb
mov
cld
adc
jo
mov
sbb
push
cltd
lods
cmp
hlt
mov
int
push
jmp
adc
mov
cmp
xchg
cmpsb
not
xchg
mov
push
movsl
je
mov
mov
in
movsl
ljmp
pop
pusha
dec
dec
je
jge
or
add
int
vpmuludq
in
xchg
mov
mov
sub
sub
jl
inc
sbb
mov
mov
lahf
sti
ret
push
and
xor
push
sub
inc
or
dec
rsm
mov
cwtl
ljmp
lret
or
adc
cmp
cmp
jmp
in
fscale
test
lods
cltd
mov
dec
insl
pop
jge
or
sbb
leave
in
fscale
test
lods
cltd
mov
imul
sub
xchg
clc
frstor
cmp
lods
push
push
xor
inc
es
push
pop
sahf
adc
mov
loopne
sub
or
outsb
or
out
out
jg
cwtl
in
out
test
xchg
addr16
lods
es
fiadds
and
clc
ror
inc
enter
mov
mov
fsubl
mov
fsubrp
stos
out
into
aas
xor
xchg
shlb
mov
popa
adc
das
outsb
sbb
mov
mov
jmp
test
mov
sbb
push
test
push
mov
bound
xchg
pop
dec
jae
ret
jl
or
int3
pop
add
dec
loopne
xchg
jmp
out
lret
dec
push
sbb
int3
dec
je
adcl
adc
jae
es
mov
cmpsb
dec
jae
dec
stos
neg
push
mov
scas
xchg
addr16
pop
loopne
cmpsb
aam
sarl
int
int3
cmp
sbb
cmpsl
mov
das
shl
int3
push
jmp
jle
aas
imul
push
jno
xor
jg
mov
mov
out
mov
sub
lcall
pop
xor
aaa
faddl
xor
jge
mov
jle
push
or
out
mov
pop
mov
aad
fsubrl
gs
add
sub
push
mov
pop
adc
insb
dec
pop
std
jno
sbb
dec
xor
mov
aad
mov
push
mov
mov
inc
pop
fstp
in
adcl
push
pop
cmp
push
in
pushf
dec
lcall
pusha
xor
insl
mov
popf
cltd
jl
xor
incl
mov
jno
xchg
cmp
loopne
ja
ss
call
jle
and
push
test
mov
sti
cmp
pop
orl
addb
jbe
xchg
jno
and
faddp
test
out
aas
stc
leave
xor
outsl
pop
push
dec
in
fucomi
fiadds
cmp
push
and
dec
scas
mov
lods
push
gs
dec
lret
rcll
jge
out
add
jle
mov
leave
mov
push
es
pop
adc
cmp
daa
addr16
lcall
mov
jle
stos
shll
test
shll
xchg
jmp
inc
sbb
leave
cmp
ret
test
jnp
into
sub
jmp
test
mov
dec
test
fs
mov
mov
pop
or
adcb
and
scas
cltd
adc
out
push
inc
ja
movsb
mov
popf
mov
push
punpcklwd
lods
add
push
sbb
push
push
jns
xor
inc
dec
or
stos
gs
pop
inc
lahf
cltd
jmp
out
cld
shlb
pop
inc
mov
jne
push
cmp
int
adc
popf
out
add
or
mov
mov
jns
mov
insb
bound
arpl
mov
std
mov
repz
int3
jmp
sbb
andl
in
pop
ds
shrb
scas
outsl
in
cmpl
es
sub
orb
out
xorb
xor
jle
das
xlat
xchg
and
in
ret
push
or
ljmp
jns
dec
xor
cmp
ss
cmp
int
mov
lcall
jns
pop
leave
in
fimull
cmp
lret
inc
jle
daa
shll
sahf
movsb
in
inc
jl
jecxz
cwtl
or
stos
addr16
mov
addl
add
xchg
data16
xor
fstpl
repnz
fwait
or
or
shlb
pop
jecxz
repnz
inc
fsubs
cmp
test
aam
mov
fsub
repz
adc
xor
ss
sub
adc
adc
pusha
cmovg
arpl
push
fisttpll
rorl
imul
pop
push
ja
enter
test
xchg
inc
dec
fsubl
es
loopne
inc
fdivrs
lret
mov
mov
xchg
jge
inc
cmp
fisubrl
lods
bound
call
push
popf
ds
jl
or
mov
mov
test
push
cs
adc
stos
push
arpl
xchg
aad
jg
sub
ja
test
xor
ficoml
fwait
aad
jb
xchg
leave
inc
push
adc
push
push
cmp
sbb
push
push
pushf
jle
orl
mov
fmull
dec
rcrb
jnp
mov
cmp
fistl
xor
cmp
adc
push
adc
adc
ret
cmc
int
repnz
jecxz
aad
rcl
push
mov
sbb
scas
fdivl
leave
mov
stos
mov
pop
fiadds
in
int3
out
jne
lods
push
add
imul
rcr
xchg
addr16
clc
mov
out
push
lcall
mov
dec
cmp
adc
dec
push
sub
xchg
ret
lea
call
out
movsb
out
fcmovnu
cli
test
mov
dec
pop
push
add
repnz
nop
cmp
test
xchg
sbb
pop
or
adc
fs
add
and
push
pop
xchg
cmp
cmpsl
loop
rcr
cmpsl
push
faddl
pushl
mov
sbb
iret
ret
roll
cmp
mov
xor
scas
jg
cmc
jo
xchg
stos
lods
jp
mov
popf
in
ds
negl
dec
mov
mov
jno
pop
xchg
sub
push
pop
xchg
xor
in
sub
and
dec
mov
cmpsb
push
push
fldcw
push
or
pop
loope
push
fs
push
cmp
adc
and
movl
jl
outsl
mov
xchg
dec
insl
cli
push
pop
bound
xchg
and
leave
aaa
pop
aam
sub
rcrl
insl
test
cmpb
sbb
stos
sarl
aaa
aas
incl
xchg
jg
or
sahf
ret
sub
cmp
sbb
mov
mov
movsb
xchg
sub
jno
cmp
push
loopne
rclb
inc
push
icebp
int3
leave
dec
push
cmp
les
cwtl
push
filds
icebp
stc
dec
fistpl
push
xchg
inc
decb
je
sbb
push
adc
or
pop
xor
ds
inc
pushaw
testb
dec
and
sub
sub
lcall
cmp
popf
adc
and
add
mov
int3
add
icebp
faddl
pop
ds
pop
in
pop
cmp
cli
pop
push
sbb
xchg
insb
jecxz
sbb
fs
add
popf
lret
popa
test
jns
in
jecxz
push
add
roll
iret
repnz
pushf
push
sub
sbb
push
loopne
xor
inc
and
add
aam
fucom
mov
out
icebp
add
rorb
andl
jecxz
pop
int3
jb
pop
jo
test
pop
cmp
test
mov
into
out
fdivp
mov
mov
jp
fisubs
dec
xchg
out
add
insb
iret
pop
sbb
push
into
into
xchg
sbb
xor
loopne
lret
xchg
sbbb
inc
mov
push
hlt
inc
jl
push
testl
or
ret
orl
push
xchg
push
test
movl
lds
xchg
mov
xor
gs
vsubsd
adc
orb
pop
shrl
cmpsl
or
pop
add
fimull
xchg
lahf
mov
test
and
stos
mov
pop
or
call
xchg
test
inc
addl
cmpsl
dec
pop
dec
pop
mov
ret
push
fidivrs
or
push
cltd
mov
inc
push
push
mov
push
xor
cmp
enter
add
imul
inc
sbb
mov
sti
xor
lods
ss
int
sub
pop
call
ds
out
xchg
in
xor
lsl
js
shll
xchg
fmulp
pusha
sar
xchg
notb
pop
mov
into
xchg
sbb
ret
jo
cmp
data16
push
pop
xchg
test
add
cmpsb
int3
sub
ss
push
imul
addr16
cmp
jl
hlt
push
cmp
sbb
in
les
push
dec
push
loop
in
arpl
jae
xor
hlt
jge
jbe
or
adc
inc
sub
inc
mov
mov
shl
addb
ret
xor
icebp
add
pop
nop
push
jbe
mov
icebp
std
push
push
lret
lret
mov
imul
ljmp
jmp
sbb
adc
dec
cmp
or
hlt
jbe
or
ret
adc
dec
outsb
xlat
jg
stos
dec
xchg
pusha
dec
insb
push
rcll
shrl
lret
add
repz
pop
test
out
aad
bnd
stc
cmp
lcall
mov
or
popa
xor
mov
icebp
lahf
pop
gs
mov
sbb
xchg
div
int3
xchg
pop
and
jecxz
mov
or
fsubp
fnstcw
hlt
popa
int
arpl
add
lods
and
cltd
movsl
int
jne
and
push
push
fsubrs
add
jbe
pop
cmp
pop
addr16
test
adc
fsubl
pusha
stc
pop
stc
mov
and
or
sub
mov
mov
pop
mov
pop
pop
fcompl
jecxz
ljmp
dec
sub
push
outsb
xchg
mov
popl
push
aad
bound
cmpsb
fsubrs
cmp
popa
cmp
mov
aad
pop
scas
mov
add
shll
dec
add
add
push
dec
lcall
pop
xchg
mov
sub
call
dec
nop
movsl
dec
mov
adcb
push
cmp
jge
xchg
cli
iret
pop
ffreep
mov
sbbl
cpuid
mov
pop
cli
or
pop
pusha
xchg
iret
xor
sub
push
jl
leave
and
mov
mov
cld
jbe
dec
rep
add
sarb
scas
test
jge
mov
outsb
insl
iret
and
lea
test
ret
xor
xor
fidivl
shr
pushf
jge
in
aad
cltd
iret
jmp
pop
clc
sub
dec
mov
xchg
jle
in
pop
dec
cmpsb
xchg
outsb
pop
jo
xor
pop
mov
int
popa
sti
inc
dec
sub
js
mov
mov
cmp
pop
pop
cmp
bound
mov
je
fcompl
sti
xor
outsl
aas
ss
repz
sbb
repnz
test
and
dec
aad
sbb
mov
cmp
test
mov
sti
and
aaa
jmp
arpl
inc
push
aaa
dec
xor
dec
sbb
jb
push
ss
test
popa
mov
iret
stos
adc
xchg
push
xor
ret
cmp
xchg
rcll
jecxz
rcr
or
sub
add
inc
les
lcall
or
ja
fsub
jns
inc
pushf
je
or
sub
into
cs
inc
xor
xchg
ja
cmc
sti
jp
in
arpl
aaa
inc
push
xchg
pop
test
mov
adc
mov
ret
xor
icebp
repnz
lcall
mov
sbb
int
push
pop
add
das
repz
jmp
test
and
push
pop
das
frstpm(287
xchg
fstpl
aaa
adc
mov
push
jmp
iret
or
gs
sub
add
mov
jmp
pop
jo
or
xchg
mov
dec
mov
xchg
jg
fildll
in
or
cmp
xchg
push
leave
sub
out
xchg
lcall
hlt
pusha
sub
pop
in
cmp
shrl
push
xor
repz
sub
push
add
scas
sbb
push
popl
adc
insl
cmp
lods
xorl
fucom
xor
fldl
adc
loop
lock
test
jns
jae
jge
shlb
jns
and
test
mov
ss
dec
in
inc
xor
adc
addr16
push
and
in
lods
xchg
outsb
icebp
sub
inc
mov
test
cld
dec
mov
pop
pop
xor
or
xchg
xchg
jl
nop
cmp
scas
push
jl
mov
and
cld
into
scas
and
rclb
inc
or
lret
xor
lret
stos
xlat
iret
inc
sahf
shrb
das
iret
pushf
repz
pop
aaa
fcmovnbe
insb
add
fdivrs
insb
shrl
stc
mov
roll
pop
sbb
sub
mov
popa
mov
push
loope
lret
sbb
push
push
mov
or
and
test
popa
or
push
in
cmpsl
mov
xor
fsubrl
daa
cwtl
ljmp
pusha
repz
pop
in
mov
inc
lock
xchg
sbb
repz
sub
jne
js
or
outsl
sbb
nop
daa
cmc
cmp
in
sub
sbb
aaa
pop
lock
leave
fdivl
inc
push
fsubr
push
xchg
cmp
mov
xor
dec
xchg
pushf
aaa
xchg
sub
sbb
or
inc
mov
mul
dec
sub
dec
out
stos
adc
inc
dec
scas
test
aaa
sub
lahf
jge
leave
ss
add
mov
add
push
xor
fnstenv
push
mov
xchg
scas
adc
jecxz
incl
mov
mov
ds
jo
jg
stos
pop
outsl
and
xor
lret
sub
repz
arpl
pushf
mov
cmp
fidivrl
mov
dec
jle
hlt
mov
inc
cltd
std
inc
leave
gs
test
or
in
xchg
fdivl
jbe
xchg
lock
mov
add
fsts
addl
sahf
mov
jl
lea
mov
add
add
sub
adc
in
sub
fistpll
adc
rorb
mov
dec
call
cmp
mov
mov
sub
data16
add
loop
mov
pop
mov
sbb
out
dec
mov
jns
jp
inc
cmp
mov
mov
mov
sbb
xlat
xchg
pop
add
and
je
stos
dec
inc
push
xchg
cld
dec
cs
das
dec
push
mov
bound
adc
xchg
xchg
cld
sbb
imul
mov
mov
xor
repnz
test
aad
sti
aam
les
int
inc
fistl
jb
in
out
add
dec
stos
pop
or
xchg
sub
jne
mov
enter
sti
push
jne
insb
and
nop
push
cld
fs
mov
add
inc
adc
pop
clc
sarb
outsl
pop
inc
sbb
jg
mov
stos
or
fucomip
lock
jmp
sub
arpl
jecxz
cmp
stos
add
dec
push
int3
aaa
out
xchg
cs
jb
iret
and
cmp
int
adc
and
sti
mov
sub
insl
mov
inc
sbb
mov
push
adc
dec
push
movsb
std
gs
lret
or
cmp
scas
dec
push
fwait
mov
in
mov
xor
adc
fistpl
add
and
cld
mov
mov
inc
dec
pop
mov
jbe
jae
and
aad
or
mov
pop
jl
imul
cwtl
or
push
loope
loopne
or
cmpsb
dec
out
mov
es
mov
push
in
pop
bound
xchg
inc
xchg
scas
lock
cmp
lea
add
mov
int3
dec
pop
mov
in
dec
nop
repz
lods
cmpsb
sub
mov
lods
pop
jle
aam
adc
inc
repnz
loop
xor
insb
pop
jns
xchg
mov
ljmp
cltd
outsl
jns
fistpll
mov
sub
pop
in
cld
cld
movsb
bound
mov
lret
mull
or
int
test
cli
jno
xor
mov
sbb
mov
inc
jb
push
insb
xor
jmp
xchg
jno
mov
mov
idivb
popa
inc
testb
dec
js
cmp
mov
lret
dec
rolb
loope
jle
pushf
pop
frstor
mov
fs
adc
sbb
scas
fwait
push
push
ss
push
sub
adc
call
mov
push
in
cmp
add
mov
enter
into
mov
jo
cmpsl
inc
mov
sub
out
pusha
mov
pop
mov
mov
test
push
dec
stc
ja
dec
or
lods
outsl
pop
test
test
add
sub
lods
mov
cmp
mov
mov
cmp
cmp
sbb
adcl
cmp
cltd
push
mov
lahf
cmpsl
add
iret
ficompl
subb
mov
add
inc
push
dec
and
cmp
sub
mov
les
test
cmp
ds
lea
repnz
arpl
das
cmc
xlat
jb
rcl
les
and
hlt
push
dec
mov
inc
xorps
sbb
leave
jecxz
loopne
add
pop
push
sub
pop
xchg
push
dec
std
pop
or
add
cs
dec
mov
loopne
js
pop
add
imul
fs
pop
mov
call
xor
cld
movl
fnstenv
jl
mov
jecxz
dec
inc
sbb
stc
xor
call
sbb
fistpl
push
cmpl
jno
xor
arpl
mov
jmp
mov
mov
mov
dec
xor
and
sbb
mov
clc
je
mov
jae
js
fmulp
iret
pop
nop
and
bound
xor
push
inc
mov
neg
mov
push
cmpsl
mov
mov
call
ficomps
sub
jp
pop
mov
gs
arpl
js
into
icebp
jns
xor
push
es
nop
jns
xchg
or
xchg
mov
mov
decl
mov
and
hlt
ficompl
aam
cwtl
cmp
adc
jge
adc
lods
adc
cmpsl
repz
das
mov
pusha
adc
inc
cmp
mov
dec
insb
sbb
or
adc
lock
test
std
sbb
loop
add
jmp
ja
inc
sti
dec
xchg
jmp
enter
fs
mov
mov
dec
sub
jb
add
in
xchg
adc
insl
scas
push
repnz
and
pop
les
pop
dec
jge
rolb
dec
mov
xchg
aam
out
scas
aam
xchg
mov
sahf
std
test
xchg
push
je
sub
lods
nop
scas
fldl
loopne
repnz
xchg
lcall
icebp
mov
cmc
or
popf
mov
sub
daa
dec
or
inc
jb
jmp
cs
push
loope
repz
call
jnp
mov
mov
inc
pop
inc
loopne
addr16
shl
inc
cltd
mov
je
ret
ret
or
mov
call
in
sbb
xlat
pop
xchg
pop
movaps
dec
pop
mov
pop
cmpsl
xchg
and
rcrb
mov
cwtl
lods
pop
outsb
lcall
dec
cs
sbb
aaa
mov
fnstcw
testl
mov
int
in
daa
mov
inc
mov
shr
ret
inc
fmuls
and
inc
jne
data16
adc
push
jge
cmc
push
pop
ret
loop
out
dec
inc
cmc
mov
pop
xchg
cmp
stos
lahf
enter
adc
cmp
mov
mov
push
cmp
jne
ret
or
je
mov
mov
fdivrs
scas
pop
mov
ret
and
push
xor
sti
xorb
cs
repnz
mov
adc
push
repz
sub
ret
test
out
push
repz
push
and
ret
dec
lret
std
scas
sbb
add
pop
cmp
insb
pushf
sti
sub
int3
and
outsb
or
xchg
mov
xchg
mov
xor
xchg
jbe,pt
sbb
push
jnp
arpl
mov
in
sbbb
mov
mov
shr
adc
or
pop
les
js
mov
push
movsl
stc
cmpsl
mov
sbb
fistl
inc
ljmp
notl
bound
lahf
aam
xor
inc
test
jg
stos
subl
mov
bound
arpl
in
mov
dec
mov
or
les
lret
mov
add
clc
lahf
cmc
pop
inc
mov
ret
stos
push
ja
add
push
cli
dec
ffree
fwait
sub
rorb
push
mov
xchg
xor
inc
and
sbb
or
cmp
cmc
or
shl
sub
push
xlat
add
fbstp
push
pop
inc
shlb
fcoml
lret
ret
jp
push
es
pop
inc
insl
pop
jge
or
sbb
leave
in
fscale
test
lods
cltd
mov
dec
insl
pop
jge
or
sbb
leave
in
fscale
test
lods
cltd
mov
dec
insl
pop
jge
or
sbb
leave
in
fyl2xp1
test
test
jnp
dec
imul
mov
push
ja
in
jbe
retw
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
and
xor
in
ds
imul
shrb
icebp
or
in
add
adc
and
xor
popa
mov
subl
cmp
icebp
loop
repnz
and
xor
popa
pushf
jno
andl
adc
lea
bound
xchg
jb
push
mov
push
mov
addb
insl
xchg
cli
cmpsl
cli
dec
dec
xlat
movsb
adc
add
sti
add
fisttpl
mov
imul
sti
mov
xchg
outsb
movsb
pop
inc
movsb
xchg
jl
negl
mov
xchg
repz
cmc
or
lahf
mov
xchg
nop
or
outsb
in
mov
int3
cmp
cmp
addr16
inc
mov
xchg
dec
jge
outsb
pop
addr16
xor
sarl
pop
xchg
loop
sbb
adc
sbb
cmp
lret
mov
fwait
jno
jle
test
dec
mov
xchg
sub
xchg
mov
adc
pop
jmp
xchg
lahf
inc
cmp
push
and
jnp
mov
xchg
movsb
aam
dec
sti
sarb
cmp
add
adc
and
xor
popa
xchg
jno
xorl
and
xor
sbb
adc
mov
push
and
psllw
sub
and
xchg
jle
outsb
xchg
sti
insl
jmp
mov
add
adc
ss
pop
jns
imul
jecxz,pt
movsb
pop
inc
imul
mov
jae
push
fwait
popa
mov
subl
cmp
sub
sbb
or
sti
add
adc
and
xor
popa
mov
subl
cmp
sub
sbb
or
sti
add
cmp
mov
pop
pop
xchg
add
out
shr
dec
lcall
mov
std
mov
mov
int3
stos
add
rorl
push
sbb
mov
into
dec
mov
stos
xor
mov
adc
sub
aaa
comiss
loope
stos
mov
outsb
adc
inc
dec
sub
or
sub
push
ss
push
bnd
fbstp
xor
mov
shr
adc
movsb
gs
gs
enter
loope
test
gs
iret
scas
mov
ds
push
inc
mov
loopne
imul
sbb
jns
inc
loopne
mov
dec
repnz
pushf
arpl
flds
sub
sti
sub
mov
push
nop
pop
int
sub
or
rclb
xor
push
es
xchg
xor
push
call
in
lods
dec
jg
cwtl
std
cmp
xchg
loopne
movsl
lods
add
jb
and
dec
fsubrs
cltd
xlat
mull
shlb
in
lock
mov
dec
insl
cmp
aam
nop
sbb
out
mov
mov
add
add
pop
pop
and
aad
and
inc
pop
add
pop
mov
ljmp
ret
jecxz
paddd
xor
lcall
sbb
lea
mov
sub
or
mov
xchg
jb
icebp
jbe
inc
stc
cmc
nop
lods
fwait
call
lea
jo
scas
js
fwait
cld
dec
dec
jnp
pop
add
dec
push
in
dec
sub
jle
add
gs
xlat
inc
push
push
mov
mov
sti
and
test
int
mov
pop
and
shll
mov
jns
add
lret
cmc
push
lcall
jge
mov
orb
ss
mov
ret
inc
and
xchg
mov
xchg
pop
out
nop
add
dec
xor
jmp
cmc
fiadds
stos
pop
jmp
push
mov
pop
mov
xchg
addr16
mov
cmp
cmpl
test
xor
rorb
test
in
lahf
mov
inc
xchg
xchg
ss
mov
rcll
arpl
icebp
into
cld
cmp
cmp
mov
int3
scas
cmp
inc
mov
jnp
mov
sbb
dec
sbb
hlt
add
xchg
sub
mov
jns
icebp
daa
dec
push
cld
add
mov
jecxz
mov
mov
jb
sbb
cs
jns
and
adc
inc
daa
jae
inc
loopw
rcrl
add
adc
sbb
ds
orl
testb
arpl
mov
imul
inc
fistl
aas
into
adc
cltd
adc
or
mov
mov
push
sub
das
imull
idivl
lods
nop
stc
dec
mov
lods
gs
push
push
icebp
jne
popa
mov
or
push
inc
mov
outsl
dec
dec
jbe
add
inc
in
mov
repnz
xchg
loop
or
mov
cli
xchg
popf
orl
cmp
test
sbb
sahf
sbb
enter
out
mov
decl
jb
nop
repnz
movsb
xchg
or
mov
jbe
or
xchg
mov
leave
xor
or
xchg
divl
and
xchg
les
cltd
cmp
out
jge
add
mov
pop
stos
aam
dec
mov
jo
xchg
mov
lods
xchg
testl
cmp
and
sbb
xchg
xchg
dec
mov
int3
ljmp
pop
es
pop
ds
pop
mov
inc
ret
or
dec
push
inc
mov
out
fisubrs
jl
lcall
jb
cmc
mov
adc
imul
fwait
js
pop
loope
mov
add
inc
cmp
scas
ret
xor
fwait
xor
icebp
cs
sbb
cmp
jge
mov
pop
int
shlb
pusha
call
and
push
push
inc
and
aad
lcall
je
aas
pushf
aam
bound
ret
test
and
add
aaa
sti
push
inc
adc
pop
mov
fidivl
push
roll
or
stos
popa
mov
outsl
stos
pop
jbe
jns
outsb
sbb
or
insb
add
inc
xchg
lret
sbb
mov
add
fimull
cmp
xchg
xchg
imul
fdivrp
popf
inc
testb
mov
dec
inc
movsb
out
lea
lods
clc
sahf
jbe
and
jle
test
sub
imul
or
pop
arpl
dec
jne
aaa
sbb
scas
mov
or
sub
pop
clc
pop
popf
aaa
mov
arpl
adc
lock
lock
push
mov
aam
in
cmp
dec
pop
mov
out
repz
jmp
mov
xchg
cli
pusha
ss
xchg
insl
rcll
enter
stos
ds
inc
inc
mov
sti
dec
lea
addr16
jbe
xor
push
fnstsw
jns
cmpsb
rcrl
cmp
or
dec
repnz
roll
sahf
mov
jle
inc
lret
repnz
iret
dec
xchg
iret
cmp
xor
notb
pop
ds
push
out
dec
lds
movb
lods
mov
cmp
pop
xchg
inc
movsl
xchg
sub
pop
cltd
and
cmp
stos
jo
mov
movb
mov
lods
xor
insb
sbb
xor
ds
in
leave
enter
xor
pop
xchg
dec
sbb
call
and
jo
add
pop
and
mov
sarl
outsb
add
jb
xchg
xchg
or
loope
xchg
xor
adc
enter
lea
add
aad
sub
xchg
lock
pop
sbb
mov
mov
rol
mov
lcall
xorl
fmul
les
add
sub
roll
les
in
lret
test
push
pop
adc
nop
aad
jmp
repz
xchg
jl
adc
es
cwtl
and
push
popa
lds
mov
aad
mov
xchg
mov
mov
pop
push
scas
mull
mov
out
ja
push
cmp
cmp
or
adc
nop
outsb
imull
or
pusha
mov
daa
iret
mov
push
add
mov
xor
divb
int
lret
cs
jg
jge
lret
adc
add
insl
in
pop
mov
or
sub
and
or
sbb
push
scas
cmp
xlat
adc
add
in
and
insb
pop
aad
leave
add
cltd
ss
inc
shlb
imul
jmp
das
subl
in
ror
adc
fldcw
sti
mov
cmp
xchg
stos
add
fdivrs
daa
cmc
mov
inc
hlt
cmp
cs
pop
arpl
insb
stc
jae
cmp
std
rcll
movsb
jbe
lret
test
lret
or
ljmp
aas
leave
repnz
jns
xchg
in
into
xchg
enter
cmp
insb
jge
push
jnp
bound
jecxz
add
les
aas
imul
jg
xchg
cmp
pusha
loopne
test
repz
lret
gs
hlt
fcompl
xchg
mov
addr16
repz
nop
pop
sub
lret
aad
ja
in
pop
sarl
add
mov
aad
call
sti
pop
dec
pop
pop
mov
sub
push
cmp
pop
xor
movsl
lahf
daa
dec
mov
sub
dec
push
sub
xchg
cld
xlat
bswap
xlat
jle
xchg
leave
scas
add
fdivrl
dec
dec
iret
and
jo
pop
adc
pusha
and
scas
fcomps
sub
push
inc
cmp
jge
mov
mov
xlat
xchg
je
sub
jno
dec
rep
fs
cmp
aas
das
mov
test
cmpsl
adc
sbb
jnp
sbb
stos
mov
inc
xor
outsb
xchg
setns
cmp
jmp
out
movsb
add
out
jl
inc
out
or
sbb
mov
fsubr
cmpsl
scas
jnp
sti
pop
fldt
or
sbb
push
mov
rorl
jp
pop
push
pop
sahf
pop
loop
aam
stos
movsl
sbb
mov
cltd
out
inc
jnp
mov
into
fsubs
pop
mov
xchg
mov
pop
mov
or
xchg
cli
arpl
aas
adc
adc
jmp
jno
loope
mov
dec
shlb
sarb
out
insl
aam
in
dec
xlat
inc
out
fisttpll
es
or
iret
adc
lds
xchg
test
ljmp
adc
sub
push
test
and
popa
sbb
adc
sbb
xor
sbb
ds
and
cmpl
lea
dec
dec
insl
mull
jo
repz
jnp
pop
mov
mov
xchg
pop
movzwl
push
sub
sbb
push
push
lods
xor
adcb
mov
std
cmp
mov
pop
stos
pop
dec
mov
pop
int3
sbb
fsubrp
test
hlt
fadds
sarb
jp
outsl
ret
popa
call
xor
xor
push
jb
arpl
repz
loopne
inc
movsl
push
dec
daa
sub
push
in
loopne
nop
dec
inc
sahf
mov
inc
das
mov
iret
dec
ss
or
add
pop
loopne
aad
shll
mov
adc
cwtl
stos
pop
fcomi
nop
mov
lret
repnz
add
fcompl
xchg
mov
mov
sub
inc
inc
mov
pop
stos
andl
out
lahf
imul
xor
xlat
imul
popf
pop
stos
and
jmp
inc
push
sub
imul
in
lods
scas
dec
loopne
test
aam
dec
lret
xchg
push
cmpsl
pop
in
and
mull
inc
stos
xor
jns
pop
mov
scas
cmp
cld
iret
sub
icebp
ficoms
inc
cmp
dec
movsb
jbe
lods
fadd
jbe
add
dec
dec
push
aam
mov
shrl
xor
lods
daa
gs
mov
sub
and
jo
enter
adc
cwtl
inc
aas
jbe
mov
lock
out
push
push
out
cli
fidivrs
mov
mov
nop
jns
mov
mov
fs
pop
std
rorb
loop
into
test
xor
mov
mov
jl
cmp
cmp
jne
push
insl
push
fstl
sbb
out
leave
adc
xor
mov
test
jge
lock
test
repz
fwait
sub
les
xchg
ffree
int3
daa
mov
enter
aaa
sbb
movsl
out
es
or
and
loop
repnz
xor
faddp
cmp
jecxz
popf
mov
add
and
xchg
jmp
mov
cmpxchg
movsb
push
add
xor
cmpsl
pop
jle
push
cmpsb
imul
mov
imul
adc
push
xchg
aas
xchg
ds
jle
push
lods
cmp
mov
cmp
add
and
pop
sbb
push
and
cltd
xchg
dec
or
push
push
repnz
ja
pop
iret
mov
in
push
jmp
push
inc
jo
sbb
bnd
add
mov
std
push
call
call
sbb
lock
pop
loop
test
mov
je
add
gs
pop
jo
xchg
stos
mov
cmpsl
fwait
cmc
inc
mov
pop
stos
inc
enter
add
pop
or
xor
repz
ljmp
aas
iret
mov
inc
pop
xor
inc
scas
test
push
xchg
lret
or
sub
mov
je
sahf
scas
mov
pop
mov
adc
movsb
mov
fcoml
aam
push
push
jb
ss
test
jmp
dec
mov
fidivl
inc
adc
in
push
sub
mov
rolb
shll
jnp
lods
sbb
sbb
pop
dec
stos
jnp
and
and
push
ss
pushf
add
dec
jg
sub
pop
in
and
mov
xchg
inc
mov
push
cld
xor
leave
add
cmp
roll
xor
aas
call
in
push
xlat
fisttpll
and
shlb
inc
imul
test
pop
cli
inc
jmp
stos
push
aaa
fs
jne
mov
sbb
shl
lret
andl
fistpll
cmc
mov
push
fdivrl
push
sub
push
in
scas
into
scas
insb
lods
adc
movsl
jmp
jbe
pop
hlt
xchg
adc
in
in
fisubrs
push
sbb
and
out
sbb
cld
movsl
inc
sub
jp
mov
cmpsl
pop
leave
xlat
push
rcr
inc
push
mov
xor
xorb
push
add
lahf
outsb
jae
shl
cli
es
in
lds
scas
fnsave
fstpt
out
sub
divb
jbe
sub
test
incb
mov
mov
pop
or
xchg
mov
inc
in
pop
stos
mov
cmp
aaa
sub
push
mov
inc
mov
jecxz
ret
push
sbb
gs
inc
adc
push
mov
mov
push
xor
clc
push
dec
dec
inc
or
sub
sub
in
bndstx
mov
cmpsl
mov
rorl
mov
xchg
xor
lea
xor
or
adc
sub
ljmp
nop
dec
outsl
mov
nop
pushf
jle
push
fbld
call
adc
sub
popf
cmp
inc
dec
adc
dec
mov
xor
mov
scas
lods
jmp
adc
xchg
mov
out
imul
sbb
jle
test
jg
imul
dec
sub
insl
jg
test
mov
sub
outsb
sbb
dec
jne
gs
add
and
dec
or
xlat
cli
ret
jne
jl
sbb
sbb
imul
andb
sbb
jbe
adc
fistps
idivb
fs
push
bnd
adc
loopne
outsb
cmc
inc
cmp
enter
mov
jb
or
dec
jo
add
jg
push
pop
clc
add
inc
sub
or
xor
mov
mov
bound
mov
mov
iret
fs
mov
xchg
aas
nop
dec
enter
call
xor
sub
xor
jae
bound
mov
jns
xchg
les
les
int
fstpl
push
aad
mov
bound
xor
adc
lret
lds
aaa
lock
xchg
push
mov
mov
push
dec
lahf
roll
sub
testl
dec
outsb
mov
jp
sub
das
jbe
and
jae
push
push
rcrl
fstp
out
inc
adc
pop
and
out
pop
enter
repz
hlt
push
or
cmp
sarb
inc
mov
mov
mov
push
mov
sbb
jnp
aad
cmp
xor
push
or
dec
fxtract
sbb
mov
pop
pop
shr
stos
aas
inc
and
aaa
sub
mov
push
xchg
jb
out
fisubs
dec
cmpsl
xchg
inc
mov
jbe
pop
mov
ljmp
jmp
cmpsb
inc
ljmp
xchg
or
or
decb
xchg
adc
pusha
fidivs
mov
push
scas
adc
mov
testl
out
js
adc
mov
hlt
imul
cld
push
bound
sbb
rol
inc
xor
mov
mov
xor
sub
cmp
sbb
jae
incl
or
test
dec
mov
sub
sub
je
mov
pop
call
mov
mov
jno,pn
mov
movsb
mov
std
imul
push
push
fldenv
lods
addr16
mov
negl
int
push
jmp
sarb
ret
mov
loop
push
sub
push
stc
xlat
test
xchg
aad
sbb
sbb
lea
add
adc
fnstenv
xchg
mov
mov
ss
push
and
out
cmp
mov
and
push
cmpsb
mov
adc
and
pop
inc
jle
insb
xchg
xchg
jg
je
mov
pop
scas
das
mov
xchg
mov
push
loop
das
jp
add
mov
insl
or
incb
mov
cmp
movsb
je
les
js
test
bound
jnp
sbb
and
push
loope
fucomi
stc
dec
les
cmp
enter
or
in
pop
add
mov
out
dec
cmp
mov
add
in
enter
inc
xchg
jnp
cmc
pushf
inc
mov
out
call
outsl
jnp
movsb
cwtl
fiadds
shr
xchg
dec
out
pop
jbe
add
test
das
pop
daa
mov
ljmp
aas
cmpsb
cmpsb
mov
xorl
mov
loope
jge
mov
mov
mov
iret
sbb
frstor
adc
decl
inc
xor
imul
les
test
mulb
fsubrs
jmp
and
outsl
adc
fisubrl
insb
ret
adcb
imul
andl
int3
stos
scas
mov
cmp
xor
jne
and
push
mov
inc
cwtl
pop
mov
jae
mov
out
cmp
push
xchg
in
ss
addr16
loope
sbb
xchg
dec
repnz
jbe
test
adcb
popf
xor
ljmp
lds
arpl
aaa
push
stos
push
stc
dec
and
std
insl
sub
push
push
cmp
cltd
sub
or
push
mov
call
fisttps
int
pop
jmp
and
int3
ja
mov
lcall
xchg
mov
cwtl
and
loop
mov
ficompl
out
lods
lea
lcall
mov
int3
push
dec
ds
fwait
data16
xchg
in
and
ljmp
mov
scas
pop
pop
mov
jns
mov
mov
add
or
or
insl
test
out
jnp
pop
fcoms
rorl
push
pop
stc
sbb
repnz
or
jp
das
shld
cld
ds
jecxz
push
sbb
xor
hlt
outsb
fs
dec
popl
mov
in
and
jl
imul
repz
add
leave
dec
jecxz
sahf
cmp
sub
lret
lods
sti
xchg
mov
push
les
push
negl
pop
rcll
movsb
and
call
push
mulb
lcall
lret
inc
bound
inc
std
and
fcompl
leave
rorl
xchg
xor
adc
cmp
xchg
int
adc
cmp
and
gs
popf
cmp
and
or
arpl
ss
sub
add
inc
mov
jne
shlb
mov
cwtl
clc
or
xor
lret
adc
mov
les
lret
enter
jns
mov
xor
cmp
add
xor
xchg
sahf
jbe
lcall
loopne
push
pop
mov
or
testl
sub
push
pop
gs
frstor
js
add
sub
ljmp
add
lock
pop
mov
pop
xor
je
mul
loop
sub
mov
lods
lahf
out
cltd
cmp
push
xchg
ss
rolb
cmp
xchg
inc
mov
icebp
mov
rorb
xchg
jmp
or
imulb
pop
cmp
sub
ret
test
bound
dec
ja
nop
repz
cmp
iret
rolb
and
mov
mov
push
ljmp
xchg
enter
sub
jecxz
push
movsl
jo
mov
lcall
lds
imul
xlat
adc
xchg
mull
and
adc
mov
jg
jl
ljmp
dec
mov
into
nop
adcl
out
cmp
add
int3
sbb
test
adc
xchg
xchg
mov
push
inc
cwtl
mov
lret
cmpsb
scas
aaa
xor
ficoml
adc
cmp
cwtl
mov
jb
xor
popf
movsl
in
inc
mov
push
xor
pop
lret
mov
push
fsin
das
and
dec
inc
jo
ja
jbe
test
test
sbb
jo
inc
inc
js
fs
and
rorl
test
and
mov
call
pop
movsb
popa
loopne
fldcw
jnp
shll
mov
inc
or
lock
jns
icebp
nop
cmp
push
jecxz
je
sub
push
adc
and
xor
popa
mov
subl
cmp
sub
sbb
or
sti
add
adc
and
xor
popa
mov
subl
cmp
sub
sbb
or
sti
add
adc
and
xor
popa
mov
subl
cmp
das
rcrl
loope
icebp
iret
add
adc
and
xor
popa
or
icebp
mov
mov
push
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
