js
cmp
stc
add
add
sbb
test
imull
push
jmp
pop
pop
jns
adc
fsubrl
das
mov
test
add
mov
adc
mov
jns
xchg
or
in
int
aad
addr16
outsb
jp
scas
out
mov
lret
mov
jne
sahf
out
gs
mov
lcall
xlat
ds
icebp
call
push
mov
data16
bound
in
fbstp
das
jge
gs
dec
pop
adc
arpl
xchg
aaa
ds
ret
stos
repnz
sub
mov
mov
cmp
insl
xchg
inc
icebp
sets
sbb
idivl
mov
cmp
mov
inc
dec
pop
lret
or
adc
adc
pop
and
mov
cli
and
aaa
or
push
fptan
add
cmp
inc
gs
dec
push
and
mov
and
mov
cli
and
inc
insl
sti
ret
xchg
jmp
repz
jmp
ds
sbb
sbb
aaa
adc
aas
xchg
test
das
aas
fs
pop
sub
mov
pop
mov
clc
push
enter
push
pop
psllq
subl
nop
aam
jnp
int
andl
aas
cs
mov
mov
mov
sub
mov
mov
sbb
pushf
gs
and
jp
ss
mov
imul
jbe
bound
and
loope
inc
cs
movsb
mov
inc
cld
xchg
pop
and
fistpl
repz
mov
call
rclb
andl
jecxz
test
mov
lods
inc
cmp
or
or
fs
iret
lcall
pusha
push
sub
xlat
or
jae
cmp
push
test
das
jmp
dec
flds
and
jb
lret
fs
fcmovbe
adc
repnz
call
or
insl
cltd
cmp
fisubrs
adc
sbb
stos
xchg
hlt
inc
data16
jbe
jp
not
test
lret
adc
cmpsb
push
inc
mov
lcall
fcompl
mov
aaa
cmp
mov
aaa
mov
mov
popf
sub
cmp
push
adc
xchg
push
pop
add
cmp
adc
scas
pop
int
mov
cs
pop
adc
jecxz
shll
out
daa
adc
adc
adc
dec
test
bound
sub
jg
pop
out
add
in
mov
test
cmp
out
mov
ja
loop
and
add
sbb
or
lods
dec
adc
je
cmp
push
push
jg
insb
imul
sub
adc
jo
push
xchg
or
sarl
fcoml
rcl
mov
mov
mov
pop
and
test
adc
mov
sub
and
cmp
filds
adc
ljmp
negl
ds
outsl
ds
jg
test
xchg
es
add
ret
pop
pusha
repnz
jns
adc
fs
imul
mov
lods
push
dec
ret
dec
push
loop
int
out
sub
testl
inc
hlt
sti
pop
call
das
int3
mov
jb
adc
or
xchg
clc
xchg
ss
dec
xlat
lods
cmp
sahf
cltd
adc
pop
les
rol
xor
inc
mov
or
call
mov
push
jns
xchg
pmaxsw
xchg
into
mov
mov
mov
dec
addr16
pop
out
or
push
bound
push
jae
xor
imul
loope
nop
dec
or
mov
sub
lret
insl
or
adc
mov
inc
cld
xlat
int
mov
dec
xor
or
pop
cs
mov
mov
out
loop
enter
repnz
es
xchg
rcr
mov
das
and
aaa
dec
jp
icebp
popa
push
pop
xchg
inc
or
mov
rclb
push
lret
cmp
fisubl
data16
fsts
add
ss
jecxz
or
gs
insb
lret
inc
imul
es
xchg
sub
xor
and
int
push
push
add
xchg
in
and
mov
and
mov
pop
push
mov
dec
sbb
inc
fwait
cmpsb
jae
mov
cmp
aad
xor
lcall
xlat
lret
sub
xchg
mov
push
mov
sub
dec
pop
lods
jnp
lock
stos
or
dec
outsl
dec
jo
mov
add
inc
sbb
in
loopne
ja
lds
or
mov
test
aaa
ficomps
sub
shlb
sarb
push
sbb
adc
sbb
dec
inc
add
mov
mov
fstl
fsubp
xor
mov
sarb
clc
out
sbb
sbb
std
nop
add
ss
dec
mov
mov
mov
call
arpl
icebp
add
lret
jb
mov
add
mov
add
adc
push
xor
sub
clc
fldt
lds
dec
dec
add
cmp
add
sahf
sbb
test
mov
clc
jne
jmp
or
aam
sbb
ljmp
add
sahf
test
cli
ret
jge
add
or
push
dec
inc
cmp
arpl
std
xor
popa
jnp
sti
jle
pop
fisttpl
gs
mov
cli
stos
rorb
leave
scas
mov
test
cmpsb
outsb
out
xor
rcl
mov
data16
pop
push
repnz
lods
daa
addl
cmpsl
inc
or
lea
into
aad
sbb
rorb
or
out
mov
push
fwait
cltd
push
popf
dec
mov
cmc
lea
mov
lcall
imul
mov
addl
jno
xor
cmpsb
and
add
cli
out
aam
jmp
icebp
xchg
sbb
mov
loope
imulb
and
inc
loopne
dec
add
cmpsb
cli
inc
aad
jne
push
adc
pop
xchg
or
incl
sbb
bound
mov
xor
mov
shlb
or
ljmp
scas
in
xor
jp
ret
ja
js
mov
je
clc
icebp
and
mov
sub
xlat
mov
lsl
and
mov
dec
sub
xchg
mov
inc
iret
pop
iret
jecxz
mov
aaa
push
out
or
push
jl
aam
lea
push
int3
cmpsl
inc
xor
std
xor
jecxz
jnp
sbb
popa
in
pop
add
pop
outsl
in
repz
addr16
lods
mov
xchg
sahf
fisubrl
xlat
or
xor
je
mov
ret
push
cmp
sub
push
ds
mov
popf
mov
pop
pop
sbb
loope,pn
pop
cs
sub
dec
xchg
out
mov
js
and
mov
in
push
inc
jmp
cmp
out
insb
sub
and
cwtl
repz
ljmp
lea
sbb
imul
cmc
stc
cmpsl
xchg
jno
cmp
or
test
xchg
lds
insl
fiaddl
sarb
add
hlt
mov
popa
repz
mov
fmuls
outsl
or
mov
test
setns
gs
jmp
mov
xor
fs
jnp
mov
xor
xchg
sbb
nop
and
stos
dec
icebp
call
xor
hlt
mov
loop
stc
mov
dec
dec
push
loope
add
bound
int
sbbb
stos
rorb
shrl
adc
test
sarb
mov
or
push
jl
sbb
insl
shl
mov
mov
add
icebp
into
roll
rorb
mov
ja
adc
dec
fwait
sbb
jno
and
cmc
stos
je
inc
stc
xor
add
sub
arpl
cmp
jns
adcb
jbe
jmp
push
mov
xor
test
cltd
mov
dec
dec
add
xor
sbb
or
outsb
sti
adc
out
js
sbb
das
in
movsl
dec
xchg
mov
aad
repz
mov
in
jmp
popa
pop
inc
rcll
mov
push
cmp
dec
andb
mov
cmp
leave
jae
aam
cmp
sub
inc
es
sub
jp
frstor
push
xlat
dec
and
cmp
mov
jb
adc
mov
test
push
shl
mov
ljmp
push
loope
daa
into
mov
in
fsubrl
cmovg
mov
clc
repz
insl
xchg
mov
dec
mov
add
cmc
lods
adc
xor
push
stos
ret
std
cld
or
in
lret
lcall
jecxz
pushf
data16
pcmpgtd
dec
sub
lahf
movsb
les
mov
dec
data16
popa
push
jg
lds
cmp
lcall
push
lret
pusha
cmpsl
dec
adc
sub
dec
aam
push
repz
daa
movsl
push
out
cmc
mov
cmpsb
pusha
les
sbb
daa
dec
fldt
mov
arpl
cmpsl
je
xor
push
add
mov
mov
test
cmp
mov
add
add
aam
mov
jo
iret
add
push
push
mov
test
push
imul
stos
pop
adc
paddusw
mov
in
mov
sahf
stos
data16
std
std
leave
xchg
jp
enter
rclb
push
mov
bound
and
std
add
push
mov
aad
xor
ljmp
popf
insb
push
mov
xchg
ret
xchg
adc
lock
xor
push
pushf
xchg
or
or
mov
fcomi
fnsave
in
mov
mov
pop
push
jl
adc
jle
mov
xchg
inc
xlat
iret
pop
iret
pushf
inc
adc
inc
add
push
mov
fildl
mov
mov
popl
push
cs
dec
lahf
loopne
divl
mov
rcll
test
and
jge
insl
insl
nop
in
or
push
lods
sti
lret
in
repz
jmp
mov
xor
jmp
lcall
xor
mov
or
in
lahf
pop
mov
cld
stos
fldcw
jg
iret
jmp
pop
sbb
jle
cli
jmp
or
cwtl
dec
outsb
push
jmp
mov
add
add
rorl
sub
sbbl
leave
fdiv
push
shlb
negl
inc
aas
hlt
pop
test
sahf
test
scas
mov
fwait
mov
outsl
ljmp
push
in
loop
daa
add
xor
dec
test
stc
cld
xchg
xchg
mov
call
mov
and
xchg
sbbb
push
jbe
lret
cmp
cs
sti
inc
cmpl
popf
out
cmp
cmp
js
cli
mov
xor
jno
mov
and
sbb
mov
xchg
sub
popf
mov
cmp
in
imul
cmp
lret
ljmp
inc
loop
fsts
inc
mov
in
bnd
fwait
jp
jl
sbb
or
test
lods
cli
push
ret
pop
sbb
inc
xor
pop
out
lods
jl
mov
aad
test
push
add
pop
mov
lods
insl
movsb
dec
inc
push
xor
imul
xlat
mov
xchg
cwtl
inc
pop
dec
mov
int
ljmp
roll
dec
jb
test
push
outsl
sbb
inc
and
push
push
adc
dec
iret
arpl
push
sbb
mov
xchg
pop
outsl
enter
cwtl
push
fldpi
mov
fstps
imul
cmp
mov
adc
lods
mov
or
add
outsl
fs
sub
add
call
test
fs
shll
sbb
or
call
jns
push
xor
sarl
das
push
jb
push
xor
jns
inc
mov
pop
dec
push
pushf
xchg
scas
movsl
adc
mov
adc
cmp
add
fidivrs
cmp
mov
aad
rorb
lret
and
in
xor
in
jno
and
mov
mov
gs
lock
out
pop
jnp
ljmp
mov
cs
pop
cmc
negb
ficoml
mov
jae
and
jo
out
jg
in
cmp
dec
dec
jo
pop
test
inc
push
inc
inc
rolb
repnz
push
fs
mov
repz
pop
push
add
fsts
push
out
or
in
lret
out
sbb
ds
mov
lds
mov
xchg
add
jns
mov
mov
pop
and
xor
lret
daa
mov
int3
add
lock
lea
daa
and
mov
lds
and
lea
les
push
xchg
popf
fadds
lock
mov
sub
je
jno
add
mov
and
pop
ret
mov
cmp
fstpt
jmp
dec
lcall
out
or
scas
xchg
mov
mov
push
add
dec
aam
push
dec
movsb
cmp
mov
push
sbb
es
xchg
jmp
es
pop
data16
jno
test
cmp
int
rcll
mov
xor
ja
loopne
mov
cmp
push
pop
cs
sub
and
stos
lcall
inc
in
pushf
data16
mov
aaa
jecxz
js
aam
scas
inc
jecxz
and
icebp
pushf
dec
mov
cltd
dec
or
or
shll
dec
pop
outsl
fists
mov
push
pop
mov
ficomps
pop
jae
mov
add
or
xor
sub
or
mov
cmp
mov
ljmp
in
dec
adc
adc
ljmp
sub
int3
gs
push
ljmp
out
pushf
dec
xor
cld
push
mov
mov
add
pop
cmpsb
jl
icebp
mov
jne
movsb
movsl
jle
and
push
adc
iret
jge
mov
ret
sub
pop
pusha
cld
jno
mov
cmp
jle
xchg
mov
imulb
testl
or
loopne
imul
lahf
jp
inc
jmp
repnz
packsswb
adc
popa
mov
mov
subb
lret
xlat
jle
sbb
mov
sub
mov
jno
pop
int
inc
jns
loop
jae
shll
sbb
lcall
insb
rorl
mov
fwait
scas
ret
ds
call
add
jne
and
jge
arpl
pop
sub
jbe
cld
lds
loop
dec
imul
daa
ja
das
sbb
and
and
xor
fwait
add
rcrl
sub
fimull
js
mov
mov
bswap
push
push
out
push
aad
ret
das
mov
sbb
sub
int
lods
test
int3
sti
xor
ss
mov
pop
cmpsb
xor
dec
mov
outsl
in
mov
add
or
lret
inc
cmpsl
shlb
sbb
sbb
adc
sub
dec
cwtl
add
sbb
cmp
cmp
mov
sbb
jge
stos
jecxz
xlat
addr16
cmp
adc
pop
inc
and
push
pusha
or
lahf
sbb
aam
pop
cmpsl
ja
and
xchg
push
ss
out
clc
xchg
movsb
pushf
jge
mov
inc
and
add
call
ret
sub
fisubrs
sbb
push
inc
xor
loopne
push
arpl
and
out
lret
jb
inc
sub
movsb
sub
dec
dec
sbb
lahf
movsl
push
je
aas
push
or
fwait
xor
sbb
dec
push
ja
dec
pop
fidivl
rcll
les
inc
subl
push
hlt
lahf
xor
cmpsl
movsb
loop
xchg
jecxz
cld
fmuls
repnz
inc
xchg
lods
pop
out
pop
clc
hlt
ljmp
std
push
stc
mov
fs
mov
push
inc
mov
call
cmp
imul
xor
adc
lock
shll
outsb
mov
adc
pop
mov
or
xor
imul
les
insb
push
push
cltd
and
dec
mov
dec
pop
sub
insb
scas
mov
sbb
xchg
notl
inc
stos
orl
das
pop
cmc
aam
fldt
les
adc
in
loopne
mov
xor
cli
xchg
sbb
dec
jecxz
aad
movsl
je
outsb
hlt
pushf
cltd
test
adc
jle
scas
or
fdivrl
les
sub
not
mov
cmp
pop
jge
test
xchg
push
and
mov
jecxz
dec
push
std
and
pop
and
push
xor
mov
xchg
jg
pop
or
mov
add
xor
aaa
xchg
sahf
and
enter
xchg
pop
push
fstpl
lods
sub
outsb
sbb
sbb
jg
sahf
stc
dec
add
mov
adc
jl
idivl
mov
adc
ja
push
and
dec
mov
sub
mov
js
xchg
pop
xor
or
mov
xchg
pop
adc
int
daa
cltd
xor
pusha
sbb
mov
shll
lock
add
xor
xor
jg
xchg
js
data16
sbb
iret
loop
jns
daa
mov
dec
pop
and
in
roll
xchg
repnz
pusha
xor
and
test
pushf
out
sets
outsb
adc
sub
push
cwtl
dec
rolb
xor
adc
jl
cli
js
jp
cmpl
pop
fdivl
xchg
or
or
andb
lret
outsb
into
js
xor
repnz
xchg
cmpb
and
adc
jne
xchg
test
push
ret
inc
iret
mov
dec
scas
inc
icebp
cmp
jg
cmp
jmp
dec
notb
mov
jg
push
xchg
inc
outsb
addr16
adc
js
ret
popf
jle
stc
add
add
mov
push
xchg
out
inc
cmpsl
sbb
aad
adc
ja
ficoml
or
lods
out
rclb
ljmp
push
pop
je
mov
sub
imull
jne
add
adc
bound
jecxz
insl
stc
aam
pop
iret
rorb
dec
inc
pop
pop
pushf
outsb
mov
int3
or
and
pop
shlb
add
xchg
mov
push
loope
xor
add
and
dec
mov
or
sbbl
pop
repnz
ficoml
or
shrb
sahf
dec
push
das
mov
push
test
adc
lret
mov
inc
mov
out
lods
movl
pop
add
loopne
mov
outsb
loopne
in
lods
stos
mov
es
xorps
mov
jle
xchg
mov
jp
in
nop
insb
mov
add
mov
scas
push
ljmp
or
push
repz
jp
fisttpl
test
xor
sbb
mov
rclb
outsb
scas
mov
rcrl
paddsb
push
adc
aam
pop
dec
ja
daa
sbb
xor
inc
pusha
cmp
cmp
out
mov
cmp
xchg
mov
mov
sbb
scas
cmpsb
pop
jp
pop
fnstenv
jmp
jle
ja
sbb
faddp
stc
shll
xchg
add
daa
ss
dec
sub
and
popa
leave
inc
mov
xor
add
dec
sahf
bound
js
cmp
popf
int3
aad
cmpsb
jae
push
adc
lock
push
jb
or
fists
in
cmpsb
xor
jge
push
pop
mov
fistl
jg
dec
mov
mov
add
cmp
lock
lds
mov
out
pop
sbb
add
cwtl
leave
test
jb
mov
xchg
bound
enter
das
fidivl
mov
push
push
fadd
in
xorb
inc
add
dec
inc
daa
sbb
sub
fs
sub
or
fcompl
xchg
push
outsb
inc
xchg
add
dec
xor
loop
roll
cmp
mov
jge
in
mov
mov
jae
imul
xchg
push
pop
jmp
cli
pop
rcrl
gs
adc
in
or
add
pop
lods
inc
lods
xchg
imul
push
cmp
popf
jecxz
xor
cmp
jg
push
cmc
cld
ja
jge
xchg
xchg
fisubl
cwtl
jnp
or
xchg
xchg
mov
arpl
jns
mov
ljmp
jne
repz
xchg
push
dec
jg
jno
jne
jno
xchg
jo
mov
iret
jge
jge
mov
nop
mov
ret
push
movsl
lcall
repz
pop
mov
pop
setl
dec
out
cltd
mov
repnz
xor
push
push
je
pop
pop
push
push
xchg
insl
xchg
adc
stos
fwait
xor
inc
mov
or
pop
mov
mov
aad
xchg
or
xor
dec
cltd
mov
decl
insb
push
xorl
cmpl
pop
jp
adc
push
fiadds
jle
mov
adc
jbe
mov
into
les
sub
in
mov
xchg
mov
jp
dec
lahf
arpl
mov
mov
mov
adc
sbb
mov
out
adc
aad
inc
gs
pop
imul
cwtl
fsubrl
push
sub
push
cld
mov
push
jl
fucomi
xchg
add
sbb
cmp
repnz
fwait
adc
aad
jo
lds
les
cmp
mov
cmp
mov
and
mov
cmp
rcrb
add
cli
out
and
adc
das
in
dec
jbe
push
shll
cli
leave
adc
sbb
fcmovnb
jl
pop
or
iret
call
icebp
adc
and
fwait
adc
sub
faddl
cs
aas
inc
iret
mov
jnp
sub
or
add
cmpsb
aas
dec
cli
enter
aam
push
or
and
cld
lds
fldcw
andl
push
sbb
pop
mov
arpl
mov
cmp
loope
mov
idiv
or
notb
jmp
test
mov
push
mov
pushf
pop
pop
mov
clc
xchg
push
mov
stos
cwtl
fcoms
aas
mulb
or
outsb
lea
xlat
pop
cs
sub
fidivrl
adc
cmp
mov
dec
jnp
out
outsl
jle
pusha
inc
loope
outsl
xchg
imul
sbb
mov
pop
inc
sub
add
mov
mov
in
mov
push
pop
dec
mov
add
popa
pop
xchg
insb
stos
dec
les
pop
and
ret
lods
jnp
push
dec
fs
loope
jns
push
dec
enter
xchg
push
lcall
mov
enter
cmpsl
in
es
inc
adc
sbb
add
push
stc
push
lret
xor
cld
xor
jp
xor
movb
das
and
mov
pop
mov
fldt
pop
iret
out
ret
xor
xlat
dec
lcall
add
mov
enter
daa
cmp
cmc
rcl
fwait
or
dec
inc
jmp
sub
sub
push
ret
xchg
add
mov
inc
in
imul
clc
xorb
cld
jns
out
mov
rcll
sbb
push
mov
imul
sub
mov
jle
fsubrl
pop
int3
mov
inc
jae
mov
in
jecxz
adc
imul
push
fmul
mov
fwait
inc
je
pop
repz
and
jl
lcall
push
adc
lcall
ret
jns
adc
imul
mov
or
xor
add
aaa
addr16
rcr
fcomps
push
or
in
push
or
clc
cld
xchg
mov
aas
fldl
inc
adc
pop
sub
dec
filds
movsb
mov
mov
xchg
inc
insb
mov
rcrl
scas
or
imul
dec
add
mov
outsl
adc
stc
movsl
or
sti
int3
pushf
push
and
test
push
in
lods
jno
push
aam
sbb
js
push
xorb
dec
mov
sbb
xor
and
jl
pop
pop
inc
add
cltd
mov
aad
lcall
push
shlb
inc
xor
add
fwait
je
cmp
cmp
and
popf
pop
ret
daa
lods
xor
jle
rorl
pop
inc
mov
popa
inc
or
or
cli
xor
fdivp
adc
ficompl
add
outsl
inc
pop
rcrb
and
dec
test
lods
fsub
cld
int
es
cltd
push
mov
int
mov
lea
idivl
jge
cmp
fimull
and
mov
divb
aas
movsb
cmpsb
and
insl
or
cmpsb
add
cmp
sbb
out
pop
ja
xor
jp
jge
rorl
sbbl
sti
lcall
or
fadd
shrl
sbb
inc
jmp
leave
cwtl
stc
iret
mov
ret
cmpsb
sbb
mov
out
mov
sarb
mov
xor
psubusw
sub
mov
out
fists
aas
mov
pop
jno
and
and
cmpsl
insl
clc
xchg
ja
lods
jno
outsb
dec
fndisi(8087
pop
xchg
data16
dec
sbb
add
push
leave
sbb
xor
test
or
iret
dec
shrl
test
xor
divl
bound
ja
loop
sbb
mov
cmp
dec
das
sbb
bound
sahf
xchg
cltd
sbb
cmc
test
mov
xchg
xchg
or
sub
imul
adc
xchg
pushw
sub
mov
inc
iret
incb
pop
cmp
push
lods
jle
or
in
mov
mov
pop
scas
and
ret
or
ret
lock
jns
push
scas
xchg
into
aaa
xchg
aaa
mov
sbb
lock
repnz
add
out
sub
ret
adc
pop
and
cmp
mov
bound
mov
sahf
lea
jno
in
cmc
xchg
test
add
inc
sbb
aas
js
xchg
shll
pop
mov
inc
or
push
mov
jmp
xchg
inc
lods
fadds
xlat
inc
je
stos
xchg
sub
subb
push
push
dec
xor
pop
jo
sbb
mov
fcoms
aam
ljmp
lcall
cmc
push
ljmp
xlat
and
jg
shll
jnp
pop
cvtps2pd
mov
in
in
cwtl
mov
cmc
and
mov
mov
add
rol
test
icebp
push
jp
in
xchg
jnp
or
pop
shl
cmpsb
in
inc
lods
test
int
or
xor
cmp
mov
insl
fistps
and
or
in
inc
xor
cmp
jecxz
aad
and
rcrb
xlat
mov
jecxz
lds
xor
sbbb
lcall
xor
imul
movsl
xchg
pusha
xchg
sbbl
push
xchg
ficoms
or
int3
and
jle,pn
push
loope
pop
sbb
pop
lcall
push
outsb
repz
add
loop
stos
into
pop
xchg
dec
movsw
test
popf
repz
push
and
pop
outsb
mov
gs
adc
out
xor
mov
int
mov
push
mov
dec
mov
pop
mov
movsl
jnp
push
push
ja
mov
dec
cmpsl
inc
dec
enter
or
fwait
sahf
sbb
out
xchg
shlb
add
mov
call
sub
pop
push
mov
push
sub
push
dec
popa
ss
lahf
out
movsl
jle
mov
push
call
pop
rolb
xor
pop
or
imul
movsb
test
xchg
lods
ljmp
adc
fsubl
push
incl
adc
xor
pop
sub
mov
add
lods
bound
mov
mov
mov
xchg
inc
iret
and
adc
sbb
dec
and
mov
or
pop
push
jbe
test
cmpsb
push
jns
inc
sbb
sub
cwtl
or
lret
ret
pop
loopne
pop
fbstp
dec
push
sbb
add
cmp
jno
adc
cwtl
fidivrl
inc
pop
in
inc
pusha
mov
cli
aas
bound
lods
fcomps
jl
test
mov
scas
es
cs
mov
mov
sub
loop
add
adc
xchg
aas
and
mov
pop
jp
vmovlps
loop
inc
test
iret
cmp
movsb
inc
mov
test
stos
xor
pop
push
xchg
in
ds
mov
cmpsb
push
aad
mov
inc
cli
enter
push
dec
sbb
xor
sub
fstpl
jl
sbb
test
cwtl
cs
sbb
xchg
mov
ja
dec
inc
loop
add
insb
addr16
xchg
adc
adc
mov
and
push
inc
jle
fadd
and
xor
mov
cwtl
jae
test
or
fisttpl
lret
lock
mov
sbb
cmpsl
and
dec
andl
loope
flds
pushl
ret
seta
xchg
out
adc
mov
mov
add
xor
mov
mov
mov
frstor
and
les
push
push
hlt
sbb
fcoml
outsl
jle
fistpll
std
rorl
adc
popf
testb
fsubp
sub
repz
cmp
pop
push
arpl
inc
jp
push
dec
adc
cwtl
pop
xchg
xor
xchg
stc
push
movsb
add
dec
xchg
lds
andl
mov
adc
xor
add
xor
popa
cwtl
xchg
ret
shlb
popa
int3
mov
aaa
lret
cwtl
sti
faddl
adc
sub
mull
nop
jl,pn
jl
sbbl
jbe
fnstenv
nop
stos
adcb
mov
dec
aaa
push
push
fidivs
cmp
stc
xor
out
jo
add
xlat
add
add
jge
add
jmp
addl
loop
rcll
lock
lret
daa
and
out
push
xchg
dec
cmc
dec
ja
jns
mov
xchg
sbb
or
fisttpl
or
and
mov
imul
ret
popa
pop
test
fidivrs
mov
aas
push
adcl
aad
inc
clc
xor
adc
sti
jne
aaa
push
mov
mov
nop
adc
cs
sub
push
test
xor
pop
addr16
cmp
and
les
je
add
mov
lds
jo
xchg
sbbl
sbb
inc
fs
mov
inc
out
mov
sahf
leave
pop
shrl
sub
ljmp
cmp
push
xchg
xlat
fcompl
popf
and
cmc
popa
int3
es
pop
cld
dec
rorb
test
add
mov
fwait
idivb
jmp
in
xchg
insl
call
addr16
cmp
cmp
adc
mov
je
pop
sbb
pop
popf
test
and
mov
pop
pop
mov
fwait
mov
lock
cmc
lods
shr
daa
ss
sahf
xchg
loopne
lcall
lret
xlat
jmp
jle
pavgb
adc
inc
popf
repnz
add
pushf
stc
push
daa
pop
std
or
lahf
in
notl
andl
jns
test
in
in
mov
test
mov
scas
xlat
pop
les
mov
xor
add
mov
test
dec
ljmp
rcll
pop
push
sbb
xor
inc
outsb
push
mov
data16
pop
clc
cmpsl
lret
inc
mov
lods
xor
add
or
push
xchg
aas
lcall
lds
insl
icebp
mov
or
sub
dec
arpl
das
mov
jmp
jne
out
es
gs
pop
fwait
leave
push
fldt
jl
mov
cmp
lock
push
jp
fwait
mov
mov
push
add
adc
iret
sub
inc
add
jns
iret
xor
mov
cmp
or
bnd
sub
daa
insl
ds
aas
bnd
sbb
dec
nop
arpl
push
inc
movsb
addb
loope
stos
aad
test
inc
xchg
cld
sbb
xor
pop
dec
mov
out
mov
adc
dec
cli
repnz
inc
shlb
xor
cmp
je
fsubrl
enter
setnp
test
loop
mov
jmp
lret
popa
hlt
mov
imul
jl
jl
xchg
push
sub
jmp
repz
sub
arpl
imul
dec
fs
in
repz
in
ljmp
popf
adc
aad
outsl
mov
mov
xchg
stos
sub
ret
jnp
sbb
xor
jge
fcomi
fdivrl
inc
nop
test
stc
out
outsb
int3
cld
xchg
inc
lahf
ret
test
sbb
xchg
push
cs
add
inc
pop
add
add
movsl
mov
mov
jmp
mov
roll
popf
sbb
lcall
push
fwait
mov
xor
add
add
in
xor
jecxz
lods
dec
jb
ret
xchg
xor
lahf
jo
es
rcr
hlt
orl
sub
rcll
scas
dec
sbb
add
sbb
sub
cmp
in
scas
jge
fimuls
mov
jo
aaa
lea
sbb
cwtl
push
add
add
popf
cmpsb
sahf
mov
or
in
dec
xchg
pushf
dec
clc
and
imul
inc
sbb
ret
or
andl
leave
dec
daa
cli
pop
mov
sbb
xor
dec
jne
lods
int3
cld
pop
lfs
enter
enter
dec
sysexit
sarb
popa
out
test
sahf
popf
cmp
jbe
test
or
cmpsb
test
enter
das
leave
lret
add
jno
ja
and
push
outsb
inc
mov
push
aam
push
cmp
jl
sbb
dec
ljmp
insl
ja
xor
repnz
push
adc
xchg
dec
or
pop
inc
pop
xchg
jne
in
insl
mov
pop
scas
movsl
cmc
daa
in
sbb
add
js
les
aad
sbb
test
repnz
push
scas
pop
in
adc
imul
cmp
mov
jp
fs
adc
add
dec
mov
mull
sub
or
mov
and
adc
add
xchg
pop
popa
lea
aam
fcoml
pushf
jmp
pop
stos
dec
fldcw
hlt
in
push
pop
in
test
push
popf
inc
mov
hlt
mov
xor
and
sub
push
inc
pop
in
ret
push
jo
out
lods
and
mov
inc
mov
xor
xchg
pop
pop
cmp
test
lods
flds
jne
push
in
dec
ret
mov
jle
mov
cmp
movsl
aas
add
cmp
xor
sbb
add
int3
lods
cmpsl
stos
push
or
pop
jp
push
mov
xor
cmp
in
xor
inc
jnp
mov
and
dec
sbb
insb
jnp
push
fldenv
int
push
fbstp
dec
hlt
cmpsl
mov
sbb
stc
js
mov
xchg
jle
and
out
sarl
push
pop
cmp
pop
mov
in
xchg
mov
les
xchg
bound
int3
pop
jecxz
adc
popf
pop
ficoml
jnp
and
cmp
stos
gs
out
add
pop
sbb
sub
repnz
es
lahf
mov
jge
lret
mov
xchg
lret
insb
xor
psadbw
scas
mov
mov
andl
jle
into
loope
push
push
push
jno
mov
sub
jmp
and
fstp
iret
mov
sub
and
out
mov
movd
push
scas
add
aad
push
jge
xor
lods
mov
stos
xchg
sbb
xor
fcomp
sbb
push
inc
notb
lds
mov
mov
shlb
mov
push
xor
and
and
jg
sbb
xor
pushf
add
jecxz
shll
adc
sbb
fcompl
lret
ret
mov
sbb
cmp
jne
jae
cmc
sar
xchg
insb
mov
add
push
notb
pop
int3
jp
and
sarl
addr16
fsubl
aas
nop
in
mov
sahf
mov
sahf
loopne
dec
mov
sbb
hlt
mov
stc
daa
add
pop
mov
push
loope
xchg
mov
sti
xchg
inc
pop
scas
loope
xor
xchg
jl
cli
je
sbb
out
sahf
and
dec
mov
dec
out
push
and
dec
mov
fnstsw
shld
aam
push
xchg
add
cwtl
mov
daa
dec
lahf
jge
imul
aad
push
je
leave
out
cld
and
xor
out
lock
cmp
xor
test
pop
fbld
dec
adc
data16
jae
in
xchg
iret
xor
lea
scas
pop
cmp
sub
lcall
xor
fildl
sub
dec
pop
push
pop
in
div
ds
pusha
sbb
pop
clc
pop
sbb
adc
inc
fistpl
xlat
aam
shlb
push
dec
mov
insl
cmp
fcmove
out
jle
fcomip
and
mov
call
cwtl
mov
out
ret
xchg
xchg
xchg
mov
fldenv
mov
adc
incl
and
jbe
push
mov
fdivrp
outsb
jo
cwtl
clc
mov
gs
mov
clc
insl
mov
aas
ljmp
loopne
inc
popa
cwtl
nop
cmp
dec
popl
and
mov
or
ja
push
mov
jle
test
imul
in
sub
rorl
mov
mov
jbe
lahf
sub
jne
js
lahf
insl
push
dec
mov
insl
push
pop
add
clc
lret
in
inc
repnz
jns
pop
or
and
imul
lahf
mov
sbb
jne
dec
mov
cmc
int3
out
dec
outsb
or
sti
mov
hlt
nop
aas
cltd
popf
push
or
les
and
lcall
sub
sbb
out
and
xchg
cmp
mov
push
pop
cmc
sbb
xchg
test
adc
mov
xchg
push
cmp
ds
shrl
rcrb
cmp
bound
nop
das
test
mov
fldt
sub
test
xor
mov
cwtl
in
and
ret
add
or
aam
and
and
les
jg
ds
mov
mov
dec
push
lahf
sbb
mov
mulb
push
rolb
mov
mov
or
or
mov
push
aaa
sarl
jge
ret
push
pshufw
adc
push
fcompl
dec
ret
sbb
sbb
xchg
sbb
das
loopne
sbb
js
fidivrl
sbb
xchg
ds
or
int
jbe
dec
loope
mov
flds
xchg
push
xor
or
in
in
rcrb
inc
adc
shll
imull
into
adc
jae
sbb
push
les
icebp
test
insl
in
imul
xor
push
out
das
mov
adc
pop
das
sub
insl
inc
mov
jl
push
or
jne
insb
fwait
dec
jp
xchg
lock
fiaddl
into
push
repnz
inc
scas
xchg
dec
push
imul
aad
mov
mov
xor
xor
xchg
cmp
mov
sub
sub
bound
insl
sbb
rclb
dec
popf
shlb
or
jo
push
ret
outsl
or
pop
add
mov
mov
test
mov
sahf
ds
push
lcall
popa
dec
xorb
cmovnp
lahf
nop
mov
in
mov
jcxz
adc
subb
popa
mov
sbb
cmc
scas
js
mov
adc
test
test
mov
frstors
jo
and
mov
stos
cmp
cmp
nop
and
add
in
rcrb
mov
outsb
mov
pop
cmpsb
jno
out
aaa
pop
mov
jle
int
adc
inc
data16
add
clc
or
or
pop
out
popa
sbb
scas
pop
inc
cli
mov
pushf
inc
repz
je
subb
jle
repz
mov
cwtl
cld
jp
fwait
cmc
rcrl
lock
scas
pop
mov
aaa
xor
stos
imul
scas
sar
pop
cltd
xor
jecxz
and
add
add
icebp
int
mov
lcall
sahf
add
sub
daa
sbb
sub
gs
jmp
jno
push
fildl
dec
mov
cmc
pop
popf
mov
cmp
sub
and
cli
add
sbb
adc
ss
incl
andl
arpl
and
mov
jge
cltd
pop
fisubl
xchg
lea
push
fwait
sbb
or
xchg
adcl
pop
ret
shrb
push
movsl
dec
jno
in
push
mov
add
mov
nop
outsb
mov
xchg
cld
jle
cwtl
sbb
adc
add
outsb
cmp
neg
xor
and
fdivrs
dec
push
das
push
jbe
addr16
mov
or
push
js
dec
mov
push
lds
cmp
sub
push
fwait
cwtl
jae
loope
ljmp
mov
or
lahf
cmp
sbb
lea
out
fildll
mov
inc
mov
lods
test
inc
aas
mov
aas
xchg
loopne
lods
jmp
nop
pop
mov
inc
lods
add
sub
sbb
xor
dec
xor
inc
outsb
mov
popf
dec
push
xor
push
or
enter
scas
mov
insb
push
mov
push
xchg
sub
xor
loope
outsl
ja
iret
sbb
mov
test
sbb
jle
add
mov
dec
mov
aaa
mov
fdivrl
sar
mov
inc
in
fistl
std
das
xchg
dec
sbb
orb
push
repnz
sub
andb
xchg
out
xchg
insb
inc
push
fdivl
sbb
scas
imul
sbb
pop
sub
stos
jmp
ljmp
sub
aam
fcoml
mov
push
xchg
iret
daa
ret
xchg
jmp
rcl
cltd
push
xchg
cmp
sbb
and
aaa
xor
decb
popf
gs
jl
cmp
test
rcl
in
adc
ret
cmp
and
insb
mov
cmp
xchg
or
push
sbb
sbb
fisttpll
inc
xor
mov
sub
mov
in
or
mov
add
xchg
fistl
repz
decb
lret
lock
test
mov
nop
xor
inc
out
pop
mov
test
jbe
mov
cmpsb
subl
or
paddd
js
xchg
pop
shll
sub
mov
clc
ret
in
scas
scas
gs
pop
dec
dec
xchg
jno
in
jne
xchg
cmpsb
push
mov
adc
jno
jno
stos
das
je
or
or
pop
clc
cmpsb
ljmp
orl
sub
lods
push
adc
fwait
cwtl
mov
shrl
dec
fld
ror
mov
adc
mov
xchg
cld
inc
outsl
fimull
dec
aad
cmpsl
mov
call
mov
pop
mov
ja
out
ds
xchg
xlat
mov
pop
push
or
mov
jbe
inc
je
repz
fidivrs
add
xchg
mov
in
repnz
mov
xor
push
add
and
dec
movsl
push
and
jecxz
xor
dec
icebp
addr16
mov
dec
add
popl
fwait
cmpsw
xchg
mov
sbb
out
mov
aaa
mov
mov
test
imul
in
imul
pop
dec
sbb
into
cwtl
in
flds
lea
push
out
psubusb
rol
fs
aas
xchg
mov
dec
jmp
sub
aad
shrl
nop
push
jg
push
mov
shr
in
cmp
jno
repz
push
rol
stc
pusha
sbb
cmp
inc
mov
mov
in
in
dec
hlt
sub
lahf
push
jo
inc
mov
or
data16
xor
jns
and
push
mov
mov
fwait
xor
test
mov
js
cmp
pop
je
rorb
jbe
mov
dec
and
dec
push
dec
sarl
mov
pushf
and
xchg
mov
add
sub
mov
mov
mov
imulb
out
loopne
jno
cmp
loope
push
shlb
push
mov
jo
jecxz
adc
pop
or
addr16
push
jmp
xchg
cld
add
sub
and
adc
and
sbbl
pop
mov
xchg
mov
bound
movsb
jl
cmp
pusha
sahf
xchg
fldt
xlat
xchg
pop
ljmp
fcomp
mov
inc
adc
mov
out
movsl
add
dec
jae
and
ss
imul
xorb
lret
fidivrl
ja
dec
lcall
sub
jecxz
sti
sub
dec
in
dec
sbb
or
addr16
ret
dec
adcb
aaa
fsubp
or
jbe
jne
mov
fimull
jp
cmc
mov
mov
adc
adc
je
mov
mov
cmpsb
xor
jo
scas
mov
ds
imul
int
push
push
and
jp,pn
mov
mov
jae
dec
in
andl
and
sub
mov
push
inc
xchg
mov
xorl
sbb
lods
jo
movsl
lods
sbb
dec
test
sbb
mov
inc
mov
int3
push
pop
xor
sbb
mov
jge
adc
inc
fdivl
push
add
ljmp
push
xchg
repnz
mov
int
dec
dec
and
mov
mov
or
mov
scas
sarb
and
mov
xchg
mov
or
nop
add
imul
in
bnd
cmp
dec
lret
lock
cli
pop
ja
mov
xlat
pop
jmp
pop
dec
enter
mov
pop
xor
into
pop
push
and
stos
fnstcw
xor
pop
jne
pop
in
dec
mov
pop
in
shrl
sbb
add
shll
jg
xchg
ret
bound
in
int
inc
sbb
jmp
int
cmp
sbb
and
mov
push
outsb
into
push
cmpsb
ss
in
loop
test
mov
cld
aaa
xorb
lods
das
divb
fcmovb
cld
sub
cmp
pop
xchg
mov
push
test
inc
movsb
jmp
jg
test
jl
lret
adc
aas
arpl
or
mov
std
mov
repnz
sbb
aam
das
lock
test
nop
mov
push
sbb
hlt
xchg
out
mov
cli
cmp
test
mov
xchg
ljmp
bnd
cltd
push
xor
inc
push
xchg
out
lahf
aaa
mov
pop
jb
mov
test
adc
mov
jp
jbe
dec
inc
push
mov
jge
cmp
inc
sahf
xlat
test
xchg
and
stc
in
jbe
ljmp
fwait
aam
push
std
or
push
sub
je
jmp
lds
mov
xor
add
fnsave
push
jno
roll
jmp
loopne
dec
je
shrl
ret
sbb
cmp
pop
bound
push
pop
cmp
insb
add
pop
mov
jecxz
sbb
add
or
xor
mov
push
negl
ret
std
cmp
lcall
pusha
cld
add
jmp
jge
lock
inc
rorl
rcr
jne
test
dec
mov
stc
mov
rolb
and
mov
mulb
mov
cltd
mov
mov
out
movsb
jle
pop
inc
sbb
test
popa
rorb
addr16
das
push
ja
push
sarl
out
cmp
loop
sahf
addl
cmovbe
jae
mov
mov
inc
and
push
xor
rcll
mov
jmp
aad
ja
cmpl
es
mov
in
imul
xchg
aas
dec
inc
int3
adc
sub
xor
pop
cmp
lds
ljmp
testl
xchg
outsb
test
xchg
mov
insl
xor
push
mov
mov
pop
xor
jno
in
xchg
or
mov
jo
adc
movsb
test
lret
lret
sub
inc
xchg
pop
sub
test
push
stos
out
and
cli
aam
jp
xor
mov
jns
jle
xchg
ja
cmp
mov
push
mov
cmp
ret
inc
movsb
cwtl
jns
subb
xor
jo
mov
test
fidivl
add
push
xchg
rcl
mov
lret
fwait
subb
or
or
push
cmp
push
pop
jae
imul
stc
push
scas
cmp
leave
addb
jmp
xchg
mov
push
lahf
adc
test
addr16
lods
cmc
push
lock
rcrl
mov
sub
cmp
ss
imul
addr16
aad
mov
inc
and
inc
rclb
idivl
lret
push
mov
and
jl
xlat
pop
add
lret
pop
pop
daa
mov
popa
or
das
jnp
push
mov
enter
sbb
mov
lahf
add
add
cmp
push
lahf
call
or
pop
mov
test
and
mov
xor
xchg
and
or
sub
xchg
imul
lods
outsl
mov
movsl
leave
dec
pop
pop
mov
fld
in
shll
cld
push
cmp
pop
or
aas
mov
dec
adc
les
sub
iret
mov
pusha
mov
add
fisttpl
sbb
fcmovne
pushf
je
mov
loope
jecxz
pop
pop
subb
outsb
cld
cld
add
iret
mov
loope
cli
cwtl
iret
add
ret
cld
ja
or
dec
sarl
test
lock
xchg
in
popa
add
adc
sub
arpl
mov
mov
dec
and
mulb
sbb
jns
pop
xor
aam
stc
mov
pop
aam
fs
adc
loop
jne
mov
mov
inc
push
mov
add
lea
shll
clc
pop
pop
scas
xchg
inc
lods
out
inc
sbb
adc
pushf
mov
fcmovnu
ja
sub
loope
mov
xor
sbb
stos
pop
push
movsl
lods
lahf
push
daa
mov
incb
addl
out
mov
sub
inc
and
rolb
add
test
and
or
ljmp
add
fstl
les
test
xor
cmp
xchg
push
scas
cmp
jl
xchg
ss
or
sub
dec
aas
lcall
mov
pop
jmp
xchg
push
xor
cmpsl
rolb
outsl
mov
imul
pushf
test
push
jbe
mov
shl
clc
push
stc
cmp
dec
mov
pop
jo
sahf
push
jnp
sbb
cli
xchg
mov
shlb
fstl
movsb
xor
mov
xchg
jo
dec
add
ret
adc
in
push
cmp
add
stc
mov
data16
push
sub
push
mov
aam
nop
lret
imul
fld
rolb
mov
cmp
and
mov
loopne
aaa
data16
out
add
lret
int3
pop
or
adc
mov
jno
aam
cli
shlb
push
addr16
sub
and
mull
shlb
out
pop
mov
adc
jb
sub
pop
dec
call
pop
xor
xchg
jb
lret
out
mov
pop
xchg
mov
sahf
and
xlat
sbb
adc
pop
jg
inc
pop
sarb
cli
mov
dec
cmp
ret
cmp
cltd
and
jmp
xchg
push
outsb
icebp
loop
flds
scas
mov
or
sub
mov
adc
xchg
mov
in
icebp
and
dec
dec
cmp
xchg
add
mov
rcrb
inc
sbb
mov
jg
ret
jmp
and
and
xchg
ret
mov
ds
sub
dec
and
or
fistpl
bound
push
or
call
mov
mov
jnp
push
sub
dec
stos
pop
jno
and
fsubrl
and
push
loope
das
ret
in
fisttpll
rorl
pop
jno
ds
repnz
bound
shlb
jmp
cli
insl
xor
xchg
repnz
xchg
mov
add
jg
dec
pop
ret
cwtl
inc
inc
in
dec
cmp
add
std
sbb
sti
mov
adc
fldcw
xchg
push
cld
sub
cmp
shl
inc
adc
cmp
or
ficoms
xor
jne
push
jb
push
jns
fistps
cld
addb
aaa
repnz
inc
dec
jle
pop
divl
cmp
das
out
pop
xchg
jns
pop
std
adcb
adc
lds
mov
jne
dec
pop
pushf
test
lds
aad
pop
cmp
and
inc
ljmp
subb
sti
adc
repz
test
and
lea
jcxz
inc
insl
lea
cltd
xor
int
inc
cmp
int
test
jecxz
push
xorb
subb
mov
dec
insl
sbb
pop
stc
subb
xor
lahf
loope
jge
scas
cmp
fnstsw
ja
pop
cmp
mov
cmp
inc
outsb
call
mov
imull
lcall
fdivl
sub
pop
jne
or
and
shrd
test
rcrb
xchg
sti
push
aaa
cmpsl
sbb
jae
xchg
adc
ret
loopne
lcall
add
cli
stos
aaa
pop
xor
lods
inc
xchg
loop
mov
mov
cmp
dec
sbb
push
add
xchg
ljmp
pushf
sub
into
pushf
cmc
fimull
or
loope
sbb
loope
pop
pushf
fmuls
je
fisubs
add
leave
pop
mov
psrld
push
inc
push
nop
pusha
push
push
cmp
shr
dec
mov
outsb
or
xor
adc
push
mov
mov
mov
inc
push
sti
mov
pusha
push
push
addr16
nop
aad
ret
dec
xchg
and
push
lock
mov
in
pshufw
adc
dec
jp
sub
ds
cmp
test
push
pop
pop
cld
stos
clc
dec
pop
flds
push
cs
and
sbbl
call
mov
mov
and
push
leave
cmp
ljmp
and
sub
dec
int3
sahf
xchg
xor
pop
adc
pop
nop
xchg
inc
or
mov
sub
ljmp
pop
movb
jmp
xor
or
idivb
lahf
mov
test
jg
aas
daa
xor
xchg
rclb
lahf
xlat
push
cli
inc
push
push
sub
pop
cmp
rorb
mov
lcall
adc
inc
fisubrl
jnp
out
je
sti
repz
sahf
or
cmpsl
jnp
fdivp
scas
xchg
call
je
inc
inc
decl
ret
loopne
nop
cs
mov
mov
mov
cmpsb
push
sub
arpl
cmc
inc
mov
outsb
movsb
sti
sbb
adc
or
dec
sub
add
cli
and
cli
and
jle
push
xchg
mov
dec
loope
aas
jo
sbb
jne
push
cmp
outsb
sub
dec
xorb
and
mov
loop
leave
scas
ljmp
xchg
adc
cli
dec
les
cld
aaa
inc
jg
test
mov
cmp
lret
mov
add
and
cs
hlt
cwtl
leave
rcrb
and
jl
sub
fadds
or
add
fwait
xchg
movnti
imull
jecxz
inc
je
jge
xlat
nop
faddl
and
inc
movnti
fistl
mov
lock
add
mov
jbe
int
aam
jge
push
or
testb
xor
xchg
mov
pop
xor
or
fists
outsl
jns
jl
int3
enter
fisubl
xchg
add
in
je
cmp
xchg
int
mov
jno
mov
xlat
inc
test
sub
or
xchg
sbb
leave
adc
mov
lock
and
inc
lret
pusha
add
push
les
sbb
bound
dec
in
sbb
mov
pop
aam
int
je
sub
movsl
addb
or
cld
pop
xchg
movsb
jmp
inc
das
cmp
xchg
lahf
popf
clc
xor
andl
mov
out
adc
mov
pop
sub
aam
mov
es
xorl
sub
inc
out
add
mov
add
in
add
pop
push
mov
mov
imul
lcall
sbbb
jo
xchg
enter
leave
ljmp
or
push
int3
dec
js
out
sbb
les
les
in
cmp
leave
mov
push
js
or
loope
fadds
mov
cld
fnstcw
jb
adc
into
daa
jns
xchg
push
mov
cwtl
jmp
inc
mov
in
cmc
xchg
lea
mov
dec
dec
and
scas
daa
cmpsl
mov
insl
cmc
add
lret
sbb
cmpsb
push
addr16
daa
cmp
ret
popf
xchg
adc
adc
cmp
cmp
cmpsl
loopne
js
xor
pop
cmc
push
or
pop
or
mov
pop
sbbb
fldl
fsubs
and
xchg
pop
xor
push
mov
inc
cmpsb
fwait
jp
xor
push
lea
pop
inc
mov
and
out
scas
cmp
push
mov
aad
fdiv
cltd
dec
leave
mov
jecxz
aas
loopne
mov
sahf
loopne
fstpt
popf
out
jo
add
pusha
int
inc
mov
fldt
into
subl
adc
sub
scas
bound
mov
inc
mov
out
into
ljmp
lods
loopne
gs
iret
or
test
ret
push
xor
cs
dec
pusha
loop
loope
add
or
in
sub
mov
mov
rolb
out
shrb
add
push
or
or
mov
xor
xchg
stos
pop
leave
jb
push
cmp
xor
xchg
scas
xlat
ja
dec
lods
xchg
dec
mov
add
dec
jl
movsl
mov
sub
fwait
and
push
jmp
in
mov
in
shlb
xor
sub
je
pop
xlat
or
int
jbe
sbb
push
leave
sahf
pusha
stos
jnp
cld
jecxz
int3
call
jmpw
mov
and
pusha
out
pusha
sub
mov
pop
and
pop
xchg
ret
imul
imul
inc
mov
mov
mov
push
imul
sbb
jp
test
mov
shrl
shll
adc
cmp
jns
fdivrp
or
fmul
xchg
xchg
push
mov
fs
repnz
mov
rcrl
sti
xchg
pop
es
repnz
fstpl
jl
jno
dec
adc
js
testl
push
enter
popf
arpl
mov
push
xchg
ret
mov
dec
mov
push
sbb
out
test
xchg
fnstsw
arpl
jae
stos
inc
lret
jne
mov
das
arpl
sti
shll
pop
repz
push
outsb
test
pushf
or
inc
cmp
mov
add
shll
xchg
or
jne
mov
iret
adc
movsl
push
movsl
adc
jb
push
sbb
push
mov
sarb
gs
call
fwait
xchg
dec
mov
lods
sarl
call
fmuls
jns
xchg
outsl
pop
nop
cmpsb
jl
fldenv
addr16
lods
fcmovnu
outsl
jbe
cmp
pop
addr16
rcll
stos
cld
mov
inc
outsb
xchg
xor
xor
mov
ja,pn
push
sbb
pop
int3
jb
js
xchg
inc
jae
outsl
loope
test
inc
pop
pop
or
push
cli
push
and
mov
and
add
test
je
push
push
sti
push
and
jle
xor
into
popa
add
xor
jnp
insl
cli
push
movsb
mov
out
test
mulb
xor
les
mov
xor
ret
or
mov
mov
adc
sbb
push
lock
cmp
sbb
mov
int3
xlat
jnp
pop
ss
mov
push
outsb
enter
dec
out
xchg
xchg
mov
mov
xchg
lret
bnd
push
xor
inc
adc
in
xchg
fs
sbb
fiadds
push
stc
inc
xchg
les
xchg
xchg
mov
test
dec
ds
mov
out
fucomip
andl
jbe
jno
clc
jl
in
pop
mov
cmp
dec
outsl
or
jle
arpl
movsb
jecxz
adc
int3
mov
faddl
int
add
add
lock
ljmp
fsubs
jns
xlat
dec
loopne
int3
pop
adc
mov
out
sbb
int
push
or
sub
int
or
or
shr
iret
int
sbb
fs
jb
push
aam
sbb
jl
stc
imul
movsb
push
test
mov
cmp
mov
dec
hlt
xchg
stos
lcall
sbb
lcall
lods
or
jl
dec
ret
sbb
fnstenv
repnz
aaa
xchg
movsl
push
popa
dec
lds
push
pop
xor
ret
and
mov
fwait
xor
popa
ljmpw
sub
dec
cwtl
movsl
inc
addb
lock
pop
jge
mov
sbb
out
fcmovbe
add
mov
cmpsl
cli
push
xchg
scas
adc
mov
loop
dec
lock
jnp
sub
inc
cmpsl
cmc
mov
cmp
mov
andl
mov
test
fidivrs
leave
or
insb
mov
sbb
in
push
mov
jne
mov
outsl
xor
jle
pusha
cli
adc
sbb
divl
adc
xchg
mov
lea
jno
sub
mov
repnz
loopne
movsb
cld
imul
test
xchg
jne
mov
pop
and
inc
push
adc
in
sub
fmuls
push
test
dec
cltd
enter
jnp
xchg
bound
pushf
dec
push
sub
loop
add
dec
mov
jb
inc
xor
push
mov
ss
std
inc
sbb
mov
xor
aas
inc
or
adc
jmp
sbb
inc
idiv
or
lods
and
add
pop
cmpsl
push
movsl
mov
dec
xor
cld
push
push
xchg
mov
gs
lret
fisttps
movsb
jo
cmp
sbb
xor
dec
pop
push
icebp
ficoms
ds
hlt
stos
jnp
mov
loop
fdivrs
xor
xchg
lea
mov
nop
or
jmp
ffreep
test
or
cmc
test
pop
jge
xorl
mov
xchg
xchg
shl
jg
push
lds
fisubs
inc
sbb
int
mov
xchg
add
inc
mov
dec
cmpsb
div
mov
xor
es
jns
into
in
addr16
rcr
mov
mov
push
or
mov
cmp
lahf
adc
xor
add
or
out
push
cmpb
cmpsl
xor
adc
sub
fisttps
mov
scas
xchg
lcall
dec
mov
les
pop
cmpsb
es
add
jmp
fwait
sub
fnstsw
rcr
out
sub
add
jp
std
pop
sahf
mov
xor
adc
cmp
aad
fidivrs
pushl
movsb
int
xchg
gs
je
push
xchg
in
sub
sbb
stos
inc
or
jg
mov
mov
cmp
gs
bound
in
push
cmp
jnp
hlt
leave
add
add
push
in
xchg
das
orb
xchg
xchg
push
inc
push
inc
jl
test
rolb
push
lret
push
stc
lret
ret
fisubrs
aas
cmp
hlt
push
cmp
add
adc
mov
stos
jle
xor
call
cltd
lds
xchg
push
rorb
xor
aad
repz
sbb
sahf
mov
nop
pushf
out
popf
movsl
jmp
mov
divl
in
shl
ret
scas
mov
mov
xor
push
mov
inc
jg
pop
data16
in
xor
sahf
mov
fisttpll
in
stc
call
jmp
mov
addr16
and
jl
fsts
sarl
and
pop
pop
mov
mov
frstor
cwtl
repnz
sbb
add
sbb
mov
add
jp
mov
pop
cmp
cmp
xchg
xchg
das
inc
int
mov
fisubl
xchg
pop
lock
mov
clc
sbb
sub
jo
popf
push
dec
sarb
es
rorb
add
push
pop
subb
adcb
push
mov
push
mov
mov
push
repz
test
add
jo
dec
push
inc
pushf
pop
jmp
jbe
add
xchg
fcmove
cmp
popf
pop
mov
xor
mov
add
fcmovnu
sbb
cmp
stos
xchg
xchg
pop
in
add
addr16
lret
sub
out
and
and
out
les
pop
cld
add
roll
and
jge
and
in
xor
sar
pop
jmp
jge
sbb
fisubl
jns
jl
jae
or
xor
xchg
in
jmp
mov
mov
out
xchg
ret
pushf
cwtl
and
test
push
pusha
stc
sbb
sub
sbb
mov
test
mov
mov
loop
xchg
std
les
sbb
dec
mov
xor
sahf
fistps
or
push
and
loopne
lret
push
jno
shrb
shlb
push
out
adc
sbb
ret
dec
adc
mov
stc
rol
jno
in
fildll
js
in
jae
xlat
iret
arpl
leave
mov
movsl
sbb
adc
cmp
andb
inc
push
out
xor
rorb
aaa
insb
rcrb
call
dec
xor
imul
bound
mov
bound
std
mov
push
push
nop
clc
push
mov
sub
push
jg
xchg
insb
xchg
xlat
jp
jl
jecxz
iret
out
adc
shlb
pop
outsb
xor
stos
sbb
sbb
iret
jo
adc
ljmp
xchg
insb
and
shrb
cmp
cmp
cmp
sbb
loopne
in
and
ja
jno
or
adc
js
pusha
lods
jne
sarb
inc
push
leave
push
enter
andb
and
xlat
inc
push
pop
push
es
mov
das
pop
fxch
scas
xchg
jae
inc
push
aaa
int
push
bound
lret
cmp
add
sbb
imul
popf
arpl
data16
shll
jl
mulb
sbb
shrl
out
jnp
jmp
adc
jo
push
in
flds
add
xchg
xlat
adc
fistl
inc
xchg
clc
add
sti
gs
pop
stos
sbb
xchg
or
mov
jl
add
js
mov
insb
ret
push
in
es
call
les
or
sub
xchg
aaa
sti
pop
add
add
mov
or
inc
fsts
push
and
in
aas
ljmp
outsl
xor
or
lds
es
jp
xchg
or
fildll
push
int
pushf
repnz
lret
nop
hlt
inc
sbb
subl
cmpsb
add
jp
enter
imul
cmp
xchg
mov
sbb
cltd
xor
mov
lock
push
add
fs
pusha
xchg
imul
pop
icebp
outsb
cltd
sub
lods
iret
outsb
lahf
mov
imul
fwait
ds
jns
pop
add
add
repz
test
clc
arpl
mull
jmp
mov
fistps
sub
inc
pop
movsb
inc
jle
mov
push
int3
add
test
fcmovu
jno
push
hlt
test
xor
js
pop
xor
xor
sub
das
dec
or
mov
std
not
ret
movsl
xor
mov
or
dec
sbb
push
jmp
in
lret
jg
jle
in
insl
jno
jmp
cmp
push
mov
adc
cmc
inc
jo
lcall
icebp
fiaddl
dec
loope
dec
icebp
popf
roll
outsl
mov
pop
mov
dec
xchg
xchg
mov
bound
add
or
xchg
enter
dec
xchg
mov
cmpsb
sbb
inc
stc
mov
xchg
add
jg
aam
mov
pop
push
sub
mov
push
aad
pushf
or
inc
cmp
outsb
push
mov
shr
cmp
cmc
push
xor
repnz
inc
mov
push
push
aam
xchg
stc
leave
push
pop
ljmp
lock
xchg
in
xchg
lds
loope
je
dec
lcall
inc
xor
ret
sbb
dec
sbb
bnd
mov
sub
inc
pop
clc
mov
add
mov
pop
lahf
adc
imul
gs
stos
cmc
test
cmpsl
jg
loopne
adc
stos
xchg
mov
out
lds
outsb
jmp
outsb
cltd
inc
jno
rcrb
sti
je
fcoml
jns
ret
adc
dec
jnp
aad
xchg
cmp
dec
imul
idivl
aad
enter
test
fucomp
cmp
mov
mov
ret
movsb
aam
lret
fcmove
and
gs
mov
push
imul
loope
mov
cmc
enter
xor
pop
push
cmpsl
dec
sub
inc
dec
adcl
mov
adc
fwait
loope
adc
daa
ja
movsl
js
lds
icebp
xchg
push
icebp
ljmp
jp
lret
leave
xor
add
pop
or
xlat
and
adc
push
jno
mov
mov
daa
mov
cmp
in
std
cwtl
imul
idiv
cmp
in
loopne
out
int3
mov
mov
shll
pop
jl
sub
dec
outsb
cmc
rclb
pop
xor
jne
cmp
shll
inc
fs
imul
stos
ret
xchg
sub
sbb
adc
insl
jno
and
shrb
sbb
test
nop
cmp
lret
mov
jns
jmp
rolb
dec
cmp
cltd
dec
ss
ds
rcrb
ficoml
cli
add
xchg
filds
dec
jle
aas
mov
leave
mov
dec
ss
cs
std
not
lods
repz
mov
cltd
std
orb
out
mov
outsb
cmp
cmp
ss
cmp
and
inc
adc
inc
mov
mov
scas
sbb
fcmovb
jmp
cmc
sub
jae
push
sbb
fwait
and
dec
je
outsl
cmp
pop
arpl
sbb
int3
popl
int3
inc
inc
inc
mov
add
pop
popa
cmp
add
into
ljmp
rol
or
push
aas
lahf
and
inc
test
or
lods
aam
and
jp
pop
test
mov
xchg
imul
and
dec
and
xchg
sbb
mov
fsubrl
sbb
fsubs
pop
arpl
mov
fs
ret
or
pushf
jecxz
fwait
push
mov
inc
repnz
imul
push
dec
ja
fiadds
iret
or
cmp
push
mov
cmp
jbe
or
xor
loop
fwait
nop
cld
test
incl
sbb
into
push
mov
add
or
cmpsl
iret
xlat
imul
outsb
fs
sub
iret
jge
push
xchg
mov
jp
icebp
aas
cmc
fs
in
or
or
xorb
inc
leave
out
into
push
inc
cmc
jecxz
xchg
jmp
dec
cmp
pop
push
out
or
adc
div
mov
loop
arpl
xchg
call
add
dec
xchg
push
aad
jmp
adc
rcrl
mov
insl
xor
cmp
and
mov
bound
test
ficoml
cli
cmp
scas
or
push
shll
mov
fadd
or
jae
lret
orl
ljmp
call
jp
sub
push
fdivrl
das
mov
fwait
push
jns
scas
pop
cwtl
fnstsw
mov
pusha
test
adc
addr16
cwtl
xchg
or
push
in
or
pushf
add
xor
dec
or
ljmp
xchg
test
dec
movsb
les
and
aas
jo
sti
add
stc
adc
outsb
push
add
mov
or
insb
add
xor
dec
jo
add
inc
shlb
or
jo
pop
out
scas
push
push
inc
xchg
mov
stc
xchg
xchg
inc
cltd
lods
sbb
jg
test
adc
out
jnp
lret
daa
ja
cli
push
nop
mov
test
arpl
xor
dec
xlat
jle
sub
stos
adc
push
xor
mov
adc
imul
push
outsl
push
add
sbb
jbe
dec
push
in
out
dec
insl
xchg
xchg
push
fisttps
pop
fs
popa
mov
jns
mov
push
inc
flds
adc
pop
adc
sbb
rcll
dec
pop
imul
loop
dec
sub
aaa
popa
inc
cmc
xchg
cmp
mov
jns
aaa
fstps
int3
add
inc
imul
jno
sahf
cs
shrb
cmp
inc
fcmovnu
int3
jno
pop
jl
leave
xchg
mov
mov
bound
or
and
das
mov
es
mov
rcr
ret
lcall
pop
sbb
lods
pop
mov
int
jecxz
jne
aad
stc
out
imul
push
movsl
mov
mov
cwtl
fidivrs
test
cmpsb
sbb
xchg
xor
inc
fldcw
add
xchg
xor
xchg
stc
push
or
dec
xor
and
jo
jne
out
and
cmc
push
rorb
negl
insl
fidivl
and
mov
inc
inc
shlb
sub
mov
shlb
shrb
lods
xchg
mov
imul
test
add
mov
inc
pop
dec
sub
test
lret
cmp
gs
cltd
imul
fistpl
fwait
rcll
and
mov
aad
clc
popf
inc
mov
mov
jno
push
pop
mov
cmp
cld
or
call
daa
les
notl
pop
sub
mov
int3
adcl
repnz
xchg
add
scas
xor
xchg
call
sti
lret
int3
cld
or
aam
data16
pusha
lret
add
cmp
rcrb
inc
outsb
lea
add
add
mov
dec
leave
cmp
insl
scas
cmp
pop
in
jmp
imul
test
jne
push
mov
xor
push
sbb
jecxz
lret
into
mov
push
call
jb
cmpl
pop
add
pop
and
and
push
and
outsl
fwait
mov
addr16
lret
inc
cmp
push
mov
or
cmpsb
or
int
fwait
mov
mov
sbb
insl
pop
jo
mov
andl
jg,pt
cli
mov
cmpsl
daa
cltd
mov
inc
and
test
fsub
adc
mov
mov
sub
ja
shrl
insb
pusha
outsb
repz
shl
in
mov
mov
out
sbb
xchg
cmp
adc
mov
fldt
push
push
movsb
cmp
out
sub
mov
mov
pop
adc
aaa
xchg
cs
ud2
pop
add
sbb
cmc
inc
mov
sar
mov
inc
popw
call
cs
xchg
mov
dec
pop
mov
fstpl
jp
mov
jl
inc
bnd
pop
xchg
jl
cmp
fs
ret
lock
ret
push
andl
jmp
out
dec
cmp
mov
ljmp
fnstsw
push
and
out
push
mov
cmpsl
xchg
cli
call
loopne
jp
pop
xlat
cmp
call
jb
push
sarl
push
fucomi
sahf
pop
inc
cmpsb
lea
cmpsb
mov
fs
cmpsb
fs
mov
push
mov
jp
add
jne
lods
ret
loope
mov
imul
test
es
into
cld
test
gs
adc
test
sub
dec
xchg
xlat
shrl
push
jns
fcmovbe
jl
andb
mov
cli
jne
test
in
mov
xchg
testb
pop
xor
bound
xchg
jl
or
stc
mov
adc
aam
int3
jae
cli
lahf
pop
and
ret
cmp
pushf
arpl
iret
adc
out
dec
aas
cmp
dec
inc
shlb
aas
loope
pushf
xlat
out
inc
jns
pop
data16
es
sub
dec
cmp
insb
xor
lahf
into
nop
movsb
pop
jmp
xchg
loopne
ds
mov
bound
ret
repnz
ret
mov
ja
xchg
jbe
cs
add
mov
call
jge
movsl
cmpsb
sbb
jae
push
sbb
repnz
push
das
cmp
sbb
push
bound
lahf
add
adc
pusha
stc
movsl
adcb
sbb
xor
jo
cltd
ret
inc
scas
sti
imull
cmp
out
fstl
int
jne
in
ja
gs
mov
pop
adcl
test
push
fistpll
into
mov
xchg
sbb
jns
dec
aas
inc
push
pop
in
xor
in
mov
add
cmpsl
xchg
mov
jmp
push
addr16
insl
xor
fdivs
xchg
je
inc
jb
lahf
out
cs
dec
pushf
xor
or
push
insb
jo
jl
jo
imul
mov
scas
daa
in
into
shrl
pop
gs
aam
xor
fcoms
or
addr16
aas
leave
aad
nop
arpl
pop
pop
addb
add
push
or
adc
int
sub
jae
test
not
mov
mov
leave
int
cmp
shlb
dec
test
pop
pop
mov
pop
daa
repz
jno
pusha
sbb
dec
outsb
jne
push
fcmove
push
mov
adc
test
adc
movsb
dec
fwait
mov
sarl
shlb
pop
push
mov
imul
lods
xchg
lods
jbe
or
aam
in
popf
loope
insl
sti
dec
cmp
flds
mov
sbb
lret
popa
pop
and
xor
inc
js
xor
rcll
xchg
xchg
jne
pop
hlt
sub
cmp
std
sahf
ret
sub
mov
iret
neg
inc
push
dec
int3
test
xor
mov
iret
sti
inc
xchg
lods
jle
nop
aaa
dec
pusha
leave
es
adc
sub
pop
jo
imull
data16
jl
sbb
jmp
mov
adc
rclb
jne
inc
pop
mov
sub
dec
xor
fisubs
imul
xchg
dec
mov
xor
cmp
addl
popl
mov
cltd
mov
adcl
mov
std
repnz
jae
mov
push
jne
mov
pop
mov
loope
popa
adc
mov
mov
push
sbb
push
xchg
inc
or
jo
aaa
cli
mov
jae
mov
inc
lods
push
jb
mov
sarl
lods
js
xchg
cmp
dec
dec
xchg
pop
xchg
cmc
mov
stc
jp
jmp
sbb
inc
mov
ret
jmp
xchg
and
lret
xchg
lods
pushf
sbb
popf
repz
jg
sbb
push
mov
ljmp
rclb
mov
int3
push
icebp
repz
sub
fisubrs
sbb
test
aam
mov
leave
mov
out
aad
lods
mov
add
movsl
and
icebp
mov
dec
mov
fstpt
pop
cld
adc
jp
repz
adc
sub
out
pop
lods
lea
inc
push
shlb
adc
mov
sub
popf
and
jns
cmp
push
adc
cmp
sbbl
jl
insl
data16
fwait
lods
scas
cmp
jl
or
xor
mov
je
lds
pop
idivb
jg
js
mov
lret
or
mov
orb
mov
xchg
inc
mov
aad
mov
call
imul
ret
paddw
sub
adc
jmp
sub
insb
inc
idivl
int
add
lds
sbb
mov
andl
pop
arpl
movsl
and
push
add
inc
data16
cli
add
cld
dec
leave
fildll
out
js
push
or
aam
in
mov
call
pushf
cli
mov
popf
outsb
notb
into
jecxz
or
popf
arpl
ja
ret
rcll
mov
les
fwait
aam
xchg
outsb
popf
insb
pop
push
mov
xchg
pop
push
push
adc
mov
fadd
and
mov
pusha
aam
sbb
stos
push
push
sub
inc
inc
into
xchg
ja
mov
out
ss
out
and
push
aas
fs
jg
or
sbb
bound
test
pop
pop
je
inc
push
fisttps
pop
pop
push
push
in
xchg
xchg
and
mov
nop
imul
mov
jmp
or
mov
fiadds
push
xor
push
mov
mov
pop
mov
mov
sar
hlt
jle
icebp
push
push
fwait
ret
inc
lcall
scas
push
addb
fmuls
cmp
shl
mov
cmp
sbb
fwait
pop
inc
test
mov
add
sahf
sbb
pusha
rorb
std
mov
mov
pop
cmp
pop
and
insl
pop
mov
out
lds
add
ljmp
sbb
setge
in
and
aam
mov
adc
sbb
daa
sub
pop
pop
cmp
mov
cld
movsb
das
jmp
pushl
stos
js
xor
cmp
pop
jl
jno
push
js
ss
mov
ds
xor
mov
movsb
insb
xchg
loop,pn
push
push
lds
inc
or
ret
aas
push
mov
icebp
gs
mov
cmpsl
pusha
mov
clc
xor
mov
push
mov
cli
pop
inc
add
mov
mov
sub
push
cs
aad
push
cmp
mov
jp
mov
jg
call
pop
fcomps
mulb
fsubrs
xor
ds
loopne
mov
jmp
test
or
shll
out
sbb
in
xor
sarl
rol
xchg
test
dec
call
and
stos
clc
lock
les
sub
mov
mov
int
imul
pop
rolb
mov
in
inc
pop
and
fbld
rol
or
mov
xlat
imul
aaa
insb
sar
cld
xchg
adc
orb
in
aam
xchg
aaa
push
sub
shll
cs
pushf
loopne
push
pop
jl
push
fs
mov
inc
arpl
xchg
dec
jo
loope
ljmp
xchg
mov
add
into
out
mov
add
ret
add
enter
inc
inc
sub
xchg
scas
fsub
test
push
jae
inc
adc
or
ljmp
mov
or
enter
ds
aam
and
cmp
ljmp
cmp
xchg
fsubrp
mov
clc
int
vmread
data16
add
mov
pop
addr16
lds
pop
lods
inc
scas
inc
jp
xor
out
cmp
push
xor
adc
pop
inc
ljmp
jmp
aas
pop
sbb
movsl
sub
imul
loopne
lret
pop
ljmp
jecxz
and
roll
loopne
sub
push
xlat
jle
jle
jp
ficomps
into
mov
ficoml
mov
pop
cmp
ljmp
push
sub
mov
std
mov
insb
inc
push
fwait
mov
jnp
pop
rep
mov
scas
mov
or
ds
push
adc
adc
pop
loopne
ss
mov
add
pop
les
shr
pop
inc
sahf
cmc
xchg
cmp
xor
scas
cmc
and
cmp
mov
add
fcoml
or
xor
bound
hlt
enter
insb
popf
imull
popf
gs
subb
push
in
aas
jg
mov
stos
and
roll
xor
or
mov
ret
addl
es
jo
or
lods
stc
cmp
pop
pop
mov
rorb
push
jb
insb
push
ss
mov
add
mov
xchg
adc
mov
cwtl
ret
sub
cmpsl
ret
test
out
outsb
dec
repz
ficoms
xchg
pop
mov
lahf
jo
movsl
mov
inc
out
imul
loope
arpl
bnd
in
or
in
dec
decl
dec
mov
mov
and
inc
mov
or
in
mov
ljmpw
mov
push
pop
sti
repnz
mov
push
rclb
jb
stos
faddl
je
add
call
and
push
ret
cmpb
in
fwait
outsl
mov
push
mov
nop
mov
push
mov
pop
jmp
dec
sbb
andl
jae
lahf
mov
mov
sub
bound
mov
push
sbb
fsubrs
aas
outsb
sub
jecxz
sbb
or
addr16
stos
out
cmp
lret
in
or
mov
and
jmp
je
lret
xlat
outsb
xorl
int
or
inc
aas
inc
inc
cmc
dec
pop
add
mov
xor
test
xor
add
jge
orb
rcrb
xchg
mov
mov
js
movsl
xorb
sar
pop
dec
pop
sti
subl
rolb
nop
repz
ss
aas
imul
stos
imul
rcl
aas
out
xchg
pushf
rcl
cmp
cmp
mov
or
pop
into
popa
push
mov
in
mov
jb
fiadds
stc
daa
mov
nop
cmc
pop
lcall
mov
and
mov
shlb
gs
mov
lea
ss
rclb
daa
mov
lods
and
or
enterw
insl
jne
sbb
xchg
inc
cs
clc
pop
out
aaa
lds
test
sub
cli
push
pop
and
fnstenv
add
test
or
xchg
pushf
repnz
rcll
inc
dec
stos
pop
movsl
mov
pop
dec
test
sbb
pushf
test
mov
movsl
sub
fs
icebp
pop
cmpsl
sub
aas
inc
and
cmpsb
xor
std
pop
inc
subl
pop
cld
leave
enter
sub
enter
adc
mov
sub
push
add
ja
aas
fsubl
push
add
sti
xor
mov
mov
inc
jp
stos
rolb
je
outsb
push
mov
dec
lcall
insb
lock
fnsave
mov
xchg
or
loopne,pn
adc
mov
lock
stos
outsb
mov
mov
imul
clc
test
in
adc
lret
imul
std
pop
jno
mov
adc
pop
loopne
adc
cmpsl
jp
pop
adc
adc
fistps
or
scas
mov
fistpl
insb
mov
hlt
pushf
adc
call
lea
fstpl
ret
scas
int
cmp
ljmp
add
out
fs
xor
addr16
push
clc
pushf
mov
push
jg
rolb
pop
rcrl
stc
fxch
inc
jno
sub
push
mov
add
pop
mov
out
inc
sti
mov
adc
adcb
movsb
push
scas
cmpsl
jnp
in
repz
sti
mov
ret
lahf
mov
jnp
in
xlat
and
jg
sti
stc
imul
les
nop
pop
xor
ja
push
sbb
movsl
shl
fcoms
idivb
push
icebp
fsubrs
xor
cld
mov
mov
lock
jg
and
test
cmp
dec
outsb
jno
inc
xor
jnp
loop
mov
rolb
lods
mov
mov
push
fdivrl
push
cli
dec
jb
push
mov
push
jbe
orl
pushl
sahf
push
xchg
mov
pop
push
inc
push
jecxz
and
jg
pop
mov
fnstsw
imul
lcall
sub
or
mov
inc
clc
cmc
mov
sbb
and
rol
es
enter
bound
stos
dec
mov
add
cmp
testl
mov
add
les
jnp
dec
mov
dec
pop
inc
rcll
mov
or
dec
int
push
sub
cwtl
xor
inc
sub
leave
aam
js
mov
cltd
mov
cmp
xlat
test
js
std
dec
jns
mov
dec
ficoml
inc
mov
fsubl
mov
push
loop
mov
and
inc
test
movsb
jb
rorl
add
lock
lds
movsl
mov
add
xor
dec
adc
in
xchg
sbb
sub
rol
rcrl
inc
aad
ret
jmp
je
jns
ret
dec
xor
es
aas
popa
pop
addb
ss
mov
mov
mov
mov
or
rcpps
xchg
mov
adc
rclb
ret
jne
ret
or
mov
mov
int
sbb
js
imul
fistl
ret
ficompl
inc
pop
xor
cmc
cld
pushf
test
mov
sbb
adc
sbb
lods
inc
or
sbb
lds
sti
data16
sub
push
mov
test
stos
xchg
jne
out
dec
fs
out
push
or
in
or
jmp
mov
xchg
cmpsb
and
mov
test
into
cmc
pop
addr16
out
cmp
jmp
sbb
mov
cmpsb
in
insb
fisubrs
leave
mov
push
ljmp
push
mov
sar
ljmp
fisttps
mov
xchg
add
or
mov
jmp
pop
fldcw
pusha
in
xchg
mov
mov
arpl
sbb
or
lahf
jae
sbb
shrb
insb
bound
sub
movsb
ffree
arpl
fs
dec
or
out
ficoml
clc
push
lods
adc
add
cli
mov
or
inc
xor
fdivl
adc
aad
out
ja
mov
dec
sahf
push
ljmp
mov
push
aaa
lods
or
gs
out
pop
scas
ror
or
jmp
stos
sbb
push
je
jl
fwait
mov
push
cmp
ja
push
das
xchg
das
frstor
lret
push
lret
movsl
pusha
mov
or
dec
enter
dec
mov
cmpsb
out
add
rolb
js
cwtl
sahf
cmp
sbb
sbb
loopne
jbe
rcll
sub
leave
inc
data16
sub
xchg
sbb
mov
mov
mov
imul
add
insb
cmp
bound
negb
jg
add
dec
push
mov
xchg
push
out
imul
loope
decl
lock
cmp
cmc
adc
push
inc
sbb
dec
lea
fcmovnb
mov
mov
push
popf
pop
mov
push
xchg
push
dec
inc
lret
insl
adc
cmp
es
pop
cmpsl
mov
adc
mov
ss
push
repnz
jbe
mov
pop
jnp
iret
adc
ljmp
mov
movsb
bound
xor
pop
pop
xor
push
xchg
dec
fsubs
mov
out
pop
mov
aaa
pop
lds
xchg
push
fiadds
mov
cmp
jns
mov
lahf
sbb
mov
dec
daa
xor
cmc
test
ja
mov
mov
adc
cld
xor
out
mov
dec
mov
loopne
test
mov
jae
adc
fsubrl
xchg
sub
or
xlat
movsb
loope
outsl
sti
adcb
test
mov
loop
jns
ljmp
add
cmpsb
add
xchg
sub
fmul
jo
push
cmpsb
into
xchg
cmp
cmp
fistps
or
push
stos
out
jb
pop
ret
jl
fisttpll
ret
and
dec
sbb
ficoml
pop
sarl
adc
add
lret
cmp
dec
nop
cld
pop
je
aad
aaa
jp
into
sarl
in
clc
jns
out
shrb
lock
insb
lock
mov
clc
cs
mov
jl
repnz
dec
jecxz
push
repz
lock
adc
scas
push
movsb
push
jecxz
insb
ret
fs
dec
and
or
sbb
sbb
cmc
push
enter
lcall
stc
ffreep
sti
jmp
dec
enter
lock
add
add
stos
sbb
xchg
xchg
cmc
pop
jb
inc
loop
mov
clc
push
mov
dec
int
movsl
sbb
mov
fiaddl
leave
daa
and
adc
and
pushf
fisubl
std
inc
cmpsb
popa
dec
mov
jne
inc
out
subb
mov
cmp
push
int
push
xchg
and
mov
in
jbe
xchg
popf
ret
fidivl
and
mov
sbb
shll
cwtl
shr
daa
dec
je
std
mov
call
inc
stos
jb
ret
jbe
dec
inc
fs
cmp
mov
gs
mov
fcoml
sbbb
xchg
xchg
in
int3
mov
xchg
shlb
xor
lock
std
stos
sbb
sbb
mov
shrb
inc
testl
mov
inc
jne
cmp
lea
insb
cmc
mov
aam
adc
movsb
ret
cmp
adc
out
ja
arpl
add
lock
sbb
adc
outsb
or
fcomp
cmpsl
push
or
xor
mov
popf
aam
movsb
xchg
dec
std
loopne
sbbb
sti
out
cmp
aas
add
insl
lds
mov
sub
loopne
stos
addl
jno
in
out
mov
sbb
lret
pop
leave
adc
pop
jmp
aam
dec
mov
cltd
ds
out
push
cmp
xchg
iret
sahf
sti
mov
cltd
int
lods
mov
dec
push
gs
mov
mov
jnp
popa
cmpsl
out
xchg
sar
sub
aad
insl
dec
mov
push
cmpsb
add
cmp
mov
inc
mov
mov
mov
adc
jbe
cli
sub
cltd
shll
push
or
cli
cli
out
pop
cmp
lea
lahf
pop
pop
fsubl
pusha
lods
int3
pop
je
cmp
sub
adc
test
aad
pop
pop
inc
sahf
das
test
test
aad
nop
sbb
lret
leave
les
xor
adc
rcrb
push
shlb
filds
jne
out
aas
mov
mov
mov
mov
add
sub
inc
into
test
ss
scas
mov
pop
imul
jge
out
fdivrs
push
je
inc
int
into
add
test
sbb
sbb
repz
loope
push
push
int
aas
inc
mov
jmp
mov
push
pop
test
cmc
cld
mov
call
popf
lcall
faddl
and
jge
and
sarb
or
fsubp
or
lods
ja
repnz
repnz
sbb
lods
stos
mov
or
gs
and
mov
cs
or
popw
cmp
jge
cltd
sub
mov
inc
fidivrl
xor
push
rclb
pop
rcrb
rolb
fstpt
pop
das
mov
cmp
xor
scas
mov
sub
lods
mov
jmp
enter
scas
in
mov
push
xor
cs
xchg
arpl
mov
iret
lock
add
jecxz
fadds
xor
insb
addb
mov
mov
loopne
test
into
sub
fistl
test
cmp
popf
jecxz
push
rcrb
push
or
cmp
rorl
pop
fisttpl
jg
lock
aaa
bnd
push
aam
cmc
jne
fsubrl
int
hlt
fcompl
loop
xchg
push
push
and
fimull
fwait
add
jne
inc
mov
std
icebp
loop
ss
or
sub
fnsave
fs
mov
xchg
ljmp
inc
fsts
mov
push
push
mov
mov
add
cld
imul
enter
fwait
pop
test
add
insl
lret
aad
nop
in
incb
push
sbb
into
scas
cld
mov
push
fs
jp
jmp
pop
leave
pop
ret
mov
test
pop
loop
or
lcall
jne
ret
pusha
in
mov
fisubrs
sub
sbb
loop
cltd
and
pop
mov
sub
pushf
mov
mov
sub
cltd
jno
sbb
sbb
and
or
mov
pushf
inc
push
pop
pop
pop
int
add
ret
jbe
xacquire
mov
lods
cmp
aad
in
js
enter
out
je
xor
sbb
dec
nop
adc
fdivrp
push
jae
es
cmp
lea
xchg
cmpsl
pop
in
inc
lahf
arpl
mov
adc
in
xor
cmpl
inc
xor
push
xor
jns
jp
add
jmp
testb
lret
iret
rcr
xchg
jns
xor
scas
add
push
loope
xchg
add
or
ja
mov
sub
lret
cmp
das
dec
lcall
aad
pop
movsl
stos
push
jg
push
sub
push
push
pop
pop
or
sti
into
inc
fisubl
dec
cltd
loop
aad
inc
pop
imul
mov
cwtl
adc
ja
push
loope
mov
and
arpl
lock
mov
daa
in
popa
xor
push
push
pop
add
andl
sub
xor
cs
lods
cmp
ljmp
stos
push
lds
pop
inc
add
push
nop
cmp
outsl
mov
mov
mov
sbb
xor
popa
mov
jbe
pop
add
inc
pop
pop
sbb
xlat
adc
mov
xlat
aam
cmp
dec
adc
mov
rclb
and
pop
mov
and
sbb
sbb
into
inc
mov
ss
loopne
inc
jb
fbld
mov
loop
dec
in
sub
sbb
add
jl
push
sbb
loope
sub
sbb
jb
cld
push
sub
mov
inc
cmp
loopne
pushl
dec
testl
xor
scas
jp
insb
add
adc
insl
nop
arpl
mov
shr
mov
and
dec
or
mov
les
cmpsb
add
xchg
sub
mov
lock
aad
int3
fdivr
xor
sbb
clc
dec
pop
dec
shlb
les
lcall
dec
ret
movsl
dec
or
in
negl
jp
scas
or
jbe
lods
fs
push
mov
int3
sahf
test
shlb
push
out
xchg
inc
in
inc
xchg
cmc
xor
adc
sbb
das
fstps
cmp
mov
adc
cmp
xor
adc
jl
pop
mov
jnp
mov
jne
in
adc
dec
pop
insb
adc
jno
add
adc
or
sbb
and
or
pop
bound
xchg
dec
mov
cmp
mov
jl
mov
incl
jbe
scas
add
hlt
and
xchg
fsubrp
or
cwtl
adc
xchg
fbstp
xor
cwtl
adcl
out
mov
loope
or
pop
ret
cmp
scas
mov
movsl
pop
sahf
filds
movsl
jp
pop
outsb
and
cmc
add
cmp
jp
gs
xchg
pop
sub
cmpsl
inc
dec
sbb
popa
and
sub
mov
jmp
in
adc
insl
dec
jb
pop
mov
pop
jle
jge
lock
dec
or
cmp
setle
jge
sbb
test
jae
les
ljmp
jl
mov
push
sbb
and
inc
shrb
mov
adc
inc
hlt
mov
gs
fistpll
sub
cmc
decb
mov
mov
pop
add
xchg
mov
mov
sub
cmp
fcomps
xchg
imul
rorl
daa
mov
xchg
mov
jb
mov
mov
jnp
sti
into
jne
enter
sahf
daa
adc
stos
add
jb
daa
adc
push
or
xchg
adc
mov
push
add
xchg
pop
cs
loopne
inc
jns
adc
push
cld
pop
insl
fimull
mov
insl
aas
in
mov
mov
sti
push
fiaddl
adc
sub
rcll
mov
xchg
sbb
mov
imul
push
sbb
imul
pop
inc
lret
call
andb
add
rclb
ss
sbb
dec
movsb
cld
mov
xor
cmp
mov
pop
pop
mov
xchg
inc
jle
testb
push
mov
add
push
je
addl
flds
inc
aam
popa
inc
lret
pop
and
jge
scas
mov
es
jl
popa
es
cld
fiaddl
mov
adc
stos
int
imul
inc
cltd
loope
jle
sbb
jb
mov
xchg
insl
mov
sbb
push
shlb
cmp
outsl
out
ljmp
ljmp
adc
je
fs
negl
sub
aad
ret
lods
mov
adc
mov
sbb
dec
xor
xor
xchg
fcomps
movsl
dec
jp
dec
inc
andl
xchg
mov
aas
bound
fsts
out
hlt
pop
sahf
jno
repz
out
or
cmp
cs
push
adc
fdivr
jecxz
sub
out
std
pushf
shrl
xchg
mov
daa
adc
adc
dec
and
jno
cmp
loop
lahf
outsl
loopne
push
out
adcl
fisttps
push
fwait
aaa
xor
inc
test
movsb
mov
imul
in
pop
sbb
and
in
xchg
push
movl
add
lock
ss
xor
test
pop
xchg
cmp
enter
out
fs
sti
sbb
add
inc
enter
jl
test
cmc
pop
cmp
jo
stos
lcall
mov
je
push
data16
dec
jb
pop
jnp
xchg
jnp
imul
enter
fidivrs
push
or
xor
imul
icebp
lods
pop
adc
popa
daa
lret
or
xor
push
lods
push
mov
movsl
stos
mov
cmp
mov
out
jne
xchg
pop
dec
push
mov
jg
inc
cmp
gs
dec
fsubp
hlt
adc
mov
pop
shll
cli
adc
adc
sub
ljmp
icebp
mov
adc
mov
insl
or
jne
jg
fsub
or
cmp
outsl
xor
call
out
mov
mov
ja
sub
sub
repz
std
mov
xchg
cmp
sub
pop
cli
mov
loope
mov
bswap
mov
or
jbe
sbb
ss
scas
push
addr16
jb
and
push
mov
pop
inc
inc
pop
out
inc
loop
movsb
jle
xor
int
inc
push
mov
xlat
mov
mov
adc
jle
add
out
stc
popf
daa
inc
lods
ja
sub
xchg
mov
jl
xchg
call
adc
sbbb
ja
adc
mov
pop
xor
inc
or
int
in
jecxz
mov
xor
add
imul
mov
inc
xchg
push
sbb
or
cmp
mov
std
lods
cs
popf
lods
movsl
inc
xchg
xchg
xor
xor
testl
cmpsb
pop
insl
fistl
inc
movsl
mov
aad
fistps
fisubs
stos
add
pushf
cli
jo
sbb
lcall
data16
sbb
xor
mov
inc
insb
mov
push
lds
movsl
xchg
lret
cmp
sbb
lods
push
cmc
add
pop
frstor
xor
cmpsl
stc
std
mov
sub
bound
out
pop
dec
push
aad
or
inc
sbb
cmpsb
mov
jp
dec
scas
push
es
int
movsl
cmp
pushf
push
jnp
ja
push
add
hlt
sub
jnp
adc
jl
mov
push
mov
mov
popa
push
in
into
sbb
aad
pop
cmc
mov
cmp
rcrb
mov
fcmovbe
sbb
jmp
out
pop
sub
jns
frstor
and
popf
loop
repz
xchg
cmp
scas
ja
dec
add
stos
pusha
scas
leave
aas
sub
mov
repnz
jp
ja
sbb
sub
testl
or
push
es
push
inc
mov
roll
lods
dec
bound
sub
inc
aam
xchg
inc
jge
pop
jne
adc
cmp
cmp
and
jle
xor
pop
xchg
xor
push
mov
xchg
fcmove
pop
les
aas
push
xchg
test
mov
sub
sub
inc
jl
pop
add
cmpsb
into
loope
add
or
fadds
or
fstpl
and
lds
xlat
sahf
sbb
nop
dec
xchg
pop
jle
push
xchg
and
es
sub
push
dec
int3
cli
jne
mov
xor
jnp
mov
jmp
xor
stc
stos
arpl
pop
ds
inc
mov
stos
popa
rorl
popf
clc
lret
lds
cmp
sahf
sbb
adc
lret
mov
add
push
sbb
pavgb
out
js
test
bound
and
incl
pop
mov
sub
bound
mov
mov
push
dec
push
mov
std
std
mov
push
push
sbb
inc
test
jb
cltd
test
jmp
xchg
jge
cs
std
xchg
mov
sbb
inc
int3
ffree
add
inc
mov
add
inc
sbb
pop
xor
jg
repz
cmc
sub
clc
mov
rcrb
add
pop
push
push
pop
push
adc
jle
dec
cmp
push
xor
sahf
out
sbb
jnp
mov
lods
in
rcll
rorb
mov
loop
dec
push
repnz
mov
inc
dec
loopne
adc
cltd
xchg
insl
addr16
or
add
push
add
push
sub
jo,pt
jg
ss
scas
jl
xor
insb
ljmp
icebp
sub
xor
enter
in
call
enter
loope
fsubrs
and
jge
shlb
das
es
int3
mov
shlb
xor
aas
in
stc
sub
lods
mov
jg
lcall
pushf
mov
mov
pop
mov
add
jp
xor
xorb
jnp
dec
movsb
rol
aad
mov
xchg
les
pushf
push
dec
push
jmp
inc
repnz
sub
ja
jecxz
jp
repz
cli
popf
stos
add
xchg
mov
lods
mov
pushf
inc
push
pop
mov
dec
out
pop
inc
repnz
lret
loop
cmpsl
aas
lods
sbb
cmp
jmp
pop
mov
insl
insb
inc
jl
pusha
mov
adc
mov
pop
test
lret
in
ret
mov
pusha
call
stos
stos
cs
push
cwtl
dec
dec
sub
daa
cs
loop
in
fsubs
dec
add
mov
bound
add
push
in
enter
es
jl
dec
scas
mov
pop
pusha
pushf
loop
fsubl
xor
or
push
pop
push
test
push
dec
xchg
dec
ret
hlt
test
push
addl
in
dec
adc
dec
pushl
push
xchg
inc
lds
popf
pop
cmpsb
push
xlat
test
stos
adc
rep
cli
cwtl
dec
es
aaa
bswap
loop
cmp
mov
addr16
cmp
cld
xchg
cs
xor
ss
in
fists
cmp
out
add
pop
repnz
popf
xor
dec
loope
fcoml
lods
adc
jecxz
insl
xchg
fwait
inc
int3
sbb
sub
inc
xchg
push
aas
sbb
mov
mov
clc
inc
outsb
jle
lds
inc
jp
dec
pop
dec
sbb
push
push
jae
outsl
push
mov
movsl
outsl
jns
pop
das
push
pop
inc
orl
into
mov
imul
mov
cs
das
cwtl
mov
and
lretw
jbe
out
xor
arpl
testb
or
xor
in
and
gs
push
lods
jp
bnd
adc
das
loop
fcmovnu
add
pop
sbb
mov
cmc
addl
bound
test
fldl
inc
inc
scas
adc
jecxz
arpl
xor
jns
xor
push
mov
xlat
test
inc
rorl
test
aam
aas
push
dec
mov
sahf
sbb
jbe
or
ds
lds
inc
inc
aaa
imul
dec
stos
and
adc
push
ljmp
xlat
and
fiaddl
loope
add
jmp
xlat
sub
in
jmp
add
push
repz
pop
mov
icebp
aaa
sbb
jb
aad
std
cmp
and
rcll
add
sahf
cmp
xlat
jbe
jecxz
lds
stos
or
push
adc
adc
sub
inc
dec
mov
jp
and
nop
cs
popa
movsb
xchg
jp
in
xchg
mov
dec
xchg
into
sub
and
je
mov
inc
repnz
pop
mov
pop
pushf
jle
adc
imul
xchg
push
js
push
leave
aam
call
mov
lea
dec
jl
add
mov
jne
inc
int
push
bnd
cmpsb
inc
repz
jl
cmpsl
mov
cltd
xchg
data16
stc
push
ret
sub
ja
and
fcoml
repnz
fnsave
xor
inc
sbb
popa
sub
pop
lods
xorl
iret
or
or
pushf
jo
stc
jno
fs
cmp
scas
aas
rclb
adc
gs
jecxz
bound
cmpb
adc
fst
adc
xchg
cltd
lods
xchg
fstpl
dec
pusha
push
fisttpl
add
dec
std
add
in
add
fcomp
mov
add
mov
test
mov
sub
mov
mov
sub
mov
mov
jg
jae
xor
cwtl
dec
and
loop
or
out
mov
add
sub
inc
fimull
xchg
push
push
into
jns
icebp
push
je
jb
or
mov
lcall
rcr
hlt
lods
sbbl
fs
sbb
sbb
pop
or
mov
sub
adc
in
movsb
icebp
repnz
inc
insb
testb
repnz
in
out
call
rol
xor
fwait
dec
lods
aad
js
cmp
das
add
jmp
lock
sbb
pop
jg
insb
enter
into
mov
jmp
xor
adc
mov
pop
jg
cs
xchg
xorb
fdivrl
and
jge
imull
std
out
push
sbb
aad
imul
xor
mov
jmp
insb
sub
daa
push
mov
shll
sub
adc
stos
jb
stos
xor
jno
mov
cwtl
mov
cwtl
stos
cmpb
mov
and
cli
mov
ret
insb
xchg
mov
mov
leave
push
adc
addr16
pop
out
sub
sahf
mov
inc
enter
or
xlat
out
add
cmpsl
leave
jle
pop
xlat
and
jmp
lret
fnstenv
and
aad
adc
aaa
xorl
ja
lahf
cmp
push
pop
fsts
repnz
jp
aaa
sarl
xchg
movsb
push
sub
lcall
shll
inc
xchg
mov
mov
pop
pop
and
push
xor
adc
loope
mov
es
sbb
jno
std
jmp
cmp
popf
cld
sbb
lods
lods
adc
insb
xor
lret
loope
test
xor
pop
jle
pushf
mov
shll
std
scas
faddl
mov
sbb
inc
mov
mov
mov
lock
xchg
ret
jp
mov
out
or
jmp
daa
imul
cmc
sbb
mov
aam
cltd
push
aas
pop
hlt
adc
sbbl
xor
fs
push
es
orb
jp
add
pop
pusha
xchg
mov
xchg
sbb
xchg
add
xchg
pusha
aas
xchg
sbb
add
xchg
les
mov
scas
mov
fidivl
aaa
push
lcall
mov
mov
cmp
lods
mov
xchg
adc
add
into
xor
int3
xchg
or
add
xor
adc
dec
jb
pop
or
sub
jg
mov
pusha
scas
xor
icebp
outsl
sahf
hlt
cs
mov
push
lret
fwait
mov
mov
add
in
test
fisubrs
jbe
dec
sub
gs
stc
xor
mov
or
xor
xor
aas
pop
sbb
xchg
mov
aam
lods
setge
mov
loopne
push
cltd
push
xor
cmp
lods
arpl
out
hlt
fdiv
lock
inc
cli
loop
and
mov
pop
and
data16
insb
sahf
aam
in
rcrl
xchg
adc
shrl
jo
mov
cmp
pop
jo
into
or
mov
cmp
ret
test
into
or
scas
cmp
cli
mov
pop
scas
scas
adc
cs
jns
mov
sub
sahf
aad
fcomip
leave
and
je
pop
mov
pop
cs
mov
pop
jp
repz
cmpsl
fwait
cmp
mov
data16
inc
sahf
pop
sbb
jecxz
dec
loop
jmp
test
push
sbb
jg
xchg
out
jnp
loopne
ds
mov
and
xor
cmc
xor
iret
sub
sub
add
ja
cs
sub
into
jns
inc
int3
mov
out
and
stc
stos
sbb
pop
mov
xor
pop
int3
push
aas
loope
popa
xchg
pop
fadds
addr16
rorl
roll
xchg
mov
out
pop
mov
sub
in
ficomps
aam
or
cmp
or
xchg
mov
movsb
and
fcoms
jb
push
movsl
inc
repz
jp
bound
sar
shlb
imull
fsubp
lods
movsb
ds
xchg
movsl
es
cmc
mov
mov
subb
pop
mov
xor
xor
jmp
cwtl
or
test
mov
loope
in
imul
jns
jbe
test
push
xchg
xchg
jg
sbb
xchg
rolb
jbe
adc
push
lds
sbb
push
push
into
inc
in
add
mov
ljmp
stos
and
ret
sahf
jnp
jno
sub
add
out
pop
fldl
jmp
ss
adc
sbb
adc
dec
xchg
push
xchg
pop
dec
arpl
sbb
and
jmp
std
aaa
gs
test
repnz
into
mov
push
dec
or
mov
mov
daa
inc
mov
sti
ljmp
mov
in
xchg
gs
daa
rorb
mov
cmp
xor
mov
or
adc
js
jno
inc
pop
in
popf
sub
clc
inc
adc
sub
stos
adc
add
mov
jecxz
inc
push
mov
insb
lds
xlat
dec
mov
cmp
mov
jecxz
sub
popa
jmp
loopne
outsl
cltd
add
inc
je
icebp
add
shrb
fidivrs
sbb
sbb
scas
shrl
insl
dec
push
xchg
push
testl
xchg
xchg
mov
movsl
sub
jo
shl
filds
in
test
mov
aaa
pushf
fdivrp
dec
mov
add
xchg
cmp
or
mov
int3
aaa
mov
cmc
xchg
test
add
mov
jo
addb
roll
xchg
repnz
xchg
mov
push
cmp
and
xchg
or
movsl
xchg
ljmp
xchg
in
int3
cmp
mov
inc
dec
in
add
jno
nop
inc
fcoms
cld
sub
scas
jo
pop
push
cmpsb
ljmp
or
adc
xchg
jne
cwtl
mov
sbb
mov
jg
std
lret
jns
hlt
loopne
sti
imul
sub
lcall
mov
mov
push
xor
xor
ror
popa
push
lock
lods
stos
sbb
ret
jne
subb
in
jmp
pop
gs
aam
je
aas
ds
inc
aam
ret
or
jno
sub
jno
sub
outsb
cwtl
inc
xchg
cltd
sub
leave
mov
cmpsl
test
call
int3
sub
icebp
addb
test
sbb
xchg
outsb
pop
xor
mov
je
daa
mov
jne
jl
jne,pn
adc
leave
negb
mov
jg
gs
jbe
pop
and
or
ficoms
inc
xlat
in
sub
mov
adcl
push
mov
movsb
pop
add
pop
inc
aas
xchg
pushf
and
add
inc
call
js
xchg
jg
in
loope
lahf
lahf
in
inc
cmp
movsl
mov
das
insb
sti
aam
xchg
mov
xor
out
or
stos
and
cmpl
xchg
adc
ffreep
lahf
mov
out
aam
lods
inc
xchg
popa
pushl
inc
dec
xor
mov
and
mov
call
cmp
sub
add
fcmovnu
iret
pop
inc
ffreep
fcmovne
out
std
push
mov
or
jl
mov
ja
ljmp
xchg
fadds
cs
xor
cwtl
int3
je
nop
mov
xchg
xor
mov
outsb
mov
mov
in
fwait
mov
bound
jmp
repnz
nop
mov
cmp
dec
mov
test
adc
cmp
xlat
imul
gs
pop
jmp
push
ds
add
xchg
xlat
pop
xchg
or
pop
shll
insl
sub
dec
jb
jnp
hlt
in
cmpsb
movsb
sbb
int
sub
lock
fmuls
mov
mov
sti
jl
sahf
addr16
sub
out
add
imul
testl
inc
cmpl
mov
test
push
rcrb
pop
lock
mov
adc
sbb
sbb
inc
jecxz
loope
iret
into
jb
pop
adc
pushf
sbb
inc
jne
mov
sbb
imul
and
arpl
adc
mov
in
sub
shlb
mov
inc
cwtl
cmc
pusha
popa
xlat
sbb
inc
or
cmpsl
cs
or
sub
xor
arpl
cmp
out
and
das
jl
push
xchg
aam
aas
mov
clc
mov
stos
mov
cli
in
fldcw
test
dec
cmpsl
push
jmp
dec
daa
mov
dec
clts
xor
pop
xchg
pop
les
sub
stos
fmul
push
negb
mov
dec
jmp
cmpsb
test
ja
test
mov
add
popf
cmp
xchg
mov
sub
aam
fadds
cs
sahf
lock
jnp
sub
inc
pop
push
lds
add
test
dec
sub
push
or
mov
dec
rorb
std
repz
adc
sbb
enter
inc
mov
mov
pop
pop
pop
clc
adc
lods
sti
add
aas
imul
push
and
subl
mov
xor
mov
sub
movsl
push
inc
mov
and
jne
mov
push
sub
insb
push
scas
xchg
mov
fildll
icebp
sub
pop
aad
xchg
sti
sbb
es
aaa
mov
repnz
mov
inc
sub
xchg
imul
xchg
jecxz
sub
xor
cmp
addl
ljmp
arpl
loop
add
pop
rcrl
lods
adc
lods
mov
xchg
mov
jmp
add
sbb
push
add
lcall
push
out
testl
sti
push
fstl
xchg
rolb
cs
outsb
rclb
push
adc
cmpb
mov
push
and
xor
sbb
push
shrl
and
es
xor
imul
ror
mov
fidivrl
or
add
rcrl
outsl
mov
mov
leave
push
mov
mov
and
rolb
loopne
add
out
inc
inc
pop
shll
xlat
fs
lcall
int
fwait
test
insb
leave
push
xchg
add
fnstsw
unpcklps
jo
in
fdivl
mov
sub
pushf
mov
int
cmp
aad
in
aas
stos
push
mov
das
inc
mov
sub
cmpb
movsl
test
test
push
xlat
and
stos
repnz
pop
or
and
pop
jmp
ss
aad
fwait
movl
mov
addr16
xchg
scas
pop
rclb
mov
aad
mov
stos
dec
dec
insl
lahf
test
pop
hlt
jae
sbb
push
int
jmp
push
loopne
and
sub
cmp
mov
xor
lds
sub
pushf
aam
xor
int
jns
push
jp
lods
dec
jbe
movntq
out
repnz
into
out
adc
pop
std
std
jb
mov
adc
sarb
or
push
mov
das
imul
pop
popa
xor
inc
jg
test
push
and
lcall
xchg
cmc
out
cmpsl
push
rcrb
and
ljmpw
mov
ret
movd
std
pop
xchg
and
jge
movsb
movsb
sub
pushf
fbstp
xchg
test
sbb
xchg
jno
adc
das
sarl
out
jge
stc
dec
mov
out
pop
sub
adc
je
inc
addb
out
xchg
mov
fwait
adc
cltd
push
mov
jg
sbb
test
test
inc
in
mov
out
cltd
aaa
das
xchg
ss
sub
xchg
xor
jb
loope
jle
mov
dec
jns
fidivrl
sbb
or
mov
sbb
cld
hlt
jecxz
cmp
mov
jnp
sbb
stos
pop
cltd
adc
pop
mov
cli
loop,pn
cmp
add
lret
sbb
es
cld
mov
loope
stos
jg
xorl
js
and
jmp
lcall
dec
push
inc
inc
aam
cmp
push
push
dec
fldt
in
xchg
incl
test
es
push
inc
cli
xchg
jmp
jnp
mov
fistpl
ja
imul
push
cltd
data16
and
xor
jl
or
lcall
ret
dec
push
mov
pop
cmpsb
dec
push
test
repz
xor
fsubs
sti
xchg
push
es
sub
in
aad
test
mov
push
test
xchg
mov
das
jmp
ds
aam
ljmp
mov
les
add
dec
scas
nop
inc
push
dec
lcall
test
clc
sbbl
sbbb
push
fisttpll
push
ja
add
inc
bound
sahf
fistl
pop
jge
cmp
call
push
xor
xchg
push
pushf
fsubrl
and
mov
xlat
aaa
jne
dec
ficoml
cmp
pop
subb
push
cltd
sti
into
out
push
cmpsl
insb
or
iret
fstps
and
mov
or
ret
int3
sbb
adc
rol
mov
jno
in
or
add
pop
xchg
and
push
sbb
push
sbb
sub
jo
in
or
cli
jae
cmp
lfs
xchg
rorl
add
js
loop
mov
aam
mov
jno
xor
and
push
in
add
loop
xor
mov
mov
lods
out
pop
rcrb
mov
addb
cmpsl
lds
sub
subl
mov
sub
arpl
enter
push
lahf
pop
out
iret
and
push
out
mov
in
or
fisubrl
push
push
push
fbld
fdivr
repnz
xor
xchg
and
out
movsb
mov
mov
cwtl
das
in
and
xor
leave
push
lds
mov
stos
adc
pusha
pop
pop
fwait
add
scas
pop
notb
je
lea
mov
insl
add
inc
ret
outsl
jmp
movsb
pop
dec
pop
imul
daa
inc
dec
cmpsb
cmp
xor
cld
ret
pop
loop
stos
jo
pop
and
inc
sub
bound
cltd
add
dec
or
push
clc
mov
push
mov
push
pop
sarl
xor
or
xchg
and
lcall
inc
mov
mov
lods
push
xchg
pushf
mov
popa
adc
cli
ss
out
shr
pop
fcom
pop
sub
mov
inc
clc
movsl
jae
arpl
jmp
in
jge
mov
out
arpl
int
cmpsb
es
and
stos
mov
xchg
xor
pusha
push
lods
ficoml
mov
les
pop
insb
das
fldl2t
je
rcrl
add
inc
jae
push
push
mov
pop
pusha
sbb
insl
fisubl
int
idivl
imul
sbb
fidivl
mov
mov
in
rcrl
iret
xchg
inc
daa
jb
mov
mov
or
inc
lcall
lahf
cmc
into
or
rcll
sub
leave
inc
out
shl
sub
daa
test
mov
xchg
adc
inc
xchg
fsubs
out
int3
leave
stos
jne
es
xchg
push
psubsb
sahf
mov
int3
xchg
movsb
das
aad
adc
leave
jns
scas
insl
int3
loopne
popa
call
test
mov
dec
jp
gs
lea
bound
xchg
adc
mov
stos
aad
cmp
or
mov
adc
out
arpl
sub
je
jg
cmp
mov
repnz
out
dec
jmp
arpl
pop
push
xor
and
lods
mov
cmp
jns,pt
sbb
mov
fbstp
inc
mov
orb
hlt
xor
lea
xor
pop
pushf
adc
push
nop
lea
mov
xchg
clc
jno
push
sbb
pop
push
mov
fiadds
cwtl
pop
inc
nop
sbb
mov
lcall
push
out
cmp
int3
mov
xchg
jge
mov
hlt
std
js
mov
mov
movsb
push
daa
or
sti
xchg
xchg
movsb
push
or
fnstenv
in
pop
cwtl
dec
jnp
push
inc
adc
and
xor
xor
inc
insl
ss
out
movsb
cmp
sbb
jnp
or
fs
jae
adc
adc
inc
dec
sub
xor
xchg
addr16
jmp
pusha
insl
mov
fs
cs
repz
push
int
push
adc
jg
sbb
push
ds
sti
fs
jns
mov
sub
jmp
lret
sbb
fsts
sti
dec
sub
push
cmp
mov
sub
lcall
sub
push
rolb
int3
jge
lahf
dec
cmp
mov
sub
clc
out
ror
mov
add
mov
loope
ret
push
je,pt
outsb
or
xchg
in
push
jecxz
into
jge
sti
sbbl
scas
bound
or
jbe
mov
pop
pop
sbb
in
aas
adc
in
movsb
scas
sti
loop
add
xchg
add
divps
fwait
xchg
test
gs
pop
fdiv
gs
test
lret
fsubrl
mov
les
mov
je
into
mov
xor
adc
add
lock
lods
in
push
enter
addr16
and
mov
into
inc
push
mov
mov
js
dec
sahf
pop
or
test
ret
mov
dec
inc
sub
pop
sarb
mov
test
or
or
in
pop
mov
mov
xchg
stos
out
dec
and
addb
shl
xor
jl
mov
add
ret
mulb
mov
sbb
popa
aaa
mov
fwait
mov
out
push
shrb
xlat
cmpsb
push
dec
push
test
jcxz
inc
inc
push
in
sbb
jmp
arpl
mov
std
xor
scas
jbe
ja
push
xchg
filds
xchg
aas
aam
lea
mov
add
in
xorb
add
pop
fstl
shlb
aaa
ret
pop
and
mov
dec
dec
nop
xchg
inc
daa
cli
into
lcall
push
pop
xchg
lahf
mov
cs
std
test
daa
xchg
jbe
mov
add
fnstcw
lds
movb
jo
pop
scas
push
mov
pushf
inc
fdivl
mov
mov
mov
cli
sbb
inc
xchg
push
ret
cmc
pop
shlb
xchg
fldcw
inc
filds
ds
loopne
add
pop
pop
mov
ja
ret
lds
mov
mov
call
mov
jge
xchg
fsubrs
inc
cmpsl
int
inc
loop
cmp
xor
out
loop
or
mov
push
and
jo
push
lret
push
and
pop
pushf
shl
mov
sbb
jecxz
cmp
push
mov
outsb
fnstcw
repnz
imul
out
sub
and
mov
mov
or
clc
enter
in
mov
jg
pop
sub
jo
cmp
pop
fscale
fcomp
lods
cs
pop
scas
cltd
subl
add
in
cmp
mov
xor
jnp
push
mov
add
add
lds
pop
push
mov
sub
inc
push
jb
pop
addr16
mov
lods
in
cltd
jns
popa
lea
fisubs
lock
sarb
enter
test
push
out
sbb
aas
sub
mov
push
jecxz
adc
and
jno
xchg
addl
inc
fisubs
neg
dec
or
addr16
insb
xchg
scas
cltd
push
sub
int3
mov
lods
jno
add
xchg
jno
sub
jno
aad
xchg
dec
xchg
shrb
outsb
popf
mov
fcmovb
jae
inc
loop
xchg
push
xchg
mov
add
es
stos
test
outsb
adc
pop
lds
icebp
fdiv
pop
push
mov
pop
inc
dec
movsl
pop
insl
adc
pop
push
cwtl
lock
jecxz
push
push
insl
pop
ss
push
dec
mov
mov
xchg
inc
inc
mov
dec
scas
es
xchg
arpl
push
fldl
test
lahf
adc
add
add
nop
sub
ret
arpl
xor
mov
aam
cwtl
mov
ss
adc
or
xor
outsl
lds
cmpsl
dec
ja
sbb
add
repnz
pop
sbb
push
dec
add
add
mov
pop
mov
jns
fsubrs
jmp
shrl
shl
fwait
sub
shrb
xchg
insb
arpl
sub
jns
and
push
aad
loopne
jne
test
imul
in
jne
bnd
add
jne
addr16
xchg
add
push
add
lcall
ja
jp
add
lds
int3
push
sarl
mov
pop
es
mov
cmpsl
or
dec
mov
nop
xchg
imul
mov
outsb
lea
mov
mov
outsb
test
imul
lea
and
cmp
push
cmpsl
xchg
nop
stos
inc
addl
jbe
adc
xor
sub
rorb
jle,pn
or
adc
sbb
add
mov
loop
aam
insb
aas
sub
mov
sub
xchg
mov
pop
mov
xor
mov
sti
jnp
icebp
out
roll
adc
xchg
repz
xchg
cmp
clc
vpmaxub
push
pop
mov
adc
inc
insl
adc
test
repnz
leave
aas
cmp
mov
loopne
push
hlt
mov
cs
lahf
inc
scas
shrb
mov
movsl
pop
ljmp
mov
loopne
es
mov
gs
repz
xor
fildll
outsb
dec
adc
in
lock
dec
es
pop
cmp
sbb
in
sbb
sub
ret
es
pop
pop
add
loopne
pop
adc
push
inc
add
in
fsubrs
push
mov
andl
cmp
push
jb
or
xor
outsl
in
push
mov
mov
sub
movsl
addr16
andb
mov
inc
les
bound
add
inc
jg
insb
shll
ret
push
sbb
inc
cmp
out
sbb
xor
or
push
inc
loopne
fstpt
push
inc
fnsave
mov
push
rolb
test
jbe
repnz
add
xor
aad
movsl
insb
sub
decl
cwtl
mov
cli
dec
dec
sbb
cmp
cmp
ja
pop
mov
pop
ja
adc
addl
jl
dec
lea
and
ret
sbbl
leave
std
jns
rolb
xlat
test
cld
movsb
pushf
add
inc
push
loope
scas
dec
mov
lods
ret
stc
adc
cmp
repz
loope
lods
std
pop
mov
pop
inc
in
inc
pop
xchg
lods
and
xor
addr16
mov
aaa
dec
outsl
pop
mov
add
xor
lods
push
add
sbb
je
loopne
mov
out
daa
lods
mov
xor
mov
jb
out
cwtl
ljmp
sti
cmp
sbb
add
loope
and
fnstenv
jae
inc
fmulp
nop
sub
or
fiadds
bound
daa
jmp
add
dec
cmp
orl
inc
pushf
cmp
enter
or
fmuls
adc
lods
jg
pusha
call
mov
int3
and
sahf
aas
movups
pop
cltd
dec
out
push
adc
and
gs
loope
arpl
hlt
sub
ret
jge
js
cmp
xor
push
and
in
inc
mov
xchg
movsb
or
add
imull
sub
dec
jp
mov
mov
dec
out
sbb
sti
gs
lea
add
imul
int3
cld
decl
fcomi
push
mov
adc
aad
in
jne
xchg
add
repz
xlat
mov
mov
inc
call
movsb
mov
loop
inc
into
cmp
lcall
mov
test
je
lcall
sti
and
cltd
xlat
hlt
out
mov
fsubp
inc
inc
mov
les
pop
sub
mov
push
adc
mov
push
push
adc
loop
loopne
aam
repnz
shll
test
xchg
cmp
add
lsl
into
or
imul
clc
jle
int
clc
addl
lret
enter
dec
and
mov
or
dec
aas
jmp
iret
xchg
stc
ds
int
stos
rcll
ljmp
inc
sbb
and
fstps
push
movsl
xchg
cmpsb
lahf
test
test
and
add
mov
flds
fisttps
inc
pop
dec
or
mov
scas
sarl
push
lcall
orb
push
pop
add
or
push
pop
lods
lea
ja
inc
add
lds
jae
dec
out
test
mov
pop
add
mov
jnp
orb
arpl
jne
add
jnp
push
jecxz
ret
jp
pop
jle
decb
into
mov
fldl
jmp
ror
fisttps
scas
imul
clc
adc
int
add
mov
fadds
lret
movsb
ja
enter
in
cmc
dec
cltd
imul
ja
mov
arpl
lods
pop
dec
mov
in
ja
fprem1
faddp
les
stc
popa
or
test
dec
jle
cmp
popf
jo
push
mov
fisubrs
pop
xchg
dec
div
add
xorl
ret
push
dec
loope
xor
arpl
bound
and
sbb
js
rcl
mov
adc
pop
dec
lret
add
jle
loope
xchg
xlat
cmp
pop
mov
fwait
or
cmpsl
movsl
xchg
loopne
cltd
add
sub
popf
mov
lcall
test
sub
jbe
pop
dec
iret
add
popf
xor
mov
xchg
jae
xchg
orl
lret
pop
divb
sarb
push
cmp
rcrb
packsswb
cmp
jae
push
mov
fbld
or
sub
xor
out
mov
and
adc
xor
xor
repz
inc
ja
scas
dec
push
lahf
cwtl
pop
jp
ja
mov
dec
loop
inc
daa
jmp
lock
xor
ss
pop
loope
test
adc
ss
jp
out
add
jmp
dec
js
lahf
icebp
push
mov
dec
jns
popf
pusha
out
xor
les
mov
ror
jns
mov
cmp
inc
leave
add
mov
push
cli
loopne
cld
mov
jno
sub
push
adc
je
cmpsl
lcall
jo
and
cmp
pop
or
push
pop
pop
cmp
ljmp
aam
inc
or
lea
or
jecxz
outsl
loope
pop
js
cmp
inc
adc
mov
sbb
xchg
mov
jmp
mov
movsb
push
xchg
adc
in
movsl
pop
ret
sbb
jge
aam
add
popa
xor
adc
jmp
idivb
popf
jp
push
aad
push
stc
fldl2t
push
dec
push
fildll
outsb
popa
jno
das
sub
mov
xchg
imulb
jno
stc
andl
mov
add
ljmp
dec
sbb
gs
add
mov
mov
adc
dec
pop
jecxz
test
arpl
imul
rorl
arpl
xchg
fldl
cmp
inc
outsl
loope
jp
shll
std
push
mov
adc
lret
jns
and
dec
xchg
and
imul
test
sub
xchg
shll
cmp
xchg
or
xchg
fwait
jnp
fstpt
sub
xchg
test
jg
or
pop
mov
push
sub
outsb
cwtl
dec
js
inc
jecxz
bswap
cmc
and
xlat
and
cmp
add
popf
xchg
mov
adc
cmp
inc
or
lods
push
push
inc
pop
mov
jecxz
sub
and
fldl
stos
mov
sahf
or
fsubr
lock
xor
xor
adc
aaa
pusha
rolb
in
popf
pop
mov
sub
cld
sbb
pop
sti
and
adc
or
inc
sbbl
hlt
dec
ficompl
or
neg
jmp
pop
subb
insb
mov
lret
xor
jmp
xor
inc
xlat
ret
hlt
sbb
test
sub
scas
loope
sbb
adc
cmp
cltd
sbb
loop
lcall
les
and
repz
push
clc
adc
pop
xchg
inc
rdtsc
jge
pushf
adc
mov
lcall
icebp
fmull
mov
mov
aad
ljmp
jnp
jecxz
mov
ss
sbb
in
dec
in
rcll
aaa
negl
cwtl
inc
xlat
pop
push
inc
jno
mov
mov
sub
pop
gs
out
push
lret
mov
add
push
mov
or
jmp
in
pop
lds
outsl
mov
jb
jno
jne
pop
push
add
xchg
dec
jns
pop
mov
and
or
mov
fmul
jne
fs
insb
dec
out
mov
lods
ror
js
scas
shrl
sbb
jnp
ds
add
lock
pop
mov
mov
subl
orb
xor
adc
jl
jge
adc
insb
xchg
movsb
xlat
dec
outsl
gs
pushf
adc
cwtl
mov
shlb
nop
lods
iret
ret
xchg
or
adcl
push
pop
lret
push
cs
jne
jg
das
xchg
or
sbb
jl
js
decl
loopne
cld
dec
andb
out
shrl
sbb
loop
ret
cmp
fwait
push
mov
xor
andb
hlt
xor
in
in
fildll
aad
xchg
pop
inc
stc
int
add
mov
xchg
pop
mov
xchg
or
xlat
dec
aas
adc
and
int3
sub
outsb
xlat
int
dec
xor
or
push
jo
xor
push
fisttpll
stc
push
jmp
cmp
adc
scas
loopne
and
js
mov
ret
dec
xchg
xchg
mov
jecxz
dec
stc
fsub
xorb
mov
gs
ret
cmpsl
cmp
adc
mov
add
or
xchg
jns
loope
xchg
adc
lret
aam
fiaddl
mov
pop
dec
leave
lods
jae
xchg
sbb
and
mov
into
inc
outsb
dec
lahf
arpl
imul
mov
stc
lea
lods
mov
sub
mov
xor
and
cmp
adcb
cmp
sub
setae
idivl
mov
fstl
fstl
sub
mov
dec
ja
fdivs
sbbl
lods
test
cmp
adc
push
sbb
push
pop
add
pop
aad
cmpsl
cmp
mov
dec
mov
or
test
pop
mov
jne
xchg
xchg
and
mov
pop
add
add
lcall
stc
dec
adc
ds
pushf
data16
repz
push
cmpsb
data16
push
pop
movsl
lods
mov
int3
repz
clc
rorl
jb
xor
push
pop
loope
out
mov
jge
fistpl
cwtl
pop
pop
std
das
shrb
loope
push
and
daa
mov
fwait
testl
push
int3
push
lods
movsl
cmp
pop
sbb
imul
ret
inc
hlt
popf
scas
jb
inc
cmp
mov
push
sbb
movsb
sbb
ss
mov
loop
daa
lods
mov
outsl
sbb
jno
push
mov
repz
xchg
or
mov
xchg
sub
stos
test
push
lret
fs
fadds
mov
mov
cmp
push
fwait
and
mov
push
mov
aaa
xchg
xor
cmp
push
ja
lods
ret
lods
data16
mov
in
xchg
cld
nop
lods
dec
mov
insb
cmp
nop
add
mov
daa
mov
idivb
std
jnp
xor
aaa
mov
xchg
out
or
ds
adc
mov
divl
xchg
std
dec
push
add
mov
iret
jne
dec
jbe
push
xor
mov
rcr
cmpb
loop
jo
pop
mov
mov
in
xchg
out
insl
sbb
or
adc
lahf
imulb
xor
pop
aaa
stos
je
fsubrs
andb
cltd
out
mov
fdiv
push
or
shl
jle
js
inc
xchg
mov
aaa
in
adc
cmp
cmp
jp
in
adc
add
cmpsl
aad
jmp
loop
inc
add
test
std
sarl
dec
cmpb
into
pop
lods
push
pop
xchg
dec
and
adc
and
loope
xchg
divb
dec
mov
xchg
stos
cmp
pop
dec
jmp
mov
pop
lods
stos
ja
adcl
push
inc
dec
mov
lcall
mov
int
pop
mov
addr16
pop
test
cwtl
mov
mov
push
xor
adcl
mov
mov
push
negl
shrl
leave
xchg
pop
sbb
mov
je
es
into
fwait
scas
cwtl
shll
imul
into
std
sbb
cmp
rclb
inc
pushf
push
mov
or
sub
aaa
les
mov
das
cmpsb
xchg
sarb
push
xchg
add
ret
ds
push
or
mov
jnp
mov
int3
fnstsw
int
bound
je
cwtl
enter
push
je
les
pop
xor
inc
ret
adc
cmp
cmpsl
sub
rolb
or
cmc
or
cmp
xchg
xchg
out
mov
mov
jno
ret
das
fldt
adc
enter
push
dec
cli
sbb
jl
and
lret
inc
push
notb
test
fsubrl
orl
jecxz
sti
and
lea
mov
dec
dec
cs
sbb
js
push
adc
mov
fs
dec
lcall
into
leave
xchg
arpl
lahf
xor
test
ljmp
enter
pop
inc
and
push
jo
lods
gs
fst
test
pushf
cwtl
sahf
stc
sahf
inc
cmp
mov
mov
daa
jmp
dec
xor
jmp
cmp
jmp
or
push
fsubp
cmc
dec
lock
mov
shll
jg
xchg
xchg
xor
and
imulb
addb
sbb
arpl
ja
bnd
hlt
pop
call
outsb
in
inc
iret
sub
push
out
cmp
jno
sahf
fwait
lcall
add
call
or
das
mov
add
loope
movsl
icebp
mov
push
scas
sti
or
popa
dec
addr16
fmuls
test
cwtl
sub
adc
lock
push
js
jmp
inc
pop
lahf
ret
int3
add
xlat
movsl
mov
pop
xlat
mov
xchg
outsb
adc
mov
add
shll
pop
xchg
js
inc
je
push
movsb
jnp
lods
pop
push
dec
mov
out
enter
pusha
xchg
adc
push
xchg
dec
shr
xchg
mov
mov
jo
popa
loop
or
pop
sbb
stos
mov
xor
xor
xor
pop
hlt
mov
push
push
cs
fadds
jecxz
mov
inc
movsl
fsubrs
pop
fsubrl
dec
pop
mov
aaa
ffreep
adc
dec
ret
in
shrl
lods
pop
mov
push
repz
insl
and
out
push
fs
or
add
les
ds
fnsave
xor
jle
mov
adc
out
cmpsl
xchg
cmp
test
and
push
scas
add
bnd
mov
pop
bound
push
pushf
loop
or
enter
xlat
and
cmpsl
jbe
sub
xchg
jno
aaa
insb
cmc
andl
fistps
hlt
aas
shrb
dec
sub
out
mov
std
cmpsb
repnz
rorb
jge
repnz
adc
cltd
pop
decl
xlat
mov
test
data16
mov
aas
inc
icebp
xor
scas
sub
test
jo
xor
loop
jge
sbbl
pop
add
mov
sbb
das
jl
add
mov
fistpll
lods
xchg
add
movsl
ljmp
mov
push
ljmp
pshufw
aaa
loope
sub
add
test
mov
or
notl
dec
cltd
icebp
stos
leave
js
hlt
mov
dec
popa
jmp
jne
inc
mov
cmp
adc
aad
fnstsw
push
dec
pop
lret
push
iret
mov
and
fdivrs
addb
cmp
xorb
dec
sahf
insb
adc
mov
xor
dec
fucomip
bound
fistpll
jb
mov
pusha
sub
xchg
stc
shlb
mov
xchg
in
dec
mov
insb
or
inc
imul
push
outsb
call
imul
int
int
fwait
xchg
xchg
or
pop
xor
push
adc
push
pop
clc
jne
lret
jge
das
mov
jb
in
pop
xchg
mov
dec
mov
push
cmp
jnp
push
lods
ret
mov
iret
fidivrs
pop
jge
push
add
mov
rcrb
xchg
mov
in
cli
xor
jg
shlb
imul
cmp
push
test
test
jmp
bound
mov
xor
push
push
ja
stos
mov
nop
sub
scas
les
mov
daa
push
push
fs
sub
ljmp
push
push
and
ja
andl
inc
ret
fisubrl
es
in
fs
push
pop
pop
clc
cwtl
sbb
xchg
test
xchg
jle
xchg
fimuls
xor
test
push
xchg
adcl
cmc
sbb
subb
lods
test
pop
in
loopne
loope
or
je
dec
sahf
sbb
pop
imul
insl
dec
add
fcomi
sbb
shrb
roll
inc
movsl
scas
shrb
ss
inc
mov
mov
in
and
les
xor
fcompl
adc
mov
rcll
mov
cwtl
ss
lret
push
push
mov
loope
xchg
stc
cs
daa
gs
leave
or
jmp
and
int
sub
aam
addr16
imul
dec
insb
loope
pop
mov
mov
mov
jp
mov
fstl
mov
fdivp
pop
adc
inc
pusha
jo
add
repnz
add
sahf
or
andb
orl
inc
movsl
fimuls
mov
add
sub
xchg
neg
loop
lock
mov
adc
inc
and
int3
xor
fidivrl
xchg
sbb
mov
in
test
lds
leave
push
cmovbe
test
cmpsl
hlt
loope
mov
xor
repnz
fdiv
mov
test
popf
into
add
push
pop
loop
jne
ss
fsts
or
in
scas
ret
pop
stc
adc
test
fidivrl
repz
ja
shlb
jecxz
push
pop
cltd
and
push
or
adcl
mov
fdivrl
cmp
mov
popl
and
icebp
ficoms
and
ja
sbb
push
push
call
sub
cltd
call
xchg
repnz
push
imul
add
test
jb
xor
hlt
adc
out
adc
loopne
out
mov
xchg
jae
aad
daa
stos
das
mov
adc
cmp
xor
add
jno
mov
popf
pusha
lret
stos
mov
sub
xchg
movsl
ljmp
stc
or
xor
xor
lock
ds
mov
ret
outsb
adc
out
mov
outsb
fsubrl
mov
sub
sbb
xor
rcrb
mov
stos
pop
sbb
loopne
cmp
sbb
mov
cld
lds
je
outsb
stc
xor
repz
addr16
cmc
nop
int3
imul
add
fiaddl
call
fisttpl
mov
jbe
stos
xor
ljmp
aaa
in
and
jle
pop
or
daa
stos
out
xor
pop
dec
mov
fistpll
jmp
rcll
mov
daa
mov
xor
in
mov
shll
cmp
adc
sti
cmp
sbb
mov
cli
movsl
pop
bound
mov
push
xor
pop
sub
in
sahf
cltd
sar
sbb
mov
insb
push
sbb
addr16
or
jnp
xor
sub
push
jge
jge
mov
mov
imul
inc
hlt
adc
pusha
loope
jle
and
outsl
fisubrs
push
pop
xchg
sbb
and
mov
jno
or
sahf
add
outsl
in
push
jne
pop
mov
stos
jae
sbb
aam
pop
pushf
sti
mov
mov
test
mov
add
jnp
lahf
ret
jbe
in
aas
enter
pop
pop
or
xor
cmp
cmc
mov
lahf
stos
cmp
lods
inc
loopne
imul
pop
xor
xchg
jns
cmpl
mov
inc
flds
xchg
daa
hlt
dec
add
cmp
mov
xchg
leave
pop
add
mov
pop
rclb
popf
push
mov
mov
add
outsb
clc
enter
sbb
dec
lods
mov
cmp
dec
pusha
lcall
ret
dec
mov
test
lods
daa
inc
push
adc
add
cli
inc
or
sub
cmpsb
adc
cmp
dec
lock
dec
in
scas
pop
push
lahf
in
xor
jae
daa
faddp
pop
fcmovne
icebp
mov
and
sbb
stc
xchg
xor
aas
inc
jne
repnz
mov
mov
shr
inc
sub
loope
sbb
mov
adc
int3
gs
sahf
sbb
ret
movsb
std
mov
pusha
jecxz
sbb
cmc
xchg
or
nop
pop
aad
dec
pop
sbb
sbb
cltd
push
jb
jmp
push
mov
or
nopl
orl
push
and
push
sbb
aas
sub
ret
mov
and
loope
fstpt
mov
arpl
in
lods
push
xchg
pop
das
out
adc
jmp
xchg
pop
sbb
loopne
rcll
xor
add
bound
test
in
lds
push
add
xor
adc
xor
mov
insl
xor
fcmovb
adc
push
xchg
jle
lock
adc
popa
mov
adc
jecxz
pop
xorl
fwait
xchg
fcomp
fwait
ljmp
inc
mov
pusha
out
into
outsb
mov
dec
push
push
dec
iret
daa
loopne
adc
fcmovbe
mov
dec
popf
int
jle
rcrl
mov
aaa
bound
and
add
mov
nop
dec
lds
das
mov
pop
das
push
les
pop
xor
stos
inc
pop
adc
mov
into
mov
mov
cltd
mov
in
add
dec
mov
adc
sbb
cmc
outsl
xchg
inc
mov
xor
adc
xchg
adc
icebp
das
repnz
pusha
pop
out
dec
mov
mov
sbb
sbb
shll
je
int
je
mov
pushf
test
cli
pop
cmpsl
aad
jno
test
dec
testb
ds
push
nop
add
out
fcompl
test
or
rolb
and
xchg
fisttps
imulb
ret
pop
jge
mov
shll
dec
imul
cwtl
pop
xor
inc
mov
dec
push
jae
fwait
cmc
data16
lods
xchg
lods
push
inc
clc
mov
pusha
adc
jg
pushf
xchg
jge
ljmp
das
or
sahf
jae
mov
daa
lods
invd
mov
xor
mov
add
in
mov
in
stc
jmp
js
outsb
leave
pop
push
scas
in
dec
out
or
sub
insl
lret
cld
add
es
or
xchg
fsubr
add
adc
idivb
or
out
cs
jle
lods
loopne,pt
xchg
push
pop
or
xchg
push
dec
shlb
inc
push
sarl
sub
sub
fisubl
insb
adc
xor
ret
out
pop
fwait
sti
sub
xchg
mov
or
repnz
jbe
and
mov
jle
lret
loopne
jl
imul
fistl
sbb
pop
sub
inc
push
add
lods
jae
jmp
mov
xor
push
cmp
addr16
adc
cltd
mov
fwait
or
xlat
jg,pt
xchg
fs
lods
imulb
inc
repz
repz
jecxz
cld
cmp
jo
jno
or
scas
jmp
mov
fsubs
dec
push
call
pop
sbb
xchg
push
les
lret
aam
dec
xchg
mov
fldt
sbb
push
lret
pop
in
arpl
jmp
gs
adc
je
cltd
cmp
jnp
adc
mov
sub
repnz
inc
cmp
push
lcall
clc
pop
cmc
ficoms
js
movsl
mov
sbb
out
aas
and
stos
pop
out
hlt
aam
mov
pop
jnp
es
push
inc
add
addr16
xchg
mov
mov
pop
repz
ds
popf
out
in
rclb
mov
and
clc
xlat
mov
test
ret
mov
fs
xchg
inc
add
int3
mov
mov
mov
pop
mov
pop
push
repnz
enter
das
mov
lret
iret
push
sahf
push
push
add
scas
lahf
idivb
gs
lcall
mov
sbb
aaa
movsb
xor
sbbb
stos
mov
add
dec
lods
mov
xor
outsl
hlt
push
shl
stos
jg
gs
adcb
dec
mov
mov
pop
add
fistps
add
sti
loop
into
insb
and
fs
pop
mov
movsl
sub
into
push
cmp
pop
lret
pop
cmc
ds
fisttps
arpl
dec
sub
sbb
push
loope
stos
stos
jne
sub
aas
jecxz
cmpsl
out
pop
mov
stc
add
aam
insl
pop
pop
scas
push
push
inc
adc
call
push
sbb
repz
outsb
ret
mov
mov
pop
mov
mov
xchg
imul
scas
cmp
mov
sahf
xchg
insb
out
cltd
fisttps
jns
pusha
pop
lret
repz
enter
test
scas
outsl
cmp
jb
dec
jno
loope
mov
xor
mov
fildll
jge
fisttpl
and
cmpsb
and
jmp
lahf
xorl
shll
push
mov
jno
xor
repnz
xor
mov
jg
insl
sti
sbb
jecxz
adc
lods
pop
fiaddl
pop
xor
sbb
mov
inc
add
or
jno
jg
xchg
push
jae
loope
mov
ret
sub
mov
dec
or
cwtl
jecxz
shl
xor
arpl
inc
xchg
sub
and
arpl
adc
into
sbbb
loope
outsb
in
jge
cld
mov
sti
sub
push
pop
push
jecxz
fstl
mov
out
mov
and
lods
jge
and
cmp
xor
inc
xchg
fldl
sub
mov
xchg
and
mov
mov
jbe
in
notl
inc
std
xor
pop
fs
jno
jp
addr16
sub
sbb
inc
pop
pop
leave
cli
or
mov
cwtl
roll
dec
clc
lds
imul
loop
mov
jae
fmulp
fwait
or
out
psraw
movb
mov
mov
dec
pusha
int3
stc
popa
mov
mov
faddl
in
lods
cmp
rclb
repz
in
push
mov
xchg
pop
test
mov
mov
push
jae
xchg
loope
addr16
pop
and
inc
aad
add
fmull
cs
inc
mov
xchg
sub
out
into
out
inc
xchg
push
das
rorl
inc
in
jle
inc
cli
cs
in
push
inc
mov
mov
pop
and
dec
dec
pop
sbb
mov
outsb
push
and
lds
dec
xor
fists
jb
lods
mov
adc
push
addr16
mov
or
cld
sti
inc
push
repz
ja
lcall
fdivp
test
test
pop
clc
movsb
andb
sbb
stos
lcall
adc
add
leave
inc
push
sub
mov
sub
ljmp
out
rcr
xor
push
adc
out
dec
lret
dec
push
push
dec
push
mov
aas
xor
test
mov
pop
mov
fst
rclb
and
ljmp
mov
data16
in
pusha
lock
mov
inc
add
mov
scas
mov
add
popf
dec
dec
or
push
aaa
cmp
mov
and
addr16
cli
and
pop
jp
xor
cmp
cld
pop
cld
int3
enter
daa
xchg
sti
mov
lds
xlat
jg
lods
cmp
lahf
data16
and
out
xchg
insb
mov
adc
repz
jmp
outsl
stos
sti
cs
in
xchg
cmc
mov
adc
daa
sub
adc
xchg
pop
sub
mov
in
or
xchg
mov
jge
imul
inc
dec
adcl
jae
inc
inc
or
mov
clc
pop
push
mov
test
xchg
divb
lea
gs
inc
push
movsl
fisttpll
mov
stos
and
jl
or
dec
xor
pop
bound
ret
fwait
adc
cmp
pop
fdiv
out
jge
dec
xor
fsubrl
or
and
and
in
cmp
fstpt
dec
mov
and
sbb
add
les
stc
enter
jo
and
idivl
xlat
mov
roll
cmp
jbe
filds
mov
cmp
sbb
inc
inc
sbb
and
dec
in
dec
cmp
cmp
dec
movsl
gs
outsl
stos
es
lds
insb
mov
xor
fidivs
imul
push
xchg
lret
testb
cmp
fisubs
cmpl
cltd
out
sub
sub
push
leave
cmc
and
mov
repz
jne
sbb
jns
push
out
sarl
into
mov
add
in
mov
addl
sbb
or
mov
sbb
or
loop
cmp
push
mov
das
mov
imul
sbb
popa
push
xor
fwait
orb
mull
mov
in
rorb
lods
xorl
mov
cmpsl
in
addr16
inc
aad
add
icebp
pop
stos
cmpsl
mov
add
mov
push
into
test
inc
mov
add
mov
fnstenv
adc
fwait
dec
sub
xor
lahf
mov
dec
xlat
repz
xor
data16
imul
or
sbb
mov
inc
adc
adc
adc
clc
push
out
dec
xchg
test
xchg
add
or
das
adc
fldl
int
dec
add
sub
push
inc
cmpl
fmull
pop
cltd
jmp
jne
scas
jg
aad
add
xlat
jg
jmp
jns
test
and
ret
jp
mov
aam
icebp
push
mov
sarl
rorl
jns
pushl
in
fsts
nop
or
dec
xchg
sub
fwait
adc
pushf
cmp
rolb
mov
dec
imul
nop
nop
mov
push
sub
add
jns
xchg
xor
into
mov
mov
and
push
fdivl
fs
sbb
and
insl
sti
sub
enter
sbb
sti
sbb
mov
cmp
outsl
sahf
or
repnz
sbb
test
adc
mov
add
es
mov
jbe
inc
roll
xor
lcall
inc
push
and
cmp
cltd
jmp
sub
sub
mov
repz
pop
mov
cltd
jecxz
aam
pop
pushf
scas
call
insl
fldt
dec
mov
inc
int3
aas
mov
jne
mov
stos
hlt
rolb
xor
add
mov
mov
popa
jae
stos
pop
add
mov
shr
sub
jbe
in
lods
sbb
call
push
pop
fisttpl
inc
dec
adc
pop
push
push
scas
in
jo
push
ja
jg
out
loop
testl
dec
or
sbb
icebp
dec
add
xchg
gs
mov
sarb
push
cmpsb
mov
sbb
fwait
sbb
jmp
lea
cmpsl
adc
inc
xorb
lds
push
stc
cltd
ljmp
xor
dec
out
xor
dec
or
out
outsl
xchg
rolb
fsubp
pop
hlt
test
scas
nop
mov
call
mov
mov
sbb
add
popf
sahf
xchg
cmp
xor
ffreep
jno
roll
das
pop
outsl
push
pop
pop
outsb
xor
scas
add
jl
dec
xchg
ljmp
in
pop
mov
dec
in
rolb
dec
inc
inc
fadds
aam
mov
stc
cmp
and
jo
sbb
in
hlt
xor
or
icebp
fdiv
xchg
sbb
mov
mov
lret
loopne
push
xchg
xchg
dec
mov
test
lahf
addr16
lahf
fst
aam
cli
scas
hlt
lock
fnstenv
mov
and
ljmp
rclb
je
inc
test
adc
jbe
xchg
cwtl
dec
mov
test
shlb
mov
inc
cmc
pop
mov
fs
sbb
sbb
iret
clc
inc
mov
lock
std
sub
push
mov
clc
jg
inc
dec
cmp
adc
mov
sbb
add
imul
lcall
shrl
mov
xchg
int3
nop
enter
push
lea
dec
mov
push
sub
ret
outsb
xchg
repnz
test
pop
and
sub
inc
jae
dec
jns
lret
cmpsb
das
fs
es
lcall
stos
cmp
mov
push
flds
stos
imul
movsb
dec
clc
fs
pusha
fbstp
mov
xchg
pop
lea
nop
lock
dec
pop
push
es
mov
in
insl
xchg
inc
ret
adc
push
adc
cli
inc
icebp
fwait
dec
pop
mov
mov
and
lds
xlat
jp
push
in
das
ret
test
adc
mov
sbb
push
sub
lds
lret
sahf
jge
scas
dec
movsl
push
les
adc
mov
xor
data16
or
jmp
dec
mov
dec
xor
dec
mov
push
sub
cmpsl
jns
jl
xchg
pop
inc
cmp
subl
int3
lcall
enter
xchg
dec
ret
lret
ljmp
cmpsb
pop
fisttps
or
sahf
sub
es
and
nop
jo
stos
scas
int3
cmpb
repnz
pop
fs
jge
test
or
aam
mov
enter
mov
jle
and
in
pop
cmp
push
push
fidivs
int3
out
and
mov
faddl
stos
dec
lods
call
sbb
sar
int3
cwtl
lock
and
push
xchg
repz
adc
inc
decb
ret
repnz
cs
fninit
jb
jle
aad
sbb
pushf
inc
scas
mov
jo
adc
mov
inc
dec
fistpll
jns
dec
leave
xchg
mov
mulps
adc
jns
xchg
pop
or
sahf
adc
add
incb
loopne
xor
pusha
shl
xor
test
andb
ja
or
stos
xorl
inc
pop
mov
mov
sub
out
test
sub
call
xor
push
repnz
adc
xchg
jle
dec
imul
in
adc
loope
shrb
xor
mov
ja
jno
popf
inc
cmp
insb
xor
bound
shl
or
jg
hlt
incb
push
and
je
adc
xchg
lcall
dec
add
add
jl
xchg
and
push
lods
mov
jecxz
shll
pop
push
loop
stos
xchg
sub
cmp
sub
scas
pop
ds
mov
jmp
cwtl
adc
stc
stos
pop
xchg
int3
adc
cmc
lods
and
cmp
adc
loop
jecxz
dec
mov
pop
dec
dec
btsl
or
jmp
mov
aad
inc
jbe
mov
push
cmpl
movsb
dec
add
adc
jae
in
out
push
inc
and
pop
clc
test
fndisi(8087
and
inc
push
int
test
pop
scas
fstpt
aaa
xlat
nop
cmp
inc
test
lods
movsb
mov
dec
push
push
movsl
mov
sarl
push
add
xor
movsb
out
mov
inc
xor
outsl
jecxz
insw
imul
incb
pop
jecxz
in
or
call
test
jge
aam
std
imul
leave
cmpsl
push
js
lds
push
stc
sub
lcall
sub
jb
dec
push
push
pusha
mov
jne
xchg
sbb
repnz
push
arpl
sub
inc
jp
int3
adc
dec
push
pop
dec
in
and
popa
cli
dec
jmp
push
stos
icebp
mov
push
pop
adc
push
cmp
sub
mov
cs
repz
push
add
ljmp
fmull
or
cmp
enter
sbb
je
ja
stos
mov
jns
lahf
cld
or
sbb
js
pop
mov
inc
push
shrb
test
fwait
adc
sti
jb
repnz
fistl
xchg
ja
nop
inc
test
ss
adc
in
test
add
push
pop
les
push
scas
inc
jno
mov
mov
popa
xor
sbb
in
lea
jp
sub
adc
out
dec
push
pop
pop
std
sub
dec
mov
and
push
and
imul
add
mov
push
mov
stc
inc
mov
and
mov
aam
cmp
xlat
sahf
jns
push
aad
imul
ficompl
xlat
jmp
outsl
fcmovbe
sbb
add
xor
cltd
xor
cmp
cmp
xor
inc
cmp
or
fiadds
xor
inc
sbb
loope
cmp
add
shrl
and
orl
sahf
cmp
inc
mov
cmc
push
jle
mov
lahf
push
sbb
call
xchg
mov
jge
and
jno
pop
adc
mov
in
dec
enter
adc
and
outsl
jmp
into
fs
jno
enter
add
cmc
add
adc
push
stos
test
xchg
and
mov
les
dec
or
dec
or
xor
out
rclb
push
pop
mov
inc
je
lods
jmp
js
aas
push
jnp
jecxz
pop
nop
cmp
xchg
or
xchg
pop
jecxz
in
push
lret
shlb
lock
push
sbb
sub
fmul
or
dec
repz
push
xchg
ret
push
movsl
dec
pop
clc
pop
or
test
sbb
xchg
mov
in
add
jbe
pop
mov
xor
loop
movsl
stos
call
mov
xchg
push
ret
nop
cmp
fisubrs
mov
fsubp
or
jl
ljmp
xchg
out
icebp
es
popa
mov
out
cmpsb
decl
clc
sbb
and
pop
rolb
mov
or
ss
adc
pop
filds
add
mov
xor
sahf
rcrl
movsb
pop
pop
xor
cmpsl
lock
add
xor
and
jg
mov
cmpsb
jnp
sarb
cwtl
add
fldl2e
push
nop
and
mov
lahf
fcmovne
xchg
stc
mov
pop
jge
repnz
stos
faddl
inc
sbb
popa
mov
and
and
lahf
lods
xchg
sbb
stos
negb
push
test
mov
scas
imul
test
push
stos
mov
jns
mov
xchg
es
mov
mov
test
loopne
cmc
mov
arpl
xchg
cmpsl
pop
addl
sbb
add
xchg
jle
inc
imul
lea
push
in
adc
outsl
in
push
daa
fdivr
fisttps
popa
sbb
xchg
loope
int3
stc
push
jecxz
repz
mov
mov
in
into
shll
xchg
sbb
inc
and
dec
xor
sti
xor
sbb
or
mov
aas
mov
std
mov
inc
popa
out
pushf
mov
jl
gs
imul
push
sub
imull
push
in
inc
mov
cmp
pop
scas
int
bound
ja
adc
sbb
scas
pushfw
sub
idiv
imul
push
lods
pushf
add
ss
dec
jle
push
and
push
sarl
push
mov
loopne
xlat
insl
and
adc
pop
popf
or
sub
inc
pusha
into
cmp
push
cli
and
inc
sbb
xchg
int
cli
jns
cmp
pop
lcall
mov
xor
dec
mov
cmp
xor
push
sbb
stos
pusha
setge
mov
mov
mov
push
sarb
in
mov
or
into
push
dec
div
push
xchg
loope
mov
test
loopne
sarb
lds
test
pop
loopne
dec
cmp
mov
add
rcrl
je
loopne
push
inc
mov
insb
pop
inc
jb
cmp
jge
push
sbb
int3
out
call
inc
push
arpl
ror
xchg
dec
lds
inc
mov
lahf
shll
xchg
mov
mov
rclb
cmc
mov
int3
xchg
mov
inc
add
fadds
push
jns
lods
ret
lods
rorl
jb
sarl
mov
fadds
icebp
sub
jne
xchg
lock
in
and
pop
mov
xchg
sub
xchg
iret
out
aam
cld
push
jecxz
jmp
mov
ret
mov
xchg
xchg
shll
out
rcll
gs
mov
mov
inc
dec
mov
pop
cmp
or
mov
icebp
jp
gs
xor
add
imul
mov
jle
jno
aam
lcall
sahf
sub
enter
ljmp
aas
sub
repnz
sbb
cwtl
and
push
add
push
mov
loopne
lock
mov
in
sub
in
arpl
jle
lahf
inc
enter
sbb
mov
jns
adc
cltd
fstpt
insb
mov
sub
fs
imul
inc
inc
cmp
xor
xlat
scas
arpl
out
out
test
mov
and
pop
cmp
fsubrs
pop
inc
stos
or
dec
inc
mov
outsb
and
inc
mov
jne
in
dec
mov
xor
rcrb
push
jne
lahf
dec
in
movsb
fdivr
jne
inc
imul
js
cli
lods
vpmacsdql
inc
mov
clc
xchg
sub
lds
inc
lods
add
movsb
fcoml
sub
jbe
push
cmp
sbb
loop
sub
lret
icebp
mov
test
xorb
xchg
mov
repz
outsb
sahf
daa
scas
pop
repnz
orl
xor
lds
mov
mov
scas
jae
or
xor
inc
sbbl
mov
mov
cmp
xor
sub
aam
pop
cltd
xor
notl
imul
sbb
mov
aam
shrb
jbe
xchg
mov
and
aad
add
lock
push
into
xor
and
out
in
int
jmp
les
adc
and
out
leave
jecxz
jae
push
or
shll
iret
aam
repz
daa
xchg
das
push
icebp
mull
cltd
or
fwait
pop
das
mov
add
mov
pop
push
mov
adc
scas
out
fidivs
stc
push
push
mov
mov
dec
fcmovu
sbb
inc
sbb
cmp
jle
iret
stc
dec
enter
ret
cld
lcall
scas
aad
jo
or
xchg
mov
nop
movsb
gs
arpl
pop
testb
adc
aaa
push
ljmp
rcl
cmp
shr
enter
fsubrs
xlat
xchg
lock
sbb
in
outsb
adc
xchg
jl
xchg
inc
movsb
mov
mov
mov
js
repz
push
movsb
adc
mov
nop
xchg
outsl
lods
sub
sub
insl
out
imul
loopne
xor
repnz
push
push
iret
push
ds
imul
cmpsl
push
aaa
sti
pop
lcall
adc
popa
jne
fsubrl
jecxz
pop
or
mov
dec
leave
testb
test
arpl
sub
mov
in
cld
rcrb
push
sbb
movsb
mov
out
xlat
ret
and
neg
subl
xor
mov
adc
xchg
lods
lods
xor
dec
repz
arpl
test
jge
test
or
sub
jmp
mov
xlat
xchg
cmpsb
inc
repz
xor
rolb
das
mov
adcl
jb
rclb
adc
movsb
cmp
push
or
add
sub
mov
dec
mov
imul
sbb
out
cmp
xor
ds
lea
adc
in
test
shlb
or
pop
aas
mov
addr16
cmp
mov
dec
sub
scas
xor
jge
adc
pop
hlt
dec
inc
adcl
ds
call
jo
lret
adc
enter
push
push
in
rcrl
bound
push
inc
sub
jnp
rclb
mov
cmp
inc
imul
lret
in
dec
inc
sub
pslld
ret
repz
push
inc
xchg
out
in
jne
mov
imul
cmp
ret
add
fs
and
and
sub
insl
jecxz
xchg
test
fldt
les
push
xchg
xchg
loop
add
and
cmpsb
xchg
jmp
push
mov
push
das
div
cs
or
insb
outsl
decl
fisttpll
jge
arpl
fldt
call
mov
sub
mov
jmp
sub
fmulp
add
or
adc
mov
pop
es
movsb
fistpl
pop
lret
out
ret
notl
mov
mov
mov
mov
mov
pop
sti
dec
push
push
ss
push
dec
mov
cld
mov
mov
and
push
clc
icebp
push
or
adc
cmpsb
add
add
add
imul
rclb
mov
insb
dec
fldl
mov
push
lahf
pusha
pop
lret
jl
inc
loope
sbb
push
loopne
mov
sbb
add
mov
mov
jge
das
pop
push
jle
jno
pop
mov
hlt
xchg
jbe
and
aam
leave
add
repz
push
js
mov
std
or
sbbl
bound
add
in
jne
out
mov
stos
and
out
ret
int
cmp
std
and
jge
scas
insl
les
in
addr16
bnd
data16
lcall
into
insl
rolb
cmpsb
dec
cmp
repz
lahf
cmpsl
mov
adc
arpl
add
sub
mov
sbb
mov
fmuls
jge
loope
setb
push
cmp
jg
fisttpll
repz
sub
fists
push
rorl
pop
cmc
push
add
clc
sub
and
inc
ret
pop
push
and
ret
clc
add
jnp
push
lahf
sarl
outsb
je
or
rcrl
mov
scas
cmpsb
testb
cld
packssdw
repnz
dec
adcb
pop
mov
fisttpl
adc
leave
int
mov
aad
mov
adc
push
mov
push
mov
xor
shrb
pop
iret
addb
mov
mov
xor
aad
add
xor
xchg
test
fs
mov
push
jns
out
adc
stc
ret
int3
xchg
adc
mov
sbb
sbbb
xor
stos
adc
js
shrl
pop
xor
int3
decb
movl
in
sbb
mov
idiv
xor
shl
data16
mov
cmp
xor
inc
mov
lds
jecxz
push
imul
fildl
js
iret
fwait
push
xchg
test
push
push
and
mov
fnstcw
pop
out
wrmsr
sub
pop
in
mov
or
add
scas
inc
mov
push
pushf
sub
mov
insl
or
lahf
mov
or
std
push
pop
test
sbb
push
dec
aas
stc
ljmp
mov
insb
or
inc
pushf
xlat
push
dec
popf
or
mov
aas
mov
xchg
xor
inc
cmc
popf
sti
dec
cltd
testb
mov
enter
std
sub
sbb
or
imul
push
insb
in
mov
int3
xor
xchg
sbb
popa
filds
jb
leave
movsl
mov
lock
data16
mov
xchg
ljmp
stos
inc
fdiv
jb
repz
push
data16
das
lock
mov
fstp
daa
fiaddl
sti
idivl
inc
and
cmpl
fwait
aaa
push
lods
daa
popf
cmp
bswap
inc
sbb
stos
sar
and
inc
xchg
add
and
jecxz
out
inc
inc
sbb
cmpsl
xchg
cmp
mov
inc
inc
in
and
push
push
pop
bound
gs
ret
sub
lock
xor
mov
mov
sub
sub
bound
jb
fsubrl
pop
xor
cmp
add
test
and
mov
mov
rol
leave
rep
mov
enter
addr16
lahf
sub
sub
xchg
mov
pop
sub
loopne
xchg
mov
outsb
jo
incb
and
xchg
fldenv
xor
test
xchg
and
inc
sti
movsl
jl
outsb
or
push
fnstcw
ret
pop
xorb
or
popf
or
cmp
inc
stos
cld
int3
not
cmp
inc
rorl
mov
mov
mov
cmp
mov
sbb
int
push
lret
shl
fistps
sub
in
in
xor
mov
lret
inc
xor
mov
pusha
cmp
les
insb
jmp
aam
roll
popf
das
daa
xchg
sub
pop
jne
arpl
sub
aam
and
push
mov
sbb
repnz
or
push
daa
mov
movsl
mov
dec
jo
xchg
fstpt
aas
add
mov
mov
sbb
mov
mov
aaa
mov
gs
repnz
sbb
inc
inc
or
test
mov
mov
in
cmp
jae
jno
adc
negl
cs
cmc
inc
andl
mov
movsl
ffree
inc
rorl
xlat
xchg
push
ret
test
les
fstpt
repnz
xor
mov
incl
int3
das
inc
mov
dec
push
sbb
sub
adc
leave
test
sub
sbb
pop
outsb
pop
test
mov
xchg
mov
jb
fdivrl
mov
and
cwtl
cltd
loopne
dec
jg
push
lock
in
in
into
mov
jae
cwtl
stos
popf
inc
jmp
clc
ret
push
sub
lret
mov
insb
int
jmp
inc
subl
popf
mov
jge
pop
out
pop
dec
cmpsl
cld
mov
cmp
lret
push
xchg
cmp
and
sub
jns
mov
xor
inc
inc
mov
das
mov
scas
add
xlat
sub
mov
dec
fstpt
pop
sub
cmp
lea
nop
ret
lock
or
xchg
and
daa
push
mov
cs
notb
movsl
mov
test
iret
mov
jl
aad
jo
shll
jne
push
lds
lret
mov
in
xor
push
pop
sahf
repnz
stos
nop
jle
xchg
aas
sub
test
in
xchg
and
pop
jns
enter
pusha
bound
xor
into
dec
test
jmp
mov
xor
int
ljmp
cmpsl
mov
mov
rorl
pop
sarb
and
push
pop
inc
lock
popf
jp
pop
je
jg
mov
popf
lahf
test
pushl
loopne
test
inc
and
mov
jnp
fwait
inc
mov
xlat
fs
call
jns
jecxz
add
notb
iret
dec
mov
dec
std
pushl
lods
nop
jne
mov
popa
fwait
push
xor
inc
xchg
mov
movsb
pop
lds
pop
push
dec
fdivs
sbb
test
int3
repz
mov
xor
cmp
aas
test
xchg
jae
jp
test
pop
into
out
cmp
mov
add
mov
cmpsb
leave
stos
pop
adc
and
mov
jbe
add
pushf
sub
sub
sbb
and
ljmp
aas
mov
add
pushf
subb
dec
idiv
pushf
pop
push
mov
in
jns
mov
lret
jns
inc
repz
push
or
jno
push
mov
shl
std
loopne
fwait
stos
fisttpl
xchg
sbb
mov
movsl
popa
sti
push
ds
jmp
aam
adc
hlt
xchg
jp
loope
imulb
rol
mov
cltd
pop
addr16
pop
sti
sbb
scas
jl
imul
cmp
or
push
pop
stc
xor
fistpl
cmpsl
mov
sub
pcmpeqb
popf
dec
xor
push
push
pop
dec
lods
mov
inc
sub
test
inc
fwait
and
iret
xchg
add
pop
dec
inc
imul
cmp
test
movsb
xchg
jecxz
loope
dec
xlat
mov
mov
jno
and
pop
push
push
insb
push
inc
inc
and
addr16
dec
jmp
push
sarb
and
sbb
aas
frstpm(287
xchg
jmp
dec
mov
movl
dec
xchg
xchg
cmpsb
xlat
lcall
test
mov
xor
inc
xor
cmpsb
xchg
mov
scas
cmc
loope
into
inc
jne
lea
jle
mov
mov
testl
push
int
inc
sub
rorl
push
or
in
out
dec
cmpsb
sbb
lock
int3
cltd
xor
pusha
pop
sbb
ret
adc
fsubrl
lcall
jl
sub
sahf
int
cmpsl
jp
pop
outsb
add
insb
mov
andb
mov
movsb
jmp
adc
daa
in
js
call
mov
mov
sarb
sub
ret
mov
adc
sub
adc
sbb
test
loope
out
call
lcall
inc
jno
outsb
mov
adc
xlat
dec
cmpsb
or
icebp
sub
xor
repz
stos
pop
out
pop
popf
stc
subb
dec
dec
push
movsb
rcrl
and
test
push
lcall
push
out
loop
out
and
lds
inc
stc
rcrb
std
sub
addr16
inc
inc
mov
xor
call
jmp
sub
mov
into
sbb
jecxz
pop
roll
in
sar
ret
fadd
out
push
ss
inc
sbb
push
lods
shll
out
cmp
dec
lds
xchg
int3
jnp
mov
xchg
pushl
ja
stos
cmp
sub
jnp
pop
adc
imul
loopne
jecxz
pop
lea
and
push
xor
jle
je
stos
and
add
out
sti
movsb
daa
push
push
inc
ljmp
sbb
xchg
push
push
mov
imul
add
lea
into
in
pop
popf
sub
dec
mov
gs
dec
adc
sbb
mov
push
jo
inc
push
mov
popf
push
insb
mov
loop
fbld
test
add
push
cmp
dec
emms
in
push
jae
data16
ret
pop
dec
cmp
rcll
mov
sbb
inc
inc
mov
mov
inc
cmpsb
scas
mov
inc
lods
sar
pop
icebp
fdivrs
inc
mov
xchg
adc
fld1
dec
adc
push
sahf
jg
cmp
mov
decl
mov
sti
fidivrs
xchg
clc
sbb
mov
mov
inc
sbb
shll
dec
test
mov
pop
jbe
dec
shll
pop
add
or
sub
xor
fucom
aam
jno
jbe
dec
stc
add
ret
mov
aas
popa
push
push
adc
cli
fisttps
ficoms
adc
stc
mov
cmp
jmp
or
push
cmpsl
push
pop
jle
clc
push
push
pushf
arpl
into
arpl
gs
inc
arpl
outsl
dec
shll
mov
pop
fs
adc
push
pop
fld
mov
sub
inc
mov
popl
shll
in
lcall
adc
aaa
std
cmp
push
aaa
pop
xlat
loope
lods
push
das
daa
xchg
shlb
adc
pop
add
add
insl
lret
rorb
in
fsub
loope
in
shlb
inc
cmpsb
das
inc
cmc
jg
xchg
adc
lods
rclb
fcmovnu
add
repz
or
push
jnp
pop
lahf
push
jbe
sbb
xchg
aas
hlt
lret
imul
dec
xlat
cli
pop
test
fstpt
push
gs
mov
dec
test
jb
mov
ret
push
xchg
lcall
ret
push
xor
push
jle
neg
out
xor
outsl
mov
push
cmpl
push
inc
sbb
cmpb
ret
pop
inc
mov
andb
repnz
popf
pop
add
adc
iret
mov
cld
adc
sub
pop
mov
jo
test
test
xchg
cmp
xchg
dec
mov
pop
ret
xor
sbb
sub
pop
aas
insl
add
sbb
lea
dec
xchg
test
add
push
je
cmp
mov
or
push
stc
in
jns
inc
mov
xor
mov
pop
dec
jno
push
or
int
enter
sbb
nop
aam
add
sbb
addr16
cmp
mov
dec
out
in
or
mov
repnz
cltd
add
push
xor
arpl
sahf
mov
sub
je
xchg
xor
outsb
pop
mov
push
and
cli
sti
fsubs
lods
sub
or
mov
or
pop
xor
stc
or
jbe
lret
jmp
jl
jae
cmp
add
mov
je
mov
lcall
dec
fisubs
sbb
push
adc
int3
lcall
in
mov
lea
or
js
or
aam
adc
insl
jae
xchg
or
mov
adc
nop
or
stos
lds
fcomp
xor
mov
in
xchg
sarb
aas
mov
push
dec
das
add
clc
mov
ret
or
push
xchg
pop
xchg
pop
ljmp
xchg
push
das
or
cmc
lea
sbb
cmp
xor
int
xchg
imul
fdivrl
sbb
ss
lea
mov
mov
jecxz
cmp
mov
in
adc
fs
jns
or
iret
mov
gs
dec
pop
jb
cmp
in
sbb
jl
pop
outsl
and
sti
jnp
fsubrs
subl
mov
or
test
fbld
or
mov
iret
cs
mov
stc
pop
inc
fstpt
neg
es
inc
dec
icebp
sub
das
sub
fadds
mov
add
lock
subb
hlt
xor
or
mov
jns
sar
out
xchg
int
loop
adc
add
fldenv
fs
jo
xchg
notl
mov
mov
ret
dec
stos
add
push
dec
jle
ret
adc
stc
or
enter
sub
cmp
dec
sub
mov
cmp
das
pop
cmpsl
jg
xchg
cmpsl
ret
inc
test
mov
pop
push
sti
dec
mov
lea
xlat
stos
pop
in
pusha
out
inc
imulb
add
sarl
sbb
ficompl
mov
xlat
mov
adc
fwait
pop
icebp
imul
sbb
lret
pop
jecxz
or
pop
shrl
fcoml
push
sti
fimull
pop
jmp
scas
pop
imul
dec
ficompl
inc
sbb
pop
sub
stos
in
outsb
pop
bnd
les
stos
mov
cli
jne,pn
lcall
cltd
scas
arpl
xchg
push
xor
push
loopne
arpl
ljmp
and
scas
sbb
push
in
cmp
dec
fcomps
jae
clc
sub
pop
test
out
dec
fiaddl
xchg
es
sbb
sub
cmp
test
sub
stos
outsb
mov
mov
mov
lods
mov
outsb
lret
fldl2e
xchg
es
int
movsl
push
sbb
mov
movsb
push
popa
push
adc
dec
loopne
mov
pop
dec
pop
ja
stos
cmp
or
fsts
xchg
push
dec
pop
inc
rorl
lds
cmp
cltd
or
push
cmp
inc
inc
mov
cmp
test
stos
pop
stos
shrb
adc
sarb
outsl
inc
sarl
add
adc
mov
fnstcw
jbe
lea
jne
scas
xor
mov
lea
push
mov
fnsave
mov
scas
dec
jecxz
xlat
lcall
jg
lds
sub
cmp
jae
lret
add
loop
in
mov
push
nop
enter
insb
xchg
lock
adc
repz
push
inc
adc
lods
hlt
jne
fdiv
out
jle
jg
xor
sub
xchg
ja
int
pusha
movsl
push
scas
aam
mov
jge
push
sti
fadds
push
pop
xchg
and
jmp
jno
push
push
mov
adc
imul
mov
sbb
push
or
cmpsb
xchg
mov
jmp
mov
mov
out
popf
and
dec
push
decl
push
xchg
aam
and
icebp
sbb
or
fadds
mov
dec
inc
loope
inc
sbb
movsl
or
mov
sbb
aas
mov
cmp
outsl
idivl
lea
mov
sbb
imulb
cwtl
scas
or
mov
push
andb
shr
test
sbb
and
cmp
dec
and
shlb
test
mov
xchg
mov
popf
sbb
add
aas
nop
add
mov
mov
dec
mov
aad
adc
fsubrl
fsub
addl
sub
fwait
loopne
movsl
aaa
pop
cmpsb
cltd
fwait
je
adc
jp
lahf
aam
stos
mov
sti
sub
popf
jno
mov
subl
xor
fsubp
jb
or
incl
jge
loopne
cld
pusha
add
andb
push
leave
test
lret
test
push
pause
clc
pop
adc
fdiv
in
cmp
fistl
jmp
mov
inc
push
lret
clc
dec
cmpsl
orb
stc
adcl
ret
sub
xor
enter
aad
jo
arpl
or
xor
cmp
inc
sbb
jl
sbb
add
cltd
push
jbe
dec
mov
loop
sub
out
xchg
lods
in
sub
xchg
jge
push
and
mov
jns
imul
movsl
sub
or
xor
aam
push
pop
sub
insl
jp
je
mov
mov
pop
or
mov
or
sbb
adc
test
incl
mov
popa
rorb
rclb
ficomps
ja
pop
sahf
push
inc
test
aas
js
fnsave
jg
add
je
orb
adc
loope
cmc
scas
daa
daa
lods
sarl
je
mov
mov
out
xor
mov
push
pop
dec
pusha
rcrl
and
popa
or
call
xorb
nop
cmpsl
xlat
popf
pop
ds
fisubl
adc
aas
movsb
ds
mov
xor
mov
xchg
jne
cmp
sbb
xchg
lcall
call
dec
add
je
fnsave
xchg
xorl
mov
jbe
jb
xor
dec
mov
sbbl
lcall
cmpsl
cmp
cwtl
jle
xchg
sub
add
cmp
fwait
pop
cmp
push
lods
shll
xor
test
xchg
push
and
mov
xchg
mov
jl
addr16
out
pop
dec
jl
or
loope
xchg
rclb
and
pop
stc
add
jb
inc
inc
mov
mov
xchg
pushfw
mov
clc
dec
inc
divl
adc
xchg
or
ljmp
arpl
push
xchg
mov
cwtl
cmp
add
aas
add
cld
in
inc
jne
int3
pop
lea
notl
and
ljmp
sub
mov
das
push
mov
jbe
testl
add
lds
std
aad
dec
inc
fs
jmp
push
cmp
frstor
ficoml
das
lcall
xchg
add
iret
dec
or
pusha
mov
jnp
dec
sbbb
pop
or
push
test
popf
lods
add
inc
es
gs
in
sbb
test
jge
push
jne
cld
and
stos
cmp
data16
test
jnp
movsb
mov
shll
adc
arpl
lcall
loope
sbb
out
pushf
mov
rolb
pop
loopne
inc
jl
dec
adc
jae
or
mov
ss
repz
add
dec
cmp
mov
dec
out
addl
fwait
in
shll
pop
popa
xor
fmull
outsb
pop
fs
ss
mov
xor
int
dec
and
sub
aas
cltd
pop
and
test
inc
stos
pop
in
jb
inc
add
ja
or
iret
push
pop
insb
mov
test
clc
adc
sub
xchg
pop
cmp
add
cmp
xchg
and
mov
aam
mov
push
icebp
or
and
cmp
rolb
call
add
mov
xchg
adc
insb
mov
cmp
outsl
push
cmp
jl
dec
xchg
sub
adc
std
pop
xchg
lock
dec
and
mov
into
cmp
pop
mov
cmpsb
scas
call
pop
push
jmp
rcll
aam
jns
inc
shrb
das
jle
gs
cs
or
xchg
mov
xchg
mov
mov
xor
push
or
popa
fldcw
add
mov
jecxz
inc
fwait
movsl
cmp
push
icebp
cs
sbb
jbe
int
sbb
xchg
hlt
and
mov
cmp
dec
test
lcall
shrl
jo
xchg
and
jge
aad
mov
push
mov
dec
add
test
outsb
push
popa
ds
jnp
fildl
popa
in
cmp
mov
and
push
add
daa
inc
test
push
dec
aam
test
cld
aad
inc
jbe
mov
stos
jnp
ficoml
adc
add
shl
or
fsubrl
repz
jmp
mov
dec
add
dec
popa
xor
cltd
push
aam
sub
cmpb
and
repz
mov
jg
inc
pop
daa
pop
js
push
mov
hlt
out
aam
xchg
push
dec
lock
test
dec
sub
lret
dec
jnp
sub
sbb
call
and
xor
sbb
sub
pop
insl
mov
icebp
push
mov
and
lock
mov
and
outsb
cmp
pop
sahf
lret
ss
adc
adc
dec
pop
cmp
inc
imul
mov
loop
test
mov
fnstsw
xchg
fstpt
and
pop
mov
xor
lock
outsl
outsl
xchg
icebp
pop
dec
mov
ss
sub
jge
pop
mov
or
mov
lahf
leave
dec
mov
mov
jp
imul
stos
dec
mov
pop
loope
pushf
std
push
movb
or
icebp
mov
mov
and
lret
xchg
ret
decl
fs
stc
out
in
inc
lret
jae
and
pusha
lds
adc
jle
sbb
xchg
sbb
mov
sbb
cmp
test
test
movsl
outsl
push
mov
inc
cmp
push
outsl
fcmove
xor
inc
and
mov
jb
aas
mov
ss
aam
pop
iret
pusha
lcall
mov
pushf
sub
cld
xor
call
xlat
sahf
mov
inc
leave
pop
and
xchg
xor
and
dec
cmp
jmp
lret
orl
clc
sbb
inc
mov
test
sbb
lods
mov
loop
loop
cmp
test
mov
int
mov
sbbl
mov
out
fs
mov
fisttpll
fs
hlt
or
roll
cmp
js
push
push
xor
add
dec
pop
push
stos
popf
xchg
outsl
xchg
orl
shll
dec
adc
test
loop
in
adc
push
add
xor
test
sbb
or
rclb
mov
xchg
test
je,pn
xchg
and
scas
cmp
cpuid
dec
and
jo
inc
and
and
xor
es
cmp
jns
shlb
mov
clc
cmpsb
dec
data16
lea
sbb
add
add
xchg
sarl
push
scas
pop
ret
jl
push
and
aaa
and
mov
sub
adc
loop
pop
pop
jnp
cmp
adc
aas
jbe
call
xor
lock
and
pop
outsl
sbb
dec
adc
xlat
sub
test
sub
sub
xchg
cs
mov
inc
push
cli
nop
mov
lock
out
dec
cltd
inc
call
mov
scas
iret
movsl
push
int3
push
jecxz
loopne
and
jbe
repnz
fwait
shrl
mov
push
ret
or
jno
fistps
push
sbb
lock
cltd
ss
lock
cltd
aaa
ja,pn
lret
pop
rcrb
ret
pop
lea
jmp
int3
outsl
popf
call
in
lock
dec
scas
mov
jle
mov
sbb
test
dec
mov
lds
nop
das
pop
cmc
jecxz
jg
hlt
loope
xchg
jo
mov
sub
dec
mov
mov
xchg
nop
add
xchg
push
xchg
les
sub
jo
pop
outsl
pushf
outsb
jg
scas
clc
test
mov
outsl
push
mov
and
popf
xlat
nop
pop
cmpl
mov
jp
decb
and
cmp
or
shlb
imul
push
je
syscall
xchg
stos
cltd
jnp
in
pop
loopne
ss
inc
xor
push
sub
test
icebp
repnz
mov
sbb
mov
mov
in
sub
pop
sbb
xor
xchg
cmp
es
mov
pop
hlt
mov
jnp
adc
and
movsb
xor
es
mov
sbb
adc
cli
int
add
fcomi
sti
xor
jmp
popa
adc
enter
or
sbb
imulb
test
jno
jb
repnz
and
push
sbb
or
out
or
cmp
add
js
pop
pop
fcomp
sbb
mov
cmp
adc
cmpsl
mov
shlb
add
fs
lds
dec
push
cld
xor
incl
mov
enter
and
or
clc
mov
pop
mov
popf
ret
jle
mov
jg
pop
enter
shll
xchg
out
inc
inc
sbb
inc
add
xor
xchg
cmpb
add
push
and
ret
xor
mov
ljmp
pop
movaps
jmp
sbb
mov
dec
dec
ret
cmp
lahf
jmp
add
lret
outsl
cmp
shrb
jecxz
aas
cmp
sub
sbb
or
call
mov
hlt
test
mov
or
push
push
icebp
insb
shr
fdiv
dec
fsubp
inc
test
popf
mov
popa
movsb
jl
imull
pop
mov
sub
mov
jge
jb
mov
ds
or
mov
fistps
pop
pusha
xor
pusha
jbe
inc
mov
rorl
seto
and
jg
xor
jnp
ja
push
add
ss
imul
push
imul
iret
mov
xchg
in
mov
iret
push
or
fistps
xor
jb
clc
dec
pop
into
add
mov
sbb
out
cmp
addr16
dec
sbb
pushf
les
iret
xor
xorb
es
fldt
roll
aas
dec
push
movsl
dec
in
sbb
xor
in
enter
ret
add
mov
sbb
aad
inc
pop
lods
cmpsl
sbb
mov
or
or
xchg
sbb
mov
nop
test
sbb
inc
inc
dec
jp
sbb
ja
mov
je
push
adc
dec
inc
stc
or
scas
sarb
add
mov
add
mov
pushf
fisubrs
aas
inc
call
jne
shr
mov
mov
out
push
or
dec
push
push
cmovns
cmp
xchg
sub
cmpsb
or
or
fisubrl
inc
mov
xchg
cmpsl
sahf
jnp
xchg
fcoms
lea
fsubrs
jno
xor
loop
orb
leave
add
lds
aad
xor
shl
mov
out
push
ret
and
or
dec
ret
ret
xor
pop
sub
mov
out
imul
adc
adc
xlat
stc
shll
or
or
ficompl
jb
pop
jne
in
xchg
lock
mov
rorb
repnz
cmpsb
sub
ds
inc
ret
cmp
mov
push
inc
mov
dec
mov
xchg
or
cwtl
xchg
fcoms
and
sahf
out
out
jp
and
mov
roll
mov
push
adc
dec
push
cmpb
add
out
xor
push
aam
mov
rorb
mov
pop
arpl
fildl
pop
out
daa
in
fldenv
out
outsb
mov
pop
jge
cwtl
jp
test
cmp
enter
sub
out
mov
and
mov
mov
ljmp
lcall
pop
out
mov
xor
imull
pushf
sub
in
shl
mov
gs
push
cmp
mov
pop
sub
std
es
mov
fucomip
sbb
jae
push
pop
mov
mov
stc
adc
cmp
mov
sti
sub
dec
add
jo
fldl
mov
test
mov
or
mov
test
adcb
add
and
arpl
fs
in
fildl
sbb
sbb
sub
adc
adc
pop
leave
add
shrl
xchg
jnp
xor
dec
or
dec
add
xor
arpl
adc
pushf
mov
adc
sub
idivb
inc
insl
ss
scas
sbb
repz
add
mov
inc
xor
jl
cmp
push
ljmp
jmp
orl
arpl
inc
or
xchg
out
shll
daa
hlt
shlb
fldcw
jg
dec
loopne
pop
out
out
movsl
rcrb
mov
pop
fistl
push
imulb
dec
mov
in
clc
jb
das
js
xchg
rcrl
pop
mov
scas
sahf
in
xchg
sbb
loop
mov
lods
push
adc
sbb
mov
jnp
hlt
fldt
orb
pop
les
mov
mov
jmp
mov
and
fchs
adc
ret
and
ss
sbb
daa
jge
mov
push
push
out
ljmp
ja
inc
push
fbld
add
aaa
addr16
jl
push
bound
inc
insb
sub
fadds
dec
sarl
aaa
add
mov
xchg
mov
mov
loop
movlps
not
mov
mov
jnp
push
fdivrs
push
mov
repz
pop
je
addb
mov
aam
ja
clc
xchg
rcll
add
in
repz
mov
aaa
fbstp
lea
pop
sbb
dec
inc
xchg
mov
addr16
dec
add
movsl
cmp
lcall
xor
push
ja
lret
sbb
jl
fwait
adc
jecxz
and
pop
popa
jno
lock
push
ss
cmpl
pushw
loop
fsubp
and
lret
ja
push
mov
out
pop
push
das
sahf
or
mov
add
loope
jno
mov
cmp
dec
adc
or
test
out
jl
nop
push
mov
pop
pop
xstore-rng
cmpsl
inc
test
cmpb
jnp
sbb
js
xor
xchg
cmp
out
or
jb
mov
push
xorb
out
aam
mov
xchg
pop
mov
test
scas
dec
dec
popa
dec
js
adc
pop
data16
ss
ljmp
clc
in
mov
cmp
es
in
sub
int
pop
les
rcrl
xor
addl
stos
icebp
lret
daa
cmp
bound
ret
out
add
pop
mov
sub
pusha
pop
aad
lret
arpl
sbb
rcr
lahf
aad
sbb
mov
mov
leave
pop
jg
rorl
pusha
mov
xchg
repz
cmp
or
imul
stos
sub
add
xor
jae
sub
cmp
pop
jp
and
test
loop
mulb
xor
shlb
jno
add
ja
clc
adc
xorl
lds
jb
aam
mov
into
stc
cmpl
popf
push
add
std
and
jb
mov
mov
pop
test
cmc
xor
mov
rcrl
adc
mov
cmc
add
cmp
iret
iret
call
ret
addr16
out
and
popa
mov
pop
mov
jge
ds
mov
sub
lahf
fisubs
popa
or
addr16
sbb
sti
dec
lea
xchg
add
push
push
xor
xchg
dec
pop
dec
mov
hlt
test
cmc
mov
icebp
push
add
fld
xchg
mov
adc
aam
rolb
push
test
adc
inc
cmp
loopne
dec
mov
jb
push
cmpb
xchg
mov
pop
mov
or
xchg
adc
cli
in
popf
inc
jae
imulb
dec
push
pop
mov
mov
inc
dec
jge
les
or
cltd
adc
push
push
xor
iret
push
jecxz
rdtsc
ljmp
or
fld
mov
lahf
mov
or
lds
and
cmp
outsb
test
mov
fidivl
mov
stos
test
ficompl
jecxz
mov
stos
jb
dec
xchg
int3
and
into
stc
fidivrl
sti
xor
or
cmp
mov
hlt
pop
push
xchg
xchg
aaa
pop
aam
call
mov
sbb
push
mov
jne
cmc
test
cltd
sub
push
inc
lock
xchg
in
and
or
iret
out
scas
push
sub
mov
xor
stos
mov
addr16
lea
adc
cmp
popf
mov
stos
sub
xor
mov
loop
mov
mov
mov
cli
lods
cmp
or
rcl
pop
insb
js
cmpsb
xchg
fcmovne
adc
sub
out
subl
fcmovnb
inc
icebp
mov
mov
pop
mov
adc
or
or
in
popf
xchg
shrl
push
imul
lods
jge
dec
push
jmp
add
push
hlt
arpl
popf
push
push
push
in
pop
lock
mov
push
repz
mov
push
stos
test
lods
lret
inc
mov
push
jl
call
dec
fldenv
xor
test
insl
xor
test
mov
imul
mov
test
jo
dec
sbb
bound
mov
xor
jg
fnstcw
or
or
lock
imul
dec
and
jecxz
mov
cmp
not
jnp
jb
pop
sub
test
and
in
and
rol
pop
mov
data16
sti
les
scas
jp
mov
testb
std
adc
movsb
rcrl
call
aad
mov
rclb
lret
int
inc
add
insl
cmp
or
mov
fmull
test
leave
push
fiadds
js
or
inc
repnz
mov
fs
fisubl
or
add
adc
dec
xor
or
lret
mov
jo
cmp
mov
cmp
xchg
shlb
popf
test
sbb
push
daa
pop
jbe
add
les
jno
ljmp
aam
mov
addr16
cmpl
inc
pop
gs
pop
sbb
or
sbb
mov
call
lret
adc
adc
call
push
mov
js
mov
fwait
add
stos
test
bound
leave
aam
in
adc
xor
lock
xlat
jge
test
rcll
je
enter
push
outsb
sahf
inc
popa
mov
mov
pop
push
mov
cltd
int3
pushw
mov
push
ljmp
scas
loope
in
jne
mov
add
pop
fadd
setne
aam
xchg
push
hlt
fwait
push
shl
insl
push
pop
xor
cmp
aad
js
pop
jne
cmp
push
pop
jg
fnstenv
je
and
jg
sub
imul
jl
in
mov
mov
adc
bound
lret
arpl
mov
mov
push
fwait
mov
ljmp
aam
movb
cli
xchg
jnp
cmp
outsb
outsl
cwtl
push
dec
ret
lds
or
lods
mov
ficompl
out
fistpll
push
ds
or
push
dec
or
mov
lds
std
in
test
cmp
xchg
mov
push
mov
icebp
dec
ficompl
inc
pop
daa
out
popa
lahf
add
sbb
sbb
pop
out
je
test
stos
fstpt
hlt
int
or
and
fldt
adc
inc
rcll
mov
lahf
adc
bound
jle
enter
decb
hlt
ret
arpl
in
js
push
lods
mov
icebp
cmp
push
mov
dec
xorl
jo
stc
xchg
xchg
imul
test
pop
outsl
push
push
addr16
lret
adc
jbe
xor
mov
or
fadds
mov
outsb
out
inc
hlt
jecxz
lea
sbb
push
out
pop
out
xor
addb
xchg
cld
push
dec
jae
sbb
push
push
popa
pushf
arpl
daa
out
jl
cmp
hlt
inc
jmp
mov
xchg
dec
roll
adc
xlat
dec
aam
rcrb
pop
leave
shl
mov
nop
leave
add
outsl
ja
dec
dec
stos
mov
push
adc
push
dec
jbe
adc
stos
inc
sub
ror
cmp
fisttpl
xlat
lods
lds
lcall
out
cld
sbb
cld
mov
imul
sti
sub
jne
das
pop
cmp
ljmp
cli
mov
pop
mov
mov
sub
or
movl
and
mov
and
inc
or
pop
lods
jp
lea
pop
cmpsb
inc
jg
mov
mov
dec
inc
lds
cmpsb
mov
bnd
sahf
cmc
cmpsl
xchg
jnp
dec
and
inc
shlb
or
in
cli
jb
addr16
or
test
fstps
mov
rorl
or
scas
lcall
mov
push
xor
mov
pop
and
in
int3
rcrb
fs
jns
nop
test
mov
or
stos
cmc
sbb
nop
movsl
repz
mov
cmc
rcl
lahf
jge
repz
adc
test
int3
test
imul
and
fsubr
pusha
and
mov
pop
aam
lahf
cmp
mov
fnstcw
shlb
outsl
mov
outsl
movsl
daa
stc
xchg
jge
xlat
jnp
sbb
adc
mov
push
xor
add
test
dec
subb
dec
popa
test
shlb
test
xor
aad
ficoms
popf
shl
mov
adc
mov
fdiv
out
rolb
xchg
sti
push
cmp
xchg
sub
insb
push
add
xor
or
jns
inc
loopne
test
sub
je
rol
test
insl
sbb
mov
sub
out
xchg
fidivrl
pop
daa
cli
in
pop
mov
xchg
cmp
jmp
sbb
jno
push
lock
mov
push
add
pop
inc
arpl
popf
ja
sub
adc
cwtl
xchg
ffree
mov
mov
stos
dec
push
mov
inc
repnz
sub
xor
fs
jg
mov
mov
jl
mov
fistps
dec
push
or
pop
cs
je
cs
test
and
loop
outsl
bound
inc
inc
mov
cli
scas
lcall
xchg
jmp
sub
push
sarb
cmpsb
add
add
in
dec
mov
push
subb
mov
int
mov
push
push
ds
xor
cs
in
mov
mov
jbe
outsl
push
dec
mov
jae
cltd
pop
jbe
ja
fbstp
repz
mov
cmp
sahf
mov
jg
mov
hlt
push
pop
sub
xor
push
shl
dec
push
add
stos
mov
int3
xor
jmp
divl
cmp
movsl
int
jns
jmp
pop
movsl
inc
fwait
adc
mov
movsl
xchg
or
pop
fnstcw
mov
sub
jbe
mov
les
cmp
movsb
inc
pop
add
add
xchg
inc
cmp
fcompl
jno
mov
inc
mov
pop
fstl
xchg
psubb
adc
mov
and
sub
mov
sub
cmp
xor
shll
push
out
mov
aad
inc
out
test
or
sub
jae
testl
mov
ret
adc
adc
fisttps
lods
aad
cld
aam
stos
xchg
lret
pop
aaa
outsb
ficomps
push
sarb
xorl
out
pop
aas
clc
pop
icebp
push
mov
dec
dec
nop
rclb
mov
mov
cs
cmc
pop
xchg
daa
in
out
add
movsl
fisttpl
sub
jbe
and
mov
inc
movsl
mov
push
mov
mov
int3
cmp
fsubl
mov
lahf
sub
rol
inc
sub
cmp
loope
cli
sub
push
jb
dec
mov
jle
mov
dec
jbe,pt
or
dec
lea
push
pop
pop
cmpl
mov
inc
lea
sub
inc
push
daa
fimull
sub
and
cld
xchg
lods
push
pop
push
mov
or
inc
or
inc
xchg
cli
jno
lods
lea
stc
dec
rorb
xchg
mov
loop
je
sub
push
pop
add
push
fisubrl
mov
xchg
push
mov
jg
inc
js
loopne
call
fwait
pop
mov
or
mov
fidivs
scas
add
mov
sub
cmpsb
mov
fwait
insb
das
jmp
xor
cs
mov
outsb
dec
fistl
ja
sbb
jmp
lahf
xor
mov
mov
mov
sub
lret
xor
mov
xchg
pusha
adc
mov
sub
and
xlat
scas
jb
fsubrs
ja
inc
mov
mov
inc
jns
or
mov
sbb
test
jb
xor
and
sub
cmp
dec
psllq
sarb
sbb
test
xor
and
push
mov
pop
xchg
cmp
aas
inc
outsb
in
add
subl
mov
es
je
fsubs
roll
dec
add
ja
mov
js
mov
dec
cmp
jo
jmp
jle
add
leave
ficoms
iret
scas
cli
roll
es
cmpsl
mov
jle
insb
jmp
push
pushf
push
data16
mov
add
dec
xchg
pop
popa
dec
mov
lcall
call
in
pop
dec
stos
xor
jle
data16
fwait
xchg
sbb
xor
movsl
enter
mov
mov
pusha
xchg
jp
xchg
mov
add
in
lret
add
push
lods
mov
mov
jmp
addb
leave
inc
mov
adc
mov
lret
xchg
add
jb
les
test
or
hlt
add
pop
insl
lock
je
shll
xchg
pushf
mov
mov
push
xchg
scas
notl
fbstp
addl
testb
xchg
jae
mov
sub
push
sahf
mov
jmp
loopne
test
in
filds
lcall
cmc
jbe
sti
aas
push
mov
sti
test
es
and
cmpsl
and
ss
cmp
pushf
dec
in
add
out
shl
push
dec
sbb
push
jle
rsqrtps
xchg
inc
sub
je
into
pop
push
adcl
inc
and
cltd
lods
lock
or
fucomip
test
popf
sarl
addr16
ja
call
enter
or
adc
repz
jmp
shlb
aas
lcall
je
leave
aas
inc
dec
cmp
sub
pop
cmp
fiadds
push
add
mov
nop
pop
inc
mov
add
jle
in
push
xchg
fcompl
movsb
push
aaa
sub
jbe
insb
lods
mov
cmp
jbe
ljmp
jb
lods
jecxz
jmp
sub
cmp
and
fildll
out
pop
jo
and
out
das
pop
imul
retw
pop
ja
es
jg
inc
xchg
pop
adc
inc
mov
int3
aad
icebp
test
pop
mov
dec
pushf
adc
inc
mov
pop
jl
and
and
pop
pop
pop
outsl
movsb
mov
mov
inc
sub
lock
push
xchg
rorb
mov
sbb
mov
inc
add
pop
add
int
out
fcomps
pop
mov
add
or
movsb
mov
sbb
push
push
jae
cli
aas
scas
xchg
push
test
aad
lahf
jg
push
adc
mov
or
mov
je
inc
inc
jecxz
aad
adc
fmulp
cmp
mov
dec
mov
mov
mov
dec
arpl
enter
and
pop
les
cmpsb
mov
sbb
fistps
and
and
scas
cltd
test
fldenv
loope
das
xchg
ds
pop
jnp
daa
lcall
fcmovnb
jecxz
je
inc
movsb
dec
jecxz
cmp
dec
out
rorb
or
mov
jmp
xor
pop
decb
sbb
push
lods
test
xchg
gs
aas
sbb
nop
pop
movsb
cmp
sub
dec
popa
jmp
mov
push
push
stos
xchg
test
inc
mov
aam
add
cmpsb
lea
adc
add
mov
popa
shr
in
and
jne
lods
inc
inc
mov
pop
jg
sbb
xchg
mov
or
std
dec
out
clc
push
push
test
fnstenv
mov
jo
lahf
pop
int
shll
add
cmp
cltd
leave
dec
fiadds
mov
adc
addr16
sub
popf
mov
adc
push
fs
xchg
ret
jp
notb
xor
pop
mov
mov
pop
add
inc
or
inc
out
cs
in
xchg
or
inc
sbb
loope
fstl
add
and
stos
std
testl
test
cmc
xchg
mov
daa
aaa
loop
fadds
adc
in
mov
mov
sbb
les
call
mov
inc
cwtl
jecxz
hlt
lcall
test
iret
popf
fs
sbb
rcr
jo
or
sub
mov
inc
mov
fcmovb
les
lret
or
inc
mov
repz
lods
cmc
mov
hlt
std
mov
je
adc
and
in
mov
lock
sti
jge
addr16
int
push
ret
test
mov
mull
fdivp
jl
mov
test
sbb
inc
aam
mov
mov
sbb
rcll
clc
mov
mov
dec
cmp
lock
mov
push
sub
cmp
add
cmp
fisubs
bound
insb
jne
pop
outsb
xor
repz
in
sahf
aaa
lahf
mov
fnstenv
out
jge
adc
sub
cwtl
sbb
mov
or
ret
mov
add
fldenv
aas
and
mov
mov
mov
xchg
adc
and
call
cmp
add
roll
pop
jns
enter
loop
loopne
sahf
shl
dec
out
jb
daa
and
mov
mov
jno
pop
adc
or
xor
mov
push
jmp
mov
or
mov
xor
adc
fstpl
push
fldt
xor
and
xchg
scas
mov
or
aas
gs
push
and
jmp
das
pop
push
cmp
xchg
out
sti
je
jne
push
repz
jae
shll
xchg
adc
xchg
cmpsl
dec
les
imul
mov
or
mov
outsl
pop
out
mov
xchg
dec
xlat
xchg
pop
cltd
fwait
cmpsl
nop
mov
mov
rcrb
dec
gs
into
mov
and
outsb
stc
iret
adc
or
enter
xor
cltd
add
shlb
imul
inc
mov
pop
movl
xorb
or
addb
cmp
mov
mov
popa
pop
pop
sbb
cmp
fwait
mov
jno
bound
shrl
leave
ret
push
fcompl
sbb
fs
popf
popf
loopne
push
ja
enter
lock
mov
xorl
iret
lcall
addr16
push
sbb
xchg
jno
das
push
mov
cmp
or
lods
push
scas
push
fs
ss
jg
pop
mov
shll
out
dec
test
pusha
xchg
jnp
xchg
out
lods
sub
mov
shl
and
pop
sbb
shl
mov
adc
inc
mov
mov
andb
add
mov
out
sbb
jmp
xlat
aad
cld
xor
gs
adcb
jo
push
dec
add
ja
xor
call
xchg
fs
fucomp
scas
ret
dec
imull
daa
fbstp
add
rcrl
pop
pop
lcall
call
add
adc
or
scas
leave
shr
xchg
clc
adc
insb
fwait
or
das
jbe
push
xchg
inc
inc
pop
fstpt
sub
movsl
and
mov
mov
xchg
addb
insl
push
mov
in
push
push
in
lods
ss
clc
mov
xchg
movb
dec
ret
test
jns
loope
jmp
in
cmpsl
fistpl
xchg
sub
xor
or
mov
data16
ret
jp
lcall
jbe
dec
push
lea
adc
xchg
fsubs
adc
mov
ja
scas
into
jne
test
jmp
mov
or
outsl
mov
mov
mov
ret
jbe
inc
sahf
icebp
inc
out
push
ljmp
pop
xor
loopne
sub
insb
push
hlt
pop
xchg
shlb
cld
fs
add
mov
jl
insl
pop
mov
ja
cmp
or
adc
cld
outsb
cmc
movsb
rol
daa
pop
cmp
mov
cmp
xor
xor
in
inc
mov
ja
loopne
or
xor
and
adcl
xchg
sbb
jb
pop
or
dec
mov
mov
rcrb
test
jp
fnstsw
scas
mov
fisubrs
nop
cmp
fadds
jo
mov
gs
sbb
cmp
out
lahf
xlat
ds
pop
lds
xchg
push
add
cmp
sarl
and
or
into
xchg
rcl
adcb
fisubrl
jmp
jecxz
in
andl
pop
aam
pop
ds
call
inc
sub
add
test
pop
sbb
mov
mov
push
jns
lret
dec
mov
dec
je
adc
imul
push
fstpt
mov
sub
rcl
jl
js
or
in
sarb
sbb
xchg
adc
or
inc
das
xchg
rol
mov
jae
push
ret
or
pop
mov
add
shrl
push
repnz
setg
jb
pop
pop
add
jne
scas
inc
movsl
cld
mov
shrb
or
int
inc
lock
sub
mov
ss
mov
inc
das
dec
xlat
and
mov
imul
push
cmp
mov
movsb
fbld
lds
pop
fidivrs
out
mov
cltd
and
adc
xchg
enter
xchg
out
cmp
enter
xchg
xlat
jge
lea
mov
and
dec
jp
cmp
in
push
fyl2xp1
rcrb
mov
sahf
xchg
adc
icebp
jno
test
pushf
fidivs
jge
jae
out
mov
pop
cmp
insb
jb,pn
fisubs
lea
call
dec
fstl
andb
xor
xchg
inc
sbb
push
adc
mov
es
inc
testb
das
push
push
clc
les
inc
mov
das
xchg
sbb
lods
les
movsl
mov
outsl
ljmp
jb
xlat
into
mov
adc
mov
jo
lods
test
dec
ficoms
xchg
xor
cmp
rorb
jbe
or
and
pop
pushl
xor
int3
mov
data16
cmp
rdtsc
addr16
enter
jb
and
inc
sbb
jbe
fcom
pop
cmpsb
mov
xor
popa
pushl
sbb
sub
inc
in
ds
int
ds
rorl
sub
add
jne
jnp
enter
mov
stos
fimull
fucom
xchg
sahf
xchg
out
enter
data16
std
dec
cmpsl
add
cmp
clc
push
daa
xor
dec
push
jmp
call
mov
cld
jne
or
jecxz
test
lods
loopne
mov
mov
sar
test
and
popf
cmc
jge
jle
dec
out
jp
push
or
dec
inc
js
dec
das
es
fs
and
mov
cli
xchg
ljmp
inc
xchg
sbb
roll
cmc
in
inc
adc
sbb
outsl
lahf
pop
leave
fwait
insb
push
gs
notl
adc
adc
pop
test
cmp
das
jl
orl
xchg
cli
daa
sbb
push
pushaw
nop
jne
inc
arpl
sub
movsb
stc
lods
pop
cli
ljmp
cmpsl
and
add
mov
lret
adc
mov
in
inc
out
pause
aam
rorl
ret
cmpsl
xlat
cltd
jnp
fsubrl
gs
aam
js
loope
dec
test
rclb
idivl
pop
or
and
pop
stc
sbb
sbbl
jmp
pop
arpl
sarl
xchg
gs
cmp
insl
das
loopne
inc
lea
jmp
movsl
fstps
push
add
cmpb
sub
pop
jbe
lds
dec
xlat
xor
xchg
jne
mov
mov
push
xchg
loopne
ret
arpl
push
mov
push
stos
push
jb
int
jne
inc
aam
pushf
out
fidivs
leave
adc
and
nop
sbb
test
xchg
shr
and
jmp
into
xchg
lret
test
dec
and
mov
mov
and
out
mov
push
cmp
lods
fsincos
mov
push
sbb
bnd
xlat
cs
mov
dec
mov
sub
in
mov
xchg
inc
add
iret
imul
add
xor
jp
jae
jl
in
ret
inc
ljmp
outsl
cmp
mov
repnz
loope
xchg
stos
pusha
or
push
push
jno
mov
jge
lahf
iret
icebp
add
push
stc
cmpsb
ja
cs
popl
loop
dec
lcall
dec
outsl
movsl
call
scas
push
sahf
out
enter
and
or
xlat
js
add
loopne
pop
lret
movsb
gs
dec
dec
shlb
bound
insl
push
mov
push
and
into
mov
mov
into
jno
les
xchg
xchg
add
pop
lds
aaa
mov
push
test
shl
inc
xchg
out
icebp
sti
mov
jno
pop
cmpsl
mov
stc
mov
mov
jecxz
inc
jmp
mov
jbe
gs
stc
xchg
pop
test
adc
pop
clc
xor
lea
mov
lock
and
testb
adc
in
hlt
xchg
jl
cmpsb
outsl
movsl
bnd
jbe
push
bound
dec
adc
fmuls
mov
out
loope
fs
aaa
cmp
stc
xchg
and
and
mov
fs
dec
je
pop
mov
dec
test
pop
in
out
jg
into
and
rorb
sbb
mov
and
sbb
push
test
pop
loopne
sbb
rclb
mov
clc
test
scas
inc
push
and
fidivl
and
mov
test
popf
or
push
or
pusha
int
ljmp
adc
test
fnclex
xor
mull
in
jbe
rep
inc
test
pop
mov
sub
int
scas
in
adc
and
push
pop
lods
dec
mov
xchg
je
pop
dec
and
insb
idivb
into
cltd
sbb
or
les
mov
gs
pop
mov
into
push
adc
inc
mov
gs
push
mov
shll
dec
lret
and
pop
pushf
scas
xor
cltd
jae
sub
dec
int3
iret
ja
insl
pop
daa
icebp
aad
ja
jl
lahf
sahf
sub
sbb
cmc
jo
push
out
add
fsubrp
fildl
or
push
dec
xchg
imul
std
mov
xor
jge
inc
xchg
cmp
sbb
xor
lods
dec
push
cmp
xor
ficoms
push
sub
lret
add
mov
dec
mov
push
push
push
ret
push
sbb
adc
pusha
fcoms
cmp
mov
xacquire
and
add
movsb
stc
jg
ret
dec
shrl
sub
das
sub
into
pop
in
mov
leave
or
xchg
push
movsl
ds
lock
sub
xlat
lock
sarl
xlat
dec
dec
or
sbb
xor
scas
adc
push
add
adc
adcb
gs
inc
ss
rcr
and
mov
addl
push
adc
xor
push
or
aad
js
pop
mov
push
jge
jo
jge
and
xchg
dec
dec
lea
mov
sbb
clc
mov
addr16
data16
cli
adc
mov
lock
icebp
repnz
ljmp
mov
pop
pop
rorb
cvtdq2ps
pop
decb
xchg
shrl
inc
mov
ret
pop
pop
jmp
loop
mov
movsl
cmc
push
push
xor
or
inc
pop
jmp
ficoms
insl
fwait
or
xor
loopne
rcll
xchg
divb
pop
sar
jp
mov
pop
jmp
cmpsl
xor
and
dec
shlb
lods
xor
add
dec
hlt
stos
mov
push
andl
lret
test
cmp
mov
insb
fwait
push
or
sti
cmpsl
pop
adc
xor
mov
stc
cmp
ja
loopne
pop
jne
call
and
mov
je
inc
push
and
mov
add
pop
xor
imul
xchg
arpl
das
xchg
leave
adc
out
inc
lock
push
cmpsb
fldl
sub
push
cli
out
sub
mov
jmp
push
dec
sub
adc
mov
movsb
cwtl
mov
push
adcl
subps
in
fmull
test
jmp
filds
in
shrl
pop
repnz
loop
push
mov
dec
pushf
int
pop
jge
lret
or
in
outsl
in
clc
rorl
lret
into
xchg
aas
xlat
xchg
dec
in
or
in
sub
jnp
ja
repnz
cmp
int
stc
jmp
popa
pop
xchg
cmp
int3
xor
outsb
sub
add
sub
mov
mov
jnp
jp
shll
xor
int3
cmp
test
add
mov
je
push
aas
es
fidivs
push
and
outsb
cwtl
test
iret
lea
xor
idivl
lods
andl
fcomps
mov
fisubl
scas
sub
push
sbb
call
pop
in
push
mov
add
sub
mov
mov
jg
cmc
cmc
call
add
mov
jnp
mov
mov
cmpl
push
push
ret
in
mov
jns
mov
push
xchg
sbb
lret
lea
and
or
cmp
in
lods
jb
lods
adc
jbe
lock
mov
mov
jg
stc
in
mov
adc
xor
mov
js
jae
imul
jmp
push
mov
pop
cmp
test
ret
or
sarl
cmp
mov
xchg
fisubs
inc
bound
pop
jns
ret
xor
adc
push
cld
jno
test
data16
mov
addl
sub
mov
or
jmp
inc
stc
and
xlat
and
bound
dec
aaa
inc
sti
lock
push
scas
pop
lods
push
test
mov
out
adc
inc
pop
mov
sub
stos
je
mov
fisttpl
push
arpl
out
imul
mov
xlat
and
and
rcl
mov
addr16
loop
test
push
or
sub
push
test
ret
pusha
push
xchg
jb
inc
jp
int3
mov
xchg
and
inc
cmp
dec
jb,pn
fimuls
sub
jle
inc
fstpl
jbe
jbe
out
repnz
mov
jnp
mov
fs
mov
push
mov
mov
push
test
lcall
push
outsb
dec
loop
into
cmp
das
fimull
inc
mov
and
ss
sbb
mov
data16
add
es
insb
push
rcl
mov
xchg
and
scas
and
test
loop
xor
mov
xchg
cmp
int
or
int3
jl
imul
out
mov
push
ds
pop
frstor
sub
lds
ret
xchg
adcb
fwait
stc
dec
test
xchg
xchg
mov
push
cld
xchg
mov
sbb
adc
int3
int
loopne
lods
add
jmp
or
pusha
pop
out
arpl
sarl
xchg
leave
adc
mov
mov
pop
pop
mov
xor
test
cmp
xor
scas
pop
fnstcw
jae
mov
ds
in
adc
push
push
mov
lcall
mov
int
fdiv
cli
clc
push
icebp
mov
push
inc
movl
pop
insb
insb
es
xchg
int
jmp
pop
cwtl
push
add
adc
dec
stc
add
cltd
ds
pop
in
fcompl
enter
mov
sbb
loope
shrb
je
jp
ds
outsb
jl
sbb
test
xchg
lea
insb
mov
fadds
out
scas
jno
sbb
fincstp
push
in
jmp
aad
jno
pop
add
imul
in
mov
loopne
and
jns
movsb
mov
jbe
adc
push
jmp
data16
push
mov
push
pop
pushf
mov
push
orl
lret
push
push
lds
mov
pop
inc
inc
imul
imul
adc
and
push
sarl
ds
in
sub
and
in
mov
andl
je
jmp
adc
aas
xchg
mov
push
mov
xchg
dec
mov
mov
jae
xchg
push
xchg
sbb
dec
jbe
ror
mov
lods
pop
out
ror
mov
lret
add
clc
xchg
in
repnz
jo
cmp
mov
fstl
pop
and
xchg
rcrl
inc
leave
and
and
jmp
mov
add
xor
pop
pusha
adc
fadd
or
enter
cmp
negb
stos
sub
decl
orb
xchg
rcr
sbb
mov
test
or
mov
cmp
or
pop
fucomi
jb
dec
mov
cmp
jb
sbb
stc
mov
fldt
cmp
out
sbb
test
and
xor
sbb
lock
inc
push
jno
pop
testl
xor
fmull
lock
adc
roll
shll
pusha
enter
nop
aaa
xchg
mov
dec
test
cmpsb
mov
cmp
js
mov
mov
jecxz
sbb
add
mov
inc
adc
push
sarl
hlt
sbb
cmp
inc
sbb
ljmp
das
mov
negl
insb
or
jbe
jb
mov
imulb
stos
or
rcrb
mov
xchg
or
rol
and
cmc
dec
and
push
mov
std
pop
scas
mov
jno
mov
xchg
cmpsb
xchg
arpl
incl
test
iret
xor
dec
mov
cmp
ret
test
js
sub
mov
mov
stos
stos
xchg
addl
jp
adc
dec
xchg
adc
add
mov
dec
sbb
sbb
test
cmp
dec
bound
push
lcall
adc
jno
hlt
xchg
pop
lods
outsl
sub
push
aam
in
hlt
jae
jl
xor
and
mov
cli
mov
hlt
vhaddps
dec
cli
pusha
addr16
enter
insb
add
or
insb
sbb
lods
adc
mov
pop
cmp
mov
jmp
mov
popf
iret
push
sbb
scas
add
pop
jmp
int3
ja
or
jmp
fstpl
cmpl
pop
mov
sub
scas
enter
fs
in
outsl
enter
rcr
mov
push
test
cmp
cmp
std
mov
loop
leave
in
pop
and
push
mov
popf
rcrb
repnz
and
lret
loope
sub
ret
pop
gs
sbb
leave
pop
or
mov
insb
xor
icebp
rcll
inc
xchg
out
out
gs
inc
rcrb
mov
adc
pusha
jne
adc
jg
mov
js
push
adc
push
pop
jecxz
mov
cld
fldt
mov
pop
gs
testl
pop
xchg
stos
js
push
sub
or
mov
jbe
aad
xchg
pop
int
ficompl
xorl
ffree
mov
aas
leave
and
ss
in
sbb
outsl
or
xlat
fwait
push
mov
xchg
adc
add
sub
mov
and
fcoms
sarb
sub
mov
cmp
fldcw
dec
sbb
mov
xor
push
ret
sub
outsl
enter
loope
lds
cmpl
mov
or
adc
or
loope
sbb
pop
mov
push
loopne
push
sbb
pop
stos
sbb
in
add
mov
push
imul
shl
push
or
cli
push
push
sub
mov
out
rcrl
push
sub
mov
push
loop
mov
fwait
lods
jb
push
notb
and
loopne
out
cmpsb
popa
hlt
int
in
in
clc
push
imul
mov
xor
sbb
push
movups
xor
mov
or
andl
cmp
gs
push
test
scas
inc
subl
dec
xchg
iret
mov
cmp
push
jno
push
int3
adc
xlat
or
ret
add
leave
xchg
cli
das
cmp
ss
maxps
outsb
sbb
xor
fdivl
out
roll
loop
fisttpl
pop
and
stos
and
sub
lea
iret
pop
mov
aaa
insl
cmp
imul
pop
in
insl
cmp
jmp
inc
test
cltd
xor
cwtl
inc
ja
mov
es
jmp
cltd
fadd
nop
push
rol
jbe
pop
daa
or
fmull
popa
pop
aad
cmpsb
fucom
mov
call
mov
mov
pop
pop
sahf
les
popa
adc
cmp
pop
rcrl
jmp
shl
dec
mov
shll
dec
mov
jae
in
arpl
mov
adc
mov
add
dec
or
add
xchg
ja
scas
fadd
push
aad
push
inc
or
ret
add
sub
out
jb
mov
mov
std
shl
fisubrl
lret
jbe
pop
dec
loop
push
xor
cld
stos
and
and
addb
sub
add
mov
out
push
xlat
in
jnp
push
mov
cwtl
or
leave
inc
mov
xchg
fwait
xor
jns
test
popa
out
lods
and
mov
mov
mov
scas
add
in
xchg
adc
fidivl
imul
mov
mov
test
fsubs
adc
cmc
jne
sahf
into
fisubl
hlt
sub
lea
sbb
outsb
fwait
loopne
shrl
out
adc
aad
bound
sub
mov
inc
mov
fcmovu
sti
push
mov
out
out
xor
mov
xchg
dec
push
xchg
fsubl
sbb
daa
cmc
popf
lods
out
pop
mov
inc
push
ret
mov
add
hlt
push
cmpsb
lret
aad
xor
frstor
flds
rcrl
cmp
lds
insl
jecxz
push
cmp
mov
add
aad
ds
imul
xchg
mov
sbb
lods
xchg
inc
pop
into
stos
and
xchg
ljmp
cs
popa
sbbl
dec
loope
jbe
mov
cltd
adc
mov
lock
push
adcb
mov
mov
push
sub
test
rcll
test
out
psrad
fdivrl
cwtl
add
or
push
and
loop
adc
movsb
jae
test
jns
sbb
jg
les
dec
rclb
call
adc
lcall
mov
jns
adc
add
pop
into
aam
test
adc
dec
or
jmp
sub
pusha
pop
loopne
fmuls
sbb
push
dec
cmp
mov
xchg
cmp
negl
xor
xchg
xor
jo
divl
mov
adc
lea
lahf
push
in
push
outsb
sbb
inc
mov
imul
test
scas
into
sbb
adc
int3
scas
push
mov
test
test
adc
iret
sbb
push
or
cltd
jmp
call
sbb
icebp
mov
push
push
in
dec
dec
setle
test
inc
daa
or
stos
cmp
repz
push
jb
sti
mov
int
and
or
xchg
jae
and
lods
int
mov
sub
xchg
fnstcw
xchg
hlt
clc
sub
mov
sbb
inc
mov
or
ds
dec
mov
outsl
decb
cmp
stos
add
inc
in
adc
mov
mov
dec
mov
pop
aas
or
mov
add
fucomi
sub
mov
jle
lods
rolb
dec
add
enter
mov
sub
mov
mov
ret
in
jmp
mov
sub
mov
sub
and
lret
dec
fsubrs
mov
or
cmpsb
sbb
mov
sti
pop
scas
xchg
fnsave
mov
pop
jmp
mov
mov
idivb
outsl
xchg
pushf
push
xlat
push
or
pop
inc
stc
mov
xor
jns
test
mov
push
lods
lods
imul
or
sbb
push
or
test
cmp
and
push
and
sub
xchg
aad
ds
cmpsb
ljmp
sarl
jbe
in
in
inc
xor
lods
mov
popa
pop
mov
xor
lods
imul
cmpsb
pushf
pop
and
add
out
mov
fcom
xor
test
cmpsl
cmp
nop
ret
pop
mov
mov
mov
stos
aad
lcall
push
rclb
mull
sbb
mov
sub
fwait
sbbl
and
pusha
in
mov
nop
xor
mov
mov
push
clc
loope
mov
lret
xor
push
ljmp
and
andb
ret
xor
sbb
mov
mov
fisttpll
inc
jl
cmp
inc
sub
test
cmp
sbb
xchg
sub
dec
cli
xlat
imul
popf
sub
lret
lahf
mov
xor
into
pop
mov
cmp
icebp
cmp
and
xchg
mov
sub
rolb
and
pop
xchg
mov
cs
and
ss
sbb
pop
sub
inc
out
stc
and
fisubrs
enter
das
add
xchg
jae
inc
push
fdivrs
lahf
lock
add
movsb
ds
loope
loop
shl
icebp
nop
mulb
sub
cmp
les
mov
dec
xor
dec
mov
divps
ja
in
dec
xchg
daa
mov
fisubl
dec
lcall
mov
lea
in
jle
jbe
sub
or
nop
pop
push
loope
inc
cmp
pop
fcomp
xor
cwtl
adc
jb
sub
sbb
in
push
pop
jmp
arpl
jmp
add
push
cmp
sti
xchg
int
cmc
fidivl
stc
jns
push
adc
outsl
aam
pusha
pop
xorb
insl
push
xchg
mov
into
add
loopne
inc
mov
xor
jbe
push
orl
add
sti
cmp
jbe
push
jno
sti
test
jae
fbstp
je
xorl
addr16
adc
sub
scas
out
sub
jne
xor
push
jl
pop
xor
lret
lcall
xor
mov
sbb
out
inc
addl
fs
xchg
mov
fistl
mov
mov
and
mov
ja
cmpsb
mov
stos
jae
pop
inc
loope
cmp
mov
mov
dec
test
and
jo
das
mov
cld
inc
xor
js
adc
dec
cmp
dec
sub
mov
or
popf
xlat
cwtl
and
push
js
into
mov
sbb
dec
xor
push
arpl
lods
popf
int
xchg
test
jnp
lahf
enter
pop
xchg
outsl
pop
scas
inc
testb
xchg
sbb
add
aas
bound
xchg
mov
jp
hlt
jb
movsl
or
mov
add
mov
imul
add
test
insl
xor
popf
imul
es
sub
jno
in
les
outsb
push
and
ret
xor
sahf
rolb
je
jg
adc
pushw
mov
mov
and
mov
mov
mov
in
ljmp
ja
and
lret
cli
and
jge
sbb
xchg
dec
cmp
rcrl
sti
dec
das
mov
cmpsb
test
and
xchg
fidivl
cmp
cltd
sub
mov
add
imul
cwtl
call
pop
aad
cmpb
ljmp
sbb
and
jp
inc
loopne
cmpsl
or
cs
lods
aam
adc
call
push
mov
leave
in
inc
xor
xchg
push
arpl
or
or
and
mov
mov
lock
xor
sbbb
xor
cltd
fiadds
cmp
mov
test
jae
dec
xchg
les
lea
clc
xor
imul
jp
push
bound
ficompl
xchg
out
pop
push
xchg
mov
clc
int3
testl
rclb
stos
outsl
and
mov
outsb
hlt
mov
dec
xor
sub
jl
ss
xor
cmp
push
mov
cmp
adc
enter
repz
adc
xchg
pop
add
fildll
loope
lock
mov
sub
sub
ret
mov
subb
fisttpl
adc
cs
cltd
fildll
dec
setbe
fmul
adc
bnd
jne
sbb
pop
mov
mov
push
adc
and
xor
push
cmpsl
ja
das
cmpsb
aad
xchg
mov
pushf
mov
pop
js
out
pop
loop
dec
jnp
pop
push
jle
sahf
cmp
dec
shll
mov
mov
sarl
xor
xchg
sti
rorb
adc
test
inc
scas
push
out
sbb
vorpd
jp
aad
cwtl
rclb
into
aad
jb
xor
lcall
sub
icebp
int3
pop
sbb
into
xchg
jge
insl
lret
imul
mov
lahf
jg
jp
je
stc
neg
rcrl
mov
pop
xchg
fsub
stos
xor
cwtl
outsl
and
cmp
inc
adc
or
xor
push
xchg
jns
push
xchg
sbb
repz
pop
xor
mov
pop
data16
add
orb
scas
cmp
stos
add
or
cmp
pop
add
pushf
xchg
xchg
cmp
repnz
pop
cmp
mov
ret
fnstenv
cli
add
push
jmp
pushl
push
adc
push
sub
jno
nop
mov
jp
cmp
cmp
mov
push
adc
mov
movsl
test
cwtl
sti
adc
mov
mov
cmp
es
or
scas
dec
cmp
aad
fnstsw
add
add
mov
lret
jge
int
adc
stos
add
mov
cmc
scas
in
out
sub
cld
sbb
cmp
dec
add
outsl
xchg
dec
fistl
mov
push
sbb
sbb
xchg
jno
std
dec
pop
shll
int
xor
lahf
cmp
add
mov
dec
in
aam
adc
int
or
in
mov
stc
shll
lahf
sarl
sbb
popa
push
pushf
sbb
pop
pushf
mov
loopne
dec
jp
cmp
loop
push
sub
mov
dec
xchg
rcll
push
mov
sub
mov
push
cmpsb
pop
and
or
ds
jl
add
dec
les
mov
jl
adc
and
add
sbb
add
inc
lods
mov
mov
addl
xchg
shl
mov
sub
sub
sbb
bnd
imul
std
inc
inc
nop
mov
jle
pop
dec
int
mov
jnp
rcrl
mov
addb
sbbl
xor
cmp
mov
cmp
lret
sbb
stos
mov
inc
xchg
xchg
cwtl
out
inc
inc
adc
mov
int
jbe
mov
call
ds
cmp
notb
jge
inc
aam
sarb
daa
push
aaa
jmp
pop
push
cmp
sub
adc
in
xor
pop
lds
cmpsb
aad
sub
xchg
emms
into
adc
lret
int3
cmpsl
or
sbb
lods
sub
or
add
mov
pop
fisubs
sub
push
adcb
cmpl
dec
mov
mov
popf
sbb
xor
cmp
fildl
frstor
sbb
jge
xchg
pop
xchg
outsl
fcoms
call
outsl
in
push
lret
cmp
int
test
push
push
mov
pop
add
push
call
fisubl
inc
cmc
sub
xor
mov
mov
inc
ret
mov
mov
rorl
arpl
adc
push
adc
sbb
lods
dec
les
jecxz
sub
or
mov
sti
outsl
xchg
inc
dec
xchg
lahf
fildl
js
jae
in
sbb
mov
mov
ret
jmp
push
sbb
rcrl
adc
adc
outsl
fiaddl
std
adc
pop
add
xchg
jp
xlat
adc
out
shlb
lods
and
xor
out
xorb
xchg
sbbl
mov
faddl
es
mov
sbb
inc
sti
iret
xor
inc
adc
push
insl
fmull
mov
std
or
mov
dec
scas
mov
push
jle
ret
andb
icebp
jne
push
lds
sub
or
jle
div
sub
and
mov
ja
fistps
mov
push
mov
pop
or
inc
lds
stos
or
adc
repnz
mov
cmp
cwtl
pop
int
jbe
mov
dec
xchg
stos
mov
add
mov
pop
fldenv
movsl
and
sahf
fucomip
lods
jge
pusha
and
mov
lret
sahf
insl
lods
mov
lret
and
add
xchg
scas
adc
inc
mov
cmp
in
shrb
pop
adc
cli
push
rcll
movsl
sub
jg
mov
xchg
in
aas
push
mov
cmp
push
lcall
pushf
push
data16
imul
pop
test
add
push
into
sbb
je
xchg
add
data16
sub
pusha
adc
les
sbb
xor
xor
test
stos
lock
xchg
add
inc
mov
pop
cmpsb
outsb
ss
add
pop
mov
ja
pushf
fstl
pop
xor
pop
inc
cwtl
andl
dec
pop
mov
bound
insl
mov
jo
jno
jne
es
rorl
popa
mov
push
insl
js
or
xchg
lahf
xchg
int
andl
pop
bound
mov
jo
inc
pop
insb
outsb
mov
insb
fsub
ret
paddq
mov
int
incb
in
test
pusha
insl
mov
stc
stc
and
ret
sbb
test
outsl
insl
mov
dec
pop
outsl
popa
out
sub
add
mov
mov
cmp
in
add
pop
mov
les
dec
pop
pop
inc
pusha
mov
frstor
and
pop
clc
xsavec
cltd
popa
sbb
lods
cli
bound
lcall
in
fldenv
outsl
incb
cs
nop
mov
ret
jge
push
mov
xchg
xchg
adcl
ds
fdiv
int3
push
ficoms
aaa
sbb
lret
xchg
xchg
outsb
aaa
cli
aam
pushf
jp
push
adc
and
das
sbb
sti
xchg
xor
sbb
jle
jns
jae
adc
mov
loopne
cmpsl
mov
pop
dec
cmp
or
popf
lds
rolb
jecxz
push
int3
pop
ja
cmpsb
fs
addl
cmc
adc
psubq
je
push
scas
xchg
xchg
test
lods
xor
mov
outsl
pop
add
jno
lea
xor
jle
fcoml
pop
dec
ret
insb
fs
xchg
xchg
ds
leave
xchg
hlt
aam
test
mov
andb
sbb
xlat
arpl
mov
shll
mov
mov
ret
std
cmp
jbe
mov
push
repnz
test
icebp
insl
aas
cmp
sbb
loopne
aaa
cmp
daa
jns
mov
sbb
push
scas
add
je
push
push
sbb
pop
loopne
jne
rcll
sbb
mov
push
lret
jbe
hlt
repnz
jmp
cmp
xchg
lock
aas
sahf
scas
test
pushf
xchg
sti
cmp
ja
cmp
int3
jne
insl
pushf
push
addr16
out
frstor
scas
int
mov
mov
imul
xchg
lret
gs
testl
xchg
lcall
das
xchg
pop
popa
jbe
or
push
mov
jno
loopne
push
lcall
ja,pn
outsb
movsl
cli
cmp
xchg
or
push
mov
jg
loopne
adc
jne
pop
scas
sbb
icebp
out
add
xor
inc
sahf
add
mov
cwtl
repnz
mov
icebp
popa
dec
cmp
xor
pop
dec
sbb
out
jmp
les
hlt
gs
add
pop
repnz
in
repz
mov
or
stos
aad
jne
pushf
pop
jmp
and
add
jne
or
sub
mov
js
stos
imul
add
mov
pop
cltd
inc
hlt
leave
jno
lea
lock
lret
je
inc
stos
addr16
pop
shll
pop
add
mov
sbb
cmp
push
and
dec
mov
adc
pushf
xorl
lret
cmp
in
out
gs
dec
mov
jns
add
xor
jg
arpl
inc
out
in
lret
or
fdivr
bound
dec
sub
fistl
xchg
mov
xchg
lcall
mov
fldt
je
sarb
sbb
mov
push
push
or
mov
adcb
pop
psllq
add
cmp
mov
insl
mov
int3
lret
inc
lret
fmull
pushf
fs
jle
sbb
add
mov
cli
sub
prefetch
push
inc
jecxz
stc
fisubs
push
xor
cmpsb
xchg
jmp
push
pushf
dec
mov
int
loope
sub
inc
adc
xchg
jge
ret
jnp
mov
jecxz
mov
push
mov
push
cmp
and
arpl
test
ss
ficompl
fisubrs
xchg
mov
inc
es
movsb
sbb
fs
cmpsb
leave
xchg
nop
push
mov
mov
js
sub
stc
or
hlt
jno
repz
xchg
sti
push
add
mov
outsb
ss
rsm
lods
adc
cmp
arpl
adc
imul
pop
popa
xchg
into
fcomip
xor
loopne
addr16
dec
add
das
push
cli
jmp
mov
xchg
sti
loope
mov
scas
fnstsw
jnp
loope
dec
mov
lods
ss
cmp
push
and
mov
mov
sti
mov
movsl
jbe
or
cmpsl
jne
popa
mov
pop
stc
push
xchg
clc
mov
cmp
outsl
test
pop
mov
and
jns
adc
xchg
or
sbb
outsl
jmp
cmp
bnd
mov
test
jae
mov
mov
mov
push
lds
lea
rorl
adc
hlt
pushf
cli
pop
rcrb
dec
pop
dec
dec
mov
jnp
test
xlat
je
xor
xlat
inc
or
mov
jge
jge
jb
lret
sub
adc
adc
or
xchg
std
xchg
inc
out
add
push
shld
loop
jp
pop
outsl
stos
cmpsb
lock
aas
mov
aad
and
mov
push
jecxz
repz
mov
aad
pop
and
or
mov
popa
out
movsb
push
push
sbb
and
cmp
cmp
mov
xor
notb
gs
xchg
push
mov
push
jno
lcall
sbb
test
cmp
pop
ds
xchg
cmp
out
inc
mov
mov
cmp
cs
sbb
in
bnd
jle
xchg
in
jae
dec
pusha
push
cmp
out
lret
inc
sub
gs
outsl
dec
aas
cli
sub
mov
in
and
push
push
scas
mov
push
jae
jo
pop
and
and
dec
mov
stos
cmp
out
pop
cwtl
enter
jbe
and
dec
leave
dec
aad
in
dec
mov
lcall
stos
xor
xchg
inc
sbb
push
xchg
push
fldt
and
add
push
jl
sub
repz
das
insl
mov
stos
lret
out
std
clc
cmp
push
cmp
out
mov
mov
lret
dec
fnstenv
out
mov
and
mov
movsl
or
and
adc
and
jnp
add
je
cmpsb
cmp
sub
adc
jmp
dec
fbstp
inc
pop
cmp
jno
mov
adc
xchg
pop
in
fs
inc
sbb
js
mov
push
test
and
add
mov
pop
mov
mov
mov
cmp
sub
fistpll
cltd
xchg
or
xlat
push
bound
xor
cmp
fcmovnbe
out
cs
fdivs
mov
addb
xchg
jnp
jle
and
fsubp
ret
in
sub
pop
popa
in
fimuls
cld
int3
pop
or
jno
mov
ret
mov
lods
inc
lret
aam
adc
mov
outsb
cmp
push
lahf
fstpl
mov
jno
mov
push
or
mov
cmp
sub
add
repnz
out
lahf
inc
mov
add
sbb
rcl
mov
bnd
push
lea
pop
fsubs
mov
sbb
stos
jo
sub
jne
lods
nop
mov
lahf
mov
jnp
pop
pop
inc
lahf
testl
fidivrl
add
out
out
rcrb
xchg
pop
js
imul
jns
in
test
xor
sti
cmc
mov
sbb
aad
mov
xchg
pop
pop
out
cmp
idivb
pop
out
sbb
mov
daa
or
bnd
push
in
pop
sub
xchg
pop
fiadds
inc
scas
das
stc
adc
cli
addr16
push
lds
cmp
into
xchg
mov
jecxz
mov
fiadds
mov
insb
shlb
dec
pop
xchg
mov
das
andb
push
add
mov
dec
xchg
mov
push
cmp
imul
sar
sub
fildl
inc
test
cmp
es
std
inc
test
scas
in
cwtl
out
decb
dec
pop
test
stos
push
jg
inc
jno
adc
sahf
es
cmp
pop
cwtl
cmp
sti
push
and
sbb
mov
roll
icebp
mov
movsl
ljmp
add
test
outsl
pop
inc
jb
addr16
les
rcr
mov
inc
rcrb
hlt
ljmp
xor
and
cwtl
sbb
imul
sbb
and
add
nop
enter
xchg
in
jl
aaa
pop
movsl
or
jns
xchg
cmp
mov
xor
xor
cltd
mov
test
movsb
imul
bound
gs
mov
xor
jnp
jne
out
inc
popa
push
pop
mov
bound
add
lcall
lret
div
jmp
decb
mov
sub
lret
sbb
inc
xchg
arpl
cmp
adc
jo
cmpsl
pop
jne
mov
adc
push
jl
fidivl
addr16
jp
shll
iret
pop
sbb
in
inc
fsubp
lahf
stos
cli
xchg
xchg
imul
dec
divl
imul
arpl
popa
pushl
test
mov
lcall
int
mov
icebp
push
and
cmp
sbb
mov
test
les
enter
adcl
mov
cli
lcall
push
ljmp
cmp
and
hlt
stos
xor
lret
stos
adc
push
into
jno
adc
push
xor
daa
push
fs
addr16
sub
sti
arpl
add
imul
clc
pop
int3
clc
mov
xlat
cwtl
push
inc
xchg
fcompl
mov
mov
fisttpll
add
in
xor
inc
in
jae
cmpsl
outsb
pop
jle
movsl
iret
das
in
pop
jmp
mov
in
mov
adc
rcll
pop
fists
stos
xorl
jmp
pushf
jns
in
ficomps
ret
inc
lds
adc
cmp
mov
in
stos
loopne
jmp
mov
dec
sbb
daa
pushf
aaa
imul
mov
fstpl
xchg
sbb
lcall
xchg
ljmp
and
mov
rsqrtps
cmc
ret
in
lcall
push
and
add
cmpsl
inc
sbb
stc
inc
test
div
shll
sbb
or
or
mov
sahf
fs
adc
xor
mov
or
repz
mov
mov
shlb
dec
bound
fisttpl
cmpsb
pop
stos
mov
lea
push
xchg
ljmp
jb
sub
stc
dec
bound
pop
cmp
jecxz
cwtl
inc
lock
push
das
fbstp
mov
cmp
add
jno
cltd
and
iret
loope
movsb
mov
shlb
idivb
nop
adc
lret
std
insb
mov
es
es
sbb
sbb
aaa
nop
rol
jp
add
pop
inc
mov
jns
mov
stc
jg
sbb
pop
loop
out
leave
aaa
xchg
lods
add
repnz
in
xor
jno
xor
cwtl
jp
and
jb
in
dec
shll
push
xchg
push
leave
add
movsb
pop
incl
inc
jmp
dec
outsb
mov
ja
popf
dec
lahf
mov
cmpsb
sbb
mov
out
push
and
iret
jmp
xor
push
into
mov
mov
or
js
cmpsb
sub
in
xchg
sti
bound
jae
cmpsb
orb
adc
sbbl
lahf
roll
outsb
sbb
fs
rolb
xorb
sti
mov
inc
jmp
rcr
push
sbb
ret
std
clc
loop
xchg
mov
or
out
cmp
cs
popf
lea
or
sub
inc
cltd
xchg
ljmp
scas
fcomp
js
jp
jo
sbb
jge
inc
cmpl
pop
mov
sub
dec
in
pop
jnp
popf
cmp
insl
dec
pop
mov
and
mov
inc
imul
gs
lret
popf
loope
push
and
arpl
mov
inc
test
divb
repz
sub
jnp
insb
daa
jo
mov
mov
popf
loopne
in
mov
jne
testb
and
and
dec
and
push
fsub
add
or
xchg
push
adc
cmc
ret
xchg
out
movsb
xchg
call
adc
inc
lahf
cmp
mov
rcl
pusha
cmp
add
push
pop
mov
sub
dec
lret
sar
push
je
out
jle
jnp
shlb
pop
mov
mov
cmp
es
imulb
adcb
push
mov
mov
mov
pushf
sub
push
adc
fiaddl
cmp
shlb
jnp
cmp
daa
adc
loopne
and
add
pop
icebp
cmpl
inc
in
test
pop
insl
insl
shl
push
add
jns
arpl
test
xor
inc
push
sbb
mov
bound
dec
int
dec
jmp
out
add
inc
sbb
dec
out
ret
mov
adc
inc
mov
in
sbb
loop
js
add
add
test
xchg
jo
adc
mov
decb
pop
imul
xlat
mov
or
ret
std
lods
in
fdivl
or
lcall
stos
or
xchg
mov
fucompp
adc
fwait
je
data16
movsb
push
dec
test
pop
aam
fstl
testb
imul
xchg
dec
push
loope
add
aaa
test
adc
pushf
andnps
addr16
cmpsb
pop
sub
cs
mov
mov
add
dec
sbb
or
pop
adc
and
push
repz
out
inc
adc
and
mov
fcmove
adc
les
add
mov
mov
pop
add
inc
cmpb
fs
xor
xorb
aas
iret
test
xchg
adc
mov
jns
test
xchg
ficomps
jmp
mov
xlat
cmpsb
inc
insl
pop
ret
ljmp
loopne
ret
pop
mov
mov
andb
rdtsc
pop
cwtl
mov
xor
sbb
cmp
push
iret
pop
sahf
lahf
fildl
movsl
das
jns
popf
hlt
mov
adc
cmp
xlat
jo
jae
dec
pushf
push
xchg
or
adc
mov
aad
push
in
imul
in
fwait
imul
mov
mov
aam
sbb
movsb
xlat
cmp
leave
sub
cli
sbb
jb
cmp
idiv
dec
xor
popa
xchg
xchg
xlat
and
imul
jmp
sbb
movsl
mov
jns
jnp
add
lahf
jge
test
in
xchg
out
out
lahf
add
dec
jbe
insb
aas
test
cwtl
aad
loop
push
or
push
outsb
pusha
lds
adc
bound
out
shlb
pop
insb
push
sti
cmc
nop
xchg
imul
dec
out
lret
add
sub
adc
xchg
inc
jb
cmp
xchg
ret
shr
iret
xchg
outsb
mov
jbe
jmp
imul
insl
jnp
stos
or
fwait
int
cmp
push
inc
dec
jmp
add
leave
pusha
mov
cmp
or
int
cmpsl
push
dec
outsl
out
icebp
xor
push
loopne
pop
sbb
adc
mov
pop
add
push
into
jae
push
xor
mov
scas
iret
aas
cmpsl
inc
out
out
dec
push
int
pop
ss
in
add
mov
sarb
or
scas
cmpsb
jg
mov
adc
mov
shrb
xor
inc
mov
or
sbb
ds
adc
sahf
sbb
jae
dec
cmpsl
mov
imul
push
sbb
inc
ret
inc
sub
pusha
pop
lcall
loope
push
stos
jle
imul
xchg
lock
in
sub
pop
push
ds
lods
mov
cmp
lret
sbb
movsb
jnp
pop
push
shlb
mov
sbb
xchg
or
loopne
test
push
in
outsb
xchg
enter
push
jmp
adc
cmc
add
clc
dec
jbe
add
mov
add
and
inc
mov
xor
jmp
mov
inc
xor
mov
int
sarl
mov
addr16
stos
xchg
scas
push
mov
fdivs
test
dec
movsl
sub
push
hlt
pop
int
jg
push
mov
or
add
jmp
aaa
shll
push
leave
pop
repz
jne
adc
jb
jno
fs
sub
pushf
cmpsb
push
inc
xchg
ss
mov
mov
add
test
push
or
std
cli
cltd
ficoms
dec
cmp
addr16
push
aas
lret
lahf
aad
inc
adc
xchg
loopne
sbb
les
mov
out
out
fdivrp
test
call
xlat
in
stc
nop
ds
loop
test
mov
mov
fstps
cld
test
shlb
inc
mov
mov
lock
shrl
cmpsb
sub
imul
or
jl
sbb
pop
push
out
into
sub
mov
lds
inc
mov
lods
dec
popa
pop
sti
ljmp
imull
sbb
xor
pop
lret
bound
inc
das
test
test
pop
pop
scas
push
xchg
les
into
jle
jg
in
cmpl
data16
sahf
mov
dec
mov
in
out
or
pop
fildll
pop
into
adc
shll
push
push
or
push
out
adc
icebp
lds
jmp
rclb
lods
mov
test
push
rorb
push
sub
jnp
cmp
mov
stc
cld
js
cmc
xor
lods
pop
mov
xor
sbb
push
mov
or
and
popa
ds
jmp
mov
enter
imul
xor
inc
cmpsl
inc
icebp
cmpl
inc
jae
repz
cwtl
test
ror
xchg
add
xchg
subb
test
or
mov
mov
mov
mov
adc
cmpsl
flds
inc
mov
mov
adc
loopne
add
adc
push
dec
ljmp
div
mov
pop
cld
jb
lret
stos
iret
aad
jle
rcr
adc
xchg
loope
ljmp
xor
arpl
aam
mov
jne
fdivr
icebp
cmpsb
add
int
ja
inc
xor
add
push
mov
mov
imull
cltd
out
testb
movsb
and
jae
jno
in
cs
xlat
insb
nop
or
xor
push
sbb
xchg
xchg
jl
ljmp
js
add
cmc
jmp
call
andl
fnsave
pushf
addr16
lods
push
bts
push
clc
mov
repz
rolb
jbe
cmp
cmpsb
fwait
jle
push
es
cmp
mov
cmpb
in
ja
int3
mov
fxch
or
or
mov
cmp
push
sub
adc
shll
lahf
fwait
jecxz
cld
cmp
fdivrl
or
pop
mov
lret
stos
rcrb
push
rcrb
hlt
sub
scas
sub
mov
jne
popa
cmpb
push
sub
inc
cmpsl
and
insb
jecxz
movsl
dec
out
loope
sahf
cmp
ror
test
dec
cwtl
out
insb
sbb
push
jg
add
mov
dec
xlat
lods
push
cwtl
dec
jg
jl
enter
xorl
add
icebp
add
movsb
jecxz
imul
and
xor
jno
rcl
ss
cmp
data16
enter
push
push
outsl
mov
pushaw
ud2
js
aam
dec
xlat
mov
daa
push
mov
mov
das
pop
pop
mov
mov
sbb
jge
and
pop
movsb
hlt
adc
push
aaa
xchg
cmp
call
pop
addr16
ret
add
jge
jne
test
lahf
pop
jo
and
lods
sub
cwtl
add
push
popa
xor
and
mov
pop
sbb
repz
xor
subb
adc
or
adc
dec
xor
iret
adc
cli
dec
sub
ficoml
sbb
lahf
gs
into
push
sbb
cmp
cmp
jle
mov
sbb
stos
in
mov
vmovdqa
out
add
xor
loop
cmp
push
lods
adc
sbb
ficompl
shlb
cmpl
xchg
dec
ja
rclb
gs
push
adc
lea
cwtl
dec
ja
inc
fnstenv
inc
stos
jge
cld
jmp
or
movsl
lods
xchg
add
outsb
or
jns
mov
and
or
adc
icebp
dec
xchg
or
imul
pushf
push
sbb
aas
sbb
cmp
pop
push
push
dec
xchg
add
jbe
cmp
das
mov
dec
movsb
mov
fisttpll
inc
sub
mov
lea
lret
pop
cwtl
mov
mov
ja
jo
push
push
xor
js
jne
out
lods
les
mov
jecxz
sbb
dec
adc
scas
inc
clc
xchg
or
mov
nop
orl
sbb
lret
dec
sub
leave
pop
jg
xchg
nop
gs
dec
inc
cwtl
ljmp
shlb
xchg
les
in
push
test
pop
cmpsb
jg
and
mov
daa
movsb
jae
vaddpd
insl
jb
arpl
subl
in
into
sub
push
dec
adc
mov
nop
shrl
sub
ja
arpl
inc
arpl
mov
jb
adc
imul
mov
cmp
xchg
arpl
or
mov
test
pop
or
xchg
mov
cwtl
in
stos
pop
jl
fisttps
xorb
addl
in
add
aaa
mov
sub
adc
mov
outsl
xor
int
xor
sub
aad
sti
dec
mov
jecxz
insl
pop
int
xor
xorb
fs
pop
dec
adc
push
mov
jmp
add
mov
icebp
loop
add
push
jns
mov
jle
test
repnz
movsl
dec
sub
push
mov
sahf
addr16
outsb
lods
sub
push
cmpsb
sbb
fstpl
aad
call
push
xor
cmp
adc
aas
jg
dec
sub
mov
sbb
mov
mov
jb
dec
sub
cmp
push
lea
sub
fwait
mov
je
cltd
fcoml
call
pushf
sbb
shrl
jne
fcom
jl
push
ss
xor
or
jge
bound
testb
ret
jl
rcrl
or
fstp
xchg
mov
scas
fnstenv
mov
and
lret
pop
jb
mov
pop
mov
loope
out
xor
aaa
or
scas
imulb
inc
repz
out
jbe
ja
mov
mov
sub
out
add
cmc
xor
jns
sub
sub
sahf
or
push
jle
sub
pop
xor
jns
or
push
adc
push
sahf
or
jbe
push
sub
adc
jge
insb
mov
pop
ret
cld
pop
cmp
pop
xchg
fadd
cli
or
sbb
or
rorl
pop
mov
mov
stos
mov
loopne
nop
gs
mov
icebp
arpl
loop
aad
rcrb
sub
enter
fwait
ljmp
sbb
add
inc
mov
aas
enter
dec
lods
pop
push
das
add
adc
xchg
divb
mov
jge
stos
jnp
enter
sahf
test
add
dec
mov
sbb
dec
pop
lret
adc
jbe
popf
aaa
repnz
jbe
cli
cmp
scas
iret
inc
ror
push
inc
cmp
push
mov
idiv
lds
outsl
dec
stos
js
cmpsl
repnz
mov
push
int
mov
mov
sbb
ja
es
fxch
mov
mov
hlt
loopne
sub
adc
sbb
mov
stos
fs
xor
js
rcr
jo
push
cmp
cs
inc
aam
daa
add
pop
jns
pop
lcall
insb
fnstsw
test
xor
jecxz
lock
test
mov
lret
and
inc
das
mov
mov
sub
push
or
xchg
xor
push
lea
movsl
dec
push
in
xor
outsb
add
mov
xchg
and
je
and
and
jge
hlt
xchg
add
sbbb
shrl
inc
xor
call
cwtl
je
popa
xchg
dec
aaa
xor
rol
and
mov
jl
pop
adc
cli
xor
mov
cmp
adc
jne
movsl
aad
scas
or
scas
add
into
popa
xchg
push
sahf
cwtl
sub
rcll
aas
arpl
xchg
push
sbb
lds
and
cmpsb
sbb
jp
addl
cltd
lods
loop
jg
jle
add
cmc
gs
and
leave
jl
pushf
add
pop
jl
fcomps
inc
inc
mov
mov
pop
sahf
in
rol
dec
jns
ret
idivl
enter
xor
or
mov
xor
mov
push
push
or
xchg
lret
aam
test
jo
andb
cld
sbb
and
idivb
jle
push
jns
cld
out
add
and
pop
dec
es
popa
sub
or
imul
stos
mov
and
cmp
decl
xchg
ficompl
shlb
ds
fildl
xchg
push
in
sbbb
int3
cwtl
push
icebp
pushf
cmc
lds
sub
sbb
add
or
jge
pop
ljmp
cmpsb
sub
movsb
data16
into
aam
or
out
fisttps
lahf
push
loope
fucomp
lret
xlat
pop
sbbb
mov
mov
cmp
sbbb
addr16
push
push
push
push
sub
rep
out
stc
sti
fidivrs
pop
fisubrl
push
adc
pushf
cmp
pop
cld
mov
push
jmp
das
and
mov
mov
insb
scas
lahf
mov
addr16
dec
daa
xchg
push
pop
stos
les
mov
cmp
adc
les
je
cwtl
into
add
adc
cmp
inc
ja
inc
ror
or
aaa
mov
mov
lods
lea
shrb
popf
jnp
rcrb
inc
xor
push
xchg
mov
jp
je
push
pushf
aad
mov
push
lret
jmp
push
and
fwait
cmp
add
outsb
jmp
imulb
jbe
adc
shlb
jecxz
push
lods
sbb
xchg
loop
rclb
xor
dec
or
xchg
sbb
push
add
cs
sub
inc
stos
out
lods
pusha
insl
inc
mov
pop
ficompl
jl
push
dec
ja
cwtl
aam
addb
xchg
adc
test
or
mov
rcrb
fimull
sbb
mov
call
mov
imul
or
cltd
es
sahf
or
in
inc
ds
add
pop
popa
xlat
mov
push
mov
idivb
fildl
push
inc
push
cmp
push
adc
pop
repnz
and
pop
add
and
in
pop
push
imul
rcr
cmp
ss
mov
fcoms
outsb
dec
cld
push
shrl
xor
cmpsl
add
ret
std
lock
insl
push
push
scas
xor
pmulhw
fistl
iretw
add
addl
insb
mov
fs
loope
mov
jl
fstl
push
add
test
and
jle
sub
leave
in
adc
jg,pn
mov
js
hlt
mov
aas
sahf
dec
xor
scas
pop
dec
dec
pop
cmp
imul
arpl
cwtl
cmp
data16
pop
pushf
jbe
test
scas
and
imul
cwtl
adc
pushl
bound
pop
and
xchg
inc
add
xchg
insl
or
sbb
mov
pop
pop
out
dec
inc
dec
ds
dec
xchg
push
stos
xlat
or
enter
fistpll
movsb
jle
out
add
imul
outsb
add
iret
enter
xor
jmp
push
mov
mov
pop
adc
sbb
sub
adc
inc
mov
jb
mov
stos
nop
dec
jecxz
mov
imul
orl
lcall
add
xchg
adc
mov
inc
ret
aas
xor
mov
aad
sarl
push
push
push
es
test
pop
cmp
popf
fidivs
loop
sub
sub
xchg
sub
aad
cltd
xchg
cmc
cmp
xor
sahf
insl
pop
pop
dec
xor
mov
lock
push
sbb
in
inc
daa
xor
inc
jmp
xchg
test
adc
push
or
xor
xor
xchg
imul
out
push
and
dec
repnz
mov
pushf
and
xlat
insl
pushf
mov
int
bound
xor
fimull
mov
cmp
inc
arpl
ljmp
jecxz
push
push
push
xchg
rcrl
push
jmp
cmp
jnp
xor
and
mov
xchg
jmp
dec
iret
and
popf
dec
clc
pop
mov
insb
test
sbb
cmp
mov
add
jo
lret
xchg
imul
test
push
pop
mov
mov
inc
sti
xchg
idivl
loopne
ljmp
dec
jge
clc
fdivrs
or
das
xor
and
jmp
fnstsw
mov
xchg
in
xchg
fsubr
insl
mov
jecxz
in
xor
pusha
cmp
je
loop
mov
or
push
sub
int
hlt
adc
inc
shlb
fscale
sub
jns
adc
pop
xchg
lahf
aas
cmpsl
xchg
cmp
out
stos
cmp
add
testl
xchg
ret
negb
cli
imul
into
dec
jns
adc
lcall
cmp
xorl
mov
cmpsb
xchg
adc
jg
mov
pop
into
xorb
lret
outsl
and
push
and
cmp
scas
pop
jo
or
test
dec
inc
sub
push
je
rorl
in
push
add
outsb
cmp
cmpsl
outsb
shll
push
test
std
jo
sbb
lahf
jl
clc
jns
test
lcall
mov
fwait
out
out
jo
test
arpl
add
rcl
fwait
mov
in
cmpsl
int
pop
jg
pop
fsubrl
pop
mov
fwait
dec
inc
sar
jge
inc
hlt
sbb
and
sahf
loope
pop
into
push
pop
and
push
add
push
xchg
ret
ret
in
stc
adc
fnstsw
mov
jns
cmpsl
fiaddl
out
jno
out
xor
cmovae
les
mov
or
jo
sar
fiadds
vmread
scas
bound
inc
mov
rcrl
ret
lock
and
mov
test
jge
inc
stc
mov
rorb
inc
in
adc
push
inc
arpl
in
lret
ja
inc
mov
and
jo
cs
jg
adc
js
movsb
sbb
mov
lods
sbb
mov
cmpsl
push
and
leave
clc
push
xchg
pop
cmp
jp
es
call
adc
pop
xchg
cmpsb
call
mov
frstor
in
xor
push
add
inc
push
andl
or
and
out
cs
push
inc
ljmp
xchg
jg
cmpsb
pop
sub
fstpl
cmpl
jmp
inc
push
pop
dec
xchg
test
loopne
inc
cmp
jnp
cmp
xchg
shrb
loop
test
lret
add
dec
mov
xor
ljmp
jnp
orl
mov
pop
test
mov
nop
jnp
fimuls
mov
lret
stc
xor
daa
fnstsw
lods
mov
lret
std
add
popf
cmp
jecxz
fimuls
jnp
dec
mov
cmp
mov
addr16
sarb
out
mov
ja
sahf
adcl
mov
xchg
push
mov
repnz
mov
push
sti
les
sti
out
fidivl
repz
cli
gs
or
jo
cmpsb
paddusb
cld
loop
inc
cmc
and
mov
out
mov
decl
add
arpl
aam
lcall
or
inc
push
mov
mov
xor
adc
pop
pop
pop
repnz
or
sub
out
icebp
lea
cld
jns
xchg
sbb
fstps
mov
arpl
mov
xchg
call
sub
adc
pop
lock
cmpsl
dec
rcll
add
in
xlat
add
jbe
nop
or
flds
shrl
stos
stos
mov
iret
cltd
mov
xchg
dec
test
push
cmpsb
arpl
and
xchg
rcll
out
sub
push
push
out
xor
out
xchg
add
sub
lahf
das
sub
loopne
mov
in
sub
mov
inc
mov
jmp
aam
sub
sub
pop
xchg
sub
push
push
dec
orb
mov
es
pop
or
iret
outsb
jb
push
mov
jbe
add
mov
rcr
pop
dec
movsl
mov
imul
mov
push
mov
insb
lods
fsubs
dec
push
pop
cmp
dec
sti
mull
cmp
sbb
push
int3
lods
lods
xor
pushf
loope
mov
dec
ljmp
or
push
out
xchg
jmp
jne
in
mov
mov
adc
std
dec
mov
ljmp
mov
cmp
push
pop
pop
mov
xor
outsb
roll
mov
push
pop
xchg
cs
jns
insb
inc
fwait
daa
inc
insl
mov
jnp
cmc
xorl
pop
adc
add
push
pop
sub
push
in
incb
xchg
shll
mov
stos
cwtl
lods
and
sub
pop
mov
xchg
jbe
arpl
popf
xor
insl
cmpl
stos
mov
mov
dec
dec
xchg
sbb
dec
and
push
insl
arpl
fisubl
xchg
je
push
das
mov
loop
mov
cmp
sti
flds
fiaddl
enter
xchg
pop
aam
bound
sbb
xchg
shrb
mov
xchg
inc
dec
pop
add
hlt
xor
scas
aas
mov
pusha
pushf
mov
or
data16
loopne
mov
divl
fbld
mov
cmpsl
cs
inc
xchg
cmp
cmpsb
add
jmp
dec
cli
xchg
sbb
or
pusha
push
or
jno
xor
je
test
movsb
fs
jp
sbb
adcb
push
add
mov
das
inc
mov
fnstcw
mov
or
aas
insl
inc
in
aaa
xor
jnp
push
jp
mov
add
mov
sub
sub
iret
outsb
push
mov
cmp
jg
dec
fwait
loop
mov
jns
mov
sbb
fisubs
push
movsl
dec
hlt
push
mov
jl
jge
inc
xor
data16
clc
inc
decb
in
mov
ljmp
outsb
movsl
call
mov
fnstenv
fildll
insb
dec
insl
mov
adc
mov
jae
mov
or
in
imul
hlt
jb
stos
cmp
mov
repnz
push
mov
mov
pop
aad
fcmovnbe
lahf
pop
dec
popa
sub
lret
inc
pop
mov
jecxz
lock
jns
inc
jns
aaa
pop
jge
sub
ss
dec
dec
in
mov
adc
in
xchg
pop
mov
cmp
aad
test
lret
js
dec
out
negl
push
jns
lcallw
adc
pop
sub
push
jnp
sub
mov
dec
mov
loopne
ljmp
cmc
out
scas
lahf
mov
dec
mulb
cmp
aam
lret
lock
lods
lret
xchg
es
pop
jle
jae
jmp
mov
add
shlb
js
jp
sub
fdivl
pop
push
xchg
es
aaa
sbb
sbb
in
mov
jecxz
imul
cmc
cld
sub
pop
jo
std
mov
cmp
push
adc
aaa
outsb
sbb
ds
sbb
shr
jecxz
das
sub
pop
pusha
push
sub
fcomps
arpl
pop
mov
cmp
repnz
or
mov
pop
cmpb
iret
add
inc
add
mov
stc
inc
dec
mov
ret
fsubl
imul
inc
push
das
add
jo
repz
sub
stc
pusha
sbb
xchg
sti
js
in
xbegin
in
xorl
xor
jg
test
inc
fisubrs
pop
dec
imul
fsub
sub
mov
or
ja
pop
hlt
js
pusha
test
dec
cmpsl
mov
sub
jne
aad
mov
mov
leave
jecxz
pushl
cmp
test
push
pop
lahf
jno
inc
jp
sbb
dec
js
jne
adc
adc
lods
xchg
test
aaa
les
adc
mov
in
cld
sub
mov
dec
xchg
inc
mov
xchg
sbb
adc
sbb
sbb
cmc
out
and
mov
push
jp
mov
dec
ret
cmp
jmp
enter
jae
inc
push
pop
orb
inc
mov
and
push
scas
insl
andl
push
add
pusha
lock
test
movsb
inc
test
es
sub
mov
out
mov
or
cltd
int
adc
int3
repnz
dec
push
mov
repnz
rclb
or
shll
pop
pusha
dec
imull
push
ss
inc
jae
cltd
ja
rcrb
scas
adc
aam
aam
enter
dec
arpl
push
jns
incb
pusha
cwtl
aas
mov
test
cmp
imul
aaa
pop
mov
mov
cmc
out
jnp
and
ljmp
int
push
popf
in
ficoms
lahf
sub
jae
ss
pop
loopne
xchg
pop
aad
mov
mov
mov
sahf
mov
push
popf
lea
or
leave
push
inc
add
sarb
out
or
and
pop
daa
popf
push
int3
das
cld
enter
je
pushf
xor
add
nop
fmull
and
or
and
sub
mov
inc
xchg
movsl
pushf
pop
dec
scas
xchg
mov
xor
add
mov
xor
shl
cld
hlt
jae
mov
xchg
cmp
sbb
icebp
rcll
sbb
or
jo
lret
push
stc
pop
inc
push
jp
ljmp
dec
pop
push
jb
mov
pop
negb
adc
fstpl
mov
xor
jle
jns
adc
ds
mov
outsb
jg
out
ret
sbb
sub
sbb
sbb
mov
stos
in
push
mov
popa
jb
jecxz
stc
mov
mov
push
daa
fdivs
xlat
rcll
ret
mov
pop
xor
enter
xchg
inc
mov
mov
pop
cmc
pop
inc
ss
cs
sahf
mov
dec
sbb
xor
lock
jns
mov
cld
cmp
ret
mov
jnp
sbb
cltd
nop
mov
jle
loopne
mov
test
pop
shrl
mov
not
pop
bound
push
or
fwait
std
iret
jl
push
or
sub
iret
dec
and
and
push
jb
aam
sub
shlb
cwtl
push
mov
rcrl
bound
cli
sahf
stc
loop
lock
mov
aad
xlat
adc
lret
popf
cld
inc
and
and
ljmp
add
push
iret
inc
inc
data16
movsl
add
dec
sbb
test
stos
js
xlat
loopew
xchg
push
and
or
test
pop
in
lods
nop
jne
inc
js
and
add
pop
test
mov
jnp
and
pop
in
inc
pushf
pop
push
adc
jp
int
cli
mov
sub
push
and
mov
push
inc
adc
xlat
mov
lcall
idivb
mov
pop
xchg
or
lods
xor
cmp
mov
sub
insb
xchg
dec
popf
in
push
pop
mov
push
clc
data16
push
mov
xor
mov
push
loop
outsl
jb
adc
sahf
jl
jb
aas
sbb
or
adc
sbb
pop
sbb
push
jbe
jbe
je
pop
stos
cmp
ss
je
mov
sub
pop
pop
xchg
pop
fldl
out
push
jns
xchg
out
jp
inc
decb
sub
stos
lods
stos
iret
xchg
mov
xchg
into
icebp
lahf
lcall
xor
pop
or
out
pushf
dec
jae
inc
push
xlat
inc
sbb
iret
push
mov
andl
xchg
jg
mov
out
cmc
icebp
out
rcrb
or
sub
insb
jnp
inc
and
mov
outsl
cmp
imul
arpl
mov
cmp
outsl
addr16
xchg
xchg
mov
inc
or
sub
add
roll
fbstp
dec
xor
inc
leave
sti
ss
sbb
push
pop
or
or
sbb
mov
jp
shl
ret
jp
setl
cwtl
lcall
jnp
adc
lahf
push
sti
addb
xchg
jo
mov
xchg
arpl
mov
scas
jp
mov
enter
rorl
cmp
iret
jl
xchg
aad
cmp
pop
addb
cs
lods
orb
pop
mov
cli
xor
mov
xchg
dec
enter
andl
adcb
sbb
gs
cmp
call
rcr
gs
jmp
and
fwait
jl
lock
jne
mov
in
mov
ror
sbb
and
pop
inc
lcall
pop
inc
fs
outsl
inc
jg
imul
mov
xor
sti
popa
pop
push
xor
xchg
roll
inc
test
push
insl
add
xchg
push
mov
lock
rclb
xor
mov
pop
jae
adc
push
inc
rcrb
stos
test
in
lret
hlt
add
clc
mov
dec
push
xor
stc
mov
cmp
sbbb
xor
out
xchg
push
roll
jno
subb
ja
enter
out
aas
test
scas
push
aam
ret
loop
cmpsl
and
outsl
fwait
cld
stos
addr16
adc
adc
dec
inc
mov
push
pop
mov
push
cltd
movsl
loope
les
fsub
lods
mov
inc
in
sub
sub
inc
xchg
mov
jmp
xor
push
lret
rorb
or
lret
sbb
push
out
out
es
mov
aas
sub
xchg
xchg
cmp
xchg
mov
mov
cmp
inc
or
sbb
rcll
loopne
sub
repz
jge
scas
in
xchg
std
js
add
add
into
adc
mov
pusha
daa
test
fprem1
scas
cmp
enter
aas
add
dec
or
mov
movsb
or
jb
cmc
ss
sub
pop
lahf
and
xor
mov
mov
cmp
mov
loop
loop
ret
shll
js
xchg
repz
jbe
and
dec
into
test
xchg
lock
ret
das
fisubrs
dec
mov
adc
out
xor
xor
popf
jge
hlt
ljmp
inc
bound
jnp
aad
int3
adc
mov
jb
pusha
lods
xor
jp
inc
xor
ljmp
adc
inc
or
mov
push
adcb
jns
mov
mov
lahf
pop
scas
push
dec
notb
sarl
jne
gs
imul
cltd
cmp
push
jmp
sahf
sbb
or
incl
mov
lock
leave
adc
js
pop
fsts
fst
or
add
add
sub
pop
inc
inc
aas
call
push
imul
xchg
sub
inc
sub
rcrl
insl
gs
lock
cs
sub
insl
and
aad
cld
ljmp
sbb
fidivrs
pop
xor
incl
jecxz
pop
out
fs
insl
dec
test
add
movlhps
arpl
pop
inc
push
clc
data16
pushf
jle
ja
cmp
pop
in
loop
ret
mov
sbb
pop
xor
jae
and
xor
stc
push
ljmp
cmpsl
dec
outsl
pop
imul
push
cmp
push
in
movsb
rcrb
aas
nop
mov
pushf
mov
jge
test
cltd
mov
stos
int3
xor
sysexit
popa
adc
push
xor
in
sub
daa
pop
cmp
pop
lahf
dec
and
mov
adc
xor
pusha
jo
inc
in
xor
jp
mov
sub
add
ret
push
das
mov
bound
aad
les
sbb
sub
sbb
push
test
or
xlat
push
das
xchg
jnp
push
adc
fidivrl
jne
cwtl
sbb
and
daa
dec
mov
xchg
loope
pop
sbb
push
jae
adc
outsl
popa
push
or
je
adc
lahf
clc
mov
cmp
inc
enter
rcll
orb
sub
adc
mov
iret
push
repz
sub
popf
jge
or
cli
mov
sub
jmp
mov
push
or
jecxz
push
out
insl
adc
scas
adc
cwtl
jnp
stos
push
in
and
cmp
insl
js
daa
daa
cmp
fcomps
fsts
or
mov
cltd
and
xchg
or
movsb
in
xor
jnp
and
ss
dec
mov
nop
ret
call
mov
mov
ds
out
mov
sub
cmp
mov
repz
aas
mov
push
cmp
sub
cmp
rep
or
xorl
pop
inc
hlt
lcall
rcll
sub
ss
mov
adcb
scas
xor
sbb
mov
lahf
mov
imul
pop
dec
pop
sbb
cmpl
out
pop
bound
call
out
mov
aad
sbb
sub
pusha
push
setle
mov
xor
outsb
sbb
adc
lods
mov
dec
cli
dec
pushf
outsb
imul
and
mov
mov
ret
ds
mov
jbe
or
dec
cmp
mov
mov
or
daa
movsl
lods
hlt
pop
add
jl
test
adc
adc
enter
hlt
cmpsl
mov
aaa
std
jp
addb
cmp
mov
sub
lret
pop
scas
fcoms
fdivs
and
fwait
cmpsb
add
jle
std
loop
lods
jns
mov
mov
cli
lea
movsl
adc
push
xchg
mov
mov
jl
adc
mov
cmp
fst
icebp
imull
xchg
and
and
dec
int
mov
sahf
fisttpl
lods
jmp
mov
sub
fcomps
mov
add
push
sbb
jb
sarb
mov
ret
mov
sbb
pop
lods
stc
mov
push
ret
and
imulb
test
sbb
fs
repz
mov
les
mov
push
adc
int
mov
outsl
inc
lods
cmpsb
jno
pop
in
into
mul
lods
mov
loope
lock
sahf
inc
lock
ret
loopne
ret
xchg
mov
xchg
icebp
and
stos
sbb
jl
repnz
pop
data16
test
rorl
test
xor
push
xor
xchg
xor
xchg
pop
dec
sub
idivb
icebp
ret
cmp
xchg
push
test
arpl
clc
adc
adc
mov
xlat
mov
setns
add
and
imul
jb
icebp
or
ror
ljmp
add
xor
scas
adc
jns
daa
ljmp
fmul
cld
addl
inc
call
orb
rcll
fwait
mov
xorl
adc
rcll
jle
hlt
and
xchg
mov
aas
xor
mov
ljmp
sub
jbe
xchg
loop
mov
adc
jle
scas
dec
inc
std
ret
pop
jae
fistps
clc
inc
adc
or
enter
cwtl
pop
test
int
mov
dec
mov
inc
sub
xorl
jno
rcll
cmp
cmpsl
daa
or
inc
arpl
sub
xchg
call
xchg
or
pop
pop
jno
in
add
jb
inc
imul
xor
mov
dec
dec
push
inc
add
in
add
roll
test
iret
cmp
pop
int
mov
scas
out
lock
dec
push
sub
cmpsl
insl
aam
push
inc
cmp
fstps
jae
mov
push
jecxz
int
daa
das
or
aaa
pop
icebp
or
js
fadds
push
scas
cmp
mov
mov
xchg
add
repnz
js
sti
aad
sub
xor
cltd
dec
pop
pop
mov
cld
fsub
sbb
out
jo
lret
pop
rcl
les
outsb
or
mov
je
out
pop
sub
xchg
sub
sub
ss
cmp
pop
fcmovnb
mov
pop
repz
cmpsl
scas
cmp
xor
push
outsl
mov
lea
pop
mov
jnp
push
lahf
dec
dec
pop
inc
cltd
into
jmp
fidivrl
inc
mov
cmpsl
daa
out
and
mov
hlt
ror
push
stos
mov
add
push
xor
adc
mov
into
inc
pusha
in
loopne
lret
cmp
xorb
lds
xor
icebp
faddl
pusha
cmp
enter
sbb
dec
and
out
and
add
push
xchg
jmp
std
jno
std
and
and
push
sub
lock
cmp
in
aad
fidivl
and
inc
sub
into
sub
mov
push
scas
pop
add
jecxz
push
push
shrb
dec
add
add
mov
mov
sub
lods
push
mov
pop
push
xchg
fstpt
push
lods
mov
ds
cmpl
fldt
push
js
in
jbe
insl
mov
xchg
iret
pusha
inc
scas
cld
mov
ret
nop
push
js
mov
cmpsl
sbbb
cld
add
inc
test
inc
mov
push
fwait
aaa
stos
or
xchg
lret
rorb
lret
cmp
gs
rcrl
aam
pop
lods
mov
imul
add
sub
dec
pop
inc
mov
mov
inc
cmp
shll
dec
mov
aad
lcall
sub
stc
jecxz
jae
rol
and
xor
test
data16
jns
rorb
lea
sbb
rolb
pop
pop
shrl
pop
fists
mov
and
shrl
xor
pop
pushf
pop
sti
and
lret
jo
in
outsl
in
dec
sub
push
xor
jae
popf
lods
stos
movsb
inc
icebp
and
mov
mov
xchg
movl
roll
fadds
pop
pop
push
sti
dec
push
std
ljmp
data16
scas
and
push
aas
in
inc
sub
pusha
mov
outsl
inc
add
ret
fsubs
aaa
test
jge
out
in
out
adc
jl
lods
xchg
rorl
repz
cld
cltd
and
imul
fpatan
loope
out
sbb
add
test
or
adc
insl
mov
xchg
pop
scas
dec
push
push
in
push
fldl
push
out
test
xchg
aas
xchg
mov
fs
or
jae
ficomps
pop
outsl
ljmp
sti
ret
stc
adc
dec
int3
lock
cmp
clc
lret
not
aad
cmpsb
ja
clc
mov
aad
arpl
cmp
ffree
adc
in
cmpsb
mov
call
lret
adc
and
or
int3
sub
sbb
pop
lods
clc
subl
or
jmp
into
ja
hlt
popa
in
jg
add
ret
push
push
orl
mov
push
dec
inc
jle
repz
popa
xor
xor
mov
and
push
outsb
push
lods
rolb
jle
or
mov
shll
cmpsb
cmp
sub
jge
in
in
jmp
arpl
aaa
mov
sti
in
xor
mov
shll
mov
negb
sub
and
pop
add
cmp
sbb
sbb
ret
mov
jo
loopne
mov
lahf
aaa
and
pop
mov
shl
jp
hlt
pop
inc
dec
or
dec
fcmovne
icebp
popl
inc
sbb
cmp
test
or
cmp
cli
fsubrs
lahf
roll
fdivs
mov
xor
loop
push
cmp
leave
push
add
adc
fstpl
aam
lret
push
ja
push
leave
jg
stc
jns
pushf
jns
pop
test
stc
dec
cmp
lret
ja
popf
aad
sbb
mov
mov
ficoml
push
stos
add
movsb
pop
mov
add
test
mov
in
push
add
push
and
push
in
js
xchg
loope
fists
fdivp
xor
js
call
sbb
rcrb
cmc
push
cmp
mov
outsl
sbb
sub
outsb
out
test
lds
mov
mov
ljmp
rclb
int
jge
add
leave
rclb
sbb
pop
xor
rorl
testb
pop
imul
dec
fcoms
sahf
mov
add
andl
cmpsb
movsl
inc
jg
fucomi
push
lods
inc
add
adc
imul
add
fnstsw
dec
shl
or
imul
sub
adc
mov
inc
ds
decl
sahf
fdiv
je
pop
sbb
cltd
dec
add
andb
inc
shll
add
mov
sbb
enter
faddp
jns
add
push
mov
jecxz
movsb
cltd
inc
cmp
dec
xor
xchg
cld
jne
xor
lahf
lods
stc
push
push
add
or
fiadds
cltd
shrb
popf
adc
jne
mov
call
push
add
cmp
adc
xchg
scas
mov
in
jbe
mov
sbb
pop
repz
cmp
pushf
xor
insb
pop
pushl
push
les
adc
and
pop
hlt
iret
or
xlat
lock
cltd
push
lock
movsb
xchg
push
xchg
and
push
mov
inc
mov
aas
mov
dec
icebp
xor
or
sub
jb
call
cmp
lea
mov
cmpb
out
lahf
rorb
in
cmp
std
outsb
push
add
pop
push
test
dec
mov
cld
push
popa
push
js
aaa
mov
mov
dec
xchg
repz
lahf
push
add
inc
push
jno
div
dec
negb
xor
into
aam
sti
ja
xchg
cmpsl
pushf
mov
mov
xlat
pop
and
jl
lock
int3
sbb
or
dec
and
lcall
push
out
iret
jno
dec
jo
jg
jg
mov
add
dec
scas
mov
mov
mov
scas
sub
lds
imul
addr16
or
cld
lods
repnz
js
mov
mov
push
xchg
mov
mov
or
xchg
mov
mov
ret
pop
pushf
xchg
and
mov
loope
int
sub
push
ret
add
pop
flds
movsl
dec
inc
sbb
jo
push
cmp
pop
mov
lea
push
cmc
jmp
pop
int
add
jecxz
mov
lds
das
test
mov
jge
imul
adc
jl
int3
ret
lds
inc
mov
push
icebp
mov
int
dec
sub
push
mov
cmp
aad
mov
add
mov
cmpsb
jnp
add
mov
xchg
fldt
xchg
sbb
xchg
jecxz
mov
add
lret
sub
scas
xchg
pop
into
ljmp
sbb
add
ss
mov
inc
sub
fisttpll
inc
mov
gs
js
scas
dec
push
fisubrs
xchg
hlt
addb
pusha
mov
mulb
jbe
mov
sarb
fstps
shlb
jmp
aas
arpl
pusha
icebp
in
sahf
pop
lret
stos
andl
sub
cmp
icebp
outsl
ret
jb
cmp
mov
xor
enter
mov
xor
adc
int
mov
int
imul
inc
js
jae
sahf
rcrl
dec
jmp
pushf
fsubrl
inc
sub
jbe
sbb
add
xchg
out
jae
fcmovne
ror
sbb
pushf
mov
xlat
cmpsb
in
jl
frstor
mov
loope
ret
add
jg
pop
inc
out
pop
pop
cmp
aad
sbb
arpl
push
mov
cwtl
sbb
mov
add
insb
es
pop
loop
rclb
xchg
lds
ret
gs
popa
stos
mov
sub
adc
mov
adc
aad
int
lds
pop
sahf
dec
ss
fcom
xchg
adc
int3
dec
sbbb
push
mov
push
stos
adc
lds
jns
stos
sbb
xchg
xor
lahf
inc
mov
js
sub
mov
cld
nop
mov
cmp
ljmp
aam
mov
aam
stos
jns
push
sarl
fucom
adc
pop
push
inc
sbb
xchg
aaa
test
out
sub
outsl
rclb
push
adc
cwtl
sbb
mov
mov
aas
xchg
pop
ret
cmp
in
xlat
xor
lahf
lret
cltd
psubw
sar
loope
mov
insl
imul
insl
mov
fwait
subl
fsubl
stos
cs
icebp
dec
mov
push
das
lods
dec
jp
mov
dec
cld
fbld
movsb
ja
mov
test
loop
loope
ljmp
aad
jle
cli
jmp
cmp
add
int
inc
adc
pop
in
andb
popf
and
out
inc
pop
push
rorl
jno
cmp
inc
stos
shll
lock
xchg
cmp
jle
xlat
clc
outsb
xchg
pusha
test
test
icebp
movsl
icebp
pop
mov
add
push
sbb
xor
lock
jbe
rcl
jg
call
xor
mov
dec
xor
pop
jnp
ffree
arpl
cmp
stc
lahf
pop
dec
mov
sub
mov
stc
push
je
sub
sbb
and
sub
dec
dec
js
arpl
and
dec
or
push
mov
jo
mov
test
jne
cld
shlb
and
pusha
xchg
fisubrs
ret
sti
mov
out
loop
icebp
arpl
addr16
out
or
xlat
popa
jne
inc
pop
push
dec
mov
jge
sub
enter
dec
mov
lret
jno
std
inc
mov
or
cmc
cltd
test
rorb
jnp
mov
rclb
mov
pop
jge
add
adc
xchg
scas
outsb
ja
cwtl
cld
inc
push
mov
push
ret
inc
ret
in
ficoml
mov
aad
jp
push
clc
mov
popf
dec
xchg
int
popa
mov
sbb
jno
fisttpl
xchg
cmp
or
pop
jmp
xor
xor
cwtl
imul
data16
inc
jecxz
mov
xchg
fstpt
pop
rcr
push
arpl
movsb
mov
mov
es
frstor
inc
lcall
mov
fcoml
adc
mov
adc
sbb
les
in
push
imul
cmc
add
sahf
inc
dec
xor
test
jmp
pop
inc
or
push
and
mov
inc
lods
shl
sub
xchg
xor
dec
mov
pop
adc
jns
jmp
movzbl
and
call
inc
cmpsb
cmpsb
add
es
push
add
cmp
push
push
and
fsubr
rol
pop
xor
jnp
popa
adc
push
jae
insl
cwtl
clc
movsb
cli
push
sbb
mov
xchg
rol
cmpps
xchg
inc
mov
aaa
push
push
xor
sbb
cmp
xor
out
movsb
mov
xor
repz
fidivl
xchg
subl
or
pop
mov
icebp
jl
cmp
push
push
mov
out
idivl
add
push
fadds
mov
xchg
in
mov
jecxz
cmp
icebp
and
mov
outsl
sbb
lret
xor
cs
fistpll
out
sbb
rol
or
outsl
pop
cmpb
sbb
nop
aam
fsubl
mov
sub
sub
rcrb
dec
add
mov
pop
cs
inc
mov
or
xchg
cmp
push
push
or
sub
mov
out
mov
es
addr16
add
jmp
adc
xlat
pop
sub
gs
ja
jno
jnp
add
pop
jmp
sub
adc
jae
movsb
cmp
fwait
push
das
lret
imul
xlat
mov
and
pusha
fisttpl
xor
int
cmp
push
es
jo
loope
push
pop
sbb
dec
mov
add
leave
push
test
xor
mov
sbb
aaa
stos
pop
ljmp
shll
aad
push
leave
xor
pop
lcall
loop
fdivs
fdivrs
in
fbstp
imull
inc
stos
mov
stc
fistl
cli
pushf
nop
sbb
adc
jae
mov
outsl
xorb
ja
xchg
mov
push
mov
ja
leave
xchg
inc
jge
xor
test
cltd
aas
push
dec
lcall
cwtl
xor
enter
rcrb
mov
gs
pushf
leave
ret
dec
dec
inc
push
push
fbstp
aam
aaa
sub
xchg
fdivl
dec
push
jne
mov
es
jl
cmp
xchg
bound
stos
push
clc
aaa
shrl
jae
fcomps
pop
push
sar
rcr
lahf
flds
addl
push
mov
xchg
and
pop
das
fmuls
call
ret
dec
inc
and
mov
jns
add
jecxz
adc
scas
incb
xor
leave
popf
mov
xchg
and
or
push
das
dec
or
int
cmp
xchg
lret
inc
or
push
out
mov
ljmp
mov
lock
mov
out
and
mov
ret
cmp
jle
loopne
out
dec
fwait
xchg
ffree
mov
hlt
fwait
stos
pop
ss
mov
xchg
shrb
in
xchg
add
push
xor
adc
mov
or
mov
stos
js
jl
outsl
shr
mov
das
mov
pop
gs
sub
sti
pop
out
pop
dec
mov
jge
dec
movd
aas
inc
divps
jno
subb
loope
jns
cs
mov
lods
or
rolb
test
sbb
push
xchg
cmp
mov
ret
or
xchg
sbb
sbb
and
into
sbb
mov
pop
push
test
nop
stos
bound
lods
outsl
inc
sbb
push
xchg
sub
shrb
push
insl
jmp
loop
pop
pop
dec
mulb
push
iret
test
loop
stos
or
fdivrl
add
xor
push
aad
sti
mov
les
fwait
leave
adc
lret
lds
shl
loop
out
mov
fcoms
sbbl
mov
pop
push
out
cmc
mov
popa
sbb
push
pop
push
js,pn
in
sbb
test
jno
out
add
jns
mov
or
popf
xchg
push
adcl
aas
and
insl
dec
add
pop
cmp
into
cmp
jo
cmp
pop
sbb
and
dec
movsb
sahf
icebp
daa
dec
lret
popa
cli
nop
add
fnsave
inc
stos
imul
in
xor
inc
js
or
repz
push
mov
aad
mov
shlb
rorl
flds
push
jecxz
mov
icebp
data16
jle
and
frstor
mov
cmp
pop
sti
lret
loopne
testb
scas
cld
add
xor
add
in
mov
inc
ret
dec
loopne
adc
movsb
imul
movsl
lds
sbb
sub
push
mov
add
shll
stos
aad
xchg
adc
std
bound
frstor
mov
mov
dec
inc
daa
mov
sbb
data16
scas
xor
mov
mov
stos
xchg
mov
or
push
loopne
sti
mov
mov
repz
cld
pop
loopne
insb
popa
stc
or
mov
shl
dec
pushf
outsl
nop
push
lahf
mov
lret
aad
mov
xchg
in
xchg
sbb
fisubrs
adc
cmp
in
mov
pop
xor
rorl
push
jp
dec
pushf
adc
sbb
add
pop
cmp
lea
adc
pop
int3
test
push
jge
adc
ljmp
push
xchg
xchg
push
push
popa
sub
sub
or
int
xchg
rclb
add
repz
mov
add
jg
out
dec
int
shl
gs
loop
mov
arpl
aas
repz
ja
rcll
xor
pushf
mov
mov
pop
jae
xchg
add
mov
std
gs
imul
loope
xchg
jecxz
icebp
and
cmp
xor
lret
inc
xlat
cmpl
movsb
ss
lds
les
inc
mov
stos
mov
adc
loopne
inc
xor
stc
adc
das
sub
pop
daa
mov
and
gs
mov
je
xchg
push
mov
fstl
sub
mov
cwtl
lcall
cmp
test
or
jne
mov
pop
cmp
or
ret
leave
daa
pop
fdivs
insb
and
lods
cmp
or
outsl
xor
cmp
repnz
fdivrs
roll
or
sbb
ret
mov
cmpsl
mov
clc
mov
pop
adc
cli
pop
sarl
pop
fcoml
dec
outsl
push
xchg
insb
ds
cmpb
out
cwtl
xchg
mov
mov
mov
loope
or
fimuls
adc
xchg
inc
popf
add
imul
clc
lock
jne
push
mov
pop
xchg
mov
xlat
and
xor
fptan
cwtl
push
add
idiv
jmp
idivl
push
and
lds
mov
nop
xchg
mov
shll
xchg
cmpsl
dec
call
mov
add
fadd
clc
adc
or
xor
loopne
loop
cli
mov
addr16
stc
rcrl
icebp
mov
dec
jle
push
dec
mov
mov
loop
sahf
mov
pop
ficomps
pop
push
jge
mov
orl
sbb
les
mov
jle
ljmp
mov
in
inc
inc
lret
xor
mov
lods
mov
shrb
cmp
ljmp
ss
enter
adcl
leave
mov
xlat
mov
decl
lock
lahf
dec
adc
jp
jmp
mov
orl
jns
stos
pusha
sbb
test
arpl
mov
sbb
pmulhw
dec
push
fisttpl
loopne
out
cmp
inc
js
dec
or
icebp
mov
jo
mov
mov
push
inc
cmp
int
xor
sti
push
xchg
or
test
rcrl
xor
iret
cmpb
ret
cmp
xchg
test
add
icebp
inc
inc
xor
and
pop
loopne
das
sahf
mov
mov
add
test
jo
cmpsl
fstpt
add
dec
clc
aas
cmp
mov
inc
repz
jnp
cli
pushf
or
cld
inc
fistl
lahf
testb
call
or
dec
mulb
or
jmp
cmp
popa
cld
fimull
data16
imul
jmp
in
outsl
push
inc
int
icebp
into
das
xchg
xchg
cmp
clc
jnp
cmp
rcrl
xchg
mov
cmp
jmp
pop
sbb
scas
pop
jbe
loope
cli
dec
pop
and
aad
aaa
jae
mov
test
jg
mov
mov
sbb
out
int3
pop
rcl
sub
ret
sub
sub
sub
and
lods
daa
jnp
jb
aas
ret
out
xor
je
push
push
pop
iret
inc
stos
mov
dec
rsqrtps
sbb
popf
adc
lret
test
in
push
or
adc
or
add
loopne
pusha
shr
insl
cmp
push
mov
enter
add
and
popa
sub
loop
push
test
push
cwtl
cwtl
xchg
pop
scas
add
test
jle
jmp
mov
and
loop
push
xchg
mov
loopne
cmp
sub
int3
aaa
sub
mov
jae
mov
mov
lds
jae
jo
sbb
lret
mov
gs
push
aaa
iret
lds
sbb
add
clc
test
pop
cs
out
mov
xor
push
cld
sub
repnz
sbb
popa
xlat
push
ficoml
pop
or
adc
or
lcall
push
test
fnstcw
adc
cs
out
fisttpll
inc
jb
push
jle
mov
das
pop
sub
mov
ljmp
fisttpll
rcrl
xchg
jmp
xor
sub
fcmovnu
iret
sbb
fisubs
in
mov
dec
inc
test
mov
dec
daa
imul
cli
out
ret
push
push
lret
testb
fistl
dec
fistps
mov
je
mov
sbb
inc
insl
push
push
mov
test
sbb
sti
or
push
xor
je
fwait
lods
push
xchg
sahf
mov
fbld
dec
add
sub
xor
shrl
xchg
cmp
dec
insb
mov
movaps
fcomip
loop
test
rorb
pop
or
cwtl
popf
dec
repnz
pop
cmp
mov
jae
icebp
xor
test
xchg
lds
pusha
pop
xor
sti
dec
lds
cmp
pop
nop
lods
pop
push
sbb
adc
sbb
or
pop
into
lret
fwait
inc
mov
dec
or
mov
mov
lea
add
xchg
je
and
fdivrs
nop
aad
sbb
mov
xor
lahf
repz
std
popf
jo
or
dec
xor
cmpsb
mov
mov
cmpsl
push
sbb
and
fildl
test
pop
add
pop
sbb
add
hlt
sub
sti
mov
js
enter
into
xchg
jl
add
dec
jp,pt
push
jae
mov
insl
pop
mov
xor
inc
and
mov
mov
fcoms
inc
nop
cmpsl
lds
or
inc
out
or
pop
sbb
dec
int
rcrb
sub
add
cmc
sub
test
aas
mov
inc
xchg
dec
aas
push
add
clc
out
sti
fisubrl
lock
sub
test
push
inc
jmp
cmpsb
imul
push
push
enter
push
lods
mov
rcll
mov
mov
push
idivl
je
add
mov
xor
fisubrs
sub
sbbb
push
fprem1
testl
in
int3
out
cmp
add
sub
xor
jnp
adcl
sbb
insb
add
ret
xor
subb
push
mov
cmp
fwait
add
aaa
add
fistl
mov
popf
lock
iret
into
outsb
fwait
jbe
xchg
cld
int
inc
xchg
adc
jl
pop
jne
pop
test
push
mov
mov
and
scas
inc
aad
jecxz
jno
mov
pop
lcall
je
stc
popa
push
repz
stos
and
and
mov
stc
negb
pushf
arpl
lods
pop
les
cltd
mov
mov
inc
inc
mov
inc
leave
mov
mov
push
cmp
sub
shll
cmp
push
add
or
data16
jns
data16
add
push
mov
jns
dec
aaa
leave
mov
ljmp
inc
cmp
sbb
mov
stos
xlat
in
mov
imul
and
cs
xorl
fcoml
adc
out
jle
cs
in
push
jae
cmc
push
outsb
or
int
insb
jns
pop
je
repnz
icebp
mov
pop
jl
mov
lods
dec
in
jno
lods
jno
test
fdivr
ss
xchg
sub
fs
xor
and
jl
and
outsl
push
fs
and
adc
movsb
push
adc
call
push
loopne
jp
push
loope
cmp
popf
push
aaa
mov
fsubrp
or
imul
mov
xchg
dec
sub
or
mov
mov
and
push
dec
and
rcrl
lods
cmp
and
pop
popf
sar
cmp
iret
dec
push
mov
pop
adc
jae
mov
push
test
push
or
dec
scas
imul
rcrl
pop
aaa
insl
rorl
or
stos
add
xchg
pop
dec
cwtl
inc
in
fcmovb
adc
inc
test
add
sbb
pusha
shrl
cmp
dec
push
pop
pop
pushl
push
jo
pop
lret
ffreep
std
testb
sub
mov
clc
push
pusha
cmpsb
icebp
int
dec
sbb
stc
inc
inc
mov
xchg
push
mov
addr16
inc
ds
xchg
cmc
ret
pusha
pop
lcall
sbb
loop
pop
clc
arpl
shlb
gs
add
pop
in
dec
repz
loopne,pt
lea
xorb
xor
das
lock
es
or
mov
adc
dec
sbb
lahf
mov
sbb
je
cmp
imul
lret
jno
pop
jle
iret
enter
jmp
loopne
sub
xchg
fsubp
cld
sbb
cld
ja
outsb
inc
cmp
bound
jge
rcpps
loopne
loope
fiaddl
movsl
popa
pop
add
xchg
fidivrs
xchg
mov
fdivrs
cmp
adc
gs
sub
mov
pusha
mov
sub
push
lea
add
dec
or
sbb
sub
mov
fs
jne
loope
adc
lret
xor
push
lds
inc
in
jnp
add
mov
mov
lret
cld
std
mov
jg
cmp
sarb
scas
dec
test
les
xchg
mov
fcompp
mov
mov
outsl
scas
in
mul
int
hlt
lahf
pcmpgtd
mov
and
dec
xlat
inc
inc
mov
push
mov
push
loopne
inc
lahf
add
push
push
xchg
cmc
mov
cmp
mov
data16
test
lds
lcall
clc
dec
test
loopne
or
dec
iret
or
jae
inc
imul
inc
mov
mov
jmp
hlt
lock
sbb
add
call
rolb
xchg
inc
push
mov
jl
xchg
cmc
in
out
fisttpll
push
int
arpl
test
sub
jecxz
jge
xchg
loop
and
lret
cmp
in
rorb
xchg
fistps
mov
das
push
les
std
daa
test
lret
enter
mov
or
out
aaa
add
adc
inc
shr
ja
mov
lods
and
mov
fisubrs
in
mov
pusha
fiadds
call
pop
loope
sbb
push
xchg
cltd
jp
jg
jae
movsb
jecxz
push
test
and
fwait
cld
push
ljmp
fimull
lds
inc
shrb
mov
sbb
scas
cmp
dec
icebp
push
push
and
idivl
ret
fsubrl
mov
call
jb
add
mov
jl
insb
push
cmp
stc
inc
icebp
incl
arpl
mov
rep
rcll
stos
fwait
mov
inc
scas
subb
out
movsb
pop
pop
or
mov
cmp
arpl
inc
cmpsl
stc
in
xchg
cltd
dec
jp
mov
lock
inc
push
mov
mov
mov
sub
or
les
bound
fcomi
lahf
out
stos
iret
push
je
ljmp
mov
and
ret
jcxz
andb
inc
adc
repz
add
je
pop
jnp
sub
stos
gs
fidivrl
imul
xor
call
mov
xchg
fnstsw
ret
shlw
adc
in
and
inc
rcr
fsubrl
sbb
pusha
and
adc
sti
pop
inc
mulb
push
fldcw
pop
sbb
inc
lds
xchg
and
fdiv
in
xor
sbb
mov
ss
loop
movsb
leave
loopne
xchg
std
test
outsb
out
scas
xchg
cmp
in
test
or
sbb
dec
cs
mov
sub
icebp
push
pop
inc
xor
iret
pop
inc
mov
imul
or
ret
scas
fcomip
xchg
test
jl
stos
push
jns
arpl
test
cmp
mov
ret
push
xchg
mov
gs
mov
adcl
fldenv
js
imulb
out
mov
in
xor
cli
int3
or
lret
ret
fwait
dec
xor
or
mov
mov
aas
mov
pusha
and
xchg
jge
stos
fbld
dec
pop
xor
push
push
adc
or
ret
mov
and
pop
arpl
insl
push
add
mov
and
dec
mov
fstpl
lods
xor
adc
and
jecxz
sbb
inc
aad
lods
movsl
add
cmp
jnp
mov
ljmp
cs
std
cwtl
fsubrl
outsb
imul
andb
sub
xorl
jmp
pusha
jb
push
fstpt
mov
aaa
mov
or
push
push
insb
out
and
call
xchg
inc
shrl
repnz
sbbl
add
xchg
clc
data16
das
mov
cmp
aas
or
mov
jno
in
arpl
and
push
cs
xchg
test
xor
sbb
icebp
ret
mov
leave
call
push
jge
adc
jmp
idivb
enter
add
adc
mov
std
lret
cmpsl
dec
fnsave
inc
mov
sub
cld
or
dec
pop
aas
pop
mov
sub
mov
cli
in
jp
and
dec
fsubrl
mov
mov
imul
xor
jae
mov
push
ret
cmpb
sahf
and
fdivrs
sarb
xor
inc
push
or
pop
push
test
out
leave
ss
add
mov
setbe
fxch
mov
add
inc
rorb
push
fadds
mov
jge
stos
mov
inc
lock
cmpsb
dec
gs
call
xchg
xchg
data16
lods
pop
lods
ja
mov
jne
stos
mov
fdivrp
test
ljmp
sahf
inc
dec
aad
xchg
imul
dec
cmp
rorb
jl
dec
arpl
scas
daa
xchg
stc
sbb
add
popf
out
mov
sbb
sub
mov
imul
mov
pop
push
sbb
cmp
dec
int
test
into
lods
outsb
lods
out
dec
push
inc
xchg
xorb
xchg
push
push
movl
jle
sbb
adc
or
call
test
mov
cmpsl
and
and
push
scas
lods
mov
mov
mov
fisubrl
dec
push
cld
test
cmp
adc
jno
pop
aam
imul
je
arpl
loop
push
adc
inc
push
xor
lock
lret
xor
adc
sub
inc
aas
sbb
mov
idivl
or
pop
jl
inc
imul
sub
inc
mov
je
push
push
push
bound
movsb
mov
sub
xchg
addb
xor
mov
jbe
jmp
or
fidivl
xchg
inc
xor
repnz
fldt
mov
xchg
rorl
pusha
cmp
lahf
push
fs
test
mov
sti
xchg
pop
inc
lock
shlb
cltd
ja
add
fistpll
lock
pop
pop
std
int3
lcall
sbb
lret
xor
xchg
rol
or
sub
js
into
jno
jo
pop
fidivs
insb
repz
addr16
fisubrl
dec
ret
sbb
or
mov
xor
sub
subb
sti
jnp
xor
lods
test
inc
shr
cmpb
inc
call
lret
cmp
fs
or
inc
add
mov
fnop
push
cmp
mov
cmp
scas
std
lds
loopne
xchg
push
imul
mov
in
popf
fsubr
push
or
test
push
or
loope
dec
mov
aaa
inc
pop
rcr
enter
stos
fwait
adc
pusha
xchg
lds
jmp
or
mov
or
xchg
dec
pop
mull
dec
in
sarb
rclb
rcrb
pop
repz
cmc
sub
inc
push
js
fidivrs
fbstp
enter
adc
lret
jle
je
inc
jecxz
cmpsl
in
mov
cwtl
aad
loop
push
xor
arpl
iret
repnz
sbb
pop
xchg
mov
mov
and
and
orl
mov
iret
lcall
inc
test
js
xor
mov
add
insb
mov
jmp
pop
sbb
pushf
dec
gs
xorl
inc
cmpsl
jmp
xorps
push
cmp
out
or
xlat
or
stos
mov
push
imul
pushf
in
ljmp
adc
dec
adc
jb
out
loopne
or
int
popa
push
push
sti
rclb
jne
push
icebp
push
adc
cli
pop
adc
mov
js
mov
adc
cmp
iret
and
mov
dec
mov
adc
xchg
or
cmc
daa
cmpl
aas
loopne
mov
adc
dec
push
mov
inc
test
jle
loopne
jno
jle
mov
loope
rorb
jno
ret
inc
cmp
gs
cld
jp
dec
add
fstpt
jns
dec
stos
cli
fcomp
aaa
and
clc
cmpsb
daa
inc
add
fbstp
jp
test
mov
call
xor
cmc
push
subl
add
adc
movsb
and
out
mov
lcall
sbb
pop
or
pop
shr
mov
lock
leave
ret
push
pop
lods
fdivrp
add
mov
pop
hlt
ja
jp
pop
inc
mov
lea
gs
mov
jl
enter
xor
cld
fstps
and
imulb
cmpsl
cmp
adc
push
bound
daa
mov
and
add
inc
pop
imul
pop
fst
xchg
loopne
cwtl
add
sub
adc
push
adc
lods
pushf
decl
sbb
mov
mov
or
addr16
cli
aas
push
mov
cmp
fldcw
int3
mov
in
inc
lea
insl
jbe
xor
call
out
jo
jb
aas
mov
inc
cmpsb
sarl
cltd
mov
add
jo
loope
pop
ss
gs
jno
add
test
ds
push
sbb
mov
push
pusha
cmpsb
loopne
push
stos
loope
aam
imul
mov
imul
int
out
xor
pop
inc
test
sub
jmp
mov
ljmp
inc
scas
jge
push
adc
ja
loope
lds
sub
fldl
ucomiss
mov
out
dec
adc
jl
jne
shl
outsl
sbb
aad
out
mov
jg
lahf
jle
push
dec
movsb
jae
pop
push
mov
leave
mov
push
sub
mov
push
subl
addr16
lock
aas
out
sarl
outsb
jb
out
ljmp
pop
xor
sub
mov
cmpb
and
xor
ret
xor
fistpl
ret
pusha
pop
pop
dec
push
lfs
cmp
jmp
or
sub
hlt
and
push
dec
out
cwtl
imul
cwtl
lds
sub
add
mov
sbb
repz
dec
ja
bound
sub
mov
cli
push
pop
mov
loope
scas
adc
incb
rol
cmc
push
je
mov
gs
clc
inc
xor
aad
and
bound
mov
aam
test
rcrl
mov
add
mov
dec
int3
mov
add
sbb
enter
fnstsw
xchg
pusha
das
cmp
ret
mov
mov
rorb
std
fsubs
insl
in
sub
fs
addl
mov
add
js
pop
jne
fsubrp
dec
inc
les
pop
mov
sbb
int
add
and
jp
popa
bound
std
xchg
rolb
or
das
aam
pop
xor
push
pop
lock
arpl
cmp
and
icebp
stos
xlat
rolb
in
xor
and
cld
or
dec
inc
mov
mov
jb
inc
std
test
daa
inc
fmull
scas
or
ror
mov
repz
pop
clc
out
dec
mov
repz
dec
cmp
inc
cwtl
test
mov
sti
jecxz
mov
mov
fsubrl
adc
clc
lret
jbe
shlb
aaa
orl
in
add
popl
cmpsb
mov
xor
adc
ja
dec
cmovnp
hlt
add
mov
sbb
cmp
imul
std
xchg
jge,pn
iret
jl
sub
dec
add
mov
add
outsb
jnp
add
push
and
mov
and
ljmp
shrl
mov
cmc
push
mov
mov
std
cld
pop
aaa
fsubl
jmp
xchg
mov
pop
rol
dec
les
push
popa
inc
dec
cmp
lods
jno
insl
mov
pop
lcall
aad
lret
xchg
sahf
popf
gs
xor
lcall
dec
lods
movsl
xchg
mov
pop
cwtl
push
xchg
mov
inc
out
test
mov
mov
mov
outsb
push
sub
push
ret
push
inc
cmpsl
adc
repnz
sub
out
retw
xchg
jp
cmp
add
xor
or
pop
or
stos
jb
inc
adc
xor
add
and
rcrb
imul
aam
js
das
pusha
in
sbb
mov
cmp
inc
arpl
js
sub
iret
jle
push
adc
xor
out
push
das
es
mov
pop
pop
add
dec
xchg
loope
shll
push
ja
cmp
cmpsb
sub
xchg
adc
icebp
xchg
xor
sub
adc
mov
xchg
popa
or
dec
shll
mov
stos
inc
mov
stos
btr
and
out
xor
testl
testl
inc
add
add
pop
sbb
mov
jl
lods
inc
cmp
mov
cmpsl
lods
dec
imul
cwtl
das
xchg
iret
dec
pop
pop
sarb
dec
pop
jmp
push
ret
arpl
mov
ss
lret
jns
add
push
dec
cmp
jne
loope
insl
fnstsw
add
cld
outsl
rol
mov
sub
mov
shl
pop
cmp
mov
shrl
icebp
mov
push
loop
rcll
dec
icebp
jae
cmpsl
dec
sub
rolb
mov
test
mov
jne
mov
xor
mov
cmc
sarl
lock
popa
je
stos
add
std
mov
mov
mov
pand
jge
enter
popf
sbb
cmpsl
mov
lret
lahf
mov
in
cmp
pop
daa
enter
lods
xchg
mov
lock
adc
lds
jl
jge
lods
mov
scas
movsb
loop,pn
sub
pop
ljmp
jo
mov
or
sbb
repnz
cmpsb
xchg
pop
loope
sahf
adc
xlat
mov
flds
inc
aaa
cmp
inc
nop
pusha
and
stc
add
push
jge
outsb
push
fsubs
cmp
pop
outsb
inc
mov
jb
xor
adc
push
scas
sub
xor
iret
nop
add
inc
fiadds
xor
sub
adc
mov
dec
subl
imul
adc
icebp
inc
xchg
fsubp
lds
lods
lock
mul
mov
jns
out
jle
loope
sbb
stos
inc
lods
sbb
es
cmc
pop
movsb
push
mov
ljmp
mov
sbb
lahf
mov
sbb
jo
in
mov
cmp
inc
daa
int
inc
and
dec
dec
mov
or
adc
cmp
outsl
mov
mov
movsl
sti
cmp
sub
pop
cs
mov
fs
push
add
add
mov
iret
mov
movsl
push
and
cmpsl
in
xchg
jmp
int
mov
pop
loopne
loopne
push
cmp
leave
repnz
scas
insb
rol
idiv
mov
das
jns
shll
cmp
dec
jge
dec
sub
fmuls
cmpsb
repz
test
sub
push
enter
sti
inc
or
iret
or
pop
lcall
mov
adc
xchg
push
lret
popa
jae
test
mov
orl
out
sbb
pop
ret
xchg
out
fnstsw
xor
pushf
dec
call
mov
xchg
fisubrl
pop
inc
dec
sbb
and
ret
xchg
lahf
mov
int3
into
inc
push
push
adc
mov
and
push
hlt
outsb
subb
xor
push
jb
movsl
movsl
xchg
pop
outsb
mov
pop
test
adc
lods
das
clc
scas
into
hlt
jle
xor
icebp
lock
imull
and
add
adcb
out
iret
adc
loope
push
scas
das
or
aas
cmp
mov
push
aad
stos
sub
sbb
adc
fadd
cmp
fcomi
cld
xchg
addr16
ss
in
insl
ljmp
jb
or
pop
sbb
fldenv
push
pop
jnp
jg
or
mov
stos
xor
jecxz
push
daa
mov
lea
xchg
lods
or
dec
xchg
cmp
push
subl
push
add
or
jp
jle
and
out
jae
add
ss
xchg
ret
iret
and
std
inc
pusha
adc
ret
out
mov
pop
inc
bound
push
adc
xchg
xor
cmp
mov
aaa
in
jbe
ret
inc
into
jne
or
mov
shll
xorl
sbb
push
jnp
inc
pop
or
cmp
movsl
repnz
cmc
sbb
jo
push
push
mov
aam
adc
xchg
or
pop
scas
dec
fmuls
fidivs
outsb
arpl
mov
mov
push
cmc
int3
les
mov
repnz
rorl
or
xlat
mov
mov
mov
xchg
lea
add
push
clc
cmp
cmp
inc
xchg
push
or
push
xchg
gs
mov
test
repz
jmp
cli
jecxz
dec
test
icebp
andl
xchg
dec
lods
lds
xchg
scas
movsb
mov
xchg
mov
out
pop
mov
js
push
loope
pop
fists
mov
or
push
mov
enter
push
addr16
mov
jnp
mov
jns
push
into
lret
mov
icebp
push
out
xor
inc
push
fstpt
dec
jae
pop
lcall
je
or
adc
pop
stos
inc
mov
jecxz
mov
xor
imul
inc
int3
adc
cmp
mov
cmp
fistpl
mov
push
xchg
iret
pop
dec
lock
and
stos
or
cwtl
outsl
out
jp
fisubs
xchg
test
push
mov
adc
lods
popl
xchg
cmp
jno
xchg
jecxz
jmp
push
mov
lds
add
xor
mov
add
mov
std
push
test
rorb
shrb
in
stc
pop
rcl
pop
icebp
les
cwtl
pop
fnstsw
adc
dec
inc
lods
adc
outsl
jmp
dec
std
mov
adc
arpl
push
mov
rorl
add
dec
jo
jmp
in
xor
stos
pop
ss
push
pop
xorl
cmp
clc
jbe
int
and
adcl
and
inc
or
nop
pop
jno
jge
int3
inc
rcrb
repz
pop
cmpsl
sub
adc
rolb
jecxz
sub
out
int
and
movb
cwtl
adc
iret
dec
out
into
cli
mov
or
sbb
mov
pop
lods
push
jp
jge
mov
inc
sahf
add
inc
mov
and
test
pop
ret
sbb
xchg
add
mov
xor
xchg
std
mov
pop
sbb
mov
sbb
xchg
push
out
loopne
cmpsb
jg
jo
mov
or
sbb
mov
sbb
iret
aam
les
ret
out
mov
lea
push
xchg
and
cld
mov
sub
push
sub
dec
mov
ret
dec
andl
mov
testb
ja
jns
dec
push
add
or
je
xorl
jle
cmp
mov
jno
mov
ss
mov
inc
and
push
out
jae
daa
adc
cli
leavew
mul
sub
imul
movsl
mov
ret
addr16
jbe
pop
add
mov
push
in
inc
push
add
and
xlat
movsl
andl
jb
nop
push
lods
or
inc
dec
cmc
pop
call
mov
std
mov
or
push
add
jb
push
loopne
mov
shlb
fwait
lahf
rclb
addb
push
inc
mov
xor
cltd
xchg
std
mov
in
mov
jns
jle
cwtl
jae
jp
jb
cmpsl
push
fisubrl
cmp
icebp
adc
dec
xor
mov
arpl
test
imul
pop
mov
loopne
out
mov
push
repnz
addr16
loop
loope
and
pop
ret
or
sbb
cmp
xor
orl
push
fists
jns
or
lock
fists
dec
out
testl
mov
sub
jae
fdivs
stos
daa
sbb
add
sbbl
lds
inc
cmp
xor
dec
imul
mov
lret
bnd
das
jns
mov
int
pop
stos
xlat
or
movsl
scas
enter
push
repnz
adc
loopne
xor
out
xor
cmpsb
iret
out
scas
and
ret
jne
jge
test
adc
pop
addr16
ss
std
cmp
stos
scas
iret
xchg
add
ds
mov
add
xchg
jo
adc
call
and
jns
jae
or
xchg
cmpsb
mov
pop
mov
pop
pop
jmp
push
dec
cmp
jno
popa
and
lahf
xor
xchg
scas
cmp
cli
cmp
test
pushf
jb
jb
sub
push
int3
pushf
mov
daa
int3
sub
in
popa
or
arpl
inc
pop
mov
xchg
sahf
or
xor
pop
test
negl
movl
dec
ret
pusha
pusha
aas
stos
sub
xchg
inc
into
dec
and
push
std
mov
mov
sahf
push
hlt
call
mov
add
add
fstps
repz
ret
mov
adc
rsm
sbb
ss
xor
movsl
push
xor
les
mov
cmp
dec
and
jno
cmpsl
pop
iret
sbb
fwait
push
orb
adc
lret
push
lcall
push
scas
jae
popf
or
pop
adc
mov
cmc
mov
in
bound
js
dec
ret
and
push
push
pop
sub
push
xor
pushf
sub
in
and
lock
rcl
jmp
mov
xor
out
ja
cmpsb
int
out
jp
jb
sbb
cmpsl
xchg
sub
mov
enter
mov
call
scas
int3
fdivrs
lret
mov
insb
lea
mov
mov
arpl
and
aas
cmp
fimull
les
mov
jnp
fdivs
cmpl
into
jmp
outsl
test
sub
test
jmp
mov
lods
mov
pusha
pop
inc
and
cmc
jecxz
daa
shlb
cmpsb
insl
std
push
mov
notl
imul
repnz
pop
or
mov
into
dec
and
xlat
lea
xor
jg
bound
out
xchg
mov
std
jmp
xor
test
aam
pop
lds
inc
xor
idivb
jnp
popa
shll
and
or
adc
popa
cmp
xchg
inc
cmp
std
inc
sub
aad
jns
sub
cli
scas
dec
adc
pop
xor
ds
mov
fimull
push
subl
aas
pushf
imul
leave
cmp
pop
inc
add
pusha
pop
cmp
icebp
jmp
testl
aam
shll
repnz
stos
andb
add
cmp
call
mov
arpl
aam
add
test
jmp
adc
cmp
les
adcb
xchg
or
pop
mov
scas
jbe
mov
mov
add
and
mov
std
cltd
push
fcmovbe
sbb
insl
jb
ficompl
lea
push
push
sub
pop
in
jbe
jnp
jl
outsb
mov
and
fisttps
loope
or
test
xchg
addb
lods
cmp
adc
and
xchg
mov
flds
jb
jb
mov
sti
mov
cwtl
std
or
or
jle
aaa
lret
xchg
clc
scas
inc
mov
mov
mov
in
enter
cli
into
mov
cli
push
xchg
in
sti
or
mov
xor
idivb
nop
imul
jo
lods
cmc
inc
in
out
call
ret
mov
mov
or
mov
aas
test
popa
and
adc
inc
ja
in
aam
sti
xor
xor
pop
les
test
loopne
sub
ds
pop
push
fdivr
ficoml
xchg
dec
push
add
sbb
pop
or
mov
cs
xchg
add
fidivs
ret
pushf
mov
jg
dec
pusha
inc
insb
mov
dec
xor
int
cmp
xchg
jne
mov
mov
rorb
pop
adc
push
aam
xchg
cmpsl
rclb
inc
push
mov
sub
cmp
rorl
dec
rolb
adc
fsubrl
fwait
inc
cmp
push
mov
js
push
scas
fmulp
push
data16
or
in
sub
push
jmp
push
pop
dec
mov
push
xlat
ljmp
mov
push
pushf
sbb
insl
aaa
out
mov
pop
push
adcl
fwait
dec
add
jmp
cmp
push
lret
test
xor
cmpb
fcmovnb
int
aas
jge
push
sar
xor
subl
repnz
das
iret
jge
dec
sbb
xchg
dec
cmp
movsb
cli
shlb
js
pop
cltd
and
mov
rcl
mov
test
jbe
dec
push
clc
cmp
scas
sub
jg
mov
mov
mov
push
int3
sar
fsubl
sarb
lock
test
jle
js
xchg
cwtl
data16
xor
fucomip
sbb
jb
dec
pop
ljmp
push
loop
or
movsb
addb
lret
lret
sub
mov
and
push
xchg
mov
fs
scas
pop
ret
cwtl
inc
addr16
mov
pop
or
out
aaa
sbb
icebp
adc
mov
ja
daa
push
shrl
adc
sbb
fadd
nop
notb
pop
out
ficoml
or
icebp
sub
jp
pop
inc
fsubp
in
jb
mov
aad
push
ljmp
mov
cltd
in
sub
jmp
sub
imulb
push
clc
inc
mov
xlat
mov
iret
and
pop
in
xchg
mov
inc
xchg
dec
dec
repz
loope
int3
mov
aaa
xchg
mov
out
ss
push
push
scas
xor
lahf
fcoms
cmp
sub
add
dec
push
jp
and
repz
and
aaa
cld
add
mov
cmp
push
sbb
or
add
pop
sbb
in
sub
add
sub
fwait
sbb
adc
movsl
or
cmp
and
xchg
sub
ja
lods
cli
jg
leave
and
outsb
imul
leave
stos
push
in
fldl
inc
push
and
fistl
push
dec
icebp
mov
mov
out
in
iret
add
clc
xchg
xchg
jo
fwait
out
or
pop
loopne
sti
in
jge
inc
loop
leave
mov
inc
cmp
push
adc
std
out
daa
mov
jb
stos
xor
and
xchg
cmpsb
dec
andl
pop
mov
movsl
jmp
cmpsb
xchg
xchg
xchg
or
mov
sbb
inc
loope
inc
xor
rorb
sbb
aam
jne
sahf
test
les
inc
mov
das
adc
ret
insb
xorb
test
jl
dec
ljmp
sbb
inc
inc
xchg
push
jne
inc
cmp
xchg
aas
jp
fstps
and
out
andl
movsb
fcmovnbe
sbb
mov
testl
out
inc
repz
test
adc
fcmovu
cmpsl
xchg
sbb
pop
arpl
pop
popf
test
jp
mov
xor
fwait
push
jne
stos
loopne
scas
popa
jg
inc
push
testl
jns
inc
aam
orps
dec
and
bound
stc
xchg
push
jo
sahf
enter
mov
xchg
leave
and
mov
push
test
mov
jns
divb
int
mov
in
insb
add
push
jge
dec
out
inc
dec
jnp
and
jae
fiadds
adc
lds
sbb
add
popf
into
ljmp
fmull
xcrypt-ofb
cmpsl
insb
mov
shll
cmpl
xor
xlat
adc
mov
xor
repnz
dec
dec
cmp
mov
fwait
add
cmp
dec
lret
lock
sbb
add
loop
pop
fs
sub
add
test
sub
in
out
push
push
adc
mov
or
push
imul
cmp
mov
sbb
sbb
lret
dec
jge
sub
hlt
push
add
jno
add
clc
cwtl
clc
call
push
cmp
cwtl
nop
dec
sub
inc
repnz
push
jge
lcall
mov
xchg
mov
ret
mov
inc
mov
cmc
repz
dec
in
mov
js
movsb
xchg
fdivr
in
jmp
xor
push
pop
shll
xor
dec
sbb
inc
movl
aas
mov
dec
insl
lret
jg
les
lret
inc
cmp
xlat
jae
cmp
add
pop
dec
cld
jns
and
add
mov
rolb
popa
mov
add
mov
jecxz
push
dec
outsb
xchg
pop
adc
push
adc
xchg
mov
jecxz
mov
add
sub
decb
clc
shrl
mov
lods
push
cmp
and
or
push
psrad
adc
je
mov
jb
cld
jmp
mov
pop
lds
sbb
mov
cmp
aad
dec
es
dec
push
gs
ss
adc
das
dec
das
cmc
out
sbb
sahf
xchg
stos
xchg
dec
icebp
adc
lahf
cmp
xorb
jno
xchg
in
rcrl
pop
adc
icebp
cmp
lods
add
or
pop
aas
test
jle
outsl
sbb
cmp
sahf
int
movsb
jnp
sahf
push
inc
test
and
lock
pop
daa
fdivrl
pop
mov
test
xchg
stos
mov
xor
js
ret
push
clc
mov
sbb
mov
cld
inc
mov
ss
xor
pop
or
pop
test
loopnew
dec
pusha
or
imul
std
outsl
arpl
sbb
jle
int
test
rcrb
and
and
jbe
test
pop
imul
push
mov
shrl
outsl
push
ss
sahf
mov
nop
jl
lea
test
fbstp
repz
cmp
in
inc
test
pop
jl
jnp
ret
insl
dec
test
out
sub
inc
xchg
insl
mov
mov
pop
xor
push
outsb
sbb
mov
test
out
mov
es
or
xchg
gs
cmp
lcall
dec
sub
je
add
mov
imul
sbb
int3
shll
mov
inc
idivb
outsl
inc
add
mov
sub
pop
cmpl
cld
push
into
push
dec
sti
cmp
fisubl
cmpsl
lods
fs
cli
inc
les
call
jmp
push
push
loop
pop
fistpll
in
enter
adc
sti
test
xlat
pop
dec
push
xchg
pop
cmp
stos
mov
jb
pop
hlt
mov
sti
jp
aad
mov
in
adc
sub
sbb
dec
pop
in
jb
fldcw
in
pop
pusha
popa
std
test
push
jmp
mov
or
in
push
adc
sub
fwait
adc
inc
sub
bound
add
sbb
and
inc
out
mov
call
mov
dec
mov
mov
inc
adc
add
mov
decl
add
mov
xor
js
aad
cmpsl
pop
iret
fdivrp
mov
dec
sbb
ret
leave
fnstenv
inc
jno
or
or
data16
repnz
cmpsb
mov
sbb
stc
shlb
adc
inc
push
xchg
cmp
pop
shl
js
pop
into
or
cmc
roll
shlb
push
xchg
loop
sbb
mov
mov
xor
js
ds
mov
dec
push
mov
mov
call
repnz
cmp
std
and
sbb
test
pop
mov
dec
push
mov
andl
in
pushl
mov
fistps
aad
sub
sub
jbe
mov
leave
sbb
mov
repnz
and
or
jp
das
fwait
cmp
inc
aam
xchg
and
int3
add
inc
dec
adc
outsl
shr
push
lods
or
in
dec
or
add
cmc
arpl
mov
fwait
inc
clc
sub
fwait
push
neg
daa
jbe
push
jnp
mov
mov
jns
jecxz
or
add
les
clc
in
xchg
je
fistps
mov
pop
sbb
pop
push
add
jb
adc
pop
xchg
fnstenv
mov
push
mov
xor
int3
xlat
int
stc
pop
jne
iret
pop
inc
inc
loop
xor
mov
mov
mov
in
xor
dec
cmp
pusha
test
aaa
insb
idivb
out
into
pusha
xor
mov
jp
hlt
pop
mov
in
insb
fcom
or
cmc
fcomip
sbb
push
jne
xor
jbe
ja
or
fsubs
imul
cs
add
subb
xor
mov
inc
and
jmp
pop
les
cmp
cmpsb
sti
sbb
loop
or
es
fbstp
test
dec
and
sub
mov
mov
popa
pop
jo
clc
push
xchg
push
inc
xorb
mov
hlt
and
imul
push
inc
xor
or
popa
sub
jo
test
fwait
iret
in
iret
adc
mov
push
xchg
and
cmp
mov
bound
mov
lods
out
popf
inc
and
in
pusha
jl
gs
mov
mov
mov
cltd
mov
repnz
xor
loopne
mov
add
inc
xor
outsb
push
loop
stos
int
add
aad
pop
xchg
xchg
fstps
mov
sbb
mov
test
xchg
pop
fisubrs
xchg
inc
push
mov
sahf
icebp
test
push
sti
inc
mov
mov
out
adc
push
push
cs
fptan
call
in
sbb
movsb
je
mov
shlb
cltd
dec
add
rorb
loop
sbb
pop
push
arpl
mov
clc
push
add
mov
mov
pop
and
xchg
adc
insb
add
xchg
addr16
xchg
movsb
inc
xchg
or
bound
xorb
cld
scas
inc
in
jno
enter
repz
inc
xchg
int3
mov
int
add
clc
dec
jae
push
dec
xor
test
mov
sahf
jg
or
jg
xchg
sbb
out
mov
aad
in
out
push
xchg
in
sub
fs
cmp
adcb
add
sbb
repnz
int
nop
mov
sbb
fimull
jne
arpl
js
sub
or
mov
jl
stos
bound
stos
xor
nop
dec
push
movsb
vpmacswd
mov
and
enter
icebp
mov
sar
cld
mov
pop
test
mov
push
call
loope
int
jne
call
and
cltd
add
cs
and
loopne
mov
xchg
or
pop
cli
int3
insb
mov
ss
int3
cs
mov
cli
scas
xchg
call
inc
mov
sub
and
andb
jo
pop
push
decl
loope
fsubl
jmp
mov
mov
cmp
mov
sub
mov
add
test
cltd
outsb
adc
cmp
imul
hlt
mov
inc
push
mov
xor
mov
mov
out
pop
dec
vsqrtsd
jge
dec
lcall
xchg
jl
pop
leave
repz
test
mov
push
decb
les
insb
push
das
adc
sbb
jns
and
pusha
imul
mov
addr16
pop
push
shlb
inc
ljmp
scas
lahf
sub
into
add
xor
pop
loop
nop
fstpt
call
jo
inc
and
in
repnz
cmp
jle
or
push
in
enter
lcall
mov
inc
xor
jne
test
int
ja
jmp
es
adc
push
lahf
sub
lods
fwait
ret
mov
dec
enter
jl
pop
rcrb
mov
xlat
insb
sbb
or
subb
data16
aas
iret
fcompl
or
jmp
mov
push
sbb
jg
sahf
sbb
into
mov
jecxz
jmp
mov
shrb
iret
call
or
add
adc
or
nop
and
mov
punpckhdq
push
jecxz
sub
pop
iret
cmp
sbb
pop
subl
mov
notb
outsl
cmc
andl
push
dec
popa
add
call
push
in
xchg
mov
in
mov
mov
rorl
mov
stc
mov
jmp
outsb
mov
adc
std
cmp
jno
andl
out
cmp
imul
push
call
divl
jg
int3
pop
sub
lret
jno
mov
testb
xchg
imul
and
dec
add
fisttpl
call
sarb
jge
dec
fistpll
aaa
mov
rcll
add
jmp
ljmp
push
xchg
test
aaa
and
loopne
adc
push
pusha
in
or
pop
ljmp
ljmp
mov
movsl
lahf
test
int3
pop
xor
push
add
sbb
dec
and
xor
add
mulb
inc
xchg
popa
andb
or
negb
sub
push
shrl
and
or
arpl
fadd
iret
pop
lods
jecxz
into
cmpsb
xor
dec
fidivs
pushf
cmc
in
fmuls
inc
add
sub
test
les
aas
fmull
aam
xchg
hlt
inc
push
ret
lahf
ja
sahf
ljmp
sti
xchg
repnz
in
mov
addr16
mov
xchg
push
inc
stos
jecxz
jge
xorl
mov
sti
lea
mov
fisttpll
lods
dec
cmpb
inc
dec
aam
mov
fisubrs
leave
inc
inc
add
or
int3
mov
push
jg
lret
push
adc
add
int
add
push
repnz
sbb
add
es
rorl
cmp
xchg
push
lcall
sbb
push
pop
jle
mov
icebp
shll
mov
sub
adc
cli
es
fsubs
xor
loopne,pt
imul
push
dec
mov
ss
jl
fs
cmp
pop
enter
cmp
xchg
inc
and
sub
stc
sub
cltd
int
dec
lcall
scas
pushf
mov
push
out
and
sub
sbb
das
shrb
fisttpll
insl
cwtl
idivb
sub
into
xchg
xor
das
pop
mov
enter
in
add
pop
call
bound
rolb
adc
pop
pop
push
dec
ja
inc
fstpt
adc
xchg
jmp
ret
jne
or
or
rorl
add
data16
xchg
test
outsb
sub
push
out
testb
jp
add
mov
sub
inc
not
lods
inc
ja
sub
jo
lahf
nop
jmp
sub
insl
dec
and
add
rcr
aaa
or
jle
ret
fwait
xchg
psubw
push
xchg
je
pop
movsb
xlat
and
jecxz
lods
leave
xor
jne
push
in
lret
mov
xlat
dec
push
mov
je
cvtps2pi
cmp
inc
mov
push
push
and
dec
push
imul
inc
fisttpll
out
pop
jg
stos
add
mov
mov
push
adc
shrb
js
mov
sub
xchg
and
hlt
fnsave
out
mov
or
dec
and
jl
adc
inc
fnstcw
mov
lcall
ficoml
adc
cmc
fists
sub
adc
dec
cs
push
push
jnp
mov
aam
or
push
and
or
rcrb
movsb
aam
and
bound
sbb
add
es
mov
xchg
mov
xlat
pop
dec
sub
lea
mov
cli
or
nop
and
mov
pop
imul
push
roll
xchg
adc
aad
gs
pop
jne
cwtl
xchg
sub
test
rorl
cmp
daa
pop
adc
sbb
or
ret
ds
nop
cmp
addb
mov
mov
clc
out
push
ja
loope
sub
pop
sub
enter
cli
ljmp
dec
ret
xchg
xchg
dec
andl
xchg
jg
adc
sbb
push
enter
dec
andb
je
add
hlt
mov
jge
rorb
nop
and
fistpll
sti
mov
out
and
push
stos
cmpsb
insb
rcr
mov
data16
mulb
xchg
imul
add
test
fmulp
movsb
push
fidivrl
in
mov
out
lret
stc
test
mov
cmp
shll
pop
xchg
pop
pop
fsubl
test
mov
pop
loope
dec
inc
lret
movsl
mov
dec
cmp
sbb
adc
mov
dec
ljmpw
mov
mov
mov
mov
iret
push
cmp
fisttps
or
fstpt
sbb
imul
xor
mov
cli
fistpl
divb
rcrl
icebp
mov
movsb
jno
push
enter
xchg
daa
jecxz
jne
pop
jmp
sbbl
xor
pushf
dec
mov
adc
dec
and
cltd
and
sahf
sub
repnz
sti
je
xor
adc
mov
aad
pusha
pop
out
cmp
mov
mov
call
bound
inc
stos
add
cmp
movsl
inc
sbb
and
adc
mov
mov
and
xor
dec
icebp
mov
in
imul
cmp
mov
call
cmpsb
aam
daa
pop
push
ret
lret
sti
and
cmp
jae
in
mov
inc
pop
mov
scas
pop
test
push
mov
mull
scas
push
stos
cmpsb
test
or
push
and
mov
sub
jge
out
aaa
xor
cmpsl
and
test
scas
mov
cmp
mov
adc
jb
int3
mov
adc
sub
dec
or
add
subb
add
hlt
fcompl
mov
mov
in
cmc
stos
pop
jae
idivl
sbb
sub
xlat
mov
fisubs
insl
out
add
pop
pop
xor
push
fstpt
push
in
scas
sarl
push
lahf
lock
or
cmp
lods
push
fisubs
or
ja
lods
sub
mov
jge
and
in
pop
test
cmp
loop
ja
xlat
test
jnp
inc
shll
shl
jge
or
arpl
mov
jecxz
lds
dec
push
movsb
mov
insl
mov
jl
lods
lea
mov
into
cmp
fiadds
jmp
push
sub
sbb
sar
push
mov
xchg
fldt
jno
fnsetpm(287
fstl
jnp
sahf
jg
inc
inc
inc
sbb
add
das
jmp
lahf
fcoml
mov
and
out
fisttps
jns
hlt
pushl
fistpll
and
add
movsl
cmp
int
insb
adc
aaa
sbb
es
add
pop
cld
lret
test
jmp
in
adc
push
cmpsb
ja
mov
mov
arpl
or
jne
add
cs
or
icebp
je
dec
hlt
cmp
cmp
sahf
fsts
imul
cwtl
nop
test
push
ss
insl
mov
in
pusha
test
or
mov
sbb
testl
pop
mov
mov
xchg
std
jecxz
daa
std
pop
xchg
fsubrl
sbb
add
mov
mov
lret
xorb
gs
repnz
jl
std
lcall
test
scas
mov
popf
or
jp
loop
ret
jecxz
mov
call
push
dec
inc
aam
cmovae
inc
and
ret
clc
sbb
movsl
pop
mov
js
insb
insl
mov
lock
sbb
int
adc
popf
pop
xchg
push
loop
mov
nop
and
test
cs
lcall
inc
std
mov
lods
sub
push
xor
push
jae
cli
test
test
cli
ret
xorl
fs
cmp
fidivs
fldt
rorb
nop
aad
in
fstps
inc
aad
dec
xor
repz
push
push
lahf
jb
cmp
fwait
leave
pusha
inc
or
lods
loop
adc
inc
dec
mov
xor
mov
jns
sub
cmpsl
pop
addr16
add
adc
sub
lods
cmc
stc
outsb
sbb
fucompp
push
adc
and
clc
fsubrs
push
stos
push
dec
push
cmp
inc
cmp
mov
stos
xchg
xlat
fbld
xchg
jb
sbb
add
ret
movsl
jmp
in
fcoml
adc
add
mov
xchg
pusha
and
dec
xor
dec
cltd
add
sub
push
mov
sarb
or
sub
xchg
sub
stc
aad
push
repz
loop
fwait
testb
lcall
popf
dec
mov
fbstp
in
fdivr
or
jle
cmp
add
jo
lcall
xor
int3
pop
shrb
add
pop
xor
js
sbb
ds
mov
xchg
xchg
push
pushf
arpl
inc
dec
cmp
inc
jnp
dec
sbb
out
xor
mov
iret
mov
cmp
add
orb
cmpsb
repnz
inc
gs
pop
bound
push
clc
sti
jle
jae
mov
sbb
xor
ljmp
xchg
scas
into
lahf
mov
jne
add
jno
sbb
out
sahf
pop
xchg
lock
ficompl
pop
lret
mov
lahf
sub
pop
mov
lods
rcl
cmpsl
in
inc
xor
sub
aas
xchg
daa
sub
rcr
xlat
cmp
cmp
rcrl
mov
push
movsl
cmp
sahf
or
mov
subb
loope
xor
into
daa
aam
or
inc
sbb
mov
mov
xchg
jmp
add
lods
fldenv
xchg
dec
cmp
mov
push
dec
outsl
shrb
pop
int
xchg
lock
mov
xchg
xlat
jb
push
pop
push
sub
add
out
rclb
cmp
ret
jp
adc
mov
inc
mov
pop
enter
fiadds
bound
mov
hlt
loope
adc
sub
pop
shll
movsb
nop
pop
add
dec
insb
lods
out
imul
mov
add
fiaddl
mov
lret
jecxz
test
pop
lock
push
inc
ss
inc
lahf
call
cmpsb
imul
data16
daa
outsl
sub
push
xchg
pusha
test
adc
jp
pop
ret
mov
mov
or
ljmp
cwtl
jle
pushf
or
and
mov
mov
pop
call
mov
stos
test
outsb
out
jno
jnp
mov
xor
xchg
sub
xchg
sti
mov
dec
jp
push
mov
outsl
jmp
pop
or
cwtl
test
addr16
addr16
xchg
mov
faddl
mov
adc
jb
cli
xchg
sti
arpl
cmp
enter
cs
fs
xor
lahf
dec
dec
ljmp
xor
mov
pusha
xchg
faddl
pop
pop
and
aaa
loope
loopne
in
sub
roll
xchg
pusha
test
lahf
xor
lock
inc
and
and
ljmp
les
inc
shrb
jge
sbb
cmp
int3
test
pop
idivb
inc
in
xchg
cmp
lods
mov
subl
insl
sbb
out
inc
loopne
or
jns
xchg
xchg
mov
add
and
mov
cmp
int
xchg
das
aaa
icebp
lret
add
das
imul
stc
mov
enter
add
rol
scas
xchg
and
insb
xor
dec
shr
addb
movsb
add
rol
dec
cmp
int3
sahf
mov
dec
sub
loopne
inc
and
out
push
inc
mov
adc
jae
sub
loope
gs
lock
add
push
mov
fisubs
or
daa
scas
int3
ja
pop
lahf
shrl
mov
and
mov
pop
loope
rclb
arpl
leave
testl
addr16
pop
outsb
xor
repnz
sbb
mov
cmp
sbb
jge
sbb
jmp
jmp
dec
clc
divb
hlt
pop
and
rorb
loop
lahf
push
pushf
ror
inc
jnp
ja
enter
push
sbb
adc
fwait
clc
ja
pushf
mov
cmp
cmp
out
dec
inc
sti
push
inc
fcomps
or
outsl
fsubrp
add
push
push
mov
iret
dec
inc
xor
push
mov
sub
lds
xchg
lret
mov
ror
fwait
andb
bswap
dec
mov
xchg
int
jle
mov
shll
mov
js
movsl
inc
psubusb
or
in
enter
and
adc
sbb
dec
mov
mov
xor
sbb
push
movsl
fmul
add
bound
sarl
push
add
mov
xlat
insl
jp
inc
fs
cmp
push
mov
mov
jnp
sub
push
cltd
xor
je
sbb
outsb
incl
xor
mov
popf
push
addr16
cmp
ss
jne
jge
or
ljmp
xchg
xchg
ljmp
cmpsl
or
adc
dec
popf
jns
cltd
push
out
jle
std
dec
dec
mov
pop
adc
das
je
xor
dec
cli
xchg
aaa
shrb
fwait
lock
sbb
add
dec
adcb
jg
in
xchg
iret
sbb
mov
lds
sub
jmp
jge
fucomip
popa
xor
jne
jle
adc
add
mov
dec
jg
mov
lretw
xchg
mov
aam
push
pop
push
cmp
push
pop
fwait
sub
stc
jae
mov
lods
push
idiv
push
dec
leave
mov
cmpsb
lock
mov
jo
daa
jecxz
sbb
pop
fadds
jmp
shll
mov
mov
aaa
out
mov
andl
sar
and
daa
push
fcmovnb
inc
mov
loopne
pop
mov
fldcw
and
insb
mov
icebp
into
sahf
cwtl
sarl
mov
hlt
icebp
daa
hlt
out
sub
daa
pop
aad
xlat
jns
sub
mov
testl
imul
push
lods
call
pop
mov
testl
rcrb
popa
popa
pop
push
sub
insl
lea
jecxz
scas
jne
and
mov
call
pop
loope
add
push
lahf
into
adc
xor
dec
icebp
jle
das
adc
rolb
fstps
repnz
insb
clc
mov
scas
stos
and
je
iret
insl
popf
notl
push
ss
ret
mov
fs
ret
jg
push
inc
push
push
pop
leave
pop
dec
fldt
ss
out
adc
add
pop
dec
dec
sbb
pop
jno
gs
jns
cs
fucom
in
sbb
jbe
fistpl
sub
dec
lea
or
pop
push
mov
push
popa
mov
or
pushf
outsl
mov
cli
mov
xchg
xor
cltd
arpl
fwait
mov
mov
js
push
movsl
aam
mov
stos
sahf
inc
add
add
push
adcl
stos
jno
jl
lret
pop
push
jno
add
rolb
shlb
sub
and
clc
notb
mov
loope
sahf
cmpsl
cmpsl
xchg
fisttpl
notl
in
sbb
out
cmp
enter
icebp
pushf
roll
jnp
xchg
fstps
inc
ret
push
and
test
cmp
call
mov
in
mov
in
or
imul
outsb
pop
mov
je
data16
lock
sub
aam
sbb
arpl
xor
cmp
sub
arpl
cmp
adc
out
jle
addb
mov
push
or
cmp
cmp
sbb
lds
jg
popf
add
hlt
sub
adc
scas
lcall
mov
lahf
dec
dec
loop
sub
sbb
sub
addr16
push
lds
or
lcall
push
sbb
sti
push
movsb
sbb
enter
cld
and
mov
xlat
pop
mov
mov
sbb
push
fwait
shll
out
scas
cmp
push
popa
ret
fldl
push
pop
lcall
ret
dec
in
lea
mov
scas
aam
or
fdivrs
mov
or
sub
sub
mov
and
mov
repnz
xrelease
cmp
std
xorl
sbb
push
in
sub
jecxz
cltd
insb
cli
xchg
mov
inc
sbb
pusha
enter
sarb
sbb
fwait
add
movsl
jg
insl
xchg
rcr
jne
and
mov
push
imul
int
loopne
push
xchg
mov
testb
jecxz
push
pop
dec
imulb
sbb
sub
inc
subb
out
push
pop
mov
adc
sbb
fistpll
xor
mov
filds
mov
inc
sub
sti
xor
stc
add
xchg
cld
adc
jle
gs
leave
sbb
pop
out
loop
mov
mov
cmp
sub
sub
xchg
jp
rorb
mov
orb
add
push
enter
sbb
call
push
fdivs
das
xchg
cmp
jno
lcall
cmpsb
push
ja
test
mov
xchg
mov
fstps
pop
jns
push
clc
cmp
xchg
mov
jp
out
xchg
and
mov
add
sub
xchg
pop
mov
daa
arpl
ret
dec
cmp
sub
jbe
dec
dec
xchg
mov
add
xor
inc
je
les
lret
pop
dec
jo
call
sbb
dec
mov
int3
mov
dec
gs
adc
mov
push
inc
push
jmp
je
cmp
sub
pop
cmp
inc
xorl
arpl
xchg
andb
pop
stc
cld
mov
pusha
rolb
jle
pushw
xor
inc
pop
lcall
jae
adc
dec
es
xor
jnp
xor
jg
std
sbb
or
int
out
xor
inc
cwtl
imul
stc
inc
add
mov
sub
sar
jnp
out
push
out
sub
or
in
adc
and
iret
daa
inc
es
jp
leave
iret
int3
mov
mov
adc
test
stos
loop
and
xchg
inc
jbe
xchg
inc
jecxz
fstpl
mov
das
dec
push
and
ffreep
fadd
cwtl
jecxz
mov
push
mov
scas
enter
mov
dec
loop
add
mov
inc
push
popa
mov
xor
xorb
sub
dec
je
fs
sub
sub
fldln2
add
in
push
jg
mov
scas
inc
sub
pop
sub
jge
aam
dec
push
add
sub
rcrb
xor
out
lret
xlat
ja
add
movsl
in
mov
fmulp
jne
fsubs
outsb
insl
pusha
pop
nop
icebp
mov
mov
fwait
dec
fst
push
shlb
lahf
gs
mov
fwait
mov
jns
ror
cltd
mov
fsubl
push
push
rorl
jecxz
fwait
pop
jo
cmp
pop
pop
loop
in
test
pop
int3
xchg
scas
hlt
imul
xchg
icebp
cmp
mov
mov
scas
mov
push
lret
xor
enter
aam
push
jbe
test
mov
aam
popf
mov
sub
enter
lea
call
roll
inc
sub
jbe
into
pushf
inc
mov
inc
addr16
insl
push
sub
mov
call
aam
ljmp
stos
pop
fcompl
lock
mov
test
in
hlt
out
pushfw
sbb
ja
add
out
shll
imul
rcrb
xor
sti
and
aaa
aam
mov
sbb
scas
adc
dec
lcall
mov
pushf
arpl
add
mov
adc
lcall
icebp
mov
outsl
or
cmp
xchg
rorl
lahf
insb
fidivrl
js
sub
sbb
push
ss
pop
test
scas
stc
lret
jnp
popa
gs
adc
mov
xchg
mov
or
sub
adc
lods
stos
int3
call
pushf
pop
jmp
pop
imul
movsb
dec
mov
pop
aam
xor
ret
sbbl
mov
repnz
clc
sub
jo
fldl
jns
fistpll
fcomps
jmp
jae
js
pop
cli
jno
popa
lods
insl
jne
push
rcrl
push
and
movsb
outsb
imul
insb
jle
outsl
adc
add
in
or
jbe
mov
dec
popa
sub
jge
call
rcrb
push
and
lcall
popa
pusha
push
push
in
adc
mov
inc
adc
jnp
je
cmp
xchg
jl
pushf
out
and
push
bound
mov
pop
mov
pop
mov
add
adc
xchg
insb
or
dec
nop
and
fistps
or
call
cltd
movsb
inc
mov
cmp
mov
lret
ret
hlt
and
push
shll
mov
insb
adc
xor
lea
sti
bound
sub
je
test
sub
out
mov
adc
mov
add
pop
and
fs
fiaddl
cmpsl
adc
pop
lahf
ficoml
mov
clc
jnp
pop
movsb
pop
or
out
mov
jo
dec
pop
sub
xlat
push
jns
lret
lcall
inc
shrl
gs
mov
cmpsl
mov
pop
pushf
inc
ljmp
loop
out
rclb
sahf
out
sbb
mov
orb
mov
xchg
jnp
mov
mov
out
std
push
sarb
pop
xchg
imul
lock
jl
pushf
sub
data16
push
xchg
push
xchg
test
sub
popa
orl
mov
into
pop
and
das
aas
and
cmc
sub
sti
push
and
imul
mov
add
fimull
out
pop
sbb
mov
sbbb
push
fdivr
pop
subb
xchg
mov
jp
insl
insl
jb
test
test
cld
scas
cs
sbb
jns
fs
ljmp
jnp
push
pop
int3
sarb
repz
mov
push
mov
adcl
cld
rorl
jl
cmp
mov
rcl
ljmp
in
cs
sbb
clc
pop
lret
std
scas
loope
lahf
insb
xor
cmp
lea
jbe
mov
or
or
cmovge
cmpsb
cld
and
mov
pop
sub
jbe
test
rclb
xor
out
push
dec
cmpb
pop
aas
ss
jne
sub
mov
lahf
imull
andl
addb
jno
outsl
orb
mov
test
fisubl
pusha
les
lahf
xchg
fs
repnz
negb
notl
popf
mov
xor
pop
insl
pop
gs
leave
adc
js
sub
or
mov
add
out
jo
stos
mov
test
sbb
inc
bound
mov
shl
cmp
sbb
inc
cmpl
dec
sub
push
cmp
mov
mov
aad
inc
pusha
mov
cwtl
gs
or
pop
adc
pusha
sub
sarl
inc
inc
pop
rolb
sub
fcompl
push
cmp
movsl
lods
imul
js
or
mov
sbb
lods
mov
sbb
or
cmp
mov
add
add
cs
test
test
mov
xchg
scas
inc
xchg
ljmp
nop
inc
mov
dec
add
mov
or
sbb
mov
adc
mulb
ja
push
addl
aas
or
mov
outsb
leave
dec
or
insb
push
insl
movsl
jle
sub
mov
arpl
lcall
outsb
or
arpl
gs
in
aad
or
ljmp
add
jg
rcrb
mov
pop
jo
cmp
ficoml
or
adc
jae
xchg
cmp
std
insl
insl
sbb
outsb
cmova
inc
shlb
mov
jmp
orl
bound
mov
js
pop
fsub
add
inc
mov
pop
cmpsl
popf
push
mov
xor
push
enter
inc
imul
dec
enter
jnp
fxch
mov
lret
std
insl
cmp
out
test
out
jo
bound
sbbb
ljmp
xlat
lock
jmp
daa
sahf
movsl
icebp
add
aam
cltd
cmpxchg
mov
lcall
xor
sbbl
xor
jnp
jnp
cli
ljmp
cmp
sub
mov
dec
pop
pop
hlt
xchg
and
mov
jno
inc
outsl
and
imulb
lret
gs
pop
pop
pop
mov
out
sbb
mov
out
shll
outsl
dec
sahf
xchg
sub
lock
push
lret
adc
jns
jno
cmpsb
pushf
mov
sbb
aad
outsl
pop
push
mov
cmp
imul
pop
and
mov
xor
fnstcw
sbb
shld
iret
das
das
scas
adcl
sahf
mov
xor
pop
add
shlb
imul
and
bnd
data16
out
scas
icebp
repnz
lret
sbb
shrd
cmpsl
je
xchg
les
jg
repnz
add
loop
ljmp
shll
insb
imul
cmc
sub
mov
and
sbb
ret
ds
mov
push
inc
fldt
aas
and
stc
aaa
mov
xchg
mov
icebp
dec
mov
nop
sbb
fdivr
pop
push
mov
cmpsb
xchg
ret
in
ds
das
add
ds
sbb
stc
adc
shll
mull
jecxz
in
stos
and
fsubrs
out
pop
dec
pop
fisttps
jecxz
inc
mov
mov
cli
arpl
jne
rolb
call
sbb
dec
lds
std
pushf
add
pop
imul
fbstp
loopne
addr16
jno
adc
lds
sbb
jecxz
push
xchg
sbb
pop
add
jle
push
cmp
sub
mov
mov
add
jae
daa
and
xchg
icebp
pop
or
xchg
xor
xor
nop
pop
sbb
test
add
mov
ror
inc
leave
mov
sub
sarb
push
jo
pop
cs
sub
loop
test
push
xor
xchg
cmp
and
pushf
cli
xchg
xor
jmp
dec
dec
lea
imul
jle
ror
pushf
push
aaa
ftst
das
lods
int
rep
mov
popf
lods
stc
pop
pushf
out
and
cs
cmp
jno
andb
mov
add
and
adc
stos
mov
xor
mov
popa
xor
int3
and
push
sub
mov
das
add
loopne
or
aaa
mov
shrb
sub
dec
gs
inc
xor
and
cmpsb
inc
push
iret
dec
push
or
outsb
int3
cmp
nop
add
mov
mov
dec
arpl
push
cmp
pusha
cmp
das
xor
cmp
decl
pop
pushf
popa
mov
cmp
xchg
sbb
ficoms
loopne
aas
sbb
adc
jnp
mov
adc
mov
mov
sub
adc
mov
sbb
or
lcall
or
push
sbb
call
cmp
mov
leave
cmp
pushf
negl
rorb
push
push
mov
cmp
push
pop
jno
jmp
push
xlat
and
sarb
mov
pusha
scas
or
fwait
repz
testb
cmc
pop
mov
jge
nopl
ficomps
push
imul
inc
imul
imull
imul
add
ss
xchg
call
or
add
sbb
pop
dec
pop
push
hlt
push
hlt
jmpw
mov
sub
cmp
in
sub
xchg
in
adc
push
jne
mov
stos
cmpb
sub
push
mov
push
push
mov
fisttpl
jl
fld
js
mov
sahf
mov
push
icebp
faddl
xchg
pushf
push
mov
enter
add
sub
cli
jmp
and
sbb
xor
dec
fiadds
pop
ficompl
jno
jbe
dec
xchg
bsr
rol
jle
push
fildl
lret
bound
cmc
mov
add
jnp
dec
inc
cli
mov
cwtl
pop
inc
mov
dec
sub
sbb
cwtl
sub
mov
int
sbb
clc
repz
inc
inc
sub
outsl
fdivr
out
lcall
flds
out
pop
or
jg
add
outsl
insl
fmull
test
jnp
jmp
stc
or
jp
dec
mov
mov
dec
jne
js
xor
cmp
lret
repz
adc
test
cltd
sub
test
adc
int3
jnp
andps
cmp
pop
push
add
stc
imul
lret
xchg
rclb
push
xchg
outsl
push
dec
inc
mov
cmp
stos
fwait
mov
lods
sbb
push
jp
push
mov
mov
dec
and
cmp
rclb
aam
jne
dec
test
out
sub
xlat
inc
dec
add
arpl
mov
dec
arpl
cmpsb
ds
stos
push
xchg
xchg
jb
in
pop
popl
cwtl
jmp
lret
mov
push
jbe
and
loope
xor
push
xchg
lock
xor
scas
nop
cmp
fisttpll
adc
add
mov
jg
and
adc
popf
mov
popl
das
push
inc
push
mov
sti
mov
pop
or
lret
out
lahf
and
mov
jmp
into
push
fwait
sub
pop
sahf
mov
sbb
popf
jbe
jnp
xchg
mov
addr16
subl
mov
mov
andl
push
out
test
lods
sub
or
push
in
inc
xor
inc
daa
sbb
dec
lds
lret
outsb
dec
adc
mov
or
and
xor
decl
ret
or
sub
movsl
add
pushf
adc
cmp
pop
ret
mov
xchg
loope
mov
sub
push
lock
in
repz
dec
jecxz
in
sbb
popa
xchg
cmp
push
push
inc
sbb
pop
cmp
das
adc
lea
test
sbb
xchg
fwait
jl
leave
and
data16
cli
mov
into
cmp
gs
das
cmpsb
fsubl
jno
ret
pop
push
scas
lds
fwait
sub
adc
pop
xchg
add
cs
pop
dec
xchg
int3
and
cltd
mov
cmp
xor
std
movsb
mov
arpl
lahf
push
js
pushf
xor
add
xchg
mov
xor
out
repnz
dec
jae
pcmpeqb
out
mov
push
push
jo
cmpsb
xor
or
mov
cmp
mov
stc
push
jecxz
or
aaa
imul
mov
dec
jle
outsb
and
dec
test
jge
adc
mov
subl
jmp
lods
fwait
sbb
mov
sbbl
std
and
mov
and
out
dec
push
dec
mov
cmp
mov
lock
push
pop
ds
cmc
dec
adc
mov
and
mov
jbe
push
push
insb
pop
inc
popf
je
adc
stc
cwtl
lods
or
push
test
outsb
sbb
push
jmp
stos
test
sbb
jmp
xor
cmp
cmp
sub
and
mov
dec
sbb
mov
mov
lret
mov
ror
and
bound
lcall
inc
shrl
fcomps
test
inc
push
mov
aad
dec
outsb
jbe
es
in
and
or
shl
bound
pop
fldl
pop
xchg
cli
into
imul
mov
sti
stos
inc
sbb
popf
jp
cmp
xor
arpl
imul
hlt
daa
bound
xor
sbb
or
aas
jecxz
jo
cmp
mov
lret
inc
lret
and
cmp
sub
into
hlt
mov
fisubrl
lret
fldenv
daa
scas
fmull
inc
dec
push
pop
pop
mov
sbb
pop
cmp
loopne
in
in
cld
js
sub
xchg
add
sub
imul
test
add
pop
jg
mov
in
andl
mov
and
mov
stos
sahf
xlat
mov
fimuls
cmp
enter
mov
mov
push
xchg
xlat
shll
lret
and
hlt
pushf
ljmp
cs
cwtl
xor
xlat
dec
inc
sub
jmp
andl
ret
push
ja
mov
xor
iret
in
lret
mov
mov
xor
imul
into
inc
xor
adc
xlat
lea
mov
sbb
xchg
pop
jnp
jl
xchg
adc
stos
jp
add
pop
xchg
or
push
lods
bound
cmp
add
ljmp
sahf
xchg
in
adc
mov
xchg
or
cmp
mov
icebp
enter
aad
mul
pop
mov
aad
add
aad
xchg
arpl
popa
test
mov
push
pop
mov
mov
fstl
movl
push
adc
add
mov
outsl
and
xlat
fucom
mov
cmp
mov
ret
cmp
sar
shrl
ds
xchg
aaa
mov
sub
call
push
or
xor
lahf
sub
sub
repnz
cld
and
and
jl
mov
adc
xchg
or
xchg
sub
shlb
lods
mov
xchg
sub
and
lock
sti
cld
jecxz
cmp
pop
mov
lcall
das
out
test
fidivrs
dec
fsts
mov
cli
sahf
jbe
xor
mov
sti
pop
outsl
xchg
neg
mov
push
loopne
pop
test
aam
mov
and
mov
mov
out
push
adc
lea
test
leave
add
add
cld
or
adc
test
leave
push
sti
jb
stos
cmp
jo
push
movl
mov
xchg
mov
ds
dec
lods
dec
roll
int
iret
out
jb
dec
aaa
dec
push
push
int
mov
jno
in
mov
or
in
in
inc
in
sub
lcall
sbb
mov
ljmp
cmp
xchg
push
pop
add
push
test
lret
dec
and
inc
jne
xor
cmpsl
loopne
scas
mov
in
push
jae
push
xchg
sbb
testb
push
sub
ror
pusha
push
inc
jnp
pushf
cwtl
lods
cmp
mov
mov
or
sbb
adc
push
mov
movsl
jae
std
jl
xchg
ret
sahf
push
scas
ljmp
pop
jno
insb
dec
add
lcall
mov
popf
icebp
mov
xor
mov
out
sub
sahf
clc
out
jb
movsb
pop
mov
ficoml
jmp
addr16
mov
jmp
push
mov
push
ds
push
scas
mov
xor
jo
pop
ror
scas
jle
xchg
jbe
gs
cmc
ds
sbb
push
xchg
sti
inc
test
fsubrl
jecxz
sets
lods
mov
gs
mov
je
push
jg
inc
sti
test
add
mov
fs
jp
loope
and
and
sub
add
adc
popaw
jge
push
or
and
arpl
inc
sbb
pop
imul
adc
add
or
sti
jge
inc
push
nop
ja
or
push
mov
mov
mov
test
mov
addr16
faddp
and
sar
jl
xor
fstpt
pop
sub
push
ja
int3
ja
sbb
xchg
in
ljmp
cmpsl
nop
jecxz
dec
xchg
movsb
fidivrl
outsb
xchg
add
inc
data16
aam
inc
pop
fiadds
pop
push
lea
nop
push
mov
add
pop
sahf
andl
stos
sbb
cmp
mov
add
inc
dec
loop
ss
add
mov
jmp
xchg
fabs
adc
loope,pn
sbb
sbb
adc
cltd
loop
lods
cmc
adc
mov
repnz
shrd
sbb
cmp
inc
fnsave
sbb
pop
jg
popf
push
push
mov
xlat
inc
xchg
outsl
jae
lret
pop
sbb
dec
add
stos
movsb
mov
mov
and
movsb
push
repnz
scas
sbb
and
loope
mov
mov
push
pop
xchg
lods
je
icebp
sbbl
insb
push
xor
push
xchg
in
cmpsb
dec
xor
in
mov
cltd
in
out
cmp
xchg
cmpsl
mov
or
lret
fsts
jbe
arpl
les
insb
and
lea
orl
in
loop
dec
jge
sub
xchg
add
sub
inc
adc
leave
pusha
call
outsl
cmp
jle
test
pop
out
mov
pop
dec
dec
pop
xor
dec
fisubrl
sub
adc
xchg
frstor
notb
in
mov
mov
cmpsb
or
inc
pop
push
mov
mov
imul
jno
out
push
jnp
lods
or
jle
rcr
adc
add
mov
sbb
call
repz
fbstp
push
cmpsl
cmp
mov
push
dec
lahf
pop
ret
andl
add
lret
or
or
sub
inc
mov
jo
cmp
mov
fisttpl
shl
in
fs
add
push
adc
or
and
scas
outsl
pop
or
std
mov
rorl
cmp
stos
call
inc
pop
mov
jb
nop
xlat
mov
jge
test
sbb
cwtl
mov
mov
sub
jns
inc
mov
into
imul
inc
jg
inc
push
lahf
push
push
jg
lea
stos
dec
mov
movl
or
jo
pop
cmp
stos
push
push
sub
sub
cmp
xchg
add
out
mov
jle
dec
jbe
icebp
and
movsl
mov
sub
rol
out
popa
xor
push
mov
jmp
fcos
out
pushf
cmpsl
push
shlb
jl
jge
push
pop
jl
mov
inc
xor
addr16
lahf
fdivrp
js
jg
dec
pop
adc
jl
insb
repnz
jnp
test
xchg
jmp
stc
leave
out
clc
inc
arpl
cmpl
sbb
fistps
stc
incl
sub
sahf
push
and
out
push
aas
mov
ret
dec
xor
popf
int3
push
or
test
dec
inc
ljmp
jg
pop
fucomi
sub
loopne
insl
sub
outsb
in
imul
dec
leave
xor
adc
mov
outsl
or
loope
push
inc
aaa
jne
out
adc
adc
lcall
add
mov
cmpsb
sahf
nop
sub
jl
stos
lds
lret
mov
adc
call
inc
sbb
or
or
push
dec
cltd
out
inc
mov
inc
cmp
mov
and
inc
lret
or
jmp
lcall
inc
repnz
inc
imul
sahf
adc
push
ljmp
xchg
dec
xchg
daa
xchg
shl
pop
jnp
divb
loop
sbb
sbb
add
imul
in
icebp
in
mov
jne
ja
arpl
adc
add
int
popf
fsubrs
sbb
int
in
lahf
inc
push
gs
add
add
mov
adc
xchg
mov
dec
add
jnp
jnp
inc
dec
mov
bound
lock
hlt
dec
cwtl
add
inc
out
loope
sti
sbb
repnz
sub
mov
fsubr
jl
lahf
enter
mov
mov
push
testb
lea
mov
xlat
aad
rcrb
dec
outsl
pop
test
cmpsb
in
push
fs
mov
mov
add
xchg
inc
lock
dec
out
xchg
fisttps
enter
cmp
pop
inc
insl
cmp
pop
sub
cmp
mov
xlat
add
ficompl
sbb
roll
inc
xchg
arpl
jg
nop
stc
and
xchg
xor
pop
mov
push
les
pop
add
jb
lods
in
stc
shrl
ret
jno
pop
fcompl
inc
dec
cmp
mov
inc
xchg
mov
inc
jne
cmp
int
rol
add
shl
add
mov
and
xor
repnz
fdivrs
bound
jecxz
ljmp
int3
int
je
clc
xor
outsl
mov
mov
rcl
mov
and
incl
out
cli
stc
addr16
addr16
leave
jp
cli
clc
xchg
aaa
add
push
sbb
mov
xchg
mov
xor
stc
mov
xlat
pop
jb
popa
sahf
xchg
fsts
jge
leave
adcl
jnp
lahf
and
sub
mov
push
or
outsl
dec
mov
cmc
loopne
or
test
repz
lods
sbb
out
dec
aas
test
out
fsubs
pop
push
cmp
out
and
cmpb
sti
lods
mov
xor
mov
mov
and
lods
xchg
add
cmp
or
fmull
iret
addl
xchg
sarb
add
rcll
add
repnz
jl
push
xor
clc
aad
les
cs
shll
cltd
mov
shrl
sbb
je
ljmp
fwait
pushf
pop
in
pusha
ficomps
test
pushf
rcrb
mov
std
notb
xchg
fidivrl
test
and
dec
xchg
lock
xchg
or
pop
mov
jmp
add
int
inc
repz
enter
mov
test
rcll
or
or
xorl
sub
ret
mov
mov
fadds
cmpsb
in
jg
ret
int
test
xor
mov
rolb
inc
dec
in
sub
sbb
pop
mov
addr16
cmpsl
jle
incb
xchg
mov
mov
ss
mov
mov
test
xor
lret
xor
mov
inc
lds
add
daa
add
pushf
xchg
lea
dec
cmp
out
xchg
fnstenv
mull
cmp
xchg
out
enter
xor
adc
mov
mov
dec
cmp
or
fimuls
xor
jb
in
push
aad
rclb
pop
jg
mov
push
add
push
fnstsw
sub
scas
mov
lcall
popf
pop
sub
fs
inc
and
mov
mov
xchg
mov
ror
sbb
inc
sbb
mov
fstps
and
xchg
or
mov
push
lret
xchg
pop
test
mov
js
sti
mov
xchg
shl
ja
sbb
ds
pusha
shr
inc
mov
add
fs
and
pop
ret
jns
push
hlt
mov
xor
fstps
or
push
inc
notl
dec
and
adc
daa
xchg
jmp
xchg
mov
xchg
cmp
lea
pop
jp
jp
push
lock
xchg
ja
or
mov
lods
dec
in
out
daa
cmp
pusha
roll
cmpsb
xlat
das
add
push
mov
xor
in
dec
xchg
mov
test
add
es
insl
dec
jl
ljmp
ror
cmp
jp
pop
xchg
call
mov
pushf
push
pop
xorb
repz
pop
pop
adc
rorb
arpl
out
fsub
jnp
inc
sub
push
ja
jmp
sub
push
cs
in
std
xor
lret
nop
dec
push
out
call
stc
sbb
mov
xchg
mov
ret
mov
outsb
arpl
daa
pusha
mov
mov
jno
pushf
mov
push
mov
inc
mov
popa
mov
rcrl
mov
hlt
cmpl
mov
es
pushf
aaa
dec
pusha
push
or
ret
rcrb
leave
adc
shll
aaa
push
sub
sub
aam
mov
mov
push
ja
loopne
loopne
dec
push
inc
xchg
rcrl
mov
ret
fdivrs
cmp
enter
stos
insb
or
mov
pop
sbb
mov
loope
gs
je
bnd
les
pop
dec
mov
adc
inc
in
mov
pop
sbb
pop
lods
lods
xchg
loope
mov
mov
js
ret
pop
add
out
jae
cmpsb
sar
inc
repz
subb
ljmp
adc
test
jno
addr16
sbb
xchg
mov
into
cmp
cmp
xchg
insb
push
cmpsl
pop
mov
mov
mov
cmp
rcrl
adc
jns
mov
mov
into
and
adc
pop
hlt
inc
dec
scas
nop
add
repz
inc
fwait
mov
ret
fildll
mov
ja
xlat
leave
xor
sbb
scas
jmp
mov
and
adc
mov
stos
dec
cmp
mov
sti
jno
ja
ljmp
mov
and
call
mov
dec
movsb
push
hlt
pop
dec
sbb
or
jmp
into
stos
mov
mov
out
xchg
ljmp
cmp
cmp
rcrb
add
mov
sti
icebp
ret
into
imul
lods
or
test
xor
pop
in
push
movsb
insb
mov
aas
jnp
imul
adc
popa
nop
jo
lret
dec
inc
int3
pop
lods
lods
insl
cmpsb
sub
jbe
cmp
inc
xchg
and
push
inc
sub
popf
cld
mov
sarb
dec
jb
jb
ficoms
gs
out
sahf
push
push
scas
push
mov
gs
xor
sahf
pusha
data16
mov
pushf
pop
cld
mov
in
cltd
mov
pop
add
pusha
les
stc
xor
pop
lods
mov
stos
add
ja
mov
mov
imul
out
rol
fcmovu
clc
cmc
ss
pushf
lahf
xor
data16
icebp
xchg
sub
jecxz
xchg
add
das
and
push
push
out
push
jmp
movsl
dec
mov
sbb
stc
adc
mov
ja
cmp
mov
int
es
fwait
je
sbb
je
inc
push
xor
xabort
push
js
in
sahf
cmpb
stos
cmp
loop
xchg
inc
insl
push
fs
cmp
imul
push
jo
mov
data16
enter
xchg
jmp
jnp
inc
jle
inc
add
and
gs
ja
inc
jmp
imul
sub
fistps
xchg
and
lret
iret
cmpsb
call
int
sti
mov
sahf
xchg
dec
jnp
dec
pop
dec
add
sub
push
ljmp
gs
notb
xchg
xchg
mov
cltd
push
das
mov
jno
pop
xor
inc
pop
jmp
jecxz
insb
in
addb
lahf
and
inc
popa
add
xchg
inc
mov
mov
mov
aad
xchg
repnz
adc
jg
push
mov
sti
sbb
push
or
push
inc
mov
mov
scas
das
sbb
in
sbbl
sub
inc
lods
mov
jp
mov
cmp
movsl
xor
inc
sbb
aad
inc
pop
sbb
test
mov
insl
push
mov
loopne
sbb
addl
shlb
cwtl
inc
movsb
mov
aaa
icebp
hlt
out
cwtl
sbb
sub
jmp
scas
test
hlt
push
push
dec
bound
xchg
int
rcll
test
push
iret
cmpb
stc
loopne
jae
je
outsl
in
add
int3
xor
sbb
pop
lcall
repz
jl
jb
cmp
clc
xor
inc
push
out
xchg
mov
rolb
fsubl
outsl
or
mov
leave
cmc
loope
add
jae
inc
adc
int3
mov
rol
mov
xlat
adc
mov
ds
fsubr
pop
in
dec
jge
pusha
hlt
lds
xorl
data16
xor
loop
cmc
sub
fsubr
pop
sbb
add
ret
cwtl
sbb
dec
repnz
push
adc
test
and
inc
inc
dec
rcll
shrl
xchg
popa
jno
jecxz
xchg
test
sub
inc
lock
pop
mov
in
subb
rcl
dec
lock
mov
jnp
cmp
pusha
xchg
outsl
cmp
stc
jnp
stos
aam
daa
imul
aas
jno
in
dec
negb
fsubrs
repz
ds
daa
mov
es
xlat
scas
add
test
xor
jb
sbb
add
mov
fidivs
jmp
call
lods
mov
cmp
hlt
xor
push
pop
in
jns
lcall
and
cld
and
mov
jb
sbb
shll
push
cmp
or
test
fidivrs
into
stos
popf
std
aam
push
outsb
mov
mov
int3
mov
hlt
ja
in
and
mov
fidivrs
bound
in
cmc
jo
popa
inc
push
mov
ret
movntq
push
cmp
addr16
jge
cmp
leave
lret
das
xchg
mov
push
out
sbb
xchg
loope
lret
pop
cmp
mov
test
dec
sub
daa
sbbl
out
test
in
in
pop
loop
out
pop
mov
ficoms
inc
test
mov
imul
mov
nop
sbb
ret
jmp
fidivrs
sbb
in
std
les
push
fmull
sub
jg
popa
int
or
jle
pop
sbb
pop
push
and
xor
and
int
xor
pop
in
sbb
and
sbb
lahf
lcall
jae
test
pop
pusha
sti
cmpsb
lea
aad
sub
in
shrl
mov
cs
mov
ret
lods
push
insl
inc
jno
insb
test
aam
lret
aad
dec
xchg
sbb
pop
xor
fwait
lods
jb
int3
pop
subl
bound
sbb
push
mov
pop
push
jo
scas
out
es
das
popa
sti
das
stos
push
adc
or
out
sub
or
loopne
xchg
jmp
xchg
lds
mov
lcall
rcrb
fisttps
sahf
sbb
sbb
xor
xchg
stos
in
mov
xchg
addr16
pop
sbb
int3
int3
xchg
pusha
add
cmp
pop
push
cwtl
fiadds
shll
test
test
adc
out
mov
jbe
lods
je
les
xchg
dec
add
sarb
mov
mov
inc
cmpsl
pop
and
rol
sti
cmpsl
cmp
xchg
pusha
stos
fidivl
int
fcoml
jb
adcl
cs
lahf
jo
mov
sub
cmp
and
push
jmp
mov
inc
mov
out
nop
test
mov
popa
test
push
push
cmp
push
ljmp
jg
aam
lock
std
out
popl
add
jo
inc
inc
lret
in
lcall
lods
mov
lock
mov
xchg
xor
jno
mov
pop
cmp
cmp
xchg
jbe
dec
lret
outsl
pop
scas
popa
push
les
dec
or
jg
ret
fstpt
sub
fs
xchg
rclb
test
es
movsl
ds
outsb
adcl
pop
inc
int3
into
lret
and
sbb
jae
dec
aaa
xchg
fadds
fldt
into
xor
je
test
add
stc
lock
testl
pop
xor
jge
fwait
dec
addr16
out
sub
js
inc
shll
shlb
mov
dec
clc
call
hlt
or
shlb
or
lds
inc
mov
notl
inc
arpl
pop
arpl
add
shll
inc
int3
lahf
fsubp
mov
shlb
inc
xor
mov
bswap
je
es
lahf
jne
sbb
xchg
push
adc
push
adc
nop
repnz
adcl
adc
dec
jecxz
fcompl
mov
sti
xchg
sbb
push
scas
add
jge
or
add
inc
pop
call
lret
jmp
test
xchg
ljmp
ret
aas
decl
mov
inc
mov
mov
lock
jae
dec
inc
imul
dec
pop
daa
and
out
dec
or
and
ret
outsl
divl
iret
sti
push
ss
xor
mov
out
loop
xor
decb
cmp
cs
dec
jmp
or
lcall
out
jmp
push
arpl
jb
lea
xor
maxps
imul
popa
sub
addb
ja
test
mov
adc
sbb
sbb
jmp
mov
aam
sbb
lret
das
rolb
xlat
dec
adc
cmc
test
and
mov
dec
push
repz
add
mov
cltd
push
testl
pop
aas
aad
jmp
outsl
fwait
push
pop
add
xchg
pop
in
rorb
fs
gs
adc
push
xor
in
popa
daa
shll
pop
sbb
sub
jg
push
cmp
xor
mov
stos
mov
mov
rcl
and
adc
mov
out
stc
pop
pop
out
mov
sarl
push
push
fwait
dec
push
sub
in
inc
loope
stos
push
xchg
mov
inc
xor
mov
je
ret
daa
add
cmpl
mov
dec
loopne
and
lret
jns
and
cmp
enter
xchg
jle
bnd
or
fnstsw
jmp
cmp
push
jnp
inc
mov
fcomps
shlb
add
aaa
or
or
xor
stos
and
nop
mov
cwtl
mov
xchg
ret
bound
mov
or
scas
outsl
jae
or
in
fwait
loop
out
push
pop
add
fsubrp
popf
add
jnp
lcall
aas
mov
dec
in
sti
scas
push
mov
mov
imul
push
fstpt
xor
cmp
mov
push
mov
sbb
insb
int
pop
mov
mov
test
mov
and
inc
lahf
mov
and
push
pop
pop
stos
push
and
or
mov
pop
xor
nop
shl
mov
decb
push
jo
cmp
ss
sub
adc
cmp
or
adc
cli
xor
loop
inc
sub
fs
push
push
insl
and
dec
ss
mov
lea
out
dec
add
mov
sahf
fisttpl
fisubrs
shll
sub
call
cmc
xchg
mov
add
popa
test
cmp
mov
add
xor
or
cmpsl
outsl
mov
imul
cmp
xchg
nop
aas
inc
sbb
inc
arpl
mov
movsl
leave
push
addr16
mov
loopne
test
jmp
jbe
inc
jno
addb
xchg
mov
fs
popa
xor
rorl
gs
fnstsw
push
cmpsl
addr16
push
lds
dec
pop
fdivs
mov
pop
inc
enter
insl
sub
jmp
sbbb
jl
lock
fcmovne
pop
xchg
test
negb
sub
cmp
lods
fs
mov
mov
mov
aad
or
stc
rcrl
lds
in
call
and
dec
leave
dec
or
psubd
cmpsb
and
mov
into
ss
push
xchg
adc
sbb
sub
arpl
fsubl
ret
test
adc
shrl
sti
and
call
scas
hlt
subb
bound
sbb
dec
into
arpl
mov
or
pusha
push
add
hlt
pushw
xchg
push
aaa
xlat
scas
push
xor
js
jecxz
dec
je
sar
sub
dec
dec
cmc
lock
insb
mov
fadds
test
in
fsubp
mov
mov
jo
xor
cmp
cwtl
das
inc
test
cmp
pop
sub
sbb
clc
imul
test
pop
outsl
cmpsb
int3
daa
xor
mov
mov
sbb
rclb
pop
inc
cmpsb
addr16
xchg
push
sub
cs
fucomi
hlt
aaa
cmp
test
sub
jo
testb
je
mov
adc
adc
add
xor
andb
push
dec
call
xchg
dec
ret
xchg
or
cmp
xor
movsl
jge
push
dec
stc
fisttpll
inc
into
arpl
stos
xor
sub
xor
clc
icebp
push
lahf
cmp
dec
dec
mov
mov
sbb
mov
mov
pop
pop
mov
dec
inc
mov
loope
jne
push
loop
sbb
in
sub
cmpsl
jbe
out
pop
cmpsl
jo
pop
ds
int3
inc
gs
sbb
sub
jge
xchg
enter
jg
add
lret
xchg
jno
pushf
filds
icebp
mov
rep
rcrl
pop
shlb
movsb
pop
es
test
and
add
add
aam
sbbl
xor
rorl
lcall
pop
in
or
mov
pop
adc
xor
or
mov
push
push
push
lods
ret
adc
sbb
cs
ljmp
cmpsl
and
test
cmp
pop
xchg
test
jecxz
sti
mov
shll
xor
adc
test
cli
ficoms
sub
int3
and
test
or
sub
cmp
sub
push
inc
int
mov
bnd
xchg
sub
inc
mov
pop
test
mov
sbbl
lds
push
pop
xchg
stos
xchg
adc
mov
and
cmpsl
je
mov
and
fcoms
iret
push
divl
clc
in
lea
xchg
xor
cmc
shl
out
js
jb
push
ds
push
inc
gs
ret
xor
dec
shlb
sbb
cmp
mov
xchg
inc
ret
fwait
nop
pop
out
or
shll
hlt
popf
pop
jae
pop
pop
mov
xchg
push
imul
xor
fdivrp
pop
pop
insl
je
in
push
and
orb
and
fidivs
test
es
jns
lock
mov
pop
mov
outsl
push
in
xchg
notb
sbb
aam
fistpl
ror
aaa
std
cmpsb
dec
ljmp
dec
shrb
or
push
js
dec
xor
imul
xor
adc
dec
frstor
pop
sahf
pop
or
mov
mov
lods
je
add
hlt
lcall
aas
or
sub
mov
push
sarl
or
mov
ret
out
lods
dec
pop
push
mov
mov
sbb
loope
pop
jg
cmpsb
icebp
mov
leave
pop
loope
jbe
sbb
lds
in
mov
fwait
mov
ljmp
loope
out
and
ja
sub
adc
adc
test
sbb
sub
and
aaa
aam
ficompl
dec
xchg
push
sub
push
les
dec
pop
mov
cli
pop
xchg
test
jge
jge
xor
scas
adc
xor
xchg
lret
add
test
lret
inc
add
inc
mov
add
subb
sub
push
idivb
imul
adc
mov
mov
sub
and
or
add
add
xchg
outsl
sahf
push
add
adc
mov
jbe
ss
push
jo
out
push
orl
mov
icebp
jmp
in
dec
imul
jg
sti
adc
test
subb
ja
mov
jl
cmp
jge
jb
pop
icebp
sbb
call
push
mov
jbe
push
insb
or
adc
add
mov
inc
pop
mov
repnz
fwait
and
icebp
jns
mov
pop
cmc
rcr
cld
mov
clc
mov
mov
xchg
and
mov
faddl
sbb
mov
icebp
ficoms
sub
popa
and
cmpsb
outsb
rcrl
inc
loop
adc
inc
mov
sub
cmp
add
test
mov
pop
rcl
arpl
test
aam
data16
loopne
sub
push
test
mov
adc
repnz
cmp
adc
xchg
jecxz
mov
xor
dec
sbbl
cld
xchg
mov
loopne
icebp
or
cmp
fwait
push
add
outsl
jbe
sarb
jae
mov
sub
movsb
jecxz
test
fucomp
dec
jbe
xlat
jmp
jl
mov
sub
sbb
sub
cltd
add
mov
mov
jmp
push
stos
add
push
sub
push
loopne
in
add
andl
adc
frstor
inc
and
xor
in
xor
je,pt
fistps
xchg
rorl
aam
repz
xchg
adc
mov
add
add
aaa
adc
pop
adc
aas
data16
xor
mov
mov
shll
lahf
inc
adc
data16
enter
jb
or
jmp
ret
loope
rcll
aad
fstpt
cltd
clc
sahf
xorl
mov
sub
sub
mov
inc
mov
lcall
dec
pop
and
push
movsb
sti
sti
repz
push
test
inc
shlb
insl
jbe
dec
iret
add
cmpsb
imul
sub
mov
mov
cld
inc
mov
or
mov
jae
test
inc
rolb
paddq
xchg
notb
stos
daa
flds
mov
add
or
cmpsl
sub
scas
mov
push
nop
mov
add
in
das
cmp
xor
xchg
xchg
inc
xchg
mov
xchg
adc
clc
popf
pop
and
fimuls
ret
add
into
mov
jle
fistpl
push
xor
movsb
sub
inc
pop
mov
inc
movsl
out
pop
pop
jle
lods
lahf
lret
and
fisubl
sarl
fstpl
loopne
xchg
pop
add
jb
or
fs
cmpl
repnz
cmc
test
sub
or
in
in
fadds
aas
push
push
lea
cmp
cmp
mov
subl
jno
add
xchg
fdivrs
xor
dec
sbb
xchg
dec
cmp
sbb
imul
das
subl
or
mov
sti
inc
push
imul
xor
dec
adc
add
call
cmp
in
adc
xchg
adc
push
dec
jge
xor
mov
imul
fcoml
or
inc
xor
lea
pop
aas
xlat
call
leave
push
popf
mov
addl
xor
fmull
sbb
stos
lds
jae
cltd
mov
arpl
push
ret
or
cmp
jg
ss
cmp
imul
scas
push
jmp
mov
out
scas
imul
repnz
sub
scas
jge
push
mov
mov
jno,pt
dec
mov
mov
mov
data16
loopne
mov
mov
imul
outsb
cmp
repnz
cs
push
ja
arpl
addl
xlat
sub
sub
fsubrs
call
hlt
sbb
aas
cmp
sbb
dec
or
push
jp
xchg
mov
mov
jne
sub
lods
insl
cmp
sub
push
mov
lods
mov
fabs
ja
rorl
push
cmc
cmpsl
cld
inc
imul
or
dec
jmp
push
test
xor
loop
das
sbb
cmp
mov
es
cmpsl
scas
cli
jb
fwait
xchg
int
push
pop
lret
jbe
stc
repnz
jl
in
fwait
add
shll
mov
inc
shll
repnz
sbb
inc
fidivrs
pop
mov
popa
xchg
shl
add
pushf
andb
sbb
insl
pop
int
subl
outsb
mov
call
lcall
lock
mov
dec
push
jl
cmp
xchg
jp
bound
xchg
adc
aad
mov
popf
cmp
popf
xchg
movsb
in
ljmp
orl
sub
add
mov
mov
mov
mov
dec
mov
sub
or
sbb
xchg
stc
and
cmp
inc
mov
out
subl
jge
or
mov
or
push
sbb
popa
je
pop
les
aad
cwtl
xor
xchg
jb
clc
xchg
cmp
ljmp
and
fs
fcomp
add
loopne
out
mov
enter
aad
ret
mov
scas
and
addb
test
les
push
push
outsl
int3
dec
in
lcall
out
ret
add
fstl
es
imul
daa
sub
inc
mov
das
roll
cmp
add
push
mov
inc
jno
mov
or
ret
lds
xor
jne
call
mov
add
outsl
repz
in
mov
mov
subl
es
icebp
adc
scas
dec
test
test
xorl
sbb
inc
pop
pop
out
icebp
mov
ss
or
or
pop
and
mov
out
ret
dec
cli
data16
outsb
add
cli
adc
ds
sbb
pop
mov
add
push
mov
lods
insb
mov
outsb
imul
in
pop
in
push
icebp
sbb
loopne
mov
js
hlt
jl
aaa
or
jp
xor
adc
sbb
cmp
mov
jp
aaa
add
push
jmp
rorb
add
sti
mov
in
pushf
sub
inc
test
shl
cltd
and
nop
loope
repnz
lcall
daa
fwait
das
out
mov
popf
imul
fbstp
movsl
pop
pop
xchg
loop
xlat
fsubrs
test
jle
lahf
int3
and
jp
hlt
jno
push
vrsqrtss
mov
cmpsb
test
xchg
push
xchg
lahf
ja
ljmp
imul
bound
inc
mov
sub
ja
jle
xchg
inc
cmp
fwait
adc
jnp
sub
push
mov
push
shr
hlt
pop
mov
add
lods
rcrl
and
dec
xor
testl
scas
out
sahf
lods
fadds
stos
sub
xor
sub
out
in
mov
test
lret
rclb
adc
lods
stos
pop
jl
pop
js
xchg
rorb
add
and
imul
sub
arpl
lock
push
idivl
pop
add
and
jp
jp
dec
cmp
xor
and
icebp
arpl
mov
loope,pn
test
rol
cmc
push
mov
mov
loopne
insb
testb
pop
aam
daa
popf
sbb
lcall
ret
dec
loope
push
adc
sti
iret
mov
mov
into
push
or
movsl
mov
mov
dec
pop
xchg
xor
cmc
inc
lods
pop
jge
ja
shrb
xor
mov
jge
shlb
test
mov
stos
and
dec
loope
sub
jb
icebp
test
cmp
adc
mov
jp
jmp
mov
inc
shrb
xchg
jns
or
jno
mov
sbb
fxch
rorb
add
leave
pop
hlt
pop
adc
aam
jae
out
pop
pop
sbb
ljmp
shll
ret
data16
dec
dec
aam
fmul
movsb
mov
cmp
fidivrs
movsl
leave
mov
sub
dec
pop
es
ss
pop
fwait
lea
fisttps
mov
jp
inc
ficoml
ret
rcrl
jle
scas
cwtl
rcl
and
dec
stos
and
and
mov
lcall
dec
lea
push
outsl
pop
inc
xchg
clc
xlat
test
inc
or
pop
xor
test
lret
inc
xor
rcrb
loop
xchg
jmp
xor
aaa
outsb
imul
idivb
pop
sbb
add
retw
repnz
dec
ja
mov
in
mov
sbb
leave
adc
sbbl
pop
or
mov
out
jge
lock
add
jbe
cwtl
mov
lock
btr
and
mov
icebp
xchg
and
inc
pushf
xchg
lret
lcall
aad
cmc
mov
mov
out
or
mov
cmpsb
in
insb
sarb
and
and
lods
mov
fisttpll
dec
push
or
jno
or
stos
lds
jl
cmp
aaa
test
jo
jge
imul
sub
cmpsb
daa
mov
je
movsl
xchg
mov
push
scas
xchg
xchg
sbb
xor
dec
mov
dec
movsb
inc
in
mov
xor
gs
sbb
or
ljmp
jbe
ret
jecxz
mov
insl
movsl
add
jmp
push
xor
mov
roll
ret
xor
mov
adc
mov
mov
mov
mov
ret
data16
push
cmp
mov
leave
add
jecxz,pn
pop
mov
cmp
lods
ljmp
lahf
int
rcll
sbb
pop
iret
sbb
add
call
fcmove
insb
nop
xchg
or
sub
jl
ss
clc
xchg
rcll
or
push
dec
ljmp
stc
pop
std
mov
cld
jnp
in
jno
pop
clc
sub
or
jg
enter
add
push
push
in
xorl
sub
mov
xor
stos
cmp
pushf
sub
js
in
xor
iret
jl
mov
aaa
ficoms
adcl
add
stos
inc
sub
pop
sub
xor
hlt
daa
sbbl
cs
xchg
imul
aad
inc
arpl
inc
push
imul
mov
jecxz
adc
mov
je
fcomps
dec
cwtl
fstps
jp
stc
xchg
scas
cltd
lret
pop
repnz
xor
xchg
push
dec
in
pop
repz
xlat
outsl
notl
jp
mov
cmp
pop
sub
cli
dec
shrb
int
mov
push
enter
cs
fldt
cmpl
add
add
mov
sub
scas
pop
aad
into
mov
pushf
or
jmp
push
xchg
fstps
in
mov
pushl
add
xchg
out
pop
dec
nop
arpl
mov
or
lods
ss
jmp
mov
adc
add
xchg
push
xchg
inc
fisttps
out
inc
mov
filds
cmp
mov
sub
jp
pop
jb
repz
and
movsb
insb
cwtl
adc
or
sbb
jnp
insl
gs
divl
dec
lods
adc
mov
pop
sbb
imul
dec
fisubs
and
pop
push
xchg
es
or
jl
push
repz
xchg
mov
pop
dec
out
fdivrl
fidivrl
fiadds
jecxz
testl
and
aas
push
cld
int3
sbb
fcoms
mov
push
aaa
and
xchg
mov
dec
inc
push
sub
xor
loop
outsb
sub
sbb
push
lods
mov
into
mov
sbb
lods
mov
das
xchg
out
rcrb
test
icebp
push
sub
mov
subb
xchg
scas
roll
lods
add
aaa
cltd
xchg
or
xchg
xor
lahf
nop
mov
imul
sub
insl
ss
mov
cmpsl
test
jmp
mov
lahf
and
dec
pop
call
test
xchg
mov
sub
lcall
clc
subl
aas
je
ret
or
and
insl
push
mov
cmpsb
mov
jl
push
inc
push
shll
sti
sub
cmp
push
fsts
mov
icebp
in
mov
ficompl
shl
push
jmp
int3
jmp
sbb
cli
fimuls
movd
enter
mov
and
pop
mov
xchg
and
nop
sar
imul
mov
test
xor
inc
mov
sbb
fidivrs
aam
fwait
jae
subb
rol
push
or
cmp
mov
ret
or
mov
pop
mov
push
pop
data16
std
andb
lds
mov
mov
push
scas
and
sbb
push
mov
mov
mov
repz
popa
mov
enter
fcoms
cmp
leave
adc
push
mov
or
or
sarl
inc
pop
les
xchg
stc
mov
sbb
xor
loop
xchg
pop
adc
ds
lcall
into
cmpsb
hlt
sub
mov
xchg
push
pop
sub
dec
pop
inc
inc
mov
cmpsl
pushf
movb
bound
aaa
imul
stos
scas
cli
mov
mov
and
fsubrl
sbbl
shl
les
mov
jge
mov
xchg
test
and
mov
or
in
cmp
inc
imul
adc
sub
adc
jecxz
shl
test
pop
cmp
dec
cmc
shll
orl
movsl
dec
mov
push
lea
push
adc
ja
das
cmpsb
dec
fsqrt
jno
pop
cmp
pop
adc
js
inc
lret
lock
es
inc
adc
andl
sbb
outsl
popl
adc
shlb
mov
bound
sub
cmpsl
push
lock
mov
pop
fistl
mov
mov
lcall
testb
test
cmp
jecxz
test
mov
cmp
cmp
test
shlb
mov
jo
mov
insb
inc
or
or
push
aas
push
insl
ljmp
ljmp
cmp
add
fiaddl
movsl
lods
call
shll
xor
push
xchg
cmp
call
popf
jo
jbe
lret
mov
mov
push
scas
sbb
sbb
cmp
pop
leave
loope
leave
pinsrw
push
cmpsl
cmp
mov
push
jmp
jbe
cmp
xchg
fldenv
pop
cmp
out
adc
inc
mov
adc
dec
ss
and
ja
mov
push
je
inc
mov
aaa
xor
sahf
test
jmp
mov
sub
cli
mov
adcb
insb
dec
mov
outsl
cld
shll
add
add
mov
sub
pop
add
jl
push
test
push
dec
shlb
pop
lret
push
and
shrb
sub
in
jp
fdivs
nop
adc
push
daa
out
sub
cwtl
xchg
insb
test
xor
rol
lahf
lahf
xchg
jmp
inc
lret
aam
xlat
lds
imul
pop
mov
cli
jl
xor
sbb
loopne
inc
ret
mov
push
das
mov
ret
xchg
out
test
ret
inc
ds
mov
sti
ret
movb
and
popf
sbb
cmp
pop
sub
popf
cli
jp
or
fidivs
cmpsb
mov
sbb
movsl
mov
mov
inc
jbe
cmpsl
sub
dec
add
or
jl
jecxz
fstpt
add
jb
fwait
adc
xor
inc
icebp
lds
mov
inc
push
ror
jg
lods
push
repz
or
mov
neg
jns
into
ret
mov
addb
fidivrs
adc
add
addl
bound
or
rcll
fiaddl
andb
or
sbb
insl
sahf
cwtl
mov
dec
adc
jle
xchg
push
sti
shrl
xor
in
idiv
pop
aas
pop
setl
mov
jnp
cltd
push
fxch
andl
mov
nop
and
fndisi(8087
xor
stos
dec
jns
dec
and
std
imul
repz
push
pop
fmulp
sbb
subl
jnp
add
movsl
fildl
out
les
xor
xchg
or
jo
pop
push
icebp
mov
push
aas
inc
fs
push
incl
cmpsl
dec
xchg
in
xchg
cmp
out
cmp
pushf
ret
jbe
in
arpl
jmp
xchg
aad
addr16
push
hlt
inc
das
fimuls
push
test
push
gs
in
fists
dec
dec
jge
dec
jmp
sub
and
in
sbb
xchg
pop
lret
lods
sub
jb
xor
mov
je
pop
or
pushf
or
test
mov
push
movsb
cmpsl
cmpsb
jo
movsb
and
xor
rorb
ret
mov
mov
push
jmp
cmc
stc
adc
xchg
inc
out
imul
inc
sbb
inc
xchg
movl
daa
shl
add
pushf
fsubrl
and
sbb
icebp
mov
lret
insl
stc
scas
aaa
sbb
mov
cltd
add
sub
mov
das
movsb
and
jp
push
push
ficompl
clc
mov
loop
nop
sub
ds
call
in
ret
cmp
unpcklps
cmpsl
and
and
aad
je
je
xor
lds
adc
loope
outsl
push
push
dec
daa
sti
mov
pusha
dec
xor
jbe
popf
rcl
stos
pop
filds
lods
xchg
cmp
pop
es
shll
loop
imul
mov
js
out
lret
bound
push
lock
inc
push
mov
inc
hlt
inc
pusha
into
loop
mov
mov
ds
scas
mov
lcall
andb
shl
sbbb
add
push
xor
clc
mov
jo
or
add
outsb
pop
mov
nop
push
xor
or
pop
fsts
jg
mov
lods
and
mov
xchg
pusha
sahf
dec
lock
in
mov
mov
xor
into
test
enter
ficoms
ret
mov
push
call
jo
pop
cmp
push
or
adc
hlt
adc
dec
xchg
dec
aad
sbb
je
in
or
sbb
add
popa
mov
sub
jno,pn
xchg
jb
ret
cmpsl
add
testl
scas
fcoml
jg
xchg
rolb
mov
mov
or
xlat
inc
jns
push
sahf
cmp
stc
test
hlt
sub
dec
mov
int3
ss
loop
std
jmp
mov
fldt
and
mov
dec
in
dec
dec
clc
pop
add
cmpsb
scas
mov
aam
lods
push
pop
dec
pop
pop
sbb
test
imul
add
pop
testl
or
mov
xor
inc
stos
inc
sub
pop
in
adc
sbb
sar
cltd
jge
cmp
sbb
js
or
inc
repz
jecxz
dec
lods
ror
popa
mov
add
pop
pop
jno
mov
insb
jbe
sbb
add
test
cmp
or
push
jae
and
pop
mov
dec
rcrl
add
insl
fsubl
int3
testl
shrb
and
adc
lret
cld
sub
arpl
fcoml
lods
or
test
popf
subb
add
cmpsb
aas
aam
sub
divb
fdiv
and
or
xor
mov
xchg
outsl
out
dec
scas
add
dec
or
xlat
cwtl
dec
ret
imul
jmp
and
rcrb
in
pushl
xchg
adc
roll
sub
or
xchg
cmp
add
dec
xchg
mov
shlb
scas
aad
jge
cmc
ljmp
popf
int
push
jne
ss
sbb
cmp
daa
inc
insl
xor
out
and
and
adc
dec
xchg
sub
fimuls
xchg
and
testl
repnz
pop
xor
or
lods
push
sbb
lret
pop
lods
andl
cmp
push
out
shll
mov
les
icebp
push
rcrl
sbb
xlat
sub
push
daa
inc
and
movsb
lds
cmp
push
mov
mov
and
mov
loopne
cli
adc
stc
sub
ds
shr
add
sub
mov
inc
mov
faddl
bound
in
pop
cmp
xchg
mov
dec
jae
clc
jae
ljmp
enter
movsl
add
ret
nop
cmp
icebp
xorb
or
mov
js
inc
fcmovb
insl
xor
hlt
cmp
jge
inc
les
add
stos
lret
loop
ja
popf
lret
sub
in
out
pop
mov
fadd
addr16
jl
das
sub
mov
sahf
ret
adc
sbb
ds
ret
sbb
or
dec
adc
pop
mov
jbe
test
add
ss
ds
stos
lea
push
ljmp
pusha
jge
xchg
mov
out
int
and
mov
test
inc
mov
xchg
or
hlt
jg
mov
popf
cmpsl
push
push
mov
xchg
jp
in
xchg
mov
out
int3
pop
cld
xor
in
popf
push
pop
pop
mov
faddp
mov
aas
test
add
fistpll
test
push
mov
dec
sub
lods
cmpsl
mov
rcrl
ret
lods
loope
xchg
jge
mov
imul
and
mov
iret
cltd
mov
ja
out
push
aad
xchg
sbb
sub
andl
lods
sub
subl
push
cmpsl
dec
xchg
aas
cmp
imul
enter
data16
test
sarl
xchg
push
add
push
ficoml
imul
lahf
cmp
xor
mov
imul
add
addl
int3
mov
outsl
pop
add
roll
lods
mov
cmp
jno
mov
call
mov
xchg
sbb
xchg
aad
int
cmp
xchg
insb
mov
add
xor
jl
pop
sub
pop
xchg
dec
mov
fs
adc
mov
adc
into
js
out
lds
fmulp
fistpl
inc
jne
addr16
xor
sbb
xchg
ds
cli
dec
loopne
pop
inc
pop
cmpsl
nop
pushf
imul
pop
out
test
sbb
pop
in
add
xlat
or
xchg
push
mov
js
jmp
test
push
insb
sub
dec
lret
test
cli
jb
and
stc
arpl
pop
pop
addb
pop
pushw
in
shrb
cmpsl
jne
cmp
mov
enter
adc
pop
addr16
cmp
andl
je
xchg
dec
jl
mov
mov
dec
lea
pop
lea
stc
out
nop
mov
imul
ret
fwait
push
nop
pop
out
push
mov
dec
in
fidivrl
iret
pop
xchg
inc
mov
mov
add
mov
and
cmc
lods
cmp
mov
iret
aad
nop
mov
xor
adc
repnz
jg
sbb
sub
imul
fs
push
add
mov
pop
xchg
or
dec
sti
xchg
leave
loope
aam
mov
xchg
lahf
sub
xchg
inc
repz
pop
pop
pop
xchg
fdivr
dec
jmp
dec
cmp
mov
pushf
jns
push
xor
mov
xor
loop
shl
mov
call
movsl
loope
mov
push
clc
inc
sub
xchg
sahf
or
les
adc
mov
stc
js
pusha
into
mov
sbb
jp
sub
sahf
jae
popl
jne
enter
mov
outsl
pop
movsb
cmp
outsb
les
iret
xchg
cmpsb
mov
dec
inc
jb
or
lds
fs
pop
lock
test
mov
or
roll
xchg
sub
ficoml
mov
aam
into
mov
xchg
das
cmp
cs
sarl
into
call
mov
or
mov
dec
inc
adc
xchg
add
mov
jp
scas
aad
cmpsl
push
fidivrs
lret
outsb
pop
jle
add
sti
loope
outsl
iret
push
inc
mov
xchg
jns
xchg
clc
das
enter
push
jo
repnz
popf
in
test
cmp
gs
mov
jmp
in
jmp
dec
popa
pushf
push
and
bound
jmp
ss
pop
test
iret
pop
sbb
sub
addr16
rorb
pop
sub
cmp
mov
or
inc
add
je
lahf
ds
pop
leave
push
jle
push
or
dec
test
pop
aad
jmp
pop
fwait
mov
rorl
inc
inc
je
enter
mov
fsub
xchg
jns
xor
dec
and
push
pop
arpl
jmp
xor
xchg
sub
adc
sbb
rorb
and
xor
cvtps2pi
aas
inc
adc
xchg
ret
jmp
out
inc
outsl
dec
dec
addr16
xchg
sbb
fcmovb
test
dec
or
in
ljmp
ret
shlb
mov
ljmp
add
sub
les
pop
inc
add
or
icebp
ret
icebp
and
outsl
mov
in
mov
cmpb
and
or
loopne
inc
sbb
jb
and
push
push
fst
dec
mov
sub
xchg
cwtl
stos
mov
nop
adc
jg
out
xchg
cwtl
arpl
lcall
mov
jg
arpl
fbld
sub
ret
cmpsb
xchg
jp
shrl
cmp
repz
js
xchg
mov
es
les
das
shl
mov
pop
ljmp
fwait
mov
iret
dec
pop
xor
orl
push
pop
es
and
or
or
pusha
fistpll
cmp
je
shrl
add
mov
cmp
imul
mov
fnsave
cmc
cmpsb
inc
out
cs
shlb
mov
cmp
xlat
mov
lea
fs
sarb
push
cmp
sub
mov
pop
dec
fdivs
mov
jae
lea
shrl
aas
jne
jg
pop
ret
loop
nop
dec
mov
in
imul
pop
into
arpl
test
sar
std
and
xchg
insb
jp
jg
call
movsb
loop
enter
sbbb
bound
sub
adc
sub
jg
jecxz
mov
xor
mov
dec
mov
fcomi
lahf
rcll
push
dec
mov
es
push
adc
lock
lahf
aas
inc
cmpl
in
jb
jb
adc
adc
mov
pop
add
popa
not
mov
nop
repnz
add
dec
sahf
das
adc
mov
pushf
sbb
sub
push
push
xor
xor
sub
stos
loop
xchg
jl
mov
sub
sub
mov
mov
stos
xor
fmulp
push
in
and
out
pop
pop
shll
sub
xchg
adc
pushf
int
stos
mov
lcall
jo
add
pop
xchg
cmp
mov
and
xchg
loope
sbb
add
fcoms
sbb
xchg
pop
les
push
adc
sbb
loop
out
gs
fstpl
sar
test
sbb
add
out
lock
mov
seta
dec
mov
popf
and
dec
xlat
ss
out
or
nop
sbb
mov
loopne
cmpsb
or
mov
shll
fiaddl
jae
jae
push
mov
hlt
sbb
pop
cmpsb
push
cli
jmp
push
ljmp
mov
mov
pop
dec
push
xchg
je
and
inc
dec
test
sarb
int
mov
out
or
pusha
outsb
test
inc
inc
out
outsl
add
jae
jmp
popf
dec
xor
cmp
mov
inc
lahf
or
pop
mov
push
aaa
push
mov
cs
fmuls
xor
sub
jg
imul
jmp
push
inc
icebp
pop
in
dec
ret
add
jae
lcall
std
sub
sub
pusha
int3
scas
cli
mov
push
xor
push
in
adcb
push
add
andl
ret
fisttpll
les
cmp
push
jns
shrl
insb
mov
pop
rep
jg
ss
inc
mov
fs
dec
mov
push
cmp
xor
or
add
inc
stc
pop
xor
andb
cmpsb
shr
dec
out
cmpsb
sbb
aaa
pop
iret
cltd
push
push
fwait
stc
xor
dec
out
rorb
cmp
out
adc
scas
mov
xor
mov
adc
sub
xchg
push
pop
mov
push
xor
mov
sbb
mov
rcr
pop
pop
in
lods
xchg
dec
inc
adc
stos
xor
jmp
dec
and
xor
out
mov
inc
inc
cmp
mov
ljmp
aad
dec
and
mov
je
shlb
andb
push
xor
dec
ret
or
outsl
push
nop
xor
icebp
gs
inc
inc
sub
repnz
int
mov
pop
push
cmp
sbb
mov
out
and
sarb
pop
pop
movsb
pop
imul
jb
mov
dec
cmp
int3
pop
or
popa
cmp
sbb
ret
jge
xchg
imul
jo
adc
pop
ljmp
and
call
xchg
ret
stos
scas
fwait
sub
lret
dec
add
mull
stos
cld
or
lds
dec
pop
xor
fdivs
enter
inc
mov
adc
dec
push
aaa
das
push
lods
sub
gs
daa
xor
nop
jnp
lock
sbb
inc
xchg
mov
mov
mov
ljmp
push
addl
les
sbb
notl
xchg
sti
cmc
jmp
push
xlat
repnz
push
dec
xchg
xchg
cltd
les
in
inc
iret
pop
push
jmp
ljmp
sub
pushf
popf
add
ljmp
aad
or
lock
mov
dec
cmp
das
cmp
jl
push
pop
cmp
sahf
lods
daa
jnp
rcl
mov
repz
sub
cmpsl
push
stc
pop
dec
idivb
test
sub
popa
fmull
push
mov
stc
stos
and
and
cltd
fimull
jmp
xchg
push
or
arpl
xor
push
xchg
xor
xchg
aad
hlt
clc
xchg
insl
push
fwait
cmp
pop
enter
sti
mov
shl
jl
dec
mov
mov
dec
lods
pop
pop
leave
shrb
loop
hlt
mov
xor
insl
lock
xchg
jecxz
push
mov
add
xorb
mov
js
xor
das
pop
jns
es
mov
mov
test
push
call
lds
push
rclb
test
data16
jbe
inc
fsubr
lock
mov
jb
pop
cmpsb
sbbb
clc
lret
jns
rorb
stos
mov
rcrl
xor
add
pushf
into
insb
out
or
sbb
outsl
mov
js
adc
mov
cmc
dec
jl
fs
jo
inc
pushf
jmp
cmp
cmp
loop
pushf
mov
xlat
jl
shll
mov
fdivrl
sahf
push
push
lds
rorl
dec
adc
sub
push
pusha
loop
negb
mov
outsl
add
xor
imul
mov
inc
cld
push
mov
xchg
mov
inc
and
and
scas
repz
jl
or
mov
inc
add
dec
icebp
insl
cmp
mov
mov
stos
mov
or
popf
in
test
ret
pop
jle
sahf
pop
inc
leave
adc
jle
lcall
cltd
inc
xchg
shl
icebp
cmp
push
out
test
shr
data16
scas
call
mov
into
jne
dec
repz
lock
aam
xor
lea
cmp
sbb
xor
loop
and
jne
inc
adcb
jl
add
lock
push
rolb
adc
in
xor
push
dec
out
mov
xor
sbbb
pop
jo
or
scas
pop
scas
je
lods
pop
stc
lret
daa
fsubrp
adc
stos
inc
fnstenv
xchg
loopne
sahf
add
pop
mov
jbe
sub
loope
bound
xchg
stos
xor
sub
inc
jmp
insb
mov
std
clc
mov
loop
dec
sub
mov
jo
and
push
fidivrs
test
shlb
pusha
mov
pop
pop
sbb
rcrb
clc
mov
adc
test
je
cltd
xchg
sbb
lret
mov
lods
mov
inc
notl
jne
loop
addl
cltd
xor
lods
jg
pushf
fisubrl
push
arpl
movl
scas
movsb
mov
mov
and
jbe
sub
cmp
push
inc
adcl
adc
outsb
pop
sbb
mul
dec
pop
sub
add
sub
dec
adc
lock
cmp
outsb
dec
popa
shl
mov
lret
jmp
mov
xchg
jle
push
cmp
es
imul
jmp
imulb
outsb
leave
ss
xchg
fildl
test
addr16
mov
jge
addr16
add
cmp
dec
xor
adc
push
dec
sbb
pop
nop
cmp
scas
stc
int
sahf
aas
cs
fisttps
dec
cmp
cmpsb
icebp
cs
in
out
xor
cwtl
sbb
inc
aad
movl
cmp
xchg
enter
add
shll
mov
das
mov
popf
jl
loopne
xchg
stos
sbb
lcall
mov
in
cltd
aad
pusha
fldcw
fisubl
jae
lret
xchg
sbbb
rcl
push
push
and
cmpsl
out
dec
sub
imul
jb
fmul
in
clc
jnp
popw
lret
lods
pop
je
push
xor
std
mov
dec
mov
inc
and
sub
xor
pop
cmpsl
sub
shl
xchg
popa
mov
loop
jbe
add
jno
and
push
cmp
repnz
inc
jno
xor
data16
mov
push
jecxz
popa
mov
dec
jnp
filds
test
lret
push
push
bound
push
push
dec
test
aaa
mov
jae
in
xor
ljmp
sbb
mov
mov
push
into
sub
sbb
mov
lock
int
pop
and
xor
mov
movsb
stos
sti
out
dec
dec
xchg
jne
aaa
jo
and
add
std
pop
jp
js
rolb
mov
out
scas
in
fildll
mov
sbb
mov
pop
cmpsl
cmp
mov
sub
adc
dec
loope,pn
xor
int
or
std
sub
xchg
das
ljmp
sbb
in
push
pop
xor
push
cld
and
mov
adc
cwtl
imul
test
jmp
jmp
inc
mov
jb
mov
popa
jecxz
add
and
push
xchg
push
sub
lock
mov
mov
test
jo
fdivr
xor
rcll
popf
mov
pusha
dec
stc
test
cmp
lock
ja
stos
cmp
push
xor
and
imull
fsub
fwait
dec
std
das
pop
mov
pop
iret
loopne
iret
pusha
dec
pop
mov
je
incb
mov
inc
testb
loope
roll
xchg
shlb
fimuls
dec
scas
into
pop
jecxz
cli
push
cmpsl
iret
je
push
mov
stc
add
movsb
mov
movsl
les
lret
cmp
sbb
add
into
insb
clc
enter
jb,pt
mov
dec
cli
pop
fbld
jp
cmpsl
leave
sub
shrl
inc
and
test
repnz
js
mov
fs
pop
or
sub
es
xchg
repnz
sbb
pushf
dec
bound
jl
jo
cs
cs
dec
jnp
mov
sub
adc
fbld
cmc
das
stos
enter
out
xlat
inc
ja
and
stos
popa
ja
sub
movsb
je
popa
and
cmp
lcall
repnz
xchg
hlt
pop
cmp
and
cmp
or
cmp
iret
push
pop
jnp
jecxz
mov
das
or
shlb
jae
and
lcall
arpl
into
and
out
lods
into
sbb
sahf
adc
jp
sti
dec
lcall
cmp
dec
popa
mov
and
repz
lret
mov
ret
ficoml
mov
sub
pop
clc
xchg
jmp
mov
mov
mov
scas
fisubs
sbb
test
mov
fsubrs
shlb
gs
mov
test
out
xchg
test
jno
xchg
mov
lret
lods
jg
scas
mov
aad
nop
outsl
out
sbb
es
daa
add
or
inc
sbb
fidivrs
mov
fcoml
into
jecxz
jb
mov
loope
rorl
xlat
xor
fdivrl
add
and
adc
in
lods
jg
dec
outsb
and
inc
lret
jb
mov
and
add
loop
push
push
fcomps
push
lods
cmc
andb
arpl
xor
add
mov
popa
repz
mov
outsb
mov
lods
sub
mov
jge
sub
not
int
divl
leave
dec
in
stos
dec
test
in
jge
stos
in
pop
mov
pop
lds
shl
push
and
fwait
xchg
icebp
sub
sbb
pop
jmp
int3
mov
push
jle
ret
jle
dec
adc
push
add
data16
inc
sarb
repnz
push
loope
mov
inc
int
test
arpl
sarb
pushf
dec
mov
lret
mov
jnp
ret
lcall
je
lock
arpl
sahf
xchg
mov
pop
lock
jecxz
lahf
rcrb
in
clc
push
push
pop
clc
movsb
cli
and
pop
xchg
push
aam
and
inc
push
sarb
insb
test
outsb
mov
mov
dec
xchg
or
inc
test
shl
in
cwtl
sub
pop
cmpsb
add
hlt
mov
cli
push
arpl
andb
push
fisttpll
les
xor
jp
cmp
cmp
inc
and
xor
and
iret
xor
inc
ret
incb
loopne
outsb
fbstp
push
aad
xchg
lea
insl
out
pusha
mov
sbb
dec
js
mov
cwtd
mov
out
lds
roll
jb
cmc
jo
aaa
fadd
fmull
inc
inc
out
jae
jge
xor
lret
mov
nop
push
daa
cmpsb
dec
add
ja
xor
adc
je
push
or
and
cmp
fnstenv
stos
cld
loope
mov
sbb
pop
aad
js
mov
aad
inc
inc
dec
aaa
sti
leave
adc
ret
jle
mov
test
out
mov
imul
jge
push
mov
xor
sub
mov
aaa
scas
cs
call
mov
cwtl
das
scas
mov
ror
enter
shrb
outsl
sahf
mov
jmp
or
add
cmp
insb
and
push
loopne
push
cmc
or
aam
ret
xor
pop
pop
pop
sbb
add
cltd
push
pop
mov
pop
jp
xchg
xchg
scas
dec
lret
ss
cli
ficomps
add
jge
ret
jae
decl
mov
sub
jge
mov
mov
inc
loop
mov
lods
jbe
shll
call
ja
dec
mov
sub
mov
add
sub
movsb
inc
lahf
daa
sub
hlt
xor
lods
push
sbb
sarb
clc
mov
pop
push
sbb
mov
sbb
push
or
mov
rcrl
push
fcomip
inc
decl
adc
jg
xchg
cmpsb
cmpsl
push
xor
mov
ret
inc
in
push
adc
lea
inc
fwait
out
pop
out
mov
aad
add
addr16
stos
sbb
and
adc
in
repz
jne
adc
or
lahf
and
mov
dec
xchg
jmp
or
decb
push
pop
mov
inc
mov
mov
popa
mov
mov
inc
mov
outsb
fbld
ret
adc
in
cmp
mov
xchg
sbb
lods
sbb
repz
lods
mov
cmc
add
loope
mov
xchg
pop
xorl
jae
mov
into
mov
sbb
int
ss
aaa
jecxz
stos
adc
jb
movsl
es
lret
dec
aaa
mov
push
icebp
push
sub
data16
inc
sub
mulb
xor
daa
dec
add
mov
call
xor
sub
ret
loope
aad
dec
sub
xor
jo
sbb
xor
xchg
lea
mov
mov
mov
scas
out
xchg
cmp
adc
data16
loopne
dec
push
push
movsb
xlat
loop
jns
cwtl
push
sbb
push
in
jg
loopne
loop
addr16
cmpsb
jp
pop
mov
hlt
sub
mov
cmp
push
stos
sub
mov
icebp
sarl
rcrb
out
adc
imul
and
out
aas
push
lcall
into
fs
sbb
dec
jmp
mov
fnstsw
shlb
sahf
pcmpeqw
fcompp
cmc
lcall
inc
xor
mov
fsubr
mov
aas
iret
lret
lea
ffree
rclb
popa
mov
mov
popa
andb
js
or
mov
enter
fimuls
pop
dec
mov
popa
mov
mov
push
jns
xchg
movsb
addb
pop
cmp
cs
lret
out
hlt
adc
mov
sub
mov
jmp
ss
mov
pop
xchg
xchg
push
aas
into
data16
aas
in
jmp
xor
cmc
fs
jge
xchg
shl
test
mov
mov
lds
lahf
stc
addl
pushf
mov
fdiv
dec
sbb
fs
stos
cmp
pop
pop
mov
sahf
xchg
xor
push
mov
mov
stc
mov
fsubrs
adc
lock
fidivrl
fstp
pop
daa
xor
out
rol
dec
mull
sub
adc
stos
mov
or
shlb
mov
add
cmpsl
pop
mov
cmp
dec
cmpsb
pushl
aad
mov
add
jmp
xchg
xor
jno
nop
adc
sbb
fisubl
daa
popa
fnstsw
insl
loope
sbb
sbb
jl
or
xchg
outsb
jo
and
iret
dec
iret
inc
daa
or
pop
sbb
incb
xchg
in
test
mov
mov
jle
sub
or
cltd
lods
popf
fdivl
outsl
jge
ret
adc
in
xor
cwtl
bound
jns
xor
mov
jno
add
aad
or
push
outsl
cmp
mov
xchg
in
in
mov
fsubrs
fstps
sbb
mov
sbb
inc
addl
cltd
pop
and
stc
jg
or
or
rorb
jnp
and
inc
inc
lea
fbstp
mov
xchg
xchg
inc
insl
sbb
mov
mull
in
jge
sub
push
push
bndstx
js
xlat
push
adc
pop
mov
push
repnz
sbb
cs
out
out
sar
cmp
cmp
hlt
push
gs
rorb
adc
sbb
fnstsw
pop
aaa
dec
or
mov
jae
adc
iret
jl
adc
leave
add
in
mov
addr16
fstp
leave
adc
push
pushf
push
imul
sbb
insl
mov
pop
movsl
imul
lea
xchg
enter
or
jecxz
push
js
repz
sbb
adc
jg
xchg
out
rorl
push
lds
lahf
cmp
mov
iret
mov
addb
or
shl
cld
or
scas
cmp
add
fisttpll
hlt
fmulp
les
sbb
gs
fisttps
scas
push
sbb
ret
push
pop
mov
in
dec
jb
xchg
loope
les
jb
ret
lods
xchg
ljmp
loopne
pop
fiaddl
lods
ljmp
push
xor
aaa
xchg
loop
ret
xchg
imul
jp
pop
mov
leave
mov
dec
sub
mov
popa
shlb
xchg
mov
orb
jmp
push
inc
add
outsl
pushf
xor
jb
outsl
jl
rol
jp
ficoml
jge
inc
test
lret
mov
inc
add
ret
mov
fs
adc
jbe
shl
les
sbbb
mov
mov
pop
out
js
aas
dec
fs
jno
pop
aam
mov
or
jmp
inc
shlb
adc
cmp
stos
mov
es
jne
xor
pop
cmc
dec
lret
jecxz
dec
xchg
arpl
popl
fcomi
sbb
insb
dec
imulb
loopne
das
push
ja
mov
mov
add
sti
mov
mov
faddl
mov
aam
sbb
dec
imul
xor
scas
cmpsb
xchg
pop
add
jae
nop
push
push
or
sbb
mov
or
jle
lods
sarl
loopne
add
sub
in
push
pop
inc
les
mov
es
mov
push
xchg
mov
cmp
jb
cli
pushl
jmp
fcoml
and
popa
cmpsl
mov
das
mov
jnp
aaa
in
inc
adc
cli
mov
mov
mov
mov
lock
jg
mov
scas
add
xchg
dec
and
pop
idivb
sahf
repz
aad
and
sbb
xor
loopne
bound
jne
insb
push
lods
pushf
inc
out
std
leave
popa
outsl
imul
jne
ds
lret
push
cmp
fidivl
movsb
inc
lods
cmpsl
mov
fidivrs
pop
cmp
dec
int
js
mov
mov
xchg
pop
add
loope,pn
popl
push
imul
mov
les
jp
ret
cmpsb
dec
scas
xchg
ja
jle
xor
test
fistpll
aam
lea
jbe
fildl
pop
ljmp
cmp
shrl
ret
add
in
iret
mov
loop
sbb
test
mov
loop
cmp
mov
mov
aas
out
fcom
idiv
pop
jae
cmpsb
out
adc
or
out
fstl
push
stos
fimull
ret
cwtl
movsl
rcrl
je,pt
or
pop
adc
ret
adc
mov
cmp
filds
stos
dec
movsl
nop
popa
sub
fdivp
test
xorl
sub
jae
pusha
js
cmp
popa
mov
in
xor
jg
stos
and
cmp
mov
bound
cli
jecxz
xor
push
push
pusha
cld
cltd
jns
les
mov
pop
xchg
mov
jmp
repnz
pop
ljmp
rorb
adc
jle
lcall
or
lods
outsl
test
add
adc
inc
jg
inc
outsl
rcrb
pusha
scas
mov
sub
pop
in
lcall
scas
mov
lret
lods
addb
mov
movsb
sbb
cmp
dec
aam
iret
out
cmp
movsb
sbb
pop
cld
movsl
dec
pop
push
sub
lods
fimull
push
dec
jge
mov
stos
stc
call
subb
scas
in
jb
das
cmp
shll
aaa
sub
adc
adc
cmp
or
into
loop
xor
jl
mov
shrb
shrl
mov
mov
int3
cmp
dec
pop
push
lcall
inc
loope
fidivrl
inc
pop
test
sahf
stc
adc
jl
ficomps
jg
xchg
xor
daa
jbe
ds
push
ljmp
xor
dec
movsb
movsl
push
mov
jge,pn
ss
push
pop
dec
and
in
pop
push
jecxz
clc
xchg
push
shlb
mov
sub
sub
xor
and
mov
mov
xchg
and
mov
fstpt
bound
decl
xchg
lret
cli
test
mov
je
and
loopne
imul
mov
aas
pop
jbe
scas
pop
inc
int3
xor
ficompl
std
or
notl
ds
cmpsl
cmpsb
mov
add
repz
sbbb
push
mov
daa
mov
imul
xchg
mov
pop
cmp
cltd
xchg
in
push
int
in
inc
dec
sbbb
sub
arpl
sub
mov
lock
pop
iret
lahf
es
xor
pushf
and
mov
enter
push
icebp
xchg
cmpsb
pushaw
out
xchg
pop
sbb
mov
mov
xor
gs
fucom
out
call
or
leave
cmpsl
mov
repz
xor
and
dec
fiaddl
jecxz
cli
imul
inc
fistpll
lahf
fstpt
jns
fistpl
int3
inc
scas
cltd
add
pop
pushf
and
add
mov
das
inc
dec
adc
jne
xor
sub
data16
mov
iret
pusha
out
mov
into
mov
ljmp
rcll
jne
mov
pop
test
xor
sbb
sahf
cltd
imul
gs
mov
push
xchg
xchg
inc
inc
fwait
imul
outsb
rclb
mov
insl
push
loope
push
mov
and
xchg
pop
cmp
repnz
and
sub
pop
test
shrl
fstl
fildll
pop
xchg
or
inc
js
mov
mov
and
sbb
mov
mov
lods
mov
bound
xchg
xor
inc
scas
dec
pop
pop
fbstp
fisubs
jns
jb
shrb
mov
mov
andl
mov
push
cltd
sub
imul
fistpll
pushf
data16
jecxz
in
pop
push
lret
cli
pushf
repnz
fldl2e
insb
adc
fidivrl
adc
adc
sbb
psubb
cltd
ret
sbb
lds
jae
popf
adc
add
daa
xchg
dec
push
les
or
vmptrld
iret
outsl
sbb
adc
jbe
mov
mov
int3
lea
or
cwtl
insl
je
jle
je
jns
push
daa
gs
jg
mov
movsl
sbb
sub
leave
loopne
xrelease
mov
subb
mov
jo
push
or
inc
cmpsb
and
mov
icebp
inc
test
cli
out
lea
std
jecxz
mov
les
cs
repz
sbb
lret
dec
ss
ret
jns
gs
add
repnz
xchg
add
and
mov
movsb
mov
xchg
pop
movsl
mov
xor
sahf
hlt
mov
mov
push
adcl
jnp
and
push
mov
fmulp
mov
pop
test
fnstenv
push
out
sbb
sti
das
ret
push
add
sarl
insb
ss
inc
cs
mov
out
mov
jmp
adc
mov
clc
cmpsl
sbb
and
dec
mov
dec
cwtl
mov
jp
ds
dec
clc
out
fsubrl
cmp
shlb
dec
repz
leave
mov
sub
cmp
inc
insl
xor
hlt
mov
fdivrs
test
leave
aaa
fistps
rcrl
and
cmpsl
jno
jb
sahf
je
rorb
scas
iret
jl
mov
jmp
xor
in
dec
jmp
popf
jnp
lock
aad
jae
fiaddl
mov
popa
ret
inc
call
push
ja
shr
mov
xor
hlt
cmp
fidivrl
mov
add
ss
mov
jno
shll
and
lret
repz
mov
test
call
fsubl
pop
and
iret
sar
xor
adc
push
imul
jb
lods
fisubrs
repnz
push
int
repz
adc
mov
mov
dec
les
aas
adc
sub
lods
ja
int3
sub
out
mov
push
ret
add
push
aad
jae
in
lret
jmp
outsb
out
sub
mov
mov
in
push
xor
adc
int
and
mov
cs
mov
ret
leave
testl
xchg
or
xchg
cmp
dec
std
mov
sbb
add
imul
aad
nop
imul
sbb
xchg
cwtl
lret
jns
mov
pop
sbb
das
sahf
call
insb
push
mov
mov
cmpsb
iret
sti
movsl
lods
bound
xchg
jnp
cmpsl
xchg
stos
cwtl
shlb
add
repz
mov
jle
ja
or
inc
mov
fadd
sbb
cwtd
stos
adc
into
into
loopne
jno
xor
test
mov
push
adc
jmp
lods
arpl
cmp
adc
pop
notl
mov
sbb
imul
cmp
mov
mov
fdivs
stos
iret
in
test
pop
cli
stc
xchg
sub
xchg
pop
xchg
faddp
or
mov
mov
lds
pop
sbb
jle
outsl
ljmp
leave
dec
jecxz
ret
ja
fidivs
cmp
xor
adc
cmp
aas
mull
cwtl
add
adc
mov
jge
je
test
js
or
and
mov
imul
and
cmpsb
jp
sti
imull
fisttpl
dec
arpl
inc
lods
sub
push
xor
cld
je
into
ljmp
pop
ffree
or
sub
mov
xchg
icebp
mov
fwait
mov
push
inc
pushf
ret
adc
mov
dec
mul
xchg
out
push
fnsave
cs
add
adc
xchg
in
inc
pop
imul
push
cmp
adc
movsl
pop
sbb
sbb
dec
or
xchg
ret
data16
enter
inc
and
jge
mov
ljmp
dec
addb
je
imul
outsb
dec
in
mov
xchg
dec
nop
xchg
mov
jmp
fwait
shl
cmp
mov
pop
rcr
test
cmp
in
rcrw
test
adc
fisttpl
ljmp
lea
inc
hlt
aaa
push
je
xchg
aam
and
adc
pusha
outsb
fidivrs
test
push
cmpsb
xchg
push
test
add
inc
sti
cmp
out
insb
into
js
sbb
mov
sub
subb
jge
xchg
outsb
pop
and
mov
inc
test
shrl
sbbb
and
int3
lcall
inc
cmpsb
mov
iret
in
xchg
ftst
adcl
or
push
adc
lcall
mov
jl
jo
stos
maskmovq
testl
nop
stos
jp
clc
jb
sub
out
je
mov
loop
pop
test
lcall
imul
pop
and
mov
jmp
into
mov
xchg
push
fs
bound
sub
inc
out
and
pop
inc
insb
sub
mov
orl
inc
out
mov
mov
push
enter
jns
loopne
fidivrs
push
repz
cmpsb
sahf
inc
cs
lahf
push
adc
sub
sub
aam
sbb
cmp
test
call
mov
es
and
xchg
movsl
adc
mov
mov
neg
cltd
inc
sub
inc
aam
pop
leave
or
lret
and
loope
lds
xchg
pushf
cmp
jle
cltd
fwait
or
jns
inc
xor
orl
loopne
call
popf
push
bound
xlat
fdiv
mov
or
mov
lea
mov
push
xchg
sub
sbb
jno
adc
sbb
rclb
cmp
adc
out
lcall
or
and
lret
xor
mov
das
push
add
mov
mov
push
push
push
in
jne
add
jae
call
dec
inc
imul
icebp
popf
ljmp
lods
cld
adc
adc
cmp
in
insl
lret
mov
mov
cmp
cmp
dec
fisttpll
scas
mov
xor
leave
outsl
jg
and
fdivrl
cmp
fsubs
mov
sub
sub
ficoml
repz
adc
xchg
aas
ffree
fs
clc
pop
or
sub
jne
or
sti
sub
adc
pop
je
aaa
ret
test
test
into
or
arpl
mov
inc
dec
cwtl
leave
xchg
pop
add
or
rcl
mov
es
jne
call
insl
iret
mov
jmp
mov
mov
adc
or
cmp
xor
ret
loope
aaa
outsl
std
and
negl
add
les
fldl
sub
lret
sti
bound
dec
add
inc
mov
pop
fbld
jg
sbb
push
faddp
pop
stc
imul
sub
mov
push
or
push
sbb
push
jb
cmpl
inc
or
stos
add
sub
sti
decl
outsl
fildl
cmp
pusha
gs
push
add
pop
je
mov
mov
movsb
xor
xor
mov
mov
cld
mov
es
nop
sub
jge
sarb
jae
jg
pop
icebp
push
insb
scas
in
xchg
jae
in
xor
inc
hlt
push
push
ds
pop
xchg
test
dec
mov
mulb
outsb
cmc
xchg
xor
imulb
fwait
imul
out
xchg
in
adc
jl
sub
cmp
cmpsb
aad
and
iret
cmpsl
lods
syscall
rorl
cmp
loope
out
das
jno
inc
imul
jp
lret
jmp
in
incb
mov
pusha
cmp
cmp
pusha
mov
fcoml
add
pop
xchg
xchg
mov
sbb
jecxz
mov
mov
testl
loope
xchg
push
testb
sub
int3
mov
mov
inc
jmp
mov
insb
push
jl
ret
movsb
sub
call
shrl
cwtl
jle
es
ljmp
cwtl
fisttpl
sahf
push
faddl
and
fwait
add
adc
in
mov
movsb
fdivl
xchg
mov
add
inc
pusha
in
adc
sub
in
jno
push
jbe
out
cli
outsl
std
movb
pop
add
int3
test
mov
int3
and
push
dec
jecxz
inc
movsb
bound
xor
arpl
sbb
mov
std
ljmp
cmp
dec
movsb
mov
cvttps2pi
fiaddl
jecxz
sbb
mov
ret
imul
mov
jne
bound
jnp
insl
add
mov
orb
pop
mov
fsubl
mov
das
fwait
enter
in
enter
sbb
ljmp
push
sub
xchg
loope
in
dec
adc
inc
insb
sub
fnstsw
cltd
or
ret
mov
pop
xor
xchg
add
testb
adc
fs
jb
fwait
pushl
mov
in
mov
inc
aam
int
aad
push
mov
or
std
clc
bound
adc
and
repnz
cmc
add
cs
adc
push
push
mov
mov
jb
les
xchg
shrb
sbb
xchg
stos
andl
sbb
xor
icebp
int3
ja
pop
adc
push
adc
enter
stc
test
loop
test
adc
add
das
sarl
add
or
insl
or
push
into
movsb
gs
out
cmpsb
sub
ss
notb
add
int3
adc
xchg
loopne
inc
in
and
imulb
push
cmp
xor
lcall
push
sbb
jle
ss
xor
andb
cmp
inc
pusha
fstl
mov
mov
dec
sbbb
cmc
cwtl
notl
jbe
lret
insl
repz
js
mov
int3
outsl
inc
pop
inc
aaa
enter
rcr
xchg
add
add
cwtl
dec
icebp
hlt
cmp
pop
or
mov
push
xor
add
ja
insb
sti
add
mov
enter
cmp
add
mov
movsl
out
jb
das
adc
sub
mov
shll
mov
loop
xchg
scas
mov
dec
or
dec
pop
std
lret
loope
lcall
pop
mov
je
jns
stos
mov
ret
cmp
ret
pop
leave
pusha
lods
lods
rcrb
jns
daa
mov
adc
push
mov
sbb
fstpl
in
xor
jae
jns
aam
lock
divb
popa
mov
add
cmpsb
push
out
cltd
jne
sub
xor
fsubrp
mov
mov
movsb
push
and
mov
mov
jae
mov
cmpsb
mov
lcall
xor
cmp
sahf
pop
mov
lods
xlat
add
mov
inc
xorb
das
sub
xchg
pop
jle
mov
inc
jne
stos
in
and
fistpll
daa
outsb
inc
sbb
out
pushl
dec
jne
imul
rcrb
cwtl
xor
push
outsl
cmp
popf
jp
inc
outsb
outsb
or
stc
and
inc
adc
cmp
imul
or
clc
mov
cmpsl
inc
hlt
test
mov
xchg
pop
xchg
ret
pop
clc
shrb
test
jnp
push
ja
stos
movsl
sbbl
add
das
add
dec
rorl
xor
arpl
sbbl
aaa
sub
leave
mov
dec
ss
jne
cmp
inc
mov
jge
pop
in
push
fidivl
cld
out
inc
mov
scas
sub
test
icebp
jge
push
jnp
push
shl
leave
add
push
pop
in
pop
adc
xorb
xchg
mov
testl
stc
mov
add
xor
pop
jbe
mov
pop
and
push
pop
imul
leave
pop
or
xchg
es
sub
cltd
dec
andl
loop
mov
test
sub
das
push
bound
repnz
mov
loopne
lret
stos
enter
xorb
xor
cli
dec
xchg
cmp
cmc
pop
dec
push
aaa
repnz
and
sub
inc
rolb
cmp
sub
and
movsl
jbe
out
pushf
pop
push
adc
repnz
cmpsb
xor
xor
push
push
jmp
sbb
sarl
inc
scas
jle
lcall
mov
mov
aam
lds
imul
mov
aaa
xchg
cmpsl
fldl
dec
adc
mov
sub
les
jmp
in
push
push
mov
insb
dec
xor
push
fwait
cmp
cltd
dec
push
mov
adc
rolb
test
jmp
popa
push
push
rorb
dec
cmp
fsubrp
mov
test
cwtl
push
push
sbb
flds
mov
movsl
aam
jmp
adc
mov
mov
or
popf
call
cmp
cld
pusha
push
sbb
xor
in
rcll
into
loopne
fldcw
ja
jecxz
inc
xor
push
ret
addr16
mov
call
adc
and
add
lcall
adc
jge
rcrl
push
mov
mov
addl
test
addb
inc
lods
mov
scas
stc
cmpsl
out
add
lods
int3
je
inc
idivl
xchg
je
scas
loope
xchg
add
sbb
test
mov
dec
sahf
inc
mov
fildl
insb
insl
pop
and
pop
adc
adc
insl
xchg
xchg
lcall
std
loop
push
xor
xlat
shrl
cmpsb
stos
and
mov
inc
inc
in
repnz
dec
ret
sub
popf
adc
pop
cld
cwtl
test
push
outsb
imul
fnstenv
add
adc
add
addps
orl
add
mov
pushf
js
push
mov
pop
push
inc
xchg
mov
es
sub
pop
mov
mov
mov
enter
cmp
and
push
dec
push
in
push
test
adc
pop
mov
test
and
and
and
cli
cmpb
xchg
bound
xlat
or
add
icebp
add
call
adc
lret
fsubrs
in
cmp
xchg
ret
adc
and
test
mov
int3
cmovs
push
push
mov
fdivrs
insb
outsl
adc
mov
loopne
push
push
xchg
jecxz
jb
mov
inc
dec
adc
jbe
insl
or
or
push
dec
scas
dec
mov
scas
psadbw
adc
daa
mov
xor
pop
dec
stos
lods
imulb
inc
jmp
repz
stc
cmc
aaa
jnp
adc
xchg
bound
or
insl
mov
dec
push
shrl
add
popf
mov
xchg
pop
repz
movsl
in
pusha
aaa
aam
or
mov
int
and
push
adc
push
popa
mov
scas
pop
sub
fmuls
daa
or
out
scas
orb
sub
push
or
rorb
xchg
jnp
cmp
mov
mov
aas
mov
loopne
or
pop
imul
jmp
ror
jmp
lods
in
and
cld
mov
push
stos
or
insl
in
xchg
sbb
fsubr
adc
mov
adc
pop
push
ficoms
sub
mov
cmpsb
int
lods
push
lds
imulb
scas
mov
or
xor
std
push
and
leave
push
add
jb
mov
mov
jnp
push
push
nop
or
pusha
cmp
test
lock
sbb
sbb
mov
rcrb
push
mov
sub
iret
mov
rorl
pop
xchg
inc
es
and
mov
lahf
lea
xor
mov
in
pop
ljmp
ja
xchg
dec
mov
inc
call
or
stc
aaa
cmp
addl
leave
adc
xchg
adc
scas
inc
cmpsl
mov
das
filds
test
aaa
dec
arpl
stos
adc
addr16
out
sbb
sub
nop
xlat
rdmsr
test
cli
jb
iret
into
scas
in
aam
xchg
pop
add
push
xchg
clc
mov
xor
mov
cmpb
scas
xchg
pop
or
push
lret
stc
mov
push
scas
addb
mov
insl
frstor
shll
pusha
inc
fwait
and
mov
imul
mov
or
or
outsb
push
fs
pop
cli
es
mov
aaa
je
mov
mov
js
dec
js
pop
xor
xor
loop
jge
call
pop
mov
mov
stos
lret
or
sub
inc
aas
cmpsl
and
or
scas
sub
mov
iret
fldt
sbb
stos
int
jbe
add
jns
add
push
xor
mov
mov
mov
dec
adc
sbb
pop
sbb
jne
mov
cmp
or
aas
ds
sub
inc
and
ss
adc
shll
sub
xor
fcompl
push
xchg
or
fisubs
movsb
ret
sti
jnp
pushf
sahf
xor
push
mov
xchg
xor
lret
pushf
pop
xor
cmp
jg
jl
jae
push
arpl
xchg
inc
es
mov
fdivs
stc
push
testb
loopne
aam
inc
xchg
loopne
inc
dec
pop
aam
jl
sbb
dec
addr16
data16
iret
movsb
scas
mov
dec
xor
mov
xor
push
dec
xor
enter
loop
mov
cwtl
dec
xchg
jecxz
pop
xlat
stos
cmpsl
or
inc
sahf
inc
sbb
push
and
in
push
aad
cmp
mov
imul
pop
lcall
movsl
sub
sbb
test
inc
shl
xchg
call
sub
xchg
js
and
pop
loope
ja
jle
inc
and
inc
insl
jno
adc
sbb
xor
pop
movzbl
pop
mov
lea
cmp
lahf
push
push
ficomps
lods
xchg
jmp
fs
mov
mov
ficompl
idiv
cmpsl
add
cmc
pop
sub
jno
arpl
insl
outsb
inc
xor
jle
push
lods
add
es
test
adc
cmp
and
insl
mov
js
and
mov
and
mov
mov
sub
cmp
and
fsubr
add
lea
jbe
push
push
mov
or
adc
adc
adc
dec
jp
push
test
and
dec
in
dec
dec
popa
addb
cld
or
std
jns
popa
inc
ja
fcomip
add
inc
mov
imul
sbb
mov
cmp
ljmp
mov
jno
xchg
inc
ficompl
pop
inc
inc
mov
lods
hlt
or
stos
cmp
dec
sbb
sub
mov
int
xchg
mov
push
xchg
mov
cmp
test
je
mov
popa
mov
aam
rclb
fldcw
dec
js
jmp
jecxz
ret
mov
iret
stos
lods
movsb
jl
popf
mov
mov
push
jge
in
pop
loope
dec
or
cmp
add
push
add
cmpl
cld
cwtl
jp
and
or
push
loop
cmp
insb
cmp
xor
adc
cld
xor
dec
jp
adc
sub
fdivrp
sti
cmp
test
inc
xor
xor
mov
lds
inc
mov
or
push
mov
fistpl
jo
in
decl
and
adc
lahf
out
shlb
or
mov
or
inc
add
xor
ret
imull
enter
fimull
jae
movsb
out
pop
mov
scas
leave
arpl
adcl
in
mov
adc
movsb
repnz
in
fwait
xor
mov
and
test
js
aas
in
or
pop
divl
push
inc
xor
bound
cmp
repz
mov
pop
pushf
int
imul
xlat
pop
pop
bound
mov
sub
bound
nop
jg
pextrw
mov
das
sub
mov
call
pop
xchg
insb
and
lret
andb
cmp
ficomps
popf
inc
in
cs
adcl
les
adcl
jecxz
inc
lods
and
mov
sahf
push
cmp
fildl
cmc
or
sbb
int3
cli
inc
sub
insb
pop
jno
dec
sbb
sub
add
cmp
add
cs
testl
aaa
dec
xchg
insb
mov
mov
inc
out
ret
imul
lock
xor
aas
scas
nop
fidivrs
xchg
jge,pn
jecxz
nopl
jecxz
mov
xchg
les
xchg
pushf
es
mov
cmpsb
pop
inc
xor
mov
aad
clc
movsl
or
cmp
data16
cwtl
rcrl
orl
lret
out
ret
inc
inc
popa
xor
xor
test
mov
hlt
cmp
mov
adc
iret
adc
jo
sbb
mov
fmuls
leave
bound
sbb
rcrl
lea
in
lods
ret
xor
movsl
mov
repnz
push
mov
mov
fwait
mov
cmpsb
pop
mov
cwtl
fwait
lret
push
hlt
dec
ljmp
pop
jecxz
pop
test
andl
jae
mov
pop
add
cmp
out
mov
mov
adc
and
ficompl
sbb
cmp
clc
fs
jb
and
adc
or
out
es
push
dec
clc
push
gs
sub
scas
rol
out
sahf
adc
in
and
testb
jbe
filds
mov
fadds
int
xchg
idivl
movsl
ja
popa
push
pop
arpl
lahf
adc
fistps
lcall
or
out
bts
into
ffree
lret
pop
int
out
or
mov
data16
xor
aad
jno
insl
or
scas
push
xchg
sbb
or
xor
dec
push
jg
sbb
cs
out
cmp
loope
xor
lock
ja
call
cmpsl
inc
stos
cli
cmp
or
fldcw
mov
mov
movsb
movd
and
push
arpl
push
inc
ss
dec
sbb
cmpsl
iret
sub
mov
and
or
push
push
cmp
out
mov
cmp
test
mov
outsl
mov
and
adc
es
lds
bound
js
sbb
cmpsb
and
aad
sbb
nop
pushf
lods
scas
jp
cwtl
jns
sti
popa
or
cmp
jno
adc
loopne
sbb
ja
lods
jnp
lds
mov
mov
fsubrl
xchg
pop
ret
pop
lahf
sub
pop
mov
sub
or
in
mov
cmpsb
xor
jb
and
leave
mov
inc
mov
loop
mov
lods
mov
aas
inc
das
jns
je
xor
test
mov
jecxz
inc
in
movsb
mov
subl
aad
pop
sbb
jns
ficompl
xchg
jmp
dec
ret
in
les
xchg
push
sub
jmp
aaa
adc
pop
popa
push
movsb
fidivl
nop
das
aaa
mov
fwait
mov
adc
fdivrl
mov
ret
push
pop
sbbb
in
into
cwtl
adc
jge
sti
cli
das
xchg
imul
push
jnp
sbb
xchg
add
mov
pop
lahf
out
sbb
mov
outsl
sbb
dec
in
fists
into
repnz
popa
inc
pushf
hlt
loope
pop
or
stos
mov
and
pop
xchg
dec
hlt
cli
add
cmp
int
insl
mov
je
lcall
mov
mov
ljmp
inc
push
mov
mov
dec
inc
sub
adcl
xor
mov
icebp
outsb
inc
push
ljmp
push
pop
lock
sahf
sbb
lods
insb
icebp
pop
stos
jp
dec
fwait
pop
adc
cmp
repnz
mov
pusha
add
fstpt
pop
lods
les
in
lds
test
mov
outsb
pop
loope
inc
push
xor
push
and
jmp
push
xchg
pusha
mov
adc
or
test
aas
push
in
movsb
mov
mov
xchg
lret
xchg
mov
js
clc
jae
lock
jge
mov
aad
adc
push
mov
xchg
inc
js
cltd
push
insl
popf
pop
lahf
shl
mull
testl
rcrb
test
dec
pop
bound
cmp
jg
movsb
ss
out
sub
daa
loop
cld
adc
push
sub
cmc
pop
push
sub
add
sub
ja
xor
fisubrl
mov
dec
test
shrb
and
inc
mov
sahf
cli
xor
outsl
scas
push
sbb
sbb
test
xlat
movsl
pushf
push
xchg
cltd
mov
jp
push
scas
sbb
inc
fbstp
inc
mov
scas
xchg
ja
or
cli
and
gs
mov
xchg
aam
fildll
push
xchg
xor
stos
xchg
push
add
scas
scas
inc
or
popl
icebp
cmpsl
aad
test
inc
mov
cli
loopne
sub
pop
rolb
xchg
mov
push
dec
jne
lock
imul
repz
jae
mov
dec
jo
adc
cmpsb
loopne
xor
andl
mov
negb
jnp
daa
fwait
mov
out
in
sub
sub
jb
filds
nop
fcmovne
in
cmp
sub
inc
sub
jecxz
scas
mov
push
lret
repz
jb
push
andl
mov
cmc
mov
dec
lods
cmp
popf
mov
clc
lea
std
inc
in
dec
loopne
jmp
clc
mov
jle
mov
push
xchg
roll
sub
add
jb
jbe
xor
adc
cltd
leave
xchg
add
insl
push
mov
sti
fldenv
in
pop
mov
inc
xchg
jno
push
pop
int3
int3
mov
xchg
push
shrl
xor
mov
in
lods
push
aam
out
push
aam
sti
or
ficoml
push
popl
hlt
filds
sahf
mov
mov
sub
arpl
jecxz
mov
jecxz
push
lods
push
shl
inc
mov
jecxz
shl
not
or
test
and
pop
jns
mov
xchg
and
xchg
mov
xor
add
in
mov
pop
sbb
int3
sti
dec
lods
mov
insl
jge
cmp
mov
les
inc
gs
jg
and
fwait
xor
stos
and
push
inc
pop
mov
sub
dec
rolb
mov
mov
push
adc
dec
lcall
pop
pushl
lret
daa
fcoms
add
scas
push
and
mov
push
mov
cmpsb
and
xchg
jg
punpckhwd
enter
repz
out
mov
sub
ds
mov
sub
loope
sti
and
movsl
cmp
das
decl
aaa
and
and
clc
ficompl
mov
jge
mov
sbb
shll
pushf
repz
add
sub
roll
addps
push
adc
sti
in
jbe
in
sti
lahf
sub
mov
push
pop
xchg
call
stos
fs
pop
mov
testl
mov
xor
cmc
push
mov
es
enter
and
sub
xor
pushf
pop
lds
out
xor
adc
pop
fidivl
jb
jo
or
jmp
outsl
jae
pop
daa
sub
mov
daa
xor
popf
push
or
scas
or
jnp
icebp
adc
pop
jecxz
push
loope
mov
dec
and
xor
inc
ror
out
cmpsb
test
dec
push
sahf
mov
lahf
pop
add
and
xor
mov
mov
pop
xchg
jne
inc
mov
mov
cmp
stos
cs
jbe,pn
sbb
add
aaa
jmp
sbb
sbb
dec
xchg
out
insb
jg
int3
das
jns
fcoms
fsubp
dec
jle
cmp
in
inc
data16
cmp
test
jae
xchg
dec
adc
jb
in
xchg
jns
jl
mov
cmp
pop
dec
ret
mov
aam
and
mov
std
sbb
mov
jecxz
cmp
lret
pop
subl
sbb
out
int3
out
pushf
jo
out
sbb
adc
daa
lret
ret
je
jb
rclb
nop
jl
cld
es
mov
mov
out
leave
and
cmp
or
push
mov
xchg
lea
or
sahf
jle
nop
sbb
xor
cmpsb
lock
fucomip
add
cld
imul
mov
repnz
fwait
mov
pop
out
xchg
loop
rolb
fstpt
fcoms
out
aad
stos
jnp
xor
enter
inc
and
lods
xchg
dec
fdivrl
roll
sub
fnstsw
xor
or
mov
dec
mov
sbb
jbe
loop
xchg
test
ds
sbb
scas
dec
in
inc
ret
sbb
jle
in
lods
shll
or
jb
rcr
mov
pusha
repnz
xchg
jecxz
xor
in
imul
pop
std
inc
and
or
sti
mov
xlat
dec
stos
adc
sbb
jl
scas
sbb
and
mov
or
test
repnz
popf
add
pop
jp
scas
jge
sub
sbb
mov
mov
fsubrp
xlat
mov
das
sarl
mov
jp
lahf
out
mov
push
xor
scas
jecxz
fcompl
aaa
adc
cwtl
cwtl
fsubrp
xchg
test
in
xchg
pop
movsl
sub
and
mov
movsb
call
push
stos
sahf
ja
xchg
sub
dec
adc
xchg
mov
cmpsb
fbld
inc
mov
imul
cwtl
inc
lret
push
pop
jecxz
mov
ffree
or
dec
sub
stc
pop
mov
pop
out
vpmacsdqh
cld
ss
and
sub
loopne
scas
pop
fldl
and
mov
movsb
sub
in
jp
or
shlb
mov
mov
out
jle
shr
out
outsl
arpl
stos
cwtl
add
xor
std
jmp
mov
and
add
jp
mov
daa
sbb
sub
sbb
fildl
or
inc
dec
fs
push
xor
cmpsl
pop
or
pop
cmc
mov
ret
les
push
jae
push
jo
and
cwtl
push
mov
fiaddl
xor
dec
into
cmp
test
pop
push
inc
into
lret
mov
adc
iret
imul
jg
scas
dec
pop
bound
lcall
pusha
push
cmpb
test
ja
mov
xor
pop
mov
cmp
mov
popf
lods
mov
sub
adc
and
mov
cmpsb
or
fisttpl
mov
movsl
push
push
dec
in
mov
call
add
cmp
imul
jns
mov
push
jmp
dec
pop
nop
pop
hlt
cmovle
jns
popa
mov
mov
inc
inc
insb
push
jl
jmp
imul
inc
sahf
jae
fwait
cmpsl
addr16
inc
fs
ljmp
xchg
dec
aad
les
xor
or
lods
leave
pop
sahf
hlt
push
sbb
mov
or
xor
adc
mov
or
xor
mov
push
imul
scas
in
mov
jle
data16
mov
pop
or
stos
arpl
outsb
and
or
cmp
fiadds
jl
rcrb
imul
adc
mov
gs
push
and
data16
jns
cltd
ss
pop
cmp
popf
adc
mov
push
fdivrp
pop
jle
xchg
lea
xchg
dec
imul
sahf
lret
sub
bound
and
out
push
adc
xchg
ret
imulb
in
insb
mov
sti
inc
cmp
jns
pop
cmpsb
addr16
sbb
or
outsl
data16
and
scas
stos
mov
loope
and
mov
enter
and
push
fbstp
sti
scas
out
cld
adc
test
daa
sbb
jp
lret
or
pop
and
iret
xchg
jno
push
pop
mov
lea
inc
movsb
push
push
out
idivl
mov
lods
push
xchg
lods
xchg
lret
xchg
psubq
xor
imul
out
xchg
jae
pop
sub
std
sbb
push
or
cmc
mov
ret
movsb
or
loop
stos
roll
test
mov
pop
pop
jo
popf
xor
jle
mov
push
fcmovnb
fcomps
cwtl
push
dec
and
add
icebp
rorb
inc
lret
add
push
lahf
out
in
mov
cltd
fwait
and
and
scas
push
out
fsubrl
test
das
jb
mov
adc
repz
pop
bound
adc
mov
mov
out
popf
pop
adc
push
jmp
sbbb
mov
ljmp
xor
inc
call
and
mov
mov
mov
push
scas
push
scas
sbb
test
mov
lods
adc
dec
xchg
inc
mov
cmp
lahf
xor
cs
es
stos
ret
jnp
idivl
arpl
mov
pop
imul
stos
pushl
popa
xchg
xor
xchg
mov
lods
pop
lods
sbb
jne
inc
push
pop
leave
bound
inc
or
mov
loop
xor
pop
scas
mov
add
ror
shlb
inc
inc
jp
mov
out
leave
test
jnp
es
adc
sub
cmp
lods
loope
lret
fcompl
jmp
xchg
sbb
ljmp
and
stc
in
nop
nop
cmp
inc
and
repnz
shr
ljmp
fcomps
nop
pop
mov
pop
or
dec
inc
and
rcrb
daa
jl
add
push
or
push
push
cmp
add
pop
iret
push
andb
incl
and
lcall
insl
iret
cmp
dec
inc
pop
inc
sarb
adc
pop
pop
mov
aad
inc
insb
dec
lods
shrb
inc
jecxz
jg
imul
pop
push
push
bound
pop
jno
data16
leave
in
mov
aaa
or
push
sbb
or
repz
or
popa
addr16
pop
xchg
movsb
hlt
jge
pop
and
mov
add
or
inc
or
loop
xchg
pop
xor
pop
push
fstp
push
add
es
bound
into
mov
push
fcoms
in
push
push
ss
gs
cli
dec
cli
dec
call
repz
add
push
xor
not
call
pop
leave
adc
add
sbb
stos
mov
add
fnstsw
push
pop
fstpl
add
push
insl
icebp
xor
push
dec
call
adc
xchg
xchg
sub
lahf
in
mov
mov
push
lds
dec
fistpl
fisubl
sub
movsl
roll
pop
jge
pop
das
jge
hlt
das
mov
push
movsl
ja
dec
out
dec
rcrb
leave
xchg
lock
add
int3
out
mov
dec
lods
sub
add
rep
movsl
sub
fcomi
jae
stc
lcall
sub
rcl
daa
out
sbb
sub
mov
cwtl
shlb
dec
bound
cs
add
jb
add
mov
arpl
ljmp
push
mov
fadd
or
repnz
lahf
pop
inc
push
stos
pop
ret
sbb
ja
sub
pop
mov
in
add
stos
cmp
cld
mov
sti
push
dec
dec
push
int
dec
mov
mov
or
loop
movhps
xchg
lahf
std
and
aas
mov
inc
rcrl
shll
ds
rol
push
mov
cmp
add
faddp
jns
mov
adc
push
add
xchg
cwtl
xchg
inc
inc
jg
xchg
leave
sbb
lret
aas
push
push
in
inc
insl
inc
xchg
cmp
jae
and
ret
adc
xor
add
mov
sbbb
sahf
mov
repnz
stos
cmc
push
push
ficompl
ret
add
mov
jns
mov
ja
cmp
dec
sbb
xchg
arpl
adc
mov
push
scas
test
add
adc
adc
dec
scas
jnp
jecxz
in
jne
in
xor
roll
sub
in
scas
cmp
pop
push
test
mov
lret
daa
fidivrl
push
outsl
dec
cmpsl
pop
sbb
xchg
mov
das
es
sbb
les
or
ret
jge
xor
andl
xor
lea
pop
fmul
sub
scas
mov
mov
fcomip
jle
mov
arpl
je
pusha
mov
inc
adc
clc
dec
mov
lods
out
adc
out
rorb
mov
call
into
movsb
stos
mov
xchg
add
cmp
ret
fildl
xor
imul
mov
sub
add
test
and
add
movsb
xor
test
push
call
xchg
sub
and
lods
shll
mov
cmpb
jecxz
icebp
test
ss
push
inc
call
add
jnp
out
movsb
sub
aaa
cmpsb
pop
xchg
ljmp
data16
bound
mov
loop
lcall
sub
or
jne
scas
sub
into
rorl
or
pop
adc
pop
out
orb
pop
dec
popa
jmp
adc
leave
call
jmp
repnz
jb
ss
int
mov
negl
lret
push
insl
icebp
sub
pop
outsl
fstl
inc
les
cmpsl
lret
sub
dec
lds
mov
sbb
out
lea
cmp
push
or
aad
cmp
inc
push
enter
nop
jg
pop
pop
cmpsl
ljmp
jno
sub
cltd
mov
and
add
aas
fcmovu
int
mov
cmp
movsl
repnz
push
or
jbe
mov
jg
inc
mov
xor
ss
inc
enter
into
xchg
out
mov
jns
xlat
in
aam
cmc
aas
in
xchg
adc
jmp
pusha
sub
sarb
cmp
pop
clc
stos
inc
pushf
aad
mov
jne
enter
inc
sub
xor
pop
ret
mov
pushf
jnp
adc
test
and
sarb
and
mov
mov
add
ss
mov
inc
adc
xorb
pop
test
lds
pop
push
xorb
es
scas
adc
xor
push
js
mov
sub
decb
leave
inc
cltd
mov
scas
jg
int
notl
pushf
jb
mov
inc
jle
popa
outsl
xor
subl
cmpsb
xor
data16
mov
or
pop
or
xor
adc
pop
dec
hlt
lock
test
push
out
stc
decb
adc
fs
and
gs
movl
mov
and
arpl
cli
adc
jne
je
hlt
ss
call
stos
sbb
jo
pop
fdivrl
xchg
sub
pop
das
jle
push
iret
inc
repnz
fwait
jae
mov
cmp
iret
add
cmp
mov
ja
rolb
jmp
aam
dec
rcll
adc
insl
mov
int3
pop
ja
mov
aaa
lods
bsf
mov
imul
into
test
lcall
jae
int3
sbb
outsb
leave
mov
cmp
or
std
adc
pop
pop
mov
pop
jbe
adc
or
les
test
rol
iret
insl
clc
inc
int3
aad
mov
mov
sahf
test
or
mov
sbb
scas
pop
imul
hlt
leave
or
or
loopne
rorl
js
mov
mov
mov
bound
add
addr16
es
jne
sub
xchg
adc
add
or
mov
and
pop
and
sub
mov
sub
push
in
dec
adc
int
mov
aad
pop
shll
inc
jl
inc
push
icebp
roll
iret
mov
adc
subb
push
out
cmp
je
inc
jle
out
inc
pop
dec
dec
sarl
bound
jmp
mov
sub
jo
cmp
mov
out
cwtl
inc
push
xchg
movsl
sub
inc
out
jge
adc
sub
mov
nop
pop
push
lret
pop
sar
pusha
fdivrs
sbb
jmp
xchg
adc
or
bound
popl
fiadds
out
pushf
bound
sub
xor
mov
popa
sarb
std
outsl
mov
inc
jnp
jge
push
popa
in
pop
push
add
test
mov
imul
xchg
add
subb
loopne
cmc
test
cmc
stos
pushw
lret
sub
xchg
int3
mov
aaa
or
out
push
scas
lods
inc
ret
movsl
mov
dec
xor
leave
hlt
icebp
xor
fiaddl
lcall
das
dec
pop
and
push
loop
xchg
cmp
aaa
lcall
or
inc
fcompl
push
hlt
jl
ljmp
cmp
loope
mov
lcall
lea
push
test
xchg
jno
das
fdiv
xchg
cmpsb
rolb
xchg
mov
gs
xor
xchg
lds
mov
xor
push
stc
fstps
and
fstps
jge
ja
mov
cltd
inc
add
fnsave
sbb
dec
jne
mov
xchg
std
push
stc
or
ds
mov
adc
mov
iret
or
xor
fcmovbe
sub
ja
rcrb
stc
xor
jae
mov
mov
sub
gs
aaa
mov
icebp
dec
push
idivl
dec
xor
fcomi
cmp
push
pop
movb
lods
andb
jl
imulb
push
fcmovu
push
fldl
cli
sub
jp
sbb
xchg
leave
xchg
dec
push
sbbb
sub
in
dec
incl
mov
test
jne
push
sbb
test
jle
loope
testl
lods
loope
sub
xor
jbe
leave
xor
sub
jb
cltd
pop
push
in
push
mov
jg
and
pop
add
call
es
cli
pop
inc
iret
sti
sub
mov
movsb
hlt
xchg
pop
add
icebp
inc
fstl
sahf
fdivl
vprotq
movsb
and
lcall
xchg
mov
data16
and
jmp
or
sub
jmp
mov
mov
jns
mov
pusha
xor
ret
in
out
cld
xchg
call
ds
stos
inc
xchg
cmp
sbb
loop
das
pop
xor
in
mov
mov
pop
imul
xor
gs
xchg
or
int3
test
cmc
push
test
icebp
mov
or
cmp
xchg
in
xor
or
adc
adc
or
or
nop
pusha
xor
in
sahf
lds
frstor
clc
addr16
jo
jb
jbe
pop
outsl
pop
inc
aad
int3
arpl
xor
fs
std
xor
mov
fistps
mov
sti
jns
lods
out
inc
cld
mov
or
cltd
push
cmp
lds
cmpsb
fbld
mov
push
adc
jae
or
push
lock
adc
mov
sub
mov
mov
fidivrl
sar
dec
jns
adc
cltd
jns
test
into
adcl
aaa
ret
add
dec
add
into
or
xor
push
cmc
test
inc
xchg
or
imulb
sbb
or
sbb
js
push
mov
pusha
sub
pop
orl
dec
out
fisttpl
cmp
cltd
int
adc
movsl
fnstenv
jmp
xor
out
leave
lcall
cld
sub
jg
xchg
mov
stos
bnd
nop
push
jge
ret
pushf
sub
call
xchg
xor
into
or
cmp
mov
lret
aas
and
xchg
js
inc
fs
das
mov
mov
push
sub
pop
ss
mov
push
cmpsb
sub
cmp
icebp
cltd
ss
jl
pop
adc
sbb
lods
sub
xchg
shrb
into
cmc
fs
adc
lods
cld
dec
rol
dec
mov
int
sbb
mov
adc
sahf
fwait
cwtl
in
fbld
jb
ret
mov
inc
push
mov
mov
leave
add
xchg
mov
add
psrlq
jmp
loopne
xor
aad
in
ds
call
test
xchg
icebp
rol
lcall
or
jb
adc
cmp
and
push
lret
pop
jo
fcmovnbe
pushl
shl
sbb
xchg
leave
sub
and
mov
sbb
or
ds
cltd
stc
xchg
push
push
loopne
push
test
xorl
repnz
or
add
nop
sbb
lcall
or
jge
jno
xchg
fwait
sbb
jae
sub
cmp
inc
cmc
fdivl
push
jb
cmp
push
lretw
mov
sarb
cld
lcall
sub
test
pop
rcll
lods
aaa
shr
cli
or
push
push
and
xchg
mov
fstpt
in
push
mov
push
loopne
filds
jge
insl
xor
je
movsl
cmp
aad
leave
dec
adc
cmp
xlat
sub
test
stc
add
popf
inc
inc
ljmp
sub
cli
inc
add
cmpsl
add
jle
sub
lret
push
das
push
mov
andl
pop
cmp
je
addr16
xchg
shrl
pop
pop
mov
jbe
jge
inc
push
das
mov
add
gs
imul
pop
fcos
test
push
fwait
pop
push
lahf
push
aad
je
addr16
cmc
jg
dec
push
flds
fidivl
pushf
adc
arpl
mov
mov
add
and
gs
jne
in
lds
lret
mov
popa
inc
aas
add
xor
xchg
call
out
pushf
push
sub
push
loopne
mov
dec
inc
js
outsb
mov
inc
jae
popa
lods
addr16
arpl
cwtl
pushf
scas
push
out
add
fidivs
adc
daa
mov
mov
jge
jb
pop
xchg
cwtl
scas
repnz
mov
xor
pop
pop
bound
adc
lea
mov
in
gs
xor
mov
aam
mov
jg
pop
mov
mov
loope
sti
xor
sbb
pusha
dec
jbe
cmp
lahf
mov
imul
push
ljmp
push
xor
mov
push
es
mov
pop
int3
jno
decb
stos
in
cmpsb
mov
xchg
adc
out
daa
dec
shlb
cld
or
and
mov
jo
loop
xchg
adc
xor
aam
push
js
jle
xchg
movsl
ret
push
mov
out
inc
sti
push
fstps
inc
mov
inc
in
xor
bound
xchg
fstl
ljmp
push
cs
pop
leave
jecxz
fwait
dec
push
push
das
add
pop
cld
fdivl
aas
add
pusha
inc
and
std
lret
stos
loopne
xchg
push
cmc
jecxz
xchg
adc
jbe
add
xor
dec
push
sbb
daa
pop
outsl
or
and
outsl
add
nop
mov
roll
pop
or
jle
dec
add
sub
pop
std
les
mov
ds
mov
imul
cmpsl
fwait
loopne
mov
jg
push
pop
dec
mov
jle
pop
push
lret
test
das
test
mov
xor
cmpsb
cli
in
mov
fs
and
mov
fs
and
sbb
xor
popa
add
fistpll
xchg
xor
push
jae
cmpsb
dec
sbb
outsb
ret
ljmpw
xchg
push
inc
jb
mov
scas
or
loope
add
mov
jb
cltd
movsl
mov
inc
loopne
imul
xchg
fs
xchg
xor
dec
sbb
pop
insl
lods
call
pop
or
enter
cmpb
cmp
pop
xchg
cs
lret
adc
pop
orb
cmp
rolb
jl
popf
jae
int
fwait
repnz
test
cltd
xor
sub
aas
cld
cs
je
repz
adc
cltd
dec
or
cwtl
in
lods
jle
ljmp
loop
ss
fcmovnu
pop
mov
loop
and
xchg
lds
cmpsl
pop
sub
sarl
ds
mov
cmp
jb
sub
xchg
out
jae
dec
mov
cwtl
aam
in
sub
popa
test
lret
sbb
icebp
test
sub
sbb
je
push
inc
sbb
inc
jo
pop
mov
adc
fsubrl
pop
lret
xchg
scas
cs
aaa
dec
dec
sbb
jg
xor
inc
shll
movsl
cmc
xor
gs
mov
or
lock
fcoml
rcrl
add
push
int3
jnp
lahf
test
sti
pop
jnp
push
mov
js
fwait
mov
pop
rcll
sti
dec
scas
pusha
insl
xor
inc
adc
lret
je
addr16
cmp
daa
jle
pop
xchg
test
cmp
xchg
out
fs
cwtl
and
in
lods
into
aad
popa
mov
push
jecxz
push
xlat
xor
sub
shl
dec
jmp
push
bound
cmpsl
jne
mov
jp
fisubl
in
cmpsb
pop
jo
sub
lds
aad
jl
call
mov
dec
cmpsl
pop
xchg
sarl
bound
dec
xchg
mov
sbb
or
lods
push
mov
sbb
lcall
add
mov
cmpsb
in
or
jnp
sub
in
xorl
jecxz
out
fadd
jno
lahf
sbb
pop
lock
leave
cmp
adc
mov
push
dec
loop
dec
xchg
fucomp
jmp
and
inc
or
push
push
inc
or
fbld
adc
cmpsb
je
cmc
add
cmc
mov
frndint
popa
xor
fwait
idivl
movsl
or
rorl
js
pop
out
push
jecxz
push
cwtl
jb
xor
lret
mov
adc
inc
lods
cmp
and
mov
mov
dec
call
lea
fnstsw
adc
adc
lods
sub
sub
cmp
adc
jns
jns
pop
pop
or
mov
xchg
xor
ljmp
fiaddl
push
cli
inc
cmp
mov
dec
inc
das
mov
fs
or
lock
pop
jmp
ss
mov
ljmp
jbe
mov
scas
inc
mov
cmp
lods
inc
stos
inc
and
xchg
clc
add
pushf
jae
pop
nop
daa
jl
in
mov
push
xlat
shll
loop
mov
inc
popf
mov
mov
out
call
rclb
mov
sbb
or
jns
xor
clc
sbb
cmpsb
movsb
mov
xchg
sbb
add
cmp
mov
jnp
or
arpl
pop
sub
pusha
push
pop
jle
cltd
movsl
sub
nop
div
ret
xchg
jne
push
jne
xor
jnp
and
push
sbb
mov
sbb
sbb
sbb
fsubr
sbb
pop
mov
or
fdivrs
inc
sub
xchg
daa
add
scas
xor
std
jmp
andb
jbe
push
push
cmp
subb
pushf
jns
xchg
mov
xchg
push
cmp
or
arpl
jle
daa
js
dec
bswap
mov
call
dec
int
bound
fidivl
fdiv
les
les
arpl
stos
xchg
arpl
jno
sub
mov
mov
fstpl
loopne
inc
jle
dec
lcall
mov
mov
iret
dec
rolb
mov
push
pop
sbb
mov
xchg
mov
rcrb
out
and
filds
jae
test
xchg
inc
arpl
outsb
cmp
cmp
jo
push
dec
jge
add
cmp
cwtl
xor
test
pop
lea
aaa
fwait
into
add
xlat
es
push
outsb
mov
repnz
sbb
jmp
sbb
xchg
cmc
pop
lret
push
loope
jae
int3
ljmp
jmp
or
ss
mov
lods
mov
and
jne
lahf
jmp
loopne
or
fcoml
sub
push
cmp
hlt
mov
sub
pop
adc
cmpsb
mov
push
popl
or
pop
mov
inc
sbb
in
or
int
js
add
aad
sbb
in
les
bound
xchg
gs
mov
fwait
sbb
mov
cltd
jmp
pop
movsb
sbb
std
and
cwtl
outsb
sti
or
pop
sub
pusha
push
xorl
add
mov
jnp
rcll
aad
pusha
movsl
std
mov
fsubr
into
fisttps
jne
adc
and
push
dec
xchg
das
negl
insb
xchg
or
mov
inc
or
mov
pop
scas
fwait
or
clc
fnstcw
xchg
mov
mov
jo
mov
jg
lret
std
inc
shll
inc
pop
pop
adc
or
inc
insb
dec
cs
xor
mov
arpl
fnstcw
or
subb
test
mov
out
shll
test
dec
sahf
sub
xchg
cld
movsl
dec
data16
int3
cmpsb
dec
adc
jge
add
loopne
push
fidivl
movsb
lret
mov
xchg
fdivl
adc
ja
sub
adc
xlat
leave
xor
inc
call
mov
es
add
pusha
movsb
push
repz
push
outsb
sub
cmp
and
cli
rcl
jnp
inc
scas
and
ret
add
out
punpcklwd
test
and
and
cmpsl
in
ja
mov
inc
adcb
out
jp
lcall
insb
push
xlat
fidivrl
fsub
les
js
ds
xchg
or
sub
and
mov
jmp
pop
sahf
dec
inc
xchg
xor
cwtl
mov
fisubrs
inc
sub
pop
inc
out
adc
std
and
lahf
loop
pop
imul
out
xchg
sub
cwtl
fwait
icebp
pop
pushf
imul
xlat
ret
jecxz
sbb
sub
xor
and
test
ss
iret
mull
inc
test
cltd
cli
sub
or
push
movl
push
jmp
jmp
mov
mov
push
outsb
mov
push
pop
out
mov
jl
xchg
setbe
popf
popl
loopne
pop
out
push
xlat
push
pop
insb
aad
xchg
repnz
mov
paddb
mov
add
jecxz
adc
loop
inc
mov
mov
pop
cmpsl
mov
sub
in
shll
clc
jb
inc
cs
sti
movsb
and
jb
cmp
das
xchg
pop
daa
repnz
pop
not
pop
pop
xchg
pop
add
mov
mov
pop
pop
push
ja
jbe
push
pop
insb
mov
jns
hlt
inc
jo
mov
roll
in
sub
addl
test
mov
aas
lret
arpl
mov
test
pop
jle
jmp
mov
std
mov
sbb
call
outsb
cmp
mov
xchg
arpl
lahf
iret
mov
sahf
xchg
push
adc
std
out
lret
xor
push
mov
jne
jb
filds
xor
fsubrl
cmp
add
add
dec
mov
mov
imul
xlat
pop
aaa
int3
jl
mov
mov
pop
mov
inc
and
sub
mov
jecxz
sub
mov
sarl
dec
push
xchg
insl
or
or
mov
daa
adc
test
leave
jmp
pop
xchg
and
jne
mov
sti
fstps
sub
inc
rorb
out
ret
jmp
adc
out
xchg
dec
xchg
mov
stos
pop
mov
stos
xorl
loop
filds
sahf
cmpsl
pop
stos
int
pop
mov
aad
lods
fldt
or
jg
outsl
and
or
scas
push
or
mov
add
xchg
cmpsl
xchg
out
dec
xchg
cmpsl
mov
push
sahf
test
popf
mov
pop
fidivl
in
inc
ja
outsb
mov
inc
sbb
aam
dec
push
adc
dec
or
xchg
cmp
inc
lods
dec
and
scas
sbb
cmc
push
ftst
iret
movsb
cmp
jae
pop
and
dec
ja
incl
jbe
out
add
pop
or
int
fidivs
push
loop
lret
aaa
jae
cmpsb
mov
jnp
mov
add
sbb
insb
or
imul
in
inc
icebp
rorb
add
lods
jp
daa
xlat
mov
aaa
inc
inc
pop
enter
lds
jbe
sbb
mov
ret
sub
and
mov
cmc
adc
cmpsb
xlat
pop
inc
cs
fstps
push
jne
mov
outsl
sub
xor
adc
test
xchg
inc
adc
pushf
mul
out
in
cmp
inc
mov
mov
pop
adc
xchg
loope
push
das
test
pop
xchg
fnclex
je
dec
movsb
cmp
loop
xor
outsl
stos
push
xchg
pop
mov
out
test
jbe
inc
inc
sti
mov
xchg
sbb
cltd
xchg
sbb
xchg
and
mov
and
lret
jl
mov
xchg
fists
inc
in
pusha
out
test
dec
dec
jecxz
out
rorb
lret
mov
pop
mov
push
test
push
jmp
mov
iret
outsb
sub
leave
jb
sti
pop
test
jg
ss
aaa
add
sub
test
decb
lret
stos
jne
outsl
cmpsb
sub
stc
push
and
push
mov
cmp
out
push
roll
cmp
loop
mov
push
outsl
leave
fdivs
pop
mov
outsb
mov
std
adc
nop
aad
push
popf
cmp
dec
sub
xor
and
sbb
outsb
cld
adc
ficoms
inc
pop
andb
or
dec
xchg
insl
xchg
inc
js
fdivl
push
dec
xchg
int3
or
mov
xchg
sbb
clc
cld
mov
mov
outsl
out
sti
fcom
into
cmpl
stos
mov
adc
dec
test
cmp
mov
jmp
fadd
mov
add
and
sub
add
inc
mov
aam
cli
xchg
xor
aas
adcb
test
mov
cmp
sub
jg
or
out
jp
dec
lret
adc
jne
mov
cmp
fs
cmp
mov
loop
jbe
sub
pop
aas
or
fmull
xchg
imul
ja
loope
jp
mov
xchg
imul
xchg
outsb
pop
inc
mov
mov
and
mov
ja
std
les
dec
mov
jns
sti
xchg
xchg
sar
pop
xchg
and
fiaddl
shll
xchg
ret
mov
pop
fdivrl
sbb
test
sbb
mov
adc
cmp
sub
repnz
pop
adc
jne
mov
sbb
fadd
aam
or
or
popa
das
pop
jle
pop
xor
bound
loope
mov
rorl
jge
mov
pop
and
fsubrl
lea
or
jbe
popf
repnz
imul
orl
jb
jb
dec
cmp
loope
xchg
int
dec
pusha
scas
fisubl
pop
lea
cmp
adc
cwtl
test
or
add
out
cmp
dec
mov
mov
dec
sahf
popl
data16
and
pop
mov
popf
in
daa
shll
and
sbb
and
xchg
inc
icebp
sbb
jecxz
and
or
push
and
jns
mov
sbb
jg
movl
dec
xorb
lds
jge
pop
jecxz
push
jp
imul
nop
cmp
sub
cmp
mov
jbe
and
out
adc
scas
sbb
sub
loop
mov
jmp
cmpsb
aam
aas
lret
mov
push
lock
outsl
pushf
push
lods
out
lahf
mov
into
in
ret
lods
arpl
adc
aaa
push
mov
sub
loopne
cltd
jmp
push
lret
out
mov
adc
mov
jb
stos
pop
push
inc
les
popa
rcrb
cli
dec
dec
sub
xchg
mov
or
sbb
sbb
fstps
sti
imul
adc
movsb
jbe
test
jg
pop
sbb
push
add
scas
scas
inc
xor
outsb
pop
mov
sub
sahf
icebp
lret
mov
fistl
shll
jmp
in
mov
dec
pop
or
adc
daa
xor
sub
pushl
xor
mov
mov
and
aaa
mov
cmpsb
fisttps
loop
dec
pushf
sahf
cltd
pop
and
out
mov
push
cwtl
xor
xchg
aam
fiadds
jbe
fwait
pop
stc
inc
shl
roll
enter
mov
ret
xor
xchg
in
push
daa
mov
lea
popf
and
fistps
jg
outsl
push
or
pop
sbb
pop
jae
sbb
sahf
aam
jle,pn
and
fdivrl
sub
lret
lret
jno
adc
sbb
dec
adc
dec
daa
add
add
xchg
cmp
adc
sub
test
or
dec
fbld
dec
pop
jb
dec
pop
sbb
mov
push
lock
loop
adc
inc
out
test
ret
mov
push
out
incl
xorb
lock
jp
dec
outsb
inc
in
jle,pn
movsb
pushf
dec
out
cmc
cld
leave
out
std
mov
ffree
jle
pop
cmp
push
dec
rcr
idivl
jns
pop
mov
adc
xchg
or
fisttps
xchg
call
and
xchg
jp
mov
cmp
shlb
neg
das
mov
xlat
insl
sub
popa
arpl
xor
xor
push
mov
jecxz
pusha
test
test
jns
cltd
sbb
or
ss
or
inc
arpl
and
sar
fld
mov
mov
mov
ret
loop
in
mov
test
arpl
imul
adc
sub
shr
or
mov
lcall
xor
or
aas
repz
int3
mov
ret
lahf
pusha
in
je
cs
sub
mov
lret
adc
and
push
pop
xchg
repz
xor
push
jmp
dec
cmpsl
shll
cmpsl
pop
pop
jmp
imulb
dec
mov
sub
daa
clc
nop
push
xchg
add
scas
cmp
push
xor
hlt
dec
test
cmp
push
mov
rorb
stc
cmp
bound
popf
mov
out
rol
cmp
loope
es
or
popf
mov
sbb
jmp
xor
int
sahf
and
in
aam
shlb
sbb
pop
aas
or
inc
pop
sub
ret
ljmp
push
xchg
cmp
enter
pop
pop
in
rol
dec
test
ljmpw
dec
mov
inc
mov
rcll
jmp
ror
mov
jge
sub
mulb
pop
lahf
and
cwtl
and
xor
cs
adc
and
cli
push
dec
pop
or
and
xor
jecxz
xchg
shlb
insb
jmp
movsb
dec
jbe
out
daa
xor
outsb
pop
xchg
push
pushf
adc
popl
call
dec
gs
pop
std
loope
xor
stos
movsb
add
jmp
pop
jb
rolb
xor
mov
into
and
ds
nop
xchg
fldl
mov
fs
add
adc
out
lea
mov
sbb
xchg
push
out
adc
inc
jecxz
inc
mov
add
out
test
xor
jge
into
jb
lret
movb
lret
shrb
pop
push
push
xor
xchg
or
add
outsl
dec
jge
mov
xor
or
mov
jbe
es
icebp
jecxz
imul
or
out
insl
std
xor
das
test
dec
out
hlt
popf
and
insl
cwtl
inc
dec
push
lods
ret
mov
mov
fldt
pop
add
jbe
xor
xor
les
push
movsl
xchg
daa
pop
rcll
and
xchg
or
leave
out
mov
xchg
inc
or
pop
sub
adc
das
cwtl
cmp
stos
sahf
mov
cmpsb
lahf
push
adc
dec
sub
es
rorl
call
sbb
repnz
js
push
fbld
popf
push
test
pop
push
mov
pop
pop
mov
gs
pop
jne
arpl
jg
inc
lret
mov
pop
dec
adc
aas
push
dec
je
dec
jecxz
mov
ljmp
loop
loope
sahf
mov
insl
dec
pushl
andb
psrlw
cld
dec
fadd
lds
and
xor
xlat
shrl
lods
aaa
cltd
xchg
cmpb
stos
or
movsl
mov
pop
pop
and
and
inc
adc
pop
adc
outsl
movsb
push
and
cmp
movsl
adc
add
push
pop
push
das
es
pop
adc
lret
inc
xor
cmp
insb
xchg
in
add
cwtl
jae
xor
jns
mov
and
popa
pop
jmp
loopne
xor
xor
shlb
push
addr16
aad
or
pop
loope
mov
sub
xchg
jl
js
sbb
in
inc
inc
and
mov
data16
loopne
or
mov
cwtl
fwait
pop
sbb
outsb
aaa
inc
mov
pop
repnz
cmp
loop
xor
push
lods
ss
sbb
push
test
sbb
push
icebp
jmp
leave
inc
xchg
fstpt
in
flds
push
stos
das
pop
into
pushl
jno
testl
and
negb
leave
icebp
lock
scas
icebp
and
pusha
test
inc
and
pop
xchg
call
xchg
imul
sub
test
adc
and
inc
xchg
rcrb
adc
out
inc
sbbl
js
dec
cmp
testl
xor
ss
aam
mov
adc
jg
pop
testb
mov
sarb
or
sub
es
pop
xor
daa
insl
test
jle
mov
sub
lcall
ret
testb
enter
ret
sub
adc
les
popa
push
repz
add
lock
push
xchg
and
out
repnz
loop
sub
jns
dec
icebp
cmp
loopne
subl
pop
xor
xor
xchg
adc
repz
outsb
jmp
add
test
sub
push
sbb
sub
lea
or
insl
insb
ljmp
jo
cld
pushf
xor
daa
adc
fistpl
pop
outsl
call
add
pop
jne
test
outsb
mov
outsl
shrb
jmp
sahf
xor
roll
in
push
sahf
int3
mov
push
lret
mov
xchg
decb
mov
dec
andb
nop
mov
shlb
insb
jno
sbb
pop
lock
lea
xor
mov
pop
loopne
and
cld
stos
xor
int3
inc
adc
pop
stos
pop
xor
mov
xchg
nop
lock
fs
jnp
dec
in
rcll
or
incb
pushf
push
flds
cmpsb
adcb
inc
fwait
mov
jp
das
mov
in
cli
adc
dec
in
popw
sub
push
or
into
ljmp
fisttpll
mov
jnp
pop
sbb
sarb
pop
hlt
push
fcoms
mov
jl
cs
rclb
push
mov
sti
and
push
insb
push
push
and
push
pop
sbb
push
add
out
and
ds
rorl
jge
outsl
pop
std
dec
roll
and
inc
add
jle
imul
push
into
pop
lock
inc
pop
mov
xor
shl
popf
inc
xchg
in
dec
ret
orl
xchg
pop
mov
xchg
icebp
lds
jg
inc
add
pop
mov
popf
aaa
mov
ds
cmpsb
ljmp
mov
test
aas
xchg
push
cld
sub
dec
popaw
xchg
jp
cwtl
dec
fadd
sti
cmpsl
mov
repnz
jecxz
add
jne
mov
jge
and
dec
vcvtsd2ss
enter
mov
push
push
or
ret
insl
mov
push
add
cmp
jecxz
or
mov
pop
jae
movsl
inc
fadds
in
adc
fidivrl
dec
stos
dec
cmp
pop
inc
lock
mov
cmpsl
jmp
test
and
dec
jg
xchg
xor
pop
xor
pop
and
pushf
inc
lods
push
idivb
xor
add
or
sbb
xchg
add
cmpb
lret
add
mov
xor
jg
shll
mov
push
shld
into
cltd
cmp
and
mov
or
mov
scas
add
mov
mov
movsl
xchg
das
adc
iret
iret
daa
sahf
pop
add
cmp
loop
inc
xor
push
mov
sbbb
test
pop
mull
pop
popa
mov
mov
stos
sub
jnp
push
sahf
stc
bound
sbb
jmp
addr16
std
ficoms
lea
call
outsb
dec
push
cli
ret
mov
stos
movsl
pop
sbb
mov
aaa
shl
jb
xor
repnz
outsl
inc
aas
mov
and
mov
divb
and
scas
push
sub
popf
test
into
adc
or
pop
mov
mov
movsl
push
and
mov
clc
popf
or
sbb
dec
sbb
dec
call
shrb
add
je
mov
imul
divb
jge
stc
lret
ror
xor
data16
pop
jbe
inc
jo
sahf
and
sub
ss
mov
xor
add
pop
cmp
andb
bnd
add
shll
jo
jecxz
add
test
xlat
sti
jle
inc
inc
dec
jb
int3
push
cmp
xchg
cmp
and
js
divb
pushf
addr16
std
mov
cmc
js
mov
xchg
xor
cmpsb
xchg
xchg
jmp
out
xchg
inc
mov
inc
sbb
mov
fwait
aad
sarb
or
cmp
icebp
mov
icebp
sbb
push
push
js
lcall
test
daa
or
push
xor
fbld
or
add
add
call
inc
std
jno
mov
dec
add
icebp
jnp
cmpsb
push
adc
jl
movsl
lret
xchg
jg
loopne
jecxz
xor
adc
push
cld
in
sbb
outsb
cmp
popl
mov
sti
mov
dec
out
hlt
xchg
sub
xchg
pop
leave
push
mov
pop
or
ret
test
rcl
xchg
push
int
and
cmpsb
ret
dec
mov
jp
dec
mov
neg
xchg
push
jle
arpl
or
in
and
subb
idiv
cmp
add
enter
shll
xchg
ror
dec
movsl
adc
mov
jmp
inc
inc
repz
mov
inc
xchg
add
ret
push
mov
push
sub
push
cmp
jmp
xchg
jge
dec
and
jmp
mov
cltd
mov
fisubrl
xor
or
cmp
jo
push
lcall
pop
dec
cwtl
push
lock
enter
adcl
out
leave
xchg
in
and
lds
mov
out
inc
xchg
call
add
in
or
andb
jno
inc
lock
lret
cmc
dec
cwtl
adc
pop
shll
push
adc
loope
fildll
pop
out
shrb
test
or
xor
scas
ss
repz
das
test
aam
jge
xchg
repnz
mov
xor
lret
imul
mov
popf
adc
sahf
push
cmc
filds
insb
addb
sahf
nop
push
loopne
ficoml
andl
stos
sub
and
aad
mov
stos
xchg
push
fstl
sbb
or
loopne
pop
push
push
push
out
xchg
gs
push
or
push
stos
jns
cmp
sbb
lods
movsl
outsb
sub
mov
jne
cmp
cmpsb
sbb
scas
pop
inc
scas
push
jae
rcll
fwait
das
sub
test
stc
or
push
test
cmp
int3
sbb
xchg
push
test
jo
pop
push
pushf
sub
das
cmpsb
ljmp
inc
inc
in
fbstp
jle
jecxz
mov
mov
loopne
push
push
and
es
and
xor
ljmp
dec
inc
add
add
movsl
add
sub
and
mov
jecxz
pop
mov
nop
cs
sahf
sub
enter
clc
clc
mov
addr16
push
or
and
adc
daa
fstps
loope
ss
xor
pop
xchg
or
test
mov
and
stos
iret
insl
fsubs
adc
cltd
dec
jle
inc
nop
sbb
xorb
insb
pushf
clc
aas
loop
mov
rol
stos
lods
dec
dec
cmpsb
or
popf
shll
test
out
es
test
pop
fcmovnb
into
mov
sbb
aaa
lea
mov
jb
ja
adc
push
fwait
jne
mov
push
test
mov
and
inc
ds
pusha
xor
jp
mov
loopne
lcall
sbb
bound
dec
inc
fidivs
mov
xor
jno
adc
mov
imulb
fwait
in
std
jbe
jg
mov
mov
mov
addr16
filds
addb
rclb
fucomi
stos
xor
cli
add
ja,pn
popf
fadds
ret
in
inc
ss
sti
cltd
cmp
mov
sbb
in
cltd
add
mov
test
and
shrl
xchg
scas
test
stos
out
mov
leave
scas
rcrl
test
dec
cs
icebp
arpl
into
imul
mull
pusha
pop
data16
inc
sub
icebp
xor
int
repz
mov
push
mov
outsl
arpl
ljmp
push
repz
mov
aam
xor
dec
popa
mov
fidivs
aam
imull
push
popf
jns
sbb
jmp
sbb
inc
es
jns
push
pop
and
inc
jae
sar
popa
pop
cli
or
sbb
outsb
inc
cmc
cltd
leave
cmpl
fisttpl
and
ror
fidivrl
jno
sub
cli
idiv
stc
inc
sbb
push
pop
mov
mov
vmovdqu
cmpsl
or
mov
jbe
leave
aam
popf
cmpsb
sarl
push
imul
scas
adc
jle
push
sahf
and
into
sub
jae
pop
aaa
stc
inc
leave
adc
or
sbb
mov
fmul
lret
mov
sahf
or
add
aad
dec
xchg
mov
xchg
sbb
mov
add
push
mov
cmpsl
les
xlat
sub
cmp
shrl
sti
fiaddl
dec
sarl
insl
dec
mov
movsl
push
jl
ret
adc
mov
pop
cmc
jle
mov
leave
cmpsl
in
mov
clc
subb
sbb
sub
ret
lcall
mov
movsb
add
add
lea
cmc
xor
rcr
xchg
mov
fldcw
mov
dec
lret
pop
xchg
xlat
int
aas
jle
mov
popa
pop
push
pop
test
fisubrs
add
xchg
and
lea
popa
movsl
jge
cltd
sub
jg
inc
inc
fwait
ja
jns
xchg
push
inc
sub
mov
and
fadd
xchg
sub
rcr
fsub
sub
flds
popf
gs
xchg
loope
sub
rcrb
dec
jle
mov
imul
xchg
push
lods
xchg
rcrl
jo
push
lods
mov
aas
jno
js
mov
add
or
repz
lcall
xor
loope
adc
and
mov
mov
mov
call
lret
jns
mov
pop
inc
dec
inc
mov
pop
addb
jecxz
and
push
test
pop
mov
lea
push
push
dec
stos
pop
lods
cwtl
push
mov
sbb
mov
jmp
mov
jnp
jns
clc
daa
sbbl
jle
leave
sub
sbb
cmp
cli
mov
mov
xor
sub
pop
adc
test
imul
rcl
aam
fstpl
mov
in
push
out
fs
jmp
inc
xor
sub
loop
cli
push
popf
cmp
cltd
sbb
outsl
repz
lret
xchg
test
lahf
fmul
scas
inc
add
adc
fcmovbe
lods
test
sahf
loope
adc
in
and
insb
and
sbb
dec
cli
jp
adc
pop
mov
cs
sbb
call
push
cmp
cmc
sahf
sub
gs
fdivrs
cmp
inc
iret
mov
inc
ss
cmpsb
lret
arpl
pop
dec
subl
movsl
dec
jmp
jg
iret
lods
dec
adc
lcall
aas
inc
jl
add
xor
pushf
cmp
lret
mov
mov
jge
out
ret
push
test
addl
fadds
lret
in
ds
mov
and
enter
les
imul
shll
add
mov
mov
xchg
mov
mov
punpcklwd
int
iret
jl
mov
jecxz
xchg
inc
ljmp
rcrb
inc
or
shll
push
js
movsl
cli
dec
out
xchg
aas
and
fists
inc
enter
or
repnz
adc
xchg
dec
or
pop
adc
sbb
fists
push
cwtl
jb
sbb
cs
xchg
push
jmp
add
cwtl
sbb
sbb
sarl
sbb
ret
push
sbb
or
push
icebp
sub
dec
xor
cwtl
push
inc
push
jbe
aam
in
fsincos
imulb
pop
gs
cli
push
push
repnz
adcl
dec
mov
ret
fwait
jmp
loopne
out
inc
daa
out
lods
jne
jne
mov
jns
push
xor
sti
rcl
cmc
mov
inc
mov
popa
insl
and
or
lret
iret
shll
cmp
inc
mov
cmp
out
pop
lock
dec
xchg
pop
jne
cmp
adc
imul
fnstcw
jae
out
lret
sbb
shrb
add
les
mov
lds
xor
push
lahf
mov
xchg
loop
fistps
sti
bound
je,pt
fcmovnbe
sbb
das
jo
pushw
std
push
push
in
out
lret
jle
es
inc
adc
push
pusha
push
stos
stos
pop
cmpsb
aad
pop
inc
pop
inc
icebp
mov
sub
cld
sbb
mov
test
adc
mov
insl
subl
xchg
popf
fstp
aaa
insl
movl
cmc
hlt
add
rorl
mov
int3
push
jbe
enter
sahf
testb
dec
les
pusha
jge
fwait
std
lods
cmp
cmpsb
mov
repnz
cmp
rclb
bound
jg
sbb
stos
or
sub
jp
xor
xchg
cs
fs
in
shrl
sarb
outsb
xor
test
inc
jp
insb
lcall
mov
dec
pop
jmp
cs
jo
ja
or
mov
xor
and
cmpsl
xchg
insl
call
int
rorl
insl
les
sbb
or
js
popf
mov
int3
sub
imul
or
jns
sti
cmp
pusha
jl
or
jle
lods
scas
pop
xor
mov
cmp
stc
arpl
lea
lods
jg
push
repnz
movsb
or
and
ja
imul
sarb
rcrb
pop
mov
and
or
clc
cli
add
call
pop
inc
mov
inc
pop
out
test
cs
and
std
sub
jno
mov
add
sbb
cmp
xchg
les
stos
fdivl
pop
scas
into
addr16
cmpsl
xorb
inc
lcall
inc
push
mov
jne
lea
push
aaa
inc
jp
push
fwait
jg
out
push
dec
or
das
xor
jb
pop
mov
daa
mull
dec
mov
rcrl
mov
mov
test
fcomi
rcll
sahf
push
lcall
sub
je
shlb
scas
iret
lods
xchg
xchg
stc
cltd
add
rclb
in
gs
ret
scas
cmp
test
and
xchg
xor
int3
leave
cvttps2pi
adc
cwtl
or
inc
std
mov
push
xor
jp
xor
or
out
test
clc
loopne
loopne
dec
movsb
stos
sub
push
es
into
mov
jl
add
insl
inc
fs
cmp
data16
pop
jo
mov
ja
daa
int3
test
shl
test
inc
mov
or
adc
into
rolb
clc
mov
repz
mov
and
stos
inc
jo
adc
mov
pop
add
mov
adc
fwait
notb
jb
push
and
dec
xchg
pusha
pusha
incl
or
sub
test
xchg
jp
test
mov
push
xor
pusha
lds
sbb
mov
iret
push
pop
push
or
scas
mov
pushf
shr
lret
dec
call
clc
and
add
sub
mov
add
pop
in
icebp
jl
fisttpl
mov
into
pop
js
fmull
push
shrb
push
mov
jl
xchg
inc
icebp
xor
shrl
pop
adc
cwtl
imul
jp
adc
add
fistpl
dec
aas
cmp
pop
stos
nop
or
sbb
jecxz
dec
xor
jle
scas
sub
mov
mov
inc
in
add
stos
sbb
jb
repz
jg
outsb
xchg
imul
pop
xchg
mov
xor
sbb
cltd
pop
jb
adc
cs
cmc
imul
insl
mov
fimuls
xor
jg
lods
add
fisttps
xchg
add
das
aaa
int
sarb
sbb
loopne
xchg
xchg
xchg
mov
movsl
ficoms
das
in
rorl
popa
call
jb
add
inc
pusha
addl
pop
xlat
or
pop
repz
add
or
jo
aam
mov
ljmp
insb
or
arpl
or
add
push
and
jge
mov
xchg
int
push
fildll
je
in
xchg
add
and
iret
les
fs
hlt
rcrb
dec
jb
mov
repz
call
mov
xchg
mov
movups
xchg
test
xor
adc
add
dec
loope
dec
push
xchg
aaa
xchg
add
sub
mov
push
nop
xor
cmp
movsb
pop
push
mov
jmp
cli
movsb
int
movb
jle,pn
push
xchg
pop
in
dec
or
adc
enterw
push
sub
mov
cmpsb
std
addr16
std
jge
jle
inc
jecxz
inc
pop
cmp
mov
mov
mov
into
mov
xorb
cmp
cs
gs
enter
sub
in
dec
adc
cs
lret
and
jno
sub
lret
dec
or
mov
dec
cmp
cli
and
and
das
ljmp
ret
flds
jo
jl
int
lock
es
stos
icebp
xor
popa
fstp
rolb
and
push
add
pop
pop
or
aam
aam
nop
jp
out
adc
pop
dec
adc
cmp
mov
les
xchg
xor
icebp
mov
pop
push
add
push
cmp
js
jne
insb
mov
ret
push
outsb
test
jns
mov
out
xor
pusha
mov
adc
int
imul
sbb
sbb
js
xchg
adc
dec
lret
rcll
mov
cmp
and
dec
inc
xor
lods
add
push
dec
cld
int
imul
cmpsb
xchg
push
cs
jg
xor
aaa
cmpsl
cmp
sub
js
add
mov
or
inc
clc
movsl
cmp
sub
pushf
add
jno
push
data16
mov
repnz
push
cmp
mov
mov
dec
enter
xchg
mov
loop
cmpsl
mov
ds
inc
mov
adc
add
mov
scas
fs
call
sti
icebp
inc
mov
pop
sti
stos
jecxz
add
pop
inc
push
sub
jae
cmpsl
pop
jne
stos
push
sahf
andl
jo
rorl
shrb
mov
cld
mov
call
cmc
push
sbb
xchg
js
addw
push
pmaxsw
and
mov
repnz
std
pop
mov
cmpsl
cmp
mov
dec
mov
jo
jg
orl
push
lods
jbe
sbb
pop
xchg
cld
imul
sbb
pop
call
into
inc
ret
inc
jo
outsb
jl
repnz
pusha
stos
adc
mov
arpl
fmuls
inc
arpl
add
test
fldz
adc
mov
inc
shll
shlb
fsubs
shlb
ljmp
dec
fsts
out
jge
mov
sub
push
jg
je
push
mov
adc
lret
xchg
aaa
xor
push
fimuls
xchg
jae
pop
add
jbe
loop
mov
addr16
insl
fstp
loope
je
lods
test
push
lods
mov
cli
mov
nop
dec
add
xchg
xchg
mov
fwait
mov
inc
mov
jmp
inc
stos
mov
cmp
xchg
sub
aas
pop
shrb
loop
pop
incl
fwait
insb
faddl
loop
and
or
add
bound
lcall
sbb
aam
repz
xor
sub
jns
jmp
clc
bound
pop
iret
push
pop
hlt
pop
bound
out
scas
mov
inc
cmp
mov
or
je
scas
aam
cmp
stc
loope
repz
push
pop
pop
xchg
xchg
mov
imul
fld1
inc
push
gs
inc
mov
jle
xor
arpl
test
in
mov
push
mov
orb
loope
jge
insb
sbb
orl
rcr
mov
into
cmp
loop
aas
dec
in
sub
ljmp
xor
add
xchg
add
mov
lret
xchg
in
push
test
jge
outsl
stos
mov
imulb
pop
sub
imulb
fimull
or
pop
mov
dec
dec
xor
out
sub
popl
push
xor
and
decl
xor
rol
outsb
mov
dec
xchg
mov
je
pop
or
repz
dec
adc
pop
leave
jbe
loope
push
xor
aaa
pop
out
dec
or
sub
inc
in
lods
pusha
cmpsb
mov
fldcw
ljmp
inc
jb
in
loope
movsl
jb
pop
repnz
movsl
mov
xor
sbb
in
xlat
jp
adc
jae
cmp
mov
shl
pop
scas
pop
jnp
push
addb
jmp
add
loope
jle
add
inc
dec
je
sbb
lods
mov
xchg
movsl
dec
inc
rcrl
xchg
in
push
and
xchg
xorl
sbb
cmc
loope
sbb
mov
dec
jge
jbe
mov
roll
or
mov
je
push
push
call
push
out
xchg
push
jb
arpl
cmp
ja
mov
std
pop
mov
bound
lock
mov
mov
pop
mov
add
xorb
dec
push
jne
pushf
cmpsl
daa
sbb
inc
sub
popf
int
mov
aam
push
stos
pop
inc
inc
dec
lahf
cmp
xchg
jle
pushf
push
daa
sub
dec
sub
call
addl
xchg
xor
in
popf
push
pusha
mov
int3
mov
or
or
cmp
pop
mov
lock
popa
sub
loop
push
xorb
jno
and
outsb
add
push
notb
add
pop
sti
lcall
cwtl
pop
sti
sub
imul
dec
lock
cmp
mov
cmpsl
xchg
lods
jb
pop
fs
mov
in
add
jecxz
lret
mov
lods
movsl
fisttpll
rcr
xor
push
stos
jns
aaa
xor
aaa
sub
test
daa
xchg
jbe
adc
rcrb
fnstcw
jg
out
mov
push
cmp
in
inc
xchg
pop
aas
lret
mov
jno
mov
fs
jne
jle
jp
xchg
cli
dec
fistps
out
cmp
in
dec
sbb
gs
push
in
sbb
and
iret
sti
adc
fs
lods
pop
push
jmp
lret
fidivrl
mov
jbe
ret
mov
push
cld
aad
orb
jae
div
lahf
or
mov
push
inc
out
das
jmp
jmp
xor
js
xlat
sahf
sub
xchg
movsb
clc
mov
push
mov
mov
adc
test
fiaddl
sub
inc
and
dec
sti
imul
adc
movsl
in
stc
rorb
scas
xor
cmp
dec
pop
dec
jp
out
and
rorl
pop
mov
jns
nop
mov
in
shr
fwait
cld
mov
adc
lea
jae
dec
cmc
sub
repnz
iret
in
rcrb
add
call
pop
orb
stos
lock
out
test
jo
inc
and
jb
pop
push
jle
jp
jb
imul
test
jno
pop
stos
rorb
inc
and
inc
fiadds
loopne
bound
dec
add
in
xor
ss
bound
mov
pop
cmc
and
pop
and
repz
es
xchg
lock
jne
sub
faddl
adc
in
xlat
mov
dec
pop
pop
dec
mov
mov
pop
cmpsl
test
pop
pop
cltd
sbb
ljmp
insl
sub
je
add
cltd
js
push
jbe
mov
les
inc
divl
imul
ja
fdivs
sbb
in
cmp
pop
add
dec
lret
cmp
into
push
gs
sbb
test
sub
testl
jmp
cmpsl
sub
dec
aaa
mov
popa
aad
fwait
adc
fcmove
or
push
test
jbe
lods
test
cmp
xchg
pop
in
adc
mov
ljmp
stos
imul
test
mov
lcall
push
fdiv
push
scas
std
or
addb
pusha
movsb
pop
popa
and
push
movsb
ljmp
jle
add
sub
push
mov
xor
xchg
push
fwait
mov
les
int
jmp
xchg
stc
idivb
fstl
and
and
add
push
fld
sbb
nop
stos
hlt
cmp
lahf
xlat
gs
or
push
or
sbb
andb
test
sbb
mov
mov
clc
push
and
aaa
dec
test
push
in
stos
nop
jg
sbb
push
sbb
popa
js
add
movsl
mov
mov
in
mov
rcll
subl
add
mov
out
hlt
fwait
insl
adc
movsl
inc
sar
cwtl
int
and
mov
dec
ds
push
xlat
add
xchg
jle
lret
xchg
sub
adc
out
sbb
call
enter
mov
lock
cmpsb
mov
mov
stos
mov
icebp
mov
xor
addl
fs
adc
mov
add
jmp
cmp
stc
sarl
adc
fs
mov
or
sub
inc
push
popf
push
hlt
pop
inc
cmp
and
rcrl
pop
xchg
add
aas
jnp
mov
test
sti
jmp
lahf
fisttpll
cmp
pop
clc
mov
xchg
stos
inc
cmpsl
xor
jmp
xor
push
out
add
dec
or
adc
jl
inc
push
mov
in
scas
mul
aad
mov
pop
leave
xchg
mov
mov
mulb
jb
cmp
push
inc
push
cmp
xchg
pop
mov
mov
scas
subb
popa
xchg
mov
and
cmc
mov
inc
jle
in
in
es
push
loopne
push
adc
incl
xor
les
push
jg
jmp
adc
rorb
inc
dec
clc
subl
or
pushf
jge
jmp
mov
aam
pop
ret
mov
inc
in
clc
scas
or
into
push
into
push
fxch
mov
inc
iret
and
mov
cmp
dec
xor
cmpsl
loopne
mov
mov
ffreep
sbb
outsl
push
mov
jp
cmpsb
gs
mov
clc
sub
sub
push
dec
lods
jb
scas
jp
xor
xchg
mov
fnstcw
jne
mov
pop
pop
inc
call
lods
jecxz
xor
inc
dec
aas
std
outsb
sub
mov
xorl
mov
mov
xor
fdivs
lea
call
add
rorl
cmpsl
sbb
lds
lea
xchg
jl
push
adc
or
fistpll
adc
fsubl
adc
sahf
lods
lods
adcb
add
test
ja
repnz
das
pop
xchg
cmp
bound
lahf
aaa
hlt
mov
stos
push
fs
xchg
jle
imul
test
addr16
leave
pushf
mov
jecxz
scas
enter
pusha
fisubrs
push
sbb
push
or
push
jns
mov
push
enter
mov
imul
jnp
fimuls
add
and
fisttps
sub
cmp
outsb
fadd
ret
imul
and
push
or
push
xchg
xchg
dec
lret
leave
cld
leave
jle
mov
dec
cmc
inc
lods
leave
pushf
mov
pop
cltd
data16
lret
jge
inc
sub
pop
cmc
test
mov
mov
jno
add
mov
dec
and
pop
and
xchg
nop
xchg
adcl
fstl
es
xchg
les
and
hlt
inc
push
cmpsl
loope
shr
repz
pushf
cmp
loop
add
jl
nop
mov
adc
mov
mov
push
sbb
dec
sub
inc
in
xchg
and
mov
clc
add
sbb
pop
repz
aaa
roll
dec
mov
shr
inc
hlt
in
jne
aaa
fsubr
lret
xchg
pop
dec
push
lods
inc
push
in
dec
jnp
fdivrs
mov
mov
lahf
inc
jbe
or
fbld
sub
ljmp
jecxz
sbb
stos
xchg
lds
cs
pop
ss
mov
mov
hlt
inc
mov
and
xchg
arpl
or
cmc
mov
into
push
push
movsl
pushf
fwait
sbb
jmp
mov
jns
roll
jmp
mov
repz
cmp
add
pop
sti
bound
xor
pushf
std
scas
pusha
std
lea
sub
or
das
fisttpl
mov
fwait
or
dec
and
mov
mov
clc
sbb
jle
aam
jo
clc
jns
shrl
pusha
lahf
clc
orb
xor
dec
icebp
add
mov
dec
in
mov
mov
xor
mov
gs
aaa
aad
popf
lock
sbb
mov
loop
push
push
mov
sub
clc
test
je
add
cwtl
popa
inc
ret
adc
jecxz
push
cs
loope
test
pop
cmp
mov
pushf
mov
mov
or
inc
jns
sub
shll
xchg
pop
clc
inc
orl
ja
mov
xchg
testb
mov
xor
fnstenv
cmpsl
push
mov
cld
insb
xchg
pop
mov
into
ja
push
or
adc
and
pop
lret
cmpsb
inc
xor
inc
lret
inc
mov
std
int
and
int
sahf
pop
dec
fdivr
adc
sbb
ficoml
ja
jae
xor
cwtl
loopne
mov
bnd
jl
xor
imulb
xchg
arpl
iret
sub
pusha
out
rorl
test
aas
xchg
and
xchg
mov
cmp
lahf
mov
jge
add
push
loopne
xchg
shll
pop
xchg
out
mov
xor
enter
das
dec
pushf
push
aad
stc
aad
dec
mov
dec
pop
mov
call
stos
sti
mov
testb
mov
pop
sbb
add
hlt
faddl
fcmovnbe
add
push
lret
scas
pop
into
push
enter
push
fwait
jl
sbb
lcall
xchg
std
into
xor
lea
mov
mov
and
pop
cld
add
arpl
fdivrp
add
sub
loopne
cmpsl
into
mov
in
push
mov
das
pop
pop
mov
stos
dec
movsl
inc
aas
mov
xlat
out
and
pop
sbb
sarb
mov
cld
mov
int3
pushf
into
in
xchg
mov
aas
ljmp
add
inc
punpckhwd
xor
pop
fbld
imul
cmpsl
inc
jl
add
mov
shr
aas
cmpps
mov
sbb
imul
out
leave
aas
sbb
jne
stc
cs
cmpsl
les
mov
addr16
les
sbb
ja
xchg
or
es
notb
jo
repz
cli
cmpsl
adc
clc
xchg
test
repz
push
out
sbb
jmp
and
inc
jnp
jle
cmp
fistpl
inc
loop
jb
js
pop
js
rep
mov
and
out
sbb
outsb
lret
xchg
leave
icebp
cmp
test
jns
and
or
xor
cmpsb
insl
popf
ja
stos
into
insb
testl
fnstenv
mov
rcll
mov
adc
add
push
adc
cltd
movzbl
mov
cmpsl
in
inc
push
test
push
cmpsb
mov
push
outsb
js
sub
cmp
jmp
mov
insl
add
mov
or
jecxz
aas
sti
movsb
and
dec
jmp
adc
dec
sub
loop
aas
sub
lret
mov
xor
mov
dec
or
cmp
mov
mov
sub
rolb
in
inc
xchg
inc
addr16
mov
push
push
jno
iret
movsl
rcrb
mov
sti
mov
pop
pop
in
aad
pop
into
xchg
push
adc
pop
imull
inc
mov
lds
sahf
aam
aaa
push
aam
aad
xor
lock
ja
inc
jbe
stos
cld
adc
mov
fstl
push
mov
inc
ja
cmp
ja
pop
jo
inc
in
mov
mov
ret
push
and
and
out
stos
mov
inc
or
pop
loop
icebp
pop
call
jne
cli
jb
das
lahf
bound
ljmp
loopne
or
out
inc
xlat
push
lahf
divl
aaa
cs
adc
cmp
lret
jnp
mov
xchg
lods
and
inc
stos
push
js
loopne
loop
cmc
cmp
dec
push
movsb
in
ja
jns
cmp
sti
out
mov
push
fwait
sub
mov
or
xchg
sub
shl
mov
pushf
inc
adc
hlt
pop
xchg
clc
sti
es
sub
cmc
jo
test
push
pop
dec
imul
mov
lcall
mov
scas
xchg
add
shll
pop
mov
addr16
subl
adc
imul
push
in
js
test
or
sbb
test
les
xchg
xor
sti
sub
aam
aas
mov
call
mov
insb
xchg
ret
add
or
nop
lods
adc
xchg
test
push
push
mov
pop
cmp
cmpsl
or
sbb
pop
arpl
dec
cli
xlat
in
fwait
es
fbstp
push
inc
fwait
data16
dec
cmp
fisttpll
sub
cmp
fcmovbe
push
outsl
ss
xchg
jg
cmc
outsb
mov
outsb
push
shlb
scas
and
cwtl
push
test
int
das
push
xchg
sub
sub
push
or
sarb
scas
gs
mov
push
xchg
addr16
aam
dec
test
int
imul
push
je
fs
xchg
lock
jp
push
mov
cwtl
movb
aam
dec
add
out
fidivs
fidivl
xor
test
jle
sub
dec
push
mov
stos
adc
rol
add
ja
adc
into
iret
xor
lret
imul
and
fxam
xchg
outsl
dec
fisttps
sub
cli
popf
mov
pop
push
add
addb
and
and
xchg
xchg
jl
call
imul
xchg
insl
cs
inc
mov
fs
mov
and
in
push
cmp
pusha
pusha
into
pop
sub
lcall
mov
gs
js
xor
js
shll
and
push
cmp
xchg
push
mov
lret
xlat
sbb
mov
xchg
sti
test
xor
push
mov
and
adc
popf
leave
popf
pop
adc
scas
test
fcmovbe
ret
es
xchg
in
mov
and
stc
mov
xor
fisubrs
insb
fmulp
pop
mov
mov
mov
jmp
sarb
nop
or
mov
push
xchg
nop
int3
loope
adc
sub
pop
xchg
dec
sbb
cmc
mov
hlt
out
mov
aaa
mov
repnz
test
and
jns
xor
jno
adc
test
ret
mov
rcrl
or
cmpsb
arpl
push
loopne
stc
mov
push
jno
mov
jle
push
mov
je
fwait
stc
in
jns
cmp
mov
movsl
pushf
test
jecxz
lret
aaa
and
popa
push
stos
mov
pop
test
in
divb
icebp
arpl
lea
pop
dec
and
cli
jo
mov
push
loopne
je
imulb
lods
push
mov
test
xchg
jno
test
or
adc
push
in
jnp
add
rorb
pop
jbe
pop
aam
or
fsubs
push
dec
or
xchg
lea
lea
or
pop
inc
shl
mov
xchg
xor
xchg
inc
clc
ret
inc
ss
mov
adc
dec
fsts
xor
dec
daa
sti
std
out
dec
jno
cwtl
dec
cwtl
sub
push
cmp
adc
push
repz
loope
addl
aam
jge
roll
scas
dec
sub
int
fbstp
mov
cmc
cltd
inc
mov
dec
mov
adc
movl
in
je
ret
cmpsb
push
scas
mov
sub
fs
test
test
and
push
fidivs
sbb
mov
push
psrad
jle
js
arpl
negb
push
sub
lock
pop
jp
dec
xchg
pop
enter
push
or
push
and
ljmp
mov
mov
lods
push
sbb
sub
pop
ja
cs
cltd
xchg
in
ret
enter
in
push
sti
enter
dec
cmpsl
push
aaa
jbe
cmpb
inc
int3
ss
dec
cmp
xchg
pop
sub
aad
push
clc
inc
mov
xor
sbb
mov
xchg
xor
lahf
adc
adc
xchg
stos
pop
lret
sub
in
and
iret
sbb
push
dec
clc
pop
push
and
jb,pn
xchg
adc
cmp
inc
and
daa
adc
aaa
push
clc
adc
out
addb
call
adc
dec
mov
in
adc
pop
jl
adc
daa
jg
push
inc
inc
inc
cmp
add
pop
fmuls
sub
aam
scas
pusha
pop
and
fdivrl
div
aad
and
cmp
aas
cwtl
add
imul
dec
pop
popf
cmp
jnp
mov
stos
push
movsb
mov
mov
pop
pop
repz
adc
sbb
testb
pop
sbb
mov
xor
and
es
pop
mov
ja
fcomps
test
int3
fnstcw
dec
mov
idivl
in
pop
test
lock
addr16
out
push
fisubl
mov
inc
loopne
push
test
push
add
xor
stc
sbb
call
sub
jb
xchg
mov
std
add
rcr
repz
test
xlat
fmuls
out
mov
call
ret
scas
mov
pop
mov
mov
fisubl
xchg
outsb
movsl
and
fldt
inc
mov
inc
in
mov
je
shr
insl
push
add
outsb
jnp
clc
outsb
in
mov
pop
xchg
push
mov
sbb
cmp
out
mov
adcl
roll
pop
je
mov
or
int3
mov
mov
inc
jo
std
movsb
ljmp
pop
sarl
enter
push
adc
cmp
xor
push
or
mov
add
notl
lock
add
imul
mov
nop
inc
sbb
xlat
push
add
inc
mov
int3
dec
add
sub
divb
hlt
fidivs
xchg
sbb
shlb
sbb
inc
mov
xchg
mov
or
movsb
fisttpll
xor
xor
sub
sub
sbb
and
pop
pop
cmp
cmp
shrb
and
xchg
pop
mov
sbb
out
mov
and
xlat
cwtl
cwtl
js
pop
mov
push
lcall
ss
cmp
and
rcll
outsl
data16
cmc
movsb
cmp
cmp
fcomip
cmc
scas
inc
sbb
xchg
xchg
pop
lret
cmp
inc
jnp
out
in
lea
mov
add
cmp
sub
or
adc
in
in
mov
jae
jbe
bound
repz
repz
outsl
cs
jae
popf
fs
mov
addl
and
rcrl
inc
cmpl
bound
imul
stos
dec
cmp
in
test
sti
cwtl
lcall
push
lret
js
fidivs
fmulp
fs
out
xor
mov
pop
sbb
inc
jb
push
lret
push
int3
fidivrs
mov
mov
lods
adc
dec
aam
add
scas
mov
push
shll
pop
or
xchg
adc
shll
dec
inc
xchg
mov
mov
cmp
std
mov
icebp
insb
dec
aad
test
pop
in
xchg
add
bound
lods
in
xchg
xor
mov
test
int3
xchg
pop
in
mov
mov
dec
call
lock
jle
sub
sub
jp
sub
cmp
loope
stc
fdivr
mov
add
out
shl
insl
sti
mov
pop
adc
mov
inc
jne
mov
xchg
push
xorl
cltd
sbb
rorb
push
mov
imul
and
mov
sub
add
cmp
jne
pusha
pop
fisubl
test
test
or
cmp
out
bound
ljmp
push
out
fadd
pusha
sahf
push
cmp
cld
push
push
hlt
adc
xchg
xor
je
scas
jns
xchg
pop
jmp
sbb
call
pop
sub
add
subb
scas
jge
pushf
cmp
cli
and
cmp
test
daa
mov
mov
and
int
mov
jns
shll
imul
lods
push
sub
out
mov
jne
jo
nop
pop
pop
inc
hlt
aaa
rcll
movsb
in
jae
pop
cmp
or
lahf
int
fimull
fidivrl
rolb
adc
fists
or
pushf
repz
xchg
das
movsb
test
stos
push
dec
es
cmp
stos
movb
imul
push
lahf
ss
inc
mov
std
xchg
in
sub
mov
les
shrl
in
or
test
pop
inc
pop
adc
xchg
sub
mov
out
out
cmp
loopne
adc
mov
inc
and
clc
pop
cli
adc
dec
ja
inc
ret
movsb
inc
xchg
mov
movsb
sub
dec
rorl
hlt
loopne
cmc
mov
lods
dec
int3
loope
cmpsl
ret
loope
xor
lock
or
emms
fadd
test
nop
in
out
xor
cmp
xchg
sbb
rorl
adc
in
sti
and
pop
cmp
inc
pop
test
push
les
mov
inc
or
shlb
dec
fisttpl
loop
sub
stos
pop
into
cmpsb
shll
xor
test
inc
jg
adcb
sbb
mov
loop
mov
outsl
aas
jo
mov
xor
xchg
mov
mov
cmp
dec
push
loope
jmp
mov
or
jp
pop
sub
mov
in
pushf
jo,pt
mov
fwait
push
mov
cmp
adc
inc
maskmovq
notl
pop
inc
paddq
and
out
and
jno
dec
cmpsl
ss
or
cmp
mov
xchg
sbb
cmp
mov
nop
mov
andb
sbb
push
sbbl
in
mov
mov
cmp
push
rorl
jns
lcall
sahf
xchg
cs
or
or
hlt
sub
dec
jmp
xchg
push
aad
hlt
cmp
mov
xchg
adc
imull
adc
pop
mov
sub
mov
pop
push
xchg
mov
lds
jge
fstpt
loopne
pop
std
jns
mov
mov
pop
sti
inc
movsb
and
xorl
popf
pop
outsb
pop
jo
or
loop
or
xchg
sbb
loop
pop
ljmp
mov
test
pop
inc
lahf
pop
imul
in
hlt
xchg
jne
aad
aam
sbb
xor
aad
lds
mov
ljmp
test
inc
pop
jecxz
imul
popf
pushf
ss
inc
pop
cmp
mov
cmpsl
test
ss
jae
mov
les
cmp
loop
pop
inc
inc
cmp
mov
xor
lcall
mov
mov
sub
push
movsl
xchg
xchg
mov
shrl
jge
and
loop
fmuls
push
push
sub
pop
pop
movsl
and
mov
addr16
popf
mov
in
mov
mov
dec
sub
cli
into
lods
js
sbb
xlat
push
xor
lret
daa
clc
stos
mov
push
mov
aaa
in
adc
sarl
cltd
fsubl
cmp
and
loop
sub
inc
rol
test
jl
lret
cmp
jge
rclb
sub
mov
mov
push
mov
aaa
lds
jae
loope
rcl
push
xchg
push
fsubrs
shr
mov
out
dec
mov
cmp
adc
sub
lcall
push
ja
into
shl
fmuls
ret
cli
add
das
leave
xchg
in
mov
cli
test
stc
test
jb
es
bswap
fs
insl
pop
cmpsb
arpl
xchg
mov
ret
push
addr16
popf
jecxz
push
xchg
stos
fidivrs
pop
call
data16
sub
bound
lds
scas
mov
xchg
rolb
xor
push
insl
out
mov
cmpl
lret
push
std
sarb
pushf
mov
xchg
adc
std
lret
aam
mov
fildl
rcl
pop
sti
les
xlat
xchg
mov
dec
sub
insb
loopne
gs
pop
popf
arpl
lea
lods
xor
insb
push
fcmovbe
idivl
insb
bound
inc
mov
psubq
jno
mov
sahf
daa
aad
push
sbb
xchg
pop
jbe
sub
movsb
pop
inc
mov
icebp
popf
sar
inc
mov
out
mov
pop
adc
subl
mov
test
cmpsb
push
xor
test
shl
lea
imul
push
inc
mov
push
jg
pop
and
jb
mov
cwtl
test
mov
and
das
sub
mov
testl
mov
test
jp
pusha
pop
out
repz
mov
push
adc
daa
lock
pop
lods
out
fidivrs
sti
inc
push
in
int
fisttpl
mov
pop
push
lret
aad
popa
mov
add
jp
ror
mov
xchg
xchg
jns
lods
dec
js
inc
pop
imul
outsb
cmp
mov
xchg
or
jge
push
adc
xchg
sbb
out
repnz
pop
iret
sti
dec
jmp
nop
leave
dec
xor
lds
mov
or
adc
ficoms
outsl
bound
movsb
add
aad
pusha
inc
cmc
mov
pushf
test
dec
push
sub
or
in
mov
pop
xchg
inc
or
xorl
lea
lret
inc
out
add
lea
lds
iret
mov
pop
or
add
lods
arpl
mov
inc
js
dec
inc
mov
jp
dec
lods
mov
jae
xor
jl
js
enter
mov
popf
daa
cli
pop
into
mov
sub
pop
aam
iret
mov
or
popf
sahf
add
add
testb
add
imul
pop
jp
shlb
pop
mov
adc
pop
or
icebp
push
lods
cwtl
rcll
pop
clc
sub
sub
int3
pop
rcrb
dec
aam
imul
je
cmp
psubb
add
or
lock
jg
repz
mov
pop
shll
cmp
sbb
mov
lock
leave
dec
lods
jbe
lods
cmc
cmp
pop
lds
cmc
fwait
sub
dec
xchg
jmp
gs
les
insl
cmp
jmp
dec
sub
or
stos
enter
add
mov
push
sbb
cs
jmp
mov
inc
popa
das
inc
fwait
sbb
push
mov
xchg
ljmp
call
xor
adc
xchg
leave
test
addr16
rcr
addr16
dec
cmp
cmp
sbb
lret
into
push
data16
orb
icebp
xlat
pushf
dec
aam
inc
jmp
sub
xchg
aad
pop
std
push
pusha
mov
adc
xor
hlt
and
mov
inc
jns
call
lods
into
daa
cs
cmpsb
mov
jle
or
sbb
push
inc
nop
gs
lods
loopne
das
rolb
mov
popa
into
mov
sti
clc
adc
insl
lock
cmp
in
dec
push
push
dec
jg
mov
cmp
ljmp
cmp
xchg
mov
out
fdivr
pushf
sbb
mov
sahf
mov
mov
dec
lock
popa
xchg
or
mov
andb
adc
sahf
fiadds
sbbl
sub
cmp
push
enter
jg
repnz
xchg
inc
dec
adc
mov
arpl
stc
clc
aad
pop
cmc
mov
in
loope
jecxz
in
rcrl
fsub
das
cmpsb
or
inc
xor
and
icebp
mov
jge
mov
faddl
or
and
and
sbbb
adcb
push
mov
or
mov
fxch
jne
shll
inc
lds
xor
cmpsb
fdivl
jno
clc
pusha
sbbb
jge
test
fcoml
inc
cwtl
gs
lds
sbb
and
aaa
xchg
pop
push
int
mov
add
je
test
call
incl
daa
hlt
push
inc
jne
repz
or
adc
in
cmpsb
lret
cmp
clc
cli
mov
arpl
cmp
movsl
pop
xchg
jne
and
dec
mov
je
cld
pusha
lds
jg
out
mov
and
in
cmp
dec
fstpl
xor
pop
xchg
mov
les
lea
in
ret
dec
leave
jno
inc
inc
iret
add
mov
and
ret
aaa
xor
pop
mov
inc
push
adc
cmp
call
scas
mov
pushf
js
int
loopne
hlt
sbb
sub
lods
fs
cmp
shlb
addb
and
xchg
sbb
xor
xchg
and
test
sarb
adc
scas
repnz
jecxz
jae
in
std
mov
mov
ja
imul
add
das
inc
out
orb
sub
mov
mov
cmpsl
adc
push
lret
add
xlat
ret
call
or
pushf
pop
daa
mov
add
and
pushl
cli
mov
and
xor
cmc
dec
mov
mov
xor
repnz
mov
int3
out
loope
or
lods
sub
iret
nop
pop
pop
fldl
fs
popf
jne
inc
int
psrld
push
std
loope
mov
and
out
stos
pop
lock
stos
arpl
ret
mov
mov
nop
sti
test
fwait
push
xchg
xor
js
aas
jnp
fxch
dec
dec
pusha
or
fs
dec
iret
in
or
cmpsb
sbb
int3
data16
pop
xchg
cs
inc
lret
add
insl
shl
mov
sub
cmc
lea
jp
daa
push
inc
insb
jecxz
dec
daa
push
cs
jmp
mov
loopne
xor
addl
jge
rorb
adc
int3
loop
lret
inc
pop
sbb
cmp
add
das
notb
jmp
cmpsb
into
adcb
pop
push
je
xchg
in
out
inc
enter
les
or
fildl
adc
inc
fistl
jl
mov
jne
cmp
cmp
mov
pop
mov
xchg
dec
les
repz
inc
imul
dec
cld
rcrb
test
stos
cmp
jbe
das
mov
sbb
sub
fcmovnb
inc
leave
add
mov
enter
or
scas
int
mov
lock
pop
daa
push
ret
sbb
cld
mov
mov
hlt
stc
lea
lods
mov
jg
cmp
push
dec
inc
push
sbb
mov
aad
lahf
jae
xchg
pushf
into
or
loop
xor
xchg
pop
test
lahf
test
jne
dec
fsubrl
xchg
clc
adc
loope
push
sbb
lcall
xchg
jecxz
mov
jns
xorl
in
cmp
pop
lret
xchg
shlb
inc
inc
and
lods
jle
out
and
movsb
fmulp
ret
sub
je
jg
fcmove
push
mov
enter
cmc
dec
jb
std
mov
mov
iret
ljmp
xor
fwait
xchg
jbe
aas
xchg
xor
cmp
cli
inc
test
xor
ret
xor
sub
in
xor
sub
mov
out
dec
hlt
cmp
jp
ja
lret
mov
pop
and
test
lock
fldt
xor
mov
pop
fldl
bound
push
mov
pop
stos
mov
push
leave
jle
mov
cld
aad
adc
pop
xorb
movsl
dec
shr
inc
jg
aad
cmp
stos
ror
lret
test
mov
add
mov
and
or
and
fwait
imul
jno
gs
pop
add
sbb
in
pop
inc
outsb
add
xor
shrl
add
pop
adc
sub
and
and
fistl
popf
mov
xor
dec
xor
mov
xor
xor
int3
sbb
daa
inc
push
xor
cmp
decb
loopne
pushf
pusha
fnsave
dec
popa
jno
shr
or
mov
jne
outsl
out
andw
aad
adc
out
jg
push
or
dec
mov
mov
es
mov
ja
and
dec
push
insl
insb
xchg
dec
jne
mull
xor
inc
jbe
int3
xchg
jb
sub
test
pushf
sub
icebp
dec
fidivrl
cmc
popf
icebp
lahf
add
add
ret
out
mov
and
in
fcmovnbe
xor
mov
inc
push
xlat
jge
dec
cmc
shrb
fdivrl
enter
add
je
stos
arpl
mov
push
and
cmp
inc
pop
int
stos
fs
arpl
xchg
loopne
out
shrb
mov
nop
mov
shlb
dec
adcl
stc
in
jns
inc
inc
cwtl
mov
push
add
in
sub
rcll
xchg
mov
pop
mov
xor
xor
ficoml
mov
sbb
xorl
repnz
in
sbb
insb
jmp
mov
cmp
xor
imul
push
lods
sbbl
shll
xchg
add
pop
mov
nop
or
inc
pop
jno
into
fcoml
jb
aam
lcall
sbb
lret
je
mov
scas
int3
cmp
sbb
nop
lcall
std
inc
push
data16
lcall
roll
push
subb
pop
out
shlb
or
jb
cmpsb
xor
sub
mov
dec
scas
xor
sub
js
jecxz
inc
mov
out
jae
repz
sbb
sbb
and
or
xor
xor
fbld
sub
mov
xchg
inc
mov
into
jl
iret
xchg
and
outsb
mov
xor
jnp
sub
ljmp
dec
mov
xchg
aas
jno
cli
rcrl
push
mov
mov
imul
data16
push
sbb
add
add
aad
sbb
sub
pop
or
sbb
mov
and
ja
lods
and
xor
in
aam
jl
fidivl
mov
pop
stc
ljmp
sbb
and
mov
mov
sbb
sbb
mov
andl
out
outsb
repnz
iret
fiaddl
dec
pop
xchg
inc
sbb
and
leave
sub
mov
xchg
or
data16
mov
sarl
fldlg2
mov
hlt
mov
xchg
push
pop
sbb
adc
jg
cs
ds
aaa
push
stos
mov
pop
mov
inc
pop
dec
xor
jbe
clc
inc
pop
cmpsl
dec
pop
jbe
jae
mov
mov
aas
inc
push
test
icebp
push
fs
testb
out
leave
push
int
bound
ss
xchg
cwtl
stos
iret
push
mov
adc
mov
jns
in
cmp
cmp
insl
outsb
ds
scas
push
ret
cwtl
ss
test
dec
int3
lock
dec
push
adcl
dec
pop
mov
outsl
clc
insb
mov
bound
adc
xchg
mov
pop
mov
jecxz
cs
xchg
cwtl
push
pop
imul
test
pop
cltd
pop
test
and
inc
xor
cmp
stc
inc
and
sub
idivb
outsb
inc
aad
mov
mov
mov
sub
sti
push
lret
xchg
xchg
jbe
mov
loopne
decb
push
sbb
fbld
lret
cmp
mov
adc
inc
mov
orl
test
aaa
repnz
add
shll
jmp
mov
in
xor
push
jmp
in
ret
mov
mov
outsl
inc
jle
addl
loopne
cmp
out
divl
lcall
xor
fsubl
out
mov
ds
pop
inc
orl
imul
mov
mov
iret
lods
sahf
cmovs
outsl
in
or
outsl
xor
pushf
leave
jge
jp
in
fwait
jno
pop
sub
jle
les
mov
inc
inc
pop
jae
pop
daa
lea
add
jmp
mov
jmp
je
push
in
pop
icebp
sub
add
arpl
or
scas
jns
popf
pop
loope
and
popaw
pop
bound
push
andb
jl
mov
xor
pop
decl
mov
ljmp
and
cmp
test
lock
push
push
mov
in
rorl
inc
les
sbb
push
jno
add
outsb
fiadds
lods
stc
push
xchg
sbb
iret
adc
fldcw
pop
push
fst
cltd
sub
sbb
aam
dec
movsb
xor
cs
inc
pop
andb
aas
imul
add
add
mov
popa
push
in
mov
cld
fs
pop
stos
mov
mov
addr16
and
push
loope
sbb
dec
inc
inc
or
add
jp
insb
adc
data16
lcall
sub
mov
pop
test
push
insb
lea
fsubs
mov
pop
jecxz
shr
aam
and
push
inc
rcll
mov
cmc
aas
mov
test
cmp
mov
jle
mov
popa
mov
inc
adc
mov
aas
dec
mov
daa
push
xchg
test
repz
jp
aam
ljmp
adc
hlt
pop
popa
lods
inc
aaa
and
bound
mov
orb
dec
je
aas
les
push
xchg
add
xchg
out
imul
adc
cmc
test
add
out
ja
sub
ret
or
scas
cmpsl
pop
outsl
pop
hlt
test
loope
cmp
sbb
and
mov
out
push
xor
pop
out
jl
pop
sbb
stos
mov
mov
scas
push
pusha
repz
jp
lds
pop
addr16
js
mov
push
shrd
ficomps
mov
or
pop
pop
mov
add
mov
shrb
cs
shll
mulb
push
xor
or
stos
insb
push
adc
pop
and
imul
mov
inc
loope
cmp
nop
add
pop
xor
andb
jmp
ret
push
xor
data16
mov
push
out
aas
add
cmpsb
test
add
jo
push
adc
test
inc
adc
sbb
aam
cmc
mov
movsb
xor
loop
loope
jmp
leave
mov
or
into
lret
fwait
or
cmpsb
add
stc
sub
gs
jae
insb
adc
movsb
mov
jnp
mov
push
jmp
ds
stos
testl
jle
pop
dec
or
sbb
sbb
xor
repz
clc
fstl
fidivl
mov
add
pop
xor
std
aaa
scas
pop
mov
movsl
stc
push
mov
mov
xchg
or
and
and
loop
or
jbe
xor
cs
fdivrs
or
aaa
add
jae
shl
xor
push
xchg
xor
imul
loop
icebp
jl
push
mov
jge
push
stos
sbb
or
cmp
dec
rcr
cwtl
iret
mov
inc
movsb
cmpsl
incb
mov
ja
pop
dec
lods
shll
cli
xor
dec
out
cmp
in
fwait
sbb
test
in
sahf
push
dec
jnp
or
lahf
mov
mov
jmp
aaa
icebp
xor
jbe
mov
add
test
pusha
push
push
iret
mov
dec
cmc
lods
aam
and
mov
and
xor
fistpll
inc
mov
cmpb
das
xor
sbb
xlat
repz
inc
imul
shlb
pusha
cltd
ret
lods
ljmp
or
adc
or
dec
aaa
lahf
hlt
jnp
mov
dec
insb
sub
insl
clc
and
xchg
dec
jecxz
aad
push
and
push
jbe
cmc
jae
mov
das
pop
adc
inc
cmp
in
pop
and
mov
shl
jae
fdivs
lahf
jns
das
test
fcmove
ss
sbbl
rorb
xorl
movsb
cli
mov
ficomps
outsb
cmp
cmp
arpl
ficoml
pop
jne
out
cs
stos
fnstenv
inc
push
lahf
loopne
jnp
jne
and
or
xor
and
xor
fimuls
mov
sub
xor
addr16
imul
cld
xchg
add
outsb
loopne
dec
ss
add
jno
pushfw
vmread
sbb
test
outsl
mov
or
movsl
aaa
out
adc
les
jg
fdivl
in
xchg
btr
push
jae
push
inc
pop
adc
cmp
dec
inc
andl
out
outsl
inc
mov
lods
xchg
and
testl
mov
xor
jb
jle
enter
imul
push
jge
bound
jl
stos
mov
cmpsl
cld
aam
or
lods
add
add
sti
call
add
std
dec
ds
lcall
xchg
daa
mov
cmp
add
mov
mov
inc
adc
push
js
aad
xchg
fistl
jecxz
les
addl
test
movsb
fcoml
sbb
stos
mov
and
or
adc
testl
xchg
mov
cmpsl
and
and
les
fmuls
es
jne
mov
aaa
xor
cmp
pop
call
repz
nop
loop
xor
or
inc
push
dec
std
pop
test
mov
push
sub
inc
inc
movsb
mov
data16
jl
gs
push
push
or
dec
mov
call
mov
stc
daa
into
push
push
js
pop
cmpsb
pushf
or
in
std
jl
and
cmc
test
and
lcall
jno
data16
jmp
mov
dec
jnp
push
sbb
js
icebp
dec
stos
ds
or
xchg
movsl
xor
sbb
call
leave
xchg
and
sub
fdivl
adc
aad
cli
mov
movsb
mov
dec
mov
aas
xor
out
dec
xor
bound
jae
or
fwait
pop
cmp
pushf
addr16
mov
sub
mov
cld
sti
push
sub
out
mov
jo
xchg
jne
lds
mov
sbb
dec
fldl
ret
mov
xlat
enter
xlat
sti
lods
out
dec
sbb
adc
movsb
push
aas
push
jmp
jno
pop
test
movsb
or
test
icebp
inc
adc
add
test
les
sbb
adc
and
scas
negl
xchg
scas
daa
pop
hlt
mov
sub
jg
test
pusha
mov
aad
enter
sahf
punpcklwd
xchg
jge
lret
dec
mov
push
rcrb
or
push
pop
movsl
sbb
int
inc
es
loope
ror
test
je
sbb
jmp
les
scas
xchg
mov
outsl
mov
fistps
out
leave
lea
or
inc
adc
cmp
pop
adc
dec
xchg
mov
in
mov
pop
stos
leave
push
jo
and
dec
add
dec
cmp
jne
pop
push
pusha
aaa
mov
adc
cmpsb
into
push
lock
outsl
adc
jnp
jecxz
jmp
xor
jecxz
or
orl
lret
test
mov
addl
xchg
add
sub
adc
or
mov
xorl
add
mov
mov
outsl
jecxz
imul
jnp
popa
and
push
call
inc
out
popf
out
mov
aaa
clc
ret
mov
jecxz
dec
mov
xor
add
addr16
insb
bound
dec
stc
xchg
inc
sbb
sbb
dec
and
add
or
addr16
hlt
scas
mov
aas
imul
mov
pop
dec
cmp
push
mov
cmp
nop
sub
adcl
rorl
push
jge
dec
xchg
or
fsubl
mov
int
pop
adc
jae
adc
xor
add
fimull
mov
fcoml
in
aad
enter
xchg
std
dec
xor
push
popf
add
icebp
jbe
addl
jno
sub
ss
loope
ficoms
dec
pop
push
nop
xor
cmp
movsl
aas
fcmovnbe
add
jnp
incb
adc
mov
cmp
pop
ret
cld
lcall
scas
mov
push
jae
inc
cwtl
push
push
push
jne
outsb
add
inc
scas
fmul
ss
nop
xchg
popa
cltd
add
cld
fwait
mov
adc
jbe
jmp
dec
add
xchg
sbb
push
cmpsb
pushf
xchg
and
sarl
aad
testb
jl
add
dec
pop
jns
out
aas
pop
fsubl
repz
add
and
mov
jecxz
das
mov
ror
fucomip
cmp
jo
loope
mov
mov
push
and
mov
aaa
jae
lret
movsl
scas
cmc
shll
jbe
out
jg,pt
lret
mov
push
and
mov
add
movsl
sub
out
aaa
xor
dec
cld
ds
push
in
fcompl
jmp
mov
add
repnz
cwtl
xchg
fimull
xchg
mov
xchg
mov
daa
roll
or
movsl
add
mov
mov
xchg
and
mull
pop
add
mov
add
adc
int3
inc
lret
ss
inc
inc
push
push
jns
mov
pop
xor
mov
mull
pusha
lahf
adc
lods
pop
push
in
jle
lahf
and
lahf
adc
insb
inc
stos
xchg
xor
fnstsw
xor
or
stos
or
push
xchg
pop
or
sub
orb
sbbl
inc
or
inc
outsb
push
mov
stos
pop
insl
ljmp
mov
sbb
sub
gs
inc
in
mov
lcall
jne
mov
xchg
push
and
ror
int
fbstp
js
xchg
inc
test
push
imul
dec
ds
rcll
and
mov
jbe
pop
loopne
pusha
aad
xor
loopne
inc
or
or
jge
lahf
and
ffreep
ret
rcll
push
push
out
add
sub
enter
push
ss
inc
loop
mov
xor
xchg
jno
jne
dec
insb
and
aad
sti
cmpb
jbe
ret
inc
cmp
lods
lods
ds
jp
mov
add
hlt
add
xor
ret
cmpsl
ret
inc
scas
pop
cmp
sbb
jl
in
cmc
aaa
test
jne
mov
dec
inc
adc
jmp
jae
std
inc
cmp
insb
push
iret
popa
pop
mov
mov
jns
push
inc
pop
and
lods
fnstcw
outsl
cmp
mov
pop
inc
popf
addl
out
lcall
ror
sbb
data16
clc
xchg
rclb
cmc
leave
push
xor
mov
pop
cmpsl
cmp
dec
lods
jp
mov
mov
pop
mov
bnd
mov
push
and
clc
stc
loop
push
jb
ja
sbb
jnp
fcompl
jnp
movsl
pop
dec
dec
mov
push
js
out
mov
push
lret
movsl
in
movsb
ss
jnp
fistpll
jecxz
cli
jb
lret
xchg
mov
dec
lret
or
mov
push
subl
cmc
push
sbb
or
das
or
dec
subl
dec
mov
mov
push
cmp
fimull
mov
daa
iret
and
xchg
sbb
mov
sbb
adc
fldt
std
sahf
cmpsl
ljmp
insl
imul
pop
inc
push
clc
mov
lret
nop
push
push
pushf
test
adc
inc
je
rol
pop
adc
adc
xor
cs
sarb
cmpsl
mov
outsb
andl
rclb
xchg
jae
jle
pop
lret
xlat
inc
mov
push
pop
inc
lahf
jg
aas
pop
xor
stc
cmp
ljmp
mov
push
lods
clc
sbb
mov
jae
cmp
add
jmp
daa
sub
mov
mov
xchg
gs
jmp
or
inc
or
ljmp
fbld
jae
mov
sub
ds
cmpb
push
inc
and
sub
pop
sub
shlb
mov
xor
inc
imul
cwtl
mov
mov
xor
movsl
lock
or
cli
cmp
inc
push
icebp
addr16
cmpsb
lock
divb
fisttps
push
out
inc
push
mov
pop
mov
mov
shlb
jnp
push
dec
je
bswap
imul
sbb
sub
adc
scas
jno
ds
pop
pop
pop
ficoms
pop
lret
dec
out
inc
out
mov
push
popf
psrlq
icebp
notl
jnp
adc
lds
iret
jbe
add
and
ljmp
pop
cmc
dec
pop
jo
loop
xor
stc
cmp
les
insb
test
roll
jl
test
cs
mov
add
cmc
es
push
mov
jbe
mov
shlb
lcall
stos
lcall
mov
and
lock
and
xchg
mov
rcrb
test
outsb
push
fistps
das
mov
and
dec
dec
jbe
cmp
in
aad
mov
lret
repz
mov
ja
or
lahf
cmpb
push
pop
push
iret
push
cmpb
cs
inc
cmp
cli
andl
sub
inc
dec
mov
add
pop
adc
add
xorb
xchg
data16
push
pop
movsb
lret
cmc
mov
stc
mov
stos
xchg
inc
loopne
mov
push
pop
jae
inc
dec
sbb
mov
imul
int3
enter
leave
repz
imul
or
scas
hlt
cli
icebp
shll
sub
pop
aas
add
clc
aas
mov
inc
addr16
jno
adc
shl
and
shlb
mov
mov
jb
xchg
adc
fcmovnb
sub
sub
mov
outsl
mov
mov
mov
je
xchg
fmull
inc
lods
cmpsl
sarb
mov
add
push
test
movsl
addl
outsl
mov
pushf
sub
add
cmp
leave
inc
xor
imul
shlb
lds
movsb
lods
das
insb
cltd
jns
mov
pop
pop
adc
pop
cmp
shll
cmp
pushf
sub
mov
xor
andl
lea
and
xlat
aam
outsl
imul
call
and
lea
jnp
jmp
adc
adc
leave
dec
sub
pop
adc
or
in
inc
out
imull
aaa
pop
mov
notrack
mov
xor
xchg
aas
jne
inc
lods
pop
icebp
negl
ss
nop
sub
test
pop
outsb
subb
daa
fstpt
mov
and
mov
sbbb
mov
mov
sar
xor
mov
pop
inc
adc
xor
rclb
stc
in
mov
movsb
dec
mov
int3
clc
mov
push
mov
push
int
dec
fcomi
test
shlb
nop
add
das
dec
loope
int3
push
test
notl
addr16
push
sahf
sbb
sub
fiadds
icebp
and
sub
dec
lods
and
fcmove
fucomip
or
inc
fwait
xor
xor
inc
or
jae
mov
dec
call
dec
dec
fwait
mov
xchg
adc
imul
into
mov
push
pop
push
negl
jmp
cmp
pop
sub
lret
jmp
push
divl
out
push
adc
inc
punpcklbw
inc
mov
aaa
loope
repz
inc
stos
sub
pop
es
int
lods
repnz
sub
mov
leave
push
mov
call
push
inc
xlat
add
xlat
mov
loopne
test
pop
cmc
adc
test
lods
sbb
push
dec
or
push
and
sbb
mov
cmc
fcoms
mov
add
push
sub
jne
dec
jecxz
mov
xchg
lods
sarb
jmp
stos
scas
sbb
and
mov
pop
or
jns
mov
mov
pop
add
call
icebp
cmp
cmp
int3
inc
fsubl
sub
out
xorb
mov
cmp
jo
dec
call
fidivs
inc
enter
fwait
stos
mov
jecxz
or
pop
mov
dec
mov
dec
cmp
cmp
cld
xchg
xchg
sub
or
insb
stos
icebp
lods
popa
cs
mov
cmp
mov
idivb
notb
loopne
adc
xchg
mov
addr16
dec
mov
repz
inc
icebp
movsl
xor
shr
xchg
xchg
arpl
jnp
add
sbb
push
imul
mov
push
daa
xor
xchg
xchg
jmp
nop
jge
incl
lods
hlt
xorl
mov
pushf
out
leave
mov
data16
push
inc
lock
fcmovnu
mov
xor
sub
xor
push
jge
aam
test
rorb
xor
add
les
arpl
loop
inc
dec
sti
aad
mov
fiaddl
push
dec
mov
lock
dec
std
mov
push
es
inc
jne
cli
movb
mov
lock
in
cmpsb
fdiv
mov
pusha
or
xlat
xlat
push
ja
xor
xchg
popf
mov
mov
jge
mov
jmp
xchg
in
jle
mov
inc
es
dec
sahf
and
add
std
shr
call
loop
lahf
sahf
xor
xor
cmp
scas
stos
mov
inc
dec
movsl
sub
fcoms
mov
daa
cli
and
jno
imul
or
scas
in
pop
lret
dec
nop
shll
jo
mov
cwtl
add
xor
mulb
mov
add
popa
push
push
daa
outsb
sahf
ss
cs
sbb
push
rcrl
jo
in
cmpsb
outsl
enter
das
sbbl
ret
jo
stos
test
test
pop
pushl
mov
aas
push
scas
addr16
jb
aad
or
sub
mov
jmp
dec
and
jecxz
or
jge
repz
and
inc
in
addr16
imul
leave
cld
aas
imulb
addps
jno
fmull
mov
xchg
das
xor
add
js
push
lock
and
xor
jmp
push
or
mov
fiadds
cmp
and
out
mov
stos
xchg
jl
dec
xchg
mov
adc
jmp
cmpsb
push
out
std
aam
mov
xchg
insb
mulb
fsubl
jne
adc
mov
pop
gs
dec
out
int
imul
fwait
mov
out
jns
out
es
push
mov
cmp
push
xor
xchg
and
outsb
sbb
mov
adc
xchg
dec
loop
pop
in
mov
push
sbb
mov
push
or
aad
mov
mov
fidivs
push
lret
pop
mov
dec
dec
pop
push
inc
les
or
dec
or
xor
add
test
mov
pop
neg
lods
mov
ss
mov
mov
or
mov
stc
or
outsw
or
fidivs
mov
xchg
rorl
mov
fwait
dec
jno
insl
bound
bnd
popa
push
add
outsb
mov
lods
and
mov
inc
call
fimuls
adcl
pop
std
xchg
pop
xor
lret
dec
sbb
imul
sbb
rclb
push
js
inc
add
mov
sbbl
adc
mov
push
popa
add
mov
fs
icebp
dec
iret
jge
shll
adc
or
sbb
lahf
stc
repnz
imul
mov
scas
sbb
ja
push
cmp
int
out
push
out
jbe
sbb
jne
inc
jne
rcrl
sti
adc
and
mov
js
xor
dec
jp
lea
rol
push
jle
sbb
jns
test
mov
es
jecxz
and
lea
cltd
sbb
into
cmp
cmp
lds
dec
stos
add
mov
fstl
push
addl
dec
popf
inc
sbb
lds
pop
pop
test
test
sub
fsubl
loop
repz
enter
pop
inc
cmpsb
ss
xchg
push
jnp
orl
iret
pusha
xchg
rorb
iret
sbb
sarb
push
cltd
sti
call
xchg
xor
push
ja
cmp
stos
add
idivb
mov
push
push
or
enter
xor
out
dec
sti
daa
pop
xchg
inc
repnz
jmp
pushf
jno
out
pushf
pop
rcrb
push
xor
add
imul
imul
mov
rcll
push
adc
gs
ret
outsb
ret
and
jnp
js
or
fsubrs
iret
in
lahf
imull
jb
fwait
mov
add
xchg
mov
stc
xor
lahf
xchg
stos
push
popa
add
and
mov
movsl
jbe
adc
push
add
sbbl
fucomi
and
and
fld1
ljmp
ret
out
pop
dec
jb
unpcklps
je
nop
insb
rcll
pushf
add
xchg
add
out
out
push
lds
test
add
pop
add
inc
icebp
push
push
loopne
xchg
xor
hlt
lea
and
int
mov
sbb
inc
mov
add
das
daa
movsb
gs
pop
in
xor
xor
adc
fisttpll
or
inc
pop
mov
mov
xchg
cmp
imul
or
and
aaa
bound
cmpl
or
imul
or
adc
ror
std
out
sub
aaa
or
test
call
add
jbe
jb
das
sahf
lock
pop
cmp
sbb
cmp
fwait
sahf
mov
xor
push
push
shr
inc
pop
add
int
cmp
cltd
mov
mov
jne
mov
insb
inc
xchg
les
dec
mov
pushf
out
adc
sub
lea
mov
lea
js
inc
ret
shrb
mov
jbe
push
stc
out
sbb
nop
fs
subl
pop
push
xchg
mov
mov
rclb
sub
sbb
lcall
aas
push
mov
xor
ss
xchg
lock
aam
push
in
sbbb
lods
adc
jmp
push
or
ljmp
mov
mov
cmp
add
aad
mov
scas
sub
push
shrl
iret
cmp
cmp
mov
and
add
xchg
inc
cmp
mov
cmp
rcrb
pop
push
dec
shlb
xchg
or
rcll
mov
jno
scas
rorl
inc
mov
add
mov
ret
fcoml
lret
out
ss
mov
das
xchg
je
add
enter
rorl
lods
adc
jmp
pop
inc
sbb
fimull
test
insl
mov
inc
mov
jle
fmul
mov
ja
repnz
jg
ffree
gs
test
clc
lods
inc
cli
mov
and
sarb
mov
xchg
in
aas
test
lods
dec
adc
adc
or
lods
in
xor
adc
popa
adc
movd
repz
or
test
mov
mov
ljmp
in
outsb
clc
jle
push
movsl
xchg
out
notl
and
push
dec
xchg
bound
cmp
mov
push
out
rol
insb
movsb
dec
adc
mov
nop
sbb
inc
mov
xchg
mov
ficomps
mov
sub
xchg
mov
insb
xchg
push
xchg
lods
sub
inc
out
xchg
jl
pop
mulb
sarb
cmp
sti
jns
and
pop
inc
pop
mov
sub
push
lods
ficoml
pop
xor
nop
bound
jo
jmp
into
loop
inc
in
xor
mov
sti
aad
sbb
cwtl
lods
outsb
xor
inc
addr16
dec
fmuls
sti
and
pusha
idivb
ljmp
fwait
push
dec
pop
mov
jge
inc
insl
add
out
mov
scas
shl
cmpsl
call
movsl
jp
inc
lock
sahf
mov
xchg
add
ss
insb
mov
sub
mov
adc
xchg
mov
xor
jge
adc
pop
mov
addr16
inc
push
scas
pop
cmc
cs
xchg
sub
test
test
stos
loopne
lock
xchg
inc
dec
or
adc
sub
notl
andb
cmp
push
adc
and
outsb
in
stos
jae
xchg
ror
in
pop
mov
idiv
sub
divl
or
add
sarl
shrb
testb
fmuls
mov
pop
ret
cli
jecxz
mov
xor
std
or
addr16
sub
sub
mov
jns
mov
adc
sbb
and
imul
dec
jmp
bound
or
mov
fbld
xor
inc
mov
cmp
sahf
xchg
jecxz
pop
daa
pop
je
rcll
pushf
xor
addr16
notl
mov
arpl
cmc
push
aad
xchg
ret
mov
rcrl
test
pushl
out
test
add
das
popa
jecxz
inc
hlt
lahf
sbb
sbb
xorb
xchg
adcb
add
ljmp
fisubrl
lret
mov
mov
jle
cmpsl
fs
nop
inc
dec
push
mov
xchg
sub
or
aam
fcoml
sarb
sbb
and
cmpsl
add
add
push
ds
daa
shr
ss
or
inc
adc
bound
out
mov
mov
jp
jp
out
mov
or
mov
mov
insb
neg
jp
arpl
shrl
pop
pop
fsubrl
mov
cmp
or
loope
mov
hlt
push
mov
dec
test
add
xchg
and
imul
cmp
movsl
mov
fsubp
pop
cltd
jge
jno
fdivl
mov
jae
jle
stos
std
insl
sti
adc
mov
xor
adc
cmc
fcoms
mov
popa
dec
push
fisttpll
mov
scas
stos
leave
push
aad
push
aaa
push
xlat
cmp
jae
mov
inc
icebp
popf
lock
int3
xchg
xlat
sbbb
jge
pop
mov
cld
bound
in
and
inc
cld
and
cltd
sub
adc
lds
iret
pop
aad
pop
into
stc
insb
cmp
cmp
rolb
mov
xchg
shlb
push
in
les
int
jbe
cmp
fisubrs
insl
pop
or
pop
xchg
pushf
jbe
adc
and
xor
cld
scas
inc
lock
pop
roll
mov
hlt
sub
adc
cmpsl
xchg
mov
cld
add
xor
jno
xchg
lock
ret
xchg
mov
xchg
ja
add
add
add
lds
adc
into
aad
fisttps
cmpb
mov
mov
cwtl
setl
push
mov
sbb
mov
scas
inc
inc
push
sbb
jmp
rcll
sub
and
and
cmp
push
ret
push
jae
fcmovnb
js
test
scas
fildll
xchg
sub
subl
jp
pop
std
xchg
cmp
call
mov
inc
jmp
or
adc
dec
out
xchg
mov
sub
imul
repnz
dec
nop
dec
push
sbb
jle
aad
mull
sub
cmpsl
mov
xchg
jg
ss
enter
aaa
pop
out
cmp
lods
jg
jne
insb
dec
fwait
mov
adc
mov
leave
jl
das
sahf
mov
pop
jle
pop
imul
dec
aas
sub
jne
js
mov
or
xchg
out
inc
xchg
xor
decl
sbb
push
sub
out
push
mov
dec
mov
xor
or
xchg
enter
push
lahf
push
es
jmp
daa
adcl
add
jnp
scas
push
and
sbb
ss
out
ret
inc
sbb
sub
cmpsl
test
sub
inc
push
push
sbb
gs
out
sbb
fnstsw
ret
mov
in
out
mov
outsb
sar
je
in
ja
push
xchg
fwait
aaa
test
rorl
stc
aas
stos
or
dec
lds
pop
subl
es
clc
stc
mov
cmpsb
fsub
or
dec
jno
pop
push
les
nop
repz
cmp
leave
pop
cmpsb
aas
fwait
test
in
sub
adc
xlat
push
push
shl
cs
dec
movsb
popa
pop
adc
inc
stos
loopne
loop
or
inc
out
mov
jno
ret
out
out
mov
push
push
xor
test
pop
sbb
imul
out
fisubl
adc
mov
sbbb
clc
push
or
and
push
xchg
pushf
lret
lea
xorl
shl
lret
push
xchg
mov
movsl
and
or
push
rclb
std
rorl
push
xor
cmpsb
pop
mov
push
adc
jae
jns
inc
fmull
cmp
adc
push
cmpsb
arpl
call
xor
sub
mov
cmpsl
jb
pop
rcl
sub
cltd
loopne
scas
je
outsb
sbb
incb
pushf
xor
fs
sub
in
push
fstl
sahf
fnstsw
sub
pop
xor
or
push
insb
out
dec
int3
dec
push
in
pop
int
cmpsb
adc
inc
dec
xchg
adc
leave
push
mov
ljmp
in
mov
pop
cmpsb
xor
add
movsl
cmp
mov
and
shlb
bound
xorb
movsl
dec
add
cwtl
push
push
inc
dec
ror
icebp
pop
out
imul
arpl
pop
jb
sub
leave
movzwl
cmp
fmul
sbb
mov
ljmp
cltd
jmp
loope
pop
push
mov
jne
dec
shlb
daa
mov
mov
push
fidivl
pushf
stc
shl
data16
nop
add
xor
lea
pop
xor
xchg
popa
lcall
jle
mov
dec
jge
jecxz
call
mov
dec
jp
cmpsl
fidivs
in
rcr
pushw
in
iret
ret
and
inc
aas
cli
and
pop
enter
fsubrs
cmp
lea
push
mov
xor
push
shrb
and
cwtl
push
mov
adc
fcmovb
rorl
or
dec
mov
jo
cmpb
dec
push
and
and
sete
dec
jecxz
lret
ja
push
dec
and
inc
jne
or
ffreep
xchg
or
mov
mov
adc
pop
mov
cmp
xchg
jle
sub
clc
movsb
mov
lods
sahf
out
fidivrl
cwtl
mov
pushf
decl
xorb
or
sub
inc
pop
cmp
cmc
cld
ret
inc
std
mov
fistpll
mov
mov
call
das
das
push
cld
popa
std
addb
inc
xlat
xor
inc
mov
rolb
jnp
sub
leave
sub
fadd
in
imul
push
in
xchg
add
faddl
xchg
mov
push
or
insb
and
movsl
or
mov
mov
mov
out
lods
pop
fidivrl
outsb
mov
lret
jno
loope
mov
arpl
adc
push
sub
repz
cmp
mov
sahf
inc
xchg
inc
aaa
pop
fdivl
repz
mov
pop
ret
sbb
jg
inc
cmp
leave
je
and
sbb
push
cmp
mov
sub
movsl
inc
pop
bound
insb
sbb
test
adc
in
inc
popa
sbb
lds
data16
cltd
fstpt
sub
cmp
andb
or
mov
outsl
push
pop
cmp
or
dec
mov
pop
icebp
loop
or
jbe
sub
sub
jb
add
dec
mov
fwait
es
fstpl
es
das
ljmp
pushf
inc
sbbb
xor
pop
cmp
test
mov
mov
adc
jo
jno
hlt
push
xchg
lret
push
xor
ds
les
xor
cmp
gs
fnsave
test
insl
cmp
ds
out
out
push
pop
sub
aaa
pop
std
in
push
int
bound
shrl
mov
inc
loopne
dec
fildl
or
ljmp
cli
mov
mov
mov
rorl
pop
or
mov
jge
fdivrs
test
aaa
mov
jo
jb
sbbl
xchg
int3
call
hlt
clts
scas
pop
mov
xor
outsb
xor
adc
fnstcw
adcb
outsb
xchg
scas
xchg
sub
mov
or
call
adc
scas
clc
out
mov
push
mov
adc
pop
shl
dec
push
inc
mov
int
pop
xchg
rcl
sub
leave
mov
mov
stc
cmp
leave
jns
and
jne
pop
mov
mov
aad
je
icebp
fdivrl
outsl
out
jbe
data16
scas
xchg
lock
andb
enter
adc
addb
or
mov
jns
mov
lahf
out
mov
into
push
xor
rorl
pushf
out
sti
lods
out
jae
ficoms
std
cs
xchg
cwtl
stos
imul
mov
pushf
mov
ja
lret
adc
sub
jnp
repnz
cmc
push
aaa
ja
gs
ljmp
xor
or
mov
andb
out
sbb
xchg
decb
mov
scas
fsubrl
inc
cmp
add
fwait
jne
xchg
sbb
fmulp
jne
insb
lods
sub
xchg
xor
xchg
add
movsb
outsb
push
leave
mov
xchg
mov
inc
std
scas
rorb
dec
repnz
fists
cli
pop
push
mov
inc
inc
mov
mov
fstl
cmp
lret
notb
fnstsw
sbb
push
inc
xchg
pop
inc
fwait
test
std
inc
jae
sete
mov
pop
mov
test
test
push
dec
sarl
repz
call
mov
sub
repz
mov
inc
daa
mov
or
add
icebp
mov
cltd
scas
xchg
push
adc
roll
add
mov
jo
addr16
imul
or
in
push
stos
pop
xchg
fistpl
jo
faddl
jg
ljmp
dec
pop
xor
arpl
mov
sbb
pop
arpl
mov
jl
mov
and
inc
nop
xchg
aam
and
mov
into
ret
fdivrl
adc
and
cwtl
and
cmp
lods
jmp
rorb
sahf
int3
bound
fimull
das
int
ljmp
out
shrb
lret
lds
pop
mov
adc
dec
mov
iret
jno
or
add
scas
clc
inc
inc
add
insl
pop
cwtl
ds
ja
test
mov
in
mov
mov
nop
mov
sbb
daa
int
jo
sar
sub
int3
popf
sbb
inc
sbb
stos
jbe
cmp
fidivs
sarl
dec
mov
leave
fldenv
add
icebp
xor
leave
mov
push
lds
mov
pop
push
xor
add
jl
and
in
lret
ds
daa
lock
push
popa
cli
push
or
dec
dec
xchg
xchg
push
pop
into
push
insl
inc
pop
mov
fldt
cli
in
movsb
jae
scas
cmpsl
pusha
rclb
xor
mov
in
movsb
mov
shlb
nop
sbbl
aaa
xor
push
fisubl
in
std
shlb
inc
pop
adc
loope
icebp
andb
cmp
cmp
jl
rcr
push
mov
inc
mov
mov
insb
adc
jb
test
imul
xchg
dec
jge
adc
imul
fs
inc
pop
iret
dec
ja
xchg
cs
inc
push
mov
repz
jnp
lret
mov
xor
sub
push
xchg
cmp
xor
jmp
icebp
negb
dec
inc
std
dec
push
jl
fbstp
pop
subl
dec
std
out
or
subl
fwait
cmp
ja
sbb
sub
loope
repnz
cmp
mov
add
call
lahf
cmpb
imul
pop
ljmp
jbe
in
push
mov
cmp
mov
mov
push
cmp
or
sub
add
shl
int3
aas
push
imul
dec
dec
sbb
cmpsl
pop
icebp
or
adc
insl
cmpsb
pushf
jns
out
push
adc
mov
dec
jbe
push
into
or
inc
stc
sub
cmp
xor
sub
clc
or
cmp
or
xchg
test
xchg
iret
sbb
repz
add
and
xchg
stos
pop
dec
icebp
pusha
hlt
dec
or
mov
gs
ds
sbb
fbstp
push
or
inc
lea
xor
out
fistl
dec
fwait
xchg
dec
ds
sbb
push
or
xor
cmp
popf
sbb
fstpl
ficompl
xchg
jmp
sahf
insb
adc
insb
xchg
mov
push
cmc
roll
std
outsl
rol
jae
ja
jbe
popf
push
or
fiaddl
sub
xchg
pusha
jae
mov
mov
and
rcrl
inc
cmp
rep
sbb
push
loopne
inc
cmc
mov
into
cmp
and
pop
leave
ja
mov
sbb
shlb
test
and
mov
fwait
rclb
aaa
pop
les
or
and
mov
sub
pop
sti
addr16
pop
push
dec
dec
inc
cmpsb
lret
inc
mov
in
pop
fistps
in
repz
sti
ret
mov
jl
or
fmul
or
pop
fs
leave
negb
or
out
xor
movsb
popa
es
popa
and
loope
shlb
jne
push
outsl
ret
hlt
cmpsb
pop
xchg
push
pop
dec
mov
mov
xor
xchg
pop
mov
movsl
scas
aaa
sbb
movsb
jns
inc
incl
dec
jecxz
inc
xor
lea
mov
lret
mov
mov
push
aam
fnstenv
xchg
add
push
sub
arpl
pop
ret
add
hlt
push
adc
pop
lcall
inc
add
dec
aam
mov
out
popa
icebp
pop
fisttps
js
sub
adc
mov
fucomi
es
daa
mov
out
lret
mov
dec
and
imul
enter
add
test
stos
jle
mov
dec
pop
push
inc
notb
stc
inc
pop
fcompl
dec
imul
mov
ja
push
cli
lcall
cmp
addr16
je
sar
inc
pushf
movsb
cmp
mov
adc
arpl
inc
lock
mov
push
pop
pop
inc
push
cli
pushf
popf
xchg
rorb
mov
or
xchg
stos
sbb
jg
add
test
cs
enter
adc
xorl
in
cld
mov
std
jmp
sub
in
in
lret
lcall
pop
add
int3
js
or
sub
dec
movsl
stc
mov
enter
mov
lock
or
cmc
fisttps
cli
push
sub
mov
jno
mov
arpl
call
jl
imul
add
jne
pop
fdivl
loope
int3
mov
mov
test
mov
add
dec
jg
xchg
dec
push
je
mov
cld
or
lret
aam
ds
or
mov
rcl
fldenv
push
jne
mov
adc
add
je
lds
jecxz
lcall
sbb
mov
mov
int
shlb
jbe
mov
pushl
xorb
adc
leave
sbb
imul
daa
pushf
push
lahf
cmp
pop
inc
clc
fstps
outsl
mov
mov
adc
add
sti
inc
xor
inc
cld
fcmovnu
test
test
mov
mov
mov
pushf
inc
ss
xor
sub
cmp
xchg
int3
call
out
je
loope
jno
inc
out
inc
xchg
or
mov
ljmp
pop
arpl
js
fimull
sbb
ds
and
xor
ljmp
sub
cmpsb
xchg
jno
mov
mov
fidivl
das
repnz
fildl
and
and
out
fmull
sbb
lret
or
cmp
and
dec
mov
mov
js
mov
not
leave
mov
mov
pop
inc
push
sub
iret
mov
or
inc
xor
mov
sbb
jge
xchg
cmp
push
std
add
sub
leave
mov
lods
ja
in
sbb
sbb
pop
ja
jecxz
cld
jb
pop
mov
dec
pop
or
inc
xor
je
dec
cmp
or
out
imul
data16
push
jmp
and
pop
mov
mov
mov
mov
ds
adc
mov
add
xchg
xor
lods
and
cmpsb
out
or
ss
cmp
ret
shll
mov
and
cmp
jg
loop
mov
in
sub
movsl
mov
jg
out
sbbl
push
xor
jb
jmp
orl
outsl
ror
sub
movb
sti
cmp
lods
jl
popa
decb
push
outsl
lahf
fdiv
jbe
xchg
and
clc
jg
cli
addl
mov
ret
xchg
mov
inc
icebp
pop
xor
mov
mov
popf
pusha
icebp
cmp
hlt
or
cmp
or
sub
and
fistpll
mov
lcall
outsl
in
jae
sbb
movl
xor
pop
aam
mov
jecxz
cmp
lret
dec
rolb
pop
dec
arpl
dec
outsl
mov
inc
adc
lret
jns
cmp
adc
test
rcrb
movsb
test
repnz
aad
enter
pop
sbb
dec
stos
popa
jmp
lods
mov
ret
cld
jno
mov
jg
inc
call
pop
mov
es
enter
sbb
mov
ret
dec
xchg
xor
pop
call
push
add
fwait
pusha
in
out
and
aad
aam
mov
push
in
cmp
mov
xor
or
mov
mov
push
imull
xchg
stc
pop
xchg
pop
mov
or
push
mov
inc
sub
out
test
enter
shll
mov
xor
cmpsl
cmp
imul
cltd
daa
in
add
sub
fmuls
and
inc
push
loopne
mov
mov
not
out
adc
jb
jge
pusha
and
mov
dec
and
xchg
call
mov
shl
outsb
inc
adc
scas
sub
test
push
jg
lods
insb
popf
xlat
lret
xchg
sub
and
xchg
mov
adc
push
roll
add
dec
jae
fucomip
or
or
push
mov
stos
ja
cmpsb
out
add
in
cmp
mov
lcall
cltd
ret
xor
mov
lcall
push
cld
cwtl
lret
movb
mov
test
mull
xor
aad
pusha
loop
add
insl
and
es
pop
insl
mov
clc
mov
lods
cld
aam
push
cmp
adc
ret
mov
inc
sbb
not
mov
icebp
xchg
imul
cmp
testl
in
js
jb
adc
fisubl
add
in
jae
jbe
inc
adc
push
mov
addl
push
gs
fists
cmp
push
stc
shll
jp
data16
and
cltd
inc
lods
sarb
loopne
mov
int
daa
les
mov
mov
mov
mov
push
lea
out
outsl
popa
sub
sti
je
add
out
pop
mov
xchg
sub
sub
inc
aaa
push
enter
jmp
mov
cmpsl
ds
push
fldt
mov
or
fldl
mov
jl
fnstcw
pop
adc
fsqrt
sub
lahf
and
mov
ss
imul
ljmp
inc
test
lods
data16
dec
lods
movsl
in
mov
or
cmp
xchg
rolb
das
mul
jle
inc
xchg
and
mov
dec
out
ret
mov
add
push
adc
mov
xor
jl
fsubp
cmp
jmp
int
test
aam
les
aad
mov
pop
rorb
xor
mull
es
ljmp
jae
xor
push
add
and
aam
mov
add
xor
push
or
cmp
iret
xor
and
add
in
pop
dec
cmpb
es
daa
aam
jae
shll
sbb
stos
popa
ja
rcrb
cmp
in
rcrb
mov
dec
dec
cmc
add
or
lods
push
add
xor
push
outsl
sub
sbb
inc
stos
xchg
dec
jp
or
push
xchg
repnz
repz
mov
shlb
mov
jp
xor
and
xor
ds
ror
aad
pop
clc
pop
sub
cltd
jbe
cmpsb
fildl
je
hlt
mov
dec
cli
xchg
push
mov
add
inc
data16
dec
cmpsl
cmp
jb
rclb
mov
pop
bound
xchg
shll
stos
push
cld
mov
jl
xor
push
ja
out
fwait
pop
icebp
std
fsubrs
popa
icebp
jae
std
jg
dec
or
add
mov
sub
insl
or
mov
jo
insb
sub
sub
in
xchg
xor
xchg
ret
popf
aam
std
repz
lret
addb
xchg
mov
aas
ret
sbb
pop
and
add
dec
out
test
jle
xchg
jo
jg
enter
mov
and
imul
cwtl
sarl
jg
jge
aam
cs
xor
cmpsb
addb
cwtl
push
shlb
adc
es
inc
mov
mov
jg
fsub
add
jecxz
push
ret
or
sahf
or
addr16
inc
lret
xor
or
or
xor
movsb
sub
lods
stos
cmp
push
cmpb
push
cld
rcrb
movsb
inc
pop
addl
aas
andl
mov
in
scas
pop
or
fcmovnb
scas
fsubl
mov
pop
sbb
into
sub
sahf
push
sub
mov
scas
arpl
shll
je
imul
in
cmp
adc
dec
pop
cltd
je
fcomps
std
mov
lcall
jb
sub
pop
addr16
and
dec
pop
dec
ds
jne
int
sbb
jns
sub
movsl
lea
inc
in
cmp
or
jae
push
pushf
sub
mov
pusha
xchg
fistpl
sbb
lods
cltd
push
addr16
nopl
movsl
mov
subb
sahf
pop
pop
sahf
data16
rclb
inc
or
inc
sub
inc
push
mov
xor
loop
jne
std
and
add
sbb
mov
fldenv
shll
xor
lcall
aam
sbb
sub
je
pop
mov
push
inc
popa
rcll
cltd
mov
into
xor
mov
ljmp
lea
and
mov
jns
pop
je
add
or
int3
movsb
or
in
inc
pusha
or
sub
imul
ret
cs
sbb
mov
test
cmp
scas
xor
jmp
push
pop
leave
fsubrl
cld
jns
push
and
inc
outsb
out
dec
lock
xlat
sbb
or
daa
lahf
cmp
repnz
ja
data16
dec
int
mov
mov
out
leave
insl
lcall
xor
cli
icebp
and
mov
insl
jp
loopne
mov
sbb
shrb
push
push
addb
push
out
sbb
call
sub
das
sti
dec
dec
insb
int3
xchg
ret
push
inc
cmp
inc
arpl
fcoml
lods
adc
mov
ss
shlb
jo
clc
cmc
adcb
shll
sbb
aad
cmp
jns
daa
dec
pop
or
ficoml
jge
movsb
mov
push
out
imul
enter
sub
and
push
cwtl
adc
or
inc
inc
lock
push
icebp
pop
pavgb
repnz
cwtl
inc
repnz
pop
xchg
fneni(8087
int
sarl
in
adc
jmp
ss
cmpsw
mov
gs
mov
mov
loop
outsl
repnz
cmpb
xor
lea
pop
sbb
pop
insl
push
aam
jne
xor
inc
ficompl
jne
push
aaa
xchg
jns
ret
fwait
sbb
andb
lret
jecxz
cmp
btc
jge
cmpsb
rorl
jp
jno
dec
pop
popa
dec
andl
push
mov
loop
inc
xchg
repz
cmp
in
pusha
sub
aad
jl
daa
or
mov
sbb
inc
rorb
sub
xchg
or
pop
leave
jle
shrl
dec
mov
cmp
dec
jo
xchg
push
fs
leave
jg
enter
stos
push
in
mov
dec
mov
jno
fsubl
popf
cmc
andb
les
push
ljmp
push
push
shrl
iret
mov
pusha
sbb
das
dec
fstl
jg
andb
sub
fcmovbe
add
sub
pop
and
es
mov
pop
dec
xchg
sti
dec
js
pop
in
shll
sub
and
in
xchg
push
and
or
mov
inc
add
and
lahf
xchg
jns
inc
xchg
inc
mov
in
loope
rcll
mov
jne
xchg
cmc
jno
movsb
inc
mov
or
xchg
xchg
call
out
fisttpl
orb
pop
ror
push
outsl
mov
xchg
mov
or
js
add
sbb
jnp
jmp
mov
notb
pop
js
and
outsb
fs
fldenv
fst
negl
push
iret
or
push
jo
dec
or
fadds
insb
sub
mov
inc
push
ja
cmp
xchg
mov
jne
test
push
loop
sbb
inc
xchg
fwait
and
in
dec
jne
add
rcr
negb
pop
sbb
and
sbb
gs
mov
jp
stos
push
shl
les
movsl
loopne
mov
movsl
jb
push
arpl
push
lods
sub
insb
ret
cltd
mov
push
xchg
sub
mov
aam
test
ret
or
idivl
push
jge
jecxz
lret
test
pop
mov
movsb
ss
inc
mov
push
jbe
loop
mov
lcall
and
cmp
int3
jne
lds
xchg
cmp
push
out
test
fcmovnbe
lods
loop
inc
mov
add
aaa
or
idivb
add
mov
test
pusha
outsb
je
mov
into
call
ror
adc
insb
push
push
or
les
iret
cli
mov
dec
or
pop
dec
xchg
inc
adc
arpl
daa
loope
pop
lock
sub
in
call
ljmp
adc
ljmp
or
insb
jnp
pop
jnp
das
xlat
lea
imul
push
push
lods
popa
fwait
cld
enter
call
aad
out
sbb
push
pop
xchg
xlat
ficoms
jo
jnp
cmp
or
test
inc
fdivrl
into
sahf
xchg
push
loopne
data16
cmp
or
mov
dec
in
mov
pop
into
pop
mov
iret
pop
sub
or
cmc
sti
and
dec
in
add
push
push
or
inc
mov
out
adc
sub
stos
mov
andl
push
stc
cmpl
imul
sub
fwait
dec
out
out
stos
xchg
inc
xchg
mov
cltd
add
or
push
mov
fsub
imul
sub
push
roll
xor
push
jae
movsb
xchg
mov
pop
dec
and
push
push
sbb
stos
popa
cmpsb
in
mov
jle
inc
pop
xchg
push
aas
pop
frstor
shrl
fisubl
push
cmp
fs
ds
xchg
int3
dec
jo
push
mov
loope
mov
lret
hlt
mov
sub
mov
add
push
push
sbb
sub
out
or
mov
mov
push
add
mov
dec
sbb
loop,pn
test
rcrl
lds
sbb
in
xor
pop
repz
out
cmp
inc
je
mov
adc
insb
lahf
fdivrs
dec
outsb
stc
pushw
cmp
daa
stos
mov
ucomiss
or
mov
fists
int
jg
cmpsb
and
int3
inc
and
repz
mov
out
std
ret
popf
mov
mov
sbb
inc
sti
mov
inc
sbb
sarl
in
inc
dec
pop
adc
push
jl
dec
hlt
leave
push
add
xchg
arpl
dec
shll
orl
sbb
bound
mov
lcall
push
je
in
ja
in
out
daa
cltd
mov
arpl
cwtl
insb
jp
outsb
frstor
dec
xlat
mov
imul
mov
test
jl
dec
jecxz
adc
pusha
mov
dec
outsb
cmp
jns
icebp
jl
lock
jmp
mov
dec
pushf
push
jbe
mov
adc
fldl
sbb
cmp
xlat
movb
inc
loopne
scas
in
leave
add
mov
int3
mov
lret
xchg
mov
fidivrs
xor
sbb
sbb
push
sarl
adc
xchg
mov
or
loope
lock
mov
imul
subl
push
jecxz
out
iret
ds
fcomi
data16
in
push
add
rcr
sbb
xor
vshufps
ret
and
and
mov
pop
and
or
clc
dec
sbb
xor
lods
sbb
movsl
and
mov
cmp
jns
mov
test
adc
push
adc
in
adc
test
test
iret
ja
adc
in
sub
push
ljmp
cmp
loopne
ss
dec
push
mov
and
arpl
pop
pop
add
mov
lods
enter
sub
stc
out
insl
sbb
imul
mov
inc
sub
adcb
add
push
dec
jns
outsb
jo
sub
cmpsb
or
or
fidivrl
dec
imul
iret
pop
arpl
pop
mov
and
xchg
aam
arpl
pop
sbb
scas
mov
and
cmpsb
stos
cmpsl
cmp
ret
sahf
pop
push
cld
cmp
inc
dec
outsl
push
pop
mov
out
add
xor
icebp
cmp
dec
fwait
jbe
rorl
adc
jbe
movsl
in
sub
rolb
rcll
bnd
or
mov
mov
cmp
mov
mov
mov
xchg
mov
push
jbe
and
enter
mov
xor
mov
mov
fstl
sub
xchg
mov
adc
addr16
in
leave
jno
jl
push
cmp
repnz
cmp
jb
xor
push
xor
or
hlt
cwtl
lock
cwtl
popf
lock
add
popf
inc
rorb
xchg
xor
outsb
pop
cmp
mov
cmc
sbb
cmc
idivb
fistpll
pop
jp
loopne
xchg
jecxz
sbb
add
cli
out
jne
xorb
sub
jno
in
imul
sahf
pop
lds
hlt
orl
stos
pop
pushf
jnp
cmp
mov
xchg
negb
xchg
inc
movsl
fwait
or
test
es
lods
ljmp
push
or
or
out
repnz
sub
leave
jp
pop
jno
je
lods
jne
into
inc
movsb
push
out
cs
xchg
sbb
loope
fs
out
loope
adc
mov
adc
mov
movsl
jns
jmp
add
or
lcall
cltd
sub
xchg
data16
inc
jge
int
jno
nop
inc
enter
jle
pop
mov
movsl
dec
jb
cld
sbb
xor
push
and
jle
mov
idivl
lods
add
inc
xlat
lock
lds
xchg
xor
scas
pop
mov
test
xor
mov
or
jg
clc
sub
push
sub
jbe
mov
mov
sbb
cmpsb
xor
jg
jge
jnp
xchg
dec
fisttpl
int
add
add
ljmp
leave
ja
push
push
cld
lcall
movsl
dec
pushf
insb
xchg
ficomps
outsb
inc
add
mov
mov
orl
imul
push
das
pop
or
and
cmpsb
mov
mov
iret
push
or
in
imul
pop
adc
stos
jmp
cmp
js
dec
cmp
les
test
xchg
xor
sbb
sti
loope
jns
icebp
add
fstpl
cmpsl
shlb
push
inc
jne
mov
fdivs
cmp
daa
mov
mov
out
inc
adc
call
shr
rorb
xor
test
xorl
mov
imul
cs
daa
sbb
pushf
icebp
setp
rorl
sbb
std
sub
popf
jns
xor
dec
mov
mov
push
adc
cs
or
stos
arpl
add
xor
pusha
or
adc
dec
push
and
push
cmp
mov
insl
sbb
lods
pop
insb
xor
jge
adc
mov
pop
xchg
pusha
inc
push
scas
xchg
rcrb
sbb
or
sarb
pop
scas
imul
push
inc
xor
dec
cmp
sbb
pop
dec
add
xchg
and
mov
sbb
test
push
add
movsl
jmp
and
cmp
sbb
xchg
andb
hlt
je
movsl
outsb
push
mov
sub
cmc
into
inc
pusha
pop
mov
mov
test
inc
mov
sarl
adc
pop
inc
pop
inc
rcll
nop
xlat
pop
stc
shll
cmp
add
mov
dec
and
dec
cltd
mov
fwait
popa
fldcw
stc
or
frstor
lret
test
lods
scas
mov
add
fcomip
cwtl
and
mov
test
stos
add
xchg
and
xor
cmp
and
movsb
or
push
xor
mov
movsb
sbb
inc
push
stc
lret
mov
sub
pop
mov
mov
inc
lods
pop
adc
xchg
dec
push
mov
adc
and
mov
sbb
stos
adc
push
fcom
sub
pop
inc
rclb
insb
gs
cmp
cwtl
out
stos
add
pop
pop
jmp
mov
js
ret
push
inc
aam
rcrb
jbe
push
das
js
dec
jnp
and
add
outsl
dec
sarb
lds
xchg
icebp
mov
sub
jbe
call
cmpb
stos
lods
aas
lds
int3
imul
das
ret
inc
adcb
rcr
and
inc
adc
sub
xchg
insb
test
jbe
cmp
xor
stos
jge
dec
and
in
mov
movl
mov
fisubs
xor
outsl
rclb
outsl
ljmp
jne
pop
cmpl
int
mov
jle
dec
inc
divl
xor
jns
sbb
xchg
jnp
or
daa
jnp,pt
ret
fwait
icebp
sub
flds
decl
lahf
rclb
mov
lds
repnz
leave
xchg
and
sub
leave
and
jecxz
in
inc
fucomp
lock
and
push
cld
pop
jle
out
adc
sbb
push
mov
rol
mov
addr16
adc
icebp
test
pop
xor
divb
mov
orb
in
push
test
dec
pop
test
cld
inc
rcrb
pop
in
pop
lods
mov
cwtl
stos
insb
pop
push
sub
outsl
addr16
mov
xlat
mov
sub
call
push
sub
pop
loope
stos
idivl
jno
cmpb
adc
in
shr
xor
xchg
rclb
push
outsl
adc
out
cld
jmp
inc
je
add
dec
or
dec
xchg
sub
xchg
sbb
cmc
or
jb
dec
mov
loopne
lds
dec
out
pop
rcr
xchg
sti
sbb
dec
lods
mov
mov
push
xlat
add
fmul
ss
mov
sarl
leave
jne
mov
xor
or
pop
test
mov
rorb
mov
push
pop
push
fld
orb
xchg
movsl
int3
jb
negl
sub
vprotb
sti
sub
mov
add
scas
mov
push
stos
cmpsb
cmp
out
pop
leave
push
jmp
fdivl
lods
cli
dec
gs
in
pop
xor
rolb
mov
out
into
std
and
pop
xor
cmp
lea
push
dec
aad
fbstp
movlhps
loope
push
mov
ljmp
fldt
push
xchg
xor
mov
xor
push
pop
mov
mov
ljmp
sub
xchg
sbb
test
adc
enter
and
mov
and
jecxz
pop
mov
mov
into
bound
inc
xchg
adc
icebp
mov
fidivrl
mov
je
jl
mov
jmp
dec
mov
push
xlat
mov
xchg
cmp
adc
pop
mov
mov
jmp
jae
lock
cmp
cmp
faddl
cltd
dec
mov
inc
nop
repz
mov
in
popf
mov
jg
mulb
mov
mov
test
ret
out
lcall
adc
cmp
mov
mov
dec
cli
inc
out
push
push
adc
es
movsb
mov
or
xchg
ret
push
cs
lock
or
ja
cmpsb
sbb
fwait
mov
xor
adc
or
scas
hlt
addb
pop
imul
popa
je
pop
scas
lcall
filds
lret
pop
inc
sbb
xchg
jns
addb
sahf
push
xor
mov
pushw
jns
or
xchg
cmp
in
or
cmp
test
es
jle,pn
jl
or
lahf
mov
adc
dec
jae
xchg
dec
mov
mov
adc
inc
ficoml
mov
jl
cmpb
lret
into
test
push
ficoms
jno
aas
xor
std
aad
inc
jb
adc
mov
ss
pop
ljmp
lret
push
lcall
dec
jmp
pop
mov
jnp
sub
cmc
xchg
fcoml
and
pop
dec
xor
in
cli
insb
xchg
xor
es
pop
pop
out
ja
pop
xchg
and
push
add
mov
bound
inc
mov
mov
aas
cld
cld
arpl
pop
adc
sbb
clc
leave
cmp
push
pop
lods
addl
jl
mov
xor
mov
call
addb
scas
or
jns
cwtl
push
push
mov
sbb
outsl
cmp
rorl
mov
xchg
repnz
pop
lods
jbe
dec
stos
outsl
xor
pop
mulb
dec
imul
lock
iret
int
xor
mov
cmc
fnstenv
add
lods
fsub
mov
jg
mov
mov
mov
jmp
jns
inc
dec
shlb
ljmp
push
xchg
lcall
fcomps
fs
scas
jecxz
mov
popa
pop
cmp
pop
outsl
icebp
dec
inc
gs
ror
out
push
mov
imul
fwait
cmpsb
fsubl
xlat
fisubrs
aam
mov
jecxz
pop
inc
cmpsb
sbb
push
fldenv
je
test
inc
ds
xlat
fs
mov
mov
xor
xorb
jbe
push
je
inc
lea
cmpb
and
enter
hlt
and
faddp
shr
push
addr16
mov
fs
stos
xchg
mov
scas
jmp
cmp
movb
cmp
outsb
shll
adc
push
adc
aaa
and
inc
xor
xor
xchg
fdivrl
xor
jle
pop
and
sub
in
jae
sahf
ss
ljmp
out
jnp
add
mov
movsb
dec
xchg
rorl
push
mov
mov
pop
mov
lret
pop
mov
int
mov
cli
sub
ss
scas
fwait
inc
xchg
addr16
test
dec
fwait
sub
push
jno
test
movsb
or
mov
mov
rcll
popl
sbb
mov
jnp
movsl
xlat
icebp
xchg
inc
fstpl
mov
popa
inc
xchg
scas
sbb
in
out
cmp
fucompp
lock
sbb
mov
mov
pushf
cmp
and
lea
and
ret
mov
mov
outsb
sub
xchg
mov
jle
ljmp
or
js
sub
fnstcw
enter
and
xchg
push
in
sub
js
xchg
test
hlt
sbb
divb
mov
mov
daa
push
jno
scas
jbe
mov
cmp
shlb
sub
lods
xor
in
mov
ds
adc
pop
loopne
jg
push
out
cmp
enter
sub
insb
xchg
inc
and
test
xorb
xchg
jge
add
jl
lahf
push
repz
gs
mov
cli
add
sub
adcl
inc
arpl
lret
dec
and
jmp
nop
dec
mov
out
xchg
jne
pop
adc
mov
hlt
pop
jge
mov
adc
loopne
sbb
cmp
out
cli
push
negl
xchg
xor
je
std
jo
jns
lret
xor
lds
arpl
sub
sbb
in
hlt
and
pop
inc
call
or
mov
dec
inc
cmp
jmp
jl
decb
jno
mov
call
in
adc
ljmp
sub
sbb
sub
sahf
fwait
int
mov
stos
add
mov
jle
or
bound
std
fldcw
and
mov
push
inc
mov
mov
lods
popf
adc
sahf
stc
in
addr16
pop
jl
mov
je
inc
and
fst
xor
lea
outsb
pop
or
mov
cltd
fs
add
inc
ds
and
mov
movsb
push
mov
lret
xchg
jno
orl
rcrb
scas
mov
in
clc
fbstp
or
sbb
iret
popf
mov
pop
cmp
jo
cli
mov
mov
out
jl
je
sub
xchg
addl
sbb
ds
xor
pop
mov
sbb
lods
into
pop
sub
mov
push
cld
cmp
mov
mov
bound
sub
pop
and
mov
fnstsw
pop
std
sub
and
xorl
mov
mov
xchg
pop
ljmp
pop
pop
xor
mov
cwtl
jns
lret
imul
mov
sbb
xchg
fs
xchg
add
stc
adc
into
jle
sti
repz
and
cmpsl
push
into
xor
mov
dec
pop
and
add
sub
adc
pcmpeqw
fcmovne
jo
incl
sbb
adc
pop
loop
mov
sbb
xchg
les
xor
push
mov
inc
xchg
push
cld
jge
fwait
xor
test
sub
icebp
stos
mov
movsb
lock
enter
sbb
or
cltd
cmp
ficompl
xchg
mov
jge
inc
mov
jae
dec
pusha
and
jno
das
scas
dec
test
ss
mov
add
stc
icebp
dec
xchg
cld
fldenv
pop
push
es
cli
lret
test
adc
and
or
test
or
ljmp
lret
fsub
add
push
movsl
imul
or
mov
add
lcall
mov
push
clc
xor
mov
andb
jnp
in
pop
mov
cmp
incl
inc
sub
call
call
lock
leave
das
aad
mov
dec
add
call
cmpsl
into
add
jg
push
in
sub
add
lahf
push
daa
push
pop
fwait
xor
dec
jnp
push
pop
sub
test
mov
mov
mov
sbb
scas
roll
push
iret
pusha
cmc
sbb
adc
xchg
xchg
mov
cmp
inc
jecxz
clc
fildll
repnz
gs
dec
sbb
std
fimull
jl
push
das
scas
sub
mov
mov
push
jb
push
in
shr
mov
decb
insl
test
dec
sbb
clc
testb
mov
push
push
pop
sbb
jecxz
and
pop
out
pop
mov
or
xor
inc
push
add
in
mov
and
sub
xchg
gs
stos
pusha
les
xchg
fisubrs
push
adc
movsb
xchg
or
pop
subl
gs
lret
iret
std
sarl
nop
pop
and
xor
sbb
cli
sub
movsb
sbb
mov
aaa
or
rolb
aad
icebp
cmp
sahf
pusha
adc
pop
int
rclb
mov
in
add
pop
push
icebp
fisubs
cmp
dec
mov
push
mov
movsb
lea
jo
pop
or
jae
imul
jmp
push
push
jle
mov
mov
lahf
mov
mov
sbb
stos
dec
pop
sub
out
into
loopne
push
leave
pop
cmp
sbb
fdivs
mov
stc
pop
xor
pusha
fwait
addl
jb
shl
add
cmc
sbb
adc
jnp
cmpsb
shll
and
rcrl
xchg
fmul
ret
loop
arpl
ret
jmp
cmpsl
enter
add
jo
loope,pt
lock
mov
popa
shll
xchg
or
pushf
stc
repnz
mov
sahf
out
shrb
cmp
dec
xor
movsb
push
mov
mov
js
out
dec
call
lock
jg
adcb
faddl
lcall
cmc
mov
mov
inc
faddp
sub
lods
jae
pop
lahf
cmc
jno
jnp
nop
push
jns
sub
or
or
dec
inc
sbb
xchg
and
dec
adc
dec
adc
dec
cli
inc
sub
dec
jg
test
test
pop
or
jno
add
insl
and
cmpsb
stos
mov
popf
and
or
nop
or
pop
imull
xchg
mov
roll
jmp
dec
or
std
add
mov
pop
xchg
lods
and
and
xor
cmp
lock
mov
xor
pop
je
jg
and
mov
push
inc
jg
subl
jecxz
cmp
mov
cmp
popa
clc
ret
leave
xchg
cmpsl
push
push
pop
push
int
dec
stc
mov
mov
push
es
pop
sbb
adc
insl
clc
lret
ret
mov
add
in
fiaddl
mov
cld
divl
outsb
dec
mov
jp
xchg
fimull
insb
xlat
ret
adcl
xor
jl
les
loope
pop
dec
mov
inc
shlb
xchg
cmpsb
cmp
mov
sub
push
push
inc
sub
or
fs
jne
add
push
mov
jle
cmp
jecxz
adc
mov
test
inc
jmp
inc
les
imul
xchg
pop
pop
mov
aad
mov
fistl
pusha
cmpsl
pusha
inc
in
or
inc
fs
dec
lret
mov
fdivrl
jg
test
add
and
fimull
jmp
jae
cwtl
scas
and
cmp
les
fistpl
mov
les
sarl
neg
sbb
movsl
and
cmp
add
and
je
lret
mov
in
roll
dec
movsl
dec
jecxz
das
mov
jae
outsb
jns
int
add
adc
jle
jne
cmp
pop
jb
add
mov
mov
inc
adc
pop
lock
pop
pop
lock
mov
enter
push
mov
daa
sub
ljmp
sbb
mov
mov
pop
jae
mov
dec
pop
mov
lock
call
lds
mov
sub
or
mulb
loope
fistl
mov
mov
mov
push
pop
outsb
add
xlat
mov
lock
jo
out
xor
out
cmp
jnp
and
mov
xchg
popf
adc
inc
adc
add
dec
dec
cs
loop
out
data16
jae
inc
jno
ja
lret
jns
add
mov
int3
out
sbb
out
dec
movsl
inc
sub
dec
mov
push
dec
in
add
sbb
pushl
iret
add
inc
repz
xchg
in
pop
outsb
dec
cmpsl
inc
xor
les
outsl
fldl
xor
jp
sub
cmc
pop
fisubl
in
push
jp
jno
rclb
mov
inc
lds
or
add
push
cld
popa
out
cmp
cli
add
movsb
dec
test
sbb
ja
int3
gs
cmpsl
cmp
outsl
into
loopne
test
or
xchg
jge
jbe
dec
inc
pop
xor
mov
cmpsb
aam
or
xchg
sub
imul
insb
adc
or
out
ss
push
jnp
mov
mov
cmpl
and
xchg
sbb
xor
push
or
sbb
jmp
test
add
or
scas
dec
mov
mov
inc
imul
pop
fimull
fwait
lret
fsubs
movsl
add
pusha
neg
test
cltd
cli
mov
hlt
andb
add
lods
and
fmuls
or
jp
adc
xchg
out
mov
sbb
mov
push
in
push
ret
mov
and
and
push
stc
bound
xor
rol
scas
xlat
adc
and
int
les
jl
and
sub
pusha
movsl
movsl
xor
clc
leave
scas
adc
sbb
je
repz
clc
xchg
es
inc
mov
mov
xor
mov
test
aad
sub
sbb
int
or
dec
push
loop
fadd
ljmp
lcall
xchg
push
int3
and
in
inc
and
xor
pushf
mov
cmp
or
bound
fbstp
fsubs
xchg
sti
int
imull
xor
xor
jp
out
gs
jge
pop
aas
sti
mov
scas
mov
rcrb
inc
cmp
jg
jnp
pop
lret
insl
mov
repnz
insb
repnz
or
mov
cmp
add
stc
pop
cwtl
in
repz
inc
outsl
mov
jl
jo
lcall
ficoms
push
bnd
ret
loope
jg
rolb
jle
mov
sub
leave
and
push
adcl
addb
rcll
sub
adc
dec
jae
mov
push
or
add
pop
dec
dec
loopne
call
pop
inc
sub
ja
ret
add
popl
mov
mov
xlat
iret
push
cmc
cmp
leave
fcoml
leave
pop
cltd
loope
fmul
das
aaa
mov
mov
dec
mov
mov
jnp
inc
ss
insl
js
mov
leave
pop
sbb
repnz
xchg
fisubrl
jne
fimull
xchg
push
hlt
inc
sbbb
pop
jge
out
repz
hlt
nop
aad
fwait
push
sbb
icebp
cli
xchg
mov
jb
cmp
movsb
mov
outsl
in
jg
jl
adc
sahf
gs
pop
pusha
shll
in
xor
add
xchg
movsl
mov
cmpsb
dec
test
pop
insb
les
jecxz
mov
push
iret
sbb
sub
pop
pshufw
cmpsl
mov
mov
std
cmpsl
dec
pop
jb
inc
in
scas
int3
pop
mov
cld
inc
pop
mov
and
push
pop
dec
pop
push
xchg
popf
xor
fsubl
mov
addr16
jl
dec
cmp
and
sbb
and
lret
sbb
es
inc
mov
push
movsl
cmp
int
jg
cmp
stos
ja
adc
or
mov
pusha
outsb
dec
movsl
jne
subb
loope
mov
mov
inc
int
xchg
inc
add
or
mov
mov
nop
mov
push
int3
jne
cltd
lahf
push
sti
je
call
dec
mov
pop
iret
fwait
and
xchg
or
mov
sarl
adc
mov
nop
js
inc
fxch
jb
sbb
add
sub
stc
test
lret
imul
movsl
xor
xchg
dec
data16
pop
outsl
stos
jne
inc
push
or
ja
xchg
or
sub
aad
sahf
mov
idivl
popf
sub
mov
jmp
aam
jbe
mov
and
inc
pop
sti
loopne
push
or
movsb
inc
cmp
jle
loopne
add
jle
mov
dec
faddl
or
xchg
xchg
test
outsb
add
cmp
push
fmulp
je
cmp
jae
or
push
cld
pop
bound
push
push
shll
mov
jge
adc
pop
fnsave
int3
das
adc
notl
lahf
sub
int
sarb
loope
pop
mov
repz
cs
push
mov
or
gs
aam
dec
jp
adc
xchg
les
dec
js
xor
pop
jno
les
sub
xor
mov
or
rcl
jecxz
aam
and
out
xchg
add
sahf
cmp
mov
enter
outsb
jae
xchg
inc
lahf
bound
scas
xchg
out
jnp
sub
inc
mov
fsubp
jmp
cmp
cli
xor
sti
cmpsl
nop
or
scas
or
imulb
in
pusha
in
lock
adc
mov
loopne
xchg
scas
cmp
xchg
stc
inc
cmp
xor
xor
pop
lahf
mov
inc
popf
cld
mov
out
mov
iret
jns
jbe
int
sbb
add
jo
daa
inc
dec
mov
in
or
daa
lea
dec
lea
mov
sub
ja
jo
fmulp
jne
in
xchg
inc
inc
pop
sbb
push
jecxz
cmp
lock
jmp
jmp
inc
lahf
data16
cmp
scas
fidivrs
push
stc
pop
sbb
adc
pop
push
jmp
dec
outsb
mov
repz
ds
mov
addr16
ret
push
ja
sbb
cmpsb
xchg
scas
js
cmc
insl
xchg
ss
leave
cmp
mov
cmpsl
push
imul
or
jae
lret
bound
dec
mov
pop
add
sar
loope
push
adc
mov
xor
arpl
xor
pop
rcll
add
inc
and
cltd
push
and
gs
push
jno
fistps
test
leave
out
int3
stos
mov
rorb
add
adc
xchg
adc
jmp
outsb
mov
cmp
movsl
xchg
lahf
dec
xchg
sbb
jl
adc
aas
incb
sbb
leave
mov
jnp
js
fstpt
test
insl
add
sub
push
inc
rolb
jl
in
jg
jle
mov
sub
inc
mov
or
or
lahf
rorl
clc
sub
push
das
and
xchg
popf
and
lock
pop
sahf
cmc
clc
push
and
aad
pushf
ja
insb
add
sbb
pop
stos
rcll
out
jg
xor
rcll
fsts
dec
cmp
vpaddq
or
outsb
aaa
jg
addr16
aad
in
ficomps
out
add
das
js
push
push
xor
push
insb
dec
mov
push
cmp
xchg
movsb
fldt
outsl
adcl
mov
jp
sti
cmp
ja
adc
movsb
adc
pop
jb
gs
call
sub
add
sbb
rclb
pop
enter
inc
sarl
sahf
add
icebp
mov
shll
cmc
mov
jnp
iret
loope
ret
pop
pushf
sbb
xor
mov
inc
mov
xchg
mov
sti
cmpsb
xor
das
ss
test
jne
push
dec
push
sarb
add
stc
mov
mov
xlat
leave
lock
idiv
pusha
mov
jnp
es
aad
jl
pusha
popf
and
push
scas
fucomp
insl
push
push
jle
jmp
mov
out
movsl
roll
arpl
push
mov
pop
mov
rcll
insl
in
dec
mov
inc
int3
int3
xchg
push
jl
jns
in
in
cld
es
roll
mov
jge
ds
jns
test
xchg
outsl
ret
mov
mov
sub
stos
aaa
cmp
mov
cmp
add
fs
mov
xchg
ja
cmp
stos
cmp
ss
jne
sub
aas
lods
jg
cli
cwtl
mov
jno
xlat
and
push
mov
sbb
lret
stos
lea
leave
arpl
push
inc
pop
fmuls
cld
invd
aaa
cmp
xchg
add
adc
repz
dec
div
js
imul
roll
lds
jecxz
or
stos
out
jmp
dec
jmp
push
jle
pop
jo
call
fsts
cmp
sbb
shrb
jecxz
test
cmc
push
push
lret
and
sub
rcll
lods
imul
push
lcall
insl
int3
mov
mov
repz
jmp
in
enter
lods
xchg
push
push
add
mov
lock
push
add
mov
dec
shrb
in
idivb
imul
inc
das
idiv
ds
sbb
pop
push
ja
mov
enter
adc
dec
in
adc
movsl
daa
mov
jge
push
fwait
mov
sub
xor
repz
sbb
jne
pushf
dec
mov
push
lods
dec
inc
aam
push
push
mov
pop
ljmp
outsb
out
ljmp
in
inc
or
dec
and
push
cli
pop
mov
lea
cmp
mov
sbb
mov
out
imul
hlt
mov
lahf
mov
add
xchg
loopne
xchg
rep
fdivrs
xchg
push
jne
and
mov
jg
mov
arpl
sahf
insl
out
jmp
mov
add
out
out
and
inc
imul
test
jg
inc
and
and
and
pop
ja
dec
cltd
out
in
and
inc
mov
mov
and
jbe
cs
dec
in
push
lods
or
repz
or
mov
stos
adc
push
fcompl
and
pop
out
pop
lea
mov
jle
decl
sbb
sub
jge
fcoml
xlat
fdiv
jmp
das
xchg
dec
pop
and
jno
cmp
in
jmp
test
add
jmp
pushf
imul
mov
mov
repnz
inc
lods
mov
mov
pusha
inc
shrb
pop
jae
cmpsb
inc
add
pop
jle,pn
arpl
mov
jbe
xor
adc
cwtl
sahf
or
jl
sbb
jno
mov
sbbb
dec
push
and
jge
lods
mov
int3
xorl
pushf
out
dec
mov
xchg
in
cs
mov
push
sbb
rclb
inc
sbb
scas
push
push
subl
xor
add
iret
inc
jg
insl
clc
jnp
jge
test
pop
pop
cmp
mov
out
fstpl
insl
mov
add
popf
movsl
popf
fbstp
movsl
adc
sbb
mov
je
fsts
into
icebp
ret
and
pusha
addb
mov
xor
es
xchg
negb
rclb
pop
hlt
es
jle
and
loope
shll
loop
and
lret
mov
pop
fsubrl
push
xchg
imul
out
and
jmp
xchg
test
dec
xchg
ja
pop
popa
dec
push
scas
and
pop
push
mov
es
push
jnp
lock
xor
inc
ds
in
popa
jp
sbb
loopne
repz
test
imul
inc
mov
add
xor
inc
shll
push
or
movsb
jnp
sbbb
adc
dec
cmp
js
xlat
adc
and
divl
repnz
inc
jp
in
int
and
push
cld
fs
insb
xor
lock
mov
ror
adc
repnz
cmp
sub
lret
out
pop
cltd
or
sti
and
test
mov
jae
or
rcrb
and
sbb
cltd
fadd
dec
je
ljmp
cli
cmp
jle
out
and
inc
gs
lods
movsl
in
mov
leave
movsl
sbb
sbb
ds
xchg
dec
mov
push
sbb
inc
push
sub
mov
cltd
push
test
cltd
mov
gs
mov
ja
ljmp
xor
mov
sbb
into
xor
xor
dec
icebp
xchg
test
mov
es
xchg
inc
mov
push
dec
ja
add
mov
inc
mov
add
and
arpl
sub
ficoml
xchg
int3
stos
mov
mov
out
test
or
jns
xchg
mov
jmp
pusha
push
and
sbb
inc
aam
call
mov
push
or
lods
or
xor
push
jmp
or
and
mov
add
xor
mov
fisttpl
lds
cli
xor
dec
inc
push
mov
xchg
ficompl
xchg
aam
fmul
push
xchg
dec
mov
in
or
loope
mov
inc
and
xlat
mov
into
incb
bound
sub
sbb
jg
scas
idivl
sarl
frstor
cld
ljmp
ret
push
mov
mov
jnp
mov
pusha
outsb
or
sarb
fnstsw
jle
jge
xlat
or
mov
dec
mov
lcall
push
lret
mov
jb
out
loop
inc
outsl
fwait
cwtl
inc
mov
lds
decb
sbb
mov
add
shrl
xchg
mov
fmuls
shl
std
mov
xchg
xchg
pop
xor
and
cs
mov
cmp
stos
pop
sbb
mov
and
movsb
and
adc
adc
xchg
pop
adc
enter
es
shrb
dec
lods
jb
mov
push
ja
jnp
xchg
mov
xchg
ret
pop
xor
add
andb
loopne
mov
iret
pop
push
push
outsl
in
mov
bound
dec
loop
add
popf
stos
insl
cmpsl
push
or
stc
mov
ss
cli
in
dec
xchg
mov
stos
loop
cmp
pop
mov
adc
mov
mov
mov
and
dec
orb
pusha
ss
lds
or
push
pop
push
sbb
loope
out
dec
xchg
xchg
stos
cmp
jge
add
fsubl
jne
fdivrs
adc
dec
sbb
dec
mov
sar
pop
jmp
test
dec
add
filds
mov
adc
pop
or
fdivrl
push
mov
cmp
dec
jae
popa
sbb
fcmovnu
xlat
add
mov
ret
add
test
xorb
outsl
push
jnp
jbe
leave
sarb
sbb
fisttps
icebp
loop
xor
mov
pop
sub
inc
push
xchg
adc
mov
js
clc
repnz
adc
add
xor
or
push
pop
pop
das
ljmp
in
push
cltd
pop
mov
jle
sub
jle
rclb
sub
lahf
fmuls
and
push
dec
imul
xchg
pop
insb
adc
js
ljmp
or
xor
aad
sbb
add
sbbb
stos
mov
ss
push
bound
aam
inc
push
lahf
sub
int3
jne
popa
sbb
and
cmp
into
loope
scas
adc
lea
addr16
cmp
ljmp
test
mov
test
mov
add
enter
ss
inc
pop
aam
divps
lahf
sti
mov
aam
pop
lock
fildl
jo
insl
inc
xor
int
call
ss
cwtl
add
dec
arpl
xchg
pop
and
cmp
add
repz
mov
mov
adc
mov
sub
sub
xor
shl
sbb
das
sbb
mov
call
aaa
out
imul
jae
pop
xor
sbb
xchg
sbb
mov
iret
adc
in
and
mov
and
cmpsb
dec
outsl
sti
testb
scas
in
adc
mov
outsb
cmpsb
and
mov
dec
insl
sti
nop
jmp
cmpsl
dec
inc
jmp
repz
pmulhuw
mov
roll
ret
lcall
dec
jns
and
jle
pop
outsl
sbb
cmp
add
insl
adc
int3
lret
sub
adc
add
mov
rorl
jnp
ss
aaa
js
stos
fadds
pop
cmp
dec
ret
sahf
imul
sbb
xor
shrl
push
cmp
and
jbe
data16
pop
xchg
add
mov
jg
and
inc
movsb
hlt
dec
xor
mov
jne
mov
adcb
imul
or
cmpsb
cmp
in
popa
stos
inc
cmp
lret
pop
xor
push
xchg
fbstp
ret
mov
lahf
es
sbbb
xlat
loope
adc
ficoms
orb
dec
shlb
repnz
movsb
xchg
in
push
mov
xor
mov
nop
pushf
cmp
popa
daa
adc
jns
ljmp
hlt
dec
push
call
cmpsb
sub
mov
dec
cmp
push
and
push
sub
rorb
cld
test
mov
lods
fnsave
and
sti
scas
mov
addr16
jge
xchg
call
nop
lcall
outsl
jnp
add
sbb
nop
movsl
mov
aas
pop
mov
movsb
push
gs
inc
pusha
pushl
arpl
mov
mov
stc
lcall
fwait
in
push
dec
call
pop
pop
add
cmpsl
jle
outsb
cs
je
pusha
leave
mov
stos
into
xchg
xchg
mov
lock
jecxz
lods
or
shlb
mov
push
in
sub
inc
gs
sub
loopne
adc
mov
pusha
test
mov
push
sub
popf
cmpl
jle
roll
stc
mov
and
inc
lcall
test
push
shl
or
xchg
les
xor
call
jae
out
mov
cmp
loop
push
loopne
cmp
fdivrs
xorb
mov
dec
sub
mov
sahf
jge
add
ret
mov
fs
cmp
jae
dec
out
pop
or
add
sbbl
fnstenv
jg
lcall
push
inc
lahf
mov
sub
bound
push
xor
adc
fcomps
pop
mov
icebp
cld
fidivs
pusha
outsb
sub
jecxz
sub
pop
mov
in
pop
or
outsl
mov
leave
xor
rolb
mov
and
daa
js
mov
mov
mov
push
stos
adc
mov
push
lret
mov
pop
dec
and
jmp
jg
lcall
int3
mov
mov
movb
mov
dec
jecxz
insb
mov
fcompl
cmp
dec
test
les
dec
mov
int3
mov
xchg
stc
rolb
rclb
sarl
sub
push
jno
xor
jg
and
xchg
inc
rorb
shlb
pop
loopne
inc
push
mov
mov
inc
je
dec
in
jp
sub
sub
sub
in
jae
sbb
mov
fisttpl
incl
adc
arpl
xor
pop
cmpl
es
jg
movsl
xor
lret
cmp
popa
call
mov
cmp
xor
sub
dec
xchg
lcall
je
mov
or
cmc
pusha
lcall
mov
filds
adc
push
pop
dec
add
call
nop
mov
dec
or
sbb
dec
inc
push
mov
xor
fidivl
testb
mov
and
testb
sarl
jae
jp
fnstsw
cli
jge
fimull
xchg
outsl
xchg
add
jae
xchg
add
adc
in
jno
xor
loope
call
cmp
shl
mov
xchg
lods
mov
jae
jno
mov
jns
insl
cli
bound
fucompp
mov
sub
std
adc
or
inc
arpl
xor
mov
pop
ljmp
add
inc
mov
pusha
sarl
dec
xchg
jge
inc
nop
pushf
lea
dec
shr
dec
inc
jp
loopne
cmp
add
in
ret
and
mull
push
sub
jno
ds
insb
inc
outsl
sbb
mov
cmp
int3
cmp
inc
fldenv
repz
push
loopne
mov
inc
xchg
xor
xchg
insb
pop
mov
jae
jecxz
fmulp
mov
jle
dec
push
xor
add
test
inc
test
jmp
out
mov
or
mov
std
outsl
dec
shlb
mov
or
test
das
roll
adc
fcoms
xchg
insb
push
push
mov
adc
lret
notl
out
xchg
mov
pop
pop
sub
enter
rol
les
sub
popf
test
jg
out
sub
jge
xchg
out
pop
add
sub
and
dec
inc
inc
mov
dec
fs
insb
and
test
jns
cld
sti
outsb
scas
les
cmc
adc
mov
pop
and
dec
push
and
sub
ffree
jns
jge
mov
shld
xor
push
mov
mov
push
cmp
stc
sti
push
cmp
adc
xchg
fsubrl
insl
xchg
lret
fldl
sub
cmpb
inc
jle
sti
popf
cmp
lock
push
pop
sub
cltd
cld
test
xor
out
idivb
push
xor
adc
adc
inc
out
adc
xlat
mov
pop
test
mov
ds
scas
and
jo
adc
mov
push
cli
cmc
jecxz
shrb
lods
mov
cwtl
and
mov
test
jle
bound
pop
adc
repnz
adc
add
ss
add
inc
jbe
sub
jmp
je
movsl
push
dec
mov
movl
xchg
lea
push
add
out
lret
push
ja
adc
xor
lea
cmp
lods
dec
out
repnz
mov
loopne
jg
popf
lock
mov
fldl
jle
xchg
pop
xor
dec
mov
jae
add
mov
jle
cwtl
iret
aas
xchg
cltd
sbb
xor
jb
ljmp
dec
sbb
rcrb
dec
sbb
jbe
es
jae
ss
mov
jmp
inc
dec
xchg
mov
les
pop
enter
pop
iret
fwait
cltd
enter
push
xor
mov
sbb
popa
xor
xor
push
or
dec
outsb
test
rcll
mov
pop
xor
jle
push
mov
das
jae
xchg
sub
mov
inc
inc
in
in
sub
loope
inc
mov
int3
pop
fwait
lea
mov
sub
jb
xor
repz
push
fld
test
jo
xchg
into
clc
cmpsb
movsl
movsb
test
test
inc
popa
mov
adc
les
sub
in
and
imul
repnz
push
push
fdivs
dec
adc
jbe
add
fiadds
pop
aaa
std
addr16
or
lods
or
xorb
sbb
pop
pop
push
mov
test
lret
lahf
jmp
fs
into
jecxz
jg
jne
mov
pop
insl
mov
sbb
aaa
inc
in
mov
mov
mov
clc
movsl
or
sbb
jecxz
insb
je
fmuls
lods
ljmp
mov
hlt
sahf
jb
paddusb
frstor
push
pop
fwait
adc
sub
inc
mov
or
jge
repnz
rcrb
push
or
mov
xchg
div
dec
and
iret
cmp
incl
add
add
movsb
pop
jg
cmp
lahf
movsb
pusha
loop
je
sub
shrb
sbbl
jae
dec
jl
negb
lods
lods
sub
xchg
ds
dec
popf
test
mov
mov
fistl
test
pop
mov
inc
xlat
sbb
or
mov
sbb
push
mov
rorl
xlat
xor
push
mov
or
or
stc
stos
mov
test
dec
cmp
test
mov
data16
aam
adc
addr16
pusha
dec
push
pop
jb
int3
rol
pcmpgtb
pop
cs
lock
add
and
out
ret
mov
clc
pop
repnz
lods
xchg
addr16
jge
adc
jecxz
jb
test
cwtl
paddsw
sbbb
pop
les
dec
fwait
push
ret
in
or
pop
jg,pt
jbe
mov
xchg
les
push
lcall
adc
lods
or
adc
call
hlt
xor
xchg
shr
dec
mov
in
cld
cmp
es
loopne
sub
popa
ljmp
enter
cwtl
sbb
movsb
fcoms
fwait
mov
repz
lcall
rcl
fsub
lods
sarl
mov
hlt
pop
int3
enter
jb
xor
or
push
mov
jle
xchg
inc
hlt
mov
outsb
fildl
ja
adc
shr
cmp
dec
add
test
push
push
mov
mov
loope
andb
mov
jmp
loope
dec
movsb
sbb
push
cld
sbb
fimull
cld
push
xor
xchg
pop
shl
ss
adc
cmc
mov
mov
dec
jae
and
sub
xchg
andb
test
aas
push
leave
push
sub
inc
imul
pop
in
cli
mov
push
pusha
iret
pop
xlat
mov
mov
jno
pushw
mov
pop
cs
jo
dec
or
xchg
cmp
das
int
jmp
mov
inc
sbb
dec
scas
sub
repz
int3
add
ss
xor
mov
rcrl
cmp
push
mov
push
mov
lahf
sbb
lods
inc
sub
and
rcll
aad
add
dec
jo
ret
dec
in
lods
fimull
enter
or
loope
rclb
mov
inc
cli
addr16
loopne
pop
out
loopne
inc
sub
push
sahf
lcall
pop
cmpsb
and
mov
dec
xchg
or
lods
xor
mov
movsb
jg
xchg
mov
mov
xlat
jmp
mov
dec
je
push
mov
icebp
sbb
repnz
std
popa
dec
push
daa
pop
jnp
enter
incb
cli
push
and
ljmp
rclb
push
inc
outsb
add
sub
mov
les
pushf
adc
std
in
popf
addr16
mov
jcxz
and
xor
cmp
sub
fldt
fildll
mov
sub
mov
jmp
pop
push
sub
mov
imul
loopw
mov
sbb
mov
pop
xchg
insl
arpl
ja
add
outsl
subb
ret
lea
xchg
jle
push
xor
mov
add
fnstcw
insl
lahf
daa
hlt
fcompl
mov
adc
pop
add
push
stos
mov
ficomps
aas
sbb
mov
pop
lret
daa
lea
pop
ja
mov
add
sbb
mov
xchg
mov
test
pop
or
dec
add
add
in
aam
mov
popf
push
les
pop
xchg
adc
fwait
mov
or
repz
cmp
xchg
adc
inc
aaa
cli
jns
jb
out
mov
movsl
mov
cmp
and
xorb
lds
xchg
mov
pop
jle
jp
inc
les
cmp
mov
ja
aad
sub
push
fmuls
test
ret
mov
or
jg
or
movsl
out
mov
iret
jne
cmp
mov
bound
in
and
fs
xor
sbb
cmp
call
mov
xchg
mov
test
pusha
add
cmpsl
out
push
cs
xchg
xor
fiaddl
pop
adcl
loop
mov
adc
std
mov
in
dec
dec
nop
push
mov
loop
and
test
sahf
lods
sub
js
mov
sbb
lock
jne
notb
inc
rcl
int
inc
aaa
mov
and
test
pusha
or
fistpll
xchg
xchg
cmp
out
popf
fadds
notl
ljmp
jnp
push
dec
les
aam
dec
cmp
std
in
cmp
mov
xchg
sbb
out
and
inc
or
fsubrs
pop
fsubr
repnz
jno
int
inc
cmp
jp
mov
xchg
into
int
xor
test
fs
pusha
dec
negb
dec
cs
inc
xor
ja
ljmp
insb
mov
outsb
push
loope
jp
sub
iret
stos
push
and
inc
inc
andl
jmp
ljmp
sub
lret
pop
and
mov
mov
dec
sbb
sub
mov
or
cmc
mov
jne
pusha
pushf
dec
jmp
push
out
add
sbb
sub
pop
xor
movsl
dec
cmp
rorb
repz
test
inc
sbb
push
or
arpl
pop
mov
mov
inc
lcall
bound
mov
adc
rcrb
nop
add
pop
sbb
lret
mov
sub
int3
sbb
mov
movsl
mov
sub
add
bound
sub
shll
mov
sub
pushf
idivb
popa
dec
jbe
int
popa
or
in
stc
out
cld
push
mov
in
test
fmull
or
adc
cmp
dec
pop
aaa
sbb
pop
in
rcl
iret
mov
rcl
inc
mov
push
pushf
js
dec
lret
fdivs
clc
and
xchg
adc
cmp
xor
ret
inc
or
movsl
fldcw
aad
pop
cwtl
pop
or
es
call
adc
in
jb
push
imul
sub
rcrl
jl
popf
stos
push
mov
pushf
adc
mov
cmp
lahf
pop
sub
mov
fistpl
test
add
sbb
out
loope
fldt
mov
jl
dec
push
sti
into
fistl
repnz
jo
arpl
xchg
xchg
push
or
rol
lret
or
cmp
outsb
mov
jnp
fisttpl
sbb
push
insb
mov
fdivl
mov
xor
movsl
shll
jo
mov
adc
xchg
sbb
ja
adc
mov
fsub
bswap
leave
pop
cltd
in
xchg
push
inc
xor
cmp
cwtl
cmp
push
pop
in
pop
rcl
and
test
xchg
push
jns
ret
inc
imul
lcall
fdivr
xchg
sub
ljmp
testl
nop
sub
addl
int
mov
sbb
pop
pop
lods
push
icebp
or
jae
divps
fwait
dec
mov
cmp
repz
int3
lea
mov
lret
xchg
insb
adc
jnp
iret
pop
int3
test
cltd
adc
add
mov
outsl
aam
aaa
push
div
ficomps
aad
aaa
scas
mov
test
fldl
fdiv
clc
gs
stc
stc
pop
mov
add
sub
loop
ja
push
inc
jp
cmp
xor
rorb
in
and
sbb
lods
adc
jno
xchg
push
add
sarl
fidivrl
pop
add
aad
in
ret
cmp
or
cs
xlat
decl
mov
pop
jnp
or
sub
xor
int3
mov
aaa
xor
popf
and
jecxz
pop
leave
bswap
mov
push
mov
hlt
push
insb
test
sti
testl
lods
xchg
popf
fdivs
mov
mov
jecxz
xchg
mov
pop
mov
mov
aas
popf
cmp
in
sbb
in
or
and
mov
ljmp
xchg
hlt
cmp
rolb
mov
inc
lds
int
in
cmp
lea
idivl
cmp
pop
xchg
das
imul
repnz
or
xor
or
mov
sub
data16
dec
cltd
mov
push
fldcw
in
mov
mov
pop
iret
mov
mov
addr16
inc
inc
pop
ds
mov
popf
lds
xchg
adc
ljmp
add
push
dec
mull
dec
loopne
or
das
loope
sub
das
movsl
jmp
in
in
scas
sahf
mov
inc
mov
rorb
mov
neg
mov
out
outsb
mov
inc
ds
push
add
insb
jl
mov
jg
pop
adc
sbb
mov
xor
or
and
pop
sub
push
cmp
dec
sbb
sub
aaa
in
sbb
fstpt
mov
sub
ret
jae
daa
aas
inc
or
jmp
pop
jecxz
outsl
in
xorl
cltd
inc
scas
shlb
sub
push
scas
fldcw
insb
pusha
xor
das
mov
dec
rcr
lock
sbbb
bt
mov
andnps
xchg
mov
xchg
mov
lret
cwtl
shlb
pop
arpl
dec
scas
cmp
mov
xchg
test
push
ljmp
in
add
add
ss
mov
mov
dec
xchg
scas
jbe
data16
out
mov
push
dec
sahf
inc
adc
mov
lods
jbe
xor
das
fisubl
sub
repz
dec
xchg
stc
cmp
repnz
lcall
adc
sbb
dec
dec
cmpsl
sbb
pop
push
jbe
lret
bound
xor
das
pop
repnz
adc
clc
push
aad
rcrb
fnstsw
hlt
inc
adc
outsb
out
jmp
xor
adc
aad
leave
sub
jg
mov
mov
das
xlat
pop
adc
xor
bound
outsb
pop
dec
sub
cmp
nop
push
lcall
popa
mov
jg
insl
cmp
lahf
pop
in
outsl
sbb
sbb
or
xchg
in
stos
pop
cmpsl
dec
pop
adc
aad
mov
xor
cmpsl
add
push
in
icebp
addr16
adc
divb
addr16
insl
in
lds
pop
sub
in
inc
shl
jmp
jb
push
aaa
ljmp
sbb
sbb
cmpsl
jecxz
jp
adc
addr16
pusha
xchg
mov
jo,pn
stc
sbb
shl
cwtl
push
cmpsl
rcl
in
cltd
and
std
rolb
pop
js
pop
xchg
insl
mov
orb
dec
aaa
push
mov
int3
pop
lcall
push
aas
mov
cmp
jge
pop
cmp
call
and
lret
xor
sub
adc
pop
jns
lods
xchg
mov
cwtl
mov
sbb
mov
inc
cmp
bnd
sbb
pop
sbb
cltd
push
xor
mov
pop
push
lock
xor
push
out
int
les
jmp
imul
push
popf
sub
cmp
sti
and
or
cmp
outsl
mov
loopne
sub
scas
sbb
inc
mov
lea
imul
inc
fucomi
pop
shlb
loope
mov
fldcw
ja
or
and
jns
xchg
dec
inc
xor
js
fdivr
lods
leave
ljmp
cmpsl
jp
ret
mov
dec
xchg
aaa
mov
mov
pop
cmpsb
sbb
mov
fs
mov
ljmp
jns
pop
xchg
fwait
aas
mov
xor
enter
loop
xor
pop
leave
lahf
pop
pushf
insb
imul
fcmovnb
add
lea
sbb
hlt
lahf
scas
xchg
sub
push
jle
inc
test
adc
inc
inc
xchg
and
pop
ret
notl
daa
mov
ljmp
and
bound
clc
jo
or
test
std
enter
repnz
aam
cmp
sub
or
lahf
mov
rorb
push
mov
jmp
jae
mov
inc
rorb
jnp
mov
jae
cmp
add
sbb
negb
inc
fdivrl
das
or
test
or
cltd
adc
push
fsubrs
pop
sub
xchg
out
xor
inc
imul
pop
mov
loop
inc
lock
xchg
cmp
rclb
clc
aad
or
jbe
scas
push
xchg
repnz
or
sbb
pop
pop
call
and
dec
imul
mov
jle
in
cmp
pop
push
pop
mulb
or
imul
cltd
push
mull
subb
inc
mov
jecxz
push
aad
out
add
je
jl
xchg
mov
in
mov
rorb
shrl
int3
xorb
xchg
mov
sub
mov
pusha
out
mov
or
dec
cmpl
jnp
push
mov
sti
arpl
jmp
cmp
movl
fisubrs
mov
filds
or
aas
cmp
inc
push
dec
mov
icebp
xchg
and
mov
push
scas
push
addr16
daa
xchg
push
in
test
cmpl
adc
fnstenv
lret
scas
dec
loopne
test
flds
and
inc
cmp
xchg
insl
push
and
jo
daa
ret
icebp
and
shl
insl
adc
add
or
in
dec
scas
ret
in
pop
sbb
cwtl
cmpsb
adc
arpl
rcrb
in
outsb
subb
xlat
leave
lods
pop
inc
mov
xor
aaa
sbb
mov
xor
ljmp
push
int
mov
repnz
or
sub
mov
clc
lahf
ljmp
xchg
hlt
fwait
add
push
jno
leave
xchg
pop
xor
lret
cmp
jb
push
adc
and
sub
xor
and
aaa
sub
mov
pop
xchg
inc
rclb
xchg
cmp
lds
dec
mov
xor
adc
mov
ljmp
pop
bound
push
mov
mov
cmp
ljmp
lods
add
sub
test
stos
jge
jae
mov
mov
mov
stos
movsl
in
orps
dec
cli
sbb
out
pop
icebp
or
fisttpll
xlat
fistl
fistps
out
fsubr
movsl
mov
sar
test
fsubp
cmp
push
sahf
and
mov
xor
loop
dec
xor
mulb
jp
daa
pop
pop
stos
adc
mov
das
add
aam
push
jae
cmp
sbb
jp
addr16
test
pop
or
sub
inc
jae
sub
decl
cmc
mov
ja
es
push
stos
ret
rorl
or
mov
mov
jecxz
dec
sbb
out
int
pop
out
jge
loopne
jmp
cmp
lea
fisubl
insb
mov
add
test
mov
xchg
scas
daa
mov
inc
push
loop
sub
pop
sbb
xchg
or
push
mov
inc
jmp
movsb
jae
mov
shr
cmc
pusha
jmp
dec
das
gs
int
and
cltd
sbb
dec
jae
dec
push
push
xor
mov
dec
mov
negb
lock
xor
enter
stos
ret
xor
mov
and
or
imul
fmulp
jbe
jg
jle
pop
push
and
fucomi
jle
cs
loop
push
mov
inc
push
fistpl
gs
adc
pop
out
ja
mov
int
shl
cmpsl
loopne
mov
push
scas
xor
ds
repnz
adc
aas
adc
pop
icebp
sbbl
das
ficoms
xchg
ror
addr16
push
push
jge
lea
lahf
in
inc
or
push
xchg
xchg
lret
imul
outsb
mov
in
or
and
subb
xor
ja
sub
push
add
xchg
adc
imul
cltd
mov
jne
mov
inc
lcall
cmp
xor
cli
push
mov
and
int
adc
ljmp
adc
mov
sbb
cmp
jl
aad
and
dec
adcl
aad
push
fs
mov
lcall
mov
subb
ljmp
aas
and
fsubrp
mov
aam
out
jle
in
int3
es
iret
rcr
mov
cmp
clc
cwtl
sub
add
xchg
outsb
jo
inc
mov
ret
lahf
stc
dec
int
jnp
fcompl
xor
mov
inc
cmc
xchg
push
test
in
clc
cmp
inc
scas
mov
sub
cltd
mov
pop
mov
fmull
lods
inc
adc
xchg
jns
aam
test
iret
pop
orl
mov
jp
mov
andb
stos
outsb
call
into
inc
fs
lea
insb
mov
xchg
adc
out
fmull
in
out
neg
ret
rolb
ret
repz
add
lock
sbb
adc
mov
ret
andb
bnd
lea
pop
fldl
jecxz
xor
jmp
mov
aaa
inc
sbb
das
emms
sub
loopne
dec
and
sbb
sub
or
adc
jl
mov
jmp
xor
xchg
bound
outsl
xchg
loope
call
call
cmpsl
shrb
push
mov
jmp
or
jmp
sub
pop
push
ret
push
rclb
pop
xchg
mov
adc
lds
dec
loope
xor
popf
lahf
test
jne
pop
add
jns
add
pop
mov
test
aaa
cmpsl
sub
mov
add
mov
cltd
mov
cmc
adc
es
icebp
or
and
xor
ror
and
lea
sub
sub
stos
gs
subl
push
push
jge
out
aaa
icebp
out
xor
push
aas
ss
push
inc
add
stos
xor
push
test
jl
adc
mov
loopne
sub
cmp
cmp
mov
leave
pop
aaa
out
decl
jns
and
test
dec
xor
mov
mov
icebp
int3
insl
push
mov
sahf
loopne
test
ret
dec
in
imul
sub
mov
mov
lock
sbbb
or
xchg
imul
pop
mov
cmp
jl
hlt
or
push
inc
pop
lcall
inc
push
inc
cmp
out
mov
jl
lret
dec
das
push
icebp
jo
push
ss
jmp
insb
test
and
mov
lea
jmp
mov
int
pop
adc
or
jl
lock
add
mov
out
in
in
jl
data16
xchg
imul
test
cmpsl
sub
or
imul
xor
mov
adc
push
inc
xchg
inc
dec
out
and
jne
pop
iret
xchg
mov
adcl
je
mov
inc
addr16
ja
pop
cs
push
adc
sahf
push
repz
movsb
jbe
or
arpl
mov
xor
leave
push
cwtl
xchg
incb
ljmp
mov
jg
in
movsb
pop
or
push
and
mov
pop
jp
sub
push
loopne
xor
sub
mov
xlat
imul
popf
mov
dec
xchg
hlt
fmul
in
push
or
jmp
sbb
add
pop
sbb
pop
mov
xlat
cwtl
pop
sbb
adc
add
testl
inc
dec
mov
adc
push
dec
jecxz
mov
lcall
cmp
inc
xor
sti
cmpsb
push
js
fwait
mov
push
sti
or
pop
cli
xchg
lods
mov
inc
push
int
les
ret
mov
pop
scas
pop
mov
sub
pop
jne,pn
fs
fisttpl
jge
xlat
cmpb
or
sub
std
xor
insb
ret
shlb
mov
cltd
adc
dec
fcmove
fldt
test
pushf
xchg
or
push
sbb
sbb
sub
daa
rclb
dec
iret
mov
inc
xchg
outsb
xor
and
imul
aaa
add
cmpsl
add
add
push
sbb
fidivs
addb
es
lcall
in
incl
cmp
jmp
aam
je
mov
mov
movsl
push
cltd
xchg
cld
pop
loope
stos
imul
push
add
mov
push
dec
mov
ret
adc
pop
out
pop
out
and
mov
imul
out
andl
subl
adc
aam
jns
data16
mov
insl
mov
push
fsubrs
add
sbb
pop
fidivrl
jp
jp
adc
add
fidivs
mov
jecxz
pop
mov
orl
andl
sub
cmp
je
mov
pop
xor
mov
add
loopne
je
pushl
les
fwait
scas
sahf
aas
int3
dec
ss
xchg
push
movsb
push
in
daa
test
outsb
push
notl
outsb
add
jb
in
xchg
xchg
lret
mov
add
inc
dec
dec
xchg
call
and
loop
jp
lea
jge
adc
and
cld
push
mov
xchg
mov
fs
repnz
in
out
mov
adc
push
jge
ljmp
fdiv
dec
adc
call
or
sti
xor
pop
dec
jbe
dec
in
outsl
cmp
stos
mov
setns
mov
in
sub
jmp
adc
shll
aas
jge
and
pop
jmp
mov
cmp
mov
rolb
aam
mov
arpl
pushf
outsb
pop
out
mov
stos
std
cmp
fcompl
mov
testl
scas
xchg
inc
call
arpl
fstpl
aaa
lods
and
or
cwtl
jae
call
lods
jp
cltd
mov
and
sub
sub
xor
adc
dec
jno
cwtl
aad
lret
or
xchg
out
xchg
cld
fists
out
dec
jge
xchg
xor
cmpsl
mov
add
aaa
adc
mov
push
cltd
or
in
jo
or
incb
sbbl
mov
out
ret
je
incl
mov
sbb
fdivrl
hlt
lahf
daa
mov
pop
and
popa
add
mov
psubsb
dec
mov
sarb
imul
std
jp
xchg
mov
mov
hlt
cmc
jecxz
cli
dec
push
push
mov
or
arpl
mov
mov
in
rolb
or
aas
adc
aas
inc
push
sub
mov
movsl
pop
xchg
notb
test
test
xor
mov
clc
imul
xor
inc
xor
loopne
stos
sbbl
mov
movl
sub
push
xor
push
adc
fs
sbb
push
and
shlb
sti
xor
ret
xchg
dec
andb
pop
jp
and
xchg
nop
pop
cmpsb
fsts
xchg
cmp
push
and
push
xchg
loope
test
out
das
enter
les
mov
push
in
sub
ret
push
pusha
pop
iret
add
dec
dec
jb
cmpsb
cmc
sub
xchg
js
mov
pop
daa
mov
outsb
jno
mov
dec
xchg
or
sub
sbb
add
mov
dec
pop
push
imul
hlt
jae
jb
popf
pop
leave
aam
lcall
in
mov
rol
lret
dec
cltd
jmp
add
cmc
lods
sbb
add
mov
imulb
out
adc
cmc
pushf
cld
xchg
movsb
xchg
cli
xor
fxch
mov
imul
or
mov
fwait
stc
cmp
sub
jle
adc
jp
lret
adc
pop
jp
lock
orl
inc
jp
in
adc
aas
dec
pop
jb
es
aaa
xchg
xchg
push
movsb
xor
adcl
in
pop
or
push
je
loope
fildll
mov
enter
xor
mov
cmpsb
jae
add
push
mov
jae
mov
add
sub
sbb
push
mov
xor
sub
cmp
lods
sbb
push
addb
sbb
jbe
hlt
sti
mov
jg
hlt
pop
pusha
and
push
clc
icebp
or
inc
std
in
xchg
cmp
or
repz
std
mov
test
enter
sub
mov
mov
push
mov
les
ds
daa
out
and
popf
psubd
add
in
push
notl
jns
and
push
add
repnz
lret
inc
lret
dec
cmpsb
add
stos
sub
std
jo
movsb
aam
mov
mov
mov
shrl
pop
or
and
sbb
cld
sub
jbe
add
stos
pop
cli
add
jo
adc
pop
and
jge
imull
enter
adc
jne
and
sub
addr16
pop
sub
sarb
test
xor
dec
adc
jns
aaa
inc
jge
shlb
cwtl
das
in
roll
jge
movsb
and
roll
jno
mov
popf
xor
or
sub
sub
or
ret
xor
sub
rcrl
mov
dec
pop
stos
in
and
addb
lock
pushf
pop
dec
out
divps
adcl
mov
jmp
push
add
push
popf
repz
lret
pop
nop
xchg
or
add
js
push
cwtl
ret
pop
ret
bswap
dec
sbb
int
pusha
dec
insl
xchg
sbb
mov
and
xor
test
xchg
lahf
addr16
sbb
jmp
cmp
or
mov
test
mov
mov
pushf
cmp
adc
and
jmp
mov
push
and
mov
in
push
fwait
cmp
aaa
insl
mov
sbb
ret
or
pushf
hlt
pop
mov
fadds
repz
fidivl
dec
mov
fnstsw
call
sbb
sahf
imul
jp
push
outsb
sbb
rcrl
sub
jle
insl
mov
in
dec
pusha
ds
push
sub
cmp
push
cs
scas
test
addr16
repnz
movsl
pusha
popf
xchg
js
and
iret
and
pop
clc
xor
cltd
shlb
jnp
and
or
mov
xrelease
adc
pop
push
movb
sbb
inc
rcrl
iret
pop
das
or
lret
cltd
adc
pop
jge
mov
daa
dec
push
dec
divb
xchg
shrl
repnz
lds
imul
rcrl
les
xor
cmc
fsubr
or
xchg
not
inc
push
mov
test
or
adc
mov
repnz
rorb
inc
in
dec
xchg
fisttpll
insl
adc
arpl
addr16
xlat
jae
dec
sub
sub
sub
xor
mov
mov
int
out
in
xchg
add
fucomi
sahf
sbb
jmp
add
adc
repnz
mov
push
adc
sti
xor
clc
cmp
xor
mov
adc
out
xor
jo
popf
xchg
fdivrs
test
push
or
into
xor
xor
cmp
fcoms
fstl
push
mov
xchg
inc
pop
ret
inc
mov
dec
imul
cmp
loop
popf
inc
inc
fcoml
push
lock
add
cmp
shrb
xchg
ss
sbb
fldenv
in
adc
mov
lahf
outsb
aas
movsb
xor
jae
sbb
xchg
addr16
jg
fadd
incb
jg
scas
dec
jmp
or
pushf
sub
inc
aas
lahf
push
cmp
xchg
push
enter
pop
mov
pop
xchg
ljmp
push
add
loopne
or
sarb
xchg
addl
shll
dec
into
jecxz
sarb
arpl
adc
cli
xchg
mov
push
in
movsl
call
int
sub
and
test
jg
stos
push
popf
pop
jb
mov
adc
or
test
or
addl
mov
inc
xchg
fmulp
mov
and
and
sbb
dec
pushf
push
movsb
lods
jno
and
lret
xchg
fistps
push
jmp
ret
jg
das
add
adcl
cmp
imul
pusha
stc
into
sbb
cmpsl
into
dec
stos
icebp
ds
inc
xor
div
adc
shll
rcrl
lret
sub
or
pusha
pop
cli
inc
jae
imulb
adc
xchg
out
not
dec
inc
cmc
sbb
cmp
jns
xchg
movsl
iret
jno
inc
xchg
xor
hlt
rclb
cld
xchg
movsb
into
das
inc
lcall
cltd
dec
jo
xor
cmc
jl
cltd
pusha
loop
enter
sahf
fistps
clc
and
ljmp
mov
test
fstps
xchg
mov
jmp
ljmp
adc
mov
jo
push
ret
cmp
adc
int3
daa
sub
and
insb
in
xchg
pop
arpl
lahf
pusha
mov
out
lcall
in
inc
out
scas
mov
xor
incb
jmp
in
add
and
js
int
cmp
mov
inc
mov
data16
shl
mov
div
push
test
ret
fstps
jle
and
adc
out
or
cmc
int
add
stc
iret
movsl
xchg
lcall
pusha
xchg
cmp
jp
or
clc
ljmp
xchg
andb
add
js
inc
cmp
mov
and
cwtl
xor
pop
flds
mov
inc
movzbl
fwait
iret
and
mov
je
int3
pop
add
dec
aam
dec
mov
cmp
mov
lret
pop
pushf
int
dec
xchg
cmpsb
jno
pop
test
faddp
enter
addr16
adc
stc
jle
je
xor
ljmp
adc
addr16
jns
mov
je
jne
dec
scas
cmp
ss
xor
sahf
out
test
nop
jle
cmpsb
inc
into
sbb
iret
add
aad
call
mov
cmc
add
fldenv
insl
push
jle
lret
and
rcll
jbe
stos
jne
sbb
dec
mov
and
cmp
lret
addl
dec
stc
shll
pushf
dec
add
andl
push
lcall
mov
outsl
fstpt
gs
jmp
incb
lock
push
pop
mov
cld
das
sahf
inc
mov
je
xor
and
sub
mov
lcall
imul
jbe
clc
xchg
jmp
fs
mov
test
pop
sub
cmp
jo
movsl
imul
mov
popf
aas
shrl
and
push
adcl
mov
outsl
fwait
sub
push
arpl
cs
outsb
popf
adc
cltd
jbe,pn
frstor
scas
jns
imul
arpl
sub
push
xchg
stos
pop
inc
push
stos
inc
hlt
cmp
insb
xor
sub
imul
clc
and
hlt
cmpsl
inc
sar
mov
std
test
test
mov
inc
jg
sarb
jle
adc
icebp
hlt
xor
mov
je
or
clc
in
int
xor
cmp
call
pop
xchg
in
shrb
pop
cmp
mov
imul
cmp
adc
mov
pop
push
das
arpl
mov
imul
pop
stos
sub
repnz
mov
loopne
lahf
inc
adc
call
mov
rorb
imulb
inc
movl
jmp
test
push
mov
in
sbb
clc
fdivp
or
shl
mov
dec
js
and
sbb
dec
es
std
iret
adc
stos
inc
pop
data16
mov
aad
push
in
shlb
stc
and
lods
sbb
push
or
or
in
push
jge
popa
inc
inc
aas
adc
sub
and
rolb
or
and
call
scas
ds
fimuls
xchg
mov
shrb
jns
sti
imul
mov
xchg
fdivrl
or
mov
cmpsl
sar
mov
jmp
mov
add
mov
cmp
mov
sbb
sahf
les
pop
push
fwait
lret
sahf
mov
dec
xchg
popf
loop
push
jmp
xchg
sbb
shll
aas
push
sub
sti
mov
ljmp
out
dec
fistpll
gs
or
push
loopne
sub
add
lods
mov
jb
lds
imul
push
cmpsl
cwtl
pop
push
rorb
push
and
add
pop
mov
idivl
dec
loopne
xchg
mov
cmp
test
out
stos
orl
push
inc
nop
dec
test
inc
or
in
les
fcoms
arpl
stc
push
jne
adc
lds
movsl
andl
stos
dec
imul
sbb
mov
sbb
mov
xchg
xchg
pop
dec
mov
or
jno
in
js
out
or
xlat
mov
lods
nop
dec
sahf
mov
bound
cli
mov
or
mov
ret
jmp
push
add
push
lock
test
pop
testb
enter
pusha
stos
out
clc
lcall
in
cmpsl
adc
aas
dec
dec
mov
js
adc
jo
cmp
push
dec
das
stos
cmp
test
ljmp
sbbl
mov
jno
or
mov
fstl
pushf
imul
sub
jp
sub
push
xor
xchg
aaa
mov
enter
ja
out
outsb
sysenter
loope
lret
or
in
mov
mov
stc
ret
dec
movsb
and
mov
sbb
bsf
pop
daa
cmp
push
aam
call
and
mov
sbb
popa
pop
repnz
jl
mov
pop
loopne
frndint
gs
jb
inc
xchg
in
shlb
sti
sub
dec
mov
push
dec
cmc
insb
pop
xchg
mov
xor
inc
jno
not
mov
xchg
in
test
cmp
cltd
int
repz
stos
mov
aam
mov
ss
mov
popf
mov
test
mov
cs
push
sbb
sbb
jmp
scas
dec
movsl
inc
popf
insb
cld
inc
out
movsl
lret
lret
ss
fldt
add
pop
inc
fisubrs
imul
jno
es
jno
loope
fcomps
jb
xchg
push
into
insl
inc
shl
lahf
arpl
and
mov
sti
in
scas
inc
sbb
stc
js
mov
xchg
dec
aas
mov
cli
push
dec
xor
or
xchg
mov
cmc
sti
and
sub
xchg
sub
roll
scas
imul
pop
pusha
rorb
out
fists
xchg
dec
rcr
dec
add
fsubs
mov
aam
lock
pop
jge
mov
out
decb
nop
addl
je
das
pop
sub
mov
or
xchg
sbb
call
stos
mov
cltd
mov
mov
inc
xchg
stos
cwtl
mov
mov
in
loopne
fildl
pusha
inc
mov
ljmp
sbb
dec
lret
sub
mov
push
loop
push
stos
and
fists
lahf
add
arpl
divb
arpl
popf
aas
xor
sub
out
adc
sahf
pusha
leave
mov
subl
xchg
je
loopne
adc
inc
cmp
insb
sub
push
inc
lret
cmp
into
dec
cmp
mov
mov
loop
cmp
xor
adc
adc
js
xchg
mov
inc
cwtl
sub
jne
aas
cmpsb
sbb
add
enter
fs
sbb
push
mov
aad
pop
xlat
rcrl
pusha
mov
mul
sbb
es
mov
inc
dec
mov
stos
lods
mov
push
arpl
ss
adc
andl
push
mov
dec
nop
push
mov
shrl
pop
push
orb
sbb
cli
push
mov
mov
jg
push
lahf
fs
fistl
loope
or
sbb
pop
rcll
sbb
jmp
jp
mov
mov
dec
mull
out
sub
mov
fcoml
ret
stc
xchg
clc
jp
push
cld
insb
or
or
repnz
icebp
xlat
mov
jb
pop
scas
lret
popf
push
in
xor
pop
push
xchg
test
adc
pop
cwtl
push
sub
and
test
mov
dec
push
xlat
pop
xor
sarl
mov
jmp
stc
or
dec
sbb
xchg
xchg
lds
div
gs
mov
mov
mov
ds
inc
lret
adc
loopne
std
mov
int
cli
nop
ljmp
out
icebp
lcall
ret
pop
pusha
sub
mov
repz
pushf
add
mov
into
lock
pop
scas
fiaddl
aad
imul
and
pop
js
bound
leave
das
outsl
repz
sbb
hlt
push
ss
ja
outsl
ds
lret
test
adc
stc
aad
cwtl
xor
ret
in
aaa
jns
call
sbb
outsl
aad
pop
jns
leave
mov
mov
sbb
ss
or
cmpsb
and
das
push
ss
push
xchg
mov
mov
xchg
ja
test
leave
or
xchg
out
je
sbb
add
mov
mov
pop
cmp
fdivrs
sub
mov
rolb
cltd
add
scas
cmp
and
mov
cmp
clc
outsb
push
scas
mov
jne
sub
adc
add
jb
push
setno
dec
and
shl
cmp
sub
push
jnp
sahf
fbld
adc
xor
inc
std
bound
mov
loope
outsb
jb
push
adc
outsb
mov
pop
cs
mov
adc
cmpsl
dec
push
cwtl
iret
dec
pushf
loop
mov
sub
movsb
cld
add
mov
inc
push
jge
imul
xor
pop
rolb
shrb
pop
fldenv
lods
loop
sbb
cltd
sbb
fs
xchg
dec
pop
jno
loopne
xor
loop
dec
mov
push
mov
inc
inc
jno
shll
push
or
dec
sub
push
or
popa
out
pop
xchg
in
dec
xor
ljmp
jno
pop
cs
cs
aam
aad
clc
sti
std
mov
in
mov
cmp
outsb
xor
sub
std
pop
xor
dec
dec
iret
arpl
lret
das
xor
sbb
into
push
mov
sbb
push
ja
cmpsl
cmp
fs
xchg
dec
loopne
jl
inc
xor
adc
sti
adc
mov
pop
arpl
or
push
or
mulb
or
sub
jle
rorb
add
mov
jge
ja
fbstp
xchg
loopne
movsb
addl
mov
mov
subb
rcrb
insl
arpl
rorb
lea
iret
shrb
mov
jns
fidivl
stc
push
outsl
dec
adc
lret
xor
outsb
cmp
jg
xor
cmc
out
fstpl
loopne
insl
inc
push
inc
cmp
or
mov
inc
mov
es
jnp
testb
cmp
xchg
adc
fs
jge
sub
ljmp
xor
add
sub
and
imul
ljmp
frstor
aam
add
enter
or
mov
test
cmpsl
xchg
cs
negl
sub
fisttps
test
out
shrl
push
out
adc
xor
sbb
mov
in
mov
cmp
cmpsl
enter
xor
inc
movsl
xchg
lahf
cmpsb
dec
movsb
lcall
shlb
inc
push
jmp
jl
orl
int3
repnz
push
jo
stos
stos
or
mov
test
mov
xchg
jp
push
lea
adc
leave
std
es
xor
ss
popf
clc
mov
mov
pop
insl
jp
das
mov
mov
cli
clc
cmc
push
push
testl
xor
inc
or
push
cmp
stc
sbb
repz
popa
mov
sbb
mov
in
mulb
imul
test
aas
mov
sub
xchg
and
sbb
bound
xor
push
movsl
out
das
xorl
mov
pop
xor
data16
mov
xor
imul
int3
ljmp
fdivs
push
les
pop
pop
push
jo
inc
or
mov
add
push
mov
mov
sti
add
dec
xchg
test
xchg
push
xchg
fistps
addl
sbb
shrb
add
clc
in
push
sahf
roll
cli
lods
xor
enter
mov
sub
push
push
lods
mov
mov
sbb
lret
push
push
push
xchg
mov
bound
jl
in
test
jne
dec
xor
dec
push
test
xor
movsb
lods
test
sub
jno
inc
inc
xchg
sub
ja
dec
test
es
mov
or
pop
xor
lods
outsb
jno
pusha
mov
aad
sub
xchg
mov
int
lret
in
test
pop
jmp
xchg
pusha
enter
sbbl
mov
mov
imul
outsb
jl
sbb
mov
mov
into
mov
mov
pusha
xchg
mov
into
add
add
dec
fildll
fcmovnu
in
in
xchg
fidivrl
jle
push
jmp
jno
inc
loop
xlat
pop
arpl
popa
clc
loopne
nop
adc
in
pop
repnz
sub
push
jmp
add
xchg
dec
lret
in
lret
push
and
xor
cs
add
mov
mov
mov
dec
out
sbbb
and
dec
addb
xchg
and
sti
jns
pop
loope
mov
pop
in
pop
in
dec
repz
add
mov
icebp
shl
test
stos
test
xor
aad
lock
ret
cltd
push
pop
mov
mov
pop
or
and
xchg
or
scas
popf
fisubrs
push
adc
push
adc
cmp
dec
stc
adc
aam
fsubrs
andl
icebp
loope
mov
dec
cmc
xlat
cmp
loope
je
lcall
mov
sub
int
shlb
pop
test
ret
xor
loope
adc
icebp
mov
mov
jl
adc
cltd
mov
push
std
lret
sahf
push
mov
adc
les
ja
loop
xor
arpl
stc
jnp
jecxz
and
repz
out
scas
push
movsb
jl
or
iret
lock
add
cmp
incl
mov
mov
dec
mov
xchg
cmpsb
inc
outsb
cmc
sub
inc
mov
pop
mov
or
lds
dec
imul
xor
js
aad
mov
sbb
pop
mov
jmp
dec
cmc
jb
mov
adc
dec
mov
pop
dec
inc
mov
lds
lds
xor
mull
mov
cwtl
les
cmpsb
popa
enter
clc
pop
cwtl
mov
iret
mov
in
incb
jb
or
push
inc
test
add
xchg
mov
pop
push
stos
idivl
sbb
sahf
xor
inc
repz
jge
data16
mov
add
mov
and
lds
dec
in
int3
sahf
cli
adc
mov
outsb
lcall
cs
insl
pop
lcall
cs
in
inc
jb
test
add
sarl
cmp
cmp
mov
and
cmp
shrb
adc
sbb
xchg
stos
adc
pop
repz
loop
dec
jb
popf
mov
movsb
sbb
in
adc
out
sbb
or
cmpsl
push
pop
pop
cmpsb
jl
push
sbb
mov
sbb
xor
cwtl
lods
xchg
mov
pop
mov
cmpsb
push
add
andb
pop
js
nop
add
pop
out
out
add
test
pop
xor
inc
cmp
fistpl
add
jmp
pop
rcl
cltd
out
cld
pop
roll
ja
inc
pop
test
jo
dec
mov
or
fldenv
push
rclb
and
lock
sbbl
dec
dec
sbb
jle
stos
xor
movsl
mov
fs
mov
cli
push
fsubr
and
mov
xchg
xchg
mov
inc
or
mov
lock
divb
lret
stos
cmc
stos
adc
xchg
xor
mov
and
jnp
push
imul
and
inc
stc
loope,pn
popf
jne
insl
test
xchg
mov
mov
mov
fldcw
sbb
jg
stc
movsb
cltd
test
mov
pop
test
fs
inc
ret
fisttpll
jne
repz
cmp
pop
lods
dec
adc
mov
sub
cmp
lcall
cwtl
add
mov
jge
shrb
inc
add
jb
sahf
lock
int3
stc
adc
sub
adc
xchg
and
cmpsl
pop
frstor
sbb
popf
mov
sub
xor
mov
mov
testl
das
cwtl
mov
lcall
mov
cmpl
and
cld
lret
jl
js
lret
ja
adc
out
aas
lret
notl
jg
and
dec
daa
jne
andl
je,pn
mov
sarl
pop
adc
add
add
bound
repz
sub
adc
insl
adcb
cmp
jge
shrl
pop
adc
or
push
gs
push
fwait
in
jp
xor
pop
je
inc
rorl
lds
and
mov
xor
jmp
mov
xchg
mov
int3
adc
xor
adc
cld
pop
dec
pop
push
mulb
popl
jb
mov
lods
je
fsubrp
arpl
stos
stc
movsl
lea
cmp
inc
jmp
xor
cmp
cmp
js
mov
sub
jno
out
jp
add
jl
mov
or
sbb
les
data16
jmp
std
jae
dec
orl
icebp
jecxz
fldl
lods
mov
or
sti
arpl
stc
add
sub
pushf
or
repnz
cmpb
add
mov
cmp
xor
fistl
clc
fcmovnu
mov
mov
sub
xchg
lahf
insl
imul
dec
lods
rcr
sbb
shll
insb
sbb
push
mov
fwait
test
jl
xchg
repnz
aam
inc
mov
sub
popf
bound
mov
and
call
repnz
aaa
pop
mov
movsl
jmp
mul
mulb
jecxz
pop
mov
out
sbb
dec
addr16
dec
lcall
mov
lret
sub
xor
adc
inc
ja
imul
add
or
fs
into
mov
pop
inc
das
loopne
dec
push
arpl
scas
push
ljmp
out
mov
xchg
xor
mov
shrl
and
rcrb
xchg
jecxz
outsb
pop
aas
dec
sub
add
jg
xchg
enter
pop
adc
aas
sbb
mov
adc
loop
inc
lds
xor
stc
in
and
push
stos
ret
push
mov
lods
xchg
lcall
push
fstl
and
in
inc
jmp
cmpl
imul
iret
js
and
das
dec
mov
dec
or
mov
lret
stc
jl
and
loope
push
test
inc
lds
out
push
cmc
pop
int
mov
jne
cld
mov
adcb
jmp
adc
adcb
js
cmpsb
into
enter
ss
xchg
in
or
push
pop
dec
insl
test
dec
or
mov
cmpsl
xor
lret
mov
clc
sbb
popa
pushf
in
lcall
mov
or
adc
enter
mov
mov
pop
pop
stos
mov
pop
sbb
sahf
adc
dec
inc
ret
out
arpl
xchg
fwait
sub
or
sbb
push
xor
dec
lret
sbb
cmp
mull
loopne
dec
sub
cli
jge
andb
clc
mov
sub
in
iret
pop
xor
stos
jg
pop
cltd
adcl
xor
mov
pop
ljmp
int3
iret
or
sbbl
pop
rorl
das
inc
out
fidivrs
push
lds
push
test
in
jb
xchg
orb
pushf
mov
inc
cmpsl
pop
xor
jns
adc
dec
jecxz
rolb
shll
imul
xchg
push
ds
fs
mov
push
dec
mov
push
repnz
lret
mov
lahf
sbb
and
enter
es
mov
vmovdqa
and
mov
lods
lcall
xor
cltd
rorl
pop
dec
add
xor
xchg
insl
xchg
test
and
pop
insl
test
mov
add
bound
loopne
jmp
orl
mov
xor
mov
stc
mov
std
push
pop
jnp
cld
dec
je
pop
loopne
add
mov
pop
push
mov
mov
xchg
mov
outsl
jecxz
mov
addr16
mov
fwait
addl
loopne
xor
in
pop
fisttps
pop
and
pop
fisubl
jp
out
or
mov
adc
es
jge
sub
mov
mov
inc
out
out
idiv
pop
mov
or
jnp
cld
loop
clc
mull
xchg
jno
mov
test
imul
aaa
add
mov
push
mov
jge
mov
or
adc
int3
pop
adcl
int3
scas
jg
fdivl
cmp
std
mov
lds
out
push
je
fldl
jbe
jecxz
and
popf
jge
mov
and
jp
fwait
test
jo
stos
push
lods
test
mov
and
stos
xchg
sbbl
loope
adc
pusha
xchg
push
push
scas
iret
lock
outsb
enter
clc
cmp
push
pushf
adc
shl
fsubl
or
xchg
aas
loope
pop
cmp
mov
mov
ret
cmc
mov
jb
repz
pop
mov
gs
or
jae
sarl
in
jns
and
cmpsl
ljmp
dec
inc
dec
cmp
pop
push
mov
iret
sub
test
rclb
dec
dec
pop
push
bound
test
out
pusha
mov
aaa
into
cltd
cld
cli
jl
ljmp
in
push
shlb
call
sti
mov
hlt
inc
js
mov
xchg
pop
out
fcoml
test
test
orl
mov
leave
test
cli
push
addr16
sub
fs
mov
cmp
inc
push
insb
pop
dec
mov
shrb
scas
mov
pop
arpl
push
in
sbb
aaa
adc
mov
dec
aam
push
data16
insb
mul
mov
sub
push
jge
aas
ss
sub
mov
and
adc
rcl
call
outsb
sti
clc
sub
adc
and
mov
and
roll
xchg
jno
bound
icebp
mov
fs
ds
xchg
inc
xor
mov
mov
mov
movsb
in
xchg
lret
jp
xor
pop
and
mov
aaa
clc
jns
adc
mov
cmp
lret
fisttps
jmp
insl
mov
push
push
aad
mov
fstpt
xchg
push
and
xor
cmpsb
cmp
dec
push
adc
das
call
dec
pop
clc
mov
imul
fst
adc
sub
inc
sub
cltd
xchg
lret
jmp
and
adc
movsb
data16
jle
fcoms
aam
aaa
inc
pop
sbb
add
test
jnp
aam
and
inc
sub
ret
jecxz
enter
in
add
pop
scas
jmp
lret
sbbl
cli
out
loope
into
movsl
cmp
cld
enter
out
sti
in
jl
cmpsl
mov
jmp
insl
xor
add
sti
mov
sub
sub
xor
xor
xchg
pop
clc
sub
cmp
int
pop
inc
lret
sub
jmp
je
mov
push
scas
cmc
pop
lods
les
inc
jl
rorl
ficoml
mov
cwtl
movsb
or
and
fwait
scas
cmpsb
add
les
jp
js
push
ja
outsl
dec
ss
cmp
mov
lret
xchg
icebp
jbe
stos
xor
xadd
negb
stos
call
rol
in
jne
idivb
push
jno
mov
out
sub
mov
sub
pusha
in
and
jnp
sub
jmp
out
sbbl
pushf
arpl
jbe
std
aaa
mov
cmpsb
lods
rcl
fs
xchg
lcall
sub
jne
adc
pop
jp
inc
xchg
xchg
cmp
pusha
jbe
add
cld
or
push
cltd
pop
sub
adc
xor
or
mov
xchg
jne
hlt
sub
lcall
dec
aas
iret
nop
or
leave
adc
push
mov
mov
outsb
sub
ud0
pop
stos
mov
pusha
sbb
pop
fbstp
or
push
mov
fists
sbb
aam
add
cltd
ja
stos
sbb
je
lea
jbe
cld
sbb
roll
int
cmp
xchg
rclb
or
rorb
adc
xchg
cli
pop
scas
lret
pop
scas
xchg
enter
fwait
arpl
inc
and
out
dec
cmp
sahf
cmp
xchg
arpl
add
xchg
int3
mov
icebp
pop
out
mov
addr16
fstpt
ficoms
mov
dec
int3
inc
jl
cltd
sub
inc
jmp
xor
mov
imul
rorl
gs
mov
cmp
popa
push
sub
and
mov
jl
sbb
add
pusha
mov
or
sti
mov
pop
test
jecxz
bound
mov
lods
push
xchg
fisttps
dec
outsl
dec
or
push
push
outsl
mov
fsts
insb
or
inc
lcall
pop
jno
mov
mov
cltd
lock
mov
push
rcll
jmp
daa
jmp
lcall
lahf
push
or
out
outsl
mov
pop
lods
movsb
aad
jle
pop
lahf
pop
adc
cmc
mov
out
push
dec
incl
push
xchg
pop
test
ljmp
scas
adc
addr16
lret
dec
lods
mov
or
loopne
daa
in
imul
fwait
add
adc
or
into
js
cltd
clc
add
mov
xchg
rorl
add
out
rclb
push
loop
js
in
lahf
jb
aaa
out
cmp
cmp
out
mov
dec
cmpsb
cmp
adc
pop
sub
adc
sbb
lds
push
or
push
shrl
jg
add
sub
outsl
fucomp
pop
jae
dec
in
push
flds
xlat
mov
sbb
sahf
das
out
mov
mov
dec
adc
xchg
add
sub
push
test
ss
mov
pop
in
sbb
bnd
je
in
cltd
sahf
pop
add
xor
ret
inc
ret
jmp
cwtl
hlt
test
sub
cmp
lret
ret
rorl
nop
es
and
leave
and
dec
aam
sub
test
loopne
mov
sbb
add
and
jge
jg
hlt
daa
push
rorl
push
rorl
sbb
cli
mov
pushf
cmp
pop
push
jmp
lret
shll
pop
or
jge
cld
ja
ss
xor
push
hlt
add
cmpsl
jo
adc
out
lret
mov
iret
xchg
pop
jne
loope
sub
xchg
shlb
sub
shlb
pop
and
jbe
daa
aaa
enter
and
addr16
cmpsb
ja
sub
jl
cli
je
sbb
mov
mov
in
push
lock
stos
scas
dec
xor
pop
push
xchg
popf
xchg
out
test
cmp
out
xor
cli
inc
shrl
mov
int3
scas
in
xor
cld
mov
daa
ljmp
xchg
jo
stos
push
mov
xchg
add
xchg
jmp
testl
andb
jne
out
insb
push
and
cmp
dec
jnp
movsb
clc
pop
ja
add
jge
push
push
ret
ja
lcall
pop
mov
push
outsl
fdivrl
hlt
test
adc
ret
nop
xchg
loopne
scas
adc
cltd
mov
mov
fs
push
adcl
jnp
fmul
jge
inc
pop
div
sbbb
push
jne
mov
sub
lea
int3
cmp
dec
fcom
pusha
stos
jnp
push
and
mov
add
jmp
ljmp
cmp
dec
gs
sub
dec
aas
mov
fldcw
sub
pop
and
and
pushf
mov
jnp
insb
out
fwait
mov
sbb
into
subl
sbb
shll
cmp
or
fidivrs
lcall
jmp
mov
jp
jnp
shlb
sub
mov
jnp
adc
popa
push
in
xor
mov
fwait
cs
sbb
cmp
nop
cmp
xlat
in
jge
mov
sub
cmp
rol
hlt
ja
sbb
loopne
and
jl
pushf
sti
add
repz
lea
movsb
movsb
mov
imul
inc
call
adc
jecxz
outsb
mov
push
enter
jo
xor
lods
cltd
jbe
cmpl
movsb
jmp
and
ja
rcll
out
or
cmc
cmpsl
xor
or
jg
pop
jmp
push
sbb
divb
sub
mov
repnz
pushf
xor
cmpsb
cwtl
ret
stos
xor
call
dec
out
fstpt
movsb
add
cmpsl
imul
xor
sub
fimuls
jb
or
and
pop
push
cmp
cmpl
cmp
into
loopne
leave
notl
xchg
sbb
mov
repnz
idivb
jmp
pop
inc
push
mov
push
lret
sub
scas
rcll
dec
and
xchg
nop
dec
loope
mov
push
in
pusha
adc
mov
mov
mov
je
and
popa
push
add
fdivs
in
mov
or
ficompl
outsl
pusha
push
and
sbb
ret
aad
stos
mov
insl
mov
mov
mov
in
pop
push
inc
call
addr16
mov
cmp
jns
ljmp
cmp
dec
mov
je
push
mov
test
in
pushf
fdivp
mov
fadds
mov
in
or
jae
cmpsl
cs
inc
mov
imulb
sbb
xchg
iret
sbb
pop
sar
xchg
pop
cmp
stos
and
jnp
jl
mov
cmp
in
xchg
imul
fisubrl
outsl
out
jns
rorl
mov
stos
filds
insb
mov
mov
xchg
aad
inc
dec
sub
lret
push
xchg
hlt
lcall
enter
mov
pop
or
push
movsl
in
not
out
xor
inc
mov
adc
mov
lea
inc
dec
fsub
cwtl
or
jmp
mov
repz
jmp
xchg
fidivs
popf
cmp
dec
sub
dec
lock
repz
fnsave
lret
das
mov
pusha
lods
lods
popa
jb
push
push
jno
pop
push
jnp
shrb
lahf
lcall
in
sbb
push
daa
pop
add
push
and
ss
sub
mov
pop
sbbb
rcl
cli
xchg
lret
test
push
test
xor
sbb
and
lcall
imul
repnz
repnz
xorl
and
sub
jmp
xchg
mov
mov
js
push
jno
mov
mov
mov
js
cmp
jl
aam
inc
adc
inc
hlt
addb
movsb
mov
cmpsl
aaa
data16
mov
inc
fbld
addr16
pop
jno
xor
jp
sub
outsb
inc
sub
aam
sarl
mov
and
dec
sbb
movsl
mov
lock
mov
ret
mov
jp
cmc
out
xchg
loope
popf
inc
pop
enter
sub
roll
add
das
aad
xor
and
rorb
lock
mov
out
out
nop
add
lret
pop
cmp
mov
test
jmp
push
into
ja
mov
pop
xchg
xor
xlat
xchg
xchg
mov
ret
mov
cwtl
scas
loope
stc
mov
out
push
jo
rcrl
push
cli
adc
data16
cmp
int
pop
dec
in
enter
sbb
add
push
or
int
test
inc
mov
loop
jmp
fdivrp
push
gs
ljmp
mov
pop
push
jl
sbb
stos
xchg
inc
or
sbb
jne
aam
loop
inc
rcl
mov
mov
pop
sub
adc
sub
sbb
lcall
adc
pop
mov
push
sbb
or
rcrb
lret
lea
inc
mov
test
jns
movl
push
ret
mov
inc
pop
insl
fimuls
mov
xor
repnz
mov
cmp
or
ja
and
xchg
ret
jnp
dec
ss
jge
pop
movsl
mov
lds
enter
andl
mov
lret
scas
dec
inc
push
cld
cmp
or
pop
out
sahf
jl
jg
sar
fldl
movsl
ds
bound
pusha
mov
out
mov
mov
js
pop
xchg
mov
cmp
inc
iret
sub
pop
cld
jg
cmp
sahf
ss
lds
addr16
xor
stos
jns
inc
mov
orl
jge
xor
ret
or
subl
jmp
and
jno
je
dec
xchg
xchg
jb
adc
in
cmp
xor
lahf
insb
push
mov
push
aaa
mov
in
jns
roll
shr
xchg
fs
dec
adc
push
pop
push
inc
jg
jmp
out
xor
pop
jmp
pop
mov
add
sub
cmp
pop
lea
orl
inc
cmp
lock
cmpsb
lock
push
jo
in
nop
inc
aas
filds
add
or
mov
loopne
in
hlt
pop
cmp
jno
int
lock
daa
imul
or
xchg
xor
lcall
xchg
daa
add
inc
in
sbbb
mov
jnp
mov
sub
push
fsub
cmp
sbb
in
fxch
ret
movsl
adc
int
adc
mov
jg
cmp
pop
cld
rcrb
lcall
xor
and
sahf
or
mov
sahf
fbld
add
jle
xchg
cmp
aam
xchg
adc
outsl
addr16
loope
test
rcl
push
adc
adc
je
dec
push
repnz
cld
xlat
mov
mov
and
cmp
xor
stos
pop
cmpsb
xchg
jle
xchg
mov
movsl
cmp
out
dec
or
mov
jbe
repnz
pop
cmp
xchg
sub
orl
js
cs
xchg
cmp
lock
mov
je
das
repz
inc
cs
lock
lahf
int3
popa
fs
pop
das
cmp
jl
mov
mov
adc
adc
sbbb
lahf
imul
and
fwait
sub
pop
fsubrp
mov
insb
shlb
mov
mov
scas
das
mov
mov
cs
jnp
pop
ljmp
xor
dec
rolb
cli
xchg
ja
mov
loopne
pop
mov
filds
dec
xorl
jnp
test
inc
cs
cmc
int
loop
repz
sub
aam
inc
xor
pop
push
ljmp
hlt
cmp
and
movsb
shl
jmp
cld
push
add
adc
imul
mov
fsubrp
sub
adc
iret
sbb
adc
cmp
cmp
push
mov
int3
or
pop
in
adc
mov
nop
pop
or
xor
lock
pop
fistl
mov
aas
dec
or
jmp
dec
sbb
cwtl
add
daa
leave
mov
cmpsb
push
ljmp
out
data16
dec
fdivs
mov
cmp
dec
lahf
adc
daa
mov
sbb
jecxz
sub
mov
mov
fcomi
fwait
sbb
es
sbb
mov
xchg
ds
xor
aad
in
sahf
aad
les
and
dec
mov
lock
adc
mov
fistpl
sbb
nop
loopne
nop
sub
fdivrl
cmc
popf
dec
imul
push
rolb
movsb
jg
int
arpl
xchg
and
sub
daa
outsb
push
subl
xchg
lock
out
out
pop
cwtl
dec
lcall
minps
iret
fsub
sub
push
out
aaa
jno
and
dec
push
jns
mov
dec
jle
arpl
mov
ss
xchg
mov
or
lock
jecxz
mov
jp
call
add
jecxz
test
sub
mov
mov
push
mov
push
fcoml
add
pop
pusha
push
jno
daa
mov
shrb
or
outsb
mov
int3
mov
fcmovbe
mov
subl
icebp
cltd
push
cmpsb
xlat
and
cmpsb
pusha
lods
jecxz
out
addl
xor
adc
add
jbe
lea
lea
andb
dec
pusha
sbb
mov
int3
xchg
sbb
xchg
or
fldl
sbb
mov
gs
cmp
or
fdiv
mov
cmpl
xchg
rcr
fnsave
sub
cmc
lcall
push
mov
repz
popa
jle
les
pop
cltd
lahf
loopne
andl
scas
mov
ja
pop
pop
in
int3
dec
pcmpgtd
test
scas
inc
or
ret
add
insb
sbb
outsb
negb
cmc
jge
ss
xor
and
in
lods
mov
dec
xchg
fwait
cmc
pop
std
or
scas
mov
mov
sub
xchg
or
xor
fucomp
into
test
sbb
xchg
or
mov
cmp
and
and
cmp
mov
in
sbb
cwtl
or
pop
in
push
fstps
lret
aas
lea
and
popa
xor
outsl
iret
imul
idivl
shll
push
jne
xchg
jns
xchg
push
push
fsubrl
ficompl
xor
aas
and
push
jnp
cmp
fcoms
xor
test
mov
and
cld
cltd
mov
popf
outsl
mov
push
mov
pop
sub
add
pop
movl
stos
jnp
cwtl
rolb
pop
add
add
dec
int3
inc
push
add
out
and
cwtl
orl
enter
jecxz
xchg
xor
sub
data16
push
es
or
mov
add
mov
and
xchg
lcall
mov
xor
sub
jae
push
data16
add
jbe
mov
pop
mov
ja
popa
push
mov
xor
lds
imul
test
out
repnz
jle
mov
mov
jbe
sbb
push
or
cmp
pop
pop
xchg
ss
outsl
pop
bound
arpl
xor
notl
lock
rep
push
jmp
xchg
adc
or
or
iret
imul
or
push
or
cmp
xor
lcall
lret
movsb
sahf
mov
add
inc
pop
push
add
dec
fwait
repnz
cld
cmp
out
mov
inc
repnz
outsb
inc
jp
xchg
dec
leave
insb
cmp
adc
aas
dec
fdivr
dec
or
mov
loop
xor
jbe
cmovae
fcompl
push
mov
sub
add
mov
ljmp
inc
clc
adc
aam
cli
cld
push
sti
add
cwtl
add
push
insl
in
mov
das
fldl
ljmp
adc
xchg
fnstsw
inc
lds
popl
adc
lods
pop
inc
push
mov
jae
in
and
jno
loope
sub
stc
inc
mov
icebp
ror
dec
jmp
aas
push
repz
sub
jl
les
pushf
roll
mulb
rcrl
gs
pushf
jecxz
jle
hlt
lcall
bound
pop
je
sbb
or
pop
add
pop
dec
icebp
notl
fdivl
mov
pushf
les
dec
xor
pop
popa
jae
addr16
hlt
inc
and
out
xchg
pop
in
xor
or
iret
pop
or
mov
test
ja
xor
ja
out
lcall
daa
int3
into
or
out
int
lcall
sub
sbb
ret
add
scas
mov
dec
adc
mov
bound
inc
xchg
clc
scas
or
aaa
outsl
fucom
sub
dec
xor
mov
jp
mov
scas
push
adc
cmovl
ja
cmp
insl
xor
ds
sbb
sub
or
inc
xor
lret
rol
adc
push
add
rcrb
inc
cmp
jmp
mov
pop
enter
xchg
add
cs
and
mov
gs
in
je
ret
iret
mov
xor
sti
fildll
pop
stos
daa
bound
imul
pop
cs
pop
or
lcall
pop
dec
ja
in
cld
jo
insb
sub
fnsave
in
sbb
lahf
push
stc
clc
inc
xor
fbstp
pop
sub
lock
pushf
mov
xorb
andl
icebp
aas
or
dec
sar
cmpsb
int
sbb
ss
aas
xlat
pop
mov
ret
cmpb
mov
dec
lods
adc
dec
dec
add
cmpsb
imul
mov
fldcw
adc
xchg
test
pop
lods
mov
rcl
inc
xor
leave
cld
jg
sub
outsb
and
lcall
cmpsb
cld
inc
sbb
adc
mov
add
rorl
push
mov
loop
arpl
ret
xor
loope
xor
pop
popl
mov
inc
fs
sub
mov
int
int
ret
mov
mov
xchg
out
movsb
sbb
pushf
xchg
jge
loopne
mov
cmp
add
fsubl
pop
sbb
repz
xor
and
adc
or
jmp
mov
in
inc
imul
cs
mov
xchg
movsb
stc
insl
push
gs
repz
iret
aas
ret
jmp
push
stos
and
xor
sub
ss
js
jne
pop
or
imulb
in
movsb
pusha
jg
in
push
mov
ds
and
inc
cmp
pop
push
adc
dec
pop
mov
pop
sarb
inc
jmp
xchg
cmp
lahf
add
repnz
xor
daa
pop
sub
sarb
rcrl
pusha
rolb
in
fisubrs
aaa
cmp
out
repnz
cwtl
or
inc
dec
sbb
sbb
mov
addr16
jge
mov
fdivs
sub
rorl
mov
idiv
dec
hlt
push
jmp
pushf
sbb
add
lock
pop
inc
mov
fsts
pop
adc
mov
and
das
scas
sub
lret
aas
mov
outsb
cld
add
popf
xchg
repz
insl
clc
and
sub
push
push
mov
sub
adc
lea
jg
adc
cmp
shrb
jmp
in
lret
xor
and
enter
mov
pop
xor
popa
shlb
sbb
xchg
lods
pop
or
iret
add
mov
mov
and
or
icebp
adc
dec
mov
mov
adc
stos
jbe
cwtl
xor
or
aaa
mov
aam
jbe
daa
cmc
and
mov
push
das
push
lret
into
sbb
hlt
pop
movsb
lret
cs
mov
mov
rolb
clc
mov
int3
add
add
je
pop
imul
cltd
mov
push
xchg
out
pop
push
cmp
mov
cmpsb
inc
cmpsl
andl
jns
lock
nop
pushf
mov
enter
lock
dec
fistpll
add
xor
xchg
and
xchg
mov
dec
fst
es
push
lods
sub
lea
jnp
lret
jp
cli
dec
lods
jmp
and
cmp
xchg
ljmp
xlat
mov
int
scas
dec
inc
mov
sub
clc
repnz
shrl
mov
pop
mov
rcl
shrl
leave
lods
dec
adc
cld
sbb
test
test
push
lahf
dec
fs
loopne
fldcw
push
cld
mov
xchg
xor
cmp
shr
sti
xchg
cmpsb
xchg
shll
dec
cld
movb
ja
out
mov
dec
pusha
xchg
popf
pop
sbb
xorl
pop
sub
mov
pop
jno
sbb
leave
pop
xchg
aad
in
iret
sbb
xchg
outsl
mov
push
in
xchg
xor
pop
dec
adc
js
mov
xchg
fcmovu
dec
push
rcll
xor
sub
xchg
das
lcall
lret
sbb
repnz
ss
push
dec
repnz
add
repz
flds
jecxz
xchg
fucomp
sub
out
popa
stos
lock
push
xchg
cltd
adc
arpl
std
outsl
push
ds
stos
icebp
ds
lds
pop
lock
mov
sbb
mov
jno
dec
inc
aaa
push
bswap
mov
sub
push
xchg
mov
sub
or
je
lea
in
and
nop
lar
xchg
sub
js
popf
mov
aaa
aad
jle
je
xchg
pop
mov
jae
adc
movsl
adc
lahf
and
jmp
andb
ds
insb
ret
cmpsb
and
loope
mov
dec
mov
rorb
xor
mov
push
lds
stos
test
ss
test
mov
fstpl
out
vunpckhps
das
lea
dec
popf
sbb
jge
inc
push
mov
push
push
not
push
jecxz
mov
out
repz
out
push
jns
mov
mov
mov
cli
xchg
mov
jne
or
outsb
jb
mov
or
testl
out
js
mov
imul
and
adc
insb
xchg
scas
lds
lds
jge
adcl
scas
push
in
sbb
lea
stos
sti
push
push
pop
xchg
xchg
adc
dec
shrb
inc
xchg
sbb
loopne
lcall
les
jae
adc
test
iret
xor
jb
sub
cld
stos
mov
mov
sbb
sbb
ret
mov
aam
xor
sti
rol
cli
lret
lock
mov
cmc
repnz
clc
cltd
paddsb
cmpsb
lods
add
addr16
mov
in
dec
enter
mov
or
pop
dec
das
mov
out
ficoms
adc
ret
adc
jns
stos
adc
mov
fiaddl
inc
push
test
add
adc
push
aam
mov
lds
fcompl
or
fwait
loope,pn
pop
xchg
rorl
ljmp
sub
pop
and
adc
jmp
hlt
mov
in
leave
inc
adc
xlat
sub
xchg
repnz
lds
jo
into
fbstp
incl
jge
jge
pop
push
mov
inc
out
mov
push
loope
inc
inc
lea
out
push
ret
leave
aam
dec
mov
sub
jmp
pusha
rcrb
cmpsb
push
xor
aam
subl
mov
pop
push
mov
xchg
add
jl
cmp
cltd
pop
jno
rcrb
xor
pop
lret
add
xchg
daa
xchg
adc
sarl
loope
jno
xchg
dec
jl
test
cmp
xor
fldl
dec
es
clc
std
lds
jne
cmp
xchg
in
and
lret
sbb
cmp
loopne
pop
cli
jl
jg
pop
ret
leave
cmp
mov
inc
ss
stc
jp
loope
sbb
xlat
cmp
mov
xchg
std
insb
cmp
inc
and
adc
sbb
mov
lret
std
and
icebp
mov
mov
ret
add
fdivrs
fdivrl
mov
jl
jno
pop
jmp
pop
int3
shrl
aas
loop
mov
xchg
aas
insb
mov
xor
ja
sbb
push
adc
roll
test
sar
push
push
stc
js
and
or
in
push
jnp
sub
jge
pop
lcall
pop
fcmovne
and
xor
and
sbb
cmp
adcl
inc
repnz
iret
andl
lahf
dec
pop
mov
loopne
sti
dec
ljmp
mov
adcl
jae
lods
movsb
pushf
ds
out
xchg
jae
cs
dec
and
sti
test
cld
movsl
shl
pop
cmpb
cmp
mov
testb
orl
sbb
or
push
les
and
icebp
jne
and
jno
testb
sub
cmp
adc
inc
call
mov
data16
loop
shll
scas
stos
xchg
pop
mov
cmpsb
mov
test
cmp
dec
stc
mov
add
push
push
popl
andl
sbb
push
inc
add
pop
add
inc
adc
shll
test
rcrb
sub
leave
add
sub
movsl
xor
dec
adc
mov
andl
data16
dec
fistpl
fwait
push
int3
inc
test
std
jno
leave
in
incl
subl
fcomps
nop
adc
cmp
lret
pusha
dec
inc
addb
repnz
outsl
pushf
pop
shrl
mov
sub
xchg
fbld
inc
aad
add
test
in
mov
mov
mov
les
jmp
add
outsl
rcrb
cmp
mov
cld
cmc
adc
jb
int
push
dec
inc
xchg
mov
and
ret
pop
push
inc
stos
jl
pop
test
and
lea
jnp
mov
jo
insl
cmpl
or
or
rcrb
fistpll
in
sbb
jge
out
mov
cmp
pop
xor
jb
sub
xlat
test
pop
sub
cli
push
outsb
push
sub
imul
inc
js
lahf
dec
add
adc
xchg
xchg
xor
hlt
sub
cmp
cmpsb
add
adc
enter
dec
xor
mov
sti
mov
inc
mov
add
jae
sarl
movsb
dec
and
int
icebp
push
pop
lahf
ss
xchg
int
mov
push
repnz
movsb
aaa
pusha
jbe
movsb
sub
jmp
push
jle
shlb
inc
xor
cmp
lods
hlt
or
fcoml
pushf
test
cmp
ss
pop
lret
dec
pop
out
cmp
add
adc
adc
imul
or
jbe
mov
cld
and
jp
mov
push
push
inc
out
mov
sub
cmp
push
out
inc
lock
add
aam
insl
ds
push
xchg
push
into
jmp
inc
xchg
mov
sahf
mov
nop
push
sbb
in
jo
jo
cmp
pop
aad
hlt
movsl
cld
or
ljmp
rorl
popf
inc
stc
mov
inc
dec
adc
jne
jg
nop
loop
dec
out
dec
cld
sbb
lcall
das
xchg
cmp
sub
testb
loopne
jecxz
jecxz
mov
fneni(8087
scas
pop
xor
sub
ret
pop
mov
nop
jle
addr16
sub
cmpl
fwait
shlb
push
std
xor
cmp
mov
xlat
outsb
pop
xlat
rolb
mov
cli
es
leave
pop
leave
jo
or
mov
lods
data16
movsl
jns
cld
or
jl
dec
xchg
insl
test
jno
outsb
dec
or
imulb
xor
in
imul
cmp
aas
in
cmp
nop
mov
test
test
rorl
repnz
push
lock
out
arpl
add
sbbb
mov
push
xchg
loope
and
adc
sub
or
lcall
mov
aam
add
cmp
push
mov
sub
ret
inc
mov
jge
xor
pop
ss
mov
les
xchg
nop
xor
pusha
or
add
push
xor
insl
jo
out
test
jle
sub
ficoms
fsubrs
sub
or
std
hlt
mov
or
mov
mov
lock
enter
in
call
cltd
lds
xchg
push
cmc
pop
push
sti
ss
mov
cmp
arpl
pusha
loope
movsb
cmp
in
iret
inc
arpl
mov
imul
push
pop
movsl
push
fstpl
or
jno
inc
mov
xor
adc
daa
fs
call
outsb
xchg
cmp
filds
ljmp
lods
pop
jp
lea
adcl
mov
mov
out
das
mov
mov
js
test
das
in
mov
sbb
outsl
insl
das
call
idivb
jnp
or
stos
stos
add
inc
insl
out
js
push
push
add
pop
cmp
cld
out
add
movsb
int3
stos
test
ret
adcb
repz
pop
jp
dec
inc
enter
sub
arpl
adc
cmp
test
add
jmp
int
lret
in
mov
pop
inc
enter
sub
mov
insl
mov
inc
xchg
pop
push
loop
out
repnz
lret
fisubs
aaa
stos
cwtl
shrl
cmp
xor
mov
xor
jp
das
jns
pop
xor
push
test
cmp
mov
mov
fdiv
mov
int3
stos
std
lcall
into
mov
repz
push
jae
xchg
push
iret
jl
inc
inc
decb
push
imul
adc
sbb
jae
iret
cltd
and
xor
or
mov
repz
inc
insl
jbe
mov
ret
dec
sub
shll
mov
enter
and
jne
inc
inc
pusha
pop
cmp
mov
aas
rorb
mov
divl
sbb
stc
fidivl
dec
cli
movsb
jl
jg
imul
mov
inc
ss
mov
shll
adc
mov
cmp
mov
popf
fcom
push
movsl
test
ret
cld
jle
xchg
or
mov
repnz
or
mov
in
lds
cmp
sar
cs
push
dec
xlat
pop
pop
sbb
stc
sub
daa
push
dec
cmp
or
or
dec
or
clc
cmpsb
adc
das
insb
repz
int
lea
punpcklbw
jno
xchg
dec
sbb
pusha
or
pop
push
aad
sti
pop
movsl
sbb
pop
enter
icebp
add
pop
ret
adc
push
insl
pop
cmpsl
push
mov
mov
jl
hlt
mov
cmp
jae
mov
cmpsb
stc
mov
push
nop
push
jmp
lock
mov
push
movsl
mov
pop
imul
push
test
addr16
fldt
mov
cmc
adc
push
divl
cmp
cltd
arpl
mov
cwtl
dec
cmp
adc
adc
rcl
sbb
fidivs
outsl
mov
in
fstpt
clc
fwait
mov
scas
dec
sti
add
mov
fistpl
pop
jle
xor
rolb
cli
inc
inc
pushf
mov
xchg
xor
into
psubusb
repz
push
sbb
inc
pop
dec
insb
mov
pop
sbb
xor
pop
les
lahf
cmp
pop
jne
jmp
sub
jbe
xor
add
mov
jnp
adc
push
sarl
cmp
fidivs
xchg
mov
mov
jl
cmpsl
andb
xchg
fs
mov
cmp
dec
aad
pusha
lahf
mov
aam
fisubrs
clc
popl
outsl
sub
adc
jl
andb
cmp
scas
fiaddl
fs
push
pop
cmpsl
mov
cmp
inc
adc
jp
xor
orl
jecxz
inc
je
lret
xchg
dec
movsb
lds
fs
fcoml
sub
andb
mov
fsubr
inc
jno
outsb
rclb
les
lcall
jns
cmpsl
and
jae
adcl
loopne
jb
insb
fwait
jmp
mov
leave
inc
push
and
add
push
cmp
mov
es
or
push
cmp
in
ret
or
popf
cmp
jno
outsw
imul
test
addr16
adc
cmc
adc
mov
arpl
ljmp
fchs
mov
cmp
cmpsb
arpl
filds
pop
rcrl
sub
and
xchg
xchg
cmp
mov
sti
add
daa
sar
call
jge
sahf
push
jecxz
cmp
fucomp
dec
int
sub
notl
pop
xor
leave
fs
xchg
int3
loop
push
mov
aas
sub
cmc
pop
pop
sub
jle
inc
inc
lret
sbb
popf
adc
mulb
push
gs
lcall
cltd
in
cmp
ljmp
fs
and
sub
xor
loope
insl
andb
stos
adcb
pop
mov
xor
loope
push
fidivs
xor
push
mov
mov
cmp
cmp
push
add
js
or
shll
add
rcl
arpl
mov
dec
lret
outsl
xchg
pop
mov
mov
pop
idivb
or
lds
sbb
pop
and
pop
fdivrs
movsl
xchg
jl
lret
xchg
cmp
or
or
xor
daa
repnz
dec
mov
add
sub
mov
cltd
mov
int
mov
cmp
or
push
loop
jge
xchg
jecxz
sbb
fidivrl
sub
add
cmp
mov
outsb
mov
mov
add
faddl
imul
xor
xor
xchg
imul
sub
or
test
xor
addr16
mov
sub
mov
jl
xorl
dec
call
popa
mov
shr
cmp
stc
movsb
pusha
lret
mov
inc
lret
inc
inc
aas
push
insb
out
cwtl
into
xchg
jb
jo
fisubrs
pusha
mov
dec
or
outsb
daa
pop
out
sbb
cmp
data16
mov
ret
cltd
popa
mov
sbb
stos
mov
jp
adc
jle
lret
dec
lret
cmpsb
scas
dec
cmp
mov
push
sub
or
not
dec
mov
sbb
jbe
inc
dec
rorb
mov
or
loop
out
insb
pop
adc
ss
xor
jge
out
cmpsb
lahf
and
pop
jl
ror
hlt
mov
enter
mov
iret
call
cmp
sbb
movsb
cli
lahf
push
scas
xor
pop
jno
jns
add
jg
mov
inc
cmp
cmpsb
inc
pop
gs
fisubrs
cmp
sti
clc
aam
push
lock
dec
sahf
sub
sahf
push
sub
arpl
xchg
sbb
and
aas
mov
mov
hlt
xor
xorb
les
mov
xchg
sti
int
inc
pop
stos
jmp
xchg
sar
add
leave
ret
jecxz
std
pop
sub
arpl
dec
mov
mov
xchg
lods
xor
jne
mov
inc
pop
ret
lcall
mov
cwtl
inc
sbb
push
in
outsb
pushf
push
pushf
mov
add
cld
lods
ljmp
add
stc
clc
imul
sub
or
push
dec
pop
lret
pop
cld
adc
adc
cmp
lock
call
cmp
push
jmp
test
sti
jb
dec
adc
adc
push
fisttpll
mov
arpl
scas
sub
ss
int3
pop
pop
pop
push
push
push
stc
inc
repnz
bound
imul
cli
mov
sbb
int
mov
sbb
jae
mov
mov
flds
cmp
and
pop
ret
ljmp
dec
pop
mov
push
lea
cmp
test
sbb
lock
inc
pop
push
movsb
fwait
sub
or
pop
xchg
sbb
mov
mov
movsl
mov
cmp
cmp
lcall
bound
jle
mov
stc
pop
roll
loop
cs
cli
in
xor
and
pop
push
xchg
or
push
xchg
xor
lret
setg
stc
and
push
sub
xorb
jle
jbe
mov
mov
pop
mov
repz
cmp
cmpsb
repz
shrl
jbe
dec
and
lods
push
push
push
repnz
sub
loop
cs
in
lods
int3
out
cmp
mov
xchg
adc
flds
test
jbe
xchg
insl
jg
jge
shrl
or
lock
cmpsl
xchg
movsl
ds
dec
das
stc
lds
pop
mov
push
das
pop
jne
push
or
sbb
rorb
in
fwait
popl
mov
sub
insb
pop
dec
xchg
sti
sub
push
gs
mov
test
aas
mov
sub
pop
xchg
pop
imul
mov
lahf
or
cmpsb
xor
jl
and
mov
mov
iret
sub
or
cmp
iret
inc
push
jae
fsts
xchg
in
and
fwait
pop
mov
mov
inc
and
rcl
in
add
stc
imul
stos
push
mov
lock
push
jne
mov
jecxz
das
ja
push
in
xchg
xchg
pop
iret
pushf
insl
mov
rcrb
aam
adc
mov
and
mov
and
sub
mov
pop
cmp
mov
hlt
lret
pop
inc
call
sar
stc
scas
dec
jnp
dec
loopne
cvtps2pd
in
pop
cmp
imul
push
xlat
mov
xor
xor
jle
mov
dec
xchg
imul
jle
xchg
jb
xor
or
out
dec
sbb
test
adc
mov
dec
and
orb
fnsave
and
dec
js
nop
adcl
pop
xor
test
push
xchg
cmpb
lods
lcall
call
scas
jb
fcmovnu
xchg
mov
inc
outsl
adcl
add
cmp
pop
or
sub
sbb
adcb
mov
popa
repz
dec
add
popf
pop
sti
loop
add
arpl
pop
xor
daa
adc
stos
rdpmc
dec
iret
and
cwtl
sub
sub
adc
mov
lahf
dec
jbe
rcrl
ret
sbbb
mov
fwait
mov
inc
or
jne
arpl
inc
and
mov
mov
mov
mov
cmovnp
mov
test
jle
mov
and
insb
repz
xor
mov
divl
hlt
hlt
inc
das
pop
enter
imul
xor
mov
xor
xchg
adc
repz
idivl
pushf
inc
push
out
lcall
mov
stc
sub
push
test
fnsave
movsb
mov
sahf
mov
cmp
sbb
stos
lret
or
mov
jle
pusha
jg
sbb
rolb
gs
iret
push
sub
repz
imul
lcall
cs
xchg
arpl
pshufw
add
scas
xor
mov
mov
push
fisubrl
mov
jmp
sbb
mov
push
inc
lods
add
or
ds
cli
loop
jmp
adc
cmp
fdivrs
lea
popf
push
mov
xchg
cltd
ss
iret
dec
mov
lds
int3
bound
mov
or
push
fnsave
xchg
outsb
jecxz
jge
insl
setae
jbe
and
xor
in
mov
mov
fiadds
inc
jg
cmp
fisubrl
cli
insb
dec
cs
mov
pusha
enter
test
cltd
pop
push
mov
mov
aad
inc
sbb
repnz
pop
dec
pop
sub
repz
mov
jae
push
inc
adc
push
mov
adc
sub
jl
arpl
mov
movsl
dec
mov
mov
adc
addr16
xor
jp
sahf
adc
cmc
xchg
jbe
into
popa
ja
push
mov
pop
mov
test
out
std
push
jae
sub
mov
notb
pmulhw
or
sbb
rcll
subb
pop
das
or
inc
push
lret
push
mov
sbb
add
sub
jmp
and
rclb
add
lret
in
test
mov
jne
or
and
dec
mov
inc
dec
mov
dec
popa
das
movsb
sarb
push
jle
das
jo
jecxz
ja
testl
std
outsl
jo
pop
stos
loopne
and
hlt
ret
into
test
jle
fiaddl
fnsave
sbb
ret
hlt
jae
lcall
pop
fiadds
or
lock
dec
sbb
pop
ljmp
out
stc
pushf
mov
cmp
lods
lods
leave
popa
popf
or
gs
mov
negl
adc
sarl
cmp
add
dec
fcomp
sub
mov
mov
shrb
mov
sbb
mov
aaa
mov
lds
sahf
jns
cmp
sbb
dec
mov
cmp
xor
xchg
lea
imul
jbe
rorl
jmp
sub
adc
or
std
jnp
cwtl
lods
jle
std
pop
aas
push
rcl
push
dec
or
lret
adc
cltd
popf
adc
int
xor
icebp
mov
out
or
push
and
ds
movsb
mov
push
xor
and
fs
in
mov
jae
test
dec
jl
jmp
push
and
jne
pushl
ss
into
inc
xchg
pop
jo
in
outsb
mov
pop
outsb
movsb
adc
das
std
sbb
jl
loope
dec
movsb
js
orb
pop
inc
cwtl
aaa
inc
xlat
in
es
fcmove
push
dec
in
ds
fildll
cltd
out
leave
and
jmp
jno
jmp
mov
sbb
mov
in
mov
repnz
or
scas
sbb
lahf
jo
ja
jb
dec
fbstp
arpl
rclb
sub
hlt
sub
mov
lock
mov
loopne
in
lds
addr16
pop
or
std
xchg
xchg
cwtl
mov
ret
aas
es
jl
adc
jmp
aad
jge
inc
cwtl
lahf
in
cld
sbbl
sbb
ret
jl
hlt
rcrl
lret
mov
ret
sbb
fs
inc
call
sub
lahf
and
fsubs
stos
push
adc
or
into
mov
inc
xchg
stos
orb
out
int
shrb
xchg
cmp
mov
sbb
mov
jns
xchg
mov
push
xchg
push
cmp
outsl
mov
rol
popf
insb
jmp
xor
pusha
or
sti
inc
enter
mov
mov
fdivrs
stos
xchg
push
push
es
test
cwtl
sub
push
push
lock
pusha
pop
daa
xor
ret
sub
hlt
cmp
jmp
jae
imul
add
sbb
outsb
xchg
pop
icebp
jo
push
imul
mov
sbbb
pop
xlat
pop
rcrl
imulb
and
and
orb
xchg
lock
xchg
outsl
lock
sub
testl
sbb
aam
test
orb
lds
inc
dec
test
rcrl
insb
pop
push
lock
stos
fimull
fcomp
loopne
sbbl
jecxz
add
dec
lods
xchg
dec
jae
aas
push
mov
mov
dec
mov
push
pop
popf
xor
jns
pop
lods
test
push
dec
dec
shll
imul
lret
test
mov
mov
dec
dec
and
lods
aaa
cmp
pushf
jp
loop
adc
inc
push
incb
in
pop
mov
xorb
std
stos
push
add
mov
loop
rcl
ret
sysenter
mov
cld
negl
jle
lret
mov
mov
mov
fidivs
inc
stos
std
icebp
mov
push
nop
cmp
jo
xchg
push
test
adc
push
loope
mov
mov
cmp
jp
add
ja
sub
enter
mov
mov
jnp
adc
jecxz
xchg
cld
fld
mov
adc
cltd
jne
jno
or
in
scas
and
test
ss
or
stc
mov
sarb
loope
xlat
imul
cmpsl
cmp
mov
arpl
push
push
dec
push
jnp
daa
sbbb
inc
insl
and
jp
xor
testl
push
mov
pusha
push
fistl
mov
ds
adc
push
call
jmp
and
rorl
pop
mov
adc
fcmovbe
sahf
es
adc
xchg
fidivrl
movsl
mov
testb
bound
cmp
inc
in
push
mov
out
aam
lods
loope
and
aam
fdivs
xchg
loope
xor
mov
fldt
scas
les
fwait
imul
loopne
lds
fstpt
lock
outsl
mov
stos
or
adc
push
pushf
addr16
ja
nop
insl
mov
push
je
outsb
shlb
nop
mov
jne
xchg
aam
fsubrl
aas
sti
lods
lcall
push
add
dec
cmp
sti
addb
sbb
xor
pop
adc
jmp
lret
std
push
and
xchg
mov
push
in
adcl
xchg
rcll
inc
push
loop
inc
icebp
outsb
mov
add
ds
mov
mov
and
rorb
popa
ljmp
adc
inc
add
adc
mov
push
je
popf
jb
out
imul
fnstsw
add
mov
aaa
xchg
xchg
push
adc
test
sub
mov
sti
mov
sbb
jmp
das
mov
and
nop
mov
outsb
out
push
rolb
dec
fsub
pop
repnz
jo
mov
in
out
sbb
stc
js
xchg
mov
jecxz
pop
popa
popa
xor
add
fstpl
xchg
loopne
pop
sti
jl
adc
jmp
ds
push
mov
push
nop
insl
mov
xchg
push
sti
mov
jne
outsl
dec
inc
xchg
push
test
inc
jo
mov
ficoml
loope
mov
stos
pushf
into
andb
inc
flds
idivb
ret
cltd
adc
int3
sbb
push
xchg
jo
testb
lret
sub
and
imul
inc
cmpl
pop
jns
ds
jmp
daa
sub
cmpsl
dec
inc
adc
in
sti
shr
idivl
cmp
push
dec
fcmovne
sbb
mov
push
push
lahf
clc
inc
jbe
sbb
cmp
fiadds
addr16
mov
jo
stos
and
je
movsl
push
push
lret
cmp
xor
jl
in
lea
push
mov
fwait
movsb
mov
sahf
inc
movsb
mov
fcmovne
in
subb
inc
jle
mov
iret
cs
pop
test
je
lcall
sbbb
pop
xchg
pop
and
dec
nop
jno
sbb
dec
and
icebp
jns
pop
push
in
mov
xor
insl
add
mov
lods
jecxz
rcrl
mov
lret
mov
sbb
lods
popf
xor
lret
orl
stos
mov
mov
add
mov
arpl
pop
jb
into
dec
pusha
test
sbb
aaa
call
sub
or
or
test
mov
icebp
aad
shrb
or
push
pop
adc
mov
jecxz
mov
lock
dec
jp
call
loope
lret
xchg
sub
push
test
imul
int3
add
mov
mov
mov
popf
repz
jnp
mov
xor
mov
inc
dec
and
dec
inc
push
add
ret
out
cmp
lahf
xor
pushf
pop
jecxz
sbb
sarb
or
pop
jg,pn
xor
mov
mov
xor
adc
pop
sbb
jmp
sub
movsl
orb
lods
out
inc
jle
sbb
mov
xor
mov
pop
inc
sub
stos
mov
cwtl
xchg
std
push
aas
sahf
pop
mov
das
daa
jno
and
test
lds
or
sbbl
xor
mov
ret
outsl
test
pop
subb
jno
add
pop
xchg
sbb
and
jno
imul
test
fwait
adc
test
pop
pop
test
jp
out
scas
pop
jmp
rcr
sbb
mov
sub
pop
popf
lea
aam
pop
dec
fldz
aas
fbstp
stos
jns
push
loope
cli
or
push
add
andb
daa
mov
loopne
sarb
cmp
inc
xchg
or
jne
loop
xchg
js
or
xor
aad
repz
adcl
int
insl
les
shlb
sti
jecxz
push
xchg
dec
xor
pop
int3
push
jp
inc
mov
mov
sti
icebp
cli
js
lahf
loope
movsl
daa
loope
leave
fildl
jecxz
cmc
ja
lock
or
adc
jb
cs
or
jne
jb
sub
cmc
fwait
scas
jo
adc
mov
add
pop
lods
cltd
aas
or
icebp
and
pop
movsb
push
jns
fbld
pop
adc
clc
fcoml
hlt
sub
dec
push
in
cmpsb
les
inc
cmp
nop
sub
adc
mov
lock
test
mov
mov
dec
roll
xor
add
xor
ss
pop
inc
xor
lcall
jge
xchg
dec
pop
outsl
in
addl
add
out
orb
push
jg
sub
imul
cmp
inc
cmc
mov
pop
sbb
ret
dec
jmp
cltd
faddl
cwtl
int3
aam
sbb
sbb
test
xchg
adcb
and
ss
mov
lods
std
and
dec
cmp
cmp
jnp
mov
and
push
jno
jb
mov
mov
pop
sahf
enter
movsb
or
pop
les
dec
mov
pop
or
repnz
push
sub
push
out
sahf
and
cmp
cmpsl
mov
mov
aam
call
adc
add
adc
ret
inc
inc
iret
repz
data16
xlat
xchg
mov
aas
test
call
enter
jae
in
fidivrl
mov
adc
stos
out
push
enter
jp
repnz
and
sbb
fcomp
xchg
pop
jns
push
cld
or
test
add
jecxz
xchg
jno
add
pop
test
sub
aad
fisubs
out
lds
mov
outsb
into
enter
out
lods
faddp
mov
loopne
jae
jns
cs
xchg
jnp
inc
jo
aad
shrb
sarb
sub
movsl
or
jp
add
xchg
arpl
mov
xlat
xorl
adc
data16
out
sahf
push
fadd
loop
cs
mov
fmull
testb
cwtl
pop
leave
imull
push
test
popf
jmp
lcall
fstpl
sbb
push
faddl
jne
stc
loopne
cmp
js
mov
aaa
mov
test
mov
mov
adc
and
or
pop
pushf
sub
not
ffree
dec
fwait
xchg
in
popf
lahf
enter
cmp
outsb
mov
xchg
or
out
ficoml
mov
sbb
xchg
jl
es
cmpsl
or
xchg
outsb
pop
loope
andl
push
pop
sbb
scas
cmc
mov
cmp
ret
in
mov
jbe
jmp
or
mov
out
mov
lahf
ret
flds
in
insl
ljmp
adc
inc
dec
cwtl
mov
stos
notl
mov
cltd
pushf
shlb
movsb
inc
push
out
movsl
pop
add
in
push
xor
mov
addb
int
dec
pop
scas
test
jmp
mov
insl
fsubrl
in
roll
and
movsb
testl
fadd
stc
push
push
iret
lods
inc
shl
movsb
lods
adc
pop
add
stos
daa
repz
bound
cltd
daa
movsl
fmull
mov
mov
inc
xor
jne
xchg
mov
imul
stc
insb
mov
stc
push
rclb
xchg
in
fists
push
jecxz
push
push
test
in
aad
mul
negb
xchg
xlat
fld
insl
pop
sahf
jno
or
test
xor
test
pop
mov
adc
jbe
clc
sbb
insl
sbb
xchg
pop
sti
fwait
rol
cmpsl
pop
cmpsb
mov
mov
aad
int3
pushf
dec
lret
xchg
sbbb
and
dec
pusha
pop
and
out
sbb
jle
and
dec
jno
cmp
sbb
adc
popf
pop
push
out
mov
popf
or
or
cmc
and
xor
adc
push
dec
cmp
lcall
dec
adc
xchg
add
and
leave
mov
mov
cmp
mov
or
dec
add
add
adc
jno
fdivrs
dec
int3
inc
in
out
jmp
cmp
push
jge
jne
jne
std
dec
mov
sti
leave
fwait
movsl
lea
jne
add
ljmp
mov
lds
mov
adc
cwtl
js
in
popa
insb
daa
mov
test
mov
adc
je
adc
sub
push
cltd
mov
aas
clc
push
sbb
lret
push
mov
aaa
sub
inc
insl
jb
pop
lds
movsb
ss
adc
imul
ss
int
and
scas
pop
ficoml
jg
enter
cmp
pop
ja
mov
jmp
cltd
adc
or
add
in
stos
jbe
cmp
test
ret
ljmp
call
jg
pop
fcoml
subb
sub
enter
pop
pop
add
ficompl
cmpl
add
stos
xor
jns
inc
push
xor
or
rcrl
jne
in
pop
xchg
and
mov
cmpsb
mov
je
call
cmp
lahf
lret
jnp
mov
jae
aam
push
faddp
cli
mov
jns
mov
in
test
mov
loop
xor
subb
les
jecxz
ret
stos
jl
dec
jmp
xchg
rcr
mov
sbbb
push
or
insl
pusha
mov
mov
mov
jge
lret
inc
xor
das
cmpsb
loopne
push
pop
sub
inc
sbb
inc
leave
inc
inc
mov
and
sub
cltd
inc
push
ljmp
push
mov
cmp
fisubl
cmpsb
mov
pop
sbb
adc
xchg
xor
cld
or
fsubrl
clc
push
or
stos
xor
imul
pushf
loope
stos
xchg
int3
fwait
int3
jb
mov
aaa
xor
or
outsl
mov
shrl
loopne
mov
push
addr16
insl
out
sarb
bound
sbb
ss
mov
pop
pop
fwait
lret
stc
add
pop
xchg
fs
cld
leave
shr
in
sbb
jns
fisttpl
mov
jnp
cmp
push
nop
lret
mov
cmp
xor
push
pushf
lret
std
adc
cmpsl
mov
push
push
lahf
jg
cmpb
insb
in
lods
bound
int
incl
adc
bound
add
mov
movsl
repz
pop
test
movsb
inc
int
mov
adc
cmpsl
push
nop
fnstsw
leave
sub
mov
mov
lock
jo
cmc
data16
shlb
mov
cmp
outsb
aam
cmc
in
in
fdivl
shll
xorb
scas
xor
mov
data16
outsl
fmull
mov
mov
push
or
cli
dec
sbb
clc
js
mov
leave
cltd
sub
outsb
sbb
pop
inc
dec
mov
fnsetpm(287
sti
inc
fwait
movb
add
int3
or
and
rol
rclb
mov
mov
es
xchg
mov
push
adc
mov
stc
dec
aam
mov
jg
mov
sub
or
insl
out
sti
cmpsb
cmp
scas
and
aas
mov
sarb
xor
scas
inc
test
pop
icebp
add
out
pop
pop
mov
push
popf
xchg
repz
aaa
mov
fs
mov
rolb
xchg
xchg
enterw
int
adc
cs
imulb
xchg
repz
dec
add
cmp
pushf
mov
int
jbe
hlt
shll
xchg
in
inc
pop
xchg
jmp
mov
mov
jle,pn
adc
or
testb
jae
pop
sbb
pop
xor
mov
push
inc
xor
jnp
lods
dec
push
and
add
outsb
mov
push
daa
xchg
push
jnp
mov
mov
cmc
mov
icebp
xor
loope
adc
aam
and
cmpb
jnp
int
jecxz
sbb
cmp
ret
xchg
jae
adc
mov
cmpsl
inc
fmuls
movsb
pop
movsb
sub
mov
pusha
sar
popf
push
outsb
xchg
push
incl
popf
imul
lret
jbe
mov
mov
cmpsl
clc
subl
mov
outsl
mov
sub
mov
mov
mov
dec
cmp
mov
inc
sbb
jb
mov
sbb
in
xchg
mov
mov
loop
or
or
mov
aad
jl
adc
xor
stc
xor
pop
dec
fdiv
dec
sub
std
loop
loop
dec
inc
mov
in
ret
sub
repz
adc
mov
cmp
xchg
push
daa
pop
pop
test
sbb
inc
xchg
leave
xlat
pop
aam
lcall
adc
push
mov
or
dec
lea
cmp
adc
inc
pop
sarb
icebp
sarb
mov
ret
add
dec
mov
xor
dec
jge
cmp
leave
std
lahf
and
xchg
push
imul
mov
cmp
mov
dec
sub
sbb
aas
sbb
test
cwtl
stc
cwtl
or
inc
fldenv
or
sbb
cmpsb
pop
cmpb
lods
adc
ret
pop
jmp
cmp
cmp
lods
sub
add
fnstsw
jns
imul
fsubs
inc
jg
xchg
nop
add
dec
addr16
in
cmc
fwait
std
inc
hlt
xchg
jns
call
ficompl
leave
test
inc
cmp
jnp
push
cmp
inc
mov
xchg
jmp
cli
sbb
xchg
inc
stc
out
jb
jg
aas
xchg
cmpsl
and
pop
pop
adc
and
adc
ficompl
xchg
xchg
cwtl
xchg
fdiv
cmp
insb
loope
test
cmpsl
dec
das
fstpt
sub
xchg
mov
insb
cmp
xchg
adc
aad
jo
jecxz
xchg
mov
push
into
aaa
mov
jp
shrl
mov
inc
das
das
push
or
and
adc
or
js
mov
adcb
scas
inc
in
dec
sub
addl
aas
in
cmp
pop
insb
inc
cmp
stos
fcmove
sub
cmp
add
cmp
sti
and
jno
movsl
jb
fnstenv
pop
int
xlat
mov
add
inc
fwait
inc
outsl
mov
dec
movsb
sub
adc
dec
shl
cmp
pop
test
fs
dec
decb
sbb
imulb
pop
fstpl
fstpt
sbb
adc
cwtl
cli
lret
jle
ljmp
addr16
iret
xchg
xor
int3
cmp
out
jns
and
dec
mov
adc
or
jge
adc
ljmp
cmpb
test
std
popf
cwtl
loope
cli
dec
psubw
sbb
and
out
in
cs
dec
mov
bound
divl
lods
sub
sti
outsl
adc
loop
shr
test
hlt
add
leave
dec
call
sub
lods
test
push
lods
add
in
mov
pop
xor
mov
sbb
push
lods
ds
fists
jp
lcall
das
or
and
lods
pop
push
fistpl
or
pop
cltd
and
xchg
out
pop
scas
loope
adc
dec
rorl
mov
inc
sbb
mov
int
test
jmp
xchg
hlt
dec
ror
dec
je
xchg
sub
lods
in
out
or
sub
add
and
sbb
push
lods
ds
fists
jp
lcall
das
or
and
lods
pop
push
fistpl
or
pop
cltd
and
xchg
out
pop
scas
loope
adc
dec
rorl
mov
inc
sbb
mov
int
test
jmp
xchg
hlt
dec
ror
dec
je
xchg
sub
lods
in
out
or
sub
add
and
sbb
push
lods
ds
fists
jp
lcall
das
or
and
lods
pop
push
fistpl
or
pop
cltd
and
xchg
out
pop
scas
loope
adc
dec
rorl
mov
inc
sbb
mov
int
test
jmp
xchg
hlt
dec
ror
dec
je
xchg
sub
lods
in
out
or
sub
scas
.byte
push
mov
sub
mov
nop
nop
nop
nop
nop
andl
jmp
push
push
jmp
pushl
pushl
jmp
add
cmpl
je
mov
jmp
lea
jmp
and
incl
incl
jmp
mov
lea
sub
shr
jmp
cmpl
jmp
movb
movb
mov
jmp
mov
mov
add
push
jmp
mov
leave
ret
add
add
add
lret
add
add
add
mov
mov
add
jmp
dec
mov
jne
sub
jmp
test
jmp
call
cmp
pop
jmp
je
movzwl
jmp
jmp
decl
jmp
pop
lea
push
je
jmp
je
incl
jmp
mov
add
add
jmp
call
mov
test
jmp
add
mov
inc
inc
jmp
mov
jmp
mov
popa
jmp
ret
add
add
add
mov
mov
test
jmp
push
push
push
jmp
call
pushl
jmp
shl
or
jmp
add
add
leave
add
add
leave
add
add
nop
nop
nop
nop
push
push
mov
jmp
add
rorb
xor
add
ret
jmp
add
add
rorb
add
add
adc
xor
push
jmp
add
add
add
in
jmp
mov
jmp
mov
xor
push
mov
jmp
shr
push
jmp
xor
push
push
nop
nop
nop
nop
nop
orb
jmp
cmpl
jne
jmp
inc
mov
jmp
lea
call
jmp
add
add
add
push
jmp
pop
pop
jmp
pushl
call
mov
mov
jmp
cmpb
jne
pushl
jmp
push
cltd
pop
mov
jmp
mov
xor
mov
jmp
pop
jmp
andl
mov
mov
mov
jmp
call
jmp
popa
jmp
push
push
jmp
add
add
add
je
adc
add
add
popf
decl
incl
add
add
call
dec
or
inc
or
decl
add
add
jmp
mov
push
andl
lea
jmp
push
andl
push
push
jmp
mov
lea
push
lea
jmp
push
pusha
nop
jmp
mov
movl
mov
mov
jmp
test
jne
pop
ret
add
add
add
stc
jmp
add
shr
and
mov
jmp
test
pop
jne
jmp
cmpl
je
mov
jmp
push
push
push
jmp
mov
pop
ret
add
add
add
add
ret
add
add
add
fldl2t
jp
add
add
add
in
push
mov
jmp
mov
jmp
test
jle
mov
movzwl
jmp
pushl
call
add
pusha
jmp
mov
mov
xor
mov
jmp
xor
test
jle
mov
jmp
mov
jle
jmp
add
push
mov
sub
jmp
pushl
jmp
mov
sub
jmp
sub
add
jmp
add
push
jmp
mov
mov
inc
dec
jmp
push
push
push
jmp
mov
cmp
je
mov
jmp
push
jmp
jne
mov
mov
jmp
mov
jmp
mov
call
mov
xor
jmp
xor
mov
mov
jmp
mov
test
jle
mov
jmp
mov
add
lea
jmp
and
cmp
jne
and
jmp
mov
mov
jmp
test
je
jmp
push
call
test
pop
jmp
mov
test
je
test
jmp
add
jmp
add
test
std
call
lock
jmp
push
mov
push
mov
jmp
cmpl
je
jmp
mov
add
jmp
jne
pop
ret
add
add
add
movb
jmp
mov
jmp
je
nop
nop
nop
nop
nop
add
push
push
jmp
add
add
add
call
push
jmp
mov
jne
mov
movzbl
jmp
movsbl
mov
xor
inc
jmp
lea
jmp
movb
jmp
call
call
mov
jmp
sub
jmp
je
lea
push
call
jmp
push
push
jmp
add
in
push
jmp
mov
mov
mov
ret
add
add
add
testl
mov
jmp
jmp
jmp
add
add
cmpl
jmp
mov
jmp
xor
mov
mov
xor
jmp
pushl
push
jmp
movb
jmp
add
inc
or
inc
sbb
mov
jmp
je
lea
jmp
decl
jne
add
cmpl
jmp
call
jmp
jne
mov
test
jle
jmp
call
test
pop
je
jmp
call
test
je
mov
jmp
push
jmp
jne
pop
pop
push
jmp
test
jmp
mov
add
add
dec
jmp
push
xor
jmp
xor
jmp
mov
nop
nop
nop
nop
nop
mov
movzwl
mov
jmp
add
add
jmp
jmp
push
pushl
push
jmp
pop
pop
leave
ret
add
add
add
test
add
lea
addb
jmp
jne
mov
jmp
pop
lea
jmp
add
jmp
xor
jmp
call
pushl
jmp
call
push
call
test
jmp
test
jle
mov
jmp
push
call
dec
pop
jmp
add
pop
pop
pop
nop
nop
nop
nop
nop
leave
ret
add
add
add
add
add
push
pop
pop
jmp
mov
jmp
pop
jne
lea
call
jmp
shl
shr
or
jmp
lea
jmp
sub
pushl
push
jmp
mov
jmp
xor
add
dec
jne
jmp
jne
mov
test
jmp
pop
pop
pop
ret
add
add
add
aaa
add
add
adc
jmp
pop
pop
pop
leave
jmp
je
mov
sub
mov
jmp
ret
add
add
add
add
jmp
call
push
push
jmp
cmp
je
jmp
call
jmp
push
jmp
andb
incl
jmp
push
jmp
pop
jmp
jmp
mov
push
pop
jmp
push
push
jmp
mov
mov
mov
lea
jmp
movzbl
incl
mov
jmp
push
push
jmp
and
inc
jmp
call
nop
nop
nop
nop
nop
add
push
push
push
jmp
call
jmp
inc
jmp
call
jmp
add
lea
jmp
cmp
je
cmp
je
jmp
shr
jmp
push
jmp
cmp
je
jmp
je
test
je
mov
jmp
push
pushl
push
call
jmp
mov
jmp
mov
sub
mov
mov
nop
nop
nop
nop
nop
incl
dec
jmp
mov
test
je
pushl
jmp
pushl
call
jmp
add
pushl
jmp
mov
push
push
call
jmp
jne
jmp
push
push
call
add
jmp
mov
jmp
jmp
jmp
add
cmpl
jne
jmp
add
jmp
mov
jmp
mov
lea
jmp
mov
push
jmp
call
push
pop
nop
nop
nop
nop
nop
pop
jmp
push
push
pushl
push
jmp
pop
jmp
call
test
jmp
pop
pop
jmp
call
push
jmp
pop
jne
nop
nop
nop
nop
nop
cmp
jne
jmp
leave
ret
xor
jmp
add
add
add
cmp
call
nop
nop
nop
nop
nop
push
push
mov
call
jmp
lea
push
call
jmp
push
jmp
test
pop
je
mov
jmp
push
jmp
mov
jmp
mov
call
jmp
sub
mov
mov
incl
jmp
push
jmp
dec
jne
jmp
push
mov
call
jmp
jmp
sub
jmp
dec
jmp
add
mov
jmp
dec
jmp
mov
pop
jmp
mov
shl
movzbl
nop
nop
nop
nop
nop
add
incl
mov
lea
jmp
pop
pop
leave
ret
add
add
add
sbb
incl
add
nop
nop
nop
nop
jb
inc
cmp
nop
nop
nop
nop
nop
jb
inc
cmp
jae
nop
nop
nop
nop
nop
inc
nop
nop
nop
nop
nop
inc
test
je
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
sub
mov
mov
incl
nop
nop
nop
nop
nop
dec
jne
nop
nop
nop
nop
nop
mov
jmp
mov
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
incl
incl
xor
nop
nop
nop
nop
nop
cmpl
je
nop
nop
nop
nop
nop
mov
pop
sub
pop
nop
nop
nop
nop
nop
pop
leave
ret
pop
fimuls
add
add
add
fisttpll
add
add
add
fimuls
add
or
fimuls
add
fimuls
add
add
add
fisttpll
add
fisttpll
add
or
aam
or
push
fimuls
add
or
fisttpll
add
or
push
fisttpll
add
add
add
add
fisttpll
add
add
add
fimuls
add
or
fimuls
add
fimuls
add
add
add
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
imul
add
incl
inc
gs
gs
je
jo
imul
xchg
add
jo
je
push
popa
addr16
add
roll
gs
popa
addr16
outsl
js
outsb
imul
push
push
inc
push
xor
cs
insb
add
or
inc
jb
add
dec
xor
cs
insb
add
lea
in
jb
jbe,pn
add
add
add
add
add
add
gs
ss
add
add
add
add
rolb
add
add
xchg
add
mov
cmc
outsb
cs
add
add
add
xor
add
nop
add
add
add
das
adc
add
add
add
or
add
add
xchg
lret
pop
cmp
add
add
add
add
nop
add
add
add
add
add
add
xor
push
aam
leave
xor
add
add
out
pop
test
lock
leave
jb
jo
and
jb
ss
inc
pop
test
int
add
xor
xor
xor
push
xor
in
cmp
cmp
insl
cmp
cmp
xchg
xor
ss
cmp
xor
xor
xor
aaa
iret
aaa
ret
cmp
mov
cmp
push
cmp
cmp
pop
ds
ds
lds
nop
xor
ss
aaa
data16
insb
aaa
fdivrs
and
daa
xor
xor
shll
fdivs
mov
hlt
xor
xor
xor
mov
ja
xorl
cmp
pop
cmp
add
cmp
cmp
aaa
cmp
cmp
sub
xor
inc
inc
dec
cmp
pop
imul
inc
dec
cmp
sub
sub
insb
and
jle
es
dec
and
cmp
dec
arpl
insl
dec
pop
dec
and
jge
cmp
inc
xor
imul
and
pop
bound
push
dec
xor
xor
daa
and
cmp
cmp
es
inc
jnp
cmp
pusha
inc
xor
arpl
jb
xor
dec
cmp
ds
and
inc
fs
sub
push
cmp
insb
jg
inc
inc
jae
jbe
pop
push
pusha
jge
dec
pop
pusha
push
sub
ds
dec
jno
outsl
cmp
outsb
sbbb
sub
xor
inc
and
sub
imul
imul
data16
jge
ss
cmp
sub
pop
ja
pop
sub
cmp
push
gs
and
dec
inc
push
dec
pop
sub
inc
and
jle
fs
push
jno
and
jp
xor
push
pop
ds
