es
rolb
cltd
cmovo
lahf
or
add
push
add
or
mov
push
mov
sbb
xor
dec
or
add
add
add
add
add
add
add
add
clc
or
addb
or
rolb
push
addb
push
jo
mov
add
add
add
and
orl
add
mov
test
xor
mov
or
add
seto
xchg
add
sbb
lock
add
add
mov
add
or
inc
add
add
add
or
add
or
add
addb
add
add
add
add
push
rolb
jmp
or
add
add
add
push
add
add
loope
xor
incb
loopne
xchg
or
mov
add
pop
adc
out
add
add
push
loopne
cmpsl
or
push
or
add
or
add
sldt
xchg
rolb
add
add
add
add
or
add
add
add
add
add
xor
gs
add
xor
cmc
add
add
or
add
or
add
push
rolb
pop
push
jo
dec
or
and
jle
mov
add
adc
add
bound
add
mov
add
push
push
add
add
add
push
adc
hlt
or
addb
add
add
add
pop
add
scas
or
add
movups
imul
addb
add
add
or
add
or
add
add
add
add
pop
push
add
or
add
add
add
pop
rolb
mov
or
push
or
add
push
adc
dec
add
add
mov
add
mov
push
mov
movw
mov
push
popl
mov
movw
call
movb
cmp
jne
mov
movw
ret
push
popl
push
addw
orw
push
push
popl
push
popl
mov
orb
mov
pusha
movl
call
push
popl
mov
orl
movb
push
push
popl
push
popl
xorl
movb
addl
push
popl
push
popl
push
or
push
popl
call
andb
cmpl
jne
add
call
xor
ret
sub
jmp
addb
add
xor
push
popl
push
popl
mov
movl
shl
andb
push
popl
mov
or
movl
shl
mov
mov
push
popl
push
popl
cmp
jne
movw
mov
orb
and
sub
push
popl
call
subw
orw
popa
push
popl
pusha
andw
call
addw
sbbw
mov
push
popl
orb
push
push
popl
xorl
andw
sbbl
addl
push
popl
or
push
and
call
sbbl
xorb
push
sbbb
xorl
and
and
addl
and
xorl
pop
and
push
popl
cmp
jne
andw
orw
ret
xorl
push
popl
popa
movl
call
subl
push
popl
push
sbbw
xorl
xor
orl
addl
mov
push
orw
addl
call
push
popl
push
push
shr
rol
mov
add
xchg
push
popl
mov
addl
movb
shl
sbbb
push
popl
push
sub
push
popl
xor
andl
andl
push
sub
movl
call
addb
and
push
push
popl
mov
mov
mov
push
push
popl
jmp
push
popl
push
popl
pop
push
popl
mov
orl
push
push
popl
push
subl
push
subw
mov
orl
mov
andl
push
popl
rep
and
or
pop
orw
subl
pop
push
lea
mov
xor
xchg
push
mov
sub
xchg
mov
xor
add
jmp
push
popl
sbbl
sub
push
popl
push
popl
mov
andb
sub
push
popl
sub
andw
subl
mov
movw
orb
sub
subb
or
jne
push
popl
add
movb
jmp
push
popl
andb
mov
push
popl
andb
shr
orb
shl
addl
mov
push
popl
add
or
jmp
push
popl
sub
push
popl
push
popl
mov
push
popl
andl
add
sbbb
sbbb
cmp
jne
push
popl
xorw
mov
orb
andb
add
push
popl
sbbl
mov
push
popl
add
push
popl
cmp
jne
push
popl
ret
push
popl
addb
push
addl
xorl
xor
push
popl
pushl
add
movb
pop
xorb
push
popl
lea
andl
or
addw
orw
mov
addw
push
popl
mov
push
popl
orb
lods
sbbw
mov
push
popl
sub
pop
movl
ret
andl
push
push
popl
mov
xorl
movl
add
orb
xorw
push
orw
subl
push
addb
xorb
push
xorb
push
push
popl
push
push
popl
push
popl
mov
orl
xor
mov
push
popl
sbbb
add
sbbl
pushl
subb
mov
orl
add
push
popl
add
addb
push
popl
mov
xor
add
orw
xor
xor
xorl
lea
subb
mov
orb
push
popl
add
andb
mov
push
popl
orw
xor
orl
mov
rol
push
popl
push
popl
xor
orb
sbbw
inc
push
popl
push
popl
cmpb
jne
orw
push
popl
cmp
je
orw
sbbl
inc
xorb
addl
cmp
jb
subw
mov
orl
add
orw
orw
movzwl
push
popl
mov
andb
addb
add
movw
mov
andb
add
push
popl
pop
xorl
cmp
jbe
addw
cmp
jae
orl
pushl
orb
pushl
subb
addb
push
push
popl
xorl
movb
push
popl
addl
andb
xorw
pushl
push
popl
push
popl
call
orl
call
subl
addb
pop
xorw
pop
orb
orw
pop
orw
add
pop
xorb
pop
sbbl
leave
addw
sbbw
ret
addw
call
ljmp
fs
int
inc
jp
push
xor
push
je
repnz
cs
sbb
repnz
mov
cmp
jae
or
dec
pop
and
sbb
negl
sub
out
mov
stc
fstp
jmp
mov
pop
stc
repnz
hlt
repz
sahf
stc
xchg
xor
fidivrs
sbb
or
mov
mov
inc
sub
or
push
in
icebp
ljmp
mov
sub
jmpw
jp
add
sub
add
loopne
mov
test
jb
push
fnstenv
push
lock
push
lds
imul
mov
mov
xor
pop
pusha
lahf
mov
jg
or
iret
pop
call
cli
rolb
push
hlt
repz
shr
in
dec
stc
xchg
frstor
divb
das
outsl
jnp
push
rclb
push
sub
jg
stos
push
cmc
or
cmp
pop
rorl
les
pop
pop
mov
imul
sub
push
pop
and
xchg
fnsave
xchg
dec
dec
stc
xchg
xor
fs
or
jmp
xchg
pop
mov
cli
jg
sbb
push
lock
subb
or
cltd
push
pop
sahf
sbb
sarb
xchg
pop
sbb
xor
cmc
loope
xchg
outsl
adc
in
cmp
pushf
lahf
xchg
enter
cmc
sbb
or
decl
pop
inc
fcomip
cmp
push
mov
or
sub
lods
dec
stos
sbb
dec
push
inc
sub
inc
out
out
mov
push
in
leave
ljmp
insb
push
out
pop
cmc
mov
call
push
xor
sub
add
cmp
outsb
scas
push
push
xchg
xor
pop
cmp
lret
cmp
sbb
hlt
out
and
mov
or
dec
mov
in
push
or
lock
icebp
stos
dec
xchg
fldl
repz
xchg
push
movb
adc
or
andl
and
sbb
dec
dec
andb
push
pop
mov
push
mov
jmp
xchg
roll
lret
xchg
in
out
outsb
inc
fldcw
or
mov
out
dec
stc
xchg
frstor
imull
mov
xchg
in
dec
inc
or
imul
leave
or
bound
push
inc
jg
pop
sbb
das
test
or
jg
iret
lret
cmp
mov
scas
lea
repnz
popf
fdivp
xchg
insb
popa
cltd
jp
pop
cmp
icebp
dec
stc
xchg
fstp
sbbb
xor
sub
xor
fidivrs
dec
xchg
rolb
ss
push
add
notl
inc
mov
dec
subl
loopne
or
lret
mov
lcall
out
imul
les
push
mov
imul
mov
jl
xor
cli
jp
cs
inc
xchg
aam
adc
cmp
stos
sub
push
pop
or
mov
mov
in
cmp
repnz
inc
jae
mov
xchg
push
int
add
push
cltd
ds
fcomps
xor
adcb
jo
or
sbb
mov
dec
in
lods
mov
das
jge
fucomi
cmp
mov
fstps
cwtl
movsw
negb
in
popa
pop
xor
dec
mov
clc
js
mov
or
mov
dec
ret
add
mov
imul
leave
notb
dec
stc
xchg
hlt
in
faddp
mov
dec
adcb
dec
xor
testb
add
mov
lret
fcoml
imul
sti
mov
in
push
push
jns
in
xchg
pushf
jmp
jnp
jb
insl
scas
ret
rorl
leave
and
inc
and
bound
pop
sahf
inc
andb
mov
mov
stc
xchg
or
hlt
jne
push
jae
push
cmp
push
pop
mov
or
imull
aaa
out
adc
push
out
ret
lahf
imul
and
stc
std
cmp
in
lds
jg
dec
jp
xchg
push
mov
xor
add
scas
loope
or
cmp
push
scas
xor
sub
dec
std
mov
pop
lret
fcoml
mov
and
inc
ret
adc
dec
adc
imul
mov
imul
fcom
mov
rcll
lret
or
push
out
xor
fmuls
and
dec
adc
sub
outsb
repz
clc
xchg
sub
push
stos
movaps
sub
dec
push
mov
inc
jne
push
add
push
arpl
test
push
ss
or
stc
aas
mov
leavew
mov
pop
pop
add
xlat
scas
jmp
or
xor
cwtl
or
dec
and
sahf
jl
fisubs
divb
aaa
fnstsw
jns
sbb
cmpsl
jnp
or
imul
jg
sbb
sub
inc
ja
pop
jb
daa
or
inc
and
popf
xchg
and
popa
adcb
xchg
xor
push
test
insl
das
jb
pop
push
sbb
or
sahf
rol
sbbb
xor
mov
into
pop
jl
in
xchg
decl
sub
mov
mov
xchg
std
movsb
or
out
rcll
imul
xchg
push
testl
xchg
jecxz
imul
add
test
and
push
icebp
push
out
push
std
call
or
and
into
sub
adc
stos
daa
dec
xorb
push
dec
lock
or
loop
fdivp
xchg
pop
mov
jno
mov
or
add
or
mulb
mov
xor
dec
lret
mov
mov
sub
xchg
in
popa
lret
jecxz
xor
jge
in
xchg
jge
lock
or
data16
orb
sahf
jl
loope
xchg
insb
or
push
and
adc
jl
loop
push
add
or
cmp
cmpsl
aaa
fcompl
sbb
xor
fst
out
xchg
or
sti
sbb
xchg
fldl
ret
sarl
push
cld
rol
ret
js
or
pusha
mov
pop
mov
je
jge,pt
or
imul
stc
cmp
xor
in
enter
mov
jg
repnz
in
ds
cwtl
pop
popf
mov
inc
ret
add
mov
cli
rolb
repnz
enter
inc
sbb
or
add
inc
imul
iretw
test
jle
roll
and
push
loope
add
mov
lret
push
add
rep
lods
xor
push
push
xchg
outsl
xchg
inc
jae
xchg
inc
popf
loopne
in
enter
mov
xchg
int
mov
fs
sub
cmp
push
push
or
dec
imul
or
mov
xlat
ret
add
mov
ljmp
repnz
pop
lcall
test
call
ftst
stos
cmp
lcall
mov
je
mov
xor
sub
mov
push
repz
and
hlt
lds
rorb
or
xchg
or
mov
push
add
adc
mov
xor
xlat
mov
mov
xchg
mov
xor
mov
insl
js
daa
push
adc
lret
imul
lods
jbe
fadd
sbb
cmpsl
mov
addb
pop
or
push
lods
adc
test
mov
mov
cmp
add
xorl
jl
jmp
inc
jge
sub
and
shl
sbbl
cmpsl
imul
cwtl
ficoml
dec
in
or
push
push
fdivr
aaa
sub
lods
xchg
aas
dec
in
cmp
fwait
pusha
imull
pop
adc
dec
test
dec
aaa
aaa
inc
loopne
push
dec
stc
pop
loop
out
fstpt
mov
xchg
dec
scas
xor
inc
sub
add
fstpt
in
or
cmpsb
jecxz
push
imul
ror
inc
mov
loop
movsl
jg
add
inc
pop
adc
pop
xchg
xor
das
pop
xor
fcompl
icebp
cmp
arpl
hlt
push
dec
stc
xchg
pop
push
push
negl
in
or
int
mov
mov
ss
xchg
mov
jle
adc
inc
push
in
or
xchg
push
stos
xorb
pop
out
xchg
adc
lret
jle
jae
arpl
in
pop
adc
popa
mov
and
arpl
push
repnz
bound
repz
stos
test
jp
push
pop
xlat
idiv
movd
or
dec
push
fsub
push
es
xor
xchg
jmp
ret
sbbb
xor
pop
xchg
push
out
xchg
add
sub
mov
fwait
jp
pop
jb
cmpsb
icebp
dec
stc
xchg
fnstsw
push
and
adc
or
jg
clc
add
mov
fst
lock
push
and
or
xchg
scas
pop
xchg
pusha
pop
add
or
lret
xor
cmpsl
mov
and
inc
sub
inc
push
or
fstpl
fs
cmc
xchg
or
insb
inc
xor
adcb
cmp
and
xchg
notb
les
repnz
push
push
loop
jmp
call
int3
mov
push
fistpll
xor
fs
xchg
pop
cmp
outsb
dec
leave
sbb
lcall
cmpb
movsb
mov
xchg
scas
add
push
fidivrl
arpl
or
daa
dec
insb
in
in
rol
sbb
out
movnti
push
pop
out
jbe
pop
jns
or
push
aad
mov
mov
xor
fstpl
jl
sbb
xorl
xchg
push
rclb
lret
sub
jg
repz
cmp
aad
xor
push
dec
pop
push
push
or
movsl
inc
jl
adc
dec
pop
xor
jle
fdivp
pop
mov
out
movsl
mov
cld
jg
lret
fsubrs
mov
js
cltd
cwtl
dec
dec
bndldx
jl
mov
xchg
adc
arpl
pop
movsb
nop
insb
dec
stc
xchg
sub
dec
stc
or
rol
inc
out
mov
andl
dec
outsb
std
add
cmp
jne
inc
mov
mov
ja
iret
mov
push
sbbb
shlb
scas
ljmp
xchg
not
gs
adc
cltd
mov
pusha
ret
add
ret
pop
lret
add
arpl
dec
xor
lods
push
lret
in
push
int3
je
roll
insb
push
in
cs
pop
pop
pop
leave
hlt
pop
mov
mov
xchg
movsb
movsb
sub
popf
xor
push
andb
stos
pusha
mov
testb
pop
pop
xor
into
out
fstpt
add
test
icebp
xchg
cmp
mov
mov
dec
adc
push
insb
and
icebp
or
jg
lret
lahf
sub
aad
xor
mov
pusha
cmc
jne
ss
and
lcall
repnz
stc
xchg
push
call
aaa
fcompl
sub
add
dec
and
ja
hlt
pop
je
daa
jns
xor
cmp
or
jge
lock
or
je
gs
inc
cmpsb
mov
out
mov
pop
fcompl
adc
dec
add
dec
cmp
loop
pop
lret
fists
pop
mov
rolb
mov
comiss
les
add
bound
sub
mov
arpl
bound
ljmp
lahf
mov
fs
test
jle
dec
ficomps
jnp
cmp
cmp
imull
cmp
mov
or
outsl
das
enter
jae
xchg
jno
xchg
je
jg
or
add
js
inc
hlt
mov
cld
and
rorb
and
push
sbb
lods
sbbl
imul
add
out
mov
add
jge
or
cld
loope
pop
jae
loopne
cmpsb
fcompl
jb
mov
testb
out
xchg
mov
jge
xchg
xor
test
mov
test
or
imul
dec
fildl
push
jnp
jb
and
insl
inc
sbb
xlat
pop
in
push
mov
repz
out
cs
push
fs
jmp
scas
sub
fisubrl
insb
xchg
lahf
fildll
mov
leave
das
cmpsb
dec
call
push
leave
or
in
xchg
or
dec
out
enter
push
jns,pn
lret
int
xor
cmp
xor
in
bound
xor
rolb
dec
stc
xchg
xor
or
dec
stc
or
fadd
stos
or
or
sub
outsb
stos
push
adc
and
pop
repz
add
push
in
adc
les
in
fnstcw
xchg
or
mov
popf
mov
pop
xlat
or
pop
mov
or
lock
or
in
add
and
xor
and
andl
pop
jg
in
in
stos
inc
jae
xor
jecxz
pop
cmp
or
push
fcmovnu
and
ret
mull
cmp
fwait
dec
ljmp
loope
xchg
aaa
clc
and
cmp
xchg
push
lea
lea
lret
inc
fdivp
xor
leave
ljmp
loop
leave
mov
or
or
mov
xchg
pop
pop
add
or
xor
push
adc
add
xlat
pusha
leave
repz
mov
stc
xchg
pop
adc
mov
mov
hlt
testb
pop
adc
dec
ret
push
cwtl
push
inc
lahf
jp
push
mov
stc
xchg
fldl
mov
lahf
jnp
jg
dec
adcb
popa
aam
and
mov
in
add
fstp
hlt
xchg
xchg
enter
inc
call
shlw
int3
test
pop
add
sbb
pop
les
and
fs
int
outsb
jp
or
into
mov
fs
pop
pop
dec
stc
jmp
lock
hlt
outsb
das
adc
pushf
stos
sub
push
xor
and
and
pop
and
andb
pop
push
pop
jge
fcmovne
adc
ret
test
push
test
hlt
push
fwait
jp
fdivp
xchg
or
in
and
incb
int3
or
fs
cmp
add
and
lods
out
jnp
jb
lret
negl
pop
idivl
mov
subl
and
in
dec
push
push
lahf
push
push
or
mov
scas
jecxz
addr16
sbb
dec
push
icebp
xchg
or
mov
or
sbb
movb
jle
stos
add
push
ss
xor
xchg
push
and
imul
fsts
lret
or
lret
sub
shr
bswap
sub
sti
mov
fcomi
pop
icebp
mov
xchg
fldl
or
xchg
or
inc
in
cmp
lcall
mov
notb
pop
fists
xor
in
xor
jl
jle
in
shl
ret
push
mov
in
pop
enter
jae
popf
fdivp
pop
movsl
imul
mov
fsubrs
push
fnstcw
movl
aad
sbb
sub
ror
fdivrs
cmpsl
test
inc
jmp
les
lret
in
push
loop
aas
mov
or
lds
stc
ljmp
mov
enter
or
push
out
in
imul
jae
cmp
das
rcl
push
push
jg
jno
dec
pop
fstps
jg
iret
dec
push
jl
mov
or
clc
jmp
mov
cld
inc
andl
addps
orl
dec
xorb
in
or
fmuls
andb
mov
nop
push
push
jge
stos
add
out
xchg
inc
in
lock
push
push
in
loopne
or
cwtl
jp
xchg
in
jbe
repnz
stc
xchg
ffree
sbbb
je
or
pop
mov
or
mov
jmp
push
xchg
int
sahf
jp
data16
pop
or
cmp
push
or
and
movsl
aam
push
xorl
xor
stos
jnp
in
lcall
aad
inc
cmp
jg
inc
imulb
pmaddwd
inc
push
das
and
aam
dec
jns
fstpl
popa
pop
push
and
scas
fisttps
or
inc
imul
and
mov
mov
stc
or
mov
push
push
stos
movaps
enter
mull
sahf
jp
std
iret
inc
mov
xor
push
pop
testl
cmp
mov
jmp
lcall
xor
lock
repz
push
out
testb
pop
js
mov
lcall
mov
leave
repz
mov
dec
stc
xchg
scas
and
pop
add
or
enter
xor
lock
mov
jmp
jb
or
dec
stc
or
fadd
sub
aam
fnstcw
fidivrs
imul
mov
add
ret
mov
rcr
ljmp
or
and
pop
push
fisubl
in
xor
lods
mov
lock
or
dec
adcb
xchg
xchg
sub
dec
in
lock
inc
fdivp
adc
ds
xor
sbb
or
mov
adc
popa
xchg
push
and
push
push
stc
cltd
dec
dec
dec
push
in
jl
mov
mov
xchg
jmp
in
push
std
call
orb
lea
insl
pusha
jle
adc
or
push
xor
inc
cld
gs
mov
add
dec
filds
js
inc
mov
sbb
dec
cmpsl
rclb
add
out
icebp
add
push
icebp
xchg
xchg
cltd
clc
dec
and
lcall
jl
mov
mov
mov
out
fs
xchg
loope
pusha
xlat
xchg
andb
mov
xor
sub
push
push
cvtpi2ps
lds
xor
out
aas
xor
hlt
pop
inc
push
outsb
test
fisttpl
sbb
sub
cmp
rcl
pinsrw
je
xor
in
leave
mov
push
pusha
push
scas
aaa
hlt
mov
ret
or
add
push
jnp
jb
pop
imul
push
fnstenv
adc
cli
mulb
out
cs
cmp
dec
xchg
inc
pop
jae
or
loop
adc
mov
andl
xchg
adc
mov
aad
test
fidivl
mov
push
push
aam
jg
push
hlt
jo
in
lcall
add
mov
enter
jae
in
ja
jns
mov
jno
bound
push
repnz
jp
xchg
push
or
hlt
push
pop
and
scas
nop
lret
mov
sub
iret
dec
dec
call
aam
cmc
push
leave
fcoms
out
pop
rorb
or
fs
das
and
jmp
dec
push
mov
nop
pushf
jb
movsl
add
xchg
stc
adc
data16
fcmovbe
je
adc
hlt
insb
pop
dec
add
xchg
jno
int3
mov
aaa
fcompl
les
push
adc
dec
out
sbb
lock
or
mov
xor
sub
fidivs
jnp
or
mov
or
sarb
icebp
xchg
out
mov
jge
popa
inc
cmp
leave
jo
pop
loopne
cwtl
jmp
mov
push
cmc
adcb
or
dec
mov
fs
dec
or
adc
lret
pushf
inc
fnstsw
xor
ret
arpl
in
xor
insb
xchg
lahf
mov
fmuls
cmpsb
jl
loop
adc
lahf
mov
jg
or
sbbl
cli
rolb
push
hlt
push
xchg
fsubl
divb
jo
rorb
lock
sti
adc
std
orb
enter
pop
mov
stos
arpl
test
push
popa
mov
adc
test
mov
jmp
test
add
cld
enter
inc
hlt
inc
icebp
movsl
or
inc
outsb
xchg
lods
lcall
cwtl
iretw
jl
mov
adc
cltd
cwtl
xchg
stc
adc
pop
lahf
sub
push
mov
fiadds
outsb
pop
pop
push
sbb
mov
sub
jne
lock
or
out
jmp
cmpsl
adc
hlt
fs
xor
ficoml
mov
pop
sbb
xor
push
add
stc
xchg
or
insb
lcall
movsl
in
adcb
pop
in
xchg
mov
fcoms
xchg
or
mov
int3
ret
add
xlat
lahf
mov
add
mov
mov
dec
call
or
xchg
leave
push
or
mov
or
cmp
outsb
push
pop
or
dec
pop
adc
scas
sti
orb
pop
leave
pop
scas
subb
mov
push
push
or
adc
aam
lea
inc
push
mov
lock
or
xorb
cmp
jl
pop
push
iret
mov
int3
mov
jl
xor
push
or
shl
lock
roll
pushf
and
test
or
mov
orl
lock
bound
outsl
mov
inc
and
movsl
mov
fs
dec
xor
push
cmc
cltd
jp
cs
nop
push
stc
xchg
frstor
sub
pusha
fsubl
sbb
push
sub
lret
mov
or
mov
out
mov
shlb
jns
adc
or
arpl
scas
cmp
cmpb
ljmp
negb
inc
cmp
popa
inc
push
jg
pop
inc
out
push
imull
xor
or
lds
cmp
fsubl
loop
dec
decl
pop
jnp
or
fadd
repz
ret
and
push
ret
sbb
leave
movsb
sbb
sub
test
mov
cwtl
loop
add
dec
pop
push
jg
pop
mov
addb
cwtl
rcl
cmpps
popa
mov
lds
in
jae
js
xchg
sub
mov
into
xlat
and
xchg
mov
add
add
add
jae
jl
leave
add
aam
sub
jecxz
xlat
divl
push
addr16
pop
push
pop
jg
lret
xchg
in
ret
icebp
and
jle
xchg
dec
bound
pop
xchg
repz
stc
xchg
push
adc
mov
std
jp
lahf
notl
leave
or
ss
jmp
mov
stc
xchg
xor
cmp
sbb
or
mov
mov
xchg
xchg
aas
sub
stc
call
addb
outsb
imul
adc
and
addl
cmp
leave
pop
loopne
xchg
dec
imul
fsubs
push
repnz
stos
in
out
idivb
sbb
lock
xchg
xchg
pop
push
and
xor
mov
and
mov
outsb
push
pop
clc
dec
pop
and
mov
das
andb
pop
cwtl
sbb
loopne
lock
push
add
jae
inc
dec
push
fiadds
xor
mov
jmp
dec
mov
das
adc
or
push
push
cmp
call
subb
shrl
lock
sbb
jle
int3
add
pushaw
inc
outsb
popf
sub
mov
xchg
or
xor
inc
lret
mov
cld
or
stos
in
repz
xchg
xor
dec
stos
shrl
jge
lock
or
jmp
negl
in
in
or
adc
imul
adc
jl
pop
xchg
mov
dec
arpl
divb
sub
mov
mov
clc
out
sub
cmpl
adc
add
pop
pop
sub
std
test
adc
in
movsl
push
cmc
fs
psllq
cwtl
pop
test
fisttpll
ret
cmp
jae
in
dec
out
ret
leave
out
test
xchg
int
jnp
outsl
flds
cs
pop
sbb
sbb
xor
insb
xchg
lahf
movb
fiadds
shrl
movsl
test
aad
ficoml
or
or
hlt
insl
les
cmp
outsb
adc
add
jl
enter
mov
pop
push
data16
mov
mov
cmpsb
jg
mov
psubw
xchg
cmp
popa
inc
outsb
xchg
cs
in
lret
lret
in
push
sti
das
leave
loopne
mov
aas
or
lds
dec
dec
lds
mov
fdivrp
and
loope
in
arpl
xchg
pushf
and
loope
xchg
jecxz
pop
push
and
mov
mov
cli
jg
sahf
cmp
push
lock
or
push
lea
xchg
hlt
pop
push
and
scas
fbld
fistpl
out
repnz
jmp
inc
clc
xchg
cmp
mov
test
rcrl
testb
maskmovq
imull
jmp
or
stos
aad
sub
pop
sbb
in
and
and
pop
dec
pop
inc
inc
cmp
ror
pinsrw
lret
and
es
or
push
adc
les
lret
in
push
in
scas
leave
repnz
in
sub
or
insb
push
out
xor
add
in
add
sbb
mov
cvtpi2ps
push
test
imul
xchg
push
aad
out
clc
push
pop
pop
dec
pop
push
sbb
push
leave
mov
bswap
into
rorl
test
sbb
mov
mov
jb
cwtl
xchg
cvtps2pi
popf
xchg
push
push
dec
mov
cmp
pop
outsl
test
jns
sub
push
inc
movntps
sti
adc
cmp
or
ret
pusha
pop
mov
aaa
add
push
test
mov
cmp
xor
addb
mov
or
hlt
jbe
inc
push
dec
cmp
fstpt
mov
popa
dec
sbb
jmp
cmp
add
lds
mov
sahf
jae
sbb
sub
inc
out
stc
inc
sbb
aam
shrl
arpl
in
push
lock
jb
nopl
imul
ljmp
cmpb
push
jle
rcr
mov
jb
push
aam
jae
loopne
jmp
jp
add
lods
aam
fwait
or
hlt
aam
out
ret
push
push
data16
xchg
int
call
push
dec
or
aaa
adc
gs
leave
cmc
xadd
stc
xchg
cli
mov
repnz
adcb
jno
xor
test
and
push
fisttpll
sub
paddusw
lock
leave
clc
jae
sub
cmovs
xchg
stos
rclb
push
push
and
cmpsl
mov
dec
in
shl
ja
lret
push
stc
jmp
jle
ret
mov
rorb
sbb
and
inc
mov
lds
cld
scas
jp
sub
push
pop
ucomiss
js
jnp
xor
sub
rorb
lret
inc
push
addr16
out
rorl
lea
imul
push
rcrb
dec
loop
xchg
pop
xlat
sub
je
add
fists
fbstp
sub
fs
xchg
cmp
add
int3
sub
jnp
xor
sbb
mov
mov
fisttpll
dec
in
push
inc
push
out
rorl
rcrb
mov
imul
ud0
xlat
jnp
shll
test
insb
xchg
lahf
rorl
icebp
mov
cltd
das
popa
mov
popf
popa
mov
stc
or
fdivrl
and
add
adcl
and
test
jle
pop
and
outsl
mov
jg
mov
xchg
or
lea
out
setns
out
sti
jle
push
push
in
push
in
leave
loop
jge
add
loopne
and
fwait
and
cmpsl
cmpb
out
or
mov
mov
imul
enter
jmp
hlt
movsl
inc
imul
jge
rcr
adc
inc
mov
fs
out
cld
inc
pop
xchg
inc
jae
daa
rorl
push
in
je
adc
xchg
inc
push
fstp
mov
push
in
xor
add
hlt
mov
and
icebp
icebp
mov
or
add
into
aad
push
push
sbb
sbb
rdpmc
cld
lret
mov
xchg
icebp
data16
adc
and
jp
add
jg
fwait
jp
xchg
in
in
icebp
dec
stc
xchg
fldl
shlb
xor
enter
std
mov
lcall
aam
or
push
push
fildl
std
insl
xor
call
cwtl
in
cmp
cwtl
out
xchg
sarb
cwtl
sahf
mov
sub
dec
push
in
pushf
fsubrl
push
aad
push
or
into
xchg
std
fisubrs
push
inc
leave
jmp
xlat
xchg
or
dec
outsb
mov
pop
xchg
xchg
xor
mov
xor
cmp
mov
mov
stos
push
push
hlt
or
mov
shrl
xor
push
and
push
xchg
icebp
decb
sbb
inc
decl
pusha
leave
testl
dec
stc
xchg
mov
cmpsl
in
inc
mov
push
ret
sbb
std
clc
jl
jb
das
push
pop
cmc
mov
in
test
insb
xchg
lahf
mov
stc
xchg
das
popa
mov
imul
dec
push
pop
add
lock
xlat
mov
mov
outsb
fsubl
and
push
repnz
xchg
in
bound
jmp
lock
push
adc
popf
xchg
es
sti
xchg
lods
imul
loop
scas
xabort
pop
in
fwait
xchg
add
nop
push
outsb
lock
xchg
cmc
call
fidivrl
insb
xchg
lahf
aam
cld
pushf
jnp
mov
mov
mov
xchg
or
fwait
dec
push
xchg
stos
out
inc
mov
push
leave
dec
lret
adc
xchg
popf
add
sbb
inc
push
icebp
or
xchg
push
mov
and
and
jl
xchg
jnp
xor
in
fwait
jo
jnp
jb
adc
jb
push
fimull
add
aad
hlt
mov
mov
pop
sub
xchg
dec
pop
dec
push
fldenv
insb
xor
xchg
sub
push
daa
xchg
scas
rorl
pop
xor
dec
pushf
add
sbb
mov
inc
fdivp
loopne
jmp
adc
data16
fs
int
in
lock
pop
jg
cmpsb
or
cmp
fiaddl
pop
lret
ficoml
xchg
shl
add
mov
cmp
outsb
pop
pop
push
lods
xchg
pop
lahf
imul
sub
pop
pop
lock
icebp
fs
scas
adcb
fldl
adc
pop
add
fstpt
jns
dec
jl
jge
clc
mov
fstpt
dec
dec
jge
lds
inc
subb
pusha
push
push
inc
push
mov
leave
mov
test
test
sub
sbb
and
and
fidivrs
mov
cltd
gs
cld
adc
jbe
sbb
inc
push
pop
test
pop
cli
xchg
or
andb
inc
jp
hlt
pop
push
and
xchg
mov
in
cltd
mov
scas
int3
xchg
mov
dec
stc
adc
jne
or
dec
push
in
pushf
stc
mov
sarb
push
add
mov
mov
fdivs
sbb
subl
mov
fwait
insb
xor
pushf
popf
xchg
mov
mov
subb
mov
repz
in
dec
mov
fs
sbb
out
movsb
push
fsubrs
xor
cmp
mov
scas
lds
in
lret
loopne
dec
cmp
add
arpl
mov
sbb
test
lock
pop
aad
adc
ret
jmp
xchg
or
enter
scas
dec
pop
fimull
insb
xchg
lahf
mov
iret
outsl
stos
div
leave
das
cmpsb
clc
or
inc
rcl
in
cmp
int
cmpsb
data16
pop
jae
pop
cmpsb
lret
mov
out
jle
jnp
jb
jmp
mov
and
test
cmpsb
gs
inc
push
adc
jp
add
jg
lcall
jl
mov
loop
fbld
xchg
icebp
adc
or
xchg
or
sbb
xchg
in
mov
push
int3
adc
insb
fcomip
mov
push
in
jne
push
or
cmpsb
data16
xor
add
iret
fldt
adc
pop
or
arpl
jmp
pop
push
cli
sbb
pushf
xchg
ss
xor
mov
test
ror
bswap
cmp
mov
sbbb
add
dec
stc
xchg
pop
add
push
or
popf
inc
enter
in
sbbb
sbb
or
lods
sahf
add
mov
jl
xor
data16
pop
subl
xchg
outsl
fmull
and
gs
out
stc
push
xchg
inc
jae
fcomps
int3
hlt
enter
in
inc
clc
xchg
pop
inc
push
or
clc
xchg
or
repz
rcr
sbbb
xor
cmp
rcrl
push
xor
fcomp
lock
xchg
int
cltd
in
shll
fs
int
aad
push
adc
out
or
xor
int
xchg
in
rorl
loope
jp
out
cmp
or
xor
leave
icebp
or
ret
pusha
hlt
adc
xchg
sbb
pushf
fcoms
roll
je
adc
push
push
fcoms
mov
cmp
or
push
imull
jl
jne
and
subl
and
sbb
pop
add
push
xor
adc
push
icebp
fisubrl
into
mov
or
test
cmp
ret
loope
mov
cmp
and
mov
xchg
or
in
clc
dec
popf
jae
xchg
xchg
and
out
cmp
jns
in
sub
jle
shl
pop
repz
dec
pop
jbe
mov
xchg
mov
sahf
push
pop
shlb
inc
and
mov
cwtl
enter
shll
insl
mov
pop
sahf
mov
lret
jg
or
into
ret
lret
add
push
gs
hlt
jne
pop
rorl
sub
push
xchg
movaps
popf
sahf
jnp
xor
loop
or
push
je
incl
push
jg
ret
divl
add
popl
movl
adc
add
fstps
sbb
add
notb
xor
sub
sbb
fdivp
xchg
pop
pop
add
or
xor
enter
icebp
dec
or
lret
fs
jl
fisubs
divl
jge
dec
adc
add
jae
dec
call
sbb
sub
lea
cmp
inc
lds
mov
add
push
xlat
rclb
pop
dec
add
sub
jp
jb
xchg
xor
stos
shr
pop
repz
adc
fwait
or
fucom
mov
push
fidivl
es
fbld
imul
pop
jns
or
fadds
or
xchg
cmc
xchg
arpl
fildll
cli
dec
xlat
push
lock
xchg
aas
push
dec
in
sbbb
lock
aas
xor
pop
aam
jl
xchg
ja
mov
jo
mov
cwtl
arpl
out
dec
stc
xchg
frstor
divl
sub
int
jl
clc
cmp
push
adc
add
xor
int
or
push
xchg
mov
test
pop
cmc
xchg
fwait
addb
jle
and
fisttpll
repz
stc
xchg
xor
xchg
jns
xabort
or
push
xchg
dec
ret
sbbb
xor
push
and
or
jg
incb
out
data16
jmp
mov
mov
push
and
sub
jne
mov
es
sbb
test
jb
add
and
adc
xchg
sub
sbb
sub
xchg
addr16
subl
movsb
ret
ss
in
push
mov
or
mov
cmp
mov
pop
sub
sarb
imul
rorl
leave
add
shll
aam
sbbb
ret
push
xor
dec
xchg
cmp
inc
dec
xlat
jbe
ljmp
xor
or
mov
pop
sub
icebp
xchg
or
out
or
mov
add
out
jmp
jne
repz
xchg
inc
imul
xlat
int3
aaa
es
popf
cs
movsb
sahf
stc
fwait
jp
xchg
popf
cli
loop
test
jl
aad
jle
add
out
lock
cwtl
xchg
std
hlt
pop
push
and
mov
enter
or
push
sbb
jp
mov
nop
icebp
push
stc
xchg
fstpl
in
xor
adcb
jns
xchg
inc
sbb
rdpmc
jns
mov
push
jle
out
or
dec
push
test
iret
jp
call
mov
cwtl
cltd
fistpll
cwtl
faddp
inc
clc
ja
dec
pop
into
adc
icebp
or
hlt
insb
mov
movsb
lahf
jnp
or
push
mov
cwtl
out
imul
fmul
test
add
notl
js
xchg
jp
xchg
out
mov
pusha
pop
leave
not
push
dec
stc
xchg
sahf
fwait
shll
repz
jg
add
shl
insl
pushf
xchg
les
clc
icebp
inc
and
repz
dec
shrl
cmp
nop
cmpb
mov
call
jmp
adc
outsb
je
adc
les
rcr
mov
andl
mov
pop
pop
aaa
pop
dec
loope
adc
add
icebp
pop
cmp
add
or
sbb
push
scas
cmp
lcall
inc
sub
jb
das
pop
sahf
insl
pushf
das
inc
dec
nop
sbb
rorl
fidivl
mov
sub
push
ret
sahf
jp
test
outsl
icebp
dec
stc
xchg
fnstsw
mov
cmpsl
cmp
lcall
mov
testb
inc
fst
repz
dec
push
ffree
std
mov
xor
xchg
sbb
xchg
cmp
scas
cmp
pushf
sarb
cmc
adc
dec
sbb
or
aam
out
call
dec
xchg
sbbl
or
xchg
fstpl
jo
pop
pop
and
dec
aad
paddb
pop
lds
xor
push
std
xchg
adcl
push
data16
jl
mov
mov
cmc
xchg
icebp
adc
or
ret
lock
add
jmp
fstps
xchg
shl
push
mov
fwait
adc
js
mov
lcall
shr
pusha
xchg
xor
push
fucomi
loope
mov
add
lock
in
enter
bswap
fdivs
out
out
lret
dec
in
bound
mov
arpl
shr
repz
stc
xchg
inc
icebp
push
inc
sub
inc
out
cmp
push
add
adc
pop
or
pop
cmc
mov
jmp
out
push
hlt
je
lcall
test
adc
or
andl
imul
scas
xor
mov
push
mov
mov
or
repz
addb
inc
mov
mull
repz
dec
clc
or
inc
enter
in
mov
inc
int
int3
or
andl
das
push
jecxz
mov
xchg
cli
adc
pop
scas
push
test
in
lods
jmp
push
sbb
or
setle
dec
pusha
lock
dec
push
ret
icebp
xchg
or
mov
scas
xlat
push
enter
xchg
push
addr16
aas
xor
movsb
xor
aam
imul
out
outsl
lahf
js
cmpsl
dec
xchg
push
or
dec
out
sub
mov
in
les
xor
rcrl
inc
outsb
mov
cmp
outsb
xchg
enter
push
dec
sub
sbb
scas
in
mov
push
imul
dec
jne
dec
push
push
out
xor
clc
push
and
pop
jg
add
int3
push
jmp
and
adc
jmp
jle
lret
in
push
cli
mov
sahf
out
lods
or
insb
push
repz
add
xchg
or
jp
out
mov
imul
dec
lock
lds
pop
push
and
fmuls
repz
hlt
cmc
data16
negl
add
clc
mov
ljmp
aam
fidivl
fxch
xchg
dec
xchg
daa
sub
inc
push
push
adc
cmc
xchg
or
or
adc
xchg
push
clc
nop
je
push
hlt
dec
push
addr16
mov
xchg
fstpl
mov
and
mov
dec
mov
fstps
and
mov
and
or
les
testb
leavew
std
mov
pop
cltd
dec
dec
test
in
jl
mov
arpl
cltd
adcb
push
and
or
or
jb
ds
je
add
mov
repnz
pop
aaa
into
cmp
adc
outsl
xchg
pop
ret
xorb
pop
and
enter
fimull
jo
fnstenv
fsubl
pusha
mov
int
mov
stc
out
fsubrl
push
addr16
push
hlt
dec
lods
jmp
xchg
repnz
jmp
add
in
aas
fstps
test
add
testb
pop
push
hlt
dec
test
fst
repz
lcall
add
mov
mov
xchg
test
dec
out
int
dec
dec
and
inc
push
or
std
xchg
or
call
sbb
sbb
sbb
rdpmc
cld
movl
lret
mov
not
push
cmpsl
jge
lock
or
mov
in
mov
dec
add
inc
lock
pop
lahf
jp
cmpsl
data16
icebp
push
stc
xchg
fldl
sub
cltd
fsubrl
shll
std
adc
pop
jl
out
lcall
fdiv
xchg
push
push
test
out
push
or
notl
or
fsubrl
push
je
adc
push
add
or
fcomi
imul
jp
hlt
or
cltd
jp
mov
dec
stc
xchg
frstor
int
xor
out
enter
aas
push
inc
arpl
cltd
testb
clc
jbe
inc
ljmp
fstps
cmp
xchg
dec
dec
test
lcall
mov
testb
addr16
pop
cld
xchg
icebp
data16
xchg
cs
cltd
pop
pop
add
scas
rorl
or
and
fcoms
or
or
stc
jge
add
out
in
ljmp
lock
movzbl
jmp
negl
mov
adcb
xchg
mov
cmp
enter
jb
in
push
sarl
out
sarb
repnz
lea
dec
push
in
pushf
xor
mov
mov
dec
or
mov
ljmp
cmc
push
mov
repz
or
sbb
push
repnz
pop
xor
outsb
in
sbb
adc
cmp
andl
pop
or
in
mov
frstor
mov
in
and
sbb
mov
xchg
ret
ret
dec
sti
rorb
cwtl
repz
inc
xor
out
or
mov
daa
mov
xchg
aaa
sub
stc
xchg
pop
pop
add
scas
rorl
or
adc
mov
dec
or
xchg
cmc
sahf
dec
push
frstor
xchg
das
aam
cmp
leave
add
testb
jl
in
cltd
lahf
mov
xchg
rorl
mov
adc
fidivl
inc
out
movsb
sub
shrl
movsl
test
ret
data16
fs
int
and
inc
push
and
ss
sbb
jnp
adc
mov
js
dec
xchg
fnsave
and
lret
mov
pop
inc
inc
lea
subb
mov
jnp
add
sbb
repz
and
movsl
jg
jp
xchg
idiv
shr
add
push
and
ljmp
fstps
push
mov
mull
movsl
in
call
stos
in
popa
mov
testb
sub
stos
fs
movsl
test
arpl
out
add
ret
fstps
shl
shrb
fcompl
sbb
jo
outsb
sbb
or
mov
pusha
pop
mov
jns
mov
stc
sub
mov
dec
or
xor
push
loop
popf
adc
pop
jb
imul
jl
fildll
push
sbb
inc
call
adcb
testl
insb
push
lock
mov
sub
or
xor
adcb
sub
jle
mov
testb
ja
adc
inc
push
add
aas
jle
cli
xchg
or
pop
inc
add
mov
hlt
popa
push
and
add
xchg
je
adc
dec
mov
outsl
call
dec
push
or
cld
sub
clc
xchg
or
cld
and
das
sbbb
xor
cmpsb
push
je
adc
dec
mov
hlt
xchg
cmc
cwtl
dec
dec
and
data16
jl
mov
mov
loope
in
arpl
jbe
xor
jmp
out
xchg
or
ds
in
out
sbb
out
or
xchg
icebp
dec
js
push
add
scas
loope
or
inc
movsb
push
cmp
mov
pusha
leave
mul
dec
mov
stc
xchg
in
loopne
mov
xor
adcb
sbb
sldt
loop
je
lds
adc
popf
test
add
mov
and
fnstsw
xchg
inc
sub
jb
es
nop
jge
lock
or
dec
xor
sbb
popf
negb
mov
lret
scas
push
push
xor
popa
mov
testb
js
pusha
lods
lcall
add
or
cmp
push
fstps
pop
xchg
orb
cmp
adc
jb
inc
loopne
push
jge
lock
or
dec
orb
jne
pop
loope
lcall
repnz
dec
push
loop
xchg
xchg
dec
lahf
push
push
mov
add
mov
hlt
cli
clc
sub
push
adc
cltd
and
jns
cmp
or
mov
mov
popa
push
inc
lds
xchg
xor
aad
sub
aas
mov
out
push
in
iret
and
mov
mov
stos
xchg
adc
xchg
iret
push
rcll
ja
call
sbb
dec
ljmp
fs
int
adc
inc
push
cmp
or
cmp
arpl
cmp
enter
daa
sub
mov
dec
xor
adc
popf
dec
push
icebp
xchg
or
mov
divl
cmp
outsb
cmpsl
push
je
or
loopne
inc
addr16
into
mov
testb
and
mov
or
or
jl
fisttps
pop
mov
mov
cmpsb
test
pop
popf
mov
pop
ret
add
mov
xchg
cli
rolb
repnz
and
ds
mov
fwait
inc
xchg
pop
daa
popf
popw
fmull
jl
xor
scas
cltd
loopne
and
adc
fiaddl
movsb
ja
push
jg
cmpsl
jbe
in
or
pop
rcr
lahf
insl
sahf
jl
loope
stos
arpl
jp
add
scas
jne
fwait
dec
push
xchg
and
jl
mov
mov
stc
adc
data16
xor
pop
icebp
repz
or
adc
xchg
imul
data16
mov
inc
pop
lret
subb
lret
lahf
cltd
inc
test
mov
scas
sar
cltd
sub
imul
negb
int
jo
push
push
and
enter
or
pop
out
sbb
loope
xchg
mov
sub
and
xor
sti
adc
mov
pushf
enter
xlat
inc
push
mov
aas
mov
sbb
jae
sbb
or
xchg
fnsave
movsb
sub
xchg
xor
xchg
xor
adc
dec
mov
orb
repz
or
pop
sbb
dec
stc
adc
je
or
dec
jl
loop
out
push
sbb
addr16
in
push
fimuls
leave
mov
or
pusha
jmp
stc
xchg
dec
push
fiaddl
xchg
and
add
add
push
andb
xor
aam
jmp
mov
fstpl
dec
jle
or
pop
add
xchg
adc
push
dec
std
data16
jl
mov
shl
add
xchg
or
stc
xchg
fnsave
and
int
xchg
in
enter
frstor
loopne
jp
pop
lods
sbb
hlt
cmp
aad
or
dec
fdivp
xchg
mov
dec
or
and
leave
repz
adc
xchg
arpl
in
cmp
fwait
and
sub
push
je
adc
dec
push
xchg
rorl
dec
stc
jge
icebp
xchg
or
test
sarl
or
inc
pop
int3
sahf
movsl
xor
dec
lock
dec
or
cmp
xchg
or
cmc
repnz
and
adc
xchg
xchg
inc
bts
ja
push
leave
pop
in
testb
push
adc
push
pop
xor
rorl
ss
cltd
or
dec
push
push
fidivl
xor
call
cs
cmp
pushf
enter
push
inc
in
rorl
jmp
or
cmpsl
jl
loop
cltd
das
pop
fwait
jp
sbb
xchg
fnsave
or
cmp
xchg
xchg
mov
jg
or
or
mov
xchg
adcl
push
cmpb
or
mov
movaps
pop
add
test
mov
aaa
lret
add
jg
dec
cmp
jne
push
or
orl
je
adc
and
insl
add
sub
jge
xlat
cltd
sub
push
hlt
jmp
dec
xchg
subb
fsubrs
mov
mov
add
sub
or
cli
mov
add
daa
xorl
pop
pop
shll
jge
cs
cmp
out
aam
lcall
add
mov
cmpsl
adc
cli
test
dec
out
int
dec
dec
out
rcll
adc
sbb
or
int3
enter
xchg
stos
and
cld
inc
mov
leave
pop
test
popf
adc
push
add
fcoms
or
shrl
xchg
or
int3
psadbw
push
pop
jmp
lret
ficoml
movsb
aad
sbb
mov
sub
push
inc
cvtpi2ps
decb
mov
mov
fdivr
daa
div
add
test
stos
sbb
sbb
push
xchg
mov
shufps
mov
inc
out
cli
ja
push
in
push
in
xchg
leave
repnz
xor
or
insb
push
out
adc
jbe
xor
mov
lds
add
adc
ljmp
push
jo
into
mov
push
push
push
in
mov
fmull
out
lea
xchg
adc
nop
lods
xchg
mov
mov
fwait
hlt
imul
subb
cli
mov
test
rorl
ja
leave
jnp
xor
xchg
jnp
jb
mov
rcll
enter
mov
bound
cmp
lock
pop
leave
icebp
clc
and
stc
xchg
out
cmp
mov
dec
xor
adcb
popa
sbb
mov
add
or
push
ljmp
add
loop
xchg
or
cwtl
cmp
idivb
fistpl
jl
dec
xchg
or
mov
xchg
bound
mov
pop
ret
add
ret
xchg
push
rol
cli
test
dec
out
bound
dec
push
xlat
mov
call
mov
xchg
mov
enter
mov
lock
icebp
or
xchg
mov
xchg
ljmp
fs
int
push
jp
ja
or
cmp
das
pop
sahf
insl
pushf
sub
dec
push
in
pushf
cmc
ja
sarb
push
sti
sti
jge
pandn
push
shl
call
fdivl
xchg
sahf
js
in
cmp
xchg
adc
inc
jno
inc
fdiv
push
test
push
sub
in
mov
out
scas
xchg
cltd
or
dec
and
testb
jl
loopne
popf
pop
push
test
and
icebp
cmpsl
jp
icebp
xchg
or
xchg
xchg
xorb
leave
mov
subb
or
imul
jne
xchg
subb
into
bound
iret
add
mov
leave
push
cmc
fs
adcl
adc
leave
adc
ret
xor
dec
sbb
loop
cmp
jb
push
xchg
pop
jge
lock
or
or
stc
fldt
out
and
imul
lcall
shr
hlt
mov
ds
pop
xor
outsb
and
sbb
pop
dec
shrb
aas
leave
mov
test
mov
or
out
xlat
imul
dec
mov
rorl
push
jg
or
ljmp
mov
popa
mov
popa
xchg
in
lock
pop
icebp
pop
fsts
jmp
push
push
in
push
add
leave
shll
insb
push
in
push
fwait
sub
push
ret
nop
leave
bound
in
decl
cld
pop
jge
ret
mov
push
es
push
shlb
mov
jle
push
icebp
fs
mov
jns
xchg
fisttpll
adc
xor
flds
pop
dec
or
in
mov
xchg
hlt
push
psubw
xchg
cmc
inc
push
imul
aam
cmp
mov
test
pop
insl
jnp
jb
xchg
cwtl
popa
cltd
push
not
add
leave
mov
xchg
jle
push
push
or
mov
lret
aaa
jb
pop
aas
add
or
jae
jns
and
ud2
xchg
xor
loop
pop
and
cltd
pop
rorl
enter
sub
ret
shl
mov
pusha
fstpl
jmp
scas
cmovnp
ds
xchg
lahf
xlat
dec
out
leave
and
leave
das
cmpsb
arpl
je,pn
or
out
in
cmc
adc
rep
fisubrl
push
push
mov
xchg
cld
sub
imulb
lock
push
sub
pop
mov
data16
xchg
and
sub
gs
fwait
sub
xor
mov
jnp
or
mov
dec
push
ss
popa
popa
dec
mull
subb
subb
je
cli
push
idiv
push
jb
push
fcomps
cwtl
mov
sahf
cmp
adc
leave
cmp
push
sub
call
addb
inc
imul
ret
mov
je
sarl
xorb
mov
mov
pop
inc
push
loop
sub
ss
or
cmc
test
out
push
mov
stos
sti
sub
jg
mov
out
fs
mov
jmp
pop
mov
or
testl
popa
mov
testb
scas
push
jns
out
movsl
push
out
cmp
push
icebp
or
xchg
push
xor
sbbb
aas
cmp
outsb
gs
push
mov
test
andb
fisttpll
push
addr16
pop
push
out
fs
int
inc
sbb
repz
sbb
lret
dec
stc
jmp
jmp
rcll
lcall
in
cmp
pushf
mov
mov
stos
push
dec
sbb
or
cli
in
hlt
pusha
xchg
xor
in
mov
mov
jno
sbb
cmpsb
and
arpl
stos
mov
mov
and
cs
loope
sbb
or
cltd
push
into
adc
test
aam
hlt
arpl
jl
fisubs
divb
xchg
pop
cs
sarl
shrb
xchg
cmpb
sub
adc
jno
cmp
fildll
inc
test
lret
push
jg
cmpsl
arpl
shrl
and
xadd
aas
and
movsl
dec
jmp
out
pop
hlt
imul
fimuls
cmp
mov
or
jp
in
cmp
call
push
lcall
hlt
fs
addb
jno
xchg
in
ret
jge
lret
xchg
inc
push
add
notb
mov
add
testb
out
push
in
add
xchg
loopne
xchg
out
arpl
ds
push
outsb
in
enter
cmp
sub
pop
sbb
jns
in
call
mov
mov
rorb
mov
cmpsb
in
and
subl
inc
ret
repz
jg
pop
cwtl
adc
mov
xorb
mov
add
out
outsb
andl
mov
push
xchg
jo
rcrb
push
xlat
mov
push
repz
dec
mov
roll
xchg
adc
rcl
bound
sbb
orl
pop
and
fcomps
test
in
mov
or
pop
pop
mov
add
int3
out
ja
arpl
in
sahf
cmp
push
aam
fmull
int
inc
shl
push
int
in
mov
pop
inc
out
fcomps
sub
adcb
or
testb
clc
jl
jl
daa
or
dec
call
aam
cmc
push
sarl
inc
mov
or
fs
push
shl
popa
and
xorb
arpl
rorb
mov
cwtl
aaa
icebp
xchg
sbb
pusha
push
add
rcrl
daa
push
xor
lock
shll
pushf
enter
pop
insl
jl
pushf
adc
mov
cld
es
mov
js
jo
inc
gs
dec
call
hlt
mov
push
out
mov
mov
fimuls
data16
ljmp
insb
xchg
lahf
faddp
mov
mov
pop
ljmp
mov
and
or
mov
enter
xchg
repz
hlt
arpl
pop
cmc
incb
idivl
dec
xchg
push
out
fdivr
cmpsb
push
cmc
fs
sbb
and
sbb
ret
cli
adc
sbb
sbb
xchg
pop
or
lcall
fisttps
fidivl
ss
sub
add
hlt
outsb
mov
dec
stc
xchg
cs
xchg
mov
enter
cmc
mov
mov
jae
adc
dec
push
dec
sub
fldln2
push
sbb
cmpsb
fstps
jp
pop
negl
sbb
push
xor
adc
add
mov
cmp
or
and
pop
notl
push
xchg
fsubrl
arpl
mov
int
xor
jbe
jno
clc
or
push
enter
lds
mov
push
push
in
push
sbb
sarl
scas
push
jecxz
sbb
or
shl
ljmp
xchg
cmp
fcompl
inc
popa
mov
testb
movsl
or
pusha
xchg
out
arpl
mov
gs
push
jle
fcomi
xchg
pop
mov
incb
adc
dec
stc
mov
sub
or
xor
out
enter
lret
lcall
push
mov
sahf
or
dec
lods
push
lcall
jb
xor
mov
mov
notb
lea
xor
sub
into
cs
fldln2
ss
in
lret
lret
in
push
jecxz
leave
enter
aam
inc
insb
pop
hlt
cmp
or
in
dec
fisubl
stos
jnp
or
mov
ret
imul
sbb
cmpsl
idivb
shll
push
push
in
push
in
mov
ret
pop
insb
sbbb
dec
push
or
scas
into
adc
aam
jp
stc
jno
inc
jnp
repz
xor
outsb
test
sbb
ret
into
adc
movb
dec
jae
add
dec
and
or
or
icebp
cmc
in
adc
test
mov
push
test
mov
and
xorl
or
xchg
push
adc
lret
lret
in
push
rcll
enter
testb
andl
dec
subb
aam
int
sub
fnstsw
jae
inc
cld
jl
iret
ret
imul
out
mov
dec
fisttpl
push
cwtl
sbb
ret
jle
cli
arpl
aaa
ficoml
insb
xchg
lahf
rorb
lea
fwait
jns
std
icebp
mov
bnd
dec
dec
push
fidivrl
loope
int
xchg
rolb
jmp
hlt
int
lret
cwtl
enter
lock
mov
xchg
add
cwtl
dec
dec
push
mov
jl
mov
leave
test
stos
xchg
loope
in
arpl
sbb
icebp
xchg
or
sbb
or
add
scas
data16
test
lods
or
repnz
in
imul
test
mov
mov
sbb
jmp
xchg
inc
sahf
dec
dec
cmp
out
push
pushf
dec
push
push
inc
out
jl
mov
cmp
nop
xchg
stc
adc
data16
out
ret
iretw
fs
int
je
pop
jbe
lds
or
lock
or
lea
inc
or
adc
dec
stc
dec
jne
test
hlt
dec
xor
xor
mov
pop
or
push
xchg
push
and
add
cmp
scas
jae
sti
repz
std
mov
add
out
rclb
lret
and
cmp
outsb
cmp
clc
gs
mov
mov
and
test
push
rorb
pop
insl
jg
cmp
mov
ror
shufps
push
and
xchg
bound
in
adc
dec
stc
ljmp
push
and
xchg
mov
jecxz
fwait
mov
mov
jnp
xchg
pushf
xor
mov
xchg
fldl
neg
lret
in
push
out
ror
int3
cs
sub
lock
pop
mov
stc
xchg
or
hlt
outsl
int
mov
sub
push
mov
and
mov
mov
or
jle
cltd
jge
shl
aaa
and
sbb
out
xor
stos
xchg
ljmp
and
iret
dec
in
stos
pop
add
clc
in
adc
push
adc
mov
je
into
test
in
addr16
dec
in
add
lock
pop
mov
push
and
jne
das
or
addr16
icebp
lds
push
cmp
addr16
test
sarb
jne,pn
jnp
or
push
jle
dec
leave
andb
dec
pop
inc
push
inc
mov
or
sbb
loop
fwait
jns
fstl
mov
aas
cs
inc
and
sahf
dec
push
in
data16
imul
xchg
or
sub
xchg
adc
add
push
std
call
orb
jle
frstor
adc
or
fs
xchg
ffreep
inc
cli
cwtl
mov
jo
cmp
xor
push
add
lock
orb
jge
pop
cmp
xchg
push
aad
xor
inc
stc
dec
cmpsl
cli
cmp
xorl
jecxz
or
dec
sahf
fiaddl
xchg
aaa
popa
inc
mull
ss
subb
or
mov
cwtl
ret
sbb
pslld
inc
in
addb
pop
push
in
push
int3
sbb
icebp
arpl
insb
push
in
ss
test
or
sbb
imul
sbb
jl
xor
icebp
mov
enter
imul
aam
jb
into
jecxz
mov
sub
divl
sub
outsb
xchg
push
mov
or
jg
icebp
dec
stc
xchg
fst
xchg
sbb
sbb
or
jmp
cltd
pop
xor
inc
loopne
push
inc
and
inc
push
add
xabort
or
mov
out
les
ds
pop
adc
dec
push
lret
xlat
out
inc
fdiv
bound
stc
xchg
jb,pn
or
dec
stc
or
fadd
cmp
in
mov
xchg
enter
adc
in
movsl
jo
or
mov
sub
out
imul
in
adc
inc
xlat
mov
addr16
shr
sbb
xchg
out
push
mov
fldcw
xchg
and
leave
xor
out
enter
inc
rorb
repz
mov
testb
clc
ja
jp
adc
data16
imull
repnz
pop
addb
adc
in
out
inc
add
fmuls
scas
add
or
orb
sbb
popf
add
push
aam
scas
mov
movsb
xor
in
stos
cmc
dec
fidivrl
insb
xchg
lahf
mov
mov
cmp
movl
out
inc
push
pop
dec
fcmovnb
inc
sti
xchg
or
inc
test
adc
out
enter
outsl
jbe
push
out
lcall
shr
xchg
lret
popf
and
push
inc
xorb
jg
dec
icebp
xchg
out
or
idivb
push
pop
scas
push
xchg
push
mov
shrb
icebp
rclb
shrb
xchg
fcmovnb
loope
adc
inc
fidivrs
jge
repz
call
fdivrl
mov
jnp
push
fisttps
rorw
xor
addb
inc
cli
and
jge
mov
addb
dec
add
scas
jle
test
mov
ss
jb
or
xchg
cwtl
mov
push
lret
mov
mov
inc
enter
mov
jg
or
mov
push
inc
cli
rolb
push
hlt
push
pusha
lret
loopne
push
addl
or
inc
outsb
jge
adc
mov
cmpl
jbe
cmc
arpl
pop
movsb
push
mov
lods
mov
jg
lock
inc
pop
sbb
pop
mov
lods
mov
imul
notb
popf
mov
jne
jp
add
cld
out
cmp
add
repz
inc
clc
xchg
arpl
clc
xchg
xor
loope
sbb
or
mov
in
mov
jle
insl
mov
push
and
in
sbb
jge
mov
jnp
push
mov
cmpsb
shll
int
bound
add
cmp
das
lahf
mov
fstps
sbb
push
or
in
sbb
cmc
xchg
or
popa
pushf
xor
adcb
adc
sbb
or
cld
pop
cmp
shl
call
hlt
outsb
or
dec
or
xor
outsb
aam
or
xchg
dec
pop
andb
lret
or
mov
and
pop
ljmp
sbb
ret
insb
ja
lahf
movsl
cmp
pop
leave
fcoml
jns
daa
imul
int3
or
andl
mov
or
mov
mov
scas
sub
jmp
test
mov
stos
xchg
inc
jecxz
adc
add
jp
mov
stc
ljmp
insb
xchg
lahf
mov
orl
cmpsb
dec
and
std
jmp
mov
stc
xchg
or
hlt
outsl
jne
fstpt
mov
cmp
mov
repnz
mov
pop
scas
mov
mov
dec
nop
movsb
test
xlat
pop
or
adc
or
repz
stos
scas
repz
sbb
xchg
nop
je
push
hlt
dec
dec
xchg
ret
dec
sbb
jmp
ljmp
xchg
das
stos
icebp
cwtl
test
push
mov
shrb
flds
hlt
sbb
loopne
fadd
notl
fsubp
fldt
mov
xor
jle
jl
loop
lcall
aam
bound
inc
lret
repz
dec
stc
xchg
xchg
sti
dec
negl
in
cs
jl
loope
cwtl
stos
insb
clc
js
jp
sti
xchg
in
das
stos
mov
xchg
lahf
lret
in
int3
sub
das
arpl
xlat
push
or
push
in
je
adc
dec
dec
push
fldt
add
xchg
and
enter
movups
cwtl
jp
mov
ljmp
xchg
leave
push
jge
loope
xchg
repz
xchg
xor
arpl
enter
xchg
or
sbb
gs
dec
test
loope
sbb
push
xor
pop
dec
sub
jne
jno
xchg
rorb
sbb
mov
pop
popf
mov
call
or
aas
pop
out
sbb
pop
cli
rolb
bnd
sbb
in
mov
push
out
js
aad
fisttps
data16
add
sub
inc
jmp
lock
or
and
adcb
dec
dec
ja
je
pmuludq
fstl
cmp
iret
or
push
in
jne
or
dec
test
int
push
push
or
xchg
or
add
outsb
xor
lock
clc
inc
jl
out
cwtl
ret
clc
js
jbe
sbb
jnp
sti
xor
dec
ljmp
cmc
push
lret
mov
mov
ficomps
push
pop
ljmp
xchg
popa
hlt
pop
push
and
lcall
div
push
int3
cmp
repz
or
data16
jl
mov
lret
nop
mov
out
gs
stc
xchg
fldl
icebp
or
xchg
push
xchg
cmpb
adc
mov
add
xor
popa
stc
mulb
js
inc
push
movl
sbb
js
push
sbb
cld
or
loopne
rorb
mov
fucomp
pop
cwtl
mov
mov
push
jg
or
cltd
pop
rorl
cwtl
add
hlt
rorl
xchg
xor
pop
lods
adc
or
dec
jp
cmpsl
fsubrl
sbb
dec
inc
outsl
movsb
outsl
mov
and
ljmp
fs
int
cmp
xor
mov
sbb
cmp
mov
enter
ret
out
pop
lret
in
push
in
dec
leave
rol
adc
insb
or
push
jl
bound
lock
mov
push
sub
push
sti
mov
jno
xchg
dec
jge
pushl
or
scas
fiaddl
xorb
repnz
xor
sarb
fildl
mov
movsl
repz
xchg
mov
int
ljmp
or
cmp
aad
notl
jl
lock
popa
pop
push
aam
scas
out
or
push
cs
fsubr
xchg
sub
int3
sbb
add
and
jae
ljmp
loope
xchg
int
mov
lret
sbb
sti
push
and
hlt
dec
sete
dec
and
and
out
jmp
stc
xchg
frstor
divb
cmp
fnstsw
jae
pop
ss
xchg
adc
push
fsubrl
jne
pusha
rcr
stos
pop
imul
stc
int3
in
bound
push
mov
dec
or
out
fs
fldl
jne
shll
cld
xchg
mull
cmpsb
in
shlb
fistpll
fdivrl
fistpl
ret
repnz
out
stos
mov
xchg
lahf
loop
mov
or
and
mov
movsb
bound
or
xor
push
pop
add
gs
ss
push
sti
lahf
and
fnstsw
jae
out
jbe
out
mov
shll
addr16
aas
mov
sub
fnstenv
das
sbb
dec
push
pop
or
mov
mov
xchg
cmp
add
rcl
mov
cmp
test
or
push
or
mov
add
mov
xchg
imul
jle
addb
or
sbb
xor
jnp
xchg
sbb
sbb
push
lock
sbb
mov
ljmp
int
and
xor
fs
roll
shrb
jg
jns
in
ja
xor
rcr
divl
jb
push
mov
hlt
movsb
xchg
sub
dec
insb
lretw
icebp
xchg
in
jne
or
dec
dec
ljmp
cmc
push
lret
loop
add
inc
mov
push
jge
or
into
mov
or
cltd
dec
dec
out
sti
in
inc
mov
and
pop
jmp
jmp
xchg
jmp
or
dec
outsb
pop
leave
sbb
popf
data16
xchg
into
jecxz
xor
and
adc
mov
sbb
xchg
dec
fbld
aaa
push
push
jge
inc
pop
cmp
pop
jno
push
lret
imul
xor
sub
and
and
popw
jge
mov
cli
test
out
stc
adc
xchg
pop
dec
push
xlat
ds
in
test
std
xchg
hlt
pop
push
and
mov
cltd
scas
ffreep
pusha
mov
testb
les
push
xchg
out
arpl
test
je
or
call
or
jns
or
mov
inc
add
lock
jno
mov
idivl
mov
push
popa
mov
mov
push
add
cmc
mov
test
aad
xor
data16
xchg
pop
cwtl
dec
dec
enter
jl
mov
cmpsb
cmpb
push
push
jle
fdiv
xchg
cmc
inc
dec
stc
xchg
pusha
fstps
push
scas
ret
lret
cmp
mov
dec
add
test
dec
stc
in
stos
push
loop
cmp
ret
ljmp
das
bound
xchg
cmpb
fstpt
mov
mov
in
dec
test
cmp
push
repz
jae
push
ret
lds
jge
mov
and
subl
sub
fstps
repz
cmp
adcb
out
scas
leave
in
xchg
movsl
fwait
or
insb
push
lock
push
dec
push
icebp
xchg
or
mov
insl
jae
jns
or
push
out
test
andb
jecxz
pop
test
mov
repnz
outsl
cmp
add
ret
loope
adc
inc
mov
cmpsl
mov
or
dec
in
testb
mov
push
add
scas
test
fcomip
mov
subl
clc
in
adc
or
ja
fwait
in
push
fs
aaa
aad
or
test
inc
scas
es
jns
in
adc
mov
pop
lret
push
sbb
lret
or
mov
jecxz
inc
lods
in
mov
mov
out
lea
cmp
pop
dec
jbe
pop
jnp
dec
stc
jmp
hlt
jne
xor
xchg
sub
and
push
fisttps
sub
or
push
jge
shl
mov
pop
sbb
cli
out
push
jg
xor
repz
mov
int
repnz
pop
leave
repz
adc
xchg
test
xor
ds
pop
in
popf
in
les
stos
cmp
rorl
in
mov
xchg
or
lret
aad
mov
inc
and
jge
or
stc
enter
or
in
mov
inc
fucomi
pop
out
adc
sbb
icebp
xchg
or
jp
rclb
lret
stc
xchg
fisttpll
xchg
jbe
sbb
or
std
mov
jmp
cmp
sahf
add
cli
or
out
int3
or
or
jo
push
ret
stos
outsl
mov
out
pusha
fwait
imulb
mov
test
jmp
lret
pop
fisubrs
and
xor
dec
fs
movb
sbb
lret
imul
sti
hlt
mov
pop
cwtl
mov
pop
ret
add
mov
cli
cwtl
add
xlat
shll
push
mov
dec
test
hlt
cwtl
ret
lret
jle
jae
jecxz
aam
aaa
cld
and
xchg
iret
hlt
arpl
data16
jb
out
xor
sub
jb
push
flds
adc
dec
xchg
jns
xchg
mov
mov
pushw
fdivl
test
pop
dec
push
fimull
xor
lock
mov
stos
fildl
jl
dec
sbb
adc
std
cmp
pminsw
jmp
inc
movsb
bound
or
shrb
cs
dec
jg
sbb
or
mov
testb
xchg
pop
sub
aaa
call
shlw
jecxz
pop
jne
mov
or
cmp
jns
or
push
flds
sarl
lock
mov
or
notb
mov
sahf
shll
mov
lock
xchg
in
pop
out
ret
je
mov
lahf
xchg
jns
inc
jne
cmp
mov
adc
sub
jne
xchg
xchg
jmp
sti
pop
jns
or
sub
push
das
scas
mov
outsl
andb
orb
xorb
push
mov
xchg
into
push
sbb
xor
imul
loope
in
insb
clc
inc
andl
ficoml
out
addr16
out
fs
or
mov
sbbb
jl
xor
mov
jge
mov
lods
xchg
dec
and
test
pop
and
xorl
push
dec
dec
sbb
fsub
xchg
or
hlt
cmp
push
dec
stc
xchg
fimull
add
sbb
insb
push
mov
cld
jg
dec
cmp
test
leave
repz
enterw
dec
stc
xchg
add
sbb
enter
or
out
xchg
cmp
inc
fdivp
cmp
stc
rclb
notl
xchg
mov
or
and
lret
ficoml
lds
imul
cli
iret
into
inc
jns
in
shlb
movsl
nop
aam
mov
icebp
pop
rorl
rorl
lret
and
imul
inc
push
lock
mov
or
mov
fs
outsb
std
adc
sahf
xor
xor
and
push
clc
lock
or
adc
outsl
cltd
adc
dec
cmpsb
icebp
fstpl
lret
imul
fidivrs
sub
dec
data16
and
dec
push
push
mov
jge
mov
pop
mov
movsl
xchg
adc
cmp
xchg
add
or
sti
xchg
or
xchg
jl
sahf
adc
xor
repnz
into
push
in
and
mov
jp
jl
sub
mov
jb
cltd
enter
outsb
test
inc
in
outsb
leave
jb
xchg
aas
push
pop
or
sbb
xor
or
push
aad
les
pslld
roll
dec
and
sub
push
je
lds
sbb
aaa
adc
enter
jmp
mov
icebp
scas
pushw
nop
stos
push
adc
popa
jb
push
aad
mov
jne
and
test
push
and
dec
and
dec
or
inc
mov
fstps
xchg
jmp
shl
ljmp
loope
xchg
push
xchg
ljmp
or
pop
add
or
lock
mov
fisubrl
insb
xchg
lahf
mov
mov
dec
sarl
cmpsb
dec
in
pop
lock
lcall
in
cmp
pushf
shrb
or
rorl
add
ds
xor
pusha
cmp
stos
xchg
and
dec
test
andl
mov
mov
and
lods
mov
scas
jge
rcr
jge
je
sbb
xchg
push
cmc
test
sbb
push
jmp
sbb
ljmp
outsb
xor
add
xchg
ret
pop
and
mull
bnd
test
repnz
ljmp
push
sbb
sub
xor
ret
cwtl
xchg
add
lahf
test
in
pusha
pop
pop
add
js
ret
or
lret
or
inc
xor
or
inc
cwtl
dec
dec
cld
push
data16
lea
pop
mov
arpl
mov
cwtl
in
jno
or
fdivrl
addr16
mov
daa
les
add
shrd
jo
pop
add
cmc
dec
orb
mov
sub
out
fs
and
stos
add
xchg
enter
dec
xchg
daa
sub
gs
divl
stos
nop
jmp
push
arpl
outsb
lret
push
or
mov
add
adc
pusha
add
mov
jg
scas
clc
adc
shrl
sbb
jb
push
xlat
lds
ja
ljmp
xchg
ret
sbb
pop
fcoms
jg
sbb
mov
mov
sub
cmc
ds
mov
stos
lcall
pop
mov
addl
push
pop
jge
dec
push
xor
loopne
xchg
xor
shl
pop
mov
add
int3
or
hlt
outsl
inc
ds
and
addl
sub
pop
fwait
popa
push
mull
jmp
arpl
rcr
loope
push
test
mov
mov
into
mov
dec
inc
and
lock
dec
loopne
ret
cmpsl
loopne
in
jmp
gs
cs
push
andl
popa
scas
and
pop
lods
xorb
pop
cmp
mov
sbb
or
mov
imul
filds
sub
rorl
adc
jle
scas
fstps
inc
cmp
and
and
pusha
mov
notb
aad
fistpll
daa
call
in
sahf
mov
cmp
fwait
jge
mov
push
or
nop
xor
imul
outsl
or
dec
dec
sbb
icebp
or
rcll
add
pop
xchg
add
xor
or
sub
pop
test
sub
loopne
push
jg
add
cli
je
in
mov
dec
push
or
push
xchg
or
insb
lods
in
jb
or
dec
dec
jmp
jo
fst
mov
push
rolb
fnstenv
adc
and
imul
movsb
ret
dec
push
shl
or
mov
std
adc
or
jo
or
adc
testl
push
fwait
xor
add
arpl
test
push
aam
inc
xor
add
int
ret
lods
xchg
push
addr16
psllw
fsubs
pop
leave
cmc
stos
lods
sbb
adc
xchg
xor
flds
mov
outsl
sbb
adc
add
out
fmull
add
clc
js
hlt
push
xchg
or
cli
cmp
cltd
xor
xchg
pop
aas
incl
movsb
push
mov
xor
repnz
lret
call
int3
mov
push
iret
subb
fimuls
cmpw
cltd
dec
dec
clc
and
in
jl
mov
lea
cmp
inc
or
sbb
repnz
or
ficoms
and
fimuls
pop
andl
mov
jmp
dec
das
andb
int3
cmp
dec
call
mov
and
xchg
adc
push
add
lea
cmp
or
pop
leave
mul
pushf
push
and
adc
xchg
push
fcomps
sub
orb
cmc
xchg
pop
or
clc
jne
lock
jae
or
rcrb
pop
mov
addl
push
mov
add
sub
xchg
jge
rcr
test
stos
sbbb
pop
repnz
nop
iret
shl
bswap
into
dec
mov
in
push
gs
jp
add
std
mov
pusha
leave
cmc
pop
inc
inc
insl
hlt
push
dec
stc
xchg
std
aad
mull
cmpsl
in
mov
test
fistpl
in
pushf
fxam
or
cmpsl
clc
or
fadds
or
xor
ficompl
lock
or
or
jecxz
ret
andb
pushl
in
lret
mov
loope
and
out
cmpsl
dec
out
int
fsub
mov
push
into
pop
inc
dec
xchg
fiadds
arpl
dec
fisubs
mov
pop
mov
add
sub
jb
xor
call
or
jbe
mov
cli
jg
sub
mov
clc
jne
mov
or
dec
stc
xchg
