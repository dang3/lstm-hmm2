push
jmp
pop
not
notl
and
pushf
jmp
pop
pop
pop
shrd
push
pushf
jmp
push
mov
pop
adc
push
cmp
cmpsl
mov
jmp
dec
sub
int
stc
mov
jmp
mov
sub
nop
repz
lea
cmp
sub
dec
daa
fmull
jnp
lds
test
in
jp
pop
mov
mov
lahf
dec
cmpsl
shrl
sbb
out
mov
test
sbb
lcall
cmp
pop
xchg
bound
inc
jo
cmp
mov
out
stos
ret
dec
cmpsl
adc
dec
fs
hlt
jp
sahf
int3
lahf
sub
lock
cmp
in
jne
cmp
loope
jp
jbe
pop
sub
ja
cmp
dec
fs
pop
hlt
jp
sahf
push
sarb
sub
lock
mov
icebp
negb
mov
adc
mov
ljmp
loope
mov
pop
sahf
cmp
lods
clc
push
cmp
je
lret
fwait
adc
jbe
pop
loopne
mov
push
movsb
adc
ljmp
ss
lret
les
sub
rcr
bound
loope
insb
xor
mov
ljmp
mov
push
test
cmpsl
fsubrs
or
ret
mov
xchg
stc
sbb
ret
pop
add
xchg
icebp
push
sub
movsb
adc
mov
mov
fld
ljmp
fsubrl
jp
sahf
mov
cli
dec
lcall
fisubs
pop
lods
mov
mov
cvtps2pi
pop
sub
or
mov
aaa
jp
sahf
iret
rol
sub
rol
add
test
popa
and
cltd
ret
fcomps
sarb
sahf
jbe
das
pushf
ljmp
jmp
daa
rcll
add
ret
pop
in
out
jns
bound
dec
ret
push
lods
or
test
popa
and
jge
test
pop
dec
cs
in
cmp
sbb
clc
xchg
ret
pusha
mov
mov
dec
hlt
test
dec
sub
in
add
leave
loopne
bound
bound
xorb
imul
pop
les
fadd
adc
mov
fiadds
push
or
insl
into
les
cmp
lds
adc
hlt
jp
lods
mov
pop
in
shrb
push
fidivs
jbe
mov
iret
mov
addr16
sub
or
push
sub
stc
ret
jo
xor
pop
movsb
sub
push
pop
out
fpatan
stos
cmc
flds
shrb
mov
sub
mov
popa
daa
cmpsl
inc
out
hlt
and
rol
lock
jb,pn
aam
cmp
je
mov
adc
jnp
aad
push
jecxz
hlt
jp
fiadds
stos
in
inc
push
xchg
mov
sub
inc
cmpsl
rol
shl
jp
shl
add
icebp
add
jg
lds
nop
fstp
mov
shll
inc
iret
sarl
push
mov
mov
add
jp
jle
push
leave
lods
imul
cmp
mov
mov
jp
adcl
mov
inc
mov
popa
cli
loopne
dec
imul
push
mov
shll
push
xor
ror
not
ror
add
xor
lea
sub
not
xor
push
jmp
mov
add
lea
neg
rol
sub
not
add
push
jmp
mov
add
add
neg
ror
inc
rol
add
pop
mov
jmp
push
jmp
mov
push
jmp
pop
pop
mov
jmp
pop
pop
pop
shld
push
pushf
jmp
movzbl
add
add
rol
xor
rol
not
add
xchg
cbtw
cwtl
push
lea
jmp
pop
pop
shr
push
pushf
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
popf
ret
and
pushl
jmp
movzbl
sub
sub
neg
not
rol
sub
add
popw
jmp
movzbl
add
add
rol
xor
inc
rol
not
add
push
jmp
pop
add
pushf
jmp
pop
pop
shl
push
pushf
jmp
pop
add
pushf
jmp
pop
popl
jmp
pop
mov
jmp
aad
or
sahf
out
adc
out
adc
in
adc
out
adc
loopne
adc
in
adc
or
lock
adc
or
aad
or
push
out
adc
out
adc
out
adc
in
adc
out
adc
loopne
adc
loopne
adc
in
adc
or
inc
out
adc
or
aad
or
cltd
in
adc
adc
loopne
adc
in
adc
out
adc
out
adc
in
adc
or
sti
out
adc
in
adc
loope
adc
loopne
adc
in
adc
or
inc
out
adc
or
aad
or
sbb
add
sbb
or
jg
or
aad
or
cld
in
adc
loope
adc
in
adc
adc
adc
loopne
adc
in
adc
or
mov
or
push
out
adc
in
adc
or
sbb
add
sti
out
adc
out
adc
loopne
adc
out
adc
or
ss
adc
loope
adc
out
adc
or
int3
in
adc
or
insb
loopne
adc
in
adc
in
adc
loopne
adc
or
ret
adc
or
dec
loope
adc
adc
out
adc
or
jg
or
push
out
adc
loopne
adc
loopne
adc
or
sahf
out
adc
loope
adc
loopne
adc
out
adc
out
adc
or
sbb
add
or
add
inc
loopne
adc
loopne
adc
adc
adc
adc
out
adc
adc
adc
out
adc
or
sti
out
adc
loopne
adc
or
shl
adc
or
adc
in
adc
adc
adc
or
inc
out
adc
loope
adc
or
mov
or
sub
or
or
or
into
loopne
adc
out
adc
loope
adc
loope
adc
adc
loope
adc
or
push
out
adc
or
or
or
repnz
adc
in
adc
loope
adc
in
adc
loope
adc
or
adc
loope
adc
loope
adc
out
adc
in
adc
loopne
adc
loope
adc
out
adc
loopne
adc
loope
adc
loope
adc
loope
adc
loopne
adc
or
inc
out
adc
loope
adc
out
adc
out
adc
out
adc
loope
adc
in
adc
adc
in
adc
loope
adc
out
adc
or
lods
loopne
adc
adc
adc
adc
loope
adc
adc
or
ss
adc
in
adc
in
adc
or
or
add
mov
or
movsl
loopne
adc
adc
adc
or
dec
loope
adc
or
sbb
add
fs
adc
in
adc
or
ss
adc
adc
loopne
adc
out
adc
or
outsl
loope
adc
or
movsl
loopne
adc
out
adc
adc
adc
out
adc
out
adc
or
scas
in
adc
adc
out
adc
or
insb
loopne
adc
in
adc
in
adc
loopne
adc
adc
adc
out
adc
or
outsl
loope
adc
adc
or
mov
or
mov
or
mov
or
and
or
mov
or
inc
out
adc
adc
adc
adc
out
adc
out
adc
or
notl
pop
and
pushf
jmp
pop
pop
mov
jmp
pop
movzbw
push
jmp
pop
popw
jmp
pop
pushl
jmp
pop
add
pushf
jmp
pop
popw
jmp
pop
pushl
jmp
and
popl
jmp
movzbl
sub
sub
neg
not
rol
lea
sub
pushw
jmp
pop
pop
not
not
and
push
pushf
jmp
pop
pop
shl
push
pushf
jmp
mov
push
jmp
pop
jmp
pop
pop
shr
push
pushf
jmp
pop
pushw
jmp
movzbl
add
inc
neg
ror
inc
rol
add
mov
push
jmp
pop
jmp
pushf
push
push
push
push
push
push
push
push
push
mov
mov
mov
add
mov
xor
not
rol
not
rol
add
xor
movzbl
inc
pushl
ret
pop
popl
jmp
pop
movzbw
push
jmp
pop
pop
shr
push
pushf
jmp
movzwl
xor
ror
not
ror
add
xor
sub
not
xor
xchg
cwtl
push
lea
jmp
pop
pushw
jmp
pop
pushl
jmp
pop
pop
shl
push
pushf
jmp
loope
add
fs
and
lds
aad
inc
jo
xchg
mov
sbb
movsl
dec
push
add
jp
jmp
lahf
lret
leave
stc
add
icebp
int
insb
stc
sbb
mov
shl
into
hlt
mov
in
lods
movsb
mov
std
cmp
icebp
mov
arpl
nop
sub
loope
daa
jg
shl
or
push
xor
add
cmp
sub
sbb
ja
dec
xlat
mov
fildll
test
cmpsl
pop
call
add
and
movsl
lock
popa
adcl
xchg
mov
dec
xchg
mov
and
fbld
int3
add
mov
jno
jnp
arpl
mov
pop
je
jge
sub
jne
out
out
pop
xchg
enter
shlb
add
jmp
xlat
jb
iret
jno
push
xchg
lods
ret
sub
loope
je
inc
sub
dec
out
not
outsl
popf
xchg
iret
inc
popf
jp
lret
mov
ja
pop
dec
imul
push
add
sbb
pop
cmc
out
and
shll
and
or
inc
xor
fiaddl
popf
lods
enter
sub
pushf
lahf
adc
or
xchg
pop
imul
ficompl
add
add
lcall
jecxz
iret
jbe
jle
data16
bound
shrl
add
fimuls
fdivrs
xor
rcrl
lcall
mov
push
add
lock
push
mov
outsb
mov
jle,pn
xchg
in
push
bound
fsubrp
adc
jle
cmp
test
mov
ror
xchg
out
or
addr16
clc
fs
xor
and
mov
loope
or
fbstp
nop
mov
stos
adc
sub
jnp
and
sti
dec
mov
ss
std
les
pop
sub
pop
fstpl
enter
pop
add
inc
xchg
mov
fldl
mov
jo
push
push
or
jne
and
pop
mov
mov
xchg
ss
cmpsl
mov
xor
add
push
mov
enter
cmp
dec
test
cmp
push
jae
or
bnd
cwtl
and
enter
shrb
outsb
push
add
out
push
fsubs
sbb
or
fistpll
sti
pop
xor
fdivl
pop
mov
xchg
movsb
xchg
stos
sbb
fcomps
jle
mov
cwtl
rcrl
outsl
mov
dec
jne
adc
sbb
bound
xchg
mov
cld
mov
mov
or
push
aas
addr16
out
xorl
jbe
cmp
xor
std
push
pop
lcall
add
adc
stos
stos
jno
in
pop
inc
adc
test
sbb
jmp
add
fldcw
into
out
jge
push
addr16
movsb
imul
pop
insl
pop
mov
mov
push
mov
push
popf
test
or
and
pop
add
xlat
daa
push
stos
push
mov
test
cltd
add
vrsqrtps
add
mov
dec
daa
lods
inc
pop
mov
imul
into
sbb
cmp
ds
int
loopne
insl
lods
pop
nop
mov
lahf
into
mov
jecxz
dec
les
fcompl
adcb
stos
and
std
scas
fildll
pop
imulb
inc
mov
mov
fcoms
xor
call
inc
nop
mov
scas
fcmovnbe
mov
add
ret
call
push
enter
xchg
push
dec
jp
mov
sti
mov
dec
cmpsl
fwait
mov
rcll
loopne
shrl
int3
jnp
setbe
pop
je
pop
mov
sbb
iret
inc
ret
mov
lock
adc
out
pop
aam
scas
pop
cmpxchg
adc
sub
jnp
adc
or
adc
pop
adc
pop
inc
and
add
add
inc
nop
cmpsl
xchg
jmp
pop
sub
mov
jns
xchg
adc
inc
dec
mov
or
int3
jl
and
dec
inc
jle
mov
inc
add
js
mov
mov
mov
lock
repz
nop
inc
inc
repz
dec
mov
frstor
pop
cltd
jae
cmc
in
sub
idivb
inc
cmp
mov
adcb
insl
popa
push
adc
pop
sahf
xchg
mov
lods
lret
movsl
mov
loopne
scas
cmp
xchg
ljmp
inc
outsl
dec
push
jmp
in
inc
rolb
push
jmp
popf
adc
adc
sub
jmp
leave
jle,pt
int
inc
.byte
