add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
fcmovu
divb
scas
pop
pop
cltd
push
add
sti
push
cli
add
add
add
or
add
add
pop
cmp
xchg
add
add
test
imul
push
add
push
add
add
add
add
lret
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
mov
fadds
test
rolb
push
add
add
add
add
fiaddl
push
add
add
add
pop
add
add
add
test
cmpsb
add
mov
pop
add
add
add
add
add
add
adc
test
inc
add
add
add
dec
add
add
add
xchg
add
add
test
push
add
jbe
test
cmpsb
add
imul
test
sub
push
add
add
add
add
and
test
lea
out
clc
add
add
add
push
add
add
add
add
add
add
add
addl
test
in
add
add
add
cmp
mov
lods
add
add
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
xchg
add
add
add
addl
adc
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
flds
mov
sbb
test
pop
add
add
test
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
test
rolb
lret
add
add
data16
add
add
add
add
mov
rolb
test
lcall
add
add
add
add
add
inc
add
test
adc
sbb
aam
or
add
add
add
add
add
add
add
add
fadds
mov
add
add
add
push
add
add
add
test
mov
cmp
add
push
add
add
xchg
flds
imul
lods
add
lret
add
add
add
add
add
test
lods
add
inc
add
add
add
add
add
lods
add
lret
add
lea
push
add
add
lods
add
add
inc
add
add
add
add
add
add
add
add
fadds
pop
add
dec
add
test
lea
push
add
add
add
add
add
add
insb
add
add
add
add
add
xor
test
mov
fldl
push
add
mov
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
test
xchg
add
pop
add
add
test
push
add
xor
push
cmp
pop
add
add
add
imul
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
pop
add
adc
addb
add
sbb
ja
sbb
mov
add
iret
xchg
sbb
testb
sahf
pop
push
sbb
dec
cmc
add
mov
sub
cmp
mov
ljmp
mov
sbb
bound
stc
pop
jbe
pusha
sub
mov
pop
adcb
jecxz
mov
aaa
cmp
inc
iret
cwtl
adc
insl
loop
mov
lods
in
add
mov
add
js
xchg
push
and
add
aaa
mov
enter
fbstp
mov
sbb
outsb
repnz
push
mov
fists
fucomi
fcom
jecxz
add
xchg
adc
inc
mov
sub
xchg
push
add
add
mov
ja
repz
orl
mov
sub
testb
xchg
pop
add
aas
mov
sahf
call
or
xchg
enter
sbb
int3
movsl
or
fisubrs
addr16
and
ljmp
out
insl
or
cltd
mov
aad
sbb
sbb
loopne
rolb
cltd
cmp
lcall
inc
test
add
decl
push
movsl
imul
pop
popf
lret
jns
cmpsb
cmp
inc
scas
xchg
mov
mov
lcall
rcr
mov
pop
jb
cmp
popf
pop
cmc
je
mov
int
cmp
or
in
cmp
mov
sub
adc
sub
add
lcall
outsl
adc
mov
add
into
dec
dec
jne
in
push
adc
mov
push
inc
dec
or
push
ljmp
fisubrl
ss
pop
push
lret
je
mov
call
push
xchg
mov
sarb
mov
xchg
stos
cltd
pop
xchg
aaa
or
lds
arpl
add
mov
xchg
outsl
ljmp
bound
cmp
jle
fbld
xchg
aam
mov
call
repz
gs
push
mov
push
fnstsw
aas
icebp
icebp
push
mov
add
xor
test
shrb
sub
mov
mov
movsl
xchg
pusha
jle
and
icebp
fstl
hlt
mov
add
cmpl
adc
clc
cmp
mov
sub
fucomi
pop
adc
aas
jne
nop
push
hlt
imul
test
outsb
enter
aam
out
and
inc
rorl
fidivrs
pusha
test
leave
push
lods
ljmp
mov
in
pop
dec
mov
repz
dec
ja
or
xchg
adc
arpl
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jne
gs
push
pop
inc
dec
cmp
dec
jo
pusha
or
mov
in
aad
mov
test
pop
inc
dec
xor
sbb
je
cld
in
mov
shlb
mov
gs
push
pop
inc
dec
xor
sbb
or
cld
in
cmpsb
scas
jmp
fucomp
sti
fcomi
jmp
cmp
gs
jne
and
xchg
pop
aas
cltd
sbb
stc
mov
sbb
das
ftst
mov
cmp
test
add
inc
test
mov
jnp
lea
popf
ss
imul
push
stos
popa
sub
sub
lock
xor
fs
and
xor
jbe
repnz
add
adc
jecxz
dec
mov
xchg
aas
or
rorl
add
in
sbb
cmp
cmpsl
lods
jne
nop
jb
stc
pop
loope
dec
movsl
or
cmp
mov
in
mov
mov
cltd
sub
push
pop
inc
dec
xor
sbb
or
cld
in
aad
mov
test
xor
sub
pop
pop
insb
inc
jo
inc
pop
mov
loope
mov
test
leave
shl
rol
jbe
pop
or
push
dec
pusha
adc
mov
xchg
xchg
popl
lods
out
test
sbb
add
cs
sub
sbb
or
cld
in
aad
mov
test
pop
inc
dec
xor
sbb
or
cld
in
aad
mov
test
mov
mov
dec
mov
popa
js
add
sbb
das
sar
insl
add
lods
cltd
in
repz
repnz
lds
loop
jae
andb
push
sub
xor
cmp
xchg
and
lds
push
and
fwait
mov
out
lods
jae
pop
lock
mov
popa
mov
sub
int3
daa
adc
bnd
sbb
fbld
filds
das
mov
pusha
jno
mov
addr16
jns
stc
pusha
fisubrs
cmp
and
repnz
dec
push
adc
int
jge
das
js
loopne
push
fsubrs
or
sbb
mov
mov
dec
les
adcl
sub
aam
test
cltd
mov
adc
adc
int
or
movsl
push
loop
pop
lahf
mov
jg
lds
cmp
bound
mov
xchg
push
std
adc
mov
xchg
stos
or
inc
cmp
leave
cmp
and
adc
shr
in
or
dec
fisubl
mov
adc
mov
sbb
fs
lret
movsl
add
xchg
jo
and
sbb
jns
addr16
popf
inc
lcall
lds
adc
mov
push
aam
pusha
pusha
cltd
push
lods
outsb
jp
fcoms
andb
ljmp
lret
or
cmp
push
cmp
repz
add
int3
ret
std
and
enter
lahf
push
mov
outsl
cmp
paddd
and
fstps
pop
movl
cld
cs
mov
adc
fmuls
jp
mov
adc
ss
outsb
jecxz
jae
lds
ljmp
xchg
fsubp
fsubs
mov
push
jbe
stc
mov
cmpsl
mov
scas
in
fsubs
pushf
addr16
in
sti
or
pushf
sti
push
ret
mov
ret
mov
sub
rcrl
jp
fcmovne
and
imul
popa
sub
test
in
shl
push
daa
enter
inc
out
sarl
cmp
push
ds
out
sbb
and
test
dec
mov
bsr
xchg
mov
in
sbb
ss
jge
cmp
stos
lods
repz
sbb
lods
push
mov
fistpl
push
jno
or
xchg
sbb
jae
jecxz
shlb
pop
ja
pusha
int
clc
cli
cwtl
enter
in
lods
ss
dec
movsl
popf
add
and
pop
mov
xchg
popf
push
lea
in
cmp
adc
into
movsb
sub
addr16
xlat
mov
pop
addl
test
arpl
sbb
push
pop
popf
jne
das
add
lods
lret
sti
dec
mov
ja
movsl
stos
clc
fimull
mov
jl
lock
cmpsb
shl
ljmp
jbe
sbbb
xor
mov
test
and
repz
add
inc
pop
push
pop
mov
les
pop
into
cli
call
shll
jae
lea
pop
dec
sbbl
nop
out
call
fwait
cmpsl
in
jl
loop
imul
sub
pop
sub
jae
inc
xchg
xor
push
out
or
mov
dec
in
xchg
mov
addr16
pushf
mov
dec
cmp
dec
sbb
or
movsb
aas
shrl
pop
outsl
mov
ret
scas
xchg
pushl
jmp
adc
mov
push
pop
push
push
jp
and
adc
mov
jb
fldcw
sbb
addr16
add
mov
iret
fcoml
lret
outsb
decl
loopne
jge
xchg
or
add
sub
sti
mov
mov
adc
xchg
divl
inc
pop
mov
sbb
push
and
cmc
xor
pusha
loop
and
or
dec
add
cmpsb
int3
sub
loopne
or
movsl
pop
adc
popf
not
mov
inc
iret
xlat
js
ss
add
push
std
xchg
push
sbb
pop
xchg
xchg
jl
dec
mov
inc
dec
shl
xchg
cs
loop
jp
sbb
sbb
jae
pop
sbb
jb
in
incl
lahf
mov
std
cmp
shll
cmc
xor
dec
shrl
popf
mov
mov
out
fsubs
xor
jno
loope
push
add
shr
stc
mov
psubd
ret
mov
popf
in
jmp
cmp
jmp
ljmp
ljmp
or
pop
push
inc
ljmp
mov
scas
in
loop
in
xor
fsubs
xchg
stos
adc
mov
push
xchg
arpl
adc
jge
and
lret
inc
mov
ret
cwtl
xor
fdivl
xchg
jmp
ret
mov
sbb
jle
lods
cmp
ja
movb
fcomps
nop
stos
jg
pop
adc
jmp
sti
cmp
adc
pop
dec
and
inc
xchg
xchg
inc
pop
xchg
loope
xchg
sahf
bound
push
add
mov
pop
inc
movsl
mov
cmpsb
test
call
push
into
enter
xchg
inc
sarl
xor
aad
into
fnstsw
dec
fcoms
iret
stos
cmc
sub
mov
adc
out
jb
dec
sbb
in
pop
lahf
lcall
xchg
insl
stc
mov
ja
lret
and
cli
adc
inc
jge
jmp
ficoml
lret
mov
mov
ja
sbb
in
inc
leave
adc
mul
outsl
or
sbb
sub
imul
shrb
andb
adcb
inc
sahf
nop
insl
adcb
ret
loop
pusha
icebp
imul
sahf
sbb
sarl
inc
aaa
jg
add
or
mov
rcll
out
idivl
cli
jne
cltd
add
inc
pop
xor
in
daa
sub
push
adc
mov
push
adc
pusha
jmp
add
cmpsl
sub
fs
dec
adc
ret
into
in
negl
sub
and
cmpl
mov
jmp
and
aaa
inc
pop
test
or
adc
jbe
dec
lock
cmpsb
mov
or
or
push
push
loope
repnz
test
andl
push
adc
mov
inc
je
cmp
jnp
jmp
mov
aad
gs
jne
xor
arpl
ss
in
orl
adc
test
in
push
nop
enter
out
or
cwtl
cmovo
gs
push
outsl
xor
dec
sahf
jno
or
add
and
dec
and
push
sbb
pop
out
mov
int3
cwtl
dec
push
sti
les
mov
inc
repnz
inc
mov
inc
fisubs
mov
aas
clc
mov
test
cmp
popf
in
xor
testb
out
add
adcb
dec
sti
call
or
mov
or
xor
inc
jno
dec
outsb
mov
pop
cmp
pop
xorl
scas
sti
dec
inc
jns
push
push
dec
mov
movsb
cmovp
jnp
dec
movb
add
subb
movsb
mov
data16
dec
rolb
and
lock
mov
cmpsb
aad
not
cmpsb
adc
inc
cmp
aaa
mov
jmp
xlat
and
mov
outsl
int
test
hlt
xor
mov
outsl
daa
mov
xor
dec
test
jg
jmp
adcb
pop
and
ficompl
sbb
gs
cmp
out
mov
xor
sub
push
xchg
int3
pusha
outsl
sbb
xchg
mov
rcrb
adc
add
pop
les
repnz
mov
inc
dec
pop
mov
in
aad
cmp
xchg
leave
mov
lea
jecxz
push
cld
add
pop
movsb
mov
mov
cld
dec
xchg
fidivs
clc
dec
sbb
ljmp
pop
rcrl
inc
jae
out
stos
shl
inc
sbb
mov
xchg
push
scas
rcl
dec
test
mov
testb
pop
mov
and
mov
imull
push
xchg
jo
jge
mov
xor
jae
int
xor
adc
inc
dec
and
shll
les
out
inc
adc
push
add
and
insl
lret
popa
imul
je
jmp
sahf
stos
sub
cli
lods
shrl
lcall
xchg
ret
inc
cld
je
stos
stc
pop
inc
out
and
cmp
cmp
inc
sub
lcall
aam
jle
into
lods
or
and
in
lods
add
in
ljmp
pop
pop
loopne
int3
mov
repz
adc
and
jp
lods
xor
inc
mov
jae
insb
rol
scas
inc
and
mov
pusha
add
jne
pop
add
add
push
inc
outsb
sbb
mov
push
cmpsl
push
aad
or
adc
xchg
jge
pop
sub
bound
sub
mov
arpl
add
andb
adc
jb
cmp
lret
pop
xor
jg
ret
jmp
fmuls
push
mov
jb
fcomps
cwtl
dec
jecxz
mov
mov
ja
jbe
mov
je
adc
cmpsb
movsb
xchg
loop
pop
repz
jl
adc
in
mov
out
cmp
push
xor
lock
jns
inc
sbb
xchg
jge
jno
dec
fcmovu
xchg
and
dec
int3
push
outsb
loopne
sbb
adc
subl
iret
int
mov
xor
jbe
xchg
imul
cmp
icebp
and
inc
stc
dec
xchg
shr
out
mov
scas
jnp
repnz
inc
sbb
lret
dec
roll
xchg
arpl
fldcw
lock
into
call
call
inc
pop
dec
rcl
mov
js
les
mov
lds
jnp
decl
in
stos
jnp
push
add
stc
imull
add
pusha
clc
mov
push
xchg
pusha
mov
clc
pop
int
insb
jmp
popa
out
mov
idiv
data16
ret
mov
inc
in
sbb
pop
mov
stos
sahf
pop
mov
dec
xchg
or
addl
pop
push
insl
sub
loopne
scas
jnp
aas
stos
cltd
std
vaddsubps
leave
inc
jp
or
pusha
xchg
push
cmp
lea
adcb
xchg
lret
punpckhwd
sub
push
lods
pop
jp
jle
sbb
mov
insb
or
in
insb
or
jp
in
int3
sub
push
sbb
push
push
mov
xor
imulb
jo
inc
movsb
ljmp
sahf
mov
sbb
dec
das
sbb
mov
fldcw
push
cld
jge
push
daa
rorl
imul
std
repz
in
mov
movsb
add
sub
movsb
add
sub
mov
movsl
cvtdq2ps
jl
lods
pop
lods
xor
xchg
cli
rorl
loop
dec
xor
cmp
mov
loope
xchg
add
jl
pop
je
pop
dec
ficoms
cld
mov
xlat
cmpl
jns
es
lock
bound
push
ss
cmc
adc
dec
ret
mov
sbb
shrl
jge
cmp
or
and
repnz
and
fstl
or
mov
sbb
sbb
jl
ds
sub
xchg
adc
or
ret
bound
stos
nop
iret
sub
pop
dec
jmp
mov
sub
fbstp
pop
int
push
leave
cmc
sbb
je
push
sbb
imul
fcompl
dec
int
fdivl
xchg
je
mov
dec
pop
repnz
dec
mov
out
cmpsb
or
out
out
xorb
sub
inc
cli
ja
fs
jg
push
out
shlb
and
push
or
mov
loop
fs
sti
rolb
push
push
es
pop
divl
push
repz
jecxz
hlt
loopne
pushf
pop
jne
push
ret
jecxz
pusha
adc
les
movsl
cmp
push
mov
inc
mov
or
inc
push
imul
mov
int
dec
mov
test
and
cmc
jno
lret
add
sub
push
in
lock
jge
sub
movsb
add
push
xchg
les
lods
mov
add
insb
leave
mov
push
mov
sahf
cmp
mov
mov
jle
xchg
cli
mov
mov
xor
mov
cmp
mov
outsb
scas
fildl
xchg
inc
in
mov
and
push
cmp
xchg
lret
adc
ljmp
ljmp
neg
cmp
mov
fld
pop
sub
in
push
adc
jl
xor
cmpsb
dec
mov
shll
cmp
adc
repz
inc
mov
mov
lods
jae
ret
jecxz
aam
dec
mov
shrb
dec
pop
jecxz
xchg
jl
sbb
or
and
fmull
lcall
push
cltd
inc
scas
mov
xor
pusha
aas
push
lds
bound
sbb
ficoml
addb
repz
int
adcl
pop
jge
sbbb
lahf
pop
mov
xchg
out
or
sub
jg
not
mov
in
fbld
pop
or
out
test
dec
adc
cmpsb
addb
xor
mov
pop
fcomps
loop
mov
rol
filds
imulb
scas
daa
mov
adc
mov
sub
leave
and
fimull
mov
aam
jnp
outsb
sbb
push
jns
inc
push
or
ljmp
sbb
mov
fistpll
mov
std
push
lods
xchg
andb
mov
jg
jl
int
adc
jecxz
ljmp
adc
fld
imul
adc
and
sbb
scas
insl
out
add
or
pop
sbb
adc
insl
rolb
add
sub
or
mov
adc
insl
push
xor
sbb
inc
cltd
pusha
pop
push
subl
fxch
add
xchg
loopne
out
loopne
test
xlat
pop
jg
sub
push
insl
lret
insb
insl
nop
adc
or
cmpsl
push
test
scas
xchg
sbb
push
aam
mov
inc
lret
or
fists
pop
jnp
loop
pusha
or
int3
insb
mov
adc
cmp
and
hlt
xor
pushf
mov
sbb
mov
add
mov
ss
adc
xchg
mov
jo
inc
dec
lods
data16
enter
xchg
lret
leave
mov
xlat
push
add
jmp
mov
lea
push
sbb
adc
sub
pop
mov
ljmp
pusha
insl
ror
mov
mov
lds
push
mov
inc
stos
pop
pop
xor
cmp
push
mov
icebp
lahf
xlat
pop
push
arpl
test
and
pop
push
xchg
sub
cmovae
sbb
mov
push
imul
cltd
aas
inc
pop
sbb
or
aad
into
stc
fcos
sahf
rcrl
jns
mov
frstor
fnstcw
push
sahf
out
jle
mov
clc
ljmp
adc
sahf
adc
repnz
jne
xchg
imul
mov
sbb
inc
pusha
push
sub
scas
sti
add
fisttps
add
test
sub
cli
dec
lods
cmc
xchg
idiv
outsl
sub
clc
clc
pop
xor
cwtl
mov
xor
xchg
orl
stos
cs
iret
gs
shl
test
iret
adc
sbb
lods
test
insl
push
inc
sbb
fcmovbe
test
push
scas
sub
adc
punpcklwd
ss
adc
jns
pop
repnz
adc
fs
push
sbb
mov
push
pop
out
daa
nop
adc
sbb
jl
jno
out
pop
and
add
jno
shl
sti
notl
xchg
fisubrl
adc
out
xchg
orl
push
sahf
cs
dec
sub
push
mov
cmp
sti
and
movsl
and
xor
out
lods
mov
insb
and
jmp
mov
insl
mov
or
ljmp
stos
pop
mov
sub
outsl
inc
lahf
xlat
fstp
mov
dec
or
pusha
mov
dec
lcall
cmp
loop
adc
cltd
xor
mov
scas
adc
add
fldl
jg
dec
sbb
cmp
call
inc
and
loop
repz
xchg
adc
ss
and
jno
xor
jp
aaa
popa
pop
mov
xor
hlt
lcall
pop
xchg
cmp
fwait
test
movsb
inc
sbb
jo
lock
pop
jle
add
lahf
sub
xorl
imul
xchg
cmpl
adc
addr16
aam
push
mov
add
test
test
xor
mov
jno
mov
in
xchg
mov
inc
pop
testb
mov
jno
popa
loope
and
add
lea
fldl
lret
jmp
shrl
inc
pop
std
insb
xchg
and
pop
cmpsl
jbe
pop
fstl
pop
and
jb
xchg
es
mov
adc
and
call
mov
push
xor
adc
sub
loop
stos
rorb
stc
mov
data16
xlat
out
xchg
jg
mov
dec
enter
std
popa
cltd
push
cmp
daa
mov
outsb
nop
pop
pop
lods
cmpsl
pop
push
leave
xchg
data16
pop
push
jge
stos
insl
fiadds
and
push
les
xor
inc
inc
pop
mov
adc
out
push
xor
mov
xor
aam
cwtl
aam
mov
in
jnp
inc
xchg
push
mov
dec
jns
loop
sbb
push
repz
shll
jecxz
or
lea
imul
inc
repz
fdivrl
es
icebp
icebp
cmp
aam
ja
rorl
push
pop
stos
mov
mov
mov
pcmpgtd
xchg
pop
rolb
stc
push
fldlg2
inc
jns
daa
inc
bound
divb
pop
roll
cmp
and
xor
fdivl
cmp
inc
cltd
lds
je
leave
fistpl
cltd
aam
push
movl
out
outsl
push
mov
mov
sub
int3
lea
pop
jns
sbb
in
outsb
cld
cwtl
xchg
or
rcrb
cli
scas
pop
nop
xor
add
and
mov
in
mov
movsl
mov
jmp
sbb
adc
mov
or
sbb
inc
sarl
and
cli
xchg
dec
rcr
cmpsl
shlb
add
scas
xchg
mov
arpl
cltd
hlt
repz
shlb
push
rclb
mov
adc
loope
pusha
hlt
xchg
dec
cmp
pop
ficomps
pop
adc
and
mov
mov
aam
int3
xor
mov
test
aad
stos
dec
pushf
shlb
push
push
mov
and
divb
or
mov
adc
pop
cmovp
stc
nop
xlat
xchg
and
movsl
ja
push
shll
and
int3
pop
popf
cmp
mov
adc
gs
xchg
or
add
and
subl
inc
or
or
xor
pop
sbbl
icebp
adc
in
hlt
pushf
sub
test
sahf
mov
add
pop
xchg
enter
stos
in
push
movsl
mov
cld
sbb
dec
mov
cwtl
mov
xor
xchg
test
lret
xchg
or
imul
push
xchg
andps
cmp
aas
mov
shlb
push
fcompl
loopne
imul
fstps
fcmovnbe
aad
push
sub
and
mov
int
aaa
push
test
jae
test
bound
repz
dec
add
stc
ret
inc
ret
or
lret
cmp
hlt
decb
out
push
adc
daa
aas
data16
push
ljmp
test
pop
loopne
lds
jmp
outsl
clts
pusha
xor
je
jb
icebp
cld
popf
push
call
imul
je
mov
insb
and
xchg
stos
xchg
daa
add
dec
nop
test
int
mov
mov
ret
stos
or
hlt
sahf
data16
iret
push
sbb
jge
ljmp
lret
inc
xor
add
loopne
or
mov
mov
dec
jecxz
push
add
movsb
shr
addr16
mov
dec
inc
mov
xchg
je
xorb
sbb
jno
les
mov
xchg
out
push
or
call
mov
jp
pop
push
test
or
icebp
jb
push
or
dec
pop
int
sbb
inc
jae
xchg
imull
mov
jo
loope
xchg
add
cmp
xchg
pop
mov
push
and
mov
aaa
pop
or
test
dec
orl
cs
cwtl
pop
add
jmp
out
push
aaa
ficompl
jmp
add
jmp
dec
xchg
ss
ret
push
aas
stos
mov
inc
dec
xor
sbb
or
cld
in
aad
mov
test
pop
inc
dec
xor
sbb
or
cld
in
aad
mov
test
pop
inc
dec
xor
sbb
or
cld
in
aad
mov
test
pop
inc
dec
xor
sbb
or
cld
in
jg
lds
push
jp
sbb
or
cmp
sub
push
adc
ds
fs
orb
fld
leave
nop
stc
loopne
lock
or
cmp
sub
pop
inc
dec
push
jns
imul
mov
enter
jmp
adc
and
xor
dec
push
jns
imul
ror
mov
xchg
mov
lock
add
cmp
push
xchg
xchg
xchg
arpl
xchg
push
pushf
mov
out
movl
cmc
or
push
xor
iret
pop
mov
cmpl
mov
leave
pop
scas
loopne
or
adc
pusha
pop
or
inc
pushf
outsb
test
rolb
pop
jmp
adc
and
and
inc
mov
and
add
pop
pop
push
dec
mov
dec
popf
mov
mov
inc
imul
xor
and
push
loope
mov
add
inc
jb
ret
stos
jns
fidivrs
orl
lcall
add
adc
and
xor
dec
push
jns
imul
mov
leave
sar
loopne
mov
insl
push
jg
outsl
jbe
das
adc
add
in
stc
lret
ficomps
mov
outsl
inc
jge
pop
and
cmp
add
cvttps2pi
imulb
mov
jle
or
dec
inc
sbb
dec
push
jns
imul
mov
leave
sar
loopne
lock
or
cmp
sub
pop
inc
dec
push
jns
imul
mov
leave
sar
loopne
lock
push
loope
test
push
xlat
hlt
test
inc
mov
fwait
loope
jmp
fnsave
mov
into
sub
movsb
testl
lea
stc
sub
and
and
fisttpl
inc
xchg
pop
aam
aad
sub
mov
push
adc
mov
nop
inc
jo
xchg
push
imul
stos
adcl
fnsave
aas
mov
fldt
lret
sbb
fwait
inc
cmpl
in
sub
jb
mov
test
push
push
aaa
or
ret
sub
jbe
pop
shr
dec
pop
dec
add
rcl
daa
ret
and
add
fists
lahf
test
inc
outsl
mov
cmp
cs
movl
fwait
sbb
mov
sub
dec
lods
pop
imulb
ljmp
ret
xchg
mov
dec
add
pop
xor
sub
sbb
jmp
add
cmc
jns
ds
xchg
cwtl
inc
push
das
shll
dec
push
lock
repnz
mov
xchg
lret
repz
push
xor
jne
mov
mov
and
and
sub
pop
pusha
jmp
mov
dec
sbb
pop
and
enter
mov
mov
pop
adc
notl
cmpsl
jno
sub
sub
imul
mov
sahf
inc
add
lcall
inc
add
dec
movsl
int
das
sbb
imul
add
mov
and
repz
orb
sub
xor
pop
pop
xor
and
gs
add
jmp
sub
sbb
insb
or
inc
mov
inc
or
mov
mov
bound
lods
cmp
or
dec
or
popa
jns
pop
sar
pushf
ficoms
loope
popa
mov
sbb
sub
jmp
pusha
mov
mov
cmp
jns
orb
aaa
push
mov
ss
outsb
repnz
imul
dec
xlat
or
cmp
push
mov
sub
mov
outsb
xor
pushf
push
push
add
sub
add
pushf
stc
inc
sub
std
xchg
cmp
cld
jmp
lods
adcl
aad
and
sahf
push
fisubrl
pop
lock
aad
faddl
mov
sbb
or
mov
lret
cmp
int
add
je
popa
pop
cmp
movsb
xchg
popf
jge
daa
out
jmp
test
mov
faddl
cmp
jge
mov
xchg
jge
pop
add
adc
and
cwtl
clc
dec
pop
add
lock
sub
repnz
jno
xor
push
push
rcrb
adc
cmpsb
mov
out
jg
test
and
cltd
inc
pop
xlat
fildl
pop
lcall
in
shrl
aaa
jnp
mov
adc
fdivrs
inc
ret
ret
adc
adc
xchg
sub
jmp
sbb
js
testl
int
and
sbb
scas
dec
push
inc
mov
xchg
mov
lret
out
in
xor
jmp
mov
sti
xorl
and
leave
js
xor
loop
mov
adcb
movsb
mov
iret
jge
xlat
popa
inc
cmp
xchg
or
add
ss
fnsave
sub
lcall
aam
cmp
int3
lcall
popa
and
mov
imul
sub
inc
add
mov
push
mov
sub
mov
mov
jmp
inc
lahf
cli
loopne
add
cmp
jecxz
aad
xchg
or
dec
add
fisttpll
mov
xchg
mov
clc
ret
jnp
pop
in
out
or
jg
jno
jbe
mov
cld
mov
mov
xor
xchg
dec
pop
cmp
out
cmp
push
sub
mov
je
push
pop
sbb
or
inc
pop
sahf
mov
movl
mov
inc
xor
or
sbb
icebp
mov
xor
adc
push
enter
mov
imul
jmp
lods
inc
pop
gs
lds
lret
xchg
fstps
stc
or
and
enter
xlat
arpl
mov
mov
xorl
mov
std
std
movsb
and
lea
mov
in
jle
lea
mov
inc
mov
or
in
cmp
sub
sahf
add
cmp
cmp
ja
dec
and
arpl
cld
mov
orl
scas
sub
cmp
sub
lcall
loope
repnz
push
imul
cmp
std
fisttpl
hlt
mov
lds
lcall
jle
cwtl
inc
inc
or
hlt
sbb
subb
gs
inc
push
in
xchg
pop
fisubrs
pop
js
jnp
iret
fisubrs
xchg
fsubs
imul
jmp
dec
loopne
pop
negl
aad
fbstp
movsl
in
inc
dec
aaa
push
int
or
fs
cmp
and
xchg
fcmovnb
lahf
std
fwait
dec
push
lods
push
jmp
add
arpl
mov
mov
rcr
or
mov
repnz
mov
sbb
fs
cmp
clc
inc
cld
les
icebp
or
ljmp
cmp
out
push
push
out
stos
xchg
lods
cmp
jne
xchg
mov
sub
js
dec
fs
sbb
adc
es
insl
jecxz
sub
into
sub
test
xor
ljmp
cmp
pop
int3
push
scas
jbe
psrlq
roll
das
hlt
dec
or
jns
mul
loopne
jp
cld
jnp
pop
and
xchg
cmp
pop
fcoml
sub
shll
mov
mov
or
mov
addr16
sub
mov
mov
and
cmp
pop
sbb
mov
inc
arpl
jge
int3
xchg
push
xor
rcrl
aas
test
stc
imul
out
int
lret
dec
in
mov
mov
in
xor
cmpsb
out
push
loop
int3
cmp
adc
xchg
mov
sub
add
lcall
fcomip
jnp
lock
or
insb
into
xor
and
push
inc
sub
in
cli
mov
and
fcomps
imul
sbb
xchg
or
pop
leave
enter
cli
das
mov
sbb
arpl
loop
xchg
stc
outsl
mov
lret
jmp
scas
dec
aas
jge
pop
lods
fmuls
dec
inc
in
fbld
adc
cmpsb
int
add
hlt
pop
cmc
iret
popf
jns
dec
ret
pop
lock
jg
mov
push
rolb
popa
jb
xchg
je
std
stos
ja
out
push
stos
xchg
test
pop
or
xor
pop
push
jmp
loopne
call
mov
outsb
cmp
call
mov
icebp
lcall
inc
les
or
nop
insb
mov
addr16
cmp
into
dec
loopne
pop
ret
insb
pop
cltd
or
push
sbb
xor
or
fwait
pop
cmp
xor
inc
mov
pop
pop
xor
iret
sbb
mov
hlt
lock
dec
popa
and
decl
inc
in
cmp
and
out
inc
aam
shl
mov
addr16
lock
ss
nop
sub
lcall
jnp
aas
sbb
dec
stos
sub
xor
in
cmp
mov
dec
sub
xor
or
and
lods
enter
push
ljmp
ror
jle
adc
mov
and
adcb
rorl
sbb
fildll
inc
shll
cmpsb
in
repz
inc
repz
cld
cmpsb
sub
cmp
mov
pop
inc
pop
dec
fdiv
shrb
inc
inc
push
sub
sub
lods
xor
test
mov
das
mov
fnstenv
dec
data16
bound
cmp
test
adcb
xlat
into
lcall
popf
mov
and
lret
sti
test
inc
xchg
stos
ja
shl
pop
test
mov
xor
icebp
mov
cmpsl
and
add
out
xchg
xchg
sub
insb
mul
and
cmp
fnstsw
stos
ss
pop
push
mov
sbb
hlt
aam
fdivr
pusha
outsl
cmp
call
femms
jno
loope
fstpt
or
dec
add
push
cs
cmp
add
outsl
pop
xchg
and
loopne
lods
dec
jb
mov
pop
stc
inc
mov
cmp
sahf
jae
dec
dec
pusha
pop
lds
xor
je
mov
sbb
popf
daa
loop
or
rclb
scas
jne
jge
pop
dec
insl
jo
pop
inc
xchg
dec
js
xor
cwtl
out
das
and
and
les
scas
add
addr16
dec
sbb
stos
fisubrl
adc
fldcw
push
insb
xchg
add
add
jae
insl
icebp
mov
enter
mov
iret
cld
into
mov
in
int3
les
sbb
fbstp
xchg
or
dec
xor
rclb
adc
rorb
fistpll
movsb
in
clc
lea
cmp
pop
sbb
rol
xor
stos
test
fisubrl
xor
mov
stc
aas
push
call
pusha
jo
sub
mov
cmpb
adc
push
aad
mov
jb
and
push
mov
aam
in
addb
cmp
cli
data16
imul
xchg
jnp
xchg
and
inc
xchg
xchg
icebp
push
dec
sub
push
jae
cmp
pop
or
int
inc
test
daa
mov
sub
sbb
insl
mov
xchg
in
sub
mov
cltd
sub
aas
adcb
xlat
jo
data16
clc
pop
jmp
and
sub
mov
aas
repnz
xchg
ja
mov
incl
pop
mov
out
cmp
push
outsl
xchg
inc
mov
xchg
fidivs
push
lea
lods
dec
scas
leave
jge
jmp
mov
push
std
inc
dec
bnd
lahf
pop
push
mov
test
sbb
push
sbb
cli
stos
or
daa
andl
cmpsl
iret
cmc
mov
lds
pop
inc
push
lret
push
cld
sub
add
dec
lea
adc
arpl
mov
pop
mov
rcrb
pop
pop
pop
mov
movsb
lods
nop
adc
sbb
lahf
and
ret
mov
jge
repz
push
into
pop
mov
cmp
rcll
shll
test
jge
in
in
stos
leave
jg
in
jmp
push
jne
lahf
into
adc
iret
adc
push
sti
arpl
mov
add
xor
jmp
mov
insl
xchg
inc
xchg
jno
xor
push
xor
and
push
mov
roll
lock
ljmp
push
imul
pop
dec
scas
pop
in
js
push
cld
or
lods
sub
and
push
fdivrl
js
rorb
xlat
or
jmp
mov
outsb
xor
push
or
in
fsubs
mov
pop
jmp
popf
jmp
mov
jp
sti
stc
add
enter
addr16
push
clc
add
cld
push
rorb
movsb
and
ja
cwtl
cwtl
jle
or
mov
test
pop
inc
int
fisttpl
and
jns,pt
in
bndstx
aas
adc
and
mov
xchg
mov
mov
std
mov
cmpsl
stc
mov
repz
test
in
rclb
cmpb
gs
aaa
popf
push
and
and
push
and
rcrb
sti
test
and
xchg
or
push
mov
inc
inc
cli
jno
pop
outsb
sub
jg
inc
push
adc
sub
push
push
and
cmpl
or
sub
push
mov
push
pop
xor
mov
test
imul
push
push
adc
test
xor
xor
mov
adc
push
jnp
daa
in
fisubs
adc
roll
xchg
sbb
sarl
sub
out
jo
xchg
sub
cli
mov
add
push
popf
jmp
icebp
out
push
movsb
aad
add
pop
ret
push
fdivrl
mov
lret
cltd
movsl
pushl
sub
in
out
cmp
inc
lahf
loopne
les
jg
sub
arpl
movsl
hlt
lock
mov
bound
lds
push
mov
int
pop
xor
jge
sub
inc
or
lcall
dec
and
xor
add
cltd
icebp
cmpsl
out
iret
iret
sub
lock
loope
test
test
leave
mov
repnz
int
jp
aaa
add
dec
inc
push
scas
pop
xchg
inc
mov
xchg
imul
pop
jns
jmp
popl
mov
lock
arpl
cltd
and
inc
fwait
jnp
pushf
jl
nop
pop
add
cmpsl
lods
sub
push
mov
je
mov
sarb
sbb
adc
xor
mov
data16
sbb
aam
fwait
iret
outsl
xchg
out
pop
pop
shlb
andl
sub
push
orb
sub
cmp
and
cmpsl
adc
lea
sti
push
and
leave
mov
addl
push
subb
pushf
push
out
mov
push
sub
outsb
pop
loopne
je
and
mull
jbe
sub
psubb
lock
rolb
and
dec
push
ljmp
lds
inc
int3
lea
mov
push
aas
pop
ffree
hlt
jp
or
popa
cmp
jmp
lahf
xchg
and
cli
or
insb
jl
mov
call
ret
aaa
cmp
clc
lods
cwtl
movsl
fidivrs
push
pusha
sub
sbb
push
data16
mov
stc
pop
cmp
cmp
js
pop
dec
sub
mov
add
into
jne
aad
out
mov
lea
mov
pop
mov
and
aaa
and
mov
cmc
pop
out
mov
sahf
xchg
notl
scas
pop
cmp
fldenv
and
orl
movsl
push
and
sbbb
insl
xor
jo
dec
xor
cmp
pusha
lods
out
mov
je
jno
pop
push
int
and
xor
lods
push
inc
sbb
inc
adc
js
or
push
inc
inc
xor
addb
es
push
pop
adc
lret
adc
cmp
mov
movsb
loop
iret
mov
std
imull
add
aam
loopne
mov
cmpsl
fbld
pushl
sbbl
gs
das
adc
xor
mov
mov
sbb
fistpll
xor
cltd
push
xor
ljmp
fsts
ljmp
cwtl
lcall
sbb
mov
or
mov
and
push
or
stos
sahf
into
dec
pop
xchg
mov
xchg
cmp
ja
testb
sbb
test
in
xchg
int
or
push
loopne
sub
push
mov
push
pop
adc
out
mov
adc
sub
mov
xor
mov
in
mov
or
push
add
push
add
pop
inc
das
ja
pop
addr16
setge
pushf
and
negl
and
lods
xchg
mov
and
push
iret
adc
jp
lea
lcall
mov
loope
pop
fisubrl
sub
fdivs
shlb
sbb
orl
popf
dec
xchg
icebp
push
dec
rclb
fsts
pop
xchg
pop
and
iret
out
sbbl
fisubs
xor
add
add
gs
pop
mov
loopne
inc
shll
xchg
into
lret
out
sub
sbb
mov
fnsetpm(287
mov
pop
mov
xchg
cs
cltd
adc
mov
dec
das
xor
push
bound
movsb
shrl
mov
and
popf
mov
fs
rcl
pop
xchg
and
mov
jle
das
inc
cmp
and
sbb
sbbl
mov
cwtl
sbb
xchg
pop
or
xor
fistps
cwtl
push
mov
inc
sub
xchg
popf
daa
add
push
fsubs
shl
lea
mov
movsb
add
xor
lock
mov
push
xchg
inc
cmp
aaa
push
fcoml
mov
lea
sub
stc
jmp
mov
jmp
lret
add
repz
cmc
jl
jb
int
jbe
rcrb
shlb
cmp
insl
cmp
pop
mov
loopne
or
es
cmp
push
dec
lret
pop
sub
jb
sarl
adc
lcall
cmp
jp
testl
lods
dec
mov
les
jns
movsl
subl
scas
xchg
ja
inc
sbb
or
fcoms
mov
add
mov
add
push
ds
shlb
or
mov
mov
jae
ror
xor
fildl
push
stc
daa
sub
sahf
in
sbb
fistl
cmp
call
and
mov
ret
daa
push
jno
mov
jg
hlt
jmp
clc
das
int
movsl
mov
loop
or
jg
mov
cli
out
cltd
fwait
mov
push
fstl
and
mov
scas
adc
jbe
xchg
sub
add
out
adc
jno
xchg
fldl
mov
inc
pop
fwait
sbb
mov
fwait
pop
jnp
xchg
mov
adc
movsl
aaa
int
loopne
push
rol
imul
cli
sub
push
sbb
pop
pop
mov
add
pop
sbb
xor
jno
stos
and
out
push
sub
dec
adc
xlat
insb
jae
ja
sub
sbb
pop
mov
outsb
call
rorl
fsubl
mull
sbb
std
ss
pop
push
aam
or
lods
cli
stos
das
dec
sbb
add
push
jno
mov
andl
fstl
and
mov
adc
loop
push
jno
sbb
mov
mov
and
movsl
sub
xor
daa
pop
mov
dec
outsl
std
push
loop
push
add
jnp
movzwl
lds
les
jbe
loope
jae
and
fsubrs
lea
popa
ljmp
mov
or
arpl
pop
mov
jp
xor
ds
mov
bound
sbb
xchg
xchg
dec
repnz
loop
rcll
mov
pop
adc
cmp
int
or
mov
push
mov
in
test
das
push
sub
cld
jg
adc
cli
jnp
jge
pushf
inc
pop
push
movsb
paddb
mov
and
mov
pushf
sub
jg
fcmovnb
push
mov
and
jb
fsubrs
pop
jg
add
les
and
mov
nop
int
mov
rcrb
rolb
in
insl
cmpsb
push
es
lods
adc
inc
xor
movsb
mov
jg
stos
mulb
insl
inc
push
les
in
rcrl
lds
adc
in
popf
jae
rcrl
xor
add
inc
mov
or
pop
out
mov
cmpsb
lcall
ret
cld
dec
pop
adc
mov
jnp
and
xchg
je
mov
mov
dec
pop
dec
fidivrl
lret
shrb
je
adcl
pop
stos
js
pop
adc
ret
pop
ja
cmp
imul
popa
test
test
ds
arpl
push
insb
xchg
xchg
mov
test
dec
inc
dec
in
or
jle
xor
in
xchg
ret
int3
jae
je
out
xlat
stos
add
rcrl
add
push
rol
sahf
sbb
jge
push
mov
cwtl
xlat
loop
outsl
or
je
xchg
sub
jp
stos
stos
mov
mov
pop
sbb
jp
imul
outsb
lret
xchg
pop
and
test
dec
cmpsw
dec
add
inc
mov
and
mov
sti
xor
push
jmp
xor
dec
inc
or
pushf
lret
pop
mov
cmp
and
jbe
scas
jne
or
mov
cwtl
out
and
addr16
dec
dec
outsb
mov
or
jg
or
mov
in
mov
cmc
mov
jmp
sbb
or
or
inc
jbe
cmpsb
pop
nop
dec
xchg
pop
adc
inc
xchg
popf
sub
xor
mov
add
jp
xchg
pop
and
or
jle
xchg
adc
and
orb
test
cmp
add
push
mov
hlt
or
fildl
mov
mov
mov
sub
jns
icebp
arpl
push
data16
dec
jo
in
daa
dec
sahf
test
fisubrs
addr16
adc
cwtl
dec
sbb
mov
fcoms
loope
stos
mov
nop
add
xchg
add
fistpll
cmp
stos
sbb
stos
and
fiaddl
pop
xor
push
sti
inc
xor
dec
lods
loop
test
mov
and
xor
dec
push
jns
imul
mov
leave
sar
loopne
lock
or
cmp
sub
pop
inc
dec
push
jns
imul
mov
leave
sar
loopne
lock
adc
and
xor
dec
push
jns
imul
mov
leave
sar
loopne
lock
or
cmp
sub
inc
dec
sar
loopne
data16
cmp
mov
inc
das
add
adc
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
stos
lds
mov
xchg
or
mov
sbb
pop
ficompl
stos
cmp
or
jp
out
pop
fstpt
cmp
adc
ljmp
mov
or
inc
jecxz
shll
leave
push
lds
imul
lret
aam
mov
pop
mov
inc
sbb
lods
mov
inc
lret
jp
xchg
lahf
push
sub
daa
mov
jnp
xchg
dec
sbb
scas
lahf
adc
div
in
cmp
imul
js
frstor
sub
inc
cld
sbb
jl
les
xor
xchg
pop
imul
ljmp
stos
cmp
mov
add
fidivl
ds
in
xchg
sti
jnp
shlb
cltd
sti
das
ss
jnp
adc
jecxz
xchg
dec
sub
std
mov
xchg
test
dec
xor
int3
or
cmp
shll
jbe
dec
xchg
cs
sub
bound
mov
add
jp
push
add
xor
insb
adc
arpl
push
ficompl
push
out
and
push
popf
add
sub
push
out
js
jg
imul
stos
les
imul
jmp
xchg
mov
push
lcall
imul
mov
out
repz
mov
sbb
dec
ficompl
stos
cmp
or
jp
push
pop
fisttpl
mov
sbb
dec
ficompl
stos
cmp
xchg
mov
jecxz
fwait
jmp
inc
push
test
test
jge
xchg
shl
loopne,pt
sub
pop
mov
jne
loopne
test
xchg
clc
mov
jmp
lahf
adc
mov
push
daa
mov
xchg
xchg
or
loop
cmp
lds
inc
in
dec
and
mov
insl
sbb
xchg
stos
les
in
pop
push
inc
xlat
fucomi
mov
and
mov
jmp
xor
push
cmp
push
addb
ret
stos
dec
outsb
mov
sub
lds
or
cmp
mov
mov
arpl
stc
out
dec
lock
rdseed
stos
cli
sub
and
pushl
icebp
decb
jno
xchg
imul
test
testl
mov
pop
movsl
push
movsl
fistps
data16
pop
aaa
sub
pop
inc
lcall
stos
xor
je
test
and
mov
dec
mov
lds
psubw
gs
je
fisttps
fsubl
imul
das
xchg
jecxz
cwtl
jge
cmp
jnp
flds
mov
mov
xchg
ffree
sahf
sub
flds
mov
adc
dec
movsb
sbb
xchg
push
aaa
insl
xlat
push
loop
adc
mov
adc
inc
in
cmp
in
mov
jae
hlt
xor
jp
push
outsb
dec
sbb
lock
insb
pop
fcoml
pop
cmp
push
mov
ljmp
lods
mov
xor
mov
nop
movsl
cmp
mov
add
js
and
ret
jb
pop
aas
cmp
pop
mov
mov
or
nop
cmp
ret
mov
ss
int3
inc
jmp
ret
pop
or
outsl
into
lahf
pop
aam
pop
lret
and
mov
lret
and
push
aam
out
test
push
xchg
jg
insb
push
leave
mov
dec
ds
and
or
cmpsb
mov
stos
dec
sbb
add
insl
test
mov
or
pop
sub
mov
mov
imul
imul
inc
mov
dec
lahf
pop
out
rclb
jecxz
clc
int3
jg
mov
scas
pop
aaa
cmp
jb
or
adc
je
sub
dec
add
ret
in
cwtl
mov
gs
imul
in
cmp
in
sti
mov
les
jne
mov
push
rclb
xchg
cmp
idivl
mov
cs
add
inc
leave
pop
or
cmp
adc
bound
adc
test
jne
mov
mov
pop
sbb
dec
mov
out
cmpl
fs
frstor
lds
sub
dec
cli
push
aad
movsb
jg
repnz
xor
sub
push
sbb
or
cmp
mov
inc
ja
mov
cld
int
icebp
sar
daa
movsl
sub
dec
pop
out
ret
jg
jle
sti
ret
movsl
mov
mov
hlt
sub
jle
inc
mov
xchg
in
fistps
loopne
add
icebp
lret
push
pushf
inc
lock
popa
in
incl
outsb
dec
mov
fwait
mov
lock
xor
adc
pop
jbe
pop
mov
jo
push
xchg
inc
loopne
add
test
sub
fcoms
repnz
push
test
or
test
cmp
ficoms
jnp
push
pop
sub
cmc
arpl
mov
cmp
cltd
addl
int3
xor
sbb
dec
ror
les
mov
mov
lods
xchg
lds
pop
fstl
pop
xchg
or
xor
mov
cli
sar
sub
lret
push
cmpsb
sub
dec
mov
inc
pop
lock
or
jbe
imul
xchg
xor
out
mov
xchg
adc
mov
sub
jecxz
adc
sti
jg
sub
icebp
sub
sub
dec
divl
insl
push
cltd
push
add
ret
rorb
mov
jnp
aam
jge,pn
outsl
mov
cmp
out
jg
ljmp
inc
or
ficomps
bound
xchg
test
jae
popa
imul
in
push
pop
xchg
dec
clc
jp
gs
lret
lret
push
pop
into
add
rclb
dec
pop
adc
scas
bound
loope
loope
mov
or
sbb
inc
inc
clc
jmp
or
stos
mov
xchg
xor
xchg
mov
aad
fsubrl
push
sub
jl
scas
iret
aad
pusha
outsl
or
enter
or
lret
movsb
sub
lea
jo
hlt
out
ret
scas
outsb
pushf
popa
aad
xlat
jg
outsl
cmp
iret
push
in
pop
pop
roll
push
daa
mov
loope
mov
arpl
inc
xchg
pop
test
or
sub
lods
cld
scas
fidivl
cwtl
addb
test
mov
push
fnstsw
or
das
mov
aad
imul
or
jp
sub
xor
data16
out
stos
xchg
repnz
enter
test
jmp
insl
gs
iret
and
dec
mov
push
and
popf
add
call
cmp
jns
std
mov
test
push
mov
fwait
test
pushf
or
xor
push
fldl
dec
decl
jo
in
push
je
pop
aad
ffree
xor
cmpsb
jge
xchg
movb
cld
adc
push
in
push
movsb
jg
sub
mov
inc
add
push
add
outsl
mov
scas
pop
outsb
jge
in
adc
aad
sub
push
repz
xchg
push
cwtl
std
adc
stos
inc
loopne
pop
and
jb
cld
sub
lret
mull
fistl
mov
into
xchg
mov
popf
dec
insl
mov
push
push
out
dec
dec
sbb
adc
call
enter
dec
push
and
mov
or
int3
aas
add
test
adc
and
mov
mov
cmp
pop
sbbb
mov
pop
aaa
cmp
inc
imul
and
mov
mov
xchg
jbe
je
xchg
or
std
sbb
adc
sahf
inc
lods
test
mov
cmpsb
testl
jne
inc
inc
and
sti
into
fsubrs
popf
sarb
and
jno
adc
es
call
xchg
ret
and
sbb
mov
cld
sahf
mov
jae
or
sbb
and
dec
fldt
add
push
xchg
into
decl
popa
test
dec
test
shll
fwait
rcrb
mov
jo
xchg
push
and
pop
scas
sub
fcmovne
and
rcl
mov
cmp
mov
sub
les
pushf
pop
cmp
in
lods
fcoms
call
aaa
addr16
sub
push
rclb
int3
lcall
rcrl
sbbb
inc
push
stos
mov
mov
out
lea
cmp
cli
fldenv
in
or
loope
sub
xchg
cld
lods
addr16
mov
cmpsl
sbb
xor
or
mov
jle
push
cwtl
mov
mov
and
scas
test
sbb
out
mov
mov
push
adc
imul
in
pop
imull
xchg
movsb
pop
outsl
jae
cld
sub
inc
test
cli
movsbl
lret
mov
cmp
cmp
mov
xchg
bnd
dec
cmpsb
insb
aas
cmp
pop
sahf
cs
sahf
outsb
adc
popa
jmp
loope
adc
loopne
mov
sbb
push
adcl
push
push
fs
dec
imul
pop
sbb
fisttps
bswap
jnp
cmp
out
sbb
mov
gs
add
xchg
mov
inc
sub
outsl
inc
mov
es
andl
loopne,pn
stos
dec
lcall
sahf
cmp
push
push
mov
repz
cld
cmp
dec
jno
dec
call
mov
adc
sbb
fdivl
fisubl
stc
push
xchg
pslld
and
push
das
xor
pop
inc
mov
stc
add
and
and
fnstcw
mov
mov
mov
mov
fstpt
xlat
jp
cmp
adc
call
and
iret
mov
aas
dec
cltd
mov
mov
das
pop
pushf
xor
hlt
mov
jmp
push
ret
ss
enter
test
out
test
inc
dec
divb
push
mov
dec
cmp
stc
add
and
in
inc
xorl
xchg
outsl
ret
popa
adc
adc
pop
dec
in
mov
fisubrs
mov
insl
push
int
sar
dec
inc
pop
mov
addr16
push
stos
bswap
sbb
mov
cmpsb
cmp
dec
push
in
ficoms
pop
hlt
mov
add
lock
sbb
icebp
scas
sbb
add
nop
push
pop
rclb
sub
rclb
clc
push
repnz
scas
ds
clc
xor
push
fildll
and
inc
repz
push
xchg
sub
es
imul
xchg
loope
dec
pop
or
outsb
jbe
stc
mov
xchg
jno
movsb
lea
shll
fiadds
ds
mov
scas
sbb
xchg
hlt
stos
sarb
stos
jo
push
adc
mov
pushl
in
fdivrl
xlat
sub
mov
mov
or
ja
mov
leave
imul
and
movsl
mov
xchg
loopne
mov
sar
push
leave
and
jge
mov
mov
add
and
outsb
cltd
sub
push
lret
dec
shlb
fcomps
and
movsl
call
pop
sbb
negb
ss
lret
jb
add
and
arpl
inc
jecxz
cld
sbb
mov
jae
popf
mov
aaa
push
push
sub
sub
pop
pop
sbb
or
xchg
mov
sub
cwtl
sub
ret
inc
int
or
sub
ret
cmc
lods
in
int3
mov
lods
cld
cmp
adc
repz
lock
push
sti
lods
mov
xor
sbb
paddb
aaa
dec
negb
aad
pop
mov
sub
out
arpl
fiadds
pop
shll
cli
sub
push
and
pop
ret
xchg
stc
cs
adc
dec
scas
xor
lock
xchg
jle
fildll
bswap
rorb
mov
and
out
into
mov
cmpsb
dec
mov
jb
jl
lods
imul
inc
shll
dec
or
lahf
mov
inc
stc
mov
pushf
add
mov
cld
data16
frstor
lcall
pop
adc
rclb
lahf
xchg
sub
repnz
lods
fcompl
pushf
mov
loop
pop
mov
andl
in
repnz
pop
inc
add
xchg
outsb
pop
push
divb
mov
lods
mov
lcall
iret
sub
movsb
jg
pop
aad
jo,pt
jecxz
xchg
sbb
arpl
sbb
cmpb
fs
shrl
out
int3
mov
ljmp
aaa
cmc
out
mov
mov
cmp
cmp
jbe
cli
push
and
lock
pop
pop
out
jnp
icebp
dec
jp
rorb
lcall
dec
arpl
pop
cmp
rclb
mov
mov
mov
add
lret
cmp
lods
and
cld
loope
insl
push
stc
lret
mov
fldl
push
sbb
mov
and
and
scas
xor
and
fnstenv
sub
aaa
pop
fisttps
jbe
push
fistpll
test
mov
lds
in
cld
testb
cmp
push
cmpsb
dec
adc
cmp
inc
clc
or
pop
sub
test
fwait
and
pop
jbe
cltd
ja
pop
fcoms
mov
mov
push
aaa
data16
push
jne
lret
push
xrelease
pop
clc
lret
xchg
lret
push
sti
push
sahf
lahf
and
pop
cltd
daa
addr16
lds
cmpsl
jb
adc
imul
pop
cli
lretw
loope
ds
jmp
mov
add
cmp
aas
imul
adc
mov
enter
mov
insl
mov
jb
lods
jbe
shlb
dec
mov
pusha
mov
mov
xchg
pop
popf
insl
pop
adc
xchg
xchg
pop
test
push
and
data16
movsl
push
sub
dec
xor
pop
fildll
jp
fldl
std
gs
cmp
hlt
addr16
dec
lret
adc
and
stos
mov
jg
pop
icebp
mov
les
pop
test
mov
rcr
sbbl
push
mov
cwtl
push
cmp
sub
xor
fwait
xchg
ds
bound
movsb
mov
movups
les
movsl
and
lea
cmp
sahf
cmp
sahf
mov
push
mov
lock
fbstp
stos
adc
clc
mov
mov
inc
sub
mov
add
mov
and
lods
stos
sub
out
popa
lds
and
dec
push
mov
cmp
dec
mov
pop
sub
xchg
divb
test
or
sbb
rcrb
xor
std
pop
push
fs
ret
jp
in
jns
test
inc
ret
test
lahf
and
add
popf
add
jmp
shrb
fisttpl
add
leave
imul
jo
jmp
hlt
xchg
push
mov
cwtl
cwtl
fisubl
ja
repz
movsl
and
dec
fs
inc
lods
les
iret
out
fnstsw
and
les
pop
jae
adc
mov
push
ret
subb
lcall
jle
dec
inc
pushl
or
cli
loopne
clc
repnz
mov
xchg
mov
mov
rcrb
adc
inc
add
in
fdivl
push
inc
push
sbb
adc
divl
or
insb
in
ss
or
push
lea
xor
pop
mov
test
scas
pusha
mov
test
inc
filds
cs
orps
mov
decl
test
orl
or
fdivr
or
pop
pop
dec
fbstp
int
or
xor
jnp
movsb
pop
daa
jnp
sub
mov
shrb
or
ds
mov
pushf
lea
mov
dec
daa
cmp
xchg
xor
gs
scas
sti
jmp
lret
push
fwait
gs
push
xchg
lcall
cmp
xchg
pop
sub
cmc
inc
mov
addr16
shll
and
ja
sbb
jb
in
mov
loopne
pop
inc
out
and
int3
and
push
xchg
loop
sbb
imul
dec
test
scas
mov
lock
pop
xchg
addr16
insb
inc
sub
fsubrs
mov
insl
pop
mov
sbb
mov
ret
inc
loop
fxch
aad
dec
aam
mov
mov
inc
lret
ljmp
sub
mov
sbb
fstp
das
xchg
xchg
dec
cmp
and
jno
add
sar
mov
push
call
andl
sub
addb
cld
inc
sbbl
cld
movsb
movsl
cmp
inc
in
cmp
rcrb
movsl
jl
cmp
xor
imul
loop
out
dec
adc
inc
loope
xchg
cmp
fildll
xor
xor
push
dec
nop
mov
ret
or
stos
aam
adc
jo
imul
cltd
mov
bound
mov
and
dec
push
jo
add
mov
stos
push
xchg
popaw
mov
out
out
fsts
mov
test
sahf
ret
or
inc
xor
pushf
in
call
int3
in
jo
rorl
xchg
jne
out
fs
add
jb
outsb
pop
push
pshufw
mov
inc
mov
fstpt
jp
pop
jp
into
insl
push
ja
mov
test
dec
mov
and
adc
orb
mov
jl
imul
pop
out
dec
pop
sbb
xor
ret
imul
xor
inc
fs
fninit
loop
xchg
clc
negl
test
sti
sbb
lock
lret
aad
mov
add
push
sub
fwait
lret
testb
cwtl
dec
lret
lret
sub
push
push
loope
add
lea
shlb
gs
loop
dec
inc
sahf
jnp
push
daa
push
std
push
sub
adc
jge
jb
jnp
mov
testl
jg
push
out
and
mov
push
dec
pusha
aas
popf
pop
push
mov
mov
enter
rorb
sbb
jae
rcrl
or
imul
filds
jo
outsl
jns
test
lods
dec
mov
je
adc
add
push
insl
jae
ret
mov
pmulhuw
pushf
or
imull
mov
jae
or
xor
xchg
lods
imul
cmpsb
in
insl
xchg
and
fdivp
repz
clc
and
jno
outsb
add
push
in
push
insb
mov
fucomp
jp
push
shrl
outsl
in
fs
mov
dec
fsts
gs
loopne
js
mov
adc
cld
movsb
xchg
adc
xor
iret
xlat
idiv
pop
xchg
filds
xor
xchg
cwtl
jb
sub
repz
outsl
sbb
inc
xchg
mov
loopne
shrb
fstcw
aas
loope
inc
or
movsb
lods
xor
cmp
mov
test
je
mov
cld
icebp
inc
cltd
test
mov
jnp
fiadds
jne
mov
aad
mov
fwait
sahf
mov
xor
push
rcr
jmp
fdivrs
and
xchg
ret
enter
jno
jnp
cs
mov
add
cs
sub
loope
xchg
jo
mov
in
jecxz
popa
imul
fldl
pusha
imul
xlat
or
test
mov
aaa
cmp
cmp
dec
test
leave
daa
xor
popf
jg
hlt
imull
inc
inc
mov
out
dec
push
inc
gs
or
stos
or
sub
lods
out
jle
adc
std
dec
jle
pop
scas
mov
dec
test
or
xchg
xchg
push
xchg
xchg
push
jl
xchg
or
sbb
lea
xor
dec
je
inc
imul
mov
rclb
xchg
ss
rcrb
test
and
push
inc
jno
cmp
imul
lahf
les
add
les
adc
scas
xchg
popf
out
and
scas
push
xlat
loope
divb
jge
fmulp
ds
fsubp
push
inc
andb
mov
jl
adc
les
fwait
insl
inc
mov
xlat
lds
shrl
or
adc
add
mov
xchg
mov
movsl
cmp
rclb
dec
jne
and
pop
orl
movsl
stc
xchg
adc
in
dec
lret
cmpsl
cli
sbb
pop
not
cwtl
adc
in
inc
mov
loope
cmp
arpl
jp
pop
outsl
pop
cmp
jno
cmp
adc
out
inc
mov
pushf
scas
mov
int3
push
pop
sbb
fnstcw
aaa
loopne
lret
lods
inc
sbb
dec
pop
loop
jecxz
inc
pop
xchg
jge
xlat
stc
pop
cmp
and
popf
pop
mov
aas
add
pop
je
push
cmpsl
mov
test
xor
outsl
imul
mov
inc
fidivrl
out
ret
lret
pop
mov
scas
clc
mov
outsb
mov
pop
pop
adc
rclb
testb
cmpsl
jae
sti
inc
ds
cld
xor
outsb
cmp
stos
and
bnd
scas
xor
mov
mov
int
ret
or
dec
or
jmp
and
and
jge
in
push
xorb
push
out
mov
sahf
daa
fdivrl
sahf
pusha
imul
sub
mov
neg
add
lods
das
mov
popf
mov
add
loopne
ss
mov
shlb
push
ret
mov
test
lea
adc
into
mov
and
pop
mov
xor
mov
push
dec
cmp
std
aam
lea
cmp
push
les
iret
ret
addr16
add
jmp
dec
or
sbb
lcall
xor
test
inc
in
je
mov
movb
ja
jbe
cmp
pop
xor
jmp
outsb
jnp
push
cltd
stos
cmpsl
outsb
add
bound
rorl
or
mov
push
xlat
xor
cmpsl
stos
addr16
xchg
aad
sub
xlat
jmp
movsl
sbb
jge
fbstp
xchg
sub
lods
add
clc
insl
outsb
mov
sbb
imul
jecxz
je
repz
je
and
and
jbe
or
jp
push
pop
fisttpl
mov
sbb
dec
ficompl
stos
cmp
or
jp
push
pop
fisttpl
mov
sbb
dec
ficompl
stos
cmp
or
jp
ret
fisttpl
bound
stos
or
jp
dec
cli
pop
lret
mov
or
jp
push
ficompl
aam
les
mov
jb
adc
pop
or
jg
outsl
rclb
and
push
inc
out
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
je
pushw
inc
pop
push
idivb
out
dec
out
into
outsl
fistps
scas
movsbl
mov
pushf
fists
out
inc
lahf
ja
dec
lret
push
add
sub
pop
test
or
inc
mov
push
cs
sbb
ljmp
and
cmp
cmp
rorb
and
dec
mov
inc
adc
mov
jae
push
and
or
js
sbb
mov
jno
fcomip
fwait
cmpsb
ljmp
scas
push
pop
cmpsb
dec
out
outsl
idivb
xchg
sbb
into
das
jns
es
cltd
add
iret
fnstcw
lcall
sub
pop
mov
sti
cltd
data16
xchg
inc
int3
pop
jo
out
push
scas
stc
mov
in
fisttpll
or
inc
push
iret
add
jmp
dec
icebp
jg
outsl
fcompl
mov
cmpsb
aas
das
lahf
fildll
jle
dec
out
pop
lahf
cs
xor
xchg
cmp
push
xlat
push
pop
loopne
enter
jmp
pop
stos
push
incl
xchg
sub
push
jmp
out
cmpsb
add
pop
lds
inc
bnd
mov
and
add
sarl
arpl
mov
adcl
add
aas
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
imulb
loop
inc
aad
mov
mov
int3
pusha
mov
in
rol
insb
sbb
cmp
xchg
stos
in
ficoml
hlt
loop
sbb
add
pop
cmp
mov
aaa
jo
ret
pop
xchg
jbe
push
jo
cli
int
mov
pop
js
jmp
pop
push
xor
repz
fnstsw
iret
push
xor
cmp
cwtl
pop
inc
xchg
shlb
xor
hlt
cld
mov
push
mov
mov
into
cmp
jnp
push
pop
int
imul
sub
xor
in
neg
ds
mov
fdivrl
sbb
and
or
sbb
cmp
test
enter
mov
jmp
cmp
gs
mov
mov
jae
shr
sub
or
scas
and
inc
sbb
dec
lods
daa
repz
xchg
mov
ljmp
lret
inc
cli
loopne
mov
subb
popf
sbb
push
adc
push
sub
xorl
aas
fucomi
fidivrs
movsl
pop
outsb
or
inc
mov
sbb
sarl
inc
mov
shlb
cmpb
dec
mov
mov
jnp
dec
mov
push
xor
xchg
or
ficomps
mov
add
inc
fs
push
pop
sahf
or
or
xor
adc
call
sub
test
sbb
ret
push
lahf
and
inc
cmp
mov
jne
stos
fidivrl
sub
test
mov
test
cwtl
xor
xchg
sbb
xor
aas
mov
repz
hlt
xchg
mov
lcall
lods
out
inc
pop
adcb
xchg
into
movsl
cmc
add
sbb
lcall
jl
ds
cmp
gs
js
mov
loopne
bound
repnz
push
clc
cltd
mov
loope
cld
pop
xchg
or
cmp
dec
or
repz
les
cli
dec
cli
dec
dec
xchg
fistpll
fcomip
popa
sbb
and
pop
aad
pop
xor
push
jbe
aaa
push
test
xor
cmp
cli
push
pushf
xlat
fsubl
sub
mov
jmp
jg
push
fsubrp
cmp
sbb
dec
out
fwait
in
add
rcll
cltd
repz
ljmp
mov
nop
dec
pop
jg
or
dec
mov
adc
jg
fdivrs
xor
cld
cwtl
cwtl
mov
adc
cli
lret
sgdtl
mov
rol
add
add
out
adc
jecxz
out
pop
jae
aam
and
xor
adc
dec
fnstcw
fwait
jg
push
stc
cvtps2pd
and
xchg
int3
push
pop
icebp
jecxz
icebp
xchg
lods
adcl
xor
leave
push
shr
cmp
and
lods
push
jb
ss
mov
mov
sub
pop
inc
outsl
mov
aaa
jno
push
ss
fwait
in
cmp
push
dec
scas
enter
int3
adc
adc
add
adc
pop
lret
dec
leave
mov
aas
mov
inc
imul
ret
les
or
mov
dec
dec
mov
jo
lret
insb
imul
push
jb
cmp
push
loop
mov
mov
mov
dec
ljmp
ds
jo
test
lock
and
dec
popa
mov
and
and
xlat
jmp
or
inc
sub
push
or
cmp
adc
bnd
jbe
mov
jbe
fs
std
lcall
and
xor
insl
filds
cmp
cmp
shll
int3
push
lods
push
fnstsw
pop
into
xor
push
std
mov
jb
fs
or
in
test
jnp
outsl
lcall
pop
out
imul
cmp
test
dec
push
popw
inc
dec
inc
test
push
mov
or
out
dec
jecxz
fldenv
int
xor
mov
cli
test
push
xor
movsb
mov
xchg
jmp
lods
xor
mov
in
es
xor
jae
sbb
xchg
inc
and
mulb
mov
cmpsb
shl
fmul
or
stos
push
aas
sahf
lret
and
adc
ljmp
inc
leave
jmp
shrl
pop
add
mov
shr
cmp
into
xchg
in
sahf
cmc
rcrb
ljmp
ss
bound
fwait
int
andb
mov
ss
cmp
push
sbb
or
pusha
fs
cmp
mov
and
les
scas
jb
sub
fwait
stc
adc
les
jmp
add
push
mov
call
out
sbb
andl
add
xor
xchg
pop
loope
add
adc
push
movsb
cs
test
inc
clc
inc
mov
pop
push
push
cmp
and
push
scas
mov
pop
scas
out
mov
ret
mov
adc
jno
pop
push
dec
ljmp
cltd
lahf
cmp
and
xor
jne
pop
push
mov
cmp
sbbl
jle
and
mov
push
dec
outsl
jle
sbb
insb
in
mov
cmc
out
lods
push
mov
jns
lret
loopne
sub
mov
ret
ror
clc
cmc
xor
or
mov
fcoms
pushl
lds
dec
divl
test
jmp
daa
pop
sub
add
out
and
or
pop
cli
notl
cmp
push
mov
xchg
inc
movsl
inc
add
jmp
cmp
test
mov
push
xchg
clc
pop
xor
push
aas
popf
test
imul
add
cmp
imul
push
stos
cld
pushf
jge
push
icebp
outsl
sub
pushf
in
les
mov
mov
add
jo
fsubrp
sbbl
daa
frstor
lea
xor
clc
sbb
fucomp
and
out
shr
subl
xchg
test
nop
ja
outsb
and
sti
mov
idivl
inc
mov
ss
nop
mov
lcall
out
pop
mov
repz
shrl
push
outsb
sbb
sub
inc
mov
lea
fnstenv
subl
lret
test
or
into
xchg
inc
cwtl
pop
push
and
ljmp
add
push
adc
lds
fdivl
and
dec
push
mov
ja
sahf
scas
add
dec
mov
imul
push
xor
fcoms
fiadds
adc
clc
ds
pushf
das
push
stos
sbb
mov
xchg
xor
sub
hlt
jg
add
imul
fcoml
pop
cmc
xchg
outsb
cmpsl
sbb
aam
and
mov
pop
inc
xor
mov
or
repnz
mov
mov
inc
xchg
aas
out
ret
divl
incb
dec
inc
add
push
mov
pop
and
ljmpw
or
and
test
jmp
jp
pop
cmpsl
or
sbb
mov
pop
and
xchg
or
loop
loopne
and
and
test
andb
movsl
aas
lea
mov
lea
or
and
je
xchg
ret
icebp
cltd
test
add
inc
outsb
out
hlt
xchg
and
push
adc
scas
idiv
inc
insb
jae
push
jg
pop
push
xchg
push
xchg
cltd
dec
and
repz
cmp
mov
pop
sbb
xchg
jmp
cs
jo
inc
inc
int3
xor
mov
push
push
fwait
xor
jae
pop
xchg
sbb
andb
or
adc
or
cmp
inc
mov
sub
fincstp
sub
jnp
outsl
sti
ljmp
inc
ss
ficompl
adc
push
mov
fcoms
pop
xchg
mov
sub
dec
xchg
iret
repnz
sbb
stos
sbb
scas
pop
mov
lret
packsswb
push
das
and
pop
mov
mov
pushf
push
xchg
and
inc
inc
add
push
add
int3
arpl
xchg
inc
popl
push
int
lods
jge
cmpsb
ss
jecxz
sub
pop
outsb
inc
stc
sub
jno
sub
dec
sub
pop
cmpsb
dec
mov
jle
fs
jl
dec
or
int3
mov
lcall
xor
fdivrs
add
lea
movb
jp
ja
jl
fbld
test
push
imul
aam
mov
lret
mov
lea
push
inc
jp
xchg
movsl
xchg
fsubrs
nop
subb
xchg
enter
aam
adc
pop
rcrl
sarb
sbb
fstpl
jno
pop
xlat
add
and
mov
sbb
roll
push
test
sub
loop
sbb
out
not
sbb
push
push
or
push
pop
add
cs
xchg
in
pop
mov
test
xor
sub
outsl
push
dec
mov
pop
sub
idiv
sti
mov
roll
aam
cs
lods
mov
push
push
mov
pop
mov
repnz
xor
rol
sub
inc
cwtl
cmpsl
loop
add
lea
ja
out
pop
fwait
mov
push
bswap
ja
jg
pushf
sbb
adc
add
add
mov
pop
rolb
int3
or
mov
pop
mov
clc
xchg
or
mulb
insb
in
push
ficompl
fistps
insb
pop
int
push
dec
jl
inc
push
int
sub
sbb
testl
cmp
lods
loopne
add
push
leave
insl
jmp
push
or
push
cmp
jne
rorl
mov
in
inc
jle
int3
arpl
cmpsl
xchg
or
aam
in
subl
sub
push
imul
jmp
jg
adc
push
ja
inc
xor
movsb
daa
sub
push
add
cli
jns
iret
lcall
insb
loope
js
aaa
xchg
cmpb
in
pop
sub
imul
pop
xchg
push
dec
or
cwtl
sahf
or
xor
sub
push
pushf
aam
mov
dec
je
jne
push
xchg
xchg
jmp
xchg
enter
mov
and
imul
scas
addr16
inc
jnp
push
push
xor
jns
jmp
mov
jno
das
subb
movsl
fsubs
cmp
push
sub
mov
add
push
es
cmp
clc
loopne
testb
shl
xor
gs
jge
std
lcall
out
mov
jg
arpl
push
std
jl
mov
aas
sahf
jg
movsl
mov
xchg
sar
shl
mov
add
pop
test
pop
push
arpl
mov
lds
imul
loope
pop
push
gs
aam
out
int3
jnp
and
pop
sub
repz
daa
jge
jno
loop
sti
lea
aam
mov
cmp
mov
imul
loop
cwtl
std
loopne
test
push
jg
and
cmpsb
cmp
cmp
jne
mov
mov
and
pop
mov
rorb
clc
sub
addr16
imul
sub
push
inc
test
xor
ror
pop
into
in
fcoml
push
push
adc
dec
shrb
xchg
sub
sbb
in
test
sbb
mov
or
xlat
pop
sub
hlt
or
cmp
and
push
jmp
jg
std
sbb
mov
ss
aad
pop
jecxz
mov
dec
cmp
add
loope
lcall
pop
and
and
push
loop
icebp
or
add
adc
mov
mov
mov
push
xor
mov
push
jle
push
or
test
dec
jl
add
test
lea
sbb
push
movsl
test
jl
mov
jle
pushf
or
ret
arpl
lret
adc
sbb
mov
cmp
mov
das
dec
jp
loope
adcb
aad
ljmp
dec
xor
cmp
lods
lret
jle
dec
inc
xchg
dec
repz
xor
add
rcrb
cmp
sbb
repnz
lret
imul
arpl
fnstsw
call
cmp
iret
out
adc
call
js
lods
push
add
sti
pop
fisubrl
jl
pmaddwd
in
arpl
xchg
or
xchg
and
mov
pop
test
jae
dec
xor
clc
mov
aad
inc
push
dec
stos
loopne
add
sub
pusha
sub
call
pop
xchg
pop
pop
ss
dec
test
mov
and
in
cmpsb
pop
push
jne
jl
lahf
mov
inc
in
lock
ds
lcall
adc
lcall
xlat
pop
int3
add
pop
add
addl
das
clc
stc
and
aam
jne
ret
adc
sbb
in
in
in
mov
xchg
and
or
push
outsl
xchg
js
or
mov
push
push
into
jo
outsl
cmp
or
jb
push
cmp
adc
pop
adc
or
fildl
subl
dec
xchg
sbb
sbb
std
xchg
sbb
shrl
lock
or
lds
or
cmp
mov
cmc
iret
test
bound
in
cli
mov
stos
icebp
inc
testl
push
scas
or
jmp
xchg
fcomps
aaa
jns
xchg
adc
lods
add
sbb
sub
push
sbb
adcb
mov
cmpsb
dec
cmp
mov
ret
aad
imul
insl
sbb
push
mov
ret
or
imul
xchg
ficomps
cmpl
leave
pop
fidivrs
insb
les
fldt
xchg
adc
adc
xor
out
sub
xor
xchg
je
dec
jnp
fdivs
stos
xor
lods
add
fmulp
sbb
mov
daa
leave
out
loope
jb
mov
dec
les
clc
jp
and
xchg
clc
mov
mov
das
dec
dec
xchg
icebp
in
and
jne
adc
imul
push
lock
jecxz
mov
sbb
ret
jo
and
mov
mull
mov
jmp
jmp
addr16
push
sub
mov
loope
push
jp
cmp
scas
adcb
sahf
jle
nop
push
pop
jae
mov
sbb
pop
sahf
jo
cmp
mov
sbb
sub
mov
jmp
int
rolb
or
mov
lods
dec
jae
std
jno
loopne
cmp
adc
je
call
and
aam
sbb
sub
inc
adc
hlt
mov
mov
jbe
push
les
add
mov
mov
cmpsb
sti
call
and
xchg
push
mov
fs
cmpsl
movsb
inc
or
popf
fdivs
adc
orb
sub
or
shlb
daa
jmp
fmuls
int3
push
add
jl
mov
pusha
stc
das
test
es
repz
gs
pop
dec
adc
sbb
fstpt
push
insl
xor
iret
frstor
push
int3
fldenv
loop
or
mov
fwait
popf
sub
cwtl
sub
push
jb
add
test
loop
ljmp
aad
cli
outsl
mov
push
rorb
pop
lret
lea
or
stc
cld
jmp
dec
and
sbb
jbe
jmp
lret
pop
stos
aas
aad
sbb
and
mov
pop
ret
mov
ds
xor
cmp
aaa
fsubr
add
sub
xchg
jge
add
inc
sub
cli
push
cmp
fcmovnu
es
std
inc
push
dec
xor
pop
cltd
in
cmp
sarl
and
adcw
das
and
fwait
add
inc
loope
mov
dec
jmp
add
cmp
xchg
movsb
inc
scas
inc
clc
push
and
xor
push
fdivr
repnz
and
ds
pushf
xchg
fadds
mov
in
sti
inc
cmp
iret
jbe
and
mov
or
xchg
add
mov
nopl
inc
fsubs
adc
imull
lods
sbb
sub
testl
dec
dec
and
outsl
dec
inc
stos
sbb
clc
adc
aam
push
jmp
hlt
inc
mov
cld
lcall
cmp
or
push
jmp
xor
fstpt
cli
in
enter
nop
xor
stos
sbb
movsl
jae
dec
push
shll
sbb
rcrb
int
xchg
xor
adc
lea
notl
dec
mov
lahf
jecxz
sub
inc
dec
add
dec
loop
scas
je
pop
mov
xchg
cld
or
lock
jge
cmp
xchg
cmp
je
ljmp
xchg
add
mov
in
add
sub
lcall
sub
test
xchg
and
pop
cmp
mov
lods
loope
sbb
adc
adc
int3
gs
or
or
out
mov
por
xchg
lret
push
jmp
cmp
cmp
or
je
icebp
sub
mov
cmc
in
dec
scas
pop
icebp
jns
adc
pop
mov
outsl
mov
addr16
clc
push
mov
rep
push
std
pop
cmpsb
jecxz
lds
arpl
sub
popf
int3
lock
adc
sahf
push
jbe
push
loop
mov
lods
lods
lods
aam
cli
lcall
or
jnp
mov
jle
data16
sbb
sbb
shl
mov
fnstsw
aaa
push
bnd
pop
push
add
cld
inc
les
mov
fldlg2
sub
insl
push
add
cmc
insb
das
push
int
push
insb
icebp
cmp
das
arpl
dec
mov
xor
jnp
aas
adc
mov
jno
inc
inc
xor
faddl
sbb
sbb
dec
mov
shr
mov
sub
adc
add
sarb
pop
xor
mov
cmp
push
and
call
addr16
jbe
push
mov
mov
mov
mov
and
es
adcb
dec
arpl
jg
add
cmpsl
cld
shl
push
cmp
jne
mov
mov
cmp
jecxz
inc
fidivs
cmp
ret
jne
sub
sbb
or
push
daa
mov
sub
pop
and
mov
mov
stos
inc
scas
xlat
je
adc
xchg
out
loopne
dec
sub
inc
icebp
pusha
dec
orl
ret
sub
sar
pushf
pop
push
lahf
xchg
xchg
dec
jmp
xchg
notl
sti
mov
mov
test
inc
out
dec
and
adc
inc
lods
and
aam
mov
pusha
loop
push
or
sbb
fdivl
stc
lahf
xchg
or
adc
or
sub
cmp
inc
sbb
rorb
cmp
mov
pop
xchg
ja
push
mov
ds
xchg
jmp
xchg
add
add
sub
loop
aad
inc
int
pop
dec
lea
sub
jno
scas
dec
xlat
das
cli
outsb
or
xchg
into
xchg
push
movb
pushf
jne
int
addl
addr16
lahf
mov
push
jmp
imul
jb
and
leave
sub
mov
addl
in
aam
icebp
repnz
in
out
aam
push
js
lock
fisubrs
xlat
lea
xor
fisttpll
js
push
inc
adc
push
jmp
inc
outsb
inc
ficomps
or
sbb
test
and
mov
add
or
fsubrs
and
cld
cltd
push
pop
mulb
outsl
fs
imul
push
dec
and
xchg
pop
and
or
cmp
in
call
je
jle
cltd
sub
mov
sbb
adc
cmp
push
pop
push
aaa
push
push
ret
sbb
lock
cmp
xchg
in
fcomi
lods
cli
daa
mov
shll
or
mov
pop
loopne
cmpsl
movsb
jecxz
sbbl
dec
inc
fwait
insl
dec
dec
mov
ljmp
ja
mov
push
cmp
js
jnp
pop
lea
dec
inc
in
push
mov
or
mov
scas
enter
rcl
sbb
incl
dec
test
sbb
fptan
insb
test
cmp
stos
rorl
rol
push
jmp
lds
and
pop
mov
jmp
inc
add
push
lock
aas
xchg
xchg
jg
push
leave
and
push
fs
ljmp
sub
mov
jecxz
inc
mov
int
xchg
cmp
mov
fists
pop
les
inc
mov
in
insl
and
pushl
jmp
cs
push
xor
push
aas
xor
mov
stos
mov
mov
adc
addr16
cmpsb
lock
push
jg
mov
std
mov
xchg
xor
pop
add
popa
lret
mov
xchg
sbb
sub
gs
shll
mov
adc
mov
lock
sub
cmp
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
test
call
outsl
lahf
mov
cmpsb
aas
xchg
scas
xchg
jbe
callw
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
int3
push
push
out
xor
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
xchg
jb
cli
mov
mov
into
rol
lds
aad
or
push
pop
push
or
xchg
lret
mov
mov
mov
adc
push
cmp
sbb
inc
cmp
popa
add
dec
inc
jl
sub
mov
ret
sti
push
rcrl
and
or
add
dec
add
fwait
aad
sarb
iret
cmp
lcall
rorl
sub
xchg
popf
inc
ret
pop
lret
dec
xchg
push
cs
fsubrp
mov
test
xorl
cli
cmpsl
sub
stc
fcmovu
cli
call
sti
cmp
add
adc
mov
jne
lahf
xchg
mov
xchg
jne
mov
xchg
sbb
push
xchg
and
mov
sbb
add
loop
sar
loop
lcall
shr
cmp
push
push
pop
in
pop
outsb
lret
les
pop
sahf
jb
aas
adcl
jnp
push
lahf
cmp
add
popf
cmp
jmp
lds
sarl
fsubrs
jp
adc
cmp
push
test
mov
int
je
lods
test
push
or
xchg
or
push
fs
add
inc
mov
sub
cwtl
bound
je
arpl
adc
outsl
inc
dec
adc
adc
sarl
dec
add
push
sbb
inc
cmp
popa
ficoml
ljmp
icebp
stos
loope
adc
jp
push
sbb
inc
cmp
popa
ficoml
mov
mov
and
movsl
pop
cwtl
dec
mov
int3
cltd
fisttps
or
xor
xchg
pop
and
cwtl
push
lods
pop
sub
push
stos
hlt
mov
push
lret
test
repnz
repz
outsl
pop
xor
in
mov
push
imul
xor
pop
ljmp
and
jno
mov
add
xor
and
iret
test
loopne
and
stos
paddusw
jno
roll
mov
fistpll
pushf
aad
loope
icebp
dec
pop
add
div
mov
cmc
xchg
adc
jnp
mov
mov
sti
pushf
xchg
addr16
out
fcoms
mov
add
int3
and
inc
imul
mov
fisttpll
call
lock
push
in
inc
fs
stc
fstpt
mov
jl
xor
sub
mov
data16
testb
cmpsb
push
push
push
fnstenv
inc
xchg
mov
add
in
mov
lret
daa
or
xor
stc
mov
cmp
jmp
daa
jle
pop
cmpsb
cmp
in
pop
and
pop
jne
jge
scas
leave
push
adc
out
cmp
mov
mov
or
int3
loope
add
jne
pextrw
mov
mov
into
in
mov
mov
adc
add
aad
les
pop
inc
inc
aad
aam
add
clc
inc
stos
mov
adc
sbb
lods
mov
in
xchg
test
lods
fistpl
jle
pop
mov
lods
hlt
or
shlb
add
mov
jle
inc
outsb
insb
popa
es
and
sub
cwtl
loop
pop
cmpl
test
mov
stos
cmc
pop
xlat
aam
dec
repz
sbb
leave
jl
call
push
sarb
lcall
icebp
out
inc
out
or
sbb
cmc
fisubrs
jl
gs
divb
into
push
insl
or
cltd
dec
pop
inc
jecxz
mov
xor
jge
sarl
mov
or
add
stc
ja
and
mov
pop
incb
xorb
dec
gs
cmc
nop
fmull
mov
add
nop
pop
movsl
bound
add
cmpsl
sbb
sbb
pop
out
je
jp
hlt
repnz
mov
pop
jbe
jo
je
lahf
out
mov
inc
idivl
or
inc
mov
xor
cmpsl
mov
ljmp
inc
pop
xor
push
dec
notl
dec
testl
lock
push
add
xchg
or
sahf
cld
aam
and
aam
xor
lods
xlat
stos
and
sub
aas
xchg
iret
nop
xchg
stos
xchg
xchg
addl
jbe
push
popa
jno
and
shlb
dec
dec
out
adc
xor
insl
pushf
fdivl
fidivs
hlt
adc
movb
lret
cmp
jb
push
push
cli
in
mov
xchg
inc
sub
or
mov
insb
movsl
and
xchg
push
daa
add
shrb
xchg
dec
loop
cmp
cltd
inc
jo
int
mov
pop
out
sbb
scas
push
test
fiadds
jp
inc
cmpsl
add
clc
xchg
repz
adcb
imul
cmpsb
stos
jge
cmpsb
mov
push
lods
fcom
mov
loopne
ss
ljmp
inc
ficoms
push
cmp
jl
cmpsb
sub
adc
hlt
div
out
lock
push
gs
mov
das
gs
movsb
push
inc
pop
fwait
xor
sub
sbb
mov
idivb
pop
xchg
ret
ret
sbb
adc
mov
and
lret
push
mov
jge
sar
jge
repnz
testb
lcall
repnz
lods
and
push
jo
movsl
or
sub
testb
cli
sar
test
xorb
and
sub
fnstenv
mov
es
ja
neg
shll
xlat
mov
inc
pop
movd
jnp
int3
inc
jnp
pusha
and
repnz
mov
ljmp
xchg
in
into
sbb
aad
pop
cmc
cmp
cs
push
das
fxam
leave
adc
bound
push
and
dec
icebp
sti
push
sbb
xor
mov
mov
pop
ss
gs
sti
sub
mov
push
mov
jg
sub
inc
push
inc
adc
inc
cld
mov
pop
ret
sahf
cmpsb
lahf
push
jp
cmpsl
cmp
and
popf
push
add
aaa
sub
out
shll
cmpsb
mov
gs
mov
add
fiadds
fcoms
insb
or
push
insl
lret
sahf
nop
pop
mov
in
inc
or
pop
loopne
and
add
out
inc
mov
lcall
movsl
loop
xor
xor
fbld
push
cwtl
jns
pop
mov
mov
pop
lret
or
stc
jne
xchg
pop
xor
add
aam
aaa
cmpsl
mov
mov
pushl
pop
mov
add
xchg
in
test
sub
or
mov
adc
push
call
dec
loop
ds
mov
jg
sbb
inc
and
xor
and
jle
and
stos
in
aas
repnz
dec
or
fdivr
jmp
rolb
and
test
lds
fcmovnbe
hlt
xor
sub
test
je
xchg
addr16
ficompl
cmp
push
mov
ds
inc
inc
sub
loopne
push
push
bound
xchg
mov
and
dec
repz
inc
sub
mov
hlt
rcll
adcb
add
ljmp
mov
fmull
imul
test
mov
add
mov
inc
xchg
test
imul
lock
ficompl
inc
cmp
fsubl
mov
inc
pop
adc
js
jmp
sbb
push
mov
out
mov
push
fwait
adcl
dec
ret
aad
incl
push
pop
pop
stos
add
in
test
adc
fldl
jecxz
push
iret
imulb
push
test
out
out
inc
cmp
les
pop
or
ficompl
dec
pop
cmp
ret
ljmp
ljmp
aas
push
insb
xchg
cmp
mov
push
adc
dec
xchg
es
jecxz
fs
inc
les
mov
out
xchg
call
dec
nop
stos
lret
js
aas
addr16
cmp
mov
sub
mov
inc
pop
enter
cli
into
les
mov
mov
xchg
mov
jp
inc
inc
sub
mov
dec
cmpsl
sbb
cmp
and
outsl
scas
add
sub
enter
add
fs
fs
jp
push
outsb
or
lods
aaa
push
nop
xchg
ret
and
cmp
xor
aam
leave
outsl
lods
dec
mov
pushf
out
cmp
dec
mov
and
xor
inc
rolb
lret
ror
xchg
dec
sbb
mov
les
dec
lods
add
stos
lret
out
pusha
xchg
movsb
std
mov
sub
loope
inc
inc
addb
cld
mov
xchg
das
jmp
inc
out
shlb
cmp
jbe
nop
dec
aam
mov
push
hlt
and
push
lretw
gs
mov
ret
dec
daa
repnz
sub
cmpsb
sahf
pop
js
push
test
fs
lret
popf
stos
push
fsubs
mov
inc
mov
dec
xor
int3
rcrb
ret
mov
test
or
dec
jbe
bswap
popl
lret
loopne
xor
push
cmp
leave
in
out
jmp
out
testw
mov
stc
mov
outsb
push
sub
or
outsl
inc
loope
cmp
aam
dec
xchg
into
insl
idivb
aad
cld
xlat
nop
and
out
add
and
jne
and
jecxz
lcall
and
sbb
xchg
movsl
mov
jbe
in
push
xor
cmpsl
pop
ret
mov
addb
sbb
mov
les
lret
divl
aad
aaa
lcall
out
jns
fildll
push
gs
scas
dec
loope
fwait
inc
dec
frstpm(287
mov
lods
inc
insb
sub
xor
add
push
adcb
jnp
jp
in
inc
inc
sub
dec
push
cmp
inc
jg
pop
dec
enter
mov
and
sti
xchg
faddl
and
mov
xchg
adc
aam
dec
pop
icebp
ds
orb
repz
and
test
lret
subb
test
movsl
sub
mov
enter
aas
sbb
dec
dec
push
movsb
ret
je
xchg
add
cmp
call
mov
xchg
jno
adcl
pushf
lods
xchg
xor
rorl
mov
or
add
pop
add
xchg
cli
sti
sub
xchg
jnp
xorl
rcrl
sbb
jmp
xor
mov
dec
push
jo
out
dec
cmpb
not
popa
lea
aam
pop
dec
test
push
rolb
mov
push
test
out
sbbl
mov
mov
xchg
jne
ds
push
push
cmpsb
push
inc
test
fs
out
push
mov
fsub
mov
aam
mov
or
sub
lock
ja
mov
cmp
xchg
cmp
mov
fisubs
nop
sub
fdivl
aad
clc
stos
adc
jno
loopne
fs
or
push
aad
outsl
add
inc
or
mov
setns
xchg
dec
sbb
xchg
popf
pop
push
aad
push
imul
sbb
push
cmc
jne
xlat
lahf
xchg
mov
imulb
push
adc
movsb
push
cmpb
or
xor
into
jecxz
call
lods
cltd
arpl
pop
out
or
jecxz
test
lods
jo
cmp
pushf
inc
insl
adc
popf
sbb
fists
sub
mov
roll
fistps
or
adc
outsl
inc
fs
iret
push
add
call
lcall
pop
lcall
dec
lahf
lds
lods
mov
mov
movsb
js
add
loopne
xchg
nop
dec
xchg
and
mov
movlps
out
push
clc
push
adc
mov
hlt
pop
test
daa
adc
jae
jle
repnz
lods
enter
fcmovu
daa
jbe
adc
fistpll
sbb
sbb
ljmp
clc
mov
aas
adc
jno
lahf
cld
hlt
fidivrl
adc
stc
sbb
dec
orb
fsubrs
lahf
add
adc
call
or
insl
fs
or
inc
sub
fmull
loopne
scas
mov
movsl
stos
sbb
pop
mov
iret
insb
adc
jp
jbe
addb
sbb
outsl
loop
les
stos
jge
add
inc
or
int
andb
lahf
mov
inc
lcall
rcll
js
sbb
jle
sub
push
repnz
or
sbb
xchg
push
mov
mov
ja
sbb
jmp
mov
xor
fisubrl
cmpsl
aaa
stos
fbld
aam
in
cmp
dec
inc
cli
add
sbb
sub
jmp
pop
jae
test
mov
cmp
and
fs
sub
cmp
mov
icebp
xchg
adc
int3
mov
push
mov
cmc
fldenv
push
push
nop
mov
sub
mov
mov
aad
fildll
sbb
and
fldt
xchg
jg
cmc
mov
push
fadds
inc
leave
popa
pop
ror
push
push
mov
ror
jl
call
mov
xlat
mov
jnp
in
mov
stos
xchg
das
push
mov
push
mov
pusha
test
fwait
pop
sarl
loopne
out
mov
lods
add
or
adc
popa
lods
pushw
cltd
add
mov
fs
jb
sbb
sbb
jle
call
adc
mov
xor
push
std
cmp
dec
xchg
xor
cld
mov
call
ja
fnstsw
xor
cltd
movswl
xchg
mov
pop
lods
or
mov
fcmovne
roll
push
jecxz
adc
mov
lcall
js
jo
into
call
mov
nop
adc
scas
xchg
adc
push
aam
cltd
sbb
and
aaa
inc
shr
pushf
das
dec
adc
add
sbb
pushf
subl
lods
call
leave
pop
fs
mov
or
sti
rclb
cmp
out
je
in
and
clc
cltd
repz
shll
es
push
or
lea
mov
lea
and
loopne
sti
lret
adc
inc
jbe
lods
and
or
enter
xchg
pop
adc
push
clc
test
jl
fisubs
xor
adc
cmpsl
pop
pop
pop
adc
xchg
aas
and
sub
pop
lock
adc
xchg
or
das
pop
jnp
or
in
in
mov
fildll
mov
push
sbb
mov
dec
sbb
inc
xor
sahf
popa
jg
bound
loope
inc
add
pop
push
jbe
mov
and
out
sub
lea
cmp
xlat
lods
adc
imul
or
add
mov
sub
test
pop
pop
cmp
ljmp
insb
fists
mov
mov
jno
aam
ljmp
cmpsl
outsl
orb
mov
scas
mov
shr
sar
repz
and
sbb
or
jp
cs
mov
xchg
cmp
popf
push
push
xchg
xlat
xchg
add
mov
inc
push
or
hlt
sarl
mov
movsl
int
call
jl
jns
scas
inc
cwtl
sbb
inc
inc
jno
clc
inc
jne
dec
loope
jns
push
and
jae
sbb
mov
cmc
xor
addr16
hlt
into
in
push
pop
in
dec
add
test
mov
shll
or
xchg
and
push
mov
sbb
inc
add
pop
cmp
jns
adc
out
push
lcall
stos
fadd
cmp
rcll
int
popf
cmpsl
aas
daa
testb
shl
arpl
mov
jne
test
scas
fldl
push
xor
test
mov
jns
in
aaa
mov
aas
push
dec
adc
scas
pop
stos
jo
push
sti
mov
mov
cs
adc
addl
iret
sub
or
imul
mov
jae
mov
icebp
outsb
sbb
jbe
les
and
mov
pop
mov
clc
dec
ja
clc
aad
push
sbb
mov
push
xchg
shl
les
or
jnp
sub
arpl
push
lret
movsl
testl
stc
jg
clc
jecxz
mov
inc
jae
hlt
sub
int3
mov
pop
mov
call
and
sub
scas
xchg
pushf
mov
jns
rorl
mov
rorb
mov
jo
cmpsb
movsl
cli
add
push
cmp
lret
aaa
sbb
adc
mov
popf
shlb
idivl
js
mov
and
cmpl
sbb
jge
or
enter
lock
repnz
fisubs
mov
fistpl
pusha
push
and
sub
aaa
mov
or
sbb
sub
push
scas
mov
jns
call
jmp
ja
lods
arpl
test
ja
sub
leave
inc
imul
fadd
cmp
pop
js
jo
xor
int3
sbb
push
test
mov
ja
xor
scas
adcl
movb
push
sub
mov
dec
jnp
mov
xchg
push
insl
mov
ss
enter
movsb
xchg
int
xchg
pop
in
in
mov
mov
ja
das
stos
test
mov
mov
pop
scas
lods
adc
in
test
cmp
decl
fstpl
jne
ja
pop
arpl
sbb
or
jnp
sub
sbb
or
push
cld
jb
inc
test
mov
movl
mov
sti
xlat
push
mov
jmp
add
jb
mov
pop
arpl
pushf
push
daa
sbb
into
neg
pop
pop
icebp
xchg
push
call
loope
inc
mov
lcall
sti
ljmp
xchg
icebp
cli
push
add
mov
test
arpl
or
push
cmpsb
lahf
mov
jmp
pop
inc
gs
xchg
cmp
mov
ficoms
into
stos
jecxz
jg
gs
pop
les
fwait
mov
sub
cltd
xchg
repz
das
add
and
xor
mov
insb
or
sbb
mov
cmp
lahf
adc
add
shll
imul
xchg
hlt
xchg
mov
arpl
scas
mov
xchg
jp
sub
cmp
leave
icebp
je
mov
jl
xchg
pusha
cmp
pop
gs
mov
pop
fidivl
xor
mov
jecxz
lahf
inc
popf
dec
jno
mov
test
out
mov
shrb
add
or
leave
dec
lods
inc
push
and
arpl
int
or
lock
mov
mov
int
mov
sbb
movsb
ds
mov
stos
sahf
pop
nop
test
or
mov
sub
cmp
mov
add
push
fists
setb
dec
imull
aaa
push
xor
sub
leave
cmpsb
inc
test
cmp
pop
sti
ficompl
mov
jge
mov
jecxz
jecxz
xchg
add
push
sub
pop
adc
sub
mov
je
imul
ficoml
insb
std
shll
mov
or
sub
pushf
test
and
stc
add
sbb
push
pop
icebp
mov
lods
mov
mov
imul
cmpsl
or
mov
pop
sub
or
inc
dec
sub
sbb
inc
mov
sbb
shr
loop
inc
test
xchg
adc
dec
jno
push
out
push
dec
inc
sbb
sbb
mov
add
popa
jne
jmp
and
mov
add
mov
daa
inc
adcl
addr16
dec
sub
hlt
sahf
mov
out
add
inc
fldcw
cmpsl
inc
out
in
addr16
pop
mov
in
inc
int3
lahf
loopne
scas
or
dec
push
out
cwtl
iret
adc
cmp
fld
lods
je
mov
mov
sub
shr
or
cld
or
inc
adcb
and
les
ja
data16
xchg
loope
or
mov
jge
dec
xchg
sbb
pusha
push
mov
dec
arpl
dec
outsl
outsl
stc
jbe
sbb
aad
or
dec
or
jmp
shl
or
add
jns
pop
pop
scas
push
int3
xchg
and
insl
les
mov
push
jle
sub
push
push
jns
xor
js
int
or
std
cmp
call
cmpsl
xlat
repz
in
adc
daa
nop
xchg
mov
loope
cmp
pop
data16
xchg
js
pop
mov
in
outsl
push
adc
in
aam
push
pop
lods
lock
ljmp
sub
fucomp
and
mov
movsl
sub
cmp
xchg
dec
ret
je
lret
mov
rcll
outsb
mov
xchg
adc
arpl
add
sbb
or
sbb
fisubrl
mov
mov
jge
xchg
and
inc
lods
stos
add
out
int3
fisttpl
inc
push
dec
mov
dec
jge
fs
lcall
mov
sbb
movsl
imul
adc
dec
push
push
pop
pop
repz
cmpsb
xchg
jns
inc
jb
shrb
aaa
in
stos
xchg
xchg
sbb
fisubrl
imul
insb
das
push
adc
dec
adc
xor
or
inc
popa
mov
jl,pn
inc
je
hlt
push
inc
cld
fisubl
push
enter
ds
sbb
jb
out
push
mov
and
stos
jle
test
adc
sbb
out
add
ficomps
jno
pop
mov
sete
ret
iret
mov
inc
dec
add
data16
push
popa
sbb
aaa
je
sahf
mov
mov
xor
js
les
es
mov
pop
ljmp
cmp
scas
add
push
fildl
dec
mov
sub
sub
jmp
mov
lea
push
inc
jecxz
int3
sbb
xor
dec
mov
mov
inc
out
hlt
les
pop
add
push
add
imul
jg
sbb
pop
cmpsb
mov
adc
es
dec
add
inc
mov
cltd
sbb
xchg
mov
lcall
popa
push
fiadds
cmpsl
pushf
addl
rorl
loope
adc
jp
push
sbb
inc
cmp
popa
ficoml
ljmp
icebp
stos
loope
adc
jp
push
sbb
inc
cmp
popa
ficoml
ljmp
cmc
stos
loope
adc
jae
outsb
sub
push
adc
js
test
jne
gs
ret
rcrl
and
mov
shlb
push
insl
sub
sbb
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
decl
in
sbb
sub
cmp
mov
xchg
pop
stos
dec
mov
sbb
sbb
cwtl
or
sbb
dec
lods
pop
pushf
imul
stos
dec
mov
sbb
or
inc
or
sbb
adc
mov
imul
into
sub
push
lea
dec
mov
xchg
inc
mov
pop
mov
push
pop
addr16
shl
inc
sub
sbb
aas
adc
adc
pop
inc
dec
mov
pop
sub
adc
add
mov
mov
ret
sbb
rep
add
test
cld
jne
in
xchg
xchg
mov
mov
dec
lods
dec
inc
sub
imul
and
and
dec
lods
pop
arpl
fwait
jge
insb
fsubrs
ds
fldt
sbb
lret
loope
cld
aam
ss
shlb
cmp
jnp
je
mov
mov
in
add
add
or
inc
add
shlb
mov
lahf
aad
mov
mov
cmpsl
or
cmp
aam
pushf
imul
mov
stos
jl
je
fldt
jmp
mov
test
mov
rorl
das
call
sti
aas
cmpb
sub
dec
mov
imul
aad
leave
push
imul
jmp
inc
scas
inc
dec
jne
dec
scas
nop
dec
orb
lahf
inc
out
jns
pop
pushf
imul
stos
dec
mov
sbb
or
cld
or
sbb
sub
cmp
mov
mov
stos
dec
mov
sbb
or
cld
or
push
inc
or
jae
rcll
and
hlt
fs
sub
or
sub
lock
movsl
ret
push
lods
add
mov
or
pop
mov
test
jns
dec
pop
test
imul
lds
repnz
mov
mov
fcmovnbe
add
stos
shr
and
jmp
push
stc
mov
imul
fmuls
in
subl
push
test
and
imul
hlt
fidivrs
mov
gs
jb
scas
out
add
xchg
out
imul
pop
loopne
aam
rorl
dec
push
push
insl
push
cmpsl
fs
add
divb
fs
dec
popa
ret
jle
bound
popf
jno
push
cld
dec
adc
xchg
sub
xchg
add
pop
aam
lret
cmc
mov
ficompl
ret
cli
push
xor
daa
int
pminsw
insl
scas
adc
mov
push
testb
mov
das
sbb
sbb
add
fs
add
into
dec
mov
scas
dec
les
lock
dec
pop
lahf
fcmovnu
pushf
test
push
and
iret
adc
test
nop
mov
in
xor
xor
test
and
dec
outsl
dec
loopne
mov
adc
mov
jg
dec
cwtl
int3
lock
mov
add
mov
repnz
bound
pop
nop
push
xorb
sub
cmp
imul
mov
syscall
aaa
mov
out
add
jnp
es
imul
daa
jae
inc
out
xor
mov
mov
sbb
pop
or
cmpsb
clc
imul
pop
pop
inc
mov
scas
adc
in
scas
sbb
pop
pop
push
pusha
mov
lea
xchg
into
sarl
sbb
mov
movsbl
inc
cltd
sbb
bound
mov
dec
mov
jb
clc
rclb
inc
repnz
xor
xchg
addr16
pusha
pop
mov
jmp
mov
dec
bound
mov
sub
data16
cmp
adc
mov
rorb
imul
ljmp
pop
pop
popf
xchg
insl
mov
adc
pushf
push
xor
inc
jge
xchg
and
ds
aam
push
jnp
jecxz
loopne
sahf
and
xchg
mov
enter
dec
mov
inc
add
shll
push
and
pop
out
scas
ds
jp
mov
pushl
inc
jmp
push
push
sub
repnz
cmp
add
mov
mov
xchg
inc
into
dec
jmp
mov
push
outsb
inc
cmp
bound
leave
pop
cltd
cs
lahf
mov
sbb
cld
pop
jmp
mov
fs
lock
movsl
stos
push
inc
cmpsb
nopl
in
add
dec
sbb
inc
bound
or
fs
lret
jp
sti
push
add
pusha
aaa
std
ds
mov
mov
fnstenv
mov
fs
fistpl
mov
lret
and
icebp
cmpsb
mov
int3
inc
in
fdiv
push
mov
cmp
fisttps
scas
sbb
sub
idivl
add
sbb
adc
mov
pushf
in
hlt
mov
jbe
mov
cmp
shrb
cmpsb
hlt
push
sub
push
clc
mov
loopne
dec
mov
mov
push
jbe
mov
jg
add
sbb
inc
sbb
das
xchg
int
sbb
sbb
neg
dec
cmc
cs
movsl
pop
push
push
dec
lods
jle
and
push
in
cltd
pop
cmpb
sub
imul
push
je
xchg
nop
adc
out
mov
jae
nop
cs
stos
lods
pop
ficomps
sub
mov
popa
add
mov
lods
sbb
sarb
imulb
cmp
out
add
xlat
sbbb
cmp
mov
xchg
stos
cmp
jge
enter
lods
test
push
sub
pop
lods
pusha
mov
mov
in
add
xchg
cltd
repnz
mov
sbb
std
pop
imul
loope
xor
dec
lds
mov
aad
and
mov
mov
stc
xchg
testb
add
ljmp
jb
mov
pushf
jmp
jg
sahf
push
fbstp
lods
addr16
cld
stos
arpl
stos
in
cmpl
xor
je
xchg
scas
cmp
leave
stc
shll
add
mov
hlt
push
insl
movsl
cmp
rolb
fcmovu
cmpsb
loop
inc
xorb
dec
addr16
xor
test
cwtl
inc
xchg
popl
inc
out
push
add
test
cwtl
dec
push
jne
sbb
sbb
test
dec
dec
dec
shl
cli
fdivrs
mov
fistpll
xchg
enter
jns
jbe
pop
fsubrp
xor
addr16
xchg
test
inc
inc
enter
inc
xchg
pop
repnz
pop
fdivrs
in
xor
mov
sub
pusha
into
imul
fstps
dec
fucomp
or
in
test
dec
mov
mov
cltd
mov
in
mov
push
outsb
test
mov
cmp
cmp
and
out
psrlq
add
lcall
jmp
les
inc
mov
jbe
aas
loopne
inc
scas
xor
cmp
mov
fldcw
aad
std
iret
imul
jecxz
insb
sub
xor
jg
add
cmp
mov
aaa
sbb
mov
jbe
inc
sbbb
cmp
adc
out
movsb
sub
cli
pop
les
pop
mul
and
lock
ret
insb
xchg
idivb
int
cmp
fs
xchg
pop
xchg
js
inc
dec
cmpb
orl
hlt
in
dec
mov
mov
leave
pop
mov
hlt
mov
out
cmpsb
scas
fld
in
jmp
xlat
push
lods
sti
inc
arpl
and
ljmp
cmpsb
outsb
fnsave
insb
inc
pushf
lahf
sbb
mov
pop
jmp
or
imulb
and
imul
push
movsl
int3
inc
push
stos
aas
insl
cltd
add
std
ja
push
cltd
or
mov
xor
sti
aam
fstpt
xchg
in
sub
and
jne
adc
pop
lcall
cld
or
aaa
shl
pop
push
and
test
cltd
ret
sti
shlb
outsb
test
mov
dec
push
ja
das
fwait
push
adc
in
jmp
repnz
loopne
mov
rcr
jmp
jns
out
mov
push
mov
sub
xchg
ja
cli
push
cs
pop
je
or
inc
lea
mov
jnp
stos
daa
push
lods
test
loop
ret
std
sarl
mov
push
pop
push
ljmp
test
jb
xchg
mov
aaa
in
roll
pop
xchg
xchg
adc
pushf
mov
scas
aad
decl
xchg
jmp
out
sbb
ljmp
lock
cmp
sahf
test
mov
das
xchg
sarb
cmpsb
fnsave
sbb
ds
pop
xchg
mov
push
mov
das
stos
or
push
mov
and
and
mov
orb
lret
add
jl
mov
xchg
ljmp
outsl
stos
out
repnz
push
dec
xor
into
mov
xor
in
out
fs
mov
pop
rep
loopne
fsubs
popa
pop
xchg
sub
add
push
mov
int3
inc
dec
mov
mov
fildll
xorb
insl
xlat
nop
add
leave
stc
xchg
sbb
mov
sbb
lcall
stc
cs
and
loopne
lock
iret
popa
push
aad
push
rcll
lds
xchg
cmp
ds
cmp
andb
mov
les
mov
mov
and
mov
inc
jb
cli
aas
lds
mov
jp
mov
mov
repnz
enter
cs
out
call
push
and
arpl
pop
nop
sahf
jmp
jmp
lret
clc
mov
insb
loopne
aaa
xor
out
cmp
ret
mov
aad
sbb
cs
cmp
je
jne
jno
daa
xchg
cmp
outsb
mov
mov
xchg
leave
call
add
daa
jo
pop
setle
or
or
shrl
and
fcoms
cmp
sub
pop
inc
shrl
sbb
pop
mov
pop
sti
in
aam
mov
cltd
cmp
pop
jb
sub
fwait
ret
data16
insb
lock
mov
mov
int3
mov
mov
jb
bound
test
lods
cmc
hlt
mov
sub
mov
cmp
cmp
stos
dec
push
mov
dec
adc
cli
pop
test
mov
cld
fwait
movsb
mov
mov
imul
pop
aas
pusha
xchg
pop
xor
mov
subl
mov
ficoml
cmp
outsl
jne
mov
mov
je
sub
lret
jg
mov
or
push
enter
mov
addw
into
fsubrp
int3
ja
sub
mov
pop
xchg
pop
nop
int
lret
xor
dec
lea
mov
push
fwait
mov
mov
dec
pop
dec
jl
push
lods
and
xchg
ret
and
aad
mov
dec
cmpsb
mov
loop
xchg
mov
shl
adc
in
into
mov
daa
jp
les
mov
movsl
xchg
out
add
into
mov
dec
or
les
in
stos
pushf
rcrb
mov
dec
inc
lock
fidivs
sbb
add
jg
jge
fdivp
sti
inc
mov
jno
insl
in
cs
xor
xchg
int3
clc
popf
dec
xor
mov
ds
cmp
clc
int3
sti
sub
xchg
adc
in
lock
enter
mov
xchg
and
xchg
shl
xlat
out
ret
ret
enter
inc
pop
std
sahf
sub
push
arpl
andb
or
xchg
and
inc
flds
and
daa
jmp
sti
sbb
push
dec
inc
ljmp
fdivs
aaa
mov
adc
iret
pop
icebp
shrd
outsb
aad
loope
shll
imul
sbb
and
xor
call
mov
add
or
outsl
out
rorl
mov
mov
mov
push
sub
les
popf
xchg
push
ds
rorb
in
push
pop
arpl
js,pt
inc
push
lahf
inc
cmp
mov
sar
cmp
jle
loope
xchg
popa
hlt
mov
insb
sub
mov
aas
sbb
jle
fsubrs
jne
push
cmp
xchg
iret
ljmp
sbb
pop
or
jb
sbb
mov
imul
dec
lret
sbb
sbb
test
imul
jg
sbb
mov
sub
clc
out
mov
cmpsb
lds
add
cmp
lods
and
dec
or
int3
popl
cmp
inc
cs
add
movsb
insb
lods
pop
movsb
bound
andb
in
cltd
xchg
insb
sbb
orb
les
mov
aas
and
cmp
test
add
dec
addr16
lahf
pusha
dec
add
add
xor
and
sub
ds
lahf
insl
out
je
jecxz
adc
sbb
xchg
and
jp
pop
sub
inc
int
cmp
pushf
add
fs
push
sbb
fisttpll
lods
out
loopne
fdivrp
lahf
mov
in
or
pusha
xor
sub
add
push
mov
adc
sbb
cli
xchg
int
pop
or
test
push
jmp
loope
aad
out
fdivrs
std
pop
jge
mov
ds
mov
ficoms
or
gs
and
pushf
pop
cmp
mov
mov
dec
pop
into
xchg
test
push
sbb
mov
daa
jg
mov
pushf
iret
lods
bound
cmp
cmp
movsl
and
pop
xchg
or
cmp
les
lfs
daa
stc
sbb
cmp
mov
lds
das
nop
fdiv
cmp
out
inc
gs
iret
add
imul
mov
mov
popa
cli
pandn
lcall
ret
mov
lcall
xlat
jb,pt
enter
jge
xchg
mov
icebp
or
cmp
cmp
daa
sti
sbb
insl
jae
cltd
xchg
lods
clc
push
cmpsl
ja
adc
or
in
fcompl
in
xor
ja
fcomp
mov
xor
and
xor
pop
cmp
and
pop
stos
popf
mov
gs
aas
adc
inc
aas
mov
xor
mov
imul
shrb
leave
push
insl
dec
or
fsubs
ja
mov
iret
leave
jbe
movsl
and
outsl
stos
cmpsb
push
xchg
or
mov
push
mov
jmp
push
hlt
mov
dec
mov
or
cmpsb
std
ficoms
push
arpl
popa
dec
push
mov
ret
aas
dec
lea
ficoml
sub
or
xchg
sti
push
icebp
cwtl
scas
hlt
mov
rcrl
mov
orb
pop
int
mov
xchg
insl
xchg
sar
dec
ja
and
xor
mov
dec
dec
xor
jae
les
adc
iret
cmp
imul
and
mov
sti
lock
test
push
sbb
dec
movsb
or
clc
out
mov
jb
arpl
or
cmp
sbb
cmp
jecxz
das
push
or
add
inc
xorb
push
jne
inc
insb
mov
hlt
mov
mov
dec
add
add
and
lret
arpl
daa
mov
pop
outsb
and
addr16
add
jne
outsl
jecxz
jmp
nop
dec
xchg
push
sub
cld
push
xchg
scas
ret
loopne
and
xchg
inc
js
movsl
out
insb
les
cmpsl
rcl
ljmp
pop
cmpsl
enter
hlt
adc
sbb
dec
cltd
loop
sbb
test
inc
test
adc
push
inc
mov
test
vpsadbw
pushf
popl
mov
sbb
and
dec
pop
sar
mov
lea
add
icebp
xorb
subb
push
out
jge
popw
and
rcrb
fsubl
xchg
xchg
scas
aaa
cld
push
out
out
fstl
mov
mov
jae
inc
pop
outsb
insl
repnz
jle
mov
mov
es
jmp
test
mov
dec
mov
mov
or
jbe
xor
out
or
mov
pusha
in
or
push
pop
jp
jl
mov
cmpsb
pop
dec
inc
js
add
xor
xchg
clc
and
arpl
popf
xchg
pusha
bound
movsl
stos
inc
ret
in
jp
shl
jo
jae
jg
xchg
rorl
aam
mov
xlat
push
mov
sti
dec
add
adc
push
outsl
iret
movl
nopl
pop
mov
aas
aaa
popf
cltd
xchg
aad
xchg
call
iret
shll
push
cltd
loope
ds
mov
gs
xlat
pop
dec
sbb
sub
xchg
pop
pop
sbb
fsubl
inc
jl
imul
inc
jae
sub
rep
jns
ret
daa
int3
pop
dec
adc
pop
stos
lahf
imul
cmc
inc
sti
lock
xchg
or
rorb
or
mov
jb
dec
ljmp
push
inc
inc
push
cmpsl
std
js
call
dec
cmp
addr16
in
mov
std
movsb
popf
adc
push
and
jb
pop
mov
adc
jo
ret
pop
imul
cmp
and
fstpt
xchg
sbb
sub
mov
das
inc
mov
cli
orb
jge
mov
iret
popa
popf
stc
push
scas
cmp
inc
gs
inc
rorl
pop
sbb
in
repnz
jo
jge
enter
sti
aas
stos
outsb
ret
es
aad
fisubrl
jne
sub
pop
push
jnp
sub
fcompl
dec
das
push
fcompl
inc
loope
int3
fiadds
pusha
stc
sub
lock
push
das
mov
xchg
dec
adc
outsb
pop
mov
stos
or
mov
xor
movsl
mov
shlb
ds
inc
mov
test
cmp
lret
mov
pop
mov
enter
mov
rcll
xlat
cltd
int3
inc
pop
sbb
gs
fmulp
mov
insl
test
out
outsb
cld
xor
ret
popa
orl
inc
mov
hlt
sbb
subl
cmp
push
inc
sub
andb
mov
xchg
fisubs
adcb
push
popfw
rol
std
push
mov
and
push
sub
in
in
xchg
into
pop
push
aas
out
les
leave
pop
sahf
fs
push
lods
pusha
mov
jg
ljmp
push
cmp
dec
outsl
jmp
adc
out
adc
xchg
aam
add
enter
push
and
inc
mov
fs
mov
pop
xor
nop
jo
lret
xchg
dec
pushf
das
dec
cli
iret
rcll
fcom
inc
out
mov
hlt
je
or
mov
pop
mov
mov
and
andl
shl
jne
dec
sbb
and
cwtl
or
dec
cmp
test
mov
adc
mov
daa
in
and
jge
cmc
out
cs
mov
outsl
loop
jnp
add
sbb
in
or
cmp
xor
shlb
add
ret
xor
es
mov
sarl
aas
repnz
and
mov
nop
xchg
adc
dec
ret
sbb
adcb
daa
mov
sbb
mov
mov
clc
pop
jae
cltd
enter
or
lods
push
lods
fucomip
in
adc
mov
testb
mov
shl
push
inc
inc
rcl
mov
push
pusha
jae
arpl
and
xchg
dec
lcall
jo
lods
adc
xchg
jmp
jo
cld
sbbb
imul
and
icebp
lock
adc
mov
or
faddp
mov
dec
notb
mov
and
dec
cmp
jle
fcomps
movsl
pop
nop
outsl
mov
leave
lret
mov
inc
rcll
imull
aaa
mov
pop
dec
ret
lods
fnstenv
lods
sub
rcrl
sbb
enter
jmp
push
mov
fs
iret
in
sub
sub
sub
insl
push
call
mov
push
sbb
loope
mov
sub
mov
sub
cli
dec
mov
loop
fstpt
outsb
or
lahf
orl
mov
and
dec
sti
cmp
repnz
push
adc
push
cmpsl
cmp
lret
in
lcall
sbb
call
sub
push
nop
leave
sub
mov
add
xlat
jns
jns
lretw
fs
cs
sbb
push
sub
mov
pop
filds
mov
jb
sub
loop
fwait
pop
jno
ss
je
push
jbe
imul
lods
push
int3
cs
jp
sti
jge
js
push
fnstenv
pop
clc
imul
je
in
mov
or
mov
cmp
popf
popa
test
lahf
frstor
mov
shll
mov
mov
dec
loope
outsl
or
repnz
loopne
test
lock
jle
mov
les
add
int3
inc
mov
add
mov
adc
mov
and
inc
lret
jae
jl
mov
or
pop
outsl
inc
ss
clc
sbb
jnp
lret
lock
mov
out
dec
xchg
rcrb
faddl
adc
sbb
jo
xor
sahf
push
jg
xchg
inc
mov
es
cmc
nop
sarl
dec
daa
sahf
mov
stc
adc
call
repnz
in
sbb
mov
fwait
rcrl
cvttps2pi
rcr
dec
mov
enter
mov
das
shr
sub
pop
ror
jb
ret
jmp
aam
mov
aaa
addl
scas
jo
pop
test
jp
cli
ficompl
push
adc
and
pop
push
cltd
lcall
mov
fsubr
insb
inc
pop
xchg
repz
sbb
subb
sti
jl
inc
pop
mov
std
mov
jmp
adc
cmp
lret
jp
push
pop
mov
int
xchg
rorb
movl
xchg
xor
inc
fmull
cmp
fxtract
sbb
mov
in
mov
sub
cwtl
xchg
mov
stos
xchg
cmp
and
push
inc
in
adc
fidivrl
sbb
dec
lods
pop
pushf
imul
stos
dec
mov
sbb
or
cld
or
sbb
sub
cmp
mov
mov
stos
dec
mov
sbb
or
cld
or
sbb
lods
pop
pushf
imul
insb
fwait
lods
stos
dec
mov
sbb
in
call
sub
cmp
or
jl
xchg
xor
stos
dec
int3
dec
inc
movsb
and
adc
add
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xor
in
aad
lds
mov
test
dec
inc
sbb
sub
leave
aad
lds
xchg
test
add
sbb
sub
loope
icebp
lds
xchg
mov
gs
jo
dec
dec
addr16
add
mov
xchg
dec
push
andl
repnz
scas
xor
inc
gs
mov
cmp
jbe
dec
xchg
pusha
lds
push
fs
leave
aad
movsb
push
push
lods
leave
divl
cmp
imul
xchg
mov
xchg
ljmp
sbb
lds
test
or
xor
fidivrl
rorb
push
popf
cmp
mov
mov
cmpb
insb
stos
imul
cmp
sbb
rolb
pop
loopne
cmpsb
add
inc
fldenv
sbb
flds
sub
cmc
leave
in
aad
lds
xchg
mov
inc
jne
gs
push
jo
add
xor
lods
in
mov
in
mov
adc
or
insl
push
pop
pop
dec
inc
fprem1
leave
out
aad
mov
std
out
aad
in
test
dec
adc
sbb
jl
jp
dec
jo
push
mov
sti
mov
mov
mov
pop
jne
gs
imul
adc
leave
in
aad
lds
xchg
test
gs
imul
adc
or
jns
push
cmp
or
xchg
push
xchg
popf
and
loopne
add
je
mov
add
mov
bound
inc
mov
inc
int3
sbb
cmpsb
xor
imul
mov
ret
mov
xchg
nop
in
outsl
dec
xor
xor
dec
mov
push
loopne
cmpl
or
mov
inc
or
out
add
outsl
inc
push
loop
mov
fsubrl
lahf
subl
loope
aad
ss
inc
push
mov
inc
cmpsl
sbb
insb
xor
stc
insl
sbb
mov
popf
js
outsl
mov
movsb
lret
xchg
cld
push
das
rclb
movsl
subl
fmuls
mov
pop
cld
sarl
push
test
lds
mov
out
xor
popa
out
test
les
mov
mov
imul
mov
pop
pop
ss
mov
mov
sub
push
push
cmpl
mov
cmpsb
and
or
inc
pop
flds
mov
ret
imul
je
mov
movsb
enter
jl
adc
inc
pop
push
push
jp
pop
cmpsb
bound
out
int
nop
call
fsubrl
push
jo
mov
mov
jae
cmpsl
aaa
ret
arpl
jne
in
fildl
out
in
jle
ficompl
leave
add
in
imul
adc
inc
cmpsl
mov
cmc
xchg
inc
and
jmp
cmp
mov
hlt
mov
sub
xor
out
sbb
rcll
sub
xchg
icebp
add
push
sub
ljmp
out
daa
movsl
mov
and
add
push
cmp
dec
fdivrl
push
push
sbb
dec
jp
mov
out
stos
xorl
fs
xchg
cld
sub
fsubs
xchg
sbbb
imul
pushf
pop
aam
push
shlb
loopne
sbb
jg
ret
stos
add
and
cmc
pushf
push
loop
fcomps
push
mov
add
ja
fsub
sub
adc
ffreep
mov
stos
shl
and
movsb
pusha
div
or
data16
in
insb
lea
popf
add
or
push
xor
call
add
cmp
lods
add
loopne
aaa
dec
shrb
sub
push
flds
pop
gs
movsl
test
jbe
xor
lret
jp
lods
aas
sti
or
std
jmp
scas
cli
gs
add
xchg
call
mov
and
ds
xchg
nop
fdivrl
xchg
fucomip
cmp
jg
dec
ja
jmp
idivb
mov
mov
int
xor
cmp
cmpsb
ror
enter
movsl
daa
cmpl
push
sahf
mov
cmpsl
aad
lahf
nop
aam
mov
sbb
or
mov
jg
sub
cmp
in
ss
push
arpl
push
sbb
movb
jb
pop
fsts
clc
jmp
jno
mov
jp
divl
decl
jecxz
adc
aas
jne
cmpl
adc
cli
das
and
pop
adc
or
enter
dec
rolb
pop
dec
mov
sbb
pop
pusha
xor
mov
xlat
inc
pop
mov
push
jmp
mov
hlt
addr16
hlt
dec
cmp
call
jle
aad
lret
daa
repz
adc
inc
shrl
sbb
mov
imul
lea
mov
call
pop
scas
pop
and
push
xchg
xchg
jl
das
sbbl
lret
test
mov
fimull
mov
andb
daa
nop
pop
jge
sbb
test
mov
iret
mov
aam
inc
xor
inc
fdivr
jge
add
mov
jecxz
pop
or
clc
daa
dec
mov
pop
adc
aas
bound
je
push
dec
add
mov
mov
dec
sub
cmp
lds
cmp
dec
mov
pop
pop
sahf
push
incb
lahf
aas
fidivs
mov
pushf
inc
orb
jl
jmp
and
mov
mov
sbb
add
jle
push
jmp
or
pop
cs
divl
daa
xchg
cmpsb
cmp
dec
inc
jle
clc
sub
adc
xchg
neg
xchg
nop
popa
and
inc
aaa
mov
dec
xor
mov
mov
mull
jg
or
enter
or
pop
cmc
mov
mov
jae
rcr
add
pop
sbb
mov
dec
inc
sbb
pop
adc
xor
cmp
and
and
out
push
in
out
dec
ret
leave
adc
movsl
fcomps
mov
mov
pop
stos
sti
notl
femms
jmp
mov
adc
push
lahf
aad
inc
rclb
das
rclb
aaa
dec
mov
xor
ss
popf
rclb
jns
or
fldl
sub
out
mov
jmp
push
rcrl
mov
pop
adc
sbb
fs
or
xchg
fucomp
fadds
jo
xchg
mov
lea
xor
imul
push
sbb
outsl
sets
bnd
pop
jae
pop
add
dec
cmpsl
push
mov
inc
test
ljmp
pop
add
lods
dec
inc
stos
rolb
enter
std
jge
sbb
push
xor
lret
mov
dec
es
push
fdivrl
or
xchg
push
dec
add
jb
mov
aas
cmp
daa
cwtl
stos
mov
mov
add
in
incl
xacquire
testl
mov
in
inc
or
test
in
leave
dec
dec
cli
and
xor
aad
push
es
mov
rclb
gs
adc
not
lcall
rorl
xchg
loope
stos
cli
adc
pop
xor
cmp
pop
mov
div
clc
sub
jo
test
dec
cmp
icebp
mov
sbb
xchg
adc
inc
push
inc
fstl
mov
loope
push
loopne
je
icebp
sub
xor
shll
inc
fidivs
movntq
outsl
mov
dec
cli
and
lods
gs
xor
aad
pop
cmp
pop
test
mov
addr16
aad
in
out
dec
sbb
sbb
jmpw
scas
movsb
cwtl
dec
or
out
sub
push
sub
ss
jae
cmc
push
jbe
fidivs
pop
xchg
repnz
adc
xchg
bnd
sbb
fstpl
cltd
xor
mov
test
jne
das
mov
bound
fdivs
xchg
sbb
in
fstpl
pop
sub
xchg
xchg
lds
fisubl
out
aaa
jno
sub
scas
mov
pop
sbb
movsb
sbb
sub
pop
pop
add
inc
sub
enter
mov
rcll
jns
jnp
and
aad
sub
js
and
and
jg
jl
inc
push
decb
jnp
cmpsl
xchg
mov
loopne
push
inc
sub
jmp
jno
xchg
stos
mov
mov
arpl
clc
mov
sahf
cwtl
jge
bound
sbbl
pop
mov
aad
adc
dec
xchg
in
jge
mov
mov
loop
xchg
dec
ret
fwait
push
fistl
mov
lret
sbbl
jmp
int3
pop
int3
stc
jae
ljmp
fs
mov
test
dec
iret
inc
dec
and
jmp
bound
sbb
or
rcr
call
sbb
inc
test
out
mov
add
pop
flds
push
fld
or
pop
inc
mov
adc
outsb
mov
lret
sub
jne
dec
daa
dec
ss
jmp
leave
lock
sbb
stos
pop
mov
mov
test
in
mov
sbb
xor
nop
test
ret
mov
xor
ret
lcall
inc
sbb
sub
scas
jle
dec
inc
pop
nop
pop
pop
jg
rol
fwait
cwtl
push
dec
ds
sti
lods
mov
out
lcall
out
mov
add
addl
ret
cmc
ret
mov
dec
fdivrs
pop
jnp
mov
mov
mov
imul
popf
add
aam
cmp
xchg
mov
iret
fwait
enter
icebp
stc
daa
data16
xchg
sub
mov
enter
add
sbb
mov
ret
inc
push
mov
int3
lea
adc
cltd
or
dec
push
or
and
mov
adc
and
ljmp
into
sbb
xchg
rcll
mov
stc
cmpsb
cmp
cmc
jb
and
ds
test
filds
inc
lods
xchg
lock
jge
push
test
dec
xor
or
int
push
adc
push
xor
fidivl
movsl
pop
inc
stos
popf
adc
mov
jno
int
dec
pop
outsb
mov
push
xor
lcall
icebp
pusha
lds
lods
jo
sub
adc
xor
jno
pop
ds
es
xor
inc
mov
inc
mov
movsl
dec
mov
inc
fiadds
cwtl
in
mov
dec
push
mov
pop
dec
dec
cmpsl
cltd
push
gs
pop
jg
out
dec
sti
mov
nop
test
repnz
push
jle
mov
fisubrs
dec
push
mov
or
popf
adc
repnz
call
out
data16
or
mov
into
push
or
int3
jns
scas
cltd
jb
aad
adc
mov
adc
jmp
imul
sbb
test
clc
int
test
out
mov
adc
fwait
push
jno
dec
add
xlat
push
and
arpl
inc
idivb
xchg
mov
dec
cmpsb
scas
mov
in
mov
sbb
inc
and
dec
dec
mov
jne
xchg
jne
lock
test
mov
gs
xchg
icebp
std
jae
mov
int3
adc
imul
fsubr
xchg
out
or
fwait
test
cmp
sbb
inc
lods
xchg
push
inc
mov
mov
and
bound
lret
pop
outsl
mov
mov
aas
nop
jl
xchg
mov
add
jle
int3
push
or
dec
lock
lret
dec
cs
inc
lret
jecxz
sbb
and
out
cltd
dec
jb
lods
pop
or
into
subl
push
outsl
xor
daa
fldl
inc
repz
dec
loop
mov
ljmp
dec
test
orb
cmp
jmp
aaa
jp
popf
aad
fdivs
cmpsl
push
mov
loop
push
lock
push
xor
mov
das
sub
mov
mov
dec
aad
xlat
aad
dec
adc
lds
loope
into
repz
sub
xchg
xchg
or
fwait
popl
into
inc
pop
inc
and
lea
mov
jge
cltd
hlt
cmpsb
loopne
sub
jmp
pop
push
cmpsb
out
lahf
aad
rorb
addr16
xor
lret
into
mov
mov
dec
inc
jae
ss
mov
sti
mov
pop
repnz
dec
adc
xchg
stos
into
pop
sbb
nop
das
cld
scas
mov
cmpsb
fwait
sub
and
or
xchg
and
aam
xchg
fs
test
xchg
push
cmp
es
les
rorl
call
sbb
lea
or
ror
cmp
ds
push
inc
enter
js
lea
test
popa
arpl
jae
mov
enter
movsb
or
lods
push
cltd
mov
aas
pop
dec
mov
mov
push
lods
jae
jns
sbb
lret
lock
cltd
loop
fstps
sbb
icebp
fld
dec
out
ja
popf
jo
pop
imul
dec
mov
xchg
push
xchg
test
xchg
fildll
les
and
test
stc
or
dec
mov
adc
pop
and
repz
mov
das
xor
push
dec
mov
fisubl
sarl
adc
lahf
jo
add
nop
add
lret
mov
ficompl
sub
dec
lea
jp
xor
daa
jecxz
adc
inc
sub
mov
xor
pop
aad
les
add
ss
iret
psrlq
test
arpl
iret
adcb
mov
rolb
adc
pop
into
sbb
cmc
lea
aad
or
iret
psllq
mov
mov
dec
push
loop
dec
lods
jnp
or
adc
xchg
push
sahf
inc
repz
mov
inc
hlt
mov
fidivs
push
mov
ja
fsubrl
mov
add
int
xor
mov
jb
jo
inc
mov
adc
lock
adc
push
jmp
cmpsb
mov
test
xchg
xor
pop
int3
std
sub
lock
xchg
or
data16
xor
out
mov
aaa
dec
dec
cld
sub
sbb
mov
cli
mov
mov
ja
in
add
cmp
fwait
out
xor
fs
mov
inc
lahf
sub
cmp
in
sbb
sub
jbe
inc
ret
pop
mov
mov
add
and
cwtl
out
jl
jo
mov
xlat
out
addb
xchg
or
pop
xor
test
outsl
lds
adc
inc
push
xchg
adc
loop
mov
jns
mov
push
js
inc
and
clc
addb
inc
jmp
in
mov
lret
push
pop
rcl
sub
or
fwait
imul
mov
rcl
lret
push
dec
adc
fwait
mov
popf
and
in
jmp
out
aad
mov
int3
jl
xchg
in
pop
repnz
mov
or
inc
mov
or
rcl
push
mov
mov
pop
mov
pushf
cld
dec
adc
cmpsb
inc
mov
insb
fs
mov
mov
xor
sbb
pop
xlat
push
aas
addl
push
jns
jae
ljmp
addl
in
add
pop
cmp
mov
xchg
push
insl
push
jne
or
ds
xchg
fstpt
pop
jnp
cli
rolb
inc
mov
fsubrs
pop
aaa
adc
cltd
or
call
cmc
dec
sahf
sarl
es
rclb
out
xor
and
and
mov
dec
into
cmp
mov
aam
sbb
fadd
addl
scas
xor
call
ret
sbb
jmp
dec
pop
repnz
lcall
mov
je
ljmp
xchg
aam
lret
clc
sub
cwtl
jge
mov
arpl
stos
xchg
in
imul
sub
inc
push
sbb
push
push
and
in
fs
mov
iret
or
lret
inc
dec
ljmp
adc
push
cmp
pop
pop
aad
dec
repz
dec
mov
scas
and
push
push
rcrl
xor
adc
popf
in
bound
fists
popa
add
arpl
jg
scas
es
jno
pop
repz
jbe
push
mov
inc
inc
mov
cmp
xchg
fisubs
inc
dec
adcl
cltd
cld
cld
and
pop
std
pusha
inc
adc
push
js
xchg
xchg
fcomp
push
push
mov
push
pop
lret
push
sub
push
test
roll
jo
fistpl
pop
mov
mov
sub
lea
test
pop
cmp
push
lds
xchg
xor
in
test
inc
scas
sahf
sub
mov
stos
not
aaa
cmp
outsb
mov
push
jo
jns
and
inc
es
aam
and
push
pushf
dec
or
mov
cmp
inc
aad
or
cmpsb
arpl
ja
fcos
lods
mov
bound
js
pop
push
lcall
and
mov
notb
movsl
xlat
push
gs
mov
dec
scas
jae
nop
loop
je
mov
dec
cwtl
jge
stos
pop
repz
dec
scas
pop
loope
call
sub
sbb
aad
into
jmp
pop
movsl
fistpll
scas
xlat
std
pop
arpl
cmpsb
js
js
xchg
ret
mov
movsl
jnp
cmp
inc
mov
push
cmp
mov
and
nop
out
in
jge
jl
xor
dec
sti
pop
sbb
mov
or
cmp
sub
jbe
dec
cmpsb
outsl
js
push
outsl
sbb
outsb
xchg
jnp
push
sti
sbb
lret
insl
repnz
shll
call
pop
adc
ret
data16
loopne
sbb
adc
cmpsb
or
inc
shlb
aaa
stos
add
pop
test
sub
lods
ljmp
and
inc
xchg
leave
enter
mov
cvtpi2pd
test
rorl
xor
xor
adcl
and
daa
mov
pusha
es
and
pop
dec
insl
pop
cmp
das
mov
test
and
cmc
push
jle
sub
sbb
outsb
lods
push
lods
repz
sbb
popa
cmp
inc
sub
outsl
int3
or
inc
mov
or
push
fdivp
inc
pop
lfs
into
add
sbbb
imul
push
xchg
in
mov
xorb
pop
lds
inc
lods
in
cld
hlt
mov
test
sub
fnstcw
mov
cmc
insb
je
pop
sub
xlat
add
dec
and
push
mov
xor
inc
pop
or
pop
fwait
cmp
cli
fists
mov
push
pop
jb
sub
rclb
cmp
stos
cld
mov
imul
xor
or
and
lahf
leave
fcoml
lret
mov
sbb
test
cmc
cmp
movsb
pusha
int3
aad
lods
test
notl
aaa
push
jge
jge
xor
repz
cmp
insl
aam
add
mov
xchg
inc
in
add
lret
inc
lock
jns
dec
mov
sbb
ret
lock
fsubrs
test
mov
sbb
push
fbld
pop
pop
and
gs
sub
xchg
jp
xor
dec
cmp
les
stos
adc
mov
push
inc
pop
mov
int3
push
aas
imul
movsb
fsubrl
iret
mov
xor
cmp
sub
cmp
sbbl
pusha
loopne
je
je
popf
cmp
jg
inc
test
not
addr16
cmc
xchg
cmp
jno
fidivrs
add
ret
and
xor
jecxz
ds
inc
mov
cmp
xchg
icebp
push
gs
fisubl
ds
xor
clc
fldl
sbb
cmp
out
pop
icebp
rol
or
cmp
jo
xlat
sbb
push
outsb
sti
mov
add
mov
xchg
pop
jmp
push
push
mov
rcl
dec
push
xchg
icebp
or
or
ret
cmpsb
fsub
push
jmp
test
cwtl
insb
nop
mov
inc
negb
popf
sub
dec
movsb
jnp
xchg
sub
lods
lea
fdivs
xlat
pop
sbb
pop
addr16
out
sbb
xor
ret
js
mov
mov
imulb
rcrl
mov
and
or
mov
cwtl
push
or
rcll
stc
leave
enter
mov
cltd
call
push
mov
andl
negb
gs
dec
jg
sub
scas
sub
mov
pop
lea
push
clc
xlat
mov
jge
xor
sarl
mov
rorl
jns
mov
adc
je
lock
cmc
mov
test
and
ret
xor
push
rorb
test
push
cmpsb
jle
int3
sub
cs
mov
gs
je
cmp
push
ret
imul
clc
push
or
addr16
imul
xchg
loope
imul
fbstp
sti
orb
iret
pop
push
sub
xchg
mov
pop
push
fimull
push
cmpl
cmc
pop
icebp
cmpsl
jmp
sbb
sbb
jmp
sahf
scas
xor
pop
jno
cmp
cmp
adc
arpl
pop
lahf
dec
adc
mov
mov
cwtl
mov
and
cmpb
in
aam
add
xchg
clc
add
bound
cld
and
cwtl
test
popf
and
push
jmp
test
loope
cli
adc
scas
es
and
fs
sbb
mov
ss
pop
jb
roll
pop
or
popa
mov
mov
cli
ss
jl
dec
push
int
dec
xor
cmp
fiaddl
push
add
mov
fdivl
pop
or
sbb
adc
cmpsb
gs
push
xor
push
sbb
jg
aaa
mov
or
mov
movsl
das
cmp
aam
jecxz
add
adc
mov
movsb
shrb
xchg
jle
lret
inc
stos
or
insl
mov
cs
push
mov
jnp
cld
xor
jnp
and
and
jmp
movsl
mov
jne
gs
imul
adc
leave
in
aad
lds
xchg
test
gs
imul
adc
leave
gs
push
jmp
and
pop
cmc
dec
gs
imul
adc
std
in
aad
lds
xchg
sub
rcll
xor
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fs
in
aam
les
movsl
test
push
loopne
je
fs
push
jmp
and
lods
hlt
pop
in
aad
les
sbb
test
shll
std
inc
in
xor
and
adc
add
hlt
inc
in
aam
les
add
adc
je
fs
xor
rorb
xor
imul
adc
cmp
aas
aad
int3
outsl
fidivs
sbbb
out
cmp
push
inc
inc
aam
pop
imul
mov
stos
push
ret
add
fwait
xor
std
fcmovnbe
sbb
cld
push
jno
in
fisttpl
xor
push
icebp
jo
fnsave
mov
in
xchg
mov
in
hlt
subb
mov
mov
fs
lods
pusha
aam
ja
add
push
mov
xchg
lods
js
xor
adc
add
inc
push
addr16
dec
popf
xchg
out
sti
sub
in
pop
test
push
xchg
insb
test
cmp
jge
mov
cmpsl
and
leave
adc
and
adc
dec
in
aam
les
sbb
test
frstor
in
hlt
xor
and
adc
add
sbbb
mov
pop
shrl
dec
sbb
int
stc
and
jns
jo
stos
xor
and
push
mov
rcrl
cld
pop
es
and
jg
push
lea
flds
sbb
sub
movsb
or
je
fs
std
inc
in
xor
and
adc
add
hlt
pop
in
aam
les
sbb
test
push
std
inc
in
xor
and
adc
add
hlt
pop
loope
pop
cli
xchg
outsl
xchg
ror
sub
push
xor
insb
sbbb
out
pop
dec
jae
js
or
jp
mov
sar
add
push
and
xchg
jbe
inc
pushf
sub
stc
std
lods
fmull
pusha
aas
jae
jl
sub
add
sbb
outsl
in
das
sub
inc
dec
ret
adc
jg
mov
xor
lods
cmp
bswap
inc
mov
clc
pop
adc
mov
mov
fidivrs
decl
xchg
mov
sub
mov
or
out
cli
or
fs
add
jle
mov
daa
insb
lods
and
sbb
int
push
jge
std
lahf
repnz
jns
mov
dec
dec
aam
jno
xchg
push
hlt
push
insl
push
inc
in
dec
xchg
iret
imul
sbbl
and
jb
fists
mov
in
pop
mov
ljmp
mov
clc
sbb
sbb
test
dec
push
mov
sub
adc
mov
das
dec
ficoms
add
clc
xor
stos
lds
aaa
mov
rcrb
ljmp
xchg
dec
cmp
adc
fstl
cmp
gs
lahf
fistl
mov
fisubl
xlat
sbb
add
inc
ds
mov
jb
mov
xlat
xchg
loop
xchg
and
ret
xor
xor
inc
lcall
jge
dec
mov
test
sub
push
ds
fisubrs
hlt
inc
push
or
mov
sub
or
mov
dec
data16
in
mov
xor
js
sbb
lcall
out
loopne
cmc
aaa
bnd
out
enter
cmp
sub
inc
cmp
repz
xchg
push
xlat
pop
pop
pop
add
cmp
sbb
xor
inc
add
fistpll
out
cmc
loopne
aaa
fdivs
mov
dec
outsl
ss
push
testl
adc
xor
push
bound
xchg
hlt
and
cld
cwtl
decl
dec
jb
push
int
and
adc
and
mov
xchg
dec
xchg
xor
mov
stos
xchg
and
jno
lods
mov
mov
lret
sbb
mov
adc
mov
add
out
daa
cltd
sub
xchg
inc
loopne
jge
ljmp
mov
push
aam
dec
movsb
jno
sbb
xor
cmpsb
mov
mov
lea
cs
into
fsubs
pop
lds
cli
or
sub
mov
pushf
mov
xchg
inc
hlt
call
xchg
rcrl
fs
int
jmp
fdiv
jge
pushf
jo
inc
xchg
push
sub
aas
jge
xlat
sub
xor
stos
out
cltd
loopne
into
sub
mov
pop
xlat
push
mov
lock
lods
pushf
nop
enter
mov
adc
lods
test
pop
imul
xorb
pop
shrl
jmp
adc
loopne
and
or
fisubl
or
fldl
addl
inc
push
dec
dec
mov
lock
xchg
ficoml
jg
adcb
and
mov
xlat
in
mov
js
in
pop
sbb
xchg
mov
sbb
iret
dec
push
xor
lods
fwait
scas
sbb
outsl
mov
cwtl
in
addr16
mov
inc
out
mov
sub
mov
sbb
mov
les
mov
dec
cmp
mov
mov
mov
push
ror
adc
xor
jp
movsl
push
aad
cmc
inc
add
jg
lea
outsb
ss
imul
push
fidivl
jne
and
loop
push
dec
stos
mov
lods
pop
fidivrs
data16
sbb
and
push
pushf
or
xor
rcrl
fidivrl
jae
xor
mov
inc
and
imul
shr
hlt
adc
testb
jb
imul
sbb
mov
and
mov
add
outsb
sub
testb
or
adc
cmp
inc
sti
insl
pop
stc
jmp
out
adc
xor
lcall
nop
pop
inc
xlat
fldcw
insb
cli
sbb
or
push
aam
fdivs
imul
mov
pop
dec
popf
repnz
js
push
sbb
xchg
ffreep
imul
cltd
fldcw
test
lret
and
scas
repz
int
mov
in
fs
pusha
pop
jo
push
fldcw
adc
negl
ret
or
imul
fstpt
sbb
cs
movsb
lds
jp
and
das
je
xor
cmp
out
and
fimuls
sub
test
xchg
jbe
inc
call
pushl
xor
in
sub
sub
mov
and
sbb
outsl
mov
adc
int3
in
jl
outsb
in
das
cmp
aas
rcll
jbe
popf
fimuls
xor
dec
add
sar
sti
scas
adc
mov
fstl
xchg
xchg
and
call
sub
in
addl
orl
mov
jl
jo
inc
cmpsb
adc
push
pop
icebp
iret
adc
add
lods
jecxz
repnz
xor
dec
popf
imul
push
and
movsb
std
cmpsl
push
gs
in
jp
cmp
enter
int
xlat
mov
popf
lods
pop
jg
sahf
pop
or
mov
ds
fs
cmc
inc
sub
hlt
test
xchg
ljmp
cli
icebp
add
pop
in
push
xchg
inc
loopne
xor
dec
mov
aad
into
push
sbb
out
flds
imul
and
and
jg
jl
add
add
minps
pop
enter
inc
inc
jbe
pop
repnz
jno
stos
and
rorb
jge
notb
or
cmpsb
je
outsl
mov
je
cmpl
rorl
sbb
outsl
dec
adc
add
leave
shl
inc
lods
and
decl
wrmsr
test
leave
pop
sarl
push
cli
mov
mov
clc
in
or
mov
and
nop
jo
add
push
jle
and
mov
adc
jbe
mov
xchg
xchg
outsl
dec
aaa
xor
cmp
lahf
addl
jge
into
cmp
or
movsl
jp
pusha
lods
cltd
or
int
decb
lock
pop
imul
sbb
mov
push
xlat
jl
jo
movsl
jg
dec
sub
add
andl
insl
or
std
insb
scas
in
push
dec
adc
stos
mov
in
imull
lahf
xor
icebp
mov
push
iret
jl
jnp
in
data16
ss
std
lock
into
or
lods
les
xor
sbb
jge
mov
ja
add
xchg
add
mov
inc
cs
pop
sbb
cmp
sbb
cli
ljmp
dec
or
cwtl
add
and
mov
xor
ret
cs
sub
jo
mov
jbe
sti
xchg
in
mov
dec
mov
inc
add
jns
jp
repnz
mov
fsubl
addb
push
bound
pushf
xchg
or
sub
aad
adc
mov
mov
cmp
repnz
imul
in
adc
pop
xor
and
fmul
or
sbb
iret
pop
push
vmovq
adc
mov
test
inc
jg
ljmp
loop
pop
scas
jo
sbb
int
daa
add
jno
xchg
cmpsb
jmp
inc
mov
mov
outsb
add
mov
aas
push
and
push
inc
fimull
add
push
mov
jmp
aas
dec
out
xor
push
insl
adc
aas
pusha
into
ret
fnstenv
sbb
es
add
jp
pop
push
jg
mov
bnd
jp
mov
jb
lock
xor
and
aaa
lock
shll
sub
fnstcw
in
jmp
adc
push
call
cmp
nop
loop
outsl
cmp
pop
pop
xchg
and
mov
mov
jp
push
call
loopne
pusha
add
scas
dec
mov
je
scas
mov
adc
pmullw
push
icebp
xor
pop
push
push
pop
gs
lea
push
push
and
xchg
bound
mov
jg
cmpsb
inc
into
fisubrl
pop
inc
aas
clc
jecxz
mov
aas
xor
lcall
hlt
push
xor
cltd
sahf
cs
lods
push
scas
mov
mov
bound
stos
cld
and
lock
fs
out
xchg
and
popl
fstps
movsb
jnp
ret
mov
adc
ds
ljmp
cmp
cmp
icebp
mov
mov
mov
jg
pop
inc
or
jp
fisttpl
les
scas
sub
pop
adc
les
xchg
add
sub
and
mov
adc
scas
cmp
iret
mov
ror
cwtl
sbb
mov
mov
fisubrs
getsec
or
movsl
jle
push
adcb
jecxz
dec
push
adc
sbb
lret
xchg
ja
push
sub
push
inc
and
mov
ss
jg
lcall
leave
mov
push
fmul
shlb
mov
jg
in
fiaddl
xor
std
inc
jae
addr16
rcl
lahf
scas
outsl
xchg
cmc
jns
mov
xchg
pop
push
jle
lods
cmpl
fldt
mov
sbb
shll
add
in
pop
mov
xor
jne
ss
aam
fcoml
sti
dec
shrb
clc
test
and
lcall
xchg
mov
test
and
out
sahf
shl
jne
loop
jae
push
and
sub
in
add
mov
in
in
xchg
lds
clc
cmpsb
mov
mov
jmp
dec
mov
dec
dec
ja
test
push
roll
adc
sub
inc
call
cli
popa
sti
roll
dec
and
mov
push
incl
outsb
add
daa
and
lods
fistpl
and
icebp
or
nop
stos
xor
push
inc
adc
inc
dec
fsubs
je
mov
xchg
outsl
out
gs
subl
jecxz
mov
cmp
xor
add
int3
xchg
adc
xor
sbb
stos
add
les
popl
insl
push
mov
push
hlt
mov
sahf
ret
inc
or
inc
inc
mov
add
icebp
and
pop
dec
push
clc
xor
sbb
cmpsb
cld
or
or
mov
aam
mov
xlat
daa
sbbb
popa
mov
cmpsb
sti
loope
push
imul
bnd
dec
or
popa
rcl
cmp
jns
or
mov
cmp
pushl
mov
mov
xchg
jg
adc
cmpsl
mov
imul
pop
out
xlat
mov
test
aam
ljmp
inc
jl
cmovp
xor
subb
cmp
mov
fcomip
push
cmp
nop
imul
jnp
jbe
xchg
orb
in
sbb
sbb
mov
lds
mov
das
add
and
dec
adc
cwtl
push
sahf
push
icebp
pop
lods
mov
push
loope
push
loope
addr16
push
loop
iret
mov
or
mov
jo
push
sbb
push
cli
insb
xchg
adc
or
mov
pop
push
decb
dec
mov
push
sub
mov
sahf
mov
sub
push
mov
mov
cmp
push
or
icebp
jecxz
aad
sbb
dec
stos
aas
or
fwait
stos
add
pop
cmpsb
adc
mov
add
or
cmpsb
mov
xchg
clc
dec
aad
xlat
in
cmp
sbb
mov
mov
sub
cmc
ret
mov
or
ret
cmpsb
out
sbb
sbb
mov
or
ljmp
mov
push
adc
popa
push
xlat
cwtl
rcrl
jmp
in
dec
jg
jns
push
dec
ja
jo
jl
loope
inc
gs
data16
out
add
lods
cmp
sub
mov
push
cmp
mov
inc
mov
cmp
insl
or
adc
add
js
or
mov
add
and
in
fld
nop
out
mov
insb
popf
jns
inc
lds
fwait
pop
cmp
ret
test
dec
cs
push
mov
stos
xchg
sbb
scas
cwtl
lods
mov
adc
cmpsl
mov
jne
dec
addr16
in
xor
xor
iret
pop
out
and
and
mov
sub
sbb
xor
mov
jno
or
pop
scas
push
in
jmp
mov
cwtl
push
and
imul
adc
sub
mov
xchg
into
call
xchg
or
sbbb
test
push
push
pop
jmp
out
sub
lret
sbb
and
dec
xor
in
cwtl
jecxz
dec
in
xchg
cwtl
push
pop
and
in
jno
push
push
pop
push
hlt
stos
lcall
nop
dec
fidivrl
test
fs
push
push
mov
popa
sub
push
dec
jae
addl
inc
dec
loopne
and
iret
pop
sub
popf
and
mov
insl
in
dec
fdivp
xchg
nop
push
jno
in
test
xchg
decb
ss
inc
iret
and
in
shl
xchg
xor
insl
fldcw
rcll
inc
xchg
dec
cmp
push
inc
lcall
test
aad
jle
aad
dec
sti
inc
stc
mov
pop
pop
lods
mov
inc
in
jecxz
jmp
jecxz
xchg
xchg
inc
inc
scas
in
push
aad
test
es
in
inc
fists
or
icebp
xchg
ds
adc
pop
inc
data16
or
mov
insl
push
dec
push
xchg
lret
daa
pop
cmp
fdiv
add
jb
and
fdivrs
xorl
icebp
pusha
cmp
imul
mov
loope
fs
movsb
jb
adcl
sbb
aas
test
loope
and
fimull
je
push
rcll
xchg
add
stc
stos
das
xor
test
jbe
jb
loope
aaa
sbb
imul
mov
xor
push
push
pop
mov
sub
or
push
sub
insl
and
sbbb
push
stos
xchg
or
add
and
add
in
in
pop
shrb
sub
int
stos
fsubl
aam
pusha
das
fwait
sahf
aad
and
sti
out
adc
xor
shll
inc
mov
push
cltd
sbb
add
test
ja
iret
mov
sub
xchg
adc
pushl
xchg
push
add
and
push
clc
mov
repz
mov
mov
cmp
jnp
popw
xchg
push
imul
push
lods
xchg
in
push
cmpsb
add
outsl
fistl
push
lret
push
xor
push
cmpsb
pop
pusha
dec
push
pop
sbb
lods
stos
push
push
pop
xor
arpl
fistl
pop
xchg
xchg
sub
out
cs
and
js
in
inc
pop
lret
xlat
pop
insb
sub
xchg
push
inc
jae
test
out
fdiv
fisubl
push
cmpl
push
ja
out
pop
mov
and
sbb
mov
sub
xchg
dec
adc
insb
jbe
out
shll
mov
push
sbb
push
inc
bound
xchg
bound
xchg
and
add
fistpll
mov
mov
iret
lods
mov
xchg
lfs
mov
mov
lcall
and
pop
lods
lret
clc
daa
jb
xchg
cmp
add
mov
aam
loope
lea
pop
jecxz
xor
or
roll
inc
jp
mov
rolw
sub
push
fs
mov
xor
xchg
xchg
pop
cmpsb
mov
popl
mov
dec
ficomps
mov
les
outsb
fcomps
sub
iret
fisttpl
ud1
call
divb
addr16
xor
sub
fsubs
push
lcall
mov
in
mov
add
jb
push
mov
and
sbb
test
push
out
or
rcrl
insl
jge
xchg
iret
sub
mov
aaa
lds
mov
mov
cwtl
push
mov
inc
fidivl
inc
push
lock
xchg
movsl
cs
mov
scas
push
push
movsl
pop
dec
xchg
push
sub
push
loope
push
sub
and
jl
mov
inc
test
mov
hlt
cmp
jl
jge
push
mov
mov
mov
mov
outsl
pop
mov
push
fidivrs
xor
adc
testl
sbb
dec
mov
xlat
js
mov
mov
bound
divb
push
rorl
ja
daa
dec
push
insb
divl
xchg
jae
fadds
aaa
jbe
clc
push
movsl
mov
mov
bound
push
cli
inc
test
cmp
push
pop
push
add
mov
jge
adc
mov
add
ljmp
xor
xchg
repnz
fbld
pop
lods
sti
cli
inc
cld
call
aam
mov
jmp
sbb
pop
inc
pop
xor
fnsave
sbb
add
xor
push
and
or
lods
es
cs
leave
rol
xor
lea
stc
mov
mov
add
adc
dec
dec
pop
fisubrs
jbe
inc
dec
fs
fst
jo
sub
in
adc
test
pushf
inc
stc
insb
jmp
lret
dec
xchg
sbb
repnz
cmp
xchg
fsubrp
jne
push
mov
sbb
je
out
decb
pop
sahf
pop
lahf
and
insl
inc
lret
mov
test
pop
lret
xchg
call
jle
push
sub
mov
mov
shl
test
jmp
mov
push
add
scas
addr16
push
jo
mov
xchg
push
aas
xchg
jne
add
inc
dec
roll
ja
rol
adc
scas
push
pop
mov
test
clc
fnstcw
mov
push
cs
mov
xor
pop
test
loop
jecxz
cmp
movsb
data16
push
jl
push
xchg
inc
xor
add
add
inc
lods
xorb
lahf
scas
dec
mov
leave
hlt
inc
call
scas
pusha
cs
jae
jo
xchg
jg
jae
adc
scas
fsubrl
hlt
xchg
mov
add
adc
mov
sub
cmpsl
ljmp
inc
cmc
aam
sbb
icebp
inc
inc
pop
notl
xchg
lret
pop
or
addr16
rolb
addr16
adc
jecxz
push
shll
mov
notb
inc
repz
aas
loopne
push
iret
imul
aad
xlat
cmpsl
cld
out
mov
std
sub
or
aam
in
mov
movsb
mov
sub
insb
pushf
sti
lea
pop
fmuls
mov
inc
xor
lret
xchg
jns
ret
rcrb
sbb
push
lea
sub
xor
mov
cld
stc
dec
ja
mov
stos
xor
fnstcw
xlat
mov
in
push
xchg
mov
xchg
xchg
out
fdivl
cmpsl
pushf
push
dec
dec
mov
les
loop
sub
cmp
imull
jne
das
cwtl
cltd
mov
loop
adc
cmp
into
fsubr
xchg
sub
andb
inc
xchg
pop
stc
aas
mov
sub
mov
cmp
xchg
int3
or
jno
mov
adc
xor
xor
xchg
roll
xchg
mov
sahf
or
lock
popf
cmp
mov
push
outsb
or
dec
stos
rorb
jp
test
lcall
and
lcall
mov
add
jne
leave
inc
push
hlt
pop
adc
cltd
fwait
outsl
in
test
int3
mov
xor
scas
dec
add
loop
ja
sbb
lods
das
push
xlat
push
add
jg
leave
jae
repnz
aad
cmp
cmp
gs
cmp
mov
mov
mov
fucomi
leave
lret
popf
icebp
jnp
je
pop
fimull
adc
cmp
adc
xchg
test
popa
mov
sub
fimull
icebp
push
add
jl
sub
les
or
nop
daa
sbb
push
repnz
shll
xor
mov
xor
mov
popa
nop
xor
clc
push
sbb
add
push
hlt
jmp
leave
and
ljmp
jle
ljmp
rol
inc
daa
addb
mov
xchg
out
aad
mov
fstps
mov
movsl
jo
dec
push
scas
dec
orb
cmpsl
jns
jo
cmp
fdivrs
rorb
ljmp
xchg
xor
jbe
mov
sbb
ja
xchg
leave
dec
insl
cmpsb
ret
sbb
mov
sbb
push
jecxz
ja
sbb
stc
in
insl
xchg
jg
dec
cmpsl
mov
lods
jo
lret
sbb
sbb
daa
dec
xlat
out
in
cltd
popf
mov
shll
loope
cltd
fdivrl
insl
mov
movsb
or
je
fs
std
inc
in
xor
and
adc
add
hlt
pop
in
aam
les
sbb
test
push
std
inc
in
xor
and
adc
add
hlt
pop
in
aam
les
sbb
test
push
std
inc
jmp
adc
add
dec
aad
les
sbb
test
je
fs
std
inc
lcall
sti
ror
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
