jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
fildll
mov
divl
test
push
add
add
add
add
mov
add
nop
add
add
add
add
add
inc
or
lock
add
gs
add
add
aad
leave
add
add
mov
push
xchg
push
add
sub
push
add
out
add
or
push
xchg
add
add
add
add
pop
add
push
xchg
add
add
add
add
add
adc
mov
add
pop
add
aad
push
add
gs
add
mov
add
add
adc
pop
add
add
adc
add
into
add
push
add
add
add
adc
sub
leave
add
add
in
push
add
gs
add
add
add
inc
add
add
aaa
add
add
add
add
push
push
add
and
add
add
add
sub
fwait
add
add
add
add
push
add
add
add
or
leave
add
add
push
add
add
add
add
add
test
add
testl
aad
or
inc
add
add
add
add
add
ret
add
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
sub
push
push
xchg
push
add
inc
add
add
mov
addl
mov
leave
add
add
add
add
cmp
icebp
add
add
mov
add
add
add
add
add
push
in
add
aad
dec
add
addl
push
add
add
sub
adc
push
addl
add
or
add
add
add
test
adc
pop
add
add
and
push
add
add
add
add
add
aad
mov
inc
add
add
and
insb
add
mov
mov
add
add
push
add
adc
imul
insl
add
add
pop
add
push
stc
add
add
cmp
aad
push
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
test
add
add
mov
add
add
dec
add
add
add
add
test
add
mov
mov
add
add
add
add
or
mov
add
add
int3
add
push
add
add
inc
add
add
add
sub
dec
add
sbb
add
or
push
ja
mov
in
push
adc
test
add
add
add
lds
pop
add
push
mov
add
add
push
mov
push
add
add
push
add
mov
pop
add
push
into
add
pop
add
add
add
flds
test
add
add
add
mov
into
add
add
push
mov
and
mov
pop
add
sub
sbb
add
add
add
popf
add
pop
add
add
add
add
add
push
or
mov
testb
in
jp
sbb
pop
in
test
mov
cs
and
pop
outsb
loop
fbstp
xor
rol
push
ret
mov
int3
jp
out
dec
jge
jae
ds
dec
mov
ret
ja
mov
add
mov
fistps
adc
jl
sbb
xor
push
out
cmp
sbb
adcl
loope
xchg
mov
xchg
cmpsb
sbb
stos
sarl
enter
cld
aaa
adc
negl
leave
adc
imul
test
dec
fildl
test
mov
clc
loopne
clc
push
and
fdivl
or
jae
incb
or
xlat
loop
stos
imul
xchg
mov
dec
int3
sub
add
gs
and
fldl
mov
flds
sbb
add
push
and
or
icebp
cmp
fwait
or
es
ret
mov
outsb
andl
sub
cmpxchg
in
sbb
enter
sarl
dec
mov
jb
sbb
scas
xchg
inc
mov
inc
loope
xlat
cmp
mov
daa
hlt
pop
into
jle
mov
out
fbstp
call
in
xor
es
mov
mov
hlt
fstpl
pop
leave
call
add
push
lret
jo
sub
loop
push
sbb
test
inc
fisubrl
mov
add
loopne
and
push
scas
popa
inc
pop
adc
les
jb
lea
fwait
popa
push
jae
add
gs
or
mov
mov
mov
mov
jg
nop
inc
and
into
sub
js
jmp
dec
in
ja
dec
dec
pusha
xor
loop
subb
mov
or
xchg
xchg
jnp
pop
ror
pushf
xchg
fucomp
mov
lock
mov
and
inc
aam
mov
cmp
sub
ljmp
int
fs
pusha
jl
inc
add
cmp
shl
cmp
dec
mov
lret
pop
outsb
add
aam
stc
pop
arpl
push
inc
callw
add
icebp
cmp
idivl
lahf
jle
lcall
les
push
out
add
xchg
mov
cmpsb
inc
sbb
movsb
xor
inc
outsb
fwait
cmpsb
xor
adc
sbb
lds
outsl
stos
xlat
cmpl
jp
fildll
and
mov
push
push
dec
shrb
mov
adc
add
int3
stos
ss
sub
pushl
add
call
push
xor
and
cltd
or
cmp
icebp
adc
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
mov
cmpsb
call
out
lret
test
dec
es
outsl
push
sbb
jecxz
push
das
inc
xlat
mov
cmpsb
call
out
scas
dec
inc
push
push
outsl
push
pop
jbe
data16
adc
inc
add
xchg
sub
xchg
push
pop
sahf
and
sbb
push
aas
xor
dec
and
inc
sahf
mov
stc
mov
xor
add
insb
test
jo,pn
in
les
push
test
loopne
es
lock
jne
sbb
mov
adcb
mov
push
mov
mov
popa
outsl
ljmp
xchg
sub
lret
mov
adc
sti
loopne
andb
mov
mov
out
pop
lods
cmp
sbb
outsl
jmp
or
lret
pop
push
xor
adc
jns
testl
lahf
lret
sub
in
data16
pop
lret
pop
and
pop
add
dec
jg
xorl
mov
mov
jle
outsl
pop
lcall
inc
in
mov
cmpsb
call
lret
out
pop
lods
frstor
cmpsl
push
jno
jg
adc
push
dec
das
lods
fnstcw
out
icebp
lcall
ds
push
push
das
jle
inc
jbe
popa
adc
fbstp
and
idivb
fadd
addr16
push
push
sbb
imul
push
lods
cld
cmc
scas
jecxz
testb
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
mov
sarl
out
or
pop
mov
xchg
popa
lods
repnz
aad
pop
push
xor
sub
xchg
aad
xchg
add
scas
sbb
fs
scas
daa
cmpsl
add
in
add
loopne
mov
lret
add
mov
and
iret
loopne
repz
sbb
outsb
cmp
push
popf
adc
sbb
sbb
inc
dec
add
adc
repnz
nop
jns
inc
out
lret
and
pop
clc
xchg
pop
mov
movsl
push
cmp
idivl
addb
into
mov
xorl
xorl
std
sub
lret
mov
dec
ljmp
repnz
mov
jge
cmp
sub
cmp
iret
mov
jae
adc
aad
inc
lock
sar
repz
mov
dec
or
jmp
pop
aaa
subl
fdivl
adc
pop
cmp
scas
mov
dec
in
add
mov
movsl
dec
fisubrs
sbb
mov
les
lcall
lock
repnz
cmp
aad
je
push
xchg
dec
repz
fisubrl
inc
in
cwtl
imul
sub
popf
fiadds
mov
mov
mov
xor
cmc
push
ljmp
lock
cs
lea
js
andb
ret
cmpsl
and
movsb
add
es
sub
mov
mov
aad
insb
adc
adc
lods
inc
clc
aam
popf
mov
test
or
andl
outsb
sbb
in
push
pushf
loope
dec
les
mov
jo
sahf
inc
jle
mov
in
mov
jg
xchg
mov
jg
insl
pop
bnd
push
mov
aam
cmc
add
inc
xchg
cmc
test
mov
push
adc
push
sar
sub
shll
iret
loope
push
lret
jnp
jbe
sub
cmp
xor
into
sub
das
inc
ror
in
pop
arpl
ss
ret
lahf
and
push
es
scas
out
sarb
subb
cmp
shll
mov
shrl
and
gs
insb
pop
mov
add
sub
in
push
and
loopne
inc
jge
push
mov
shlb
into
xor
sbb
or
mov
sub
and
jne
les
mov
sbb
inc
xor
test
push
test
lock
jae
loop
adcb
js
sbb
add
fcoml
mov
pop
dec
in
mov
inc
mov
es
lahf
mov
sbb
dec
jmp
push
movsb
movsb
cs
mov
sahf
mov
push
inc
xlat
cmpl
ds
mov
mov
push
push
and
stc
xor
test
jecxz
imul
jecxz
fldcw
outsl
xchg
xor
lea
pop
rolb
or
shll
or
dec
dec
xchg
fistps
movsb
addb
gs
in
pusha
add
movsl
jo
mov
jae
jo,pn
jmp
mov
or
dec
adc
dec
jp
outsb
lock
dec
mov
popf
dec
sub
mov
cmp
fwait
mov
lret
mov
icebp
and
jecxz
lock
xchg
jge
adc
jo
adc
dec
setp
cmp
stos
inc
ja
aam
add
jnp
push
out
and
add
out
repz
arpl
push
outsb
jne
inc
lret
lea
add
cld
push
mov
lahf
xchg
push
cmp
in
xchg
jbe
jbe
sbb
lds
call
in
dec
fnstcw
sbb
pop
sbbb
inc
cmc
jg
dec
jo
sub
mov
not
pop
movsl
add
add
lret
aam
jbe
mov
clc
inc
pusha
out
aad
adcb
jo
add
je
mov
cltd
stc
pop
int3
insb
test
sbb
mov
and
jle
xor
stc
int3
dec
out
js
sub
sbb
bound
imul
sub
sub
icebp
jns
bound
or
and
xchg
shll
pop
pop
scas
mov
cmpsb
xchg
jne
mov
out
pop
mov
rolb
jge
inc
cmp
lods
push
imul
inc
mov
xchg
xlat
jp
push
sub
mov
jg
cltd
rol
sarl
jl
dec
cwtl
push
mov
mov
xorb
mov
test
mov
clc
mov
movsl
and
mov
dec
cmp
imul
jne
cli
sub
mov
pop
imul
inc
std
push
jmp
xor
adc
dec
insb
mov
mov
jmp
aad
cs
sarb
or
fcomps
adc
mov
xchg
ljmp
stos
bound
push
dec
fisubs
mov
negl
inc
aas
xor
mov
push
inc
sbb
sbb
mov
jne
mov
add
push
hlt
mov
ss
xor
std
sub
mov
push
aad
scas
shl
subl
xor
jo
jno
adcl
sub
popf
sub
jne
lods
loopne
dec
cmp
lds
inc
ret
cmpsl
stc
iret
mov
xchg
movsb
xor
test
jle
mov
dec
and
ret
daa
xor
mov
xchg
call
push
loop
in
dec
out
jno
dec
cmp
jae
jg
aaa
mov
ret
dec
out
lock
adcl
idivl
push
sub
push
mov
pushf
pop
jmp
mov
in
mov
fadds
test
in
in
jnp
mov
push
pop
imul
daa
or
jmp
pop
incl
dec
push
jb
mov
testb
stos
pop
fstpt
xchg
dec
clc
adc
xchg
imul
dec
add
inc
je
jne
adc
add
dec
outsb
mov
dec
fstpt
js
pusha
jne
mov
or
sbb
popa
or
movsb
dec
shll
pop
mov
and
sbb
pop
sbbl
or
jl
dec
pop
dec
mov
or
push
nop
scas
adc
sbb
call
cmp
insl
push
mov
jg
sarl
addb
outsb
mov
jp
xor
popf
ss
fisttps
fistpl
outsl
and
mov
lods
loopne
jl
dec
jmp
xchg
and
and
push
mov
lds
cmc
pop
add
sbb
dec
stos
daa
mov
xchg
scas
fldl
sti
jbe
dec
mov
loopne
mov
shrl
fs
icebp
sub
pop
cmp
stc
lcall
lea
rcr
movsb
int3
dec
jne
push
in
adc
cmp
push
int3
mov
pop
out
jne
pause
xchg
inc
jae
xchg
sbb
mov
mov
dec
loope
fildl
leave
inc
push
mov
pushf
xchg
adc
adc
lret
cmp
pusha
stos
and
sti
mov
aad
ret
dec
loop
pop
push
imul
pop
cmc
adc
jae
inc
dec
push
cmpsb
rcr
dec
sbb
lcall
xor
outsl
mov
cmpsb
sbb
add
repz
loopne
adc
jge
lock
dec
xchg
inc
lret
push
inc
and
xchg
mov
xor
push
jae
xchg
mov
orb
gs
stos
sub
cs
mov
in
xor
test
mov
repnz
pop
in
lock
nop
inc
lea
dec
lret
xor
stos
mov
jmp
xorl
out
push
dec
pop
and
add
push
pop
roll
adc
or
dec
test
add
adcb
push
push
outsb
and
or
iret
cmp
mov
sbb
push
inc
pop
mov
inc
shrb
push
sbb
ss
lret
jb
sbb
outsl
sbb
jmp
stos
stc
and
aam
insb
testb
jbe
jo
lods
jo
push
sbb
or
cs
adc
fstpt
fcmovb
notl
or
pop
or
add
jo
repz
insb
ret
mov
dec
push
xchg
aam
dec
mov
test
jp
xor
xchg
jb
jmp
outsb
cld
mov
jge
orb
imull
sbb
imul
xor
stos
push
cmc
push
fdivrs
dec
add
js
dec
inc
testl
xchg
ss
dec
xchg
std
cmp
rolb
sbb
mov
and
jle
fistps
add
push
fwait
out
sti
mov
fsubl
add
jbe
mov
and
in
inc
testb
xchg
xchg
test
sbb
rol
mov
addr16
mov
dec
push
and
movsb
cs
scas
in
andl
jb
jnp
mov
add
add
icebp
jmp
cli
mov
loopne
xor
add
cmpsl
movsb
popa
gs
shl
stc
mov
stos
ror
scas
mov
add
dec
add
out
jbe
mov
hlt
pop
test
call
in
sbb
mov
iret
xlat
mov
jno
shl
cmp
mov
pop
in
ss
inc
adc
pop
adc
xor
jmp
inc
or
and
inc
and
cmp
inc
fldenv
hlt
enter
add
jmp
adc
int
movsl
adc
xchg
bnd
repz
mov
in
iret
cmc
mov
call
nop
fldcw
in
mov
dec
fsubl
mov
mov
pop
std
fs
pop
jmp
pop
adc
pop
sub
movb
and
cmc
adc
sti
es
sbb
cli
fucomip
lods
add
clc
clc
sbb
adc
cltd
fcompl
mov
out
add
aaa
clc
mov
mov
ss
add
aaa
rcrb
cld
out
outsl
sarl
mov
xchg
aad
xor
rcrb
scas
push
dec
mov
jo
inc
inc
adc
and
pop
cwtl
aaa
jbe
arpl
cmp
sub
insl
stos
jmp
idivb
lret
aad
out
mov
mov
xchg
je
je
aad
xor
mov
out
xchg
cs
jmp
lret
push
out
inc
loope
les
mov
ret
xchg
addr16
adc
xor
inc
jb
pusha
test
mov
int
leave
stos
push
lock
add
int3
inc
cwtl
test
push
mov
clc
imul
xor
scas
push
jg
adc
das
push
les
or
push
mov
mov
push
stc
cmp
or
mov
fisttpll
xor
pop
jno
cmpsl
cltd
inc
aam
lret
push
jp
sbb
mov
inc
cmpsl
test
in
mov
inc
and
call
ds
je
jns
loopne
jle
push
sbb
adc
aas
mov
pop
cmp
popfw
scas
adc
adc
push
addb
sbb
sub
jb
jb
mov
inc
mov
dec
out
add
lods
adc
or
sbb
and
dec
std
mov
inc
js
xchg
ret
sub
and
cmpsb
in
sar
cmp
out
mov
sbb
lds
mov
arpl
mov
data16
push
ja
outsb
stc
fucomip
mov
pop
sbb
push
in
out
test
xlat
sbb
mov
lea
dec
xchg
adc
inc
loop
jo
inc
pop
repz
xor
fimuls
cmp
daa
xchg
das
ljmp
les
xchg
jns
repz
push
cmpsl
and
loopne
mov
jp
add
jmp
dec
leave
ljmp
jmp
pop
sbbl
dec
cmp
fstpl
push
dec
mov
js
and
loope
sbb
je
lret
out
int3
stos
inc
or
jmp
out
pop
mov
cmp
jb
rcrl
push
sbb
loop
mov
adc
dec
stos
scas
jnp
jl
std
int
es
lods
jnp
stos
mov
jno
push
test
repz
xchg
imull
xchg
pop
mov
mov
imul
movsl
scas
sbb
clc
cmpsb
xchg
and
jb
xor
das
xor
xor
mov
xchg
pushl
inc
add
js
inc
and
xor
add
mov
out
add
addr16
stos
pop
xlat
dec
push
jb
loop
ficoml
pusha
pop
jmp
push
enter
std
sbb
xchg
cmp
cmp
mov
push
mov
cmp
mov
cmp
repnz
pop
add
xchg
mov
in
aad
cmp
or
and
out
loopne
inc
or
mov
or
lret
inc
enter
xchg
sub
incb
sbb
fisubl
fcoml
fsubs
sbbl
ror
xor
mov
pop
sub
adc
test
test
inc
jno
xchg
pop
jno
xchg
imulb
in
cli
test
or
rorl
je
sbb
aam
sbb
data16
filds
repz
cltd
xor
popa
dec
lds
cmpsb
sub
test
push
cld
fcmovu
in
fistpll
push
nop
sti
shrl
sbb
and
sub
nop
orb
call
mov
add
or
xlat
out
shl
pushf
cmpsl
cltd
ja
imul
inc
insl
push
stc
push
pop
inc
lock
sbb
clc
pop
jnp
scas
push
xor
mov
and
roll
dec
inc
dec
test
jo
out
sub
dec
sub
sbb
adc
cmpsl
adc
xor
adc
and
inc
jl
aas
dec
or
dec
repz
out
cmp
dec
adc
js
push
xchg
jg
xchg
xchg
scas
jnp
aas
in
inc
test
jnp
mov
mov
push
outsb
ljmp
mov
cmp
loop
jge
out
inc
hlt
test
cmc
cmp
dec
adc
movq
or
cmp
lcall
pop
push
mov
xchg
mov
cmc
jae
or
cld
cwtl
push
shlb
adc
in
loop
filds
xchg
andl
mov
int3
xor
jnp
loopne
pop
xor
aas
push
fwait
inc
inc
mov
lea
roll
or
xor
pushf
mov
or
push
mov
mov
mov
jle
xor
jge
je
addr16
sahf
xchg
jb
cmc
mov
pop
inc
ss
addr16
outsb
inc
clc
ja
push
mov
xlat
dec
cli
add
cltd
fistpll
push
mov
repnz
xchg
push
nop
inc
hlt
daa
sub
ret
pop
testb
in
fldenv
push
and
push
out
jne
xlat
push
into
in
sbb
loope
clc
mov
dec
jge
pop
shr
dec
mov
inc
das
es
fldcw
dec
sbb
lahf
ss
stos
mov
sbb
xchg
les
xor
dec
mov
fcompl
sbb
int3
fwait
pop
enter
stos
iret
pushf
seto
dec
push
mov
loope
sub
inc
pushl
mov
mov
pop
pop
inc
fstl
lea
into
scas
add
xchg
jge
mov
adc
mov
add
jne
lds
mov
movsb
dec
or
sub
cmp
int
fists
mov
aad
mov
fldenv
scas
inc
xor
jo
movsb
dec
push
pushw
adc
daa
dec
cmp
out
push
push
lret
lahf
sub
test
lds
push
push
mov
or
les
mov
inc
adc
mov
dec
jg
mov
insb
and
bound
mov
outsl
jmp
loope
ffree
ljmp
inc
sbb
jno
jmp
push
es
mov
cmp
xor
push
jp
xchg
inc
push
scas
dec
ja
xor
es
inc
push
xchg
insl
adc
cmp
stos
xchg
jp
push
icebp
icebp
xor
cmp
cli
daa
xlat
repz
enter
fnstenv
xor
ret
fisubrs
inc
shr
jl
cs
mov
adc
in
cmp
sbb
addl
pop
lea
adc
pop
aam
je
movsl
call
adc
test
mov
insb
popa
jg
jl
scas
sbb
pop
add
pop
out
stos
shll
and
or
dec
outsb
sti
fldenv
out
fisubrs
rcrb
pop
pop
fwait
push
dec
call
mov
and
inc
mov
sub
inc
sub
push
fdivr
je
add
inc
repz
mov
cmp
flds
test
jns
pop
cmpsl
jo
pop
and
cltd
cmpsb
mov
dec
jge
clc
enter
andb
int
stc
cmp
and
imul
es
fbld
clc
jb
push
jbe
sub
fldt
stos
xor
add
jne
jp
cmc
incl
jns
lahf
in
mov
shll
mov
pminub
fsubl
es
subl
sub
ss
mov
dec
mov
test
jmp
sbb
pop
mov
fwait
or
adc
andl
insl
repnz
cmp
idivl
repz
in
or
dec
mov
cmp
clc
lds
hlt
in
dec
clc
cwtl
and
icebp
mov
hlt
out
nop
cmc
xlat
cmp
dec
in
mov
stos
arpl
insb
int3
mov
fimuls
popf
inc
add
adc
cmp
fistpll
inc
cmp
pop
fimuls
rcl
pop
cmp
iret
jae
rcrl
fsts
and
mov
pop
cmpsb
add
aaa
fwait
sbb
cmp
ja
and
mov
xchg
in
dec
jne
mov
xor
adcb
ljmp
mov
enter
test
cli
insl
lods
pusha
or
mov
out
sti
shl
cmp
and
and
xor
and
insl
aas
mov
fdivrs
aaa
sbb
mov
push
and
cmpsl
and
and
cld
fs
inc
sti
mov
jle
mov
jle
rorb
pop
push
outsb
sub
std
fxch
cwtl
enter
or
mov
test
sbb
lahf
inc
out
es
movsl
js
ret
jo
dec
sbb
jle
ret
dec
nop
jle
pushf
es
mov
or
jmp
adc
sbb
mov
rcl
pop
orl
mov
and
outsl
mov
or
adc
mov
mov
movsb
lea
cmp
movsl
fisubrl
add
scas
xchg
pusha
lods
dec
push
rcrl
shlb
lret
jno
inc
xchg
inc
xchg
push
mov
or
shrl
cltd
rorb
imul
and
or
rcrb
or
mov
dec
cli
pop
pop
in
mov
dec
mov
jge
jg
lret
pusha
dec
jmp
ficoms
ret
sbb
mov
push
leave
pop
mov
xor
add
stos
movsl
data16
in
mov
inc
imul
in
pushf
enter
cltd
pop
mov
movsb
lahf
cmpsb
lds
push
and
cmp
and
inc
addr16
jl
cmp
subb
xor
aaa
outsl
push
icebp
addr16
repnz
and
mov
inc
int
adc
pop
enter
sti
enter
xor
sub
ret
pop
pop
mov
push
fwait
das
sub
push
lcall
stos
sub
or
inc
sbb
mov
pop
iret
sbb
add
mov
sbb
cmp
in
fadds
push
or
data16
inc
add
inc
outsb
xchg
mov
imul
hlt
push
cmp
in
je
mov
xor
ret
push
in
and
ja
loop
testl
lret
xchg
ja
sub
scas
add
sbb
ljmp
int3
sbb
mov
insb
mov
mov
lret
movsb
adc
sub
nop
sarb
test
and
fisubl
xlat
leave
mov
scas
dec
das
mov
lds
movsl
mov
rorb
xor
call
push
mov
xchg
sbb
mov
push
dec
xlat
mov
mov
cwtl
ja
mov
push
sub
add
dec
std
leave
popa
fucomip
jno
mov
aas
add
mov
idivb
in
sbb
jge
jge,pt
add
call
adc
in
push
addb
ds
roll
scas
in
add
jb
in
test
mov
cmp
into
push
es
popf
push
sahf
fdivs
push
jnp
cltd
les
pop
mov
test
adc
movsl
mov
rcl
push
sbb
icebp
inc
lea
pop
adc
lret
js
push
in
bound
pop
mov
dec
shlb
fmull
jae
mov
shr
cmp
and
imul
mov
fimuls
mov
pop
in
mov
testl
pop
jb
or
lcall
stc
int
push
inc
adc
dec
popa
mov
outsb
dec
cmpsb
fstl
out
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
pop
mov
es
imul
jbe
cmp
inc
mov
cmpsb
ja
movl
pop
ss
aad
outsl
jno
incb
mov
shll
and
push
mov
push
arpl
xor
and
adc
add
icebp
adc
shll
jne
dec
jno
popa
test
inc
movsl
xor
and
adc
add
icebp
mov
ret
shrl
mov
push
jno
inc
cmpsb
and
and
xor
push
inc
shll
inc
mov
testb
mov
testl
stc
or
sbb
inc
cmp
mov
mov
lcall
mov
lcall
mov
mov
in
jae
pop
test
ds
xchg
je
inc
mov
pop
xor
stos
cmp
adc
and
enter
adcl
mov
dec
jmp
ret
fs
push
enter
addw
jo
imul
popa
mov
add
ljmp
lcall
fs
and
mov
mov
add
roll
and
xchg
jne
divl
popa
sub
xor
and
adc
add
xchg
adc
xchg
lock
sub
add
cmc
and
add
mov
pusha
stos
je
jno
xchg
inc
mov
orb
ljmp
hlt
push
lock
inc
xchg
lcall
xchg
data16
xchg
pop
movsb
dec
hlt
sbb
gs
popa
test
inc
movsl
xor
and
adc
add
icebp
adc
shll
jne
gs
popa
test
inc
movsl
xor
and
adc
add
icebp
adc
mov
cmp
pop
lods
push
cmc
add
out
fdivrs
add
loopne
pop
jg
push
rorl
xchg
adc
jmp
je
popf
mov
fs
jnp
cs
pop
xor
mov
lods
movsl
movsb
jnp
mov
adc
mov
in
jl
push
add
test
aas
mov
jge
addr16
or
sbb
and
loopne
push
divb
mov
ljmp
push
pushf
loop
lea
inc
das
xchg
and
mov
movsl
mov
xor
cmp
rcll
js
daa
mov
ljmp
mov
es
dec
icebp
mov
mov
mov
frstor
test
sbb
pop
jle
insl
lods
adc
movsb
inc
int3
sub
fnstsw
in
sbb
bound
push
fildll
adc
jge
adcl
rorb
scas
in
mov
xchg
push
lods
mov
cltd
or
dec
rcll
mov
mul
dec
jnp
movl
dec
and
call
out
jp
pop
push
in
subl
mov
daa
dec
aas
bound
mov
stc
cmp
xchg
push
mov
cs
mov
call
inc
imul
mov
stos
jg
mov
cmp
es
push
iret
or
push
mov
xor
imull
pop
sub
or
ret
mov
mov
pop
js
pop
or
jmp
fsubrp
dec
insl
inc
in
add
addr16
sarb
cli
shrb
pop
sarl
mov
or
es
xchg
shll
cld
push
xchg
sbb
dec
mov
cltd
idivb
mov
int3
push
sbb
or
outsb
pop
fcoms
dec
xchg
xchg
mov
ret
mov
ja
stos
rorb
les
in
and
in
jmp
dec
scas
ds
mov
inc
inc
adc
jmp
out
ja
xchg
sub
cs
es
mov
dec
inc
jecxz
cmp
leave
sub
cmp
cli
into
ror
push
ficomps
lahf
fwait
xchg
js
lahf
fwait
xchg
test
mov
popa
ficoms
nop
rcrb
shrl
adc
icebp
pop
ret
cmp
xchg
jbe
insb
pop
js
xor
das
or
out
cs
and
iret
xor
mov
dec
dec
popf
inc
lcall
mov
inc
lods
mov
jne
sub
pop
xchg
mov
cmc
add
xchg
mov
decl
xor
loop
xor
jg
push
sbb
inc
jne
mov
cmp
mov
adc
imul
in
inc
mov
pop
outsb
jmp
xchg
inc
inc
mov
imul
lods
dec
adc
es
add
in
add
sahf
xchg
shl
or
scas
clc
dec
jbe
mov
shlb
loop
cs
and
inc
inc
add
and
cmp
cmc
inc
sub
adc
push
cmp
jo
or
or
push
pop
push
and
jne
lods
jmp
in
jns
or
popf
mov
stos
sbb
push
js
pusha
xchg
jmp
sub
repnz
cmp
inc
and
or
or
insb
mov
cmp
lods
push
jo
inc
test
or
inc
sti
ficomps
pop
scas
xchg
push
pop
add
sbb
cmp
call
pop
lret
cmp
aaa
cmp
mov
je
dec
repnz
xor
cli
inc
js
insb
daa
shl
sub
xor
inc
pop
loop
clc
xchg
xorb
int3
insb
jge
cmpsb
icebp
mov
lods
int
aad
jne
push
roll
stos
mov
loope
loope
inc
out
insl
jbe
lods
popa
fcoms
add
mov
inc
data16
lods
cmp
iret
test
jne
sbb
cmpsl
xchg
sbb
mov
ret
mov
push
xor
sub
imul
inc
mov
xor
push
dec
cmc
cmp
negl
jmp
leave
leave
xor
in
popa
push
adc
push
or
xor
clc
outsl
lock
outsl
mov
ja
aad
jle
shrl
inc
and
cmp
sahf
mov
enter
mov
xchg
hlt
stos
adc
repnz
loope
dec
mov
pop
add
fidivs
mov
fnstsw
mov
xor
sub
ret
outsb
mov
iret
imul
addr16
icebp
lock
pusha
roll
cwtl
push
aas
add
scas
sub
jnp
andb
xchg
and
into
add
or
xor
daa
mov
outsl
xor
lea
pop
push
bound
mov
in
push
push
loop
pop
adc
mov
inc
int
std
lret
jo
aam
icebp
and
adc
nop
xchg
test
pop
jbe
push
or
xchg
inc
lock
cmpsl
addb
cwtl
outsl
xchg
cmp
popf
jo
cwtl
add
sbb
js
cmp
mov
push
cmp
mov
and
add
fadds
xor
mov
xor
and
shlb
loope
dec
lret
loop
shlb
pop
insl
dec
cs
stos
fistpll
jl
adc
sub
sbb
loope
and
ja
cmpsl
cmp
imul
ss
cmc
push
popa
in
icebp
mov
stc
in
test
and
fst
jecxz
nop
repz
jno
iret
aaa
jmp
sub
xchg
add
repnz
shlb
push
ror
adc
add
xchg
divb
mov
jge
rorl
mov
xchg
xchg
test
es
sbb
in
dec
aam
in
daa
les
adc
inc
cmp
and
jecxz
js
mov
inc
cli
popa
mov
adc
ss
xchg
cli
loope
sbb
cmp
int
mov
inc
in
aad
xchg
cmp
aam
push
sbb
sbb
push
nop
jmp
lea
sbb
and
inc
push
test
inc
popa
inc
lahf
pop
outsb
xchg
add
sahf
cmp
cmp
inc
add
lret
lds
inc
pusha
pop
add
clc
or
test
push
mov
jne
jp
inc
fs
sbb
scas
dec
adc
adc
mov
movsl
aas
arpl
mov
inc
jnp
or
gs
fisttpll
jo
lock
lock
aaa
mov
cld
add
adc
push
mov
fwait
lds
mov
cmp
popa
inc
push
sbb
fxch
mov
cmc
lcall
bound
jmp
dec
mov
pop
pop
pop
pop
mov
xchg
jb
std
ror
scas
shlb
dec
dec
clc
lods
dec
pop
scas
inc
or
dec
push
fcomip
push
pushf
es
or
je
or
subb
dec
jmp
int3
add
jo
sub
xchg
loopne
cmpb
xor
pop
test
test
sbb
cld
outsl
pop
xor
rolb
mov
popa
mov
imul
jne
jle
andl
inc
mov
sbb
cmp
mull
inc
jle
adc
xor
push
pop
mov
bound
xor
adc
cmp
or
lret
mov
jae
jb
aam
test
das
and
test
xchg
inc
add
inc
ret
mov
out
adc
dec
pop
cmp
xchg
xlat
add
push
in
add
insl
test
and
push
xor
jnp
shrb
sub
add
test
or
sub
sub
push
push
gs
push
sub
call
ret
mov
repz
in
mov
push
fs
loope
jmp
mov
jns
outsb
xchg
xchg
je
stos
mov
pop
push
dec
inc
push
dec
fbstp
mov
repz
mov
test
shlb
inc
and
addr16
push
adc
push
cmp
add
sbbl
sbbl
mov
mov
call
mov
fildl
or
push
pop
mov
in
mov
imull
adc
sti
push
jecxz
repz
xlat
nop
mov
in
loopne
aaa
sti
stc
cli
and
xsavec
sub
decb
mov
clc
xchg
sti
lods
mov
fisttpl
outsb
or
pop
addr16
xchg
sbb
pop
sub
push
xchg
ss
shll
pop
dec
mov
addl
hlt
jo
stc
mov
xor
jp
mov
int3
add
call
pop
adc
subl
inc
sub
sbb
aaa
xchg
ja
pop
repz
loopne
in
push
divb
cltd
lods
adcl
cwtl
pop
mov
mul
jp
push
sarb
and
ds
stc
lret
sahf
cmp
push
jne
daa
xor
inc
mov
xchg
orb
jp
push
jns
data16
test
ret
cmpsl
clc
add
in
jb
dec
int
fwait
cmpsl
incl
mov
fbld
stc
insl
test
es
fnsave
mov
clc
leave
mov
lcall
stc
mov
addr16
ja
data16
sti
insl
leave
mov
jl
ret
inc
repnz
push
repz
mov
mov
mov
xor
inc
popa
jge
iret
lret
jp
clc
cmp
or
mov
add
test
enter
jb
sub
add
test
xor
decb
jge
aaa
mov
adc
ret
xchg
mov
xor
xchg
push
lods
adc
cmpsl
mov
cmp
repnz
gs
enter
sti
sarb
fwait
pop
test
mov
es
scas
outsb
lds
xlat
mov
adc
popa
pop
idiv
pop
divl
xor
ret
mov
outsb
fists
or
add
jbe
sub
sub
adc
mov
dec
adc
lds
lcall
push
enter
bound
add
shr
loop
xor
and
shll
mov
mov
sub
repz
stos
xchg
js
mov
fisttps
loopne
insb
sbb
es
xor
pusha
jbe
inc
or
jmp
cmp
mov
pop
cld
push
pop
imul
imul
ja
push
push
inc
mov
sub
xchg
cli
pushf
mov
add
jne
and
and
sub
out
call
mov
les
icebp
rolb
mul
das
adc
xchg
mov
sbb
inc
enter
js
push
pushf
add
jae
inc
popa
xor
dec
push
sub
lds
add
or
popa
ss
mov
cmc
in
push
insl
push
push
xor
stos
clc
nop
test
xchg
and
in
xor
stos
cmp
sub
lahf
repnz
push
rclb
insb
pop
dec
negl
cmp
mov
cmp
in
adc
xchg
mov
or
sti
loop
in
aaa
jle
es
xlat
pop
arpl
and
mov
nop
int
mov
pop
pop
fists
icebp
addr16
push
pop
out
or
lds
dec
jae
mov
adc
shlb
sbb
test
cld
out
cmp
loope
cmp
or
in
int
in
shrl
out
sbb
arpl
sbb
xchg
sub
aam
sub
rcrb
into
aaa
mov
insl
cwtl
xchg
add
in
cmp
jno
mov
or
sti
lcall
fldenv
push
loop
iret
loope
in
dec
shll
sub
or
mov
call
mov
daa
adc
jge
mov
jnp
adc
sbb
add
idivl
add
dec
out
lret
jae
sub
jle
sub
arpl
jecxz
push
or
pop
and
test
sahf
ficomps
xchg
les
mov
jbe
xlat
les
movsb
mov
movsb
xor
aas
mov
aam
shlb
xor
cli
mov
or
cmp
cmp
push
daa
add
jmp
pop
xor
testb
cmp
aaa
push
cmpsl
inc
inc
add
mov
js
iret
rcrl
mov
in
adc
add
inc
jbe
and
cmp
test
out
stc
mov
jne
mov
or
or
mov
inc
fucomi
cmp
xor
cmp
pusha
ret
inc
fbstp
mul
pop
imul
enter
add
xchg
gs
lcall
dec
icebp
sub
or
xchg
dec
mov
and
cs
cmp
in
mov
sbb
or
cwtl
add
push
and
iret
xchg
dec
lret
cmpsb
pop
jmp
js
cwtl
stos
jne
xchg
test
mov
ja
loop
jae
xchg
in
cmp
jl
add
lods
sub
stc
aam
in
jl
test
scas
mov
dec
mov
pop
in
adc
lods
adc
in
or
aas
mov
fninit
shlb
mov
dec
cs
dec
std
add
pop
jne
jle
adcb
fisttps
pushf
jnp
out
pop
adc
mov
dec
fnstsw
pop
add
mov
lahf
dec
push
ja
xor
mov
test
inc
dec
inc
sbb
sub
flds
xchg
cmp
dec
pop
push
pop
test
cs
mov
loopne
sti
lahf
sub
add
inc
mov
cmp
xor
out
je
xlat
push
lea
adc
pop
cmc
insb
sbb
insl
add
pop
or
sub
repz
std
inc
cli
fsts
xchg
das
inc
dec
sub
mov
in
enter
inc
mov
cs
out
dec
out
cs
pop
mov
inc
or
adc
das
movsb
cmp
cmp
mov
push
scas
lods
push
inc
sbb
push
rolb
out
rcr
insb
xchg
mov
add
repnz
cltd
pop
sbb
scas
inc
nop
lahf
xor
jmp
das
out
pop
xor
xlat
sub
stos
cmpsl
inc
out
add
adc
mov
inc
xchg
push
ljmp
sbbb
aas
insb
iret
in
mov
sbb
fmul
mov
sub
mov
std
pushf
sbb
sub
mov
jge
scas
inc
fwait
inc
mov
push
mov
xor
cli
bound
xchg
jle
call
mov
adc
addl
cmpsb
ljmp
out
mov
push
stc
scas
xchg
addr16
addl
xchg
clc
into
cmc
add
outsb
les
negl
xor
and
fidivrl
inc
xor
hlt
sbb
pop
or
mov
or
adc
rorl
test
jne
lods
mov
fdivrl
int
inc
sbb
sti
mov
mov
dec
push
xor
xchg
and
int3
push
sbb
call
adcl
mov
mov
or
mov
ret
push
je
jle
cmp
hlt
insb
and
adc
loope
push
xor
push
push
aam
add
pop
mov
repnz
mov
pop
insb
push
lea
popf
jae
sub
rorl
inc
gs
enter
fsts
mov
inc
ret
push
and
mov
aam
sti
mov
daa
test
fldt
jno
mov
adc
or
push
inc
pop
cld
arpl
inc
aad
xchg
inc
jns
push
push
call
insl
pushf
jmp
movsl
jno
pop
mov
cmpsl
add
sbb
int
stos
xor
dec
rol
imul
out
or
cmpsl
adc
icebp
xor
movsl
ss
lahf
push
and
mov
inc
sahf
insl
mov
push
lea
mov
lea
xchg
cmp
filds
cmp
sbb
add
mov
or
pop
sbb
scas
nop
jae
lahf
in
mov
ja
xchg
into
pop
add
push
das
je
lea
scas
xor
out
test
xor
test
mov
imul
out
jo
sub
cmc
fdivrl
and
sbb
out
sbb
das
pop
lahf
out
test
imul
xchg
dec
mov
inc
fwait
xor
sub
shll
push
lahf
or
cmc
mov
mov
push
or
xchg
push
mov
out
enter
mov
lock
push
andl
and
movsl
inc
pop
mov
sbb
pop
mov
stc
scas
lahf
loope
repnz
out
aaa
inc
out
dec
sbb
pushf
test
leave
ficompl
test
into
push
inc
rep
repz
sub
adcb
scas
cmp
imulb
push
jl
and
sarl
es
imul
loopne
mov
lods
aas
cmp
lea
dec
nop
cmp
mov
push
mov
pop
cmp
xchg
mov
adc
mov
pop
or
dec
bound
or
and
lods
adc
xchg
fdiv
dec
xchg
inc
out
xchg
lock
outsl
mov
cmp
jbe
mov
push
sbb
imul
and
jae
lods
mov
outsl
pop
jle
and
mov
inc
lock
dec
add
call
add
sbb
xor
jge
and
cwtl
or
inc
test
mov
mov
pop
cmp
loope
mov
scas
jecxz
jno
pop
push
outsl
stos
iret
jp
icebp
cs
aam
aad
jmp
mov
pushf
cmp
mov
cmp
insb
dec
ret
and
or
clc
pop
andb
push
xor
shrb
loop
std
mov
fsts
add
push
push
push
out
stos
mov
shrb
inc
outsb
test
add
mov
adc
arpl
aam
out
xchg
divl
popa
sub
insb
std
sarl
mov
int
in
inc
xchg
fisttpl
hlt
sti
jnp
jge
pop
cmp
mov
gs
adc
push
xchg
mov
repnz
push
sub
imul
or
and
sub
repz
push
xor
aaa
ljmp
mov
dec
ja
sbb
not
pop
mov
jge
test
push
es
inc
aas
mov
fldlg2
cld
mov
jmp
test
fiaddl
nop
loop
fcmovnu
jg
iret
push
sub
shl
rorb
movsb
inc
push
cmpsb
sub
clc
ja
jle
mov
inc
cmp
jp
and
mov
or
in
xor
jo
push
dec
sub
addr16
xor
imul
jae
lds
sbb
jmp
pushf
into
into
inc
sbb
push
mov
int
int3
les
out
mov
lret
adc
test
pop
aam
xor
jge
mov
out
sub
leave
cmp
scas
pop
ljmp
jmp
cmp
jl
xchg
and
adc
jg
push
in
popl
aaa
loope
cli
inc
popa
cmc
ja
mov
pushf
sub
imul
jmp
jno
jae
xchg
femms
pop
fwait
dec
add
fsts
insb
loope
hlt
orl
shl
xchg
fstl
cli
push
add
push
lea
aaa
ret
xchg
outsb
add
pop
mov
push
pop
or
fwait
xchg
sbb
mov
movzbl
cs
sbbb
sbb
or
jle
xor
adc
push
cmp
cli
or
xchg
inc
mov
add
add
fbstp
or
and
int3
add
lret
push
cmp
xor
pop
lods
push
adc
imul
cli
nop
push
and
pop
pop
dec
xchg
dec
add
out
fbstp
xchg
pop
pop
outsb
or
fists
popa
and
jle
enter
arpl
pop
add
cmp
insl
es
int
cmp
add
jg
leave
sub
int
lahf
push
pop
and
and
sahf
je
jbe
xchg
aas
pop
xchg
jae
mov
adc
xor
dec
adc
or
sbb
and
adc
cmc
shl
inc
stos
cmc
andl
mov
inc
xor
lret
test
ficoml
pop
and
loopne
push
imul
sbb
cmp
xchg
adc
stc
sub
mov
aam
pop
movsl
repz
repnz
rcr
cmp
and
adc
push
sub
sbb
je
lret
lods
pushf
lret
lret
inc
adc
jmp
gs
subb
icebp
cmc
cltd
sub
jl
int
clc
leave
push
leave
hlt
xchg
lahf
addr16
mov
jno
ret
cmp
hlt
xor
xor
pop
jne
in
in
jmp
push
push
adc
mov
repnz
pop
cmp
cmp
inc
or
orb
mov
dec
xor
add
jns
lods
insl
out
cmp
push
dec
out
enter
mov
lret
sub
sbb
push
in
andb
inc
mov
gs
push
adc
inc
xchg
sbb
sub
mov
jb
jo
mov
inc
ljmp
test
addr16
mov
xchg
lret
aaa
arpl
and
xorb
add
mov
mov
gs
popa
test
inc
movsl
xor
and
adc
add
icebp
adc
shll
jne
gs
popa
test
inc
movsl
xor
and
adc
add
icebp
adc
or
sub
mov
gs
popa
adcl
and
adc
add
icebp
icebp
loope
rcl
shll
mov
movsl
mov
das
sti
mov
rolb
test
popf
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
cmpsl
jle
dec
xchg
bound
push
aaa
mov
push
fidivs
addr16
mov
cmpsl
jle
dec
xchg
cs
xlat
push
data16
out
daa
pop
into
pop
fidivs
mov
mov
cmpsl
jle
dec
xchg
cs
xlat
push
push
aaa
out
add
jnp
pop
mov
and
sub
call
es
ds
insb
cmp
test
xchg
push
or
cmpsb
xor
and
cmp
js
or
out
sub
cmp
lcall
mov
lret
outsb
scas
jae
and
pop
jl
xchg
mov
aaa
mov
mov
mov
inc
es
cmpsl
pop
std
xchg
rorb
loopne
adc
mov
jb
dec
sbb
ja
js
scas
cmpsb
out
push
cmpb
adc
xchg
xor
and
cwtl
mov
dec
jmp
repz
pop
or
xor
push
pop
pusha
call
lods
call
scas
ljmp
outsb
cmpsl
jle
dec
xchg
cs
xlat
push
push
aaa
out
daa
pop
into
pop
fidivs
addr16
imulb
aas
decb
pop
testl
dec
aaa
xchg
inc
call
stos
jg
jbe
testl
sbb
sub
pop
testl
jp
movsl
jbe
adc
rorb
cmp
xor
shrb
cmpsl
ss
cmp
cmp
push
push
aaa
out
daa
pop
into
pop
fidivs
addr16
mov
cmpsl
jle
dec
xchg
cs
xlat
push
push
aaa
out
daa
pop
into
pop
fidivs
addr16
mov
adcb
mov
inc
dec
mov
and
out
cmp
fidivl
add
sub
ret
aad
js
or
cmp
jl
mov
aam
mov
subb
push
popa
cli
loope
mov
xchg
xor
mov
jae
pop
sub
pop
je
into
mov
push
fwait
sbb
mov
xor
fisttps
push
xor
mov
clc
int
pop
cs
shrl
nop
test
out
aad
outsb
mulb
jmp
inc
mov
ja
mulb
sbb
into
adc
push
add
xchg
pmulhw
xchg
stc
jo
xor
and
cltd
xchg
pusha
pop
lods
int
mov
cmp
sub
mov
mov
fdivp
add
and
in
pop
addl
or
mov
jbe
and
or
rcr
mov
aam
xor
int
or
pop
push
sbb
aaa
lea
loope
xchg
test
out
sub
dec
sub
loope
add
aaa
push
dec
xor
push
imull
dec
ljmp
out
fdivp
imull
fs
mov
pushf
mov
push
scas
jmp
pop
mov
mov
xor
rcrl
rcll
sbb
and
fprem
popa
int3
pusha
xchg
fs
push
outsl
sub
imul
pusha
xchg
lret
cs
mov
sub
repnz
lcall
and
stc
aas
jmp
sub
adc
jo
or
inc
movsl
dec
lds
mov
mov
adc
daa
add
xchg
fnstenv
xor
push
jl,pn
fs
push
jp
movsb
push
dec
sub
add
jle
shrl
in
lcall
xchg
jmp
adc
enter
cmp
out
notl
sbb
jg
and
call
mov
inc
inc
sub
clc
pop
jae
adc
ror
int
jae
xor
and
ja
out
add
mov
mov
adc
add
out
movsl
out
and
mov
andl
sub
je
iret
mov
in
mov
adc
adc
imul
mov
sbb
jle
mov
sbb
xchg
sub
orl
jmp
xor
fwait
dec
adc
hlt
mov
inc
jecxz
cmp
cmpl
into
mov
sbb
cmp
popf
pop
push
inc
pop
jmp
mov
ss
loopne
cmc
movsb
stos
mov
lahf
je
js
or
aam
sti
loop
loopne
aas
pop
sbb
test
in
repnz
xchg
cli
jae
inc
lret
mov
rcrb
xor
mov
sbb
in
adc
jb
mov
das
mov
test
sbb
nop
jp
bound
mov
and
ds
xor
popf
fs
cmp
adc
mov
pop
dec
xor
and
sahf
in
mov
es
mov
call
fistpl
clc
das
mov
push
pop
in
push
and
popf
and
xchg
mov
mov
xchg
and
xor
incb
pusha
pop
fwait
stc
pop
fnstsw
mov
push
mov
jne
rclb
mov
shl
adc
pop
jge
cmp
sub
jbe
mov
das
pop
movsl
popa
adc
inc
jns
xchg
scas
test
clc
mov
push
out
xchg
addl
and
roll
or
sti
leave
cmp
js
sbb
aad
mov
mov
cmpsl
xchg
push
outsl
dec
or
mov
push
rorb
lock
out
sub
xchg
jns
push
fsubl
in
das
jns
pop
fnstenv
or
mov
sbb
js
adc
sar
lods
shr
mov
repnz
int3
jae
xor
and
adc
inc
shr
and
add
outsl
sarl
bound
dec
jge
push
mov
jge
mov
adc
lods
sub
jne
scas
cmp
dec
xor
or
in
out
push
gs
lret
push
and
cmp
dec
dec
push
push
lahf
xor
sub
push
adc
mov
jl,pt
imul
inc
jne
pop
sbb
and
in
pop
scas
push
fidivl
bound
sub
sbbl
addr16
scas
jb
rcll
inc
sbb
mov
inc
jae
fidivl
jge
inc
mov
pusha
or
cmpsb
pop
js
add
cmp
arpl
outsb
stos
jno
lret
sbb
xchg
and
test
push
adc
and
into
push
jb
fdiv
pusha
push
outsb
leave
jmp
ret
pop
sbb
adc
in
sub
jno
jge
rcrl
add
aad
jg
and
push
push
mov
aaa
fnstenv
nop
sbb
sub
movb
jg
push
and
into
dec
hlt
loopne
daa
imull
aaa
icebp
push
out
andl
mov
add
cmc
adc
loopne
or
mov
mov
ljmp
mov
int
insl
pop
push
outsb
iret
jl
mov
mov
aas
std
or
test
sub
mov
xor
pushf
sbb
fisttpll
and
inc
jb
call
mov
imul
mov
sub
out
jg
jae
and
cmpsl
cmpl
and
push
test
cmp
push
test
test
and
movsb
mov
jp
hlt
notl
mov
xchg
iret
mov
fwait
out
pushf
mov
divl
inc
and
or
iret
ljmp
sub
mov
imul
add
ja
fildl
lret
cmp
dec
and
inc
sub
addl
sbbl
rorb
stos
mov
jb
pop
pop
repz
mov
xor
push
pop
jmp
push
popf
test
pop
cmp
add
shl
dec
jp
and
inc
test
xchg
push
aad
pop
fs
sub
push
push
xor
shll
dec
js
std
loope
mov
or
and
imul
inc
test
inc
bound
daa
pop
jae
popf
cmc
pop
imul
fldl
add
pop
lret
fs
dec
and
in
call
push
xchg
lret
shll
mov
inc
lret
lret
add
popa
adc
decl
push
out
jno
mov
xor
vpsllw
fisttpll
bound
test
std
and
mov
or
loop
xor
pop
addl
mov
xchg
mov
inc
fwait
add
and
add
stos
push
lret
cwtl
sbb
push
cmp
cmp
mov
pop
sbb
in
jb
mov
movsb
pop
nop
mov
push
sub
mov
jmp
sbb
scas
xchg
add
outsl
loopne
ljmp
mov
lds
pushf
mov
dec
xor
repz
mov
dec
jb
mov
enter
mov
and
push
jne
jno
in
sti
sbb
shlb
inc
pop
nop
rclb
fwait
xor
jbe
fisttps
cmpsl
das
lock
push
cmpsl
aad
andb
push
stos
add
aam
lods
shrl
adc
sbb
lret
mov
daa
movsl
mov
push
mov
adc
jae
mov
out
xor
push
leave
mov
xor
loop
push
stos
ds
add
xlat
adc
inc
jb
leave
popa
pop
cmp
xchg
das
inc
push
test
mov
insl
push
insl
lcall
add
jne
movsl
loope
mov
ljmp
pop
adc
push
lods
mov
out
insb
mov
mov
sbb
insl
fisttps
pop
mov
inc
insl
push
adc
addr16
imul
rcrb
pusha
inc
xchg
cmp
stos
js
into
cmc
mov
cmc
pop
inc
add
dec
bound
mov
push
fwait
push
pop
xchg
lahf
sbb
loopne
pop
out
mov
inc
int
jb
pop
les
icebp
and
cmc
inc
pop
xchg
sbb
or
lret
lret
push
loope
mov
popa
loopw
jmp
popf
mov
sub
add
dec
imul
dec
shrl
in
pop
scas
jae
sub
pop
jmp
jle
mov
lea
je
frstor
xchg
rclb
clc
pop
call
lds
lret
xor
in
mov
arpl
stos
arpl
jne
cmc
test
ret
ljmp
fcoms
push
repz
out
inc
inc
xchg
dec
jne
adc
xor
pusha
push
lods
inc
inc
sbbl
arpl
mov
adc
cmc
jp
cmp
and
xor
fisubl
push
jns
and
lods
jle
fcom
insl
outsb
mov
pop
mov
mov
jbe
inc
xchg
pop
pop
jl
jb
js
sar
imul
cmp
dec
enter
cmp
jg
mov
test
pop
push
cmovg
pushf
dec
pushf
fxch
bound
pop
sbb
xchg
jae
jge
cmpsl
clc
pop
dec
cmp
cmp
ret
xor
das
aad
inc
shrl
or
sahf
subb
jo
insl
pop
push
gs
mov
push
mov
sub
adc
test
sbb
sbb
mov
xlat
pusha
int
rolb
pop
dec
leave
mov
xchg
inc
dec
popf
push
pop
adcl
mov
add
ss
jns
mov
js
jne
add
movsb
and
ljmp
insb
push
mov
pop
scas
mov
jno
jmp
movsl
and
hlt
out
add
fs
and
pop
inc
test
mov
sbb
dec
mov
push
xchg
jae
pop
and
jo
pop
aaa
xchg
andb
test
mov
mov
lahf
call
scas
ficoml
dec
xor
adc
cmpb
lds
lret
loop
stos
dec
jecxz
outsb
je
lcall
inc
xor
sbb
lods
pop
mov
add
mov
fdivp
dec
push
aam
jne
sub
pop
stc
into
sbb
fs
iret
sbb
scas
or
test
pop
sub
xchg
xor
mov
pop
mov
fwait
lods
test
cmpsl
cs
stos
lret
dec
lds
xor
shrb
mov
rol
jo
mov
nop
cmc
xchg
shll
pop
xchg
in
sti
pop
mov
insl
in
mov
cld
jo
test
jae
inc
les
lds
xor
xchg
adc
push
nop
cwtl
xorb
or
outsl
add
pop
jbe
aaa
popa
dec
mov
cld
mov
in
xor
cwtl
insl
dec
and
or
orb
sbb
data16
flds
in
jns
repz
xor
add
std
cmc
mov
lret
pop
add
inc
mov
push
in
mov
jns
mov
test
lret
or
leave
and
sbb
jmp
test
loope
mov
out
aam
or
movl
pop
sub
outsl
pop
and
xchg
cmp
xchg
dec
dec
repnz
lcall
xchg
push
int
cmp
push
push
or
mov
dec
xchg
int
or
test
push
xor
stos
and
and
xchg
jnp
js
shlb
mov
push
cmp
fwait
ret
mov
cmp
outsl
dec
or
jae
int3
lahf
inc
jmp
dec
lahf
testb
sbb
idivb
jg
aas
fsubp
push
leave
adcb
cwtl
pop
push
notb
pushf
or
push
push
out
lcall
stc
fidivs
adc
sub
mov
ret
pop
fstl
lods
sbb
sar
cwtl
stos
mov
test
xchg
cmp
mov
sub
inc
fwait
dec
lods
adcb
jns
sbb
ret
mov
shll
jmp
arpl
pop
insb
ljmp
sbb
orl
js
fiaddl
mov
pushl
pop
aas
je
cltd
xchg
aam
dec
out
sbb
leave
mov
xchg
leave
sbb
inc
cmp
sbb
sub
xchg
mov
addr16
xor
adc
frstor
lret
xchg
adc
cld
xor
mov
add
imul
pop
shrb
xlat
fnstenv
cld
inc
xchg
cmp
push
cld
mov
jge
outsb
mov
push
orl
xchg
sti
push
mov
push
scas
push
or
push
dec
pop
add
mov
and
and
loopne
xchg
cmp
and
out
adc
mov
mov
sbb
jecxz
outsl
pop
push
mov
jb
in
fsub
shrb
and
mov
sbb
push
pop
mov
push
inc
xor
xor
and
cmpb
test
or
loope
and
xchg
or
pushf
jnp
sbb
std
popl
sti
lods
ja
mov
cmp
jge
pushfw
mov
stc
pop
mov
pushf
jae
lret
ret
lds
shll
inc
pop
into
cmp
out
add
mov
cmp
add
or
lahf
rcll
aam
jae
sbb
inc
jge
movsb
adc
or
adcb
ds
sub
jmp
xchg
das
mul
xchg
xor
je
imul
mov
push
jmp
divb
adc
xchg
push
test
subb
stc
inc
sbb
lret
jle
inc
xor
mov
cmpsb
mov
push
and
push
dec
clc
mov
jno
sbb
or
dec
clc
rolb
jbe
imul
sub
pop
xor
pop
mov
xchg
out
cmp
ds
add
das
cs
out
mov
xchg
push
pop
stc
jle
inc
push
xchg
sbb
das
incb
push
xchg
cmp
andb
push
dec
dec
sbbb
jecxz
in
mov
xchg
shrl
cwtl
push
mov
add
loope
jp
push
xrelease
xor
mov
jecxz
in
add
add
cmp
test
push
pop
xor
ss
jae
call
adc
adc
cwtl
fdivrl
les
lret
jmp
mov
std
gs
nop
outsl
jne
add
xor
pusha
fnsave
jg
mov
jg
push
ds
mov
cltd
mov
jo
out
inc
mov
arpl
insb
add
test
daa
xor
xchg
or
pop
and
inc
das
cmp
popa
sbb
jmp
addb
out
fsubrl
pop
cli
loopne
mov
or
in
cmpsl
jno
mov
ds
jmp
notl
jne
fcmovu
pop
sbb
lret
cwtl
fsubrs
arpl
fildl
sbb
mov
orl
pop
xor
cmp
pop
mov
rcr
and
xor
sbb
aas
adc
inc
mov
mov
out
in
push
shl
mov
in
bound
xchg
cmpsl
repz
and
imul
mov
test
and
dec
lcall
xchg
add
push
scas
mov
adc
decb
sub
xor
js
adc
push
ficomps
or
sbb
dec
or
mov
and
adc
mov
or
dec
orb
sub
cmp
dec
jno
jo
jl
lret
pop
inc
int
fwait
inc
mov
mov
sahf
jns
xor
adc
addr16
and
mov
sbb
adc
adc
jns
lds
nop
es
push
fistps
adc
addl
inc
cmpsb
icebp
pop
shr
scas
pusha
dec
lret
mov
cmp
rcll
into
cmp
dec
and
das
daa
outsb
adc
mov
dec
lea
fcoml
fscale
cld
xchg
mov
jg
orb
add
xchg
ds
mov
pop
push
sbb
lret
pop
leave
jne
aam
xor
sbb
lock
adc
mov
inc
dec
and
stos
sub
das
push
push
roll
ds
es
mov
jns
xchg
idiv
mulb
js
popf
pop
and
movl
ret
add
mov
out
sbb
push
cmpsb
mov
mov
ret
test
mov
out
mov
mov
stos
ss
sbb
jno
js
adc
test
xor
out
sub
adc
add
and
nop
rcrb
mov
inc
dec
push
add
xchg
push
jb
sti
and
fcmovu
into
cmp
lret
or
jns
ret
jo
or
in
push
js
mov
add
int
ljmp
push
inc
pop
js
and
out
je
mov
add
jmp
and
subb
out
add
add
pop
cs
mov
mov
or
mov
cmpsl
mov
insb
dec
cmpsl
les
andb
push
lea
push
ja
adc
adc
gs
sbb
mov
addr16
pop
pusha
ret
mov
popa
push
arpl
fistpll
mov
fbstp
and
jne
inc
mov
inc
stc
jecxz
pop
ficomps
test
in
in
mov
adc
pop
test
jbe
cmp
pop
jle
dec
das
pop
add
orb
mov
rorl
pop
mov
push
ds
mov
and
push
jecxz
repz
pop
ljmp
out
and
repz
mov
sbb
mov
rclb
adc
loop
jo
push
loope
ret
hlt
out
xchg
adc
jg
out
arpl
enter
pushf
cmp
ljmp
mov
xlat
mov
pop
jl
mov
push
pop
inc
arpl
and
andps
push
lods
sahf
aaa
jbe
pusha
push
pusha
rorl
mov
imull
jno
mov
mov
or
pop
adc
cltd
cmp
fidivrs
add
jge
or
and
or
lock
mov
or
jecxz
mov
pop
xchg
outsl
pusha
outsl
add
sub
pop
jnp
int3
xchg
rol
insb
xchg
aad
outsb
ja
mov
jno
addr16
lods
adcl
bound
push
aaa
xlat
cmp
into
out
push
add
xchg
mov
push
fs
lea
cli
add
lret
mov
mov
sbb
data16
iret
es
push
clc
xor
push
xlat
out
loop
cmp
xchg
imul
loopne
jae
aas
sub
or
popf
or
popl
add
leave
mov
pop
pusha
lcall
sbb
sub
adc
nop
push
leave
hlt
xchg
add
int
es
add
xchg
daa
sub
mov
xchg
mov
push
enter
adc
or
jecxz
mov
fidivl
std
insb
cwtl
imul
cmpsb
inc
jb
in
add
jno
das
jns
xor
pusha
sti
repnz
jp
xchg
add
cmp
rorb
jg
mov
push
scas
push
sbb
jge
test
jbe
mov
divl
int3
ret
shll
stc
dec
loop
mov
js
je
cmpsl
adc
daa
leave
push
push
fsubrl
ja
idivl
and
xor
lahf
or
mov
xchg
dec
push
sub
mov
cmp
xchg
cmpsl
repz
imul
sub
pop
mov
repnz
xchg
aas
insb
push
dec
rcr
add
je
dec
movsb
fcomi
jb
inc
and
xor
and
mov
xchg
push
dec
fsubrl
and
add
sets
ja
xchg
push
sbb
lcall
sub
out
imul
stos
mov
fdivl
or
pop
cmp
mov
dec
test
lds
subb
sahf
outsb
pop
mov
mov
test
cmp
cltd
adc
movsl
mov
in
xor
sbb
test
inc
mov
cltd
jne
ret
xor
push
jne
or
push
adc
adc
push
in
cmp
out
jl
or
push
sbb
jp
int3
sub
jns
push
lods
inc
fistpl
cmp
push
push
popf
sti
popl
and
aaa
sti
ss
and
sub
clc
sahf
xchg
addl
and
xorl
nop
mov
push
inc
ret
mov
mov
aaa
adc
loopne
push
and
imul
sbb
dec
lret
in
sbb
dec
loope
push
jmp
add
sahf
stos
mov
out
es
cmp
dec
and
lcallw
sub
lods
out
stos
repnz
mov
cmp
inc
pop
lods
loop
mov
pop
push
aam
xchg
dec
xchg
cs
xlat
push
push
aaa
out
daa
pop
into
pop
fidivs
addr16
mov
cmpsl
jle
dec
xchg
cs
xlat
push
push
aaa
out
daa
pop
into
pop
fidivs
addr16
mov
daa
jle
dec
xchg
cs
xlat
push
inc
push
aaa
out
daa
pop
into
pop
fidivs
addr16
mov
cmpsl
jle
dec
xchg
cs
xlat
push
push
aaa
out
daa
push
mov
es
inc
daa
jno
popa
mov
mov
test
or
sbb
sub
cmp
dec
push
pop
pop
push
jp
mov
mov
ljmp
pop
pop
aaa
cmp
dec
push
pop
inc
push
jp
mov
mov
ljmp
pop
pop
inc
adc
and
adc
ret
xchg
lcall
adc
push
popa
hlt
add
or
push
loop
imul
cld
cmp
pop
cmpsb
aaa
pop
loopne
pop
cmp
sti
or
cld
stos
xor
cmpsl
aaa
mov
int3
imul
jb
adc
inc
xor
xchg
or
xchg
lock
or
jo
aad
push
out
push
shll
mov
xchg
mov
mov
lret
push
xchg
mov
and
adc
add
pop
push
js
jne
out
jnp
popa
sbbb
sarl
jmp
sti
mov
push
out
cmp
mov
lahf
pop
add
adc
shlb
sbb
les
call
jg
jbe
pop
mov
bound
addr16
lcall
xlat
fcmovb
ljmp
pop
sub
cmp
dec
push
pop
inc
push
jp
int3
cli
repz
iret
icebp
cmpsb
mov
mov
outsb
dec
pop
push
dec
das
cmp
ds
add
mov
lock
cli
out
push
sbb
popa
jg
das
cmp
sub
add
jecxz
repz
ret
mov
ljmp
pop
sub
cmp
dec
push
pop
inc
push
jp
mov
mov
ljmp
pop
sub
cmp
dec
push
pop
inc
push
jp
mov
sahf
jbe
adc
lahf
outsb
out
es
rolb
fcomps
cwtl
push
test
jmp
add
sarl
push
subl
in
imul
imul
pop
inc
jg
sub
add
negl
dec
add
push
sub
idiv
rcr
jb
xchg
daa
mov
or
mov
fdivs
push
addr16
repnz
lret
sbb
lea
mov
imul
mov
int3
ffreep
fs
lahf
les
dec
faddp
xor
sub
inc
in
push
push
cmp
push
out
adc
fildll
and
mov
in
jb
inc
pop
push
sbb
pusha
andl
arpl
mov
mov
push
nop
push
sub
or
fidivrl
jb
mov
adc
insl
cld
mov
mov
and
popf
addr16
sbb
push
lds
mov
in
leave
popf
adc
insl
push
cmc
sar
mov
cmp
sbb
mov
lahf
iret
mov
push
imul
or
aas
pop
sbbb
mov
xchg
sub
jae
push
arpl
mov
pusha
jecxz
inc
gs
js
xchg
mov
jmp
mov
test
adc
leave
fisttps
sbb
outsb
cwtl
or
push
scas
xchg
push
or
repz
dec
add
add
jno
syscall
inc
cmpsl
jge
ret
and
dec
cwtl
mov
cld
xor
sbb
leave
sub
jbe
push
jecxz
add
adc
test
in
cmpsb
ljmp
xor
sub
mov
mov
out
nop
sbb
sar
ror
loope
ljmp
ret
hlt
adc
mov
cli
mov
mov
mov
mov
or
jnp
add
lock
aas
sub
cmp
aad
psllw
mov
out
repnz
push
xchg
sub
in
repz
xchg
lods
lcall
and
sbb
lcall
xor
xchg
jmp
inc
pusha
bound
inc
push
loope
andl
aad
jecxz
or
mov
pop
int3
lods
jnp
or
inc
cs
dec
mov
push
aas
aam
lock
pop
push
ljmp
ffreep
je
aaa
data16
mov
mov
test
push
cmp
popa
dec
pop
clts
lds
pusha
adc
push
int3
insl
sub
adc
xor
mov
sbb
xlat
fs
jg
and
push
mov
insb
frndint
pop
lea
sbb
mov
adc
stc
dec
or
lds
push
ror
das
cli
rcl
adcl
outsb
cmc
das
aas
push
out
gs
push
pop
cmp
sub
cmp
adc
int3
stos
cli
and
sti
ljmp
pop
aam
lods
je
daa
pop
hlt
lcall
pop
stos
cmp
movsl
sbbb
cwtl
sub
and
mov
lods
sbb
test
inc
add
jmp
or
out
sbb
inc
jge
xchg
std
scas
jp
lods
into
sub
idivb
push
mov
and
jbe
mov
iret
pusha
push
jle
test
mov
mov
rclb
mov
mov
pop
out
inc
and
sbb
fcoml
jo
ficompl
mov
dec
jne
jg
xor
adc
rcl
xor
dec
adc
xchg
stc
xor
rorb
or
inc
aas
and
dec
dec
cltd
lcall
pusha
in
mov
jbe
sarl
aaa
dec
bound
jg
sbb
orl
xchg
movsl
sti
sarb
pop
mov
push
add
fmul
js
test
addr16
push
popf
test
sbb
stos
mov
inc
dec
imul
sahf
les
imul
ss
mov
cmc
lret
inc
pop
mov
xor
es
imul
mov
cmp
lock
cmpsl
jnp
jp
enter
lds
movsb
in
pushf
add
mov
bound
fisubrl
pop
ljmp
pop
jno
or
jmp
and
dec
clc
mov
push
ljmp
subl
shl
out
add
pop
jbe
xor
sub
cli
push
cli
out
repnz
jl
packssdw
push
and
and
adc
mov
mov
aaa
in
pop
add
movsl
adc
mov
cmp
mov
out
lretw
iret
imul
inc
and
jnp
shrl
data16
orb
and
out
mov
cmp
das
pop
in
cmp
mov
dec
dec
shll
cmp
popf
pop
sti
push
lods
xor
mov
sbb
pop
jecxz
cltd
push
jno
xchg
andb
push
stc
push
xchg
addr16
mov
push
add
faddp
lea
cmpsl
add
sub
jne
inc
cmc
sbb
lret
inc
xorb
pop
or
xor
xchg
pushl
or
adc
sarb
mov
ds
dec
add
in
cmc
sbb
or
fsubl
mull
push
push
adc
jmp
push
xorb
cmp
popf
mov
inc
pop
movsl
fs
lods
and
popf
jmp
fnsave
lds
mov
ds
pop
push
jecxz
inc
pop
sbb
xor
stc
cmp
lret
loopne
pop
pushf
cmp
cmp
movups
xchg
daa
sbb
ss
movsl
fcoms
or
push
fistl
repz
andl
aad
int
stc
addl
sbb
addl
loop
jp
and
es
adc
icebp
cmp
adc
jbe
mov
in
loopne
dec
enter
les
sub
pop
negl
outsl
inc
int
jecxz
mov
dec
sti
sbb
lods
cmp
sub
fsts
std
or
loopne
and
icebp
mov
cmpsl
insb
push
fldt
cwtl
adc
iret
sub
repz
mov
jge
mov
mov
mov
sub
in
mov
mov
pop
das
mov
xor
fsub
out
ret
xlat
add
dec
nop
and
out
cltd
inc
cmp
ret
mov
test
xchg
cmpsl
jne
sbb
out
je
inc
push
leave
inc
mov
cmc
test
scas
dec
mov
int3
adc
xchg
and
mov
out
jmp
jo
xchg
out
jle
cwtl
insl
xchg
and
dec
pop
pop
add
dec
scas
jle
mov
ret
sahf
pop
sub
outsl
pusha
jnp
or
fldcw
xor
fdivrs
mov
fwait
inc
dec
sub
pop
mov
xor
scas
adc
xor
fimuls
dec
cs
sub
icebp
push
shrb
mov
imul
adc
sub
mov
outsl
in
adc
les
inc
lea
pop
loop
sahf
sbbb
shrb
push
lods
sbb
hlt
mov
in
push
xchg
imul
decl
push
xchg
inc
outsb
pop
inc
aaa
push
mov
jmp
ficoml
push
movsl
gs
adc
ret
js
xor
subl
lahf
repnz
sub
or
rcr
fstpt
gs
push
lods
xchg
popa
push
arpl
fbstp
mov
mov
test
sbb
xor
cmpxchg
fwait
popa
mov
inc
fs
lock
sbb
ja
inc
push
adc
or
or
ss
sub
nop
push
fwait
adc
cltd
xor
movsb
test
push
mov
test
mov
mov
dec
in
pop
in
push
test
addr16
mov
sahf
fidivs
pop
jns
xchg
adc
push
das
fstps
push
ljmp
shl
sbb
cli
jecxz
mov
mov
mov
sub
out
pop
cmpsb
push
shll
subl
mov
out
mov
es
pop
dec
cmp
ficomps
sub
push
and
mov
mov
xor
int3
out
cmp
xor
add
lds
sbb
jp
xchg
stos
mov
pop
lcall
fstl
cld
scas
jecxz
lods
cmc
dec
scas
pop
icebp
jne
mov
mull
inc
sub
andl
lcall
xlat
add
cmp
adc
imul
ds
xor
int
sub
adc
mov
and
jne
cli
jae
aas
inc
cmp
orl
mov
mov
and
ja
mov
test
stos
mov
xor
pop
push
loop
adc
stc
push
jae
mov
les
jo
mov
stc
cltd
cld
addb
mov
das
inc
es
mov
rcrl
pop
push
pop
fcoml
leave
xchg
xor
adc
add
test
enter
inc
movsl
inc
push
xchg
and
fld
shl
int
adc
mov
sub
nop
shrb
add
or
stos
ja
push
sbb
jne
cwtl
addr16
dec
sti
mov
inc
daa
fs
inc
push
jle
test
cmpsb
mov
mov
repnz
cs
pop
inc
jae
lcall
xor
or
push
inc
stos
mov
fsts
fsubl
and
push
fbstp
call
push
pop
mov
and
out
repz
fmul
lods
xchg
xor
xor
xchg
inc
sub
dec
push
mov
movsb
lret
movsl
or
cmp
or
sbb
inc
aaa
mov
and
cmp
aad
push
jb
cmp
and
xchg
test
mov
push
adc
pop
outsl
mov
leave
lea
bound
stc
pop
das
repz
je
xchg
inc
xor
jl
add
cmc
fimull
cmp
dec
shr
mov
mov
pop
jp
addr16
aam
sub
inc
movsl
loopne
pop
sbb
push
scas
mov
clc
lock
inc
pop
mov
repz
fistl
and
sub
pop
ret
pop
jge
cltd
or
subb
iret
ds
scas
xor
xlat
push
ss
fwait
mov
movsl
ds
xchg
inc
ss
ljmp
pusha
jp
stos
mov
ss
out
rolb
imul
loope
test
addr16
xchg
fldl
xchg
inc
pop
push
pop
jg
xor
andl
xor
mov
jno
push
sti
push
stc
mov
stos
push
movl
mov
inc
call
dec
rcrl
adc
mov
in
push
enter
inc
inc
add
shrl
outsb
push
mov
adc
inc
cmp
xchg
pop
repnz
dec
pop
pop
repz
push
jns
aaa
jecxz
in
dec
mov
ret
in
idivb
dec
or
sbb
cmp
jno
mov
push
sub
ret
flds
leave
in
clc
sub
inc
xchg
mov
jmp
mov
pop
xchg
nop
add
js
mov
loop
cli
mov
setb
dec
andb
test
fwait
add
out
xchg
mov
lret
add
cmp
add
mov
lds
dec
jle
jo
aaa
sub
out
in
add
clc
mov
push
ss
aaa
int
mov
test
inc
scas
pop
fs
int3
icebp
xchg
hlt
in
js
dec
sti
or
jae
stos
out
js
xchg
jns
and
mov
mov
sbb
cmp
add
mov
jo
repz
rcll
lods
and
pop
loope
pop
jns
arpl
adc
adc
inc
cmp
divl
in
xor
xlat
sub
inc
js
cmp
das
mov
pushf
inc
push
mov
bound
add
lock
xchg
nopl
xchg
xchg
dec
call
jno
dec
test
jb
jl
out
popa
adc
ljmp
and
and
inc
jae
test
pop
aam
or
mov
inc
push
pop
cli
std
and
adc
jb
and
sbb
cmp
add
adc
cmp
adc
lds
mov
add
dec
and
movsl
outsl
sub
mulb
inc
es
js
push
dec
cmp
imul
out
xchg
sarl
inc
jmp
jmp
clc
or
subb
je
int
dec
dec
add
adc
push
test
bound
incb
dec
mov
cmp
test
pushf
pop
cmpsb
dec
cmpsb
add
adc
mov
popa
mov
jne
pop
divl
mov
xor
sub
jmp
push
mov
sub
hlt
ss
loope
lods
sub
inc
dec
fs
test
mov
in
clc
jmp
adc
mov
rclb
cmc
sub
imul
arpl
mov
fstps
jecxz
test
scas
int
inc
adc
lcall
movsb
andl
jno
mov
out
sbb
inc
sbb
jno
out
jb
icebp
daa
mov
fs
add
xor
rol
ss
jae
daa
cltd
fstpl
inc
push
orl
sbb
push
sahf
jl
push
out
fdivr
das
stos
lahf
scas
cwtl
loop
sbb
mov
push
imul
pop
push
mov
lds
ja
cli
mov
add
fsubl
jnp
sti
xor
or
jne
xor
push
xchg
pop
cmp
outsl
sbb
pop
std
push
mov
sub
adc
mov
pop
inc
push
mov
rcll
inc
adc
jmp
lds
in
addr16
sub
arpl
insb
or
push
jae
mov
inc
push
outsl
add
hlt
aas
sbb
out
jbe
dec
lods
fs
sbb
add
sar
dec
mov
xchg
mov
cld
lret
pop
jl
or
dec
fs
jmp
sub
inc
pop
xchg
fs
pop
xchg
rcll
lods
test
sub
pop
sub
lret
xchg
stos
enter
and
sbb
or
xor
stc
data16
inc
or
mov
lea
fs
out
mov
scas
in
dec
imull
add
in
inc
adc
jbe
cli
fiaddl
in
or
pop
xchg
jb
imul
cmp
lds
mov
in
xchg
fiadds
mov
mov
adc
adc
cmp
add
rcrb
lds
dec
scas
jns
or
repnz
fs
pop
roll
add
sbb
jne
iret
mov
fs
ret
mov
test
mov
mov
sub
mov
inc
insl
adc
sbb
cmp
repz
cld
popf
and
dec
sub
out
xchg
add
mov
mov
inc
sub
cmp
mov
mov
add
and
jecxz
lods
gs
out
jle
sub
stos
sbb
popf
jne
pushf
fcomps
xchg
stos
loopne
jnp
jbe
pop
jo
movsb
add
mov
shr
jnp
mov
mov
cld
sub
mov
lea
jmp
sbb
push
inc
cmpsl
int3
cmp
or
xor
pop
fldenv
cmp
pushf
repz
call
subb
ret
mov
jle
call
and
aad
imul
rorb
mov
enter
lods
add
lock
jge
loopne
rcr
and
imul
jb
imul
scas
insl
xchg
insb
out
sub
stc
pop
out
xor
dec
mov
divb
mov
movsb
lahf
and
mov
xchg
lcall
cmc
mov
pop
scas
sbb
lods
enter
iret
mov
enter
pop
inc
ds
dec
cmc
fisttpll
push
lret
mov
sahf
xchg
pop
aaa
imul
sti
aaa
dec
mov
xchg
sub
lods
add
iret
pop
jge
inc
lcall
es
sbb
ljmp
and
repz
ret
rorb
and
pop
cmpsb
enter
lret
sub
sysexit
mov
subb
out
jecxz
and
cmp
xchg
or
mov
lahf
cmp
aad
lods
adc
cli
mov
sub
dec
jmp
rorl
or
ss
cmpb
mov
dec
cmc
adc
cmp
je
push
loopne
clc
ret
mov
xchg
icebp
and
jp
aad
or
loope
push
out
in
jmp
sub
mov
cmp
jns
sbb
jle
icebp
in
push
jmp
in
push
ds
sbb
jmp
push
mov
or
es
inc
cli
gs
mov
fs
pop
shrb
jbe
les
dec
jecxz
jbe
add
add
adc
cltd
push
inc
imul
xor
jle
sbb
cmp
data16
vandnps
xchg
xchg
xorb
add
jmp
mov
sti
and
inc
dec
test
aaa
jne
mov
pop
call
sbb
mov
inc
mov
mov
push
repz
lcall
clc
jne
push
aaa
mov
sub
push
jne
scas
and
push
rcrb
adc
sbb
jg
std
jle
jnp
jmp
xchg
cmp
aam
enter
mov
inc
jne
jge
push
cmp
ja
inc
jmp
in
pop
push
mov
push
out
aaa
daa
aam
ret
std
sub
dec
mov
and
pop
gs
into
cltd
sub
mov
aam
push
inc
add
push
cs
jns
nop
push
or
and
lds
adc
stc
int3
mov
bound
pop
in
jo
jb
daa
sbb
xchg
xchg
mov
jns
xorb
xchg
pushf
add
test
push
fwait
repz
lea
sbb
jae
bound
pop
mov
data16
jb
sub
shrl
and
sbb
mov
jo
sub
repz
pop
jbe
data16
sbb
cltd
cmp
test
mov
mov
mov
loope
out
outsb
mov
sbb
push
dec
xor
cwtl
cmp
imul
xchg
push
xor
fldt
into
fs
int
inc
push
gs
ret
and
icebp
xchg
lock
lock
sar
out
push
pop
fsubrs
mov
out
xchg
insl
test
outsl
dec
mov
adc
mov
cli
pushf
and
in
inc
shlb
aas
sti
lods
insl
mov
arpl
inc
test
stos
mull
sbbl
mov
out
popa
pop
shrb
pop
dec
xchg
mov
pop
out
arpl
mov
insb
mov
mov
ss
into
aaa
dec
scas
sub
and
bound
testb
and
test
cmp
mov
jb
dec
push
dec
or
in
mov
enter
andl
sub
sarl
test
pushf
add
mov
lods
roll
ss
mov
jecxz
cmp
dec
xchg
jno
adc
lock
xchg
shufps
sahf
call
mov
out
pop
scas
xchg
fcompl
or
pop
mov
dec
addr16
mov
dec
shrl
test
subb
xchg
lea
xor
mov
es
mov
int3
inc
lods
mov
addr16
clc
subb
int
aam
lea
jne
hlt
and
pusha
shl
xor
jle
std
jp
inc
inc
adc
mov
lret
push
ret
or
dec
mov
push
push
push
add
addb
lahf
jb
jp
mov
into
pop
fdiv
cmp
rcrb
sub
rclb
push
icebp
leave
lcall
lock
xlat
int
xor
insb
aas
xchg
addr16
pop
fs
aad
and
sbb
add
shlb
add
mov
push
imul
loopne
or
ret
sub
rclb
mov
add
ja
push
aas
outsb
cmpsl
adc
in
es
in
clc
cmc
lahf
mov
out
cli
out
inc
cltd
or
loop
das
dec
call
xchg
adc
arpl
add
out
dec
fiadds
sub
sub
cs
xchg
push
sbb
xchg
icebp
enter
jmp
mov
xchg
mov
push
int
fistpll
imul
mov
inc
lods
sub
gs
push
mov
sub
xlat
push
sub
incb
ljmp
sbb
adc
push
sbb
and
sub
int
icebp
arpl
pop
mov
inc
int
sbb
movsl
inc
mov
sub
movsl
insb
push
sub
inc
fmull
sbb
popf
push
shrb
fbstp
or
mov
add
add
push
andl
movsl
add
push
xor
mov
and
repnz
call
ds
addb
and
addr16
stc
imul
mov
mov
ljmp
pop
sub
cmp
dec
push
pop
inc
push
jp
mov
mov
ljmp
pop
sub
cmp
dec
push
pop
inc
push
jp
mov
mov
ljmp
push
sub
cmp
dec
push
pop
inc
push
jp
mov
mov
inc
ljmp
lods
xorb
push
cmp
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
jae
inc
sub
fwait
push
sbb
adc
xlat
stos
ret
ljmp
inc
sub
and
jp
push
lcall
rcr
ror
mov
sub
sbb
push
pop
sub
cmp
jp
push
lcall
cmpsb
mov
icebp
test
push
or
jbe
jp
shr
push
and
mov
pop
pop
cmp
arpl
add
inc
shl
pop
in
out
sbb
or
daa
ret
xor
imul
dec
or
test
sbb
xor
dec
lcall
sub
push
or
jns
scas
fnstsw
movb
and
lcall
or
cmp
loopne
out
cmc
mov
aas
daa
mov
inc
inc
jp
push
repnz
decl
cmp
mov
loop
or
mov
scas
fnstcw
add
iret
cmp
sub
mov
push
sti
sub
arpl
pop
sub
and
jp
push
lcall
lret
lret
cltd
ljmp
es
das
push
cmp
mov
repz
into
mov
movb
inc
or
dec
xor
aas
and
jge
ja
and
xchg
out
ret
rcll
in
out
arpl
pop
daa
or
sbb
dec
xor
push
lcall
rcr
mov
ljmp
inc
sub
and
jp
push
lcall
rcr
mov
ljmp
les
sub
test
and
sub
xor
sbbb
leave
test
rcll
add
cwtl
lods
addl
jl
cmc
cli
scas
sbb
loopne
jp
or
mov
push
mov
jg
in
jmp
stos
mov
pop
mov
fwait
shll
mov
sti
cmp
xor
scas
icebp
cmp
sbb
add
fbld
fidivrs
adc
push
pushf
adc
or
cmp
stos
mov
and
and
mov
ss
jns
or
push
adc
push
cmp
mov
mov
aaa
imul
cmp
sub
iret
xchg
inc
pop
into
or
das
adc
mov
imul
aad
mov
dec
pop
leave
fwait
mov
aas
push
and
pushf
dec
daa
test
bound
xor
stos
dec
push
pop
cld
stos
popa
mov
mov
cmp
in
aad
dec
pop
jb
enter
pushf
js
pop
ljmp
fldcw
xor
roll
popf
sti
ja
push
sbb
adc
xchg
dec
mov
xor
inc
and
add
fs
jg
dec
ss
xchg
xchg
in
test
test
arpl
pusha
mov
xlat
pop
pop
sub
insl
xchg
shlb
imul
adc
lods
lret
xor
lea
lret
or
lods
sarl
lret
js
inc
daa
xlat
movsb
icebp
xchg
sub
hlt
sub
and
jb
icebp
cltd
in
stc
leave
dec
push
push
dec
popa
sbb
push
add
inc
subl
leave
dec
mov
lret
jp
xchg
jecxz
mov
pop
std
or
shlb
out
movsl
cmpsb
ret
je
xchg
into
and
popf
add
pop
nop
and
movsl
xchg
add
xchg
push
data16
insb
jae
jmp
pop
sub
xchg
lcall
jo
out
imul
mov
xor
sub
lock
lret
out
rolb
and
adc
sbb
ljmp
jns
lcall
xor
in
call
call
jecxz
push
cli
subl
xchg
mov
xchg
fildl
adc
mov
dec
mov
sahf
pop
dec
push
adc
mov
inc
mov
jb
sbb
jp
xchg
lret
popf
sbbl
dec
sub
daa
subl
orl
jecxz
sub
add
idivb
and
js
add
pop
or
fdivp
jecxz
xchg
scas
push
movsl
mov
test
jmp
adc
mov
inc
cltd
pushf
cmpl
call
xchg
mov
lahf
push
outsl
cmp
push
push
rcll
dec
aaa
in
add
pusha
rcll
addr16
xor
call
sahf
rcrb
jg
test
pop
mov
jno
scas
sbb
movsl
sti
add
lcall
int3
mov
rorl
push
test
push
add
jl
popa
es
ss
inc
lods
adc
mov
decl
std
scas
cmp
mov
pop
cmp
pop
push
mov
push
outsl
sub
in
push
jmp
jle
imul
xchg
sbb
mov
hlt
mov
shlb
stos
jge
lcall
dec
repnz
sti
jg
mov
mov
adc
mov
data16
jge
mov
sahf
sarl
cmc
lods
or
inc
push
jecxz
dec
jge
add
jmp
dec
je
pop
lock
jb
imul
or
mov
jge
jae
push
inc
sub
mov
mov
jno
iret
fiadds
dec
pushf
push
or
minps
repnz
inc
xchg
xchg
inc
xchg
inc
jl
cmp
out
xchg
xchg
and
fnsave
add
test
dec
neg
insl
pop
add
xor
mov
repz
outsb
dec
test
lret
dec
aaa
xor
xlat
mov
add
inc
jb
or
xchg
push
mov
pusha
dec
test
icebp
mov
or
cs
movsb
leave
ds
sub
mov
xlat
imul
cmp
sub
test
jne
lods
or
pop
dec
lahf
loopne
ljmp
mov
and
add
jmp
data16
mov
sbb
sub
and
push
pop
jge
dec
add
into
cmp
lock
pop
nop
testl
dec
hlt
je
loope
outsb
push
repnz
sbb
add
ss
push
xchg
loopne
push
push
and
in
insl
cmp
cs
pop
mov
out
sbb
loopne
repnz
addr16
sub
imul
jae
cmp
daa
popf
mov
add
enter
aas
sub
push
stos
int3
jns
or
inc
mov
xchg
dec
ret
mov
andl
ret
mov
adc
ror
mov
aaa
jmp
out
stos
out
scas
jae
enter
jg
out
and
loop
adc
cli
jns
jns
test
inc
xchg
adc
jb
in
push
in
dec
pop
popa
stc
stos
inc
xor
insl
out
jne
scas
add
outsl
xchg
jmp
fs
sbb
mov
mov
addr16
add
decl
jl
dec
movsl
mov
mov
push
jns
mov
jo
and
stc
xchg
ret
mov
test
setns
xchg
sti
daa
out
dec
ret
bound
push
shlb
pop
pusha
ds
insb
lret
sub
xchg
rorl
mov
repnz
in
fnop
into
les
ljmp
in
sub
aas
outsb
jo
sbb
pop
aam
add
ja
loopne
out
test
xor
cs
shlb
aam
sub
cwtl
insl
or
mov
add
pop
mov
push
xchg
inc
and
xchg
mov
xchg
cmpsl
fcmovnu
loope
mov
loopne
les
adc
and
dec
int
js
sub
movsl
push
cmpsb
xor
mov
jb
add
push
sbb
mov
xchg
sbb
mov
aam
lods
xchg
popf
jg
int
jl
ret
push
subb
xchg
sbb
mov
xchg
mov
lcall
aam
mov
scas
loope
xchg
cli
cmp
andl
lea
int3
push
por
loopne
and
jns
aas
mov
push
lcall
clc
loop
jge
dec
rolb
cmp
mov
xchg
sbb
leave
pop
bound
xchg
mov
push
pop
cmc
jmp
int3
pop
shl
addr16
or
fldt
popf
ja
add
sti
lret
jb
loop
and
xor
lods
sbb
lahf
stos
mov
push
sub
out
mov
push
sub
inc
or
jle
push
movsl
xchg
and
cmpsb
fwait
hlt
push
iret
rorl
insl
sbb
into
shlb
lods
push
das
daa
lret
movsb
push
cmp
cwtl
out
imul
fcomp
inc
xor
push
fsubl
jo
add
and
shlb
lea
scas
cmpsb
push
jno
movsb
add
mov
mov
pop
popa
and
jmp
adc
int
je
cmc
out
jle
cmc
popf
mov
adc
mov
xchg
notl
jl
xor
inc
cmp
insb
and
lret
addr16
push
or
mov
push
mov
popa
popa
mov
into
fcmovnu
adc
pop
adc
out
mov
xchg
aam
mov
sbb
inc
adc
ss
iret
sub
and
les
cmp
jbe
icebp
or
aad
testl
fldenv
rcll
aam
jecxz
cs
sub
mov
xchg
cmc
inc
cmp
les
lods
mov
add
adc
jp
push
adc
sbb
jg
jae
popf
adc
or
jecxz
out
stos
pusha
ret
xor
add
xchg
jg
inc
idivl
loop
add
bound
stc
inc
mov
adc
lds
jmp
cwtl
jmp
add
pop
ficoms
stc
inc
int
dec
or
adc
int3
in
das
out
and
push
cmp
dec
mov
mov
and
or
inc
fsub
pop
adc
cltd
or
iret
inc
nop
out
push
cmp
mov
in
jmp
das
sarl
xor
stos
jl
dec
roll
dec
mov
loopne
outsl
jp
xor
xor
adc
add
inc
and
scas
out
mov
cmc
filds
popf
inc
xor
cmp
sbb
jne
orl
pop
std
mov
push
push
ret
icebp
outsb
xlat
inc
test
inc
inc
and
sbb
jge
mov
loope
mov
mov
incb
mov
xchg
push
jge
stos
sbb
adc
lret
movsl
sbb
dec
cwtl
rorl
mov
addr16
pop
xchg
push
sub
das
mov
pop
xchg
or
jno
and
mov
sbb
incb
mov
mov
fisubrs
adc
add
outsb
mov
stc
push
mov
shll
inc
cmpsl
imul
repnz
cmpsl
push
cli
add
adc
or
xorl
jg
mov
jb
scas
pop
aad
repnz
jnp
int3
sub
sub
pop
mov
fidivs
xchg
ss
ds
jne
shr
out
imul
lods
aad
xor
loop
ja
ret
pop
and
push
jb
jne
xchg
xor
mov
cmpsl
sbb
jns
nop
push
add
in
mov
aas
fcmovnbe
jl
cmc
push
leave
mov
xor
mov
cmpsl
pop
fld1
inc
pop
shll
xchg
je
mov
jne
cmp
mov
and
pop
push
hlt
cmpsb
xchg
and
je
bound
call
sbb
mov
push
sar
xchg
inc
mov
int3
rorl
fwait
cs
sub
adc
add
cmpsb
andb
inc
cmp
pop
mov
dec
xchg
jb
sbb
ds
add
lods
lock
popf
into
xchg
iret
xor
mov
imul
mov
mov
aas
jns
sbb
sbb
jne
cmp
cltd
inc
mov
sub
adc
and
push
xor
imul
imul
mov
stos
je
les
clc
xchg
inc
inc
int
lahf
test
pop
xor
out
sahf
inc
test
cmp
and
xlat
sbb
mov
repnz
xchg
daa
out
xor
adc
inc
fdivs
dec
jnp
sub
out
push
roll
mov
js
inc
and
cli
push
mov
insl
clc
and
ret
jb
mov
adc
jl
push
add
cs
in
xchg
push
ja
pop
lods
mov
pop
negb
rolb
adc
mov
push
mov
add
std
ljmp
mov
loopne
and
mov
pop
mov
orl
int3
andb
lock
inc
add
flds
ds
xlat
scas
shll
cmpsl
inc
loop
aas
adc
movsl
dec
repnz
mov
mov
cmp
push
subl
sbb
push
pushf
xlat
push
jno
ja
jge
outsl
pushf
or
and
and
mov
pop
flds
scas
xchg
xor
add
push
pop
call
push
mov
lea
iret
sahf
ja
popa
arpl
xchg
mov
scas
loope
je
xchg
imul
inc
shrb
mov
rcl
add
xchg
aas
imul
mov
stc
mov
addl
loope
dec
push
stc
xor
xchg
adc
cs
pushf
scas
lods
mov
cs
popf
or
pushf
jg
sarl
iret
add
push
cltd
mov
out
andb
leave
out
out
loopne
push
outsl
nop
fwait
jae
rorb
outsl
lret
cmp
inc
xchg
stos
jbe
and
jmp
movsb
push
and
cmp
imul
pop
negb
test
pop
das
call
adc
rclb
and
push
mov
in
int3
loope
popa
jo
enter
add
cs
inc
xchg
sbb
fwait
xor
push
movsb
inc
insb
inc
js
in
iret
cld
test
outsl
arpl
mov
cli
or
xchg
push
push
cmp
ljmp
sti
daa
mov
sbb
xor
xchg
sub
lahf
sub
or
push
rcrb
fisttps
jp
aas
push
inc
push
jns
cs
lahf
mov
sbb
cld
fwait
movsl
push
pop
imulb
ret
sbb
mov
push
push
sub
adc
sub
nop
sbb
pop
mov
adc
pop
push
loop
aas
in
inc
ds
add
sarb
pusha
mov
sub
xchg
inc
mov
push
movsl
sub
adc
iret
pop
out
movsl
pop
pop
xchg
jp
jno
push
sar
mov
icebp
sahf
adc
sub
mov
mov
repz
inc
add
xor
sbb
icebp
leave
cmp
cmp
out
cmpsb
call
mov
test
cmp
into
enter
xchg
mov
cmp
cs
dec
jo
sub
push
xor
repnz
sbb
mov
push
jno
sub
sbb
xchg
pusha
mov
ror
xor
mov
and
jb
inc
adc
jmp
mov
adc
mov
jnp
rolb
shll
cli
std
pop
and
loopne
and
xchg
lds
mov
aaa
adc
fwait
inc
sub
outsl
loopne
fistl
jns
xor
add
imul
fisttpll
shr
sub
shrl
cmp
sub
insb
sub
xchg
jmp
and
mov
mov
lret
xlat
roll
fs
icebp
and
jne
sub
pop
hlt
xlat
add
ret
lods
pop
sbb
int3
sub
call
shl
in
hlt
stos
iret
dec
call
xlat
das
imul
xor
mov
push
or
lea
mov
and
mov
xchg
orl
push
sar
inc
jl
daa
jne
mov
sbb
insb
lods
sub
ljmp
les
push
inc
dec
scas
adc
sbb
fcmovb
or
rclb
ds
leave
mov
int3
int3
sti
repz
jp
inc
outsl
mov
adc
repnz
inc
push
inc
pop
mov
mov
push
icebp
jmp
fs
ss
in
push
sbb
sti
fs
cs
mov
lahf
pop
xor
adc
int3
mov
adc
dec
lret
adc
sub
push
xchg
pop
xor
push
loope
xor
cmp
addl
call
cmpsl
out
adc
stos
lea
dec
shll
pop
mov
sbb
jae
pop
mov
mov
in
les
jl
hlt
xor
movsl
nop
mov
xchg
ficompl
mov
or
push
imul
cwtl
add
aad
jbe
push
loope
jnp
cs
xchg
jo
jle
push
xchg
in
pushl
lret
mov
pop
mov
neg
jne
push
test
pushf
jmp
addr16
fildl
les
aaa
add
sbb
in
and
lret
enter
rclb
sbb
sub
popf
pop
sti
or
mov
decl
sub
sub
in
loop
out
xchg
push
aad
mov
cmc
dec
ret
lds
rep
scas
fisttps
jbe
adc
fiadds
hlt
mov
xchg
mov
es
mov
sub
lds
jb
and
mov
cmp
outsl
adc
jo
cmp
inc
ss
mov
les
xor
test
xchg
sub
sub
mov
cmpsl
or
sbb
xor
adc
repnz
xlat
mov
adc
jae
aad
jmp
pop
movsl
jo
aaa
inc
fistps
add
lods
and
in
dec
or
push
mov
aam
xchg
lea
in
lods
aam
mov
test
call
hlt
mov
xor
push
in
jmp
dec
cmp
iret
xchg
adc
mov
push
xchg
loop
addr16
mov
sub
outsl
ljmp
sub
movsb
fimull
mov
xor
pop
mov
inc
jno
cmpsl
cmpsb
loop
aad
hlt
sbb
inc
mov
fucom
sub
sub
add
int
xchg
mov
fnstcw
dec
jecxz
mov
pop
sub
cli
push
rolb
loope
jg
nop
mov
nop
cmp
call
cmp
add
cmc
cmc
xchg
pop
stos
repz
std
inc
cli
jge
dec
or
pop
xor
dec
lret
sbb
lock
jne
jbe
mov
enter
mov
cli
addb
sbb
xchg
out
arpl
scas
movsl
rorb
push
and
or
push
popf
push
adc
fs
scas
sub
inc
sbb
adc
sbb
xchg
lret
ds
fimuls
and
orb
lea
enter
aam
cmp
cmp
loope
adc
std
outsb
mov
outsb
mov
arpl
and
sbb
jno
in
jnp
test
je
sbb
xlat
inc
mov
rorl
pop
pop
rcrl
call
test
add
inc
aam
lods
ja
pop
int3
jp
and
pop
jne
dec
xor
mov
jo
jecxz
cli
dec
jmp
out
lret
ss
cli
das
in
cmp
test
jge
getsec
pop
add
arpl
and
pop
popa
dec
mov
icebp
dec
rcrl
inc
pop
cmpsb
sub
add
into
add
jle
xor
xor
test
fldt
rcll
aad
iret
loope
testb
sbb
cs
std
mov
lret
sbb
dec
push
xor
inc
mov
lods
ja
mov
daa
and
dec
push
push
int
jnp
push
in
sub
xchg
pop
daa
test
and
fsubrs
jne
adcl
stos
pop
push
push
and
xchg
stc
push
adc
inc
test
adc
mov
push
sbb
or
add
xchg
adcl
add
icebp
outsb
pop
pop
jmp
into
xchg
loope
fldcw
inc
xchg
or
and
js
or
mov
hlt
imul
faddp
lret
cmp
pop
std
movsb
repz
inc
ret
push
push
mov
loop
or
leave
adc
jl
push
or
and
outsl
adc
xor
pop
cmp
mov
xchg
sub
xor
roll
leave
dec
sub
mov
test
mov
mov
adc
add
xchg
mul
and
sub
cltd
stos
and
int
cli
push
jns
pop
sbb
pop
sti
fistpll
dec
jno
jno
add
insb
fcoml
lret
cmp
enter
inc
mov
adc
jbe
pusha
mov
mov
add
push
cmpsl
les
lock
ss
push
push
popa
fcomps
ss
sarb
dec
add
pushf
out
into
pop
push
js
cmp
enter
mov
jnp
rcll
adc
sub
cmp
es
inc
pop
mov
sub
xchg
jp
sub
push
imul
jge
hlt
jecxz
mov
xor
mov
movsb
cmpsb
dec
sub
mov
dec
aam
dec
andb
jecxz
mulb
out
sub
and
xchg
jl
or
cltd
lods
into
push
daa
push
pusha
inc
jl
stc
mov
pop
adc
call
inc
mov
dec
call
pop
lret
sub
sub
out
dec
das
inc
mov
ja
sub
call
mov
shlb
cld
inc
pop
ds
mov
dec
pop
fsubs
cwtl
or
add
xor
fmuls
push
lds
mov
xlat
iret
xchg
loop
or
stos
xor
pusha
sub
mov
push
lret
into
push
xchg
inc
sti
sbb
popl
push
lea
add
daa
js
adc
add
and
or
sub
rcrb
push
xor
mov
push
push
xchg
call
pop
repz
cmp
cmpb
jbe
and
jecxz
pop
cmp
loop
inc
jbe
xorl
jge
outsb
jbe
or
aas
push
add
lcall
inc
dec
int
mov
mov
bound
fwait
roll
popf
fcomps
and
sub
loope
mov
pop
sub
lret
sub
mov
sbbl
cld
mov
decl
mov
or
stos
and
test
sti
jae
inc
sub
and
jp
push
lcall
rcr
mov
ljmp
inc
sub
and
jp
push
lcall
rcr
mov
ljmp
inc
sub
and
jp
push
lcall
xlat
fisubl
jmp
sbb
ja
inc
sub
and
jp
push
lcall
movsb
lods
sub
add
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
mov
test
sub
sub
stc
xor
test
inc
cltd
push
jle
jns
jns
pop
xchg
sub
cmp
lds
mov
lods
add
mov
push
jo
pusha
mov
sub
and
adc
push
int
cli
repnz
movsl
pop
lods
data16
hlt
sbb
xor
push
sbb
aaa
shlb
lds
fchs
or
add
xor
clc
addl
hlt
movsb
dec
fisttps
out
in
or
test
xchg
and
push
gs
aam
adc
inc
adc
in
jns
add
cmp
sbb
pop
jmp
push
mov
mov
cwtl
push
inc
cld
jne
test
mov
xchg
shrb
loope
sbb
fstp
xchg
gs
xor
mov
lods
jo
mov
sub
mov
int
aad
jbe
and
add
mov
stos
mov
or
xchg
aam
xchg
mov
xor
push
and
fmuls
imul
inc
dec
add
cmp
and
or
add
mov
rcrb
mov
cmp
negl
dec
xchg
push
lcall
stc
jo
jno
jl
or
add
add
xor
loopne
hlt
sub
pop
mov
mov
gs
pop
mov
mov
jb
xor
cltd
ds
dec
repnz
pop
notb
cmp
or
sbb
jmp
add
mov
push
imul
cmp
or
sbb
jmp
add
mov
push
imul
scas
out
xor
pop
add
xchg
xchg
fs
push
dec
jecxz
or
ficoms
repz
push
sbb
dec
pusha
popf
inc
mov
popa
add
in
inc
aaa
add
mov
rcrl
test
mov
cwtl
enter
out
mov
pop
orw
clc
out
or
es
push
and
fisttpl
xchg
movsl
mov
jg
int
dec
inc
pop
cmp
mov
aad
push
lcall
in
shll
divl
dec
mov
dec
out
rep
dec
xor
fnstcw
aas
sti
pop
inc
mov
jmp
adc
outsl
int3
cmpsl
shlb
mov
mov
push
out
push
jo
jbe
notb
and
je
add
mov
in
jae
test
push
adc
inc
pop
lcall
adc
stc
pop
es
mov
je
push
push
inc
push
stos
lret
in
incb
mov
leave
loop
push
pushf
lcall
jp
fst
and
cmp
sti
jg
scas
outsb
and
cmpxchg
inc
negl
lret
xlat
test
cmpsl
xchg
icebp
sub
fdiv
xchg
aad
stc
imul
outsl
lcall
stos
sub
dec
test
jnp
lret
lock
lret
mov
shlb
mov
xor
lds
mov
testl
sub
cmp
xchg
sbb
cs
fildll
stos
iret
mov
jmp
dec
pop
ja
cmp
jle
add
pop
jb
mov
stos
mov
loopne
dec
icebp
scas
pop
mov
xor
js
sub
or
stos
sahf
cmp
xor
mov
or
lahf
aam
lock
mov
pop
orl
daa
lret
in
arpl
pop
lret
jb
mov
into
adc
arpl
fsubl
adc
mov
and
jno
jmp
dec
scas
les
bound
cltd
push
sbb
adc
push
outsl
mov
adc
arpl
iret
movsb
xor
sbb
adcb
or
aam
and
jmp
push
mov
adc
lds
mov
push
scas
mov
add
pop
or
and
stos
add
xchg
mov
fstpt
fadds
mov
out
push
push
add
lock
rcrl
aas
mov
dec
dec
cltd
inc
xor
jl
pop
imull
adc
mov
ja
repnz
jae
mov
loopne
or
out
sbb
cmpsb
jo
fisttpll
xchg
cmp
mov
daa
mov
mov
and
aam
mov
pop
cmp
mov
pop
stc
mov
addr16
jae
fcmovne
xor
imul
add
pop
inc
mov
orb
les
pusha
dec
sub
sbb
add
stos
push
mov
fcoml
in
cs
cmp
not
xor
inc
addr16
adc
lods
xor
dec
addr16
mov
mov
lahf
inc
test
inc
mov
pop
lods
test
push
mov
aad
divb
bound
and
popa
mov
aad
mov
cld
cli
mov
mov
stos
push
out
add
adc
les
push
ja
mov
cmp
push
outsb
add
push
adc
add
mov
je
add
sub
fidivs
push
movsb
out
ja
sub
pop
or
mov
sub
insb
mov
mov
dec
xor
mov
cmc
fsub
dec
repz
sbb
mov
loop
clc
cmpsl
jmp
pop
test
push
or
xchg
push
jns
out
mov
out
stos
iret
xchg
stos
inc
or
add
popl
out
scas
repnz
fwait
dec
or
jle
icebp
inc
clc
je
popf
int
sub
shll
fsub
fbstp
fldl
fimull
xchg
cwtl
lahf
ds
sbb
in
call
cmp
mov
scas
jmp
or
sub
fisubs
or
pmaddwd
xchg
push
xchg
sbb
sub
in
pop
push
xchg
lret
test
pusha
push
dec
add
nop
je
scas
jge
pop
sbb
xchg
cmp
nop
clc
jl
in
jg
movsb
mov
testb
pop
dec
ficompl
push
sarl
dec
xchg
and
sbb
rol
mov
outsb
push
push
movsl
fsubrs
ret
mov
sub
daa
scas
mov
pop
xor
in
push
leave
push
testb
call
rcll
jl
adc
push
cmc
xor
mov
xchg
in
push
int3
push
leave
ret
mov
cmp
fisubs
ljmp
ret
test
cmp
sbb
in
jge
ror
sub
add
mov
arpl
mov
push
mov
rolb
punpckhwd
pushf
negl
inc
cmc
push
or
enter
arpl
jbe
arpl
outsb
out
or
and
ja
sub
or
sub
insl
jg
in
mov
bound
lahf
sub
dec
sarl
dec
push
or
inc
sub
adc
dec
jmp
adc
pushf
sbb
xchg
add
orl
das
imul
add
insb
testl
cmpsl
les
ja
cmp
mov
sub
lods
lods
fdivrs
clc
mov
jecxz
cmpsb
or
xor
data16
je
ds
ljmp
add
jge
jl
xor
or
xor
lcall
das
gs
dec
ljmp
or
sub
sarl
mov
cmpb
cli
adc
pop
scas
xor
out
out
je
aaa
cld
or
js
pushf
lock
movsb
rorb
scas
int
arpl
xchg
sti
dec
testb
test
imul
mov
mov
enter
aad
aas
dec
out
fdivl
pushl
inc
adc
push
das
fcomps
insl
movsb
push
out
fmull
adc
out
sub
jne
mov
adc
jo
test
sbb
sbb
mov
inc
jae
adc
pop
imul
mov
adc
pop
push
or
popf
dec
mov
mov
jecxz
jg
and
rorl
add
or
es
lods
fldt
mov
pop
adc
inc
sti
sbb
add
cs
aam
xor
into
sbb
lods
popa
sbb
dec
mov
and
add
cmp
or
aad
mov
inc
mov
fs
subb
inc
fisubs
aam
loop,pn
ss
push
out
push
rclb
nop
lods
ljmp
pop
push
les
std
sbb
inc
pop
mov
pop
aas
cli
subl
scas
pop
inc
inc
dec
fldcw
mov
jl
fildll
cmp
mov
mov
dec
add
add
inc
and
mov
icebp
or
inc
loopne
adc
inc
cmc
nop
inc
in
dec
repz
jo
cltd
xor
add
and
inc
mov
or
or
pop
xor
in
jge
test
dec
loope
cmp
fisttps
fisubrl
fs
jl
dec
jmp
lods
or
cmp
or
xor
je
sti
test
xchg
in
push
xchg
dec
loope
sub
push
dec
jmp
mov
clc
std
testb
sbb
pusha
hlt
dec
rorl
sbb
sbb
pop
xor
stc
jo
push
gs
bound
xor
cmp
mov
xor
fldt
in
cmpsl
dec
sub
insb
adc
outsb
popa
mov
xchg
adc
dec
sub
adc
scas
rcll
cmpsb
gs
adc
xor
fwait
xor
dec
cmp
dec
es
lret
popf
pop
ret
aaa
and
and
inc
or
mov
dec
or
xor
daa
mov
push
xchg
sub
mov
dec
dec
sub
out
fstl
div
ficoms
test
subb
or
xchg
xchg
test
push
push
dec
mov
jmp
inc
mov
pop
inc
inc
movsb
add
das
call
mov
inc
mov
mov
fcomi
pushf
add
rcl
aas
sbb
dec
adc
xor
lret
jae
jmp
lock
in
mov
imul
sahf
or
adc
orl
in
test
pop
sub
lods
mov
push
or
fists
lcall
dec
scas
adcb
mov
push
pop
out
fcomps
push
push
jnp
xchg
jecxz
das
pop
scas
xlat
adc
pop
sbb
jbe
xchg
jae
mov
ds
add
adc
jp
iret
addr16
lea
fs
fisttpll
add
test
push
ja
stos
pop
sbb
jnp
jmp
sbb
fidivrs
sub
pop
decl
ret
test
mov
les
test
inc
imul
jl
les
scas
test
xor
ret
icebp
mov
cmp
xchg
dec
dec
in
insl
mov
adc
mov
data16
rcrl
insb
rcrl
xchg
cltd
push
cmp
inc
xlat
jle
das
imul
mov
fstpl
in
scas
xor
push
jnp
push
xor
jnp
test
bound
test
in
xchg
jb
sbb
dec
lcall
push
imul
insl
pop
and
insb
scas
add
push
mov
pop
cmpsb
xor
rorl
pop
mov
inc
xchg
or
das
leave
adc
jae
int
xchg
insb
js
sub
movsb
sarl
inc
jg
test
xchg
cli
push
gs
int3
mov
or
adc
iret
sbb
inc
mov
test
or
dec
xor
out
xchg
fsubrs
shll
jg
outsb
add
mov
xchg
pop
rep
inc
movsl
jb
nop
lea
mov
mov
fcmovnb
stos
js
roll
and
lret
or
stos
fldcw
inc
lock
jge
add
mov
sbb
lock
idivb
icebp
or
popf
ja
pop
aas
jnp
mov
lret
out
ljmp
add
sbb
push
gs
aam
push
push
arpl
lea
scas
jge
jno
adc
add
dec
push
push
test
dec
mov
sbb
xchg
mov
dec
mov
fstpl
jbe
cmp
dec
shrb
lods
xchg
push
cmpsl
insb
ficompl
xchg
cs
jmp
sub
shrb
mov
cmp
jb
dec
movsb
push
test
dec
xchg
inc
aam
jmp
jae
xchg
add
dec
push
jp
jb
or
xchg
out
add
mov
adc
add
iret
out
xor
cvtps2pd
pusha
dec
pop
fiaddl
inc
inc
mov
push
sub
jbe
fimuls
cmp
inc
icebp
cmp
mov
mov
push
xchg
push
dec
sub
sbb
aaa
fistl
ret
sbb
incb
jge
jno
mov
lods
divb
push
add
in
mov
add
pop
nop
sbb
mov
sahf
sti
or
sbb
push
xchg
fucom
pop
mov
orl
push
xchg
add
out
sub
adc
mov
or
outsl
cmp
in
leave
add
push
enter
or
pop
jb
mov
rolb
test
out
and
xor
xchg
cwtl
mov
sub
mov
in
mov
bound
icebp
inc
mov
push
stos
rorb
das
imul
ret
lcall
fimull
mov
mov
pop
push
push
sbb
add
cmp
test
jae
cs
in
and
daa
es
jnp
insl
test
add
fnstsw
into
mov
jmp
mov
scas
sub
jns
xchg
jmp
out
or
jge
sub
mov
mov
mov
pop
dec
fidivrs
addb
orl
test
int3
xchg
aam
loopne
out
cld
adcb
shrb
aad
movsl
aas
int
mov
inc
dec
and
daa
mov
sub
dec
or
test
enter
inc
mov
xchg
out
jnp
into
popf
push
andb
hlt
adc
loop
xchg
jecxz
dec
mov
jecxz
dec
out
cli
daa
jns
es
sub
dec
cmpsl
addr16
xchg
jmp
shlb
ret
mov
out
xadd
jge
cmp
pushf
cmp
push
outsl
std
shr
sbb
div
dec
mov
aad
int3
das
pop
mov
cmp
dec
ficomps
ljmp
test
xorl
adc
jl
icebp
inc
cmp
and
jge
test
mov
out
mov
iret
fwait
call
mov
xlat
pop
hlt
loopne
mov
iret
jge
fimull
xchg
or
mov
and
dec
fs
std
xor
insb
fstpt
sbb
into
iret
mov
dec
inc
fsubrp
into
arpl
xchg
dec
fsubrl
insl
repz
js
sbb
and
xchg
mov
xchg
mov
mov
cmpsb
jle
fwait
les
lods
dec
jb
xor
sarl
pop
test
lds
jb
subb
jmp
mov
and
loope
cmp
arpl
inc
inc
fistps
pop
les
push
sub
repz
sub
movsb
sahf
and
insl
les
adcl
sub
mov
loop
adc
icebp
fiadds
fnstsw
lds
call
shl
andb
imul
inc
mov
lret
inc
fidivrs
jns
sbb
insl
hlt
pop
add
cmpsl
xor
addr16
mov
inc
subl
xlat
add
les
aas
in
xchg
fs
add
push
fisubs
sub
cmp
or
divb
inc
out
imul
imul
jge
aas
daa
nop
out
fisttpl
sub
push
test
cli
ja
daa
push
mov
lahf
and
push
cmc
mov
test
jmp
loopne
mov
dec
je
push
cmpl
xchg
mov
cmpl
daa
xchg
jnp
fldenv
xor
jge
addr16
jae
rolb
cmc
xor
cmp
inc
addb
ret
mov
push
leave
xchg
out
cmpsb
push
orb
in
gs
aaa
push
xchg
jnp
inc
scas
mov
sub
sbb
sbb
pop
push
dec
push
mov
clc
in
or
sub
les
lret
mov
mov
mov
fucom
inc
enter
ss
pop
lcall
setne
push
aas
sahf
xchg
or
mov
std
subl
and
adc
cmp
shl
dec
push
pop
pop
dec
stos
mov
add
psrad
lcall
loope
xchg
les
jbe
fimull
popf
pop
mov
fldenv
jmp
fs
pop
pop
mov
or
xor
xor
inc
sub
push
xor
lea
movsl
in
loope
xor
dec
dec
adc
je
call
fidivl
jno
xchg
mov
fldcw
sbb
out
leave
addb
add
cmp
xchg
adc
cli
out
jg
idiv
xchg
fwait
jp
je
movsl
jl
mov
fisttpll
in
mov
movsb
aam
jo
fsubrl
xchg
pop
sti
xchg
pushf
and
adc
fadds
dec
jge
mov
mov
mov
add
and
ss
cmpsl
and
mov
sbb
sbb
out
sti
xchg
dec
dec
sub
mov
jmp
mov
xacquire
inc
fmuls
lods
cwtl
push
jg
ljmp
andl
and
scas
mov
mov
cmp
inc
pop
rorl
mov
mov
adc
jg
subl
ffreep
xlat
je
pushl
dec
scas
push
out
sbb
insl
dec
mov
fs
or
push
pop
inc
shl
idivl
sbb
xchg
stos
mov
cmp
ret
subb
subb
lret
mov
std
hlt
fildl
fwait
cli
mov
popf
mov
mov
inc
add
inc
jmp
jge
mov
lcall
mov
mov
lea
sbb
stc
shrb
xchg
cs
cmp
insb
lret
test
pop
mov
sub
cli
dec
scas
push
jge
jle
fwait
mov
insl
xchg
cltd
xor
insb
insl
lret
out
shrl
inc
add
fstpt
sub
mov
mov
popa
inc
push
in
dec
dec
push
mov
jmp
sbb
iret
vpaddsb
mov
movsb
mov
nop
jecxz
inc
sub
mov
mov
jp
sub
lds
call
sti
xlat
dec
lret
daa
leave
fsubp
lret
cmp
mov
or
adc
pop
inc
and
pusha
je
mov
xor
xor
sbb
movsb
subl
sub
ja
leave
test
adc
das
sbb
rol
jae
shl
in
add
pop
mov
or
enter
sbb
cmpsl
incl
mov
pop
and
cmp
mov
fsub
jg
hlt
sub
mov
es
aaa
lahf
push
roll
addr16
dec
xchg
imul
mov
outsb
fwait
sbbb
ljmp
popl
push
mov
adc
addr16
dec
and
xchg
jae
mov
inc
cwtl
lret
fstl
mov
popa
mov
in
imul
xchg
clc
mov
xorb
or
sub
mov
cmp
addb
mov
adc
and
pop
xchg
call
push
fsubrp
push
imul
inc
xor
lods
cmc
rcrl
xlat
imul
cltd
mov
fstp
jle
and
sahf
sbb
sbbl
adc
push
mov
mov
es
mov
mov
and
sti
mov
iret
fsubrl
mov
xor
jge
sbb
jns
lock
lods
or
xor
bound
add
xchg
rcrl
ret
mov
popf
add
push
rorl
scas
scas
into
and
test
sbb
call
push
or
jecxz
or
loop
mov
ret
jbe
sti
push
ja
in
push
mov
xor
jns
dec
lahf
rcrb
mov
sahf
dec
lret
cmpsb
adc
cltd
ror
lahf
push
dec
cmp
mov
rcrb
and
push
sarb
pop
jo
mov
sbb
push
in
and
fisttpll
rclb
lahf
cmp
or
add
sub
and
adc
mov
dec
shrb
xor
and
pop
push
pushf
adc
push
push
mov
dec
adc
inc
sub
mov
dec
je
cmpsl
dec
icebp
sbbl
jo
jns
mov
sbbl
cmpsb
xchg
sti
dec
mov
sahf
rsqrtps
aaa
mov
sbb
sub
mull
fwait
cmp
or
into
push
xchg
popa
daa
jo
dec
adc
pop
dec
xchg
jmp
mov
lret
adc
dec
mov
mov
fnstcw
mov
out
inc
push
pop
dec
test
pop
pop
pop
mov
pushf
push
popw
push
scas
mov
add
push
iret
loop
fwait
je
mov
lahf
into
rorb
dec
loop
test
dec
xchg
xchg
or
mov
cmp
mov
add
scas
jecxz
inc
jmp
or
mov
into
xor
das
ds
mov
cs
cmp
fwait
mov
cmp
or
cs
stos
pop
and
adc
fwait
aam
lahf
iret
jmp
nop
jne
enter
cmpsb
sub
dec
clc
mov
push
ja
aas
fwait
mov
aam
in
fisttpll
popf
adc
ret
mov
popf
fists
enter
stc
pop
lods
sbb
ret
inc
xor
insl
loop
jg
out
jns
mov
cld
add
and
xchg
stos
cmp
nop
push
std
notb
pop
sbbl
xor
daa
push
or
imulb
cwtl
std
stc
inc
xor
in
push
out
adcl
lods
sbb
in
cmp
mov
mov
fcomps
push
sbb
sahf
sbb
sub
decl
in
scas
cmp
sbb
sub
pop
mov
pop
jae
dec
rolb
sub
push
push
and
daa
mov
cmp
pop
or
mov
pop
and
fmuls
ljmp
ljmp
sahf
cld
test
lea
jnp
sub
in
sti
jae
test
rclb
das
adc
pop
stos
aam
xchg
rolb
rclb
fstpl
movsb
out
jnp
push
inc
aam
mov
mov
jmp
cmp
or
sbb
jmp
add
mov
push
imul
cmp
or
sbb
jmp
add
mov
push
imul
cmp
lds
aad
std
stc
xor
test
gs
pop
movsl
dec
mov
test
sub
cmp
mov
aad
fiaddl
lahf
arpl
xor
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
xchg
test
mov
mov
or
sbb
xor
ss
inc
pop
push
js
js
mov
mov
fcom
call
push
sbb
add
xor
daa
push
je
popf
adcl
cld
clc
out
adc
cmp
ja
inc
xor
add
das
je
test
std
test
into
aas
fwait
sub
or
mov
pusha
bound
pop
push
or
addr16
sub
dec
loop
fsubrs
insl
outsb
insl
jl
test
cld
aam
xor
rorl
xchg
ja
adc
rorb
xchg
pop
aam
nop
cmp
pop
and
mov
push
movsb
push
push
aam
xchg
popa
movsb
pushf
test
in
adc
mov
sbb
sbb
pop
pop
stos
jecxz
js
fdivrs
push
aaa
in
sub
mov
adc
popa
enter
pop
fsts
mov
out
movsb
inc
jg
fidivl
testl
or
push
test
scas
ffreep
enter
loope
adc
or
cmp
inc
inc
jb
js
in
std
xchg
int
int3
mov
xchg
mov
cltd
or
insb
pop
jno
pop
dec
sub
sbb
cld
stc
xchg
aam
mov
mov
out
subb
sub
ja
xor
push
or
in
subb
hlt
or
adc
and
xor
inc
pop
push
push
test
mov
fcom
call
add
adc
and
xor
inc
pop
push
push
test
cmpsl
movsb
stc
fcompl
mov
bound
dec
mov
imul
jae
imulb
jnp
cwtl
testl
mov
sbb
sarb
into
fisubs
popa
aam
jmp
in
push
icebp
fdivrp
outsb
movsl
stc
lret
je
and
and
lahf
sti
dec
lcall
aas
mov
mov
into
scas
pop
xor
mov
test
popw
test
fucom
cmp
mov
fstl
stos
enter
push
adc
adc
in
mov
or
or
insl
mov
xchg
push
scas
cmpsl
out
jne
add
jmp
dec
mov
rclb
repnz
mov
add
cmp
push
repz
sub
mov
leave
push
sbb
clc
sub
test
les
pop
data16
pop
inc
mov
add
mov
cwtl
mov
pushf
imul
jl
mov
stos
movsl
push
pop
pop
int3
jge
mov
dec
insl
dec
jmp
pop
jbe
xchg
cmp
xor
mov
iret
outsb
je
data16
or
lds
or
xor
xor
cmp
sub
mov
mov
or
popf
pop
xor
xchg
fidivrs
scas
cmp
lahf
loope
push
mov
jns
sti
lds
out
mov
daa
cld
inc
or
cwtl
mov
inc
dec
adc
test
movsb
xchg
repz
sbbl
xor
loop
mov
xchg
sbb
xlat
push
push
sub
in
int3
pop
leave
test
adc
icebp
sbb
outsb
mov
adc
jo
jo
or
aam
fwait
loope
jno
or
test
out
in
jo
sbb
jl
pushf
es
or
das
rolb
test
out
popf
jecxz
cld
pop
cmp
scas
adc
aad
inc
sbb
or
inc
xor
xor
xor
pop
pop
sbbb
mov
mov
icebp
ljmp
hlt
imul
or
add
dec
xor
pushf
test
out
xor
stc
shll
and
je
jno
je
lock
adcl
ret
lret
sub
sbb
test
add
sub
xchg
and
pop
pop
mov
outsl
jb
lea
int
jb
xchg
pop
pop
xor
add
outsb
pop
push
aam
cmp
jge
test
mov
jae
fistpl
enter
cli
push
xor
mov
xor
mov
rcrl
shrl
in
xchg
hlt
mov
fs
ljmp
dec
cmpsb
xchg
jbe
iret
iret
xlat
xchg
pushf
mov
lea
xchg
mov
sub
inc
dec
in
mov
lea
jns
pop
mov
and
cwtl
lret
pop
imul
pop
pushf
in
je
loope
inc
inc
cs
xchg
sbb
in
cmp
xchg
int3
imul
addr16
cmp
repz
stos
inc
mov
sar
mov
ss
xlat
outsl
xchg
inc
lock
ja
pusha
dec
xor
in
push
cmp
mov
out
dec
nop
inc
fistpll
es
and
shrl
inc
rclb
fwait
push
cmpsl
je
ja
adc
mov
inc
mov
jmp
mov
idivb
iret
lcall
sbbb
pop
std
jge
mov
dec
cmp
in
fwait
sbb
add
insb
and
push
lret
push
and
out
andl
sub
leave
cmpsl
loop
lahf
xor
sub
and
fiaddl
jle
call
add
inc
ljmp
cmp
into
xor
xor
std
aas
pop
arpl
xor
js
sub
cmp
stc
iret
mov
sub
push
pop
jne
in
inc
jle
mov
xor
out
inc
adc
sbb
pop
scas
inc
sub
adc
push
add
or
in
push
enter
fmul
cld
cs
sub
push
rorl
mov
je
jg
in
or
jl
mov
add
or
cld
fisttps
cmpsb
mov
mov
inc
repnz
sahf
mov
push
test
fists
sbbl
leave
or
fldt
bound
mov
dec
mov
in
xchg
and
ret
mov
in
jp,pn
sub
or
sub
imul
gs
sarl
jl
push
dec
lods
or
test
mov
inc
mov
cmp
push
xor
push
fs
or
aam
je
add
mov
lret
cltd
fldt
and
repnz
hlt
cmpsl
outsl
push
push
and
popa
es
pop
inc
hlt
mov
mov
rcrl
mov
imul
dec
push
inc
mov
roll
div
sbb
push
mov
sub
aad
sub
mov
add
xchg
into
jns
imul
push
inc
xchg
add
and
fsub
mov
push
add
sbb
pop
lea
mov
xlat
jp
inc
or
cltd
gs
stc
jo
mov
mov
test
mov
push
mov
cmp
out
lds
outsb
jns
jmp
repz
lods
ja
stos
or
out
stos
ret
sahf
roll
cmpsl
shll
push
push
jae
sbb
add
loope
rcr
lds
jg
jnp
fnstsw
sbb
mov
adc
imul
lds
dec
add
pop
xor
push
cmc
loopne
sub
rorb
lret
mov
shl
out
ja
pop
jmp
xor
out
scas
aam
or
pop
fcomps
and
xchg
or
xor
mov
in
idivl
or
cwtl
pop
sbbb
mov
push
add
mov
and
scas
lret
fldl
jg
adc
enter
inc
data16
add
cmp
push
fdivs
pusha
add
push
mov
fcomps
imul
push
and
test
sbb
lret
mov
push
xor
xor
aad
aam
mov
mov
jecxz
imul
rorl
xlat
sysenter
movsl
jns
in
dec
cmp
pop
lds
mov
cld
mov
cmp
fs
mov
hlt
cmp
and
inc
jo
cmpsl
int3
fldl2t
sbbl
jg
mov
cld
adc
jmp
cmp
notl
fsubrs
push
aas
mov
cmc
and
in
rcll
outsb
rolb
mov
pop
push
and
mov
jp
jg
and
bound
mov
or
shrl
icebp
push
jne
and
addr16
sbb
mov
shlb
icebp
pop
lret
mov
or
ss
lea
into
jp
xchg
push
dec
and
jns
mov
outsl
push
xchg
fucomi
dec
pop
in
mov
mov
mov
shl
cmp
push
cmp
sub
xchg
inc
jg
int
out
fiaddl
mov
mov
inc
mov
xor
in
shrb
mov
je
cmpsw
aaa
imul
repz
out
mov
mov
xchg
cs
adc
rcll
pushf
shr
cmp
fwait
roll
pushf
decl
rcll
xchg
nop
xor
lds
cmp
clc
lret
in
add
sbb
out
sbbb
cmp
mov
and
mov
xorl
test
jmp
gs
mov
nop
inc
insl
sbb
rclb
out
mov
adc
dec
push
nop
dec
lock
sub
inc
clc
stc
cld
cmp
jge
jmp
add
into
push
je
ret
movsl
dec
inc
fadd
dec
cmp
mov
dec
movsb
ret
sbb
mov
pushf
push
cli
mov
mov
push
xor
loope
push
jne
pop
cmp
repz
cmp
fcom
popa
lea
add
jnp
call
mov
sub
std
je
cmp
xor
adc
rorb
faddl
arpl
gs
fidivrs
ljmp
mov
or
aam
add
test
ret
clc
cmp
stos
push
into
mov
lret
divb
sti
scas
xchg
das
fwait
addr16
aas
sbb
mov
pop
mov
lret
sub
orb
jecxz
mov
mov
dec
push
inc
hlt
js
in
cmpsb
mov
aad
stc
xchg
jle
movsl
lock
jmp
ja
loope
jae
sub
or
xor
mov
mov
pop
xor
aam
mov
adc
fimull
imul
pushf
jno
into
jg
inc
and
pop
inc
fsubl
lcall
stos
ret
lcall
insb
mov
jle
mov
xchg
das
orl
sub
bound
sub
mov
nop
xchg
repnz
or
sub
xor
std
lahf
add
jno
cld
jg
push
imul
insl
sarl
std
cmp
nop
adc
add
push
popf
in
xchg
in
cmpsl
inc
lds
pop
cmp
adcb
pop
aaa
ret
dec
lret
xchg
ja
push
jb
lfs
lcall
inc
bound
pop
int
in
add
inc
fdivl
test
add
jmp
ljmp
loope
sbb
pop
pop
jl
cmp
xor
enter
repz
fld
adc
fistpll
in
loopne
jns
sbb
dec
adc
jno
aaa
insb
push
adc
je
jno
pop
movsb
mov
xor
inc
add
xlat
xchg
jns
fstps
sub
repz
imul
mov
lahf
dec
inc
cs
daa
add
mov
xchg
sub
jmp
xor
mov
add
xchg
dec
lods
sub
lcall
ret
test
cmpl
jnp
push
xchg
lds
hlt
xor
mov
cwtl
cmc
fcompl
js
cltd
sbb
pop
pop
xor
xchg
xchg
fmul
jb
mov
inc
sti
adc
lods
mov
or
jbe
and
xchg
or
scas
daa
into
in
lret
clc
aaa
jl
cmpb
cmp
clc
lahf
stos
divl
or
repnz
push
out
jno
xor
or
push
cld
mov
mov
cli
das
repnz
push
mov
add
xchg
scas
call
in
fsubrs
les
mov
inc
mov
insb
sbb
xchg
mov
popf
stos
pop
nop
push
subb
filds
rorb
es
mov
sub
popf
add
mov
out
repnz
out
rcrb
pop
xchg
jle
das
jb
pop
pop
xor
loope
mov
adc
mov
es
pop
das
test
adc
stos
clc
outsl
jle
sbb
std
pushf
jg
pushf
push
scas
pop
mov
cmp
xlat
jne
adc
jle
mov
add
data16
sarl
lods
or
sub
leave
pushf
inc
outsb
mov
dec
dec
in
jo
sbb
ljmp
sbb
cmpsl
mov
ds
mov
xchg
push
xchg
add
lret
mov
frstor
jge,pt
out
sub
shll
in
jg
mov
jp
inc
mov
movsb
stos
dec
and
inc
mov
jae
std
and
or
loope
ljmp
adc
sti
add
jbe
unpckhps
lock
adc
push
loopne
pop
inc
jo
xchg
stc
test
enter
mov
xor
sbb
loop
stos
push
test
jmp
enter
add
mov
sbb
pop
lcall
mov
mov
int
enter
jecxz
sub
cli
fdivr
mov
sub
mov
inc
sub
mov
lods
insl
popa
xchg
xchg
fsubl
mov
roll
pop
out
and
push
lret
loopne
ret
cwtl
sbb
or
dec
incl
lret
ret
fs
push
mov
testb
cs
scas
test
or
cmp
fnstsw
jge
mov
mov
popa
lret
gs
jne
and
mov
ljmp
clc
arpl
mov
mov
jne
fdivl
xchg
fmull
shlb
fstpl
dec
dec
mov
bound
lahf
sbb
pop
out
inc
xchg
jb
gs
or
mov
popa
insl
icebp
in
pusha
push
mov
inc
test
je
scas
adc
dec
cli
xor
and
jge
insl
push
imul
cwtl
loopne
mov
pusha
test
fisttpll
lret
xchg
mov
icebp
cmp
in
pop
mov
cld
sbb
jecxz
mov
cltd
mov
mov
lea
popa
mov
and
stos
mov
aaa
and
inc
mov
pop
sbb
shll
jnp
clc
push
pusha
jns
gs
sbb
cmpsl
leave
mov
insb
push
cmp
add
sbb
sub
lea
pop
xchg
add
add
mov
adc
cmp
dec
and
add
fdivrl
iret
lea
mov
fiaddl
int
repnz
dec
or
lcall
addr16
sbb
das
subl
es
pop
leave
pusha
aad
mov
mov
call
adc
mov
xchg
lret
testl
push
movsl
int3
cwtl
push
xchg
daa
pop
loopne,pt
fsubr
xchg
dec
mov
mov
in
xchg
jo
sbbl
lahf
cli
and
movsl
sbb
mov
mov
mov
sbb
push
imul
jecxz
mov
shll
data16
push
dec
or
mov
into
je
cwtl
and
adc
fs
out
xchg
xchg
in
dec
lcall
inc
push
inc
movsb
test
fnstsw
sbb
popf
imul
cwtl
in
fstpl
lods
stc
jbe
cmpsl
push
repz
bound
jae
jae
add
cmpsb
sbb
lcall
lods
pusha
lock
sti
inc
mov
jno
outsl
xor
addl
xchg
adc
int3
mov
data16
pop
fsubrl
es
idivl
int
into
xlat
sub
push
adc
mov
jbe
sarl
sar
into
out
dec
call
jg
jns
scas
imul
or
loop
push
jns
add
test
jle
cmpsb
cmpsl
xchg
sub
popf
jl
addr16
adc
add
andb
out
jp
movsl
mov
cmpsl
cs
rolb
clc
mov
push
sbb
push
movsb
stos
je
mov
jno
lds
mov
das
mov
jne
mov
inc
scas
inc
inc
out
scas
lahf
hlt
enter
push
testl
xor
fcom
dec
pusha
sub
int
sub
aas
mov
movsl
imul
cmpsl
push
jne
sub
xchg
or
rcr
jl
mov
insb
subb
sbb
dec
mov
mov
std
push
int
insb
sbb
and
in
iret
scas
mov
jns
arpl
push
ret
gs
xchg
hlt
fwait
xor
pusha
sahf
and
stos
sub
cltd
and
xchg
jg
mov
lahf
and
das
sub
and
or
xor
movsl
fcomi
mov
std
xchg
pop
xor
push
test
pusha
lock
xchg
fadds
sub
push
mov
loope
mov
or
dec
dec
pop
cmpsl
add
fiadds
mov
sub
ljmp
cmp
and
mov
jb
push
or
ss
or
lahf
pop
jg
adc
clc
push
and
add
out
cmp
and
jb
jmp
push
mov
pop
and
mov
dec
pop
outsb
stc
roll
push
in
or
leave
xchg
stos
mov
pshufw
cmpsl
or
mov
cmp
vcvttpd2dqy
cmp
xchg
push
popf
pop
inc
inc
sbb
dec
test
mov
nop
cmp
in
mov
xchg
push
insl
mov
inc
xor
sbb
stos
repnz
cmp
cltd
xchg
xor
or
int
sbb
xchg
in
and
lret
or
or
inc
adc
scas
cmp
sbb
fimull
xchg
add
and
daa
cmp
lods
push
pop
mov
xlat
push
sbb
ds
es
pop
mov
push
repnz
jp
push
pushf
sub
rol
adc
jnp
outsl
xchg
jb
js
movb
outsb
and
cmp
ja
out
dec
or
std
jae
or
in
test
fucomi
enter
les
arpl
dec
sbb
push
and
push
dec
jg
je
cwtl
sar
aas
dec
sub
and
adc
loop
and
jmp
push
xor
xchg
lret
cmp
xor
subl
daa
aaa
adc
ljmp
cmp
stos
mov
repnz
and
fstpl
mov
sub
and
sub
sbb
adc
adc
testl
mov
sub
mov
dec
mov
notb
or
push
sub
mov
pop
add
mov
pop
xchg
lods
loopne
iret
das
jg
in
loopne
leave
jo
adc
and
mov
in
shlb
cmc
out
pop
mov
dec
jne
mov
dec
mov
and
jno
je
fcmovne
mov
cmp
out
mov
stos
jecxz
cmp
push
xchg
mov
shrl
in
sbb
cmp
or
jns
cmp
fadds
push
sbb
sbb
push
cmp
jge
into
gs
movsl
in
sub
in
mov
scas
in
adc
adc
sbb
cli
ficomps
cmp
xchg
lock
pushf
cltd
sub
add
add
lcall
lret
mov
ret
insl
fdivrs
adcb
lods
sub
mov
mov
repnz
clc
cmp
cwtl
or
xchg
popf
or
pop
ret
cli
push
fwait
mov
xchg
inc
jbe
popf
xchg
pop
aad
pop
test
outsl
add
and
sub
adc
out
leave
imul
sbb
xor
fcmovb
outsl
stc
movsb
pop
mov
mov
mov
push
fcmovnu
sub
jbe
cmp
movsl
outsb
lahf
out
pop
leave
jae
add
pop
lds
rolb
sahf
fiaddl
jno
sub
or
lret
popa
pop
inc
push
pop
cmp
lods
stos
mov
cmp
cmp
xchg
ja
pop
movsl
les
hlt
or
xorb
ror
adc
xchg
mov
adc
daa
test
push
setno
js
jg
lret
fdivrp
adcb
lea
lahf
repnz
sahf
outsb
sub
or
scas
push
add
shrb
clc
arpl
adc
cli
dec
mov
rcr
and
push
pop
js
mov
jp
lahf
xor
negb
adc
push
jge
or
out
push
mov
dec
jecxz
gs
ljmp
pop
or
or
jmp
andl
cmp
pop
and
mov
add
pop
imul
or
dec
movsl
loop
out
test
loopne
adc
pushf
xor
roll
and
and
in
aad
stos
fwait
sub
arpl
data16
loop
inc
xor
sub
or
jmp
push
pusha
jl
mov
push
arpl
ljmp
mov
push
cmp
sub
ror
cld
fisubrs
cmp
ret
out
and
mov
enter
pusha
mov
imul
cli
cwtl
add
bound
adc
cmp
out
shl
adc
add
loopne
pop
jecxz
add
add
cmpsb
iret
pusha
pop
and
push
push
lock
shr
stc
xchg
jle
mov
cli
fwait
or
arpl
pop
jl
dec
adc
mov
std
js
cmp
dec
cli
push
mov
xchg
pusha
push
jno
add
xor
icebp
lea
je
inc
sub
repz
mov
mov
cmp
inc
xchg
aaa
xchg
mov
int
adc
push
sti
mov
loope
jle
pop
jecxz
xchg
inc
xchg
jns
ss
cmpsb
sub
xchg
mov
pop
push
pusha
push
xor
add
stos
dec
fisubl
out
rclb
int
divl
jecxz
xchg
rorb
sbb
xchg
xor
xchg
mov
fcom
call
add
adc
and
xor
inc
pop
push
push
test
mov
fcom
call
add
adc
and
xor
inc
pop
push
push
test
mov
fcom
call
add
adc
and
xor
push
test
mov
fcom
push
add
mov
aas
int3
shrb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
add
das
ss
inc
dec
and
inc
add
lret
xchg
cmpsb
scas
mov
into
fsubp
jmp
jmp
push
pop
dec
das
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
xchg
idiv
mov
das
out
aas
pop
dec
ss
js
jbe
loop
mov
into
lret
lods
mov
push
jl
pop
inc
cmc
push
mov
insb
pop
jp
or
arpl
hlt
cmp
addl
loop
repnz
pminsw
cmpsb
inc
mov
push
out
cmc
jo
loop
and
stos
cmp
mov
pop
push
fists
and
popl
pop
xchg
outsb
mov
mov
mov
mov
xor
xor
cmpb
cmp
imul
jae
pusha
and
cmp
aas
out
idiv
stc
iret
sbb
push
shrb
mov
ds
jg
jo
mov
pushf
iret
push
xchg
pop
stc
push
mov
daa
xchg
enter
mov
divb
fiaddl
dec
fiadds
add
inc
pop
es
ss
mov
outsl
sarb
or
shrb
aam
idivb
push
outsb
dec
jle
or
sub
or
xchg
lds
mov
mov
lcall
push
pop
das
or
sbb
ljmp
mov
mov
dec
inc
dec
gs
adc
outsl
jbe
xchg
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
cmpxchg
in
idiv
mov
in
sbb
mov
sub
scas
por
repnz
fldt
fs
mov
imul
lret
dec
adc
test
adc
jl
add
mov
jmp
xchg
add
cmpsb
mov
add
int
pop
call
in
pushf
lock
jmp
pop
xchg
mov
iret
pop
aas
jb
cmp
jmp
pop
adc
cmp
in
out
sbb
mov
enter
pop
inc
inc
or
bound
and
jne
inc
xor
inc
xchg
popf
insl
and
push
lcall
dec
jecxz
cmp
mov
jl
mov
xchg
add
loop
icebp
cli
cmp
loop
addr16
dec
jge
cmpsl
arpl
imul
add
test
cli
fstl
scas
stos
outsb
in
jae
cmp
jae
cmc
insb
adc
lret
xor
loop
mov
mov
aas
cmp
in
inc
mov
test
clc
and
adc
dec
xchg
pop
push
ljmp
and
xor
ljmp
mov
jmp
call
in
out
push
fisubl
lret
sbb
repz
jl
push
cli
mov
mov
pop
ja
mov
clc
hlt
imul
mov
int3
push
mov
shrl
scas
mov
push
shl
adc
movsb
loopne
sbb
pop
pop
pop
dec
jecxz
imul
mov
mov
in
data16
cmc
jnp
outsl
aad
stos
xchg
cmp
add
int
sbb
subl
xchg
mov
pushf
pop
cmp
mov
mov
lods
xor
pop
aas
nop
pushf
mov
pop
popa
dec
xchg
push
sub
outsl
adc
jl
pop
pop
mov
mov
loop,pn
mov
and
or
lock
add
mov
mov
mov
fidivl
xor
cmpsb
xchg
push
mov
and
or
pop
inc
push
in
in
cmp
jnp
xchg
add
stos
mov
mov
jp
imul
jle
sub
inc
sbb
js
sahf
nop
rolb
mov
arpl
add
daa
lcall
je
fsubp
lcall
mov
mov
test
leave
lock
sub
fstl
pop
or
incb
mov
out
adc
fsubp
xchg
pop
add
mov
lds
loop
pop
movsb
fsubrp
in
mov
xchg
cld
out
jle
dec
or
and
pop
jo
lret
xlat
xlat
push
cmp
mov
call
jp
movsb
gs
lahf
add
scas
cld
aas
pusha
scas
pushf
jnp
inc
cli
pop
pop
sbb
and
clc
fildl
arpl
std
cmp
repz
out
and
dec
mov
cmp
push
insb
bound
mov
cmp
sub
jnp
outsb
cmp
sub
nop
mov
mov
and
lea
or
outsl
add
mov
sub
stos
outsl
bound
and
cmp
xlat
addl
stos
stos
xor
lock
and
mov
push
mov
clc
push
xor
fucomp
inc
xchg
jbe
xor
in
jle
loop
std
inc
xor
dec
mov
shlb
out
data16
ja
xchg
leave
sbb
push
mov
dec
cli
pop
clc
dec
imul
lock
xor
into
mov
dec
aam
in
test
add
inc
rcl
stc
jg
int3
cwtl
into
mov
inc
lcall
jnp
and
dec
pop
mov
inc
cmp
xchg
aad
pop
push
les
adc
les
or
icebp
sbb
dec
ret
arpl
push
outsl
jns
dec
in
mov
add
popf
cmpsb
rcrl
repnz
aaa
lods
pop
shll
cmp
xor
int3
xor
sub
mov
call
lret
lahf
sub
xchg
jp
je
aam
int
and
sub
dec
cli
jg
cmp
push
add
xchg
sub
xchg
loope
add
push
jmp
out
sub
data16
int
push
insl
and
stos
sub
cs
lcall
mov
add
mov
cwtl
daa
add
sub
insl
push
lods
out
pop
jp
adc
pusha
out
dec
es
ficoml
xchg
or
jne
bound
fildl
stos
ljmp
jns
ret
std
js
scas
jne
xchg
fldt
sbb
popa
cmp
mov
cmp
hlt
insl
gs
push
into
xchg
bound
push
stc
add
push
insb
push
mov
imul
testl
xorb
loope
dec
add
dec
jb
imulb
push
dec
test
cs
in
dec
jl
push
xor
ret
inc
sub
mov
pop
jmp
fwait
and
fs
push
inc
mov
lea
lret
and
sbb
repnz
lds
inc
stos
outsl
cmp
insb
jecxz
and
inc
and
out
mov
mov
mov
or
les
push
push
in
stos
mov
pusha
dec
sbb
cmp
ljmp
cmp
shrl
push
jae
cmpsb
inc
mov
subl
testb
cwtd
movsl
fldcw
out
adc
cli
bnd
pop
mov
movsl
sbb
pop
sbbl
imul
ljmp
test
push
and
ja
sub
push
xor
clc
lahf
xchg
xor
sbb
xor
or
and
or
or
xor
cmpsb
scas
sub
inc
loope
xor
std
pop
jae
jl
xchg
inc
cmpb
repz
sbb
mov
stc
inc
dec
jo
adc
xchg
sub
scas
shrb
sub
mov
leave
push
sbb
rcrl
inc
pop
mov
jbe
call
int3
cmpsl
mov
clc
enter
imull
lds
or
jecxz
dec
cmp
pop
add
mov
lea
int3
inc
divb
jge
sbb
jge
stc
cmp
jge
lret
xchg
loopne
push
mulb
mov
xchg
pop
or
dec
inc
sbb
insb
iret
pop
and
adc
mov
mov
imul
pop
xlat
xchg
pop
xchg
mov
pop
mov
dec
adc
push
mov
dec
fld
mov
sub
pop
jno
stc
jnp
test
pop
or
dec
test
xor
xlat
es
xorb
rorl
xchg
adc
xchg
mov
sbb
mov
mov
push
xchg
daa
pop
pop
popa
jl
cmpsl
aaa
adc
xorl
add
aam
lret
dec
lret
pop
inc
shl
inc
xchg
stc
jo
push
mov
mov
in
inc
mov
sbbb
jecxz
std
mov
pop
mov
shlb
xchg
mov
addl
sbb
in
sub
jno
adc
test
sahf
scas
push
or
int
mov
mov
xor
out
pop
and
movsl
xchg
call
jne
xor
cltd
cmp
movsl
pop
cmpsb
pusha
jg
dec
jmp
roll
jl
xchg
and
sarb
ret
aaa
insl
aad
testb
push
testl
rcr
sbb
xchg
scas
push
push
test
icebp
fs
xor
scas
xor
js
lock
inc
mov
addl
sub
daa
mov
imul
sbbl
push
mov
adc
subb
jb
sub
movsl
xor
fsubs
insl
cltd
outsl
jno
scas
add
mov
jnp
cld
or
adc
das
lds
and
fadd
ja
out
sbb
fcmovne
mov
fcoml
or
or
stos
pop
int3
dec
lret
repnz
fisubl
lret
popa
jmp
out
mov
cli
insl
inc
ss
data16
rcrb
fsubs
int
enter
mov
mov
mov
sbb
xor
fsubl
dec
mov
lods
popa
psubusw
mov
outsl
inc
loopne
les
rcrl
push
mov
or
push
pop
fidivs
mov
out
cmp
out
add
add
aad
or
lret
cmpsl
add
sbbb
aam
xchg
inc
aas
mov
adc
adc
xor
pop
pushf
and
scas
push
sub
cmp
push
ja
lea
and
clc
imul
repnz
ret
inc
sub
hlt
inc
add
in
std
sbb
push
xlat
out
adc
popa
mov
or
and
jmp
pop
xchg
jbe
add
push
adc
leave
push
ljmp
fs
dec
push
inc
fwait
inc
repz
sub
jle
cltd
sbb
xchg
aad
cltd
push
xor
push
outsb
fwait
outsb
mov
cltd
inc
test
scas
mov
rcl
in
rcrb
popf
xchg
add
insb
das
mov
add
and
movsb
fs
frstor
dec
sbb
lea
jl
les
lods
orb
and
adc
rcll
loope
aas
mov
xor
dec
scas
cmp
xchg
enter
pop
jmp
lods
pushf
xor
cli
orb
and
dec
fld
xorb
addr16
mov
loope
test
and
mov
test
addr16
push
inc
popf
clc
jno
and
aas
pop
mov
movsb
cltd
jmp
push
out
jae
xchg
out
lods
aas
pop
push
shlb
jae
inc
add
jbe
push
icebp
in
mov
jne
xor
xor
push
xor
inc
mov
out
and
test
repz
add
xchg
out
xchg
xchg
bnd
lahf
icebp
test
cld
mov
sarb
je
jbe
leave
pop
int3
scas
jae
pop
ret
and
sub
xchg
push
addr16
cmc
int
mov
pop
xchg
xor
in
nop
std
mov
mov
xor
xlat
loope
or
inc
ret
fldt
data16
out
pop
fcompl
nop
stos
icebp
mov
sbb
push
pop
lcall
jns
fwait
out
outsb
repnz
rorl
mov
out
dec
loop
insb
adc
xor
sbbb
into
stc
fdivs
idivb
cmp
call
xchg
sbb
mov
jmp
mov
emms
pop
xchg
mov
in
adc
js
cwtl
scas
in
sbb
sarb
popl
jb
fstpt
lcall
idivl
dec
test
or
lock
cmp
cltd
sub
or
dec
scas
inc
cmpsl
scas
mov
push
js
out
das
mov
lods
pushf
fdivrl
ljmp
cwtl
sti
mov
xor
xor
or
inc
jnp
loope
jno
stos
and
pop
aaa
nop
pop
lret
push
mov
sbbl
repnz
lcall
notb
xchg
mov
lahf
arpl
cltd
ror
aam
push
imul
or
aaa
mov
jo
adc
icebp
das
or
lcall
int3
lods
xchg
scas
mov
faddl
ss
lea
cld
out
sbb
clc
jmp
and
sbb
imul
sub
mov
bound
mov
fldenv
loopne
cli
ss
popf
je
loope
addl
push
je
aad
lock
fstps
repnz
mov
mov
leave
cmp
lret
fistps
cmp
sub
xor
add
mov
dec
ret
js
mov
sar
adcl
cmp
or
pop
lds
xchg
or
xchg
in
das
adc
gs
jne
mov
lret
or
sub
mov
test
mov
loope
les
dec
out
add
int3
lcall
cmp
mov
es
dec
jno
jmp
xorb
test
xor
js
insb
push
shrl
jb
fwait
ret
push
mov
lret
scas
fnstenv
fildl
ds
test
jl
sarl
mov
enter
mov
pop
adc
cli
mov
lods
jl
sbb
xchg
sbb
pop
or
adc
lcall
fwait
inc
pop
jle
sar
scas
outsl
vpsubq
test
mov
lret
loopne
and
ja
or
dec
cmp
dec
pop
rclb
cli
popf
pop
and
push
repz
push
mov
xor
inc
fwait
loope
sbb
mov
inc
test
cmp
xchg
fidivrl
adc
lds
xor
popa
and
xchg
push
cwtl
cmpsl
adc
inc
repz
jbe
cmpsb
popf
filds
nop
inc
adc
or
sbb
push
stc
inc
xor
push
cwtl
jne
or
xor
pop
fstl
bsf
cmp
mov
test
push
in
cmp
sbb
lret
push
mov
jle
jge
fwait
cmpsl
inc
push
adc
add
int
xor
adcl
jae
js
scas
jbe
int
clc
sub
mov
shlb
sub
in
cmp
mov
decb
jae
testb
jb
sub
mov
fwait
add
cwtl
mov
insb
in
int
lods
test
xchg
sub
inc
mov
js
adc
icebp
push
adc
adc
sti
fimull
jae
xlat
cwtl
int
xor
sub
lret
dec
mov
push
jge
inc
dec
sub
xorb
jns
test
sub
out
xchg
inc
inc
pop
lock
dec
imul
ss
and
jo
jmp
push
movsl
cld
cmp
mov
add
jns
imul
adc
and
mov
xchg
adc
fcmovb
mov
js
sbb
mov
cmpsl
ss
push
ret
mov
imul
inc
push
stos
cmp
cmc
or
mov
adc
test
xchg
shl
lods
xor
cs
mov
ss
inc
inc
gs
jne
divl
sub
sub
fidivs
push
mov
sbb
fsubrs
popa
pop
jns
shlb
mov
mov
adc
shll
sub
lcall
cwtl
jmp
xchg
shll
mov
sahf
inc
pop
inc
dec
imul
xchg
rolb
jne
fistl
std
push
dec
dec
int
and
mov
add
xor
and
sbb
shll
aas
lods
xchg
lods
stos
add
stos
out
adc
ret
fisubrs
adc
sbb
mov
pop
pop
rcrb
icebp
orl
subl
jo
orb
mov
mov
push
cltd
sub
cmpsl
out
adc
sbb
jg
aad
and
test
xlat
outsl
cwtl
into
pop
je
push
and
mov
cltd
subb
and
cmp
push
dec
daa
ror
cmpsl
lods
mov
cmp
adc
lahf
iret
int3
inc
xor
pop
psubd
cwtl
es
lea
mov
in
cs
or
and
jle
hlt
sub
rolb
pop
dec
add
push
ja
out
mov
mov
adc
movsl
ss
cmp
dec
xchg
push
arpl
out
ljmp
jnp
test
dec
fsubl
lds
mov
fsubrl
jle
mov
mov
mov
inc
inc
popa
inc
das
out
add
fs
nop
xchg
mov
sbb
es
push
xchg
jmp
push
sbb
xor
movb
mov
add
sub
movsl
lods
ret
cmp
xor
in
mov
jne
cs
adc
xchg
pop
rcll
xor
pop
inc
dec
push
sbb
inc
sub
pop
add
add
pop
xlat
je
enter
push
dec
mov
fwait
adcb
pushf
mov
lds
pop
into
mov
std
ret
mov
in
sub
in
xor
orl
es
test
das
jbe
mov
mov
adc
outsl
nop
jo,pt
jnp
leave
arpl
fnstcw
stc
rcrl
lcall
xchg
repnz
nop
loopne
pop
ret
jecxz
pop
cs
icebp
fmul
rcr
inc
xchg
js
pop
dec
loope
std
or
xchg
inc
xchg
pop
and
and
les
or
fnstenv
mov
add
mov
sub
lods
push
sbb
jp
fdivr
jmp
addr16
adc
fcmovne
mov
fs
ret
push
sbb
inc
hlt
mov
pop
pop
andb
add
xor
xor
mov
sbb
push
and
and
stos
fstpl
jae
leave
shll
push
or
add
xor
scas
insl
pop
pop
mov
mov
aam
dec
cmp
test
icebp
fadds
jae
cmp
jb
in
cmp
jmp
mov
or
call
lret
hlt
or
incb
mov
lahf
cmp
mov
imul
inc
add
cmp
mov
pushf
mov
lods
push
inc
ja
xchg
jp
orl
cwtl
sub
add
fldt
test
push
add
loopne
or
xchg
and
cmp
jb
call
shlb
sub
imul
or
icebp
ds
dec
cmp
imul
dec
adc
insl
dec
sub
clc
pop
mov
push
or
xchg
or
and
adc
cmp
or
and
xchg
sbb
sub
mov
pusha
adc
repnz
js
sub
in
or
gs
mov
xor
dec
cmp
add
mov
out
inc
or
add
lock
push
ficoml
dec
pop
push
les
movsb
fnstsw
subl
fisubl
mov
mov
stos
mov
sub
in
dec
daa
stos
mov
rcrl
xor
loop
and
sub
aas
sahf
inc
mov
arpl
push
repz
push
fsubl
pop
mov
inc
pop
nop
pushf
xor
addr16
or
cli
loope
lods
mov
xchg
push
test
imul
add
daa
adc
or
dec
ljmp
std
ds
mov
or
daa
xlat
pop
and
mov
mov
insl
lea
push
aad
rol
mov
lcall
out
mov
xor
push
imul
stos
jg
arpl
jmp
dec
xor
jge
stos
jne
add
lea
mov
mov
jmp
xor
xchg
push
pop
negb
jb
daa
jo
test
pop
mov
adc
xchg
sbbl
ret
repnz
xchg
sbb
cltd
pop
pop
cmpsl
jmp
sbb
mov
mov
jae
popa
out
ret
pop
movsl
aas
mov
addl
sbbl
shl
and
pop
out
jp
jne
fcmovbe
fadds
test
jle
repnz
outsl
incb
shlb
leave
lcall
mov
jge
sbbb
data16
push
sub
ljmp
das
add
stos
movsl
mov
xchg
aas
jno
pop
sub
pop
fcoms
aas
push
sti
xchg
mov
pushf
and
mov
or
adc
sbb
jmp
test
mov
jecxz
mov
sub
je
outsl
loopne
xchg
add
pop
bound
push
push
insb
aas
insb
push
xor
mov
inc
cmp
add
dec
ds
xchg
movsl
or
mov
or
mov
xchg
pushl
in
mov
idivl
and
jns
js
lret
out
cwtl
or
dec
xchg
xchg
sbb
ret
dec
fsubrp
or
dec
ss
jne
cltd
stos
lock
cld
leave
inc
cmp
fmull
mov
jmp
idiv
repnz
inc
mov
lret
mov
cmp
outsl
mov
rolb
test
in
testb
insb
lcall
sub
pop
decl
mov
sbb
pop
fmulp
xor
mov
inc
loop
or
xor
mov
cmpsb
out
imul
testl
ljmp
push
arpl
lods
mov
dec
mov
sbb
mov
add
pop
dec
loope
pop
dec
or
pop
lock
scas
movsl
mov
dec
jae
mov
mov
xchg
lahf
push
jecxz
lret
imul
xor
sub
mov
push
xchg
inc
push
xor
ret
mov
sbb
add
add
sbb
sbb
pop
cmp
sbb
add
pop
popa
das
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
pop
inc
das
ss
dec
push
pop
outsw
mov
xchg
mov
iret
out
push
call
cmovp
jl
push
aas
inc
dec
inc
pop
outsw
idivb
or
mov
mov
pop
and
adc
add
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
