xor
add
adc
mov
or
outsl
mov
jae
addr16
sbb
adc
lods
test
out
mov
jle
out
mov
ds
fprem1
add
mov
loop
mov
push
testl
jg
adc
jo
loopne
hlt
push
iret
loope
mov
sbb
daa
dec
mov
addr16
push
cs
lcall
fldl
push
pop
cwtl
repnz
cmp
jno
sub
xor
and
xchg
pusha
jno
imul
push
fsub
jnp
roll
mov
xor
je
cwtl
adc
xchg
add
movsb
inc
mov
mov
add
shr
data16
sub
mov
arpl
mov
pop
xor
mov
cmp
push
and
out
movsl
inc
pop
sub
mov
rcrl
in
add
push
rcll
adc
outsl
lret
cmp
rcll
dec
sbbl
mov
dec
pop
ret
and
inc
and
xchg
mull
lds
sub
mov
fcomps
xchg
mov
jbe
xchg
jecxz
jae
mov
xchg
adc
pusha
add
ret
test
dec
dec
ret
mov
push
xor
mov
icebp
in
clc
ret
cs
data16
jno,pt
ss
int
dec
int3
popl
iret
add
lock
fcoml
shlb
sahf
out
into
lds
lcall
dec
sub
fs
mov
repnz
xchg
rorb
cli
ficompl
popf
pop
inc
call
adc
adc
test
pushf
xchg
pop
sub
or
mov
divb
pusha
sub
cmp
stos
dec
push
gs
xor
dec
mov
cmp
arpl
inc
ss
test
sub
xchg
jecxz
fbstp
jne
outsb
fidivrs
bound
repz
cwtl
mov
pushf
paddd
dec
loop
rcll
sub
pop
andl
fiadds
xor
push
enter
loope
std
mov
xchg
aaa
and
loopne
fdivs
mull
flds
xor
push
in
in
sub
mov
xor
add
gs
cmp
mov
cmp
inc
lret
mov
adc
mov
ja
movsl
pop
loopne
and
mov
fcoms
lret
mov
mov
ds
pop
inc
pop
jbe
addr16
fcoms
imul
pop
mov
sbb
or
cli
push
cmpsl
repz
pusha
ds
call
mov
or
push
ljmp
aas
cmp
jae
mov
sbbb
sub
hlt
adc
or
cltd
lea
xor
mov
lods
iret
aad
int
inc
cmp
outsb
push
fbstp
lcall
pop
jbe
pop
or
pushf
xchg
push
push
push
dec
fimuls
loop
jb
stos
pop
mov
sub
cwtl
jnp
or
jno
dec
sar
in
enter
dec
cmp
int
or
mov
subl
dec
inc
hlt
and
lret
ljmp
mov
scas
je
sub
xlat
add
push
sub
test
arpl
test
dec
jecxz
mov
pushf
and
call
sti
bound
cmp
shl
cmp
mov
ret
pop
jae
addr16
enter
repnz
bound
data16
jg
in
fistl
loope
dec
push
mov
and
add
inc
shll
cwtl
xorb
adc
cmp
sti
call
adc
in
data16
sti
fwait
arpl
add
jns
pop
sti
sub
loope
sbb
push
mov
push
in
xchg
je
enter
mov
or
mov
pop
aas
addr16
icebp
dec
aad
in
in
jne
sub
fwait
jmp
sarb
scas
dec
add
sti
and
xchg
lods
outsl
mov
push
jmpw
imul
pop
negb
dec
pusha
pop
scas
ss
mov
jge
jb
fstps
addr16
icebp
daa
rep
and
jge
aas
xchg
add
rcr
out
mov
into
sub
add
fsub
dec
aam
fimull
das
mov
or
dec
xchg
mov
xchg
lock
xorl
jg
dec
dec
jne
pop
loope
xchg
insl
and
test
jge
stos
mov
iret
jmp
es
aas
leave
leave
inc
out
mov
mov
and
in
mov
lret
das
dec
dec
xlat
add
inc
adc
push
ficoml
inc
dec
pusha
cmp
je
imul
push
scas
dec
dec
sub
jl
jb
inc
roll
xlat
add
jnp
cmp
push
enter
in
sub
mov
es
jnp
mov
or
shll
jne
aam
mov
xor
add
outsb
sbb
sbb
fucomi
repz
aam
idivl
mov
xorb
inc
pop
mov
mov
xchg
test
std
jmp
out
mov
es
or
inc
cs
fsubs
repz
dec
in
mov
sub
ljmp
push
shl
pop
cli
cmp
jo
adc
lods
push
faddl
adc
stc
jp
xor
dec
in
jbe
cwtl
ljmp
xor
dec
xchg
or
mov
les
push
or
andb
into
and
push
sbb
mov
inc
mov
jmp
test
lcall
stos
pop
cmpsl
jae
mov
aas
ficoml
or
dec
loopne
call
dec
dec
inc
adc
lret
and
out
nop
add
fwait
pop
pusha
stos
push
pop
or
xor
cmc
pop
in
aam
add
das
pop
dec
cmp
jne
push
inc
andb
or
adc
in
jl
lea
jns
inc
ja
sbb
sub
fwait
lret
lcall
mov
test
cmpl
sub
pop
xchg
xchg
push
pop
xor
adc
add
stos
inc
insb
mov
addb
cmp
hlt
cmpsl
fiaddl
cmp
dec
or
adc
add
stos
xor
shll
fcom
int
rcrb
push
loope
sub
jp
mov
push
mov
gs
movsl
push
mov
fdivrs
lcall
push
adc
jb
cltd
mov
out
outsb
in
js
out
lods
rcrl
pop
js
pop
sub
jb
cmpsl
pop
into
sub
push
pop
push
pop
cld
sub
pop
dec
mov
in
mov
leave
rolb
pop
or
mov
lret
push
sbb
test
inc
cli
inc
adc
daa
xor
jbe
pushf
aas
mov
cmc
rcr
int3
clc
dec
lret
iret
aas
xchg
xchg
pop
inc
loop
mov
pop
dec
cmp
cwtl
cmp
xchg
out
mov
jnp
decb
fmuls
mov
push
and
push
xchg
sbb
pop
dec
mov
mov
je
mov
add
xor
insl
into
sub
insb
lahf
sbb
adc
sbb
push
inc
xlat
pop
dec
shlb
mov
cltd
loope
jle
daa
loope
outsb
daa
or
jb
sub
pop
mov
and
dec
or
push
cmp
pop
xor
out
adc
and
xchg
inc
cmp
pop
mov
pusha
call
mov
add
aam
inc
mov
pop
ja
pop
fucomp
repz
mov
sbb
lods
inc
testb
pop
or
dec
inc
cld
repnz
fldcw
mov
push
dec
imul
repnz
mov
in
into
ja
insl
fnstenv
test
adc
into
ret
mov
or
pop
pushf
and
mov
addl
mov
aam
sbb
loopne
lods
nop
lea
sbb
xor
sbb
xchg
jmp
in
mov
out
jge
movsb
jbe
push
out
cmpsl
fcmovnbe
ret
dec
push
lds
jb
and
xchg
mov
inc
mov
mov
xor
out
cmp
daa
push
mov
mov
push
nop
mov
inc
lock
out
cmp
ss
rolb
mov
mov
in
lods
sub
loop
fiadds
adc
in
add
in
loope
jo
aad
and
outsl
lret
xchg
jp
cmpl
or
jp
clc
adc
cld
or
dec
jb
jg
ret
jg
lods
mov
lds
inc
icebp
cmp
in
pop
fists
notl
mov
mov
ljmp
scas
pop
insb
jp
xchg
int
or
xchg
pop
cmp
pusha
outsl
loopw
outsl
leave
mov
aaa
mov
xchg
leave
rolb
add
out
add
add
cmp
inc
cmpsl
pop
dec
flds
xchg
adc
add
mov
clc
pop
rorb
call
mov
push
loope
push
sbb
push
pop
daa
or
xchg
dec
sub
out
cmp
cmp
lcall
pop
pop
insb
test
inc
jp
jl
popa
jno
enter
mov
int
mov
ficoms
inc
cmp
cmpsb
fstpl
xor
popa
xor
idivb
or
adc
movsb
adc
jp
pop
xchg
or
shlb
mov
jl
xchg
pop
fwait
jne
hlt
add
jge
add
inc
das
sbb
add
iret
sbb
aaa
mov
pop
pop
inc
sub
dec
pop
jo
xor
outsb
push
jne
push
sarl
mov
cmp
pop
ret
movsb
shr
and
mov
clc
xor
in
mov
pop
cmpsb
xchg
idivl
adc
xor
rol
outsl
insl
mov
stc
idivb
pusha
shll
sahf
ret
loope
adc
and
xor
addb
inc
push
lods
xor
pushf
xor
pop
fisubs
jmp
cmp
dec
sub
fldt
push
adc
adc
pop
push
rcrb
sub
dec
jecxz
imul
or
idivl
dec
imul
pop
ret
push
inc
fidivs
iret
sbb
xor
lds
stos
pusha
stos
cld
add
push
mov
push
xchg
bound
mov
or
cmpsb
outsb
sub
rorl
out
inc
fwait
or
sbb
jnp
loope
mov
xor
jo
rolb
mov
rol
in
imul
mov
add
nop
aam
loop
int3
adc
mov
dec
lcall
das
ljmp
shll
xchg
push
dec
lret
pop
add
mov
mov
cmp
call
push
je
jl
jnp
aad
fcompl
loope
xchg
je
mov
pop
out
push
sub
lods
pushf
out
mov
shlb
std
inc
es
fsub
cltd
test
mov
ss
scas
or
test
pop
aaa
decl
sub
mov
mov
pop
xchg
sub
insl
push
pop
lock
fcoms
inc
ja
cmp
mov
adc
in
sub
mov
jge
mov
in
clc
mov
dec
ss
int
shll
xor
test
xchg
insl
mov
lret
stos
lds
xor
and
pop
xchg
add
int
xchg
lods
mov
push
push
inc
jbe
outsb
dec
inc
aas
xor
in
lret
into
mov
repz
adc
call
jl
mov
dec
sub
shr
jne
inc
shll
mov
stos
out
sbb
push
mov
movsb
daa
dec
cmpsl
mov
enter
sub
push
xor
add
div
arpl
repnz
lea
fs
rorl
xor
jbe
fcmovne
mov
sbb
test
sbbl
ret
nop
outsb
mov
inc
pop
and
movsl
pop
mov
mov
rcl
in
sub
js
pop
fdivl
movsl
xrelease
adc
cmp
loop
mov
sbb
sbb
aaa
fstl
sbb
lods
fwait
inc
and
xchg
daa
js
and
pop
daa
push
movsl
mov
es
daa
inc
insl
movb
mov
and
fs
mov
mov
mov
inc
mov
daa
sub
xlat
loope
inc
mov
lret
add
ror
xor
mov
insl
mov
and
jae
cmpsb
in
xorl
dec
hlt
lods
xor
jecxz
mov
fistps
xchg
mov
dec
pop
cmp
push
or
push
xchg
test
cmc
cmp
sub
enter
lock
stos
popa
pop
pop
dec
push
push
outsl
shlb
leave
cmp
loopne
dec
or
shlb
dec
mov
jno
std
pop
es
pushf
push
jne
stos
les
jecxz
fcomps
mov
aas
inc
arpl
add
push
gs
sbb
push
insl
cmc
pop
leave
scas
das
dec
ss
sub
lret
push
push
sahf
push
dec
std
mov
test
adc
bound
dec
fs
je
stc
xchg
cmp
jnp
cmp
ds
cmp
pop
mov
jecxz
sub
aad
stc
cltd
or
ss
dec
add
scas
pop
xchg
in
repz
adc
dec
imul
push
mov
int3
push
inc
cltd
int3
idiv
mov
xor
sahf
or
popa
cmp
ja
shlb
push
sbb
adc
dec
push
jmp
and
and
adc
imul
mov
in
leave
cli
addl
enter
fucomp
jge
lret
out
sub
push
rcr
cmp
push
jg
xor
add
lahf
outsl
push
mov
addr16
les
fmuls
ss
aad
ficomps
sahf
lret
into
in
add
adc
stc
lahf
jbe
or
cmp
sbb
dec
inc
clc
push
cwtl
ret
mov
ss
jo
out
and
ljmp
outsb
dec
adc
and
lret
bound
stos
mov
mov
hlt
and
int3
bsf
les
sub
std
jge
lea
mov
inc
mov
int3
dec
loopne
xor
std
dec
mov
dec
jge
jl
test
in
je
outsb
jg
imul
sub
sub
arpl
in
lds
outsb
int3
sub
mov
scas
test
push
mov
inc
jbe
imul
loop
outsb
outsb
arpl
in
insl
inc
aaa
inc
movsl
cmp
cmc
cmp
push
xor
loope
push
test
adc
jns
or
decl
mov
jne
fidivrl
rcll
dec
sbb
push
sub
sbb
stc
addr16
cld
mov
lods
adc
push
clc
add
stos
icebp
mov
imul
xor
inc
cmp
add
shrb
xchg
xor
or
cmp
leave
icebp
scas
mov
call
pop
inc
scas
aaa
push
pop
mov
out
adc
gs
pop
sbbl
and
repnz
rorb
mov
lcall
jle
ljmp
mov
aas
dec
sub
pop
lds
add
xor
adc
mov
lods
outsb
popf
pop
cmp
fisttps
std
mov
jl
dec
or
insb
sbb
dec
rcrl
int3
mov
xchg
add
jns
addl
pop
pop
cmp
or
jno
cmpl
lcall
cmpsl
aam
inc
in
add
lea
ret
pop
cmp
sub
notb
and
ja
cmpl
repnz
mov
mov
push
mov
ljmp
cmpb
sub
dec
aaa
pop
push
xchg
push
xlat
loop
loop
lret
pop
adc
jo
sbb
adc
adc
pop
jne
movsb
addr16
add
sbb
out
insb
dec
mov
rcl
cmc
jno
lcall
adc
int
int3
shll
adc
ljmp
jae
iret
add
lds
push
push
lret
cmp
jno
loop
loop
rcl
ljmp
sub
cli
ljmp
dec
xor
int
and
mov
stos
divl
aas
add
push
es
jmp
jp
add
push
aas
rcll
pop
or
or
or
aad
push
cmp
jae
pop
or
push
pop
add
rcl
mov
xchg
shl
mov
sahf
and
jne
ret
test
loope
xor
shll
idivb
inc
push
mov
rcrl
cmp
rclb
add
xchg
xchg
and
cmp
frstor
inc
pop
adc
cmp
dec
xchg
sbbb
add
insl
mov
dec
jo
scas
outsb
inc
mov
fsubrp
and
jno
rorl
xor
jns
fbstp
mov
add
lock
lahf
shrl
or
out
bound
mov
inc
pop
in
jmp
inc
sahf
jne
fs
loopne
add
or
mov
sbbl
stc
mov
pop
xchg
popl
add
jnp
in
int3
cmp
int
aad
jb
cmp
ret
xor
sub
mov
add
arpl
enter
and
sub
popf
pushf
iret
insb
lds
mov
xchg
jle
shl
sbb
fcompl
fidivs
mov
lods
sub
sahf
daa
ljmp
sub
mov
sbbl
es
sub
loope
stc
lods
push
xchg
jecxz
outsl
out
adc
shrl
push
imul
xor
push
jo
xchg
mov
jge
cmpsl
mov
js
cmpsl
in
and
push
inc
test
jb
pop
sub
add
in
outsl
sahf
mov
int3
insl
repnz
mov
xor
enter
sub
or
mov
dec
idivl
repz
fnstcw
out
dec
or
fadds
push
mov
out
push
rep
loopne
aad
insl
mov
xchg
loopne
mov
daa
loopne
or
add
icebp
lds
push
lcall
jmp
push
jmp
adcb
cwtl
int
xor
test
pop
out
or
les
push
outsb
sbb
pop
mov
push
pop
add
mov
push
insb
mov
cltd
lahf
fs
sub
imul
iret
sahf
hlt
imul
and
aam
xchg
jb
cld
fbstp
pop
jns
dec
sub
cmp
mov
xor
sbbb
cmpsl
mov
jl
aam
xor
leave
bound
test
mov
pop
movsb
push
mov
fisttpll
aam
add
mov
inc
ljmp
test
scas
mov
lret
adc
fcomps
out
dec
mov
fs
rorl
test
int
js
sbb
inc
dec
loope
pop
inc
fiaddl
push
stc
mov
jb
jmp
bound
into
stos
mov
fs
inc
out
push
call
test
mov
mov
int
xchg
negb
stos
push
lret
sub
mov
gs
jecxz
jl
dec
jns
add
mov
std
adc
push
pop
mov
dec
into
mov
or
repnz
pop
mov
adc
ja
cmp
inc
psubb
mov
aas
lret
out
fldenv
adc
push
adc
mov
inc
mov
pop
mov
cmp
pop
fsubrl
movsl
mov
and
test
inc
cmp
pop
in
add
daa
mov
push
sarl
and
sub
outsl
push
dec
xlat
fmull
push
jbe
inc
stos
fidivs
lock
jp
sbbl
sbb
pusha
shrl
cmpsl
cmp
in
hlt
mov
jg
sahf
test
stos
pushl
aam
sti
cmc
std
stos
lret
sbb
sub
inc
sub
insl
dec
lcall
into
je
mov
xchg
mov
dec
outsl
dec
lds
xchg
cmc
adc
mov
xor
insl
enter
repz
dec
mov
das
jp
jns
mov
xchg
dec
xchg
jnp
data16
dec
mov
sbb
mov
ret
pop
lds
mov
addr16
jns
insl
xchg
inc
rolb
pop
dec
insb
mov
out
xor
arpl
in
shl
hlt
js
add
inc
rol
adc
pop
fdiv
mov
xchg
into
jbe
cmp
push
push
clc
ss
pop
repz
mov
sbb
cld
lds
jge
pushf
cmpsl
sarb
jo
arpl
push
mov
pop
int3
pop
ret
or
inc
sar
xor
scas
out
dec
test
in
jmp
dec
mov
xchg
adc
xchg
ror
iret
lods
cwtl
jo
lock
shrl
test
test
or
push
inc
rcrb
jmp
fwait
jnp
cmpsb
je
cmpsb
lret
sahf
sbb
sbb
lods
or
andl
jge
jl
dec
stc
stos
mov
dec
xchg
or
dec
mov
adc
bswap
cwtl
xchg
popa
mov
out
pop
ret
push
rclb
and
into
enter
dec
lods
cmpsb
iret
cmp
mov
nop
mov
out
pop
ret
fcomps
mov
jo
push
outsb
test
out
rcrl
xchg
and
mov
cmp
add
stos
jbe
dec
mov
sbb
mov
mov
cmp
mov
sub
rorl
imul
adc
jae
mov
jmp
push
sbb
pop
cwtl
pusha
into
adc
call
sub
in
mov
jp
adc
in
pop
xor
adcl
xor
int3
jbe
repnz
or
pop
filds
cmp
dec
push
repnz
sbb
jmp
xchg
or
inc
jl
or
std
lahf
repnz
or
int
cmc
inc
or
imul
pusha
pop
jmp
jle
movsl
fildll
imul
sub
dec
decb
mov
shlb
aam
pusha
insl
fs
add
mov
nop
push
mov
push
pop
or
ret
sbb
rcrl
scas
outsb
pop
xchg
or
lahf
push
mov
aad
xchg
sub
inc
call
mov
mov
sbb
mov
flds
adc
mov
hlt
xor
sub
in
dec
push
insb
lret
sbb
ret
in
daa
add
push
adc
scas
mov
cmp
cmp
push
call
shlb
sarb
dec
iret
adc
fidivrs
add
sub
jecxz
cwtl
mov
push
out
adc
lea
push
pop
sbb
adc
cmpl
inc
pop
aaa
push
jns
aas
or
mov
adc
xor
daa
jmp
cmp
xchg
mov
arpl
xlat
movsb
pusha
int3
lds
pop
or
fidivl
ret
stos
addb
ljmp
rcrl
stos
cmp
jno
dec
sbb
sub
lods
sarb
in
push
pop
test
movsl
nop
in
cltd
push
xor
mov
nop
pop
popa
xor
ret
sbb
or
sbb
pop
jnp
cmp
hlt
or
sbb
dec
inc
fisttpll
lods
fxch
ds
and
test
ss
js
sub
lcall
jmp
hlt
lods
pusha
lds
arpl
mov
lret
mov
xchg
mov
add
jno
fldt
xor
lea
sub
and
mov
lea
pop
pop
xchg
inc
mov
cmp
scas
cmpsb
lock
fsubr
and
jbe
mov
pop
jmp
mov
sub
cli
lods
jae
or
fwait
sub
shlb
fstl
insb
jae
inc
push
vpackuswb
xor
stc
cmp
jne
aad
cmp
repz
jb
mov
inc
in
jle
scas
clc
add
out
loope
xchg
ds
jge
testl
inc
ret
clc
xchg
repnz
lds
push
pop
sahf
std
inc
test
and
push
cmp
fwait
ds
in
add
mov
jno
add
fnstenv
fs
and
xchg
icebp
add
inc
or
rcr
inc
test
clc
fldt
push
int3
je
dec
pop
aad
add
push
sub
xor
cmc
inc
xchg
add
add
ret
data16
jne
in
jno
push
xchg
scas
cmc
out
xor
sahf
outsl
jno
inc
mov
mov
jl
sub
jg
leave
dec
inc
stc
dec
or
inc
test
pusha
fucomi
cmp
inc
push
or
jp
bnd
xchg
dec
sub
cmp
mov
loope
out
andl
call
inc
add
movsl
cld
dec
clc
or
xchg
and
push
pushf
ds
iret
shrb
aas
rorb
xor
xchg
mov
xchg
pop
and
clc
movsl
rol
sbb
push
xlat
mov
jp
ret
push
insb
notl
sub
icebp
hlt
xchg
mov
rclb
imul
loopne
xor
cmpsl
or
jb
xchg
enter
jmp
jmp
pushf
aam
enter
add
and
adc
and
insl
in
daa
out
sbb
dec
sbbl
cld
leave
call
insl
jb
jae
pop
sbb
jmp
inc
adc
pop
sub
clc
mov
mov
mov
sahf
push
jnp
inc
jno
test
inc
ficompl
test
sub
jp
pop
mov
fbstp
lret
shrb
sbb
test
adc
mov
cs
xchg
icebp
int3
or
add
inc
dec
xchg
pop
aas
adc
jmp
lret
into
xchg
fwait
test
and
fldenv
or
jae
mov
mov
daa
pop
lahf
xchg
sbb
mov
push
inc
and
int
pop
and
jl
sub
popa
fs
enter
int3
imul
dec
fnsave
aam
sub
mov
addb
aas
add
inc
fwait
in
pop
add
jmp
das
cmpsl
xchg
or
jno
movsl
jg
dec
outsl
push
iret
movsl
cmp
or
ret
loope
push
jnp
inc
or
lret
mov
roll
cmp
inc
inc
cmp
and
dec
mov
jae
sti
lcall
mov
fbstp
xchg
push
rcrb
sti
sub
and
mov
nop
or
or
push
fisttpl
ss
in
push
scas
push
dec
inc
arpl
inc
cmp
nop
push
inc
cltd
out
lret
mov
leave
pop
jne
scas
sbb
stos
out
pop
bound
orb
mov
enter
sahf
lret
sbb
mov
mov
fldt
fcmove
fcompl
push
adc
test
ret
jo
sbbl
push
sub
stos
rcll
cmp
inc
mov
ret
jge
mov
cmp
aad
xchg
or
mov
test
mov
leave
cmp
jg
fdivr
lods
mov
negl
popa
mov
xchg
mov
hlt
lods
jbe
pusha
push
scas
cmpsb
fadds
mov
fcomi
jb,pt
push
daa
add
inc
test
pop
scas
jno
mov
jns
out
dec
jp
or
push
pop
dec
add
push
add
shrl
add
gs
cmpl
shl
stos
fbstp
test
lcall
dec
jecxz
push
pop
cmp
ret
test
push
cmp
sti
lcall
es
lahf
fisttpl
cmp
icebp
js
cmp
arpl
or
sub
frstor
cmc
sbb
idivb
enter
out
js
jb
jmp
fsubrs
dec
stc
or
cmc
adc
popf
rclb
sbbb
cli
fwait
cmp
xchg
les
ja
xor
push
aas
or
jp
mov
mov
add
test
bnd
ret
push
insb
insl
mov
push
in
add
push
sub
and
mov
sub
fcmovnbe
adc
jle
lods
repz
mov
lods
xchg
movsl
arpl
orb
push
cmc
xchg
std
push
insb
xchg
scas
inc
xchg
sub
xchg
or
pop
enter
add
and
push
mov
jmp
jl
inc
push
mov
lret
cmpsl
mov
and
cli
or
xor
inc
imul
lret
repz
push
sub
leave
outsb
push
push
cmp
cmp
pushf
mov
pop
outsb
dec
bound
xchg
sbb
mov
adc
jne
push
ret
adc
sahf
in
cld
and
aas
data16
jae
push
out
inc
add
bound
hlt
add
cs
cmpsl
xabort
push
das
ficomps
iret
dec
cli
push
xchg
sbb
xor
cmp
or
vmaxss
fmuls
add
fsubl
movsb
hlt
and
xchg
jecxz
xchg
mov
pop
es
push
lret
cmpsl
mov
adc
push
push
dec
dec
lods
clc
cmp
or
movsb
sub
dec
outsl
mov
inc
jne
pop
pop
sub
jno
sub
fsubrl
pop
sbb
jo
mov
fwait
xor
mov
and
xor
aaa
lret
sbb
xchg
push
cmpsb
int3
ret
push
jecxz
push
cmpsb
repz
mov
xor
push
pop
push
mov
stc
mov
ja
sbb
in
incb
jmp
ds
sub
adcb
nop
into
push
adc
sbb
loope
rolb
xchg
or
push
mov
lret
inc
mov
sub
out
push
dec
pop
int
jmp
sbb
mov
scas
adc
dec
add
shll
jecxz
movsl
pop
dec
pop
cmp
repz
mov
mov
gs
andl
and
mov
pop
push
mov
mov
and
cltd
int
and
das
or
sub
inc
in
ficoml
jp
scas
sbb
in
push
ret
adc
push
inc
sbb
jb
aad
cmp
enter
pop
out
vpmaxsw
inc
lods
pop
mov
ss
mov
ljmp
pop
jp
cs
mov
mov
jmp
xchg
inc
in
pop
test
pop
movsl
xchg
loope
xchg
and
aad
push
push
cmc
popa
push
fnstenv
pop
pusha
pop
jo
mov
mov
cmp
xor
mov
xchg
data16
ljmp
hlt
es
pusha
icebp
fists
mov
mov
pop
xor
lods
es
shrl
or
sub
out
jmp
and
xchg
and
mov
push
xor
mov
jne
inc
xchg
lea
movsl
sarb
jecxz
loope
movsl
jmp
out
mov
rcrl
fdivrl
jae
mov
cmp
push
inc
cmp
andl
and
mov
jo
data16
fsts
push
into
push
or
push
pop
pop
call
mov
mov
adc
mov
mov
imul
mov
in
sub
imul
stos
dec
hlt
or
sbb
adc
aaa
xchg
push
movsl
in
jns
add
fisubl
inc
es
sbb
bnd
cld
sub
mov
imul
sub
ja
imul
loope
test
xor
pop
cmpb
sub
pop
cmc
and
out
or
mov
xor
lds
inc
popa
es
xor
orb
xchg
int3
adc
xlat
pop
lds
sub
pop
jge
adc
movsl
int
mov
cmp
xor
push
jg
inc
ss
or
dec
iret
pop
mov
add
sub
inc
das
sub
jnp
xchg
adc
sub
push
cmpl
mov
and
xchg
push
and
repz
push
das
sub
jg
inc
mov
hlt
mov
cmp
pop
adc
loop
push
addr16
xchg
lods
mov
stc
les
mov
stos
push
xlat
push
mov
cmc
xor
xchg
mov
pop
add
xchg
cs
cmpsb
add
fisubrs
lcall
jp
in
inc
adc
pusha
cwtl
mov
or
mov
das
mov
cmp
add
aas
sarb
fwait
rcrl
jle
dec
lods
addb
dec
int
dec
dec
pop
addr16
add
jg
sub
loope
cltd
call
movsb
cmp
or
aad
repnz
dec
push
jne
xchg
fucomp
fbstp
and
pop
xor
fstpl
dec
stos
dec
sbb
add
lret
cmc
je
jmp
fisubrs
add
cmp
adc
and
das
in
mov
sar
mov
out
dec
push
inc
jns
xor
xor
cmp
loope
cltd
dec
int3
pushf
sub
pusha
fidivrs
clc
mov
shll
inc
mov
jmp
out
stc
fwait
rcl
pop
andb
or
ja
lahf
lea
lret
dec
xchg
fs
pop
into
imul
and
dec
and
add
orl
out
test
scas
test
inc
lea
sbb
xchg
shlb
pop
push
ljmp
dec
mov
in
lret
add
insb
in
lea
fisubs
mov
stc
out
ja
adc
sub
aaa
clc
pop
insb
popa
mov
lret
ljmp
cmc
mov
sub
stos
pop
idivb
jae
fcompl
in
or
and
fimuls
cmp
fists
into
mov
push
loopne
ljmp
jle
out
shl
aam
jbe
leave
fcmove
cli
je
cld
orb
jge
cltd
lods
cli
xchg
pop
addr16
iret
incb
mov
aam
jge
cmp
inc
inc
inc
imul
cs
sub
addb
in
fisttps
adc
xor
lock
in
or
and
xor
int3
imul
aad
incl
push
lahf
aaa
sub
xchg
dec
cmc
sub
xor
jl
push
and
shll
jno
adc
cmp
xlat
pop
xchg
xor
or
dec
xchg
adc
add
inc
jle
mov
xchg
jb
int3
lahf
aas
filds
jae
adc
dec
lods
adc
push
test
into
adc
mov
push
sbb
or
adc
test
and
stos
js
dec
or
xchg
mov
pop
jmp
ds
cmpsl
xor
jne
outsl
dec
fwait
repz
fildl
mov
sbb
mov
push
inc
mov
jno
scas
dec
mov
adc
mov
js
add
sahf
lret
mov
repz
sbb
iret
push
in
and
stc
sahf
dec
cld
or
xchg
hlt
mov
jle
inc
xor
add
test
fisttps
out
movl
adc
xchg
into
rcl
bts
pop
out
fisubl
setg
jnp
jbe
mov
xchg
dec
movsb
xor
push
mov
popa
push
fildll
int
xchg
pop
in
cvtps2pd
out
push
push
into
fcmove
sahf
rcrb
aad
data16
fnsetpm(287
pop
data16
pusha
push
lcall
aas
inc
cmp
xor
mov
inc
adc
aad
add
in
push
pop
or
sub
loop
jmp
ds
js
push
and
pop
jl
xor
push
push
sti
pushf
repnz
fisttpl
push
std
jp
and
loop
cmpsb
shll
adc
ja
cmovle
push
sub
adc
hlt
repz
scas
and
das
movsl
lret
inc
mov
pop
in
out
hlt
sbb
sub
adc
cltd
test
popa
sub
negb
lock
subl
stc
xchg
fwait
call
cmp
mov
lock
jecxz
sub
cmp
arpl
sbb
fisttps
aas
pop
imull
mov
cmpsb
rolb
xlat
mov
loop
adc
adc
mov
das
inc
dec
cmp
jb
stc
sub
inc
inc
push
mov
jae
sarb
leave
sub
add
pushf
cltd
ret
int3
lds
loop
dec
add
sbb
fisubs
scas
aad
scas
gs
mov
and
cmp
sbb
mov
dec
int
add
fsts
mov
hlt
mov
dec
pop
mov
mov
test
push
lret
shll
test
xchg
jle
adc
sub
repz
out
pusha
adc
cld
aad
and
shrb
iret
mov
and
out
sub
xchg
fsubrl
or
push
mov
push
and
xchg
inc
out
xchg
inc
add
push
lret
mov
mov
in
adc
or
sbb
std
sub
fcoml
arpl
movsl
jne
jle
in
fs
fs
movsl
ljmp
and
or
inc
in
adc
adc
xchg
xchg
js
sti
test
dec
cli
in
jae
imul
loope
mov
lret
pop
fwait
call
setge
sub
push
test
pop
das
mov
fucomp
lods
decl
in
lods
aaa
inc
push
xchg
cmp
addr16
and
pushf
aam
addr16
sub
lods
jbe
mov
dec
js
or
lahf
out
sub
push
mov
xlat
rorl
lret
push
cltd
jno
test
jns
mov
cmp
das
mov
fmull
add
cmp
add
jbe
mov
mov
sub
pop
push
mov
sub
push
scas
jo
enter
lods
push
js
jne
jb
into
mov
sub
in
mov
push
lods
or
lods
xor
cmp
cmpsl
xor
jecxz,pn
inc
enter
xchg
test
jae
add
repz
enter
push
cmp
sub
sarl
push
push
or
out
in
stos
fstp
loop
and
mov
sbb
pop
lea
sbb
js
mov
in
out
sub
fs
dec
test
psraw
sub
pop
mov
rcrl
add
insb
fstl
sub
xchg
push
jmp
dec
in
rcl
shl
dec
pop
jp
out
cmp
or
dec
notb
mov
fdivs
add
cli
xchg
adc
sub
movsb
mov
sbb
push
jns
nop
fimuls
iret
lea
ss
lea
stos
scas
cwtl
cmp
dec
xor
testb
push
pop
cli
pop
loop
and
ret
in
gs
dec
sub
orb
cmp
sub
fstpl
arpl
clc
inc
movzbl
js
and
or
jnp
inc
dec
outsb
fs
in
jno
aas
jb
push
imul
popf
insb
nop
inc
sarb
pop
test
pop
mov
lahf
pop
jp
nop
sbb
mov
lock
adc
add
mov
jbe
movsl
pop
or
or
adc
jge
mov
loope
popf
or
scas
dec
mov
and
arpl
arpl
adc
inc
sahf
nop
insb
stos
in
jno
push
mov
imul
inc
lret
clc
repz
add
sub
push
test
lret
cwtl
shll
out
fisubrl
sub
xor
mov
mov
xor
push
and
ret
dec
adc
dec
stos
mov
aam
std
and
int
sbb
inc
loope
js
stos
test
and
pop
int3
mov
sub
jne
add
sub
xor
pushf
adc
or
lock
mov
mov
add
mov
jmp
xor
xchg
xchg
xor
mov
push
sbb
push
xchg
xchg
mov
in
in
into
mov
addr16
mov
fwait
push
pop
cwtl
add
rcrb
popf
gs
xchg
out
push
out
ret
jle
mov
xor
outsb
adc
clc
or
roll
adc
adc
lcall
pushw
add
imul
vmovdqa
jno
xchg
push
jp
cmp
fisttps
sbbl
pop
lret
pop
out
dec
outsl
insl
push
movsl
mov
adc
ja
adc
call
xchg
jle
fadds
stc
fnstsw
sbb
cmpsb
mov
lods
push
pop
adc
jne
lret
mov
fcomps
mov
jo
pop
inc
or
push
shlb
push
cmp
sbb
jnp
add
and
shll
das
sti
jb
add
lret
mov
xchg
ljmp
jl
scas
mov
push
sbb
icebp
aam
jae
test
sbb
mov
xlat
sbbl
and
xchg
dec
xchg
sub
dec
shrb
sahf
ja
pop
rcrl
pop
outsl
pop
cwtl
pop
imul
jg
test
cmpsl
or
sarl
fstps
jle
fs
mov
fldlg2
stos
inc
adc
mov
pop
cltd
adc
inc
adc
arpl
xor
aaa
loopne
jp
inc
pop
mov
stos
cwtl
push
std
jl
test
jno
and
push
adc
sub
cld
add
jge
or
jae
mov
mov
aaa
or
and
ficomps
pop
mov
ss
add
and
inc
sub
fdivl
pop
add
or
lret
adcl
adc
xchg
out
scas
add
iret
jg
sub
dec
mov
inc
jbe
insb
fmul
inc
or
mov
sbb
pop
mov
pop
in
xchg
sbb
adc
jbe
in
inc
jae
es
dec
push
jmp
mov
faddl
cmp
xlat
mov
lret
lret
int
iret
and
and
test
int
sub
int3
dec
out
pop
lcall
add
ja
pop
cs
js
ss
jle
pop
cld
femms
push
sub
call
jnp
aam
xor
inc
lcall
mov
aad
pusha
or
gs
sub
cs
dec
dec
pop
cli
mov
mov
jbe
push
daa
addb
in
out
mov
xchg
or
insl
and
jmp
sub
loope
cld
jbe
ret
push
push
lcall
push
dec
pop
sub
jno
mov
pusha
insb
aas
cmp
in
lahf
adc
mov
dec
inc
arpl
shll
cmp
mov
je
shll
int
cwtl
add
inc
stos
jp
push
popa
mov
jnp
jmp
mov
les
shrl
outsb
adc
mov
xor
nop
push
mov
fcmove
cmp
pop
mov
sub
rorb
add
jp
mov
fisttpll
sti
jns
test
adc
cmp
cmpb
pop
out
push
aad
clc
cmp
inc
jno
mov
push
pop
int3
and
jmp
jmp
xchg
push
push
xchg
mov
test
push
push
roll
fs
push
int
add
push
mov
ds
enter
lcall
pop
jo
push
pop
jns
mov
clc
or
fistps
push
bnd
ljmp
push
aam
dec
jbe
mov
mov
inc
das
arpl
enter
pop
mov
push
jo
cmp
dec
sbb
aaa
cmp
cmp
fcomp
arpl
lret
fdiv
sarb
stc
jns
lods
and
in
cs
push
or
sbb
and
sarb
or
stos
mov
jo
pop
inc
mov
dec
or
xor
mov
add
clc
push
or
leave
push
xchg
mov
add
push
enter
inc
hlt
push
xchg
popf
jbe
shrl
push
add
mov
cmp
adc
pushf
sahf
pop
clc
in
inc
adc
or
mov
jg
sbb
mov
ds
sbb
or
rcll
stos
jne
mov
xchg
push
sahf
int3
arpl
xchg
mov
mov
jb
mov
adc
add
cmp
adc
xchg
sub
stos
or
sub
pop
outsl
lret
jg
and
pop
icebp
cmp
push
push
cli
gs
push
and
hlt
lods
jbe
xor
cmp
jmp
mov
lods
inc
rcr
dec
xchg
pop
lock
cmp
inc
movsl
dec
xchg
jae
push
dec
stos
jecxz
xor
push
push
xchg
add
push
and
loop
stc
fldt
clc
out
jmp
xchg
adc
pop
sbb
push
int3
xchg
iret
sbbl
cmp
ss
shll
push
sub
punpckldq
cmc
push
jns
inc
pop
or
push
popf
out
je
xchg
movsb
sbb
movsl
inc
xchg
mov
mov
mov
cltd
xlat
sti
pop
or
or
sbbl
mov
jp
and
nop
inc
inc
repz
outsl
mov
arpl
adc
or
and
jmp
pop
fisubl
sub
jmp
orl
loope
adc
adcl
movsl
push
dec
cwtl
test
popa
inc
mov
dec
pushf
sbb
arpl
popa
inc
test
add
rclb
fiaddl
push
add
out
loopne
fadds
adc
push
repnz
cmpsb
mov
add
xor
jno
repz
stos
and
fisubl
in
and
dec
sub
aas
jecxz
arpl
push
enter
insl
xchg
call
into
js
add
cmpsb
lahf
testl
xchg
jg
mov
ss
mov
push
adc
fstps
xchg
jg
aaa
jae
push
js
sbb
lock
rorb
mov
ss
push
or
hlt
leave
lret
addr16
ljmp
fdivrs
int3
je
pop
inc
mov
js
jl
pop
xchg
daa
gs
out
sahf
cmpsl
rcrb
push
and
push
mov
xor
jg
inc
sbb
movb
out
inc
lods
mov
shl
in
in
cld
fistl
test
das
xchg
in
cltd
aad
lock
rol
inc
sub
push
je
jb
mov
rcrb
ret
lock
push
xor
sub
aaa
add
das
shrb
hlt
or
stos
push
icebp
xor
sbb
mov
adc
xor
rorb
or
push
ret
scas
pop
repnz
invd
push
cltd
dec
mov
push
pop
xlat
mov
jecxz
es
scas
sbb
dec
call
ss
scas
imul
lods
push
fwait
push
dec
in
xlat
outsb
cmp
sub
or
cmp
dec
mov
sub
les
sub
pop
test
daa
mov
xor
sbb
in
mov
mov
rclb
and
sti
stos
inc
shll
sbb
clc
xor
xchg
pop
add
xchg
push
pop
shll
aas
push
ljmp
xor
mov
test
cmpsb
jbe
cld
ret
inc
mov
add
fcom
push
push
pop
inc
and
inc
mov
add
aaa
mov
xchg
imull
xor
rcl
xchg
addb
enter
push
inc
ret
outsb
arpl
push
and
loop
add
movsl
shrl
les
sti
sub
sub
push
sti
xchg
fstp
shlb
xchg
adc
rcll
push
shlb
or
cmp
bound
or
das
or
pop
lcall
push
xchg
jl
dec
fidivrs
push
jb
dec
xchg
inc
jne
adcb
lds
shll
xchg
push
test
aam
sbb
adc
lods
mov
mov
enter
imul
fistpl
xchg
jmp
sbb
loop
sub
lcall
insl
xlat
repz
and
jp
or
pop
push
lods
sub
xchg
sbb
es
je
and
and
leave
xchg
clc
iret
test
xor
add
imul
fdivrp
mov
in
pop
and
push
sahf
pop
mov
test
aas
gs
loop
hlt
repz
cmpsb
hlt
mov
mov
sub
adc
jle
xchg
xor
jns
cltd
add
adc
nop
jecxz
pop
pop
clc
popa
fmull
jp
int
jecxz
subb
hlt
mov
cli
icebp
into
or
out
and
adc
jne
ljmp
js
inc
push
mov
rol
cmpsb
xchg
sub
pushf
cmp
dec
sub
push
xchg
xor
cmp
pushf
adc
push
mov
outsl
or
les
sub
and
clc
sbb
pop
into
pop
ret
push
jmp
aaa
popa
xchg
and
jo
sbb
test
pop
movsl
lods
bound
gs
push
xor
je
lret
jle
shl
mov
adc
add
aam
and
adc
loop
jecxz
cmpsb
fldcw
testl
adc
jp
add
fwait
mov
ss
mov
mov
arpl
cmpsl
sub
xchg
in
leave
jmp
vmovdqa
ret
jmp
pop
or
mov
rcl
data16
insb
adc
jl
jmp
cmpl
icebp
pop
mov
mov
aad
cmp
pop
ss
jae
and
or
and
inc
sbb
mov
js
mov
pop
sub
cmp
test
in
outsb
pop
outsl
push
aam
mov
fadds
mov
lds
jns
nop
fs
cmc
in
pop
sbb
push
add
aad
je
pop
shrb
test
pop
cmp
mov
mov
movsl
popf
rclb
push
and
push
push
lret
mov
movsb
das
inc
sub
incb
dec
or
jae
push
mov
sahf
into
xor
xor
lret
pop
fisttpl
shll
fdivl
aam
cld
or
and
mov
pop
jge
mov
inc
push
test
sub
mov
mov
test
in
adc
pop
aam
adc
or
and
enter
out
cmp
icebp
xchg
lods
shrb
iret
psrlq
mov
call
lcall
sti
mov
mov
lods
and
stc
stos
xchg
out
add
mov
lds
adcl
js
xor
push
scas
xor
pushf
inc
inc
das
cli
xorb
add
cld
pop
xchg
mov
xchg
sbb
test
daa
sub
cmp
popa
sbb
jae
cltd
mov
push
ffree
movsl
xor
shll
push
psubd
mov
and
sub
scas
stos
and
es
pshufw
outsb
xchg
lea
mov
in
fdivr
cmp
pop
nop
cmp
int
push
adc
xlat
imulb
fsubl
ret
jo
dec
icebp
shll
outsb
cld
mull
inc
movsb
pop
lcall
push
jbe
pop
les
push
test
scas
shlb
inc
inc
push
adc
arpl
mov
ds
repz
cli
fcmovbe
mov
out
repnz
lods
inc
loop
or
lock
das
pop
into
pop
pop
in
movsl
adc
mov
ret
pop
testb
ja
and
pop
fldenv
paddusb
sbb
adc
mov
adc
cmp
push
sbb
loope
lods
pop
add
sbb
sub
pop
imul
mov
orl
lds
inc
popa
lahf
mov
and
out
sub
sbb
or
stc
jne
out
mov
fsubl
stos
std
scas
cmp
adc
test
push
jbe
jmp
dec
add
push
iret
lret
lcall
mov
push
out
adc
add
mov
cli
ja
lods
pop
rclb
test
pop
xchg
rol
add
xchg
sar
mov
pop
inc
mov
push
mov
xor
pop
je
cmp
xor
xchg
dec
pop
leave
das
in
call
clc
add
in
test
push
mov
pop
mov
pop
rcl
mov
stc
popa
movsl
outsl
mov
mov
pop
sbb
fsts
add
fstpl
fs
in
jbe
or
test
push
pop
mov
pop
sbb
aad
loopne
negb
loope
or
mov
fwait
and
mov
adcb
push
jmp
into
popf
loop
loopne
leave
fwait
sbb
cltd
sub
sub
pop
shll
mov
dec
jns
mov
out
int3
shl
sub
cli
adc
ret
jbe
or
adc
clc
xor
jl
fstp
mov
icebp
cmpsl
mov
nop
sub
stos
lods
in
xor
mov
mov
mov
or
adc
jg
adc
cmp
xchg
int
mov
mov
xor
mov
jbe
sbb
scas
mov
and
lret
icebp
xlat
fs
loop
test
cltd
add
test
mov
bnd
jecxz
pop
jle
add
jge
jp
call
mov
adc
ja
cltd
aam
sub
ds
shrb
and
xlat
enter
mov
xchg
pop
scas
mov
dec
popf
jno
enter
rol
push
repz
jne
loop
mov
lds
test
mov
subb
pop
push
xchg
test
jecxz
std
aas
lods
andb
pop
sahf
mov
mov
out
aaa
push
mov
push
cltd
ja
add
mov
inc
cmc
es
into
rcll
aaa
jnp
sar
addl
sbb
mov
and
add
ret
cwtl
orb
xor
nop
adc
pusha
mov
cld
lds
addl
iret
mov
out
sbb
dec
cmpsb
xchg
sarb
divl
mov
dec
stc
push
clc
cmp
push
fsubrl
add
lret
shl
pop
jle
rcrb
mov
add
pop
lods
sub
int3
push
filds
or
test
cmp
sbb
cmpsb
clc
add
test
sub
mov
add
out
enter
loope
les
test
adc
adc
aaa
cmp
xchg
mov
mov
fimuls
inc
add
sahf
pop
dec
sub
shr
sbb
xor
sub
loope
int3
inc
aaa
inc
decb
lock
nop
dec
cmpsb
out
lea
jge
add
push
lret
jne
fs
ret
inc
cmp
jl
inc
movsl
jp
fimuls
dec
addb
sub
inc
lock
jecxz
sbb
mov
hlt
gs
push
aad
fcmovne
rorb
ret
ss
rorb
xor
enter
mov
mov
jnp
enter
push
ss
test
sahf
mov
or
add
popa
sbb
loop
ja
xor
ss
rcr
lods
fwait
sti
and
mov
mov
mov
pop
sub
fsubrl
outsb
xchg
shll
mov
insl
adc
fldcw
clc
xlat
loope
orb
pop
mov
ds
jne
jl
add
add
mov
sub
int3
repnz
cmp
enter
cld
jecxz
cmp
lea
inc
or
push
aaa
cwtl
xchg
imul
pop
lcall
fisubs
scas
int3
cs
xor
cld
push
lock
rcrl
push
popa
jo
xchg
sbb
push
and
push
pop
popa
mov
clc
xor
dec
rolb
inc
outsb
nop
outsl
out
push
xchg
or
insl
lds
ss
ss
dec
mov
xor
pop
cmpsb
shrl
icebp
mov
sub
mov
and
push
dec
jl
add
fstpl
lret
in
movsl
pop
popfw
lret
push
sbb
sub
insb
xor
cmp
and
sub
jmp
jl
xchg
xchg
rcrl
push
lods
subl
out
int
xchg
push
dec
mov
stc
push
jmp
cmp
pop
sti
and
iret
pop
jmp
sbb
or
xchg
out
pop
aad
out
xchg
xchg
pop
mov
in
popa
roll
imul
pop
fcoml
stos
cmc
add
xchg
cmp
xlat
jmp
adc
sub
sub
push
sbb
pushf
mov
mov
sub
jnp
nop
mov
xor
jle
iret
push
push
mov
add
data16
insl
jp
sub
lcall
loop
mov
jge
leave
pushl
sub
jp
xchg
nop
mov
sub
push
dec
insb
psraw
jnp
mov
out
sub
sub
inc
jge
negb
cmpb
sub
add
gs
addr16
mov
xlat
inc
test
mov
test
ficompl
mov
dec
pop
js
scas
stc
dec
mov
push
push
jno
sbb
jne
xor
jno
call
adc
std
in
adc
or
fdivrl
push
mov
int3
jnp
dec
mov
aas
gs
inc
lds
mov
mov
adc
ljmp
stc
xor
dec
arpl
pop
je
aas
leave
mov
jo
out
inc
mov
add
pop
mov
jg
sti
int3
jne
hlt
fcomi
and
pop
mov
dec
dec
loopne
sti
pop
xor
cmpsl
pusha
fwait
sbb
stc
cmp
cmp
lretw
push
outsl
sub
pusha
mov
andb
inc
jo,pn
adc
ljmp
and
cmpsw
add
dec
mov
mov
push
jae
mov
xlat
pop
pop
mov
inc
in
pop
jmp
mov
arpl
jmp
jno
cmp
mov
xor
nop
cmc
inc
dec
sbb
adc
push
add
cmp
arpl
in
push
adc
sbb
out
arpl
xchg
adc
xchg
lods
movsb
cmp
mov
shr
lods
sbb
cmp
lret
adc
loop
aas
jae
sub
push
loope
cwtl
mov
jle
out
shlb
scas
sti
inc
push
lea
out
add
pop
jnp
insb
inc
leave
add
scas
push
pusha
insl
scas
pusha
mov
xchg
or
sbb
out
test
popa
xor
fisttps
mov
xchg
adc
mov
outsb
cmc
xchg
fadds
adc
inc
cmp
xchg
mov
cmpb
xchg
je
xchg
inc
jnp
in
jno
pop
insl
push
jmp
mov
mov
cmpsb
and
lea
aad
adc
xor
sbb
inc
fmuls
hlt
push
xor
dec
adc
loopne
dec
sbb
sti
add
scas
add
mov
repnz
daa
mov
mov
or
mov
adc
test
aas
push
mov
arpl
ret
enter
add
cmp
das
clc
rcl
iret
or
aad
push
jb
cmp
nop
mov
jno,pn
inc
ds
sarb
mov
in
nop
loopne
mov
or
dec
scas
add
cmp
mov
push
jmp
pop
cli
aam
mov
push
push
iret
cmp
or
sub
xor
imul
or
and
lcall
test
sbb
cmp
mov
pop
neg
jecxz
jns
test
mulb
dec
rcl
les
repz
dec
mov
shrl
and
test
jb
stc
and
jmp
stos
pop
push
adc
inc
lds
sti
stos
xlat
mov
scas
fcomps
fisttpl
ja
xor
inc
cld
mov
repz
mov
test
xchg
arpl
fcomi
unpckhps
stos
or
fistl
push
lock
daa
xor
jecxz
mov
add
dec
test
pop
aam
mov
push
inc
std
cmpsl
or
xchg
mov
sbb
fwait
movsb
scas
xorl
push
xchg
sub
add
lret
dec
mov
cmp
dec
adc
sub
cmp
mov
xor
pop
lret
inc
pop
in
xor
mov
iret
xchg
cmp
mov
insl
push
adc
fbld
sbb
divb
jns
add
sbb
pusha
das
sbb
add
bound
lods
cmpsl
and
xchg
sahf
popf
xor
js
inc
cmp
pop
and
scas
mov
cmp
jp
sub
sbb
cmpsb
sub
and
test
neg
cmpsl
pmaxub
mov
repz
cmp
ja
jne
adc
loop
xlat
push
cmp
movsb
repz
in
and
and
out
in
lea
test
arpl
xor
push
outsb
sbb
nop
jnp
cli
hlt
outsb
jg
sub
addr16
xor
jg
sti
imul
and
mov
jl
mov
xor
clc
test
adc
imul
fildl
inc
or
cmp
sub
in
and
lret
lahf
xchg
pop
and
leave
sub
loop
int3
shrb
mov
push
call
stos
pop
xchg
lds
or
xchg
call
sbb
pop
push
jge
add
out
ret
sub
inc
lret
dec
pop
lock
and
dec
mov
ret
push
mov
scas
int3
lea
push
or
add
rorb
stos
mov
fs
pusha
das
push
jbe
testl
pop
push
jp
out
aas
lcall
and
lods
adc
dec
push
push
lock
add
pop
cmp
fiadds
pop
xchg
adc
sti
xchg
mov
xchg
repz
xor
pop
pop
ss
pop
and
dec
push
ret
adc
pop
ljmp
sub
enter
cwtl
mov
cwtl
mov
and
adc
xchg
cmpsl
and
push
xor
mov
pop
loopne
xor
ret
inc
mov
aam
icebp
cmp
stos
xchg
pop
jne
pop
pop
int3
pusha
fcoml
out
sbb
cs
jp
inc
pop
mov
leave
sbb
icebp
jb
call
imul
jo
insb
xchg
adc
xor
shrl
movsb
sbb
addr16
jnp
shrb
dec
fcmovu
mov
cmc
ljmp
data16
or
push
insb
cltd
or
inc
ljmp
add
dec
and
dec
add
jmp
mov
ret
cmp
iret
cmc
test
call
and
mov
shlb
rclb
xor
cmp
jl
loopne
dec
arpl
lahf
sub
mov
ss
sbb
xor
add
arpl
xlat
addr16
and
mov
sbb
nop
loope
lods
mov
adc
sbb
and
dec
neg
test
imul
loopne
xor
pop
xor
movsb
jbe
push
and
push
aad
rorl
popa
cmovl
mov
mov
jbe
lods
test
data16
add
jae
stc
negl
pop
out
jnp
sbb
cmp
repz
mov
pop
cmc
xchg
push
fcmovu
xchg
test
daa
cmpl
mov
stos
push
addr16
lret
pop
pop
jo
mov
adc
add
aaa
in
adc
lea
lahf
out
adc
cltd
jl
jne
mov
mov
jle
jge
scas
sbb
inc
xor
add
mov
test
test
cmp
mov
aad
xchg
rolb
scas
test
dec
fsubr
sarb
stos
mov
push
sahf
ja
jl
lods
push
js
dec
aaa
scas
cmp
in
mov
jle
add
loop
or
sub
lcall
and
sbb
loope
mov
mov
xor
in
fnstcw
cs
repz
inc
inc
inc
dec
aaa
jae
fdivp
inc
push
jle
push
dec
dec
ret
xlat
sahf
cmp
leave
inc
iret
fldt
dec
lods
push
mov
psubd
and
mov
cld
push
xchg
insl
pop
lods
mov
clc
cmc
mov
push
repz
inc
lcall
sti
ja
into
or
shrb
out
insb
xor
dec
jno
mov
fisubl
or
dec
stos
push
sbb
rorb
loopne
jns
iret
ss
xchg
cs
push
mov
adc
cmpsb
xor
leave
mov
mov
or
pop
add
mov
lcall
xchg
sti
mov
cmp
add
inc
idivl
xorl
test
mov
push
push
repz
cmp
and
pop
inc
filds
outsl
lcall
lret
stos
dec
test
loope
sbb
inc
or
pop
jno
jno
push
jb
push
stos
jbe
clc
cmp
in
sub
and
leave
ds
mov
in
cmp
cmp
lcall
and
jo
mov
mov
daa
aam
sub
push
xlat
xor
gs
xchg
add
lea
sub
outsb
outsb
mov
shll
dec
or
in
mov
xlat
shrb
cwtl
jnp
ret
rorb
mov
inc
sar
push
out
xlat
push
iret
inc
das
dec
jecxz
repz
jecxz
sbb
daa
repnz
push
movsb
orl
xor
push
cmp
pop
mov
sub
aam
push
shlb
popa
enter
sbb
mov
movsl
pusha
outsb
cmp
bound
shr
or
les
pop
ret
icebp
test
jnp
xor
xchg
insl
push
cmp
iret
call
outsb
sahf
sbb
hlt
clc
in
sti
jge
imul
out
pop
sub
xor
add
addl
orl
push
pop
cli
jecxz
leave
in
ja
inc
mov
in
out
xor
outsb
sahf
xchg
orl
or
adc
xchg
pop
mov
cmp
lahf
pop
and
xchg
test
mov
mov
stos
xor
mov
jo
das
dec
es
cmp
or
adc
push
and
inc
or
aaa
inc
ret
adc
xlat
cmpps
fsts
shr
dec
dec
gs
ss
xor
js
xor
aam
sbb
mov
adc
pop
sub
sub
imul
ror
outsl
gs
push
shl
aad
jle
ja
out
imul
and
xchg
inc
cmc
imul
dec
in
mov
cwtl
cltd
out
mov
mov
xchg
out
fiaddl
scas
dec
out
mov
or
jae
mov
lods
clc
imul
xor
jmp
inc
sub
dec
shll
or
add
jbe
in
xor
pop
test
arpl
outsb
jae
popf
or
fcom
enter
inc
push
mov
call
adc
mov
mov
mov
push
xchg
mov
out
mov
lods
jns
xchg
push
imul
aam
div
sub
mov
imull
test
mov
sub
inc
out
cmp
call
dec
iret
and
xchg
std
adc
sub
pop
sub
popa
test
xchg
sahf
add
in
popa
lock
push
sarb
mov
scas
test
jle
xchg
adc
mov
nop
cmpl
rclb
cmp
ss
mov
inc
pop
stos
xchg
neg
jo
pop
addr16
pop
lea
push
mov
dec
xor
fisubrs
scas
daa
loopne
lret
clc
push
out
sbbl
sbb
fisubl
sbb
fdiv
xor
mov
test
div
mov
clc
and
inc
push
mov
sbb
pop
hlt
push
cmp
or
cmp
adc
lods
aam
inc
jae
jne
ret
ficomps
dec
adc
mov
add
scas
imul
cmpsl
and
pop
cmpsl
push
andl
mov
rclb
and
leave
in
das
dec
call
scas
xor
outsl
mov
in
jbe
sahf
sbb
nop
loop
pop
mov
bsr
test
dec
mov
mov
push
cltd
cmp
xor
cld
push
mov
cmp
stc
repnz
lock
aas
repnz
rclb
filds
scas
lods
and
dec
repz
cwtl
shl
xor
and
cmp
aaa
lret
dec
loop
iret
mov
gs
add
fidivs
add
push
test
cmp
jle
loopne
repz
aaa
outsb
imul
mov
mov
negl
jle
xchg
and
xchg
inc
xchg
xchg
and
xchg
push
clc
enter
pop
pop
das
sub
adc
cmp
push
xchg
cmp
fisttpl
xchg
roll
leave
jge
sarb
fistpll
cltd
jl
or
repnz
dec
fidivrl
fmul
jo
jnp
pop
mov
xor
xchg
data16
aam
xchg
jl
jge
fldcw
add
cmp
sti
push
ret
leave
pop
mov
rcll
push
aam
data16
inc
sbb
mov
sub
xchg
and
pushf
inc
mov
hlt
fisubl
push
xchg
out
inc
jle
fidivs
pop
mulb
outsb
pop
jbe
adc
mov
jns
cli
add
pop
mov
xor
les
dec
add
cmp
shrb
cmp
dec
add
xchg
lahf
inc
fistps
sbb
shll
sbb
jo
cmp
test
sub
fidivrl
into
sbb
adc
rolb
push
jnp
mov
lret
cltd
lahf
adc
xchg
cmp
rclb
sbb
jmp
mov
inc
push
cmp
and
outsb
jae
dec
or
or
push
push
rcl
es
mov
push
jg
jge
adc
cli
inc
mov
test
cmp
popl
insb
cmpsb
jns
leave
mov
sub
lret
mov
xchg
push
inc
add
cmpsb
xor
andb
push
and
cmp
bound
addl
sub
adc
loop
pushl
xor
mov
mov
push
lds
mov
mov
mov
adc
cli
shrb
aas
bound
mov
ret
sub
js
or
test
push
jp
mov
mov
jbe
hlt
push
mov
mov
push
pop
ds
pop
mov
jbe
and
test
testb
lock
jns
inc
inc
jle
push
push
sub
mov
cmp
jl
pop
xchg
ficomps
mov
shlb
pop
decb
ret
push
jns
inc
jb
aas
push
fwait
xchg
sub
stos
mov
dec
push
mov
mov
shl
adc
iret
in
pop
jnp
dec
sbb
sbb
sub
mov
ljmp
scas
pusha
xchg
stos
adc
mov
in
lds
sub
mov
lahf
xchg
sub
xor
inc
mov
icebp
jge
push
sbb
jg,pt
test
data16
push
sbb
mov
add
lock
jge
data16
or
hlt
xchg
xor
and
addl
popf
sbb
lea
ss
push
pop
fdivrl
popa
fcoml
sub
mov
sub
xchg
fnstcw
pminub
pop
js
loop
data16
add
dec
jnp
gs
inc
shll
int
xor
mov
les
xchg
inc
rorb
aad
repz
jnp
mov
pushf
ret
lds
call
mov
lds
sub
cs
mov
push
sub
mov
xor
cmpsl
out
das
sub
cs
sub
fnstenv
sub
push
sub
arpl
adc
jbe
stos
mov
xorb
stos
fxsave
dec
adc
inc
arpl
pop
sub
sbb
mov
ficompl
pop
loope
inc
fimuls
out
cmp
pop
out
pop
mov
inc
ret
lock
cmp
add
push
jl
mov
inc
test
inc
xchg
mov
mov
test
sub
mov
test
movsl
popf
mov
sbb
jo
xchg
cmc
cmp
inc
outsb
js
in
cmp
jmp
and
jle
mov
int3
stos
lret
mov
rorb
lods
sbb
or
psubw
outsb
pop
push
mov
test
popa
in
ret
shll
out
cmp
test
stos
xchg
inc
or
and
shll
cmp
icebp
data16
jge
or
mov
add
adc
jge
mov
arpl
xlat
jbe
shlb
addr16
loopne
lret
in
or
je
hlt
icebp
outsb
pusha
shll
movsb
mov
cld
popf
mov
cltd
adc
enter
loopne
sub
lds
pop
cli
sti
xor
ja
imul
imul
sbb
into
adc
ja
add
test
pop
fisttps
fidivl
cmp
add
fbstp
in
and
inc
in
pushf
sub
mov
out
adc
jns
pop
je
inc
icebp
push
cmp
jmp
insl
jecxz
adc
mov
cwtl
aaa
outsl
aam
pop
loop
sahf
inc
cmp
arpl
aaa
mov
out
aad
sbb
mov
jne
lahf
jp
adc
fistps
ret
insl
mov
fwait
mov
jge
repz
sub
stc
movsl
jle
mov
decl
enter
mov
pop
dec
add
jns
jle
scas
or
enter
insb
xor
sti
fisttpll
pop
stos
cmp
outsl
jg
xchg
jbe
repnz
fisttpll
push
add
or
ljmp
pop
dec
and
dec
or
clc
inc
mov
in
cltd
mov
or
mov
jne
jge
lcall
cmp
inc
scas
mov
push
mov
loopne
push
mov
rolb
sbb
mov
push
jmp
adc
jecxz
cmp
and
cs
adc
sti
cmp
call
push
call
and
pop
cli
nop
pop
jns
lds
adc
sbb
dec
jne
mov
dec
jo
mov
inc
cmp
xchg
out
insb
mov
and
mov
pop
inc
dec
sbb
rcrb
xor
bound
mov
cmp
das
mov
inc
or
adcb
or
jnp
mov
push
in
aaa
push
das
push
popaw
les
inc
pop
dec
fs
fs
xor
in
out
lret
cmpsl
sub
xor
cmp
and
movsb
dec
cmc
inc
hlt
out
insb
sub
icebp
pop
or
les
push
jle
sbb
arpl
xchg
sbb
ja
push
out
dec
ds
and
cmp
in
push
inc
jl
addl
xacquire
mov
xchg
push
movsb
pop
push
mov
jp
pop
cld
xor
inc
mov
or
push
cmc
icebp
mov
inc
js
addl
cwtl
pop
dec
ret
mov
sub
pop
push
bound
inc
sbb
jne
and
fdivs
jecxz
aas
mov
or
adc
inc
xchg
jne
pusha
push
jno
xor
xchg
cmc
stc
scas
ljmp
sti
xchg
sbb
loope
pop
add
cli
loopne
cmp
xor
fcom
inc
rcr
add
lock
repnz
inc
fstpl
mov
lods
notb
subl
js
nop
jp
adc
repnz
push
lods
in
xor
dec
push
ficomps
lods
pushf
iret
ss
jecxz
jne
jno
adc
stos
dec
fcmovnu
das
les
insb
and
or
hlt
pop
call
mov
testl
addr16
mov
pop
insl
pushf
sub
push
inc
js
add
jb
ret
sbb
adc
andl
clc
mov
adc
imul
shll
mov
inc
jnp
xorb
push
scas
push
jp
dec
lret
les
addr16
mov
sbb
push
call
bound
ljmp
out
or
sub
pop
xor
pop
pop
fidivs
jl
outsl
add
and
loopne
cli
xchg
stc
insl
js
inc
invd
inc
popf
mov
dec
add
fistl
fimuls
add
das
push
cmpsb
mov
add
cmp
and
xchg
aam
in
and
popa
inc
inc
xor
addr16
push
adc
mov
jo
xor
jl
jne
add
xchg
pop
mov
into
xchg
or
dec
push
adc
pop
adc
mov
sti
loope
pop
shrl
sbb
test
aad
in
mov
int3
mov
fnsave
or
je
adc
addl
xchg
push
scas
or
es
es
sbb
in
test
outsl
out
movsb
loope
xor
jmp
lcall
pop
stc
cmp
lret
mov
rol
cmpsl
push
int
and
dec
cmpsb
inc
fwait
imul
popa
lea
insb
ljmp
idiv
sbb
push
pop
sub
das
cwtl
or
xchg
cld
adc
xchg
pop
cs
cli
fistpll
out
push
mov
data16
add
fstpl
or
sub
mov
xchg
cmp
pop
test
xor
ret
das
mov
shlb
jmp
stos
jmp
les
and
jmp
xorb
cmp
sub
mov
lds
add
out
cmp
add
out
movl
xchg
cmp
push
mov
add
out
cld
add
and
lret
scas
mov
loope
test
push
sbb
nop
ffreep
xchg
inc
fldl
popf
in
lods
lods
sbb
inc
ret
dec
mov
outsl
mov
call
stc
iret
jb
mov
aad
ljmp
pop
jb
mov
add
or
mov
and
and
ret
lods
lcall
push
and
andl
gs
sub
outsb
inc
push
mov
loope
lods
or
adc
mov
in
sar
scas
enter
shlb
dec
rclb
shll
mov
mov
dec
stos
push
cmp
pop
bound
testb
pusha
gs
rolb
cwtl
jns
ljmp
mov
xor
je
aam
push
sbb
jp
aam
or
imul
gs
push
fsubrl
pop
xlat
repz
mov
hlt
or
mov
cltd
les
sahf
ds
data16
das
mov
mov
mov
cmpsl
movsl
mov
jl,pt
xchg
stos
leave
push
dec
push
cmpsl
mov
stc
jmp
inc
mov
jmp
cmp
lods
adc
add
lret
jno
mov
xchg
or
stc
xchg
jbe
and
jle,pn
mov
data16
xchg
lahf
cmp
cld
jno
lret
sub
adc
ja
int3
cmpsb
or
mov
pop
stos
add
inc
ja
call
lret
mov
jno
enter
filds
nop
xchg
les
outsb
sbb
xor
push
clc
roll
out
push
loop
lret
or
aam
lods
int
pusha
addr16
sbb
mov
or
nop
out
mov
cld
jmp
lds
les
sub
dec
mov
jmp
dec
push
enter
push
int
add
lahf
mov
xchg
push
xor
add
sbb
pop
sub
mov
sub
shl
cs
in
popf
test
mov
testb
shr
inc
lods
and
ja
out
xchg
inc
sbb
jo
pop
mov
movsb
into
je
and
sub
cmpsb
mov
push
fidivrl
cmpsl
movsb
mull
mov
xchg
mov
add
or
jl
mov
test
mov
pop
sbb
xor
stc
mov
test
arpl
jmp
les
int
hlt
dec
mov
xor
mov
int
inc
and
popa
outsb
rorl
rcrl
loopne
push
ret
fildl
push
xlat
add
ret
hlt
imul
ss
pusha
and
ja
repz
xor
insl
push
and
pop
cli
cmp
lahf
fwait
mov
fldl
cmp
ret
adc
adc
lds
sti
pusha
sarb
movsb
roll
fidivrl
out
in
inc
nop
icebp
dec
pop
imul
fwait
sbb
lods
aas
lods
dec
mov
jmp
mov
xor
shll
lahf
shl
mov
fistpll
sub
loop
sub
or
jbe
es
cmc
sti
in
daa
mov
mov
mov
xchg
jb
or
xor
push
rorl
pushf
jns
shl
test
les
daa
popl
out
cmpsb
mov
in
or
lds
jns
icebp
or
out
jne
repz
lds
pop
xor
adc
divl
cltd
jecxz
mov
je
xchg
in
loopne
adcb
loopne
and
xor
repnz
pop
mov
loop
in
cmp
mov
aas
and
adc
ret
sbb
jo
fistl
mov
add
and
insl
add
mov
add
fwait
je
xor
pop
mov
testl
cmpsb
out
data16
sahf
lods
enter
dec
jno
xchg
and
sbb
pop
xor
adcl
inc
shll
imul
inc
ja
push
dec
in
lahf
ficoms
inc
loopne
popl
nop
inc
xor
out
mov
aaa
cmpsb
jnp
out
clc
lods
test
cltd
fdivrs
adc
cmpsw
sbb
pop
loope
jae
fwait
pop
mov
cmp
ret
xor
jbe
push
fs
cmp
fstl
repnz
loope
jle
xchg
cmp
sub
jnp
jg
cli
dec
cmp
fbstp
pop
xchg
mov
xor
lcall
clc
sbb
dec
sub
movsb
call
cmpsb
movsl
push
enter
cmp
mov
popa
sbb
mov
add
in
jecxz
and
stc
jbe
pop
jp
stos
movups
mov
dec
mov
cs
jb
adc
daa
add
sbb
ds
les
pop
mov
inc
dec
rorl
lea
call
xchg
mov
das
and
in
enter
popa
dec
stos
mov
cmc
ret
div
jb
mov
stc
mov
repz
cmp
sub
jle
mov
or
sub
es
adc
pushf
rorl
mov
sbb
sub
inc
lcall
xchg
mov
dec
sbb
and
pop
mov
mov
xchg
dec
jb
or
sbb
mov
orl
sar
mov
add
fstl
xchg
loope
dec
cmp
fdivp
movsl
shr
popf
jbe
insb
push
inc
ljmp
adc
arpl
bound
js
lds
cli
mov
out
sub
adc
jbe
ds
stos
test
into
test
cmc
dec
lcall
mov
inc
mov
jne
or
clc
loop
in
xchg
adc
pop
inc
pop
sbb
xchg
test
jbe
lret
pop
push
xlat
stos
cmp
lahf
push
lods
outsb
fnstcw
repz
inc
cmc
sbb
sub
je
ja
movsb
pop
mov
xor
in
popa
out
push
mov
mov
fistpll
dec
cmc
mov
repnz
or
in
or
cmp
xor
xor
test
xor
mov
xchg
jo
in
pop
mov
pop
outsl
cmp
repz
enter
pop
fucomip
jo
and
push
pop
incl
push
mov
add
outsb
jae
xchg
adc
xchg
sub
ljmp
mov
add
or
push
xchg
rorl
pop
xchg
in
jle
mov
mov
dec
nop
adc
adc
in
sbb
xchg
int
push
push
rcrb
mov
movsb
fcomps
ja
add
arpl
mov
js
das
cmpsw
dec
push
cwtl
repz
leave
mov
adc
icebp
cmp
jecxz
sbb
stc
sahf
iret
addr16
mov
icebp
outsl
dec
push
hlt
add
mov
push
ret
jno
cmp
pusha
insb
push
sti
xchg
cmp
sbb
lock
rcrl
out
mov
adc
adc
sbb
push
fists
sub
xchg
inc
xchg
push
sbbl
std
dec
es
sub
push
jae
and
aam
mov
unpckhps
push
stc
sub
insl
push
add
cld
xchg
dec
add
and
lds
dec
enter
push
ds
xchg
push
xchg
test
jne
add
aaa
test
fiaddl
or
icebp
mov
mov
cmp
cltd
or
sub
xchg
or
jb
insl
jne
out
and
rorl
clc
jg
push
mov
fmull
vpaddsw
in
sarl
ja
nop
push
inc
mov
shll
fistpl
mov
mov
dec
aad
or
insl
mov
xchg
xchg
in
mov
and
add
popf
jns
mov
sbb
dec
daa
sub
mov
or
sbb
in
and
clc
mov
shlb
inc
loope
mov
out
js
and
mov
roll
out
in
arpl
xchg
mov
mov
loope
jno
adc
lods
adc
sub
fabs
mov
xor
out
jo
out
rcl
shl
repnz
push
push
cmp
jp
jg
gs
mov
lret
mov
nop
ret
test
ret
pop
fs
movsl
aad
xor
adc
ret
push
int
lods
pushf
inc
xchg
std
mov
fmulp
daa
incb
sbb
push
rcrb
sub
mov
or
push
mov
push
scas
into
cld
adc
xchg
shl
pop
xchg
pop
dec
hlt
mov
insl
ds
mov
popf
sbbb
mov
jns
in
inc
out
pop
rcrb
mov
jnp
sbb
or
jp
inc
pop
mov
push
inc
sti
popf
push
add
lahf
push
dec
xchg
in
adc
shl
or
mov
adc
shl
aam
mov
or
cmpsb
call
and
lds
in
mov
sub
lahf
xor
and
dec
insl
sub
in
je
mov
repnz
and
jecxz
stc
adc
outsl
pop
sub
lahf
cmc
adc
lcall
leave
mov
shlb
adc
cwtl
lea
enter
xor
cs
jmp
pop
paddq
adc
das
pusha
testl
ret
mov
test
dec
mov
cmp
mov
pop
jbe
les
addr16
mov
fcomps
xchg
bound
adc
mov
mov
xor
xchg
ds
or
adc
push
sarb
inc
inc
mov
fcompl
xchg
adc
jg
mov
lock
mov
cli
mov
lock
mov
sbb
and
xlat
mov
push
mov
inc
std
inc
push
mov
mov
or
lock
sbb
or
adcl
int
test
ljmp
xchg
xor
shlb
jle
and
lods
ltr
sub
in
cmp
jbe
insl
mov
jb
out
push
imul
hlt
cmp
mov
push
inc
rolb
iret
jo
mov
lret
in
mov
mov
scas
cltd
mov
insb
out
imul
test
adc
xchg
jne
mov
insb
sbb
dec
mov
je
fwait
lea
xor
dec
sbb
add
leave
imul
stc
mov
adc
test
popa
mov
icebp
add
sub
mul
pop
filds
int3
stc
pop
mov
popf
bound
push
shlb
dec
mov
std
or
sbb
fwait
les
inc
pop
pop
cmp
and
dec
inc
dec
out
mov
int3
cmpsl
xlat
into
sbb
xorb
jl
scas
sti
dec
imul
push
and
mov
add
into
pop
cltd
pop
push
mov
pusha
xchg
pop
adc
push
sbb
mov
and
ret
cmc
data16
inc
mov
fcompl
cs
subb
adc
pop
nop
gs
cltd
add
imul
adc
mov
in
push
mov
cmp
mov
leave
inc
fcmovb
xchg
mov
xchg
cmpsb
popf
adc
xchg
mov
scas
data16
shll
call
mov
fbstp
lock
test
int3
in
idivl
adc
cmp
push
test
push
add
mov
pushf
jbe
subb
int
inc
std
xchg
push
add
mov
mov
xchg
cmpsb
cmp
push
ss
pop
dec
adc
add
fnstcw
jno
inc
jecxz
aas
int
fsubl
enter
cmp
dec
stc
or
and
lods
bound
ss
add
sbb
xchg
mov
push
sub
jecxz
fistpll
lods
xchg
pop
in
aad
into
push
mov
out
sbb
cmp
mov
dec
xorb
push
pop
bound
repz
leave
fldenv
mov
pushl
inc
inc
cmp
pop
xor
xor
pop
imul
shll
iret
aam
mov
xor
mov
and
pop
mov
cli
adc
test
push
pop
and
mov
mov
xor
mov
adc
add
shll
lahf
cs
test
jno
movsb
mov
sti
jbe
outsb
decl
js
mov
push
scas
divb
push
sbb
and
test
aad
ds
imul
div
shl
std
lds
push
sbb
fmull
mov
sti
jmp
in
adc
push
push
lds
adc
jns
add
into
nop
cmp
mov
dec
or
lods
shrl
xchg
insb
or
adc
jge
imul
cmp
std
into
fdivrl
fadd
dec
sar
mov
rclb
outsl
fcomip
cli
cmp
jb
loopne
loope
fdivp
repnz
out
mov
mov
mov
mov
in
mov
test
fisubrl
jmp
mov
incl
out
fsubrs
pop
add
cmpl
pusha
add
inc
mov
das
inc
jmp
fnstsw
jns
and
or
xchg
movsb
addr16
inc
dec
movsb
nop
cmp
push
or
adc
icebp
mov
add
js
adc
or
popa
dec
daa
push
xor
pop
sahf
mov
sub
jbe
xchg
aas
in
scas
pop
sub
pop
nop
inc
xor
jnp
subl
pushf
sub
push
sub
fcomps
pop
jl
cmp
push
push
cwtl
aam
lret
orl
and
add
xchg
xchg
cltd
cmp
aad
push
fsubs
cwtl
mov
addl
xlat
cmp
jne
dec
mov
inc
push
imul
rorb
outsb
ljmp
sub
sbb
subb
negl
in
jg
jge
hlt
push
xor
mov
jp
add
inc
test
xor
movsb
add
xchg
js
cmp
lcall
mov
ss
jne
hlt
popf
daa
shl
and
les
pop
data16
iret
pop
and
inc
mov
add
jno
push
shl
js
lcall
ror
daa
pop
jno
xor
out
ret
jmp
adc
xchg
sbb
cmp
mov
nop
and
incl
add
cmpsb
sti
dec
test
push
rol
out
pop
imul
mov
mov
hlt
into
pusha
iret
inc
stos
outsl
mov
sub
popf
inc
enter
mov
fisubs
ljmp
pop
dec
popa
jbe
outsb
mov
or
xchg
sbbb
inc
fmulp
push
or
lea
jno
js
dec
in
cld
mov
fcoml
incl
mov
ja
fldcw
xchg
leave
aam
or
repz
ja
daa
mov
out
mov
sbb
mov
cmp
push
lock
dec
jg
fs
fmuls
call
fwait
mov
arpl
jmp
add
je
stc
js
xchg
fsubl
dec
in
hlt
jo
cmp
mov
push
push
jl
mov
mov
pop
imul
cmp
xchg
repz
sbb
movsb
jns
test
loop
pusha
fstpl
fimull
dec
shlb
lahf
fidivrs
add
test
and
sub
stos
clc
ret
cmp
rcrb
adc
ror
xchg
mov
gs
xchg
pop
xchg
movsl
or
xchg
outsl
ja
lock
and
jp
dec
sbb
test
mov
les
xchg
xchg
call
ror
cmp
xchg
xchg
jmp
and
iret
gs
jns
xchg
dec
mov
mov
sbb
outsl
dec
jne
out
int3
cvtpi2ps
sbb
test
add
xor
adc
dec
imul
dec
mov
and
rclb
sub
sub
sbb
inc
push
cltd
fidivs
hlt
sub
sub
add
push
sbb
pop
fwait
mov
mov
ret
leave
inc
lahf
push
xchg
js
cltd
mov
push
mov
push
mov
sarl
push
mov
cmp
dec
push
push
out
fcoml
jmp
ret
sub
call
rcrb
jno
jg
push
mov
fidivl
repnz
xlat
xlat
leave
mov
iret
cmpsl
mov
dec
mov
std
inc
fisttpl
and
mov
or
jecxz
out
mov
lods
mov
xor
pop
sbb
movsb
insb
jp
push
stos
popa
jmp
adc
add
mov
ljmp
repnz
loope
arpl
mov
sub
mov
aas
pop
jno
popa
adc
loopne
jg
pusha
lcall
test
mov
xchg
nop
xchg
pushf
frstor
in
jmp
fnstenv
mov
lods
and
pop
pop
jl
cs
push
gs
sbb
movsb
dec
sbb
push
adc
xorb
xchg
xor
test
rorb
outsb
add
enter
mov
inc
pop
xor
xchg
aaa
xor
jns
pushf
bound
xchg
mov
fprem1
xchg
repz
mov
into
cltd
sbb
push
cmp
andb
xor
mov
jecxz
das
test
or
inc
clc
xchg
lods
cmp
lcall
sub
hlt
add
pop
jecxz
or
lret
xchg
xchg
pusha
aaa
rcrl
adc
lds
and
or
sbb
jl
in
cmp
test
test
lret
inc
sbb
adc
aas
sub
or
mov
fists
lods
jle
mov
xchg
dec
fwait
repnz
inc
mov
les
mov
cmpsl
setae
idivb
aaa
push
mov
xchg
mov
and
mov
out
adc
sub
adc
ds
imul
sbb
fs
mov
sbb
cmpsl
aad
cmc
arpl
aad
and
xor
pop
dec
jmp
sub
out
and
pop
dec
pop
out
jge
push
jge
lods
pop
add
xchg
adc
out
mov
sub
adc
adc
add
loope
bt
push
push
mov
dec
sub
xchg
jno
and
and
mov
sub
test
mov
aaa
xchg
movsl
aaa
and
xor
mov
jecxz
mov
push
xchg
mov
rol
outsl
adc
sub
rolb
test
jne
in
jnp
inc
mov
in
and
cmp
icebp
outsb
or
and
outsb
ret
sub
add
std
outsb
lret
in
inc
aam
ljmp
popa
jns
fdivrl
fst
sbb
pop
push
mov
and
pop
xor
xlat
push
out
pop
jp
les
pop
dec
cs
jmp
mov
push
mov
push
movsl
scas
xchg
push
jnp
cmp
rcrb
dec
jno
lcall
xchg
or
stos
test
sub
mov
inc
sahf
push
and
jecxz
push
icebp
das
hlt
dec
loop
in
into
xchg
push
cwtl
add
add
pop
add
and
loopne
mov
aad
add
movsl
das
add
icebp
clc
sti
jl
enter
mov
adc
mov
bound
mov
lods
decl
or
xor
repz
mov
xchg
movsb
mov
popf
or
ret
sub
iret
std
jo
dec
popa
xor
call
sti
jle
lods
sub
cmp
jp
imul
out
stc
add
dec
sbb
add
xor
es
out
outsb
js
daa
bound
pop
add
in
pop
pslld
sbb
stos
or
or
es
xor
aaa
rcrl
and
inc
popa
in
adc
dec
mov
or
inc
sub
pop
sub
sbb
rol
sbb
std
subl
sbb
adc
aaa
xchg
or
unpcklps
in
clc
sbb
das
lahf
test
insb
lods
jae
sahf
inc
movsb
in
xchg
fwait
jnp
mov
adc
push
es
jg
cmp
cmp
sub
cli
mov
data16
inc
outsb
out
or
test
jo
jns
pop
cmc
pop
jnp
add
dec
daa
cmp
mov
leave
jae
jecxz
mov
cli
jl
shrl
cmp
jnp
rorl
jno
jge
adc
push
lea
dec
lcall
fisubs
out
jne
pop
mov
jmp
in
mov
and
mov
fisttpll
test
push
nop
loope
adc
dec
loope
push
sub
mov
pusha
pop
ljmp
out
cwtl
pop
jne
sarl
lcall
std
fldl
mov
or
and
adc
mov
lret
pop
pop
dec
lock
rolb
or
xor
xor
scas
adc
mov
mov
mov
push
cwtl
ljmp
push
rol
ja
pop
mov
jl
jl
je
idiv
pop
xchg
dec
pushl
sahf
or
lods
lods
in
pusha
cld
jg
cmp
cmpl
roll
in
sub
gs
mov
sbb
adc
imul
jno
lea
je
pop
out
jns
popf
daa
cmp
sub
iret
xchg
in
pop
aad
in
mov
loopne
aas
and
stc
xlat
ja
sahf
ret
xchg
and
in
push
lods
loopne
incb
lret
sub
lret
int
mov
ds
dec
imul
adc
or
negb
jmp
pop
mov
jne
sub
sbb
push
jecxz
out
subb
pop
adc
in
push
out
mov
jnp
lods
jae
and
inc
pop
leave
in
lock
fwait
mov
cld
pop
cmpl
stos
adc
mov
adc
sarl
push
ds
movsb
mov
or
in
add
in
les
jns
cmpsb
sub
jb
rorl
pop
push
dec
cltd
sub
out
repz
mov
add
mov
mov
inc
inc
push
push
or
shrl
jp
and
dec
lret
bound
aam
lret
cmp
xchg
sbb
push
or
movb
std
mov
inc
in
sbb
cmp
xchg
out
mov
aam
cmp
xchg
cli
and
repz
bound
pop
push
mov
mov
in
scas
cmpsl
cmpsl
ss
xchg
push
loopne
mov
ja
pop
mov
loopne
jmp
ret
dec
jns
sub
das
insl
fs
dec
dec
scas
cmc
push
in
dec
mov
lods
mov
ret
rolb
mov
push
inc
dec
sbb
fsubl
ret
sbb
pop
jp
push
inc
jae
rcll
mov
or
xor
cmp
daa
daa
icebp
ret
mov
call
and
addr16
lret
scas
iret
sub
popl
sub
and
outsl
jmp
xchg
test
pop
or
hlt
adcl
or
out
cs
push
outsl
push
sub
jge
push
mov
push
dec
jl
mov
lods
jbe
ret
mov
icebp
subb
in
sti
mov
push
insb
jbe
rcrl
push
movsb
dec
adc
test
fcom
push
stc
mov
cmp
push
inc
arpl
pop
ret
xchg
hlt
xlat
cmp
ficompl
adc
xchg
adc
xor
mov
xlat
lea
fisubl
clc
je
jecxz
ljmp
pusha
pop
enter
jl
xchg
jo
ss
adc
push
mov
orl
push
inc
inc
jmp
xor
frstor
mov
rolb
xor
lods
and
sahf
test
fisttps
in
mov
ss
data16
add
xor
jg
mov
add
mov
adc
and
cld
or
add
aas
test
xchg
in
inc
pushf
jle
leave
push
leave
jbe
dec
test
push
mov
add
lods
mov
fdivs
rorl
pop
pop
mov
or
repnz
add
adc
mov
xor
mov
bound
lods
ss
out
adc
sbb
jne
cli
mov
hlt
mov
adc
pushf
adc
test
js
ljmp
xor
pop
lahf
cld
shl
inc
xchg
stc
icebp
xor
dec
cld
ror
je
and
dec
or
xor
ret
test
orb
xor
push
fisubs
mov
jb
imul
jbe
inc
or
and
ds
iret
dec
ret
icebp
mov
imul
bound
cmpsl
inc
movsl
repnz
jnp
and
loop
sub
mov
push
inc
hlt
push
mov
or
or
add
in
mov
jl
inc
inc
jmp
imul
pop
mov
ret
cmp
stos
inc
std
cmp
pop
inc
mov
int
jb
pop
jl
lods
dec
sbbb
cmp
stos
pop
cltd
and
jnp
fimull
cmp
xchg
add
popl
inc
lods
ret
loope
adc
adc
rcrl
in
xchg
inc
lods
push
cmp
sub
jns
cmp
aad
lock
mov
inc
pop
lods
or
aaa
fs
push
shlb
add
sub
xchg
cmp
imul
dec
in
push
fistps
lock
stc
mov
fsubrl
jp
call
testl
adc
subl
mov
pusha
pop
std
addb
movsl
add
lods
in
ror
ret
sbb
cli
int
mov
dec
cmp
arpl
ss
popf
or
dec
cmc
or
sti
push
in
mov
outsb
mov
adc
fildl
or
outsb
sar
xchg
aaa
cvtps2pd
cmp
or
outsl
cltd
shr
adc
lcall
cmpb
pop
and
adc
or
add
lret
gs
pop
mov
shll
imul
push
xor
fcomp
push
fs
pop
jae,pn
xchg
pop
std
insb
mov
ret
mov
lret
jl
cmp
dec
mov
fnstsw
add
pop
push
push
dec
lahf
pop
iret
ljmp
sbb
enter
or
jp
pushf
adc
imul
sbb
lcall
fnsave
jb
into
or
jle
aas
or
add
sbb
cmc
inc
das
add
mov
inc
cld
popf
pop
and
jo
pusha
sub
xchg
outsl
sub
jmp
xor
ja
push
push
cmp
xor
xor
ret
out
pop
shlb
out
movb
jl
and
xor
lret
repnz
xor
and
xlat
or
mov
or
stc
mov
and
ficomps
mov
inc
pop
es
push
test
ror
adc
mov
adc
cmc
dec
mov
pop
mov
push
cmp
in
call
pop
or
out
xchg
mov
cmp
es
jno
insl
hlt
leave
adc
imulb
xchg
mov
loop
push
dec
cli
sub
or
pop
push
lea
add
xchg
pushf
mov
jmp
push
xor
outsb
mov
jns
dec
add
movsl
cwtl
leave
jns
push
mov
xor
ljmp
sbb
clc
hlt
cmp
xchg
test
mov
mov
mov
cmp
add
mov
jo
dec
sbbl
or
mov
sub
incb
add
jae
in
push
int3
cmpsl
fld
std
mov
mov
xor
dec
imull
xor
adc
shlb
adc
push
inc
lea
push
cmp
xor
xor
sub
sub
push
push
fwait
mov
jae
dec
cmp
loopne
xor
std
out
sbb
outsl
cmp
jno
andl
in
pop
daa
loopne
mov
jecxz
adc
iret
push
data16
lods
outsl
int
adc
mov
sub
dec
movsl
xor
add
xchg
mov
xor
jl
adc
adc
push
mov
jb
adc
andl
push
cmp
andb
cld
enter
mov
in
mov
or
inc
repz
mov
inc
lcall
dec
dec
add
hlt
js
lcall
rclb
adc
bound
add
xchg
mov
or
pop
scas
adc
xchg
mulb
stos
or
and
mov
sub
push
xor
add
rorb
lret
dec
int3
neg
sub
xor
cmp
popa
outsb
jnp
mov
addr16
imul
lret
cmp
fsts
mov
in
mov
ljmp
xchg
cmp
add
mov
dec
inc
notl
ss
xchg
and
mov
cs
or
das
jle
movsb
repz
lea
popf
test
inc
iret
cmp
mov
dec
and
inc
mov
mov
inc
jp
out
leave
sub
pop
push
cmpsb
lods
movsl
test
daa
arpl
int3
clc
sub
test
pop
xor
cs
pop
insb
adc
mov
leave
leave
cmp
xor
ficompl
in
and
call
push
jp
xchg
inc
dec
es
in
into
cmp
or
sahf
inc
rcrl
shll
dec
addr16
loop
lea
and
cltd
cli
push
sbb
stos
pop
cwtl
stc
pusha
xor
lds
sub
xor
push
push
pop
xor
hlt
mulb
push
push
xchg
mov
xor
and
pushf
pop
out
push
mov
ljmp
push
mov
push
and
nop
addl
pop
cwtl
pushl
mov
outsb
xor
insb
cltd
pop
cltd
shlb
fists
inc
and
imull
movsb
mov
rclb
loop
lret
mov
jae
sbb
cltd
cs
ror
int
mov
cmp
xor
xor
jecxz
push
cmp
pop
int3
xchg
lret
cmp
aam
xchg
xor
jb
pusha
inc
aas
dec
bound
loopne
ljmp
fwait
cmpl
ret
pusha
dec
arpl
jbe
dec
and
out
lret
adc
movsl
sbb
dec
mov
fsubrl
pop
jmp
jns
jle
ret
mov
dec
sbb
int
data16
test
pop
lods
xor
inc
fwait
aaa
sbb
inc
or
js
add
mov
adcb
repnz
sub
test
movsb
test
cld
sbbb
cmp
aaa
xchg
inc
cmp
mov
mov
pop
movsb
and
xchg
insb
lcall
ja
push
cmpsl
adc
adc
leave
and
mov
pop
movsb
mov
adc
insb
add
outsl
pop
popf
stc
cmp
sbb
arpl
inc
sahf
in
scas
inc
mov
push
jle
dec
sub
sbb
hlt
addr16
or
scas
pop
mov
pop
out
pop
pop
repnz
dec
pop
sub
test
ds
loope
jg
push
sub
jbe
movsb
pop
insb
fst
mov
or
ret
inc
pop
jae
decb
sti
gs
sarb
enter
shlb
dec
adc
enter
clc
int3
dec
stos
daa
jns
xchg
scas
int3
add
lds
rcrl
sahf
mov
fnstsw
rol
adc
lds
mov
pop
mov
fldenv
int3
or
movsb
pop
cmpsl
sbb
xor
nop
lds
push
int3
filds
jno
imul
cwtl
movsb
scas
cmp
pushf
test
or
jl
adc
icebp
and
les
and
ljmp
and
fistpll
jecxz
rcrb
int
out
pop
sub
ljmp
push
repz
fnstcw
mov
in
or
push
je
sahf
push
arpl
ss
mov
movl
inc
push
and
lea
jne
mov
aad
sbb
inc
cwtl
and
push
jecxz
fstps
cld
sbb
push
lods
into
add
cltd
rcr
mov
movsb
sti
aam
xor
and
rcr
pop
mov
mov
xor
ficoms
mov
dec
in
mov
xor
sahf
dec
jmp
push
cmp
rcrl
ret
shrl
test
rclb
cmp
ret
dec
mov
xchg
fisubrs
fisubl
aas
pop
pop
jp
insl
loope
adc
leave
mov
loope
out
out
jbe
push
push
or
lcall
loop
adc
or
test
pop
jle
jle
xchg
and
cli
add
jecxz
xchg
in
outsb
das
addb
inc
stos
push
mov
movsl
pop
insl
mov
movsl
mov
jnp
popa
cmp
mov
call
jg
hlt
mov
add
inc
push
inc
mov
add
and
lcall
faddl
enter
xor
push
mov
sbb
push
adc
insl
jnp
mov
subb
call
cmp
mov
sub
add
decl
divb
scas
jmp
adc
cltd
in
sarl
lret
sbb
mov
xorb
outsl
fdivrl
cmp
jle
sbb
jp
js
cli
push
push
cmpsb
mov
jle
jecxz
imul
fwait
inc
push
xor
jns
push
fdivrp
jecxz
sub
pushf
fadds
repnz
ljmp
adc
mov
out
or
ljmp
int
adc
xor
js
dec
inc
xlat
lret
or
dec
jp
sahf
adc
or
in
scas
pop
mov
clc
xor
outsl
mov
cli
mov
es
xchg
ffreep
sti
cld
out
test
push
jb
pushf
dec
int
les
dec
out
mov
int
pop
sub
fsubl
dec
stos
into
movsl
dec
fildll
les
jle
orl
dec
xor
std
adcb
das
aad
lock
test
cmp
pop
scas
pop
cmpsb
lock
imul
into
push
sub
sub
loop,pt
ret
jb
int
js
cmp
dec
in
loop
repnz
lds
or
mov
fwait
inc
xor
add
int3
push
dec
call
sub
inc
test
push
dec
test
dec
stc
jecxz,pn
imul
mov
mov
lea
and
sbb
imul
int
dec
repz
negb
and
add
shlb
movsl
xor
test
add
dec
xchg
cmp
xor
lret
fstpt
dec
jnp
cmp
jb
sbb
dec
loopne
shl
testb
add
dec
inc
and
mov
push
jecxz
xchg
xchg
rolb
mov
push
arpl
inc
test
fisttps
push
xor
mov
pop
adc
push
outsl
sub
pushf
andb
lods
pop
jne
fidivrs
cwtl
imul
xor
movl
jge
fists
mov
loop
pop
dec
push
mov
stos
sti
adc
popa
sbb
std
popf
lret
lock
push
add
mov
nop
mov
testb
push
and
cld
call
rdmsr
inc
enter
dec
inc
adc
mov
jo
movsl
repnz
adc
mov
pop
sub
pop
shrl
mov
scas
les
lcall
call
loopne
imul
in
mov
jg
ds
cmp
and
dec
in
jno
inc
mov
mov
push
xchg
fisubrs
cmp
jecxz
jp
addl
add
xor
leave
ja
cmc
pop
jp
or
mov
sub
xchg
repnz
adc
xchg
adc
pop
fisttpl
jbe
dec
lret
fldl
push
adc
xchg
fucomp
sahf
mov
jl
push
jle
stos
xchg
dec
inc
push
jle
fnsave
adc
and
add
pop
sbb
movl
and
mov
das
cmpsl
lret
adc
jecxz
gs
mov
pop
dec
cli
filds
mov
rol
mov
sub
mov
fdivrs
or
adc
addr16
xchg
fwait
icebp
decb
jecxz
ret
push
mov
xchg
and
push
cli
xchg
inc
divb
sub
cmpsb
js
lret
sub
and
add
addr16
adc
gs
inc
sti
fs
inc
mov
jb
or
fwait
push
fisubs
sbb
fistpll
in
xchg
xlat
fcomp
rcrb
xchg
pop
cli
ret
sbb
in
addl
lock
addr16
jmp
popa
addl
rclw
jl
leave
push
pusha
mov
xor
mov
pop
push
and
mov
cmc
mov
data16
push
rcrb
mov
das
ficoml
adc
and
cmp
movsb
pop
adcl
inc
lret
adc
test
jge
jge
cltd
dec
test
mov
inc
es
mov
shl
fprem
test
push
rep
adc
pop
jne
stos
pop
xchg
ja
lock
adc
mov
jge
arpl
jle
inc
mov
hlt
sub
imul
shll
scas
lods
lahf
cld
xor
int3
data16
push
mov
jno
negb
jno
pushf
lcall
adc
xlat
xchg
lods
jb
fcompl
xchg
test
sbb
sti
test
hlt
aas
push
push
fistpll
and
aam
jg
xchg
xchg
movl
mulb
jae
rcl
fwait
loopne
xchg
in
lds
adc
push
dec
push
xor
push
inc
inc
out
jl
xchg
jle
daa
xlat
inc
jg
mov
sbb
xchg
fnsave
cmp
clc
cmp
shr
cmp
cmp
add
pop
das
push
inc
sub
sub
adc
shlb
mov
push
imul
repz
adc
add
addb
clc
jo
fstpl
lahf
sub
lret
xor
insb
in
inc
pop
pop
mov
lcall
cmp
inc
stos
push
shll
aaa
gs
int3
sbb
iret
nopl
out
cmpsb
in
sub
sbb
cltd
jecxz
cmp
inc
inc
push
outsb
sub
mov
cwtl
popa
in
scas
xor
fs
sbb
out
and
and
popf
pushf
mov
shl
push
lret
int
aas
xor
adc
roll
pop
jno
mov
sbb
or
or
pop
cmp
jne
aam
shlb
sbb
xchg
mov
cmpb
jns
sbb
int3
add
dec
mov
insl
cmp
in
loope
hlt
imul
jmp
mov
inc
lahf
test
xor
cmpb
ret
jmp
adc
adc
out
lods
pusha
push
or
lea
sub
mov
xchg
and
rolb
xchg
jg
or
sub
mov
jns
add
das
inc
inc
popa
pusha
mov
sub
imul
lret
xchg
lcall
and
push
jge
cltd
xor
bound
or
sti
mov
mov
push
rolb
jb
lock
dec
mov
and
pop
lds
test
mov
mov
loope
xchg
hlt
ret
stc
test
cltd
jmp
and
pop
call
sub
pop
lds
sahf
xchg
sub
ret
mov
push
sub
int
xchg
ljmp
roll
pop
cmpb
mov
cli
ret
popa
or
xchg
sub
out
jae
push
pop
xor
mov
ret
loopne
xchg
push
xor
lods
xor
les
or
add
cmpsl
sbb
insl
cmp
dec
pop
pop
push
scas
or
adc
pushf
hlt
fcoml
mov
push
mov
sub
and
scas
mov
adc
xchg
jecxz
and
xchg
cltd
orl
out
addr16
enter
dec
add
lea
test
xlat
lret
inc
ss
sbb
pop
fdivrl
aad
mov
xchg
insl
mov
and
or
out
lds
dec
jne
out
pop
movq
and
xor
or
and
lods
and
sarb
aas
movsb
repnz
sbb
call
loopne
pop
inc
add
add
mov
std
adc
testl
shlb
lret
cmpsl
fsubl
sub
imul
mov
and
mov
orl
mov
mov
dec
neg
lods
fistps
sub
jecxz
mov
pop
sub
pop
pop
jmp
xor
xchg
cmpsl
loope
imul
push
sbb
imul
and
incb
xchg
popa
pop
les
pop
mov
leave
in
cmp
mov
das
jl
shrl
pop
mov
mov
cmp
xchg
mov
popa
out
loopne
dec
imul
cmc
jnp
in
out
clc
cmp
outsb
filds
add
int3
adc
xchg
out
hlt
add
ds
popa
inc
push
inc
mov
xchg
testb
xchg
lods
add
jg
and
or
or
orb
adc
jne
pop
sbb
sar
and
fidivs
aaa
stos
into
fsubp
add
and
push
sub
mov
xchg
sbbb
movsl
cmp
sub
stos
sahf
sub
or
lcall
stc
iret
and
negb
std
cmpsb
dec
cmp
jo
mov
push
ret
in
adc
ficoml
dec
out
test
xlat
aaa
jecxz
jo
cmpsb
data16
es
xchg
add
xor
inc
inc
xlat
or
adc
add
dec
fistpl
pop
dec
add
orb
aas
ficompl
pop
int
icebp
push
mov
and
xchg
add
lods
cmp
js
fistpl
iret
sub
xlat
dec
sar
push
adc
add
stc
push
dec
xchg
outsb
xchg
cltd
ds
xchg
scas
sbb
cmp
sbb
jae
hlt
rcl
shl
mov
or
lcall
test
pop
cmp
into
lea
cmc
inc
and
push
or
push
loop
adc
movsl
mov
dec
jge
xchg
cmpsl
mov
test
sub
cltd
pop
sub
add
insb
ljmp
leave
xchg
mov
out
mov
cmp
xor
xchg
fnstenv
ret
mov
push
or
lret
test
cs
and
leave
stos
mov
xchg
out
xorb
jo
pop
fwait
dec
mov
clc
das
lds
aad
daa
call
into
negl
jo
inc
repnz
pop
push
ficoml
dec
xlat
xchg
xchg
cltd
jo
add
dec
out
and
arpl
push
cmc
dec
push
stos
adc
fdivr
mov
mov
or
neg
fsts
and
ss
or
jge
push
mov
cld
dec
lods
test
sub
jno
sahf
in
jge
sub
xchg
mov
orb
inc
aam
lcall
fwait
dec
mov
movsl
addr16
cmp
jl
push
xchg
push
cltd
cmc
call
jmp
out
add
movsb
cltd
es
sbb
insb
sbbb
pop
mov
pushl
cwtl
and
push
in
dec
push
xor
in
sbb
sbb
push
lahf
adc
mov
fwait
loop
rol
inc
es
test
in
rol
lahf
add
push
or
xchg
sub
or
jecxz
mov
push
aad
sub
jbe
es
cli
dec
arpl
shl
inc
les
rcll
bnd
jnp
cmc
cmpsl
dec
pop
mov
inc
jle
cmp
xor
fsub
adc
int
lock
and
mov
aam
nop
fldz
fwait
adc
enter
stos
ret
sub
xchg
in
sub
repnz
and
std
loop
sar
stos
fnstcw
xchg
mov
fiaddl
sti
pusha
pushl
or
stos
and
and
js
jl
popf
popf
cmpsl
mov
mov
and
data16
jp
mov
mov
jne
dec
pop
mov
xor
mov
cltd
fidivrs
sbb
jle
loope
sti
xor
lods
mov
mov
jae
add
lods
and
pop
in
mov
sbb
xor
xor
cwtl
xor
test
leave
lret
push
lahf
rcl
dec
pop
mov
dec
scas
mul
mov
inc
sbb
add
fisubrs
rolb
jle
bound
pop
add
sahf
push
or
push
test
int3
cmp
xchg
xchg
mov
into
hlt
dec
adc
push
cmp
icebp
jnp
aam
pop
int3
in
shl
pusha
cmp
test
loope
shll
jmp
out
pop
sub
daa
cli
pop
into
xchg
lds
cmpsl
popf
jp
xchg
aad
jmp
fs
mov
ds
dec
dec
loope
and
imul
pop
insb
mov
sub
out
ret
es
in
call
fldl
inc
sbb
clc
inc
gs
jle
inc
sub
fdivr
adc
dec
fstpt
xchg
js
xchg
imul
loope
inc
mov
scas
cmp
sub
xchg
cmp
fs
and
and
idivl
out
adc
stos
les
mov
out
int
xchg
outsb
lret
ret
test
jno
sub
int3
int
cmpsb
jno
lock
das
aaa
pop
lods
push
pushf
adc
mov
fwait
mov
xor
or
lds
movsb
fnstsw
sbb
sbb
addb
js
rclb
jne
xor
xlat
rorb
sub
test
sbb
xchg
lahf
mov
xchg
mov
ret
mov
movsb
hlt
xor
and
enter
push
mov
and
sub
adc
and
push
popa
ds
enter
cli
jne
mov
push
inc
and
out
mov
stos
pop
inc
out
dec
sub
push
cmp
mov
xor
pop
pop
mov
jb
inc
push
cli
filds
xchg
pusha
scas
xchg
xchg
inc
lods
sub
dec
lea
mov
adc
repnz
jae
loop
sub
sub
inc
jmp
scas
loope
mov
loopne
jle
mov
movsl
movsl
add
add
jl
test
repz
or
fimuls
pop
jmp
pop
and
mov
in
jecxz
cwtl
inc
push
addb
mov
das
lret
add
add
jno
pop
jbe
ds
sti
pavgw
jge
leave
mov
mov
and
mov
jo
jbe
dec
xchg
inc
enter
add
out
jmp
push
jle
mov
jp
cmpsl
xor
jmp
mov
add
sub
sub
ljmp
mov
mov
dec
aas
jbe
icebp
fsubrp
call
addr16
lcall
dec
cmc
add
imulb
cmp
and
mov
mov
and
or
sub
dec
jl
cmpsb
div
idiv
cmp
ficoms
fsubp
xor
push
dec
push
pop
aaa
pop
dec
fwait
insb
xor
sti
call
xor
loope
mov
stos
lds
push
xchg
mov
push
mov
dec
pop
insb
sbb
inc
mov
pop
cmp
jmp
addr16
or
or
stc
lret
push
aas
cltd
je
imul
jmp
stos
into
sub
adc
sahf
push
sbb
fs
xchg
test
daa
pop
into
out
daa
sub
and
mov
mov
decl
push
pop
adcb
push
or
mov
pop
vmread
inc
movsb
nop
and
insl
xchg
aam
mov
pop
mov
mov
test
inc
out
push
mov
xchg
jge
inc
push
arpl
or
loope
pop
cmp
pop
leave
movsb
xor
xor
push
pop
pop
pusha
push
push
fsubl
dec
data16
iret
lret
bound
rcl
jg
test
add
jns
ret
mov
fdiv
pop
repz
pop
mov
rep
pusha
mov
mov
in
and
dec
shrl
cs
cltd
adc
into
pop
lahf
and
mov
jmp
in
mov
imul
adc
aad
pop
pop
xchg
and
mov
popa
fwait
jmp
cmp
push
jl
loopne
ret
sub
jl
fs
jnp
inc
mov
lcall
dec
mov
int
push
jno
push
fwait
xor
cmp
stos
imul
in
outsl
rorb
sub
cmpsl
shr
xchg
mov
ret
pop
jno
pushf
sub
cs
sbb
daa
fsubrl
lahf
test
jmp
mov
mov
pop
cmp
mov
jae
pop
pusha
insl
pop
sub
shl
dec
out
xor
mov
das
mov
push
mov
sub
mov
mov
mov
stos
mov
dec
push
leave
dec
push
cmp
pop
xor
add
push
test
in
mov
in
jae
dec
dec
mov
pop
lcall
xchg
in
out
outsb
push
addr16
sarb
cmc
and
pop
dec
stos
jle
xor
xchg
jl
xchg
lret
dec
xchg
or
out
rorl
fcompl
push
jle
into
addr16
dec
or
js
adc
ss
cli
out
push
hlt
out
add
inc
gs
cwtl
pop
xor
clc
adc
xchg
pop
dec
xchg
jg
lcall
divb
cmc
push
cmp
add
sbb
lds
movsl
and
xchg
mov
rorb
sahf
fwait
scas
test
mov
test
int3
test
repnz
cs
push
cmpsl
cli
sub
aad
sub
xchg
push
jne
cmpsl
xor
sbb
xor
dec
jnp
dec
sub
sub
adc
inc
cmpsb
imul
dec
aam
mov
aaa
pop
ss
pop
jb
or
int3
mov
aaa
lret
xor
mov
ret
sub
mov
ret
sbb
gs
lods
call
dec
int3
insb
xchg
jo
ret
mov
xor
aas
cli
ds
sub
cwtl
mov
push
dec
mov
imul
es
cmp
push
test
daa
or
mov
mov
scas
fnstcw
ljmp
mov
movsb
sub
cmp
adc
dec
jp
movsl
and
mov
sub
inc
adc
addb
cmpsb
jle
ret
mov
or
stos
or
enter
int3
movsb
pushf
xchg
push
xor
imul
push
in
mov
add
shlb
insb
cltd
cmp
dec
mov
push
je
and
divb
inc
sbb
mov
enter
pop
pop
in
ss
fbld
and
cmp
int3
cli
notb
test
jb
out
adc
jo
js
ret
cmpb
jbe
es
shll
ljmp
push
aaa
test
or
jl
add
jnp
testl
xor
aas
or
lret
bound
or
mov
into
mull
addb
lock
outsl
or
call
cmpsl
shll
mov
pop
adc
hlt
jns
dec
xlat
mov
int
lods
jge
mov
das
jmp
or
subl
pop
xchg
xor
push
call
fwait
dec
xor
mov
mov
pop
mov
das
fucomip
popf
jle
jno
mov
stos
mov
lret
push
inc
or
and
mov
into
mov
adc
pusha
movsl
call
inc
mov
jb
rorl
sti
sbb
pop
push
cwtl
pop
in
push
dec
int3
jmp
sahf
cmpsb
mov
iret
ja
outsb
jae
lods
cmp
mov
test
pop
xor
and
mov
jge
jae
pop
ss
push
sub
push
mov
lock
mov
pop
mov
sti
inc
sbb
mov
imul
push
adc
lock
and
mov
sbb
stos
pop
inc
xor
mov
hlt
sti
or
mov
pop
mov
cmpsl
dec
mov
and
imul
pop
gs
sbb
add
sub
mov
sbb
int
fs
repnz
pop
inc
aas
lods
cs
cwtl
or
jbe
jnp
cld
inc
push
or
imul
test
enter
sbb
in
test
add
dec
sbb
mov
in
cmp
test
jne
leave
push
loope
push
outsl
dec
int
popf
cwtl
iret
jmp
mov
push
push
ljmp
call
hlt
cmp
cld
adc
pop
mov
sub
inc
test
in
sub
clc
adc
scas
leave
dec
pop
jno
add
nop
push
adc
jae
mov
iret
pop
add
into
mov
pusha
sarb
sahf
mov
and
mov
je
decl
cmp
dec
repz
sub
call
repnz
xchg
dec
cmp
dec
sub
mov
mov
mov
test
scas
adc
pop
pop
push
cmp
int3
stos
pop
mov
adc
or
jge
fistl
stos
subb
js
sbb
jmp
mov
add
les
sbb
add
test
shll
movsl
aam
xor
bound
jp
cmp
lea
outsl
xchg
pusha
mov
push
adc
cli
adc
fucomi
xchg
xchg
push
out
dec
push
rcl
dec
xchg
dec
daa
cmpsb
sub
adc
stos
push
xchg
movsl
lds
sub
fwait
push
ds
repz
stos
fsub
fcmovnbe
int
rorb
std
jns
popa
pop
sbb
hlt
adc
inc
fsubl
and
out
cwtl
ljmp
jno
test
jecxz
andl
mov
into
pushl
cmpb
popf
ds
outsb
jle
fldenv
nop
les
push
loopne
mov
or
sarb
sbb
inc
pmaxub
in
sbb
dec
add
jmp
and
or
in
into
fdivs
iret
nop
push
imul
xor
pop
ja
cmp
xchg
insl
sbb
scas
insl
in
push
dec
decb
or
push
adc
enter
mov
imul
adc
inc
mov
in
push
jp
dec
mov
dec
loopne
xchg
jo
mov
jb
mov
pop
and
jmp
push
stc
add
repnz
out
pop
sub
xor
jnp
push
mov
adc
lods
aas
in
mov
add
je
std
pop
je
jae
pop
jns
clc
pop
jmp
or
inc
shlb
and
mov
adc
pop
ja
mul
mov
dec
or
test
pop
outsl
push
sbb
std
mov
dec
insl
enter
cmp
ror
insb
fisubrl
scas
push
sbb
inc
lret
cld
lods
add
sub
out
test
movq
in
in
subb
and
enter
punpckhwd
sub
test
jle
ret
dec
fnsave
in
push
or
inc
jnp
cmc
scas
fs
pusha
sub
test
leave
pop
cs
mov
xchg
inc
pusha
aas
in
clc
insb
and
scas
jb
pop
fldenv
cmp
xchg
push
xchg
jmp
pop
sbb
push
movups
inc
in
add
in
jmp
jae
scas
iret
dec
sub
cmp
bound
and
fadds
out
icebp
push
pop
mov
hlt
ret
sub
sbb
jbe
bound
in
lds
xchg
ljmp
std
je
mov
lds
in
icebp
das
or
add
fdivrl
fldcw
stc
xchg
sbb
xchg
jno
push
outsb
sub
fwait
popa
andl
mov
xchg
mov
cwtl
ret
cmp
daa
cld
std
pop
fdivs
nop
and
out
in
or
movsb
clc
xor
loopne
enter
pop
jl
xchg
movsl
addb
push
repz
jno
loope
popa
fdivrl
push
arpl
test
adc
cwtl
cmp
rclb
in
aam
xor
lret
and
out
int
sbb
push
aad
fsts
cmp
int3
xorl
push
sub
adc
add
xor
mov
push
cmp
mov
mov
sub
fidivs
out
ds
cmp
mov
outsb
les
sti
add
lods
dec
sbb
cmpsl
div
add
xchg
add
iret
fsubrl
aaa
arpl
cltd
mov
sbb
rorl
jae
or
xchg
sbb
scas
pop
out
aad
sbbb
pop
aaa
pop
sbb
lds
icebp
es
scas
arpl
dec
aas
test
xor
and
dec
push
test
scas
ja
mov
jecxz
lahf
movsl
fnstsw
std
mov
and
das
cmp
int3
les
lock
repnz
mov
lock
xor
sbb
sbb
pop
add
xchg
adc
xlat
cmpsl
sub
bound
sub
push
cmp
loope
les
popf
dec
lods
in
dec
loope
cmp
push
push
movsl
es
dec
dec
rorb
lret
ret
je
sti
pusha
pop
fldenv
lahf
bnd
mov
sub
std
jno
cmp
insl
movsb
iret
mov
imul
cmpsl
and
mov
xchg
outsl
dec
pop
int
sbb
adc
fisttpll
inc
aaa
cmc
imul
jle
outsl
push
lds
lods
out
mov
out
mov
fcoml
out
sbb
cwtl
in
vpshaw
ja
mov
sub
inc
subl
sbb
loopne
and
push
sbb
mov
adc
mov
add
dec
push
icebp
mov
dec
sahf
les
cwtl
enter
mull
push
pop
pop
outsl
lret
es
shrb
mov
in
out
or
pop
stc
mov
outsb
adc
push
lea
mov
add
adc
jge
leave
jle
in
push
roll
mov
dec
clc
pop
js
loop
mov
stos
fldcw
adc
filds
mov
outsb
lods
dec
rcll
mov
cmpsb
jmp
mov
hlt
ja
cmp
shll
and
or
sahf
ljmp
jne
xchg
mov
xchg
dec
inc
sbb
mov
cmp
ret
stos
ja
lea
movsb
add
out
loop
fisubl
mov
in
in
lds
push
hlt
popa
push
xor
mov
add
mov
inc
sub
pop
bound
mov
cmpsb
jae
xor
call
stos
push
sbb
loope
jp
daa
mov
test
and
mov
sub
emms
je
aas
dec
push
mov
lahf
imul
xchg
mov
xor
push
out
inc
cltd
mov
loope
jle
addb
fincstp
xor
cmp
mov
loop
loope
subl
leave
inc
add
cli
mov
mov
sbb
xlat
sub
xchg
sub
sub
mov
imul
outsb
ljmp
xor
pop
push
ds
pop
insl
push
pop
mov
jg
inc
mov
jmp
out
jae
or
insb
enter
and
xchg
add
test
ja
sub
dec
add
fwait
aas
shl
imul
push
dec
mov
stos
aad
idivb
or
sti
push
lcall
mov
add
sub
popa
std
sbb
sub
add
test
in
sbb
sahf
jl
add
mov
adc
push
rcrl
cmpsl
fisubl
inc
dec
iret
je
lods
push
mov
jnp
sub
insl
ss
out
mov
loop
popf
out
sub
mov
add
int3
sarb
int
mov
push
jne
rcll
cmp
push
sub
jecxz
mov
or
clc
jne
repnz
xor
idivb
aas
sbb
js
and
sub
scas
fdivrl
cmp
cmp
or
stc
xor
push
popa
lahf
mov
jae
cmp
ja
popf
cli
ret
lea
ljmp
icebp
movsl
pop
ljmp
into
cld
outsb
outsl
cmp
outsl
and
pop
scas
pop
inc
pop
test
fcomps
in
pop
shl
popf
jnp
mov
dec
jge
sub
cmpsb
les
fbld
fstpl
test
insl
dec
dec
dec
dec
lods
cmp
ss
xchg
in
push
pop
popf
ret
pop
inc
fildl
nop
popf
xchg
xchg
out
add
ss
dec
es
fcompl
push
pop
mov
shll
je
out
rorl
cmpsl
add
mov
jge,pt
pop
mov
leave
push
cmp
sub
add
and
or
ret
sub
inc
dec
ljmp
xchg
and
flds
jbe
sub
fucom
sub
xlat
nop
jmp
inc
jecxz
sub
add
inc
jg
jmp
jmp
fisttps
or
add
data16
inc
adc
divl
pop
sbb
sbb
add
jae
mov
in
out
out
mov
push
das
ljmp
lret
pop
cwtl
js
hlt
incl
loop
push
mov
insl
cld
cmpb
shll
push
pop
inc
xchg
sbb
cmp
shr
adc
clc
int3
mov
pushf
addr16
insb
popa
cmpsb
and
pop
lods
sti
rorb
and
sbb
imul
dec
adc
cmp
outsb
cmp
jo
outsb
sub
mov
xchg
sub
out
pop
jno
roll
test
jl
sbb
fisubrl
dec
ret
pop
nop
jg
dec
in
aad
and
inc
sbb
lret
popf
mov
mov
mov
leave
xor
inc
inc
ss
mov
clc
dec
mov
imul
adc
xlat
pop
sbb
loopne
or
gs
mov
insl
sbb
push
gs
jmp
pushf
cmpsb
int
jno
and
adc
and
lea
fsubl
sub
xor
xchg
mov
sbb
inc
and
cs
or
pusha
jmp
add
vmread
mov
dec
pop
mov
mov
push
adc
add
repz
adc
inc
xor
and
mov
mov
inc
jbe
repz
and
push
pusha
popa
pusha
rclb
jge
xchg
adc
mul
push
xchg
stos
push
sbb
inc
ja
fsubr
ss
pop
lahf
call
repnz
repnz
jae
stc
jnp
jg
ret
stos
pop
dec
fstpl
xchg
add
dec
mov
insb
icebp
or
xchg
aad
mov
cmp
insl
rcr
push
jo
pop
das
push
clc
cwtl
cmp
shrl
outsl
out
jbe
dec
pop
mov
lret
orl
sub
lcall
cmp
pop
jp
push
jb
arpl
mov
loopne
fisubs
lods
mov
adc
jp
jmp
push
test
mov
clc
and
insb
fwait
roll
jl
int
ret
std
xchg
dec
jle
ret
arpl
xchg
sub
xchg
mov
dec
inc
sbb
insl
jno
movsl
jb,pt
unpckhps
nop
pop
out
loop
jbe
jb
mov
pop
push
adc
fistpl
jo
cmp
inc
pop
faddl
es
insb
push
xor
std
aaa
sub
pusha
test
inc
jbe
es
jb
nop
push
sub
cmp
in
jge
scas
in
inc
lods
dec
jmp
out
insl
addr16
xor
cli
popa
orl
testl
mov
lret
sbb
mov
mov
notl
icebp
pop
jl
adc
sub
lahf
jno
sbbl
loopne,pn
adc
out
dec
jecxz
xor
dec
fnsave
jl
xchg
cmc
mov
das
je
mov
mov
insl
and
pop
inc
dec
mov
pop
ja
xor
push
sub
lock
shll
cltd
pop
int3
out
arpl
mov
xlat
mov
dec
mov
adc
xor
jle
sub
and
dec
icebp
clc
testl
pop
mov
adc
icebp
je
add
out
aaa
fstpl
es
mov
cltd
jl
mov
pop
xor
adc
cli
ret
pop
jns
icebp
sahf
mov
or
adc
leave
aad
insl
xchg
sub
and
daa
je
push
cltd
jmp
ja
insl
adc
adc
les
andb
and
je
cld
aaa
push
mov
cmp
dec
jg
cmp
jo
pop
out
dec
scas
stc
in
inc
addr16
insl
jle
inc
imul
pop
jmp
jbe
sub
sub
rclb
add
xchg
ss
into
loopnew
xor
out
sub
popf
repz
mov
out
fbstp
sub
lock
lods
and
or
js
pop
adc
movsl
pop
pop
fistpl
mov
sbb
pop
es
sub
or
pusha
cs
sti
and
scas
lods
mov
outsl
cmp
sbb
leave
and
fisttpll
shll
insb
btr
sbb
in
add
in
iret
and
shr
fs
rolb
fisttps
ss
sti
push
sahf
cmc
les
push
cmp
test
pop
jecxz
sbb
inc
aas
in
cmpsl
inc
outsb
in
mov
jp
jp
pop
cmp
outsl
ja
idivb
pop
adc
ljmp
push
and
jp
sub
dec
dec
jbe
movsb
arpl
pop
imulb
clc
in
cmp
sub
mov
jg
push
lods
dec
ljmp
int
sti
mov
lret
lds
test
xchg
iret
or
into
fdiv
pop
adcb
mov
jo
jecxz
push
rcrb
lock
cmp
pop
mov
addr16
js
pop
mov
pop
cmp
push
mov
pop
icebp
add
outsl
jl
sbb
lfs
inc
nop
cmp
add
cmpsb
push
push
push
std
adc
sarl
mov
adc
lahf
outsb
and
out
cmc
push
fldt
jge
jle
dec
mov
sbb
addr16
in
cli
cmp
mov
xchg
mov
pop
aam
ficomps
push
mov
stc
jmp
std
push
inc
inc
inc
add
stc
dec
add
in
xor
and
lret
inc
pop
scas
roll
or
gs
mov
les
cmpb
fdivrl
sub
pop
inc
cmp
or
ja
std
clc
popf
arpl
jb
xchg
mov
mov
cmp
cld
mov
jne
or
cmp
pop
int3
sti
pushf
mov
jl
dec
pop
mov
ss
xor
or
test
mov
sub
dec
xadd
mov
dec
cltd
out
adc
pop
rclb
lods
mov
xor
jno
adc
pop
dec
into
push
orl
fdivrp
lret
and
fisttpl
adc
out
or
pop
mov
shll
in
movsb
xchg
push
jmp
cmc
fdivs
lcall
mov
pop
rcl
cmpsl
mov
bound
and
cwtl
and
mov
ffree
mov
add
sub
or
dec
cmp
mov
fldl
arpl
scas
fsub
adc
mov
lcall
mov
int
or
jg
ss
out
push
xchg
sbb
sub
jno,pt
push
lds
inc
fsin
sub
in
xor
dec
sub
pop
mov
dec
inc
jno
add
or
add
xor
adc
inc
xchg
std
es
sbb
dec
aad
mov
and
out
imul
dec
dec
fistps
push
lret
fldlg2
negb
pop
cmp
movsb
push
cmp
lods
push
rolb
std
fidivrl
scas
aam
fidivs
mov
outsl
leave
shll
stos
push
ja
pop
jecxz
inc
mov
outsb
shlb
sub
or
pop
out
pop
xor
out
push
sub
mov
jb
mov
in
aam
gs
xchg
xor
gs
mov
sbb
aam
jnp
fisttps
pushf
aam
test
iret
lods
sbb
lret
pushl
je
nop
es
out
and
push
lods
popa
mov
push
shl
sub
jo
cmp
fmul
dec
and
inc
jl
inc
push
movsl
xchg
scas
repz
add
mov
or
inc
lret
dec
jo,pt
xchg
jmp
push
pop
data16
mov
loop
leave
loope
sbb
in
pop
cmp
lahf
sub
xor
rolb
sub
out
out
cmp
dec
in
movsb
subl
jae
inc
push
movsb
sbb
aaa
outsb
xchg
pop
out
mov
xor
fwait
mov
xor
lret
sub
pop
test
addb
scas
pop
imul
push
cmp
and
popf
pop
push
lahf
xchg
sahf
mov
mov
push
outsb
mov
call
int
ljmp
inc
fisubrl
or
subb
or
jne
and
stos
mov
xchg
pop
sbb
xor
add
iret
cltd
or
lcall
mov
stc
mov
sbb
out
popf
push
push
fs
jno
jle
cmpsl
push
jle
jmp
js
inc
push
jecxz
xchg
pop
rorb
or
test
cmpsb
cmpsl
fs
adc
sub
jo
mov
mov
jns
inc
repnz
loop
popa
mov
xchg
jle
inc
popa
lods
mov
mov
adc
mov
xor
xor
cli
inc
cltd
jne
ret
push
xchg
mov
fcomi
sbb
fisttpll
dec
stc
mov
dec
fcmovu
loope
fs
adc
mov
lods
test
push
cmpsb
mov
pushf
sub
fists
orl
fidivl
fwait
mov
dec
push
jns
pop
mov
cmpsb
movsl
sbb
mov
pop
dec
mov
cli
and
inc
add
addr16
pop
xor
jbe
xor
icebp
cs
mov
push
jge
jg
mov
leave
and
mov
xchg
inc
int3
adcl
inc
inc
cs
je
lods
lea
in
adc
lcall
push
les
gs
sub
and
xor
pusha
jge
pop
sub
mov
div
xchg
iret
sbb
xchg
icebp
int
stos
sbb
out
mov
cmpsl
div
xor
and
mov
idivb
pop
mov
movsb
fcmovnu
fwait
mov
and
mov
xlat
push
outsb
jle
jnp
jns
xchg
mov
fldcw
push
sub
aam
xorb
in
aas
mov
imul
push
or
jp
fwait
jle
sub
ljmp
cmp
jo
sbbl
xorb
inc
push
jg
les
fisttpl
stos
pop
mov
arpl
mov
mov
cld
add
loop
das
out
pushf
loopne
lret
or
push
aam
mov
jg
imul
and
cwtl
arpl
and
push
mov
inc
lods
outsl
addr16
and
mov
push
mov
cmc
xchg
repnz
and
filds
test
jmp
or
inc
mov
aad
dec
inc
mov
adc
fstp
ljmp
std
dec
cmp
dec
in
add
pop
mov
cmpsb
mov
pop
jle
leave
mov
test
push
push
push
data16
pushf
xor
mov
sti
dec
dec
xchg
int3
mov
arpl
and
dec
sub
push
ret
push
pusha
and
cmp
sahf
or
push
pop
ja
popf
fs
test
pushf
cli
push
cmp
xor
filds
jecxz
cs
cmp
jmp
popf
mov
icebp
mov
cmpsl
xchg
in
int
mov
jbe
jns
clc
dec
jnp
call
cmc
pop
mov
adc
imul
lods
sub
jg
mov
pusha
push
out
negl
mov
addr16
mov
mov
push
sub
add
xchg
arpl
jge
enter
ret
mov
aad
mov
rorb
fcomps
xchg
cmp
sub
dec
movsb
cmpsl
scas
dec
or
movsb
or
sub
jbe
ss
outsb
sbb
inc
loopne
negb
in
mov
mov
mov
and
stos
pop
outsl
inc
scas
sti
je
inc
ret
lock
dec
fstpt
mov
imul
in
int3
out
or
jmp
imul
cmp
mov
jle
into
shll
std
inc
or
cmp
push
leave
gs
mov
jo
daa
mov
jmp
rorl
sbb
inc
push
jnp
int
mov
mov
rol
fisubl
jbe
loopne
sbb
clc
dec
sbb
and
push
mov
roll
popa
sub
cs
pushf
adc
sbb
or
xchg
mov
into
push
xlat
xchg
outsb
inc
jge
inc
cwtl
cmp
lret
dec
movsb
mov
dec
icebp
and
pop
ljmp
add
lret
xor
fwait
lret
sub
pop
jmp
pop
mov
push
xchg
jne
addb
adc
sbb
add
and
inc
and
lods
stos
push
pushf
aam
pop
mov
cmc
mov
mov
adc
outsl
adc
fistpll
jp
arpl
mov
and
ffree
push
pop
pusha
sbb
fucom
repnz
test
fdivs
pop
stos
test
cmp
jg
mov
inc
xchg
xor
sahf
mov
mov
xor
pop
fistps
stos
sbb
xor
sub
je
lea
sub
sbb
movl
and
mov
cltd
movsb
push
pushf
mov
mov
mov
pop
cwtl
xlat
cwtl
cmp
mov
adc
sub
cmp
cltd
ror
jbe
adcb
xchg
fs
adc
dec
mov
jmp
ljmp
and
push
lcall
adc
scas
iret
into
xchg
je
cmpsl
loopne
mov
push
cmp
and
je
cmpsl
mov
test
mov
mov
popf
test
push
cwtl
sub
mov
jmp
mov
jge
cmp
cwtl
addb
xchg
roll
xor
lea
push
cmp
pusha
cltd
adc
push
xchg
std
xchg
mov
sbb
xor
cmp
cwtl
loopne
push
fldenv
mov
dec
scas
add
insb
fistpl
xor
popf
jg
out
adc
jo
mov
ret
popf
outsl
cmp
xlat
cmp
push
adc
xchg
mov
int3
adc
rorl
das
mov
and
in
mov
mov
mov
movsl
sbb
or
or
ret
in
dec
mov
mov
or
ja
dec
mov
call
inc
movsb
lret
xor
nop
fs
js
iret
inc
xchg
mov
daa
leave
inc
pop
add
pop
jns
dec
mov
push
jnp
push
mov
into
pop
std
stc
and
mov
negl
pop
push
cs
mov
imul
ret
xor
push
sti
mov
bound
imul
pop
std
sbb
mov
loop
xchg
mov
fildl
or
push
add
mov
jp
mov
or
jnp
in
aas
test
test
lea
test
mov
sbb
hlt
xchg
sub
xor
cwtl
rcr
rcrb
fistpl
repnz
mov
divb
into
adc
fbld
popf
cmp
adc
lahf
jg
sub
jne
push
xchg
xchg
clc
aam
xor
inc
pop
xchg
push
jb
xor
xchg
test
cld
push
mov
mov
das
cld
or
inc
sti
fwait
orb
inc
cmpsb
sbb
fiaddl
cmp
mov
cltd
mul
in
outsb
lahf
mov
adc
lahf
idivb
scas
add
adc
sbb
push
call
inc
xchg
out
shll
dec
dec
adc
mov
sahf
dec
enter
mov
pop
or
in
and
es
iret
push
dec
js
or
in
jge
xor
mov
out
pop
mov
int
insb
push
mov
loop
mov
outsl
lret
leave
push
popl
mov
aad
ljmp
cmc
clc
adc
pop
adc
adc
add
andb
or
jbe
lcall
js
adc
pop
and
pop
push
aad
or
adc
dec
iret
add
push
rol
push
dec
mov
arpl
pop
dec
fldl
in
mov
out
insb
cmp
sub
rolb
mul
xor
stc
and
inc
cmpsl
sub
out
inc
cmpsl
ret
rorb
sbb
xchg
ss
sar
mov
icebp
lahf
in
jne
inc
mov
sub
xchg
cwtd
nop
pop
enter
test
je
xor
out
jge
jns
pop
push
xlat
fcom
lcall
repnz
nop
jp
faddl
push
sub
shrl
mov
sub
xchg
sub
ficomps
jae
addr16
je
test
mov
in
sub
addr16
adcl
cmpb
mov
cs
psrlq
filds
sbb
enter
xor
inc
in
adc
mov
lds
sbb
imull
gs
rcrl
push
jp
iret
jmp
or
mov
sub
jl
popf
adcb
fs
add
adc
pop
mov
stos
sbb
xlat
pop
inc
fiadds
jg
or
lret
in
in
fimuls
pop
cmp
cmp
pop
sub
ljmp
idiv
xchg
push
rorb
mov
pop
jg
cmpsb
xchg
ret
test
lds
fnstcw
adc
dec
inc
dec
nop
iret
mov
das
enter
rdpmc
mov
mov
jle
xchg
mov
aaa
movsb
jns
mov
pop
stos
fs
sub
int
fbld
jno
dec
xchg
cmp
adc
sti
jnp
pushf
pop
sub
test
jge
pop
inc
jo
pop
test
out
push
rolb
add
repnz
fprem1
clc
test
and
pop
pop
es
xor
push
inc
mov
inc
dec
fcmove
push
imul
test
int
nop
ret
js
adc
pusha
mov
orl
aas
xorb
aas
mov
ljmp
enter
das
pop
scas
nop
jae
pop
mov
mov
rorl
js
mov
push
jge
cmp
mov
add
adc
xor
xchg
add
loopne
mov
mull
daa
mov
xchg
cmp
es
adc
fsubrs
pushf
scas
mov
adc
js
mov
inc
sub
out
pop
xlat
aad
sub
add
pop
mulb
out
xlat
jbe
xor
mov
add
outsb
jg
and
arpl
je
sbb
pop
sub
inc
jmp
pop
sbb
adc
pop
loope
dec
push
mov
and
inc
pop
lea
fsubs
insl
dec
shl
call
lea
fdivl
int
pop
push
inc
mov
dec
or
add
test
jno
test
rcrb
iret
sub
pop
sub
sbb
push
jae
stos
ret
imul
outsb
adc
dec
shlb
movsl
mov
sbb
rorb
xchg
xchg
popf
adc
dec
cwtl
or
mov
dec
in
sti
sub
pop
pop
sti
mov
daa
or
in
sub
or
jg
add
mov
les
ljmp
jmp
mov
xlat
or
addr16
fdivrl
xor
notb
jle
mov
das
test
imul
mov
dec
pop
outsb
in
cmp
push
sub
xchg
jb
clc
into
pusha
fistps
xor
ljmp
loopne
inc
mov
mov
sub
or
inc
std
in
hlt
daa
lds
bnd
jo
xorb
scas
push
mov
dec
add
pop
pop
push
mov
dec
dec
sub
pop
iret
lcall
shrl
aaa
ljmp
pop
ret
in
xor
dec
dec
mov
iret
fnstenv
jmp
andl
jbe
sbb
arpl
lock
pop
add
imul
stos
int3
xor
in
movsb
ret
dec
mov
addl
loop
sahf
out
or
jns
fndisi(8087
stos
jl
jmp
mov
sbb
jne
les
mov
jbe
mov
fs
cwtl
push
push
sbb
lock
pop
int3
jbe
sub
mov
adc
push
push
leave
and
enter
pop
sub
push
mov
pop
mov
aad
popa
adc
stos
int3
daa
cmc
ret
jp
pushf
int3
movsl
je
dec
mov
scas
out
jmp
jb
pusha
mov
xor
int3
rclb
mov
cs
inc
xor
sub
inc
adc
push
push
cmp
mov
mov
cmpsb
and
sarb
mov
cwtl
test
ret
mov
pop
inc
in
pop
sbb
hlt
adc
jbe
outsl
ret
jne
sub
inc
xor
fmull
in
lods
jp
cmp
mov
rclb
dec
add
fcom
fnstenv
sub
jp,pn
shl
add
shrb
add
inc
mov
fsts
fbstp
inc
and
aam
outsl
retw
jg
sahf
call
xorb
bound
adc
lods
sbb
mov
mov
cmpsb
out
lcall
push
insb
test
adc
inc
cmc
sbb
inc
out
lea
rorb
cltd
and
jb
sub
cwtl
cmpsl
stos
inc
mov
xchg
int3
xchg
test
xchg
das
mov
enter
sarb
pushf
xchg
in
lods
mov
sbb
shll
push
jbe
test
in
mov
jae
stos
pusha
jnp
adc
enter
xor
insb
sbb
inc
or
mov
rcll
jmp
or
imul
or
insb
in
ljmp
mov
dec
clc
lcall
jns
in
pusha
fsubrs
sbb
pop
mov
cltd
ja
imul
sbb
cmpsl
dec
pop
jae
cmpxchg
pusha
cmp
cltd
adcl
loop
aad
fwait
aaa
cld
push
mov
dec
inc
mov
sbb
xor
movsb
insl
lods
jle
jmp
loope
inc
cld
lea
jp
mov
mov
les
scas
inc
inc
das
mov
call
xchg
inc
popa
xchg
xchg
pop
adc
dec
add
push
jmp
mov
insb
insb
stc
aaa
mov
inc
jbe
insb
push
pop
xchg
or
adc
dec
daa
and
leave
adc
pop
xchg
lret
jo
xor
mov
mov
cli
push
and
add
lods
js
dec
xchg
insb
and
dec
push
mov
sti
adc
cmp
insb
jp
mov
xchg
ljmp
jbe
xor
jo
sti
es
mov
dec
sti
fbld
jb
sub
lock
push
mov
lods
mov
mov
xor
stos
mov
lahf
add
ljmp
insb
fisttpl
adc
rcr
daa
sub
mov
je
mov
dec
jo
jp
cmp
cwtl
jae
pop
mov
ljmp
xor
stos
stc
mov
push
lcall
ds
dec
jb
jo
shlb
aaa
in
fs
scas
adc
mov
out
mov
aas
adc
sbb
mov
xor
fisttpl
jmp
mov
repnz
sbb
pop
xchg
pop
arpl
jns
and
xor
rol
ja
pop
subb
cmp
mov
sub
xor
in
sar
pop
lcall
shlb
std
pop
cltd
pop
sub
fdivrl
repnz
insb
scas
adc
and
cs
xor
sub
fidivs
out
in
popa
cmp
shlb
push
sub
and
dec
inc
sub
lds
call
icebp
imul
jp
fldt
cmp
repz
and
popa
lea
arpl
jne
mov
dec
icebp
mov
es
push
dec
scas
dec
inc
push
addr16
or
and
icebp
rorl
or
add
cmp
push
pop
and
xchg
pop
aam
jb
push
call
fs
leave
or
add
adc
mov
mov
adc
mov
aad
jno
push
sbb
xchg
mov
ja
push
repnz
stc
dec
push
mov
mov
pop
mov
jbe
mov
xor
xor
push
aam
call
cmp
xchg
aaa
pushl
or
mov
add
xor
shlb
dec
mov
data16
and
gs
dec
movsb
enter
popf
flds
xchg
pop
xchg
add
movsb
iret
push
out
jnp
insl
cs
pusha
adc
sarb
shrb
add
fistl
leave
aam
inc
mov
shlb
sub
inc
pop
push
cld
lret
rclb
jo
add
pop
jg
cmpsl
cmpsl
xchg
xor
inc
lods
movsl
add
mov
adc
mov
add
bound
jnp
push
lea
or
pop
mov
testb
xchg
jge
cli
out
insl
xchg
xor
movb
in
ljmp
inc
cwtl
cwtl
ljmp
sbb
sbb
mov
inc
lret
mov
je
fnstcw
add
mov
scas
mov
nop
cmp
mov
jg
stos
adc
test
iret
xlat
xor
les
outsb
int
out
mov
popa
xor
imul
xchg
arpl
sti
pop
sub
dec
cmpb
popf
es
dec
sbb
loopne
ljmp
inc
notl
mov
rcl
or
push
push
jp
outsl
pop
cmpsl
xor
cmpsb
fs
lods
insb
in
cmpsl
push
add
push
adc
leave
loope
inc
popa
imul
or
clc
inc
movsb
inc
jle
inc
pop
movsl
pop
xor
fisubrs
and
push
dec
adc
and
in
sbb
dec
stos
in
jmp
mov
jne
sbb
iret
testl
cmp
repz
inc
jnp
xor
dec
scas
inc
bnd
fdivl
adc
rcrb
mov
xor
xchg
sbb
adc
js
xor
fsubr
mov
ss
test
and
adc
push
push
and
mov
lcall
sbb
shrb
xor
push
sbb
ja
push
jo
shl
mov
jecxz
orl
inc
in
nop
popf
dec
push
mov
dec
int
mov
push
add
imul
dec
xchg
xor
pop
push
rorb
loopne
fdivrl
mov
adc
sub
xchg
and
je
in
int3
xchg
les
push
test
ret
ret
lea
xlat
sub
xchg
flds
addb
dec
testb
pop
pop
fistps
sbb
push
jp
adc
adc
data16
psubsw
loop
xor
push
outsb
out
and
fimull
jne
imul
mov
mov
lcall
and
push
dec
inc
pop
dec
mov
pop
mov
pop
mov
and
dec
cmp
addr16
add
xchg
in
faddl
push
sbb
cmpsl
enter
cmp
in
test
hlt
push
enter
or
adc
and
jge
clc
mov
mov
sub
loope
mov
add
jl
push
decb
pushf
js
out
addr16
xchg
sarl
pop
out
pop
xor
mov
fwait
test
icebp
xchg
mov
mov
push
repnz
mov
pop
mov
pushf
cld
lds
adc
cmp
add
jle
shll
call
fwait
mov
scas
ljmp
jns
and
adc
lods
shrb
push
out
sti
pop
stc
scas
dec
xlat
jge
push
out
jb
dec
jl
popf
and
dec
push
dec
adc
inc
dec
xor
data16
sub
cmpsl
mov
inc
out
cmc
stos
shlb
add
jne
adc
jmp
ret
cmc
lock
ja
inc
cld
jge
xchg
loope
push
adc
add
inc
ljmp
arpl
aam
cltd
mov
xchg
aam
push
jae
cmp
mov
mov
inc
lahf
push
test
insb
sub
fimull
outsl
icebp
popf
push
nop
sbb
fwait
xlat
mov
and
xchg
rcrl
xlat
pop
enter
repnz
xor
fbstp
jecxz
aad
scas
cwtl
lods
mov
or
les
ret
jl
push
pop
pusha
cmpsb
lret
jns
mov
pop
lahf
lcall
add
test
in
jl
int3
pusha
popf
jle
lods
stc
mov
pop
inc
leave
cltd
fwait
cmp
arpl
insb
mov
add
pop
xor
arpl
push
add
or
xor
scas
mov
sub
decl
sub
and
pop
pusha
push
pop
add
push
cmp
dec
xchg
pop
loope
mov
push
fsubrs
in
std
ljmp
adc
hlt
xor
mov
xorl
dec
dec
or
push
test
mov
xlat
mov
add
jnp
sub
sbb
mov
aaa
mov
adc
mov
and
xchg
mov
iret
and
mov
sarb
mov
jp
dec
pop
xchg
cmpsl
lea
push
jae
jg
mov
xor
mov
loopne
loopne
fistps
xchg
add
out
push
adc
and
rcrb
lcall
scas
xchg
mov
adc
or
sub
and
daa
aad
jns
es
jo
sbb
lods
ja
dec
sahf
adc
dec
sbb
int
cmpsl
push
sub
shl
jne
sbbb
jne
jecxz
sbb
push
cli
fisttpll
push
or
inc
or
mov
mov
or
cmp
int3
dec
mov
xor
sub
test
inc
mov
jl
mov
or
lock
aaa
sbb
inc
or
jecxz
jne
sahf
and
sbb
pop
sbb
pop
mov
or
out
nop
dec
jbe
inc
sub
hlt
cmc
outsb
scas
in
mov
scas
out
xor
push
xor
ss
mov
mov
loopne
mov
lock
sub
mov
jae
ss
in
pushf
xor
jb
and
cmp
lods
rcrl
mov
idivl
pop
loope
sub
fistps
cmpsb
xchg
inc
negb
mov
jecxz
cld
addr16
cmpsl
sub
inc
mov
cmp
clc
ret
and
insl
shrl
xlat
popl
negl
dec
insl
and
add
xlat
xchg
or
dec
adc
ds
push
mov
xor
and
jne
cmp
test
mov
and
inc
xchg
add
in
int3
scas
xchg
or
ds
xchg
inc
addr16
and
push
in
je
divl
lds
pop
addb
cld
adc
pop
mov
sti
in
dec
and
lock
inc
dec
in
loope
dec
pop
fidivrs
aaa
add
mov
test
adc
inc
leave
roll
mov
and
lret
aaa
les
add
adc
add
inc
lahf
and
iret
in
lds
inc
jno
aaa
mov
lds
fsubp
sbb
pop
in
fistps
ficoml
xchg
in
bound
into
orl
loope
push
out
cmp
pushl
dec
pop
mov
inc
mov
fsubrp
fidivl
mov
mul
mov
adc
xchg
fwait
and
dec
data16
push
jbe
dec
pop
cmp
js
push
jo
xor
xchg
dec
pop
in
daa
rorl
jb
and
scas
movsb
mov
cs
mov
ss
outsb
xlat
xchg
inc
call
push
leave
jb
mov
stos
outsb
es
shlb
pop
sbb
call
data16
mov
cmp
jmp
mov
pop
test
pop
add
sbb
out
ret
out
cmp
ja
repnz
pop
xor
jmp
add
mov
jno
leave
bound
mov
pushf
pop
aaa
inc
inc
xchg
pop
enter
ret
inc
adc
outsl
sbb
inc
cmp
aam
mov
fcoml
ss
xchg
and
adc
jg
enter
in
jmp
add
dec
mov
cmp
das
repz
mov
push
iret
sbbl
dec
mov
fcoml
xor
xchg
icebp
mov
mov
xchg
cmp
mov
pop
pop
leave
lret
cmp
jl
fwait
xlat
mov
mov
xchg
insb
hlt
push
mov
insb
inc
dec
sbb
repnz
jnp
mov
mov
gs
fldl
sub
and
mov
cmp
cmp
arpl
mov
test
mov
call
loopne
and
stos
pop
nop
jl
ficoms
notl
repnz
imul
ret
notb
aas
and
dec
shrl
loopne
aaa
and
lea
imul
sub
jle
jl
js
lods
fbld
cli
lock
sbb
pop
mov
ja
pop
dec
imul
push
mov
pushf
scas
xchg
das
mull
push
pop
in
ja
push
les
mov
mov
add
xchg
lock
cmp
mov
mov
lods
pushf
filds
jo
jnp
xchg
shll
push
int
jno
cmp
xor
pusha
mov
cmp
ror
fnstcw
mov
aad
dec
pop
dec
aaa
rcll
xor
push
sub
add
pushf
popf
jo
inc
sbb
fs
sbb
leave
mov
mov
pop
pop
int3
push
lret
xor
call
mov
push
cmp
addr16
xchg
dec
jg
subl
scas
cmp
cwtl
sbb
jle
xchg
adc
and
test
push
pop
outsb
dec
cli
push
adc
fistps
mov
sub
dec
inc
rcll
mov
out
push
xor
out
jno
add
iret
cltd
decb
cmp
sub
adc
mov
out
flds
inc
imul
iret
fcompl
std
imul
das
cmc
adc
add
push
lret
xor
lea
or
inc
fdivrl
inc
out
repnz
lock
lea
push
add
or
xor
jle
rolb
cld
jg
mov
out
ljmp
cmp
negb
adc
inc
ja
pop
setnp
and
xor
jl
mov
inc
lock
scas
in
mov
leave
fdivs
add
dec
inc
mov
loopne
add
cmpsb
jne
add
mov
push
addb
or
mov
jl
in
imul
jmp
jb
xor
add
in
lods
jns
repz
xor
dec
sbbl
jae
pop
mov
or
mov
inc
idivl
or
cmp
fstpt
push
cltd
loopne
push
iret
add
das
ret
cld
arpl
cli
enter
das
jns
mov
add
mov
call
mov
push
jg
jne
inc
pushf
cmp
lock
decb
inc
cmc
xchg
andl
cmpsb
cwtl
pushf
ret
xchg
inc
add
subl
inc
test
mov
out
outsb
or
mov
ss
push
out
inc
js
lret
jae
sbb
mov
rolb
ss
out
popa
xor
add
xchg
cmpsl
rcrl
int
sahf
xlat
call
jg
int
push
stos
ja
sbb
sbb
dec
cmc
in
data16
fiaddl
les
sti
pop
in
inc
in
mov
fadds
push
adc
jae
in
fadds
xchg
pop
and
mov
xor
aaa
sub
mov
add
xchg
dec
inc
push
adc
clc
pop
jnp
aad
adc
outsb
out
movsl
daa
push
push
mov
fcoml
xchg
sbb
pop
jmp
sub
pop
jnp
fwait
into
xchg
inc
add
sbb
sub
cwtl
in
movsl
dec
nop
push
leave
add
scas
adc
icebp
adc
lock
in
xchg
aad
push
cltd
mov
fld
sub
lea
movsl
lahf
pushf
insb
ret
sub
addb
ret
xchg
sbb
shl
fs
testl
std
enter
cmp
add
cmp
fiaddl
cs
ret
out
mov
lods
mov
or
cmpsb
ret
push
mov
loope
inc
pop
sbb
mov
insl
inc
xor
sti
add
add
cmp
inc
jb
clc
sbb
loopne
fstps
xlat
out
mov
inc
cmpsb
and
orl
push
pop
mov
stos
dec
imul
mov
incl
js
dec
mov
mov
fldcw
faddl
mov
inc
jle
mov
add
jno
mov
outsb
mov
test
mov
movsb
fcompl
inc
out
lods
insb
dec
sbb
inc
lods
xchg
mov
lods
fimuls
ja
gs
mov
inc
mov
push
daa
mov
stc
out
adc
in
popa
mov
std
test
je
rclb
enter
js
prefetcht1
inc
aas
pop
mov
push
out
popl
inc
fcmovne
aad
pop
jae
xchg
scas
orb
add
out
out
int
dec
add
pop
sbb
sbb
jb
das
mov
test
lods
jp
and
sbb
inc
loopne
jns
pop
adc
xchg
sbbl
pop
call
lds
in
or
jno
push
lahf
xlat
fyl2x
xor
shlb
in
adc
cmpl
add
dec
je
cmp
inc
rclb
stc
adc
call
jge,pt
cmp
mov
cld
mov
cmp
and
xor
push
lcall
mov
mov
fwait
pop
jns
lods
sbb
mov
mov
jge
pop
or
pop
shr
jl
jmp
dec
aad
rcrb
mov
or
mov
in
insb
push
push
jne
jb
adc
mov
mov
pop
dec
sarl
pop
xchg
mov
or
cmpsl
ss
mov
xchg
push
cli
sbb
mov
bound
jns
lods
jo
adc
addl
dec
cli
xor
xchg
push
adc
gs
xchg
xor
rdmsr
xor
mov
xor
add
sbb
popf
mov
jle
xchg
jno
pop
xsetbv
inc
in
add
jbe
faddl
xlat
mov
push
sbb
repz
xchg
jae
icebp
mov
push
pop
push
test
mov
mov
testb
inc
mulb
shll
inc
push
fdivr
clc
rclb
nop
scas
inc
call
shlb
dec
jae
inc
sbb
jne
jne
and
jp
xor
cmp
das
popa
dec
mov
nop
rclb
loopne
xchg
pushf
sbb
jmp
outsl
mov
gs
and
push
adc
sbb
inc
mov
nop
push
cmp
sub
ret
cld
dec
stc
sti
movsl
lea
das
inc
inc
cs
faddl
xor
mov
cmp
enter
repnz
lahf
inc
jo
popf
cmp
dec
movsl
jmp
adc
fldl
iret
mov
aam
int3
dec
fstps
lret
popa
into
pop
insb
ss
dec
xchg
add
and
movsb
jb
ds
xor
jae
cs
or
push
aam
push
out
and
lods
pop
sub
xchg
popf
outsb
mov
cmp
movsl
stos
adc
inc
movsl
xchg
fs
adc
js
les
sbb
jne
fldenv
pop
xchg
mov
sbb
adc
hlt
mov
pop
jmp
lret
rcrl
add
jl
fidivs
fmulp
cwtl
and
pusha
mov
adc
idivb
fsubp
jp
sbb
sub
dec
jmp
inc
push
test
add
push
add
ds
in
xlat
push
icebp
xchg
iret
inc
and
jns
sbb
mov
jg
dec
mov
lret
cmc
inc
inc
inc
lds
xchg
sarb
mov
in
or
dec
out
aam
adc
jmp
daa
sbb
jecxz
and
sbb
je
pop
xlat
lock
loope
je
jbe
int3
faddl
inc
fdivl
sub
mov
test
dec
ja
mov
or
in
icebp
jle
lods
ds
repz
fs
cs
rcrb
icebp
jle
push
ret
and
pop
call
sarl
xor
mov
inc
repz
mov
mov
cmpsl
pop
iret
xchg
mov
sbb
fnstsw
mov
shl
repnz
fimull
inc
mov
inc
pop
mov
sub
clc
insb
daa
or
xchg
push
daa
add
pop
rolb
and
stos
sbb
fbld
and
xor
rcll
sub
test
cs
sti
lods
rorl
sbb
cmp
bound
sbb
pusha
imul
cmpsl
std
arpl
cs
xor
cmp
push
pop
adc
cli
test
hlt
movsb
adc
xchg
out
jle
insl
hlt
xlat
cmp
pop
fisttpll
popa
cmp
cli
ret
sarl
jge
mov
shlb
rcrl
and
push
fisttpll
adc
mov
insl
push
mov
lock
mov
cmp
cmp
aaa
shll
dec
aam
push
imul
or
ljmp
and
test
fimuls
shrb
enter
pop
fldenv
out
add
inc
jle
ja
cs
movsl
push
pushf
stos
sbb
insb
ret
and
test
subl
outsb
or
push
in
fdiv
ret
cmp
pop
sub
je
out
dec
xor
jmp
outsl
sbb
sub
stc
loopne
popf
int
xchg
adc
add
xor
sbb
lea
push
inc
dec
add
rol
dec
mov
loop
xchg
mov
and
push
inc
stc
cmp
push
mov
inc
lods
adc
dec
sub
push
aas
cmpsb
je
pop
mov
xor
or
int
adcb
mov
mov
popf
adc
leave
push
jecxz
cld
xor
cltd
inc
cmp
mov
into
cltd
fcmovnb
in
mov
popf
cmp
inc
cmp
int3
mov
mov
hlt
outsb
into
ja
push
cmc
mov
push
mov
push
xchg
mov
inc
or
fs
push
cmpsl
cmp
pop
add
add
scas
jb
push
fisubrl
imul
sub
inc
test
sub
imul
addb
cmpsb
xchg
push
pop
sub
outsb
pushf
jnp
mov
sub
lods
arpl
push
jns
lods
mov
jno
mov
sub
jnp
stc
and
sub
mov
jge
lret
xchg
cltd
pop
sub
popf
test
movsb
leave
cmp
fsts
xchg
xchg
in
movsl
adc
sub
jbe
das
dec
pop
pop
cld
lret
xchg
notl
and
mov
lret
or
sub
jo
pop
sbb
cs
xchg
xchg
xorl
ja
xor
test
sbb
adc
jbe
push
icebp
sub
cmc
sbb
stos
xchg
jl
pusha
fcomps
lret
mov
lret
jp
sbb
scas
sub
xor
mov
aad
leave
arpl
lock
mov
cwtl
and
mov
jp
fsubs
mov
mov
mov
cmp
fwait
sbb
jmp
dec
mov
pop
xor
cltd
pop
dec
add
jo
sarl
repz
fidivl
js
fimull
arpl
fnstcw
add
cmp
xor
mov
fidivrl
mov
movsb
xchg
jne
add
mov
or
sub
pop
jnp
add
mov
xchg
clc
orl
fs
mov
in
push
inc
nop
push
jo
lds
mov
xchg
movsl
out
sbbl
cmpsl
cmp
inc
sbb
addr16
or
ds
jb
and
sbb
aaa
ss
movsl
add
sbb
mov
jl
or
mov
push
das
es
xchg
movsb
sbb
pop
jbe
popa
fwait
icebp
mov
gs
rorb
jmp
inc
cmp
adcl
stos
jge
xchg
mov
jb
cmp
aam
push
out
lock
add
mov
rcrl
outsb
pop
sub
xchg
mov
adc
add
cmp
add
pop
mov
and
mov
pop
dec
jo
push
sbb
gs
leave
adc
stc
mov
xlat
mov
mov
xchg
mov
popf
and
lahf
and
cmp
lcall
movsb
in
mov
shrb
pop
pop
lods
xchg
xor
dec
sub
jae
or
push
out
sahf
jns
ficoms
int
out
cmp
fsubl
mov
daa
lods
aad
cmp
rolb
xor
test
adc
repz
sub
sub
movsl
sti
jmp
js
push
xchg
sbb
out
push
test
fbstp
xor
or
stos
adc
push
pop
std
dec
pop
push
mov
push
outsl
dec
dec
xor
or
add
push
push
cs
in
addr16
add
ds
xchg
imul
nop
movsb
in
pop
mov
in
cmp
mov
inc
shrd
mov
mov
std
shll
test
jbe
mov
mov
xchg
mov
add
in
push
das
jle
xor
aam
xchg
roll
sub
repz
jmp
out
push
hlt
cwtl
jne
jbe
xchg
je
jp
stos
dec
ss
in
movsb
inc
cs
mov
cmc
xorb
cwtl
xor
jae
adc
idiv
ret
pop
or
inc
sub
in
mov
xchg
shlb
xor
mov
loope
mov
xchg
jl
lahf
dec
cmp
jp
inc
sbb
inc
pop
sbb
outsl
inc
pop
sbb
fldcw
cld
fcoml
jbe
dec
xchg
loope
imul
xor
pop
stc
xor
cmpsb
adc
inc
cmp
sarb
es
jbe
dec
add
and
aaa
pop
xor
les
mov
mov
inc
or
test
je
dec
pop
jp
mov
jnp
fld
mov
pop
pop
add
sar
jle
fsubr
mov
xchg
sub
mov
repz
inc
sub
mov
das
or
adc
pop
sbb
popa
stos
lcall
sbb
call
lret
mov
xor
cmp
cli
lods
in
icebp
daa
sbb
je
ficomps
cmc
rorb
subl
dec
frstor
pop
pop
arpl
dec
push
xor
mov
mov
stos
dec
das
clc
dec
jl
and
hlt
lret
adc
xchg
jecxz
inc
push
add
das
ffree
imull
push
inc
imul
xchg
mov
push
cmp
sub
sbb
cs
in
sbb
inc
push
xor
mov
mov
adc
cmpsl
dec
push
mov
mov
push
outsl
lods
cld
insb
mov
out
stos
push
and
fs
mov
or
outsl
fcoml
push
in
cmp
dec
xor
cmp
push
xchg
jnp
imul
lea
lock
or
xor
jne
adcb
bound
nop
test
sbb
sbb
shrb
scas
stc
mov
lcall
pop
mov
iret
xor
mov
push
das
mov
adc
adcl
xchg
dec
repz
insb
cmp
dec
fidivl
or
xchg
xchg
mov
lret
fnstcw
xor
and
xchg
scas
das
fcmovnbe
sub
outsb
loopne
inc
orb
jno
cld
loope
mov
imulb
xchg
arpl
or
orl
js
dec
or
bound
mov
add
test
pop
cmc
in
fs
mov
jnp
fwait
lock
sbb
test
cs
inc
mov
mov
imul
arpl
or
and
loope
loopne
aad
mov
dec
pop
fsubr
sbb
jp,pt
cmp
mov
sbb
jmp
jnp
add
pop
fiaddl
dec
mov
ss
dec
into
es
inc
sub
mov
outsb
cmovl
mov
ss
loop
imul
pop
xchg
dec
jbe
mov
lods
stc
jo
and
lods
out
adc
ljmp
leave
lea
pop
fidivrs
jns
fsubp
incl
enter
or
dec
pop
lcall
pusha
push
sbb
dec
inc
sbb
lret
or
std
or
push
pop
lods
push
sahf
rcrl
or
mov
sub
in
pop
out
pop
outsl
xor
lock
jo
mov
dec
sub
xchg
mov
out
out
pop
xchg
push
xlat
push
sub
icebp
int3
lds
mov
test
mov
and
cmp
cmp
rorl
add
pushf
and
ret
cli
mov
and
mov
loopne
mov
in
inc
mov
aam
fwait
and
imul
sub
mov
sbb
jo
rclb
push
mov
mov
repz
xor
xorb
mov
rcrb
repz
inc
add
divl
pop
sbb
push
jp
xor
movsl
lock
test
rolb
push
stc
pop
push
cmp
jp
in
cmp
jmp
mov
push
cmp
xchg
insl
movsl
cmpb
arpl
mov
jg
xor
dec
sbbb
sub
mov
cmc
int
pop
push
scas
cmpb
sub
hlt
int
push
lock
add
popa
pop
pop
adc
shl
mov
cli
fwait
test
xchg
pop
sub
mov
pop
xor
mov
mov
or
stos
mov
dec
les
push
test
stc
int3
mov
or
xor
sub
sbb
cltd
xchg
xor
repnz
xchg
cmp
daa
dec
scas
mov
mov
mov
mov
test
cmp
in
cli
testb
bnd
ret
pop
nop
pmovmskb
lret
fwait
cwtl
hlt
lcall
push
loope
push
adc
mov
push
pop
cmpsl
mov
mov
inc
daa
lret
cmp
push
push
push
fs
sahf
cmpsl
sub
mov
filds
xchg
addr16
cwtl
fnstsw
sbb
or
imul
stc
push
clc
inc
xor
daa
lds
scas
mov
dec
iret
cld
push
cmpb
sti
js
dec
jl
insb
push
add
or
mov
pop
sahf
lods
sbb
leave
xchg
push
outsb
xchg
mov
jae
aam
shll
xor
hlt
in
loop
push
out
test
out
jo
dec
lock
mov
cli
sahf
pop
stos
lods
mov
pop
repnz
out
lret
test
mov
fmull
es
mov
enter
adc
xor
xchg
cs
je
popf
jb
int
nop
or
movsb
les
dec
push
adc
cmpsb
inc
dec
dec
inc
mov
inc
popf
les
xor
cs
and
orb
loopne
dec
push
push
jg
push
push
push
xchg
mov
xchg
dec
and
jl
push
mov
cld
inc
ret
or
pop
cmp
inc
sbb
xchg
shlb
call
jnp
stos
popa
js
fistpl
mov
jl
cmp
testb
popf
movsb
cmp
jecxz
subb
lods
lds
mov
icebp
jno
mov
sbb
inc
ja
outsl
mov
inc
cmp
mov
rcr
inc
mov
into
cmpsl
icebp
push
cmpb
mov
push
sub
das
aaa
inc
or
adc
jne
in
lahf
inc
jbe
mov
clc
stos
andb
enter
pop
jbe
out
movsb
push
pop
lcall
lcall
or
xor
pop
rclb
out
repz
imul
scas
sub
jns
mov
insb
lret
mov
ljmp
call
dec
in
and
push
les
jp
mov
inc
lret
das
out
or
adc
cs
pop
pop
adc
pop
pop
add
adc
push
sbb
dec
in
pop
adcl
fstl
cwtl
mov
or
test
ret
adc
xchg
push
pop
out
cld
cld
adc
adc
sbb
sub
sbb
mov
mov
es
cs
mov
cmp
sbb
fcmovnbe
xchg
loopne
dec
test
dec
add
xchg
cmc
xchg
mov
jns
mov
push
and
in
leave
jns
je
inc
jl
in
inc
frstor
aas
scas
mov
cmp
mov
iret
idivl
push
add
outsb
loopne
icebp
mov
dec
js
push
inc
ja
pushf
sbb
std
fcmovu
mov
dec
mov
in
xlat
pushf
out
dec
cmp
cmp
das
int3
leave
mov
andl
hlt
adc
daa
sbb
cmpsb
scas
mov
sbbb
fcompl
xchg
cmpsb
mov
sub
mov
je
lret
xor
xlat
add
test
xchg
jecxz
nop
sbb
cmp
dec
cltd
out
inc
out
popa
sub
je
xchg
mov
sub
rorb
xor
pop
roll
push
out
sub
push
add
cmp
or
xchg
popa
clc
cltd
ficomps
fwait
mov
mov
pop
xlat
aad
dec
adc
cmpsl
mov
mov
push
cmpsl
in
xor
pop
cmc
pop
or
das
and
addl
jmp
scas
pause
sti
popa
test
test
or
jne
ds
mov
sub
icebp
and
adc
sub
xchg
iret
and
sbb
addr16
in
xchg
fdiv
pop
mov
add
sbb
or
call
scas
sbb
dec
add
ucomiss
cmc
jnp
test
rcl
xor
addr16
xchg
xchg
ljmp
js
and
mov
in
pop
mov
sub
jmp
stos
pop
jbe
dec
lea
daa
ds
sub
or
js
and
fsubs
pop
inc
mov
loopne
adc
cmpsl
mov
inc
repz
adc
daa
adc
adc
scas
aaa
sbbl
test
test
js
push
fsubrl
mov
mov
pop
pop
xchg
pushf
sub
sbb
movsl
add
lea
leave
imul
mov
jecxz
ss
addr16
mov
mov
bound
outsb
testl
ror
das
jg
insb
lods
in
cld
lret
stc
mov
fmul
sti
or
jbe
and
shl
cmp
imul
lods
fisubl
and
loope
aaa
mov
lods
xor
and
xchg
push
mov
and
loopne
pop
cmpl
in
test
mov
cmp
mov
int
pop
and
inc
xorb
repnz
push
or
sub
out
pop
sbb
mov
mov
xchg
jbe
loopne,pn
lods
add
mov
loop
das
mov
cmp
out
push
xor
pop
mov
mov
in
lea
aas
mov
stc
sub
inc
lret
xchg
mov
mov
aas
add
bound
sub
or
adc
aas
xchg
mov
movsl
jp
dec
mov
push
stos
inc
sbb
inc
push
sub
ss
mov
jl
cmp
data16
sub
add
xor
test
cld
mov
jnp
mov
mov
fcomp
stos
adc
mov
xchg
or
inc
in
inc
mov
push
mov
push
shll
xor
pop
movl
aad
cmp
jae
add
adc
test
inc
dec
aam
dec
sbb
imul
jne
shlb
mov
or
jge
cmpsb
rol
fs
idivl
and
fucomi
gs
mov
cmpsb
mov
mov
lds
mov
fimull
pop
push
push
cld
ffree
mov
adc
pop
inc
xchg
jg
jl
pop
mov
in
iret
pop
lret
mov
xchg
stos
out
les
sahf
fmull
imul
outsb
stos
cmp
addr16
sbb
scas
dec
in
or
rorl
ja
xchg
arpl
dec
xchg
mov
lret
xchg
jecxz
add
jmp
and
xor
loop
sbb
pop
jae
jnp
nop
or
mov
jmp
dec
imul
fwait
sub
pushf
push
movsl
daa
movsl
or
outsb
inc
jns
sbb
mov
sub
sti
clc
outsl
fcmovne
out
mov
out
dec
and
push
or
leave
daa
and
adc
inc
cmpsb
cs
sbb
mov
cmp
adcl
xor
jle
mov
push
movsl
jmp
aam
lds
incb
jae
pop
push
pop
jns
stc
aas
dec
xor
imul
xchg
jg
xchg
loop
pop
shlb
mov
adc
or
pop
adcb
loopne
cmp
xor
mull
adc
cld
repz
lods
sbb
mov
push
pop
adc
into
mov
push
pop
ucomiss
andb
dec
jae
add
adc
stos
add
add
loop
cmp
add
bound
cmp
xor
repnz
dec
mov
inc
mov
clc
dec
inc
popa
clc
or
aad
icebp
fwait
or
cmc
stos
roll
jle
cld
movsb
in
or
mov
cltd
in
or
dec
sub
push
pop
movsb
add
xchg
leave
mov
arpl
inc
nop
or
mov
add
mov
aam
add
fstl
call
xor
in
pop
sub
push
cmp
jns
stc
sahf
imul
push
lcall
addr16
adc
je
dec
inc
loopne
inc
xchg
pop
lret
lahf
pop
cli
xchg
pop
std
arpl
xchg
sub
daa
sahf
lcall
ds
pop
outsb
pop
es
mov
sub
add
out
xor
lock
out
push
xor
jb
repz
mov
xor
xlat
sar
stos
push
jecxz
adc
aam
hlt
inc
adc
mov
ret
push
jnp
mov
fsubl
clc
inc
add
and
adc
sbb
mov
pop
push
popf
addl
enter
adc
mov
sub
jo
mov
inc
daa
insl
xor
aam
jecxz
dec
iret
sbb
enter
addb
mov
cmc
sbb
das
hlt
in
or
enter
push
jns
iret
scas
hlt
rorb
std
pushf
and
jno
jle
pop
fbld
or
jae
popf
mov
lock
ficoms
fistps
cld
mov
into
mov
lock
pop
cli
int3
sahf
lock
ljmp
dec
imul
cmp
ss
and
inc
adc
jno
adcb
cltd
lods
jecxz
cwtl
mov
pusha
mov
mov
sbb
mov
mov
aaa
int
xlat
rorl
out
loope
xchg
out
outsb
and
ds
or
dec
and
xor
jmp
add
out
pushl
repnz
lods
dec
xor
dec
mov
pop
inc
add
mov
in
xchg
adc
pop
xor
xor
mov
arpl
lcall
ds
gs
aam
and
mov
lret
out
inc
cmp
test
rcr
xchg
hlt
test
call
rcl
ror
inc
add
lods
cli
adc
adc
insl
scas
mov
in
filds
jb
pushf
xchg
push
adc
sbb
popa
aam
out
stos
pop
arpl
daa
adc
lods
pop
jle
sarl
pop
pop
adc
xlat
cmp
add
mov
adc
mov
dec
ja
in
push
and
dec
fwait
mov
iret
mov
and
cmpsb
cmp
out
ja
push
jnp
mov
inc
sahf
insl
enter
jp
gs
pop
pusha
aam
movl
mov
sbb
jg
lds
xchg
xchg
xchg
inc
js
aas
cmp
sbb
cli
push
jle
adc
mov
in
mov
test
arpl
arpl
mov
imul
inc
mov
adc
ja
or
mov
xor
push
fnsave
loope
popf
into
sbb
gs
jge
aas
adc
outsl
push
int3
sbb
cld
pop
dec
in
into
cs
fcomps
mov
scas
addr16
scas
jl
aam
fildll
mov
insl
divl
rcrb
das
mov
addr16
cmp
lods
mov
xor
xchg
inc
and
popf
mov
out
iret
and
test
aaa
iret
scas
ds
xor
in
test
jecxz
sub
aad
xchg
xor
mov
push
mov
jns
scas
mov
cwtl
sti
js
pop
les
aaa
jmp
aaa
cmp
cmp
clc
sarl
push
mov
pushf
mov
and
push
adc
xchg
cmp
test
sub
roll
andl
scas
int
hlt
fiaddl
push
loope
lods
cltd
xchg
adc
jge
sbb
push
lcall
push
sbb
mov
faddl
sarl
push
pusha
es
pop
test
cmp
not
jae
mov
jbe
mov
movsl
aaa
sarb
std
push
jp
pop
and
ss
xchg
inc
jmp
mov
xchg
call
dec
cmp
loopne
and
mov
out
mov
add
mov
and
xor
and
int
push
xchg
jg
push
sahf
jp
xor
bound
aam
dec
and
inc
jmp
jbe
movsb
adc
jo
mov
insb
sub
jb
cmp
cmp
add
out
xor
pop
es
mov
xorb
mov
call
dec
cltd
mov
dec
fdivrl
inc
cltd
lahf
adc
mov
lods
adc
sahf
sub
fsts
mov
xchg
addr16
and
ds
mov
test
add
mov
dec
and
hlt
hlt
mov
dec
pop
insb
sbb
enter
mov
orl
and
push
dec
jecxz
inc
inc
mov
cli
mov
inc
sbb
cli
xchg
dec
pusha
lcall
xor
push
mov
dec
mov
or
xchg
stc
test
mov
mov
es
jb
push
shlb
popa
std
shr
sub
ret
jno
addb
adc
shll
out
inc
jnp
andl
jo
mov
mov
icebp
inc
xor
jo
fcmovb
pop
xor
cmpsl
adc
jle
xchg
pop
jle
arpl
roll
sub
pop
cmp
popf
and
hlt
add
xchg
adc
push
insb
ficompl
daa
mov
rcrb
jle
or
rolb
xor
fistpl
mov
out
lock
xchg
mov
outsb
popa
push
iret
mov
aad
shrl
daa
cs
clc
adcl
jg
push
dec
xor
adc
dec
sbb
cmpsl
js
movsl
gs
pop
push
cmp
mov
inc
in
and
stos
stos
clc
call
adc
es
das
mov
jmp
jno
pushf
mov
movd
shl
out
mov
add
cmp
fisubrl
mov
or
call
sub
sahf
or
mov
hlt
xor
insb
shrb
dec
sti
aas
leave
lods
orl
xor
jecxz
xchg
pop
or
mov
js
mov
sbb
xchg
cmpsb
jnp
inc
adc
jnp
mov
out
xlat
cli
push
aas
addr16
dec
movsb
xor
insb
add
jbe
leave
jmp
out
dec
int3
out
cmpsb
xchg
mov
loop
js
mov
shlb
pop
test
xchg
mov
mov
ds
or
mov
lods
daa
or
shrl
fwait
je
stc
loope
push
loopne
nop
ljmp
push
cmp
and
shrb
pop
sbb
sbb
shlb
mov
pop
fsts
f2xm1
inc
test
dec
mov
shlb
aam
lret
jmp
mov
lret
hlt
out
stc
sub
xor
adc
inc
out
or
iret
movsb
inc
mov
subl
iret
out
jge
or
mov
js
mov
sbb
or
movsl
sahf
and
jle
jbe
push
mov
mov
icebp
enter
and
mov
mov
jle
and
imul
jecxz
incl
xor
or
int3
cwtl
fistpl
call
in
outsl
jbe
xchg
mov
outsl
lea
ljmp
push
or
dec
nop
arpl
mov
pusha
jecxz
iret
leave
stos
xor
add
mov
repnz
out
mov
push
adc
daa
ficomps
popa
in
clc
mov
add
mov
bound
dec
pop
sbb
or
cmp
test
xor
mov
push
xor
fidivs
xor
sbbb
fwait
xchg
mov
cwtl
in
dec
sarl
pop
jnp
mov
and
scas
test
ja
jg
sarb
ret
jae
push
decb
dec
or
pop
pusha
mov
imul
insl
outsb
imul
dec
add
int3
cmp
xchg
dec
and
leave
filds
ficomps
in
clc
cmp
fmuls
lahf
xor
mov
subb
cld
dec
add
scas
rorl
jno
mov
cli
push
sbb
lds
inc
leave
aas
enter
inc
cmp
nop
cmpb
mov
jle
adc
sub
push
and
or
mov
xorl
test
jmp
push
into
sub
cli
fnstcw
test
mov
mov
cmpsl
sbb
push
pusha
stos
cmp
mov
stc
stc
xchg
leave
adc
outsb
push
xchg
mov
outsl
out
xor
push
sub
mov
fldl
lds
clc
add
sete
add
bound
in
fs
adc
test
pusha
lock
into
ret
or
cmp
pop
ljmp
mov
xchg
stc
daa
inc
xchg
dec
sarl
push
jb
test
sbb
adc
cmpsl
dec
test
je
lret
inc
xchg
cmp
bound
cmc
pop
dec
and
ds
shrb
sub
inc
push
icebp
lds
and
cmpsl
loop
ss
in
mov
addr16
sub
repnz
adc
dec
mov
or
loope
test
outsl
out
inc
imul
dec
pop
add
mov
in
push
daa
ja
mov
adc
and
dec
pop
aam
jg
push
sbb
fsub
mov
add
fcomps
or
dec
ss
inc
push
cs
sub
outsb
int3
sbb
cmp
out
shll
adc
mov
insl
dec
mov
js
lock
inc
mov
xchg
imul
mov
rcr
mov
sub
lods
mov
adc
scas
fistps
jle
movb
dec
or
mov
adc
int
pop
sub
sub
cmp
pop
fsubr
sbb
push
pop
cmpsb
lret
xchg
push
roll
aam
ss
pop
mulb
sbb
stc
push
and
gs
mov
jne
mov
bswap
add
scas
stc
sbb
pushf
fistpll
or
iret
idiv
jbe
in
mov
mov
aam
and
push
insb
xchg
cmpsl
loope
mov
mov
pusha
das
lret
jbe
lea
insl
mov
adc
sub
xor
daa
push
lret
loop
mov
mov
jbe
or
pusha
cltd
popa
mov
call
jne
lea
dec
push
movsb
xor
cmpsl
or
loop
push
lret
js
jbe
fisttpl
insl
and
outsb
sbb
cmp
movsb
outsb
iret
fcomps
mov
sbb
pusha
inc
sbb
push
movsl
pop
rol
int3
pop
dec
mov
pinsrw
imul
roll
mov
cmp
sbb
add
dec
pop
inc
mov
push
mov
jp
nop
test
adc
push
xor
sbb
lods
movsb
data16
push
xor
dec
cmp
pop
pusha
push
out
mov
jl
cmp
inc
mov
mov
adc
ja
xchg
cwtl
js
cs
test
fwait
aad
leave
addr16
xchg
andl
rclb
adc
and
mov
sbb
es
int3
dec
sti
and
cli
ja
adc
enter
fwait
xchg
and
mov
mov
repnz
iret
mov
outsb
pusha
cmpsl
stc
jns
je
sti
jl
push
sub
jno
sub
jecxz
adc
inc
mov
bound
xchg
and
je
xor
test
ret
adc
sti
sahf
inc
push
aad
pop
insl
lea
mov
dec
push
and
in
push
or
outsl
add
push
cwtl
or
push
adc
imul
popf
xchg
sqrtps
push
fwait
pop
insl
mov
into
push
mov
test
sbb
lds
out
into
negb
bound
data16
call
mov
ret
addb
mov
pop
scas
jg
add
fstl
dec
pop
adc
cmpsl
push
or
sub
push
jge
ljmp
or
icebp
ss
aas
mov
sbb
rcrb
call
dec
jb
xchg
movsl
popa
repz
jnp
ret
das
xchg
sahf
jnp
imul
xor
pop
mov
jecxz
pop
out
push
mov
and
push
aam
rcrl
jo
cmpsb
jle
fcoml
idivb
sbb
add
inc
ss
dec
rclb
mov
inc
dec
test
test
jno
or
inc
outsl
and
mov
out
sbb
outsl
pop
ss
push
mov
add
out
sar
add
or
xor
rsqrtps
aam
cmp
rcll
mov
stos
inc
jecxz
adc
hlt
loopne
sub
mov
movsl
cld
fisttpl
aas
pop
cmp
jnp
sarl
mov
popa
jecxz
ja
mov
adc
mov
out
std
inc
mov
sub
or
push
popa
sub
mov
sub
scas
aad
push
ret
mov
adc
jns
int3
adc
cwtl
rclw
pop
mov
out
mov
movsb
mov
shr
xchg
pop
cmpb
rorb
fisubrl
mov
dec
push
push
out
popa
jecxz
sub
inc
out
ss
clc
popa
in
mov
xor
xor
jp
out
mov
xor
mov
int
xchg
cmp
and
lahf
cmp
out
mov
pop
xorb
lods
notb
in
movsb
pop
sbb
lahf
cld
jb
mov
mov
pop
jecxz
jne
fs
xchg
je
inc
push
jne
pop
nop
push
test
inc
add
pop
mov
gs
dec
push
push
daa
push
sub
stos
ss
cs
xlat
sub
stos
and
aam
loope
out
sbb
icebp
sbb
pop
lock
dec
int3
xchg
mov
inc
push
add
inc
sub
leave
sbb
dec
add
jge
aad
jo
pop
daa
jecxz
in
sbb
xchg
adc
iret
arpl
movlps
call
lcall
sbb
dec
mov
arpl
inc
das
inc
mov
in
jle
mov
and
push
jne
pop
mov
adc
push
fmuls
or
cli
or
cmp
mov
lahf
xchg
ret
jo
xchg
bound
adc
mov
and
lods
loopne
sar
add
push
or
cli
mov
mov
or
pop
adc
ja
push
push
cmc
out
push
test
or
pop
jne
sub
cmp
lret
mov
ss
mov
jae
lahf
push
dec
cli
hlt
enter
and
mov
popa
out
ss
pusha
jne
sub
mov
out
les
add
mov
push
jmp
xor
cmp
shl
sbb
jecxz
fwait
cli
or
test
mov
lds
arpl
lret
push
inc
mov
in
mov
fdivrl
add
out
lea
fcmovnb
stos
jbe
and
lods
rcrb
test
mov
std
and
xorb
or
mov
add
fs
sar
adc
pop
pop
sti
std
jno
pop
cmpsb
and
and
out
and
jg
jmp
push
loop
mov
mov
push
xor
in
pop
test
stos
add
jl
mov
dec
adc
dec
push
ss
push
arpl
jmp
sbb
add
sbb
loope
scas
insl
shll
out
rcrb
inc
cmp
das
xor
cmp
jp
lock
xor
push
dec
jge
jmp
sbb
dec
mov
into
pop
xchg
cmpsb
and
jne
sub
add
shrl
push
push
xor
mov
add
sarl
ss
xor
cld
mov
push
adc
xchg
sub
cmp
jl
leave
iret
out
sub
test
fildll
cmp
cmp
stc
or
movsb
addr16
repz
xlat
adcl
or
fldcw
shr
lea
push
mov
aad
shr
cld
and
add
sti
lcall
or
add
push
out
mov
ds
imul
add
pop
mov
jecxz
insl
ja,pt
lret
mov
mov
loope
jle
jne
jge
mov
or
lcall
decl
out
int
jmp
mov
test
fdivrp
or
in
inc
je
xor
mov
or
ja
out
pop
mov
jo
pop
fsub
cmp
negl
das
mov
rcrb
mov
fimull
inc
mov
xorb
adc
mov
xor
mov
lock
in
call
push
pushf
dec
mov
xchg
popf
stc
xlat
aas
dec
xchg
dec
mov
sbb
dec
in
push
insl
repz
lods
sub
test
lcall
sub
push
add
cmp
mov
xchg
pop
cmp
fistpll
xlat
jp
ret
sbb
pop
pusha
fsubl
clc
insb
pop
lea
sub
pushf
or
dec
loope
outsb
call
out
dec
jge
push
pop
ret
out
pop
jl
shl
sbb
sti
sbb
lods
enter
dec
sub
fdiv
in
push
icebp
addr16
sub
cld
cmp
outsl
cmp
mov
dec
jl
in
daa
sbb
lea
mov
mov
daa
fnstcw
icebp
in
arpl
cmp
jge
inc
and
mov
mov
jp
push
mov
or
in
addr16
xchg
mov
out
daa
sub
mov
push
cmp
mov
imul
cmpsl
fimull
fsubl
mov
mov
adc
fwait
out
ja
test
iret
rcrb
adc
cmpsb
pop
shl
arpl
cmpsl
inc
and
js
lods
mov
push
dec
sub
xor
xlat
or
adc
mov
sub
add
sbb
shll
sbb
xchg
sub
adc
fs
pop
cmpb
xchg
jp
mov
fadds
dec
repnz
lret
cmp
cld
test
push
push
add
sti
mov
incl
mov
sub
lret
sahf
or
jmp
sub
dec
jbe
call
or
pop
inc
lea
repnz
push
out
cs
loop
and
xor
push
scas
imul
and
addr16
sub
inc
inc
jno
add
or
sti
dec
hlt
push
dec
ret
push
mov
and
mov
adc
arpl
xchg
xorl
dec
sub
jecxz
lcall
or
popa
lds
xchg
mov
js
pop
or
mov
cmp
sbb
ja
scas
scas
sub
push
jno
dec
jecxz
xor
mov
fldz
addb
nop
push
das
test
gs
jae
cltd
jge
mov
push
xchg
inc
jp
xchg
cli
mov
lods
push
ss
xchg
imul
inc
sbb
mov
fucomip
dec
or
lret
leave
push
jmp
outsb
mov
lock
out
scas
pop
scas
jae,pt
mov
flds
mov
jnp
dec
test
sti
cmp
gs
andl
jp
xchg
in
fldcw
sahf
jle
outsb
insl
pop
out
mov
push
stos
sub
fs
cltd
ret
dec
shrl
addl
mov
test
shlb
xor
sub
rol
add
xorb
push
fs
add
pop
or
push
stos
inc
and
jp
lret
and
lahf
xchg
push
sub
jnp
aad
loope
cmp
add
push
dec
add
jo
dec
iret
mov
inc
cld
rorl
push
sub
jp
and
cli
jae
ljmp
sahf
push
shl
mov
fwait
pop
inc
test
lret
pop
cmpsb
cli
sub
rolb
cvttps2pi
inc
iret
mov
aas
push
daa
pop
cmp
aas
repnz
lret
scas
xor
mov
daa
shrb
mov
or
popf
adc
pop
test
dec
sub
pop
push
leave
xor
and
cli
mov
lods
fiadds
mov
mov
daa
mov
add
cli
dec
mov
inc
inc
rcrl
sbbl
in
cli
pop
or
imul
repz
int3
je
leave
ret
xor
loope
mov
jb
sbb
sbb
or
rolb
lcall
mov
insl
shrb
fsubrl
adc
insb
sbb
icebp
daa
mov
pop
ret
lea
aaa
ljmp
mov
inc
xor
aam
mov
cmpsl
call
or
sarl
lods
mov
out
sahf
mov
pop
loope
jbe
and
sbb
cmp
or
nop
mov
sbb
stos
ss
jne
std
mov
sub
push
pmulhuw
sbbl
lods
mov
jmp
xchg
push
push
fdivs
scas
xchg
xchg
pushf
jno
xchg
inc
mov
sbb
loopne
pop
inc
sbbb
lcall
inc
xor
adc
or
addr16
and
mov
push
mov
gs
out
xorb
dec
add
sahf
ljmp
mull
pop
or
jno
cld
rolb
mov
mov
in
int3
add
mov
inc
cld
xor
rcl
loope
adc
js
xchg
and
into
jns
mov
pop
xchg
icebp
jp
xchg
mov
fbld
push
shr
in
ja
cmpsb
pop
jmp
xchg
add
sub
decb
cmpsb
mov
xchg
ljmp
mov
popa
std
pop
roll
jae
mov
in
or
call
xchg
test
adc
ja
pop
sub
movsl
cmp
test
in
jne
leave
jns
push
lods
cld
fsubl
xor
lea
es
or
insb
mov
data16
cmc
stos
jmp
cltd
xchg
cld
mov
push
scas
das
outsb
xor
nop
into
bound
mov
icebp
iret
sub
and
add
lea
xchg
es
or
adc
inc
addl
and
loop
out
dec
ret
lds
pushl
push
adc
stos
add
push
int3
mov
xchg
or
mov
add
adc
pushf
mov
popa
popf
add
dec
pop
testl
popf
mov
or
push
cmp
mov
or
shrl
or
xorl
mov
and
sbb
into
mov
sbb
in
test
mov
int
fistps
shlb
jb
fdivs
loop
mov
push
cmp
mov
dec
mov
pop
adc
daa
dec
into
push
cs
inc
sub
jg
fwait
cmpsl
das
movsl
scas
pop
data16
dec
pop
cmp
mov
mov
sub
xor
imul
test
jecxz
mov
xchg
xchg
add
cld
iret
push
and
shrl
jg
sub
jnp
in
xchg
pop
lret
cltd
rclb
out
sbb
data16
add
stos
ja
repnz
mov
jp
mov
sbb
sbb
std
add
loopne
adc
push
adc
jmp
js
dec
adc
cmp
jle
sti
cwtl
adc
pusha
dec
xchg
iret
xor
shr
lret
cmp
into
cmp
ror
hlt
jge
out
mov
lds
push
sbb
dec
inc
adc
push
sbb
lods
mov
movhps
scas
pop
jg
aas
mov
xor
jno
call
mov
leave
or
sbb
add
rolb
dec
push
data16
stc
ds
stos
orl
fldcw
push
lret
and
loop
add
fimull
cwtl
mov
xchg
ret
daa
in
int
inc
push
mov
adc
jnp
adc
mov
ds
frndint
add
decb
stos
rol
shlb
add
das
sbb
xchg
hlt
jg
push
lds
loop
dec
xor
dec
cmp
rolb
shl
frstor
xlat
inc
repz
xchg
imul
bound
sti
sbb
and
das
sub
xchg
lods
push
subl
jg
ja
fistps
add
adc
mov
dec
lods
out
cwtl
xchg
and
pushf
inc
wbinvd
mov
hlt
out
or
push
into
xor
bound
mov
loop
sub
add
rolb
inc
push
out
sbb
data16
adcb
sub
cmp
shr
and
mov
std
inc
jns
adc
dec
pop
pop
sbb
cli
adc
and
inc
jns
imul
mov
int
faddp
dec
loope
ja
mov
leave
outsl
pop
add
in
fwait
ret
add
and
cmpsb
cmp
lods
inc
das
mov
test
jne
movsl
iret
xchg
push
fsub
repnz
jecxz
jne
dec
cmp
or
pop
pop
add
mov
imul
outsl
adc
or
ret
mov
push
sarl
cmovns
gs
adc
shll
ret
cmp
jecxz
cli
inc
fwait
movsb
push
cmp
addr16
pop
mov
rcl
cmp
xchg
dec
sub
ss
popf
jmp
inc
das
out
push
jge
nop
nop
and
ret
xchg
jb
xchg
lret
jg
out
mov
jle
lea
dec
das
sahf
daa
xlat
in
sti
adc
and
mov
pop
cmpsl
es
in
out
dec
jne
xchg
icebp
testl
pop
jecxz
mov
mov
cmc
inc
jb
inc
push
cli
adc
loop
inc
mov
cs
push
or
xchg
jne
mov
pop
or
inc
lds
cmpsl
pop
jae
push
cwtl
jge
inc
aas
aaa
jg
mov
in
push
push
xchg
xor
sarb
mov
sarl
sbb
lret
js
mov
mov
mov
gs
add
pop
test
mov
jnp
or
lahf
mov
in
sub
jns
mov
jne
adc
and
subl
inc
jle
sub
ret
inc
mov
int3
pop
and
rorl
testb
or
stos
jp
fwait
push
lea
bound
dec
or
pop
iret
jmp
mov
arpl
mov
in
dec
out
outsb
fs
push
into
rcl
cmp
out
flds
dec
out
out
dec
push
push
shll
imul
daa
sar
aaa
dec
dec
sub
push
xchg
xchg
pushf
mov
call
mul
jbe
xchg
fnstsw
mov
fs
add
cli
mov
mov
out
faddl
pop
test
cwtl
je
fdivr
out
aad
push
push
or
sbb
xor
mov
push
mov
subl
clc
stc
sti
mov
sarb
ds
mov
xlat
sbb
popa
adc
pop
popa
push
mov
and
cmpsb
and
pop
and
sahf
mov
repnz
sub
xor
and
mov
insl
inc
pop
insb
xchg
arpl
cmpsl
int
insb
int3
sbb
mov
bsr
cmpsl
lcall
int
sub
push
mov
inc
ljmp
shrl
aam
insl
dec
xorb
ret
jl
dec
and
push
mov
mov
movsb
pushf
lahf
rorl
mov
addr16
aam
fstpl
mov
jmp
cmp
hlt
out
pop
push
ret
jne
xor
sbb
out
js
into
or
pop
jb
test
sbb
stc
mov
cld
test
mov
fidivl
mov
xor
not
mov
push
iret
outsl
and
loope
iret
lcall
jmp
sbb
fcmovnb
js
ja
cs
adc
mov
xchg
lret
cltd
push
and
pop
push
or
xorl
dec
sub
pushf
lret
in
mov
sti
dec
jg
inc
cmp
sbb
dec
inc
dec
ss
xchg
sub
popf
xchg
jns
xlat
pop
jnp
lret
jne
mov
es
or
pop
divb
jae
push
pop
jns
iret
popf
loopne
test
dec
mov
sbb
iret
popf
xor
daa
leave
iret
and
test
push
jae
lcallw
into
int
xchg
jg
loopne
xor
movsb
hlt
xchg
push
rorl
mov
xor
subb
imul
aaa
int3
dec
roll
add
jg
or
arpl
repnz
push
shlb
sub
sub
into
jbe
fistpl
outsb
mov
call
add
add
mov
xchg
xchg
inc
pop
fmul
shl
dec
out
imul
daa
outsl
fldl2e
mov
jecxz
push
xor
and
lret
cmpsl
inc
pop
cmpl
std
and
mov
pushf
add
movsl
outsl
out
scas
mov
xchg
add
mov
jb
mov
loope
xor
out
mov
int3
pushf
dec
xchg
push
cmp
movsl
jbe
sbb
mov
mov
lods
and
push
popa
inc
dec
std
sub
xchg
mov
std
adc
jg
push
sub
adcl
and
fisttpll
das
dec
inc
pop
lods
cmp
pusha
dec
adc
add
add
or
pop
push
mov
orl
pop
cmpb
cltd
pop
inc
add
lods
into
adc
cmp
and
pop
fsubr
rorb
testb
push
test
in
inc
js
shl
adc
sub
add
push
xor
stos
cmp
movsb
sbb
sbbl
daa
ja
inc
sbb
sbb
mov
scas
in
out
cmp
xchg
mov
clc
sbb
cmp
sahf
lods
push
xor
subl
mov
dec
mov
and
into
inc
fs
adc
dec
adc
fwait
xchg
stc
ljmp
or
sti
add
bound
inc
and
pop
lea
push
push
or
andb
inc
imul
push
pop
jl
dec
mov
arpl
and
in
mov
sbb
adc
and
dec
inc
ds
sub
cld
mov
push
sahf
mov
xchg
mov
inc
and
xchg
dec
int3
mov
xor
dec
adc
inc
mov
mov
lcall
jmp
pop
mov
dec
ljmp
int3
xchg
adc
repz
jecxz
sbb
inc
les
and
xchg
je
pop
popl
int
jne
insb
push
rorl
cmp
aas
sbb
imul
rcr
cmp
push
xchg
inc
cltd
add
push
out
adc
imul
dec
fidivrs
jno
mov
push
mov
into
push
pusha
sbb
sub
stc
add
in
insb
adc
pop
sub
lret
cltd
cmp
arpl
fistps
daa
aas
rcl
jmp
lret
mov
mov
add
jbe
jge
pop
pop
test
sbb
cmp
inc
xchg
test
push
inc
ret
adc
jg
cmp
cli
orl
dec
in
loope
mov
dec
cld
push
scas
in
and
in
pop
mov
push
push
and
sbb
xor
cld
ret
jmp
or
test
mov
pop
xor
je
int3
stos
lret
out
mov
jge
adc
cmp
push
ret
lcall
fst
arpl
pop
xlat
cmp
aaa
mov
pop
mov
dec
fistl
push
adc
inc
repnz
mov
push
call
fadds
scas
vmread
mov
test
xor
jae
pop
adc
jbe
test
loopne
aaa
sub
sti
out
or
dec
mov
push
loope
insl
cmp
test
repnz
pop
or
ljmp
repnz
mov
bound
push
insl
cmp
sub
insl
push
lret
sbb
mov
and
shl
mov
xorl
inc
fcompl
xchg
icebp
out
addr16
int3
sbb
out
cmp
subl
dec
shrb
stc
lods
sub
xor
gs
sub
adc
xor
mov
aas
pushf
adc
mov
arpl
adc
xchg
ss
hlt
inc
or
lcall
pop
daa
and
push
test
cmc
clc
pusha
movsb
and
jno
jne
into
xchg
dec
adc
shlb
test
mov
aam
mov
push
sub
pushf
hlt
gs
cmp
cmp
sub
rep
jb
jne
adc
sub
xlat
xchg
arpl
mov
jns
pop
mov
lcall
xchg
in
aam
in
sahf
cmp
popf
xor
adc
testb
roll
xchg
in
adc
and
mov
pop
aaa
jbe
pusha
call
roll
or
jecxz
mov
mov
inc
adc
and
adc
repnz
or
jno
push
hlt
xchg
sub
inc
jo
dec
stos
push
insl
push
scas
pop
sbb
divb
push
aam
cmp
sbb
inc
sti
movsb
push
sub
mov
popa
or
or
mov
adcb
xor
shr
and
xchg
or
lock
push
jle
cmp
fiadds
adc
out
xchg
call
int3
inc
xchg
loop
adc
int3
fldt
or
mov
jns
aas
sbb
popf
fstpt
aaa
int3
lock
lea
loopne
loop
push
gs
stos
das
mov
mov
rorb
clc
or
inc
mov
xor
test
cltd
les
flds
dec
out
outsb
jecxz
inc
icebp
sub
xor
push
add
repnz
aaa
adc
push
repnz
ret
enter
and
pop
cmp
bound
inc
sbb
mov
cwtl
pop
fistpl
mov
and
imul
mov
push
sub
jle
sbb
jb
es
xor
jmp
out
xor
add
loopne
xchg
dec
dec
lock
inc
scas
hlt
cmp
mov
cli
insl
lods
and
xchg
mov
lcall
cmp
data16
jns
and
pop
ja
data16
and
dec
cmpsb
mov
inc
je
insb
sub
ret
in
out
mov
repz
push
fsubr
add
fsts
sub
fstl
cmp
jp
mov
add
ljmp
fbstp
push
pop
pop
xchg
cmp
adc
fcoms
push
pop
mov
mov
fwait
ret
cli
roll
lds
inc
rcrb
dec
jbe
lret
pop
insb
mov
push
jp
pop
dec
je
aaa
sbb
aad
scas
pushf
mov
outsb
xchg
leave
jecxz
cs
in
movsb
xchg
movsl
push
or
push
daa
fwait
cltd
sbb
scas
or
jp
shlb
xor
pop
inc
ret
mov
js
pop
or
loopne
into
inc
nop
pop
add
jle
inc
sub
mov
ljmp
sub
or
inc
cmp
cld
lock
fildll
push
mov
stos
cmpsl
inc
cmc
bound
test
dec
inc
lahf
dec
push
jmp
fnstcw
ret
in
sub
imul
cmp
or
mov
test
mov
or
daa
push
adc
sub
inc
pop
dec
mov
fstps
lahf
push
mov
stc
imul
push
sub
pop
out
cmp
hlt
xor
or
mov
cmp
icebp
or
dec
cld
adc
roll
pushf
push
movsl
adc
stos
fmul
pop
xchg
in
sub
mov
lods
into
xor
push
fcmovbe
push
jnp
les
pop
sub
dec
inc
xchg
mov
fistpl
pop
mov
cld
jno
xor
pop
ljmp
pop
enter
jl
ds
imulb
das
xchg
xchg
xor
cmp
stos
xor
inc
cmpsl
dec
add
inc
sbb
subb
push
movsl
out
test
pop
or
inc
pop
xchg
mov
repz
fldenv
mov
mov
lcall
cmp
popa
div
mov
iret
cmp
jne
add
xchg
mov
mov
jecxz
imul
mov
in
xor
iret
cmpsb
testb
cld
jle
xor
inc
roll
pop
aas
movsl
and
jl
mov
inc
popf
inc
dec
mov
push
pop
cmc
lods
fldenv
pusha
jge
push
sub
sub
int
dec
mov
push
gs
pop
jno
ljmp
sahf
xlat
ret
daa
int3
jo
push
lahf
sub
mov
add
cmp
push
lods
repz
sub
pop
push
xor
out
fdiv
fistps
stos
rcrl
push
negl
pop
inc
movsb
and
cmp
lcall
int
mov
pop
cld
mov
pop
enter
pop
aaa
or
movsl
and
cmp
enter
dec
adc
add
mov
mov
leave
xor
fnstsw
mov
je
pop
mov
sub
ret
loop
or
or
sbb
aam
or
lock
movsl
shl
mov
cmp
xchg
movsb
addr16
inc
jp
cmp
in
enter
mov
dec
ja
cmp
inc
aaa
in
in
in
xorl
jmp
sub
sub
adc
xchg
cmp
push
rcrl
mov
mov
ror
pop
push
imul
jnp
inc
xor
jg
outsl
out
iret
cld
and
or
int
xor
aam
sub
arpl
jecxz
sub
xor
sbb
xlat
stos
fwait
jg
fsubrs
out
stos
lret
mov
mov
fsubrs
add
mov
loopne
ja
loop
insb
push
andb
jne
xchg
mov
stos
jne
cli
cmp
sahf
in
xlat
fdivrl
push
pop
push
sub
sti
mov
pop
sbb
imul
sbb
imul
das
outsb
pop
cmp
sub
loope
mov
sbb
dec
mov
pop
adc
push
data16
stos
inc
jns
push
add
out
jnp
sub
mov
mov
mov
and
cs
mov
ja
imul
adcl
lret
xchg
je
int3
jbe
pop
cmp
xchg
loope
mov
push
leave
mov
loop
cmpsl
insl
sarl
and
clc
stos
add
xorb
inc
dec
inc
dec
inc
cmp
xor
cmpsl
mov
mov
mov
in
movsl
in
inc
sub
jnp
cmp
or
aam
test
ror
fdivl
cmp
stc
call
sub
decb
adc
and
fmuls
xor
add
nop
cmpsl
in
or
push
mov
pop
shll
mov
xchg
mov
ds
movl
jnp
imul
lods
push
iret
sub
add
scas
lahf
cmp
sub
mov
jo
dec
dec
pop
push
inc
sbb
outsl
xchg
int
mov
xchg
bound
fstps
jle
sbb
add
shll
pop
mov
daa
jne
add
ret
push
dec
hlt
std
sbb
xchg
pop
rep
clc
in
or
data16
jb
sahf
or
sbb
nop
js
jge
roll
dec
mov
xor
cs
fidivs
icebp
shll
inc
mov
cld
and
fucom
aam
cmpsb
ss
enter
aas
push
mov
sbb
jo
mov
jl
sub
or
cld
mov
push
jne
pop
mov
fcompl
sub
push
arpl
push
sub
movl
addb
mov
pusha
xor
in
sub
jp
adc
jecxz
cmpsl
push
inc
clc
fs
mov
sbb
clc
inc
icebp
pushf
movsb
mov
adc
adc
dec
adc
xchg
gs
pop
xor
push
sbb
cmp
inc
mov
test
xchg
mov
push
inc
push
out
imul
mov
lcall
movsl
push
mov
mov
mov
sub
xor
dec
mov
jbe
movb
and
lock
xor
sbb
sahf
ljmpw
cld
push
daa
push
sahf
sahf
xchg
popf
out
xchg
pusha
adc
das
dec
das
xor
stos
jno
test
ljmp
sub
and
mov
and
jne
jecxz
cmpsb
pushf
mov
jns
push
int3
fstl
xor
mov
mov
mov
fcmovu
lods
or
in
cmpsb
gs
pop
pusha
fstpl
leave
sub
inc
push
nop
inc
icebp
mov
popl
mov
je
out
and
ds
dec
sub
ret
pop
fcompl
mov
mov
mov
mov
shll
xlat
lret
call
mov
mov
rclb
cmp
inc
pop
jl
dec
lret
cltd
jnp
mov
leave
jae
fxch
cmpsb
mov
sub
scas
or
pushf
loop
push
out
push
or
or
enter
stos
jge
call
iret
cmp
shll
mov
mov
adc
sub
jp
fidivs
cmp
push
ss
mov
mov
jno
ret
mov
or
imul
clc
xchg
icebp
mov
imul
rcrl
movsl
or
jbe
in
xor
jmp
push
mov
stos
mov
insb
mov
jnp
ret
das
dec
xchg
push
push
and
out
xor
sbb
sub
sub
fs
in
shr
das
push
mov
lock
pop
cwtd
jnp
fsubp
xchg
dec
out
push
mov
fiaddl
popa
mov
fdivl
mov
imul
fistpl
arpl
xor
add
push
mov
std
push
je
mov
shlb
and
sbb
push
cmpsl
ja
push
jmp
iret
shrl
push
mov
lret
mov
repnz
push
sbb
inc
cwtl
adc
aam
pop
mov
jmp
adc
xchg
inc
add
push
inc
inc
dec
sbb
incl
or
cld
or
leave
lock
test
xchg
pop
sbb
or
leave
jae
add
sbb
xchg
cmpl
adc
mov
or
sti
lds
out
test
mov
push
inc
jg
stc
lahf
add
sbb
test
js
pop
popf
push
nop
les
dec
mov
cmp
xlat
ds
daa
nop
adc
adc
outsb
jns
js
and
xor
push
pop
dec
jns
ss
xor
pop
cltd
dec
leave
shll
loop
bound
in
mov
and
jge
push
add
mov
xor
outsb
sbb
inc
mov
jmp
mov
sbb
call
mov
into
cmc
mov
and
jb
call
enter
mov
dec
jo
xchg
xor
daa
stos
mov
lcall
pop
addr16
pop
loop
fucomi
jle
data16
jb
push
stc
sub
mov
ds
jnp
aad
push
cmp
fisubrs
mov
out
repnz
inc
sarl
xchg
fistpl
and
sub
jecxz
dec
pop
lods
pop
rclb
dec
ljmp
cmp
xchg
push
mov
aad
xor
adc
rcrb
pusha
ficomps
or
bound
insl
cmp
jg
adc
jnp
gs
jle
pop
mov
pusha
mov
jl
and
sub
mov
push
or
mov
and
les
xchg
jo
rcll
inc
mov
jmp
xchg
dec
xchg
jb
sti
jl
not
les
jecxz
enter
push
iret
inc
sub
mov
jbe
add
mov
pusha
sarl
imul
inc
and
dec
push
mov
iret
stos
pop
dec
sbb
leave
pop
shl
mov
jge
mov
divl
dec
rcll
mov
scas
or
mov
xchg
mov
int
mov
xorb
mov
pop
loope
int3
cmp
xorl
popa
xor
cmp
mov
dec
es
pop
loopne
sbb
mov
xor
xchg
mov
aaa
mov
xor
aas
call
shll
and
aam
sub
xchg
out
jg
sub
pop
ret
xor
push
xchg
repz
fbstp
mov
jno
ret
fisttpll
mov
lock
out
mov
cmpsb
pushf
call
adc
jl
jle
mov
mov
shll
jle
out
add
jmp
adc
enter
idiv
shll
insl
mov
es
sub
and
das
add
sbb
addr16
iret
and
and
pop
aaa
xchg
inc
push
bnd
rcll
mov
inc
scas
scas
loop
lret
mov
sub
pop
xchg
xchg
xchg
xor
outsl
inc
xchg
sbb
push
add
test
jns
xor
enter
sahf
out
jmp
popf
adc
mov
jge
xor
mov
fcomps
into
int3
dec
cltd
cmp
addb
push
insl
andb
cmp
dec
push
mov
push
jg
cmpsl
jbe
jne
xchg
dec
test
cli
out
cmp
ds
les
inc
mov
test
adc
out
pop
xchg
xchg
xchg
idivl
sub
inc
xchg
test
movsl
movsb
popa
inc
mov
mov
jo
aam
xchg
xchg
inc
sbb
or
xchg
lods
or
repnz
push
mov
dec
movsb
in
cmp
mov
or
inc
arpl
push
mov
lds
fldenv
jge
out
std
test
inc
data16
sbb
jns
sti
insl
jl,pt
test
lcall
cld
jns
mov
lea
pop
push
jno
out
cmp
loop
mov
outsb
rcrl
and
adc
icebp
shrl
mov
movsb
ret
push
je
mov
aam
insl
in
sub
and
stc
mov
incl
push
dec
push
mov
leave
push
aam
push
imul
mov
test
bound
aas
out
cmc
cs
xchg
push
mov
mov
sbb
pushf
jb
dec
pusha
repz
fs
jge
cs
lret
cltd
sbb
in
ja
push
mov
add
inc
loop
je
out
jne
testl
push
cwtl
cld
js
lods
leave
mov
rorb
inc
ds
and
push
jb
aas
test
clc
jmp
mov
mov
or
loopne
jnp
mov
gs
subb
pop
roll
jge
xor
inc
cmp
mov
test
jno
rcr
hlt
sti
ret
xlat
push
add
sub
outsl
mov
mov
rorb
pop
push
cmp
pop
cmpsb
iret
mov
lock
scas
jo
fsts
mov
mov
dec
out
add
in
push
stc
movsl
mov
mov
mov
mov
pop
jno
insl
jae
xchg
dec
push
or
lret
clc
cmpsb
and
xchg
xor
push
mov
xchg
lahf
push
lods
dec
xor
pop
sbb
js
adc
call
arpl
or
dec
fnstcw
jmp
fstps
jnp
mov
std
pop
or
das
orl
in
lds
mull
lea
fwait
pop
aaa
std
and
pusha
lods
pop
push
cmpsb
mov
call
cmp
jo
mov
adc
shll
inc
xor
mov
cmp
imul
aam
jb
mov
rcrb
sub
incb
xchg
or
pop
lret
es
mov
pop
mov
sbb
cmp
lret
out
mov
adc
pop
pusha
ret
inc
sub
imul
mov
cmc
jle
mov
outsb
cwtl
mov
sbb
jne
sub
jo
sbb
mov
sbb
imul
lods
movsl
pop
sub
jno
add
out
sbb
repnz
or
imul
addr16
sahf
xor
idivb
and
pop
fsubr
sbb
hlt
inc
je
in
inc
out
ds
push
insb
add
sbb
outsb
and
fcmovbe
rcr
lock
lods
jne
jne
fists
or
dec
xchg
lahf
xchg
movsl
push
inc
jb
mov
mov
mov
addl
fs
and
test
adcl
add
daa
loopne
mov
mov
push
dec
or
push
lock
dec
fdiv
and
arpl
into
mov
mov
cs
inc
sub
and
inc
push
js
mov
inc
stos
arpl
shll
lahf
notl
jae
movsl
push
aam
mov
movsl
xchg
mov
xchg
add
lret
and
sbb
testl
xchg
pop
sbb
xchg
cmp
shll
into
jg
fsubrs
jbe
popa
sbb
loop
repnz
enter
insl
push
cmp
sbb
popf
push
mov
into
ljmp
xchg
cmpsl
std
xchg
cli
jle
or
mov
mov
jo
and
sub
ret
outsl
xor
jnp
outsb
dec
rcll
and
mov
sbb
push
lock
dec
dec
sti
out
enter
add
jns
sub
es
lds
in
cmp
test
dec
xor
fstps
daa
rorl
lahf
push
add
bound
push
lahf
mov
sub
jae
ja
inc
jae
jge
push
xlat
test
sahf
or
pop
lock
std
and
jne
sti
mov
or
repz
icebp
icebp
in
fildl
sub
mov
lcall
or
sub
iret
cmp
fs
pand
les
std
adc
sbb
jo
and
cmpsb
xchg
jns
jnp
test
test
sbb
aam
jecxz
push
mov
mov
mov
outsl
xor
xchg
cs
aaa
or
xchg
sub
dec
sahf
pop
mov
jo
mov
push
call
gs
in
loope
mov
xor
or
add
xchg
movsb
xchg
inc
cwtl
xchg
pop
bound
out
mov
sahf
fcomps
out
pop
push
jb
and
in
movsb
inc
bound
pop
nop
sub
xor
jno,pt
test
inc
cs
adc
lahf
fyl2x
jg
das
test
mov
cwtl
jp
jno
sbb
xchg
sbb
mov
cmp
jb
jae
ss
dec
les
cmc
dec
mov
in
fisttpl
mov
adc
das
inc
mov
mov
je
lods
mov
jbe
outsl
insb
push
fdivl
test
mov
fwait
lcall
in
pop
ss
fistl
cld
dec
push
out
or
push
out
or
push
das
bound
or
jb
adc
lret
jne
inc
aam
dec
jecxz
push
xor
jecxz
stos
imul
fidivl
arpl
dec
jmp
cmp
pushf
scas
push
pop
idivl
or
pop
jno
ljmp
addl
xchg
sarl
sub
and
xchg
jp
xchg
and
cmp
sub
shlb
out
popa
pop
jo
imul
jg
pop
sbb
mov
ret
add
inc
negb
xchg
insl
jg
dec
xchg
inc
xchg
stos
push
scas
aam
inc
fwait
shlb
mov
jmp
inc
inc
andl
mov
fimull
add
adc
mov
mov
push
loopne
retw
fsubl
add
sub
adc
push
xor
cmpsl
punpckhbw
int
subl
pusha
push
sti
loopne
icebp
inc
mov
push
rclb
sbb
addb
mov
sub
xchg
mov
inc
dec
fsts
stc
inc
xor
xchg
sub
pop
es
cltd
mov
mov
mov
mov
push
iret
push
push
cmp
dec
scas
inc
rcrb
mov
push
inc
out
lcall
or
in
insl
pop
in
xor
jbe
rolb
fnsave
add
test
mov
nop
inc
dec
mov
and
mulb
ret
or
pop
orb
xchg
cmp
ret
push
ss
mov
iret
cmp
jl
call
lods
or
imul
inc
addb
dec
shr
xlat
std
push
movsl
outsl
nop
cmpsl
sub
inc
lds
frstor
clc
cwtl
out
shll
jb
addl
lret
push
repz
popa
mov
orb
dec
add
push
pop
or
inc
jp
test
out
iret
out
mov
orl
rorl
xor
ljmp
mov
popf
out
sub
xor
aas
dec
fwait
jp
sub
stos
ficoml
sub
mov
dec
push
inc
insb
rcrl
sbb
je
punpckhwd
xor
push
cmp
add
cmp
sarl
mov
sub
pop
fwait
leave
mov
in
outsb
xor
mov
test
dec
popl
push
bound
rol
out
xor
sbb
cli
sub
cltd
pop
and
fwait
pop
pop
push
movl
stos
or
sbb
cwtl
add
mov
iret
lock
and
xor
fnstsw
mov
sbb
rcl
dec
das
add
jge
inc
jecxz
int
mov
sub
mov
or
dec
add
popf
out
aam
sbb
insl
mov
mov
and
fistpll
pop
cmpsl
pop
xor
in
sbb
lock
out
fwait
icebp
pop
lods
push
mov
fdivrs
add
push
lcall
andb
pop
mov
fucomp
dec
loop
mull
sub
mov
popf
rclb
das
sbb
lret
iret
movsb
out
loopne
push
push
ss
aaa
pop
arpl
jb
xchg
sub
mov
mov
dec
test
ret
xchg
mov
push
outsl
fwait
xchg
add
das
inc
int
scas
fmuls
rcrl
push
data16
sub
xor
pop
int
scas
ficomps
jle
outsb
jne
jbe
xchg
inc
repz
push
lods
xchg
adc
cmc
arpl
jl
jns
pop
repnz
mov
loop
mov
lock
orl
mov
iret
and
pop
push
and
sub
cmp
sub
adc
loopne
pop
mov
xor
outsl
or
arpl
aaa
or
mov
pop
mov
lcall
lcall
sbb
and
mov
and
add
test
scas
sub
insl
cli
mov
and
ss
adc
loope
jg
je
push
adc
enter
leave
cmp
sti
pop
clc
cmp
adc
test
sub
fisttps
cmc
movsl
cli
jnp
or
js
jae
push
cmp
xchg
loop
and
mov
add
sbb
nop
adc
xor
mov
stos
lret
and
jne
lods
andl
cltd
jo
les
or
test
sbb
insl
iret
jne
xchg
push
xlat
jo
adc
icebp
out
popf
jb
loope
xor
scas
cltd
ror
cmp
loope
unpcklps
inc
aas
sbb
jnp
scas
insl
mov
inc
aad
jl
inc
and
insl
adc
sbb
in
enter
jmp
push
rorl
inc
inc
xchg
inc
out
stos
loope
test
sub
decl
mov
push
xchg
dec
gs
es
lods
iret
hlt
pop
push
enter
insl
jne
call
ret
out
aam
sarb
or
daa
push
inc
xor
add
call
imul
mov
insb
jge
jbe
movsb
xlat
mov
outsb
shrw
xor
or
sti
mov
inc
movsl
pop
cmpsl
inc
out
sub
cmp
fnop
jnp
mov
dec
xchg
cmpsl
sub
dec
rcrl
negl
sahf
pop
scas
sbb
mov
enter
cmc
addr16
mov
add
sahf
insb
nop
pop
enter
lods
dec
push
clc
call
jmp
cld
lcall
or
inc
mov
pcmpgtb
sub
push
jg
cmc
xchg
sti
gs
aad
and
jno
adcb
cmp
shlb
imull
push
fs
out
or
xchg
stos
dec
push
and
mov
outsb
loope
mov
jle
fisubrl
daa
loope
shlb
cmp
pop
mov
stos
mov
out
cmp
jge
lret
mov
add
sahf
leave
pop
out
mov
hlt
sub
push
lock
aam
mov
and
or
xor
xchg
shll
popa
sti
scas
pop
xchg
cmp
xchg
lods
test
push
pop
cmp
ja
hlt
sub
and
sub
rorl
sbb
dec
push
out
mov
or
xlat
out
xlat
xchg
sub
pop
mov
in
mov
dec
push
inc
and
jo
popa
dec
mov
cmc
sbb
aad
fs
inc
adc
outsl
jb
mov
scas
pop
xchg
push
jmp
sbb
mov
cld
and
mov
mov
mov
ds
frstor
mov
rol
mov
mov
xor
scas
dec
int
cmp
push
outsb
mov
rclb
scas
fdivrl
test
lcall
and
push
inc
push
leave
movsl
xlat
data16
xchg
push
cli
dec
lods
cli
cmp
inc
mov
push
jb
push
xchg
dec
or
rorb
inc
ret
movsb
pusha
pop
lret
mov
mov
cwtl
fcom
popf
push
stos
sbb
ljmp
dec
or
xlat
mov
xchg
pop
pop
std
aaa
loope
mov
push
dec
scas
fcomps
sti
fists
js
or
test
mov
pop
xchg
in
mov
mov
dec
add
dec
insl
mov
ret
inc
adc
out
mov
sti
pop
sarb
pop
dec
mov
mov
push
gs
xchg
test
jp
or
sub
mov
movsb
outsl
mov
mov
xor
push
je
cli
cmc
xlat
push
fadds
int3
std
sbb
or
dec
cli
sbbl
stos
cs
pop
bnd
repnz
cwtl
dec
stc
push
jnp
and
loop
loop
pop
push
xchg
pushf
sub
or
cmc
inc
push
jmp
mov
inc
inc
sbb
push
inc
sub
push
add
lret
jp
push
push
adc
pop
or
jnp
and
mov
idivb
mov
xor
sbbl
fdivrl
mov
scas
pop
push
enter
stos
faddl
int3
sti
pop
sub
pop
cmp
mov
mov
jno
mov
dec
push
sbb
cltd
orb
test
stos
jns
inc
adc
lods
fistl
sti
sarb
enter
mov
pop
cmp
push
loopne
mov
fwait
loope
scas
loop
aas
and
sbb
and
xor
js
push
and
loope
jno
add
daa
ret
xor
imul
in
lods
outsb
in
lret
repnz
and
add
movsl
pop
add
rclb
fdiv
scas
push
sahf
sbb
mov
xor
lcall
in
mov
test
imul
cmp
inc
add
ljmp
icebp
cmpsl
ja
add
lret
adc
mov
mov
inc
add
jae
repz
shll
popf
insl
cmp
mov
dec
sbb
xorb
in
insl
inc
and
sarb
divb
mov
mov
lea
and
add
es
mov
xchg
push
mov
sahf
ds
in
pop
cltd
movsb
cmc
pop
loop
int3
in
cmc
icebp
adc
adc
cmp
fwait
mov
ficoms
test
adc
cmp
pop
clc
mov
xchg
adc
cld
stc
rcrb
cli
lret
xchg
xchg
cmpsl
test
sbb
cmp
jp
push
mov
fwait
icebp
sbb
popa
call
out
pop
xchg
add
push
jb
add
jge
sub
insb
pop
xor
xchg
jmp
dec
frstor
mov
or
jmp
aam
mov
mov
inc
int
xor
clc
pop
add
lds
cwtl
pop
or
rolb
cmpsb
mov
movsb
cmp
adc
pop
cmovnp
scas
icebp
dec
jo
imul
pop
ljmp
call
mov
fnsave
mov
xor
popf
fbstp
add
xor
pop
fistpl
shl
les
mov
dec
popa
jns
jmp
orl
mov
pushf
adc
lahf
cmpsb
jb
add
push
mov
push
stos
icebp
shl
mov
jecxz
or
psubq
mov
jp
xlat
push
dec
jns
outsl
cmpsl
ja
out
cwtl
cmc
and
pushf
mov
stc
xor
movsl
dec
lahf
xchg
movsb
push
push
into
cmp
sub
dec
inc
xor
add
out
stos
clc
dec
ja
adc
lret
notl
jg
jle
jo
pushf
cmpsl
cltd
and
cli
in
mov
mov
jno
inc
clc
sti
jns
add
lock
stc
shrl
jnp
sub
ret
mov
mov
and
movsb
in
subl
aam
sbb
and
cmp
loopne
pusha
adc
into
push
mov
push
lock
mov
xchg
xlat
sbb
test
sub
xor
mov
jbe
sbb
add
std
sbb
enter
jmp
inc
push
push
repnz
test
out
cmpsl
dec
and
add
or
inc
jns
lods
clc
sbb
in
jg
mov
inc
outsl
xchg
or
pop
xchg
adc
ret
xlat
pop
and
mov
frstor
ja
in
std
mov
imul
addr16
faddl
outsl
mov
hlt
sub
std
je
addr16
pop
jb
scas
adc
cmp
mov
add
inc
lds
popa
leave
cmpsl
lret
mov
lahf
sub
daa
imul
pop
aaa
out
or
jb
shll
les
scas
imull
mov
daa
jnp
push
cltd
cld
hlt
jmp
scas
movsl
rcr
clc
into
ds
cmp
arpl
jp
popf
lods
or
mov
cmp
push
stc
lcall
xor
fisubrs
subl
mov
mov
add
ss
push
adcl
pop
jb
pop
rclb
leave
dec
xchg
pushf
push
push
les
js
call
ljmp
cmp
sbb
outsl
orl
out
mov
mov
add
mov
and
and
shll
inc
xchg
into
mov
gs
pop
out
mov
xchg
mov
push
sbb
push
int
lcall
lret
xchg
gs
add
fisubrl
inc
pop
aad
cmp
mov
lea
clc
fbld
es
cmova
scas
jmp
push
cmpsb
les
aam
pop
jle
dec
pop
add
outsb
mov
xchg
sbb
add
sub
mov
adc
jg
dec
mov
mov
divl
xchg
sub
test
jl
dec
enter
pop
repz
cmp
lods
inc
aaa
add
sub
xchg
adc
mov
jno
sub
jmp
adc
in
cmp
mov
xchg
iret
jns
mov
jmp
shlb
mov
sub
cmp
sub
enter
sub
xchg
xchg
pop
lcall
xchg
cmp
or
pop
jmp
popa
add
in
sbb
mov
fwait
outsb
hlt
shlb
scas
inc
jb
cmc
repz
psrld
and
inc
pop
das
dec
bound
add
adc
cmp
inc
jae
jnp
xlat
push
cmc
mov
cmp
ret
imul
cs
imul
fs
sbb
add
or
or
out
jge
mov
inc
pop
jne
dec
das
jae
in
daa
cltd
adc
sbb
mov
cmp
xchg
cmpsb
mov
push
and
sub
ljmp
sub
mov
es
mov
cmp
std
ss
js
cmp
xor
sub
and
jmp
mov
or
mov
std
lea
popf
lds
ds
mov
mov
cltd
jnp
cwtl
jne
jl
jo
mov
test
test
enter
lcall
cmp
add
and
push
dec
stc
je
addr16
xchg
mov
xchg
in
mov
add
xlat
mov
cmp
bound
pop
lcall
add
mov
fadds
in
cltd
pop
jp
insb
ss
push
pop
fwait
out
jo
pop
xor
lahf
cmp
andb
fldt
sub
dec
add
rcl
test
mov
cmp
test
ret
std
adc
movsl
push
int3
shrb
fbld
lds
loopne
dec
inc
sbb
sub
or
repz
in
cs
fcomps
lahf
jmp
or
scas
mov
push
mov
cmp
push
dec
pop
in
andl
push
xor
test
shrl
sub
jne
push
inc
xor
add
adc
ljmp
xchg
lea
mov
jecxz
mov
pop
andb
outsl
xchg
addr16
jmp
mov
mov
sub
in
fcoml
mov
addl
sub
mov
test
test
xchg
clc
or
popf
and
inc
mov
push
int
pop
mov
adc
sbb
jge
outsb
push
jge
cld
shlb
cld
mov
push
and
iret
ret
fldt
mov
enter
sbb
cs
push
cmp
es
and
ja
cwtl
xor
mov
outsl
xchg
xchg
fistpll
test
sarb
icebp
xchg
sub
fistl
mov
imull
ja
inc
xchg
int
dec
inc
adc
das
sbb
sub
sub
jg
js
push
xor
iret
sub
cmpsb
push
and
movsb
iret
and
add
and
test
push
jmp
adc
sbb
jp
test
xor
fwait
out
cld
pop
je
fisubrl
ror
lock
dec
jae
pop
push
xor
dec
mov
js
dec
jnp
jo
ljmp
cmp
in
or
add
sub
jg
iret
mov
orl
cmp
or
cmp
outsl
in
int
sub
add
dec
test
jns
adc
cmp
mov
cmp
sbb
imul
data16
test
stc
es
jmp
imul
ret
jl
aam
movsl
jnp
int3
repz
cmp
daa
xchg
outsb
mov
adc
mov
jge
popa
mov
dec
inc
js
xchg
or
out
or
hlt
adcb
pop
and
xor
std
pusha
popa
add
out
loopne
std
push
xchg
ljmp
jg
inc
sti
inc
push
divps
or
mov
cmp
add
lea
or
out
inc
mov
sub
adc
mov
mov
std
ja
push
cmpsl
cmp
mov
sarl
push
or
xlat
sub
jne
je
hlt
pop
sbb
sub
es
jo
jecxz
dec
movsb
push
push
mov
sbb
xchg
or
loope
lds
cmp
sti
jbe
and
fsubrl
arpl
cmpb
leave
filds
hlt
push
sahf
mov
xor
imul
xor
adc
push
popa
cld
ret
jge
jns
mov
icebp
dec
icebp
jg
cld
fisttps
dec
inc
sbb
sub
pop
xchg
out
test
sub
mov
aad
mov
sub
dec
daa
ja
out
lret
mov
mov
push
scas
pop
sbb
leave
insl
jbe
mov
call
ljmp
jae
sub
and
pusha
mov
and
das
xchg
mov
pop
add
or
loop
arpl
int
shlb
aam
and
stos
je
ret
stos
out
addr16
push
fisubrl
out
das
lret
xor
cwtl
bound
test
xchg
and
je
call
jl
and
cs
dec
mov
lea
cmp
jns
jg
mov
jl
jae
mov
push
pop
out
push
scas
pop
in
and
add
jno
std
push
scas
dec
cwtl
xor
pop
pop
add
lahf
push
ljmp
hlt
push
shll
movl
cmp
mov
add
mov
je
push
ja
mov
jne
movsb
add
loop
cwtl
scas
add
pusha
inc
and
jae
xor
js
lock
jb
dec
sub
mov
sub
inc
pop
sbb
in
pop
adc
jmp
xchg
sub
xchg
fldt
dec
je
xor
jmp
inc
stos
adc
stos
jne
mov
icebp
subl
ficompl
das
xchg
rorl
push
xor
jecxz
bound
mov
jnp
in
push
push
xchg
and
or
lods
sub
cmc
imul
leave
mov
mov
pop
dec
ja
ja
lea
jp
add
jle
pushf
dec
insb
outsb
pop
mov
or
add
push
pop
sbb
out
sub
test
or
js
pop
inc
data16
sbb
inc
mov
test
fstps
pop
nop
test
and
sub
mov
jp
rcll
out
pusha
mov
xor
addr16
and
sbb
add
or
pop
adc
dec
xchg
add
jno
or
in
cmp
jno
pushf
dec
mov
lds
push
cmpsb
repnz
sub
jmp
mov
fcompl
mov
andl
dec
enter
sbb
sbb
mov
jmp
add
and
mov
or
xor
cmpsb
sub
fcomps
lods
enter
fidivl
or
jo
sub
icebp
dec
push
cmp
jecxz
pop
movhps
into
adc
adc
cmp
aad
bound
test
push
rclb
jg
mov
and
sub
and
jne
adc
aad
dec
pop
xchg
fstpl
movsl
sub
into
mov
mov
cmp
adc
mov
xlat
ss
jge
cltd
test
int3
sbbl
sub
add
jge
mov
or
mov
xor
and
cs
lahf
bnd
and
pop
lcall
inc
repz
jno
lret
loopne
arpl
test
addr16
in
nop
push
cmp
fmull
push
lret
sub
arpl
sti
aam
cld
movsb
dec
or
sbbl
cmp
decb
xor
add
mov
mov
shlb
jo
sub
xchg
pop
hlt
mov
push
cmpsl
adc
cmp
fstpt
pop
jmp
popa
jmp
popf
pop
mov
push
xor
cmp
loopne
adc
mov
sar
pusha
jle
pop
sbbb
inc
mov
lods
sub
enter
and
sahf
xor
mov
pop
mov
jp
dec
push
adc
dec
add
inc
testl
push
rcll
js
mov
adc
dec
je
inc
or
pop
outsb
data16
jbe
add
and
cmpsb
mov
aam
and
inc
fisubs
mov
cmp
ficomps
mov
lret
popa
lahf
pop
into
mov
js
sub
icebp
mov
fwait
xor
adc
jae
out
add
sub
pushf
push
gs
les
push
jmp
push
cmp
cmp
ret
add
jbe
repnz
mulb
pop
aad
mov
in
shl
jns
xchg
repz
push
repnz
stc
mul
xor
xor
arpl
pop
outsb
es
and
pop
sbb
push
ds
pop
cs
jnp
and
loope
dec
aam
mov
call
sbb
adc
mov
mov
mov
inc
call
repnz
xchg
mov
jl,pn
hlt
jno
bswap
or
test
push
xchg
stos
dec
xorl
jp
jns
mov
mov
mov
mov
sub
sarl
mov
mov
dec
xchg
scas
lods
mov
movsb
inc
arpl
push
add
cmp
outsb
stos
adc
inc
xchg
xlat
das
and
imul
out
sbb
pop
cmp
in
mov
jle
xor
inc
adc
das
testb
icebp
mov
pop
dec
fcoml
sbb
ja
xor
push
cmpsl
jbe
and
mov
jb
stc
mov
pop
mov
xchg
push
fcomps
ja
ljmp
mov
cli
int3
jnp
int3
xchg
aas
or
push
ss
popa
fstl
xchg
mov
mov
sbb
addl
sar
inc
dec
pop
nop
jl
pushf
mov
and
xlat
jle
cmpsb
push
jnp
test
lret
gs
and
push
jge
push
inc
push
push
xor
mov
aas
lods
imul
outsb
sbb
push
lcall
test
jae
cmpsl
call
lahf
xor
mov
repnz
loopne
push
aaa
pusha
dec
xchg
cld
pop
push
sub
test
jecxz
mov
orb
dec
faddp
jb
out
lahf
test
pop
orl
xor
mov
push
fisttps
stos
cmpsl
ret
vldmxcsr
fldcw
stc
sub
arpl
inc
icebp
mov
loope
testb
jne
xor
dec
dec
pop
and
cmpsl
or
xchg
sub
sbb
jge
cmc
adc
pusha
cmp
push
xchg
test
testl
jbe
call
out
mov
sbb
sti
add
jp
loop
xor
mov
jl,pt
xchg
sub
jp
add
enter
jecxz
lods
out
pop
jo
xchg
lds
ss
jle
movsb
loopne
jns
jae
jb
xor
mov
adc
popa
cwtl
imul
xchg
lcall
mov
mov
push
push
aas
std
push
xchg
inc
dec
cwtl
lock
clc
repnz
into
push
pop
push
sbb
cs
aas
pop
stos
lret
mov
adc
and
lcall
and
adc
insb
xchg
fisubs
jnp
fldenv
dec
das
icebp
xchg
jo
dec
cmpsb
push
arpl
xor
add
adc
aaa
nop
imul
lds
inc
add
ljmp
jp
cmp
ret
shr
mov
sbb
in
aaa
pop
mov
jmp
jne
mov
in
push
or
xchg
or
push
xor
es
gs
cmp
test
test
outsb
insl
inc
xor
sbb
cmp
or
pop
sar
call
jnp
push
jae
es
aas
cmpsb
ds
enter
sub
xchg
push
push
pop
inc
arpl
pop
arpl
stc
jns
pop
jge
bound
shrl
cmp
imul
push
pop
insb
pop
test
sbb
xchg
adc
inc
dec
or
orb
out
sbb
icebp
mov
pop
sbb
test
push
mov
je
or
jmp
xchg
stos
xchg
rorl
sub
ss
cld
push
push
or
ljmp
mov
loopne
loopne
stos
cmp
pop
arpl
jge
inc
test
inc
loopne
shll
jp
mov
and
lds
push
rcrb
jl
mov
rcll
mov
arpl
sub
sbb
mov
mov
xchg
or
inc
in
lds
mov
aam
pushf
and
loope
or
cmpsb
sbb
sub
js
mov
adc
mov
cmp
mov
arpl
mov
sbb
sbb
xchg
pop
cmpsb
lods
xchg
or
sub
enter
pop
inc
int
xor
push
insb
push
adc
shll
out
addr16
jg
and
push
xor
pushf
xchg
das
pop
xor
dec
das
jmp
jno
fmul
cs
bound
neg
shlb
xor
imul
shrb
fisttpll
outsl
adc
sbb
xchg
cmp
xlat
mov
mov
xor
fcom
or
mov
scas
adc
enter
xchg
cmp
jmp
fucomp
bound
sbb
xor
test
aad
lcall
inc
sub
jae
div
stc
or
mov
fs
scas
rcr
ss
test
ror
mov
adc
fisubrs
mov
jno
fwait
ljmp
ja
and
dec
push
pop
cmp
dec
pusha
jnp
or
fwait
and
cld
xchg
repz
test
inc
les
cld
pop
loop
in
mov
ljmp
test
out
sbb
cmp
ss
inc
and
sbb
mov
add
xor
push
adc
mov
aaa
popf
fs
imul
cmp
ret
arpl
pop
mov
sub
repnz
test
mov
adc
mov
dec
stos
pop
push
pop
in
adc
or
push
sub
add
insl
or
scas
icebp
addr16
dec
lcall
pop
sbb
out
cwtl
jae
xchg
inc
mov
sti
in
and
jne
mov
sbb
lcall
fidivs
popa
or
jbe
sub
cmpsl
scas
popa
aaa
clc
lea
scas
pop
sub
fucomip
outsl
mov
adc
cmp
fnsave
adc
cmp
stos
enter
jp
push
fidivl
fmull
incb
cmp
lahf
xchg
stos
std
and
adc
mov
ds
add
adc
mov
add
mov
repnz
jns
and
push
cwtl
mov
scas
mov
sub
ret
insb
pop
fsubs
lret
or
and
xchg
mov
sub
scas
adcb
ficoms
pop
ja
bound
pop
pop
mov
mov
outsl
mov
pushf
negl
mov
subl
or
jno
cmp
inc
sub
lret
scas
or
les
add
rcrb
adc
ja
pop
push
aad
aam
pop
and
popa
inc
cmp
pop
xor
stc
mov
mov
adc
aad
mov
aam
push
scas
das
in
insl
push
jmp
adc
or
repz
push
jp
mov
inc
or
comiss
aas
mov
sub
ss
lcall
cmp
ret
mov
mov
cmpl
inc
and
or
cmc
cld
jmp
lods
mov
jne
mulb
mov
insl
pop
ds
jo
xchg
inc
cmpsl
jmpw
pop
sub
fdivr
jge
pusha
stos
jge
hlt
loop
or
mov
and
lret
adc
sbb
lahf
mov
cmp
ljmp
shlb
hlt
cmp
mov
inc
push
testl
out
lods
dec
cmc
dec
adc
mov
sub
lret
push
into
rcrl
dec
into
cmp
inc
push
adc
or
enter
or
roll
in
jle
les
pop
mov
sub
push
or
adc
leave
ret
fdivrl
jp
outsl
aaa
sbb
not
push
or
and
pop
loope
sub
int
or
mov
aas
mov
fldl
outsl
mov
sbb
in
mov
lret
sbb
sub
jae
sbb
lret
imul
fsubr
push
or
inc
mov
stos
fsub
aaa
loop
pop
jnp
lret
or
pop
jno
stos
es
or
mov
pop
push
int
int3
mov
or
mov
add
das
lret
inc
sub
push
hlt
ljmp
ret
std
es
sbb
test
xor
mov
dec
jg
or
push
mov
jne
mov
jae
cs
iret
add
push
cmpsb
sub
adc
movsl
mov
push
mov
mov
xor
mov
stos
fisttpll
cmp
fimuls
je
sbb
mov
inc
in
int
xor
sub
xor
int3
or
rcl
push
test
adc
jecxz
pusha
jmp
mov
mov
in
mov
fmuls
cld
sahf
pop
mov
push
mov
repnz
lret
dec
cmp
dec
test
dec
push
sub
shlb
sti
cmp
cmpsl
mov
int3
imul
mul
xor
int
bound
call
mov
add
mov
jg
enter
sbb
mov
mov
out
mov
mov
aad
xchg
cmp
imul
fwait
jmp
jns
and
push
sarl
dec
pop
pop
push
std
movsb
test
fisubl
jo
lea
data16
in
or
push
lods
into
sub
scas
lock
insb
arpl
inc
cmpsl
ljmp
and
pop
sahf
dec
stos
cwtl
cmpsl
mov
setnp
push
aas
fdivs
adc
fbld
psubsb
shlb
sbb
pop
push
xchg
mov
cwtl
shll
or
aad
fwait
arpl
jnp
push
std
inc
nop
repz
pop
out
adc
cmc
mov
mov
xorl
rorb
mov
sbb
jle
mov
lods
jle
push
cs
cmp
das
xor
push
imul
mov
lock
enter
fdiv
inc
inc
outsl
imul
mov
xchg
test
dec
outsb
inc
dec
push
pop
outsb
cmp
rolb
pop
loop
mov
fidivs
daa
adc
and
dec
adc
bound
ja
scas
stos
xchg
push
pop
mov
imul
lds
push
in
cmp
push
mov
sbb
pop
sub
repnz
push
dec
out
ljmp
mov
fwait
jge
das
xlat
inc
insb
out
repz
push
loop,pn
popf
dec
cmp
sub
fs
into
add
push
out
inc
jne
icebp
mov
aad
push
cltd
mov
mov
loope
insb
js
dec
cmp
sti
les
mov
bound
adc
outsb
loope
ljmp
sub
sbb
insl
cmp
or
inc
adc
mov
mov
out
jg
jno
gs
cmp
imul
jl,pt
arpl
mov
xchg
ljmp
pop
lret
outsb
rorl
je
mov
sahf
cmp
bound
das
inc
pop
or
mov
lds
ret
xchg
ja
bound
lods
rorl
andl
addr16
jbe
cli
sub
sti
imul
sub
lea
std
inc
daa
adc
inc
sub
ljmp
mov
pop
outsb
cmc
cmp
xor
insl
movsl
jg
sbb
insl
cmp
mov
xor
es
and
adc
mov
dec
push
adc
push
test
mov
or
int3
xchg
cmp
imul
jp
test
mov
push
bound
xchg
xor
inc
jne
adc
xchg
mov
es
cmpsb
out
mov
mov
sub
fmulp
imul
fsub
push
mov
and
and
xchg
mull
push
lahf
push
scas
insb
jbe
scas
aaa
fbstp
jno
icebp
sahf
sub
sub
cld
imul
sub
mov
mov
adc
test
sub
mov
test
jo
in
add
ja
mov
sti
clc
sbb
out
xchg
daa
xor
mov
dec
xchg
idivl
inc
lods
imul
test
aas
inc
xchg
mov
sti
pop
or
insl
dec
movsl
lea
mov
cltd
addr16
push
sbb
adc
fucomi
add
add
loopne
lret
shlb
mov
and
sbb
fldcw
movl
aas
or
daa
and
adc
inc
std
es
add
test
jno
pushl
or
movsb
mov
stc
inc
rcrl
fstpt
std
adc
push
xchg
mov
push
and
dec
mov
jne
jl
pop
xchg
or
repz
adc
std
int
add
push
test
cmpsl
cmp
ret
fistpll
push
repz
cmpsl
pop
cltd
scas
lods
and
fldl
xchg
mov
testb
mov
push
int
aas
cmpsb
scas
loopne
jl
pop
imul
add
xchg
and
ljmp
rclb
cmp
idivb
dec
cmp
xor
inc
bound
test
jno
xchg
and
jmp
sti
aaa
push
jo
stc
out
adc
push
mov
push
stos
pushf
adc
dec
daa
rorb
mov
imul
lahf
xlat
addr16
jmp
out
xchg
test
and
xchg
sub
andb
icebp
sbb
sub
mov
in
test
xor
adc
aam
and
std
fucomi
inc
adc
sahf
push
adc
pop
sub
subl
mov
push
lea
push
icebp
out
xchg
stos
mov
ljmp
addl
xchg
pop
mov
adc
or
adc
into
lock
push
adc
xchg
mov
dec
adc
mov
loope
imul
push
dec
cmp
mov
or
and
lcall
mov
push
jnp
sbb
xor
imul
jecxz
out
outsb
and
xchg
xchg
sbb
cld
mov
in
or
cmc
mov
mov
in
orb
hlt
pushf
in
jle
scas
dec
cmc
cwtl
xor
dec
adc
sbb
mul
or
or
test
push
jo
movsb
fmulp
jno
icebp
push
int
sbb
dec
xlat
mov
enter
jmp
dec
xor
mov
sub
and
push
jbe
or
sub
sahf
flds
pushf
jmp
add
pop
aas
mov
cmp
or
and
xorl
lcall
push
jle
push
sarl
xlat
lret
icebp
push
mov
push
xor
je
dec
sbb
cwtl
outsl
mov
or
add
jl
jle
jg
inc
xchg
fidivs
ret
ret
stos
pop
xchg
mov
addb
lock
in
sbb
jae
push
ljmp
andl
or
loopne
or
idivb
xor
add
push
ret
mov
push
sbb
clc
mov
sub
mov
div
mov
test
lds
popa
pop
cmp
addr16
mov
xor
adc
push
mov
jmp
pop
les
sbb
adc
notb
lods
mov
mov
pop
dec
insl
cmp
lret
adc
mov
xor
dec
ds
sbb
push
add
lock
lcall
and
test
sub
push
lret
loope
cmpsb
rorl
popa
mov
neg
nop
mov
push
push
das
push
pop
or
pop
aad
xchg
mov
shl
aad
fwait
sub
fcoml
inc
or
test
cli
aad
lods
sub
xchg
mov
cmpsb
and
sub
xor
sbb
push
dec
out
int3
cmpsb
fdivs
cmp
fdivrs
out
andl
and
dec
add
les
hlt
xchg
lock
sti
xor
mov
notl
daa
fwait
iret
add
xor
mov
mov
addl
fidivrs
lahf
dec
mov
mov
jb
lock
mov
shlb
leave
popa
loope
lods
aaa
aad
je
jp
aas
jns
jns
cmc
in
fidivs
test
aaa
mov
adc
outsb
lcall
dec
mov
cmpsb
or
adc
fnstenv
jnp
and
rcll
add
std
jmp
cmp
or
aam
cli
daa
movsl
fadd
ja
fs
fwait
sub
lods
sub
into
sbb
xchg
jnp
cmpsl
sub
inc
daa
inc
lret
mov
int
xchg
mov
lcall
mov
xor
sbb
dec
insb
test
cmpsl
sbb
addr16
push
out
lcall
fidivrl
push
jnp
mov
sub
fldcw
iret
hlt
push
js
push
sti
call
push
push
cmc
and
sub
fmul
mull
scas
mov
lds
pop
jo
and
imul
ret
adc
xchg
xor
jo
mov
inc
inc
pop
adc
subb
inc
jno
ljmp
sub
out
pop
popf
fistpl
ljmp
jns
sti
cwtl
int
pop
cld
nop
imul
push
push
ds
mov
xor
add
in
out
adc
das
ret
add
fistps
jo
mov
jo
mov
ljmp
aad
mov
push
into
ret
popa
inc
inc
mov
ss
or
cltd
es
pop
and
fdivs
pop
mov
or
cld
pop
in
outsb
fst
push
jecxz
mov
push
das
in
lret
mov
pop
iret
push
das
push
ds
popf
lods
inc
ja
adc
inc
das
cld
xlat
sbb
inc
pop
inc
fdivp
or
push
in
lcall
jge
inc
or
aam
cmp
lods
mov
cltd
jbe
xchg
lods
xchg
js
cmpsl
lret
cld
jo
in
push
mov
sub
adc
dec
ret
lret
lds
jbe
les
push
ret
mov
dec
inc
out
jno
pop
inc
sub
outsl
out
clc
and
cs
adc
cmp
add
push
test
iret
sub
add
jnp
pop
pop
cli
cmp
test
aam
repnz
pop
xchg
pop
pop
and
mov
nop
jbe
sbb
mov
inc
add
icebp
xchg
subl
scas
test
mov
out
icebp
das
mov
and
xor
jnp
stos
dec
add
and
and
jmp
push
out
bound
xor
out
cmp
pop
push
xchg
lods
jge
pop
outsl
xchg
mov
cld
sbb
mov
stc
in
adc
stc
repz
test
pop
push
cmpsb
pop
cmp
clc
cmp
or
and
xchg
insl
enter
jne
push
cwtl
mull
or
cmp
imul
icebp
and
sub
loop
je
inc
jle
dec
mov
jecxz
cmp
cmpsb
mov
and
enter
aas
sub
movsb
les
adc
jl
xor
pop
scas
and
ja
add
mov
movsb
pop
pop
aad
fs
aaa
sbb
push
xchg
hlt
add
xor
xchg
or
fldenv
cmp
inc
scas
and
cmp
adc
ja
mov
lods
add
decl
notl
dec
xchg
loopne
cltd
mov
shlb
pop
mov
cmp
jno
int3
mov
shl
add
daa
outsl
ds
xchg
and
ret
push
jo
mov
xchg
fcompl
cltd
fadd
sbb
test
sti
mov
sub
mov
aam
js
jnp
mov
popa
popf
arpl
pop
add
adc
sbb
aas
sbb
mov
mov
ret
cmp
data16
or
push
lret
or
in
or
test
pop
push
loop
xchg
adc
repz
sub
add
adc
std
mov
lds
lods
or
mov
jp
mov
call
sub
test
outsl
je
fdiv
daa
fcmove
lods
sbb
rcll
pop
into
repz
insb
enter
add
fbstp
idiv
std
data16
ret
or
push
fmul
js
xor
fiadds
add
int
leave
push
fdivr
lcall
daa
push
leave
pop
mov
jo
and
cmc
cmp
lea
sbb
das
fstpt
mov
outsl
stc
adc
int
and
pop
push
inc
fbstp
rcrl
xor
cmpl
lock
andl
lcall
icebp
sub
jmp
jmp
jb
fwait
cwtl
dec
push
dec
mov
or
lret
push
mov
mov
sbb
mov
jno,pn
mov
scas
xchg
icebp
and
inc
pop
popa
scas
push
xchg
das
div
push
movsb
mov
inc
jnp
xor
and
and
push
add
std
shlb
outsl
mov
mov
out
test
fs
inc
or
insl
les
xchg
sub
nop
outsl
cwtl
cmp
push
movsl
call
mov
icebp
mov
addr16
xlat
adc
fwait
test
dec
or
xor
pop
mov
add
mov
into
adc
lcall
out
jne
xor
adc
inc
jle
popa
cld
insb
ja
mov
jbe
sbb
ljmp
cmp
add
nop
shrl
mov
or
jne
mov
addb
pop
inc
sub
icebp
fisubrl
sahf
imul
jg
arpl
dec
xor
pop
xchg
xchg
jb
and
or
cmp
xor
pop
pop
out
adc
add
cmp
lret
sbb
cmp
jmp
dec
xor
call
xor
add
push
sub
in
fildll
pop
aad
daa
xor
daa
xchg
sub
mov
add
adc
ret
mov
and
sbb
inc
enter
xchg
cmp
mov
pop
xchg
fdivr
call
es
mov
je
xchg
inc
inc
imul
ja
sub
std
std
push
test
sbb
inc
in
lcall
rcrl
test
mov
pop
sarl
pop
push
mov
xchg
fiadds
std
add
fildll
mov
jns
and
pushf
and
dec
xor
inc
scas
inc
cmp
movsl
jle
pushf
mov
and
aaa
fisubs
mov
in
mov
push
outsb
iret
inc
daa
dec
nop
xor
test
xchg
push
ds
xor
jle
in
out
and
push
adc
add
adc
imul
pop
xchg
cltd
shrl
std
test
mov
into
add
pop
fildl
repnz
loope
and
stos
xchg
aaa
popa
mov
int
sub
mov
jecxz
inc
iret
xor
sbb
loop
cmp
mov
push
jns
repnz
jp,pn
jmp
jmp
sbb
int3
xor
cltd
test
js
jmp
xchg
scas
push
cli
ljmp
xlat
les
cld
mov
sub
sub
jo
fistps
repnz
test
and
mov
inc
add
mov
dec
and
aad
jge
sub
popf
add
cmp
je
cli
lea
add
fsubrl
je
inc
inc
adc
sub
cltd
ret
in
push
push
out
cmc
add
testb
scas
push
inc
fld1
stc
pop
cmpsb
jb
or
and
dec
out
add
js
adc
rcrl
out
xor
in
cwtl
orb
and
push
fcmovu
or
cmp
cmp
popa
jg
push
and
outsl
mov
xor
bound
ljmp
push
test
cmc
and
dec
add
mov
xor
adc
ljmp
lea
sub
jp
lahf
add
mov
je
add
fst
jp
jecxz
dec
adc
adc
mov
cld
iret
push
mov
adc
lcall
popf
dec
push
xor
shrl
or
cli
pop
mov
arpl
lcall
ss
jbe
sub
sarl
mov
jb
sbb
lret
sbb
jp
inc
cmp
iret
adc
je
xchg
adc
sbb
sub
test
push
xchg
loop
mov
movsl
fmulp
inc
into
xchg
dec
iret
out
mov
sub
in
pusha
fwait
pop
sbb
ss
in
movl
xchg
outsl
mov
mov
sti
mov
adc
mov
arpl
nop
dec
xor
setb
dec
mov
ret
mov
lahf
jp
lock
jb
xchg
mov
adc
pop
mov
sbb
adc
push
inc
jnp
test
cld
jae
inc
xor
rcrb
jbe
adc
sbbl
xchg
out
bound
faddl
loop
cltd
sti
push
and
sub
mov
incb
in
idiv
popf
sbb
ficoms
cmp
push
je
or
dec
push
xchg
adc
outsl
cltd
sbb
xchg
pop
outsl
out
mov
inc
repz
mov
and
repnz
xor
mov
cmc
popa
lret
and
push
outsb
test
push
fs
lahf
pop
xchg
and
sub
dec
pop
add
mov
mov
add
cld
fcomip
push
push
pusha
push
jmp
push
flds
add
push
sahf
dec
imul
and
cmpsb
fbstp
xchg
jno
aaa
add
mov
dec
mov
dec
dec
fwait
loop
pop
push
out
mov
sub
loopne
ds
outsb
sbbl
sbb
xor
jnp
loope
sbb
dec
xchg
jae
and
push
std
lock
mov
jp
jle
daa
addr16
mov
pop
mov
loope
push
xor
ljmp
fadds
ss
or
push
sbb
outsl
inc
mov
dec
popf
mov
and
rclw
into
fbstp
xchg
jp
mov
aam
mov
sbb
pop
scas
jp
roll
dec
pop
adc
pusha
arpl
xchg
and
ret
xor
jg
push
mov
jge
mov
sub
mov
push
adc
and
lahf
sbb
aad
cmp
in
mov
inc
insb
ror
xchg
mov
push
lahf
pop
popf
and
mov
aas
out
sbb
push
aam
fdivrl
ret
sub
inc
stos
cmp
fs
pushf
into
xor
je
lret
xchg
std
adc
fwait
pop
aad
fiadds
cmpsb
fucomi
cmp
push
dec
adc
sbbl
test
jle
push
inc
or
jl
jae
inc
or
dec
sbb
into
fsubrl
dec
fisttpll
or
cwtl
jge
fistpll
adc
cmpsb
ds
mov
cld
or
adc
pop
cltd
je
push
cmc
adc
and
sti
pop
jle
push
xchg
and
mov
movsl
nop
adc
loop
adc
xor
inc
mov
pop
enter
loope
xchg
mov
mov
sbb
fdivrl
add
sub
sbb
sub
add
rolb
pop
sti
mov
fiaddl
and
orb
pop
or
pop
loopne
mov
pushl
inc
test
push
inc
pushf
push
or
lret
lds
pop
addr16
pusha
sub
dec
clc
pushw
inc
xchg
inc
dec
loope
rclb
sbb
bound
add
sub
ret
rcrl
jb
leave
lahf
data16
fwait
or
push
lret
add
not
inc
or
and
sub
jl
shlb
inc
jnp
ljmp
or
xlat
and
fistpll
stos
cmpsb
xchg
aad
in
mov
sbb
jp
fimull
cmp
push
and
lcall
clc
cmp
xchg
subb
dec
xor
shll
sbb
mov
nopl
and
sub
jle
sbb
shlb
push
or
je
andb
mov
ds
lock
dec
int
push
pop
scas
outsb
addb
inc
jl
arpl
movsb
out
push
and
dec
fsubp
imul
push
xchg
aaa
push
ja
lcall
dec
or
addb
daa
push
or
sub
lahf
outsb
push
lahf
xchg
jp
push
jecxz
mov
outsb
sahf
push
int
jnp
dec
jmp
jno
into
cmc
daa
mov
pushf
jp
add
adc
or
fidivs
mov
mov
jne
inc
or
mov
mov
bound
jp
push
int
mov
push
fs
or
inc
outsb
jecxz
leave
fidivs
arpl
pusha
or
mov
es
pop
and
sub
fdivrp
pop
pop
repz
mov
push
and
lret
cmp
inc
dec
mov
push
inc
push
das
test
sbb
mov
pop
clc
stos
pop
cs
sub
int3
mov
xchg
jns
push
int3
adc
inc
dec
and
aas
mov
add
push
mov
mov
xor
mov
adc
gs
adc
fldcw
rolb
jnp
mov
mov
xor
ljmp
jl
fdivrl
jo
add
es
mov
ds
mov
rorb
stos
cld
stos
inc
xor
pop
ja
loop
add
mov
or
push
aas
mov
pop
cli
sbb
in
fimuls
nop
pop
int
mov
dec
push
add
xchg
fbld
in
mov
adc
movsl
mov
push
pusha
mov
popf
cmpsb
fwait
stos
in
jp
push
dec
xchg
and
scas
pop
test
sub
xchg
cwtl
mov
rcll
or
cmp
mov
jecxz
test
adcb
mov
rorl
fldpi
mov
fnstenv
sub
sub
xor
fwait
jbe
je
insb
repnz
sub
aad
adc
mov
fisubrl
adc
fisubrl
jns
ss
adc
inc
or
pop
adc
cltd
add
arpl
mov
test
add
lods
sub
xchg
lds
pushf
mov
loop
mov
pop
mov
dec
inc
repz
aaa
mov
lods
mov
ja
add
adc
sbb
mov
mov
ret
xor
in
cld
pop
leave
mov
fxch
les
loope
cld
mov
inc
mov
inc
adc
or
pop
mov
imul
cmp
stos
je
test
clc
ret
outsb
js
sbbl
pop
cli
add
roll
xor
cmp
xchg
sbb
clc
enter
fs
out
adc
xchg
loop
inc
rol
fistl
add
or
test
daa
lock
mov
cmp
ret
es
pop
or
cltd
mov
push
mov
fstpt
xor
and
and
inc
adc
imul
js
cmp
std
test
jae
ret
loope
jb
in
and
sbb
addl
or
add
fcomip
mov
imul
cwtl
fldz
aad
loopne
out
or
dec
rcrl
test
fwait
in
iret
loop
ds
hlt
fxch
add
jle
mov
dec
test
enter
imul
pop
mov
push
orb
jno
and
leave
ljmp
int3
pop
mov
lds
test
mov
std
icebp
das
mov
mov
mov
add
cld
sbb
arpl
inc
push
mov
lea
jl
mov
xor
and
gs
pop
shlb
lahf
push
jg
mov
push
in
or
sbbl
push
jo
je
inc
and
fildll
pop
and
cmp
sub
nopl
sbb
inc
shrl
dec
js
adc
outsl
pop
fimuls
out
add
adc
mov
pop
sti
mov
or
add
outsl
in
mov
fstp
in
lods
ss
scas
push
push
jne
add
pop
repz
cwtl
and
les
push
int
dec
pop
arpl
dec
popa
xor
jmp
pop
ror
mov
gs
xchg
test
mov
cltd
pop
cmp
in
jge
and
movsb
shl
xchg
xchg
pop
dec
xor
out
cltd
push
loope
jp
std
xor
xor
std
imul
xchg
daa
and
std
pop
pop
pop
aaa
call
fwait
pusha
inc
ds
mov
jmp
mov
xor
in
lods
push
inc
jmp
leave
inc
cmp
push
add
addr16
and
add
loope
lcall
jo
jno
mov
fldenv
jle
and
in
dec
inc
js
repz
push
sbb
cmp
mov
mov
push
sub
ss
jge
js
imul
pop
mov
movsb
xor
ss
pop
mov
inc
icebp
es
and
shlb
int3
mov
dec
pop
pusha
cmp
mov
inc
test
popf
mov
xchg
or
sti
adc
bound
test
add
mov
sti
jo
inc
repnz
or
in
mov
or
mov
mov
lret
pop
aas
adcl
or
sub
aam
loopne
jg
out
inc
add
out
jbe
mov
lds
out
jnp
mov
mov
mov
add
jns
mov
hlt
shl
lcall
into
clc
shr
push
jbe
movsl
dec
lcall
cwtl
sbbb
arpl
or
movsl
repz
jnp
jecxz
mov
out
cli
adc
inc
aaa
bound
and
jmp
jmp
pop
push
mov
lahf
add
inc
mov
divl
pushf
jg
gs
mov
jo
daa
cmp
xchg
jmp
mov
add
fiaddl
out
xor
mov
stc
ds
mov
addr16
aam
jnp
out
das
adc
lcall
shl
mov
mov
shr
sbb
jp
out
or
pop
fdivr
mov
sub
repnz
pop
rep
xchg
data16
ljmp
out
sbb
pusha
subl
sbb
in
cmc
mov
sbb
gs
je
push
adc
rolb
loop
pop
or
movsl
xchg
adc
imul
xor
mov
dec
sahf
lret
out
scas
add
sbbb
mov
jl
std
mov
shr
and
sbb
data16
mov
es
lahf
cwtl
sub
fdivl
xchg
int
and
inc
movlps
aad
jl
dec
mov
stos
cmp
test
fstpt
jmp
loopne
fcoms
enter
nop
adc
pop
sbbl
jbe
leave
push
shrl
dec
pop
xor
pop
loopne
cmp
adc
ja
sub
add
jp
mov
and
sub
mov
mov
lods
rorl
fistpll
cmp
push
bound
testl
mov
jmp
pop
lret
addr16
adcl
mov
movsl
addr16
add
ret
pusha
push
into
sub
outsl
jne
or
dec
sbb
push
stc
stc
and
or
mov
mov
xchg
jl
jl
inc
fucomip
dec
int3
test
lcall
lds
mov
add
jns
pop
lret
neg
add
je
shll
punpcklbw
pop
xchg
cmp
mov
lds
scas
add
jle
and
mov
ds
xchg
mov
add
daa
std
roll
arpl
cmp
out
adc
fwait
mov
sub
gs
aam
mov
push
or
ja
repnz
jp
rorl
cmpsb
aam
stc
pop
iret
cwtl
cmpsl
insl
int3
jbe
inc
test
inc
stc
sbb
dec
jp
daa
lret
pop
or
xchg
mov
xchg
fdiv
into
push
shlb
fisubrs
fldt
popf
out
aaa
addr16
fistl
rcl
hlt
dec
out
jo
mov
pop
mov
into
and
pop
out
dec
cltd
loopne
cwtl
in
sti
shll
dec
jp
jo
insl
xchg
add
mov
jae
into
mov
test
sbb
sub
and
jmp
xchg
pushf
push
stc
test
lret
mov
jo
xor
pop
inc
dec
js
jb
xchg
mov
movsl
jbe
pop
jecxz
lods
cmpsb
aaa
mov
gs
ljmp
mov
adc
enter
pop
in
outsb
dec
test
sbb
jbe
ds
shrl
test
push
inc
lret
push
scas
enter
insb
mov
inc
or
test
imul
xchg
imul
xor
sti
mov
add
push
sub
push
sbb
inc
int
push
xor
aad
xchg
dec
aad
in
iret
cltd
cmp
push
add
push
pop
cld
jb
lret
out
cmp
popa
cmc
jle
push
test
idivl
std
dec
dec
or
and
push
adc
cltd
mov
loope
mov
in
inc
fnstcw
test
jl
cmp
test
jmp
sbb
xchg
adc
andb
int
xchg
mov
aaa
mov
outsb
aaa
push
fcomi
ss
popa
or
xor
fxch
in
lds
sbb
mov
outsb
mov
and
repz
pusha
clc
push
fcmovnu
rorb
inc
insb
mov
repz
das
test
lret
add
sti
inc
cmp
movsl
int
mov
jle
pop
jp
loopne
lods
nop
lret
or
add
jg
enter
adc
dec
aad
sub
xlat
and
add
cmpsb
pop
xlat
popf
jb
xchg
jp
and
fcmovb
mov
jmp
mov
mov
add
mov
push
mov
xchg
test
gs
mov
into
mov
dec
pop
dec
in
xor
out
call
mov
fimull
sbb
lahf
in
repz
and
dec
jle
jno
bound
adcl
cs
push
ds
fidivl
int3
es
test
lret
in
cmp
push
cwtl
or
mov
imul
shll
sub
cltd
outsl
adc
out
push
insb
dec
js
incb
sbbl
loopne
xlat
sub
push
pop
outsb
push
lret
mov
push
jmp
pop
outsb
push
mov
shlb
sbb
or
rorb
js
andb
jno
aas
cmp
sub
inc
push
lret
in
scas
ja
ss
mov
daa
xorl
pop
fwait
cwtl
push
mov
lock
push
adc
loope
jo
or
out
adc
jge
inc
xchg
mov
cmp
xchg
mov
add
outsl
in
into
rcr
jo
add
push
pop
sub
sbb
mov
lds
psllq
leave
and
pushf
fwait
mov
ss
sahf
pop
dec
inc
mov
je
sub
push
out
adc
aam
movsl
fsubp
mov
movsb
loopne
lret
in
lret
jnp
xor
jno
gs
push
cmp
adc
adc
xchg
sahf
or
jmp
loopne
pusha
push
add
xor
xchg
imul
ja
iret
in
jbe
inc
lds
cmc
loope
jb
adcl
daa
inc
fdivs
out
pop
dec
lods
stos
inc
test
inc
and
push
sbb
andb
jbe
movsl
movd
and
add
inc
les
js
push
jne
dec
insl
lahf
lcall
das
cmp
clc
iret
pop
xor
in
sub
xor
dec
push
pop
inc
pop
outsl
mov
add
in
imul
dec
jbe
inc
call
mov
add
lret
int
xchg
je
or
cli
push
push
cmp
adc
mov
sahf
sub
fs
mov
dec
call
out
orb
sbb
lahf
mov
jae
jge
movsl
cltd
xchg
jbe
ror
stos
jg
imul
aaa
orl
xchg
sbb
movsl
sub
push
test
ja
dec
lock
xchg
adc
xchg
mov
adc
insl
xchg
bound
movsl
jp
test
test
push
sahf
lcall
and
sub
cmp
filds
ljmp
loopne
pop
nop
clc
lods
add
arpl
sub
hlt
sbb
les
push
es
mov
cwtl
std
je
insb
imul
out
nop
push
mov
or
xlat
pop
call
xchg
out
cwtl
jl
inc
cmp
loop
adc
push
ds
rorl
push
cmp
pop
inc
ret
enter
pop
cmp
aam
cmpsb
and
xchg
inc
xchg
pop
jbe
pop
outsb
xchg
mov
xchg
idivb
scas
mov
xor
scas
push
in
or
push
sub
mov
cmovbe
imul
call
into
stc
mov
pop
mov
push
pop
add
iret
mov
cli
out
push
notl
sub
mov
dec
scas
xchg
das
sub
repz
sahf
pop
jno
cmp
xor
and
xchg
push
popa
pop
add
xor
xor
fcmovbe
arpl
push
mov
jle
out
mov
jne
subl
push
jne
jp
push
adc
test
test
test
jbe
jno
aad
pop
out
and
pop
hlt
jo
push
stos
inc
cs
es
test
mov
xor
out
cwtl
adc
ret
inc
push
xor
lret
movsb
idiv
mov
enter
sbb
xor
loope
cld
adc
test
pop
mov
add
fcmovnu
dec
and
into
inc
mov
insb
ja
hlt
das
divl
sub
mov
dec
cmp
mov
mov
sub
lods
in
mov
fiadds
inc
ret
aaa
sbb
adc
stos
rorl
lods
xor
aas
fucom
jp
add
push
pop
addr16
cld
jle
jne
pusha
lds
cmpsb
jo
inc
sub
aaa
andl
inc
sbb
dec
jb
into
mov
push
lret
push
push
dec
lahf
add
std
cmpl
mov
in
add
les
into
outsb
es
push
xchg
xchg
jmp
mov
jle
shlb
push
mov
mov
ret
cld
inc
pushf
xor
mov
divl
test
pushf
mov
sbb
mov
bound
dec
cmpb
stos
add
sbb
out
test
mov
dec
jl
xchg
repnz
test
sti
lods
in
inc
lahf
aad
adcb
int
xor
mov
vpmaddwd
jge
cmp
imul
loop
dec
push
and
xchg
pop
idivl
mov
fs
xor
lahf
int3
jo,pn
ljmp
and
push
loop
mov
push
adc
divl
mov
and
mov
outsb
mov
adc
push
andb
pop
ret
lahf
cmpsl
and
lahf
mov
mov
insl
push
popa
fdivr
or
push
fiaddl
into
sbb
cmpsb
push
mov
sbb
inc
mov
cmp
inc
xchg
insb
repnz
inc
xor
xchg
sub
ds
mov
cltd
lods
push
fs
int
xchg
ljmp
iret
mov
imul
pop
jmp
inc
jecxz
iret
pop
jge
dec
cmp
je
mov
stos
mov
sub
and
sbb
fldt
push
lock
movsl
lock
jle
mov
mov
or
dec
psllq
outsl
dec
bound
cmp
addl
and
notb
inc
sub
rorl
negb
fisubrl
jae
insl
fcmovu
sbb
xor
jb
gs
pop
or
jl
out
mov
xchg
jmp
dec
add
sub
mov
push
movsl
sarb
fwait
xchg
add
cwtl
cltd
push
or
mov
xor
imul
test
mov
aaa
inc
shrb
xchg
mov
xor
jl
pop
das
cltd
fadds
xor
dec
fwait
adc
dec
xor
fwait
add
loope
or
test
mov
loop
movsl
shrb
dec
sub
mov
mov
xchg
testb
sbb
xlat
mov
lret
ljmp
inc
in
push
mov
out
sub
jl
movsb
jp
xor
pusha
outsl
or
add
push
iret
test
and
or
cli
push
fstpt
cmp
sbb
jae
test
es
and
jne
mov
sub
add
pop
mov
out
test
xor
cmp
cs
adc
jb
adc
xor
mov
add
loopne
mov
cwtl
test
in
in
fs
fwait
cmp
inc
bnd
std
adc
js
xor
xor
inc
sub
std
sti
fstl
jl
cli
insl
mov
cwtl
movsb
pop
andl
sbb
fidivrl
mov
psrlq
or
pushf
mov
ret
xchg
andl
or
mov
scas
jg
inc
inc
int
out
stos
stos
mov
lock
les
xor
subb
xor
push
dec
in
test
sbb
es
in
lret
push
xor
sub
or
shl
sub
ljmp
divb
pop
loopne
adcb
aam
xlat
pop
and
data16
es
in
into
mov
sbb
scas
jne
sbb
or
adc
push
xlat
leave
jb
push
ror
inc
inc
cld
lret
cmp
jle
mov
js
fwait
mov
icebp
sbb
mov
jecxz
sbb
out
xchg
push
add
shrb
push
rorb
leave
jl
mov
sub
mov
jg
es
mov
bound
arpl
mov
push
loopne
or
mov
sar
pop
mov
sti
imul
pusha
pop
lcall
or
add
fbstp
rorl
inc
ja
ss
fcom
out
cltd
arpl
dec
add
rolb
adc
es
decl
xchg
shrl
cmp
call
aas
daa
sub
pop
cmpsl
aad
xchg
cmpsb
iret
xor
js
mov
jo
pop
in
aaa
ja
inc
sub
fsubrl
and
je
lods
aad
movsl
jl
cwtl
lret
pop
imul
cwtl
in
jne
pop
adc
jmp
sahf
das
pusha
dec
pop
push
xchg
cmpsl
push
dec
lcall
mov
xchg
loop
sbb
rorl
push
or
sub
outsl
cld
lcall
shlb
es
popf
es
add
and
dec
movsb
sbb
decl
mov
into
sbb
dec
mov
adcb
shl
lret
inc
mov
shl
sub
out
fsts
pop
cmpsl
icebp
icebp
xchg
adc
jl
roll
mov
sub
sbb
insl
mov
jae
cmc
test
sbb
jne
lret
popa
js
mov
leave
cmp
sti
dec
xchg
push
inc
sbb
sti
mov
jp
pop
adc
inc
xor
inc
scas
or
loope
pop
add
lcall
sbb
sbb
dec
pusha
cmp
lret
and
out
insb
icebp
or
inc
sub
xchg
push
mov
jnp
mov
lret
mov
xor
and
mov
push
add
cmp
adc
outsl
rorb
jo
mov
loopne
fsubr
or
iret
shlb
add
xchg
ftst
outsb
jp
cmp
das
or
call
xchg
jns
shl
repz
mov
stos
push
xchg
mov
mov
sbb
popa
mov
fmuls
sub
daa
loope
and
push
pop
popaw
and
fisttpl
sbb
xchg
xlat
addr16
mov
lret
push
stos
jp
inc
sbb
or
push
hlt
insb
push
cs
mov
popf
lods
cmp
lock
dec
insb
push
sub
out
lds
cmpsl
jl
sti
cmpb
xor
adc
std
in
sbb
sbb
insl
dec
add
mov
jle
add
aaa
push
fprem
repnz
xlat
or
lcall
sbbl
push
inc
and
mov
or
xor
inc
test
mov
mov
jmp
ret
inc
adc
popa
cs
push
pop
jno
popf
jnp
adc
mov
call
movsb
xchg
and
push
jb
mov
and
or
jbe
pop
dec
add
cmp
mov
shrb
inc
add
add
mov
jecxz
in
pop
lods
or
stos
sbb
push
and
xor
rclb
lods
jbe
ljmp
jg
xchg
mov
jle
clc
cmp
xchg
mov
push
imul
sti
fptan
ret
jns
mov
test
pop
popf
fistl
les
or
push
xchg
sub
in
cltd
iret
adc
add
push
aad
add
ret
stos
fmuls
push
jmp
nop
jmp
push
loop
das
je
call
in
stos
cmp
test
and
mov
mov
jmp
cmp
jnp
call
inc
into
jle
add
enter
lret
push
xor
jmp
repnz
rorb
mov
imul
repnz
jg
sub
cmp
ror
pop
in
jmp
and
decb
mov
fs
and
stos
cmp
enter
cmc
jp
bound
mov
in
sub
stc
adc
or
pop
adc
mov
sbb
fisubl
lret
loop
add
push
push
hlt
daa
popf
and
sub
std
push
mov
lock
insb
mov
inc
pop
test
xchg
mov
mov
leave
insb
lcall
and
cmp
adc
out
cltd
cmp
jg
xor
enter
movsl
jno
xor
lcall
lahf
lods
cmp
mov
xor
and
imul
rcl
and
pop
cmpsl
mov
test
es
xlat
dec
push
in
mov
inc
mov
push
les
mov
inc
inc
orb
push
in
adc
sbb
pop
test
test
rcll
movsl
push
pop
orb
fsubrp
movsb
jge
aad
jg
mov
shll
pop
or
jge
push
sbb
pusha
into
shl
aaa
lret
imul
add
lret
shrl
add
mov
bnd
scas
dec
push
pop
jns
sbb
xchg
out
cmp
stc
cmp
xor
and
inc
int3
sbb
fwait
cmp
inc
test
nop
inc
xchg
push
ljmp
adc
loop
add
xchg
or
mov
push
out
mov
hlt
sti
mov
enter
add
nop
popf
cmpl
and
add
pusha
inc
aaa
addl
dec
sbb
cltd
add
je
jmp
rclb
imul
loop
lea
push
jnp
repz
cmp
orl
std
iret
push
mov
scas
xchg
scas
or
test
push
push
xchg
ret
pop
cmp
sbb
mov
push
xor
ljmp
pop
bound
and
jne
roll
push
test
jl
cmp
push
lock
andb
imul
push
ds
jne
sub
insl
shrl
fdivrs
repnz
jns
sub
lods
stos
push
push
and
xchg
pusha
cmp
cmp
and
adc
mov
cmpsb
mov
lock
sbb
rorl
push
or
fcomps
jb
das
add
repnz
leave
in
mov
dec
cltd
jo
test
sahf
sarl
scas
leave
or
mov
fcmovnbe
addl
outsb
mov
push
data16
decl
fidivs
mov
movsb
sub
int
jae
sahf
pop
in
sbb
fs
xor
pop
jns
clc
sub
mov
cmp
xchg
or
jge
icebp
das
jmp
push
xor
add
inc
xchg
xchg
mov
and
fmull
add
cltd
int3
sbb
addr16
and
daa
push
adc
dec
and
shll
pop
nop
sub
xchg
jg
jbe
fimuls
sarb
and
ja
cmpsl
or
fistpll
outsl
adc
iret
inc
outsb
pop
sub
scas
int
xchg
rclb
cmpsl
mov
jmp
mov
jecxz
scas
lret
fs
mov
pushf
cmp
mov
shlb
stos
add
scas
or
push
cld
dec
mov
add
sub
leave
mov
jne
hlt
mov
jl
arpl
pop
jge
test
orb
das
out
mov
jg
xchg
les
push
insl
cs
pop
mov
mov
xchg
scas
mov
shll
fistl
adc
inc
scas
inc
test
pusha
aas
push
push
adc
popf
in
jb
jb
xchg
movsb
or
popa
fsubs
ja
adc
cmp
xchg
dec
xchg
stc
addb
sub
push
dec
ljmp
lock
mov
dec
or
data16
shll
xor
add
stos
jl
adc
outsl
jnp
add
sbb
sbbl
out
fldenv
mul
ficomps
sahf
add
ret
fstps
lods
xor
cmpsl
inc
rorb
or
xor
faddl
lret
push
movsl
mov
xchg
inc
dec
cltd
sub
mov
and
mov
int
enter
movsb
mov
mov
adc
test
dec
mov
xor
test
pop
call
pop
add
decb
int
sbb
std
jno
stc
sbbb
and
pop
stos
pop
and
or
nop
scas
push
and
cwtl
sbb
jb
push
pop
add
movsb
sbb
test
fwait
in
xor
mov
in
or
xchg
sub
or
outsb
xor
sbb
fstps
mov
xor
out
in
cmp
dec
lock
xchg
dec
call
dec
int3
mov
lds
jnp
pop
or
cmpsb
loope
or
enter
jl
movb
in
sub
stc
cwtl
sub
jle
adc
sbb
push
and
push
and
in
jl
adc
xor
scas
sarl
dec
push
int3
add
inc
ja
or
adc
mov
in
push
dec
xchg
jecxz
mov
pusha
arpl
fsubrs
out
push
sbb
dec
mov
jl
addr16
cld
mov
fldl
jp
aaa
jno
cs
jns
mov
jbe
std
sub
xchg
cmpsl
imul
cmp
mov
test
push
or
sbb
ret
popa
std
push
cmc
pop
fidivrl
push
push
mov
mov
pushf
push
xchg
fcompl
in
inc
jo
inc
mov
out
push
lahf
aaa
adcb
test
mov
das
inc
cmp
pop
imul
out
fdivrl
aaa
int
addr16
dec
or
sub
daa
push
xchg
mov
cmp
inc
jmp
sub
push
add
stc
lret
mov
stc
lea
inc
addr16
mov
mov
enter
sub
and
cmp
or
jp
and
int3
cli
dec
popa
ret
and
in
loope
push
movsl
cmp
popa
les
sub
leave
pop
into
push
mov
addl
mov
adc
fcompl
pushf
or
cmp
and
jl
push
add
sub
dec
loope
pop
xor
pop
lods
mov
mov
arpl
in
stos
mov
ja
andb
pop
imul
push
adc
mov
push
mov
daa
fldt
das
gs
mov
jmp
ds
or
push
jae
jge
jmp
push
xchg
in
insl
repnz
push
call
leave
jo
push
out
adc
aas
gs
pop
cmp
fsubr
testl
xchg
hlt
sub
lods
xor
inc
push
repnz
cmc
fs
push
repz
add
ret
pop
popa
divb
imul
mov
dec
cwtl
ret
push
pop
cwtl
ja
and
clc
push
jne
out
push
out
cmp
into
pop
sbbl
push
or
scas
fildl
sub
xor
cmp
sbb
xor
decl
pop
movsb
push
cs
cmp
ljmp
dec
icebp
mov
sbb
push
imul
mov
loope
push
pop
push
aam
mov
fistpll
jno
ret
fs
push
pop
mov
mov
xor
gs
jle
xor
gs
call
insb
adc
cmp
and
mov
inc
rclb
adc
add
xor
add
clc
add
adc
jb
out
or
xchg
mov
cmp
add
scas
mov
mov
jo
fnstenv
and
dec
jbe
fwait
adc
dec
les
ret
pop
or
mov
jecxz
icebp
adc
test
push
clc
inc
pop
or
mov
xchg
fwait
cld
int3
xor
or
adcb
and
xchg
pop
sub
sbbb
mov
aaa
repnz
daa
mov
mov
sarl
movsl
js
shll
push
and
repz
xchg
xchg
mov
mov
clc
repnz
and
sub
and
xchg
mov
xchg
ficoml
aaa
mov
add
or
xor
sbb
sub
insl
mov
sahf
xchg
int3
push
mov
or
jne
add
shlb
sti
mov
sbb
mov
fildll
enter
into
stc
cmpsb
lds
xchg
inc
push
rcll
pop
lea
repz
sub
pop
repnz
in
sbb
xchg
xchg
sbb
insl
push
cld
push
out
mov
pop
pusha
push
mov
push
mov
and
fld
adc
cltd
mov
xor
or
lcall
adc
cmp
sar
movl
jnp
jbe
call
arpl
add
iret
dec
in
cltd
aad
mov
call
or
loope
xchg
push
jns
or
es
mov
mov
add
cs
rclb
push
shlb
loope
dec
or
fs
addr16
outsl
jnp
sbb
xor
sub
rcll
xchg
push
fwait
test
clc
lods
inc
mov
in
adc
fdivl
shlb
xchg
scas
nop
enter
fidivrl
mov
adc
les
sbb
fs
xor
rcrb
jnp
sbb
adc
test
mov
imul
push
add
mov
or
xchg
or
gs
mov
jnp
xor
sti
push
pop
rolb
inc
adc
jmp
in
dec
rorb
subl
aam
nop
xlat
stos
jae
test
xor
mov
popf
outsb
clc
mov
ficomps
adc
in
or
cmp
push
mov
sub
shll
test
mov
fbld
orl
add
push
mov
mov
push
rolb
dec
sarl
xorl
je
rorb
push
sahf
int3
mov
mov
mov
das
mov
subl
movsl
cwtl
jne
sbb
adcl
in
hlt
test
xlat
sahf
dec
sbb
mov
jae
aam
inc
pop
xchg
ss
out
and
fists
adc
jl
lds
or
popa
lcall
lds
ror
ss
ja
xor
add
out
or
inc
fadds
js
push
pop
xchg
sub
or
sbb
outsl
repnz
xchg
stc
sub
lds
adc
inc
scas
andb
ficoms
dec
cli
push
push
pusha
into
movsl
stc
and
xchg
or
jmp
aaa
or
dec
lcall
pop
add
mov
dec
jmp
int3
mov
mov
adc
je
test
in
xor
pop
sub
adc
mov
sbb
fcmovnbe
fdivrl
mov
xchg
and
lret
xchg
pusha
ret
fnstsw
out
mov
mov
inc
outsl
cmp
sbb
inc
mov
loope
shlb
sbb
cld
mov
mov
or
add
xchg
loope
jg
push
ret
call
out
loope
xchg
or
jmpw
fists
stos
mov
es
fldl
cmp
stc
push
imull
adc
fwait
sahf
add
clc
movsl
cmpsl
push
das
inc
call
scas
mov
add
pop
inc
and
outsb
popa
testl
mov
enter
nop
icebp
cld
mov
int
push
sub
push
faddl
cmp
push
dec
push
pop
jle
pop
jns
push
xor
mov
jg
adc
mov
stc
gs
pop
cmp
xchg
lds
dec
popa
add
inc
push
in
mulb
repnz
cld
lcall
mov
mov
mov
mov
push
sub
sub
and
std
and
loope
jae
ss
repnz
lret
std
sub
data16
sbb
fidivs
or
enter
pop
mov
jne
dec
sbb
test
mov
mov
and
sub
roll
fbld
cltd
pushf
push
mov
popf
not
xchg
pushf
in
into
adc
mov
imul
out
dec
mov
rclb
sbb
in
sub
cmpsb
xlat
and
cli
pop
mov
gs
cmpsb
mov
xchg
add
scas
daa
sbb
cmp
outsl
out
adc
repz
inc
push
mov
int
in
and
sub
int
shrb
xor
rcr
or
fldt
je
sbb
cmp
mov
jb
dec
jns
fnstenv
fsubp
popa
or
stos
xchg
lods
aam
call
and
aaa
push
adcb
cmp
cli
xor
cmp
stos
add
adc
out
enter
aas
push
mov
dec
and
jg
jnp
jp
jg
sub
int
jp
lret
loop
fstp
sub
pop
xor
inc
cwtl
dec
pop
mov
stos
jp
subb
mov
jmp
into
jle
cmp
in
neg
mov
push
pushf
les
mov
xchg
jmp
xorb
outsl
jp
clc
daa
hlt
or
push
lds
les
aas
inc
pop
push
cmp
out
imul
cmp
movsl
jbe
sub
js
fbstp
and
and
cld
cmpsl
add
aas
xor
sub
fsts
scas
loopne
sbb
cmp
inc
push
jae
add
cmp
lock
mov
mov
xor
inc
repz
les
xor
stc
push
mov
aam
push
jg
sub
jns
inc
or
push
lret
or
sub
dec
and
daa
scas
pusha
js
jnp
loopne
aad
jl
push
movsl
aaa
cltd
jle
pop
aam
mov
test
aaa
pop
push
or
mov
adc
mov
sub
stc
xlat
mov
out
cmc
aam
inc
aam
jmp
jmp
add
fnsetpm(287
lds
notl
cmp
sbb
pop
nop
cmp
enter
aas
orl
and
mov
lds
sub
mov
or
mov
push
mov
sti
pop
mov
mov
sbb
fnsave
and
mov
lret
leave
in
jle
jno
mov
movsb
fwait
stos
mov
negb
mov
out
mov
sbb
das
xchg
insb
xchg
ret
sbb
rol
into
shlb
mov
into
stos
pop
mov
ds
insl
fdivl
xorl
push
nop
pop
xchg
sbb
aad
sahf
js
xor
test
adc
and
inc
push
push
dec
pusha
sahf
idivb
hlt
sbb
jg
fdivrs
push
call
adc
xchg
imull
inc
iret
dec
test
test
adc
jp
movsl
std
mov
push
shr
xchg
adcl
test
ss
add
xor
xchg
inc
sbb
jns
in
sbb
insl
dec
jne
and
dec
lock
cwtl
add
jbe
shl
or
bound
sbb
shlb
loope
aas
ljmp
push
cmc
mov
movsb
add
aas
inc
xorb
fldenv
add
fwait
call
inc
es
stos
jae
sub
push
ja
fisttps
out
or
cli
dec
sub
add
mov
ss
aam
xchg
pop
js
xchg
dec
incl
mov
dec
lds
adc
fldenv
dec
dec
daa
inc
cwtl
ljmp
xchg
jnp
cmp
cli
int3
repnz
cmp
enter
fistl
inc
rolb
dec
mov
outsl
loop
call
jge
pop
sbb
pop
inc
inc
das
bound
fildll
mov
cmpsl
dec
adc
mov
rorb
pusha
les
int
xor
sub
pop
jo
idivl
or
addr16
jnp
mov
pusha
sbb
pop
into
inc
rcrl
popf
enter
fiadds
subb
or
mov
roll
push
aam
mov
js
mov
sti
pop
xor
daa
fld
xchg
rcr
lds
sub
push
dec
sub
out
push
xchg
push
sub
pusha
sub
in
ja
sbb
data16
cmp
dec
nop
int3
loop
xchg
mov
cmp
hlt
push
rorb
add
cmp
jnp
nop
jmp
cmp
mov
or
mov
fstpt
clc
out
sub
and
mov
cmp
adc
jp
xchg
sub
mov
push
stos
loope
xor
scas
jp
mov
pusha
ja
repz
cld
mov
sarb
int
clc
jle
mov
scas
leave
cmp
adc
out
inc
sbb
ja
lret
int3
sbbb
pop
iret
lea
notl
mov
and
sti
sarl
outsl
call
push
inc
into
cmp
sub
pop
mov
fidivrl
xchg
cld
mov
mov
and
dec
or
arpl
lods
aad
lea
sbb
repz
add
enter
and
xlat
dec
mov
cs
daa
int3
idiv
ret
sub
cmc
sbb
out
xor
push
pop
roll
imul
decb
cld
or
jnp
aaa
dec
out
movsb
jnp
mov
or
mov
or
xchg
lods
cmp
and
mov
xchg
xor
cmpl
int3
mov
lcall
xor
adc
jg
dec
les
pop
out
push
int
jno
push
dec
jb
mov
sub
cmp
in
stos
cmp
cs
fmuls
hlt
push
xor
out
and
cwtl
test
jp
sub
cmpsb
cmc
add
insb
add
in
xor
mov
jl
cmpsb
ret
xor
push
iret
mov
xchg
and
push
cli
adc
jmp
mov
out
dec
je
and
xlat
stc
cli
cltd
out
mov
cmp
jbe
aaa
push
jle
and
out
sbb
mov
mov
int3
add
loope
nop
mov
cmp
cld
jo
in
out
add
imul
xor
cmp
mov
dec
jmp
add
out
and
sbb
lock
arpl
xor
mov
dec
dec
push
cmp
pop
cli
dec
test
lods
lock
leave
test
mov
out
outsl
xor
aam
and
cmp
or
rcr
fmuls
pop
pop
dec
dec
push
xchg
push
cmpsl
mov
out
pop
xchg
shll
or
stos
test
or
stc
bound
nop
push
push
pop
int3
ret
mov
sub
cmc
adc
sarl
push
mov
stos
test
xor
inc
xchg
inc
and
push
xlat
ds
inc
and
xchg
cs
in
aaa
scas
cltd
mov
add
mov
push
call
std
mov
fidivs
add
inc
inc
jle
xchg
shlb
shr
mov
clc
push
ja
and
int
push
push
or
in
lods
mov
jnp
jl
pop
lahf
insl
fsubrl
dec
sti
test
int3
mov
outsl
insb
lcall
aas
cs
les
movsb
popl
mov
mov
fnstsw
push
mov
stos
sbb
jno
shrb
xchg
and
fistpll
stc
cmp
popa
pop
jno
jmpw
adc
ja
push
je
push
jb
loopne
inc
lahf
scas
in
sbb
icebp
pop
sbb
mov
out
sub
adc
loop
cmp
or
cwtl
into
notb
cmp
add
inc
in
int3
pop
lea
pushf
xlat
mov
rorl
push
cmp
stos
faddl
test
mov
push
push
testb
ds
jg
inc
orl
xor
push
dec
adc
dec
loope
repnz
jne
mov
push
mov
es
stos
addw
pop
dec
cmp
lret
dec
mov
lea
aas
pop
dec
inc
ret
pop
fsubs
stc
xchg
ror
daa
push
inc
cmp
xlat
cwtl
mov
fldenv
and
push
in
int3
sub
int3
jnp
mov
cmp
in
gs
mov
inc
sbb
sub
pop
push
aad
imul
or
les
jne
movsl
fmul
jbe
add
stc
adc
and
mov
push
mov
subl
lret
mov
push
cmp
sbb
aam
jmp
jbe
pushl
data16
enter
ret
mov
xchg
daa
or
je
iret
push
fidivs
mov
inc
dec
pop
in
xchg
pop
dec
xchg
jge
inc
in
mov
stos
test
cmp
stc
imul
or
hlt
jbe
jle
pop
sarl
into
popl
aas
imul
in
cmp
mov
push
cmp
mov
jb
div
int3
fmuls
and
or
loop
or
mov
mov
push
mov
add
fidivl
pop
xchg
adc
dec
std
addr16
test
sub
mov
test
cld
add
add
int3
ljmp
sbb
cwtl
scas
enter
cmp
inc
in
into
inc
insb
ds
fidivrs
xchg
or
in
pop
icebp
lods
cmp
insb
outsl
sbb
pop
xlat
lret
add
xchg
push
dec
fstpt
adc
jle
push
mov
shlb
dec
sbb
test
mov
or
inc
lock
adcb
and
jle
nop
pushf
in
or
sbb
xor
cmp
mov
and
jp
cmp
dec
adcl
push
rclb
mov
ljmp
mov
je
fs
inc
adc
inc
fcompl
dec
clc
jae
mov
jbe
jle
movsb
lods
addr16
mov
jb
iret
and
in
cld
outsb
add
sub
sahf
push
push
or
push
rsqrtps
sti
testl
jbe
or
jecxz
cmpsl
add
incb
repnz
sbb
jno
out
mov
lds
pop
ja
mov
lods
aas
inc
push
movsb
divl
fwait
call
in
mov
out
fwait
ret
call
loope
jl
mov
into
outsl
or
jnp
ja
mov
fnstcw
jle
dec
in
and
pop
sbb
ret
jmp
push
lahf
xor
rcrl
ret
cmp
iret
bound
insb
das
dec
push
and
add
dec
push
pusha
push
add
and
pop
mov
pop
call
jge
or
dec
std
insb
mov
cwtl
xor
sahf
xchg
gs
fwait
stos
adc
sub
inc
mov
mov
les
subl
out
push
jbe
pop
xchg
sti
fimuls
bound
loop
dec
xchg
adcl
outsl
insl
ds
imul
loop
in
jecxz
or
mov
out
jmp
das
jl
inc
movsl
lahf
push
fnsave
loop
push
stos
dec
fmul
cmpsl
xchg
mov
dec
call
cltd
mov
daa
cmp
nop
xchg
jae
cwtl
imul
ss
cmpsb
call
bound
mov
push
sub
testb
das
icebp
and
notb
inc
pop
dec
dec
or
out
lea
fldcw
mov
ds
lods
sbb
aas
data16
loopne
cs
addr16
or
push
dec
jnp
out
pop
sub
pop
sub
cmc
jp
stos
jb
xchg
mov
lds
jle
adc
jle
cltd
fstpt
push
xchg
jb
add
and
aas
out
movsl
pop
xlat
stos
sbb
ret
jae
std
fwait
dec
pop
das
or
dec
or
xchg
jb
pop
into
or
fwait
sbb
inc
in
lcall
int
addr16
addr16
mov
xor
data16
push
rcrl
sbb
add
mov
inc
push
rcr
enter
sahf
pop
gs
xchg
cmp
outsl
push
xorb
dec
jge
ret
test
out
cmp
pop
loope
ds
pop
das
inc
cmp
xchg
ja
mov
pop
in
icebp
test
fadds
jg
xchg
lds
push
mov
sbb
movsl
xor
cs
inc
jecxz
nop
aas
arpl
cmp
rol
repnz
sbb
cmpsl
insb
sbb
add
mov
inc
xor
xor
scas
mov
inc
and
jne
push
sub
aaa
xchg
mov
fisttps
xor
test
push
in
push
cmp
or
pop
ljmp
xor
push
sub
in
rol
xor
mov
sbb
cwtl
roll
xor
cmp
loopw
pop
insb
lods
outsb
in
push
scas
pop
mov
jecxz
adc
mov
inc
adc
push
testb
data16
lea
mov
loop
in
mov
scas
or
add
dec
dec
inc
or
es
sbb
and
ret
cmc
loop
mov
repnz
loope,pn
sub
mov
dec
pop
add
xchg
ss
out
push
push
push
bound
jbe
pop
jmp
sbb
mov
out
leave
loop
cmp
icebp
lods
jne
sub
push
les
pop
cmp
add
dec
rorl
out
daa
push
int
jle
sbb
repz
mov
xchg
das
and
and
repz
and
and
loope
mov
stos
les
mov
xchg
pop
xchg
rclb
pusha
lods
andl
test
and
fdivp
fwait
rol
scas
or
mov
std
or
push
sub
xchg
shrb
or
cmpl
ret
mov
addb
adc
mov
mov
cmp
sbb
rclb
sub
cmp
lcall
cmp
mov
push
insl
rcrl
dec
sub
xor
out
repz
mov
pop
jl
repz
sbb
xor
jp
jno
add
mov
call
dec
and
xor
add
mov
dec
jmp
sub
add
aad
pop
jle
mov
inc
xor
in
pop
mov
rcr
stos
sbb
cmpsb
mov
ret
shlb
push
push
mov
fsubl
ja
sahf
pop
mov
cmp
in
mov
loopne
leave
sbb
xchg
jae
mov
in
es
lods
cltd
scas
out
sbb
popa
fidivs
lods
arpl
mov
xor
xchg
jns
pop
push
inc
orl
push
loopne
mov
dec
iret
arpl
or
or
lea
into
test
xor
loopne
cld
adc
int
or
pop
fldl
push
add
or
int3
push
aad
aaa
mov
fsubr
rcrb
into
aad
aas
push
outsl
out
mov
xor
ja
push
push
rorb
or
dec
adc
test
jl
shlb
sbb
lds
aad
jge
ljmp
xor
and
mov
push
loop
push
push
or
cmp
lea
in
and
inc
xlat
or
scas
bound
lahf
jle
jns
jmp
jle
mov
lods
push
mov
lahf
inc
das
lods
repz
popa
scas
xor
aas
pop
dec
test
cli
scas
mov
rolb
or
xchg
xlat
jns
xor
xor
mov
adc
pop
xchg
sbb
jp
jb
add
in
mov
inc
cltd
das
in
repnz
xchg
xor
push
and
jae
jae
mov
mov
shrb
push
pushf
in
int
sbb
cmp
jae
cmp
mov
and
dec
add
and
xor
rclb
mov
sbb
in
or
mov
xlat
push
jp
dec
in
jge
or
fimull
insl
psraw
test
cmc
cmc
mov
repnz
xor
out
push
mov
mov
mov
mov
leave
out
push
repnz
dec
inc
call
lahf
cmpl
xchg
out
lret
xor
cwtl
ret
sub
lock
pop
or
cmp
jo
cmpsl
out
movsb
push
sbb
cmp
loope
loope
das
pop
mov
stos
inc
xchg
jno
inc
sub
xlat
lods
mov
hlt
adc
fsubrs
sbb
stos
ja
outsb
fbstp
inc
xchg
cmp
pop
cmp
adc
outsb
aad
mov
dec
add
lcall
add
push
loope
mov
lret
fsubrl
adc
cmp
xchg
jmp
test
stc
push
fdivrp
jle
push
mov
and
lods
xlat
cmp
or
push
push
fbld
lock
decb
clc
sub
lret
aaa
les
mov
std
outsl
mov
fdivrl
int
aas
mov
lahf
pop
repz
test
jo
aad
jmp
vpsubsw
jb
ret
inc
movsl
or
add
sbb
stos
mov
pushf
xchg
inc
mov
aas
mov
test
out
ljmp
cmpsl
xchg
ret
int
call
fdivl
inc
add
aas
pushf
mov
mov
mov
or
adc
sub
add
adc
jp
lahf
jo
cmp
out
divl
ret
xchg
movsl
xchg
insb
mov
or
mov
lret
sbb
mov
add
loop
ficoml
clc
aas
ja
sbb
cmpsb
sti
fildl
hlt
in
imul
sub
out
sbb
pop
cltd
js,pt
shl
ret
int3
and
daa
sub
push
popa
fdivrl
test
fstl
xlat
push
push
je
scas
cmp
cmpsl
mov
dec
push
hlt
xlat
cmp
mov
sbb
pushf
jle
and
dec
stos
loop
testl
mov
hlt
dec
sbb
push
sbb
shr
call
mov
mov
fs
in
out
pop
inc
jae
sub
inc
stc
cmp
mov
sub
pushf
jne
fldl
xchg
out
std
jo
imul
sub
sbb
mov
cmp
addr16
shr
pop
popa
sub
mov
or
pop
js
pop
mov
jg
xor
outsb
aad
and
mov
sub
cmp
ss
hlt
push
es
ljmp
imul
cmpsb
inc
repz
mov
or
ljmp
in
cwtl
movsl
icebp
xor
test
lret
call
cltd
fwait
sub
imul
cmpsb
push
mov
push
adc
sbb
push
sti
jle
cmc
push
pop
mov
inc
sub
les
movsb
mov
out
pop
inc
and
adc
inc
mov
loope
dec
inc
mov
mov
pop
add
or
pop
fldt
loopne
pop
jmp
pop
int3
or
mov
jne
cs
out
call
inc
cmp
ljmp
mov
sbb
or
jbe
sub
faddl
rorl
jnp
cmp
push
cmpsb
fstps
push
mov
mov
xlat
loop
cmp
sub
push
add
out
mov
xor
aad
adcb
scas
loop
mov
pavgw
cmp
xchg
je
adc
xchg
mov
shlb
test
hlt
movsl
or
in
pop
ret
scas
test
test
insb
xor
mov
dec
adc
ds
jmp
or
xchg
mov
lahf
cmp
dec
into
repz
fcomip
ds
and
dec
xchg
pushf
test
scas
ja
sbb
add
cmp
inc
and
test
xor
loop
xchg
mov
leave
or
mov
pop
xor
sub
ret
add
add
ficompl
out
push
adc
adc
jnp
push
dec
js
cmpsl
pop
mov
lcall
arpl
dec
ret
aaa
push
lds
mov
ja
and
push
aaa
push
adc
xchg
pop
inc
push
sbb
out
mov
andl
inc
js
iret
add
push
jl
cmp
stc
pop
dec
cwtl
pop
lods
or
in
fisubrl
loopne
xchg
out
fdivl
andl
and
std
les
jmp
lcall
aas
dec
xor
add
mov
decl
sub
les
jle
js
shlb
subb
lods
xor
dec
test
xchg
inc
pop
call
das
fcoml
ret
or
and
push
xchg
lods
or
mov
xchg
mov
xor
xor
pop
inc
std
fnstcw
imul
add
stos
imul
and
inc
cmpsl
rorl
push
mov
jb
lock
daa
scas
sbb
fxch
addr16
mov
lea
adc
movsl
in
std
loopne
pop
test
mov
xchg
fstpt
mov
xor
push
outsb
stos
paddd
loope
fnop
lods
jbe
jl
xor
cmp
in
stos
jo
in
movsl
jbe
xor
and
dec
xor
iret
push
jle
aas
stc
pop
inc
add
jbe
int3
enter
mov
imul
ljmp
add
and
inc
loopne
pop
sbb
popa
add
xor
ret
popa
or
cmp
cmpsb
mov
adc
sti
out
mov
sbb
jnp
mov
mov
aas
pop
push
test
lret
inc
pusha
movsl
out
popa
jmp
into
jbe
int3
pop
or
cmp
adc
leave
ror
int
and
je
mov
frstor
subb
jnp
inc
sub
cmc
iret
loop
jnp
pop
xor
cs
xchg
loop
jge
scas
stc
pusha
scas
sbb
cmpsl
leave
nop
xor
jmp
sub
repz
sbb
es
lahf
and
iretw
mov
mov
xor
mov
adc
insl
mov
mov
jmp
out
out
pop
test
or
add
xlat
cmp
inc
push
mov
sub
lock
cmp
insb
lret
push
or
subl
ja
push
inc
or
jae
or
loopne
mov
mov
sub
cld
sub
cmp
sub
ljmp
hlt
lods
pop
ds
cli
mov
adcl
fwait
mov
cmc
sarl
jg
xor
mov
psubq
xchg
je
imul
ror
clc
cmp
inc
mov
xor
call
imul
daa
xorb
fsubrl
lahf
inc
nop
mov
out
fcmovu
negl
mov
mov
insb
hlt
cmp
rcrl
lret
stos
add
scas
rorb
and
jno
cmp
jmp
mov
mov
vmread
jp
xchg
adcl
pop
inc
stos
inc
adc
pop
shl
dec
xor
cld
mov
insl
jmp
int
test
outsb
adcl
lods
and
push
mov
popa
adc
push
dec
jg
lret
sub
push
sti
data16
out
popl
dec
js
aad
sub
jmp
cmp
pop
inc
sbb
fimuls
push
add
imul
clc
outsb
cmc
sahf
xchg
addr16
sub
stc
testb
imul
xchg
mov
pop
sub
jecxz
sub
sbb
or
rorl
out
lcall
adc
jnp
imul
or
mov
sbb
in
call
aaa
xchg
ja
and
gs
sub
dec
pop
dec
mov
out
sbb
sub
or
stos
jo
daa
sub
jmp
imul
pop
add
push
sub
lods
fs
cmp
dec
push
arpl
cmpsb
xchg
adc
cwtl
adc
insb
dec
push
fiadds
test
stos
cli
and
and
inc
test
cli
xchg
sbb
dec
dec
mov
jae
jne
mov
stos
push
sbb
xchg
jae
les
sub
pop
pusha
cltd
out
icebp
and
popf
outsb
fsub
or
sbb
shll
xor
cwtl
aad
xor
sub
and
loope
pop
sub
push
xchg
jne
dec
pop
mov
jnp
js
xchg
je
push
mov
xor
aam
add
mov
inc
mov
sbb
daa
xchg
bound
push
cmp
out
sbb
aad
jg
xor
push
loope
jg
test
addr16
push
call
ret
push
jbe
scas
jle
add
fcomp
in
push
mov
inc
out
std
dec
cmp
sub
dec
ljmp
repz
int3
gs
and
adc
mov
sbb
inc
jne
push
cli
ja
rolb
add
ljmp
inc
pushf
fidivrs
test
xchg
test
mov
sbb
in
bound
cmp
negb
hlt
outsl
jnp
fwait
out
add
fimull
pop
ds
pop
leave
mov
inc
hlt
cmp
leave
pop
shll
jb
imul
jmp
scas
mov
call
repnz
mov
mov
js
xlat
loop
in
mov
or
nop
sbb
stos
add
out
fcoms
ja
lret
push
mov
faddp
cmc
add
or
mov
xchg
mov
out
dec
dec
mov
inc
add
mov
lods
popf
cmc
pop
sub
aam
pop
push
les
repnz
in
push
fcomps
aaa
xor
aaa
add
pop
les
or
pop
or
movsb
sbb
cli
neg
punpckhbw
in
dec
dec
lret
push
adc
movsl
mov
div
ljmp
jno
push
stos
xor
cmp
jbe
out
outsl
pop
inc
pop
std
inc
xor
in
pusha
enter
adc
push
lds
xor
lods
xchg
push
sti
lcall
aam
sub
sbbb
pop
ja
xchg
add
loope
lret
andb
add
jg
mov
rcll
jmp
fldenv
jmp
aas
xchg
or
repnz
cmpsl
sub
inc
filds
add
adc
fwait
mov
popa
les
xchg
xchg
fstps
mov
int3
xchg
mov
shlb
call
insb
test
xchg
loop
pushf
dec
add
push
scas
ja
sub
cmpsb
xorl
adc
mov
jo
mov
xchg
data16
adc
xchg
cmp
add
addl
pushf
dec
jae
jb
inc
test
icebp
jbe
mov
mov
fwait
push
lods
mov
jl
fs
imul
mov
je
xchg
es
out
or
movsb
pop
roll
cwtl
pop
popa
aaa
xadd
mov
jl
and
pop
push
scas
outsl
repz
adc
iret
mov
ss
ja
pop
data16
jmp
mov
mov
jmp
stos
repz
sub
pop
inc
lock
jno
push
sarl
xchg
mov
std
mov
ficomps
sub
and
or
mov
filds
cwtl
or
cmpsb
cmpsl
sbb
or
jno
jg
push
cmpsl
std
mov
fists
bound
aam
std
add
inc
dec
icebp
push
or
loope
mov
xor
out
dec
int
leave
cmp
in
scas
jg
fisttpll
ds
in
jmp
jmp
in
rolb
xchg
dec
repz
push
xor
mov
into
sub
xchg
or
cmp
mov
pushl
loopne
fcoml
loopne
xor
sbb
daa
into
and
inc
sbb
or
sbb
pop
xchg
clc
jns
sbb
cmp
jbe
push
sub
ljmp
xchg
ljmp
stos
pop
popa
jg
imul
lret
out
sub
sbb
rol
shll
adc
push
fcmovb
xor
mov
cmpl
add
ror
test
push
push
inc
sti
sub
mov
xlat
xchg
mov
cltd
push
dec
pushf
mov
sbb
ja
sbb
hlt
and
or
push
dec
fcoml
jno
dec
cltd
mov
shll
icebp
mov
lds
push
das
leave
inc
stos
mov
in
push
fiaddl
inc
xor
bnd
xor
mov
imul
ret
or
or
imul
xor
inc
mov
mov
js
push
push
or
or
pusha
add
ds
inc
loope
add
insl
idivl
mov
lret
emms
and
pop
lods
fs
daa
cmpsl
pop
mov
cltd
xlat
es
dec
loopne
test
aad
mov
adc
sub
inc
mov
rcll
repnz
fsubl
jae
mov
pop
sbb
andb
cmp
aaa
bound
call
sbb
loop
inc
add
pusha
imul
pop
pop
add
insl
pop
insl
add
or
mov
mov
cmc
pop
test
ds
jmp
test
adc
jle
jmp
sub
cmp
fprem
imul
pop
js
aas
adc
and
outsb
mov
push
nop
ds
mov
mov
sbb
ret
and
mov
dec
sbb
arpl
les
pusha
test
faddl
ss
mov
sub
mov
xor
loop
push
cmpsb
mov
std
fdivrp
sbb
dec
jae
xor
push
cli
jns
subl
jmp
mov
mov
jae
insb
add
dec
neg
sbb
or
pushf
stc
push
push
and
les
jne
pop
les
movsb
filds
test
mov
dec
dec
aam
or
mov
mov
stos
cld
inc
lahf
xor
jle
pushl
cmp
fcoms
xchg
push
lret
cmpsb
adc
aam
scas
xchg
mov
icebp
or
sbb
xor
or
and
or
in
roll
pop
out
out
mov
jmp
out
bound
dec
les
cmp
push
jmp
xor
dec
icebp
cld
pop
fiaddl
arpl
test
adc
xchg
jmp
push
push
inc
scas
mov
pop
test
fs
ret
pop
and
cltd
into
jbe
jns
inc
push
cmp
pop
pushf
mov
and
leave
mov
or
inc
testl
adc
daa
xor
xchg
mov
mov
mov
dec
mov
popa
icebp
adc
inc
nop
aaa
or
lds
enter
bnd
in
outsb
mov
fildl
dec
rorb
stos
jle
dec
inc
mov
loopne
and
imul
out
xor
insl
test
test
dec
daa
or
jb
loope
lcall
fldl
mov
adc
and
sbb
jle
add
int3
lds
sub
fiadds
mov
or
xchg
push
in
ss
inc
rolb
mov
inc
pop
or
cmp
push
popa
out
push
push
ljmp
dec
iret
xor
jg
sub
pop
out
inc
jg
shrb
push
push
push
mov
dec
or
and
xor
jg
jno
dec
sub
ljmp
mov
dec
pop
rcrl
pop
std
jecxz
addb
out
push
aaa
mov
or
or
scas
xchg
xchg
roll
mov
fisubs
jecxz
scas
pusha
inc
dec
js
dec
fstl
call
mov
mov
inc
es
sub
pop
xlat
je
push
pop
jmp
out
inc
jl
cmpsl
mov
lock
or
push
in
aad
insl
scas
sbb
xor
push
adcb
dec
cmpsb
in
jbe
sti
and
movsl
mov
hlt
mov
iret
icebp
call
outsb
jecxz
sbb
dec
imul
call
test
dec
test
fdivp
xor
sahf
inc
and
or
iret
movb
lods
jmp
jmp
pop
dec
repz
sbb
push
cmc
dec
pusha
ffreep
stc
out
imul
cmp
pop
mov
push
mov
lds
das
ljmp
push
or
cli
sub
inc
scas
or
imulb
das
pop
loop
jno
push
shlw
cmpsl
mov
enter
dec
mov
movsb
cs
arpl
xor
or
into
jo,pt
pushf
sbb
in
fisttps
mov
out
sub
test
stos
xchg
adcl
mov
arpl
jae
inc
jmp
test
scas
call
jp
rcl
mull
pop
test
xchg
cmp
push
jecxz
enter
fs
outsl
test
mov
cld
push
add
int3
cmovle
jge
mov
and
mov
jmp
out
into
mov
stos
imul
adc
pop
add
out
mov
test
mov
xor
bound
ljmp
xchg
pusha
das
inc
cmp
arpl
pop
pop
pop
enter
mov
cmp
shll
aas
add
xchg
xchg
and
cld
jmp
test
pop
fwait
clc
pop
loop
add
jb
mov
and
imul
dec
jecxz
arpl
xchg
dec
lods
test
dec
add
test
inc
mov
lods
leave
arpl
or
xor
insl
loop
xchg
inc
iret
sbbb
xchg
inc
inc
jno
dec
mov
ljmp
xchg
fucomip
leave
push
mov
push
mov
roll
sbb
rolb
adcl
sbb
mov
mov
pop
daa
jp
cmpsb
push
mov
jno
bound
cmp
dec
imul
pop
call
stc
pop
lods
fwait
lds
adc
in
outsl
loop
lahf
mov
xlat
gs
dec
popa
dec
adc
mov
ljmp
sbb
and
xchg
mov
sbb
adc
push
jo
loop
or
adc
mov
push
sbb
lds
xchg
stc
sub
mov
push
cmpsl
fucomp
out
and
jnp
sbb
mov
or
xorl
imul
cmp
repnz
xor
out
push
out
cmp
adc
inc
sub
scas
scas
fwait
int3
mov
loop
push
shlb
add
stc
repz
mov
stos
pop
mov
mov
test
lahf
imul
in
xor
data16
jne
pop
or
xor
xchg
stos
js
push
add
pop
add
mov
pop
fcoms
xor
in
shlb
xor
xchg
loop
in
cmpsb
shll
addl
lds
fiadds
mov
and
mov
subb
cmpsl
in
jns
cmp
xchg
cmp
or
imulb
xor
push
flds
xchg
outsb
sbb
adc
hlt
pop
jmp
andl
add
push
inc
mov
lock
cs
add
aaa
sub
or
jns
in
and
push
or
bound
dec
cs
out
testl
jno
pop
clc
jnp
mov
sub
repz
adc
fwait
mov
push
lret
ljmp
xchg
push
lcall
add
pusha
jae
or
insb
mov
mov
out
and
insl
bndstx
cmpsb
dec
addr16
xchg
jns
fsubl
mov
lods
pop
adc
lds
xor
out
adc
ljmp
jae
jp
rorl
mov
push
sub
adc
push
sbb
add
add
jge
mov
pop
lea
pop
xchg
push
mov
jne
push
add
loope
cwtl
mov
insb
lods
pop
xor
pop
pushf
cmp
pusha
xor
xor
ss
push
lret
out
cmpsl
mov
adcl
pop
mov
jmp
and
cmp
and
out
add
shlb
jno
dec
pop
insl
gs
lahf
int3
fsub
inc
pop
int
xor
psrad
test
scas
push
and
pop
rorb
ret
and
lds
jmp
fmull
mov
pop
pop
scas
hlt
xchg
cmp
inc
insb
mov
mov
sub
nop
repz
cmp
push
jnp
jp
sti
loope
jg
sub
mov
lahf
add
cs
testb
push
jl
pop
add
jb
jb
pusha
jl
push
add
std
fcmovb
outsb
mov
repnz
xchg
icebp
sbb
mov
inc
push
jae
inc
fstps
adc
in
mov
pop
mov
or
jmp
push
and
repnz
lea
or
pop
mov
addb
jg
and
xchg
or
xchg
es
jmp
pop
lahf
push
adc
mov
loop
inc
push
mov
pop
mov
mov
cmc
lret
jl
lcall
ljmp
add
pushf
pop
and
int3
sbb
fstps
xchg
popa
popa
or
test
test
pusha
cmp
notb
inc
pop
out
and
cmp
jecxz
jno
dec
pushf
xchg
fdivrs
or
sbb
stc
hlt
mov
dec
jecxz
jmp
testb
repz
sub
in
fiadds
outsl
xor
inc
mov
xlat
dec
and
hlt
adc
movb
and
ljmp
in
outsb
sub
mov
pop
add
jo
dec
xchg
arpl
daa
sarb
and
cmp
enter
addr16
daa
cmp
fwait
push
adc
dec
repnz
pop
sub
popf
call
sarb
lret
xor
sbb
test
xlat
mov
data16
test
xchg
xchg
repnz
cwtl
xchg
adc
mov
into
jne
mov
sarl
jecxz
cmpl
jnp
and
lret
fstp
sti
fisubs
out
lods
int3
fcmovu
xchg
xchg
sti
pop
leave
inc
ret
jl
clc
pop
aam
and
clc
xchg
inc
xchg
jb
push
or
mov
or
movsl
cmp
inc
je
jmp
jecxz
adc
mov
fnstsw
adc
adc
sbbb
adc
test
popa
jmp
inc
aas
push
xcrypt-ctr
cmpsl
faddl
cmp
push
in
cwtl
sbb
fwait
jmp
sbb
mov
test
adc
insb
cwtl
pop
xchg
lds
xchg
jge
fwait
and
add
mov
subb
je
aam
out
sub
or
repz
je
add
xor
pop
call
cwtl
sub
into
repz
sub
aad
mov
pusha
jmp
jmp
inc
lret
cmpsb
sbb
push
imul
mov
out
xchg
mov
jno
rcrb
sub
jnp,pn
cltd
xor
ja
fldt
ret
mov
ja
sbb
adc
pop
xor
push
inc
lcall
mov
mov
inc
xor
je
add
jb
pop
adc
stos
xchg
loop
cli
aam
xchg
mov
lea
shlb
adcb
in
ljmp
pop
pop
pop
dec
mov
xchg
pop
mov
testb
iret
mov
or
xchg
lret
xor
in
mov
or
or
loop
pushf
push
cmp
fwait
mov
lea
rclb
jo
mov
outsb
sti
dec
rcrb
xchg
dec
inc
movb
pop
mov
inc
stos
repz
push
movl
or
mov
add
adc
lret
shlb
pop
lahf
push
shlb
or
mov
push
push
cmp
xor
shlb
push
push
pop
das
or
push
inc
hlt
outsb
imul
int
out
cltd
adc
sub
or
inc
mov
and
inc
jb
sarl
iret
mov
flds
enter
gs
add
cmp
pop
mov
inc
data16
fists
sbb
insb
jmp
mov
mov
aad
cwtl
xor
pop
hlt
movsb
mov
insl
push
fisubs
sbb
rcr
std
outsl
add
xor
popf
sbb
add
je
cs
mov
push
ss
cwtl
shll
mov
out
and
sub
int
sbb
pop
fdivrl
mov
and
test
mov
jb
sbb
cmpsl
push
scas
xchg
movsb
mov
pop
xor
scas
mov
cmpsl
add
sbb
mov
aam
out
shrl
pop
push
je
fistpll
rcrl
shlb
add
ret
dec
outsl
dec
sbb
in
andb
das
test
xor
cmp
jg
scas
sbb
out
test
push
ss
scas
out
inc
push
es
lcall
mov
in
push
adc
xchg
lcall
in
test
shll
pop
or
es
push
mov
out
pop
mov
repz
popa
in
out
xor
test
mov
mov
popa
pop
adc
ret
mov
adc
mov
xchg
and
xchg
scas
mov
jbe
cli
loope
sti
xlat
push
push
nop
pinsrw
insb
loop
and
mov
fisubrs
push
scas
mov
pop
je
push
mov
sub
mov
mov
lret
or
pop
or
lods
call
pop
cmpsb
xlat
xchg
lds
lock
sbb
std
cld
dec
xchg
push
or
cltd
cmp
push
jae
dec
add
and
scas
pop
mov
adc
push
xorb
movsl
hlt
xchg
into
push
pushf
stos
movsb
cmpl
xor
es
pop
mov
hlt
outsb
mov
lods
sahf
orl
xor
ret
nop
or
int
mov
sbb
jmp
jne
call
xor
outsb
xchg
adc
cmp
shrl
mov
in
fdivrs
arpl
jb
xchg
push
scas
mov
and
popf
movsb
and
int
std
daa
je
popf
nop
dec
lret
and
rclb
jecxz
sub
and
push
and
insl
or
cmpsl
xor
mov
ljmp
jno
bound
test
jno
inc
mov
rcl
movsl
int
jge
iret
pop
xchg
mov
push
mov
mov
mov
sub
and
cltd
jp
lods
dec
adc
sub
xor
push
mov
in
xor
mov
lcall
cmp
sub
jbe
in
shll
rclb
dec
daa
sub
pop
movsb
or
or
int3
mov
add
fstp
mov
je
leave
mov
sarl
shrb
out
dec
mov
lea
aas
inc
xchg
inc
mov
test
mov
fimuls
in
push
jns
jmp
push
dec
add
arpl
xchg
xlat
pop
jns
cmp
mov
cmp
test
outsl
pop
inc
in
lcall
leave
push
push
fcoml
pop
add
push
sbb
lods
lods
jmp
inc
add
mov
or
cltd
shll
sbb
sbb
les
jnp
xlat
cmp
jo
lret
pop
enter
das
jp
cltd
mov
mov
jae
test
inc
push
pop
test
xchg
sti
les
loop
sbb
mov
loopne
jo
xor
pop
aas
mov
lret
adc
lcall
lods
loopne
push
mov
cmp
pushw
sub
cltd
inc
add
ja
into
dec
inc
mov
mov
xchg
jle
out
insb
adc
xchg
rcll
xlat
push
jl
pop
xchg
imul
cs
ficoml
dec
hlt
or
pop
xor
dec
nop
jecxz
repnz
inc
sar
arpl
jo
cmp
cmpsl
pop
mov
sti
ss
ret
in
mov
xchg
call
into
add
mov
push
aam
leave
mov
jb
gs
push
repnz
jle
adc
loope
cmp
loopne
mov
cmc
fistl
jle
scas
addr16
pushf
stos
pop
jbe
xchg
xor
insl
xchg
or
add
mov
mov
mov
iret
es
push
jnp
dec
cmp
push
rol
std
dec
jne
push
mov
mov
in
mov
fcoms
cwtl
sbb
bsr
xor
or
lret
or
sbb
push
pop
scas
add
pop
jnp
cmp
mov
inc
mov
pop
loop
and
sbb
lcall
sbb
lcall
push
movsb
loope
sbb
pop
mov
popa
in
pop
or
sbb
aad
imul
inc
ds
pop
ret
cli
mov
adc
lods
notb
out
add
aad
push
imull
push
ret
add
push
pop
jg
sub
or
fcmovnu
arpl
cmpsl
ror
adc
pop
ja
pushf
dec
push
lods
dec
push
lcall
sub
jo
fld
xchg
dec
mov
push
lahf
mov
xchg
out
movsl
mov
or
mov
add
add
in
sub
fsubr
mov
lea
push
add
stos
xchg
jecxz
inc
jnp
stos
or
les
inc
fdivrl
push
push
cwtl
xor
movsl
cmpsl
int3
push
jge
aam
ja
insl
loop
mov
pop
sub
stos
jp
cmc
test
mov
jnp
aad
enter
stc
xchg
xchg
xchg
inc
pop
mov
lods
pop
fdivrs
push
mov
cmpsl
pusha
ss
lahf
fldl
jb
lret
dec
out
fbstp
iret
cmp
lds
jge
int
adc
loope
mov
scas
add
arpl
mov
clc
push
or
add
fwait
and
bound
pop
or
ljmp
fildll
mov
pushf
xchg
repnz
cld
lds
clc
and
mov
rolb
adc
mov
push
adc
fcompl
lods
jl
out
pop
inc
inc
cld
sbb
sub
int3
push
add
stos
cmpsl
dec
jg
call
daa
push
sbb
scas
pop
xor
jecxz,pn
lds
shll
inc
nop
dec
inc
cmc
std
cmp
cmc
fimuls
mov
lods
test
shl
adc
push
push
xchg
mov
imul
xchg
pop
aaa
or
nopl
cwtl
repnz
das
mov
pop
dec
stos
icebp
aad
adc
mov
or
or
aad
push
test
sub
or
insl
or
mov
dec
add
xchg
cmc
int
jmp
cli
pusha
es
or
adc
cld
ficomps
mov
insb
fdivs
sub
xor
sub
sub
popf
pushf
mov
inc
xor
xor
data16
lods
mov
std
cmp
xor
scas
xor
push
sub
fwait
js
or
fwait
lret
movsl
and
andl
sub
out
scas
push
adc
ret
fwait
testl
push
ficomps
mov
jg
lcall
mov
pop
xchg
adc
mov
xchg
mov
xchg
adc
ljmp
mov
lock
xchg
push
or
clc
lcall
inc
add
scas
dec
dec
sbb
mov
in
insb
add
mov
mov
pop
std
in
repz
add
mov
jg
pushf
popa
xchg
or
cs
in
dec
lds
xor
push
dec
mov
outsl
push
aad
clc
sbb
imul
jno
xchg
movsl
sbb
les
cli
mov
jge
dec
int3
out
sub
sahf
jae
les
push
or
add
mov
jbe
pop
fcompl
sar
xlat
mov
mov
ret
push
xchg
inc
test
gs
add
push
xchg
mov
xchg
sbb
mov
mov
mov
sbb
dec
lret
mov
jns
insl
into
loop
xor
sbb
es
aad
clc
jle
mov
dec
and
nop
xchg
repz
pushf
mov
daa
rcl
cmp
sbb
pop
jmp
rolb
pop
mov
sbb
cltd
and
pop
fidivrs
pop
xor
push
lock
jns
popl
in
jno
call
jl
push
jmp
jne
jno
je
out
pop
nop
outsl
and
imul
or
mov
stos
adc
iret
dec
pushl
in
test
pusha
sub
scas
and
test
movsl
jecxz
insl
sbb
pop
jns
ret
sub
ja
mov
cmp
sbb
lock
adc
lahf
andl
xlat
enter
dec
and
repnz
jmp
popf
sti
adc
cmpsb
cld
es
xor
push
int3
pop
mov
stc
push
arpl
adc
inc
fwait
lock
shr
andl
jb
xchg
fildl
fbld
aaa
sbb
and
outsl
inc
jmp
rcrb
out
iret
push
cmpsb
push
and
sub
jo
jmp
pop
xor
push
sub
jle
loop
and
jp
jp
xchg
xchg
pop
push
aas
mov
sub
in
pop
inc
pop
pushf
lcall
lret
fwait
rol
adc
xchg
push
adc
aas
xor
push
add
repz
pop
es
mov
push
adc
arpl
mov
add
push
cwtl
push
pop
mov
pop
jecxz
fnstcw
adc
add
mov
mov
scas
daa
mov
in
push
jns
adc
xlat
cli
arpl
and
adc
xchg
jbe
and
cmc
out
xchg
enter
rcrb
jae
pop
imul
or
idivb
in
mov
roll
ja
fisubl
or
stos
jno
sub
xchg
and
sbb
aad
mov
and
mov
test
xor
push
repz
scas
fwait
mov
aas
add
insb
xchg
insl
fdivl
and
shll
add
jbe
lahf
and
jbe
cwtl
fdivrs
and
cld
outsb
movsl
jg
dec
cwtl
push
push
adc
mov
and
stc
xchg
cmp
and
cmp
addr16
outsl
es
push
repz
and
stos
cli
mov
aad
ss
mov
mov
mov
loop
pusha
adc
cmp
sbb
stos
hlt
sahf
loope
and
pop
xor
popf
hlt
fucomi
icebp
iret
clc
push
dec
mulb
ficomps
not
jb
pop
mov
mov
mov
jmp
lods
cmp
stc
pop
lds
cli
sub
xor
int
push
jmp
adc
mov
xchg
fwait
test
mov
cmc
cmp
inc
mov
fidivrs
dec
adc
pop
jl
ljmp
or
jns
sbb
outsb
push
and
sbb
lea
pop
or
addr16
int3
int
mov
cmp
pop
in
sbb
movsl
jmp
sbb
sbb
shl
cmp
lahf
jg
popf
call
dec
scas
xchg
mov
adc
lcall
pop
rcr
push
stc
push
int
and
cmp
sbb
ret
jnp
push
mov
scas
adc
lods
sub
xchg
pusha
dec
xor
push
or
xorb
mov
sub
inc
fwait
cmpsb
loop
hlt
sbb
mov
pop
imul
sbb
je
in
cmpsb
pushf
pop
std
cli
mov
inc
rcrb
test
mov
push
test
push
leavew
test
push
add
and
add
xchg
xchg
les
mov
cltd
insl
jge
aam
out
repz
push
mov
and
xor
or
aad
imul
call
dec
dec
adc
dec
fbstp
jb
push
sub
cmp
add
jno
add
in
popf
lcall
shll
out
pusha
fstpl
lods
aad
and
nop
in
adc
mov
jae
out
pop
xor
xchg
test
je
mov
js
out
mov
fucom
cli
pop
pushf
dec
push
mov
sub
push
mov
pushf
lock
and
loop
mov
aam
stos
inc
sub
push
dec
jo
nop
adc
sti
xchg
divl
popa
fbld
dec
xlat
sub
push
mov
mov
xchg
jle
je
mov
mov
decl
out
dec
cwtl
mov
inc
xchg
outsb
sbb
fstpt
call
call
xor
add
sub
inc
into
subl
xchg
adc
mov
lods
lock
loopne
orl
sahf
inc
pop
mov
in
jge
mov
lea
cmp
xor
mov
and
icebp
ret
jge
loopne
push
aaa
or
adc
ss
mov
add
add
or
cli
pop
imul
popa
in
jmp
pop
into
xor
mov
mov
jo
out
ljmp
jbe
jno
pusha
sbb
iret
rorl
rclb
adc
scas
jp
lods
repnz
stos
movsl
add
jb
or
pop
push
lds
repz
lock
push
mov
inc
std
cltd
add
jae
jp
inc
inc
sbbb
jmp
adc
mov
push
cld
push
dec
xor
imul
dec
cld
cmpsb
loopne
lea
popf
and
inc
ret
sahf
xorb
xchg
inc
push
decb
movsl
stos
pusha
outsl
notb
outsl
mov
aas
or
xchg
aam
xchg
cmpsb
xor
dec
mov
add
xor
repz
mov
cmp
push
inc
mov
push
aaa
mov
lods
sub
clc
cmp
pushf
mov
jl
lret
incl
mov
lods
mov
add
js
push
jmp
lret
test
push
aas
test
sahf
pop
dec
outsl
mov
in
push
mov
add
cmpsl
ret
lret
cmp
mov
movsl
dec
dec
dec
inc
inc
pop
je
fwait
mov
mov
fcmovnb
adc
mov
mov
fdivrs
adc
mov
dec
jle
icebp
push
or
andl
or
std
into
xchg
sub
ret
mov
mov
mov
push
push
imul
aam
aaa
sbb
shlb
lods
xor
add
fwait
cmp
cmp
pop
mov
les
out
cmp
subl
push
cmp
test
mov
sbb
jp
in
mov
insl
pop
push
fwait
inc
xor
push
add
sbb
shrl
lcall
jge
arpl
cmp
sti
inc
faddl
aad
inc
repz
stos
pop
aas
sbb
cs
orb
push
lds
pop
and
loope
xor
sub
aad
es
inc
nop
or
outsb
sbb
addr16
test
mov
mov
sbb
cs
add
xor
sar
adcb
xchg
xchg
inc
ficoms
dec
cmp
popa
xchg
mov
sub
inc
stos
insl
jne
fimuls
je
addr16
test
mov
and
or
mov
push
cltd
inc
and
sbb
sti
fidivs
rolb
ja
mov
pop
mov
mov
repnz
or
lahf
mov
jl
mov
add
sbb
lahf
subb
pop
mov
scas
jle
mov
pop
pusha
dec
add
test
icebp
mov
xchg
jp
sti
pop
jne
jne
fistpll
mov
xor
push
inc
cmpsb
and
lods
scas
add
js
jmp
add
inc
mov
icebp
inc
fsts
test
sbb
jge
xor
lods
movsl
cli
sti
loope
in
adc
sbb
or
stos
sbb
jmp
mov
add
inc
fwait
adc
insb
mov
int3
adc
or
outsl
jno
lods
xchg
test
push
in
push
pop
clc
jns
xor
mov
adc
movsl
les
push
push
mov
testb
shl
pop
test
inc
push
mov
enter
mov
js
pop
aas
jg
sub
cmp
repz
daa
bound
jb
jns
cmp
out
adc
test
mov
loope
push
xlat
stos
xchg
ret
mov
dec
add
js
adc
push
and
popa
xor
nop
pop
ret
shl
repz
and
push
je
jns
add
insl
stos
dec
cmp
test
mov
idivb
imul
cltd
stc
ret
mov
hlt
xlat
ror
add
cli
dec
ljmp
add
fyl2x
nop
jb
dec
cmp
es
add
popf
fisttps
stos
sub
mov
mov
in
cmp
and
es
dec
out
in
lods
mov
test
andl
negb
popf
lret
lock
js
gs
lock
pop
push
push
loop
or
sub
test
test
stos
les
push
mov
dec
pusha
sub
aas
pop
loope
push
pop
cmpsb
in
lret
cmc
sahf
icebp
fs
pop
sbb
lret
in
shlb
and
mov
and
push
ret
or
xchg
add
dec
add
pop
mov
daa
and
pop
jo
pop
int
js
sbb
icebp
popf
xlat
adc
pop
mov
push
fdivl
lea
in
xchg
jg
jne
sbb
and
mov
inc
and
into
push
scas
or
cmp
push
xchg
stc
push
mov
mov
ja
repnz
and
sub
push
push
int3
add
sarb
cwtl
sbb
inc
mov
cwtl
or
sbb
mov
lds
xor
add
aam
shl
hlt
push
dec
pop
mov
xchg
fstl
pop
ficomps
pop
hlt
xor
jecxz
push
int3
cmp
das
dec
adc
jbe
es
daa
mov
popf
cmp
sub
mov
and
mov
cltd
ja
aaa
sbb
mov
xor
mov
or
iret
jle
pop
int
dec
into
arpl
lret
shll
ret
test
mov
adc
cwtl
cmp
les
mov
or
adc
popf
sub
enter
inc
jne
out
mov
cli
gs
ret
cmp
rcrl
add
push
insl
mov
ljmp
insb
push
movsb
xor
arpl
out
add
or
jne
rcll
lahf
cmpsb
sub
push
int
fwait
pop
mov
xchg
dec
mov
xor
dec
inc
loop
or
out
dec
loope
adc
push
ficoms
sti
stos
mov
xchg
sub
sub
cmpsl
xor
pop
js
paddusw
dec
cmpl
int3
or
pop
leave
push
xchg
js
testl
xchg
subb
imul
push
add
jae
mov
dec
inc
cmp
scas
pusha
aaa
xchg
sbb
sbb
scas
sub
lcall
fcoms
movsb
add
jecxz
mov
dec
and
cmpsl
or
sahf
and
cld
popf
outsb
shl
jae
insl
test
push
adc
jne
cmp
sub
mov
lods
or
inc
pop
mov
push
xchg
sub
repnz
imul
repnz
repz
or
js
popf
stos
mov
pushl
int3
out
sbb
test
in
push
pop
dec
hlt
add
inc
decb
stos
lods
pop
in
in
jge
in
cld
mov
pop
sar
ret
dec
jbe
push
push
sbbb
js
push
addr16
mov
test
aam
fsub
icebp
adc
cwtl
push
and
pop
mov
and
pop
pop
pusha
sbb
fmull
es
lods
mov
cmpsl
push
inc
mov
out
lds
mov
jo
xlat
push
loope
imul
jne
adc
pop
pop
and
jbe
imul
stos
test
xchg
sub
sbb
add
xor
push
sti
and
mov
pusha
push
shll
in
loopne
inc
outsl
in
pop
cmpsl
das
out
sub
xchg
push
call
add
lock
or
pop
cmpsb
push
andl
jmp
jae
jle
fisubl
mov
rcl
sub
cmpsb
mov
insl
cmp
dec
add
push
add
mov
pop
inc
outsl
test
fistps
imul
jb
add
pop
in
push
or
add
cld
push
pslld
xor
popa
adc
ds
lret
jns
pop
icebp
out
or
push
sub
and
xor
cmpsl
ret
fists
repz
pop
in
adc
into
xchg
sbb
rcl
clc
push
scas
pop
inc
mov
nop
pop
inc
pop
aam
ss
test
mov
in
scas
inc
pop
pop
sbb
pusha
and
and
test
gs
sbb
lods
inc
xor
add
push
adc
ja
xor
xchg
or
adc
sti
sbb
mov
push
pusha
cmp
out
mov
mov
pop
es
add
je
sub
out
cmp
and
jmp
shl
sahf
movsl
test
cltd
or
pusha
cs
push
in
dec
xchg
insl
dec
das
les
jno
cmp
ja
sub
lcall
out
das
pop
fsubs
add
movsl
enter
mov
adc
outsb
stos
pusha
and
adc
inc
ds
ret
fcmovnbe
fdivs
cmpb
mov
jp
out
sub
adc
pop
pop
inc
pushf
es
call
sbb
push
xchg
loope
ss
xchg
push
nop
pop
and
push
mov
dec
lods
xchg
jmp
inc
mov
xchg
repnz
jnp
pop
jno
fwait
scas
js
stos
lcall
pop
sbb
pop
fstps
sbb
jp,pt
lods
xchg
in
dec
dec
packssdw
je
decb
mov
add
mov
in
lret
inc
jbe
mov
into
test
pop
and
sub
pushf
movsb
inc
mov
mov
out
repnz
mov
js
jp
mov
jecxz
push
decl
iret
test
adc
mov
inc
jb
data16
dec
das
xor
ja
xchg
std
or
mov
std
fs
shrb
shrb
jmp
cld
cld
pop
scas
fucomp
in
nop
faddl
rclb
iret
scas
mov
dec
inc
lret
jl
rolb
push
mov
lods
clc
add
das
lods
sub
loope
or
sbb
int
xchg
mov
scas
clc
pop
mov
lret
pop
adc
lret
out
aas
mov
movsb
jae
cmc
xchg
cld
mov
ret
mov
filds
test
repz
adc
cmp
lahf
out
in
fimuls
mov
sub
icebp
jae
outsb
and
out
xor
jne
jb
es
xor
jb
mov
xchg
cmp
sbb
adc
stos
inc
loope
push
sub
xchg
add
mov
inc
mov
popa
dec
roll
test
ljmp
outsl
jecxz
jmp
mov
jle
and
push
imul
bound
and
xor
fstps
jl
mov
adc
jo
or
rcl
pop
jb
into
int3
fstl
sbb
adc
gs
add
lods
pop
xor
dec
out
cmp
pushf
mov
into
dec
rorl
add
add
popf
es
mov
sbb
mov
out
rclb
cmp
std
mov
sahf
add
mov
loopnew
daa
clc
adcb
std
jo
clc
mov
cmp
ljmp
mov
stc
cs
scas
sbb
mov
repnz
mov
mov
jae
xor
dec
push
sbb
xchg
fisttps
xchg
mov
pop
mov
sti
xchg
inc
enter
mov
data16
xor
xor
xor
shll
or
das
scas
in
mov
adc
push
push
or
adc
mov
xchg
pop
outsb
in
or
insb
cmp
in
pop
cmpsl
stc
jl
aas
into
dec
jbe
push
jp
test
xor
xchg
jns
jg
xor
pop
repz
inc
xchg
add
xchg
push
and
cmp
push
sub
inc
inc
call
sbb
sbb
adc
mov
into
xor
insl
jae
div
lods
push
aad
jg
mov
jp
repnz
push
loop
mov
imul
lret
fstpt
dec
jmp
enter
dec
imul
aaa
sub
hlt
stos
pusha
es
jg
mov
and
hlt
test
xchg
mov
lds
inc
cmp
inc
sbb
movsb
dec
fdivrl
add
pop
xor
add
xchg
xchg
dec
loopne
cmp
fcmovu
js
push
cs
and
rclb
jbe
inc
dec
hlt
jmp
jmp
xchg
mov
jge
aas
fs
outsl
insl
in
call
push
les
mov
imul
stc
pop
test
mov
dec
call
cltd
imul
pop
rcll
cmp
push
sub
push
jns
jne
loop
ror
xchg
jle
or
mov
pop
int
cli
xor
sarb
jge
xlat
mov
sub
pop
push
xor
cltd
mov
push
inc
mov
xor
fwait
lret
xor
pop
xchg
and
mov
adc
clc
mov
and
xlat
mov
or
mov
push
ror
shrl
addb
int3
cmp
mov
fldl
xchg
xchg
aas
fldcw
lret
leave
jbe
xor
adc
movsb
mov
dec
hlt
std
lods
inc
cld
jge
cwtl
movsl
aam
jmp
aaa
jnp
inc
testl
insl
mov
xchg
cmpl
stos
filds
cmp
les
cmp
imul
mov
shr
gs
jge
or
cmp
sub
add
cmp
or
pop
leave
pop
xchg
mov
xor
adc
jno
mov
xchg
and
outsl
andl
lods
jge
out
lods
dec
outsb
jl
and
shr
pop
inc
xor
rcl
xor
sub
and
mov
and
add
test
test
mov
inc
cmp
stc
movsb
fidivl
in
xchg
jbe
gs
push
mov
pop
push
inc
inc
xchg
xchg
mov
fldpi
and
shl
sbb
and
movsl
jne
jg
sarl
xchg
enter
cmp
pop
or
cli
xchg
push
jae
in
mov
in
mov
add
ja
mov
pop
out
cmp
adc
dec
lock
aas
mov
test
dec
inc
push
mov
jnp
push
lcall
adc
sub
jmp
cltd
jae
cmp
fistpl
or
stos
or
push
cmp
push
dec
and
lods
ror
push
jecxz
mov
push
push
jl
lds
adc
push
dec
pop
sbb
and
mov
out
pop
xchg
dec
shl
mov
stos
and
sbb
jmp
mov
sbb
stc
pop
mov
adc
jp
jne
das
or
xor
add
jge
mov
cmpl
cld
or
es
rclb
f2xm1
orl
inc
pop
in
adcb
jne
add
rorb
and
insb
insb
mov
add
pop
aas
andps
ja
std
in
xor
xor
ret
negb
rcrb
dec
popa
xchg
iret
shll
sti
out
test
dec
das
ret
sbb
push
rorb
cmpsl
ds
adcb
cmp
jmp
pushf
push
ret
add
mov
cmp
pop
xchg
dec
fidivrs
sub
adc
lret
sbb
mov
adc
pop
test
push
push
pop
jne
or
out
cmp
sbb
lahf
add
mov
fdiv
shll
mov
clc
cli
pop
jp
jo
xor
clc
fldcw
jg
and
xchg
mov
psubq
iretw
or
incl
sbb
sub
scas
cwtl
inc
xlat
sub
sub
push
ja
adc
push
outsl
mov
inc
insl
and
shlb
xor
fmuls
sub
pop
push
dec
insl
rolb
out
push
lock
dec
nop
cwtl
clc
hlt
fisubs
repnz
pop
inc
mov
fwait
bound
inc
mov
daa
pop
pop
fisubs
aas
or
sub
shlb
cli
pop
or
outsl
xlat
add
xchg
mov
sbb
clc
mov
call
ret
bound
mov
mov
outsb
push
add
jae
into
sbb
mov
dec
sub
aad
gs
fld
add
xor
out
lock
out
and
jecxz
xor
bound
push
or
cli
push
movsb
ljmp
inc
lahf
adcb
and
mov
cmpsl
rorb
repnz
push
loope
jl
lret
scas
sbb
out
push
add
pop
sbb
push
scas
decb
and
imul
nop
aad
ja
bswap
cmp
scas
ret
sub
inc
sub
int3
movsl
les
jae
jmp
xchg
insl
push
mov
push
push
push
cli
or
jns
adc
add
cmp
shlb
pop
or
outsl
push
add
cli
or
cltd
ljmp
dec
push
lea
outsl
cmpsb
push
sub
mov
cmp
enter
mov
test
fdivrl
fdivl
sbb
les
cmp
sub
adc
mov
push
in
pushf
out
push
or
add
mov
movsl
add
add
push
les
and
mov
outsl
imul
daa
inc
jmp
pusha
adc
ss
int3
mov
jbe
add
mov
fisubl
lods
loope
xchg
pop
mov
dec
dec
push
add
je
scas
outsb
out
jecxz
adc
inc
xor
sbb
or
or
popa
je
scas
jg
pop
fdivrs
push
xor
lock
fdivl
add
fldl
test
cmp
sbb
sub
gs
rcll
pusha
pop
pop
pop
pop
pop
scas
data16
movsb
jmp
imul
fadds
pop
or
or
xor
pop
sub
sub
mov
xchg
inc
add
dec
sbb
jno
xor
cld
push
fiaddl
loopne
fsts
sub
cmc
fdivs
fsin
mov
je
or
lods
scas
pop
add
divl
scas
leave
sti
or
mov
repz
loope
mov
adc
es
sbb
outsb
mov
movsb
repz
or
mov
xchg
cmp
sub
mov
jg
push
stos
cld
imulb
lahf
pop
cld
xor
mov
popf
xchg
add
pop
movsb
in
xchg
dec
jno
adcl
aas
pop
mov
pop
test
xor
inc
push
insb
sub
enter
adc
or
cwtl
shrl
mov
insb
mov
ret
xchg
cmpsb
loope
fnop
xchg
lahf
sbb
fsubl
xchg
and
jo
add
aaa
push
insl
mov
pop
add
data16
push
sahf
adc
int3
push
mov
xor
add
movzbl
pop
dec
jge
fnsave
outsl
lea
push
mov
cmp
and
imul
or
test
or
push
sbb
mov
stc
inc
xchg
adc
jp
mov
and
in
mov
nop
mov
ja
aad
jle
cmpsb
fldl
or
clc
jmp
faddl
test
dec
mov
aam
or
scas
xchg
repz
adc
les
xor
sbb
jp
mov
fdivr
hlt
cld
cmp
sub
ret
int3
jae
cmp
sbb
add
pop
popf
add
xchg
andl
imul
popf
xlat
test
pop
dec
and
aad
dec
std
adc
aad
scas
insl
mov
cmp
not
aas
jbe
xorl
inc
outsl
push
xchg
aaa
add
sbb
sbb
jbe
jno
ljmp
das
jo
aad
test
dec
vpor
and
frstor
mov
push
mov
ljmp
out
and
aad
fisubl
lea
add
repnz
push
and
jo
in
push
xchg
movsb
out
inc
add
repnz
out
pop
xchg
dec
dec
std
push
test
cmp
mov
push
jle
mov
mulb
pushf
jmp
sahf
clc
jb
push
sbb
dec
lods
or
push
lret
in
adc
std
fldcw
jp
pop
lret
pcmpeqd
sbb
xor
rcrb
dec
push
out
lea
dec
stos
push
jae
jne
mov
mov
mov
pusha
add
pop
fadd
and
xchg
push
je
cmc
es
push
jl
data16
fbstp
sti
push
cmp
lods
mov
popf
lahf
in
mov
testb
cltd
push
data16
jne
pop
jbe
jmp
fs
std
and
pop
xchg
ja
hlt
jmp
push
fs
xchg
stos
lahf
jnp
jns
cltd
popa
jle
insl
mov
cwtl
scas
cmp
xor
mov
sub
mov
pop
cltd
jo
or
sub
int
mov
pop
insb
jnp
out
incb
sub
mov
mov
testb
cmpsb
mov
sbb
and
adc
ficoms
push
cmp
sahf
pop
shr
adc
dec
add
mov
xchg
fmull
lods
adc
add
dec
mov
movsl
adc
out
gs
mov
cmp
cltd
ljmp
and
mov
cmp
dec
call
mov
push
pushl
push
mov
add
pop
push
mov
outsb
and
fisttpll
lods
sub
nop
out
mov
subl
or
push
mov
xsave
or
dec
mov
adcl
adc
jle
lods
mov
and
mov
inc
jbe
out
stc
stc
repnz
movsb
fst
movsb
xchg
dec
jno
or
cmp
negb
or
jle
inc
lahf
shlb
pop
test
dec
roll
jge
mov
mov
stos
pop
dec
mov
pop
icebp
les
xor
cs
mov
add
in
sbbl
push
dec
fdivl
pop
fbstp
fs
int
mov
jbe
xor
xchg
call
cmp
call
pop
loopne
inc
outsl
mull
xchg
xchg
sub
pop
push
jecxz
out
dec
loop
push
dec
adc
push
stc
cltd
xchg
lret
jmp
sbb
adc
rorb
dec
or
cmpsb
test
pop
loopne
cwtl
outsl
cmp
jnp
cmp
dec
je
mov
xor
ret
or
mov
add
xor
test
cmc
outsb
jge
imul
jp
les
xchg
cltd
nop
incl
jae
dec
xor
sbb
jecxz
popa
arpl
gs
inc
sbbb
cwtl
or
in
sbb
push
es
or
xchg
push
sub
popa
mov
and
fimuls
popf
pop
pop
fnstenv
mov
movsl
cmp
and
pop
imul
adc
push
pop
arpl
xchg
test
cmc
xchg
cmc
cmp
sbb
add
push
mov
push
std
jne
inc
mov
jnp
mov
ja
stc
imul
xorl
std
or
in
and
pop
inc
test
cwtl
xchg
jmp
fmull
negl
rcrl
mov
bound
int3
xor
int3
jns
mov
in
pop
aad
inc
xchg
mov
xchg
cmpsb
sbb
mov
and
dec
cmp
lock
push
mov
lea
adc
xor
ss
push
scas
lds
lcall
fs
mov
out
cmp
push
jb
out
mov
popf
rorb
mov
push
addl
push
pop
mov
xchg
sub
pop
sbb
inc
push
and
sbb
push
pop
in
xor
push
mov
movsb
addb
sbb
mov
ret
dec
mov
mov
mov
inc
enter
pop
mov
sub
jo
xchg
add
out
push
mov
sti
aad
push
rcll
cmpsb
cmp
sti
cmpsb
cwtl
push
push
inc
add
rorb
push
inc
daa
add
movsl
mov
push
nop
movsl
stc
pop
int3
dec
push
mov
sbb
pop
and
push
clc
arpl
loop
pop
cld
push
leave
fs
enter
mov
cmp
cmp
or
mov
loop
mov
push
in
andl
xchg
scas
loopne
jmp
push
xorl
and
mov
lahf
pop
cmp
cltd
shlb
cmp
mov
cld
jae
test
sahf
mov
or
push
inc
jmp
inc
shrl
out
push
jae
mov
bnd
leave
jmp
insb
ljmp
in
mov
push
clc
inc
rcrl
loopne
xor
shlb
adc
or
jb
lret
rolb
rcrl
dec
inc
adc
js
daa
inc
int
and
icebp
push
lcall
xchg
dec
adc
hlt
bound
mov
ficompl
test
or
lods
pop
fwait
inc
sub
push
int
adc
addr16
jbe
mov
dec
xchg
jmp
pushf
loop
cmp
mov
xchg
dec
test
out
cltd
mov
xor
add
cmovae
add
jp
testb
fwait
stc
clc
xlat
inc
push
movsb
test
pop
cltd
push
cli
dec
scas
dec
cmp
inc
loop
cmpsl
xchg
mov
add
push
dec
jo
mov
ret
push
sbb
andl
push
clc
push
dec
mov
adc
and
push
test
cltd
std
add
pop
cmp
sbb
mov
mov
xlat
hlt
pusha
inc
adc
add
inc
addr16
jnp
push
fwait
in
mov
test
push
xchg
lret
push
into
fists
stos
imul
and
mov
mov
jns
cwtl
xchg
add
lcall
adc
inc
cmp
push
in
mov
jns
mov
sub
sub
daa
stos
ljmp
mov
inc
leave
mov
dec
loope
dec
cs
xchg
and
rol
xchg
in
orb
mov
daa
pushf
repz
push
addr16
sbb
lds
movsb
push
cld
mov
dec
mov
gs
icebp
hlt
daa
pop
push
mov
stc
dec
sub
pop
sub
xchg
mul
pop
out
out
cmp
js
sub
xor
ja
jb
inc
mov
ja
mov
andb
push
iret
inc
into
mov
notb
dec
push
outsb
or
into
sbb
inc
sub
stos
jmp
out
inc
addb
jae
push
cmc
mov
or
lods
sub
sbb
sub
divb
popa
pop
rolb
xchg
mov
or
mov
jo
sub
hlt
test
mov
test
stos
shrl
adc
cs
cs
mov
mov
lahf
in
nop
inc
orb
shrb
jl
mov
cmp
pop
mov
add
add
fimull
add
add
add
add
add
add
add
add
sub
add
cmp
add
dec
add
add
add
jo
add
lock
add
and
add
add
imul
add
lea
add
add
add
add
add
inc
push
inc
push
cs
dec
dec
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
ret
or
das
cmp
sbb
inc
out
aam
jb
call
pop
insb
xor
xchg
pop
add
and
pushf
movsl
and
pop
pop
mov
add
mov
mov
mov
mov
push
jb
mov
pop
xor
call
fildll
push
xlat
les
cs
pop
gs
loope
hlt
sbb
fidivrs
negl
push
pop
pop
add
push
push
pop
popl
mov
push
push
jmp
xor
imul
pop
sub
call
push
and
fstps
fwait
cmp
jbe
in
add
mov
pop
add
and
cmp
jne
mov
jmp
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
aaa
jmp
loopne
pop
aas
or
pop
les
mov
les
leave
and
xor
jmp
sbb
addr16
movsl
add
inc
jns
int
imul
rcl
lods
cmpsb
int3
aam
mov
xchg
jbe
adc
repnz
aas
scas
mov
cmp
out
and
dec
xlat
and
mov
aam
fnstsw
push
wbinvd
es
mov
arpl
pop
stos
xchg
fst
xor
lds
scas
es
or
push
sahf
movups
jecxz
cmp
mov
loopne
fdivrl
nop
push
sub
imul
nop
push
sub
out
xchg
lds
mov
fcmovnbe
mov
mov
adc
in
fcmovnbe
lods
sahf
shl
popf
repnz
icebp
jns
push
lods
ficompl
fcom
lods
cmp
mov
cmp
sbb
call
mov
xchg
adc
xchg
pop
xor
sbbl
pop
and
lods
or
mov
rcpps
mov
cmp
loope
out
popf
pop
pushl
xchg
lea
daa
fldt
mov
imul
xor
mov
ficompl
jne
jb
outsl
cmp
cwtl
es
js
mov
push
xor
and
test
insb
dec
jge
mov
mov
mov
push
pop
outsb
loopne
inc
xchg
mov
sbb
mov
xchg
mov
xchg
fwait
in
sahf
xchg
sbb
cmpsb
fnstcw
mov
lcall
sti
and
je,pn
jbe
lods
jle
js
bound
jp
cmp
xor
nop
daa
xor
or
iret
sbb
sub
pusha
xchg
lret
js
stos
dec
cmp
popf
jne
cmp
pop
shld
into
sbb
lret
lret
pop
adc
nop
cmp
push
sti
adc
lret
js
popa
add
xchg
pushf
jno
dec
fdivrs
loop
or
mov
sahf
fs
jne
data16
mov
loope
sti
push
jo
dec
and
adc
and
xchg
xchg
lret
js
repz
mov
push
mov
ss
xor
mov
enter
mov
pop
cmpsl
mov
adc
dec
jg
and
loop
mov
pop
xor
das
frstor
sub
adc
sub
adc
das
sarl
bound
out
adc
xor
repnz
push
dec
xor
jns
arpl
addb
lahf
xor
dec
xchg
adc
dec
in
repnz
cli
sbb
mov
adc
adc
in
repnz
imul
dec
cmc
adc
xor
sbb
jo
or
add
int
inc
cmc
adc
addr16
cmc
les
enter
lea
dec
cmc
adc
andb
dec
cmc
adc
dec
cmc
js
cs
adc
addr16
adc
addr16
inc
pop
mov
dec
cmp
ljmp
cld
je
sbb
adc
dec
cmc
daa
daa
xor
in
dec
clc
lret
jle
repnz
mov
repnz
addr16
cmp
add
xlat
adc
jnp
mov
cmc
lcall
cmc
adc
jg
repnz
loope
stc
adc
incb
mov
adc
call
cmp
arpl
popa
dec
cmc
lret
cmc
adc
jg
leave
add
mov
enter
in
addr16
and
imul
adc
xchg
aas
or
inc
cmc
adc
popa
dec
cmc
aas
clc
in
pop
cli
xchg
cwtl
mov
clc
xchg
fsubrl
mov
jns
arpl
daa
adc
inc
clc
shl
mov
pusha
dec
cmc
lcall
cmc
adc
jmp
stos
inc
pop
sbb
sub
sbb
addr16
repnz
cld
mov
adc
dec
cmp
dec
cmc
adc
clc
adcl
out
mov
lods
roll
sti
xchg
lods
mov
sbb
push
in
xchg
cmp
lods
roll
sti
xchg
lods
mov
addr16
mov
dec
push
in
icebp
cmpsb
inc
out
mov
push
cmp
push
lods
stc
jecxz
cld
shr
xor
shrb
and
fwait
mov
adc
popa
dec
cmc
adc
stc
jecxz
cld
shr
xor
shrb
pusha
add
cmc
adc
stc
jecxz
cld
shr
jmp
jge
lods
mov
mov
push
shr
mov
insl
mov
lret
cmc
adc
into
push
cmp
push
lods
stc
jecxz
cld
shlb
loopne
int
adc
popa
dec
cmc
lahf
or
fwait
mov
push
shr
dec
mov
int3
int
loopne
sub
addb
arpl
adc
mov
push
jns
pusha
arpl
aas
clc
addb
lahf
dec
clc
adc
std
into
into
dec
sub
cmc
adc
inc
dec
cmc
push
data16
adc
dec
cmc
cmp
inc
jle
xor
call
scas
sbb
jns
push
stc
adc
arpl
leave
mov
or
icebp
sar
adc
dec
add
mov
add
and
sbb
adc
mov
mov
adc
cmp
int3
or
and
mov
fisubrl
xchg
mov
pop
fwait
sbb
jns
sbb
xchg
js
inc
mov
adc
data16
enter
test
in
adc
xchg
mov
adc
cmp
dec
adc
repz
enter
jp
dec
cmc
adc
dec
cmc
adc
dec
cmc
adc
dec
cmc
adc
fwait
inc
cmc
scas
xlat
inc
cmc
adc
dec
cmc
adc
dec
cmc
adc
dec
cmc
adc
gs
cmc
adc
dec
cmc
adc
data16
adc
mov
inc
cs
cli
inc
add
mov
xor
ljmp
int3
fiaddl
adc
pop
das
or
fs
push
inc
out
cmpl
insl
fmuls
jge
idivb
lret
jge
cmp
and
out
mov
mov
jmp
sbb
add
mov
bound
xor
das
rorb
add
iret
lcall
mov
jge
mov
outsl
lahf
jl
mov
hlt
push
out
enter
adc
iret
or
repz
push
dec
cwtl
xor
mov
mov
or
sbb
sbb
fildll
sti
dec
push
popa
fistps
icebp
push
aas
xchg
aaa
sbb
and
pop
cltd
adc
daa
xchg
pop
jo
jns
clc
add
and
add
add
add
sbb
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
sbb
add
add
and
sbb
add
sbb
add
add
add
add
xchg
sbb
add
add
cltd
sbb
add
add
mov
add
add
add
test
add
add
add
add
add
jbe
jo
xor
cs
insb
add
insb
ja
jo
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
add
addb
add
push
sbb
add
add
add
add
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
inc
push
add
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
popa
arpl
inc
imul
jo
push
je
imul
inc
add
add
jne
push
push
push
imul
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
add
cs
testl
xlat
insl
mov
sti
jne
int3
hlt
pop
inc
sbb
push
fdivs
jg
jmp
jnp
into
mov
adcb
sub
repnz
repnz
jns
mov
test
and
adc
outsl
or
fildl
bnd
test
aad
sub
cmp
pop
mov
add
sbbl
out
or
aaa
lods
rcrl
in
pop
mov
or
fstl
inc
push
fnstenv
stos
jo
push
xchg
std
push
push
leave
push
sub
mov
add
testb
mov
push
mov
lret
mov
test
lods
lock
cmp
loopne
cmpl
fcompl
mov
pop
mov
pop
shlb
pusha
sbb
in
jnp
bound
pop
push
sahf
stos
jo
dec
jns
repz
cli
push
loope
lcall
popa
roll
push
or
jbe
iret
jns
mov
cli
aam
mov
push
mov
mov
jg
adc
mov
mov
std
dec
pop
pop
lods
add
out
outsl
mov
dec
cmp
inc
xchg
push
outsl
fstpt
roll
jecxz
int3
loope
mov
dec
pop
push
fs
add
inc
notb
lret
pop
ror
sub
cmp
jge
ljmp
mov
sbb
iret
xchg
out
ret
adc
stc
push
mov
les
pusha
jno
adc
rorb
into
es
outsl
mov
mov
mov
fstpl
out
iret
dec
ret
das
lea
les
out
cmp
sbb
movsl
pop
sub
add
adc
int3
movsl
and
add
sahf
movsb
call
loop
inc
mov
data16
mov
xchg
sub
movsl
lock
xchg
jno
inc
ror
nop
inc
mov
test
in
add
aad
fildl
add
cmp
or
xchg
mov
arpl
mov
out
pop
sub
inc
bound
or
sub
cmp
outsl
dec
lret
int3
stos
xor
rcr
push
int
addr16
cmp
call
push
push
and
cltd
xchg
cmp
stos
mov
jg
std
jg
sub
ds
dec
test
mov
and
sub
mov
arpl
je
add
add
sub
out
xor
shr
leave
cmp
jge
cmp
cmp
cs
xor
fcmovbe
xor
fcomip
xchg
out
mov
push
xchg
jnp
and
sar
inc
movsb
enter
push
fmuls
or
mov
mov
clc
fstl
and
dec
lret
pop
mov
lcall
sahf
add
adc
inc
sahf
xchg
sbb
daa
scas
dec
dec
mov
arpl
mov
adc
sub
lahf
movsb
sbb
mov
imul
int
and
movsl
cli
arpl
pop
sbb
out
daa
subb
fcoml
fisttpl
mov
xlat
pop
pop
stos
dec
dec
mov
pusha
outsb
jg
push
jns
jle
clc
scas
lods
or
sub
outsl
jl
add
dec
int3
addl
xor
repnz
xchg
jo
subb
cmp
pop
xchg
fstpl
in
pusha
cwtl
mov
sahf
cmp
jp
inc
rorl
cwtl
jbe
arpl
ja
rcr
icebp
jge
cs
pop
fwait
xchg
pushl
mov
pop
xor
into
std
lea
push
mov
std
je
add
fidivrs
mov
shl
out
pop
mov
adc
mov
mov
and
outsl
enter
mov
xor
xlat
lret
jmp
xchg
dec
and
xchg
mov
outsb
dec
dec
fnstsw
loopne
outsb
scas
mov
cmpsl
add
lds
imul
fsub
loopne
and
jmp
aad
or
jno
jnp
add
cmpsb
cld
ljmp
mov
pop
mov
insl
cmp
lods
enter
hlt
add
sub
pop
sti
ret
adcw
cs
or
jnp
aad
lds
xlat
push
std
jp
mov
outsb
test
xchg
cmp
sub
shll
data16
rol
pop
mov
stc
pushf
add
popf
jno
xchg
test
repz
in
adc
fbld
icebp
aaa
sub
fmull
jns
fadd
xor
push
andb
add
lods
dec
sahf
cld
cmp
jae
cmp
mov
in
imul
mov
inc
adc
fdivl
inc
enter
push
sub
xor
jmp
ds
or
mov
out
test
insl
mov
js,pn
or
xchg
inc
je
adc
and
scas
test
outsl
inc
inc
aaa
test
xchg
loope
arpl
xchg
or
adcl
adc
rcrb
dec
aas
in
mov
mov
and
pop
xchg
arpl
dec
cmc
push
push
xor
imul
mov
mov
inc
sub
ret
cs
cmp
gs
bound
lock
cli
and
in
ret
pop
inc
fs
rcll
leave
syscall
in
sub
mov
sub
sbb
push
insb
lgdtl
aad
xor
adc
pop
cmp
pushf
test
pop
mov
out
xor
pop
icebp
pushf
out
pop
es
out
jmp
pop
inc
pop
es
dec
iret
mov
inc
stc
add
pop
add
leave
or
