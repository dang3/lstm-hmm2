xchg
add
xchg
add
add
jl
add
adc
add
push
xchg
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
xchg
fisubrs
add
push
mov
call
pop
pop
ret
mov
mov
repnz
mov
out
mov
inc
rcrl
add
add
push
xor
aad
mov
repnz
and
shll
and
inc
add
popa
popa
repnz
and
or
push
rolb
cli
pop
jmp
fwait
orl
jns
fs
inc
adc
sbb
mov
cmc
insl
loope
or
jae
leave
adc
dec
data16
jmp
inc
imul
add
fisttps
popa
insb
pop
sub
ret
xchg
jb
jb
xchg
jg
cmp
xchg
xchg
cmp
mov
pop
addr16
and
popa
adc
cltd
fdivrl
insl
xchg
leave
shlb
ret
loope
cs
rorl
and
mov
in
push
test
pop
dec
cli
lods
xor
mov
dec
mov
iret
mov
jb
push
lahf
test
int
xor
mov
hlt
aas
add
inc
cwtl
ja
cld
push
xor
fldl
ljmp
call
sarl
mov
imul
imul
cmpsl
rcl
in
stc
repz
aam
cld
movsl
into
rcr
sub
je
fs
cmp
and
cld
mov
loopne
cwtl
icebp
test
push
cmp
adc
jns
or
jge
dec
add
or
lock
mov
mov
and
bound
jb
add
push
and
mov
mov
repnz
and
shll
and
bound
jb
add
push
and
mov
pop
push
push
ret
inc
loope
mov
push
int
ljmp
arpl
test
repnz
xor
jmp
jge
fdivl
sti
cmp
data16
std
loope
cmp
hlt
mov
add
cmp
mov
dec
pop
loop
data16
imul
data16
cmovb
xor
out
arpl
shll
fildl
cmc
out
test
bound
push
iret
fidivrs
jnp
xor
out
or
ss
ds
mov
movsb
cmp
repz
jae
mul
ss
ljmp
add
inc
inc
out
mov
fildl
xlat
shl
mov
lods
jne
pushl
mov
andl
jle
popf
pop
xor
mul
insb
push
pop
xchg
and
xchg
or
dec
hlt
cld
sahf
into
push
and
cmc
fmul
in
dec
or
mov
mov
add
push
xor
cmp
and
imul
ljmp
hlt
call
push
cli
cmp
mov
add
mov
inc
mov
into
and
and
scas
xor
scas
lcall
divl
rcrb
idivb
inc
push
das
pushf
jg
leave
pop
inc
js
icebp
pop
test
cmc
int3
pushw
mov
dec
movsb
insb
mov
addr16
cltd
subl
and
inc
cmp
ljmp
addb
add
pusha
push
push
pop
inc
push
push
adc
loope
push
adc
test
xor
cwtl
add
std
add
xor
bnd
push
and
mov
pop
sub
push
xor
xor
adc
add
sbbb
and
jns
fldt
add
test
ret
add
add
xchg
and
jmp
pop
xlat
pop
mov
cmovne
pushf
push
movsl
cmp
mov
xchg
lret
lds
adc
sbb
mov
pop
sbb
insl
or
mov
movsb
push
pop
xchg
lahf
mov
cld
xchg
mov
jnp
push
xor
jl
xchg
ds
faddl
mov
enter
inc
ret
xor
adc
adc
shll
pop
in
adc
mov
scas
and
adc
stos
lahf
fldenv
mov
mov
fstps
push
lods
xor
stos
roll
pop
xor
dec
shlb
xor
adc
inc
dec
enter
decl
cld
and
sub
mov
sti
shll
xchg
lcall
loop
push
outsl
mov
push
xchg
in
pop
or
data16
xchg
jne
push
daa
xchg
icebp
xchg
loope
mov
xchg
test
cmp
stos
add
test
mov
adc
ljmp
fdivr
fwait
inc
push
mov
cmp
add
push
xor
into
push
popf
push
sub
imul
and
lret
mov
int3
pop
inc
movsb
fs
pop
sbb
mov
cmp
sub
pop
push
jae
push
popa
mov
dec
int
xor
pop
lea
pop
pop
jg
sub
gs
sbb
out
pop
sub
pop
pop
or
sub
push
mov
mov
pop
add
hlt
rorl
push
sbb
inc
dec
or
dec
fmuls
push
jmp
cmc
clc
jecxz
push
mov
lcall
sti
sbb
aam
mov
popl
dec
fwait
psubsw
mov
push
fimull
adc
or
mov
stos
lods
fdivrl
call
jecxz
xor
push
imul
mov
ret
xchg
pop
or
or
cmpsl
inc
sbb
mulb
push
ds
jmp
aam
add
jno
call
subl
jle
cwtl
enter
aam
pop
mov
xchg
pushf
mov
mov
in
hlt
jae
lock
xchg
mov
sub
ja
add
in
loopne
movsl
inc
popa
mov
ds
scas
popf
xor
insb
popf
jns
shll
sub
jno
push
xor
leave
xor
enter
sahf
cmp
push
push
fists
test
jle
rorb
cld
jecxz
cmp
pop
xlat
movsb
int3
pop
jmp
and
icebp
xchg
dec
inc
dec
std
jae
mov
rcrb
add
call
push
sub
test
andl
inc
ret
add
lcall
jmp
push
push
nop
paddw
addr16
mov
sahf
dec
sarb
push
popf
repnz
bound
xchg
es
inc
add
jne
cmp
sbbb
and
xchg
mov
sub
dec
dec
in
sub
jecxz
int3
shl
pop
je
jl
out
das
bound
sbb
push
out
push
iret
ret
dec
sbb
lea
jp
mov
std
mov
fistpl
mov
pop
mov
add
enter
cmp
cmp
dec
mov
adc
jne
sarl
loopne
arpl
push
cmpsl
mov
ja
subb
dec
sbb
lea
fistps
aas
mov
in
cmp
js
fs
stc
shlb
dec
jb
push
popf
sbb
out
dec
cli
fcmove
mov
mov
push
cwtl
or
sahf
mov
inc
ja
sub
sub
and
fdivs
movsl
imul
ja
or
adc
imul
ficoml
dec
pop
jle
addr16
or
and
pop
dec
dec
rcrb
jb
stos
divl
mov
sub
test
xchg
or
cmp
pop
mov
stc
sti
jp
leave
mov
out
sbb
lahf
mov
pop
clc
js
adc
jge
mov
add
movsl
insl
jae
imul
fmull
lcall
repnz
jo
push
sub
xor
pop
pop
cmpsb
daa
sub
rcrb
lahf
mov
cmp
pop
pop
mov
mov
sar
cmp
rclb
repz
fwait
shll
orl
call
ljmp
stos
pop
or
lahf
mov
clc
and
or
xchg
lods
mov
rcll
fwait
pop
aaa
and
xchg
lds
mov
loope
sbb
in
pop
sub
orl
mov
fldcw
testb
js
jmp
and
push
sub
sti
xor
popa
fistpl
ss
cld
and
subb
in
movsb
mov
push
xor
in
scas
pop
mov
add
sub
dec
jns
sub
adc
lcall
sahf
and
and
gs
xlat
into
dec
jl
xor
sbb
andl
push
adc
push
bnd
rcl
and
pop
cmp
leave
ret
sbb
xchg
lahf
lahf
pop
repnz
sbb
dec
push
bound
shll
movsl
fst
fwait
push
icebp
cmp
mov
jns
jmp
imul
stc
pop
in
fsts
cltd
xchg
sub
out
stos
cmp
testl
xchg
les
pop
fdivl
push
je
push
das
imul
xor
pop
rorb
adc
insb
rcr
adc
xor
sub
fdiv
add
outsl
sbb
in
or
aad
fldcw
cmp
insb
sbb
xchg
lea
movsb
sub
lcall
data16
jmp
push
and
mov
dec
mov
ret
xor
ret
fsubs
out
call
pop
or
sarl
cmp
dec
pop
mov
andb
mov
cmp
lret
mov
lds
xor
jecxz
jo
dec
sar
mov
scas
xor
push
repz
out
imul
je
repnz
fildl
inc
or
mov
test
sbb
lret
xchg
mov
ja
ret
xor
mov
dec
ljmp
push
inc
push
xchg
fcomps
repz
into
add
jp
adc
xor
nop
int
mov
pop
dec
jle
test
mov
and
adc
popf
mov
ffree
push
outsl
jns
xchg
jb
out
addb
subb
xor
lret
or
call
jbe
notb
dec
xchg
dec
cld
push
or
sub
notb
push
add
inc
movsb
das
shrl
adc
dec
dec
dec
movl
xchg
pop
popf
out
pop
in
adc
jb
rclb
push
fidivrs
jg
imul
xor
push
scas
sbb
aad
popf
xchg
pop
xchg
lahf
mov
sbb
pop
fdivl
lret
adc
es
fcomip
aad
push
fmuls
jo
cmp
mov
sub
mov
dec
loopne
scas
leave
lcall
dec
cmp
gs
lret
movsb
or
stc
add
hlt
out
xchg
mov
sub
mov
mov
fidivrl
or
mov
push
xlat
std
mov
andl
lods
movsb
and
inc
jae
lcall
push
daa
dec
mov
mov
in
mov
adc
mov
in
pop
outsl
adc
ret
inc
cmc
out
rcr
loopne
mov
or
and
add
dec
mov
sub
sbb
imul
cmp
les
mov
push
and
ja
das
pop
enter
std
clc
sbb
rcl
mov
inc
mov
inc
insl
sbb
addr16
lret
aad
inc
popa
pusha
jne
arpl
inc
pop
outsb
push
sub
gs
push
add
pop
jmp
mov
xor
sub
xlat
mov
sbb
shl
push
iret
repz
imul
jecxz
mov
jno
jb
mov
mov
mov
scas
int
inc
jns
push
popa
mov
adc
cmp
fisubs
xchg
mov
or
movsb
mov
out
inc
lret
mov
or
mov
inc
andb
gs
lahf
inc
icebp
push
push
movsl
popf
loopne
pop
cmp
test
shrb
pusha
xor
cmpsb
fsubrs
jnp
subl
mov
and
fnstenv
scas
out
loope
xor
xchg
int3
ret
push
xchg
mov
sbb
imul
mull
xchg
jmp
jmp
adc
push
sub
jnp
mov
cmpsl
cmc
inc
jp
arpl
mov
sub
jecxz
xor
xchg
mov
outsl
fistpl
jo
jmp
out
outsb
sub
push
in
mov
ret
or
mov
pop
xor
push
nop
pushf
adc
sub
jns
or
lock
pop
test
mov
and
push
and
jecxz
into
add
adc
fwait
test
icebp
loop
lahf
fucomp
dec
push
loop
xchg
sub
test
pop
in
ficompl
fcomi
add
xchg
lret
nop
adc
mov
sbb
push
mov
xchg
dec
or
movsl
sub
mov
adc
lcall
ret
and
test
les
pushaw
ret
cs
pop
loop
mov
dec
sub
rorb
dec
push
add
insl
adc
push
fdivrs
pop
cwtl
rolb
inc
push
or
jbe
adc
sbb
mov
in
mov
add
movsb
push
sub
xor
pop
shl
mov
mov
dec
jne
lea
adc
inc
or
addb
mov
leave
xor
push
subl
xchg
icebp
jb
loop
jp
xor
pop
or
pop
mov
push
mov
jmp
pop
in
into
cld
adc
std
pop
fsubp
cs
imul
mov
jo
sub
or
je
push
fiadds
jmp
repnz
xchg
mov
add
xchg
mov
je
pop
push
push
outsb
inc
mov
sub
mov
inc
or
xchg
lea
pop
fcompl
adc
add
jl
idivb
ja
scas
pop
inc
cmp
xor
sbb
inc
mov
mov
xchg
insl
rorb
sbb
push
push
ret
xchg
jg
jecxz
into
das
cmp
out
jns
out
xchg
cmp
mov
jb
loopne
pop
inc
rclb
mov
sbb
fdivr
push
out
mov
call
rorb
outsb
push
out
lock
xor
adc
inc
jmp
ds
mov
sbb
pop
mov
cld
movsl
call
pop
dec
lds
js
pusha
aad
push
loopne
sti
pop
cmp
into
pop
push
sub
cli
in
inc
jl
and
sbb
push
cs
ljmp
int3
fnstenv
sti
xchg
repnz
xorl
fistpll
sahf
into
cmp
pushf
add
iret
pop
inc
xchg
mov
inc
xchg
fcmovnu
sbb
xor
sub
sub
inc
gs
and
add
cwtl
mov
mov
sub
xlat
fsub
xor
sub
cld
fsubs
mov
loope
test
lret
mov
cmp
push
and
fidivs
loop
lods
shr
add
pop
fucomp
mov
nop
xor
push
jbe
cli
arpl
inc
add
xchg
mov
test
jecxz
cmp
jb
mov
xlat
pop
pushl
mov
shll
lret
dec
mov
popf
xor
push
mov
jno
push
idivl
shrl
jno
inc
lcall
dec
std
mov
cmpsb
jl
daa
mov
push
sbb
mov
in
jb
sbb
gs
push
xorb
neg
xchg
sub
jge
movsl
hlt
sbb
lods
push
das
scas
xchg
fs
mov
shrb
das
push
icebp
pop
mov
mov
xchg
and
dec
push
jnp
or
adc
pop
mov
hlt
repnz
imulb
xor
mov
adc
aad
test
push
idiv
adcl
pop
jo
xor
jmp
jp
sti
movsb
pushl
or
dec
fstpt
lods
jg
leave
pusha
aam
push
into
pop
ja
jg
outsl
push
out
enter
jbe
je
aaa
cmp
xor
cld
add
jns
gs
cli
int3
aas
or
icebp
cmp
sbb
add
pop
pop
mov
filds
ljmp
neg
mov
fnsave
rcrb
pop
sarl
cwtl
fildll
mov
sti
lds
sub
pusha
adc
and
push
jb
jne
xchg
push
loopne
mov
and
std
mov
dec
dec
mov
fistpll
jb
xchg
xchg
aam
or
mov
jbe
inc
stc
dec
add
cmp
push
push
stos
or
test
cli
jno
mov
push
aam
sub
push
adc
jge
scas
jnp
lock
xchg
test
data16
jp
fmull
push
aad
out
pop
test
sbb
sbb
testl
daa
mov
sub
dec
mov
mov
fdivrl
sbb
push
cli
sub
dec
mov
sti
lret
movsb
adc
lds
loop
scas
aas
mov
or
insb
jb
lock
out
push
orl
and
xor
mov
leave
les
sbb
test
das
push
shlb
test
xor
sbb
cld
jg
jno
inc
pop
dec
out
mov
out
jg
push
js
arpl
push
and
mov
addl
cmp
add
lods
cmp
in
jg
jns
test
ret
popa
add
push
loop
stos
loop
pop
cmpsl
mov
jno
call
and
ret
popa
pop
sbb
jno
aam
enter
push
fldcw
rcrl
icebp
mov
push
push
inc
repz
cld
dec
or
or
cmp
pop
data16
repz
pop
add
fwait
pop
inc
push
jmp
insl
and
jbe
int
fmul
lcall
mov
mov
into
fsub
fsubrl
mov
add
cmp
xor
jl
xlat
push
xor
aam
lods
sub
outsb
in
cmp
xor
jl
clc
fs
mov
fiadds
shll
dec
mull
into
push
and
adc
xor
lea
test
xchg
pop
test
or
cmp
into
pop
addl
test
ja
push
mov
or
jge
fidivl
je
ja
faddl
sbb
add
fmuls
push
fwait
adc
div
xchg
stos
xor
rcl
inc
pop
movsb
jbe
cs
inc
jl
pop
and
adcb
inc
sbb
add
scas
dec
sbb
xchg
mov
repz
nop
lcall
inc
cmpb
mov
data16
push
call
addl
vprotw
pop
adc
mov
jl
xchg
lods
js
jmp
adc
mov
mov
push
stos
add
xor
pushf
stos
fwait
out
push
dec
inc
ja
imul
in
decl
lods
sub
pop
cmp
adc
test
scas
jecxz
sub
into
mov
es
fwait
mov
sbbl
or
sbb
lods
xchg
mov
adc
sub
inc
movsb
pop
imul
push
mov
xchg
out
push
das
aam
jnp
push
loope
mov
and
sbbb
mov
sub
push
cmp
popf
pusha
je
repnz
shll
rol
mov
lret
inc
add
mov
lahf
xchg
jge
xlat
arpl
popf
ds
lret
aaa
test
pop
push
push
push
nop
aas
jns
inc
leave
pop
sub
test
sub
or
into
push
ret
out
sarl
in
xchg
mov
xchg
dec
xchg
into
ja
and
fidivrl
mov
sbb
jle
jnp
rolb
lods
in
lock
mov
mov
mov
pop
mov
inc
jmp
out
xchg
inc
inc
int3
lret
sahf
sub
and
lods
adc
stos
adc
cmp
xchg
popa
push
mov
pop
maxps
sub
mov
test
push
pop
cmp
push
popf
jne
sbb
std
jl
pop
nop
shlb
int3
jns
mov
mov
sti
adc
mov
sbb
leave
mov
sbb
or
mov
adc
in
pop
aaa
in
or
test
jecxz
jge
mov
arpl
inc
subb
push
imul
xchg
sbb
mov
movsl
movsb
or
lock
and
inc
mov
out
push
and
movsl
cltd
mov
sbb
xor
adc
lret
jl
popf
fsubs
add
sbb
cld
lret
inc
jnp
mov
ds
dec
inc
fprem
insl
lock
cld
inc
xor
sbb
sub
es
clc
aam
push
cmp
fisubl
push
pop
es
adc
fs
xchg
add
fs
or
fldln2
jns
pusha
stos
ljmp
lcall
sub
jl
das
mov
jecxz
xchg
inc
adc
gs
shll
cmp
pop
ret
data16
mov
pop
adc
add
enter
push
loop
push
cmp
cld
bswap
lret
mov
adc
sub
cld
inc
mov
daa
adc
jbe
add
ja
pop
fadds
push
test
sub
in
pop
mov
inc
scas
or
out
sbb
xchg
and
push
test
sti
imul
xor
pop
cmp
pushf
jb
dec
int3
cli
or
test
rclb
jae
lds
mov
pop
xlat
cmp
jle
jl
mov
test
xchg
and
test
test
xchg
xchg
hlt
sbb
mov
insl
test
imul
cmp
das
je
in
loopne
adcb
lea
jae
and
movsl
mov
mov
pushf
adc
data16
add
pop
cli
pusha
fnstcw
mov
sub
outsb
xchg
out
cld
or
test
ret
push
enter
sbb
push
nop
jmp
shlb
jnp
sbb
cmp
mov
push
mov
cwtl
pop
jo
lods
in
jne
pmulhw
adc
mov
mov
fadd
mov
cmp
pushf
call
fnstenv
add
and
xor
push
or
shll
bound
test
xchg
inc
sbb
jge
lods
ja
or
sti
mov
stc
mov
test
inc
icebp
mov
call
sub
es
push
mov
sub
push
daa
mov
clc
cmp
jb
pop
cwtl
add
xchg
icebp
mov
inc
jg
inc
gs
pop
cmp
add
out
js
arpl
clc
arpl
add
and
jecxz
pxor
aaa
mov
pop
daa
lahf
xor
cmpsb
inc
and
fmull
popl
inc
ds
mov
sbb
stc
push
lcall
add
popf
push
cld
mov
push
arpl
cmp
out
rcrl
push
sbb
xchg
xchg
lcall
or
mov
testl
idivb
fcoms
ficoms
daa
mov
jae
lret
xor
in
fiadds
rorl
cmp
notb
jbe
sbb
push
call
lock
in
fisubrs
repz
in
mov
xchg
dec
ret
and
and
dec
in
dec
lret
mov
xor
mov
sbb
leave
ret
mov
adc
les
js
cmpsb
inc
out
movsb
popa
shll
fdiv
xorl
pop
lods
pop
leave
xor
mov
outsb
fsubl
jae
fstps
and
inc
xchg
fidivs
int3
test
out
vpmaxub
shrb
jnp
mov
inc
sarl
in
xchg
sub
ret
stos
lea
xchg
fcomip
add
xor
dec
lcall
push
xchg
jo
xchg
andl
lret
jbe
stos
xor
lds
lock
xchg
jp
inc
addl
jp
popl
jle
sub
add
sub
lcall
dec
sub
insl
fistpll
fucomp
mov
pusha
mov
aam
fcomps
mov
push
into
stos
push
fcmovnbe
in
mov
xchg
popa
lds
and
pop
mov
mov
jge
inc
sub
jb
leave
inc
outsb
cmp
jne
or
xchg
xchg
xchg
mov
cmp
imul
or
jle
or
jg
fidivrl
push
fwait
xorl
test
aas
cmc
jb
mov
and
in
les
fdivl
imul
popl
adc
and
add
or
loope
shll
and
bound
jb
add
push
and
mov
mov
repnz
and
shll
and
bound
jb
add
push
and
mov
xchg
shl
loop
repnz
and
shll
and
bound
jae
add
push
and
ror
loop
repnz
xor
shll
fdivrp
mov
mov
in
scas
fnstsw
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
andb
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
and
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
and
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
and
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
and
add
add
mov
and
add
and
add
and
add
and
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
sbb
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
add
insb
add
nop
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
cld
add
hlt
add
in
add
in
add
fsubl
add
aam
add
int3
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
daa
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
sub
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
add
add
add
add
add
xchg
sub
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shrb
add
sub
add
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
push
pushl
mov
call
mov
call
cmpl
movl
jne
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
cmp
or
xor
mov
mov
fcmovnu
lret
int
cmp
or
pop
pop
dec
dec
mov
popf
mov
fcmovnu
lret
int
cmp
or
pop
pop
dec
dec
mov
in
mov
scas
mov
dec
pop
sbb
loope
mov
mov
fisubl
dec
fidivrl
push
iret
add
xor
hlt
repnz
mov
inc
add
int
popf
je
add
ljmp
sub
sti
sbb
jle
lock
out
pop
adc
push
fwait
cwtl
dec
dec
stos
std
xchg
fidivrs
ret
jno
or
pop
jl
jge
mov
sbb
gs
jb
scas
stos
mov
les
hlt
lock
xchg
fsubs
std
lods
push
popa
idivb
mov
lret
mov
cmpb
cltd
outsb
xchg
dec
enter
mov
stos
add
sahf
enter
cmp
or
pop
pop
dec
dec
mov
popf
mov
fcmovnu
lret
mov
pop
jb
bound
adc
sub
cmp
mov
repz
nop
jmp
mov
jl
addr16
addr16
jnp
cs
and
sbb
clc
cli
rcrl
test
pop
insl
sub
imul
pop
pop
dec
dec
mov
popf
mov
fcmovnu
lret
int
cmp
or
pop
pop
dec
dec
mov
popf
mov
fcmovnu
lret
int
cmp
and
test
gs
js
jecxz
jnp
add
in
inc
mov
add
ja
lea
scas
sub
cmp
rclb
fistps
psubb
push
mov
add
ja
nop
sub
rorl
outsb
insb
add
mov
add
subb
xor
pop
mov
or
pop
pop
mov
lods
clc
jmp
test
add
enter
cmpb
pushf
pop
inc
mov
orb
mov
inc
adc
mov
pop
stos
in
mov
cwtl
push
lds
mov
enter
mov
test
xlat
ljmp
pop
imul
rolb
sub
out
mov
jo
add
int
cmp
xchg
inc
add
cs
mov
inc
ds
push
fbstp
or
push
add
std
ss
mov
and
sbbl
xlat
lds
int
xor
push
loopne
pushf
xorl
fnsave
sbb
int3
sti
nop
sbb
pop
pop
icebp
test
insl
ss
cmp
addr16
cmp
push
dec
and
and
cmp
xchg
and
outsb
pop
in
push
jne
popf
enter
les
mov
mov
mov
adc
in
jle
ret
mov
mov
or
out
mov
or
mov
sub
lea
push
jmp
jne
insl
adc
shl
aas
int
jnp
dec
cmp
pushf
push
iret
jmp
in
xor
lcall
gs
mov
lcall
push
int3
jle
sbb
add
dec
and
cld
xchg
or
xchg
cmc
popf
xlat
aad
jl
stc
ds
pop
cmc
mov
out
inc
ljmp
lcall
jle
lahf
xor
cs
mov
idivl
ss
dec
outsb
ja
adc
xchg
sti
dec
shlb
or
xor
adc
mov
dec
xchg
jmp
loop
ret
sub
test
xchg
icebp
xor
dec
jl
fnstsw
data16
fwait
add
test
inc
jne
jmp
ucomiss
data16
adc
jl
push
daa
in
xchg
decl
out
sahf
sti
bound
adc
mov
nop
mov
or
cld
sbb
je
fbstp
xor
or
mov
sbb
movsl
popa
jae
jge
adc
push
mov
cmp
push
vpshldw
jl
mov
mov
int3
cmp
lret
movsb
xchg
lds
aam
adc
xor
push
and
pop
dec
pop
jno
and
and
in
addl
out
clc
push
dec
cs
adc
mov
fsubrs
xchg
mov
test
flds
mov
jl
push
and
push
aas
sahf
aad
xor
jecxz
mov
lcall
cli
xchg
scas
repnz
ja
sub
cmp
pop
pop
outsb
clc
aad
test
dec
popa
pop
xchg
add
xorl
dec
outsl
xor
aam
int3
fldl
mov
stos
notb
inc
inc
mov
sbb
pop
or
imul
aaa
insl
and
in
jl
mov
or
jp
loopne
xchg
dec
insl
pop
les
sbb
or
mov
insl
xchg
pop
jnp
pop
mov
insl
stos
das
subl
insl
mov
test
pmullw
mov
pusha
mov
cmc
adc
adc
dec
into
cmp
jbe
int3
add
pop
mov
rolb
add
adc
sub
pop
pop
mov
repnz
cwtl
xorb
mov
out
xchg
push
fists
push
cmp
fdivl
sub
cmp
ret
inc
xchg
cld
rdpmc
adc
outsl
cmp
xor
pop
sub
inc
aad
and
push
mov
dec
loop
fdivs
dec
pop
mov
cmp
jno
dec
icebp
test
and
stc
mov
cmp
pushf
dec
xchg
sbb
movsb
das
mov
aaa
mov
cli
in
out
pop
sahf
sbb
dec
sub
das
cmpsb
mov
int3
fnstenv
xchg
mov
jecxz
repz
mov
push
inc
gs
push
in
cwtl
outsl
pop
loopne
jns
sub
mov
movsb
sub
addb
jge
ds
sbb
mov
jno
pop
out
or
lahf
shl
aas
xchg
pop
fadds
nop
cmp
sbb
mov
adc
mov
loope
cmpl
add
xchg
pop
push
lea
xchg
adc
mov
jp
jb
stos
add
sub
cmp
subb
rcrb
and
test
pushf
xchg
orb
std
leave
ljmp
mov
fcoms
enter
jle
inc
push
stos
icebp
roll
nop
lcall
and
outsl
or
sub
vmread
or
push
mov
mov
adc
imul
cltd
aaa
outsl
or
cmp
sbb
fdivl
call
cmp
sbb
mov
push
jb
push
adc
jbe
jns
outsl
das
sub
and
aaa
xchg
sub
cmp
dec
xorl
inc
daa
mov
or
ficoms
aad
xchg
in
xor
lcall
sbb
adc
push
mov
mov
and
ret
push
stc
jae
mov
and
dec
faddp
and
into
xor
and
pop
imul
pop
cmpsl
jle
add
dec
pop
add
mov
idivb
mov
mov
add
sub
xchg
push
mov
push
in
test
adc
sbb
leave
lock
sti
push
ljmp
test
sbb
pusha
ja
xchg
xor
push
push
pusha
dec
xor
cmc
movsl
ja
mov
insb
push
or
lock
dec
and
cmp
movsl
pusha
jp
in
pop
call
add
and
fwait
inc
fstl
stc
lret
push
sub
stos
or
cmp
adc
add
add
std
jne
call
lods
push
push
dec
call
xchg
pop
sbb
fstp
xchg
mov
push
xor
filds
xchg
je
clc
pop
pop
subb
sahf
add
in
mov
or
mov
cs
dec
and
filds
and
pop
lret
pushw
adc
sub
xchg
push
sbb
mov
dec
sub
dec
sub
jbe
cmp
xchg
xor
or
scas
jb
xchg
adc
incb
sub
jbe
les
outsl
jp
fidivrl
aaa
jnp,pn
jmp
push
jnp
cmp
fadds
mov
cmp
loope
add
in
pop
mov
mov
daa
and
fadd
mov
add
stos
xor
mov
or
pop
adc
fmull
in
inc
test
es
xor
jnp
fidivrs
sbb
jbe
mov
popf
mov
add
cmp
pusha
jmp
stos
mov
loopne
js
or
lock
xchg
negl
les
data16
jg
fimull
dec
push
daa
add
mov
mov
and
loope
ljmp
testl
filds
pop
xchg
iret
and
pop
inc
popl
mov
ret
jne
xchg
mov
mov
loop
add
les
cmp
cmp
push
lahf
cs
or
mov
std
push
mov
mov
rcll
lods
sub
mov
aad
push
mov
stos
ljmp
out
test
ret
jle
jnp
xlat
mov
mov
xor
fildll
addr16
popf
sub
xchg
lcall
orl
fsubl
xor
push
cmp
mov
cmp
aaa
fxch
test
sub
sbb
mull
jne
lahf
adc
sub
out
pop
jb
rep
out
hlt
add
push
dec
out
sahf
loop
cmp
push
cmp
sti
xor
jo
in
mov
inc
loopne
bound
inc
adc
cmp
stos
jp
jno
outsb
fdivrp
mov
outsb
or
add
sbb
push
cmpsl
leave
jbe
mov
jae
sbb
ficomps
into
aam
cmp
icebp
in
sub
dec
mov
xchg
push
jo
test
js
or
mov
mov
cmp
cs
mov
loopne
or
mov
xor
notb
js
jae
ljmp
test
mov
xchg
add
enter
mov
test
mov
dec
lret
imul
and
push
shr
and
mov
int
out
mov
rorb
dec
xor
enter
dec
jbe
or
add
es
sbb
push
rclb
inc
mov
movsb
aam
cmc
sub
jl
jo
test
inc
mov
loope
xlat
int
dec
lds
out
jns
dec
pop
outsl
test
hlt
mov
push
push
push
sub
mov
jle
xor
sub
or
mov
in
adc
call
rclb
and
mov
into
xchg
mov
call
imul
nop
idivl
push
adc
lods
shlb
out
jg
fcomps
outsb
push
inc
mov
pusha
xchg
add
mov
xor
mov
ds
push
std
mov
xor
adc
inc
fisttpll
bound
int3
add
jne
inc
cld
sbb
xor
clc
lods
cli
cltd
out
cmp
repnz
femms
out
js
jbe
insb
decb
ret
push
dec
loopne
cli
jo
jle
mov
leave
loop
adc
in
ror
jno
add
push
aas
pop
adc
les
std
test
adc
lea
cwtl
mov
add
add
mov
mov
adc
mov
jge
xlat
repnz
sub
mov
mov
out
enter
push
mov
sbb
js
and
xchg
inc
mov
rolb
mov
xor
push
lods
mov
in
add
insl
push
bound
mov
enter
test
mov
insb
inc
mov
mov
jno
mov
fdivrs
imul
mov
addr16
fstl
sub
notl
xchg
pop
stos
sahf
inc
jge
int3
test
dec
out
mov
pmaxsw
or
adcb
mov
mulb
aas
inc
in
and
dec
movsl
sbb
push
out
mov
ss
dec
ja
xchg
mov
jle
mov
je
in
cmp
sbb
mov
or
and
sbb
loopne
rcll
mov
push
scas
imul
mov
shl
lcall
push
ds
incl
ja
inc
inc
add
dec
xchg
aad
push
push
jge
into
imul
lods
lcall
daa
cmp
xlat
nop
mov
sub
loope
jae
fsubs
jmp
sub
stc
mov
mov
cmpsb
aaa
jmp
push
lock
mov
fldcw
pop
inc
xor
lret
xor
push
dec
stc
lahf
adc
cwtl
adc
pop
pop
sub
pusha
test
test
push
aas
or
adc
dec
pop
sbb
xchg
sahf
mov
aam
aas
sub
mov
rcr
mov
bound
xor
hlt
pop
jge
int3
xchg
dec
popa
adc
sub
and
pushf
dec
pop
test
ss
cmpb
test
fmuls
js
aaa
cmp
pop
scas
mov
mov
xor
jnp
xchg
mov
pop
cmp
addl
aad
jge
stos
xor
cmpsl
jne
leave
js
imul
mov
sar
mov
enter
arpl
lret
adc
jg
mov
adc
xor
fisttpl
loop
adc
dec
nop
jl
enter
cwtl
mov
movb
lcall
das
xor
pop
insb
and
push
loope
and
xor
jg
xchg
add
loopne
stos
subl
push
popf
fisttps
xor
and
add
fbld
adc
and
test
jb
inc
or
xlat
popf
cwtl
jl
out
xor
loop
jo
adc
inc
mov
js
mov
or
int
lahf
xchg
cmp
adc
and
in
jno
or
scas
pop
pop
mov
dec
pushf
dec
mov
push
cmpsb
aas
dec
sbb
lods
loope
stc
dec
bound
fildll
insb
cmp
jns
scas
mov
repz
push
jb
pop
test
mov
loopne
dec
mov
inc
xchg
mov
sub
daa
repz
xchg
sub
jns
xchg
push
push
sub
pop
rorb
xchg
cmp
or
jp
ss
cmpsl
fisttpl
cmpsl
xor
aaa
movsb
cmp
nop
mov
movsb
outsb
lcall
push
fsubs
aas
shrb
mov
inc
fucomp
adc
fcomip
dec
lahf
daa
movsb
popf
sbb
inc
cmp
ret
fadd
scas
mov
out
mov
int
and
xchg
ja
pop
in
xchg
cld
add
xor
mov
sbb
outsb
jle
mov
out
xchg
jbe
fcmove
or
xchg
cli
mov
jnp
aam
and
es
bound
outsl
pop
testl
dec
dec
jne
and
bound
xchg
mov
sub
ljmp
mov
insl
enter
into
in
ja
call
xor
inc
out
sub
mov
xlat
mov
jb
or
adc
xchg
inc
filds
or
or
jno
sub
inc
scas
and
mov
hlt
cmp
jns
push
mov
sarl
mov
icebp
fbstp
jle
pop
leave
popa
andb
lret
les
cmc
test
cmp
cmp
sbb
fbld
mov
dec
adc
xchg
ret
aad
add
imul
dec
cltd
jmp
leave
out
popa
mov
xchg
iret
ret
lret
repz
cld
push
jmp
sti
mov
or
mov
test
cs
dec
movl
sub
xlat
aad
bnd
div
xor
ret
dec
in
sub
daa
outsb
xor
or
cmp
jno
jmp
mov
in
sti
cltd
pop
rdmsr
cmpsb
dec
aad
mov
cli
adc
jl
stos
add
push
dec
call
into
add
jge
cmp
sbb
sbb
lds
loope
ljmp
push
icebp
and
xor
adcl
inc
mov
mov
loope
mov
lcall
sub
imul
jl
hlt
lds
das
and
adc
sub
jmp
mov
jnp
or
adc
subl
pop
shr
scas
xor
int
xor
xchg
shl
nop
or
jl
and
rcl
cltd
test
inc
hlt
gs
mov
cmp
dec
adc
enter
iret
hlt
adc
xor
sbb
out
lahf
ficompl
in
cltd
sub
dec
push
test
fnsave
mov
int
out
cmp
jnp
out
xor
xchg
cld
pop
movsb
scas
xchg
or
inc
fidivs
scas
add
in
adc
mov
xchg
jle
pushf
andb
xchg
fldl
dec
cltd
leave
mov
push
and
shlb
xor
out
xor
cltd
mov
ret
sbb
sahf
and
push
jnp
test
jb
test
pop
xor
mov
addr16
fnstsw
leave
lods
in
mov
push
adc
ss
pop
fwait
cs
pop
pushf
cmp
cld
pop
cmp
jecxz
push
pop
movl
fsubl
fwait
pop
hlt
adc
dec
push
es
pop
cld
faddl
inc
insb
push
inc
xor
leave
cmpsl
dec
pop
jb
xor
orl
dec
push
xchg
mov
repz
dec
nop
mov
inc
test
fs
divb
add
mov
movsl
fmull
xor
cmp
sub
and
sub
push
xor
add
in
cmp
js
stc
arpl
out
pop
or
and
vmwrite
pop
dec
pushf
aas
les
inc
xor
stos
popa
jl
or
pop
mov
jmp
adc
jmp
cmp
movsb
stos
xor
xor
pop
rcrb
sub
adc
lea
cmpsb
scas
push
lret
jmp
cwtl
stc
in
sub
shll
mov
push
aas
das
loope
rorl
xchg
int3
ror
or
stos
add
fwait
cmpb
int
test
pop
push
jb
cmp
es
mov
into
lods
lcall
mov
jge
jnp
ret
cld
ret
xchg
dec
cs
dec
cli
ss
jg
mov
pop
cmc
adcl
lahf
mov
jb
add
adc
mov
pop
push
in
xor
dec
out
in
lcall
mov
outsl
out
mov
cmp
sti
mov
add
das
pextrw
mov
inc
add
xchg
cli
pop
push
pop
nop
jno
into
std
shl
sub
mov
cli
sbb
jl
idivl
cmp
inc
xchg
mov
cmp
popf
xor
dec
cmp
sbb
adc
sub
sub
arpl
je
xchg
fdiv
push
ss
and
int
pop
mov
xlat
adc
jmp
lods
idiv
inc
pop
cmc
insb
divl
int3
popa
mov
mov
fwait
or
addr16
jb
push
shld
jecxz
cmp
fs
cmp
bound
imull
mull
lock
and
imul
add
adc
loop
xchg
xor
xchg
aam
outsb
sub
lods
mov
ror
adc
xchg
clc
mov
movsb
pop
sbb
mov
outsb
sub
arpl
adc
mov
add
jno
int
int3
repnz
pop
or
or
cmp
lahf
dec
add
outsl
mov
mov
mov
icebp
sbb
adc
in
int3
push
into
xor
pop
rorb
or
jp
bound
inc
jb
jno
sub
scas
push
mov
push
gs
sbb
inc
insl
add
and
xchg
xor
push
xchg
insb
mov
or
pop
mov
dec
arpl
clc
mov
lret
test
sbb
mov
push
test
xchg
sbb
fdivl
dec
aas
cmp
xlat
jp
pop
mov
or
sbb
dec
rolb
push
out
sub
lock
rclb
jae
pop
xchg
into
js
lret
dec
cmp
test
ret
push
lret
mov
mov
and
test
push
push
das
stos
mov
and
shrl
ds
gs
mov
mov
sbb
enter
push
sahf
adc
hlt
mov
loope
add
leave
push
out
nop
mov
jg
dec
es
adc
enter
test
dec
mov
xor
sub
cmpb
add
fnstsw
aas
mov
fldt
into
int3
outsb
scas
cmpxchg
test
sub
cwtl
mov
aad
rolb
sahf
scas
cs
shll
ljmp
xor
inc
shlb
insl
lea
cmp
es
add
push
in
and
pusha
mov
sar
and
dec
lret
jl
and
popf
lret
ret
xchg
imul
or
pop
pop
adc
scas
cwtl
or
jbe
lret
jnp
clc
mov
xchg
leave
loope
xchg
test
mov
insb
scas
insb
mov
and
xchg
loopne
js
mov
and
xor
cmpsl
je
data16
addl
sbbb
enter
mov
clc
das
xchg
out
insl
inc
mov
pop
icebp
jne
scas
lods
xor
rorl
push
inc
and
adc
sarl
or
inc
push
cmp
outsl
fadds
adc
jb
inc
sub
sub
ret
loope
rcl
cmpsl
mov
inc
mov
test
in
xchg
push
inc
xchg
popa
sbb
sbb
les
jle
adc
pop
mov
mov
aaa
repz
xchg
ljmp
mov
stos
jle
or
pop
outsl
or
pop
std
icebp
xor
les
lods
stc
test
lock
outsb
xchg
add
rorl
pop
jb
int
fcom
or
cmp
or
jns
push
pushf
outsb
and
in
orb
cmpsl
imul
mov
mov
adc
scas
in
adc
aad
push
xor
ds
mov
std
mov
jge
fs
push
icebp
cmp
out
mov
mov
dec
imul
cmp
addr16
jbe
in
pushf
and
adc
jbe
dec
mov
addb
xchg
icebp
lods
gs
push
dec
aas
mov
jne
push
mov
pop
adc
stos
mov
inc
lock
mov
sbb
cwtl
push
pop
mov
xchg
int3
or
xchg
mov
xor
fadds
cmpsb
pop
aaa
fwait
xchg
nop
push
stos
loop
fwait
inc
mov
xlat
xchg
movsl
push
cmc
fidivs
outsl
test
jl
arpl
cli
clc
xchg
insl
ds
xor
cmp
scas
aaa
cli
inc
push
cmp
ror
in
stc
dec
adc
and
push
mov
es
add
mov
out
jnp
mov
dec
jl
rcl
add
pop
mov
jbe
dec
jbe
adc
mov
mov
dec
sahf
mov
sbb
cmpsl
push
sub
mov
pop
sbb
mov
notb
ret
inc
mov
insb
jp
xchg
dec
and
pop
movsb
push
data16
test
xor
outsl
test
xor
and
and
dec
mov
mov
sbb
adc
push
out
push
push
pop
sbb
fnstsw
xor
xor
add
mov
push
fisttpll
inc
pop
ret
aam
cmp
sbb
mov
xchg
call
test
fisubs
jbe
inc
je
fsubrs
inc
incl
adc
adc
popa
lahf
pop
mov
das
adc
aas
mov
dec
stos
xor
cmp
mov
mov
clc
sub
rdtsc
mov
sbb
or
pop
pop
dec
dec
mov
popf
mov
fcmovnu
lret
int
cmp
or
pop
pop
dec
dec
mov
popf
mov
fcmovnu
lret
int
cmp
or
jge
insl
pop
pop
lret
dec
mov
popf
mov
fcmovnu
lret
int
cmp
or
jnp
imul
fisttpll
mov
popf
mov
mov
adc
int3
int3
int3
int3
cmc
pop
in
aad
lds
mov
mov
je
gs
push
in
inc
clc
xor
mov
in
aad
lds
sbb
pop
gs
enter
call
adc
inc
cld
push
int
fnsave
add
xor
jmp
cmpl
pushf
adc
cmp
sbb
movsl
leave
push
fildl
repz
jmp
pusha
and
int
xor
je
sbb
lods
jno
cmp
adc
lock
dec
ss
clc
xor
push
or
sbb
es
xorl
xchg
and
push
or
and
lcall
cmp
add
mov
xchg
cmp
movsb
sbb
test
pusha
pop
mov
or
movsl
pop
xchg
jge
xor
jne
mov
push
int
and
sub
xchg
cmpb
dec
xchg
cmpsl
lods
cmp
mov
jo
jbe
adc
dec
cld
pop
aad
lds
sbb
xor
rorb
pop
icebp
sub
mov
cmpb
sbb
ret
imul
mov
enter
lea
xlat
push
and
sbb
sbb
lods
add
xor
fbld
nop
pop
mov
sbb
sub
xchg
cmp
enter
call
adc
pop
in
aad
lds
sbb
sub
gs
call
adc
pop
lret
pushl
in
mov
pop
sub
vpaddusw
inc
cmp
cmp
cmp
mov
jns
arpl
inc
das
jge
pop
pop
inc
stos
std
cmp
incl
mov
outsb
push
adc
or
mov
std
fistpl
sub
out
out
cmpsl
inc
pop
jae
aaa
outsl
outsl
and
test
mov
push
cmp
dec
daa
int
cmp
push
xchg
orb
lret
adc
jo
roll
jg
mov
mov
std
xchg
dec
mov
pop
rorl
fcomps
repnz
dec
and
out
pop
jl
mov
shlb
lret
jo
push
pop
mov
cld
test
scas
paddsb
mov
xor
xchg
mov
lcall
test
nop
sub
adc
dec
outsb
test
std
arpl
cld
jle
dec
idiv
pop
bound
xor
pop
xorb
adc
lret
imul
and
repz
and
xor
xor
mov
mov
bound
mov
daa
xchg
addr16
xchg
push
lahf
dec
xchg
xchg
mov
adc
push
adc
push
and
or
jge
mov
ljmp
pop
movb
cmp
jns
iret
fwait
and
cmp
push
and
aam
jge
and
xchg
pop
xor
sbb
or
pop
jl
lods
cmp
xor
mov
xchg
in
stos
push
dec
movsb
pop
daa
mov
dec
fcmovu
add
pop
sarb
into
orl
or
xchg
or
loopne
add
pop
jnp
out
pushl
ljmp
mov
hlt
lret
mov
mov
xchg
inc
inc
push
iret
xchg
pop
lock
xchg
cmp
push
mov
ficomps
enter
cwtl
andb
lcall
hlt
add
lock
dec
mov
js
mov
push
add
sub
push
inc
mov
push
test
push
pusha
mov
mov
pop
mov
fwait
inc
sub
sbb
mov
dec
aad
jle
sbb
dec
xchg
loop
mov
enter
fiadds
adc
subl
fdivrs
inc
fs
push
inc
jno
jns
ret
std
adc
xchg
rolb
data16
je
push
adc
mov
sbb
cli
push
mov
xor
gs
and
icebp
push
ds
sub
add
add
js
test
pushf
mov
xchg
xchg
adc
or
pushaw
jge
sbb
mov
adc
fisttps
push
lods
enter
cld
xchg
cld
sub
scas
jae
in
sub
pop
mov
call
mov
scas
push
sbb
cmp
sub
xlat
xchg
adc
xchg
mov
lcall
movsb
push
stc
data16
xor
xchg
mov
scas
cmc
mov
mov
mov
mov
xor
dec
fcomp
jne
cs
enter
xor
cld
sub
xchg
in
subl
leave
xor
inc
add
and
pop
cmp
lods
mov
into
cld
xchg
pop
jae
cmp
sbb
mov
cs
pop
adc
jb
dec
cmp
add
push
enter
and
mov
rclb
cli
lret
icebp
jnp
jmp
in
cmpsb
jge
add
push
inc
mov
push
lcall
xlat
pop
add
mov
stos
cmp
aam
jae
pop
in
mov
mov
filds
ljmp
or
test
inc
xchg
insb
outsb
fistps
mov
xchg
and
cli
aam
mov
push
aad
lods
sahf
mov
insb
inc
sub
enter
lock
push
dec
push
jle
out
cmp
adcl
repnz
fstpl
sti
push
icebp
or
inc
adc
hlt
mov
jno
fsubr
lahf
mov
sbb
xchg
ffree
sbb
mov
cmp
dec
xchg
cli
xlat
fs
mov
adc
adc
lds
std
xchg
cmc
scas
cmp
adc
inc
xor
or
mov
xchg
cmpsl
push
push
mov
xchg
add
movsb
int
pop
aas
or
jmp
dec
and
inc
cmc
and
cmp
inc
mov
and
cli
sbb
and
cli
push
xchg
mov
sarl
aaa
inc
fwait
jnp
ds
std
in
mov
jl
xchg
nop
mov
pop
pop
repnz
dec
lret
and
or
test
ret
jmp
pop
cmpsl
lods
nop
lds
stos
mov
inc
scas
or
add
lock
pop
pop
shl
es
push
jns
js
and
aad
and
mov
or
pop
les
test
mov
xchg
pusha
insl
jl
ds
jb
lods
pop
xchg
add
adc
inc
xor
imul
mov
and
mov
sbb
xchg
pop
inc
jmp
adc
out
cs
test
ror
xor
or
add
addl
inc
cmp
xchg
leave
and
jecxz
leave
inc
clc
movsb
js
adc
out
nop
scas
dec
pop
xchg
fistps
clc
sbb
sub
mov
cmpsl
leave
push
fs
mov
mov
push
or
inc
xor
lret
das
subb
arpl
ds
cli
mov
dec
std
outsb
jl
jo
xor
mov
pop
jne
xchg
dec
out
jmp
sar
fs
ss
ds
and
push
sub
mov
adc
jnp
lock
inc
ret
out
add
lea
pop
popf
movb
cmp
add
ss
sbb
fsub
xchg
cmp
imul
adc
push
xchg
cmpsb
xchg
lock
jnp
imul
pop
jns
cmpsb
cwtl
pop
cli
data16
cmp
xchg
mov
lock
cltd
pop
sarl
mov
mov
shlb
rcrl
loop
jbe
sub
test
mov
mov
adc
xor
shl
add
shl
mov
outsb
test
dec
enter
out
frstor
lds
xlat
mov
std
mov
xor
xchg
in
mov
dec
push
jne
jge
xchg
inc
xchg
test
enter
inc
jo
fdivl
dec
cld
xchg
gs
pop
push
aas
mov
daa
loop
faddp
xor
add
and
add
fs
sarl
mov
cmp
or
mov
daa
out
sti
stos
lret
pop
xchg
mov
cmc
fmul
sbb
push
xchg
dec
mov
dec
out
jge
push
mov
jne
inc
sti
fwait
and
jmp
sbb
bound
into
test
loope
cli
sahf
and
push
and
cmpsl
mov
stc
std
arpl
cld
decb
push
or
push
fwait
adc
cltd
sahf
push
loope
xchg
xor
pop
dec
push
dec
faddp
add
scas
repnz
xor
fcoms
or
out
movsl
je
sbb
addl
mov
sbb
sbb
mov
xchg
fdivrs
mov
andl
mull
adc
adc
cmp
sbb
inc
clc
or
add
push
push
arpl
imul
cmp
in
lahf
push
push
mov
sub
adc
and
pushf
and
or
popf
je
inc
sarb
loop
andps
cmp
or
jmp
fstpt
push
sub
jnp
xchg
pop
push
pop
mov
bt
mov
push
xor
popf
sub
push
mov
sbb
or
jmp
xchg
pop
gs
stos
mov
mov
mov
pop
pop
addl
fsubrs
xor
out
xor
jo
dec
repz
ljmp
lods
fwait
sbbl
add
lret
cwtl
adc
and
jle
mov
outsb
std
pop
loop
and
mov
xchg
or
cli
bswap
mov
jle
adc
xchg
arpl
cmc
jns
popa
or
lret
xor
pop
ljmp
rcll
popf
into
add
pop
arpl
mov
xchg
lds
add
inc
pop
lahf
fcmovnb
jg
jae
adc
cmp
bound
cmp
dec
or
mov
add
mov
lea
inc
push
cs
pop
cld
jmp
sbb
push
mov
out
or
push
es
stos
add
pop
pop
inc
push
hlt
or
in
mov
js
cmp
std
inc
jg
ret
cmp
mov
std
lds
xor
fcoml
dec
jne
divb
inc
lds
add
mov
push
jp
int3
lret
pushf
lea
mov
push
ljmp
push
in
repz
mov
icebp
hlt
push
mov
cmp
xor
adc
pop
sbb
xor
test
scas
dec
jns
and
xchg
jnp
jbe
add
pusha
call
mov
es
stc
jne
xor
pop
and
sti
inc
enter
insl
push
adc
sbb
adc
add
mov
loope
outsl
insl
push
xchg
cmp
mov
outsb
sti
iret
sbb
cld
stos
jmp
shrb
and
sub
ret
cmp
dec
leave
ja
inc
aad
mov
dec
push
mov
or
pop
loop
push
popa
adc
cmpsl
mov
xchg
stos
lret
mov
jb
push
jmp
jnp
out
adc
inc
icebp
or
ds
xchg
fwait
aam
lods
xor
and
push
inc
stc
cmp
fcoms
jg
add
sbb
arpl
inc
mov
hlt
ret
and
lcall
pop
iret
out
and
dec
fs
sbb
adc
sub
loope
test
push
mov
xor
push
pusha
out
or
in
arpl
imul
sbbb
push
dec
das
jl
pop
push
imul
mov
adc
xor
sub
orl
imul
xchg
mov
lahf
sbb
mov
jp
sbb
lret
jmp
add
mov
pop
pusha
enter
add
lahf
mov
mov
xchg
or
js
repnz
sbbl
in
ljmp
sahf
ljmp
cmp
shrb
out
fcomi
mov
jnp
or
negb
sarl
pop
push
add
fistpll
nop
mov
xlat
outsl
and
sub
mov
bound
inc
push
cmc
pop
aad
cmp
mov
xor
push
xlat
fucomip
loop
add
add
inc
cmp
jno
cmp
mov
out
mov
ljmp
jne
sbb
push
lret
aam
cmp
into
lds
mov
jl
fmulp
dec
aad
mov
mov
lret
lods
mov
mov
push
lods
push
mov
jno
and
insb
dec
mov
dec
jbe
popf
notb
bnd
jae
sub
push
xlat
outsb
stos
push
cld
xlat
cmpb
push
jp
adc
mov
das
hlt
mov
sbb
mov
cmpsl
jge
mov
add
leave
std
test
cmpsl
ficompl
mov
js
mov
xchg
push
jns
jp
push
dec
insb
cmpsb
addr16
lcall
push
lahf
sahf
push
add
lods
sub
pop
mov
sub
aad
imul
dec
sub
mov
lret
lcall
add
xchg
push
sbb
xchg
mov
dec
je
popf
add
pop
sbb
adc
sar
cmp
cltd
mov
popf
and
jmp
das
mov
roll
mov
call
pop
mov
mov
movsb
xchg
push
in
mov
mov
in
sub
mov
cmc
or
push
imulb
jg
dec
xor
clc
adc
aas
mov
cwtl
mov
mov
aad
ljmp
out
jb
xor
xchg
mov
mov
and
test
mov
jb
leave
frstor
fnstcw
jno
jbe
and
xchg
ror
shll
cmpsb
sub
mov
fstpt
sbb
add
push
leave
mov
shl
cld
lcall
lret
ljmp
or
jecxz
ret
mov
les
and
add
fstpt
leave
mov
xchg
test
mov
push
shl
pop
aas
scas
pop
pop
cmc
das
add
mov
repz
stc
hlt
vldmxcsr
ja
xchg
push
xchg
cmp
jle
push
inc
cltd
into
cs
test
jae
cmp
std
sar
scas
pop
shll
dec
dec
adcb
daa
sub
xor
test
and
inc
shll
and
fwait
dec
sbb
push
mov
fwait
int
iret
ficoms
fcomi
jb
xor
stos
or
fcmovnbe
sbb
inc
xlat
dec
adc
movsl
add
lods
fmul
ret
adc
fs
arpl
inc
fcmovnb
jmp
mov
dec
mov
or
mov
pop
and
out
mov
sub
sub
je
hlt
cmp
test
ja
stos
sbb
push
dec
movsb
and
or
sub
mov
into
mov
xchg
push
int3
sarl
out
push
xor
jo
pop
test
das
sahf
xchg
and
out
or
scas
aaa
pop
mov
sub
hlt
lods
call
outsl
mov
fmul
cmp
mov
in
ret
repz
iret
jmp
jne
notb
rorb
inc
sbb
adc
or
call
push
jae
xchg
lret
das
lret
push
hlt
pushf
pop
add
and
sbb
mov
push
or
mov
sbb
leave
push
cwtl
out
push
fiadds
icebp
or
sub
shlb
jle
or
sbb
lret
arpl
pop
lret
push
pop
les
add
or
cltd
mov
imulb
push
scas
lods
pop
add
lahf
push
and
das
outsl
pusha
dec
ret
daa
loop
ljmp
adc
jo
cmp
cmp
aaa
or
js
sbb
test
movsb
xchg
mov
mov
pushf
mov
outsb
test
pop
add
scas
lds
mov
std
jmp
stos
adc
push
sbb
push
cmc
xchg
clc
cs
mov
aas
ret
imulb
stos
ds
adc
xchg
cld
vzeroupper
popa
std
sahf
imul
sbb
nop
test
mov
jle
push
scas
pop
jp
call
cmp
stc
loope
xor
lret
lret
in
ss
loopne
xor
cmp
fs
sub
loop
pop
mov
cmpsb
fwait
leave
dec
rolb
push
mov
test
and
adc
int
mov
cvttps2pi
xchg
mov
xor
aam
pop
and
sub
cli
dec
imul
movsb
cli
stos
and
jle
inc
stos
add
outsb
fwait
inc
subb
add
sub
int
gs
mov
adc
aas
aas
xchg
lahf
out
mov
fcmovbe
or
push
inc
fildll
jb
iret
inc
jecxz
in
xor
popf
adc
aad
adc
movsl
mov
push
inc
jp
ljmp
cld
pusha
or
repnz
frstor
stc
sub
hlt
je
xchg
mov
out
xchg
push
pop
pop
pop
xchg
out
mov
dec
stos
xchg
gs
mov
pop
jge
shll
inc
jmp
add
cwtl
cmp
push
and
cmp
xchg
repz
imul
std
pushf
nop
inc
popf
popf
std
dec
adc
pop
in
xor
mov
js
cltd
dec
js
sbb
dec
xlat
jnp
int
add
fcmovbe
dec
int3
add
mov
push
jmp
shl
ror
xchg
adc
jns
in
dec
cmc
add
xchg
or
and
cltd
adc
sbb
and
ret
imul
movl
and
in
rcrb
xor
aaa
pop
cwtl
sbb
iret
imul
inc
sti
out
stos
in
out
pop
sub
dec
hlt
pop
popa
sub
sbbl
pop
aaa
aas
in
pusha
add
xchg
andb
idivb
jno
sub
push
jb
or
test
mov
hlt
and
sbb
push
out
mov
in
inc
inc
lds
rcrb
mov
xchg
or
idivb
mov
aaa
js
xchg
shl
add
lret
sti
les
in
iret
push
in
pop
loope
dec
lods
mov
nop
in
fistl
pop
sub
cli
outsb
sbb
fildl
xor
mov
jl
sbb
and
test
divb
orl
jae
clc
aas
mov
sbb
mov
pop
inc
jp
sbb
adc
loopne
orl
pusha
xor
clc
jl
nop
push
mov
xchg
leave
fidivs
fstpt
int3
shr
jge
test
xchg
lds
xor
daa
push
push
lcall
push
sub
pop
jbe
out
jae
mov
adc
cmp
js
dec
pop
lods
mov
sub
xor
popf
push
jmp
mov
dec
push
jns
push
lds
inc
aas
cmp
and
call
pop
in
add
stos
not
jle
sbb
pop
push
mov
mov
cmpsl
jl
inc
sahf
add
pop
cmp
enter
sub
jne
jbe
mov
jae
dec
adc
aad
mov
fcompl
shrl
dec
jb
mov
leave
xchg
sub
notb
stos
sub
stc
rcll
testl
iret
sub
ds
add
call
movsb
sub
in
cmpsl
das
mov
pop
mov
jae
pop
in
ret
adc
shl
sti
push
mov
leave
jb
dec
sub
call
lods
adc
add
pop
test
add
orl
and
pop
cs
outsb
pop
mov
int3
adc
mov
dec
pop
xor
pop
push
fnsave
js
fcomps
mov
xor
mov
fwait
pop
inc
test
pop
push
int3
dec
mov
jge
out
push
mov
insl
pop
mov
out
sub
or
push
xor
push
incb
lahf
movb
adc
xor
dec
sbb
cmp
xchg
mov
nop
cwtl
mov
sub
jl
cmpsb
dec
int
shlb
push
mov
repz
stos
addr16
mov
outsl
clc
idiv
add
ficompl
push
int
faddl
out
stc
dec
mov
pop
or
outsb
sti
pop
popf
or
ret
xor
fcom
lcall
pop
and
into
xchg
lahf
pop
dec
out
dec
add
cmpsl
mov
xor
jo
push
pop
mov
ficoms
xchg
jno
mov
mov
xor
adc
test
add
mov
push
out
popf
push
mov
aaa
push
int
pop
sbb
mov
or
mulb
ljmp
mov
fdivr
les
stos
dec
add
push
fidivs
or
jle
test
jb
das
repnz
dec
mov
or
and
xor
mov
fwait
pop
int3
pop
repnz
mov
sub
test
ds
sbb
lods
jp
pop
mov
sarb
dec
imull
xor
ja
inc
gs
xchg
stos
sar
push
mov
xchg
ds
outsb
push
push
inc
sbb
cmpsb
xchg
sbb
lret
pop
aad
xorl
cmp
out
push
xor
mov
shrl
les
and
ljmp
mov
push
rclb
xchg
lret
ret
fiadds
xlat
mov
test
add
mov
je
call
sbb
pop
pop
xchg
faddp
add
and
repnz
add
aaa
inc
testb
sbb
xchg
ljmp
mov
nop
push
xchg
push
jo
push
and
out
lods
sti
xor
cmp
fs
adc
ss
out
sub
pop
push
cmp
movsl
pop
push
push
ljmp
sub
sub
fwait
cltd
loopne
cmp
loopne
and
xchg
adc
push
sbb
in
fisttpll
dec
inc
adc
jnp
hlt
fsubrp
inc
xchg
push
xchg
adc
lds
pop
or
and
imul
inc
es
cmp
lea
mov
adc
xchg
adc
pop
cmp
inc
lret
jb
nop
jns
std
mov
dec
cmp
fs
roll
dec
xchg
loope
xlat
test
push
test
add
jg
orl
dec
push
dec
int
shll
xchg
mov
push
rcpps
out
adc
inc
push
cmp
jne
dec
push
adc
push
js
int
push
pcmpgtb
and
lahf
leave
cs
ret
xor
test
xor
inc
arpl
xchg
sub
push
xorl
pop
push
push
add
pop
jne
pop
push
adc
jle
push
lds
mov
jns
shl
mov
ret
std
xchg
pop
sub
dec
adc
lods
fpatan
into
or
popf
lods
adcl
xor
add
push
bnd
or
stos
pop
cli
adc
dec
push
pop
sarb
out
or
lds
shr
dec
mov
loop
push
popa
pop
jns
repnz
pop
stos
stos
rcrl
or
sub
insb
cmpsl
imul
aad
outsl
in
jb
fwait
push
icebp
shrl
fsubrl
es
stos
fdivrl
add
leave
or
fs
or
outsl
fidivrl
or
and
mov
xlat
mov
iret
hlt
xor
adc
xchg
inc
pop
je
aam
cmp
push
stos
jne
cmpsb
outsb
imul
shll
test
in
scas
sub
mov
pop
clc
dec
aas
sti
int
or
push
cmpl
sub
cmp
dec
insb
sbb
xlat
sbb
cmp
jne
push
sub
dec
inc
test
xor
outsl
dec
std
push
repz
scas
cltd
cmp
cwtl
xor
popf
out
into
xor
or
call
mov
pusha
jle
jl
in
nop
dec
mov
loop
sti
imul
xchg
jae
jg
loope
pop
shrb
test
rclb
jb
rorb
addr16
shrb
dec
fistpll
push
xchg
cmp
enter
call
adc
pop
in
aad
lds
sbb
sub
gs
call
adc
pop
in
aad
lds
sbb
sub
gs
in
xor
mov
out
aam
lds
sbb
call
clc
inc
lahf
inc
adc
xlat
int3
int3
int3
int3
int3
lock
mov
ljmp
push
or
cmp
dec
cmp
jl
jl
mov
mov
lret
cltd
and
sbb
sub
jnp
dec
insb
pop
jl
mov
mov
shr
int
sub
aas
dec
outsb
push
inc
or
add
or
or
sarb
loop
push
xor
out
and
rorl
divb
lds
mov
mov
mov
sub
adc
sbb
jecxz
rcll
sub
pop
sub
sub
ret
jle
jnp
cmp
aas
sub
ret
xchg
mov
pusha
loopne
popf
mov
add
ljmp
ficompl
lock
jecxz
ljmp
or
mov
dec
dec
inc
arpl
push
out
mov
inc
cmp
fidivrl
lds
pop
rcrl
cmp
pop
jnp
movl
mov
adc
mov
xorl
data16
jne
or
sbb
pop
sbb
stos
pop
push
stos
insb
pop
subl
pushf
mov
fmul
in
ret
cld
xor
sbb
sub
cmp
dec
bound
inc
cmp
mov
in
in
std
mov
mov
pop
jl
add
push
cmp
sbb
push
aas
sbb
in
fistps
mov
cmp
dec
outsl
outsb
movaps
lret
pop
sub
int
iret
out
leave
lcall
in
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
rol
bnd
cmp
or
test
aaa
shrb
jo
xchg
adc
pop
arpl
sahf
insl
xor
test
sbb
add
inc
stc
mov
dec
mov
inc
mov
int3
scas
adc
out
gs
rol
mov
mov
shlb
popf
sti
lcall
add
in
mov
push
push
mov
mov
dec
sub
ljmp
cmpsb
xorb
aam
or
xchg
dec
jnp
push
push
in
jl
jge
jge
and
popf
aas
jo
mov
fs
add
cld
jbe
mov
push
mov
cmpsl
in
push
cld
mov
xchg
testb
inc
push
mov
loopne
stos
rcrb
cmp
ss
jmp
lcall
das
or
jb
xchg
cmp
jmp
dec
adc
dec
xchg
es
mov
das
sub
cmp
mov
mov
fwait
inc
aas
mov
xchg
pop
adc
loop
pop
in
mov
pushf
ret
and
divl
inc
insl
sbb
out
repnz
dec
dec
jb
pusha
xchg
mov
pop
rcll
push
leave
stc
jl
mov
mov
iret
xor
pop
dec
inc
out
lahf
jecxz
ja
mov
ret
enter
cmp
xchg
pop
popf
mov
xchg
stos
sub
sbb
add
dec
mov
and
into
insl
nop
pop
and
leave
lods
dec
cld
fcompl
enter
dec
pushf
mov
ja
sbb
sub
lret
cmp
xor
rcrl
sbb
movsb
push
jl
iret
sub
repnz
out
xchg
xor
shll
pop
subl
cmp
jmp
rcl
mov
les
lret
rcll
dec
dec
sbb
or
outsl
loopne
xchg
sar
out
into
lcall
mov
sbb
rcrl
pusha
cli
insl
lods
adc
xor
in
ss
cmp
sbb
pop
xchg
add
inc
mov
fs
xchg
ja
sbb
daa
stos
or
std
mov
xchg
ljmp
icebp
popa
fisubrl
mov
out
fwait
imul
push
cltd
filds
cmpsb
in
push
add
sub
pop
xchg
jno
sub
sbb
sub
mov
sti
hlt
mov
imul
test
push
sbb
rcl
mov
lods
inc
cmp
dec
mov
add
adc
rcrl
xchg
xchg
sbb
cltd
xor
pop
and
cmp
mov
add
sub
jne
push
mov
or
test
in
and
cwtl
rol
sub
frstor
data16
dec
mov
mov
push
pop
adc
or
fldt
pop
and
inc
andl
jno
add
stos
xlat
add
bound
inc
xlat
push
fs
out
xor
jecxz
imul
js
ss
testb
xchg
shlb
lcall
and
int
mov
mov
add
std
push
mov
test
enter
mov
orl
pop
inc
std
cmp
outsl
nop
add
sbb
shl
push
das
dec
jmp
cmpsb
enter
and
stos
cmp
jge
add
dec
cmp
sub
stc
imul
pop
or
popf
sbb
sbb
nop
mov
cmp
shrl
dec
push
aad
les
mov
stos
dec
cmp
fwait
inc
mov
push
xor
lret
mov
jns
push
add
and
hlt
jp
dec
ds
lds
es
adc
adc
lods
dec
movsl
mov
and
pop
loopne
or
je
xor
out
mov
mov
jne
and
imul
fs
scas
iret
aaa
lock
add
dec
jno
xor
cmpsb
xchg
cmp
fcom
push
cmp
testb
dec
mov
and
sarb
lret
and
nop
jmp
das
cmp
jb
or
pop
adc
and
sub
add
jge
pop
sbb
push
sub
jl
mov
pop
dec
enter
fldt
jb
mov
sub
and
test
loopne
bound
adc
test
xlat
mov
int3
fistl
fcoml
rcrl
call
testl
xchg
mov
mov
or
cld
push
lea
and
xchg
sbb
pop
xor
mov
and
push
ss
inc
imul
ljmp
mov
cld
sbb
out
dec
ja
add
xchg
rcrl
int
out
mov
dec
rcll
push
test
lahf
xchg
into
movsb
shlb
ds
mov
and
ss
adc
ret
mov
ljmp
es
push
ret
jg
sbb
repz
xchg
test
mov
cmpsl
mov
push
inc
adc
sub
mov
dec
aas
mov
iret
sbb
je
mov
xchg
out
stos
pushf
xchg
test
or
mov
sub
loopne
sub
xchg
out
jle
mov
adc
movsb
fiadds
jge
orl
popa
add
fildll
add
mov
fistps
fstpl
or
out
aad
sbbl
mov
imul
setg
ss
repz
add
xchg
int3
inc
andb
push
shll
mov
and
dec
xchg
ss
pop
sbb
loopne
xchg
adc
jge
mov
imul
addr16
dec
ret
jb
out
outsb
sbb
mov
xchg
fdivrl
das
mov
dec
pop
xchg
lock
and
call
inc
xor
jmp
repz
push
cmp
mov
test
add
mov
sbbb
add
xchg
cmpsb
fisubl
pop
imul
lods
wrmsr
stc
sti
ja
pop
or
sub
or
inc
orb
push
movsb
sub
test
stc
jno
push
dec
adc
jo
mov
stos
add
push
jae
lds
xchg
add
shr
lret
mov
jo
jp
jp
cmpsb
cs
imul
jne
inc
pop
pusha
sub
jp
scas
jo
sub
gs
push
pop
jmp
xchg
sub
dec
adc
test
scas
push
icebp
movsb
sbb
sub
sbb
or
mov
sbb
pop
mov
jecxz
mov
add
xor
mov
cmp
push
ljmp
popf
mov
sub
lock
xchg
out
iret
je
daa
xor
mov
jbe
cmpsb
and
cmpsb
sbb
xchg
repz
sar
movsb
sbb
add
leave
xchg
lods
rorb
pop
imul
mov
idivb
in
push
jbe
cs
in
insl
js
dec
xchg
jp
imul
es
dec
les
outsb
aad
and
ljmp
adc
mov
js
pop
cmp
pop
subl
nop
mov
pop
adc
inc
and
and
xchg
negl
stos
xchg
mov
sbb
scas
mov
and
fdivl
dec
push
and
cmc
sbb
mov
sub
push
xor
mov
gs
push
lcall
add
push
push
lods
insl
xchg
jmp
and
jnp
push
movsb
mov
dec
mov
pop
pand
cwtl
mov
icebp
sbb
jg
xchg
daa
mov
xor
dec
popf
fstpl
xchg
dec
fstl
shrb
jb
inc
loop
cmpsl
or
clc
in
and
sbb
cmp
leave
out
mov
pop
popf
lds
sub
icebp
fdivs
xchg
xchg
mov
repnz
cmp
or
mov
and
cmp
dec
or
xor
add
repnz
sar
push
mov
push
mov
jo
push
cwtl
sahf
inc
push
push
fistps
fsubp
mov
addr16
mov
sbb
rorl
push
xchg
dec
pop
test
cld
sbb
and
add
mov
and
inc
push
sbb
adc
fwait
mov
lret
call
pop
pop
aaa
mov
push
std
sbb
enter
call
iret
sbbl
es
cld
xchg
inc
xlat
outsl
dec
jge
cmp
aas
jmp
or
cltd
mov
mov
imul
outsb
xchg
push
imul
cmp
sbb
loope
mov
cmp
mov
push
cwtl
push
ss
xor
jle
inc
loope
inc
insb
movsb
adc
jbe
xor
mov
loop
es
shlb
mov
ret
testb
loop
movsb
ds
ret
push
jae
rorb
in
stos
xchg
mov
lock
xor
int
push
imul
jo
cmp
cmc
sbb
push
add
add
xchg
lock
mov
cmp
test
jbe
das
add
in
mov
cmp
lret
pop
push
xchg
sub
stos
jmp
jmp
add
hlt
popf
jne
dec
test
imul
nop
lea
insl
dec
out
loopne
xor
stos
xchg
pop
fpatan
loope
xchg
sahf
lods
call
mov
popf
lock
xchg
shl
test
sub
imul
out
and
mov
insb
push
int
push
in
je
pop
movsb
add
rorb
das
sub
in
imul
test
fcmovb
or
cmp
inc
sar
pop
push
dec
mov
xchg
add
fcoml
mov
jno
xorl
push
decb
xchg
ja
scas
test
add
lods
nop
js
shrl
test
arpl
pushf
scas
and
scas
out
xchg
hlt
ja
jbe
stos
or
das
in
inc
xor
arpl
inc
add
les
mov
inc
xor
rcrb
mov
mov
xchg
test
adc
das
add
sub
pusha
fiaddl
sub
sub
in
dec
adc
inc
cmpsb
push
adc
cmp
and
cmp
loope
and
jne
cs
fsub
adc
aas
mov
xor
jne
mov
subb
and
ret
scas
adc
es
jb
test
xor
xchg
pop
mov
and
dec
outsl
push
subl
push
hlt
clc
out
iret
xor
inc
cli
in
js
and
fs
clc
sub
adc
popf
xlat
cs
adcl
push
daa
in
cmp
roll
xchg
add
mov
lds
cwtl
daa
insl
lea
jge
adc
gs
and
ret
push
and
rorb
push
mov
aas
xor
les
pop
rorb
das
test
push
sub
cld
mov
or
inc
jo
decl
inc
inc
std
pop
loop
mov
test
cmp
cmc
test
xor
mov
les
sti
stos
gs
cmpb
stos
xchg
dec
and
pop
mov
push
jle
cmpsl
mov
cli
popf
lock
add
or
imul
test
movsl
fidivrs
pushf
and
mov
push
ret
fcmovne
inc
mov
mov
xlat
lods
loope
lods
add
popf
jbe
sbb
sahf
xchg
add
cltd
cli
mov
and
jg
sbb
mov
pop
jmp
fbld
out
aad
jno
jno
ss
mov
int
xchg
mov
out
movsb
pop
imul
loope
pushf
shll
loop
add
add
sbb
es
push
js
inc
fisubrl
cmp
int
adc
std
jns
jle
dec
pushf
cwtl
jbe
push
loop
pop
jbe
xor
xorl
ficompl
add
ret
iret
xor
rcrl
xor
dec
test
mov
sub
fsubl
repnz
sbb
cli
sbb
cs
add
mov
sarl
test
cltd
outsl
cwtl
xor
nop
add
sub
xchg
or
mov
add
or
sbb
adc
fs
icebp
sbb
add
jg
fbld
sub
pushf
cmc
sbb
sbb
add
lock
add
push
test
test
add
mov
mov
xlat
jb
adc
push
sub
scas
mov
lea
pop
lds
inc
jb
mov
or
lea
loop
pop
xchg
roll
pop
sub
lock
push
movaps
arpl
mov
sbbl
mov
inc
sub
add
out
scas
outsl
adc
scas
mov
js
inc
sub
movsl
adc
into
into
xchg
add
mov
pop
rorb
cs
push
xchg
cs
out
inc
adc
test
movsl
rcrb
iret
out
daa
rcrb
pop
aas
xchg
adc
xor
rolb
jne
adc
or
xchg
dec
or
lahf
mov
call
dec
dec
aad
xor
add
dec
test
popa
filds
jp
scas
cs
dec
pop
loop
mov
popf
lds
pop
test
lea
push
sahf
sbb
xchg
xor
loopne
adc
out
cmp
mov
push
mov
movsl
repnz
mov
push
dec
psllq
loop
popf
mov
xor
addr16
sahf
add
or
jns
out
pop
pop
std
mov
xor
mov
xchg
mov
xor
in
cwtl
lea
aaa
or
fiadds
fmuls
cli
movsl
add
fnsave
cmc
in
sub
call
dec
shlb
lods
mov
stc
ljmp
xlat
das
out
mov
movsl
cltd
push
fcomps
xchg
sub
in
cmp
mov
xlat
push
push
adc
loopne
add
jge
insl
cwtl
xchg
jecxz
aam
inc
pop
outsb
bound
cmpsb
call
jmp
gs
pop
cs
test
push
jp
cld
rcrb
pop
mov
gs
int
aam
into
jge
in
xor
popf
jecxz
cmp
push
xor
jbe
mov
push
jns
push
sbb
xlat
mov
xorb
mov
cmpsb
js
sbb
leave
dec
push
in
cmpsb
jp
xlat
pop
xchg
push
insb
sub
daa
das
enter
sub
xchg
int3
push
inc
popf
call
enter
shll
push
mov
jae
mov
xchg
test
clc
mov
sbb
cmpsb
cmp
hlt
sub
int
fstpt
push
outsb
rcrb
imul
dec
jle
sbb
pushf
adc
inc
mov
mov
cwtl
shll
repz
cmpsb
je
inc
iret
inc
mov
jae
insl
mov
cli
ja
push
pop
cli
inc
insb
fwait
adc
mov
mov
out
negl
fimuls
scas
stos
dec
lock
repz
ss
int3
lcall
lcall
xchg
jmp
pop
fdivrl
add
sbbl
mov
and
test
cli
dec
and
mov
fiadds
in
movsl
adc
mov
test
and
inc
pop
xchg
cmp
push
nop
popa
insb
ja
cmc
hlt
or
inc
adc
push
les
in
push
out
push
mov
sub
dec
xsaves
jp
adc
pusha
shl
adc
dec
mov
push
insl
or
arpl
gs
add
cmp
xor
mov
cmp
int3
ret
xchg
mov
clc
insl
mov
mov
enter
mov
sub
xor
xchg
test
imul
mov
xor
ret
xchg
int
pop
movsl
mov
mov
push
test
sbb
sub
sub
mov
add
mov
mov
inc
push
cmp
mov
and
insl
mov
dec
sahf
je
out
aam
add
in
stos
leave
add
out
cmp
mov
les
ljmp
fdivs
jle
imul
and
or
loopne
xchg
sub
xlat
jmp
sti
hlt
cmpsb
or
outsb
out
cmp
adc
outsl
es
add
sub
pop
data16
mov
shrb
cwtl
lret
and
es
sbb
repnz
fdivrl
je
in
inc
std
call
mov
clc
sarl
imul
mov
stos
stos
sti
lea
iret
pop
xor
pop
mov
es
rclb
jo
rorl
dec
mov
outsb
in
decb
sub
cmp
add
testl
adc
jo
lods
xchg
nop
mov
mov
icebp
in
jne
xor
mov
lahf
std
lret
mov
and
nop
adc
xor
enter
imul
sbb
xchg
mov
mov
mov
lods
jle
popf
dec
lods
and
popf
pop
movsb
push
call
mov
adc
jg
cmc
out
bound
xchg
stos
jnp
shll
or
cmp
xchg
jl
or
push
cmp
xchg
mov
fistpll
sub
cltd
and
daa
jle
push
sar
jp
sarb
push
test
in
push
ficoml
mov
dec
mov
scas
and
ljmp
xchg
or
jbe
popa
sbb
shrl
xlat
pop
arpl
lret
fsubrs
xor
shrl
mov
sbb
loop
aas
xorb
mov
and
mov
mov
popa
jne
aam
xor
loop
add
jo
xor
shrb
aaa
mov
aaa
push
arpl
aas
js
push
mov
fisubrl
inc
jnp
add
pop
lahf
arpl
popf
je
pop
subl
popf
mov
stc
scas
push
cmp
inc
cli
pop
fcomi
jg
dec
push
cltd
and
push
mov
cmc
or
movsb
or
hlt
adc
xchg
push
lret
adc
xor
out
fdivr
and
cli
mov
movsl
and
leave
cmp
leave
arpl
lds
inc
mov
hlt
sbb
and
scas
enter
and
mov
fisttps
lds
jle
mov
cs
cli
int3
rcrb
adc
mov
jecxz
jae
pop
jo
xor
imul
sbb
jl
popf
iret
xlat
sbbl
push
add
ss
lahf
xchg
push
out
or
add
jg
js
lods
mov
xchg
xor
dec
add
push
out
neg
lods
xlat
jge
sbb
sarb
enter
sbb
mov
sub
scas
sub
in
cs
add
bswap
inc
stos
sub
push
ss
lods
rorl
repnz
rcr
mov
ss
pop
dec
mov
or
idivb
dec
cmp
rcl
cmpsb
mov
test
aaa
or
psubsb
inc
out
jbe
inc
test
lods
dec
test
inc
test
hlt
in
pop
jno
inc
adc
or
fcomps
cmp
lret
dec
std
int3
and
loopne
adc
fwait
sahf
jne
xchg
outsl
and
icebp
rcll
ja
cmc
mov
mov
add
pop
scas
push
cmp
jl
cltd
xor
arpl
inc
pop
aad
bound
or
shlb
rol
cwtl
rcll
movsl
or
mov
pop
fistl
in
mov
pop
fldt
out
js
jae
sbb
jl
sbb
xor
cmp
popf
pop
es
aaa
insb
int
sub
lcall
daa
xor
repnz
movsb
push
icebp
inc
mov
lcall
mov
mov
lds
fisttpl
jge
fistpll
add
xlat
lea
icebp
aaa
push
mov
into
arpl
push
pop
xchg
mov
push
mov
lahf
push
inc
imul
inc
pop
ret
dec
rcrl
sbb
in
pop
setp
sub
imul
pushf
in
inc
fwait
jg
ret
fdivrp
jnp
into
nop
jge
sbb
jne
out
inc
sbb
ss
cmp
out
imul
cwtl
stos
jmp
scas
das
fisttps
aas
and
test
sub
cmp
mov
xchg
test
inc
cmpsb
pop
or
ret
sbb
xor
outsl
arpl
addr16
loopne
popa
imul
push
jne
das
je
mov
jmp
test
or
fistl
lret
out
dec
cmpsb
inc
and
mov
mov
jmp
stos
xchg
pop
and
bound
sbb
divb
or
or
mov
cmpsb
cmpsl
pop
add
arpl
loope
and
xchg
mov
lret
or
mov
dec
mov
js
xlat
fstps
imul
out
sarl
repz
adc
cmc
scas
xor
mov
or
adc
gs
test
sbb
jecxz
mov
lds
fbld
outsl
pop
sti
shll
sbb
adc
mov
bound
lock
fsubr
inc
sub
cmpsl
mov
std
xor
sub
loopne
inc
push
and
insl
mov
inc
test
imul
rorb
add
je,pn
sub
mov
orl
pop
mov
jne
push
mov
int3
adc
imul
push
pop
lock
lcall
push
imul
int3
stos
stos
rcll
mov
push
rcll
stos
aad
xchg
mov
sbb
lcall
cli
push
sarl
fsts
nop
call
add
jo
or
es
mov
add
push
mov
nop
nop
loope
inc
mov
mov
jnp
ss
popl
pop
lcall
sar
inc
add
inc
add
jb,pn
mov
xor
out
sbb
test
in
pop
mov
loopne
fcomps
jl
mov
xchg
jl
lods
mov
adc
jae
push
shl
xlat
xor
push
xchg
inc
repz
fs
cmp
mov
or
or
call
mov
or
push
in
insl
or
jbe
scas
pop
out
jae
in
cld
imul
outsl
fsub
mov
cmp
jnp
xor
mov
sbb
mov
dec
mov
loopne
adc
sub
and
inc
rcrl
push
sub
or
jmp
jbe
inc
adc
cmpsb
jne
imul
lret
push
test
pushf
inc
lods
lcall
in
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jle
dec
insb
imul
pushf
mov
int3
cli
fmull
pop
cmp
or
mov
sub
dec
sbb
xchg
movsl
or
int3
int3
int3
mov
push
mov
mov
mov
xor
add
push
mov
push
mov
push
add
push
mov
push
mov
push
mov
mov
mov
mov
push
push
push
push
pushl
xor
pushl
push
call
mov
mov
mov
movzbl
sub
je
call
mov
add
inc
cmp
mov
jne
movzbl
jmp
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
xor
mov
test
xchg
cmp
aam
cmpsb
dec
mov
and
xor
add
iret
jne
push
ljmp
test
xchg
cmp
dec
hlt
pop
les
push
and
xor
mov
je
inc
ljmp
test
hlt
adc
pusha
aam
and
xor
gs
jno
pop
cltd
sbb
sahf
aam
mov
enter
outsl
inc
aam
aas
jmp
aaa
gs
inc
push
push
adc
cmp
icebp
pop
aad
in
sti
rorl
mov
pop
push
cltd
ljmp
lods
mov
bound
lret
jle
dec
lcall
push
stos
jmp
fidivrl
mov
adc
movsb
js,pn
in
fsubrs
stos
aam
xor
bnd
push
cld
mov
push
adc
dec
out
xlat
add
les
inc
int
dec
adc
aaa
mov
stos
ja
cmc
mov
push
pop
adc
add
cmp
cmp
adc
lret
cltd
rclb
mov
push
nop
sti
xchg
in
hlt
pop
les
call
add
adc
divb
repnz
enter
jne
inc
ficoml
out
xchg
aaa
sbbl
cmp
imul
fsts
lea
mov
sahf
and
lock
fcoml
sbb
dec
jbe
pop
out
jl
jno
das
test
ficoml
dec
mov
jns
cli
out
mov
movsl
push
hlt
pop
les
jp
mov
add
adc
fs
inc
ljmp
test
xchg
cmp
dec
hlt
pop
les
jp
mov
add
adc
fs
inc
ljmp
or
aam
sub
cmp
sahf
mov
test
bound
int3
int3
imul
push
cmp
js
add
imul
inc
xor
dec
stos
rcr
insl
lock
mov
xor
cld
xor
arpl
and
test
ljmp
lds
or
xchg
mov
mov
and
rcll
xor
xchg
add
fimuls
mov
jl
dec
push
je
adc
fistpl
bound
lcall
sahf
dec
xlat
add
xlat
push
mov
js
fldenv
arpl
dec
bound
lret
mov
loopne
xlat
test
in
fcomip
push
push
cmpl
jmp
pop
pop
mov
inc
nop
outsb
mov
inc
adc
addb
push
mov
cld
sbb
stos
fwait
jns
into
aaa
lea
push
xchg
adc
cmp
cmp
mul
push
dec
cmc
hlt
xor
and
sti
mov
rcrb
inc
pop
sub
adc
call
push
leave
insl
outsl
mov
imul
dec
mov
sbb
xchg
add
push
out
fisubs
jg
jg
fildll
popf
pop
pop
popf
push
repz
inc
push
int
test
and
xor
mov
ljmp
int
addr16
in
iret
pop
and
cmpsl
test
and
icebp
or
mov
loope
cvtps2pd
inc
cmp
ror
mov
adcb
push
cmp
scas
inc
jb
pusha
sar
testl
addb
xor
popa
push
hlt
scas
xor
inc
cwtl
mov
int
push
repnz
addr16
lds
sbb
inc
mov
ljmp
xor
dec
jbe
fcmovnb
int
pop
lea
sbb
pop
icebp
jo
out
pop
cmp
rdmsr
out
mov
xchg
cltd
xchg
push
sub
outsb
cmp
push
fsubs
mov
xchg
add
jp
jns
mov
scas
ja
into
call
adc
sbb
mov
pop
jb
rcr
adc
xor
pop
pusha
fsubrl
xor
pop
sub
inc
pop
sbb
das
dec
ret
inc
pop
ja,pn
out
std
data16
xchg
inc
sbb
pop
movsl
sub
dec
js
sbbb
clc
loope
add
dec
andl
cmp
repnz
xchg
lds
pop
add
movsl
loope
insl
in
add
int
stos
pop
popf
sub
cli
shlb
rcrl
push
sub
mov
jo
cmpl
push
jnp
aas
cld
mov
arpl
testl
lahf
pop
push
add
movsb
pop
pop
cmpsl
push
mov
test
cmp
lcall
loop
pushf
repnz
dec
std
add
or
or
sub
repnz
jmp
in
ret
push
fucomip
popa
fstpt
popw
pminsw
jbe
test
mov
mov
fcoml
sub
xchg
add
inc
clc
fstpt
mov
and
sub
sub
daa
sub
movsl
xor
inc
jae
jge
mov
lret
cs
clc
lock
mov
ret
xchg
mov
movsl
into
cmc
repz
mov
test
paddusw
sub
int
xorl
pop
push
in
inc
scas
jmp
rorb
cli
cmp
gs
mov
push
ja
imul
adc
sbb
push
fadds
mov
call
sub
mov
mov
mov
daa
filds
pop
mov
lcall
mov
cli
aas
in
arpl
xchg
mov
mov
les
bound
sahf
test
roll
mov
in
mov
pop
mov
jae
mov
mov
and
hlt
xchg
jbe
insl
stos
ds
xchg
imul
mov
push
xchg
jae
incb
lgdtl
enter
and
xor
inc
push
repnz
flds
sub
pop
popa
mov
stos
xchg
daa
gs
or
les
or
dec
push
rclb
std
jge
mov
xor
cmpl
orb
je
or
xchg
test
adc
lret
or
cmp
popf
jecxz
out
inc
push
xchg
outsl
out
pop
cmp
sbb
add
in
adc
lock
add
jmp
push
push
mov
mov
in
scas
jl
out
sbb
adc
mov
mov
or
fstl
imul
fcoms
sbb
sbb
mov
jae
pop
lods
push
jle
ret
jmp
ljmp
pop
and
gs
mov
sub
shlb
pushf
xchg
outsl
in
push
enter
in
or
test
sub
andb
push
scas
dec
into
sub
lods
mov
adcb
sahf
pop
dec
dec
mulb
mov
iret
ret
aam
jbe
add
dec
push
ret
cwtl
cltd
addr16
gs
std
out
adc
xchg
mov
jo
shl
xor
push
movntps
es
idivl
mov
add
aam
lahf
jns
repnz
in
jb
mov
lods
mov
pop
push
movsl
movl
rorl
cltd
add
loop
fldenv
stos
call
rolb
sahf
mov
dec
mov
cmp
mov
rcll
inc
test
mov
cmp
fildl
lds
push
fidivs
pop
xchg
jns
insl
cmp
sbb
lea
inc
push
bound
sub
lret
mov
and
jbe
add
mov
dec
lret
insb
test
cmp
frstor
out
pusha
or
sbb
mov
insl
fiaddl
stc
test
mov
aaa
pop
dec
stos
arpl
push
jae
insl
mov
sbb
sub
mov
stos
cmpl
js
add
and
inc
inc
out
aas
clc
push
pop
aam
ret
data16
mov
rcrb
popf
pop
dec
mov
mov
shll
mov
sub
fsubl
mov
icebp
push
in
push
push
xchg
xchg
rorb
fwait
or
mov
inc
add
and
loope
and
pop
mov
mov
xor
adc
add
and
dec
pop
imul
or
mov
jns
jae
push
sub
aaa
mov
movsb
filds
in
mov
ret
addr16
dec
and
test
mov
in
pop
xchg
sbb
add
mov
adc
mov
lahf
adc
call
jae
sbb
or
mov
das
fucomip
and
ss
or
lret
gs
addl
sub
jae
ret
call
mov
dec
out
push
test
cmpsb
xorb
imulb
shl
and
lret
popa
ds
cmp
call
mov
nop
jle
mov
add
ss
daa
addr16
pop
or
push
pop
stos
lret
rep
mov
addb
mov
hlt
rorb
push
ljmp
inc
in
adc
les
decl
jb
xor
outsb
push
das
lcall
xchg
addr16
adc
int
xchg
les
fidivrl
jge
xchg
imul
mov
xor
mov
lcall
in
jmp
cmp
fwait
xchg
and
stos
xchg
mov
cltd
lahf
fs
sti
ss
sbb
or
popf
xlat
or
movsb
or
shlb
push
popa
imul
mov
dec
nopl
mov
adc
repnz
sbb
clc
int
outsb
inc
nop
insb
cmpsl
adc
or
bnd
mov
dec
call
into
or
xlat
in
jo
push
aam
fcoml
add
filds
mov
sar
sub
fiadds
pop
roll
or
div
push
mov
xchg
and
ljmp
cmpl
imul
rolb
lods
jge
addl
notl
scas
adc
xor
mov
out
aam
dec
push
leave
push
push
and
mov
imul
test
cmpsl
mov
test
mov
push
add
ret
fistpl
fstpl
pop
or
sub
sub
jl
fisubrl
cli
sub
or
mov
stc
popa
fwait
bound
cmp
sahf
and
and
inc
sub
inc
sub
pop
fwait
cli
enter
xor
mov
xchg
mov
fs
xchg
fnstenv
ret
or
addr16
jl
dec
fwait
jb
enter
sbb
ret
test
push
add
mov
inc
lds
mov
mov
int3
sub
pop
fcmovnu
and
sub
jnp
xor
jmp
add
pop
or
push
pop
cmpsb
cmpsl
mov
push
push
xchg
movsl
lcall
jl
cmp
mov
adc
mov
mov
scas
rol
in
inc
jae
pop
push
mov
sbb
or
incl
and
adc
cmpsl
roll
adc
sbb
pop
jg
nop
js
pushf
movsb
pop
pop
mov
cltd
stos
out
pop
je
push
pop
inc
stos
in
push
sbb
xorps
mov
xchg
imul
lcall
stos
jo
inc
cmp
mov
cmp
pushf
inc
fisttps
cmp
pop
lahf
xchg
imul
bound
imul
add
pop
stos
decb
jno
in
leave
es
push
sbb
ret
cmpsb
loopne
mov
nop
inc
mov
pop
outsl
mov
imul
cmpsb
push
mov
and
pop
popa
lret
enter
cmpsl
in
add
pop
and
pop
mov
push
aad
mulb
ds
or
pop
cmc
mov
lods
cli
mov
les
inc
cmp
test
cmp
fs
pop
jno
dec
mov
xchg
out
xor
pop
int3
dec
divl
pushf
cs
cmpsl
or
mov
fadds
leave
adcb
jl
jbe
pushf
gs
repnz
adc
xadd
lods
or
loop
das
pop
fucom
sub
inc
mov
xor
out
jne
and
inc
adc
jae
enter
sbb
imul
popa
xchg
sub
cmpsb
lods
jae
aas
pop
xchg
in
mov
adc
or
cs
shl
ret
mov
pop
imul
adc
jl
mov
xor
or
stos
xchg
xor
pop
in
adc
bound
push
pop
push
jbe
std
mov
cmp
jg
sbb
repnz
lock
sub
mov
sub
jmp
test
sbb
jns
loopne
cmc
pop
lret
xor
cltd
ja
xor
stc
filds
push
fdivl
ds
mov
and
xor
inc
pop
in
sbbl
out
stc
loop,pn
adc
enter
lea
int
or
cld
jo
jno
pop
aas
pop
xchg
cmp
aad
adc
outsb
adcl
loop
pop
sbb
push
stos
sahf
loopne
sbb
push
test
pop
sub
sub
xchg
dec
leave
adc
inc
sbb
pmaxub
outsl
xchg
cmp
mov
pop
enter
jge
push
scas
xlat
mov
popf
mov
push
cmp
jnp
repz
mov
pop
fs
sti
mov
mov
sti
jecxz
in
pop
sbb
js
jg
add
and
data16
mov
pop
les
push
je
incb
add
inc
loope
adc
push
add
cmc
sub
pop
dec
push
mov
pusha
mov
adc
mov
lcall
push
mov
sbb
pop
xchg
bound
or
sub
dec
mov
jp
or
inc
or
nop
not
dec
iret
loope
jl
xlat
xchg
stos
fs
pop
movsl
inc
sbb
out
jge
inc
push
jmp
mov
iret
sbb
pop
insl
add
jae
ss
in
push
lods
inc
or
pop
or
pop
push
js
cmpsl
fldt
ss
pop
pop
add
stos
lods
test
lds
jge
pop
lcall
and
lret
in
test
mov
mull
stos
dec
loope
push
in
rclb
jbe
and
out
iret
pop
outsl
and
mov
iret
iret
sbb
mov
xchg
nop
or
das
mov
les
push
sbb
dec
in
mull
jns
hlt
mov
nop
pop
loop
popa
mov
adc
je
bound
outsb
inc
push
inc
das
shll
clc
xchg
add
adc
mov
fcmovne
mov
push
fisubs
cmc
xor
mov
cwtl
adc
inc
mov
cmp
xchg
mov
hlt
loopne
dec
das
test
sub
loop
bound
orb
xchg
bound
leave
sbb
into
sti
xor
icebp
dec
mov
int
in
and
push
mov
sarl
mov
mov
sarb
push
mov
daa
loopne
add
mov
sub
pop
xchg
dec
lea
adc
jp
lods
jle
test
repz
mov
test
mov
push
push
fsub
push
pop
cli
adc
popf
stos
xlat
add
add
mov
sarl
add
std
pop
cmc
jb
pusha
in
adc
loopne
jecxz
shrb
mul
bound
into
sub
xchg
scas
xchg
adc
pop
movsb
jns
lds
dec
in
in
popf
aad
enter
iret
cmp
lods
adc
ss
aas
int
loopne
in
test
push
out
rol
or
sbb
mov
add
adc
loop
fwait
test
inc
negb
xchg
out
enter
cmp
mov
pop
enter
mov
or
cmp
lret
fistpl
in
rcrl
dec
das
rcrb
xlat
mov
mov
call
test
push
mov
addl
rcrb
lret
adc
insl
fidivl
rorl
loope
les
add
jecxz
cmp
pushf
xchg
adc
vprotw
or
jo
je
or
adc
and
xor
daa
inc
imul
ja
jnp
dec
lds
sar
arpl
xor
inc
aaa
fwait
js
add
filds
movsl
sub
lahf
mov
lahf
insb
mov
and
sti
pop
stos
push
or
test
lcall
mov
arpl
sub
ds
mov
cmp
loop
lret
jmp
sahf
push
or
cmp
mov
insl
lods
or
inc
das
data16
inc
push
xor
mov
jecxz
cmp
adc
inc
cmp
jp
testl
mov
idivl
xchg
dec
mov
push
test
push
shr
push
int
std
movb
mov
outsb
pop
xchg
loope
cmp
fldl
push
pop
ljmp
fidivrs
jae
movsb
and
jns
mov
mov
cmp
mov
cmpsb
sub
cmp
repz
cs
add
outsl
movsb
cltd
dec
shll
out
sub
adcb
sarl
add
xor
imul
imul
call
jb
out
repz
scas
adc
gs
cmp
popf
jne
out
jmp
or
xor
test
dec
jle
xchg
fs
xor
insl
add
and
leave
xchg
cmp
mov
mov
je
xor
jnp
inc
mov
xor
mov
outsb
inc
mov
fnstcw
adc
pop
flds
jnp
imul
adc
into
dec
jne
push
dec
mov
xchg
jmp
cltd
cmp
out
test
xorl
test
jmp
ja
mov
incl
xchg
cmc
pushf
mov
movsl
mov
push
pop
iret
pop
and
jecxz
mov
mov
mov
cmpsl
mov
call
lods
pop
in
add
scas
divb
push
xchg
nop
mov
mov
mov
xor
fstpt
cltd
adc
pop
dec
adc
add
cltd
adc
sbb
xchg
fisttpll
pop
pop
jecxz
push
ljmp
xchg
leave
movsl
pop
pushf
dec
jae
jge
fwait
xlat
test
inc
mov
orl
sbb
fwait
cmpsl
js
lock
dec
pop
fstpt
gs
mov
ss
movsb
cli
push
jecxz
sbb
mov
sub
popf
outsb
jbe
xchg
pushf
sbb
jno
or
dec
divb
mov
and
xchg
jl
add
gs
sti
notl
mov
cmp
aad
insb
popf
mov
mov
inc
ficoml
fs
cmpsl
pop
jno
insb
test
popa
push
xchg
mov
inc
iret
cmp
xorl
in
stc
xchg
sbb
mov
or
xchg
mov
dec
leave
cld
and
jb
shl
jne
jge
dec
in
lret
imul
pushf
xchg
cmc
fsubrs
mov
push
loop
stc
mov
mov
test
les
in
mov
lcall
mov
and
jecxz
xchg
xchg
mov
and
lcall
and
or
inc
sub
cmp
push
sub
std
leave
out
sbb
pop
insl
cld
stos
sub
cmpb
flds
push
rclw
push
lods
je
or
mov
jl
jl
shl
insb
push
out
mov
cmp
fs
jae
adc
mov
push
popf
sub
xor
sarw
xchg
mov
cltd
jecxz
cmp
lods
test
call
gs
loope
test
push
push
test
int3
paddb
outsb
aaa
jecxz
or
test
jno
xor
gs
push
push
ljmp
xor
dec
filds
movsl
xchg
arpl
sarl
movsb
and
sub
jnp
lret
sbb
dec
je
sbb
rcr
push
jae
xchg
pop
xlat
int3
cmp
scas
shlb
jge
add
rorb
sub
cmp
mov
cmp
mov
popa
pop
das
stos
lods
sbb
test
adc
ss
mov
mov
int3
xchg
fadds
data16
push
xor
nop
inc
inc
fldl
xchg
mov
cs
jg
or
dec
addr16
xor
pushf
in
aad
fs
fstl
jl
and
jns
dec
daa
rdmsr
fdivs
ffreep
adc
mov
xor
jg
in
adc
xor
call
lock
push
shrb
xchg
jbe
mov
or
inc
fwait
movsb
xchg
sbb
pop
sub
outsl
lods
sbb
jmp
add
xchg
icebp
in
leave
push
adc
adc
cmp
mov
testl
and
xor
pop
shrl
mov
scas
imul
pop
lods
ds
mov
push
fstp
and
js
push
inc
xchg
dec
hlt
orb
mov
sbb
hlt
or
sbb
push
orl
loope
or
int3
aaa
push
je
ja
adc
int
sti
lods
decb
mov
xchg
xchg
es
cmp
xchg
mov
shlb
mov
mov
mov
push
lods
jp
test
data16
dec
push
and
lods
mov
adc
mov
scas
das
into
cltd
clc
mov
test
fs
les
xchg
insl
rcl
outsb
ss
jecxz
fmulp
pop
ret
lods
nop
lcall
ja
test
push
insl
fidivrl
out
pusha
outsb
mov
aaa
std
lret
call
notb
cli
xchg
into
lcall
pop
xchg
clc
fsubs
xor
and
test
xchg
aaa
push
cwtl
in
test
lods
out
lea
scas
ljmp
sub
cmpsl
push
sbbl
cld
or
ss
jnp
cmpb
jg
test
insl
pop
mov
pop
je
mov
inc
sbb
sub
sub
push
sub
sub
pop
push
mov
pop
sti
jmp
sbb
push
popa
add
dec
and
jae
imul
dec
push
idiv
jp
adc
sahf
in
or
xchg
int3
lret
or
mov
ds
adc
jle
pop
jge
mov
outsl
clc
xchg
mov
mov
subb
arpl
lods
sub
out
nop
testl
rcrb
sub
fcoms
fptan
lret
and
hlt
cmpsl
jle
arpl
out
dec
cmpsb
dec
ljmp
push
out
fdivs
xchg
negb
cmpb
cmp
pop
leave
js
jne
outsl
pusha
cld
subl
add
stos
xchg
or
sbb
rolb
sahf
lret
jae
popa
jle
ds
add
inc
push
pop
or
push
in
mulb
insb
fbstp
mov
inc
jle
jno
stc
pop
ret
pop
xor
lods
dec
xchg
push
mov
xchg
js
cmpsb
mov
dec
jns
adc
jb
popf
sti
cmpsb
add
pop
xor
sti
inc
test
ret
clc
cmp
jno
iret
xor
dec
sub
cs
cwtl
cltd
jae
lret
sbb
movaps
sbb
mov
into
dec
filds
in
mov
popf
push
shrl
fcomip
repnz
xchg
mov
shll
in
scas
imul
sub
xor
sarl
ss
repnz
cmp
or
dec
scas
push
or
cmpsb
cs
sbb
or
jmp
sbb
inc
jb
sub
stos
push
repz
push
xchg
stos
ficoml
xchg
rcrl
cmp
pop
icebp
ljmp
mov
call
rcrl
scas
xchg
stos
loope
js
dec
and
pop
adc
cmpsl
inc
cltd
icebp
pop
into
jge
mov
dec
rorb
out
or
sbb
ja
sub
fwait
movb
jmp
xor
cli
add
or
mov
push
mov
mov
stos
andb
push
push
or
pusha
and
adc
lock
adc
or
inc
std
orl
loop
icebp
push
pop
sub
xchg
or
aam
ja
cmp
push
pushf
xchg
adcl
fs
out
sub
xchg
push
inc
cmp
pop
dec
sarb
mov
mov
aad
add
cmp
int3
mov
add
lods
insb
notl
adc
enter
pop
ljmp
push
add
sub
sub
pop
or
and
mov
sbb
cmpsb
or
and
jecxz
repnz
pop
loope
popf
out
and
pop
add
push
sbb
stos
rolb
pop
jmp
sbb
das
xchg
cmp
dec
hlt
pop
les
jp
mov
add
adc
fs
inc
ljmp
test
xchg
cmp
dec
hlt
pop
les
jp
mov
add
adc
fs
inc
ljmp
test
xchg
ds
hlt
xor
outsb
aam
and
xor
add
adc
fs
je
inc
jecxz
push
movsl
out
mov
test
xchg
jp
dec
hlt
pop
ljmp
scas
stos
adc
adc
stos
or
int3
int3
int3
push
mov
push
push
lea
push
push
call
call
movzbl
push
pop
cmp
sbb
and
add
cmpl
mov
mov
je
cmp
je
push
push
call
mov
mov
xor
xor
call
mov
push
xor
mov
call
mov
mov
push
mov
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
mov
movzbl
movzbl
sub
je
incl
jmp
pop
leave
ret
ja
addr16
push
jle
outsb
jbe,pt
popa
bound
or
hlt
fsubp
into
xlat
inc
out
mov
cmpsl
or
pop
addr16
push
jle
outsb
aaa
push
daa
push
pop
ds
cs
out
xlat
inc
out
mov
cmpsb
mov
pop
addr16
push
jle
outsb
aaa
push
daa
push
pop
ds
divl
into
cmpsl
lcall
aam
out
scas
add
adc
cs
cmp
jo
cld
in
sub
inc
int3
sub
jg
shrb
into
test
mov
icebp
jmp
out
outsb
dec
ss
sub
cmp
jmp
mov
or
add
cmc
jle
ret
repnz
ds
adc
inc
xchg
ja
inc
int
mov
outsb
pop
pop
fmuls
dec
mov
roll
add
cmp
outsl
inc
or
and
loop
sar
mov
sbb
sub
pop
add
mov
jb
inc
xchg
dec
enter
sbb
xorl
mov
out
push
mov
dec
push
stos
test
push
jle
outsb
aaa
push
daa
push
pop
ds
cs
out
xlat
inc
out
mov
cmpsl
mov
xor
adc
add
push
jb
push
js
cmpl
cmpb
jmp
std
repnz
adc
push
sbb
push
insb
push
dec
inc
test
movl
adc
addr16
jb
daa
push
pop
ds
cs
out
xlat
inc
out
mov
cmpsl
mov
pop
addr16
push
jle
outsb
aaa
push
daa
push
pop
ds
cs
out
xlat
inc
out
mov
cmpsl
mov
pop
push
pop
lret
sub
shlb
in
mov
mov
mov
leave
ds
xchg
jne
pop
sahf
mov
inc
jle
add
sbb
aad
insb
xchg
fcmovbe
inc
pop
daa
lods
mov
mov
faddl
xchg
inc
pop
sbb
cmpsb
mov
sahf
xorb
hlt
dec
fadds
and
jnp
cld
and
fldenv
rcrl
andl
int
inc
out
and
scas
std
aam
mov
aam
and
sub
mov
mov
add
adc
ja
mov
lcall
fstps
jecxz
pushf
mov
dec
dec
pop
jecxz
gs
push
pop
jns
ss
fldt
addr16
dec
mov
sbb
pop
mov
push
cmp
lods
mov
imul
xor
sbbl
cmp
jle
inc
mov
decb
mov
pop
mov
sbb
xchg
jecxz
or
push
fs
pusha
daa
adc
gs
adc
adc
xchg
sbb
ret
sub
mull
or
add
sbb
test
sti
xchg
test
sub
test
hlt
out
or
minps
cld
ret
repz
xor
cmp
movsl
jbe
pop
enter
xchg
test
sbb
imul
jo
push
cmp
push
ret
in
cld
push
push
pop
mov
pop
dec
mov
gs
ret
pop
adc
xchg
xchg
daa
inc
jl
into
pop
in
add
sub
daa
je
scas
ret
iret
pop
pop
pop
movsb
and
call
mov
or
mov
or
test
jmp
and
lea
inc
mov
pop
test
test
and
xlat
aas
xor
inc
and
push
out
mov
das
push
inc
fimuls
rorb
aaa
pop
dec
rcll
mov
jmp
xor
repnz
fnsave
and
sbb
add
adc
divb
pop
sbb
imul
pop
insl
push
mov
stc
call
in
outsb
lods
cmp
pop
xchg
cwtl
nop
cmp
xor
cld
test
je
fidivs
jge
pop
mov
pop
lock
repz
hlt
fstpl
scas
pop
outsb
or
add
les
jnp
dec
leave
pop
and
dec
push
sub
sti
sub
xlat
pand
hlt
pushf
enter
lret
icebp
out
aas
mov
imul
out
stos
dec
or
test
lcall
daa
cmp
sub
add
das
push
xchg
dec
arpl
shl
lahf
mov
je
int
sub
add
gs
lods
cmp
or
neg
mov
cli
cmp
int3
daa
cltd
sarl
hlt
into
cltd
jmp
scas
sbb
sbb
sbb
ret
cmp
and
lret
andl
inc
mov
inc
jno
out
movsl
jo
pop
xor
mov
inc
mov
ror
lods
mov
mov
fmull
mov
incb
out
mov
jl
jo
mov
push
pushf
dec
and
inc
add
or
rorb
cmp
pop
add
fdivrl
jle
lret
xchg
push
mov
mov
test
push
mov
mov
and
sbb
sub
push
stos
jg
hlt
popa
fsubs
mov
xchg
outsl
mov
xchg
sbb
pop
out
out
fistps
sub
pushl
mov
add
sub
add
fdivrs
mov
cmp
push
outsl
lods
push
cltd
adc
je
movl
push
out
dec
xor
sti
es
mov
sbb
shlb
out
xchg
xor
sub
jp
cmc
or
or
sbb
mov
fistl
xor
mov
call
int
movsb
xchg
out
cwtl
sub
sahf
push
add
shlb
jmp
or
pop
add
sarb
pop
jmp
cmp
cltd
sti
push
push
jg
inc
mov
xchg
lods
es
mov
loopne
les
les
xchg
movsl
jne
out
jb
into
mov
stos
mov
and
xlat
mov
lock
ja
je
cmp
or
test
pop
dec
mov
pop
pusha
sub
mov
lret
jp
je
adc
mov
sub
ret
sub
dec
inc
pop
push
mul
popa
and
xor
imul
mov
add
and
test
push
dec
dec
out
mov
loopne
addb
jmp
mov
popa
adc
leave
ffreep
test
push
shll
dec
cmpsl
jle
cmp
xchg
jnp
mov
cmpsb
cmpsb
repz
cli
jb
xor
inc
movsl
sub
inc
push
jnp
mov
xchg
out
pop
jmp
sub
push
lods
xor
lret
gs
iret
xchg
xor
mov
mov
out
mov
sub
inc
aas
sbb
clc
mov
gs
jne
out
mov
mov
insl
movb
movsl
loopne
scas
hlt
hlt
add
jmp
mov
test
loope
daa
mov
jmp
lret
in
data16
mov
nop
dec
scas
call
sub
sbb
push
mov
jne
in
dec
pushl
cs
xlat
pop
pop
push
add
imul
fiadds
jnp
mov
and
push
jge
pop
push
and
push
inc
and
lcall
stos
xchg
in
dec
and
adc
jg
out
jns
push
cmp
out
imul
lods
inc
je
pop
add
clc
scas
pop
and
push
mov
mov
sti
dec
aam
xchg
int
sbb
inc
bound
mov
jl
inc
jp
std
jmp
push
fucomp
dec
into
xchg
dec
stc
push
push
clc
xchg
mov
mov
push
gs
out
inc
cmp
adcl
pop
insb
shr
push
inc
cmc
cs
lcall
inc
sub
outsb
les
stos
add
mov
in
arpl
repnz
rcll
inc
cmpsb
fwait
pop
push
imul
aas
jb
test
data16
fsubrl
in
outsl
mov
ret
enter
adc
jp
arpl
xchg
push
push
sbb
andl
xchg
adc
loope
jl
mov
jb
std
push
or
in
lcall
fildl
push
rorb
add
int3
sub
jge
mov
les
lret
test
sbb
mov
sbb
jo
cwtl
inc
test
sbb
add
loope
push
ror
into
mov
mov
enter
and
js
insb
lods
mov
mov
sub
cli
outsb
sahf
lea
test
adc
cmp
and
xchg
push
jmp
ror
mov
push
cmpsl
scas
mov
lahf
fiadds
test
pop
stos
inc
sub
test
cmp
mov
cmp
pop
pop
shlb
add
jmp
jo
mov
frstor
fstl
outsl
xchg
out
repnz
inc
aam
je
hlt
sti
fbstp
and
cmp
xor
enter
outsb
and
inc
cli
imul
pop
xor
mov
push
sbb
ret
das
test
and
sub
jae
pop
mov
cli
aam
clc
add
push
jne
inc
xchg
and
rcr
fsubs
cmpsl
adc
bound
repz
loop
or
inc
pop
adc
cli
lds
adc
lods
iret
push
xchg
fs
in
out
mov
lret
andl
pop
fidivl
inc
sarb
ja
mov
test
fsubrl
mov
sahf
pop
loop
xlat
rclb
dec
sub
test
dec
fstl
push
dec
lret
mov
inc
stos
dec
xchg
inc
add
dec
sbbb
out
xor
mov
xchg
cwtl
clc
inc
cmp
outsl
shll
repz
scas
fcompl
movsb
dec
push
add
in
xor
push
in
sahf
ss
out
inc
in
mov
xor
lret
cmc
test
test
daa
in
cltd
rclb
jnp
mov
dec
stc
mov
fcompl
jle
xorb
int
ljmp
shrl
adc
loopne
lods
imul
mov
or
push
jns
xor
lret
jno
push
add
loopne
scas
mov
aaa
or
sbb
fidivrs
lock
jae
mov
jno
jne
or
fistps
std
xchg
popa
stos
mov
lret
icebp
xor
shl
sub
sub
into
mov
xor
mov
icebp
sub
frstor
dec
cmp
or
or
out
pop
pop
iret
adc
xor
imul
inc
stos
pop
jnp
scas
lret
icebp
push
stos
hlt
mov
xor
les
jb
sbb
lods
dec
sahf
dec
mov
in
mov
sbbl
push
imul
std
xor
dec
outsb
jp
loopne
inc
lock
mov
enter
loopne
pop
dec
xor
and
fcoms
fsubl
cmp
in
repnz
jnp
dec
fistpll
lcall
lcall
mov
inc
sbb
int
pop
idivl
mov
mov
repz
inc
arpl
pop
cmpsb
shlb
faddp
xchg
seta
inc
adc
pop
xchg
mov
sub
mov
stos
shll
xchg
out
das
into
mov
sbb
or
dec
inc
cmpsb
push
jne
mov
push
sti
push
sub
mov
xchg
fstl
push
push
fwait
loop
mov
mov
push
xchg
mov
imul
ss
cwtl
push
inc
or
mov
mov
xchg
push
in
dec
add
jae
sbb
push
pop
pop
mov
pop
popa
xchg
and
inc
pop
rep
icebp
xchg
pushf
mov
lock
push
and
or
shll
push
stc
push
bound
mov
sbb
insb
inc
imul
lods
and
sbb
push
or
frstor
ret
inc
mov
aaa
xchg
pushf
dec
dec
std
mov
xor
faddl
movsb
xor
test
stos
pop
add
cmpsl
fs
movsb
pop
cmp
cmpsl
adc
fstpl
cmpsb
clc
mov
call
aaa
rcrl
xchg
or
dec
leave
add
ficomps
pop
xchg
adc
mov
sbb
cltd
cmp
mov
out
or
inc
and
jg
mov
cltd
test
mov
out
mov
xchg
add
push
xchg
jae
inc
mov
icebp
incb
mov
inc
icebp
jge
mov
leave
stos
xor
mov
fldt
xchg
ljmp
mov
nop
scas
jecxz
les
mov
ja
sub
stc
scas
popf
and
adc
sbb
cli
js
sbb
outsl
jp
adc
test
ja
lods
push
insl
pop
ljmp
sbb
call
cmpsl
rcrl
mov
fisubrl
sarl
xor
sbb
lods
in
les
xchg
aam
aad
out
leave
sub
inc
dec
stos
mov
cmp
mov
mov
pop
add
inc
adc
mov
mov
jle
sub
ljmp
in
js
out
jnp
jl
xor
sub
out
fiaddl
jge
inc
int3
adc
ret
test
rorb
lods
cmpsl
sti
or
lret
xlat
mov
stos
ret
pop
loope
or
dec
add
fld
out
pop
lds
or
sbb
cmp
add
mov
add
movsb
add
pop
rclb
or
or
in
adc
out
dec
cld
push
pop
push
lahf
inc
loopne
in
dec
outsb
mov
xchg
das
mov
xchg
mov
mov
stos
adc
scas
dec
fs
pop
and
roll
and
call
sbb
ds
xchg
mov
push
mov
fwait
mov
mov
xchg
sarb
mov
mov
pop
pop
mov
insb
cmp
stos
cmc
mov
rcr
daa
jns
jno
xchg
test
movsl
jno
popa
mov
insl
leave
sbb
or
filds
and
mov
into
jno
fisttpll
push
xchg
push
stc
aad
xchg
insl
in
or
fwait
xchg
aam
or
pop
fdivrs
sbb
pop
mov
or
lock
dec
ret
out
jge
cs
cmp
pop
add
out
mov
pop
ja
testl
ja
cwtl
jecxz
pop
stc
cltd
nop
call
lcall
enter
push
mov
and
int3
cltd
addb
mov
adcb
imul
jae
in
xor
mov
xor
clc
sti
int
mov
bswap
pop
dec
and
dec
in
sub
jne
andl
shlb
push
loope
fs
nop
in
add
mov
fldl
or
lret
mov
jge
push
int3
push
mov
mov
add
test
push
jecxz
cmp
das
scas
add
fdivr
jp
push
add
sti
push
push
jb
adc
and
mov
xor
adc
in
cmp
jne
jmp
ficoms
push
sbbl
movsl
add
sti
lock
and
xchg
lret
sub
fmul
push
sbbb
push
and
sub
gs
cmpsl
jp
mov
out
xchg
lods
mov
inc
push
stos
xchg
ja
in
pop
inc
popa
inc
fsubrp
test
test
dec
pop
fwait
dec
push
add
jbe
arpl
mov
xor
push
sbb
std
rcl
or
push
jle
pop
push
stos
push
ss
arpl
jns
imul
mov
popl
pop
mov
adc
jno
sub
jae
rcrl
scas
xchg
mov
shlb
pop
mov
loop
fs
hlt
mov
jp
lods
mov
jnp
cmpsb
push
cs
cli
loopne
push
std
stos
cmpsb
stos
jae
dec
stos
dec
fdivs
fidivl
sub
test
xchg
imul
scas
insb
jge
fidivl
sub
xchg
jnp
mov
sub
rclb
ss
js
dec
cltd
arpl
fadds
and
jge
inc
stos
into
dec
sahf
std
fs
push
hlt
fwait
cwtl
cmpsl
rcrl
inc
jp
les
std
sti
mov
lea
inc
sbb
push
jmp
adc
cmc
xlat
imul
pop
mov
dec
popf
and
repz
lea
xor
int3
outsl
add
out
push
lahf
icebp
sub
add
cmp
popa
dec
repnz
imul
ds
mov
fbstp
add
movl
lret
xor
mov
dec
adc
jns
outsl
sub
jge
lret
std
xchg
push
cs
into
inc
xchg
mov
bound
sbb
cmp
mov
out
mul
shlb
int
adc
out
push
jg
lods
jecxz
inc
bound
movsb
scas
xchg
aad
cltd
out
mov
dec
push
mov
lods
inc
xchg
push
mov
das
mov
sti
push
add
mov
jle
cltd
push
sub
lret
mov
mov
cmp
out
loopne
je
xchg
outsl
mov
sub
mov
xchg
jbe
mov
add
mov
fs
cltd
jl
rcrl
or
add
ficompl
movsl
push
imul
pushf
loop
xchg
adc
fwait
add
fnsave
iret
in
cmp
or
scas
fsubrl
ret
and
mov
push
aas
push
scas
aad
out
enter
dec
inc
stc
sub
jp
sub
clc
popa
stc
mov
in
dec
sahf
cmp
mov
pop
pushf
add
sub
cmc
cmpsb
movsb
or
dec
fildl
fcmovnbe
cs
or
push
sbb
jl
aas
stc
mov
lea
push
pop
mov
sbb
pop
dec
mov
dec
out
pop
imul
cltd
mov
iret
sub
lock
scas
mov
mov
xor
outsl
push
mov
out
dec
bound
xchg
pop
mov
dec
outsl
rol
xchg
or
xor
stos
iret
test
outsl
insl
xlat
loop
movsl
es
jbe
mul
fwait
imul
out
loopne
mov
insb
sub
pop
movsl
cmp
cltd
pop
pop
arpl
jmp
mov
pop
ret
stc
inc
jae
out
add
nop
fwait
mov
adc
jmp
push
mov
ret
ljmp
lds
mov
aas
es
test
ja
push
push
adc
sub
dec
cmp
add
mov
mov
or
xchg
dec
sbb
mov
clc
addl
mov
outsl
dec
icebp
daa
ja
pop
and
pop
cmpsb
sbb
fidivrs
mov
xor
jae
fcoml
xor
cmpb
in
hlt
stos
sarl
push
pop
and
incl
mov
mov
xor
jbe
ljmp
mov
xchg
daa
std
push
cmp
pop
into
push
lret
xor
push
mov
out
adc
push
cmc
xor
adc
fidivrl
or
cmpsl
sti
jle
or
cmpsl
sub
mov
clc
push
mov
inc
orb
push
xor
leave
mov
xchg
or
inc
dec
aam
lea
xchg
repnz
mov
mov
or
inc
hlt
or
adc
lods
inc
xchg
push
ljmp
xchg
xchg
sbb
hlt
testl
push
mov
mov
popf
bound
add
cmpsl
mov
mov
je
cmp
and
fldcw
sti
xchg
mov
pusha
ret
sub
push
pop
inc
out
andb
add
ds
cli
ss
push
loopne
pop
jp
out
dec
pushf
jbe
pop
sti
popa
inc
imul
push
adc
pop
popf
mov
setle
sbb
insl
es
inc
sahf
ljmp
fs
push
adc
push
div
repz
fs
inc
lds
cmp
or
roll
sbb
sub
mov
mov
pushf
push
lds
movsl
jle
pop
in
mov
inc
stos
and
scas
enter
cmpsb
mov
push
sahf
adc
aas
clc
dec
push
das
bound
cmp
shl
mov
inc
les
jnp
or
shrb
mov
in
jmp
rcr
scas
aad
mov
sbb
sbb
arpl
repnz
gs
lock
push
jecxz
icebp
jnp
cld
adc
and
sub
jne
mov
repz
repnz
jp
add
push
fisubs
jne,pn
sub
cmp
xor
add
sub
push
xor
test
sqrtps
xchg
shll
mov
xchg
lahf
inc
dec
inc
pop
fildl
cmp
xchg
mov
sbb
lds
sub
dec
pop
xchg
jmp
xor
xchg
pop
lret
inc
idivl
xchg
pop
xchg
and
jo
mov
push
test
mov
fstpt
xchg
push
inc
jmp
jo
cmp
iret
je
mov
cmpsb
hlt
ret
addr16
outsb
adc
jmp
xchg
in
mov
dec
sahf
ret
not
or
cs
fmull
adc
jmp
push
loop
add
stos
xor
loope
mov
movsb
pusha
cmp
filds
xor
mov
ljmp
out
adc
sbb
daa
xor
cli
lea
and
js
in
xchg
cmpsl
in
out
test
into
rcrl
xchg
fs
rcrb
movsb
jecxz
and
sub
repz
pop
xchg
stos
popa
mov
scas
cmp
lea
rclb
ljmp
pop
mov
sbb
inc
fisttpll
scas
inc
jmp
or
mov
cltd
jl
sub
addb
add
mov
add
cwtl
testl
jns
dec
std
inc
pushf
fwait
pushf
lret
out
jns
in
jne
stos
scas
cmp
dec
daa
mov
adc
lods
inc
sbb
pop
addr16
mov
cmp
mov
divb
in
adc
push
mov
adc
ss
nop
cmp
aad
ja
xor
and
icebp
pusha
and
mov
popf
in
in
fs
and
jmp
adc
icebp
inc
push
push
dec
out
inc
push
ret
sbb
xor
test
movsb
es
nop
mov
xlat
out
dec
sbbl
lock
jno
sahf
xchg
mov
cmp
add
hlt
iret
fbld
sbb
adc
lods
inc
fst
arpl
addr16
xor
imulb
cmp
xchg
inc
js
xor
out
mov
pop
scas
xchg
xor
lret
addb
mov
das
fsubrs
test
pushf
jno
inc
or
lods
cmpsb
stos
jne
mov
rolb
cmp
out
shlb
clc
cmp
xchg
stos
cmp
and
outsb
add
xchg
sub
jge
out
je
fsubrl
ss
pop
xlat
jmp
and
test
daa
xchg
test
arpl
xor
imul
cmp
pop
push
sub
cmc
in
addb
sbb
enter
push
jl
leave
fistpl
jb
inc
xchg
int
clc
push
dec
sahf
jo
gs
xor
dec
adc
and
mov
out
popa
test
xchg
dec
push
push
dec
or
out
xor
inc
pop
mov
xor
xlat
cmpsl
sub
mov
fcomps
fsts
adc
in
cs
sarb
sub
lea
jo
outsb
pop
and
push
imul
push
dec
test
bound
mov
inc
cmp
ret
icebp
das
push
xor
sub
cmp
push
push
mov
mov
mov
jmp
in
jle
push
or
imul
aam
lds
test
inc
sti
ja
fldt
xchg
lcall
inc
jge
jo
cmc
movsb
adc
and
cli
enter
insb
and
dec
pushf
incl
pop
js
push
cmp
test
mov
push
rdpmc
test
jg
or
repnz
xor
les
fisttps
sbb
nop
xchg
and
fsubp
out
ljmp
ss
leave
jne
scas
and
cs
push
xor
repnz
fdivrl
loop
call
pop
rorb
aad
mov
push
xor
insb
sub
test
mov
sub
test
je
aad
push
mov
shrl
push
cli
sbb
mov
scas
mov
cmp
jae
mov
scas
cwtl
ss
dec
add
out
adc
clc
inc
or
out
and
jle
outsb
aaa
push
daa
push
pop
ds
cs
out
xlat
inc
out
mov
cmpsl
mov
pop
addr16
push
jle
outsb
aaa
push
daa
push
pop
ds
cs
out
xlat
inc
out
mov
cmpsl
mov
pop
addr16
push
incb
aaa
push
mov
ds
negb
into
xlat
inc
out
mov
cmpsl
mov
pop
addr16
push
jle
outsb
aaa
push
daa
push
xchg
xchg
or
sbb
cltd
rclb
jno
inc
jg
int3
int3
int3
int3
int3
arpl
xchg
push
out
ja
dec
pop
idivb
jecxz
mov
inc
mov
ja
pop
adc
es
xlat
push
out
imull
jle
dec
cmpsl
pop
ret
incb
ja
addr16
ja
push
fidivs
hlt
push
mov
cmc
jle
ss
bound
scas
scas
cwtl
shlb
cmp
add
push
mov
aaa
outsl
push
mov
in
cmp
mov
mov
aaa
xor
out
imul
mov
subl
bound
jno
jne
imul
aam
es
mov
push
std
sahf
aam
scas
cmp
data16
lret
jno
pusha
cli
adc
jae
cmp
pop
inc
jae
dec
dec
outsl
xchg
dec
mov
push
popa
mov
cld
call
stos
rol
aas
icebp
mov
jb
mov
push
mov
adc
inc
jno
popf
ja
push
push
sahf
ss
enter
push
idivb
adc
out
dec
push
inc
inc
aas
cwtl
sahf
outsl
imul
call
sbb
arpl
outsb
xchg
xchg
dec
jge
aaa
pop
shrl
ja
aas
mov
loopne
into
daa
mov
xlat
dec
movsb
jo
add
or
pop
into
aas
ror
add
adc
adc
push
xchg
arpl
xorb
pop
call
sub
add
add
adc
inc
lahf
pop
pop
xchg
or
xchg
sub
jle
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
xlat
push
out
imull
jle
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
cli
add
push
pop
test
pop
mulb
clc
ret
pop
rcl
pop
cmp
js
inc
lcall
sbb
insl
xchg
or
mov
das
int
movsl
and
mov
stos
aas
outsb
out
das
and
xor
daa
inc
lret
out
mov
je
mov
out
stos
nop
jmp
pop
jns
cmp
adc
pop
cmp
mov
add
les
adc
mov
call
cmpsl
shr
inc
popf
xchg
and
xchg
scas
cmp
mov
call
loop
clc
lret
adcb
shll
dec
insb
inc
jae
mov
fdivrl
and
imul
int
in
sbb
pop
iret
rolb
fcmovbe
sbb
lods
adc
add
dec
insl
bound
out
adc
push
mov
aaa
pop
das
rcrl
out
mov
icebp
cmp
nop
sbbl
daa
mov
lods
cs
xchg
nop
inc
dec
xlat
mov
jmp
pop
pop
or
jb
xchg
mov
adc
mov
push
or
sub
jmp
pop
mov
mov
int
jp
iret
lock
push
push
xchg
andl
sub
loopne
sbbl
stos
xchg
outsb
pop
scas
push
mov
xchg
adc
add
xor
mov
sub
cmp
push
jmp
mov
negl
adc
sbb
cmp
pop
aas
dec
cmpb
arpl
loopne
sub
fists
repnz
push
jg
movsl
pushf
cmp
push
call
cld
sub
cs
arpl
inc
xchg
inc
subl
cmp
in
or
sbb
fs
push
enter
mov
jg
jo
daa
aad
pop
xchg
inc
data16
adc
push
jle
adc
out
addl
push
ljmp
fmulp
loop
pop
jb
lahf
sbb
dec
lahf
aad
mov
xchg
loopne
cmpsl
mov
imul
out
ficomps
cmpsb
loopne
add
int3
mov
popf
out
mov
aas
fistl
mov
mov
cmp
lret
jo
push
mov
pop
fld
ds
and
stos
mov
xor
ret
or
xor
or
lahf
lds
xor
or
mov
mov
loope
rol
inc
scas
jle
sbb
fildl
sub
or
insb
stos
lds
outsl
jmp
popf
sub
mov
sahf
imul
hlt
jl,pt
insl
add
inc
test
sub
subl
mov
mov
mov
inc
cmp
sarb
and
sti
cmp
ss
imul
stc
sbb
sbb
add
mov
lret
mov
fcmove
mov
imul
and
mov
pop
mov
fcompl
lcall
adc
scas
pop
xor
icebp
sub
andl
or
test
negb
das
push
outsl
xor
rcrl
jp
push
iret
arpl
push
mov
sbb
addl
sbb
shlb
mov
cmp
mov
dec
rolb
insb
dec
jmp
push
dec
cmp
mov
test
inc
adc
popa
scas
mov
in
data16
inc
cmpsb
or
pop
lods
or
push
jne
fsubrl
aad
cmp
xchg
jne
pop
leave
and
in
imull
cmp
jbe
test
and
sahf
in
pusha
dec
xchg
sar
insl
push
inc
mov
adc
sbb
xor
sti
lret
cmp
pushf
add
pop
cmp
je
cmp
or
insl
adc
dec
mov
sub
sub
lret
sahf
js
dec
adc
cmpsb
mov
lret
jns
pop
mov
sub
sub
lock
lahf
push
mov
ja
and
cwtl
daa
testl
lods
ret
and
xor
and
jle
push
jg
jne
mov
lret
push
push
and
fwait
xor
cmp
test
daa
ja
jnp
nop
lods
test
sbb
sbb
add
push
faddl
addr16
out
dec
sbb
enter
ret
push
cmp
insb
mov
inc
or
xchg
sbb
push
cmc
jbe
addr16
gs
rcll
sub
sub
movsl
out
add
xchg
push
mov
and
sbb
mov
mov
iret
cmp
testb
or
lds
mov
jmp
testb
pop
movsb
aaa
inc
rcr
sub
jecxz
xchg
call
fldcw
mov
jne
fbld
push
shrb
test
and
nop
test
mov
jbe
enter
pop
jb
add
xorl
into
adc
in
or
mov
leave
add
dec
inc
pop
push
data16
fidivrs
or
mov
in
pop
jb
imul
push
mov
push
test
ja
xor
mov
jp
jle
jnp
mov
cmp
jp
push
mov
test
xchg
sarb
inc
repz
push
std
sbb
lods
lock
mov
xor
scas
psubsb
ds
incb
add
inc
loope
hlt
dec
leave
xor
leave
pop
js
stos
lret
outsb
and
sbb
add
pop
iret
movsl
jp
cli
mov
test
daa
push
sbb
xor
sub
adc
dec
add
add
lea
mov
xchg
lret
out
je
ffree
and
mov
push
imul
add
dec
shrl
pop
icebp
mov
ja
icebp
lea
push
cmp
sub
inc
sbb
repz
rcl
movsl
or
jp
xchg
mov
jbe
jmp
jb
push
mov
ja
pop
dec
outsb
sub
aad
lods
fwait
xchg
inc
push
subl
stos
mov
lds
mov
fwait
sbb
insb
mov
gs
enter
popa
xchg
subb
lds
inc
cs
cmpsb
mov
jge
aad
insl
outsb
xchg
das
pop
jp
pop
cmp
or
mov
push
push
xlat
scas
jb
or
mov
ss
shlb
out
xor
pushl
mov
in
xchg
cld
mov
xchg
jns
push
les
ja
out
mov
push
mov
jle
or
mov
push
cltd
cwtl
lahf
or
mov
sar
mov
mov
push
and
lret
in
mov
stc
and
dec
stos
or
adc
lock
or
mov
es
inc
mov
pop
cwtl
rcrl
mov
loopne
imul
fbstp
jae
dec
xor
sbb
dec
fwait
dec
and
cmc
mov
mov
fucom
xor
cmp
fdivl
imulb
insl
ret
stos
pusha
lcall
rclb
out
sub
mov
shlb
in
loop
addr16
xchg
not
fistps
imul
sbb
xchg
repnz
sub
mov
sbb
sbb
sbb
mov
and
pop
jns
sbb
out
mov
mov
jb
insb
inc
mov
xlat
mov
push
sbb
cld
out
cmp
pop
mov
or
inc
pop
fcoml
pop
aad
rolb
in
mov
and
popf
cmpsl
std
xchg
add
mov
call
scas
jnp
iret
addb
and
scas
jmp
jne
rorb
sbb
cmpl
cmp
lock
ljmpw
and
dec
cli
sbb
sub
xorb
fcmovnb
jecxz
xlat
std
fdivrl
push
int
fbstp
adc
sub
pop
pop
fs
mov
test
adc
pop
jno
xchg
mov
mov
push
fsubp
inc
daa
inc
pushf
fxch
xor
or
cmp
in
push
iret
mov
adc
shlb
pusha
addr16
aaa
pop
fsubr
and
mov
jns
daa
xor
pop
xor
cmpsb
repz
pushl
cmp
mov
or
shl
xchg
mov
sarb
sub
inc
push
mov
ds
in
in
dec
movsb
inc
or
shlb
mov
cmpsb
aam
mov
ljmp
test
mov
repz
popf
in
jo
movsb
sbb
insl
jb
dec
out
add
push
mov
repz
or
dec
popa
sbb
mov
mov
mov
or
stos
inc
or
imul
call
sbb
lock
push
gs
pusha
in
mov
flds
fdivs
pop
ret
jne
stos
adc
stos
scas
sbb
les
adc
pop
movsl
ljmp
les
stos
jns
and
fimuls
push
add
pop
shlb
std
adc
xor
sub
and
cwtl
movsb
imul
dec
sbb
adcl
cmp
jo
pop
xchg
mov
outsb
mov
sub
pop
test
sbb
scas
xchg
xchg
push
sbb
mov
orl
mov
mov
sti
loope
sub
int3
mov
movsl
and
in
mov
mov
mov
adc
enter
or
or
mov
mov
jp
dec
push
aam
clc
jnp
js
pop
lcall
sbb
aam
inc
jno
mov
adc
fimull
cmp
lcall
cmovno
inc
js
pop
cltd
xor
popf
test
rclb
iret
or
inc
stc
mov
cmovno
das
cmp
stos
into
add
aas
add
sub
pop
vandps
mov
pop
push
fwait
call
fildll
fcmovb
dec
fmull
mov
test
mov
dec
aas
add
dec
adc
mov
iret
fcmovnb
push
popf
adc
jle
out
mov
mov
sub
mov
mov
dec
push
lods
push
xchg
mov
bound
cmp
enterw
sub
aaa
sbb
popa
das
xchg
movsb
pop
mov
inc
and
jl
pop
mov
mov
mov
sarb
test
jnp
scas
pop
subb
arpl
ja
test
movb
inc
mov
scas
adc
xor
pop
lahf
xlat
push
pop
xchg
and
sbbl
cmp
lods
iret
mov
cmp
andb
sub
fisubrs
or
inc
adc
ljmp
arpl
leave
cmp
xchg
js
xchg
test
fsubp
push
sub
and
sbb
cmpsb
mov
inc
add
mov
add
jno
je
fimull
xchg
rclb
pop
mov
adc
jg
sub
push
rclb
ud1
jecxz
in
mov
push
pop
mov
xor
xchg
push
xchg
rorl
mov
aam
dec
ret
outsb
sbb
pop
pop
mov
push
jg
cli
das
mov
mov
ljmp
xchg
inc
subb
mov
jmp
dec
into
aad
subb
mov
cli
ljmp
jae
pop
fstps
cmpsb
xchg
scas
shrl
sti
pop
inc
xchg
sub
sub
stos
ficomps
fdivrl
jno
stos
test
mov
jmp
add
faddl
xor
insl
jl
popl
out
dec
or
push
sarb
jmp
xchg
lds
call
outsb
test
mov
scas
inc
inc
push
aas
rorl
xchg
fnsave
and
and
imul
jl
or
xchg
adcb
sbb
xor
push
mov
xchg
das
pop
stos
iret
lcall
jbe
in
enter
int
push
mov
adc
pop
sbb
mov
inc
aad
imul
mov
loope
test
mov
push
sbb
inc
iret
roll
xchg
mov
xlat
sbb
outsb
icebp
sub
enter
xchg
jbe
adc
out
jns
or
jp
mov
bound
movsl
adc
imul
xchg
mov
repz
inc
mov
fstpl
push
lds
pop
jae
push
lea
arpl
and
aad
mov
fnstsw
aad
inc
pusha
ja
test
or
popf
gs
add
adc
mov
lds
jp
mov
mov
sti
fcmove
cmp
cmp
add
xchg
mov
fbstp
movsb
mov
xchg
pop
int3
cmp
sarl
sbb
stc
jae
mov
dec
xchg
push
in
in
stc
je
or
test
mov
stc
arpl
dec
icebp
sub
aad
cmpsb
hlt
cmpsl
pop
dec
mov
fstps
mov
xorb
xchg
popa
mov
sub
clc
cmp
cmpsl
fcoml
popf
lahf
movsl
stos
jge
hlt
sub
inc
sbb
mov
xor
mov
mov
and
in
pop
cs
add
or
or
sub
data16
push
cs
lret
out
clc
sbb
xor
xchg
insl
sahf
sbb
mov
push
jecxz
sub
out
push
mov
pop
sbbl
cli
xchg
dec
push
or
out
mov
js
push
cmp
dec
stos
dec
jae
or
jno
inc
cvtps2pi
fbld
mov
mov
pop
add
gs
cmp
rclb
jecxz
and
leave
inc
and
fnsave
insl
imul
jo
hlt
sbb
mov
jae
fsub
outsb
dec
fdivrs
fmull
xor
test
pop
loop
sbb
jo
or
out
fistpl
cmpsl
mov
adc
in
inc
xchg
mov
adc
out
mov
mov
hlt
cmp
fisttps
sub
jp
xchg
ror
xchg
popf
xor
sbb
sbb
arpl
out
out
mov
sarb
ljmp
gs
pop
add
fldlg2
jbe
jmp
inc
adc
cmc
sub
iret
pop
shrl
setle
out
jb
je
cmp
cmp
fwait
dec
hlt
jmp
pop
aas
mov
xchg
add
and
jo
push
sub
dec
xchg
sub
fdivrl
movsl
call
mov
adc
add
jnp
ds
cmc
insl
mov
mov
rclb
jo
mov
fadds
jecxz
add
sub
mov
fsubp
fwait
push
pop
sub
mov
jl
push
mov
sbb
outsb
imulb
sbb
mov
jg
cmpsl
mov
aaa
fwait
std
ficompl
mov
test
scas
push
and
in
xchg
arpl
outsl
jbe
or
lahf
imul
rorl
cltd
xchg
hlt
mov
mov
sahf
xor
fs
mov
xor
cmpsb
popa
mov
sbb
adc
xchg
jle
cld
mov
enterw
push
into
jp
inc
idiv
and
stos
pop
lods
lods
mov
mov
int
test
divb
sbb
push
sbb
xchg
cmp
dec
iret
xorb
cwtl
shl
fcomps
xor
repnz
jl
out
pop
nop
jno
mov
sti
lahf
inc
inc
mov
in
inc
mov
popf
int
rorb
out
mov
fisubl
and
cmpsb
dec
dec
pop
adc
out
add
jg
sarb
mov
aad
inc
push
lods
sbbl
mov
dec
shll
ffreep
lret
and
dec
mov
cmpsl
jno
jns
or
aam
push
jae
jb
pop
and
insl
ds
dec
push
xchg
pop
add
and
and
int
inc
aad
leave
dec
inc
and
xchg
enter
rcrb
xchg
icebp
in
xor
cmp
pop
cmp
ret
dec
lds
mov
cmp
sbb
cmp
sub
lock
add
add
or
sbb
lret
sti
xchg
adc
sbb
idivl
mov
lock
adc
push
movsb
sub
addr16
push
xchg
dec
sbb
clc
fs
inc
adc
add
and
leave
ret
out
scas
sub
ret
scas
cmp
sahf
jl
fs
movl
inc
out
stos
or
push
inc
xchg
xchg
mov
jecxz
adc
cmp
pop
xchg
scas
jae
orb
aas
shl
xchg
ror
rcll
out
or
mov
push
sub
insb
jb
inc
aas
adc
xchg
lea
mov
cmp
shl
mov
repnz
xchg
daa
repnz
inc
lds
lcall
jp
in
and
mov
push
mov
adc
jp
test
jl
mov
xchg
cmpsl
mov
mov
mov
ret
cwtl
xchg
out
xchg
sbb
lods
xchg
enter
sti
mov
fistpll
xor
adc
cmpxchg
std
movsl
enter
das
imul
in
cmc
jb
in
mov
xor
mov
clc
xchg
clc
push
incb
mov
xchg
in
mov
adc
imull
mov
cmc
daa
and
in
mov
add
sbb
sub
pushf
loopne
arpl
pop
nop
jnp
pop
cmp
pop
dec
or
lock
add
sti
popf
cli
je
ret
jecxz
jecxz
cmc
mov
mov
sub
mov
in
mov
lret
push
and
and
test
arpl
out
fldcw
std
dec
sbb
inc
sub
sti
sbb
lcall
test
mov
jbe
sbb
out
movsb
iret
ljmp
and
outsl
push
mov
insl
push
cli
adc
sbb
imul
pop
jo
nop
sar
in
pushf
icebp
leave
je
dec
pop
rcrb
dec
dec
and
ja
test
lds
push
inc
lods
jo
jle
mov
adc
clc
cmp
pop
xchg
lcall
jle
add
mov
and
in
sbb
in
sbb
ds
and
fdivp
dec
popf
test
cs
adc
push
push
lods
mov
clc
jmp
and
push
pop
xchg
and
into
ds
add
mov
push
sbbl
inc
mov
add
or
subb
out
sbb
and
mov
fimuls
mov
add
push
xlat
pop
mov
jg
sbb
or
sahf
cs
and
mov
cld
into
movsl
ja
dec
cmp
daa
aam
fs
cmp
arpl
fisttpll
or
xchg
aaa
sub
ret
pusha
and
stc
lcall
mov
mov
clc
fwait
adc
lret
sbb
inc
pop
xchg
mov
push
fcoms
ljmp
sub
sub
rclb
adc
out
dec
or
add
mov
and
push
sub
mov
cmpsb
outsb
movsl
fistpll
add
stos
xor
jns
addr16
dec
xchg
popf
inc
pop
jge
shlb
clc
sbb
into
cmp
add
pushf
dec
fsubp
hlt
mov
dec
sbb
sub
mov
arpl
iret
movsb
cmp
movsb
popa
insl
ljmp
js
lcallw
mov
inc
cmpl
fistpl
push
mov
cmp
adc
sbb
outsl
pop
nop
jp
js
xchg
pop
pop
aad
pop
mov
push
aad
jo
fcmovne
push
mov
das
std
jo
dec
fucomp
xchg
cmp
inc
pop
lods
out
adc
xor
xchg
mov
cmc
imul
cs
push
lods
lahf
fmull
mov
and
jae
adc
or
mov
cli
dec
shlb
and
and
dec
stc
mov
test
lret
shl
inc
scas
sahf
sub
mov
popf
or
lahf
mov
push
inc
mov
xchg
aam
sbb
div
imul
sarl
test
lret
movsb
add
psubq
jne
sub
mov
std
push
ja
mov
adc
sub
xchg
fnstenv
out
sti
in
jge
sahf
add
pusha
adc
pop
fnstenv
arpl
sub
jno
push
jl
mov
add
imul
jo
nop
arpl
pop
add
cs
xor
rorb
push
sbb
jmp
push
pop
in
cmpb
mov
inc
xchg
jb
stc
scas
add
and
stc
pusha
lea
dec
xchg
sahf
or
or
mov
test
inc
aas
inc
repz
rorl
lea
push
add
insb
sbb
lods
dec
xor
jecxz
jge
xorl
xchg
mov
sbb
xchg
jb
adc
stos
cltd
mov
xchg
sbb
add
aaa
mov
adc
ret
xchg
mov
xor
dec
test
outsb
les
daa
addl
popf
outsb
xchg
int
mov
adc
pop
xchg
test
rclb
push
cmp
out
cmp
fcmovnb
mov
in
mov
adc
sti
mov
les
inc
jb,pn
dec
shll
dec
into
inc
aam
sbb
adc
adc
sub
repnz
cmp
pop
mov
pop
jp
push
loop
addr16
mov
mov
hlt
adc
orb
jg
sbb
imul
pushf
mov
inc
stc
test
mov
jp
sbb
sub
insl
fcmovnu
test
mov
clc
xor
nop
jns
xchg
mov
ror
shl
sbb
scas
std
pop
jnp
dec
and
push
lahf
cwtl
pop
mov
add
mov
repz
popf
dec
por
adcl
pop
int3
movsb
rol
xor
pop
dec
mov
jmp
push
mov
inc
pop
sub
out
jbe
push
mov
outsl
test
mov
inc
pushf
mov
mov
mov
les
pop
push
fs
cmp
cs
mov
int
fiadds
imul
iret
test
pop
shll
pop
ss
cmp
mov
push
arpl
sbb
jg
xor
dec
xor
jmp
cli
shll
pop
icebp
mov
xchg
scas
aad
pop
jae
scas
sub
pop
lahf
xor
or
xchg
mov
dec
dec
daa
jmp
adc
mov
movsb
adc
sbb
sbb
add
imul
mov
mov
fisubl
shl
rcrb
in
mov
in
add
jae
xor
cltd
and
sub
outsl
jle
icebp
add
in
enter
jns
cmc
sbb
loope
jns
and
xchg
repnz
stos
dec
dec
imul
add
add
outsb
xchg
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
xlat
push
out
imull
jle
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
cmp
imull
jp
dec
cmpsl
pop
mov
lahf
mov
ja
pop
out
lret
aaa
ss
adc
xchg
imulb
outsb
xchg
dec
daa
fidivs
and
sahf
add
fsubs
enter
int3
int3
jae
arpl
inc
je
dec
push
ja
add
xor
mov
aam
in
hlt
mov
mov
mov
inc
arpl
inc
je
add
adc
and
dec
repz
in
hlt
mov
mov
mov
inc
arpl
inc
je
add
adc
and
xor
xchg
in
xchg
fcmovnbe
rol
lret
cmp
arpl
jae
and
cwtl
scas
clc
mov
sbb
mov
push
das
ret
jmp
pop
cmpsb
cmp
icebp
sbb
xchg
sbb
sub
inc
nop
dec
test
in
inc
call
jb
or
xchg
outsb
xlat
in
popa
repz
mov
mov
sub
add
and
cmpsl
xor
repz
sub
in
dec
test
push
scas
xorl
mov
adc
cmp
cwtl
ret
sbb
xlat
mov
dec
mov
pop
fsts
mov
fsubr
sub
jno
aad
xchg
sbb
loope
test
mov
push
fs
je
add
adc
and
xor
in
hlt
mov
mov
fnsave
fs
popa
push
jbe
inc
pusha
mov
out
mov
scas
adc
lret
fst
cli
jo
adc
add
es
push
add
loope
xchg
mov
xchg
ljmp
sbb
pop
sbb
push
inc
adc
sub
adc
and
xor
in
hlt
mov
mov
mov
inc
arpl
inc
je
add
adc
and
xor
in
hlt
mov
mov
mov
inc
cmp
mov
jmp
push
pop
or
dec
shr
mov
push
pop
nop
loop
cmp
jb
push
adc
rcl
mov
daa
cmpsl
push
sbb
repnz
data16
lcall
testb
out
repz
mov
outsb
adc
pusha
push
out
loope
or
pmulhw
push
adc
push
imul
test
sub
fs
gs
mov
xchg
dec
outsl
shll
movsl
jb
fmul
add
adc
jb
and
mov
cltd
cmp
jg
dec
push
aam
lcall
sbb
je
fiaddl
cmpsb
loope
ljmp
sbb
jmp
fdivr
test
mov
outsb
push
adc
sti
test
jns
jg
jecxz
sub
fsubr
mov
bsf
ds
sub
inc
je
dec
mov
notb
aad
pop
enter
adc
push
scas
outsb
clc
stos
in
repz
fsubp
cmpsl
cmp
fisubrs
out
xlat
jae
mov
outsl
add
jge
stc
sub
mov
and
xor
andl
xchg
insl
jb
mov
std
mov
stc
or
mov
test
and
mov
les
mov
push
mov
lds
cmp
adc
pushf
mov
mov
js
xchg
fidivs
adc
es
lea
inc
and
or
adc
inc
iret
loop
push
mov
lods
notl
daa
hlt
xlat
or
mov
mov
fistpl
xor
jno
push
popf
cmpsb
jae
and
inc
pop
loopne
nop
push
retw
push
cmp
inc
pop
xor
adc
jle
mov
scas
push
xchg
filds
mov
gs
sub
fwait
mov
rolb
popa
jp
mov
cmp
add
mov
jmp
xlat
repnz
out
mov
pop
mov
mov
push
dec
push
and
push
sbb
pop
cmp
cmp
or
out
cld
add
jbe
ja
pop
or
add
jmp
mov
imul
pop
sbb
mov
int3
or
mov
adc
cmp
sub
cmp
lret
cmp
es
out
cmp
scas
sub
into
jne
add
mov
cwtl
cs
cs
repnz
test
or
into
cltd
xor
inc
pop
xor
mov
xor
test
popa
fistpll
inc
add
es
nop
xchg
jno
cmp
in
push
sahf
test
add
push
mov
lcall
pop
insl
arpl
movsb
sub
out
int3
leave
stos
mov
movsb
mov
dec
movsl
sub
aam
jno
popf
nop
cwtl
sti
test
sbb
push
jo
jno
pop
data16
jp
mov
dec
sbb
iret
mov
and
incb
or
adc
es
mov
push
ja
inc
add
in
repz
fimuls
sbb
pop
jb
xchg
out
and
adc
dec
inc
hlt
xchg
js
push
mov
inc
daa
mov
ljmp
repnz
jge
jl
ss
push
cli
mov
in
adc
dec
inc
cwtl
insl
cltd
add
stos
add
pop
jo
sbb
mov
cmp
cmp
push
xchg
cmp
clc
adc
push
daa
fisubrl
dec
pusha
add
xchg
jnp
call
and
imul
test
ljmp
lock
ds
leave
jg
sub
insb
mov
sub
aam
loope
mov
leave
xor
std
push
fbstp
adc
movsb
mov
leave
je
push
mov
push
adcl
pop
or
les
jae
lea
mov
xchg
popa
jno
pop
dec
jecxz
and
sahf
out
push
and
jns
sub
dec
fsubl
andb
rclb
cmpsb
mov
imul
cs
or
push
cs
das
cmpsb
cmp
ds
cld
jle
adc
iret
into
ret
jno
repz
int
enter
arpl
mov
mov
movsb
rolb
addr16
push
sub
inc
inc
and
je
movsb
pop
enter
jae
push
xor
xorb
int3
scas
lahf
mov
and
mov
lcall
std
pop
push
add
lock
sbb
push
fadds
adc
insb
cmpsb
sbb
rorb
jae
mov
popf
gs
dec
out
ss
mov
and
adc
push
insb
mov
xchg
loope
dec
pusha
andb
ret
pop
addr16
or
adc
movsl
or
insl
sub
mov
push
hlt
sti
mov
lcall
push
xchg
push
ror
sbb
loopne
pop
jo,pt
adc
into
or
in
push
push
push
sbb
inc
jno
insl
mov
mov
ficoml
jae
das
jp
sti
divl
aad
outsb
ret
pop
call
or
bound
mov
ret
push
jae
out
ret
or
hlt
dec
xchg
andl
bound
mov
mov
adc
out
push
fcmovnu
xor
fadd
adc
push
lds
xchg
movsl
cmp
jo
push
sub
insl
mov
jecxz
popf
adcb
mov
jno
outsl
mov
xor
pop
idiv
inc
adc
sub
sub
push
add
lock
mov
push
stos
dec
mov
jb
das
jne
xorl
and
punpcklwd
sub
out
xchg
fstpt
cmovnp
add
scas
je
fwait
popf
jmp
xchg
pop
add
or
mov
dec
push
adc
xchg
je
mov
push
adc
repz
out
fiaddl
les
xchg
inc
test
enter
xorb
cmp
scas
mov
jb
clc
sbb
icebp
jge
inc
xchg
mov
jecxz
movsl
mov
fnstsw
sub
cli
sbb
add
pop
push
pop
mov
gs
lret
inc
outsb
cmp
movl
in
xchg
shrb
add
mov
imul
loop
pop
std
xchg
test
in
adc
pop
pop
jno
lea
mov
gs
pop
fs
rcrb
shrb
adc
mov
add
dec
inc
sub
xchg
cwtl
sbb
in
addr16
lret
xor
out
mov
cs
and
jge
and
mov
orb
push
cmpsb
lret
insl
push
or
mov
std
inc
sub
repz
jmp
adc
ljmp
push
scas
mov
sub
std
notl
mov
push
adc
cmc
sbbl
sbb
out
fs
aas
rcll
ljmp
cmp
insl
cld
addr16
dec
jp
jg
push
orb
jnp
mov
roll
xor
shlb
adc
mov
ficomps
scas
sbb
in
xor
mov
xchg
shl
pop
sbb
popf
arpl
xor
dec
rorl
movsl
sub
js
push
repz
sbb
push
cmpsl
push
xchg
clc
imul
lret
lret
ljmp
movsb
insl
pusha
addr16
fistps
insl
jbe
dec
rol
mov
loope
mov
ljmp
out
incl
sbb
jp
pop
jg
xlat
jg
in
into
ret
jnp
mov
cltd
mov
inc
int
mov
pop
cmpsb
fcoms
lret
and
xchg
or
mov
xlat
xchg
dec
mov
mov
mov
push
sti
int
xchg
mov
cmp
fdivp
cmc
sbb
cli
add
cmp
jecxz
adc
or
in
xchg
mov
inc
sarl
lods
lret
popf
and
jns
jp
sub
dec
in
sarl
into
aaa
push
pop
popf
push
sti
dec
xchg
push
outsl
sbb
ret
or
lcall
jbe
jle
int
movsb
xor
jmp
insb
ja
cmp
push
cmpsl
sbb
jo
js
cli
aas
imul
mov
adc
arpl
subb
aaa
sbb
xchg
hlt
adc
cli
pop
pop
inc
cmc
sub
mov
sbb
dec
push
xchg
call
aad
fcmovne
cmp
rclb
cld
fsqrt
sbb
or
and
addr16
jmp
sub
xchg
subl
mov
sbb
loop
loopne
testl
jmp
push
sub
push
xor
dec
imul
xchg
cmpsl
enter
pop
xchg
push
fdivr
dec
cwtl
dec
sub
aaa
sub
lock
push
pop
cmp
out
stos
cmc
dec
push
loop
cmpsb
bswap
fldt
popa
fmuls
sub
bound
stc
push
mov
repnz
data16
push
ljmp
sub
inc
adc
sub
xor
add
sbb
addr16
sbb
loopne
inc
test
fistl
dec
jecxz
jne
dec
cmp
enter
jo
sub
fwait
adc
sub
cmc
jge
lahf
iret
and
test
lds
pop
dec
xor
pop
pop
push
not
je
jg
sub
push
pushf
iret
adc
cmpsb
or
daa
mov
jbe
shll
scas
xchg
mov
hlt
hlt
fdiv
in
xlat
push
pop
adc
mov
jmp
sbb
xchg
movsl
daa
push
cmp
test
mov
and
cmp
dec
sarb
imul
sub
outsb
jmp
fstpl
xchg
sar
clc
shll
add
sbb
shr
mov
stos
push
lret
ja
movzwl
fsubl
in
add
test
lcall
icebp
movsl
push
mov
gs
or
dec
stos
jmp
mov
roll
lcall
imul
xor
ret
shlb
inc
adc
shll
adc
push
adc
mov
xor
mov
pop
ljmp
mov
lgs
mov
icebp
loope
or
mov
adc
jl
lret
loopne
lret
test
ficomps
test
aam
cmc
jl
or
popa
lret
add
aad
pop
popf
int
clc
notb
stos
or
push
push
mov
mov
xchg
lahf
ljmp
pop
mov
lret
cmpsb
flds
loop
in
movb
ss
fists
dec
mov
test
xor
js
push
fdivs
lcall
mov
mov
repnz
bnd
fcmovnbe
xor
fadds
aad
and
sahf
mov
in
rolb
xchg
hlt
lods
jo
imul
inc
int
aad
imul
xlat
int3
push
ds
xchg
cmp
push
xchg
shrb
stos
jg
roll
xchg
mov
jno
dec
lret
cmp
aaa
xchg
push
xchg
mov
sub
out
ret
stos
pop
test
iret
pop
fprem1
cmc
mov
shll
stos
cmp
int3
divb
test
fcmovb
mov
ret
out
push
ds
fucom
fdivrs
mov
jp
std
push
mov
jl
icebp
leave
cmp
mov
xor
imul
loope
fimuls
idiv
dec
push
sbb
scas
adc
rcll
fstl
mov
and
ret
push
push
ret
outsb
add
cs
in
pop
insl
test
aas
fmulp
add
call
xchg
fisttpll
dec
push
loop
mov
mov
ret
flds
lret
mov
push
fmull
enter
mov
cli
or
add
mov
push
push
dec
insb
jmp
ficompl
add
cmp
das
lcall
fisttpll
push
and
shrl
pop
lret
daa
and
mov
sbb
in
int
aaa
lahf
dec
sub
and
push
adc
jg
ficompl
mov
jns
sub
and
xchg
add
pushf
adc
fs
sbb
pop
bound
fsubs
cmp
jbe
push
cmp
jne
fsubrs
imul
fisttps
mov
outsl
test
mov
subb
xchg
sub
jl
jecxz
cwtl
fmuls
into
pop
imul
mov
push
ret
mov
jne
lret
sbb
lock
fisubrl
cmpsl
pop
cli
ss
bound
das
push
cmpl
push
mov
mov
xchg
fwait
scas
xchg
sbb
bound
mov
cmp
inc
stos
xchg
test
cmpsb
mov
shrl
lea
mov
sbb
xor
add
jbe
imul
adc
mov
xchg
jbe
mov
dec
leave
loopne
lret
test
sub
out
jbe
rol
cs
push
shll
add
ja
dec
pop
stc
inc
adc
clc
mov
cmp
test
imul
or
xchg
jle
or
sub
pop
divl
in
sbb
mov
lock
jle
jmp
lods
xlat
inc
sub
adc
adc
and
fld
cmc
sbb
inc
inc
adc
xlat
sti
jns
aaa
cmp
jo
ds
or
pop
cs
add
xchg
outsl
pop
pop
enter
int
jne
mov
jo
ret
dec
fidivl
push
mov
cmp
dec
sub
ds
ret
lcall
xchg
pop
filds
pop
in
sub
mov
mov
or
mov
shll
sub
stos
xchg
aam
mov
in
icebp
sub
pusha
in
jnp
lods
dec
loope
test
push
adc
or
es
je
movsb
and
sbb
lds
mov
jge
sbb
cltd
ret
mov
lea
clc
push
push
lods
xor
jb
or
subl
xchg
into
hlt
add
clc
cltd
mov
lret
push
out
lods
mov
stos
mov
loop
nop
scas
stos
mov
mov
sbb
lods
rcll
inc
xorl
sahf
jle
mov
pop
sbb
hlt
xchg
in
movsb
mov
and
sbb
int3
loop
and
aam
int3
dec
jp
and
out
xchg
ret
push
mov
sub
pop
sub
mov
cs
jne
ret
mov
scas
loopne
insb
addr16
mov
lret
shll
les
inc
clc
push
mov
push
test
mov
mov
int3
sarl
cmp
loop
aam
enter
sarl
xor
jl
cmc
ret
push
push
jge
mov
popf
jle,pt
in
adc
stc
shl
mov
aaa
repnz
fstpl
push
jmp
iret
xor
jle
dec
out
cld
pop
in
lret
pop
scas
sbb
rolb
bnd
in
test
xchg
add
ret
arpl
or
mov
sub
sub
sub
clts
sbb
mov
cmp
int3
push
pop
mov
sbb
xchg
stos
sbb
pop
aas
sti
idivl
lea
repz
pusha
icebp
es
leave
cltd
inc
test
mov
into
xor
aad
shrl
or
sahf
sub
leave
aas
dec
minps
mov
or
jmp
fcomps
push
add
mov
popf
xlat
insl
mov
xchg
xor
and
out
xchg
pop
pop
mov
jp
cmp
add
pop
xor
push
dec
dec
inc
aad
mov
cs
cmp
ret
add
mov
inc
jmp
jecxz
test
and
in
pop
int
test
dec
leave
aam
push
sbb
call
test
push
outsb
mov
and
xor
lahf
dec
je
and
rcl
xchg
mov
xchg
inc
idivl
xchg
lret
and
es
cmpsl
mov
fisttps
or
mov
cmp
cmp
mov
pushl
mov
sbb
mov
lds
mov
sub
fiaddl
ljmp
sub
sbb
outsl
bound
enter
fildll
out
out
mov
jb
fnsave
aaa
mov
fcoml
pop
sbb
or
scas
fisttpl
in
cltd
and
andl
out
in
in
pushf
insl
bnd
cmp
je
pop
adc
mov
out
cmp
inc
test
mov
adc
jg
mov
pop
loope
push
dec
negl
scas
dec
sbb
lods
xchg
aaa
add
aas
pop
sub
stc
push
rolb
hlt
aam
jbe
jp
pop
mov
ret
lahf
mov
inc
test
in
sub
push
add
and
lock
in
icebp
and
test
jne
cmpsb
or
sbb
pop
test
push
push
xchg
out
fwait
pop
push
add
mov
cli
enter
inc
adc
scas
leave
mov
aad
andb
mov
xor
mov
xor
pop
sub
lahf
out
sbb
sarl
mov
xchg
xchg
nop
pushf
mov
adc
notl
sbb
sbb
cmp
sbb
sti
add
jno
pushf
pop
xor
ret
mov
enter
movsb
adc
inc
ljmp
push
dec
sub
dec
ja
into
rorb
fldt
xchg
push
mov
push
arpl
sbb
lahf
push
in
pop
loop
mov
xchg
outsl
xor
or
lods
inc
nop
popf
les
xchg
aas
loopne
push
xchg
mov
jns
sbb
or
jp
int
mov
dec
faddp
std
pop
adc
inc
jb
jbe
cmp
femms
pop
shlb
cmp
sbbw
push
push
or
inc
repz
dec
adcb
jb
insl
pop
add
jns
bound
and
aaa
dec
bound
pop
out
mov
inc
add
fldt
cmp
les
inc
cmpsl
cmpb
ds
jg
pop
imul
pushf
into
mov
rorb
inc
jnp
leave
xor
xchg
cmp
dec
sub
or
push
cmp
xchg
lods
mov
loope
in
stc
or
shll
cmpsb
dec
sbb
add
loopne
scas
adc
jp
mov
jmp
dec
push
mov
rcrb
lock
pmullw
sbb
xorl
adc
add
sub
enter
inc
lret
test
pop
cmpsl
adcb
dec
in
sbb
mov
inc
into
lahf
rcll
jae
cmp
loop
cmp
sub
mov
or
sarb
dec
add
pop
sbb
inc
js
cli
cmp
fstpt
or
loopne
arpl
xchg
out
mov
lods
hlt
movsb
cwtl
addb
xchg
mov
sti
jnp
xorb
mov
dec
adc
or
mov
push
imul
adc
jecxz
xor
dec
lea
stc
out
push
test
into
cmp
inc
rcll
hlt
out
dec
cs
scas
jo
std
cmpsb
push
cmpl
pop
dec
add
testb
js
addr16
adc
in
cmp
scas
dec
pop
mov
stc
cli
or
add
xor
cmp
das
xchg
call
std
dec
lret
push
icebp
dec
sub
lea
jl
add
cmp
dec
pop
sub
lods
mov
stos
iret
jg
or
js
mov
inc
loope
adc
and
in
scas
xchg
iret
sub
xorl
pusha
dec
test
xchg
aam
adc
fimuls
mov
stos
notb
push
jp
mov
mov
inc
addr16
jle
leave
data16
sub
mov
scas
and
dec
lret
and
cwtl
inc
test
in
das
scas
loopne
xchg
adc
push
xor
jle
or
loop
loopne
out
mov
mov
xchg
aaa
jle
divb
jb
cmc
adc
test
inc
decl
inc
xchg
mov
jo
mov
ret
mov
pop
das
shll
mov
mov
ja
or
dec
sbb
mov
and
pop
fidivrs
push
enter
pushf
inc
gs
inc
pop
repnz
int
lods
xor
out
or
lds
dec
jl
pop
repz
subl
cld
dec
adc
and
push
pop
sbb
pop
adc
xor
loop
sub
in
xchg
mov
sarl
ss
push
jmp
sbb
jp
mov
divl
lret
and
data16
or
sub
mov
in
jmp
mov
xor
lock
mov
fstl
std
add
fcmovb
sub
in
mov
push
rolb
outsb
dec
test
lcall
xchg
mov
xor
pop
inc
sarl
jns
out
xchg
pusha
dec
mov
lcall
rcrb
fdiv
lods
xlat
imul
imul
repnz
or
loopne
bound
imull
xchg
lret
and
or
pop
pusha
xor
mov
pop
hlt
movsb
inc
js
mov
js
rolb
jnp
sub
dec
sbb
icebp
add
aam
daa
mov
rcll
or
xor
sarl
pop
pusha
andl
xchg
pop
decb
xor
cmp
dec
pusha
rorb
daa
mov
sub
or
push
xor
lods
dec
dec
jmp
pop
mov
inc
imul
push
data16
stc
mov
push
xchg
shrl
or
xor
jmp
xor
lret
outsl
iret
jge
leave
inc
pop
pop
dec
mov
xchg
shrb
lock
je
nop
add
fldt
or
sub
adc
testb
mov
ja
lahf
xchg
push
iret
pop
lret
jnp
jno
and
pushw
mov
cwtl
andb
out
jg
in
mov
out
add
dec
enter
icebp
std
fisubrs
ret
or
test
sub
and
push
mov
mov
push
leave
and
and
loopne
or
xchg
into
and
ret
lcall
testb
sbb
xor
mov
dec
mov
pop
lods
sub
aad
cmp
cltd
adc
fisubrs
clc
mov
cmp
nop
call
mov
int3
test
jns
push
mov
test
jl
cmp
arpl
add
and
inc
fsubl
outsb
cmpsb
mov
add
pop
aas
pushf
rcrb
scas
test
ficompl
dec
iret
shrb
cmp
pusha
movsl
jnp
addr16
rcl
jbe
lods
sub
ja
ret
xorl
mov
in
in
aad
seto
xchg
xor
add
jmp
in
sbb
dec
fdivl
ss
shlb
call
pop
test
xchg
and
inc
jmp
enter
andl
add
ja
cld
xchg
pusha
sbb
cmpb
add
dec
sub
push
mov
fbld
xor
adc
and
xor
in
hlt
mov
mov
mov
inc
arpl
inc
je
add
adc
and
xor
in
hlt
mov
mov
mov
inc
arpl
inc
je
add
adc
and
xor
in
hlt
mov
mov
mov
inc
arpl
inc
je
add
adc
and
xor
in
add
sub
pop
jl
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
mov
add
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
push
push
push
push
push
call
mov
pushl
pushl
pushl
pushl
pushl
call
push
pushl
call
push
push
push
push
pushl
call
push
push
push
push
pushl
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
sub
movzbl
sub
test
je
movl
movl
movl
andl
jmp
movl
movl
movl
movl
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
