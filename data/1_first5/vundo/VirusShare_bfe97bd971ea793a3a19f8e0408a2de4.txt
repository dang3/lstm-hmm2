add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
stos
xor
int3
mov
popw
xor
adc
add
add
add
add
or
add
test
jnp
mov
dec
add
add
add
add
add
add
add
add
add
mov
add
bound
push
add
daa
add
add
jne
adc
add
add
ret
add
add
mov
verr
imul
add
inc
add
add
add
add
add
test
jnp
mov
pop
add
mov
xchg
daa
add
add
add
add
add
add
add
add
add
add
add
mov
iret
add
add
add
add
add
add
test
jnp
mov
push
add
add
daa
add
add
add
add
add
add
add
add
add
mov
mov
inc
add
add
add
add
xor
mov
dec
add
roll
movsb
add
add
insb
add
add
add
or
push
add
add
add
add
dec
add
add
movsb
add
add
add
call
add
push
add
add
add
add
scas
add
inc
add
pop
add
add
add
add
daa
add
add
imul
add
add
add
add
jge
push
add
add
add
add
adc
insl
add
add
add
add
add
mov
cmp
cmp
popf
add
add
add
add
add
add
mov
str
add
pop
add
pop
add
mov
movsb
add
sbb
or
pop
add
add
call
add
add
add
pop
add
add
pop
add
add
add
add
add
jge
cmpsl
add
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
roll
add
mov
jnp
inc
add
add
add
jge
testl
mov
pop
add
add
add
stos
add
add
add
push
add
add
add
movsb
add
add
add
adc
add
push
add
push
add
adc
jp
movsb
add
dec
add
in
add
add
addb
add
cmp
mov
add
add
movsb
add
add
add
xlat
add
movsb
add
in
out
lods
add
add
add
loope
xor
dec
add
add
add
roll
add
add
add
add
add
add
add
add
jl
mov
or
jge
les
addb
add
sub
dec
add
sub
pop
add
add
add
add
add
add
push
add
cmp
mov
add
add
add
add
add
add
add
add
icebp
add
add
sub
pop
add
ret
add
verr
add
add
aas
add
sub
or
ret
add
add
roll
sbb
or
xchg
add
add
push
add
add
or
es
mov
lahf
or
pop
sub
push
pop
mov
jl
jg
push
outsb
jne
mov
push
xchg
negl
xchg
sbb
jg
ret
ja
dec
and
sbb
lea
jae
cmp
imul
stos
xchg
loope
xchg
outsl
inc
lds
sbb
test
mov
cmc
out
aad
iret
inc
push
xor
xchg
push
inc
or
test
addl
andl
inc
in
adc
fistl
movsl
lret
loope
in
add
addr16
mov
inc
cmpsb
mov
mov
sub
mov
inc
sub
jae
es
stc
stos
daa
clc
sub
imul
popf
mov
repz
jmp
dec
mov
loop
ds
push
add
stos
or
pusha
fstl
leave
lret
mov
scas
jb
outsl
fdivrl
xchg
push
pop
or
mov
dec
sti
insl
popa
subb
fcmovb
ror
inc
ja
push
aas
or
inc
mov
arpl
adc
ljmp
loopne
enter
push
pop
push
cli
shl
lahf
cwtl
adc
test
jecxz
int
push
addl
out
adc
test
lcall
into
jmp
shll
xchg
cmpsl
ret
push
xchg
adc
aaa
mov
push
xlat
loop
mov
mov
roll
iret
add
push
cli
push
dec
sarb
inc
repnz
push
in
sahf
sub
insl
lds
adcb
aam
add
ja
fadds
add
pop
sarb
cmp
es
mov
outsb
xchg
mov
loopne
dec
xlat
cli
loope
shl
add
mov
dec
dec
adc
shlb
mov
mov
xchg
insb
jmp
orb
mov
xor
xor
xchg
imul
pop
adc
daa
pop
dec
dec
sbb
xchg
mov
mov
dec
pushf
push
push
dec
jmp
insb
int
clc
ljmp
sub
fwait
mov
cld
cmp
dec
mov
test
push
lds
xchg
sub
aad
ret
and
mov
pushf
lds
sbb
incb
sub
lods
std
das
nop
cmp
in
push
push
pushl
sub
ja
sub
inc
out
je
cltd
push
fldenv
addr16
loop
iret
cmp
shr
scas
cmp
inc
adc
lahf
movsb
adcl
clc
jmp
fmull
and
sbb
xchg
mov
mov
cmp
pop
xchg
mov
mov
adc
cmp
mov
mov
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lret
sub
jg
psubb
mov
push
mov
jnp
imul
or
sbb
sub
sub
lods
das
fdivrs
test
clc
pop
mov
jg
dec
mov
mov
dec
rcrl
sub
cmp
jo
sub
jp
and
pop
clc
aaa
mov
mov
pushf
add
sbb
cltd
jl
fs
call
pusha
cwtl
xchg
xchg
sahf
imul
cmc
je
aaa
sbb
sub
cmp
and
and
push
jp
hlt
and
push
sub
in
jo
iret
idiv
inc
mov
ss
popf
popfw
push
out
out
inc
sbb
mov
scas
pop
scas
jge
js
sbb
sbb
mov
or
jnp
dec
push
mov
pop
in
jo
sahf
idiv
sbb
xor
mov
enter
je
adc
mov
mov
push
test
ljmp
inc
shr
push
iret
ja
jno
push
aas
lea
cld
pop
out
loope
mov
test
cmp
call
outsl
loopne
test
push
int
scas
ret
lea
inc
rcll
adc
xlat
cmp
mov
arpl
adc
cmp
iret
or
test
nop
inc
mov
mov
jae
cmp
in
insb
das
into
or
push
mov
jns
movsb
pop
mov
mov
jae
and
pop
dec
scas
pop
mov
or
sbb
sub
cmp
enter
call
outsl
cwtl
jg
dec
mov
mov
or
sbb
sub
cmp
enter
sub
icebp
inc
or
pushf
push
outsl
cs
pop
shr
push
daa
bound
and
add
loope
bound
or
inc
insl
mov
adc
jecxz
push
insb
dec
mov
pop
ss
mov
daa
pop
or
or
addr16
lods
stc
jo
jb
sbb
loopne
lcall
enter
test
mov
imul
sahf
arpl
roll
lods
sub
fistps
lret
cwtl
inc
leave
inc
cs
jbe
cltd
sbb
cltd
push
arpl
std
cmp
std
das
lahf
or
or
mov
ss
sub
cld
inc
ret
cmp
add
popa
ja
mov
mov
pop
jg
mov
sbb
pop
test
ret
rcr
and
shr
aad
hlt
and
into
mov
pusha
mov
push
dec
dec
int3
ds
negl
pcmpgtw
lret
mov
out
ds
mov
xchg
sbb
lret
push
ffree
fistpl
icebp
test
add
mov
xchg
lret
and
mov
addr16
and
xlat
mul
les
aaa
fdiv
jmp
dec
mov
jno
aaa
inc
cmpsb
addl
je
xchg
frstor
inc
iret
test
mov
xor
xchg
xchg
mov
sti
sbb
in
shll
into
sbbb
lock
mov
jo
ret
pop
or
in
mov
jg
mov
in
xchg
dec
rolb
pop
xchg
cmp
imul
push
out
jecxz
cmpsb
mov
xorb
mov
insl
insl
lds
fwait
cmpsl
sahf
sbb
inc
mov
push
jne
mov
xchg
jae
aad
roll
stos
loope
mov
fstps
push
mov
ja
jg
xchg
sar
scas
push
addr16
stos
ljmp
subb
js
dec
pop
sbb
add
add
mov
xchg
stc
inc
adc
push
adc
pop
outsb
mov
and
sbb
mov
jo
xor
xor
cmpsl
push
imul
sbb
repnz
mov
push
negb
xchg
stos
inc
push
mov
push
sub
repnz
mov
push
jmp
mov
cli
fs
pop
shl
imul
xchg
movsl
dec
mov
lock
jg
pushf
lods
xchg
ja
rcll
fists
lea
lock
push
push
in
add
out
loop
xchg
aad
mov
push
cwtd
lahf
lret
dec
movsl
inc
xor
push
mov
add
pop
push
lods
mov
ss
lret
or
call
mov
mov
mov
dec
dec
jl
inc
mov
and
sbb
nop
mov
mov
mov
push
shrl
scas
test
testl
jmp
inc
sbb
push
jp
jo
inc
std
lret
add
xlat
pusha
mov
adc
lcall
hlt
cs
negl
aad
icebp
cltd
vpsadbw
test
jbe
aad
xor
sahf
ss
jns
inc
imul
movsl
leave
adc
lahf
int3
rolb
xchg
and
test
bound
pop
cltd
insl
adc
in
sbb
jns
lcall
inc
inc
pop
mov
cmpsb
daa
jle
mov
inc
and
ljmp
dec
jecxz
aaa
popa
roll
mov
in
or
pop
stos
popf
lahf
jne
sub
cmpsb
aaa
lea
jno
leave
push
inc
and
mov
sub
mov
mov
jno
int
lods
pop
mov
xor
pop
lret
xchg
sub
inc
lcall
add
push
jg
bound
scas
push
sbb
roll
into
out
mov
mov
xor
inc
or
push
cli
mov
fucomi
loope
mov
mov
mov
and
sub
lret
xor
jg
jo
sbb
into
sbb
cli
push
xlat
shrd
cmpsl
test
insl
outsl
cmp
sbb
insb
or
fisubl
sbb
fadd
aaa
sbb
sbbb
mov
movsb
fisttps
dec
aas
in
movsb
rorb
insb
inc
dec
call
mov
lods
orb
es
add
mov
mov
cmp
arpl
fdivs
dec
pusha
outsl
out
inc
jbe
sub
adc
inc
out
xor
sbb
stos
cmp
sub
jmp
aas
pop
or
insb
stc
insb
push
and
in
xor
sbb
and
pop
pop
mov
fistpll
ret
outsl
xchg
adc
scas
jmp
in
lea
aaa
adc
cli
jmp
imul
add
cmp
scas
int3
adc
xor
fimull
out
jo
xor
pushw
mov
dec
fstl
push
add
rol
add
pop
mov
popa
sub
fldl
js
jnp
int3
lock
and
lret
bound
add
je
scas
mov
mov
icebp
mov
jns
loope
pusha
mov
lea
jnp
xchg
add
cmp
call
pop
jecxz
push
pop
jecxz
sub
or
addr16
lds
sub
stos
mov
mov
pop
dec
cld
cmpsb
aaa
ss
pop
pop
iret
jecxz
sahf
cli
add
ja
repnz
std
sub
jne
out
aaa
inc
mov
lret
out
add
sub
sub
shrl
push
andl
in
cmp
pop
out
scas
test
sub
fs
xor
ja
pop
and
sub
stos
pop
xchg
scas
in
inc
jmp
sbb
call
dec
add
sbb
inc
and
jo
outsb
fdivrp
inc
shll
mov
mov
and
jns
jle
inc
xchg
fcom
dec
jo
test
ret
xchg
repnz
dec
iret
jbe
iret
add
xor
cs
sbb
fldenv
sarl
fwait
js
xor
push
sti
fcoms
push
adc
das
and
mov
jl
cli
insb
sahf
hlt
aas
or
je
outsb
mov
fwait
xchg
jmp
cmc
rclb
xor
push
adc
sahf
repnz
xchg
cltd
mov
inc
gs
out
jecxz
mov
aad
adc
fistpl
arpl
mov
ds
mov
fimull
fnstenv
cs
and
loopne
scas
xchg
mov
and
dec
jo
push
jg
in
push
pop
ret
push
jb
jp
mov
jmp
and
iret
int3
subl
adc
cmp
sbb
add
inc
fists
dec
int
jmp
adc
jecxz
pushf
lret
cmc
shll
stc
dec
push
orl
cli
insl
lods
xchg
stos
aas
jae
dec
sbb
fcmovnb
inc
push
int
mov
cmp
mov
add
add
lds
pusha
movq
adc
jmp
cli
loope
push
push
mov
ljmp
fisubs
and
xchg
dec
sbb
movsb
dec
jns
fcoml
test
inc
adc
add
and
jns
outsb
lods
jmp
loope
hlt
daa
fsubl
mov
daa
divb
ljmp
and
xchg
jb
jnp
lret
pop
lcall
lahf
add
add
bound
jmp
jb
xchg
cmp
mov
sub
sbb
orl
loopne
push
sar
out
test
add
stos
xchg
sub
jecxz
pop
adc
or
ljmp
repz
push
mov
cwtl
sysenter
push
out
xchg
dec
inc
or
outsb
clc
adc
clc
lahf
in
in
adc
mul
cmc
push
jg
test
shr
and
cmp
movsl
icebp
inc
jnp
repz
test
mov
fdivrs
mov
in
ret
sbb
test
outsl
or
icebp
pop
mov
mov
push
dec
out
popf
push
ds
dec
movsl
add
push
pop
enter
adc
inc
add
mov
pop
jne
jle
or
test
js
jmp
inc
and
stos
aad
jmp
repnz
leave
mov
xchg
dec
dec
push
jne
or
lds
inc
push
or
into
mov
or
push
push
push
dec
mov
shlb
pop
out
sub
clc
adc
mov
or
lock
and
add
and
xor
or
insl
sbb
rcrb
or
dec
push
mov
test
xchg
push
or
adc
push
cmc
daa
dec
lods
aaa
movsl
jmp
add
lods
call
jo
xchg
and
movsl
cmp
xchg
lods
gs
dec
jge
fstpt
shl
out
push
out
test
addb
leave
push
push
in
loope
testb
jl
dec
dec
sbb
push
push
shrb
or
adc
jns
imul
pop
pop
sbb
inc
aaa
insl
mov
inc
cli
xor
jg
pop
sub
mov
aaa
xchg
fdivrl
inc
xor
or
rcr
test
xchg
shl
jp
sti
sti
outsl
inc
push
mov
pushf
dec
enter
adc
cmpl
or
and
lds
pushf
pop
mov
roll
inc
push
inc
pop
int3
loopne
je
sub
push
push
std
xchg
daa
icebp
mov
sub
divl
int
pop
shlb
cs
mov
adc
pushf
push
xor
mov
inc
xor
enter
lock
movsb
gs
xor
sub
mov
mov
adc
fcmovne
cld
ficompl
xor
or
cmp
movsb
out
scas
addr16
xor
popa
push
dec
jbe
popl
sbb
pusha
in
mov
sahf
or
cmpsb
mov
sti
aam
push
aam
lahf
mov
cmc
movsb
jo
pop
in
push
push
pusha
test
xorb
jge
pushl
cmp
xor
sbb
mov
call
adc
rcl
jl
xor
rcll
mov
jnp
aas
sti
xchg
cmp
push
sub
icebp
push
ja
sub
mov
rclb
call
test
xor
pop
arpl
xchg
shl
mov
xchg
cmp
push
xor
mov
mov
pop
push
lcallw
cmp
icebp
daa
mov
and
xchg
inc
test
mov
xchg
imul
push
call
or
dec
ror
mov
xor
xchg
or
ret
cli
stos
fiadds
fidivrs
out
mov
lcall
or
mov
int3
fdivl
fwait
je
pop
aad
or
sbb
pop
adc
icebp
sbb
movsl
pusha
pop
shll
dec
dec
ja
xor
notl
gs
lahf
imul
ja
sbb
ss
pop
xchg
rorb
imull
ds
sbb
in
ja
jle
movl
sub
push
pop
and
xchg
mov
cmp
aas
sub
and
rclb
cli
sbb
dec
idivb
insb
ljmp
orl
test
lock
stos
aaa
add
xchg
arpl
mov
fnstenv
xor
cltd
push
and
sarb
xchg
loope
out
sbb
mov
mov
int3
push
enter
and
mov
add
jp
inc
pop
sbb
inc
xor
lret
push
fcmovbe
xorb
push
mov
cmp
sub
js
add
lods
shl
fcomps
arpl
lcall
adc
jne
mov
icebp
fdivrl
outsl
jl
cld
add
clc
add
and
cmp
mov
xchg
ds
mov
jno
xor
and
sub
inc
mov
push
dec
ja
add
lcall
lahf
mov
cltd
rorb
inc
rcr
cltd
test
fadd
cwtl
out
sbb
xchg
pushf
jne
dec
jmp
pop
shlb
lock
pop
les
fwait
test
jne
dec
inc
pop
inc
imul
sbbb
imul
cwtl
mov
into
in
idivl
in
dec
pushf
test
popf
lods
dec
vandps
add
and
sub
mov
or
xchg
lret
cmpsl
adc
push
lock
cwtl
popl
push
addr16
ret
inc
je
mov
or
sbb
mov
fisttpl
add
push
jmp
scas
enter
adc
pop
push
or
sub
xor
dec
inc
pop
add
insb
sbb
jno
lock
leave
pop
or
add
pop
outsb
ds
mov
into
sti
cmc
xor
mov
mov
nop
jle
jge
xchg
call
and
movsb
and
fs
pop
lret
jmp
xor
fwait
pop
andl
outsl
mov
sti
cmc
pushf
mov
mov
inc
stos
mov
fsts
jo
push
pop
and
dec
andl
fildll
scas
in
ret
mov
add
or
enter
lds
jge
mov
xchg
stos
out
xlat
sarb
shrb
iret
or
xchg
or
sub
inc
loop
and
xlat
pop
and
mov
es
int3
dec
test
jno
imul
or
or
mov
push
mov
push
sbb
inc
cwtl
enter
mov
jecxz
sub
mov
icebp
xor
jg
push
std
mov
iret
cld
pop
mov
aad
mull
data16
cmc
cmp
negb
inc
and
jge
pushf
jg
mov
add
add
testb
jp
aas
push
mov
sbb
dec
jnp
or
out
cmp
jno
cwtl
mov
out
cmp
jge
xchg
test
and
inc
lahf
in
adc
int3
out
test
les
inc
repz
inc
xchg
xor
fadds
and
dec
sahf
xchg
sbb
inc
push
aad
lcall
mov
daa
push
jbe
ffreep
or
dec
push
hlt
movb
divl
nop
imul
mov
sbb
js
nop
mov
rcrb
dec
jno
add
adc
repnz
aas
xchg
insl
pop
fwait
mov
in
stos
sub
add
cltd
dec
loop
push
sbb
out
xchg
std
cmp
xor
sub
lahf
mov
test
loop
es
das
pop
cmpl
sub
in
shlb
outsb
ss
lock
cmc
mov
add
fiaddl
xor
cld
addr16
mov
mov
pushf
jno
outsb
jle
mulb
sti
inc
cli
mov
aas
mov
dec
in
adc
fnstenv
lds
mov
cmp
dec
fstpl
and
fbstp
mov
adc
cmp
fs
test
jle
stc
aad
sbb
xor
test
mov
pop
jbe
sti
fidivl
mov
or
or
imul
xchg
inc
cmpsl
cmpsb
cmc
leave
mov
or
add
mov
push
add
push
mov
enter
cmp
lds
push
lsl
xchg
cli
jnp
addr16
and
sbb
lds
sbb
mov
xor
mov
xor
je
xchg
cmp
dec
rorl
orb
dec
arpl
push
push
lret
fidivrl
daa
inc
outsb
or
arpl
test
mov
push
mov
cwtl
std
or
xor
mov
sbb
push
inc
jb
sub
data16
inc
push
sbb
dec
mov
aad
fstps
out
icebp
mov
xchg
scas
push
movsl
fildll
icebp
mov
ret
add
push
xchg
lods
popa
ds
in
add
jle
inc
pop
test
test
in
cs
addr16
arpl
sbb
adc
pop
aam
push
sub
push
ja
xor
sub
mov
xchg
mov
push
stos
cmp
sahf
insl
jno
dec
popa
add
mov
pushf
jp
mov
xor
inc
mov
mov
sti
mov
mov
jns
push
iret
xchg
mulb
js
leave
lods
sbb
pop
or
filds
std
stos
gs
loop
test
pop
or
push
and
sub
outsl
cmpl
sub
xor
jl
push
sbb
mov
das
fisubrs
push
mov
imul
push
outsb
outsl
into
add
inc
mov
aas
cld
dec
lahf
das
cltd
pop
xchg
loope
popf
insb
daa
push
pop
out
push
xchg
pop
jle
imul
mov
hlt
push
out
or
fs
cmpb
out
pusha
outsl
pop
ds
pop
mov
cmpsl
test
pop
aad
mov
push
test
sub
sub
movmskps
push
sub
sub
lret
roll
into
bound
dec
out
push
leave
popf
ds
jno
xor
scas
xchg
dec
push
leave
push
pop
inc
aaa
add
stos
adc
mov
insl
mov
xchg
mov
lods
xchg
mov
and
inc
mov
mov
cmp
fsubrs
das
and
call
lcall
xorb
ja
xchg
mov
hlt
in
int
jp
bound
mov
mov
outsl
inc
jmp
push
mov
pusha
and
jno
in
add
xor
iret
pushf
mov
jmp
adc
insb
leave
std
inc
pop
test
or
lock
add
aam
pusha
pushf
mov
shll
sti
and
enter
jg
sbb
and
shrl
andb
or
punpcklbw
mov
cmpsb
inc
or
jecxz
repnz
fs
leave
push
push
mov
mov
jae
fdivrs
dec
pop
add
adc
out
movsb
mov
addr16
xchg
daa
lcall
sahf
xchg
ja
rorl
inc
mov
jo
cli
sub
and
jmp
rcll
outsl
or
jo
movsb
jp
ljmp
hlt
les
xor
inc
push
cmp
loope
push
pop
sbb
sti
fcompl
xor
pop
rclb
dec
mov
fbld
stc
add
iret
jecxz
cmc
test
mov
sbb
xchg
sub
adc
inc
shll
sti
xlat
sbb
pop
cmp
repnz
add
movsl
cwtl
js
cmpsb
sub
loop
sub
xor
mov
rorl
push
in
enter
push
scas
lahf
push
cmp
out
ror
sub
or
icebp
xchg
jecxz
jno
shrb
insl
mov
mov
cs
sub
mov
push
insl
inc
gs
or
mov
jmp
xor
repnz
das
ret
dec
and
and
sub
adc
sbb
pop
jmp
dec
cmc
outsb
js
mov
test
or
inc
rorb
stos
inc
ljmp
and
cmp
ja
xor
dec
xchg
fwait
dec
jnp
test
pop
lock
sets
jne
adc
cli
out
push
push
outsb
push
fwait
call
adc
jl
out
adc
inc
jo
ds
outsb
mov
add
mov
lds
xor
cmpsb
or
pop
xchg
movsb
imul
pushf
jle
mov
jecxz
mov
test
popa
out
jmp
mov
mov
jle
imul
dec
mov
inc
fadds
iret
add
mov
sbb
or
mov
mov
adc
jno
and
sub
lock
push
mov
jge
sbb
nop
dec
sarl
push
or
mov
mov
cli
mov
mov
repz
sbb
test
xchg
insl
jle
mov
cli
mov
pop
test
fwait
rclb
mov
pop
add
mov
ror
sub
and
jb
lods
das
js
pop
psubd
in
scas
dec
mov
xorb
adc
scas
pusha
xchg
cmp
fmuls
int
daa
sub
jae
imul
std
rorl
movsl
mov
dec
aaa
out
test
xor
lea
mov
jl
jmp
pop
mov
cmp
mov
js
mov
fs
rcr
adc
push
sbb
ja
inc
push
inc
xchg
or
add
add
call
sub
mov
fadds
push
mov
sbb
jb
mov
mov
loopne
loop
and
movsl
push
sbb
pop
xor
call
imul
in
jmp
filds
js
fsubrs
aas
scas
or
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
enter
call
outsl
cwtl
jg
dec
mov
mov
or
sbb
sub
cmp
enter
mov
clc
sbb
outsl
cwtl
adc
dec
js
dec
scas
pop
mov
or
or
sub
sarb
fmul
test
mov
fcomps
outsl
mov
iret
cmp
ret
call
xlat
mov
cmpsl
data16
out
faddp
into
or
xchg
hlt
mul
mov
outsw
push
dec
inc
pop
aaa
ds
mov
idiv
out
xlat
faddp
into
mov
cmpsb
mov
jbe
data16
aaa
pop
inc
dec
ss
es
push
push
push
mul
out
mov
mov
cmpsb
mov
xchg
dec
aaa
daa
and
push
jno
pop
ss
imul
mov
xchg
jge
popa
mull
dec
cmp
mov
inc
loope
ja
imul
sahf
mov
test
jno
sbbl
jo
out
divb
out
fldln2
cmpsl
xchg
mov
sub
sbb
jle
outsb
add
mov
fwait
out
xchg
push
inc
dec
xor
sub
jbe
xchg
data16
mov
ret
add
push
loope
push
or
adc
jle
fistl
adcb
push
cmpsb
inc
mull
dec
ds
dec
stc
mov
add
lcall
outsb
or
inc
fimuls
mov
es
pop
sbb
or
mov
scas
xchg
sahf
xchg
push
inc
inc
push
ss
add
jb
mov
ret
iret
shl
jecxz
push
adc
outsb
cmp
sub
push
jnp
jb
test
lods
mov
xchg
ljmp
cmp
dec
jge
push
cs
jns
jp
dec
out
mov
out
testl
data16
push
pop
inc
dec
ss
push
push
push
idiv
out
faddp
into
mov
cmpsb
scas
xchg
sahf
xchg
push
pop
inc
dec
ss
push
push
push
idiv
jecxz
pop
pop
xchg
int3
lds
push
sub
and
or
in
aam
or
cmp
lods
repz
or
fldt
cmp
lods
cmp
inc
sbb
cmp
enter
jl
or
jnp
mov
push
jge
cli
sbb
and
js
jae
shrb
lods
and
dec
into
jge
jo
out
fdivrs
imul
into
lcall
mov
and
pop
and
fadd
mov
test
add
and
test
fstpt
inc
js
sub
lcall
or
nop
mulb
inc
cmp
test
negl
push
clc
and
mov
out
test
or
xor
les
cmc
push
adc
push
ror
cltd
mov
jecxz
std
xchg
cmc
jmp
jg
push
push
xor
lcall
roll
aaa
outsl
call
cmpl
scas
gs
add
sbb
lds
mov
xor
repnz
mov
cltd
jg
psubb
sub
decl
jnp
inc
cmc
negb
and
pop
arpl
add
jo
mov
and
clc
xor
mov
bound
loope
pop
loop
outsl
dec
test
lret
inc
cltd
fsubl
cmp
in
add
lret
dec
pop
int
repnz
testl
dec
daa
pop
sbb
call
adc
fs
stos
cwtl
add
lret
jne
enter
mov
bound
cmp
push
mov
cmp
insl
fisubl
push
pop
das
push
and
pop
enter
sarl
loopne
out
int3
sbb
inc
testl
sbb
test
lret
push
into
pop
aad
fisubs
xlat
xchg
rol
dec
or
ret
jbe
cmpb
shlb
jb
sbb
jo
push
mov
push
mov
aad
adc
addr16
cmp
or
outsb
mov
xlat
dec
incl
and
jl
pushf
fxch
and
adc
mov
cmp
jmp
lret
dec
mov
xchg
xor
fildll
inc
cwtl
lcall
mov
sub
inc
xor
ret
xor
cmp
xchg
fucomp
fdivp
pop
mov
jbe
adc
movsl
mov
mov
add
pop
cmp
test
iret
dec
sbb
leave
ja
in
mov
lds
or
test
sub
push
inc
lods
ret
dec
jl
adc
jae
dec
push
adc
iret
fxam
dec
pop
sub
daa
add
jo
pop
bound
les
out
cmp
iret
mov
jne
and
xchg
cmp
xorb
xadd
mov
loopne
lcall
cmp
mov
addr16
lea
loopne
in
push
mov
shr
xchg
pop
mov
pop
xchg
and
rolb
orb
fdivs
enter
rorl
sub
dec
std
sub
xor
outsl
in
mov
int3
jae
bound
pop
insl
push
insl
lods
lcall
shlb
or
cmp
aad
and
adcl
sub
push
adc
aad
jnp
mov
dec
jns
jae
imul
and
push
push
mov
mov
push
jecxz
push
outsl
adc
fs
inc
test
inc
test
in
sub
test
hlt
mov
sbb
pop
arpl
lcall
scas
jmp
mov
inc
incb
aas
and
xor
xchg
push
aaa
push
add
shlb
inc
add
popl
mov
pushf
lea
xchg
nop
push
gs
add
and
xchg
jecxz
or
stc
pop
push
leave
xlat
mov
ds
test
cwtl
or
jo
xor
and
fadds
pop
lock
ret
mov
mov
lods
imulb
xor
mov
pop
jge
mov
jb
out
imulb
imul
stos
pusha
movsb
xor
jns
cmp
aam
mov
dec
or
jg
cmpsl
mov
insl
push
adc
jbe
mov
mov
int
push
mov
popf
mov
subl
push
mov
push
in
pop
lahf
push
jno
test
jb
into
pop
or
and
pop
pop
inc
inc
lret
push
mov
pop
mov
mov
rcr
dec
arpl
mov
xlat
and
fwait
pop
mov
jne
xor
fsubrs
mov
lods
pop
iret
call
std
jp
and
out
lea
std
pop
jmp
and
sbb
dec
addl
aad
or
mov
pop
pop
cmp
xor
in
cmc
and
cmpsb
sbb
int3
loop
inc
jb
jecxz
xchg
push
ljmp
xchg
leave
push
pop
or
ret
xor
test
sti
jmp
jg
pop
lret
add
test
push
andl
das
lods
ss
sbb
mov
add
jo
scas
add
jnp
mov
jno
test
pop
add
jb
repnz
xlat
dec
pop
mov
inc
mov
mov
cli
sbb
icebp
push
xor
stc
lret
js
rorb
jg
insl
int3
cmp
cltd
mov
fdivs
fdivrl
mov
add
mov
adc
int3
mov
xchg
xchg
push
cld
add
mov
add
fdivrs
rclb
neg
and
clc
lock
test
call
mov
lock
outsb
jecxz
adc
sub
loope
popf
scas
icebp
std
xchg
jb
push
popf
movsl
pop
aaa
xchg
cs
add
imul
movsb
inc
out
ret
mov
adc
cld
ret
or
data16
xor
stos
aad
fistpll
mov
in
inc
test
fldl
jmp
or
xchg
imul
mov
loope
and
and
aaa
test
mov
call
shrb
mov
ret
xchg
sbb
jg
pushf
inc
popa
inc
ret
cld
push
rorb
xchg
cmp
negb
push
popf
data16
xchg
test
jae
ja
pxor
lahf
pop
adc
cmpsl
dec
dec
nop
addr16
adc
dec
mov
xlat
lahf
cmpsb
or
aas
adc
mov
aaa
sbb
ficompl
xchg
jo
rep
loop
adc
cli
lods
inc
jp
mov
sbb
sub
and
sar
imul
sahf
add
inc
dec
pop
push
rorl
jl
xor
inc
addr16
dec
imul
jnp
in
lahf
loopne
sahf
push
push
bound
mov
or
arpl
add
push
stos
sub
lods
mov
cli
clc
aad
fldcw
js
jge
sbb
xchg
test
cmpb
sub
jbe
add
xor
jne
popf
addr16
inc
inc
inc
mov
inc
inc
cmp
sarl
or
sbb
dec
sarl
lds
lret
std
jno
mov
jno
bound
in
adc
iret
sbb
nop
pop
lahf
lcall
pop
push
inc
push
dec
adc
xchg
inc
daa
jbe
inc
int3
lret
std
mov
pop
pop
sti
test
push
into
jl
mov
stc
dec
sub
fisttpl
int
xor
adc
inc
mov
jl
xor
lcall
xchg
sbb
out
outsl
cmp
and
bound
xchg
arpl
lahf
sub
mov
clc
in
lock
sub
jl
sbb
aas
push
imul
cltd
jle
inc
add
sbbl
xor
pop
fbld
adc
mov
jg
mov
cmp
scas
scas
aas
jb
jb
lock
sub
aas
jg
out
test
push
out
or
dec
into
ja
cmp
into
stc
lea
push
ret
push
pop
cmp
or
jecxz
xchg
pop
mov
mov
bound
sbb
xor
cmpsl
cmp
xlat
push
jbe
mov
jbe
mov
xchg
and
fmuls
imul
pop
test
push
ss
shrb
adc
dec
shrb
jecxz
mov
xchg
enter
aad
mov
sbb
jge
xchg
stos
aam
jmp
lcall
faddl
mov
xchg
out
insb
or
dec
and
es
add
xor
pop
pop
scas
lcall
jmp
sub
cmp
aas
sub
in
int3
fsubs
jae,pt
outsb
jp
jp
enter
push
mov
int3
mov
and
outsb
pop
push
lret
jp
mov
rcl
mov
xchg
test
sub
lahf
insb
mov
stc
pop
shlb
js
lahf
inc
mov
lods
mov
orb
sbb
incl
pop
inc
stos
lahf
pop
leave
lds
or
imul
mov
or
jno
aaa
or
mov
inc
aaa
stos
or
fidivl
and
not
jmp
mov
sahf
ret
cmp
xchg
adc
jmp
cltd
andl
dec
mov
or
mov
or
sub
lods
lret
ficoml
aas
inc
mov
jns
ret
ror
jmp
callw
shufps
nop
add
xchg
mov
dec
mov
lret
and
pop
jecxz
testb
fildl
pop
jbe
push
bound
out
sub
cmpsl
dec
je
jnp
mov
dec
jnp
fs
mov
dec
clc
sub
xlat
stc
outsl
cs
into
mov
int3
ljmp
cmc
sarl
faddp
lods
mov
push
push
cmp
lcall
adc
xor
cmpb
fistl
or
shrl
and
daa
mov
iret
hlt
int
ret
in
push
jo
fs
pop
or
mov
or
adc
lret
push
iret
mov
dec
les
cmp
imul
cwtl
pusha
repnz
mov
pop
inc
add
sbb
cmpsl
shrl
xorb
bound
mov
cmp
lods
aas
or
jecxz
ror
jge
sub
call
and
sbb
rorb
repz
dec
mov
ja
popa
sbb
addb
dec
cmp
aad
and
in
adc
pop
push
insb
mov
ds
mov
jle
cmpb
mov
aam
sub
jmp
fisubrl
mov
mov
in
push
aam
hlt
les
mov
nop
lods
or
popf
lahf
js
ds
jnp
or
mov
add
loop
jbe
add
jae
in
fwait
mov
xor
mov
add
and
cltd
mov
rcl
frstor
lea
push
and
mov
mov
or
inc
scas
inc
xor
int3
xor
sbb
mov
shlb
enter
jo
push
ficoml
lods
stc
xchg
push
test
or
aam
stc
fdivl
repnz
cld
mov
addb
and
stc
ret
and
xor
mov
dec
pop
cmp
sbb
sub
pop
cmp
ret
mov
xchg
lret
sub
jae
test
sti
xchg
mov
inc
data16
call
or
lods
lahf
adc
sub
imull
jno
dec
push
sub
out
xchg
insl
jg
js
push
out
mov
jae
rorl
cs
ja
test
bound
jb
add
cli
out
outsl
out
pop
loop
dec
push
icebp
xor
je
mov
inc
mov
push
push
cmp
lret
cs
movsl
adc
sbb
add
flds
rcrl
xor
adc
xchg
lahf
rcrb
insl
jmp
mov
cmpsb
inc
lods
add
adc
sarb
movsl
je
test
test
cmp
fs
jnp
jne
jg
mov
or
mov
cmp
add
or
inc
paddb
sahf
rcll
dec
push
arpl
or
mov
or
outsb
xchg
sahf
cmp
adc
add
lock
jmp
out
dec
and
mov
stc
add
rcrb
sbbl
add
fnstenv
add
divl
cmp
mov
xchg
cmp
subb
in
push
xor
push
fdivrs
inc
insb
pop
xor
ljmp
sub
inc
xchg
mov
jg
or
arpl
fwait
repnz
adc
lea
or
pusha
inc
jg
adc
add
inc
nop
lock
jb
insb
fcompl
sub
mul
dec
jg
ss
sti
sbb
dec
jmp
test
ret
and
mov
lret
push
push
cmc
pop
mov
sub
dec
ss
mov
cmp
jo
arpl
xchg
mov
fs
fwait
nop
aaa
xchg
sub
or
ja
xlat
icebp
or
mov
aad
adc
dec
push
movsb
jmp
adc
sarb
testl
mov
xchg
imulb
adc
outsb
cs
add
fimuls
push
cmp
ret
fcomi
ja
push
sbb
outsl
popa
ds
ret
test
test
imul
jns
outsl
stos
pop
dec
fsubrs
xchg
fcomps
in
gs
mov
aas
lods
lahf
outsl
sub
push
and
mov
sbb
pop
dec
movsl
inc
push
xchg
pop
mov
popf
std
enter
inc
arpl
push
mov
inc
cs
in
mov
mov
adc
add
inc
lahf
shll
lock
mov
add
jle
mov
loop
mov
xor
adc
ret
xor
outsl
in
in
adc
pop
xchg
lret
call
sbb
cmp
sub
cmc
sahf
int3
cmp
scas
sbb
sub
push
xlat
dec
xor
dec
mov
mov
movsb
inc
push
mov
jle
mov
dec
mov
shr
popf
loopne
cmp
adc
sar
loop
dec
pop
add
add
ret
loopne
xchg
sub
pop
inc
js
add
inc
sub
cmp
jmp
cmp
gs
das
add
xlat
in
insl
cmp
adc
dec
scas
xchg
push
hlt
jb
icebp
mov
mov
cmp
mov
xlat
rolb
push
stos
jge
xchg
insb
icebp
and
pop
dec
pushf
pop
sarb
inc
sbb
mov
jmp
mov
inc
lcall
ficoml
popa
xchg
mov
xchg
xchg
movsb
fwait
pop
sub
pop
lods
or
adc
ljmp
jns
push
xor
add
xor
rcr
push
iret
aad
loope
mov
jbe
jl
out
jg
dec
xor
push
cltd
testl
popa
dec
xchg
stos
xor
call
roll
mov
or
xchg
aaa
push
lea
sahf
cmpsb
imul
mov
xor
mov
sub
and
and
sub
idivl
push
push
fistpl
in
out
or
outsl
nop
bound
or
test
mov
popf
adc
fst
xchg
movsl
gs
and
pushf
movsl
mov
nop
add
mov
out
xor
mov
ret
sbb
lods
mov
cltd
rcll
push
mov
mov
cmp
or
fsubs
jmp
pop
xchg
fwait
add
mov
mov
push
cld
dec
ret
jnp
pushf
inc
mov
movsb
cmp
sahf
sbb
xor
shrl
loopne
sbb
dec
inc
and
adc
mov
or
pop
pop
cmp
enter
adc
xor
clc
dec
cmpsl
sbb
gs
inc
cmpsl
pop
nop
testl
scas
add
hlt
lea
or
clc
or
push
jecxz
int3
lods
push
dec
je
lods
mov
jae
imul
lods
xchg
int
sbb
in
int
pop
cmp
jo
xor
out
adc
ds
and
inc
sbb
xchg
mov
push
test
popf
push
jmp
cmp
arpl
subl
mov
dec
icebp
xor
push
mov
nop
in
lods
and
inc
xchg
outsb
cmpsl
outsl
or
imul
xor
out
mov
aad
jne
add
dec
imul
pop
cld
mov
in
mov
mov
xchg
xchg
icebp
loop
mov
test
cmp
ds
inc
sbb
inc
cmp
rcrb
int
out
dec
subb
sbb
jecxz
dec
pushl
cmp
mov
bound
mov
mov
mov
ficompl
mov
rcrl
xchg
sbb
movsb
add
dec
push
je
fsubr
sbb
pop
testb
lock
jnp
pop
pop
pop
or
std
imul
mov
andl
mov
bound
leave
pusha
mov
insl
dec
daa
jno
filds
cmpsb
das
addl
mov
sub
jb
sbb
insl
adc
xchg
scas
lds
out
push
dec
xchg
mov
call
loop
imul
sub
les
dec
in
push
cmc
movb
sti
and
or
inc
lret
mov
cmc
sbb
cmc
gs
cmp
arpl
jno
push
xchg
mov
push
mov
xlat
loope
xor
adcl
mov
jbe
inc
aad
xor
adcl
jp
movsbl
insl
fsubr
lahf
dec
mov
aam
cltd
cmc
fidivrs
pop
fisttps
jmp
add
push
pop
mov
ljmp
xchg
cmovle
rolb
mov
fisttps
cltd
mov
pop
xchg
inc
cmc
lods
aaa
in
cmp
repz
or
push
outsb
or
xchg
adc
push
pop
mov
icebp
popa
bound
fidivrs
lret
adc
sbb
lods
and
mov
adc
pop
leave
mov
cmpsl
mov
out
or
repnz
push
fldl
popf
test
data16
and
and
cmc
loop
add
call
jae
arpl
cmpsb
aad
dec
in
cs
add
mov
mov
stos
mov
and
push
jmp
out
inc
add
jecxz
icebp
pop
fs
ret
call
mov
jle
xchg
lcall
pop
sti
fdivr
lea
jg
pop
sbbl
jb
aam
jb
mov
pop
shll
ss
popa
mov
mov
or
mov
xor
out
cmpsb
enter
imul
mov
fadds
jbe
jle
call
cld
add
enter
sbb
repnz
rcl
call
scas
cmpl
push
into
mov
sub
into
shll
sbb
adc
dec
xchg
adc
scas
rcrl
or
push
sub
dec
pop
lcall
out
push
rorb
add
ret
xchg
mov
sbb
jg
pop
jle
pushl
jnp
das
popa
jl
sbb
push
jb
push
icebp
jbe
repnz
icebp
mov
mov
sub
mov
mov
imul
out
cmp
mov
jmp
int
mov
cltd
push
mov
xchg
sti
inc
rcll
sbb
fimull
fisubl
mov
sub
sbb
repz
pop
mov
xchg
jbe
mov
mov
mov
push
sub
stos
sbb
popf
clc
pusha
mov
lahf
push
fsubrs
gs
adc
les
ss
and
cmp
stos
scas
jmp
mov
into
jo
inc
int3
pop
sub
popf
sti
sub
jne
push
notb
fcom
push
mov
hlt
ljmp
dec
loope
jae
or
aam
and
aad
lahf
rcrb
push
sbb
xchg
jno
mov
sub
cwtl
sbb
jnp
out
sti
lods
sub
stos
pop
fisubs
adc
mov
and
aaa
adc
pusha
xchg
and
cmp
xor
dec
mov
push
push
mov
fcoms
xchg
shlb
mov
ret
das
adc
mov
sbb
cmovno
cmc
xchg
mov
cld
jge
test
jb
jg
jmp
clc
add
and
and
adc
out
mov
pop
add
icebp
ret
mov
sub
or
loopne,pt
push
fldl
mov
xor
jo
sbb
sub
jmp
lock
mov
stos
adc
jg
mov
add
or
xchg
push
inc
cmpsb
stos
pusha
cltd
inc
and
or
gs
cmpsl
popa
and
divl
xor
pop
arpl
std
stc
das
pushf
mov
push
mov
ret
xor
push
mov
notb
mov
or
adc
push
or
adc
mov
push
add
xlat
mov
xor
mov
andl
pop
mov
ret
scas
fdivl
lock
jecxz
or
xchg
sub
nop
cmp
mov
jo
out
xchg
faddp
into
mov
cmpsb
scas
xchg
sahf
xchg
push
pop
inc
dec
ss
push
push
push
idiv
out
faddp
into
mov
cmpsb
scas
xchg
sahf
xchg
push
pop
inc
dec
ss
push
push
push
idiv
out
faddp
into
mov
cmpsb
scas
xchg
sahf
xchg
push
pop
inc
dec
ss
sbb
or
cli
out
xlat
fcmovb
into
mov
cmpsb
scas
xchg
sahf
xchg
jle
cld
pop
inc
cmp
scas
push
jmp
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
out
add
lcall
bound
testb
sbb
outsl
lods
jp
dec
pushf
pop
pushf
mov
dec
lcall
or
jns
in
cmp
and
sbb
push
push
mov
jo
cmp
pop
pop
cli
sub
cmp
or
sbb
in
push
fildll
mov
ljmp
jmp
lcall
xchg
mov
sbb
outsl
cmp
add
and
imul
in
insb
mov
adc
mov
test
scas
cld
movl
out
mov
xlat
int
jl
mov
bound
repnz
in
vpmaddwd
in
xchg
push
testl
negl
or
sub
fdivr
aas
adc
sbb
in
out
js
pop
stc
movsl
pushf
das
lods
inc
xorl
push
adc
pop
xchg
sbb
adc
cmc
xor
fcompl
in
jl
xor
aas
push
arpl
mov
xchg
xchg
shr
ret
mov
jp
jl
mov
pop
ljmp
sbb
in
test
ror
add
or
fcmovu
insb
int3
add
test
dec
fldcw
push
pop
lahf
jnp
add
adc
ds
sbb
adc
add
aas
subl
cmpsb
pop
test
mov
jbe
sbb
pop
sub
jmp
mov
cli
sub
and
push
cli
cmp
or
sbb
in
cmp
or
sbb
push
jp
dec
mov
stos
insb
mov
pop
ljmp
sbb
in
cmp
or
sbb
push
jp
dec
mov
stos
insb
jle
and
lds
out
incl
addl
add
xor
jge
push
ljmp
std
repz
repnz
mov
inc
xchg
addl
stos
sbb
xchg
ja
ror
lods
pop
push
jge
push
cld
or
xor
sarb
in
mov
push
add
push
dec
add
xor
jns
dec
and
lods
insl
dec
push
js
adc
pusha
cmp
lcall
mov
ret
sbb
add
sbb
pop
lahf
jmp
lcall
lock
out
sub
stos
xchg
jno
lods
add
lock
test
xchg
dec
lcall
push
xor
icebp
lods
xchg
sub
mov
ja
xor
push
shlb
sbb
ret
pushf
int
lods
das
sti
pop
addr16
jecxz
fldcw
nop
loope
mov
mov
mov
jle
jno
adc
sti
cmp
jbe
jle
xor
ja
xor
into
push
ret
mov
pop
call
sbb
ja
adc
push
mov
iret
cltd
bound
xabort
jle
push
inc
vpsllw
xchg
and
and
and
ja
jmp
mov
cmpl
aaa
sub
jmp
pushl
mov
lds
and
mov
call
jnp
sub
out
imul
aad
addb
icebp
cli
xlat
dec
in
mov
mov
les
sbb
clc
rcrl
cmp
cmp
jno
scas
lret
rcr
dec
stc
xchg
or
inc
xchg
or
xchg
mov
imul
in
out
or
cmp
adc
pushf
sub
push
mov
cmp
or
fwait
std
lret
or
leave
loopne
aam
push
dec
cli
stc
mov
arpl
adc
cmp
push
mov
mov
stos
jno
mov
out
xor
out
xlat
test
pop
ss
inc
xor
xor
add
out
push
pop
stc
pop
dec
xchg
pop
nop
xchg
outsl
add
dec
call
jg
push
pop
pop
xchg
arpl
ja
leave
mov
loope
sub
add
sub
adc
std
xchg
imul
sbb
lods
and
fidivrl
xor
scas
xchg
popl
sub
test
inc
subb
lret
popf
imul
pushf
inc
jl
cmp
mov
movsl
push
and
test
and
movsl
roll
stos
jl
or
leave
jmp
sub
mov
js
jl
xlat
or
push
sbb
data16
pop
stos
jb
jg
xor
dec
mov
push
sbb
dec
cmp
sahf
insb
mov
pop
mov
je
jo
mov
cmpsb
or
nop
mov
mulb
xor
cmpsb
jb
pop
push
jp
and
stos
sub
sbb
rcrl
scas
add
stos
sahf
aam
repnz
pop
dec
hlt
jle
adc
mov
add
sub
cmp
adc
jns
and
arpl
add
mov
enter
ret
cmpsl
aad
loop
push
sahf
add
adc
mov
xchg
mov
push
sbb
es
dec
push
lea
push
lds
stos
inc
sbb
pop
pop
call
cwtl
iret
shl
sti
mov
sub
lret
lahf
jg
iret
repz
popa
sbb
andl
xor
and
inc
in
xor
aam
inc
xor
test
xor
gs
cmp
lret
jp
mov
adcb
add
push
sbb
clc
mov
sbb
fst
push
jecxz
dec
sub
and
pop
test
imul
xchg
add
and
inc
dec
adc
lret
xor
sbb
inc
in
jne
mov
jo
lahf
xchg
push
dec
das
jae
inc
or
sbb
or
scas
cmp
shrl
in
mov
mov
cmc
leave
aas
leave
movsb
testl
xchg
stos
je
mov
test
xchg
pop
sarb
push
iret
in
pushl
sbb
add
dec
sub
ret
out
and
in
xchg
dec
adc
cwtl
imul
je
mov
aad
scas
inc
mov
xor
and
dec
scas
insl
inc
stos
sub
push
outsb
sbb
mov
dec
mov
ficomps
loop
and
push
insl
packsswb
adc
jecxz
inc
mov
xor
les
pushf
outsl
aas
out
std
iret
int
inc
xchg
shll
stc
out
and
push
add
sbb
xchg
mov
xchg
shll
js
daa
mov
nop
add
cmpsl
vrcpss
xchg
test
je
incl
sub
or
test
dec
add
loope
mov
mov
int
test
test
outsl
addr16
ret
lcall
std
insl
fcoms
ja
sbb
repz
cli
stc
mov
xor
repz
repnz
mov
mov
sbbl
lods
enter
into
mov
out
jb
mov
iret
out
inc
shlb
jno
in
shll
aaa
int3
push
push
mov
inc
mov
enter
outsl
rcrb
aas
frstor
imul
ret
lret
mov
ja
movsl
and
pop
sub
btc
test
shll
adc
mov
stos
sub
adc
movsb
lods
lock
jb
fisttps
aad
adc
ret
jae
int
scas
mov
je
mov
jne
sarl
or
mov
add
pause
in
mov
add
movsl
rep
dec
cmc
xor
mov
mov
lret
mov
insl
xor
mov
pop
sub
xchg
dec
in
clc
jecxz
mov
imul
sbb
add
mov
push
mov
lods
hlt
sahf
cli
and
rcl
cld
ja
outsl
inc
jb
cmp
cs
push
and
sbb
stos
jnp
lret
arpl
pusha
jo
fldl
jno
and
push
rol
dec
mov
aam
adc
cmpsb
xlat
mov
push
xchg
inc
pop
imul
std
mov
or
lahf
inc
xchg
out
jg
arpl
lahf
pop
mov
or
push
aad
hlt
lock
aaa
dec
inc
stos
mov
xor
stos
mov
lret
outsl
sub
fsubrl
or
test
pop
jl
int
pusha
push
es
jne
or
lods
mov
mov
das
test
jl
push
xchg
adc
xor
xchg
push
int
dec
js
insb
mov
push
cli
mov
in
push
stc
scas
xor
push
lds
push
outsl
jge
ljmp
sub
les
and
mov
mov
popf
std
je
xchg
icebp
inc
and
and
test
lds
call
orb
sub
pusha
lret
mov
mov
xchg
mov
fmuls
or
xor
stos
fmull
fnstenv
mov
sti
jb
enter
inc
aas
pop
mov
push
bound
insl
ljmp
js
out
adc
cli
adc
cmpsl
sarb
jns
xchg
jns
xchg
into
lods
aaa
out
pop
xchg
nop
cmp
in
mov
xchg
insb
mov
loope
mov
push
mov
ret
mov
scas
in
xchg
sub
test
rorl
aam
cmc
push
sub
jecxz
pop
int3
add
ror
in
xor
sbb
adc
inc
inc
mull
and
pop
neg
rcrl
in
fmul
xchg
dec
push
push
imul
mov
lret
mov
pusha
mov
cmp
loope
xchg
jns
mov
cmpsb
push
jg
push
cmp
lret
aas
xor
add
adc
pop
sub
mov
int3
mov
arpl
fsubs
adc
ja
dec
aam
fsubl
test
cmp
fxtract
and
fcmovb
mov
jg
sbb
ljmp
mov
fs
adcl
daa
cwtl
jg
and
popa
repz
enter
orb
adc
stos
stc
dec
loop
mov
loopne
into
or
out
or
mov
mov
popf
xor
add
sub
xchg
push
push
jnp
xchg
mov
sbb
sti
cmp
insl
ret
xor
leave
push
ss
or
xchg
rcrl
dec
fdivp
stos
pushf
dec
addr16
mov
mov
pop
popf
rcl
scas
and
ret
cmp
out
sarl
jb
and
xchg
mov
lods
insb
xchg
jmp
cmovg
push
fisubrs
jecxz
int3
xor
leave
stc
lods
sbb
iret
mov
sti
ljmp
iret
or
sbb
insb
mov
fldl
jne
cmp
iret
sbb
xor
xor
jb
jle
or
cld
ljmp
cmp
fistps
push
jp
pop
imul
negl
mov
popf
in
int
dec
clc
xlat
mull
imul
popa
cwtl
adc
mov
stos
les
out
mov
fidivrs
fisttpl
and
outsl
dec
mov
fmul
mov
jge
mov
dec
xchg
pop
in
fwait
and
clc
popf
fldcw
shlb
mov
stc
xor
sub
xor
lods
mov
push
aaa
or
movsb
jne
sub
cli
stos
insb
hlt
sub
je
stos
push
and
popf
mov
nop
cwtl
cmc
ret
jne
mov
hlt
popf
fs
lahf
fucom
jno
adc
std
adc
popf
jb
shrl
cs
loop
xchg
sub
dec
cmp
in
add
je
jb
not
mov
movsl
jns
and
push
aas
mov
mov
adc
jns
popa
jae
fcomp
call
mov
xor
add
and
js
jne
js
in
xchg
lods
sbb
xchg
fwait
cwtl
xor
aam
dec
iret
pop
shlb
xor
movb
push
test
fmuls
xchg
dec
adc
pop
mov
leave
inc
push
sbb
mov
aas
cmp
push
cld
mov
test
scas
inc
adc
jne
gs
push
and
and
test
xor
mov
neg
stos
popa
adc
sbb
pop
mov
int3
fcoml
movsb
xlat
jne
stos
popa
test
std
sbb
lods
sbb
and
in
mov
lret
and
aaa
adc
orl
test
pop
and
mull
pop
jbe
ljmp
sbb
dec
rorb
and
cs
pop
and
in
adc
out
repz
scas
sub
fs
xor
rolb
cmp
mov
ret
clc
movsb
sbb
xlat
jecxz
dec
dec
sub
mov
mov
push
mov
xchg
addl
jns
push
pop
ljmp
xchg
dec
fidivl
shl
push
mov
movsl
and
fcmovu
movsl
aaa
out
xlat
das
fimull
sub
repnz
sbb
addr16
in
hlt
loopne
shll
sahf
inc
call
add
in
jb
push
cmp
jg
popf
movsl
or
dec
loopne
push
pushf
mov
mov
sbb
pop
in
xchg
mov
pusha
xchg
test
pusha
imul
push
lret
jo
pop
and
add
neg
sbb
dec
dec
xor
rcll
pusha
addb
lahf
dec
xchg
push
stos
out
and
les
mov
test
daa
jb
lock
sub
xchg
push
or
mov
xchg
sbbb
scas
mov
lea
out
jae
pop
xchg
cmovp
xor
stos
mov
jb
jl
adc
ljmp
mov
cmp
pop
icebp
movsl
cmc
addr16
and
pushw
xlat
push
fnsave
pop
jge
fisttpl
stos
mov
imull
lods
inc
fsubrl
fidivrl
xchg
inc
sbb
int3
or
push
lea
fsub
subl
jle
xchg
jg
jle
leave
sbb
addr16
outsb
test
in
mov
pop
inc
test
and
add
add
clc
sub
arpl
outsb
xchg
xor
push
mov
add
sti
mov
outsl
mov
sub
mov
mov
push
test
rcr
push
xor
inc
dec
jecxz
iret
inc
add
and
scas
int3
ljmp
and
stos
xchg
mov
rcrb
pusha
dec
cwtl
insl
and
adc
js
insb
xlat
fdiv
dec
jecxz
loopne
pusha
pop
dec
cli
mov
int3
sbb
and
stc
mov
scas
jmp
push
daa
mov
sub
inc
inc
dec
addr16
lcall
fidivs
mov
and
inc
inc
js
or
clc
lret
es
lret
into
mov
push
in
push
cmc
adc
and
and
shr
jge
pushf
add
jo
cmp
or
out
mov
or
rcll
fwait
mov
jns
push
fidivl
xor
fistl
pop
xor
movsb
leave
mov
repz
faddl
xchg
mul
adc
ss
and
jp
cli
ja
xor
nop
push
push
repz
xchg
inc
cmp
int
lcall
mov
sahf
sbb
pusha
push
mov
xor
xor
mov
xor
dec
mov
jae
jl
iret
repz
mov
lcall
xor
orb
loop
lret
jns
mov
mov
leave
nop
in
outsl
pop
fs
jp
outsl
lock
mov
mov
js
lret
mov
aam
andb
test
sbb
cmp
hlt
loopne
and
fs
mov
les
xchg
aas
mov
arpl
jne
or
mov
push
out
jg
and
pop
mov
sti
adc
or
dec
fiadds
pop
push
fs
pop
sub
or
repnz
ret
divb
sub
popf
sbb
sub
push
xchg
ds
cli
cmc
xchg
loopne
mov
lcall
jl
inc
bnd
or
push
or
push
mov
or
add
inc
push
mov
adc
mov
adc
popf
and
dec
mov
pop
and
cltd
inc
adc
sbb
cwtl
xchg
in
mov
outsb
dec
add
pop
test
xor
inc
rcrl
or
mov
jmp
and
cmp
test
mov
pop
and
jo
call
add
sbb
jb
es
jne
cltd
out
dec
push
in
outsl
mov
dec
pop
and
sbb
mov
mov
out
mov
jbe
movsl
adc
rclb
mov
xor
jmp
stos
push
sub
jmp
movsb
xchg
fst
pop
mov
push
mov
insb
mov
iret
in
cmp
scas
cmpsl
push
repnz
ret
inc
add
dec
pusha
or
and
jb
fnstcw
sbb
daa
ss
mov
push
or
loope
mov
ja
lods
test
mov
fdivrl
jmp
and
repnz
movsb
xor
mov
mov
in
in
cmp
xor
sbb
jmp
mov
fsubs
fdivr
or
mov
mov
fwait
or
sbb
xlat
ret
je
mov
adc
adc
cld
push
xlat
jp
jo
fildll
inc
cmp
mov
repnz
aad
sbb
xchg
add
adc
imull
cmp
jnp
enter
jl
mov
xor
mov
add
in
mov
popf
mov
inc
mov
addl
mov
repz
or
push
xchg
lods
cmp
cmp
adc
repz
fisttpll
mov
cmovo
push
mov
cwtl
out
addb
test
sarb
jmp
insb
daa
insb
mov
jno
dec
xlat
data16
jb
add
push
xchg
out
lret
mov
in
shl
jmp
rolb
fisubl
add
int3
push
pop
outsb
stos
mov
cld
cmp
inc
dec
cs
orb
mov
jp
jno
mov
dec
pop
test
sbb
jnp
add
js
les
in
mov
mov
and
mov
jne
sbbl
shlb
adc
shll
cmpb
mov
pop
sbb
negb
mov
lods
mov
adc
jne
sbbl
sahf
xchg
xchg
mov
sbb
pop
pop
mov
lock
hlt
inc
sbb
outsb
test
hlt
mov
and
inc
arpl
out
scas
mov
arpl
cmp
mov
lret
pop
sarl
sub
push
sarb
xchg
cmp
repnz
mov
xlat
lods
insb
imul
xlat
into
andl
in
xchg
mov
mov
pop
xchg
xchg
jae
js
lret
ss
fsubrs
or
fs
leave
test
repnz
and
repnz
out
lahf
mov
aam
aad
nop
sbbl
cmpsb
mov
shlb
cmp
jmp
xchg
gs
xor
pop
or
add
add
fsts
loope
mov
adc
pop
aad
mov
in
lock
arpl
mov
pop
popf
pop
decl
mov
movsb
clc
pop
mov
xchg
pop
in
insb
mov
xchg
sbb
imul
addb
fmull
nop
jl
xchg
xchg
cmp
adc
shll
int
sti
out
out
fabs
les
in
cld
push
addr16
ret
xchg
ja
dec
ffree
cmp
xorb
icebp
cmp
mov
cmpsl
or
lret
mov
mov
int
xchg
xor
in
inc
pop
jmp
in
mov
cmc
dec
inc
pusha
mov
stos
or
repnz
hlt
push
lods
or
adc
mov
lods
cltd
int3
lcall
js
rcll
cs
xor
xor
test
shll
or
push
jle
aam
mov
mov
jae
push
inc
pop
call
pop
aam
lods
xchg
es
popf
mov
shrl
xchg
jbe
imul
test
adc
std
loop
cmpsb
push
mov
rolb
sbb
call
scas
adc
daa
xchg
cmpsb
hlt
sbb
in
mov
cmp
or
mov
rcll
cmc
lock
mov
mov
iret
pop
or
or
fsubr
pop
mov
js
cmp
ss
jge
mov
add
xchg
push
cmpsb
mov
fs
xor
aas
nop
outsl
pop
inc
inc
pop
fistpl
jecxz
pop
mov
outsb
and
sub
jl
sub
jmp
aad
xor
jne
int
or
fs
lods
dec
cmpsl
pop
push
or
jl
lret
sub
inc
xchg
xchg
into
add
push
imul
movsb
fsubl
add
call
shl
sarl
push
pop
jg
jnp
dec
add
mov
mov
lahf
arpl
mov
aas
dec
push
push
cld
cmp
xlat
cmpsb
adc
cmp
ret
arpl
sbb
pop
cmp
movl
shlb
add
or
in
insb
and
pop
ljmp
sarb
test
aaa
call
repnz
rcr
push
aad
jge
jbe
out
cmc
fidivs
add
leave
mov
mov
mov
xchg
loop
loop
ret
sbb
jne
jl
into
mov
and
pop
or
and
cmpsl
jo
fidivs
mov
xor
daa
adc
outsb
loopne
insb
repz
pop
dec
and
lds
dec
push
rorb
movsl
ret
push
cwtl
sbb
aad
jns
addr16
jo
mov
in
jne
popf
jmp
outsb
aad
sub
scas
adc
nop
rcrl
daa
mov
add
xorb
adc
or
lcall
popf
daa
mov
fsubr
jo
mov
mov
jle
in
imul
insl
push
dec
arpl
data16
or
jg
mov
jae
orl
cmp
dec
sbbl
jge
mov
pop
xchg
cwtl
push
add
cmp
inc
cmp
or
dec
mov
mov
cli
in
push
mov
adc
pop
mov
lock
cmp
icebp
xchg
daa
je
mov
pop
jno
jns
xor
sub
ret
mov
add
icebp
lock
inc
test
mov
fisubrs
sub
jl
das
and
pop
dec
lcall
aam
or
xchg
push
or
jns
dec
pop
mov
mov
ss
repnz
out
nop
ds
dec
jl
dec
xchg
cli
cmp
or
sbb
in
cmp
or
sbb
push
jp
dec
mov
stos
insb
mov
pop
ljmp
sbb
in
cmp
or
sbb
push
jp
dec
mov
stos
insb
mov
pop
jmp
cmp
or
sbb
in
cmp
add
push
fsubrl
arpl
insb
xchg
jl
dec
mov
ljmp
fsubrl
in
lds
int3
sbb
mov
movsl
arpl
xor
and
sbb
daa
sub
movsl
fidivl
in
cmc
in
adc
add
xor
and
push
jne
inc
je
sbb
xchg
mov
test
in
adc
add
xor
and
push
jne
inc
je
movsl
xchg
xchg
cmpsl
jmp
sbbb
jp
push
dec
add
je
inc
dec
ljmp
icebp
or
push
fsubl
jg
mov
pop
push
jne
mov
loopne
jnp
mov
hlt
or
jne
cmp
and
pop
add
into
xchg
xor
in
push
hlt
mov
mov
mov
push
xor
jae
mull
rcrb
lcall
incl
mov
inc
loopne
fisubl
push
in
ljmp
push
adc
jecxz
add
mov
xchg
hlt
aam
fcoms
sahf
cmpsl
push
xchg
test
jp
mov
xchg
xor
icebp
jmp
xor
and
push
jne
inc
je
movsl
xchg
mov
test
lea
inc
insb
xor
and
xor
sub
movsl
in
rolb
in
cmc
mov
inc
jno
popa
pusha
push
jns
cmp
or
std
xchg
xchg
shl
fwait
lds
push
xor
inc
sub
inc
inc
je
movsl
xchg
mov
test
in
adc
add
xor
and
push
jne
inc
je
movsl
xchg
mov
test
in
adc
insb
cwtl
fnstcw
out
and
fxtract
lea
sbb
lahf
stos
xlat
push
jno
shlb
inc
inc
out
xchg
xchg
lods
dec
pop
adc
movsl
dec
cmp
cwtl
dec
pop
lcall
out
inc
sub
addb
xlat
xchg
adc
mov
sub
sub
pop
sub
xor
xchg
imul
sahf
add
scas
cmp
popl
outsb
sub
dec
pop
cltd
data16
aad
inc
into
mov
adc
pop
pusha
fcoml
iret
or
add
fidivrl
lock
std
pop
fistps
fnstcw
jns
cltd
sbb
and
clc
push
movsb
lret
clc
pop
idiv
xchg
aam
inc
ja
enter
dec
xchg
repnz
testl
or
inc
jecxz
cmp
jmp
lds
mov
pop
pop
pop
cmp
sbb
loopne
aad
push
cmp
jb
add
into
xorb
stos
mov
outsl
gs
sub
test
and
mov
push
out
cltd
bound
pop
int3
push
sbb
outsb
repz
arpl
js
push
cmp
dec
jecxz
ss
fs
into
dec
gs
inc
xor
les
xor
rcll
mov
js
add
pop
stc
and
outsl
and
cmp
addr16
dec
push
fbld
movb
mov
lock
jb
jmp
mov
pop
xor
sub
out
sbb
aas
push
movntps
dec
and
jle
push
scas
mov
cli
stc
dec
push
movsb
push
insl
adc
push
add
add
mov
dec
inc
mov
subl
mov
daa
repnz
mov
ficoml
xor
fisubrl
into
ret
repnz
mov
and
ljmp
stc
cmp
fsubrs
sbb
cmpsb
cli
xlat
mov
cmp
jbe
popa
les
gs
hlt
fisttpll
sti
cmpsb
jmp
push
cltd
stos
add
fbld
dec
ja
sub
mov
ljmp
mov
xchg
sbb
loope
out
and
mov
xchg
je
inc
mov
mov
lods
andl
and
popf
xchg
fmull
ret
or
out
mov
adc
push
pop
test
mov
jp
sub
or
push
clc
push
dec
outsl
xchg
and
ja
in
add
add
jge
insb
cld
mov
cmp
sbb
cmpsb
fnstcw
das
mov
jbe
sub
pop
out
sub
and
test
sub
sbb
mov
add
push
xlat
orb
dec
bound
lock
ss
jns
hlt
xchg
pop
cld
mov
shll
fildll
jbe
jae
inc
xchg
mov
shll
xor
scas
ret
inc
dec
pop
pop
mov
cmp
xchg
lret
push
movb
lahf
lahf
out
addr16
sbb
decl
cmp
hlt
mov
js
lea
je
push
loope
jmp
pop
cmp
xlat
mov
jb
or
js
or
and
sub
pusha
aaa
push
je
jns
fwait
pop
inc
fiadds
data16
or
ljmp
pop
dec
sahf
add
mov
subb
xor
cs
mov
dec
xor
inc
pop
jnp
leave
movsl
and
mov
imul
xlat
or
into
push
add
and
call
jae
cmpsb
sub
sbb
daa
nop
cmp
decb
mov
add
addr16
xor
xchg
and
imul
iret
movsl
push
pop
or
dec
outsl
push
nop
hlt
mov
jg
and
sbb
fmul
cmc
int
add
mov
lds
or
xchg
cmp
mov
cmp
imul
dec
and
jb
push
xchg
pop
fwait
jae
mov
fcomip
add
fwait
sahf
pop
imul
and
mov
add
jle
push
mov
sahf
jge
pop
lret
loop
dec
cmp
inc
fdivrs
std
cmpl
stos
pop
or
add
and
or
aaa
es
js
outsl
es
pop
mov
xchg
lods
adc
cmpsb
adc
sub
adc
cld
test
test
cltd
inc
push
jmp
sahf
or
in
ljmp
std
dec
adc
sti
xor
notb
adc
test
in
sbb
out
sbb
aad
xor
out
or
fcoms
mov
xor
sbbl
sti
in
or
mov
lahf
inc
outsl
push
mov
or
pop
push
mov
scas
rclb
ficomps
lret
and
pop
add
adc
imul
inc
xchg
sbbb
out
sbb
cmpb
inc
bound
fbstp
jmp
sbb
mov
cmc
push
or
ret
dec
pop
fsin
cmpsb
inc
aam
aad
jmp
adcb
cwtl
iret
daa
and
cmpsb
clc
and
sbbl
and
imul
dec
movsl
xor
or
arpl
mov
xchg
arpl
ss
mov
push
jae
ror
rclb
xor
ret
pop
sub
or
fs
shlb
std
popf
in
popf
dec
push
mov
adc
dec
dec
push
sti
decb
mov
sub
mov
sbb
les
insl
jae
aam
jo
dec
ret
or
call
mov
xchg
pop
sub
rcrl
lock
jge
popf
andb
push
in
das
inc
sbb
xlat
out
xchg
mov
or
in
movl
pop
lods
or
ficompl
dec
jg
jbe
sti
sar
repz
out
lahf
daa
inc
icebp
add
mov
mov
gs
or
xchg
call
in
push
mov
and
addl
imul
push
xchg
inc
xor
push
cltd
inc
jno
shll
ret
cmp
add
daa
stos
jne
jge
movsl
pop
test
add
xchg
rcr
and
pusha
xchg
xchg
ret
cmp
aam
jle
ret
sub
das
add
mov
add
loop
dec
xor
addr16
cmp
cwtl
dec
xchg
inc
push
aaa
lods
jae
sarb
push
xor
aad
xchg
sub
int
push
scas
cmp
into
in
aam
sbb
sbb
jo
sbbb
pop
push
ss
sub
mov
rol
sbb
cmp
popf
aaa
xchg
fwait
mov
sub
push
adc
mov
xchg
lds
sbb
cwtl
xor
lock
or
mov
stc
leave
xor
jae
pop
bound
enter
in
xchg
xchg
ja
push
sahf
sub
fcompl
inc
and
and
push
jmp
mov
outsl
stos
adc
subb
and
in
push
cmp
sub
jb
xchg
ljmp
das
or
in
cmp
mov
fs
lods
lods
mov
lret
pushf
pop
scas
mov
push
mov
cmp
aaa
jl
popa
xchg
cmpsb
lock
out
stos
adc
les
cltd
out
pop
inc
leave
adc
and
sub
inc
imul
or
movsl
ss
aas
jne
in
shrl
jnp
sbbl
mov
sub
mov
int
std
pop
sti
fwait
insb
fs
cld
mov
jo
mov
mov
sbb
les
push
add
push
mov
sbb
sarl
pusha
orb
mov
scas
xchg
addr16
fcmovbe
jecxz
pop
pop
insl
add
mov
sbbb
lds
in
add
xchg
rcr
stos
lret
jl
pop
aad
cmp
fstp
jg
cmpl
xchg
adc
sub
sbb
mov
ror
push
sarl
adc
cwtl
sub
sub
lret
cmpsl
lods
out
sbb
inc
stos
jns
mov
dec
mov
test
iret
mov
std
rorl
sbb
daa
leave
mov
sbb
imul
adcl
daa
in
movsb
sbb
ret
add
sub
jmp
inc
dec
call
push
xchg
repz
mov
mov
and
dec
lods
lcall
lret
lods
rcr
loope
adc
negl
jl
cmp
shll
jb
adc
or
push
xlat
icebp
arpl
es
and
scas
cmp
push
sbb
push
jno
nop
adc
push
shll
enter
xchg
nop
lods
sub
dec
insl
mov
daa
mov
js
mov
xor
or
push
dec
fildll
ds
xor
rcrb
lods
cmpsl
js
mov
stc
add
mov
mov
fidivrl
add
inc
pop
mov
lods
inc
sbb
cmpsb
mov
rorb
mov
cwtl
pusha
test
sub
icebp
imul
mov
sbb
out
icebp
pop
lods
outsl
leave
cmpsl
out
or
loope
sbb
add
xchg
cmp
cmp
cmp
and
imul
out
mov
roll
dec
mov
mov
jnp
lds
std
fstpl
pop
insb
in
adc
and
movsb
call
sbb
or
lcall
jmp
aaa
lock
scas
mov
dec
jo
sbb
xor
mov
aas
push
fstpt
adc
das
xchg
mov
mov
int
push
inc
add
mov
insl
call
or
test
orb
inc
fsubrl
jno
subb
bswap
adc
inc
pop
movsl
lock
sub
shl
mov
mov
add
inc
xchg
sub
dec
scas
and
je
or
sti
adc
in
add
dec
lods
jno
sbb
mov
sub
mov
fildl
daa
xchg
insl
mov
push
shrb
stc
fistpll
pop
xor
dec
pop
xchg
ja
mov
mov
psubd
aaa
add
cmp
int3
hlt
pop
cwtl
fwait
adc
mov
repz
jne
iret
sub
rep
test
jecxz
es
popa
mov
jb
shlb
jle
cmc
testb
cmp
push
bound
jno
in
push
sbb
sbb
loopne
xchg
push
jg
loop
dec
test
movsb
shr
sbb
fs
sbb
sub
jbe
pop
dec
in
push
mov
cmp
push
test
out
sbb
or
fistl
push
jns
mov
xchg
lock
jg
jecxz
mov
es
cmp
mov
push
int
jbe
mov
stos
fwait
in
or
sub
mov
int3
test
push
aas
pop
and
out
mov
push
jg
cmp
mov
xor
mov
adcl
std
js
xor
sub
push
fdivrs
jne
stos
xlat
or
add
rcr
mov
pop
cli
or
add
push
dec
pop
rorb
mov
sbb
pop
into
addr16
in
fmul
add
mov
aaa
lcall
fdivrs
scas
shlb
fdivrl
shll
pop
les
dec
sub
out
lds
out
xchg
push
movsb
test
dec
mov
das
pop
iret
dec
add
pop
xchg
push
xchg
xor
pop
cltd
inc
jbe
mov
mov
or
pop
add
mov
roll
addr16
out
nop
frstor
pushf
inc
cmpsl
add
mov
mov
stc
mov
adc
jp
cmp
roll
imul
pop
fmuls
js
sub
xchg
xor
cli
int3
stos
cs
repz
repnz
xor
sub
pop
incb
mov
ss
adc
fistpl
push
push
or
lcall
gs
adc
adc
sbbl
and
and
add
aad
fidivrs
fsubrs
jnp
jnp
cmp
popf
dec
loope
fstpt
or
out
fldenv
mov
rclb
mov
sub
out
jle
dec
shrl
stos
ss
lock
adc
adc
rcl
jle
pop
idivl
daa
lds
mov
leave
mov
sbbl
inc
jle,pn
test
je
mov
out
mov
lret
movsb
sahf
sub
xchg
add
inc
inc
lea
fwait
insl
pushf
xor
adc
jmp
fwait
int3
es
sub
addr16
push
pop
mov
push
dec
xchg
or
mov
sub
mov
test
add
inc
sarb
sbb
ret
mov
test
jno
and
lahf
mov
popf
andb
adc
adcl
push
push
ds
ja
adc
aas
xchg
mov
xchg
int
xor
stos
mov
add
stc
adc
test
in
cmp
and
ret
xchg
cmp
and
push
jo
or
mov
mov
sub
addr16
jns
xchg
ljmp
ret
inc
aas
stc
insl
add
adc
cmp
out
jbe
ja
lahf
roll
mov
or
ret
cltd
cmc
dec
pop
shll
js
incb
push
movsl
mov
sbb
pop
fwait
xchg
out
adc
xlat
fldenv
aad
dec
outsb
sbb
sbb
cmpsl
inc
jnp
sub
sahf
outsl
lcall
or
dec
sub
repnz
mov
fs
mov
pushf
adc
adc
mov
iret
lea
mov
jb
inc
and
mov
sti
enter
push
aaa
xchg
lods
insl
mov
ret
fldpi
ret
fisttps
ja
dec
inc
insb
xor
jp
loopne
cmc
ds
sub
movsl
aad
jmp
mov
mov
jmp
call
cmp
test
cmp
cltd
push
dec
gs
loopne
leave
lret
jmp
ja
aad
push
setge
push
loope
cltd
leave
lods
rolb
push
xor
xlat
push
and
or
jb
jo
jmp
call
mov
ret
test
test
xchg
loopne
mov
sbbb
mov
aas
mov
inc
mov
adc
push
sub
stos
loope
xlat
jnp
test
sub
inc
or
xchg
add
out
xchg
sbb
dec
pop
xlat
jge
repz
mov
jmp
sbb
mov
or
dec
xchg
mov
mov
ret
adc
xchg
sub
xchg
mov
mov
loope
push
stos
mov
pop
mov
icebp
daa
add
mov
pop
sbb
js
fcmovbe
dec
pop
pop
sbb
or
lret
push
xor
std
pop
push
add
jge
out
push
cltd
jecxz
add
jle
decl
mov
xchg
popf
and
mov
or
jns
fs
insl
pop
mov
out
das
xchg
cmp
test
incb
repz
movsb
in
cmpsb
movsb
cwtl
adc
jl
test
push
loope
shr
imul
es
pop
and
popa
rep
push
mov
xchg
lods
jmp
jo
out
lock
sbb
and
call
xlat
pop
mov
int3
movl
jge
mov
stos
call
out
lods
das
nop
pop
cwtl
push
es
loop
and
das
in
addr16
stos
mov
and
adc
test
fchs
adc
pop
jbe
xor
movsb
and
and
imul
cltd
mov
scas
xchg
xchg
cmp
add
mov
mov
mov
jle
sub
sahf
push
pushf
jne
int
fsts
stc
jg
fdivr
rcrl
add
inc
imul
add
in
mov
lods
add
add
loope
les
sub
jae
mov
mov
daa
and
mov
pop
inc
mov
mov
or
add
mov
add
sub
lock
pop
xor
dec
cmpxchg
mov
push
lods
xchg
mov
int3
jbe
dec
sbb
pop
sub
pusha
mov
aam
xchg
fimuls
or
inc
mov
mov
pop
adc
adc
cmp
sbb
in
pop
pop
inc
imul
xchg
lods
in
pop
mov
mov
push
cmpxchg
sbb
enter
inc
and
push
cmpsb
nop
adcb
scas
ja
in
jl
in
js
sub
sub
and
nop
jae
sarb
rolb
cmp
pop
and
jmp
and
inc
sub
dec
mov
aas
test
push
adc
xchg
loopne
sub
leave
inc
cltd
int
pop
fwait
cli
nop
scas
cmp
push
xchg
hlt
push
adc
jecxz
xor
inc
loop
mov
in
jg
jp
jecxz
call
jbe
inc
pusha
push
push
adc
fdivrs
test
enter
pop
in
dec
jp
shr
xor
cmc
out
int
movsl
inc
int
outsl
cs
bound
push
mov
sub
mov
inc
inc
pop
test
cmp
sub
lods
and
sbb
lds
fbstp
je
xchg
xchg
lcall
mov
and
cltd
or
fldl2e
dec
sub
inc
pop
aas
pushf
xor
pop
add
test
xor
xor
test
cmp
mov
mov
sub
jo
xor
cwtl
inc
add
stc
lcall
jl
sbb
imul
jl
sub
inc
lds
cmp
ror
shrb
push
outsl
jbe
mov
xor
into
pop
pusha
jmp
push
cmp
cmpsb
mov
hlt
lret
xor
fs
jle
loop
push
xchg
jecxz
cmp
add
or
lods
lcall
mov
cs
mov
rorb
mov
or
cmp
sbbb
icebp
cmpl
test
mov
inc
out
sub
inc
lods
loopne
iret
cmpsl
stc
xchg
lock
or
aaa
in
fwait
pop
mov
data16
push
stos
cmp
jp
faddp
bnd
stos
jbe
jne
jbe
push
fisubrl
sti
loop
pop
add
push
dec
mov
fwait
loope
mov
aad
add
or
cmp
sbb
out
sub
mov
cs
jle
lock
jl
or
jo
and
add
dec
sbb
jle
cwtl
insb
pop
das
pop
xlat
mov
fmuls
out
inc
sbb
sub
out
ja
push
mov
xor
xchg
mov
xchg
inc
or
mov
and
das
and
mov
mov
inc
into
mov
lret
push
dec
or
pop
js
cmpsb
xor
int3
in
xlat
jecxz
adc
popf
dec
jge
sbb
mov
imul
push
pop
xchg
push
xlat
cltd
loop
addl
xor
cltd
aad
out
outsl
adc
ss
in
inc
xor
cli
lretw
hlt
rcrl
push
in
pop
or
sbb
xor
shll
xor
hlt
stc
jnp
push
les
shrl
cmpsb
leave
repnz
adc
sarl
iret
jbe
xchg
sbb
mov
lret
out
or
jno
mov
inc
out
aaa
fldenv
icebp
mov
in
pop
fst
cmp
inc
std
cmc
hlt
jo
les
rcll
jge
lret
int
mov
out
arpl
sbb
xchg
jl,pt
push
jp
and
mov
fistpll
sbb
adc
push
mov
jp
out
fcmovu
inc
dec
fdivl
jne
mov
jmp
inc
lock
and
or
lock
pusha
dec
shlb
dec
mov
daa
xchg
mov
add
pop
lods
mov
or
pop
out
push
lahf
xchg
mov
push
arpl
stc
popa
cmpsl
add
push
shrl
les
insl
and
ja
mov
loop
dec
fldenv
bound
pop
jne
or
cmc
into
fiaddl
aaa
test
lcall
or
fcmovne
fwait
add
mov
pop
lahf
sub
loopne
cmc
jle
imul
in
loopne
into
and
test
sub
lcall
nop
push
inc
pushf
pop
push
sub
lock
cltd
xchg
rcrl
push
push
xchg
out
mov
nopl
outsl
and
daa
xor
repnz
cmp
movsl
cwtl
sbbl
nop
es
sub
cli
fwait
arpl
xor
pop
std
mov
sar
mov
addr16
int3
fcom
sub
xchg
mov
decl
lock
xchg
xor
je
fmull
xor
xor
enter
mov
inc
test
jp
cmc
shr
test
xor
add
fdivr
dec
adcl
sbb
dec
je
inc
arpl
xor
dec
and
leave
subb
and
orl
daa
std
mov
and
push
jne
inc
je
movsl
xchg
mov
test
in
adc
add
xor
and
push
jne
inc
je
movsl
xchg
mov
test
in
adc
add
xor
and
push
jne
inc
je
movsl
xchg
mov
test
in
adc
add
xor
and
push
jne
inc
je
movsl
xchg
mov
das
mov
rcll
or
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
movsl
outsb
mov
test
pop
jmp
test
cs
and
into
adc
cmp
push
sahf
movsl
outsb
mov
test
pop
in
cmc
lds
aad
and
into
adc
mov
movsl
outsb
mov
test
pop
in
cmc
lds
aad
and
stos
cmp
or
cld
cmp
mulb
out
movsl
jmp
cs
jo
test
inc
pop
out
imul
cmp
jo
sbb
into
or
pop
roll
sbb
mov
nop
push
lcall
iret
pop
ss
dec
mov
in
mov
adc
cli
push
jg
lds
xchg
pop
loopne
mov
repz
das
in
cmp
and
mov
jno
adc
roll
das
sub
sbb
popf
xor
xor
movsl
jno
adc
lea
sbb
jnp
jne
pop
std
ficoms
pop
mov
cmp
jle
dec
xchg
pop
in
cmc
lds
aad
and
into
adc
mov
jecxz
fdivrl
daa
lock
mov
mov
mov
mov
jns
add
sbb
add
jl
dec
lock
cwtd
pop
lds
push
inc
xchg
aaa
mov
mov
int
aad
jmp
into
int3
daa
shrl
in
cmc
lds
aad
and
into
adc
mov
movsl
outsb
mov
test
pop
in
cmc
lds
aad
and
into
adc
mov
movsl
outsb
adc
ds
mov
aas
loop
iret
cli
or
mov
xor
je
dec
mov
adc
imul
mov
hlt
idiv
push
xor
mov
test
xchg
aas
test
pushf
ss
dec
and
bnd
ja
out
or
out
les
sbb
mov
insb
stc
jg
cltd
ss
leave
xchg
mov
or
inc
stos
cmp
push
movsb
mov
xor
and
jnp
dec
sub
ljmp
fidivrl
dec
inc
fsubr
imul
mov
outsl
mov
ret
in
xchg
fcoms
cld
idivb
pop
filds
aas
adc
push
cmp
add
jb
dec
ss
jne
push
nop
jnp
pop
pop
daa
jno
and
prefetcht0
aam
repz
dec
cmp
xchg
xchg
add
fistpll
adc
add
dec
in
mov
lcall
mov
iret
mov
inc
popa
lahf
mov
fs
bound
cmpsb
fistl
push
pusha
sbb
cmpsb
imul
mov
fldl
add
cmpsb
sbb
pushf
xor
mov
rcll
mov
add
inc
cmp
test
icebp
fstpt
clc
andb
mov
fsubrs
insb
jmp
lret
mov
or
cmpsl
ljmp
outsb
adc
iret
xchg
sub
les
mov
mov
lcall
pop
das
cmpsl
es
ret
in
iret
sub
cmpsb
fnsave
or
ja
cwtl
dec
xchg
cmpsb
call
sub
gs
cli
lea
mov
enter
or
imul
dec
dec
out
aas
pop
shlb
cli
xchg
mov
or
ljmp
fbstp
out
testb
push
repnz
addr16
movsb
jo
xor
xchg
jns
loop
push
outsb
mov
mov
out
jbe
jle
js
xor
mov
dec
cmp
int3
mov
mov
ret
call
sbb
dec
cltd
add
sbb
mov
lret
sbb
icebp
icebp
stos
jecxz
outsb
xlat
nop
jns
pop
imul
out
xor
inc
xlat
jae
cli
mov
lcall
xchg
pusha
add
add
sbb
hlt
push
mov
pop
xchg
xchg
cmp
dec
adc
adc
daa
push
push
xchg
sub
das
add
bnd
leave
adc
xchg
loope
ljmp
movsb
push
sar
push
xor
rclb
insl
scas
xchg
xor
test
bound
sarl
mov
dec
hlt
and
test
or
rorb
decl
add
mov
sbb
js
enter
inc
xchg
jge
xor
adc
mov
cwtl
inc
fsubs
xchg
push
aaa
mov
sbb
push
dec
js
inc
inc
xchg
test
rcll
cltd
repnz
clc
test
lds
cmpsb
pushf
in
or
lods
mov
inc
inc
or
add
and
mov
mov
xlat
jb
mov
popa
pop
inc
xchg
and
and
mull
xchg
mov
add
pop
dec
outsl
sbb
jno
jns
or
pusha
xchg
nop
xchg
lcall
clc
push
jge
jmp
add
arpl
and
lahf
mov
lods
jno
mov
cwtl
popf
pop
sub
loope
xor
pop
hlt
iret
adc
mov
sub
in
jle
inc
lds
mov
mov
addr16
pop
jl
test
cwtl
cmp
in
cmpsl
xchg
sti
testl
mov
nop
shl
test
test
int3
cwtl
xor
cmpsl
inc
cli
lods
dec
and
in
xor
lret
and
dec
mov
and
jae
jb
sub
mov
add
jg
icebp
push
xchg
dec
jmp
les
popa
mov
xor
cmc
addr16
and
adc
mov
mov
jne
js
xor
filds
jae
or
inc
pop
scas
add
call
xor
mov
inc
aam
or
mov
push
adc
push
jne
fiadds
je
add
mov
xor
cwtl
sbb
fs
std
scas
cltd
roll
xor
fists
lds
and
push
push
jnp
les
inc
pop
mov
fbld
xor
cmp
mov
sub
adc
ud0
inc
xchg
push
pop
fs
fidivrs
ret
adcl
mov
add
mov
cld
scas
ror
mov
jb
test
subl
cmp
jp
cltd
dec
xor
mov
aaa
add
ss
mov
sarl
add
mov
cmp
inc
xor
cld
mov
sub
sub
jnp
pop
testl
xchg
outsl
push
notl
inc
test
jl
sarl
shll
xchg
leave
jp
cs
loopne
mov
push
cli
jnp
xor
lahf
int
and
adc
popf
dec
dec
jl
mov
pop
icebp
and
dec
cmp
sub
ret
mov
sbb
ret
cltd
pusha
xor
push
in
mov
and
test
movb
aas
popf
lods
lods
adc
pop
sub
mov
adc
int
cmp
loop
js
mov
push
aaa
mov
cltd
cmp
jnp
jne
dec
mov
xchg
orl
sarl
iret
movsb
dec
push
fincstp
inc
sub
pop
sbb
scas
jle
hlt
xor
pop
push
xchg
test
inc
js
dec
mulb
daa
test
movsb
jp
sub
ljmp
cmp
test
orl
mov
lea
mov
jge
inc
xor
push
dec
jbe
lds
shlb
cmpb
ja
out
mov
dec
and
pop
icebp
mov
push
sbb
icebp
fisttpll
out
iret
in
mov
cmp
mov
enter
xchg
mov
sbb
scas
popa
pop
adc
sbbb
es
jecxz
add
fcomi
subb
sbb
ss
movsb
mov
std
mov
pop
pop
cmc
sarl
mov
push
rcrb
add
adc
insb
add
xlat
insb
ret
and
cli
mov
sub
outsl
cmc
pusha
pop
or
mov
nop
popa
push
call
loopne
mov
or
notl
inc
sti
push
sbb
es
les
dec
imul
outsb
lret
lea
pop
xchg
test
loopne
out
test
cmpsl
cltd
in
sahf
inc
sbb
cmpb
test
cmp
xchg
sub
cld
leave
movsl
mov
scas
mov
imul
in
subl
lret
and
fists
push
mov
sub
push
pop
mov
mov
inc
and
xchg
aaa
mov
js
outsb
cmc
push
cmp
repz
hlt
fdivl
lret
insl
test
call
out
sub
shll
test
test
adc
or
sbb
and
pop
insl
sub
sub
jmp
and
orl
gs
ljmp
mov
jge
inc
lea
push
mov
sbb
scas
xor
xor
rclb
divl
jmp
lahf
jmp
sti
xchg
adc
xchg
sbb
jmp
pop
sub
in
push
add
xchg
arpl
les
mov
mov
cltd
hlt
jg
jl
mov
and
cld
xor
repnz
jmp
cld
out
xlat
add
mov
ret
dec
les
jae
ret
shll
sbb
dec
aad
cmp
stos
mov
ret
scas
js
jge
jbe
repnz
mov
sub
arpl
dec
sti
sbbb
pop
out
inc
lods
inc
xorl
cltd
cltd
push
push
jno
lods
mov
sub
ret
push
fnstcw
jo
and
imul
pushf
int
sub
shl
push
out
fistps
jns
lcall
shr
push
mov
imul
aaa
sbb
stos
loope
xor
into
inc
pop
or
inc
or
jbe
xchg
ljmp
scas
inc
hlt
push
mov
xor
mov
loopne
adc
mov
or
inc
int
js
cmpsb
in
mov
push
sahf
jl
dec
inc
lret
and
ret
xlat
in
dec
mov
dec
loope
inc
out
cmc
push
dec
int
push
imul
mov
cmp
pop
dec
cmp
xor
cmp
aam
shr
sbb
es
lret
sbb
pop
push
xchg
lcall
add
ret
and
stc
xchg
loope
adc
push
xor
push
lahf
xchg
sub
pop
jb
imul
bound
addl
test
xor
sub
xor
cmp
sti
and
mov
jg
mov
push
add
insl
push
xchg
mov
mov
mov
scas
jecxz
cmp
enter
pop
aaa
popf
inc
sub
jecxz
xchg
sub
repnz
jno
xor
popa
pop
jns
sbb
aaa
imul
cmp
mov
xor
je
arpl
lret
adc
lret
sub
in
enter
scas
loope
mov
or
pop
daa
into
push
fs
and
test
pop
push
sub
pop
ss
adc
aam
xchg
loopne
push
iret
xorb
jcxz
push
ja
dec
adc
notl
inc
aaa
add
icebp
pop
xlat
cmp
or
push
lds
clc
or
fwait
and
add
adc
fstpt
mov
insl
pop
fidivl
sub
push
sti
scas
push
enter
movb
add
pop
adc
lcall
dec
ds
xchg
fadds
and
push
jg
xor
mov
cmp
pop
out
dec
xor
test
daa
daa
daa
and
ficoml
push
mov
cmp
shll
ret
shll
roll
inc
push
xor
lcall
pop
mov
cmpsl
loope
sub
and
inc
xchg
xor
dec
cmp
int3
lret
cmpsl
xchg
mov
xchg
cmp
rcr
arpl
lahf
popl
loop
shl
enter
jne
push
hlt
mov
or
xchg
mov
mov
mov
cmc
inc
mov
movsl
lock
push
imul
sbb
and
test
lahf
jecxz
into
fcompl
pop
ljmp
nopl
cmp
cmp
neg
nop
pop
push
push
and
sbb
mov
sarb
cmp
inc
inc
inc
mov
jae,pt
mov
hlt
push
in
mov
push
dec
std
std
shrl
scas
mov
and
dec
lret
push
mov
mov
in
mov
ja
lock
jno
mov
rcrb
push
mov
xor
lea
mov
jmp
popf
mov
out
scas
out
xchg
mov
vmptrst
jmp
pushf
inc
and
dec
sub
xchg
or
xor
sub
push
and
cmp
or
icebp
js
clc
daa
sarb
cmp
jne
cmp
jbe
inc
mov
mov
js
mov
fdivr
or
call
push
xor
dec
ds
adc
pop
daa
xchg
adc
pop
insb
out
bound
jbe
arpl
iret
cli
mov
jmp
inc
inc
or
or
lock
pop
dec
cmp
ret
dec
mov
jge
mov
pop
iret
lcall
popf
push
pop
fisttps
xlat
push
jo
pushf
xor
test
cmc
dec
or
stc
das
les
and
addr16
sub
lea
pusha
push
fildl
es
xlat
aad
dec
stc
sarb
inc
mov
add
sub
cmc
jne
mulb
pop
xchg
xor
popa
mov
aam
ljmp
cwtl
das
sbb
jecxz
lcall
mov
jp
and
addr16
shrl
dec
testl
mov
push
adc
pop
aaa
xchg
sub
push
add
out
mov
loope
into
mov
pop
inc
dec
sbb
or
mov
aaa
dec
inc
cmp
lahf
fidivs
test
mov
fsubrs
xchg
aas
mov
out
jg
mov
xor
xor
cs
fcoms
fcoml
mov
push
imul
jmp
je
out
sub
incl
std
pop
adc
sbb
or
mov
jmp
dec
idivl
xchg
pop
add
leave
sub
xchg
sbb
sbb
or
xchg
sti
jo
xlat
or
sbb
cmp
cmpsl
cli
es
xchg
push
xchg
sub
mov
icebp
cmp
xchg
inc
daa
lods
mov
dec
popf
loop
mov
aad
test
enter
cld
or
jne
aad
shll
lods
lods
xor
mov
xchg
jp
dec
cmp
iret
pop
insl
fs
push
sbbb
add
adc
popf
inc
jb
ret
hlt
pop
add
jg
inc
fisubs
push
inc
cld
cmp
ror
add
xchg
stc
cld
jecxz
and
push
gs
dec
mov
sahf
jecxz
sbb
fdivs
dec
or
cmp
notl
jl
out
cmp
xchg
push
bound
lea
xlat
shrb
pop
orb
jnp
iret
mov
cwtl
jb
mov
lcall
xchg
cli
jnp
fwait
leave
jo
sahf
dec
aad
sbb
adc
or
aad
aad
enter
lods
loope
test
test
dec
jp,pn
cwtl
mov
fists
and
jne
aas
fptan
fildll
xchg
pushf
fstpl
jmp
lods
jb
orl
pop
ja
push
adcb
rcrb
inc
jmp
mov
or
add
dec
or
adc
bound
rcrb
test
mov
mov
sub
add
dec
leave
sub
push
xor
fiaddl
jno
pop
ds
shlb
mov
lret
pop
push
fcmove
scas
test
adc
and
cmpl
rcll
sbb
and
rcll
cmp
ret
mov
rcrb
test
mov
or
dec
mov
popf
imul
mov
lods
test
and
mov
mov
daa
sar
dec
jle
xor
pusha
or
nopl
mov
pop
add
sub
rclb
xorl
repnz
stos
negl
push
out
jp
mov
ja
pushf
mov
je
orl
xchg
call
mov
in
in
jge
lds
jg
adc
inc
pop
scas
sub
je
adc
mov
out
cmpsl
fwait
in
xor
rolb
add
mov
push
cli
mov
test
in
sahf
in
mull
test
int
aaa
fisttps
sub
push
inc
cltd
push
je
nop
bound
cmp
mov
cmpb
and
push
dec
mov
jb
add
insb
push
adc
in
push
imul
mov
clc
stos
add
inc
shlb
mov
sahf
push
add
movswl
and
sti
fists
mov
inc
inc
jne
jno
mov
dec
fsubrl
cmp
or
sbbl
dec
ret
xchg
inc
add
movsb
icebp
out
enter
pop
jo
out
dec
imul
nop
sub
mov
pusha
jg
outsb
jmp
xor
cmp
add
clc
dec
lahf
xchg
xor
adcl
xor
into
movsl
hlt
dec
data16
iret
sbbl
mov
cmp
bound
xchg
lret
pop
push
loop
add
insl
mov
test
mov
dec
cld
stc
addb
popa
pop
and
push
lret
js
aad
rol
jecxz
cmpsl
pop
arpl
scas
mov
mov
icebp
mov
retw
in
mov
je
jae
jbe
dec
loopne
mov
mov
and
fsubs
xor
xlat
bnd
mov
jle
inc
jne
mov
in
xchg
addr16
dec
add
cmp
daa
dec
mov
hlt
jge
or
into
mov
cmpsb
iret
cltd
dec
clc
add
pop
and
adc
mov
daa
sbb
insb
vmread
push
movsb
aas
popa
mov
iret
mov
movsb
push
pop
mov
movsl
sbb
adc
sar
cld
dec
or
dec
fdivs
inc
outsl
adc
and
mov
xchg
adc
pop
mov
or
sub
aad
xor
or
mov
sub
mov
out
push
rcrl
ja
fwait
fs
shr
xchg
subl
and
push
iret
add
jge
push
xchg
mov
and
inc
inc
push
jp
lods
popa
fwait
or
sbb
lret
jp
or
xor
xlat
jae
jnp
sub
das
jnp
push
es
push
bound
inc
pop
aas
or
icebp
xor
lret
mov
in
out
sbb
fs
or
dec
out
fcompl
and
push
cmp
dec
inc
lock
push
test
mov
push
inc
xchg
loop
mov
int
push
sarb
adc
leave
dec
test
inc
jae
pop
cmpsl
or
ret
cltd
loop
push
stos
push
lret
cmp
mov
jo
sub
adc
push
lock
int
add
je
or
push
aaa
iret
outsl
pop
test
pop
fidivrl
or
out
inc
inc
dec
inc
inc
inc
fprem
lock
pop
or
adcl
icebp
pop
xchg
inc
jne
add
mov
lds
xchg
pop
push
jns
xor
and
push
jp
xchg
mov
mov
jb
dec
or
arpl
aas
pop
shufps
mov
add
add
push
xchg
dec
mov
cltd
push
mov
xchg
cld
and
mov
push
rolb
mov
dec
fidivrl
mov
test
mov
popf
daa
mov
inc
jae
out
mov
push
popa
int
cmp
push
xor
lret
mov
adc
movsl
add
xchg
es
inc
jecxz
fldcw
repz
jmp
insb
mov
dec
adc
in
aaa
stos
sti
push
inc
mov
outsl
cltd
xor
mov
out
adc
add
sub
and
fstps
imul
les
loope
inc
int3
test
loop
lods
std
idivb
xchg
xchg
jecxz
cmpsl
adc
sahf
movsl
out
fistpll
push
sbb
cli
dec
or
inc
dec
jnp
or
fs
mov
and
xchg
dec
hlt
lahf
mov
mov
adc
lret
xor
lret
sub
xor
jae
sub
popa
pop
repnz
push
or
sub
cmpsb
pusha
mov
cmpsl
or
sbb
imul
sbbb
or
shlb
out
gs
adc
leave
sahf
int3
and
mov
add
sub
push
icebp
xchg
test
mov
lock
arpl
shr
mov
ret
sub
push
out
es
in
cmpsl
push
pop
sub
cmpsl
jl
inc
addr16
pop
fs
pop
in
fpatan
movsl
clc
loop
jmp
xchg
add
lret
sub
pop
pop
rep
mov
ret
jb
pop
cli
jo
push
add
mov
insl
test
fildll
xor
push
movsb
sbb
sbb
cwtd
jge
lods
loopne
aam
cld
dec
fnsave
into
test
scas
mov
dec
adc
jno
addr16
out
mov
inc
jne
sub
out
test
aad
fisubl
and
daa
adcl
test
xchg
stc
sar
call
push
jmp
add
cmpl
jae
inc
in
sub
xchg
data16
push
sarl
cwtl
enter
mov
add
xor
lea
out
idivl
shll
lock
fimull
push
xorl
fimuls
stos
lret
sbb
add
dec
mov
test
xchg
in
lds
ss
mov
mov
cmp
mov
nop
subb
cwtl
popf
pop
bound
jl
sub
outsb
loopne
xor
icebp
inc
adc
pop
mov
or
bt
dec
mov
cs
push
adc
push
test
adc
pop
stc
lret
sub
fcoms
mov
fwait
inc
jbe
and
insl
rcll
test
cmp
subb
sbb
sti
sub
movl
arpl
or
test
push
jg
xchg
shlb
outsb
repnz
bound
js
mov
mov
mov
push
sbb
mov
mull
add
jnp
xor
ds
xchg
cmp
jge
xchg
pop
in
cmc
lds
aad
and
into
adc
mov
movsl
outsb
mov
test
pop
in
cmc
lds
aad
and
into
adc
mov
movsl
outsb
mov
test
xchg
pop
in
cmc
mov
and
into
adc
mov
movsl
outsb
mov
test
pop
in
cmc
lds
aad
and
into
adc
inc
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
and
adc
add
jp
add
sub
mov
mov
stos
repz
mov
cli
ret
ljmp
add
jae
arpl
jp
push
lcall
repz
lret
ret
ljmp
add
jae
arpl
jp
push
movsb
adc
lret
xrelease
ljmp
push
jl
xor
mov
xchg
std
jle
push
and
adc
dec
in
sub
aad
mov
stos
bound
daa
cs
jecxz
test
xchg
push
int3
cmovns
jns
dec
inc
es
sbb
or
mov
push
jmp
in
or
cmp
sbb
pop
or
cs
jb
jl
mov
add
lret
pusha
xchg
xlat
mov
mov
test
cmp
fildll
cltd
mov
sti
ret
mov
sub
cld
pop
pop
xchg
call
out
hlt
gs
arpl
mov
adc
shr
sbb
or
cmp
sub
arpl
jp
push
lcall
repz
lret
ret
lods
push
ja
fsts
inc
insb
push
xor
sbb
test
loopne
mov
mov
mov
js
popl
push
inc
jo
inc
jge
aas
sub
push
push
ffreep
out
in
add
mov
movsl
mov
dec
and
dec
pop
ss
jp
push
lcall
repz
lret
ret
ljmp
add
jae
arpl
jp
push
lcall
repz
lret
ret
ljmp
jl
mov
adc
out
scas
ret
imul
sti
sbb
push
jns
mov
sbb
push
in
daa
jb
out
test
fistpl
inc
movb
lock
pop
lea
adc
dec
push
push
leave
lret
test
in
lea
jmp
adc
insl
int
xor
repz
mov
stos
xor
jge
jb
hlt
and
push
cmpsl
sbb
lock
shl
xor
push
jne
xor
fisttpl
lods
mov
cwtl
movl
shr
aaa
xor
leave
or
xor
mov
inc
cmpsb
dec
push
jg
cli
pop
psubw
lcall
movsb
js
sbb
mulb
in
ret
lcall
mov
test
mov
push
outsb
fists
xchg
test
popf
adc
cmpsb
in
mov
outsl
hlt
dec
mov
push
jecxz
xor
or
push
or
push
orb
loop
pop
daa
aaa
dec
mov
jl
lret
movsb
push
call
fs
movsb
nop
sbb
dec
loope
cmpsl
xchg
shrl
shr
ret
xor
or
push
xlat
mov
mov
cwtl
xchg
push
addl
loope
jp,pt
dec
jbe
into
into
push
inc
mov
fdivrp
xchg
pop
cmc
popa
aad
mov
push
aad
inc
sbb
xor
mov
icebp
fcmovnbe
loopne
lcall
mov
pop
ror
fsts
mov
dec
jnp
mov
or
jmp
dec
add
ja
jb
ret
dec
into
push
mov
arpl
out
pop
jge
je
pop
les
jge
adc
or
stos
pop
xchg
mov
loope
cmp
push
push
je
mov
mov
call
jns
pop
pop
mov
in
pop
fucomp
add
push
dec
or
pop
insb
dec
pop
xor
jbe
jg
aaa
xchg
lcall
push
mov
cmp
sbb
mov
push
fs
adc
push
test
xchg
enter
fnstsw
fnstenv
add
std
das
add
mov
test
outsb
pop
lock
sar
jecxz
mov
imulb
mov
rclb
enter
sbb
and
xchg
jae
sbb
stc
mov
jns
dec
cmp
sub
repz
add
jns,pt
notl
cs
mov
pop
and
enter
sbb
ret
aad
mov
lock
shl
aam
sub
mov
std
ffreep
fnsave
inc
sub
aas
je
mov
push
push
dec
in
aam
mov
loopne
loopne
in
or
jno
ficoml
add
enter
jno
jns
testb
xor
add
enter
into
imul
aam
jb
sub
inc
xor
lret
or
xlat
shl
cld
imul
push
pushf
jle
add
loope
cs
xor
sarb
mov
or
out
orl
mov
cltd
hlt
test
sar
aam
add
mov
pop
es
stos
sbb
lods
aam
xchg
enter
cmpsl
sti
inc
xor
ret
adc
lods
mov
sbb
dec
xor
adc
mov
shlb
jp
arpl
mov
std
popf
popf
into
cmp
add
call
shrl
inc
ficompl
divb
pop
xor
cwtl
and
ds
outsl
add
push
js
mov
pusha
das
lret
movsb
inc
jno
mov
or
or
cmpsl
xor
push
lods
enter
xchg
leave
push
mov
fidivrs
sub
cld
pusha
imul
inc
mov
das
mov
loope
mov
daa
out
pop
sub
sub
outsb
fucomi
popf
iret
xor
cltd
lret
jnp
das
inc
xor
js
orb
xor
jmp
inc
push
sbb
nop
cltd
pusha
daa
dec
and
repz
push
notb
cwtl
aam
insb
xor
inc
push
mov
adc
loop,pn
nop
pushf
sub
mov
ret
jmp
loop
xchg
jae
adc
push
popf
in
mov
loopne
dec
mov
scas
sahf
lcall
cmp
cmc
enter
inc
ss
aaa
dec
cmp
pop
pop
add
push
add
push
xchg
lock
dec
sahf
sub
and
enter
clc
xchg
jno
into
xchg
fisubl
out
fs
mov
sbb
push
fidivl
adc
jecxz
mov
inc
push
adc
pushf
cmp
fwait
mov
fildl
inc
mov
mov
sub
roll
push
pop
pop
pop
sub
cmpl
and
aas
adcl
ljmp
cld
adc
inc
mov
jnp
cmp
ja
inc
mov
cltd
aaa
xchg
xchg
orb
pop
stos
inc
or
mov
stos
dec
dec
sub
mov
inc
lcall
adc
xchg
cmp
xchg
and
sbbl
push
clc
clc
es
ret
mov
mov
out
xor
loopne
jl
jo
testb
es
mov
ret
rorl
in
push
sarl
mov
bound
out
test
lea
mov
aaa
icebp
jb
sbb
mov
jge
movsl
fsubrs
adcl
adc
daa
inc
push
sbb
popf
xor
out
jbe
ret
mov
leave
add
sbb
adc
dec
lcall
cmpsl
mov
push
fwait
push
dec
mov
xchg
jmp
jo
scas
sub
mov
in
in
sbb
dec
jmp
xor
jge
outsl
push
jo
fwait
sub
or
xor
cmp
mov
shrb
repz
add
loope
cli
push
jecxz
push
std
jae
daa
or
call
jp
or
mov
jl
xor
push
nop
jecxz
sub
inc
push
stc
aaa
push
lea
pextrw
aas
jo
lods
cwtl
lret
std
inc
and
mov
cmp
mov
add
lock
lds
sub
mov
xor
xor
and
sub
xchg
out
cmpsb
pop
enter
fisubrs
enter
ljmp
jge
rcl
push
bound
mov
insl
or
add
mov
cmp
mov
popl
imul
xchg
repz
aaa
dec
pop
add
subl
mov
and
mov
xchg
js
cmp
mov
inc
fwait
daa
and
sbb
subl
jb
jae
stos
cltd
stos
pop
sub
add
and
or
xchg
out
pushf
outsb
push
out
lods
and
call
add
mov
adc
cs
push
lock
cmp
mov
insl
xchg
div
push
lret
pusha
pop
lcall
dec
popf
push
test
jbe
pop
jns
cmp
xchg
push
daa
or
pop
lahf
sub
stc
adc
and
cwtl
fistpl
push
cld
mov
fdivl
popa
dec
outsb
sbb
jne
add
jecxz
mov
fimuls
popl
cmp
push
aas
push
into
jmp
cmp
shlb
sarb
jp
in
loop
cmpb
sbb
jae
leave
stc
pop
push
stos
xchg
sbb
push
incl
outsl
ret
lock
jno
push
adc
pop
aas
call
dec
arpl
mov
adc
pop
inc
sbbb
dec
outsl
fistpll
xchg
inc
mov
mov
int
jmp
xchg
inc
add
ja
or
mov
je
mov
movl
mov
les
mov
sub
or
cwtl
xchg
lods
dec
or
or
pop
sbb
pop
cmp
xchg
sub
mov
flds
int
add
test
sar
aaa
add
inc
mov
and
mov
sti
ss
mov
fstp
sub
mov
mov
fs
adc
and
mov
and
aaa
pop
sbb
fstpl
mov
dec
xchg
jbe
addr16
pop
in
dec
lret
jbe
mov
push
leave
or
and
jne
outsb
cmpsl
sbb
adc
and
push
mov
xor
mov
sub
push
mov
add
push
mov
push
cmpl
inc
lahf
lcall
stc
bound
test
pop
int3
or
shlb
mov
xor
push
hlt
hlt
cltd
xor
push
shrl
inc
in
add
jg
xor
pop
push
dec
or
mov
pop
sbb
outsl
sub
popw
and
daa
adc
mov
and
pushf
jbe
sahf
iret
add
lods
cmpsb
adc
fsubrs
sbb
ss
mov
xor
cmp
inc
sbb
mov
popa
movsb
push
xor
in
mov
xor
test
mov
push
stc
stc
cmp
xchg
test
pop
mov
pop
adcl
push
mov
stos
in
xor
push
sub
hlt
dec
inc
adc
lahf
pop
loopne
mov
sub
inc
or
adc
jmp
jge
pop
rcll
or
and
jno
add
lret
fstpl
aad
test
jo
cmp
repz
cmpsb
adc
jae
mov
xchg
lds
jecxz
push
leave
xchg
loope
repz
push
dec
mov
in
adc
movsb
aas
mov
addr16
inc
push
addr16
dec
dec
xor
pop
and
loopne
cmp
dec
mov
cmp
shll
pushf
dec
je
or
lock
gs
cmc
push
mov
mov
and
test
lea
test
in
jae
pop
sahf
aas
jb
out
add
scas
pop
scas
scas
push
icebp
pushf
popa
loop
inc
xor
gs
out
cmpsl
aas
cmp
test
into
or
dec
push
fidivrl
icebp
imul
stos
stc
loope
stos
lret
cmp
fsubrl
jle
insl
cmp
sti
ret
sub
inc
push
mov
lods
and
jge
xchg
mov
scas
movsb
in
sbb
imul
pop
iret
daa
mov
test
rolb
lret
ja
in
mov
fwait
jg
push
mov
rclb
inc
add
lds
stos
divb
xlat
leave
xchg
nopl
inc
or
adc
pushf
or
scas
pop
push
xchg
sub
cmp
sub
mov
movsl
cmovb
cwtl
add
loop
bnd
add
mov
es
xchg
jg
xchg
mov
mov
fdiv
sub
sub
shlb
stos
jmp
pop
fistl
lret
mov
je
out
mov
cmc
ljmp
and
push
push
out
rorb
je
ret
jbe
jmp
fdiv
dec
xchg
call
jne
mov
in
mov
mov
add
cmp
pop
fcmovu
jbe
movsb
notb
rcll
adc
fdivr
xchg
iret
dec
testb
mov
mov
inc
pushf
cmp
dec
cs
mov
lods
stos
mov
ror
ds
inc
fstpt
stc
test
pop
add
ds
int3
mov
xchg
add
xchg
pop
dec
js
jne
loope
xor
roll
test
lods
int
mov
js
push
cmp
xor
out
xor
jo
ss
or
xor
push
jo
scas
mov
cmpsl
repz
ret
push
jnp
mov
mov
or
enter
insl
cltd
xor
xor
faddp
ja
daa
mov
sub
jno
xor
adc
imul
and
pop
nop
xchg
ljmp
sarl
jge
sti
sbb
cs
mov
mov
pop
bound
in
mov
add
sbb
fisubrs
add
int
jnp
sub
jg
cld
cltd
jmp
push
xchg
dec
out
pop
cs
adc
mov
push
imul
sbbb
fwait
mov
rcll
push
dec
pop
mov
adc
dec
stos
fsubrs
mov
mov
aam
push
xchg
or
nop
iret
fcmovnbe
aad
add
gs
test
sbb
loopne
dec
lcall
dec
inc
adc
jg
inc
scas
xor
jmp
rcr
test
xchg
adc
ret
jmp
mov
mov
pushf
push
dec
sub
mov
testl
enter
pusha
loop
xchg
cmp
jbe
and
xor
bound
std
mov
inc
pop
shrb
add
test
or
sub
mov
fisttpll
dec
fisubl
movsb
inc
jecxz
jbe
aaa
addr16
cmp
sbb
ds
sbb
add
scas
mov
mov
pushf
pop
fnclex
mov
cmpsl
call
icebp
cli
inc
out
fdivr
jb
idivb
jo
repz
pop
push
enter
scas
and
mov
xlat
jo
lods
ds
mov
jecxz
add
jnp
shlb
mov
stos
add
outsl
adc
hlt
lock
xor
cmpsl
enter
shl
cmpsb
inc
cs
popl
mov
jns
fldcw
cmp
test
sbb
or
mov
imul
movb
cli
cmpsl
adc
int3
inc
dec
shlb
adc
add
mov
dec
push
push
or
imul
movsl
and
xchg
push
test
jge
xchg
cmc
mov
cs
pop
hlt
stos
pop
mov
pop
xor
in
test
pop
rep
sti
sbbl
fbstp
jae
sub
and
jp
inc
mov
aam
cld
pop
stos
rcr
out
jae
stos
pushf
mov
fprem
ficomps
pop
call
lahf
push
add
lods
jne
in
cld
adc
scas
mov
xchg
scas
in
adc
jno
fsubrl
insb
inc
in
cmpsl
test
aaa
stos
pusha
and
test
add
and
insb
lahf
cld
ss
lds
movsb
imul
sbb
jp
xchg
fucomip
inc
push
mov
or
js
lea
in
inc
stc
pop
cmovl
sub
mov
int3
push
sbb
rclb
test
mov
inc
jbe
repz
fsubl
maskmovq
negl
mov
in
cmp
add
jns
mov
repz
xchg
popa
js
jno
rorl
les
into
rol
hlt
daa
popf
stos
imul
out
movsl
add
rcrb
and
movsl
adc
adc
mov
fs
push
test
les
add
ss
or
aaa
pop
hlt
pop
adcb
mov
not
xor
icebp
rorb
adc
add
push
xlat
ss
pop
cmp
push
mov
xor
pop
ds
icebp
cmpsb
mov
inc
icebp
push
push
xchg
add
pop
mov
ss
sub
mov
hlt
icebp
shll
cmp
cwtl
jno
dec
cmp
mov
data16
daa
xchg
jl
int
push
xchg
nop
fsqrt
ret
jle
sbb
mov
push
loop
sub
dec
in
fsubs
roll
jecxz
loopne
sub
shrl
fs
outsl
loope
rcrl
daa
enter
out
nop
lcall
data16
mov
push
daa
mov
inc
and
in
jns
stos
aas
sbb
mov
cmpsb
xor
pop
fwait
into
test
mov
pop
push
dec
cmpsl
aam
mov
cmc
sbb
iret
stos
loope,pn
pop
in
je
scas
enter
dec
mov
rclb
push
pop
clc
je
mov
push
and
cmc
sahf
xor
mov
push
cmp
lock
stos
or
mov
mov
cmp
dec
dec
aam
jp
repz
mov
xchg
mov
nop
mulb
push
test
imul
jge
mov
hlt
call
loop
inc
cmovns
fimull
dec
andb
imul
rclb
inc
test
aad
dec
mov
jb
mov
jo
nop
xchg
daa
mov
loopne
aaa
dec
cmp
mov
orl
xor
add
mov
repnz
in
sub
jmp
or
movsl
mov
sub
xor
iret
xor
fcompl
insb
scas
xchg
pop
fimull
jns
jae
dec
cmp
cmc
cmp
xorl
sbbb
int3
test
out
in
fisubrs
jmp
ljmp
pop
je
cltd
aam
stos
fdivs
gs
mov
mov
mov
pop
loopne
fildl
mov
pop
cmc
mov
pop
loope
rcrl
xchg
pop
xor
xrelease
dec
or
jb
adc
adc
adc
loope
out
mov
std
ljmp
mov
add
pushf
pop
sub
add
pop
push
scas
push
out
mov
dec
pop
cmp
aas
jmp
insl
ljmp
cmp
and
adc
adc
xor
adc
sti
es
popa
jp
mov
iret
mov
in
xchg
or
inc
lods
repz
add
push
inc
add
sbb
sti
push
adc
lock
mov
xor
lods
sahf
sbbb
add
push
cmp
sub
daa
push
sub
jge
dec
jl
sub
aam
xor
sbb
mov
iret
or
mov
ljmp
stos
call
pop
mov
clc
das
xor
iret
xchg
sub
outsl
jmp
sbb
add
das
sbb
iret
or
xor
or
out
int
mov
cmc
inc
jns
add
ds
add
push
jnp
sub
or
mov
fimull
inc
das
push
jbe
das
popa
sub
adc
lods
popa
mov
mov
push
adc
dec
ss
inc
and
push
dec
mov
sbbl
push
and
mov
push
sahf
jge
pop
leave
aam
std
sub
sbb
rcl
lods
data16
icebp
mov
inc
mov
or
sarb
scas
jne
test
mov
jno
or
jb
adc
and
push
lcall
sbb
aaa
xorl
bound
sahf
inc
jno
sbb
mov
int
jg
adc
xor
mov
push
sub
jge
test
xchg
jb
pusha
insl
andl
pop
pop
cwtl
mov
rcl
push
repz
jp
mov
cs
mov
pushf
pusha
jbe
or
testb
test
or
jae
inc
dec
add
orb
mov
pop
test
adc
sar
jno
jle
icebp
sub
out
inc
xchg
inc
sbb
addl
cmp
scas
add
call
aad
sbb
loope
ret
inc
xchg
daa
lret
iret
cmp
xor
mov
inc
push
and
fucomip
and
xchg
dec
ss
daa
sbb
and
xor
rorl
or
arpl
inc
jnp
dec
dec
cmovnp
icebp
gs
mov
jl
mov
fcomps
not
ljmp
stos
aad
bound
adc
or
pop
jns
pop
dec
fisubrs
mov
xchg
cmpb
andb
stc
test
into
mov
fsin
push
mov
je
test
jns
stos
test
sub
ret
xor
push
flds
testl
enter
or
pop
lret
sbb
cmc
xor
in
fs
cmpsb
fldl
adc
mov
filds
hlt
sbb
jo
das
arpl
fisubs
push
test
add
inc
mov
shlb
jg
addb
lcall
imul
and
jne
fdivr
adc
lahf
adc
andb
shll
loope
popa
arpl
movsl
cltd
mov
das
fwait
dec
rclb
ret
mov
icebp
and
hlt
pop
cs
outsb
dec
dec
out
add
inc
leave
adc
test
xchg
dec
xor
pop
mov
cmc
inc
outsl
pop
ds
sbb
sbb
or
dec
xchg
cmpl
dec
test
cld
jnp
xchg
xchg
sub
out
sbb
imul
jbe
mov
sbb
stos
xor
pop
mull
cmpl
pop
test
loope
fstpt
or
cmp
arpl
scas
or
int
int3
jp
mov
rcrl
pop
fwait
jnp
ljmp
jge
test
lods
icebp
xchg
sub
loope
jg
pop
mov
fdivr
aaa
loope
xor
mov
or
call
xor
inc
mov
mov
shll
sbb
shll
test
add
movsb
loopne
mov
mov
in
push
mov
aaa
push
fs
jnp
pop
cmp
xor
cmpl
pop
nop
jl
inc
aam
sub
add
jae
arpl
jp
push
lcall
repz
lret
ret
ljmp
add
jae
arpl
jp
push
lcall
repz
lret
ret
ljmp
add
jae
bound
jnp
push
lcall
repz
lret
ret
ljmp
add
jae
arpl
sar
ret
xchg
dec
gs
and
mov
imul
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
sbb
or
mov
js
dec
fmuls
mov
sbb
in
pop
iret
cmp
mov
add
pop
cwtl
dec
enter
sub
inc
notl
iret
push
es
inc
ja
jg
add
cmp
inc
lahf
insl
stc
pop
lods
dec
out
jecxz
inc
or
xchg
pop
push
enter
xchg
push
cmp
inc
xor
sbb
mov
lock
cwtl
das
stc
jg
pop
fnstenv
sub
cmp
imul
movnti
shrb
jg
xchg
call
mov
or
add
mov
cs
sub
outsl
pop
aam
dec
fwait
out
sub
outsl
lea
pop
imull
aas
jmp
mov
xchg
pop
aaa
push
clc
dec
xchg
fmuls
jo
add
in
jmp
sbb
mov
mov
pop
nop
cmp
cmp
pop
fmuls
jbe
mov
lahf
pushf
popl
call
adc
es
outsb
pop
mov
shlb
adc
dec
cmpsb
shrl
sub
pop
sti
mov
pop
xchg
xor
sub
insb
in
imul
xchg
or
jge
imul
pop
out
pop
fbstp
pushf
and
fisttpll
pop
std
dec
out
jg
add
sub
ret
outsl
repz
out
mov
out
push
aas
mov
js
pop
fmuls
mov
sbb
push
aas
mov
js
pop
fmuls
mov
mov
fwait
mov
testl
sbb
push
push
mov
xchg
lea
mov
mov
cmp
notb
dec
push
and
insb
sbb
push
xchg
into
test
inc
mov
jnp
data16
adc
mov
loopne
cmpsb
mov
adc
add
sbb
lret
pop
push
push
lret
push
sbb
les
jmp
lock
mov
and
hlt
push
jmp
ret
or
outsl
iret
dec
lea
jb
push
sbb
inc
fwait
popf
and
cmc
out
stos
bound
lcall
push
mov
jns
or
inc
sub
dec
sub
jl
and
addr16
sub
negl
add
je
jbe
jecxz
dec
dec
mov
loope
jne
mov
and
dec
aad
sub
movzbl
xor
orl
js
lea
fimuls
xor
fcoms
push
inc
dec
cmpb
shl
lods
add
aad
inc
arpl
dec
mov
setne
in
push
fs
sub
mov
and
sub
adc
jecxz
sbb
pushf
fst
das
inc
pushf
dec
daa
cmp
std
fldl
call
push
mov
rcrb
faddp
add
sbb
testl
je
andl
js
bound
cmp
pusha
rcrb
jge
cmpsl
dec
mov
sub
popa
test
dec
mov
push
test
add
je
aam
loopne
xor
imul
push
lods
xor
arpl
pop
stos
mov
adc
pop
sub
or
pop
pop
jns
mov
jmp
cmp
outsb
rolb
cli
in
jb
int3
pushw
xchg
sarb
cmp
and
scas
aad
cmp
mov
hlt
pop
sbb
insb
dec
ret
push
and
test
out
xor
mov
mov
lret
jo
mov
pushf
and
jb
adc
mov
inc
mov
push
repz
push
test
je
push
lods
sub
mov
cmp
mov
daa
inc
cmpsl
jg
add
out
dec
hlt
and
shl
mov
in
mov
xor
in
in
jmp
xor
push
test
xchg
call
inc
movsb
bound
outsb
xchg
sahf
sub
sbbl
cld
loopne
and
lods
xchg
test
jp
inc
inc
repz
mov
add
sbb
daa
pop
and
test
rcl
lea
fmulp
pop
dec
xchg
jle
mov
daa
out
xchg
insb
add
sub
push
mov
jne
icebp
xchg
mov
mov
xlat
cmc
outsl
dec
xor
divb
popf
mov
test
and
shrb
xchg
daa
hlt
mov
dec
add
jmp
sbb
or
or
sub
movl
and
ret
cmpsb
add
addr16
jnp
cwtl
push
push
fisttpl
ret
or
in
jo
int
adc
lds
shlb
into
mov
repnz
scas
inc
add
js
mov
xor
mov
dec
outsl
insb
pop
test
fwait
lcall
scas
jmp
js
xor
mov
adc
fisubl
inc
adc
int
jbe
ss
shrl
push
lret
stos
jne
or
or
cmp
dec
adc
stc
mov
pop
in
les
bound
push
xchg
add
aam
mov
in
mov
fsubl
mov
leave
daa
dec
cmp
pop
pop
xchg
cwtl
dec
popf
pop
cmpsb
roll
xchg
and
pusha
add
add
sub
loop
xchg
loop
ret
push
pushf
xor
adc
movsl
adc
cmpsb
jo
rcrb
push
xchg
ljmp
shlb
addr16
jb
xchg
out
jg
fs
test
daa
test
push
pop
cmpsl
mov
and
cltd
inc
inc
pusha
jb
push
jmp
mov
iret
dec
in
int
adcl
push
into
mov
inc
pop
lds
pop
inc
jns
jge
push
jae
rolb
aas
stos
xor
je
dec
push
add
or
lea
dec
pop
lock
popa
ret
pop
testl
movsl
jle
or
scas
sub
pop
xor
and
andb
mov
les
lock
sarl
adc
cmc
cmc
ret
push
push
or
adc
ror
mov
mov
mov
inc
pop
in
or
imul
sub
adc
test
popl
aad
sub
jne
imul
or
aas
jg
jns
add
pusha
enter
jge
or
ljmp
push
mov
jae
ljmp
adc
push
or
je
inc
out
std
xor
jl
sub
daa
or
das
imul
fdivl
pop
out
push
sbb
imul
dec
sar
cmovns
ds
mov
test
outsl
outsl
mov
sub
test
add
add
mov
mov
orb
pop
push
push
mov
push
je
into
popw
out
xor
inc
sbb
out
add
insl
mov
loope
mov
hlt
pusha
mov
push
inc
int
adc
popf
add
ss
or
in
jns
outsl
xor
je
mov
int
push
and
cmp
pop
mov
mov
push
clc
int3
push
push
andl
pop
ffreep
jo
iret
lds
in
scas
sti
out
xchg
scas
push
aad
int
xchg
mov
add
cmpsb
jno
cmpsb
and
enter
pop
mov
cld
xchg
push
xor
mov
icebp
outsl
std
mov
fstps
mov
repz
sbb
in
xchg
sub
and
sbb
xlat
ljmp
mov
dec
imul
add
cmp
test
dec
mov
adc
mov
fildll
repnz
imul
xlat
out
sbb
and
icebp
add
add
and
insl
xor
lods
clc
out
cmp
out
adc
pop
jno
cmp
xor
inc
jg
and
mov
dec
or
push
xor
pop
test
sub
mov
rcrb
jge
dec
and
xchg
lea
sbb
xor
jp
mov
lods
push
or
xorl
movsl
or
xchg
jle
cmp
adc
cmp
lcall
daa
fnstsw
int
ja
jg
scas
xchg
sbb
add
push
mov
xchg
xor
xor
xor
jbe
dec
pop
cmpsl
arpl
mov
ficoml
out
subb
cmpsl
cmovae
mov
pushf
mov
stos
pusha
mov
lds
sti
pop
cmp
insb
adc
mov
lahf
sub
das
call
push
in
clc
xchg
movsl
imul
jp
xor
jo
and
fidivs
sub
sarl
cmc
or
lcall
xchg
stc
sbb
in
cwtl
ja
mov
or
xchg
stc
aaa
out
xchg
add
je
outsb
xchg
cmp
addb
test
mov
bound
stos
lret
xchg
popa
jecxz
popa
add
adc
bound
adc
fidivl
outsl
add
pop
mov
lds
jb
and
mov
inc
mov
inc
imul
pop
cmpxchg
sub
movsb
sbb
sarl
inc
jg
cmp
js
shrb
or
and
adc
adc
xor
push
jnp
pop
bound
and
add
xchg
sarb
cwtl
cmp
stc
fldl
mov
in
pop
jne
push
add
cmp
lcall
inc
enter
cmp
jl
lods
push
cmp
enter
push
aaa
and
lret
out
decl
xor
adc
xchg
cs
xchg
inc
js
cmp
test
pop
fisubl
sub
int
push
pop
mov
push
cmc
add
mov
mov
subb
push
aad
jns
xchg
mov
andb
add
jb
mov
lcall
dec
iret
daa
mov
xor
sub
push
mov
push
inc
unpcklps
hlt
lock
pushf
test
mov
jp
lret
mov
jnp
mov
or
mov
fwait
pop
sub
mov
jge
fs
cmpsb
push
sbb
ss
push
mov
lods
jb
enter
arpl
loope
sbb
test
mov
testl
pop
je
fldl
ljmp
aaa
sub
mov
sub
add
and
mov
bound
aam
sahf
and
cmc
adcl
xchg
mov
fcoml
out
adc
inc
cltd
scas
clc
or
out
xor
subl
aas
rcll
cmp
pop
ds
loop
mov
xor
mov
push
nop
fdivl
sub
in
xchg
addr16
mov
sbb
icebp
push
sub
hlt
adc
cmpsl
lret
icebp
cmp
std
dec
inc
or
pop
inc
cli
xor
pop
pop
pop
mov
jns
stc
pop
add
dec
push
gs
ss
fs
into
fisttpll
es
enter
in
ja
std
daa
test
aaa
xchg
or
inc
lret
push
test
and
jmp
jle
lea
cmp
jbe
xchg
lahf
and
mov
push
inc
popf
js
pushf
mov
ret
adc
or
js
es
lret
in
lods
mov
js
out
ret
pop
rol
pusha
icebp
frstor
loope
inc
dec
cmc
sub
cmp
loope
scas
movsl
inc
lret
mov
or
outsl
sti
lcall
sbb
adc
or
scas
jne
imul
push
add
pop
mov
sbb
adc
pcmpeqb
xchg
and
out
sub
jnp
cmpsl
add
push
mov
jbe
sarb
out
insb
and
jns
shll
pop
stos
mov
fwait
pusha
or
xor
int
lods
or
push
daa
syscall
pop
leave
loope
push
xchg
movsb
loope
fsubl
arpl
lahf
pop
sub
test
cmp
iret
and
jge
ret
pop
push
sub
int
adc
push
js
mov
les
aas
jae
add
mov
shl
inc
mov
dec
inc
jb
xor
xchg
int
loop
sbb
not
jae
sbb
pop
ret
xorps
xchg
jp
outsb
cmc
rolb
add
cwtl
push
inc
mov
in
out
jmp
mov
inc
int
jo
aaa
rorb
jp
arpl
rcr
mov
dec
sbb
adc
xchg
jle
sbb
imulb
mov
cmp
in
xchg
lods
stc
roll
sub
clc
pop
sub
mov
out
mov
push
fisttpl
sbb
aaa
xchg
inc
xchg
jae
adc
jo
stc
clc
js
inc
push
adc
jl
inc
idiv
inc
push
jg
pop
jae
fs
jns
nop
mov
sub
fisttpll
fldenv
inc
xor
or
orl
sahf
aas
imul
imull
mov
sbb
mov
push
es
jge
dec
dec
push
pop
mov
cld
inc
dec
push
jbe
jecxz
jno
sbb
dec
dec
outsb
test
pop
and
imul
sbb
add
and
xchg
out
add
inc
insl
cli
mov
ret
mov
add
imulb
cld
dec
push
xchg
sub
push
lahf
dec
and
sbb
or
mov
dec
pop
lock
and
cmc
push
stc
pop
xchg
pop
cltd
shll
pop
sbb
fstpt
push
mov
pop
sbb
ljmp
or
dec
pop
fiadds
fsubrp
test
into
out
test
fld
inc
jae
sub
lret
daa
bound
lock
inc
out
lock
ss
gs
ds
mov
or
lods
pop
jno
ret
cli
pop
mov
pusha
pushf
aaa
out
and
mov
cmp
xchg
jle
gs
and
loope
inc
jne
lcall
mov
out
xor
shll
adc
and
or
nop
addb
dec
insl
ss
inc
dec
adc
imul
or
pop
mov
add
or
add
inc
dec
pop
or
xchg
mov
fdivp
jno
dec
cld
sbb
add
pusha
aad
push
or
clc
dec
pop
cmp
xchg
out
clc
ss
or
lds
imul
xabort
cwtl
pop
cmp
mov
or
push
popa
les
in
mov
inc
and
shl
testb
pop
sbb
pop
popf
and
add
out
popa
push
or
cvtps2pi
leave
jb
aam
insb
add
sub
mov
sbb
sbb
lods
out
test
mov
mov
mov
aad
arpl
je
cli
scas
in
jne
loope
push
je
cmp
repz
cmp
xorl
mov
fsts
xchg
mov
mov
dec
aas
rcll
orb
shlb
or
mull
popf
fwait
sub
pop
loop
mov
xor
ss
xor
jns
aaa
stos
mov
dec
dec
fwait
dec
outsb
cli
stos
js
hlt
sbbb
dec
aam
or
aas
mov
cmp
cmp
flds
pop
sbb
xchg
xor
and
shrl
icebp
les
mov
jns
mov
mov
lods
push
mov
add
clc
fidivrs
inc
jl
test
je
and
add
out
das
outsb
scas
das
xchg
mov
sub
int
push
jle
hlt
xor
rclb
mov
fisttpll
sarb
test
das
in
sbb
lock
xor
jp
rorl
cmp
pop
int
testl
xchg
scas
dec
adc
xchg
add
ljmp
fnstsw
aaa
repnz
aad
fistl
iret
test
xor
mov
pop
xchg
inc
mul
lods
adc
push
xor
adc
lret
mov
add
rcrb
mov
jbe
mov
jae
mov
mov
push
dec
cmp
leave
andb
gs
insl
nop
bound
mov
sub
lret
mov
roll
push
add
jg
ret
jno
xchg
adc
sub
stc
enter
cmpsb
aaa
call
ljmp
mov
xor
jnp
pop
movsl
nop
je
pop
lods
stc
inc
int3
or
push
sub
in
xlat
jb
je
fildll
add
dec
push
cmp
jns
inc
mov
fisttpl
icebp
adcl
sbbb
jmp
push
js
sbb
lahf
mov
push
ret
or
pushf
jl
shrl
sub
ss
xor
xchg
xor
or
scas
daa
add
xchg
xor
add
or
ss
mov
cmp
imul
dec
jge
clc
ja
ret
adc
mov
popf
enter
push
enter
mov
fisubrs
pop
jnp
in
test
mov
pop
jl
cltd
pop
jmp
mov
mov
sbb
gs
jae
jl
inc
clc
or
jno
data16
addl
pop
and
std
jl
cmp
or
xor
aad
mov
and
scas
scas
in
xor
jns
lock
xchg
mov
dec
leave
xchg
xchg
dec
cmp
ss
and
dec
mov
pop
push
sub
sub
or
jbe
xor
mov
sti
in
push
mov
sbb
stos
and
daa
xor
push
icebp
int
in
xor
sbb
es
mov
test
dec
stc
mov
mov
in
enter
mov
gs
sahf
sub
clc
inc
inc
enter
mov
inc
call
sub
push
sub
adc
test
push
adc
stc
mov
outsb
clc
icebp
cmp
outsl
cld
push
adc
dec
mov
inc
and
aaa
iret
xchg
jb
adc
stc
test
pop
js
out
inc
and
dec
push
test
add
jae
mov
push
movsb
into
icebp
ss
cmpsb
arpl
out
cmp
imul
bound
jge
dec
cld
xchg
es
adc
push
push
int3
fidivrs
sub
cltd
iret
stos
insl
jns
ja
pop
xchg
in
jb
rcrb
jbe
push
mov
sbb
outsl
aad
mov
xor
lods
fists
imul
mov
and
xor
sbb
movsl
or
dec
sbb
or
add
dec
or
sahf
sbb
aaa
push
sbb
mov
xchg
dec
ljmp
jle
mov
fsubrl
clc
icebp
jecxz
data16
mov
jmp
mov
push
orb
iret
sbb
and
sub
xor
push
jnp
pop
mov
jmp
sub
stc
inc
nop
ret
popf
mov
jmp
mov
loop
and
sub
leave
mov
aas
out
sub
adc
jae
mov
in
or
mov
dec
in
les
lret
out
jno
push
inc
mul
fmuls
inc
and
rcrb
sbb
fisttps
popa
mov
xchg
gs
jne
jle
idivl
inc
aas
imul
dec
jae
cmpsl
hlt
or
rcll
mov
push
and
test
decl
inc
insl
adc
push
inc
lods
cmp
xor
pop
fstl
test
dec
ja
jo
sub
jge
cmp
outsb
xchg
jge
mov
mov
out
mov
jne
or
mov
rep
mov
jne
or
jne
and
adc
iret
or
mov
addr16
sahf
adc
cmpsl
add
mov
mov
stc
or
jb
and
xor
ja
cli
sub
cltd
xchg
adc
mov
jecxz
add
dec
mov
mov
cmp
xor
movl
cmp
mov
sbb
mov
mov
mov
fnsave
aaa
cmc
sbb
xchg
lcall
ds
les
and
bound
lahf
sbb
mov
fisubs
inc
js
in
xchg
into
test
lcall
push
insl
dec
jmp
cmc
sbb
aad
add
ja
inc
das
lods
pop
jg
pusha
rep
stc
xchg
lods
mov
jmp
sub
rcll
rolb
pop
jge
add
int
es
gs
jbe
jo
scas
dec
out
xchg
xchg
lock
jecxz
push
loop
push
cmpb
sub
shll
incl
xlat
sbb
cmc
pop
mov
xor
repnz
add
pop
push
pop
sbb
sbb
pop
pop
lret
or
dec
xchg
pop
pop
or
sub
sub
mov
sub
call
fidivrl
jl
in
xchg
loope
and
add
imul
insb
sub
inc
mov
loopne
or
mov
push
jno
frndint
push
fld
push
push
fs
mov
jge
pop
xchg
xchg
into
and
cmp
in
mov
adc
xor
pushf
push
nop
mov
testl
pop
inc
sub
jnp
adc
imul
and
cmp
adc
aas
fstcw
cmp
int3
cmpsb
mov
xor
in
imul
rcrb
xor
jmp
sahf
lock
loop
jb
mov
xchg
mov
push
sub
int3
pushf
push
fidivrs
push
psubsw
js
xchg
dec
jae
mov
cmp
shlb
bnd
add
out
dec
inc
and
mov
dec
nop
mov
cwtl
shlb
orl
adc
ret
sbb
jno
imul
push
outsb
pop
or
scas
mov
pop
xor
divl
mov
test
push
inc
cli
popf
or
push
xor
adc
ret
mov
pop
pop
jecxz
add
fwait
stos
sar
mov
adc
mov
jmp
inc
cmpsb
or
cmp
jbe
xlat
int3
dec
test
xor
lods
scas
les
pop
adc
dec
repz
push
out
jnp
inc
pop
je
inc
mov
imul
hlt
xchg
fs
arpl
outsl
mov
inc
movsl
sbb
lahf
pop
dec
lret
aad
daa
into
mov
scas
sbb
or
arpl
stos
rorb
ss
fnsave
mov
jg
add
mov
jbe
pop
jp
bound
sub
ss
lret
inc
mov
lret
or
jmp
popa
outsl
jp
shr
in
and
loop
inc
and
jge
mov
iret
jmp
push
movsl
or
out
fidivrl
loopne
cwtl
outsb
aam
jae
mov
aas
ds
pop
xchg
out
push
aas
mov
js
pop
fmuls
mov
sbb
push
aas
mov
js
pop
fmuls
mov
pusha
out
rcr
iret
dec
aas
pusha
das
test
cwtl
js
pop
clc
dec
enter
sub
js
push
rolb
mov
ud0
jo
pop
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fildl
mov
ficomps
inc
rcll
inc
std
adc
and
adc
inc
mov
jno
xchg
jge
insl
xchg
pop
mov
sarl
or
inc
std
repz
ficoms
popa
popf
jno
cwtl
mov
inc
test
xor
add
sbb
dec
test
int
cld
sbb
adc
sbb
in
sub
leave
shrb
int3
cli
jbe
callw
fwait
xor
popa
jle
andl
mov
rcll
xchg
cmp
fmulp
cmp
std
cmp
clc
lea
xchg
ljmp
shrb
add
sub
mov
arpl
insl
inc
pop
cmp
sbb
icebp
repnz
cmp
add
pop
cwtl
out
inc
outsb
mov
mov
adc
icebp
dec
loope
or
in
xor
xor
jmp
push
and
popf
mov
jb
out
pop
cmp
jl
pop
int3
add
fiaddl
fmulp
xor
sub
jno
inc
jge
jp
dec
cmpsb
push
sarl
call
cmc
cmp
sub
pop
movsl
dec
mov
repnz
insl
les
movsl
imul
xchg
adc
sub
popf
adc
addl
mov
popa
add
mov
and
adc
jno
call
cmp
cmp
sbb
adc
and
xor
inc
mov
jno
cmpl
dec
sarl
or
and
xor
inc
mov
jno
cmpl
pop
out
add
sbb
filds
add
mov
mov
shlb
sbb
jg
out
inc
xchg
enter
les
aad
imul
jg
xor
movsl
fidivrs
out
jge
jl
mov
push
sbb
test
int3
xor
les
ror
pop
cmpsb
inc
xchg
cmp
mov
ja
imul
dec
cmp
add
mov
push
push
loop
dec
fnsave
fdivrl
lods
jno
call
dec
aad
cltd
add
jb
sbb
nop
popa
popf
add
lods
push
or
jle
push
les
addr16
cmpsb
das
jl
lds
mov
push
pushf
inc
cmp
inc
jns
test
call
mov
mov
shlb
arpl
xlat
out
cmp
negl
cmc
xor
cli
xor
jmp
push
imul
mov
push
mov
sub
mov
hlt
test
push
sti
fsubr
xor
push
icebp
sti
rcrb
cmpsb
add
iret
gs
repnz
sub
jns
aaa
mov
sbb
scas
sbb
sar
lahf
xlat
xlat
adc
lcall
xor
out
ss
or
dec
in
sub
fwait
dec
jmp
pop
insb
push
xchg
sbb
push
push
mov
pusha
add
dec
and
add
enter
repnz
cmp
movsb
aaa
in
jl
nop
clc
outsb
jae
negl
flds
aaa
insb
daa
aas
mov
jne
pop
call
push
push
aam
push
push
inc
hlt
je
pop
les
mov
shll
push
inc
addr16
rcll
fdivrl
push
xor
loopne
push
and
fimull
mov
loop
mov
dec
dec
mov
roll
dec
clc
cwtl
sbb
bound
dec
pop
push
test
into
lret
cmpsl
mov
cmpsb
enter
stos
leave
insb
mov
sbb
into
and
insb
sub
xchg
push
mov
std
or
repnz
dec
push
arpl
test
or
lods
push
in
fdivrl
xor
cli
int
xchg
fidivrl
or
adcb
enter
pop
push
xorl
cli
xor
das
xor
xchg
xor
mov
inc
dec
push
fdivp
fiaddl
pop
pop
pop
adc
out
mov
outsl
leave
sub
inc
pushf
cmovs
fiaddl
cwtl
repnz
iret
add
cmp
xor
rcr
imul
sub
in
lock
push
notl
mov
lods
mov
shr
je
aaa
cmp
adc
fdivl
sbb
mov
fs
iret
cmpsb
add
loopne
mov
test
sub
lcall
cmp
out
data16
jne
add
lods
inc
mov
fwait
dec
popf
mov
mov
dec
gs
jmp
ret
adc
sbbl
lcall
addr16
repnz
imul
lea
pop
repnz
mov
enter
xor
sub
dec
fs
lret
shl
pop
jp
pop
mov
sbb
inc
or
paddusb
dec
xchg
ljmp
jp
aaa
inc
lcall
repnz
loop
ds
loope
in
loope
test
jmp
iret
adc
push
sub
jns
shr
xchg
int3
fcmovu
mov
xchg
gs
fs
and
fcmove
cld
mov
insl
int
mov
es
nop
test
push
sahf
shl
mov
ljmp
repnz
and
inc
fcomps
xlat
mov
aam
adc
loopne
lret
mov
xor
faddl
lcall
push
popf
dec
add
cltd
mov
inc
xchg
scas
mov
cmp
push
mov
gs
movsb
and
jae
rcrb
pop
test
dec
sbb
out
xor
pop
push
xor
push
ljmp
iret
int3
dec
mov
stc
push
add
cmpsl
push
mov
or
pusha
inc
fdivs
cmp
lods
es
pop
cld
mov
lods
pushf
int
sub
enter
mov
out
inc
fsubl
out
or
or
mov
xor
dec
mov
lret
sbb
push
mov
mov
mov
inc
insb
popa
jmp
mov
loope
sahf
cmp
jae
jle
loopne
push
inc
xorb
xor
sub
sbb
xchg
aaa
sbb
orb
out
int
ficoml
fistpll
xchg
pop
mov
jae
data16
es
inc
and
test
push
js
inc
sub
jl
jg
mov
mov
pusha
cmpsb
push
jle
lock
sahf
popa
or
or
ljmp
out
dec
dec
dec
sahf
clc
push
data16
or
cmp
pop
outsl
lods
pop
or
jecxz
sahf
push
cmp
nop
aad
das
pop
jg
inc
adc
cwtl
adc
int
in
mov
mov
and
inc
lea
xchg
aas
sub
mov
mov
pop
in
pop
lock
mov
nop
shll
gs
cld
ret
subl
int
mov
jge
cmpsb
insl
xor
hlt
or
xchg
dec
or
adc
xor
mov
sub
sbb
jne
frstor
jne
jae
inc
cmpsl
dec
imul
mov
mov
and
in
out
or
xchg
js
jg
aaa
push
jge
out
xchg
mov
into
inc
das
sbb
sbb
fists
adc
dec
jnp
add
mov
imul
xchg
ret
inc
mov
mov
rcrb
scas
leave
and
mov
movsb
and
fucomp
adc
add
lret
fnstsw
pop
xor
xchg
pop
lea
scas
test
fnstenv
xor
fdivl
js
or
dec
jo
xor
cwtl
push
ret
lret
jo
xchg
pop
sbb
push
mov
adc
mov
aad
mov
rolb
fldt
cs
andps
movsb
adc
aaa
cmpsb
mov
xchg
pop
cli
cmp
mov
lods
add
push
dec
mov
lock
xchg
add
in
dec
push
loope
sub
orl
fcoms
imul
aas
xlat
or
stos
iret
sbb
dec
add
rcr
dec
into
repnz
and
push
sbb
mov
int
xchg
pop
test
cmp
dec
gs
dec
add
dec
mov
stos
xchg
mov
push
or
xchg
sub
adc
pop
loop
adcl
mov
in
mov
adc
gs
jge
mov
adc
mov
xor
idivb
or
mov
scas
xchg
adc
lods
clc
jp
pusha
pop
mov
push
xchg
es
negl
mov
sbb
loopne
add
add
sub
xor
stc
dec
mov
movsb
add
out
cwtl
jnp
and
push
lret
cmp
fiaddl
mov
jg
cld
das
ret
adc
sbb
mov
les
mov
xchg
loopne
es
push
mov
inc
xchg
xlat
pop
cmp
data16
fisubrs
inc
xor
jns
mov
ret
jl
cmpsb
sub
icebp
xchg
dec
cmp
cmp
mov
lock
out
inc
inc
pusha
clc
scas
hlt
in
jno
scas
loop
sub
mov
in
loope
pop
pop
shlb
xchg
pop
add
test
ja
mov
mov
push
dec
shrl
or
pop
mov
adc
push
inc
cmpsb
sbb
add
or
mov
pop
inc
cmp
int3
jmp
out
or
jb
jbe
inc
adc
in
xchg
xchg
jp
jb
stos
lea
or
repz
test
ror
test
and
mov
icebp
xchg
ss
movb
bound
sti
push
xor
mov
test
popf
dec
neg
and
xchg
outsb
fs
xchg
cld
mov
in
lds
out
sbb
jno
xor
pop
mov
movsl
dec
into
sbb
sub
mov
cmp
mov
xor
inc
ja
mov
pop
std
xchg
adc
gs
add
nop
aad
aas
sub
ds
fcoml
jns
shrb
les
fldcw
sbb
loope
sbb
xor
ficoms
iret
or
push
mov
pop
cli
bound
aas
mov
sbb
or
leave
push
mov
movsl
inc
mov
sahf
repz
sub
push
das
gs
jg
inc
add
test
leave
in
les
mov
hlt
xchg
lret
push
xchg
out
lahf
pop
in
jae
push
xor
cmp
gs
push
and
mov
jge
inc
ja
push
outsl
sub
mov
add
and
nop
aas
dec
out
bound
inc
les
ja
in
ljmp
jae
hlt
iret
mov
xor
aaa
add
fucom
movsb
xor
pop
fstpl
and
jecxz
pop
loopne
jae
ljmp
mov
xlat
ret
xor
inc
fcoms
adc
jae
xchg
dec
adc
or
mov
mov
xchg
fnstenv
test
les
sbbb
mov
outsl
es
xor
jno
mov
push
fs
les
pop
in
cmpl
in
jmp
cwtl
aaa
pop
xor
lock
cld
std
decl
mov
dec
popl
add
adc
out
jle
mov
mov
xor
ror
rorb
enter
mov
xor
sub
dec
test
cmp
push
push
xor
jb
mov
pop
mov
fldcw
out
sub
jg
loope
xchg
imul
xchg
inc
inc
mov
in
dec
loope
mov
inc
inc
jne
sbb
loop
xchg
leave
xor
fs
mov
dec
inc
mov
fidivl
in
mov
mov
jbe
out
inc
dec
push
rcrb
dec
inc
in
mov
in
cmpl
nop
pop
test
or
dec
jns
fwait
jbe
jecxz
cltd
push
push
mov
mov
or
into
push
xlat
out
adc
inc
cli
sub
roll
in
push
dec
icebp
loope
in
push
mov
pop
int3
push
xchg
and
cs
or
call
inc
adcb
outsb
cld
sbb
shrb
adc
and
jae
lods
out
mov
push
xor
jmp
xchg
cmp
xchg
sbb
popf
cli
inc
mov
add
jae
mov
mov
in
test
and
cmp
dec
shl
stos
stos
nop
in
xor
add
mov
add
and
cmp
pushf
pushaw
cmp
sarb
ret
cmp
or
int3
subb
mov
mov
insl
pop
push
gs
or
sti
loope
das
mov
bound
jle
rorb
aad
push
outsl
cmp
sub
push
ficoms
xchg
jp
cmp
sar
cltd
into
stos
fs
lds
cmp
gs
adc
scas
sbb
xor
or
xchg
cmp
mov
pushl
js
hlt
adc
and
sub
loop
and
xlat
xchg
out
adc
popf
lods
cmp
rcr
cmpsb
mov
aas
rcll
push
notl
lret
xchg
fsqrt
jne
pop
xor
dec
outsb
push
mov
in
outsb
xchg
inc
and
movsb
ds
lods
test
add
insb
mov
arpl
xchg
pusha
sub
movl
add
sbb
sub
add
and
xchg
dec
pop
fcomps
in
es
xchg
arpl
or
mov
popf
ja
add
cmc
negb
and
lahf
dec
inc
enter
mov
and
cli
shrl
mov
insb
mov
add
fcomp
mov
in
add
adc
mov
mov
stc
int
jmp
mov
arpl
lods
repz
imul
inc
push
dec
pushf
push
test
xchg
cld
icebp
add
sbb
sarb
or
enter
and
dec
push
idivl
inc
dec
pop
frndint
mov
dec
out
sti
fildll
xlat
xor
iret
sbb
int
push
add
not
in
aad
sbb
ja
bound
mov
stos
mov
adcb
inc
repz
jge
int3
sub
cmpsb
movsl
pop
scas
xor
mov
cld
stos
xorl
pushf
dec
popa
scas
bound
add
pop
addl
sbb
test
or
mov
fwait
xchg
in
jno
leave
jnp
jecxz
cmp
cmp
gs
sarb
nop
mov
pop
mov
rcll
mov
test
jo
sar
jb
leave
arpl
fs
or
add
inc
inc
sub
sarb
dec
xor
insb
testb
and
aam
mov
cld
aas
mov
inc
stos
cmp
lds
inc
call
fs
out
push
jb
xor
jmp
pop
fmull
mov
pop
xlat
adc
mov
push
mov
adc
jg
sahf
out
in
mov
lods
jno
xor
jnp
fmulp
loopne
stc
mov
fdivs
popa
mov
fidivs
adc
mov
iret
push
repz
and
fnstcw
je
movsb
dec
xor
dec
aas
les
pop
imul
dec
xlat
mov
xor
notl
fsubs
push
xlat
dec
jo
adc
xchg
cmp
dec
cmc
aam
je
popf
or
or
fildl
jo
test
std
mov
test
pop
add
out
std
and
dec
out
adc
xchg
xchg
and
lret
aaa
inc
sbb
out
jle
ljmp
lret
insl
stos
mov
jnp
into
dec
inc
inc
dec
push
int3
xchg
dec
jecxz
inc
mov
or
stos
cmp
xor
jb
sbb
js
aaa
pop
movsl
aam
mov
adc
cmpsb
or
add
or
shlb
fisubs
out
movsl
test
sub
sbb
std
adc
sbbb
imul
jns
js
adc
das
pop
scas
pop
xchg
outsb
xor
push
int3
sub
aaa
dec
ret
gs
cmp
adc
lea
cmp
mov
pop
hlt
addr16
pop
in
pop
and
mov
xor
and
inc
xchg
sub
pusha
imul
test
out
add
icebp
fdivp
dec
fisubrl
xchg
mov
mov
addl
popf
or
lcall
inc
dec
dec
mov
push
xchg
pusha
mov
int
jae
clc
and
sahf
jp
xchg
loop
mov
xlat
jle
out
clc
mov
sub
pusha
testb
jae
sahf
icebp
es
push
push
cmc
sbb
pop
mov
push
push
daa
adc
stos
mov
mov
int
mov
or
mov
addb
push
adc
lock
inc
loop
and
insl
and
push
fistpl
enter
test
roll
fcompl
gs
push
push
push
and
lea
cmp
dec
push
pop
pop
aas
jo
test
xor
imul
inc
into
dec
and
sub
lahf
orb
pop
fldt
test
jge
xor
mov
sbb
jecxz
inc
mov
mov
sahf
or
shll
push
lea
xchg
iret
inc
lret
mov
lock
add
pop
subl
jns
outsb
in
pop
bound
lea
pop
popa
sbb
repz
push
int
mov
rol
pop
pop
into
or
and
scas
stos
pop
in
pop
xor
mov
adc
jns
pop
fidivl
mov
lcall
dec
cmpsl
jge
lcall
stos
jns
dec
xor
adc
fs
mov
jg
pop
fwait
mov
lea
lret
ficomps
jne
mov
jecxz
and
jnp
or
out
pop
jo
aad
push
jo
lods
jg
push
xchg
test
addr16
pop
push
lods
je
mov
jbe
inc
cmpl
dec
enter
jg
lods
and
inc
lret
clc
jb
aam
push
enter
dec
adc
movsb
jae
imul
xor
push
jmp
mov
push
mov
ss
sbb
mov
in
mov
pop
mov
cltd
dec
pop
mov
iret
mov
pop
push
iret
lods
inc
add
and
pop
sub
pop
test
inc
sub
cmc
cmp
adc
jbe
jle
in
inc
and
or
sbb
loopne
or
xor
imul
pop
cmp
movsb
scas
cmp
push
mov
adc
outsl
inc
shrl
jmp
mov
or
cwtl
pop
sub
and
stos
jb
test
jle
js
cltd
pop
push
lock
sbb
xor
imul
xchg
faddl
cmp
es
jae
mov
pop
lock
push
adc
inc
and
aas
in
and
ficoml
mov
pop
fldenv
cmp
out
js
es
pop
cmp
xchg
jmp
iret
aam
shl
icebp
fldenv
mov
push
mov
xor
fldl
or
rclb
jmp
in
dec
adc
dec
cltd
daa
repz
jae
cmc
mov
stc
mov
mov
sbb
mov
mov
xchg
mov
jp
loopne
xchg
ret
sbb
pop
scas
adc
or
enter
shrl
push
push
or
and
arpl
jnp
xor
jge
mov
rclb
inc
insl
es
cmpsl
dec
js
or
sbb
push
xchg
rol
loopne
sbb
dec
das
push
adc
lea
sbb
mov
testl
add
cmp
mov
add
sahf
bound
adc
push
sbb
inc
fsubs
ds
loop
subb
jne
mov
lret
daa
testb
into
mov
idivl
push
pop
int3
cltd
out
or
cmp
psrld
outsl
icebp
sub
nop
leave
jp
xchg
jns
out
test
lods
sbb
popf
fisubrl
inc
inc
push
jbe
mov
clc
cwtl
pop
js
cltd
fcompl
decb
neg
cmp
and
mov
adc
jnp
hlt
sub
jnp
rorl
movsb
sub
pop
insl
adc
xor
daa
fisttpl
xchg
aam
ficomps
push
xchg
adc
push
movsl
cmp
mov
xchg
cmpb
nop
cmp
pop
sti
aad
lods
dec
test
dec
inc
xchg
jmp
lock
std
ficompl
das
stos
jg
xor
mov
out
sub
mov
sub
enter
lahf
pop
iret
test
jmp
insb
jno
not
bound
negb
popf
sbb
adc
jg
inc
lret
inc
xchg
mov
mov
mov
pop
inc
std
test
sahf
sarl
rorb
mov
mov
loopne
shl
sahf
aad
fwait
jno
fildl
adc
sbb
sahf
cmp
and
in
mov
mov
jae
cwtl
ss
add
jmp
xchg
in
test
and
cmp
xchg
cmp
jmp
xor
rcll
xor
mov
and
mov
ljmp
sub
add
ret
pop
or
lods
xorb
and
pop
or
push
in
nop
inc
clc
pushl
clc
imul
insl
xchg
xchg
and
adc
push
push
ret
push
inc
add
jl
rcl
in
loop
popa
stc
inc
into
pop
je
pop
jecxz
loop
das
mov
imul
hlt
sub
dec
call
rcrb
nop
jbe
scas
jge
mov
jb
pop
xchg
adc
nop
pop
cmc
cwtl
lret
push
add
sbb
rclb
call
rcr
adcl
jb
rol
or
push
sbb
cmp
dec
popf
popa
and
call
mov
ret
cltd
push
scas
in
push
jmp
iret
sub
stos
push
jo
int
and
fisubl
cld
inc
sbb
xchg
push
xchg
rorl
push
out
ds
xchg
or
add
inc
inc
insb
lret
jge
mov
cmpb
push
cmpsb
mov
les
bound
out
mov
pop
xchg
inc
out
call
mov
sbb
addl
mov
fisttpl
sub
sub
dec
xor
outsl
arpl
outsl
sub
ds
dec
pop
jb
pop
jle
js
decl
test
aas
cmpsb
xor
push
mov
les
ret
and
lfence
xorl
adc
mov
mov
adc
lret
inc
aaa
adc
jl
or
std
jb
push
mov
cmp
cmp
adc
popf
icebp
inc
xchg
mov
inc
loop
int
insl
leave
mov
dec
sarl
or
and
xor
inc
mov
jno
cmpl
dec
sarl
or
and
xor
inc
mov
jno
cmpl
dec
sarl
or
and
mov
inc
lea
pop
mov
sarl
or
mov
xor
sahf
bound
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
