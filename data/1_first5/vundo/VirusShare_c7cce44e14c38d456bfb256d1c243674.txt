add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
dec
lds
mov
fwait
add
iret
pop
or
pop
add
add
add
add
push
add
or
add
add
add
add
dec
add
pusha
add
add
add
jo
roll
test
push
add
add
mov
add
outsb
add
add
add
add
add
roll
push
add
add
add
push
add
add
add
add
pop
add
add
mov
add
add
add
add
push
add
add
add
add
add
pop
add
lret
add
add
add
add
inc
add
add
mov
add
add
add
push
add
add
adc
adc
pop
add
outsl
add
add
push
add
add
add
pusha
add
add
fadds
adc
add
add
add
add
push
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
xlat
add
push
add
call
add
add
add
push
add
add
push
add
imul
push
add
mov
imul
add
dec
add
add
add
add
add
add
adc
add
mov
push
add
add
add
push
add
addr16
add
xchg
add
mov
movsb
add
add
add
add
add
add
cmp
xchg
add
add
and
push
add
add
push
add
add
add
js
roll
push
add
add
add
add
dec
add
add
add
add
add
xchg
add
push
add
add
jo
roll
push
add
add
filds
push
add
add
add
add
add
add
add
add
stos
add
add
xchg
add
add
and
fiaddl
test
roll
push
add
add
add
pop
add
add
outsb
add
add
inc
add
push
add
adc
add
add
imul
add
mov
add
fiaddl
dec
add
add
add
add
add
out
push
add
add
add
add
popa
add
add
add
add
add
mov
add
add
add
add
or
cmp
mov
add
add
add
popa
add
add
cmp
cmp
add
test
add
and
leave
add
add
add
adc
add
add
add
pusha
add
jns
or
addb
add
add
int3
add
inc
add
add
add
roll
add
add
mov
popl
rolb
add
add
add
dec
add
add
add
add
push
add
add
add
add
cmp
push
add
add
add
mov
roll
or
add
add
imul
add
cmp
sbb
inc
add
add
add
add
push
add
dec
add
add
add
cmp
xor
or
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
addb
add
add
add
push
add
jbe
xchg
add
sbb
adc
dec
add
add
roll
inc
add
add
pop
add
add
pop
add
add
add
add
pop
add
add
pop
add
cs
add
add
sub
mov
movl
lret
sbb
orl
out
testb
lock
pop
ror
mov
scas
push
das
in
popa
in
mov
sbb
push
fnstsw
xchg
scas
test
jp
xchg
mov
repz
aad
hlt
and
mov
js
mov
cmp
push
movsb
cmpsl
pop
push
sub
rcrl
xchg
push
mov
dec
jns
pmullw
dec
pop
pop
mov
dec
fisttpl
mov
daa
out
mov
loopne
dec
stos
enter
ss
mov
cmp
sub
daa
sti
jo
outsb
test
push
dec
lahf
aaa
js
gs
rcrb
and
stc
adc
push
or
inc
and
mov
int
jns
fwait
popf
xchg
into
sarb
mov
sti
xchg
push
jecxz
or
xchg
mov
dec
pop
loopne
sbb
mov
outsb
fmulp
add
sahf
push
aad
test
adc
mov
rcl
in
mov
js
push
sbb
and
inc
xor
in
jg
adc
sbb
sub
inc
daa
daa
xor
push
lret
outsl
push
and
inc
insb
mov
xor
and
jb
fisubrs
mov
out
fidivrl
xchg
mov
xchg
lret
lahf
mov
push
xchg
mov
sub
filds
dec
lods
pop
rcr
dec
bound
idivb
dec
xchg
hlt
lea
mov
scas
flds
imul
nop
insl
xor
sti
adc
es
fcmovbe
testb
fwait
ficoms
mov
cmpsl
fadds
pop
cli
push
outsl
mov
add
pop
jnp
sahf
jmp
test
ret
adc
mov
lock
xchg
add
mov
test
push
adc
pop
mov
popf
or
pop
and
mov
popa
dec
push
icebp
mov
fistpll
jmp
dec
lock
inc
stos
xchg
enter
mov
jb
sbb
add
cwtl
pop
mov
sbb
aam
movsb
mov
repnz
loop
lods
or
aad
xchg
imulb
je
xor
ds
fiadds
adc
jne
das
mov
adcl
fucom
in
repz
mov
dec
out
fs
cmp
outsl
dec
scas
push
aam
sub
pop
pop
in
dec
lret
out
adc
mov
adc
sti
mov
in
jbe
in
dec
xchg
xor
cs
stos
enter
jne
cmpb
inc
xchg
mov
push
cmp
roll
add
add
add
add
add
add
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
js
imul
popf
dec
lea
fcompl
cmp
and
fldt
stos
sbbb
imul
std
sub
sbb
or
sti
cmp
lret
or
fwait
pop
mov
sbb
sti
and
xlat
or
lahf
cmp
scas
jg
iret
das
xlat
sub
into
and
aas
repnz
pop
and
mov
rolb
stos
popa
lahf
mov
xchg
outsb
fucomi
into
jb
call
xchg
or
loop
pop
inc
push
je
test
cs
les
repnz
adc
jmp
into
sbb
rep
mov
xchg
push
mov
lods
mov
jmp
or
mov
xor
loopne
mov
push
jnp
jb
into
mov
xor
push
push
std
pop
stos
js
push
xchg
test
push
pop
call
ret
lods
ds
enter
push
lret
aas
addr16
mov
and
cmp
push
in
sbb
lods
pop
cmp
pop
sti
xor
inc
mov
jg
mov
xor
push
pop
inc
subb
mov
jle
pop
mov
cmp
add
sub
and
sti
push
jmp
out
sub
push
scas
dec
mov
pushf
pop
mov
cmp
repnz
ds
into
pop
dec
cmp
sbb
push
fisttpll
int
cmp
lret
or
fwait
pop
mov
mov
dec
lea
std
sub
sbb
or
sti
cmp
lret
or
fwait
pop
mov
mov
mov
lcall
xchg
jb
xor
xlat
sahf
xchg
out
xchg
xchg
xor
outsb
aad
or
out
xor
sbb
sbbb
pop
es
dec
push
je
cmp
cmp
pop
fcomi
pop
mov
scas
test
cmp
fwait
ljmp
loop
int3
dec
test
mov
stc
cld
mov
nop
fstl
in
lods
stos
xchg
inc
adc
mov
decl
daa
clc
xor
sbb
mov
and
fcmovb
xor
lcall
pop
or
jnp
mov
adc
ret
pushf
mov
xor
mov
sub
xor
mov
mov
cli
cmpsb
mov
fldcw
adc
testl
ret
mov
in
inc
or
aaa
xor
push
repnz
or
mov
lock
and
repnz
mov
enter
js
mov
xor
fisttpll
jmp
fisttpll
fwait
imul
jbe
rorb
ljmp
lcall
lcall
shll
jae
or
cwtl
or
dec
popf
in
sbb
stc
je
cmc
xchg
icebp
push
mov
scas
lds
test
js
in
fs
adc
sbb
sub
add
sti
push
mov
cmp
jl,pn
sub
cmp
mov
aaa
inc
ja
cmp
sub
dec
lods
xor
lods
fimull
cmpsb
push
mov
orb
lds
mulb
inc
pop
adc
adc
push
mov
mov
imul
or
insl
dec
ss
scas
imul
add
or
xor
push
xchg
fisttpll
icebp
imulb
popf
xchg
mov
sub
iret
mov
ss
mov
test
sub
jp
xchg
jo
inc
adc
int3
push
fwait
mov
mov
cli
mov
cmp
pop
inc
adc
das
push
les
pop
lret
jl
cmp
inc
lods
int3
dec
shll
jg
insl
mov
andl
pop
fidivl
jbe
pop
xlat
fwait
mov
mov
shr
popf
aad
adc
push
jns
ja
xor
insl
dec
jecxz
mov
ljmp
cli
bound
ret
les
xor
out
stos
ficompl
adcb
mov
push
out
idivb
inc
addr16
cmp
rol
adc
fmull
or
inc
adc
inc
add
fimull
sbb
push
mov
test
fdiv
daa
cmp
leave
xchg
insl
xchg
mov
xchg
adc
outsb
xor
push
jnp
dec
mov
sbb
loopne
mov
or
mov
fs
mov
addr16
mov
pusha
fimuls
popf
mov
sbb
bound
mov
mov
int3
das
inc
adcb
fcmovu
jg
or
div
mov
pop
push
loop
sbb
push
scas
sbb
jecxz
dec
mov
scas
cmp
push
cmp
movsl
lcall
aam
inc
popa
xlat
arpl
add
call
sub
push
mov
in
inc
int
pop
inc
lods
sub
sbb
jae
pop
nop
or
xchg
fsubp
les
mov
movb
imul
ljmp
loop
fdivs
pop
fcomps
iret
sbb
lods
vmread
or
inc
imul
sahf
hlt
and
aaa
loopne
and
out
dec
addr16
xor
lret
jne
nop
mov
pop
pusha
cmp
into
popa
leave
fmulp
add
and
cmp
sbb
lret
jnp
add
mov
data16
push
scas
sbb
pop
xor
fsubrl
pushf
pop
popf
fnstsw
hlt
mov
or
fnsave
dec
mov
and
movsb
fimuls
test
jb
or
sbb
stos
sahf
push
cmp
add
dec
repnz
pop
mov
sahf
clc
or
push
pop
xor
inc
mov
repz
aad
dec
dec
fiaddl
sti
or
cmp
divb
iret
xchg
aam
in
mov
pushf
push
inc
addr16
insl
gs
loope
push
xor
sbb
jb
mov
or
repnz
insl
shll
mov
dec
scas
orb
js
scas
mov
and
jno
out
shlb
cpuid
es
in
dec
sti
stos
arpl
mov
xchg
cmp
cmpsb
mov
test
popf
clc
or
push
and
shll
stos
xchg
stos
sbb
pop
jmp
mov
xor
pop
cmp
out
fisubl
cmp
cmc
arpl
repz
lcall
into
mov
adc
addb
mov
adc
push
into
aaa
cli
and
call
adc
mov
stc
sbb
and
data16
iret
int
sub
mov
roll
jecxz
adc
push
imul
movsl
cmpsl
cwtl
loopne
lea
ss
daa
dec
sbb
ret
mov
mov
or
push
testl
aaa
cltd
mov
ds
lock
fcmovu
aaa
xchg
inc
shrl
ja
add
test
mov
sti
loope
pushf
repnz
and
iret
jns
mov
lret
dec
stos
loopne
enter
dec
dec
lods
das
cmc
adc
push
mov
sub
cmp
test
fwait
ljmp
or
out
adc
call
sbb
mov
and
mov
outsb
cmp
imul
jmp
push
mov
pop
outsl
adc
imul
fisubrs
add
cmpsl
lret
mov
ja
dec
fidivl
jae
push
les
lock
jl
pop
stos
enter
es
dec
es
arpl
loope
cmc
xchg
loopne
fcmovu
jecxz
out
test
ret
loop
mov
pop
fs
xchg
and
je
pop
xchg
int
jle
xor
push
lcall
inc
xchg
addl
mov
inc
test
dec
pop
dec
mov
fs
test
mov
xchg
clc
jge
push
mov
in
sub
and
jge
dec
xchg
aad
fldt
push
mov
dec
or
test
xor
and
push
data16
subb
popa
cmp
push
inc
sbb
in
jne,pn
or
dec
cmp
push
iret
jge
sub
push
add
jmp
mov
scas
out
in
scas
fsubl
inc
out
sub
enter
aam
fldt
loop
lcall
cmp
cmc
pop
or
enter
jnp
and
lea
sbb
out
xor
mov
popf
lods
sahf
inc
sub
and
lret
sbb
push
divl
les
jb
push
out
fdivr
fisubl
pop
roll
sbb
cmp
inc
push
and
cmp
sub
inc
jbe
std
mov
stc
daa
or
enter
lret
orl
lock
push
adc
rcr
aad
mov
jmp
xor
bound
adc
iret
and
mov
stos
fsubr
pusha
mov
cvtdq2ps
dec
adcb
dec
fldenv
inc
ret
fnstsw
stos
sub
mov
lcall
sub
scas
and
imul
inc
imull
orl
fsubs
pop
mov
inc
jb
add
lea
push
es
mov
inc
pop
mov
add
arpl
cmpsb
cmp
cld
mov
jb
repz
sbb
inc
iret
jmp
adc
dec
clc
jecxz
aaa
cwtl
mov
mov
hlt
mov
mov
cwtl
inc
movsl
mov
adc
dec
xchg
divl
incl
inc
sub
jle
xchg
stos
or
insl
mov
adc
add
icebp
dec
lods
mov
sahf
notl
and
pushf
xlat
cmpsl
or
jae
xchg
cld
fmull
sbb
fbstp
xchg
sbb
inc
gs
adc
jmp
aam
adc
xor
into
aas
sub
scas
pusha
aaa
inc
mov
das
lret
xchg
sub
add
in
xchg
jae
lcall
jbe
clc
in
xchg
dec
mov
lods
cmp
test
lea
fistps
xchg
dec
push
loopne
xchg
mov
push
sbb
xorl
idivl
and
int
ret
sbb
jg
sbb
loopne
jp
lea
fs
fildll
lock
pusha
xchg
ret
fistpll
pusha
repnz
push
adc
jg
jne
xor
rol
mov
rol
inc
rorl
mov
bound
lods
sub
xchg
sbb
arpl
movsl
inc
and
sbb
pop
sbb
stos
movsb
aas
cmc
add
push
outsb
add
xchg
std
xchg
jae
bound
sbb
jne
cld
jp
sub
inc
lret
xchg
mov
inc
jne
inc
mov
push
in
dec
and
and
sar
inc
sbb
add
pop
lods
cltd
mov
movsb
fnstcw
mov
or
in
sub
jnp
test
inc
fwait
mov
cmp
mov
or
sbb
sbb
xorb
aam
mov
call
dec
add
jg
jmp
mov
jne
js
jo
xchg
imul
test
ret
jge
aam
or
xor
cmc
mov
ljmp
push
enter
fstps
mov
or
push
into
daa
filds
adc
cltd
cmp
call
push
sahf
xor
pop
jge
xchg
call
cmpl
leave
inc
mov
mov
gs
push
add
sahf
or
xchg
roll
pop
aad
jb
iret
or
xchg
outsb
xchg
xchg
jmp
xor
and
andl
out
push
mov
mov
sub
or
cmpsb
mov
iret
mov
into
pop
movsb
outsb
or
mov
and
hlt
inc
enter
nop
fucom
mov
inc
sub
sub
flds
push
mov
pop
fwait
adc
sahf
mov
cs
inc
aas
pop
inc
or
jle
and
inc
aaa
insb
inc
cmc
popf
repz
rcll
push
aas
mov
push
xor
and
adc
mov
xchg
iret
mov
xor
aaa
xchg
xchg
pop
stc
dec
shr
es
xor
loopne
or
sbb
pop
pop
gs
stc
cld
add
lea
loopne
rcll
adc
aaa
dec
mov
mov
bound
in
and
in
dec
mov
mov
repnz
cli
lahf
inc
push
insb
imul
test
adc
mov
dec
bound
cmp
dec
xchg
xor
adc
push
stc
jge
inc
std
push
hlt
aaa
push
in
jmp
mov
mov
mov
arpl
xchg
or
adc
mov
rcrl
dec
dec
call
cmpsb
cmp
mov
cmc
test
cmp
inc
addr16
cmpl
cmp
cmp
pop
jnp
in
call
mov
push
add
inc
and
jg
pop
std
jmp
lods
roll
pop
outsl
cs
movsl
mov
in
jnp
outsl
shl
jns
push
sbb
dec
data16
repz
mov
xor
loop
mov
fwait
sub
pop
popf
inc
add
xchg
or
cmp
rcrb
cli
popf
aaa
mov
lahf
je
xor
xor
xchg
sbb
fstpl
int
cld
push
add
lret
adc
outsl
das
cmc
lock
into
push
ja
lret
mov
xchg
pop
pop
int3
sahf
dec
mov
pop
jo
or
mov
aaa
fisubs
sbb
sub
dec
jecxz,pn
dec
mov
bound
sbb
fistl
sahf
jnp
sub
and
cmp
gs
mov
pushf
repz
mov
dec
gs
movsb
test
cmp
pop
inc
adc
aaa
dec
rcr
jg
dec
mov
js
pop
and
sub
inc
mov
or
or
mov
inc
push
dec
add
fidivrl
mov
inc
inc
push
fisttpl
push
xchg
mov
inc
fistpll
imul
incl
shlb
mov
inc
add
and
and
in
pop
sub
test
lock
adc
int
movsb
andl
sbbl
inc
push
cmp
leave
in
pop
mov
dec
aaa
sahf
imul
ss
push
xchg
test
in
pushf
jl
sbb
or
mov
sub
push
mov
es
es
mov
out
iret
sub
jp
pop
aas
loopne
test
mov
pop
push
inc
cmp
push
cmp
add
sub
sbb
stos
pop
xchg
sub
sbb
test
adcb
ds
mov
lret
pop
les
mov
xor
cld
dec
lcall
fisubrl
pop
inc
lret
xchg
inc
push
stos
pushf
ljmp
mov
add
pop
mov
xchg
repz
and
xor
mov
addr16
xor
push
movsl
mov
xchg
jg
in
out
loope
sbb
es
ja
sub
cmp
mov
jno
inc
sbb
cmp
je
adc
das
lds
jmp
dec
stos
jo
adc
push
adc
pop
sbbb
xchg
sbb
int
cmpl
jno
nop
das
sbb
inc
xor
lret
add
repz
pop
cmpsl
mov
test
dec
test
ret
mov
inc
mov
lods
cmp
movhps
sbb
out
pop
mov
lock
test
ja
fwait
ja
cmc
mov
leave
inc
xchg
shlb
stos
adc
mov
cmp
pusha
and
lea
mov
test
jb
fcomi
xchg
add
pop
cmp
mov
push
aas
and
mov
dec
xchg
lock
in
dec
push
and
fs
ljmp
cmp
mov
aas
or
es
or
stos
ja
cmp
fdivl
clc
leave
cmp
gs
cld
xor
fnstcw
fstl
test
jge
xchg
and
pusha
dec
mov
mov
lods
fisubs
push
xor
movsb
jae
gs
sbb
addl
cmp
scas
push
out
inc
jl
aam
into
sbb
mov
cmpsl
cld
jl
mov
push
cmp
aad
and
xchg
mov
cmc
sub
adc
mov
shll
in
in
mov
gs
pop
mov
xor
xchg
and
and
shlb
mov
xchg
in
lods
sub
fwait
out
out
les
aam
sub
mov
fs
inc
lret
mov
and
ss
outsb
dec
add
popa
sbb
jnp
cmc
icebp
pop
clc
xor
cmpsb
je
bound
push
mov
lods
scas
popf
pop
cmpb
push
leave
xchg
ja
jmp
std
fsubs
aad
xor
inc
push
mov
out
add
pop
pop
and
sbb
pop
test
mov
sahf
jp
push
jo
std
push
push
xor
pushf
fstpt
ja
sub
dec
pop
outsl
jno
xchg
and
lods
in
or
xchg
cli
adc
cmp
das
pop
push
cmpsl
pop
cmp
and
dec
jb
push
pushf
xorb
aad
inc
rcll
and
andps
fcomi
push
or
lea
jnp
mov
out
cwtl
int3
xorl
add
shll
insb
lods
loop
mov
ljmp
loop
xor
das
jns
pusha
sub
out
and
icebp
in
push
cmp
enter
mov
push
mov
push
imul
pop
insl
bound
int
mov
cmpsb
sbb
sub
cmp
cwtl
fisubs
imulb
inc
pop
or
faddl
jmp
mov
dec
or
xor
pop
sbb
sub
adcl
inc
adc
mov
add
jb
imul
and
sbb
das
inc
mov
mov
and
cmp
push
pop
pop
mov
subb
sbb
es
xchg
xchg
mov
inc
sarl
lea
les
test
addr16
cmp
sbb
lods
aad
lds
daa
in
sbb
inc
inc
sbb
jb
mov
fidivl
test
ja
mov
mov
in
mov
imul
popa
pop
in
push
inc
pushf
adc
cld
sub
and
cmpsb
shr
xchg
leave
pop
aaa
jmp
lahf
push
in
sub
push
mov
popf
jecxz
adc
pop
inc
push
dec
or
outsb
add
sbb
xchg
mov
imul
push
roll
mov
or
add
les
mov
leave
add
mov
inc
jg
hlt
and
in
rcr
add
push
sub
add
xor
push
fwait
int3
inc
or
imul
scas
out
xchg
notl
xchg
mov
stc
sub
dec
pushf
aad
call
push
sub
xchg
push
cwtl
or
push
call
xlat
daa
fdivrl
outsb
fidivrl
push
popf
sub
xchg
and
jle
sub
or
push
dec
dec
pop
pop
mov
jae
pop
or
rolb
adc
pusha
jg
mov
lods
pushf
ljmp
sbb
xor
pusha
in
lcall
xor
mov
add
and
add
scas
xchg
rclb
xor
negl
int3
outsl
mov
call
js
push
gs
lcall
gs
cld
sarb
ss
jecxz
inc
mov
and
cmp
pop
in
lahf
xchg
pop
mov
ret
mov
dec
mov
out
lahf
mov
dec
jae
xor
icebp
mov
sub
push
inc
push
adc
clc
imul
sahf
pop
push
loop
fs
jle
mov
lret
aas
faddl
mov
push
pop
sbb
pop
stos
les
fs
mov
test
jmp
and
int
imul
adc
xor
xchg
sub
xchg
sbb
or
and
lea
cmpsb
adc
mov
out
repnz
insl
xorb
dec
pop
outsl
aaa
inc
insl
cmp
add
push
mov
out
fisubrs
mov
cmp
adc
movsb
test
aam
movsl
dec
ret
outsb
sub
sar
mov
aas
xor
xchg
cmc
add
mov
mov
ja
in
das
xor
xchg
lock
lds
inc
mov
int3
push
push
sbb
push
inc
ret
shl
std
mov
lods
pop
inc
inc
out
loop
addb
cmc
mov
pop
test
xchg
jnp
int
push
repz
jns
adc
pop
push
adc
pop
insl
das
jmp
dec
shlb
hlt
add
jmp
addb
sbb
push
lds
mov
add
sbb
dec
or
push
fidivl
call
loop
lods
push
or
shl
fcmovb
mov
push
push
dec
fcomps
or
jnp
adc
sub
mov
adc
in
loope
incb
mov
rolb
fisubrl
and
loop
pop
pop
dec
inc
fldl
mov
mov
push
xor
ss
dec
shlb
pop
mov
mov
mov
inc
xchg
jne
and
adc
psrlq
movsb
mov
sub
xlat
fs
fidivrs
add
stos
je
xor
insb
lea
mov
data16
sarb
jmp
dec
mov
shll
cmpsb
prefetcht0
bnd
inc
sub
repnz
push
xchg
outsl
out
dec
add
jp
cmp
or
jo
or
add
push
mov
ss
mov
push
dec
adc
and
cld
pop
repnz
mov
es
addb
sahf
and
add
jb
in
subl
jbe
mov
inc
arpl
into
int3
jecxz
fsub
push
add
data16
xchg
jne
sahf
test
mov
ljmp
push
ja
mov
pusha
cmpsl
adc
mov
dec
lahf
into
movsl
mov
adc
cmc
xor
out
fisttpl
es
fs
mov
repz
pop
mov
dec
test
gs
mov
mov
ljmp
lret
daa
jl
inc
inc
pop
out
insl
add
or
sarb
rol
mov
sbb
add
jnp
ljmp
mov
repz
ret
sbb
aaa
lods
add
idivl
out
jecxz
add
shll
aaa
mov
mov
pop
xorl
lea
enter
out
jnp
test
push
jns
push
jno
sub
mov
scas
imul
int3
fcoms
cmp
jnp
cld
data16
jle
and
cltd
sub
jo
lods
repz
dec
loope
fidivrs
jmp
sbb
dec
lea
std
sub
sbb
or
sti
cmp
lret
or
fwait
pop
mov
mov
dec
lea
std
sub
sbb
or
sti
cmp
lret
or
fwait
pop
mov
mov
dec
mov
fxch
int
cmp
sub
sbb
mov
test
add
int
std
cmp
sbb
or
jno
lret
jp
add
je
push
cmp
div
cmp
in
shll
data16
jo
add
adc
xor
xor
ret
out
div
xchg
mov
inc
inc
push
push
push
inc
ja
pop
popa
pop
ret
aaa
xor
fcmovnbe
shl
cli
imul
xchg
mov
inc
mov
adc
inc
jle
pop
je
xor
xchg
cmpsl
jns
insl
mov
pop
cmp
jae
leave
push
fldcw
es
jmp
mov
xchg
xchg
push
push
xchg
cwtl
insb
sub
ret
jb,pt
jb
xchg
inc
das
and
jg
cmp
xchg
xchg
adc
xchg
sub
ret
movl
idivl
fdivl
add
sbb
xchg
mov
push
adc
out
inc
in
aaa
test
pop
cmp
sub
mov
loop
outsl
mov
mov
das
iret
and
daa
ja
push
push
lahf
mov
int
xor
jb
addr16
jno
mov
ja
bound
pop
fnsave
ret
out
imul
xchg
mov
inc
pop
push
dec
addr16
imul
pop
add
mov
xchg
rorb
aam
cld
loopne
rcr
das
sub
sub
aaa
adc
dec
and
cwtl
mov
mov
mov
adc
push
adc
dec
jo
jge
dec
sub
cmp
test
xchg
xchg
cmpsl
mov
push
push
bound
pop
add
adc
and
xor
ret
out
div
xchg
mov
inc
inc
push
push
bound
pop
add
adc
and
xor
ret
push
movsl
loope
mov
inc
pop
push
aam
push
arpl
sub
call
lock
inc
push
mov
ret
aaa
lods
xor
popl
add
and
in
xchg
imul
sub
mov
dec
mov
lahf
int
std
outsb
push
jno
iret
push
xchg
icebp
test
fwait
std
scas
es
loop,pn
cmp
les
mov
add
ret
into
rorl
out
out
int
in
pop
inc
pop
ret
cmpsl
js
cmp
test
sub
inc
scas
scas
test
push
adc
frstor
or
inc
roll
data16
test
inc
push
or
ret
and
jg
pop
out
dec
das
and
pop
jbe
xlat
lock
notl
sbb
stos
hlt
aad
jnp
int
imul
in
inc
test
and
jo
push
mov
mov
inc
inc
popf
sub
pop
jno
shlb
movsb
stos
call
fcmovbe
jnp
push
sbb
jae
repnz
mov
cmp
out
imul
inc
je
xor
nop
adc
in
push
pop
cmp
rclb
sub
jo
xor
rol
sarl
sub
jecxz
sbb
xor
adc
pop
or
aaa
inc
lret
mov
fwait
and
scas
sbb
sub
xchg
scas
fs
aam
bound
jl
adc
and
adc
sahf
cltd
mov
and
push
movsl
adc
jl
push
subb
cmp
inc
fbstp
push
add
sbb
leave
popf
stos
push
idiv
movsb
push
in
inc
sbb
mov
insb
inc
add
jo
fsubrs
int3
sub
jb
cmpsl
cmpsl
movsl
inc
mov
nop
pop
push
lock
fs
sbb
jns
testb
mov
sbb
jecxz
xor
cmp
push
xor
xor
out
orb
pop
mov
outsb
rcll
stc
mov
lcall
and
xchg
dec
cwtl
cwtl
dec
jle
outsb
psllw
imul
dec
mov
pop
ja
stos
mov
and
int
jae
or
pop
jb
loop
add
mov
fidivrs
sbb
sahf
inc
cld
out
dec
push
and
arpl
sub
and
xchg
call
iret
xchg
sahf
es
andb
mov
jo
gs
mov
add
insb
and
movsb
cmp
jae
sbb
inc
in
mov
jbe
rcrl
out
outsl
or
fiaddl
ret
inc
adc
insb
mov
xchg
lcall
sbb
aam
test
out
pusha
mov
mov
xlat
lahf
lcall
xor
shrl
arpl
push
fwait
repz
dec
dec
jecxz
div
fmull
jbe
push
pushf
das
dec
out
insb
jle
add
and
xchg
inc
pop
in
dec
inc
cmp
inc
les
sti
hlt
or
dec
sbb
fcoml
xchg
dec
cmpsb
les
pusha
rolb
or
insb
lcall
add
or
ljmp
lahf
mov
mov
cmpsb
shll
adc
or
cmp
jb
inc
inc
inc
mov
xchg
inc
aaa
insl
in
adc
xor
cli
xor
pop
in
fcmovbe
insl
enter
pop
into
sub
add
jns
xchg
mov
mov
out
sub
cmp
dec
cmp
push
pop
and
test
cmpsl
leave
in
popf
shrb
mov
xchg
lret
repz
lret
mov
add
cmpsb
cmpsl
aas
or
dec
fs
roll
mov
leave
xor
push
outsl
adc
loopne
out
lock
cmpb
mov
xchg
xor
mov
cli
inc
push
adc
ljmp
jb
push
xchg
jbe
xchg
out
sub
xor
mov
sbb
mov
adc
mov
mov
sub
or
dec
mov
inc
fwait
clc
daa
sbb
jae
inc
ret
jne
fs
in
iret
lcall
xchg
pop
fdiv
clc
jbe
pop
inc
mov
add
cmp
arpl
sub
sub
aad
xor
cmpsb
sbbl
dec
leave
aam
out
jge
lcall
adcl
mov
ffreep
inc
xchg
cli
dec
lret
jno
dec
cmp
mov
es
dec
dec
lret
mov
jb
lret
lds
cmpsl
mov
add
jp
fisttps
jmp
cmp
mov
cmp
jnp
xchg
add
pop
ds
mov
sub
jg
pop
stc
xchg
aaa
stos
push
ret
pop
pop
mov
mov
xlat
in
sub
or
cmp
popa
jg
add
xchg
adc
lods
pop
sub
aam
loopne
nop
xor
sbb
in
cld
ljmp
dec
pop
push
mov
mov
mov
dec
outsl
mov
aas
lods
jns
addr16
in
ja
xchg
xor
adc
icebp
cmp
aas
js
mov
addl
xor
xchg
lahf
cmc
ror
sub
je
mov
ret
repnz
xchg
xor
loopne
lahf
aas
fdivrl
push
pop
popa
mov
movb
adc
outsb
xor
jne
and
ret
jg
fsubrs
jl
mov
jb
iret
gs
pop
movsl
mov
aas
xor
fstpl
repz
pop
pop
xchg
jne
jno
loop
lcall
cmpsb
xor
xchg
adc
jge
and
adc
aad
jmp
pushf
ds
call
jp
call
sarb
xchg
push
ljmp
dec
lods
inc
or
xchg
pop
xchg
xor
cltd
ret
fld
jmp
mov
es
mov
xchg
sbb
addr16
popf
inc
icebp
leave
fcompl
leave
dec
movsl
xor
xchg
mov
xor
aad
cmp
push
out
sub
lahf
or
inc
sub
int3
fs
int3
test
inc
imul
add
repnz
inc
xlat
push
mov
dec
mov
inc
out
mov
or
cmp
add
aas
cltd
push
sbb
lret
xchg
sbb
imul
lock
push
daa
dec
in
ret
les
jno
pop
scas
mov
in
add
push
in
dec
movsb
or
inc
in
movsl
or
and
xchg
and
jno
xchg
int
fsubrl
xor
xchg
add
add
jne
mov
and
test
ret
xor
sbb
jbe
pusha
xlat
int
inc
ja
nop
mov
repnz
test
dec
mov
jmp
pusha
sub
arpl
or
pop
jns
push
ficomps
mov
sbb
fildl
mov
xchg
lds
popf
mov
cld
aaa
mov
mov
adc
jno,pt
pop
das
out
roll
test
push
adcl
cltd
sbb
jge
or
push
lahf
in
sbb
in
mov
pop
sbb
lahf
push
pop
lret
mov
rcll
mov
xor
pop
push
int3
mov
xchg
hlt
xchg
sub
sbb
or
rclb
outsb
or
addr16
mov
ds
push
or
xchg
bound
dec
mov
sarl
lret
and
sbb
xor
imul
and
outsb
lods
shr
jno
test
mov
imul
aam
push
push
xor
xchg
fcomip
add
insb
cmp
stos
xor
push
enter
hlt
in
jbe
lods
aad
mov
cli
mov
dec
adc
test
dec
aam
sub
aas
daa
xor
leave
add
cmpsb
ljmp
inc
push
hlt
pop
mov
cmp
and
jg
rcrl
sub
loope
pop
repz
lock
push
inc
xchg
or
repz
adc
cli
test
and
pop
das
cli
cmpl
int
jno
sbb
pop
mov
cltd
fwait
add
jp
add
bound
mov
ret
lods
mov
cmp
or
jnp
mov
xchg
aaa
or
lcall
lods
and
jle
mov
mov
add
scas
push
sbb
fdivrs
shlb
push
sbb
mov
outsl
xchg
push
lret
shrb
push
adc
cltd
lret
push
mov
push
aad
int3
jno
sahf
push
add
push
mov
aas
pop
pop
jmp
pop
cwtl
lea
xchg
fstpt
testl
outsl
lret
jnp
cmp
les
xorl
add
ja
movsb
movsl
push
xor
or
jo
jmp
fld
les
fcoms
mov
flds
dec
and
lahf
test
push
cwtl
fldt
dec
lds
jae
or
mov
or
jnp
decb
adc
testl
stos
mov
lds
mov
mov
xor
popf
cmpsb
adc
pop
xor
adc
inc
mov
jno
mov
xor
xor
add
pop
xor
pop
adc
or
sub
test
adc
dec
enter
inc
iret
lea
testl
inc
pop
mov
inc
sub
pop
mov
mov
loopne
mov
je
and
fisubs
jle
cmpsb
loope
cmp
dec
dec
fimull
xchg
pop
pop
loop
jg
mov
adc
std
cs
lds
stos
inc
cld
xorb
dec
aad
movsl
push
cmc
vandpd
jae
push
xchg
std
xor
test
dec
popf
lods
cltd
or
fists
push
push
push
xchg
lock
ret
pusha
pop
insb
sbb
pop
popa
sub
adc
pop
adc
rcrb
into
jne
cli
in
sub
adc
sbb
aas
xchg
pop
call
or
call
outsb
out
cs
adc
addr16
repz
int3
xor
push
out
sbb
add
mov
sbb
loop
clc
fisubl
push
aaa
clc
out
push
sub
cmp
lods
scas
test
mov
mov
call
dec
xor
ja
inc
xor
push
dec
fmuls
inc
iret
daa
jge
cmp
pop
repnz
mov
or
loop
adc
repz
lea
nop
dec
sub
sub
xchg
popa
repnz
push
inc
cmp
xchg
sbbb
cs
mov
and
mov
bound
stos
std
dec
sbb
and
loop
insl
inc
bound
ja
stc
sub
push
or
out
sub
pop
add
dec
repnz
cmp
jmp
shl
adc
add
mov
cmp
and
ja
cwtl
inc
rorl
jecxz
mov
xor
inc
sbb
pop
fcmovb
mov
aaa
fisttps
mov
outsb
push
cmp
xchg
adcl
js
mov
inc
mov
or
imul
sahf
subb
and
jo
int
push
xor
aaa
jg
xchg
mov
push
inc
push
movsl
push
aam
incb
ffree
mov
adc
inc
pushf
jmp
bswap
js
add
push
lret
sti
adc
lods
pop
jle
add
push
sub
lcall
inc
cmc
lods
out
cwtl
subl
mov
les
push
scas
xchg
jecxz
inc
adc
adc
int
xchg
loopne
mov
bound
ss
sbb
xchg
and
push
stos
fdivp
add
clc
xchg
or
insl
repz
push
arpl
sahf
mov
test
mov
add
xlat
addr16
test
push
pop
and
mov
and
repnz
jne
xor
push
inc
lods
add
mov
xor
add
cltd
mov
xorb
stc
inc
jae
test
movsb
push
in
mov
sbb
orb
rcrb
out
fisubs
mov
jl
mov
push
icebp
xchg
mov
pop
mov
in
pop
pop
loopne
dec
inc
jge
adc
lock
adc
fstps
pop
add
inc
subb
inc
mov
pop
push
cs
cmp
jne
rcrl
div
test
mov
jp
mov
icebp
shll
add
es
add
movsl
and
jo
repz
scas
inc
push
pop
sbb
outsb
clc
xchg
sub
sahf
push
adc
fisttpl
add
add
xor
and
sbb
jno
mov
lods
inc
lcall
pop
add
cs
int3
and
add
mov
std
int3
sbb
cwtl
dec
lods
fwait
xor
aas
cld
fildl
xchg
jo
pop
ficoms
cs
std
mov
js
sbb
imul
mov
test
fsts
xor
movsb
pop
rorb
ficomps
ss
cmp
xchg
popa
cmpb
nop
xor
fwait
pushf
je
and
push
mov
pop
mov
jne
jle
jns
imul
mov
insb
int3
js
arpl
fs
stos
les
fidivrl
test
stc
mov
mov
lods
cmp
fistps
in
data16
jmp
xor
mov
and
jecxz
xchg
pushf
adcl
push
stos
jbe
jo
cmp
mov
xor
mov
test
sbb
adc
int
inc
into
sub
adc
mov
mov
xchg
jl
lret
imul
imul
out
fmull
pop
push
push
cmpsb
mov
aam
sbb
fcmovnb
add
adc
jbe
data16
and
loope
jg
or
jle
cmc
and
mov
lahf
mov
push
std
sub
pop
and
pop
in
mov
fcom
sub
and
les
mov
lods
sbb
sahf
and
mov
pop
orl
stos
addb
pop
mov
adc
stc
jne
sbb
cltd
add
jb
mov
cmp
aam
inc
mov
mov
ret
rcrb
movsb
lahf
ss
in
push
inc
imul
aad
cmp
lods
enter
adc
add
fstp
push
aas
push
repnz
mov
and
xchg
jmp
imul
push
ljmp
jmp
repz
ja
mov
mov
adc
mov
imul
pop
xchg
das
cwtl
mov
mov
int
sub
sarb
or
pop
xchg
jnp
fistpl
loope
in
shl
mov
push
push
cmpsl
frstor
jmp
std
lret
fwait
or
push
std
jo
mov
cmp
stos
and
adc
dec
push
dec
jae
imul
lret
scas
cmp
gs
mov
lret
or
mov
in
mov
test
jp
pusha
mov
cmp
fsubrs
lret
mov
cltd
inc
lods
movsl
dec
inc
add
icebp
inc
xchg
adc
iret
and
mov
dec
lock
add
xchg
mov
mov
test
fisubrs
jne
aaa
add
dec
les
movsb
nop
or
add
fs
xor
mov
sbb
and
test
and
das
jb
jbe
or
jp
in
push
outsb
jecxz
add
push
adc
cmp
call
bound
lods
leave
int3
jle
cmp
sahf
and
fildll
and
lret
in
pop
lcall
pop
add
fucomp
and
dec
jnp
insb
mov
insl
ljmp
dec
iret
pop
and
es
sub
mov
ds
sbb
or
xchg
lods
scas
dec
mov
xchg
mov
pusha
rcll
fcomps
shrl
push
test
sbb
cmp
pop
add
in
add
fdivrl
btr
pop
movsb
xor
ja
mov
inc
xchg
dec
push
js
loope
cmpsl
icebp
fldenv
mov
ficompl
ss
mov
xchg
sbb
arpl
outsb
xchg
leavew
jnp
call
pop
std
nop
cmpsb
cmc
sub
les
mov
or
aaa
adc
add
in
js
push
pop
inc
inc
xchg
sbbb
sbb
dec
jge
jge
mov
push
ret
mov
xor
movl
xchg
add
clc
movsb
adc
pop
shll
jbe
lods
xor
jae
dec
cli
leave
bound
mov
sub
leave
scas
loopne
out
sub
insl
xor
mov
insb
dec
shrl
lcall
cmp
cld
inc
rol
nop
cmp
je
adc
aam
sbb
xor
jno
sub
lock
cmc
pushf
pop
jae
ljmp
pop
popa
jae
add
xlat
adc
lods
pop
testl
fwait
pop
add
cltd
bound
mov
mov
inc
mov
outsb
or
xchg
dec
add
daa
daa
daa
loope
inc
movsl
adc
or
xchg
lds
cs
cli
sub
addr16
shl
mov
inc
mov
xlat
pop
push
inc
cmp
bound
cmp
lea
adc
orb
fidivs
loope
xchg
and
pop
xchg
fcomps
out
pop
hlt
mov
jp
ljmp
push
jg
push
gs
fidivrl
pop
jne
scas
int
add
insl
xchg
shl
lret
mov
pusha
jno
lret
cmpsb
jno
test
dec
mov
popf
sbb
jmp
sbb
sti
lods
mov
sub
scas
mov
or
mov
dec
mov
sar
push
lds
mov
xchg
inc
or
pusha
xchg
xor
jecxz
loop
inc
xor
aas
shlb
mov
and
dec
and
ljmp
outsb
push
xchg
fnstsw
xchg
idiv
test
repz
mov
loope
popf
movsl
leave
loope
neg
xor
or
test
push
sub
jo
test
xchg
mov
or
cmc
popf
aam
insl
cmp
aam
push
clc
stos
adc
jg
ja
insl
inc
leave
cmc
pop
sarl
or
mov
cmp
dec
test
mov
mov
push
jl
lret
sub
mov
mov
add
jne
add
lds
sbb
and
scas
jo
lods
dec
push
jg
mov
aaa
addr16
imul
call
enter
repnz
mov
push
imul
ljmp
pusha
popa
das
js
mov
lret
dec
fwait
dec
pop
loope
rorb
lret
adc
movsl
jae
xor
cmp
fistl
dec
jno
mov
or
loop
mov
add
aad
xchg
mov
nop
aam
arpl
mov
loope
test
cmovs
cmp
cld
adc
lret
cmpsb
dec
pop
or
add
mov
pop
stos
inc
cmc
imul
push
inc
lods
jno
and
lret
push
scas
push
pop
or
es
out
push
movsb
push
inc
push
inc
std
icebp
stc
pop
incl
add
adc
jb
es
movsb
push
sub
xor
jp
or
in
push
pop
ljmp
jns
das
sbb
lods
jo
inc
fsubrs
imul
ret
mov
pop
insb
jo
xchg
sub
xor
je
test
mov
mov
pop
mov
sub
aas
cltd
mov
addl
push
fwait
mov
shl
popl
inc
mov
or
div
mov
imul
call
mov
ret
sbb
xlat
and
imul
or
shll
mov
scas
pop
mov
pop
setbe
and
dec
cwtl
fwait
adc
out
test
pop
sub
insb
mov
test
shl
add
stc
stos
call
fidivrl
sbb
mov
xor
cmp
jl
arpl
lods
push
fs
jmp
int3
push
adc
fmul
cmc
mov
test
icebp
mov
push
nop
std
negb
gs
daa
test
pop
xor
sahf
jne
cmpsl
ret
jp
movsb
or
dec
mov
mov
mov
cltd
mov
xchg
push
pop
and
adc
cmp
dec
mov
sbb
dec
das
dec
xchg
inc
add
xchg
mov
cmp
insl
dec
shrl
xchg
outsb
es
push
lret
push
mov
test
or
in
mov
sahf
aam
lahf
mov
int
sub
push
or
pop
or
add
outsb
je
jbe
adc
jno
aas
shll
cmp
imul
lcall
mov
bound
insb
cs
mov
movsl
popa
add
dec
sbb
shrl
js
clc
subb
xor
and
inc
add
in
sub
imulb
into
mov
cmp
inc
or
div
xchg
mov
inc
inc
push
push
bound
pop
add
adc
and
xor
ret
out
div
xchg
mov
inc
inc
push
push
bound
pop
add
adc
and
xor
ret
out
div
xchg
mov
inc
inc
push
push
bound
pop
add
adc
and
xor
ret
out
div
xchg
mov
inc
inc
push
clc
int
ja
jo
lahf
in
fcomp
enter
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
leave
ret
push
cs
ds
es
pop
adc
daa
add
fwait
xchg
out
jno
into
out
push
cs
ds
es
push
outsb
inc
outsb
jbe
data16
mov
cld
test
ficoms
aaa
push
daa
ss
es
push
ja
data16
inc
xchg
scas
xchg
mov
mov
push
dec
inc
imul
inc
mov
push
je
repz
cmc
popf
pop
push
jne
xor
mov
pop
stos
dec
jl
ret
mov
mov
cmp
and
mov
mov
out
mov
push
cmp
push
push
or
add
in
popa
jbe
dec
inc
xchg
into
es
push
jo
roll
dec
push
outsb
push
outsb
mov
push
fistl
jno
adc
shrb
into
jmp
icebp
push
push
scas
dec
or
xchg
inc
cmpsb
jbe
daa
pop
in
out
push
popf
repz
jmp
test
scas
in
fisttpl
in
aam
jno
popa
ljmp
fmuls
push
cs
es
push
outsb
inc
jle
dec
inc
xchg
scas
xchg
test
not
out
push
outsl
dec
push
imul
insb
nopl
and
cmp
roll
mov
scas
cld
mov
mov
adc
jge
jno
outsb
sub
jbe
data16
repz
mov
xchg
incb
bound
pop
push
pop
push
pop
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
mov
sbb
in
loopne
cmpb
aaa
icebp
mov
test
jmp
push
insb
xor
and
add
pushf
pop
xor
iret
scas
jecxz
lret
outsl
and
outsb
shr
or
cwtl
js
ficomps
movsb
sbb
add
scas
adc
add
shlb
xor
loopne
repz
or
inc
mov
mov
xor
or
testb
mov
outsb
sahf
insl
mov
orb
add
mov
push
push
pop
bound
test
or
test
aas
add
ja
and
mov
sysexit
push
push
int
ljmp
dec
cmpsb
fmull
lods
and
mov
aaa
aam
stos
jnp
jmp
dec
in
faddl
inc
xchg
cmp
lcall
mov
faddp
jno
fbld
rcrl
fwait
push
cmpb
jecxz
xor
mov
daa
fcompl
ss
in
arpl
inc
sti
jp
sahf
ss
pop
mov
out
inc
scas
data16
pop
adc
sbb
std
jg
lahf
movb
rcll
fxch
aas
or
mov
icebp
mov
movsl
out
mov
ss
je
sub
bound
ret
dec
and
mov
cs
xor
out
stos
or
mov
fidivs
shlb
mov
push
loopne
ds
ret
lds
mov
enter
lcall
and
push
push
enter
mov
rcrl
ret
adc
lock
test
mov
sti
repz
push
sub
dec
dec
in
push
sbb
push
loop
out
mov
enter
jl
push
pop
mov
in
psrad
push
mov
pop
test
mov
xchg
es
dec
andl
mov
nop
add
cs
xchg
clc
jnp
out
xor
lods
loop
jae
cmp
sub
fsts
inc
add
inc
mov
cmc
fidivs
outsb
xchg
sarl
inc
addr16
inc
mov
push
lock
gs
loopne
push
push
into
sbb
and
push
cwtl
dec
out
stos
mov
jnp
sbb
dec
inc
aaa
in
dec
fwait
xor
jae
cmp
xor
rcll
xor
xchg
outsb
sbb
sbb
add
dec
movsl
xchg
add
lret
icebp
iret
xor
inc
and
shlb
repz
fbld
jge
into
mov
dec
mov
cli
jb
rcrl
cmp
inc
aad
and
gs
lcall
sti
jbe
push
lret
dec
jo
leave
pop
xor
add
add
fsts
cmp
sbbb
clc
mov
fsubrs
mov
push
xchg
cwtl
push
xor
cmc
lds
xor
sub
daa
dec
adc
int
push
xor
sahf
pusha
sahf
dec
dec
bound
push
sbb
jle
jo
in
stos
cld
or
in
cli
andl
mov
or
pushf
push
shl
mov
test
shr
sub
cmp
mov
dec
mov
iret
inc
inc
les
add
sbb
mov
jle
lds
inc
pusha
mov
xchg
cli
mov
cmp
scas
jbe
add
mov
and
insb
xchg
mov
dec
mov
add
jmp
sbb
adc
sub
fcoms
test
jle
jo
pop
and
jb
ret
test
mov
imul
in
jnp
xor
shll
fs
in
inc
xchg
movsl
rorb
out
cmpsb
dec
cmc
fimull
and
lret
cmp
shrb
in
jmp
add
imulb
ret
adc
loop
pop
lock
in
shll
mov
sub
aaa
in
int
inc
or
adc
xor
dec
sub
push
sbb
push
jae
sbb
ljmp
mov
xchg
mov
stos
popa
fstl
in
mov
pushf
loopne
sbb
fadd
jnp
or
hlt
fsub
pop
fs
lods
pavgb
aam
or
lea
loop
and
loope
and
xor
sbb
pop
std
inc
fs
aas
xchg
dec
push
add
mov
mov
enter
test
dec
adc
jmp
pop
jno
pop
jp
sbb
xchg
mov
sbb
push
and
fisttps
in
or
push
mov
or
mov
and
sbb
mov
pop
jge
pusha
jle
test
pop
sub
mov
cmp
sbb
mov
and
xor
movsb
add
movsl
iret
jle
inc
sub
inc
or
sub
push
loop
lods
add
mov
mulb
push
pop
roll
and
push
jecxz
and
mov
ljmp
sub
ffree
out
std
pop
or
xor
aad
mov
xor
push
add
add
mov
push
sbb
push
xchg
filds
mov
inc
mov
inc
adc
nop
in
mov
mov
test
mov
into
mov
pop
mov
cmpsw
pop
xor
xlat
mov
pop
daa
mov
add
inc
cmp
jae
cmp
push
and
dec
inc
xlat
test
cmp
cmp
sbbl
and
fwait
dec
inc
ja
push
data16
sbb
repz
fisubs
push
call
adc
dec
sub
sahf
or
sub
mov
jge
xor
ret
aad
leave
ds
and
xlat
pop
jae
mov
add
mov
xchg
dec
pop
sahf
mov
pop
loope
inc
mov
jne
jno
icebp
mov
xchg
cld
sbb
decl
clc
mov
rorl
jo
add
popf
stc
fsubl
push
outsl
dec
xchg
xchg
mov
add
dec
out
gs
aam
fsubrs
mov
mov
mov
arpl
cmp
add
in
push
pop
push
xor
cmc
js
ret
sub
mov
push
xor
lret
xchg
inc
shrb
xor
not
divl
movd
negl
in
add
mov
sbb
add
mov
and
ret
das
mov
jle
int
jb
in
add
insl
and
lret
mov
fmul
aas
es
ss
cmp
pop
push
jmp
in
ret
sub
xchg
inc
cmc
dec
inc
adc
les
mov
sub
popf
xchg
lods
or
add
ds
jo
xor
sti
int
rolb
sbb
test
fcom
mov
pop
sub
mov
inc
pop
inc
push
add
int3
cwtl
fmull
std
ss
jp
or
mov
or
add
ret
inc
fdivrs
xchg
inc
adc
rorb
scas
push
cwtl
stos
mov
repnz
dec
mov
mov
stos
push
inc
mov
jns
cli
push
in
imul
pop
insl
mov
aaa
out
or
push
sbb
xchg
xchg
pop
push
cmp
scas
in
or
mov
stc
fwait
add
adc
mov
xchg
add
stos
mov
repz
jae
inc
adc
lods
repz
or
movsl
inc
sub
jo
data16
sbb
adc
ret
fisubs
and
out
mov
sahf
cmpsb
out
xor
mov
push
movsb
les
mov
in
mov
or
repnz
test
sbb
jb
shll
mov
jg
pusha
pop
stos
es
cmp
mov
and
jae
ffree
pop
sub
or
shll
test
pop
dec
sub
sti
mov
mov
inc
jbe
cmpsl
in
or
out
pop
ds
out
xor
ret
out
mov
xchg
leave
sbb
mov
mov
mov
pop
cmp
cmp
jae
repz
test
add
stc
adc
fsubrl
popf
addr16
push
jle
dec
jl
es
pop
add
xchg
mov
adc
ja
xor
loop
inc
js
mov
movsl
push
jl
rcl
aaa
inc
popa
and
push
mov
adc
cmp
mov
int3
cmpsl
adc
lods
ret
xchg
int
repz
push
je
jns
jmp
int
cmc
xor
out
mov
add
xchg
mov
pop
jg
add
loopne
testb
jb
ss
leave
int3
int
bound
stc
sub
sbb
cld
test
dec
jo
imul
rolb
rcrl
fxch
jl
fisubrs
int
inc
gs
notl
insb
push
cmc
lahf
jae
orl
call
jle
add
or
jns
fucomi
out
xlat
in
mov
inc
fnsave
inc
pop
pushl
insb
in
test
jle
xlat
xchg
out
imul
or
stc
pop
cmp
out
bound
push
and
pop
loop
cld
scas
mov
pop
addb
faddl
cmp
adc
repz
mov
out
and
cmp
movsb
ja
add
pop
mov
inc
shll
pop
in
mov
out
mov
sarl
cmp
movsb
adc
test
add
and
pop
xchg
xor
dec
addr16
add
push
adc
or
fsubrl
dec
push
and
arpl
sahf
dec
xor
mov
mov
xor
les
jg
outsb
ret
lahf
out
cmp
sti
out
lahf
sbbb
imull
dec
mov
jns
out
jns
std
jbe
leave
dec
push
mov
loopne
mov
xchg
enter
subl
hlt
pop
sub
jnp
cld
sbb
jbe
addb
jnp
call
jle
enter
ret
mov
jp
imul
push
in
sub
add
xchg
cmc
mov
jb
shlb
pop
inc
fldcw
cld
out
jl
out
mov
sbb
xchg
popf
or
rcrb
in
sub
sti
add
stc
insb
hlt
cmp
xchg
fmuls
sub
aad
and
and
insb
xlat
nop
xor
or
push
fsubrs
inc
sub
add
insl
ret
sbb
xchg
cwtl
push
aad
push
mov
insl
sbb
mov
bound
aad
lret
leave
cmp
js
cmp
mov
call
mov
dec
mov
mov
jo
pop
xor
data16
mov
pop
aaa
mov
mov
push
adc
xchg
js
fwait
or
rolb
je
adc
mov
nop
pop
push
icebp
ds
or
in
mov
ffreep
fnstsw
and
jecxz
fdivl
inc
fs
outsb
add
icebp
fucomp
gs
adc
sbb
pcmpgtd
aad
loope
adc
xor
xchg
xchg
popf
mov
pop
in
mov
das
jmp
mov
or
stos
mov
sbb
pop
aaa
test
in
clc
xor
iret
sahf
aas
sub
inc
xchg
dec
int
fcomps
leave
adc
arpl
cmp
fldcw
mov
icebp
stos
sbb
sbb
aas
xchg
mov
in
and
sub
fsubrl
imul
jae
jno
clc
test
mov
mov
icebp
pop
mov
xor
mov
test
cmp
shll
cli
scas
sbb
mov
sub
rolb
cmp
fcmovb
pop
sub
jp,pn
std
sub
push
adc
xor
sbb
and
or
xchg
push
or
mov
inc
testl
out
xchg
out
adc
inc
cmp
cs
jnp
add
movsl
inc
xor
das
push
jb
jge
cmp
or
jbe
add
test
push
fcoml
pop
push
adc
inc
mov
and
cmp
cmp
mov
xchg
sub
or
iret
js
push
test
xchg
inc
nop
sbb
aas
cmpb
add
sti
xchg
dec
nop
cmp
jbe
or
inc
fsubp
repz
movsb
ret
call
fs
incl
addr16
hlt
inc
lods
loope
nop
aad
and
lods
int3
push
std
aas
pop
sub
sub
mov
icebp
dec
xlat
cmp
je
in
ja
clc
cmpsb
orb
les
mov
pop
cli
cmpsb
jge
jecxz
lcall
pop
xor
nop
pop
pop
das
or
sub
xchg
stc
lock
adc
loopne
add
sarb
push
mov
mov
xchg
pop
pop
lods
std
daa
mov
mov
pop
pshufw
sub
mov
cmp
mov
sbb
push
movsl
cltd
mov
push
or
stc
mov
mov
xor
sahf
mov
das
subb
or
test
shrb
inc
cmp
sysret
or
mov
xor
inc
mov
xor
mul
nop
cmp
rcl
jecxz
xlat
ljmp
jle
add
pop
pop
jne
push
test
xchg
mov
cs
inc
mov
cmp
sbb
imul
outsl
data16
icebp
pop
jo
jecxz
adcl
mov
sbb
rorl
mov
cmp
test
bswap
lret
mov
rcll
sbb
stc
or
mov
int
loopne
lret
in
jle
mov
push
adc
out
jo
inc
stos
inc
pop
shlb
cmp
sbb
imul
fmuls
pop
push
mull
adc
cmp
cmp
or
mov
mov
mov
in
xchg
mov
sbb
arpl
sbb
push
or
movl
loope
out
gs
xor
and
popa
or
sbb
ljmp
adc
je
aaa
mov
mov
adc
ficompl
cmp
dec
sub
mov
and
rcll
xor
ja
mov
inc
adc
shr
jmp
cmpsb
xchg
fsubrs
gs
mov
rorl
push
sbbb
bound
push
jge,pt
or
cmpsl
mov
xor
mov
daa
cltd
flds
adc
add
add
int
es
aaa
jbe
or
addl
cmp
or
arpl
daa
cmp
mov
stos
hlt
es
or
daa
inc
rcl
test
sub
scas
repz
shll
addb
dec
sub
and
sub
push
inc
pushf
inc
notb
dec
roll
jns
xchg
inc
push
xorl
xchg
dec
xor
adc
add
adc
loopne
mov
add
ror
loopne
movsl
rcrb
mov
ljmp
adc
or
xor
inc
icebp
mov
inc
test
pop
lods
ja
in
xor
and
adc
or
sub
lcall
dec
daa
leave
ja
push
sub
ds
sub
dec
lret
sarb
mov
out
aaa
adc
in
sub
cltd
cmc
enter
jo
add
test
rcl
inc
imul
xlat
ss
js
lret
sub
mov
dec
sub
aam
stc
push
sub
imul
repz
xchg
mov
inc
jb
pop
push
lods
dec
xchg
insl
nop
insl
dec
xlat
and
ds
test
enter
push
imul
dec
mov
xor
and
outsb
lahf
aaa
xchg
out
add
mov
mov
pop
mov
outsl
ffreep
mov
inc
icebp
orb
test
mov
cmp
inc
out
pushf
enter
push
fs
jmp
pop
adc
push
mov
gs
inc
mov
or
xlat
jg
gs
dec
test
icebp
mov
and
pop
adc
outsl
adc
sub
mov
mov
add
adc
and
arpl
or
cmpsb
pusha
adc
pop
loop
adc
push
ljmp
js
inc
and
outsb
sarl
mov
push
lret
repz
mov
jmp
out
int3
dec
lret
xor
dec
mov
cli
pop
aas
shlb
push
nop
cmp
stc
adc
lret
aad
mov
ljmp
mov
mov
xor
test
xlat
xor
in
dec
shlb
rorb
ds
and
lret
xchg
mov
sub
cmpsb
push
sbb
or
mov
subl
ficoms
into
fisubs
fists
call
mov
scas
pop
loope
scas
sub
in
adc
cmp
cmp
push
arpl
insl
ret
cli
dec
dec
pop
dec
mov
adc
jle
push
lret
xchg
ret
cmc
and
pop
shl
sub
xchg
xor
std
dec
adc
or
dec
stc
pop
in
mov
pop
mov
ljmp
ltr
ljmp
dec
and
ds
xchg
dec
mov
popa
or
pop
rcl
sbb
js
jecxz
add
and
call
int3
nop
ret
jnp
out
cmp
or
movsb
mov
cmp
repz
aad
sub
scas
mov
pushf
sbb
dec
stos
pop
les
and
lret
cs
jge
or
or
mov
add
dec
cld
push
jbe
adc
mov
shlb
xor
mov
push
inc
mov
inc
out
inc
inc
cmp
movsl
lret
adc
mov
fwait
lret
pop
inc
out
or
in
lods
mov
inc
inc
rcrl
pop
jne
push
ret
pop
or
add
xor
shrb
imul
psubd
jb
out
jmp
fwait
popl
das
mov
mov
mov
add
jnp
js
dec
sub
xchg
in
cld
out
push
jo,pt
inc
mov
xor
fbstp
mov
xor
sub
cwtl
dec
xor
orl
call
pop
jge
mov
push
xor
insb
mov
jg
jecxz
lret
or
pop
test
adc
lret
scas
popa
or
aam
ljmp
inc
mov
inc
adc
aaa
xor
or
and
in
add
jb
push
iret
stc
xor
dec
hlt
adc
jle
dec
cs
cmp
sbb
or
mov
das
push
test
std
jae
and
lahf
hlt
fimuls
sub
testl
adc
stos
out
mov
jnp
mov
popf
stos
xchg
les
sub
aaa
xor
cmp
fidivrl
icebp
inc
and
and
mov
sub
xor
mov
mov
clc
loope
sarl
push
dec
xor
stc
push
incb
push
and
xchg
fwait
ss
in
jecxz
mov
xor
add
cmpsb
cmp
cltd
add
hlt
popa
inc
cld
inc
jbe
cltd
push
ja
and
and
pop
sub
lds
xchg
cmpsb
rolb
sti
insb
sahf
out
incb
div
lods
xor
inc
xor
or
cmp
outsl
sahf
add
mov
adc
pop
aas
and
pop
jecxz
shlb
or
lret
rcll
out
xor
sbb
mov
and
mov
sub
int3
mov
in
pusha
sbb
out
mov
cmp
cmp
pop
pop
ljmp
sub
outsb
stc
mov
jle
fcom
repnz
mov
cmc
pop
test
push
bound
sbb
mov
stc
dec
pop
xor
add
fadds
sub
add
pop
jae
sbb
sahf
cmc
mov
sub
lea
jns
insl
inc
mov
jge
dec
sbb
subl
repz
or
jge
mov
mov
sub
jbe
in
sub
negb
sub
mov
pop
pop
mov
cmp
bound
jp
push
stos
dec
aas
cwtl
adc
cmovnp
inc
or
mov
ljmp
fstps
repz
mov
cmpsl
and
pop
cltd
xlat
stos
in
inc
pop
sbb
aas
jecxz
stc
je
hlt
imul
fstps
sub
xchg
add
int
bound
sub
andl
mov
dec
push
cmp
gs
ja
fildll
fstps
sarl
ret
dec
gs
les
nop
or
repz
jmp
aam
xlat
test
jge
dec
pop
leave
into
pop
or
popa
xor
xchg
fadds
test
bound
push
sbb
jbe
mov
push
es
sub
adc
add
fstl
mov
or
fucomip
roll
aam
pop
jmp
int
stc
in
or
mov
lcall
je
dec
mov
or
je
dec
add
sbb
and
lods
dec
inc
inc
andb
sbb
in
in
push
mov
xchg
mov
ret
inc
jl
jecxz
xor
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoml
sub
cmp
or
push
push
outsb
inc
jle
dec
data16
xchg
scas
xchg
mov
orl
ljmp
iret
sbb
mov
mov
or
pop
xchg
dec
outsb
mov
pop
mov
sti
cmp
lret
out
cmp
sub
sbb
or
pop
lahf
aas
jg
jg
dec
fwait
push
mov
xchg
por
fwait
pop
lret
imulb
or
mov
push
jbe
pop
enter
clc
das
lods
push
adcb
lret
xchg
nop
inc
iret
outsb
test
loopne
inc
pop
xchg
jmp
pop
pop
lret
daa
pop
data16
sahf
cs
outsb
mov
cmp
jp
xchg
or
or
ljmp
fwait
jg
das
sub
inc
adc
add
cmp
cltd
and
add
pop
sarb
subb
push
rolb
das
fcmovnb
jmp
sbb
fucomi
sti
out
cmp
or
mov
jnp
add
sahf
mov
inc
jle
jp
mov
adc
xor
cwtl
mov
dec
aas
mov
cmpsl
cs
dec
outsl
call
scas
mov
test
ljmp
pop
xchg
mov
and
push
cmp
call
nop
mov
setae
insb
adc
fistpl
dec
es
fcmovne
lahf
filds
mov
addl
ret
aaa
xlat
daa
adc
imul
add
xor
out
cmp
cmp
das
xchg
pop
lahf
jge
jb
cmpb
mov
adc
pop
xor
sbb
dec
push
in
das
stos
push
cmpsl
jns
jnp
mov
insb
mov
pop
mov
dec
outsl
mov
pop
mov
sti
aas
jmp
fistpl
lret
out
cmp
sub
sbb
or
pop
lahf
dec
outsl
mov
pop
mov
sti
aas
jmp
fistpl
lret
out
cmp
cld
jo
lods
daa
ret
loop
dec
lea
aas
jae
xchg
sbb
jl
fcomip
lds
add
push
dec
dec
hlt
pusha
cmp
mov
rcll
sbb
dec
inc
aas
stos
push
sbb
ljmp
jnp
clc
push
push
mov
add
cwtl
adc
jbe
lahf
jg
mov
or
je
divb
push
rcr
lock
mov
stos
jle
lock
jmp
stos
cmp
sub
sahf
nop
es
push
lods
xor
cmp
pop
adc
insl
pop
jl
loopne
test
xor
cli
adc
stc
sub
fs
and
jae
push
jbe
and
jns
or
sbb
mov
or
sahf
je
out
lret
cmp
sbb
xchg
dec
mov
push
out
arpl
pop
loope
in
push
push
jae
stos
ret
mov
testb
add
and
pop
mov
adc
xchg
imul
lods
push
or
inc
pop
fprem
je
xor
or
cmp
gs
into
jle
adc
inc
jl
pop
fdivl
mov
sbb
push
andl
and
mov
out
jmp
jl
fcoml
arpl
jge
cmp
inc
mov
adc
gs
insl
jge
fstpt
shl
lcall
jl
out
pop
jbe
xor
xlat
pop
or
scas
std
out
inc
xlat
test
fs
pop
ja
ret
or
dec
rol
shlb
ret
and
mov
fdiv
add
push
sbb
pushf
cltd
adc
inc
int
push
pop
loop
leave
scas
fmull
push
jb
jae
stos
add
icebp
xchg
add
inc
pop
roll
daa
jmp
jnp
cmp
push
jne
xor
mov
adc
addl
inc
inc
add
dec
icebp
add
push
adc
loop
inc
and
gs
ds
cmpsl
out
push
add
jno
mov
ds
or
inc
testb
lods
daa
fstps
add
pushf
push
cmp
inc
gs
cvtpi2ps
mov
cltd
in
movsb
test
push
jb
aad
jge
fdivrl
ds
or
dec
pushf
xlat
inc
pushf
jno
cmc
jecxz
sbb
iret
adc
xchg
push
scas
and
or
add
testl
insb
test
or
dec
jmp
mov
jae
jnp
xchg
shll
out
lea
pop
in
xchg
cmpb
out
xor
daa
add
aas
loopne
repz
dec
call
stos
sub
cld
mov
pop
dec
pop
clc
daa
xor
roll
popf
in
lea
sbb
jns
and
and
test
xchg
mov
cmpxchg
stc
addr16
pop
insl
lods
aas
pusha
adc
mov
add
push
xor
sub
fsubrl
push
adc
movsb
mov
mov
sub
lcall
popa
dec
mov
adc
dec
dec
insb
les
insl
rclb
cwtl
pop
pop
js
jg
sbb
push
xor
imul
adc
outsl
sub
sub
in
jae
pop
movsb
shll
dec
popa
sar
pop
test
mov
stos
sbb
jmp
inc
aaa
arpl
lret
jecxz
jle
insb
sub
jmp
xor
ja
xor
ljmp
cmp
lahf
sti
lods
cwtl
js
gs
sbb
pusha
xchg
in
mov
xlat
test
adc
scas
lcall
push
jbe
jns
jb
jnp
repnz
sar
cs
js
into
movsl
sub
jp
clc
cmp
push
les
out
push
push
out
dec
std
aad
xor
decl
aad
adc
lret
add
mov
sbb
in
sbb
out
repz
and
pop
sub
sbb
sbb
fisubs
repnz
xor
ja
in
ficompl
or
out
mulb
jb
popf
xchg
jnp
outsl
mov
sub
push
mov
lret
rolb
enter
aas
jl
pop
pop
loopne
mov
cld
leave
dec
sub
sbb
or
mov
or
mov
cmp
insl
inc
ljmp
xlat
cmc
inc
jnp
mov
add
jge
push
imul
mov
sub
sub
das
ljmp
add
out
dec
xor
mov
leave
xor
nop
les
xchg
out
sarb
xchg
push
cli
sub
repz
push
cmp
les
xchg
xchg
mov
repz
loopne
imul
push
push
inc
cld
fwait
or
sub
xor
lcall
insb
test
in
lret
mov
decl
pop
adc
cmp
stos
sbb
push
ss
jmp
mulb
aad
xor
cmp
push
lret
popf
fadd
mov
jno
test
jmp
cltd
in
inc
outsl
das
rcrb
dec
pop
enter
fstpl
mov
stc
push
hlt
jecxz
in
sbb
mov
cmpl
adc
ljmp
aam
xor
sub
jp
std
sbb
aaa
pop
clc
je
push
mov
cmp
cs
rcl
arpl
sub
movb
jmp
addb
inc
imul
inc
addb
adc
insb
call
ds
dec
sub
jl
sbb
popa
clc
das
popa
sub
int3
roll
sbb
sbb
js
lcall
imul
add
sbb
push
sbb
dec
push
dec
aad
mov
xchg
inc
andb
mov
mov
and
xchg
push
xchg
lret
sub
jl
or
stos
inc
sub
leave
jnp
cmp
subb
in
in
ds
mov
out
jno
rcrl
jl
lahf
bound
dec
adc
and
or
add
movsb
repz
xor
and
cmpsb
xchg
movsl
push
pusha
fs
mov
mov
lahf
fs
add
out
or
jp
dec
sub
call
sbb
or
add
mov
repnz
repnz
leave
clc
add
std
aad
cmpsb
xor
jne
fisubl
xchg
imul
jl
out
mov
mov
push
inc
testb
pop
cmp
sub
mov
and
dec
inc
cmp
int3
and
xchg
fcom
test
jge
loopnew
mov
rorb
mov
add
push
cmp
ficomps
fimuls
inc
mov
in
pop
loopne
lock
adc
jne
pop
sti
xchg
push
jle
outsb
sbbb
ret
out
adc
mov
fwait
stc
adc
dec
sbb
push
sbb
inc
mov
mov
xchg
clc
cmpsb
push
inc
mov
mov
mov
and
dec
mov
ljmp
push
out
sub
mov
or
imul
dec
push
jmp
push
iret
fyl2x
outsl
or
push
pop
mov
fstl
rcpps
jp
jne
test
bound
add
dec
pop
in
ficoms
aaa
scas
mov
add
add
xor
pop
inc
test
testl
arpl
mov
lea
and
jp
xchg
rorl
add
daa
data16
lds
push
popa
mov
inc
xchg
dec
mov
mov
je
sub
loop
out
movsb
aam
inc
xlat
subl
dec
xlat
xchg
jge
xor
push
push
stos
cmp
xor
dec
mov
add
jl
stos
adc
pusha
shrb
imul
pop
ja
es
loop
daa
mov
jge
enter
imul
jp
jo
shlb
pop
or
lahf
inc
popf
test
sbb
mov
sbb
sahf
pusha
mov
testb
sahf
xchg
scas
push
iret
xlat
and
jne
jmp
xchg
in
dec
mov
js
and
mov
inc
jns
lcall
mov
div
ss
push
push
sub
daa
jne
call
fnsave
lods
adc
ljmp
cmp
ss
jb
ja
dec
movsl
sbb
mov
xor
sbb
xor
das
xor
scas
or
popa
xor
aaa
or
mov
rorb
push
sub
cli
int
fcompp
stc
mov
ficoms
mov
and
repz
and
push
mov
inc
int
lret
out
pop
jmp
mov
inc
sub
jmp
push
ss
xchg
lock
or
pop
or
test
iret
and
adc
js
cwtl
cmp
jno
cmc
loopne
addl
jne
jo
lods
test
scas
inc
or
or
rcrb
in
int
ja
jge
add
adc
inc
int3
addl
and
mov
inc
jl
cmp
push
pop
add
test
and
add
xor
fdiv
gs
sub
outsl
outsl
mov
mov
cs
lahf
aaa
std
push
lret
js
push
xor
ficoml
xchg
and
scas
add
lock
sub
call
adc
mov
mov
lods
cs
push
mov
lret
push
add
mov
fs
mov
or
dec
xor
fldcw
dec
cmpl
xlat
mov
inc
sbbl
les
push
fadd
in
test
add
jle
inc
xchg
fidivrl
out
inc
cmp
xchg
adc
negb
insl
loopne
xlat
shlb
rcr
insl
add
into
mov
jecxz
das
data16
jb
pop
pop
inc
jns
mov
add
pushf
lock
jno
cmp
faddl
sbb
sub
je
in
ja
pop
inc
xchg
mov
scas
jg
out
or
or
inc
pop
call
icebp
mov
mov
mov
mov
inc
pop
ds
repnz
add
pop
jecxz
xor
sarl
rol
pop
call
ret
lds
in
mov
add
das
movsb
jno
mov
push
and
push
stos
push
pop
xchg
std
adc
mov
lock
jp
mov
lcall
jp
push
pop
xorl
mov
jne
scas
bound
mov
sub
mov
sbb
xchg
mov
jmp
push
xor
mov
lea
push
lods
jecxz
scas
movsb
cld
mov
fidivl
push
adc
and
int3
jg
scas
or
xabort
sbb
stos
cmp
add
and
pop
push
push
jmp
sub
lret
jnp
aaa
mov
addb
imul
inc
subb
lahf
inc
mov
cmp
fmull
pushl
jg
push
jns
into
pop
daa
lcall
pop
out
cmpsl
imul
mov
fisubrl
mov
jmp
adc
pop
xchg
inc
push
sbb
jmp
mov
or
sub
stos
imul
mov
cld
pop
inc
enter
sbb
icebp
lcall
or
xor
or
push
das
dec
mov
rcll
xor
fs
push
sahf
mov
dec
nop
or
rcrl
pushf
mov
arpl
inc
mulb
imul
andl
mov
call
adc
cmp
mov
repnz
repz
sub
aaa
daa
fbstp
jl
xor
ficompl
rcll
scas
sub
pop
add
sub
adc
push
add
xchg
cltd
insl
sbb
pushf
jno
inc
xchg
sub
ret
or
popf
sub
or
push
sub
clc
cwtl
fxch
dec
adcb
roll
mov
in
pop
cltd
jl
adc
sub
pop
loope
jno
cld
les
dec
aaa
imul
ds
and
adc
jecxz
mov
mov
call
pushf
push
pop
add
mov
stos
aas
mov
testb
imulb
into
es
in
pop
fs
mov
lods
pop
dec
sub
fucomip
inc
adc
inc
add
add
push
cmp
mov
dec
clc
add
adc
daa
mov
mov
dec
xor
sbb
pop
iret
out
fsubs
bound
fwait
pop
or
jp
movsb
sbb
daa
push
pop
clc
mov
or
test
mov
xor
int
lea
loope
loope
ljmp
lods
repnz
push
dec
sub
xchg
iret
rcrl
jp
or
gs
push
lret
sbb
mov
test
jle
ss
pop
lahf
nop
sarb
js
test
das
or
jg
jo
stc
insl
ljmp
xchg
shll
lods
pop
xchg
push
or
fildl
jp
jp
mov
fisubs
push
push
out
push
mov
cwtl
xor
mov
mov
or
or
mov
inc
add
adc
push
das
mov
int
subl
out
jo
out
or
xchg
push
cmpb
hlt
ret
cli
inc
sub
adc
jb
mov
sbbl
xor
fisttpl
loop
shll
insl
jge
out
push
iret
mov
xchg
and
pop
pop
daa
jnp
and
xchg
lret
push
ret
or
pop
jb
cmp
mov
add
lahf
scas
data16
cmp
test
jb
insl
pop
xchg
inc
outsl
cmp
xchg
dec
cwtl
jo
jb
ror
mov
pop
loopne
icebp
inc
mov
mov
or
cmp
fwait
cmp
cwtl
mov
int3
push
inc
das
jo
lds
cwtl
push
rclb
imul
xchg
pop
aaa
mov
lret
nop
call
stos
lahf
orb
cmc
jo
fucomp
aam
inc
push
xor
add
pushf
push
jmp
inc
imul
imul
fs
ret
aaa
sti
xchg
xor
subl
sub
jl
mov
bound
cmp
out
fs
adc
push
and
mov
cmp
idivb
mov
in
inc
push
stos
lods
or
xchg
ret
lods
mov
insl
lea
or
out
mov
repz
jge
pop
incb
sub
cmc
push
lea
shlb
js
sbb
es
pop
pop
int
gs
mov
mov
sub
lcall
mov
lcall
test
cmp
mov
dec
xchg
lcall
pop
xor
nop
push
int
sti
and
jb
xchg
adc
jle
mov
clc
adc
cmp
or
fxam
push
in
xchg
in
aad
pop
lods
iret
push
sarl
inc
pop
jno
add
sti
cli
cmpsl
clc
stos
pushf
xor
cmp
adc
pop
push
das
xchg
ss
popa
push
pop
out
dec
pushw
shl
ret
imul
inc
out
add
fnstenv
int
je
mov
sbb
add
adc
jns
sub
mov
add
ret
xor
pop
sbb
pop
cmp
and
cmpb
cmp
int
jp
neg
dec
push
clc
or
xchg
ret
and
js
and
jmp
or
psubq
mov
inc
push
das
inc
lea
dec
push
mov
shlb
fcomi
sbb
sti
loop
sbb
and
imul
xchg
and
xor
cmpsl
mov
and
es
andl
pop
dec
cmp
rorb
pushl
icebp
push
xor
cmp
addb
fisubs
push
sbb
dec
jmp
and
lea
mov
xor
xor
push
lods
pushf
imul
or
or
mov
nop
rcrl
loopne
inc
cmpsl
test
addr16
insb
aad
add
std
test
push
in
stc
dec
xchg
das
iret
sub
lcall
and
and
insl
add
out
and
jnp
hlt
loope
mulb
aaa
mov
mov
test
adc
add
sbb
lahf
aad
orl
ja
fldt
insb
sub
out
pop
repnz
jns
cli
test
add
stos
pop
in
cmp
test
mov
xchg
jecxz
scas
sub
adc
iret
loop
lock
xchg
push
rclb
mov
lods
jecxz
repnz
cld
fwait
push
mov
and
adc
adc
mov
inc
ss
and
xor
jne
xorb
test
dec
or
sbb
bound
push
ja
mov
mov
adc
adc
sti
mov
inc
mov
nop
fs
jge
aaa
pop
ljmp
sbb
jne
jge
lods
pop
divl
jno
adc
xchg
pop
add
popf
int
push
mov
adc
inc
inc
das
pop
ret
ret
test
adc
and
std
xchg
xor
and
cmp
fldlg2
js
repz
icebp
test
pop
push
push
clc
std
cmc
adc
rcll
push
dec
stc
mov
lret
loope
xchg
add
xor
enter
gs
jae
dec
and
shrb
inc
aaa
cmp
ja
cs
push
pop
movsb
adc
push
pusha
pop
out
in
pop
jne
dec
add
shll
lahf
imul
xor
inc
sub
cmpsb
inc
xchg
xchg
out
jp
insb
jbe
dec
push
popl
mov
icebp
xchg
cmp
int
push
cmc
in
push
aas
imul
cmp
aaa
sarl
mov
ret
or
outsb
xchg
adc
or
stos
inc
mov
dec
lcall
fucomi
xchg
lds
adc
or
or
jns
shrb
sti
arpl
popa
pop
fidivrl
mov
sub
mov
xchg
bswap
shll
loop
xor
imul
test
test
pop
xor
mov
arpl
jne
cwtl
sbb
pop
xchg
adc
push
lahf
or
fisttpll
shll
jl,pt
ljmp
xchg
add
fs
cmp
dec
imull
ret
es
jne
cmpsb
xchg
repz
fs
mov
pop
mov
sti
mov
ds
mov
call
push
cwtl
add
nop
xchg
sahf
hlt
mov
add
sbb
add
adc
sbb
xchg
or
dec
mov
xchg
mov
mov
testb
scas
faddl
push
mov
fsubrs
jnp
push
inc
adc
add
cmp
out
fstl
pop
mov
cmp
fistl
icebp
cmpsb
mov
mov
insb
push
fs
arpl
ss
mov
mul
jbe,pt
and
sbb
fistpll
push
ja
sbb
leave
mov
xchg
jecxz
push
cmp
mov
cmp
mov
cmp
cld
and
push
or
outsl
pushl
stos
pop
mov
jle
pop
add
xor
sbb
jnp
cli
outsb
enter
add
cmp
int
inc
arpl
mov
xor
dec
pop
or
fistps
inc
push
mov
cmpb
mov
loope
out
out
scas
inc
call
loopne
mov
inc
and
xor
add
fiaddl
and
mov
insl
inc
mov
daa
dec
stc
add
in
pop
movsl
jnp
movsb
lahf
mov
hlt
pop
ss
sbb
in
mov
cmp
pop
xor
inc
adc
push
lock
daa
jge
lahf
out
adc
loopne
sub
arpl
cmpsl
mov
aas
cmp
jo
xchg
mov
in
sub
or
into
pop
push
push
aam
xlat
scas
ja
adc
xor
enter
roll
pop
call
in
xor
mov
aam
pop
dec
push
bound
aas
rcrb
jnp
pop
jg
pop
pop
jl
test
das
and
in
sbb
clc
jp
jo
mov
mov
sbb
push
mov
or
mov
xchg
mov
mov
push
in
cmp
fs
sub
or
mov
mov
sub
fdivl
cmpsl
push
pop
pusha
mov
int
xchg
or
fiaddl
shlb
lea
xor
sti
adc
enter
mov
test
add
fwait
sbb
cmp
jnp
jl
pop
cwtl
xor
clc
cmp
push
xor
adc
loop
loop
rclb
fwait
jmp
dec
jecxz
mov
push
xchg
pop
pop
pop
adc
sarl
jno
fcoml
jnp
addr16
mov
or
into
cmp
jl
lods
pop
pusha
or
jle
lds
or
pop
lahf
dec
outsl
mov
pop
mov
sti
aas
jmp
fistpl
lret
out
cmp
sub
sbb
or
pop
lahf
dec
outsl
mov
pop
mov
sti
aas
jmp
fistpl
lret
out
cmp
arpl
arpl
or
pop
lahf
dec
outsl
arpl
dec
fwait
pop
mov
sti
ds
sti
sbb
sub
sbb
or
fistpl
dec
nop
inc
addb
fwait
pop
cld
pop
jae
adc
and
xor
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
xchg
push
cmpsl
es
or
movsl
cmp
xchg
xchg
daa
cmpsb
ss
push
push
addr16
testb
mov
movl
jbe
xchg
mulb
cmpsb
aaa
mov
push
movsb
ja
xchg
xchg
push
cmpsl
es
movl
jbe
cs
dec
ret
inc
cmpl
adc
dec
cmpsl
dec
sbbl
sbb
sahf
scas
repz
add
adc
out
jae
iret
push
sbb
sti
inc
dec
leave
cmp
xlat
test
cli
outsb
xchg
imul
mov
cmp
mov
cmpsl
xlat
pop
lahf
add
rol
pop
dec
lret
mov
lcall
testl
sbb
xchg
xchg
xchg
int
mov
loopne
ret
jmp
xchg
cli
fstps
out
lods
pop
sub
sbb
js
ja
inc
mov
xlat
inc
fs
cmc
out
jp
shll
test
aaa
sbb
jp
push
iret
add
adc
xchg
push
repz
fdivs
ficoml
and
div
dec
push
xchg
push
cmpsl
es
movl
jbe
xchg
xchg
daa
cmpsb
aaa
mov
push
addr16
lahf
imul
pop
sub
es
jecxz
loop
into
dec
lock
cmpsl
push
movsl
add
xor
ret
inc
push
xchg
xor
incb
and
movsl
cmp
loop
xchg
inc
enter
mov
push
out
divl
xchg
xchg
daa
cmpsb
aaa
mov
push
addr16
testb
mov
movl
jbe
xchg
xchg
daa
cmpsb
aaa
mov
push
addr16
testb
cwtl
jno
mov
ljmp
es
test
cs
out
jns
mov
inc
dec
das
into
or
repnz
stc
outsb
mov
js
jmp
mov
mov
add
ja
gs
sub
fidivs
or
loopne
pop
ud0
jbe
idiv
cmpl
movsl
push
xchg
aaa
ds
bound
sub
cmp
shrl
bound
pop
popa
or
cmp
popf
lea
xchg
mov
mov
fwait
cmp
mov
mov
cmp
sub
mov
loop
inc
push
or
jae
lods
loop
fnstcw
test
mov
call
pop
in
pop
repnz
xchg
out
in
out
jmp
jne
pop
data16
jp
adc
xlat
or
jb
aam
cs
sbb
ret
movsb
cmp
xchg
int3
push
adc
jle
popf
and
cmp
lds
dec
fsts
xchg
ja
lods
push
jp
pop
imul
add
xchg
iret
or
in
sub
mov
cmp
pop
rol
icebp
cmp
dec
and
inc
jns
lahf
mov
leave
jge
bound
or
fldt
pop
add
ljmp
adc
push
jp
int3
xchg
shrb
fldt
test
out
pushf
sarl
xchg
loope
mov
xlat
das
insb
pop
lea
jl
push
test
scas
pop
pop
xchg
xorl
call
fst
popa
ret
jne
pavgb
or
push
shrb
int
ror
lahf
mov
das
adc
push
mov
jle
aam
mov
addr16
ss
das
shlb
mov
call
fdivl
sti
push
add
rcll
inc
mov
les
testb
das
mov
dec
lret
push
sar
shll
jnp
mov
mov
push
ds
xchg
jnp
sti
add
int3
ret
dec
insb
mov
push
xor
push
test
add
dec
rcrl
adc
mov
scas
in
insb
push
lods
pop
xchg
loope
cmpb
pushf
xor
fidivrl
insl
icebp
inc
inc
or
sahf
repz
ret
cmp
out
daa
mov
push
mov
sbb
jge
out
jge
or
sbb
loopne
xor
fwait
daa
enter
out
and
xchg
adc
add
scas
lods
and
cmp
pop
fsubrl
sbb
and
add
sarl
fisubl
mov
mov
mov
lret
ljmp
pop
pop
jne
adc
shrb
push
adc
std
pop
flds
xchg
mov
aas
push
push
push
repnz
sbb
cltd
mov
pop
lds
ret
into
fstpt
cld
mov
fsubl
push
xchg
mov
lahf
push
in
ds
imul
xchg
and
ss
cwtl
stc
in
out
push
dec
jb
mov
jp
sbb
out
cltd
mov
mov
pop
xchg
movsb
ljmp
xor
push
mov
sbb
leave
test
lds
fistpll
call
inc
pop
cmp
xor
push
rclb
or
or
inc
or
mov
testl
nop
pusha
cltd
pop
dec
dec
cwtl
movsl
iret
cmp
ljmp
push
scas
es
ficompl
pop
jae
ljmp
aam
ds
jne
jns
inc
cmpsb
mov
xchg
jns
popa
sub
fwait
ds
lret
push
xchg
and
mov
imul
imul
and
mov
xchg
outsb
jp
push
mov
mov
xorl
call
dec
push
push
imull
sub
stc
das
mov
mov
lods
das
jg
fs
es
das
fidivl
popf
mov
jno
mov
clc
xchg
push
mov
xchg
push
daa
sbb
xor
dec
xchg
adc
or
out
mov
outsl
test
xor
into
inc
call
hlt
and
cmc
loop
jno
mov
mov
repnz
jo
imul
outsl
lock
repnz
daa
shrb
mov
mov
hlt
jno
out
mov
pop
xchg
push
imul
pushf
xlat
push
mov
addr16
or
sbb
loop
pop
clc
cs
inc
mov
rcr
into
movsl
mov
or
repz
sbb
add
cs
leave
aam
test
cmp
jns
push
mov
push
inc
cltd
xor
fisttpll
shlb
mov
push
xor
mov
fistpll
outsb
pop
jb
ficoms
popf
push
add
repz
daa
idivb
rorb
movsb
hlt
jmp
les
lods
inc
shlb
mov
or
scas
mov
xchg
cmp
sti
fcmovb
add
outsb
mov
mov
pop
xor
js
lea
stos
movl
repz
mov
cmp
jmp
aas
dec
enter
mov
movb
mov
call
in
adc
and
push
mov
pop
sarb
push
sbb
xchg
mov
imull
jge
mov
int
dec
hlt
out
push
arpl
xor
or
cmp
push
addb
es
mov
scas
sub
mov
jle
aaa
push
arpl
sbb
ljmp
addb
xor
push
stos
jnp
cmpsb
push
mov
mov
sbb
mov
popa
fsubl
mov
fisttpl
pushf
xor
add
adc
mov
mov
ja
and
cmpsb
imul
rcrl
jge
in
pop
sahf
int
and
addr16
addr16
jmp
or
adc
cmp
rolb
dec
jg
pop
add
pop
mov
es
mov
mov
icebp
mov
sub
xor
mov
dec
add
jecxz
jl
dec
mov
pop
popa
aaa
sub
lret
in
jp
mov
inc
jnp
lret
mov
test
fucomip
aad
std
xchg
in
imul
popf
push
mov
or
mov
mov
push
or
sub
fs
cli
test
mov
lods
mull
mov
shr
lea
mov
loop
cmp
xchg
adc
jp
loop
fdiv
lahf
fisubl
or
sahf
mov
mov
ss
push
insl
pop
dec
leave
add
push
cmp
and
mov
lcall
add
sti
xchg
pop
cmpsl
pop
and
das
jns
cmpsl
push
push
cmpsb
xor
orb
les
xchg
xlat
mov
jl
xchg
pusha
loopne
inc
add
rolb
js
jge
je
push
sub
daa
decl
in
cli
stc
jno
scas
jnp
loop
lret
jmp
mov
fstps
push
int
into
shl
sbb
outsb
add
or
jmp
int
sbb
xor
pop
jle
addr16
jmp
xchg
scas
pop
inc
hlt
push
in
sti
leave
dec
add
sub
scas
pop
sub
test
test
out
xlat
mov
daa
sub
dec
aas
daa
fmul
in
mov
mov
push
out
test
mov
jne
mov
sbb
mov
andl
and
lea
mov
cli
cmc
adc
roll
push
out
mov
mov
xor
mov
enter
sub
pop
outsl
pop
xchg
mov
lods
xor
sbb
pop
jmp
jns
aas
in
jns
jne
fwait
gs
aaa
ret
or
adc
adc
cld
out
jnp
mov
mov
fs
aad
rol
mov
dec
int
popf
rorb
add
sub
and
imul
movsl
rolb
cmp
fidivrl
aas
xchg
sub
jno
add
xchg
mov
jp
les
add
enter
movsb
lods
lods
xchg
imul
jl
inc
fwait
adc
jno
pushf
loop
sbbb
dec
mov
stc
or
add
testl
mov
pop
mov
enter
test
jg
fcoms
adc
test
dec
stos
in
arpl
mov
daa
xchg
sub
call
cmpsl
movsb
push
and
lods
in
xor
xor
push
fwait
loop
lret
sahf
in
xor
jmp
xchg
cmp
je
xor
sbb
cmp
push
add
mov
leave
lock
xlat
insl
dec
rcll
dec
pop
ljmp
out
popa
test
pop
popa
in
cmp
int
jnp
fmull
rcll
outsl
out
shr
je
popf
push
les
pop
pop
and
or
sbb
mov
jge
sub
cmp
jo
das
leave
out
jecxz
sarb
cltd
cmc
jb
cmp
cltd
pop
pop
mov
imul
test
sub
dec
fstl
iret
xor
cld
and
stos
adc
test
sar
in
sbb
xor
jge
cmp
mov
sub
or
out
or
add
adc
xchg
push
mov
ror
mov
js
cmpsl
lahf
mov
out
mov
ja
and
pop
leave
mov
js
lret
das
fsub
jns
xchg
dec
push
pop
or
xor
movsb
int3
imul
movsb
xor
inc
pop
std
sub
ljmp
inc
mov
push
outsb
mov
inc
jecxz
lahf
rolb
mov
add
and
sbb
fwait
mov
mov
or
mov
cmc
leave
jge
mov
repz
outsb
push
test
addr16
arpl
in
and
mov
arpl
add
fstpt
mov
and
pop
mov
mov
adc
mov
cltd
mov
stc
fcoms
stos
pop
movsl
hlt
test
jne
mov
and
loopne
xchg
jl
cmp
cmp
insl
test
dec
add
jne
cli
rcrl
ficompl
jmp
push
fs
sub
mov
mov
es
jmp
stos
movsb
mov
ds
lods
add
mov
add
fcmovnbe
sub
push
mov
neg
and
jecxz
mov
mov
pop
sar
std
fidivs
push
shll
cs
stc
lods
push
cwtl
adc
scas
stos
nop
cli
xchg
jle
mov
inc
push
arpl
jmp
fsubrs
int
leave
jne
mov
test
sbb
add
mov
sbb
or
into
adc
sbb
and
jns
jl
les
xor
call
cmp
lock
and
fxch
xchg
adc
xchg
push
fdivs
aad
push
popa
in
neg
adc
mov
mov
jbe
push
pop
xchg
cli
mov
mov
out
jle
outsb
jecxz
insb
jmp
mov
repz
popa
stos
push
push
or
mov
aas
pop
push
dec
stos
or
aam
fbstp
pop
sahf
clc
je
push
push
dec
mov
insl
jo
mov
push
repnz
jb
push
mov
mov
mov
push
loope
mov
mov
sbb
push
or
sbb
push
es
pop
pop
aam
icebp
dec
popf
mov
cmpsb
pop
out
sub
push
push
cmp
xlat
gs
push
sti
xchg
jmp
bound
xchg
mov
jmp
in
iret
push
lahf
cs
shrb
sub
or
xchg
pop
xor
push
std
and
add
xchg
aad
rclb
rclb
dec
jae
jmp
mov
stos
sbb
add
inc
mov
add
inc
rcrl
fs
push
dec
xchg
fisubs
jnp
fwait
push
orb
xor
in
push
sbb
enter
xchg
cmp
shrl
outsb
jne
cld
outsl
dec
push
stos
scas
cmp
adc
sbb
cmp
pusha
cmpsb
rcrl
stos
inc
dec
inc
ret
push
ss
and
sti
es
xchg
push
dec
sbb
adc
lods
xchg
xchg
sbb
inc
ds
and
xchg
push
outsl
add
sbb
fsubr
lock
sub
mov
jmp
cli
fiadds
fnsave
xchg
loop
pop
cmp
mov
decl
push
cmc
inc
xchg
mov
and
scas
insb
push
sub
cwtl
mov
cmp
jbe
pop
pop
into
push
aas
xor
iret
aad
dec
insb
aam
push
adc
xchg
mov
dec
mov
or
lods
and
dec
xor
pop
xor
in
sbb
call
push
push
xor
inc
pop
insb
cmp
pop
mov
add
das
push
test
arpl
jnp
fidivs
cmp
into
lcall
pop
adcl
mov
xchg
les
jnp
cli
into
popf
jnp
pop
sub
or
ja
mov
decb
jge
adc
mov
push
mov
ss
test
push
sbb
in
out
and
sbb
pop
stc
icebp
out
or
mov
clc
dec
dec
sahf
pop
sbb
pop
pop
aas
stos
and
out
enter
nop
in
inc
and
inc
jns
xor
in
pop
jle
pop
sahf
sbb
push
push
jle
sub
gs
call
inc
ficoms
and
sub
out
push
dec
call
pop
sub
lret
cwtl
movsl
xor
sbb
xchg
fneni(8087
pop
dec
xor
pop
inc
test
mov
push
out
sub
inc
mov
inc
cmp
imul
xchg
mov
or
fdivrp
pop
jo
push
dec
addl
rolb
pop
pop
movsb
int3
pop
sbbb
jnp
popf
sahf
mov
mov
cmp
out
mov
xlat
mov
inc
pop
into
jns
data16
jmp
xchg
mov
jle
loop
outsl
jmp
xlat
lret
mov
mov
fidivrl
into
and
test
mov
cmovbe
subb
add
ja
inc
fbld
roll
cmp
inc
lret
xchg
sub
jo
rcl
mov
cltd
mov
in
push
scas
call
xor
and
push
lcall
loopne
or
jbe
mov
sahf
xorl
jg
pop
xor
add
in
ds
fwait
xor
add
into
popa
sti
xchg
addr16
arpl
sbb
leave
adc
push
out
andb
lret
sub
sti
mov
xor
xchg
sub
repz
rcll
psllq
imul
lods
stos
orb
pop
cmpsb
stc
icebp
mov
push
xchg
in
pop
xchg
inc
fstpt
jge
push
nop
xor
out
sub
inc
and
popf
xchg
dec
stos
push
repz
adc
aam
add
cmp
sub
into
fldt
leave
sub
imul
fcoml
pop
xchg
aam
mov
push
mov
adc
or
lret
push
inc
cmpsb
dec
in
cmpsl
xchg
push
clc
arpl
imul
mov
add
push
scas
xchg
jmp
and
mov
in
repz
sub
push
jmp
and
js
les
int
sbb
and
push
lds
cltd
cmp
mov
adc
leave
mov
into
push
lods
xchg
jnp
push
mov
jecxz
out
xchg
addb
pop
inc
cs
loopne
daa
clc
jns
int3
add
insl
lds
jmp
lods
mov
jbe
leave
jle
test
cld
sub
hlt
es
pop
lcall
stos
lret
mov
mov
les
jg
push
pop
repnz
push
mull
lret
cmpl
int
notb
cmp
push
test
movsb
dec
inc
aam
leave
lods
in
mov
sub
jle,pt
adc
push
mov
cwtl
lahf
aaa
cmp
cmpsl
ljmp
xchg
mov
sbb
or
dec
sub
out
movsb
push
loopne
cmp
aad
lods
or
jo
fxch
ficoml
inc
xchg
jge
sbb
je
outsl
pop
popa
and
xchg
pop
lea
jae
sbb
cltd
rclb
sbb
pop
stos
sbb
cmp
pop
xchg
popf
lahf
push
loop
add
jp
mov
lods
push
push
jae
add
mov
dec
adc
int
or
popf
and
std
js
mov
mov
push
fmul
pop
lret
cmpsl
fldl
mov
call
popa
cmp
sbb
fcomps
adc
or
sbb
sbb
mov
hlt
sub
pslld
mov
sbb
iret
dec
data16
adc
mov
fld
mov
bound
fcom
pop
dec
push
push
and
nop
sbb
jge
add
adc
repz
adcl
pop
icebp
xor
sbb
maskmovq
negl
es
cmp
adc
xchg
jle
inc
jno
add
loope
add
arpl
push
scas
test
imul
jle
jb
lcall
jb
int
inc
mov
fildll
shll
mov
mov
rorb
fmull
mov
xchg
in
jbe
popa
pop
xchg
jge
std
xlat
push
mov
add
mov
push
jne
inc
outsl
cmpsl
xor
inc
sbb
jle
mov
shlb
inc
jo
mov
push
fimuls
cwtl
cwtl
repnz
js
test
loopne
inc
cltd
push
mov
jne
imul
paddusb
add
jne
add
scas
cmpsb
inc
lahf
jp
add
lcall
pop
nop
add
jle
jp
arpl
jge
xchg
xchg
and
inc
mov
and
adcl
fwait
push
loope
rorb
adc
or
popf
mov
jnp
push
icebp
sbb
push
sbb
fsubrl
daa
orl
sub
roll
cli
dec
jnp
lds
in
push
push
push
sbb
push
cmp
xor
ret
sbb
add
cmc
adc
mov
stc
mov
fs
out
stos
sub
jmp
addr16
xor
aas
cld
loop
dec
cmc
out
jge
mov
in
lock
inc
xchg
xchg
adc
stos
int
push
sub
mov
pop
pop
call
jno
je
and
fstpl
mov
cmp
inc
jb
mov
sbb
rolb
leave
cmp
jl
lods
leave
and
notb
mov
out
push
mov
cltd
adc
sbb
insb
cli
xchg
pushl
mov
das
dec
test
stos
shlb
lahf
popf
sbb
testb
and
in
lods
xchg
fsubrs
les
sub
dec
mov
ret
inc
dec
pop
jl
push
sub
scas
repnz
loop
push
mov
loope
aaa
adc
sub
adc
xlat
mov
xchg
sub
sbb
inc
aad
xchg
xchg
adc
movsb
mov
dec
or
add
push
sbb
xor
lcall
or
test
jg
cltd
pop
mov
pop
inc
in
jne
add
data16
push
xorl
pop
mov
and
and
dec
or
xor
mov
or
setg
fucomip
push
xor
sbb
pushf
xchg
fdivrl
cmp
lret
or
in
mov
mov
add
xchg
inc
adc
in
lcall
mov
sub
arpl
dec
add
jb
inc
je
jle
xchg
adc
pop
add
fdivr
ja
inc
int
dec
imul
lea
stos
addr16
sbb
cwtl
stc
cwtl
push
inc
adc
icebp
pushf
pop
in
add
vmread
pushf
lahf
mov
imul
inc
mull
sbb
xor
sti
sbb
cmp
push
xchg
pop
pusha
jo
in
xor
push
pushl
or
cmp
push
mov
push
hlt
icebp
xor
and
dec
movsb
and
xor
jb
push
stc
mov
jae
adc
rorb
pusha
outsb
cld
mov
inc
xchg
mov
sahf
mov
pop
dec
lahf
scas
iret
inc
sahf
xchg
add
pop
mov
push
cltd
das
addb
inc
cmp
outsb
sub
shl
or
pop
mov
xlat
cltd
push
icebp
pop
loope
es
sbb
mov
sub
xor
and
lods
lahf
pop
mov
sbb
jb
insb
sbb
pop
jp
or
lret
cmp
sahf
push
xor
outsl
sub
cmp
add
shlb
aaa
adc
daa
inc
arpl
and
shll
sub
adc
pop
xor
hlt
adc
adcl
out
xchg
sub
inc
mov
cmp
rolb
cmpsb
cmpsl
lret
pop
mov
push
dec
mov
dec
addl
xchg
and
inc
fwait
jo
testb
sub
cmpl
xchg
sahf
lds
loop
jns
xchg
xor
jns
std
andb
shl
test
push
std
addb
movl
jbe
xchg
xchg
daa
cmpsb
aaa
mov
push
addr16
testb
mov
movl
jbe
xchg
xchg
daa
cmpsb
aaa
mov
push
addr16
testb
mov
inc
inc
xlat
out
ja
pop
push
pop
xchg
daa
cmpsb
aaa
mov
push
addr16
testb
mov
movl
jbe
xchg
cmp
cmpsb
aaa
shll
daa
sub
sbb
or
in
push
push
lea
push
mov
push
call
cmpl
je
cmpl
je
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
and
inc
add
bound
adc
and
repnz
loop
xchg
bnd
shlb
add
bound
jb
inc
xor
mov
repnz
loop
xchg
repz
shlb
add
bound
jb
inc
xor
mov
xor
loop
and
push
push
push
add
jnp
insl
aam
ret
test
into
cltd
xchg
mov
xchg
mov
xchg
jns
sub
xchg
imul
int
std
arpl
popf
ljmp
push
outsl
aas
mov
mov
repnz
pop
xchg
push
inc
mov
mov
xchg
notl
and
xchg
jns
inc
dec
shlb
shll
or
lea
sbb
push
jb
loope
xlat
arpl
sarb
dec
pop
xorl
mov
popf
adc
mov
xchg
mov
shll
mov
repnz
xlat
lret
jae
pop
dec
fyl2xp1
add
stc
inc
cmpsl
in
not
jb
clc
loop
insl
mov
mov
add
bound
jb
inc
xor
mov
repnz
loop
xchg
repnz
shl
inc
aas
push
xchg
inc
xor
and
jge
inc
sub
mov
xlat
mov
sti
cmpsl
xor
or
push
xor
pop
pop
pop
and
xchg
aad
jmp
in
stos
mov
ss
push
ja
daa
jle
add
push
and
repnz
loop
xchg
repnz
shlb
add
bound
jb
inc
xor
mov
repnz
loop
xchg
repnz
shlb
lahf
subb
xlat
adcb
int
adc
popa
loop
push
test
lea
orb
and
mov
sbb
and
fwait
xor
mul
mov
xorb
mov
subb
xchg
xchg
rep
std
test
jbe,pn
ja
xchg
xchg
push
push
jne
mov
jb
xorb
adcb
jmp
pop
incl
pop
faddp
jnp
loop
das
fstp
bnd
sub
std
sbbb
add
xor
aad
add
cltd
cltd
mov
stc
mov
lret
imul
and
mov
hlt
movsl
push
push
shlb
shll
out
pop
scas
pop
stos
aam
inc
xchg
add
xchg
cmp
and
in
adc
fldt
cmp
mov
adc
decl
xor
aad
sbbl
call
fsub
mov
insl
xor
dec
mov
mov
lcall
inc
add
sbb
inc
fldt
loopne
fisttpl
das
fwait
xor
insb
daa
movsb
pop
or
add
cli
jnp
cmc
jge
mov
mov
movsb
sbb
mov
xchg
push
jne
std
cmpsb
inc
fisttpl
mov
mov
xchg
icebp
xor
lds
mov
ja
sub
fbld
addr16
iret
loopne
sahf
or
out
push
jne
push
dec
test
mov
stc
jae
or
iret
imul
lahf
adc
dec
call
mov
ret
mov
jecxz
movsb
in
add
cmp
jno
aas
lock
add
jne
leave
xor
dec
stos
rol
push
push
mov
cmp
mov
mov
xor
sti
movsl
mov
push
call
imul
roll
lods
xor
fbstp
or
fmuls
insl
cmc
dec
xchg
sti
in
add
out
adcb
and
jg
mov
fs
iret
mov
add
mov
cs
leave
adc
inc
cmp
test
xchg
stos
nop
push
dec
mov
icebp
ret
stc
inc
ss
cmp
ret
ja
neg
pop
mov
stos
or
mov
fidivrs
pop
mov
dec
cmp
mov
fwait
dec
inc
loop
sbb
in
jmp
xor
sahf
cltd
jmp
push
mov
mov
lret
xlat
jnp
mov
or
mov
fnstcw
into
mov
xchg
cmp
cmp
rcrb
cwtl
inc
sti
jle
daa
iret
filds
jg
fldcw
mov
lods
outsb
inc
mov
iret
inc
into
add
and
dec
adcb
mov
sub
lds
leave
pop
fwait
xchg
sbb
sub
xchg
cld
test
jg
lock
push
ficoms
sbb
lret
mov
and
out
jnp
in
sbb
inc
cmpl
fstl
push
hlt
in
xchg
mov
or
push
fcmovnu
in
adc
cmp
inc
xchg
jae
jle
adcb
testb
int
xor
mov
stc
test
pop
shll
sub
pop
xorl
lahf
and
sbb
rorl
pop
fmul
jno
lcall
fists
jmp
shl
orb
ja
or
mov
mov
xor
mov
inc
pop
test
push
popf
iret
mov
fsubrp
repnz
adc
or
ficomps
mov
xchg
out
sub
sbb
xchg
popf
mov
dec
rolb
insl
andl
xchg
pop
mov
fimuls
enter
mov
cmpsb
sub
lds
stos
test
inc
pop
jb
inc
in
int
adc
adc
lret
test
add
sub
mov
xlat
gs
mov
int3
icebp
rorb
les
fisubrs
jno
mov
jno
int3
jbe
test
lret
or
icebp
mov
jp
xchg
and
sarb
lods
aad
pop
cmp
dec
add
jmp
movl
inc
shl
das
inc
dec
inc
xchg
pop
ret
mov
pop
jmp
xchg
xchg
sarb
je
mov
sub
pop
addr16
mov
push
and
jge
and
dec
aas
sbb
jbe
movsl
or
pop
xchg
push
mov
mov
sbb
lret
sub
cmp
sub
icebp
fcmovnbe
rcrl
repz
enter
and
scas
sub
inc
adcl
sahf
jle
jmp
shll
clc
mov
outsb
mov
iret
addr16
es
cmc
sbb
dec
jo
inc
cli
and
fs
shl
mov
cmc
push
push
add
dec
dec
shlb
sti
gs
pusha
test
push
jno
pop
adc
fisubs
jge
in
cli
mov
int
jmp
inc
rcrb
push
dec
mov
mov
ret
mov
dec
pop
mov
aad
fisttps
sbb
repz
loopne
or
and
mov
iret
es
pop
jno
clc
mov
jnp
fnsave
arpl
mov
in
iret
xor
in
std
aaa
xchg
jle
sub
outsl
sub
std
or
mov
adc
mov
add
adc
mov
xlat
xchg
insb
test
pushf
pop
clc
rclb
cmpsb
cmp
xchg
push
popa
adc
imul
lock
pusha
fwait
xchg
in
clc
cmp
xchg
sub
fmull
dec
dec
scas
fdivl
fiaddl
jge
aas
or
cwtl
mov
mov
dec
push
xlat
adc
ja
cmp
addl
or
out
cmp
lock
xlat
mov
gs
mov
iret
sbb
daa
push
xlat
xor
or
in
xchg
adcb
xor
stc
sub
loop
add
imul
jmp
gs
inc
pop
push
add
cmp
fsubs
pop
icebp
mov
js
xchg
push
lcall
sub
inc
xlat
adc
inc
je
popa
ret
push
and
add
pushf
pop
mov
aaa
xchg
add
or
sahf
daa
sbb
xor
imul
xor
xor
out
add
mov
cmpsl
rcrl
dec
scas
test
inc
cmpsl
sbb
push
dec
mov
xlat
sub
aam
xchg
sub
xchg
imul
je
outsl
push
iret
dec
mov
movsl
mov
imul
adc
add
sbb
dec
mov
cmpsb
sahf
sbb
dec
jp
lods
cmp
std
mov
ret
imul
repnz
jb
jne
jb
sub
pusha
int
cltd
push
leave
xchg
cli
ljmp
ret
sub
xor
js
mov
adc
ds
add
subb
andl
lret
mov
fs
pop
int
adc
mov
popa
call
outsl
iret
loopne
cli
and
arpl
int
ret
xchg
lock
js
insl
fwait
mov
fwait
mov
cmpsb
fstpl
mov
icebp
cli
jne
dec
mov
cmpl
xchg
push
xor
stos
or
xor
xchg
push
sbb
or
mov
push
js
dec
insb
mov
adc
subl
cmpsb
orb
and
test
pop
jne
push
and
jns
push
imul
pop
dec
ja
out
jl
mov
cmpsl
push
ja
sahf
int3
adc
imul
cld
mov
sbb
sbb
pop
cmpl
andl
push
push
dec
sub
sbb
mov
or
push
cs
jb
sbb
mov
xchg
and
repz
outsl
and
mov
mov
test
flds
out
push
xor
mov
sbb
mov
sbb
push
push
or
sbb
out
test
out
cmc
jmp
and
jl
data16
aam
mov
xchg
les
das
adc
fisttpl
and
bnd
sbb
mov
insl
jge
test
cwtl
xlat
cld
mov
leave
ss
shr
push
test
cmp
jne
fmul
mov
mov
cmp
mov
dec
ret
inc
pushf
cmp
cmpsl
shll
mov
dec
and
inc
cmp
push
dec
enter
in
roll
ret
dec
outsb
ret
jbe
testb
cmc
or
or
sbb
jo
sub
shll
les
out
rcrl
mov
rcl
notb
add
xchg
mov
adc
xchg
pop
jnp
mov
gs
inc
adcw
stos
pop
mov
in
mov
dec
sbb
dec
jae
add
daa
adc
or
ss
nop
lret
or
mov
inc
sbb
lret
pushf
pushf
icebp
repz
mov
lret
mov
mov
ljmp
stc
push
outsb
popa
into
cltd
push
shrb
ljmp
stos
lea
rol
scas
pop
sti
sub
les
into
push
repz
sarb
lods
pusha
lret
mov
dec
xchg
adc
push
push
push
and
leave
mov
xchg
add
sub
xlat
lcall
insb
mov
xor
nop
pushf
mov
aaa
jns
arpl
xor
or
mov
lods
in
xor
repnz
add
cmp
mov
inc
data16
lret
push
addb
fldenv
scas
inc
adc
sarb
cmp
xlat
test
sbb
dec
stos
jg
adc
pop
push
dec
xchg
dec
add
test
mov
out
out
sbbb
xlat
in
or
cmp
cltd
lret
test
clc
lock
and
inc
and
lret
in
dec
sahf
mov
cli
scas
nop
push
stos
sbb
push
loope
data16
cmp
push
mov
and
mov
xchg
arpl
push
jo
outsl
or
stos
lret
or
sbb
dec
addr16
xchg
inc
pushf
fcomps
in
popa
xor
movsl
std
dec
jbe
adc
and
inc
xor
int
and
push
out
aas
mov
mov
nop
xchg
push
call
sbb
imul
xchg
enter
loopne
push
lea
pop
adc
add
into
cmpsl
xchg
sahf
lahf
bound
int3
pop
xor
sti
xor
and
fisttpll
loopne
push
xchg
inc
gs
adc
pop
sub
mov
xchg
pop
cmp
scas
xchg
loop
out
fldl
adc
pop
int
sub
xor
lcall
and
insb
std
lret
aaa
cmp
sub
xchg
aad
add
pop
ja
sbb
pop
or
cmp
ljmp
mov
adc
sub
fstps
sbb
pop
dec
scas
arpl
fmull
jmp
cmp
pop
jg
sbb
pop
mov
push
std
int3
in
dec
cmpsb
xor
xlat
adc
jg
jg
inc
xor
xchg
adc
mov
leave
scas
data16
jmp
add
stos
mov
jnp
bnd
cmp
xchg
xchg
push
lea
out
or
nop
jnp
sbbb
push
inc
insl
add
push
icebp
cmpsb
sub
js
inc
daa
aam
test
popa
ss
movsb
daa
ljmp
lahf
ja
dec
rcrl
lea
jmp
adc
mov
adc
jne
mov
fwait
mov
xchg
cmpsl
cld
or
in
cmpsb
scas
mov
mov
lcall
jp
pop
mov
outsb
cli
cmp
lock
sti
aad
stos
adc
mov
pushf
subb
dec
cltd
stos
shl
aad
xor
push
test
ds
jp
jp
jnp
jno
hlt
movsl
xchg
outsl
sbb
xchg
xor
pushl
stos
fcmovb
dec
std
adc
pop
mov
scas
cmp
cltd
or
pop
adc
stc
lret
rorl
sbb
mov
adc
imul
jl
adc
sahf
movsb
cltd
andl
push
push
dec
arpl
mov
out
mov
cmp
or
mov
push
lea
add
inc
lcall
repz
push
xor
andb
push
fstpl
pop
in
sub
pop
xchg
jbe
pop
aaa
pusha
loope
test
aam
fs
mov
ljmp
mov
mov
pop
mov
cmc
mov
lret
add
cmp
jp
ljmp
inc
xor
or
pushl
dec
ficoml
fcomps
faddp
xorb
aaa
lods
mov
popa
cli
fildl
lcall
pop
mov
push
test
sub
jbe
mov
mov
mov
hlt
loopne
mov
in
or
pushf
jmp
cmc
stos
fwait
dec
push
jecxz
sahf
loopne
sub
hlt
inc
dec
or
push
dec
popf
mov
sub
add
mov
pushf
data16
frstor
outsb
lods
gs
lret
aaa
push
imul
jg
xchg
sbb
xor
jns
or
ss
and
or
leave
enter
ficoms
pop
movsl
in
out
imul
cli
inc
mov
mov
jge
jl
call
lret
ss
cmpsb
sbb
rorb
enter
push
pushw
sub
inc
insl
push
sub
out
or
testb
pushf
lahf
std
shll
in
pop
mov
lods
fsubrl
inc
sarb
add
cmp
outsl
data16
jae
sub
popf
push
outsl
pop
xchg
adc
push
je
or
pop
out
jns
mov
fs
jmp
out
jmp
mov
mul
cmp
adc
bound
sub
xchg
incl
sub
push
cmp
pop
mov
mov
xlat
or
pop
faddl
out
xchg
daa
inc
mulb
push
scas
and
sub
ss
mov
xchg
or
pop
mov
negb
icebp
aad
or
and
js
add
fstpl
inc
sbb
test
sbb
pop
mov
into
call
pop
adc
push
xchg
outsb
pop
inc
imul
cmpsb
scas
mov
cmp
pop
das
lods
stos
shrb
fwait
mov
stos
jg
fdivs
add
inc
cmc
xchg
adc
fnstcw
ret
daa
out
xor
mov
dec
push
and
lret
push
cmp
loope
xchg
popa
lods
mov
xor
inc
cmp
repnz
jecxz
mov
cmp
cmp
je
fcmovnbe
lods
outsl
adc
or
stc
popf
mov
xchg
sbb
jge
push
ret
mov
push
out
nop
in
cli
stc
push
dec
and
in
cwtl
add
lcall
and
xor
fstpl
icebp
inc
sub
hlt
out
inc
insl
arpl
pop
xorl
in
push
sbb
jae
jae
sub
xchg
push
in
into
push
mov
hlt
mov
sub
enter
sbb
push
dec
out
pop
push
push
cmp
test
add
lods
lcall
fwait
xchg
add
mov
adc
out
ljmp
jbe
jb
jae
fcomp
push
xor
cmp
mov
mov
cmpsl
mov
mov
sahf
adc
scas
in
adc
into
pop
sub
inc
outsl
cmp
sub
xchg
adc
mov
test
mov
popf
jecxz
xchg
add
and
xchg
mov
dec
mov
inc
jecxz
loop
mov
movsl
xchg
in
leave
inc
mov
pop
iret
xor
pop
adc
and
loope
adc
jbe
lds
push
inc
jnp
mov
jl
js
imul
pop
ret
and
lret
pushf
stos
rcrl
sub
popf
hlt
jnp
icebp
shlb
pop
add
sub
repz
push
stos
lods
xchg
cmp
sbb
aad
add
dec
add
loopne
test
sub
xor
inc
popf
add
stc
add
inc
cmp
inc
in
addb
push
out
xor
mov
sbb
in
in
jns
xor
lea
dec
push
repz
mov
mov
mov
and
xor
xor
push
hlt
jmp
pop
or
push
adc
iret
cmpsl
or
sub
pop
popa
sub
add
in
xchg
xor
movsl
and
sub
mov
adc
insb
js
stc
adc
fnstcw
dec
fs
cltd
and
jecxz
xor
xchg
pushf
in
mov
in
inc
and
mov
mov
pop
mov
push
in
sbb
pop
fs
xchg
xor
pop
inc
push
jge
mov
ja
jne
mov
popa
out
loop
xor
pop
imul
scas
jge
and
imull
jb
dec
aas
pop
inc
int3
add
sub
lcall
push
orb
jno
jns
cwtl
pop
ja
jnp
or
or
jbe
out
jns
int
addr16
int3
js
dec
inc
dec
aas
add
daa
sub
int3
jmp
test
rol
leave
jle
decl
andl
fmulp
pop
andb
gs
nop
in
pop
nop
test
fwait
call
sub
es
jmp
rcrb
rolb
mov
mov
icebp
iret
xor
xchg
lahf
mov
push
pop
sahf
mov
dec
icebp
jle
mov
pop
aad
pop
and
mov
lcall
ret
cmp
sbb
push
cmc
inc
in
sbb
dec
cmp
fistps
dec
xchg
int3
lea
pop
push
test
sbb
pop
push
mov
add
dec
jns
es
fcomps
sbb
ret
icebp
sub
mov
xor
xchg
add
xchg
mov
dec
js
add
or
bnd
dec
mov
jns
ret
jo
xor
clc
push
pusha
mov
daa
xchg
dec
mov
insl
clc
orl
es
aaa
xlat
pop
out
inc
or
and
aas
insb
xchg
push
adc
jo
or
hlt
repz
inc
mov
std
sbb
arpl
nop
xchg
push
adc
fidivrs
ljmp
and
test
icebp
setb
imul
sbb
cmpsb
gs
lret
dec
test
pop
push
xor
aaa
xlat
and
lods
faddl
cli
in
dec
pushf
add
hlt
mov
int3
shlb
inc
jle
pop
adc
jb
sbb
popf
int3
outsl
jmp
fisttps
ljmp
xchg
dec
push
push
in
push
ret
pop
repz
jb
into
imul
fistpll
ret
mov
jns
xchg
out
hlt
pop
sarb
push
cmpsb
nop
push
push
in
daa
insb
pop
sub
push
popf
cmp
push
push
cltd
sub
mov
push
cmc
jge
push
adc
xchg
dec
rcrl
fwait
mov
ds
jecxz
push
popa
pusha
clc
data16
dec
pushl
cmpsl
arpl
inc
dec
test
out
loop
sarl
sbb
jne
or
cmp
pop
adc
lahf
lods
add
push
lahf
fs
xchg
out
ss
fdivs
push
xor
jg
mov
adc
jg
stos
stos
jmp
adc
sarl
daa
xchg
pop
iret
js
jp
jno
adc
or
aaa
cmp
ds
mov
and
adc
jae
out
ror
dec
outsl
shll
mov
das
or
mov
or
push
repz
sub
mov
and
dec
inc
sub
imul
ja
xchg
rolb
fcoml
scas
mov
or
or
loope
xor
repz
pop
mov
cvtpi2ps
jmp
or
mov
or
xlat
in
lahf
nop
imul
fiadds
std
inc
sub
push
mov
sub
xor
lcall
lods
sti
xor
fimull
jnp
pop
rclb
adc
mov
shrl
sti
sbb
mov
idivb
inc
outsl
out
lds
inc
cmp
shll
movsl
mov
mov
mov
inc
jne
add
xor
shr
sbb
mov
int3
mov
pop
data16
scas
adc
push
xchg
imull
imul
stos
imul
add
mov
fidivrs
fidivrs
in
addr16
or
in
add
lret
loop
mov
inc
out
xchg
inc
push
pop
idivl
xor
xchg
lods
push
dec
inc
push
clc
xorl
icebp
jg
fidivl
sbb
mov
stos
mov
mov
pop
or
or
aas
inc
outsl
mov
int3
mov
pop
cmpsb
sbb
push
mov
mov
lcall
hlt
jne
mov
mov
dec
into
movsb
ret
movsl
mov
les
pop
ds
in
loope
and
inc
cmp
sub
jae
adc
in
data16
jno
cmpsb
cli
push
outsb
lret
mov
popa
adc
cwtl
xor
pop
gs
mov
idivl
xor
movsb
lret
mov
pop
xchg
mov
cltd
dec
cmp
aaa
fadds
or
sbb
cmp
aam
mov
push
cmc
sbb
test
mov
sub
pusha
xor
dec
add
inc
outsl
fcomi
sbb
decb
cmp
adc
inc
xor
mov
repnz
loop
xchg
repnz
shlb
add
bound
jb
inc
xor
mov
repnz
loop
xchg
repnz
shlb
add
arpl
jae
inc
xor
mov
repnz
loop
xchg
repnz
shlb
add
bound
jb
ret
fstpl
dec
push
xchg
sbb
cmp
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
adc
pop
pop
imul
push
or
jg
rcr
jmp
fnstcw
test
mulps
pop
das
jns
or
pop
sub
pop
ret
fstps
mov
mov
pop
jno
popa
aas
adc
pop
xor
jg
sarb
fwait
aam
fiaddl
pop
push
and
outsl
in
sbb
shl
insb
and
and
std
mov
mov
pop
aam
imul
fcmovu
addr16
sti
es
push
mov
into
push
inc
out
xor
les
pop
adc
inc
mov
fistpll
pushf
and
lret
fldenv
adc
fcmovu
filds
push
inc
cltd
dec
dec
cmp
in
or
roll
pusha
jmp
iret
lret
in
test
jg
mov
cmp
es
push
stc
mov
and
inc
add
aas
hlt
jg
dec
xchg
xchg
leave
adc
ss
es
push
push
clc
stos
dec
iret
mov
mulps
imul
add
outsl
and
pop
lahf
icebp
scas
loopne
xchg
iret
sbb
cmp
cmp
or
sbb
sub
push
sub
lret
in
std
mov
dec
push
jp
dec
jnp
jge
ja
inc
push
jl
lret
lods
cld
mov
in
mov
mov
push
or
jns
jno
sbb
outsl
cmp
fstps
mov
cltd
fildll
mulps
imul
sbb
outsl
cmp
fstps
mov
cltd
fildll
setp
ret
cmp
cmp
xchg
adc
sbb
leave
xchg
sbb
dec
insb
sub
fisubrs
push
pop
jb
cmp
sub
clc
or
test
jns
push
add
iret
lea
mov
sub
outsb
gs
cmp
aaa
add
ret
iret
lret
push
movl
jbe
and
jg
jbe
gs
mov
jno
iret
inc
or
xchg
pop
add
cmp
sti
jle
jecxz
pop
cmp
mov
ficomps
mov
jb
fwait
jae
in
mov
jmp
jae
dec
pop
rol
test
ret
jae
rorb
dec
jmp
test
loope
inc
mov
data16
pop
cmp
jg
test
dec
push
stc
scas
add
cmp
scas
adc
popf
cltd
jl
lods
loop
divl
xchg
and
into
js
mov
clc
sub
lret
mov
xor
and
enter
sbb
fcomps
in
repz
bswap
pop
ss
les
cmc
cmp
inc
out
orl
popa
or
incl
cmpsl
xchg
dec
mov
jb
fsubp
mov
push
pop
ret
inc
mov
xlat
hlt
jmp
and
pop
pop
xchg
clc
sub
test
jmp
push
push
call
mov
lock
mov
rcrb
xchg
dec
adc
stos
push
fstpl
lods
addb
cltd
xor
idivl
mov
or
inc
dec
cmp
sbb
ljmp
push
mov
add
pop
dec
mov
adc
mov
dec
push
outsb
fisubl
pop
mov
mov
xchg
pop
xchg
aad
loope
int3
inc
dec
fcompl
cmp
iret
popa
outsb
jbe
adc
and
push
nop
dec
insl
sub
pop
jmp
lcall
jecxz
or
test
lret
ja
ret
ror
pop
sti
aas
leave
outsl
mov
cs
stc
mov
push
cmp
xchg
test
jmp
mov
sub
std
jl
lods
rcll
sbb
sub
js
jae
cmp
pop
in
fmuls
popa
int3
dec
std
enter
les
std
lods
fcmovb
lods
stos
mov
push
popa
jae
sub
jb
lods
jno
inc
dec
into
cmpsl
sahf
xor
fwait
push
pop
fidivs
push
add
and
mov
mov
sbb
xchg
jns
pop
inc
cwtl
add
pop
leave
shrl
sub
jne
sub
fistpll
and
aaa
or
push
add
xchg
ja
pop
xor
pop
jae
jbe
pop
adc
repnz
xchg
mov
div
xchg
xor
push
dec
pop
cmc
add
sub
sbb
mov
hlt
jge
addb
mov
inc
fistpl
xor
shll
andb
dec
outsb
sahf
mov
sti
jmp
jg
enter
leave
jmp
push
sarl
xchg
dec
aam
dec
mov
adc
cli
and
and
fdivs
loopne
idiv
push
mov
push
or
sbbb
insb
es
dec
mov
and
cmp
jmp
insb
lods
mov
aaa
xchg
cwtl
xchg
mov
in
dec
dec
sti
cmpsl
lret
mov
pop
addb
xor
cmpsl
and
xorl
sub
cmp
fstp
aad
sarb
push
mov
sbbb
loop
fs
push
dec
jg
repz
rorl
repz
leave
test
fdivrs
testb
and
sar
nop
hlt
fstl
push
sub
cmp
mov
and
js
lock
mov
ds
and
mov
push
fstpl
aas
push
movsb
jmp
mov
sub
jns
push
cmpsl
adc
xchg
jne
out
jmp
andl
add
mov
sub
jns
jecxz
or
fs
iret
add
and
ljmp
test
dec
jl
ss
fsubrp
sbb
jecxz
and
mov
add
fs
xor
fstps
jns
xchg
mov
pop
aam
and
cmpl
dec
iret
lods
pop
jp
inc
mov
mov
repnz
mov
push
inc
xchg
or
inc
out
cmp
call
sub
loope
mov
inc
popl
xchg
dec
call
mov
ja
or
mov
pop
js
pop
stos
inc
sbb
inc
add
mov
mov
pop
bound
testb
out
das
mov
or
inc
fwait
and
xor
mov
or
cmp
lahf
xor
lock
and
std
pop
xor
lock
fidivrs
adc
je
scas
pop
rep
push
js
dec
aad
outsb
mov
or
xor
dec
rclb
imul
lahf
fcomi
xchg
jmp
add
inc
stos
leave
mov
pusha
jo
fcomi
testl
mov
mov
xorl
mov
jmp
sub
int
mov
mov
cmpsl
outsl
hlt
inc
and
xchg
push
or
jge
je
mov
mov
xlat
pop
fldt
dec
fsubs
sbb
and
push
jmp
pop
cmp
cmp
cmp
aas
lret
mov
notl
lahf
popa
mov
push
lods
lret
or
sbb
inc
add
xchg
lods
lds
test
jge
leave
push
mov
in
adc
sub
loop
sub
push
shr
xchg
xchg
xor
out
outsl
mov
push
jl
mov
loope
jle
mov
movsl
dec
jb
das
push
mov
push
pop
mov
shlb
out
xor
lock
icebp
jmp
es
push
test
ret
push
scas
sub
mov
stc
sbb
lods
cmp
addb
mov
mov
inc
movb
jge
inc
aam
dec
inc
jl
xchg
adc
movsb
sbb
push
adc
dec
cwtl
fdivrp
add
mov
hlt
push
dec
loope
mov
arpl
xacquire
shr
scas
fwait
push
out
adc
dec
fcmovb
into
mov
xchg
std
ret
sbb
dec
or
aaa
cmp
mov
inc
in
jp
enter
cli
mov
jle
xchg
push
int3
mov
inc
andb
fcompl
daa
mov
int
ret
pop
push
sub
dec
xor
daa
rep
test
pop
jg
hlt
rorb
dec
sub
mov
fisttpll
cli
xor
inc
jnp
imul
fiadds
jp
add
shll
xchg
mov
ret
and
cld
pop
repz
sbb
mov
xor
pop
push
cli
int3
mov
lock
loopne
pop
jo
xchg
mov
sbb
pusha
movsl
xor
push
xchg
push
add
imul
push
sbb
jae
and
in
test
ss
stc
jp
jno
or
lods
xchg
pusha
movsb
movsb
test
mov
in
pop
dec
sub
jne
imul
pop
xor
or
shrb
jl
test
dec
dec
dec
or
adc
stos
fwait
bnd
push
repz
push
das
sub
and
or
xchg
and
lcall
jns
mov
or
push
push
jp
les
jl
xor
insb
mov
pop
and
pusha
pushf
aam
add
mov
or
sub
jbe
sbb
push
jb
add
rcrl
xor
mov
insb
cli
bound
int3
repnz
xchg
jne
sbb
insl
mov
cmp
mov
push
push
dec
sbb
cmp
int
push
push
jae
dec
dec
xchg
add
adc
mov
mov
and
mov
pop
fdivrp
out
jbe
orb
pop
addr16
mov
imul
sub
int
mov
lret
or
xor
mov
push
mov
jno
mov
lcall
xor
fmul
lret
and
jg
and
lret
andl
arpl
jle
aaa
cmp
in
pop
mov
pusha
int
fisubl
xlat
shll
inc
aaa
push
mov
outsb
popf
xor
movsl
cmp
sarl
into
je
popa
jo
add
into
lret
addr16
xchg
xor
mov
testl
xchg
loope
jne
lret
cmp
push
mov
cmpsl
push
lret
jl
mov
or
xchg
push
cs
mov
jo
or
mov
push
daa
dec
and
vmulpd
mov
cmc
insl
or
push
push
faddl
or
sub
mov
sub
push
mov
push
add
push
pop
xchg
imul
ja
arpl
xor
sub
cld
and
cmc
sbb
mov
mov
out
mov
sub
ds
lcall
xchg
xchg
hlt
push
and
jno
sbb
aaa
jp
sbb
xchg
cmpsb
into
mov
arpl
call
sub
adc
stos
in
mov
test
jne
xor
jb
mov
jge
out
loop
lods
and
push
mov
push
sahf
cmpsb
xchg
pushf
lahf
ljmp
imul
lcall
pop
jg
or
test
loope
push
movsb
sahf
daa
add
xchg
aaa
xchg
inc
pop
and
fldt
enter
lds
and
or
shlb
jp
jg
jecxz
inc
ficoml
cmp
fnsave
jns
and
adc
cmp
addl
pop
scas
pushf
add
mov
jmp
xchg
mov
daa
jne
iret
mov
sub
xchg
ret
push
std
out
sbb
add
in
int3
add
sub
jbe
pop
inc
xchg
add
sub
jle
adcb
bt
les
xchg
push
cmp
push
mov
gs
cli
lahf
adc
and
dec
ss
jo
sub
push
negl
idiv
popf
sahf
xchg
and
stc
divb
and
rcrb
sub
or
in
cltd
or
lods
roll
mov
lcall
lahf
dec
xchg
or
add
mov
inc
pusha
js
xchg
jmp
mov
cwtl
dec
pop
mov
cmpsl
xchg
push
xor
daa
addr16
mov
lret
and
mov
out
shrl
jb
inc
popf
jecxz
adc
add
dec
xlat
dec
and
push
ljmp
clc
out
xchg
and
sub
mov
sbb
pop
pop
push
push
out
sbb
sub
mov
sub
xchg
jb
sbb
xchg
xor
push
repz
xchg
scas
xchg
xchg
in
out
test
jno
pop
lds
jecxz
inc
sub
jg
mov
push
and
je
lods
ret
inc
cmp
mov
and
ret
sbb
fwait
dec
cmpsl
xchg
push
aaa
ljmp
bound
sti
insl
adc
fistps
inc
jle
es
push
lcall
out
push
lods
addr16
imul
inc
cmpsb
pop
imul
jmp
push
outsl
int
sub
xor
hlt
daa
mov
fldcw
and
cmp
sbb
push
sub
xorl
aaa
add
addb
stc
jp
cmp
sarb
xchg
lret
ror
dec
lea
insl
ljmp
mov
test
popa
sbb
mov
out
and
outsb
fsubr
mov
loope
jle
jbe
orl
dec
inc
pop
sti
push
and
out
clc
gs
jg
ficomps
imul
hlt
ds
divps
adc
adc
negb
fstpt
idiv
mov
movsb
loop
pushw
cmp
mov
or
cmp
movsl
push
xlat
repz
lds
sbb
orl
sbb
lahf
adc
jno
mov
inc
add
ret
in
mov
inc
mov
aam
out
test
jmp
sub
mov
push
out
sbb
mov
rcl
add
jp
fcomip
xor
cli
cmp
jb
fdivl
jmp
int
lods
out
fcoms
push
inc
push
mov
mov
cs
or
pop
jecxz
cmp
lods
push
incb
add
outsb
xor
and
cld
lret
daa
inc
cwtl
movsb
cli
cli
stos
ja
xchg
sahf
or
xor
out
imul
dec
sub
dec
mov
in
leave
and
movaps
sar
xchg
sbb
repnz
enter
int3
loopne
mov
sub
pop
es
out
xchg
push
inc
mov
jecxz
push
jg
xor
dec
jg
popf
pop
adc
inc
cmp
and
mov
mov
lret
mov
mov
inc
mov
xchg
repz
mov
out
shrb
lahf
pop
insl
jne
mov
inc
loope
pop
jae
jns
cld
sbb
pop
je
repnz
fildl
cmp
jle
xor
adc
call
xchg
mov
movl
inc
adc
and
outsb
cmp
cmp
fnstsw
cmp
add
and
in
in
fs
pop
mov
mov
lods
sti
ror
std
mov
popa
inc
mov
add
out
outsl
arpl
out
and
int
pushf
xor
push
add
jae
mov
mov
filds
push
lock
mov
in
jo
outsb
rolb
test
in
and
push
mov
xor
sbb
push
adc
fdivs
andl
shlb
sbb
shl
fldl
cmc
push
and
fildll
cmp
test
jge
adc
sarl
mov
repnz
mov
xchg
pop
jb
jp
inc
shll
pop
push
ss
jns
adc
aad
and
les
into
or
add
cmp
sbb
xchg
flds
stos
iret
push
push
in
dec
push
jle
sbb
es
loopne
lea
sub
out
and
lret
divl
jne
mov
dec
enter
lods
jl
aam
popl
stc
in
mov
inc
push
mov
push
outsl
js
jp
lea
sarl
fistl
sahf
xor
jl
mov
sti
adc
pusha
dec
dec
mov
and
out
sbb
cmp
loopne
lcall
mov
mov
outsb
lods
pusha
and
or
dec
mov
inc
mov
push
mov
int
push
lds
push
das
mov
xor
xchg
inc
lret
add
popf
add
js
insb
push
gs
push
jne
push
lods
dec
xchg
sbb
lret
jne
aad
xor
cmp
dec
cmp
or
mov
data16
push
ja
mov
ret
punpcklbw
pop
mov
cmp
pop
leave
aam
xchg
movsb
dec
loop
fadd
jge
fwait
shlb
jne
push
outsl
pop
shlb
dec
into
vcvtps2dq
adc
orb
rclb
je
popf
dec
orb
orb
cli
gs
arpl
inc
sahf
push
inc
inc
dec
out
inc
jg
cmp
sbb
sub
jl
cmp
pop
imul
das
mov
mov
fcmovu
mov
sbb
icebp
in
and
pop
int3
mov
inc
push
sub
push
sub
jge
dec
ss
jle
xor
lods
inc
sti
arpl
imul
movsl
cli
adc
aam
dec
iret
mov
lea
mov
cmp
or
cmp
jb
pusha
adc
mov
or
pushf
push
and
daa
sbb
mov
push
pop
fstpt
xchg
addr16
mov
lcall
sbb
fldl
mov
sbb
xor
pop
pusha
cmp
in
push
arpl
push
mov
and
inc
or
pop
cltd
iret
sbb
shl
aaa
add
xor
dec
jne
nop
inc
iret
sbb
fsubl
ljmp
arpl
cmp
sbb
lock
jp
mov
push
xor
repz
mov
and
adc
sahf
out
ja
cvtdq2ps
jge
cltd
insl
dec
push
mov
into
cmp
notb
ja,pn
pop
in
mulb
in
stos
push
mov
dec
mov
pop
lods
inc
aam
lret
xlat
pop
pop
dec
mov
cwtl
aam
push
mov
addb
jb
jmp
or
movsl
ret
movsb
add
loopne
jns
push
push
mov
jg
cs
lret
pop
push
cwtl
xchg
fs
lea
push
int
jne
test
or
imul
adc
fidivrs
out
cld
fwait
adc
push
or
int
pusha
cwtl
jo
dec
lahf
test
rorl
leave
and
sbb
mov
sbb
loopne
fsubrs
test
icebp
daa
mov
pop
jmp
xchg
and
mov
sub
inc
in
movsl
mov
fisubs
or
or
adc
testl
cmpsb
sub
lea
pop
call
pop
decl
add
daa
xchg
mov
xchg
rol
dec
lods
xchg
mov
push
jns
outsl
icebp
adcb
mov
inc
sub
movsb
arpl
sahf
sub
mov
cltd
and
andl
cmp
movsb
and
add
xchg
jo
addr16
cmp
out
out
mov
and
jbe
mov
jbe
mov
xchg
inc
fstps
xor
jb
mov
push
rclb
push
cmpsb
inc
mov
xchg
ja
je
push
jbe
push
inc
sbb
inc
jae
sub
pop
cmpsb
test
or
ja
sub
sub
mov
pop
out
imul
pop
push
xor
cmp
inc
xorb
pop
pop
divl
shr
lock
adc
xchg
pop
mov
xchg
out
fcom
or
iret
ja
dec
mov
mov
repnz
mov
lds
cli
leave
ret
mov
cmpsb
outsl
dec
pushf
pop
hlt
xchg
or
jg
ret
or
ja
mov
fldz
sbb
inc
mov
ja
inc
push
lcall
pop
xchg
ficomps
xchg
int3
mov
cli
push
ja
test
xlat
out
xor
mov
sbb
sub
xor
or
adc
mov
mov
into
aam
xchg
push
repz
pop
sbb
popa
iret
jecxz
and
jnp
pusha
cwtl
test
mov
push
aam
sbb
out
aas
jns
out
pushf
pushf
push
mov
xor
mov
lcall
adc
data16
stos
nop
push
sbb
pop
bnd
cld
dec
cmpsl
int
and
pop
movsl
xchg
sub
pop
xchg
sub
sub
xchg
leave
and
mov
testb
pop
pop
xlat
cwtl
mov
jecxz
fidivl
adc
cmpsl
and
jbe
pop
in
stos
push
dec
jbe
pop
cmp
lcall
jp
je
clc
inc
sub
sbb
sarb
fisttpl
ss
inc
sarl
test
ljmp
and
adc
shlb
ss
movsl
jae
mov
dec
xor
stos
jnp
orl
shlb
mov
add
insb
notl
sbb
pop
ret
xor
xchg
test
daa
xor
sbb
xchg
je
sub
inc
jecxz
adc
pop
sahf
sub
add
repnz
mov
in
cwtl
sbb
jmp
mov
mov
xorl
insb
and
sub
into
adc
push
dec
scas
add
mov
aaa
iret
ret
jno
sbb
into
mov
dec
mov
out
xchg
or
and
mov
xor
push
sub
popf
fnsave
das
adc
out
xchg
dec
test
adc
arpl
jae,pn
out
inc
pushf
jmp
out
sbb
loopne
mov
mov
loope
push
cmc
lea
enter
mov
movsb
repz
cltd
push
fmull
dec
loope
xchg
xchg
xor
sbbb
dec
out
movsl
jp
fsubr
cs
andb
fcos
pushf
fimull
sub
repnz
push
mov
clc
imul
push
push
clc
popa
pop
ret
repz
xor
add
or
fs
pop
int3
xchg
or
sti
in
stos
mov
into
gs
aas
insb
mov
shlb
iret
bound
xor
stos
shr
es
ror
mov
iret
cmp
data16
dec
jno
pop
xlat
push
pop
aaa
mov
xchg
pop
lahf
inc
add
stos
jbe
lds
loop
rcll
lods
inc
jne
xchg
test
xor
cmp
mov
jl
dec
nop
or
int
cmc
fsubrp
jge
xor
loop
and
push
mov
jb
fs
push
pop
cld
or
nop
cltd
push
nop
adcb
pop
xlat
das
jns
or
pop
sub
jg
fstps
mov
cltd
fildll
mulps
imul
sbb
outsl
cmp
fstps
mov
cltd
fildll
mulps
imul
sbb
outsl
cmp
fstps
mov
popf
fildll
pop
pop
das
jns
or
pop
test
es
incb
and
inc
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jne
nop
sbbl
rolb
loope
lahf
and
or
push
call
popa
xor
or
pop
icebp
dec
test
adc
and
xor
inc
fdivs
popa
loop
test
sahf
mov
mov
je
mov
mov
push
jmp
sbb
jns
or
pop
loop
repz
mov
add
fsubrs
movsl
xor
jg
and
subl
jns
imul
addr16
arpl
leave
inc
xor
cmp
arpl
cvttps2pi
jo
clc
adc
addr16
jbe
pop
scas
gs
cld
xchg
lods
jge
push
xchg
movsb
pop
idivl
xchg
rcrl
add
divl
jne
ljmp
push
aad
out
enter
jmp
sbb
add
js
clc
adc
into
mov
or
call
cmpl
sahf
nop
dec
fnstsw
push
cltd
inc
mov
jge
call
sahf
or
mov
pop
icebp
lock
adc
add
xchg
and
jno
daa
dec
xchg
pop
clc
pop
lock
xchg
sbb
xchg
fldenv
sbb
jmp
push
lods
add
in
pop
stc
ret
ret
or
je
jae
push
in
mov
xor
push
jecxz
rcrl
loope
adc
and
push
call
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
call
popa
cmp
push
data16
pop
inc
cmp
sbb
shll
xor
imul
ja
add
mov
mov
jmp
and
jne
js
inc
pop
insb
xor
lods
cmpsb
mov
push
bound
fs
js
or
test
aad
clc
fmul
in
mov
lret
insb
loope
pop
xor
pop
loop
xchg
add
test
adc
daa
lret
and
outsb
xor
jl
iret
sub
xor
add
inc
and
stos
jp
sahf
lret
fistpll
loop
add
pop
das
jne
fcompl
adc
push
fiaddl
cmp
mov
cmp
jp
gs
dec
fcomps
mov
mov
es
jmp
inc
xchg
movsl
dec
push
pop
cld
lods
in
adc
push
push
push
and
ret
popf
bound
inc
fldcw
movsl
xchg
lds
mov
in
jl
pop
enter
pop
scas
insl
sbb
je
jnp
test
es
pop
fsubl
push
inc
jns
sahf
pop
push
jecxz
fnstsw
jmp
inc
xchg
mov
or
mov
loopne
int3
lods
add
lea
cld
rcrb
pusha
mov
or
divb
cmp
jge
bound
push
ds
xlat
mov
mov
xor
cmp
mov
insb
pusha
leave
scas
sub
xchg
xchg
lahf
sub
mov
mov
scas
dec
addr16
and
scas
dec
xorb
xor
outsb
gs
adc
adcl
and
test
in
loope
mov
loop
mov
push
repz
sub
inc
enter
shrl
pusha
movsb
mov
je
data16
sub
and
out
or
push
fiaddl
clc
lcall
in
xchg
pushf
jo
push
sarb
and
aas
fcoml
cs
xlat
jnp
popl
test
mov
outsl
add
pop
int3
fs
push
push
xchg
push
das
daa
jle
or
loopne
mov
frstor
xor
int
lret
nop
push
jno
fisubl
decl
cmp
xchg
and
cmp
cmpb
insl
mov
cmp
cmp
test
fimuls
lahf
pop
add
push
xchg
cs
insl
xchg
jae
insl
ds
fs
into
mov
es
rclb
mov
lock
adc
adc
imul
and
mov
dec
fisttps
lock
pop
icebp
xor
xchg
and
pop
dec
sub
mov
aas
jno
in
icebp
mov
mov
cs
sub
je
movsl
popa
and
xor
arpl
jmp
sub
sub
mov
mov
aaa
sbbb
test
and
sar
fsubrp
cmpsl
and
push
mov
jecxz
pop
xchg
pop
addr16
pop
out
inc
test
sarl
pop
cmp
int
les
lcall
test
fs
pushl
sbb
xor
mov
sbb
sbbb
sbb
inc
lds
lea
xor
dec
and
pop
out
jmp
sub
mov
outsb
std
clc
insb
leave
mov
mov
xchg
outsb
loope
negl
adc
sbb
cmpsb
lret
mov
xchg
lret
imul
jge
jo
movsl
jae
jbe
and
fs
xor
test
jl
sti
lock
push
es
addr16
push
adc
pop
xor
adc
jge
cmpsl
popa
testl
jb
shlb
in
stos
stos
aas
imul
lcall
ss
mov
bound
xchg
push
mov
out
mov
add
jb
call
xchg
mov
sub
dec
in
pusha
sbb
dec
jns
into
cmp
jbe
or
fs
test
nop
dec
hlt
add
inc
in
pop
movsb
cwtl
mov
mov
test
pop
adc
sbbb
fdivrs
cltd
jg
sti
nop
push
fmull
mov
mov
inc
addr16
popf
andb
jne
std
xchg
into
stc
mov
subb
das
fisubrl
push
xor
mov
insl
popf
fistps
cmp
sub
inc
push
pop
add
shl
mov
fmul
mov
dec
inc
sub
jecxz
fcmovb
mov
popf
fistpl
cmc
pop
mov
cmp
pop
adc
xchg
test
jg
xchg
sbb
cwtl
int
mov
cmp
dec
adc
cmpsl
imul
aaa
xor
jno
ds
push
stc
pushf
push
mov
popf
adc
jle
leave
xchg
cmc
mov
fistps
aaa
cmp
leave
xchg
dec
das
shr
xorb
or
mov
popl
fucomp
stos
scas
ds
mov
cwtl
jae
pop
imul
ret
push
sub
sub
fcmove
sbb
jmp
xor
in
xchg
mov
iret
jbe
inc
js
shl
flds
int3
lret
xchg
jmp
fsubrs
cmp
sti
aam
aam
xlat
cmp
mov
iret
inc
icebp
dec
cwtl
mov
jbe
daa
out
hlt
xchg
pop
dec
pop
sub
pop
xor
std
lcall
cld
dec
dec
fcmovu
iret
dec
lcall
out
je
jne
cmp
imul
hlt
or
leave
adc
scas
jb
pop
scas
mov
imul
jmp
xchg
cmp
jns
jne
or
dec
push
mov
call
mov
ja
lds
xchg
mov
idivl
dec
clc
ss
fistpl
mov
mov
add
movsl
aam
repz
test
div
js
xchg
mov
mov
or
andl
pop
or
mov
inc
jns
lds
in
jp
nop
or
mov
into
int
and
aam
cltd
sub
sub
inc
xor
jb
push
inc
daa
or
lods
cmp
jns
push
jecxz
push
push
loope
sbb
outsb
jno
imul
xor
lcall
push
icebp
mov
pop
lods
addr16
adc
testl
or
pushf
adc
jecxz
or
jl
jl
jne
pop
cld
pop
sbb
xor
cmp
addb
pop
and
mov
scas
stos
pop
loop
cmp
or
jae
dec
movsb
mov
sub
outsb
add
es
stos
push
push
sub
rcll
dec
dec
push
mov
sbb
test
out
mov
adc
dec
lods
mov
push
aad
xchg
fidivs
mov
repnz
cmp
cltd
andb
outsl
loopw
add
jmp
mov
push
fwait
sub
aad
aaa
dec
ficoml
mov
cltd
outsb
in
xlat
jl
xchg
inc
aad
xor
dec
stc
inc
jle
cmpsl
pop
aas
mov
lret
movsb
dec
out
adc
scas
mov
sub
aas
icebp
mov
add
incl
int
adc
imul
dec
add
and
lret
dec
mov
inc
arpl
int3
add
pop
lcall
pop
aam
mov
mov
cli
test
rorb
test
popa
mov
addb
jmp
fs
inc
sub
pop
lret
js
jo
sahf
int3
push
cmp
sbb
pop
js
int
pop
ss
loopne
insl
add
or
aad
inc
lods
rcrl
pop
sub
dec
jnp
cmpsb
shl
mov
orl
stos
call
and
packssdw
jp
xchg
mov
mov
mov
enter
pop
add
jnp
adc
imul
add
pop
mov
ljmp
ds
enter
shrl
cltd
in
lock
dec
mov
int
fdivp
fcmovnbe
out
negb
jg
das
jae
ret
std
sub
insb
xor
and
add
mov
shrl
push
mov
sahf
mov
popa
mov
xlat
divl
mov
pop
ds
inc
push
inc
outsb
pop
test
ficomps
aaa
inc
xor
mov
loopne
jl
out
fisttps
into
mov
in
pop
out
scas
cmpsb
insl
and
test
ror
mov
xchg
or
enter
xadd
in
sbb
mov
imul
push
add
aam
aam
xchg
and
and
fnstenv
cmp
fnstcw
popa
add
jp
xor
in
pop
hlt
nop
sbb
add
daa
add
rcrb
into
lods
mov
lods
aas
adc
mov
cmc
and
js
leave
rolb
mov
or
dec
xor
sub
sub
xchg
jg
or
add
sub
int3
insb
lods
leave
pop
movl
mov
ds
xor
push
mov
xchg
xchg
mov
cmp
add
sub
in
mov
enter
lods
fsubrl
jne
sbb
sarb
addr16
out
in
xor
xor
pop
mov
cmc
ja
add
pop
js
mov
xchg
in
jbe
dec
stc
or
pop
dec
sbb
movsl
ja
ret
fildl
dec
inc
mov
inc
pop
in
push
in
lahf
stos
fisttpl
xchg
lcall
xchg
xchg
cmc
cltd
jae
ja
je
rcr
cwtl
dec
adc
jg
ret
out
das
shrl
shll
addr16
movups
push
pop
outsl
xor
das
inc
imul
cmp
or
inc
mov
aad
arpl
mov
sub
add
mov
or
sbbl
sub
hlt
in
stos
lock
dec
or
js
andl
jo
imul
cmpsl
sbb
daa
jbe
dec
pop
lahf
adc
nop
mov
inc
hlt
lock
sbb
mov
shll
mov
sbb
mov
mov
pop
aas
push
rcrl
adc
pop
sub
dec
xlat
ret
xchg
adc
cli
insl
adc
push
xor
insl
loopne
xor
or
mov
mov
mov
xchg
int3
aam
and
xchg
punpcklbw
cltd
movsl
aas
jge
push
mov
movb
adc
or
xor
xchg
aaa
in
pop
lds
inc
push
std
sbb
arpl
mov
inc
pop
test
loop
cmp
lods
fmuls
xlat
adc
jb
sbb
push
push
and
adc
mov
popf
sti
and
adc
dec
orl
or
int3
push
push
adc
outsb
and
cltd
in
cmp
and
and
cmp
ss
add
add
inc
mov
jecxz
stc
fs
test
pop
add
sub
sub
add
fucomi
cld
cltd
add
cwtl
jle
sbb
mov
xor
test
dec
dec
sbb
sub
add
and
xchg
fmuls
xlat
decb
and
shl
addl
dec
cmpsl
push
xor
pop
push
xchg
sub
mov
sub
sbb
icebp
fcmovu
mov
jp
lahf
out
nop
pushf
notb
aas
in
outsb
mov
xchg
mov
push
sub
mov
movsb
inc
movsb
iret
sbb
out
outsl
imul
cmp
adc
cmc
scas
add
pop
add
sub
lcall
adc
xorl
cwtl
mov
mov
mov
into
cmc
jns
mov
les
in
nop
fcom
imul
sub
outsl
cmpsb
mov
push
mov
mov
xchg
mov
in
repz
sbb
push
jnp
cmp
cmp
cltd
mov
rcrl
sub
push
lret
ret
xor
push
in
dec
pmaxsw
push
mov
mov
push
cli
cld
call
push
insb
or
add
in
cmpsl
inc
imulb
call
cmp
gs
add
sub
sub
cmp
ret
mov
add
pop
arpl
xchg
mov
shll
mov
into
faddl
dec
jne
into
pop
xchg
mov
fldt
dec
aas
push
add
and
fildl
sub
rclb
dec
push
lods
scas
in
jae
mov
push
push
xchg
jbe
sbb
leave
xor
lahf
inc
ret
insb
sbb
imul
pop
pushf
fs
inc
js
repnz
std
pop
sub
push
mov
and
andb
jb
repnz
stos
out
push
decl
push
jl
cmp
cltd
rorl
ret
icebp
pop
pop
test
sbbb
xchg
push
push
movsb
ret
push
xchg
or
js
push
add
lret
mov
adc
jo,pn
jmp
mov
and
sbb
dec
add
dec
inc
and
mov
add
cwtl
mov
psubsw
shlb
add
scas
jecxz
push
ret
popf
aad
aam
xor
mov
int
nop
add
lock
cmp
lret
dec
inc
pop
aaa
popa
stos
jl
inc
mov
hlt
sbb
or
adc
insb
cld
sbb
xchg
mov
out
mov
mov
or
mov
lods
sbb
data16
jno
je
sub
lcall
leave
nop
mov
jl
jmp
mov
sbb
roll
inc
adc
stos
pop
xor
sbb
roll
push
test
inc
or
iret
dec
insl
out
imul
mov
out
inc
loope
fwait
lods
inc
pop
push
mov
or
xor
push
mov
pop
mov
movsb
mov
fwait
in
push
mul
call
lcall
lea
scas
imul
das
hlt
sub
xchg
xchg
mov
cltd
movsl
mulb
je
arpl
sti
jecxz
mov
call
cmovne
aaa
sbb
outsb
jnp
inc
mov
test
jae
cmp
arpl
dec
andb
or
repnz
mov
imul
dec
lret
dec
test
imul
loop
jns
mov
pop
stc
jl
sub
push
pop
jns
mov
outsl
jmp
push
dec
fcmovb
adc
adc
xor
add
add
lods
and
and
jp
movsb
fcomps
pop
push
stos
std
cwtl
or
push
scas
sub
and
repnz
inc
daa
mov
sbb
xchg
js
jmp
arpl
xlat
or
sub
or
sbb
jb
and
adc
popa
push
scas
insl
pop
cmpsl
sub
stos
sarb
jecxz
aad
xlat
in
lods
cmp
jge
in
lea
in
test
jo
and
repnz
ja
mov
mov
std
imul
stos
mov
xor
pusha
lods
hlt
sub
fiaddl
imul
jno
out
mov
cmp
mov
dec
call
movsb
jge
dec
pop
cmp
inc
mov
popf
push
out
and
mov
ss
lods
clc
and
outsb
lock
fistl
lea
cli
and
leave
lahf
icebp
into
andl
dec
sub
out
test
fdivl
xchg
test
add
mov
sarl
adc
daa
lds
scas
sub
in
sub
lcall
mov
repz
xor
loope
fcomps
cmovle
mull
ja
stos
cmpsb
sahf
js
cmp
or
adc
jge
inc
aaa
dec
jmp
mov
pop
std
jne
sbb
sub
int
push
push
iret
shll
xor
gs
stc
add
mov
dec
rol
rep
cmp
jae
xorl
cmpsb
ficompl
push
xor
xor
jne
fs
aas
out
inc
sub
sub
mov
ficoms
cltd
sarl
fsubr
mulb
sub
fsubrl
mov
cs
loope
sbb
sbb
mul
lods
aas
push
lahf
or
ss
jbe
sahf
aam
pushw
cli
nop
pop
cwtl
call
loopne
cmp
jne
push
xor
stc
sub
test
xchg
mov
and
sti
test
imul
imul
push
pop
pop
push
jg
subb
adc
xchg
movb
mov
pop
imul
push
push
jo
pop
shlb
sti
push
in
jmp
jmp
cli
adc
in
inc
dec
pop
cmpsb
jg
push
es
xor
mov
inc
fmul
push
and
mov
ret
sub
sub
jno
call
in
lods
mov
and
ja
jb
pop
aam
and
div
xchg
icebp
add
mov
cmp
movsb
or
outsl
xchg
shll
in
lea
push
mov
ljmp
pop
pop
lahf
out
stc
and
push
data16
cmp
xor
std
inc
imul
cwtl
push
xchg
test
and
ret
loope
adc
mov
mov
rorl
push
pop
sub
mulb
scas
pop
xchg
sub
push
stc
and
nop
lahf
mov
dec
incl
decb
out
jbe
jo
fwait
das
push
dec
push
mov
mov
out
cmpsb
inc
xor
cmp
pusha
jle
es
jns
das
shrb
fldl
cmp
xor
add
aas
clc
adc
xor
adc
lret
outsl
in
notb
iret
lods
jmp
shll
int3
call
mov
cli
out
mov
mov
in
shlb
movsl
or
arpl
pop
pop
push
scas
xchg
lea
mov
sub
fs
sti
lods
es
fadds
mov
pop
inc
sub
fs
ss
pushf
adc
popa
aam
insl
insl
jbe
mov
add
and
nop
data16
mov
ds
test
push
or
inc
jbe
inc
or
add
dec
or
adc
mov
fstl
fdivrs
xchg
sbb
pop
push
and
rcr
adc
sbb
xchg
outsb
inc
mov
loopne
sub
xor
pop
lods
fsub
sahf
cltd
pop
push
dec
popa
scas
ja
insl
pusha
xor
add
roll
adc
xchg
inc
test
xorb
jge
xchg
or
xor
inc
out
stc
sbb
stos
pop
ror
sub
daa
inc
les
lret
stc
insb
mov
and
xor
ds
push
insb
mov
mov
xchg
loop
mov
xchg
jne
lcall
inc
mov
xor
xor
outsl
jg
icebp
sub
jae
xchg
jmp
in
push
xchg
pusha
fcmovnbe
bound
gs
dec
loope
mov
inc
mov
push
add
out
pop
pop
push
fs
repnz
jp
in
xor
faddl
repz
lcall
lds
idivb
xchg
cmp
mov
test
xor
out
mov
push
cmpsb
pop
pop
testb
inc
mov
in
outsb
mov
cmpb
mov
add
insl
push
add
xor
pop
pop
fistpll
lea
faddp
xor
push
add
xchg
testb
call
ret
sub
jle
lods
and
lret
xchg
sbb
aam
pop
xchg
leave
pop
rcll
push
push
jmp
mov
fwait
xchg
repz
and
dec
jl
xchg
lret
negl
jae
js
adc
adc
push
out
lret
repnz
pop
sbb
lock
push
cltd
fstpl
fldt
xor
lea
loope
in
jbe
fs
popa
mov
lods
int
or
sbb
push
add
outsl
xlat
pop
pop
pop
jmp
jo
ljmp
es
sub
leave
ds
stos
hlt
inc
lret
push
sarb
inc
dec
mov
std
adc
or
pop
xlat
mov
es
rcrb
frstor
mov
shl
sbb
das
inc
lea
sbb
test
popf
data16
push
jno
dec
pop
in
sbb
or
adc
loop
int3
sarl
call
dec
aaa
arpl
add
pop
movsb
add
adc
lea
in
bound
ret
dec
outsb
mov
push
adc
pop
lahf
pop
and
or
mov
into
jmp
test
outsl
mov
lods
orb
rorl
shrb
mov
sbb
mov
scas
inc
cld
dec
mov
ret
repnz
mov
into
xchg
jmp
adc
adc
cmpsl
adc
xchg
std
push
movsl
push
xchg
push
cmpsb
adc
loopne
pusha
or
repnz
je
dec
cmpsb
daa
mov
and
addl
loope
adc
inc
pop
pop
sbb
sub
outsl
ficomps
shlb
push
jle
cli
aam
push
lds
dec
inc
aas
ss
inc
pop
jg
pop
dec
jae
aaa
je
test
and
sub
push
mov
rolb
mov
mov
cmpsb
imul
xlat
fwait
sbb
push
add
jg
sbb
shlb
pop
ret
and
jmp
mov
jns
pop
fnstcw
fwait
pop
js
das
imul
inc
adc
inc
add
sbb
pop
out
bound
mov
sbb
inc
aaa
movsb
sub
iret
imul
rol
cmp
xchg
les
xlat
testb
add
pop
shl
or
add
ljmp
add
xor
push
mov
test
cmc
imul
and
cmp
popa
cmp
cmc
pop
sbb
adc
shrl
pop
icebp
dec
loope
adc
and
push
call
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
call
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
icebp
inc
fdivl
popa
and
and
pop
icebp
enter
push
stos
xor
mov
fldenv
daa
mov
sahf
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
testl
add
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
clc
add
dec
clc
add
inc
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
cmp
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
stc
add
int3
stc
add
aam
add
fdivr
add
in
add
idiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
