jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
xor
fpatan
push
jg
lret
andl
or
add
add
or
push
add
add
add
addl
mov
sub
stos
add
inc
add
add
add
add
add
add
add
testl
roll
addl
sbb
mov
pushf
add
add
add
stos
add
add
mov
push
add
add
add
inc
add
add
add
mov
mov
add
add
add
mov
cmpsb
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
or
out
add
add
xchg
add
add
add
add
inc
add
add
add
add
add
add
addl
pusha
add
aaa
add
add
xor
ret
add
add
add
add
add
add
pop
add
add
add
movb
add
add
add
add
add
add
add
add
mov
mov
xor
dec
add
add
add
add
jg
add
xor
roll
jae
fildl
addl
pop
add
add
addl
cmp
mov
iret
add
add
add
arpl
movb
add
add
xlat
add
addl
cmp
and
jg
movb
add
add
add
add
lods
add
lods
add
dec
add
add
add
add
lcall
add
add
pop
add
add
dec
add
add
add
mov
add
add
add
mov
add
jno
or
push
add
mov
mov
add
inc
add
add
add
add
add
inc
add
add
add
add
add
sub
mov
roll
add
add
add
faddl
mov
add
add
js
mov
or
hlt
add
mov
stos
add
add
add
add
dec
add
mov
add
add
addl
add
adc
into
add
add
imul
sbb
mov
add
pop
add
add
add
add
add
xor
pop
add
push
add
add
movb
add
add
add
roll
add
add
add
add
add
add
add
add
addl
push
add
add
add
dec
add
addl
aad
add
cmpsb
add
add
add
add
movb
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
iret
add
stos
add
add
add
sbb
sarl
xchg
add
shlb
shrb
dec
rorl
ljmp
and
sub
xchg
sbb
mov
movsb
jecxz
dec
fnstsw
rcrl
mov
pusha
test
sub
sub
add
mov
in
inc
cld
icebp
nop
fsubl
mov
or
fsubs
mov
out
pushl
jge
scas
lock
out
leave
jge
test
cmp
test
fisttps
das
mov
loopne
jbe
xor
dec
sbb
fistpll
xor
jg
sub
in
lret
sahf
adc
xchg
insb
cltd
cmp
jge
addb
mov
xor
jbe
jb
dec
add
out
sbb
jno
jle
aaa
mov
in
add
scas
adc
fldt
push
push
jno
add
fstps
mov
decb
inc
lds
lret
shl
fsubrs
mov
inc
jmp
aam
push
xchg
cmpsb
aas
into
mov
cmp
hlt
fcmovu
lods
addl
lret
ljmp
jae
lds
aad
mov
mov
pop
mov
mov
gs
subl
rep
push
cltd
push
cmp
sbb
pop
out
adc
pop
mov
sub
push
jmp
fldl
mov
cmp
dec
jo
clc
push
jno
xor
mov
cmp
mov
gs
adc
push
out
sub
or
add
insb
pushf
xchg
jbe
mov
insl
fyl2xp1
jg
and
jns
push
dec
fs
mov
daa
jmp
pop
push
fs
test
ret
or
push
push
es
dec
mov
pop
mov
outsb
xchg
nop
stos
push
es
fs
jg
pop
push
cltd
inc
and
mov
fimuls
mov
push
fdivl
ja
shll
aad
sub
mov
inc
in
stc
gs
shrl
mov
outsb
sbb
ja
aad
xchg
mov
dec
and
clc
xor
add
push
jo
xchg
ds
int
leave
mov
pop
stc
stc
outsb
rcrl
bound
sbb
xchg
xchg
mov
mov
and
dec
jp
cmp
clc
mov
add
incb
xor
xchg
pop
hlt
dec
orb
jg
xor
in
je
iret
mov
pop
shrb
shrl
xchg
addl
xchg
inc
jnp
inc
addr16
jnp
sbb
xchg
push
dec
mov
sub
jge
rcr
loope
sub
and
add
cmpsl
sarl
fsubl
cmp
cmpsl
add
cmp
jecxz
push
add
mov
jne
int
jge
repz
inc
adc
xor
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
jae
daa
jae
arpl
push
jno
pop
aaa
sub
shll
ret
out
xchg
mov
dec
mov
mov
addr16
arpl
aaa
add
xor
and
shl
ret
out
push
cltd
andl
roll
jae
arpl
adc
add
sbb
loopne
lahf
mov
mov
in
rol
int
or
daa
es
mov
cmp
mov
or
jp
and
outsl
stos
loop
cmpsl
int3
sbb
das
and
int
fdivrp
or
or
sbb
insb
mov
cs
dec
je,pt
push
mov
mov
notb
cmp
inc
pop
inc
mov
sbb
inc
xor
push
pop
mov
and
or
mov
xchg
sti
lods
mov
pushf
mov
mov
data16
cmp
xchg
mov
aaa
sahf
aaa
rcr
mov
les
cwtl
mov
call
aam
and
xor
ret
fisttps
loop
jnp
in
lahf
sti
inc
inc
jae
arpl
aaa
add
xor
and
repz
sti
xchg
mov
mov
ja
or
cmp
sub
xchg
jno
push
bound
inc
shll
movsb
xchg
lock
jecxz
out
xor
and
and
sub
gs
jne
jle
xor
xchg
xchg
xchg
icebp
test
notl
repnz
hlt
ss
xchg
movntps
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
cmpsl
mov
mov
addr16
arpl
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
cmpsl
mov
mov
xor
sub
push
cmpsb
movsb
insl
pop
or
xchg
dec
adc
sarb
decl
add
out
imul
out
pop
idiv
int
sbb
mov
jl
push
push
dec
sbb
mov
jbe
aad
sbb
lds
add
adc
scas
fcmovnu
cmp
mov
dec
sub
stos
mov
fcomps
test
xchg
popa
xchg
add
and
xchg
sti
lret
cmp
fldt
push
fdivl
sub
push
fmull
fwait
push
fistpll
je
adc
es
test
fmull
dec
lods
cmp
push
sbb
out
scas
notl
dec
inc
mov
std
push
notb
pop
jnp
inc
adc
add
pusha
lds
inc
mov
scas
xlat
adc
sbb
push
inc
fdivr
loop
push
pop
lea
pop
sti
shll
xchg
fsubrs
cwtl
add
aas
sub
stos
scas
mov
add
fdivrl
ss
push
pop
shlb
mov
mov
or
popa
or
test
cwtl
push
pop
push
cltd
mov
fwait
adc
and
xor
out
mov
mov
xchg
or
cs
push
rol
and
adc
std
pop
mov
and
jge
and
das
icebp
pop
sbb
iret
pop
push
dec
dec
mov
or
je
sub
insl
add
mov
es
lcall
cwtl
shlb
push
insl
loope
rorb
pop
out
shl
aaa
sbb
cmp
fucomi
dec
aaa
test
pushf
cmc
repnz
xchg
insl
incl
inc
movsl
xlat
push
movsb
daa
or
or
jo
cmc
push
jg
in
lea
arpl
xlat
adc
add
xorl
notb
jg
mov
sbb
lods
inc
push
adc
subl
xchg
mov
orb
pusha
adc
push
push
sbbl
pop
pop
mov
clc
jae
vmovntps
stos
xor
pop
push
dec
lret
sub
jno
pop
cld
jae
in
fs
mov
push
scas
add
mov
pop
cmpsl
outsb
xchg
sbb
cmpsb
inc
xor
lcall
int3
test
loope
sti
in
jno
xchg
sbb
xchg
out
or
add
out
inc
mov
iret
push
repnz
std
xchg
sbb
in
adc
loop
sar
insl
andl
lcall
xor
mov
out
push
inc
sti
lock
jne
inc
idiv
add
jae
xor
into
mov
mov
mov
xor
add
in
pop
pop
jo
sbb
jb
lds
jge
jno
jg
js
rclb
bound
sbb
into
sub
dec
jg
dec
cmpsl
in
mov
ss
fwait
mov
and
mov
lods
cltd
push
push
insb
int3
mov
dec
roll
dec
xchg
mov
xchg
cmp
cli
cld
sbb
hlt
dec
push
and
sbb
imul
adc
mov
dec
lods
dec
mov
cltd
mov
fwait
scas
insb
cmp
xchg
sub
test
xchg
add
sub
xchg
inc
test
sbb
je
cmc
movsl
lods
push
jmp
xchg
cmc
lea
scas
or
xchg
ficompl
fmuls
aam
into
fcomip
pusha
ret
mov
cmp
lret
mov
mov
clc
xor
je
shlb
fidivrs
mov
ss
adc
mov
sub
pop
lock
scas
cltd
test
inc
mov
adc
mov
pop
sarb
fidivrs
ljmp
sbb
cmpsb
jb
pop
xor
leave
gs
and
ss
int3
shlb
dec
addb
inc
sbb
inc
add
or
nop
mov
inc
or
test
xchg
hlt
mov
cmp
loopne
sub
push
adc
dec
dec
insb
adc
push
mov
mov
or
mov
xor
insb
inc
iret
pop
inc
cmp
xor
sbb
mov
loop
frstor
test
pop
rclb
mov
xor
pop
shrb
mov
jmp
out
mov
push
es
lea
test
into
pop
enter
dec
iret
nop
in
pusha
mov
jbe
pushf
imul
add
cmp
cld
sbb
out
pop
movsl
sbb
jnp
add
mov
cmp
test
xlat
shlb
cmp
adc
in
popa
dec
xor
in
leave
imul
push
or
int
adc
add
test
cmp
sub
lahf
sub
mov
mov
jle
push
jg
mov
jb
clc
xor
iret
test
ret
negb
dec
jnp
lcall
inc
inc
sbb
xor
mov
and
lea
stos
inc
pop
int3
test
push
shlb
inc
pop
mov
inc
aaa
mov
pop
pushf
xor
test
leave
out
movsb
mov
mov
gs
dec
stos
and
stc
sbb
js
inc
cmp
lret
insl
push
xor
in
dec
push
inc
int
jmp
pop
pop
rcll
and
pop
xchg
ja
scas
and
dec
scas
xchg
orl
xor
cmp
ds
iret
lret
loope
enter
mov
jecxz
das
cmpsl
pop
mov
jp,pn
pop
cmp
sub
ss
pushf
mov
pushf
repz
out
out
cmp
mov
subb
shlb
inc
sbb
repnz
out
cmp
jnp
jp
stc
pop
insl
sbb
in
into
ret
and
js
push
pop
daa
push
cmp
scas
mov
mov
push
dec
mov
push
mov
xchg
cmp
cmp
ret
fcmovnb
lock
es
inc
out
mov
dec
mov
hlt
and
pop
sti
sub
subl
into
jg
addr16
adc
add
shrl
int
dec
xor
in
out
jg
jb
mov
pushl
outsl
gs
movsb
jns
pop
scas
cmpsb
pop
les
nop
cmpsb
xchg
pop
xchg
out
jne
jo
push
ficompl
add
lret
inc
inc
fucomp
aas
adc
dec
mov
lock
or
and
scas
popa
mov
in
cmp
jb
loop
jb
sub
or
cwtl
fwait
mov
xlat
mov
xor
dec
int
or
inc
movb
adc
pop
dec
ljmp
ds
ds
xor
push
pop
lds
bound
jns
ret
test
lret
mov
mov
dec
mov
ljmp
or
mov
lds
lahf
shr
pushf
nop
popa
repnz
out
movsb
lods
mov
sbb
cmpsl
mov
ljmp
repz
mov
hlt
mov
pop
ret
dec
pop
cmp
cld
andl
push
pop
mov
sbb
push
ss
stc
cmpsb
pushf
xchg
jne
push
lods
arpl
xlat
iret
cmp
sbb
sahf
mov
idiv
roll
sar
insl
sub
pop
sub
sbb
or
loope
insb
sbb
popa
js
push
mov
ror
mov
inc
push
bound
mov
add
pop
inc
jg
adc
aaa
push
aad
mov
mov
adc
nop
and
out
jmp
and
cltd
hlt
inc
cmp
idivb
repz
insb
std
push
lods
cmp
arpl
inc
inc
mov
je
or
cmp
adc
inc
and
or
into
outsl
or
xchg
sub
push
pop
mov
les
push
sub
push
test
mov
xor
sub
out
add
jbe
bnd
xor
test
imul
jmp
jne
mov
or
fsubrs
pop
jp
cmc
add
cmpsb
inc
xor
repnz
and
push
dec
lcall
cld
push
adc
icebp
xor
or
lret
jo
push
mov
push
mov
sub
ds
dec
mov
fisubl
out
dec
mov
ret
mov
xchg
mov
jae
popa
in
or
pusha
mov
cmpsl
dec
add
arpl
dec
cs
fdivrs
jae
loop
ds
mov
rorl
scas
repnz
jmp
sbb
std
cmp
lods
pop
pandn
aam
sti
test
and
and
int
out
xchg
out
outsb
fnstcw
cmp
mov
insl
js
imul
scas
jp
sbb
sbbl
and
ror
sub
xchg
into
cmc
insb
icebp
xor
push
jbe
dec
movsb
aam
push
push
mov
push
sbb
dec
repnz
pop
fistpl
inc
cmp
mov
pop
push
test
xor
mov
adc
xorl
cmp
xchg
ret
mov
sarb
fdivs
insl
imulb
mov
dec
rorl
dec
cmp
add
and
push
adc
out
stos
push
mov
xlat
and
lods
mov
and
into
xor
test
outsb
dec
add
popa
add
jp
push
jg
popa
gs
cwtl
repnz
add
mov
iret
jns
sarb
arpl
sub
mov
sub
out
push
test
sub
cmp
and
test
xchg
jmp
mov
cmc
sub
jmp
stc
mov
xchg
cmp
lahf
lahf
mov
pop
pop
in
sub
clc
push
mov
stos
mov
arpl
out
mov
rcll
push
push
mov
outsl
cmp
ljmp
inc
mov
call
ret
js
leave
stos
push
mov
jl
cld
jp
dec
inc
jbe
stc
sbb
mov
xchg
or
mov
mov
or
loopne
je
in
xchg
daa
cld
jbe
cs
sub
xor
xchg
mov
dec
mov
mul
xchg
leave
inc
lret
fdivp
loopne
aam
and
jns
lret
mov
lds
pop
sbb
mov
stos
leave
mov
jae
sbb
ja
inc
outsb
sbb
aam
roll
jp
ja
mov
mov
adc
cld
push
inc
push
and
add
int
fnsave
push
jbe
add
add
sbb
cld
sub
outsl
into
addr16
vsubsd
inc
dec
add
mov
add
sbb
push
sub
inc
ja
iret
xchg
iret
dec
pop
mov
push
adc
ds
or
pop
and
push
ds
fmull
cld
push
cmp
inc
pop
test
xchg
cld
xchg
and
mov
testb
sub
sub
and
sub
cmp
test
mov
xchg
mov
xchg
jl
nop
push
pop
sub
outsl
bound
psubusb
and
mov
imul
lock
hlt
out
inc
xor
popa
fimull
cmp
and
jae
ficompl
scas
movsl
sbb
cmp
push
adc
call
mov
dec
fldcw
cld
sbb
pop
mov
subl
push
and
cmp
sbb
fdivl
stc
sub
or
pushl
testb
cs
call
popf
mov
scas
loopne
inc
cmp
adc
loop
adc
mov
add
sbb
nop
lods
lahf
out
xchg
mov
sbb
out
aas
xor
dec
mov
push
ja
add
mov
test
cmpsb
pop
xchg
enter
or
cmp
loope
lock
inc
xorb
mov
out
sub
pushw
mov
out
popa
xlat
xorb
xor
int
mov
pop
add
inc
movsl
and
pop
notl
pop
adc
push
add
fcomps
in
addr16
imul
out
les
pop
inc
mov
jo
push
sbb
arpl
jns
sbb
jbe
test
inc
aam
mov
mov
pop
xchg
aad
sub
push
pop
pop
adc
xchg
and
rclb
stc
cltd
fmuls
cmpsb
jne
cmpsl
outsb
dec
icebp
cmp
inc
dec
inc
lahf
sub
fisubs
or
hlt
sub
mov
add
pusha
mov
sbbl
lret
and
and
xor
adcl
sub
subl
ret
call
lret
sub
xor
cmp
fadds
fdivp
mov
mov
dec
pop
pop
cs
out
jge
jno
ds
cmp
test
cmc
inc
jl
pushf
push
pop
or
into
jmp
daa
dec
sahf
mov
xor
insl
pop
test
pop
int3
gs
push
add
fsubrs
or
push
cmp
into
pop
rcrl
adc
lret
aam
in
in
bound
sbb
shlb
xor
xchg
push
sub
push
mov
div
out
pop
adc
pop
xor
mov
dec
lcall
out
sahf
hlt
inc
out
and
dec
add
fisttps
into
pop
int
aas
or
scas
rclb
push
push
jmp
ja
pop
jge
jp
idivb
jmp
pushf
imul
or
mov
insb
test
in
jb
pop
mov
push
jo
sub
add
xor
mov
pop
es
xor
or
pop
dec
test
add
test
cmc
push
pushf
mov
fbstp
jb
mov
add
or
flds
xchg
mov
fisttps
sar
mov
jnp
imulb
ret
cmp
add
and
lret
push
mov
roll
cltd
adc
fdivs
xchg
in
ret
add
sbbl
push
pop
out
outsb
std
hlt
push
pushf
and
push
mov
xor
jmp
int
xor
mov
adc
mov
mov
sub
jne
pushl
xchg
scas
fcomp
popf
fadds
fisubrl
repz
stos
aas
fs
es
les
jp
dec
jnp
out
sbb
movsl
sbb
sub
cld
ss
sbb
aaa
aad
imul
stc
mov
xchg
jo
shl
cld
movsl
rorb
rorb
cmpsl
cli
push
ret
pop
outsl
pop
lret
and
ljmp
call
add
lock
push
dec
test
outsb
test
mov
vmovapd
lahf
jns
xlat
inc
xchg
sar
hlt
loopne
imul
ss
stc
and
mov
pop
into
xor
and
jle
pop
cmpsb
scas
test
mov
insb
cmp
icebp
xchg
es
fidivs
ficoml
inc
mov
fcmovne
popl
fmuls
jno
push
rcl
dec
lcall
lods
mov
cli
xlat
lods
cmpb
insb
cmp
notl
shlb
cmp
adc
lods
push
fcoml
movsb
lahf
shl
cltd
ds
ljmp
cwtl
mov
mov
stos
xchg
adc
jge
adc
xlat
xchg
mov
popf
out
clc
mov
in
fidivrs
into
adc
pop
fstl
dec
xchg
inc
andl
addr16
or
and
mov
sti
ret
pop
sbb
jmp
clc
xchg
loop
fisttps
push
inc
inc
fwait
shl
out
xor
std
xor
fmulp
cmp
imul
mov
sbb
or
and
stos
aaa
dec
mov
and
int
push
jecxz
jno
mov
cmpl
pop
and
imul
or
jb
mov
lcall
fimuls
inc
out
gs
fwait
xchg
dec
lods
rcrl
mov
inc
mov
adc
loope
out
jo,pt
andl
test
pop
test
mov
lods
sub
mov
add
cmp
xorb
cmp
or
arpl
cmc
inc
cmp
ret
imul
stos
stos
int
inc
jecxz
xor
jmp
push
inc
cmp
outsb
jg
fs
sbb
movsl
inc
int
sub
fdivl
dec
or
or
loop
sub
iret
addr16
and
sarb
fadd
fildl
push
push
add
shrb
sub
push
sbb
jmp
iret
ret
cld
push
xor
jne
add
push
gs
and
out
jbe
jge
pop
sbb
adc
insl
das
ja
lds
xchg
xlat
sbb
or
cmp
mov
mov
cmp
addl
and
mov
pop
pop
out
out
cs
aad
pop
mov
repz
lret
lahf
mov
adc
pop
push
mov
mov
add
cmp
inc
mov
dec
mov
movsl
xor
lods
in
add
enter
pop
xchg
mov
fidivrs
inc
rolb
cld
adc
sbb
jg
add
daa
push
mov
mov
xchg
jmp
adc
inc
add
adc
outsb
jle
pop
xchg
sub
inc
mov
test
ret
imul
xchg
sbb
sub
add
les
jbe
xor
aas
movsb
fwait
repz
xchg
in
dec
addr16
or
in
and
xchg
faddl
xor
cmp
mov
jg
adc
dec
testb
loop
inc
fisubrl
adc
popa
inc
stos
dec
mov
lods
push
daa
add
es
sub
mov
outsl
add
inc
inc
es
and
xor
xor
jb
push
nop
cmp
dec
insl
adc
xchg
fidivrs
cmpl
cmp
movsl
and
cmp
xchg
clc
or
cmp
mov
cmp
dec
rorb
dec
push
adc
sbb
and
outsl
in
xor
test
dec
mov
jae
dec
leave
outsb
js
xchg
imul
dec
mov
inc
or
and
out
xlat
pop
sbb
arpl
jg
test
and
iret
or
jb
daa
in
mov
stos
test
adc
pushl
lods
jmp
xchg
mov
mov
cli
scas
add
aam
movsb
jnp
xor
cwtl
jne
adc
fisubl
ja
aad
mov
mov
pop
aaa
and
lret
cmp
in
mov
add
je
ds
loope
cwtl
sbb
test
or
mov
call
scas
fiadds
addl
cld
test
pop
add
cli
test
jne
cmpsb
sti
sahf
mov
jo
cmp
dec
xchg
adc
outsl
adc
mov
xchg
dec
sub
clc
xor
pop
aaa
loope
icebp
push
test
imul
aas
pop
insl
lock
xlat
enter
dec
pop
enter
outsl
out
cmp
pop
inc
dec
push
out
mov
cmp
sbb
mov
ljmp
clc
mov
insb
testb
add
xchg
test
sbb
ljmp
mov
or
add
mov
adc
mov
xchg
stos
push
sub
addb
cmpl
imul
push
scas
push
or
pushf
and
pusha
pop
jns
mov
jne
ja
or
test
inc
lcall
mov
push
cmp
das
xchg
mov
stos
jno
xor
jno
push
sbb
mov
inc
cmp
add
inc
lcall
fs
fdivl
cmc
sbb
fildll
xchg
push
xchg
loope
mov
jmp
idivl
into
fldl
mov
bnd
cmpl
xchg
aad
xchg
pushf
jecxz
jmp
mov
loopne
stc
mov
push
lea
lods
es
mov
mov
idiv
push
sub
add
clc
dec
fstl
push
cmp
js
repnz
aam
outsl
in
mov
mov
push
and
test
insl
lret
xchg
cmpl
mov
pop
and
push
outsl
sub
loope
and
pop
push
add
div
dec
in
mov
mov
cltd
cmpsl
icebp
divb
cltd
rcrl
out
mov
adc
xor
dec
out
rcrb
add
out
pop
movsl
pop
ds
inc
xor
or
and
jb
or
imul
addr16
out
iret
daa
add
movsl
inc
repz
in
fcompl
fcmove
pop
adc
repnz
mov
sbb
lcall
js
sarl
mov
sbb
imul
inc
adc
inc
and
pop
cld
movb
lods
fpatan
or
lock
push
mov
jmp
sbb
xor
inc
or
jge
xlat
mov
push
cmp
xchg
dec
push
sbb
rclb
jae
inc
adc
pop
stos
fs
pop
push
adc
cmp
cld
incl
or
cmp
or
pusha
mov
popf
and
push
arpl
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
cmpsl
mov
mov
addr16
arpl
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
cmpsl
mov
mov
imul
aaa
add
mov
jecxz
xlat
jecxz
xchg
mov
cmpsl
mov
mov
xorl
pop
adc
add
xor
ret
dec
pop
xlat
jecxz
jecxz
repz
out
sar
js
popf
stos
adc
fisttpl
and
movsl
es
or
push
dec
lds
mov
add
ljmp
movsl
sub
sbb
dec
out
mov
ret
xchg
gs
bnd
mov
adc
outsl
in
aad
mov
dec
je
add
add
adc
inc
or
push
push
pop
cs
mov
adc
out
jmp
adc
jle
roll
pop
ret
outsb
or
je
push
pop
dec
pop
gs
xor
out
std
lods
adc
and
pop
ljmp
push
dec
jo
pop
stos
push
ficompl
xor
test
jp
js
out
rcl
and
lds
push
adc
cmc
sub
xchg
push
adc
out
pop
mov
mov
and
inc
clc
rcrb
dec
cmp
xchg
jne
pop
nop
movsl
aad
push
mov
imul
inc
and
xor
fwait
adc
pop
mov
stos
push
fwait
imul
mov
cmpsl
aam
in
lds
gs
pop
mov
mov
ret
push
ljmp
cmp
in
lock
jmp
add
inc
sti
push
iret
gs
inc
pushl
xchg
gs
movsl
sub
jp
push
pop
lds
mov
add
ljmp
movsl
sub
jp
push
pop
lds
mov
pop
cltd
cmp
add
lahf
rcrl
xchg
inc
scas
cmp
aas
std
xchg
xor
lcall
lods
sub
mov
addr16
or
stos
stos
pop
aas
das
dec
dec
add
daa
mov
loop
fmuls
jno
scas
sbb
adc
icebp
jne
enter
bnd
inc
jg
xchg
dec
repnz
jg
gs
popa
push
lea
push
inc
add
iret
mov
nop
sbb
pop
bound
sbb
xorb
pop
fstpl
mov
jle
xchg
mov
jbe
and
mov
popa
adc
outsl
dec
cmp
or
mov
daa
cmc
jg
in
pop
insl
hlt
or
jnp
pop
adc
lea
sub
sarl
sbb
aas
cld
clc
ja
enter
cwtl
das
aas
lds
sub
imul
push
xor
mov
movsb
mov
test
push
sub
mov
cld
inc
dec
and
push
cs
int
mov
and
cld
cltd
sbb
fwait
clc
sbb
jge
aad
mov
stos
aaa
jl
pop
into
xor
xchg
sub
mov
pop
aaa
fistpll
out
out
loop
je
mov
and
adc
xor
pushf
mov
scas
mov
mov
fidivrl
mov
add
push
cmp
xchg
push
sub
inc
sbb
out
jo
arpl
aam
adc
adc
push
mov
push
xchg
push
mov
mov
std
push
fnstcw
or
scas
mov
stc
lods
xchg
mov
pop
mov
cmpsb
rorl
dec
cmpsl
jno
popa
and
test
jno
push
mov
add
sbb
outsb
push
pop
mov
cmp
add
je
push
repz
pop
or
mov
vshufps
push
pushf
and
aas
jecxz
mov
cmc
jno
insl
or
enter
es
test
or
mov
test
xchg
adc
cmp
sub
mov
lcall
jnp
stos
ficoms
daa
push
pop
in
fwait
inc
ljmp
lcall
dec
jge
and
call
or
scas
scas
and
add
pop
fs
out
xor
pusha
pop
out
test
add
sbb
sub
shrl
push
inc
pop
test
jp
out
mov
fidivrs
inc
sbb
mov
sub
stos
rclb
imul
or
mov
adc
cli
insl
ds
push
loopne
lock
loopne
ja
adc
adc
call
push
xchg
loop
adc
inc
pushf
scas
jnp
call
sub
add
clc
repz
pusha
jp
lds
jns
incl
outsb
sub
aaa
mov
ss
push
sarb
jnp
push
icebp
iret
jns
imul
outsb
push
in
pop
sbb
loope
icebp
stos
shlb
stos
ret
push
inc
mov
pop
in
jmp
push
push
test
jmp
mov
pop
push
xor
jno
int3
ljmp
cmp
insl
xor
push
and
fldcw
in
mov
push
mov
cld
add
lds
pop
add
fldcw
lea
loop
mov
mov
push
xchg
shrb
test
or
nop
test
inc
lret
pushf
push
dec
inc
addr16
push
add
xor
fisttpll
inc
pop
dec
xchg
jae
add
pushf
enter
dec
test
ljmp
and
add
fmuls
aas
pop
cltd
sub
fistpll
pop
xor
popa
sub
mov
js,pn
shll
loope
sub
ret
cmc
dec
push
scas
rcr
mov
mov
arpl
cwtl
sbb
mov
cmp
sub
lahf
mov
out
imul
lods
pop
and
insb
fdivrl
xchg
pop
aam
jmp
lcall
jnp
gs
pop
sbb
pop
loopne
leave
jmp
jne
xor
sarl
mov
jns
sti
fisubrl
lods
xchg
outsb
jmp
cmp
fcomi
loop
dec
out
movsb
scas
mov
jmp
nop
stos
aaa
movsl
dec
push
add
inc
or
sub
aad
sub
cmc
and
movsl
out
dec
jbe
adc
addr16
pop
mov
cwtl
out
fwait
push
imul
pop
mov
dec
stos
fistpl
into
pop
pop
xchg
pusha
and
roll
mov
andl
mov
popa
sbb
jecxz
cmpsb
fwait
in
es
inc
mov
out
pop
xor
mov
cwtl
jp
jbe
and
adc
lret
adc
and
jae
lahf
lods
leave
mov
inc
cwtl
mov
push
add
mov
cmp
decl
cmp
jns
stos
inc
dec
pop
pop
das
mov
jns
pop
pop
jnp
in
ret
dec
push
imul
sysexit
xchg
std
dec
cmpsl
sub
adc
xchg
mov
lret
mov
pop
xchg
inc
idivb
repnz
xor
xchg
xor
sub
and
push
ja
roll
xor
sub
outsl
ja
add
ljmp
xchg
sub
repz
fisubrs
sub
xchg
xchg
mov
inc
and
push
in
push
imull
xchg
outsb
mov
mov
scas
aaa
inc
in
jno
xchg
cmc
fwait
mov
mov
xor
sbb
mov
cmp
pop
cmp
push
cmpsl
jl
xorb
cmp
fistps
xchg
std
mov
in
mov
stos
je
dec
sub
add
lret
and
sbb
xor
and
jecxz
adc
stc
ja
mov
mov
xchg
inc
mov
stc
mov
out
insl
clc
test
mov
sbb
int3
adc
push
cli
idivb
xor
mov
stc
jns
ja
xchg
inc
into
filds
in
or
rcrb
stos
sbb
xchg
or
outsb
push
mov
outsl
fs
xchg
dec
and
or
icebp
pop
cmpsb
or
loop
mov
movzwl
js
jp
data16
jmp
and
mov
les
les
mov
loopne
loop
sbb
int
xchg
inc
add
or
mov
std
and
xor
mov
movd
mov
adc
and
pop
cmp
and
mov
sti
in
mov
fmull
jnp
inc
icebp
arpl
push
xor
and
notl
jno
push
pop
js
dec
mov
or
fwait
mov
pop
pusha
cmpb
add
xchg
decl
pop
in
sub
mov
or
pop
mov
mov
dec
and
iret
js
outsl
ret
xchg
sbb
mov
bound
jno
xchg
jb
inc
push
incl
adc
jo
daa
jne
lock
push
dec
dec
xchg
icebp
mov
xchg
xchg
dec
push
jb
mov
add
xchg
mov
or
arpl
cmc
mov
inc
shrl
popf
negl
fs
cmp
mov
mov
mov
dec
stos
adc
pop
ds
std
ljmp
pop
jo
mov
xchg
jl
daa
enter
fdivrs
xor
add
mov
test
mov
xor
or
movsl
xor
push
inc
sbb
lods
pop
data16
push
mov
fcompl
mov
mov
mov
dec
insb
push
loop
nop
add
cmpsb
ficompl
popa
sub
adc
lcall
jecxz
pop
arpl
divl
or
xchg
mov
sahf
mov
fcmove
loopne
jmp
addr16
jo
jl
insb
push
sub
in
repnz
test
dec
rclb
fcoms
push
scas
fs
mov
enter
cmc
sub
imul
cltd
xchg
mov
and
in
pop
imul
insb
add
xor
xchg
inc
pop
ret
shld
mov
inc
mov
add
jo
jno
jns
sub
xchg
mov
xchg
sub
xor
xchg
inc
in
or
jecxz
mov
addr16
int
sub
stos
jbe
int
mov
fsubr
in
add
lret
fwait
jae
jg
sahf
xchg
shld
aas
cmp
popl
out
sahf
ljmp
leave
pop
sub
dec
xor
inc
dec
ljmp
repnz
dec
incl
repz
mov
lods
push
int3
add
pop
cmp
sub
imul
aaa
out
or
sbb
imul
jp
mov
int3
pop
ret
fidivrs
orb
enter
icebp
mov
stc
add
fldcw
push
mov
arpl
mov
lcall
jp
loope
dec
scas
loope
add
and
add
adc
mov
shll
inc
insl
into
stos
ds
lahf
loope
frstor
ret
lods
jl
sbb
push
lahf
cli
inc
nop
mov
add
inc
out
jl
push
lods
add
fisttpll
mov
in
mov
lret
inc
sub
sub
dec
mov
mov
or
aaa
jg
mov
cmpsb
hlt
mov
sub
test
pop
inc
and
inc
mov
add
fdivl
gs
lret
xorb
test
test
mov
mov
clc
dec
jns
push
ret
popa
lods
shlb
mov
je
in
negb
fs
sti
mov
cmp
decl
pusha
cmp
out
fadds
xchg
sub
push
mov
loopne
dec
sbb
dec
gs
cmp
hlt
mov
cmc
sbb
cmpsb
mov
jg
jle
mov
fdivrs
cmpsb
out
aaa
inc
sub
fists
pop
mov
push
mov
push
pop
adc
mov
das
inc
sub
popf
icebp
mov
clc
pop
pop
cvtdq2ps
sbb
mov
or
xchg
ds
lret
fidivrl
xor
sub
addl
ret
out
into
lret
rcrb
loop
hlt
cmp
push
ss
sub
jp
mov
std
push
xor
ds
mov
pop
jge
lods
push
or
mov
pusha
fisubs
ss
idivb
inc
je
sub
mov
or
and
orl
cmp
pop
dec
in
jb
pushw
mov
mov
cmp
cli
in
cmpsl
repz
jg
cmc
inc
ds
adc
sti
aas
aam
fidivrl
mov
mov
imul
jo
lods
push
ret
push
notb
mov
mov
push
cmp
and
cmp
je
repz
mov
and
stc
out
shll
sti
stos
jno
xor
into
mov
xchg
mov
cmpsb
pop
mov
cltd
psubb
mov
sbb
jnp
in
test
xchg
mov
pop
mov
pop
in
inc
jge
hlt
in
shll
xchg
push
mov
mov
push
stos
pushf
dec
mov
cmp
imul
xorl
add
sti
sbb
xor
in
in
pusha
arpl
pcmpeqw
mov
sbb
and
inc
mov
pushf
lret
ds
lret
xchg
addr16
int3
push
out
int3
pop
sbb
lods
adcl
or
lahf
lahf
and
aaa
popa
cld
pop
jnp
xor
jne
pop
call
mov
sub
and
cmpsl
repz
out
lret
mov
jle
adc
inc
push
xlat
jo
mov
repz
lret
push
and
outsl
std
addl
ss
add
mov
addr16
rorl
xchg
shll
cmpsl
cmc
out
dec
push
push
cmp
daa
mov
fsubr
icebp
repz
divl
xor
cwtl
jmp
clc
imul
mov
ja
mov
dec
mov
jle
dec
mov
cmp
xchg
push
scas
cmc
or
add
dec
dec
out
iret
jno
sbb
add
repnz
pusha
fstps
pop
adc
cmpsl
movsb
push
stos
push
aad
fists
addb
xor
or
inc
lds
jb
jne
mov
adc
iret
and
jae
or
sub
movsl
jnp
or
adc
fldl
inc
sbb
inc
add
stos
inc
add
fistl
and
scas
xchg
adc
testb
mov
stos
dec
and
jmp
popf
xor
fwait
cltd
stos
jb
inc
add
aas
fidivrl
clts
ds
push
mov
jbe
cmp
mov
mov
cmp
andl
les
into
enter
shrb
adc
jmp
mov
call
sbb
and
dec
in
cmc
adc
adc
iret
sbb
stos
push
or
adc
nop
xchg
sti
cs
cmpsl
add
cwtl
push
xor
jae
ja
cmc
xor
push
xor
sarb
or
or
imul
cmp
mov
pop
popa
sbb
sarb
push
out
jmp
add
adc
mov
popl
in
jg
dec
adc
cwtl
aam
jecxz
in
pop
cmp
jmp
sbb
push
popf
dec
pop
in
into
cmpb
ror
int
push
inc
pop
leave
filds
lods
adc
ja
aam
stc
jl
icebp
push
jge
repnz
dec
mov
stos
sbb
outsb
lret
cmc
or
aaa
je
xor
pusha
sahf
clc
cmp
mov
jmp
cwtl
bound
and
xor
xor
push
pop
rorl
shl
pop
outsb
pushf
mov
pusha
nop
push
in
cli
mov
enter
shl
cmp
inc
test
push
cmpsb
or
xor
xor
out
data16
push
sahf
and
scas
mov
fsubrl
mov
lock
test
pshufw
push
stos
mov
sbb
sbb
mov
jmp
testb
and
popa
loope
sar
sbb
jg
dec
je
test
movsl
loop
dec
stos
mov
ficoml
cmp
add
test
lret
adcb
xor
pop
xchg
popf
dec
pop
jb
add
pusha
or
cmp
sub
sbbl
jo
or
std
std
outsl
xchg
aas
inc
and
xchg
pop
test
std
jne
popa
cs
daa
pop
jnp
mov
push
hlt
mov
or
fildl
imul
jne
addr16
mov
cmpsl
cwtl
inc
pop
jp
xchg
je
sub
jle
incb
mov
push
sub
jp
lahf
mov
cld
xchg
iret
add
dec
sahf
rolb
pusha
mov
sub
or
xchg
fimuls
jb
cmp
xor
lea
dec
roll
imul
pop
icebp
daa
rcrb
mov
inc
xor
movsb
xchg
mov
or
xchg
xchg
call
and
dec
mov
jmp
scas
shll
clc
and
repnz
in
push
fistpl
subb
outsb
xchg
inc
adc
in
mov
stos
jmp
jbe
jp
mov
add
mov
arpl
fiaddl
pop
subl
aad
cmp
jno
jp
gs
in
notl
pop
fidivrs
lds
scas
ljmp
ljmp
pop
dec
and
and
mov
xor
inc
aam
insb
ret
das
lds
jo
xlat
xlat
add
sti
jbe
loop
lcall
jle
xlat
push
and
cmp
push
lea
test
cld
xchg
adc
cli
xchg
inc
dec
ss
jl
inc
cld
inc
xchg
orb
cmc
shrd
ja
subl
movsl
jnp
jb
sti
sub
fnstsw
mov
dec
stos
cltd
xorb
aaa
add
call
xchg
lret
mov
mov
dec
cmpsl
xchg
cmp
xchg
dec
stc
aas
cmp
into
dec
and
mov
pop
sub
push
dec
lret
xchg
mov
mov
xor
sub
enter
jb
test
cli
out
cmc
mov
sub
cmp
mov
andb
xor
and
in
fstpt
shlb
bound
sub
push
jne
jb
adc
push
cwtl
outsb
inc
mov
cltd
mov
push
aas
fisttpll
mov
in
cmpl
mov
stc
jae
popf
adc
xorl
jno
push
in
addb
fwait
hlt
cwtl
jl
mov
or
sub
sarl
add
rclb
lcall
mov
fisttpl
nop
jns
adcb
data16
jne
jno
xchg
pushf
dec
and
jecxz
adc
aaa
and
hlt
jo
mov
adc
jp
test
inc
jns
pop
bound
scas
mov
fsubrl
dec
lods
and
lret
sub
loopne
lock
push
call
push
sbb
shll
cmp
mov
lock
jg
xor
movsb
inc
mov
dec
in
int3
mov
dec
push
pop
inc
imul
idivb
push
cwtl
cmp
sub
roll
jmp
test
xchg
mov
add
dec
sbb
cltd
inc
js
shll
das
enter
nop
fsubs
fdivrl
test
insb
ljmp
or
subb
mull
lret
lret
inc
push
rcrl
sbb
xor
xor
jae
std
and
cli
mov
loopne
push
repz
mov
cmpsb
cmp
popf
fmuls
jo
addr16
mov
mov
flds
lds
pop
cwtl
mov
or
movl
jns
add
jb
jno
xchg
ret
sbb
popa
adc
adc
test
out
dec
jnp
push
fldl
ja
dec
popf
cmpsb
add
cmp
adc
adc
mov
sub
xor
dec
or
cmc
lret
jge
jmp
mov
xchg
jae
push
mov
fmuls
outsl
push
jle
scas
inc
into
xorb
mov
hlt
addl
cltd
sub
mov
jmp
cmp
andb
out
sbb
or
pop
pop
ja
cmp
aad
add
mov
pop
xchg
js
std
cmpsb
cld
lds
andb
mov
push
daa
movsl
xor
fsubp
mov
xchg
xchg
mov
jle
jl
leave
push
daa
loop
adc
xor
push
xor
jl
dec
dec
iret
sub
mov
cwtl
cwtl
aas
ss
or
pop
jno
ss
sub
insb
sar
cmpsl
out
stos
cmpb
je
cmc
mov
push
mov
jl
mov
push
mov
in
inc
mov
stos
jmp
add
push
mov
mov
sbb
mov
adc
in
sbb
call
dec
lret
cwtl
int3
adc
and
and
cmp
push
js
int3
test
js
and
xchg
jp
or
fucomip
cmp
iret
les
popf
arpl
mov
repz
push
jle
push
scas
xchg
pushf
js
cmpb
and
mov
cli
mov
shll
push
mov
pop
add
sbb
xchg
mov
or
or
fsubl
mov
leave
out
lods
in
les
xor
pop
mov
push
cli
inc
mov
pop
repz
insl
mul
imul
loopne
movl
sub
pop
adc
jle
or
push
or
rclb
jge
and
dec
sti
out
inc
add
cmpsl
jl
sbb
pop
sub
inc
xchg
addr16
pop
arpl
sbb
int3
inc
xchg
pop
xchg
lcall
lods
aaa
jbe
pop
stos
call
mov
and
int
outsb
fdivrs
jp
fdivr
push
test
mov
dec
xchg
decb
mov
or
cwtl
fidivrs
cld
cmpsl
in
pop
shl
adc
int
mov
pop
sbb
mov
arpl
shrl
sub
cmpsl
shrb
repnz
in
sahf
adc
jmp
lock
push
xchg
fcmove
fldl
sahf
in
nop
jnp
in
cmpsl
int3
xchg
in
xchg
stos
sub
inc
js
cmc
xchg
pop
jge
add
inc
xor
pusha
adc
cmpsb
mov
xor
cmp
pusha
outsb
fwait
mov
popf
xchg
push
mov
and
incl
cmp
cltd
orb
adc
pop
pop
call
cmp
adc
dec
cmp
xchg
add
or
in
push
jp
inc
cmp
in
adc
popf
pop
lret
scas
inc
mov
add
lret
push
push
xchg
push
in
movsb
aad
insb
pop
scas
push
dec
pop
adc
les
stos
stos
xor
test
push
test
mov
or
jp
pop
xor
mov
vandps
cmpsl
sti
in
pusha
dec
mov
fisttpll
ror
loop
sbb
sbb
out
xor
dec
lock
xchg
mov
adc
pop
push
mov
fwait
movswl
stos
xchg
mov
gs
movsl
sub
jp
push
pop
lds
mov
add
ljmp
movsl
sub
jp
push
pop
lds
mov
add
ljmp
movsl
sub
cld
push
pop
cmc
dec
sub
lcall
push
fcmovb
lret
pop
cmpb
test
repnz
xchg
sub
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
out
dec
fmuls
loop
jbe
data16
push
enter
test
mov
imulb
js
dec
pop
mov
cmpsb
mov
or
fdivs
enter
es
idiv
out
loopne
pop
mov
cmpsb
add
out
add
data16
aaa
xchg
and
ss
imul
cmp
adc
shl
gs
pop
or
cwtl
cmp
inc
int
mov
adc
les
repz
add
cltd
test
mov
fnstcw
mov
adc
fsts
jbe
jnp
add
gs
inc
mov
mov
xor
sub
mov
mov
repz
popw
mov
and
test
or
or
nop
test
rcr
pop
or
jge
add
call
gs
dec
mov
push
test
lds
bound
outsb
mov
mov
mov
and
lret
rolb
inc
pop
mov
sbb
push
push
mov
cmpsb
cmp
outsb
ds
fadds
test
inc
push
mov
testb
mov
pop
ret
push
shll
jge
scas
aam
cmp
int3
jnp
jb
test
sub
or
lea
scas
lods
and
inc
jmp
enter
out
testl
jbe
data16
push
enter
test
mov
imulb
js
dec
pop
mov
cmpsb
cmp
call
inc
fdivs
test
mov
imulb
scas
pop
jmp
je
mov
sub
imul
rcll
stos
notb
push
adc
xchg
adc
push
out
movl
test
mulb
scas
iret
push
adc
stos
push
jp
fidivs
mov
jae
ss
rorl
lret
mov
inc
cwtl
inc
icebp
lds
mov
cmp
inc
jns
mov
rcl
bound
pop
cli
cmc
icebp
clc
cmp
jbe
jp
pop
xchg
incb
adc
test
test
movsl
or
or
jae
dec
lret
xchg
aaa
insb
dec
addr16
andb
inc
loope
mov
jecxz
xor
xor
dec
sbb
sub
unpckhps
or
sbb
push
cmp
cmpsl
ror
scas
in
xchg
imul
sbb
arpl
xor
stc
inc
fdivs
lret
pop
mov
jg
roll
xchg
mov
cwtl
pop
xchg
cld
inc
out
enter
enter
sub
test
inc
scas
jns
notl
gs
mov
fldt
aaa
jecxz
sub
xorb
lods
pop
mov
pushf
or
pop
fcoml
and
sbb
xorl
rclb
inc
cwtl
int3
lret
mov
and
fsubrp
push
mov
jae
jg
adc
and
dec
lcall
cmp
mov
add
dec
in
sbb
in
sub
das
outsb
std
decl
pushf
cli
or
mov
sub
xchg
rcrl
adc
test
dec
mov
sub
sbb
push
xor
fimull
iret
mov
jl
popa
movsl
push
adc
clc
lods
stc
push
cwtl
enter
int3
dec
jg
jo
mov
cmpsb
sahf
mov
leave
leave
cmpsl
xchg
insl
xlat
das
pop
mov
shlb
icebp
fs
loope
cli
stc
jo
aas
lcall
insl
xchg
adc
dec
dec
mov
clc
popa
xchg
pop
lods
insl
inc
sub
sub
sbb
movsb
xchg
mov
ret
insl
inc
sbb
filds
pop
gs
cmp
repz
jl
mov
or
xor
fucom
scas
ja
ss
lods
and
push
call
sub
inc
push
les
rcrl
mov
fdivrs
insl
pushf
gs
xchg
push
inc
leave
faddl
fbld
and
in
mov
xchg
jmp
or
int
or
js
outsb
sub
lahf
xchg
shrb
fnclex
fildll
mov
imul
sbb
icebp
sub
inc
sub
inc
insl
jmp
or
dec
out
mov
je
or
gs
idivl
scas
pop
insl
cld
sub
out
xchg
xorb
mov
dec
jne
mulb
dec
push
adc
ja
jns
lods
push
adc
pushf
mov
fstps
or
cmp
mov
mov
sbb
pop
icebp
daa
sub
add
mov
inc
cwtl
mov
in
pop
mov
pop
pusha
movsb
repz
shlb
sbb
add
xor
jno
dec
test
mov
fisttpl
sub
xor
aas
and
mov
shll
jle
add
xorb
mov
into
or
scas
cmc
push
add
mov
lods
mov
daa
iret
fildl
lds
sbb
and
rorl
sub
lods
xchg
ljmp
rolb
inc
insl
sub
mov
imul
push
push
les
sub
fisubs
sti
outsb
out
pop
fucomip
jns
in
xor
lods
out
lcall
ss
adc
fbstp
cli
stos
mov
int3
jge
ret
call
cmc
cmpsb
add
adc
adc
add
dec
in
mov
dec
xchg
sub
rcll
ds
mov
cld
push
adc
sti
hlt
in
pop
lahf
int
or
add
enter
dec
xlat
cmp
sbb
fistl
or
filds
mov
je
push
pusha
imul
pop
jg
lods
add
inc
sub
cmp
cli
arpl
mov
xchg
subb
rcr
cli
and
dec
movsl
fmul
cmp
and
lahf
cmp
mov
int
mov
adc
out
popa
call
stos
push
in
mov
jle
jnp
jmp
and
mov
roll
jae
mov
in
add
mov
sub
or
ficompl
pop
pop
sbb
sbb
push
and
aad
lret
and
sub
push
loopne
add
mov
fsubrs
push
mov
adc
cmp
in
lods
outsl
cmc
aad
cmp
outsb
or
ljmp
in
push
negl
mov
test
xorl
mov
sub
mov
pop
lods
inc
test
mov
lds
adc
hlt
push
jecxz
pop
mov
mov
xor
mov
mov
inc
sub
jnp
cmp
jnp
adc
test
out
inc
inc
movsl
sub
pop
test
outsb
sub
and
es
push
mov
mov
hlt
and
test
inc
das
push
add
cwtl
pop
adc
jp
movsb
or
fucom
push
jns
mov
pop
aaa
sub
and
add
fisubrl
adc
popa
mov
sbb
adc
fidivrl
imul
jp
outsb
cli
adc
push
mov
push
mov
orl
sbb
nop
adc
cmc
pushf
dec
leave
add
bound
sub
iret
xchg
xchg
in
and
shlb
push
pop
faddl
sbb
arpl
mov
xor
jg
mov
or
lods
pop
pop
jne
jle
xchg
mov
in
fcmovnu
je
inc
xchg
jmp
mov
dec
sbb
mov
lea
fdivp
cmpsb
out
cli
subl
in
cmp
jg
popf
push
test
imul
popa
es
sub
mov
out
inc
std
sbb
je
jle
bound
add
add
jge
jnp
aaa
and
mov
clc
pop
mov
xor
xchg
arpl
aas
shl
fstl
or
je
push
cmpsb
adc
arpl
jecxz
add
andb
mov
loop
das
jmp
pop
pop
fimull
je
jne
or
orl
movsb
cmp
mov
pop
push
sbb
jp
cmp
inc
add
mov
sub
cmc
adc
sbb
cs
jl
lods
repz
bound
call
inc
nop
mov
cmp
or
pusha
cmp
push
mov
lock
add
pushf
stc
inc
insb
fists
lcall
jbe
pop
fptan
mov
sub
call
xchg
inc
sbb
in
push
dec
iret
mov
lock
fs
push
mov
loop
popa
mov
push
xchg
sbb
in
aad
dec
push
and
nop
pop
pop
cmpsl
mov
into
xchg
push
sarb
inc
jbe
pushf
mov
adc
scas
scas
inc
insb
mov
mov
hlt
sub
loop
dec
pop
mov
fisttpl
les
stos
lds
cwtd
fwait
ljmp
cmpb
push
popa
hlt
adc
push
inc
push
mov
loopne
jmp
push
lock
xor
outsb
fstpl
hlt
mov
mov
dec
adc
insb
lds
mov
std
stc
insb
push
popl
adc
lods
and
mov
sbb
stc
xchg
dec
mov
dec
imul
loope
xchg
mov
push
fidivl
cmp
shl
js
push
pop
jg
sbb
sub
arpl
mov
adcl
cli
push
ficomps
mov
in
outsl
iret
pop
cmp
mov
and
jg
in
xor
sbb
cltd
xchg
negl
mov
mov
pop
mov
loop
rcrb
ficoms
ss
cmp
test
push
les
jmp
in
pop
mulb
out
pop
je
push
and
mov
add
pusha
jg
pop
in
aam
mov
imul
adcb
gs
mov
inc
jnp
xchg
scas
xor
sub
xchg
stc
loopne
xlat
cmpsb
loop
ret
popf
sub
pop
push
mov
add
scas
cli
jne
push
and
test
mov
xchg
and
ljmp
adc
sub
insb
incl
roll
clc
stos
rcl
sbb
add
cmp
jl
mov
stc
xor
mov
jge
jnp
and
add
push
cmp
cmp
loope
pushf
cmp
testl
pop
pop
rorb
daa
xchg
mov
pop
aam
and
repnz
pop
cmp
pop
mov
shll
pusha
repnz
icebp
xchg
pop
repz
lds
pop
out
fldcw
cmp
hlt
mov
xchg
in
sbbb
mov
repnz
mov
lods
test
mov
imul
lods
dec
and
lea
mov
cmp
stos
fwait
loop
add
inc
daa
jg
jecxz
mov
dec
or
movsl
push
orl
out
mov
lret
cmpsl
dec
xor
in
push
inc
insl
add
dec
dec
sbb
cld
xor
test
jns
in
add
mov
xorb
lret
out
xor
xchg
stos
out
aaa
sbb
hlt
daa
fwait
ror
jne
and
loope
clc
jnp
std
pushl
mov
cwtl
or
pop
imul
lret
add
pop
std
gs
push
lods
popf
iret
outsl
leave
adc
cmc
movsb
popa
dec
mov
out
insl
popa
mov
mov
mov
mov
mov
xor
adc
std
iret
sbb
sub
add
mov
cmc
std
inc
out
cli
lcall
popf
pusha
cmp
int
enter
imul
inc
sbb
dec
ss
pop
sbb
mov
aam
pusha
adc
arpl
popa
adc
cmp
or
mov
insb
and
fisttps
aas
mov
mov
sbb
lods
sbb
outsl
push
xchg
test
jb
cld
add
and
jno
repz
jmp
iret
jmp
mov
sahf
mov
xchg
incb
bound
rorb
sub
pop
shll
add
cwtl
enter
sbb
lahf
int
popf
cmp
repnz
in
imul
stos
jl
adc
imul
hlt
jl
add
pusha
sbb
sub
mov
movsb
and
stos
xor
scas
idivl
cwtl
or
jl
stc
xor
hlt
daa
ja
cmp
rcll
imull
cmp
adc
sahf
pop
mov
cmp
outsl
or
flds
dec
repnz
inc
lods
aad
push
lods
cmpsl
popf
cwtl
push
add
sbb
or
fdivl
daa
mov
and
bound
out
sahf
jbe
out
je
es
test
cmp
adc
mov
mov
into
ret
scas
xor
and
add
mov
enter
push
jge
or
mov
inc
fnstenv
nop
fisubrs
jbe
stc
cltd
imul
shl
popl
loope
mov
outsb
mov
inc
dec
adc
push
loop
push
movb
imul
or
ja
adc
lds
add
out
jg
ret
loop
push
icebp
xchg
and
push
mov
ficoml
xlat
movsb
xor
jmp
or
sub
pop
xchg
js
into
leave
or
pop
sbbb
cmpsl
cmpsl
arpl
pop
in
jno
leave
mov
dec
xchg
adc
xchg
in
stos
and
imull
sbb
inc
inc
test
js
enter
push
sti
cltd
push
inc
shl
mov
cmpsb
cwtl
aad
and
xrelease
loop
sub
and
or
jmp
mov
sub
and
loop
idivl
fs
mov
push
pop
sbb
mov
jmp
fimuls
icebp
xor
and
jo
cmp
ret
or
mov
dec
or
sbb
in
fucomip
dec
xchg
orb
rol
clc
sub
into
mov
fxch
xchg
es
mov
inc
pop
stos
lock
pop
xchg
mov
daa
xor
pop
addr16
cmpsb
lods
jbe
orb
push
aas
int3
mov
imul
push
adc
lret
mov
leave
pop
das
push
ss
mov
addr16
add
mov
or
pop
clc
shlb
sahf
adc
mov
pop
clc
and
cmp
sub
xchg
and
add
push
cmpsb
aad
or
inc
int3
dec
lcall
mov
cmc
xchg
and
xlat
add
xor
adcb
xor
or
add
or
clc
insb
mov
lea
jae
cmp
ret
mov
call
xchg
mov
std
cmpsl
lcall
je
int3
notl
test
int
pusha
lret
test
inc
xchg
sub
dec
mov
and
ljmp
xchg
shrl
push
mov
push
mov
mov
pop
lcall
push
dec
mulb
pop
std
inc
sbb
push
jle
inc
aam
pop
or
adc
ror
jmp
ss
pusha
enter
xor
pop
xchg
arpl
mov
cmp
hlt
cmp
cli
and
js
or
and
loop
repz
and
ljmp
push
in
dec
sarb
or
push
dec
mov
mov
push
sub
add
and
mov
pop
cwtl
stos
add
sbb
lods
inc
jnp
mov
xchg
push
popa
inc
and
xchg
js
xchg
add
int3
mov
cmp
enter
test
in
bound
aaa
icebp
inc
int
cli
push
or
ljmp
aam
xor
push
imul
inc
add
lods
push
int3
std
jl
sbb
push
xchg
int3
cmp
xchg
in
pop
enter
inc
sbb
cmp
stos
ja
add
popa
out
cmp
sbb
jnp
pop
adcb
cmp
mov
out
mov
push
jge
push
xor
pop
repnz
repnz
push
or
and
cmp
dec
divb
outsl
stos
jecxz
xchg
lods
fcoms
dec
xchg
ror
stos
popf
insb
ficoml
adc
and
insb
adc
mov
pop
push
mov
dec
pop
lahf
bound
push
sub
mov
jge
xchg
pop
jmp
pop
inc
test
enter
or
xor
je
test
mov
test
inc
sbb
test
mov
or
cld
fmull
cmpsl
lds
call
sub
in
arpl
call
adc
movsl
adc
lods
in
sbb
scas
rorb
fidivrl
dec
dec
fcoms
push
nopl
jno
repnz
setns
add
or
lock
sbb
mov
jecxz
pop
pop
sbb
pop
mov
pushf
fidivs
jge
xor
mov
push
bnd
sbb
and
lret
adc
dec
mov
xor
pop
ret
popf
iret
fwait
push
mov
mov
sbb
xlat
push
lret
pushw
pop
js
jbe
mov
lret
out
pop
ja
or
fsubl
fdivrs
insl
inc
jne
int3
dec
adc
arpl
mov
add
add
fs
dec
cmp
or
fnstenv
mov
cmpsl
jge
dec
mov
sti
mov
fistps
cmc
or
daa
mov
adc
enter
add
mov
mov
dec
in
fdivrl
jne
call
ficompl
adc
mov
mov
mov
rcl
daa
mov
push
ljmp
movsl
popf
in
mov
adc
xchg
test
cli
cmp
xchg
inc
jo
mov
testl
daa
pop
pop
inc
or
push
cmp
sbb
test
push
xor
mov
sub
movsb
aaa
add
pop
out
sub
cwtl
adc
fdivrl
push
mov
das
pusha
divl
xchg
jnp
xchg
xorl
jno
fwait
call
mov
mov
repnz
lret
mov
sub
push
std
test
out
and
iret
push
xor
adc
jae
sbb
and
hlt
shll
sbbl
push
fs
pop
dec
pop
addl
mov
xchg
movsb
in
mov
push
mov
xchg
iret
jnp
xor
or
sbb
mov
xchg
push
andl
pop
sbb
mov
shll
mov
outsb
jp
int
das
dec
ss
adc
push
cli
or
shrb
xchg
repnz
imul
out
lods
dec
mov
cld
push
sub
push
and
inc
cmpsb
dec
pop
add
cli
les
shll
mov
loop
lret
or
into
daa
push
dec
cmp
int
jae
push
pop
icebp
jmp
sahf
jo
push
add
dec
cmpl
lods
fldt
mov
ret
or
enter
into
jo
sub
shrl
pop
int
lods
pop
sub
fmull
cmpsb
dec
and
pop
adc
call
enter
mov
into
jp
jecxz
data16
and
lcall
or
jmp
fstps
jmp
jbe
jp
fildll
iret
sbb
jo
or
and
js
imul
dec
lea
stos
dec
fwait
fwait
out
imul
or
push
dec
jae
adc
test
outsl
push
andb
dec
mov
idivb
aaa
sbb
dec
movsl
in
pop
scas
cld
adc
sbb
fsubp
push
pop
xchg
stos
outsb
xchg
mov
test
daa
cmp
or
sarb
imul
scas
dec
push
add
pop
mov
ds
out
adc
adcl
rcrb
enter
lret
push
sbb
lds
and
xchg
pusha
loope
add
das
cmpsb
rcr
aad
fldl
cltd
int
ljmp
mov
push
fs
jl
push
or
jnp
inc
sbb
mov
jmp
or
and
ljmp
outsl
push
out
cmp
adc
jle
sbb
repnz
inc
adc
or
test
addr16
imul
and
mov
pop
out
xchg
mov
das
sbb
add
adc
jmp
dec
xchg
jle
push
push
xor
and
add
test
outsl
cli
int3
and
jp
inc
bound
jge
jmp
mov
adc
pop
fmull
xchg
xchg
cmp
mov
data16
mov
int
inc
dec
inc
push
lods
aas
cmc
mov
xor
jb
xchg
outsl
pop
call
cmpsl
sbb
cmpsb
lea
test
add
mov
mov
xchg
dec
jge
pop
lock
ret
rcl
xchg
jno
adc
lods
xchg
stos
rolb
rcrb
popa
add
mov
out
push
pop
adc
push
mov
in
ror
repz
in
mov
mov
test
or
and
stos
cltd
jge
cmc
sti
sub
xor
push
pop
out
xchg
outsb
in
sbb
push
push
in
xchg
rorb
inc
jns
stos
ja
cmp
mov
jnp
adc
std
mov
mov
dec
mov
mov
xlat
jb
xlat
dec
inc
push
mull
aas
nop
test
sahf
pop
jo
aam
push
packssdw
cmc
dec
cli
xchg
jno
aad
aas
adc
ds
push
clc
jl
adc
pop
xlat
in
dec
fwait
pop
outsl
adcb
addr16
xchg
ss
sbb
cmpsb
inc
pop
or
enter
cmc
add
pop
sbb
repnz
adc
jo
xor
adc
lods
mov
rcrl
sbb
push
aaa
sub
cltd
or
je
cmp
aaa
or
scas
adc
xchg
pusha
imul
sbb
or
inc
inc
push
nop
push
xchg
push
mov
ret
and
stc
insb
lcall
and
cmpsb
cmp
adc
insl
pushf
add
shrl
xchg
dec
out
jg
mov
cmp
testl
stos
lcall
sti
orb
in
cmp
in
cwtl
pop
pop
in
fbstp
ljmpw
in
clc
cwtl
inc
stos
test
pop
and
aas
addr16
xchg
inc
xor
xchg
add
outsb
shlb
in
es
sub
jge
bound
mov
xchg
dec
inc
jmp
mov
arpl
test
sbb
push
hlt
fsubr
in
stc
fcmovbe
icebp
std
jb
xor
pop
aas
xor
jne
out
jmp
lods
stos
mov
fstpt
dec
mov
js
and
pop
mov
cmpsb
cmp
call
inc
fdivs
test
mov
imulb
js
dec
pop
mov
cmpsb
cmp
call
inc
fdivs
test
mov
imulb
xor
xor
pop
mov
cmpsb
nop
xchg
or
clc
push
enter
test
mov
imull
js
dec
pop
mov
cmpsb
cmp
pop
push
cld
enter
and
fdivl
cld
xchg
in
test
pushf
jecxz
into
hlt
mov
and
adc
add
je
loope
push
sub
fdivl
test
lods
les
inc
jl
bound
je
fs
sub
lds
test
aam
les
outsl
and
jo
add
xor
pusha
es
mov
mov
aad
xor
fisubrl
xor
adc
or
xchg
xor
repnz
jnp
ja
sbb
sarb
test
fsubl
adcb
mov
rcll
packsswb
xor
or
mov
inc
aam
stc
sbb
lock
cmp
sub
frstor
enter
in
pop
lods
cmp
out
dec
dec
dec
jmp
push
jecxz
or
mov
sub
mov
jno
or
arpl
xchg
icebp
icebp
rcrl
mov
jmp
in
or
ret
stos
cmp
xor
sub
mov
orl
and
add
add
cmp
sub
adc
xchg
in
test
aam
les
push
and
adc
add
je
fs
sub
mov
test
in
out
cwtl
ljmp
push
and
jl
inc
sbb
imul
mov
lods
cmpsb
xchg
xchg
pushf
div
mov
inc
pop
dec
sub
jne
imul
cmovp
dec
adc
std
mov
loope
hlt
mov
mov
xor
and
adc
add
je
fs
sub
fdivl
test
lods
les
and
adc
add
je
fs
sub
fdivl
ret
lock
ss
adc
enter
pop
jae
mov
cmp
cwtl
lods
mov
xor
xchg
rcl
popa
rcrl
mov
sub
cmp
rcrb
pop
sahf
das
dec
sbb
xor
add
call
cs
out
mov
inc
bound
jl
sub
sbb
mov
inc
jl
stos
enter
cwtl
out
mov
mov
sar
mov
cs
test
test
mov
mov
push
cmp
jnp
fcoml
push
test
out
dec
mov
jb
and
xchg
mov
cmp
stos
mov
addr16
mov
xor
pop
int3
mov
std
in
add
dec
out
leave
bound
pop
add
push
ffreep
repz
add
shrl
cli
movsl
out
bnd
fisttps
aad
and
das
ficoms
movsl
jp
fisttps
fnsave
sub
call
mov
adc
outsb
cmp
or
js
sti
jecxz
out
inc
cmp
inc
insl
imul
mov
sub
cmp
mov
cmpsb
test
nop
mov
xor
shlb
aas
mov
loop
in
mov
ds
inc
lds
jne
shll
xchg
movsl
mov
adc
loopne
imul
xchg
pushl
hlt
push
andb
cmp
adc
add
imul
adcl
es
jbe
imul
mov
xor
gs
into
fmul
push
mov
jp
adc
out
xor
stos
loope
xchg
mov
cmp
sbb
rcll
das
test
lahf
pop
repz
sub
push
fistps
lods
roll
xor
cmpsl
mov
mov
sub
push
xchg
out
cli
or
dec
sahf
xor
cmp
dec
js
movq
jo
dec
mov
and
cmpsl
test
sub
cld
jb
or
jae
inc
aaa
test
pop
or
mov
mov
xchg
in
vmovntps
mov
ja
or
lahf
lahf
movsb
jg
or
mov
fwait
xor
jl
xorb
js
cmc
icebp
jle
rolb
lds
fisubs
push
mov
jae
add
scas
loope
into
cwtl
sub
xor
jnp
loopne
adcl
mov
pop
test
divps
sbb
in
push
xchg
cmc
push
insb
xor
movsl
dec
pushl
or
fwait
cmp
fcoml
aad
jnp
clc
dec
in
mov
push
stos
movsb
or
mov
es
pop
push
add
cli
dec
mov
mov
jmp
repnz
in
xchg
push
js
and
negl
ja
adc
add
fcmovne
out
jmp
mov
sub
cmp
es
pop
jo
xchg
sbb
and
mov
dec
test
push
movsl
cmp
sbb
cmp
jl
and
inc
cmp
and
fdivrp
out
in
jle
sub
sub
fnstenv
sbb
lods
mov
mov
js
jns
enter
xchg
mov
pop
jno
pushf
dec
cmp
adc
mulb
hlt
jl
cmp
add
enter
xchg
xchg
pop
adc
xor
lds
lcall
mov
push
arpl
inc
iret
imul
mov
mov
mov
xchg
mov
aam
and
or
ss
mov
movsl
repz
out
fwait
shll
pop
data16
idivl
cmp
cmp
mov
aas
imull
cld
ljmp
mov
jle
or
pop
cmc
cmp
sub
push
addr16
inc
movsb
imul
sbb
mov
stos
add
pop
in
repnz
xor
fcmovnbe
into
outsl
test
insb
test
test
dec
push
jns
push
fcmove
and
lea
lcall
dec
nop
nop
repz
cmp
pushf
sbb
adc
repnz
leave
mov
clc
cltd
add
pusha
aaa
jne,pt
sub
loope
scas
pop
cmp
data16
cld
mov
movb
rcll
push
pop
jp
aad
add
sbb
icebp
or
mov
loope
cmp
jecxz
out
and
call
rorb
in
pop
outsl
aam
sbb
and
push
or
jbe
stc
addr16
ds
mov
popf
and
scas
xchg
rcl
popf
inc
loope
ret
daa
lret
into
ret
int3
dec
popa
outsb
jecxz
and
jns
jecxz
push
mov
es
lock
mov
pop
dec
adc
inc
cwtl
cmp
inc
stc
fwait
subl
fimuls
dec
mov
pop
mov
push
push
scas
stc
dec
or
inc
enter
lcall
sub
imul
dec
jmp
sub
xchg
add
lods
mov
xchg
rorb
cmp
cltd
dec
cmc
and
pushf
aad
imul
shl
cmp
data16
aas
push
mov
add
cmp
mov
je
mov
mov
jo
xor
jns
jl
cmpsb
icebp
add
movsb
adc
inc
add
sub
jns
sub
sbb
sbb
jb
test
cmp
push
rclb
mov
lock
ficomps
adc
xorb
xchg
xchg
sarl
loope
lcall
pop
xor
test
rolb
dec
repz
xlat
adcb
or
add
dec
cmp
push
adc
jo
push
stos
jecxz
stos
nop
and
movsl
adc
mov
push
xchg
adc
scas
ret
mov
jno
jp
add
out
xchg
sti
pop
pusha
sub
and
jp
in
leave
inc
daa
sbb
lods
add
push
xchg
adc
cmp
out
mov
lods
adcl
dec
fistps
lret
stos
stos
pusha
or
shlb
lcall
sub
mov
jbe
and
jle
dec
cmpsl
dec
xor
mov
jmp
push
shll
sarb
loopne
int
iret
cwtl
pop
es
push
dec
shrl
mov
xor
fwait
in
mov
dec
mov
cltd
and
pop
adc
les
fcmovb
inc
cmp
and
loop
fsubrs
enter
aaa
sub
stc
scas
mov
jne
mov
lret
xchg
ret
xlat
imul
mov
jnp
sarl
mov
sub
sub
jmp
lcall
pop
mov
fnsave
call
pop
imul
jmp
faddp
movsl
outsl
or
sbb
imulb
xchg
and
lahf
icebp
popf
xchg
daa
sahf
fs
mov
mov
dec
pop
mov
push
push
mov
out
xor
dec
and
sbb
sub
pop
shl
popa
sub
cmp
ljmp
mov
movsb
xor
repnz
mov
jle
xchg
or
iret
or
lret
repz
cmp
xor
jl
cld
sub
inc
inc
std
fnstcw
pushf
ret
in
stos
add
sbb
test
push
xchg
pusha
std
adc
xor
es
sub
lods
fstpl
ljmp
jae
jae
pop
jns
ljmp
adc
movsl
jle
push
mov
or
xor
pop
imul
mov
call
loopne
cmc
inc
cmp
sub
test
cmpsb
adc
inc
sbb
out
pop
lret
or
xchg
lahf
mov
daa
jns
int3
lods
sbb
mov
mov
movsl
xor
mov
xor
popf
aad
sbbl
cli
jns
pushf
ret
add
mov
cwtl
aad
lods
or
jmp
inc
mov
jle
loope
shll
add
jb
aad
out
decb
inc
add
jns
int3
sub
sbb
mov
shlb
jae
repz
dec
fisttpl
or
fisttps
repnz
cmpsb
stc
xorl
jno
outsb
push
divb
lods
push
xchg
xor
adc
sub
or
mov
and
mov
pop
pop
test
test
and
pop
push
jbe
and
sub
jg
and
popa
lds
pusha
jae
cmpl
push
int
dec
pop
insl
adc
xor
fisubl
xchg
or
mov
inc
inc
fs
push
cltd
mov
std
frstor
xchg
adc
xor
pop
xchg
add
pusha
sub
cs
add
cmp
mov
xchg
es
sub
xchg
aas
push
rcl
jmp
ds
ds
jp
cmp
loop
jne
inc
lods
and
cmp
dec
in
stos
dec
sub
cli
aam
sbb
arpl
fstl
out
faddl
leave
lods
mov
mov
lods
mov
lea
cltd
imul
out
mov
mov
jns
loope
push
push
sub
sbb
adc
imul
mov
roll
and
mov
or
ss
imul
adcb
jbe
inc
movl
fidivrs
cmc
fs
lds
mov
mov
arpl
sbb
xorl
push
mov
or
aam
jmp
xchg
leave
push
cmc
movsb
aam
scas
push
testb
jo
shlb
xor
jg
sub
outsl
fstpt
ret
out
movsl
or
and
xchg
pmullw
dec
jmp
aas
and
sar
mov
js
scas
fmuls
cli
xchg
and
jl
outsb
push
and
and
imul
jp
jle
xor
in
mov
add
mov
sbb
adc
cmp
jge
pushf
inc
ret
lods
mov
repz
and
loop
mov
outsl
add
cli
clc
dec
inc
loope
cltd
aam
test
xchg
adc
inc
cmp
and
dec
cs
push
pop
rcrb
cmp
mov
add
xchg
fdivrl
repnz
jp
repz
push
ret
cwtl
and
mov
pop
fs
pop
outsl
in
xor
add
sub
out
adc
insl
outsb
pop
stos
insl
push
ljmp
sub
sbbl
in
nop
xor
xchg
dec
loop
xchg
mov
test
mov
arpl
adc
insb
add
dec
xchg
push
fs
jecxz
inc
mov
jne
inc
scas
ljmp
or
aam
and
xchg
cltd
repz
in
pop
or
or
mov
popa
lahf
jne
inc
xor
push
enter
stc
je
cwtl
call
movsb
lds
inc
mov
das
dec
mov
mov
insb
or
pop
xlat
pop
fsincos
add
dec
sub
jg
mov
mov
in
fnsave
shl
mov
sub
mov
pop
mov
mov
cltd
icebp
ljmp
ss
sub
popa
or
clc
inc
xchg
movsl
cwtl
xchg
jmp
jle
fdivrp
inc
in
jecxz
jecxz
js
mov
outsb
push
jp
addl
repnz
loop
aaa
mov
fxch
sub
jle
lods
out
scas
adc
xor
fldl
mov
popa
inc
cld
push
and
fildll
js
sbb
sub
jbe
in
adc
incb
sbb
subps
mov
out
test
sub
ljmp
adc
add
xor
inc
aam
add
mov
fldt
lcall
dec
ds
cltd
jp
add
cmc
repz
aam
lcall
lret
inc
lcall
movsl
pop
mov
xor
mov
cmp
sbbb
and
orb
gs
and
and
inc
mov
insb
scas
xor
sbb
cmp
or
mov
inc
orb
movsl
in
fcoml
out
imul
jecxz
testl
int3
mov
sbb
xor
in
cwtl
xor
xchg
and
add
mov
clc
int
in
movsb
push
fidivrl
add
rcrl
fidivs
pushl
fistl
push
stc
pop
adc
pop
xor
mov
fwait
sbb
mov
rcrl
rolb
inc
and
or
es
pop
push
sub
pop
scas
mov
popa
sbb
jl
scas
std
aaa
ret
sub
je
mov
negb
idivb
xor
lock
cwtl
mov
neg
sbb
or
cmp
or
add
loopne
movsb
xchg
lcall
mov
push
fwait
xchg
ja
outsb
shlb
fdiv
loopne
mov
or
cmc
jp
dec
sbb
sub
xor
xchg
push
cmp
stos
or
jbe
test
add
xor
pop
cmpsl
mov
push
mov
cmp
rorl
in
dec
andb
in
fxch
stos
testl
pop
mov
add
jl
arpl
fs
loope
push
ret
loopne
jbe
cmp
pushf
arpl
pushf
xchg
xchg
sbb
sbb
cmp
jne
cmp
push
mov
cmp
int
sub
and
jo
bound
sub
xchg
jecxz
dec
nop
push
popf
fcompl
xor
jg
xchg
and
jp
dec
xchg
cmp
sub
out
pushf
inc
cmp
sbb
fstps
rolb
xor
dec
xor
mov
mov
ja
loope
or
cmp
adc
add
jg
test
ja
push
pop
cld
push
stc
std
mov
dec
and
insb
loopne
dec
arpl
cmp
lahf
xor
cli
mov
jb
xchg
shlb
add
jae
fs
sub
push
jno
mov
addps
jge
mov
mov
xchg
xchg
sbb
cmpsb
in
mov
pop
adc
push
out
rcll
and
push
inc
xor
jo
mov
rorl
in
jae
jb
inc
or
adc
xchg
lods
pushf
outsb
dec
or
adc
push
repnz
popf
in
inc
lret
shll
sahf
cmp
dec
fistpl
xchg
lods
mov
loop
add
mov
outsb
inc
push
jns
out
xor
dec
mov
cltd
sti
add
out
inc
call
shlb
icebp
gs
push
sbb
jle
popa
ja
xor
fadds
pop
in
inc
add
and
pop
cmp
mov
add
lret
mov
xchg
popf
test
jmp
roll
test
cmp
lahf
cmpsb
movsl
mov
popa
xor
mov
stos
cld
mov
xchg
xor
xor
jmp
add
dec
sub
or
push
sub
and
or
loopne
sbb
fsubl
jns
es
test
fsubl
jne
add
sub
inc
cs
push
or
imul
dec
jae
xor
rorl
mov
inc
testb
movsl
repz
call
repz
in
sub
pushf
inc
stc
pop
mov
xlat
adc
sbb
into
out
clc
arpl
mov
cmp
sub
out
adc
shlb
sbb
test
and
inc
scas
test
popa
sbb
mov
xchg
loope
jb
iret
stc
mov
adc
inc
mov
cli
rcrl
or
or
push
mov
adc
sub
adc
cli
leave
popf
mov
sub
scas
inc
daa
int
hlt
repz
sub
jne
stc
lods
mov
pop
cmp
loopne
push
sub
dec
int
dec
mov
xor
push
mov
lea
add
push
inc
jnp
push
xchg
iret
jb
or
jmp
jb
xor
pushf
pop
jge
enter
fsubrl
mov
sub
mov
je
nop
enter
jge
jmp
or
add
pop
call
xchg
fstpt
sbb
mov
repz
pop
into
jb
adc
and
aam
imul
aaa
ljmp
scas
or
or
daa
cmc
add
arpl
jmp
pop
cmp
mov
sub
test
adc
pop
jbe
dec
adc
mov
es
nop
cmp
test
or
ficoml
mov
mov
les
add
hlt
punpckhwd
shl
or
stos
push
cmp
arpl
jno
mov
xor
jo
mov
mov
movsb
clc
pop
call
pop
pop
movsl
push
jo
fwait
inc
and
leave
jl
fsubl
jbe
jmp
pop
shrl
imul
lahf
mov
popa
cmc
add
mov
sub
test
xor
adc
push
je
in
in
mov
mov
jnp
sub
shr
hlt
jle
pop
cmpsb
push
icebp
icebp
push
mov
lea
and
cmp
mov
jb
insl
adc
jo
ja
outsb
out
insl
mov
cs
push
and
mov
ret
xchg
push
or
push
insb
scas
ds
fidivrs
pop
pop
mov
into
jbe
fs
or
fisubrl
or
or
cs
insb
cmc
cs
push
jl
test
das
mulb
sub
cmpsl
jbe
push
adc
mov
xor
pop
jns
pop
shlb
mov
sti
loopne
mov
clc
outsb
xlat
insl
add
push
mov
fcoms
movsl
or
in
pop
sarb
movsb
fucom
in
pop
xchg
xchg
add
pop
mov
movsb
cmp
movsl
in
inc
out
xchg
pop
jns
js
push
adc
mov
push
adc
data16
pushf
sbb
outsl
xchg
shll
jb
ficomps
das
lret
sub
scas
sbb
xor
addr16
popf
in
imull
fwait
insl
into
test
xchg
mov
push
mov
cs
push
pop
fsubrl
mov
and
pop
nop
jmp
movsl
xor
jge
add
push
mov
mov
mov
mov
ret
push
pop
xor
nop
push
push
inc
dec
sbb
ja
int
adc
iret
jo
pusha
lcall
cld
roll
js
test
mov
mov
mov
dec
or
addr16
popf
pop
pop
pop
inc
mov
ss
jle
xor
mov
inc
sbb
data16
aam
xchg
or
inc
ljmp
std
or
das
cmc
out
or
fbstp
into
push
xor
jp
and
xchg
and
inc
dec
and
repnz
pop
sahf
orl
popa
mov
fistpl
je
mov
pushf
fs
mov
sar
pop
mov
pop
out
repnz
jge
push
push
adc
jle
dec
push
stos
push
add
push
jno
sub
repz
je
sar
clc
push
and
cmp
incb
mov
mov
pushf
ret
dec
inc
cwtl
and
dec
fdivrl
push
ret
cmc
shll
xchg
pause
je
lds
jae
xor
out
mov
mov
popf
pop
shlb
mov
out
arpl
out
cmpsb
and
fwait
sub
lret
repnz
inc
sub
sti
inc
in
scas
mov
dec
or
movsl
ret
mov
xchg
ret
or
jmp
pushf
mov
jne
sub
xlat
inc
add
adc
das
xorb
call
aad
icebp
sbb
push
mov
push
lods
test
xchg
daa
or
mov
aam
xchg
ss
je
in
mov
leave
test
and
xchg
push
pop
ds
cli
adc
mov
inc
push
fcoms
aad
adc
mov
sbb
push
rsm
push
inc
test
fnstcw
mov
ret
jne
sub
es
out
cmp
push
imul
es
movsl
push
out
in
mov
frstor
lret
push
xor
aad
addr16
call
inc
fdivrl
xchg
dec
test
out
cwtl
movsb
popf
out
divl
out
sbb
loop
aaa
imul
imul
and
out
xchg
shlb
pop
fdivrl
jae
xor
jne
xor
mov
inc
jl
inc
insb
pop
sbb
mov
leave
mov
in
je
lea
or
sub
sub
mov
stc
sub
hlt
inc
repz
dec
cli
and
inc
fcomip
cmp
movsb
push
and
out
imul
mov
dec
xchg
or
lds
hlt
mov
mov
xor
and
adc
add
je
fs
sub
fdivl
test
lods
les
and
adc
add
je
fs
sub
fdivl
test
lods
les
and
adc
add
je
fs
cs
fdivl
test
aam
les
adc
jae
cld
test
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmc
and
aad
lds
loopne
mov
jbe
adc
inc
xor
pusha
add
nop
aad
lds
xchg
loopne
lock
adc
inc
xor
pusha
add
nop
aad
lds
xchg
loopne
lock
inc
dec
and
adc
push
add
test
aad
lods
pop
mov
jecxz
adc
and
mov
jmp
mov
sub
movsl
das
imul
call
xor
and
mov
xchg
popl
push
mov
loopne
ja
pop
out
jno
shlb
and
scas
arpl
jg
xchg
push
mov
pop
ror
test
mov
mov
add
sahf
mov
sbb
cmp
rolb
je
insl
adc
fmul
add
movsl
adc
leave
add
cmp
sahf
or
shll
sub
add
mov
pop
jo
and
aad
lds
xchg
loopne
lock
adc
inc
xor
pusha
add
inc
xchg
out
not
scas
lret
test
addb
add
sub
jne
add
fidivl
movsl
out
rorb
add
inc
pop
ret
aas
jl
outsl
push
xchg
shl
in
aam
lock
movsl
rclb
add
push
and
xor
pusha
add
nop
aad
lds
xchg
loopne
lock
adc
inc
xor
pusha
add
test
mov
sbb
lds
out
iret
arpl
mov
cld
aam
lods
xchg
shll
push
test
rol
sbb
push
js
testb
test
clc
icebp
push
mov
cmpsb
jo
push
fcmovnb
pop
or
mov
jne
adc
xchg
fildll
mov
mov
test
inc
scas
je
inc
add
shlb
scas
sti
cmp
cwtl
jmp
shr
pop
xchg
cmp
icebp
adc
push
sbb
in
mov
dec
aam
pop
sub
mov
daa
cmpsl
lahf
jmp
pushf
jmp
aaa
dec
add
push
out
loope
sbb
pop
out
repnz
fnstenv
mov
jae
hlt
inc
faddl
xor
test
cmc
or
adc
mov
cli
cmp
das
mul
test
pop
sbb
xchg
push
cmp
shr
aaa
popa
mov
jge
out
add
push
js
inc
push
or
fidivrl
jbe
hlt
dec
fdivl
jns
cmp
push
shl
add
mov
out
pop
ficoms
xor
jl
jp
push
xchg
daa
fwait
add
leave
cmpsb
dec
es
inc
dec
lahf
mov
xor
loope
inc
lea
mov
sbbb
mov
out
lds
push
adc
cmp
xchg
dec
imul
lret
repz
pop
mov
sub
fidivs
aaa
lahf
decl
lods
imul
orb
fadd
sub
jo
pop
mov
popa
pop
arpl
and
cmp
outsl
in
nop
sbb
adc
imul
push
into
sti
sub
loop
int
icebp
mov
inc
xchg
popf
mov
pop
mov
sub
mov
stc
cmpsl
subb
inc
push
decl
test
cwtl
add
stos
dec
xchg
pop
mov
xchg
jo
xchg
lds
jae
inc
mov
mov
clc
lcall
mov
aam
shrd
ss
pushf
fidivrl
pop
or
inc
mov
jae
adc
inc
mov
jge
andl
xor
das
pop
pop
jns
pop
sub
cmpsl
lods
mov
stc
cmpsb
xchg
cmpsb
out
or
jg
inc
loope
adc
push
movsb
insb
xor
hlt
mov
add
in
jecxz
jge
out
and
mov
mov
outsl
test
sahf
test
mov
ficoms
aam
hlt
mov
cmp
adc
jp
in
mov
aaa
inc
sbb
dec
jp
nop
hlt
out
xlat
cld
lcall
mov
ret
jle
aam
dec
mov
push
test
and
sub
test
scas
sbb
mov
adc
loop
mov
arpl
pushf
and
int3
lods
aam
rcrl
inc
arpl
sub
clc
cmpsb
sub
and
xchg
mov
xchg
int3
jp
xor
jge
lock
mov
out
xchg
mov
movsl
loop
mov
lcall
inc
sub
es
dec
cltd
or
out
aad
in
hlt
or
xor
xchg
scas
add
fldenv
and
sbb
or
fisubrl
dec
repnz
or
push
aas
jecxz
mov
add
mov
stos
cmpsl
mov
mov
push
bound
movsb
es
mov
js
inc
or
fldcw
sbb
mov
and
xchg
sub
xchg
inc
dec
jne
push
lahf
inc
jns
hlt
out
outsl
js
dec
cmp
adc
dec
outsb
push
cmp
mov
inc
movsb
es
adc
lret
sbb
inc
xor
cld
roll
clc
pop
cltd
outsb
cmpsl
push
lret
and
lods
xorl
mov
push
pop
js
es
mov
cltd
dec
sbb
cli
int3
sbb
es
out
sbb
cltd
sahf
sbb
fwait
jge
lea
sti
shlb
mov
fs
or
test
push
cmp
lock
test
insb
xchg
mov
dec
js
movsb
bound
jo
out
adcl
fsts
jge
sub
sub
mov
xor
sbb
sub
fwait
lea
xor
clc
fwait
mov
push
cmp
das
mov
pop
sbb
jge
mov
xchg
ficoms
mov
and
push
and
cli
lods
add
inc
mov
icebp
push
mov
aam
insl
test
sahf
jmp
add
cli
or
xchg
sub
out
sbb
mov
js
inc
and
popl
jecxz
mov
ret
inc
enter
aam
pop
xlat
lds
movsl
sbb
arpl
mov
jo
dec
bound
jecxz
mov
push
pop
imul
ds
fwait
call
xlat
xchg
push
or
cmpsl
stos
xchg
xchg
test
push
sub
jecxz
dec
add
std
jnp
rclb
xchg
js
push
aam
lahf
jmp
enter
dec
jae
or
hlt
hlt
adc
aas
dec
jb
pusha
xor
xor
iret
jecxz
icebp
movsb
loopne
mov
jmp
lcall
jl
and
popa
or
arpl
adc
lret
jbe
xor
fisttps
jp
lods
pop
ret
cmpsb
pusha
stos
popa
sub
mov
loop
push
push
ja
cmp
push
add
scas
js
xor
inc
iret
mov
lods
mov
jl
mov
repz
fisubrl
cltd
xor
lock
in
jo
mov
clc
outsb
jge
jmp
fbstp
jbe
push
or
ljmp
sub
fisttps
popl
cltd
jp
and
ret
pop
adc
or
imull
push
js
xchg
std
push
stc
inc
pop
pop
imul
ret
mov
lock
sbb
dec
push
inc
jle
push
mov
jno
jmp
es
xor
xor
scas
dec
ja
repz
cwtl
jg
shrd
out
aaa
add
add
sbb
push
push
insb
xor
jge
dec
inc
lock
fidivrl
pop
pop
and
mov
clc
xor
mov
aad
in
dec
jl
js
cmc
repz
dec
adc
sub
push
jge
pop
adc
sbb
loopne
sub
pop
inc
mov
mov
mov
test
in
test
lods
inc
jae
cmp
ljmp
insb
sub
dec
mov
and
mov
and
fstps
test
mov
dec
jnp
movl
fnsave
fld
mov
xchg
out
sub
nop
out
ficompl
xor
xchg
pusha
lds
je
arpl
xchg
ljmpw
inc
pop
jb
jle
cmpsb
imul
call
adc
fneni(8087
fnstenv
cli
test
repz
rol
in
add
push
mov
rcrl
je
jg
jmp
xchg
ds
stos
mov
jo
fdivrs
push
dec
sub
lods
loop
xchg
mov
dec
mov
addr16
and
rcrb
stos
fbstp
imul
clc
sbb
repz
pop
stos
outsl
push
push
mov
fwait
add
sub
push
inc
and
testl
out
adc
inc
std
push
ss
cmp
out
shlb
stos
or
int3
push
aad
xlat
or
insb
xchg
sbb
stos
out
mov
lods
loope
adc
pop
pop
mov
mov
fcomip
or
sbb
mov
adc
repnz
out
scas
mov
ret
pushf
fcmovu
cmp
push
mov
xchg
xor
cmpsb
push
fisubs
lahf
push
test
ja
jnp
jbe
mov
mov
out
or
jnp
cltd
dec
inc
rcrl
sub
jo
or
jmp
sbb
pop
jo
pushf
mov
stos
test
and
pop
or
pushf
les
mov
jbe
mov
add
ss
aad
popf
jge
rclb
jo
cwtl
and
jge
je
lret
mov
in
jno
add
nop
cmp
ret
dec
push
xor
cmp
test
imul
bnd
mov
fcomps
jns
push
push
into
mov
sbb
mov
add
push
xor
fistl
fwait
dec
jnp
enter
xlat
xor
or
stc
add
cmp
popa
xchg
rclb
cmpsb
push
std
ret
xchg
xor
jle
sub
jmp
cmc
nop
jne
pop
repz
mov
inc
jmp
sub
js
call
cmp
movl
jb
data16
stos
mov
sub
ret
fwait
loop
in
or
shrl
push
adc
add
xchg
jmp
sub
jo
insl
cmp
adcl
pushf
pushf
mov
lea
rcl
sub
xchg
inc
clc
mov
push
ss
sub
out
xchg
cmp
and
push
lock
loop
test
outsb
daa
sub
xchg
test
lock
movsb
or
push
loope
repz
cmp
mov
call
lret
mov
loopne
aas
push
fdiv
lahf
loop
repz
lret
xchg
sbb
cmc
movsl
aaa
ds
adc
fisttps
lock
push
mov
mov
push
pop
sbb
pop
inc
sbb
aaa
hlt
popa
push
mov
nop
pop
addr16
xchg
add
sbb
mov
add
or
mov
dec
es
scas
and
ja
add
and
push
add
dec
jecxz
xchg
lret
and
jnp
xor
inc
push
fwait
jae
push
adc
or
jmp
movsl
stos
push
push
xchg
xchg
mov
pop
cmovnp
dec
mov
adc
lds
xor
vandps
ret
xchg
ljmp
leave
inc
stos
sbb
pusha
or
pop
xor
xlat
cmp
inc
mov
gs
data16
xchg
sub
mov
cli
hlt
bound
jno
push
test
sub
xor
push
in
xor
ret
sti
and
mov
cmc
imul
fwait
iret
push
lcall
inc
mov
out
push
loope
mov
add
adc
gs
out
push
fcmovb
mov
lret
repnz
mov
test
incb
push
decb
stos
and
push
dec
clc
jnp
popf
or
lret
sub
cmpsl
jmp
push
or
inc
filds
xchg
or
icebp
xrelease
out
enter
stos
pop
popa
hlt
pop
add
outsb
pop
adcb
pop
xchg
inc
inc
adc
pop
sbb
je
or
dec
push
insb
xor
adc
adc
outsl
out
sbb
scas
pop
xchg
or
sbb
out
jne
into
pop
aas
dec
loop
pusha
jl
xorl
jecxz
repz
or
mov
jne
mov
push
nop
push
dec
cmp
lods
fidivrl
jnp
into
mov
push
insl
add
inc
call
adc
adc
cmp
and
dec
sub
xchg
aas
test
jle
cmp
pop
mov
lods
and
call
cmpsb
jns
rolb
xchg
mov
dec
cmp
test
sub
jle
repz
addr16
mov
js
jno
mov
push
rolb
and
dec
jo
xchg
lds
inc
mov
or
aaa
sbb
push
dec
pop
in
idivb
dec
lea
push
pop
cmp
clc
push
sbb
shll
add
addr16
loope
mov
mov
mov
movsl
or
hlt
inc
in
scas
xchg
clc
sbbl
adc
push
adc
xor
push
sbbl
int3
insl
or
mov
movsl
das
inc
cmp
ss
popa
pop
pop
orl
leave
roll
or
and
and
mov
pop
pop
stos
ds
fsubrl
mov
fs
in
add
stos
rcr
add
xor
scas
mov
sbb
push
lret
sub
mov
cmp
sbb
dec
int3
cwtl
pop
push
mov
rol
push
arpl
aad
pop
sub
popf
xor
dec
inc
adc
xor
in
cltd
xor
pop
sub
in
shll
dec
fstl
xchg
loop
stos
xchg
aas
ret
gs
fildl
mov
mov
ret
addr16
pusha
mov
mov
dec
imul
and
aam
push
out
cs
dec
jae
dec
mov
mov
and
sub
mov
inc
mov
pop
mov
cmp
mov
inc
aaa
mov
dec
mov
jnp
fwait
sbb
or
dec
lock
insb
stos
jb
mov
imul
xchg
scas
ret
lock
add
clc
cltd
test
xchg
push
insb
insb
lods
mov
mov
and
sahf
mov
jb
scas
popf
jle
and
idivb
cmp
pop
mov
cmp
jns
or
addr16
mov
mov
decb
adc
cli
push
push
outsl
pusha
loopne
repz
push
pop
call
cmp
inc
call
pushf
loop
loope
pop
lret
sub
fwait
iret
sar
es
scas
shl
sbb
and
push
sbb
repnz
xchg
test
xchg
mov
or
call
jle
shr
mov
mov
dec
dec
ja
iret
lcall
or
add
xor
in
xchg
jmp
notl
and
pop
cmp
sub
repz
xchg
and
mov
dec
cmpsb
enterw
std
sbb
xchg
pop
inc
cmc
cmpsb
jecxz
popf
mov
xchg
mov
fldenv
pusha
sbb
aam
lcall
jno
daa
decl
pop
lahf
mov
mov
es
lret
dec
mov
sub
mov
addr16
icebp
rcrl
stos
sub
daa
ds
adc
fwait
nop
mov
out
add
add
pop
sub
call
into
and
cs
or
in
adc
adc
fwait
test
inc
pop
cmp
out
rorl
adc
adc
mov
fwait
jecxz
xlat
nop
sahf
js
ja
shrb
push
fdivs
insb
std
add
xchg
leave
push
mov
mov
dec
and
pop
loop
mov
jecxz
sbb
leave
testb
fildl
push
movsl
sub
push
cli
mov
push
dec
fmul
je
aas
imul
xchg
movsl
inc
bsf
cmp
stos
insb
pop
cmp
jne
fidivl
cs
lock
adc
cmp
in
int
es
adc
and
repnz
insb
aad
aas
mov
adc
rcrl
int
out
ret
movsb
sahf
scas
xor
sub
jbe
and
add
sbb
dec
cmp
sub
mov
dec
xor
xchg
negl
dec
add
inc
aam
mov
jle
cmc
fstl
jp
xor
cmpsb
xor
movsb
xchg
popa
out
sti
sbb
addr16
adcb
push
push
int
and
das
cmpsb
mov
xchg
mov
lret
and
lods
cwtl
mov
lahf
loope
cmp
bound
push
sub
clc
mov
xchg
repz
push
sub
dec
sbb
je
add
and
int3
or
cmp
jecxz
insb
stc
mov
mov
stos
mov
imul
aad
cmp
mov
jg
andb
orb
jbe
add
shll
jl
inc
xor
inc
mov
xchg
or
stos
iret
push
lea
sti
push
in
cmp
mov
xchg
add
push
mov
and
aas
ljmp
movsb
iret
fidivs
pop
mov
mov
in
cli
sub
bound
jl
mov
mov
scas
jg
push
out
das
mov
jmp
addr16
int3
fwait
loopne
lock
pop
jne
iret
adc
out
cltd
xchg
fucomi
mov
call
or
pop
lahf
inc
and
sub
repnz
xchg
or
jno
jg
xor
neg
push
adc
push
int
push
or
dec
fldcw
lds
scas
mov
sti
sub
and
popl
dec
sbb
nop
leave
int
lret
push
insl
pop
push
mov
xchg
xor
test
fdivl
jle
mov
in
xchg
out
lods
cmp
xchg
adc
xlat
fadds
inc
jl
pushf
pop
sahf
push
and
xchg
mov
pop
mov
pushf
cmpsb
lods
ss
sbb
aas
cmp
pop
adc
jmp
dec
scas
gs
pop
jns
jle
pop
cmp
popa
push
insb
sub
clc
movsl
fmuls
jno
fstps
sti
push
sbb
adc
cmp
xchg
jns
and
pop
jb
sbb
and
jne
inc
das
testl
mov
leave
outsb
dec
lods
ds
test
mov
flds
out
mov
stos
repnz
add
mov
es
out
and
fisubrs
dec
xchg
popf
lahf
ret
outsl
push
loopne
outsb
loop
enter
cli
sbb
sbb
push
pop
jecxz
add
inc
addr16
xor
mov
add
outsb
shll
call
jb
dec
xchg
leave
fnsave
mov
mov
dec
es
push
cmc
fistpll
rcrl
mov
push
push
fwait
mov
in
or
xlat
gs
lret
xlat
pop
jbe
push
inc
push
rorl
or
out
aad
clc
xor
pusha
leave
bnd
sub
clc
or
and
add
test
mov
push
push
mov
int3
mov
jmp
aad
pop
push
movsb
sub
sub
add
ja
ljmp
popf
push
or
mov
fcoms
iret
sbb
jge
cltd
push
imul
pop
inc
shll
xor
mov
hlt
cmp
faddl
movsl
dec
xchg
out
pop
imul
lock
sub
push
mov
outsb
mov
aam
pop
cmpsb
das
jnp
inc
dec
fsts
movsb
xor
sahf
data16
mov
aad
es
loopne
into
mov
lds
out
and
pop
mov
mov
sahf
test
mov
mov
iret
pop
gs
int
cld
fdivrl
jmp
xlat
lods
jecxz
hlt
pop
or
inc
ljmp
inc
mov
std
push
scas
and
mov
add
lret
lds
fstps
shll
add
aad
les
dec
dec
pop
cwtl
ret
outsl
popa
pop
les
push
cltd
arpl
or
call
or
cmpb
test
xchg
push
jne
out
adc
mov
imul
insl
sub
ds
xor
aaa
sti
mov
lods
inc
scas
jp
and
mov
in
dec
imul
inc
cmp
lahf
pop
and
int
imul
sub
dec
popa
dec
out
mov
or
icebp
xchg
iret
mov
cltd
pop
ret
ret
xchg
lcall
xchg
cmp
or
xor
mov
lahf
push
in
mov
setb
test
popa
pop
inc
lcall
sbb
pop
jne
xchg
sti
sub
xchg
xchg
cmp
enter
adc
adc
xchg
ret
pusha
fists
idivl
pop
or
cwtl
fistpl
adc
test
cmp
ljmp
push
jp
popf
xchg
cmp
mov
jb
notl
int
fwait
pusha
xlat
aas
xor
mov
pop
addr16
in
in
add
jae
sub
fiaddl
enter
add
dec
cmp
ljmp
jne
shr
add
pop
inc
jbe
aam
sub
sub
xchg
cli
push
aaa
pop
and
dec
sbb
dec
in
xchg
mov
xchg
xchg
leave
fimull
arpl
sbb
cli
xchg
call
aad
jb
xchg
fsub
push
cwtl
cmpsb
pop
pop
out
decl
fldcw
dec
push
mov
xor
into
xchg
sub
dec
pop
in
pop
jno
mov
popa
mov
lea
movsl
pop
cmp
incb
jb
sbb
push
mov
subl
shlb
outsl
sarb
mov
jb
ljmp
fs
add
movsb
pop
vmaxsd
dec
loopne
stos
lcall
cmc
jle
insb
or
xchg
psubusb
mov
jb
mov
test
iret
loopne
jmp
out
repnz
xchg
jno
enter
stc
jae
leave
stos
inc
inc
test
push
adc
push
pop
shlb
lret
ret
out
and
mul
in
pop
jl
cmp
lret
lea
shr
ja
idiv
adcl
inc
push
mov
inc
cltd
jecxz
xchg
cltd
arpl
dec
add
pushf
push
xchg
in
add
add
dec
pop
mov
rol
sub
fistps
loopne
xor
jbe
cld
mov
pop
in
daa
nop
mov
rorl
add
xorb
sahf
outsl
jae
push
test
fcoms
sbb
add
popa
testb
sarb
scas
mov
test
fwait
nop
ljmp
rclb
add
push
and
xor
pusha
add
nop
aad
lds
xchg
loopne
lock
adc
inc
xor
pusha
add
nop
aad
lds
xchg
loope
lock
adc
inc
xor
pusha
add
nop
aad
lds
pusha
add
mov
inc
enter
lahf
std
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
mov
jge
arpl
icebp
inc
dec
sbb
dec
in
pop
jp
mov
mov
pop
ljmp
cld
sub
pop
jp
mov
lcall
or
cli
mov
cmc
pop
call
or
push
stc
popa
rcrl
ljmp
cli
jmp
add
paddsw
loope
and
popf
testb
shl
shl
jle
in
aas
jno
add
xchg
sub
mov
push
ret
push
sbb
jmp
lods
xchg
mov
push
pop
test
adc
iret
inc
mov
subb
mov
cmc
lods
in
scas
jae
add
movsb
fsubl
jnp
and
cmp
inc
in
add
popf
cmc
cs
popf
aad
ds
push
test
cmpxchg
sbb
repz
or
adc
sbb
das
jo
mov
outsl
data16
sbb
lret
pop
ljmp
jmp
mov
pop
out
push
adc
fldt
jne
adc
dec
scas
mov
dec
call
aas
mov
test
jo
dec
ljmp
insb
mov
test
sbb
popf
jns
pop
test
pop
mov
mov
jl
pop
fildll
in
ficompl
dec
cli
mov
sub
pop
jp
mov
mov
pop
ljmp
popf
sub
pop
jp
mov
js
mov
faddp
and
and
mov
push
ds
adc
jecxz
stos
mov
or
adc
mov
leave
inc
cli
cwtl
cmp
add
adc
in
and
pop
pop
popa
fldenv
mov
cmp
pop
dec
cmpsb
aad
lods
sub
cld
sbbl
mov
ret
bound
jo
mov
fcomps
sahf
mov
adc
bound
scas
addr16
mov
ror
sub
mov
fcoms
xor
sti
xor
jno
mov
xchg
in
adc
call
ljmp
or
cmc
rcrb
sub
and
adc
scas
add
in
mov
fstp
xchg
push
call
inc
adc
cmp
stc
sub
in
out
xchg
outsb
aaa
cmp
mov
test
pushf
mov
cs
mov
daa
cltd
xchg
xor
sbb
je
adc
test
hlt
dec
jmp
mov
out
and
inc
lods
mov
shrb
jnp
cmpsl
pop
mov
or
push
mov
or
ljmp
inc
mov
and
ss
popf
lea
sbb
cmp
clc
imul
js
dec
inc
mov
sub
lods
or
push
and
pop
xchg
jne
mov
fldenv
orb
loop
pusha
jns
mov
in
sbb
repz
xor
sub
mov
jae
inc
nop
or
std
int3
movsl
and
in
jbe
fwait
pop
sbb
sub
inc
je
popa
add
pop
in
insl
fsubr
or
xchg
jb
dec
scas
sahf
insb
jb
loop
test
imul
jb
rcr
inc
xor
iret
sarb
scas
gs
out
inc
arpl
imul
andb
imul
dec
xchg
mov
cmp
mov
sub
push
cld
stc
adc
jb
jbe
mov
fs
insb
aaa
dec
sbb
pop
push
out
or
aaa
xor
mov
or
pop
mov
pop
dec
pushf
iret
sub
fsubrp
popf
outsl
inc
add
cli
adc
fadds
jb
xor
adc
jp
xor
adc
cmpb
aam
fisubs
or
adc
mov
addl
cmpsb
aad
cmp
aas
mov
pushf
inc
ret
adc
leave
lds
fidivl
jns
mov
jb
sarl
insl
mov
test
cmp
push
mov
es
popf
cmp
imul
or
test
inc
jl
pop
test
insb
test
fistps
and
test
inc
or
push
inc
pusha
dec
dec
std
aad
xchg
dec
pop
adc
nop
stos
sbb
adc
stos
pop
pop
repz
gs
dec
jg
cmp
testl
ds
xchg
push
sbb
push
sbb
sub
loop
mull
into
pop
jno
movsb
ret
popl
in
fucomp
sub
mov
mov
sub
out
adc
clc
nop
inc
testb
dec
movsb
jg
xchg
flds
sarb
pop
mov
out
sub
adc
outsb
shlb
push
and
mov
sub
dec
int
dec
xchg
lods
subb
push
in
xor
cld
mov
lcall
mov
mov
pop
not
aam
push
mov
xchg
pop
mov
jecxz
jmp
push
push
in
leave
ja
mov
dec
inc
inc
fwait
jp
ljmp
pop
xor
daa
adc
push
push
add
movsl
mov
pusha
xchg
insl
int3
sbb
inc
adc
mov
ds
stos
in
xchg
shlb
xchg
sbb
in
xor
ret
call
shll
jne
jno
and
cmp
out
ljmp
popf
fildl
adc
fsubs
inc
inc
movsl
mov
lods
rcrl
int3
lods
xchg
mov
push
jns
test
das
add
and
enter
pop
pop
pop
pop
jle
push
adc
leave
jp
ljmp
jo
push
pop
dec
imul
mov
enter
dec
roll
call
sar
subl
xor
mov
xor
push
enter
push
mov
and
test
dec
insl
adc
ror
ret
adcb
neg
push
mov
push
jp
flds
test
cmp
lods
mov
fcompl
sar
mov
lea
jle
xchg
pop
and
popf
testb
lcall
push
xchg
fwait
rcrb
icebp
xchg
push
jae
aam
jns
rorl
repz
stos
sbb
sub
loope
inc
daa
imul
lods
mov
mov
xlat
sbb
fimull
mov
mov
inc
push
aad
sbb
pop
outsl
rcrb
inc
pop
push
out
sub
pop
pop
inc
push
jg
xor
loopne
mov
and
aam
pop
lea
xchg
or
dec
sbbl
pop
mov
pop
ljmp
jae
xchg
loopne
inc
sub
push
jecxz
xchg
xchg
sarb
icebp
outsl
xchg
jo
ss
cmp
cld
outsl
xor
sub
push
adc
pop
mov
mov
xchg
lret
pop
and
into
nop
movsb
test
jmp
mov
dec
dec
stos
or
mov
call
dec
mov
imul
js
ja
lahf
pusha
mov
and
shlb
adc
nop
push
bound
xchg
mov
les
push
pop
jne
test
mov
loopne
in
cmp
dec
pop
insl
mov
loope
stos
push
sbb
mov
or
mov
out
add
sbb
adc
add
lcall
and
aam
sub
add
mov
xchg
imul
push
inc
aad
fnstcw
int
lods
aaa
mov
jb
mov
sub
shrl
push
pop
inc
std
aas
iret
mov
jecxz
fnstenv
dec
movsb
mov
das
cmp
mov
xor
rep
pusha
gs
test
inc
xor
jo
call
xchg
cmpxchg
imul
dec
cmpsb
stc
jg
sahf
push
loop
cmp
mov
fucom
or
stos
sbb
mov
pushl
jmp
scas
stos
add
and
xchg
mov
xor
mov
imul
mov
jbe
je
vmovd
test
fisubrl
push
ret
data16
xor
mov
cmpsl
lods
fsubl
fs
jecxz
aaa
sar
xor
imul
imul
es
or
sbb
and
icebp
rolb
nop
ror
dec
adc
fistpl
jnp
inc
in
pop
sub
xor
in
and
sahf
lods
mov
ja
push
in
mov
inc
ret
ret
jmp
fnstenv
in
xchg
jnp
in
sbb
jecxz
in
xchg
dec
ss
xchg
test
sbb
aam
jle
push
dec
sub
xor
scas
cli
mov
adc
mov
mov
aaa
jb
push
rorl
sub
aam
mov
adc
pop
shll
dec
je
aam
insb
repnz
lcall
pop
outsl
adc
and
sub
popa
mov
cld
inc
adc
fcomps
arpl
outsl
xlat
mov
lahf
sub
mov
outsl
jecxz
mov
xor
pop
sbb
cmp
dec
ds
test
add
sbb
cltd
or
mov
test
loop
sbb
stc
or
sbb
pop
nop
jle
or
inc
xchg
mov
mov
cmp
jp
std
ficoml
jecxz
aam
xchg
inc
mov
mov
mov
in
mov
in
jecxz
mov
int
movsb
aas
lret
sahf
sub
inc
into
dec
out
dec
xchg
out
lea
std
add
in
sarb
popw
mov
push
xchg
sub
inc
xchg
in
pop
mull
rclb
mov
enter
rol
sbb
rclb
xor
dec
pusha
loope
mov
call
cmpsb
in
push
pushf
push
stos
fisubs
ds
mov
add
mov
shl
cmp
ret
jno
decb
gs
out
mov
dec
and
push
mov
fucomp
xor
mov
mov
cmp
xchg
fs
imull
sub
add
cmp
mov
rcll
push
dec
aam
fdiv
xor
scas
dec
clc
xor
push
in
stos
mov
xor
not
lret
inc
arpl
inc
mov
inc
ret
out
ljmp
imul
outsl
jne
cmp
loope
mov
nop
into
icebp
jnp
scas
jne
add
loope
pop
dec
cli
mov
jno
fs
jp
mov
addr16
mov
shll
gs
jnp
in
push
cmp
sbb
push
lret
fs
or
fnstsw
fdecstp
xor
leave
xchg
test
fwait
scas
or
test
jmp
jae
fwait
int3
and
push
xor
xchg
adc
movsl
jge
cld
lret
push
jmp
jp
ja
sbb
add
fsubrs
rclb
adc
and
xchg
ss
lock
inc
push
and
mov
inc
sub
dec
out
add
jecxz
inc
xor
cmp
rclb
data16
lahf
popf
adc
pop
pop
mov
pop
fs
pop
fisttpl
int3
jge
mov
icebp
call
mov
push
in
pushf
push
loop
sub
cmpb
lock
stos
xor
mov
faddl
xor
add
ret
jle
xchg
iret
enter
rolb
pop
mov
cmpsl
scas
mov
arpl
pushf
ror
adc
test
sbb
fwait
fs
inc
push
es
add
mov
in
push
add
inc
cltd
push
gs
jp
sbb
mov
add
pandn
cmp
dec
outsb
pop
frstor
push
mov
test
dec
repnz
test
push
dec
xorb
fildll
pop
push
ss
adc
in
iret
clc
inc
lcall
jbe
and
inc
into
pop
flds
sbb
lret
aad
pop
dec
or
imul
fdivr
clc
cmp
stos
mov
mov
xorl
outsb
mov
mov
sub
mov
movsl
pusha
or
xchg
sub
push
cld
push
leave
add
out
leave
arpl
int
test
jne
sub
mov
aaa
pop
movsb
test
lock
lret
sbb
cmc
inc
pop
ficompl
sub
mov
outsl
or
push
idivl
xor
cmp
pop
stos
gs
or
gs
in
aad
popf
adc
push
and
jno
mov
add
repz
test
mov
aam
fstl
pop
mov
xor
push
ja
cmpsl
fst
cmc
adc
scas
test
outsl
sbb
outsl
or
cwtl
add
dec
fcomps
adc
lcall
js
lea
scas
adc
mov
shl
outsb
mov
inc
jno
adc
test
imulb
and
sbb
or
clc
jns
je
imul
push
mov
jae
cmp
test
cmp
ss
xchg
shlb
fs
cwtl
mov
lahf
hlt
fdivr
mov
aaa
inc
dec
mov
sbb
xchg
fwait
jbe
test
cmp
mov
pop
mov
sahf
cmpsl
mov
jns
lret
xchg
cwtl
jns
xor
outsl
popa
mov
int3
inc
testl
push
push
xchg
or
ljmp
xor
in
cld
int3
mov
fistpll
cld
jae
imul
leave
popf
jae
adc
inc
xchg
mov
or
xor
adc
fsubs
inc
mov
movsl
lahf
fstpl
inc
inc
sub
adc
lret
xor
repnz
pop
cmp
fdivr
and
out
cs
data16
arpl
mov
pop
add
mov
mov
jp
dec
cmp
xchg
push
or
jo
pop
mov
push
stc
push
into
cmp
shrb
or
xor
daa
gs
test
fisubrl
add
cli
fimull
int3
jle
push
xor
mov
lea
jae
std
xor
pop
outsl
mov
or
lods
loop
xor
add
xchg
ret
jp
push
push
push
push
loope
insb
roll
addr16
mov
shl
rclb
ret
lahf
loop
movsl
cld
icebp
pop
cmp
pop
rorl
dec
rorb
and
lahf
test
and
repz
cld
and
inc
stos
pop
inc
jnp
xchg
shlb
imul
lcall
das
push
cli
fistpl
cwtl
pop
in
int3
inc
xchg
out
mov
add
push
lods
and
mov
jmp
popa
leave
mov
shl
es
pop
mov
lret
mov
cmp
sbb
cld
pushf
insl
test
aas
mov
sub
loop
mov
fildl
fistpll
movsl
jg
xchg
cmp
shrb
test
add
pop
jecxz
push
ja,pt
xorb
adc
pop
jbe
cmp
fwait
mov
mull
sarb
clc
and
adc
xchg
lods
jno
mov
pop
mov
push
mov
xor
jne
sbb
mov
pop
es
or
scas
stos
xchg
and
movsl
aam
push
adc
pop
cmc
lret
mov
pop
inc
xchg
ds
rorb
xchg
and
inc
add
lock
je
rcl
shlb
sub
add
pop
cmpsb
aaa
pusha
inc
mov
lahf
cmp
pop
stos
bound
mov
icebp
mov
stos
xor
cmp
xor
std
pusha
xchg
ss
popf
in
mov
adc
add
out
les
inc
add
push
sub
mov
imul
jl
jo
add
pop
out
sub
mov
adc
enter
repz
push
sbb
sbb
xor
pop
inc
mov
push
mov
xchg
aam
mov
inc
sar
add
mov
mov
sub
xchg
lret
ljmp
and
inc
sub
sbb
push
ds
sub
es
test
jmp
inc
push
cmpsb
jge
xor
mov
loopne
inc
stos
push
xchg
lahf
enter
lahf
cs
cld
inc
std
rolb
cltd
arpl
sub
push
sti
inc
mov
das
std
imul
rcrb
shrl
sbb
add
or
dec
loopne
rsm
insl
sbb
cmpsb
daa
mov
out
pinsrw
mov
push
sbb
and
enter
aam
shrb
xchg
js
inc
mov
repnz
jo
subb
scas
pop
jnp
mov
mov
mov
xor
dec
pop
push
out
int3
xchg
pop
test
cmp
shl
ret
dec
fs
sti
jbe
icebp
arpl
push
or
pop
neg
out
push
in
in
dec
and
into
lahf
out
lahf
repnz
lock
add
sti
push
rcrl
sahf
sub
imul
outsl
pop
sbb
sbb
pop
mov
or
icebp
insb
rcrl
sub
inc
adc
xchg
adc
test
and
adc
jae
ret
shrb
addb
push
cmp
test
les
cmpl
mov
fdivrp
pushf
mov
movsb
mov
out
mov
jl
insl
adc
sbb
push
push
lcall
cwtl
pop
les
loopne
sbb
add
ss
adc
lcall
nop
mov
cmpsb
pusha
xor
fldl
fwait
notb
mov
sbb
ss
mul
inc
mov
fsubp
xor
cmp
and
sbb
dec
out
fistps
add
jae
jae
aad
daa
cmp
lods
inc
repz
mov
out
sub
and
insb
stos
sbb
adc
xor
jg
icebp
dec
in
scas
sbb
pop
roll
rcrl
or
lcall
dec
mov
jb
insb
mov
shll
cmp
les
mov
js
dec
push
xor
pusha
inc
inc
pop
sar
out
js
rcr
ja
mov
adc
jl
es
inc
xchg
adcl
ljmp
xchg
inc
rorb
xchg
ds
and
add
shrb
mov
lock
push
sbb
sub
or
jp
filds
cmp
lds
push
and
xlat
push
mov
mov
fdivrs
add
jnp
test
arpl
lcall
hlt
jp
mov
xor
in
mov
cwtl
cwtl
test
xor
jo
add
mov
xor
xchg
pop
ficoml
push
aas
mov
sbb
push
pop
repz
loopne
sub
mov
test
cmpsl
sub
xchg
mov
dec
inc
or
lahf
fsubrl
push
cmp
mov
fisubl
rcll
sub
jg
mov
pop
std
mov
xchg
std
inc
lcall
lahf
and
enter
xchg
add
scas
dec
clc
or
stos
jg
dec
mov
cmp
sbb
mov
test
sbb
mull
pop
mov
lds
popa
outsl
sbb
mov
outsl
mov
push
test
lea
andl
jle
jnp
jbe
shl
roll
xchg
fwait
or
push
or
hlt
jmp
cmp
mov
cmc
sub
mov
into
stos
mov
xor
xor
pop
jl
jo
aam
mov
sub
mov
dec
fwait
imul
test
push
dec
aad
aaa
insl
jmp
jmp
dec
inc
fcomip
inc
aad
fstpl
cmpsb
push
add
add
dec
int3
call
js
movsb
or
adc
mov
movsb
sub
fwait
sbb
daa
mov
shl
sub
fldcw
jae
push
jno
sbb
cs
test
dec
mov
jns
int3
jae
int3
insb
jmp
in
jo
pop
push
adc
pop
fildl
or
fbstp
push
cmp
mov
mov
out
rcll
xor
pop
adc
scas
sbb
xchg
ds
addr16
dec
xor
out
lock
and
dec
dec
sbb
cmc
lcall
scas
push
mov
fsubl
mov
out
test
push
ret
cmpsl
pop
mov
int
stos
mov
loop
repz
push
ret
pop
int
aas
jnp
xchg
daa
sub
dec
lods
mov
xor
push
repz
cmp
xchg
sub
les
push
insl
cmp
xor
dec
jne
jnp
pushf
adc
xchg
dec
and
sub
popf
das
or
mov
orb
loop
stos
jo
out
sub
pop
lds
mov
cmpsl
inc
cmpsb
xor
fldl2t
or
stos
mov
cs
iret
jp
packsswb
inc
mov
pop
push
nop
pusha
outsl
sbb
jb
xchg
or
xchg
aam
jecxz
lock
mov
shll
sub
jo
push
push
ja
and
call
mov
sub
in
cmp
cmc
pop
pop
dec
push
push
inc
xchg
sub
call
mov
push
and
mov
nop
xchg
loope
cmp
pop
jmp
mov
out
aaa
out
fldcw
loop
insb
orl
nop
and
push
out
jnp
pop
or
decl
fwait
inc
lea
jne
out
loopne
xchg
jnp
sub
pop
push
pop
add
in
ds
mov
insb
xlat
mov
push
icebp
pushf
mov
shrl
lea
xor
inc
pushf
out
pusha
add
cs
fdivs
push
outsb
outsb
or
push
add
cmc
ljmp
add
loop
test
adc
aam
jae
inc
xlat
jbe
cmp
cmp
addr16
pop
bound
mov
leave
scas
pop
xor
mov
jno
sbb
std
jp
in
mov
add
int
and
jns
jp
jns
dec
jb
incl
xor
jg
add
xchg
lods
push
adc
mov
dec
sub
ja
mov
les
mov
frstor
repnz
jge
mov
orl
mov
cmp
pop
lcall
int3
sub
test
cld
jbe
ds
enter
fisubl
bound
inc
xor
jmp
jmp
mov
jne
mov
in
push
nop
sub
fucom
cmp
imul
push
rcrl
cmp
sbb
dec
lea
jge
insl
ficompl
dec
cli
mov
sub
pop
jp
mov
mov
pop
ljmp
popf
sub
pop
jp
mov
mov
pop
ljmp
insl
sub
pop
jp
mov
inc
stos
sub
ficompl
int
mov
sub
movsl
and
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
fcmovnb
xchg
shll
andb
inc
call
pop
and
jno
add
adc
jno
xchg
rcll
roll
aam
inc
adc
pusha
repz
fs
adc
jno
cwtl
rorl
fadds
out
add
jb
add
pop
outsb
inc
sbb
adc
icebp
lea
xchg
leave
cmp
mov
ret
call
mov
cmc
add
mov
sbb
sub
cmp
push
out
scas
ficomps
push
dec
lea
xchg
adc
xor
int3
rcrb
jp
jb
inc
out
push
jno
into
mov
lods
mov
push
dec
add
in
les
xor
cmpsl
insl
hlt
les
add
and
popa
add
clc
push
or
jle
lock
or
xor
push
push
add
dec
mov
popa
cwtl
xchg
out
pop
cmp
jl
pop
sbb
sub
cmp
inc
out
push
ficoms
mov
and
inc
rcll
roll
call
push
cmp
jno
add
popa
and
repnz
les
mov
lds
adc
xor
sub
push
adc
subl
mov
lahf
add
and
and
and
call
test
xchg
loope
icebp
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
add
fnstenv
out
je
ds
cld
inc
out
enter
inc
popf
mov
mov
pusha
mov
fdivrl
fsubl
push
in
cmp
push
sar
pop
loopne
repz
xchg
sub
xor
jge
arpl
outsl
cmpsb
int
popa
sbb
push
adc
mov
leave
or
xchg
shrb
in
and
call
mov
jmp
out
stc
lret
ret
push
adc
js
lds
xchg
pusha
repnz
clc
hlt
add
ror
cmp
pop
mov
sub
adc
fisubl
xor
jne
xor
push
sbb
paddsb
mov
fs
add
push
add
cmpsl
cs
int3
cmp
sbb
je
outsl
push
je
xchg
mov
in
adc
insb
mov
mov
call
out
dec
mov
ljmp
push
int3
add
insl
lret
pop
cli
mov
test
xchg
lret
jae
and
inc
push
and
arpl
and
cltd
jbe
icebp
cmpsl
outsb
pop
mov
inc
or
sahf
cmp
lret
mov
xor
xor
jmp
xor
fmuls
pop
sti
mov
test
jnp
xor
shl
adc
cmp
stos
xlat
xor
sbb
inc
insl
in
fistl
or
inc
incb
dec
roll
out
sbb
sub
push
lret
outsb
jbe
cwtl
or
and
add
push
jmp
rcl
je
inc
sbb
ret
add
imul
call
sbb
or
or
xor
jle
mov
xchg
or
ror
dec
pop
int
push
sbb
aad
jmp
negl
ret
xchg
and
insl
arpl
cmpl
movsb
icebp
aaa
sbb
inc
mov
int
mov
adc
fnstcw
icebp
lea
in
lds
popf
dec
cmp
and
fwait
jo
adc
into
cmc
aaa
mov
js
int3
gs
push
ret
ja
lea
add
nop
hlt
inc
pop
enter
mov
sub
push
adc
out
mov
mov
or
lea
out
mov
xor
mov
push
sahf
ret
test
add
mov
insb
arpl
mov
pop
jb
mov
in
mov
or
sub
xchg
dec
push
cmpsb
lods
xchg
test
push
pop
xor
orb
or
insl
lock
add
and
push
pop
push
es
xor
cs
push
push
repnz
hlt
mov
cmp
test
jecxz
orb
pushf
lds
cli
mov
cld
push
mov
jae
mov
and
push
imul
xor
test
ja
cmp
and
leave
lds
mov
mov
cmp
or
or
xchg
or
pop
mov
or
ja
andb
mov
adc
jo
push
mov
pop
arpl
sbb
cmp
jmp
ds
das
fsts
mov
mov
shrl
ret
jo
gs
in
mov
je
adc
adc
and
jne
je
and
and
jle
xchg
pop
pop
scas
testb
mov
insl
int3
incb
push
outsl
cmpsl
mov
out
push
xor
stos
pop
add
xchg
sbb
and
mov
pop
mov
bound
mov
psrld
ret
fucom
push
adc
mov
and
rcll
pushf
data16
mov
add
and
xlat
xchg
jae
and
clc
addb
and
pop
mov
rcll
mov
and
stos
jmp
sbbb
ja
mov
add
pop
fisttpll
sub
dec
push
lock
push
or
sbb
dec
int
sbb
rcrb
call
dec
sbb
lods
or
lahf
push
xor
in
fisttpl
out
sub
mov
lock
fs
sub
jo
adc
sub
xor
dec
sbb
repnz
in
dec
cmp
data16
mov
js
mov
mov
fstps
popa
lds
sbb
cmp
push
clc
inc
iret
fildl
xlat
arpl
xchg
fucomp
stos
rcrl
cmp
push
cltd
push
sahf
pusha
or
mov
xchg
push
lea
into
test
adc
aad
lret
rcl
cmp
jg
mov
scas
lahf
mov
jecxz
push
and
gs
notb
or
push
nop
mov
data16
fbld
imul
pop
fcoms
sahf
jb
mov
cmp
or
cmp
mov
cmc
inc
pop
test
pusha
sbb
insl
pop
hlt
ljmp
sbb
sar
xchg
adc
push
inc
cmp
sub
sti
sbb
push
jno
adc
push
inc
mov
sbb
xchg
icebp
rcrl
dec
ljmp
sti
leave
out
lret
push
leave
add
xchg
out
sub
loop
lods
pop
push
testb
mov
sub
sub
xor
cmpsb
inc
inc
scas
ficoms
xchg
sahf
nop
insb
jns
lock
pop
xor
adc
les
stc
jp
inc
or
or
jns
imul
out
in
push
mov
or
pop
cmp
jg
sbb
inc
notb
outsl
adc
pusha
ss
pop
cmpsl
and
add
rcll
hlt
adc
fldcw
dec
mov
lock
arpl
shll
dec
xchg
lcall
push
leave
cmp
test
aaa
mov
inc
adc
push
in
add
leave
xor
pop
sub
aad
lods
cmc
movntps
push
and
std
fdivr
fistpll
inc
lret
cmc
in
jnp
pop
mov
sbb
jge
stos
addr16
jp
inc
shll
notl
ret
mov
imul
ss
pop
dec
adc
add
in
push
xchg
dec
sbb
cmp
jne
test
or
push
inc
add
ds
sbb
loop
cmpl
lret
mov
xchg
std
sti
adc
cld
xchg
nop
popa
mov
mov
aad
cmp
stos
push
dec
loop,pt
mov
lret
aad
inc
cmp
cmp
stos
shrl
daa
movsb
sub
dec
cwtl
sub
add
add
mov
sbb
out
xchg
pop
scas
dec
jae
xchg
jno
mov
daa
stos
lahf
iret
mov
test
lods
xorl
lods
out
arpl
jp
cmc
in
std
scas
lahf
sub
sub
sti
sub
stos
insl
mov
lods
mov
and
xor
push
inc
add
push
insb
shlb
or
jmp
pop
aam
cld
xchg
sub
inc
or
push
adc
jl,pt
clc
pop
mov
jl
cmpsb
fadd
in
cmp
adc
js
leave
insb
mov
pushl
mov
ret
dec
out
sub
inc
mov
pop
testb
xchg
cmpsl
xchg
mov
in
stos
int
arpl
lods
hlt
insl
sub
insb
and
movsb
adc
mov
fiaddl
jp
lods
je
or
gs
xchg
xlat
inc
imull
clc
movsb
stos
cmc
cwtl
and
lret
pop
fisubrl
jge
decb
pop
in
adc
or
xchg
repnz
xchg
test
ds
jmp
dec
rcrb
pop
sub
pop
out
dec
mov
test
cmpsl
jecxz
jle
fldenv
std
or
cmpb
or
addr16
mov
or
aaa
enter
nop
adcl
aad
enter
imul
mov
or
or
loopne
pop
inc
fiaddl
or
int
test
jnp
js
inc
js
adc
add
incl
movsl
sbb
mov
or
out
loop
popa
loop
movsb
inc
mov
dec
rorl
dec
inc
jle
push
pop
push
cli
mov
movb
ret
jo
aas
xor
xchg
loop
in
bound
divb
ds
pop
mov
dec
cmp
push
inc
adc
out
add
cmp
and
push
mov
inc
ss
push
je
stos
xor
lods
leave
inc
dec
test
cmpsl
hlt
aaa
insb
jne
push
xchg
adc
stc
cmc
ja
mov
push
sub
push
sub
out
rorb
push
pop
ret
pop
sbb
lds
pop
or
adc
sbb
inc
inc
push
xchg
movsb
cmp
cs
cld
arpl
push
cmpsb
sbb
jne
adc
pushf
dec
pop
mov
and
jge
adc
mov
dec
mov
push
into
mov
mov
jns
es
or
pop
std
ss
push
mov
mov
stos
mov
roll
filds
stc
loope
mov
sub
pop
clc
sub
fsubrs
jne
adc
das
push
sti
xlat
inc
ja
maskmovq
divl
sbb
scas
lods
into
daa
mov
cld
or
mov
jae
imul
ja
dec
dec
in
push
movsb
jnp
sbb
fcmovnu
insl
mov
vpsubw
and
mov
ss
sbb
lea
or
pop
cmpsb
pop
test
xchg
dec
add
sbb
ret
xor
cs
scas
andl
jecxz
dec
cmp
jmp
mov
in
mov
divps
loope
imul
mov
mov
lock
in
cmp
adc
frstor
enter
sbb
xchg
xor
into
loop
add
psubq
dec
ss
test
or
adc
roll
mov
mov
bt
cld
out
cmp
int3
add
testb
add
insb
mov
lret
in
inc
and
je
test
mov
pop
daa
mov
and
pop
pushf
jecxz
pushf
jnp
call
or
add
les
jle
test
xor
fsts
sahf
cwtl
push
jl
imul
sub
notb
mov
mov
lods
push
mov
ret
frstor
adc
xor
mov
pop
add
and
out
or
sub
jmp
in
mov
enter
aaa
xor
rcrl
jp
jge
js
ljmp
ss
push
mov
fpatan
fidivl
dec
lahf
lods
and
sub
outsb
push
neg
out
or
mov
shr
sub
cmp
icebp
adc
push
rcl
cld
inc
pushf
out
subb
cmp
inc
in
cld
inc
clc
ljmp
int
negl
enter
lea
test
int3
out
repz
daa
call
and
cmc
mov
into
inc
repnz
cmp
push
cmpsl
cmp
push
adc
aaa
popa
fisubs
icebp
stc
adc
sub
jns
pop
subb
pop
push
inc
add
mov
addr16
add
sbb
xchg
push
les
pop
mov
cld
outsl
leave
test
dec
inc
lods
dec
subb
mov
mov
stos
cmpsl
aaa
test
sbb
imul
pop
and
imul
call
gs
add
push
les
divl
jne
cli
icebp
cmpb
jecxz
test
adc
repz
ror
push
inc
inc
jecxz
and
jns
push
jge
fcomip
lcall
mov
add
outsb
mov
shrb
xchg
jmp
jp
or
je
out
shll
dec
cld
movsb
out
push
jae
inc
sbb
mov
mov
out
xor
stos
xchg
push
adc
cmp
or
push
pop
push
sbb
dec
popa
dec
adc
addr16
cmp
sub
mov
and
push
jmp
in
fucomp
or
mov
mov
pop
sub
filds
inc
mov
cmp
xor
inc
mov
cmp
pop
sbb
push
dec
leave
jno
inc
jnp
dec
push
out
cmp
lods
insb
popf
fldt
mov
lods
movsl
jo
mov
mov
or
popa
and
mov
xchg
mov
mov
jmp
sbb
test
mov
lahf
ja
mov
jbe
je
push
mov
push
xchg
xchg
insb
adc
push
ficomps
jno
data16
clc
xor
sbb
ja
xor
add
xor
out
adc
movsl
sbb
jne
cmpb
cmc
dec
les
pushf
push
xlat
inc
mov
je
sbb
fsubrs
xchg
psubb
mov
push
cmp
ret
mov
and
pop
xor
jns
cmp
stc
outsl
sbb
mov
fimull
dec
mov
inc
fdivrl
loope
sbb
adc
cmp
stos
out
pushf
andb
call
push
add
inc
inc
cmp
cmp
dec
sbb
fidivl
nop
pushl
adc
inc
insl
push
mov
jnp
lods
xor
rorb
jae
pop
mov
jne
dec
setns
mov
mov
dec
ja
xlat
aam
xor
jg
adc
arpl
cmpsb
fisubrs
stc
or
jne
xchg
push
cmpsl
ret
cmp
lea
jnp
cmp
test
call
push
int3
bound
pop
cli
andl
jae,pt
into
paddq
sarl
orb
xchg
repz
daa
dec
or
popf
xchg
or
std
add
mov
xchg
incb
cli
stos
push
and
sbb
or
out
es
pop
pusha
sbb
add
cmp
mov
sub
daa
imul
jns
ja
andb
or
xor
sbb
xchg
push
data16
inc
push
jge
sbb
shlb
adc
out
cli
xchg
lret
cs
and
or
enter
dec
iret
cmp
push
inc
test
in
enter
stc
mov
cmp
repnz
shr
dec
cvttps2pi
sub
aas
aad
fs
fimull
fwait
icebp
ret
jno
xchg
int
in
and
jecxz
in
lcall
pop
dec
shr
adc
dec
pop
mov
adc
mov
sbb
sub
out
and
push
mov
shlb
pop
jp
outsb
sub
out
std
sbb
fdivrs
ss
shrl
jge
rep
dec
xchg
inc
loopne
or
dec
loope
inc
outsb
imul
mov
pslld
inc
inc
jmp
adc
jmp
pop
xor
test
mov
and
lods
fsubrs
or
cmp
xchg
sbb
dec
fstpl
xchg
push
pop
js
add
pop
pop
and
ljmp
out
jecxz
sti
mov
loopne
pop
and
pushf
scas
xor
lret
scas
xor
mov
mov
push
add
lcall
xor
push
in
push
xchg
daa
push
rorl
shll
mov
and
mov
pushf
sbb
xlat
sub
mov
pop
xchg
mov
outsb
out
insl
mov
sbb
mov
icebp
pop
das
cmp
pop
sbb
sbb
cltd
test
adc
xchg
shrb
aad
cwtl
mov
iret
mov
xchg
jp
scas
data16
xor
or
mov
ljmp
aas
in
pop
fwait
inc
ja
fcoms
je
out
inc
repnz
push
jae
adc
mov
mov
jge
pop
dec
negl
xchg
andb
inc
and
dec
dec
orb
mov
push
ss
lds
pop
syscall
sub
leave
jecxz
js
das
addr16
mov
inc
bound
jns
xchg
fcmovnb
adc
push
std
and
jae
add
stos
xchg
xor
cltd
mov
or
dec
jbe
xchg
lea
insb
fidivrs
cwtl
sbb
sarl
dec
pop
sub
mov
mov
mov
addr16
push
sub
xchg
add
mov
or
mov
addb
cmpsl
cmpsb
push
cltd
fidivrs
loope
loopne
push
out
popa
loope
outsl
loop
pushf
sub
daa
jl
mov
loop
xor
adc
dec
pop
lea
imul
jo
or
mov
xchg
dec
enter
mov
pop
pop
push
push
jle
mov
add
loop
or
dec
mov
repnz
xor
std
fbld
inc
rcll
dec
push
ds
dec
push
jnp
jbe
aad
jmp
pop
repnz
dec
xchg
inc
mov
sahf
fs
cmpsb
push
jge
sbb
test
and
xor
mov
push
in
mov
mov
dec
ss
xor
in
call
or
rcrb
mov
out
fmuls
fisubl
loopne
or
addb
push
sub
shl
clc
mov
lea
pop
cmp
jns
cltd
and
roll
stc
mov
sub
or
dec
push
mov
adc
pop
push
cltd
pop
test
in
lcall
pop
xchg
ja
sub
dec
pop
sub
inc
je
push
push
xor
roll
push
sbb
scas
mov
in
mov
push
or
add
add
cli
test
in
add
xchg
push
push
push
inc
call
mov
lea
je
lods
push
sti
rorb
int3
jns
push
popf
cmp
clc
test
js
pop
pop
repnz
sbb
mov
imul
xlat
add
adc
jge
jo
inc
xor
jg
subb
inc
sbb
ljmp
sbb
insb
fsubl
dec
repnz
imul
and
push
or
les
or
test
cld
xor
sti
clc
mov
inc
mov
jmp
lret
mov
sub
dec
mov
outsb
pop
xor
lahf
addr16
xchg
cmp
inc
xor
mov
lds
mov
cmc
push
js
dec
push
cmc
fimuls
lods
inc
inc
pop
arpl
dec
or
xchg
scas
mov
neg
lods
jmp
rcl
xor
mov
sbbl
shrl
xor
mov
cmp
scas
sub
cs
cwtl
dec
ja
sbb
jl
push
dec
out
sub
jne
sarb
je
orb
pop
outsl
lods
fstpl
mov
jno
jne
dec
clc
mov
or
inc
outsb
xchg
mov
rcrb
sti
das
in
xchg
and
jle
pop
jo
xor
jp
fidivs
cs
jb
inc
inc
ds
rcll
mov
or
jbe
mov
imul
adc
aad
lods
mov
and
ljmp
dec
mov
xchg
sub
push
in
sbb
mov
pop
or
fdivl
add
test
jne
jle
pop
xchg
lods
sbb
mov
loopne
adc
adc
ret
mov
enter
imull
mov
dec
test
cmp
push
mov
in
iret
push
ljmp
mov
pusha
adc
test
xor
js
iret
decl
js
mov
ss
cwtl
mov
add
push
or
cmp
sti
adc
xchg
mov
push
fnstsw
mov
adc
xor
pop
and
fistpll
lret
mov
in
xor
outsl
fisubrl
fcmovnu
jo
jne
adc
test
pusha
xor
xor
inc
or
sub
ds
lock
insl
lcall
dec
fmull
pop
js
jbe
mov
fsts
or
fistps
jo
jno
es
popf
add
cmp
pop
loop
subl
and
jae
fbld
mov
mov
pop
aam
pop
sub
cltd
dec
dec
jmp
cli
lret
xchg
leave
jecxz
sbb
into
jp
push
in
lods
enter
push
leave
sub
icebp
faddl
mov
out
mov
inc
adc
jns
jbe
jae
cli
lret
sbb
or
pop
inc
in
gs
popf
jne
jbe
shlb
mov
int
inc
mov
mov
leave
xor
jge
decb
jae
push
sbb
test
lahf
test
and
aas
stos
jecxz,pt
cmpb
shlb
dec
outsb
fisubrl
fwait
dec
bound
mov
call
push
adc
outsb
jg
js
mov
and
cmc
sbbl
push
pushf
cmp
fcomi
dec
popa
xor
mov
adc
jo
lahf
or
cmovg
pop
jecxz
sbb
inc
xchg
call
sub
sbb
cmp
mov
jns
cmp
xchg
lods
pop
and
mov
and
sbb
pop
add
cmpsl
jmp
aam
mov
popa
xchg
sub
or
pusha
jmp
or
mov
mov
cld
andl
push
popf
pop
clc
das
xor
sbb
rcrb
popl
pop
repnz
arpl
and
rclb
movsl
pusha
ss
lret
sbb
or
stos
sarb
loope
mov
or
ja
jmp
pop
jp
adc
xchg
xchg
and
inc
push
mov
xor
test
push
loope
icebp
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
mov
movsl
rcll
adc
jno
inc
out
sti
mov
push
ss
out
sahf
fimuls
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
insl
mov
mov
jo
inc
lods
cmp
sbb
or
jns
imul
mov
insl
mov
or
leave
dec
cmp
sub
insl
in
or
jns
imul
cltd
jne
gs
adc
add
cmp
sub
push
daa
mov
ret
pop
fbld
shl
add
sbb
into
xor
sti
pop
pause
shr
pop
bnd
push
aam
or
xor
xlat
insb
fs
sarl
out
rcl
aas
ret
pop
and
jl
pop
pop
mov
inc
shll
ss
pop
add
cmpsl
xchg
movsb
push
daa
pusha
cmp
inc
fucom
xchg
fldcw
loopne
cmp
mov
cld
adc
cs
or
mov
and
add
pop
push
dec
lods
inc
enter
xchg
mov
inc
int
push
sub
aad
or
imul
mov
sub
xchg
imul
es
insl
imul
push
mov
cltd
je
jge
or
leave
and
int
lds
hlt
or
jns
imul
cld
or
sbb
inc
mov
mov
gs
sbb
add
mov
push
in
adc
pop
leave
subps
dec
lcall
dec
leave
rorb
pop
lock
sbb
cmp
sub
sbb
or
jns
imul
cltd
insl
mov
or
leave
cmp
sbb
or
jns
imul
and
lods
jg
xchg
lock
test
clc
fbld
cmp
stos
sbb
lods
out
push
data16
cli
mov
sub
push
and
xchg
sti
or
js
and
in
shlb
or
pop
lret
cmc
lock
jmp
andl
sbb
js
lret
cmpsl
dec
lods
mov
jno
xor
cmp
call
test
or
add
cli
mov
lret
test
clc
shlb
xchg
push
ret
int
xchg
mov
push
xor
jmp
aas
mov
mov
jne
lahf
and
ret
sbbb
out
aam
iret
xor
inc
int
data16
add
out
inc
test
fstl
pop
inc
xor
pop
pusha
jbe
test
add
jne
icebp
movsb
jnp
mov
add
out
scas
adc
sbb
sbb
dec
in
cmpb
or
pop
sahf
jmp
inc
push
jo
lret
pop
push
sub
jb
inc
xchg
pop
in
dec
mov
addr16
fisttpll
sbb
inc
scas
std
jge
test
stos
sbb
or
dec
jecxz
jp
inc
sti
int
cmp
xor
mov
push
inc
shrl
jns,pn
addr16
notb
jae
mov
repz
xor
add
push
push
add
les
out
icebp
cmp
push
lret
mov
cmp
les
adc
cmp
xchg
mov
cmpsb
jno
scas
inc
lea
or
push
cmp
dec
cmp
das
add
scas
aas
sahf
push
stos
test
jge
imul
stos
sahf
mov
dec
and
adc
dec
xchg
lret
scas
add
repz
fbstp
push
enter
in
rcl
mov
push
cltd
idivb
sbb
cmpsb
enter
lret
jle
and
inc
insb
bound
lea
outsb
test
pop
imul
loope
call
mov
es
dec
fisubs
mov
add
cmpsl
xor
movsl
fisubs
daa
push
imul
mov
je
xchg
sub
outsb
sub
sbb
mov
mov
cld
loop
test
shlb
ds
sub
test
mov
jg
jl
inc
ret
add
cmp
gs
sti
dec
rorl
movsb
mov
push
cmp
enter
push
insl
gs
jb
movsl
push
lods
sbb
pop
cmp
mov
jge
outsl
popf
out
push
ja
mov
mov
cmp
je
xchg
pop
faddl
pop
xchg
cmc
dec
jnp
cwtl
push
hlt
mov
jo
pushf
in
lods
inc
emms
jl
pop
and
lea
dec
in
arpl
aam
aad
mov
xchg
clc
add
sbb
sbb
addb
loopne
inc
fistpll
bound
cmp
out
rorl
lock
mov
push
xchg
jne
or
and
and
sbb
shlb
inc
jecxz
and
xor
lea
popa
inc
insb
xor
test
mov
pop
inc
rolb
push
mov
or
leave
sbb
mov
std
inc
xchg
push
cmp
or
lcall
pop
ss
and
and
fidivs
subl
sub
mov
lret
lahf
mov
imul
xchg
cmc
into
cmp
pusha
cmpsb
shll
pop
jo
scas
pushf
xor
mov
bound
mov
xlat
les
lahf
bnd
movsb
and
ss
push
mov
std
dec
popa
cld
outsl
mov
in
mov
movsb
cmp
push
and
jp
repz
aaa
test
xchg
jb
mov
xor
sbb
clc
pushf
adc
cmpsb
add
lcall
repz
cmp
inc
and
mov
push
and
fsubs
dec
pop
and
sub
aad
mov
xchg
lods
hlt
sbb
mov
ja
mov
lahf
sub
bound
sub
and
ret
cltd
cli
push
xor
jmp
mov
out
je
push
loopne
lret
cs
stos
shl
mov
jp
push
or
mov
cmc
or
or
mov
cmp
clc
repz
push
jp
popa
mov
cld
xor
pop
jne
jecxz
aaa
add
arpl
push
cmc
or
dec
out
ret
in
jbe
push
out
push
shl
inc
or
aad
push
mov
mov
fnstsw
and
test
das
cld
xchg
stc
leave
aam
scas
inc
mov
mov
icebp
lods
into
xor
imulb
pop
pop
fst
fwait
xor
fs
icebp
adc
mov
adc
or
jp
xchg
out
shll
iret
pusha
mov
adc
sub
addr16
sub
mov
punpckldq
jb
popf
mov
mov
jg
popf
sbb
cmp
shlb
or
fwait
sar
mov
negb
jae
aam
nop
sbb
mov
hlt
sub
jp
cld
xor
into
pop
mov
jns
mov
enter
mov
adc
sub
push
and
sub
and
jne
movsl
add
xchg
fldcw
mov
dec
lret
mov
call
in
movd
lock
jno
pop
mov
imul
or
push
mov
fildll
cld
in
rcl
mov
cmpsb
addl
insl
lahf
mov
xor
insl
imul
data16
ss
mov
adc
pop
out
inc
lret
mov
and
inc
pusha
fstps
and
xchg
bound
mov
jecxz
outsb
inc
adc
rcll
lea
out
call
cmpl
fisubl
std
sub
sbb
mov
stc
pop
fcmovbe
inc
scas
ret
sub
test
js
icebp
fildl
cmpsl
or
sbb
sub
pop
addr16
shrl
mov
and
xchg
xchg
inc
fwait
sbb
pop
cltd
test
dec
and
sub
iret
jnp
lock
xor
inc
cs
in
clc
mov
dec
sub
jg
sub
add
mov
jbe
add
in
mov
arpl
add
ljmp
push
lea
mov
mov
jnp
and
jl
mov
sub
addr16
jae
das
adc
add
add
addr16
fildll
outsb
imul
xchg
lret
movsl
pcmpeqd
jbe
in
out
test
sahf
jecxz
insl
aaa
ret
mov
stos
sub
test
les
cmp
inc
xor
ljmp
xchg
mov
push
lods
mov
jbe
repnz
hlt
xchg
nop
movsl
je
popa
ljmp
mov
pop
xor
fnstcw
xorl
add
mov
cltd
dec
lret
cmpsb
push
sti
faddl
lds
roll
xchg
shlb
test
out
jle
into
xor
cmp
adc
xor
lcall
jge
mov
outsb
jne
cmp
dec
cwtl
mov
xor
jmp
addr16
sub
cmp
pop
outsl
or
mov
dec
scas
movsb
xchg
mov
orl
mov
push
repz
adc
ja
lock
pop
mov
sahf
pusha
push
sub
jae
cmpsb
mov
movsl
test
icebp
inc
es
pop
sbbb
or
push
and
dec
mov
and
test
mov
es
cmp
out
test
stos
xor
into
ret
and
or
mov
shrl
loop
xor
scas
aaa
xor
mov
movsl
ficompl
sbb
and
mov
jo
cmpsb
cmc
mov
sub
push
pop
psubsw
adc
sub
jge
xchg
push
jno
cmp
adc
addb
or
push
sub
imul
xor
mov
lret
dec
cmpsb
xchg
pop
flds
call
mov
es
gs
pop
or
adc
push
xchg
cwtl
in
pop
xor
lret
ss
mov
add
jno
test
icebp
mov
sahf
mov
or
cs
pop
ret
enter
mov
es
jmp
pop
in
ja
lock
in
sbb
and
test
mov
daa
mov
faddl
imul
push
repz
popa
mov
cmp
cmp
and
movsb
xor
jae
cld
push
ret
insl
or
or
in
nop
xchg
ds
sub
out
mov
or
dec
dec
jg
iret
pushf
add
imul
mov
cmp
add
xchg
fnsetpm(287
xchg
cli
jo
popf
cmp
xchg
push
ret
lock
mov
push
pop
int
inc
out
or
cltd
mov
imul
fwait
popa
mov
clc
std
sbb
add
xchg
pop
into
xor
int
pop
dec
pusha
jmp
fistl
mov
push
push
test
inc
jo
mov
jp
add
sbb
je
ds
jl
fisttps
aas
lcall
out
sub
mov
jb
and
and
test
iret
dec
push
jb
mov
lahf
data16
into
loopne
shlb
and
ds
inc
push
xor
mov
pop
mov
xor
aad
jne
lret
rclb
je
mov
icebp
js
scas
cmc
jmp
divl
outsl
dec
test
fbstp
xor
mov
fstps
dec
nop
or
mov
mov
leave
subb
fs
add
or
cld
xor
cwtl
call
add
inc
push
out
cmp
lods
rolb
loope
lret
fsubrs
data16
pop
mov
leave
cwtl
push
insb
push
mov
xlat
xchg
arpl
iret
out
fidivl
xchg
shlb
lods
push
xchg
dec
jno
mov
inc
cbtw
lods
pushf
jle
inc
mov
jo
repz
pop
fdivrl
xor
pop
xorl
mov
daa
xlat
loopne
popa
das
mov
or
inc
cmpsl
jo
jmp
or
xchg
jne
jecxz
or
leave
and
xchg
inc
cmpl
out
loopne
jae
roll
dec
sarl
or
aaa
rcr
jno
stos
mov
enter
jge
cli
xor
lahf
push
inc
pop
lgs
into
sar
out
fs
inc
rorl
sti
subb
xchg
cmp
xor
mov
ss
stc
cmp
loopne,pt
divl
add
imul
sbb
cwtl
xchg
fcmovnu
push
push
ja
ret
icebp
ss
adc
push
aas
leave
inc
ljmp
call
push
sub
out
repz
jb
xor
jmp
stos
xchg
xchg
jo
add
notl
outsb
adc
notl
inc
stos
sbb
push
aaa
mov
jmp
inc
aas
enter
icebp
into
icebp
push
leave
cmp
bound
mov
inc
bound
in
dec
inc
rorl
cmpl
inc
mov
aam
and
aam
jae
xor
ret
pop
sub
shrl
add
or
inc
adc
cwtl
and
mov
xor
insb
and
jae
mov
aam
add
mov
sbb
dec
test
daa
inc
mov
in
inc
pop
jbe
test
push
xchg
aad
ss
fmull
push
jg
push
mov
stos
and
xor
push
aam
stc
fdiv
jp
mov
add
mov
push
xchg
inc
int3
out
lahf
mov
jo
inc
sub
jbe
dec
cld
cwtl
jmp
js
mov
mov
mov
xor
pcmpeqd
sub
jb
and
sbb
xchg
add
xchg
xchg
mov
aas
jne
xchg
adc
lea
push
icebp
test
pop
lods
jg
iret
mov
pusha
mov
imul
inc
cltd
pop
out
mov
les
stc
push
test
arpl
xchg
enter
add
ficomps
or
mov
xor
mov
add
push
cmpsl
inc
data16
movsl
inc
sbb
mov
inc
inc
shlb
aad
loopne
mov
sub
ss
cmc
lods
mov
negl
pop
cmc
out
push
or
push
out
mov
xchg
pop
or
jecxz
cmpsl
jne
mov
mov
jno
xor
jno
fcom
jb
cmpsb
sub
sub
jo
xchg
cmp
cld
das
inc
das
andb
or
xlat
cltd
jb
leave
pop
mov
xor
jp
stos
ds
sbb
inc
inc
cmpsb
xorl
sub
sbb
jecxz
fimull
mov
test
arpl
xor
mov
ds
and
lret
shl
inc
lahf
sbb
dec
mov
add
lds
repnz
mov
mov
negb
sahf
les
pop
inc
test
jp
cmpsb
add
imulb
je
adc
pushf
mov
sti
push
mov
fdivl
add
pop
addr16
dec
fwait
hlt
xlat
sub
stc
gs
jns
mov
fistps
xchg
enter
push
iret
mov
pop
ds
mov
imul
pop
adc
jmp
nop
jp
pop
scas
jbe
loopne
out
lahf
int
jnp
xchg
mov
loop
add
sbb
push
dec
cld
cmpl
or
gs
add
cmp
test
jle
aad
dec
inc
fistps
dec
pop
cltd
jbe
in
xor
test
push
inc
adc
or
push
ss
stos
subl
pop
movsl
fstp
aam
mov
out
jnp
and
out
push
xor
sub
add
xchg
cmp
push
adc
out
lock
cli
add
ja
jle
lods
push
and
loope
enter
int3
adc
add
in
mov
push
imul
shr
shrb
es
push
das
xchg
pop
xor
outsl
inc
int
pop
inc
clc
mov
inc
popa
mov
les
int
sub
aad
and
jge
sbb
pop
lods
add
xchg
adc
push
mov
leave
scas
dec
adc
pop
add
pop
and
frstor
xor
scas
arpl
adc
sub
sub
mov
in
jnp
ret
pop
push
push
add
xor
sub
jns
cmpsl
nop
sbb
add
into
cltd
inc
mov
mov
clc
pop
pop
lods
sub
fstl
or
insl
cltd
daa
dec
jg
cmpsb
pop
and
out
dec
jmp
xchg
lret
pop
ficoms
xchg
ds
out
mov
jge
pop
push
sub
aaa
jp
dec
in
mov
gs
or
cld
push
inc
bound
mov
cmc
push
jns
mov
mov
insl
aaa
xchg
mov
mov
inc
dec
mov
mov
xchg
and
call
inc
cmp
ds
shll
mov
insb
das
dec
mov
js
les
lret
fcoms
rcrl
pushl
scas
inc
imul
cmp
cmc
cmp
and
or
clc
hlt
mov
jl
js
in
push
dec
leave
xchg
fcomps
mov
dec
mov
jecxz
sub
imul
movsl
cmp
repz
dec
scas
mov
sub
pop
jp
pop
pop
or
jmp
addr16
dec
into
cmp
mov
leave
hlt
sub
ds
adc
aad
sbb
ljmp
sbb
fcompl
bound
xchg
adc
add
xorb
out
xor
pop
sub
cltd
out
add
jnp
cmp
inc
add
clc
push
out
out
inc
dec
insb
add
into
shrb
popf
lods
push
fdivr
lods
pop
push
mov
xchg
test
sbb
push
and
shr
enter
pop
in
and
mov
add
sarb
dec
jmp
cs
in
mov
nop
xchg
and
test
or
xchg
jmp
ljmp
popf
dec
popf
ficoms
inc
ficomps
lcall
jl
pop
ror
mov
and
aaa
mov
stos
cmp
sub
aas
inc
testl
pusha
push
insb
adc
lcall
inc
roll
outsl
cli
mov
xor
push
shrl
iret
inc
pop
cmpsb
xchg
fisubrl
enter
lods
pop
repz
push
pop
jp
ror
jae
xchg
repnz
cli
xor
dec
in
pushf
fwait
sbb
xorb
fs
push
mov
arpl
mov
bswap
das
rcrl
rcrb
cmp
jg
mov
lret
test
pushf
lods
mov
outsb
in
shrb
aad
shll
or
cmp
lret
sub
and
mov
stos
mov
test
fyl2x
inc
cmp
push
out
js
into
aad
cmpsl
jge
test
movsl
addr16
xchg
jl
cmp
add
stos
daa
dec
lcall
add
adc
adc
mov
ljmp
mov
mov
addb
cmp
pop
mov
loop
push
inc
and
xor
shlb
or
fcmovbe
xor
xchg
cmp
fnstcw
pop
mov
testb
loope
xchg
dec
push
add
lahf
push
es
iret
loopne
stos
out
das
mov
xchg
jp
xor
mov
lcall
pop
mov
add
push
add
lds
sub
dec
repz
or
imul
imul
js
mov
cmp
cmp
dec
pop
xor
ffree
movsbl
pop
rcr
mov
lods
inc
fdivrp
xchg
mov
push
in
lods
mov
popf
mov
popf
push
cmp
or
std
jbe
imul
roll
test
pusha
lret
ret
push
sbb
mov
add
enter
xor
out
test
adc
insb
add
cltd
sbb
aam
sahf
adc
adc
push
enter
push
fldt
enter
and
add
fwait
mov
mov
jle
movsb
enter
dec
xor
ja
ja
xor
mov
sbb
sub
iret
fsubr
pop
mov
adc
leave
mov
dec
roll
call
push
jge
into
dec
mov
sub
jb
or
push
fmuls
pop
push
cld
aaa
mov
jae
adc
dec
adc
pusha
adc
iret
sbb
scas
dec
adc
int
xchg
ja
mov
sbb
cmp
mov
inc
pop
out
inc
mov
xchg
xlat
movsb
push
jae
orb
pop
bound
popf
jne
imul
mov
add
push
out
xchg
into
and
pop
or
adc
xchg
mov
and
push
sub
ss
les
mov
mov
pusha
pusha
inc
cmp
dec
fs
gs
ja
push
stc
in
inc
fwait
or
adc
sbb
mov
aad
sbb
push
xor
dec
adc
fwait
or
mov
or
dec
aas
cmpsb
popa
jns
jno
ja
mov
push
movsl
decl
sub
out
test
and
loope
scas
lods
jecxz
flds
pop
dec
outsb
inc
push
and
fstpt
mov
or
mov
pusha
loop
sbb
pop
dec
mov
dec
sbb
bound
jg
cli
mov
mov
xor
adc
add
shll
sub
gs
les
pop
aas
pop
push
push
mov
jno
and
xchg
out
neg
insl
ss
pop
mov
push
insb
jmp
pop
repnz
in
sub
mov
jp
test
lahf
repz
or
andb
mov
in
test
cltd
xor
insb
popa
pop
mov
cmp
call
push
pop
sbb
int3
ljmp
test
lcall
add
test
scas
repnz
cmpsb
cmp
and
ds
lods
xchg
pushf
push
pushf
icebp
pop
call
jmp
inc
lcall
iret
sysexit
dec
leave
shlb
fisubs
movsb
xor
cli
cmpb
xchg
cmp
xor
pop
dec
ret
inc
and
iret
lret
push
xor
gs
jp
xor
aas
push
insl
jp
int
add
xchg
and
and
test
testl
mov
out
loopne
sub
cwtl
push
add
fwait
in
add
mov
aas
sahf
mov
insl
mov
push
sbb
add
hlt
cwtl
mov
ss
mov
movsl
outsb
fdivr
out
rcrb
or
jns
iret
cmp
mov
sti
addl
dec
mov
sub
push
add
or
repnz
clc
inc
lret
jle
addr16
cmp
test
into
mov
jnp
pop
loope
mov
or
mov
pop
or
je
decb
mov
divl
pop
sbb
sbb
into
sbb
mov
insl
mov
or
leave
cmp
sbb
or
jns
imul
cltd
insl
mov
or
leave
cmp
sbb
or
jns
imul
cltd
insl
mov
or
leave
cmp
sbb
or
jns
imul
cltd
imul
std
cmp
sub
in
or
cmpsb
shlb
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
