idiv
decl
ret
data16
rorb
add
jmp
dec
add
sub
dec
sbb
jns
dec
add
ret
decb
aam
mov
mov
pop
dec
ja
ja
outsl
jae
mov
sbb
hlt
push
push
call
lret
mov
mov
sti
sti
dec
push
mov
or
jno
add
imul
mov
mov
sub
sub
lock
dec
add
add
inc
imul
outsl
cmp
mov
sub
ret
pop
insl
sub
mov
fadds
pop
dec
inc
xchg
ljmp
jmp
inc
out
in
call
add
mov
xlat
sarl
leave
arpl
push
test
dec
pop
dec
dec
arpl
std
das
inc
pop
add
pop
add
mov
imul
mov
jmp
imul
jo
inc
inc
mov
jae
fnsave
add
inc
dec
mov
sub
mov
dec
jp
std
out
imull
dec
adc
je
inc
jo
push
dec
ja
fldt
push
call
dec
mov
push
push
in
ffreep
fisttpl
xor
dec
pop
ficompl
arpl
sti
mov
jno
aaa
push
mov
push
mov
sti
loope
inc
xchg
add
or
add
add
clc
negl
bnd
dec
arpl
daa
jmp
add
mov
std
out
outsl
gs
push
ja
mov
sarb
scas
fistpl
inc
xor
dec
popa
dec
incl
or
inc
add
xor
lret
push
push
xchg
and
xor
stc
fistpll
incb
pop
inc
ja
xor
sbb
divl
inc
add
incl
ds
jne
fwait
movsl
out
je
or
int
int
or
adc
sub
call
or
adc
mov
mov
sub
sti
dec
cmp
iret
mov
add
mov
int
adc
add
lret
in
lcall
int3
dec
vaddpd
sub
int
adc
mov
int
fmul
add
idiv
call
add
or
int
movsb
dec
and
addl
das
jbe
or
jg
jmp
push
pop
jg
outsl
int
or
hlt
test
xor
outsl
push
push
enter
mov
lea
jg
sub
es
int
and
idiv
dec
int3
std
int
pushl
inc
stc
pop
test
test
shlb
int
jo
aas
xor
and
and
cmc
dec
cmp
add
fbld
shlb
xchg
or
or
push
mov
arpl
push
add
and
dec
insb
mov
mov
cmp
out
decl
pop
adc
mov
shl
int
int
mov
outsb
sbb
int
stos
or
std
push
xor
cmp
int3
lcall
add
and
stos
int
clc
sub
ret
lcall
adc
mov
dec
loopne
dec
clc
sbb
inc
cmpsl
scas
jg
or
ss
fstl
and
mov
cmpsl
addb
jl
fdivrl
jne
jmp
cmpsl
fiadds
xchg
push
xor
or
mov
or
pop
sub
movaps
dec
and
mov
sub
jl
or
push
xorl
xor
int
pop
jnp
int
lock
incl
int
out
push
cltd
notb
jne
jns
test
incl
or
pop
int
dec
push
cld
add
aaa
ret
jae
xchg
jmp
inc
clc
jmp
xchg
das
int
int
mov
inc
int
shr
aas
icebp
fistl
test
pushl
mov
cmp
int
push
xor
int
or
jg
push
or
das
repz
imul
int
cmp
or
push
or
incl
or
aam
movsl
and
popf
push
mov
cmpsl
lahf
xchg
or
mov
call
lret
lret
out
call
xchg
mov
push
inc
sub
cltd
je
ret
adc
add
inc
in
ljmp
insb
add
mov
push
sti
int
sbb
adc
and
arpl
push
adc
sbb
add
int
jl
call
fcomi
mov
int3
outsl
dec
adc
push
or
in
ret
push
test
pushf
sarl
add
lahf
sbb
lahf
sbb
add
int
inc
jecxz
filds
dec
cmp
adc
mov
lahf
icebp
das
cld
call
sbb
and
lret
cmp
rep
sub
push
jg
sti
mov
push
cld
mov
mov
dec
inc
testb
js
xchg
sbb
decl
push
dec
shll
in
int
decb
shll
js
in
and
clc
nop
in
dec
or
pusha
adc
sub
push
in
add
call
mov
int
or
cltd
sub
and
cmp
out
pop
shrb
call
lods
pop
push
cld
adc
int
lock
test
bound
jmp
and
and
inc
add
lock
or
add
movb
adc
fstpt
push
int
hlt
lods
das
cltd
xchg
or
and
pusha
shrl
mov
repz
push
ss
sbbb
adc
stos
pop
je
test
and
shlb
and
mov
in
in
call
push
fdivrl
adc
cmp
outsl
decl
in
lcall
repnz
add
or
jb
shrb
cld
pop
insb
lret
hlt
divl
lea
push
add
shrb
jne
daa
push
push
jmp
jle
sub
loopne
dec
insb
push
out
mov
fistpll
push
cs
je
mov
adc
pop
cmp
lret
lcall
in
arpl
fsubr
sub
movsb
inc
ror
fs
nop
in
jmp
jle
xchg
adcl
fcmovnb
dec
add
imul
or
dec
push
or
and
cmp
jge
push
test
aad
pop
push
jg
rcl
rorl
cmpsb
mov
test
inc
jge
xchg
adc
sub
lret
dec
fmuls
or
js
sbb
test
std
js
sub
pop
push
jmp
clc
ret
ror
and
push
fstpl
rorl
add
cmp
stc
pushf
insb
add
fbstp
in
idiv
push
loop
call
jno
lahf
pop
cs
xchg
add
dec
lret
jg
testb
andl
or
ljmp
pop
fisttpl
pop
mov
es
mov
adc
pop
cmpsb
fs
pushl
cld
nop
adc
scas
imul
mov
jle
dec
int
int
lods
jmp
iret
or
sbb
lahf
jo
ds
inc
sbb
mov
mov
sbb
jmp
sub
leave
adc
pop
loopne
pop
push
or
push
clc
sahf
sbb
fistl
pop
push
popf
sub
cmp
inc
xor
ret
xor
test
int
decl
imul
push
fcom
sbb
pop
xchg
test
jge
mov
pop
lods
and
insb
push
int
jmp
xchg
push
inc
aam
mov
jno
movsb
push
push
lret
push
int
add
cld
test
imul
jbe
outsb
adc
cmc
sbb
insb
cmp
inc
or
ss
xor
lock
pop
mov
aas
pop
xchg
dec
out
mov
fsubrl
or
rolb
cmp
test
mov
xor
xor
sub
adc
pop
outsl
incl
adc
test
loope
inc
mov
jge
or
clc
mov
hlt
sbb
adc
and
bound
arpl
icebp
les
cs
stos
add
shlb
pop
mov
aas
outsb
lret
fdivs
push
mov
jo
insb
mov
sub
and
decl
pop
mov
test
and
fisttps
das
cld
inc
lock
clc
cmp
pushf
mov
pushf
notl
jg
lock
shlb
mov
xorb
lcall
mov
addl
pop
out
test
pop
int3
inc
xor
call
pop
cli
xchg
push
outsb
cwtl
nop
jge
clc
sub
fcomip
lahf
and
sahf
stc
mov
push
or
ds
sti
mov
cmp
call
adc
dec
rolb
sub
mulb
add
lock
ret
sub
cmp
lcall
fidivs
mov
xchg
enter
popf
out
add
inc
xchg
test
xchg
outsb
es
adc
push
mov
out
aaa
mov
jmp
xor
adc
decl
and
xchg
gs
scas
push
mov
pushl
inc
call
adc
jnp
push
sub
cmc
sbb
lea
and
test
or
notl
mov
ss
push
pushf
sub
xor
rclb
fbld
negl
cmp
aaa
and
pop
pop
pop
stos
inc
mov
mov
add
nop
lret
into
or
das
jno
and
das
std
cmp
fisttpll
enter
sbb
push
pop
cli
fstpt
add
psadbw
or
xchg
in
jg
lea
cmc
push
inc
mov
or
leave
mov
mov
imul
mov
sti
incl
cld
mov
dec
or
ret
mov
fsubs
in
jp
adc
mov
aaa
insl
adc
movsb
mov
or
and
jle
ret
pop
int
sub
aaa
clc
push
pop
or
and
and
mov
inc
adc
or
pop
sti
sbb
dec
sub
int
push
adc
pop
repnz
repnz
or
pop
js
push
cmp
cmpsl
das
leave
mov
adc
mov
pop
stos
xchg
mov
sub
jmp
jnp
sti
fnsave
out
or
stos
test
xor
pop
enter
ss
pop
pusha
imul
lods
xchg
or
fsubl
dec
dec
ljmp
cld
das
xchg
sub
xchg
mov
add
cltd
ds
jg
clc
orb
jo
sbb
jmp
repz
test
std
cmp
icebp
loopne
movsl
enter
pop
xchg
pushf
mov
xor
adc
dec
mov
mov
mov
nop
jne
sbb
ljmp
insb
jbe
mov
clc
movups
movsl
adc
and
test
pop
ljmp
jae
inc
das
mov
data16
push
test
std
cmpsl
adc
bound
shll
arpl
stos
xor
lahf
inc
arpl
or
add
sub
int3
dec
jo
into
mov
mov
call
mov
xchg
mov
decl
mov
dec
add
adc
cmp
mov
xchg
inc
stos
push
and
into
push
push
adc
dec
fucomi
pop
mov
or
sub
aaa
inc
xor
inc
dec
inc
lahf
adc
push
push
sbb
fbstp
fidivs
add
jge
sti
xor
sbb
add
or
lea
fnstsw
rol
rcrl
mov
mov
add
cmp
orl
aad
or
xorb
scas
outsl
mov
mov
clc
ficomps
mov
push
sar
jmp
loope
or
jge
jg
nop
mov
and
jbe
cli
jbe,pn
mov
lock
les
mov
jbe
outsl
pusha
mov
call
mov
jp
xor
or
sub
lds
daa
ret
adc
jno
sub
aam
add
aaa
cli
pushl
jo
lcall
not
jle
adc
inc
iret
mov
mov
ljmp
xchg
out
lret
je
xchg
and
loop
xchg
in
call
movsb
pop
bound
test
mov
mov
stc
or
push
adc
inc
int3
xchg
ljmp
cmp
je
sbb
mov
push
insl
dec
sbb
pop
lock
movsb
adc
push
ja
pop
xorb
and
hlt
push
subl
add
rcrb
mov
fcmove
xor
push
pop
loopne
call
hlt
dec
dec
mov
loope
pop
fwait
pop
outsb
ror
dec
pop
rol
in
adc
or
mov
pop
cltd
sub
stc
inc
cmp
jge
test
or
insb
jmp
dec
movsl
push
xchg
mov
jns
cli
enter
fidivrs
dec
add
xchg
dec
loope
bound
cmpsb
adc
aam
mov
cmc
pop
mov
and
lret
loop
push
xor
mov
cs
inc
sbb
jnp
cmp
jmp
aaa
ljmp
jl
bound
ret
mov
or
rorl
sbb
push
mov
add
mov
insl
mov
xor
pop
mov
jl
arpl
sub
push
ret
pop
sub
fistpll
cld
lea
sub
adc
jp
lcall
push
add
repz
aaa
pop
cs
xchg
add
sub
aaa
decb
push
aam
pop
jns
jmp
rorb
push
mov
pusha
clc
push
lock
ds
adc
ljmp
inc
mov
mov
inc
and
fadd
pop
loop
push
icebp
out
arpl
jmp
das
aaa
loopne
adc
xchg
dec
inc
pop
test
int
inc
fcompl
jmp
rolb
out
cld
add
lcall
cmpsb
loope
das
test
sbb
pop
inc
mov
xchg
js
loopne
dec
popf
and
xor
xchg
push
jbe
ret
xchg
add
scas
and
test
jle
addl
pop
push
loope
sub
fisubrs
cmp
mov
mov
xor
test
lahf
xchg
push
mov
mov
adc
je
rep
pop
pushf
xchg
mov
loope
fucomi
adc
sub
bswap
pop
lods
das
aam
mov
xchg
clc
lock
push
inc
push
int
inc
pop
ret
pop
loopne
outsl
leave
cmp
and
pusha
dec
stc
sarb
out
in
aaa
mov
xor
xlat
int
add
push
adc
sbb
mov
jns
std
ja
test
adc
and
add
fdivrs
dec
pop
movsl
jmp
pusha
and
fstp
dec
sahf
cmp
inc
in
testb
cld
add
stos
push
or
or
cld
das
cwtl
out
imul
push
jge
aaa
dec
mull
xchg
or
test
push
add
imul
aas
or
in
sbb
call
scas
push
xor
adc
inc
add
mov
mov
mov
xchg
fdivs
sub
adc
add
enter
ror
xchg
call
mov
push
jg
jbe
inc
and
aaa
inc
fistpll
fucomip
lea
xchg
lods
daa
leave
ja
icebp
sbb
mov
sub
test
mov
imul
mov
dec
dec
mov
xchg
cmc
rolb
dec
sub
pop
mov
das
inc
add
repnz
loop
jle
outsb
mov
je
nop
pop
sbb
and
cs
shrb
test
add
add
lods
data16
or
jmp
dec
cmp
push
in
mov
xor
pop
insl
xor
lods
adcl
sbb
fcompl
data16
faddl
sysenter
shlb
cmp
or
inc
push
push
adc
pop
lods
pop
in
xchg
xor
je
jge
leave
cld
cltd
xchg
xchg
sbb
and
mov
clc
aam
fwait
push
pop
pop
fs
or
adcb
jp
pop
adc
inc
rcr
mov
jno
cwtl
jp
jbe
mov
mov
mov
fnsave
fistl
pop
test
lods
add
sbb
or
mov
call
mov
addr16
je
popa
push
mov
add
jle
xor
jb
cmp
adc
rcll
fisubs
jmp
addr16
jno
pop
lock
jmp
ret
dec
sbb
pop
iret
aaa
jb
add
push
call
ret
sub
lea
and
ss
adc
mov
ljmp
pop
inc
fxch
sbb
in
hlt
sub
push
das
cld
pushl
adc
sub
ret
mov
pop
jp
lods
mov
mov
sbb
sbb
or
push
aaa
mov
jl
push
xlat
in
dec
outsb
lock
mov
xchg
mov
sbb
test
lods
divb
test
rorl
xchg
das
adc
test
inc
into
lret
and
push
loopne
add
mov
leave
cmp
jecxz
inc
lock
stos
lds
fsubrs
rorl
aam
out
mov
jg
mov
leave
adc
je
cmp
fcoml
jbe
movsb
sbb
xchg
xchg
mov
jge
lds
je
leave
push
jle
push
dec
adc
sbb
out
popa
or
outsl
or
movsb
fs
push
mov
into
push
rcll
dec
pop
pop
add
mov
jecxz
mov
fcmovb
jnp
push
sarl
dec
jg
sti
inc
cwtl
jmp
pop
dec
data16
mov
mov
scas
repz
fisttpl
and
andb
dec
addb
insb
popw
xchg
clc
ret
popf
test
xorb
ljmp
pop
xchg
sbb
and
inc
jle
mov
popa
mov
mov
lea
sti
inc
jg
sbb
push
jbe
mov
jl
push
ja
imul
stos
inc
ljmp
push
cli
ljmp
std
adc
fsubrl
xchg
decb
rcrb
dec
insb
xchg
sub
popa
xchg
in
cld
das
xor
fs
mov
clc
push
mov
or
mov
loopne
jne
shll
xor
mov
repz
hlt
mov
jmp
lea
cmc
jnp
scas
fs
pushl
clc
sbb
pop
xchg
data16
sbb
adc
push
lret
xor
roll
inc
adc
fistl
push
jmp
adc
imul
sbbl
into
sbb
cli
sub
das
cld
or
mov
xchg
call
repnz
rclb
and
mov
xor
pop
jmp
out
fistpll
xchg
and
xlat
and
dec
push
sti
jg
mov
fisttps
fists
das
decl
mov
outsl
stc
dec
push
call
hlt
push
add
or
sahf
pop
jl
adc
and
pop
add
or
pusha
adc
and
mull
mov
mov
pop
or
push
inc
fidivs
pop
mov
push
imul
stos
movsl
jmp
jb
movsl
sbb
sti
in
fdivrl
lahf
repz
std
popa
dec
in
jns
mov
jb
add
pop
loop
outsl
outsl
jge
dec
inc
dec
ret
cwtl
sub
pop
sub
add
movsb
push
xchg
pop
or
jle
push
and
lock
insb
int
mov
mov
daa
lret
addl
shll
add
jmp
adc
push
das
cld
or
fs
ja
jmp
add
decl
sub
mov
enter
int
sbb
jne
mov
movsb
cmp
add
je
sub
sbb
sbb
data16
adc
mov
pop
inc
aam
icebp
clc
inc
ljmp
mov
data16
push
je
cmp
xchg
push
test
jmp
mov
in
and
adc
pop
dec
adc
add
leave
inc
sbb
push
adc
mov
outsl
sbb
pop
push
adc
mov
icebp
fisttps
adc
add
jne
and
nop
xchg
jbe
insl
push
std
ljmp
mov
mov
push
fldcw
sub
sbb
mov
pop
fcoms
sbb
add
push
pop
adc
pusha
sub
bound
push
incb
and
adc
movl
mov
mov
jbe
shld
hlt
inc
fwait
or
xchg
pop
enter
hlt
push
test
sub
sub
pop
inc
inc
nop
adc
idiv
call
mov
jge
add
mov
jecxz
aaa
loopne
shl
fs
mov
icebp
jnp
jl
inc
cmp
mov
jno
push
loopne
push
push
add
les
sub
cmp
cmp
pop
js
pushl
js
sbb
or
add
sub
mov
pop
or
push
mov
jg
lea
ss
pop
mov
je
std
outsl
rorb
mov
mov
or
in
lock
mov
adc
std
insl
push
shll
aam
mov
es
pop
out
jo
stc
jae
inc
pop
outsl
xor
cltd
or
mov
jne
mov
jg
pop
xchg
hlt
xchg
push
pop
mov
mov
sbb
xchg
mov
fwait
mov
adc
jmp
lock
ja
sub
add
add
rcll
pop
dec
stos
xor
mov
or
push
adc
add
jne
push
outsl
in
jle
mov
xchg
inc
push
or
cmp
cmc
ja
jl
jb
outsl
and
pusha
push
stos
push
xchg
imulb
arpl
test
xchg
push
insb
adc
lock
or
mov
mov
call
push
push
adc
ljmp
jno
inc
jb,pn
lock
fimuls
adc
pop
mov
jb
push
mov
jmp
push
cltd
pop
jae
adc
test
movsb
cmc
decl
mov
and
ds
mov
push
jecxz
fs
lret
outsl
xchg
sbb
add
push
push
or
cmp
and
mov
inc
iret
fwait
mov
mov
cld
xchg
mov
orb
dec
or
inc
inc
push
sbb
ret
dec
sub
xchg
sbb
sahf
adc
xor
mov
sbb
add
push
fcomps
mov
std
test
adc
cmp
adc
sub
jbe
mov
rorl
ror
rorl
push
pop
cltd
das
shrl
cmp
movsl
or
shlb
mov
repnz
sbb
idivb
daa
cmpsb
insl
test
or
in
dec
jg
test
and
and
or
adc
fwait
imul
cmp
adc
cwtl
push
stos
adc
das
sub
pop
adc
out
cmpsb
mov
out
add
decl
notl
adc
and
inc
nop
push
testb
clc
cmp
movsl
fcompl
sbbl
lods
scas
xor
nop
imul
mov
jg
ss
sbb
mov
push
into
popa
imul
insl
add
cld
test
out
test
sbb
je
dec
xor
xchg
std
cmp
sbb
imul
jae
cwtl
sbb
cli
pushl
lahf
aas
in
cmp
sub
cltd
pop
imul
and
mov
es
cmp
outsl
movsl
adc
xchg
sbb
mov
mov
in
lcall
adc
lods
inc
xchg
in
push
pop
ja
lahf
popa
jmp
inc
lret
aaa
loope
or
mov
and
movsb
rcrb
add
dec
jg
jg
bound
cmp
stc
js
mov
fs
jo
outsl
xchg
outsb
inc
pop
je
adc
adc
orl
mov
loope
adc
add
inc
mov
and
mov
xchg
cmp
clc
push
jb
jmp
mov
push
adc
stc
pop
test
lods
pop
pop
aas
dec
fdivs
push
nop
cmp
xchg
in
cmc
jle
aad
std
jg
xor
mov
xchg
add
sbb
mov
mov
cs
mov
xchg
mov
push
mov
out
push
add
and
mov
fimull
mov
mov
int
cs
loopne
int
xor
outsb
pop
push
iret
mov
and
out
lcall
push
movl
pop
lock
clc
xor
mov
mov
lods
jg
pop
repz
jle
mov
adc
scas
mov
push
stc
loop
jg
push
fs
pop
add
mov
xor
or
in
ja
dec
adc
pusha
mov
sbb
outsb
das
aad
or
mov
cmp
push
es
add
jne
mov
dec
xor
decl
add
es
add
mov
add
pushf
lods
mov
or
dec
fwait
enter
movsl
pop
sti
xchg
pusha
jl
and
push
ret
loopne
push
pop
cli
cmp
out
dec
xorl
std
in
call
dec
mov
jle
in
xchg
call
or
in
push
adc
cli
ret
lcall
adc
mov
fistpl
movsl
sub
inc
rcrb
inc
icebp
jmp
call
test
fistpl
pop
int
dec
call
inc
inc
enter
fwait
decl
fnstenv
insb
lret
enter
jmp
jb
data16
inc
loopne
int3
add
push
ljmp
in
lret
sub
or
mov
push
add
aam
or
test
or
xchg
xchg
fidivl
pop
push
lret
std
push
jg
cmp
and
and
in
xchg
add
and
fs
sub
xor
outsb
pop
adcb
cmp
dec
shll
sbb
and
pop
call
push
mov
or
in
das
scas
or
imul
loope
mov
lods
in
outsl
rcll
fs
popf
lret
sti
cs
popa
sbb
mov
adc
xchg
pop
loop
rcr
xor
out
inc
jmp
inc
rolb
je
nop
xchg
jge
cli
movsl
fbld
pop
jbe
stc
xchg
lcall
mov
outsb
int
or
cmpl
jp
mov
cltd
sbb
mov
fcmovnu
cmp
mov
movsb
and
sbb
mov
std
lods
arpl
fildll
nop
sub
xor
int3
and
bound
dec
call
insb
pop
loopne
jmp
dec
push
mov
sbb
mulb
hlt
das
pop
jbe
add
or
lcall
loope
into
mov
outsl
fsubr
jno
test
lret
stos
mov
cmpsb
enter
incl
sbb
jb
mov
add
cmp
add
ret
cli
insl
ja
aad
shlb
insb
adc
inc
mov
outsl
sbb
daa
push
fidivrl
ret
adc
adc
lds
ret
add
in
outsb
fbld
cmp
push
enter
mov
sti
fisttpll
flds
mov
pop
pusha
mov
adc
adc
mov
clc
mov
mov
mov
cmp
outsb
jbe
and
sub
adc
and
call
ja
imulb
clc
dec
adc
xor
not
fists
leave
mov
lahf
lea
ret
test
cmp
imul
sbb
movsl
enter
sub
dec
jmp
cli
pop
or
repz
cmp
testl
sub
adc
inc
adc
push
nop
outsl
adc
pop
fsubp
add
xchg
fdivr
push
xor
adc
sbb
lcall
or
xchg
cmp
mov
mov
push
sbb
mov
shlb
icebp
jbe
leave
icebp
mov
mov
xorl
sub
scas
jb
ss
xchg
and
adc
xchg
dec
loopne
mov
inc
and
pop
fsubr
mov
sbb
or
nop
add
std
out
jge
in
adc
bound
jmp
add
mov
stos
std
arpl
push
adc
sub
mov
shl
rcll
mov
mov
test
xor
cmp
cmp
or
fst
xchg
cmpl
push
jmp
shll
push
cmp
cmp
fiaddl
or
out
jg
pop
pop
pop
mov
lea
adcl
or
clc
and
cwtl
cmpsl
insl
mov
icebp
movsb
adc
popa
add
loopne
xor
es
adcb
dec
mov
das
fsubl
push
rcl
pop
push
inc
pop
aam
sbb
orl
push
or
test
jge
xor
je
movsl
pop
pop
js
les
and
cmp
add
push
arpl
mov
adc
andb
xchg
mov
nop
cmp
inc
add
mov
push
ja
jmp
repz
mov
and
test
xchg
mov
fistps
pushl
pop
pop
adc
insb
mov
insb
gs
add
decl
pop
adc
mov
jmp
dec
cltd
push
repz
mov
dec
xchg
mov
or
or
mov
shl
stos
outsb
or
loop
int
das
mov
lcall
inc
lret
adc
es
insl
sti
and
or
test
inc
xor
loop
fistpll
push
addr16
push
inc
rorl
cld
cmp
mov
arpl
xor
adcl
ja
mov
nop
std
test
mov
pop
mov
mov
notl
or
rorb
pop
cmp
aaa
pop
arpl
lret
add
cmp
sub
fstpt
xor
mov
fs
out
jnp
mov
cld
or
add
xchg
scas
inc
ds
pmulhuw
in
mov
cmp
sub
hlt
or
and
call
xchg
aas
lcall
dec
sbb
pop
jecxz
dec
je
mov
dec
ja
aad
push
inc
mov
in
and
fucomip
clc
sub
pop
sbb
test
out
xchg
rorb
mov
aas
insl
add
add
je
jg
scas
pop
inc
xor
sub
scas
inc
pop
lahf
in
or
add
in
dec
adc
lock
cli
pop
mov
jl
pop
jnp
mov
jp
pop
pop
stos
fildll
pop
sub
fsubrl
jne
jle
test
pop
loopne
jmp
imul
xchg
sbb
adc
fcmovbe
sub
mov
lcall
and
ret
jecxz
and
push
lods
cmp
sub
movsl
das
jne
nop
hlt
jae
xor
jbe
arpl
push
ss
lods
adc
ljmp
dec
or
cmp
or
icebp
dec
sti
xchg
fmul
dec
jmp
inc
jmp
inc
fstp
pusha
adc
in
hlt
test
mov
adc
leave
test
je
pop
cld
mov
jg
sub
mov
test
and
pop
mov
insl
sbb
add
loopne
es
dec
and
mov
inc
mov
pop
mov
lahf
ror
loop
push
in
cmpsb
iret
cmc
sbb
fstp
sub
cli
sub
mov
push
jno
push
scas
xchg
fcoms
or
subl
aam
jns
mov
cmp
push
jl
add
fistps
mov
push
outsb
lea
add
outsb
sub
jg
mov
push
repz
hlt
inc
push
adc
jnp
incl
mov
mov
movsl
mov
xor
cltd
inc
loop
dec
in
iret
addr16
stc
or
mov
dec
fcomps
xor
shl
push
mov
jne
int
aam
sbb
xchg
mov
sbb
jb
jle
or
or
inc
ljmp
adc
out
lahf
xchg
push
or
dec
sub
adc
push
test
je
add
and
cmp
jg
mov
and
sub
inc
push
bound
pusha
push
or
sbb
loope
aaa
call
es
sti
pop
xlat
lret
dec
mov
ja
mov
das
mov
repz
xchg
adc
and
pop
mov
push
xchg
adc
pop
repnz
or
mov
push
call
js
push
hlt
sub
outsb
loope
add
loopne
sahf
and
pop
je
dec
adcl
test
xchg
push
push
clc
xchg
clc
scas
cs
or
imul
aad
pushf
jmp
inc
test
push
jle
dec
sarl
arpl
ret
in
mov
jle
daa
sbb
loope
xchg
xchg
mov
in
adc
sbb
mov
scas
pop
je
sbb
call
addr16
call
aad
mov
popf
jo
xlat
jae
cld
movsb
pop
pop
call
push
mov
push
push
sbb
push
sbb
add
dec
jl
pop
ljmp
outsl
popa
xor
lock
mov
adc
hlt
xor
xor
lods
popa
cmp
inc
mov
rcll
inc
stos
or
jno
ret
addl
xchg
pusha
sti
jg
adcl
push
jbe
sub
lcall
sub
add
mov
fists
cmp
in
or
out
mov
lahf
js
das
push
push
loopne
fcmovne
aad
divb
jne
cmpl
aas
je
xchg
sub
sub
dec
mov
addb
xchg
jb
cmp
sbb
test
sbb
outsb
ret
sbb
outsb
das
insb
std
mov
andl
and
loop
add
sub
in
mov
rcl
mov
push
loop
adc
aam
scas
out
cmp
or
sub
push
mov
xchg
pop
xor
jo
sub
fstl
and
loopne
stos
shr
or
xchg
fwait
ret
das
mov
pop
and
in
pop
inc
and
insl
clc
dec
loop
lcall
xor
pop
jo
push
push
mov
lcall
fiadds
les
movsb
call
lods
mov
xchg
lock
or
mov
jmp
xorb
inc
clc
idivb
stc
add
adc
xor
or
lods
cli
xchg
ss
sub
insb
stos
pushf
xchg
dec
dec
call
mov
jl
pop
adc
pop
insb
or
out
sub
push
add
xor
fsubl
pop
mov
inc
lea
std
or
sub
and
jle
mov
in
inc
sub
test
outsl
push
push
adc
cld
rorl
sbb
jmp
dec
enter
sub
stos
mov
and
push
cmc
insb
sub
addr16
movsl
arpl
movsl
fists
lods
in
out
mov
sbb
xor
mov
jne
call
fbstp
test
decl
cmp
dec
test
lods
out
inc
xchg
xchg
mov
ljmp
xchg
inc
jo
or
or
mov
ret
out
aaa
imulb
jmp
sbb
movsl
pop
jle
jb
movsb
xor
cwtl
insb
insl
aam
jecxz
dec
cwtl
lock
jge
pop
outsl
fmull
mov
stos
or
sub
leave
fcoms
xchg
imul
sub
sub
push
bound
fimull
or
int3
outsl
rcrl
sub
xor
stos
fisttps
mov
mov
sub
seto
cltd
loop
outsl
or
movsl
sbb
sbb
dec
test
push
test
lock
leave
lret
cwtl
and
lods
mov
sbb
pop
loopne
bound
mov
clc
dec
mov
cld
arpl
dec
mov
js
sub
push
push
mov
mov
inc
dec
or
or
in
loop
inc
sbb
loop
dec
xchg
aas
adc
pop
pop
pop
xchg
mov
movsl
mov
mov
rcl
mov
ror
push
data16
and
mov
std
in
js
out
imul
xchg
xor
dec
rcrb
ja
push
add
sbb
leave
sahf
jb
and
push
pusha
test
fsts
shl
mov
and
xchg
xchg
push
pop
int
ds
mov
fbstp
sub
jne
fld
xchg
add
nop
adc
cld
xchg
mov
dec
mov
adc
cs
dec
jle
inc
mov
call
sub
sbb
insb
cld
mov
imul
xchg
dec
out
adc
inc
push
mov
popf
cmp
cmp
pop
or
and
test
mov
mov
xchg
jle
addl
xchg
sub
sub
mov
ret
push
mov
loopne
pop
into
and
ret
xchg
ret
insl
push
call
xchg
ficoml
cs
adc
mov
pusha
mov
movsl
push
and
adc
lret
inc
stc
test
jl
mov
outsl
insb
sbb
scas
jp
repnz
lods
test
xor
loopne
pop
arpl
cs
xchg
xchg
mov
jo
xor
shlb
mov
push
pushw
push
cmc
ja
jno
xchg
pop
cmp
or
fistl
loopne
fcomi
adc
dec
sbb
fldt
xchg
cld
mov
jmp
sti
outsl
fcoml
mov
jl
mov
xor
push
add
rol
sahf
adc
and
movsl
cltd
adc
insb
ja
test
adc
inc
xchg
shll
or
jmp
add
hlt
cltd
mov
xor
imul
fsts
mov
dec
mov
arpl
pop
push
pusha
in
aaa
mov
add
mov
inc
cltd
in
or
mov
inc
push
cli
pop
test
data16
sbb
lods
mov
push
adc
cld
inc
xlat
push
leave
push
rcll
cmp
fistps
xchg
imul
sub
jl
shl
fcmovnb
push
or
xchg
lods
insb
fnstsw
dec
mov
jb
add
xchg
inc
mov
cltd
pop
loope
incl
test
jmp
jle
add
popf
iret
adcl
pop
cli
jbe
lcall
fcmovne
or
sbb
gs
lret
push
test
stos
inc
and
cmp
mov
stos
rcrb
mov
gs
in
jo
cmpsb
movsl
inc
fbstp
or
pop
lcall
add
scas
xor
in
test
addr16
jmp
popf
xor
add
pop
jmp
push
fadds
jmp
and
mov
je
xor
xchg
xor
push
dec
xchg
outsb
in
fmulp
inc
push
push
pop
xor
mov
jp
sub
mov
divl
sub
push
cmp
clc
pushf
adc
nop
cmp
push
pop
cmpsb
out
pusha
xchg
dec
cmpsl
jle
mov
mov
mov
inc
cmp
add
fnstenv
sub
loopne
ret
bound
jb
push
rcr
xor
iret
aas
or
mov
fcoms
mov
mov
jne
push
add
jbe
sub
push
xchg
and
cmc
ret
cmp
fs
or
sbbl
xchg
xchg
sub
fcomp
mov
repnz
ds
fcoml
mov
push
mov
aad
mov
test
push
pop
cwtl
subl
cs
clc
pop
add
cld
inc
and
aam
cmp
pop
loopne
pop
int
adc
mov
repz
aaa
std
sbb
cmp
mov
mov
shrl
out
icebp
aam
ret
dec
test
mov
cli
ja
in
jne
popf
out
jo
ficoms
rcrb
ret
sbb
add
push
jne
push
xchg
call
push
cmp
js
std
pop
pusha
stc
adc
push
push
call
sbb
mov
pop
sbb
stc
mov
dec
mov
int3
mov
or
bound
pop
inc
xor
int
insb
and
adc
sti
dec
call
loop
jl
pushl
shll
xchg
mov
cltd
jne
mov
mov
adc
cmp
jbe
fdivs
xor
add
clc
jo
jo,pn
aaa
push
leave
mov
aam
js
or
mov
and
sbb
jmp
cmp
jp
clc
pop
outsb
jg
push
push
sbb
ror
aam
aas
loop
inc
cli
je
and
mov
and
cmp
xorb
call
fcmovbe
xor
xor
add
inc
loope
test
pop
xchg
xor
push
aad
pop
pushf
mov
pop
fdivs
out
imul
daa
push
or
popf
pop
jne
sbb
cmp
mov
call
test
adc
dec
add
call
mov
mov
dec
or
je
cmpb
pop
fidivl
in
or
enter
adc
sbb
pop
add
dec
adc
jo
fisttpll
dec
and
sbb
test
push
add
jecxz
outsl
inc
inc
or
pusha
dec
fildll
ljmp
mov
test
insb
jge
lds
test
insl
shrb
and
push
mov
mov
pop
call
jmp
lock
sbb
jmp
pusha
decb
xor
and
push
jle
fdiv
lods
and
call
and
rolb
xchg
add
jmp
ljmp
cltd
stos
push
outsl
fwait
mov
ret
mov
adc
pop
pop
add
cmpsl
cli
dec
aaa
jbe
dec
mov
or
lea
scas
pop
mov
add
and
cmp
jp
mov
pop
cmp
mov
push
jl
sub
setl
sbb
int3
jl
push
push
and
mov
cld
push
sbb
inc
dec
pop
cmp
jno
fs
push
xchg
and
pop
lock
or
daa
enter
and
fldl
sub
inc
jne
mov
and
pop
syscall
mov
adc
jne
sbbl
scas
mov
sub
adc
lret
rcll
adc
sar
mov
pushf
arpl
aas
flds
enter
push
mov
in
add
and
xchg
pop
lahf
lcall
stos
stos
int
in
lods
aad
inc
test
out
lock
aas
cmpsl
divps
out
jb,pt
pop
icebp
fwait
mov
add
aam
xor
push
sub
shll
jae
add
pushf
shlb
jg
fcmove
shll
sub
mov
inc
test
clc
idivb
xchg
push
loope
inc
xchg
mov
pushl
push
jmp
fsts
je
int
xor
lea
aad
lock
xchg
jns
push
ljmp
adc
and
jo
push
xor
sub
mov
lahf
lret
popa
test
cmp
iret
cld
aaa
mov
and
cmp
jg
mov
movsb
mov
fists
jbe
mov
add
sub
mov
push
std
ret
decl
movq
subl
fs
out
jb
cld
xor
push
adc
mov
fiaddl
ss
mov
mov
nop
lock
mov
arpl
or
in
sub
les
and
subb
sbb
pop
and
mov
xor
in
mov
pop
adc
bound
pop
or
outsb
jnp
add
mov
xchg
jl
mov
jle
xor
fcmovnu
push
insl
shl
ficoms
jnp
fcmovnu
xchg
and
divl
sbb
movsl
shll
insb
addl
hlt
adc
lret
add
or
xchg
imulb
xchg
popa
mov
icebp
sti
mov
test
sbb
or
inc
add
mov
add
fdivrp
or
lea
cmp
mov
cmpsb
dec
dec
in
and
insb
popw
mov
nop
pushf
jle
in
cwtl
push
pop
lds
lcall
daa
cmp
mov
push
mov
mov
sarl
mov
js
sti
mov
mov
movsb
push
mov
mov
sbb
into
sar
daa
cmp
lock
mov
add
out
xor
dec
xchg
lods
and
xlat
fimuls
es
push
stc
sub
out
repz
mov
sub
enter
adc
repnz
fidivl
fwait
jg
fadd
test
fistps
or
out
in
lock
fstps
lret
lock
loop
add
outsl
jge
mov
and
sub
add
imul
push
je
movsl
inc
loopne
push
shlb
gs
aaa
cld
outsl
pop
inc
das
mulb
inc
fs
pushf
sub
xor
lds
mov
and
add
add
fidivrs
sbb
mov
or
cmp
rcrl
fsubl
mov
aad
int3
aas
dec
add
cmp
dec
xchg
add
add
push
and
out
pop
mov
jg
inc
mov
jne
push
adc
or
jbe
jmp
fnstsw
sub
xchg
dec
mov
ret
add
mov
cmpb
mov
jmp
xor
push
call
adc
pop
xor
and
pop
mov
in
jp
jmp
adc
adc
in
pop
mov
adc
test
fs
xlat
in
jp
in
ss
mov
push
jnp
rclb
cli
xchg
icebp
jbe
nop
loop
mov
add
and
rcll
inc
call
imul
lret
sub
daa
dec
outsl
push
or
mov
mov
jae
test
ds
scas
out
js
push
or
clc
adc
movb
aaa
addr16
or
and
lods
mov
les
cltd
and
xchg
or
fistpll
mov
cmp
out
outsl
dec
inc
outsb
cli
cltd
cmp
insl
je
jae
or
jp
test
inc
aam
sbb
ret
nop
adc
das
in
and
mov
and
inc
aaa
mov
test
jp
xchg
and
scas
cmp
add
stos
adc
imul
cmc
icebp
push
pop
xor
dec
jne
shrb
lcall
mov
inc
push
push
inc
je
pop
clc
outsl
hlt
ljmp
ret
lret
cs
lea
hlt
and
jo
int3
mov
push
add
aam
insl
inc
pop
jg
or
and
pop
jo
cmp
add
mov
push
push
xchg
sub
test
aad
pop
hlt
cmpsb
mov
insb
pop
and
xchg
jmp
mov
jo
repz
jb
mov
pop
or
insl
jnp
call
imul
inc
fistpl
cmpsl
mov
inc
and
cwtl
push
shl
negb
pop
call
xor
mov
mov
movl
adcb
jl
add
mov
mov
daa
adc
push
popf
and
pop
call
ret
fsubr
xor
or
jbe
or
aas
adc
mov
mov
mov
pop
ss
and
mov
mov
lea
and
dec
sub
mov
fistpl
data16
and
and
mov
fwait
lods
icebp
lret
ret
repnz
mov
jge
mov
lock
iret
cmp
fs
mov
jge
or
mov
adc
aad
jmp
and
inc
ja
fidivl
insl
mov
in
fsubrl
mov
mov
jl
ret
pop
insb
and
mov
sub
mov
cmp
mov
pop
push
ret
aas
mov
cli
ret
inc
sub
cmpsb
cmp
shll
pusha
adc
pop
fiaddl
pop
xchg
sahf
sbb
lods
mov
dec
pop
jmp
cs
ds
jbe
mov
mov
xchg
jb
fildll
adc
mov
pop
adc
test
mov
loope
sbb
nop
inc
xor
outsl
fst
add
stc
cmpsb
add
or
add
outsl
outsl
ljmp
cmp
fdiv
daa
mov
insl
fdivl
dec
out
shr
sbb
rcr
inc
cli
cwtl
and
dec
mov
add
in
mov
mov
fsts
out
jbe
inc
ret
push
loope
cmp
dec
jge
xchg
leave
xchg
das
rorb
push
insb
mov
dec
lret
lods
out
pop
orb
jle
stos
rolb
outsb
test
sbb
jmp
push
in
ret
xchg
push
je
dec
mov
aas
dec
fwait
bound
xor
push
adc
mov
sbb
push
rcrb
cld
ret
xor
adc
push
xor
cmpsb
testl
adc
xor
pop
mov
xlat
inc
test
cmpsb
push
cmc
js
fidivs
lea
pop
dec
enter
sub
cmp
loop
jnp
push
imul
fs
add
push
jle
sub
jb
dec
cli
ss
mov
in
cltd
pop
mov
sbb
dec
push
add
imul
mov
jl
shlb
and
mov
push
mov
dec
push
aaa
mov
mov
inc
dec
push
xchg
pop
clc
cmpsl
sub
int
stos
add
adc
mov
jmp
sub
cmp
das
test
sub
je
sub
xlat
mov
rorl
incl
pop
js
outsl
push
sbb
sbb
mov
jle
push
mov
in
mov
scas
dec
loop
jae
push
lods
sbb
xchg
inc
jns
fdivp
xchg
jp
aad
mov
dec
out
inc
sarb
fwait
cmp
push
mov
rorl
mov
pop
mov
sub
dec
js
pop
loope
arpl
dec
mov
outsl
cmc
or
xor
xchg
sbb
ret
add
dec
test
imul
inc
cmpsl
jle
out
lods
std
lea
pop
enter
out
dec
adc
push
push
or
sahf
and
jecxz
mov
push
mov
lods
jle
jg
push
imul
mov
mov
jne
shr
mov
cmp
das
mov
and
mov
inc
dec
mov
or
or
outsl
loopne
mov
test
push
cltd
and
cmpsb
sar
fistpll
adc
adc
sahf
jo
jle
or
subl
pop
fadds
ret
xor
out
lcall
jg
pop
loop
and
lea
cli
dec
je
dec
jne
mov
inc
clc
shrb
pop
fadds
jbe
call
in
sub
mov
pop
jae
lret
inc
or
or
cld
push
or
or
test
mov
jmp
mov
stc
mov
adc
pop
or
inc
jns
aam
jne
dec
mov
mov
inc
jp
iret
cmp
mov
adc
cld
and
pop
imul
fistps
in
bound
push
inc
cld
mov
or
mov
mov
add
sbb
pop
push
xor
shrl
inc
mov
mov
test
in
inc
mov
cs
add
cmp
or
jp
sub
rcr
or
cmpsb
dec
loope
and
mov
scas
icebp
sti
jle
dec
std
mov
mov
clc
xchg
sti
aas
loope
cvttps2pi
push
pop
rorl
inc
dec
movsl
jmp
pop
sbb
sahf
std
and
sbb
sti
fs
adc
sbb
call
cmc
sbb
sub
sub
mov
lods
jg
andl
adc
loopne
mov
inc
xor
test
jbe
adc
cmpsb
repz
das
mov
push
mov
mov
popf
push
add
out
iret
inc
mov
mov
rcrb
imulb
mov
mov
lock
aam
cld
rcr
rcr
xchg
jecxz
cmovb
leave
inc
cltd
orl
jmp
or
adc
dec
sub
pusha
push
push
je
cmp
adc
xor
insl
push
or
mov
icebp
or
leave
mov
pop
sbb
sbb
out
sub
movsl
fldl
adc
xchg
or
inc
fisttps
jbe
xor
mov
repnz
jl
inc
movsl
sbb
fdivs
inc
leave
rclb
xlat
outsb
and
sbb
int
cltd
ja
push
xchg
mov
mov
xorb
mov
inc
or
popl
push
testb
aas
add
adc
sub
insb
std
jp
pop
fs
pusha
xchg
mov
test
jle
popa
jmp
sbb
mov
cmc
mov
daa
in
out
mov
out
or
mov
ror
insb
test
test
jbe
jl
shll
arpl
and
in
outsl
bound
pop
jmp
mov
imul
insl
mov
lahf
dec
cmp
stos
inc
stos
push
stos
lret
inc
ret
je
das
cmp
sbb
pop
outsb
sub
jg
adc
inc
or
leave
mov
leave
and
pop
pop
sub
fbstp
lcall
add
popa
push
sbb
stc
call
add
jp
stos
aad
jmp
pushl
dec
sub
ret
pop
in
stos
xchg
popf
xchg
mov
push
data16
push
call
insl
call
ret
and
adc
ds
adc
mov
push
jb
jg
mov
rcrl
fcomps
ja
pop
fcmovnb
pop
cltd
into
movsl
ds
lret
and
and
inc
sbb
dec
and
loope
jle
shrb
bound
and
pop
adc
adc
inc
in
inc
cmp
xor
scas
stos
jg
pop
pop
pop
enter
shll
insb
jecxz
addr16
int
in
fstp
ret
pop
push
sbb
les
xchg
divl
push
mov
insl
jns
xchg
cmpsb
jp
adc
insl
hlt
ror
es
adc
loopne
imulb
clc
ja
inc
or
sbb
cmp
lret
or
add
cld
stc
movsb
adc
pop
xchg
mov
repnz
push
xchg
push
add
mov
lods
enter
cld
sar
add
aam
or
fists
push
jg
or
or
out
pop
imul
mov
cmpl
jne
loop
adc
inc
fildl
mov
sti
ss
fistpl
mov
sbb
sbb
adc
fsubrs
jge
test
jmp
pop
lret
xchg
loopne
mov
loop
mov
test
add
adc
jmp
mov
je
notl
lea
inc
jnp
lcall
push
or
adc
cmc
or
hlt
sub
mov
mov
push
pop
cmp
mov
lods
test
adc
inc
aas
or
hlt
out
fimull
push
shrl
dec
dec
mov
pop
sahf
pop
xor
fisubrs
or
jne
mov
dec
ret
and
mov
pop
push
jmp
clc
dec
insl
mov
sbb
jg
push
call
jle
mov
xor
cmp
std
adcl
cmp
into
jp
fmull
jle
xchg
jns
inc
fisubl
adc
sbb
movsb
and
lods
mov
push
pop
inc
movsb
mov
loopne
sub
jo
lock
pop
lock
out
aaa
xchg
adc
cld
sub
pop
jge
aas
adc
insl
mov
lahf
or
jno
adc
push
cmp
test
push
test
pop
jnp
clc
ljmp
add
bound
inc
jne
data16
gs
mov
mov
and
jmp
jnp
subl
mov
mov
scas
mov
ret
pop
inc
movsb
scas
or
hlt
sub
or
mov
fistl
in
mov
pop
or
adc
sbbl
clc
lea
mov
pop
lock
sbb
adc
push
mov
sub
test
out
stc
mov
jnp
sbb
std
lret
adc
jge
cmpsb
mov
inc
push
call
and
icebp
push
arpl
sarl
xor
xchg
fistpl
xor
outsl
push
subb
adcl
push
js
rcrl
call
out
mov
or
push
push
popa
or
scas
mov
mov
push
aas
cmp
cmc
jne
ret
mov
mov
adc
pop
pop
fsubrl
sti
lds
gs
dec
roll
aas
and
jnp
mov
adc
inc
rclb
sbb
pop
outsb
outsl
aam
dec
and
inc
call
adcb
adc
mov
lret
and
jmp
gs
pop
outsb
mov
jbe
dec
pop
pop
push
je
cs
jecxz
fbstp
scas
jo
mov
ja
lock
loop
push
cli
fimull
std
stc
in
sub
xchg
lock
or
pop
mov
adc
pop
fwait
or
jne
mov
aad
out
jbe
adc
loopne
and
std
sbb
pop
cmpsl
stc
sbb
shrb
cld
add
and
outsb
pop
dec
pushf
jae
ss
pop
mov
mov
test
jg
add
call
dec
outsl
clc
js
js
dec
and
jbe
vcvtsd2si
xor
lock
sarl
js
dec
in
rclb
imul
xor
jl
das
pop
cmp
aad
das
lret
imul
lret
mov
out
cmc
or
frstor
mov
adc
dec
mov
add
sbb
add
rcrl
jg
dec
js
cmpb
fcmovnu
cmp
out
outsl
pop
addr16
or
cmp
inc
cld
call
cmp
pop
fcoms
stc
cmpl
fwait
push
mov
mov
sbb
jbe
movl
mov
adcl
movsl
clc
loopne
sub
js
cs
sti
add
ret
es
rcrl
dec
insl
lods
mov
out
and
jle
faddl
mov
inc
mov
mov
jae
and
xchg
shll
jge
insb
nop
notl
sub
dec
insl
cld
push
push
lcall
out
int
std
xchg
cwtl
call
adc
decl
outsb
push
xor
dec
outsb
and
iret
cmp
shlb
lock
push
aam
iret
mov
insl
and
lods
mov
call
sbb
ret
icebp
dec
std
addb
jmp
push
sub
pop
ss
sbb
push
push
push
lds
ja
mov
scas
mov
cmp
out
loopne
rolb
scas
mov
sub
push
cwtl
fs
decl
mov
out
imul
cmp
or
push
pop
jno
or
jge
sahf
bound
or
popf
push
push
clc
mov
jo
adc
icebp
dec
jg
jae
sahf
mov
jmp
add
add
jns
jl
or
cs
cmpb
dec
or
sub
add
jne
jle
sahf
fcom
dec
ror
testb
push
add
xchg
fmulp
aas
mov
dec
dec
cmp
and
aaa
inc
add
roll
cs
push
xchg
cli
inc
and
add
jns
loope
cmp
or
mov
dec
orb
jge
jnp
and
sbb
pop
push
push
scas
xor
loop
pop
sub
or
rcll
xchg
daa
inc
lret
sub
jae
movsl
les
js
mov
jnp
fldenv
bound
dec
jnp
lret
dec
adc
outsb
jl
test
or
sbb
cmp
push
out
sub
imul
or
dec
idiv
cmp
mov
stos
out
xchg
lahf
ss
push
cs
cmp
push
dec
adc
sub
mov
fdiv
add
subb
push
ret
add
push
add
clc
jle
pop
sub
cmp
and
ret
push
fisttps
in
das
add
out
mull
push
jle
std
lods
les
je
movsb
pop
push
or
pop
mov
ret
ds
fs
add
inc
movsb
call
inc
cmpsb
jle
decb
mov
ret
adc
pop
dec
sub
mov
inc
loop
mov
sbbl
sbb
imul
sub
in
or
jbe
push
std
pop
mov
sbb
or
clc
cmp
or
cmp
pop
xor
xorl
int
and
rdtsc
adc
iret
sar
into
add
repz
jns
push
out
jno
std
inc
mov
add
or
jne
mov
roll
add
mov
sarb
jno
out
jnp
lret
cli
ret
test
fimuls
mov
outsl
inc
sbb
out
cmp
mov
mov
xor
cs
aaa
mov
fdivr
call
sub
sbb
popa
add
out
imul
test
adc
add
movsl
pop
xchg
in
mov
inc
jmp
divb
hlt
sbb
xchg
cmp
mov
ds
dec
les
test
sbb
mov
jle
or
cltd
dec
fisttpl
jmp
insl
lods
nop
mov
cmp
adc
sbb
adc
jle
aam
xor
mov
sbb
ljmp
sbb
stos
xor
test
push
mov
repnz
pushf
pop
leave
fcomi
fistpll
jne
push
xchg
sub
or
xor
aam
dec
ret
sahf
incl
fsubr
lahf
lret
pushf
push
cmp
dec
dec
mov
enter
and
sarl
js
ret
insl
std
and
cmp
loopne
push
and
sbb
mov
fisttpl
loopne
push
xorl
push
jns
mov
inc
movl
xchg
imull
push
or
jp
push
out
jo
clc
mov
xor
add
push
les
bound
ret
arpl
xor
decb
outsl
ret
rcll
insl
pop
aaa
loopne
mov
push
jno
mov
sub
sub
out
mov
push
jo
push
mov
add
aam
jb
enter
jl
pusha
out
push
rclb
in
sub
leave
arpl
add
sbb
minps
daa
sbb
jbe
push
ss
add
add
sbb
dec
inc
ret
mov
cmp
pusha
mov
loope
sbb
dec
jp
or
jge
add
shlb
pushf
adc
hlt
hlt
in
or
lds
mov
xor
pop
inc
or
cwtl
iret
xchg
mov
adc
in
xor
and
jecxz
add
call
iret
adc
shl
add
shll
aad
loopne
adc
lock
mov
cli
add
scas
call
mov
mov
loopne
or
dec
test
pop
es
call
sbbb
out
mov
ds
mov
ss
add
xchg
fcompl
xor
bound
mov
test
lods
orb
and
pop
push
push
sub
mov
shl
add
ja
push
push
dec
cld
mov
jle
das
jno
mov
iret
cmp
xor
dec
cmp
pop
test
ret
push
inc
or
loop
mov
cmpsb
hlt
ljmp
mov
nop
out
sarb
cmp
lods
or
push
mov
adc
fucom
adc
cmpl
pop
mov
pop
pop
in
ds
call
movhps
ret
add
call
outsb
cmpsb
lret
mov
xchg
xchg
mov
inc
push
cwtl
mov
leave
inc
shr
out
std
cmp
mov
xlat
aas
sarb
dec
add
mov
daa
jp
push
adc
les
notb
mov
fcoms
ss
mov
mov
shl
inc
in
insb
enter
cmp
push
loopne
dec
ret
fistpl
xlat
loopne
shr
sbb
pop
clc
lock
jae
loopne
test
rorl
cwtl
mov
mov
xchg
stos
rcrb
push
lea
movsl
add
aad
loop
arpl
mov
add
push
mov
pop
or
jbe
imul
add
call
lahf
int3
mov
dec
sub
sti
test
loopne
sub
jno
push
xchg
loop
or
in
fs
adc
scas
push
aam
cltd
cmc
mov
ret
outsl
xor
lods
cltd
dec
mov
aam
add
dec
cmp
jb
dec
pusha
or
mov
mov
and
dec
mov
das
lea
xchg
and
lret
xor
addl
sar
xor
stc
inc
pop
pop
pusha
and
in
or
imul
test
ljmp
mov
xor
cmp
or
mov
and
mov
push
push
fdivp
cltd
fnstsw
dec
lock
cli
and
jae
outsl
imull
xorl
sub
aad
aaa
fadds
stos
movsb
push
lock
or
std
jecxz
aas
mov
sub
add
or
mov
ds
cmovge
jl
jmp
orl
jbe
xor
adc
dec
pop
stos
sbb
je
std
rcl
lret
sar
and
lods
imul
lds
inc
lret
jmp
popa
stos
lahf
jnp
inc
or
and
xchg
or
inc
ja
stos
mov
adc
into
xchg
xor
mov
sub
xor
mov
jecxz
mov
call
cmpsb
pop
adc
test
insl
push
sub
mov
adcb
call
cmp
inc
or
sbb
sarb
std
aaa
push
mov
bound
test
or
testb
adc
inc
add
mov
stos
dec
add
push
insl
xor
push
push
push
into
daa
in
fcmovb
mov
lea
jl
xchg
scas
cld
push
mov
cmpsl
stos
cmp
cmp
jl
call
pushf
or
sti
or
jmp
addb
sub
and
pusha
pop
out
lea
sbb
adc
inc
adc
rcr
pop
icebp
jmp
xchg
test
xchg
adc
pop
cmp
sti
in
push
mov
shll
cmpsb
arpl
insl
mov
xchg
mov
and
adc
das
mov
fwait
push
sbb
push
fsubr
mov
hlt
adc
fsubrs
xchg
out
int
shl
or
daa
or
jge
push
xor
loope
pop
shr
mulb
notl
lods
sub
icebp
mov
shl
or
unpckhps
sub
jle
sbb
xor
sbb
dec
push
push
cmp
pop
scas
outsl
sar
scas
mov
xchg
movsb
add
not
mov
adc
push
add
lcall
ds
movb
mov
mov
fwait
das
sarl
xlat
cmc
lock
add
mov
sub
cli
adc
xor
sub
loopne
dec
fnsave
push
gs
ret
mov
scas
push
fbstp
jg
int3
lods
xor
popa
notl
xchg
adc
data16
dec
or
mov
xchg
test
cmp
scas
mov
clc
arpl
pop
jo
ret
repnz
add
add
sub
push
loop
cmp
hlt
xor
sub
mov
adc
mov
push
or
pop
test
call
je
in
cs
fs
aam
call
and
cld
outsl
fildl
add
mov
hlt
xor
testb
enter
fs
push
jmp
ret
je
pop
push
lret
fs
cmp
adc
mov
mov
push
outsl
loopne
mov
and
pusha
jne
scas
lds
pop
or
and
imul
or
and
jns
mov
das
mov
dec
inc
hlt
shlb
lock
ret
xor
clc
mov
loope
out
jmp
sbb
ret
movsl
je
frstor
pop
ret
push
add
mov
xchg
scas
pushf
out
fildl
data16
daa
out
jge
pop
mov
test
mov
cmp
push
sti
test
add
fnsave
mov
sbb
aam
mov
cli
andb
fnstsw
add
mov
push
and
dec
movsb
inc
std
testb
mov
mov
push
xor
in
fcmovbe
adc
out
repnz
in
inc
push
adcl
mov
das
mov
adc
icebp
lods
test
mov
add
sbb
addr16
xchg
xor
or
nop
push
pop
push
fmuls
xor
add
cli
push
fildl
jae
mov
lcall
mov
cmp
and
adc
xchg
test
mov
adc
imul
xorb
mov
imul
lea
cli
adc
flds
ds
scas
and
lahf
cltd
xchg
fldenv
rol
out
repnz
call
int
xchg
mov
mov
loop
in
mov
insl
icebp
jg
aaa
inc
loope
pop
dec
pop
add
cmp
clc
popf
imul
push
sub
das
mov
mov
or
pop
xchg
stos
leave
mov
jb
inc
mov
and
or
ret
fcomip
leave
sbb
jp
pop
fistps
data16
pushf
hlt
and
sub
add
sub
jbe
das
or
stos
or
push
mov
or
adc
fisubrl
les
outsb
and
rorl
pop
mov
pop
xor
or
pop
mov
adc
fucomp
mov
adc
es
imul
xchg
sbb
aaa
xor
scas
loop
iret
xor
jl
enter
mov
mov
push
movsl
clc
push
call
adc
mov
mov
push
and
push
sub
scas
mov
sahf
aas
fidivrl
lods
push
arpl
inc
call
repz
clc
xlat
stos
in
sub
sbb
pop
int3
leave
pusha
jae
inc
insb
and
push
and
mov
push
and
jmp
xchg
out
adc
xor
fadds
jl
cmp
adc
push
iret
jge
xor
or
stc
cmp
in
sbb
xor
in
cs
push
adc
insb
sub
xchg
xchg
fisttps
mov
jno
stos
xorb
cmp
mov
dec
pusha
shlb
mov
dec
jno
jg
push
movsl
add
adc
push
xor
shrl
out
movsb
fs
add
fwait
or
xor
cmp
or
xchg
or
sbb
push
loop
push
pop
xchg
xor
pop
popf
pushf
xchg
cltd
inc
into
and
pop
push
pop
aam
or
and
sub
and
lret
ror
lods
push
and
inc
cmp
jbe
sbb
sbb
jge
das
pop
jecxz
fistpll
cwtl
pop
adc
jle
lea
ds
xchg
outsl
inc
cmpsb
mov
cwtl
jmp
outsb
imul
mov
gs
adc
sarb
mov
cld
inc
ljmp
lea
aam
inc
ret
stos
add
inc
sbb
movsl
cs
sub
jne
ss
mov
test
add
in
sti
imul
int
out
and
mov
xor
sbb
dec
inc
and
mov
push
push
jo
adc
mov
sub
out
outsb
fstl
xchg
int3
ss
rorl
pop
adc
cld
int
in
cli
lds
insl
js
sub
jns
jae
pop
mov
loope
inc
cmp
push
mov
inc
cmpsb
cs
movsl
clc
mov
and
rcr
insl
jmp
call
test
jg
jnp
cmp
xchg
or
jae
and
cmp
lahf
fistpl
jle
cmp
loope
xchg
sbb
mov
bound
xor
sbb
lret
sbb
fstl
add
xchg
xchg
ret
mov
lds
inc
xor
inc
or
mov
fmuls
sbb
outsl
inc
sti
pavgb
and
in
pushf
mov
lea
inc
and
or
jbe
mov
mov
iret
add
pop
fadds
loop
adc
adc
adc
lock
push
pop
sub
sbb
mov
ret
insl
dec
popa
gs
jg
and
lea
notl
lahf
mov
add
pop
out
push
shrb
jbe
les
lock
cli
test
and
and
dec
mov
jg
push
jge
jmp
sbb
mov
dec
dec
and
xor
jno
fisttpl
aaa
loopne
inc
xor
xor
lahf
test
in
lret
pop
ds
push
sub
scas
call
in
negl
les
mov
sub
shlb
jbe
lret
lods
and
or
or
inc
jg
ret
aaa
xchg
jecxz
or
adc
sbb
shlb
mov
and
jae
xchg
sbb
loopne
imul
push
cli
lret
mov
mov
mov
jle
jo
lods
jmp
mov
hlt
xchg
sti
xchg
and
popa
cmp
sbb
push
mov
add
push
and
aas
cmp
addl
jbe
cmpsl
mov
push
mov
sbb
in
scas
popf
adc
push
fs
ljmp
push
subb
jbe
fucomi
jp
sbb
icebp
mov
das
push
mov
fisubl
insb
mov
fucomip
or
jp
lret
jne
jo
mov
sub
hlt
and
cmp
mov
arpl
cmp
jbe
addr16
ds
popa
xchg
hlt
cmp
xchg
mov
push
pop
xor
and
std
cmp
in
shl
add
push
mov
dec
mov
loopne
test
loop
insb
and
xor
adc
xchg
jbe
push
cmp
fiadds
adc
lcall
pop
rolb
fwait
xchg
push
jle
out
cmp
jbe
and
jb
pop
inc
das
nop
or
lock
arpl
pop
cli
sub
sub
pop
stos
fdivrs
mov
daa
or
mov
or
sbb
sbb
mov
dec
in
data16
sbb
push
push
outsb
cmp
push
test
sahf
cmp
aaa
dec
cmpsl
mov
cmpl
lods
or
ror
and
loope
xor
cli
fdivrl
pop
mov
or
or
sbb
add
jl
in
and
outsl
in
cli
enter
out
xor
inc
sbb
mov
test
or
or
pushf
ds
in
inc
negb
push
and
es
sahf
cmp
jge
ljmp
add
aas
ffreep
hlt
xlat
adc
dec
pushf
dec
mov
test
rolb
daa
or
xor
xlat
mov
jne
xchg
dec
or
cmp
mov
push
push
test
mov
fstpt
add
popf
je
mov
cmp
popf
fcomp
test
jne
sub
sub
jg
xor
and
clc
test
mov
pop
in
and
int3
add
mov
pop
js
js
add
jae
cwtl
cmp
push
add
inc
pop
add
dec
jb
loopne
hlt
lods
or
mov
std
es
add
xlat
adcl
je
insb
or
adc
xor
cld
or
cmp
ret
mov
jae
pop
mov
testb
jne
adc
xor
push
jo
aas
adc
sbb
jg
fisubl
jno
andl
push
push
std
mov
jb
dec
dec
pop
fcmovu
and
xor
in
leave
std
cmp
push
add
icebp
xor
in
push
movl
push
jmp
mov
pop
lcall
call
mov
jne
insl
push
int3
enter
xlat
aaa
sarl
das
or
inc
insl
inc
repz
gs
cmpsb
pusha
cmp
icebp
push
sub
fstps
and
ret
jecxz
push
and
cmpb
pop
cmp
push
mov
ret
bound
dec
xor
addb
hlt
in
pusha
or
dec
call
cmp
scas
mov
xchg
imul
lret
adc
fistpl
jle
sbb
mov
xor
inc
ja
xchg
xchg
cmp
lcall
adc
jge
loope
or
push
inc
jg
mov
xor
and
outsb
ret
repnz
aas
test
arpl
insl
cmp
sbb
int
clc
mov
mov
mov
xor
es
lea
jmp
jo
jnp
add
cmpsb
xor
ljmp
pop
cwtl
test
pop
xor
sub
js
out
mov
dec
lods
mov
shll
outsb
add
aaa
jl
test
cli
adc
psrlq
cmpsl
out
sbb
or
xlat
push
and
lods
pop
xchg
cs
xchg
and
hlt
jbe
sbb
add
xchg
adc
xor
inc
int3
lods
pop
jo
push
dec
fsubs
je
fimuls
jno
cmp
xchg
sbb
dec
push
sbb
enter
imulb
ljmp
adcl
pop
ror
inc
mov
stc
stc
popl
ljmp
repz
xchg
jbe
xor
enter
adcl
or
jbe
pusha
cmp
and
push
test
xchg
add
enter
adc
jns
push
rcl
push
aam
sub
push
inc
inc
xor
add
jae
add
xchg
jbe
outsb
movsl
arpl
add
outsb
dec
or
cmpb
xor
sbb
hlt
pusha
fcomi
mov
cld
inc
fsubl
test
mov
sar
push
jp
test
sahf
in
xor
pop
cmp
sbb
or
push
add
lock
or
and
inc
mov
in
and
adc
xchg
push
insb
cmp
mov
jle
and
xor
roll
jp
iret
inc
dec
out
cmp
pop
mov
add
andb
aaa
outsb
insl
insl
icebp
mov
mov
scas
dec
adcb
ds
ret
and
enter
aaa
clc
inc
pusha
pop
xor
lret
cmp
jge
xchg
stos
cmp
pop
jne
xlat
and
scas
adc
jp
pop
sub
icebp
inc
jo
rcrb
jnp
decb
insl
insb
jge
xor
inc
pop
jecxz
mov
mov
and
jne
mov
mov
mov
mov
dec
shr
or
mov
adc
mov
mov
fcom
mov
pop
xor
push
mov
fsubl
test
or
or
outsb
in
dec
jno
ja
ljmp
add
inc
aam
jbe
adc
sub
mov
adcl
in
mov
dec
orps
push
xchg
pop
cld
push
pop
movl
shrl
faddl
inc
fiaddl
xor
xchg
movsb
test
lock
das
pcmpgtb
jp
outsb
mov
jbe
xchg
cmp
fs
mov
in
dec
adc
fidivs
mov
push
jmp
and
aad
loop
fldl
adc
inc
xor
lods
test
mov
xchg
les
mov
mov
je
sub
xchg
enter
xchg
inc
dec
arpl
decb
mov
mov
xchg
and
or
ret
cmpsl
pop
or
mov
stos
test
insl
jp
mov
cmp
das
scas
fcomp
jle
sub
add
cmp
jg
out
adc
cld
or
jne
lods
mov
lods
pop
xchg
je
xor
std
add
movsb
ljmp
mov
cs
jg
cmpl
or
xlat
dec
cmp
cmp
sub
addb
inc
push
push
repz
leave
inc
pushf
adc
fcmovbe
aam
inc
ds
push
and
js
test
je
arpl
sub
mov
push
jne
bound
aaa
mov
lea
mov
inc
adc
pop
adc
jl
xorl
push
mov
daa
push
fstpt
es
ficompl
pushw
stos
or
into
push
subl
push
lcall
sub
enter
jno
lock
in
and
mov
jb
insl
std
in
fadds
pop
cmp
stos
sarb
cld
in
cmp
ljmp
rcrb
movsl
cwtl
sub
push
pop
lahf
outsb
rclb
xor
dec
push
mov
mov
stos
sti
daa
aam
rep
lock
sub
inc
jb
cwtl
mov
jg
push
std
sbb
add
mov
enter
mov
cmp
in
movsb
cmp
cmp
xor
rclb
lret
pusha
sbb
movsl
jo
pop
inc
mov
jno
mov
scas
xor
push
sbb
stos
orl
mov
jne
loop
sbb
sbb
jne
scas
xor
cmp
xchg
leave
out
movsl
xchg
jo
cmpl
xor
xlat
or
call
lcall
subb
les
out
push
lock
mov
sti
test
fcmovnbe
test
divl
jp
iret
xchg
adc
bnd
cs
mov
nop
cmp
jno
rclb
add
dec
xor
xor
dec
leave
mov
push
pop
shlb
cs
enter
scas
dec
push
and
stc
test
xor
adc
mov
mov
sub
int
movl
sub
int3
test
sub
or
xchg
dec
and
jns
cmpsl
iret
aas
xor
lcall
sbb
ljmp
lahf
push
inc
jg
repnz
arpl
xorl
cmp
cli
or
shll
jl
add
ja
js
andl
cmp
push
push
out
and
add
imul
rcr
or
mov
in
ret
pushf
fwait
add
sub
inc
jbe
inc
xchg
jbe
cli
sub
push
fiadds
push
jl
inc
imul
aam
jne
scas
jbe
sbb
push
jno
xor
pop
out
inc
add
inc
ss
xor
xchg
and
fnsave
pushf
sbb
and
imulb
aas
push
dec
mov
sbb
xor
pop
and
loopne
subb
and
jo
rolb
mov
sarb
mov
inc
int3
test
jl
cmp
or
mov
inc
sti
das
jne
ja
ljmp
aaa
vmovaps
pop
mov
mov
test
lahf
es
orl
pop
lock
push
push
and
pop
ret
filds
inc
insb
mov
sbb
xchg
fildl
cltd
add
test
in
insl
jae
push
ret
jmp
lods
cmp
in
inc
push
loopne
outsb
popa
sub
xchg
inc
fs
xchg
sbb
xchg
sbb
add
andb
rcl
imul
jmp
test
push
xchg
pop
pop
jnp
xor
jne
pop
jle
xchg
cmp
add
insl
scas
into
testb
loop
jne
sub
mov
inc
mov
mov
lret
jl
pop
stos
in
push
inc
push
in
or
incl
push
testb
add
mov
pop
lcall
jecxz
call
out
mov
sar
add
jno
clc
add
jge
outsl
add
jae
inc
and
add
mov
inc
pop
sub
mov
pop
push
push
or
daa
push
and
mov
int3
clc
or
ret
push
sbb
cmpsb
add
in
adc
pop
test
lods
pop
mov
jl
jmp
xchg
adc
jae
outsl
push
pop
pop
cmc
xchg
mov
xlat
mov
fwait
cmp
jge
les
test
jmp
add
and
dec
clc
or
imul
push
push
mov
xor
jo
xchg
add
cmp
sub
cmp
out
inc
repz
sbb
repnz
mov
mov
loop
add
or
and
pop
cmpb
icebp
mov
and
negb
or
push
insb
adc
sbb
sahf
mov
sub
loope
xor
enter
movsb
pop
and
pop
cmp
add
pop
ret
daa
jne
int3
test
mov
psubq
je
cmp
in
pop
inc
fstpl
es
or
jno
pop
cmp
fisttpl
mov
insb
test
or
cmp
jo
ljmp
ja
outsb
push
xchg
push
push
xor
mov
xchg
pop
repnz
mov
test
inc
xchg
and
jnp
mov
sbb
sbb
xchg
or
push
xlat
inc
mov
and
mov
mov
ja
adc
out
sub
mov
push
adc
pop
sbbl
push
stos
xchg
je
popa
jae
sub
imul
mov
inc
in
jb
aad
and
lcall
mov
adc
fisttpll
jmp
enter
pop
ficompl
stc
mov
pop
jnp
and
lds
mov
and
mov
pop
stc
add
jae
popa
clc
jo
pop
xor
mov
mov
into
lock
pop
adc
js
sbb
jae
pusha
fstps
and
andb
mov
into
mov
add
call
mov
sbb
ljmp
test
sbb
call
jle
xor
push
mov
pop
std
ret
push
imul
or
cmp
popa
mov
aas
fiaddl
scas
out
in
dec
clc
fs
stos
addr16
repnz
dec
push
jecxz
mov
icebp
xchg
pop
sbb
decb
jnp
shrl
cmpsb
xchg
cmp
bound
jge
lods
xchg
cmp
push
xchg
test
stc
sbb
pop
fstps
loopne
mov
push
bound
mov
inc
or
mov
xchg
xchg
sti
ret
add
clc
rorb
sub
popa
push
xchg
mov
sar
and
mov
or
mov
or
sbb
pop
clc
push
scas
and
add
test
or
push
nop
js
xchg
mov
ja
xor
out
movsb
cmp
rcll
lea
lock
pop
jb
mov
mov
mov
sbb
xchg
insb
xlat
std
mov
nop
jl
repnz
repnz
arpl
ss
cmp
daa
mov
mov
pop
lock
in
xor
into
out
sbb
sub
fldt
pop
divl
mov
paddsb
pop
push
bound
aam
adc
fsts
dec
out
mov
aaa
push
ds
movsb
leave
and
aad
or
das
push
fs
clc
dec
cmpsl
les
fs
jg
lds
shl
add
sub
cld
call
out
fwait
jb
stos
add
mov
sbb
jne
or
shrl
xchg
es
cmp
ds
xchg
mov
jecxz
divb
jecxz
push
pop
mov
fsubrl
fldt
xchg
fsub
jbe
add
aad
push
sti
shll
repnz
daa
lea
mov
popa
xchg
arpl
xchg
icebp
xchg
lods
rol
jg
dec
push
js
pop
push
jbe
lcall
rcrb
xchg
shll
push
mov
push
inc
dec
icebp
lds
jo
filds
xor
mov
cltd
mov
fwait
mov
pusha
and
sar
aam
or
mov
inc
pop
rcr
push
inc
dec
or
loop
js
mov
xchg
jb
insl
leave
lds
xchg
scas
fwait
xor
xchg
cmc
push
ja
jge
bound
push
std
inc
fs
into
fldl
jle
lea
ret
bound
out
call
enter
mov
mov
movsb
xor
test
adc
loopne
test
adc
into
pop
shlb
sbb
outsb
arpl
dec
or
pop
xor
imul
adc
pushf
xor
xor
andl
enter
mov
int3
subl
xor
mov
xchg
in
es
pushf
inc
movl
mov
aas
push
es
push
fdivl
xor
mov
int3
or
aaa
mov
and
je
adc
push
mov
fistpl
dec
lods
add
xchg
jmp
das
nop
mov
nop
mov
arpl
jp
or
dec
or
shl
xor
in
push
ss
pop
out
dec
pop
dec
pop
or
in
mov
jno
sub
sbb
pop
test
sub
test
loopne
sub
mov
cmpsw
and
or
fbstp
out
cmp
mov
pop
stos
imul
enter
xlat
xor
dec
inc
aam
insb
dec
test
in
or
decb
pop
not
mov
xchg
aas
push
sti
dec
jno
fcompl
insl
ljmp
mov
mov
and
mov
lea
dec
mov
movsl
js
dec
or
and
add
out
xchg
mov
cmp
mov
clc
pop
out
add
jle
addl
pusha
or
add
scas
jb
inc
sti
fcmovbe
ret
fisubrs
pop
push
cmp
mov
shll
lahf
ljmp
lcall
test
call
or
dec
push
out
xor
add
js
inc
daa
testl
fwait
cmp
jne
jbe
sbb
les
leave
rorl
es
and
test
xchg
jg
dec
mov
pop
es
push
jne
mov
les
dec
cwtl
sbb
or
ja
outsl
out
jmp
or
push
push
mov
fdivs
imull
dec
jge
out
sbb
fs
push
nop
adc
push
rcll
int
and
out
enter
subl
push
push
fs
or
dec
mov
lods
or
cmp
loopne
jb
lea
mov
and
ss
xor
xor
mov
inc
jp
dec
shll
ja
outsb
pop
add
out
das
cmpsl
or
adc
jno
push
xor
xorl
call
dec
fwait
pusha
pop
or
inc
mov
xchg
xor
test
fistl
mov
je
mov
outsb
mov
or
and
sub
mov
movsl
or
fwait
mov
test
cld
cmp
add
push
jecxz
lret
iret
lahf
push
jmp
jb
pop
cmp
sbb
fdivs
es
jg
and
int3
cmp
lods
jmp
pop
pop
insb
push
ret
test
mov
jb
mov
push
arpl
xchg
push
mov
and
popa
push
call
jle
inc
std
add
adc
or
pop
lods
push
pop
lret
or
sub
sbb
inc
iret
aaa
mov
int
xchg
and
daa
fidivs
mov
adc
aaa
cmp
cltd
mov
fidivl
inc
pop
loopne
jns
mov
jo
xor
mov
ret
sbb
xchg
inc
xchg
mov
mov
add
add
cwtl
add
mov
adc
or
shrl
push
adc
xchg
mov
inc
imul
aas
fldcw
frstor
xor
inc
and
xor
push
das
push
cs
pop
int
clc
pop
les
pop
sbb
fisubrl
sarb
sbb
popw
mov
sub
push
mov
lods
mov
mov
push
andl
cmpl
popf
pop
cld
xor
rol
aam
pop
sub
imul
fcmovne
data16
sti
lcall
jb
jmp
add
aaa
pcmpgtw
mov
fs
cwtl
add
add
mov
jns
out
hlt
mov
stos
sbb
cmpsl
mov
inc
inc
out
sbb
lods
dec
sub
leave
xor
je
inc
cmp
add
int3
sbb
nop
pushf
sahf
sub
test
cmpsl
out
dec
jbe
inc
js
insb
push
lea
inc
xor
xchg
and
in
outsb
jb
jne
cmc
fidivl
sbbb
xor
or
movsbl
pop
dec
call
ja
testb
mov
cmpsb
mov
stos
or
mov
xor
test
cs
push
imul
pop
inc
arpl
gs
outsb
scas
fnstsw
push
pop
mov
add
push
sbb
shlb
jmp
fsub
mov
loopne
jne
add
shll
sarb
sub
or
ljmp
cmpsl
cmc
mov
outsb
pshufw
ds
iret
xor
sub
ffreep
pop
pop
pop
stc
shr
mov
pop
mov
and
xchg
scas
inc
fwait
pusha
insb
test
push
pop
mov
or
sub
call
and
inc
ja
int
mov
int3
mov
call
add
push
or
or
xchg
and
out
mov
jb
sub
fldenv
jle
insb
jl
test
pop
or
pop
pminsw
mov
add
or
movsb
sysret
mov
add
pop
pusha
or
cmpl
inc
loopne
fsubs
inc
mov
in
call
js
shr
fwait
jecxz
adc
shll
stos
lods
lcall
ja
fimuls
adc
push
xchg
nop
vshufps
and
push
gs
xchg
inc
stc
or
imul
cmc
or
shll
popf
inc
mov
outsl
pop
frstor
xlat
subl
lods
sbb
je
cs
adc
in
in
int3
cmp
mov
xchg
lret
dec
jp
push
cmp
mov
push
xor
stc
add
xchg
jmp
inc
popf
xchg
xor
sub
sbb
cmpsb
lahf
add
mov
aaa
pop
insl
fcompl
mov
shlb
adc
inc
pop
sub
mov
loope
rep
cltd
jne
adc
aaa
xchg
hlt
sub
mov
icebp
test
cmp
fcom
idivl
out
inc
in
mov
loop
lahf
and
popf
cmp
dec
mov
cmc
daa
cmpsb
fsubrl
mov
popf
sub
movhlps
std
mov
aam
fnstenv
mov
xchg
icebp
je
mov
xor
xorl
das
insb
loopne
pop
cmp
pop
mov
into
andb
xor
jmp
and
xor
xchg
ljmp
lret
and
cmp
dec
inc
cmp
stos
pusha
mov
daa
and
mov
jp
orb
push
imul
inc
call
lods
mov
insl
mov
andb
push
cmp
jg
mov
ss
pusha
add
fisttps
fdivr
push
ljmp
fadd
mov
mov
nop
leave
cs
jmp
dec
adc
push
xchg
insb
xchg
jo
or
test
jbe
clc
xor
mov
iret
pop
adc
and
pop
int3
pop
into
je
call
fidivrs
or
ret
adc
mov
test
into
add
mov
sbb
sub
adc
outsb
xor
hlt
pusha
push
xchg
sbb
inc
jnp
cmp
fdivrs
sub
pushf
add
xor
stos
jne
push
xor
out
aas
pushf
dec
jg
popa
mov
xor
push
lock
jb
ja
dec
push
je
xchg
or
xor
scas
or
xchg
loope
mov
loop
out
inc
das
mov
mov
or
jmp
es
aas
push
cwtl
and
mov
loopne
or
add
push
and
cmp
adc
xchg
mov
aaa
aam
sub
nop
lods
orb
enter
push
push
xchg
dec
adcb
adc
and
js
clc
das
xlat
call
add
daa
mov
xchg
loope
hlt
icebp
mov
in
iret
test
pushl
jns
addr16
inc
push
xchg
jl
xchg
sti
mull
loopne
shlb
div
jg
lock
fsubl
or
xorl
les
xchg
data16
push
aam
ret
or
and
loop
stos
loope
xchg
imul
mov
cmp
mov
jo
ror
cltd
mov
or
and
daa
jo
sti
test
rorb
rorb
push
inc
add
pop
jg
rorl
in
sub
add
lahf
div
sub
outsb
in
jne
and
js
imul
mov
das
inc
pop
roll
dec
cmp
testl
lahf
mov
call
pusha
and
lock
jl
add
imul
iret
inc
jmp
xchg
cmc
aaa
xchg
adc
pop
ret
mov
ds
adc
daa
dec
jg
mov
cld
loop
inc
pushf
or
cmp
movsl
divb
add
sti
lds
pop
xor
mov
mov
nop
lods
mov
fsubr
pop
cltd
dec
rorb
xchg
rorl
pop
adc
hlt
xchg
mov
inc
xchg
lock
mov
cmp
mov
jne
xchg
or
xchg
jmp
dec
fcmovne
lahf
stc
arpl
enter
cli
mov
pop
fiaddl
mov
mov
mov
xchg
push
push
aad
dec
xchg
insb
mov
push
or
std
stc
outsb
pop
or
mov
cld
cwtl
popf
stos
or
and
and
pop
jne
mov
mov
aam
push
dec
out
xor
fwait
lcall
pop
push
fistpl
pop
enter
push
das
pop
lret
jmp
inc
jo
dec
pop
xchg
sbb
jb
enter
xchg
lcall
xchg
cmp
add
push
lock
scas
rorl
hlt
inc
shll
stos
xor
jbe
leave
call
sbb
fistpl
rol
sbb
sub
pushf
mov
in
inc
sub
ret
in
dec
test
inc
stos
neg
sub
sbb
inc
fsubrl
pop
jmp
jecxz
add
mov
inc
xor
inc
adc
jg
sbb
shlb
popf
jns
nop
cs
pop
rolb
fs
mov
stos
add
test
push
jne
iret
push
cs
fs
sbb
pusha
loope
xor
lds
cli
fbld
or
fstpl
sbb
arpl
inc
xlat
jbe
fisubrl
mov
loope
xchg
test
xchg
dec
lahf
movsl
xchg
mov
inc
jp
ss
rorl
loope
dec
fdivrl
loopne
call
xlat
adc
push
std
jecxz
jecxz
cmp
pop
sbb
or
pushf
fcompl
popf
in
mov
xor
fdivrs
push
pop
mov
outsb
jmp
xchg
inc
ficomps
xor
pop
mov
cmp
dec
cmp
and
mov
mov
jae
js
pop
mov
dec
fdivl
sbb
arpl
cmp
or
rcll
and
out
mov
stos
lcall
leave
adc
out
push
pop
jge
repnz
fimuls
cmp
dec
pop
shrb
pop
aam
std
add
fdivr
lret
psllq
arpl
fidivl
push
pop
adc
sbb
in
or
pop
inc
popf
shrl
xchg
mov
mov
or
loope
mov
and
jbe
std
ret
fstl
in
jo
in
xor
dec
fisubrl
and
inc
arpl
mov
fisubs
and
jle
push
xorb
sbb
add
les
adc
add
sarb
fwait
pop
adc
push
and
out
imul
loop
orps
or
mov
jns,pt
mov
rcrl
sti
adc
das
stos
imul
sub
dec
cld
jno
sysenter
or
dec
jo
dec
mull
mov
idivb
es
ja
inc
jnp
mov
and
and
int
movb
out
dec
and
xor
push
pop
test
pop
pop
clc
jg
ds
in
sbb
jecxz
add
pop
pop
push
sub
test
adc
sbb
jg
and
sbb
and
push
dec
dec
push
jge
fdivr
pop
aaa
cmp
mov
mov
add
jbe
add
test
and
and
or
xor
dec
and
ret
cmpsl
adcl
into
je
cmp
jmp
pop
sbb
cmp
loopne
sbb
mov
out
stos
lea
xor
xchg
in
sub
sbb
movsb
jbe
mov
outsl
pop
enter
mov
mov
push
out
xor
cld
dec
nop
push
out
push
push
pop
popa
push
cmp
sub
sahf
mov
scas
xchg
cmp
sbb
xor
outsl
pushf
inc
daa
or
push
jo
inc
in
or
insl
sub
sub
test
push
imul
fsubs
add
fdivrp
or
notl
xor
int
lods
fadd
xchg
add
mov
mov
jle
push
mov
stos
mov
mov
pusha
cwtl
add
jne
inc
and
loop
movsl
arpl
in
add
stos
jnp
sbb
es
push
push
inc
in
subl
mov
loop
mov
add
outsb
ljmp
mov
repnz
lods
movsb
scas
mov
jmp
add
jbe
push
adc
or
jg
jnp
sbb
xor
sarb
repnz
cmp
jecxz
rorl
or
pushf
xchg
fwait
rcrb
inc
fidivl
cltd
js
and
test
jp
and
lcall
mov
iret
inc
inc
popf
jae
adc
jecxz
inc
lahf
pop
outsb
call
scas
pop
test
pop
repz
push
add
fdivs
xlat
addr16
nop
insl
push
mov
jp
pop
or
mov
in
xchg
stos
xchg
ss
xchg
shll
cwtl
test
stos
stc
roll
mov
sbb
mov
pop
dec
jge
popa
add
into
test
mov
loope
dec
mov
xor
cmp
mov
leave
lds
addb
mov
inc
jnp
push
subl
repnz
clc
push
inc
or
cmpsl
push
push
js
loopne
bound
lds
cltd
mov
and
cmp
cmc
out
sbb
sbb
fisubs
psubsw
inc
pop
jmp
nop
and
jp,pn
sbb
sbb
xchg
lock
push
sbb
rolb
adc
into
daa
fmuls
dec
push
mov
imul
addb
out
push
arpl
test
out
out
sbb
push
loope
popf
cmp
stos
push
pop
test
sahf
pop
xchg
mov
adc
adc
ljmp
jp
add
mov
or
ja
neg
push
dec
and
fwait
mov
test
cmp
sbb
movsl
ds
jle
mov
rorb
dec
cltd
ja
lods
adc
insl
cmpsl
fldl
mov
mov
jne
jb
fdivs
dec
cld
daa
xor
hlt
push
xlat
cld
mov
inc
sub
sub
je
js
inc
mov
mov
dec
inc
fistpl
xor
mov
sub
in
xchg
enter
aaa
or
sub
xchg
add
out
test
out
aas
or
dec
push
mov
xor
subl
outsl
out
arpl
out
adcl
fldcw
pop
mov
mov
jmp
and
fistpl
sbb
xchg
testb
adc
je
movsb
loope
pop
cmc
in
xchg
add
xchg
addr16
fisttpl
cmpsb
push
or
lahf
scas
push
data16
xlat
or
enter
hlt
push
xchg
decb
push
out
lcall
popf
shl
pop
loope,pt
push
popf
rcrl
add
push
add
jo
loop
cmp
ret
out
scas
pop
addr16
adc
testb
or
adc
mov
int
sbb
and
sub
insl
sub
test
dec
popf
or
mov
cmp
pop
xchg
mov
sbb
and
xor
or
loopne
jle
jns
in
mov
dec
adc
push
jp
mov
imul
out
xchg
cs
dec
add
jbe,pn
mov
mov
dec
sbb
cld
mov
aaa
mov
imul
sbb
flds
xchg
xor
inc
add
popa
aaa
movsb
lea
and
ret
fnsave
inc
xchg
mov
add
es
mov
pop
out
rcrb
xlat
add
adc
xchg
test
sbb
inc
dec
lods
inc
pop
mov
mov
out
dec
inc
jle
or
in
pop
xor
mov
mov
inc
xlat
jl
rolb
push
mov
add
loope
inc
popf
push
cmpsb
je
push
adc
addl
mov
je
rcrb
lcall
pop
sbb
mov
lea
ja
dec
jo
mov
call
pop
xlat
push
shll
adc
data16
add
mov
rcrl
xor
lock
and
mov
negl
or
sbb
xchg
sub
daa
pop
jb
adc
loopne
jecxz
ret
xor
mov
or
inc
aam
sbb
dec
xor
xor
add
ja
ljmp
add
es
sub
lahf
xchg
xor
test
movsb
dec
xchg
pop
inc
jns
std
hlt
rcl
mov
mov
mov
inc
rcl
pop
push
mov
rcll
bound
and
xor
sbb
hlt
mov
repnz
dec
adc
int
rorb
pop
shll
jle
mov
adc
sbb
mov
sbb
jo
or
in
push
mov
sbb
test
mov
jmp
mov
icebp
mov
clc
lods
jbe
sbb
in
call
clc
dec
dec
pop
sbb
or
push
test
inc
pop
stos
jmp
into
push
mov
add
pop
xor
or
mov
ljmp
add
std
sti
loop
ret
xchg
and
movsb
outsb
adc
test
sub
or
aas
xor
repz
gs
jmp
pop
jl
int3
sbb
and
iret
dec
pusha
dec
and
xchg
jnp
idivb
and
and
push
mov
arpl
test
or
loope
sbb
lds
sbb
jle
jo
ljmp
jns
test
mov
adc
push
movsl
test
sub
mov
mov
jle
adc
and
xor
inc
movsb
xor
fs
shll
xor
lods
outsl
repz
rorl
cs
lahf
pop
enter
fmull
mov
inc
add
mov
cmp
mov
dec
decl
add
mov
inc
and
push
lea
or
pusha
add
and
inc
in
subb
mov
xchg
stos
mov
or
mov
sub
jo
cmp
pop
lods
sbb
aaa
jbe
test
jno
mov
jae
sub
jno
call
or
or
cmp
mov
icebp
popa
lods
js
dec
test
arpl
test
jecxz
jbe
icebp
push
fidivs
aad
push
and
sub
xor
dec
jge
insl
push
lods
outsb
adc
insb
clc
adc
cmp
pop
sarl
dec
pop
mov
jmp
pop
movsl
cmp
sbb
mov
sbb
push
mov
movsb
cli
jno
cmp
xor
mov
cli
adc
push
shll
mov
ds
pop
jp
cmp
and
sub
and
dec
js
jne
les
adcl
icebp
jmp
cld
or
add
arpl
push
mov
push
test
pop
cmc
or
jae
cmpsb
jnp
cld
aam
sub
data16
sti
cmpsl
out
add
xor
hlt
cmp
sbb
aaa
ret
xchg
jbe,pt
in
mov
je
xor
iret
push
popf
adc
insl
lret
cld
mov
repz
xchg
cmp
fcoml
cltd
or
movsl
push
xchg
stos
cmp
mov
les
fcomi
outsb
dec
or
popf
mov
pop
jg
inc
add
sbb
test
test
dec
add
adc
pop
fwait
insb
je
mov
add
cmp
insb
and
filds
insb
jge
xchg
pop
or
lret
sbb
shll
sbbb
add
pop
push
fstl
adc
push
in
jp
xchg
pop
rolb
sbb
cli
outsb
mov
push
push
and
cmp
mov
lret
add
shll
sub
push
push
pop
push
mov
adc
xor
shr
pushf
and
mov
out
add
je
sbb
aas
dec
scas
addb
shlb
mov
cmp
es
lock
cmpsb
es
push
add
sbb
pop
mov
test
mov
mov
out
jle
xchg
test
cmpxchg
jmp
push
ret
out
arpl
pop
mov
testl
mov
add
orb
lahf
sbb
fbld
and
inc
cmp
pushf
ret
pop
adc
in
jne
adc
stos
pop
in
scas
mov
jge
xor
cmpsb
fldl
cmpb
in
xchg
sahf
mov
jbe
fs
loop
add
jo
inc
push
rcll
xor
xchg
ljmp
test
pop
sti
ja
sti
call
sbb
push
and
shr
dec
andl
cmp
mov
mov
pop
xor
xchg
mov
cmp
das
jo
mov
je
push
aaa
inc
rcrl
imul
cmpb
fs
push
inc
lds
jecxz
mov
push
inc
inc
jl
add
add
inc
sbb
push
insb
imul
adc
in
fsubl
fs
add
push
jp
pop
mov
and
xchg
mov
or
mov
leave
add
rcl
cmpsl
cmp
js
xor
roll
int
xor
cltd
mov
fmuls
inc
jmp
shll
mov
shlb
mov
pushf
scas
aas
outsb
repz
sbb
imul
daa
pop
sbb
pushf
adc
lock
add
loopne
pop
lret
fcomip
or
cmpsl
add
jno
and
rcrb
int3
push
mov
je
pop
mov
pop
mov
hlt
push
inc
and
bound
fsubr
pop
fcompl
mov
or
lods
mov
fwait
and
cld
loopne
loopne
shrl
arpl
roll
sahf
imul
inc
mov
dec
pop
std
dec
adc
sahf
out
xchg
addl
rol
fcomp
push
aas
aam
je
inc
out
das
clc
jp
cmc
push
jmp
cmp
loopne
js
jns
sbb
inc
add
dec
add
out
imul
aad
in
pop
nop
stc
push
or
push
cmp
pop
mov
lret
mulb
dec
ret
and
add
subb
sti
aam
jae
adc
xor
loopne
cwtl
or
imull
mov
cmp
pop
sgdtl
dec
cld
loopne
into
fiaddl
lea
pop
scas
mov
cmpsl
dec
in
push
xor
mov
insb
push
dec
jp
dec
cmc
mov
xlat
adc
sbbl
gs
insl
cmpsl
not
add
and
jp
or
sbb
nop
fsubrl
call
jg
or
rcr
mov
fildl
push
cmpsb
test
insl
shll
push
in
shll
fs
mov
and
mov
sbb
insl
adc
pop
faddl
dec
insb
ss
cmp
les
fdivs
sbb
xor
cmp
sahf
scas
cli
daa
xchg
je
push
jl
jle
add
jmp
ret
jae
dec
xchg
sbb
or
stos
inc
in
xor
je
enter
sub
dec
ss
out
mov
jne
test
cmp
cmp
out
xor
push
inc
ret
ret
cmp
lahf
xor
xchg
xchg
jbe
or
mov
inc
mull
fdivs
push
outsb
ficompl
pop
inc
cwtl
xchg
push
pushf
outsb
mov
and
adc
adcb
cld
xor
or
mov
in
xor
xor
stos
fwait
adc
mov
jg
and
sbb
rol
andl
dec
sbb
insb
xor
xchg
icebp
mov
add
out
jmp
pop
dec
add
and
xchg
outsb
pop
outsb
in
mov
inc
addr16
daa
or
pop
roll
sub
xchg
js
or
shl
insl
aaa
jne
mov
or
shlb
fildl
pop
sub
sub
jle
mov
push
out
enter
popl
js
xor
dec
cmp
jb
xchg
mov
inc
fistl
or
subl
xor
test
outsb
mov
sbb
mov
xor
mov
lahf
push
pop
add
pop
adc
andb
insb
call
add
jge
fldl
ja
jne
pop
sub
jmp
dec
mov
dec
dec
mov
rcr
insl
cmp
sarb
pop
insb
pop
inc
in
jecxz
cmc
les
arpl
cmp
sbbl
jo
push
pushf
push
movsl
and
xor
loopne
jnp
pop
xor
mov
repnz
push
insb
bound
loop
add
mov
add
jge
stos
pop
push
ljmp
fcomps
in
xor
iret
push
enter
arpl
testb
mov
sysret
das
lds
push
lock
cmp
leave
push
adcb
ret
and
cmp
xor
dec
cmp
push
mov
or
add
rcrb
std
adc
cmp
xor
lds
in
dec
mov
lfs
shll
test
std
mov
lcall
in
ret
adc
xchg
xchg
dec
lcall
push
fildll
sbb
jno
cmp
cmp
mul
xor
adc
gs
repz
inc
or
sub
loope
cmp
test
into
sub
aaa
mov
add
add
dec
mov
insl
sub
data16
mov
sub
xor
cltd
cmpsb
pop
fisttpl
push
jae
imulb
stos
jecxz
jbe
jno
sti
add
push
lea
xchg
and
push
add
pop
sbb
mov
fdivrs
aas
and
and
push
in
or
mov
out
dec
rolb
sub
or
cmp
sbb
ljmp
fildl
out
and
xor
mov
add
dec
dec
rolb
push
xchg
jae
add
or
cs
scas
mov
call
jl
inc
xor
cmp
sbb
in
in
cmpsw
sbb
mov
lea
pusha
clc
cmp
clc
sbb
push
adc
sbb
jg
sbb
pushf
adc
push
fidivl
sbb
fiadds
js
mov
popf
sub
add
movsl
adc
repz
into
subb
pop
cs
mov
and
push
jbe
mov
sahf
jb
shrb
add
loop
and
inc
ret
je
ret
push
add
outsl
jns
imul
push
adc
bound
cld
or
xchg
sbb
mov
idivb
or
sbb
mov
mov
inc
sub
jno
cmp
scas
mov
cmp
mov
inc
xor
jge
dec
xor
int3
flds
es
es
fcoml
sbb
jne
pop
xchg
pop
rcll
out
mov
lret
out
mov
sub
sbb
stos
pop
imul
inc
imul
add
pop
mov
cmp
call
inc
rcrb
aas
xor
adc
cwtl
sub
popf
lea
lret
enter
shlb
fcoml
pop
je
ret
pop
fisttpll
fidivl
cmp
dec
je
and
mov
mov
in
call
lds
shrl
and
nop
add
dec
lods
jmp
jmp
in
jle
xlat
mov
xor
adc
not
shlb
adc
or
inc
xor
add
pop
sub
push
ret
push
aaa
cmp
xchg
or
cmp
sbb
mov
mov
arpl
mov
fs
push
pusha
lcall
or
imul
sarb
adc
pop
in
dec
or
jne
fildl
mov
push
xchg
dec
cmpl
or
das
adc
mov
pop
jp
push
in
and
jp
fwait
or
fiaddl
push
push
jo
adc
iret
sub
scas
adc
aas
mov
pop
cwtl
or
push
dec
scas
clc
addb
mov
mov
mov
cmpsb
xchg
and
test
push
or
mov
mov
cld
notl
popf
fs
add
fdivs
mov
jecxz
cmp
bound
not
push
jno
int
das
xchg
fnstenv
mov
ret
cmp
mov
pop
xor
pop
xchg
cli
pop
mov
int3
jge
ljmp
and
push
jg
inc
pushf
dec
mov
leave
add
jge
cmp
cmp
jmp
inc
jmp
xchg
pop
cmp
test
outsl
pop
cs
xor
cmp
mov
insl
pand
pop
mov
es
push
cmp
jge
cmp
add
call
mov
dec
dec
xchg
mov
add
lods
sbb
hlt
dec
pusha
sub
faddl
push
aam
pushf
mov
mov
and
sub
sbb
push
or
lret
mov
or
xlat
pop
xorb
mov
inc
dec
cmp
aas
push
mov
sbb
fnstenv
add
cltd
inc
xor
les
incl
sub
je
push
les
xor
jmp
sub
mov
and
mov
push
lret
or
pop
pop
movsb
push
lds
xchg
addr16
sbbl
xor
push
dec
pop
mov
push
mull
push
fimuls
xchg
inc
loopne
sbb
mov
shlb
dec
push
dec
cmp
into
jbe
sbb
adc
rcrb
adc
sbb
addb
ljmp
or
loopne
inc
enter
inc
jl
fs
out
mov
fwait
sub
sub
and
add
push
stc
mov
rcrl
popa
out
mov
roll
pop
or
scas
mov
and
addb
or
mov
jl
cmpsb
scas
mov
push
dec
clc
stos
incl
mov
push
xor
mov
push
or
inc
adc
xchg
xor
mov
sub
push
cmpsb
adc
jae
sub
jecxz
in
pop
inc
fxch
mov
stos
and
sub
test
dec
dec
mul
test
shrl
lods
xor
popf
sbb
jmp
fbld
dec
and
insl
nopl
arpl
cmp
mov
je
jecxz
das
jp
cmp
ret
sub
sub
mov
lea
in
jge
scas
fcomp
pop
leave
add
mov
arpl
sahf
adc
pushf
repz
xchg
dec
stos
mov
test
mov
add
mov
add
mov
push
push
dec
adc
mov
cmp
mov
mov
ret
fdivr
ret
dec
mov
fsubp
je
das
mov
dec
cmpsl
or
mov
sub
sbb
jmp
jnp
jp
jle
lea
mov
dec
int3
pushf
jo
pop
mov
add
dec
mov
sbb
jp
into
xor
loope
and
ret
stos
adc
adc
loope
cmc
mov
xor
jnp
fs
jle
xor
sti
pop
sbb
adc
inc
sbb
lret
lret
mov
jp
test
pushf
shl
jecxz
cltd
mov
cmp
movl
push
dec
inc
inc
jb
mov
ret
jnp
orb
mov
push
cmp
js
data16
or
adc
int
insl
aas
imul
mov
inc
insb
enter
or
pop
push
pop
hlt
cs
in
mov
xchg
push
pop
jne
jns
cli
cld
mov
sbb
adc
out
or
test
mov
push
fmull
xor
jmp
cmp
jnp
cmp
scas
add
cmp
sbb
dec
pusha
inc
outsb
push
fs
outsl
loope
ja
hlt
adc
mov
adc
enter
adc
pop
movsb
mov
subl
add
jg
xchg
movsb
sub
rorl
ss
jmp
jnp
or
pusha
push
xchg
cmpsb
sub
and
addr16
xchg
adc
mov
adc
in
push
mov
mov
daa
push
cmp
mov
aam
jg
cld
cli
adc
mov
mov
add
mov
nop
lea
push
mov
xchg
cmpsl
ret
xor
insb
cmp
sub
xchg
add
jl
rorb
nop
imul
jae
aam
shl
stos
jb
cmpb
out
mov
push
je
imul
cmpl
test
inc
leave
ljmp
test
sub
popa
rolb
mov
mov
add
mov
and
dec
cli
cltd
fldt
push
stos
lds
dec
xchg
repnz
add
pop
out
pusha
adc
int
in
lock
sbb
mov
shlb
mov
lret
mov
fcmovnu
loope
aam
inc
sbb
adc
leave
sahf
lea
bound
cld
icebp
clc
jbe
insb
inc
xlat
dec
mov
loop
lods
add
dec
je
inc
cmc
push
mov
push
add
aas
mov
cmpl
pushf
push
loopne
mov
adc
js
das
stos
test
push
test
leave
sarb
add
ror
outsl
dec
mov
cmp
push
push
sub
adc
ljmp
mov
insb
pop
inc
mov
push
das
adc
sbb
jo
pop
mov
pop
mov
outsb
sbb
jecxz
stos
pop
scas
mov
and
or
fsubrs
sub
or
inc
rorl
shl
cmp
mov
pop
cmp
hlt
jno
or
mov
pop
jmp
ja
adc
or
sbb
ss
test
add
hlt
negb
xor
push
add
cwtl
aam
sbb
and
pop
fs
cmpb
cmp
pop
add
adc
xchg
pop
fidivrs
jg
sbb
loop
cmp
fidivl
loopne
lds
cmp
iret
movsl
mov
pop
pop
xor
dec
clc
xchg
or
sahf
add
inc
lret
jp
loopne
fs
or
jae
repz
dec
test
sbb
into
cmp
sub
outsl
lcall
sbb
pop
loopne
mov
sbb
mov
mov
repz
ss
sub
lods
sbbb
xlat
ss
pop
scas
enter
jbe
xor
out
stos
mov
adc
lea
mov
jne
lods
fwait
push
xchg
push
addb
int
mov
fwait
adc
ret
imul
jo
pop
fs
popa
popf
imul
ss
sti
psubusw
pushf
cmc
stos
jecxz
data16
lods
or
sahf
sarl
cmp
mov
test
pop
xor
pusha
inc
rcll
subb
out
push
cmp
mov
cwtl
out
jnp
mov
cmp
cmpb
insl
call
mov
xchg
mov
or
jge
and
jmp
add
fistpll
mov
pop
jbe
fmulp
das
aad
dec
data16
test
jmp
aam
out
add
bound
xchg
or
jo
stos
or
adc
test
call
and
push
cmc
sub
testb
mov
pop
cltd
ja
sbb
clc
or
adc
mov
cwtl
stc
xor
outsb
scas
cmpsb
mulb
data16
gs
push
mov
mov
mov
cwtl
loopne
push
and
out
xlat
cmpsl
loope
push
leave
sbb
push
mov
js
adc
cmp
pop
mov
lods
push
mov
push
pop
sbbl
dec
rcr
or
add
movsb
xchg
outsb
lcall
pop
in
mov
stos
cmp
and
mov
arpl
fcmovnu
andl
in
add
xrelease
inc
in
push
aad
jmp
or
sub
dec
fmull
inc
jmp
mov
xchg
pop
nop
xor
es
xor
mov
imul
stc
les
in
mov
flds
xchg
stc
lea
test
pushf
push
cmpsb
in
inc
ljmp
push
jmp
aam
xchg
std
ffree
lcall
dec
daa
sbb
prefetchnta
aas
movsl
loopne
fisttpl
inc
inc
adc
dec
lea
mov
inc
dec
push
aaa
test
aas
xchg
adc
fisttpl
cs
mov
lock
xchg
rolb
xor
jno
fs
mov
cs
hlt
xor
pop
adc
sbbl
mov
daa
xor
ret
fbld
lret
mov
jo
sbb
aam
inc
xor
iret
adc
punpckhbw
test
insb
inc
lea
lea
sub
aaa
loop
fistpll
je
lds
dec
mov
or
jne
and
or
adc
sbb
fwait
lods
or
lea
js
shlb
push
fnstcw
pop
sbb
inc
call
xor
mov
pop
xchg
ds
and
loopne
les
cld
pop
push
subl
mov
stos
or
or
ss
cmp
sub
adc
imul
lahf
enter
mov
mov
test
or
dec
dec
xor
cmp
add
loopne
inc
mov
mov
mov
jg
lods
xchg
inc
adc
ds
jnp
sub
mov
push
daa
cli
gs
xlat
out
push
ficomps
das
inc
mov
pop
out
jecxz
scas
jmp
pop
xchg
xlat
jge
pop
xchg
adc
pop
xor
pusha
sub
xor
loopne
and
cmp
ret
in
adc
adc
sbb
repz
jge
pushw
sub
jge
push
push
inc
cmp
inc
add
addl
push
int
or
das
stos
lret
push
lea
mov
loop
out
pop
push
mov
push
in
push
dec
jns
cld
imul
cs
jb
stc
mov
ret
outsb
in
pop
inc
aaa
arpl
cmc
aaa
pop
shll
or
push
adc
pop
sub
lods
jae
or
dec
dec
jl
out
test
call
dec
jnp
in
scas
jle
ja
push
iret
pusha
jecxz
notb
in
rcrb
inc
jmp
arpl
and
stos
xchg
leave
cld
scas
imul
shrb
popf
lret
jp
inc
mov
add
or
xchg
jp
fistpl
les
test
mov
pop
inc
ret
mov
mov
mov
pop
imul
sub
fsubr
mov
jbe
lods
arpl
push
pop
flds
add
fs
push
sbb
ja
and
lods
fnstenv
cs
test
in
and
fiaddl
mov
sub
test
test
mov
and
cltd
out
and
inc
ret
sbb
jno
sub
fnsave
mov
je
std
sti
fstpl
loop
dec
inc
add
dec
aas
imul
jno
popf
int3
push
or
push
pop
fwait
cmp
mov
shl
call
mov
sub
data16
das
negl
lods
int3
add
dec
loopne
int
jmp
mov
push
ret
aas
dec
push
add
ja
or
ss
sub
xchg
dec
dec
inc
xor
fnstenv
in
aad
xchg
mov
inc
lock
sbb
lahf
jb
subl
sub
and
data16
movsb
sbb
imul
aaa
ret
nopl
gs
mov
pop
into
push
cmp
or
fstpl
and
cmpsb
int3
lds
pop
pop
repnz
xchg
xchg
es
fistpl
jnp
jg
mov
andl
pop
test
idivb
push
push
adc
adc
mov
and
adc
push
mov
add
es
scas
pop
ret
fcomip
ficomps
addr16
adc
or
outsb
test
arpl
inc
test
sbbb
xor
inc
pop
aaa
jns
bound
popa
lods
sub
in
cmp
mov
sti
mov
push
shlb
call
xor
arpl
aad
xor
adc
pushw
fdivrl
add
bound
clc
and
stc
adc
and
push
jl
pop
mov
aaa
clc
adc
push
xchg
imull
imulb
shll
xchg
xor
pusha
push
fmull
fsubl
imul
mov
push
pop
rorl
neg
out
push
xor
leave
notl
or
ljmp
xchg
xor
or
mov
js
adc
xchg
xor
xchg
es
cmp
sub
adc
addr16
sbb
mov
hlt
cld
cmp
cmp
mov
push
rcrb
sarl
jp
or
mov
sbb
mov
ficomps
mov
pop
xchg
fs
push
decb
cld
pop
cwtl
dec
sbb
fildl
pop
adc
mov
js
xor
outsl
dec
and
rcl
popf
stc
ss
lea
cli
mov
lahf
jo
sub
outsb
daa
mov
stc
cld
sub
inc
dec
adc
aas
sub
and
or
rorb
mov
mov
shll
mov
push
cmc
jle
or
jmp
inc
addr16
xor
push
test
stos
std
rcrb
inc
outsl
repnz
sbb
shrl
repz
mov
sbb
pop
push
lods
call
lea
out
pop
lds
test
pop
xor
mov
fsubl
jge
test
push
push
xchg
cmp
imull
dec
pop
mov
or
jp
pop
lds
push
jmp
cld
adc
jmp
sahf
xchg
lods
pushf
mov
push
jle
aad
outsb
sbb
sbb
jo
dec
dec
jmp
ljmp
jmp
xor
jecxz
and
int3
inc
mov
aam
adc
add
lods
pushf
jne
cmp
das
fs
cld
adc
out
mov
dec
jns
cmp
mov
mov
mov
out
inc
lcall
or
xorl
cmpsl
inc
and
es
xchg
mov
je
mov
es
scas
insl
fildl
fwait
adc
cld
xchg
and
lahf
aam
enter
aad
stc
fidivrs
and
ret
xchg
mov
and
mov
xchg
jle
cli
sbb
sbb
je
pop
dec
les
push
loopne
inc
adc
sub
xor
dec
and
sbb
sbb
data16
cmp
push
and
test
adc
and
pop
cmp
popa
add
dec
xor
mov
jbe
aad
lahf
je
test
or
sahf
inc
test
xchg
mov
call
push
in
sub
fisttps
call
inc
fadds
addr16
or
mov
outsb
mov
clc
addr16
je
in
leave
rcll
icebp
dec
and
popf
imul
inc
pop
adc
pop
imul
packsswb
shlb
mov
pop
xchg
pop
adc
xor
in
insl
pusha
aaa
pop
inc
adc
mov
dec
sbb
push
fimull
orl
mov
mov
push
mov
dec
mov
lcall
add
mov
repz
mov
mov
dec
add
mov
dec
insl
inc
add
outsl
add
xor
popa
idiv
mov
sub
dec
dec
add
sub
sub
jbe
repnz
jb
out
push
xor
add
pop
add
adc
jo
std
lcall
dec
data16
into
mov
mov
add
fidivs
into
mov
ret
ret
mov
inc
pop
bound
fdivrs
mov
dec
pop
add
dec
cmp
dec
outsb
xor
repz
jmp
add
inc
add
pop
mov
insl
push
inc
push
aas
xchg
aas
decl
sti
in
in
adc
popf
push
js
jae
xor
inc
adc
inc
in
fcomp
pop
dec
xchg
pop
ja
out
outsb
jo
add
sti
roll
mov
dec
mov
jg
ret
push
gs
gs
add
les
testl
and
pop
pop
mov
lock
add
mov
add
lock
xor
mov
add
es
add
or
shlb
in
add
push
mov
push
push
push
or
and
push
dec
dec
mov
inc
push
push
jg
or
add
xor
addr16
push
mov
arpl
inc
mov
cmpsb
or
add
testl
xor
rorl
iret
push
inc
sti
mov
ret
dec
inc
jbe
sbb
push
ss
push
fstpt
std
push
xor
dec
arpl
movsl
dec
mov
sarl
dec
push
jns
pop
mov
imul
dec
adc
and
or
fnsave
add
outsb
insl
popa
xor
insb
inc
push
and
mov
dec
mov
inc
inc
fistpll
push
jmp
mov
mov
inc
ret
ret
mov
add
dec
push
mov
jmp
mov
jg
outsb
add
lock
cmp
xorb
push
push
and
push
inc
push
or
in
pop
jbe
repnz
jae
je
mov
popa
bound
push
mov
lcall
xor
adc
xor
popa
mov
jns
dec
inc
sbb
cmp
in
pop
sub
vshufps
imul
sbb
dec
repz
fldl
mov
xor
ds
mov
out
add
push
lods
add
test
adc
add
jmp
sub
fst
rcll
pop
inc
sub
jg
call
pop
js
inc
aad
jge
notb
imul
xchg
inc
ficoms
in
or
cs
in
xchg
add
jl
fists
imul
negb
pop
inc
imul
mov
push
xchg
add
out
in
jl
fiadds
adc
ret
repnz
sbb
xchg
fsubl
pop
cmp
pushf
xchg
adc
or
imul
push
ficoml
movl
add
nop
xor
add
and
inc
add
int
and
or
or
and
adc
add
std
add
les
test
dec
lret
or
add
cmpl
push
nop
mov
or
lock
mov
pop
aam
pop
insb
xchg
loopne
pop
push
loopne
adc
inc
and
xchg
or
xor
aad
adc
adc
cmpsl
add
inc
xor
fcomp
out
pushf
sti
aas
jne
jl
or
adc
sbb
icebp
movsb
sbb
and
adc
loope
orl
xchg
mov
dec
shl
in
or
data16
mov
clc
fucomip
push
and
fcomp
imul
push
and
in
movsl
pop
inc
jb
bound
and
es
and
cld
les
ss
filds
inc
xor
leave
sar
and
xchg
or
icebp
xor
leave
inc
mul
add
inc
inc
and
dec
lods
inc
nop
or
xchg
dec
pusha
std
test
cld
and
cld
imul
sbb
data16
hlt
inc
mov
push
fwait
adc
xchg
cmp
xchg
mov
repnz
mov
cli
repnz
orl
fs
in
or
inc
popf
lods
bound
out
cmp
mov
shl
loop
sub
das
sar
mov
sub
loopne
pop
push
jg
ret
add
aaa
rcrb
mov
nop
mov
ret
jecxz
inc
inc
add
add
pop
sub
jg
xor
fcoms
insb
and
das
and
int
xchg
les
add
dec
sub
adc
rcrb
inc
add
and
in
leave
addl
jmp
scas
mov
jns
or
pop
xchg
adc
and
daa
mov
adc
gs
add
and
cmp
lods
movsl
repz
jge
lock
and
sub
add
xchg
sbb
add
mov
nop
pop
je
mov
mov
add
mov
lret
and
fiaddl
call
sbb
xchg
scas
and
and
cli
loopne
lcall
dec
lcall
xchg
add
scas
mov
add
and
mov
or
movsb
fldcw
pop
pop
jecxz
into
sbb
jecxz
movsb
sbb
loope
add
add
icebp
and
adc
out
and
adc
in
leave
adc
je
adc
movntq
out
inc
and
into
iret
repz
rorb
sub
push
leave
imul
lret
imul
imul
psadbw
divl
cmc
lock
add
adc
adc
repz
inc
add
decb
jl
sbbl
jg
mov
lds
push
loopne
scas
push
loope
pop
shll
xchg
jg
incl
je
fwait
and
lahf
pop
loope
sbb
push
ljmp
in
repnz
aam
cmp
xorb
adc
xchg
jg
xchg
aam
fsubrl
outsb
add
loope
pop
inc
mov
xchg
test
xchg
aam
jl
fstpt
cmp
sub
mov
stc
dec
pushf
add
dec
xchg
rorl
das
inc
js
out
push
dec
out
sti
mov
dec
add
jl
enter
xchg
leave
push
adc
insl
jnp
je
popa
pop
sub
mov
pop
aam
xchg
push
dec
js
pop
aas
xchg
into
insl
cmpsb
cmpsb
or
inc
or
cmp
mov
dec
add
adc
push
or
push
add
xchg
dec
push
jg
mov
test
add
xorl
out
testb
cmp
jae
fcomp
decl
and
sbb
fs
test
sub
sarb
push
or
mov
scas
mov
add
or
aaa
xor
xor
pop
cltd
movsb
test
ret
aad
cmp
in
or
aam
or
bound
out
lahf
pop
ffreep
adc
andb
cld
std
stc
out
into
out
js
lahf
dec
add
dec
mov
jge
inc
inc
fadd
mov
xchg
mov
js
xchg
pop
xchg
mov
push
mov
push
js
fldenv
sub
xchg
inc
js
mov
pop
pop
jge
push
xchg
jge
ficoms
lea
idivb
lds
jmp
pop
cwtl
xchg
or
imul
adc
mov
adc
int
push
mov
fsubs
mov
mov
or
mov
xchg
pop
push
xchg
cld
cmp
mov
fmul
std
mov
cli
mov
or
out
aaa
fidivrs
push
test
xchg
aam
test
mov
jge
push
ss
dec
or
and
dec
adc
pop
movsl
repnz
mov
mov
jmp
and
push
arpl
pop
fistpll
adc
pop
nop
or
data16
mov
inc
jb
push
in
clc
xchg
add
add
and
push
pop
fwait
cs
add
leave
add
push
fs
aas
sub
rcrl
pop
push
push
pushf
jb
jge
add
fwait
adc
daa
adc
unpcklps
pop
inc
mov
jge
pop
lahf
pop
icebp
movb
jg
jl
mov
xchg
icebp
fcoms
stos
xchg
loope
jl
popf
or
cwtl
sub
outsl
or
lret
nop
out
mov
rclb
add
aam
dec
adc
adc
xchg
arpl
pushf
add
push
aam
add
popa
add
dec
add
mov
add
movsl
cld
aam
inc
jb
leave
sbb
fs
ljmp
addb
add
cmp
mov
add
sub
add
enter
ds
jmp
nop
std
add
push
andb
push
scas
movsl
mov
cwtl
fprem1
inc
sub
cmpsl
pop
fstps
loopne
scas
fstps
pop
fists
in
pop
mov
fwait
and
jae
fwait
repnz
arpl
push
adcb
mov
dec
dec
nop
jno
pushf
jecxz
fistps
lods
inc
jo
jmp
movsb
iretw
or
cwtl
les
pop
rorb
imul
mov
pushl
pop
mov
inc
test
jmp
dec
add
push
mov
orl
faddl
cwtl
sbb
dec
pop
xchg
inc
loope
mov
sbb
fildll
inc
jge
mov
in
cmp
loopne
add
jecxz
pop
je
cltd
xchg
xchg
insb
fwait
and
std
mov
scas
mov
mov
test
or
and
in
sbb
pusha
fisttps
stos
push
std
std
cmp
outsb
jg
cmp
adc
fnstsw
push
cwtl
loope
mov
mov
outsb
xlat
outsb
ljmp
cwtl
fistl
xchg
xchg
fisttps
jg
xor
loope
rcr
sub
and
shrb
les
add
mov
rcll
loope
imul
and
push
xlat
sbbb
push
int3
lock
aam
xchg
pusha
sub
pop
insb
roll
subl
adc
push
xor
add
sbb
les
add
mov
cmp
pop
outsl
dec
fcomps
push
lea
inc
inc
push
flds
in
pushf
addr16
ss
cmp
jns,pt
loope
ja
push
xor
cmp
ds
pop
iret
outsl
pop
fidivs
pop
negb
daa
aas
sbb
dec
cmp
xor
sbb
mov
int
push
xchg
adc
jg
aas
and
nop
loope
adc
add
push
es
cmpsl
dec
or
add
arpl
and
inc
add
andl
hlt
add
in
and
cmpsl
pop
dec
addl
jo
add
inc
xor
push
mov
pop
xchg
fs
inc
push
mov
aad
and
adcl
xchg
xchg
dec
and
adc
lcall
cmp
test
xchg
in
fs
mov
or
sahf
cmpb
add
adc
jge
popf
outsl
dec
push
inc
cmp
pushf
and
adc
xchg
fs
mov
mov
inc
int
je
add
cmp
test
andb
fsts
nop
sbb
xchg
adc
xchg
into
daa
and
add
pop
insb
enter
jmp
gs
lret
sub
in
or
fs
nop
add
add
add
roll
ret
add
arpl
push
enter
xor
mov
loop
and
js
xchg
inc
add
add
adc
push
andb
inc
jb
xchg
adc
fs
lret
add
add
sbb
sbb
pop
jl
jb
push
nop
int3
lds
divb
testb
adc
mov
or
or
mov
out
or
nop
arpl
pop
push
pop
notb
mov
pop
inc
cmpsl
or
call
pop
adc
int3
jge
call
inc
dec
inc
push
add
cmp
inc
dec
xor
cs
dec
dec
mov
xor
push
and
add
lea
add
add
add
jne
bound
aas
mov
ss
add
imul
das
push
add
jb
jo
and
std
enter
pop
outsb
add
adc
add
adc
add
inc
aas
gs
addb
imul
adc
xor
or
xor
test
dec
das
cmp
out
lcall
je
pop
add
imul
mov
push
adc
jae
push
sbb
imul
push
inc
or
jp
lret
out
xor
outsl
jne
mov
mov
das
ja
dec
jae
stc
pop
sbb
sub
fwait
jmp
mov
inc
push
jb
sub
add
add
jbe
mov
outsb
mov
inc
cld
gs
loope
cmp
add
outsl
sub
jae
inc
push
jne
dec
cmpsl
stc
in
pusha
mov
dec
pcmpeqd
jge
xchg
sbb
push
add
add
push
or
gs
jne
inc
cmpl
ss
or
int
xchg
mov
daa
js
add
push
pushf
mov
mov
frstor
xor
pop
push
ds
sub
jae
lods
ja
add
fdivl
or
or
inc
je
pop
mov
sbb
push
aaa
bound
mov
sbb
dec
xor
stc
jns
mov
lea
arpl
insl
pop
pop
pop
xor
add
push
xor
in
je
mov
dec
pop
idivl
scas
cmp
adc
inc
cmp
dec
insl
repz
fisttpll
fdivl
or
or
adc
loopne
cmp
xor
push
sbb
dec
sti
mov
mov
cmp
or
scas
xchg
icebp
xorb
inc
push
bound
cmp
jl
mov
std
fnstcw
jo
push
jbe
jae
test
mov
push
ss
xchg
sbb
inc
push
mov
hlt
dec
inc
out
mov
jp
popa
push
arpl
mov
das
addr16
jecxz
ja
aaa
and
or
gs
and
shl
inc
cmpsl
arpl
out
xlat
jge
dec
xchg
insl
outsl
or
push
pop
cmp
incw
je
out
jne
jno
sub
cmp
stc
push
out
or
sub
dec
lahf
imul
fildl
imul
das
loope
dec
xor
int3
faddp
xor
adc
inc
scas
xorb
sub
imul
mov
inc
or
outsb
insb
lods
xchg
nop
je
mov
arpl
popa
pop
outsl
scas
push
xor
ret
jae
sub
pop
notb
pop
pop
ret
enter
mov
clc
jb
daa
insl
add
enter
push
pop
imul
mov
inc
loope
ret
mov
addr16
mov
es
jno
cmp
fmul
gs
aad
cmp
xchg
clc
or
icebp
in
les
sbb
outsl
lea
cmpb
arpl
sbb
shll
inc
xor
cmc
cmp
adc
cmp
push
xchg
adc
cmp
and
mov
lea
add
cmp
test
xor
icebp
cmp
xor
sbb
fiadds
inc
pop
outsl
or
jmp
jbe
inc
fisubs
aas
movsl
shlb
add
mov
jns
xor
adc
dec
pop
dec
fidivs
ja
stos
add
adc
pop
inc
imul
insb
std
jne
out
loopne
push
pop
lahf
add
or
mov
jne
ja
setae
mov
jnp
pop
in
jmp
lea
adc
arpl
stos
bound
inc
fldl
inc
cli
cmp
sub
imul
or
dec
test
lret
pop
inc
jb
daa
es
ret
push
inc
pop
ja
mov
mov
jns
dec
mov
dec
test
aas
je
ret
scas
or
test
push
push
or
fs
loop
movsl
pop
xor
push
lret
pop
cmc
jae
xchg
cmpsl
inc
inc
cmp
mov
int
or
arpl
roll
inc
cltd
jle
jecxz
jns
xchg
imul
jnp
push
pushf
adc
or
jecxz
dec
imul
add
iret
or
es
jge
shlb
mov
addl
addr16
jmp
call
pop
movsb
repnz
or
scas
xlat
imul
shll
jo
pop
cmp
inc
pop
out
fiadds
xlat
jge
xchg
xor
xchg
sbb
cmp
punpcklwd
pusha
xchg
lock
imul
sbb
loope
dec
xchg
and
jp
test
jo
lods
in
cmp
mov
mov
cmp
mov
push
jae
pusha
inc
xchg
pop
xchg
cmpl
mov
movsl
push
push
or
xor
pop
adc
mov
adc
adc
mov
insb
cmpsl
std
cmpxchg
test
fwait
lds
xchg
xor
or
fidivs
jo
lods
loope
mov
add
adc
into
cmp
push
int
or
push
adc
pop
int3
out
cmpsl
or
idiv
fsubl
push
outsl
or
jge
dec
stos
fwait
and
arpl
adc
xor
push
daa
jle
bound
mov
repz
adc
add
stc
gs
out
mov
pushf
rcl
imul
cmpl
scas
adc
data16
movsb
es
outsb
pop
les
lret
mov
ja
or
dec
das
data16
dec
sub
push
in
mov
xor
mov
out
addl
dec
dec
cltd
cmpsl
jl
mov
adc
mov
daa
gs
xchg
inc
je
push
test
cli
bound
jge
push
pop
bound
add
repnz
dec
aas
cmp
inc
jg
xchg
out
sub
popa
sub
dec
mov
pop
insb
arpl
daa
lock
jb
aaa
aas
dec
sahf
dec
xor
xchg
push
insw
cmp
xchg
mov
je
sbb
sbb
jge
push
ret
add
cmpsl
push
xor
xor
inc
dec
gs
push
push
imul
pop
pop
inc
sub
jecxz
shlb
fnstenv
mull
popa
sti
sbb
xlat
xor
cltd
je
xchg
or
push
xor
aad
cmp
ds
insb
popf
push
push
or
jne
arpl
daa
mov
rcr
pop
sti
jg
sbb
mov
jmp
out
outsl
fstl
sub
mov
popa
cmc
and
sub
pop
dec
xchg
daa
push
sub
in
popa
mov
popl
fnstcw
popa
imul
jns
xor
iret
loop
jecxz
push
push
or
lds
pop
addr16
inc
js
mov
cmp
sbb
sti
mull
je
negl
dec
pop
icebp
pop
sub
and
sti
aaa
fnstenv
out
and
mov
aas
jnp
xchg
inc
imul
inc
cmpsl
and
lcall
mov
cmp
push
int3
pop
sbb
xchg
xor
xchg
test
icebp
addr16
test
cld
gs
pop
xchg
push
ja
dec
loopne
imul
testb
xlat
mov
incl
or
mov
mov
out
and
pop
xchg
or
popa
push
push
jnp
dec
lods
inc
add
push
mov
jge
pusha
add
pop
fdivs
push
xchg
loop
jo
repz
xor
push
cmp
xlat
add
adc
cmp
xor
and
add
out
pop
scas
jnp
imul
add
jae
fnsave
flds
add
sbb
jbe
pop
addl
sub
mov
sub
push
add
stos
and
push
arpl
fldpi
lds
filds
adc
loop
popf
mov
inc
jbe
push
in
jne
je
xor
xor
mov
leave
insl
sub
stos
lahf
stos
sbb
jns
out
adc
or
and
cmp
lret
add
out
mov
imul
xor
dec
sub
or
lmsw
jle
mov
fidivrs
sti
or
add
add
in
xchg
sbb
cmp
loope
scas
and
pop
xchg
ret
push
or
xchg
addb
jnp
fdivrp
sub
adc
iret
mov
fwait
jecxz
add
cmp
test
mov
cmpsl
movb
xchg
ret
add
xchg
rorl
dec
cmpsl
fs
push
add
pop
adc
xchg
jns
arpl
arpl
cmpsl
outsl
outsb
in
lods
jnp
add
cmpsl
inc
cmp
fcomp
notl
arpl
arpl
imul
pop
imul
clc
cwtl
add
add
jnp
or
aad
xlat
cmpsl
andb
mov
add
sbb
stc
jle
ds
add
cmpsb
xchg
adc
and
adc
add
in
insl
adc
adc
imul
pop
and
arpl
pop
pop
cmpsl
popa
enter
dec
add
xchg
cmpsb
bound
add
sbb
int3
cmc
es
xlat
test
adc
rolb
daa
xchg
pusha
and
sbb
push
pusha
outsl
mov
pop
sub
sbb
add
cmpsl
sub
iret
ja
dec
mov
xor
adc
jno
inc
cmp
mov
push
aaa
xor
inc
cmpsl
sub
das
into
inc
fbld
out
nop
enter
mov
roll
sarb
sub
addl
enter
xchg
pop
stc
push
inc
jbe
push
pop
add
pop
or
and
jno
xor
hlt
push
ja
cltd
push
movsl
jge
in
adc
dec
jge
nop
fildll
bound
fisttpll
xor
inc
pushf
aad
aas
cmpl
add
test
lods
test
adc
repz
push
aaa
sub
call
or
sbb
sbb
jne
xor
popf
add
push
stc
pop
sub
add
faddl
movsb
popf
sbbl
mov
enter
sub
aad
sbb
fistps
sbb
sbbl
loop
or
adc
aaa
adc
sarb
mov
xlat
lods
add
ret
pop
push
inc
fsts
pop
inc
subl
add
mov
fwait
arpl
pushf
outsb
out
fistpll
sub
sub
xor
js
sti
push
lea
repnz
add
sub
loope
arpl
outsl
add
rcll
add
and
rcl
pop
mov
cmp
bound
pop
notl
js
ljmp
pop
imul
xor
xchg
xchg
hlt
int
xor
sbb
pop
mov
movb
orl
add
int
inc
adc
dec
ss
and
ret
jg
jns
es
outsl
testl
add
xchg
sbb
ret
ss
mov
push
ret
xchg
ja
jmp
sub
sub
jbe
pop
sub
and
les
fisubrs
inc
pop
sub
xor
inc
xor
lea
outsb
add
inc
sub
js
sbb
dec
hlt
mov
fwait
dec
pop
test
test
nop
or
dec
push
adc
or
test
roll
pop
pop
daa
insl
pop
ret
subb
push
xlat
cmpsl
dec
sub
das
inc
inc
or
cmp
push
pop
sbb
or
push
in
sbb
icebp
mov
jle
add
fidivs
add
in
loopne
jg
pop
cltd
push
cmp
inc
jp
sbb
xor
nop
les
sub
and
dec
adc
push
xchg
notl
repz
inc
pop
sbb
imul
iret
push
pop
xor
xor
pop
lods
jnp
push
call
je
test
jg
pop
add
adc
divb
test
cmp
add
or
cmp
pop
and
add
dec
add
pop
jl
arpl
stos
scas
adc
roll
mov
pop
test
popa
dec
dec
cmovne
jno
mov
pop
and
inc
pop
call
call
jecxz
sbb
movsb
cmp
cmp
sbb
das
or
sbb
or
sti
dec
xchg
cmp
or
lret
roll
and
add
scas
jl
popl
add
cmp
adc
sub
adc
ret
movsb
pop
and
hlt
xchg
gs
add
cmc
int
add
pop
outsl
add
mov
xor
push
subl
mov
mov
push
lcall
ja
mov
push
xchg
jge
loope
fisttps
test
add
mov
add
aaa
iret
daa
cmp
sub
mov
jno
pop
aam
add
lock
push
cmp
jle
lock
aaa
cmp
fwait
cmp
test
adc
insb
fldcw
add
addr16
xor
and
icebp
dec
add
iret
ltr
xor
add
loope
xor
sahf
sub
add
out
dec
je
mov
shll
leave
and
cld
shlb
dec
add
cmp
inc
ret
lods
arpl
popa
jl
push
xor
loope
lret
arpl
frstor
lea
and
out
jmp
fldl
xchg
sub
xor
cmp
inc
mov
xor
push
mov
mov
shll
inc
cltd
lods
jl
das
fadds
and
adc
adc
or
add
and
fisttpl
daa
mov
add
jge
daa
and
aas
push
lock
imul
or
or
jge
daa
inc
testb
add
dec
stc
nop
movsl
add
and
bsf
mov
mov
sub
adc
cmp
movsl
push
xor
in
or
or
enter
xor
rcpps
push
dec
add
jo
mov
les
add
sbb
add
xor
out
pop
inc
jo
pusha
leave
add
je
ret
out
fdivrl
jo
aad
ja
test
gs
dec
add
add
pop
nop
jg
loopne
pop
mov
jns
add
push
adc
or
add
jg
and
lret
int
add
pusha
inc
adc
das
cmpsl
fldenv
sbb
and
xchg
lret
lret
ds
jg
test
and
out
and
clc
je
jne
push
and
pop
mov
xor
call
bound
test
sub
addl
enter
xchg
shll
outsl
xchg
pop
loop
inc
inc
mov
hlt
push
mov
mov
and
mov
loopne
fstl
xor
cmp
inc
loop
mov
imul
das
mov
mov
push
andl
adc
adc
fstl
push
test
add
inc
js
testl
enter
jle
xchg
mov
mov
jp
ss
stos
adc
add
fstl
bound
mov
ja
dec
test
ficomps
dec
mov
mov
add
add
mov
mov
add
hlt
lds
stos
or
inc
insb
loopne
xchg
lds
jne
sub
mov
jmp
add
dec
jae
push
xor
add
pop
sub
pop
xor
imul
sahf
sbb
adc
pop
xor
pop
add
or
ds
or
mov
imul
add
mov
xlat
int
adc
stos
lds
pop
cli
add
adc
ljmp
inc
cmp
cmp
push
ret
mov
adc
pop
stc
cltd
xchg
subl
adc
scas
ret
pusha
xchg
add
out
inc
and
jp
jb
pop
sbb
push
lret
adc
add
sub
sbb
data16
enter
xor
daa
xor
and
cmp
mov
inc
popa
push
mov
add
dec
vfrczsd
test
pop
cmpsb
sbb
repz
aas
rclb
xchg
xor
jmp
xlat
sub
and
fidivs
sub
sub
xchg
xor
xor
xchg
aam
movl
insl
pop
int3
pop
sbb
xchg
lret
insb
ret
mov
lds
insb
roll
pop
pop
cmp
adc
mov
inc
aam
xor
ljmp
and
fbld
sub
sbbb
stos
cmp
pop
aas
inc
and
jg
add
push
lcall
jb
clc
and
rorl
mov
mov
xor
add
mov
rorb
mov
sbb
scas
mov
dec
sub
mov
imul
test
int
test
aaa
lea
cmp
fwait
jg
jecxz
scas
add
inc
push
out
and
sar
or
out
inc
add
icebp
nop
push
pop
jp
cmpsb
ss
adc
stc
repz
mov
pushf
mov
mov
test
push
je
ret
push
mov
push
jno
aas
outsb
and
inc
xchg
xor
mov
mov
sbb
add
sbbl
jne
sub
push
xchg
lds
and
movsl
add
and
pop
and
jmp
add
or
or
add
or
ja
call
adc
fdivs
xlat
fs
push
test
add
ja
jno
shll
outsl
mov
outsb
sub
or
and
push
andb
add
mov
fisttpll
adc
jne
and
cmp
mov
lea
adc
fs
push
sbb
mull
andl
test
subl
cmp
dec
cmp
loope
jno
jno
jne
aas
push
cmp
xchg
sub
jmp
pop
add
mov
xchg
pop
lcall
lods
insb
imulb
mov
push
popf
pop
arpl
mov
data16
call
out
push
sub
dec
imull
push
jecxz
subl
std
and
add
and
outsl
adc
imul
out
addr16
sbb
adc
loope
call
outsl
ret
add
js
add
jae
outsl
sub
pop
sarl
dec
sbb
jne
test
pop
and
push
adc
daa
push
add
popa
stc
and
adc
rolb
pop
xchg
cmp
call
jne
xorb
popf
outsb
and
add
adc
mov
xchg
imul
movsb
dec
adc
mov
aaa
insb
xchg
popa
adc
popa
cmp
add
rcll
ret
jae
popf
push
cmp
jnp
jbe
test
pop
sbb
inc
cmc
xchg
cmp
xchg
inc
pushf
fucomp
mov
test
mov
or
sub
es
lcall
adc
aam
int3
ret
popf
popa
pop
sbb
icebp
icebp
dec
test
sbb
push
and
add
sbb
xor
ja
jg
pushl
insl
ret
sbbl
xorl
roll
add
imul
and
or
mov
inc
adc
in
cmp
push
stc
pop
in
mov
out
bound
sbb
mov
xchg
dec
push
lds
or
dec
mov
fcomps
xchg
xchg
imul
lds
dec
pop
xlat
and
or
and
push
and
lcall
pop
or
addr16
imul
sub
popa
or
imul
dec
imul
or
add
add
aad
insl
in
loope
sbb
dec
sbb
jp
aas
leave
dec
inc
add
xor
sbb
loop
add
popf
add
out
repz
xchg
js
push
mov
mov
lds
dec
loop
dec
rcll
lea
xor
mov
adc
int3
jp
sbb
sbb
stc
sbb
add
test
iret
inc
jne
jb
mov
test
imul
sub
loope
mov
bound
pushf
fiadds
imul
sbb
mov
xchg
add
sti
shr
push
mov
inc
jno
pop
xchg
loope
jg
fsts
cwtl
mov
push
inc
and
jecxz
or
cli
outsl
popa
pop
inc
cltd
rorl
leave
das
fs
scas
or
cmpsl
cmc
mov
repz
inc
push
mov
insw
pop
adc
sub
std
imul
shrl
inc
data16
loop
test
pop
cmpsl
xor
andb
inc
fcmovne
push
wbinvd
adc
xchg
mov
jno
test
in
inc
add
cmpsl
inc
adc
inc
cmpsl
repz
or
cmp
jno
out
dec
mov
fyl2xp1
adc
sbb
movl
pop
jne
dec
adc
push
imul
js
fisubs
jmp
pop
and
xchg
lret
dec
idiv
insl
shr
dec
sbb
popf
dec
js
cltd
adc
add
add
jns
jns
mov
jno
outsl
sbb
clc
push
pop
mov
xor
ret
lds
push
daa
dec
push
push
icebp
es
fisubs
xchg
fstps
jmp
imul
imul
lahf
inc
pop
add
cmp
sbb
and
push
xchg
lds
insb
test
xchg
inc
in
and
jl
lods
mov
jmp
ret
cmp
insl
push
jecxz
or
insl
pop
scas
pop
mov
xchg
lea
mov
pop
bound
xchg
add
rorl
adc
pop
dec
movl
scas
insl
jnp
jmp
inc
mov
sbb
xor
sbb
frstor
adc
into
sbb
addr16
aad
xor
fstps
int
testl
ja
cmpsl
pop
loope
xor
mov
inc
cmp
mov
test
and
sbbl
add
gs
cltd
leave
mov
adc
push
and
sub
imul
nop
test
fwait
shll
xchg
stos
ja
sub
jmp
xor
adc
dec
add
push
cltd
dec
cltd
pop
push
or
pop
rolb
inc
or
cmp
dec
mov
aad
inc
inc
push
adc
push
loope
xchg
lea
push
je
mov
loopne
idiv
stc
testl
rcrl
fs
std
mov
adc
sub
cmp
mov
out
jbe
pop
arpl
xchg
sub
inc
pop
pop
aam
fistpl
mov
push
aas
push
add
pop
icebp
outsl
sti
add
popa
pop
ja
add
xor
adc
xchg
out
int3
add
rolb
inc
gs
push
dec
outsb
outsw
dec
outsl
arpl
push
gs
jne
arpl
insb
outsl
bound
inc
gs
and
je
insl
outsl
fcmovnu
data16
jb
outsb
je
imul
outsl
adc
push
imul
jb
popaw
jne
insl
mov
insb
je
inc
dec
inc
push
inc
inc
sub
mov
jb
imul
dec
jae
sbb
movsl
mov
push
push
dec
popa
outsb
or
outsb
mov
inc
js
jno
fs
push
int
fsts
xchg
sti
jae
pop
inc
dec
push
imul
lcall
insl
mov
outsb
addr16
sbb
je
iret
mov
push
outsb
fldcw
push
push
mov
mov
jae
xor
insb
jae
bound
insl
arpl
dec
fists
inc
idivb
or
bound
cli
lock
clc
ret
addr16
insl
outsl
jbe
and
xstore-rng
cmpsl
inc
push
or
pop
in
mov
ret
daa
mov
jne
push
jns
inc
adc
jbe
or
iret
pop
sbb
push
arpl
jns
push
ret
mov
xchg
jns
add
insl
xchg
arpl
or
push
jne
xor
fs
sub
fisubl
idivb
popa
das
mov
mov
sbb
idivl
mov
imul
mov
mov
add
gs
fucomp
push
sbb
std
loopne
sub
push
mov
cmp
fisttps
in
push
dec
popa
insl
xchg
xchg
xchg
xor
mov
jbe
fstpl
in
xor
push
push
popa
popa
bound
in
data16
or
push
lds
sub
inc
sub
inc
je
add
imul
nop
movsb
cmp
mov
in
jmp
pop
pop
popa
cmp
inc
lahf
dec
dec
push
ret
test
or
mov
dec
push
jo
jno
arpl
pop
sub
cmpsl
and
inc
and
js
imul
pop
xor
mov
leave
stos
sbb
fisubrl
jae
mov
fldl
outsl
sbb
and
outsb
ja
inc
clc
lds
into
push
sub
cwtl
cmc
xchg
cmp
lcall
pop
mov
inc
test
pop
push
cltd
imul
inc
push
sub
insb
push
je
add
dec
xchg
dec
call
and
pop
mov
xchg
les
fidivrl
inc
adc
sarb
jmp
push
movl
rcll
nop
mov
cmp
movl
inc
jb
mov
gs
and
mov
jae
push
dec
gs
int
or
imul
sub
xor
cmp
add
ret
sub
push
lcall
push
mov
jo
andb
jne
leave
dec
jo
inc
inc
sub
dec
int
loope
negl
test
jg
mov
insl
call
jmp
sahf
pushf
gs
dec
jno
xor
dec
jl
cmp
pusha
push
out
rcrb
pop
jae
cmp
int
xor
int3
jae
push
outsl
mov
mov
sub
pop
insb
cwtl
jo
inc
jmp
leave
out
mov
imul
xorl
mov
or
ja
xchg
jno
sbb
nop
mov
bound
xlat
xor
enter
arpl
xchg
mov
jbe
jnp
cmc
enter
mul
addr16
insl
fistpl
stos
add
sbb
push
pop
divb
xor
xchg
ja
push
sbb
inc
les
or
jbe
jbe
or
outsl
jns
imul
or
cs
jne
xor
int3
in
sub
roll
sbb
jb
push
xchg
insb
pop
addr16
insb
jecxz
sub
fnstenv
inc
pusha
pop
pop
shlb
or
fistpl
xchg
jne
adc
dec
add
ficoms
ret
sub
or
push
int
enter
push
adcl
test
or
fsubl
add
push
xor
jmp
add
xchg
popa
xchg
jp
dec
pop
inc
les
iret
mov
inc
jae
imul
outsl
cmpsl
jo
and
push
or
pcmpgtd
add
or
mov
xchg
adc
fmuls
addl
push
xor
push
testl
and
daa
xorl
je
pushf
shll
inc
push
jp
cmpl
daa
imul
mull
sbb
imul
sub
xchg
cmp
or
xorps
mov
push
dec
cmpl
pop
add
aas
jl
movsl
out
ss
dec
pop
jae
ficoml
dec
adcl
arpl
or
out
pop
and
push
scas
push
ret
dec
bound
mov
mov
and
ret
adc
push
shlb
cmp
addr16
lds
jo
jnp
push
push
pop
xor
lahf
das
inc
dec
pusha
mov
mov
fimull
mov
lods
shlb
mov
jbe
adc
add
lods
inc
add
add
shlb
mov
in
addr16
imul
add
cmc
test
push
rcrl
jb
push
popa
test
adc
popa
ss
push
mov
andb
mov
and
pop
bound
or
and
cltd
cmovne
test
shlb
jne
push
aaa
inc
xor
jp
fnstenv
movl
push
pop
jo
or
inc
push
insb
loopne
bound
dec
outsl
push
data16
test
je
pop
in
dec
outsl
fidivs
jmp
adc
xchg
rolb
jbe
xchg
cltd
outsb
inc
push
push
fcoms
jp
bound
or
pop
fsts
shll
adc
mov
outsb
imul
cmp
gs
and
aad
fldcw
imul
testl
or
rcrb
mov
movsb
dec
lea
lcall
dec
popa
dec
loopne
cmp
sub
push
mov
push
cmp
and
outsb
mov
or
cli
push
or
add
and
shr
aaa
shlb
inc
outsl
roll
mov
xor
sbb
mov
pop
insb
movb
mov
lock
add
pop
loop
stc
popa
bound
push
outsb
scas
push
dec
push
xor
inc
mov
and
xchg
push
xor
jo
or
xchg
pop
inc
imul
aaa
xchg
leave
lods
push
adc
js
and
and
mov
sub
push
push
in
inc
push
arpl
pop
ss
je
ret
inc
inc
adc
sbb
or
ret
shlb
scas
shlb
fdivrl
fs
movsb
sbb
fsubr
loopne
inc
cmp
xor
scas
out
adc
int
xor
jl
pop
inc
sub
pop
cmpsb
pop
jmp
pushf
or
jae
xor
ss
adc
pop
jp
xor
fnstcw
xchg
mov
mov
call
outsb
nop
js
mov
adc
mov
je
jg
inc
sbb
xchg
dec
cld
out
add
jnp
dec
inc
mov
jbe
jl
pop
lods
fstl
sbb
mov
mov
mov
inc
imul
pop
inc
outsl
mov
xor
loope
testl
xor
sub
data16
push
mov
gs
out
cmpsl
pusha
pop
pop
dec
jb
in
dec
push
es
and
mov
pop
mov
add
xchg
sub
push
mov
lds
xor
lods
loope
dec
insb
xor
mov
xor
shl
sbb
inc
mov
dec
imul
inc
cmove
mov
jb
jne
jecxz
sub
jb
inc
or
pop
mov
popa
aaa
mov
dec
ret
inc
xor
fsubs
or
xor
call
sub
loope
mov
and
and
and
dec
xor
push
aad
xchg
and
mov
hlt
jl
outsb
fsts
pop
sbb
repz
int3
cmpb
jo
popa
inc
add
add
sub
jnp
xchg
and
pop
shlb
xlat
fs
das
adc
mov
nop
cmpsb
xor
dec
scas
and
xchg
mov
push
mov
xchg
iret
inc
test
mov
xchg
and
xor
sbb
movsb
and
sbb
sub
or
xor
jo
les
xlat
push
cli
cwtl
inc
fsubs
mov
mov
adc
jle
mov
rolb
pop
xchg
xchg
xor
xchg
push
arpl
scas
insb
sbb
xor
enter
or
fcomps
xor
je
sbb
pop
test
inc
fcmovbe
shrl
call
shlb
cmp
es
push
xor
jae
outsb
dec
dec
leave
rcl
ds
addr16
jb
cmpsb
dec
adc
test
sub
adc
imul
icebp
push
loop
pushf
sbb
inc
sub
inc
fwait
add
js
cmp
dec
test
mov
in
adc
inc
sub
insl
push
jnp
push
loopne
and
aam
cmp
pop
dec
pop
mov
mov
mov
mov
ds
jae
fldcw
pop
sbb
decb
dec
push
push
inc
jbe
push
dec
cmp
hlt
sub
je
adc
mov
sub
mov
test
adc
sub
and
ss
gs
inc
jae
pusha
pop
ret
adc
inc
xor
sub
arpl
dec
mov
insl
repz
fisttps
dec
cltd
cmc
or
insl
or
hlt
fs
sub
adc
inc
sbb
adc
addb
dec
mov
and
xchg
inc
pop
mov
int
add
js
adc
insb
adc
sarl
mov
mov
mov
xchg
mov
dec
add
cmp
lock
mov
fstps
mov
xchg
mov
js
test
inc
std
sbb
mov
mov
xchg
mov
into
in
outsl
das
imul
sbb
sub
xchg
test
push
sub
aas
sub
ret
mov
aad
ret
adc
pop
xor
lods
add
pop
push
scas
xchg
xor
adc
pop
into
dec
mov
push
pop
cwtl
jnp
dec
shlb
adc
adc
imul
push
or
push
dec
inc
push
test
add
inc
repz
outsb
adcl
cmp
jno
and
jle
inc
push
pop
xor
sbb
push
add
fadds
sub
mov
xor
push
imul
cmp
push
roll
sub
or
stos
lds
mov
dec
inc
test
dec
inc
pop
stos
mov
sbb
aaa
das
fmuls
jmp
fildl
mov
and
push
cmp
arpl
les
rcl
inc
pop
adc
lods
out
jb
roll
cmp
push
sbb
inc
scas
xchg
inc
sbb
pop
ss
fmuls
cwtl
inc
adc
int
jmp
popf
test
inc
inc
inc
adc
mov
pop
jmp
dec
xor
and
andb
sbb
adc
cmp
add
inc
push
popf
cmp
cwtl
adc
jae
jge
popa
cmp
stc
push
adc
shrl
hlt
jo
xchg
call
lock
ja
insb
je
stos
sbb
repnz
shl
xor
stc
inc
xor
sub
push
add
sub
arpl
or
jne
push
out
and
or
and
test
xor
jge
jbe
jo
je
sbb
rol
pop
xchg
arpl
xor
mov
test
xorb
lods
xorb
insl
dec
pop
fldt
addr16
jne
jbe
adc
test
xor
aam
repz
xchg
inc
mov
jns
loopne
pop
insb
inc
pop
sbb
sub
xor
sub
sbb
push
or
fwait
jae
sbb
stos
xchg
jle
mov
mov
scas
imul
adc
adc
mov
mov
hlt
shlb
jne
xchg
mov
and
pop
sub
inc
and
fdiv
add
inc
in
mov
fwait
jb
ret
shlb
jo
cli
inc
movd
or
flds
dec
add
aaa
aaa
repz
mov
xor
mov
sub
arpl
insb
xlat
push
xor
addr16
jbe
mov
ret
fldcw
inc
or
test
fsubl
or
pop
or
jae
pop
ret
pushf
outsl
sbb
test
cmp
jbe
xchg
mov
fwait
xor
inc
xchg
jecxz
fnsave
push
adc
push
and
stos
pop
jns
les
cs
adc
push
sub
push
mov
mov
mov
jo
pop
mov
cli
inc
inc
inc
insb
notb
jo
dec
test
push
das
and
sbb
jo
test
out
mov
and
add
adc
or
lfs
lods
aas
orl
and
xchg
ljmp
or
stos
stos
or
jmp
test
sarl
pop
mov
lahf
ret
lret
jo
pop
fs
and
dec
mov
or
dec
or
lods
sbb
gs
test
in
icebp
xchg
pop
lret
or
mov
and
adc
dec
lock
lods
cbtw
loope
xcrypt-ofb
cmpsl
outsl
cmp
push
inc
sbb
nop
lods
call
ljmp
inc
jnp,pn
mov
movsl
rolb
sub
cwtl
xchg
cwtl
cmp
and
xor
nop
push
ss
pusha
or
pop
sub
sub
sub
dec
xchg
addb
movb
sub
jo
push
add
pop
mov
push
rcrb
pop
xchg
mov
xchg
inc
push
mov
hlt
push
inc
or
mov
mov
push
sub
nop
nop
shlb
int3
sbb
sbb
xlat
sbb
push
sbb
outsw
or
ret
push
out
add
add
dec
in
aam
dec
push
dec
xor
dec
rolb
clc
aad
and
inc
xchg
ljmp
and
or
cmpsl
ret
imul
sub
repz
mov
push
jno
push
mov
mov
xor
leave
hlt
stos
mov
lcall
roll
dec
or
fldlg2
hlt
out
push
and
fnstenv
cmp
fldenv
adc
movsb
dec
popa
cmpl
mov
ret
mov
inc
xor
and
inc
inc
xor
hlt
push
mov
les
jns
popa
les
cmc
sub
and
lret
inc
sbb
incb
xor
cmp
xchg
lods
movb
add
ja
adc
mov
test
rcr
jne
jnp
xor
lods
xchg
movsb
testl
add
lcall
cli
ret
fs
or
popaw
dec
push
mov
mov
int3
es
push
das
pop
or
jae
or
mov
les
inc
adc
ret
shlb
data16
mov
or
and
jae
pop
sbb
and
xchg
xchg
dec
adc
int
add
xchg
fld
sub
adc
jae
aam
adc
bound
inc
ljmp
sbb
xlat
sbb
enter
nop
cmpsb
lods
sub
push
and
xchg
jb
or
mov
inc
ret
or
add
std
cvtps2pd
lahf
pusha
cmp
pop
repnz
or
sub
add
adc
mov
or
mov
es
sarl
das
dec
fwait
stos
add
int3
stos
add
add
or
add
push
and
movsl
std
data16
jnp
xchg
dec
push
in
adc
pop
pushf
and
andl
in
fldl
sbb
or
rorl
mov
mov
dec
outsl
notb
sbb
mov
add
imul
mov
or
push
add
les
add
cld
outsl
outsl
inc
aaa
sti
pop
adc
out
cmp
in
add
stos
adc
pop
idivb
push
add
add
or
jns
aam
outsb
sbb
ja
es
jne
add
push
lret
fnstenv
mov
adc
clc
test
into
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
