fistl
mov
in
incb
test
sbb
dec
incb
add
add
add
add
add
add
add
add
add
add
add
add
lds
or
iret
add
add
add
add
add
add
add
add
add
loope
add
dec
add
add
or
add
add
add
add
fiadds
str
or
sbb
add
adc
push
add
add
add
add
add
add
add
or
jl
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
imul
add
add
add
or
mov
add
out
or
pop
add
add
add
push
add
add
or
fldl
sldt
add
add
add
add
add
mov
or
add
add
add
add
add
add
out
add
add
add
stc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
sbb
add
mov
add
jg
push
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
push
add
add
add
add
add
add
add
add
or
lret
add
add
add
add
add
add
add
add
add
xor
or
add
or
addb
add
add
add
add
xchg
add
add
add
in
push
push
push
push
push
pushl
popl
xor
movl
call
push
popl
test
jne
pushl
popl
pushl
popl
ret
pushl
popl
push
xorw
push
andl
mov
sbbl
pusha
xorl
call
push
xor
add
popl
mov
push
popl
mov
andb
andw
push
push
popl
nop
pushl
popl
addb
movl
pushl
popl
push
popl
nop
push
popl
addl
push
add
and
popl
mov
push
xorb
push
xor
mov
popl
mov
call
pushl
popl
movl
pusha
push
add
or
popl
mov
cpuid
push
popl
addw
popa
push
popl
push
popl
cmpl
je
orl
push
popl
cmpl
je
andl
cmpl
je
movw
cmpl
jne
push
popl
push
popl
call
addl
andw
ret
andw
jmp
push
add
add
popl
mov
andl
xor
subl
mov
sbbl
xorw
shl
subw
mov
push
popl
cmp
jne
sbbl
call
subw
popa
andl
call
push
sub
xor
popl
mov
push
popl
push
orl
nop
orl
pushl
popl
movl
push
popl
sbbw
nop
push
xor
mov
popl
mov
push
popl
addl
push
popl
push
push
popl
pushl
popl
call
push
popl
movw
push
push
push
lea
not
ror
mov
xor
pop
push
popl
mov
push
mov
mov
popl
mov
subw
shl
andw
push
popl
push
orb
orl
xor
push
popl
push
push
sub
xor
popl
mov
movl
call
push
xor
add
popl
mov
push
push
popl
mov
movw
push
sbbl
jmp
subl
movw
pop
pushl
popl
push
add
add
popl
mov
mov
xorl
pushl
popl
push
push
popl
push
push
popl
xorb
push
addl
mov
push
popl
mov
movl
rep
andl
pop
movl
addb
pop
push
lea
xor
mov
add
xchg
push
push
not
add
mov
shr
mov
xor
pop
subw
xor
addl
orl
jmp
push
popl
subw
sub
addl
andb
mov
xorl
push
xor
add
popl
mov
sub
push
popl
movl
sub
addw
mov
push
popl
sub
addl
addl
or
jne
push
popl
add
push
popl
pushl
popl
jmp
push
sub
add
popl
mov
mov
pushl
popl
shr
andw
shl
push
mov
add
popl
mov
mov
orl
addb
jmp
orl
sub
push
popl
subl
mov
andl
cmp
jne
push
popl
mov
movb
add
push
popl
cmpw
jne
push
or
and
popl
mov
orl
ret
push
add
mov
popl
mov
andl
push
pushl
popl
xor
push
popl
subw
and
orb
mov
xorl
and
push
popl
mov
andl
and
push
sub
and
popl
mov
addb
mov
andl
and
xorl
push
popl
lods
orl
and
orw
mov
addw
push
or
sub
popl
mov
pop
push
popl
ret
xorl
push
push
popl
mov
push
popl
pushl
popl
add
push
mov
or
popl
mov
push
push
xor
add
popl
mov
push
andb
push
sub
mov
popl
mov
push
push
popl
addl
push
push
popl
push
addb
push
popl
mov
push
and
and
popl
mov
mov
pushl
popl
add
addl
pushl
push
popl
push
popl
mov
orl
push
popl
add
pushl
popl
sbbb
add
push
and
or
popl
mov
mov
andl
add
push
popl
andl
xor
push
popl
lea
orw
sbbl
mov
orl
add
push
popl
xorl
mov
push
and
and
popl
mov
xor
push
popl
push
popl
rol
push
popl
xor
andw
push
mov
add
popl
mov
inc
xorb
push
popl
cmpb
jne
pushl
popl
cmp
je
andb
inc
movl
push
popl
cmp
jb
subw
push
mov
mov
popl
mov
mov
push
and
xor
popl
mov
addl
add
xorl
sbbb
movzwl
addw
addl
mov
subl
sbbb
add
push
add
and
popl
mov
sbbl
mov
andw
push
popl
add
xorw
addl
pop
sbbl
subl
cmp
jbe
push
popl
push
popl
cmp
jae
orw
push
popl
pushl
push
popl
pushl
andl
push
andl
push
popl
nop
push
popl
addl
movl
pushl
popl
nop
addl
addl
xorl
sbbb
pushl
orl
push
popl
call
xorl
call
andb
pushl
popl
pop
push
popl
sbbl
pop
push
add
sub
popl
mov
push
or
and
popl
mov
pop
movw
push
popl
pop
orl
pop
sbbl
leave
xorl
subb
ret
push
xor
and
popl
mov
push
popl
call
cmpsb
sub
jl
inc
mov
call
inc
mov
push
test
inc
jl
imul
dec
mov
push
mov
xchg
push
je
add
jnp
or
sahf
mov
mov
out
cmc
dec
ret
in
push
lods
xor
inc
lret
or
mov
out
lret
add
call
xchg
or
lret
shlb
add
mov
jo
dec
push
insl
es
test
and
std
sub
shrb
sbb
fs
int
mov
cmpl
sbb
insl
shrl
subb
xchg
out
stc
xchg
loopne
jns
repnz
mov
and
adc
movsb
mov
sbb
jmp
inc
mov
stos
xor
fcmovnbe
mov
int
test
fdivl
jbe
push
pop
cmp
or
clc
and
testl
ss
mov
idivl
out
dec
movsb
scas
in
dec
jle
inc
clc
sub
xlat
cmpsl
sub
fmul
mov
push
stos
ss
insl
aam
in
mov
cmp
sbb
and
and
int3
ret
ret
aaa
fsubl
jo
dec
push
insl
pop
imul
arpl
in
mov
and
ret
sub
lods
imul
fcoms
jb
imul
push
ret
pop
pop
iret
dec
outsb
in
mov
ss
pop
jl
pop
pusha
pusha
lods
inc
xlat
mov
ja
out
or
xor
in
mov
and
mov
rorl
push
nop
push
fistps
ret
fcoml
lods
push
dec
push
stos
ss
mov
test
stos
xlat
lcall
and
nop
inc
mov
push
icebp
xor
orl
enter
lods
jb
ret
std
sub
stos
cs
fnstenv
incb
push
stos
xchg
mov
rol
cmp
jmp
jl
pop
xchg
dec
cli
outsb
push
jecxz
inc
and
mov
iret
mov
je
dec
xor
dec
out
mov
stc
hlt
lcall
sub
xor
mov
jo
cs
push
mov
inc
mov
out
mov
stos
xchg
fistl
pop
push
hlt
mov
cmp
push
mov
inc
xchg
jmp
dec
mov
mov
aas
enter
std
mov
hlt
mov
ds
call
fldl
mov
jns
mov
lcall
cmp
mov
sub
dec
rcll
call
fnsave
in
sarl
subb
xchg
xor
mov
add
test
and
clc
sbb
inc
lock
push
cmp
jae
incb
imul
sub
imul
push
inc
aam
imul
mov
dec
hlt
cwtl
adc
sub
sldt
outsb
cltd
mov
movb
in
iret
shrb
pop
xor
push
sub
shrb
ret
mov
jmp
cld
xchg
cmp
stos
in
outsl
mov
xorl
cmp
int3
pop
mov
lods
pushf
mov
push
stos
ss
jp
in
popf
adc
adc
add
mov
push
dec
and
fistl
and
out
loop
fildll
mov
inc
xor
mov
rol
icebp
pop
shl
sub
sarl
push
push
es
inc
rcr
andb
mov
dec
xor
mov
aaa
xchg
les
xchg
sbb
push
pop
cmp
stos
xchg
push
and
loop
stos
ss
jno
test
outsl
add
daa
cmpsl
fbld
rol
pop
xor
cmpsl
mov
ss
push
push
push
stos
ss
sub
popf
xor
xchg
lea
jbe
mov
push
ret
fbld
std
shll
out
dec
mov
mov
adc
int3
mov
lea
or
xchg
movsb
int3
and
push
adc
push
cmp
add
repz
in
fsubs
adc
mov
push
sbb
adc
mov
pop
fcoml
lock
mov
int
stos
sub
out
aad
fld
pop
stos
ss
or
and
rorl
imul
mov
test
cmpsb
std
xchg
inc
shl
mov
ret
ftst
inc
repnz
aam
pop
mov
out
inc
push
adc
dec
pop
and
inc
out
lret
inc
push
cmp
loope
mov
out
in
sbb
dec
add
xchg
aas
mov
subl
sbb
lahf
or
mov
nop
cmp
jl
pop
pusha
pusha
lods
mov
jp
mov
fcmovne
pop
jp
xchg
cmp
and
adc
mov
sub
mov
push
xlat
pop
inc
shrl
xchg
pop
stos
ss
lods
push
xorl
or
push
lods
jb
ret
std
sbb
call
stos
sub
outsl
daa
cmp
ret
pop
stos
ss
je
dec
inc
dec
movsl
sti
mov
mov
out
rol
pop
inc
jo
dec
cld
pop
sub
arpl
fbstp
test
in
clc
scas
lods
cmp
notb
div
and
xlat
lcall
loop
sbb
mov
xchg
inc
hlt
pop
sar
push
mov
imul
pop
pusha
pusha
mov
pop
in
and
idivl
xchg
cmp
fcoml
mov
mov
fs
fistpll
rorl
lods
imul
dec
adc
add
js
and
fistl
lea
and
xor
cmp
sbb
cmp
cs
mov
inc
fistpl
push
inc
pop
xchg
jp
add
mov
cmp
and
fdivr
dec
dec
in
sbb
sub
push
mov
xchg
sbb
mov
pusha
mov
iret
cli
stc
and
and
cmp
les
sbb
sub
push
outsb
or
xchg
je
popa
ja
fldl
call
lods
sahf
shll
pop
dec
inc
pop
stos
in
jbe
add
imul
lahf
add
hlt
pop
sar
push
mov
fcoml
ss
push
mov
inc
lea
dec
xchg
pop
inc
daa
rol
in
mov
cmp
jno
push
cmpsl
std
imul
pop
mov
ret
sbb
fimuls
mov
mov
outsb
add
xor
xchg
mov
fs
pop
pop
push
ficomps
imul
daa
pop
or
insb
mov
scas
ret
pop
and
xchg
jb
pop
scas
in
sub
jmp
sbb
loopne
jne
xor
push
movsl
push
jl
js
inc
sub
shlb
or
test
mov
fldl
sbb
push
sbb
dec
cmp
int
lret
ss
sbb
or
stos
dec
dec
inc
or
xor
and
xlat
lcall
scas
cmp
faddl
sbb
loope
inc
cmp
stos
in
xchg
sub
sar
scas
add
imul
mov
pop
inc
mov
aas
in
test
fs
int
fcmovu
and
ret
mov
xchg
jb
shll
loope
cmp
sahf
int
lods
add
add
int
push
insl
push
call
shll
fistps
std
xchg
mov
jge
pop
pusha
pusha
int
xlat
mov
iret
pop
jp
xchg
sarb
int
scas
add
subb
in
les
gs
icebp
xor
imul
adc
js
out
into
push
cmpsl
xchg
gs
outsb
fwait
or
xor
es
out
cmp
push
inc
xor
cmpsb
cmp
popf
push
cmp
jle
movsl
leave
push
popw
sbb
cmp
sar
xor
arpl
in
or
inc
outsb
push
int3
or
int
adc
jnp
pop
jae
mov
rol
inc
mov
inc
imul
or
cld
enter
iret
dec
push
and
mov
fnsave
mov
addr16
es
jno
out
call
mov
and
push
stos
or
ret
xchg
fistl
mov
xor
dec
inc
dec
movsb
jle
jmp
mov
cmpsb
mov
out
cld
out
cmp
sahf
int
loope
mov
lahf
inc
xor
fs
hlt
insb
cmovae
insb
bound
inc
sarl
xchg
push
xchg
jb
lret
cmp
sub
dec
loop
sbb
push
pop
shll
mov
pop
shll
cmp
xor
mov
mov
jecxz
int
xlat
jno
jmp
adc
sub
inc
adc
popf
inc
test
xchg
movsl
push
mov
xchg
loopne
add
mov
cmpsl
clc
xlat
cld
pop
mov
js
jbe
mov
push
pop
addr16
int
xlat
mov
mov
push
stos
ss
add
and
ret
mov
or
aam
sub
sbb
pop
shr
je
out
sub
test
xchg
inc
fcoms
cmpsl
jl
aaa
cmp
push
or
stc
mov
stos
ss
mulb
pop
gs
xlat
lcall
jg
insl
fstl
out
fildll
aaa
call
push
cmpb
imul
inc
mov
mov
call
add
pop
pusha
pusha
mov
sub
iret
fistpll
jae
mov
sbb
or
or
mov
pop
clc
sbb
sahf
sub
xor
mov
add
mov
adc
fstps
pop
sbb
fistpll
aas
fildll
jae
pop
jp
inc
out
fdivp
ficomps
cld
mov
push
adc
movb
inc
or
sbbl
dec
rclb
pop
adc
xchg
lds
lret
inc
pop
jns
sti
scas
add
sbb
pop
push
lret
or
dec
es
cltd
pop
movsl
mov
xor
mov
and
adc
mov
sub
mov
fsubp
pop
push
xlat
pop
inc
shl
xchg
jo
ss
pushf
inc
cmpsb
cwtl
test
icebp
fs
int
lods
aad
mov
lods
loopne
daa
movsl
mov
out
cli
and
imul
cmp
cli
or
mov
addr16
jmp
popf
pop
xchg
cmp
arpl
ss
lret
add
adc
test
mov
sub
push
mov
bswap
dec
lret
sbb
jl
mov
push
out
loope
sti
cli
aas
add
popl
dec
ds
in
daa
mov
inc
sbb
fwait
jno
mov
aaa
pop
mov
jmp
lock
fdivrl
lods
sbb
add
sub
mov
add
je
pop
xchg
stos
mov
inc
sub
mov
les
subl
mov
or
and
fisubs
sahf
daa
das
xlat
stos
in
fsubrl
mov
push
stos
mov
sub
push
jl
stos
gs
pop
jae
popa
fsubl
sub
or
out
shll
shll
int
call
cmpsb
pop
and
and
js
xchg
out
push
sarl
ss
jb
and
mov
das
cli
in
dec
mov
xchg
push
fs
into
fldt
sahf
int
popf
xchg
pop
test
and
lret
mov
iret
int3
push
xlat
and
call
add
add
cwtl
and
lods
cmpsb
sbb
enter
pop
dec
sub
sub
in
jns
ret
ljmp
loope
outsb
xchg
push
fs
dec
ret
ss
lods
mov
rclb
addr16
sub
cmp
fwait
mov
pop
sub
test
fldl
or
adc
jae
sbb
cmp
dec
pushf
mov
push
aad
int
fimuls
inc
shll
inc
decl
iret
leave
cmpsl
clc
mov
fsubrl
aad
add
aaa
fldcw
aas
mov
xchg
pusha
or
xor
xchg
bound
pop
pop
inc
rorb
xor
push
or
sbb
sbb
fwait
mov
fadds
loop
mov
push
scas
rclb
push
inc
bound
mov
and
adc
fcomip
xor
pop
inc
iret
inc
fadds
mov
ja
test
and
popf
mov
mov
inc
int3
push
adc
jae
xchg
int
mov
fnstsw
dec
mov
mov
stos
pushf
ret
test
mov
mov
test
in
jecxz
gs
xchg
ret
icebp
push
mov
mov
sbb
push
sub
push
push
push
sbb
sarl
cmpsl
dec
fsts
fs
aas
push
iret
mov
dec
sbb
dec
cmp
sub
mov
mov
test
in
jmp
xor
cmpsb
mov
lock
ss
stos
mov
clc
inc
and
lret
rclb
push
mov
loope,pt
stos
xor
dec
push
jge
pop
pusha
pusha
mov
fildl
into
out
jp
xchg
ja
lcall
out
into
push
out
xchg
popa
push
sub
sbb
xchg
push
jo
xchg
jecxz
fdivrl
dec
sub
shll
inc
mov
jne
mov
jbe
push
mov
jo
enter
int
mov
mov
lahf
inc
ja
ficoml
addl
inc
in
pop
clts
ja
cmp
rolb
test
notl
ja
out
lret
sub
ja
xchg
js
shrl
popa
xchg
imul
int3
adc
outsl
mov
pop
in
sbbl
mov
hlt
mov
imul
clc
mov
clc
and
push
popa
cmp
lods
addr16
fldenv
xlat
cwtl
jl
out
jmp
mov
jnp
mov
mov
fnsave
add
mov
mov
movsl
xor
lcall
xor
outsl
dec
push
insl
clc
imul
cmp
mov
es
sbb
xchg
sbb
pop
xor
test
test
icebp
xor
stos
insl
cmp
cwtl
jl
pop
sbbl
fs
int
xchg
push
pop
shll
mov
and
push
mov
ljmp
and
mov
popf
pop
daa
outsb
stos
in
xchg
sbb
shll
rcrb
mov
mov
aam
sub
push
fs
int
test
daa
and
pop
stos
ss
sbb
stc
mov
cmpb
cmp
movsb
cmc
inc
fstpt
pop
ss
pusha
xchg
aas
mov
enter
jnp
insl
sahf
int
jo
cltd
sub
add
in
dec
sbb
fldcw
insb
sbb
xor
xlat
imul
scas
xor
and
push
mov
int
cmpsb
arpl
xor
je
imul
or
mulb
jle,pt
call
stos
sub
pop
mov
jne
pop
stos
ss
movsb
cli
and
rorl
iret
out
aam
pop
pop
inc
sahf
mov
fldcw
and
jae
jno
push
stos
xchg
pop
imul
inc
mov
or
subl
adc
push
lea
popf
ss
in
mov
scas
fmul
add
adc
sbb
sub
or
dec
outsl
xor
cld
inc
leave
adc
push
aas
mov
imul
cmpl
fnsave
aad
sbb
es
ret
or
xchg
sahf
int
xlat
test
mov
push
stos
ss
icebp
cmp
insl
add
inc
stc
jg
mov
push
mov
mov
xlat
int3
mov
and
and
test
mov
cld
and
fldenv
call
or
pusha
and
into
fs
dec
testl
pop
jecxz
cmp
rcrb
rclb
out
dec
dec
mov
mov
and
lods
stos
ja
leave
push
sbb
push
and
scas
int
add
jmp
sub
in
xchg
inc
ret
sbb
inc
icebp
lret
mov
cwtl
mov
dec
ror
fwait
sbb
stc
and
ds
pop
call
lret
das
and
xor
dec
aaa
out
dec
fwait
lret
push
popa
pop
jmp
ret
sbb
aaa
push
cmp
push
cld
dec
adc
cltd
popa
ja
mov
mov
xchg
loopne
xor
fs
arpl
aaa
scas
stos
lods
lock
push
loopne
push
ss
mov
mov
lret
shll
or
insb
pop
xchg
ds
sbb
sarl
out
dec
or
dec
fnsetpm(287
test
fnsave
jmp
fistpll
into
mov
test
inc
outsb
and
adc
mov
xor
mov
cmp
pop
inc
mov
add
pop
shrb
dec
push
insl
std
and
mov
sbb
cld
sub
fwait
mov
cmp
pushf
repz
mov
out
fs
int
cmp
sarl
mov
mov
pop
mov
in
adc
out
cmpsb
mov
stos
cmp
jge
in
nop
pop
pop
aas
bound
push
add
call
push
add
js
sahf
int
icebp
pop
sbb
adc
push
insl
fcoms
aam
mov
pop
scas
pop
mov
adc
mov
dec
mov
adcl
add
inc
lds
adc
stos
sub
test
stos
ss
push
add
shrl
xor
mov
sbb
jcxz
fcmove
fwait
ss
pusha
lock
xchg
ret
jo
ret
int
sub
iret
popl
xchg
pop
push
sahf
sbb
test
outsl
cltd
dec
push
insl
sub
xchg
cmp
stc
sub
xchg
inc
mov
and
push
stos
mov
pop
popa
mov
dec
xchg
dec
xlat
in
cmp
mov
xchg
mov
cmpsl
int
xlat
movsl
mov
cmc
test
sub
es
pop
push
movsb
jno
ret
pop
pop
lods
and
lcall
inc
mov
add
sbb
jo
dec
push
insl
sub
inc
sub
sbb
cld
sub
mov
xor
test
xor
arpl
call
or
sti
mov
mov
adc
and
popf
arpl
testl
and
ljmp
push
sar
lret
adc
or
subb
mov
cmp
pushl
inc
bound
add
mov
mov
mov
push
in
lcall
mov
xor
cmpsl
int
test
lock
outsl
mov
mov
sub
cld
mov
daa
addr16
das
sti
fdivrl
mov
or
test
arpl
mov
cmc
xchg
push
ret
xor
mov
jne
mov
and
enter
mov
cmp
mov
cmpsb
xchg
and
lods
imul
imul
lods
push
ret
das
cmpsb
sub
cmp
xchg
pop
stos
ss
push
xor
fldcw
shrl
inc
mov
stos
pop
inc
out
adc
stos
mov
fidivl
xchg
lea
repz
bound
adc
sti
dec
mov
mov
out
jp
test
jecxz
dec
sti
call
iret
shrl
and
ret
sbbb
sub
push
scas
jmp
mov
jge
mov
scas
fmul
and
adc
jb
nop
xchg
fidivrs
ret
mov
xlat
inc
vmovmskpd
add
iret
mov
jg
sti
fadds
popa
jae
sbb
or
fldt
insb
shll
imul
ds
out
add
js
mov
leave
lods
cmp
and
cmp
cmp
cmc
and
ljmp
fildl
lds
inc
into
sahf
pop
mov
push
mov
fistl
xchg
mov
sbb
shrl
add
pop
mov
xor
push
dec
hlt
pop
sar
push
mov
cmpsl
add
shlb
int
sbb
adc
sbb
xor
push
popf
push
xchg
mov
testb
mov
popf
fs
frstor
mov
sub
jmp
js
fcompl
mov
outsl
push
pushf
gs
call
xlat
mov
call
inc
shlb
mov
ds
pop
ficompl
jecxz
or
dec
sub
inc
sahf
sub
pop
mov
jno
sbb
mov
test
mov
push
stos
ss
mov
cmp
push
insb
sub
sbb
ret
in
mov
mov
push
in
lods
sbb
xor
loopne
xchg
lock
xor
js
push
ficoms
inc
shlb
sti
out
lcall
pop
jle
jbe
push
and
xor
vorps
pop
cs
idivb
sub
mov
sub
mov
aam
push
mov
int
lods
push
mov
mov
push
in
jno
dec
lods
jb
ret
std
pop
and
clc
jmp
xchg
pop
hlt
lods
add
aam
outsl
les
insl
std
shl
test
lock
mov
sub
mov
cmp
stos
pop
and
rcrb
scas
scas
xor
loope
push
mov
das
jle
fs
and
inc
and
jae
dec
movsb
sbb
push
jo
push
loop
push
sbb
je
js
adc
xchg
cwtl
mov
dec
add
adc
sti
fwait
sbb
aad
cmp
inc
pop
into
fistl
inc
insl
jg
int
pop
test
mov
subb
xor
mov
add
xchg
pusha
pusha
sarb
into
out
jp
xchg
imul
xor
xor
fs
fcoms
cltd
in
inc
pop
or
lods
bound
sti
pop
mov
pushf
mov
dec
outsb
in
mov
ss
jns
and
push
or
jns
enter
cmpsb
ja
mov
cmpb
test
cli
std
jae
clc
fmuls
ss
sbb
cmpb
call
xlat
mov
mov
push
stos
ss
pop
pushf
mov
fldl
dec
adc
stos
sbbl
pop
cmp
fs
xchg
fcoml
mov
jmp
sti
mov
xor
es
ds
call
shlb
inc
mov
imul
dec
cmpsb
imul
mov
lret
arpl
pop
in
fs
push
and
mov
sub
dec
les
sbb
adc
push
outsb
add
addr16
mov
xchg
dec
cld
cmc
xor
mov
mov
jg
dec
pop
dec
addr16
pop
xchg
mov
mov
sub
test
and
or
xlat
lcall
lods
or
jb
xchg
inc
out
sti
leave
addr16
shll
pop
dec
aad
int
xchg
fistl
or
mov
pop
clc
insl
mov
and
mov
das
cld
ljmp
and
arpl
jae
mov
mov
sub
adc
enter
mov
loopne
cld
jbe
jp
push
xor
dec
icebp
xchg
push
inc
cwtl
lods
into
inc
aad
jb
in
mov
cli
out
lods
iret
mov
push
add
repz
aas
sbb
push
mov
stos
xchg
lahf
inc
adc
addr16
out
jae
negb
sbb
push
xlat
jl
or
mov
std
out
enter
fcmovnu
cs
mov
test
mov
pop
push
rcl
xchg
lahf
push
testb
mov
mov
dec
pusha
lock
sahf
xor
fsubs
outsl
pop
pop
sub
sbb
push
pop
xchg
ss
mov
stos
xchg
in
insb
cltd
sti
pusha
pop
in
fs
int
sbb
fistpll
push
or
enter
clc
pop
and
mov
pop
cmp
adc
ja
add
sbb
xor
fwait
mov
mov
push
call
enter
std
jb
out
int
jb
jne
mov
repz
and
sub
sub
call
mov
movsb
int
push
mov
sub
pop
into
gs
xchg
sbb
jno
shrl
push
cmp
out
arpl
mov
fnstenv
loope
mov
and
mov
imul
imul
mov
jp
push
arpl
imul
inc
pop
inc
aad
cmp
dec
and
addb
mov
mov
pop
sub
mov
jl
mov
fisubs
popf
jmp
dec
mov
mov
scas
into
movsl
scas
push
inc
inc
mov
inc
rol
scas
lea
mov
pop
iret
daa
lcall
inc
mov
pop
mov
sahf
int
sbb
pop
pop
dec
xchg
ficomps
xchg
fistl
out
pop
shll
dec
cmpsb
lods
ja
push
nop
aad
and
ds
loop
call
loope
inc
sarl
std
lock
outsl
mov
xchg
in
fisubrl
jge
cmp
mov
daa
aaa
lods
fisubrs
outsl
mov
jns
mov
jae
push
call
lret
or
and
mov
mov
mov
inc
stos
shrl
loop
test
mov
data16
mov
dec
add
cmp
std
daa
les
add
pop
mov
cli
mov
and
mov
xchg
xor
jae
jne
mov
imul
mov
daa
arpl
cmp
daa
subl
mov
mov
ret
pop
int
repz
xor
imul
int3
es
xor
scas
loop
out
rol
pop
jp
sti
xchg
sbb
add
fistl
aaa
cmp
cltd
add
sti
push
repnz
int
mov
call
cmp
cmpsl
xor
fcompp
outsb
shrl
je
or
movsl
rcrl
cmp
xchg
subl
lods
les
ss
jbe
and
mov
cmp
loop
mov
cmc
test
fstpt
push
imul
xchg
push
int
test
sbb
fs
int
or
push
dec
jnp
or
sbb
sub
bsf
jbe
push
and
fildl
mov
fwait
push
popa
jnp
mov
out
sbbl
sbb
add
pop
lock
mov
dec
mov
and
fldcw
jo
cmp
mov
push
push
fs
pushw
and
jo
insb
je
cs
in
dec
mov
ss
insb
hlt
dec
fnstenv
int
push
adc
dec
dec
mov
pop
call
es
sbb
and
rcrb
inc
popf
inc
mov
aad
pop
lock
bound
negl
push
repz
dec
add
dec
stc
pop
in
dec
shlb
cmp
into
and
pop
dec
dec
insb
push
cli
mull
pop
xor
mov
inc
call
push
and
aam
and
faddp
dec
lret
addr16
rorl
mov
dec
dec
xchg
pop
mov
fs
xchg
xchg
cmp
mov
out
out
mov
fdivrs
je
xchg
daa
les
xchg
and
adc
jae
xchg
imul
add
nop
mov
push
adc
dec
and
jle
jbe
xchg
jno
rol
push
inc
jb
add
adc
cmp
decb
xor
test
fimuls
cmp
push
popf
daa
mov
mov
sbb
nop
xor
cmpsl
sub
shl
push
les
ss
mov
nop
pop
out
xchg
repz
jno
popf
scas
xor
ljmp
andl
stc
aas
in
cmpsl
test
mov
cld
mov
daa
les
adc
fcmove
mov
jle
ds
xor
add
cwtl
fisubs
icebp
xor
adc
fisubl
jne
imul
cmp
fs
add
inc
mov
push
lahf
pop
xchg
cmp
or
jne
push
xchg
stos
je
and
dec
lret
sbb
inc
sti
inc
mov
movsl
icebp
out
cmpsb
rorb
sub
sbb
lret
pop
lods
cli
pop
notl
push
test
aaa
jp
insl
in
mov
and
mov
out
mov
pop
dec
aam
popl
rcr
push
stos
paddq
mov
es
and
imull
call
sarb
sub
jmp
jge
gs
cmp
xor
xlat
xor
push
jne
add
mov
loope
sub
mov
daa
cmpsb
popf
loope
dec
or
pop
sbb
loopne,pt
loope
jge
iret
insl
and
filds
sahf
pop
mov
adc
and
adc
add
push
out
mov
push
pop
inc
mov
mov
and
adc
jge
pop
adc
popf
push
ret
mov
ss
out
leave
push
pop
inc
mov
stos
xor
call
mov
stc
mov
xchg
stos
in
andl
jge
loope
mov
ss
popa
jl
pop
pusha
pusha
stos
dec
jno
jp
xor
pop
jp
xchg
mov
stos
int
test
xor
cmp
pop
stos
ss
mov
cmp
add
stc
ljmp
ss
mov
test
cmp
loopne
stos
stos
fiadds
lret
out
sub
mov
pop
cmpsl
sub
jecxz
mov
mov
dec
enter
shll
jmp
scas
inc
mov
in
xchg
dec
lds
mov
clc
inc
jae
cmpsb
and
loope
das
mov
xlat
fistl
lahf
mov
imul
shrl
addr16
pop
out
std
rclb
cld
mov
mov
subb
inc
adc
add
push
ret
push
and
aam
lcall
push
add
bound
rorb
pop
mov
into
xor
ja
sub
cli
js
jmp
clc
outsb
push
leave
rclb
sbb
cmpsb
sbb
out
pop
movsb
outsl
cmc
pushf
sbb
cwtl
ret
mov
out
dec
aad
or
fistl
cmp
nop
shlb
cli
inc
rorl
mov
subl
mov
inc
scas
mov
inc
sahf
scas
xor
and
shr
cwtl
int
mov
lea
leave
cmpsl
clc
fmulp
pop
xchg
stos
movsl
loopne
ljmp
lea
leave
cmpsl
clc
scas
imul
mov
or
ret
mov
out
and
xlat
test
mov
push
stos
mov
xchg
cmp
pop
adc
ds
dec
call
cmpsb
lock
mov
pop
int3
sbb
push
shrb
fistl
in
and
mov
outsb
imul
jmp
fmul
ret
mov
aas
call
xchg
loop
push
int
xor
mov
pop
pop
inc
xor
and
pop
push
mov
in
fildl
imul
push
mov
xor
xchg
aaa
call
inc
rcrb
scas
dec
and
jge
jae
jle
cmpsl
dec
dec
mov
test
xor
push
inc
repz
mov
push
pop
out
out
addr16
mov
aad
push
cmp
jg
add
mov
lods
lret
shlb
mov
sbb
clc
xchg
add
xor
leave
scas
lret
mov
pop
and
das
adc
mull
mov
mov
xor
and
lahf
leave
cmpsl
clc
mov
pop
mov
ljmp
inc
cmp
xchg
or
in
fs
int
inc
rcll
push
sarb
pop
fisubl
negl
lea
lcall
fs
lret
and
gs
mov
test
loope
ret
fcmovne
out
incb
pushf
fstpt
outsb
sti
sahf
int
stos
sub
cmp
fsubs
call
insb
or
in
fcomps
inc
push
fnstenv
shrl
in
pushf
adc
jns
popf
mov
loope
aas
jae
scas
sbb
nop
pop
xchg
fistl
rcr
inc
ud1
scas
xchg
cmp
and
cmpsb
into
mov
or
mov
fisubs
das
imul
mov
enter
popf
shrb
int
dec
pop
xor
mov
xor
or
lret
push
mov
insl
cmpsb
sar
arpl
mov
aaa
mov
push
add
xorb
stos
bound
int
outsb
sbb
roll
ret
rclb
mov
cmp
dec
outsl
sub
inc
out
lret
clc
jo
sbb
test
test
or
sub
insb
hlt
pop
dec
movsl
int
push
push
xchg
cmc
lods
mov
xor
scas
or
pop
rol
pop
cmp
call
int
scas
insl
inc
call
push
stos
ss
lea
lods
and
xor
popf
bound
nop
add
jne
insb
int3
lahf
sbb
ds
dec
scas
ljmp
lret
or
jbe
iret
shrb
mov
mov
jno
mov
jns
add
aaa
loope
mov
cmpsb
rcrb
std
mov
leave
cmpsl
clc
loop
and
lock
mov
jmp
loope
push
in
add
in
fs
int
add
shrb
add
and
das
xor
stos
sbb
addr16
loopne
add
ret
ss
mov
pop
push
iret
mov
cmp
fsubs
pop
xchg
cmp
mov
stos
push
dec
mov
cmp
sysret
mov
xchg
adc
push
insl
xchg
into
jecxz
push
dec
xchg
push
insb
or
inc
sbb
sarl
iret
mov
pop
lods
js
push
out
in
mov
pushf
daa
scas
pop
mov
add
jge
add
inc
mov
fcmovne
lahf
mov
shrb
mov
outsb
and
inc
push
pushl
adc
ret
sbb
xchg
push
iret
mov
repnz
mov
pop
es
sahf
int
loope
inc
jae
stos
pop
and
pusha
fcompp
fidivrs
into
xchg
xchg
inc
pop
ror
insl
xor
jae
std
sub
dec
pushf
pop
push
rcrb
pop
mov
mov
xor
adc
push
arpl
sbb
and
pushf
rclb
lds
ss
adc
push
adc
popf
sub
mov
add
mov
push
mov
adc
xor
adc
lret
sbb
dec
jle
mov
adc
fcomip
push
inc
ret
aam
jne
pop
dec
cmpsl
int
push
mov
and
inc
movsl
imul
push
mov
adc
xor
in
add
lods
push
pop
xor
fbstp
aaa
gs
cmp
pop
xor
push
arpl
pop
stos
ss
inc
mov
addr16
iret
cs
in
dec
mov
lea
in
cli
cmpsb
cmc
push
pop
repz
int
sub
mov
imul
icebp
repz
pop
loope
dec
out
pop
xchg
add
arpl
ss
pop
iret
jl
mov
and
jbe
lds
enter
std
movsb
iret
nop
repnz
sbb
jl
std
nop
mov
xchg
insl
and
pop
push
int
addr16
mov
xchg
mov
or
push
rcll
aam
pop
pop
iret
xchg
cmp
push
mov
inc
pop
pop
inc
jnp
xchg
loopne
in
and
lret
stos
jecxz
push
rcl
lods
jo
inc
sarb
xlat
scas
pop
cld
ljmp
call
cmpsb
sub
jp
pop
inc
les
call
inc
mov
stos
ret
fldcw
shll
jmp
push
mov
mov
xchg
std
sbb
mov
xchg
dec
xchg
jns
in
ror
xor
mov
or
cld
aam
mov
sar
lahf
push
cmp
jecxz
dec
ret
push
bound
mov
cltd
rolb
ret
mov
addl
mov
fnsave
xlat
test
mov
push
stos
fisttps
mov
inc
dec
mov
out
dec
movsl
sbb
into
mov
mov
xchg
call
push
stos
imul
sahf
push
stos
sub
call
mov
icebp
and
xlat
lcall
dec
stos
xor
jb
xchg
inc
pop
popa
into
fistl
inc
insb
addr16
int
fnstenv
imul
lahf
stos
ss
push
add
mov
fs
aas
adc
and
fistpll
inc
mov
pushf
pop
push
mov
push
push
int
mov
inc
jmp
adc
mov
popf
sbb
mov
inc
mov
xor
fs
xchg
push
stos
roll
int
fldenv
into
fistl
lea
leave
cmpsl
clc
imul
and
ret
adc
ss
push
stos
lea
lahf
inc
push
inc
ficoms
xchg
cmpsl
add
gs
popf
inc
movsb
ror
push
mov
stc
and
mov
sub
adc
push
cmp
mov
cmc
fadds
arpl
popf
add
lods
push
or
mov
test
ss
mov
ss
inc
scas
stos
sbb
mov
xchg
xor
divb
fcoml
mov
or
mov
test
pop
icebp
ret
pop
stos
ss
inc
mov
push
in
mov
stos
gs
in
pop
inc
mov
mov
and
icebp
mov
and
xor
jns
imul
lods
bound
sti
sbb
adc
jo
mov
outsb
iret
lea
and
daa
dec
xor
sbb
xchg
lods
inc
shl
into
adc
sbb
dec
cmp
in
lahf
jecxz
mov
xchg
out
pop
mov
pop
fcmovne
mov
pop
insb
popf
and
test
sbb
fs
int
rclb
jae
out
cmpsb
xchg
jo
pop
rol
or
jo
scas
mov
inc
xor
scas
fistpl
imul
cmp
inc
jno
sbb
fisubs
pop
sbb
pop
xchg
lret
pop
or
xlat
lcall
cltd
ficompl
inc
sub
sub
loopne
js
les
call
inc
rclb
fldcw
shrl
mov
ja
pop
frstor
sub
loope
mov
mov
xchg
pusha
pusha
mov
xlat
jl
arpl
mov
nop
aas
xchg
pop
pop
sub
mov
mov
lea
xchg
push
dec
pop
inc
daa
sti
mov
inc
or
int
int3
enter
out
and
mov
sbb
push
xchg
movsb
or
xchg
popa
inc
inc
fcomps
lods
inc
mov
pop
sbb
mov
test
imul
cmp
fs
adc
ret
insb
xchg
enter
fiadds
mov
jbe
int
mov
add
push
and
rcll
mov
lods
movhps
bound
loop
cmpsl
aam
mov
leave
dec
sub
iret
nop
mov
test
mov
ror
adc
ja
jmp
arpl
xchg
cmc
fmuls
xor
adc
popf
xor
dec
add
ret
and
pop
mov
insl
ss
xchg
push
aaa
jmp
aaa
and
std
sub
lods
cld
mov
in
into
fistl
stos
test
insl
stc
shrl
outsb
push
std
push
dec
and
bound
data16
push
ud2
jns
cmp
add
test
aaa
cmp
add
aad
mov
fbstp
incl
mov
mov
insb
stos
ss
fs
dec
fstps
cmp
dec
mov
shll
mov
test
orl
mov
mov
mov
std
cmp
fs
add
add
mov
leave
lret
inc
mov
xchg
enter
aad
rorl
and
mov
ret
arpl
mov
ds
dec
sbb
xchg
fnsave
cmp
sahf
pop
aam
and
cmp
xchg
cmpsl
pop
dec
leave
sub
mov
cmp
lods
mov
pop
sub
loopne
sahf
int
xlat
test
mov
push
stos
ss
xchg
pop
mov
sub
std
mov
testl
aas
shll
int
mov
test
xchg
add
aaa
call
push
stos
ss
jecxz
fs
inc
add
cmpsl
sub
fistpl
mov
xchg
test
in
inc
ret
mov
into
rcrl
fucompp
cltd
pop
rcl
call
sub
aaa
clc
fs
and
in
push
xchg
fistl
lods
add
mov
cmp
in
cs
in
dec
cmpsl
push
shlb
outsb
insb
lds
cld
push
out
sahf
int
push
std
mov
fs
int
lret
mov
push
lcall
ror
xchg
push
push
es
subl
cmpsb
enter
jle
and
fmul
pop
mov
push
push
jle
iret
shrb
nop
dec
iret
jae
sbb
fs
divl
jno
cmp
lcall
fs
int
shl
xlat
xor
es
push
inc
mov
lcall
scas
xor
jae
adc
push
stos
mov
fldt
and
into
mov
fidivs
jge
xorb
mov
dec
lock
sbb
aam
loope
dec
push
ja
pop
add
mov
and
pusha
mov
and
pop
dec
ja
decb
mov
es
nop
jmp
pusha
mov
sub
fsts
and
adc
push
adc
popf
and
scas
loop
mov
inc
shr
sbb
add
fsts
or
mov
lock
fcompp
sti
inc
idivl
mov
jg
icebp
adc
cmpsl
and
in
out
pop
inc
pop
mov
mov
arpl
popa
js
mov
imul
pusha
enter
dec
xor
jmp
cmp
xchg
loopne
add
push
ds
ss
mov
aas
enter
or
sub
mov
rol
imull
cmpsl
sub
jmp
out
push
mov
fdivr
pop
add
icebp
push
insl
jl
fsubrs
sbb
aam
mov
push
push
ss
adc
add
cmpsb
movsb
fwait
test
stc
fadds
dec
jno
sbb
shl
xchg
sub
test
mov
push
stos
ss
push
mov
cmp
jne
mov
insb
and
mov
imul
sahf
pop
stos
mov
ss
jp
popf
aaa
xchg
jo
jb
les
adc
sbbb
enter
lret
jge
cmc
lret
int
popa
jp
mov
xor
aaa
add
pop
enter
daa
inc
mov
add
fcmovne
cmpsl
clc
stos
pop
int
pop
mov
sub
test
cmc
and
xchg
clc
pop
call
dec
sub
dec
fstl
adc
xchg
jbe
and
fistl
xchg
sbb
mov
aas
call
or
in
dec
stos
and
test
mov
or
jae
icebp
dec
aam
aad
mov
push
mov
mov
stos
mov
sbbb
int
mov
es
mov
loope
shrl
fstpt
fbld
out
and
cmp
cmp
mov
icebp
insb
rorl
jo
xchg
jecxz
pop
int3
das
test
int
cmp
mov
outsl
xor
pop
rol
pop
mov
jp
and
add
shlb
ret
cmp
mov
jge
pop
pusha
pusha
mov
js
xor
pop
jp
xchg
sbb
ljmp
adc
jnp
test
pop
inc
pop
rol
xchg
clc
outsl
push
add
jno
ljmp
inc
push
push
or
dec
popa
dec
mov
and
adc
lds
lret
dec
aaa
xor
cmp
xchg
leave
cmpsl
clc
enter
xchg
sbb
jmp
pop
cmpsb
ret
pop
lret
lods
pop
cmp
shrb
int
sub
jmp
push
and
adcb
push
push
das
cld
out
dec
movsb
xlat
xchg
loopne
dec
cld
mov
mov
mov
lret
push
and
adc
sub
jns
inc
xor
jl
add
repz
movb
inc
push
pop
mov
es
stos
iret
popl
and
outsl
mov
mov
push
pop
sub
sub
aaa
inc
jge
je
scas
adc
mov
mov
or
mov
jb
lahf
add
mov
push
icebp
mov
mov
test
scas
ss
mov
cmp
adc
jmp
pop
and
ret
mov
std
imul
sahf
lret
fistl
mov
leave
cmpsl
clc
aad
xchg
xchg
imul
adcl
pop
pusha
pusha
rorl
sub
idivl
xchg
inc
ret
addr16
hlt
push
sti
imul
icebp
jle
fwait
lret
fidivs
sub
sbb
jl
icebp
hlt
enter
les
ret
mov
sbb
dec
ds
mov
push
cmp
xchg
adc
pop
lret
je
shrb
int
jp
and
mov
sub
imul
pop
xchg
cmp
dec
mov
xchg
aas
mov
lahf
mov
in
shrb
int
sub
and
mov
push
push
mov
mov
icebp
popf
mov
lods
inc
inc
jo
cltd
das
test
bound
pop
ja
push
ret
shrl
pop
arpl
call
cmp
jge
aaa
push
push
adc
daa
xchg
add
int3
call
mov
push
hlt
inc
les
inc
in
lret
push
pop
sub
lret
es
pop
cs
lahf
pop
fstpl
stos
ss
mov
leave
cmp
mov
arpl
push
jno
pusha
nopl
cmp
jno
faddl
lret
and
popa
mov
in
dec
jo
pop
mov
popf
xor
pop
dec
les
pop
pushw
aaa
lods
lock
test
jge,pn
pop
pusha
pusha
sbb
jae
sbb
push
iret
fistpll
jae
repnz
xlat
lcall
idivb
imul
arpl
fcmove
ret
xor
xchg
pop
and
mov
lcall
scas
add
frstor
popl
adc
fcmove
fsubrl
ds
subl
es
lahf
stc
pushl
lcall
test
leave
xor
xchg
aaa
pop
or
mov
pop
jae
mov
mov
pop
mov
js
in
subb
pop
and
stos
mov
jecxz
mov
aad
push
mov
nop
jno
and
outsl
loopne
xchg
ljmp
sub
test
mov
push
stos
ss
xchg
sub
cmp
add
dec
arpl
and
cmp
mov
addr16
hlt
push
cld
mov
jns
push
ds
call
in
adc
jge
mov
cmc
test
jl
pop
mov
icebp
ss
push
add
daa
xor
xchg
mov
mov
xchg
bound
pop
in
repnz
and
sbb
imul
stc
lahf
and
cmp
int
dec
inc
ljmp
out
push
cmp
fnstsw
out
adc
pop
dec
inc
jecxz
mov
movsb
dec
inc
inc
push
dec
imul
lea
xchg
out
je
cmp
fs
mov
inc
rclb
fwait
mov
sar
xchg
jo
arpl
shll
inc
call
sbb
pop
xor
scas
cmovg
stos
icebp
xor
or
fmul
xchg
and
cmpsb
xchg
cmp
xchg
dec
inc
mov
mov
pop
push
ja
sbb
jnp
jo
gs
mov
outsl
xchg
js
ja
mov
pop
in
addr16
lods
divb
sbb
pop
std
pusha
lock
xchg
inc
call
and
outsb
mov
mov
bound
pop
xchg
cmp
insl
lods
aas
fstpt
sub
call
sti
mov
jns
or
scas
lret
lods
mov
mov
pusha
clc
iret
mov
pop
lods
mov
xchg
or
cmp
hlt
inc
ret
nop
cwtl
int3
inc
inc
lock
rcl
ret
xor
arpl
sub
inc
mov
cld
inc
insl
and
push
push
push
stos
ss
out
dec
aad
inc
push
mov
movsl
int
push
dec
icebp
xchg
xchg
in
imul
je
arpl
jbe
in
cmp
cli
mov
int
lea
aam
cld
mov
hlt
mov
jno
shrl
pop
push
xor
aad
push
add
lret
clc
fisubs
int3
mov
cwtl
ret
sbb
sahf
int
cmpsl
mov
stos
mov
jge
pop
pusha
pusha
lds
jae
loop
adc
xchg
test
ud0
push
adc
popf
aas
jns
sarl
insb
ja
push
mov
inc
mov
je
pop
dec
lret
pop
test
push
or
push
add
shll
dec
or
add
sub
add
flds
push
imul
mov
mov
loop
das
cltd
mov
cld
cmp
test
pop
pop
cwtl
jmp
ljmp
xchg
and
xor
push
stos
into
sarl
mov
lret
outsl
mov
out
fnstenv
shll
jecxz
push
xchg
xchg
cs
or
fistl
imul
xchg
jp
sub
lahf
sub
je
stos
std
or
shlb
imul
sahf
int
lods
sub
cwtl
insl
cmpsb
pop
les
ss
or
mov
and
sbb
and
xchg
iret
shl
inc
stos
sbb
lahf
cmpsl
cld
out
jne
outsl
cmpsl
dec
push
insl
or
cmp
xor
mov
jae
pop
mov
out
or
and
bound
push
and
cwtl
roll
jmp
or
jmp
mov
lds
loop
test
decl
shrl
lret
sbb
pop
enter
out
out
ret
pop
stos
ss
scas
xchg
aas
inc
jns
adc
iret
sub
insb
and
cmpsb
rclb
fsts
and
adc
dec
mov
xor
mov
into
mov
sbb
pop
inc
ret
pop
mov
sti
fldcw
dec
int3
push
cmpsl
dec
xchg
jg
mov
lock
ret
pop
jp
in
adc
sub
mov
xchg
pop
or
jecxz
nop
nop
and
pop
dec
fisttpl
inc
jo
les
test
dec
lods
fisubrs
fstps
js
mov
jge
pop
sbb
insl
pop
ljmp
sbb
or
sbb
iret
nop
stos
cld
in
pop
call
mov
cs
jno
sbb
jge
jge
jmp
or
xor
movsb
fsts
inc
mov
fcomps
rcll
sahf
lock
mov
sbb
popf
mov
xchg
add
xor
xchg
inc
call
inc
dec
mov
scas
xchg
aas
mov
mov
cmp
cmpsl
mov
xchg
jnp
int
scas
xor
fsubr
jecxz
das
xlat
cmpsl
pusha
cmp
mov
push
stos
ss
inc
xchg
shrl
jg
and
mov
inc
mov
xchg
enter
aad
xor
enter
call
lret
xchg
adc
jp
xchg
js
lcall
sbb
rorb
ret
mov
das
rclb
and
dec
call
scas
clc
fadds
adc
je
enter
mov
leave
ds
push
stos
mov
sbb
pop
xor
add
jp
stos
icebp
xor
xor
imul
ja
fistl
mov
clc
ds
call
std
xor
test
mov
cmp
mov
aam
sbbl
xor
jae,pt
into
roll
adc
out
jg
add
pop
xchg
popa
loope
jmp
gs
cltd
inc
lds
aam
sbb
or
mov
xchg
outsl
cmpsb
sub
call
mov
push
mov
int
fsts
in
clc
pusha
pop
push
flds
outsl
gs
andps
imul
mov
mov
adc
out
outsb
pop
leave
rclb
sub
dec
icebp
jmp
das
xlat
test
mov
push
stos
ss
addr16
mov
jne
mov
jmp
xchg
cmp
subb
das
cmpsb
ss
gs
out
sahf
pop
and
imul
cli
cmp
jbe
arpl
adc
sbb
loop
lret
cmp
xchg
push
push
xchg
mov
fsubs
adc
loop
test
sahf
and
pop
mov
fcoml
shll
testl
xlat
sub
or
push
fnsave
xchg
inc
fs
fsubrl
lods
dec
push
insl
std
ljmp
cmp
cld
sub
pop
call
push
add
or
scas
ss
mov
cmp
xchg
out
dec
fnstenv
shrl
xor
iret
ret
int3
aas
dec
cmp
xchg
jl
ret
aad
sub
fsubl
popl
jecxz
jmp
fdivl
xor
xchg
aaa
pop
test
cld
xchg
lea
lea
loop
push
or
pop
fwait
xchg
jnp
mov
inc
add
iret
mov
andl
and
jb
scas
and
cwtl
jae
sbb
inc
movsl
cmc
dec
xlat
or
int
push
ja
popf
mov
cmp
sarl
xchg
stos
testl
ja
lods
or
mov
std
or
push
xor
dec
movsl
int
push
pop
push
or
mov
xor
pushf
xor
pop
sbb
cmp
movsb
ficomps
jmp
push
and
xor
xchg
pop
inc
mov
push
jb
adc
arpl
add
dec
mov
sysexit
pop
pop
or
aam
js
mov
cmp
mov
adc
mov
add
add
push
stos
xchg
and
movl
pop
mov
push
outsb
push
dec
dec
add
fnstcw
sbb
xchg
or
int
dec
pop
dec
mov
mov
ret
daa
cli
movb
adc
out
dec
mov
int
push
push
mov
insb
and
mov
lcall
jae
mov
push
icebp
es
mov
fwait
stos
in
mov
scas
andb
or
jnp
and
xlat
lcall
add
fldl
lods
push
pushf
push
stos
sarb
cld
out
sti
jns
dec
push
insl
or
movb
mov
sahf
int
xlat
mov
call
inc
shll
or
lea
and
add
jg
aas
pop
inc
pcmpeqw
outsb
ror
stos
dec
adc
dec
hlt
loopne
push
popw
and
pop
stos
adc
xchg
ss
dec
push
xchg
mov
sahf
int
xlat
test
mov
push
stos
add
data16
ja
mov
int
gs
pop
scas
loopne
scas
mov
ret
mov
sub
fistl
das
jmp
and
fcoml
ret
xor
hlt
jne
mov
push
repz
jbe
mov
js
and
xchg
cmp
xchg
das
call
fisubrl
cmp
sub
int3
test
or
mov
lret
push
jno
cmp
sub
fimuls
pop
ret
sbb
mov
aam
mov
fisubrs
jle
dec
and
mov
xor
mov
push
xchg
ss
pop
in
test
sahf
int
pop
xchg
pusha
imul
shll
leave
dec
mov
sti
inc
ss
inc
pop
iret
nop
jmp
sub
mov
clc
fadds
rcr
xchg
jne
push
stos
mov
xor
jo
ret
inc
aam
mov
bound
sbb
adc
push
insl
stos
inc
nop
xor
loopne
and
dec
enter
xchg
cs
and
mov
mov
fimuls
jg
jmp
xchg
shr
fs
push
les
push
fld
mov
sbb
adc
push
jo
int
sbb
dec
and
repnz
and
add
pop
inc
mov
js
mov
les
mov
cmc
and
or
sub
and
sahf
int
fcoml
xlat
cld
mov
cmp
xor
cmpsl
push
add
push
gs
adc
aas
push
iret
xchg
mov
fisttpl
clc
pop
or
test
cmpl
sub
lods
loopne
fwait
jns
bound
nop
ret
gs
inc
test
dec
lcall
push
stos
rorb
pop
paddusw
iret
and
push
test
fists
stos
jl
mov
mov
push
stos
ss
mov
or
gs
mov
inc
mov
jae
sbb
sbb
je
xchg
adc
jbe
cmp
mov
pop
dec
push
push
xchg
cmp
insl
cmp
sbb
sub
xor
pop
sub
daa
shrl
xchg
int
xlat
test
fcompl
stos
ss
jno
sbb
xchg
out
insl
fnstcw
pop
iret
out
add
sub
pop
pop
pusha
pusha
mov
sub
add
fistl
mov
xor
inc
fcoms
stos
xchg
sub
ret
pop
push
sub
call
push
stos
sub
rcl
mov
pop
icebp
fcoml
pop
sbb
cmp
inc
paddq
jno
shlb
mov
mov
inc
test
jae
mov
mov
and
js
repz
arpl
call
cmpl
mov
xchg
ds
lcall
mov
imul
inc
out
clc
pop
pop
inc
ss
cmp
xchg
pop
xor
jmp
cs
loopne
pop
push
push
rcr
push
stos
aaa
shll
mov
imul
addb
ret
jmp
std
pop
mov
jno
add
dec
imul
fidivs
ret
pop
aam
mov
xor
ljmp
inc
rclb
and
xor
and
out
adc
mov
int
test
xor
ret
les
ss
inc
mov
push
fldcw
shll
test
push
mov
sub
aaa
out
mov
pop
xor
or
mov
lret
xchg
jns
stc
rol
cmp
lret
cmp
mov
clc
sbb
lcall
and
sub
rcrl
les
jno
int3
and
cmp
pop
testb
pop
hlt
add
fistl
bound
orl
inc
dec
mov
mov
push
push
xchg
xchg
imul
into
ljmp
adc
mov
mov
and
xor
mov
loopne
cmp
hlt
push
rcll
rcll
rcrl
leave
lret
push
mov
sbb
lea
xor
jno
lret
arpl
fwait
int3
aas
mov
pop
test
enter
push
out
xchg
dec
ret
ja
cmp
ss
scas
fmul
js
adc
and
bound
sbb
icebp
mov
mov
pop
enter
fwait
mov
mov
adc
je
sbb
mov
scas
fdivp
dec
out
fdivrp
sub
jg
fcoms
xchg
and
push
cmp
negb
xchg
mov
cmp
push
stos
stos
test
imul
push
pop
and
rorb
or
xchg
xchg
adc
xchg
cs
popw
and
incb
arpl
xlat
clc
xchg
or
pop
orb
adc
or
dec
adc
popf
inc
sub
fs
xlat
pop
inc
shrl
sbb
cmp
fistl
and
xchg
ljmp
aaa
dec
cli
call
mov
dec
test
push
push
les
loop
mov
sbb
adc
push
aaa
xchg
ja
jecxz
inc
out
lret
std
push
es
jo
adc
mov
popa
and
cld
mov
fs
int
lret
adc
adc
adc
pop
loope
jmp
mov
cmpsl
mov
inc
popa
xchg
stc
adc
ror
arpl
and
addr16
sti
jno
sbb
inc
out
lret
cs
jmp
cmp
pop
test
stos
lods
test
shrl
repnz
outsb
xlat
add
xor
or
mov
jnp
and
call
dec
inc
inc
dec
mov
add
and
pop
inc
jmp
mov
sahf
mov
out
jns
shrl
ret
icebp
and
imul
pop
lods
sbb
pop
and
sbb
aam
mov
repz
pushf
inc
xchg
xchg
inc
int3
or
mov
iret
aam
je
sarb
pop
popl
fs
repnz
jmp
jge
bound
in
mov
dec
clc
mov
xchg
sub
mov
jno
xor
imul
andb
int3
inc
sub
fistpll
jbe
cmp
pop
xor
cs
jne
gs
icebp
xor
scas
xchg
and
adc
mov
cmp
mov
scas
fcoml
ss
je
hlt
jo
xchg
add
sti
rol
pop
in
inc
and
jno
out
fs
test
pusha
sbb
jne
xchg
std
popa
je
mov
adc
ret
mov
mov
insb
test
or
add
test
xor
and
les
ss
ret
inc
dec
mov
mov
xorl
mov
jecxz
in
jae
cmc
dec
cmpsl
int
push
outsl
jae
mov
pop
insl
or
icebp
stos
icebp
and
sub
aam
pop
inc
enter
int
mov
pop
jb
lcall
in
ljmp
sahf
int
mov
mov
xor
xor
nop
loop
lods
sub
inc
stc
frstor
mov
xchg
adc
push
je
dec
cmp
adc
adc
inc
and
std
mov
push
fs
mov
push
addr16
sbb
mov
mov
out
dec
dec
jge
sub
fmul
ljmp
adc
gs
mov
fs
and
lods
ss
cmp
mov
jns
in
ror
dec
xchg
insl
mov
roll
pop
push
jno
push
sbb
addr16
fisubl
pop
bound
mov
jge
adc
push
sbb
pop
sbb
pushf
out
add
ficoml
ret
mov
stos
or
jl
push
mov
or
neg
xchg
push
mov
sub
xchg
ds
iret
xchg
push
pop
es
rolb
xchg
cmpsl
sub
das
jns
lock
enter
xor
dec
ds
cli
scas
fadds
and
imull
mov
xchg
shrl
inc
popa
test
loope
ficoms
aaa
cmp
pop
push
sub
dec
scas
mov
es
mov
das
sarl
push
scas
pop
inc
mov
xor
pop
cmp
jp
jle
xchg
jns
enter
imul
push
jae
pop
dec
pop
push
inc
pop
push
sbb
popa
jne
mov
cmp
adc
push
inc
pop
mov
pop
pop
mov
int
aam
loopne
mov
pop
dec
imul
js
cmp
xchg
or
shlb
cmpsl
ja
mov
pop
pop
cltd
pop
mov
jle
out
jnp
mov
cmp
mov
pop
mov
pushf
push
adc
repz
popf
inc
fcoms
aas
aas
mov
jae
in
xchg
push
rcrl
lahf
or
mov
mov
loope
mov
int
mov
lods
mov
jo
gs
fldcw
shrl
push
in
out
stos
pop
inc
hlt
gs
xor
outsl
add
push
cmp
in
mov
std
sarl
mov
jo
notl
pop
xchg
cmp
jo
stos
sbb
out
fdivl
cmp
fldenv
ss
push
and
rorl
shrl
ror
push
fsubl
lahf
mov
fisttpl
test
fldl
dec
pop
push
xlat
gs
mov
movsl
mov
orb
rcrb
cmp
pop
lret
and
shrl
int
dec
xchg
xor
adc
add
sahf
icebp
dec
pop
sbb
rcr
cmp
add
