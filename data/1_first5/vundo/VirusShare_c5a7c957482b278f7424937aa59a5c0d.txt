add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
ss
cmp
adc
xchg
nop
mov
popa
add
add
add
add
or
add
movb
add
loope
arpl
mov
pusha
add
jno
cmp
add
fadds
dec
add
add
add
pop
add
push
loope
jge
jbe
movb
add
ja
dec
add
add
inc
add
add
add
add
add
roll
cmp
loope
cmp
add
loope
pop
add
add
or
mov
dec
add
loope
cmp
ja
and
stos
add
loope
inc
add
dec
add
add
add
add
add
add
add
sahf
add
add
or
je
loope
add
or
add
add
verr
loope
cmp
ja
stc
add
add
loope
pop
add
add
loope
cmpsl
add
inc
add
add
mov
sub
loope
xchg
add
sub
stos
add
loope
inc
add
add
add
adc
stos
add
add
add
loope
xchg
flds
sub
jns
gs
add
add
verr
add
add
add
add
add
add
add
add
add
add
mov
loope
jne
jne
outsb
add
je
loope
mov
add
add
add
add
add
add
add
xchg
add
inc
add
add
add
add
fadds
loope
loope
xchg
jbe
roll
rolb
cmp
add
add
add
cmp
add
add
add
add
add
pop
add
add
int3
add
add
lea
or
addb
add
fadds
sahf
add
add
add
add
pop
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
loope
ltr
or
roll
leave
add
add
lret
add
add
add
mov
pop
add
adc
fadds
verr
add
ja
xor
add
add
add
add
loope
adc
jne
adc
fadds
loope
loope
sub
popa
add
add
add
add
loope
pop
add
les
loope
mov
cmp
add
add
add
xchg
add
push
add
push
add
add
add
add
add
loope
imul
je
out
add
add
add
dec
add
add
add
add
add
inc
add
cmp
add
add
add
add
testb
add
add
xchg
add
jno
push
add
cmp
add
pop
add
add
add
add
pop
add
add
pop
add
add
add
add
add
push
add
addl
popf
add
add
add
mov
loope
imul
add
add
add
add
add
jne
addl
loope
roll
sub
pop
add
add
add
add
loope
or
cmp
add
add
add
and
add
add
xor
fs
add
add
add
add
add
add
add
add
add
stos
add
loope
mov
popa
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
push
add
add
add
sub
add
adc
cld
add
cld
add
add
add
add
pop
mov
add
ds
cmpsb
sbb
test
es
outsb
jmp
xor
or
repz
roll
push
mov
sbb
inc
leave
das
pop
subl
sub
idivb
loop
cmp
xor
push
outsl
fildl
test
or
sbbl
cmpl
jnp
stc
pop
adc
out
sbb
fcoms
fsubrl
xor
mov
add
test
stc
in
in
fidivrs
lock
mov
lret
xchg
add
mov
xchg
xor
fistl
into
add
lahf
cmpsl
sbb
adc
popf
jbe
push
ss
gs
addr16
shll
cmp
repz
mov
push
mov
mov
sahf
mov
jne
clc
ss
addl
mov
push
mov
sbb
push
pop
ret
push
out
shlb
dec
dec
jno
cmpsl
inc
push
and
sub
aas
icebp
dec
add
and
xor
xor
jg
jae
mov
fcoms
mov
imul
inc
int
inc
pop
pop
mov
pop
je
xchg
aas
andl
mov
inc
and
xchg
sub
add
xor
pushf
or
pop
adc
adc
aam
dec
test
test
test
cmpsb
or
sub
in
in
and
push
inc
js
nop
sub
pushl
shrb
cmpsl
dec
cmp
jno
shrl
out
or
or
push
pop
sbb
adc
xchg
mov
mov
push
rcll
lods
ficomps
insl
arpl
imul
xor
sbb
repz
adc
jo
in
xor
or
and
lods
inc
mov
test
xchg
imul
hlt
cmp
mov
xchg
movsl
mov
pop
sub
cmp
test
xor
xor
cwtl
mov
push
mov
push
icebp
ds
inc
cmp
lret
push
mov
mov
cmpsb
sbb
pusha
lea
pop
je
lahf
sbb
sub
in
sbb
lock
movsl
sbb
sahf
inc
mov
shr
mov
sbb
mov
fdivrp
jae
jae
and
mov
dec
popf
fstl
adc
es
inc
pop
outsl
cli
call
pop
mov
dec
push
add
mov
cmp
xchg
inc
pop
test
xlat
das
sub
fsubl
cs
pushf
cli
cli
adc
sbb
mov
xor
out
ljmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jnp
sahf
stos
push
fwait
push
mov
jne
out
cmpsb
daa
xchg
or
imul
dec
ds
push
mov
data16
fildl
out
cmpsb
sub
sbb
dec
in
mov
rclb
ret
mov
adc
outsb
out
cmp
dec
ja
push
ret
jno
std
adc
xor
inc
or
pop
or
push
xchg
cmpsl
notl
cmp
jno
adc
adc
xor
insl
or
ja
push
pop
dec
push
inc
ss
les
jmp
scas
jle
idivb
js
or
imul
pop
stos
imul
sub
inc
xor
imul
xchg
jns
jnp
in
ret
sarl
and
fs
imul
push
lret
imulb
imul
out
pop
mov
mov
es
jmp
rcrl
dec
cmp
xchg
push
xchg
jae
out
xchg
movsb
pop
add
mov
jbe
and
push
ret
inc
and
dec
add
jl
pop
mov
stos
push
lcall
inc
mov
cmpsb
xlat
push
out
dec
out
lahf
push
mov
mov
ret
scas
stos
push
jmp
mov
mov
fnstcw
mov
out
rep
ljmp
aaa
xchg
inc
cli
adc
xor
inc
lret
mov
cmpsb
sub
jnp
imul
dec
ss
push
mov
data16
fildl
mov
cmpsb
sub
jnp
imul
dec
ss
pop
cwtl
cmp
inc
fnsave
fildl
movsl
mov
inc
xor
out
mov
je
movsl
add
mov
push
inc
popa
ret
mov
fs
call
aas
movsl
mov
cmpsb
rclb
loope
clc
sub
ficoms
adc
inc
ret
inc
addr16
icebp
pop
outsb
fsubrp
jle
adc
fcoms
repz
mov
sahf
movsb
js
rcrb
lock
pop
pop
outsl
dec
sub
mov
sbbl
jecxz
xchg
cltd
xor
sub
jb
jo
loop
jecxz
out
sub
pushf
adc
inc
shl
inc
adc
sub
notl
ret
xor
dec
outsl
aas
loop
jne
mov
in
les
cs
aam
jp
inc
or
mov
clc
push
xor
pop
push
out
cmpsl
push
jecxz
push
sti
es
out
stos
je
mov
mov
bound
sub
mov
pop
pop
dec
frstor
jnp
div
cs
sbb
cli
call
mull
test
ljmp
jne
scas
push
pop
or
push
jne
dec
pop
jecxz
pop
test
cmp
dec
stc
stc
inc
fbstp
jnp
cs
scas
xor
mov
ds
dec
add
or
mov
sub
testb
cli
mov
jle
loop
aaa
push
test
dec
xorl
jne
aam
test
lock
dec
mov
dec
hlt
add
lods
gs
or
sub
dec
lcall
adc
or
movl
inc
sbb
push
push
dec
fsubr
inc
push
add
add
adc
mov
sarb
mov
movsl
pop
mov
aad
cmp
out
mov
mov
int3
cwtl
mov
xor
mov
dec
inc
cwtl
fnstcw
aas
inc
mov
aas
mov
cli
and
pushf
and
cmpsl
or
mov
fld
adc
sub
dec
mov
dec
mov
adc
mov
pop
scas
or
inc
push
inc
adc
sahf
adc
pop
mov
sub
jg
mov
cmc
into
imul
aad
les
cltd
xchg
jp
push
sti
ja
mov
and
mov
gs
add
and
or
popa
dec
adc
out
jae
jmp
add
lret
aam
lcall
les
test
xor
call
dec
cltd
pop
add
pop
mov
ds
lret
mov
and
test
xor
incb
addr16
mull
xor
clc
imul
mov
out
mov
sub
pop
ja
int3
mov
xchg
scas
xadd
jl
into
call
js
int3
cmp
or
loopne
ss
xchg
jno
hlt
nop
mov
mov
in
cmp
sbb
shlb
push
dec
gs
loop
lods
movsl
aaa
jg
ja
nop
xchg
sbb
scas
outsl
jg
mov
fstl
mov
jns
push
fstpt
mov
push
sub
jb
lret
pushf
or
pushf
xor
push
xor
push
xchg
adc
loopne
rcr
stos
nop
xor
neg
in
and
mov
mov
xchg
lret
loopne
mul
and
popf
sti
push
cmp
and
cltd
outsb
sub
lds
imul
cmp
je
add
adcl
int3
shr
cltd
xor
add
dec
push
xlat
stos
std
cmp
aaa
xor
negb
jmp
sub
push
inc
inc
adc
rcrb
mov
jbe
gs
inc
lea
inc
aam
in
es
pop
cli
xchg
popa
pop
and
sti
mul
mov
jne
add
jge
es
jae
push
imul
push
popa
cmpsb
inc
inc
xor
in
inc
mov
xor
test
add
test
iret
lods
push
jo
jne
pop
push
jge
jno
dec
pop
ljmp
dec
mov
adc
add
jns
xlat
inc
leave
adc
ret
mulb
mov
cmpsl
mov
mov
jecxz
int
pop
mov
pop
jnp
jg
popf
or
orl
push
jnp
lea
adc
rolb
xchg
cli
pop
dec
mov
cli
sub
lds
add
add
movsb
mov
rcll
adc
jl
loope
loop
push
dec
repz
into
jle
pusha
xor
test
pop
pop
jo
ljmp
mov
xlat
and
mov
fdivrl
dec
pop
xor
pop
cmp
xor
xor
shll
jo
inc
mov
aam
mov
lods
push
cmp
xchg
or
std
and
lret
add
int
mov
andl
arpl
das
add
inc
and
dec
mov
andb
into
sbb
sbb
xchg
fisttpll
mov
adcb
xchg
je
movaps
mov
push
and
add
fcomps
jne
jne
xchg
cmc
dec
scas
push
pop
push
pop
pop
jmp
cmp
pop
cmp
js
and
lahf
or
sahf
inc
sbb
adc
adc
in
js
jp
cmp
adc
sbb
dec
aad
add
test
add
int3
movsb
xchg
sbb
xchg
inc
out
repnz
pop
push
pop
fadds
adc
inc
test
testl
cmc
imul
lods
pop
push
addl
sar
sbb
idiv
cwtl
inc
iret
xlat
adc
or
fdivl
sub
fisttpl
sub
push
cwtl
leave
pop
popf
int3
pusha
or
in
jp
push
push
and
inc
mov
pop
dec
les
lods
sub
push
in
pop
sub
testl
add
lcall
pop
or
insb
cmp
xor
mov
inc
ja
mov
mov
cld
enter
mov
push
repnz
mov
and
arpl
hlt
dec
pop
pop
ss
mov
imul
bnd
add
out
dec
cmpsl
out
popf
out
mov
jb
ja
in
mov
decl
mov
xchg
push
in
inc
mov
das
cli
cmc
jecxz
and
lcall
pop
xor
pop
mov
dec
mov
ja
movsb
mov
push
aaa
push
and
sahf
sbb
push
push
cmpb
jne
xchg
movsl
mov
in
shlb
jb
outsl
outsl
test
cld
cli
int3
push
cli
mov
jne
out
jnp
adc
pop
rcr
nop
adc
out
adc
sbbl
mov
push
stc
cmp
imulb
fucomip
outsl
adc
mov
push
cmp
stos
add
mov
popf
pop
jge
and
int
loopne
jnp
in
or
xchg
ss
jnp
jns
clc
lods
je
push
xchg
lcall
push
and
adc
scas
cltd
lods
push
notl
ljmp
int3
push
fstpl
shl
idivl
fdivl
mov
nop
int3
pushf
mov
mov
push
scas
in
imul
shll
ret
jo
dec
jnp,pt
js
xchg
sahf
hlt
lock
jmp
mov
fisubrs
xchg
jno
div
addr16
lea
push
scas
or
popf
test
mov
out
fdivl
and
sti
pop
push
mov
mov
addl
movsb
enter
lds
jbe
and
push
fcompl
dec
mov
pop
dec
dec
fisttps
ffreep
nop
push
push
inc
sub
aad
push
lods
clc
inc
cmp
mov
rcll
frstor
inc
movsb
data16
ret
xchg
mov
mov
lds
mov
sahf
and
cltd
or
sub
mov
fcmovnbe
push
dec
imul
fs
gs
inc
dec
add
adc
adc
call
inc
inc
and
mov
cmpsb
xor
add
xchg
into
ljmp
pop
or
ret
mov
inc
movsl
bound
gs
cmp
sub
rcrl
mov
imul
pop
aas
insb
int
cmp
push
cmp
in
push
sti
mov
stos
movsb
push
bound
jge
sbb
push
jl
jecxz
jbe
cltd
cmp
jo
js
mov
notb
push
pusha
lahf
push
mov
or
nop
popf
mov
push
filds
pusha
fistps
inc
push
ss
or
jl
xchg
mov
in
mov
sub
sbb
add
nop
xchg
fimuls
cs
ret
and
mov
data16
dec
dec
pop
sbb
testl
call
aad
mov
jge
movsl
sub
pusha
outsb
mov
lea
dec
inc
jno
out
and
shrb
in
ja
ss
pop
popf
hlt
aam
xchg
mov
fdivp
stos
fnstenv
imul
mov
adc
out
ljmp
or
popf
sub
leave
jmp
cld
cmp
mov
sahf
or
push
mov
push
jge
mov
imul
nop
push
ret
orl
aas
ret
mov
rolb
adc
inc
inc
int3
in
mov
sbb
cwtl
fistl
into
cmp
mov
adc
pop
iret
sbb
outsl
subl
jp
cld
fsts
test
negb
int3
push
fidivl
adc
shrb
jg
bound
addb
andl
leave
pop
sbb
loopne,pt
sbb
aas
in
loop
sti
cmp
test
shll
xor
lea
out
cwtl
icebp
movsl
testb
or
push
xchg
lods
pop
push
imul
mov
mov
jmp
test
mov
fldl2t
sub
lcall
lahf
pmaxsw
icebp
mov
fwait
push
lds
pop
pop
inc
pop
aam
cli
adc
insb
and
jo
std
pop
mov
loop
push
into
jecxz
fwait
sar
dec
imull
lds
jne
in
or
pop
mov
push
push
xlat
dec
outsl
out
movsl
arpl
mov
adcl
pop
ljmp
sbb
jl
push
xchg
mov
add
cmp
outsl
xor
hlt
aad
loopne
fstp
pop
sbb
mov
adc
adc
les
ja
push
mov
mov
lcall
cli
push
aaa
fnstsw
push
cmp
xor
lds
sahf
or
fnstcw
movsb
mov
cmc
cmp
cmp
cmpl
sub
loopne
mov
bound
mov
xor
mov
insl
mov
in
add
das
stos
and
lahf
mov
add
jmp
mov
je
mov
inc
mov
cs
xchg
insl
outsb
idivl
cwtl
nop
inc
or
out
inc
xor
inc
sbb
fcoml
stc
arpl
fimull
test
or
iret
adc
xchg
mov
cld
cmp
fidivrl
xchg
mov
pushf
orl
ret
rolb
pop
fisttpl
sub
cmovo
das
cmp
lcall
and
dec
inc
aas
mov
push
lods
int3
push
xchg
and
loop
lret
mov
or
ficompl
xchg
fimuls
fwait
je
scas
imul
fcmovb
inc
in
lahf
dec
cmp
xor
stos
in
out
xor
stos
cli
cmpsl
cltd
mov
pop
mov
pop
fprem
jo
stos
adc
xlat
add
out
push
stos
xchg
movsb
arpl
cwtl
rcrl
push
cmpsl
nop
adc
insb
addr16
mov
cmp
sub
and
sbb
je
push
imul
mov
scas
shlb
outsb
dec
loopne
jb
cmp
lock
addl
adc
fmul
loopne
ja
shlb
data16
add
leave
and
nop
pop
mov
and
leave
xlat
mov
adc
pop
fisttpl
or
inc
mov
cmpsl
or
xchg
sbb
xor
in
iret
outsl
xchg
or
adc
pop
jnp
bound
jnp
mov
cmp
xchg
jg
or
xor
pop
xchg
mov
icebp
sti
in
pop
jp
mov
dec
movsl
idivl
lret
ret
xchg
cmp
mov
int
inc
out
cmpsl
pop
scas
dec
add
repz
das
arpl
pop
mov
in
ret
rorb
daa
jo
sarb
aad
fcmovnbe
push
xor
sbb
push
fcomps
aas
fldt
mov
fwait
sbb
cmpsb
pusha
mov
leave
lock
inc
jb
mov
popf
push
mov
push
fxch
scas
pop
lods
les
add
push
adc
in
into
lahf
adc
mov
in
pop
cltd
ret
sub
fwait
movsl
and
sti
shl
jle
mov
jle
repz
cmp
jmp
call
insl
repnz
jnp
fsubs
xchg
cmpl
cmp
lcall
decl
mov
adc
cmpl
jb
and
js
dec
ret
inc
lods
outsb
lods
repnz
xor
sbb
push
test
mov
push
and
xchg
js
std
xor
push
loop
pusha
out
add
jg
mov
pop
inc
shll
stc
stc
xor
mov
sti
fs
popf
push
ds
push
std
adc
xchg
lcall
and
rorb
int3
je
rclb
filds
dec
xchg
and
inc
fiaddl
scas
jg
push
lods
int
jnp
sbbb
sub
test
movsl
xor
sbb
push
in
pmaxsw
enter
xchg
popa
js
inc
insl
hlt
out
gs
or
pop
add
sbb
inc
mov
int
rorb
jo
pushf
repnz
cmpsb
add
int
int
pop
mov
mov
jne
out
js
sub
dec
cs
pop
iret
addr16
dec
push
mov
lock
clc
pslld
pop
imul
inc
shrb
sbb
les
xor
loope
aas
loopne
jnp
add
mov
lds
imul
out
mov
push
mov
in
imulb
jo
adcl
rcl
dec
dec
outsl
shl
rclb
shl
ljmp
insb
sub
jbe
mov
in
in
daa
mov
push
inc
neg
jnp
or
js
fwait
test
js
jnp
or
xor
nop
pop
popf
add
dec
imul
dec
xor
jp
xlat
or
negl
mov
mov
cltd
cmp
lret
jb
out
jmp
inc
hlt
scas
jns
mulb
cmc
int
insb
fldcw
enter
push
aas
test
push
adc
add
lods
test
out
add
out
loope
lock
pusha
xor
fsubs
sbb
or
jns
pushw
popf
sub
mov
xchg
ds
fwait
adc
jg
dec
and
insb
cmp
aad
dec
inc
xor
sbb
xchg
mov
add
and
and
cmp
insl
bound
gs
gs
mov
push
stos
or
fiadds
mov
adc
jle
and
cld
iret
mov
mov
ret
icebp
mov
xchg
mov
mov
repnz
fldt
fildll
xor
out
xchg
sbb
outsl
xor
popf
add
xor
insl
push
call
cli
fsincos
xor
jp
inc
insl
loop
setno
fcomps
mov
jmp
adcl
ds
sbb
jae
xor
xchg
mov
adc
and
loopne
add
into
lret
lret
fiadds
pop
cmpsl
xor
push
xchg
lds
bswap
icebp
pop
loopne
cli
pushf
lock
push
pop
popa
xchg
mov
dec
or
insl
mov
repnz
jge,pt
outsb
add
jns
push
inc
jmp
inc
ror
cmp
or
out
dec
mov
cmp
inc
daa
movl
dec
jne
sti
nop
cmp
push
out
sub
bound
sbb
mov
pop
iret
xchg
in
pop
sbb
rolb
xor
sub
in
arpl
mov
nop
mov
inc
jecxz
add
add
mov
stc
xchg
sbbb
pop
shll
jo
xor
push
sbb
cmc
jmp
jns
or
gs
aaa
addb
add
xor
pusha
shrb
and
push
adc
fisttpl
add
jb
sub
mov
nop
xor
repnz
jae
std
push
ja
int3
jne
test
shll
sbb
mov
adc
sbb
fld
or
lahf
cmp
roll
in
lods
iret
icebp
clc
stos
decb
int3
ja
xor
movsl
and
sbb
push
mov
mov
cli
repz
es
test
leave
fnstsw
sub
je
jp
rclb
test
mov
test
inc
bnd
push
shlb
cld
cmp
daa
mov
inc
insl
jge
mov
mov
fs
stos
pop
lock
jno
dec
and
mov
push
lods
clc
mov
and
mov
adc
mov
adc
stos
pusha
add
add
fsubrl
sbb
fadd
sysret
arpl
sbb
lret
xchg
xchg
and
icebp
jne
orl
ret
jg
aad
int
xchg
pop
xchg
sti
adcb
js
jmp
jmp
pop
out
in
pushf
adc
inc
and
push
loope
jle
cld
xor
shrl
mov
jo
mov
sub
pusha
movsl
and
lds
fisubrl
xchg
push
es
cmp
loope
sahf
pop
push
movsb
mov
mov
pop
mov
lods
cmp
or
inc
ljmp
jmp
mov
dec
push
popf
mov
outsb
nop
mov
add
push
out
xor
stos
jbe
or
fcompl
xor
push
push
jecxz
xor
cmpsl
rorb
inc
jp
addr16
sbb
mov
xor
das
cmc
dec
cmp
pop
in
stc
idivb
xor
enter
cmp
add
dec
in
into
inc
scas
jbe
call
push
je
pop
fs
pop
cli
imul
out
mov
or
hlt
jbe
pop
out
cmp
data16
cwtl
cmp
mov
test
push
mov
insl
cmc
xchg
xlat
stos
or
in
outsl
push
test
shlb
adc
icebp
pop
xor
ret
pusha
pop
dec
inc
les
jae
int
sbb
je
or
repnz
enter
push
js
fstpl
sbb
sub
xchg
jns
aad
or
push
push
loop
and
out
sbb
jns
mov
mov
lods
lds
dec
decl
adc
lahf
mov
add
rolb
lock
sahf
es
ret
movsl
mov
lods
insb
int3
movsl
shll
ja
insb
clc
push
sub
mov
jae
xchg
jb
lahf
adc
cli
rol
xor
subl
in
insb
sti
mov
ret
into
sbb
inc
push
pushf
adc
pop
sarl
es
or
mov
add
push
or
mov
and
inc
jno,pt
lcall
in
and
rclb
pop
stc
les
sub
xchg
mov
cs
cli
push
sbb
repz
clc
gs
pop
add
lock
aad
xchg
mov
int3
sbb
cmp
bound
je
xchg
jae
xor
jb
jmp
sub
rclb
neg
lea
leave
out
jae
lahf
jnp
mov
mov
imul
lahf
add
lahf
jmp
jbe
jne
in
pop
mov
dec
jb
es
pop
dec
popf
movsl
xor
xchg
sub
adc
std
mov
pop
pop
test
push
shlb
jmp
push
es
jbe
movsl
cld
incl
shlb
push
mov
mov
push
scas
cltd
testl
jmp
xchg
lret
cli
into
ja
int3
fdiv
faddl
and
mov
iret
in
in
xorl
mov
fwait
repz
int3
std
stos
cli
jno
nop
shrb
loopne
mov
stos
sub
into
mov
dec
rol
ret
pop
out
lock
cmp
out
push
inc
push
addr16
xchg
or
mov
mov
adc
push
dec
fistpl
fcomps
int3
arpl
xchg
inc
in
mov
mov
mov
xor
dec
mov
daa
push
shll
or
pop
test
push
scas
fs
cmp
xor
fadds
pop
mov
inc
jmp
addr16
inc
push
jl
jmp
sub
mov
movb
loope
adc
fisubl
jle
inc
inc
stos
out
jmp
sbb
push
fildl
mov
cmpsb
sub
jnp
imul
dec
ss
push
mov
data16
fildl
mov
cmpsb
sub
jnp
imul
dec
ss
push
mov
jmp
fildl
mov
cmpsb
sub
jnp
imul
testb
or
jbe
jbe
push
fcmovnb
lret
mov
pop
cmpl
outsb
xchg
sub
mov
mov
sbb
notl
push
fwait
mov
sti
pop
jmp
fstpt
outsb
pop
sahf
sub
jnp
imul
decb
mov
mov
mov
jle
outsb
sbbl
scas
fimuls
into
inc
decb
fistps
mov
nop
or
sbb
sbb
bound
xorl
jnp
testl
pop
fcomip
iret
xor
int
push
fwait
loop
sub
jmp
test
dec
push
icebp
push
sub
add
mov
fstpt
aas
lds
sbb
dec
push
or
stos
orl
scas
dec
adc
not
out
inc
stos
xchg
out
test
iret
movsb
xchg
dec
adc
mov
jmp
fidivl
ljmp
xchg
inc
rclb
inc
fwait
ror
mov
jle
nop
les
mov
sbb
addb
idivb
mov
scas
pop
adc
jg
jbe
mov
jnp
sahf
jge
sbb
adc
pop
in
out
jge
xor
in
ds
dec
jmp
lcall
adc
add
mov
pop
out
pop
mov
scas
and
dec
jmp
fldt
adc
push
mov
push
stc
ja
insl
repz
xorb
dec
mov
mov
push
fiaddl
jp
pop
lret
sub
imul
decb
mov
mov
sti
pop
jmp
fstpt
outsb
cmp
or
pop
decb
mov
mov
sti
pop
jmp
fstpt
outsb
cmp
lret
insb
mov
adc
mov
call
sti
xor
int
sbb
loopne
rcrb
ret
fiadds
addl
pop
pop
jecxz
in
mov
mov
daa
movsl
test
push
cli
adc
push
mov
add
aam
mov
or
jge
inc
outsb
call
mov
out
ljmp
call
xchg
xlat
frstor
pop
mov
mov
mov
inc
scas
jb
movsb
ret
jle
das
sub
jmp
jns
xchg
lods
adc
cmp
pop
push
mov
dec
inc
es
stos
pop
pop
lock
outsb
mov
in
mov
dec
clc
mov
push
mov
fwait
aaa
adc
cltd
out
test
loopne
insb
jge
dec
push
xchg
jge
call
aaa
repz
les
inc
mov
add
sub
jns
mov
mov
mov
shrl
sbb
mov
jecxz
scas
or
stos
jne
sub
jmp
pop
push
and
or
paddusb
cwtl
jae
insb
xor
mov
mov
jne
mov
mov
scas
cmp
and
subl
mov
clc
mov
pop
enter
movsl
and
mov
push
push
sub
lds
rclb
movsb
addr16
repnz
mov
mov
cld
jns
int
rcrb
jns
and
gs
sub
or
sti
and
sbb
test
and
ss
mov
jmp
mov
fwait
jnp
and
pusha
inc
dec
sub
push
mov
lret
or
data16
divb
stc
jge
cmpsl
outsl
push
rolb
nop
push
addr16
ret
pop
jmp
inc
repz
repz
pop
pop
insl
test
mov
cld
stc
pop
adc
jno
in
and
aas
xor
or
mov
sbb
movsl
mov
and
add
mov
xor
rorb
sahf
add
dec
mov
cld
popa
and
fsubs
lods
jle
dec
mov
bound
ret
sbb
test
push
ror
sbb
sub
sub
inc
xor
xor
xor
sbb
sbb
jbe
jo
cmp
stos
dec
adc
cmp
gs
fstpl
out
rcll
in
jmp
mov
push
sbb
fabs
mov
lods
dec
fdivl
leave
decl
aaa
mov
push
pop
sbb
loopne
push
popa
cmp
inc
jbe
shlb
inc
rcr
inc
jns
js,pn
pop
rorb
jle
cmp
test
adc
push
fucomp
or
cmp
sub
push
bound
sbb
lcall
cwtl
pop
mov
jns
jl
leave
push
ja
add
inc
movsb
out
adc
jl
hlt
out
xor
sbb
cmc
ja
xchg
jne
jg
sahf
int
add
pcmpgtd
test
repnz
adc
dec
in
mov
jmp
repnz
dec
xor
sub
pop
mov
incb
push
cltd
lret
scas
inc
dec
adcb
bound
insb
or
sub
pusha
mov
lahf
lahf
xlat
mov
lahf
or
aad
je
loopne
inc
mov
cs
pop
and
mov
sub
or
iret
mov
jnp
pusha
hlt
into
insb
xor
adc
jo
jp
les
outsl
push
sti
popf
in
mov
aas
ret
jns
mov
cwtl
jo
call
pop
outsl
mov
xchg
pop
push
sahf
mov
mov
popf
push
stos
je
mov
mov
and
cwtl
jns
sahf
sbb
mov
dec
jge
leave
sbb
fwait
or
push
in
xor
lods
mov
add
ljmp
mov
ljmp
fcomp
cmp
inc
mov
repz
cmp
pusha
cltd
addr16
in
iret
or
sti
sarl
jl
cmpb
mov
sahf
gs
and
popf
xor
cmp
and
addr16
icebp
xor
xor
repnz
and
pop
mov
push
fmull
and
xchg
or
sar
mov
pop
lcall
in
flds
data16
jle
dec
cltd
leave
js
xor
jmp
lds
dec
or
mov
rcrb
jmp
jmp
mov
imul
jmp
push
sub
out
stc
adc
xchg
sahf
aaa
cwtl
jecxz
and
mov
inc
aaa
xchg
dec
or
mov
sbb
mov
mov
mov
jno
rcll
stos
cmp
mov
dec
pop
or
lcall
cld
push
out
xchg
int3
sub
std
shll
cmp
and
sbb
movsl
cli
rorl
adc
and
and
dec
rol
jp
push
sbb
add
loop
jae
cmc
push
popa
jge
jmp
mov
data16
aad
roll
cmp
hlt
sub
dec
je
sbb
xor
loopne
out
jl
jmp
lret
push
xchg
xor
fisttpl
adc
mov
adc
lahf
xor
scas
pop
xlat
xchg
or
pusha
stos
mov
mov
jne
sbb
ret
ror
je
in
lods
add
iret
rol
idivb
jnp
mov
pop
movsb
sbb
fidivrl
mov
pusha
mov
xchg
ds
mov
pop
sbb
lret
or
insl
mov
xchg
shlb
ret
out
mov
aam
adc
xchg
pop
mov
xor
xchg
sub
xor
and
shrl
test
pop
mov
cmp
xchg
frstor
xchg
fcmovb
ljmp
jae
mov
lret
cmp
mov
or
push
cld
popa
dec
push
or
cmp
or
xchg
cwtl
xchg
inc
cltd
test
sub
jmp
jmp
cmpl
leave
fcomip
push
cmp
jo
cmpsl
fwait
inc
adc
cmp
aas
movsl
divl
es
rcl
ja
lea
insb
adc
dec
movsb
outsl
cmp
jns
sbbl
into
shrl
pop
mov
dec
incl
xchg
dec
xchg
or
andb
je
mov
push
jp
add
cmp
xor
test
pop
cmpl
les
mov
jo
dec
test
or
lea
cs
das
in
lock
cld
pop
add
andl
xor
test
fidivrl
test
jp
xchg
sbb
shll
popf
and
int3
xor
in
cmpsb
mov
orl
xchg
cmp
in
dec
mov
push
inc
dec
adc
inc
xchg
loop
and
inc
loope
pop
jmp
mov
vmread
xor
daa
and
mov
dec
xor
mov
mov
mov
inc
pop
jno
sbb
sti
loopne
out
std
mov
pop
adc
test
xor
es
fbstp
add
loopne
mov
iret
xchg
cmp
outsl
and
stos
and
dec
mov
mov
insb
scas
sarb
adc
out
call
or
xchg
dec
lea
dec
dec
xor
pop
scas
push
iret
hlt
xor
sbb
mov
sbb
stos
movsl
adc
cmp
jl
xchg
add
lods
out
shl
jae
movsl
mov
cld
aam
scas
fbld
mov
fstpl
decl
xchg
fstl
mov
es
in
jecxz
es
cmpsb
sbb
testl
add
or
pop
push
xchg
jno
xchg
add
add
mov
jb
cld
cmpsb
jle
push
fistps
adc
dec
xchg
add
add
sub
fldt
xchg
ljmp
pop
mov
aad
and
xchg
and
shlb
fwait
push
and
jne
push
jae
adc
fmul
test
mov
lock
lcall
or
lahf
js
stos
fbstp
stos
or
xor
dec
adc
sbb
adc
sub
hlt
lods
orl
in
fmul
mov
mov
test
xchg
mov
shl
mov
adc
int
fsubrs
std
fwait
cmp
mov
dec
xchg
xor
lret
or
insb
mov
iret
insb
mov
dec
ljmp
push
in
aad
adc
push
cltd
test
fdivl
push
imul
mov
add
xor
pop
sub
jns
inc
dec
mov
imul
repnz
pushf
sar
mov
cmp
xchg
je
daa
rcl
es
pusha
pusha
inc
or
out
cli
xchg
xchg
add
jg
xor
jno
sub
scas
in
dec
dec
jns
je,pt
adc
ja
push
inc
fwait
outsl
popa
out
repz
inc
popf
shr
adc
sbb
pop
or
ret
mov
fbstp
and
push
stos
xor
jmp
in
ror
cltd
mov
jmp
jl
mov
stc
paddsb
popf
xor
and
or
test
mov
mov
cmp
call
fldcw
fists
mov
and
or
mov
fiaddl
xlat
push
cmpsb
xor
or
pop
xchg
ss
push
sub
mov
sub
sbb
data16
pop
imul
mov
cmp
jmp
jbe
icebp
sub
cmp
inc
or
mov
mov
mov
mov
jg
rcl
stos
hlt
subb
xchg
mov
pop
jno
pop
std
and
dec
rorb
shl
jo
and
and
packsswb
cltd
jbe
idivl
es
cmpsl
lock
jg
in
call
push
push
cld
mov
iret
mov
outsl
cli
sub
fidivs
mov
mov
or
inc
fbstp
cmp
aas
out
jb
ja
push
cmc
shr
sarb
xlat
pop
mov
jno
lock
mov
sbb
pop
sbb
jle
add
xchg
pop
insb
jno
daa
xchg
aaa
and
pop
clc
push
and
xor
lret
or
scas
push
add
ljmp
jl
test
jo
xor
xor
rcll
aas
lea
pop
mov
cmpsl
jb
push
xor
xor
mov
push
in
and
xchg
jmp
dec
cmp
ret
jns
adc
mov
mov
insb
icebp
mov
out
inc
jns
je
sarl
ss
sti
test
adc
cmp
lds
mov
sub
pop
in
outsl
ss
sbb
loope
xor
lret
fwait
popf
push
push
std
add
lret
out
in
loop
aaa
mov
mov
and
cmp
nop
mov
or
inc
sbb
scas
sbb
jle
mov
repz
stc
jbe
add
and
rcl
dec
ret
orl
and
imul
call
int3
xor
imul
mov
xor
jmp
lods
pop
and
roll
sarl
jmp
cmp
test
xchg
sbb
shrl
jmp
sub
loopne
xchg
jns
mov
adc
xor
in
sub
shl
pop
sub
xchg
loop
sub
fwait
dec
mov
sub
xchg
sub
sbb
jb
and
inc
lcall
mov
cmp
imul
push
add
out
cmp
sbb
cmp
scas
dec
pop
ficoms
ds
xchg
orl
sub
push
mov
aaa
jnp
and
mov
inc
mov
cmp
or
xlat
xor
out
push
test
and
push
imul
inc
in
loope
js
imul
in
out
xor
les
mov
test
stos
push
into
cld
mov
in
cmpsl
data16
outsl
ret
or
adc
cmp
mov
mov
bound
jle
lahf
xorb
sahf
sarl
pop
shl
add
and
mov
jecxz
mov
pop
lret
mov
dec
mov
jmp
rcll
sbb
lds
in
shr
inc
lods
lahf
cmp
iret
dec
in
sarb
push
jl
adc
xchg
lahf
inc
out
stos
add
adc
and
pop
cld
and
xor
xorb
test
adc
cmp
daa
aas
jle
inc
rcll
inc
pop
pop
out
inc
addb
push
cltd
aas
popf
jg
fcom
mov
fdiv
jle
rcl
ds
pushf
jne
and
aam
shrl
jo
sub
push
dec
pusha
pop
pop
mov
cmc
out
jbe
mov
push
xchg
fstpl
fiadds
xor
xchg
outsb
std
icebp
mov
push
mov
mov
enter
xchg
mov
xchg
in
adc
cmp
xchg
pop
cmp
cmpsb
lret
jbe
adc
mov
xchg
pop
add
aaa
mov
call
and
add
jae
out
jnp
cmp
xor
xchg
pop
and
das
or
dec
mov
lret
sub
adc
inc
movsl
add
push
int3
pop
lea
pop
in
add
inc
and
jmp
xchg
aad
sbb
rorl
rorb
cs
push
cmc
nop
mov
stc
clc
inc
xlat
xchg
or
xchg
and
popa
push
icebp
repnz
les
js
xchg
ja
aas
mov
jbe
pop
add
jnp
push
rorb
stos
or
and
sbb
je
outsb
xor
js
push
insl
sub
sub
xor
in
add
lds
mov
push
cltd
pop
jae
adc
in
mov
idiv
insb
test
arpl
add
xor
test
sbb
hlt
aaa
loop
mov
xchg
push
add
adc
adc
loope
xchg
addl
adc
push
out
insb
lods
mov
jle
dec
sahf
cwtl
inc
repz
push
xor
imul
les
repnz
sbb
add
push
out
and
cmp
cmp
jnp
out
scas
fmuls
ja
mov
outsb
enter
mov
sub
pop
out
pop
mov
mov
mov
out
cmpsb
xchg
arpl
ret
cmp
mov
cmp
out
xchg
ficomps
lock
pop
loopne
ret
lcall
or
clc
or
shrl
xchg
xlat
mov
push
sub
in
push
push
push
fidivrs
inc
int
movsl
fisttpll
and
cli
dec
push
in
mov
push
cmp
shl
mov
fwait
mov
push
mov
jno
xchg
in
in
shlb
add
jns
jg
test
aas
mov
cs
outsl
sbb
dec
arpl
lret
mov
mov
fistpll
stc
ljmp
adcb
xor
in
cmp
into
sub
das
adc
out
pop
and
popf
sbb
mov
repnz
ror
cmc
push
xchg
xlat
mov
push
jecxz
and
rcrb
arpl
xor
pop
lock
cmp
pop
mov
xorb
inc
sbb
imul
cld
lret
add
push
cmpl
out
cmpsb
sti
lret
push
in
sub
fsts
stos
add
jmp
pop
stos
push
pop
je
sbb
fdivrl
add
or
push
ljmp
sbb
jo
repnz
sbb
sub
mov
inc
sub
cld
rorl
pop
pop
add
je
adc
insl
cmp
mov
xor
xchg
aad
adc
mov
fsubrp
mov
push
pushf
mov
cmp
adc
jmp
shrb
aas
roll
mov
aaa
outsl
call
dec
in
jmp
mov
cmp
push
dec
roll
mov
in
faddl
std
push
pop
xchg
cmp
cltd
and
dec
push
push
sahf
mov
lcall
push
xor
movsl
or
cmp
inc
insb
mov
pop
push
or
es
mov
mov
mov
cmp
ret
push
push
xorb
xor
and
das
adc
jne
mov
cmp
lfs
loop
in
pop
dec
faddl
sbb
lds
jl
mov
cmp
push
test
inc
je
jmp
out
push
inc
je
adc
cmpsl
lcall
cmp
pop
ljmp
mov
jg
and
pop
stos
ljmp
inc
xor
test
xchg
pop
fnstcw
jbe
ljmp
or
pop
inc
jo
aaa
push
loop
pop
xchg
push
int3
sub
dec
loopne
out
subl
jg
inc
loope
in
stos
scas
ljmp
gs
mov
jmp
sub
lret
and
gs
xor
pushf
inc
cmpsb
or
xor
mov
test
cmp
pop
std
xchg
sti
cs
jmp
xor
sbb
test
jg
dec
jno
lds
pop
test
dec
mov
jg
xchg
jo
jnp
pusha
rorb
jno
cmpb
roll
roll
or
test
or
outsb
aas
or
iret
into
adc
xchg
cs
pop
addr16
cltd
push
xlat
stc
or
nop
js
in
pop
pusha
rcrb
neg
dec
mov
mov
fbld
pushf
inc
mov
loope
idiv
xchg
sbbl
pop
lds
mov
dec
arpl
call
adc
dec
repz
aad
mov
test
dec
lcall
out
pop
test
adc
decl
into
popa
mov
xor
cmp
enter
popa
xchg
lcall
mov
pop
fcmove
dec
test
test
cmp
lods
testb
inc
or
jb
jmp
xchg
lds
out
inc
mov
sbb
outsl
data16
pop
ljmpw
or
dec
movsb
mov
lcall
pop
mov
push
cli
pop
push
jae
mov
fcoml
mov
or
lods
jbe
push
cli
inc
mov
push
xchg
fwait
pop
mov
sub
sub
in
push
jae
mov
rcrl
movsl
xor
mov
jecxz
loop
pushf
bound
das
scas
inc
daa
pop
mov
dec
out
fldcw
push
jl
cld
mov
lret
pop
jb
inc
jns
arpl
pop
fdivrl
je
adc
add
les
push
add
enter
pop
je
mov
mov
jne
cmp
dec
cmp
gs
shll
pushf
shrb
dec
adc
push
and
add
ss
hlt
cmp
clc
sbb
cwtl
mov
pop
pop
lods
in
inc
imul
mov
pop
imul
add
out
mov
icebp
add
adc
gs
push
je
insl
fildl
xor
inc
pop
int
jo
movsl
clc
add
push
test
mov
inc
stc
loopne
es
xor
or
cmp
andb
in
mov
xor
add
outsl
xor
shl
js
in
add
les
or
xor
les
xor
dec
mov
gs
insb
xor
and
dec
aas
pop
xchg
int
out
int
dec
cli
rorl
loop
adc
push
adc
mov
sbb
jno
test
shlb
filds
cmp
lcall
mov
sahf
orb
lea
push
jle,pn
ljmp
and
sub
lcall
dec
fucomi
mov
inc
dec
mov
movsl
pushf
xchg
inc
add
hlt
daa
xor
mov
mov
jg
lods
inc
inc
pop
aas
pop
ds
mov
stc
mov
sub
cmp
fbstp
or
jne
insl
xchg
cmp
push
pop
lods
cmpsb
rorl
mov
xchg
test
je
jecxz
xchg
adc
shl
sbb
mov
pop
out
add
push
sbb
push
mov
out
maxps
out
inc
cmp
or
push
sbb
in
bound
call
loopne
pop
ds
add
aaa
mov
pop
jae
test
stos
or
sub
fcmovnbe
dec
ss
and
sbb
mov
sub
and
pop
shlb
push
sub
or
and
push
mov
and
dec
or
pushf
loopne
cwtl
sub
mov
pushf
sbb
push
mov
adc
or
data16
or
cmc
sbb
ja
fwait
inc
enter
adc
in
enter
push
xchg
test
push
addb
pushf
mov
negb
jl
jp
xlat
lock
std
pop
add
and
and
shrl
aam
mov
pop
mov
imul
decb
mov
mov
sti
pop
jmp
fstpt
outsb
cmp
or
pop
decb
mov
mov
sti
pop
jmp
fstpt
outsb
cmp
or
pop
decb
push
imul
cs
pop
sti
dec
fstpt
outsb
das
sahf
ja
inc
mov
jnp
pop
dec
out
mov
mov
arpl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
outsb
cmpsb
jle
dec
xchg
inc
push
mov
mov
pop
into
push
fidivs
cmp
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
ja
push
fidivs
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
ja
arpl
adc
cld
sub
fisubl
jmp
cmc
sbb
fwait
push
pop
jp
repnz
jecxz
sub
jecxz
mov
pop
or
add
mov
fistpl
iret
xor
cmpsl
insb
cltd
mov
insb
out
pop
dec
mov
adc
inc
push
stc
and
scas
cmpsb
jle
jno
pop
jno
cmpsb
std
mov
push
imulb
lret
add
xchg
pop
xor
mov
jno
adc
pop
add
das
out
sub
sbb
popf
pop
adc
inc
xor
push
and
jno
adc
cmpsb
sbbl
cs
jnp
dec
fwait
lock
arpl
mov
add
inc
lahf
jmp
dec
xchg
cs
push
push
ss
es
push
into
push
fidivs
mov
inc
test
daa
enter
cmpl
inc
mov
mov
bound
cmp
jl
dec
into
sub
data16
mov
mov
arpl
push
jmp
into
shlb
sub
mov
out
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
mov
sbb
or
mov
xor
sbb
dec
mov
dec
aam
adcb
mov
cmp
je
jb
cwtl
int
or
mov
or
ss
xchg
stc
repnz
push
cmpsb
xchg
push
adc
sbb
mov
jo
pusha
lret
sbb
add
bnd
dec
movsb
dec
fwait
repz
addr16
out
loopne
mov
imul
in
mov
adc
mov
pop
ret
cmpsl
aaa
stos
push
push
xor
dec
jae
inc
repz
cmc
into
pop
sub
cmp
xchg
loopne
and
es
iret
jle
mov
inc
jmp
stos
mov
cmp
mov
jecxz
and
xor
jnp
ret
enter
es
jge
mov
dec
mov
seto
mov
pop
xor
out
pop
rorl
in
test
xchg
icebp
mov
pushf
add
iret
add
insb
add
cmp
push
xchg
jge
jle
orb
mov
dec
mov
scas
mov
aad
push
or
cmp
pop
xchg
lahf
xor
outsl
add
je
aam
jl
dec
and
hlt
mov
fdivrs
dec
scas
push
jp
mov
jae
sub
shlb
jne
clc
xchg
test
daa
dec
mov
inc
mov
sbb
jo
mov
push
ficompl
xor
cmpsb
add
pop
daa
sar
addb
in
mov
pop
mov
dec
dec
nop
ret
and
adc
mov
sbb
mov
nop
mov
das
inc
ret
les
sbb
cli
das
bound
mov
mov
sbb
cmp
adc
add
psrlw
insl
xor
rcll
adc
mov
adc
dec
int3
bound
mov
ljmp
pop
cld
test
stos
rorl
sbb
loope
lcall
cmc
jg
icebp
xor
int
mov
inc
aad
testl
and
testb
test
sub
sbb
sahf
dec
mov
int3
push
or
push
adc
sahf
clc
daa
es
pop
ds
cli
aaa
sub
cmp
xor
inc
and
xor
pop
mov
lret
add
adcl
push
cld
mov
jo
loope
lret
fwait
out
inc
test
adc
in
and
aas
adc
adc
push
push
popf
inc
enter
arpl
and
pop
aad
adc
outsl
out
jne
pop
aam
adc
int
and
dec
lcall
mov
push
fidivl
mov
sub
dec
or
stos
push
push
std
mov
cltd
xor
jbe
hlt
sbbb
xchg
jge
lods
gs
xor
iret
mov
pop
pop
push
jbe
sbb
loope
shrl
mov
pop
lcall
mov
gs
push
add
jae
repnz
sbb
jo
ds
loop
enter
rcll
or
push
lea
push
jb
jo
pop
sub
aam
scas
mov
push
xchg
jecxz
mov
repz
sub
and
or
inc
xor
out
pop
pop
bound
xchg
in
pop
int
lock
ret
mov
dec
push
and
cwtl
adc
je
and
in
aaa
addl
jmp
pcmpgtd
negl
xchg
and
in
popa
cld
into
xor
push
fnstcw
lcall
incl
negb
and
dec
pop
faddl
push
js
sbb
lret
sbb
dec
xchg
and
adc
frstor
lods
adc
xor
pop
sahf
push
add
mov
fimuls
repz
jle
out
add
mov
loope
cmc
pop
mov
insl
dec
mov
push
add
and
push
gs
add
test
jns
fsubl
insl
and
cwtl
out
xchg
mov
mov
mov
imulb
push
movsb
adc
ds
pushl
and
cmpb
lods
mov
dec
pop
in
inc
xor
test
push
daa
sbb
mov
adc
stos
js
cmpsb
insl
jnp
aad
xchg
dec
clc
mov
lock
sub
orl
xchg
test
sub
mov
mov
pop
and
fsubrl
mov
mov
cmpl
sbb
adc
cmpsl
movsl
jp
dec
push
mov
inc
mov
or
in
inc
in
jg
mov
shrb
jbe
fisttpl
fcompl
add
addr16
lret
daa
adc
and
fsts
ret
push
gs
lret
jle
pop
stos
inc
and
xchg
adc
add
hlt
adc
push
ljmp
dec
clc
sahf
cmp
sbb
aad
or
fdivrl
dec
lea
test
call
imul
xchg
pop
lock
cmp
cwtl
mov
mov
aas
adc
xchg
inc
cmp
sbbl
fisubl
ficoms
dec
jg
or
fnsave
cmp
or
repnz
sbb
or
adc
addr16
mov
adc
push
jg
adc
es
sub
inc
xchg
pop
mov
andps
fwait
lods
aad
rcrb
sub
add
mov
ds
cmp
mov
out
fwait
mov
sub
nop
lahf
psrlw
fsubrp
inc
mov
sub
in
out
stos
add
add
popf
lds
jb
xchg
jmp
xchg
jge
dec
push
test
mov
sub
stos
adc
sbb
not
daa
xchg
sbbl
mov
stc
in
push
fcoms
in
jecxz
sbb
in
cmc
sub
adc
out
sub
out
push
push
fnstsw
mov
xchg
stc
scas
scas
sub
cmp
in
movsl
push
mov
lock
addr16
sub
xchg
inc
xchg
xchg
pop
rclb
jecxz
dec
imul
mov
pop
and
mull
stc
add
addl
xchg
movsb
adc
lea
out
imul
aas
sub
movsb
cwtl
shlb
pop
pop
cmc
push
push
loope
sbb
push
push
hlt
add
mov
pop
mov
js
fbld
ror
enter
cmp
in
jge
rcl
lds
outsl
add
mov
mov
jae
pop
iret
sarb
insb
mov
std
xor
loope
sbb
out
aad
cmp
push
xchg
ficoms
jge
jns
and
loopne
movsb
adc
sarl
je
xchg
and
scas
loopne
test
outsl
mov
add
ds
cmp
push
mov
mov
mov
xchg
es
push
scas
adc
sbb
pop
mov
jae
add
mov
adc
addb
ja
icebp
pushf
jbe
ljmp
jg
stc
leave
orb
mov
inc
cmpsb
jno
cmpsl
outsl
adcb
adc
hlt
in
sub
pop
cmp
push
repz
pop
xchg
fldl
add
push
or
in
insl
mov
xor
adc
mov
sahf
sub
sub
inc
iret
mov
xchg
sub
mov
jmp
cmp
mov
push
jno
les
or
inc
jl
ljmp
mov
or
adc
sbb
ja
call
shr
adcl
xchg
jae
scas
add
not
out
jae
gs
xlat
sub
jae
ds
js
les
mov
ret
ljmp
jb
rcrl
add
mov
out
sar
lea
jne
jmp
in
fcmovnu
hlt
mov
mov
mov
fiadds
addl
ja
mov
cmpb
xor
rolb
mov
pop
js
imul
sti
incl
cmp
insb
mov
inc
int3
int3
in
pop
lahf
lea
cmpsb
fwait
cmp
sbb
clc
sarb
xor
and
push
imul
aaa
push
inc
mov
je,pt
daa
lahf
loopne
popa
cmp
pop
or
jno
mov
pop
mov
fists
adc
call
dec
bound
xchg
mov
ljmp
ds
cli
cli
inc
sti
cmp
das
push
imul
push
add
adc
and
inc
and
dec
repz
pop
cmpb
mov
inc
push
test
jns
cli
xchg
push
pop
adc
jp
jb
add
pop
mov
dec
mov
jle
rcr
daa
int3
sahf
vfrczsd
hlt
mov
outsb
hlt
insb
xchg
sbb
sub
cld
in
cmp
push
xor
lods
push
add
lods
mov
into
stos
aam
rcll
test
mov
mov
sub
lret
dec
sahf
push
scas
dec
pop
repz
xchg
xor
sub
xchg
sub
mov
leave
dec
lahf
test
ret
in
enter
mov
lret
jo
jmp
arpl
jecxz
sub
jne
xchg
adc
sub
cwtl
mov
sub
or
pop
cmc
es
pop
les
add
sti
test
jae
push
cmpl
xor
fcmove
insb
add
jo
adc
cmc
loopne
cmp
repnz
adc
je
sub
inc
pop
pop
cmp
fsubrl
cs
mov
dec
je
cmp
shrb
rol
add
dec
inc
push
add
xchg
out
pop
call
adc
ja
loop
incb
push
pop
mov
movsl
scas
sti
push
ret
push
fdivs
clc
dec
push
hlt
xor
adc
out
add
out
lock
or
dec
pop
daa
outsl
fisubl
and
inc
sti
pop
fisubrs
and
pop
js
add
and
mov
inc
pop
aam
movb
pop
jle
cmpsl
jno
cmp
aas
fucomip
iret
inc
or
cmp
cwtl
mov
cltd
jmp
popf
std
xchg
adc
inc
cli
fstl
cld
rolb
and
pop
inc
inc
cli
push
scas
scas
mov
orb
mov
call
test
sub
push
push
addr16
and
cs
adc
xor
pop
mov
pop
push
adc
fimuls
xor
enter
sbbb
pop
repnz
in
dec
xlat
mov
mov
push
mov
stos
push
icebp
push
xor
sub
pushf
push
out
sub
cmc
ret
inc
jg
hlt
hlt
test
imul
push
out
xor
outsb
int
sub
aas
xchg
sub
xlat
mov
fsubrp
lock
mov
inc
mov
dec
mov
cmc
sbb
cmp
fldl
cmpsb
cltd
cmpsl
jae
sti
jmp
loop
adcb
and
out
ss
jg
fs
pop
outsb
push
aad
cmp
sarl
lea
cmp
sub
xchg
mov
std
add
adc
dec
xchg
out
or
fisubs
sub
adc
sbb
cs
iret
pop
and
xor
adc
inc
mov
cmc
pop
dec
cli
test
sbb
test
cmpsb
lods
pop
jmp
adc
sbb
cmp
loope
nop
stc
add
jno
mov
negl
dec
fisubrs
jmp
mov
push
xor
enter
mov
mov
cmp
mov
imul
hlt
ljmp
jle
xor
insb
in
push
cli
inc
scas
fwait
les
ret
int
repz
fs
inc
subb
imul
cmpb
leave
lods
fldt
and
jp
jae
pop
in
push
or
push
pop
mov
sub
xor
shl
sub
adc
mov
or
dec
ret
push
xchg
test
hlt
movsl
push
mov
into
inc
outsb
inc
xchg
cmp
pusha
shlb
jmp
lret
out
inc
dec
lret
mov
push
icebp
or
pop
aas
inc
iret
mov
adc
lcall
es
push
sbb
push
xchg
or
or
inc
mov
cmp
jg
orb
aas
inc
mov
lock
lods
fdivrl
outsb
jp
in
jno
int
in
adc
imul
shll
aam
and
sbb
cmp
xchg
cmp
dec
setge
mov
mov
loope
test
xchg
outsb
addr16
pop
lret
mov
js
sub
mov
mov
xor
sub
shlb
mov
xchg
pop
inc
sbb
incb
add
test
mov
dec
sarl
fildl
and
jnp
test
sbb
push
xchg
ret
xchg
push
mov
cmp
fstl
dec
mov
add
test
arpl
xor
filds
cwtl
sub
out
mov
imul
add
ljmp
cli
mov
xchg
push
mov
xor
sub
and
ds
push
out
lahf
jge
dec
je
outsb
sub
sub
add
lret
outsl
fwait
aad
rclb
sti
data16
aad
inc
negb
loope
push
inc
adc
dec
add
lock
sbb
mov
jmp
push
adc
jg
mov
dec
cld
aad
stc
xor
aaa
mov
negl
loope
pop
nop
add
sub
xchg
inc
pop
icebp
xchg
or
mov
idivb
mov
sub
jae
aad
lods
shll
pushf
les
aad
sbb
stc
fimuls
addr16
and
clc
nop
ja
insb
or
add
jl
jmp
mov
jb
je
xlat
inc
pop
xchg
jp
stos
jb
mov
cmpsb
pop
inc
mov
inc
mov
mov
ss
jmp
xlat
mov
sub
lret
cltd
and
shlb
jle
xor
adc
adc
loope
mov
mov
fists
das
jmp
cmpsl
insb
js
push
push
aad
cmp
mov
aam
pop
fwait
sbb
movsb
or
or
mov
jo
and
sti
outsb
out
loope
fbld
jle
xor
notl
in
cmovbe
mov
je
pop
stos
jmp
cmp
enter
in
in
ret
push
inc
enter
xor
add
hlt
in
ljmp
pop
xchg
xchg
stos
int3
sbb
jl
rcrl
push
and
dec
cld
repz
inc
dec
imul
add
ret
jg
push
roll
stos
pop
or
ficomps
repnz
fcomps
fucompp
lods
jp
mov
inc
jb
in
aam
adc
leave
pop
pop
ret
add
stos
es
jo
dec
sub
or
pop
lahf
aas
lcall
add
lret
lcall
test
fists
bound
xchg
lock
leave
adc
sub
popa
sub
xor
jb
mov
sub
adc
cmpsb
js
sbb
xchg
mov
popf
pop
filds
push
movsl
enter
test
cld
loopne
js
sbb
cld
jno
bnd
jle
sub
mov
mov
dec
jno
add
push
data16
and
adc
es
mov
pushf
pop
pop
in
adc
sub
call
mov
call
js
out
push
pop
xor
arpl
nop
mov
pushf
fs
or
bound
aas
jp
cli
xchg
fsqrt
adc
xchg
lock
fisttpll
ret
rclb
cltd
test
lret
and
mov
shlb
icebp
cwtl
mov
add
sti
jmp
das
xchg
gs
jecxz
mov
call
add
rol
inc
fwait
or
inc
jae
xor
push
fnstsw
mov
or
add
mov
out
add
xlat
test
stos
push
or
inc
sub
bnd
out
mov
mov
ret
mov
push
test
inc
sub
out
mov
dec
sbb
add
sbbb
inc
and
test
sahf
push
inc
mov
sbb
cmp
adc
dec
out
sub
pop
mov
pop
pop
pop
adc
cmc
rcrb
stos
int3
cmpsl
movsl
pushl
push
adc
les
aaa
sbb
insl
loope
mov
ficomps
fnstcw
xchg
sbb
scas
and
into
rep
or
sahf
push
stos
aam
ror
mov
jg
insl
push
andb
xor
push
dec
jmp
sbb
aam
and
fbld
jne
sub
out
fsubs
xchg
data16
jno
mov
insb
sub
clc
jo
pop
loope
mov
fsubr
and
inc
or
aad
add
adc
xchg
in
cwtl
push
or
dec
push
lods
in
inc
stos
pop
popa
add
cmpsb
xlat
fs
sub
jl
mov
xor
ljmp
mov
mov
jo
ret
ret
jo
mov
cwtl
dec
lods
and
imul
mov
push
in
sbb
jnp
into
in
in
or
and
xor
push
push
hlt
in
and
lahf
inc
sbb
ror
ss
mov
or
sub
movsb
add
mov
cmp
jle
popa
pop
mov
cmpsb
rol
cmp
mov
imul
ret
and
in
lea
push
push
pop
sbb
jnp
test
fs
adc
movsb
push
nop
mov
arpl
sti
sub
sbb
xor
sbb
nop
push
adc
and
imul
pop
iret
outsb
add
sbb
dec
xor
inc
imulb
adc
mov
das
xor
in
mov
and
push
leave
in
pop
jge
or
rclb
scas
push
in
or
sub
lds
jmp
out
cs
ja
mov
sti
sub
or
pop
and
fstps
add
mov
xchg
mov
test
xchg
das
test
pushf
sbb
rcrb
imul
pop
in
sahf
xchg
xchg
mov
add
outsl
add
cmp
je
mov
pushf
inc
pop
pop
mov
test
popl
mulb
pushf
jae
arpl
inc
aad
add
inc
dec
loope
fnstcw
mov
jns
add
addr16
mov
cltd
test
cwtl
push
jmp
cmc
jns
mov
mov
mov
add
popa
test
outsb
imul
mov
jmp
mov
roll
scas
dec
add
test
or
pushf
add
cli
mov
and
ja
out
sub
sub
dec
cmc
jg
sahf
and
jnp
js
add
imul
not
push
pop
stc
leave
aaa
jl
in
push
dec
xlat
mov
lock
fsubl
int3
xor
int3
sub
outsl
jbe
sbb
fldt
and
adc
ja
sbb
iret
sbb
xor
fdivr
cli
ja
xchg
jp
mov
sbbl
push
sti
mov
inc
jne
pop
and
aaa
sahf
fldcw
out
ss
inc
arpl
pop
push
icebp
jp
js
xchg
mov
imul
aas
pop
sub
adc
xor
mov
xlat
jmp
push
pushf
call
aam
sbbb
addr16
cmc
pusha
loope
cmp
repz
imull
pop
out
and
lds
nop
mov
adc
xchg
mov
aam
fs
mov
xor
pushf
pop
loop
dec
mov
insb
stos
ss
subl
mov
mov
push
and
push
lret
enter
arpl
push
mov
jae
dec
clc
cmp
incb
ljmp
ret
cmc
cmp
rcr
jmp
js
js
inc
xchg
sbb
sahf
mov
lea
pusha
push
xchg
add
out
fcomp
mov
mov
loopne
mov
inc
cltd
sub
addr16
push
sub
in
in
filds
cmpsl
sysexit
fildl
inc
pop
dec
in
fldcw
mov
pop
jne
and
dec
mov
mov
pop
jb
mov
in
pop
dec
push
xchg
inc
clc
jbe
jecxz
sbb
push
popa
dec
dec
icebp
mov
sti
mov
jmp
ja
test
icebp
sbbb
jge
ss
jle
mov
mov
mov
fnstcw
pop
jmp
or
jge
aaa
push
or
faddl
dec
dec
test
rcr
xorb
in
xor
ret
fcmovne
add
xchg
pusha
fs
mov
push
mov
pop
mov
mov
iret
movsl
movsl
jae
lods
mov
push
and
ss
and
in
clc
pop
divb
xchg
rorl
lcall
into
popf
scas
mov
adc
mov
xor
ljmp
cltd
cmp
enter
test
pop
push
inc
inc
das
push
dec
add
sub
pop
jo
pop
jecxz
sub
mov
adc
cmpsl
out
mov
out
xchg
in
scas
add
test
imul
pop
loopne
ror
mov
out
mov
ss
fsubl
pop
add
or
fisttpl
and
and
dec
cmova
lahf
mov
inc
not
sbb
jnp
fsts
jle
dec
xchg
cs
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsb
xchg
into
xchg
cs
push
push
outsb
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsl
jle
dec
xchg
cs
push
push
ss
es
mov
es
inc
test
dec
cltd
pop
test
mov
ja
inc
hlt
cmp
lcall
fldt
cmp
dec
mov
imul
mov
or
sub
dec
or
sbb
sub
cmp
dec
clc
pop
cwtl
imul
mov
add
xor
and
lret
pop
xchg
pop
out
sub
adc
std
push
clc
sub
ret
add
jb
rcll
xchg
and
ds
les
adc
dec
data16
inc
sub
jp
jmp
mov
xchg
and
mov
pop
les
pop
sub
repz
pop
lock
and
cmpsb
addr16
or
cmp
shlb
ljmp
movsl
push
mov
or
sub
sbb
repnz
fcmove
sbb
sub
inc
push
ss
adc
adc
sbb
jns
mov
popa
cs
xchg
inc
lock
push
mov
dec
mov
push
add
scas
test
mov
test
or
sbb
sub
and
lret
sub
cmp
dec
xchg
pop
subb
mov
out
ud0
lods
or
pop
jns
jl
pop
out
jl
iret
out
sbb
jmp
in
xor
sbb
adc
lods
pop
mov
mov
mov
int
into
out
dec
cltd
pop
out
push
fdivrl
mov
fstps
jmp
lret
sub
cmp
dec
mov
imul
mov
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
js
and
sahf
adc
xchg
insb
or
cmpsb
pop
jmp
test
enter
jg
fisttpl
xor
scas
jnp
rcrl
addl
cmpb
dec
cmp
gs
movsl
outsl
xchg
outsl
lods
jl
or
xor
pop
pusha
out
popw
push
or
xchg
add
in
cld
xchg
mov
lret
xchg
add
add
out
mulb
sbb
cmp
jo
xor
push
mov
sub
sub
cwtl
mov
dec
cmp
and
pop
xchg
xchg
mov
sub
and
pop
fnstcw
sarl
jmp
pop
pop
cmpsb
insb
adc
lahf
leave
pop
into
aam
dec
inc
mov
push
sbb
jno
mov
aas
insb
jno
mov
jns
lcall
mov
int3
loopne
insl
sub
int3
cmp
leave
sub
push
inc
clc
data16
jnp
ja
mov
repnz
gs
stc
pop
jb
in
mov
adc
xor
enter
into
mov
jmp
movsl
lahf
mov
adc
test
hlt
mov
inc
sarb
fisubrs
mov
test
int
jne
mov
jecxz
js
ret
enter
movsl
stos
lahf
mov
sub
lds
pop
xchg
data16
mov
push
or
sub
adc
aaa
adc
mov
jne
xchg
xor
inc
sub
and
dec
das
out
lds
sahf
repz
adc
rolb
or
scas
xchg
mull
int
repnz
mov
addr16
lds
mov
fcomps
inc
sub
sbb
fldcw
movsb
out
out
sahf
jle
test
sub
or
jmp
jo
sbb
dec
or
mov
dec
inc
xchg
aaa
sub
ja
cmp
test
shrl
and
inc
sub
pushf
mov
jle
mov
dec
push
movsb
fadds
loop
sti
shrb
icebp
out
cmp
aad
sti
push
mov
sti
pop
por
mov
cmp
clc
loope
psraw
xchg
out
cmp
mov
insl
xchg
mulb
mov
xor
dec
push
bound
fnstsw
lea
icebp
adc
lahf
mov
mov
push
jb
push
mov
xor
call
aad
mov
leave
xorb
push
test
xchg
outsb
inc
ror
xchg
in
fldenv
lcall
subb
stc
xlat
or
mov
mov
add
lcall
xor
fld
fwait
cmp
mov
mov
sti
mov
inc
addr16
lds
pop
or
and
movsb
sbb
test
add
or
and
or
in
in
push
xor
adc
xor
fnstsw
sbb
xchg
lahf
dec
mov
push
cmp
ljmp
nop
outsl
mov
seto
and
pop
in
movsl
cmp
jnp
cmpsl
dec
dec
popa
rcrl
imull
rcrb
dec
ljmp
insb
xor
add
aaa
or
sub
les
mov
dec
jg
in
scas
mov
pusha
movsb
rcll
push
xlat
jmp
ficoms
les
movsl
lret
inc
push
jmp
xor
in
mov
adc
add
xchg
loopne
inc
dec
testb
dec
clc
or
fidivrl
sub
push
mov
xlat
rcll
mov
jnp
adc
sbb
shll
jbe
out
into
scas
cmp
lea
scas
fiaddl
adc
lret
push
lret
adc
mov
xchg
lea
sbb
lret
mov
mov
add
fdivl
sbb
in
leave
popf
inc
xchg
std
jns
inc
xor
mov
or
scas
int
mov
adc
in
pushf
add
movsl
outsb
aas
xchg
mov
gs
dec
mov
push
jns
imul
popf
adc
mov
pop
sbb
divb
test
mov
xor
punpcklwd
dec
out
ds
mov
sbb
xor
push
in
add
mov
shlb
jno
and
es
lea
fmul
sub
sti
cld
and
add
rcll
clc
ret
cmp
cmc
movsl
dec
inc
addb
movsl
mov
aam
dec
pop
mov
xchg
adc
fists
repz
sbbb
popf
adcb
clc
xor
jge
adc
decb
lods
cmpsb
mov
sub
bound
sbb
stos
sarb
pop
cltd
or
aam
adc
push
mov
jmp
and
xchg
push
add
pop
gs
and
sbb
cmp
jne
and
fsts
cltd
mov
sahf
iret
xor
sub
sub
das
dec
pop
pop
cld
imul
pop
mov
mov
lock
stos
mov
sub
push
sbb
push
lret
unpckhps
pop
mov
or
in
out
dec
dec
sub
std
mov
cmp
mov
insl
mov
pusha
out
andl
mov
dec
jbe
dec
loopne
jo
lock
mov
cli
out
push
sub
mov
fsubp
dec
inc
sbb
out
int
aaa
loope
lahf
push
mov
fcoms
pop
paddq
outsb
push
sub
jg
fwait
aad
xchg
xor
pop
popf
add
das
adc
inc
inc
xchg
push
push
and
jns
cld
out
add
fisubs
xchg
lahf
test
mov
mov
add
testb
bound
adc
sbb
insb
subl
into
mov
sbb
stos
out
shrl
cmc
out
mov
bound
lods
cmc
and
dec
or
cwtl
sbb
add
push
pop
mov
dec
sarb
aaa
push
fidivrl
loopne
int3
push
cmpsb
imul
mov
mov
push
test
ret
sbbl
cs
mov
ret
shl
jbe
adc
aaa
repz
lods
fdivrl
jo
imul
lret
ret
adc
sbb
dec
or
cld
inc
pop
mov
loope
daa
mov
sub
aaa
jnp
jmp
cmp
movsl
stos
and
push
add
or
cwtl
out
mov
test
pusha
int3
mov
jb
aaa
push
and
neg
xor
mov
xchg
jae
jbe
dec
icebp
test
xor
cld
mov
lahf
outsl
adc
outsb
pusha
mov
ds
inc
leave
movsb
cmp
cs
mov
push
inc
sub
xor
pop
xor
dec
fs
pop
lahf
lods
sub
sbb
scas
clc
jns
mov
std
cmp
frstor
mov
inc
pop
cmp
lcall
pop
mov
push
into
repz
or
mov
cmc
std
cmpsl
loop
call
out
in
dec
mov
gs
mov
jge
mov
jno
lcall
test
pop
pop
out
or
push
mov
pop
aas
loopne
adc
sub
mov
xorb
sbb
daa
pop
jae
mov
sbb
dec
lret
into
and
outsb
gs
cmp
es
int3
jae
cmp
bound
stos
into
adc
aad
xchg
add
or
sbb
shl
push
das
bnd
mov
sbb
push
or
push
cmp
in
lods
stos
test
enter
mov
inc
mov
fwait
lock
fdivrl
cmp
aad
pop
mov
and
mov
mov
add
jbe
xorl
pushl
ret
lods
fsubrs
push
test
pop
mov
repnz
jno
inc
pop
lock
popf
dec
mov
js
test
pop
xchg
bound
jo
iret
repnz
popa
add
mov
movsb
jp
into
mov
cmpsl
pop
pop
test
aas
sbb
or
mov
push
movsb
jl
ds
sti
in
mov
jmp
lcall
fcoml
gs
mov
dec
outsb
mov
popa
add
out
shlb
fnsave
or
loope
pop
inc
xor
inc
mov
and
push
imul
int3
lcall
sti
test
insl
sub
sub
push
mov
lock
sub
add
out
mov
nop
inc
leave
mov
fwait
sahf
cmp
pusha
xor
loop
mov
pop
push
mov
push
verw
or
ret
iret
push
push
mov
or
push
insb
sbbb
inc
xchg
lahf
push
xchg
leave
sub
inc
stc
mov
mov
imul
inc
sub
and
addr16
das
fwait
mov
add
cmp
dec
repz
inc
push
sub
cmp
sub
rcrl
sbb
jnp
mov
das
sub
push
jae
cmc
and
cmp
xor
js
sub
test
jmp
jmp
hlt
imul
insb
js
cwtl
dec
pop
fnstsw
xchg
inc
xor
lcall
or
cmp
inc
mov
pop
and
inc
mov
pop
ret
sbb
shlb
out
inc
pop
icebp
repz
pop
imul
or
inc
and
pop
mov
cmc
mull
xchg
mov
shrb
adc
sti
fwait
rorl
jl
pop
pusha
das
mov
and
mov
ret
data16
dec
ret
dec
movsb
nop
roll
mov
xchg
pop
inc
pop
call
mov
lods
outsb
sbb
add
scas
sbb
ret
xchg
and
fucomip
popf
scas
mov
push
fidivrs
mov
jmp
popf
aad
mov
dec
addr16
ss
mov
push
or
cwtl
mov
shlb
add
pop
aas
test
sub
mov
dec
leave
filds
je
xchg
shll
lcall
cmc
jbe
imul
js
mov
sbb
lcall
lock
popa
mov
in
mov
inc
xor
push
push
or
jecxz
ss
and
xchg
and
subl
mov
aas
xor
inc
imul
dec
push
lods
or
jno
cmp
arpl
mov
mov
jne
dec
mov
test
xlat
add
hlt
out
cwtl
mov
fadds
mov
aam
aad
pop
inc
scas
aad
cld
add
or
mov
mov
and
mov
inc
out
cmp
pop
mov
adc
xchg
inc
incl
call
and
mov
dec
mov
or
dec
cmp
loop
jno
mov
add
jge
or
stos
mov
ret
sub
xor
hlt
repnz
out
mov
aas
inc
jno
scas
clc
icebp
bound
lcall
rolb
repz
pop
push
gs
adc
rorl
cmpsl
imul
clc
aad
lods
int
jge
inc
or
pop
xlat
mov
mov
mov
dec
sub
mov
ror
stos
adc
add
call
dec
push
lcall
adc
fwait
adc
movsl
test
gs
jo
out
xchg
in
aam
divl
lret
lret
and
mov
rorb
int
push
cmp
movsl
idivb
popa
jno
loop
jp
push
push
and
movsl
adc
insl
cld
test
dec
pop
stc
popa
sbb
jmp
lret
int
lods
push
aaa
fcom
out
jg
pop
cmp
and
jecxz
jbe
cmp
loop
push
js
pop
pop
je
or
fs
mov
js
aam
push
fldln2
push
push
or
mov
push
sti
or
add
fs
adc
jmp
xor
pop
sub
lahf
sub
jecxz
sub
push
imul
pop
hlt
repz
repz
es
fistps
add
mov
mov
int3
dec
xor
rcrl
mov
jl
pop
push
dec
popa
mov
dec
pop
lcall
sbb
stos
mov
add
mov
sbb
mov
leave
cmp
pusha
push
or
inc
out
clc
inc
inc
test
loop
popa
in
mov
divb
jo
fildl
scas
int3
jmp
and
test
mov
rcr
movsl
add
sti
mov
mov
popa
shrl
sbb
sub
or
test
int3
inc
mov
pop
xchg
mov
adc
outsb
ss
adcl
lea
push
fcompl
cmpsl
and
lcall
dec
out
in
and
fcmovu
sub
repz
cwtl
or
cs
gs
jbe
push
stos
mov
arpl
lods
shll
push
jne
daa
mov
lods
pop
sbb
ss
add
adc
adc
xchg
xor
inc
ds
jb
cwtl
insb
mov
lods
push
xor
push
ret
lret
jbe
or
cli
fidivs
xchg
je
into
repnz
mov
mov
sub
or
xlat
daa
push
mov
push
pop
test
mov
push
dec
push
popl
mov
add
jmp
xor
inc
lret
stos
lock
loop
jns
cmc
pushf
sbb
add
or
adc
scas
popa
push
inc
inc
or
mov
mov
in
or
xchg
sub
mov
rcrb
sub
sbb
jbe
cmp
sbb
xor
cld
call
mov
adc
xor
adc
mov
xchg
in
push
xchg
int3
adc
sub
pop
sbb
push
mov
cmp
xchg
les
jnp
scas
and
jo
jmp
push
pusha
pop
xor
jg
jo
pop
je
fnsave
cwtl
xchg
outsl
icebp
in
mov
dec
jle
and
mov
scas
mov
and
stos
rorl
lahf
out
sbb
pop
lock
mov
rorb
daa
add
fisubs
cmp
lds
mov
repnz
outsl
xchg
and
pushf
xchg
bound
das
cmp
sbb
ret
xor
jge
mov
cmp
inc
lea
enter
jbe
shlb
das
sahf
idivl
icebp
inc
movsbl
out
inc
int3
je
sbb
rolb
inc
jp
fcompl
fisttpll
add
push
jnp
dec
cmp
sub
push
jne
ja
jnp
sarb
repnz
insl
int
cld
jg
test
orb
pop
cmc
sub
stc
rcrl
test
xchg
loop
rolb
cmp
pop
jno
xchg
ja
test
pop
inc
sub
mov
lock
pop
xchg
sti
sbb
fidivrs
call
fcmovu
neg
mov
and
bound
ret
fwait
jg
test
int3
dec
daa
popf
dec
cmpsb
movsl
test
test
xchg
mov
pop
jg
dec
adc
aas
pop
popf
jbe
clc
ja
sub
sbb
or
fwait
arpl
fs
jo
jg
xchg
loope
mov
xchg
shlb
andl
sub
div
jmp
xchg
dec
in
push
call
repz
adc
xchg
adc
and
stos
pushf
imul
add
cs
out
addr16
mov
aam
ficoms
cmp
insl
sub
jae
jae
into
jns
add
jp
leave
fadds
push
jecxz
fisubl
pop
push
fsts
dec
push
pushf
cmp
cmp
call
push
mov
dec
ret
cmp
addb
lea
test
les
cmp
shlb
push
cltd
sbb
insl
jg
add
dec
xchg
push
pop
push
test
in
cmp
cltd
imul
push
pop
jmp
into
lock
test
cmp
fldcw
jecxz
or
lock
push
jnp
cwtl
add
cmp
sar
int3
arpl
xchg
pop
cltd
xor
int3
cli
adc
lahf
ret
xor
dec
popa
pop
mov
sahf
fs
xor
lahf
das
movsb
ret
les
flds
jno
cmp
outsl
jne
push
sbb
stc
dec
icebp
movsl
or
les
mov
out
movsl
pushf
lret
mov
cltd
sbb
rcl
lret
into
or
inc
add
push
mov
test
bound
nopl
xchg
pop
push
pop
outsl
ffree
repz
into
rclb
xor
lahf
fidivrl
bndstx
outsl
jp
fs
jns
ret
pop
inc
pushf
jb
sub
daa
or
std
call
in
stc
and
mov
fiadds
push
cmp
or
fstps
pop
or
mov
xchg
push
enter
fisttps
test
dec
ja
push
mov
adc
push
bound
xor
out
xlat
push
xlat
out
setge
arpl
adc
icebp
loope
inc
in
inc
les
jge
insb
sub
fisubrl
mov
mov
ljmp
arpl
sub
inc
push
rorl
push
xchg
dec
cmc
pop
leave
fdivrp
outsl
lcall
ja
addr16
xor
mov
mov
pop
les
call
jp
fcmove
ljmp
sbb
clc
inc
lds
in
dec
jnp
push
out
sbb
movsl
sbb
stc
das
dec
push
ss
adc
jge
sahf
inc
xchg
jg
addr16
mov
jg
mov
and
lods
popa
shl
xchg
sbb
lea
loope
in
and
movsb
xlat
test
pop
xchg
es
aas
js
icebp
test
aas
dec
pop
pop
push
leave
pop
es
cli
xor
mov
gs
out
lret
push
iret
aad
adc
push
cmp
jge
jbe
cwtl
xchg
daa
cmp
cmpsb
jnp
scas
aam
or
cmpsb
je
mov
pop
jmp
scas
pop
jae
movsl
imull
mov
lock
push
sub
bound
push
jmp
and
adc
pop
subb
dec
cld
mov
sbb
dec
jl,pt
sub
mov
xchg
inc
jbe
or
enter
push
out
xor
mov
je
mov
jne
inc
arpl
mov
add
out
dec
push
jae
fwait
inc
pop
xchg
fwait
dec
pusha
and
push
mov
jge
lds
lods
and
cmp
stos
mov
mov
inc
push
or
pop
ds
and
sbb
or
fisttpll
sti
mov
ficomps
xchg
jno
pop
mov
and
shrl
dec
scas
xchg
pop
sub
test
jp
add
push
sahf
ffree
fbld
cmpsl
push
push
cmp
dec
mov
lods
push
sub
aam
pop
insl
push
pop
sbb
lock
js
aam
cmp
xorb
sbb
test
shrl
fbld
add
mov
and
sbb
mov
xchg
mov
and
push
mov
jno
xchg
sbb
imul
inc
ret
pop
adcl
adc
enter
and
xchg
mull
sbb
xor
ss
pushf
lret
stos
cltd
inc
aas
lock
mov
pop
inc
mov
insb
push
add
stos
adc
imul
dec
xor
mov
mov
addl
xchg
cwtl
xchg
adc
ffree
jp
call
mov
mov
lahf
mov
dec
loopne
das
movsb
dec
fsubr
inc
push
xchg
mov
mov
cmc
ljmp
int
aas
pop
int3
jae
dec
pop
leave
cmp
add
dec
stos
int3
add
add
dec
mov
out
clc
add
and
loop
add
sub
jb
imul
mov
add
movsl
ret
les
inc
fdivrs
pop
dec
dec
sub
xor
pop
mov
jno
mov
rol
pop
dec
mov
mov
das
cmc
dec
sbb
push
pop
rcrl
ljmp
popl
cli
lods
sbb
nop
sub
push
pop
xchg
movsl
test
inc
in
sbb
outsb
inc
lcall
dec
orl
addl
test
mov
sub
pop
sub
cli
or
test
fcomip
cmp
out
out
cwtl
je
cmp
cwtl
mov
jb
orl
inc
xchg
and
jne
mov
cmp
pop
sbb
mov
add
jmp
cmp
mov
and
xor
cmp
add
add
sbb
test
cmp
movsl
fisubrs
sarl
inc
jbe
xchg
xor
and
hlt
lea
pop
lds
xchg
testl
jo
movsb
adc
xor
push
xchg
unpckhps
pop
sbb
lret
pop
dec
sub
fwait
das
rcrl
pop
pop
jno
sbb
push
lea
into
jge
pop
dec
retw
sbb
out
pop
ret
cltd
add
push
int
test
adc
cmpsl
push
mov
cmp
mov
mov
push
cmp
sbb
aad
dec
xor
dec
lock
pusha
testl
insb
sub
int3
outsb
movsl
dec
and
xchg
jae
movsl
dec
mov
rclb
aas
mov
inc
fwait
sbb
cmp
imulb
test
lock
pusha
xchg
lret
push
data16
int
ret
stos
inc
mov
imul
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
mov
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
mov
sbb
sub
cmp
lret
sub
cmp
dec
mov
push
dec
cltd
pop
test
or
sbb
jns
test
jo
ljmp
xchg
aad
lds
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jg
outsl
js
dec
dec
pop
repnz
jno
add
repnz
into
fdivrs
cwtl
cwtl
jg
outsl
js
dec
dec
pop
aas
sub
cmp
or
jge
call
iret
fdivrs
scas
mov
jg
outsl
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
mov
out
shl
in
loope
and
or
and
adc
negl
push
xchg
push
xchg
sti
and
int
ja
pop
aaa
push
mov
sarb
mov
xor
add
push
and
xor
inc
mov
add
das
js
mov
mov
pop
notb
mov
daa
out
push
rolb
in
insl
xor
sub
cmp
adc
pop
and
movsl
pop
inc
mov
mov
xchg
mov
dec
sbb
pop
mov
fsubr
sti
push
test
loopne
js
xor
push
std
fnsave
setno
mov
and
fimull
outsl
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
add
or
sbb
outsl
pop
dec
jnp
or
loope
fwait
mov
mov
cli
leave
std
sbb
adc
add
cmp
imul
pop
pop
ss
mov
in
cli
int3
sbb
outsl
sub
sub
das
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
push
ret
lahf
rcr
icebp
scas
sti
add
inc
inc
sti
mov
cmp
js
sbb
roll
mov
cld
xor
and
cmpsb
sti
cmp
jmp
push
xor
lret
xlat
adc
inc
shlb
lock
mov
mov
fsts
in
aam
push
jecxz
faddl
out
test
push
imul
cmp
insl
cltd
data16
fisttps
cmp
dec
push
adc
cmpsb
push
xchg
or
push
add
sub
or
shr
sub
mov
mov
lret
sarl
or
cmp
inc
aad
aaa
mov
imul
icebp
sahf
das
aas
adc
ret
and
xchg
mov
ja
lods
pop
lds
in
test
mov
jmp
dec
in
lods
into
daa
pop
fchs
xchg
lret
adc
inc
cmp
pushf
ret
adcb
out
dec
jnp
nop
sahf
push
and
arpl
adc
fmulp
aaa
cmp
lock
adcl
cltd
jmp
jmp
pop
mov
and
daa
jb
or
scas
mov
mov
imul
mov
jbe
mov
pop
xchg
add
scas
sub
jp
daa
aaa
psubusb
sahf
aas
mov
push
ss
scas
outsl
sub
jmp
xchg
das
push
insl
fidivs
pop
pushf
enter
ss
out
ja
int3
ret
mov
xor
and
fcmovu
mov
jmp
mov
cmp
in
and
sahf
pop
sub
ss
cwtl
push
lods
xchg
push
mov
loope
mov
mov
movsl
push
dec
icebp
mov
lahf
call
fisubrl
packssdw
push
inc
mov
ja
push
icebp
cmp
dec
outsl
cs
int
inc
push
fstpl
pop
pop
fcoms
ficompl
sub
push
sub
add
cmpsl
imul
fldcw
cmpsl
cld
test
fimull
adc
jbe
stc
mov
inc
ja
flds
mov
jno
pop
add
leave
jge
loop
dec
xor
aaa
cmpsl
out
inc
adcb
jne
xchg
cmp
jge
scas
sti
jl
fisubl
imul
jae
mov
adcl
aas
and
pop
pushf
dec
scas
push
enter
arpl
mov
xlat
loop
loopne
add
ret
jae
daa
inc
and
xchg
cmp
cmp
or
and
and
dec
or
sub
dec
scas
loopne
jge
jmp
adc
pop
and
mov
inc
jecxz
sbb
push
jae
cld
mov
icebp
jge
jno
testl
cli
pop
loop
sbb
mov
dec
sarl
xchg
mov
and
addb
and
jecxz
jecxz
mov
mov
inc
xchg
jno
pop
sub
stos
getsec
js
in
xchg
int
sbb
mov
mov
dec
mov
test
inc
jle
clc
addl
arpl
xor
pop
icebp
jno
pop
cltd
jmp
cmpsl
add
lret
inc
in
movsb
addl
cwtl
jne
push
out
nop
pop
push
cmp
xchg
aaa
and
bound
shrl
or
inc
fwait
dec
add
jno
std
mov
xchg
in
and
push
ljmp
mov
out
inc
xchg
cmc
outsb
int3
jp
mov
jnp
clc
in
jl
dec
pop
dec
in
jmp
add
pop
jo
shr
cmc
dec
or
pushf
out
sbb
scas
je
cmp
xor
out
sub
xor
xchg
inc
mov
cmp
mov
cli
ljmp
dec
inc
mov
test
out
rcll
icebp
cmp
das
addr16
out
je
js
lret
inc
faddl
movsb
push
sub
cs
pop
inc
movsb
flds
jecxz
imul
mov
jbe
xchg
lds
push
push
cmp
ror
sbb
test
jb
sub
stos
loopne
pop
jg
add
jns
rcl
sub
and
push
xchg
jmp
aad
jo
lods
add
xchg
pop
arpl
push
jns
xchg
push
mov
mov
ja
aas
push
fldt
test
outsb
xchg
cmp
xlat
lea
sub
dec
xchg
pop
mov
ljmp
popa
and
or
mov
subb
push
mov
or
jge
pop
mov
pop
add
stc
decb
mov
fcmovne
daa
dec
test
cltd
push
or
mov
mov
insb
adc
in
mov
jb,pn
adc
mov
xchg
lret
cld
sub
sbb
sbb
hlt
and
and
dec
aam
or
mov
loop
and
cmp
adc
mov
insl
pusha
pusha
iret
movsl
das
out
inc
fstl
lret
jmp
pop
cmc
sti
push
rorb
dec
or
xchg
cmp
lcall
lods
popf
into
or
das
std
sti
sbb
pop
mov
mov
sub
or
xlat
dec
inc
test
xor
fisubl
mov
dec
mov
popa
and
leave
dec
fidivrs
mov
inc
into
inc
add
dec
fsubl
sub
stos
sub
adc
iret
fisubl
sbb
and
addl
out
addl
inc
jns
inc
popf
stc
mov
or
incb
sbbb
lret
ror
sub
addr16
sbb
in
or
mov
outsb
scas
out
je
jae
cmpb
iret
int
insl
dec
movsl
cld
push
jb
insl
mov
mov
xchg
add
int3
mov
les
mov
leave
mov
fcom
mov
shll
outsl
mov
mov
pop
mov
adc
bound
mov
push
mov
add
stos
push
inc
and
inc
mov
cmc
mov
jbe
packssdw
cmp
sbb
pop
lcall
inc
cmp
stc
fistl
imul
add
mov
mov
add
jo
xchg
pop
mov
sbb
inc
inc
add
xor
in
in
addr16
aas
rorl
std
mov
stc
cmp
dec
jp
jecxz
out
jnp
mov
adc
cmpl
dec
mov
jle
test
aas
fnstsw
jmp
cs
ss
inc
sbb
jmp
pop
jb
xor
les
mov
pop
add
es
cmp
sbb
xor
sub
cmp
lods
cmpsb
mov
leave
mov
push
inc
xor
imul
lods
lret
lcall
xchg
mov
clc
ljmp
cmp
push
jp
in
mov
mov
imul
stos
rorl
pop
test
mov
xchg
gs
test
jae
xor
fimull
adcb
and
lods
jmp
in
inc
add
pop
dec
pusha
fnstenv
cwtl
movsl
adc
pop
dec
xchg
in
out
fsubrl
ss
cwtl
pop
sub
das
xchg
int3
push
mov
pop
shll
push
sbb
add
fs
int
aad
je
mov
int
aad
mov
loope
ficoms
dec
shrl
add
or
add
aas
inc
push
and
cmp
jo
jb
mov
repz
das
push
xchg
in
xchg
mov
push
outsl
xor
jmp
sub
int
jns
or
mov
dec
jo
frstor
leave
push
jmp
je
dec
push
mov
xor
add
fildl
int3
dec
add
les
jl
je
jge
shlb
mov
cld
mov
test
pop
cmc
inc
movsl
addr16
lods
repnz
stos
inc
jp
jo
push
pop
insl
add
mov
int3
jmp
shrl
das
mov
mov
cli
nop
test
push
pop
call
xor
jge
popa
add
xchg
iret
in
mov
add
and
ljmp
out
push
shlb
inc
rolb
sbb
and
add
cwtl
lret
fbld
xlat
adc
movsl
shl
cmp
shl
sub
mov
rcll
jb
mov
mov
sub
mov
pop
jbe
add
int3
sar
pushf
pop
clc
push
je
sahf
test
nop
jle
aas
fwait
imul
aas
and
call
stos
loope
xor
push
pop
jne
xchg
pop
call
add
cmp
pop
sbb
je
ret
dec
fldenv
scas
xchg
in
iret
mov
aad
xchg
les
push
ret
repz
outsb
sbb
in
mov
push
mov
or
into
mov
pop
fadds
lea
inc
cmpsb
xor
les
ja
or
mov
lret
fdivl
cmpb
imul
mov
ljmp
repz
and
sbb
mov
mov
adc
scas
popw
inc
loopne
lods
push
sarb
das
mov
popa
mov
hlt
mov
cmp
int3
imul
popf
and
mov
pop
popf
mov
std
mov
jno
push
sub
pop
fs
jnp
ret
sbb
ja
xchg
mov
push
in
fisttpl
xchg
mov
mov
add
popf
outsl
into
mov
add
leave
mov
pop
movsb
insb
shll
repz
std
push
mov
mov
cs
dec
pop
xor
push
add
fstpt
aaa
stos
dec
mov
shlb
les
push
adc
push
sub
mov
sub
jge
adc
mov
xor
jns
jge
mov
sub
xchg
or
int
or
dec
mov
or
pop
pop
out
popl
aam
push
inc
loope
scas
enter
push
movsl
pop
xor
hlt
jg
orb
dec
mov
push
add
sbb
mov
out
repnz
jno
roll
sub
cmpsl
into
add
adc
lods
push
js
pop
stc
jmp
push
sbb
lods
pop
pop
or
scas
xor
xchg
je
adc
cmp
sbbl
std
adc
es
leave
fldl
ss
cmp
daa
jmp
mov
fwait
jmp
cmc
inc
xchg
fcomps
idivb
push
sub
sbb
xchg
imul
scas
rclb
arpl
xchg
mov
dec
mov
ja
pop
add
sub
lahf
or
pushf
loop
jp
setne
and
inc
shrb
pop
xlat
loope
notl
inc
push
push
push
outsb
pop
push
mov
cld
aam
add
add
cmp
bound
addr16
pop
sbb
pop
mov
lcall
pop
sub
or
sbb
enter
hlt
test
xor
push
dec
sub
push
out
mov
push
int3
or
xor
cmp
mov
das
adc
popa
decl
mulb
cmpb
test
inc
arpl
adcl
and
cmpsl
push
je
ss
mov
fisubs
or
sub
aad
sahf
push
paddb
mov
add
mov
test
clc
aad
push
icebp
pop
or
cwtl
inc
stos
xor
fldcw
sarl
inc
jl
bound
in
sbb
incl
inc
outsb
jb
mov
sub
xlat
jno
jae
push
fcompl
lods
or
sub
rep
cmp
clc
je
push
inc
fistps
jnp
lahf
push
outsl
and
push
inc
inc
adc
pop
aaa
shlb
icebp
fisttpl
lret
sbb
xchg
lods
xchg
jmp
mov
push
xchg
pop
cwtl
cmp
push
lahf
pop
frstor
in
pop
inc
movsl
fcmovnu
xlat
out
cmpsl
mov
xlat
mov
adc
cmp
lret
jmp
cld
mov
cmp
add
jb
hlt
pop
fildl
int3
stc
stc
call
pop
mov
lcall
scas
or
dec
popf
or
dec
jns
loopne
addb
mov
mov
data16
call
jae
dec
js
mov
lds
push
pop
daa
sbb
mov
fimull
mov
js
dec
mov
lcall
lds
js
xor
push
iret
mov
test
ffree
inc
iret
and
les
xchg
inc
push
pop
cmc
cmp
inc
movsb
js
jl
mov
xorl
mov
or
jo
mov
insl
adc
mov
ret
inc
js
cmpb
or
pop
sbb
push
loope
stos
inc
add
pop
mov
fsub
mov
ja
shll
loop
shlb
xor
sbb
outsl
sub
movsb
jecxz
test
ret
adc
push
pushf
push
imul
push
xor
fists
jns
cltd
or
nop
jmp
mov
dec
je
mov
test
mov
test
and
mov
shll
cmp
push
mov
call
or
or
notl
in
adc
ret
mov
repnz
in
loope
add
and
addb
dec
fildl
clc
adc
inc
jge
and
int
cmp
aam
imul
xchg
sahf
xchg
mov
clc
lock
addr16
mov
adc
clc
mov
push
into
and
lods
inc
inc
jo
les
cmp
int3
out
fcoms
jge
jp
leave
addr16
push
repz
cwtl
push
xor
mov
lods
and
movl
incb
daa
cmp
mov
mov
sbb
jge
adc
jb
inc
ret
mov
psrlw
add
dec
insb
addb
push
mov
jge
sub
pop
jle
fs
stc
aaa
stc
cmpsl
inc
fnstcw
mov
icebp
dec
scas
mov
out
pop
mov
fisubrl
dec
add
in
rclb
xchg
and
lock
push
add
in
or
mov
daa
call
int3
sub
jmp
mov
add
mov
mov
adc
jl
pop
or
mov
fstpl
je
adc
repnz
outsl
addr16
push
dec
movsl
outsb
jecxz
push
dec
stos
cli
add
push
pushf
pop
cmpl
ljmp
push
mov
xorb
fdivrs
add
mov
xor
cmpb
push
iret
add
xor
dec
sbb
sub
adc
aas
jnp
sbb
xor
xchg
popa
dec
cltd
xchg
clc
adc
repnz
arpl
loop
xchg
xchg
mov
inc
sti
sbb
ja
icebp
outsb
mov
mov
rcll
sbb
int
jge
xor
lret
lds
pop
lret
stc
sbb
mov
cltd
add
repz
lods
je
es
in
shl
or
jecxz
jp
mov
pop
je
sbb
imul
dec
pop
imul
mov
movsl
loope
rcl
outsb
sti
lahf
mov
sbbb
push
test
ss
dec
mov
lahf
es
lods
inc
lods
pop
repz
enter
jge
xor
es
daa
add
cmp
mov
scas
sbb
shl
xor
mov
mov
mov
or
dec
test
std
ljmp
clc
jge
xchg
les
fwait
mov
std
aaa
lea
and
shll
adc
fwait
dec
jg
xchg
mov
mov
enter
dec
pop
sub
out
mov
aas
addr16
inc
pusha
lret
and
in
repnz
dec
in
stos
or
or
xor
mov
insb
into
dec
pusha
sub
sbb
mov
cwtl
or
in
adc
pop
cmp
push
hlt
outsb
jb
or
aas
lret
mov
mov
iret
jge
std
sbb
in
adc
sbb
je
xchg
xor
mov
cmp
ss
inc
or
add
lret
mov
mov
pop
cmp
dec
daa
push
pop
sar
inc
mov
mov
lahf
insb
test
pop
les
iret
sbb
dec
insl
int
fildl
and
pop
xor
fidivrs
bound
push
mov
mov
dec
mov
lods
mov
xchg
out
push
inc
cld
arpl
shlb
je,pt
mov
or
clc
sahf
mov
mov
cmp
jge
fs
in
jle
faddl
lcall
lcall
xchg
ja
stc
push
push
fwait
jb
icebp
faddl
xor
clc
cmp
shll
push
pop
insl
daa
push
out
jl
or
and
je
aaa
imul
xor
inc
mov
mov
cmp
or
lods
adc
sbb
sub
and
or
stc
sti
dec
stc
mov
jp
push
in
lahf
xor
add
mov
jbe
xlat
or
pusha
jg
stos
notb
mov
sub
push
stos
cli
stos
mov
adc
lock
push
adc
movsb
xchg
int3
lcall
shlb
out
jo
jae
into
fdivrl
fcoms
jmp
push
xchg
stos
and
adc
push
pop
xchg
fwait
imul
mov
stc
sbb
push
pop
dec
dec
lcall
jb
mov
adc
or
int
mov
lock
lahf
les
cmpsb
stos
mov
pop
lock
xchg
xchg
xchg
cmp
adc
inc
out
add
stos
mov
cmp
insl
pop
dec
pop
sbb
jno
and
aaa
and
icebp
out
je
or
xor
data16
jne
add
out
orb
dec
fidivrs
mov
xchg
insb
bound
and
enter
xchg
aaa
data16
xchg
imul
ja
jne
add
add
mov
pop
ror
pusha
ficompl
std
adc
pop
jmp
loop
jecxz
dec
jns
dec
dec
out
adc
sbb
pop
pop
inc
mov
cli
fildll
pop
or
ljmp
stos
scas
pop
sbb
push
out
jmp
add
xor
xchg
inc
push
nop
jl
repz
out
test
aas
mov
faddl
mov
jno
adc
mov
jne
mov
xlat
insb
mov
punpckhdq
push
cli
and
lcall
loop
sub
popf
jno
mov
sbb
divl
add
inc
lock
nop
sub
jmp
mov
gs
shl
out
xchg
addl
fdivl
enter
les
or
mov
push
cmp
aaa
sub
mov
and
jmp
mov
dec
mov
lcall
jecxz
jl
add
ret
shll
xchg
and
scas
jo
mov
add
adc
lcall
xor
outsl
and
cmpsb
in
sbb
mov
or
and
push
mov
adc
or
pusha
imul
cmp
push
int3
daa
add
stos
mov
lods
xchg
inc
lcall
xor
mov
pusha
pop
cmp
pop
pop
in
lahf
hlt
sti
push
jl
icebp
into
sbb
addr16
lret
push
jg
rclb
jns
sti
ds
push
ss
jl
pushl
mov
daa
dec
in
mov
mov
pop
jne
sbb
aad
cmp
jne
aaa
ss
push
sbb
dec
ret
mov
pop
mov
cmc
xor
xchg
scas
or
mov
or
rorl
dec
sarb
sbb
or
xor
out
pusha
hlt
popf
inc
push
add
scas
xchg
cmpsb
fs
into
sub
mov
adc
jnp
cmp
sub
pop
or
test
mov
mov
add
or
notl
cmp
sub
lds
mov
lcall
int
insl
fsubr
in
out
add
es
mov
push
loop
dec
lcall
mov
add
gs
enter
outsl
inc
mov
jns
xor
add
cwtl
dec
sub
xor
rcl
push
cmpsl
or
dec
jecxz
push
fwait
push
movaps
push
pop
fistpl
adc
sahf
add
push
pop
cmp
cmp
dec
lds
fnstenv
xchg
mov
ret
imul
jge
push
es
out
mov
or
jge
or
bound
xchg
push
pop
outsb
orl
xchg
aaa
enter
mov
pushf
test
aam
sbb
mov
sub
ja
dec
dec
fstp
mov
pop
pop
adc
and
cld
mov
inc
xor
fmul
dec
adc
cltd
rclb
add
cmpsb
stos
ljmp
push
in
popa
and
adc
add
add
cs
cmp
gs
gs
faddl
sub
into
cmpsl
xor
add
notl
xadd
pop
fildll
mov
pop
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
mov
or
clc
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
fdivr
call
iret
scas
iret
and
inc
out
ja
addr16
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
adc
add
xor
and
loopne
sub
push
out
imul
aam
dec
in
in
adc
add
xor
and
push
popf
inc
lea
lods
test
dec
mov
stos
insl
aam
hlt
or
or
std
cmp
dec
popf
pop
lea
lods
lea
adc
or
stos
imul
cltd
push
add
pop
inc
dec
mov
mov
sbb
sbb
aad
mov
in
aad
lea
adc
inc
jb
mov
movsl
adc
lods
sub
test
aam
hlt
cmp
clc
sbb
or
xchg
lret
mov
jnp
mov
lods
aam
cmp
hlt
ret
adc
cld
add
stos
pushf
inc
popf
mov
pop
outsb
test
sbbl
dec
les
ret
in
inc
inc
mov
mov
popf
pop
jb
inc
xchg
sti
xchg
sbb
mov
push
pop
sub
les
cmp
jge
pop
in
jae
fistpl
xchg
sub
or
hlt
insl
xchg
loop
stc
hlt
sub
sub
xor
and
inc
popf
push
lea
lods
lea
dec
lods
jge
insl
int3
sbb
in
js
popa
push
push
mov
and
cmp
fstl
rolb
jo
je
mov
xchg
push
mov
je
aaa
lods
xlat
sbb
and
scas
bound
lea
pop
mov
icebp
inc
lea
lods
xchg
pop
test
jge
insl
aam
les
adc
add
xor
and
push
popf
inc
lea
lods
xchg
pop
test
jge
insl
aam
les
adc
sub
mov
push
cmp
pop
xor
rcrl
pop
add
gs
mov
std
cmp
xor
mov
mov
adc
out
fdivrs
ja
dec
jae
push
mov
mov
and
adc
std
popf
iret
cmp
loop
xchg
adcb
push
dec
or
jle
or
in
cld
repnz
scas
cmp
pop
mov
push
incb
fs
mov
cltd
popa
sbb
jns
test
gs
push
divb
mov
adc
xchg
dec
xor
sahf
add
fnsave
enter
out
shll
mov
lahf
sahf
orb
addr16
adc
loope
add
mov
xchg
lds
cltd
rdpmc
sub
mov
je
jg
mov
out
sub
xchg
aaa
xor
push
jmp
insl
insb
imul
push
xor
loope
in
sub
dec
push
or
repz
mov
sub
fs
call
imul
push
add
test
or
xor
xchg
pop
negb
pop
lods
filds
out
jg
dec
and
mov
pop
push
push
push
lods
pop
jae
xor
test
pusha
out
iret
xchg
repnz
mov
cmpsb
xor
test
out
lods
inc
decl
push
push
fsubr
cmp
stc
out
divb
icebp
adc
adc
adc
mov
and
std
icebp
add
repnz
sub
into
adc
sbbl
sub
or
push
shll
sbb
dec
js
in
add
mov
outsl
cli
sahf
ds
push
jg
dec
scas
data16
and
lods
into
jbe
es
ficomps
xor
or
adc
insl
fadds
xor
imul
bound
lahf
jnp
fstl
inc
jne
adc
clc
lods
les
mov
pop
jne
das
inc
sbb
test
mov
popf
orl
add
loope
imul
sub
xchg
and
pop
mov
sbb
dec
dec
pop
pop
orl
push
into
jmp
movsl
cmc
xor
mov
fcmovnu
push
pop
imul
lea
aad
push
test
ljmp
cli
out
mov
icebp
cmp
mov
pushf
les
adc
or
sub
pop
jo
and
fdiv
les
sti
mov
inc
and
loop
fs
add
mov
das
push
rcr
lods
pop
pop
jno
mov
sub
jno
mov
les
addb
or
or
push
or
repnz
int3
jle
cld
std
ds
sub
ret
push
cmp
mov
mov
leave
cwtl
dec
xchg
pop
iret
scas
inc
roll
dec
jns
ficompl
movsb
movsl
mov
pop
repz
sbb
adc
xor
aad
stos
mov
jecxz
lock
add
nop
push
pop
scas
iret
neg
cld
inc
insb
outsb
pushf
imul
lcall
aad
add
sbbb
fwait
out
push
cs
add
sbb
fimull
jg
sbb
push
mov
dec
sti
add
cmc
cmp
push
jecxz
clc
enter
mov
repz
mov
imul
sub
aad
mov
pop
or
gs
or
inc
add
add
stos
rcr
mov
mov
aas
mov
push
mov
lods
or
insl
sub
lret
std
lods
jge
out
xchg
je
sbb
js
jmp
push
add
xor
fsubrl
pop
cmp
adc
xchg
pop
and
std
mov
jns
cmp
loope
mov
mov
dec
sar
mov
jg
dec
mov
jne
mov
stc
fdivs
cltd
rcrb
pop
cmpb
cmp
iret
rolb
xchg
push
arpl
xor
gs
xchg
fdivs
dec
ds
pop
add
push
xchg
scas
loope
out
rcl
ror
adc
leave
jb
stc
cmp
xor
jns
push
sub
rolb
cmp
gs
loope
pop
dec
ds
and
xor
inc
xchg
mov
dec
mov
sub
cltd
xor
lahf
dec
rclb
sbbb
push
or
pop
xchg
movsb
push
bound
loop
xchg
addl
and
test
pop
mov
aas
and
loop
pop
pop
mov
test
inc
jp
inc
push
jns
mov
adc
icebp
dec
lock
dec
imul
imul
je
mov
insb
cs
jnp
lds
pop
movsb
inc
cmp
aam
pop
push
imul
xor
sub
lock
imul
sti
pop
pop
sbb
and
movhps
mov
icebp
loope
inc
jecxz
stos
leave
xor
enter
dec
cmp
inc
inc
mov
ja
or
sti
rclb
shrb
jo
cmp
fsubrs
inc
pushf
dec
repnz
addb
inc
jmp
pusha
pop
das
mov
and
xchg
cmp
rclb
push
sub
scas
insb
dec
adc
popa
lcall
nop
push
sbb
test
cs
add
jp
sbb
jge
push
scas
mov
and
xchg
cld
or
nop
xchg
test
or
sub
scas
mov
dec
shll
or
sub
adc
dec
mov
xchg
ficompl
test
dec
adc
in
dec
adc
xchg
sbb
ja
push
cmpsl
lock
push
inc
gs
sti
pop
arpl
sahf
aas
test
in
push
rcrl
movsl
xchg
sbb
lret
je
insb
out
xchg
lods
dec
insb
mov
dec
dec
in
lods
jns
push
repz
out
loopne
and
pop
xor
jl
cli
ja
int
mov
outsl
dec
imulb
sbb
loop
dec
sub
and
lret
jo
dec
dec
lock
into
outsl
lret
mov
in
inc
mov
leave
into
pushf
jmp
test
scas
add
repnz
shlb
add
or
mov
fcomi
inc
push
sarl
test
stos
inc
adc
out
sbb
sar
mov
push
lock
pop
addl
ret
xchg
or
lods
mov
jbe
xchg
mov
loope
imul
jmp
insl
pop
sbb
add
xor
fwait
fcoml
das
test
out
xchg
push
and
cld
inc
sbb
div
jg
cmp
stc
xchg
cld
cltd
or
jbe
push
imul
leave
pop
sub
add
adc
push
mul
call
and
mov
popa
decb
insb
andb
xchg
jnp
rclb
roll
mov
jmp
or
mov
xchg
enter
rcl
leave
test
jmp
mov
roll
push
addr16
fbstp
xor
add
adcl
fidivs
arpl
adc
fs
mov
pop
adc
dec
xchg
scas
lods
push
mov
mov
sarb
jb
call
sahf
pop
mov
sahf
fistpll
mov
cs
mov
xor
cli
lock
sbb
xor
cld
mov
nop
popl
pop
pop
js
mov
sub
cld
mov
fcomps
ss
pop
lods
sbb
push
cmpsl
add
mov
test
jle
jge
push
sub
push
jge
mov
push
pop
sbb
sbb
mov
mov
mov
or
lcall
mov
hlt
add
mov
mov
test
xchg
push
dec
les
xor
inc
lods
dec
lret
ret
and
sub
push
js
fadds
pop
dec
pop
xor
inc
subb
fisubrs
or
shr
subl
cmp
sbb
cmp
mov
pop
xchg
stos
mov
cmp
jo
or
aaa
pusha
pop
dec
test
ja
test
xor
fwait
stc
movsl
xor
or
pusha
test
aam
cli
nop
and
cmp
scas
sahf
mov
jns,pt
sub
out
push
xchg
cmp
dec
cltd
jb
xor
xor
imul
test
or
repz
js
dec
pushf
lahf
out
adc
fidivrs
sub
lods
push
data16
or
pop
and
out
js
fisubs
dec
ss
cli
mov
xor
jg
dec
aad
imul
or
inc
sub
inc
push
iret
das
out
cmp
xor
shl
insl
clc
mov
ja
ljmp
mov
and
movsb
data16
or
and
popa
pop
shr
fsub
pushf
out
sti
jl
mov
xor
push
icebp
hlt
sbb
add
cmp
pop
sub
in
imul
xchg
lret
mov
or
pop
xchg
mov
adc
dec
in
lcall
jns
adc
inc
sti
lret
cmc
xor
ret
pusha
add
arpl
pop
sar
sbb
mov
jecxz
pop
sbb
sbb
and
xor
out
lea
dec
mov
and
fbstp
out
aas
fwait
shll
push
cs
insb
addr16
outsl
mov
je
inc
enter
fcmovnu
lea
jbe
and
mov
gs
sbb
outsl
inc
sub
lods
inc
and
sbb
loop
pop
push
mov
sub
test
xchg
mov
jmp
add
aaa
mov
scas
and
push
jnp
dec
dec
mov
dec
rcrl
jno
cmp
jmp
mov
xchg
pop
lods
mov
popa
fs
xchg
lea
sub
cmp
add
add
and
and
daa
lods
out
aas
pop
adc
sub
mov
push
cld
cmpsb
jle
ds
hlt
mov
lret
add
pop
add
stos
mov
div
cmp
fisttpll
jae
sbb
cltd
and
push
sti
xchg
stos
shrl
out
xor
in
adc
pop
out
jne
lds
mov
pop
addr16
xor
add
mov
xorl
xor
lret
or
xor
lds
adc
int3
pop
xor
adc
lea
lds
adc
dec
push
out
pop
push
addr16
xchg
int3
and
xchg
test
jmp
inc
leave
or
pushf
sahf
call
dec
mov
adc
cs
mov
maxps
add
jl
push
push
sub
jae
pop
sahf
ja
in
jp
jecxz
inc
adc
fisubs
xchg
outsb
push
inc
movsb
lcall
outsb
push
cmc
adc
shll
add
outsb
sbb
repz
xchg
scas
push
cmp
inc
aas
pop
popf
fadds
xor
xor
mov
mov
in
and
sub
sbb
fcomp
mov
add
push
fucom
mov
or
loop
pop
sub
scas
add
roll
sarb
and
mov
aad
jl
movsb
adc
leave
sub
and
sahf
pushf
inc
insl
push
or
pop
push
mov
lea
push
sahf
cmp
repnz
movsl
mov
scas
out
test
jp
sub
add
dec
and
jge
inc
push
int3
adc
inc
xor
in
imul
test
inc
test
and
push
or
or
das
loop
jo
cmpsb
add
xchg
mov
clc
pshufw
jbe
mov
out
fildl
push
lret
mov
sbbl
mov
outsl
jne
and
in
cltd
xchg
jge
in
test
movsb
inc
lahf
into
inc
sahf
lea
mov
out
popa
inc
insl
sbb
out
jae
ret
jno
mov
dec
jo
and
fldcw
xor
sub
sub
push
push
fstl
pop
sarb
mov
pslld
std
loope
stos
pop
fnstsw
adc
testb
icebp
into
xor
add
xchg
mov
xchg
lods
enter
pop
aaa
int3
sbb
add
or
jnp
mov
and
dec
das
in
lcall
sbb
push
out
mov
lods
fwait
pop
daa
sbb
xor
ja
pop
sbb
lock
test
jmp
sarb
ret
loop
jp
pop
inc
je
pop
add
add
out
push
xor
clc
and
xlat
fcoms
rorb
ja
imul
and
js
sbb
movsl
cwtl
add
sbb
stos
adc
int
push
mov
test
fsubrl
out
mov
inc
xor
xor
xor
adc
mov
push
repz
xchg
lds
or
sub
inc
sbb
adc
mov
stos
scas
out
mov
lret
dec
call
rcrl
add
je
dec
aas
push
scas
inc
sbb
movsl
or
mov
je
insl
test
mov
idivb
pop
and
aas
mov
jne
adc
dec
lds
or
jg
xor
mov
and
cltd
repz
fiaddl
outsl
mov
sub
sbb
xchg
push
xchg
mov
dec
sub
dec
pop
enter
sbb
inc
cmpsb
aas
mov
outsb
sti
movsb
mov
lods
mov
push
fildll
cvtps2pd
fwait
sub
mov
sahf
mov
xor
aad
or
lock
sahf
loopne
xor
mov
bnd
push
outsl
std
inc
jl,pn
pusha
xor
jge
mov
rcl
fistl
dec
and
push
js
jle
int3
test
lds
dec
or
jmp
jg
dec
inc
pop
mov
add
or
scas
push
dec
mov
int3
xor
sahf
mov
pop
iret
pop
fildll
xchg
and
cwtl
in
aaa
lcall
dec
loopne
inc
mov
lods
add
jns
fnstsw
xchg
mov
pop
and
call
xchg
imul
sub
mov
jne
cltd
mov
or
rol
xor
adc
fimuls
loope
movsb
dec
pop
mov
es
mov
add
jnp
cmp
insb
mov
popa
ret
loop
pop
lods
lea
scas
call
adc
pop
ds
xlat
pop
push
sbb
push
pop
push
mov
xor
xchg
or
cmpsb
mov
shrl
mov
mov
push
adc
cmp
mov
inc
loop
or
adc
stos
inc
fs
ror
sbb
inc
pop
pop
jle
and
sub
xor
add
repnz
inc
les
and
xor
or
sahf
mov
pop
mov
clc
pop
outsl
mov
pushl
lods
fadds
xchg
inc
inc
ds
shll
cmp
xchg
mov
jo
sbb
push
aam
lahf
jl
das
fsubrp
mov
imul
push
jle
mov
ret
lcall
or
fisubs
xchg
adc
sarb
xchg
xchg
ret
repnz
not
cmpl
adc
jb,pt
push
sbb
xchg
dec
shl
xor
outsb
aad
sub
mov
incl
scas
sahf
jmp
adc
fisttps
orl
jne
or
ljmp
mov
cmpsb
mov
outsl
jbe
mov
mov
outsb
es
mov
pushf
out
leave
cmp
xor
push
stos
cmpsl
sbb
add
test
pop
xor
xlat
repz
pushf
push
test
movsl
scas
movb
lock
imul
cmp
push
jp
test
inc
push
push
bound
enter
lret
shlb
nop
std
outsl
into
sub
cs
stc
inc
mov
mov
subb
movsl
lmsw
shrl
dec
enter
pop
and
ss
adc
mov
add
movsl
xchg
jge
pop
lret
call
test
or
fisttpl
mov
xchg
mov
inc
test
in
xor
inc
loope
flds
insb
mov
ret
imul
insl
push
enter
mov
inc
addr16
repnz
lret
xchg
outsl
sub
sub
adc
repz
jecxz
and
ficomps
and
outsl
rcrl
mov
je
fcompl
dec
pop
in
rorb
inc
pusha
xor
mov
jge
test
mov
data16
xor
int3
fldenv
loopne
stc
pop
sbb
or
int
iret
mov
push
lret
lret
pop
pop
testl
dec
inc
inc
inc
and
add
cmp
lods
sbbb
push
push
or
dec
clc
xor
mov
xor
in
scas
sub
pusha
mov
outsl
push
out
rolb
in
sbb
or
mov
dec
dec
fs
mov
add
jno
lods
pop
mov
xchg
or
nop
mov
xor
adc
mov
mov
jnp
mov
dec
mov
sbb
lret
arpl
popf
xlat
hlt
fisubl
inc
in
pop
inc
adc
imul
inc
ljmp
mov
mov
call
mov
gs
out
lods
xor
push
push
insl
out
loop
add
adc
je
xor
cwtl
sbb
je
jno
rcl
push
dec
jnp
pop
pushf
fisubs
test
mov
jns
mov
mov
dec
in
icebp
xchg
pop
ficomps
fldl
pop
inc
hlt
push
mov
fs
aam
test
sbb
stos
jne
xchg
push
out
jmp
aas
and
adc
or
and
mov
mov
xchg
xchg
push
xchg
into
shl
mov
filds
fidivrl
aam
call
add
dec
jle
jbe
fistps
in
and
cwtl
dec
xor
mov
mov
int
outsb
jle
push
push
lret
jo
test
add
sbb
and
push
cli
add
or
bswap
sub
and
leave
jge
cs
jecxz
mov
dec
fnstenv
das
mov
outsb
pop
pushf
sahf
pop
cld
pop
cs
jo
dec
adc
cli
stos
cmp
daa
sbb
aam
leave
nop
cltd
outsb
dec
sbb
mov
test
sti
dec
dec
mov
dec
cld
pop
sub
dec
adc
outsb
call
shrl
mov
cmp
insb
in
pop
das
push
sbb
nop
mov
inc
pop
sub
stc
sub
jnp
push
adc
cmp
pusha
insb
add
int
sub
test
fisubl
stos
push
mov
jle
lahf
andb
push
add
sti
xchg
ja
push
lea
push
adc
and
inc
and
inc
in
int
jmp
inc
lods
push
pop
cmpsb
jb
pop
mov
fcompl
jle
and
imul
cmpsl
dec
pop
lahf
jno
mov
mov
dec
xor
lea
pop
mov
sub
inc
and
xlat
add
lret
nop
lds
repz
inc
xor
mov
insl
xchg
in
fimuls
std
cmp
xchg
xorl
and
push
sbb
fcmove
push
or
sahf
lea
aam
mov
repz
js
pop
call
shrb
daa
cmpsb
pop
sbb
or
scas
pop
sbb
stc
lods
and
addb
mov
les
mov
lcall
jg
inc
mov
test
xchg
in
shl
xchg
arpl
inc
and
cmpsb
add
in
mov
call
jae
outsb
jae
sbb
lret
cmpsb
xchg
les
or
mov
inc
mov
sub
scas
xchg
imul
mov
js
jo
xchg
ljmp
xchg
ret
imul
adc
in
adc
mov
mov
insl
imulb
nop
push
add
push
mov
aad
stos
loope
jle
jo
sub
cmpsb
inc
sarb
adc
pusha
in
mov
xchg
mov
and
fdivrs
push
cmpsl
xor
insl
inc
mov
mov
push
push
xor
cmpsl
adc
mov
jg
ds
loop
enter
pop
imul
imul
dec
idivb
test
xor
or
jns
add
addb
inc
ret
xchg
sbb
dec
dec
frstpm(287
popf
adc
mov
out
nop
pop
mov
into
imul
sub
and
rol
push
lret
push
fs
add
insb
and
int3
sub
ja
rorb
and
dec
lahf
jns
mov
jp
xchg
mov
adc
mov
lds
sub
movsb
mov
jl
push
imul
lock
xor
cmp
mov
xor
ss
jno
jmp
and
or
sbb
daa
mov
loopne
push
ja
cmpsl
inc
insb
xlat
jg
add
dec
clc
adc
div
push
movsb
mov
mov
sbb
sbbl
lret
scas
lea
xchg
jmp
out
rcll
mov
mov
mov
imull
inc
push
popa
jae
pop
out
out
rcll
addr16
lods
mov
cmp
hlt
pop
inc
cld
sub
add
jno
mov
adc
xchg
sbb
mov
pop
push
ds
and
push
popf
inc
lea
lods
xchg
pop
test
jge
insl
aam
les
adc
add
xor
and
push
popf
inc
lea
lods
xchg
pop
test
jge
insl
aam
les
adc
add
xor
and
push
popf
inc
lea
lods
xchg
pop
test
movsb
insl
aam
lds
adc
push
int
std
and
push
popf
inc
or
imul
sbb
ret
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
mov
ret
mov
jno
inc
cmp
sub
pop
jno
add
negb
lods
mov
cld
xchg
cwtl
imul
and
xor
dec
add
insb
clc
push
call
scas
mov
adc
outsl
sub
or
or
xchg
pushf
icebp
loop
leave
mov
inc
mov
push
mov
mov
rorl
push
xor
pop
jl
shl
adc
dec
xor
pop
scas
test
mov
pop
cmp
pop
data16
in
jge
loope
popf
icebp
mov
mov
xchg
pop
mov
xchg
mov
fidivrs
stos
mov
loope
and
movsb
imul
sbb
or
mov
xchg
clc
aas
add
movsl
sub
clc
jno
xchg
hlt
sub
push
sti
push
sub
wrmsr
dec
mov
xchg
add
mov
cmp
mov
mov
push
xor
pop
and
and
cmpsb
mov
stos
int3
andl
imul
cmp
mov
jl
add
pushl
mov
adc
dec
aas
inc
dec
xor
fs
icebp
int
fst
mov
mov
in
xchg
aam
arpl
pop
add
and
inc
or
add
adc
mov
ret
lret
movsb
in
ror
fnstcw
xchg
in
popa
sbb
or
cmp
sub
pop
xor
adc
icebp
mov
mov
mov
cmp
jno
inc
cmp
sub
pop
xor
adc
xor
pop
mov
sbb
mov
dec
ret
arpl
movsl
hlt
sub
daa
add
push
adc
xchg
into
sub
pop
adc
cmpsb
lahf
jmp
mov
cmp
stos
jle
and
pushf
adc
jg
xor
add
inc
rorb
mov
jb
adc
cli
sbb
mov
cmpsl
hlt
fwait
push
testb
lods
inc
sub
shr
jns
in
iret
push
shlb
pop
insb
xor
xor
xor
lret
and
or
lock
adc
cmc
or
and
mov
ds
inc
mov
pop
outsb
inc
icebp
je
data16
push
sarb
sbb
rcrb
fcompl
sbb
popf
dec
std
repnz
movb
mov
push
aad
pop
push
cmp
dec
frstor
cmpsl
and
mov
rcr
dec
mov
jp
sbb
mov
mov
fs
mov
mov
mov
push
ljmp
lahf
mov
pushw
push
sti
dec
cwtl
mov
fwait
movsl
add
pop
inc
lret
mov
call
in
fsub
cmpsl
and
mov
inc
inc
daa
fdivl
push
and
test
inc
push
enter
fisubrl
jbe
cmp
pop
lods
pop
popa
and
leave
mov
cmp
sub
xchg
pop
xchg
jae
ss
popf
test
xor
sbb
or
xchg
jecxz
add
inc
daa
push
push
mov
cmp
mov
sub
fucomip
pop
pop
data16
sub
ror
sub
pop
jecxz
inc
imul
ljmp
push
insl
inc
fisttpll
mov
repz
data16
cmpb
cmp
add
lcall
jp
pop
sub
fwait
add
mov
sbb
in
cltd
jge
adc
mov
xlat
xor
lret
pop
iret
mov
fists
xchg
decb
xor
mov
sar
and
adc
scas
sti
in
inc
sbb
sahf
and
push
ja
repz
xor
inc
sbb
sahf
movsl
inc
stos
cwtl
push
adc
mov
fistps
jbe
icebp
add
ljmp
add
in
movsl
bound
pop
jp
or
pop
dec
xor
nop
ficomps
cmp
out
jmp
rcr
push
pop
mov
mov
cltd
xor
or
shlb
ret
jo
pop
adc
pop
inc
dec
std
cld
test
mov
dec
ljmp
in
push
and
sbb
sbb
mov
mov
leave
iret
test
ss
ficomps
inc
mov
xorb
cmp
inc
cld
jmp
loop
lea
das
dec
lock
mov
pop
xchg
int
mov
push
push
sbb
repnz
cli
inc
std
push
inc
out
mov
jp
inc
cwtl
or
push
roll
std
bound
rcl
xchg
jbe
movsb
inc
loopne
jno
add
outsl
sub
sbb
call
add
test
popf
cmp
cmp
out
push
mov
xchg
mov
or
cmp
xchg
pop
xchg
jmp
and
xor
fcmovbe
cmpsb
dec
push
lock
jae
add
fs
fdivp
sbb
sub
jmp
mov
push
lock
push
rcrb
xor
out
add
fs
loope
add
xlat
leave
out
call
mov
insb
or
jge
sbb
sbb
sbb
hlt
jp
adc
xchg
lds
lods
jb
mov
and
dec
cmpsl
test
rclb
inc
mov
adc
mov
cltd
mov
data16
rcl
jp
mov
sub
lock
xor
arpl
add
add
push
lahf
mov
in
sub
jo
cmp
sbb
and
lahf
push
loopne
mov
push
mov
or
out
subb
cltd
lcall
nop
cltd
and
mov
inc
cltd
pop
xor
mov
lret
mov
jae
arpl
mov
sbb
shll
mov
mov
aam
fcom
mov
inc
ljmp
jecxz
mov
jne
pop
loop
mov
or
push
inc
sub
adc
call
push
dec
sti
loopne
xchg
add
stos
das
mov
cmp
cld
es
sub
jle
sub
jmp
xchg
inc
add
in
mov
mov
sub
leave
sub
popa
sbb
rcr
pop
mov
roll
sti
add
xchg
and
pop
jle
sbb
sbb
inc
cwtl
bound
repnz
mov
pop
jl
xor
cmpl
xor
pushf
xchg
lock
sbb
je
ret
xchg
push
push
daa
inc
xlat
jne
push
fs
aas
jecxz
daa
mov
mov
inc
aam
enter
push
add
mov
sub
add
jle
mov
pop
in
jnp
dec
adc
push
xor
inc
mov
and
pop
push
lods
push
shrb
dec
cmp
aad
aam
cmp
and
ror
add
cmp
push
xlat
push
push
add
das
push
orb
fs
push
cmp
cli
mov
mov
lcall
outsb
nop
imul
pusha
pop
aaa
or
leave
fdivl
push
cwtl
and
dec
sbb
mov
mov
dec
daa
dec
push
popf
jle
in
pop
int
cmp
push
or
add
jmp
push
adc
sub
addr16
sbb
mov
test
sbb
das
mov
push
jo
sahf
jnp
clc
lret
push
pop
jb
mov
jo
mov
xorb
xchg
lds
int
fdiv
out
pusha
jl
in
sbb
je
mulb
bound
int
push
lcall
jge
cmp
push
mov
inc
adc
stos
shll
dec
sub
mov
pop
cmp
rcrl
addl
cmc
push
push
push
xor
mov
sub
insl
cmp
cmpb
outsl
inc
and
and
xor
xchg
das
inc
int
aad
frstor
dec
inc
xorl
ret
push
ret
pop
mov
sbb
stos
shlb
in
xchg
test
pushl
sub
jne
sub
mov
xchg
inc
rcrb
add
pop
xchg
shrl
xor
insl
mov
sbb
or
outsb
movsb
add
in
adc
mov
xchg
xor
push
and
iret
enter
mov
dec
cmpsb
cmp
jmp
aad
sub
mov
test
ds
dec
xbegin
mov
dec
dec
stos
ljmp
ljmp
ficoml
cmp
adc
sub
fldl
hlt
rorb
inc
stc
pop
repnz
lea
lahf
fstpl
xchg
int
test
les
mov
mov
mov
sar
frstor
mov
testb
pop
cmp
out
xchg
jg
clc
xor
movsl
xchg
adc
jo
es
mov
cmp
or
int3
addl
iret
out
mov
mov
lds
mov
mov
pop
mov
adc
adc
pop
fistpl
dec
adcl
xchg
xor
xlat
xor
and
repz
and
std
xchg
xchg
push
jl
inc
dec
mov
sbb
sub
inc
mov
pop
es
clc
movsl
fildl
fldl
fldl
loope
jb
pop
mov
movsb
sbb
loope
jne
pop
xchg
cmp
xchg
or
fwait
dec
fwait
cmpsl
sub
fnstenv
add
lret
sbb
pop
fbstp
pop
scas
lret
jnp
stos
mov
sub
int3
sbb
test
cli
or
mov
xor
ret
push
cmp
mov
sbb
dec
xchg
aad
movhps
or
fnstcw
out
jnp
pop
or
loopne
sub
jg
jmp
jnp
cltd
ja
test
jmp
out
and
pop
or
xchg
pop
call
mov
mov
mov
mov
xor
aad
jge
jno
comiss
inc
push
xor
push
push
xor
icebp
and
cs
scas
mov
pop
adc
push
mov
decl
repnz
popf
lcall
in
out
call
mov
mov
fldt
xchg
cmp
jg
rcll
xchg
and
push
mov
dec
push
or
jmp
aas
rorb
cld
push
cmovbe
mov
dec
and
sbb
pop
ss
outsb
pop
sub
cmpb
iret
ret
ss
and
lea
aas
jo
mov
cmpl
inc
sub
xlat
cmp
and
mov
jae,pt
sbb
mov
orl
adc
jmp
mov
pop
stos
loope,pn
inc
add
mov
int3
cmc
add
push
push
xchg
inc
or
xor
lods
push
lret
mov
cmpsl
lock
out
and
cmpb
dec
outsl
inc
sbb
xchg
mov
adc
mov
jo
sbb
push
scas
inc
or
ret
rclb
sti
cld
scas
xor
les
jnp
fnstenv
sub
jns
jmp
js
push
mov
insl
xchg
xor
arpl
arpl
xchg
loope
push
mov
push
mov
or
jnp
mov
mov
dec
jb
adc
xor
sbb
adcl
inc
call
mov
mov
pushf
and
in
sub
cwtl
fs
jae
das
daa
notb
or
mov
cmp
testb
jne
hlt
mov
inc
je
adc
sub
repz
or
push
arpl
test
daa
mov
in
pushl
dec
jb
cli
jp
xor
inc
pcmpeqw
dec
out
imul
rclb
mov
and
leave
test
aad
std
add
je
and
push
out
cmpsb
es
pop
mov
fs
std
adc
daa
sbb
cwtl
nop
fsubr
cli
pop
sub
shll
sub
jne
int3
jno
popf
ret
lcall
sub
and
sahf
xchg
xlat
inc
inc
jnp
scas
scas
test
sub
mov
xchg
loope
fistpll
xor
fidivs
ror
fwait
jl
lcall
push
add
cltd
fwait
in
mov
mov
pop
add
jg
ljmp
dec
dec
xor
orb
and
cmp
xlat
in
pusha
es
mov
outsb
add
aam
xchg
insb
fwait
lock
mov
or
and
cld
push
and
or
repz
inc
mov
mov
add
adc
andl
or
in
sub
inc
pop
shl
mov
push
enter
jns
shr
popf
fcmovnbe
xchg
mov
jmp
cmpsb
pop
aaa
xchg
pop
out
cmp
sahf
jecxz
mov
push
repz
pop
scas
jg
arpl
ljmp
pop
mov
push
mov
push
xlat
out
mov
inc
gs
nop
into
in
sbb
or
decl
mov
sbb
mov
pop
and
mov
dec
rcrb
sbb
xchg
mov
and
sbb
movsl
xchg
adc
stc
sub
pop
mov
stos
mov
xor
pop
fimull
sahf
jmp
jmp
jb
inc
out
push
mov
es
js
mov
add
mov
jp
dec
mov
push
jne
push
int
push
jns
xor
popa
in
outsb
jecxz
jns
xor
andl
shlb
jo
sahf
adc
jbe
andl
add
mov
mov
es
out
mov
rcll
push
fistpll
inc
lahf
add
or
loop
xchg
xor
ja
in
mov
ds
ss
ret
lahf
call
xor
pop
int3
adc
inc
movsl
pop
int3
gs
push
rcrb
and
pop
xor
add
ljmp
test
add
push
xor
in
pop
into
or
aam
sub
sbb
mov
pusha
mov
mov
fnsave
or
xor
ss
xchg
in
jo
shl
daa
movsl
outsl
fidivs
iret
lods
clc
sub
sub
movsl
gs
xchg
outsl
mov
out
inc
cmp
test
pop
jle
mov
jecxz
arpl
dec
out
jne
mov
jp
xchg
aad
mov
clc
cld
cltd
mov
test
push
or
cltd
jne
lods
aam
divl
scas
daa
mov
push
pop
adc
aam
fs
adc
pop
cltd
ss
xor
scas
and
pop
incl
dec
mov
lret
push
push
pop
lret
les
lock
icebp
cmpsb
lret
pop
fldt
xchg
inc
adc
or
mov
pop
jl
push
sub
push
out
out
jge
lods
push
mov
jnp
lds
mov
les
inc
daa
out
lcall
pop
xchg
js
sbb
inc
bound
ljmp
jae
fs
inc
repz
idivb
lea
mov
cmp
add
cmp
add
cmc
inc
mov
adc
movsb
cwtl
add
push
jo
out
fstps
cli
push
clc
mov
pop
xlat
push
push
fldenv
push
aad
fcmovne
cli
mov
out
sbb
stos
out
imul
mov
pop
das
dec
loope
mov
xor
lock
pushf
adc
ljmp
or
sbb
dec
add
jle
inc
pop
jbe
xchg
mov
jle
lret
add
sbb
bnd
pop
test
mov
and
jl
sub
pop
ljmp
add
popf
cli
int
mov
popa
cmp
mov
aaa
xor
inc
or
dec
in
pop
negb
popa
jnp
loopne
fldl
dec
adc
mov
inc
mov
jno
jmp
stos
mov
lea
inc
pop
popf
mull
pop
loop
adcb
cli
inc
cmp
pop
push
fisubs
insl
fldl
lcall
and
sbb
pop
xchg
out
jo
mov
mov
jl
mov
fsts
repnz
dec
icebp
sbb
cli
xchg
sub
inc
lods
int
xchg
ret
mov
cmp
clc
pop
hlt
jns
aad
nop
xor
lds
dec
mov
mov
jge
in
cmp
in
int
jns
sub
stc
jb
or
and
dec
mov
inc
xor
xchg
push
sarl
lock
fmull
out
mov
rolb
push
or
fpatan
mov
xchg
mov
js
movsb
jo
imul
movsb
aas
fwait
data16
int3
in
lock
lock
aas
movsb
lahf
das
inc
mov
repnz
pushl
mov
pop
sbb
push
and
lret
add
lock
pop
push
hlt
insl
in
xchg
adc
aam
repz
pop
andb
cld
sbb
outsb
mov
mov
imul
fnstcw
xchg
xor
inc
push
pushl
push
xchg
loop
xor
jg
shrl
mov
popf
dec
jp
fdiv
scas
inc
testl
leave
imul
arpl
adc
lods
pop
inc
bnd
les
or
lods
call
out
or
hlt
xchg
adc
dec
pop
and
mov
into
and
not
mov
xchg
mov
fnstcw
popf
dec
push
pop
loope
incb
xor
push
sbb
movsl
test
out
rolb
scas
sub
mov
jno
stc
mov
nop
nop
mov
push
jbe
stos
dec
jnp
subb
or
test
test
test
mov
lret
repz
cmpsb
pop
je
or
enter
insb
daa
test
lods
mov
cltd
mov
in
ret
or
xchg
mov
pushf
push
lret
xlat
cmp
mov
subb
mov
pop
add
cmpsl
iret
dec
pop
lret
cmp
push
jns
mov
sbb
adc
mov
xchg
xchg
daa
push
jnp
mov
enter
sarl
dec
jae
fistpll
fwait
push
lahf
je
cmpsl
mov
cmp
sahf
cmp
test
adcl
sub
std
dec
lock
sub
push
notb
sub
xchg
movsb
cmpsl
stc
cli
repz
inc
xlat
scas
add
adc
lret
push
sbb
scas
je
mov
xchg
into
pop
andl
pop
add
inc
pop
mov
and
cmpsb
lods
sub
pop
mov
sbb
stc
imul
sub
lret
pushf
in
dec
jg
sbb
scas
xor
inc
push
pushf
bound
sbb
addb
fisttpll
xor
repz
xor
out
dec
pop
fcoms
dec
push
xor
inc
ret
insl
lahf
aas
notb
sub
mov
pop
in
push
fucom
jp
push
pop
jmp
dec
or
pop
push
insb
idivb
cmp
out
sub
inc
ficompl
dec
lret
mov
inc
push
fstp
ds
add
or
ret
dec
dec
mov
jmp
cld
fsubs
cmp
sub
addr16
sub
mov
jp
enter
inc
xchg
je
push
dec
pop
sarb
push
fsubrs
lods
mov
adc
addb
xor
ret
shr
rcrl
dec
in
inc
mov
cli
sub
jecxz
xor
shlb
je
std
stc
cmp
test
dec
arpl
or
jno
int
ja
cwtl
pop
insb
xchg
jne
enter
stos
adc
rcrl
or
mov
xor
xor
or
or
addr16
dec
ja
pop
xchg
testl
push
push
sti
lret
cmp
sub
cmpsl
aad
popf
insb
inc
fldt
sbb
sub
js
test
jns
xchg
add
adc
dec
mov
mov
fwait
pusha
push
cmp
ja
fidivl
cltd
mov
mov
adc
adc
imul
movsl
popa
add
test
sub
mov
shlb
gs
lds
or
pop
das
and
sahf
cwtl
fdivl
xor
in
mov
imul
cmp
add
xchg
push
lret
and
loope
jge
jl
clc
add
jns
hlt
outsb
ja
and
stos
mov
insl
cmpsb
push
push
enter
adc
sub
jo
jge
mov
nop
arpl
add
adc
xor
stc
test
xchg
loopne
xchg
ljmp
cmp
addb
scas
mov
je
cmp
sub
and
mov
mov
sub
add
dec
inc
mov
insb
loope
cs
push
xchg
cmpsb
lcall
inc
in
enter
inc
outsb
mov
xor
and
mov
xor
mov
push
insb
sbb
push
mov
pop
fcmovnb
out
mov
dec
xchg
adc
lods
mov
mov
sub
aas
fsincos
pop
xor
dec
push
fwait
adc
mov
mov
adc
int3
push
insb
and
addr16
aad
sub
push
test
lods
std
ret
in
push
arpl
lret
mov
popf
cltd
cvtpi2ps
cmp
cmpsl
lods
jle,pt
inc
pop
xor
pop
sbb
pop
test
lea
scas
mov
adc
adc
cs
push
inc
inc
sub
inc
push
aas
mov
mov
inc
mov
in
inc
call
arpl
scas
leave
add
loop
int
dec
sub
push
lret
dec
add
aaa
push
test
xchg
or
or
dec
and
shlb
mov
movsl
fdiv
inc
fs
xchg
and
hlt
sarb
or
pop
and
mov
leave
pop
ret
insb
ret
push
inc
rclb
lret
sbb
addl
xchg
push
dec
out
jnp
shll
jmp
in
push
cmp
nop
cld
sub
cmp
mov
xchg
lock
andb
mov
mov
iret
sbb
mov
rcrb
sbb
xor
cmp
mov
stos
xor
mov
nop
jg
stos
xchg
sub
cmp
sub
inc
into
in
into
inc
xchg
xchg
xor
stos
mov
jecxz,pt
adcb
jmp
je,pn
xchg
mov
xor
je
and
jg
add
add
movsb
push
or
mov
mov
fmull
xchg
push
data16
lds
push
lahf
mov
dec
add
and
and
sbb
cli
sub
loope
xchg
mov
sub
pop
mov
test
jo
sub
call
jo
dec
sbb
in
push
inc
mov
inc
pop
fdiv
movsb
jge
cmp
dec
push
lahf
cs
xor
repnz
mov
and
mov
cmc
lret
leave
dec
mov
enter
sbb
sub
leave
adc
pop
leave
pop
or
mov
rcl
lods
mov
cld
xchg
in
popa
sbb
or
cmp
sub
pop
xor
adc
icebp
mov
mov
mov
cmp
jno
inc
cmp
sub
pop
xor
adc
icebp
lods
mov
cld
xchg
in
popa
les
inc
cmp
sub
pop
xor
insb
aad
lds
fdivl
in
sahf
jecxz
cmpsb
jmp
push
pop
push
aam
mov
sub
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmp
pop
sbb
or
jbe
sbb
cmp
dec
test
cwtl
cwtl
mov
fsubr
enter
sub
sbb
or
js
push
push
mov
mov
call
clc
cmp
or
js
adc
dec
dec
mov
leave
cmpsb
lret
mov
jno
sub
jnp
pop
cmp
mov
jp
jb
push
ljmp
push
pop
mov
in
pop
test
push
pop
in
rcll
mov
fs
xchg
arpl
mov
pusha
mov
enter
mov
mov
test
popa
and
cmp
aas
jge
sub
outsb
sub
cmp
js
cmpsb
test
cmc
mov
push
scas
mov
fcoms
lret
ficomps
aad
mov
test
push
iret
mov
dec
jne
ljmp
notl
out
pop
call
stos
cmpsl
sbb
jns
fcmovnb
enter
rol
mov
mov
cmp
pop
or
js
push
ljmp
mov
lock
inc
ja
inc
insl
push
adc
and
stc
lret
lods
call
popf
popl
xchg
cmp
pop
dec
pop
insl
push
sbb
pop
add
fucomp
stos
in
fsqrt
int
popf
xchg
push
jnp
clc
jno
or
push
js
mov
mov
fsubr
enter
sub
sbb
or
js
push
js
mov
mov
fsubr
enter
lea
push
sub
mov
test
or
and
lret
rorb
add
dec
lret
stc
dec
inc
lret
xchg
pop
push
movntps
sti
sbb
aad
mov
bound
fld
je
notb
sti
inc
ret
rcr
lahf
push
icebp
cli
sub
xchg
push
jge
push
fldl
popa
scas
aad
lea
push
iret
mov
mov
mov
jecxz
out
adc
ret
mov
inc
int3
int
cmp
inc
add
dec
daa
cmpsl
lds
pop
lret
add
inc
insb
and
loop
fs
outsl
cmp
push
in
test
and
es
sub
cmp
mov
push
int3
jmp
xlat
test
movsb
adc
test
nop
mov
outsb
sbb
mov
mov
leave
aad
jae
ja
or
fisubrl
jbe
test
inc
cmp
test
jecxz
imul
sub
mov
inc
fists
insl
xor
dec
xor
mov
or
or
pop
roll
shrl
add
adc
xor
loope
mov
lea
test
jge
aam
pop
jmp
arpl
or
push
mov
push
nop
push
xchg
adc
or
cmc
mov
ret
fwait
pusha
ds
sub
test
aam
pop
push
popa
cwtl
andb
fisubrs
repz
pop
nop
push
and
or
ljmp
mov
stc
inc
or
inc
mull
inc
mov
jl
hlt
mov
ret
ss
imul
repz
and
cmp
xlat
jle
adc
xchg
mov
fsubl
dec
push
mov
dec
outsb
cmp
sub
loope
out
in
jmp
scas
lods
js
daa
dec
dec
rorb
sbb
mov
sub
rcr
or
or
pusha
test
lcall
adc
cmp
jge
cmpsl
test
pop
cmc
lods
das
fsubs
cmp
fildl
adc
es
xchg
mov
pop
xor
pushf
stos
arpl
mov
pop
cmp
pop
dec
cwtl
and
xchg
jp
test
pop
test
in
cmp
dec
pop
jo
scas
mov
arpl
and
add
sbb
inc
test
and
aaa
gs
addb
xchg
inc
sahf
test
ja
test
aad
cld
cli
pop
pop
daa
leave
and
mov
std
fimuls
and
add
dec
push
rcrl
insl
add
add
cltd
cltd
mov
add
cld
repz
rcrb
lods
jb
xchg
jne
cltd
cmp
pusha
adc
xchg
jbe
mov
in
jns
adc
gs
xchg
shll
gs
pop
inc
aad
aad
lea
notl
sub
pushf
sbb
jb
xchg
dec
inc
shl
sub
cwtl
lcall
sbb
or
mov
fidivl
push
insb
fcomip
inc
jno
daa
loop
or
cmp
xor
je
inc
cli
mov
dec
fcomi
idivl
pop
adc
mov
es
in
adc
jp
mov
xchg
fstps
dec
and
mov
fisttpl
push
push
xchg
adc
dec
pop
cmp
nop
push
ss
popa
push
mov
adc
mov
imul
lret
lahf
insl
fisttpl
ljmp
and
mov
mov
lods
loop
cmp
inc
jno
mov
sub
push
push
jg
xchg
mov
mov
lret
cmp
mov
test
inc
inc
jp
push
cmpb
lods
test
jns
je
lods
pop
adc
xchg
outsl
adc
nop
cld
stos
xorl
gs
fimuls
cmp
in
sbb
xchg
das
mov
mov
and
inc
lcall
mov
or
jns
jo
es
mov
add
push
jle
mov
insb
add
mov
je
mov
xchg
xchg
ret
jmp
enter
xor
xchg
jge
fimull
mov
es
imul
jcxz
clc
out
xchg
aaa
aam
dec
jp
dec
sti
add
bound
movsb
faddl
add
stos
xchg
push
push
test
push
push
dec
ficompl
inc
cmp
and
daa
cmc
fnsave
cli
rcr
aas
clc
pop
adc
movq
sub
ds
pop
repnz
rclb
xchg
movsb
dec
pusha
sub
lds
gs
das
out
jp
pop
std
push
jae
roll
sbb
mov
cmpsl
fidivrl
shll
pop
lods
add
adc
dec
test
inc
jno
fldt
notb
xlat
lahf
mov
movsb
dec
jns
add
mov
push
cmp
pusha
aaa
mov
sarb
sub
mov
add
fldcw
out
bound
pop
ret
inc
imul
insb
xchg
mov
jne
popf
fdivs
sbb
mov
xchg
aad
adc
inc
mov
and
lds
mov
faddp
pop
add
xchg
popf
mov
outsl
pop
or
sar
loop
and
cmpsl
addr16
xor
test
lds
dec
sahf
out
and
jecxz
add
xor
jb
and
aaa
jns
out
cmp
cmp
jg
adc
subl
retw
sbb
aaa
jg
sub
and
addr16
and
cmp
bound
pop
add
sub
xchg
hlt
mov
dec
mov
aas
sbb
adc
sbb
icebp
call
stos
int
push
pmaxsw
inc
jbe
hlt
jne
test
push
ret
mov
scas
sbbl
out
pop
jne
cmp
and
out
push
push
xchg
int
mov
pop
jg
cmp
call
mov
mov
in
enter
inc
movsb
inc
dec
lock
call
mov
and
inc
js
sti
push
stos
insb
rol
xor
dec
call
mov
test
jl
mov
dec
out
dec
shlb
adc
cs
lock
push
jp
rcll
jmpw
inc
test
sti
mov
imul
xchg
repz
fimuls
mov
xchg
outsb
mov
inc
andb
jbe
pop
icebp
jne
sbb
dec
add
in
cwtl
push
and
dec
lods
pop
pop
pushf
inc
movsl
jle
xchg
mov
inc
push
jl
out
addr16
repz
sbbl
pop
fs
test
icebp
dec
insb
vpmacsswd
dec
lret
cmp
push
ds
cmp
adc
jo
jle
in
jp
adc
out
inc
sbb
aaa
push
xchg
pop
add
insb
lahf
dec
cmpl
sub
int
fldl
pop
clc
movsl
sub
mull
loope
stc
clc
or
sub
in
mov
sahf
pusha
pop
xchg
inc
movsb
and
pop
mov
sub
scas
sub
jge
call
and
lret
pop
cmp
xchg
jmp
jae
int
dec
cmc
iret
mov
cmp
movl
fldenv
cmpsl
leave
cmp
loopne
or
pop
mov
je
ss
inc
mov
aad
in
or
loop
mov
lock
sbb
and
stc
push
or
sbb
mov
roll
xchg
loop
iret
mov
int
inc
in
ljmp
adc
shlb
sti
inc
in
out
loop
mov
jns
ss
lret
jl
push
stos
cmpsl
and
jns
aam
pop
leave
mov
push
add
jne
xchg
jae
lahf
cli
mov
lcall
repnz
mov
mov
fistl
sbb
out
xor
cli
mov
mov
dec
lret
xor
enter
pop
adc
sbb
push
jno
push
mov
es
inc
mov
imul
movl
shl
mov
add
test
into
inc
xor
push
xchg
insb
cmp
cmp
hlt
dec
mov
xor
mov
push
dec
leave
shrb
mov
xlat
lahf
mov
xchg
mov
fstps
jp
lods
mov
bound
mov
pushf
je
push
dec
dec
xchg
xlat
test
jb
mov
rcl
ret
cmpsl
into
and
jmp
jb
pop
aam
dec
popa
fcomip
add
ffree
dec
xchg
sbb
aaa
push
in
jno
inc
jno
idivb
pop
decl
pop
jle
clc
nop
roll
push
stc
cld
push
jne
sbb
addr16
pop
stos
push
rcr
cli
test
xchg
sarb
scas
mov
loope
adc
lret
aas
rcrl
inc
imull
inc
push
pop
push
jo
ljmp
cmp
outsl
adc
mov
sub
fldenv
sub
cmp
pop
dec
enter
jns
jne
rolb
push
repnz
jmp
mov
inc
movsb
addl
jmp
jns
and
inc
inc
xor
sbb
bnd
imul
pop
lret
jge
jl
shrl
add
in
pop
mov
xor
leave
iret
es
or
out
cmp
inc
cmp
pop
and
daa
fwait
vpunpcklwd
xchg
fsubs
push
pop
outsl
in
mov
pop
call
mov
mov
out
adc
sarl
lcall
pop
sub
and
incl
sbb
fidivrl
frstor
mov
mov
lcall
sbb
andl
aaa
inc
das
out
adcb
adc
inc
mov
sbb
mov
int3
lods
mov
mov
out
js
mov
out
jg
rcl
inc
rcrl
pop
cmc
mov
bound
and
xchg
dec
sub
xor
and
mov
sub
jae
add
pop
test
lahf
push
sub
mov
jo
aas
push
mov
xchg
dec
jnp
arpl
push
ja
or
in
mov
add
aad
adc
ljmp
mov
rclb
sbb
into
sub
jno
xor
daa
add
cwtl
popa
sbb
aam
jbe
add
push
fildll
into
push
fdiv
pushf
add
push
pop
loopne
test
out
ss
fisubrs
out
cmp
jb
inc
call
cld
push
call
aas
ffreep
mov
inc
idiv
dec
int
add
lret
cmp
pop
mov
jb
imul
pop
sub
into
push
nop
add
sub
and
xlat
dec
pop
mov
add
out
out
push
lods
mov
fmuls
adc
lret
mov
divl
cmpsb
stc
xchg
push
xchg
pop
add
jle
das
xchg
jbe
fldl
in
sbb
insb
mov
dec
xchg
ret
xchg
or
push
pop
js
clc
in
ds
in
outsl
sahf
fdivs
xchg
test
inc
in
xchg
and
push
sub
inc
scas
mov
fiadds
or
popa
xchg
es
inc
mov
incb
aad
ror
popa
arpl
xchg
dec
adc
aam
xchg
xor
xor
pop
push
daa
mov
fwait
imul
and
dec
repnz
fnsave
imul
xor
sub
dec
hlt
cmc
mov
pop
adc
cld
insl
sbb
leave
jg
inc
pop
sbb
das
in
or
std
cmp
and
sub
movsb
sub
xor
xchg
test
dec
fwait
push
mov
or
mov
jge
fstps
mov
inc
cmp
insb
jle
ss
movsl
mov
jbe
xor
pop
cli
cmp
bound
arpl
and
and
mov
out
in
adc
or
out
sti
fmul
push
call
push
cmpsb
sub
cmpsl
pop
or
mov
push
mov
and
imul
cli
jb
testl
adc
xchg
gs
cmp
inc
mul
add
sahf
mov
fdivrl
js
cld
jb
fcoml
or
inc
lret
cld
cmp
rclb
cmc
loop
daa
icebp
cmpsl
mov
fs
mov
xchg
pop
pop
xchg
mov
cmp
xor
addr16
lock
mov
leave
in
push
movsb
cli
xchg
test
stos
push
mov
dec
pop
adc
daa
sahf
or
int
adc
leave
and
jo
mov
add
outsl
xlat
fwait
hlt
xchg
es
push
fisttpl
movsl
pusha
pop
addl
aam
or
push
imul
rcrl
pop
roll
decb
xchg
arpl
fcoml
push
into
negb
pop
cld
or
mov
xlat
xchg
hlt
int3
adc
inc
sub
mov
push
mov
jo
subl
adc
decb
enter
sarb
aaa
push
pushf
pop
adc
shl
in
sbb
pusha
leave
jns
in
pusha
mov
arpl
jmp
out
mov
jae
mov
test
ffreep
cmp
add
addl
sar
js
icebp
adc
and
dec
adc
pop
addr16
out
popf
add
sbbl
or
testl
pushf
inc
ljmp
dec
push
stos
add
ds
xor
outsl
lods
rcr
cmp
adc
loopne
jmp
addr16
and
insb
fcmovb
dec
fbld
push
cmp
movsl
fdivrp
scas
inc
sub
jne
jmp
sub
fucom
and
hlt
jae
push
cmp
cwtl
cmpsb
adc
push
cltd
inc
aaa
dec
lods
pop
push
add
mov
sub
sbbl
test
xor
xlat
sahf
xchg
mov
into
ja
jp
nop
rcrb
jno
ret
in
shrb
cli
outsl
ljmp
dec
inc
enter
and
negb
mov
mov
pop
sub
jno
repz
add
sbb
daa
jle
mov
and
dec
jne
jo
test
pop
add
inc
out
cmp
out
pusha
lea
mov
jmp
andb
pop
jg
incb
pusha
xor
add
adc
nop
ror
pop
jmp
jmp
filds
sub
dec
jo
mov
rcll
or
cs
dec
pop
adc
cltd
mov
repnz
xor
inc
jle
outsl
dec
mov
sbb
minps
or
daa
stc
xchg
mov
dec
pop
push
nop
daa
pushl
sub
inc
lcall
xchg
repnz
lods
ds
cltd
pop
sti
add
mov
out
imul
jne
pushw
or
mov
push
mov
subl
leave
ss
jne
jle
jle
and
and
leave
xor
psrlw
aam
shll
push
inc
lahf
comiss
and
jp
mov
pop
mov
mov
out
mov
mov
movsl
daa
mov
ret
aam
pop
pusha
popf
mov
mov
push
and
ja
push
pop
push
pop
sbb
cltd
loopne
call
je
movsb
cs
lods
or
or
sbb
ljmp
ss
xchg
push
mov
mov
repnz
add
test
pop
iret
sub
jbe
in
xchg
sbb
adc
mov
sbb
push
stos
pop
pop
add
jnp
mov
sub
loopne
xor
dec
sti
add
adc
and
jmp
mov
pop
test
or
js
adc
outsb
stos
push
stos
loop
jle
std
push
sbb
mov
cmp
mov
or
jno
in
push
mov
mov
out
mov
cmc
insl
adc
or
mov
lods
or
fldcw
jne
rol
jg
pop
jmp
jl
jbe
add
outsb
rcrl
mov
rolb
xlat
scas
ss
lods
push
fs
cld
test
push
or
or
adc
movsl
lods
js
int3
arpl
int
adc
fcoms
mov
xchg
call
lods
jmp
popa
dec
mov
stos
icebp
ja
mov
cmc
roll
popa
jp
pop
push
mov
jmp
xor
mov
cmp
pop
xlat
lods
sbb
pop
les
and
int
fnstsw
cmpsl
push
sub
add
sub
adc
mov
or
xchg
xchg
mov
rcrb
sar
or
test
xchg
je
xorl
mov
xchg
sbb
lcall
cli
mov
lock
hlt
sbb
sbb
sbb
xchg
add
dec
lcall
push
jge
sbb
js
jb
sbb
cmp
xadd
inc
dec
stos
decl
movsl
test
mov
mov
pop
push
adc
in
das
rcll
lcall
cmpsb
sbb
adc
jl
pop
jg
sub
cmp
vpcomw
xchg
dec
and
mov
add
dec
xchg
adc
outsb
leave
test
outsb
aam
dec
pop
add
icebp
mov
inc
sub
cli
xor
adc
fwait
sub
mov
in
cmp
out
sub
mov
movsl
inc
mov
data16
xchg
push
add
outsb
mov
lcall
pop
cmpsb
inc
lret
inc
out
sub
out
push
xchg
push
sub
rep
and
lret
sub
int3
es
inc
dec
stos
pop
insl
mov
lret
mov
fistpl
mov
or
aad
movsl
adc
iret
add
adc
sarl
push
in
mov
jnp
popf
in
mov
fs
pop
mov
jno
or
dec
cmpl
lcall
test
repz
mov
int3
push
jae,pt
in
xorb
mov
mov
add
mov
pushf
or
into
push
sub
int
push
in
push
jecxz
rcrl
setl
mov
or
push
mov
in
lods
inc
repz
sbb
movsb
jmp
stos
push
mov
pop
dec
pop
sbb
xchg
cltd
dec
and
lret
or
mov
sti
jnp
mov
imul
xchg
mov
or
pop
loop
push
imul
int3
push
ret
or
cli
push
arpl
clc
outsb
stc
rcl
rol
push
jmp
push
or
jmp
add
lds
dec
mov
jle
js
jmp
fisubl
sub
stc
jge
jno
repz
dec
movsb
mov
and
sub
mov
imul
mov
push
imul
and
lea
sahf
iret
add
pop
repnz
lcall
and
je
mov
enter
push
insl
out
rcrl
in
pushl
scas
shl
mov
push
mov
adc
mov
aas
mov
test
sti
fadd
setne
cmp
jae
ja
push
jo
jo
sahf
inc
cmp
scas
arpl
pop
xchg
mov
mov
adc
jle
cmp
pushf
mov
push
add
in
sbbb
xor
test
out
int3
or
shrb
cmp
pop
push
fcmovb
add
fidivrs
sbb
f2xm1
es
dec
mov
ds
pusha
inc
sbb
sub
loop
enter
repnz
pop
push
sbb
repnz
es
nop
inc
ret
xor
xchg
lcall
lcall
jo
neg
fcompl
bound
lcall
add
mov
mov
ret
lcall
cmp
xor
insb
adc
in
insb
shll
ja
movsb
les
sub
arpl
ret
out
test
sub
mov
mov
jae
push
cmc
in
out
xor
pop
mov
and
popf
xor
daa
stos
lock
mov
outsb
xchg
mov
cs
repnz
xchg
filds
pop
push
xchg
adc
mov
xor
insb
and
das
in
lds
push
rol
je
loopne
cmp
jb
inc
in
or
push
stos
into
addr16
loopne
lods
push
popf
cld
xlat
fwait
lcall
movsl
xor
mov
push
jge
lret
add
jne
nop
mov
nop
orb
popa
push
lcall
jno
movsb
loop
add
mov
orb
outsl
aad
cmp
xchg
lcall
ds
jl
pop
xchg
sti
push
jb
cmpsl
dec
das
hlt
push
jl
addr16
sahf
imul
imul
add
std
mov
sub
cmp
xchg
or
nop
out
dec
cmp
daa
addr16
dec
aad
add
call
mov
fsubr
cmpsl
int3
cmp
aaa
sub
dec
sub
cmp
mov
in
repz
inc
cmp
mov
adc
and
outsb
xchg
jbe
xlat
imul
push
rcl
pop
mov
and
lock
jb
mov
xlat
repz
xchg
cvtps2pd
inc
or
mov
sti
push
jg
cs
jl
leave
mov
pop
ja
int3
push
inc
xchg
nop
push
cmp
cli
pop
cld
mov
clc
sbb
das
ss
ret
jmp
es
jns
mov
aaa
fs
sub
push
js
mov
mov
fsubr
enter
sub
sbb
or
js
push
js
mov
mov
fsubr
enter
sub
sbb
or
dec
push
js
mov
mov
int3
call
sbb
in
sub
sbb
or
dec
push
mov
xor
pusha
mov
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
