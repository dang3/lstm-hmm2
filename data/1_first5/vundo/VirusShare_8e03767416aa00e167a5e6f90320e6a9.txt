inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
mov
mov
mov
sub
or
pop
push
pop
add
add
push
add
add
add
add
add
add
add
mov
add
jnp
jecxz
push
out
stos
add
adc
pop
add
add
add
add
jne
xor
jl
pop
add
add
stos
add
add
stos
add
add
add
add
add
add
push
add
add
add
add
add
rolb
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
or
add
add
add
addb
add
rolb
add
add
add
push
add
add
add
stos
add
add
push
add
add
add
add
jne
xor
xchg
add
stos
add
push
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
sbb
dec
add
add
bound
push
add
add
and
add
push
add
pop
add
add
add
add
add
add
add
bound
push
add
add
add
push
add
in
add
add
add
loopne
addl
add
add
add
add
add
add
add
add
add
add
sub
jb
stos
add
pop
add
add
and
add
dec
add
rolb
add
add
add
xor
lahf
add
add
add
push
add
xchg
add
sub
adc
stos
add
add
cmp
daa
add
add
and
push
add
or
popa
add
add
add
add
movb
add
add
add
icebp
add
add
add
stos
add
pop
add
jns
add
dec
add
loope
and
add
stos
add
xor
add
jnp
add
mov
sub
add
add
add
add
jnp
dec
add
gs
add
roll
flds
stos
add
add
add
add
add
addb
add
or
add
add
stos
add
add
add
push
add
add
add
add
xor
add
add
add
push
add
add
add
add
add
add
add
add
jne
stos
add
add
inc
add
add
add
add
roll
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
test
add
add
mov
add
add
add
add
add
add
add
add
sub
and
add
add
add
add
push
ja
stos
add
add
enter
cmpsb
add
add
add
cld
add
daa
add
add
add
add
add
jne
mov
cmp
or
add
add
xchg
add
add
add
mov
lcall
lods
rorb
test
insl
cltd
push
mov
ljmp
inc
das
insl
inc
push
ss
add
mov
xor
jae
dec
fstp
push
aad
fildll
rcrb
cld
jnp
std
incl
inc
jecxz
mov
jmp
ljmp
jnp
or
add
add
push
push
sbb
jg
ss
or
inc
jne
jne
arpl
mov
cmpsb
dec
repz
xor
shr
filds
stos
lock
jge
mov
xchg
rcr
pop
adc
jmp
mov
jnp
in
xor
loopne
or
sbb
inc
jne
dec
mov
bound
push
pop
pop
push
cltd
mov
xchg
nop
out
int
addr16
push
inc
cmp
bound
sub
call
movsb
xorb
imul
pop
xchg
out
sti
pop
push
adc
dec
int3
stc
out
jbe
xor
fs
gs
stos
xchg
xor
leave
mov
dec
jmp
cmp
jns
lahf
test
sti
xor
cmp
insl
jl
xchg
inc
repz
cmpb
repz
pushf
add
stos
push
jecxz
mov
out
mov
sub
mov
faddl
shlb
adc
popa
call
lahf
jmp
pop
test
out
movsb
xor
sarb
push
pushf
test
jns
stos
push
loopne
lahf
sbb
test
xchg
jecxz
xchg
mov
bnd
shlb
js
rolb
nop
sub
jmp
pop
and
jge
loopne
and
data16
cltd
cmp
ljmp
rcll
jbe
in
sub
and
pop
add
sbb
mov
or
test
pop
jmp
dec
cmp
adc
je
xor
sbb
ret
xchg
dec
mov
loope
es
pop
and
mov
inc
mov
sub
xchg
mov
jae
ja
shlb
cwtl
xchg
push
adc
add
xor
cmpsl
sub
fmul
add
mov
jge
push
or
xor
mov
xchg
add
xchg
aaa
mov
pop
jns
jl
push
pop
jmp
outsb
xor
xor
push
dec
imul
or
mov
push
mov
div
mulb
imul
stos
mov
sbb
xor
ljmp
inc
pop
fildll
xor
adc
test
scas
addl
push
xchg
xor
xchg
xchg
js
pushw
in
add
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lea
popf
in
aad
inc
ret
js
les
jne
gs
xor
jge
cmc
popf
in
aad
in
xchg
std
icebp
or
push
cmp
and
lea
in
jge
int
fstpl
or
or
ss
popa
adc
fisubs
mov
pop
iret
jbe
xchg
outsb
add
loopne
cmp
hlt
pop
xor
mov
pop
out
or
sti
push
xor
mov
dec
out
adc
mov
push
loopne
iret
xor
popf
nop
xor
push
or
fcoms
in
adc
mov
cmc
fcmovnb
cmp
int
int
adc
jp
mov
mov
insl
std
jg
jb
jmp
inc
jbe
loopne
popf
cld
test
xchg
mov
shlb
lea
cli
jb
movsl
pop
ljmp
es
jbe
pop
jne
or
jno
pop
fisubrl
adc
adc
int
frstor
or
inc
cmp
jge
lret
cmpsl
hlt
in
xchg
fsubr
mov
cld
mov
and
push
sub
pop
xor
sub
mov
fsub
mov
mov
in
sti
std
jmp
insb
xor
sub
imul
mov
mov
movsl
in
xchg
std
test
push
cmp
and
cmc
popf
in
aad
frstor
or
push
cmp
and
cmc
cmp
push
jbe
jmp
shl
fistps
int3
std
lahf
push
dec
fdivr
fildl
add
xchg
sub
adc
enter
clc
shll
fisttps
xor
or
cmp
jae
sti
mov
orb
cmp
outsb
mov
ds
shrb
fwait
pop
insl
xchg
push
add
shl
outsl
sbb
or
sbb
sub
mov
mov
gs
push
jp
fisttps
push
lea
fildll
rcr
rcll
pop
test
daa
push
sbb
xlat
mov
push
jne
xor
push
dec
jecxz
mov
jb
mov
mov
sbb
inc
sbb
mov
add
xchg
stos
lods
xor
and
pop
sbb
stos
jmp
xor
adc
popa
mov
xor
movsl
cmc
and
dec
or
fistpll
aaa
sbb
lds
push
pop
daa
in
pop
pop
sti
ret
js
bound
and
in
xor
mov
sub
out
push
sarb
repnz
cmpsb
cwtl
xchg
mov
mov
mov
das
das
push
daa
jbe
xor
data16
les
imul
outsb
pop
inc
jle
lock
adc
push
mov
lock
insb
fildl
or
pop
cmp
push
and
jp
adc
add
out
dec
mov
mov
cmp
jp
inc
loope
in
out
jae
jmp
mov
pop
add
daa
mov
cwtl
and
sub
sub
rol
lock
out
sbb
int
mov
xchg
jmp
in
test
cmp
inc
movsl
and
add
dec
inc
mov
add
mov
int3
xor
jne
pop
out
dec
cmpb
jb
sub
mov
pop
cmpsb
mov
scas
push
test
add
fsubrl
xchg
xor
adc
loopne
push
ljmp
inc
dec
mov
enter
mov
mov
push
fimuls
mov
adc
aas
imul
lods
xor
cmp
popa
add
inc
jecxz
dec
push
pop
fadds
xor
scas
xchg
dec
push
in
cmp
hlt
adc
outsl
or
into
cld
jnp
sub
sbb
xchg
jae
jae
mov
push
stos
iret
xchg
jle
xchg
fstl
aam
jae
xor
int
xor
pop
sub
dec
call
push
icebp
repz
pop
fisubl
sarl
cwtl
xor
mov
les
push
jae
inc
lods
inc
scas
sub
add
add
push
inc
xchg
xor
pop
xorb
stos
shl
push
mov
mov
push
outsb
aas
aaa
xor
in
int3
ss
jo
scas
xor
fpatan
daa
es
jo
rcll
repz
outsl
adc
xor
or
ror
lock
outsl
mov
int3
negl
hlt
outsb
cmc
negl
les
loopne
sub
mov
sub
std
insl
sbb
xlat
mov
aaa
push
mov
push
mov
cmp
dec
cmpsl
into
sub
fwait
popa
inc
pop
fnstsw
stos
xchg
dec
mov
xor
call
cmc
inc
popa
arpl
or
lcall
cltd
ljmp
push
insl
insl
dec
and
adc
loop
repz
mov
adc
jae
js
rorb
mov
add
sbb
pop
pusha
push
ds
xchg
add
mov
ror
fsubrs
pop
fsubl
sub
jns
mov
push
repz
push
pop
std
gs
pop
mov
pop
cmp
std
cmp
sbb
paddb
ss
add
sti
jnp
jne
xchg
stc
sub
mov
xlat
mov
mov
mov
daa
cmp
dec
pop
mov
sbb
sbb
add
lds
sbb
jle
jns
pop
xlat
push
inc
mov
stos
lods
mov
pop
and
ljmp
in
enter
test
rcrb
xor
sub
dec
push
negb
push
arpl
or
add
jnp
lcall
mov
out
inc
out
mov
xor
addb
out
clc
or
in
mov
out
fsubrl
sbb
popf
ljmp
dec
popf
pop
testb
jnp
scas
inc
arpl
dec
jg
push
add
in
cmp
ret
dec
mov
test
rorb
shlb
sbb
lods
or
jne
mov
dec
movsl
mov
js
mov
push
lds
mov
sbb
and
fadds
cwtl
fwait
das
jg
push
push
cs
js
in
inc
cwtl
bound
insb
enter
ljmp
xchg
ljmp
ret
inc
loope
dec
popa
repnz
shr
xchg
aam
gs
lret
loopne
data16
mov
scas
fildll
mov
sti
xchg
xchg
je
rcr
ljmp
and
add
enter
imul
push
jnp,pn
push
and
sbb
push
std
out
adc
adc
lahf
cmp
mov
dec
mov
dec
adc
stos
addr16
jno
sub
jg
loopne
out
push
sub
mov
loop
jb
and
fs
shlb
or
outsb
adc
mov
push
jle
data16
inc
jb
jnp
pop
test
sub
inc
out
jne
daa
sub
pop
ret
xor
mov
jp
xchg
pusha
xchg
mov
out
lcall
clc
scas
dec
push
cwtl
and
scas
lods
push
or
and
insl
popf
gs
jbe
mov
push
sub
adc
cmp
dec
push
add
fildll
pop
push
jle
mov
xchg
ret
inc
insb
rcl
sbb
stos
fisubrs
mov
mov
cwtl
movb
test
jge
imul
sub
and
lods
pushf
sbb
sub
cmp
je
pop
dec
out
xor
addr16
stc
xor
push
mov
jg
cmp
call
fsubl
aad
jmp
push
push
adc
sbb
bound
mov
xor
mov
lods
test
push
dec
jp
nop
fldt
les
test
gs
mov
ljmp
lea
aas
push
xchg
fbld
and
pop
mov
testb
mov
imul
jae
testb
orl
arpl
inc
iret
addr16
mov
in
rorb
mov
sbb
cmp
xchg
jns
and
dec
mov
in
add
jmp
sbb
cmp
orb
xchg
in
adc
je
lods
je
arpl
dec
push
mov
xchg
cs
hlt
cmp
clc
push
jge
mov
test
mov
jmp
enter
xchg
and
shrb
testb
mov
gs
lock
inc
mov
jo
es
lods
divl
lods
push
push
xchg
loope
mov
dec
mov
mov
jb
in
push
nop
push
jae
xchg
inc
gs
fdivl
stc
pop
push
lock
pop
out
mov
sub
add
push
sub
inc
insb
sbb
sub
movsl
mov
fistpl
and
push
inc
fidivs
cmp
fwait
push
test
popf
js
sbb
imull
cld
xchg
inc
and
jle
add
int
pop
mov
popa
xor
insb
fisttpll
jns
cmp
sbb
jo
mov
loop
xor
jb
imul
and
xlat
hlt
and
les
inc
std
sub
fdivl
cmpsb
sysret
xchg
sbb
cmp
fstpt
nop
ret
jbe
xchg
mov
clc
loope
mov
sbb
das
inc
add
std
loopne
dec
in
mov
fisttpll
and
pop
out
hlt
sarb
ds
cmpsb
inc
xlat
xchg
popa
imul
icebp
or
jmp
sbb
lds
int3
jmp
jmp
jecxz
xchg
test
pop
aas
xchg
scas
mov
pop
clc
insb
stc
test
xor
adcb
pop
fistpl
jnp
jle
adc
xchg
std
in
lret
loope
das
aad
push
adc
inc
push
lds
jge
testl
lea
mov
jge
inc
pushl
adc
xlat
push
arpl
or
fst
xchg
iret
mov
dec
push
adc
xchg
je
mov
cmp
dec
push
mov
aam
pop
or
ljmp
lea
scas
xchg
jle
shl
test
mov
mov
clc
and
jbe
nop
sub
into
xchg
lcall
mov
xchg
push
dec
ss
xchg
testb
rcr
mov
in
shl
cltd
aad
lods
aam
xchg
ljmp
and
dec
mov
mov
pushf
shr
nop
in
lds
loopne
lods
and
arpl
cmc
addr16
sub
int
out
push
rcrb
mov
xor
mov
mov
inc
cmpsl
mov
fnstenv
mov
xchg
popf
push
mov
mov
imul
xor
int
push
push
sarl
or
aaa
cmp
in
mov
pop
frstor
icebp
sbb
mov
dec
xor
adc
pusha
dec
imul
mov
xchg
cmpsb
mov
cmpsl
and
push
xor
cwtl
inc
out
test
fdivs
xchg
test
test
jns
daa
ret
pop
imul
test
adc
test
in
xchg
ds
aam
adc
jg
push
fcmove
dec
stc
mov
data16
ucomiss
movsl
dec
data16
mov
cli
outsb
in
sbb
or
test
xor
xor
push
and
pushf
in
xchg
lea
or
leave
lods
ret
les
imul
cmc
clc
outsl
icebp
bound
sbb
add
mov
jo
jae
pop
and
or
xchg
push
xor
push
mov
jge
test
adc
cli
xor
loope
adc
int3
call
das
add
inc
inc
es
jbe
xor
pop
lds
xchg
cmp
das
sub
cmp
mov
adc
clc
push
add
movsb
push
xchg
mov
cmp
xor
std
imul
jo
scas
scas
arpl
fs
fdivrp
mov
dec
mov
or
das
mov
imul
xor
lcall
rcrb
jne
shlb
jnp
shll
push
add
cmp
dec
xorl
dec
mov
mov
jnp
adc
or
out
xorl
or
das
mov
aas
sbb
and
and
push
dec
xor
xchg
push
xchg
enter
pushf
pop
adc
mov
jno
sbb
orl
xor
adc
leave
inc
push
popf
imul
adc
mov
sbb
jbe
cli
inc
imulb
mov
dec
xchg
es
lods
xchg
sar
add
xchg
or
setge
push
push
test
jne
jle
sti
add
aaa
xor
int
or
sub
sub
arpl
xchg
ret
decl
cmc
jge
ds
cmp
sahf
xlat
lods
add
fadds
jbe
clc
addr16
jne
sbb
mov
xchg
push
movsb
aas
outsb
bound
cld
pop
jo
fimull
movsl
xchg
fldenv
je
bswap
adc
lret
mov
rorb
repnz
cmp
cmp
xchg
cld
jmp
call
xchg
int3
scas
js
mov
sub
jne
leave
testl
ret
jo
inc
dec
push
jne
push
addr16
and
andl
movsb
dec
sbb
mov
fidivs
insb
mov
and
bound
xor
test
xchg
shrb
lods
and
in
hlt
mov
rcrl
mov
mov
sub
fisubrl
sub
out
mov
pushf
fldcw
out
int3
mov
mov
xchg
sti
sub
or
enter
lcall
outsb
jno
popa
aad
adc
mov
rcrl
sti
xor
cli
fstpl
mov
push
sub
xor
sub
push
mov
fists
xchg
loope
and
sbbb
pop
jmp
sahf
outsl
push
xchg
jp
les
dec
pop
into
mov
xor
ds
add
sub
jmp
inc
jl
pop
jnp
dec
mov
jecxz
dec
ja
test
mov
inc
mov
inc
sbb
add
pop
fnstenv
dec
test
les
push
add
mov
daa
adc
sub
jge
lods
xor
jge
rclb
adc
xchg
xor
sbbb
and
or
push
adc
inc
sbb
push
cmp
mov
mov
loope
cmp
mov
fiadds
mov
scas
pop
sti
xor
mov
stos
push
pop
dec
jecxz
clc
ds
pop
stos
mov
jno
repnz
sub
fidivs
xchg
iret
mov
cmp
mov
cmp
pop
mov
das
fwait
je
arpl
mov
arpl
mov
xor
enter
fwait
sbb
mov
mov
cmpsb
cmp
jbe
fsubr
pusha
push
enter
sbb
cvtpi2ps
add
mov
je
jns
in
inc
shll
sahf
sub
int3
xchg
pop
and
mov
mov
add
push
jp
push
stos
mov
push
movsb
jo
cmpl
stos
test
pop
xchg
jl
out
xchg
mov
loop
outsb
or
xchg
je
popa
cltd
xchg
bt
fucomi
das
repnz
jmp
sti
cli
in
faddl
xchg
or
roll
test
repz
mov
cld
mov
lods
cmpsb
mov
jo
ss
cmp
fnstenv
mov
jae
imul
or
mov
or
dec
add
pushf
roll
or
adc
and
outsl
jle
and
mov
jns
mov
mov
fsqrt
icebp
jl
pusha
icebp
ja
lea
sub
cmp
add
ss
rcll
sbb
mov
xor
arpl
clts
cltd
lds
dec
add
stc
lahf
ljmp
sub
xchg
xchg
pop
test
rcr
sbb
add
inc
sbb
push
mov
js
aad
negl
in
xchg
sbb
idivb
aaa
add
cli
rclb
or
and
sti
jne
jne
rorb
lds
fists
cmp
lock
sub
mov
dec
push
mov
insl
cmpl
inc
lea
lods
xchg
idivb
cmc
rorl
or
or
pushf
shrl
lock
sysexit
adc
sbb
sub
lcall
test
pop
push
sbb
sub
mov
or
inc
pop
mov
pop
jp
mov
enter
stos
jne
jbe
gs
pop
mov
sbb
jmp
lock
insb
testl
adc
jmp
fstpl
mov
jo
sub
mov
sbb
int3
int
xchg
add
in
mov
fwait
jge
cwtl
in
dec
mov
popa
out
aad
arpl
add
mov
je
out
mov
mov
adc
push
incl
cwtl
jnp
and
cmp
imul
sbb
push
scas
in
inc
addr16
sub
addr16
mov
das
sar
aas
mov
mov
mov
and
pop
jns
pop
sub
push
lahf
hlt
inc
mov
add
dec
jnp
lds
cmp
xor
rcll
test
call
popa
add
std
xchg
mov
xchg
mov
push
xor
dec
ja
pop
cs
push
adc
mov
pushf
pop
lcall
popa
pop
push
aas
add
popf
repnz
shll
les
in
fmul
subl
inc
lret
aad
sub
repz
cld
jp
test
xor
sti
xchg
gs
sarl
xor
fstpl
lret
in
das
imul
xor
sbb
into
adc
mov
into
cmp
jle
ss
hlt
aas
xchg
lret
xor
in
jge
loopne
xchg
dec
stc
cltd
dec
addb
add
loopne
mov
lea
cmp
add
sub
dec
test
mov
sub
push
cmp
in
xchg
cld
mov
mov
sub
xor
lods
or
adc
jle
push
jnp
adc
lds
pusha
adc
outsl
adc
test
ror
imulb
int3
jge
push
sub
pop
cmpsb
popf
movsb
push
lods
pop
es
mov
inc
adc
fsts
outsl
adc
adcb
mov
dec
loopne
rcl
xorb
in
nop
test
dec
mov
inc
lret
sbb
xor
testl
testl
outsl
jns
repz
mov
and
imul
adc
mov
inc
rcrb
xchg
inc
cmp
or
sub
push
nop
xchg
popf
cmc
movsl
jb
loopne
ret
ja
pop
jmp
scas
add
and
xor
mov
mov
stc
sarl
push
lret
inc
cmp
or
push
cmp
push
lahf
fadd
sahf
dec
std
lret
addl
cs
add
jns
in
sub
movsb
imul
jbe
cwtl
cmp
fsubrs
cmp
or
xchg
push
rorl
movsl
out
xor
in
in
out
cs
addr16
xor
mov
call
mov
mov
aaa
dec
xchg
xchg
sbb
lock
xchg
loop
push
pop
rcrl
fidivrl
or
jno
or
fisttps
inc
repz
stos
bound
xchg
les
iret
into
mov
adc
push
dec
mull
add
push
das
push
aad
mov
push
push
mov
test
push
push
test
cmp
out
dec
hlt
decb
icebp
mov
cmp
jno
scas
es
sbb
mov
cmp
les
push
fcompl
xor
pop
mov
fcoml
loopne
dec
ret
std
icebp
cmp
jo
push
into
imul
shrb
sbb
sub
cmp
sbb
shll
sub
adc
mov
jae
jecxz
mov
pop
pop
leave
stc
imul
test
repnz
loopne
dec
xor
pop
and
jg
adc
mov
inc
add
mov
xor
xor
push
mull
iret
loop
outsl
ror
pusha
mov
mov
daa
aam
insl
stc
xor
hlt
in
mov
aaa
test
les
add
fidivl
jnp
inc
mov
cmp
cwtl
call
ret
iret
dec
mov
fwait
mov
lea
mov
jl
xchg
mov
sub
push
xchg
pop
mov
cwtl
ds
insl
ficoms
jo
inc
jmp
cmp
jo
dec
or
inc
int
sub
jne
xchg
adc
femms
pop
pop
shlb
adc
pop
scas
sti
fisttps
push
aas
shrl
cld
rclb
push
insl
mov
push
es
push
mov
pop
sbb
sti
or
test
leave
fcomp
test
mov
dec
rcrb
mov
sbb
shll
fld
and
out
adc
mov
jg
call
and
sbb
movsl
jg
add
aas
mov
mov
mov
arpl
stos
js
fisubs
xchg
lods
pop
je
lret
cmp
stos
or
in
xor
outsl
mov
cmp
xor
insb
pop
lret
jae
movsl
test
sub
pop
fdivs
sub
mull
add
sahf
pop
popf
mov
repnz
das
ud2
test
xorb
mov
scas
aad
mov
call
ja
out
icebp
xchg
and
dec
cmp
jne
leave
out
stos
fsubr
mov
divps
bound
inc
add
or
ja
mov
pop
inc
sbb
ret
out
sub
pop
nop
adc
dec
div
dec
js
std
push
and
subl
out
dec
addr16
sbb
fnstcw
sti
mov
xlat
dec
cmp
fdivrp
or
lret
and
xor
ret
pop
lcall
or
pop
xor
add
inc
lea
aam
rorb
jl
sub
xchg
or
cs
xlat
fcom
pop
aad
xchg
adc
sbb
xchg
cltd
pop
push
lret
andl
frstor
or
push
cmp
and
cmc
popf
in
aad
frstor
or
push
cmp
and
cmc
popf
lods
lods
lods
mov
or
or
push
cmp
and
cmc
popf
in
aad
int
frstor
or
push
cmp
ficoml
inc
sti
push
jmp
repz
in
fwait
jae
out
testl
sbb
sub
ja
inc
sti
push
jmp
fwait
aaa
mov
mov
imull
cmpsb
jnp
imul
xchg
sub
ja
inc
sti
push
jmp
fwait
aaa
mov
mov
testl
pop
fisubs
clc
sub
or
push
data16
enter
stos
fsubl
adc
sbb
xor
push
adc
sbb
je
mov
or
outsb
dec
out
imul
xorl
or
xchg
push
mov
inc
out
cmpsl
mov
mov
ja
add
shlb
addr16
mov
mov
xor
push
testl
in
xchg
les
xor
jle
adc
lcall
cmpsl
sbbb
xlat
stos
hlt
or
testl
dec
ja
int
rclb
out
incl
dec
rorl
and
imul
push
mov
xchg
xchg
sub
inc
sti
push
jmp
fwait
aaa
mov
mov
testl
sbb
inc
adc
andb
inc
cmc
jb
ds
aas
test
mov
sarl
js
cmp
push
xor
pop
cltd
inc
rcll
pop
int3
outsl
stos
mov
lcall
js
pusha
xlat
pop
mov
xchg
pop
cwtl
and
ja
data16
aaa
mov
mov
testl
sbb
sub
ja
inc
sti
push
jmp
fwait
aaa
mov
mov
testl
sbb
sub
jb
lret
lods
push
push
inc
jp
mov
mov
jne
inc
inc
mov
push
lods
xor
lock
jmp
xchg
mov
sub
fistl
xor
cltd
mov
dec
jge
jnp
mov
mov
mov
xchg
test
or
mov
fidivrl
xor
sti
icebp
and
imul
out
out
inc
sub
loopne
sub
add
mov
pop
ror
push
pop
popf
mov
inc
jl
lret
dec
pop
negb
mov
js
clc
rol
cmp
negl
cs
or
rorl
jg
test
dec
push
pusha
pop
outsb
inc
shll
adc
mov
daa
insb
sbb
xor
mov
lock
push
scas
push
sbb
add
sarb
sub
ror
jb
inc
ror
sbb
sub
out
repz
xchg
sub
jmp
loope
push
dec
xlat
jge
push
cmp
and
aam
mov
popf
std
loope
sub
and
loop
xchg
stos
test
pusha
test
lods
dec
and
cwtl
call
xchg
repz
repnz
jnp
shlb
dec
fcomps
push
rcrb
dec
mov
mov
push
out
inc
pop
inc
mov
cs
xor
jp
filds
lods
cld
out
pop
mov
pop
sbb
cmc
inc
mov
push
nop
mov
push
stos
in
xorb
push
imul
cmp
lret
aad
jnp
fs
xor
cltd
ret
lret
adc
or
fbld
lcall
mov
loope
jle
popa
repnz
jo
mov
jecxz
inc
cltd
rcr
sub
mov
xor
sub
das
das
add
bound
dec
repnz
mov
loope
aas
jg
push
or
aad
pop
lods
std
mov
cltd
inc
sahf
movsl
fdivs
xor
inc
stc
push
xchg
pop
adc
and
cmpsl
xchg
xor
insl
pop
and
jno
out
bound
in
enter
fwait
subb
repz
add
sub
mov
ret
arpl
pop
add
push
out
std
pop
test
and
jne
inc
arpl
mov
cmpsb
fwait
dec
fcomip
adc
dec
and
sub
icebp
daa
icebp
pop
xlat
lret
imul
pop
mov
mov
mull
cs
cmpsl
xor
push
das
mov
insl
xor
cmpl
out
add
add
adc
aam
mov
mov
sti
popa
mov
mov
jp
ljmp
das
loop
mov
ja
lret
mov
das
icebp
outsl
ds
jno
push
dec
cmp
mov
shll
cmp
jno
xor
test
jbe
filds
xchg
js
rcrb
test
aam
loope
test
dec
and
dec
xchg
loop
outsl
les
ret
or
outsb
ds
pop
xchg
and
iret
scas
xor
pop
xchg
roll
pop
clc
sub
push
or
aaa
cmp
out
add
mov
imul
push
pop
lcall
adcb
clc
mov
sbb
ret
movsb
aam
jns,pt
adc
mov
add
stos
jnp
cmp
mov
enter
stos
or
shrb
out
aam
leave
cltd
cmp
mov
shl
sahf
jbe
sbb
fmul
cmp
add
outsl
jb
jbe
push
sub
sub
mov
jl
xchg
mov
es
xchg
mov
mov
ljmp
inc
inc
or
sbb
xchg
cmp
push
adc
pushf
mov
xchg
cmp
mov
cmp
icebp
inc
sub
hlt
jl
fldt
popa
lcall
adc
mov
inc
sbb
pop
or
mov
addl
movsl
and
jle
loop
call
int
sahf
scas
cltd
and
add
inc
in
int
jg
pop
bound
add
mov
fidivrl
imulb
nop
inc
es
push
sub
negb
data16
ja
rcr
data16
in
or
or
lahf
jno
and
sarb
jg
sbb
inc
data16
lock
outsl
xchg
pusha
ds
inc
pop
or
ret
sub
fsubp
adc
aas
outsl
mov
push
add
mov
inc
xchg
daa
arpl
sar
jge
data16
fcmovnu
sub
pushf
iret
int
fistps
popf
cmp
lret
ds
inc
lds
jne
aam
cmp
adc
movsl
out
sbb
loopne
jnp
sbbl
and
loopne
or
inc
sti
hlt
pop
stc
jnp
push
insl
push
and
dec
or
test
pop
cld
mov
add
sbbb
daa
out
jp
and
dec
or
xchg
stos
fisttpll
orl
int
ret
add
int
cmp
in
and
adc
and
sar
movsb
js
sti
shl
fwait
gs
scas
bound
xchg
aam
adc
add
mov
cmp
icebp
or
mov
jbe
das
in
setne
push
mov
cmp
or
nop
cltd
cmp
pop
jb
pop
fs
loopne
jae
sar
mov
xchg
adc
pop
into
or
cmp
sahf
fcomip
cs
into
jmp
stc
imul
adc
mov
outsl
sbb
pop
iret
notl
sbb
add
lods
dec
fdivs
pop
lock
jne
lds
shl
mov
loop
cmp
lea
pop
aam
sub
addr16
dec
and
xchg
in
jge
cs
js
push
hlt
mov
hlt
call
repz
add
in
xchg
negb
enter
into
lret
lods
and
loop
jp
pop
inc
sbbb
sahf
cld
fs
jo
jg
add
sub
cld
jae
mov
push
in
cli
xchg
pop
fs
mov
jno
jmp
mov
inc
sbb
pop
add
cmp
mov
inc
movsl
push
mov
and
inc
les
xlat
lea
mov
in
push
pop
sub
inc
dec
mov
cld
sbb
fucomip
movd
pop
mov
jnp
hlt
arpl
and
adc
jb
xor
sbb
aas
test
insb
inc
sbb
loope
jge
cmp
rcll
push
sub
jno
hlt
xchg
push
pop
pop
and
pop
dec
inc
push
loope
inc
ret
sbb
cmpsl
in
cs
movsb
cmc
ret
xchg
fsubrs
jnp
shll
inc
add
aaa
cmp
xchg
cmp
xchg
dec
mov
ss
xor
ret
push
and
mov
and
xlat
sti
ss
inc
outsb
and
push
pop
dec
jb
inc
xor
jne
pusha
jl
push
jbe
push
dec
imul
and
dec
jmp
mov
out
mov
testl
sbb
insl
cmp
mov
data16
mov
sbb
test
xchg
jne
ds
sbb
xor
aaa
and
mov
jmp
mov
and
mov
test
mov
sarl
jae
push
sub
jnp
cltd
orb
jns
xor
mov
into
fisttps
mov
in
test
push
int3
adc
mov
dec
push
pop
popf
stos
decl
adc
popf
addr16
dec
testl
lret
in
jb
lcall
cld
jnp
cmp
sub
jae
mov
dec
sbb
or
jae
stc
pop
mov
mov
push
xor
in
or
and
into
mov
rcrl
adc
mov
insl
pop
sub
leave
pop
xchg
lods
mov
xchg
cmp
mov
and
mov
sbb
out
lahf
shrl
push
push
mov
enter
test
push
jle
in
cmpsl
imul
xchg
sbb
push
iret
mov
in
push
cltd
arpl
inc
aad
xlat
cli
and
es
mov
aaa
xor
adc
std
adc
sahf
or
jle
fcmovnbe
push
lock
nop
xchg
sub
and
mov
xchg
or
or
push
jle
adc
in
out
shrl
movsl
jl
shrl
scas
mov
inc
cwtl
leave
insb
sub
push
dec
ja
cmp
push
arpl
imul
pop
rcrb
aas
dec
lods
jge
into
inc
jne
dec
jns
jmp
add
xor
xor
xor
xor
add
rclb
pop
add
lods
fnstcw
pop
adc
aad
dec
mov
xchg
jle
and
int3
in
insb
into
or
das
pop
idivl
shrl
pop
xor
mov
jmp
fsubl
movsl
mov
inc
mov
mov
lahf
sub
je
mov
in
les
loope
xor
in
in
and
inc
in
mov
jge
mov
in
add
inc
mov
popa
mov
imul
int
inc
test
in
aad
mov
ds
sarb
xchg
pop
pop
jne
add
push
jb
push
pushf
adc
loop
xor
xlat
ljmp
jnp
repz
imull
sbb
es
dec
loope
pop
sub
test
xchg
push
lea
clc
jnp
mov
sub
mov
add
int
in
lahf
pop
sub
nop
or
loopne,pn
and
notl
out
js
jnp
mov
add
pop
mov
pushf
pop
xchg
fisubs
mov
xchg
add
mov
rorl
add
pusha
out
pop
stos
stos
cmp
jle
mov
les
push
sub
mov
cmpsl
mov
adc
or
pop
mov
push
and
aad
dec
jb
mov
push
mov
jae
cmp
in
cltd
sub
ds
cmp
aad
jno
shr
out
push
clc
mov
push
test
repnz
mulb
fisttps
test
mov
fists
mov
out
dec
adc
inc
lret
adc
xor
pop
leave
inc
and
and
jg
test
dec
das
cld
lahf
mov
add
mov
xor
imul
xlat
mov
stc
aam
xor
pushf
fdivrp
jae
fdivs
aam
mov
lcall
jecxz
xchg
add
aam
mov
imul
xor
icebp
outsl
out
lret
addr16
or
inc
aam
repnz
test
pop
push
xchg
in
push
mov
mov
push
sbb
lock
icebp
dec
les
sbb
sub
push
dec
repnz
arpl
cltd
into
incb
xchg
mov
jo
and
leave
push
in
cltd
out
es
push
popa
jo
push
adc
pop
aad
adc
out
push
push
dec
nop
sub
mov
push
out
and
lds
xchg
psubsw
cli
stos
sub
adc
jp
push
int
adc
push
dec
les
ret
dec
negb
cmp
addl
mov
int
rol
lods
pop
adcb
out
fisttpl
mov
xor
xchg
jns
sahf
das
xor
push
fsubr
xor
pop
shlb
jbe
mov
inc
mov
lret
imul
adc
and
jae
sbb
lods
gs
repnz
dec
mov
pop
addl
xchg
dec
adc
in
jnp,pt
push
out
jae
push
xchg
inc
ljmp
leave
or
test
mov
jo
pop
adc
dec
sahf
xchg
dec
xchg
fstp
xor
push
js
mov
es
cmc
or
sarb
mov
cmpsb
xchg
sbb
lea
in
inc
adc
jnp
mov
lods
or
aaa
dec
adc
push
outsb
fldcw
into
pop
lods
xchg
mov
ret
scas
popf
or
push
decl
iret
adc
mov
dec
jb
mov
or
mov
cmc
jg
in
pop
cmp
bound
mov
insl
repnz
cld
xchg
data16
adc
es
leave
push
int
out
nop
lret
cmpsl
in
jmp
in
arpl
inc
push
pusha
mov
sub
xor
pop
aad
lods
mov
sbb
sbb
adc
xor
cmpl
add
push
mov
fadds
pop
mov
push
pop
hlt
sti
icebp
or
push
pop
jge
cli
or
inc
jb
mov
inc
dec
stos
dec
mov
jno
ret
or
je
inc
jae
lret
mov
inc
loop
mov
sbb
push
push
jl
mov
jne
adc
mov
mov
in
aad
enter
and
addb
mov
stc
in
imul
fstl
and
cmc
add
idivl
xlat
ds
gs
push
or
fsubs
mov
hlt
sti
lret
popl
and
shlb
hlt
es
push
in
les
xchg
iret
lret
pop
cmp
or
jno
nop
popa
mov
inc
dec
cltd
mov
stos
aam
cmc
fcompl
nop
aam
lahf
movsb
xor
mov
xlat
jg
xchg
jl
insl
xchg
std
stc
mov
sbb
xchg
and
fcomip
jbe
arpl
repz
mov
scas
lret
in
jge
loope
adc
inc
unpcklps
lahf
nop
add
fidivrl
mov
js
dec
add
aaa
jg
push
add
inc
pop
pop
imull
mov
insb
jle
mov
notb
clc
addr16
dec
push
add
repnz
jno
inc
aad
mov
je
mov
ret
sbb
mov
mov
xor
pushl
in
push
scas
icebp
cmp
xlat
mov
push
inc
sub
mov
fisttpl
mov
pusha
sti
pop
mov
add
shrb
cmp
stc
nop
xchg
xor
push
inc
jp
inc
icebp
popa
pop
xchg
popa
or
rcrl
rcr
mov
jnp
add
mov
into
ret
shlb
and
pop
aad
mov
push
push
shrl
out
cmpsl
fildl
aad
dec
ja
xchg
dec
cltd
mov
push
stc
sub
mov
orb
pop
adc
or
add
mov
pusha
cmpsb
imul
adc
push
rcll
xor
cld
adc
inc
xor
cmp
jmp
xchg
push
das
cs
fisttps
lret
test
fxrstor
mov
sub
or
jbe
jne
jecxz
in
ds
xlat
mulb
jecxz
dec
cmp
xor
rolb
hlt
jo
and
movsb
push
mov
mov
orl
xor
or
test
jne
pop
sahf
leave
xchg
lods
mov
hlt
pusha
stc
xor
mov
pop
sub
mov
aas
lahf
add
cmp
jmp
mov
pop
jnp
push
add
xor
stos
inc
xor
loope
mov
jg
xchg
and
and
pop
and
mov
jb
sub
clc
enter
dec
andb
das
out
sbb
mov
lret
xlat
test
sub
pop
cmp
repz
imul
cmp
cmpsl
jb
mov
mov
dec
adc
mov
fldenv
pop
lcall
lahf
xchg
xchg
fistpll
or
test
mov
xchg
mov
in
loopne
ret
fdivrs
dec
aaa
testl
cmp
int
stos
fcomp
daa
mov
fisttpll
lock
sub
aaa
arpl
mov
clc
and
lret
dec
repnz
fdivrl
lret
mov
dec
xor
cmp
dec
pushf
ret
dec
or
sbb
mov
xchg
pushf
add
sahf
xor
insb
nop
push
mov
jmp
mov
cmp
sub
sub
sbb
jecxz
aam
subb
xor
jnp
push
pop
adc
inc
cmp
cmpsb
jne
mov
in
mov
outsl
fists
jmp
lret
imul
lods
addr16
xor
in
in
repnz
lahf
repnz
loopne
mov
outsl
mov
mov
loopne
gs
mov
adc
mov
sub
punpcklwd
mov
add
scas
sub
pusha
hlt
shlb
stc
or
outsl
mov
sub
bnd
mov
out
incl
int3
inc
pushf
fsubl
push
dec
iret
inc
jmp
xor
mov
ret
dec
add
sbbl
ret
shl
aam
in
inc
jg
inc
inc
mov
cli
out
cs
xchg
pushf
mov
jb
mov
cli
mov
out
or
push
jecxz
cmp
sbb
mov
mov
les
adc
sbb
mov
dec
pop
das
xchg
xchg
lret
lret
cltd
xchg
push
sbb
les
insb
hlt
adc
jmp
mov
adc
pop
push
jl
nop
mov
je
pushf
mov
js
mov
xchg
dec
icebp
lcall
div
scas
and
outsl
movsb
pop
cld
inc
jmp
lock
sbb
xchg
or
test
ja
lock
rcrb
adc
outsb
add
cmpsb
mov
inc
mov
arpl
pushf
xchg
pop
rolb
lcall
lcall
es
enter
movsb
xchg
xorb
test
imulb
lods
fwait
xchg
jno
mov
add
mov
xchg
sbb
fdivl
jnp
stc
jg
repz
stos
cmp
and
insb
scas
cs
or
mov
fisubrl
imul
cwtl
std
xor
add
inc
xchg
dec
cmp
lret
jle,pn
mov
lahf
xchg
add
insl
mov
jle
nop
jae
push
inc
inc
mov
xchg
pop
pushf
jg
or
jne
shlb
and
mov
add
ret
push
daa
fwait
xchg
xchg
mov
nop
xor
inc
cmp
fsubl
shrb
and
imul
mov
out
fs
sub
iret
cmc
push
mov
adc
lea
push
mov
add
and
xorb
jmp
xchg
ja
jns
icebp
into
cmp
adc
cmc
mov
push
jmp
fistpll
stos
daa
jge
lods
jae
adcl
in
test
cmp
mov
cmp
sbb
stc
arpl
dec
dec
lock
add
cli
pop
ret
mov
ret
sar
fdivs
dec
cmp
sub
stos
clc
cs
jge
add
ja
cmpsl
lds
sahf
push
sbb
addr16
pop
je
mov
dec
pop
clc
pushf
loop
xor
dec
and
inc
inc
cmp
push
jb
cli
xchg
jp
les
fimuls
mov
add
andb
and
xor
cmpsl
mov
inc
dec
add
hlt
mov
mov
cmp
mov
jle
xchg
int3
lahf
lret
or
mulps
sub
inc
fwait
cmc
rep
add
cs
sbb
jg
inc
mov
mov
jnp
cmp
hlt
cltd
shrl
xchg
push
push
cltd
ret
sub
testl
ret
and
and
or
iret
das
jle
pop
cltd
xor
lcall
jg
or
je
push
sub
loop
repnz
rcr
cmc
les
lds
cmp
xor
dec
mov
mov
daa
cli
push
rorb
mov
pop
push
jb
and
sarb
push
leave
ret
fcmovu
idiv
ret
xor
mov
cmc
add
ss
ret
pop
cmp
enter
jle
rcr
push
pop
scas
test
mov
sub
adc
xorb
cmp
cmp
loop
mulb
lds
cmp
and
sub
mov
adc
je
mov
fsubp
push
aas
imul
mov
int
fwait
scas
cwtl
mov
hlt
shl
inc
jle
ficoml
add
sbb
jae
add
inc
pop
scas
popf
sub
lretw
push
add
sbb
xor
repz
xchg
xchg
inc
pop
inc
jle
popa
hlt
inc
test
movb
mov
mov
shlb
cwtl
pusha
jge
dec
push
fwait
sbb
push
mov
movsb
notl
fdivp
loopne
mov
or
cmc
insb
test
sbb
push
push
popa
xor
es
jns
xor
sub
jns
or
and
arpl
enter
sahf
bound
xor
xor
testl
mov
inc
aam
adc
in
pop
dec
adc
mov
cmp
lret
jne
lods
jnp
sbb
mov
sub
jae
pop
das
lahf
inc
data16
adc
ret
ljmp
cmpsl
sbb
xor
addl
dec
xor
rorl
insb
or
jno
rorb
lea
mov
mov
mov
jmp
fwait
aaa
mov
mov
testl
sbb
sub
ja
inc
sti
push
jmp
fwait
aaa
mov
mov
testl
sbb
sub
ja
inc
jnp
jmp
fwait
aaa
or
mov
testl
sbb
sub
jbe
inc
sti
push
jmp
fwait
aaa
mov
mov
mul
insl
jnp
sbb
xchg
aas
hlt
js
push
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
dec
je
fwait
push
ljmp
leave
or
pop
call
dec
lcall
mov
push
lret
sbb
sub
cmp
fmuls
fcomps
call
sub
jnp
xchg
inc
fwait
jo
pusha
mov
xor
cmp
shr
sti
and
or
xor
and
push
xor
sbb
jmp
andb
popa
das
mov
addr16
mov
leave
cmpsl
ficoml
and
inc
and
and
dec
mov
repz
push
cmp
into
mov
test
inc
ss
movsb
sbb
hlt
ds
popf
pushf
mov
fcmovnbe
xchg
jne
mov
pop
test
mov
fwait
mov
jmp
sbb
mov
add
pop
ftst
pop
les
cwtl
movsb
and
mov
jp
push
cwtl
pop
imul
add
gs
push
sbb
outsb
or
jo
cwtl
push
imul
das
stos
xchg
icebp
sbb
fcmovnbe
xor
or
xchg
ds
int
lret
cs
mov
mov
js
pop
lret
or
sub
and
rcll
rolb
xor
and
imul
or
popf
jle
xchg
xchg
enter
fwait
jle
push
mov
std
or
imul
daa
repz
fs
imul
pop
mov
xor
pop
fcompl
sub
lret
inc
cmpsl
sbb
sub
cmp
enter
call
dec
cwtl
pop
test
mov
fwait
push
lret
sbb
sub
cmp
enter
call
dec
cwtl
pop
test
mov
sbb
mov
test
imulb
lmsw
xchg
jo
jb
xchg
int
mov
push
je
xor
push
cwtl
add
adc
mov
or
adc
xchg
push
imul
pusha
nop
mov
addr16
in
push
bswap
adc
rorb
jbe
xor
imul
push
dec
xchg
jns
mov
in
jg
add
ljmp
outsb
popf
xor
leave
sub
loope
repnz
cmp
outsb
stos
cwtl
inc
int
cmc
mov
add
dec
pushf
daa
pop
jge
cmp
jp
add
or
push
jae
pop
push
ret
loop
arpl
insb
sub
or
mov
jecxz
call
lea
mov
xchg
mov
mov
inc
jnp
test
lret
mov
call
inc
shl
sub
lods
into
out
push
sub
inc
mull
and
es
push
addb
in
push
sbb
jns
push
divb
xchg
sub
cwtl
jecxz
cmp
mov
xor
repz
cmp
sub
mov
ljmp
aam
lods
jbe
jne
push
fiadds
inc
fisubl
xchg
sub
aam
mov
mov
movsl
sbb
mov
iret
pushf
icebp
add
mov
lods
mov
and
and
enter
dec
mov
dec
shr
shl
jge
inc
mov
std
jle
imul
sub
cmp
shrl
in
cwtl
stos
jle
hlt
scas
pop
aas
bound
pop
loopne
or
sub
fbld
lods
sbb
push
lret
in
mov
loope
mov
sbb
xlat
mov
mov
je
xchg
pop
push
dec
ljmp
jbe
sbb
fmull
mov
aaa
aam
insb
fistpl
xor
jle
loopne
sarb
xor
sub
dec
cmp
or
push
xchg
es
mov
outsl
and
out
shrb
inc
jae
jle
sahf
cmpsb
push
xor
sahf
mov
into
dec
push
fsubl
cltd
int
out
jp
addl
insl
cmpsl
inc
shr
mov
and
repnz
pusha
dec
dec
shr
xor
mov
shlb
jg
in
sarb
mov
int3
pop
enter
popf
mov
int3
movsl
imul
sub
pop
xchg
xor
mov
ret
inc
push
addr16
push
xor
mov
fwait
dec
jo
or
dec
fldl
jl
xor
jne
sti
lea
les
push
adc
mov
add
stos
mov
sbb
stc
test
stc
fsubr
push
rolb
repnz
inc
rcll
or
fadd
cmp
cmp
mov
xchg
sub
shrl
rcll
adc
bound
rcrl
mov
xchg
mov
or
fcompl
test
sbb
shr
mov
dec
outsl
scas
cmp
mov
addr16
fsubrs
cmp
stc
pushf
sbbl
dec
mov
push
repnz
arpl
mov
aam
in
js
bound
pop
jmp
xchg
adc
xorl
lock
xorps
push
inc
cmp
mov
aaa
xor
scas
inc
ret
push
mov
iret
inc
push
lea
shrl
aad
in
adc
inc
push
or
mov
inc
sti
adc
sbb
push
push
or
add
xor
mov
adc
and
or
jb
push
dec
orl
aas
fs
cltd
add
test
das
cmp
stos
aaa
xchg
fwait
add
sarb
ret
mov
int
adc
fs
push
sti
xchg
pop
fcompl
mov
xchg
sub
cltd
incl
mov
rclb
adc
mov
lea
sbb
jmp
fmul
inc
pop
dec
aas
push
xchg
jno
filds
das
cmp
push
outsb
fldl
out
fdivr
and
fsts
inc
cmp
xchg
mov
repnz
dec
mov
push
pop
xor
sbb
call
mov
push
sahf
adc
in
cld
pop
add
insl
adc
insl
xor
and
test
push
dec
xchg
notb
push
or
lret
jb
mov
mov
inc
popa
mov
sbb
add
xor
int
cmpl
cmp
enterw
dec
aaa
jg
fmull
xlat
adc
loope
lods
rcl
lea
mov
ds
loope
dec
ss
and
in
fistpl
int
js
jb
insl
xchg
pop
hlt
pop
idiv
xchg
mov
adc
mov
es
subl
push
push
scas
inc
jmp
mov
pop
and
aas
lds
scas
xchg
into
into
jno
cmc
cmpsl
js
push
cltd
xor
aas
and
je
mov
lahf
add
dec
fsubl
frstor
push
ljmp
jo
fisttps
fsubrs
sbb
mov
aaa
iret
es
dec
xor
in
arpl
adc
mov
sbb
jle
mov
fucomi
pop
pop
fsubs
push
pop
xchg
dec
push
sti
jmp
enter
pop
addr16
ljmp
and
lods
outsb
adc
add
bound
aam
mov
xchg
cmp
add
imul
adc
push
or
lods
loope
cmp
insl
aas
cmp
sbb
nop
add
mov
xor
xor
add
mov
adc
jb
in
popf
test
mov
xchg
ss
jne
pop
orb
repnz
ret
xor
and
lret
xor
dec
movsb
fcoms
pop
xor
pop
jae
cmp
scas
mov
xchg
push
outsl
sarb
mov
fdivr
push
cmpsb
or
std
jb
cmp
arpl
je
rcrb
lahf
mov
rcll
insl
fs
mov
jmp
inc
adc
push
xchg
dec
lret
inc
in
aas
lret
sbb
out
push
test
pusha
andb
pop
popa
ret
mov
fdivrl
in
inc
test
ljmp
push
aaa
ss
pop
xor
dec
es
ljmp
add
and
push
icebp
dec
pop
dec
jnp
or
call
mov
mov
adc
aas
jle
mull
fs
out
or
aaa
mov
rorb
inc
jnp
cmpsl
push
leave
bound
push
push
dec
mov
and
jl
adc
and
jmp
repnz
pop
icebp
pop
pop
inc
cmp
addr16
sbb
mov
xor
lods
leave
mov
popf
out
xor
mov
jns
pop
sub
or
mov
clc
sbb
fmull
mov
mov
lahf
inc
mov
lret
addr16
into
mov
jb
mov
or
jb
rcll
mov
pop
out
icebp
mov
fildll
test
stc
cld
jg
push
jno
inc
pop
pop
push
fwait
and
test
imul
cmp
push
jno
std
decl
call
adc
imul
fisttpl
fisttps
sbb
ror
lods
pusha
jbe
pop
fs
rcrl
js
xorb
cltd
lods
mov
out
xor
mov
roll
cmp
jg,pn
outsb
dec
stos
cmp
rorb
pusha
mov
lods
cmp
adc
rorl
mov
inc
and
mov
int3
xchg
addr16
mov
ljmp
fsubs
xchg
shll
lods
dec
jge
mov
movb
mov
xchg
sbb
cs
push
add
shr
xor
fisubrl
clc
push
test
push
add
stos
scas
dec
negl
gs
popf
or
adc
aas
faddl
adc
es
je
sahf
and
pushf
iret
mov
xor
pop
dec
aam
sti
aam
add
sbb
lods
into
jno
mov
pusha
out
sti
pushf
push
inc
jns
in
repz
xchg
mov
add
dec
push
push
mov
pushl
repnz
pop
in
mov
jns
sub
call
jle
lahf
enter
fmulp
out
cli
jecxz
cli
cmp
and
cmp
dec
dec
dec
imul
fisubrs
imul
ret
lods
enter
and
in
push
cmc
sbb
mov
sub
and
bound
cmp
mov
add
cmp
shrb
out
dec
xchg
pop
test
cmpb
fistpll
pop
lea
cmp
push
xor
jle
xchg
adc
pop
cmp
data16
push
arpl
inc
jns
push
nop
stc
pop
call
pop
in
test
xor
hlt
mov
add
sbb
and
pop
nop
pop
push
inc
mov
xchg
daa
jmp
lds
rcrb
dec
mov
testb
dec
test
adcl
mov
mov
mov
imul
sbb
cli
mov
shrb
or
cmp
and
xor
mov
enter
ljmp
push
scas
insl
add
stos
or
iret
lahf
movsb
or
xor
pop
mov
push
sbb
sub
aad
pop
test
in
fmul
xchg
les
mov
aaa
inc
lea
fiaddl
adc
fcoms
in
icebp
sbb
xchg
lods
adc
cli
jns
lcall
clc
shl
dec
xor
jmp
cmp
mov
movsl
jno
inc
ss
mov
sti
fsubl
mov
and
jnp
shl
cltd
dec
mov
sbb
je
push
pop
jmp
imul
jg
andl
inc
push
lds
inc
pop
mov
xchg
or
fwait
rcr
push
push
dec
sub
push
cmp
or
sbb
and
push
cli
bound
sub
aam
jecxz
daa
jp
mov
test
pop
sub
mov
negl
stos
or
mov
js
andl
repz
pusha
fsubrs
fistl
ss
sti
in
in
add
xchg
in
xor
mov
dec
insl
jmp
addr16
pushf
jl
out
lods
cmp
xchg
int
data16
and
jnp
pop
fcomp
or
push
sbb
or
fnstenv
jl
bndstx
dec
pop
jmp
shrb
inc
movb
pop
leave
add
mov
outsb
dec
test
cmp
lret
pop
int3
xor
xchg
jmp
scas
dec
stos
rcrl
add
push
and
mov
fnsave
sbb
div
push
in
and
push
inc
popf
and
mov
push
sbb
xchg
cmp
test
in
outsb
pop
repz
sub
fcoms
push
mov
cmp
xor
mov
sbb
pop
xor
sub
clc
pop
push
repz
rclb
mov
dec
or
pushf
jb
mov
je
dec
mov
imul
adc
xchg
pop
xchg
les
or
pop
hlt
jecxz
mov
and
dec
mov
imul
out
aam
or
cli
xor
addr16
xchg
test
jb
add
sbb
xor
xor
push
stc
mov
lds
test
test
adc
andl
in
pop
sub
add
inc
mov
sti
xor
or
push
imul
mov
stos
mov
pop
decb
add
adc
sbb
or
rolb
arpl
lea
or
sbb
out
xchg
lock
or
int
mov
fdivrs
jge
cwtl
insb
or
arpl
mov
inc
mov
mov
add
mov
pop
xchg
cmpsl
mov
test
jo
mov
jg
sbb
xor
lods
sti
lods
nop
mov
mov
movsb
mov
mov
or
dec
cwtl
sti
lret
pop
test
lcall
mov
mov
test
lock
mov
adc
and
in
push
repnz
call
xor
add
mov
roll
stc
pop
jne
and
push
jl
mov
js
pop
fstpl
repz
xchg
jmp
dec
inc
xchg
gs
or
inc
push
lcall
ja
es
mov
cmp
push
cltd
pushf
andb
pop
and
add
popf
addb
xchg
aad
scas
mov
xchg
dec
leave
adc
pop
push
inc
cmp
roll
out
push
mov
clc
jbe
sbb
inc
sarb
call
add
jl
mov
clc
mov
js
divl
in
imul
out
pop
or
push
cs
or
stos
das
inc
fsubs
push
xor
bound
xor
cmpsl
add
in
js
je
mov
out
in
sahf
jg
mov
addr16
fisubrl
test
cmpsl
insl
cmp
push
into
jnp
mov
repnz
in
add
std
mov
or
sub
popf
sbb
add
out
call
frstor
sarb
jp
mov
mov
fsub
sub
clc
pushf
jle
and
std
xchg
xor
or
loopne
xor
popa
les
push
into
mov
and
mov
test
xchg
mov
adcl
pushf
mov
fildll
or
adcb
and
adc
cmp
adc
addl
xor
add
mov
nop
jb
insb
in
adc
call
xchg
icebp
cmpl
mov
pop
jge
adc
testl
add
push
mov
cs
ss
lahf
xor
or
xchg
cmp
mov
or
insl
or
call
add
in
shlb
pushf
int3
or
adc
jae
fdivrp
sbb
sti
fisubs
push
stos
lret
mov
int
pop
sub
push
aas
in
mov
mov
or
dec
fsubs
cmpsl
jmp
in
into
cmc
sbb
loop
fidivs
dec
cmpsl
jmp
shll
and
lret
loop
ljmp
mov
ret
stc
je
pop
push
sub
xchg
sub
das
add
xor
ss
xor
xchg
ss
push
in
xchg
call
sbb
sbb
or
out
sbb
push
cmp
loope
or
test
nop
in
arpl
mov
mov
push
mov
push
sbb
in
or
int3
in
leave
xor
push
movsb
pop
dec
mov
sub
xchg
cld
add
loopne
xor
sub
enter
imul
jmp
loop
push
mov
inc
inc
adc
addr16
shll
popf
xchg
aas
stos
lods
dec
aaa
les
jno
xchg
test
and
imul
aaa
jle
and
enter
and
loop
jne
mov
adc
data16
adc
and
or
jae
mov
pop
mov
dec
ljmp
and
loopne
push
jecxz
rep
dec
imul
adc
ljmp
cmpsl
cmp
add
jbe
or
pop
ret
dec
sbb
ds
aas
mov
aaa
ficoml
cmp
mov
shlb
adc
mov
inc
addr16
fstl
mov
sbb
jo
sti
mov
sub
call
dec
jl
in
and
cld
shll
pop
stc
cmp
in
and
aaa
mov
std
in
mov
jge
imul
lods
stos
iret
fwait
and
cwtl
dec
loop
mov
sbb
repz
xorb
mov
xlat
in
andb
add
xchg
addr16
dec
fisttpll
jnp
std
push
in
out
push
mov
mov
jg
xchg
les
je
ja
sbb
ret
xorl
test
movl
jg
lcall
add
xor
test
cmpb
ljmp
gs
or
xchg
lahf
or
pop
popa
add
in
inc
int3
ret
nop
mov
shl
mov
jbe
pop
mov
sub
jae
xor
inc
inc
jecxz
sub
mov
dec
leave
xchg
pop
jl
add
shl
cli
aas
xadd
cmp
data16
xchg
mov
xorb
mov
dec
xchg
xor
addl
mov
inc
dec
call
jns
sub
lods
repnz
mov
xor
xor
clc
ss
cmp
in
insb
cmp
pop
stc
xor
push
mov
lods
mov
adc
sub
xchg
fdivrs
xor
cmp
popa
push
out
sub
dec
mov
push
xchg
pop
out
mov
popa
cmpsl
jae
cmp
push
les
mov
shll
mov
push
mov
rcrb
jne
iret
adc
dec
pop
mov
sub
pop
and
cmpsl
sub
je
hlt
jo
cld
push
pop
daa
xchg
xor
xor
lds
je
mov
inc
mov
jg
mov
inc
sub
jnp
mov
adc
out
sub
sub
test
mov
fwait
xor
fstpt
push
mov
pop
and
dec
adc
jle
dec
cld
adc
xabort
xchg
xchg
push
xchg
jmp
xor
ljmp
in
pop
sbb
in
outsb
jnp
pop
jp
sbb
ret
ret
clc
popa
std
mov
addr16
mov
push
fmul
inc
lods
std
jl
mov
insb
mov
outsb
xchg
push
xor
mov
jecxz
sti
sub
xor
mov
jp
cmp
xor
shrb
mov
xchg
ret
adc
inc
and
mov
pusha
repz
dec
cld
or
mov
call
dec
jae
jae
leave
jae
into
or
cmpsb
lea
stos
mov
cmp
imul
sbbl
les
push
je
inc
mov
sbb
mov
inc
addr16
not
push
int3
jno
sbb
mov
sahf
lea
lret
fiaddl
jnp
les
cmpsb
pop
shlb
int3
cmpsl
pop
dec
out
push
inc
xor
cmpsb
jle
repnz
inc
stos
lahf
fiaddl
xchg
lea
out
nop
mov
mov
dec
es
subl
outsb
push
fildll
mov
ds
mov
pop
mov
test
pop
add
cmp
dec
push
leave
xor
repz
mov
pop
push
mov
stos
add
fsub
inc
push
in
cmp
and
outsl
arpl
pop
sbbb
lret
jbe
jge
movsb
inc
jo
cmp
cmp
sbb
fidivl
ja
aad
sbb
inc
jo
test
sbb
adc
es
inc
xchg
repnz
jae
ror
sub
adc
imul
mov
test
and
xorl
sub
fnstcw
addr16
dec
and
inc
mov
pushf
sarl
dec
icebp
lods
rorb
sub
or
aam
shlb
cwtl
mov
push
cld
xor
popa
pop
cmpsb
ds
sti
pusha
int3
add
push
cltd
fiaddl
out
lock
dec
repz
pop
sbb
in
jle
cmp
rcrb
aad
jo
xchg
outsl
push
or
outsl
daa
repnz
popa
fs
adcb
mov
std
idivl
shrb
sub
inc
inc
dec
mov
das
cmp
push
pop
ret
fs
pushf
nop
popf
dec
pop
jb
cs
dec
jb
fisttpl
ja
mov
int3
cli
fidivrl
dec
stos
inc
xor
pop
or
mov
fidivl
outsl
mov
popa
pop
out
add
sbb
pop
das
insb
mov
cmp
xor
mov
push
movsb
lret
sub
fcoms
inc
fnsetpm(287
xor
cltd
lahf
push
xchg
lods
loope
push
imull
rorb
cmp
lea
outsl
add
popf
sti
xchg
lods
lcall
pop
int3
out
mov
imul
imul
fcoms
cmc
xor
cltd
inc
inc
repz
mov
sahf
test
clc
push
jl
push
inc
sbb
roll
je
rcll
lahf
jl
int
das
in
ja
ljmp
faddl
and
add
jns
xchg
addr16
enter
jns
mov
fwait
pop
push
subb
jns
aas
jne
dec
sub
cld
add
repz
sub
push
in
int3
push
and
mov
ljmp
enter
fdivrl
xchg
sbb
jne
and
pop
jno
cmc
insb
cwtl
xor
enter
orl
popf
int
stos
les
pusha
lret
negl
aam
enter
mov
aam
hlt
rol
pop
popf
pop
loopne
pop
adc
push
sbb
hlt
sub
stc
gs
dec
push
mov
test
mov
lret
leave
push
dec
stos
call
cli
or
dec
pop
mov
mov
bound
or
sbb
sub
cmp
enter
call
dec
cwtl
pop
test
mov
fwait
push
lret
sbb
sub
cmp
enter
call
dec
cwtl
pop
test
mov
fwait
push
lret
sbb
sub
cmp
enter
call
dec
cltd
pop
test
mov
fwait
imul
mov
mov
sub
dec
inc
adc
xor
and
adc
add
int3
push
or
cmp
push
movsl
add
mov
cmpsb
imul
data16
adc
add
je
je
push
push
xor
mov
movb
xchg
into
sub
sahf
sbb
insl
inc
jl
dec
push
pop
xchg
mov
xchg
mov
fisubrl
push
jno
arpl
mov
sub
jmp
repz
outsl
xchg
sub
scas
sbb
cmpsb
xchg
fwait
stos
mov
push
les
jnp
xchg
cli
mov
mov
push
pop
jmp
push
addr16
movsb
ret
inc
jnp
push
jecxz
pop
aam
subl
je
je
and
shl
out
push
imul
dec
enter
sub
mov
adc
dec
gs
insb
cmpl
xchg
push
push
in
mov
shr
xor
imul
cmp
cmc
add
test
sub
or
pop
fs
push
mov
mov
in
lods
cld
movsb
into
xchg
pop
xor
push
and
popa
pop
jbe
add
neg
mov
mov
mov
out
mov
add
addr16
imul
sub
and
xchg
shlb
test
in
mov
mov
xor
and
jo
inc
gs
es
push
push
inc
divb
test
aam
les
data16
adc
add
je
fs
push
push
inc
divb
test
aam
les
shlb
xchg
xchg
stc
lcall
out
mov
loopne
cmp
jo
mov
jge
push
sbb
bound
xchg
ret
xor
dec
mov
lret
inc
outsb
or
cld
jp
sbb
jno
ja
fsub
bound
xor
and
movsb
ret
mov
and
add
rcl
int
dec
es
test
and
cmp
in
sbb
lret
lock
xor
inc
mov
imul
pop
mov
and
add
jno
call
pop
push
dec
cld
out
sub
fnstenv
popa
xchg
enter
add
shl
cli
inc
ss
ud1
fildll
lahf
xchg
and
inc
mov
xchg
adcb
aad
rcrl
movsl
xor
mov
sub
xchg
daa
movsb
call
xlat
inc
stos
icebp
pop
pusha
es
pusha
push
sbb
ljmp
xor
in
out
or
loop
push
sbb
aaa
sbb
xor
fdivs
out
lea
add
mov
mov
mov
cwtl
mov
loopne
icebp
mov
xor
addr16
stos
jo
imul
adc
mov
adc
incb
test
aad
inc
repz
neg
movsb
sbbb
mov
push
xor
pop
xchg
stos
add
cli
pop
push
das
aam
ss
push
out
xchg
mov
sbb
mov
fldcw
mov
cmp
cld
sbb
push
add
sbb
pop
adc
cmpsb
add
lods
stos
adc
mov
or
adc
popf
dec
lret
xchg
xchg
pushf
pop
lds
dec
or
xchg
pop
lahf
inc
xchg
out
jb
in
push
adc
xchg
xor
lock
sub
adc
pushf
xchg
aaa
cmp
gs
into
cmpsl
ret
call
je
fisttps
dec
int3
in
out
xor
pop
jo
adc
xchg
adc
jne
push
hlt
enter
add
sub
lods
cld
pop
push
mov
or
negb
gs
in
aaa
jbe
mov
shl
and
outsl
daa
cmp
in
adc
xchg
loop
nop
int
popf
adc
or
dec
mov
xchg
mov
mov
push
nop
mov
std
or
inc
mov
jb
fldl
jns
test
mov
inc
push
aad
adc
add
cmp
add
fsubrp
in
mov
push
ljmp
cmp
add
stc
jmp
sahf
cmp
adc
jmp
loop
pop
push
or
mov
clc
jae
xchg
add
loop
xchg
xchg
and
andb
mov
xchg
rorb
lods
iret
les
mov
and
cmp
cwtl
inc
pop
adc
lods
into
add
mov
push
lea
daa
sti
je,pt
repnz
or
cmp
pop
push
xor
lret
jns
mov
je
add
cmpsb
cmp
mov
roll
sbb
cwtl
insb
out
mov
mov
push
fs
in
ds
adc
xlat
xchg
sub
mov
push
inc
out
sbb
xor
adc
or
mov
insb
sbb
mov
adc
adc
xor
inc
dec
inc
in
jmp
lods
and
xor
iret
into
lods
jg
repz
divb
pusha
xor
inc
push
xor
xchg
jbe
pushf
arpl
inc
stos
pushf
pop
lcall
cltd
shlb
push
and
stc
inc
jns
adc
or
mov
cmpb
push
adcl
stos
cli
sub
into
mov
cmp
adc
test
sarl
cmp
xor
mov
pop
popa
cmp
jo
xchg
aad
xlat
outsl
icebp
jne
rcrl
cwtl
pop
jmp
cmpsb
fs
mov
inc
xchg
sbb
out
sub
sub
pusha
aaa
fmuls
xor
mov
sbb
pop
mov
bound
push
sarb
mov
xchg
adc
cld
push
in
sub
shr
jnp
fisubrs
out
stos
push
ja
std
rcl
jb
int3
iret
outsl
lods
cmp
xchg
insl
inc
imul
and
into
mov
push
jbe
les
aas
sti
pop
imull
lds
aas
mov
mov
and
jg
aaa
push
xchg
mov
lcall
adc
xor
loope
rcl
jmp
mov
shll
insb
mov
inc
and
mov
lret
outsl
lds
sbb
ret
dec
shll
add
icebp
stc
lahf
and
mov
sbb
sub
push
jge
sub
pop
push
lcall
bnd
scas
in
dec
or
xchg
and
loop
mov
js
mov
sarb
adc
xor
cltd
dec
sbb
add
inc
hlt
mov
push
fdivrs
jge
pop
aas
mov
pop
xchg
push
aaa
mov
sbb
mov
pop
push
loop
testl
xor
sub
je
mov
mov
mov
sti
or
mov
or
fists
and
loope
pop
loop
adc
or
jp
and
jmp
jl
xchg
inc
and
mov
mov
pop
popf
sub
daa
ljmp
pop
mov
loopne
fiaddl
lcall
mov
ret
je
mov
inc
add
daa
hlt
dec
stos
and
mov
adc
nop
add
iret
icebp
inc
mov
mov
in
fists
push
add
mov
xchg
or
pop
jnp
xchg
lret
push
mov
loop
mov
out
jle
js
cmp
or
shlb
xchg
jg
push
dec
lcall
mov
lods
push
sarb
pusha
push
stc
test
rorb
ds
xor
add
pushl
xchg
ficompl
mov
push
fstps
or
sbbl
push
xchg
lds
cmp
hlt
inc
aam
flds
icebp
movsb
xchg
test
mov
adc
inc
fucompp
fsts
cld
into
or
addr16
mov
sub
loope
sbb
xor
inc
aaa
and
mov
xor
or
mov
flds
mov
add
fwait
in
rcl
nop
and
adc
push
xor
push
iret
aad
dec
dec
hlt
lods
frstor
mov
or
int3
and
add
xlat
insl
inc
sahf
push
and
pop
scas
repnz
xchg
pop
xlat
dec
into
or
loop
xor
jnp
jle
scas
xchg
addr16
push
push
nop
pop
or
hlt
subb
add
mov
inc
sarl
push
test
outsb
or
aam
jge
mov
and
push
scas
and
push
mov
cmp
lea
inc
fistpl
outsb
ja
sub
mov
imul
xchg
imul
int3
dec
mov
add
mov
sbb
add
in
cmpsb
lret
xlat
jae
adc
call
dec
sub
mov
test
rclb
call
je
push
dec
dec
jb
and
adc
fwait
ret
in
mov
push
push
in
pop
or
push
ja
jnp
xchg
inc
fcoml
add
lea
stos
mov
mov
mov
or
dec
fldlg2
cmp
iret
movsl
mov
mov
test
jno
nop
pushf
add
sarl
xchg
push
xchg
sbb
add
push
nop
sti
out
gs
mov
cmp
mov
mov
mov
lret
xchg
cmp
or
push
mov
push
cmpsl
jle
lret
push
mov
pop
push
inc
or
in
mov
xor
jbe
and
movsb
test
cmovp
mov
adc
lahf
jns
inc
fs
push
out
scas
cli
pop
jecxz
inc
cmc
insl
xor
push
add
cmp
jae
idivb
pop
jo
cmp
fs
and
mov
jmp
test
ljmp
bound
fstl
cmp
movsl
or
mov
add
mov
dec
gs
decb
mov
lds
mov
and
adc
jae
mov
lret
push
lds
shlb
scas
and
push
cli
cli
ret
imul
pop
aaa
jbe
sbb
add
lcall
push
jb
xor
mov
rcll
pop
into
ds
xchg
stc
aad
mov
cmpsl
sar
sbb
insb
cmp
adc
push
mov
pop
cmpsl
mov
or
and
movsl
roll
call
rcrb
shrb
sti
ds
cltd
mov
xor
mov
int3
push
icebp
mov
cmpsl
not
pop
adc
cmp
ljmp
imul
fs
adc
mov
data16
repz
sub
dec
pop
gs
sub
lock
jo
std
adc
mov
push
dec
lds
pop
lods
sub
loopne
jp
inc
cld
arpl
fstl
xor
jg
push
mov
sub
fdivrs
cli
sub
inc
das
outsl
enter
mov
and
test
sbb
mov
fcoml
mov
xor
xchg
fidivrs
rolb
ljmp
add
dec
dec
pop
jns
rclb
pop
ret
or
and
clc
std
in
fs
cli
mov
mov
dec
cmp
pusha
xor
dec
mov
push
shl
jecxz
inc
jns
sahf
int3
stos
orl
sub
xchg
xchg
jle
add
dec
fcmovne
jbe
bnd
adc
nop
mov
mov
ret
lock
push
mov
adcl
xor
imul
into
ficoml
sahf
daa
sahf
inc
add
pop
xchg
cmp
insl
cld
rcl
in
fsubs
mov
es
movsl
push
pop
cmp
push
pop
leave
cld
mov
out
jo
push
inc
cmp
ror
mov
aas
leave
addb
std
stos
movb
and
mov
sbb
pop
push
nop
push
jno
loop
jp
pop
int3
out
xlat
in
jp
sbb
xlat
and
std
mov
rcrb
clc
jnp
fsubrl
add
fistl
popf
fbld
mov
mov
ret
pop
lea
mov
mov
and
xor
das
mov
jb
sbb
lahf
add
shlb
sbb
jmp
scas
inc
cmp
xor
loope
push
shrl
mov
rclb
out
daa
jg
pop
sbb
xor
pop
dec
fildll
js
add
mov
jbe
fimuls
andl
test
mov
movsb
stos
or
mov
sbb
cmc
cmpb
hlt
fildl
cmp
aas
cld
push
mov
mov
in
mov
outsb
mov
adc
mov
adc
lret
cltd
xchg
pushf
stc
sti
add
pop
push
and
jle
mov
mov
and
loopne
sbb
or
dec
pushw
repz
cmpsb
pop
push
call
ret
ds
scas
mov
cmp
repz
ret
leave
jnp
pop
out
push
sbb
pop
xchg
push
dec
scas
std
ja
add
mov
into
xchg
pop
push
xor
mov
call
adc
and
jnp
or
mov
sbb
in
jo
fldcw
and
fisubrl
ror
insl
push
xor
ljmp
movsl
mov
xor
dec
mov
das
mov
pop
fdivs
inc
in
jp
fstps
je
shrb
fwait
or
test
inc
js
xchg
cmpsb
pop
inc
xor
mov
insl
pop
insb
jns
add
jbe
lods
sbb
xchg
cmpsl
enter
mov
out
fsubrs
sub
jmp
dec
push
ljmp
xor
mov
dec
dec
and
test
or
call
mov
outsb
add
inc
movsb
stc
xor
sti
lods
sti
sub
aas
push
mov
lock
das
mov
mov
test
mov
out
subl
leave
addr16
jo
pusha
inc
pusha
scas
cld
ds
mov
iret
inc
cmpsl
mov
stc
xchg
cmp
repnz
mov
imul
add
loop
add
and
jo
cmp
outsb
jg
cmp
out
mov
lds
flds
shl
push
jno
ret
pushf
lret
pop
bound
pop
andb
test
icebp
push
xchg
push
dec
in
xor
or
push
imul
mov
mov
shlb
and
jne
testl
inc
dec
dec
mov
adc
loopne
inc
scas
push
addr16
lcall
fstl
out
sub
fcmovu
in
not
js
fdiv
lock
jl
popf
or
shrb
xchg
test
mov
fcoms
cli
push
ss
xchg
jb
scas
sub
fidivs
iret
sub
mov
cmp
xchg
notl
cmp
in
repnz
cld
js
out
push
mov
mov
xchg
adc
scas
xchg
pop
enter
push
mov
sub
imul
fimull
and
decb
mov
add
or
jle
pushf
dec
ficomps
and
test
clc
adc
cs
pop
adcl
es
push
and
outsb
lcall
sbb
rcrb
xchg
xchg
test
or
fs
push
fisttps
cld
lock
push
sub
push
cmpsb
push
call
lea
dec
lahf
mov
add
sub
lea
stc
jnp
push
stos
sub
scas
sti
mov
sbb
and
xchg
loop
pop
mul
fbstp
insb
out
into
lret
ret
outsb
lods
inc
and
or
mov
pop
loopne
jne
inc
push
inc
enter
jbe
add
imul
das
out
jo
sahf
mov
stos
mov
lret
sub
mov
cmp
les
or
leave
insb
sub
mov
dec
adc
xor
sub
divb
jg
jl
adcl
cli
adc
mov
mov
ret
mov
out
adc
aaa
cmp
mov
dec
mov
pop
push
ficoms
mov
pusha
inc
mov
mov
movsb
orb
lcall
mov
cmpsb
movsl
inc
xchg
mov
in
cmp
pop
xor
into
inc
in
push
sbb
pop
sub
daa
rorl
add
pop
and
mov
and
lahf
adc
push
mov
jecxz
cmp
into
jl
arpl
imul
rcrb
mov
jns
pop
repnz
nop
pop
ret
outsl
push
cmpsb
rorl
in
aam
cwtl
sbb
jno
nop
mov
movsl
xor
cmp
inc
test
dec
nop
cmc
xchg
and
out
into
sub
xor
and
fs
cmp
push
jae
xor
mov
add
inc
loopne
pop
in
fs
hlt
bound
inc
mov
jno
test
lahf
mov
lret
pushf
scas
push
sub
mov
mov
fisubs
mov
mov
cli
outsb
jb
inc
xor
js
mov
jl
fsts
aam
cli
scas
sub
jl
es
and
mov
adc
mov
or
mov
xor
mov
mov
jns
scas
jecxz
push
in
in
stc
dec
sub
rolb
jae
and
jnp
and
mov
mov
or
fists
pop
movsl
pop
imulb
cwtl
inc
cmp
jnp
mov
sub
xor
aad
aad
push
mov
std
jne
mov
movsl
fs
mov
fdivp
add
outsl
inc
cli
adc
shl
addr16
clc
pushf
stos
bound
adc
mov
scas
cmc
ror
pop
push
lahf
hlt
mov
rorb
push
mov
jp
sbb
dec
push
lret
das
stc
mov
cltd
jge
repnz
repnz
mov
jmp
dec
jle
jp
out
imul
movsl
shrb
mov
addr16
push
repz
adc
lahf
push
cwtl
lcall
ja
xor
xchg
and
jl
jg
sub
cmpsb
nop
mov
ret
xchg
xchg
jl
or
jecxz
push
std
idivl
loopne
ljmp
imul
pop
mov
cmpsb
addl
in
xchg
pop
rorb
in
scas
mov
cmp
and
add
cmp
mov
insb
inc
sbb
push
dec
call
imul
hlt
lock
sub
push
daa
sahf
ret
sti
cmp
inc
mov
push
leave
pop
adc
icebp
add
gs
pop
fwait
mov
dec
inc
leave
popf
sti
push
and
out
loop
xor
xchg
popa
sbb
cwtl
fwait
push
out
pop
imul
or
loopne
decl
jecxz
sahf
stc
loope
push
xchg
xchg
bound
scas
ja
insb
xchg
fistpll
ss
scas
arpl
mov
aam
cltd
scas
mov
or
orl
or
xor
repnz
and
add
or
add
ljmp
js
mov
std
mov
es
stc
data16
test
jbe
sub
lods
cmp
testb
lret
push
bound
scas
mov
es
insl
jge
mov
inc
sti
je
pusha
mov
ficompl
fwait
add
test
mov
xchg
js
inc
push
mov
cltd
mov
add
adc
sub
xlat
addl
or
stc
jmp
xchg
push
aad
call
adc
pop
shrb
sbb
cmp
mov
sub
pop
in
repz
sub
or
mov
sub
rorl
ja
adc
aam
cmpb
out
lcall
btc
insb
fprem
mov
sub
push
leave
into
movsb
mov
pop
jle
stos
aad
mov
data16
jnp
mov
ret
neg
testb
lods
cltd
cmp
or
xor
jne
mov
dec
lret
cmpsl
jns
mov
xor
cltd
sbb
xchg
xchg
lret
dec
cmpb
lahf
fisubl
dec
mov
aaa
pop
mov
lock
std
xor
ret
dec
xchg
mov
lds
test
loopne
pop
cmp
fs
cwtl
xor
xorb
and
and
or
push
pop
add
gs
call
and
cld
iret
repz
lods
stos
dec
jmp
stos
push
fistpl
push
jecxz,pn
adc
insb
int3
mov
mov
pusha
mov
xor
inc
stos
cmpsl
jle
lods
lods
and
setge
cli
jb
add
into
addr16
fdivrp
or
pop
xchg
mov
and
aam
or
lods
inc
outsb
dec
inc
xor
clc
fiaddl
push
jne
mov
daa
cmc
addr16
mov
aam
adc
ret
lods
mov
lret
int3
aas
jno
aaa
cmpsb
dec
pop
fcoms
mov
movsl
dec
jne
push
lea
bound
es
dec
mov
cmp
test
in
ficompl
dec
cmc
sub
cmp
loop
sahf
push
mov
inc
pop
rcr
dec
repnz
add
loope
pop
jge
xchg
dec
xor
xchg
xchg
pop
sub
sbb
push
mov
or
mov
cmp
push
push
popa
push
lea
in
aam
outsl
jmp
popf
rcrb
adc
jmp
add
cmp
jmp
sub
adc
aas
das
nop
sahf
stc
pop
cld
xorl
adc
hlt
int
lds
mov
call
hlt
add
push
lahf
pop
xor
dec
lods
pop
and
xchg
loop
mov
dec
sbb
addr16
cmpsl
push
lret
out
sub
shlb
movsl
pop
add
push
mov
dec
xor
dec
test
les
out
in
test
xchg
xor
in
pusha
fwait
int3
scas
or
loopne
adc
jle
mov
int3
in
cmpsl
rcl
xchg
repz
mov
pop
out
gs
mov
mov
andb
push
sbb
cltd
inc
sub
mov
ret
push
mov
negb
dec
addr16
fs
adc
cld
pop
sbb
lret
add
outsl
outsl
xor
pop
mov
ficompl
bound
jg
pop
and
gs
dec
sub
cmp
pop
test
fildl
inc
and
das
lret
xchg
cli
mov
xchg
add
pusha
stos
push
outsl
dec
jno
fnstenv
push
adc
in
test
push
mov
lods
mov
lds
and
jecxz
testl
fwait
ljmp
mov
sti
ds
pop
repnz
jmp
mov
mov
es
push
insl
aas
popa
jnp
dec
mov
cli
cmpsb
dec
xor
push
cmc
loopne
out
stos
arpl
lock
imul
inc
jo
xor
sbb
test
mov
or
mov
jae
jnp
shr
outsb
idivb
movsb
cwtl
test
sbb
sarl
sub
mov
sub
out
mov
xor
ds
mov
cmpb
add
cmp
addl
es
insl
icebp
sbb
mov
and
popa
cmp
mov
aas
outsb
and
adc
add
je
fs
push
push
inc
divb
test
aam
les
data16
adc
add
je
fs
push
push
inc
divb
test
aam
les
push
and
adc
add
je
fs
push
movb
movsb
es
movb
shrb
bound
cmp
or
data16
je
fs
push
xchg
xchg
repz
stos
jns
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jmp
push
adcl
sub
push
jbe
and
jae
and
push
movb
mov
push
repz
roll
cmp
rcll
movb
es
push
ljmp
push
xor
ja
pop
mov
mov
ret
push
mov
push
sti
inc
pop
jae
int
inc
fcmovnb
fimull
out
pop
mov
dec
mov
pop
xchg
xchg
xor
sbb
and
pop
cli
rcr
dec
in
xchg
push
repnz
out
aas
mov
mov
adc
mov
add
lock
inc
mov
es
inc
test
arpl
inc
cmp
test
pop
dec
dec
adc
pop
jbe
out
or
int3
stos
xlat
push
push
pop
lretw
fwait
mov
sub
jbe
pop
fdivr
push
jns
xchg
fnstenv
mov
mov
dec
addr16
adc
mov
in
jle
xorl
inc
ret
jae
mov
push
jecxz
stc
jbe
inc
ficoml
cmpsb
cmp
imul
notb
pop
mov
testb
push
xchg
add
add
and
pop
movsl
pop
xchg
ss
mov
push
xchg
lea
mov
in
and
push
aad
repz
mov
mull
nop
inc
mov
divb
mov
jbe
inc
ret
push
xor
add
push
movb
mov
push
repz
roll
push
xor
add
push
movb
es
pop
lret
aam
adc
jmp
mov
pusha
or
mov
and
lock
cmp
jns
adc
pop
or
and
xor
in
fwait
mov
inc
jne
inc
mov
lret
aaa
popa
mov
jle
bound
fcmove
test
mov
lea
add
push
mov
cmp
cmpsb
int3
rcll
cmp
imul
mov
pop
bound
fldl
mov
cmp
push
sahf
cwtl
ljmp
adc
pusha
sbb
div
sar
hlt
dec
imul
int
adc
cs
dec
inc
xor
dec
xchg
je
loopne
imul
sbb
in
cmp
rclb
ss
or
push
sbb
fs
mov
push
mov
cmc
decl
mov
jne
rclb
inc
aas
sbb
mov
sbb
jle
push
mov
std
cmp
fcomip
ds
inc
or
addr16
popa
push
or
pushf
test
scas
ret
mov
jbe
jns
in
popa
jmp
cwtl
sub
or
cltd
push
dec
jns
or
mov
jns
sbb
cmc
test
push
ds
inc
sub
hlt
push
xchg
rol
sarb
lahf
sbb
push
jl
ret
js
or
das
je
mov
xor
and
out
mov
fs
cmp
outsl
icebp
jl
mov
shrl
xlat
xchg
add
movsl
flds
cmp
outsl
mov
add
aad
insb
loop
test
lcall
cs
movsb
sarl
xor
ja
ss
lcall
fmul
jp
sbb
sbb
test
jne
xchg
or
and
dec
adc
push
pop
jae
arpl
rorl
stos
movsb
loopne
ret
or
and
loop
sti
repnz
cli
les
push
mov
mov
xor
in
das
iret
jmp
pushf
pop
es
out
mov
arpl
adc
cld
jge
mov
lods
add
dec
shll
mov
std
mov
or
add
imul
daa
sub
pop
cmpsl
sbb
push
outsl
push
call
sbb
fidivrs
ror
mov
push
insb
mov
jmp
dec
stos
and
add
ja
inc
xchg
pusha
lcall
into
mov
xchg
mov
outsl
ja
roll
adc
jle
fcomip
and
repz
cmc
divb
pop
and
xor
xorl
stos
out
jp
xchg
mov
xor
subb
adc
adc
leave
clc
mov
into
lret
mov
movsl
and
pop
xchg
mov
andl
cmp
xchg
sub
jl
jp
and
add
dec
inc
and
nop
enter
sub
jle
stos
das
jp
dec
jns
fstpt
push
movsl
movl
lret
mov
lds
ret
add
ljmp
fcompl
gs
sub
sub
sub
loop
dec
shlb
enter
push
adc
jns
bound
in
dec
neg
xor
dec
mov
fistps
or
movl
loop
jbe
lcall
sahf
mov
stos
popa
lods
loopne
stos
ret
pushw
mov
cmp
adc
fmull
sub
push
inc
inc
adc
mov
popa
mov
pop
add
test
inc
jbe
xor
mov
push
mov
dec
popa
sti
xchg
dec
cmp
mov
das
rclb
xlat
push
pop
xchg
gs
mov
mov
adc
leave
lret
into
cwtl
pop
xor
hlt
xchg
xchg
mov
cmp
mov
fs
lret
xchg
iretw
inc
mov
pop
add
push
cmp
or
das
pop
out
shr
into
jmp
test
daa
lods
sbb
inc
rolb
sbb
dec
sub
dec
cmpsl
pop
sub
or
mov
movsl
lods
test
jno
scas
mov
sbb
sbb
pop
push
add
lret
stos
cmp
imul
or
daa
lds
loope
pop
lock
inc
inc
nop
push
icebp
in
idivl
and
popa
jno
enter
cwtl
xchg
jo
push
scas
stos
cmp
jp
clc
and
lea
or
std
ud1
hlt
or
sub
mov
mov
mov
xchg
cmpsb
lret
mov
pushf
sub
clc
aad
or
orl
daa
pop
in
mov
xor
pop
repnz
aad
jmp
aaa
inc
xchg
mov
cld
out
rcrb
xchg
jnp
jle
jo
inc
add
out
popf
bound
pop
pop
mov
push
into
xchg
cmpsl
add
jmp
xchg
ss
dec
cld
fisubs
xchg
lret
jo
xchg
mov
jne
mov
lcall
jecxz
or
sub
aad
xchg
fdivrl
in
jns
add
adc
sub
pop
sub
jns
mov
in
jge
clc
jp
rolb
inc
ret
insb
xchg
divl
mov
ret
shlb
mov
add
pop
push
outsl
hlt
sbb
sub
dec
sahf
fistps
push
stc
mov
jmp
cmp
mov
adc
cmc
testb
xchg
and
and
push
dec
jg
outsl
fs
cmp
std
cmp
in
cmpsl
fcoml
sbb
inc
iret
ret
pop
xchg
xchg
pop
mov
sbb
pop
rep
cli
andb
sbb
push
jg
xlat
insl
inc
scas
dec
mov
xor
je
xor
pop
mov
mov
jge
addb
sbb
cs
jbe
cmp
dec
aam
movsb
add
cmp
or
push
std
loop
jge
jecxz
adc
and
push
stos
jno
rcll
push
xor
mov
adc
or
sbb
cld
push
or
cltd
in
clc
sbb
jnp
push
cmp
fndisi(8087
xchg
cmp
or
movsl
aam
jbe
xor
and
adc
xchg
xchg
adc
testb
pop
inc
pushf
xchg
xor
cmpb
imul
mov
int3
mov
mov
cmp
pop
je
aad
shlb
mov
or
jp
add
out
popf
leave
pop
in
adc
andl
bound
jle
pop
cmp
mov
mov
enter
inc
data16
out
adc
and
lods
movsb
push
lods
shll
jmp
icebp
out
adc
pop
mov
sub
pop
adc
int3
xor
data16
rcrb
jo
and
in
scas
fwait
fwait
cmp
inc
mov
daa
cmp
push
out
insb
cltd
and
pushf
pop
js
xor
or
cmc
add
or
iret
dec
mov
pop
mov
sub
lds
outsb
dec
es
or
pop
inc
imull
movsb
cmc
push
rcl
jnp
xlat
inc
sbbl
add
dec
imul
inc
cmp
movsb
pop
mov
fsubl
jmp
dec
push
outsb
add
sbb
flds
popf
mov
fcoml
cmp
loopne
mov
push
rorb
in
or
cwtl
idivl
insl
inc
pusha
cmpsl
push
sbb
cmp
hlt
push
loopne
lahf
outsl
int
push
loope
aas
mov
push
mov
inc
les
mov
cwtl
xor
lret
xchg
mov
stc
test
testl
loop
movsl
push
pop
pop
and
mov
xchg
push
lods
insl
gs
xor
popa
pop
xor
cltd
leave
insb
mov
jne
add
fcoml
movswl
add
stc
cmpl
movaps
cli
jecxz
adc
das
push
pop
xchg
add
insl
inc
stos
adc
bound
sub
mov
xor
das
icebp
jb
xchg
sbb
icebp
push
push
sbb
add
mov
int3
dec
push
xor
test
scas
or
lods
jne
ret
xor
cmc
push
jle
rclb
call
pushf
stos
push
imul
stos
pusha
cs
je
cmp
mov
pop
sub
cmp
cld
stos
loopne
out
cmp
popa
fwait
into
insb
sbb
pop
push
adc
loope
jle
fnsave
mov
inc
mov
mov
mov
mov
jmp
shll
imul
adc
sub
clc
aaa
pop
inc
pop
push
sbb
xchg
xor
divb
enter
xchg
imul
cmp
or
jb
cmc
push
dec
imul
pop
sbb
pop
rdpmc
add
add
frstor
aam
lahf
lea
mov
int3
sub
loop
lcall
roll
sbb
and
sbb
xchg
xchg
lods
jecxz
jp
scas
sbb
push
xchg
xor
out
xchg
xor
sbb
cmp
fstpl
fwait
or
jne
pop
cmpsl
cltd
or
cmp
adc
push
push
bound
cmc
test
loope
popf
sub
sub
rcll
shr
jge
daa
je
fdivs
fmull
pop
jg
mov
out
push
dec
add
pop
mov
pop
xor
pushf
ja
cltd
jp
cmpsl
mov
add
xor
mov
push
ret
jae
shll
xchg
push
dec
mov
aad
movsl
push
fists
call
leave
and
fs
cwtl
ljmp
cmp
hlt
mov
and
popf
push
lods
add
sub
notb
ror
ret
and
xchg
sar
pop
mov
and
sbb
inc
mov
mov
insl
mov
das
addb
xchg
pop
mov
and
aaa
xchg
or
mov
scas
sbb
inc
push
xor
add
out
xorb
mov
nop
lahf
movsb
lret
dec
push
jp
scas
push
stos
inc
nop
xor
and
test
xchg
std
jmp
jg
mov
mov
sbb
xchg
ljmp
ds
adc
adc
cmc
push
aam
jb
inc
and
xchg
pusha
in
movsl
inc
xchg
sub
adc
cmp
cs
push
fdivrs
add
jg
mov
fidivrs
jb
push
shll
out
dec
push
fbstp
mov
les
push
cmpsl
push
xchg
stos
loopne
sub
pop
in
test
loope
add
jne
jno
test
pop
xchg
pop
pop
push
in
adc
fidivs
gs
out
push
push
loop
in
jmp
mov
inc
stos
jge
mov
dec
sbb
repz
fsubrl
adcl
lods
sbb
sub
sbb
stos
cmp
xchg
das
fldcw
shrb
das
movsb
inc
jb
xchg
mov
mov
pushf
cmp
in
cld
add
inc
cld
mov
mov
aas
adc
test
add
cmpsb
xchg
test
insb
ds
roll
add
mov
popa
mov
popa
xor
mov
sbb
lcall
or
cmpl
sub
fwait
mov
mov
mov
mov
popf
fisubrl
repz
inc
lds
pop
add
sbb
jns
subb
xor
jo
cmp
cltd
inc
stos
out
adc
sub
adc
inc
vmwrite
or
adc
and
orl
dec
daa
popf
lock
fcomps
sub
sbb
aam
inc
inc
pop
lea
sub
cli
mov
ss
mov
jbe
cmp
pusha
push
push
push
cvtps2pd
cmp
xchg
mov
jg
fsubrl
xlat
push
xchg
mov
into
in
imul
jne
lret
stos
shll
cmp
xor
push
movsl
or
sbb
mov
test
fs
mov
push
sub
adc
inc
add
mov
mov
lds
pop
dec
xchg
jp
inc
rcr
push
lahf
dec
negb
movsl
js
cli
insb
test
ret
int3
mov
mov
int3
pop
push
add
adc
lret
in
fwait
shr
repnz
push
inc
push
outsl
mov
and
aam
dec
mov
outsl
xchg
imull
adc
movsl
mov
and
nop
sub
out
call
mov
nop
fiadds
movsb
shlb
adc
ljmp
or
negb
push
sbb
dec
je
mov
rolb
push
jnp
je
xchg
cld
cmp
mov
flds
pop
cltd
sarb
cmpb
ljmp
add
mov
je
insl
sbb
fs
data16
pop
arpl
jb
mov
sbb
cmpl
inc
cmp
test
loope
mov
imul
push
or
sbb
push
ss
ja
pop
inc
mov
rcll
xor
pop
inc
cmp
xchg
sub
sbb
pop
pop
sub
push
in
test
aam
movq
inc
jmp
roll
les
outsb
jno
mov
sbb
shrb
insb
xchg
daa
sub
cmpsb
les
mov
stos
inc
mov
jbe
push
or
jl
mov
fidivs
clc
pop
add
daa
fistpl
sbb
ret
sbb
mov
leave
xchg
lds
pop
dec
fadd
push
push
loopne
cld
rol
je
pop
negl
mov
sbb
mov
ret
lock
sbb
repnz
or
sbb
sbb
add
test
pop
loope
sub
iret
rolb
mov
call
je
flds
jge
mov
sub
jb
dec
pop
fs
sbb
mov
jae
in
and
scas
xlat
sbb
push
push
adc
push
xchg
sbb
call
mov
fmuls
xor
int
les
push
test
ffreep
dec
pushf
ja
dec
or
adc
xchg
cmc
xor
cmp
loopne
and
fsubrl
in
out
push
mov
cmp
fimull
loop
stos
xor
lods
xchg
xorb
inc
inc
push
inc
pop
add
ljmp
pop
lret
add
dec
xchg
jp
cs
test
xorb
nop
aam
stc
into
push
pop
out
or
mov
or
and
inc
xchg
mov
arpl
out
xchg
sbbl
js
cmp
aas
cmp
add
push
outsb
mov
neg
ds
sub
rorb
pop
xor
or
call
cmc
jl
push
jbe
lods
fistps
testb
inc
pop
jo
fwait
xchg
mov
test
sbbl
pusha
mov
pop
dec
sbb
ds
add
fnstsw
jle
lret
int
loop
enter
xor
sbb
jge
cmp
call
mov
rclb
imul
test
xchg
sub
cwtl
fwait
imul
xchg
pop
xor
sub
dec
add
dec
xor
jecxz
xchg
and
leave
jb
and
jne
cmp
sbb
dec
cld
or
fs
test
or
lret
push
add
inc
rorl
enter
mov
enter
bound
jecxz
jae
pushf
push
sahf
into
jae
adc
loop
imul
shll
stos
test
mov
int
je
es
popa
or
xor
mov
sbb
dec
insl
hlt
sub
xchg
push
mov
sbb
jnp
pop
jg
adc
cmp
jmp
push
xor
int
sbb
cs
daa
xor
mov
mov
js
jp
mov
movsb
add
nop
in
sbb
rorl
fwait
iret
mov
je
std
scas
cmc
fucomi
in
arpl
mov
shll
lea
mov
xchg
jecxz
cmp
mov
push
push
in
push
fdivp
iret
loop
mov
mov
std
in
xchg
movsb
lahf
movsb
jnp
and
cmp
fnstenv
imul
xchg
outsb
sbbl
sbb
pop
push
sbb
icebp
xor
adc
mov
pop
jmp
movsb
pop
mov
sub
clc
out
lahf
cmpl
js
or
les
jns
jb
push
and
cmpb
pop
mov
jge
inc
sbb
je
imul
fidivrs
clc
dec
sbb
push
sbb
mov
adc
and
loope
sbb
cmp
out
jns
xchg
lret
cmp
sbb
mov
pop
mov
aas
in
xchg
push
fldt
mov
mov
jle
and
mov
js
push
and
mov
xchg
pushf
int3
and
pop
or
imul
mov
lods
das
pop
lahf
dec
and
lock
xchg
inc
mov
aad
or
int3
roll
pop
xor
pop
xchg
aas
mov
int
jmp
pop
push
cmc
pop
pop
lahf
std
fistpll
int
das
ss
les
sarb
enter
xor
in
jle
inc
dec
dec
inc
test
inc
push
dec
sub
ja
pop
cwtl
int
divl
jae
cmp
in
lock
fidivrl
out
and
movsl
jg
add
lods
hlt
in
dec
rcrl
adc
pop
mov
scas
fsubs
push
fcmovnb
fistl
push
cmc
jbe
sbbl
cwtl
inc
insb
mov
push
loopne
dec
arpl
mov
lahf
push
add
and
aad
fisubrs
cwtl
cmc
adc
push
mov
adc
out
mov
jns
push
pop
cmp
subl
test
imul
jp
lret
or
and
je
jecxz
jl
ret
add
mov
ss
push
out
push
and
push
or
push
xor
and
test
or
lcall
jbe
sub
in
mov
js
sbb
xchg
mov
nop
jns
cltd
mov
enter
lret
aas
shl
lahf
pop
nop
sbb
stos
mov
test
imul
inc
mov
aam
decl
lds
jnp
add
mov
lock
and
in
mulb
and
push
lahf
ss
dec
sub
mov
dec
outsl
cmp
xor
add
decl
xchg
cmp
cmpsl
xor
sub
movsb
loop
push
cmp
inc
mov
out
leave
xor
xor
mov
in
sub
mov
jbe
rorl
pop
cltd
bound
xor
mov
rolb
xor
jge
pop
and
fldenv
cld
test
push
cmp
lcall
sbb
cltd
inc
mov
jp
jp
sbb
inc
sub
pop
mov
sub
es
inc
mov
sub
or
in
mov
ds
mov
and
js
inc
int3
insb
mov
mov
test
arpl
leave
push
aaa
or
push
jg
pop
and
jo
pop
lret
sub
push
fnsave
jp
popf
out
stos
addr16
in
popf
movsl
xor
sbb
test
push
movsl
dec
cmpsl
adc
and
in
fstpl
pop
xchg
push
hlt
pop
insl
ficompl
mov
adc
repnz
out
inc
or
pop
hlt
pop
add
push
or
sub
push
ljmp
sbbb
cmpl
in
roll
outsb
sub
pushf
movsl
mov
jnp
cmp
imulb
jb
push
jae
cmpl
push
adcl
addr16
push
out
idiv
jae
xchg
or
js
cwtl
pop
xchg
es
fmulp
lret
adc
and
xchg
or
and
ss
fwait
mov
xor
dec
sbb
or
cmp
je
pushl
mov
out
popf
int
loop
adc
adc
cmc
and
jle
pop
add
push
inc
fistpll
aad
cmp
ja
and
test
arpl
cmc
mov
jecxz
pop
imul
mov
lods
mov
in
sbb
pop
jmp
neg
ljmp
mov
jp
insl
jle
inc
data16
pop
vpmaxub
push
cs
inc
jecxz
mov
stos
dec
dec
push
sbb
fmulp
mov
inc
mov
or
add
ljmp
xchg
subl
mov
lea
jl
jne
incl
mov
inc
ds
insb
rcrb
mov
mov
hlt
cmp
mov
lret
ret
into
adc
sbb
xor
lahf
sub
fstpl
loop
icebp
jo
and
insl
sub
notb
mov
push
push
enter
daa
jbe
data16
pop
rcrb
repz
push
inc
xchg
add
xor
inc
pop
sbb
mov
mov
jne
xchg
sub
cwtl
or
or
and
dec
aaa
mov
outsl
lret
inc
cmpsl
push
test
adcl
data16
roll
push
xor
add
push
movb
mov
push
repz
roll
push
xor
add
push
movb
mov
push
repz
roll
push
xor
add
push
jb
xchg
xchg
movsl
push
adcl
data16
push
inc
inc
push
int3
cmpsb
fcompl
xchg
loope
outsb
jmp
lods
cmp
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
jbe
inc
sbb
jb
pop
and
out
testb
sti
test
fistl
or
push
imul
ss
push
pop
push
stos
out
testb
sti
mov
xchg
xchg
sub
jbe
inc
sbb
es
dec
push
pop
push
stos
fcomps
jmp
xchg
sarb
pop
add
and
mov
add
je
add
pop
subl
outsb
mov
push
push
in
xchg
fidivrs
mov
cmpsb
push
push
pop
ds
je
xlat
adc
cli
cmp
jnp
xor
loopne
push
mov
stos
es
or
cmpsb
xchg
sub
sbb
daa
outsb
es
out
pop
inc
es
jecxz
cmp
sub
out
mov
sti
fisttpl
xor
jnp
enter
inc
mov
out
mov
xchg
jecxz
mov
inc
nop
and
int
xchg
cld
sbb
je
mov
mov
xchg
pop
xchg
out
cmp
inc
sbb
es
dec
push
pop
push
stos
out
testb
sti
mov
xchg
shrb
dec
movsl
bound
jb
imul
das
arpl
stos
mov
lahf
mov
sti
iret
test
popf
repz
daa
pop
cmp
inc
ja
imul
xor
push
into
mov
fwait
mov
cmpsl
repz
clc
dec
cmp
xor
daa
dec
jnp
dec
push
pop
push
stos
out
testb
sti
mov
xchg
xchg
sub
jbe
inc
sbb
es
dec
push
pop
push
stos
out
testb
sti
mov
xchg
xchg
sub
arpl
jecxz
enter
xchg
adc
scas
push
fwait
jns
adc
inc
sbb
mov
hlt
hlt
jae
or
in
mov
mov
push
jne
push
in
jle
pusha
xchg
ret
jle
in
in
mov
rcrl
mov
pusha
sbb
inc
mov
push
iret
test
cltd
jae
adc
popf
push
call
in
mov
sbb
aas
lahf
sbb
pop
mov
xor
sbb
xchg
daa
pop
fiaddl
notb
cmp
loopne
cmp
mov
add
and
xlat
repnz
sbb
or
adc
movl
mov
out
lods
lret
and
jge
rclb
insb
out
das
mov
dec
dec
push
inc
or
mov
sbb
sbb
pop
fs
mov
fsubl
mov
dec
and
push
xchg
dec
adc
or
or
xor
push
test
mov
lcall
xchg
push
mov
lea
pop
dec
outsb
fildl
outsl
dec
lret
out
out
in
fucomip
sub
cmp
dec
jb
pop
pop
xchg
dec
jns
cmp
sub
inc
stc
push
mov
push
test
xchg
aad
out
mov
aad
or
jecxz
mov
pop
mov
sub
out
addr16
mov
cmp
dec
je
ficompl
test
dec
push
mov
dec
mov
xor
mov
or
movsb
mov
jmp
add
ss
cmp
push
and
jecxz
or
aad
pop
and
stos
pop
adc
out
and
pop
xchg
scas
xchg
inc
cwtl
jno
mov
flds
jl
add
ret
cli
cmp
push
outsb
inc
mov
fisubl
mov
jno
sbb
xor
push
or
push
xor
sbbl
gs
int
dec
xorl
xchg
stos
mov
cmpsb
popl
and
jns
adc
out
sub
xchg
fsubl
aaa
rorb
aas
test
arpl
pop
leave
inc
imul
pop
mov
mov
cld
icebp
jl
push
mov
or
cld
cwtl
repnz
jmp
in
fldenv
icebp
das
xchg
pop
in
out
add
test
imul
stc
enter
xor
cmp
mov
mov
or
jo
push
shr
cli
xchg
sub
into
and
rcrl
lcall
test
mov
and
mov
mov
mov
jb
and
xchg
cmc
sti
mov
pusha
sbb
inc
push
es
shrb
out
sbb
ljmp
ret
mov
mov
cmp
negl
dec
or
ret
push
push
dec
pop
inc
sbb
je
fadd
mulb
xor
or
or
inc
cmp
insb
mov
call
xchg
xchg
jne
xchg
in
outsl
pop
xor
cs
je
rcll
dec
ljmp
or
push
out
into
fisubs
cwtl
inc
mov
mov
cwtl
jl
pusha
mov
in
fldenv
arpl
int
inc
push
sbb
and
mov
scas
out
mov
shlb
out
dec
sbb
or
daa
das
icebp
lcall
pop
mov
je
adcb
lods
call
mov
or
cmc
pop
ret
lds
insl
fcoml
sub
loopne
pop
dec
xchg
mov
subb
adc
adc
mov
jns
push
in
mov
aas
popf
push
pop
negb
fisubl
push
dec
or
push
push
mov
add
daa
fwait
jge
sub
and
sub
fsubrp
mov
and
mov
sbb
mov
aad
hlt
xchg
mov
mov
lea
xor
xor
jbe
lret
stos
fbstp
push
in
dec
mov
push
dec
xchg
sub
sarl
popa
popf
das
or
sbb
jmp
add
dec
pop
push
nopl
loope
leave
xor
cs
or
lods
popa
je
int3
out
mov
sarb
and
dec
out
dec
xchg
js
fstps
and
out
sub
negl
push
mov
scas
or
cltd
mov
mov
ficomps
xchg
adc
sub
push
xchg
mov
loop
ds
jo
mov
mov
faddl
loopne
or
jl
push
lods
jnp
pop
pop
hlt
xchg
lret
js
movsl
neg
adc
inc
addb
push
cld
adc
outsb
data16
test
subl
xor
inc
cmp
testb
lods
test
cmpsb
sub
add
ja
sub
int3
out
das
xchg
xor
jns,pn
sbb
pop
stos
addr16
ds
fdiv
iret
jl
mov
fisubs
test
or
into
cmc
sbb
jo
ret
dec
or
mov
rol
cwtl
inc
fsubrl
xor
outsb
mov
xor
lret
xchg
sub
stos
icebp
adc
xchg
out
iret
pusha
imul
outsb
enter
ficomps
inc
aam
add
adc
xorb
inc
xor
insb
sub
add
mov
or
dec
pushf
scas
cli
sub
leave
movb
push
mov
fsubrp
jno
adc
dec
xchg
jae
fcompl
mov
mov
mov
or
push
adc
push
sbb
popa
dec
sbb
icebp
jae
and
inc
pop
sub
inc
adc
dec
cmpsb
adc
lods
aad
and
popa
out
gs
sbb
stos
cltd
sbb
insl
jo
sub
jle
mov
mov
shll
xorb
pop
pop
mov
fsincos
hlt
jmp
xor
mov
mov
dec
push
mov
dec
int3
sub
pop
dec
mov
push
cmp
lods
adc
icebp
inc
xlat
les
fcomp
std
imul
pusha
sbb
push
cmpsl
and
pop
mov
push
lea
mov
inc
sub
pop
adc
sub
mov
pop
xor
jo
sub
mov
push
xchg
mov
jb
add
jae
aad
lret
sub
aaa
mov
dec
push
ffree
faddl
das
mov
cltd
mov
in
das
adc
pushf
or
mov
arpl
gs
xchg
andb
xchg
sub
fisttpll
push
imul
in
mov
pop
fisttpl
jg
push
imul
int3
movsl
js
pop
ds
lahf
les
cltd
pusha
insb
in
jns
cmp
pusha
fwait
xchg
mov
sbb
pop
aaa
adc
sbb
fdivrp
adc
xor
inc
lahf
mov
push
mov
cld
xchg
in
add
into
insb
insb
cmp
mov
fcomp
xorb
sbbl
jp
scas
test
popf
inc
mov
popf
inc
and
cs
push
scas
iret
fmulp
fcmovnb
push
movl
ror
xor
je
mov
xchg
cmp
std
and
inc
das
enter
lret
push
mov
dec
mov
inc
fidivs
push
es
ja
sub
in
hlt
ss
add
loopne
gs
jl
lret
and
pop
jle
lock
cmp
lods
ss
xor
xor
fadds
xchg
sbb
pushf
xor
and
and
jg
stos
fmuls
icebp
sbb
mov
jecxz
fisubrs
mov
dec
hlt
mov
fildll
sarl
leave
lds
inc
in
xchg
mulb
adc
add
mov
inc
mov
addr16
jb
pop
dec
mov
jg
nop
add
or
xor
adcl
cmpl
jp
mov
test
stos
sub
pop
mov
mov
test
lods
ret
and
hlt
mov
xor
fbld
sbb
push
sarl
lcall
jle
jmp
cmpsl
sub
pushl
in
cmc
sub
fwait
daa
das
mov
testl
cmc
xor
int3
test
lcall
inc
lret
and
add
jo
outsb
popf
inc
pushf
lea
imul
and
sti
pop
subb
out
mov
pop
jg
dec
mov
mov
leave
pop
xchg
cmpsl
jae
mov
mov
es
xor
pop
xchg
pusha
add
jmp
lret
das
sahf
jg
or
loope
jge
cmp
xor
mov
sub
ret
xchg
sbb
or
mov
xlat
dec
jae
mov
or
stc
ss
ljmp
push
pop
stos
ret
js
clc
inc
loopne
xor
scas
jbe
push
push
outsb
out
mov
repz
fidivs
adc
mov
dec
jns
pop
mov
fildl
mov
outsb
iret
jp
sub
jl
dec
xchg
or
mov
mov
or
dec
cmpl
movsb
fimuls
cmp
dec
and
fcoml
jecxz
jge
lret
jg
insb
lret
dec
arpl
xchg
xchg
adc
ljmp
mov
aas
sub
in
cwtl
mov
mov
ret
pop
aaa
pop
push
ja
out
pop
mov
scas
inc
adc
lahf
ret
mov
pusha
lcall
mov
mov
pop
movsl
xor
loope
adcb
add
mov
mov
mov
test
pushf
push
das
mov
jmp
jmp
add
xor
imul
sbb
or
mov
mov
add
rcrl
jbe
andl
mov
pop
push
ss
les
pop
nop
inc
mov
int3
scas
cmp
mov
mov
std
xor
mov
dec
xor
jmp
ss
lahf
bound
add
adc
jno
sub
sub
and
outsb
stc
mov
mov
movsl
les
push
xchg
add
push
sbb
loope
int3
icebp
xchg
pop
xchg
jmp
adc
hlt
mov
mov
inc
fcoml
xchg
xor
lods
push
mov
and
jg
pop
aaa
inc
loopne
jge
jnp
push
fwait
shl
adc
mov
outsb
fsts
imul
dec
and
add
xor
cmp
pop
pushf
ss
push
jle
lahf
jbe
or
xchg
inc
int3
dec
icebp
pop
sbb
ja
pop
cmpsb
movsb
ror
mov
xchg
xor
ret
test
sbb
test
lods
rolb
fwait
icebp
cmp
mov
mov
lcall
daa
adc
pop
sub
arpl
xor
pop
pop
mov
mov
sub
or
mov
decl
cmc
inc
cmpsb
imul
repz
js
loop
push
adc
bound
dec
push
test
popf
frstor
js
cmp
inc
dec
xor
cli
xorl
xchg
rolb
xchg
hlt
lret
addr16
pushf
or
or
add
call
xchg
lea
jp
pusha
mov
movsl
das
loope
adc
mov
rol
jl
ljmp
jb
sbb
sub
jno
push
lods
or
popa
xchg
lret
mov
push
xchg
cmp
cmpsl
dec
repz
inc
addl
push
jb
rclb
cli
out
sbb
fadds
lcall
in
mov
nop
mov
or
lods
and
int
inc
nop
rcrl
jbe
mov
aaa
pusha
dec
mov
fwait
sahf
repnz
dec
jle
sbb
decb
and
sahf
cmp
shlb
in
mov
push
out
sahf
mov
scas
dec
out
jmp
adc
ljmp
dec
test
loop
in
arpl
inc
aas
xor
out
sub
sbb
call
pop
aaa
pushf
dec
pop
sbb
in
sub
hlt
and
cmp
cmp
jns
pop
outsb
or
stos
enter
jbe
dec
fwait
mov
fdivrl
mov
add
xchg
fbld
pop
outsl
gs
dec
jns
ljmp
add
pop
sub
rorb
cmc
mov
mov
mov
sbb
pop
in
lret
and
push
test
aad
jmp
sbbb
in
sarl
shrb
inc
test
mov
pop
mov
jmp
std
out
jns
dec
dec
adc
cltd
inc
add
in
sbb
out
hlt
out
mov
sub
push
push
popa
aas
lcall
inc
xchg
add
enter
int3
sahf
dec
jbe
adc
pop
scas
and
inc
sti
lcall
add
jg
fcomps
xor
dec
mov
add
ficoml
pop
xor
dec
aaa
inc
adcl
das
mov
adc
cmp
ja
jge
sahf
push
insb
cli
outsl
test
pop
out
rolb
mov
scas
xor
fimuls
pop
dec
out
stc
mov
cmp
pop
into
es
sbb
mov
sub
push
icebp
nop
ljmp
adcb
xor
in
sub
out
sbbl
cmp
jp
lret
pop
sbb
push
push
pop
sbb
adc
pop
or
bound
jmp
sub
ds
or
sbb
and
iret
jb
loopne
adc
out
pushf
xor
xorb
gs
pop
outsl
lds
mov
mov
mov
popf
fcom
and
outsl
roll
cld
dec
movsl
out
sub
xor
push
adc
scas
pop
jns
xchg
insb
cmp
inc
sub
cmp
cmpsl
mov
fucom
xor
jnp
stc
bound
or
jno
sub
push
or
jecxz
sbb
sub
xchg
sti
xchg
push
pop
add
sub
test
call
or
ret
shrl
sub
leave
test
mov
fidivs
mov
pop
stc
les
mov
xchg
xor
cs
ss
push
outsl
mov
pop
inc
mov
shl
fcoml
ret
movsb
ret
push
inc
das
jae
in
pop
cltd
xchg
mov
mov
inc
fmull
push
or
or
and
in
sub
add
notb
inc
sti
add
cld
jbe
dec
movsb
xor
jmp
lahf
pop
loope
dec
divb
rclb
daa
xchg
mov
mov
notl
nop
inc
nop
fdivrl
mov
imul
jbe
shl
insl
xor
stc
and
sbb
mov
cmc
xor
adc
out
lret
data16
int
hlt
sbb
fidivrs
dec
sub
ret
mov
pusha
in
or
fwait
dec
push
jae
imul
cmp
add
pop
insb
data16
negb
or
sbb
pusha
jnp
loop
out
jmp
je
nop
ja
pushf
sbb
xchg
popa
fdiv
mov
clc
fs
xlat
mov
push
test
nop
and
imulb
bound
jne
sbb
sub
ja
sahf
sub
fucomip
pop
push
mov
push
mov
js
dec
push
sbb
mov
out
mov
pop
jo
int3
pop
pop
cmc
jb
push
out
sbb
dec
repnz
inc
push
push
leave
sub
xchg
push
cmpl
inc
stos
lock
in
pushf
clc
shll
lcall
jp
scas
jae
jge
mov
fs
jmp
loope
jo
jo
and
mov
enter
lods
les
mov
sub
test
insl
fisubrs
push
fcoml
jno
mov
in
inc
outsb
shlb
cmp
xchg
shlb
cs
jbe
ret
adc
out
lock
pushf
push
mov
xchg
mov
sub
cmp
icebp
fsubrp
rorb
int
rcrb
int
enter
inc
call
pop
or
jno,pt
fcmovnb
int3
ret
je
nop
sti
insb
pusha
jmp
xchg
int
shrb
sbb
mov
aaa
aad
adcb
incb
std
sti
cs
mov
subps
mov
in
add
cmp
xor
test
xchg
sbb
popa
cmpxchg
jns
cltd
test
stos
arpl
xor
ret
mov
rcrb
stos
or
or
lock
cmp
rorl
in
cmp
cmc
xor
lods
and
mov
out
dec
test
and
xlat
inc
js
nop
rcrl
test
adc
fcmovbe
mov
js
jecxz
lahf
mov
pop
iret
stc
sub
in
adc
ficoms
or
lea
mov
or
das
mov
rolb
cld
sbb
xchg
mov
dec
mov
loop
mov
cmp
cmp
adcl
or
push
pop
push
cmp
les
jmp
imul
sbb
jl
lret
es
icebp
shl
shlb
lret
call
pop
mov
xbegin
enter
sbb
loope
pop
and
adc
push
imul
pop
fwait
pop
cmp
jb
imul
push
dec
fstpl
aam
dec
repz
icebp
js
xchg
mov
jmp
movsb
cmp
inc
cmpsl
insl
xchg
stos
adc
sub
mov
mov
adc
jecxz
lret
dec
dec
mov
ja
jbe
pop
test
pop
mov
mov
int3
lock
addr16
cli
pusha
sbb
lcall
or
pusha
adc
jmp
and
icebp
fimull
cwtl
inc
arpl
push
fwait
shll
dec
out
popf
iret
out
and
in
jmp
mov
lds
ja
mov
adc
ja
callw
sbb
inc
mov
jle
jno
cmp
movsl
test
xlat
cmp
pop
xchg
arpl
inc
dec
add
push
mov
xchg
lea
das
xchg
and
loope
pop
cmp
xor
mov
inc
cmpsb
stos
out
jcxz
or
or
sarb
ret
shlb
cmpsb
ret
pop
and
cmp
xor
shrl
xorb
sarb
jg
outsb
or
mov
add
jle
mov
add
pop
mov
sahf
mov
ret
les
jnp
aad
in
pop
shll
data16
in
aaa
test
inc
scas
push
shl
xchg
ds
mov
arpl
jecxz
rcr
cmp
int3
imul
in
sub
add
xchg
mov
mov
pop
inc
jl
push
aad
push
xor
js
mov
pop
loope
dec
push
add
lods
xchg
cmpsl
shl
mov
add
mov
inc
mov
jo
frstor
imul
push
adcb
cld
ja
in
mov
stos
out
fisubrl
sbb
sub
push
xchg
push
pop
adc
pop
ficoml
lock
jge
std
mov
add
clc
and
and
pop
jno
andb
sub
subl
sahf
mov
std
pop
mov
dec
movsb
mov
sbb
xor
sbb
xor
aas
and
insb
inc
inc
inc
bnd
push
fisubs
mov
sbb
fs
pop
cmp
js
xor
mov
dec
cmp
out
xor
jb
jns
push
pop
fildll
jae
in
push
in
and
jnp
cmp
ja
and
mov
out
scas
mov
or
stc
xchg
leave
je
jnp
arpl
pop
jl
and
mov
loope
cmp
movsb
loopne
sbb
dec
mov
fs
push
pop
sub
int
hlt
mov
test
adc
stos
pop
sub
addb
push
scas
lcall
cmp
xchg
mov
xchg
inc
pusha
inc
pop
frstor
add
leave
sbb
jle,pt
push
sub
int
std
mov
aas
outsl
dec
jge
enter
and
cli
add
data16
pop
lret
xor
loop
test
int
xorb
into
sbb
mov
xchg
mov
loop
add
cmp
pusha
lea
xchg
pusha
fbld
push
fsubl
mov
enter
leave
lcall
fs
lahf
int
cmpsb
aaa
mov
bound
gs
ljmp
mov
test
and
into
adc
jae
lret
imul
xchg
mov
cmpsl
mov
jne
fcompl
addr16
and
lods
jnp
cltd
adc
or
in
jb
lret
ss
mov
shll
std
mov
das
jbe
add
inc
in
dec
xchg
pop
daa
addl
int3
dec
fbstp
or
push
and
in
add
sub
popa
push
xchg
fdivs
filds
or
mov
and
in
fisubs
cmp
push
pop
push
repz
mov
push
mov
push
clc
loopne
mov
into
fcomip
mov
push
inc
shlb
insb
sub
test
cmp
out
in
sub
jae
inc
and
sub
push
mov
cmc
sub
xchg
out
int3
popa
ret
push
jp
lcall
stos
cmp
dec
jns
or
push
imul
ss
push
pop
push
stos
out
testb
sti
mov
xchg
xchg
sub
jbe
inc
sbb
es
dec
push
pop
push
stos
out
testb
sti
mov
xchg
xchg
sub
jbe
inc
sbb
es
dec
pop
fistl
stos
out
testl
xchg
xchg
sub
jbe
inc
sbb
es
dec
xchg
stos
sbb
mov
mov
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
mov
xor
mov
push
roll
mov
insb
sub
in
adc
mov
fdivl
dec
cmp
sub
sbb
or
jl
insl
lds
in
mov
ret
pushf
scas
mov
gs
or
cmp
insb
aam
xlat
jl
pop
mov
enter
pushf
in
repz
mov
movsb
hlt
push
pop
jp
testl
leave
mov
or
arpl
inc
in
into
and
mov
cmc
sub
insb
lcall
pop
imulb
test
test
xchg
or
mov
es
fbld
dec
and
mov
test
mov
movsb
sub
insb
dec
movsb
or
cltd
out
ret
sub
sbb
jno
add
inc
and
rclb
mov
dec
push
cmpsb
inc
jae
xlat
sbb
js
fsubl
imul
cwtl
mov
dec
jg
lods
and
cld
push
in
inc
fdivl
idivl
or
jl
insb
sub
xlat
fsts
lret
lock
add
dec
dec
cmc
outsl
adc
cli
xchg
sub
mov
push
fadds
inc
int
cltd
pop
cmpsl
pop
cltd
sbb
push
dec
hlt
dec
lock
out
xchg
mov
es
in
pop
jmp
inc
fdivl
gs
sub
sbb
or
jl
insb
lds
in
adc
mov
fdivl
gs
sub
sbb
or
jl
insb
lds
in
adc
repz
sub
shll
and
in
cmp
out
js
ss
mov
les
enter
lret
mov
push
cmp
loopne
lret
shl
idivl
mov
mov
rcrl
pop
mov
and
adc
sbb
push
in
sub
jmp
loope
mov
adc
clc
ficompl
and
or
lock
xchg
sti
iret
jns
xor
or
rcrb
jnp
mov
push
loope
push
in
dec
push
xchg
scas
add
or
in
pop
je,pt
inc
cli
xchg
adc
iret
out
mov
inc
nop
ds
inc
sbb
aas
pop
cmp
jo
sbb
out
pop
mov
inc
pop
arpl
jno
xor
jno
inc
mov
xchg
test
add
mov
aas
push
lcall
adc
lods
outsl
push
aaa
stos
cmc
add
rclb
mov
cmp
cmp
lahf
popa
nop
ja
arpl
rcrb
jl
xor
push
jmp
loopne
dec
add
push
sahf
xlat
cmp
jge
push
imul
loop
rolb
mov
pop
inc
cwtl
bound
into
xor
inc
sti
and
push
pop
sti
jge
in
je
xor
fidivs
ret
leave
ds
adc
add
cs
jmp
inc
dec
add
mov
xlat
in
push
out
add
jo
decb
push
lahf
pop
ds
bnd
sub
rcll
add
sub
into
das
mov
xchg
dec
xor
mov
inc
jne
add
pop
mov
cmp
loopne
ret
mov
and
pop
ret
cmp
add
dec
xor
test
jp
xchg
test
lret
iret
call
jnp
in
sub
repz
xor
shll
loopne
enter
insl
cwtl
sbb
test
adc
push
negl
jo
adc
and
push
jg
jp
and
push
push
push
push
xor
inc
inc
push
arpl
mov
imul
fcmovbe
aam
mov
pop
push
into
cs
xchg
aaa
cmc
or
sbb
sbb
or
lcall
std
popa
cmp
mov
cmp
cltd
cld
das
pop
fisubrl
add
aas
lds
std
je
jmp
enter
mov
adc
jg
and
add
ror
dec
pop
cltd
mov
inc
lock
in
gs
mov
mov
mov
shll
aad
outsl
lods
je
mov
cmpsb
incl
adc
sbb
cmp
pop
pop
and
in
cmp
out
mov
mov
jecxz
out
dec
into
int
fimuls
ljmp
loop
dec
push
std
dec
push
subl
imul
pop
xor
daa
nop
mov
ficoml
or
iret
stos
mov
mov
or
loope
pextrw
dec
out
fmulp
out
lock
iret
adc
adc
sub
inc
lods
jl
aaa
loopne
sub
iret
mov
xorl
xchg
push
cmp
movsl
pop
or
lods
cmc
test
stos
imul
jne
adc
inc
pop
adc
js
cmp
sahf
or
mov
outsb
push
scas
cmpsb
mov
test
pop
mov
jp
push
and
jae
pop
or
inc
sahf
gs
xlat
push
test
jne
xchg
cwtl
sbb
mov
fiaddl
jle
jl
mov
pusha
push
loope
or
jnp
or
movsb
ss
dec
sbb
imul
dec
movsb
call
mov
jmp
push
gs
scas
lea
mov
jg
mov
pop
sbb
scas
or
dec
and
xchg
hlt
sarl
adc
movsl
rclb
lods
and
lahf
lock
orl
mov
mov
dec
iret
xor
or
loopne
fistl
test
fwait
sbb
int3
mov
jne
out
push
mov
xchg
sub
je
xor
or
rol
xchg
mov
jge
mov
push
xchg
add
inc
sbb
insb
inc
lods
pop
loopne
test
mov
sbb
insl
outsb
out
add
outsl
add
nop
jp
mov
dec
pop
in
jge
jb
dec
or
pminub
mov
mov
adc
imul
negl
fwait
dec
adcb
ja
mov
dec
and
test
and
add
addr16
mov
lret
cmpl
sbb
jl
cltd
shrb
call
scas
dec
and
shll
adc
shrl
cs
scas
test
cltd
test
xorb
loop
sub
cs
dec
inc
fldt
and
test
mov
loopne
dec
lcall
daa
pop
xchg
popa
adc
sbb
shrl
enter
lcall
addr16
outsb
pop
cmp
fsts
mov
cmp
sub
repnz
xchg
lret
adc
jns
rcrb
stos
in
subl
jmp
or
pop
insb
out
push
mov
loop
jmp
daa
fcoms
in
repz
xchg
out
inc
pop
cs
xor
loop
pop
mov
inc
clc
test
push
jle
push
pop
cmp
jae
out
and
scas
sub
mov
ds
sub
jp
emms
dec
dec
sarl
lea
xor
lds
sbb
adc
cmp
mov
adc
adc
jo
or
push
out
pop
adc
lcall
repz
cs
xor
pop
arpl
inc
mov
adc
mov
lods
mov
dec
test
fs
je
mov
out
add
or
aad
arpl
pop
mov
sub
int3
dec
sahf
or
jl
add
push
jo
jbe
bound
rolb
mov
lock
sar
cmc
jno
jno,pn
cmp
dec
imul
ficompl
test
out
mov
add
jnp
sub
xorl
xor
dec
insb
xchg
jb
jo
nop
or
lahf
mov
pop
popf
sub
add
pushf
mov
jns
mov
outsl
or
popf
scas
nop
test
mov
inc
jne,pt
loop
stos
xchg
cmp
movsb
cld
cmpsl
xchg
out
fstpt
jns
addr16
outsl
hlt
sub
add
outsb
imul
xor
mov
mov
xlat
pushf
adc
cmp
adc
lods
sti
pop
outsl
pop
mov
pop
jecxz
jbe
jnp
bound
fsub
mov
sbb
sbb
sub
and
es
bound
aam
add
add
or
jp
push
mov
inc
jg
mov
xchg
loopne
es
clc
cmc
lods
std
inc
mov
fiadds
call
je
mov
movsl
lds
std
adc
ret
stos
into
jae
call
pop
dec
ficoms
faddp
add
mov
push
lahf
xchg
dec
lods
jns
push
cwtl
mov
push
xor
test
cmpsb
mov
cmp
fwait
outsb
dec
add
lea
mov
or
adc
nop
mov
xchg
add
and
movsb
xchg
dec
and
sbb
mov
pop
in
ja
and
push
push
daa
lret
movsl
pop
dec
inc
sbb
arpl
movsl
popf
int
bound
imul
rcrb
jge
shll
loopne
cwtl
dec
sub
cli
mov
cmpsb
and
mov
stos
sub
je
lahf
insl
pop
sti
loope
shr
xchg
sti
scas
mov
sub
in
push
cld
push
dec
jp
jno
adc
repnz
fidivl
je
push
push
xchg
pop
mov
outsb
test
xchg
cwtl
in
and
das
or
ret
in
push
cld
push
nop
sub
xor
lods
nop
adc
loop
cmp
mov
jo
aaa
ljmp
push
jne
lock
sarb
test
jb
scas
int3
mov
repz
jo
outsb
mov
adc
xchg
or
push
in
sbb
adc
xor
jnp
xchg
fstl
cmp
les
iret
mov
lock
adc
int3
mov
sbb
push
out
sbb
inc
or
nop
pop
shrb
ficoms
repnz
xchg
push
adc
mov
add
pop
movl
ljmp
and
into
testb
sub
frstor
and
and
mov
clc
inc
or
loopne
scas
sar
mov
pop
and
push
ds
lds
sbb
cmp
add
push
mov
mov
mov
jbe
jae
jg
push
loop
ds
cli
xor
add
xchg
test
dec
adc
out
fistpl
clc
hlt
rcrl
sub
adc
aaa
cmpsb
sub
pop
xchg
adc
cltd
xor
scas
push
xchg
sbb
pop
jno
sub
push
mov
adc
pop
int3
popf
pop
lret
bound
icebp
out
addr16
rclb
mov
imul
and
dec
ret
mov
xchg
lret
int
sub
in
arpl
in
push
js
orb
test
adc
xor
jne
pop
and
out
cltd
mov
pop
loope
aad
xchg
cltd
jnp
andl
hlt
mov
cmp
add
cs
adc
in
cmp
hlt
aad
dec
mov
pop
inc
jl
lods
rcrb
test
and
int
loopne
mov
fwait
daa
and
fwait
jmp
xchg
ror
xor
cmp
loopne
aam
sub
or
jp
xor
add
sbb
cwtl
out
ljmp
dec
cmp
rol
leave
cmpsb
mov
push
fistl
jmp
dec
push
ret
sub
arpl
sysenter
inc
mov
clc
adc
xor
mul
cld
inc
xor
arpl
lds
rolw
fdivrs
sahf
popf
pop
xor
fs
in
jge
inc
cwtl
into
out
adc
mov
pop
sbb
loopne
xchg
dec
add
mov
dec
pop
lahf
adc
mov
ljmp
xchg
jp
lcall
cmpsl
pop
loop
aad
and
dec
mov
shrb
ja
movl
loopne
sbbl
sub
push
lods
jno
repnz
fcomip
jns
cmp
enter
sbb
adc
push
sbb
pop
inc
fisubs
push
data16
leave
jnp
dec
adc
fisubrl
cmp
sahf
rcrb
adc
add
inc
shlb
test
pop
xorl
lds
stos
mov
das
mov
cld
lods
mov
and
fwait
jae
rcll
sahf
and
push
aad
xchg
sbb
xchg
jle
mov
popa
mov
jg
dec
aad
inc
pop
stos
xor
dec
loopne
loopne
dec
or
sub
sbb
add
hlt
mov
cmp
push
daa
add
push
cmp
aad
rclb
imul
lret
movsl
jnp
sbb
inc
pop
jg
sti
sub
ja
mov
push
dec
xor
xor
cmp
lods
loop
test
pop
xchg
call
sub
pop
ret
popa
push
cltd
adc
adc
cld
lret
fwait
jle
aaa
adc
sbb
clc
stos
push
lock
pop
icebp
sub
rcrl
fwait
ret
mov
psrld
popf
leave
push
loopne
fildl
iret
int
xlat
add
sub
sbb
pop
jecxz
std
scas
gs
sub
cmp
cld
and
mov
pop
lcall
outsb
jg
or
arpl
xchg
push
dec
popa
add
or
xchg
ret
inc
frstor
fdivrl
stc
loopne
popa
jnp
hlt
in
or
add
fcmove
stc
int
outsl
dec
adc
sbb
lcall
mov
in
sti
xor
daa
push
dec
aam
out
call
enter
lods
sbb
mov
cmpsb
sub
adc
dec
mov
push
pop
daa
ss
dec
test
lods
call
orl
add
fcoml
aaa
or
scas
addr16
cmpsb
shrb
cmp
repz
and
pop
daa
pop
pop
or
push
es
dec
aad
into
push
ficoml
pop
sub
pop
test
xchg
scas
inc
xchg
mov
push
push
cwtl
js
movsl
mov
jge
push
and
adc
mov
push
insl
adc
int3
lret
stos
xchg
mov
lret
jg
cmp
pop
andl
aaa
sub
arpl
negb
push
dec
movsb
test
sub
je
ss
cli
mov
mov
push
test
adc
mov
call
dec
cwtl
xor
xor
jp
jp
clc
add
dec
aaa
popf
jb
pop
lret
xchg
xchg
xor
lcall
sbbb
hlt
hlt
xchg
mov
in
test
jmp
lods
movsl
aam
or
dec
fiaddl
inc
dec
clc
sub
xorl
shll
lcall
idiv
lds
std
and
mov
dec
mov
mov
hlt
cltd
jo
cmp
sbb
mov
icebp
in
and
leave
movsl
fs
sub
cmpsb
jns
imul
sti
mov
xchg
arpl
sub
in
jp
in
lods
or
xor
push
mov
cmpb
mov
and
sar
je
aad
movsl
test
movsb
scas
xor
jo
jecxz
sub
jecxz
push
data16
mov
cmp
adc
lods
xor
testb
cmp
test
leave
xchg
std
sti
mov
aas
js
dec
sti
pushf
ficoms
cwtl
sti
decb
jp
ror
jmp
xchg
mov
in
xchg
mov
sti
ljmp
movb
add
nop
ja
repz
cmc
fwait
dec
adc
repnz
ret
push
mov
push
adc
repz
nop
out
mov
icebp
mov
pop
idivl
adcb
loop
stos
inc
shr
lock
xor
or
mov
and
push
icebp
pop
mov
gs
cltd
std
cmp
mov
insl
inc
jne
lret
sub
xchg
add
push
iret
scas
sbb
shl
adc
mov
cwtl
add
inc
mov
dec
add
dec
pop
out
sbb
xor
lds
pusha
adc
add
mov
fwait
mov
testl
movsb
inc
and
cltd
add
pop
cwtl
pop
mov
mov
cld
addb
div
push
sti
pop
lret
popa
lret
and
push
icebp
dec
stos
or
test
push
pop
sahf
xchg
repz
push
mov
add
mov
aas
mov
addr16
jo,pn
sahf
fwait
push
and
jg
lock
mov
xchg
dec
dec
outsl
cmp
dec
jb
jbe
xchg
loope
or
jo
and
xchg
mov
jg
cmp
and
push
sti
and
xor
jb
vhaddps
adc
cs
inc
inc
push
insb
jmp
ret
adcb
xlat
push
test
push
adc
cmpsb
xchg
mov
cli
dec
xchg
int
cld
inc
fstp
xor
js
insb
movsb
aad
bound
cmp
inc
sahf
pop
cmc
push
sbb
push
loop
out
aas
call
xchg
pop
popf
shl
test
cmp
sbbl
add
cmp
and
lret
adc
daa
call
jg
jle
cmp
pusha
push
cltd
daa
or
xchg
lret
into
inc
mov
lret
insl
loope
mov
pop
sbb
adc
add
xchg
adc
cmp
sub
xor
sub
xchg
in
dec
and
inc
xor
pop
js
mov
pop
fildl
xor
out
in
or
mov
fisubrl
mov
xchg
out
mov
mov
fs
je
or
adc
adc
inc
push
loop
xchg
add
cmpsb
inc
jp
sbb
scas
daa
cmp
out
hlt
cltd
lods
pop
popl
test
fs
xchg
dec
sbb
lcall
push
pop
fcomps
sub
js
or
mov
stos
aas
jo
inc
cmc
mov
into
fsubs
ds
test
mov
push
ja
sub
jbe
push
out
sarb
fsubrs
cmpsb
xor
int3
cmp
add
inc
movsl
stos
xlat
pop
mov
mov
pushaw
xor
aas
jno
push
dec
xor
mov
cmc
jbe
add
xor
or
adc
out
mov
sbb
xlat
push
in
daa
outsl
jle
mov
xchg
test
pop
cld
dec
mov
and
movsb
daa
push
mov
jbe
mov
dec
in
push
xor
mov
ss
pop
in
ret
cmpb
pop
push
mul
xchg
je
xor
mov
sbb
inc
xlat
mov
push
xor
cmp
and
pop
xchg
in
in
in
nop
popa
fcomps
pop
xor
imul
test
popl
sbb
jbe
add
pop
aaa
sub
scas
add
aam
loope
loopne
push
xor
sub
inc
int3
ja
sbb
push
mov
jl
dec
ret
pusha
fstl
add
or
fbstp
cmp
mov
pop
push
ss
mov
xchg
push
arpl
dec
jp
pop
bound
inc
push
mov
dec
xor
jb
fadds
lea
lods
push
fldenv
das
fnstsw
xchg
in
outsb
mov
push
incl
call
pop
cld
in
add
dec
jle
ja
or
jmp
xchg
bound
aaa
ds
cmp
call
sbb
test
jae
add
cmp
push
sub
push
xor
push
lds
fcmovnb
bound
xor
push
cmp
out
pop
aaa
clc
jnp
push
jmp
daa
jmp
cmp
aaa
insl
inc
jmp
mov
imul
xorl
jmp
adc
add
dec
inc
hlt
adc
pusha
sahf
add
out
pop
and
in
xchg
lock
and
sarb
andb
outsl
fsubrs
int
pop
sbb
mov
mov
xchg
xchg
add
and
negb
adc
mov
push
jae
hlt
movsl
test
and
shll
xlat
mov
sbb
pop
adc
inc
xchg
aad
cmp
push
je
fsubrs
popa
aaa
xchg
leave
out
bound
jne
pop
call
adc
ja
lods
and
mov
sbb
andl
jo
cli
icebp
inc
ret
in
inc
aad
cmp
push
stc
pop
jge
sar
pop
stos
xor
loop
pushf
mov
push
sahf
popf
bound
or
negb
inc
dec
movsb
dec
subb
fwait
xor
cmc
je
mov
cmp
in
pop
js
mov
movsl
lcall
data16
jno
nop
out
cltd
lods
cmp
mov
inc
das
sub
jle
lret
ffreep
pop
xor
mov
pop
inc
mov
in
xor
aaa
outsb
stos
inc
sbb
mov
add
dec
movsb
mov
cwtl
sbb
js
les
and
adc
in
mov
push
jmp
arpl
lahf
sarl
inc
xchg
in
xchg
push
and
or
sbb
rclb
enter
fsubl
sbb
mov
outsl
stos
test
stos
fistpl
add
mov
push
jnp
or
movsb
or
inc
imul
xorb
xor
lret
xlat
pop
mov
in
sarl
call
fwait
push
stc
lds
fs
movhps
cmp
xchg
repnz
addb
in
sbb
pusha
in
arpl
stos
int3
bound
dec
adc
cmpsb
mov
mov
push
sub
dec
enter
adc
inc
xchg
push
sbb
imul
imul
sbb
xor
aad
std
inc
mov
inc
pop
test
sahf
or
lahf
sahf
aas
dec
scas
pop
scas
into
imul
in
jl
cmp
in
mov
clc
adc
cmc
loope
adc
mov
out
push
mov
jb
clc
mov
or
xor
outsl
jle
bound
ret
xor
sbb
jnp
pop
pop
rcrl
aam
inc
cs
fs
call
jno
dec
mov
mov
xchg
outsl
inc
stos
stc
pop
adc
cmc
push
or
inc
ljmp
inc
test
scas
xchg
sub
jo
test
inc
xchg
sti
dec
jp
rclb
mov
scas
jg
mov
rorl
das
adcl
cmp
mov
scas
and
mov
pushf
pop
imul
fildl
pop
sbb
je
sbb
seto
xchg
dec
sbb
bound
cmp
dec
pop
pop
push
fisubl
movsl
sub
mov
sub
jb
daa
mov
xor
jmp
and
xor
cltd
jno
dec
pop
add
mov
and
dec
out
mov
cmp
and
mov
nop
pop
andb
mov
fiaddl
cld
push
in
inc
fdivl
gs
sub
sbb
or
jl
insb
lds
in
adc
mov
fdivl
gs
sub
sbb
or
jl
insb
lds
in
adc
cld
push
in
fdivl
gs
mov
lods
jl
insb
lds
dec
add
mov
push
in
inc
pop
cmc
dec
movsl
ret
push
das
mov
or
or
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
cli
stos
ljmp
cmp
rol
xchg
pusha
mov
cmp
sub
or
or
cli
adc
and
xor
inc
mov
jb
sarb
push
pop
mov
ret
sub
sbb
or
cli
xchg
ljmp
sbb
cmpb
les
shll
jl
jbe
jg
jge
mov
lcall
pop
inc
cwtd
jno
mov
xchg
xchg
lods
add
add
mov
pop
cmpsl
in
into
push
cli
inc
cli
sbb
lods
daa
dec
adc
add
push
xchg
pop
movsl
pop
pop
inc
sub
arpl
add
and
mov
lret
fs
inc
dec
dec
ret
imul
mov
lds
adc
push
pop
iret
addr16
inc
mov
jo
xchg
xchg
xchg
mov
dec
iret
dec
sub
lret
or
adc
mov
lret
cmp
pop
movsl
mov
xor
cmp
mov
xchg
ret
stos
and
adc
outsb
mov
sub
jp
sbb
cmc
xor
adc
and
pop
lret
push
stos
bound
add
pop
lods
dec
mov
sbb
xchg
data16
pop
mov
adc
jecxz
shll
or
cmp
push
lcall
stc
xor
push
int
movsb
mov
cmp
mov
xchg
jg
pop
jo
and
pop
mov
bound
xchg
push
pop
mov
ret
sub
sbb
or
cli
adc
and
xor
inc
mov
jb
cmpb
mov
cmp
sub
sbb
or
cli
ret
insl
or
inc
imul
inc
cwtl
into
sub
mov
xchg
lcall
push
leave
mov
lret
inc
mov
shrl
shlb
jge
jnp
inc
or
int
fwait
rcrb
fildl
les
mov
pusha
orl
cli
mov
dec
fdivs
daa
mov
add
xor
sub
jae
mov
clc
lods
mov
das
cmp
pop
mov
ja
aaa
push
xchg
in
xor
int
or
push
test
push
popf
sub
inc
and
ss
clc
aad
push
cmp
or
sbb
ret
lret
nop
or
push
pop
sbb
sahf
fisttps
cs
xor
cmp
sbb
outsb
mov
orl
xchg
push
cltd
lock
test
shlb
int
ret
sbb
xchg
test
dec
inc
test
cmp
mov
mov
fisubrl
mov
lcall
adc
je
jno
dec
jp
and
inc
pop
scas
pushf
loope
outsb
ds
inc
and
inc
lahf
cmpsb
mov
jbe
inc
int
popf
adc
pop
xchg
loopne
inc
js
movsb
or
aam
inc
jne
mov
ja
mov
mov
mov
std
push
scas
xchg
jo
stos
mov
sbb
dec
and
and
sbb
out
stos
xorb
push
pop
dec
movb
fistps
call
out
pop
js
ja
bound
cmp
xchg
dec
loopne
mov
adc
xchg
jl
imul
fs
push
loop
arpl
std
dec
aad
dec
jne
mov
scas
jecxz
xchg
movsb
push
test
or
xor
sbb
lcall
add
jno
repz
ret
xchg
cwtl
dec
mov
daa
mov
aam
jle
sub
sbb
shll
fs
aam
push
push
push
xchg
push
pop
sub
mov
mov
enter
jecxz
subb
repz
jp
inc
iret
jns
testb
int3
sub
sbb
es
xchg
xor
push
pop
mov
das
cwtl
and
int3
dec
loope
ss
mov
sbb
pop
or
in
mov
shll
fdiv
decb
mov
flds
js
sub
xor
push
aam
mov
decb
frstor
jbe
and
loope
mov
push
pop
xor
xlat
inc
mov
mov
xchg
cmp
scas
push
aam
jns
into
std
adc
mov
mov
aam
add
add
ret
aas
cli
or
dec
stos
outsl
sub
test
stos
xor
cmp
xor
xchg
repz
ficomps
sub
adcl
insb
mov
shrl
sbb
std
pop
movsl
test
inc
sub
shll
inc
pop
pop
inc
mov
sbb
mov
sub
cmp
xchg
repnz
sbb
daa
mov
push
xor
fdivrp
xchg
jge
sarl
dec
dec
push
cmp
pop
adc
xlat
dec
jl
ljmp
jo
scas
xchg
adc
lock
add
outsb
inc
cmp
nop
clc
sbb
mov
enter
mov
outsl
and
data16
sbb
jne
addr16
int
pop
adc
insb
fimuls
test
je
cmp
cmpl
nop
movsb
xchg
jle
aaa
sub
mov
mov
or
insb
xor
xchg
loope
cmpsb
inc
shll
jl
dec
xchg
aaa
or
aam
imul
outsl
mov
jnp
push
add
pop
icebp
adc
add
insb
ret
adc
jmp
fidivrl
xchg
sbb
xchg
pop
lcall
aaa
pop
daa
push
movsb
idivl
cltd
test
cld
cs
jge
pop
push
xchg
lret
inc
xchg
dec
out
call
mov
push
push
test
pop
rcrl
lret
pop
xor
das
lret
addr16
push
ret
jle
fwait
orb
mov
mov
cmp
or
movsl
or
cmpb
or
mov
je
fs
fnstcw
loopne
sub
cmc
xor
pop
jo
js
inc
inc
push
popa
in
jno
fiadds
and
jmp
ret
aas
pop
enter
adc
cmp
nop
add
xor
xchg
add
jbe
repnz
or
es
mov
add
lea
cmp
jnp
add
pushf
movl
dec
loopne
pop
inc
xchg
imul
bound
lods
inc
int3
mov
cmpsb
jp
jnp
lcall
cmp
and
pushf
xchg
movsb
lds
mov
movsb
pushf
mov
xor
shrb
or
leave
dec
out
jmp
sub
push
fdivl
cwtl
cs
aas
add
test
shl
loopne
lret
mov
inc
xor
mov
push
imul
icebp
lods
fstpt
push
hlt
mov
mov
jecxz
mov
inc
inc
lods
test
stos
sub
add
sub
aaa
mov
cmp
and
ja
pop
lods
jo
inc
cld
push
pusha
jecxz
icebp
and
push
push
test
xchg
pusha
jbe
mov
xor
mov
hlt
in
inc
dec
push
xor
lea
push
dec
mov
imul
repnz
scas
mov
popa
jns
ja
inc
and
mov
into
fcmove
test
mov
lea
pop
addr16
dec
loope
xchg
and
adc
cmc
xor
jecxz
push
adc
shll
cmp
jae
movsl
icebp
cmpsb
arpl
dec
jp
sub
xorl
and
lret
mov
es
cltd
push
xlat
stc
fxch
jg
xchg
or
push
mov
enter
or
mov
int3
add
out
ja
enter
dec
dec
fmuls
js
out
daa
inc
mov
insl
and
mov
push
mov
aas
xor
ss
sub
lods
in
orb
fcmovnb
bound
adc
jle
loop
cmpsb
jns
std
cltd
sahf
mov
outsl
lahf
pop
fs
and
dec
mov
shrb
hlt
inc
cmc
dec
mov
adc
mov
ljmp
cmp
test
push
inc
mov
mov
movaps
mov
out
mov
mov
cmp
push
stos
mov
push
dec
rcrb
inc
stos
cli
push
adc
add
aad
addr16
pop
xchg
divl
into
inc
fisttps
mov
outsb
imul
jnp
imul
das
xor
enter
sahf
loope
int
pop
xorl
test
xchg
mov
pop
pop
mov
stos
insb
adc
ficompl
cmp
push
sub
mov
fbstp
inc
add
ja
es
je
cmp
inc
cmp
sbb
jg
fidivs
jmp
sub
sarl
repnz
stos
jmp
inc
cli
stc
ret
dec
arpl
repz
les
and
out
jne
pop
stos
cs
scas
sahf
icebp
fsubs
cwtl
push
int
mov
push
adc
ljmp
xchg
das
lods
jae
dec
lea
adc
in
xor
test
pusha
movsl
and
fdivs
jp
mov
inc
push
xor
ret
and
cld
dec
dec
inc
les
and
addr16
jle
xchg
ret
nop
cwtl
sti
in
jmp
jo
fwait
jp
les
inc
dec
cmpsl
fwait
xor
rcrb
and
jne
stos
dec
roll
push
mov
dec
imul
xorb
xor
mov
sub
shll
popf
add
outsl
lods
aaa
in
inc
sub
inc
sbb
pusha
adc
mov
or
jp
mov
mov
bound
jg
cmp
scas
cltd
jno
or
pushf
add
mov
sarl
cmpsb
mov
sub
sub
xor
pop
dec
mov
sbb
pusha
jmp
jne
cmp
ds
cltd
call
and
pusha
pop
lods
stos
dec
jbe
jmp
mov
stos
mov
xor
gs
aad
push
call
mov
loopne
cmpsl
cli
inc
mov
repz
lret
sub
jae
pop
fcmovnb
mov
pop
dec
or
adc
addl
lcall
adc
cmp
call
add
pop
xor
sub
xchg
shl
jne
rcl
ret
fisubs
flds
pusha
mov
fisttps
sbb
fnstenv
outsb
dec
mov
mov
sahf
push
pushf
inc
xchg
addl
xchg
fsubrp
xlat
sbb
xchg
fidivrs
sbb
test
jns
adc
push
and
jne
mov
jnp
xor
and
jp
xchg
repnz
fisubrl
psrad
push
pop
call
inc
add
test
adc
mov
out
int
mov
jecxz
adc
scas
inc
pop
xor
jne
lahf
loopne
gs
push
ss
mov
aam
push
nop
mov
lods
popl
sbb
xchg
mov
xchg
mov
mov
cli
sub
leave
mov
fsts
mov
push
popa
xor
xor
xor
xchg
and
sub
sub
jnp
push
fnstcw
call
xchg
inc
insl
fistl
pop
pushf
mov
mov
ds
dec
pop
mov
jne
push
sbb
push
dec
addr16
mov
scas
mov
lret
shll
loope
movsl
insl
lcall
aad
dec
push
sub
cmp
cltd
fs
mov
ret
fwait
aaa
push
cmp
incl
xor
dec
call
lds
cmp
mov
xlat
lods
xor
fsub
mov
imul
xlat
jmp
call
scas
xchg
add
cld
repz
inc
jge
jge
lcall
sub
mov
sub
cltd
sub
cmpsl
mov
scas
test
pop
mov
xchg
xor
push
aad
lret
xlat
pushf
ja
leave
fdivs
adc
mov
and
cmp
inc
xchg
xor
adc
add
dec
and
cltd
mov
insb
insb
sub
insb
xchg
loopne
leave
repz
and
fmulp
xor
es
push
paddsw
jp
mov
jnp
pop
call
dec
flds
xchg
shll
push
add
xchg
xchg
mov
pop
xor
ss
movsb
mov
shl
popa
add
fiaddl
dec
xor
dec
and
cmp
mov
stc
jo
pop
loope
add
addr16
ljmp
repz
icebp
xor
adc
jecxz
and
fdivs
aam
dec
xor
sbb
imul
fidivrs
popa
xchg
rcrl
loop
iret
inc
jp
cmp
add
pop
cmp
daa
lods
je
mov
jae
imul
es
adcb
fidivrl
pop
push
xor
jp
xchg
movsl
sbb
cmp
rclb
std
pusha
and
xor
and
leave
pop
push
xor
mov
mov
ja
push
ret
daa
cmc
roll
mov
fmul
adc
xor
sbb
xchg
shll
ljmp
out
pop
fs
movnti
lods
je
pop
push
adc
in
pop
sbb
inc
jmp
and
stos
xor
fsts
scas
in
inc
fmull
lods
sub
orl
jmp
mov
or
mov
mov
outsb
iret
lock
jge
enter
inc
push
add
ficomps
insl
test
push
xchg
ret
inc
mov
adc
mov
dec
cmc
xchg
es
sbb
jmp
rclb
push
sub
arpl
into
mov
jp
cmp
jl
dec
mov
call
ret
jl
or
mov
push
add
jg
lods
inc
sub
aaa
std
mov
sarl
das
mov
mov
jns
xchg
mov
mov
jg
ljmp
mov
push
mov
scas
std
shlb
fwait
jnp
ss
mov
and
mov
dec
mov
mov
outsb
lds
std
stos
sbb
inc
addr16
mov
clc
and
fisubl
jns
fmuls
or
imul
roll
jns
pop
fucomp
out
popa
push
hlt
inc
cmp
out
aad
fs
lock
ja
daa
pusha
xor
ljmp
xorb
js
dec
mov
jbe
pop
movsb
outsl
outsb
rcrb
xchg
mov
xchg
add
push
out
movsl
lea
enter
call
jle
jge
jp
pop
mov
addr16
mov
pop
jbe
push
clc
sbb
scas
or
cs
in
dec
fwait
mov
shlb
xor
stos
inc
dec
cs
add
add
insb
jl
sbb
cltd
inc
and
out
and
xor
sbb
push
push
mov
add
lar
adc
repz
adc
xor
jl
sub
dec
insl
mov
push
adc
outsl
pop
sti
dec
cltd
out
jnp
push
adc
jns
add
stos
aaa
pop
jmp
shl
pushf
int3
sub
ja
mov
rcll
lret
add
out
icebp
jne
add
xchg
xchg
sub
arpl
test
adc
idivl
pop
push
in
ret
mov
insb
divl
dec
movsl
fs
lds
add
lahf
lret
mov
imul
popf
fldl
dec
and
cmp
pop
repz
or
popf
test
out
sbb
mov
fldenv
nop
pop
mov
incb
movsl
xor
inc
push
out
lods
xchg
lahf
inc
mov
xchg
and
ret
sub
push
dec
and
je
jg
nop
add
dec
xchg
rol
loop
push
xchg
rorb
fildl
add
lds
into
inc
imulb
add
mov
pop
mov
dec
dec
add
xchg
push
fcompl
xchg
daa
ds
sbb
jns
adc
les
stos
mov
sub
mov
ret
inc
and
call
push
mov
add
and
xchg
lods
test
push
int
into
mov
popf
sbb
push
xor
sub
das
hlt
test
outsl
push
or
sub
movsb
add
prefetch
int3
mov
lret
jbe
in
mov
mov
icebp
push
adc
mov
andb
mov
out
ret
sub
push
xor
loope
int
xor
iret
gs
fadds
mov
test
lock
sti
and
imul
pop
jne
ss
ftst
popf
out
push
inc
je
mov
xlat
push
into
pop
add
xchg
cmp
lret
ret
popf
push
adc
mov
loop
call
fbstp
adc
mov
and
mov
out
fstp
imul
call
mov
cmc
jns
jmp
mov
and
push
mov
fmuls
lds
mov
add
rolb
loop
push
stos
shlb
and
xor
jmp
cmpsl
popf
sub
add
aam
inc
or
mov
jp
cli
les
jle
xor
push
mov
cmpsb
pop
and
out
dec
inc
enter
imul
icebp
and
cmpsb
jle
jae
add
xor
mov
and
mov
add
fcmovnb
fdivp
push
popf
jb
mov
cwtl
adc
xchg
cmpsl
imul
push
jl
jecxz
inc
or
mov
cli
movsl
ficoml
xchg
pop
into
movsb
les
outsl
push
jns
lds
mov
fs
or
and
imul
adc
xorb
xchg
pop
mov
jecxz
addr16
out
punpckhdq
mov
daa
xchg
xor
rcrb
mov
out
push
jne
mov
cmpsl
inc
add
into
cmp
pop
shlb
sbb
mov
sbb
test
call
daa
cltd
mov
inc
js
push
adc
xchg
mov
mov
sbb
and
dec
into
insl
mov
mov
and
stos
mov
mov
add
cmc
loopne
cmp
mov
dec
es
mov
cs
cmp
js
mov
cmpl
je
mov
cmp
daa
scas
icebp
or
mov
xor
add
cmpsl
dec
push
xchg
jp
incl
xchg
pop
imulb
adc
or
and
and
out
push
fildl
mov
add
es
push
jae,pt
add
lea
cmpl
loopne
mov
test
sbb
rcl
test
or
testb
aad
popa
mov
pop
mov
pop
mov
test
fs
rcrl
fidivs
test
jb
xlat
mov
insb
mov
pushf
push
fdivp
pop
shlb
fidivs
stc
adc
adc
in
int3
xchg
out
inc
pop
dec
mov
sbbl
jmp
hlt
pop
or
xchg
mov
movsl
pop
loope
fs
stc
xor
inc
test
xchg
mov
pavgw
lret
adc
loop
inc
and
mov
sbb
mov
push
lret
sub
inc
add
dec
rcl
cld
mov
add
ret
lods
mov
mov
aad
mov
inc
sub
dec
cmp
enter
pop
pop
fildl
test
leave
out
pop
fistps
pop
shl
mov
push
out
into
lahf
psubd
add
movsl
cmp
insb
cmp
pusha
lea
mov
nop
cmp
incb
fmuls
push
jecxz
gs
push
xorb
dec
add
cmpsb
loop
mov
adcb
fstps
fdivrs
mov
nop
add
fstpl
cmp
adc
push
or
scas
mov
mov
in
mov
cmp
sbb
sbb
pop
arpl
test
sub
hlt
xor
xor
popf
data16
test
clc
xor
cmc
sub
ljmp
pop
movsb
pop
push
cmp
insb
int
outsb
jecxz
pop
scas
daa
imul
xor
lret
test
std
adc
enter
mov
and
sub
xchg
push
inc
movsb
or
and
bound
daa
mov
sub
xor
lcall
faddl
negl
je
add
dec
xor
mov
repnz
xor
push
aad
or
ret
and
icebp
shlb
js
xchg
insb
scas
add
cltd
mov
repnz
pop
jnp
sub
or
mov
lods
mov
jae
xchg
in
ret
lahf
les
inc
dec
lds
out
sbb
cmp
mov
insb
sarl
lahf
sub
cmp
xchg
daa
inc
cmpsl
cmp
divl
mov
inc
sub
fists
pop
gs
testl
sbb
inc
xchg
outsl
call
test
inc
clc
lcall
add
cld
add
bound
jl
stos
mov
pop
andl
movsb
lock
int
mov
dec
or
mov
mov
mov
or
cmp
mov
std
xor
in
mov
xor
dec
nop
fwait
xorl
mov
out
sub
lcall
fcoms
rcl
lcall
jnp
pushl
dec
mov
js
fcoml
pusha
mov
aas
cli
dec
ret
out
sbb
js
mulb
or
js
lcall
and
adc
adc
stos
ljmp
jg
movsl
and
jnp
inc
xchg
test
daa
xor
lds
cmpl
or
xor
test
pop
jne
mov
sub
stos
push
jne
repnz
addr16
cmp
mov
inc
cli
jae
loopne
cmpsb
stos
mov
ret
sbb
pop
sbb
cmc
mov
jns
cmp
mov
out
or
out
sbbl
lock
int3
inc
movsb
loopne
rclb
mov
rorb
shrb
mov
loopne
jnp
rdmsr
fcompl
fdivl
or
es
psubsw
lods
cs
push
xor
add
xor
gs
addr16
in
push
subb
fs
push
pop
xchg
xchg
dec
fcmovnb
imul
lea
or
hlt
add
lea
popa
lods
mov
jb
xchg
and
rclb
ja
imul
cmp
xchg
movsb
sub
and
pop
or
xchg
test
inc
jns
push
cmp
lods
xchg
addr16
lods
aas
jne
cltd
repz
mov
push
gs
roll
sub
scas
out
out
xchg
cmp
xchg
pop
or
sub
fldl
test
push
mov
jp
inc
fst
or
cmp
push
scas
movsl
jae
inc
popa
mov
mov
push
push
rcl
or
test
jge
adc
icebp
out
push
or
aad
add
xor
cs
push
stos
bound
xchg
push
pop
mov
ret
sub
sbb
or
cli
adc
and
xor
inc
mov
jb
cmpb
mov
cmp
sub
sbb
or
cli
adc
xor
xor
inc
mov
jae
xchg
push
pop
mov
ret
sub
sbb
or
cli
ds
inc
stos
bound
insl
rorb
mov
mov
pop
aad
in
cmc
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
