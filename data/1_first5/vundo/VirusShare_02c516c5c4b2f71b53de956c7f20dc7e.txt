mov
mov
add
add
add
inc
add
and
cmpsb
add
mov
add
push
and
lods
add
pusha
add
or
add
xor
in
inc
add
adc
mov
or
add
cwtl
add
pusha
add
mov
cwtl
push
adc
mov
push
mov
add
mov
dec
xadd
movsb
or
add
push
nop
add
lock
mov
imul
jo
fisttpll
rolb
pop
inc
add
or
scas
or
rolb
or
add
add
add
add
add
add
add
add
or
add
add
lret
or
ret
add
movups
decl
add
nop
add
or
add
add
add
mov
add
add
add
add
add
or
adc
adc
push
add
rolb
add
add
add
add
add
out
addb
add
add
add
pusha
add
add
add
cmovo
lods
push
rolb
dec
or
mov
lock
add
add
add
add
rolb
aad
add
jecxz
add
and
add
in
add
and
add
in
add
and
add
in
add
dec
add
add
or
add
pop
nop
add
mov
add
jo
add
adc
add
or
add
rolb
and
add
or
add
or
pop
push
mov
add
pusha
add
add
add
or
add
push
push
add
punpcklbw
lret
or
rolb
add
add
or
xchg
jo
orb
add
or
add
rolb
add
adc
cmp
pusha
add
add
add
or
add
add
testb
add
pop
loopne
jg
inc
add
nop
add
push
nop
add
rolb
add
add
jbe
xor
fimuls
mov
push
push
pusha
add
addb
add
add
in
push
popl
push
popl
mov
movb
push
popl
mov
push
popl
movb
call
movw
cmp
jne
mov
ret
movw
movb
push
orb
push
push
popl
xorb
mov
subl
xor
pusha
orw
call
subw
mov
subw
movb
push
sbbb
or
xorl
movb
addl
andl
push
popl
push
addw
call
push
popl
cmpl
jne
push
popl
push
popl
call
addb
push
popl
ret
orl
jmp
push
popl
xor
add
xorw
mov
xorl
addb
shl
push
popl
movw
mov
push
popl
subw
shl
orb
mov
addl
push
popl
cmp
jne
sub
mov
addl
sub
addl
call
push
popl
popa
push
popl
subl
pusha
push
popl
addw
call
andl
addw
mov
subb
push
push
popl
xorl
movw
push
popl
addl
orw
andw
push
orw
sbbw
call
push
popl
push
andl
xorl
push
popl
addl
movb
pop
add
sbbl
cmp
jne
xorw
ret
xorb
subb
popa
push
popl
call
sub
push
push
popl
xorl
push
popl
orb
addl
push
popl
movw
push
subw
movw
call
push
popl
xor
push
push
not
dec
not
sub
mov
add
xchg
and
mov
subl
orw
shl
subl
push
push
popl
addw
xor
orb
sbbw
push
orw
addl
call
subw
push
sbbb
mov
push
popl
push
popl
push
addw
or
jmp
push
popl
pop
subb
mov
movw
andb
push
addb
push
and
push
orw
mov
orb
mov
subb
rep
push
popl
sub
pop
sub
orw
pop
push
shl
sub
mov
add
xchg
push
xor
mov
add
xchg
push
popl
xorw
xor
sbbl
jmp
andw
push
popl
sub
push
popl
subb
mov
push
popl
sub
andw
push
popl
sub
push
popl
push
popl
mov
push
popl
addl
sub
push
popl
or
jne
xorw
add
push
popl
jmp
add
mov
xorl
shr
orl
shl
mov
mov
andw
add
xorl
subb
jmp
push
popl
sub
xor
mov
or
add
orl
cmp
jne
push
popl
and
mov
subb
push
popl
add
orw
mov
sbbw
add
movb
sbbb
cmp
jne
push
popl
sbbw
ret
push
popl
push
subl
xor
andw
subb
pushl
subw
xorw
pop
push
popl
orl
lea
push
popl
or
sbbb
mov
mov
xorb
movl
mov
orw
push
popl
lods
push
popl
addb
mov
orw
push
popl
pop
add
ret
push
popl
push
popl
push
add
push
popl
mov
push
popl
addb
add
push
popl
movb
push
xorw
push
mov
push
push
popl
movw
push
xorw
push
andw
mov
push
popl
subw
mov
and
add
push
popl
movb
pushl
sbbl
push
popl
mov
push
popl
push
popl
add
push
popl
add
xorb
mov
orw
add
movw
orl
xor
push
popl
sbbw
lea
push
popl
mov
push
popl
push
popl
add
movw
mov
or
sub
xor
xorb
push
popl
rol
push
popl
push
popl
xor
movw
and
inc
xorw
cmpb
jne
push
popl
cmp
je
andb
andb
inc
sbbw
orl
cmp
jb
movl
sub
mov
movb
xorb
add
push
popl
xorw
movzwl
push
popl
mov
subl
or
add
push
popl
mov
push
popl
push
popl
add
push
popl
pop
movb
cmp
jbe
subl
push
popl
cmp
jae
push
popl
pushl
sub
andw
pushl
movb
push
push
popl
subw
xorl
andw
push
popl
addl
or
pushl
xorw
call
push
popl
push
popl
call
push
popl
movw
pop
sbbb
pop
sbbl
push
popl
pop
push
popl
pop
add
xorl
pop
movb
push
popl
leave
push
popl
push
popl
ret
push
popl
call
stc
in
sarl
int3
or
sbb
inc
in
adcb
in
fldz
sub
jp
stos
cmp
mov
in
xchg
mov
mov
fucomi
mov
inc
cmpsl
js
and
mov
pop
push
sub
je
nop
orb
mov
or
inc
inc
repnz
ss
cmp
xor
mov
cmpsb
fisttpl
or
or
iret
add
push
adc
mull
xchg
mov
and
ss
jnp
es
cli
jecxz
popf
xchg
pusha
mov
stos
leave
rol
lods
rolb
dec
fisubrs
das
fbld
daa
sub
mov
lahf
loopne
mov
out
hlt
int3
leave
push
js
mov
ret
push
ds
mov
rolb
or
outsb
nop
lods
lods
in
shrb
fistps
mov
inc
and
dec
add
push
add
lds
add
imul
or
add
pushl
pop
jnp
outsl
lahf
call
ss
push
or
arpl
sub
mov
mov
enter
cli
or
dec
fdivr
sbb
xchg
cwtl
pop
inc
rol
or
xlat
and
dec
lret
or
pop
pop
movsb
leave
push
push
bound
movsb
bound
and
xor
mov
outsb
lcall
mov
pushl
dec
fdivr
sbb
rcl
push
cmp
and
loopne
and
outsl
incl
add
push
in
das
push
fdivrs
fadd
call
test
xchg
movsb
xor
sbb
mov
ja
imul
mov
inc
pop
aas
call
sub
das
das
repz
in
push
jecxz
sbb
jae
das
clc
fists
iret
sarb
dec
arpl
inc
cmp
and
clc
push
outsl
and
aam
daa
movsb
leave
sbb
xchg
mov
pop
ss
adc
jno
mov
imul
stc
push
sahf
test
sbb
add
cltd
pop
cld
test
dec
xchg
mov
fildll
jmp
add
mov
leave
mov
pop
shlb
jecxz
adc
cmpsl
leave
shl
pcmpeqw
pushf
add
cmpsl
test
pop
inc
mov
push
xchg
inc
fdivr
sub
push
lret
sub
lcall
in
mov
pop
or
mov
and
movsl
xor
je
popa
aas
imul
repnz
mov
sbb
push
aam
sub
mov
dec
pop
xchg
mov
aaa
xchg
mov
xchg
shrl
dec
out
movsb
dec
sub
cmpsl
dec
xchg
dec
dec
lret
hlt
enter
rcrb
cmp
arpl
cmp
rcl
inc
fadd
data16
cmp
or
inc
add
das
in
adc
frstpm(287
jp
mov
outsl
cwtl
jne
cmp
sahf
gs
or
mov
sub
lret
xchg
inc
sti
push
pop
pop
cmp
pop
push
in
mov
fwait
mov
and
aad
dec
sub
arpl
lret
inc
sbb
jns
sbb
add
mov
push
dec
mov
jl
mov
jmp
jmp
jno,pt
jp
mov
lahf
push
sbb
jge
stos
or
dec
inc
xchg
mov
jne
movsl
pop
inc
fidivrs
xchg
ret
pop
lretw
and
xchg
inc
shll
int
mov
imul
mov
add
aad
xchg
adc
and
arpl
pop
sub
mov
das
loop
cmp
in
iret
daa
cmp
in
and
add
addr16
mov
loope
cld
fcmovnu
clc
push
inc
sbb
add
or
movsb
bound
sub
aad
jmp
shl
in
sbb
test
and
xchg
cmp
div
mov
sub
jmp
gs
dec
mov
adc
pop
testb
sub
sub
lret
sub
mov
push
push
call
jp
pop
pop
sahf
jcxz
rolb
push
movsb
bound
mov
fdivr
jae
and
sbb
enter
push
push
add
cmp
fwait
fwait
sub
int
fcoml
sahf
xorl
inc
add
cld
cltd
sub
mov
mov
pop
mov
cmp
shlb
pop
js
dec
into
pop
mov
add
test
sbb
mov
rcl
inc
or
movl
xchg
dec
movl
mov
push
mov
cli
cmp
mov
or
lret
in
ss
sub
dec
jp
fdivr
mov
decl
cs
xchg
lds
mov
mov
and
ret
and
rdpmc
sub
sbb
mov
sub
pop
pop
push
psadbw
pop
ljmp
add
xchg
nop
loope
out
mov
or
push
in
decb
push
adc
add
mov
fdivr
jno
pop
add
fnstsw
call
xlat
adc
repz
dec
and
dec
shl
icebp
sub
scas
cs
das
sbbl
sub
lcall
dec
mov
lahf
movl
pop
fsubrp
and
cmp
daa
movsl
orb
fdivr
in
js
bound
out
pop
or
lods
and
dec
int
cmp
incl
add
mov
inc
fdivr
cs
leave
rclb
mov
cs
jb
mov
cltd
push
jl
pop
out
jo
popl
inc
pop
decb
pop
adc
loopne
dec
push
push
out
call
cmp
daa
xor
pop
pushl
stc
loop
cmc
sbb
dec
fdivr
sbb
pop
jle
aam
cmpsb
or
sub
mov
sbb
mul
lods
roll
xchg
jns
hlt
mov
js
stos
mov
lret
mov
xor
imul
push
mov
out
pop
xchg
mov
pop
push
call
mov
int3
cs
push
out
mov
daa
fucom
jl
cmp
ja
xchg
mov
jle
xor
dec
daa
repnz
add
dec
aas
int
sti
add
cs
and
adc
mov
mov
jns
inc
lret
lea
push
pop
xchg
mov
aad
arpl
mov
push
loop
out
clc
pop
jbe
jecxz
xor
test
leave
shlb
dec
rolb
cli
in
shrl
in
std
insl
jle
push
aas
mov
sbb
daa
sbb
xlat
daa
mov
xchg
xchg
movsb
inc
in
push
sbb
inc
arpl
sub
filds
push
ljmp
and
faddl
fldl
out
fwait
dec
sub
xchg
dec
int3
loop
dec
dec
pop
outsl
cmc
in
sarl
jo
dec
dec
sub
mov
mov
sbb
mov
add
sbb
xchg
mov
rclb
cli
and
push
adc
inc
data16
ja
xchg
ljmp
pop
adc
dec
sub
lcall
imulb
das
icebp
pop
or
mov
cli
cmp
int
in
mov
sub
fwait
leave
mov
sar
in
pop
in
sub
test
and
cld
loopne
sbb
in
int
xchg
pop
loopne
movsb
leave
inc
xor
sub
sub
and
xchg
rorl
aad
mov
in
dec
leave
insl
movsl
push
jb
mov
dec
add
clc
cmpl
repnz
push
xor
xor
insl
hlt
sbb
sbb
mov
jo
test
fs
pushf
xor
jne
leave
daa
fwait
fwait
jne
jne
cmp
sahf
xchg
jne
and
fnstsw
inc
add
push
mov
mov
les
rcrb
sbb
mov
sbb
in
aam
in
inc
xchg
and
add
in
hlt
or
in
and
push
pop
jae
dec
lret
fdivl
mov
pushf
pop
lock
inc
add
sbb
dec
dec
or
dec
and
mov
jns
sbb
dec
loope
sbb
xor
ret
xchg
sub
adc
testb
inc
fmull
shrl
add
jmp
or
orl
repnz
adc
add
or
cmpsb
xchg
mov
mul
mov
out
jmp
cmc
push
aaa
in
mov
fwait
cld
mov
pop
cmp
repnz
loopne
cmc
lcall
mov
mov
cmp
mov
mov
push
rcrb
pop
ja
xor
lds
and
in
add
push
sahf
shll
xor
inc
outsl
xchg
dec
int
push
dec
sbb
push
pop
fndisi(8087
jbe
addr16
and
push
pop
outsl
divb
nop
mov
scas
nop
jle
icebp
lret
ss
add
lcall
mov
movd
mov
daa
mov
daa
sub
mov
mov
xor
adc
sbb
xchg
pop
repz
xchg
ret
roll
fcoms
adc
mov
dec
fcoml
jmp
out
std
jo
fiaddl
jbe
sub
mov
push
cs
into
and
cmp
sahf
je
dec
add
mov
mov
mov
shr
pop
pop
mov
dec
pop
filds
xchg
jmp
jl
in
xchg
adc
sub
movsb
leave
rolb
sbb
adc
iret
add
cld
iret
mov
pop
divl
mov
jmp
ljmp
xchg
lea
insb
mov
lock
mov
sahf
mov
push
dec
paddsb
roll
push
xor
push
stos
xor
rcrb
or
lcall
push
pop
mov
cltd
aas
dec
cwtl
inc
movl
jmp
add
fistpl
lcall
in
add
fadds
push
fldt
lcall
in
dec
cmp
xchg
das
lcall
mov
dec
in
add
jns
mov
adc
outsl
leave
jne
xchg
fabs
push
imulb
xchg
fdivs
dec
inc
out
iret
std
or
fsts
cmp
popf
dec
call
jae
inc
pop
ss
dec
xor
pop
or
xchg
mov
lods
dec
popf
and
mov
sub
arpl
add
std
hlt
cltd
add
hlt
out
repnz
mov
int3
add
push
cli
dec
jb
les
pop
mov
push
sub
mov
sbb
lcall
das
pop
scas
outsl
inc
iret
add
fwait
dec
sub
or
stos
cmp
out
cltd
dec
outsb
pop
inc
shrl
mov
cmp
ss
popa
out
fcoml
pop
fisubs
aaa
and
pop
and
adc
xchg
xlat
mov
jnp
lock
data16
sbb
ja
cmp
arpl
push
test
sbb
inc
arpl
aas
inc
outsb
mul
les
fldcw
add
outsl
shr
decb
into
jmp
mov
push
push
fucomip
and
sub
mov
xchg
push
add
stc
mov
inc
fdivr
push
push
cwtl
nop
mov
out
cld
cmp
icebp
daa
sub
mov
sti
and
adc
out
mov
rolb
aad
xchg
lcall
in
fstpt
xchg
sub
xchg
gs
cmp
cmp
pop
ss
jo
mov
aad
fwait
sbb
mov
aas
loop
clc
mov
rolb
jo
jg
dec
lock
sbb
arpl
mov
inc
in
les
gs
lret
add
out
inc
xchg
cmp
rcll
inc
faddl
rol
mov
push
mov
xchg
and
leave
leave
mov
fisubs
inc
dec
and
dec
int3
into
popf
jl
mov
add
test
xor
xchg
mov
push
push
outsb
jns
inc
das
stc
lret
adcl
ljmp
push
adc
js
popf
xor
push
sarb
mov
lcall
dec
call
inc
fcoml
lahf
repz
ja
pop
sbb
pop
mov
mov
sub
xor
xchg
enter
xor
cmpsl
add
in
push
push
inc
fdivr
insl
int
aas
ds
push
arpl
hlt
movb
xlat
sub
les
xchg
stos
mov
jg
add
xchg
aad
mov
pop
push
loope
xchg
pop
js
test
xchg
mov
jp
and
push
std
mov
es
cltd
mov
jne
cmp
sahf
cltd
add
jge
fisubrs
inc
add
sbb
cltd
cltd
aad
jne
cmp
sahf
mov
inc
add
mov
push
fdivr
cmpsl
or
xchg
psrld
mov
mov
scas
jne
push
jg
repz
js
fs
mov
aaa
loop
mov
movsl
xlat
lock
xchg
jns
sbb
insl
cmp
push
inc
lea
pop
int3
mov
lret
fcomps
leave
rolb
popa
ja
mov
nop
out
aam
jecxz
jbe
push
repz
inc
mov
sbb
xchg
xchg
jge
and
sahf
jl
inc
mov
mov
lcall
lea
xchg
andl
dec
fsubs
dec
bound
pop
std
movsb
inc
and
sbb
sti
jecxz
pop
stos
mov
lods
ficompl
and
dec
push
push
in
sub
pop
inc
push
call
js
xor
test
mov
sar
pop
pop
mov
fisubs
shlb
pop
jp
mov
jmp
xchg
pop
rolb
jne
jne
push
jnp
dec
and
and
adc
out
mov
ljmp
push
in
xchg
mov
in
lret
push
aad
cmp
das
inc
je
and
mov
movups
push
xchg
fsubrs
jbe
and
lahf
and
in
xchg
paddusw
test
add
or
mov
and
stos
data16
or
leave
pop
adc
push
or
mov
jp
and
cs
faddl
xchg
jbe
sub
sbb
or
add
fstpl
add
in
test
sub
mov
jge
dec
lea
xchg
popf
adc
lods
push
push
sbbb
jbe
mov
push
push
imul
jno
shlb
sub
inc
sbb
pop
aaa
shr
pop
pop
mov
add
pop
fnsave
roll
in
cwtl
and
aam
push
enter
inc
fdivr
orl
jecxz
pop
jbe
and
dec
shl
popf
inc
sbb
pop
enter
cmp
aad
aas
pop
das
add
push
inc
cmpl
jne
push
jl
cmp
xor
mov
xor
aad
dec
sub
sbb
push
out
add
dec
pusha
out
rclb
arpl
ja
mov
mov
rcrl
pop
pop
mov
or
shll
pop
js
sub
and
jle
out
ja
lds
jnp
out
arpl
and
lret
inc
fcoml
test
add
or
outsl
in
movsl
jne
push
test
outsb
fldl
test
mov
popf
dec
shll
xor
insb
jne
pop
ja
mov
adc
xchg
sbb
xor
push
mov
dec
inc
rcl
imul
dec
lret
jno
mov
rolb
sbb
push
mov
lahf
movl
das
fbld
mov
pop
cld
mov
fdivr
sbb
sub
je
pop
outsl
or
cmp
lahf
out
fsubrs
loopne
lock
bound
je
pusha
mov
call
xor
int
xor
dec
rcrb
lods
subl
ljmp
jl
mov
mov
iret
clc
add
push
push
mov
ret
ss
xor
xor
fidivrl
mov
add
push
loopne
ja
mov
cwtl
sbb
push
push
jecxz
xor
adc
call
out
mov
jmp
fdivr
sbb
inc
in
das
negb
lods
cmp
icebp
sub
out
mov
das
in
sbb
bound
push
fnclex
ja
mov
out
sbb
mov
push
dec
inc
adc
xchg
ret
push
je
push
icebp
ret
inc
sbb
sub
xorl
insb
aas
mov
xchg
xchg
mov
mov
fwait
dec
sub
aad
xor
lods
jnp
test
and
cmp
sahf
insb
and
mov
fldl
inc
cld
mov
inc
adc
xchg
lcall
int
sahf
fs
push
mov
cld
mov
push
fiaddl
fadd
sbb
sbb
es
push
or
repnz
push
push
sub
sbbl
sub
lcall
mov
mov
shlb
push
inc
cmp
add
mov
sub
mov
mov
fdivr
sbb
in
cld
mov
stos
or
mov
inc
inc
ljmp
xchg
mov
jp
jno
fbld
fs
push
setno
jp
adc
out
fcomp
or
fidivrl
pop
bound
insl
in
dec
fldt
das
fisubrs
xlat
jl
push
dec
loopne
enter
inc
sbb
sub
iret
jp
sub
sbb
mov
inc
push
stos
call
add
repnz
ret
popf
or
dec
jno
fwait
das
test
das
out
lds
jp
cli
sbb
sbb
push
fs
push
sahf
jp
movsl
or
cmp
imul
jecxz
roll
xchg
and
popa
idivb
mov
pop
les
mov
mov
ret
jb
sbb
test
out
in
push
dec
push
push
out
in
loop
pop
xor
imul
cmp
mov
cli
pop
pop
mov
rol
dec
jo
ret
add
mov
xor
sarb
es
adc
mov
mov
cmpsl
sbb
mov
in
pushf
or
aam
dec
sub
sbb
push
mov
sti
int
push
pop
xor
adc
adc
das
mov
lret
fdivl
mov
cmp
or
out
cmc
pop
sbb
jle
inc
add
aad
jp
jmp
sub
lret
jle
mov
pop
jg
popl
call
sub
call
test
and
jne
loopne
aas
adc
fcom
and
dec
mov
mov
jo
jge
push
jno
movsl
xchg
push
or
mov
mov
inc
call
in
jae
imul
imul
idiv
movsl
xchg
mov
enter
jg
dec
xor
fistpl
adc
cmp
ljmp
fndisi(8087
jbe
test
push
or
push
sahf
mov
lds
xor
adc
loope
iret
mov
mov
popa
leave
mov
addr16
cmpsl
cmp
sbb
mov
mov
lods
rclb
lds
aam
xor
sbb
pop
mov
dec
fdivr
insb
stc
jecxz
fwait
ss
xor
loop
add
mov
xchg
dec
sbbl
push
aam
popf
je
mov
and
in
mov
inc
fdivr
fmull
js
iret
das
repz
or
sarl
mov
imul
cmp
mov
pop
dec
into
rolb
repz
jno
mov
addr16
xor
add
in
lds
add
aad
stos
xchg
fdivl
or
add
mov
and
cmp
pop
clc
or
icebp
mov
incl
add
add
mov
push
mov
and
xchg
xchg
inc
arpl
xlat
sarl
imulb
hlt
arpl
std
fsubp
push
dec
fwait
xchg
mov
jns
sbb
rcr
fistl
ja
lds
dec
dec
xor
push
mov
movsb
sub
adc
loope,pt
jne
jne
push
jns
and
push
cwtl
or
dec
inc
xchg
cmp
aas
sbb
pop
xor
add
jae
push
push
xor
adcl
movsb
pop
enter
or
icebp
mov
enter
loopne
push
addr16
je
ljmp
int
adc
xor
push
sub
or
jae
int
pushf
xor
xchg
push
sahf
mov
les
das
out
pop
or
fucomip
and
xchg
sbb
add
shrl
pop
fcmovnb
testb
dec
fdivr
sbb
push
jmp
add
in
mov
inc
in
mov
sub
sub
sub
movsb
popa
aas
fsts
xor
xchg
and
adc
and
das
mov
cmp
mov
xchg
dec
andb
aad
aas
add
and
jo
jbe
orb
scas
in
adc
icebp
rclb
mov
js
mov
std
in
push
leave
xchg
or
stc
pop
enter
into
push
dec
add
push
jmp
jno
push
ret
orb
inc
out
sbb
mov
test
xchg
xchg
xchg
and
aam
dec
and
cmp
ds
in
mov
pushf
hlt
mov
push
sahf
mov
les
xor
fs
push
or
ljmp
xor
xchg
lods
mov
mov
aad
mov
fistl
out
sbb
pop
insb
insl
rorl
popf
jo
and
mov
cltd
mov
mov
sbb
int3
add
mov
notb
sahf
les
movsb
bound
rol
fdivr
xchg
rorl
pop
pop
mov
push
pop
out
outsl
adc
pop
jnp
dec
enter
pusha
jo
cmp
mov
sbb
jne
push
jle
imul
mov
and
push
xor
aam
dec
sub
add
mov
inc
push
adc
bound
fstpl
dec
fwait
sub
test
aam
in
outsb
pop
cli
mov
lea
mov
ss
outsb
in
sub
fadd
and
pusha
mov
scas
dec
out
adc
xor
sbb
lock
sub
mov
jmp
popa
jg
nop
dec
js
dec
xor
mov
aas
dec
dec
push
push
in
cmp
lcall
and
add
inc
push
in
sbb
dec
and
add
pop
out
fwait
lds
out
fists
inc
sbb
add
push
mov
addr16
leave
rclb
hlt
in
test
mov
cli
nop
mov
push
fidivl
jo
jnp
lods
icebp
dec
pop
xchg
lea
mov
xchg
dec
push
push
out
ret
pop
push
xchg
mov
das
out
fldl
paddb
daa
daa
mov
in
push
jecxz
pusha
xchg
into
mov
mov
adc
ss
ljmp
hlt
js
mov
jae
lods
cltd
sbb
pop
aad
out
imul
fwait
or
cld
cmpsb
lds
and
enter
and
subl
adc
mov
in
add
push
or
xchg
test
sub
int3
dec
push
push
loope
inc
aaa
push
mov
ret
push
pop
mov
cmp
mov
sbb
xchg
fidivl
or
sahf
or
stos
test
mov
stos
pop
mov
out
aaa
shlb
aaa
mov
in
push
fstl
std
push
aaa
lods
in
inc
mov
xadd
clc
xchg
es
jns
inc
xchg
and
fimull
jb
sbb
addr16
mov
mov
and
jmp
out
lods
dec
and
mov
jne
mov
mov
jg
cli
cltd
mov
inc
dec
repz
jmp
aam
arpl
lcall
lret
mov
clc
push
dec
pop
push
in
lods
outsb
sub
push
out
pop
inc
push
daa
fnstenv
int3
xchg
cmp
mov
sub
pushf
jne
push
jle
mov
int3
mov
mov
jmp
xorl
jno
in
or
push
sbb
out
dec
lret
mov
push
pop
xor
test
je
mov
mov
clc
jle
mov
lcall
loop
scas
das
repnz
or
pop
scas
inc
out
aad
loopne
sub
push
in
jno
dec
and
fwait
clc
clc
rorb
inc
fsubl
add
lods
jnp
push
cmp
push
inc
out
das
fbld
mov
rcll
mul
push
push
mov
leave
shlb
sbb
dec
das
in
pop
or
pop
ret
and
inc
rcrb
fcom
pop
cltd
call
scas
mov
add
test
cltd
ja
dec
fimull
rclb
xor
sbb
xchg
out
ret
cmp
scas
ss
mov
inc
nop
test
mov
ret
or
daa
dec
lret
and
cltd
mov
addb
hlt
mov
mov
pushf
add
out
mov
sub
pop
sbb
add
in
pop
je
mov
lea
fnstcw
rorl
pusha
add
iret
mov
jae
xor
mov
xorb
xchg
repnz
movsl
xchg
in
mov
jecxz
mov
test
leave
rclb
jmp
add
outsl
sbbb
mov
jl
xchg
in
ficoms
pushf
sahf
test
sbb
jae
mov
cld
fidivrs
dec
cmpsl
add
jle
movsl
xchg
in
mov
adc
rolb
jae
and
adc
xor
xor
pop
jp
std
hlt
mov
out
roll
mov
das
or
or
aad
xchg
jne
push
test
out
fnsave
das
stc
lods
iret
add
in
xchg
xlat
dec
mov
mov
lock
dec
jbe
dec
push
push
jecxz
dec
aaa
push
mov
or
out
test
mov
rol
adc
int
mov
vcvtps2dq
fdivs
insb
pop
sbb
dec
or
push
add
xchg
enter
add
clc
mov
mov
inc
inc
sahf
loope
and
incl
sub
mov
out
leave
and
mov
ds
or
ret
sbb
cmpsb
mov
dec
jg
push
dec
bound
xchg
mov
insl
adc
gs
xorl
sub
xor
loop
mov
adc
das
and
jae
and
lahf
fcmovnbe
cmpsb
jmp
sbb
mov
mov
and
repnz
pop
mov
inc
or
pop
jp
mov
shrb
leave
rolb
fisttpl
lcall
in
in
pop
jp
fadds
adc
data16
leave
cltd
pop
sti
cltd
sti
inc
mov
stos
push
pop
push
callw
pop
lds
pusha
call
daa
pop
pop
addr16
cmc
mov
or
scas
leave
nop
mov
lods
in
jbe
loope
fsubrl
pop
and
mov
mov
xchg
sub
and
inc
sahf
shlb
and
fs
add
enter
pop
sbb
jb
xor
aad
aas
mov
andl
sbb
add
xchg
push
and
mov
aaa
sub
repnz
mov
inc
jae
aas
jne
sbb
in
aad
push
mov
push
mov
arpl
or
and
inc
sahf
loope
and
sub
mov
lcall
loop
and
jne
mov
xchg
adc
in
stc
loopne
xchg
sbb
jns
lods
sbb
jb
sbb
icebp
ret
add
xor
dec
push
push
loop
test
insb
popa
mov
push
test
mov
mov
hlt
dec
push
xor
out
jg
add
cmp
mov
dec
mov
mov
dec
gs
mov
dec
push
negl
fwait
dec
push
push
out
divb
push
mov
jno
add
inc
add
nop
hlt
push
jb
add
fisubs
and
inc
movsl
mov
sub
clc
mov
adc
pusha
xlat
adc
out
movsb
leave
leave
and
inc
ja
mov
fs
dec
gs
or
add
inc
lods
push
sahf
lahf
popf
loopne
fcmovnb
or
xor
es
imul
add
mov
lcall
xlat
icebp
mov
mov
sti
mov
stos
xor
xor
shl
mov
jp
dec
mov
dec
mov
mov
imul
lods
movsb
sbb
mov
add
xchg
add
stos
fidivs
ret
dec
xchg
push
popa
xor
movsb
bound
add
push
or
bound
dec
push
notb
sbb
push
inc
xor
into
mov
dec
divb
mov
sub
dec
negl
and
jmp
fldcw
push
pop
sub
xchg
lock
insb
adc
sub
movsb
loop
push
inc
fdivr
sbb
and
inc
fdivr
pushf
stc
mov
dec
sub
inc
leave
fcom
cli
xchg
lret
cmp
sub
inc
sbb
fcoml
sahf
in
dec
in
les
das
repz
or
lcall
dec
ret
add
mov
xor
inc
inc
daa
mov
call
pop
aas
sarl
fnstsw
fwait
mov
inc
jnp
jmp
sti
mov
shll
or
aaa
mov
jnp
and
jle
mov
leave
mulb
fiadds
sub
mov
mov
sub
cli
pop
pop
mov
cmpsb
or
shll
pop
jp
fucomip
dec
inc
cmp
cmp
jcxz
pslld
mov
inc
fdivr
test
lods
or
inc
lahf
push
or
filds
dec
mov
sahf
mov
les
sbb
dec
out
jns
xorl
or
ljmp
xadd
pop
shll
test
and
mov
dec
loope
das
loop
jb
mov
ljmp
adc
sub
pop
cld
sbb
fdivr
sbb
cltd
pop
aam
jo
or
pop
and
imul
aam
das
xchg
cwtl
enter
pop
je
pop
mov
movsb
leave
pusha
das
cmc
pop
or
jae
mov
mov
imull
sub
les
outsw
leave
and
aad
and
inc
fdivr
out
jns
add
mov
lods
mov
inc
sbb
mov
sub
bound
jmp
add
pop
mov
dec
pop
mov
mov
mov
int3
dec
sahf
cmp
cmp
ds
enter
mov
or
and
fwait
inc
ljmp
sub
lcall
in
andl
xchg
sub
fs
rclb
lcall
dec
fsqrt
cmp
and
mov
push
outsb
pop
push
sbb
jne
rclb
outsb
in
sub
mov
test
scas
lock
mov
movsb
cld
ljmp
pop
stos
test
sbb
mov
fadds
adc
mov
sbb
lcall
adc
xchg
fdivl
xor
sti
dec
push
push
out
inc
or
mov
out
dec
jp
clc
push
xchg
fdivr
insb
and
fdivl
xchg
les
pop
xchg
mov
push
pop
xchg
adc
mov
mov
mov
lcall
sub
inc
les
xor
xchg
jmp
jmp
cmpsb
push
xchg
mov
mov
sub
ja
cld
in
aad
sub
xchg
xor
inc
inc
sahf
lock
in
add
enter
mov
add
nop
pop
leave
rcrb
std
and
jno
mov
mov
scas
dec
xchg
inc
movl
mov
pop
xor
mov
lcall
loop
add
and
mov
rcrb
movl
sub
xchg
lcall
jecxz
stos
mov
xchg
sub
and
aas
mov
cmc
dec
pop
outsl
mov
jo
js
imul
daa
les
push
insl
xchg
mov
inc
cmpsb
mov
adc
clc
push
xor
jae
and
adc
sub
push
cmp
std
hlt
mov
sub
adc
pop
add
shl
sbb
fadd
dec
pop
pop
fists
test
lret
mov
insb
jb
sbb
nop
jns
sbb
jno
ret
cltd
mov
mov
pop
pushf
sahf
sub
jmp
mov
out
call
vmovaps
cmc
lret
cmp
nop
mov
mov
fdivr
sbb
mov
and
sub
cltd
mov
loop
movsb
shr
fimull
xor
dec
int
and
test
xor
ljmp
add
sbb
push
fnstenv
and
dec
out
inc
fcoml
insl
fsubrs
mov
aad
aas
std
mov
push
jecxz
pop
adc
enter
xor
push
or
xor
sarb
sbb
int3
popf
inc
add
cmp
lock
cmc
aam
stos
mov
into
lea
mov
ss
push
mov
fdivl
dec
dec
inc
sub
ds
je
movsl
cmp
fstpt
in
out
xchg
cwtl
xchg
in
jmp
std
hlt
dec
cmc
imul
hlt
in
sarl
inc
cmp
in
add
and
and
and
jmp
fdiv
push
or
in
test
cmp
mov
jmp
sbb
xchg
mov
inc
inc
out
loopne
fidivrs
pop
sub
lcall
add
xchg
xchg
jno
jne
cmp
sahf
xchg
pop
aam
pop
fisttpll
inc
std
mov
push
fmull
lcall
in
mov
loopne
sub
inc
push
or
and
fdivl
xchg
into
cmpxchg
adc
pop
dec
push
sub
jne
push
xor
sub
shrb
jo
aas
je
lock
jb
sbb
push
and
sbb
fcmovne
fdivrs
imul
les
fistl
nop
cmpsl
mov
xor
push
inc
int3
notl
dec
aam
inc
fmull
out
push
jmp
add
lret
and
dec
shl
gs
outsl
bound
sbb
mov
leavew
rolb
add
cltd
mov
jmp
cmp
mov
mov
push
mov
movsb
int3
leave
and
jne
jb
xor
sbb
inc
in
jmp
push
ljmp
jge
xchg
cli
mov
inc
mov
mov
xchg
mov
sbb
or
jp
rorl
fwait
test
out
lock
jp
lods
out
mov
mov
lret
add
cmp
test
sbb
add
cltd
pop
stc
push
int3
cmpsb
loop
dec
fdivr
sbb
sub
inc
clc
pop
jp
imul
lods
sbb
add
adc
ret
sbb
inc
push
adcl
sub
lcall
mov
jmp
decb
ret
sbb
dec
roll
arpl
lcall
mov
cs
test
xchg
mov
rcll
in
sbb
xchg
sub
jecxz
roll
xchg
or
clc
imul
mov
icebp
push
jae
test
dec
out
js
sub
bound
jno
sti
fs
xchg
mov
lods
repnz
inc
mov
cmpsb
mov
sub
pop
fdiv
mov
leave
incb
enter
push
mov
in
mov
das
fbld
aas
add
sbb
dec
cs
jg
insl
sbb
mov
xchg
mov
push
push
sbb
jl
pusha
sbb
ficoml
lea
loope
insl
aam
scas
lret
imul
sbb
push
push
call
mov
cs
sahf
inc
mov
int
push
js
or
gs
push
push
inc
jo
xor
dec
aam
inc
fdivrl
popa
push
inc
dec
add
int
ret
das
and
dec
rcll
das
out
xor
pop
add
clc
mov
dec
inc
movsb
bound
inc
pop
decb
dec
rcl
inc
fcoml
ficomps
out
aad
fisubrs
xchg
jne
mov
test
aam
fiaddl
loop
fsubl
decb
leave
push
adc
push
push
in
and
xor
je
mov
inc
xor
jge
lcall
in
mov
add
fadds
push
aad
pop
fwait
test
jmp
add
and
iret
enter
mov
into
xchg
jle
mov
rolb
lds
fildll
das
in
lods
push
mov
int
stos
sbb
dec
int
insb
pop
mov
jne
sti
xchg
enter
xor
push
pop
inc
mov
lea
fadds
gs
adc
or
dec
mov
xchg
loopne
leave
push
popl
stos
push
aam
mov
pop
jns
sbb
jle
xchg
int3
xor
jl
fadds
fisttpl
push
fwait
mov
adc
scas
mov
fadds
cld
insl
sti
jecxz
cmp
pavgb
xchg
or
mov
pop
and
lahf
mov
xchg
stos
mov
mov
leavew
rcrb
leave
inc
std
daa
call
test
notb
mov
jo
jge
jge
mov
sub
pushf
push
push
pushf
and
in
jae
push
jecxz
fmul
scas
jp
fdiv
ds
and
sbb
imul
ds
and
fdivl
or
aaa
and
dec
int3
scas
sahf
frstpm(287
jp
xchg
ret
rolb
adcl
movsb
xchg
sbb
pop
dec
fldcw
das
loope
or
movl
das
xchg
sub
ret
inc
inc
sahf
rcll
sub
mov
enter
lods
aam
sbb
inc
xor
rcl
inc
fsubrl
lcall
jmp
push
orl
inc
leave
mov
xor
sbb
jecxz
mul
pop
and
push
add
jb
jmp
decb
dec
pop
ret
imul
and
inc
and
or
add
adc
jecxz
ds
xchg
push
in
jno
dec
and
cmp
or
mov
inc
movsl
xchg
xor
sbb
inc
out
bound
adc
mov
xor
push
imul
es
cmp
test
or
mov
out
adc
fistl
rolb
pop
pushf
mov
pop
mov
loope
sbb
jbe
push
cmp
push
jmp
mov
das
jecxz
mov
addl
cmc
jecxz
sti
or
add
das
cmp
decl
adc
enter
xchg
dec
movl
and
push
or
mov
js
aas
xchg
fcoml
jne
jne
push
jns
orl
pop
push
pop
sub
pop
dec
sub
add
adc
mov
loopne
cmpsl
add
test
les
or
aad
fdivr
pop
mov
fsubrl
das
loope
aam
jnp
xchg
inc
movl
sub
mov
in
inc
loope
sub
jmp
lods
loopne
mov
les
jo
pop
lret
aam
xor
push
loopne
int3
fwait
fwait
pop
popa
ds
loopne
inc
fdivr
sbb
dec
fldcw
das
fimuls
aad
pop
jp
mov
fidivrs
fbstp
fcompl
and
fdivl
xchg
inc
mov
sbb
jp
insl
sbb
inc
shrl
jns
cli
cmpb
shlb
sbb
xor
sbb
and
push
popf
pop
add
out
cmp
add
mov
daa
lcall
leave
inc
push
sub
rcr
enter
ret
jns
shll
inc
fadd
pop
mov
ljmp
adc
xchg
mov
mov
aam
mov
push
dec
push
sub
jmp
sahf
or
stc
in
mov
mov
in
scas
popf
xchg
pop
mov
jg
adc
sbb
das
divb
clc
aam
dec
xor
mov
dec
push
push
jmp
jge
gs
mov
cmpsb
jne
mov
ret
in
dec
aam
inc
fsubrl
cmp
dec
int3
mov
mov
call
pop
shl
pushf
loopne
adc
pop
xor
inc
inc
sahf
cli
lret
xchg
cmp
mov
add
hlt
jecxz
cmpsb
push
inc
jl
lods
leave
rolb
mov
pushf
movl
xchg
dec
movl
dec
out
fneni(8087
jne
in
mov
mov
xchg
mov
inc
fdivr
sbb
insl
scas
jb
adc
pop
gs
inc
ret
sti
push
inc
fdivr
jno
pop
push
adc
inc
ljmp
fs
hlt
mov
in
inc
fstl
leave
inc
push
sub
aam
hlt
xchg
jge
adc
fsub
dec
pop
mov
or
icebp
dec
fldl
dec
dec
jb
sbb
push
setno
sub
mov
repz
test
push
add
lds
jb
pop
lcall
int3
rolb
pop
fildll
lcall
mov
rcll
pop
mov
jns
scas
rolb
test
pop
mov
pop
outsb
and
fdivl
xchg
int
push
leave
xchg
inc
fucom
shll
clc
xchg
adc
mov
sbb
push
hlt
sbb
sbb
testb
add
int
jp
pop
push
add
mov
int
mov
jae
dec
sarb
test
movsl
sahf
in
das
mov
mov
mov
xor
cmc
pop
pop
mov
jo
fadds
dec
add
das
dec
dec
xchg
inc
cs
sahf
popf
push
ss
or
bound
inc
and
aaa
decb
push
or
inc
out
jle
push
push
loope
and
fiaddl
mov
mov
xor
lock
lcall
bound
jbe
dec
je
jecxz
mov
sbb
sbb
ret
arpl
incl
inc
push
cmpsb
or
aas
mov
ja
jne
push
jl
pop
mov
les
movsl
adc
outsl
fdivl
out
push
mov
mov
lock
or
mov
test
xchg
xor
stos
jnp
jae
loopne
jno
shlb
xchg
cs
inc
inc
sahf
rolb
and
adc
xor
mov
lcall
mov
xlat
nop
mov
movsb
icebp
leave
and
cmp
jmp
fnsave
xchg
repnz
adc
fcomp
dec
pop
fisttps
dec
pop
dec
dec
inc
test
adc
stos
mov
and
ja
mov
test
jmp
mov
and
xchg
sar
lcall
inc
inc
sahf
lret
adc
roll
push
enter
cltd
in
neg
movsb
leave
lock
pusha
sub
inc
mov
xchg
mov
fcompl
mov
insb
mov
sub
test
popf
add
stos
xchg
es
test
sbb
mov
ret
bound
loopne
idiv
sbb
in
rcrl
xor
inc
inc
sahf
in
and
addb
enter
push
sbb
jb
stc
inc
fdivr
outsl
and
outsb
call
jo
xor
ret
or
movl
pop
in
push
push
bound
mov
mov
jecxz
roll
xchg
inc
dec
out
icebp
lock
dec
jbe
fmuls
iret
jg
roll
mov
push
aad
dec
and
out
adc
adc
sub
mov
test
aaa
jp
sub
bound
jb
pop
int
bound
and
out
aam
cli
inc
dec
das
jecxz
cs
jae
push
mov
push
or
pop
mov
jl
lcall
or
inc
xor
inc
lret
mov
rorl
in
cmc
cwtl
out
inc
push
rolb
add
add
sar
pop
pop
mov
loope
loopne
dec
jp
rorb
pop
jne
pop
loopne
leave
adc
sbb
xor
rorl
pop
pop
mov
sbb
sub
pop
add
pop
mov
fistpl
cld
out
out
jl
lds
sbb
shrl
inc
loopne
jne
in
rcll
dec
sbb
cld
out
pushf
lds
mov
loopne
jne
sbb
rolb
sahf
mov
lds
sbb
push
nop
push
or
xor
dec
fwait
ret
dec
movl
and
leave
push
cmp
push
mov
xchg
xadd
jmp
sub
cmc
jmp
sbb
repnz
mov
jns
mov
push
adc
fs
das
pop
inc
mov
push
dec
and
cli
jecxz
lret
in
ret
leave
rclb
push
or
and
push
aam
dec
xchg
inc
movl
mov
pop
in
and
addr16
and
xlat
and
pop
loopne
xlat
inc
fdivr
popa
fcmovnbe
pop
mov
dec
inc
leave
push
push
loope
pop
dec
inc
leave
mov
sub
jae
dec
lret
es
dec
inc
sbb
ja
jne
push
jl
and
popf
lea
cmp
jne
pop
xor
xor
out
dec
pop
push
call
lret
mov
dec
and
mov
pop
push
cmp
xchg
mov
aas
fsts
push
nop
mov
mov
xor
mov
add
or
stos
jbe
push
js
jns
mov
fadds
and
mov
lds
xchg
pusha
push
push
inc
call
and
ja
jne
nop
push
fwait
push
mov
cmp
jle
cmp
das
cli
inc
lock
insl
iret
aaa
push
dec
scas
xchg
mov
push
dec
or
jns
sbb
xchg
pop
sub
mov
gs
cmp
push
mov
jmp
les
popa
cli
add
and
sub
dec
lret
and
mov
add
jnp
dec
and
xchg
adc
inc
fdivrl
outsl
mov
xchg
pop
add
test
int3
incl
add
mov
mov
lcall
push
pop
or
popf
add
cmpsl
push
inc
xchg
inc
mov
push
pop
or
ret
cmc
repz
call
call
mov
fisubs
sub
mov
mov
mov
pop
jge
movsl
inc
inc
sahf
sarl
add
stc
add
enter
xchg
pop
ljmp
outsb
in
jge
dec
fdivr
sbb
jecxz
adc
ljmp
dec
jo
xchg
out
fldcw
in
lahf
insb
cwtl
into
insl
dec
fneni(8087
jne
mov
shr
pop
pop
mov
inc
loop
sarb
pop
jnp
sub
push
sbb
sbb
neg
jno
jmp
or
mov
enter
push
mov
das
or
mov
cmp
xor
sbb
inc
in
dec
cmp
adc
mov
mov
lcall
sbb
or
mov
scas
dec
leave
xor
adc
mov
mov
or
push
insl
and
cs
aas
push
lcall
add
and
pushf
pop
or
mov
sbb
sbb
xlat
out
jno
pushf
fwait
push
add
lcall
mov
dec
inc
or
inc
sbb
inc
fnstsw
push
mov
push
adc
jno
mov
or
movsb
dec
sub
or
ljmp
in
pop
inc
mov
jne
xchg
call
into
das
out
pop
or
movl
outsb
cmp
loope
and
push
pop
insl
stc
jecxz
roll
xchg
stc
dec
lock
outsb
xor
sbb
inc
in
clc
pushf
mov
sbb
xchg
leave
out
fldt
mov
imul
hlt
in
movsb
dec
cs
hlt
loop
cmp
push
mov
fcmove
xchg
ret
fadds
xchg
orb
movsl
xchg
movl
popf
les
rcrl
jae
pop
ja
and
fisubrs
dec
fsubs
movsl
xchg
in
mov
and
xlat
lds
push
push
inc
movsb
fistl
inc
fsubr
push
stc
dec
ret
loop
in
pop
or
pop
lds
fs
cmp
and
cmp
sahf
xchg
xchg
je
pop
fiadds
inc
cld
mov
clc
cmp
mov
mov
sahf
jmp
cld
dec
int
negb
into
mov
xlat
or
mov
pop
repnz
add
arpl
xchg
sub
mov
clc
cmp
cli
inc
test
js
add
hlt
pop
cld
jle
test
mov
and
pop
pop
push
in
xchg
xor
inc
jbe
arpl
rolb
pop
enter
sub
lcall
mov
imul
insb
or
jmp
dec
xchg
dec
movl
mov
sub
mov
adc
ficomps
out
xor
movsl
mov
sub
mov
mov
adc
fcoms
and
adc
push
push
popa
xchg
jecxz
out
shrl
fbstp
jg
cld
sub
popf
enter
rcrl
aad
loop
pop
mov
inc
fdivr
cltd
or
mov
int
xor
sbb
dec
iret
inc
cmp
fwait
mov
in
or
pop
sti
push
sub
lcall
dec
fsubrl
das
loopne
sub
mov
das
loop
cmc
je
lahf
shlb
cmp
in
dec
lret
jecxz
mov
rolb
dec
ja
mov
dec
scas
icebp
push
or
ljmp
ret
cli
popa
mov
or
lea
or
push
dec
aas
mov
clc
xchg
lcall
or
lock
mov
mov
lcall
cmp
fwait
dec
xor
xchg
stos
mov
pop
mov
cmp
daa
korb
mov
inc
fdivr
in
ja
mov
mulb
ljmp
ret
pop
jl
sub
push
inc
and
aam
inc
fcoml
add
mov
xor
dec
rorb
sub
sub
ljmp
cmp
and
stc
mov
inc
fdivr
sbb
dec
and
lahf
xor
and
dec
lret
or
ret
cli
mov
lret
xor
imul
inc
inc
xchg
pop
lods
nop
imul
movl
mov
das
push
test
push
and
and
out
insl
lds
outsb
testl
jbe
in
ds
cld
ss
mov
lcall
je
std
xor
fwait
mov
adc
jg
and
cmp
int3
imul
dec
fcoml
repz
jns
sbb
jne
test
lahf
lret
imul
add
ffree
lods
int3
jnp
mov
sbb
mov
mov
ds
pop
pop
mov
pop
lahf
cmp
push
add
das
pop
mov
dec
sub
lcall
pop
mov
mov
and
iret
cmp
lahf
out
mov
sub
stc
xchg
cltd
loope
cli
cltd
mov
imulb
inc
jmp
in
out
jp
bound
mov
add
jne
add
or
aaa
nop
sbb
outsl
push
mov
lret
or
or
popf
popf
jecxz
das
mov
add
das
add
out
sbb
repnz
xchg
xchg
fucom
in
leave
mov
cwtl
std
insl
sbb
jne
es
xchg
inc
fmuls
push
call
push
cmp
dec
fildl
daa
aam
sub
leave
sarb
and
sar
push
fsubrs
dec
notb
mov
imul
cmp
out
fcmovnu
lods
popf
jg
xchg
push
mov
mov
push
in
sbb
jp
fnop
push
stos
shrb
xchg
pop
cli
pop
aad
and
dec
fdivr
sbb
and
or
xchg
scas
mov
movl
push
dec
inc
mov
xchg
xor
push
dec
insl
fcoms
outsl
pop
adc
push
sti
sbb
das
insb
or
cmp
in
shlb
sub
mov
jns
je
cld
cli
js
sbb
pop
xchg
ret
js
xor
in
xchg
mov
mov
mov
jmp
sbb
sbb
aas
mov
cli
sbb
pushf
mov
sbb
push
lea
out
jo
jb
sbb
cli
in
jae
cmpsl
mov
and
sub
aaa
jp
stos
inc
or
inc
xlat
push
sahf
sahf
xor
add
stos
dec
sbb
imul
and
inc
movl
mov
sub
add
in
cmpsl
xchg
daa
loope
je
sub
mov
mov
shld
push
sub
xchg
cs
inc
inc
sahf
sarb
and
or
xor
mov
xor
sti
jecxz
adc
leave
rolb
push
mov
in
fsubrs
loope
xchg
bound
sahf
gs
dec
cltd
movsl
sub
lcall
in
out
xor
push
mov
and
sahf
es
add
ror
mov
mov
das
or
mov
leave
xchg
sub
out
jecxz
int
cmp
loopne
rol
jno
test
shll
aad
dec
and
scas
inc
mov
fiaddl
mov
dec
iret
fstpt
xchg
push
and
popf
xor
stos
sarl
stos
cli
aas
push
mov
aas
dec
mov
sub
in
dec
dec
or
jl
mov
daa
mov
cmp
cmpsb
mov
jne
mov
lock
leave
and
outsl
dec
cli
insl
jns
mov
int3
and
xchg
les
and
push
call
popa
mul
jmp
movsb
mov
cmp
xchg
inc
lds
mov
mov
ja
sarb
lea
es
enter
test
push
push
cld
ficomps
dec
mov
movsl
jbe
sub
arpl
dec
das
add
add
push
popf
xchg
mov
or
lea
lds
sbb
ja
inc
iret
into
inc
jecxz
lds
or
mov
jae
mov
nop
mov
mov
lret
cmp
das
rcl
comiss
out
sbb
icebp
outsl
pusha
adc
jnp
or
fdivl
pop
dec
ficomps
mov
popl
mov
xchg
push
jns
sbb
push
jo
test
fnsave
dec
lods
push
and
das
loopne
and
cltd
cltd
xchg
scas
jne
cmp
sahf
mov
fisubrs
inc
add
shlb
leave
rclb
xor
inc
inc
sahf
lret
xor
add
enter
add
push
sahf
sahf
add
sbb
stc
imul
inc
test
mov
inc
sar
add
out
xchg
pop
mov
in
sarl
andb
std
xchg
xor
sbb
inc
jmp
adc
and
ds
push
xchg
xchg
push
inc
xor
push
pop
hlt
mov
jns
sbb
enter
cmpsb
in
jg
sub
dec
popl
sbb
sbb
inc
pop
sub
sbb
jecxz
sub
lcall
shlb
fucomp
decl
sbb
dec
into
fsubl
sbb
mov
je
pushf
bound
add
push
fstpt
cmp
add
nop
xchg
movsb
sbb
fadds
stc
sbb
mov
mov
fdivr
sbb
fs
fs
and
sub
movsbl
std
mov
mov
out
and
arpl
popa
sub
xor
xchg
push
cmp
sbb
cld
dec
pop
push
loopne
mov
push
mov
das
inc
inc
mov
fbstp
pop
mov
rcll
mov
xchg
pop
loop
movsb
leave
inc
mov
cs
in
call
sbbb
lock
mov
mov
jmp
js
imulb
out
jp
out
add
repnz
mov
imul
pop
lret
jp
sbb
push
cmp
add
sbb
push
dec
or
or
or
add
mov
fdivl
jae
fimuls
cmp
mov
insl
jl
mov
cmp
cmpsl
sub
sti
shll
fcoml
mov
les
mov
gs
sahf
add
cmpsb
insb
mov
es
push
test
mov
mov
jl
movhps
mov
pop
imul
ja
mov
fstps
inc
fdivr
xchg
pop
dec
fsubrs
das
fimuls
mov
xchg
test
push
push
push
xor
push
fwait
into
mov
roll
in
outsl
xor
push
rolb
or
xchg
cs
inc
inc
sahf
repnz
fadds
xor
mov
sbbl
out
sbb
rcll
jne
mov
stos
dec
shrl
loopne
adc
nop
enter
push
sahf
sahf
lret
fs
mov
add
cmp
adc
data16
cs
pop
ret
push
sbb
mov
dec
inc
fdivs
insl
and
xchg
add
sbb
rclb
addr16
in
and
sub
dec
cmp
dec
sub
mov
push
jmp
pop
sub
jbe
or
inc
sub
mov
pop
xchg
call
leave
rolb
or
sub
inc
or
loopne
les
push
sbb
cmp
ret
loop
add
test
xor
iret
scas
jp
mov
int3
mov
movsl
shrb
mov
leave
imul
movsb
in
lret
in
dec
insl
pop
mov
cld
fimuls
push
movsl
in
sub
pop
cmp
sti
pop
pop
mov
test
push
sarb
pop
jnp
fs
push
inc
xchg
dec
rcl
inc
fmul
ljmp
pop
adcb
loop
dec
int3
hlt
adc
in
imul
and
shr
movsb
leave
jl
cmp
mov
push
cmp
and
cld
cmp
and
out
jl
mov
es
int
mov
jb
sub
xor
rcll
pop
and
cld
nop
mov
push
cmp
nop
mov
inc
aam
and
arpl
aaa
mov
jno
mov
cmpsl
mov
fcmovnu
inc
das
bound
lcall
jg
mov
lret
and
iret
mov
sbb
jne
lahf
nop
or
cmp
pusha
lea
mov
cmp
pusha
mov
cmpsb
insl
fnsave
fldcw
jge
mov
mov
and
mov
scas
outsb
ret
jge
lret
aaa
pop
loopne
mov
mov
fdivr
sbb
push
mov
or
mov
gs
ficoml
push
xor
mov
jmp
aam
imul
rorl
imul
push
data16
lock
lahf
arpl
inc
insl
push
lods
mov
xchg
shll
adc
cmc
xchg
xchg
inc
rol
out
call
fnsave
out
mov
pusha
lea
jecxz
cmpsl
and
sbb
mov
xchg
mov
mov
mov
push
sbb
iret
sarb
sbb
stos
fcom
mov
inc
fdivr
mov
inc
fdivr
jae
pop
cmp
xchg
scas
call
test
daa
mov
mov
or
dec
pop
and
push
cmp
iret
mov
subl
pushf
inc
scas
cmc
stc
cli
fmul
in
ss
jb
lea
and
loop
mov
insl
fsub
dec
pop
push
popf
ss
mov
pop
jb
sbb
cmp
sbb
out
daa
loopne
aam
push
lods
mov
frstor
mov
daa
dec
ficomps
in
inc
fsubrs
mov
gs
nop
mov
xorb
into
dec
in
aaa
scas
push
xchg
jmp
jecxz
daa
push
jecxz
jb
lods
fisttpl
dec
out
add
dec
sbb
push
mov
inc
pushf
data16
mov
stc
push
mov
sar
mov
test
jo
popl
mov
push
mov
dec
adc
lcall
cmp
popa
addl
xor
test
outsl
pop
daa
add
imul
adc
xchg
or
jmp
out
mov
inc
adc
add
cld
je
dec
lret
fdivl
mov
hlt
out
cmp
mov
ja
lock
or
jne
adc
dec
mov
jb
xor
dec
sahf
push
mov
or
xor
es
mov
or
inc
loop
mov
dec
rcl
inc
fdivl
in
or
mov
mov
ror
fninit
js
mov
mov
dec
rcl
inc
fdivl
cld
inc
jnp
mov
xlat
xchg
bnd
lret
daa
and
aam
scas
jns
or
pop
cmpsb
icebp
push
pop
push
inc
nop
dec
roll
fdivl
or
aad
push
dec
stos
test
int
in
stos
icebp
dec
and
add
lds
add
adc
add
int3
inc
faddl
flds
jo
lods
mov
ja
dec
int3
adc
in
sub
bound
push
pusha
dec
and
ljmp
sbb
sbb
bound
inc
sub
pushf
xor
fnsave
fsubrl
cli
mov
fstps
push
lock
jl
xchg
mov
pop
pop
inc
cmp
das
testl
in
fldt
daa
sbb
shll
das
and
testb
sar
mov
mov
lods
pop
scas
ficoml
lds
lret
in
ss
add
rcll
jo
and
and
and
leave
sti
sarb
xadd
lahf
aas
mov
xchg
pop
inc
ret
pop
insb
mov
js
inc
fcoml
pop
shll
lea
xor
popf
addr16
or
lret
fdivr
sbb
mov
daa
das
insb
mov
inc
push
idivb
and
test
jecxz
dec
rclb
xchg
push
insl
shrb
cmp
jecxz
arpl
xchg
pop
loopne
movsb
leave
inc
in
das
repz
and
add
adc
mov
xchg
mov
push
sbb
mov
addb
xor
jg
add
jge
out
jae
inc
sub
shlb
xchg
mov
dec
inc
shrb
mov
inc
fdivr
loop
bound
sub
les
fwait
lds
push
sbb
add
rcll
mov
add
jmp
std
dec
lret
jne
popf
push
or
ss
std
dec
not
inc
fmull
test
js
add
xor
mov
fdiv
dec
pop
ds
push
das
repnz
pop
fists
imul
in
jae
xor
add
jmp
push
popf
inc
and
fcoml
loopne
or
jae
xchg
inc
mov
lcall
pop
movsl
xchg
in
mov
jecxz
or
leave
rolb
add
comiss
pop
or
or
xchg
mov
das
loope
jecxz
in
mov
bswap
pop
cmc
jecxz
pop
or
test
shrb
dec
fldt
das
loopne
sbb
in
das
loope
popa
cmc
lcall
mov
adc
inc
push
add
jmp
test
jg
jno
daa
xchg
daa
and
insb
mov
adc
arpl
ror
pushf
pop
push
push
in
sti
add
dec
fdivr
sbb
ja
loop
movl
shrl
loop
jl
outsl
test
xor
dec
shlb
or
rolb
inc
xor
push
dec
flds
ret
imul
jp
mov
sahf
pop
into
insl
and
movsb
call
and
cmp
mov
or
push
addb
sahf
daa
and
mov
lds
and
mov
mov
hlt
ret
lcall
stc
loopne
imul
cmp
adc
mov
scas
push
fdivrl
pop
pop
lock
dec
push
push
in
pop
int3
dec
xchg
iret
sarb
sbb
sbb
push
or
insl
movsl
jne
mov
sub
lods
movsl
push
insl
fdivr
dec
bound
rcrb
das
cli
inc
jp
inc
ffreep
jbe
enter
inc
mov
adc
jle
fcmovb
dec
push
push
jecxz
mov
sub
push
jmp
sub
repz
sahf
popf
mov
add
push
xor
and
nop
sub
ljmp
mov
adc
inc
fsubr
lea
fcoms
sahf
xchg
dec
je
les
sbb
pop
xor
data16
pop
rcrl
imul
adc
inc
and
in
adc
jne
push
jnp
xlat
or
jmp
fcmovnu
mov
jns
lcall
imul
leave
jp
mov
mov
insb
leave
inc
faddl
rolb
adc
inc
fdivr
outsb
and
mov
leave
jp
test
sub
out
mov
adc
xor
fildll
lods
in
popa
lods
sub
sub
jo
popa
arpl
jmp
leave
mov
jle
xor
rorb
add
loopne
and
sahf
incl
decl
enter
fnsave
fmull
mov
mov
inc
out
or
js
pop
jnp
scas
shll
outsb
jns
flds
and
lods
push
js
push
cmc
mov
loop
cmc
arpl
dec
shlb
cmp
daa
fwait
fwait
pop
xorl
int
fmull
sahf
mov
cmp
ret
xor
mov
mul
lods
sarl
pop
push
rcrl
sbb
jl
stos
mov
jns
orl
lods
jo
adc
add
push
jecxz
mov
mov
xchg
mov
lods
pop
or
aam
jne
cltd
pop
pop
push
in
push
and
mov
sub
mov
dec
push
mov
inc
test
mov
das
lock
or
in
and
sub
sbb
rorl
dec
sbb
lds
jecxz,pt
push
out
lods
xchg
fwait
inc
es
push
fstps
cmp
pop
outsb
mov
pusha
cmp
mov
js
xor
push
adc
push
icebp
push
or
push
in
mov
dec
cli
sbb
popf
add
jb
ficompl
sbb
mov
adc
jnp
mov
fmull
or
stos
fsubr
push
push
sub
xchg
and
add
cli
jecxz
lds
add
xor
daa
mov
test
rcl
pop
mov
dec
nop
enter
inc
or
mov
pop
xor
push
fcmovnb
mov
mov
roll
pop
nop
fimull
xchg
fadds
negb
mov
mov
and
loope
ds
fisttpll
xchg
fwait
inc
pop
push
sbb
cmpsb
push
stos
in
fisttpll
mov
xor
mov
es
jecxz
adc
cltd
push
mov
sub
cmp
mov
jmp
bound
jp
jne
cmp
sahf
fs
push
scas
stos
fldl
inc
cld
mov
cwtl
mov
fdivr
nop
mov
mov
or
fwait
adc
in
mov
je
out
and
fmull
lahf
movsl
leave
rolb
leave
ffreep
or
sbb
push
add
mov
es
rcrb
pop
ja
mov
rcrb
pop
mov
ret
rol
jns
out
repz
out
loopne
mov
sbb
xchg
pop
cli
push
repz
mov
lea
add
dec
fistl
lea
pop
dec
jb
inc
ror
push
sahf
pushf
outsb
push
dec
xor
bound
outsl
dec
das
ficoms
fldcw
sbb
pop
inc
rcrb
push
or
fwait
fwait
pop
cld
jne
cmp
sahf
fwait
or
cltd
sbb
inc
add
push
call
jo
hlt
fildll
pop
adc
loopne
push
rorl
call
mov
lahf
mov
pusha
lret
inc
mov
inc
inc
je
pop
push
ljmp
cmp
lods
dec
daa
cli
jl
jmp
aad
mov
leave
rclb
xchg
inc
inc
sahf
loopne
and
add
and
mov
xor
ljmp
or
pop
mov
jecxz
stos
rolb
out
leave
rolb
or
in
sarl
dec
jp
mov
repnz
jmp
outsl
outsb
clc
sti
mov
jmp
cli
inc
cmp
push
out
lcall
or
jecxz
js
mov
push
dec
cmpsb
outsl
sub
in
leave
iret
mov
push
jae
xor
cld
ficoms
mov
movsl
xchg
in
mov
fs
fwait
pop
mov
dec
fdivr
sbb
push
mov
mov
xor
pop
data16
sub
out
daa
loopne
rcll
lods
adc
cmp
outsl
pop
es
mov
xchg
rclb
jbe
sub
mov
cltd
mov
xchg
cmc
add
adc
inc
leave
lcall
fadd
sbb
andl
jno
sbb
nop
mov
in
shrl
out
iret
sarb
in
idiv
jne
jbe
and
mov
inc
inc
sahf
jmp
scas
mov
sub
mov
push
sahf
lahf
cmp
add
sub
adc
addr16
loopne
dec
int3
mov
jecxz
or
or
aam
sbbl
sub
lcall
jo
loope
movl
xchg
inc
movl
mov
addr16
sub
cmp
xchg
sub
mov
inc
sahf
stc
ss
jbe
sub
mov
adcl
sub
lcall
call
adc
mov
mov
dec
pop
lds
idivw
mov
mov
leave
xchg
jmp
cmc
movsb
push
test
sti
cltd
mov
mov
pop
xor
mov
mov
pop
popa
fdivl
push
adc
mov
add
fsubrs
inc
adc
xchg
cltd
sub
jge
imul
push
sub
ret
mov
mov
cmp
pop
jmp
add
mov
push
dec
aam
out
xor
fildl
inc
call
cmp
fistl
lret
cli
jae
js
iret
enter
mov
mov
sar
pop
pop
mov
pop
fcmovnu
dec
cmp
js
mov
lret
push
mov
inc
mov
fadd
mov
pop
or
pusha
lds
addr16
mov
mov
and
aam
leave
jmp
mov
inc
fdivr
push
xchg
in
mov
lahf
movl
aam
fistpll
sub
cmp
test
mov
nop
mov
loope
and
fdivs
pusha
or
imul
jp
das
out
adc
sbb
test
add
xlat
inc
sub
jmp
dec
sub
mov
jae
notb
xor
inc
adc
leave
imul
fistl
xlat
lahf
add
xchg
test
out
cmp
mov
adc
sbb
and
pop
iret
sarb
ds
aaa
sahf
addr16
xchg
cmpsl
cmp
add
std
out
jns
lds
jb
sbb
add
iret
push
and
popf
mov
mov
shr
pop
pop
mov
jo
movsl
rcrb
pop
ja
pop
push
in
xor
mov
push
fs
add
push
inc
xchg
mov
pop
das
xor
inc
pop
enter
imul
ficoms
das
flds
push
push
in
test
jno
iret
fstpt
outsb
cmpsb
push
push
mov
mov
mov
inc
shr
pop
pop
mov
roll
jae
pop
add
sub
sahf
shlb
icebp
nop
mov
movsl
jle
cwtl
lret
xor
sbb
inc
shr
lds
cmp
inc
inc
inc
clc
and
loop
rcll
ret
sbb
bound
out
xchg
lds
cld
adc
inc
clc
and
popf
push
fstl
and
mov
push
lahf
fisubl
rclb
xor
inc
inc
sahf
flds
and
call
and
add
cli
mov
sub
shll
aad
aas
mov
aam
test
cmp
mov
jns
iret
inc
mull
ljmp
iret
mov
or
inc
in
jmp
xor
mov
enter
leave
rolb
fists
movsl
sub
stos
mov
adc
daa
sub
mov
add
or
inc
popf
push
sahf
mov
les
sub
or
fwait
popf
add
movsl
jb
mov
addr16
cmpsl
and
push
ds
jg
in
dec
aam
inc
fmull
insl
lret
xor
dec
rclb
xor
in
push
fsubs
das
popf
pop
ret
sub
dec
lret
pop
shrl
lret
sub
xchg
pop
sub
lcall
sub
pop
or
pushw
xor
push
cmp
repz
stos
sub
cld
sbb
imul
xchg
sub
mov
shr
and
dec
add
enter
js
lcall
fnsave
xchg
decl
loope
jno
loop
adc
mov
sbb
jnp
cmp
ret
inc
mov
pop
push
jmp
mov
lret
push
mov
mov
sub
sub
xchg
jne
sahf
test
sbb
xchg
lods
dec
lock
inc
fcoml
mov
rolb
or
or
xor
inc
fstp
mov
dec
jecxz
sbb
jb
sbb
push
fists
add
xor
cmp
nop
in
jge
fcmovnbe
jl
mov
xor
rolb
scas
sti
aam
aaa
das
out
pop
or
cmp
mov
sbb
jnp
mov
iret
inc
ljmp
inc
fs
std
dec
into
push
pop
push
mov
lods
mov
std
mov
.byte
.byte
