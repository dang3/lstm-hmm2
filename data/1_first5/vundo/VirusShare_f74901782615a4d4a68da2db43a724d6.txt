jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
and
into
mov
stos
mov
or
add
add
add
push
add
add
add
add
add
xlat
add
je
sbb
add
add
add
xchg
add
adc
add
add
add
add
lret
add
add
add
add
add
add
pop
add
add
add
or
dec
add
adc
add
add
add
add
push
add
add
add
sub
les
add
add
add
sbb
adc
add
add
or
add
movl
pop
add
add
cmp
sub
or
adc
add
les
add
push
add
add
adc
add
les
add
add
add
add
add
add
mov
add
add
add
mov
xchg
scas
add
add
add
add
add
cmp
imul
addl
pop
add
adc
add
add
add
add
add
push
add
add
cmp
adc
add
add
add
add
lahf
add
add
add
add
add
add
add
add
cltd
add
add
popf
add
and
fiaddl
push
add
xchg
add
fldl
adc
add
dec
add
add
add
add
cmp
les
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
pop
add
add
add
ret
add
add
add
cltd
add
add
adc
add
sbb
daa
add
adc
add
add
add
cmp
adc
add
add
add
jl
pop
add
add
add
add
adc
add
add
add
add
add
add
add
pop
add
add
imul
sbb
cmp
insl
add
addb
add
adc
add
add
lahf
add
add
add
push
add
add
push
add
add
add
pop
add
or
dec
add
adc
add
add
add
cmp
arpl
pop
add
add
add
add
add
sbb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
les
add
into
add
add
les
add
add
add
inc
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jnp
dec
add
incl
clc
add
add
add
add
add
add
add
adc
add
dec
add
add
add
jae
testb
add
adc
add
pusha
add
adc
add
add
add
or
dec
add
add
add
stc
add
add
add
add
add
cmp
xchg
add
add
push
add
add
add
add
add
ret
add
je
add
push
add
add
je
imul
jne
leave
mov
or
ja
std
and
sub
sbb
pop
add
jo
push
or
xor
imul
dec
roll
push
mov
cmp
pushf
cltd
inc
mov
scas
cltd
pop
sti
std
xor
out
jl
lea
fwait
mov
cld
int3
gs
or
ret
pusha
mov
fidivrl
mov
cmp
lahf
les
mov
jle
pop
addl
or
push
sahf
ss
popa
or
movsb
or
les
cs
and
pop
fs
jnp
jbe
mov
sub
mov
ret
dec
sbb
vpcmpb
xchg
inc
add
rol
sub
sub
jmp
pusha
or
test
outsb
fbld
in
jae
push
mov
mov
lds
mov
mov
push
xchg
out
stos
push
shrl
enter
pop
xchg
rcr
std
inc
sbbl
and
pop
mov
stos
shlb
mov
inc
loope
test
adc
pop
jno
clc
lret
daa
idiv
sub
ja
xchg
data16
mov
lea
xchg
arpl
adcb
sbb
ficomps
test
xor
data16
lds
rolb
xor
int
call
push
dec
add
clc
and
jno
movsl
jg
das
sbbl
cmp
addr16
loope
rorl
jno
mov
jb
mov
mov
decl
push
pusha
mov
push
pop
das
ljmp
addb
inc
notl
sub
test
mov
and
test
jns
scas
sub
insb
xchg
xchg
mov
dec
loopne
cmpsl
test
jae
lret
mov
mov
pop
rcll
lods
inc
rcrb
pop
mov
sbb
mov
jae
clc
pop
xchg
fistl
inc
jae
test
stos
pop
sub
daa
jge
pop
add
jge
outsl
sbb
pop
mov
insb
sbb
push
lods
or
dec
push
jge
sub
jno
insb
lods
aas
pop
ffree
in
pop
jge
xor
stos
sarl
icebp
stc
jb
inc
les
inc
arpl
jns
ficomps
ret
push
inc
cli
xor
lods
push
xchg
dec
mov
daa
mov
pusha
pop
jbe
aam
push
pop
xchg
test
mov
xor
or
xorb
dec
test
or
int3
in
idivb
cmp
sub
sub
enter
add
adc
iret
movsb
inc
adc
shll
pop
jle
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
fcoml
inc
cmpsb
jo
pusha
fldcw
cltd
and
push
shll
lock
nop
push
pcmpgtd
xchg
inc
xchg
jo
pusha
adc
adc
xor
push
or
push
rolb
loopne
loop
andb
mov
mov
or
sbb
sub
cmp
rcrb
xchg
imul
pop
iret
negb
xor
adc
sub
aad
bswap
std
or
out
hlt
xor
or
jns
xchg
lret
cmpsb
xor
pusha
sub
push
iret
aas
das
jmp
pop
cli
lock
mov
pop
or
xchg
sub
inc
je
mov
out
jge
shr
shlb
pop
mov
mov
in
push
xchg
jecxz
ret
adc
inc
mulb
punpckhdq
lods
add
mov
aad
mov
xchg
rclb
jne
cmp
dec
push
sub
aas
xor
ss
in
xchg
push
nop
jmp
mov
jmp
lcall
stc
mov
aaa
pop
xchg
jbe
inc
inc
xchg
push
cmpsb
imul
cmp
rorb
fdivrs
jmp
dec
cwtl
data16
outsl
mov
ret
adc
mov
inc
jb
push
rclb
sub
xor
xchg
xchg
sub
add
mov
add
push
movsl
arpl
and
aam
push
movsb
inc
ret
adc
and
out
mulb
push
rclb
shlb
ss
nop
push
andb
mov
cmpsb
jo
pusha
adc
add
xor
and
rclb
shlb
ss
nop
push
andb
mov
push
fisubs
fwait
inc
in
and
cmp
jns
lcall
mov
dec
mov
dec
dec
mov
sti
iret
jnp
clc
nop
push
jg
mov
fnstenv
inc
mov
adc
dec
aas
pop
lahf
inc
jg
out
cmp
jae
loopne
adc
or
xchg
bound
pusha
imul
pop
stc
test
emms
outsl
inc
mov
insl
lahf
addr16
sub
jl
repnz
xor
int
push
mov
arpl
les
insb
shlb
xor
mov
mov
lcall
sub
jae
ljmp
popf
jno
sbb
int3
je
rclb
inc
adcl
outsl
loopne
je
push
mov
iret
decl
xchg
ret
insl
push
sbb
gs
jg
mov
fisttpll
and
je
out
xor
fstps
lods
sbb
add
pop
cwtl
mov
scas
vpshufd
fstpl
add
mov
sbb
jecxz
dec
loope
ja
hlt
fsubs
push
cmpsb
dec
movsl
mov
mov
movsb
mov
into
imul
cltd
insl
sbb
lea
hlt
mov
fdivs
popf
aas
mov
rcl
clc
cltd
and
loopne
and
jno
add
insl
out
shll
cld
out
pushf
mov
in
cli
cmp
and
add
outsb
ja
or
cmp
jle
mov
sbb
or
adcb
je
jnp
test
fstpl
dec
jge
loop
fiaddl
xchg
push
xor
inc
test
pop
mov
add
jo
jmp
fwait
bound
out
inc
cli
lret
notl
push
mov
fcmovb
cmpsb
or
push
pop
or
mov
and
or
pop
sbb
and
sub
jo
push
repnz
ficomps
xor
push
aam
inc
sbb
jbe
shlb
xor
imul
push
mov
pop
and
testb
inc
test
pop
pop
out
cld
ret
add
inc
jg
inc
inc
negb
pop
in
icebp
out
xor
popf
hlt
add
pop
ljmp
add
imul
ss
jp
iret
sub
daa
fdivl
add
setp
sbb
cmp
daa
or
xor
mov
push
aaa
pop
sub
leave
orl
inc
fiaddl
movsl
mov
dec
inc
in
push
mov
add
mov
add
push
sbb
mov
pop
sub
cwtl
sub
inc
cmovns
pop
cmpsl
addr16
push
and
daa
test
imul
cmp
push
lcall
popa
pop
in
scas
adc
adc
cmp
xchg
in
lcall
out
adc
adc
loop
arpl
sarb
xor
mov
in
push
imul
sub
adc
push
jecxz
xor
out
jge
sbb
push
ret
pusha
xor
pminub
scas
rcl
inc
mov
rcrl
sbb
pop
mov
ret
jecxz
xchg
cld
lahf
push
outsb
in
xchg
adc
fisubs
xchg
inc
out
enter
aaa
pushf
dec
add
jg
and
jns
jno
dec
jae
test
sub
sub
aam
mov
aam
sbb
cmp
push
sub
xor
cmpsl
xchg
loope
test
xchg
add
je
and
or
outsb
popf
cmc
addl
sbb
rcrl
nop
add
or
shll
push
xor
ja
adc
popf
cmp
les
jmp
ss
pop
cli
cs
ret
jge
js
sub
pop
rolb
add
or
push
sbb
out
aad
insb
push
or
lds
aad
enter
loopne
jnp
mov
cmp
shlb
push
js
jb
or
dec
sbb
adc
mov
xor
orb
add
xor
rcll
jno
jp
add
out
out
push
jecxz
xor
or
jne
push
dec
mov
mov
dec
ds
push
dec
mov
jmp
pop
or
test
ja
movsl
add
je
sub
scas
cmp
test
and
xchg
and
bound
or
add
add
rcl
fs
in
xor
jecxz
mov
lock
xchg
arpl
xorb
shlb
into
pushf
cs
push
push
lahf
fadd
or
leave
jb
test
movsb
loopne
jmp
sbb
and
insb
mov
imull
test
pop
sub
shll
dec
add
dec
pop
mov
jne
xor
ljmp
add
js
and
int3
hlt
jo
inc
push
es
aas
in
shrl
addr16
jg
les
out
pop
xor
pop
in
ud0
mov
xor
cli
hlt
leave
mov
loop
jge
addb
dec
and
cmp
mov
arpl
add
scas
cmp
sarb
xchg
movsb
inc
push
and
mov
mov
adc
sbb
outsb
jns
pop
into
in
gs
aaa
fcoms
push
push
outsl
mov
sbb
out
cmc
fwait
mov
or
mov
mov
add
out
push
js
test
lahf
sbb
fsubl
cmp
pop
xchg
push
xchg
int
lahf
mov
movsl
or
jnp
std
scas
mov
dec
xlat
cs
sbb
insb
inc
pop
std
xor
fldenv
mov
movsb
xchg
hlt
inc
add
and
adc
sub
xchg
stos
pop
call
sub
push
or
cltd
jecxz
pop
pop
js
shll
je
cld
lea
mov
les
xor
rclb
insl
enter
ret
adc
push
test
adc
pop
xchg
bts
or
fwait
jecxz
fistpll
sbb
mov
testl
lret
push
dec
fwait
mov
fisttpl
notb
mov
imul
xchg
out
in
in
inc
add
push
mov
adc
jae
fmull
push
cmp
jmp
clc
fstl
mov
dec
xor
sarb
hlt
shl
cmc
in
xchg
mov
adc
or
or
xchg
push
sub
stc
out
call
movsl
jae
add
cmp
xor
xchg
xlat
ret
cmp
dec
inc
fnstsw
sub
sbb
push
cmp
cli
aaa
out
mov
lods
outsb
fptan
pop
aam
test
push
add
adcl
out
mov
stc
pop
pop
iret
or
enter
ret
imul
in
stos
mov
inc
adc
dec
out
ret
insb
cmp
lods
xchg
popa
xor
lods
in
jg
aam
andl
push
aas
popa
cwtl
aas
sti
test
inc
ret
and
loope
add
dec
popf
cmp
lds
jo
push
dec
mov
xchg
mov
out
movsl
in
ljmp
mov
dec
roll
imul
jg
fnstcw
mov
orl
sarb
cmp
jge
pop
xor
and
push
adc
sbb
inc
fistps
mov
jne
xchg
lret
push
lret
gs
sub
xor
dec
cli
lods
clc
enter
xchg
lret
xchg
insb
push
ja
add
add
ret
rcll
mov
pop
mov
inc
nop
add
inc
xchg
out
ds
je
mov
lret
sbb
imulb
out
xlat
jmp
cmc
fnsave
sbb
je
faddp
lds
lea
inc
out
or
leave
iret
movsl
loop
sarl
mov
and
lcall
mov
and
ljmp
jg
fdivs
and
cmp
adc
jae
inc
mov
sbb
insl
in
and
pop
loop
and
pop
jne
mov
loopne
mov
jg
push
and
pop
sbb
add
push
movsl
dec
cmp
lea
test
xchg
nop
stc
shrl
data16
shlb
in
push
mov
rcl
insl
ret
xchg
lahf
sbb
movsl
pushf
mov
push
cmpsb
xchg
lds
mov
jae
enter
in
push
sahf
xchg
das
jle
icebp
rolb
icebp
fidivrs
jmp
push
daa
push
popf
arpl
mov
push
int
mov
popf
add
mov
pusha
push
adc
arpl
cmp
and
push
pop
lcall
pushf
jae
pop
sbb
push
inc
jecxz
add
xor
jae
jo
lea
icebp
insb
dec
jb
daa
push
and
fs
insb
sbb
je
ss
sub
mov
jmp
cmp
dec
jmp
xchg
push
jno
bsf
sub
mov
or
into
outsl
push
pop
mov
mov
es
insb
mov
ja
fnsave
and
cmp
test
lret
dec
notb
jl
sub
sub
jb
inc
mov
push
out
jae
xchg
fmuls
int
xchg
and
stc
cmpl
jne
out
cmp
out
dec
push
sbb
data16
stc
jp
sub
lcall
outsb
xchg
in
mov
cwtl
jnp
pop
sbb
adc
sbb
mov
add
out
xor
aaa
je
sub
mov
scas
cmc
and
and
cltd
stos
lcall
push
loop
xor
inc
jae
dec
int
push
mov
movq
push
test
inc
xor
movsl
cmpsb
adc
push
cmp
rcrb
sbb
push
cmpsl
loopne
icebp
inc
push
es
and
sbb
mov
std
sub
and
lock
pop
sbb
cltd
sub
cmp
cmpsb
push
inc
sbb
in
inc
lock
in
push
xchg
mov
aam
jmp
enter
cmpsl
xchg
clc
dec
fldcw
mov
jne
in
adc
sub
in
loop
test
xor
or
push
sub
cmp
data16
sbb
and
inc
sub
daa
sbb
jl
adc
cmpsl
or
adc
jmp
fistps
fidivs
sub
popf
loope
xchg
outsb
xchg
mov
rcl
xchg
mov
imul
fwait
pop
jnp
jbe
or
jp
jno
lret
int3
out
rcll
cld
pop
cmp
xor
pop
xchg
sti
sbb
mov
aas
mov
enter
sahf
sbb
pop
jge
out
sbb
imul
stos
repz
adc
pop
ss
pop
xchg
mov
lea
std
popl
mov
sbb
inc
movsb
ljmp
loopne
cltd
leave
enter
ss
mov
push
shll
push
std
repnz
pop
xchg
ljmp
sub
mov
test
inc
inc
iret
out
mov
cmpsl
ret
cmc
mov
push
jo
movsl
xor
cs
lcall
stos
fstl
sub
lea
popf
lods
adc
outsb
mov
lock
iret
scas
add
inc
ds
push
xchg
jecxz
fisubrl
dec
sub
xchg
xlat
sbbb
gs
fcmovbe
mov
les
aaa
stos
bnd
jecxz
out
call
flds
lds
popf
pop
clc
popa
retw
aas
int3
test
aas
pop
mov
subb
mov
xor
xchg
adc
pop
ja
fldcw
adc
into
pusha
or
sub
adc
jge
sbb
push
adc
lea
loopne
mov
and
pop
pop
adc
fcmovnb
adc
repz
and
les
cltd
arpl
mov
xchg
or
xor
push
mov
mov
stos
jbe
pop
stos
enter
test
jbe
mov
out
cmpsl
xchg
xchg
add
decb
aad
jnp
xchg
mov
cmp
mov
sahf
or
push
pop
dec
rorb
jmp
ss
loop
adc
sub
idivl
in
sarb
pop
aaa
mov
sahf
test
jmp
rcl
fcmovnu
mov
mov
sub
iret
rcrl
xor
mov
test
leave
push
pop
stos
test
scas
scas
add
inc
aad
hlt
stos
dec
jb
in
push
sahf
push
jmp
cmp
add
ret
xor
in
mov
sub
push
inc
arpl
in
test
or
in
dec
aam
je
cmp
pop
jne
insl
out
push
aas
jmp
lcall
or
jg
int
push
jns
cmp
mov
popf
jo
and
shl
sti
pop
xchg
mov
pop
sbbb
xchg
aaa
mov
aam
pusha
or
je
jo
xchg
icebp
xlat
adc
cld
sub
push
xor
and
push
mov
call
sbb
lcall
insl
adc
iret
ret
or
mov
scas
pusha
mov
notb
ret
lock
or
insb
test
outsb
andb
movsb
movsb
cltd
jo
inc
stos
or
pop
loope
adc
add
into
mov
xchg
cwtl
gs
lcall
or
shr
push
jmp
mov
xlat
xchg
xchg
mov
cwtl
pop
sbb
jecxz
loope
mov
mov
bound
push
testl
sub
inc
xor
push
bound
sbb
mov
xchg
stos
push
mov
or
pop
scas
mov
pop
push
mov
outsb
pop
dec
mov
test
cmpsl
imul
mov
add
jb
test
cmp
popa
mov
add
gs
inc
push
scas
imul
cmp
push
fists
sbb
cmpsl
cmc
ds
mov
daa
push
daa
inc
pushf
sbb
repnz
push
jne
aam
push
add
lcall
mov
insb
les
subl
cmp
jae
out
jbe
xchg
sub
pop
inc
xor
in
sbb
imul
ret
dec
push
in
cmp
lcall
xchg
loope
cmpsb
push
dec
out
bound
inc
das
inc
lea
mov
mov
mov
push
jle
xchg
add
add
jg
xchg
add
xchg
pushl
inc
dec
test
inc
iret
xor
inc
out
icebp
ljmp
fcomp
add
outsl
icebp
mov
outsb
fstpl
cmp
adc
inc
xchg
cli
mov
lcall
adc
mov
insb
ret
jge
test
lahf
mov
fwait
outsl
add
aaa
das
and
cmp
inc
lds
sbb
stos
insb
test
ss
mov
dec
subl
out
roll
or
sbb
test
std
js
jecxz
imul
leave
xor
inc
inc
nop
inc
lods
mov
sub
fcmovb
sti
in
inc
movsb
xor
inc
pop
cli
test
in
addr16
lahf
cmp
or
sbb
push
test
add
iret
push
popa
push
cld
sbb
sti
dec
pop
loop
ja
sub
push
test
shl
lock
jmp
jns
pop
insl
add
and
push
push
cwtl
lock
repz
les
int
leave
mov
inc
or
jb
add
fcmovnb
jg
jmp
inc
jno
jg
test
xchg
dec
stos
jp
mov
add
mov
neg
push
xchg
xor
hlt
stos
leave
sub
test
dec
nop
fildl
pop
xor
rolb
int
daa
jbe
pop
call
pushf
inc
xor
or
lcall
cwtl
add
or
push
adcb
mov
xor
insl
xchg
jnp
and
faddl
push
test
clc
ret
mov
mov
mov
push
cmp
sahf
add
insl
ret
mov
sahf
mov
shrb
mov
das
test
pop
cli
in
mov
and
negb
xor
sahf
ja
aaa
dec
in
mov
push
call
pop
imul
movsl
sub
aad
out
negb
gs
sub
sarl
sahf
mov
push
jl
in
adc
jb
cmp
add
jbe
ss
mov
push
aam
enter
or
inc
lds
stc
jns
cli
add
jo
xchg
and
outsl
adc
cmp
imul
lock
sbb
sbb
fstl
nop
int
stc
sub
pop
fs
mov
loopne
mov
mov
add
adc
popa
pop
or
inc
ljmp
mov
adc
cmp
mov
push
xchg
movsb
inc
or
push
mov
pusha
test
jmp
scas
iret
mov
mov
cmp
xchg
lea
jns
pop
jmp
jne
mov
ds
push
aas
mov
xor
cmpsl
aaa
sbb
push
scas
ret
or
jle
rcrl
adc
mov
jmp
or
lods
push
adc
inc
mov
mov
push
lods
iret
jl
xor
mov
jno
mov
fisubrs
leave
or
or
mov
mov
cmpsl
xchg
sbb
pop
jb
fs
push
std
scas
call
or
mov
inc
aaa
jb
add
xor
cmpsb
adc
push
xchg
xor
adc
xchg
popa
adc
inc
jbe
push
in
ja
int3
jmp
roll
jb
push
cwtl
pop
out
out
test
roll
rolb
test
movsl
rcrl
jg
push
pop
add
or
xchg
xlat
sub
enter
ss
sub
mov
mov
xchg
cld
cltd
shlb
idiv
mov
int
cltd
adc
jl
mov
fsubrl
lea
mov
ficoms
cmp
into
cmp
add
inc
pop
push
sahf
and
mov
mov
push
and
pop
call
aad
jg
add
fnstcw
and
mov
or
or
jle
movsl
pop
mov
lods
adc
sub
adcb
call
xor
adc
into
aam
fs
movsl
pop
mov
inc
mov
lret
ljmp
ret
mov
les
call
jg
adc
daa
mov
dec
jne
dec
xchg
sbb
or
hlt
push
or
je
lock
std
push
sbb
out
cmp
test
mov
addl
out
push
loope
mov
imul
or
add
das
and
pop
pop
lret
ljmp
push
push
jle
lea
orl
jle
inc
aas
xor
and
dec
sbb
mov
push
or
movl
movsb
sub
push
lea
lcall
jge
mov
push
jnp
daa
daa
dec
push
sbb
sub
add
fld
jge
or
xchg
cmp
sahf
loope
or
adc
in
imul
jne
sub
fcoml
mov
scas
out
pop
icebp
negl
add
loopne
out
sub
clc
cwtl
repnz
cmc
shl
add
xchg
int
insl
and
mov
int3
lret
mov
sub
outsb
add
or
push
loopne
mov
xchg
loopne
popl
xchg
jecxz
pop
lret
jbe
pop
push
loop
testb
icebp
arpl
ror
jmp
pusha
sbb
bound
call
ret
or
imul
insl
pop
decl
dec
push
lret
stos
jl
cmp
cmp
pop
jae
adc
repnz
xor
mov
add
or
pusha
lods
jl
jo
mov
mov
pusha
shlb
adc
das
out
sub
cmc
jp
out
jns
or
fldl
aaa
in
or
push
cmp
out
inc
repnz
jp
or
mov
lea
insb
adc
jmp
jle
push
ficoml
xchg
clc
into
sub
mov
mov
adc
imul
fsubs
add
or
in
rcrl
mov
xor
lahf
inc
fdivrs
dec
mov
arpl
fdivs
repnz
inc
sub
fstpl
jo
and
fildll
out
push
jp
jg
sbb
sub
popa
adc
insb
fwait
dec
enter
shl
xchg
jo
mov
lahf
add
rorb
or
mov
outsl
in
mov
pop
jne
divb
xchg
inc
and
pop
ret
fwait
fwait
sub
test
clc
popa
push
or
popa
jno
lods
js
adc
pop
dec
iret
ret
xchg
les
xor
shll
sub
inc
push
mov
cmpsl
shll
cmp
into
adc
cs
fistps
sbb
push
jecxz
rolb
popf
test
ja
xchg
in
aam
xchg
jbe
test
pushf
push
popf
mov
rolb
sbb
in
jle,pt
ret
mov
imulb
jle
xchg
add
aaa
xchg
xchg
rorl
ret
pop
adc
shrb
lods
movsl
jns
imul
mov
push
mov
push
or
icebp
icebp
mov
cltd
fwait
daa
mov
cmpsb
add
in
jae
mov
pop
xchg
jo
pusha
adc
add
xor
and
rclb
shlb
ss
nop
push
andb
mov
cmpsb
jo
pusha
adc
add
xor
and
rclb
shlb
ss
nop
push
andb
mov
cmpsb
jo
pusha
adc
add
xor
and
rclb
shlb
ss
nop
push
andb
movsb
mov
mov
pusha
adc
add
jbe
stc
shr
push
lock
xor
fdivrp
cltd
iret
mov
mov
movsb
mov
xchg
mov
mov
cmp
add
je
fs
push
inc
push
mov
movsb
mov
xchg
aam
xor
and
pusha
es
je
cmpsb
push
inc
inc
push
mov
movsb
mov
sahf
test
aam
int3
xor
and
addr16
push
sbb
pop
sbb
adc
push
std
cmpsb
movsb
repnz
pop
pop
aas
pop
imulb
push
inc
decl
add
aas
sti
sbb
popa
push
or
insl
pusha
or
dec
xor
cmpsb
or
cltd
push
adcl
push
inc
mov
xor
repnz
mov
imulb
mov
outsb
xchg
aam
in
jbe
mov
movsl
mov
xchg
sub
xor
cltd
out
jmp
push
int3
inc
cmp
sahf
rclb
jns
jbe
out
or
xchg
stos
fdivs
add
lea
stc
push
data16
mov
push
test
roll
and
pop
fs
dec
and
adc
dec
xor
sub
ljmp
mov
out
not
ffreep
iret
xor
and
adc
add
je
fs
push
inc
inc
xor
ret
int
icebp
xchg
xchg
cwtl
mov
cwtl
mov
test
ja
push
and
mov
mov
mul
xchg
mov
mov
aam
les
push
jb
push
adc
sbb
sub
out
sar
out
jecxz
mov
not
mov
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
xchg
aam
xor
and
adc
add
je
fs
inc
inc
push
mov
add
das
cmpsl
mov
jle
iret
shrb
iret
jmp
cmpsb
sub
sti
add
fisubrs
pop
add
lret
inc
fwait
pop
fimuls
ficomps
fsubrl
xchg
pop
cmpsl
inc
xchg
inc
into
sbb
loope
dec
repz
add
cltd
fs
pop
push
scas
aas
sub
imul
xchg
push
add
pop
jno
faddl
sbb
fstl
js
and
or
stc
add
dec
fildll
sbb
inc
xchg
xor
or
cmp
mov
xchg
push
daa
in
ljmp
or
push
fsubp
push
lods
nop
cmp
xchg
in
xchg
aam
stos
dec
and
push
repz
sub
or
xchg
ss
jmp
xorl
push
adc
nop
lea
cmp
xchg
andb
dec
pop
ljmp
sbb
ret
scas
inc
rolb
sti
cmp
aad
sbb
xlat
and
push
jp
test
pop
lods
sbb
sbb
pop
jecxz
pop
negb
test
cmpsb
aam
ljmp
mov
cmp
repz
ret
jne
in
decb
xor
dec
sbb
adc
ja
push
pop
xchg
jl
pop
mov
popa
mov
mov
mov
pop
mov
dec
mov
cmc
or
and
sahf
mov
mov
jmp
push
push
pop
sub
nop
loop
sbb
and
pop
clc
call
jnp
sub
xchg
test
movsb
adc
in
loopne
push
cli
leave
sbb
leave
std
neg
and
gs
je
mov
xlat
xchg
cwtl
in
mov
push
sahf
icebp
pop
or
fldcw
ja
gs
ss
and
aaa
in
scas
nop
push
jge
pop
mov
pop
xchg
inc
mov
add
filds
je
or
push
idivl
jo
stos
inc
ja
mov
xor
fbstp
mov
fs
enter
jb
mov
xchg
jecxz
push
es
push
movb
in
adc
pop
aaa
sbb
popa
enter
add
xchg
mov
xor
jl
popf
pop
push
mov
add
fwait
mov
pop
test
push
mov
jno
xchg
and
in
push
ja
adc
daa
int
xchg
sbb
stos
outsb
push
stos
arpl
mov
dec
jmp
lahf
rcrb
sbb
fs
mov
lret
mov
vpmuludq
push
push
lahf
sub
adc
pushf
aaa
lcall
test
daa
xor
cwtl
int3
and
sub
popf
ja
outsl
iret
inc
movsl
xchg
insl
and
jb
mov
sbb
negb
test
jecxz
fwait
cmc
rolb
inc
inc
push
push
mov
jg
push
lock
mov
push
push
pop
repz
mov
int3
pop
dec
jmp
lret
inc
xchg
or
inc
gs
push
popf
les
add
sbb
dec
cs
mov
xor
fcoms
xchg
xchg
inc
mov
addl
xchg
clc
pop
int
psubw
or
inc
push
std
rolb
push
add
lds
insb
dec
popl
movsl
mull
and
into
mov
enter
push
pop
add
pop
jbe
out
int3
xlat
les
fs
jp
sbb
sub
sub
negb
push
lahf
sub
ss
mov
sbb
add
pop
push
push
push
add
push
cmp
mov
cmpsb
outsb
sti
into
xchg
sbb
pop
sahf
leave
xchg
daa
dec
cmpl
xor
mov
add
stc
loope
gs
loopne
icebp
inc
xchg
movsb
mov
mov
add
pop
dec
mov
sbb
fwait
jne
pop
inc
cmpsb
xor
dec
jp
jb
loope
lock
cmp
shrl
movsl
inc
push
bound
es
and
jb
mov
mov
dec
xchg
test
sub
pop
js
mov
aad
movb
imul
outsb
cltd
sarb
or
xor
js
ja
rcr
in
loopne
lret
adc
int
jae
pop
adc
data16
push
mov
and
ds
lcall
mov
adc
mov
jecxz
scas
aad
lods
aaa
iret
loope
enter
pop
pop
cmpps
pop
add
mov
in
aad
test
and
dec
sbb
xchg
lock
in
xor
flds
div
sub
pop
pop
leave
jno
xor
and
jle
cmp
sarl
rol
xorb
out
pop
push
pop
daa
jnp
sbb
rorl
mov
jb
jns
or
scas
mov
cmp
or
fwait
bound
gs
das
cmp
int3
testb
mov
fmuls
mov
mov
dec
pop
mov
mov
sub
xchg
outsb
jle
sub
daa
add
incb
mov
popa
das
inc
add
mov
mov
push
xchg
xchg
push
adc
pop
and
aaa
adc
out
pop
sbb
xor
sub
mov
js
cli
jge
sub
mov
push
dec
pop
adc
add
inc
in
ljmp
insl
mov
sub
out
sahf
sti
jnp
icebp
and
xchg
xchg
mov
mov
sbb
jmp
mov
lock
jp
xor
mov
insb
xchg
cmp
add
mov
js
mov
sub
sbb
or
mov
pop
int
add
cmp
xchg
cmc
add
popa
jp
clc
fwait
add
cmc
and
and
add
outsl
enter
pop
pop
adc
mov
idivb
lret
fnstcw
or
jns
xchg
xor
pop
scas
cs
add
popa
xchg
xchg
dec
les
lods
repnz
iret
loope
or
ljmp
ret
dec
inc
shr
rorl
aas
cmp
aaa
jne
std
inc
jecxz
xor
cmp
add
adc
rorl
repnz
fwait
rcll
ret
jns
pop
jae
fdivl
dec
cmp
in
jle
xchg
add
mov
scas
ljmp
ljmp
scas
adc
shll
push
xchg
or
xchg
lahf
stos
xor
pop
mov
jp
shl
adc
push
mov
ficoms
clc
push
xchg
sub
leave
push
fld
mov
aad
into
push
movsl
stos
xchg
int
jl
fildll
push
adc
cld
adc
mov
push
addr16
pusha
jnp
pop
mov
mov
inc
adc
stc
dec
dec
jbe
fs
inc
inc
test
and
stos
mov
addr16
mov
jnp
mov
mov
lds
sbb
inc
inc
and
fs
addb
insl
add
insb
lods
dec
fsts
es
pop
xchg
adc
out
mov
std
mov
cmp
mov
dec
and
inc
imul
push
lea
sarl
xchg
xchg
ret
cs
das
add
cld
rol
xchg
sbb
loope
inc
sbb
clc
xor
add
je
into
insl
outsl
test
inc
sbb
inc
iret
stos
pushf
hlt
lret
outsb
mov
sbb
rcll
fsin
movsl
push
sbb
and
out
dec
push
rorb
outsb
gs
test
mov
stc
mov
mov
pop
sar
cmc
push
fisubs
pop
loop
scas
cli
lock
pop
in
jle
or
mov
jne
mov
mov
lcall
and
or
sub
jg
aaa
clc
mov
fisttps
test
imul
ljmp
test
xchg
dec
aas
inc
jp
add
mov
pop
stos
cmp
das
ss
outsb
jge
mov
mov
les
mov
push
jno
jbe
les
mov
add
aas
rcr
xor
subb
stc
jl,pn
mov
gs
adc
std
lea
xchg
aas
and
mov
nop
xor
inc
lcall
faddl
jnp
cmpsl
and
lret
mov
repz
mov
stc
popf
rcr
in
fildl
sbb
insb
jg
jle
test
test
or
jmp
mov
pop
or
cmp
sbb
outsl
inc
add
inc
pop
xchg
call
add
pusha
jns
mov
in
out
adc
push
mov
mov
leave
sbb
lfs
jl
mov
push
dec
ss
mov
add
loope
xor
push
sbb
out
sbb
dec
jno
ljmp
inc
fnstenv
pop
test
in
es
sahf
fxch
inc
lret
adc
rorb
mov
add
in
ljmp
inc
stc
ja
scas
aam
sbb
pop
rorl
sub
test
sub
nop
mov
shlb
lea
dec
daa
imul
jge
bound
mov
outsl
cmpb
outsb
std
xor
jl
addb
iret
jne
loope
xchg
push
ret
lods
push
inc
xor
push
or
mov
cmp
mov
push
repz
push
movsb
mov
inc
scas
cld
jo
fsubrl
jbe
sbb
call
outsl
dec
adc
leave
insb
xor
mov
cwtl
add
int
pop
add
outsl
jecxz
int
aad
mov
lock
or
sub
outsb
inc
hlt
xchg
adc
jg
stc
lret
mov
dec
xchg
push
sub
es
insb
hlt
sbbb
or
mov
in
test
je
cs
jne
pop
push
xor
fcmovb
push
xchg
std
ljmp
insl
xchg
xor
popf
outsl
mov
out
add
dec
lahf
xor
lock
aad
sbb
push
sub
daa
stos
mov
cmc
push
mov
ljmp
rcll
imul
int
adc
xor
ja
js
pop
fadd
jge
mov
fnstsw
sbb
lea
dec
ss
in
lods
daa
stc
mov
jnp
xor
icebp
lds
xor
inc
enter
popw
gs
arpl
leave
sahf
cmp
mov
xlat
test
fisubl
push
test
dec
cli
lea
xchg
jmp
jbe
mov
cmpsl
pop
daa
movsb
stc
sti
mov
adc
enter
jp
cmpsb
mov
ret
cmp
cs
jg
movsb
fcoml
aaa
jno
jmp
es
mov
jl
or
sub
mov
or
sub
hlt
mov
arpl
sbb
dec
sbb
movsl
mov
mov
jno
sub
stos
mov
jmp
int3
or
lods
fiaddl
mov
jecxz
popa
aas
loop
test
mov
push
push
in
and
push
iret
adc
push
mov
xor
pop
sbb
sub
jb
lea
pop
lea
push
xor
push
aaa
mov
subb
pop
mov
imul
imul
inc
mov
scas
mov
mov
adc
cmc
mov
xchg
mov
mov
testb
ljmp
nop
cld
inc
sbb
leave
cmp
adcb
aad
push
addr16
cs
mov
pop
ljmp
xchg
pop
lds
xchg
lret
mov
add
xor
ja
dec
add
decl
pop
dec
sbb
loopne
scas
repnz
xchg
add
xor
mulb
cmpps
adc
js
dec
inc
mov
cwtl
imul
and
xchg
adc
jnp
jmp
mov
sbb
push
sbb
or
jmp
sub
andl
cmp
rol
sbb
inc
pop
cmp
and
mov
out
loope
fsubs
in
data16
inc
leave
popa
cld
stc
pop
mov
mov
xchg
pop
inc
xchg
dec
xchg
dec
cmpsb
jns
lret
inc
cmp
xor
and
mov
repnz
add
cld
dec
push
adc
out
mov
int3
imul
lret
mov
cmpsb
int3
fimull
sti
and
adc
in
push
and
mov
jae
jne
mov
xor
jnp
pop
sbb
popa
scas
stos
xchg
or
aas
mov
pop
sbb
sub
xlat
cmp
jmp
cld
es
pop
mov
xor
mov
adc
movsb
push
jmp
cmpsl
push
mov
clc
arpl
test
pop
adc
xor
sub
cmp
std
gs
outsb
push
pop
test
insb
sub
in
shlb
loop
test
xchg
cld
and
pop
test
xorl
fstp
pop
sbb
push
imull
jecxz
cmp
lret
add
popf
fsubrl
aaa
fcoml
fidivl
and
add
in
pop
ret
aaa
loop
dec
ljmp
pushf
mov
add
je
inc
and
scas
mov
lahf
notl
mov
add
xor
pop
mov
push
stos
mov
frstor
sub
xchg
fisubrs
adc
xchg
pop
push
mov
ficomps
mov
testl
lahf
sbb
pop
cmc
mov
jge
rorl
repnz
or
in
adc
xlat
mov
leave
wbinvd
test
mov
sub
or
push
or
scas
pop
dec
scas
inc
push
xchg
dec
cmp
cmp
icebp
pop
filds
arpl
out
mov
rolb
pop
in
push
idiv
rcrb
test
sbb
cmc
xchg
repnz
nop
cwtl
aad
imul
push
ret
mov
xchg
imul
add
arpl
dec
rcll
dec
testl
mov
inc
shl
or
jmp
xchg
xor
jp
ret
loope
adc
stos
jl
adc
lret
mov
leave
fwait
out
mov
adc
dec
scas
inc
lcall
sti
inc
sub
push
les
or
imul
jl
or
inc
pop
rcll
or
fwait
sbb
mov
icebp
rorl
cwtl
ljmp
add
xchg
pop
imulb
inc
xchg
mov
or
sarb
push
pop
cwtl
aam
add
sub
mov
mov
or
mov
jp
add
movsl
pop
xchg
push
nop
cmp
pusha
mov
fidivrs
inc
jns
mov
addr16
into
mov
cmp
mov
jmp
mov
jno
adc
push
jle
inc
out
mov
inc
int
or
jnp
push
cmpsb
incl
std
mov
pushf
cmp
mov
sub
fisttpl
popa
icebp
push
jns
xor
lret
ret
test
lahf
enter
dec
xchg
fs
orb
sti
pop
std
xor
mov
cs
xchg
stc
xchg
mov
xchg
rcl
pop
cmc
jmp
aam
sbb
lret
daa
sbbl
arpl
jecxz
xor
stos
sbb
jo
mov
stos
or
pusha
pop
dec
stos
inc
pop
jno
xchg
pop
xor
pop
sub
push
scas
xchg
roll
or
int
aas
in
repz
or
rclb
fidivl
inc
xor
sbb
les
xor
sub
ret
jl
cmp
call
adc
loopne
in
sub
mov
lods
jge
and
or
fidivrs
adc
adc
shl
dec
out
fcomip
int3
jmp
lds
dec
insb
sbbl
inc
sbbb
jno
jg
pop
mov
or
dec
pop
jmp
mov
xchg
xor
pop
fdivs
mov
inc
sbb
mov
aaa
out
jbe
lret
cmc
sbb
jge
ret
std
cli
mov
sub
cld
loopne
adc
and
int3
rorb
lcall
movsl
and
mov
pop
mov
lds
data16
outsl
std
mov
loop
push
sbb
shll
or
rclb
data16
push
dec
inc
gs
pop
nop
adc
inc
add
mov
movq
ss
repz
rcrl
insb
push
dec
int3
pushf
fwait
and
cmpsl
push
jecxz
scas
mov
test
jle
push
pop
or
lea
mov
dec
outsb
in
andl
popf
test
cmp
in
or
mov
mov
sub
popa
fsubrs
lea
mov
jmp
jno
fidivrl
adc
in
in
aas
test
sub
sbb
pop
loope
mov
mov
hlt
sbb
xor
sarl
pop
xchg
jge
in
rorb
inc
int3
sbb
loope
sub
pop
loope
xchg
add
pop
sbb
imul
add
ja
jno
cld
outsb
xchg
notb
and
push
movsl
loopne
jne
lcall
and
cmp
mov
in
loopne
pop
jnp
repnz
lea
lret
loopne
lahf
mov
pop
xchg
in
xchg
dec
cmp
mov
scas
push
or
cmpb
xor
xchg
sub
mov
fwait
adc
es
jnp
mov
mov
adc
push
adc
fildll
sar
test
imul
sub
adc
add
sbb
ja
pop
pop
inc
adc
pop
rorl
sbb
faddl
cmp
daa
sbb
pop
das
mov
shll
int
mov
add
les
stos
or
pop
sub
jmp
movsb
nop
sbb
lea
pop
adc
sbb
test
enter
subl
mov
ljmp
stos
out
jnp
lods
fwait
xchg
sub
push
sub
cmp
push
aas
cmp
loopne
sbb
enter
sub
sbb
jecxz
sub
dec
or
add
xchg
andb
push
add
xchg
and
mov
xchg
cwtl
arpl
call
pop
aas
xor
and
jg
dec
cmpsb
in
pop
push
fildll
jle
mov
sbb
popf
mov
daa
das
cmpsl
test
mov
mov
jns
out
adc
jns
add
pop
mov
or
push
adc
pop
sarl
inc
xlat
pop
or
lds
inc
mov
lcall
xlat
aas
inc
adcl
es
dec
shrb
stos
pop
cwtl
adc
sub
jle
sbb
shlb
int3
imul
cmp
ret
jbe
push
and
or
leave
xchg
xchg
cmp
out
sbb
lret
push
mov
sarb
rcl
jbe
movsb
fnsave
and
hlt
subb
jbe
subl
jnp
xchg
or
ja
movb
test
xor
cli
cld
inc
clc
fwait
test
jmp
jae
cmpsb
push
imull
xchg
add
enter
orb
data16
xor
int
jle
add
pop
scas
mov
fwait
cmp
call
cs
xor
stos
adc
cmp
push
push
sbb
push
leave
ds
lea
jmp
xchg
pop
inc
shlb
push
jl
pop
pusha
out
gs
icebp
mov
pop
cmpsl
cmpsb
and
in
pop
add
jmp
dec
mov
aas
addb
dec
sub
mov
sub
je
repz
jl
sub
dec
out
jno
jb
rolb
es
push
or
sarb
jmp
and
xchg
out
aas
cmp
outsl
mov
mov
stos
ds
mov
icebp
push
sbb
repz
mov
mov
sti
xchg
iret
shrl
xchg
scas
mov
push
sub
cwtl
xlat
aaa
pop
lea
cltd
fiadds
cmp
int3
mov
push
cmpsl
pop
js
testl
dec
sub
cmp
mov
and
fmull
in
imul
jnp
push
orl
mov
sub
les
mov
sub
push
fidivs
popf
sti
mov
jns
leave
cmp
mov
adc
imul
mov
in
repz
outsw
push
cmp
les
lock
cld
repz
mov
sarb
push
out
pop
mov
inc
push
sar
xor
mov
in
mov
mov
fdivs
in
mov
cmpsl
pop
pop
mov
mov
xor
js
add
and
add
adc
or
cmpsb
loope
frstor
jmp
std
jge
or
aaa
jbe
mov
mov
out
cli
mov
in
arpl
mov
cmp
cli
dec
cmp
nop
jmp
pop
nop
pop
jl
out
cmp
mov
xor
adc
mov
js
cmc
adc
mov
adc
pushf
and
push
dec
fdivs
hlt
pushf
inc
mov
xor
ljmp
jl
aam
test
add
or
imul
ret
ja
daa
loope
sbb
dec
add
and
inc
jns
out
pop
push
jl
fdivrs
jmp
sbb
and
daa
xchg
xor
inc
ds
and
mov
and
mov
jnp
add
xor
test
inc
aas
ja
or
push
inc
cmp
xchg
mov
and
pop
xchg
sbb
add
fidivrs
out
and
xchg
mov
insl
nop
mov
mov
mov
hlt
or
jecxz
enter
adc
daa
aad
loop
mov
imul
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
xchg
aam
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
xchg
aam
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
xchg
aam
xor
and
mov
out
in
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
mov
mov
jge
divl
xchg
xor
ret
es
repnz
adcb
mov
xchg
push
cmpsb
bound
sahf
out
testl
loop
repnz
in
push
xchg
loopw
mov
rclb
jo
xlat
cs
imull
pop
sbb
push
andl
xchg
cmp
pop
out
dec
xor
ljmp
data16
jle
pop
xor
cld
in
ror
sbb
cmp
into
movb
out
insl
bound
cmpb
loop
subl
add
push
test
pop
ret
push
pop
sub
mov
jno
enter
xchg
xchg
in
xor
xchg
lret
sti
jp
fincstp
int
cmp
fisttps
cmpsl
addl
push
push
imull
fists
sub
xor
repnz
aas
xchg
loop
mov
adcb
daa
inc
pop
xchg
pop
bound
into
clc
ret
push
sbb
push
insl
data16
xchg
mov
movl
divl
daa
repnz
mov
addr16
repz
push
lret
and
pop
test
jge
dec
xchg
push
outsl
test
fwait
xor
sbb
or
add
fadds
aam
roll
call
insl
mov
out
pop
push
cmpsl
jp
pop
xchg
or
and
aaa
ret
push
adc
xchg
adc
and
xor
ret
daa
loop
repnz
adcb
mov
xchg
push
cmpsl
bound
adc
and
xor
ret
daa
loop
repnz
adcb
mov
xchg
test
shl
mov
cmc
add
aam
dec
mov
xorl
push
addl
add
insb
sbb
je
ljmp
adc
jmp
cmp
pop
inc
cmp
movsl
mov
popa
cltd
imul
cltd
insl
mov
clc
inc
dec
and
loop
ljmp
in
add
stos
mov
cmp
stos
cld
mov
cmp
repz
insb
das
insl
incl
sub
loope
scas
mov
jge
fidivl
pop
pop
jb
mov
icebp
in
add
mov
mov
test
jg
sub
aas
dec
adc
sbb
int
pushf
pop
clc
inc
aaa
cmp
sbb
push
imul
jl
jo
ret
test
gs
and
jmp
es
inc
adc
sub
frstor
notl
jne
stos
sarb
movsl
in
int
xchg
push
cmp
push
xlat
cmp
and
fisttpll
ss
scas
push
sahf
std
pop
sub
loope
pop
lret
cltd
hlt
mov
or
movsb
mov
mov
xchg
mov
jns
mov
pop
clc
and
jo
xchg
dec
push
push
lock
ficomps
out
fwait
mov
adc
lcall
push
dec
repnz
imul
test
pusha
and
bound
xchg
push
ja
push
jno
adc
std
adc
cwtl
jl
gs
xlat
mov
dec
sti
repnz
lcall
aad
push
push
mov
fwait
std
cmpsl
jb
sub
aad
cmp
sti
ja
pop
or
js
test
rorb
add
dec
push
inc
push
pop
pop
cs
std
cmpsb
mov
xchg
das
sbb
dec
or
js
or
mov
pusha
scas
mov
test
push
push
jmp
in
andb
hlt
rclb
test
push
sbb
push
add
rcrb
sbb
xchg
out
stos
negl
pop
movsl
jae
mov
mov
mov
stc
inc
sub
repz
mov
cltd
adcb
pop
mov
xchg
xor
sub
clc
sbb
add
lods
add
push
mov
jmp
inc
xor
addb
repnz
iret
lock
add
mov
nop
jg
cltd
dec
repnz
inc
clc
stos
jae
pop
push
pop
adc
push
and
xchg
aaa
sub
movsl
xlat
jo
ljmp
fdivrs
jne
popf
dec
xorl
iret
dec
push
xor
orb
inc
sub
cmc
in
sbb
loop
inc
andb
cmp
xor
xchg
add
dec
aam
pop
jp
mov
sbbl
mov
jmp
inc
lock
push
test
std
test
mov
mov
xor
mov
mov
lods
adc
ja
rclb
pop
int3
fcoms
lods
in
mov
icebp
rorb
pop
and
jns
sbb
dec
xchg
jle
mov
pop
mov
addr16
jns
push
xchg
jl
or
shlb
fs
es
mov
int
repnz
push
xchg
cwtl
dec
lahf
out
push
and
add
xor
sbb
lsl
lods
xor
add
pop
push
pop
sub
xorl
je
add
sub
aas
out
dec
stc
shlb
stc
xlat
cld
imul
loope
inc
mov
insb
inc
shrl
out
or
lock
mull
xor
sub
in
jg
arpl
xchg
fwait
sub
push
pop
sbbb
xchg
sub
icebp
mov
sbb
and
sbbl
rolb
es
pop
into
jmpw
stos
pop
shll
aam
jg
outsb
outsl
sub
popa
andb
pcmpeqb
shr
and
sub
mov
rcl
push
mov
insl
iret
add
pop
aam
pop
scas
enter
push
dec
popf
mov
cmp
rcrl
sub
mov
push
pusha
sub
dec
pop
inc
and
scas
shrb
pop
mov
push
cli
call
mov
jbe
cmpsl
mov
adc
mov
pop
aas
lock
daa
in
push
mov
lds
ja
imul
push
inc
push
dec
sarl
lock
das
xchg
pop
xchg
pop
enter
cmc
mov
mov
and
or
inc
push
js
push
sub
push
sbb
mov
mov
lcall
fildll
push
inc
je
cmpsb
mov
push
ljmp
lock
ret
popa
mov
jmp
sbb
popf
mov
loope
jbe
loop
mov
xor
pop
sbb
jmp
jne
adc
stc
pop
addr16
xor
xor
add
out
jb
push
test
notb
mov
fwait
sbb
jae
jns
sbb
ret
popa
lret
xor
pop
iret
loopne
repz
fs
push
dec
mov
ret
loope
and
mov
movsl
ds
sti
test
jnp
test
push
sbb
test
sbb
ljmp
rol
jnp
scas
test
int3
pop
lods
repnz
dec
adc
das
inc
mov
sbb
adc
sub
add
add
adc
mov
jecxz
aaa
sbb
pushf
mov
pop
push
in
movsb
cmpb
jge
mov
push
and
jne
mov
jp
jmp
adc
addr16
test
mov
call
pmaddwd
add
push
mov
jns
jg
mov
cli
pop
jecxz
call
sub
pushf
cmp
add
adc
lods
rorb
scas
mov
cmpsw
push
aaa
jbe
xchg
sbb
ss
imul
push
or
push
mov
mov
pop
out
mov
push
cvtpi2ps
mov
cmp
dec
jns
test
fisubs
jnp
and
andb
xchg
or
cmpsl
ja
inc
push
repz
jo
cmpsb
rcrb
shr
inc
mov
loopne
int3
or
sbb
out
adc
mov
ds
jg
mov
jge
loope
cli
sbb
cltd
notl
and
push
xchg
sbb
sub
movsb
sti
add
and
sbbb
addl
push
stos
jns
test
loopne
jle
xchg
jle
negb
inc
jge
inc
mov
ljmp
pop
sbb
loopne
adc
add
sbb
cmc
inc
mov
dec
imul
xor
add
jno
das
mov
xor
push
jno
mov
stos
or
sub
iret
sbb
test
pop
mov
xlat
negb
cmpsb
cmc
sub
in
ss
cmp
sub
test
cmp
insl
mov
dec
mov
jp
add
cmpsl
jl
imul
sbb
outsl
cmp
or
cltd
or
loop
cmpsb
outsb
inc
mov
inc
xor
ffree
jne
mov
stc
and
stos
sbb
sub
cmpsl
je
jb
xor
ret
jmp
fcoms
rol
pop
inc
lods
xor
pusha
and
aaa
cmp
sarl
xor
loope
jmp
int
or
imul
mov
out
scas
mov
in
cmp
cmp
cwtl
xor
jbe
cmp
sbb
add
std
outsl
adc
and
pop
xor
pop
iret
sbb
insb
fcomp
aad
aad
cmp
or
adc
push
cmp
or
push
cmp
sub
jmp
jle
mov
aam
stos
movl
mov
pop
rcrl
dec
mov
movsw
push
or
cmp
aas
push
out
aas
shlb
loopne
dec
push
pop
cmpsb
sub
and
mov
gs
jecxz
pusha
imul
leave
cmpsl
dec
mov
mov
sub
ret
dec
out
mov
xchg
add
or
mov
das
sbb
adc
mov
je
xchg
inc
je
sbb
jo
adc
lcall
test
mov
jne
pop
repz
push
je
sahf
pop
enter
mov
dec
jl
mov
mov
inc
shlb
gs
adc
mov
and
decb
mov
dec
rorb
mov
mov
pop
jecxz
xchg
xchg
enter
loope
or
mov
scas
jnp
jb
aas
and
and
inc
adc
cmp
and
pop
xor
pushf
orl
mov
aaa
xor
stos
shll
cmpb
add
push
push
push
jo
and
mov
mov
mov
xor
sarl
jo
int3
in
and
sbb
sahf
dec
dec
sbb
call
or
fsubrs
nop
test
xchg
sbb
jb
bound
scas
inc
xor
mov
dec
loopne
or
sbbb
fisttpl
sbb
in
mov
int
add
sub
rcr
mov
scas
sbb
movl
add
fs
lea
and
add
fwait
pop
dec
into
lock
sbb
subb
hlt
adc
cmp
jp
jne
cltd
xchg
fwait
lcall
and
add
xchg
dec
stos
pop
pop
mov
iret
mov
dec
lcall
addr16
iret
add
enter
mov
out
cltd
rol
imul
inc
fidivl
leave
stos
adc
mov
push
fcompl
lock
nop
pop
pop
repz
mov
lds
std
push
out
ja
lea
cmp
pop
push
mov
pushf
push
mov
xchg
aam
push
jg
in
aas
ret
out
in
aam
jae
or
mov
cmc
push
mov
aad
loope
inc
jno
add
mov
xor
pop
fnstcw
icebp
movsl
push
cwtl
sub
aad
or
pushf
mov
sub
outsb
and
cmp
aaa
ficomps
xlat
xor
sti
add
call
js
sbbb
sbb
pusha
aam
cwtl
push
adc
mov
add
and
popf
stc
jo
xchg
das
jno
outsb
loop
inc
adc
xor
inc
jle
jp
repnz
sti
dec
mov
fisubrl
xchg
movsl
mov
ljmp
mov
movsl
add
mov
outsl
sub
jns
push
scas
add
mov
jle
inc
cs
jl
mov
or
sub
enter
mov
add
pop
sub
push
push
inc
pop
sbb
pop
sti
mov
das
mov
rclb
clc
aaa
push
test
into
cli
imul
lahf
in
and
jb
ret
repnz
mov
pop
sub
pop
push
int3
inc
push
dec
bound
xor
inc
sbb
push
adc
jge
arpl
aas
cwtl
in
pop
mov
cltd
xchg
jnp
cmp
and
ljmp
and
cmc
mov
cltd
aam
pop
inc
in
sbb
and
dec
jb
inc
loope
in
push
cwtl
test
lods
mov
cmpsb
jae
xchg
add
push
call
add
push
inc
sti
out
lods
imul
test
test
fwait
adc
sub
add
or
mov
iret
stos
mov
push
aad
sti
repnz
jo
ljmp
or
mov
sahf
in
sub
std
push
cmpsl
dec
js
push
adc
mov
push
inc
vpsadbw
cmpsb
call
pushf
ficoms
aaa
js
stc
xorl
arpl
sbb
push
std
xorl
notb
mov
and
scas
xchg
xchg
pushf
rol
inc
cmp
test
inc
sub
mov
ret
xchg
insb
sub
imul
sbb
and
add
pop
nop
sbb
sbb
mov
or
test
add
cmpl
mov
jge
mov
out
test
sbb
jp
pop
or
xchg
stos
js
scas
mov
int3
test
or
bound
adc
mov
and
cmc
lods
add
xor
mov
insb
dec
andb
pop
cmp
in
flds
movsl
mov
mov
test
adc
fcoms
cmp
add
xchg
inc
pop
inc
and
adc
cld
push
hlt
sub
test
xchg
jo
fs
xchg
jae
jne
ds
mov
int3
cli
xchg
adc
les
sub
add
repnz
js
mov
pop
mov
jecxz
imul
daa
int
mov
pop
jle
cmp
jle
into
in
add
stos
sbb
rclb
shl
sub
das
lods
jp
test
xchg
xor
inc
jp
mov
test
mov
fcomps
mov
pop
inc
mov
dec
leave
mov
fsub
test
xchg
mov
xlat
inc
mov
sbb
cmp
jnp
add
ror
push
popa
out
mov
push
and
mov
inc
lea
sbb
jmp
and
cmc
and
stc
cmp
adc
push
jne
adc
cwtl
dec
aaa
scas
outsl
add
inc
out
icebp
psrlq
outsl
inc
bound
insb
inc
dec
out
cmp
cmpl
test
aam
sbb
jge
xchg
xor
fsubrl
stos
mov
outsb
stos
and
movsb
push
mov
pop
fucomip
addl
fwait
and
scas
xchg
push
jp
jnp
xor
ds
xchg
adc
push
mov
sub
adcl
or
mov
pop
or
lods
mov
mov
pushf
outsb
or
jp
jo
clc
inc
mov
stos
dec
sbb
stc
push
ret
daa
add
dec
subl
daa
test
lock
cltd
add
dec
jae
xchg
pop
mov
mov
clc
cli
mov
mov
mov
add
dec
lea
cmc
sbb
jae
loop
xor
adc
in
jne
dec
movsb
xchg
xchg
push
stc
cmp
stos
mov
push
loopne
clc
or
add
insb
mov
out
inc
imul
rep
push
jns
icebp
mov
push
sbb
sbb
sbb
adc
cmpsl
or
in
ja
bound
add
enter
push
mov
mov
jmp
fstp
push
ljmp
imul
mov
cwtl
jecxz
pop
pop
xchg
rolb
test
out
mov
sub
daa
shrl
dec
les
jns
jo
sbb
pop
ja
xchg
loope
jnp
inc
lret
shrl
pop
mov
xor
pop
outsb
mov
xor
repnz
cmp
insb
mov
add
xor
mov
jecxz
js
shrl
push
sub
jle
enter
adc
nop
and
loope
add
pop
jge
jmp
xchg
add
mov
fdivrl
jns
ds
add
jo
and
sbb
fs
arpl
repnz
stc
test
sarl
scas
adc
repnz
cmp
test
div
or
xor
add
seta
hlt
dec
inc
outsb
test
fnstcw
mov
cmp
add
addr16
mov
mov
rorl
jnp
lret
in
inc
sub
leave
cld
inc
push
iret
mov
pop
cmpsl
inc
dec
xor
dec
aas
pop
ds
test
imul
xchg
jno
mov
insb
add
push
xchg
mov
sub
pushf
cmp
adc
xchg
int
fwait
bound
insb
sbb
aaa
xchg
jp
xlat
xchg
jo
or
repz
mov
and
push
test
sti
mov
pusha
xor
sub
je
push
xchg
xor
xor
loopne
cmp
cmc
out
loopne
int
in
out
mov
daa
arpl
inc
cld
rcll
ret
jecxz
cs
and
xor
push
mov
and
push
fsubrl
popf
test
cmp
lret
and
fstps
adc
xor
in
imul
sbb
mov
sbb
loop
jnp
fwait
mov
jnp
jmp
cmp
es
stc
and
xor
imul
jnp
pop
pop
jb
and
push
mov
xor
std
out
mov
dec
mov
jne
insw
outsb
mov
mov
mov
jne
insb
mov
and
mov
iret
xchg
outsb
cmp
mov
mov
push
into
pop
add
push
dec
test
mov
push
dec
cmpsb
pop
ret
es
or
call
into
dec
cmpsl
sbb
std
dec
fisubrs
sub
mov
lods
adc
cmp
out
sti
loopne
mov
xchg
add
repz
jae
inc
clc
and
mov
aad
mov
ror
fistpll
daa
jecxz
scas
les
inc
aaa
test
add
les
jge
sub
cmp
arpl
or
or
gs
sbb
dec
lcall
pop
rolb
in
test
lret
out
xchg
push
jmp
push
cmp
movsb
arpl
sahf
adc
xor
andl
mull
xchg
and
jl
xchg
inc
repz
inc
stc
mov
fisubrs
decb
lea
lahf
mov
jbe
pop
ret
jmp
arpl
pop
das
out
xchg
pop
aad
xlat
jo
lods
push
fstps
andb
push
hlt
cmp
movsl
pop
add
push
hlt
popa
dec
or
adc
and
test
insl
cltd
nop
insb
mov
mov
popa
mov
aam
repnz
daa
jbe
xor
shrb
cs
test
dec
paddsb
subb
mov
inc
popf
fimuls
lock
pushf
xchg
sub
imul
cltd
aaa
push
maskmovq
divl
mov
into
sbb
push
and
testb
aas
push
sbbl
or
cmp
xor
loop
jge
mov
stos
fisttpl
inc
shl
es
sti
inc
movsl
enter
sbb
loope
push
jmp
xor
aas
xorb
shlb
push
push
and
in
arpl
je
push
xor
inc
jmp
jmp
mov
sbb
sbb
cmp
subb
sub
sbbl
aaa
outsb
push
add
call
shrb
inc
loope
jbe
in
xlat
inc
and
fsubrs
fisttpl
divl
xor
ljmp
jae
ret
iret
mov
in
fisubrl
lock
mov
sub
push
jbe
sbb
pop
mov
xchg
mov
mov
mov
sub
outsb
bound
or
push
clc
xchg
push
out
mov
mov
lret
or
and
xchg
add
out
rcll
cmpsb
jecxz
hlt
push
dec
xchg
cmpsl
mov
dec
cmp
in
int
test
xor
aad
add
push
or
not
jle
mov
push
and
jns
dec
sub
jno
or
addl
fs
sbb
dec
ds
popa
push
insb
fstpl
jne
adc
je
jne
xor
je
inc
cmc
xlat
out
dec
cwtl
clc
bound
xchg
mov
jecxz
stc
xor
mov
cmp
cld
test
adc
aad
adc
or
mov
xchg
fildl
push
pop
cmpl
dec
pop
je
mov
xor
stos
lea
rcll
mov
sbbl
jmp
fs
sub
clc
bound
test
xor
addr16
out
divb
dec
ret
push
mov
pop
lret
adc
jmp
std
lock
flds
inc
xor
dec
js
push
xchg
pop
movsl
pop
stc
cmpl
pop
mul
stos
inc
mov
ss
push
push
ret
out
call
add
jb
push
and
fidivs
aad
sub
inc
ret
ja
pop
lret
and
repnz
bound
pop
in
mov
lahf
pusha
mov
pop
inc
add
jo
dec
leave
xor
dec
mov
push
popa
and
jecxz
pop
pop
sbb
fnstcw
fwait
jmp
mov
push
push
cmp
inc
xor
and
push
fwait
mov
sbb
frstor
push
xor
or
jb
and
adc
push
dec
mov
jle
pop
std
sub
push
mov
mov
add
dec
outsb
add
pusha
push
sbb
and
adc
or
jmp
scas
mov
out
fcoml
adc
jg
mov
sarl
or
mov
mov
push
mov
movl
divl
pop
ret
daa
loop
repnz
adcb
mov
xchg
push
cmpsl
bound
adc
and
xor
ret
daa
loop
repnz
adcb
mov
xchg
sbb
add
mov
pop
sbb
shlb
loop
repnz
adcb
xorb
inc
xchg
push
cmpsb
bound
adc
mov
pop
js
loop
test
or
insl
cwtl
pop
mov
std
das
in
pop
fisttpll
int
aad
ret
popa
repz
insl
lahf
pop
dec
cmp
fisttps
jae
bswap
jg
outsl
lods
pop
popf
dec
lea
pop
dec
mov
pop
iret
or
fst
int
mov
dec
fcmovnbe
mov
cmp
dec
xchg
js
inc
mov
or
pop
mov
pushf
jnp
outsl
dec
test
mov
jecxz
rorb
enter
cmpsb
fistl
shrl
mov
out
push
rcrb
fistl
add
rcr
xor
push
push
sbb
push
fnstsw
subb
out
cmp
in
pop
loop
test
call
jecxz
cmpb
mov
mov
out
rcr
loop
add
and
aas
pop
xchg
xor
mov
push
lahf
subl
mov
loop
add
mov
push
mov
xchg
mov
or
dec
jb
mov
or
std
jns
pop
fisttpll
int
mov
jmp
insl
jmp
cmp
iret
fs
xchg
pop
in
imul
sub
dec
fnstsw
xor
sbbl
std
dec
out
insl
push
cmc
or
stos
ljmp
lahf
cmp
and
js
pop
push
mov
mov
sub
outsl
lods
pop
popf
dec
lea
pop
dec
cmp
iret
or
pop
fisttpll
int
mov
dec
lea
pop
dec
cmp
iret
or
mov
adc
jg
sub
mov
push
sbb
loope
lea
push
adc
add
fisttpll
aas
cmp
jecxz
pop
mov
popf
dec
subb
stos
mov
inc
add
push
imul
fcompl
push
movb
and
mov
pop
mov
push
pop
sbb
pop
xor
push
pusha
mov
arpl
inc
adc
pop
mov
or
adc
in
ret
dec
pop
jns
adc
imul
mov
pop
mov
jg
dec
dec
inc
lea
loope
xchg
add
repnz
outsl
outsl
or
inc
fsubp
aam
push
lcall
lahf
dec
mov
add
nop
dec
rcrl
xlat
int3
jl
xchg
lods
ds
adc
pop
cmp
mul
sub
push
sahf
push
pop
test
popa
push
pop
movsb
inc
jb
jmp
popa
inc
shlb
sub
pop
jno
addr16
dec
jbe
stos
dec
cwtl
mov
test
gs
nop
mov
bound
test
xor
scas
mov
jg
mov
and
mov
testl
sar
xor
cmp
push
mov
or
jle
neg
insl
jmp
xor
adc
mov
cmp
xchg
fnstsw
xchg
sahf
aam
testb
lahf
leave
arpl
inc
adc
aas
je
jecxz
or
sub
scas
int3
xchg
push
subl
push
ds
hlt
loopne
lret
cmp
fsubr
mov
xchg
je
inc
jae
sub
push
push
stos
loope
push
lcall
mov
sub
sub
and
adc
mov
shl
cmp
mov
mov
cmp
pop
xlat
fcomip
ret
or
mov
add
xchg
sub
inc
mov
stos
je
movsl
stos
xchg
adc
push
andb
enter
hlt
jb
clc
lods
fildll
fdivs
popf
rcrb
mov
and
jecxz
fisubrs
xchg
shl
lea
push
cli
popa
sub
xchg
mov
sub
xor
push
xor
loop
dec
lods
push
cltd
faddl
lods
mov
mov
push
lods
jae
xorl
xchg
inc
rclb
pop
inc
sbb
sti
lea
out
ljmp
fnsave
xor
aam
out
imul
jge
adc
int
sub
dec
das
in
out
test
cmpsb
pop
sahf
push
mov
std
pop
xor
rcrl
mov
cmp
mov
daa
pop
data16
nop
dec
fwait
xor
sub
jl
out
lret
stos
frndint
mov
jbe
cs
loop
adc
sbb
out
ret
push
xor
loope
dec
mov
mov
int
dec
loope
ja
pop
scas
in
push
add
in
adc
je
enter
inc
pop
hlt
xor
in
pop
add
or
movb
fwait
inc
sub
add
sub
sub
mov
mov
jns
lret
sbb
jge
pop
idivb
mov
aaa
loopne
lods
push
inc
hlt
mov
dec
pop
sub
scas
fisttps
adc
mov
arpl
loope
rcrl
aas
xchg
xor
sbb
rcll
aam
jno
aad
cmp
jo
and
push
ss
lcall
jne
sti
data16
data16
in
je
cmpsb
cmc
push
and
add
push
lds
ffreep
jmp
adc
call
sbb
inc
jg
sahf
lods
sysenter
fldenv
jae
pushf
push
cmp
or
push
cmp
mov
push
mov
mov
adc
adc
iret
stos
adc
popa
mov
xor
jmp
xchg
and
and
and
scas
ret
gs
fs
mov
cli
pusha
cli
or
test
jecxz
test
in
leave
cmpsl
aaa
hlt
shlb
scas
movsb
dec
push
div
shll
test
gs
cmpsl
cmc
mov
pop
sub
xchg
mov
mov
add
xchg
cmp
xchg
push
jle
pop
lods
inc
xor
call
popf
xchg
aam
out
shrl
mov
aas
movsl
mov
ss
jp
iret
and
gs
fwait
lock
iret
mov
push
or
mov
dec
lcall
xchg
ret
enter
movsb
mov
pop
mov
push
cmpsb
ret
jl
sbb
into
call
xor
lret
mov
add
insb
fnstenv
shl
ljmp
aam
shll
rcl
lcall
shlb
jg
pop
test
and
and
add
add
sbb
and
jno
lcall
mov
cmp
in
in
cmp
xchg
pop
hlt
les
add
test
lods
lds
and
aas
lcall
out
dec
ficomps
or
jae
adc
fcomip
adc
jbe
dec
and
shr
adc
or
and
fldl
movsl
mov
mov
xor
out
bound
aaa
inc
inc
nop
ljmp
cwtl
lea
sti
add
pusha
fdiv
repnz
fstp
or
add
lcall
and
push
inc
fwait
outsl
inc
fcoml
popa
insb
iret
in
mov
cmp
cwtl
inc
jb
xchg
push
adc
and
lea
push
inc
fmuls
dec
add
js
scas
xorl
sub
clc
jmp
mull
bswap
sub
test
shlb
xchg
imul
out
fists
cmp
loopne
xor
cli
mov
sub
xor
aad
xchg
push
stc
mov
repz
sarl
dec
inc
repz
pusha
loope
inc
aas
fldenv
pop
lds
cmp
out
bound
xchg
mov
dec
cltd
imul
sub
xor
xor
push
xor
jp
sub
and
inc
in
pop
pop
pop
mov
rcl
mov
dec
sbb
stos
and
adc
xorps
mov
test
gs
sbb
inc
aam
xchg
xchg
lods
push
ljmp
into
insl
jecxz
hlt
lret
enter
mov
sbb
jge
enter
mov
sub
int3
imulb
xor
dec
cwtl
xor
cli
sbb
mov
push
cwtd
sbb
aaa
cwtl
push
dec
aad
cmpsb
pop
outsb
pusha
mov
movsb
mov
inc
add
xchg
sbb
pop
call
popf
sbb
int
sbb
mov
ljmp
inc
and
xlat
adc
mov
fists
inc
xchg
mov
cmp
pop
fwait
nop
mov
mov
jge
lahf
cltd
cld
js
and
mov
push
js
aad
and
dec
in
lods
ret
mov
shlb
movsl
sti
jns
add
cmp
xor
cmp
int3
xor
xlat
nop
xor
pusha
xchg
adc
fcomp
scas
pop
rcr
js
pushf
xor
fwait
dec
jns
or
outsb
and
lahf
das
repnz
push
dec
scas
or
addr16
mov
int
nop
xchg
lahf
inc
call
push
pop
ror
adc
xorb
jmp
push
insb
or
test
xchg
jmp
mov
arpl
sti
pop
movsl
jmp
fs
into
pop
sar
in
xor
inc
or
cmp
xor
cld
jp
orb
mov
dec
xor
stos
popf
cld
in
arpl
or
out
aad
loop
mov
stos
sub
jp
sub
rol
sbb
mov
mov
addb
adc
jne
lret
cmpsb
dec
mov
push
inc
jb
sub
sbb
lahf
test
mov
dec
adc
mov
adc
ljmp
mov
mov
mov
subl
sub
dec
xor
fwait
cmp
in
mov
inc
sbb
sbb
push
lret
in
ficoml
rorb
fildll
sub
repz
imul
inc
andb
mov
and
in
out
push
dec
orb
pop
push
dec
cld
jbe
push
das
enter
inc
pop
outsl
push
cmp
stc
rclb
jecxz
leave
dec
cld
add
lahf
xchg
pop
dec
out
es
leave
addb
in
fcomps
jne
mov
cwtl
shll
jbe
shl
rclb
mov
adc
clc
sbb
fiaddl
xor
xor
add
mov
js
sbb
add
incl
mov
and
roll
xor
pop
sub
pop
popf
mov
jmp
out
lea
out
imul
outsb
aas
cmp
cmp
rcr
xchg
pop
pop
or
mov
out
fwait
cs
jo
cmc
xor
sbb
dec
cmpsb
mov
fadds
adc
pop
das
jge
xor
sbb
mov
fisubrs
push
sub
mov
cwtl
or
imul
mov
mov
add
or
xchg
sub
cs
lock
outsl
cmp
push
xor
inc
jb
sub
aad
push
outsl
out
in
dec
xchg
and
ljmp
sbb
pop
jecxz
and
cmpsb
imul
hlt
repz
xlat
std
xorl
sub
in
int3
hlt
mov
cmp
lahf
repnz
gs
icebp
xchg
inc
js
lds
push
rcrl
loope
repz
stos
cs
jecxz
adc
mov
mov
sbb
or
jb
loopne
ret
or
scas
inc
sub
push
enter
sbb
movsb
push
mov
aaa
xchg
adc
mov
cli
xchg
mov
in
jecxz
imul
push
call
outsb
mov
fistps
mov
fnsave
clc
pushf
mov
xchg
and
sbb
jae
lret
adcb
mov
cmp
inc
icebp
add
xchg
add
xchg
fldt
jl
mov
xchg
loope
mov
mov
das
or
jge
fwait
or
jb
or
scas
repnz
fwait
lret
jl
cwtl
iret
in
mov
dec
xchg
dec
out
ds
movsl
jnp
add
xchg
leave
adc
test
cmp
movsb
sub
jo
pop
inc
mov
sub
jg
sub
jg
xor
sub
mov
jg
imul
cmp
data16
cmp
xchg
lods
daa
dec
roll
mov
jmp
icebp
movsl
add
ror
mov
cmp
fwait
add
xchg
push
outsb
loope
cmp
cmp
ficomps
push
shr
pop
push
flds
push
push
int3
bound
outsb
lods
inc
outsl
or
test
adc
sbb
stos
ss
jnp
push
cmpsl
and
adc
fimull
xor
lret
xchg
or
lods
jae
loope
stc
rcrb
pop
xchg
cmpsb
jmp
lcall
sbb
xor
add
shll
out
mov
jne
movsl
cwtl
cmc
into
shlb
pop
lcall
loop
lret
sti
xlat
adc
sti
mov
push
ljmp
imulb
insb
fs
mov
in
mov
lahf
mov
out
cmp
xchg
fisubrl
dec
pushf
ja
pushf
fldl
repz
push
fs
mov
rclb
idivl
pop
adc
push
adc
sub
xchg
add
lret
lock
test
cmp
aas
outsl
sub
mov
sti
sbb
pop
pop
and
cmc
inc
or
lods
mov
test
arpl
and
jmp
jp
test
js
lret
lea
sbb
adc
mov
movsl
cmpb
jnp
inc
out
jnp
dec
jb
idivl
jl
aam
jg
jne
flds
out
jmp
mov
xor
push
das
cltd
xchg
js
jnp
xchg
xchg
inc
cli
push
clc
or
sahf
imul
sub
xlat
into
and
or
loope
push
adc
scas
push
repnz
inc
pop
scas
pop
cmc
mov
cmp
shlb
aas
mov
call
or
sahf
or
ret
adc
fiaddl
inc
inc
add
xor
in
in
fadds
aaa
jns
inc
mov
jo
cld
scas
jnp
inc
adc
dec
ljmp
push
cmp
imul
fdivl
or
mov
cmp
push
cmc
sti
js
inc
add
std
and
fisubl
mov
dec
and
inc
xor
mov
add
jmp
mov
insl
inc
aas
outsl
mov
out
sub
cmpsb
dec
ljmp
push
inc
sbb
lret
ficoms
lods
lret
jl
mov
sbb
in
jb
rcll
out
cmp
inc
sub
pop
loop
les
pop
push
pop
pop
dec
negl
shll
lock
push
push
or
dec
mov
push
scas
sets
loop
out
arpl
sbb
imul
inc
pop
xor
mov
iret
outsl
mov
adc
les
lock
mov
jl
in
mov
mov
out
adc
push
jbe
lret
mov
jle
pop
cwtl
arpl
fstps
stos
enter
out
shr
mov
cltd
inc
fsubrp
adc
inc
cmp
mov
test
lds
dec
jb
push
fwait
pop
movsb
es
dec
sbb
mov
pop
sbb
test
in
cmpsl
xchg
push
addr16
adc
je
mov
data16
jmp
mov
cmp
sbb
jbe
push
shr
cli
push
es
cld
stos
arpl
mov
cmpsb
cli
sbb
adc
out
divl
scas
imul
and
jmp
jmp
jle
push
mov
fldenv
loopne
adc
imul
mov
arpl
sbb
add
push
aaa
cmpsb
jmp
scas
sbb
insb
pop
popf
xlat
pop
cvtdq2ps
xchg
ret
pushf
fimuls
rolb
scas
data16
dec
push
ret
jb
mov
out
data16
idivl
xor
loop
mov
mov
rol
inc
or
push
cltd
clc
cmpsl
lock
cltd
and
pop
cmp
sarb
jp
pop
dec
mov
inc
rolb
adc
in
xor
inc
stc
mov
dec
mov
pusha
add
push
push
add
mov
mov
cmpb
dec
popa
outsb
fwait
dec
pop
sti
sub
and
add
cmpb
cltd
pop
rcrl
ret
mov
clc
lret
outsb
clc
lret
les
xchg
ficoml
gs
inc
js
pop
mov
dec
mov
inc
adc
popf
mov
dec
xchg
mov
add
daa
jns
jb
sarb
cmp
push
pop
scas
outsl
pop
fldl
sbb
scas
jb
into
lret
jbe
fdivs
jge
fistpl
out
mov
movsl
push
dec
xchg
add
notb
xor
xchg
mov
popf
dec
cmpsl
out
xchg
or
stos
rcrb
sbb
pop
jecxz
movsb
aam
es
dec
outsb
popa
scas
or
jne
sbb
cmp
pushf
add
es
xchg
pop
push
movsb
scas
add
and
jg
test
xor
xor
psraw
dec
aas
in
std
por
lahf
and
outsl
ret
or
sarl
test
test
imul
movsl
je
mov
inc
cmp
call
sbb
test
and
dec
js
push
mov
push
mov
clc
add
leave
mov
adc
sbb
adc
or
inc
orl
cwtl
xchg
fisubs
frstor
stos
mov
aaa
or
sub
jg
decl
loope
mov
xchg
dec
es
icebp
pop
push
jno
lds
fstl
push
jbe
pop
pushf
xlat
inc
ficomps
scas
mov
mov
push
dec
push
out
jne
jg
test
mov
lret
mov
imul
sub
leave
adc
scas
imul
cmp
js
test
xor
lods
in
or
popf
test
call
sub
xlat
cwtl
mov
and
enter
fdivl
ret
pop
cmp
xor
xor
repz
or
enter
es
add
mov
outsl
pop
mov
ficoml
ja
in
mov
outsb
js
jg
aad
in
lcall
fiadds
in
shrl
sub
xorb
pop
mov
jg
xchg
pop
lea
lods
xchg
ja
iret
mov
es
repz
and
add
arpl
pop
push
incl
push
addr16
popf
jmp
fidivrl
mov
jbe
jg
cmp
pop
mov
and
push
pop
jmp
add
ljmp
or
jl
fisubl
outsb
xor
cli
xchg
sbb
cmp
xor
mov
cmp
sbbb
bound
out
mov
mov
mov
xor
repz
sub
xchg
jl
jns
pop
cltd
add
push
fs
add
dec
subl
arpl
xchg
mov
inc
or
subl
sub
sarl
adc
ljmp
outsl
das
loope
jne
popf
adcb
add
fs
xchg
adc
lret
sbb
stos
into
jle
inc
mov
test
inc
push
jg
fstps
out
enter
sahf
into
sub
xchg
scas
leave
xchg
inc
push
mov
or
dec
mov
sti
sub
jecxz
mov
dec
std
fsubr
jns
xor
and
test
lods
xchg
cmpsb
in
sbb
in
dec
mov
jecxz
inc
add
cmp
in
ds
add
cmpsb
xor
les
int
cmc
lahf
ffreep
into
cmpsl
lds
push
mov
imul
inc
rorb
mov
or
mov
and
into
pusha
dec
jl
inc
sbb
inc
sarb
cmp
dec
test
aas
add
out
mov
sbb
and
cmpsb
push
jns
js
or
fnstsw
dec
inc
fwait
push
popa
jp
cs
jle
cmp
loop
xchg
sub
push
inc
push
dec
out
pop
mov
inc
inc
nop
pusha
mov
xor
mov
shrb
out
clc
adc
mov
mov
aam
cmpsb
sub
push
jmp
and
or
dec
jo
add
jo
inc
mov
movsb
into
ss
pop
je
and
xchg
ret
pop
pop
jae
cmc
inc
fstpt
push
sub
pop
repnz
fmuls
inc
xor
push
fistpl
test
cld
das
mov
push
inc
push
stos
mov
rorb
icebp
cmp
mov
and
xor
aam
fs
mov
cwtl
sti
mov
fwait
jno
in
mov
scas
jno
mov
ret
dec
add
and
xor
test
and
dec
mov
push
mov
cltd
iret
jl
mov
xchg
or
sbb
push
sbb
xchg
pushf
mov
ret
push
cmp
pop
sbb
inc
mov
push
inc
jnp
xchg
inc
or
ficomps
xorb
xchg
xchg
mov
ret
jnp
imul
mov
jl
xor
mov
lcall
subl
enter
shll
add
add
ffreep
dec
lcall
mov
fisttps
js
inc
mov
xlat
xchg
jae
xlat
js
loopne
adc
jnp
aad
scas
cwtl
stos
dec
adc
cltd
nop
or
fistpl
iret
dec
sbb
and
ja
jne
cmp
mov
pop
fmull
inc
roll
jge
push
popf
mov
mov
fisubrs
data16
jae
lret
out
int
and
adc
xchg
xchg
jo
mov
inc
sarb
push
mov
mov
data16
xchg
loope
xor
shlb
and
fs
lret
fisttpl
inc
push
push
or
fistps
jp
out
sbb
test
lret
int
fcmovbe
or
and
icebp
xchg
iret
push
add
mov
cmpsb
fisubl
cmpsl
leave
loop
jmp
lret
push
lret
sbb
shr
mov
cmp
fsubp
imul
in
sbb
sbb
scas
pushl
or
adc
jecxz
lds
sbb
push
pop
pop
mov
les
fdivrl
loop
push
jg
pop
add
push
cmc
mov
add
fmuls
fcom
dec
jae
lods
in
push
push
pop
dec
xchg
jp
add
adc
repz
aam
dec
popa
inc
push
sar
pop
outsb
out
iret
mov
aad
ret
test
sbb
mov
push
inc
jno
lea
int
xchg
fadd
aaa
push
out
push
icebp
xchg
jb
push
xchg
xchg
dec
push
fadds
out
in
pop
fisttpll
int
mov
dec
lea
pop
dec
cmp
iret
or
pop
fisttpll
int
mov
dec
lea
pop
dec
cmp
iret
or
jg
bswap
out
mov
lea
pop
dec
cmp
daa
or
inc
int
mov
iret
lea
pop
cmp
loop
repnz
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
enter
call
nop
mov
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
cmp
sbb
or
imul
add
mov
rclb
inc
out
pop
sbbb
inc
bound
arpl
out
jg
and
daa
aam
mov
dec
mov
sub
cld
hlt
mov
xchg
jle
imul
fstl
out
test
ljmp
xchg
stos
fwait
cmp
jnp
xchg
sub
addr16
icebp
or
aad
mov
xchg
pop
pop
sbb
lcall
insl
jb
dec
ja
mov
mov
in
repz
pop
mov
and
add
insb
shlb
adc
or
test
psubq
xor
mov
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
lods
jmp
mov
xchg
movl
cmp
sub
mov
movsb
mov
cli
in
mov
hlt
cmp
js
jb
pop
ljmp
jge
inc
adc
scas
aam
loopne
rcrb
aam
in
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
mov
gs
add
xor
cmp
mov
pop
cmp
push
clc
sarl
in
xor
or
add
movsl
mov
test
sti
xchg
and
leave
andl
adc
pusha
mov
pop
xchg
std
cmp
jnp
je
add
adc
mov
sbb
mov
jb
sub
add
insl
inc
and
popf
outsb
xor
fsubrl
popa
aaa
add
push
dec
lea
icebp
lret
push
sbb
jg
xor
aaa
movsl
out
popa
pop
insl
adc
inc
aaa
mov
cmpsl
fs
sbb
or
cwtl
mov
mov
in
pop
xor
stc
pushf
xor
and
scas
sub
fidivrl
std
cmp
stos
xor
mov
pop
adc
xorl
mov
cmc
mov
lock
push
pop
loop
pop
clc
test
jnp
lret
shl
xchg
jg
std
and
je
call
clc
inc
pop
adc
stos
sbb
xlat
pusha
lods
jl
gs
cli
lock
out
scas
mov
pop
jbe
add
cmpsl
popf
shrb
mov
push
sub
jmp
add
loope
mov
mov
sarl
dec
ja
jg
fsubl
or
cmpsb
test
lods
pop
inc
jae
repnz
mov
push
std
das
mov
mov
out
pop
ljmp
mov
call
push
pop
dec
or
mov
js
mov
ss
test
pop
pop
xor
cmpsl
push
jg
xor
js
inc
icebp
sbb
aam
jecxz
inc
and
xchg
leave
ret
dec
int3
add
mov
xlat
add
sbb
test
test
lea
mov
popf
mov
scas
pop
jo
roll
cmp
daa
push
and
ret
cmp
je
cltd
mov
dec
push
jne
dec
test
mov
push
movsl
ljmp
lods
sub
in
inc
inc
mov
sbb
jnp
pop
mov
sub
push
xor
in
pop
push
push
jb
fstpt
xchg
and
xor
test
scas
xchg
dec
jle
fs
test
lahf
lds
fyl2x
xor
cmp
jg
popf
cmp
test
icebp
call
lret
cmp
faddl
stc
push
sbb
aam
dec
pop
pop
xchg
mov
inc
inc
mov
lcall
out
mov
fadds
call
jne
out
jbe
sahf
jnp
mov
iret
mov
jp
mov
int
xchg
and
lret
mov
mov
fistl
cmc
inc
enter
add
xchg
scas
xchg
push
mul
gs
jecxz
ss
inc
mov
std
jle
nop
mov
sbb
stc
mov
push
pop
jo
das
imul
subl
aas
loope
push
pusha
add
xchg
fs
xchg
movsb
jmp
mov
lods
dec
push
jb
adc
outsb
dec
mov
test
mov
lods
int
imul
lret
ss
pop
mov
xchg
xor
xor
xchg
mov
and
jp
mov
mov
cmc
int3
mov
imul
cmp
leave
and
clc
ja
call
pop
mov
mov
jecxz,pn
int
adc
jmp
adc
lods
dec
inc
loop
xchg
cmpl
add
jne
adc
cmp
xlat
in
insl
inc
push
add
lods
sbb
xchg
lds
dec
cwtl
mov
jmp
jg
insb
and
outsl
sbb
jge
xlat
into
loope
xchg
fisubs
sub
xor
jp
sbb
cmp
cmc
ret
xor
lahf
ds
pusha
outsb
mov
rcrl
cmp
add
push
ljmp
rcr
cmp
mov
mov
and
pop
dec
lods
jl
push
mov
data16
or
mov
mov
stos
pop
jo
int3
jmp
shll
sbb
pop
and
lds
cwtl
test
out
fwait
inc
mov
cmp
or
xor
adc
cmp
daa
cltd
adc
test
jp
cmp
sbb
lret
adc
sub
sti
pop
jns
jp
xor
movsb
mov
adc
mov
jb
or
mov
jne
pushf
cmp
push
inc
inc
xor
enter
imul
ss
xor
imul
sbb
and
pop
bound
lcall
pop
ds
pop
or
js
je
xor
rcll
mov
pop
and
pop
clc
fdivs
sbb
pop
push
mov
or
outsb
stos
add
add
test
or
into
test
subl
sub
inc
mov
adc
sub
call
push
ret
mov
cmp
mov
mov
jae
cli
xor
xchg
add
sub
iret
cltd
mov
add
jp
aam
xor
jb
mov
xchg
mov
dec
cwtl
jno
ss
les
mov
cld
sub
pop
in
sub
add
pcmpeqd
les
pusha
test
insb
in
xchg
jbe
icebp
xchg
push
mov
inc
std
add
xor
mov
sbb
mov
out
jbe
std
lahf
ja
jmp
or
call
cld
cld
rcl
jl
pop
ja
xchg
cli
cli
fistps
mov
add
dec
enter
mov
lds
jne
sub
xchg
outsl
fiadds
addr16
jbe
mov
and
repnz
or
mov
mov
sbb
add
cli
dec
ja
mov
sti
adc
adc
push
fldl2e
or
gs
cmc
scas
adc
cmp
fcoml
out
push
in
pop
push
push
dec
lret
add
loope
stos
mov
fcom
xor
or
jo
divl
or
jge
fisttpll
sub
bnd
sbb
repnz
mov
hlt
sbb
push
xchg
into
jge
add
scas
test
rclb
repnz
repnz
ljmp
jge
xchg
mov
lret
adc
shrl
dec
jmp
pop
jbe
in
pop
pusha
push
setbe
rcrl
mov
popa
xchg
ret
in
fdivs
mov
and
les
and
xchg
xor
inc
test
adc
in
sti
xor
in
test
mov
xor
scas
mov
add
cmp
mov
clc
cwtl
cld
arpl
test
shrd
sub
pop
cs
addr16
fwait
test
clc
loope
lcall
xchg
sbb
enter
push
fwait
jo
loope
out
and
rcl
adc
cmpl
imul
dec
lcall
call
jle
clc
pop
pop
xor
pop
pop
jg
fcmovnbe
addl
mov
stos
lods
pop
adc
cmpsl
xlat
pop
repz
movsl
mov
push
sbb
xor
inc
push
push
mov
or
push
aam
add
aaa
negl
mov
lcall
iret
sahf
sbb
hlt
jo
lcall
gs
negb
mov
cmp
cmp
and
sbb
mov
jle
push
push
loope
psubsb
push
lcall
mov
std
and
aaa
cmc
mov
ret
push
mov
jmp
sub
pop
or
call
xlat
or
adc
hlt
add
cmp
pop
mov
stos
push
imul
ja
test
jne
mov
jo
push
out
and
adc
push
inc
or
and
push
mov
mov
cmp
dec
mov
ss
xchg
js
mov
add
dec
ljmp
xor
cmovp
xchg
mov
icebp
xchg
or
xor
xchg
lods
fisubrs
sbb
adc
pop
jmp
and
dec
xlat
les
cmpb
cmp
je
or
out
ljmp
outsb
mov
pushf
fadds
mov
aad
pop
inc
or
cwtl
xor
xor
dec
cmpsb
jmp
pop
loop
fbld
mov
and
add
sti
cli
mov
and
sti
int3
movsb
int
inc
inc
leave
xchg
cmpb
nop
push
pop
rcrb
scas
sub
xchg
inc
shrb
cmp
add
pop
arpl
lcall
mov
dec
stc
sub
cltd
sti
test
sub
sbb
popf
push
add
pop
xchg
bswap
sbb
push
xchg
xlat
jo
jb
gs
sub
inc
cltd
insl
inc
push
out
xchg
fnsave
jp
and
in
cmpsl
popa
sbb
aas
jp
loop
add
aas
xchg
push
cltd
and
adc
ja
xchg
xchg
xor
icebp
andl
xchg
mov
sbb
loopne
repz
aad
lret
shll
subl
mov
cs
mov
gs
xchg
jl
adc
push
rorl
cmc
cmpsb
in
jno
inc
jb
jmp
enter
mov
mov
or
jge
fsubr
scas
jp
testl
mov
js
mov
stos
xor
xorl
inc
icebp
dec
test
xchg
pop
ror
inc
repnz
sti
mov
jmp
call
lret
sub
xchg
cmp
mov
out
ljmp
in
dec
aam
cltd
jo
sahf
sub
jle
mov
shrb
mov
lods
fisubs
sbb
sahf
jae
xchg
mov
imul
sahf
iret
repz
std
stc
outsl
inc
jae
pop
inc
xor
ljmp
push
hlt
stos
stc
out
sbbb
test
cmp
cmpsb
cmp
jmp
ljmp
imul
aas
aas
push
pop
jmp
pop
mov
pushf
sarl
jg
cs
xchg
into
or
cmp
ljmp
out
or
add
push
daa
jb
pop
into
stos
repnz
jecxz
adc
movsb
jmp
stc
into
in
adc
jae
and
cmp
cmpsb
sbb
and
lods
bound
or
aad
lahf
out
ja
jle,pn
daa
mov
lock
ja
fsubr
jp
push
mov
jl
jmp
insl
pushf
inc
mov
fs
mov
mov
or
scas
or
mov
cmp
in
mov
xchg
and
cltd
stos
gs
add
pop
add
push
xlat
popa
mov
outsl
je
lcall
aas
mov
outsl
je
mov
adc
push
lahf
je
mov
stc
mov
mov
into
rorb
jecxz
mov
push
in
and
lods
jp
stc
cmp
fstpl
push
pop
jge
adc
mov
testb
sbb
sbb
scas
cmp
stos
sub
idiv
lret
mov
push
dec
mov
call
cld
xchg
mov
mov
leave
xchg
xor
add
push
mov
outsb
cmc
stos
test
out
jp
jle
inc
push
icebp
hlt
es
add
jb
insb
jge
in
into
xchg
and
or
addr16
cmp
sbb
cltd
jno
adc
cmp
mov
push
sub
and
cmp
adc
xor
aad
int3
stc
or
xor
test
mov
in
add
clc
push
lods
xor
into
adc
mov
pop
ss
pop
mov
push
sbb
add
adc
mov
push
push
xchg
das
loop
aaa
xor
dec
pop
add
mov
jge
imull
and
in
fmull
inc
mov
pop
inc
shlb
mov
fwait
mov
push
sbb
cmc
popa
adc
jge
in
cmp
add
out
movsb
loopne
adc
idiv
andb
pop
icebp
fnstcw
sub
mov
sbb
clc
pop
mov
aam
pusha
mov
pushf
aad
inc
push
movsb
or
sub
nop
or
xor
jne
je
scas
les
scas
fcom
outsl
or
in
or
inc
sti
push
fsubrs
xor
mov
rclb
in
ret
je
out
and
mov
jecxz
push
add
inc
pop
and
or
stos
outsb
cwtl
fisttpll
push
add
sahf
dec
sub
pop
adc
jecxz
ret
cmp
adc
push
jb
jae,pn
sbb
fldenv
add
add
or
sbb
push
mov
stos
inc
outsb
sbb
cmp
movsl
jl
fstps
jle
leave
pop
sub
sbb
mov
loop
xchg
das
xlat
and
push
and
pushl
dec
stos
lret
mov
gs
leave
or
mov
popf
movsb
jge
xor
in
mov
out
dec
int
ja
aam
in
les
leave
divl
jnp
push
insl
insl
lock
cs
into
fisubrs
sti
cld
adc
mov
outsl
lahf
in
sub
movsb
dec
sbb
mov
xchg
je
into
inc
out
fsubrp
in
cmp
hlt
popf
pop
out
sbbb
and
ljmp
mov
aas
sub
sub
scas
dec
ds
mov
popf
dec
pop
pushf
push
lret
cmp
nop
into
and
pop
std
in
push
adc
xor
mov
ss
aad
pop
inc
dec
fwait
add
movsl
fstpt
sbb
mov
aas
aas
jb
cmp
pop
test
lret
inc
push
ljmp
out
in
cld
sbb
test
xchg
or
cmp
lock
je
cld
popf
sbb
inc
jbe
scas
dec
leave
jecxz
xchg
shlb
ds
std
dec
mov
loopne
loop
pop
int
mov
orl
jl
outsl
cmp
scas
dec
dec
inc
pop
xor
or
inc
call
pop
inc
jbe
mov
pop
jg
lds
or
and
push
cli
nop
popf
movsl
xchg
add
jae
dec
pop
dec
push
iret
mov
xor
xlat
push
xchg
insb
mov
inc
adc
shrb
stc
mov
test
mov
or
sarb
lahf
jp
cmp
sbb
mov
lds
cmp
in
jmp
mov
xchg
lea
movd
iret
out
dec
cmp
enter
aaa
aam
pop
mov
pop
pop
daa
test
jl
mov
mov
fcoml
dec
bound
mov
pushf
or
inc
daa
jns
ljmp
fimull
adc
jbe
popa
pop
leave
scas
cmp
addl
les
clc
add
xchg
ss
jg
ret
adc
xor
xchg
lods
inc
les
push
mov
xor
jle,pt
loope
jne
flds
ficoml
push
sbb
das
out
add
mov
mov
jae
cmp
pop
aad
adc
std
push
adc
shll
jg
rclb
arpl
in
fdivr
sub
xchg
push
sub
push
xchg
push
test
jb
pop
lods
dec
jnp
sbb
lret
mov
mov
push
push
pop
or
inc
sbb
sbb
jmp
jo
cmp
and
add
push
inc
or
hlt
pop
inc
call
dec
push
sub
lcall
out
gs
cwtl
and
pop
insb
xchg
xor
sub
pop
pusha
pop
mov
cmp
icebp
jmp
push
mov
scas
cmpl
ret
dec
mov
pop
or
nop
xchg
and
popf
ret
into
add
sbb
xchg
int3
addr16
and
dec
push
add
mov
and
rclb
jb
adc
es
or
inc
jecxz
mov
cmpsl
sub
dec
nop
add
dec
jo,pn
hlt
fdivr
sbb
adc
adc
xchg
mov
adc
aam
cmp
mov
xchg
pop
jg
inc
lods
jmp
pop
lock
stos
ss
dec
rcrl
lret
test
lds
sbb
cmp
mov
das
aad
mov
sbb
loope
mov
xor
xchg
mov
mov
mov
mov
push
dec
sahf
fcoml
push
cld
lret
out
fcoms
adc
lcall
jns
in
lods
aam
add
xchg
mov
pusha
fmull
out
fidivrs
xchg
aaa
cmp
xchg
jmp
mov
stos
call
adc
sahf
fcmovnbe
xchg
bound
test
rorb
sti
dec
sbb
pop
ss
dec
shlb
loope
in
sbb
mov
test
xor
fadds
out
pop
cmp
cld
and
rcrl
hlt
jmp
test
lea
rcl
mov
add
cmpsl
inc
mov
mov
and
popf
out
sbb
cmc
sub
mov
cmc
dec
lret
imul
xchg
sbb
aas
sbb
add
aad
lret
jge
sub
xchg
rorl
inc
mov
xchg
sbb
iret
sbbb
push
in
fnstenv
mov
xchg
andl
jl
cld
fwait
pmaxsw
or
je
mov
test
add
sub
hlt
pop
cmp
lret
mov
es
test
dec
mov
in
test
mov
movsl
mov
das
push
jno
cmp
jo
arpl
ljmp
cmpsb
cwtl
jns
mov
add
popa
cmp
sbb
sbb
stc
popf
arpl
test
ja
sub
mov
cmp
mov
push
loopne
pop
negb
je
mov
fbld
xchg
imul
jg
push
sbb
cli
lret
jl
pop
stos
xchg
scas
popf
inc
jp
sbb
push
cmp
mov
call
scas
inc
adc
loopne
jno
inc
popa
or
lcall
mov
xor
adc
push
ljmp
mov
mov
lret
fisubl
icebp
xor
xorl
pushf
xchg
mov
inc
jns
and
pop
mov
lds
notb
mov
jg
mov
jae
cltd
xor
inc
inc
xor
mov
xchg
add
inc
cmp
stos
js
push
fs
inc
lcall
cs
inc
sbb
cmpl
aaa
push
pop
mov
ja
insl
xchg
push
lock
iret
mov
fidivrs
testl
sub
inc
or
jmp
dec
scas
sbb
mov
addr16
lahf
push
lds
imul
jno
andl
pop
lcall
les
mov
xorb
or
test
jmp
jl
xchg
mov
xchg
mov
ret
mov
adc
repz
fwait
mov
imul
jecxz
adc
jmp
lock
mov
push
add
sbb
cmpsl
into
pop
inc
into
pop
add
outsb
xchg
dec
pop
test
xchg
mov
arpl
adc
push
xchg
jb
mov
pavgw
add
or
xor
mov
xchg
shrb
rcrl
pop
mov
daa
pop
out
jbe
sbbb
mov
mov
scas
jnp
cmpsb
pop
sub
xchg
dec
lock
les
push
xlat
push
loop
and
lcall
mov
cwtl
sub
sub
jp
in
pop
add
pushf
setl
adc
and
inc
ss
cmp
dec
dec
into
neg
push
hlt
sbb
pop
push
mov
lcall
clc
ficomps
mov
cmp
xchg
cmpsb
push
xorl
loope
cmp
xor
lret
xor
push
and
adc
jecxz
mov
sbb
mov
test
sbb
loop
iret
cmpsb
mov
or
xor
dec
sub
sbb
mov
fisubrl
aaa
sbb
cmp
add
cs
jecxz
addr16
iret
movsb
shll
das
pushf
pusha
aam
js
das
adc
outsb
mov
outsl
mov
push
xchg
push
push
lds
je
mov
sbb
xchg
mov
pop
sub
loop
icebp
fwait
and
sarb
cmp
jne
push
mov
dec
sbb
bound
mov
call
xor
sub
and
lock
paddb
and
rcrb
into
into
xlat
pop
sti
lea
stc
lcall
add
mov
in
les
cmpsl
lea
out
lret
test
es
cmp
mov
lcall
add
std
mov
push
jmp
jl
cmpsb
mov
cli
fiaddl
or
push
insb
xchg
ret
pop
or
add
pop
fidivrs
mov
std
daa
jbe
cmpsl
fdivrs
lods
lea
hlt
mov
ja
mov
outsb
pop
push
mov
movsl
and
mov
fisubrs
lock
cmc
enter
sub
dec
ret
das
lods
push
cmc
cmp
xlat
push
push
cwtl
repnz
pop
sbb
inc
adc
and
aas
xor
cmp
inc
pusha
and
push
mov
loop
mov
fisttpll
mov
jge
repnz
aad
jnp
xchg
xlat
movsl
clc
mov
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
or
push
sub
enter
call
les
or
and
inc
jg
nop
stos
rcrb
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
dec
lods
jnp
imul
scas
push
or
sbb
jmp
fwait
pop
mov
stos
mov
dec
lods
jnp
imul
fmull
in
cmp
push
or
sbb
sub
cmp
mov
pop
mov
stos
mov
dec
lods
jnp
imul
fmull
in
cmp
sub
aas
call
dec
iret
xor
sbb
adc
shrl
clc
add
push
push
out
add
insl
cmp
mov
or
sbb
les
pop
ret
lock
inc
out
xor
fmull
icebp
scas
cltd
xor
out
ret
mov
pop
inc
cmp
xchg
inc
stos
adc
insl
inc
adc
jle
lea
sub
cld
mov
or
jl
mov
pushf
outsl
push
mov
or
cld
aad
and
xor
jg
or
mov
stos
jae
jl
dec
sub
xchg
xchg
faddl
in
dec
xchg
enter
mov
arpl
outsl
imul
push
sbb
ret
popa
xor
outsb
pop
lret
roll
adc
sbb
rcr
sub
pushf
dec
lods
jnp
imul
fmull
in
cmp
sub
sbb
sub
cmp
dec
fwait
pop
mov
ret
call
imul
scas
bound
mov
inc
lahf
dec
fcomps
ret
jmp
push
shrb
ja
inc
xchg
push
scas
dec
imul
xor
jmp
or
push
xorb
sub
sbb
sub
cmp
dec
fwait
pop
mov
stos
mov
dec
lods
jnp
imul
fmull
in
cmp
sub
sbb
sub
cmp
dec
fwait
pop
mov
stos
mov
and
xchg
xchg
test
mov
rclb
bound
mov
xor
ljmp
imul
in
xor
call
add
jne
mov
shl
movl
pop
sahf
leave
jg
inc
imul
test
cltd
insb
cltd
cmp
test
cmp
xchg
cmp
insb
mov
test
imul
daa
xor
cmp
fistl
popa
pop
sti
mov
fsts
fmull
fucomip
xlat
js
push
test
push
stc
xchg
and
gs
insb
outsb
pop
ret
xorl
mov
int3
pop
loope
push
into
mov
push
xchg
popf
push
lahf
xchg
out
adc
add
jne
mov
add
mov
fistpll
or
jecxz
mov
jns
sbb
adc
and
sbb
mov
jae
xchg
mov
rolb
and
mov
jle
jle
lcall
fmull
fistps
out
inc
xor
stos
arpl
je
mov
push
and
mov
jp
xor
push
scas
jo
enter
add
mov
test
xor
fnstsw
mov
add
data16
lea
es
jl
push
addr16
inc
or
xor
lret
cmp
sti
mov
loopne
mov
popa
pop
sub
cmp
shlb
xchg
outsl
mov
cld
mul
insb
fdivrl
xchg
pop
mov
jg
xor
inc
push
push
pop
mov
fldl
pop
cmp
mov
jns
mov
push
mov
xchg
add
out
nop
arpl
in
adc
cmc
mov
jmp
bound
shrl
scas
pop
outsb
mov
jae
cwtl
popa
cli
or
adc
push
dec
sbb
rorb
dec
lret
clc
xor
loopne
mov
inc
dec
cmpsl
sub
rcl
mov
mov
push
cmpsb
arpl
xor
dec
out
push
and
push
xchg
inc
int3
scas
sub
mov
or
out
mov
loope
xor
sub
cld
outsb
sbb
push
fcmovb
int3
stos
inc
push
cli
jno
fimull
cmp
rcrl
fdivl
inc
filds
out
inc
jo
idivl
jno
xor
outsb
pushf
sbb
and
mov
pop
loope
lcall
scas
push
push
adc
jmp
callw
out
push
fisubrl
fsubl
outsb
icebp
fldt
fimull
mov
sbb
aam
lods
scas
sub
push
jecxz
jae
loope
inc
cld
jne
aad
mov
xchg
mov
addr16
inc
test
scas
mov
fs
es
mov
lods
loopne
pop
xchg
pop
push
jecxz
push
inc
ds
xchg
xor
dec
cmpl
addb
pop
lret
pop
cmc
mov
sbb
loope
sar
pop
mov
outsl
and
push
pop
or
jnp
jg
lock
adc
arpl
popa
dec
sti
cwtl
bnd
jbe
inc
insl
xor
or
add
ret
loop
mov
mov
xor
jmp
or
shrl
aad
cltd
sbb
xchg
decl
pop
push
hlt
mov
xchg
ret
push
sub
xor
mov
mov
lret
rorb
and
mov
push
stc
mov
push
sbb
inc
sbb
push
in
mov
jl
int3
jnp
jl
clc
out
mov
lcall
cmpsb
and
sbb
popf
enter
pop
inc
rorb
shrl
xor
rorl
dec
or
fimuls
pop
nop
sti
or
stc
into
jmp
xor
or
push
xchg
pop
lcall
mov
push
and
shrl
jns
stc
imul
xor
inc
mov
dec
sub
jb
rcrb
ds
jl
pop
sub
fstl
push
mov
inc
jns
cmc
scas
gs
add
mov
and
loope
or
pop
sarl
or
mov
hlt
fiaddl
mov
movsl
sbb
mov
mov
cmp
inc
lahf
outsb
pop
mov
sahf
lods
xlat
cwtl
iret
dec
jns
div
xor
xchg
cmc
insb
jg
rolb
mov
mov
gs
adc
mov
rclb
pop
or
sub
cmc
sbb
gs
sub
add
jecxz
out
in
jl
ljmp
out
imul
stos
push
push
mov
jg
cmp
mov
mov
dec
aam
adc
decl
sti
stc
add
fldcw
cmp
jge
enter
in
jne
mov
cmpsb
jne
stos
sub
pop
adc
cmp
leave
add
push
test
push
sbb
ljmp
into
inc
jp
lcall
push
es
ljmp
jno
movsl
pop
ret
mov
movsl
pop
push
ret
pop
out
movsl
mov
loop
aas
xorl
shl
ja
add
add
pop
mov
xor
sub
cmp
push
data16
pop
rorb
enter
insl
lds
and
cmc
fsubp
test
out
dec
push
xchg
add
pop
pavgw
cmp
out
stos
push
nop
xor
cmp
cld
repz
sahf
stos
addr16
stc
pop
mov
inc
lret
cmp
xor
jle
ret
mov
cmc
mov
inc
stos
sbb
mov
das
lods
adc
xchg
cmp
idivl
jp
loop
cltd
pop
cmp
cmp
pop
rorb
sbb
or
mov
dec
and
jl
dec
mov
pop
sbb
cmp
cmp
and
popa
cmp
adc
push
xor
push
mov
inc
xchg
dec
outsb
sub
lods
lret
inc
call
or
pop
xchg
inc
fcmovnu
mov
pop
daa
cmp
ret
mov
ss
mov
outsl
iret
repz
leave
mov
jl
les
lcall
arpl
aam
stos
test
xor
pusha
adc
in
and
xor
ss
lds
or
xor
nop
das
test
push
and
in
out
pusha
ss
add
mov
les
inc
push
jne
in
jo
jnp
push
imul
dec
pushf
add
add
mov
xor
cmp
pop
std
pop
imul
mov
jecxz
pop
mov
mov
xchg
data16
or
ret
dec
or
fsubs
das
inc
jno
cltd
inc
cmc
pop
imul
push
xor
sbb
fcomps
cmc
loop
loop
aad
cmp
mov
mov
das
inc
imul
mov
fmuls
fistl
scas
push
lods
cld
jns
scas
mov
movsl
int
test
ss
inc
push
jnp
inc
imull
cwtl
push
lret
adc
addb
mov
cmpsb
aaa
push
inc
add
into
cmp
mov
test
jns
xchg
inc
xchg
insl
mov
adc
or
int3
int3
mov
out
ret
xor
dec
sar
xchg
cmp
js
cmpsb
ljmp
jo
and
xchg
add
loop
push
sahf
xor
in
jbe
mov
add
push
push
scas
sbb
sub
test
mov
push
dec
xchg
ljmp
and
fsubrl
push
cmp
or
sbb
scas
aad
ds
sbb
mov
lret
flds
jo
mov
cmp
jo
lret
ret
xor
xor
mov
mov
xchg
nop
lock
lods
outsl
enter
xchg
or
push
jae
mov
dec
push
sahf
lock
sbb
or
jecxz
cmc
pop
sbb
ja
sub
sbb
popf
shll
repz
mov
mov
push
push
test
int3
pop
pushf
xchg
bts
jmp
mov
pop
sbb
xchg
jle
adc
test
xlat
ret
ss
pop
pop
push
shrl
xchg
adc
mov
shll
sbb
fldt
jg
sbb
fs
sub
in
lahf
mov
shll
xchg
pop
sub
loopne
dec
jo
rcrb
hlt
shll
cs
loope
shrl
inc
xor
das
pop
jnp
sarl
popa
out
ja
lahf
cli
loop
pop
stos
pop
repz
push
pop
popf
push
push
push
cmp
xchg
mov
inc
out
push
std
push
pop
ffree
shr
push
add
xlat
cltd
pop
pop
mov
or
flds
fmuls
xor
mov
inc
in
fimull
or
push
inc
pop
stos
sub
clc
dec
push
outsl
mov
sbb
jo
push
stc
popa
sbb
fmull
aas
xor
push
dec
aad
pop
xorl
fmuls
lret
call
mov
or
in
xchg
mov
popf
pop
adc
int
xchg
daa
or
jg
add
add
push
fsub
popa
cmp
inc
xor
pop
ret
gs
add
test
shrl
fisubs
or
clc
xor
mov
push
movsb
mov
les
sbb
adc
push
pop
scas
call
add
xlat
stc
xchg
ret
ds
sbb
int
sbb
scas
and
das
mov
xchg
inc
sbb
sbb
mov
and
mov
adc
push
into
mov
repnz
loopne
inc
jl
fsts
cltd
cmovne
lds
xor
cwtl
rcrb
cmpsl
xchg
je
jle
push
jecxz
push
popa
sub
inc
xor
pushf
sub
cltd
neg
outsl
push
sbb
roll
cmc
xor
rolb
mov
mov
int3
repz
dec
sbb
fld1
in
or
push
lods
add
rcrl
inc
and
aas
sub
dec
fdivrs
cli
and
dec
lods
mov
jmp
dec
daa
sbb
mov
loopne
notl
mov
scas
imul
inc
jle
pop
leave
dec
jge
or
and
jae,pt
out
aas
xor
scas
push
int
pop
pushf
adc
testl
into
adcb
ljmp
rcll
sub
add
gs
sbb
stos
jo
scas
insb
pop
sub
xor
pop
cmpsl
iret
xor
leave
ja
repnz
dec
mov
push
inc
sbb
mov
shrb
pop
xchg
sub
or
arpl
sbb
test
mov
adc
push
pop
lret
pop
mov
les
pop
cltd
xchg
movsl
aad
push
xchg
mov
ja
stc
popl
xlat
fs
mov
xchg
mov
dec
cmp
lock
mov
pop
cmpsl
shll
loope
daa
imul
ja
int
cmp
or
dec
les
or
outsb
jo
pop
sub
sbb
push
jg
inc
push
mov
daa
mov
or
inc
test
out
ficompl
adc
pushf
mov
into
aaa
sub
or
or
push
nop
movsl
mov
cmpsb
mov
add
push
inc
mov
cmp
insl
in
push
cmp
mov
cmpsb
mov
rolb
fdivrl
mov
mov
adc
add
dec
xchg
inc
lods
jecxz
aam
jbe
mov
and
cmp
xor
or
lea
dec
clc
cltd
std
bnd
lret
push
mov
xor
cmpsl
hlt
jbe
iret
cmpsb
jg
js
in
xchg
sarb
jbe
insl
or
dec
mov
daa
add
stos
push
in
scas
loopne
or
mov
imul
fisubrl
add
divb
imul
jmp
cli
sahf
bound
push
pop
xchg
inc
lods
pushf
loope
and
cmp
lcall
and
inc
sub
xor
cmpsb
out
add
inc
mov
out
enter
or
push
adc
xchg
jl
push
movsl
mov
std
addb
sub
or
push
push
inc
test
sbb
ret
aaa
or
je
jge
sbb
hlt
cwtl
pop
rcl
loope
subl
cmp
lret
scas
mov
cmp
lock
dec
stc
lahf
nop
inc
xchg
fimull
loop
test
jns
out
sbb
ja
repz
mov
cld
aam
cmp
pop
data16
fiadds
adc
call
inc
jecxz,pn
lcall
add
shld
pop
adc
jnp
jl
inc
fs
jb
jb
fildl
inc
xchg
cmc
outsl
mov
shll
mov
cmp
imul
pusha
sbb
xchg
jo
lods
inc
mov
xlat
popa
mov
hlt
xchg
test
fstl
stos
or
loope
lock
fildl
push
dec
cmp
push
outsl
test
jno
sbb
out
ja
mov
cs
popf
in
stos
cwtl
push
sti
pop
testb
mov
cmp
xchg
sti
add
inc
fnstcw
gs
ds
mov
ret
fwait
lahf
into
jne
adc
xor
cmp
scas
mov
mov
mov
push
popa
mov
test
in
mov
aas
jl
ret
xchg
push
mov
orb
adc
mov
mov
or
sub
jg
inc
xchg
cld
ss
jne
sub
data16
std
jo
js
sbb
mov
aad
pop
arpl
lret
outsb
adc
fisttpll
pop
xlat
iret
in
mov
cmp
fbstp
push
push
pop
pop
cwtl
shlb
mov
iret
cmp
loop
fsubs
mov
sub
pop
js
addl
dec
adc
lods
xlat
cmc
stos
xchg
sti
and
ret
jno
mov
out
jle
lods
nop
fdivrl
pusha
mov
outsb
push
outsl
xchg
push
movsb
je
inc
mov
and
xorl
mov
push
sbb
dec
adc
rep
fsub
jle
or
xchg
lcall
jg
fidivrs
cld
dec
aas
adc
stos
pusha
and
and
mov
pop
inc
or
jb
ja
test
add
int3
inc
imull
and
sbb
sbb
in
dec
out
adc
repz
mov
lret
xchg
outsb
bound
sub
pop
mov
add
push
fisttpl
outsl
daa
xchg
jg
outsb
jl
outsl
mov
mov
daa
roll
sti
pop
push
cmp
popf
mov
xchg
jne
sahf
mov
inc
sbb
cli
dec
scas
je
cmp
in
sbb
addr16
and
fiaddl
lods
cli
jge
pop
icebp
mov
push
rcll
flds
sub
sahf
inc
test
les
pop
add
push
bound
mov
insb
ret
outsb
mov
ds
inc
sti
hlt
outsb
enter
mov
aas
jmp
sbb
push
jnp
scas
orb
out
and
movsb
push
or
in
negl
add
mov
leave
movsb
jno
insb
mov
call
movsl
dec
lret
push
repnz
test
aam
out
inc
jl
fwait
lcall
es
sti
icebp
and
and
pop
call
sub
push
movsl
mov
stos
cmpsb
xor
nop
shrl
mov
inc
out
lcall
or
into
cld
enter
dec
push
test
sub
or
sub
mov
push
fcmovnb
stos
add
xor
xchg
xchg
and
sub
outsb
in
data16
lcall
add
or
repnz
pop
fisubrs
das
test
mov
sahf
std
fstl
and
inc
add
pop
sub
fs
xchg
daa
lods
mov
xor
sub
sbb
add
xchg
test
xor
push
js
insb
dec
xchg
test
adc
cmp
jle
cmp
adc
int3
pop
in
out
xor
sbb
xchg
mov
xlat
cmpsl
cld
icebp
in
sbb
lock
mov
jne
pop
xor
ret
les
out
in
push
cmpsl
into
nop
testb
xchg
sarl
icebp
out
aad
mov
enter
xchg
rcrl
sub
shlb
icebp
push
int3
test
loop
or
popf
sahf
aas
rcrb
int3
mov
xchg
sbb
cmpsl
shr
sbb
jae
orb
xchg
or
push
pop
outsb
and
icebp
xchg
sarl
inc
cli
sbb
sub
dec
jo
jl
inc
dec
mov
in
outsl
int
je
test
addr16
insl
lahf
mov
xor
pop
fwait
push
sub
lea
mov
in
test
mov
jno
fwait
cli
jmp
push
push
inc
popa
xchg
inc
outsl
arpl
pop
xor
addl
and
in
lods
lea
pop
sub
mov
std
push
into
leave
stos
cmp
dec
mov
dec
dec
lods
sub
fs
cmpsl
xchg
repz
pushf
lods
in
xchg
movl
nop
int3
pop
into
adc
xchg
rolb
sbb
addl
lcall
cmpsb
mov
and
stos
jb
ret
jl
adcb
and
inc
lret
xchg
mov
sub
jmp
addr16
and
js
stos
xor
das
inc
jl
jns
xchg
sub
adc
inc
sbb
fnstcw
fdiv
pop
push
out
xchg
test
sbb
adc
inc
adc
jae
test
and
cs
push
pop
pop
divl
repnz
adc
lods
and
dec
xor
in
push
shrl
out
insl
hlt
pop
pop
leave
jle
insl
and
mov
rcll
xor
loop
pop
xchg
jns
or
push
orb
cli
test
outsl
push
and
mov
repnz
cld
push
aas
mov
jg
fwait
adc
insl
mov
into
sub
cmp
jns
rcll
outsb
adc
sbb
jmp
sahf
in
sbb
hlt
adc
imul
pop
mov
or
push
insb
and
shll
femms
or
gs
sarb
mov
dec
and
daa
or
pop
call
adc
cld
test
cmp
fadds
stc
sub
fistpl
push
cmc
popa
into
sub
jne
inc
leave
rorb
inc
cs
out
mov
sbb
lds
cmp
stos
into
popf
mov
cmpsb
ljmp
jmp
callw
cltd
xor
pop
push
mov
mov
movsl
pushf
sub
xchg
loopne
sbb
add
xchg
bnd
add
dec
jno
ja
adc
icebp
xchg
jmp
jnp
pop
lods
fdivrl
daa
add
mov
xor
out
sbb
jno
cli
adc
in
and
xchg
es
push
fnstcw
leave
or
dec
cmp
jno
rorl
fisttpll
iret
pop
insb
lock
ror
fwait
mov
inc
pushf
cld
xor
jb
fildll
dec
sbb
add
or
ds
das
sbb
dec
xchg
xchg
pop
gs
pop
and
daa
movsl
or
cld
mov
mov
outsb
xchg
lahf
inc
dec
mov
loopne
adc
mov
subb
inc
sar
push
repz
jne
jp
pop
pushf
xor
sub
in
mov
scas
push
lods
jmp
jne
adc
fmull
and
cmc
add
push
leave
jp
fistl
pop
mov
jl
sub
xor
mov
pop
stos
dec
cmp
imul
lcall
int
adc
and
loope
cmp
mov
mov
adc
jmp
imul
ljmp
xorl
mov
test
push
fdivp
addr16
pop
ret
pop
scas
xchg
dec
inc
cmp
icebp
mov
mov
iret
pcmpgtd
sbb
jle,pt
dec
or
in
js
mov
pop
mov
lret
sbb
repz
push
inc
movsb
and
xor
loope
xchg
scas
out
loope
out
out
ds
add
test
test
clc
push
add
push
ret
push
mov
and
push
push
mov
mov
xor
jne
outsl
jg
cli
shll
movsl
mov
mov
mov
jp
push
stos
mov
lods
and
psrlq
jmp
popf
push
push
and
or
inc
stc
sub
inc
mov
jmp
mov
xor
inc
mov
das
or
mov
xor
in
xchg
adcb
lds
lods
cmpsb
lods
cli
in
or
addr16
loop
add
loopne
add
mov
sar
push
or
cld
jl
nop
mov
jns
in
add
inc
scas
xor
xchg
push
mov
adc
and
das
aas
stos
adc
rol
dec
mov
in
fwait
cmp
enter
dec
das
and
jge
mov
je
ficoms
ljmp
push
xchg
mov
dec
mov
es
push
mov
pop
dec
rorl
sbb
cmp
out
ds
rcrb
add
idivl
cmc
jnp
sti
arpl
mov
lods
sbb
fsts
andl
loop
mov
pop
dec
push
rol
mov
sub
mov
imul
fmull
in
cmp
sub
sbb
sub
cmp
dec
fwait
pop
mov
stos
mov
dec
lods
jnp
imul
fmull
in
cmp
sub
sbb
sub
cmp
dec
fwait
pop
mov
stos
mov
dec
sub
mov
or
cmp
fistpl
sub
cmp
dec
fwait
pop
mov
stos
mov
dec
lods
jnp
imul
fmull
in
cmp
sub
sbb
xchg
cmp
cmp
sub
sbb
or
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
adc
dec
xor
push
sbb
sub
push
insb
sub
cli
mov
mov
stos
loope
adc
dec
xor
push
sbb
jno
popa
dec
sbb
scas
ljmp
loope
or
dec
sub
push
sbb
imul
mov
test
fsubrl
fnstsw
outsb
cmp
sub
add
cmpsb
das
pop
pop
jp
cmp
sar
inc
shrb
pop
pop
dec
adc
xchg
mov
mov
dec
add
rcl
icebp
add
sti
out
dec
std
mov
test
lods
xchg
push
loope
jmp
mov
sub
shll
mov
aaa
loope
adc
adc
outsl
add
or
xorb
mov
push
iret
loope
inc
lcall
scas
xchg
pop
in
imul
mov
push
ljmp
icebp
dec
stc
add
pop
jbe
fisubs
push
inc
addl
icebp
adc
icebp
mov
sbb
jp
push
sbb
jno
js
mov
cltd
lret
mov
mov
mov
xor
sub
pop
daa
jle
pop
popa
pop
xchg
stos
in
rol
test
movsb
int
enter
ss
es
xor
cmp
insl
xor
mov
loopne
sar
stos
sbb
filds
sbb
dec
adc
sub
jno
popa
sub
cli
mov
mov
mov
add
jp
push
sbb
jno
popa
sub
cli
mov
mov
mov
bound
out
inc
movsl
push
push
mov
mov
fldt
adc
mov
mov
loop
inc
xchg
rorb
int
add
dec
xchg
rcl
and
out
pushf
adc
jno
jle
push
add
hlt
jmp
loop
or
ljmp
pop
out
imul
cwtl
jmp
fstl
xchg
cli
inc
mov
outsb
fisubrl
push
popa
mov
push
xor
jae
stc
or
shrb
add
add
das
sti
mov
xor
aaa
pushl
das
or
cmp
lds
mov
xor
lods
push
pop
mov
push
fadds
out
adc
pop
popf
jmp
jbe
push
aad
sub
stos
xchg
jae
add
imul
sub
push
xchg
sbb
pop
pusha
jge
add
movsl
ret
push
jne
dec
sub
push
cwtl
out
shlb
sbb
xchg
daa
fcoml
mov
out
pop
jns
mov
mov
ror
pop
mov
jmp
mov
popf
add
in
jnp
loopne
xchg
and
mov
lret
pop
pop
push
push
arpl
xchg
mov
scas
jge
shlb
sbb
mov
adc
or
cwtl
cmp
jp
fdivrs
xchg
jp
jg
inc
cmpsb
push
out
test
sysret
ret
jle
cmp
outsb
mov
xchg
shll
pop
dec
jbe
aas
lret
mov
add
or
js
push
lea
xchg
int3
movsb
jo
stos
xchg
adc
loop
cmp
dec
sbb
xchg
xchg
movsb
scas
inc
add
leave
mov
rcrl
jp
cs
imul
std
fs
ret
adc
mov
stos
das
enter
outsb
xchg
nop
and
and
sub
mov
adc
push
popa
add
add
mov
popf
sub
jo
in
outsb
or
js
scas
xchg
mov
lods
xor
imul
stc
sti
cmp
sub
stos
lds
outsl
seta
loopne
js
pop
stc
push
mov
xor
addl
xchg
jbe
jae
push
into
dec
sahf
push
xchg
jne
lods
inc
mov
sti
andl
icebp
pop
mov
shrb
out
push
mov
sbb
popa
shll
sbb
test
sbbb
pop
adc
orb
dec
mov
sbb
arpl
stos
and
jns
test
es
pushf
add
and
add
cs
pop
xchg
shlb
mov
adc
pop
xchg
mov
cmovo
cwtl
mov
inc
pop
fidivs
push
lret
mov
push
and
or
jnp
popa
int3
out
sbb
inc
fcomps
int3
bound
sbb
sti
mov
jge
in
pop
es
adc
sbb
test
fs
push
ror
fmuls
mov
cs
jnp
into
into
les
and
cmp
add
insl
fnstenv
sbb
push
fidivrl
inc
and
loop
cmc
dec
sahf
xorl
jecxz
cwtl
mov
imul
popa
ret
lahf
pop
mov
cmpsb
and
xchg
test
lret
sbb
fsts
out
lcall
or
popf
hlt
inc
mov
cld
xchg
scas
cmp
push
jae
sbb
mov
add
adc
xor
test
push
ss
aad
cmpsl
addr16
lahf
mov
and
mov
mov
enter
cmp
out
orb
idivb
jae
inc
mov
fwait
rclb
push
jnp
pusha
adcb
into
sub
call
inc
dec
fisubrl
pushf
jbe
mov
jb
xor
xor
push
sete
cmp
pop
jle
jne
mov
sbb
cmpl
andl
fstpl
scas
test
inc
pusha
fistpll
loop
push
pop
cli
push
mov
cmp
les
push
jnp
adc
ss
mov
mov
pop
lret
repnz
adcl
mov
adcb
mull
sbb
insl
jl
xlat
gs
dec
push
mov
jo
sub
jp
inc
lret
mov
outsl
dec
xor
adc
cltd
lcall
dec
addl
in
jns
hlt
movsb
test
push
pop
shl
sti
inc
leave
pop
jbe
bound
push
xor
sub
icebp
and
xchg
loop
jmp
out
mov
xchg
xor
xor
out
sbb
leave
xor
fldenv
sbb
bound
xchg
repz
adc
mov
mov
push
sar
test
out
mov
cmp
cmp
xor
xchg
enter
push
mov
jbe
cmpl
inc
int
push
roll
call
push
mov
outsb
jmp
repnz
xchg
jp
mov
leave
call
dec
sub
lcall
push
xchg
cmp
push
jo
shrl
mov
addr16
xchg
js
jp
subb
dec
aas
inc
mov
imul
fistpl
out
inc
sub
push
pushf
and
push
lods
stos
cmpsb
sub
out
pop
jmp
outsb
adc
xor
dec
sbb
sub
cwtl
lcall
inc
pop
sbb
sub
push
pusha
loop
mov
mov
sub
outsl
or
xchg
lcall
out
inc
mov
mov
cmp
pop
cmpb
and
mov
adc
hlt
push
daa
clc
mov
push
mov
ljmp
pusha
das
cwtl
xchg
mov
shlb
cmp
enter
lcall
insb
test
dec
pop
lcall
xchg
sub
adc
out
imul
loop
aad
mov
in
adc
cmp
subl
and
mov
scas
test
and
pushf
out
ljmp
ret
mulb
mov
shrb
idiv
and
bound
dec
nop
stos
push
rcrl
scas
cld
jne
rol
fwait
push
enter
cmp
sbb
xchg
inc
xchg
scas
sub
pop
roll
dec
mov
insl
cmp
outsb
out
repnz
aad
pusha
mov
stc
call
mov
imul
adc
dec
push
sbb
insb
adc
xor
add
sbbl
cltd
pop
in
inc
icebp
cmp
or
add
aaa
inc
add
add
movsb
push
mov
daa
repnz
cmp
jecxz
stc
shll
lea
jne
sbb
sub
test
iret
stos
stc
push
mov
jns
or
or
sub
sti
fwait
in
hlt
test
aad
out
imul
mov
mov
add
cmp
mov
rcrl
sti
jle
and
out
and
add
inc
test
inc
mov
mov
mov
rcl
cmpsb
jae
pop
fldcw
xchg
iret
xchg
add
sbb
test
pop
or
inc
ret
out
mov
mov
and
jp,pn
and
add
add
stos
outsb
xlat
xor
out
popa
cmc
fldl
jne
mov
test
fstpl
pop
leave
scas
sub
insl
jo
push
inc
pop
sub
test
inc
cmp
or
test
mov
xchg
inc
adc
xor
repnz
push
mov
fcoml
mov
push
in
mov
cltd
mov
rcll
test
dec
dec
aad
inc
push
jle
sub
adc
or
mov
xchg
jmp
add
pop
cld
pop
sbb
jle
or
sbb
inc
fisttps
and
rcrl
adc
sbb
movsb
rclb
in
lods
inc
mov
imul
stc
enter
int
or
pop
push
cmp
dec
aaa
mov
imul
add
mov
xchg
fidivs
je
dec
ffree
test
cmpl
pushf
loope
mov
in
in
xor
sbb
cmp
out
stc
lret
in
sub
insb
icebp
xor
in
insl
sub
and
sub
inc
scas
loop
jge
inc
pushf
out
dec
iret
and
push
jle
cwtl
adc
mov
stos
outsl
sbb
mov
xchg
cmpsb
push
mov
icebp
sub
sub
push
xor
mov
data16
in
xor
jmp
cmp
mov
sti
inc
ljmp
sbb
xor
xor
cmp
aam
dec
scas
push
add
mov
push
mov
in
call
cmp
loop
inc
cmpb
mov
xchg
pop
push
in
daa
aas
xchg
push
add
sub
and
enter
divb
dec
repz
stc
xor
lea
ret
adc
sbb
xchg
cmp
and
cmp
fidivl
dec
aam
loopne
add
xchg
testl
dec
push
test
ss
loopne
add
xchg
add
inc
divl
orl
mov
adc
mov
mov
scas
lods
mov
scas
sbb
mov
lahf
pop
cwtl
mov
adc
movsb
ret
mov
divb
xor
mov
loopne
lret
push
in
arpl
jmp
xchg
sbbl
sub
xor
sub
mull
or
cltd
je
inc
mov
insb
lods
ficomps
imul
iret
loope
lock
in
lds
xchg
inc
adc
inc
mov
cmc
dec
push
inc
mov
dec
push
cli
pop
or
pop
out
and
imul
sarb
add
popa
imul
xchg
fwait
or
dec
bound
aaa
pop
loopne
jmp
repz
cmc
stc
pop
fldenv
popf
cmc
inc
jnp
loopne
push
or
dec
inc
repnz
mov
xor
lahf
xor
cmp
dec
shll
pusha
xchg
fidivrs
stos
jmp
mov
repz
xor
aaa
lds
mov
outsb
pop
dec
push
in
adc
sub
sti
je
inc
pop
push
cmp
xor
pop
adc
gs
add
add
mov
xor
xor
call
loop
ret
pusha
mov
push
bnd
test
inc
dec
sbb
stc
and
and
jge
adc
cltd
inc
out
lahf
pop
ja
clc
scas
vpmaxud
orb
and
rorb
movl
adc
outsb
xchg
arpl
or
lods
shrl
xorl
pop
xor
mov
cmp
inc
add
jge
dec
cmp
cmp
or
in
nop
mov
and
imul
lcall
ret
mov
movsl
cmp
add
ja
jl
xchg
push
push
and
inc
adc
in
pop
leave
add
data16
xchg
or
ret
movsb
inc
rcl
dec
jo
icebp
pop
xchg
inc
mov
dec
shll
lahf
sbb
xchg
push
mov
clc
adc
xor
inc
fnstsw
data16
ljmp
aas
lds
xlat
jo
das
testl
pop
cmp
mov
lock
fisubs
nop
cs
repz
mov
pop
sub
mov
es
das
or
leave
aad
or
sbb
movsl
jmp
rcrb
fidivl
xchg
cmp
bound
data16
mov
or
sbb
lahf
leave
aam
cmpsb
jp
jb
jl
sbb
scas
sub
mov
insl
lods
mov
test
inc
outsl
mov
stc
into
or
clc
pop
xchg
test
imul
dec
add
adc
cmp
bound
pop
mov
stc
lock
daa
or
mov
inc
popf
sbb
pop
sub
daa
cs
xchg
movsb
enter
mov
sbb
mov
gs
xor
xchg
and
fscale
sbb
lahf
addr16
int3
lea
sub
aad
jecxz
iret
test
cwtl
mov
or
add
fstl
xorl
lcall
stc
xor
repz
add
sarl
xchg
in
dec
mov
inc
sub
dec
or
pushf
jmp
add
leave
cmp
push
push
push
mov
sbb
outsl
addl
add
mov
sbb
cwtl
mov
dec
dec
xchg
adc
repnz
inc
dec
cmp
add
lcall
mull
adc
inc
or
jno
pop
mov
lods
mov
repz
test
inc
jecxz
das
int3
cltd
fnstenv
daa
pop
sbbl
sub
leave
mov
stc
inc
lahf
shlb
repnz
jmp
sarl
xchg
pop
jecxz
sub
dec
imul
lahf
adc
sub
out
loop
or
int
xor
test
cltd
dec
int3
movl
outsb
daa
lcall
fstpl
arpl
push
stos
stc
es
fldenv
jecxz
shrl
mov
in
mov
pop
lret
cmc
add
addr16
and
arpl
push
xlat
adc
in
pushf
xor
or
pop
add
ret
mov
lcall
sbb
xor
jmp
mov
in
push
fsubl
push
lods
test
test
or
push
mov
fs
and
rcl
xor
fwait
in
push
imul
xor
fnstsw
aas
push
adcl
inc
pop
cld
xchg
out
sub
stos
ret
pusha
sbb
aas
sbb
cmp
in
sbb
mov
cmp
push
cmp
inc
mov
mov
lcall
mov
data16
inc
pop
xchg
aam
clc
movsl
stc
mov
mov
mov
aam
scas
mov
je
pushf
mov
sub
push
xor
cmp
imul
jecxz
fwait
jno
jnp
mov
shll
sub
xor
les
bound
xchg
popf
xchg
in
arpl
xchg
lcall
add
inc
aas
outsl
jle
or
call
dec
cwtl
jo
pop
dec
rol
ret
stos
inc
and
inc
sbb
cltd
inc
jno
les
fcomps
sbb
rcll
xlat
popf
fstpl
imul
pop
aaa
or
call
ljmp
or
mov
sub
jnp
mov
or
cmp
out
sbb
dec
cmp
pop
fsubs
inc
jmp
ja
pop
jb
insb
cmc
leave
loop
push
lcall
mov
clc
jp
in
loop
ljmp
icebp
lea
loop
xor
cmp
nop
gs
in
pop
shrl
daa
and
in
or
repz
adc
loopne
jnp
loopne
loope
sbbb
cmpsl
enter
dec
movsb
in
and
pop
inc
das
push
pop
push
jbe
lds
pop
xchg
cs
jl
pop
sbb
cmpsb
dec
bsr
inc
les
neg
enter
fistl
push
cs
sar
clc
das
pop
sub
sbb
sbb
xchg
jge
xor
les
jecxz
pusha
mov
dec
xchg
imul
push
dec
mov
stos
cmp
mov
sbb
and
xchg
push
ja
sub
jecxz
adc
xor
push
test
adc
icebp
nop
je
fucomp
in
data16
or
push
outsl
shlb
mov
push
out
and
inc
scas
daa
rcll
sub
jecxz
jns
inc
rcl
sub
into
jp
filds
repz
xor
lea
int3
enter
xor
rcll
loopne
mov
aam
sub
sbb
das
stc
inc
icebp
dec
dec
popa
jbe
sbb
inc
pop
sti
cwtl
jle
inc
add
and
jle
jnp
pop
int
xor
jno
jle
push
rolb
xor
stos
enter
mov
mov
pop
jb
shlb
sbb
cmp
dec
xchg
scas
int
movsb
add
pop
push
dec
repz
scas
and
sbb
adc
in
js
or
sbb
or
pop
fildll
push
subb
outsb
mov
out
out
movsb
ss
add
dec
sbb
cmp
xchg
sbb
stos
aad
mov
int3
cwtl
cmp
lods
aad
leave
jae
ror
sbb
aas
in
pop
mov
pop
jmp
dec
xor
ljmp
lahf
in
xchg
push
in
les
cld
dec
push
push
scas
jb
jp
lock
shrl
loope
into
jne
paddw
cld
pop
jae
adc
mov
xchg
pop
iret
push
cs
test
adc
mov
in
dec
repnz
push
inc
test
xor
ljmp
ss
fcomip
mov
aad
mov
outsb
sbb
xorl
scas
add
scas
push
dec
add
push
btrl
sbb
ficoms
pop
cmpsb
sub
xchg
sub
or
jbe
mov
inc
inc
xor
push
add
xchg
sub
scas
and
dec
enter
sbbb
cltd
cmp
mov
xorl
push
lds
xchg
movb
pop
sbb
pop
push
stos
out
mov
dec
pop
add
fld
or
push
pop
sub
xchg
imul
loop
jnp
out
addr16
fistl
mov
lret
dec
push
xchg
xchg
and
mov
addr16
adc
push
sahf
cltd
lahf
lcall
or
rcll
lods
dec
push
add
mov
mov
sbb
shrl
insl
mov
call
lock
scas
and
xor
jecxz
jmp
inc
data16
int3
jmp
js
lahf
out
or
scas
xchg
sub
add
adc
insl
xchg
add
insl
xor
sbb
jle
or
ficompl
repz
cmp
shl
add
pop
hlt
lods
fiadds
je
cmp
add
insb
dec
pop
iret
jp
fstpt
shll
jnp
stc
push
repz
sti
lret
jns
or
inc
jge
adc
jno
xchg
mov
adc
and
fistpl
int
add
outsl
sbbb
inc
jne
popf
bnd
mov
push
mov
cld
cmp
push
inc
rol
pop
mov
mov
mov
popf
cmp
inc
hlt
mov
mov
rcrb
push
imul
push
sbb
xchg
cld
pop
ret
mov
cwtl
rcrl
push
and
inc
pop
add
push
mov
dec
js
jnp
cmp
stc
adc
or
mov
push
pop
jae
xchg
add
jl
cmp
jmp
add
xchg
out
ja
fsubrl
sub
shrb
pop
inc
sar
inc
imul
rorl
mov
cmc
stc
loop
scas
pop
dec
push
xlat
fs
xchg
fimuls
mov
je
jg
xlat
cmpl
push
int
iret
push
inc
popf
lock
mov
shlb
dec
lods
or
jbe
mov
imulb
fdivrs
test
jnp
sarl
sub
mov
iret
test
out
mov
loopne
test
test
xchg
mov
mov
xorb
mov
sbb
mov
out
add
insl
xor
inc
xor
scas
pop
add
inc
int
cmp
add
fsubrs
jnp
rcrb
fwait
dec
mov
pop
in
ds
push
subb
ret
and
movsl
xor
jnp
cltd
test
and
cld
test
aad
icebp
add
jno
push
sbb
fldenv
xchg
outsb
int
mov
lea
xchg
aam
inc
add
mov
adc
shl
frstor
dec
xchg
xchg
push
pop
xchg
xchg
sub
jo
aad
sub
pop
dec
push
pop
fmuls
push
popf
cmp
jecxz
dec
or
jns
loope
mov
xor
aam
jp
adc
push
or
sti
xor
shlb
out
push
gs
adcb
ret
out
jecxz
rorl
fisubrs
jno
cmpsl
pop
mov
call
adc
xchg
imul
loop
shlb
imul
stc
rol
loop
mov
mov
pusha
rcl
lret
ja
sub
clc
push
ljmp
dec
sahf
mov
test
xor
cmp
iret
jbe
popa
mov
mov
push
and
shll
xchg
cmp
mov
nop
jnp
pop
and
ss
push
rcrl
sbb
inc
pop
xor
das
lret
movsb
push
mov
xchg
xor
call
jb
mov
enter
push
pop
imull
test
ja
leave
arpl
mov
jne
mov
mov
add
insb
xchg
in
orb
mov
call
incb
xchg
movsl
push
mov
ret
cmp
push
sbb
jno
popa
sub
cli
mov
mov
mov
add
jp
push
sbb
jno
popa
sub
cli
mov
mov
mov
add
jp
push
sbb
jno
popa
sub
cli
mov
mov
mov
add
jp
push
sbb
icebp
cmp
ljmp
mov
jne
inc
push
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
insb
mov
adc
xor
cld
mov
subl
icebp
test
pop
rorl
mov
adc
inc
fcoms
icebp
cmp
or
push
xchg
push
sti
push
mov
xchg
xlat
jno
cmp
mov
jns
jp
sub
sub
cld
adc
inc
lret
in
ljmp
or
pop
sbb
cmp
loopne
sub
in
cwtl
ja
in
mov
daa
aad
and
out
pop
fs
pusha
aaa
inc
rcrl
shlb
icebp
add
xchg
js
adc
adc
cmp
jle
outsl
negb
mov
mov
test
pushf
inc
mov
mov
inc
sbb
mov
loop
xchg
out
or
in
cmpsl
cs
outsb
int3
push
shll
lret
bnd
popa
sbb
jg
clc
xchg
clc
adc
icebp
jge
or
in
mov
in
mov
sbb
test
leave
pop
imul
into
xchg
bound
sub
adc
mov
in
jge
popa
clc
xor
pop
push
cmp
sbbb
xor
inc
out
xchg
inc
mov
push
mov
jg
minps
sarb
sarl
lahf
pop
mov
xchg
and
mov
in
stos
adc
cltd
pop
lock
in
std
cmp
cmp
add
hlt
push
in
mov
call
mov
sbb
push
and
adc
inc
fcoms
mov
sbb
push
and
dec
sub
imul
push
pop
sub
sub
jne
clc
cs
lret
shll
jmp
insb
pop
aam
or
arpl
mov
mov
jb
pop
stos
pop
lret
in
in
insl
outsl
add
bound
out
test
adc
or
inc
imul
inc
lahf
jecxz
insb
pop
mov
addl
and
push
cmp
clc
loop
lock
inc
push
pop
push
adc
mov
fnsave
pop
cmp
jns
cmp
pop
jnp
dec
sub
subb
insl
js
cmp
xchg
das
cmpb
gs
xor
mov
mov
jno
or
icebp
mov
cmp
push
out
mov
cli
and
or
mov
rcrl
jmp
sub
pusha
cmpsb
not
dec
and
mov
sbb
push
gs
push
sub
icebp
push
into
sbb
sbb
push
repz
rcrb
push
or
nop
dec
push
adc
shll
jl
mov
push
pop
ret
iret
pop
clc
jp
mov
push
test
xchg
fbstp
scas
jge
rorl
bound
lods
out
jmp
ja
sahf
mov
shrb
sub
adc
into
subl
pop
dec
insb
mov
and
dec
pop
sahf
out
loopne
push
add
outsl
lcall
sarl
xchg
cs
enter
xlat
shll
iret
cmpl
xchg
mov
in
dec
xchg
nop
nop
xchg
popf
adc
pop
inc
ret
mov
cmpsl
lods
cltd
dec
sbb
pop
jb
or
adc
jb
test
iret
pop
int
dec
ss
push
inc
stos
mov
ret
jne
lods
aas
jmp
dec
rclb
jl
jecxz
cld
or
pusha
jmp
in
adc
sub
ret
mov
std
xchg
add
test
xchg
inc
addl
push
daa
sarl
popf
inc
fwait
push
mov
je
stos
pop
dec
std
xor
jle
sbb
push
sub
dec
repz
call
adc
pop
dec
sbb
jno
lcall
aaa
mov
jmp
xor
pop
mov
jge
inc
adc
xchg
fldt
pop
mov
push
sub
fdivr
adc
push
sti
out
push
xlat
cli
stc
adc
fs
push
mov
and
in
fadds
hlt
or
jl
sub
aam
mov
pop
mov
in
dec
push
add
pop
movsb
xchg
sarl
xor
pop
jge,pt
cwtl
test
xor
mov
insl
add
sbb
sub
add
lods
out
out
adc
xor
rclb
rcll
mov
push
das
mov
pusha
frstor
xchg
dec
cmp
dec
out
inc
mov
fucomp
mov
push
in
fdivs
imul
sub
and
sub
cmpl
mov
jg
outsl
adc
push
or
jecxz
ficomps
faddp
imul
popa
insl
cmp
out
scas
mov
pusha
jle
cmp
out
mov
mov
xor
decb
mov
test
and
fnstsw
aam
loop
pop
xchg
out
push
dec
pop
push
sbbl
jp
pop
xchg
jp
xor
fdivs
fimull
push
dec
shlb
movsb
idiv
and
jge
gs
movsl
dec
negl
mov
cmp
sub
mov
xchg
push
jne
ss
incl
and
mov
cmpsb
jle
es
fcomi
mov
jecxz
out
mov
aas
mov
xor
mov
sub
mov
movb
in
mov
add
repz
imul
jmp
adc
xor
push
mov
xchg
mov
loop
out
andb
das
testl
movsl
mov
js
pop
mov
sarb
ucomiss
shl
add
mov
xchg
mov
xor
arpl
sbb
cmp
cmc
sub
ror
mov
lret
int
sub
fldt
rcrl
lea
lret
fisttps
gs
mov
icebp
dec
outsl
imul
inc
shll
dec
js
stos
in
pop
stos
sbb
mov
jb
loope
enter
out
lods
adc
inc
fiaddl
dec
pop
cmpsb
adc
stos
adc
lahf
std
inc
mov
xor
push
int3
jne
outsb
lods
jno
shlb
xor
call
mov
roll
imul
inc
das
jo
mov
dec
shrb
lods
xor
adc
clc
inc
mov
add
mov
enter
xchg
imul
push
lret
cltd
jg
into
mov
sahf
lahf
mov
jns
mov
insb
push
sub
mov
int
into
cmc
lcall
inc
jbe
push
into
movsl
test
mov
shrw
and
sbb
call
repz
pop
sarb
testl
pop
push
pop
sub
pop
jns
call
outsl
mov
mov
pop
mov
popa
pop
aad
add
inc
out
dec
adc
add
and
xor
rclb
stos
mov
adc
notb
push
mov
lock
or
xlat
xor
pushf
aam
je
dec
cmp
inc
into
pop
xor
mov
fadds
stos
aas
sbb
sub
xchg
addr16
repz
jmp
dec
scas
int3
or
scas
mov
mov
repnz
std
test
ds
imul
or
push
xchg
jg
jge
cli
push
cs
sbb
push
test
sbb
sbb
imul
or
dec
sbb
lods
daa
frstor
enter
rorl
mov
inc
std
mov
mov
test
and
cmpsb
nop
pop
loop
bound
xor
xchg
adc
sbb
mov
insb
pop
mov
push
sbbl
add
out
stc
sub
test
xchg
rcll
fsubrs
imulb
jl
test
cmpsb
daa
mov
adc
add
xchg
and
mov
sbb
xchg
ljmp
testl
add
mov
pop
mov
mov
stc
sub
dec
adc
lahf
jle
mov
fistpl
outsl
arpl
dec
fcoml
cmpl
aaa
jne
or
adc
pop
test
fidivs
mov
dec
out
lock
add
int
and
fwait
mov
cmp
dec
mov
or
test
jp
or
in
shl
sbb
lcall
pusha
add
dec
mov
nop
leave
add
mov
loopne
stc
cltd
push
sub
mov
or
clc
sbb
push
imul
adc
nop
out
push
and
push
xlat
xor
and
fs
or
cmpsb
test
pop
call
shlb
ljmp
out
adc
insb
aam
mov
movsl
xchg
or
js
mov
loop
enter
xor
out
add
and
into
je
out
xor
cmp
xchg
addb
in
lret
inc
subb
loop
sbb
mov
scas
mov
cmc
subl
cwtl
or
sbb
xchg
mov
lods
fmul
out
adc
push
bound
add
fiadds
push
mov
test
call
stos
sub
sub
sbb
loop
jbe
or
adc
and
pop
in
and
dec
mov
xchg
sbb
and
out
xor
and
xor
adc
ss
fisubl
std
in
iret
pop
add
sbb
inc
adc
mov
push
cli
mov
pop
out
pop
adc
leave
mul
xchg
or
out
adc
cmp
fdivrl
jecxz
aad
cmp
mov
jmp
lods
jbe
out
add
insl
push
adc
cmp
shll
je
stos
mov
daa
xor
sbb
mov
mov
mov
repz
out
ret
cmp
mov
and
lret
repnz
stos
fucomi
out
stos
inc
ret
dec
dec
mov
test
jle
mov
es
jge
xchg
in
mov
pop
sahf
daa
test
dec
inc
shll
imul
ret
pop
lds
xor
inc
imul
push
cmpsl
and
fistps
mov
push
fsubs
test
shll
in
pop
enter
lds
sbb
sub
loop
fsubrs
xlat
add
cli
or
xor
leave
sahf
mov
test
push
insb
push
mov
mov
or
idivl
inc
fsubs
mov
dec
test
mov
pop
mov
insl
int
sub
lret
xchg
mov
insl
enter
mov
int
cmp
div
fsubrs
push
pop
insb
mov
mov
inc
loop
icebp
rclb
cmpsb
sbb
insb
push
lahf
xorl
push
data16
mov
bound
sbb
out
mov
outsb
loopne
push
stc
in
mov
mov
and
std
xor
xchg
enter
lock
out
jecxz
xor
jmp
das
cmp
dec
lods
lcall
gs
int
xchg
test
popf
bound
mov
xchg
pop
notb
mov
out
mov
xchg
dec
inc
mov
jb
mov
movsb
popf
xchg
dec
push
loopne
add
jle
xor
cltd
or
sub
rol
push
inc
cmpsb
cltd
std
pop
fldcw
dec
int3
jb
les
bound
jmp
mov
hlt
jns
cli
jns
fcom
xchg
sub
push
mov
out
lahf
cmc
test
fwait
sub
nop
push
outsb
inc
xor
inc
loop
insb
push
mov
inc
sub
mov
fdivrl
mov
jle
add
sahf
xchg
fucom
in
and
cltd
movsl
cmp
aaa
mov
popa
pop
fucom
xor
daa
mov
das
pop
cmp
xor
inc
push
or
xlat
hlt
daa
push
fdivrl
out
mov
add
xor
mov
lods
mov
adc
xor
push
push
and
icebp
fsubs
push
ljmp
xchg
add
xor
bswap
mov
dec
sub
lret
push
out
mov
idiv
mov
leave
pushf
cwtl
ficompl
jg
jmp
and
sub
out
or
int3
or
out
fnsave
lret
or
mov
hlt
mov
nop
movsb
push
and
es
xchg
add
scas
ja
mov
arpl
jg
or
xor
fsubrp
fildl
mov
clc
test
push
scas
mov
jbe
out
mov
xchg
icebp
mov
mov
jo
or
cmc
push
jecxz
imul
popa
shlb
jmp
enter
pop
jge
outsl
push
in
mov
mov
popl
loope
mov
dec
into
mov
sbb
cmp
and
dec
iret
or
xor
int
ja
jmp
sbb
rorb
jmp
stc
fistps
mov
cmc
mov
jge
cmp
ret
and
loopne
sbb
test
push
pusha
hlt
ret
stc
push
decb
push
pop
xchg
push
push
leave
and
mov
arpl
jne
testl
inc
les
or
sub
sbb
arpl
rorb
add
test
aas
push
and
das
enter
sub
adc
or
jnp
push
addl
or
and
or
xor
push
arpl
repz
add
sub
pushf
push
push
jno
adc
adc
fidivs
sbb
adc
gs
add
inc
cmp
push
repnz
xchg
popf
push
arpl
pop
aaa
pop
dec
mov
xchg
stos
ja
mov
scas
add
aad
jb
outsb
sbb
cwtl
inc
arpl
das
loope
cmp
decb
cmp
test
gs
imull
das
clc
sub
fldl
ror
shlb
fs
and
iret
or
mov
push
jne
pop
inc
add
ss
out
push
push
pusha
outsb
sub
icebp
ss
dec
pop
int3
pop
jecxz
repnz
loopne
mov
repz
push
cmp
sbb
cmpsb
xchg
mov
test
cltd
das
setp
or
mul
xchg
cmpsl
je
lret
mov
clc
lds
adc
pop
rorl
aas
nop
mov
sub
or
push
fwait
xchg
imul
cli
stc
fsts
int
out
fldt
js
pusha
mov
push
xor
sub
pop
inc
or
scas
scas
lret
mov
das
aaa
jbe
mov
daa
mov
sar
leave
out
xor
pop
in
add
xor
mov
mov
adc
sbbl
fmuls
jp
test
xchg
pop
js
test
dec
cltd
and
and
ret
outsb
scas
repz
or
cmp
out
sahf
std
fs
rcrb
mov
das
sarb
out
mov
nop
or
outsb
xor
or
in
xlat
pop
inc
cs
bnd
rcrl
test
pop
das
jl
sbb
lock
test
stos
push
pop
test
sahf
mov
pop
aam
dec
lods
outsl
cwtl
lods
dec
cmc
mov
adc
aam
das
mov
test
lahf
int3
fildl
jge
cs
sbb
fcompp
cmp
xor
ljmp
sbb
out
dec
lcall
jg
mov
ds
mov
negb
lds
inc
push
cmpsl
out
mov
pop
stc
shll
sbb
pop
inc
or
nop
test
xor
dec
cli
sti
movsb
mov
xchg
ds
ds
in
or
fstpt
iret
jecxz
or
xor
jg
sub
or
cltd
std
aad
pop
jnp
decl
popf
cmp
ret
lahf
xor
dec
imul
fsubs
rcr
cmp
mov
fildll
jb
test
in
fisubl
jle
lds
sbb
out
roll
bound
mov
mov
ret
sbb
xor
jp
mov
xchg
adc
pusha
xorb
mov
call
pop
inc
inc
cwtl
lret
push
ret
push
ret
out
popa
xor
cmp
push
lret
loopne
jp
pop
scas
mov
pop
jle
add
in
pusha
lods
jb
fnsave
sub
dec
cmp
dec
sarb
arpl
jbe
push
lods
gs
not
mov
push
movsl
pushf
std
inc
inc
stc
push
push
mov
lahf
pop
xchg
or
cmp
and
mov
mov
test
pusha
cwtl
test
shrb
fisubl
mov
test
add
jbe
dec
dec
inc
ljmp
movsl
aam
sbb
cld
sub
push
int
fstpl
les
pusha
cmp
popa
push
adc
and
ficompl
or
and
cmp
dec
sub
dec
mov
mov
daa
push
popf
adc
shrl
sbb
push
loopne
mov
and
jne
jp
ds
adcl
aam
inc
ja
sub
popf
pop
fldenv
sbb
iret
popf
sbb
push
sub
jmp
xchg
nop
arpl
xor
out
add
sub
mov
popf
jbe
push
lea
xchg
mov
loopne
and
jne
cmc
frstor
and
nop
ja
lcall
int3
xchg
push
out
pop
sbb
mov
jl
imul
fiadds
push
aaa
mov
mov
mov
or
mov
adc
shrb
icebp
sarb
out
mov
jnp
jno
loopne
dec
arpl
push
outsb
fwait
outsb
jo
push
dec
test
cmc
pushf
fdivrl
rcll
adc
inc
out
in
push
out
mov
push
adc
ss
jnp
pop
aaa
cld
in
mov
pop
mov
or
sbb
std
cli
sbb
rcll
and
popf
and
pusha
movsl
testl
scas
arpl
dec
or
xor
cmpsl
divl
hlt
stos
mov
push
lods
sub
adc
jbe
mov
jns
jp
sti
aam
mov
sbb
adc
jne
mov
shlb
jae
sub
adc
xor
in
xchg
stos
in
adc
rcrl
sub
in
loop
mov
rol
xchg
das
jae
mov
sarl
in
adc
sbb
jns
jae
push
fwait
push
xchg
mov
addl
lock
mov
add
xchg
nop
adc
dec
mov
subb
lock
pop
dec
mov
adc
pop
inc
cpuid
and
or
xchg
fisubl
pop
lds
dec
add
std
ficoml
jno
rol
test
sti
js
pop
mov
push
push
push
xor
das
mov
aaa
xor
inc
popf
sub
popa
std
or
nop
xchg
xor
lds
jne
lds
aaa
int
test
scas
adc
adc
sub
jne
push
fucomi
xor
popa
icebp
test
or
jecxz
out
sub
stos
lea
lock
xchg
jno
aaa
mov
std
in
mov
mov
icebp
insb
adc
out
jge
rcrl
and
jp
lcall
and
mov
leave
bnd
add
daa
rcrl
mov
and
or
in
jle
ret
or
int3
and
mov
cmp
inc
cmp
std
jbe
or
ficoml
adc
xchg
mov
js
inc
int
divl
cmp
push
cmp
cmp
mov
stc
outsb
fnstsw
sbb
mov
mov
shlb
adc
pop
into
dec
push
mov
inc
dec
cmp
sbb
adc
clc
xor
pop
popa
mov
imul
movsb
pop
imul
jp
mov
push
loope
or
xor
leave
sbb
xchg
add
sarl
mov
xchg
pop
sub
adc
sub
jbe
lock
mulb
mov
push
fisttpl
frstor
ljmp
sbb
test
lock
mov
int3
ja
fsubl
bound
test
aaa
aaa
cmp
mov
popa
aaa
or
xor
inc
cmp
cmp
dec
pop
dec
repnz
es
sub
or
movsb
int3
testb
sub
pop
add
mov
pop
inc
lret
iret
xlat
inc
out
adc
loopne
inc
cmp
xchg
sbb
test
mov
cmp
mov
push
aam
sbb
jnp
jnp
aas
pop
jmp
std
push
jp
sub
out
xor
jl,pt
adc
sub
cli
xchg
mov
in
les
repnz
scas
pop
push
or
mov
sub
idivb
xlat
idivb
sti
cld
mov
push
adc
js
cmp
in
test
nop
iret
stos
mov
inc
xchg
pop
pop
pop
fwait
jl
dec
xor
adc
adc
and
push
lret
call
addr16
shl
and
cmp
pop
pop
sbbb
cmp
fs
decl
jne
call
jb
iret
inc
mov
es
orl
xchg
repnz
imul
lret
push
nop
dec
push
int
mov
mov
movsb
lcall
insb
cmpb
repz
dec
mov
ljmp
mov
mov
and
mov
jb
das
lods
pop
jae
popa
sub
mov
cmovl
mov
std
xchg
push
mov
sarb
nop
stos
filds
sub
sbb
cmp
test
sbb
in
adc
adc
xor
sbb
insb
rcl
sub
mov
out
test
xchg
mov
mov
xchg
faddp
movb
inc
jb
mov
in
mov
lods
xor
jp
dec
orl
mov
imull
insb
shr
fwait
xor
mov
xlat
jl
or
adc
and
dec
gs
xor
pusha
cmc
fucomi
mov
ret
and
ret
xor
adc
xchg
dec
xor
es
push
stos
sbb
mov
pop
gs
inc
aas
pushf
pop
push
pop
cmp
mov
mov
jge
sahf
ljmp
imul
and
jne
insl
inc
shlb
push
rdmsr
or
iret
loope
cmp
cmp
mov
lcall
ret
shll
lret
dec
repnz
lock
es
push
and
pop
pop
outsb
scas
test
popf
or
call
mov
sbb
push
and
adc
inc
fcoms
mov
sbb
push
and
mov
jne
inc
fcoml
movsl
cmp
add
jl
push
cmp
mov
popa
clc
popa
call
mov
sbb
adc
and
xor
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
