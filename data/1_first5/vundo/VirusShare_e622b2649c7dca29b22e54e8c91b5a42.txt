jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sbbl
mov
loopne
sub
pop
add
add
push
or
add
add
add
xor
add
add
add
add
add
xor
add
add
add
xor
add
xor
add
add
add
add
add
add
add
mov
add
arpl
test
xor
add
add
add
mov
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
mov
add
add
out
add
add
adc
add
xor
add
add
add
add
addb
add
cmp
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
xor
add
pop
add
add
add
xor
add
add
add
add
add
add
sbb
push
xor
cmp
movsb
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
cmp
out
sbb
outsb
add
add
add
sbb
addb
add
adc
cmp
mov
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
test
cmp
ljmp
add
add
add
add
add
scas
add
add
add
add
add
xor
add
add
add
add
out
add
dec
add
jne
xor
add
scas
add
xor
add
add
add
add
add
add
add
add
add
add
addl
add
add
add
data16
add
add
add
add
arpl
test
xor
add
add
add
add
add
arpl
test
xor
add
add
incb
xchg
add
addr16
add
add
add
add
add
add
add
addb
add
sbb
test
cmp
add
xchg
add
addr16
add
add
add
add
cwtl
add
add
add
add
add
add
lret
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
xor
xor
add
add
add
add
and
arpl
xor
add
add
cmp
out
add
imul
add
add
add
add
movsb
add
add
arpl
test
xor
add
les
add
xor
add
int3
add
add
add
loopne
arpl
xor
add
add
flds
out
dec
add
push
add
jne
cwtl
add
outsb
add
cmp
les
or
adc
test
test
loopne
outsb
add
test
outsb
add
add
add
test
sbb
mov
in
dec
and
adc
sti
adc
jns
mov
inc
and
and
sbb
movsl
int
movsl
loope
mov
movntq
rorl
jbe
arpl
shll
jnp
xchg
ret
or
aas
sub
in
je
sub
andb
mov
andl
fwait
sub
mov
sti
mov
jae
or
aad
push
or
pusha
xlat
xchg
sub
jecxz
fsub
add
jp
lahf
jge
pushl
daa
daa
sub
aas
out
shl
lea
test
xchg
add
inc
jl
sub
inc
loopne
scas
jp
lret
lret
mov
ja
add
jmp
hlt
int
and
pushf
mov
pushf
fs
add
cmp
rolb
stos
push
ss
jge
test
pop
loope
push
or
mov
call
xchg
pop
and
pop
repz
shlb
std
cmpsb
icebp
xchg
and
sub
inc
call
jp
cmp
push
test
add
pop
mov
mov
rcrl
inc
cmp
sbb
push
rorl
mov
outsb
sub
xchg
dec
out
xor
push
mov
aaa
nop
cmp
lods
xchg
mov
mov
out
pop
xor
push
xlat
jg
shrl
mov
push
xlat
mov
xchg
mov
and
js
inc
jl
hlt
pop
cli
rolb
and
xor
shll
pop
int
mov
lret
cwtl
jae
fidivs
dec
dec
pushf
push
into
shrl
mov
cli
ljmp
mov
cwtl
inc
in
es
fwait
jle
enter
adcb
sbb
sti
mov
popf
xor
xorl
pop
lret
ds
fs
xchg
es
std
cmpsb
icebp
and
cmc
imul
mov
int
add
adc
mov
xor
mov
incl
dec
enter
inc
les
pop
push
cmp
pop
popa
adc
and
insb
mov
scas
ss
mull
dec
daa
xchg
xchg
push
jmp
mov
lea
cmpsb
pop
fisubrl
or
lret
push
lcall
popf
mov
out
mov
xor
xchg
lock
xchg
popf
and
pop
into
xor
dec
jle
cmp
mov
out
outsl
pushf
outsb
or
testl
hlt
pop
pop
push
repnz
es
inc
nop
daa
add
pushf
mov
jnp
nop
and
xchg
ds
mov
adc
cli
push
shrl
and
mov
add
nop
jmp
pusha
js
mov
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xor
and
adc
add
lds
push
sbb
mov
mov
xchg
icebp
loop
ja
ret
xor
and
adc
add
jno
popa
jb
inc
inc
push
mov
orb
roll
cmp
or
sbb
push
inc
inc
push
test
xorb
cmpsl
mov
pop
and
adc
inc
and
xchg
cmp
mov
stc
and
lock
fs
aam
aam
xor
mov
cmpl
xchg
icebp
push
rcll
frstor
loop
inc
jle
out
in
fiaddl
cmpl
icebp
jecxz
xor
cmp
xor
mov
jb
int
lods
cmp
fisubs
loope
pop
cmp
lods
int
xchg
in
mov
addr16
mov
mov
addr16
jge
push
or
loope
cs
ror
fs
jmp
pop
arpl
mov
xlat
sub
in
xchg
rcll
rcl
rcl
and
xor
add
adc
jno
push
inc
pop
push
test
mov
xchg
jmp
ret
pop
dec
inc
xor
jnp
push
pop
jb
or
add
ljmp
mov
and
jle
jno
sbb
xor
xchg
jecxz
std
icebp
orl
popa
jge
imul
inc
inc
push
mov
mov
xchg
icebp
loop
repnz
rcl
and
xor
add
adc
popa
jb
inc
inc
push
mov
mov
xchg
icebp
loop
repnz
rcl
and
jnp
mov
push
sbb
int3
lahf
mov
xor
loopne
sahf
lahf
dec
mov
pop
mov
rcrl
rorb
add
mov
repnz
push
and
mov
mov
pop
jg
and
dec
mov
xor
push
and
pop
mov
lcall
add
lretw
insb
mov
ret
xchg
in
add
xchg
ret
jg
dec
into
mov
stc
sbb
cld
pusha
mov
jg
gs
pop
ja
fsubrl
aad
cmp
sbb
sub
loop
and
mov
stc
popf
femms
jmp
xchg
push
mov
push
scas
addr16
lahf
fwait
jo
inc
lahf
push
jmp
or
jecxz
rorb
xorl
inc
fwait
pop
aam
cmp
jle
clc
push
push
add
and
sub
jmp
or
out
or
nop
sub
push
xchg
mov
mov
and
mov
out
mov
in
cmpsb
inc
or
xchg
insb
inc
inc
pop
dec
ret
jae
jl
pushf
mov
mov
xorb
push
mov
xchg
cs
jnp
add
cli
ja
rorb
cmp
jge
sti
mov
outsb
stos
in
xlat
push
pop
adc
pop
sbb
fdivl
aas
test
pop
out
sbb
mov
hlt
iret
or
add
out
fdivrs
jmp
fs
ss
cmp
lcall
daa
fucom
inc
jge
lods
and
jl
das
sub
das
xchg
fwait
push
pusha
adc
push
sbb
mov
ljmp
movsl
sub
cmp
outsl
mov
ds
sub
out
pop
mov
hlt
or
lahf
call
pop
cmp
add
sti
inc
jne
mov
stos
mov
inc
aaa
loopne
cmc
cmp
sub
inc
fdivrl
ret
pusha
push
or
cld
dec
sbb
lret
mulb
ficoml
lods
xchg
test
fsubs
xchg
test
pop
and
and
dec
inc
inc
test
adc
mov
roll
jb
mul
sti
xor
mov
xor
cwtl
or
pop
jl
pushf
mov
jnp
cltd
stos
sbb
push
xchg
cld
icebp
pop
and
cld
xor
push
das
outsl
jmp
mov
mov
push
cld
shrl
mov
filds
jo
pop
cmp
mov
pop
jge
and
out
adc
in
idivb
pusha
sbb
inc
test
jo
cmp
ljmp
sbb
cmpl
int
mov
xor
imul
in
xchg
push
jmp
dec
fcoms
cmpsl
add
repz
xchg
adc
addl
mov
cmp
test
mov
xor
cmp
mov
cmp
fisubrs
adc
push
test
sbb
sub
add
repnz
adc
xorb
rorl
or
icebp
add
adc
movsl
and
dec
adc
xchg
andl
push
mov
adc
dec
in
xchg
shlb
jns
sahf
add
lcall
or
outsb
scas
or
lret
cmp
dec
repnz
xorb
cltd
popf
in
scas
jle
xorl
xor
pusha
lret
xor
jge
mov
jl
fs
add
movsb
cld
and
jecxz
std
mov
and
call
int
pop
arpl
pop
xor
xor
mov
int
mov
sub
cmp
adc
sbbb
xlat
cli
lret
cmc
lret
popa
push
call
add
rcrl
pop
std
mov
repnz
mov
push
shlb
push
adc
stos
push
push
pop
clc
or
jmp
inc
add
adc
outsl
test
sahf
stos
lahf
fadd
mov
cmp
das
sahf
adc
aaa
pop
adc
pop
cmp
subb
push
inc
rorl
dec
xchg
into
cmp
and
mov
xlat
or
aaa
jmp
sub
hlt
ficoml
sbb
xchg
cli
cmp
lcall
jns
scas
mov
jg
and
jmp
and
in
xchg
lods
mov
cmp
dec
es
mov
xor
jle
pop
cmpb
loop
lods
cmp
loope,pt
ss
stos
adc
fcmovu
push
shll
fcoml
xor
outsl
lret
cs
jmp
adc
inc
xor
icebp
scas
lret
stos
jmp
das
into
mov
sbb
push
push
dec
inc
in
insb
jne
in
jno
pop
fisubrl
enter
jg
lahf
and
add
test
jle
pop
cli
testl
add
int
and
outsb
mov
leave
push
das
std
push
stc
jg
aam
arpl
pop
out
sbb
aam
fldt
dec
fwait
in
or
pop
xchg
xchg
mov
sub
push
xchg
out
rolb
fdivs
mov
pop
dec
lcall
int
movsl
cmovbe
push
arpl
mov
adc
xchg
and
and
pop
ret
xor
push
or
sbb
repnz
xchg
inc
or
or
lret
test
repz
les
stos
bound
mov
and
es
dec
divb
sbb
mov
inc
in
out
sbb
lea
mov
fcomps
jp
jb
icebp
cltd
je
mov
adc
pop
aas
xor
mov
mov
jnp
popa
push
mov
add
inc
sar
cmpsl
mov
or
sbb
mov
jg
pop
pop
fcoms
es
mov
adc
xchg
lods
xor
and
and
mov
lods
scas
sub
int
cmp
jle
fcoml
repnz
cs
ss
daa
idivl
addb
push
pushf
rolb
jnp
cmp
cmp
sbb
test
and
pop
fs
xor
push
daa
bound
in
stc
out
jmp
insb
pushf
into
inc
daa
imul
jnp
inc
dec
loope
lcall
scas
pop
and
es
cwtl
ds
xor
pop
xor
inc
jmp
test
sti
jle
imul
and
xchg
test
aam
in
xor
shlb
xor
fmul
pop
pop
les
fwait
or
lret
mov
lret
bound
inc
mov
mov
add
xor
test
xor
inc
or
cmp
outsl
jo
out
rcl
mov
aaa
cmpl
push
or
adc
xchg
aaa
out
into
scas
mov
dec
xchg
out
jg
mov
ss
xchg
inc
in
inc
sub
jle
jmp
icebp
xchg
dec
pop
lcall
mov
sub
andl
add
jnp
inc
call
ss
jle
cmpsb
out
in
sub
mov
icebp
sub
mov
mov
pop
stos
movsl
bound
mov
imul
jl
dec
and
stos
orl
mov
xchg
mov
andl
outsb
push
jnp,pt
stos
and
int
cmp
loopne
scas
and
sbb
and
iret
mov
test
in
in
iret
div
xor
sub
pop
inc
xor
jge
mov
jp
ljmp
shl
sarb
aad
or
nop
mov
cli
adc
movsl
mov
dec
int
sar
scas
xchg
inc
fisubl
sbb
fucomp
out
imul
pop
pop
adc
pop
dec
pop
adc
cltd
fstps
jle
scas
adc
ficoms
pop
outsl
repnz
cwtl
insl
ss
and
xchg
cltd
fildl
push
jno
lcall
pop
inc
int
shrb
mov
imul
mov
adc
dec
rcrl
cli
mov
sarb
leave
pop
jmp
sub
out
icebp
add
lock
sbb
rol
and
mov
and
jle
jnp
mov
push
fildl
mov
and
cmp
and
or
test
mov
cmp
fsubs
rcrl
pop
lds
pop
jl
mov
mov
addr16
inc
dec
mov
sar
or
je
inc
pusha
sub
mov
into
push
sbb
sub
test
adc
mov
jbe
or
and
xchg
dec
sbb
sti
cmpb
pop
pop
dec
test
pop
in
sub
xor
sti
or
sub
push
decl
aam
inc
inc
aas
pop
add
std
mov
stos
ret
or
insb
mov
movb
or
pop
jns
push
xchg
popf
repnz
testl
sub
ret
inc
arpl
ss
in
lock
push
test
sbb
cltd
js,pt
loope
pushf
cmp
pop
rclb
sub
mov
in
lock
push
cmp
fs
scas
in
mov
addr16
and
outsb
and
push
lret
dec
mov
pushf
xor
mov
pop
push
pop
push
sbbw
jl
enter
dec
push
movsl
inc
xchg
scas
mov
sbb
pop
loop
mov
adc
mov
out
cs
inc
pusha
cmc
cmp
and
dec
dec
sbb
jb
dec
mov
sbb
daa
dec
jecxz
hlt
jp
sbb
ds
aaa
jecxz
popa
xor
insl
and
inc
ljmp
ljmp
cwtl
fidivs
add
std
mov
mov
ffreep
push
push
mov
dec
add
sbb
add
jne
xchg
cmp
rolb
or
cltd
les
pop
je
xor
popa
filds
insl
popa
loop
lods
mov
xchg
lret
mov
lcall
repz
push
or
in
push
sub
rcll
lea
mov
test
xor
mov
dec
fcmovnb
mov
pop
pusha
ss
mov
lods
int3
xor
mov
lahf
dec
cmp
daa
mov
fistps
shlb
cli
mov
mov
inc
aam
mov
add
aas
scas
xchg
icebp
bt
push
mov
ds
nop
cmp
add
xchg
add
loopne
dec
jns
jle
test
lret
or
icebp
push
loopne
cmp
xor
jge
sti
shlb
cmp
fmuls
mov
push
inc
stos
inc
mov
pop
sbb
add
in
push
jle
test
out
xchg
dec
repz
xchg
xchg
into
in
push
xchg
das
in
xchg
cmp
add
lcall
mov
xchg
dec
fwait
or
insl
dec
dec
fs
pop
fisubrl
pop
xor
inc
es
jnp
ds
fcmovne
fiaddl
pop
mov
pop
jo
in
addr16
xlat
or
dec
add
test
push
outsl
mov
mov
lahf
dec
xor
mov
inc
scas
sarb
inc
push
pop
nop
dec
std
fldl
fsubrl
adc
jns
dec
mov
xorl
cld
fwait
sbb
mov
pop
push
pop
xchg
pop
sbb
or
scas
jns
inc
data16
sub
ja
or
les
mov
leave
mov
movsl
call
scas
push
sbb
leave
mov
cmpb
movb
push
mov
icebp
cmpsb
xchg
add
push
es
fwait
push
inc
cmp
cmpsb
data16
out
loop
pop
pusha
popa
imul
mov
pop
jecxz
fisubrl
outsl
mov
pop
stos
loopne
push
sti
rcrb
or
in
movsl
js
cmpb
stc
stos
rol
cmpsb
lcall
sub
shll
and
aam
push
xchg
pop
jno
daa
jge
les
sahf
cwtl
fsubl
dec
jbe
shr
rol
jmp
cli
nop
jnp
add
dec
mov
pop
cmp
mov
movq
into
mov
cli
fwait
lahf
adc
xrelease
push
inc
fdivs
in
push
pop
fiadds
stos
push
testl
dec
adc
jg
pop
rcll
adc
int
in
mov
sbb
inc
jae
dec
lahf
addr16
in
nop
test
jnp
insl
int
leave
jnp
divps
out
mov
pop
mov
mov
sti
leave
inc
ds
cmp
clc
add
sbb
jbe
mov
adc
es
jbe
pop
jb
push
xchg
mov
andl
jno
loope
push
aas
mov
xchg
fstpt
testl
std
push
das
jae
inc
add
fsubrl
cld
js
test
mov
cmp
and
sbb
in
fadds
and
jecxz
sbb
shll
popa
adc
cltd
and
jp
inc
mov
int
mov
jnp
jl
test
sub
mov
push
jmp
in
push
and
inc
mov
adc
jp
add
xchg
mov
pop
imul
mov
sahf
mov
mov
sbb
mov
mov
mov
mov
mov
subb
bound
lahf
test
mov
cmp
lods
jmp
cmpsb
pop
out
out
addr16
test
loop
xchg
pop
in
mov
mov
aad
orl
stos
lds
jle
push
xor
mov
orb
push
cmpsl
fbstp
lds
idiv
mov
negl
jmp
mov
rcll
adc
dec
push
inc
mov
inc
xchg
or
mov
dec
cmpl
cmpsb
popa
dec
mov
sub
sbb
inc
mov
fsubl
mov
rolb
int
fdivrl
les
jg
cmp
hlt
push
subl
daa
pop
push
or
sub
mov
pop
push
sub
sbb
sub
insb
out
sarb
push
add
adc
xor
inc
adc
pop
adc
inc
rol
mov
andl
jnp
fwait
lock
cmp
cld
mov
dec
jecxz
call
in
dec
pop
add
mov
ret
outsl
imul
push
out
or
jecxz
lcall
cltd
shrl
sbb
int3
js
mov
out
mov
push
jo
dec
adc
dec
push
add
and
mov
sahf
cmp
mov
nop
sahf
addr16
sbb
std
and
lahf
pop
push
stc
fisubrl
pop
adc
lock
mov
xchg
jb
sub
xlat
ret
push
imul
push
ret
rorb
or
shlb
adc
mov
push
or
mov
cmpsl
xchg
mov
js
jno
mov
sar
stos
int
jl
inc
push
xor
inc
test
fcompl
or
in
les
iret
mov
cmpsl
test
movsb
sbb
mov
inc
add
xchg
aas
fidivl
fcmovnu
dec
sub
shlb
inc
push
fldcw
das
movsl
xchg
jecxz,pt
fadds
and
xor
iret
cld
loope
add
dec
lcall
push
call
mov
clc
mov
adc
ret
adc
xchg
push
lcall
je
add
jp
xchg
mov
data16
and
loop
lea
push
mov
mov
lret
mov
dec
cmpsb
jp
flds
or
sbb
push
pop
and
xlat
and
movsb
cli
pop
inc
in
cmpl
int
scas
inc
fs
imul
push
xchg
aam
jp
sbb
arpl
pop
mov
mov
xchg
cmp
in
push
mov
mov
mov
jl
cmpsb
mov
out
xchg
fcomps
or
popf
mull
divb
and
icebp
stos
inc
push
int
gs
jecxz
arpl
jo
and
mov
outsl
push
pusha
aaa
push
out
inc
fldl
add
dec
adc
in
mov
incl
es
hlt
insl
dec
shl
pop
push
icebp
mov
pop
sub
jnp
or
push
push
outsl
andl
movsb
rcrl
cmp
jb
dec
call
dec
inc
out
inc
in
add
mov
sub
cltd
adc
int
mov
and
lret
and
mov
lea
movsl
xchg
mov
loope
mov
jl
cmc
fildll
test
shlb
iret
sar
fadds
mov
pop
or
daa
jns
pop
test
inc
stos
add
add
jmp
andl
mull
mov
fwait
push
out
lahf
divl
add
repz
xrelease
pusha
rcrb
jbe
and
xor
mov
and
jno
imulb
xor
jge
lahf
lods
stc
or
xchg
lods
lock
sar
add
xchg
inc
or
ljmp
ffree
int3
fisubl
int
pop
std
arpl
pop
insb
xor
push
xor
cmp
jo
cmp
push
jecxz
movl
outsl
div
xor
mov
push
mov
leave
int
cmpb
aaa
cmp
dec
jnp
fidivrs
add
mov
lea
repz
hlt
mov
loop
push
out
aas
addb
sar
andl
insb
daa
xlat
inc
pop
sub
cmp
adc
fldt
scas
jae
xchg
in
adc
gs
cli
and
jae
jl
add
stos
es
sub
popf
popa
andb
arpl
pop
xor
hlt
popf
stos
push
mov
push
or
cmp
dec
add
imul
ds
test
sbb
mov
aaa
pop
inc
pusha
ds
sbb
xor
pop
stos
fistl
rorl
ret
sub
and
jb
adc
mov
or
sti
enter
mov
sti
rcll
insb
and
int
aam
out
adc
sbb
aas
xor
sbb
clc
pop
xchg
xchg
inc
stos
repnz
jge
pop
jnp
dec
ds
ljmp
lea
lea
dec
mov
dec
loop
fstps
ficoml
pop
add
aam
cmp
pop
out
mov
fsubrs
xchg
pop
mov
daa
out
push
add
push
cs
sti
pop
dec
rorb
xchg
popa
daa
adc
sbb
ljmp
data16
add
aas
xchg
xor
jns
dec
inc
pop
jo
adc
rcll
ficoml
ljmp
daa
loop
pop
adc
gs
dec
sbb
repnz
repnz
xchg
lds
and
jae
addb
insl
insb
mov
dec
mov
pop
movsl
int
in
sarb
xchg
inc
dec
push
jo
pop
mov
cmp
sbbl
xor
inc
jno
outsb
and
adc
jns
jo
add
mov
push
and
mov
ret
adc
loopne
push
lods
mov
add
aad
mov
xlat
call
pusha
jge
lret
inc
inc
inc
mov
fildll
xchg
mov
adc
inc
xor
inc
or
lret
pop
cmp
xor
pop
mov
xchg
xchg
cmp
xchg
xor
mulb
in
shrb
mov
pop
test
lods
xchg
mov
mov
xor
cld
jne
mov
xor
subb
adc
add
jge
push
mov
xor
shrb
adc
sahf
enter
bound
mov
frstor
ds
cmpsl
jnp
addb
fadds
leave
mov
adc
aad
roll
shl
aad
cli
test
mov
lods
cmpsb
adc
scas
andl
cmpsl
mov
jns
mov
mov
fnstenv
mov
jmp
mov
aaa
dec
push
rorl
add
iret
push
insb
sub
push
xor
out
lods
scas
fistl
pop
sbb
cmp
mov
test
push
fwait
lcall
cmp
sub
inc
cmp
pop
inc
jl
adc
rcrb
jge
roll
mov
in
dec
std
fcomps
add
mov
jp
clc
jg
inc
movsb
ja
sub
nop
sahf
jl
mov
cmp
sub
pushf
or
dec
inc
xchg
int
lret
das
push
pop
ss
adc
rorb
mov
jp
iret
push
cmp
sahf
fstps
hlt
adc
sub
loop
xlat
pop
pop
jne
jae
dec
jns
or
bound
cmc
mov
ss
ds
xor
mov
jbe
pop
ficoms
fistpl
movsl
out
sub
popf
pop
hlt
and
mov
insl
rcrb
test
dec
jmp
fistps
and
jecxz
test
fdivrl
notb
xchg
pushf
ror
mov
ret
cld
ds
jns
cmp
fistl
mov
sub
push
incl
mov
clc
rclb
mov
jb
aas
cwtl
aaa
fs
cwtl
mov
aam
push
lea
adc
sub
lea
or
xor
mov
sub
cmpsb
sahf
insb
outsb
inc
add
arpl
add
adc
popa
jb
inc
inc
push
mov
mov
xchg
icebp
loop
repnz
rcl
and
xor
add
adc
popa
jb
inc
inc
push
mov
mov
xchg
icebp
loop
repnz
rcl
and
mov
addb
jno
popa
repnz
inc
inc
push
mov
mov
xchg
icebp
loop
repnz
ret
shlb
and
xor
add
adc
popa
jb
inc
rcll
pop
sbb
addb
cs
dec
in
xchg
outsb
test
aam
test
dec
loope
icebp
into
cs
and
mov
pop
mov
movsl
jle
outsb
test
cmc
push
in
aad
jmp
xor
out
add
mov
adc
jle
outsb
repz
lds
lods
fildll
neg
xor
shlb
in
add
daa
shlb
icebp
dec
in
sbb
pop
cli
push
sbb
push
aad
sbb
adc
ss
mov
imul
mov
mov
jecxz
xor
mov
sub
cmp
lret
jae
imul
fwait
cmp
ffree
cld
mov
out
inc
sbb
sbb
and
movsb
xor
xchg
cltd
fildl
dec
movsl
or
push
aad
adc
faddp
jae
enter
out
mov
arpl
pop
adc
push
jp
movb
into
push
xor
cmc
addr16
adc
mov
push
mov
pop
cmp
mov
mov
movsl
les
ret
stos
outsl
mov
mov
dec
test
outsb
test
cmc
push
in
aad
push
fidivs
out
cmp
dec
scas
ja
mov
lret
or
jb
inc
mov
outsl
sbbb
andb
out
cli
and
sub
repz
cs
jmp
ds
int3
push
mov
cmp
gs
xor
inc
pop
stc
outsl
jmp
ds
into
and
sahf
jne
gs
mov
movsl
jle
outsb
test
cmc
push
in
aad
into
and
sahf
jne
gs
mov
repz
imul
lock
cltd
cmp
and
js
cmc
sbb
adc
ja
rcrb
push
inc
aad
aad
scas
lds
add
lds
xchg
in
out
in
or
xchg
jns
out
fisubs
test
xchg
jbe
int
xor
call
test
cmpsl
dec
sub
sub
or
pop
xchg
xor
jo
dec
mov
push
pop
test
test
jae
outsl
cs
sub
push
mov
cmpsb
push
xor
sub
ret
rclb
out
lcall
ljmp
clc
mov
add
in
mov
fcomps
dec
xchg
xor
mov
test
fdivr
shl
xor
loope
push
fsubl
out
notl
xor
imul
pop
sarb
adc
pop
mov
sub
push
pop
dec
pop
mov
mov
lods
cltd
push
jg
cmp
push
sahf
cld
popf
test
cmp
xchg
cmp
xchg
mov
sbb
and
xchg
mov
add
ret
repnz
push
or
data16
push
lods
and
xchg
fcom
or
lret
dec
dec
pop
mov
fisubs
cmp
add
push
rcrb
mov
cmpsb
in
mov
sti
js
and
dec
cld
sub
out
and
movsb
dec
lret
test
cmp
jno
stos
push
insl
fcmovnu
mov
mov
add
xor
add
stc
sti
mov
cs
andl
mov
subb
aaa
xchg
xchg
in
xor
and
dec
popf
rcr
mov
dec
std
sti
xor
lahf
mov
lds
scas
clc
and
xchg
ror
cld
stos
dec
loop
mov
and
leave
inc
jno
mov
xchg
ss
pop
arpl
inc
lods
xor
push
mov
jp
sbb
cmp
mov
scas
dec
jae
and
mov
lret
insb
imul
and
hlt
fwait
sub
mov
lock
sbb
jnp
mov
rcr
ret
or
mov
pop
pop
ljmp
loope
int
mov
cmp
iret
inc
in
dec
stos
jnp
cwtl
or
pop
popa
jne
loope
imul
aad
pop
loop
leave
xor
mov
push
fst
cvttps2pi
cmp
imul
enter
ret
pop
pop
xor
mov
and
push
addr16
add
inc
push
out
inc
popf
xchg
sahf
sbbl
adc
pop
pop
andb
or
les
imul
dec
int
or
mov
mov
pop
pop
xchg
pushf
fnstenv
test
ret
pop
xchg
xchg
mov
popf
push
lds
dec
aad
push
or
call
xor
ss
pop
push
cs
xor
jae
adc
sub
loop
dec
inc
sub
dec
mov
lods
cmp
xor
iret
aad
scas
or
scas
addr16
mov
mov
or
into
or
test
clc
mov
mov
cs
and
sbb
mov
mov
jp
lahf
aas
int3
outsb
mov
mov
dec
mov
lods
sbb
push
insb
sub
sub
arpl
mov
jmp
mov
add
int3
jecxz
ret
andb
inc
mov
and
or
xchg
xchg
out
inc
lds
adc
movsb
int3
add
repnz
push
mov
or
dec
sar
rcl
addr16
outsl
out
movsl
mov
adc
popf
aas
cltd
pop
or
mov
ljmp
je
mov
mov
cwtl
mov
inc
rcll
stc
out
or
cmp
xchg
pop
mov
addb
sub
add
test
push
push
notl
popf
hlt
ficomps
or
push
xor
or
jb
jl
into
add
sbb
xor
or
jne
js
sti
sbb
lods
jnp
adc
sbb
inc
add
jmp
mov
mov
sub
int3
xchg
sarl
cmp
jbe
js
jge
clc
sub
in
pushf
mov
ja
xchg
cmp
push
inc
adc
aam
cmpsb
mov
popf
js
je
add
adc
out
cmp
mov
jne
aas
push
xchg
insb
mov
shll
inc
loope
dec
mov
mov
sub
ss
dec
rcll
adc
outsl
fbld
xchg
pop
push
mov
jg
add
jno
jmp
sti
lods
icebp
jmp
fbld
insb
es
inc
loop
pushf
lahf
orl
adc
sbb
int3
int
and
and
ret
popa
adc
inc
or
popf
ss
mov
cli
mov
add
jo
and
aad
inc
pop
fxch
jge
mov
in
mov
jns
mov
shrb
loope
addb
cmp
cmp
inc
jbe
or
stc
push
sbb
mov
addr16
lds
xor
jbe
cmp
andb
stos
push
dec
cld
lea
mov
mov
inc
clc
data16
jle
cmc
insb
push
out
cmp
mov
push
jecxz
lret
pusha
push
cmpsl
aam
test
or
fs
or
and
out
adc
cltd
hlt
or
or
jmp
or
or
dec
dec
add
roll
repnz
xchg
push
iret
outsl
xchg
dec
jae
jg
sarb
mov
jmp
xor
insl
xchg
fwait
pop
test
push
lahf
cmp
jle
das
add
sbb
fs
jnp
adc
mov
jg
cmp
ss
pop
lock
sub
into
insl
test
sub
xor
insl
adc
subb
push
fdivrp
xor
inc
pop
sbb
cmp
sti
scas
mov
ret
xchg
fmull
push
and
pop
test
popa
push
push
cli
inc
mov
sbb
fistps
or
mov
mov
mov
mov
or
adc
add
fwait
lods
pop
das
mov
pop
mov
out
sbb
sub
popf
jecxz
imul
int3
mov
and
out
cmp
xor
test
gs
push
ljmp
ja
inc
dec
roll
loop
jae
mov
outsb
bound
sbb
xchg
inc
mov
pop
jle
negb
jbe
testl
sbb
inc
sbb
imul
fmull
pop
push
shr
in
lock
stos
int3
add
pusha
lock
cld
pop
das
out
into
test
je
dec
fstps
or
test
inc
cld
ret
aaa
xor
push
sub
mov
aad
jne
dec
and
cmp
jo
cs
cmp
jbe
push
push
jmp
mov
and
jmp
in
rcrb
cmpsl
outsl
fs
inc
xchg
loop
outsb
sbb
xchg
add
jo
test
sub
out
cwtl
cs
add
jb
cmp
out
clc
sbb
sbb
sbb
add
js
mov
cmp
rorl
insb
or
gs
push
pop
mov
ljmp
push
sub
pop
sbb
out
fnsetpm(287
xchg
cmp
and
and
pop
mov
mov
add
popf
les
call
stos
cmpsl
lock
mov
dec
mov
outsl
pop
lods
jnp
test
mov
adc
ljmp
or
push
jmp
lahf
push
mov
ret
mov
mov
clc
lret
std
es
jle
dec
dec
sti
cmp
iret
int3
dec
push
inc
xchg
out
push
popa
loop
jo
ljmp
das
fisttps
notb
out
cwtl
mov
testb
push
add
lcall
jno
jo
ficomps
test
mov
repnz
cs
out
mov
roll
roll
shlb
sbb
cmp
jmp
inc
xchg
cmp
lcall
ljmp
cs
fs
lahf
lahf
in
pop
cmp
rclb
sbb
pop
mov
jp
add
das
mov
sub
and
mov
fbstp
sarl
push
push
xor
lcall
popf
inc
xor
or
jo
or
rcl
in
popa
xchg
in
gs
addl
inc
add
jge
add
ret
insl
movsb
sbb
stc
jecxz
fbstp
adc
addr16
cs
cmp
dec
fildll
cmp
mov
push
push
ja
shll
call
xor
adcl
in
in
cmpsl
add
sub
sub
mull
lahf
les
push
pop
subl
push
add
imul
aaa
jmp
jne
movsb
jae
test
loopne
cmp
repnz
cs
dec
jmp
xor
jae
mov
and
pop
jbe
mov
pop
aam
or
popf
pop
sbb
or
mov
ret
mov
mov
jbe
cmp
sbb
push
daa
inc
sahf
into
jp
jb
xor
iret
fists
sbb
mov
xchg
in
fwait
sub
inc
sbb
pop
adc
pusha
or
mov
loope
ret
arpl
hlt
sub
or
xchg
mov
popf
incl
js
cmp
inc
in
xlat
insb
and
dec
sbb
xor
xchg
jbe
jno
lahf
les
push
fstpl
inc
xchg
push
scas
jno
push
xlat
out
ret
xchg
jo
ja
pop
xchg
in
les
push
not
out
sub
test
test
test
jmp
inc
in
ds
enter
cmp
jnp
lcall
mov
cmc
push
adc
loope
mov
cwtl
and
imul
xchg
pusha
add
leave
pop
push
push
cwtl
inc
pushf
stos
ljmp
mov
outsl
pop
add
flds
cs
cmp
gs
push
pop
sahf
in
ss
lret
cmp
outsb
sbb
movsl
or
push
rolb
in
fsts
stos
into
mov
sub
xor
sbb
jnp
dec
pusha
out
nop
dec
or
jl
xchg
fmul
ret
push
cmp
aad
sbb
pusha
mov
ret
cli
add
dec
push
cmpsb
aaa
push
lods
xor
fcmovu
in
or
mov
pop
adc
mov
ljmp
jecxz
adc
sarl
int
xchg
test
mov
xchg
jae
testl
add
xchg
out
aaa
lcall
fsubrp
jns
xor
inc
aam
pop
fs
fisubs
aaa
lahf
mov
popa
pushf
call
or
out
je
xor
ja
in
sub
xor
xchg
inc
jg
adc
sbb
aam
or
sarl
enter
add
gs
data16
inc
sbb
inc
cmpsb
enter
in
sub
pop
in
jmp
push
xor
xor
jg
push
test
test
add
leave
rcrl
fists
ja
loopne
scas
inc
loope
push
xor
xlat
and
pop
mov
jno,pt
mov
sbb
lret
je
cwtl
add
mov
push
and
push
cmp
int
stos
mov
mov
jg
popa
mov
popa
push
fstps
cwtd
out
scas
sbb
mov
fidivrs
jno
sub
cmp
insb
inc
or
push
cmpsw
test
scas
shrl
and
rolb
sbb
jnp
bound
orb
push
xchg
popf
lea
out
adc
mov
jl
ds
sbb
push
push
mov
clc
pop
lahf
out
sub
xchg
faddl
fbstp
adc
pop
loope
xchg
adc
jne
push
repnz
inc
test
out
xor
pushl
insl
cld
sti
xchg
push
push
cmp
dec
fs
scas
jae
push
jg
aas
or
push
test
add
gs
adc
add
ljmp
dec
mov
aaa
lcall
jge
mov
out
dec
popa
jae
cmc
testl
dec
add
hlt
les
inc
pusha
and
dec
push
les
xchg
aad
fisubl
adc
xchg
repz
iret
in
fwait
jnp
insl
and
inc
ljmp
into
subb
sub
inc
push
mov
push
xor
mov
psrld
jo
jb
jmp
sahf
mov
scas
jg
fidivrl
fsub
sub
scas
test
cmp
or
shrl
sub
sahf
or
inc
je
lahf
divl
and
push
bswap
mov
lcall
sbb
stos
xor
aad
push
stc
mov
loope
adc
les
in
lret
push
ret
pop
loope
imul
popf
data16
mov
rcl
and
add
nop
lods
pushf
fldt
mov
jl
add
push
js
movsl
or
aaa
push
orl
xor
test
push
cmpsl
pop
aam
imul
sti
call
jae
sbb
subb
movsl
scas
cmpsl
std
filds
xor
cmp
lock
mov
xchg
mov
fadds
mulb
imul
dec
fisubrs
adc
xor
dec
jo
mov
mov
dec
popf
mov
roll
pusha
adc
mov
mov
inc
jl
repz
push
in
shlb
mov
jns
outsb
pop
xor
popf
inc
mov
dec
mov
jnp
cmp
sub
stc
mov
leave
or
aas
cmp
nop
jno
ss
jp
out
lock
or
mov
lods
push
sahf
or
fistpl
cmp
loopne
mov
ljmp
push
test
mov
adc
cmpsb
out
sbb
pop
add
or
jg
or
movb
mov
subl
inc
notl
fstps
negb
dec
int3
jmp
dec
mov
jmp
pop
xchg
xlat
sub
into
test
push
sub
aas
push
mov
xor
jbe
cltd
cs
test
push
mov
cmp
bound
loop
das
inc
jae
pop
cmpsb
rcl
stc
and
push
shlb
xlat
push
ja
out
inc
aad
rcrb
aad
mov
fldcw
pop
mov
push
jmp
push
ret
popf
rclb
popf
cmp
dec
add
adc
fsubp
aad
cmpsb
and
push
adc
ljmp
push
mov
dec
out
cmc
sub
lea
pop
sub
mov
push
scas
std
hlt
leave
es
push
add
sub
sti
addl
and
lret
pop
inc
icebp
adc
notb
mov
imul
or
and
xor
stc
jle
inc
std
mov
lods
add
xlat
add
cmp
enter
mov
shrb
ljmp
sub
shrb
shrb
sahf
das
enter
xor
cmpsl
movsl
fstpl
add
sbb
out
cmp
loop
test
lea
xchg
inc
enter
jmp
ljmp
cltd
adc
nop
scas
dec
imull
cmp
outsl
in
ja
push
movsl
ja
notl
rcrb
cmpsl
pop
xchg
fbld
pop
jb
pop
sub
add
stos
dec
dec
pmuludq
mov
xor
leave
push
cmp
jne
scas
ljmp
std
jns
push
test
ss
and
xchg
dec
stos
cmpl
ror
fidivl
pop
mov
and
mov
mov
aaa
fwait
jle
aad
push
jbe
loope
dec
in
push
pop
fsts
inc
jb
mov
xchg
lahf
in
mov
jnp
push
xor
xchg
and
filds
pop
sbb
outsl
lock
push
mov
mov
jo
ret
xchg
out
sbb
out
xchg
fdivs
cmpsl
add
inc
imul
xor
mov
sbb
xchg
shrb
sbb
or
add
add
and
and
incb
mov
mulb
shlb
mov
fldenv
add
rcll
iret
inc
add
mov
pop
push
add
jmp
shlb
testb
fmull
cwtl
mov
rcrl
fiadds
fsubs
xor
jmp
out
in
add
or
aaa
iret
aaa
popf
jg
xchg
jne
dec
or
js
push
outsb
xchg
shlb
int
xor
cmpsl
jp
adc
es
out
clc
xchg
sub
out
js
or
xor
sub
lret
repnz
sbb
mov
sbb
adc
add
push
test
fidivrl
sbb
or
sub
or
pop
xor
adc
jbe
dec
mov
jb
push
xor
call
test
adc
push
cltd
cmp
fidivs
add
je
xchg
jno
ficoml
or
imul
adc
ljmp
adc
stos
push
push
xor
rolb
sbb
cmp
orl
lret
pop
adc
inc
lcall
mov
push
jecxz
cmp
std
inc
insb
leave
dec
cwtl
mov
xchg
mov
into
pop
push
push
cmp
lods
out
adc
stc
cld
adc
aas
adc
mov
jmp
push
enter
push
or
add
or
orl
push
jo
es
cmpsl
out
cld
jmp
fstpl
and
adc
or
and
mov
out
sub
mov
dec
xor
aam
push
cmp
fsubrs
pop
inc
testl
lret
mov
jmp
mul
enter
nop
lcall
scas
inc
lret
les
fsubrs
mov
add
pop
aas
push
lahf
lea
add
mov
mov
std
insl
mov
inc
fdivrs
out
into
sub
push
popf
and
jge
lds
add
stc
loope
mov
popf
xor
add
dec
xor
push
mov
lret
xor
test
push
das
jecxz
inc
dec
xchg
ss
cmp
sbb
dec
dec
adcl
les
sbb
lret
inc
data16
jl
shlb
repz
mov
xor
aaa
push
or
jne
mov
xchg
sbb
les
in
mov
or
adc
mov
mov
jb
sets
fstl
testl
fstl
rolb
mov
decb
punpcklbw
jp
aam
stos
sbb
bound
jbe
add
adc
inc
movsl
jmp
insl
decl
ljmp
sbb
pop
lahf
jns
xchg
movsb
xchg
fildl
imul
mov
xor
rclb
das
sbb
aad
mov
mov
rcll
add
jo
stos
pop
cmp
push
in
sar
in
daa
push
call
dec
enter
and
orl
pop
les
test
pop
push
in
cwtl
add
push
inc
dec
mov
cmp
movsl
inc
mov
int
incb
fs
clc
pop
test
stc
sub
dec
push
je
ret
les
cmp
repz
cld
test
mov
loop
aas
loopew
cmp
out
xor
adc
xchg
push
lods
das
jbe
or
das
cmp
cmp
aam
loop
adc
lds
pop
test
addr16
inc
nop
pushf
pusha
in
add
xchg
push
xor
clc
add
sbb
pop
adc
xchg
dec
sbb
jl
das
adc
xchg
sub
adc
xchg
pop
fistpl
add
jo
fldenv
xchg
inc
sbb
es
adc
jmp
mov
or
jb
dec
mov
popa
add
mov
inc
inc
lods
pop
int3
mov
sbb
or
pop
in
xlat
mov
cwtl
mov
js
mov
test
jge
mov
test
aas
aaa
pop
data16
test
js
lcall
out
pop
jno
test
dec
push
push
lret
mov
add
out
adc
pop
lahf
rcrl
into
mov
jmp
lret
mov
rclb
mov
pop
add
ljmp
ja
adc
ljmp
adc
test
stos
sbb
hlt
jbe
push
jb
cmpsl
scas
mov
loop
cmp
js
repz
stos
pop
sub
call
xor
mov
notb
fwait
jnp
fs
cmp
rcrl
imul
pop
dec
scas
adc
add
cmp
aaa
fnstenv
test
dec
sbbb
jae
stc
aaa
mov
cltd
hlt
lret
add
sub
pop
inc
stos
jl
shl
xchg
mov
frstpm(287
mov
push
jno
test
jbe
cmc
mov
sbb
fcompl
add
inc
outsl
movsl
mov
adc
lahf
nop
push
orb
sub
aaa
sub
testl
addr16
xor
into
add
pop
enter
adc
dec
daa
fmulp
xchg
imul
mov
xor
test
cmc
push
in
aad
into
and
sahf
jne
gs
mov
movsl
jle
outsb
test
cmc
push
in
aad
into
and
sahf
jne
gs
mov
stos
jle
outsb
sbbl
shrl
into
and
adc
mov
pop
scas
mov
jle
outsb
lds
cmc
push
in
push
cs
push
adc
push
sbb
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
fwait
add
push
mov
bound
fcompl
subb
cmp
imul
loop
adc
and
push
fildl
jb
sbb
xchg
sbb
dec
mov
jnp
mov
fwait
add
push
fildl
jb
bound
xchg
cmp
dec
xchg
xchg
sub
dec
stos
pop
shlb
les
inc
add
jo
ret
jno
mull
jnp
fcmovb
xchg
rcl
cmpl
addr16
mov
cmpsl
lret
push
fcmovnb
pop
jp
push
aad
sbb
pop
or
adc
xadd
and
pop
or
and
push
jmp
repnz
rol
call
push
mov
jne
icebp
and
mov
sti
pushf
sti
insl
xchg
jge
les
rcrb
xchg
clc
lock
pushw
push
bound
xor
sti
lret
pop
sbb
or
into
cmpsb
dec
mov
sbb
jnp
mov
arpl
loopne
push
mov
jmp
dec
sbbl
dec
push
mov
rorb
xchg
lods
bnd
dec
adc
and
push
fildl
jb
bound
xchg
sbb
dec
rcrb
imul
mov
push
clc
inc
in
xor
and
xor
ss
jle
pop
xlat
jle
int
sbb
std
ja
addr16
scas
ds
push
scas
sbb
sti
push
loope
mov
movsb
adc
in
inc
fiadds
jl
inc
jmp
sti
bound
xchg
sbb
dec
rcrb
imul
loop
adc
and
push
fildl
jb
bound
xchg
sbb
dec
rcrb
imul
loop
adc
push
ffreep
loopne
fidivl
cmc
dec
dec
pop
and
sub
or
popa
sbb
push
adc
das
ret
push
adc
outsl
iret
lds
sahf
test
inc
pop
push
sbb
mov
dec
rcll
mov
in
call
pusha
in
pop
mov
les
cmp
psubusw
and
dec
pop
hlt
outsb
fwait
mov
aaa
test
push
aaa
stos
cmpsb
das
inc
mov
xchg
popf
xchg
lcall
fbld
sub
mov
jnp
cmpb
rcr
rclb
shll
lahf
fimull
or
jno
xor
inc
mov
adc
dec
stos
test
jnp
push
push
psubq
int
int3
mov
out
cmp
jae
push
adc
mov
shr
pop
push
push
push
pusha
in
bound
test
ljmp
and
push
test
adc
jno
pop
nop
add
xchg
popf
cmp
dec
mov
xchg
jl
jae
and
push
rcrb
mov
sbbl
mov
mov
js
adc
pushf
lds
int3
add
fistps
inc
and
mov
pop
daa
xchg
add
les
push
call
mov
mov
mov
lods
mov
scas
fstpl
inc
inc
jge
push
cmpsl
test
cmp
insl
push
dec
je
adcl
aam
xchg
add
pop
call
rorl
mov
mov
add
or
or
add
xor
xor
into
pop
notb
movsl
pop
aaa
cmp
jecxz
add
mov
outsl
gs
cmp
cs
jo
inc
cld
sti
fldl
and
fnstcw
sub
jae
ffreep
sub
dec
add
dec
stc
dec
jg
jecxz
mov
xor
xchg
sbb
gs
dec
hlt
and
mov
jl
xchg
scas
imul
jecxz
imul
inc
jne
xchg
out
or
or
stos
push
rcll
sar
adc
jmp
xchg
jp
jo
nop
fcmovnu
cmp
xor
xchg
dec
fwait
icebp
jecxz
mov
repz
push
in
xor
adc
lret
ljmp
mov
mov
cmp
fstps
pop
iret
ds
xchg
xor
xrelease
sbb
or
lods
test
test
cmp
rcl
mov
sub
xor
iret
pusha
in
movsb
mov
or
pop
cmp
fnstsw
lock
adc
hlt
mov
jo
mov
push
sbb
jmp
mov
fisttpl
inc
xlat
cwtl
fwait
dec
sbb
push
dec
cmpsl
xchg
pushf
mov
mov
lods
insb
imul
push
fstl
insb
adc
push
test
sub
lock
push
push
push
xchg
pop
pop
iret
add
add
mov
jmp
shl
sti
pop
je
push
mov
sbb
pusha
pop
sub
negl
fidivrl
ds
cmp
add
in
lret
xchg
mov
fiaddl
sahf
mov
and
sbb
or
cmpsl
or
into
and
lret
scas
repnz
test
inc
cmp
mov
ficoml
fidivl
push
sahf
int3
orl
into
adc
mov
add
cmpsl
xchg
mov
xchg
jnp
pop
movl
sub
jl
inc
mov
push
lahf
cwtl
fs
mov
push
jmp
mov
cmc
int
inc
dec
sub
call
ja
cmp
fisubs
add
jae
sbb
mov
xchg
lret
mov
arpl
fs
push
in
sbb
mov
sub
rcr
fldcw
aad
das
push
scas
test
xor
rolb
test
repnz
push
jae
lcall
pusha
mov
xor
push
xchg
mov
gs
sarb
pavgw
push
and
in
jecxz
dec
xor
cltd
orl
xchg
aam
insl
loope
je
mov
scas
dec
push
cs
pop
cmc
lds
add
js
loope
push
iret
mov
xchg
cmp
lret
dec
movsb
lods
inc
dec
jecxz
push
adc
pop
pop
mov
inc
imul
cmc
xlat
cmp
mov
sti
adc
xchg
inc
push
jge
rcl
and
sub
mov
dec
mov
dec
ljmp
js
in
int3
movsb
aam
call
cmovg
mov
xlat
arpl
xor
cmpsl
mov
cmp
cmp
std
cld
rclb
xor
movsb
iret
or
add
fdivr
jae
and
mov
cwtl
jmp
lds
sub
scas
sub
mov
dec
push
inc
or
mov
je
cmova
enter
mov
inc
out
popa
ja
lcall
cli
js
jecxz
je
inc
mov
pop
ret
popw
sub
xlat
ljmp
xchg
imul
aas
cmp
fnsave
icebp
fisubrl
and
lods
lods
cs
mov
lods
add
in
pushf
iret
inc
and
jne
xor
add
adc
aad
jge
rcr
adc
orl
dec
test
adc
xor
jne
aaa
icebp
outsl
sub
pop
push
jbe
mov
adc
cmc
out
sub
aad
mov
push
xchg
in
ja
cli
fidivs
push
sarb
in
pop
adc
loop
jmp
inc
ss
insb
xchg
loope
les
ss
hlt
call
imull
mov
xchg
aas
push
and
add
adc
ja
lods
and
popf
inc
movsb
push
and
js
jge
sbb
pop
mov
fdivrs
shl
xor
push
scas
mov
aas
adc
pop
fstl
sbb
pop
iret
and
int
mov
andnps
mov
sahf
lahf
inc
push
cmp
push
repnz
push
jge
out
mov
rcrl
hlt
subl
in
cmp
imul
mov
cmp
jne,pn
jp
xor
sbb
xor
sub
scas
add
push
dec
inc
mov
pusha
xor
ret
lidtl
xor
ds
in
sbbb
imul
inc
and
pop
push
mov
mov
and
and
ja
and
xor
dec
jp
push
jbe
sub
jb
mov
push
imul
or
mov
cmp
add
ds
out
test
shl
inc
and
fdivrs
insb
hlt
in
cmpsl
inc
jo
sbb
shrl
scas
ljmp
push
pop
cmp
mov
fnstcw
push
aam
movb
incl
sub
xchg
mov
in
lea
loope
jae
lret
stos
cli
xor
fs
popa
loop
into
push
inc
adc
sub
outsl
dec
sub
leave
lahf
out
fnstcw
mov
or
gs
push
aad
bound
and
popa
xor
ljmp
push
dec
add
movsl
mov
cmp
or
mov
xchg
ret
and
xor
je
std
mov
mov
and
cmp
lock
hlt
jae
cmp
xchg
insl
push
pop
outsb
sahf
inc
sbb
out
lods
mov
jg
cltd
das
cwtl
or
cmp
or
push
sbb
daa
out
dec
cmc
data16
and
jb
and
in
loope
dec
and
mov
jns
rolb
inc
cs
movsb
int3
bound
mov
ret
imul
push
mov
in
arpl
pop
jg
insb
packssdw
xchg
dec
insl
pushl
hlt
movsb
adc
adc
repnz
sub
stc
mov
add
xchg
push
pop
sbb
mov
mov
push
inc
xchg
add
push
push
sbb
xchg
test
jle
push
lret
mov
xor
leave
pop
fs
fistpl
adcl
add
cs
add
and
call
aam
push
pusha
imul
add
add
and
xchg
int3
xchg
jno
mov
fcomps
in
les
mov
push
call
clc
adc
inc
xor
outsl
popf
int
loopne
lcall
mov
and
outsb
xchg
ror
fld
xor
jge
push
fs
aas
jb
cmc
repz
scas
or
inc
test
loope
scas
ret
fists
shll
subb
insb
sbb
inc
es
lods
insl
push
js
inc
in
xor
push
jne
xchg
sub
mov
cmc
inc
sahf
sbb
add
xchg
push
aad
pop
pop
sbb
sub
dec
xchg
cmp
or
dec
stos
sti
pushf
repnz
jmp
mov
and
mov
scas
cltd
jge
imul
or
sbb
pop
push
shrl
xchg
add
fs
adc
push
cs
jne
pushf
dec
push
out
jbe
popl
mov
es
jnp
pop
cmpb
inc
lock
pop
xchg
movsb
in
sub
inc
in
movb
les
push
push
lret
lock
test
pop
adc
jmp
rorl
xchg
mov
sbb
jae
pop
cmp
lods
sub
es
or
adc
xor
mov
ret
sub
mov
xchg
mov
push
fdivrl
or
nop
pop
out
mov
cli
repz
rcrl
mov
push
shl
xor
or
in
data16
loop
outsb
jns
sbb
jno
bnd
and
ja
cmpsl
lds
popa
and
pop
lret
jmp
mov
cmpsb
dec
outsl
and
pop
push
push
and
pop
imul
inc
loop
pop
sti
data16
xor
lods
sahf
inc
cmpsl
nop
mov
fucomi
push
pop
push
or
cld
push
daa
cmp
inc
inc
sahf
sbb
push
imul
call
fcoms
int3
mov
out
xchg
lret
gs
cmp
jecxz
cmpsb
sti
add
mov
or
xlat
mov
das
in
mov
lds
nop
mov
cmp
push
gs
aas
lock
or
push
popf
mov
cmpsl
push
xchg
ret
test
dec
jmp
jnp
lds
push
loop
nop
insl
jb
dec
ss
scas
sbb
int3
mov
lret
fdivrp
jb
push
mov
imul
and
in
and
shlb
nop
inc
jne
int3
pop
ljmp
aas
fs
mov
mov
dec
xor
sbb
mov
push
lods
divl
repnz
xor
mov
hlt
xchg
in
pushf
push
popf
push
jns
sub
inc
inc
js
ljmp
push
sub
jle
fwait
cmpsl
sub
sbb
xchg
cmp
mov
xchg
jl
xlat
dec
mov
addb
js
adc
mov
push
xor
ret
rcr
mov
lcall
cmpb
dec
cmp
out
nop
pop
jp
jp
pop
fisubl
jno
sbb
dec
sti
mov
mov
in
test
jno
repz
daa
imul
and
mov
xor
mov
sti
cmp
clc
sbb
dec
jge
pop
adc
movsl
nop
cmpsb
sbb
adc
test
insb
pop
lret
xchg
xlat
pop
mov
inc
cmc
sub
cmp
rclb
adc
repz
and
out
xchg
lods
gs
outsl
mov
gs
bound
mov
loopne
add
xchg
imul
sahf
je
adc
addr16
xor
pop
cld
repz
loopne
adc
or
sarb
xchg
xchg
adc
loopne
xor
ficoms
mov
out
pop
mov
in
inc
mov
xchg
aam
pop
jbe
mov
cltd
jne
cmpb
pop
repz
cmp
jmp
aam
xchg
rol
scas
sub
dec
xor
jns
inc
sub
mov
jp
sub
or
inc
dec
int
aad
mov
mov
mulb
fwait
cmc
mov
push
lcall
sub
jge
xchg
adc
es
into
sti
pushf
cmc
bnd
add
mov
mov
jp
adc
cmpsb
frstor
pop
xor
mov
lods
pop
ret
mov
mov
stos
negb
ljmp
jp
daa
dec
mov
popf
adcb
jno
repnz
je
fsubrp
fistpll
dec
mov
push
lock
cld
mov
insb
leave
outsl
pop
add
std
mov
lret
cmp
push
lds
cmpsb
icebp
jecxz
shlb
pop
jb
mov
adc
jns
push
push
pop
sbb
cmpb
pop
shr
mov
push
ljmp
cmpsl
mov
ret
cmp
out
fsub
sbb
jge
ret
popa
xor
or
sub
add
mov
ss
arpl
xchg
xlat
push
scas
dec
mov
cmp
pop
fbstp
repnz
sbbb
cmp
adc
inc
xchg
and
repz
mov
fcmovb
pop
dec
mov
xchg
int3
fdiv
movsb
xchg
mov
pop
pop
xor
shr
xlat
in
or
jne
xor
or
clc
daa
add
inc
in
das
jecxz
pop
adc
test
xchg
test
push
pop
push
shlb
arpl
repnz
ds
and
or
subb
dec
cmp
pop
jb
insb
ret
rcr
mov
mov
lods
mov
push
xchg
pop
aas
xor
inc
icebp
pushf
ret
fnstcw
pop
cmp
mov
jns
adc
and
ss
sbb
out
mov
out
test
test
test
imul
mov
repnz
psadbw
dec
cmc
sbb
test
mov
mov
icebp
fistpl
xchg
sub
cmp
inc
cmpsb
scas
xchg
jnp
adc
dec
jne
xchg
jmp
push
scas
xchg
cwtl
sti
pop
mov
or
xchg
add
pushf
inc
cmpsl
pop
das
pop
aad
fdivrs
inc
sbb
out
fistpl
and
mov
lret
mov
and
cmpsl
loop
inc
cld
mov
nop
jo
add
fcomps
and
add
stos
push
xchg
les
repz
out
sub
sub
data16
iret
and
ficomps
and
adc
jns
fcompl
out
sub
or
mov
ret
cmp
add
stos
inc
jns
mov
mov
popa
lock
xchg
cmp
inc
cmp
ret
test
adc
inc
xchg
stc
stos
xor
movsb
ljmp
pop
jge
gs
stc
xchg
out
or
mov
sbb
sub
movsb
jge
pop
ret
scas
pop
adc
xchg
inc
cs
pop
jge
pop
push
mov
movb
mov
fsubrl
xlat
pop
sahf
test
add
push
jmp
xor
sbb
mov
xor
mov
inc
out
fcmovu
cltd
mov
mov
repnz
inc
mov
scas
mov
lds
add
dec
mov
push
enter
jo
jb
mov
sbb
mov
scas
inc
daa
imul
jae
mov
ljmp
sbb
fst
pop
rcrb
jae,pn
push
sbb
dec
out
jno
cltd
add
dec
push
js
dec
movb
paddusb
jle
mov
sahf
mov
pop
cli
pop
repz
lret
pop
test
dec
adc
mov
xchg
insl
xchg
pop
or
sahf
outsl
jg
push
aaa
aaa
add
fnstcw
imul
ja
or
xchg
stos
test
loop
mov
xchg
fldl
add
movb
or
sbb
mov
mov
adc
divps
adc
loop
pop
inc
add
cmpsb
xchg
jns
lret
xchg
xchg
sub
mov
sbb
xchg
add
jp
aad
and
movsb
test
daa
test
push
iret
cmp
pop
pop
inc
leave
push
ret
push
sub
and
das
sahf
insl
push
and
aas
insb
ds
mov
stc
dec
and
inc
lret
mov
lahf
repnz
ret
rolb
inc
cs
test
ret
rcrl
in
aaa
pop
sub
sub
shll
mov
or
inc
cmpsl
vmovd
add
movntq
and
call
mov
pop
adc
mov
mov
popa
and
mov
adc
sub
mov
mov
pushf
push
sbb
pop
stc
sub
cmp
inc
jg
sbb
pop
cmp
pop
pop
enter
fnstsw
fwait
cmp
hlt
adc
dec
pop
movlps
or
mov
push
loope
add
int
cmp
jb
sub
inc
xor
cltd
xor
shll
xchg
and
push
sub
fwait
pop
imul
pop
jl
int3
xchg
xchg
sub
sti
lcall
sub
sar
cmpsl
js
lods
mov
aaa
out
out
cmp
jae
loop
int
js
std
adc
sbb
adc
sub
notl
mov
popf
pop
jnp
sub
in
cmp
push
aaa
cmpsb
call
push
out
lds
lds
loope
fucomp
sub
iret
mov
lret
cmpsb
imul
dec
xor
sbb
aad
push
or
ror
in
push
call
iret
iret
xchg
lods
enter
pushf
inc
pusha
daa
inc
jg
ja
lods
xchg
cmp
daa
dec
cmp
mov
mov
push
daa
in
add
cmp
dec
jge
pop
dec
or
cmc
lods
inc
js
jb
cmpsb
adc
lahf
js
bnd
jno
jle
imul
std
mov
sbb
fimuls
fs
insl
je
mov
mov
loop
push
mov
mov
cltd
shrl
push
imul
dec
pop
imul
adc
adc
or
imul
pop
leave
mov
jb
and
mov
rcll
mov
jne
jge
popa
iret
mov
aas
or
int
adc
jns
sbb
js
das
xchg
dec
and
mov
push
cmp
mov
or
loopne
jne
in
js
mov
testl
jecxz
pop
xchg
jmp
inc
stos
cltd
enter
push
out
sbb
int
imul
cltd
rclb
jae
pop
and
push
fdivl
lcall
loope
inc
jl
in
aam
mov
xchg
lret
sti
aas
fstpt
rorl
ss
lcall
mov
pop
jnp
inc
lret
hlt
jl
cmp
jl
push
inc
cs
jnp
icebp
add
cmp
adc
das
push
pop
mov
mov
sub
xchg
and
or
mov
and
pop
arpl
clc
lcall
add
imul
rcr
daa
and
sbb
iret
xchg
add
pop
cmc
bnd
xchg
out
add
iret
dec
and
xchg
rcll
push
xchg
pop
or
lock
xor
xor
push
xor
ljmp
add
imul
and
and
movsl
jne
jb
fnsave
cmpsl
dec
mov
xor
cltd
insl
pop
and
add
mov
jo
aad
addr16
or
mov
or
stc
hlt
movsb
push
and
add
jbe
in
and
ret
sub
lods
lea
aam
inc
lods
scas
stc
or
clc
sbb
mov
ret
push
cwtl
mov
pusha
jge
popf
cmc
mov
int
adc
xchg
pop
mov
push
mov
fsubs
push
dec
nop
add
mov
sbb
sbb
jne
in
scas
cmp
mov
jg
push
mov
insl
scas
testb
or
mov
mov
or
dec
inc
cmp
das
lods
cmp
in
nop
pop
adc
adc
push
test
mov
push
fwait
sbb
iret
in
mov
push
imul
js
adc
pop
xor
push
out
sub
xor
xor
jno
repnz
lea
cld
push
dec
jecxz
push
mov
sub
lcall
sub
pop
sbb
and
jle
xchg
outsb
test
mov
test
adc
mov
loope
cmp
push
aaa
sahf
adc
xlat
xor
push
pop
dec
cmp
aam
minps
scas
cmp
jns
sbb
sbb
xor
test
mov
repz
ss
cmp
call
mov
pop
scas
push
add
jns
push
add
add
in
std
or
adc
add
fildl
jb
bound
xchg
sbb
dec
rcrb
imul
loop
adc
and
push
fildl
jb
bound
xchg
sbb
dec
rcrb
imul
loop
adc
and
push
fiaddl
jb
bound
xchg
sbb
dec
rcrb
push
jnp
mov
fwait
add
push
fildl
jb
hlt
xchg
in
xorl
sbbl
sub
cmp
sbb
jl
mov
pushf
and
pushf
arpl
jae
orl
mov
dec
rcrl
repz
mov
pushf
and
fsubl
jae
orl
mov
dec
rcrl
repz
mov
rorb
mov
push
mov
push
or
or
stos
lods
bnd
lret
push
add
addr16
lret
add
pop
cmp
shll
xor
mov
xor
incb
rcrl
fwait
lret
push
dec
sbb
std
add
and
cs
push
adc
xor
sbb
in
dec
test
sub
mov
pop
inc
mov
adc
jl
jae
inc
cli
dec
rcrl
mov
jmp
inc
popf
cmpsb
push
dec
adc
cltd
xor
jb
jle
insb
in
sub
and
cmpsl
repz
push
jae
fsubrl
fisubrs
es
repz
dec
or
sbb
sub
cmp
dec
rcrl
repz
mov
pushf
and
fsubl
jae
ret
iret
lret
jp
and
or
loopne
cmc
and
dec
rolb
push
movsl
add
cltd
out
notb
sub
imul
xchg
jb
add
lock
xor
inc
mov
push
xchg
out
xchg
push
and
pop
jecxz
repz
mov
pushf
and
fsubl
jae
orl
mov
dec
rcrl
repz
mov
pushf
and
fsubl
jae
orl
ficomps
mov
dec
lcall
icebp
mov
das
jo
inc
lcall
xor
lods
inc
leave
data16
mov
sti
xor
lret
push
pop
adc
sub
push
add
fwait
cmpsb
and
pop
mov
loope
aad
mov
shll
jnp
sub
leave
pop
xor
das
lods
adc
dec
data16
pusha
loop
fisttpl
cmp
mov
cmp
stos
repnz
adc
xorb
outsl
fidivrl
aas
subl
fldl
lds
mov
add
xor
xchg
push
cld
ret
out
and
test
stc
pop
mov
inc
nop
mov
fldl
cld
test
movsl
jne
sub
aaa
jmp
cwtl
pop
out
jge
aaa
inc
les
adc
adc
pop
jo
xchg
mov
inc
popa
and
aam
jb
in
dec
jle
mov
out
scas
int
xchg
cmp
cmc
rclb
clc
push
mov
xchg
jns
in
or
mov
cmp
movsb
int
sbb
pop
and
mov
sub
hlt
dec
dec
mov
xchg
lods
pop
dec
mov
out
sub
lods
jmp
mov
fs
daa
pusha
dec
adc
ficompl
mov
mov
enter
jl
js
sub
cmp
orl
ss
scas
jecxz
scas
loopne
cli
int
cltd
adc
test
movsb
mov
cmpb
or
icebp
add
hlt
sti
sbbb
popa
lret
rol
stos
fldenv
sub
pop
movb
mov
pushw
jno
shl
js
aad
jmp
dec
imul
mov
out
push
stos
dec
cmp
pop
repz
addr16
and
mov
mov
data16
add
sub
jp
jns
nop
pop
pop
je
xor
lods
adc
cmpsb
mov
cs
adc
filds
adc
mov
insb
test
mov
fists
mov
fucomp
or
adc
fisttps
inc
rclb
jmp
ljmp
dec
jge
inc
repnz
xchg
shl
orb
fildll
mov
nop
std
push
fisubl
movsl
ret
rolb
fistpl
jnp
xor
mov
cmp
in
cli
rorb
aaa
leave
bound
lret
lahf
aaa
add
int
popa
loop
inc
pop
daa
loope
icebp
test
sbb
mov
add
jmp
out
mov
cmp
aas
lods
jg
xchg
mov
pop
stos
xor
pop
sbb
and
imul
out
dec
les
repnz
sbb
imul
and
pop
xchg
push
in
mov
loop
ret
mov
xchg
inc
or
test
mov
pop
sbb
jp
shlb
dec
adc
clc
push
mov
xor
fwait
cmp
mov
mov
xchg
push
clc
push
lret
add
nop
cmp
add
pop
push
lret
sahf
push
dec
scas
xchg
das
jbe
cmp
daa
mov
sbb
dec
xorl
cwtl
mov
lods
xor
mov
gs
pop
mov
push
mull
std
cmpsl
outsb
stc
cltd
cld
lds
add
into
cs
movsl
iret
data16
pop
add
test
cli
jg
lret
inc
jmp
xchg
sbb
add
mov
jae
pop
adc
or
mov
ljmp
dec
inc
fwait
rolb
cs
roll
leave
idivl
call
add
fucomi
cmp
stos
outsb
pop
cmp
fcoms
mov
mov
adc
popf
xor
insl
sub
lea
iret
cmp
mov
inc
mov
hlt
enter
stc
loop
das
out
lcall
sbb
xchg
pcmpgtw
scas
sbb
shll
xchg
push
xchg
xchg
sbb
jnp
notl
fiadds
imul
adc
cld
loope
pop
sbb
pusha
dec
repnz
add
scas
add
lock
sbb
cmp
jbe
bound
inc
mov
cmp
push
jbe
add
ss
jne
push
sbb
add
mov
sub
push
dec
xchg
sbb
xlat
cltd
lock
jp
inc
or
xor
xchg
dec
lock
cmp
adc
jmp
sub
lret
popf
popf
sbb
jl
pop
leave
outsl
std
hlt
adc
fcomps
mov
mov
loope
arpl
xor
xor
dec
and
add
mov
rolb
repz
push
outsb
jo
xor
inc
cmc
push
hlt
out
or
xchg
js
test
sti
xchg
xor
nop
jmp
dec
mov
push
mov
imul
mov
xchg
into
mov
xchg
or
sub
hlt
xchg
shrl
pop
inc
xchg
aas
shlb
add
adc
aas
cmpl
sbb
fstl
push
cmp
mov
lods
scas
out
push
xor
xlat
or
jg
enter
xorl
lret
sub
mov
imul
or
lea
mov
xchg
test
or
aam
idiv
mov
xchg
pop
arpl
sbb
push
pusha
cltd
sahf
or
stc
add
dec
lock
jmp
and
movsl
pop
jns
rorb
push
pop
jmp
pusha
aam
xor
mov
lds
out
mov
aad
imulb
aas
std
inc
cli
je
lods
mov
lret
and
sub
adc
sub
test
loope
sbb
insl
sbbl
pop
cmp
cwtl
mov
cmp
loopne
sbb
jb
subb
dec
fwait
ret
imul
xchg
pop
jo
mov
xchg
add
cmpsl
repnz
xchg
jb
lret
fsubrl
push
ds
rcll
scas
sbbb
sbb
dec
sub
lock
mov
xchg
je
subl
test
scas
push
mov
jle
shlb
cmc
cli
lds
xor
dec
xchg
addb
jae
ret
push
sub
int3
dec
pop
out
repz
scas
dec
and
jg
ss
push
jecxz
xchg
aam
or
mov
orl
adc
push
dec
ficoml
out
or
out
test
adc
cltd
int
sbb
mov
loope
add
pop
xor
jmp
pop
in
pop
jnp
lahf
add
and
and
ja
outsl
sbb
cs
xlat
cmp
cmp
jmp
pop
push
or
or
and
out
sar
stos
or
or
lds
enter
dec
sub
add
xchg
push
push
add
movsb
adc
xchg
sub
shlb
divl
mov
cs
push
andb
scas
or
push
sahf
mov
stc
pop
mov
repz
xor
add
lret
lret
dec
push
sub
lods
ss
mov
dec
add
call
addr16
fdivrs
pushf
leave
mov
movsl
dec
xor
data16
cmp
shlb
stos
adc
dec
inc
mov
ss
fwait
dec
inc
push
idivb
push
hlt
imul
dec
mov
mov
adc
push
jae
dec
xchg
add
ljmp
clc
mov
pushf
rcl
jb
pop
xor
test
jecxz
nop
inc
push
repz
sbb
xchg
sub
aaa
and
xchg
lods
jmp
ret
in
push
add
outsb
cmp
imul
cli
and
fcoml
pop
shlb
or
movsb
adc
or
call
int
adc
mov
push
test
iret
outsl
rorl
mov
jbe
and
pusha
lods
cmp
mov
cltd
jp
clc
inc
ret
and
test
sbb
pop
pop
mov
and
enter
arpl
fxch
xor
mov
cli
and
and
ss
and
loope
out
cmp
fs
xor
subl
cmp
sbb
cmp
jne
js
dec
jo
cmc
fcoml
mov
add
fisttpl
ljmp
les
cli
jmp
in
xchg
std
fcoml
lret
mov
add
pop
fsub
xor
outsl
mov
fists
push
lcall
bound
lcall
adc
sbb
daa
dec
cltd
adc
sub
rclb
jp
lcall
pop
andl
push
scas
mov
leave
mov
adc
pushf
adc
pop
jnp
rcrb
test
lret
sub
int3
ret
cmpsb
mov
test
sti
adc
jmp
cmpsb
inc
test
push
loope
stos
in
or
pop
adc
testl
inc
inc
fnstsw
popf
jbe
jp
rcrl
adc
inc
int3
dec
push
mov
pop
rclb
stc
mov
ja
push
mov
jo
sub
ljmp
cmp
fdivl
int
jp
dec
push
inc
jl
xchg
fstpl
cld
ret
dec
push
fcmovnbe
push
push
push
sub
xor
mov
test
mov
add
ret
test
test
mov
push
sub
xchg
ds
imul
int3
les
scas
mov
dec
movsl
push
out
lcall
mov
popa
sub
insb
int3
test
and
jbe
push
mov
xchg
push
cmp
aaa
fstps
jnp
cmpsb
cld
mov
dec
fcompl
xor
push
mov
rolb
xchg
jecxz
stos
mov
sub
xor
mov
daa
adc
loop
mull
cltd
xchg
inc
adc
mov
ja
movsl
ljmp
jmp
sub
inc
adc
imul
inc
xchg
pop
fwait
adc
inc
mov
pop
int3
xchg
imul
jmp
lods
xor
push
mov
xor
ficoms
pop
js
jo
in
ja
pop
stos
std
test
inc
mov
ror
sbb
cmc
je
stc
imul
jmp
sti
mov
and
and
mov
mov
cmp
js
dec
cmp
cmpsl
push
outsb
dec
js
in
xchg
into
or
push
lods
push
mov
push
push
push
movsl
xchg
xor
add
jno
or
stos
andnps
inc
shll
pop
shll
dec
pusha
pop
jno
cmp
add
pop
sbb
clc
test
imulb
push
inc
push
fistpll
and
and
mov
add
jp
xchg
xchg
dec
das
fdiv
mov
cmpsb
popa
ret
cltd
shlb
or
inc
add
loope
sub
jno
div
addr16
jg
ja
add
pop
push
or
lock
cmp
rcrl
sahf
inc
xchg
fistpl
imul
push
cld
pop
mov
sti
sbb
pop
in
mov
in
test
sub
call
or
fnstenv
fsubs
and
das
jne
punpcklwd
jne
jmp
mov
es
push
xchg
pcmpeqd
enter
xor
aas
test
mov
imul
or
clc
lahf
shlb
xor
repnz
pop
add
std
dec
and
pop
orl
scas
jo
xchg
xchg
shlb
fstpt
push
repz
cmpsl
cmp
xchg
sahf
mov
bound
mov
mov
adc
hlt
loopne
int3
mov
xlat
mov
insb
jp
add
add
test
enter
adc
sarb
popf
jg
sbbb
decb
dec
xchg
adc
negb
mov
xchg
cmp
mov
cld
sub
scas
iret
inc
mov
mov
cmp
sbb
mov
add
xor
mov
leave
mov
pop
lods
pushf
mov
or
lret
shlb
adc
lds
sbb
push
cmp
mov
push
imul
add
adc
and
jp
jp
cmp
mov
fsubrs
sbb
cmp
push
push
or
dec
add
cmp
sub
popf
mov
inc
repz
jg
sub
adc
leave
aad
mov
push
test
mov
arpl
xchg
das
dec
push
add
out
mov
fidivl
insl
pop
ss
rol
dec
cmp
addl
jp
pop
in
loopne
clc
cmp
orb
and
and
xchg
lea
mov
lds
filds
cmpsb
and
clc
call
mov
jl
mov
js
aas
pop
mov
sub
xor
inc
jo
or
xor
sahf
movsb
fildl
mov
and
pop
ret
cmpsl
mov
sahf
imull
jp
daa
inc
or
push
cmp
push
rcl
push
adcl
dec
cmp
repnz
or
and
stc
cli
mov
push
cmp
pop
mov
sti
push
cli
xor
test
movsl
mov
out
and
or
jbe
int
mov
sub
scas
push
addl
xor
xor
mov
mov
insb
inc
adc
fstps
addb
pop
push
dec
ja
stos
je
psadbw
movsb
mov
outsb
inc
add
lret
jmp
sahf
xlat
add
xchg
push
mov
testb
xor
xchg
push
mov
add
mov
nop
lods
cld
mov
jns
rolb
jo
pop
gs
xchg
lret
cmp
movsl
cmpsl
jnp
push
xchg
cmp
ja
jecxz
push
sub
ss
sbb
and
mov
push
mov
xchg
cmp
adc
sbb
cmp
ret
ret
mov
lret
ss
xor
scas
mov
test
sbb
pop
fcmovnb
and
xchg
dec
and
add
pusha
jl
xor
loopne
daa
rclb
xchg
dec
jne
adc
in
ss
push
movsl
sar
dec
ljmp
cwtl
or
adc
add
sub
in
mov
flds
inc
icebp
dec
test
adc
ss
jb
xlat
cmp
mov
fnstcw
push
push
sahf
mov
fimuls
sbb
loopne
jno
jae
fistpll
test
adc
jne
fwait
jo
lods
fldl
push
inc
faddl
sbb
push
jge
ss
rclb
js
xchg
inc
mov
loop
mov
mov
add
xor
repnz
add
rcrl
stos
sbb
push
aam
stc
jns
xor
cmp
adc
or
cmp
pop
popl
nop
push
mov
mov
cmp
popf
in
movzwl
xor
dec
test
lea
scas
push
dec
mov
pop
jne
in
iret
push
cmpsl
pop
adc
xor
fstps
out
sbb
lea
test
mov
push
out
mov
hlt
iret
in
mov
adc
loop
dec
int
sub
sbb
push
xchg
rclb
mov
cmp
ret
jae
xchg
and
sub
test
imull
mov
lahf
push
mov
xchg
pop
adc
and
or
dec
add
dec
pop
sti
pslld
xchg
xor
adc
and
lret
mov
sbb
adc
fdiv
ja
adc
add
es
push
rol
add
adc
jg
orl
jp
addr16
and
es
mov
icebp
push
jle
mov
loopne
mov
repz
pushf
das
in
xor
hlt
out
and
scas
cmp
pop
mov
pushf
xchg
jo
cmp
and
pop
fisubs
mov
fadd
or
mov
fbld
popa
inc
in
xchg
jg
xchg
jl
inc
sub
jnp
jp
cld
jns
pop
and
jl
cmpsb
jne
lods
cmp
add
add
pushf
cmpsl
leave
inc
sarb
jno
mov
lcall
cmp
pop
mov
fcomip
xchg
mov
addr16
push
sbb
mov
mov
js
orl
mov
mov
sub
jb
and
add
and
pop
xchg
out
lahf
pop
jmp
lods
out
xchg
call
push
pop
or
insl
mov
call
xlat
into
pop
inc
loope
xor
and
push
adc
mov
shll
gs
lods
adc
out
jbe
inc
lcall
pop
xor
jp
sbb
mov
push
fucomip
loop
sti
xor
addr16
int
push
push
sub
adc
cmp
and
xchg
dec
pop
sub
mov
dec
les
test
xor
loopne
fucomp
sahf
pop
ljmp
jno
and
aam
repnz
or
adc
pop
cmp
inc
xor
pushf
push
and
in
jl
xor
lret
mov
int
push
xlat
fst
mov
fldt
xchg
xor
xchg
pop
out
dec
mov
orl
cwtl
lock
mov
xor
and
popa
mov
gs
loop
fidivrs
fs
test
fsubl
rcrb
mov
mov
pop
inc
lods
xor
daa
movsl
jge
in
test
or
pop
cmp
push
arpl
push
dec
test
xchg
or
lret
mov
inc
jae
lea
shrl
addr16
cltd
in
jne
cmc
popf
popf
out
jo
jle
add
or
add
push
jb
arpl
test
rcrl
mov
iret
mov
popf
test
jle
inc
aad
mov
ret
mov
mov
das
cwtl
mov
cmp
btc
shlb
movsb
or
push
loope
cmpsl
mov
xchg
and
out
sbb
pop
and
ret
push
lds
pushf
xor
rcrl
mov
fistpll
mov
mov
aad
cmc
mov
push
ja
or
mov
pop
in
mov
or
lcall
mov
jo
push
adc
cmpsb
mov
lret
adc
cmp
pop
adc
in
xor
sub
mov
pop
lret
jle
out
inc
xchg
add
jo
mov
push
pop
hlt
sbb
popl
add
popa
xor
inc
cmpsb
jge
scas
ficomps
sbb
js
mov
dec
sbb
fsubrp
fwait
jbe
xlat
mov
ja
inc
mov
adc
in
push
pop
mov
cmp
cmp
inc
rcll
inc
mov
hlt
push
cmp
push
scas
je
clc
mov
movsb
pop
adc
add
dec
fldenv
mov
test
jo
mov
or
daa
or
dec
cmc
lret
cmp
out
sub
jae
cmp
sbbb
mov
testb
ret
lods
and
or
xor
cmp
popa
pop
outsl
dec
push
mov
lret
and
and
xorl
leave
cli
add
mov
jl
sbb
sub
xor
in
imul
pop
cmp
mov
add
add
ja
inc
lcall
push
sub
dec
dec
movsl
andl
mov
cmp
flds
jae
insb
jnp
in
popf
lock
push
ret
testb
mov
icebp
push
std
mov
push
pop
enter
push
in
inc
cli
jnp
shrb
push
lret
out
sub
xchg
cmp
jnp
lcall
int3
lock
push
pusha
pmaddwd
cs
movsb
mov
cmp
test
pop
sbb
shlb
lods
jo
scas
push
dec
negb
lods
jae
push
push
idivl
sbb
cmp
lret
data16
adc
xchg
or
adc
pop
out
xor
xor
mov
clc
lahf
fs
das
adc
imul
xor
or
lea
mov
mov
mov
testb
lret
lock
ljmp
ljmp
decl
lret
aam
adc
jp
mov
jnp
cmp
bound
adc
fwait
push
pusha
shrl
movsb
loope
out
push
xlat
mov
andb
mov
mov
jb
in
in
sub
sarb
inc
mov
test
shll
add
fisubrl
push
push
mov
jo
shll
js
incb
scas
shll
shl
fmul
xchg
adc
jnp
push
xchg
int
jle
dec
add
cmp
loop
cmp
xchg
add
push
fs
jno
push
dec
aaa
pop
repnz
mov
inc
push
jp
daa
aaa
inc
jns
add
xor
pop
jp
fwait
lods
movsl
rcrl
adc
pop
inc
arpl
cltd
sbb
sub
sub
mov
xchg
rclb
lret
sbb
loope
nop
cmp
mov
xchg
push
shl
and
leave
add
sub
rcrl
repz
mov
pushf
and
fsubl
jae
orl
mov
dec
rcrl
repz
mov
pushf
and
fsubl
jae
orl
sbb
sub
cmp
jecxz
jae
add
mov
arpl
jae
orl
mov
dec
rcr
jecxz
repz
adc
mov
and
adc
add
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
clc
or
jecxz
rcrl
xchg
jle
ret
jl
call
push
fadds
xor
add
js
dec
rcrl
sub
sbb
call
push
fadds
pop
mov
add
js
dec
jnp
shrl
cmp
call
or
xor
rorl
testl
add
or
repz
sub
jo
fld
xchg
mov
movsb
iret
sub
fists
pop
cmp
mov
jg
mov
pop
adc
rcrl
push
push
push
xor
adcb
mov
bnd
inc
leave
cmp
sub
mov
xorl
out
fisubs
into
push
adc
or
fstl
scas
xor
push
mov
lret
call
mov
xor
data16
cwtl
sti
xchg
push
xchg
out
or
orb
xchg
xor
or
lea
xchg
fadds
pusha
shlb
or
xor
ret
stc
enter
lock
jg
jae
or
xor
xchg
repz
dec
push
pop
leave
sub
sbb
call
inc
fmuls
test
mov
insl
sbb
cmp
and
push
in
imul
int3
dec
cli
jge
xorb
sub
pop
hlt
push
in
in
bound
mov
mov
dec
fcompl
std
pusha
out
mov
ss
outsl
fdivs
push
sub
cmp
call
push
fadds
xor
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
jge
lds
out
pop
sub
mov
gs
push
push
jns
xor
pop
mov
xor
sahf
and
xchg
ret
xchg
inc
cmpsb
test
cmp
mul
xor
jae
xchg
mov
mov
xor
or
dec
divl
inc
or
jne
cli
cmp
pop
sbb
cmp
pop
dec
inc
mov
in
dec
aad
sub
dec
bound
aas
cs
jl
add
cmp
mov
rorl
test
jns
pusha
xchg
shlb
xchg
scas
or
pushf
sub
push
jae
pop
dec
inc
dec
rclb
and
call
mov
fwait
sbb
cmp
imul
dec
test
dec
out
jp
sbb
mov
into
xchg
cmpb
je
adc
shlb
loope
or
imul
push
lahf
mov
dec
sbb
sbb
inc
adc
inc
sbb
imul
or
sbb
pop
inc
ret
test
enter
jecxz
mov
mov
test
fdivs
inc
cmp
adc
ss
mov
push
shlb
push
mov
inc
movsl
movsl
jne
stos
fisttpl
cmc
fnstenv
mov
fcompl
cli
das
leave
mov
scas
popa
fucomi
add
mov
jno
dec
mov
inc
lods
sub
mov
std
data16
shlb
call
mov
rorb
jae
je
push
and
mov
jecxz
out
xchg
filds
jnp
xor
xor
daa
psadbw
sbb
cmp
in
mov
push
mov
sbb
xor
out
pop
int3
mov
xchg
cmp
mov
mov
fildl
mov
out
mov
adc
in
movsl
mov
rclb
loope
cmc
mov
cmpsl
mov
cmp
ret
push
add
sub
leave
jl
mov
mov
inc
pushf
sub
cmp
jne
rclb
jb
push
inc
cld
xor
sbb
aam
jg
xor
adc
sub
pop
cmp
shll
test
cmp
std
cmpsl
sbb
xor
iret
cmp
sub
mov
xchg
mov
out
rcll
subb
cs
push
mov
insb
add
daa
push
inc
sub
das
shrb
sub
fimull
ja
test
mov
es
or
jbe
jle
jnp
js
ljmp
jnp
xlat
movsl
test
xlat
and
sahf
out
mov
or
in
or
insb
data16
and
outsb
xchg
inc
mov
xchg
inc
and
int3
sbb
add
scas
test
lcall
lods
fistpl
dec
aad
inc
dec
inc
imul
ds
sbb
std
pop
fidivrs
sti
xchg
push
mov
cmpb
lret
xor
loopne
adc
add
test
loop
sbb
adc
xchg
mov
scas
mov
fisubrl
push
divb
cmc
dec
paddusb
int
push
imul
stc
xchg
jae
adc
lds
fwait
jle
or
aas
mov
xchg
sahf
lds
call
fisubl
test
sub
push
push
fstpt
insb
stc
ljmp
add
and
popf
aad
cmp
jnp
rcl
cmpsb
imul
push
adcb
and
icebp
xchg
sbb
clc
pop
outsl
pop
loop
popa
js
cltd
xor
rep
sti
ja
cwtl
xor
inc
test
lret
mov
popf
ljmp
popa
loop
mov
add
xor
les
mov
adc
pop
aam
cmp
jb
xor
sub
sbb
bound
stos
outsl
addr16
shrl
adc
cmpsb
loopne
pop
fimuls
out
into
insb
pop
inc
ljmp
aaa
dec
sbb
clc
mov
jmp
ret
and
sub
lods
sahf
out
jae
lock
scas
enter
rcrl
mov
push
add
sub
and
pop
nop
dec
inc
jge
jno
mov
cmp
xlat
jbe
add
arpl
mov
fs
scas
test
cmp
cmc
outsl
lret
hlt
sti
jp
fs
popf
ljmp
lahf
lret
out
loop
and
lcall
leave
and
push
jo
xchg
fnstenv
push
push
sub
xchg
gs
scas
add
fwait
sbb
inc
test
aas
mov
pop
and
imul
mov
pop
sbb
jo
pusha
inc
dec
testl
fwait
dec
adcb
dec
cmc
int
ljmp
fs
das
dec
dec
xorl
fcompl
lcall
cmpsb
lods
les
jmp
outsb
dec
outsb
jp
pop
mov
testl
mov
lret
mov
push
adc
out
push
mov
mov
pop
pop
pop
aam
mov
add
jmp
mull
push
addr16
xchg
sub
push
pop
pop
adc
out
pop
jne
xor
xchg
js
sub
lods
repz
dec
push
push
aam
adc
je
mov
push
movsb
add
dec
inc
push
roll
bound
dec
jle
xchg
cmp
add
add
in
cltd
into
cwtl
mov
cmp
imul
xchg
pusha
iret
and
jecxz
notb
add
out
mov
insl
mov
sbb
or
arpl
sub
imul
sbb
or
stos
or
pop
fstpl
or
mov
sub
or
sub
xor
scas
dec
cmp
mov
mov
mov
stos
jge
das
cwtl
cmp
lcall
mov
or
outsb
into
cmp
mov
cld
insb
test
das
adc
xor
xchg
shl
inc
and
pop
hlt
cmp
idiv
into
inc
sbb
fcompl
mov
aas
xchg
je
popf
outsl
mov
arpl
jo
shrl
sti
mov
jnp
jae
pop
dec
push
xchg
or
jl
xchg
sbb
adc
fs
lret
out
mov
outsl
insb
test
xchg
gs
jns
add
sti
mov
dec
jne
or
jns
jecxz
bound
out
xchg
repnz
xchg
adc
push
xchg
pusha
subb
scas
js
jnp
dec
cmpsb
aas
sbb
in
int
cmp
dec
mov
cmp
data16
movsl
outsb
xchg
dec
mov
je
popf
inc
xorb
dec
pusha
lods
pop
xor
sti
clc
mov
test
hlt
push
ret
inc
add
adc
sub
cmpsb
or
stos
popa
add
xchg
mov
sarl
rcrb
push
out
inc
xchg
pusha
mov
jg
mov
lds
lods
rclb
dec
push
pop
aam
repz
out
cmpsl
mov
cmp
mov
cmpl
xchg
lret
mov
adc
mov
add
mov
ds
adc
aas
aam
sub
andl
xor
call
aas
insw
ja
push
loope
pop
push
orl
mov
or
mov
insb
fbld
lahf
cli
in
sbb
cmp
addr16
and
pop
sbbb
mov
popf
aam
test
test
push
pop
lods
and
fistl
icebp
test
mov
lods
rorb
xor
mov
aam
mov
pushf
ret
in
in
mov
das
lods
insb
popa
fwait
add
pop
fcomps
lds
adcl
add
rcr
mov
insl
arpl
jno
dec
push
loop
jns
mov
jmp
or
rorb
xor
adc
fcompl
insl
out
pop
mov
add
pop
hlt
test
sub
ret
cmpsl
sbb
mov
xchg
dec
mov
or
jo
jmp
and
rolb
sub
pop
sub
inc
gs
add
mov
mov
pop
add
sub
push
fldt
enter
xor
adc
out
lods
sbb
arpl
or
or
pusha
xchg
ja
adc
dec
insb
imul
repnz
les
int
dec
or
scas
lock
adc
lret
jmp
call
ja
movsb
lret
dec
inc
movsb
shrl
enter
mov
lock
aam
imul
scas
sub
jae
loopne
jecxz
sbbb
xchg
pop
pop
xor
cli
and
jl
xchg
jg
cmp
fisubrs
divb
pop
mov
mov
mov
pop
jne
out
cmp
addb
xchg
pop
pop
cwtl
jno
into
xor
insl
pop
in
cwtl
mov
adc
jbe
mov
ss
cmp
pushf
sub
je
fisttpll
jne
sub
repnz
mov
aad
mov
jnp
jecxz
cmpsl
divb
sbb
dec
mov
xor
cmpsb
xor
or
sbb
dec
idiv
nop
mov
sbb
inc
mov
cmpsb
ftst
sbb
sahf
pop
insb
jle
stc
add
add
shlb
mov
mov
test
dec
jecxz
mov
lahf
mov
adc
mov
repz
dec
arpl
hlt
insl
movsl
pusha
test
test
imul
xchg
mov
and
pop
movsl
mov
stc
cmp
inc
add
lods
insl
test
pop
adc
push
icebp
dec
xor
movsb
lret
inc
or
dec
jns
jo
test
adc
pop
ds
bound
sbb
sbb
xor
push
mov
add
add
lret
andb
adc
fcompl
andl
cmp
std
sahf
mov
stos
adc
mov
out
loope
addb
in
xor
dec
xchg
lea
mov
jbe
add
xor
jl
loopne
push
push
enter
mov
dec
aaa
mov
mov
cs
xchg
mov
test
ss
int3
push
dec
cmp
mov
jge
fiadds
fidivrs
mov
out
nop
aad
loopne
loopne
imul
adcb
push
movsl
in
icebp
sbb
in
pop
or
cmp
pop
mov
sbb
jecxz
in
or
mov
jbe
lahf
fs
lret
jmp
push
in
ret
shl
in
mov
andl
xor
jmp
mov
unpckhps
fldl
jle
lea
int3
stos
xor
cli
sbb
cmpsb
xlat
cmp
pop
cli
aaa
pop
dec
mov
xor
pop
sahf
xchg
test
lea
jge
iret
pop
mov
inc
cmp
push
adc
movsl
adc
mov
and
ljmp
out
jle
aas
incb
pop
pop
inc
sarb
in
mov
int
cmp
fcmovne
mov
insl
adc
test
mov
ja
pop
fcmovu
pushf
push
mov
scas
jnp
call
dec
jo
xchg
mov
and
std
loope
cmp
cmpsl
test
repz
cwtl
sbb
jecxz
popa
ss
bound
in
or
rep
xor
dec
lock
sti
andl
and
sub
mov
dec
mov
cmp
not
idiv
dec
xlat
out
pop
lea
mov
mov
xchg
scas
in
dec
mov
jo
xor
xchg
aad
clc
and
clc
mov
or
aaa
mov
popa
jp
in
and
sahf
sub
xchg
add
arpl
rcll
ds
loopne
iret
mov
arpl
push
adc
popl
or
pop
aad
dec
iret
add
mov
mov
sbb
jne
xchg
cmpsl
sbb
xchg
out
push
shl
and
arpl
pop
cmp
xchg
arpl
xchg
gs
sbb
or
sbb
fcomps
cwtl
fcmovnu
or
and
cmp
dec
and
test
adc
jb
push
andb
adc
cmpsl
push
mov
push
mov
mov
ds
adc
mov
test
adc
fwait
dec
iret
divl
cs
jnp
pop
pusha
or
ret
into
push
and
cmp
add
inc
jns
cwtl
mov
inc
nop
loope
sbb
push
sub
sti
dec
cld
mov
push
xchg
in
push
cmpsl
mov
insl
jne
loop
mov
scas
lock
add
push
es
push
rcrl
add
inc
sub
add
jmp
inc
test
imul
mov
sub
sbb
cmp
loop
xor
inc
rcl
movsb
adc
test
mov
in
xchg
mov
pop
insl
dec
in
mov
outsb
cmc
push
cmp
nop
cli
cmc
cmpsl
sbb
mov
push
insl
jbe
movb
pop
sbb
pop
cld
jo
and
jae
or
aaa
mov
adc
push
add
mov
mov
lods
sub
mov
xchg
jg
in
jmp
lods
js
cmp
push
sbb
cmp
pop
jl
arpl
insl
dec
or
inc
into
mov
es
dec
out
jne
je
nop
movsl
shr
and
or
mov
addr16
dec
dec
into
mov
cld
pop
addr16
cmc
or
push
add
mov
dec
push
das
je
dec
insb
or
cli
push
add
mov
mov
push
add
mov
mov
sbb
add
insb
mov
or
mov
stos
int
push
push
sbb
movsb
addb
sbb
loopne
rep
cs
xchg
xchg
ret
jmp
sbb
movb
nop
xchg
aam
or
cmp
outsl
pop
dec
xor
sub
xor
cmp
or
mov
lea
and
jne
in
sub
mov
dec
popf
inc
xchg
cmp
test
shll
into
xchg
addr16
pop
clc
mov
negb
inc
stc
sbb
xor
add
inc
mov
mov
mov
mov
es
xchg
lcall
scas
mov
notl
insl
cmp
das
xor
jl
sahf
push
dec
or
shlb
rol
inc
dec
push
push
mov
mov
cmc
das
sbb
dec
sbb
inc
adc
stos
loop
pop
les
sub
aaa
pop
outsl
mov
nop
cmc
fimuls
fistpll
loope
fs
xorb
rcll
push
mov
mov
clc
sbb
in
xchg
divb
rcr
daa
adc
outsl
gs
xlat
imul
push
mov
jg
mov
inc
sub
insl
add
das
pop
xchg
fbstp
or
ss
adc
mov
fsubrl
dec
jns
mov
lcall
cli
xor
pop
mov
sbbb
mov
clc
xor
adc
add
sbb
mov
hlt
jae
cltd
int3
adc
sar
xchg
push
repz
rcl
dec
ljmp
push
pusha
jo
sti
mov
bound
mov
dec
mov
ljmp
adc
sarb
mov
push
aas
mov
xor
out
push
add
jg
sahf
jbe
daa
pop
aas
push
mov
in
sbb
dec
rorl
cmp
jb
jle
add
fsubs
out
data16
xchg
mov
and
push
sbb
xorb
mov
xchg
loop
xor
movsb
push
dec
jno
cmc
sub
test
ja
roll
sub
push
sbb
outsl
pop
ljmp
stos
xchg
add
in
pop
mov
mov
jo
jecxz,pn
lcall
adc
mov
adc
xchg
jbe
jnp
clc
scas
stc
aaa
adc
push
fidivrs
scas
rcll
in
lahf
cld
sub
sub
out
mov
mov
xchg
and
insl
pop
add
sahf
push
dec
movsl
aas
iret
xor
sub
insb
mov
dec
out
mov
rcrb
andb
lods
mov
int3
mov
movsb
jae
outsl
enter
pop
xchg
pop
cld
into
sarl
mov
jnp
test
sbbb
out
jle
dec
lcall
stos
lcall
inc
dec
adc
adc
stc
jmp
fstl
xchg
aad
sub
mov
sbb
sub
lret
jmp
fwait
xor
mov
jns
out
xchg
ds
std
mov
test
or
test
jno
inc
dec
dec
mov
repz
sub
mov
iret
fucomi
bound
and
movsb
push
mov
mov
mov
out
add
xor
out
mov
repz
cmp
movsb
mov
dec
fsub
clc
pop
add
pop
fidivrs
out
outsl
mov
jne
jo
gs
enter
in
inc
xorb
xchg
negl
push
ss
das
js
inc
loop
shr
cmp
jne
jnp
push
xchg
sbb
movl
jns
xor
pushl
xor
loope
dec
pushf
data16
add
test
cld
sub
sbb
cwtl
inc
aad
cmp
mov
pop
xor
loope
in
leave
sub
dec
add
pop
jl
imul
push
cmp
pusha
dec
lock
xchg
mov
cmp
dec
repz
push
shll
mov
dec
shlb
fidivrs
sbb
jg
out
lea
mov
test
stc
fldt
xor
pusha
inc
xchg
das
sub
addr16
fwait
pusha
jno
lret
daa
outsl
jle
jo
sbb
addl
dec
shrl
jbe
insb
mov
arpl
pop
lods
in
mov
gs
jge
movsb
or
gs
adc
jne
sub
add
pop
jbe
cwtl
addr16
cld
psubsb
insb
mov
push
out
mov
mov
xchg
shl
ja,pn
sub
imul
mov
fucomp
imul
push
jbe
xchg
cld
mov
and
inc
call
cmpsb
pop
dec
js
push
ja
jo
and
sub
pop
cmpsb
popa
fs
mov
pop
xor
mov
inc
cs
xchg
cmp
push
scas
pop
shlb
cs
jae
push
mov
inc
loopne
vprotw
mov
add
inc
xchg
cli
cmc
or
rorl
xchg
mov
or
mov
loope
pop
or
add
call
stc
inc
add
outsb
sbb
xchg
mov
jmp
push
push
data16
sub
mov
sbb
xor
adc
adc
sub
mov
data16
sub
idivb
aas
cwtl
inc
in
cmp
push
bound
adc
sarl
inc
sahf
ret
push
pop
adc
dec
mov
pop
das
xchg
ss
popf
xchg
jmp
jno
dec
test
fdivl
ret
dec
push
out
jno
scas
mov
jne
ret
dec
and
call
fstpl
mov
arpl
ret
je
xor
adc
in
push
cli
pop
and
mov
jl
jnp
std
packuswb
mov
jb
das
xchg
or
scas
cltd
adc
adc
push
xorb
orb
or
outsl
pop
and
adc
inc
shrb
pushf
xchg
mov
pop
cmc
inc
xor
pop
je
push
push
in
adc
mov
dec
cld
fidivl
mov
jbe
out
push
cmp
and
lods
ret
nop
call
mov
sbb
call
dec
and
jb
pop
pop
pop
popf
pop
in
dec
ja
fsub
shrb
cmc
cmpsb
mov
mov
das
insl
clc
clc
mov
cmp
icebp
xor
iret
xor
dec
imull
stos
jne
test
or
sbb
pop
xor
jle
add
fisubl
enter
pop
insl
imul
inc
mov
mov
or
cld
xlat
adc
or
lds
pop
into
adc
hlt
pop
in
inc
mov
sub
push
jle
mov
jp
xlat
sbb
mov
dec
mov
pusha
mov
fisttps
ljmp
rolb
mov
dec
loopne
daa
sbb
inc
fldt
mov
fisubrs
cld
lods
sbb
and
jb
sti
pop
js
mov
jmp
frstor
xor
dec
stos
cwtl
cmc
imul
push
mov
ret
in
in
push
add
sbb
ficoms
adc
mov
xchg
and
int3
call
mov
shl
fs
mov
mov
fnstenv
lods
outsl
xchg
sbb
adc
shl
cmp
mov
jne
testl
ficomps
lcall
mov
jecxz
fnsave
inc
test
jae
xlat
into
mov
nop
xchg
imul
lret
push
sbb
xchg
add
and
cmp
bound
dec
dec
cmp
popa
cwtl
push
inc
sub
shr
cmp
adc
mov
xor
xchg
xor
test
mov
push
jnp
and
xchg
scas
stos
out
stos
mov
cmp
call
push
fadds
xor
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
js
dec
stos
pop
ret
sub
sbb
enter
test
mov
add
jns
dec
rcrl
sub
sbb
bound
xor
mov
addr16
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
int3
xor
and
enter
cmp
and
outsl
popa
shlb
mov
xchg
and
jo
jo
push
icebp
xor
mov
xor
popa
shlb
pop
sub
cmp
or
shrl
js
dec
or
mov
addl
cmc
popa
mov
add
in
addr16
mov
repnz
xor
in
cs
mov
imul
mov
cltd
sbb
push
xchg
add
xchg
lret
mov
faddp
fidivrl
nop
sarb
lods
orl
sti
mov
sbb
fdivrp
iret
jg
push
fcompl
shrb
test
outsb
jmp
push
shlb
loopne
repz
inc
pop
xor
or
je
mov
add
insb
fistps
jno
ds
adc
rorl
push
push
lock
xchg
push
pop
call
sub
fs
or
stc
fsubr
lret
xor
fcoms
and
popa
mov
xchg
xor
jo
pusha
loope
dec
pop
repz
mov
and
dec
clc
popa
lret
repz
push
in
fbld
jb
add
cmp
and
jno
push
in
xchg
aas
loop
mov
sbb
arpl
test
mov
lea
jb
les
inc
cmc
pop
xorb
xor
adc
xor
je
inc
test
pusha
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
out
add
aad
test
fpatan
dec
mov
imul
push
mov
mov
addb
dec
add
ficompl
rclb
sbb
dec
xor
sti
mov
jbe
mov
jae
push
shl
in
lret
cmp
es
push
pop
mov
mov
push
xor
xchg
push
inc
push
orl
mov
rolb
or
and
xlat
sarb
roll
sub
cld
xor
mov
or
mov
stc
push
and
mov
andb
frstor
mov
xchg
int
repz
jnp
xchg
repz
jge
fnstcw
adc
out
mov
mov
cmovne
leave
mov
int3
add
loop
outsb
or
sub
pushf
icebp
push
cli
fimull
pop
rolb
hlt
sub
out
in
or
loopne
iret
icebp
fcmovnbe
loopne
cltd
lods
pop
mov
dec
je
dec
repz
mov
gs
hlt
mov
popf
xchg
sti
adc
xchg
or
push
fstpl
gs
repnz
xchg
mov
pusha
bswap
popa
jae
dec
mov
popf
or
in
cld
or
jg
add
dec
and
or
aaa
into
mov
cltd
popf
xchg
je
inc
ret
lahf
cmp
js
test
scas
push
or
cmp
outsl
push
adcb
push
pop
xor
xor
rcr
cmc
inc
add
into
and
xor
int3
mov
push
xchg
aad
fimull
cmp
xchg
sub
and
mov
mov
pop
outsl
cmpl
mov
sbb
sub
std
cmp
mov
das
inc
outsb
aam
stos
mov
stc
xchg
push
pushf
test
inc
mov
cli
push
pop
jge
jge
ss
cwtl
test
fdiv
stos
inc
and
pop
ret
loope
mov
or
call
adc
mov
sbb
dec
dec
pop
sbb
xlat
psllq
test
loopne,pt
sub
es
cmpsl
or
call
push
jno
outsb
stc
sbb
sbb
xchg
sbb
bound
and
ret
clc
scas
mov
and
fcoml
inc
xor
sub
mov
ljmp
addr16
jmp
fsub
xor
inc
int3
in
out
out
mov
scas
adc
dec
popf
cmc
lret
loope
pop
sahf
ja
mov
add
pop
mov
jmp
incl
cmp
push
lods
nop
pop
and
mov
mov
dec
sub
hlt
adc
sub
rcrl
cmp
push
inc
xor
pop
add
data16
cmpsl
push
or
inc
push
arpl
mov
dec
ja
shll
imul
ss
pop
jge
jp
sbb
add
insb
inc
mov
repnz
outsb
xchg
js
adc
sub
cmp
or
mov
cmp
sti
jno
xlat
popf
sti
testl
mov
leave
inc
pop
xchg
jle
lahf
std
cmp
fcomps
cmpsb
push
loope
cmp
imul
iret
cmp
in
pop
and
mov
pop
xor
and
lock
jmp
pop
test
lcall
xchg
iret
xchg
call
hlt
mov
aad
jmp
ficoml
pop
xchg
dec
push
mov
add
jmp
test
loope
repz
mov
mov
insl
aam
cmc
and
push
mov
cmp
out
ss
ffreep
mov
or
les
inc
xchg
and
cmp
sbb
pusha
adc
dec
pop
and
dec
adc
lcall
mov
nop
div
or
sub
movsl
jo
jo
push
push
cmpsl
adc
daa
out
push
push
sarl
xchg
mov
loope
inc
out
inc
and
jmp
dec
adc
and
dec
xor
fbstp
nopl
testb
bound
leave
cmp
pop
scas
enter
int
inc
les
mov
lcall
fbld
jbe
ret
repnz
fcmovne
xabort
std
ds
push
lods
dec
lcall
jp
push
lret
jmp
scas
in
dec
dec
fimuls
hlt
divb
movsl
xchg
or
movsl
inc
push
leave
scas
mov
fbld
fisubl
sti
mov
fidivl
adc
imul
sub
popl
mov
jae
jnp
push
and
addl
ss
mov
mov
mov
inc
not
hlt
insb
outsl
js
and
shlb
icebp
shll
sahf
xchg
mov
stos
mov
sbb
lock
add
pop
mov
mov
fildl
mov
lock
test
sub
out
xor
sub
cs
dec
imul
loop
mov
push
test
cwtl
jb
push
and
fcmovne
mov
les
jmp
popa
mov
push
xor
insb
xchg
nop
push
xor
add
rclb
xor
inc
fdivrs
insb
pushl
jo
mov
cmpb
cmc
repz
adc
mov
int3
mov
aam
hlt
xor
test
dec
or
je
mulb
enter
cmc
jge
sahf
int
inc
pop
mov
shl
mov
sbb
call
sbb
push
lret
sub
sub
or
cmp
cmp
or
jb
xchg
fldenv
icebp
and
adc
or
sbb
inc
or
push
adc
lds
ret
shrb
shlb
and
clc
test
inc
shlb
or
inc
arpl
rorb
pop
adcb
lcall
bound
repnz
leave
sub
xor
jge
add
incl
inc
sub
pop
and
enter
push
psllq
stc
daa
inc
mov
sbb
cmp
imul
iret
fcmovne
inc
dec
repz
jne
sqrtps
push
xor
inc
imul
pop
dec
push
or
xchg
outsl
fwait
int3
sbb
lahf
sbb
lds
mov
idivl
stos
inc
js
jle
jns
ss
sbb
repnz
push
cltd
inc
push
shlb
lcall
je
and
or
hlt
jne
shl
and
mov
pop
das
pop
cmp
mov
cwtl
cmp
out
flds
mov
insb
add
jmp
cmp
cmc
ds
data16
ja
xor
add
into
xor
clc
mov
pop
inc
push
and
and
mov
out
cld
mov
lods
fwait
gs
add
fs
insl
daa
mov
pop
shll
test
cmpsl
in
aad
jae
imul
decb
daa
cwtl
popa
and
inc
cmc
call
popf
jp
jp
mov
fstps
mov
ficoml
cmc
sbb
sub
sahf
sti
xor
push
scas
dec
dec
adcl
addl
push
sub
insb
scas
xlat
imul
das
jmp
inc
push
or
mov
mov
cmp
sub
sbb
ret
mov
cs
lods
xlat
dec
aas
cli
mov
mov
loop
pop
sahf
or
mov
xor
mov
mov
outsb
pusha
pop
mov
or
int
jnp
jns
sub
jb
popf
sub
ss
mov
mov
enter
ret
outsb
in
int3
jp
cmp
shrl
push
rep
scas
in
pop
sahf
inc
scas
insl
xchg
and
clc
push
fcomip
sbb
pop
or
jle
xchg
mov
das
addb
and
jns
cmpl
and
out
push
jg
gs
bswap
loopne
fistps
mov
cmp
adc
adc
gs
push
js
notl
lods
sub
rcl
ljmp
push
xchg
fcomps
mov
out
mov
adc
sahf
lret
mov
sub
cmpsl
mov
mov
adc
stos
xorb
jl
lea
imull
sbb
scas
mov
add
mov
in
adc
mov
and
daa
pop
mov
jb
aam
cmp
or
pop
outsb
sub
es
or
mov
stc
add
lret
cli
and
mov
xor
jno
mov
jp
in
subb
xor
pop
pushf
out
push
mov
dec
in
sti
loopne
or
bound
and
fisubrl
sub
out
jle
push
pop
mov
dec
mov
pop
xchg
in
mov
cmp
sub
and
testl
jne
pop
cmc
and
scas
rcll
shrl
and
and
je
lds
inc
sbb
mov
xor
cwtl
or
pop
pop
adc
cmc
in
adc
push
loop
aad
add
and
fxch
or
pop
out
jbe
clc
lods
mov
add
push
mov
arpl
fisubrl
push
flds
xchg
shld
cwtl
and
lods
push
xchg
mov
imul
push
dec
xchg
out
pop
dec
pop
in
adc
adc
sahf
loope
aas
test
testl
iret
js
ret
push
filds
popf
imul
bound
jne
imul
sti
out
cli
push
inc
mov
es
cmp
inc
mov
aaa
mov
and
mov
bound
popa
stc
mov
cmp
fidivl
bnd
outsb
in
fldcw
pop
sti
outsl
xor
cmpsl
pop
xchg
test
mov
insb
inc
outsb
loopne,pt
sar
cmp
push
scas
popa
xchg
mov
adcl
and
lea
pop
jmp
dec
movsb
fdiv
dec
call
mov
frstor
xchg
cltd
dec
mov
dec
rclb
outsb
out
xorb
ret
pop
jge
push
sbbl
adc
shl
out
test
aas
dec
cld
jg
xor
out
cmp
xchg
mov
xchg
adc
pop
mov
in
insl
jns
shl
xchg
lock
add
inc
add
fcomip
sti
jb
cmp
sbb
mov
or
jo
jmp
aad
lea
fdivs
loope
jno
pop
inc
sbb
xor
dec
mov
imul
jg
jne
in
in
shll
stc
mov
sub
bound
pop
lret
lock
inc
mov
int3
jle
add
imul
leave
fdivrs
scas
xor
mov
aam
aas
mov
dec
jae
mov
in
in
xor
xor
push
xchg
xchg
fldenv
pop
jp
mov
out
jmp
cmp
sti
xchg
fsubl
nop
or
xchg
bound
inc
inc
jb
add
sbbl
dec
or
mov
mov
lret
test
and
sub
dec
cs
imul
ljmp
movsl
icebp
cmp
pop
jns
data16
jp
std
cltd
lret
pop
xor
outsb
or
fistps
sbb
mov
pop
cld
movsl
add
mov
cmp
inc
mov
adc
subb
cltd
sub
mov
adc
mov
sub
sbb
jmp
bnd
mov
cmp
xchg
sbb
test
pop
sbb
popa
movsb
inc
call
pop
dec
push
into
ret
jne
xlat
inc
js
clc
add
sub
mov
mov
aas
scas
jl
push
xor
jl
and
or
add
mov
outsl
popf
fcomi
roll
pop
nop
addb
mov
in
and
movsl
xor
add
popf
mov
outsb
dec
lods
fwait
jb
in
cmp
jp
movsl
push
fstps
call
ret
pop
push
mov
scas
ficompl
jb
xchg
fiaddl
push
jmp
dec
xchg
sbb
cmpsb
std
lcall
pop
xchg
out
insl
cmp
push
popf
and
repz
jae
jb
jge
scas
mov
or
mov
int
out
or
ljmp
dec
jno
fdivr
pushf
inc
sbb
cli
mov
shlb
dec
push
popa
fcoml
pop
dec
data16
jg
repnz
lds
inc
sub
mov
mov
xchg
clc
mov
insb
xor
mov
xchg
loope
es
xchg
sbb
test
push
jmp
daa
pop
popf
lret
addl
xchg
inc
inc
aas
out
mov
push
adc
rolb
fldl2e
sub
xorl
mov
push
add
cmpsl
push
out
iret
shll
jmp
mov
mov
jae
xchg
arpl
mov
ljmp
out
push
inc
add
fidivl
je
inc
jnp
xlat
cmc
addr16
repz
or
lahf
cmp
pop
adc
mov
mov
imul
loop
test
cmpsb
mov
jg
and
sub
mov
int
daa
cmp
data16
xor
mov
cmpsb
xor
ljmp
lods
das
mov
insb
out
lds
clc
arpl
imul
jno
adc
ret
adc
add
pop
xor
mov
add
or
pop
and
xchg
mov
stos
xlat
push
rcr
add
cmp
adc
or
adc
push
mov
pop
negb
mov
mov
fwait
push
push
dec
cltd
cs
pop
ss
fs
pop
push
shrl
push
lds
xchg
or
leave
push
jp
aaa
pop
cs
cltd
mov
rcrl
or
ss
xor
stos
lock
mov
fs
cltd
and
push
pop
shlb
rcll
clc
add
and
push
mov
mov
imul
sahf
ss
mov
js
xor
popf
push
pop
movsl
cmp
sbb
cs
sub
push
jp
xchg
ljmp
dec
xchg
jle
cmp
mov
cmp
pushf
sub
pop
xchg
mov
push
and
adc
pop
xor
imul
pop
or
xchg
mov
imul
sub
das
push
add
imul
mov
or
mov
stos
aas
imul
test
xchg
fmul
iret
int
jbe
fstpt
and
std
pop
mov
fisubs
dec
insb
jnp
mov
outsb
xlat
xchg
xchg
loopne
dec
sub
rcrl
hlt
int
fldt
orl
mov
add
pop
lret
mov
pop
lods
xchg
mov
add
movsl
insl
stos
test
jns
andl
adc
jecxz
xor
mov
mov
cmp
emms
pop
fs
mov
rcl
fsubs
mov
sbb
jo
pop
inc
sub
in
lods
addr16
jl
gs
push
in
push
lahf
nop
and
out
push
dec
rcrb
jle
cld
stos
dec
movsl
fwait
mov
fs
inc
pop
aaa
jle
lock
jg
clc
sbb
nop
or
sbb
mov
dec
fildl
mov
icebp
hlt
negl
push
xor
dec
imull
movsb
and
lcall
add
or
dec
ds
psrld
push
push
add
outsb
lods
jecxz
clc
fistpll
leave
dec
icebp
les
leave
inc
inc
outsb
les
jmp
adc
adc
and
test
je,pt
loopne
das
mov
or
pop
imul
pop
imul
xchg
jle
lret
sub
cmpsb
sub
and
outsl
ss
pusha
and
mov
xchg
test
jl
aam
inc
dec
in
xchg
sub
mov
and
test
mov
lret
fstp
lock
cmpsl
sbb
jo
cmc
cld
and
sarb
mov
insl
nop
sbb
lret
adc
dec
mov
inc
sbb
dec
test
popf
jmp
sub
pushf
inc
sbb
mov
lds
mov
daa
inc
and
and
mov
cmp
adc
xor
cmp
movsl
ljmp
inc
dec
cmp
push
xchg
addr16
rorb
push
push
and
xlat
sahf
sub
outsl
push
fwait
pop
cmpsb
pop
mov
push
cmp
xchg
add
or
mov
ret
jnp
pushf
lcall
imul
testl
leave
or
shll
leave
popa
sar
push
push
cmp
sarb
xchg
orb
mov
das
inc
lahf
pop
add
pop
fidivrs
cmp
sub
cmpsl
lret
loope
repz
xchg
lret
jl
and
xchg
ffreep
mov
sbb
pop
xchg
out
add
cltd
or
jns
mov
mov
xchg
test
cmp
fcmove
insl
cld
pop
daa
rcrl
sbb
jne
std
jns
jae
mov
clc
jle
lds
xchg
push
out
and
dec
add
pop
sub
pop
sbb
pushf
add
ds
push
or
mov
addr16
and
aam
pop
xor
mov
mov
enter
dec
je
push
xor
int
push
or
flds
inc
xchg
repnz
cmp
fs
fnstcw
nop
insl
cltd
push
sub
mov
and
fs
push
cmp
push
ljmp
idivl
xchg
lds
adc
cmp
insb
pop
jle
testl
adc
sbb
cli
sub
jecxz
frstor
dec
shll
mov
adcl
fstps
cmpsb
lds
sub
cli
nop
enter
jns
aam
loopne
jno
movsw
mov
cmp
inc
daa
jns
test
fstpl
fwait
mov
and
mov
ja
cwtl
aaa
mov
mov
sbb
fstpt
fadds
loopne
hlt
les
loop
add
les
ficomps
pop
jmp
loopne
xor
jge
outsl
lea
aam
nop
aaa
inc
cmp
mov
jo
icebp
fisubl
pop
cmpxchg
sbb
mov
xorb
dec
imul
mov
sarl
sub
xchg
and
imull
sar
jmp
xchg
cmc
mov
jg
mov
cltd
push
daa
cmpsb
dec
enter
cmp
jp
sub
pusha
data16
jbe
xor
aam
aam
nop
lea
add
mov
cmp
mov
jg
test
add
inc
inc
insb
imul
and
xchg
ds
paddd
stos
push
inc
je
add
sbb
pusha
mov
out
aas
pop
pop
loope
adc
adc
sbb
push
mov
scas
movsb
adc
mov
mov
hlt
flds
dec
fnstcw
dec
cltd
arpl
gs
push
out
jp
lods
cmp
mov
jbe
fsubl
data16
mov
loopne
pop
xor
cmp
jp
mov
or
icebp
xchg
icebp
stos
out
mov
fists
sub
ljmp
ret
xor
pop
sub
mov
lods
sub
shl
adc
test
xor
iret
lcall
push
sub
inc
pushf
sti
ss
push
inc
push
push
ja
movsb
push
jne
inc
adc
fbstp
stos
notb
add
jge
in
jnp
je
repz
divl
ss
or
cmpsb
iret
mov
loope
mov
xor
sbb
mov
sbb
and
out
dec
sub
sub
fiadds
test
loop
iret
pushf
lock
shlb
xor
inc
sbb
test
test
sub
shrl
subb
push
out
aad
je
in
inc
imul
add
dec
out
in
lods
pusha
fimull
push
push
add
sub
pop
ljmp
mov
scas
xchg
sbbl
fnstcw
pushl
out
sbb
push
loopne
adc
cmp
or
jge
push
jbe
test
aam
jb
dec
stc
push
scas
pushf
jp
loope
jp
fcmovbe
or
into
mov
loopne
push
fisubl
shll
mov
pop
mov
inc
pop
pop
addr16
hlt
lds
das
in
xor
pop
xchg
lret
shrl
test
aad
cmp
dec
insb
push
fistl
dec
or
outsl
mov
dec
mov
je
fdivrs
lods
jne
es
cmp
pop
pop
xlat
sbb
test
cli
js
push
cli
inc
fildll
inc
stos
mov
or
pop
mov
or
mov
hlt
rcrb
mov
push
sbb
ss
jle
jl
cmpsl
sbb
and
adc
pusha
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shlb
loope
lock
add
nop
xor
loopne
aam
les
adc
add
jo
pusha
loope
jno
add
xor
ss
lahf
sahf
scas
mov
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
notb
in
aad
mov
shll
insl
test
pop
inc
pop
xor
sbb
in
mov
lods
movsl
mov
jne
gs
insl
inc
pop
jne
and
sbb
inc
aad
les
xchg
test
cmp
insb
push
push
inc
pop
pop
sbb
aad
lods
push
mov
movsl
fs
adc
testb
enter
and
inc
sbb
inc
and
pop
or
rcrb
pop
lret
push
or
mov
mov
popf
stc
mov
and
gs
and
repz
xor
sub
dec
lea
bound
adc
mov
ret
add
sbb
xor
dec
lea
pushf
push
loopne
jge
or
pop
jo
and
loop
loop
sbb
dec
xchg
dec
pop
push
mov
inc
insb
popa
imul
jle
dec
adc
in
mov
aad
vsqrtsd
and
push
jne
jge
das
sub
or
xchg
std
mov
sti
lret
shl
loope
lock
ss
inc
inc
dec
outsb
jl
pusha
jo
xchg
cmp
mov
rorb
adc
sbb
cmp
push
jl
inc
js
lods
mov
out
movsl
mov
jne
gs
dec
inc
pop
xor
or
in
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
inc
jp
in
add
xor
jmp
ss
in
mov
ret
data16
sub
fcoms
sub
int3
ret
push
fistpl
push
sub
inc
ja
add
dec
notb
imul
dec
aad
or
mov
into
pushf
xchg
xorb
aam
mov
sub
fisttpl
xchg
addr16
add
ljmp
jmp
stos
sahf
pop
xchg
dec
ja
cmp
xchg
pop
ret
nop
ret
push
in
negl
jo
cwtl
xor
rorb
jne
cli
sbb
jg
lds
mov
mov
sti
insb
lock
js
pop
arpl
movsb
pop
or
xchg
cmpsl
mov
xorb
mov
cwtl
inc
mov
dec
jge
jo
mov
int
call
ss
jne
mov
lahf
mov
jne
mov
js
test
in
or
add
pusha
jnp
adc
mov
imul
adc
data16
mov
jns
fcom
add
jne
mov
in
ret
and
in
out
sub
jne
lods
mov
push
in
mov
adc
xor
sub
mov
jae
adc
push
xor
repz
cltd
lret
adc
sbb
cli
iret
mov
gs
or
sbb
lds
lret
insb
add
xlat
stc
cmp
aaa
fwait
loopne
push
mov
inc
xchg
cmp
inc
cmp
inc
fwait
outsb
dec
rclb
mov
mov
jno
adc
sbb
add
inc
or
pop
hlt
fucomi
jb
add
fyl2x
jnp
test
subb
xor
mov
mov
lcall
cmp
jp
dec
nop
push
cmp
sub
dec
push
je
rcl
les
aad
nop
int3
cmp
jae
push
aam
cltd
inc
mov
jmp
nop
test
jmp
out
xchg
mov
and
add
jecxz
stos
pushf
mov
push
xor
into
jg
push
insl
pushf
pop
adc
push
sbb
pop
ds
loope
add
xorb
mov
push
xor
sarl
or
jmp
push
xchg
loopne
adc
adc
push
dec
inc
pop
loop
dec
out
ficomps
pop
filds
rdpmc
and
lods
xchg
push
mov
mov
fisttpll
adc
iret
nop
cmp
subb
pop
xchg
cmp
cmp
sub
sarb
leave
rorb
imul
movsb
pop
movsb
mov
cwtl
sbb
movsl
push
shrl
xor
scas
pop
dec
scas
push
sub
scas
sahf
addr16
jmp
xor
push
in
lock
pushf
fsubrp
je
sub
jmp
scas
les
arpl
stos
cmpsb
add
mov
push
inc
jo
hlt
frstor
call
push
xor
dec
cmp
cld
sub
push
adc
ljmp
mov
into
sarb
fdivs
test
lahf
mov
dec
data16
mov
loopne
test
das
jp
in
outsl
add
stc
fbstp
pop
ljmp
into
test
mov
movsb
push
hlt
ja
jecxz
ss
and
dec
arpl
mov
push
push
adc
cltd
hlt
and
sub
mov
push
xchg
xor
outsl
std
push
pop
pop
jo
push
dec
sub
dec
xor
pop
je
push
mov
dec
jp
in
jb
loopne
mov
jg
ret
out
and
adc
popf
test
insl
xor
cwtl
loope
in
fstpt
divb
or
in
cmpsl
push
or
adc
push
mov
cmp
and
js
push
push
xchg
cltd
adc
push
aaa
inc
repz
pop
mov
xorl
adc
clc
push
xchg
sarl
or
fldl
or
or
loop
in
dec
or
mov
xchg
inc
les
flds
pop
push
test
jno
mov
and
push
jmp
rcrl
movsb
jge
jnp
icebp
inc
push
pushf
stos
jmp
sub
ficoml
mov
pop
adc
ds
int
loope
fisttpll
je
mov
mov
cld
repnz
cmp
je
or
sub
pmaxsw
or
pop
jmp
jno
xchg
and
jae
fistps
sub
loopne
test
lcall
pop
sbb
mov
add
cli
jl
in
jge
dec
imul
jo
outsb
ss
jae
fiaddl
jge
test
or
jp
fadd
ficoml
psrad
mov
out
sub
insb
mov
jp
dec
nop
or
inc
mov
mov
and
sbb
inc
mov
xor
pop
in
dec
jo
jle
lods
outsl
enter
sbb
sub
divl
jecxz
add
and
mov
adc
mov
mov
mov
and
adc
js
fcoms
lcall
cmp
fdivrl
popf
and
dec
dec
call
jno
ja
push
lcall
mov
les
dec
orl
sub
pop
adc
decb
roll
lock
addr16
sbb
int
xor
ljmp
mov
mov
pop
es
pop
cmp
sets
adc
or
push
or
aad
mov
popf
or
push
scas
push
lds
mov
stos
xchg
fnstenv
test
xor
cmp
mov
xchg
sub
push
push
inc
test
cmc
mov
not
aam
das
rcll
orb
or
rclb
scas
and
jne
adc
xchg
popf
inc
sub
or
into
mov
cmp
mov
xor
and
mov
test
dec
xor
ret
in
xlat
mov
cmp
cld
sub
sub
lods
ljmp
pop
imul
or
push
mov
out
and
jne
cmpsl
push
inc
std
fninit
pusha
push
cltd
adc
test
fwait
mov
dec
fsubp
mov
jg
mov
fcmovne
cli
in
imul
insl
mov
dec
aaa
add
cmpxchg
cmp
push
hlt
cmpsb
cltd
incl
dec
inc
cmp
dec
ljmp
mov
and
mov
lods
lds
push
cs
jmp
ljmp
sub
lahf
lret
imul
rolb
xchg
dec
xchg
xchg
mov
xor
jns
in
cmp
js
dec
jae
sarb
pop
mov
sub
pop
loope
or
pop
push
data16
jmp
pop
mov
rcl
dec
je
xchg
sahf
xor
fwait
movzbl
add
adc
inc
push
insl
sahf
and
into
xchg
jp
sub
or
cmp
and
jmp
int
pushf
mov
inc
dec
cmp
pop
lret
int
adc
mov
int3
hlt
push
leave
aas
mov
add
inc
test
inc
fidivs
jl
in
xchg
sub
test
dec
sub
data16
int3
pop
les
adc
pop
pop
xchg
sbb
xor
dec
jne
cmpsl
jp
push
shll
pusha
mov
pop
rorl
lock
mov
xor
outsl
in
test
lods
ret
mov
mov
jmp
mov
ja
jp
lea
jl
pop
arpl
add
jmp
dec
orb
xchg
shll
mov
lret
xchg
loop
js
lcall
adc
scas
sbb
dec
push
ja
shrb
cli
and
cmp
lahf
hlt
es
pop
push
lret
jmp
and
jb
subb
mov
jno
movsb
stos
cltd
add
lret
jl
daa
jecxz
mov
jo
out
decb
das
add
xlat
adc
adc
mov
and
xchg
repz
mov
loop
popf
and
mov
add
fadds
mov
xchg
jbe
lods
scas
xchg
divl
lret
shrb
movsl
sbb
int
xor
pop
pop
pop
mov
jns
cmpsb
sub
pop
pop
ja
jge
rcrb
rol
and
daa
sub
daa
lods
adc
mov
dec
mov
pop
dec
or
inc
or
aam
notb
or
mov
cmp
ret
cld
insb
out
add
es
pop
sbb
jns
mov
and
inc
pop
repz
sti
inc
out
mov
jae
mov
outsl
shlb
lods
out
lods
mov
out
xlat
loop
das
leave
out
and
mov
pop
loopne
shrl
out
sti
iret
and
vpaddusw
out
test
jp
push
and
aam
pop
jne
in
icebp
xchg
cmp
out
ret
push
mov
paddusb
sub
cld
mov
inc
das
push
in
out
dec
movsb
test
dec
sahf
lods
js,pt
insl
ljmp
shl
jle
or
adc
pop
subl
and
add
mov
outsl
enter
push
js
ret
fidivs
cwtl
cwtl
adc
adc
loopne
cmp
cmpsb
or
daa
dec
shrl
fimull
jp
scas
pop
mov
mov
aaa
mov
push
adc
into
lahf
pop
test
icebp
repnz
je
inc
inc
mov
cli
sbb
push
or
orl
ljmp
jmp
xchg
stc
dec
fisubs
mov
sub
pop
xor
push
jmp
push
insl
dec
xchg
stos
sbb
fcoms
push
mov
sti
mov
rolb
add
int
mov
sbb
lds
pop
pop
pop
popa
mov
bound
enter
sbb
inc
push
fcomip
lea
sahf
cld
push
shrb
pop
sub
int
ljmp
ljmp
pop
xor
mov
ficomps
mov
add
lret
shl
aam
pop
mov
push
jns
adc
lods
inc
sub
or
sarl
sbb
dec
xchg
pop
jo
loopne
cwtl
fsubrp
inc
sub
jmp
ret
clc
sub
mov
test
sub
stos
loop
push
pop
inc
cwtl
movlps
push
cmp
cmp
push
jno
add
xchg
dec
ja
pop
adc
aas
pushf
fidivs
mov
jnp
fistl
lods
xchg
in
mov
loop
xchg
cwtl
lcall
ja
js
repnz
int
jecxz
sub
outsl
cmpsb
dec
pusha
sub
add
ljmp
stos
js
push
sub
add
out
mov
mov
mov
pop
cmp
cmp
xor
divl
outsl
scas
jae
ss
push
out
iret
decl
jns
arpl
inc
jo
xor
iret
jae
dec
imul
out
outsb
std
nop
cwtl
in
push
aad
add
loopne
cwtl
movb
pop
push
ds
pop
sub
adc
ror
mov
cld
dec
xchg
jle
sub
popf
mov
ljmp
mov
jb
xor
dec
arpl
in
enter
enter
in
loope
or
and
pop
out
fcmove
jns
into
cmp
or
push
adc
rol
fnstcw
out
scas
insb
add
test
fisubrl
icebp
mov
bound
in
sbb
aaa
ljmp
jmp
fmuls
jnp
push
das
cmp
pop
inc
mov
jl
fwait
popa
sub
push
xor
sbb
jecxz
adc
das
mov
jb
scas
and
bound
jl
aaa
cmp
fmuls
popf
cmp
ljmp
in
add
dec
push
jns
scas
jbe
mov
adc
adc
sbb
mov
mov
push
aas
test
and
jmp
or
cli
and
inc
or
shl
jb
push
xlat
setl
mov
sub
adc
test
popf
jle
cltd
outsb
mov
or
into
cmc
shrb
jge
scas
push
mov
dec
fisubs
out
rorl
xchg
sub
inc
pop
jne
stos
jp
dec
mov
jge
mov
add
cmp
push
xor
les
rcrl
testl
repz
pusha
jae
repz
jmp
ret
mov
jnp
mov
xor
fisubl
pop
push
dec
jb
fstps
add
cli
gs
push
rorb
hlt
mov
mov
pop
stos
xor
popf
mov
aas
mov
call
out
mov
add
lcall
bound
pop
push
rcr
rcl
and
pusha
sbb
push
xor
insb
insb
shlb
in
and
sbb
inc
nop
pop
mov
aad
fnstsw
mov
add
inc
bnd
aaa
rorl
sbb
mov
mov
loop
mov
mov
iret
dec
filds
sar
lds
mov
lds
scas
mov
inc
iret
mov
xchg
lea
int3
or
mov
pop
mov
mov
xor
ffree
cmp
out
inc
xchg
das
cli
in
cmp
sahf
int3
bnd
mov
sub
inc
fmuls
test
mov
dec
jmp
mov
sub
and
nop
sub
push
test
xchg
or
push
inc
cmp
je
fs
or
loope
mov
push
in
and
xlat
and
aad
jmp
call
or
dec
jecxz
les
mov
mov
xchg
mov
ficompl
test
fistps
scas
pop
xchg
shrb
mov
cltd
test
adc
jns
repz
sub
iret
mov
push
jb
pop
psubq
inc
adc
inc
hlt
mov
pop
test
lea
lret
in
add
jo
push
push
leave
jbe
fs
mov
mov
pop
out
jl
mov
aas
sbb
sbb
mov
nop
inc
sahf
lock
psubsb
or
daa
xor
push
addb
jnp
mov
movsb
add
sbb
in
in
jmp
or
lcall
repnz
aaa
mov
lret
jnp
cmp
loope
push
push
mov
incb
or
add
mov
add
addb
mov
aad
cmp
mov
movsl
pop
push
sbb
test
call
repnz
shlb
pop
jb
les
mov
xor
test
cltd
imul
fcoml
mov
and
call
mov
fyl2x
jmp
adc
sbb
adc
xchg
sbb
or
fsub
jg
and
out
stc
jo
jp
jne
jne
fcmovne
jmp
pop
test
adc
test
cmovbe
sub
jmp
sbb
pop
repnz
mov
imul
bound
cli
xlat
or
push
loope
add
pop
sti
outsl
ret
adc
jae
inc
lahf
mov
adc
jp
xchg
out
ficomps
inc
outsb
das
sbb
std
inc
cmp
std
sub
stos
jg
and
loope
mov
rorb
push
fcoml
push
loope
out
fildll
sti
sbb
xor
enter
cld
lcall
pop
jmp
into
add
popa
in
sti
fnsave
jne
jle
adc
rcrb
or
jo
pop
add
loope
cmc
push
mov
cmp
inc
ds
test
cmp
bound
xor
wbinvd
xchg
push
mov
adc
jae
ss
cmp
push
dec
call
mov
popa
test
ljmp
mov
adc
sub
sub
or
movsb
xchg
fldenv
mov
mov
ficoml
imul
cmp
pop
repz
jo
fisubs
mov
je
mov
outsl
mov
movsb
in
push
adc
add
sbb
lods
pop
dec
ljmp
push
mov
lret
xor
bound
lret
xchg
mov
scas
nop
es
push
in
rclb
fs
stos
das
xor
imul
cli
aam
sbb
add
mov
shll
cmp
push
ret
add
cmp
jle
pop
add
shrl
or
clc
ljmp
sbb
push
pop
jns
lods
cmp
in
xor
jnp
pusha
mov
test
inc
jmp
ret
dec
shll
pop
mov
pushw
jae
cmpsl
jmp
aad
neg
aad
lret
out
mov
andl
jecxz
xchg
cwtl
shlb
inc
mov
inc
push
pop
or
mov
movsb
mov
push
adc
stos
loop
aad
pop
lret
xchg
add
insl
and
mov
rcll
adc
aas
das
sbb
enter
sbb
xchg
xor
inc
push
test
int
fsts
xchg
xlat
mov
aas
fwait
mov
or
fldcw
adc
pause
push
test
jge
ss
push
jge
jle
test
pop
sti
pusha
cs
or
adc
dec
mov
jne
testl
jbe
sbb
xchg
inc
add
lock
ss
add
push
cmp
aas
pop
bound
sub
sbb
mov
negl
sub
aas
push
test
xor
pop
xor
loopne
cmc
cli
and
xchg
shrb
cmc
aas
add
add
sbb
hlt
scas
xorl
int
cmp
cld
clc
jge
jle
notb
xchg
push
xchg
jl
or
notb
ss
sbb
popa
inc
cmp
into
rorl
pop
or
push
jbe
ret
icebp
stos
jbe
adcb
gs
mov
ja
sti
mov
out
movsl
test
adc
or
ss
in
pop
jnp
cmpsb
into
imul
xchg
cltd
mov
scas
gs
adc
into
lret
xchg
mov
movb
lods
push
add
inc
pushf
mov
cltd
inc
dec
sbb
cmp
cwtl
gs
inc
mov
jne
pop
aaa
xor
cmpsb
hlt
outsb
insl
fidivs
rolb
int3
or
insl
mov
pop
jle
hlt
js
fadds
mov
push
les
dec
enter
dec
ds
pop
mov
pop
mov
out
mov
jns
cmp
inc
or
insl
push
cmp
push
and
mov
int3
iret
roll
and
add
add
in
cmp
xchg
push
jp
notb
xchg
clc
shll
cmp
jp
fsubl
adc
pusha
jecxz
mov
sub
in
add
or
jecxz
andl
ja
bswap
push
push
rol
pop
and
push
dec
add
movsb
in
xorl
out
mov
push
lds
cmp
inc
mov
cltd
inc
jno
sahf
fnstenv
clc
xor
outsb
stos
sysret
inc
xor
je
inc
pushf
push
sub
jae
out
imul
mov
mov
jp
repnz
fsubl
lds
lahf
cmp
addr16
fcomps
pop
imul
ret
dec
mov
scas
fdivl
movsl
aas
xlat
sahf
cli
fsubs
cmp
and
daa
cs
sbb
mov
jp
ds
aaa
mov
mov
or
mov
scas
call
movsb
mov
mov
testl
lcall
stos
cli
movsb
or
xchg
sub
jp
popa
push
lods
xchg
ljmp
mov
scas
sbb
loopne
sub
mov
adc
std
pop
push
add
xchg
cwtl
push
xchg
mov
ret
jp
ficomps
push
punpcklwd
popf
jns
fcompl
jns
int
mov
mov
mov
sub
imul
cmp
fildl
cs
je
cwtl
mov
mov
movsl
loopne
push
mov
push
ja
ret
or
cmp
xlat
lahf
out
lret
out
mov
int
decb
jmp
mov
jmp
dec
in
popl
jp
mov
in
cmp
ret
xlat
sbb
sub
xor
fcoms
and
push
inc
fldt
movsl
push
or
repz
mov
pop
divl
or
cmpsb
icebp
dec
out
sbb
inc
in
jl
add
inc
cld
ror
push
sbb
dec
inc
adc
jo
pop
cmp
sbb
js
sub
add
add
inc
movsb
xchg
dec
or
aaa
adc
xchg
loop
rcrb
cltd
dec
add
push
and
xchg
lahf
xorb
addb
jle
dec
dec
je
jecxz
dec
lretw
sub
int
clc
faddl
out
jae
or
cs
shl
movsl
mov
lcall
lds
and
jnp
clc
sub
push
lret
xchg
mov
call
ret
into
cmp
adc
adc
jl
and
mov
insl
sbb
inc
mov
aaa
and
dec
push
push
scas
pop
mov
aam
xor
lods
leave
das
mov
cmp
nop
fidivrs
repnz
pop
or
jmp
sbbb
mov
outsl
fucom
cwtl
lret
mov
cmp
out
xchg
adcl
adc
mov
imul
dec
cmp
xchg
and
fnsave
lea
jge
dec
inc
pop
xor
or
in
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
aad
mov
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
sbb
int
fnsave
lea
xlat
decl
sub
lods
ret
cli
loop
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
imul
add
jle
sbb
push
int
dec
int
popf
test
mov
dec
imul
sbb
or
stc
cltd
enter
int3
mov
inc
imul
sub
and
jmp
cltd
mov
out
shl
in
out
sub
sbb
cmp
xchg
icebp
push
or
sbb
push
add
jmp
jbe
pop
pop
imul
aam
cmp
mov
and
push
add
loopne
and
and
sarb
mov
push
fs
das
shlb
clc
lods
iret
adc
bound
test
add
push
in
insb
popf
pop
out
cmp
sbb
aad
sub
push
std
cmpxchg
ficomps
cld
inc
cltd
mov
mov
push
dec
mov
cmp
in
call
cli
mov
mov
mul
push
mov
addl
and
xor
add
jmp
popf
imul
or
or
jmp
hlt
flds
mov
sbb
or
jns
pusha
dec
aas
insb
inc
insl
test
lcall
fdivr
enter
dec
adc
imul
aaa
fisttps
mov
int3
das
int
lods
int
sub
sbb
cmp
jmp
in
fstps
mov
jns
dec
insl
pop
sbb
or
stc
std
leave
in
fstps
mov
push
and
add
xchg
cli
xor
jecxz
mov
adc
cmp
and
or
mov
push
mov
loope
push
or
fs
imulb
and
push
mov
in
sub
and
test
test
icebp
into
test
sub
enter
dec
and
push
mov
nop
fstpl
or
in
inc
stos
pushf
sahf
jecxz
rolb
testb
les
test
pop
fwait
jp
in
push
mov
mov
mov
cmp
neg
lret
xor
std
dec
xchg
cmpb
sbb
vunpckhpd
xchg
cmp
stc
push
or
or
mov
leave
or
shlb
daa
sub
push
clc
scas
or
or
jo
lods
sub
sbb
sbb
call
fidivs
push
gs
pusha
inc
ret
outsl
aaa
mov
mov
in
xchg
repnz
adc
adc
test
stos
lods
add
mov
outsb
push
cmp
daa
mov
repz
sub
shrb
inc
dec
cmp
jmp
pushf
enter
mov
andl
or
mov
xor
aad
pop
inc
outsl
pop
mov
mov
or
sbb
pop
jmp
or
pop
push
cmp
shll
lods
insb
pop
push
and
xor
xor
mov
fsubs
lea
movsb
bound
inc
out
pushf
and
insl
mov
mov
inc
cmp
xchg
push
inc
cld
aas
inc
xlat
xor
adc
lcall
in
flds
rorl
jb
cmpsb
mov
pop
jbe
push
lea
xchg
push
jmp
mov
cmp
fcoms
cmp
les
dec
subl
leave
push
push
in
clc
jle
push
dec
pusha
jecxz
add
test
xor
daa
jecxz
sbb
and
cmp
in
mov
sahf
ds
fsts
mov
dec
mov
jl
cmp
adc
aad
xchg
outsb
mov
pop
in
aaa
add
mov
les
adc
rcr
push
sub
int
sub
sahf
out
test
xorb
pop
daa
cmpsb
sti
lods
fs
or
incl
dec
mov
pop
out
lahf
mov
jno
insl
mov
popf
and
ret
push
mov
lea
mov
cmpsb
je
add
xor
lar
cwtl
xor
scas
out
bound
insl
repz
add
sahf
xor
lret
cmp
sub
mov
outsb
fucom
lods
mov
cmp
stc
or
xchg
lret
and
mov
xor
cmpsb
insb
out
or
sub
outsb
mov
nop
dec
mov
add
les
insb
sub
push
inc
lret
mov
stc
xor
call
mov
xchg
xor
lret
jne
mov
cmp
inc
xorl
lret
jle
outsl
cmp
push
inc
inc
sbb
loope
scas
jle
aad
sub
stc
jno
mov
xor
outsl
daa
dec
fldl
imul
xchg
rcrb
pushf
int3
lcall
ds
call
ds
inc
insb
mov
or
adc
ja
add
aas
int3
outsl
jge
in
iret
lret
adc
shlb
popf
xchg
mov
jns
sbb
popa
mov
or
and
testb
lods
xor
ds
dec
aam
push
aad
stos
sub
xchg
xor
das
dec
imul
loopne
js
out
mov
lret
push
inc
in
mov
cmp
dec
xor
mov
sbb
or
sbb
lret
sbb
xchg
fidivrs
rcrb
sub
aas
inc
lock
inc
jmp
push
dec
add
xchg
push
pop
mov
jl
test
xchg
xchg
jmp
cmp
push
cmp
adc
fnstcw
or
repnz
leave
mov
mov
sbb
call
aaa
rolb
stos
sti
xlat
jb
ss
push
jbe
aaa
movsl
xchg
sbb
icebp
cli
int3
mov
rcrb
dec
jmp
sbb
push
pop
adc
dec
pop
dec
sub
mov
mull
jbe
jg
movsb
or
sub
push
mov
and
xchg
xor
cmp
inc
push
adc
inc
sub
js
mov
imul
lahf
in
xchg
std
push
data16
adc
push
test
or
mov
push
ret
js
sbb
insb
negb
jecxz
cmpsb
andb
adc
and
mov
notl
popa
bound
pop
pusha
not
jl
pop
lock
mov
push
pop
push
fpatan
jo
js
xor
int3
add
and
aaa
iret
dec
or
nop
shrb
pop
dec
in
pop
sti
fiaddl
push
cltd
jecxz
aam
scas
into
sub
rclb
je
inc
cltd
in
push
and
inc
cmp
fiaddl
jo
int
push
adc
sub
dec
aad
into
scas
call
scas
rcrl
jae
adc
sti
iret
pop
adc
sbbl
fsubr
dec
sub
out
xchg
adcl
rorl
add
shl
or
sahf
push
jg
and
xor
jae
dec
in
hlt
and
nop
and
stc
dec
lret
jb,pn
repz
punpckhwd
xchg
dec
daa
leave
or
lods
xchg
or
imul
fs
outsl
sbb
into
iret
popl
or
cmpsl
nop
in
insb
fs
cmp
lds
into
pop
sbb
fldcw
inc
mov
pop
push
push
cld
push
ss
pop
cmp
mov
loopne
pop
or
push
jg
mov
sahf
imul
jnp
jns
mov
mov
xchg
pop
xlat
or
xchg
andb
xchg
daa
cmc
movsb
fistpll
push
push
cmp
or
xor
cli
xchg
add
mov
fcoms
test
and
idivb
jl
in
je
mov
xchg
push
rcrl
icebp
test
iret
push
sub
xor
and
shlb
dec
lock
or
cs
clc
loopne
sarl
xor
ja
add
popf
and
mov
out
mov
mov
lods
or
sbb
imul
push
ret
pop
xlat
adc
icebp
out
ret
das
add
out
sub
mov
ljmp
shll
aam
adc
fcoms
aas
in
pop
ficompl
pop
mov
in
sti
out
stc
lahf
in
xchg
inc
cmc
les
mov
cmpsl
pop
mov
icebp
mov
je
adc
sahf
xor
jmp
cmp
mov
dec
test
sbb
leave
lret
xchg
adc
sbb
xchg
js
stc
jns
pop
int
repnz
xchg
ja
cmp
inc
lret
ret
stos
xchg
cltd
jnp
cmovnp
or
mov
imul
dec
inc
jmp
inc
mov
sbb
rcrl
test
push
xor
xorl
dec
std
sahf
faddl
inc
mov
popa
fidivrs
ss
mov
movsl
or
pushf
lods
stos
push
jns
mov
rcrl
cwtl
mov
push
in
cmpsl
adc
xchg
mov
xor
in
pop
xchg
mov
rcrb
pop
ficoml
loopne
sbb
pushf
out
out
push
dec
dec
add
insb
and
cld
dec
pop
pop
mov
mov
stc
data16
mov
clc
popf
sub
push
xor
sahf
aam
ss
in
clc
add
into
sti
aam
test
std
push
pop
or
into
mov
out
repz
pop
int3
or
pop
dec
jnp
add
push
dec
stos
mov
cwtl
sbbl
repnz
xor
daa
mov
sbbb
repz
add
and
cmpsl
mov
cmp
push
lods
mov
jnp
add
mov
jp
imul
push
push
mov
mov
sub
std
pop
xchg
cltd
xorl
xchg
out
call
aas
or
adc
jno
fadds
aad
les
sbb
movsl
sub
pop
add
lods
and
popa
mov
pop
int
xchg
iret
pusha
mov
xchg
push
pop
push
aad
pop
push
or
sbbl
sbb
test
xchg
push
out
or
dec
out
add
cltd
jno
push
mov
add
mov
inc
pusha
insb
imul
sbb
loope
jecxz
sbb
cltd
cmp
push
push
mov
test
or
mov
stc
add
or
out
jo
dec
int3
inc
add
sub
idivl
jecxz
cmp
fnsave
sub
adc
and
lahf
mov
cmpsb
pop
mov
sar
mov
testl
mov
mov
pop
cmpsb
mov
ja
adcb
ret
leave
addl
addr16
lret
sbb
jne
pushf
xlat
add
mov
movsb
mov
pop
outsw
gs
popa
mov
into
add
es
pop
push
fldl
xchg
in
pop
out
pop
shlb
push
add
fmul
mov
sub
sub
loope
cmp
mov
mov
rcrb
test
out
add
adc
mov
insl
jb
sub
mov
fistpll
outsb
sub
push
or
vmwrite
daa
sbb
adc
inc
cmp
outsb
add
xor
loopne
enter
popa
xlat
and
add
push
shl
sub
dec
out
push
imul
push
cmp
add
cwtl
jmp
popa
push
xor
jmp
xchg
popf
dec
pop
pop
lods
inc
inc
out
arpl
cwtl
jg
pop
fisubrl
cmpl
jnp,pn
outsb
fldcw
xlat
jle
test
xchg
and
xchg
push
adc
loopne
test
in
and
sub
and
sub
push
stos
pushf
push
or
test
in
push
sti
movsb
cmp
xchg
js
xchg
aad
mov
pop
in
cwtl
cs
fimuls
and
xor
mov
mov
pop
sbb
adc
adc
repz
lods
dec
xchg
mov
push
inc
btr
jae
or
xchg
aad
icebp
mov
and
push
call
sbbl
pushf
xor
ds
xchg
push
cmp
pop
into
xor
xlat
cli
add
xchg
stos
call
mov
xchg
jae
lret
mov
cltd
test
xchg
cmp
inc
xor
in
testb
push
std
adc
cmp
or
cmp
push
mov
and
adc
sarl
mov
mov
lret
jp
and
stc
xor
hlt
xor
call
data16
movsb
xor
cs
insl
pop
mov
mov
dec
cmp
in
jecxz
ficompl
xor
cs
jae
inc
cltd
mov
push
dec
into
lods
add
mov
lods
mov
outsb
insl
cmp
insl
imul
ja
xchg
sbb
dec
cld
arpl
sbb
add
mov
add
xchg
test
int3
fwait
xor
testl
and
out
push
outsl
sub
push
shrb
adc
mov
sbb
jno
sbb
inc
hlt
mov
mov
cld
mov
pop
push
mov
in
lret
inc
pushf
das
pop
stc
stos
and
xchg
gs
stos
mov
mov
xchg
rorl
out
xchg
cmp
sbb
mov
lret
jne
shl
mov
test
incb
mov
xchg
jbe
push
shrl
sbb
mov
mov
add
cltd
push
push
cmpsl
imul
mov
shl
jns
out
data16
es
movsb
cmp
mov
cltd
push
mov
dec
add
sbb
dec
and
add
mov
ja
sahf
push
jbe
in
jmp
cs
pop
mov
mov
shrl
adc
out
or
out
lcall
inc
inc
push
out
fcoml
mov
lret
and
and
sub
pop
push
jmp
or
clc
cmpsl
inc
xchg
loop
leave
into
dec
sub
clc
push
mov
scas
dec
dec
xor
sbb
paddw
aas
repz
mov
xor
jno
fcmovu
in
and
add
push
jg
sbb
and
cmp
cs
and
aam
ret
insl
jecxz
ret
jns
aaa
gs
cmp
dec
sarb
stos
lea
xor
mov
mov
filds
leave
cli
adc
cmp
mov
loope
arpl
arpl
push
lods
adc
jp
sahf
repz
in
adc
aam
bswap
aaa
aam
jle
insb
je
push
fcomps
and
icebp
inc
mov
inc
or
aaa
repz
aaa
fimuls
pop
mov
fs
and
mov
addr16
pop
mov
pop
jns
adc
aam
call
push
les
add
fidivl
xchg
test
jbe
pusha
xor
stc
imul
pop
sti
cwtl
add
sbb
cltd
les
xor
jbe
arpl
jmp
jne
jae
mov
mov
out
or
jg
jg
pop
cltd
xor
jle
xor
sbb
frstor
adc
sbb
mov
sti
fsubrl
jl
fidivrl
ss
mov
pop
xchg
inc
mov
adc
loope
dec
pop
fcomps
dec
int3
lock
and
cli
xor
shr
inc
loope
ret
push
popl
dec
mov
testl
mov
outsb
dec
test
mov
jnp
mov
scas
jp
lret
ds
jl
adc
and
ss
jbe
inc
clc
jmp
mov
push
jmp
and
mov
cmp
dec
mov
addb
movsl
sub
cli
jae
or
mov
loopne
cwtl
jl
mov
sub
cmp
push
cmp
call
cmp
testl
add
sbb
jb
aaa
mov
mov
aad
imul
icebp
push
cmpsb
fisttpll
xchg
das
xor
mov
inc
dec
insl
imul
cld
xor
mov
jbe
scas
js
mov
pop
dec
cmpsb
icebp
or
push
rcrl
shrl
mov
push
add
in
dec
mov
fsubl
xor
xor
insb
dec
clc
ret
xchg
xchg
shll
test
lock
daa
movsb
xchg
jecxz
mov
in
cmp
push
aam
jl
cmp
fs
cmp
std
jl
cmp
test
arpl
js
movsb
imul
mov
xor
es
js
dec
push
shl
dec
push
mov
call
ret
jbe
insl
test
sub
pop
add
jl
sti
or
fcmovnbe
cmp
pushl
lret
add
addl
mov
jp
bound
mov
xchg
clc
cwtl
xchg
push
inc
shrb
sbb
xor
mov
xchg
add
or
cmp
mov
aas
cld
adc
mov
xchg
mov
incl
dec
push
mov
push
push
inc
push
ds
mov
ret
cli
dec
imul
xchg
call
fistpl
jb
lcall
adc
add
sarl
je
mov
call
stc
test
xchg
cli
cld
inc
push
mov
and
loopne
and
pop
test
cmp
xlat
enter
es
xor
xchg
fldenv
cmp
push
and
clc
sahf
dec
js
dec
sub
daa
test
xchg
add
cmc
xor
loope
pusha
hlt
sbb
mov
mov
push
sbb
popa
ret
push
fadds
mov
pop
jmp
out
jle
es
pop
es
stos
addb
mov
mov
mov
sti
pop
lret
lret
dec
lret
jae
ljmp
mov
jge
mov
add
push
insb
xor
cmpb
aam
xchg
loopne
rorl
xor
in
sbb
cmp
out
dec
rclb
nop
mov
inc
mov
cwtl
lods
cmp
call
scas
out
jnp
mov
cmpsl
mov
sub
inc
mov
fimuls
aad
repz
add
xor
das
aas
loopne
dec
cltd
testl
ss
cltd
daa
mov
mov
scas
dec
mov
test
jl
xor
xchg
xor
das
ret
jp
repnz
shll
lret
in
xchg
sub
xor
arpl
sahf
push
mov
outsl
or
and
mov
jecxz
rol
add
push
lods
jne
pop
ljmp
cmpsl
es
xchg
sub
subb
fwait
mov
aas
push
inc
rclb
xchg
mov
shrb
dec
push
xchg
shlb
out
mov
mov
dec
pop
out
in
movsl
sub
fnsave
push
add
movsb
dec
or
shll
stc
jecxz
jae
in
lret
imul
jmp
xchg
push
test
jge
stos
subb
mov
shll
xchg
push
cwtl
add
icebp
pop
sbb
popf
cmp
repz
cmpsl
mov
lock
lcall
push
bnd
jae
lds
lret
jb
rorb
mov
hlt
inc
les
push
mov
out
fdivrs
add
mov
jmp
sub
or
in
sbb
lahf
and
vrsqrtps
xor
xor
cmp
ds
adc
sbb
mov
out
jb
cmpsl
or
je
enter
push
xor
mov
push
xchg
adc
cmp
dec
mov
push
push
push
movsl
jge
push
jecxz
popf
push
out
mov
mov
out
push
add
mov
test
notl
movsl
jg
bound
xchg
sahf
xchg
cmp
push
dec
xor
mov
in
cs
jns
aas
loop
xchg
mov
cmp
jns
add
shll
mov
lcall
inc
add
sub
add
or
push
repnz
or
insb
lahf
sbbl
lock
inc
push
jnp
scas
pop
lea
mov
inc
mov
mov
lock
fsub
push
daa
ret
sti
mov
xchg
arpl
mov
movsl
int
jp
arpl
outsb
pop
inc
or
add
add
adc
push
sarl
mov
pushf
test
push
and
sub
adc
push
adc
aam
int
jno
stc
adcl
xchg
jl
test
outsl
shlb
das
xor
ffreep
fdivrl
cmp
jae
inc
cwtl
idivb
andb
dec
mov
mov
popa
adc
adc
gs
ds
xchg
test
iret
pushf
cld
sub
add
dec
mov
sbb
xchg
lods
ds
pop
cmpl
lret
jb
push
inc
in
fnstsw
ss
cmp
or
dec
jl
adc
inc
lcall
shlb
and
fwait
test
cmp
sbb
xchg
adc
push
mov
leave
shrb
imul
xchg
push
jns
imul
scas
sub
lock
mov
jae
outsl
mov
cmp
xchg
add
outsb
loope
test
or
lcall
testl
je
loop
loope
sbbb
repnz
cmp
movsb
dec
mov
fwait
mov
je
lcall
rorb
mov
pop
sub
dec
xor
mov
imull
push
lods
jno
jnp
out
js
jne
and
loop
push
sbbl
subb
jp
and
ljmp
jbe
cmovns
out
xchg
cmpsb
iret
or
pop
mov
cmp
arpl
pop
loop
enter
jbe
shll
push
bound
dec
xor
pop
in
mov
mov
scas
cmc
in
outsl
sub
lods
sbb
dec
adc
xor
sbb
push
sub
inc
or
sbbl
out
cld
mov
add
mov
xchg
addb
je
mov
test
loope
or
dec
jl
xchg
push
cmp
cmp
ret
bound
sti
scas
ss
nop
xor
popa
iret
lret
mov
sub
mov
cld
aam
mov
inc
inc
out
xor
pop
cmp
mov
jle
jb
data16
xchg
mov
movsl
rep
aad
pop
cmp
jge
push
push
cmp
jecxz
repnz
dec
adc
sub
adc
inc
test
push
sub
test
jb
cli
loope
enter
add
mov
pop
push
pop
clc
xor
xor
sbbb
jl
xchg
mov
mov
inc
adc
and
push
sahf
insb
sbb
pop
movsl
aaa
fdivl
pop
ds
rcll
scas
shll
dec
add
fidivrl
stos
push
repz
and
mov
sbb
hlt
adcb
out
jns
dec
insl
pop
sbb
or
stc
std
leave
in
fstps
mov
jns
dec
insl
pop
sbb
or
stc
std
leave
in
fstps
mov
jns
dec
insl
pop
sbb
or
stc
stc
leave
in
fstps
mov
dec
dec
insl
pop
sbb
or
push
push
leave
in
scas
ljmp
data16
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
