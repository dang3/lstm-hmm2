mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
popa
adc
push
pop
xchg
addr16
sbb
loopne
icebp
jp
dec
rcrl
sub
sbb
jno
inc
lret
and
adc
icebp
push
pop
rorl
mov
dec
xchg
sbb
push
fdivrs
xchg
sub
clc
mov
sbb
jge
push
fnstsw
sbb
ljmp
jb
xor
rclb
rorb
sbb
dec
mov
jmp
nop
in
or
test
fs
fsubrs
cmp
sub
xchg
sahf
jmp
pushl
stc
mov
mov
adc
pop
xlat
mov
lret
pusha
sub
mov
jne
fisubrs
adc
xchg
lock
jg
cmpsb
pop
sub
dec
xor
cld
adc
cltd
mov
fimuls
loope
loope
aaa
push
lea
pop
pop
jns
cmp
and
push
fldt
cmp
lret
push
push
adc
loop
orl
push
shlb
stos
and
clc
in
jmp
adc
or
cli
and
and
aad
jecxz
jmp
sub
aas
mov
mov
mov
dec
cld
jnp
scas
adc
dec
lds
mov
in
mulb
das
nop
cmp
imull
jno
mov
cmp
add
icebp
jp
dec
rcrl
sub
sbb
jno
inc
lret
and
adc
rorl
mov
or
sub
dec
xor
out
dec
mov
mov
push
mov
scas
enter
loop
dec
dec
addb
push
test
sarl
dec
stos
dec
add
or
inc
imul
out
loopne
cmpsb
adc
mov
stos
outsb
adc
jg
in
pop
xor
inc
test
jmp
je
data16
inc
mov
jp
roll
cwtl
insb
pop
sbb
dec
jnp
stc
jne
xchg
pop
movsl
adc
cwtl
repnz
push
aas
jle
xchg
out
sbb
in
xor
pop
in
add
add
repz
push
inc
cli
xchg
cmp
xchg
leave
imul
push
xor
les
pop
pop
sahf
or
pop
aaa
lods
mov
ret
shll
je
mov
mov
mov
ret
je
ret
ljmp
adc
into
pop
jge
rcll
sub
mov
lods
pop
lret
outsl
adc
orb
sub
mov
cmp
adc
sahf
jmp
mov
xor
mov
movsl
sbb
les
rclb
lret
or
loop
fistps
mov
movsl
arpl
sbb
rolb
roll
stc
cmp
icebp
ja
jecxz
inc
jbe
out
shlb
inc
sub
mov
inc
js
inc
pop
scas
out
mov
and
add
sub
sub
xchg
or
xchg
popf
inc
loope
gs
sub
xchg
nop
mov
push
jle
mov
xor
mov
add
add
jae
cmp
lret
pop
ss
xchg
cmp
mov
fwait
add
repz
cmp
pop
push
popa
loopne
mov
xchg
daa
xchg
pushf
jnp
push
rolb
sbb
jle
mov
xlat
mov
fwait
mov
xorb
cmp
in
pop
adc
xor
in
pop
sahf
jne
sub
pop
push
mov
es
dec
lahf
xor
xor
inc
push
push
pushf
pop
shlb
lods
lock
push
inc
std
xchg
je
movsb
aad
mov
scas
scas
xchg
inc
nop
nop
vrsqrtps
inc
fs
mov
cmp
cltd
mov
inc
or
sub
push
jns
imul
pop
dec
mov
jmp
int3
cmc
pop
add
sub
mov
fstpl
jp
jmp
push
adc
fs
pop
jmp
mov
cmpsb
sbb
cmpsb
sub
lret
pop
push
stos
aad
jo
pop
inc
fstpt
fs
ret
sub
cmc
jno
push
pop
lds
lea
jne
in
inc
outsb
das
mov
jae
push
in
ja
xchg
jg
pop
or
lods
out
jnp
je
mov
imul
mov
pop
push
push
sti
inc
test
repz
jno
fdivrl
les
xchg
pusha
mov
inc
iret
fldl
imul
sar
dec
pop
jmp
or
fidivl
sbb
mov
dec
pop
repz
xor
popf
xor
inc
lret
addr16
movsl
daa
shl
or
mov
stos
cwtl
mov
fcoms
sbb
jmp
or
int
mov
pop
test
imul
mov
test
add
mov
cwtl
pop
mov
inc
adc
movsl
inc
xchg
sub
xchg
cld
xchg
sbb
mov
cld
xlat
outsl
jae
adc
incl
test
das
rcll
mov
icebp
cmp
aad
adc
int3
inc
daa
sub
and
pop
mov
add
adc
lret
xor
lock
adc
aad
push
stc
pop
insb
adcl
imul
and
pop
imull
loope
fidivrs
and
outsl
or
out
ret
cmc
je
mov
mov
popa
jnp
jl
in
mov
jbe
cmpsb
mov
jg
in
jle
das
pop
icebp
out
mov
fildll
sbb
movsb
mov
or
das
jle
sti
add
insb
add
loopne
imul
cmp
pop
popa
out
mov
push
mov
mov
add
sbb
arpl
fdivrl
aad
clc
mov
mov
and
xor
cmc
xor
mov
les
std
mov
mov
scas
in
subl
mov
out
je
lcall
inc
lock
mov
into
push
jg
aam
ficomps
or
imul
push
fnstsw
jecxz
std
mov
add
inc
shrl
mov
aas
sub
ja
push
mov
fidivrs
cmpsl
ds
sti
and
out
shl
push
or
ret
push
insb
inc
mov
push
fs
sub
dec
dec
dec
push
addr16
xlat
es
ret
jg
rcrb
jb
push
lahf
icebp
or
sub
jecxz
pop
popf
leave
xchg
hlt
scas
adc
leave
sub
dec
testl
mull
aad
mov
pusha
jno
call
push
mov
je
adc
dec
cmp
loopne
or
lahf
jmp
cmp
lds
push
shlb
mov
cwtl
pop
push
call
adc
add
or
js
jbe
jecxz
fbstp
inc
inc
add
pop
add
sub
aam
mov
cltd
test
ss
sahf
xchg
adcb
mov
or
add
mov
mov
sbb
sbb
je
push
cmp
push
jae
xorl
add
mov
test
out
cmp
mov
xchg
or
mov
fnstsw
mov
mov
xor
push
xor
fwait
cmc
pop
movsl
sub
and
or
lahf
mov
sbb
jecxz
movsl
xchg
and
mov
mov
inc
rcrl
jnp
xchg
enter
mov
sbbb
mov
lret
xchg
mov
cmp
loope
es
jno
xchg
outsl
cmp
sub
test
mov
ds
mov
push
pop
stos
cmp
dec
cmpsl
pop
jg
fmuls
pop
shll
outsl
xchg
cwtl
mov
test
stos
pop
loop
lahf
mov
fsubs
inc
cli
inc
jle
mov
test
xchg
icebp
push
mov
in
nop
sahf
out
push
push
and
shrl
or
fucomi
mov
ss
jb
sti
xor
sub
inc
or
insb
and
mov
dec
call
test
mov
in
or
inc
jb
and
ret
xchg
pop
nop
jecxz
sub
cmp
ss
in
jmp
jl
loop
and
cld
mov
inc
mov
insl
lock
sbb
inc
scas
xor
dec
aas
sub
jns
push
popa
mov
xlat
add
lcall
sahf
popf
lods
pop
sbb
and
add
dec
push
enter
dec
aaa
popa
push
cld
outsb
stc
loope
cmpsb
mov
iret
jg
jp
xchg
call
push
mov
xchg
icebp
fidivrl
jl
out
sub
pusha
inc
outsl
cli
adc
dec
mov
je
add
fiaddl
dec
lods
divl
or
lret
test
pop
movsb
dec
push
das
xor
or
inc
cmpsb
insl
jmp
lahf
push
jb
ds
popl
ja
pop
lods
pop
jle
aad
loopne
cltd
or
cmc
jae
inc
mov
pusha
mov
cmpsl
sti
test
les
jle
xor
outsb
jnp
loopne
les
xchg
xchg
or
xchg
sbb
cmp
xchg
cltd
sbb
pusha
dec
lahf
bound
or
sbb
sbb
push
push
push
cli
jbe
ret
in
popa
cmp
adc
cmp
jle
shrb
jnp
bt
dec
scas
dec
jg
push
std
pop
scas
add
sbb
sahf
clc
jne
popf
mov
cmpsb
push
or
adc
push
inc
insb
pop
sub
std
lret
jb
fdiv
call
sbb
rcrl
outsl
tzcnt
movsl
hlt
jge
lock
mov
repz
cmp
loope
cmp
xchg
rorb
mov
imul
jl
cs
or
push
sub
pusha
pop
fcmovne
std
in
std
jle
mov
mov
push
cmpsl
int
filds
mov
mov
inc
push
mov
mov
sarb
insl
fdivl
and
testb
or
not
std
leave
mov
fs
push
inc
outsb
push
push
call
repnz
push
insl
and
cmp
lret
inc
xchg
or
rorb
movsb
cltd
push
cmpl
fildl
add
cs
ret
js
dec
mov
repnz
notl
and
mov
or
sub
test
jle
push
or
xchg
jno
jne
out
nop
stc
sbb
mov
cltd
rcr
adc
pop
arpl
xchg
fists
mov
cmp
bswap
shll
mov
nop
pop
dec
sbbl
adc
cmc
je
sub
ljmp
xor
rcrb
scas
add
inc
sarb
test
mov
xor
pushf
imul
adc
sub
lcall
add
aas
xchg
add
pop
mov
jle
dec
jle
insl
into
and
in
push
push
push
ret
mov
scas
inc
outsb
mov
pop
mov
xor
dec
mov
xor
adc
lahf
adc
mov
dec
lods
out
add
je
xchg
inc
push
push
sub
aad
cmc
fdivp
mov
jge
enter
jne
dec
mov
lret
negl
aam
and
hlt
mov
test
or
pop
test
cmpsb
ror
in
push
mov
push
cmp
in
jnp
insb
je
cmp
jg
sar
sbb
jmp
mov
xor
inc
sbb
cltd
jl
enter
stos
sti
push
or
dec
repnz
adc
inc
pop
sub
shll
jl
xchg
pop
mov
mov
stc
lea
mov
stos
subb
stc
jo
pop
lods
notb
pop
add
xor
cmp
aas
dec
push
adc
int
clc
adc
lds
adc
cmp
neg
pop
nop
clc
sbb
cmp
mov
inc
roll
loope
mov
adc
mov
jmp
sbb
ja
push
mov
test
inc
mov
fistpl
jle
ja
fwait
out
pop
stos
jl
jle
in
fcomip
cs
mov
mov
hlt
loope
push
sub
jg
fcomps
aad
jle
jns
mov
push
pop
xlat
add
xchg
gs
adc
fsubr
mov
imull
out
xor
lea
sub
add
negb
leave
push
jle
push
push
icebp
mov
adc
mov
pop
dec
sahf
xchg
jl
xchg
mov
mov
push
xor
cmp
mov
ljmp
andb
sbb
and
or
sbb
inc
lcall
sub
jnp
push
cmp
sub
fdivp
jnp
jns
cmp
push
mov
pop
divl
insl
scas
shrb
sub
fmulp
mov
popa
fdivrl
inc
in
mov
xchg
mov
outsl
cltd
test
and
js
out
cwtl
nop
sbb
cmpl
insb
and
mov
mov
mov
dec
lock
pop
push
xchg
mov
and
jmp
inc
das
jge
lds
lds
fisttps
pop
adc
push
outsb
mov
sub
into
pop
dec
les
rclb
mov
sbb
sbb
scas
in
fwait
mov
fcompl
cmp
add
inc
sub
les
inc
arpl
xor
jp
test
rclb
arpl
sub
xchg
push
xchg
cmp
sub
sbb
and
or
cwtl
mov
jp
mov
pop
xchg
ds
pushl
fistl
ror
subl
ror
add
lods
xchg
mov
push
test
and
jle
into
push
fs
fmuls
repnz
cmpsb
mov
aam
push
mov
sbb
inc
sub
mov
lea
ja
je
push
fldcw
in
and
rcl
int
xchg
loopne
into
aaa
imul
xor
int
ljmp
repz
repz
xor
dec
add
push
mov
or
xor
sub
dec
fsubp
ds
mov
dec
lahf
fs
iret
add
ljmp
add
fisubrl
repz
lods
jl
xor
xlat
and
pop
mov
lret
mov
jge
repnz
call
cld
xlat
mov
mov
inc
mov
aam
sbb
mov
mov
cld
divl
push
add
fsub
into
sbb
lea
inc
xchg
ds
jae,pt
repnz
and
es
pop
jbe
mov
adc
and
xor
jnp
aam
test
bound
push
sub
or
fmull
cmpl
data16
out
push
in
inc
jp
ss
inc
mov
loop
xchg
or
push
or
lahf
and
loopne
jb
and
dec
mov
xchg
inc
sbb
inc
pop
imul
out
push
jp
ficompl
adc
jle
sub
stc
and
daa
aaa
icebp
lret
xorb
in
mov
adc
xor
mov
sbb
mov
into
push
repnz
push
xchg
cld
js
popa
mov
pop
popa
ss
sub
stos
movb
insb
mov
inc
hlt
pop
stos
adc
inc
jge
stos
mov
jno
sub
std
pusha
xchg
es
sub
lret
adcl
dec
push
es
mov
add
knotb
or
adc
mov
call
ret
xlat
out
outsl
clc
push
add
pop
stos
cmp
adc
aam
movsl
xor
test
mov
fists
cmp
addl
rcrb
sub
mov
mov
je
mov
jge
jg
test
sub
lock
push
add
adc
and
stos
sub
or
or
fs
aaa
iret
out
mov
fisubl
push
sbb
movsl
pop
cmc
mov
fwait
iret
inc
xorb
and
dec
leave
xor
fsubrs
add
xor
insl
dec
adc
loopne
xor
data16
sbb
stc
in
mov
cmp
mov
fnstcw
je
and
jo
icebp
movsl
dec
pop
in
jge
pop
pop
push
adc
lods
jne
push
jbe
insb
add
rcll
push
mov
les
adc
mov
stos
fstpt
aaa
jno
stc
lahf
inc
mov
and
test
ja
mov
sbb
aaa
jge
sti
pop
out
mov
lds
dec
negb
fstl
clc
cltd
inc
mov
test
fisttpl
mov
rorl
xor
pop
dec
cmp
cmp
aaa
jo
es
jne
clc
xchg
aam
or
or
fnstenv
cwtl
in
rorb
jecxz
pop
mov
nop
test
pop
pop
xchg
inc
addr16
vmovupd
sbb
pop
aaa
cmp
out
lret
dec
fcoms
jno
addr16
xlat
jge
rcll
inc
mov
adc
roll
or
push
test
ds
cmpsl
sti
xor
or
xor
cmpsb
mov
fstp
lret
into
in
je
add
mov
inc
pop
mov
add
cltd
pop
push
xor
cmp
xchg
movsb
sti
sbb
inc
in
fstps
stc
mov
lods
and
and
cmp
jne
or
enter
fildll
out
rol
fdivrs
fimull
adcl
cli
rep
or
push
fwait
push
cmp
mov
push
sahf
mov
test
mov
sub
mov
add
mov
std
jnp
cmp
mov
sbb
into
adc
fildll
sbb
pop
stos
arpl
or
or
mov
adc
fs
and
cmpsl
sub
pop
ficompl
jmp
or
fisttpl
fwait
or
insb
repz
mov
das
cmp
sub
lahf
jg
push
jecxz
movsb
or
loopne
outsb
sub
inc
imul
gs
push
pop
xchg
pusha
push
mov
sub
test
lds
sub
sbb
xchg
sub
jp
loopne
std
mov
repnz
xor
in
jo
xlat
rolb
fcom
inc
jmp
mov
xor
xchg
xchg
mov
cwtl
add
mov
pushf
adc
repz
leave
hlt
sbb
test
adc
add
popf
imul
adc
insb
ss
sbb
lret
xchg
sti
cmp
mov
xor
cmp
sbb
popf
fistpll
jbe
rcll
dec
or
add
roll
or
enter
es
sbb
sarb
ret
fisttps
stc
andl
mov
cmpsb
cmpl
inc
popa
outsb
cmpsb
push
and
push
out
dec
jge
icebp
cmpsb
cmpsl
dec
fwait
mov
aad
pushf
and
test
cmpsb
add
pop
sub
sub
lods
xor
jno
int3
xor
bound
dec
hlt
inc
incl
pushf
and
xor
or
call
inc
pop
adc
pop
fxch
add
xor
lds
loope
cmpsb
dec
sub
pop
add
sub
push
pop
je
fimuls
loopne
sub
dec
xor
mov
add
mov
pop
sub
cli
mov
add
dec
and
shl
jno
popa
pushf
cmc
xor
xchg
fstpt
mov
test
test
ret
mov
pop
lea
cmp
addr16
int3
add
in
sbb
and
mov
cli
out
pop
je
xor
jo
je
or
cmp
xchg
mov
pop
sub
scas
or
pop
jbe
fisttpl
ret
cmpsl
je
or
cmpsl
cld
mov
adc
xor
ljmp
repnz
push
xor
xchg
add
leave
test
mov
out
gs
adc
xlat
bound
popa
movsb
mov
xor
jl
mulb
or
mov
push
sbb
ja
lret
add
into
andb
andb
icebp
fwait
shll
dec
adc
loope
aam
xchg
mov
or
int3
or
jb
inc
lcall
dec
jns
lret
clc
lea
xchg
adc
stc
movsb
and
adc
adc
jl
imul
cmpsb
cld
rorb
and
lea
addr16
cs
movsl
in
pushf
es
or
in
jle
lret
and
rcr
push
jecxz
rcrl
pushf
lcall
lds
dec
dec
std
cmp
pop
ss
std
repz
or
addb
lret
sub
adc
enter
pop
lahf
aaa
jg
add
push
aaa
sub
xchg
shrl
iret
in
std
imul
mov
dec
xor
mov
cmp
mov
out
pop
cmovge
xchg
jno
cmp
pop
jns
popa
sahf
call
or
dec
sbb
das
push
in
pusha
ss
iret
push
push
cmp
popa
call
test
mov
mov
push
fdivr
subps
pop
push
addr16
inc
pop
pshufw
dec
push
xchg
mov
lods
mov
fimull
fidivs
and
sub
sbb
sbb
or
mov
mov
xchg
add
rolb
and
adcb
hlt
loopne
hlt
call
cmp
out
leave
mov
pop
and
dec
stos
xlat
pop
xor
scas
inc
dec
sti
iret
out
mov
sbb
out
jnp
sar
mov
xor
pop
insb
mov
xchg
pop
imul
jnp
mov
pop
ds
in
mov
dec
in
inc
scas
mov
adc
fistl
fwait
sub
sub
mov
pushfw
cmp
cmp
or
push
xor
loop
inc
pop
incb
stos
sub
fstl
cmp
nop
cmpsb
mov
hlt
roll
fsubl
sti
shlb
and
les
cmpb
xor
push
and
imul
cwtl
shl
cmp
sub
popa
xchg
pushf
and
jle
jno
xchg
ja
and
push
push
pop
fcmovne
cmp
pushf
push
add
dec
mov
cmp
mov
pop
cli
in
ja
jno
andl
sub
int3
add
jg
mov
rcll
lock
dec
sarl
xor
mov
sahf
cmp
test
test
clc
jae
inc
jp
dec
dec
sbb
jo
repz
fbld
scas
test
sub
and
xor
xor
fdivl
fiaddl
dec
fsubp
mov
pop
pop
cmpsb
and
sub
inc
fnsave
lods
cmp
push
inc
and
xchg
mov
cli
push
cs
jmp
sarl
repnz
jbe
notb
xor
lds
movb
jnp
imul
cwtl
sbb
loope
filds
pop
fwait
add
sub
sbb
and
pop
jecxz
rcll
xor
into
dec
outsb
xor
iret
lcall
lcall
rcll
inc
cmp
incb
mov
jmp
mov
outsb
push
ja
imul
lret
jmp
arpl
xor
pusha
adc
cmp
push
mov
out
ret
test
fs
mov
xchg
ret
sub
or
mov
mov
mov
adcb
fistps
dec
cmp
inc
sub
ret
xchg
push
xor
xchg
push
dec
cmp
mov
loope
xchg
stos
add
ret
mov
popf
adc
int3
pusha
sub
pop
mov
lcall
inc
xor
rorl
imul
repz
add
testl
and
mov
dec
filds
or
xchg
in
jo
push
out
cli
add
mov
push
push
and
and
pop
cmp
xchg
cwtl
add
sbb
xorl
dec
pusha
and
mov
sbb
in
mov
push
movsb
ret
adc
int
je
test
lahf
or
push
push
stos
hlt
or
lret
mov
fimull
loope
xchg
cli
ret
repz
mulb
in
jecxz
dec
sbbl
mov
and
mov
aad
addr16
out
cmpsl
sub
mov
loope
and
jmp
cli
dec
cmpsb
push
fisubl
stos
xor
loope
icebp
jp
dec
rcrl
sub
sbb
jno
inc
lret
and
adc
rorl
mov
or
mov
mov
fisubl
stos
xor
add
icebp
jp
dec
rcrl
sub
sbb
jae
inc
lret
and
xchg
lcall
shrl
jle
outsb
in
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
adc
add
xor
and
push
ss
add
xchg
aad
out
push
adc
add
xor
and
push
inc
inc
jbe
add
mov
movsb
mov
div
out
push
adc
add
xor
and
push
inc
inc
jbe
fs
xchg
xchg
mov
xchg
mov
inc
addr16
inc
push
out
inc
stos
std
ja
popa
push
pop
pop
js
out
cmc
out
pop
pop
mov
or
adc
pop
stos
test
jge
nop
out
pusha
test
mov
rcrl
out
add
out
jecxz
sbb
or
in
test
int3
pop
jbe
dec
clc
xchg
jns
sub
pop
adc
cmpsl
jb
push
push
inc
mov
xchg
push
andb
les
in
aam
sti
pop
lret
push
sub
fisttps
ja
xchg
xchg
cmpsb
dec
das
movsb
pop
xchg
aam
pushf
repz
dec
adc
sub
sbb
in
xchg
in
orb
pop
ljmp
sbb
push
add
xor
and
push
inc
inc
jbe
fs
xchg
xchg
aam
div
out
push
adc
jge
jne
cmp
wrmsr
adc
daa
adc
in
popf
aad
lret
mov
mov
adc
jl
inc
adc
sub
jbe
dec
repz
test
not
jecxz
mov
xchg
push
test
bound
push
daa
pop
push
inc
inc
jbe
fs
xchg
xchg
aam
div
out
push
adc
add
xor
and
push
inc
inc
jbe
fs
xchg
xchg
aam
div
out
push
adc
sub
pop
add
mov
jb
jo
sbb
and
idivl
sti
mov
popa
mov
test
cwtl
mov
jns
roll
inc
sbb
sahf
outsl
insl
xor
cmp
cmp
sub
mov
dec
pop
and
shlb
jns
mov
pop
popa
mov
dec
fcoms
push
dec
daa
test
repnz
addr16
mov
call
jns
mov
add
push
aas
jmp
jne
xor
mov
ljmp
sub
scas
adc
push
jecxz,pt
push
inc
mov
iret
jmp
jle
push
xchg
cwtl
cmp
sbb
xor
mov
pop
sbb
fldcw
push
xor
out
xor
xchg
loopne
cmpsb
fdivr
es
jl
cmpsl
inc
and
sbb
scas
mov
movsb
aaa
cltd
xchg
inc
sbb
dec
and
inc
rorb
jbe
add
cmp
sbb
add
pop
push
popf
popa
dec
inc
push
push
push
lret
xchg
std
aas
fs
push
outsl
fmull
adcl
mov
pop
testl
cmp
or
push
sbb
sub
scas
jb
repnz
mov
or
cmc
adc
mov
xor
adc
and
popw
xchg
out
lret
decl
and
fs
stos
leave
add
jne
inc
add
and
ss
mov
cld
js
loopne
or
mov
cli
mov
inc
add
out
icebp
mov
mov
ss
je,pt
xor
jle
and
adc
mov
adc
mov
test
rcrb
pop
lods
outsb
and
dec
lret
push
add
xor
gs
imulb
inc
or
lahf
jmp
adc
mov
lods
inc
cmc
clc
mov
insb
push
adc
pop
int3
dec
pop
xor
sbb
jnp
test
lds
sub
int
call
js
jae
out
test
ret
xchg
push
stc
xchg
or
stc
into
dec
aad
adc
cmp
add
jmp
inc
outsb
ret
push
push
test
push
aas
std
cmpsl
xchg
movsl
rorl
xchg
jecxz
add
xor
mov
or
pushf
xchg
add
in
pop
icebp
push
notb
mov
cmp
sar
jecxz
ja
push
xchg
pusha
int
adc
icebp
pop
imul
sub
inc
scas
add
add
pop
mov
push
rorl
test
push
cmpsl
mov
sbb
dec
adc
rclb
jle
sbb
jle
push
mov
fdivr
negb
mov
add
mov
add
fs
mov
loopne
pop
outsl
andl
pusha
movsl
icebp
out
cwtl
shrb
add
loop
mov
xor
or
dec
mov
lret
out
jnp
cmp
dec
dec
subb
aaa
call
pop
roll
or
pop
andl
pop
cmpsl
push
sbb
xchg
xor
das
sarl
jb
repnz
sti
enter
cmp
xor
pop
mov
adc
or
loopne
cmp
push
pop
pop
mov
sbb
clc
cmc
testl
mov
pusha
jae
frstor
or
push
shlb
dec
pushfw
dec
subl
sbb
pop
push
in
popf
ljmp
leave
dec
lret
data16
cmp
sub
je
cmpsl
leave
sbb
xchg
shlb
lahf
cmp
ret
mov
or
sub
xchg
mov
fdivrl
ljmp
push
cld
testl
xchg
sbb
xchg
mov
lahf
sub
lds
stos
rol
and
mov
sar
fcompl
repnz
enter
pushf
mov
xchg
ds
ror
xchg
xchg
sti
lret
pop
imul
xchg
xchg
mov
sbb
frndint
xchg
stos
in
sub
mov
lods
std
xor
enter
lea
imul
dec
mov
jmp
rorb
scas
mov
lds
int
lahf
jp
scas
arpl
test
push
cwtl
sarb
dec
push
xchg
das
test
adc
es
xor
mov
imul
loop
jge
in
xchg
ret
vmread
inc
outsl
js
or
jecxz
insb
sti
push
repnz
push
imul
xchg
bound
xor
mov
fstenv
mov
sub
lcall
xlat
in
ret
stos
fadd
pop
mov
out
mov
scas
mov
imul
out
adc
movb
xor
mov
mov
cmp
mov
jl
inc
jle
les
test
pop
push
stos
mov
lock
push
jne
inc
dec
xchg
fnstenv
jl
fsts
repnz
rdmsr
dec
rcll
bound
ror
and
daa
enter
mov
lret
xchg
xchg
push
cmp
fcoms
fs
or
or
mov
adc
ret
push
nop
xor
and
cmpsb
jg
push
cli
ss
dec
push
mov
iret
dec
sbb
inc
and
movsl
icebp
call
pop
push
cmp
xchg
fidivs
repz
int3
mov
loopne
push
sti
push
mov
and
mov
pop
stos
pop
lea
jmp
lret
lock
ljmp
mov
jne
sarl
testl
xchg
shlb
xchg
lea
mov
add
cli
scas
cmp
push
adc
push
rcrl
dec
push
sub
sbb
xor
push
pop
cltd
test
and
jmp
adc
sbb
push
sbbl
rcrl
aaa
xor
inc
imul
mov
out
add
jmp
and
in
inc
dec
lods
sbb
nop
pop
movsb
shlb
popa
stos
mov
cs
scas
nop
sbb
mov
aad
or
hlt
xor
sub
pop
push
movsb
sbb
jle
sbb
pop
mov
or
sub
cmp
push
stos
dec
nop
inc
or
outsl
mov
ja
xchg
xor
sbb
cwtl
imul
cmpl
movsb
jnp
xor
pop
xchg
add
push
loop
dec
stos
scas
xor
mov
test
cmp
clc
sbb
or
stos
or
jmp
frstor
sti
mov
xor
dec
pop
out
mov
jge
mov
add
sub
or
out
jge
pop
xchg
imul
push
jl
mov
mov
dec
dec
mov
xlat
call
mov
jecxz
sahf
jge
add
out
loopne
adc
push
stos
jo
push
xchg
scas
aam
ds
add
adc
mov
ret
jmp
push
dec
adc
and
das
fadds
inc
sbbb
mov
pop
decl
dec
scas
inc
sbb
push
and
cwtl
cmpsl
test
sub
add
cmp
push
sbb
push
shr
xor
push
int
mov
jnp
sbb
sub
adc
xchg
xor
xchg
fcmovnb
push
loopne
ljmp
rorb
sub
mov
cmc
pop
je
in
mov
adc
sbb
pop
push
int3
in
sbb
xor
xor
sub
fistl
mulb
push
xor
cmp
jge
xorb
ret
cmp
adc
aas
lcall
push
sbb
mov
sub
mov
out
aas
mov
shrl
fcomp
or
mov
sub
andl
inc
test
cs
mov
jge
stos
insl
inc
sbb
fcompl
fisubrl
popf
xchg
push
out
lahf
sub
leave
test
shlb
leave
scas
inc
dec
jnp
jmp
xchg
rcrl
sbb
xchg
repz
pushf
mov
push
dec
inc
xor
xchg
js
orl
ss
lret
jo
cmp
sbb
cmp
adc
lock
in
fildll
subb
and
pushf
xchg
xor
fistpll
sub
pop
xlat
jle
icebp
popf
mov
add
fs
mov
sti
out
and
aas
pushf
adc
pusha
fisttpl
fimull
cmp
test
lds
aad
sub
aaa
arpl
sbb
int
push
inc
loopne
sbb
push
imul
insl
nop
inc
mov
jnp
pop
ret
arpl
dec
push
daa
lahf
orb
in
lods
imul
les
clc
adc
xlat
imul
mov
aam
adc
pushf
call
popf
cmp
out
mov
and
xchg
xchg
testl
mov
in
imul
mov
outsb
mov
ror
mov
dec
cmp
rclb
les
in
xchg
dec
imul
sbb
pusha
pop
xchg
subb
jg
pusha
ss
push
lock
mov
lcall
jbe
push
dec
dec
loope
ja
aaa
pop
bswap
push
mov
push
lock
push
in
sbb
push
xor
lret
mov
inc
lret
testl
cmp
lods
jnp
mov
cli
jp
cmp
test
xchg
adc
out
or
ret
in
mov
adc
pop
pop
pop
repz
je
call
les
lret
pop
movsb
in
mov
jnp
mov
inc
dec
add
jmp
fmuls
inc
xchg
adc
mov
lret
repz
js
sbb
leave
mov
stos
dec
dec
lock
cltd
lcall
aam
or
and
xor
scas
sbb
addb
mov
sbb
jge
xchg
dec
or
cmp
rcl
push
jmp
cmc
pushf
push
fsubrs
cmpsb
mov
dec
adc
mov
mov
movb
push
push
dec
sub
jae
aad
xchg
aas
xchg
jp
loope
test
gs
mov
push
inc
jns
jne
xchg
push
mov
aad
ret
push
ret
std
roll
and
jbe
add
or
or
out
mov
ja
in
into
test
cmp
inc
xor
aad
and
jl
dec
das
mov
add
push
negb
dec
xor
dec
sti
in
xchg
push
mov
fdivp
pop
xchg
leave
xor
jge
and
ljmp
idivb
clc
add
scas
sbb
imul
sbb
mov
push
lret
sarl
pop
xorb
push
testb
jmp
lock
jp
call
out
mov
fs
or
fbld
sub
xchg
out
in
inc
lahf
mov
int3
aam
and
jae
dec
repnz
test
gs
sub
lahf
mov
mov
mov
mov
je
pusha
sbb
inc
adc
gs
adc
inc
pusha
fs
and
int
cmpsl
pop
pop
aas
cmp
xchg
ja
cmc
nop
clc
or
insl
jnp
divb
out
les
into
sbb
fwait
bound
std
repnz
sub
jbe
daa
and
aam
mov
lret
mov
push
sbb
and
push
aam
lods
lods
jns
sub
push
inc
push
loopne
jp
adc
pushf
test
sbb
ss
dec
cs
insl
ds
out
and
movsl
sti
ficoms
pop
sub
inc
rorl
xorb
sub
cmpsl
mov
aas
xor
adc
dec
ficomps
xchg
jge
ljmp
and
sysexit
ret
adc
js
cmp
cmp
roll
dec
mov
or
xchg
fucomp
pop
mul
mov
mov
mov
and
sbb
pop
repnz
popa
repnz
adc
jo
fwait
std
jo
mov
pop
sarl
pop
push
int3
mov
push
mov
xchg
mov
dec
clc
mov
sub
sbb
cmpsl
insb
mov
fmulp
xor
in
loopne
jle
aam
inc
in
repz
fadds
mov
mov
sub
dec
ret
push
and
arpl
sbb
nop
and
pop
push
daa
lds
adc
cltd
sarb
mov
jnp
pop
pushf
cmp
xchg
jne
inc
in
xchg
or
inc
or
in
pop
jmp
stos
popl
adc
mov
insb
subl
jg
clc
mov
and
inc
mov
hlt
xchg
or
lods
je
pop
mov
clc
mov
pop
fsubs
loope
movsl
imul
jmp
loop
stc
out
ljmp
stos
or
in
notl
fsubs
iret
pop
fdivs
dec
xor
cmp
ss
ret
dec
pop
dec
xor
adcl
dec
pop
lahf
xor
mov
mov
int3
out
jg
jae
sbb
jmp
xchg
nop
cmp
push
and
jecxz
adc
jne
and
adc
inc
fcoml
cmpsb
xor
xlat
push
pop
out
xchg
add
ja
push
adc
int
ret
imul
dec
cmc
mov
insl
out
gs
int
repnz
jnp
shlb
mov
mov
ja
xchg
sub
into
in
push
mov
jae
cmp
cvtps2pi
pop
es
out
ja
pop
xchg
es
hlt
push
ja
and
pop
add
xchg
cmp
xchg
je
pop
mov
cltd
hlt
ds
cltd
in
mov
cmc
inc
add
data16
and
negb
loope
push
inc
clc
cld
push
out
lds
sbbb
dec
icebp
decb
shlb
sub
mov
cmpl
je
icebp
jae
xorb
mov
adc
nopl
test
gs
popa
aas
ja
pusha
sub
add
jmp
adcl
flds
mov
cli
xor
jae
cs
dec
clc
xchg
fwait
mov
in
enter
fcomps
pop
xchg
aad
es
sub
mov
push
fistpll
push
sti
fnsave
jbe
lret
cmp
idiv
adc
xchg
popa
xchg
test
or
or
arpl
xor
pop
sub
adc
incl
jg
mov
out
pop
dec
mull
mov
and
mov
inc
or
mov
enter
mov
flds
add
adc
aaa
jne
sbb
pusha
jecxz
mov
rclb
mov
or
mov
pop
shrb
fwait
dec
cld
dec
dec
aam
cmc
addr16
cmp
mov
adc
add
icebp
fnstsw
test
test
pop
cs
lds
in
aaa
dec
js
das
incb
push
aaa
mov
mov
sub
sub
ja
les
sub
dec
popl
sbb
fsub
loope
add
sbb
sbb
xchg
inc
or
les
mov
and
mov
mov
xchg
inc
fdivl
mov
lret
fs
out
stc
rclb
lea
xchg
aam
mov
shll
in
mov
and
std
add
adc
pop
mov
sbb
sbb
outsl
in
sub
in
es
js
sub
cmp
test
mov
xchg
xor
sbb
mov
in
test
adcl
les
mov
xor
and
pop
fneni(8087
jmp
cltd
xchg
int3
pop
dec
dec
stos
ficoms
pop
jmp
movsb
push
ds
cli
xchg
stos
mov
in
ljmp
nop
movsb
insb
pop
lods
rorl
mov
xor
cmpsl
pop
inc
pop
cmp
call
arpl
mov
mov
shrl
lods
mov
lahf
mov
nop
push
hlt
adc
push
loopne
lret
stos
lret
enter
sbb
xchg
out
mov
or
imul
faddp
es
adc
and
and
daa
inc
sub
pop
xchg
mov
jne
pop
shrl
jg
adc
mov
mov
xor
xchg
mov
jbe
dec
jg
mov
dec
imul
fdivl
add
or
mov
jg
xor
rcr
int3
dec
mov
sahf
bound
jo
out
cmpb
pop
pop
pop
dec
inc
lcall
gs
mov
rcr
insl
inc
daa
pop
push
and
loop
cmp
movsl
movsl
lret
xchg
jae
ficoml
in
jecxz
subl
pushf
mov
push
mov
jno
adc
xor
ds
stos
mov
aaa
lret
sub
inc
sbb
addr16
test
pop
int3
pop
pop
dec
rclb
pop
es
mov
aad
inc
std
stc
xchg
adc
data16
push
xchg
scas
inc
add
cli
fwait
xor
inc
ret
jle
and
and
ret
jl
sbb
call
inc
dec
gs
test
lret
cmpsl
mov
or
mov
jmp
fistl
test
adc
dec
callw
xlat
sbb
out
sub
xor
push
jne
xchg
gs
repz
xchg
push
and
push
jecxz
fcoms
cwtl
imul
popf
test
outsb
cmc
addr16
xchg
xlat
mov
mov
fs
and
mov
mov
fsub
xor
mov
or
pop
mov
into
pop
ret
cmp
xor
call
sub
or
sub
xchg
in
insl
mov
jp
jle
lods
add
mov
in
pushf
icebp
test
in
scas
in
mov
into
inc
testl
popa
outsb
fcompl
xor
test
cld
pop
push
mov
pop
push
push
jne
in
dec
push
or
jmp
xchg
add
lret
pop
push
sub
jne
push
test
enter
sbb
fcmovb
je
xchg
stos
cld
mov
imul
sub
add
jno
mov
mov
imul
call
fildll
lods
loope
or
repz
sub
in
sbb
lcall
in
outsb
adc
xlat
dec
pop
aad
cmp
xor
mov
jge
jnp
inc
cmp
mov
push
and
pop
and
icebp
jmp
mov
xor
cs
jmp
jmp
adc
gs
mov
sbb
push
jnp
loope
test
jecxz
jae
sbb
mov
popf
roll
push
enter
jecxz
mov
lods
sub
and
cmp
lret
scas
icebp
ljmp
out
push
sub
fcmovnbe
into
loop
mov
xchg
add
push
test
adc
rorb
call
stos
cmp
stos
mov
sbb
shlb
fs
jb
pop
and
pop
cmc
fldl
popa
push
ret
in
mov
nop
mull
dec
pop
movsl
dec
scas
inc
out
sbb
push
sti
push
sbb
lahf
inc
jg
mov
stos
ret
sub
pop
pop
xor
and
in
andl
loope
push
icebp
mov
nop
sbb
jae
xor
jle
loop
outsl
aaa
cmp
jno
daa
cmp
inc
mov
sbb
mov
fildl
fstpl
inc
pushf
cmp
jecxz
test
movsb
push
pop
call
lods
mov
arpl
xchg
ret
push
cs
push
sbb
aam
jne
mov
lea
ret
push
sbb
jb
enter
cmp
lock
loop
and
add
mov
movsw
or
pop
lret
ret
dec
ss
sbb
lods
add
fwait
mov
mov
sub
dec
addr16
mov
ljmp
pop
stos
rcrb
sub
dec
push
jp
xlat
xchg
fidivs
xor
pop
push
mov
ja
jnp
or
cmp
and
mov
hlt
iret
push
dec
mov
fdecstp
imul
jne
jno
insb
popl
mov
jno
mov
subl
mov
orb
repz
dec
sub
nopl
sub
cmp
div
mov
push
mov
and
mov
lret
cmpsl
aaa
inc
sti
ficoms
jg
inc
jno
cmp
xor
pop
test
jne
xchg
sbb
cmovb
inc
jno
jae
sub
ret
std
test
insl
lock
push
int
fisttpll
jbe
idiv
cmc
and
jbe
sbbl
mov
scas
test
test
ror
or
dec
iret
fcompl
mov
xor
lret
lods
mov
daa
andb
fwait
daa
ja
inc
xchg
pop
add
jbe
cmp
subl
or
pop
hlt
aam
sbb
jae
fldenv
ja
pop
pop
idivl
add
mov
mov
mov
mov
pop
inc
ret
push
jp
lcall
cmp
mov
push
and
stc
dec
shll
pop
pop
orl
in
mov
mov
test
and
inc
into
push
adc
popa
cltd
cmp
adc
xchg
xor
mov
mov
fs
mov
xchg
sbb
mov
cmp
mov
aam
xchg
jbe
sbb
push
mov
mov
and
out
shrl
mov
jno
jno
sub
scas
pop
xor
mov
mov
add
xchg
adc
test
pop
rclb
cmp
rcrl
jo
arpl
xchg
or
call
in
xor
mov
xlat
js
in
stos
pusha
and
ret
sub
mov
fldt
xchg
mov
xchg
cmp
fwait
cmpsl
adc
pop
gs
sbb
xor
mov
lds
or
pop
push
lcall
and
iret
mov
fnstsw
popf
out
pushf
jne
leave
pusha
in
ficoml
cmpsl
roll
movsb
decb
mov
call
pusha
sub
roll
pop
mov
repnz
sub
push
push
fwait
sbb
push
ss
popa
push
fldcw
in
inc
loop
clc
inc
mov
push
aas
jl
in
and
mull
jbe
sarb
or
push
adcb
mov
push
ja
sahf
outsb
mov
mov
and
inc
inc
and
dec
ds
in
pop
sub
sbb
cli
cli
push
iret
out
push
shrl
and
les
add
cmp
mov
or
cld
fcmovnu
cld
cmpsb
pop
mov
mov
add
add
lock
shr
ficoml
sbb
push
dec
mov
pop
xor
rcl
cmp
or
fimull
sub
test
push
add
daa
cmpsl
jle
testb
loop
das
and
sub
mov
sbb
cld
xor
and
push
inc
inc
jbe
fs
xchg
xchg
aam
div
out
push
adc
add
xor
and
push
inc
inc
jbe
fs
xchg
xchg
aam
div
out
push
adc
add
xor
and
push
inc
inc
jbe
fs
xchg
xchg
aam
div
out
push
adc
add
xor
and
push
inc
inc
jbe
data16
xchg
xchg
xchg
sbb
cmpsb
shll
or
sbb
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
clc
push
js
dec
ja
addr16
scas
sbb
pop
jl
call
jecxz
imull
mov
cmpsl
push
ja
sub
cmp
or
sbb
test
in
test
dec
js
dec
outsl
pop
jg
push
cmp
or
sbb
test
fcom
repz
test
add
or
mov
aam
enter
mov
repz
movsb
outsl
sub
fisttps
fidivrs
jle
aaa
sub
hlt
or
fcomps
cmpsl
push
sbb
inc
flds
lret
jns
inc
inc
cmp
sub
mov
addl
sahf
popf
daa
sbb
xor
or
js
push
pop
adc
call
aaa
ds
or
push
stos
jmp
cwtl
dec
xchg
mov
rolb
adc
xlat
xor
aas
sbb
sub
pop
sti
xchg
rclb
nop
test
xor
fucomp
enter
lock
mov
push
sbb
mov
cltd
mov
dec
outsb
pop
sub
cmp
or
sbb
call
out
fdivr
test
mov
cmpsb
sbb
cmp
and
push
add
pop
dec
pop
jge
cmpb
sbb
hlt
test
fsubr
lret
aaa
cmp
cmp
adc
dec
pop
pop
dec
or
adc
mov
mov
xchg
rolb
inc
sub
js
imul
daa
call
neg
out
xchg
mov
cmpsl
push
ja
sub
cmp
or
sbb
call
neg
out
xchg
mov
cmpsl
push
lock
pushf
sbb
in
mov
loop
mov
fsubs
in
lods
cltd
sub
stc
mov
cmp
sbb
push
stos
pop
outsl
enter
mov
mov
out
mov
sbb
xchg
adc
and
idiv
pop
xor
sub
cli
out
cs
ret
pop
popa
icebp
jae
or
cmp
xchg
test
jbe
sub
inc
lods
cltd
xor
shr
xchg
mov
pop
std
push
cmp
add
fidivl
lods
adc
sub
or
fisubrs
ret
repz
sub
idivb
or
scas
sub
xchg
les
xor
pushf
movsl
jecxz
shl
pusha
adc
outsb
cs
adc
adc
mov
xchg
push
mov
cli
and
icebp
idivl
jmp
mov
addr16
cmp
push
inc
sub
pop
dec
jb
inc
cmp
and
xchg
int
mov
imul
pusha
shl
mov
and
pop
sub
int3
inc
js
and
test
loope
mov
lret
jmp
std
lock
mov
dec
cmc
lcall
xor
cli
sub
dec
jae
imul
push
pushf
nop
lds
icebp
insb
jne
stos
add
ja
lret
loop
pop
cmpsl
out
ljmp
mov
push
fs
and
jmp
mov
in
add
inc
imul
mov
pushf
mov
mov
sbb
enter
or
pop
xchg
pop
push
clc
popf
int3
add
mov
call
inc
jb
and
push
or
pop
into
jbe
lea
enter
adc
sub
sbb
mov
nop
out
inc
or
cs
add
add
xchg
inc
and
cwtl
cs
addr16
lret
sub
mov
mov
stos
lret
repz
aas
pop
rorb
icebp
mov
push
pushf
xchg
test
sahf
pushf
xor
xor
jecxz
jp
xlat
in
mov
push
adc
cld
and
sti
and
stos
std
lcall
mov
and
test
pop
cmp
xor
push
cli
mov
cs
out
sub
test
popa
push
stos
in
loopne
scas
sbb
lods
inc
rcrl
imul
fstps
adc
jmp
add
scas
xchg
fmul
ds
jbe
imul
jae
pop
test
fs
jae
sahf
shrl
imul
mov
cmp
inc
repnz
cld
mov
mov
std
mov
aad
je
cmc
jp
xor
jge
lret
cmpsb
subb
les
mov
das
adc
adc
cmp
bound
mov
jne
int3
scas
mov
cld
ds
decl
addl
inc
aam
or
inc
cmpb
pop
pop
es
xchg
shll
pusha
sarl
mov
push
lea
xchg
iret
mov
mov
sbb
repnz
psrad
inc
sbb
xor
rclb
hlt
pop
or
sbb
out
in
push
adc
xchg
mov
ds
xlat
xor
push
popl
sub
pop
sbb
or
arpl
insl
jmp
dec
fwait
cmp
xor
rcll
mov
xlat
pusha
in
movsb
mov
shl
xor
mov
test
sub
cmp
fidivrl
jl
icebp
jmp
pop
pop
cmp
scas
int
add
pop
dec
leave
les
cli
dec
lahf
pushf
jne
shrb
jmp
cmp
mov
outsb
fs
push
sub
sbb
dec
mov
dec
imul
and
cmpsl
sub
push
pop
cmp
xchg
loopne
pusha
cmp
ss
fbstp
push
lcall
iret
imul
stos
cltd
xchg
xor
mov
xchg
mov
xchg
or
push
mov
and
fimuls
xchg
subb
or
push
mov
push
or
aaa
sbb
cmp
icebp
xchg
scas
add
int
repz
insl
lods
or
dec
push
sub
dec
gs
cmc
sti
insl
popf
sbb
outsb
jge
inc
jge
sarb
xor
loope
aad
mov
aad
shrb
and
xchg
int3
xchg
sbb
sti
lret
repz
js
rol
fadds
out
outsb
movsl
cmp
sbb
xchg
mov
mov
jmp
loope
addr16
xor
mov
fprem1
pop
pop
cs
sbb
inc
sub
adcb
popa
pop
add
sub
xchg
in
sti
mov
mov
lret
iret
int
insl
cmpsl
in
add
push
in
add
test
xlat
add
lea
enter
mov
cmp
add
mov
js
push
sub
xor
jmp
dec
and
mov
shrb
les
mov
sbb
sti
aam
stos
ds
mov
jp
dec
lret
adc
or
cmovns
stos
int
inc
sbb
mov
jecxz
lret
in
popa
scas
inc
jbe
sbb
ds
int
aad
nop
subb
push
push
push
pop
jb
mov
mov
dec
outsb
xor
mov
jp
shlb
jp
divb
xor
pop
imul
sbb
jb
mov
push
int
aaa
add
adc
leave
push
jne
jo
or
xchg
test
inc
pop
inc
test
leave
mov
sub
lahf
jno
lock
xor
adc
icebp
lret
push
ds
sbb
loopne
or
lret
clc
stc
pop
loopne
push
push
xchg
fsubrs
mov
test
push
cmp
and
out
jle
lcall
idivl
xchg
aas
jo
stos
cmc
dec
and
xchg
call
or
test
int
add
sub
mov
lahf
jae
ja
mov
out
test
in
adc
jge
in
add
stos
jp
push
bound
aaa
mov
xchg
sahf
xchg
jnp
or
cmp
mov
lods
xchg
aad
out
in
inc
insl
scas
insl
ret
mov
mov
lods
mov
imul
add
shrl
mov
pusha
movsl
ret
icebp
fldcw
dec
orb
mov
lock
sbb
inc
pop
or
dec
cli
or
pusha
push
int
pop
aaa
fidivs
push
data16
movsb
das
or
cwtl
int
jp
cld
outsb
sub
mov
push
incl
add
lret
lods
and
mov
hlt
inc
les
mov
fwait
bound
idiv
rorl
sbb
lret
mov
arpl
adc
jmp
sub
xor
stos
lcall
cmp
std
mov
lcall
or
mov
add
push
out
rcrb
fldz
mov
push
cli
divb
mov
xlat
xorb
xor
fimull
sub
xchg
cmp
mov
mov
lret
popf
cld
pushf
mov
popf
add
test
sub
mov
idivl
test
shrb
hlt
pop
cmp
data16
pop
cli
cmpsl
pop
jno
imul
sahf
xor
xchg
xchg
movsl
mov
ret
jp
pop
daa
mov
cmpsl
mov
test
jno
jge
loopne
cmpsb
mov
sub
jecxz
jmp
mov
push
int3
negl
xchg
gs
mov
xchg
jns
xchg
dec
aad
call
pop
sub
stc
imul
aaa
aas
sub
add
jecxz
inc
shl
cmpsl
outsl
sbb
inc
psrlw
lret
in
rclb
fs
add
dec
das
rol
mov
mov
test
mov
add
popf
jg
clc
xchg
sbb
xchg
cmp
movsb
test
hlt
dec
xchg
cmp
stc
je
sbb
jl
scas
mov
inc
sub
stc
inc
into
mov
ljmp
dec
xor
mov
or
mov
jne
pop
mov
popf
movb
dec
icebp
stos
stos
push
div
cmp
cmpsl
cmc
sbb
ja
push
ss
repz
sub
add
bnd
adc
enter
push
cmpsl
add
in
fs
sub
nop
adc
cmp
fnstsw
inc
inc
ds
dec
jecxz
popf
mov
sbb
or
jo
push
fwait
mov
aaa
fcomps
in
dec
pop
lock
outsb
and
mov
popa
and
xchg
dec
ja
mov
jle
fdivrs
cmp
aas
jl
push
pop
and
arpl
pop
push
sbb
test
aas
in
mov
pop
fildll
inc
shrl
push
mov
mov
subl
and
push
push
mov
mov
xchg
push
call
fbld
xchg
sti
pop
arpl
xchg
inc
iret
fucom
sub
or
mov
test
pop
inc
jl
jmp
or
sub
das
rcr
adcl
das
pop
movsl
pop
pop
test
push
push
xchg
dec
sub
leave
ljmp
mov
sbb
xor
jne
xor
testl
xchg
inc
inc
stos
pop
nop
cmp
mov
clc
cmp
daa
jmp
shrl
mov
or
jbe
movsl
adcb
negb
popf
mov
xor
aas
sbb
movsb
and
cmpsb
into
xor
or
sbb
fistps
aas
in
notl
aas
push
lahf
lahf
pop
add
shll
lods
popf
ljmp
or
jb
movsl
jp
out
lods
dec
xor
cmc
in
jae
lds
mov
jg
inc
outsb
xchg
xchg
ja
insl
dec
int
pusha
jnp
mov
pop
subl
ja
mov
imul
pop
aad
sbb
and
push
aam
or
jo
call
mov
jae
add
jmp
xor
cs
or
inc
adc
dec
lea
xchg
sub
scas
pop
mov
push
xchg
fimull
cmp
test
loop
sar
call
mov
sahf
mov
xchg
sbb
sbb
or
je
sbb
test
stc
orps
xor
fistpll
shrl
fcos
ljmp
push
popf
pop
loope
push
in
pop
pushf
push
loopne
cmp
jbe
sti
test
inc
mov
ret
insl
lcall
sub
and
mov
lods
sbb
inc
add
into
dec
es
in
lahf
js
imull
jae
adc
into
addr16
negl
mov
cli
data16
xchg
mov
sbb
hlt
lea
mov
or
mov
xchg
dec
pop
mov
jb
jmp
aam
jno
loope
mov
jno
insb
sub
dec
pop
aas
mov
rorb
arpl
shll
insb
jmp
das
out
call
addl
jns
inc
sahf
xor
popa
add
in
mov
je
or
or
dec
or
ss
pop
addr16
mov
leave
iret
jg
popa
adc
dec
mov
outsb
pop
jns
dec
fwait
mov
mov
inc
push
pop
lahf
xor
outsb
enter
std
and
rorl
loope
ja
mov
out
or
push
or
push
and
mov
mov
mov
mov
xchg
mov
push
inc
lods
add
push
dec
sub
pop
add
int3
sti
adc
les
aam
and
pop
test
push
sbb
cmpsl
ss
js
test
dec
test
in
jae
lock
jae
cmp
insb
jle
daa
mov
int
call
hlt
lds
repz
mov
ficomps
jo
pop
xor
sahf
sub
gs
xchg
test
sub
cmc
mov
cmc
xchg
cmp
js
mov
rorb
or
gs
cli
imul
dec
std
push
fstps
pop
inc
ss
push
test
les
fnstsw
add
lock
or
and
js
std
sub
sahf
jb
xor
movsl
pop
ds
test
or
cli
xchg
rcrb
mov
ss
xchg
xchg
popa
or
imul
push
cmp
xor
sub
adc
sbb
fiaddl
inc
push
pop
ja
xor
sbb
inc
dec
das
call
add
mov
and
shrl
inc
jo
into
shll
adc
fcmove
scas
outsb
lret
xor
test
aaa
fcoml
ja
rolb
inc
xchg
call
popf
sbb
cmp
shl
sbb
push
repz
insb
aam
sbb
pop
pop
mov
mov
dec
adc
xor
dec
add
add
and
sahf
ds
gs
in
xchg
into
pop
insb
repz
dec
lods
out
sbb
imul
int
out
adc
xchg
pop
xchg
inc
test
jbe
xor
imull
ret
int3
in
adcb
ds
ret
loop
ret
add
pop
mov
shr
cmp
nop
and
nop
dec
jo
ja
loope
and
test
cmp
pusha
dec
ret
dec
push
stos
cmp
lea
xor
fnsave
mov
mov
xchg
divps
fwait
xchg
sbb
fwait
dec
cmpsb
jae
mov
inc
cmc
insl
decb
aas
scas
jle
sub
cltd
xor
loop
cmp
rcl
add
lcall
push
outsb
test
aad
stos
cmp
mov
stos
les
aaa
aaa
lods
in
xchg
add
cmp
adc
cmp
pushf
cld
stos
fnsave
pop
popa
pop
clc
insl
adc
mov
dec
jecxz
pop
decl
insl
inc
movsl
dec
pop
pushf
mov
mov
aam
nop
add
cs
adc
xlat
das
cmp
adc
inc
jnp
lods
icebp
sbb
pop
xor
pop
shrl
push
lahf
xchg
imulb
lret
mov
int3
fisubl
add
push
int
mov
pusha
push
inc
fnstenv
dec
adc
div
scas
cmpsb
mov
cmp
ljmp
sahf
scas
fwait
insb
sbb
sbbb
push
lock
dec
and
mov
lahf
lock
negl
clc
jb
sti
cmp
into
inc
and
clc
inc
iret
in
or
xchg
push
gs
sub
dec
rcr
int3
jg
sub
push
push
adc
add
mov
repz
out
xchg
hlt
add
push
out
imul
testb
mov
mov
cltd
mov
add
lds
or
add
clc
adc
popf
shll
sbb
dec
pusha
or
lret
outsb
jns
pop
out
pop
into
mov
xchg
pop
loope
sbb
jecxz
test
xchg
pop
push
add
inc
lods
lcall
stos
dec
test
dec
cmp
cmp
idivl
fsubl
inc
push
ja
pop
cmp
arpl
insb
into
jbe
lods
sub
ret
add
bound
cmp
leave
xchg
out
jg
sbb
cmpsb
lcall
cwtl
gs
repnz
addr16
push
jb
cwtl
cmp
mov
outsl
sbb
lods
inc
aad
mov
push
insb
movl
lock
cmp
and
test
std
and
push
into
push
pop
cmpsl
xchg
xor
lea
fwait
mov
shr
loop
sbb
xchg
xchg
dec
mov
xchg
pop
std
jno
fists
xor
push
mov
push
jbe
xor
dec
in
shrb
fcmovnb
push
or
add
test
add
pop
out
fsub
inc
cmp
cs
push
or
dec
shlb
loopne
leave
push
cmpsb
jg
popf
push
imul
and
sbb
jno
xchg
xor
push
push
aad
js
jmp
sub
stc
sti
leave
cwtl
sub
iret
add
sbb
aas
pop
cmp
fistl
mov
mov
lock
loop
mov
inc
test
adc
jns
fs
inc
xor
push
jne
mov
add
adc
je
cmp
orw
adc
xchg
or
loopne
in
addr16
mov
gs
adc
jecxz
lds
mov
push
jle
rorb
nop
aam
into
sbb
mov
icebp
push
fisubl
push
or
sub
mov
mov
jmp
inc
push
cmp
insb
add
shl
arpl
xor
adc
push
dec
mov
imul
push
movb
add
std
dec
add
outsl
jmp
pop
mov
outsb
mov
cld
xchg
test
sub
cwtl
and
dec
dec
mov
clc
repnz
cmp
jg
adc
or
cmc
loop
sti
xlat
pusha
cmp
pop
into
shlb
xor
insl
sbb
mov
sbb
xchg
jmp
push
push
ret
inc
jmp
sub
sahf
mov
inc
mov
mov
test
xor
std
repnz
sub
adc
addl
pop
mov
loope
jo
mov
test
jge
cmpb
aaa
push
insb
cmp
jecxz
push
push
pop
mov
and
push
fistps
or
lea
hlt
inc
xor
ret
xorl
push
lcall
dec
faddl
pop
aam
fcomps
fisubs
out
vmovlps
inc
adc
dec
xchg
das
mov
pop
adc
fnstsw
movb
stos
fcoms
and
push
fnstcw
mov
js
lock
mov
jg
mov
push
call
repnz
fcompl
or
xor
in
pushf
sbb
scas
std
cmp
or
add
nop
flds
insb
insl
xorb
inc
pop
mov
push
mov
sbb
jae
shlb
bswap
fwait
sbb
fldcw
mov
and
icebp
add
or
adc
pop
and
insb
adcl
bound
out
jg
test
mov
aas
mov
lret
add
movsb
aam
inc
test
out
push
rcrb
mov
jmp
adc
adc
mov
mov
mov
repnz
cltd
pop
inc
lds
cmpsl
aas
cmp
push
in
stos
push
inc
xchg
loop
mov
test
dec
push
arpl
in
push
xor
dec
ret
ljmp
mov
fwait
clc
push
addb
jmp
js
dec
adc
notl
ljmp
out
dec
adc
push
mov
dec
dec
jmp
dec
xchg
jns
add
leave
divb
scas
bound
fstl
rclb
dec
add
sbbb
sub
fistl
loopne
fisubrs
imul
adc
adc
clc
xchg
mov
dec
mov
addb
pshufw
push
push
test
pop
scas
sbb
sahf
jbe
adc
mov
xchg
adc
fwait
dec
mov
adc
dec
into
sbb
and
iret
mov
gs
jecxz
in
sbb
mov
scas
ret
es
enter
mov
xor
and
dec
cmp
xchg
int
iretw
xchg
ficompl
or
mov
xchg
movsb
call
cltd
xor
xchg
addb
dec
ja
dec
pop
jle
addr16
shlb
and
push
sbbb
mov
int
add
stc
cld
sub
cmp
pop
pop
inc
pushf
iret
or
sub
mov
hlt
adcb
scas
push
fmull
adcb
stos
add
out
sub
mov
or
cltd
lock
pusha
sub
fisttps
fnstcw
aam
pop
movsb
pushf
gs
lock
cmp
ficoml
jbe
lods
xchg
xchg
adc
loop
add
push
push
fwait
push
pushf
push
lods
in
xor
lock
testb
mov
push
jle
dec
jmp
aam
xchg
sub
movsb
outsl
mov
cmpsl
mov
les
test
int
push
and
pop
popa
popa
sub
mov
inc
icebp
fwait
test
lds
lret
mov
lahf
popa
lds
in
mov
cmpb
sub
xchg
test
rclb
mov
jnp
fdiv
inc
out
adc
inc
aas
mov
or
sar
decl
pop
enter
pop
cmpsb
lods
xor
sbb
adc
inc
lds
bound
sub
sbb
aad
test
pop
jno
in
fmuls
jge
sub
std
add
jge
nop
and
jmp
inc
pop
and
ret
lods
aaa
ja
sbb
int
rcll
mov
mov
leave
cli
jb
dec
pusha
push
cwtl
mov
and
inc
sub
ret
add
hlt
mov
sub
inc
stos
xchg
dec
jb
out
packssdw
push
xor
call
xchg
jg
or
sub
sarl
fdivrl
bound
pop
push
and
lahf
stos
inc
fiadds
in
arpl
loope
push
push
sbb
dec
hlt
pop
xlat
dec
pop
xchg
call
pop
mov
hlt
push
pop
lcall
mov
ds
pop
scas
rorl
mov
add
jns
adc
inc
dec
dec
and
mov
sbb
sbb
ficoml
test
shrl
lods
cmp
jns
pop
jp
push
movsl
mov
mov
and
push
movsb
shll
fnstsw
js
pop
push
cmp
das
inc
orb
xor
fistps
inc
mov
xor
inc
mov
pop
fs
lret
mov
mov
cmp
sub
popf
aaa
fisttps
movsl
xchg
mov
arpl
stos
addr16
adc
rorb
inc
fucomi
cld
ljmp
adc
inc
push
dec
mov
dec
inc
test
js
ja
cmp
loopne
and
fdivl
add
xor
fst
and
jae
mov
jle
out
cmc
xchg
jnp
insl
and
rcrb
mov
xchg
sti
nopl
aas
pop
sarl
jno
mov
jg
test
sub
mov
sbb
shr
mov
mov
fiaddl
mov
cmp
jle
or
sti
jb
dec
ret
add
jnp
push
fcomi
lds
data16
push
jne
lods
gs
enter
pop
dec
idivl
fcmovnb
daa
mov
or
loope
roll
repnz
xor
ljmp
fstpt
rcrb
movsl
in
xchg
orl
xor
pop
out
or
out
jno
movsb
loopne
cmp
mov
or
adc
push
data16
sarb
in
inc
inc
test
out
imul
xor
es
in
cwtl
xchg
cltd
pop
or
repnz
inc
ret
sub
cmp
or
sbb
call
neg
out
xchg
mov
cmpsl
push
ja
sub
cmp
or
sbb
call
neg
out
xchg
mov
cmpsl
push
ja
sub
cmp
or
sbb
call
neg
jecxz
xchg
mov
mov
dec
jae
sub
cmp
or
sbb
call
neg
nop
fistps
xor
ja
addr16
int3
int3
int3
int3
xchg
in
cmc
sti
xchg
icebp
loop
iret
xchg
or
jne
inc
imul
or
add
lret
cmc
sti
fwait
movsl
mov
or
jne
inc
imul
outsl
xor
add
dec
cmc
jge
sub
mov
test
pop
pop
daa
sub
ja
push
dec
pusha
pop
adc
mov
arpl
je
xchg
and
add
and
jle
sbb
xlat
in
pushf
mov
aam
sub
pop
je
nop
mov
popf
mov
test
push
sahf
in
mov
mov
sti
xor
adc
cli
ds
adcb
test
xchg
in
xchg
enter
sahf
sbb
rcrl
test
pusha
imul
gs
aam
pop
js
or
sub
movsl
or
jp
ret
fwait
and
je
mov
or
add
inc
pop
pusha
lret
or
push
outsb
jae
ds
push
adc
inc
imul
or
jle
cmp
sti
lds
mov
test
xchg
test
inc
jne
jnp
adc
push
test
addl
test
lret
or
sbb
sub
cmp
gs
dec
xchg
movsb
inc
mov
repnz
xlat
ljmp
push
adc
cmp
outsb
pop
dec
jo
jnp
mov
orl
test
jne
inc
imul
or
frstpm(287
lret
cmc
sti
fwait
movsl
mov
pop
gs
jne
inc
imul
or
frstpm(287
pavgb
mov
xlat
pusha
ljmp
mov
pop
cmp
push
repz
js
stc
sub
push
cmpsb
jge
scas
test
les
movsl
xchg
mov
fistl
js
xor
stc
adc
adc
insl
sub
inc
add
mov
cmp
roll
jae
sbb
pop
ret
shlb
pop
test
push
sub
jo
movsb
je
outsl
xor
mov
push
dec
jns
xchg
clc
xor
or
fnstenv
pop
out
and
sahf
mov
ret
xchg
sbb
movsl
sbb
fsubl
outsl
mov
fdivr
adc
cmc
mov
filds
cltd
jns
dec
dec
lcall
sti
cld
pop
add
mov
mov
mov
mov
bound
sub
dec
inc
sbb
dec
lods
loope
mov
popf
lods
int3
dec
jmp
pop
sub
sbb
push
push
push
into
pushf
push
fisubrl
jp
xlat
rcll
pop
push
sub
lea
or
std
push
mov
cmpl
cmp
push
and
int
mov
pop
aad
pop
andl
mov
stos
mov
stos
dec
test
bound
xor
inc
xchg
dec
mov
pop
push
pop
add
das
outsl
push
adc
mov
dec
stos
lcall
mov
mov
into
cmp
cli
jb
lretw
int3
imul
cmp
mov
mov
cmpsl
jbe
mov
movsb
sub
les
mov
jae
jp
and
dec
cmp
outsb
movsb
pop
mov
and
pop
xchg
aaa
add
and
adcb
cmp
in
ret
leave
xor
pop
xlat
mov
aad
rorb
xchg
or
ja
div
sbb
dec
lret
pusha
mulb
jb
dec
roll
sub
arpl
ret
pushf
test
adc
lcall
pop
jno
imul
adc
push
loopne
loopne
loope
cli
sub
rorl
fidivrs
inc
ffree
fadd
xchg
movsb
jae
int3
sbb
loop
jo
pop
mov
rorb
cmpsl
xor
jge
cmp
and
jae
add
mov
cmp
js
insl
xchg
xor
mov
sbb
popf
or
mov
add
out
fdivs
js
mov
sub
mov
sahf
int
xor
or
jle
into
movsl
rol
sub
ja
xor
xchg
jp
dec
shll
ror
test
xchg
xorb
inc
out
xchg
mov
push
xchg
add
pushf
shll
inc
push
pop
lret
mov
add
lret
xchg
xchg
xchg
lahf
nop
jmp
loop
arpl
pop
cwtl
jbe,pt
stos
jae
mov
mov
gs
and
outsl
pop
xchg
aad
lahf
lea
pop
out
fnstcw
repz
fnclex
push
push
orl
hlt
scas
les
jl
mov
stos
rol
sbb
mov
mov
test
xchg
inc
sahf
mov
dec
or
cmpsl
jp
xor
push
int
mov
adc
std
inc
scas
pop
cmpsb
ret
movsl
xchg
loop
mov
fbld
mov
gs
xchg
sbb
cs
or
lock
mov
out
sub
fcoms
cmp
data16
incb
loop
shll
jp
and
pop
bound
fiaddl
xchg
cmpsl
and
cmc
jnp
out
push
inc
ret
pop
fsubl
clc
xor
cmp
or
pusha
gs
mov
push
cmp
mov
and
sarl
and
sub
negb
push
push
inc
jns
mov
inc
jo
xor
int3
push
ss
inc
sbb
movsl
adc
dec
inc
adc
data16
sub
dec
dec
sti
pusha
stc
xchg
xchg
stos
sarb
in
mov
xchg
insl
xchg
or
xor
ret
mov
cmc
pop
rcr
push
mov
in
push
js
jmp
popl
mov
stos
repz
icebp
mov
jge
lock
xor
add
or
xchg
xor
movsl
lods
test
inc
and
dec
jo
xchg
int3
pop
loope
or
enter
rcll
push
inc
fcompl
jl
cli
ljmp
and
dec
testl
outsl
mov
addr16
cltd
and
stos
shll
cmp
mov
rcl
mov
inc
std
sub
loopne
pop
leave
popf
fistpll
aam
icebp
mov
mov
pop
jbe
dec
pusha
dec
dec
xchg
in
cmp
lea
repnz
jecxz
int
mov
and
in
out
test
hlt
or
push
mov
sbb
repnz
or
scas
cmp
js
iret
mov
jmp
inc
jnp
fchs
js
xorl
lock
int3
test
adc
icebp
test
flds
fstl
sbb
sbb
jp
ljmp
mov
lock
push
add
sbb
shll
xchg
cltd
mov
pop
add
sbb
loopne
lret
cmp
dec
movsb
lea
cs
fcomps
cmc
mov
mov
cli
mov
sub
mov
sbb
cmpsl
cmp
push
cwtl
call
and
mov
shrl
fsubl
jne
dec
jge
cmp
mov
mov
divb
rolb
int
mov
pop
inc
pusha
or
cmpsl
int
rorb
dec
addr16
fbld
mov
test
in
xchg
and
xor
out
mov
aas
and
fiadds
lods
fmull
lods
lea
xchg
lahf
jb
pop
inc
add
adc
add
sub
pop
rcl
lcall
mov
je
lea
rolb
pusha
push
inc
xchg
daa
pop
mov
mov
push
push
and
xor
mov
fcoms
adc
pop
jp
lret
push
mov
shrb
fdivr
mov
mov
test
or
dec
jmp
jb
fldenv
stos
insb
iret
test
dec
push
fcoms
aas
in
ja
mov
mov
mov
ljmp
fucomp
and
push
loop
mov
shrb
test
pop
mov
test
ret
or
aam
xchg
xor
xorl
mov
jecxz
fcmovb
arpl
lods
jp
sbb
xchg
hlt
test
ret
int3
dec
aaa
scas
in
adc
jnp
adc
mov
or
lret
mov
mov
mov
jecxz
xchg
jb
add
fmuls
dec
xorb
jne
clc
pop
cltd
adcl
ret
les
sbb
xchg
test
sub
push
and
xchg
sbbl
pop
out
sub
push
cmp
test
mov
pop
clc
into
xor
loope
xchg
sbb
inc
add
fadds
pop
or
mov
sub
mov
stos
xchg
or
inc
stos
push
rorb
ret
pop
rolb
mov
mov
shrb
pop
icebp
mov
dec
lcall
adc
out
vpsrld
movsl
push
daa
fdiv
mov
pop
push
jnp
sbb
push
out
ja
les
mov
xchg
incb
shrb
push
pusha
jnp
mov
cli
push
jl
flds
sti
adcb
movsb
call
add
xchg
push
adc
fists
or
inc
adc
lret
and
enter
stos
jecxz
push
rcll
pusha
inc
stos
addr16
test
jo
add
mov
jo
adc
out
cmp
and
xor
fucomip
mov
inc
pop
cmp
adc
pop
std
and
or
and
scas
rcll
in
push
shlb
inc
repz
inc
xor
cmpsl
cmp
orl
loope
and
testl
dec
rorb
fmuls
mov
je
adc
ret
hlt
cmp
cmc
std
scas
bound
adc
shrb
or
cmp
lahf
pusha
mov
aaa
out
adc
cmp
test
scas
ljmp
sbb
fisubl
in
sarl
shr
inc
pushf
cmpsb
inc
sub
xorl
lods
ficomps
je
xchg
adc
xchg
mov
subl
stos
imul
ss
out
ficoms
jge
ds
aas
lea
fistpll
rclb
rolb
jecxz
out
shll
hlt
adc
and
adc
dec
test
arpl
stos
add
insl
pop
sub
add
dec
ja
xchg
push
jae
imul
lea
outsb
repz
incb
int
mov
sub
jecxz
mov
inc
xor
clc
popa
dec
push
dec
jp
out
in
add
gs
out
popf
fwait
jno,pt
mov
aam
jg
inc
dec
sbb
mov
xor
lret
fimull
mov
dec
xor
mov
aas
sahf
in
inc
sbb
test
pop
xchg
test
int
ret
push
je
sahf
faddp
mov
test
pop
mov
mov
outsb
punpcklwd
adc
mov
aaa
sub
sub
out
xor
jbe
arpl
add
pop
sbb
test
pop
ss
lcall
inc
fs
xchg
adc
loope
jge
mov
mov
add
pop
iret
mov
in
aad
dec
mov
mov
shr
lods
inc
arpl
pop
and
push
push
or
mov
cmp
push
mov
insb
subb
or
mov
pop
cmpsb
stc
adc
bound
lods
dec
testl
adc
xchg
xlat
sbb
outsb
outsb
sbb
js
aad
lods
sbb
loopne
and
push
jnp
xchg
mov
fcom
inc
xchg
inc
inc
mov
cld
sbb
hlt
movsb
adc
jmp
mov
xchg
and
fwait
pop
inc
in
inc
int3
mov
jne
or
mov
cmc
push
inc
dec
dec
cmp
xchg
aam
mov
mov
aaa
lret
pop
mov
rol
lods
xor
rcrb
test
ja
dec
push
lea
jl
pop
fwait
js
clc
les
cmp
mov
mov
fucomip
or
sti
mov
push
icebp
movsb
test
pop
je
xchg
js
dec
out
mov
call
addr16
aam
adc
sbb
push
ss
in
lock
mull
jecxz
pop
xchg
xlat
fidivrs
jecxz
dec
inc
fsubrl
clc
cli
sub
xchg
aaa
sbb
cmc
sbb
adc
in
mov
adc
sub
cld
js
pop
cmpxchg
les
fucomi
in
xchg
pop
xor
aaa
inc
xchg
mov
sub
out
mov
lcallw
ss
add
pop
dec
mov
cmpsb
xor
inc
inc
add
dec
dec
icebp
adcb
sub
arpl
pop
and
incl
fistpll
push
int
jp
cli
aam
cmpps
jp
sub
lea
push
cmp
fisttps
cmpsb
test
jle
cmpsb
xor
add
lret
and
aaa
popa
xor
movsl
lea
mov
imul
outsb
fstpt
clc
test
sahf
daa
ds
jb
cwtl
fdivrp
jp
roll
mov
mov
sub
lea
test
loope
adc
push
dec
cs
fisubl
sub
push
ljmp
fcomps
sub
or
or
sbb
jl
mov
movsb
fsubrs
dec
mov
aas
add
inc
mov
push
cli
add
sbb
sbb
xor
in
pop
pop
lods
pop
sub
dec
xor
mov
cmp
mov
das
movsl
cmp
fisubl
popa
xchg
add
jg
jns
xor
fdivs
mov
xchg
dec
loop
lcall
in
mov
fisubs
push
lahf
cmc
idivl
adc
mov
loope
out
mov
add
adc
jbe
push
ret
xchg
lea
filds
and
mov
mov
jno
jo
insb
out
subl
iret
cwtl
loope
dec
stos
in
sbb
or
ja
loop
adc
adc
xor
loop
ds
push
push
in
jbe
sub
idiv
jnp
lock
out
mov
enter
jnp
aaa
pop
dec
dec
sub
pop
roll
sbb
fwait
push
scas
popa
mov
leave
arpl
sbbl
fsts
sar
and
mov
sbb
jmp
jl
pop
cmp
clc
push
faddl
psubusw
mov
inc
fldcw
lds
in
in
shrl
sbb
out
fwait
adc
dec
movsb
pop
and
cmp
sub
mov
lods
inc
movsb
stos
sti
jecxz
inc
mov
and
pop
mov
pop
push
mov
and
outsb
mov
add
fisubs
mov
int3
pushf
mov
jne
mov
xchg
add
mov
pop
sub
add
and
das
mov
mov
xchg
pop
outsl
push
or
aam
fcomps
jbe
cmp
mov
xor
loop
fisubrs
shlb
sti
xor
sti
lahf
mov
gs
push
sub
pop
stc
sbbb
cli
push
jmp
rol
adc
faddl
hlt
jnp
frstor
cmp
addl
sub
sub
in
lea
inc
dec
roll
dec
mov
xor
mov
sahf
fsubr
sub
ja
push
pop
jnp
es
adc
insb
cwtl
jne
incl
mov
jle
mov
mov
xor
mov
mov
push
xchg
sbb
push
push
mov
mov
push
push
fildl
popf
movsb
pop
jmp
push
aas
sbb
jnp
mov
out
inc
arpl
ss
std
and
aam
push
stc
push
pop
leave
insl
push
dec
ficomps
add
pop
mov
popf
dec
add
cwtl
pop
cmp
jns
adc
mov
xchg
div
pop
int3
dec
hlt
push
mov
aam
in
nop
faddp
mov
mov
adc
push
in
dec
sub
inc
clc
test
mov
ret
fdivrs
jo
xchg
imul
lcall
adc
mov
lahf
out
add
rclb
dec
pop
sbb
xor
popa
fdivl
sbb
jle
sti
or
pop
stos
jo
dec
push
sbb
jno
cld
mov
adc
and
mov
sub
repz
mov
xor
mov
dec
lods
push
je
jns
inc
movsl
adc
cmpsl
stos
int3
arpl
push
test
jnp
sub
mov
cmpsb
sub
ja
bound
dec
sbb
enter
and
mov
out
stc
lahf
sbb
dec
popf
or
and
xor
loopne
pop
xchg
sub
jo
mov
in
sbb
sub
cltd
nop
enter
sub
in
fildll
push
rcrl
cwtl
hlt
cltd
sub
repnz
stos
scas
mov
lds
add
shlb
sarl
adc
add
les
jae
jne
push
pop
mov
mov
aam
mov
pop
cmc
adc
add
loope
mov
pop
pop
fsubl
shl
mov
xchg
sbb
cmp
adc
pop
sbb
pusha
push
xchg
loopne
mov
xchg
insb
and
sarb
inc
int
shrl
inc
xor
sbb
mov
bound
dec
test
sbb
pop
mov
loopne
and
mov
push
test
sub
pop
adc
je
xchg
push
pop
jo
cmp
cmpsb
xor
mov
or
shll
cmpsl
xor
xchg
xor
hlt
sarl
pop
pop
xchg
jae
clc
xchg
cmpsb
mov
dec
pop
popa
mov
jne
in
mov
sub
push
loop
imul
inc
sarl
or
xchg
std
and
into
cmp
push
mov
cltd
pushf
fdivl
sbb
or
ljmp
out
fwait
adcl
or
jb
out
and
cmp
jp
mov
sub
dec
mov
xor
mov
mov
push
inc
popf
rol
jo
js
movsl
incl
adc
hlt
sbb
test
dec
xor
lcall
stos
inc
jmp
clc
xchg
inc
xor
sub
daa
cmp
jl
mov
cmp
xor
pop
xchg
enter
dec
outsl
and
sahf
sbb
insl
fstpl
xor
mov
stos
inc
int
imul
sti
mul
popf
movsl
or
lret
aam
repnz
push
cmpsl
fiaddl
xor
dec
mov
mov
pop
aam
sub
sub
stos
jb
pop
mov
mov
out
dec
popl
inc
pop
sbb
sub
fisubrl
fnsave
adc
fstpl
cmpsl
push
jecxz
mov
mov
push
fadds
mov
out
push
gs
dec
add
pop
adc
aad
lods
or
inc
sarb
faddl
cltd
adc
mov
ffreep
mov
jecxz
adc
and
shl
lock
call
fistl
xor
mov
pop
pusha
sbb
lds
inc
xchg
data16
iret
and
mov
loopne
mov
sbb
sub
dec
inc
addl
sbbl
cmp
arpl
mov
mov
add
push
bound
mov
out
pop
jp
push
test
mov
rcll
sbb
outsb
and
pop
xor
jecxz
jp
inc
push
mov
sub
lret
jns
sbb
unpckhps
aad
rcr
dec
jle
aaa
ds
in
sahf
clc
das
repz
testl
scas
pop
sbb
aaa
cmp
cmp
mov
lcall
jo
subps
imul
mov
test
push
sub
mov
mov
aas
cmp
add
mov
push
nop
in
push
lds
fstpl
inc
jae
dec
xor
xchg
jle
and
and
es
shl
inc
sub
sarb
push
aas
in
xor
lods
sarb
nop
add
pop
mov
xor
jecxz
iret
adc
adc
add
das
outsb
pop
mov
shrb
mov
xchg
adc
xlat
xor
out
mov
imul
fidivrl
adc
lods
and
pop
push
xchg
das
dec
cwtl
or
mov
sar
in
sbbb
pop
pop
hlt
cmc
xchg
loopne,pt
sub
rcll
push
jno
adc
mull
jmp
sbb
popf
out
sub
les
cld
test
nop
inc
inc
mov
xor
sbb
cld
cld
cld
push
lea
imul
push
int3
lcall
push
test
pop
decb
and
mov
stc
psubd
imul
shr
adc
scas
xor
stc
daa
mov
adc
xchg
adc
jle
add
sbb
add
sbb
push
lahf
add
xchg
ud0
inc
sbb
aaa
mov
xor
clc
fstpl
and
fmull
pop
orb
aas
lock
and
stc
fistl
add
inc
jo
push
lcall
mov
ret
xchg
cwtl
lcall
mov
inc
inc
test
sub
cmc
gs
cmp
lock
pop
jae
cld
cs
sahf
jg
inc
add
mov
push
pushf
sub
lcall
push
cmp
shrl
outsl
rorl
inc
movsl
pushf
sub
cmpsl
rolb
je
mov
in
stos
shlb
sti
dec
mov
jecxz
jecxz
sbb
and
or
fmuls
out
adc
jle
add
out
jbe
sub
imul
jmp
fldt
adc
imul
test
lods
mov
and
or
sub
xorb
test
mov
enter
push
add
cmpb
jecxz
sub
lahf
mov
fsubs
adc
push
sub
cmp
inc
adc
sbb
test
jnp
cmp
je
jb
mov
in
data16
cmp
test
xlat
lcall
mov
adc
mov
jbe
es
mov
ss
popf
ret
out
pop
adc
add
lcall
popf
cmc
xchg
in
push
jg
sub
hlt
xor
xchg
jmp
insb
incb
sti
adc
movsl
pop
add
xchg
out
test
sahf
fs
mov
sarb
aas
addr16
jo
mov
fsubs
push
jnp
js
pop
lock
pop
xchg
add
inc
lahf
in
call
adc
ss
mov
or
imul
xchg
test
scas
cmp
cmpsb
aam
pusha
cs
sbb
xchg
adc
int
sub
push
hlt
xor
xor
jl
daa
and
adc
shrb
jg
lret
mov
inc
orl
push
adc
cmp
aas
nop
add
pop
into
imul
jno
fwait
dec
pop
sbb
lds
inc
xor
lods
data16
xor
outsb
xchg
push
cmpsb
test
pop
cli
pop
fimuls
push
jnp
iret
and
mov
rolb
dec
or
jbe
mov
outsl
xlat
mov
sbb
addr16
push
cmp
movsl
add
mov
adc
outsb
cmpsl
fwait
loopne
pop
ljmp
adc
sbb
xchg
sbb
cmp
jl
jae
fcompl
cwtl
aam
mov
dec
adc
sahf
ss
jno
xor
and
test
xlat
or
cmp
jge
xor
scas
jnp
scas
enter
out
mov
or
jns
inc
addl
lods
mov
gs
dec
xor
push
mov
inc
or
cmpsb
cmp
jb
sub
int
cmp
sahf
add
inc
mov
inc
arpl
adc
in
loop
int3
jo
mov
in
int3
xor
pop
cmp
mov
js
mov
mov
mov
sahf
je
lcall
inc
ret
mov
imul
scas
mov
cwtl
mov
lock
iret
pushf
mov
sbb
cmp
and
mov
mov
jne
add
loope
sub
cmpsl
pop
push
fnstenv
in
pop
xchg
push
cmp
mov
dec
imul
repnz
cld
mov
inc
negl
xchg
fcmovb
sub
cmp
lret
sarb
je
sti
cwtl
sar
cmc
mov
not
fwait
movsl
mov
pop
gs
jne
inc
imul
or
frstpm(287
lret
cmc
sti
fwait
movsl
mov
pop
gs
jne
inc
imul
or
fndisi(8087
enter
jmp
lcall
xchg
pop
gs
je
inc
outsl
push
sbb
xor
ret
in
cmc
jae
ret
rcrl
add
mov
roll
and
lret
aam
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
xchg
pop
jnp
dec
jg
insl
push
cmove
sbb
fwait
scas
fwait
sub
jnp
dec
jg
movntps
cmp
or
sbb
jmp
fcmovne
enter
mov
jnp
push
cmpsl
inc
adc
jg
xor
aas
add
mov
in
aad
fucom
fwait
and
adc
push
rorb
les
loop
xchg
adc
mov
jo
iret
jb
lret
xchg
mov
cmpsl
and
mov
cmp
adc
add
jo
ret
out
scas
mov
mov
sbb
sbb
aas
jge
cmp
jg
negl
ja
pop
lahf
mov
sbbl
dec
xchg
imul
pop
sti
rclb
in
mov
add
clc
lahf
inc
scas
add
lcall
xchg
movsb
pop
mov
out
pop
sti
out
mov
ss
mov
fwait
outsb
dec
adcl
cld
ljmp
add
int3
into
scas
je
mov
or
jg
jmp
cmp
adc
jecxz
ror
ret
xchg
lods
popf
mov
jnp
dec
pop
pop
pusha
jge
push
pop
addr16
jbe
orb
icebp
call
add
cmp
cmp
pop
pop
jp
fisubrl
ja
xchg
lea
neg
lock
out
and
xor
push
sub
pop
inc
pop
cmp
or
sbb
jmp
sti
out
lret
fisttpl
mov
jnp
dec
jg
movntps
cmp
or
sbb
jmp
sti
out
lret
fisttpl
mov
cld
lods
push
dec
rclb
mov
add
inc
push
aad
aaa
pop
xchg
cmp
add
or
lcall
in
or
add
xor
add
sbb
ficoml
cmc
or
and
sub
push
mov
outsl
lahf
or
shr
test
or
into
fimull
test
pop
pop
inc
adc
in
fwait
pop
arpl
push
jbe
push
push
outsb
mov
sub
cmp
jae
insl
pop
jl
mov
jno
push
push
insl
mov
jbe,pt
movsl
imul
jl
add
and
lea
xchg
scas
ret
icebp
imul
repz
lahf
icebp
imul
xor
aas
xor
stos
lret
lcall
dec
cmpsl
cli
lock
mov
aaa
movsl
push
cmpsb
repz
adc
rorl
loop
jbe
xor
or
xchg
xor
mov
pop
movsb
jne
fsubp
fnstsw
repz
mov
cmc
push
test
std
push
and
stos
enter
mov
ss
mov
test
mov
cli
sub
mov
mov
fcompl
jnp
push
xchg
roll
lcall
repnz
sub
sub
mov
jmp
mov
pop
mov
mov
lahf
out
adc
xchg
sbb
cmp
xchg
jp
jp
test
mov
into
adc
outsb
outsl
sub
cmp
sbb
inc
insb
xor
scas
popa
xchg
cmpsb
popf
xchg
mov
mov
jno
inc
push
mov
pop
jno
fidivrs
arpl
sub
sbb
jno
orl
mov
call
jl
xchg
loopne
pop
movsl
mov
lock
fld
and
subl
pop
incl
iret
ja
dec
jae
xchg
xchg
es
xor
adc
lock
jns
xor
in
xchg
push
cltd
add
int
test
cmp
lea
decb
sbbb
and
call
cmpsl
js
js
mov
pop
xor
pop
fisttpl
mov
cmp
cmpl
dec
jge
adc
out
jecxz
jp
mov
jge
cmc
jns
xchg
xor
inc
mov
cmp
lcall
imull
mov
sub
js
fsub
and
xor
scas
mov
pop
jb
push
lds
shrb
xadd
arpl
cltd
enter
mov
ljmp
ror
loopne
xchg
testl
inc
xchg
cli
pop
lcall
leave
xor
daa
xchg
mov
pop
mov
push
sbb
sarb
dec
cmpsb
add
pop
jo
mov
xchg
mov
pop
sarb
rorl
push
xor
jo
das
xchg
shrb
xchg
nop
jp
sbbb
lcall
faddl
in
xlat
cmp
out
sbb
mov
in
sub
pop
imul
cmp
sub
pop
cli
mov
sbb
adc
push
jno
or
mov
fldenv
add
fists
add
cwtl
xchg
out
push
pusha
dec
movsl
das
xchg
popa
jmp
add
cmova
clc
jg
dec
repz
int
dec
cmp
pop
cld
lret
lea
push
outsb
test
pop
jnp
lret
ja
pop
jb
mov
sbb
cmp
add
xchg
jecxz
xor
in
push
sbb
mov
ret
data16
pop
jnp
cltd
jns
pop
push
lock
out
push
movsb
xchg
jl
aam
pop
dec
xchg
dec
popf
iret
cld
in
jns
lcall
jmp
nop
stos
aas
cmp
adc
cld
aad
xchg
mov
aad
stos
fnstcw
mov
into
out
mov
daa
popa
out
dec
dec
jae
push
fs
js
lcall
mov
loopne
cld
jns
repnz
int
out
xor
out
sbb
sbb
sub
fildll
inc
push
pop
jb
inc
mov
inc
cmp
sbbb
push
nop
xchg
adc
mov
sti
imul
sbb
repnz
push
sub
movsb
arpl
xor
mov
ret
in
mov
int3
xchg
add
adc
loop
pop
add
and
mov
sub
push
out
cltd
insb
lods
sbb
pop
cmp
xchg
mov
jecxz
outsl
loope
cmp
push
stos
out
pushf
sahf
sbb
ret
cmpsl
sub
movsb
jl
fimuls
sub
cli
ret
shrl
int
xchg
adc
add
lock
pop
push
and
nop
daa
in
cmp
pop
sub
fisttps
fnstenv
add
mov
xor
fwait
or
mov
or
fldl
adc
rcr
mov
sbb
xchg
jbe
cmpl
repz
loopne
mov
add
popf
and
jl
dec
fs
jne
shll
test
xor
fnstenv
cmp
xor
popa
fdivs
cmp
mov
mov
jl
icebp
ljmp
out
stc
orl
sbb
int3
xchg
sbb
or
and
or
pop
imul
mov
cmp
pop
aas
and
sub
lock
mov
pop
inc
es
add
stos
lahf
mov
cmpl
insl
shrl
or
fdivrl
pop
pop
push
aaa
cmpsl
add
rolb
and
aad
sti
rorb
sbb
inc
fwait
add
adc
shlb
xchg
out
lock
loop
daa
push
xorb
repnz
jmp
js
pop
cmp
je
ret
push
mov
and
mov
shl
or
push
sub
out
lret
xchg
inc
shl
mov
cmp
mov
lcall
xchg
cmp
pop
addr16
push
sbb
int
jb
int
adc
mov
and
push
insl
iretw
dec
push
stos
js
idivl
ss
sub
je
lcall
dec
cmpsb
dec
ss
xchg
mov
sbb
sarb
cmp
cmpsb
scas
adc
xchg
mov
cs
int3
mov
iret
or
push
cld
add
jp
jg
push
mov
mov
int3
in
pop
pop
repz
nop
fsubp
pop
xor
icebp
dec
test
lds
add
jge
and
mov
adc
incb
sbb
adc
test
lock
push
inc
outsl
repnz
lods
cmp
adc
pop
scas
fadd
mov
sti
shrb
loop
xor
sub
inc
and
push
call
cs
leave
call
dec
loopne
dec
shlb
sbb
or
mov
ss
xchg
hlt
aaa
inc
popa
cmp
add
sub
and
lds
dec
into
pop
fadds
cmp
stos
inc
xor
xor
inc
sub
add
js
dec
dec
clc
imul
lcall
sti
jb
xchg
dec
fs
lock
or
lcall
xor
scas
mov
mov
roll
jl
and
push
jg
std
push
jb
jmp
insb
push
repz
inc
mov
int3
jg
mov
dec
xor
xchg
mov
xor
or
std
jp
hlt
in
repz
xchg
mov
mov
iret
aas
dec
andb
mov
mov
adc
mov
out
loopne
jae
fimull
sahf
addb
lcall
filds
cmpsl
das
push
fwait
jns
loopnew
repz
movsb
and
lea
es
inc
bound
movsb
nop
in
shrb
adc
movsb
outsl
sub
scas
push
xchg
stc
xchg
xchg
nop
shll
inc
xor
xor
outsl
hlt
xchg
jno
xchg
pop
jbe
fwait
jmp
cmp
mov
rcrb
leave
cmpsb
scas
mov
mov
out
or
and
leave
mov
add
outsb
std
sbb
push
outsl
imul
xor
lret
sbb
jns
mov
pop
sub
jmp
aam
mov
jl
adc
and
outsl
jecxz
out
xchg
inc
ret
and
push
out
gs
push
jg
pop
dec
enter
xor
xor
xor
inc
xor
test
dec
dec
mov
or
mov
mov
push
adc
inc
mov
dec
adc
pop
iret
andb
adc
and
inc
pop
push
xchg
cmp
inc
mov
pop
adc
push
fidivrl
push
inc
cmp
outsb
sub
dec
push
xor
xchg
movb
mov
mov
pop
ret
mov
cmp
or
cmp
bound
mov
aad
inc
push
mov
mov
mov
cmp
push
mov
dec
mov
daa
add
adc
push
cmp
inc
and
icebp
sbb
test
push
or
mov
pusha
stos
mov
mov
sbb
adc
ficoml
int3
jnp
movsb
sbb
sbb
mov
jge
subb
mov
js
addb
mov
out
jp
lods
push
cmpl
sarl
mov
push
rorb
imul
jbe
mov
imul
rcrl
mov
jle
sbb
xor
loop
pop
ljmp
and
das
jmp
stc
push
imulb
mov
sub
cmpsl
xor
ret
xchg
add
insb
xchg
pop
loopne
sbb
or
xchg
sbb
pushf
or
adc
call
int3
test
ja
xchg
and
pop
adc
and
mov
or
cltd
dec
icebp
cmp
jmp
add
cmp
movsb
xor
pop
mov
cmp
jbe
mulb
push
cmpsl
fistps
cwtl
fidivs
movsl
je
mov
ljmp
pop
pop
mul
int
mov
dec
movsl
sub
jge
jbe
idivl
push
test
subb
xchg
push
cmp
mov
pop
imul
cmc
ja
push
subl
fistpl
dec
mov
adc
push
push
iret
pop
xlat
es
adc
xor
add
in
fwait
lds
and
push
xlat
mov
stos
dec
and
pop
xchg
and
pop
mov
jne
mov
inc
pop
mov
in
and
adc
or
fidivs
aaa
or
push
cmp
es
cltd
into
ss
enter
lahf
mov
out
jo
inc
xchg
test
shr
adc
data16
cmc
fs
sbb
into
js
shll
sbb
mov
lret
inc
adc
jbe
mov
sub
scas
push
xor
or
insl
add
in
or
mov
scas
mov
cld
arpl
adc
std
sbb
insb
add
mov
out
push
out
fcomps
popl
and
or
lahf
gs
dec
mov
repz
or
xchg
mov
shll
cmp
je
cmp
stos
dec
inc
lcall
mov
cmpsb
cmpsl
repz
gs
repz
jo
aam
add
lret
cmp
leave
inc
inc
shr
ret
xor
adc
add
or
dec
stos
fldl
inc
pop
lahf
jg
shlb
jmp
sub
pop
hlt
mov
cmp
mov
dec
adc
in
lods
mov
lock
sarl
shrl
sbb
clc
call
and
jge
dec
pop
add
dec
lods
lahf
repz
pop
xchg
inc
jge
xchg
sbb
mov
loope
aad
xchg
sbb
mov
inc
or
xor
push
or
mov
xchg
iret
mov
cwtl
ja
cmp
sahf
lds
mov
cmp
mov
push
pop
dec
std
cmp
add
add
sub
mov
or
cmpsl
testb
les
and
jg
sbb
jle
mov
lcall
pop
stos
xchg
push
adc
or
aas
std
imul
scas
shl
add
decl
inc
adc
dec
pop
arpl
pop
xor
lcall
or
add
leave
lret
pop
inc
push
cld
cmpsb
xor
jle
pop
mov
ja
cmp
in
lcall
adc
and
scas
mov
fisttpl
pushf
or
dec
mov
xor
fiaddl
inc
dec
push
data16
aad
jecxz
push
push
sbb
adc
xchg
dec
pop
push
inc
add
push
xlat
fwait
into
push
push
pop
cmp
add
fistpll
std
inc
movsb
lret
push
xchg
xor
add
sbb
pop
mov
inc
in
aas
and
into
inc
or
pop
icebp
dec
negl
mov
or
bound
stos
cmp
andl
xor
sbb
stos
jge
movsl
sbb
pop
xor
popf
xor
test
xchg
pop
fwait
jl
das
and
inc
fs
dec
stos
pop
nop
or
jne
lock
daa
mov
movsl
in
cs
add
inc
sahf
xchg
sub
cmp
inc
outsb
adc
mov
dec
add
out
cmc
cmp
mov
mov
in
push
sbb
cmpsl
or
pop
pusha
lret
imul
mov
arpl
inc
outsl
push
sti
jbe
xor
dec
sub
pop
push
jns
jne
fdivs
loop
pop
daa
jl
mov
jbe
hlt
xor
fstl
movsl
out
negl
mov
adc
lahf
inc
in
adc
aad
push
pusha
daa
shrb
push
decb
inc
lea
cmp
mov
scas
lock
add
or
movsb
inc
sub
outsb
cs
sbbb
rorb
test
cmp
or
push
repnz
adc
lds
push
es
add
jnp
inc
scas
lea
test
xchg
sub
or
test
test
sti
cld
mov
in
push
sub
lock
mov
or
xor
add
outsb
fmull
mov
push
jg
dec
stos
pusha
jge
xchg
cmp
or
sub
iret
data16
imul
xor
dec
mov
lods
push
in
xor
xchg
fs
push
daa
push
or
mov
ret
dec
push
sbb
mov
cmpsb
lcall
or
xor
repnz
cmp
pop
fsubp
xor
dec
rclb
xchg
xor
ds
inc
cmpsb
jge
push
out
pop
xor
pop
test
and
rcrl
push
lods
xchg
cltd
test
xchg
cs
cs
roll
jle
scas
cmpsb
sbb
test
ret
mov
fdivl
arpl
or
mov
imul
cwtl
fs
pop
in
jbe
stos
shll
or
movsl
push
inc
cwtl
hlt
loopne
xchg
jg
pop
mov
jmp
mov
sub
lea
sub
cmp
fisttpll
scas
inc
fcoms
stos
scas
or
xchg
push
notl
mov
aam
mov
cmp
mov
mov
imul
shrb
mov
fs
xor
es
cs
adc
and
loop
sub
xchg
jecxz
jp
push
inc
mov
aad
orl
loop
stos
push
cmp
ss
push
push
clc
sbb
daa
in
sarl
sub
and
fwait
loopne
into
jmp
sbb
and
xchg
inc
out
push
aas
xchg
out
jns
cs
loop
or
add
shrl
mov
or
insl
xlat
les
out
fisubrs
lcall
fists
sbb
xchg
xlat
andb
mov
xor
xchg
xchg
sub
cld
int
mov
push
push
mov
mov
jbe
test
push
mov
fsubp
in
into
scas
add
insb
into
clc
xchg
xor
pop
xor
xchg
and
jnp
test
cmpsb
pushf
sbb
push
or
pop
aas
rolb
test
mov
setg
jecxz
jp
push
and
pop
xor
call
aam
pop
and
cltd
xor
xor
fwait
pop
sbb
call
mov
or
sbbb
ja
lret
sub
cmp
and
inc
test
mov
pop
jp
adcb
ror
imul
roll
push
add
mov
or
and
adc
pop
pusha
stos
stc
leave
xor
dec
push
aad
ds
or
dec
ja
adc
inc
jnp
mov
inc
inc
repz
mov
clc
jo
lret
or
sahf
adc
in
push
test
mov
push
add
int
xchg
xchg
sbb
pop
mov
jmp
pop
mov
cltd
xchg
repz
mov
lea
and
loopne
mov
out
dec
jp
inc
jge
xchg
outsl
bound
cmp
je
mov
clc
inc
sub
xor
adc
mov
push
aaa
gs
stos
xchg
imul
push
dec
lret
add
xor
mov
or
dec
mov
or
out
mov
in
mov
mov
lock
fdivr
ret
icebp
or
sub
jae
mov
in
loope
mov
pushf
scas
popf
js
push
dec
add
mov
add
xchg
sbb
inc
adc
lret
in
dec
pushf
inc
testl
mov
addb
shlb
loopne
cltd
xor
ja
test
std
xor
xor
int
cmp
inc
in
sar
mov
cli
ja
mov
into
pusha
add
xor
cmp
mov
fbstp
fbld
cmc
ljmp
repnz
xor
inc
cmp
ret
adc
adc
in
add
add
ret
aas
inc
ljmp
pop
xchg
mov
jo
mov
cld
jmp
sbb
es
out
mov
das
pop
leave
cmp
xchg
mov
into
lret
bound
sub
push
jns
pop
nop
jge
test
fsubrl
bnd
nop
cwtl
or
divb
mov
xchg
mov
push
imul
stc
pop
cli
test
mov
xchg
das
inc
popf
jns
mov
imul
rolb
in
mov
sti
add
inc
xlat
mov
dec
cwtl
sbb
mov
mov
pop
adc
pop
xchg
pop
jnp
test
jnp
test
xor
jl
mov
ds
or
or
mov
scas
fs
cltd
inc
insl
je,pt
cmp
cltd
pushf
pop
push
mov
xchg
or
xchg
push
rorl
dec
orl
shr
mov
stc
push
pop
movsb
pop
xor
mov
in
add
xchg
and
sarb
push
test
push
roll
or
daa
movsb
mov
pop
out
rorl
xchg
ret
xchg
mov
dec
push
inc
or
arpl
mov
jae
mov
cmp
inc
lret
mov
repnz
into
mov
xorl
dec
cmpsb
mov
xlat
popa
out
mov
mov
xor
das
pop
cmp
cmp
hlt
mov
rcrb
xor
mov
dec
pop
mov
jl
movb
cld
push
mov
xor
rcll
xchg
cltd
filds
mov
xorl
jmp
loope
es
cmp
aaa
sbb
repz
shr
dec
insb
out
jno
push
orb
mov
daa
enter
hlt
loope
arpl
push
fidivs
mov
cmpsb
mov
inc
in
jns
cmp
jns
xor
fsts
xlat
sub
mov
sub
or
add
sub
and
je
test
pop
cld
cwtl
pop
nop
loopne
outsl
data16
xor
and
stc
mov
mov
mov
ss
popf
inc
and
inc
push
lret
bound
mov
es
fs
clc
iret
addr16
ror
mov
sahf
popl
mov
popf
dec
fcmovb
inc
sbb
inc
stos
push
lock
movsb
mov
fadds
push
mov
outsl
mov
mov
and
adc
sub
xchg
jecxz
test
out
jnp
xchg
cmp
sahf
addb
repnz
xor
and
std
xchg
sbb
cli
jns
push
fnstcw
pusha
sbb
stos
add
lahf
adc
xchg
out
bnd
mov
sbb
jne
mov
and
mov
inc
popa
mov
repz
sub
pop
fiaddl
call
movsl
pop
aad
stos
clc
in
and
jle
or
dec
jns
repz
pusha
out
inc
push
popa
js
push
je
add
call
jge
sub
idivb
xorb
fidivl
push
lods
xorb
mov
rcll
mov
js
test
mov
mov
push
fwait
mov
or
xchg
movsb
stc
sub
ljmp
in
int3
movsb
movsb
cs
xchg
jns
xor
pop
or
ja
or
fistpl
sub
add
ljmp
and
test
incb
or
sti
cwtl
movsl
push
push
xchg
push
divl
xchg
mov
mov
hlt
mov
mov
dec
mov
cld
pop
mov
rcl
inc
cmp
cmp
mov
repz
andl
lea
and
mov
nopl
lds
lcall
outsl
inc
imul
push
jno
inc
js
lea
jecxz
and
or
sahf
xchg
neg
hlt
stc
dec
jg
adc
sub
mov
mov
xbegin
jnp
add
insb
int
cmp
jl
and
lcall
add
push
rcll
aas
and
data16
or
fwait
leave
mov
ret
xchg
or
cmc
add
push
xor
jp
mov
addr16
adc
xor
inc
add
data16
andb
in
icebp
in
push
jb
test
out
push
and
ret
push
jecxz
mov
loopne
ret
repnz
jp
test
or
xchg
je
stos
hlt
jo
fucom
rcll
data16
stc
pop
jge
arpl
adc
xor
cmpsl
movsl
mov
stc
dec
xor
and
mov
sbb
mov
rcl
jp
fsubrl
sbbl
jo
das
int3
pop
sbb
add
mov
out
pushf
clc
inc
roll
or
sbb
push
lret
cmp
les
enter
popa
mov
mov
iret
addr16
stc
sub
push
int
js
fwait
ror
or
mov
pop
dec
push
dec
push
out
loopne
cmpsb
cmpsl
sub
xchg
sub
test
aaa
orb
push
repnz
sbb
inc
add
mov
xorb
sub
push
pop
mov
pop
movntps
cmp
or
sbb
jmp
sti
out
lret
fisttpl
mov
jnp
dec
jg
movntps
cmp
or
sbb
jmp
sti
out
lret
fisttpl
mov
jnp
dec
jg
lahf
sub
cmp
or
sbb
jmp
sti
pop
lret
fimull
mov
pop
imul
xor
sub
cmp
or
push
inc
lret
ljmp
je
fs
int3
int3
int3
int3
pop
or
jns
imul
dec
dec
and
fimull
jmp
pop
mov
or
jns
imul
cmp
jnp
mov
sti
stc
stos
jmp
fstpt
or
jns
imul
cmp
jnp
and
fwait
mov
mov
cli
cltd
sar
or
inc
jns
add
mov
shlb
loop
repz
out
ds
add
jecxz
cmp
dec
xchg
les
enter
insl
sarl
arpl
stos
push
ss
mov
clc
stos
cmpsb
push
and
adc
and
fisttpl
addr16
fs
lret
cmp
jb
push
outsb
cwtl
mov
dec
negb
in
test
push
inc
negl
push
push
jmp
mov
and
jmp
in
scas
xchg
out
sub
jle
clc
fdivs
int3
je
bound
fisttpl
daa
inc
adc
jbe
popf
mov
inc
dec
xchg
ret
adc
push
cmp
or
ficompl
ljmp
sbb
imul
cmp
jnp
mov
fwait
stc
stos
jmp
fstpt
sub
aas
inc
das
push
jl
pop
push
and
lods
out
mov
lods
std
pop
stos
enter
fnstcw
sbb
sub
add
jl
insb
jnp
repz
out
test
jmp
mov
mov
stos
ds
dec
dec
aas
inc
or
pop
dec
or
imul
jmp
fstpt
or
jns
imul
cmp
jnp
mov
fwait
stc
stos
jmp
fstpt
or
push
in
push
jl
xchg
mov
in
mov
fdivr
cmp
jbe
xor
in
adc
out
shrb
aam
outsb
push
jl
clc
in
cli
in
leave
into
ja
xchg
loope
mov
mov
shll
push
adc
cld
arpl
mov
fiaddl
shl
repnz
ret
fwait
xchg
jle
sub
sbbb
rorb
test
arpl
mov
pop
dec
fldl
cmp
call
mov
addr16
jecxz
or
call
lret
into
jg
lods
ret
inc
cmp
jmp
sti
mov
xchg
inc
or
js
jbe
in
jle
pop
rorl
sbb
test
sti
mov
gs
loopne
in
stos
pusha
add
popa
mov
subb
int3
jb
jae
or
sbb
aas
icebp
mov
add
mov
std
int
mov
or
sub
mov
icebp
and
stc
inc
sbb
push
lock
mul
leave
push
iret
mov
or
cmp
or
or
cmp
xchg
push
jbe
mov
data16
mov
movswl
and
pop
ds
repz
jbe
sub
and
push
xlat
repnz
adc
loop
in
pop
int3
lret
mov
lcall
sbb
shlb
sbb
jmp
mull
icebp
je
jl
fcoml
mov
cmpsl
mov
push
fistpll
fbld
les
mov
int3
pop
neg
mov
sub
or
and
sti
cmp
mov
addr16
cmc
test
pop
push
mov
cmpsb
decb
sub
push
stos
jp
dec
xchg
int
add
scas
das
dec
adcl
insl
add
out
and
sbb
push
cmp
cmpsb
mov
dec
sarl
hlt
scas
mov
cmp
out
dec
lret
mov
repnz
dec
out
ret
inc
jno
shr
cld
ja
mov
push
cmp
dec
les
outsb
cmpsl
test
cld
les
sbb
mov
push
std
add
add
xor
push
push
cli
inc
loope
sahf
or
nop
nop
mov
sarb
push
pusha
mov
dec
divb
test
aam
scas
xchg
cmpsb
xor
add
shll
dec
and
sub
dec
dec
jns
rorb
rcr
hlt
cmp
mov
push
cmpsl
dec
push
inc
pop
xor
mov
adc
fisubs
lods
or
and
xchg
mov
ljmp
fs
cmpsl
xchg
jg
mov
jnp
cmp
lahf
rol
bound
adc
lods
inc
ret
pop
fmul
lods
lods
mov
rcrb
xchg
pop
test
add
aad
nop
jne
mov
movsl
xchg
test
xchg
sub
shlb
popa
nop
cltd
call
pop
ret
stos
std
mov
in
jmp
sub
rorl
mov
sbb
mov
aaa
push
int3
adcb
std
movzbl
out
adcl
mov
mov
xchg
cmp
xchg
cld
imul
in
add
sti
xor
push
adc
dec
lea
dec
je
in
dec
add
je
push
push
lret
lret
and
pusha
fmuls
fsub
stos
inc
mov
bound
xchg
cltd
repnz
push
enter
jo
and
cli
add
aam
das
push
outsl
mov
cmp
sub
push
sub
fs
gs
aad
lods
daa
mov
or
mov
or
fsubrp
repz
ret
sbb
push
sbb
xchg
rcrb
inc
add
xor
test
lret
es
je
rorl
lock
nop
jbe
push
jns
cmp
mov
dec
popf
lock
cs
xchg
sbb
cmp
sbb
cmp
addr16
xor
sub
inc
push
les
or
add
cli
loope
mov
dec
xchg
test
dec
adc
test
jne
xor
insl
shl
andb
jg
inc
inc
in
test
sub
push
lahf
pop
ret
nop
jo
mulb
push
add
push
or
mov
sahf
dec
or
fdivrl
lds
imul
mov
cs
ss
gs
push
fs
inc
mov
sahf
sbb
test
sar
les
cmp
inc
loope
lea
hlt
orl
ja
pop
xor
std
jmp
and
insl
push
iret
mov
lods
pop
push
cwtl
arpl
jecxz
fwait
mov
dec
sbb
test
cli
xor
into
shrl
mov
mov
imul
js
inc
jnp
adcl
pop
inc
inc
pop
jecxz
sub
mov
pop
pop
push
inc
mov
cld
je
mov
lods
sahf
add
pop
dec
mov
dec
iret
mov
std
xor
pop
jno
push
jg
stos
xor
cltd
clc
lods
or
add
in
ret
mov
rcrb
bound
movsb
xchg
inc
xor
stc
fisttpl
repz
dec
cmp
push
frstor
push
test
inc
sbb
adc
xchg
jae
pusha
jecxz
push
sub
insl
mov
push
dec
mov
fcoms
cmp
in
sbb
inc
xchg
dec
fistps
das
and
test
lcall
and
lret
rorl
push
orb
or
pop
pop
push
outsl
fbstp
adc
nop
in
je
mov
es
fldt
pop
scas
rclb
jns
cmp
lcall
int
nop
pushl
aas
out
and
movsl
push
jecxz
decb
or
jo
roll
icebp
test
mov
lock
lds
push
mov
stc
jb
lods
sti
adc
xchg
repz
jge
or
std
mov
aaa
xlat
ss
cli
xchg
push
in
test
xor
rorb
mov
push
mov
xchg
sbb
jae
push
mov
arpl
inc
and
cli
std
popa
pushf
sbb
mov
sbb
mov
fadds
cmp
cmc
push
cmp
call
test
andl
roll
add
jae
jnp
imul
jbe
inc
fdivp
or
subl
mov
pushl
insb
jns
push
dec
dec
mov
cld
movsl
dec
cli
mov
jp
xchg
or
insb
push
fdivr
xchg
mov
mov
cmpsb
mov
sbb
adc
adc
add
adc
mov
pushf
lds
lret
mov
xor
lock
je
ds
and
fstpt
dec
jge
sub
mov
shr
cmp
ds
bnd
ret
roll
push
test
adc
lcall
lcall
mov
jb
push
hlt
sub
fstps
lret
dec
dec
mov
dec
and
xchg
pop
xlat
rclb
inc
pop
mov
fs
xlat
push
push
jmp
pop
int
call
decb
mov
mov
sub
inc
mov
movsl
ljmp
lock
lret
cmp
push
shll
add
cmp
sbb
mov
fcoms
xchg
mov
push
sub
dec
jns
xchg
mov
or
icebp
pop
xlat
out
into
jmp
aas
cltd
in
loope
shll
ljmp
cmpsb
mov
mov
add
arpl
dec
push
subl
mov
add
and
push
mov
push
pop
mov
aam
mov
cs
mov
ja
xor
pop
mov
sub
and
cmp
test
scas
pop
mov
cltd
cmp
sub
dec
cmp
ja
push
push
cmpl
mov
mov
and
mov
xchg
std
fmuls
jno
and
idivl
inc
mov
lds
fdivl
xor
adc
cmp
sub
mov
lds
dec
add
stos
ss
test
push
mov
pop
cmp
mov
out
jne
sbb
xorb
lret
sub
outsl
mov
mov
dec
insb
and
sub
sub
inc
cmp
pop
mov
dec
mov
dec
out
mov
sub
xchg
mov
dec
jecxz
scas
and
das
mov
or
negl
pop
inc
out
out
or
cwtl
iret
sti
sub
out
fs
lcall
das
es
pop
xchg
outsl
mov
xchg
sbb
packsswb
and
insl
in
xor
movsb
mov
lret
push
mov
and
jp
das
les
xor
aas
xchg
xchg
xlat
dec
mov
xchg
nop
xorl
loope
pop
inc
and
jle
outsl
adc
fyl2x
jl
je
jmp
addb
push
adc
les
adc
xchg
pusha
mov
inc
sar
sbb
xor
lods
inc
xor
lods
lret
lock
dec
jle
push
jns
in
or
jecxz
push
mov
arpl
cmp
and
mov
test
iret
popf
imul
ljmp
int3
inc
lret
mov
addr16
dec
cltd
mov
and
fcoms
mov
sbb
push
mov
outsl
jae
sbb
cmp
ss
jne
adc
push
add
test
sub
sbb
mov
pop
inc
lcall
cmpsl
stos
cmp
aam
cmp
scas
mov
jne
xor
inc
xor
out
mov
test
repz
xchg
add
int3
cmp
nop
aaa
repz
mov
popf
jle
or
mov
wrmsr
pop
mov
movsb
push
insl
enter
leave
push
stc
push
shll
jb
rclb
rcrb
dec
xor
enter
jmp
insl
mov
jp
lock
lahf
cli
dec
push
scas
adc
rorb
xor
mov
data16
data16
test
xchg
es
xchg
cwtl
sub
or
out
je
mov
ret
sbb
cwtl
inc
add
jb
add
rcrl
cwtl
in
and
mov
add
mov
in
mov
push
xchg
pop
dec
in
xchg
push
push
decb
xchg
or
dec
mov
aas
or
lret
adc
ss
fdivrl
fisttpll
jo
in
mov
dec
pop
add
cli
push
arpl
cs
stos
daa
ds
sbb
gs
inc
push
scas
push
sbb
aam
pop
inc
fwait
jbe
in
dec
fwait
test
push
jge
push
out
cld
fldenv
or
out
repz
outsb
insb
outsl
lret
mov
inc
and
adcl
es
add
out
jp
pop
mov
test
inc
cmp
xchg
and
icebp
lcall
shll
xor
stc
imul
shlb
ljmp
xor
test
jmp
aam
inc
fstps
pushf
dec
sub
adc
lea
pop
xor
mov
xchg
sub
mov
cmp
sbb
jle
shll
mov
xor
les
inc
push
adc
push
push
adcb
add
mov
daa
aad
ja
mov
jae
aas
cs
idivb
xchg
jle
cmp
testl
shlb
jge
decl
aad
out
in
aas
into
ljmp
and
iret
bound
sbb
sub
mov
incb
mov
loope
stos
aas
std
pop
sbb
dec
std
fildl
stos
xor
mov
stc
idiv
jecxz
sbb
hlt
mov
mov
loopne
dec
out
ljmp
std
outsb
out
pop
or
lcall
xor
rorl
jmp
mov
dec
pop
in
shrl
xor
test
fscale
push
repz
mov
pop
mov
dec
jl
jg
fstpl
and
insl
jp
aaa
pop
pop
loop
jae
adc
aam
outsb
add
lea
fnstenv
stos
scas
ret
jae
popa
in
or
sarb
jnp
push
je
mov
sub
in
xor
sub
xor
push
push
mov
dec
jne
or
out
or
or
popa
mov
mov
jns
aam
mov
xchg
aad
out
fidivrl
dec
push
shll
jbe
xchg
add
gs
push
nop
and
pushf
gs
xchg
xor
ss
lcall
lods
addl
sub
outsb
inc
sub
stc
mov
sub
xor
int
xor
jmp
outsb
xor
out
xchg
ljmp
and
test
clc
jb
inc
int3
inc
and
aaa
gs
insb
ret
rclb
push
repz
pop
inc
adc
roll
fnstsw
loopne
insb
lret
mov
bound
daa
test
inc
cmp
mov
mov
xor
sbb
dec
outsl
out
in
or
pusha
push
mov
in
mov
sbb
cli
pop
es
addb
je
xchg
mov
pop
adc
pop
mov
inc
push
lods
or
pop
test
repz
dec
into
adc
sbb
xchg
mov
pushf
pop
sbb
cmp
mov
adc
ja
out
xchg
sbb
cmpsl
std
cltd
push
xor
push
pushf
adc
mov
or
jge
bound
cmpsb
mov
repz
mov
add
test
push
fwait
xor
cmpsl
ret
idivb
jp
leave
bound
bound
dec
daa
mov
pushw
mov
xchg
data16
mov
push
or
movsb
inc
jge
sub
imul
push
clc
mov
cli
or
fimuls
call
shr
outsl
and
dec
call
popf
sub
sahf
pusha
jne
out
lods
push
test
adc
pop
push
pop
mov
inc
sbb
popa
adc
and
fldl
lods
inc
into
pop
xor
ficompl
and
mov
xchg
fwait
lock
test
fisttpll
mov
jl
cmpsb
hlt
xor
aam
jle
inc
aas
scas
fdivr
mov
daa
cmp
das
test
jbe
std
mov
mov
lods
push
stc
mov
in
cwtl
and
sbb
push
jg
add
xchg
mov
jmp
xchg
xchg
in
in
pushf
cmp
in
ficoms
inc
pop
add
push
push
xor
mul
outsl
xchg
mov
dec
pop
andb
cli
xor
or
lcall
nop
lret
adc
and
jne
pop
ds
push
mov
in
lahf
dec
loop
sarl
test
jno
shlb
adc
jmp
dec
popl
sub
cwtl
or
jmp
cmp
lods
and
or
mov
inc
gs
push
int3
pop
xor
and
popa
fwait
stc
inc
out
pusha
aam
sub
in
xor
mov
mov
lahf
test
movsl
xor
sub
jbe
cmpb
cmp
mov
hlt
adc
push
mov
dec
outsl
adc
sbb
jg
sti
jne
sbbl
dec
andb
xchg
clc
pop
addr16
out
pusha
vmwrite
mov
mov
mov
jb
pop
fdivp
lret
adc
pop
and
cmc
repz
or
add
adc
shr
inc
dec
pop
adc
dec
outsb
into
ss
shlb
arpl
jo
mov
packsswb
sbb
xchg
stc
mov
repnz
addr16
inc
or
push
mov
jne
loop
push
sbb
mov
aam
jp
in
add
testb
cmp
xchg
fucomi
or
je
push
cmpsl
adc
pop
gs
xchg
aad
jle
jno
mov
fnstcw
push
out
sbb
emms
and
out
jl
xchg
dec
nop
inc
popa
lcall
sub
cli
inc
testb
xchg
and
nop
and
xor
arpl
daa
pop
inc
add
ret
cmp
rcrl
xchg
mov
cwtl
loop
sub
loop
enter
outsb
cmp
mov
lret
out
inc
push
pop
imull
orl
pop
repnz
aad
das
mov
in
xor
cmp
mov
mov
sub
push
repz
mov
daa
ja
dec
fwait
call
xor
int3
cs
mov
dec
in
inc
arpl
xchg
movsb
insb
lds
push
sbb
mov
mov
sub
adc
push
out
popf
xorb
mov
leave
popf
jno
repz
stc
jnp
lret
jne
pop
push
lds
inc
jecxz
sahf
test
out
sbb
jno,pt
mov
loop
add
sti
adc
loop
ss
cmp
cmc
mov
dec
neg
pop
shl
out
jmp
push
movsb
cmc
mov
shrb
and
push
cmpsb
scas
in
fst
lods
daa
xchg
pop
mov
in
aam
scas
cmp
fidivrl
in
jb
out
and
icebp
lea
loop
mov
xchg
fdivl
out
or
cmp
cltd
mov
xchg
xchg
imulb
pop
stos
jns
mov
std
mov
add
mov
jmp
mov
jl
scas
push
scas
mov
rorl
idivl
mov
stos
lret
push
aas
loope
adc
sub
out
loope
or
rolb
and
bound
jne
int
push
inc
shl
dec
mov
movsb
xor
push
push
push
adc
sub
pop
mov
or
out
negl
dec
fidivl
xchg
mov
adc
fldt
adc
sbb
aad
shrl
cwtl
sbb
inc
or
stc
stos
loopne
lret
sub
dec
mov
fwait
xchg
push
lods
and
sti
pop
dec
imul
std
dec
inc
mov
lods
or
sub
sub
insb
jecxz
pop
icebp
addr16
push
divl
xor
sub
mov
mov
in
push
mov
into
mov
insl
cmp
sahf
inc
and
cmp
sub
sbb
mov
push
mov
mov
loop
add
or
add
push
sbb
adc
mov
cltd
mov
ljmp
loopne
mov
xlat
sub
mov
mov
fistl
pusha
sbb
scas
jmp
in
lret
or
and
jle
mov
or
enter
inc
daa
stos
lret
inc
mov
jae
pop
mov
stos
mov
jle
decl
inc
imul
and
xchg
dec
ss
pop
jg
mov
and
mov
dec
int
into
cmpsl
jo
lret
push
fwait
cltd
or
std
sub
call
call
pop
aam
xchg
les
iret
repz
jl
sub
sarb
xchg
inc
lret
dec
jo
rep
mov
xchg
sub
out
mov
or
stc
push
xchg
movsb
call
out
add
mov
out
pop
and
mov
fistpl
fdivrs
pop
fwait
lods
bound
in
out
cmpsb
cmp
mov
push
imul
cld
mul
cmp
rclb
mov
xor
adc
sub
cmpb
add
sub
rolb
nop
iret
sbb
les
adc
and
xor
cld
sub
outsl
jo
mov
lock
add
stos
fsts
shrl
js
test
iret
inc
push
jmp
pop
push
cltd
jg
adc
in
cmc
shl
fcmovbe
xchg
test
xchg
stos
push
jl
sub
shll
push
pop
cmp
dec
ja
and
mov
jno
into
inc
popf
popa
mov
xor
in
inc
outsl
or
std
inc
popf
mov
testl
loopne
shll
insl
cli
lock
lahf
popf
clc
ljmp
mov
xchg
xorl
int3
jge
push
ret
inc
cmp
mov
cmp
push
pop
or
pushf
jl
pop
xchg
gs
pop
into
pop
inc
cli
push
cld
mov
call
sbbb
mov
mov
mov
add
xor
lock
mov
int3
xor
les
sti
pushf
inc
adc
loope
inc
fstsw
jae
dec
and
cmpsl
dec
push
xor
cmc
call
adc
pop
setp
inc
mov
mov
jle
jecxz
fisttpl
jge
ljmp
mov
sti
fldenv
and
hlt
xor
xchg
xchg
dec
and
mov
xor
mov
push
pop
fdivs
add
mov
scas
push
out
das
push
pop
mov
into
sarb
aam
jno
jmp
mov
mov
fidivrs
ficoms
xchg
sbb
js
pop
sbb
mov
sub
ret
inc
fidivl
push
movsl
pop
pop
jmp
jne
movsb
fists
into
popf
mov
ret
pop
outsl
xchg
jmp
ja
jge
int3
push
sti
cmp
in
das
sbb
outsb
or
adc
fildll
adc
test
xchg
popa
mov
pop
movsb
mov
sbb
sub
dec
into
fmul
mov
fisubs
scas
push
sbb
inc
inc
stos
aas
roll
inc
or
ds
daa
pop
iret
adc
fildl
mov
push
loop
add
addl
mov
add
dec
sti
pop
add
push
clc
xor
pop
sbbl
or
lahf
shrb
test
jno
test
push
mov
sbb
sub
dec
clc
call
mov
pop
jb
pop
cmpsl
xchg
int
sub
mov
ja
and
pop
adc
jae
xchg
jp
pop
jge
pop
dec
mov
xchg
stos
sbb
sbb
xor
outsb
cwtl
and
inc
hlt
xlat
mov
out
std
or
xor
sbb
xchg
orl
and
lods
sbb
js
or
pop
int3
cltd
in
bound
imul
fdivrl
jl
mov
pop
adc
cmp
orl
inc
add
jnp
and
inc
movsb
and
or
aad
and
dec
jbe
aam
lock
mov
mov
into
mov
es
cmp
or
pop
lret
loopne
jmp
leave
xchg
insb
mov
in
mov
xor
outsb
cmpsb
gs
out
es
lret
lods
and
int
sbb
into
iret
aad
mov
ficoml
stos
daa
mov
jge
and
xchg
mov
inc
mov
add
dec
repnz
mov
dec
pop
enter
and
cmp
inc
push
aaa
or
fildll
mov
jecxz
xchg
cmpsb
fmull
das
aad
lcall
je
adc
inc
sub
sbb
pop
cmp
jnp
mov
fwait
stc
stos
jmp
fstpt
or
jns
imul
cmp
jnp
mov
fwait
stc
stos
jmp
fstpt
or
jns
imul
cmp
jnp
or
fwait
stc
stos
call
fstpt
or
jns
imul
mov
mov
xor
jmp
and
adc
add
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
jg
outsl
mov
repnz
add
and
adc
add
push
popl
mov
mov
aas
lock
loopne
rorb
mov
fists
iret
add
scas
pusha
lahf
push
popl
mov
mov
aas
lock
loopne
rorb
sar
int3
add
and
aaa
ljmp
jmp
not
movsb
in
pop
testl
js
xor
mov
aaa
jecxz
sub
int3
mov
shl
gs
repnz
push
and
scas
test
das
mov
lods
pop
cli
cmp
xchg
and
jmp
lods
fisttps
push
out
shlb
aad
clc
jg
outsl
test
push
cmp
lcall
fbld
xchg
movsl
loopne
jo
sahf
sbb
mov
lock
js
imul
mov
in
and
iret
push
mov
pushf
add
std
icebp
xchg
fmuls
test
call
and
ficoml
push
mov
outsl
mov
aas
lock
loopne
rorb
sar
out
and
adc
add
push
sbb
ss
cmpb
pop
mov
or
and
jne
je
xor
push
sbb
or
cmp
and
addr16
mov
gs
push
cli
das
sbb
outsl
call
jae
das
loopne
rorb
sar
out
and
adc
add
push
popl
mov
mov
aas
lock
loopne
rorb
sar
out
and
adc
add
push
popl
mov
enter
inc
roll
xchg
push
mov
xchg
adc
mov
sub
movhps
in
pop
push
xchg
ljmp
or
movsl
stc
pop
push
js
iret
xor
call
sub
jne
xchg
out
scas
call
inc
inc
pop
leave
push
mov
and
inc
jae
sarb
jge
and
jne
rolb
adc
mul
mov
adc
push
sub
and
imul
cs
mov
cmpb
dec
mov
xchg
std
in
sti
cld
dec
dec
dec
inc
pop
rcll
dec
mov
cmpsb
dec
mov
xlat
fisttps
or
bswap
shll
xor
popf
ret
jg
out
popf
lea
and
pop
inc
dec
jp
push
pushf
dec
das
les
inc
out
and
ret
xchg
inc
cmp
cld
push
lock
movsl
cld
pop
xor
push
aam
xchg
inc
test
lcall
dec
pop
imul
jne
pop
arpl
leave
rolb
inc
push
cmpl
fldt
sbbl
bts
xchg
mov
mov
xchg
cmp
mov
mov
hlt
jmp
call
jp
pop
loop
loope
imul
jge
cmp
xchg
cmp
movsl
mov
dec
stos
sbb
sbb
pop
xor
leave
or
add
mov
adc
xchg
es
sub
in
pop
into
mov
scas
xor
leave
std
mov
sbb
roll
aas
cmpsl
repz
mov
mov
cmpsb
sbb
pop
push
fmuls
movsl
in
and
stos
pop
adcl
mov
push
divb
xchg
adc
jno
inc
xchg
lods
aaa
inc
outsb
lcall
jg
aaa
sbb
roll
cmp
stos
cmp
mov
sub
imul
lcall
jae
data16
ret
fldenv
loopne
jns
lret
mov
add
leave
mov
mov
test
cld
xor
jle
xchg
fistpll
hlt
jp
or
stos
in
jnp
pop
sbb
imulb
jns
dec
xchg
movsl
jo
dec
xor
push
stos
mov
cmpsb
xor
jp
add
aaa
icebp
aad
loop
push
push
mov
stos
rcl
mov
test
mov
bound
mov
mov
push
push
sbb
int3
adc
test
mov
adcl
ja
cmpsl
pop
push
mov
mov
push
jl
out
sub
mov
outsb
aad
cmpsb
fucompp
inc
sub
iret
cs
mov
cmp
lea
jb
inc
xchg
enter
movsl
mov
in
sbb
cmp
addl
mov
stos
dec
pop
lods
pop
add
int3
jnp
xchg
pop
jge
aad
mov
xlat
loop
add
out
jmp
in
in
out
add
pop
roll
repz
stos
mov
or
add
lret
fsubrp
lock
shl
adc
js
or
sub
lahf
or
mov
out
cld
or
and
out
cmpsl
or
test
adc
xchg
pop
lods
pop
inc
bound
jl
xchg
outsl
stc
add
rolb
pop
fs
mov
xchg
loopne
push
loope
scas
mov
scas
sbb
stos
loop
fnsave
and
jbe
xorl
adc
mov
loopne
push
and
pop
scas
fxch
mov
or
push
fldenv
mov
lret
popa
pop
sbb
call
in
icebp
jne
aas
les
sti
mov
inc
mov
negl
popf
insl
jl
insb
xor
add
jecxz
cltd
hlt
push
jbe
mov
mov
popa
sub
pop
out
pop
sbb
jo
movsl
clc
jmp
popf
bound
mov
xor
adc
clc
mov
push
push
jbe
rep
call
mov
mov
add
aas
adc
jae
out
adc
pop
das
aaa
inc
and
fs
and
jae
dec
mov
imul
frstor
subl
out
mov
mov
stos
mov
in
push
loopne
sbb
jnp
loop
push
mov
mov
or
sbb
into
loop
lea
lods
stos
mov
xor
push
sarl
lret
sbb
and
push
add
negb
sub
cmp
mov
jb
arpl
icebp
jg
int3
xor
mov
sub
addl
add
mov
push
in
or
inc
jne
mov
fwait
bound
call
inc
dec
leave
test
push
add
stc
add
std
mov
nop
je
and
sub
mov
shll
scas
popf
xchg
pop
push
mov
js
in
dec
test
addl
mov
sti
popf
mov
out
dec
shrl
mov
out
neg
loope
push
mov
mov
xchg
test
pop
lret
std
movsl
iret
dec
or
and
daa
shlb
jnp
mov
push
inc
dec
call
pop
ljmp
and
shll
xor
in
pop
ret
adc
push
xchg
xorb
insb
movsl
dec
xchg
in
rol
adc
fwait
and
mov
enter
adc
cli
sahf
or
lds
pushf
mov
aam
mov
repz
inc
pop
outsb
or
int
add
xchg
scas
mov
arpl
fimuls
xchg
push
icebp
or
xor
call
pop
adc
add
cmpsl
in
imul
xchg
pop
dec
pop
adc
inc
add
push
xor
mov
jae
xchg
repz
xchg
nop
inc
orl
or
xor
jle
out
or
test
inc
lea
fsubl
jp
ljmp
lods
push
lods
fdivl
gs
xor
or
push
lock
pop
and
xlat
test
push
cmp
xor
sti
push
xchg
addb
sbb
or
loopne
mov
sbb
pop
rol
push
popa
sbbb
aaa
cmp
add
or
ljmp
and
inc
sbb
cmpl
and
push
sbb
xlat
gs
pusha
xlat
pushf
sub
dec
aaa
imul
into
sub
mov
push
faddl
pop
mov
frstor
pop
out
lods
fnstsw
xchg
jl
call
lcall
mov
adc
inc
stos
popf
jbe
mov
seto
sbb
inc
lea
pusha
enter
sub
mov
movb
hlt
jmp
or
adc
mov
rcrb
or
aaa
repz
cmp
add
inc
ss
jmp
daa
cli
repnz
push
push
and
test
rol
xchg
or
xchg
lcall
flds
xlat
nop
repz
pusha
push
arpl
rcrl
out
pop
and
fisubl
popa
mov
jae
jnp
sub
out
xchg
mov
ljmp
dec
mov
and
jae
jp
addr16
ja
fbld
mov
aam
push
pop
daa
rcr
and
sbb
orb
out
sbb
les
out
fcomps
dec
dec
addb
mov
in
push
adc
or
jge
xor
or
mov
imul
pop
cwtl
sub
pop
jb
inc
cmpsl
xchg
sarb
cmp
test
inc
outsl
jne
cmp
lahf
or
sbb
or
loop
add
scas
imul
pop
dec
dec
pop
sbb
sar
jecxz
push
fnstsw
and
sub
les
inc
jbe
dec
scas
mov
addl
enterw
sbb
or
mov
fnstenv
and
addl
sti
loope
bnd
cmovle
int
and
mov
insl
mov
and
and
cwtl
jnp
in
adc
popf
xchg
scas
inc
cmc
push
fcmove
mov
sub
xchg
dec
sub
jb
push
and
pop
jbe
jnp
pop
ret
push
push
out
mov
mov
sub
dec
daa
xor
push
sbb
aas
inc
mov
pop
jmp
and
jge
mov
rorb
lcall
out
out
lds
xchg
xchg
sti
mov
mov
fists
jno
xchg
push
pop
scas
repz
adc
sbb
hlt
push
clc
push
faddl
pop
pusha
or
dec
xor
jo
dec
xor
cmp
lret
sub
subb
cmp
arpl
or
xor
pop
jae
and
test
mov
push
jae
sarb
lea
rolb
outsb
data16
leave
lret
adc
and
push
aaa
popf
aam
xchg
sahf
xchg
pop
sti
mov
inc
imul
ss
dec
insl
mov
xchg
vdivsd
sbb
push
pop
add
xchg
addb
or
sahf
sbb
sub
out
ja
or
rorl
cs
aad
add
mov
adc
in
popa
gs
addr16
jne
pop
cltd
roll
sub
dec
or
pop
xlat
dec
xor
movsl
mov
fcoms
xorl
fnstsw
mov
ss
fs
fucomp
frstor
jo
int
sub
xchg
add
or
or
or
out
fmulp
pop
dec
mov
insl
sbb
lret
or
mov
pop
test
add
sbb
or
adc
sbb
pop
or
pushf
add
stc
aaa
inc
push
fwait
imul
mov
and
push
ss
stos
jne
mov
cmp
hlt
inc
cmp
xor
push
sub
pop
adc
and
shll
jmp
lahf
je
add
or
jmp
inc
stos
shrl
movsb
scas
and
daa
and
push
mov
sbb
out
mov
xchg
jnp
aam
stos
loopne
mov
loop
fs
mov
idiv
xchg
int3
jg
xor
jae
int
andb
mov
mov
call
mov
sub
dec
ljmp
pop
mov
push
shl
rorb
jmp
mov
mov
or
popa
lret
ret
add
shrl
fisttpl
cmp
pop
shrl
je
repnz
mov
scas
cmpsl
int3
add
fsubs
inc
pop
scas
ficompl
in
rcl
and
lret
mov
or
or
aaa
test
push
and
pop
push
fsts
jb
sbb
push
or
lret
loopne
es
xchg
sub
xchg
mov
jo
sub
mov
cmpsl
in
pop
mov
mov
idivl
rclb
push
cmp
push
cli
stc
or
cmp
dec
dec
sbb
sub
shl
push
enter
sub
aaa
aaa
mov
out
or
mov
push
xorl
call
vmovd
mov
hlt
inc
xchg
mov
mov
mov
je
xor
and
lret
inc
outsb
sub
je
mov
aaa
xor
sarb
pop
pop
iret
ficomps
punpcklbw
int
insb
and
push
sbb
jb
repz
popa
jnp
mov
cmp
xchg
jecxz
pop
dec
ficompl
mov
xor
adc
jmp
push
cmp
or
shrb
push
gs
cmp
scas
dec
xor
fistl
sti
mov
int
cli
imul
jo
nop
mov
repz
mov
imul
push
aas
popf
daa
es
pop
insl
fsubrs
loop
pop
jns
filds
sti
in
push
clc
cmp
aas
xchg
adc
test
cmp
xor
ljmp
push
cltd
dec
jb
inc
ds
cmpsb
inc
es
test
ret
je
shll
sub
mov
ja
imul
dec
pop
mov
shl
repz
data16
repnz
data16
mov
and
dec
jne
xor
mov
loope
pop
sub
xchg
mov
xor
js
dec
inc
cmp
jg
sub
fildll
push
push
mov
ss
or
mov
insl
or
subb
or
jp
fucom
jle
push
and
das
scas
xlat
and
mov
pop
cmp
ja
cmpsb
push
adc
adc
push
sub
xchg
loope
mov
inc
jns
pop
push
imul
jbe
call
iret
sahf
ss
jo,pn
repz
mov
push
cwtl
fildl
out
pop
std
ss
sbb
sub
dec
sbb
loopne
mov
push
dec
movzbl
pop
xchg
and
and
push
sub
cmc
push
xor
stc
inc
jmp
pushf
adc
inc
push
push
push
dec
mov
pop
pusha
sti
movsl
test
sbb
mov
push
mov
mov
inc
imul
jmp
aam
je
lods
inc
fadds
dec
pop
std
in
pop
ja
pop
mov
test
in
call
std
fcompl
mov
and
mov
inc
push
add
jo
pop
or
jae
sbb
and
popa
icebp
andb
jle
xor
xchg
aad
xlat
fistpll
lods
inc
sbbl
mov
jge
ss
in
addr16
call
icebp
insl
push
stc
push
loopne
sbb
ret
mov
sbb
sub
jns,pt
jnp
mov
loope
cmp
sub
pop
mov
fisttps
loope
cmc
fimull
hlt
jae
mov
inc
xor
iret
imul
xchg
pusha
dec
shrb
imul
leave
lock
in
adc
nop
jle
or
lea
icebp
js
lret
push
and
lods
in
fisubrs
jp
pop
mov
out
negb
mov
push
mov
xlat
or
insl
rcll
pop
inc
call
push
or
std
push
rolb
mov
or
lret
dec
ficoms
push
outsl
scas
xor
push
lret
dec
das
iret
and
gs
dec
aas
mov
ja
mov
test
push
dec
ror
lahf
xchg
dec
in
add
and
push
and
inc
xchg
ret
fcmovne
fsubrp
add
fisubs
lea
mov
stos
and
mov
mov
mov
mov
jbe
fbld
testb
jp
inc
out
xchg
pop
jnp
mov
iret
ss
pushf
jecxz
dec
out
inc
int
and
mov
jae
ret
mov
ja
cmp
adc
in
push
sti
or
scas
cmp
adc
data16
in
jo
ret
mov
pusha
aam
mov
cli
pop
bound
lret
fldt
push
or
pop
mov
das
mov
sbb
or
xor
mov
arpl
popf
cmp
mov
pop
dec
or
dec
imul
sbb
xchg
orb
jae
xor
loope
outsl
inc
bnd
pop
add
jnp
lcallw
faddp
and
aaa
in
out
mov
mov
xor
add
imull
pop
data16
fldt
in
xchg
mov
dec
call
push
cld
loopne
fdivs
cs
adc
push
lret
add
popf
push
cltd
jge
mov
mov
cmp
sub
cmpl
push
fcoms
pusha
fstpt
js
xchg
leave
mov
mov
in
out
lahf
dec
bound
pop
cmp
push
push
xor
mov
test
jmp
imul
adc
push
jae
sub
add
xchg
mov
imul
outsl
les
hlt
xchg
stos
daa
mov
clc
and
in
adc
popf
mov
enter
in
inc
add
jne
ss
int
outsl
outsb
sti
lds
xlat
and
jb
out
mov
das
imul
pop
ljmp
clc
stc
xor
pop
or
pushl
call
add
out
daa
push
repz
pop
jg
fadds
cld
mov
xchg
int3
xchg
push
xchg
cmp
push
icebp
lds
rcr
mov
fsub
dec
sti
loop
je
or
addl
dec
aad
xor
movsb
out
pop
mov
lea
int3
inc
add
aam
ds
out
test
ja
fnsave
xor
inc
stos
mov
push
add
pop
movsb
loope
push
xor
mov
and
adc
cli
sahf
int3
jecxz
scas
and
or
inc
xchg
add
xchg
aas
mov
out
cld
or
jo
mov
push
out
cmc
cmpsb
xchg
add
pop
sub
jle
orb
ja
pop
imul
xor
or
lods
push
inc
and
fdivrs
or
or
pop
fsubs
sbb
out
sbb
test
std
fldt
or
and
orb
repnz
arpl
jae
sbb
dec
outsl
add
dec
sbb
push
inc
and
pushf
jns
call
xchg
movsl
pop
movsb
clc
add
cltd
sbb
xchg
pop
xchg
push
and
mov
inc
sbb
xor
cmpsb
ljmp
jb
je
int3
pop
shrb
cli
rorb
push
loop
loopne
bound
lcall
bound
pop
push
dec
sub
cmp
and
fwait
mov
push
and
sbb
rcrb
sti
xchg
in
les
sbb
adc
in
insb
and
dec
clc
xchg
cmpsl
loop
add
pop
aam
cs
iret
in
roll
mov
push
sbb
enter
aas
js
addb
sub
movsl
mov
xchg
clc
add
out
out
dec
jo
jbe
cmp
push
or
leave
aaa
sbb
insl
sbb
jae
pusha
add
mov
mov
adc
cmp
cmp
dec
push
cmpsl
push
bound
int3
sub
imul
mov
inc
jne
arpl
cmp
decl
xchg
fadds
lcall
ja
das
mov
push
add
mov
ffree
scas
mov
jle
out
mov
mov
mulb
mov
shrl
in
mov
xor
lds
jl
popf
in
scas
scas
inc
rcrl
enter
aas
mov
sbb
fdivrs
hlt
movsl
cs
inc
lods
lret
pop
xor
jo
outsl
fisttpl
push
negb
shrb
xor
jmp
sub
dec
mov
ss
mov
call
inc
fisttpll
arpl
push
adc
dec
test
or
movsb
pusha
dec
cwtl
dec
repnz
das
in
pop
xchg
push
mov
je
fildll
imul
fildl
mov
fimull
lock
clc
jecxz
dec
and
cmpsl
jno
lret
arpl
add
mov
pusha
jnp
pop
push
jge
bound
test
popa
adc
das
addr16
das
pop
insl
sahf
xchg
add
aaa
sbb
test
pushf
cmp
repz
xchg
jno
sub
cmpsb
add
xor
adc
jnp
and
xorl
out
stos
and
adc
cmpsl
adc
or
jl
stc
cmp
and
arpl
stos
lods
insb
test
xchg
repnz
and
adc
int3
fadd
aad
rcrb
cmpsl
xchg
jmp
mov
mov
mov
loop
sub
dec
lock
fs
sbb
pop
pop
movsb
addr16
insb
push
sti
mov
xor
inc
mov
in
mov
dec
pop
inc
dec
push
movb
sub
cs
xor
or
sbbb
push
ror
adc
pusha
xlat
inc
xchg
adc
lock
rorb
push
int3
int3
cmp
inc
fwait
sub
jne
push
or
push
add
das
stos
xchg
xorl
adc
lea
xor
mov
add
inc
insb
mov
aam
fcoml
ss
dec
out
js
mov
mov
inc
sub
push
shlb
sbb
push
jle
int3
bound
lret
adc
gs
xchg
lahf
add
add
mulb
jmp
push
pushf
imul
xchg
dec
push
dec
mov
cwtl
dec
pop
push
inc
cmp
loopne
sarb
in
xchg
nop
adc
fstpl
loopne
inc
in
xor
xor
and
lods
aas
sbb
sbb
into
or
rclb
iret
pop
jns,pt
dec
dec
test
mov
pusha
xor
lods
mov
in
fnstsw
xor
mov
cltd
adc
pop
push
inc
gs
test
cmpsl
or
loope
scas
dec
cmp
ret
cmp
jb
pop
lea
dec
lds
call
and
push
repnz
in
call
jae
or
ljmp
push
bound
cld
nop
and
xlat
inc
fisubl
dec
cld
ss
ret
mov
add
push
mov
adc
mov
scas
test
stos
loopne
dec
mov
imul
and
jno
clc
jne
lahf
aam
cli
ret
xchg
push
mov
mov
nop
fsubrl
stos
and
ja
scas
in
ficoml
bound
add
addr16
pop
or
test
les
xchg
inc
mov
jl
scas
into
mov
xorl
popf
sbb
xchg
mov
mov
inc
inc
leave
and
or
pop
lods
sbbb
lds
add
jmp
rcrl
jo
cmp
repz
sti
ja
loop
xor
rcll
sbb
popf
pushf
dec
lcall
xchg
adc
lods
push
mov
xchg
mov
sub
mov
ljmp
dec
mov
icebp
inc
cs
mov
mov
sub
push
gs
and
loope
gs
sub
push
data16
adc
scas
xchg
pop
push
xchg
xchg
xor
mov
repnz
pushf
ret
mov
adc
or
inc
int
inc
in
xor
fdivr
mov
adc
dec
sub
imul
sbb
add
mov
subl
shl
jne
jbe
or
and
pop
mov
cld
stc
xor
cmpsb
outsb
xor
clc
push
lock
je
add
xor
leave
push
loop
add
dec
add
repnz
mov
add
in
test
lock
aas
lock
loopne
rorb
sar
out
and
adc
add
push
popl
mov
mov
aas
lock
loopne
rorb
sar
out
and
adc
add
push
popl
mov
mov
mov
rorb
and
adc
add
push
popl
mov
mov
aas
lock
loopne
rorb
sar
out
mov
iret
ja
clc
fistps
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
cmp
push
inc
jle
outsb
aas
aas
inc
outsl
and
jg
movsl
sbb
lock
mov
mov
jo
jo
push
outsb
and
xor
add
adc
ljmp
out
mov
mov
imul
sbb
sbb
fdivrp
in
lods
lahf
movsb
pushf
int
call
adc
jo
or
or
adc
divl
mov
or
or
orb
std
lea
inc
xchg
out
iret
test
rcr
sub
rdmsr
aas
add
mov
insb
xor
jo
or
xchg
sahf
outsb
repnz
adc
or
fisttps
ficoms
insl
cmc
jb
push
imul
or
mov
rolb
out
and
inc
jns
orb
xchg
jo
lock
add
call
push
rcrb
or
mov
or
mov
fnstsw
loopne
cmp
pop
lea
sahf
aas
sub
test
mov
les
or
xor
sub
add
or
cld
leave
sarb
cmpsb
mov
adc
inc
mov
jge
xchg
popf
lock
int3
loope
lret
pusha
sbb
and
dec
pop
pop
insb
push
push
sbb
test
mov
fistl
scas
and
push
xor
add
adc
loopne
lock
sar
out
mov
mov
jo
inc
jle
outsb
and
xor
add
adc
loopne
lock
sar
out
mov
mov
mov
sbb
cmp
jb
inc
push
out
cmc
insl
out
xchg
cmp
pusha
and
sbb
fdivr
aaa
push
jns
subl
int
cmpsl
inc
js
xor
xchg
sbb
andb
mov
fsub
pop
inc
xlat
loopne
bound
and
loopne
push
cwtl
mov
xor
inc
shll
sub
fimull
lahf
xor
inc
push
insl
mov
inc
adc
pusha
jl
cmp
sbb
lock
jo
mov
push
andl
test
cltd
dec
jl
pusha
in
push
sbb
jp
in
idivb
dec
popa
pop
cmp
add
in
test
cmc
outsl
mov
adc
test
jb
int
imul
mull
jmp
fcmovne
push
stc
and
aaa
outsb
jbe
jecxz
idiv
in
sub
sti
daa
test
xlat
lcall
push
nop
jnp
sti
xorb
loopne
pop
ja
and
aaa
cmc
sub
lcall
adc
xchg
repnz
mov
test
push
and
mov
sbb
xor
push
jns
mov
pop
int3
out
sub
mov
popa
pop
rorb
add
fnstsw
popf
lret
movsl
and
insl
fisubrl
inc
cmp
add
daa
lret
inc
data16
cmp
fdivrl
lahf
cwtl
in
scas
sbb
cltd
xlat
iret
xchg
nop
daa
imul
popf
adc
ficompl
xchg
test
loopne
das
inc
sti
push
loope
test
ret
sub
xchg
subb
int3
insl
mov
insb
nop
ret
and
lock
inc
cmpsb
mov
or
out
shlb
jnp
push
js
mov
add
test
sub
lea
cld
add
xchg
mov
and
adc
in
aas
mov
ror
pop
mov
cwtl
mov
adc
lcall
push
lds
out
sub
and
insb
mov
mov
inc
jo
mov
pop
lds
xor
push
pop
push
movsb
mov
gs
mov
shlb
mov
or
enter
popa
mov
loop
iret
inc
cltd
loope
lea
jb
push
lods
lea
out
mov
cmpsl
mov
leave
dec
clc
repz
dec
and
lret
leave
stc
xchg
sub
dec
sbb
mov
cli
shll
xchg
fcoml
adc
add
imul
add
outsl
cmp
aad
cltd
mov
faddp
pop
push
hlt
push
xor
adc
sbb
sub
xchg
mulb
push
shlb
adc
sub
rorl
sbb
int3
movsb
xor
hlt
and
imul
andb
or
add
mov
cmp
leave
push
les
xchg
and
ss
fs
subb
dec
insl
outsl
lods
add
jns
cmp
call
adc
cwtl
jne
js
sbb
jb
aas
sbb
mov
in
mov
mov
jl
movsl
pop
test
jmp
xor
inc
mov
xchg
add
rep
sbb
mov
adc
push
je
add
rolb
gs
inc
dec
test
push
mov
inc
sbb
jo
cwtl
out
push
xchg
xchg
pop
jle
imul
adc
add
ret
push
xor
sub
xor
push
push
sbb
adc
or
jae
je
jns
sbb
mov
or
pop
add
push
add
ss
cwtl
ja
fbld
scas
add
faddl
adc
data16
mov
loopne
adc
add
hlt
inc
mov
fcomp
fldpi
loop
pushf
lea
sbb
daa
cs
loope
das
rcll
jno
and
jb
in
aas
inc
fdivrl
sbb
xchg
sbb
dec
gs
mov
jns
jg
pop
lods
mov
es
pop
or
inc
pop
pop
inc
jge
dec
sub
mov
clc
ss
jle
adc
pop
inc
cmc
cwtl
xor
xor
push
sub
cmc
mov
lds
pop
push
mov
jmp
mov
dec
jne
xor
int3
mov
cmp
sbb
subl
inc
ja
stos
das
ljmp
xlat
jbe
mov
sub
and
das
lret
jbe
jnp
int
cmp
out
push
mov
pop
sbb
mov
add
leave
pop
xchg
or
pop
orb
sub
inc
cmp
ljmp
aas
cli
pop
lock
call
fnstenv
sub
push
dec
adc
sbb
gs
inc
dec
cmc
adc
les
jle
int3
nop
mov
sub
xor
cmp
mov
jo
mov
jle
out
and
and
adc
xchg
fldcw
into
xchg
stos
imul
add
repnz
ja
das
arpl
pop
insl
and
mov
adc
cwtl
testb
jg
xor
out
fisubrs
and
sub
adc
subb
mov
das
scas
inc
shlb
hlt
gs
adc
inc
loope
adc
pop
test
mov
jns
jae
pop
mov
mov
js
mov
jge
imul
mov
xchg
cli
data16
cmc
in
lea
data16
dec
gs
mov
test
inc
cmp
cli
addr16
nop
jp
pop
fldt
mov
pop
scas
insb
fnsave
loop
cmc
push
nop
fucom
jl
xor
mov
pusha
adc
mov
or
imul
arpl
fidivrs
stos
or
pop
or
aaa
inc
inc
call
sub
push
cmp
call
jno
into
lret
cltd
imul
outsl
test
frstpm(287
outsb
mov
out
cmpsb
sub
pop
jecxz
sub
mov
jle
loop
test
xchg
imul
and
ret
clc
xchg
cmp
aad
push
fstps
pusha
rcll
lahf
push
cld
shll
in
xorl
data16
repnz
mov
fnstsw
movsl
out
ds
pop
mov
cmp
cmp
rcl
ja
xor
popa
cmpsl
add
lods
pop
xor
in
jns
ffree
dec
cmp
ficomps
cmp
aas
aas
mov
push
lods
cmp
sarb
cli
dec
dec
imul
mov
syscall
lods
or
imul
ljmp
insl
mov
push
mov
inc
and
repz
inc
and
inc
inc
and
outsl
or
in
out
in
sbb
enter
mov
cltd
test
idivb
mov
pop
fistl
xor
pop
lea
outsl
sbb
inc
and
out
jno
int3
repnz
lcall
stc
push
test
les
scas
dec
sub
jns
cmpsl
jecxz
sub
mov
ficompl
insb
je,pn
mov
fstps
cmp
icebp
sahf
sbb
test
pusha
mov
ljmp
inc
mov
push
les
mov
and
dec
sbb
fistps
test
in
and
sahf
fmuls
xchg
ret
sbb
popa
cmp
pop
sbb
sbb
inc
adc
dec
lret
inc
lret
or
daa
dec
fxch
dec
jg
test
lret
inc
cmp
hlt
push
aas
sbb
imul
inc
dec
loopne
icebp
lods
ret
sub
jbe
and
push
aam
lahf
cmp
jb
inc
push
fsubrl
adc
xchg
xlat
sbb
xchg
sub
scas
rcll
dec
fdiv
shrl
or
aaa
cmp
mov
xchg
adc
fcmovbe
mov
dec
sub
add
je
adc
jbe
icebp
out
dec
pop
mov
in
orb
lock
and
dec
lahf
and
fucomp
imul
lods
rcr
sub
arpl
cli
pop
or
clc
dec
jecxz
xchg
pop
mov
jae
adc
scas
xchg
popa
jo
js
cmp
loope
in
jmp
dec
mov
adc
ja
or
push
inc
nop
mov
mov
sti
mov
roll
lfs
adc
and
inc
cmp
or
outsb
or
test
push
rol
pop
je
mov
sub
daa
pusha
daa
adc
xor
addr16
cwtl
dec
fwait
pop
and
lret
adcl
stos
and
fistps
fists
push
enter
outsb
push
mov
cs
mov
test
add
push
sbb
repz
adc
push
mov
es
add
jl
push
cmp
pop
dec
out
cmpsb
sub
push
jmp
repz
xor
je
add
lcall
js
movsb
out
sti
dec
test
xchg
enter
mov
inc
mov
and
adcl
sti
int
adc
jecxz
xchg
mov
sbb
insb
shl
or
inc
adc
jbe
inc
jge
ja
jmp
fs
movsl
pusha
loope
cmc
aaa
sti
repnz
pop
test
mov
sbbl
es
jns
movsl
es
jle
dec
cmp
pop
faddl
dec
push
aaa
xlat
mov
pop
dec
divl
jo,pt
sti
mov
jge
das
xlat
and
jb
movsb
in
push
loope
pop
fstl
xorb
add
imul
pop
nop
inc
popa
jb
xlat
dec
dec
in
xchg
dec
mov
inc
inc
inc
test
pusha
and
inc
stos
and
stos
imul
lahf
rorl
push
xchg
jno
pop
divl
push
jle
and
in
enter
mov
dec
dec
sbb
or
mov
les
xor
aad
jg
sti
pop
mov
dec
in
and
xchg
adc
ljmp
lret
sbb
push
sbb
ja
push
cmpb
fsub
out
push
push
lcall
ret
lods
sbbl
jns
fadds
inc
jg
dec
mov
xchg
xor
lds
pop
pop
rcl
jb
add
lds
idivb
in
cs
mov
and
xchg
in
dec
pop
inc
cli
jle
shll
add
cmp
loope
aam
dec
sbb
jmp
jmp
xor
mov
or
mov
sbb
daa
mov
cmpsb
lods
pusha
fstpl
aaa
es
iret
mov
aas
lds
jmp
cmp
addr16
or
pop
test
sbb
push
das
pop
fnstenv
inc
jo
pop
jbe
lret
pop
lods
fsubrs
jmp
sbb
push
inc
sbbb
cmpsl
ljmp
and
xchg
les
lods
dec
scas
lea
adc
pop
cmpsb
bound
sbb
popa
jno
or
jno
repz
lods
jns
pop
cmp
jns
jo
dec
xor
into
arpl
or
fimuls
pop
call
andb
mov
leave
pusha
adc
les
mov
push
xchg
fistps
pop
mov
mov
inc
adc
std
shlb
pop
sbb
out
and
mov
push
repnz
addl
sti
xchg
in
movsl
filds
enter
push
dec
ss
js
leave
mov
add
add
mov
pop
and
fdivrs
popf
lea
stos
sub
shlb
adc
outsb
cmpsl
cmp
test
jp
push
pushf
test
dec
add
lahf
push
xchg
out
adc
les
lods
push
nop
mov
out
xchg
mov
fsts
mov
dec
mov
push
rcl
pop
mov
push
into
cli
in
jne
test
test
cmp
inc
jnp
mov
mov
aam
adc
lcall
dec
popa
mov
xlat
xchg
inc
cmp
out
pop
mov
sub
dec
and
in
mov
cs
stos
pop
sarl
pop
and
sbb
inc
pop
or
mov
jecxz
repnz
inc
jb
pop
mov
cltd
jns
movsb
jp
pop
in
and
inc
xorl
ljmp
cmp
xor
jb
xor
sub
and
into
sti
push
push
les
mov
stc
sbb
jne
sub
shr
mov
imul
push
div
jo
xchg
push
jge
sahf
dec
rolb
mov
icebp
or
sbb
xchg
mov
test
dec
aas
pusha
hlt
lock
mov
and
cmp
jecxz
jns
dec
xchg
mov
mov
lret
pop
pop
mov
xor
cmc
or
inc
jns
fsubl
adc
inc
mov
test
icebp
cmc
push
mov
mov
mov
or
test
jb
daa
or
jmp
fbstp
mov
stos
jbe
cld
push
scas
test
lret
into
push
pop
aaa
mov
insl
inc
adc
xchg
sub
sub
pop
movsl
insl
lcall
push
or
fists
mov
cmp
mov
mov
out
fbld
or
sub
inc
iret
dec
push
push
sub
addb
leave
in
in
cmp
inc
stc
push
inc
int3
ror
or
inc
and
ja
scas
mov
mov
sub
mov
pop
jl
jge
outsl
in
insl
and
aas
sub
inc
mov
loop
or
xchg
pushf
inc
dec
and
dec
in
cmc
and
arpl
cmpsl
loop
lea
aaa
rcrl
sbb
gs
push
cmp
and
cmp
and
jns
aaa
add
xchg
jp
sarb
push
pop
setne
jl
cmp
jno
cmp
sub
or
mov
xor
inc
fdiv
cmp
test
dec
in
stc
das
jo
cli
ss
cmp
jae
or
mov
xchg
in
mov
dec
mov
cld
mov
daa
fdivr
sub
push
ja
add
push
addr16
mov
push
fsubl
mov
jo
clc
lahf
cmp
lahf
lahf
xchg
sbb
push
pop
or
jb
test
mul
shl
jns
sub
pop
mov
jp
sti
paddq
ret
cmpsb
dec
pusha
or
mov
cwtl
popf
scas
sbb
xor
js
pop
mov
leave
pop
aam
cld
inc
lret
pop
push
adc
dec
jp
xchg
stos
and
dec
push
sbb
addl
js
xchg
ds
aaa
add
cltd
pop
aas
push
push
pop
mov
or
fildl
decl
inc
repz
sbb
testl
or
sahf
in
mov
push
loopne
fisubrs
ret
add
xor
popf
sbb
mul
std
frstor
mov
adc
inc
inc
xor
mov
test
adcl
repnz
lahf
pop
imul
mov
push
jp
cltd
pop
sbb
xchg
jne
adcb
add
jo
adc
mov
pop
insb
jmp
rcrl
roll
shlb
gs
xor
jmp
lcall
inc
pop
xchg
out
pop
mov
add
addr16
mov
ljmp
ja
movsb
lcall
scas
mov
shr
bsr
sbb
mov
scas
fwait
cmp
gs
out
cmpsb
lret
xchg
sbb
das
shlb
fcmovne
mov
aaa
fdivrs
jmp
dec
mov
in
cmp
lock
sbb
mov
jo
mov
cli
jg
test
sbb
and
icebp
mov
sub
fimull
lret
into
iret
loope
out
cmp
push
aam
mov
loop
cmpsl
jecxz
dec
push
cmp
dec
rorl
iret
push
mov
fcoms
mov
mov
arpl
jb
mov
in
cmp
pop
jp
das
push
dec
test
add
in
ret
xchg
push
sub
sbb
sbb
push
sub
dec
cmc
out
ds
es
sti
fistps
sub
outsl
aad
jl
jge
stos
sbbl
imul
add
sbb
out
cli
pop
adc
xchg
sub
cli
inc
fldenv
aas
sbb
cmpsb
adc
jmp
sub
pop
fs
adc
mov
sub
loope
jl
dec
adc
mov
jbe
fstpl
mov
inc
mov
ficomps
iret
adc
or
mov
fisubs
jo
lods
repnz
les
mov
or
inc
cwtl
ret
add
adc
jb
or
fmull
or
inc
cs
shll
std
imul
shlb
jno
sbb
mov
add
mov
out
pop
sahf
mov
fisttpll
pop
jl
sbb
add
in
mov
mov
inc
lret
and
adc
inc
fs
inc
or
and
cld
loope
data16
outsb
mov
mov
sub
rcrl
mov
or
jmp
pop
je
jb
sbb
stos
xlat
das
xchg
loope
pop
idivb
fstpl
and
mov
pop
cmp
test
dec
lret
fidivrl
test
mov
scas
rorb
in
repnz
clc
stos
rclb
add
add
push
xchg
mov
imul
das
dec
cmpsl
mov
and
out
mov
cmp
cmp
jb
test
inc
test
shrb
jp
cmp
jp
pop
inc
gs
mov
and
inc
xchg
rorb
cmpsb
xor
fcomip
mov
inc
fadds
outsl
fs
loop
popaw
pop
xor
iret
jp
loope
gs
and
jnp
add
insl
ljmp
adcl
dec
mov
mov
shlb
add
mov
rolb
stc
dec
js
incl
dec
sub
pop
test
les
adc
daa
mov
pop
test
xchg
mov
lret
test
xchg
cmp
xchg
pop
loopne
or
adc
dec
push
lcall
aas
sub
add
fisubl
mov
xor
fldt
rolb
dec
scas
jmp
xchg
popa
or
leave
lods
test
push
pusha
push
pushf
xor
cmp
lahf
gs
dec
xchg
arpl
cs
js
xchg
loope,pt
in
mov
add
or
and
shll
add
xchg
es
mov
pop
fisttpll
jecxz
jne
dec
mov
inc
scas
inc
push
hlt
jnp
add
js
enter
int
movsb
mov
int
dec
inc
stos
sbb
std
inc
leave
add
aas
xor
scas
xchg
push
test
or
add
sbb
es
arpl
ja
std
aas
and
sub
xchg
shlb
and
std
adc
and
jno
sub
sub
test
dec
jb
out
ljmp
or
mov
sbb
daa
rclb
add
adc
in
std
testb
lret
sub
int
mov
decb
and
mov
pop
scas
push
popf
adc
int3
lret
loopne
icebp
mov
repnz
mov
cmp
inc
rep
fisubrl
and
pop
jnp
ja
fldcw
mov
dec
lcall
es
jne
sub
scas
iret
mov
jo
insl
mov
add
add
in
movsb
sbb
imul
je
rorl
hlt
iret
out
dec
aas
addr16
insb
and
rcll
dec
inc
test
pusha
test
ror
xor
hlt
jne
cmp
xchg
sbb
mov
sbb
in
dec
add
ret
lahf
or
das
pop
mov
dec
out
aad
hlt
movsb
popf
push
pop
in
adc
sbbb
and
add
repnz
mov
pop
mov
lret
mov
inc
stos
mov
or
es
in
and
cmp
sahf
add
sbb
das
pop
xor
rorb
adc
out
pop
cmp
int3
adc
add
test
cmpsl
add
xor
xchg
iret
in
shrl
pop
xor
push
gs
add
mov
lret
out
ret
cmp
mov
or
inc
scas
in
cmp
jmp
dec
daa
jg
sub
lea
call
adc
insb
mov
push
std
sub
xor
and
adc
orl
mov
add
aas
mov
or
fildl
popf
pop
sub
jle
and
mov
or
insl
cmp
pop
mov
push
mov
mov
adc
xor
iret
mov
push
aas
mov
jl
inc
nop
jecxz
jp
mov
dec
sbb
xchg
sub
and
add
bound
sbb
lret
icebp
rclb
and
repz
xlat
nop
scas
pusha
mov
mov
cmpsl
dec
lret
add
roll
mov
in
xchg
jae
lret
mov
sbb
add
icebp
mov
mov
lock
and
xchg
sbb
ret
ret
les
insl
sub
jg
dec
xchg
fdivr
nop
sbb
mov
sbb
fmuls
sti
pop
nop
test
mov
sahf
xchg
push
movntps
add
jae
enter
adc
scas
aam
inc
rorl
pop
pop
add
jbe
insl
pop
arpl
or
push
mov
mov
push
pop
mov
fwait
fs
les
jb
push
out
mov
pusha
lods
negb
inc
mov
add
rorl
rcll
jns
dec
addl
cmp
and
in
mov
mov
jb
xchg
or
jmp
adc
bound
idivl
lods
lods
xor
add
lods
cs
lock
dec
cmpsl
push
or
ljmp
insb
xor
mov
sbb
out
pusha
shlb
ja
pop
addr16
jb
jne
and
jl
mov
daa
rcrl
out
movsl
gs
imul
xchg
in
std
mov
mov
je
fcmovnb
jmp
popa
testb
sarb
xor
or
sub
mov
dec
inc
push
stos
out
or
pop
cmpsl
mov
and
mov
sbb
pop
mov
push
mov
mov
cld
pop
test
push
scas
mov
out
lock
in
movsb
mov
xor
es
fcmovbe
cwtl
jnp
js
and
in
ffree
adc
jmp
mov
test
fisttps
out
pop
add
sbb
jg
mov
outsl
mov
das
and
pop
xor
mov
clc
cmp
mov
or
mov
fmuls
arpl
pop
lds
dec
xchg
rcrb
and
dec
mov
mov
rolb
adc
mov
cmp
xchg
cli
loopne
mov
sbb
push
outsb
and
xor
add
adc
loopne
lock
sar
out
mov
mov
jo
inc
jle
outsb
and
xor
add
adc
loopne
lock
sar
out
mov
mov
jo
inc
push
push
push
xor
cmp
loopne,pn
lock
shl
mov
mov
dec
push
mov
push
and
xor
cmpb
fs
rcrb
jg
outsl
int3
int3
int3
int3
int3
adc
push
pop
push
mov
add
add
add
add
pop
add
loop
enter
mov
mov
or
imul
mov
add
add
add
add
pop
add
adc
add
add
xor
ja
mov
popa
add
add
add
adc
pop
add
add
add
add
add
add
add
faddl
movsl
add
or
addb
add
add
add
add
add
add
popl
xchg
add
add
add
add
add
jns
jb
in
faddl
and
fildl
add
and
inc
add
add
add
xchg
add
add
add
add
add
sbb
dec
add
xchg
add
add
add
cmpsb
add
add
add
add
add
add
mov
push
add
inc
add
or
ja
push
outsb
add
add
add
fiadds
add
add
add
scas
add
add
add
aad
jo
ja
add
add
add
add
inc
add
add
add
sbb
add
mov
mov
push
add
sti
add
add
add
add
add
pop
add
add
pop
add
add
movsb
add
add
add
add
add
add
add
add
dec
add
add
add
add
je
sbb
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
adc
add
add
add
add
add
add
add
push
add
mov
add
add
add
mov
adc
add
add
mov
or
add
add
add
xchg
and
or
push
add
sub
mov
add
insb
add
add
add
fildl
dec
add
and
mov
push
add
add
add
add
adc
xchg
add
add
adc
add
add
add
add
add
add
add
jbe
xor
add
add
push
add
add
add
add
add
add
push
add
add
inc
add
add
add
sahf
add
add
add
add
lcall
add
add
adc
lret
add
lcall
add
add
add
add
add
add
add
add
add
add
popl
push
add
popf
add
add
add
add
and
add
add
add
push
add
add
add
add
add
adc
dec
add
add
add
insb
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
scas
add
add
push
add
lds
push
add
push
add
add
add
add
add
add
sub
aaa
add
add
xor
push
add
aad
enter
push
push
add
ds
add
mov
jl
jno
sub
xchg
add
add
add
add
add
add
add
push
sahf
add
jbe
dec
add
add
add
jmp
xchg
mov
add
cmp
imul
push
jl
call
mov
imulb
idivb
imul
sbb
or
jmp
imul
mov
ss
pop
jle
ds
sahf
adc
push
std
int
cltd
xor
adc
mov
sbb
jle
or
sbbl
push
push
pop
insl
addr16
xchg
jb
rolb
movups
pop
inc
daa
fwait
xchg
push
loopne
xor
mov
mov
sub
sub
add
or
stos
pop
mov
inc
xchg
outsl
dec
popf
dec
loopne
cmc
aad
jl
popf
testb
xlat
pop
into
loopne
stos
sbb
mov
scas
leave
enter
jo
inc
ss
imul
mov
dec
stos
mov
mov
mov
pushf
stc
and
dec
lcall
stos
sbb
sbb
addr16
push
sub
insl
pop
hlt
add
mov
mov
andb
push
xor
ja
or
push
adc
lods
dec
cs
sub
mov
imul
push
in
cmp
stos
push
mov
scas
inc
movsl
jnp
xor
pop
into
pop
filds
or
jle
xchg
imul
push
loope
or
add
add
inc
insl
je
scas
out
adc
sbb
imul
sub
pop
icebp
leave
test
xchg
jnp
xchg
jbe
sub
cltd
xchg
stos
and
inc
adc
pop
sbb
jbe
ret
outsb
ret
lods
add
popf
add
dec
lock
int
adc
jl
int
mov
mov
mov
hlt
adc
pusha
cmp
jo
mov
or
pop
cmp
inc
add
fwait
ss
and
add
sub
jg
cmp
mov
ds
xor
imul
sub
mov
xor
mov
jle
iret
adc
dec
mov
push
xor
in
sbbb
fs
fisttps
xchg
cmp
insb
mov
dec
mov
icebp
cmpsb
dec
or
movsl
mov
mov
jnp
daa
fildll
add
lahf
dec
cmp
jne
test
pop
lock
jns
pop
popf
sahf
xor
xor
scas
imul
and
clc
mov
ds
inc
repz
sub
adc
xchg
mov
aas
mov
fisubl
repnz
mov
mov
fld
in
lret
stos
add
pop
mov
out
cmp
aas
imul
jmp
mov
notl
mov
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
