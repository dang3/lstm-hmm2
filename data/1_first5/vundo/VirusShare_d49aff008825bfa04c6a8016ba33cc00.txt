jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
fisubrl
scas
sbb
shll
mov
or
add
add
add
or
add
pop
add
add
add
and
jne
push
add
rolb
sbb
pop
add
add
fiaddl
fadds
cmp
mov
cmp
add
add
add
add
add
sbb
or
sub
mov
cmpsl
add
add
add
add
xchg
add
sub
add
add
ret
add
add
mov
rolb
add
add
fadds
add
mov
add
add
add
add
add
add
rolb
add
add
add
add
add
push
add
rolb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
rolb
add
add
add
add
testl
xchg
add
add
xchg
add
add
add
add
add
sbb
dec
add
add
add
or
add
add
test
add
add
pop
push
add
add
add
add
add
fadds
pop
add
push
add
add
add
cmp
add
add
int3
pop
inc
add
insl
add
push
add
movsl
add
add
in
rolb
sbb
jge
jns
scas
add
add
bound
mov
pop
add
add
jo
push
add
movl
int
loopne
sbb
pop
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
add
add
add
cmpsl
add
lcall
add
cltd
add
fadds
add
sbb
xchg
add
add
add
mov
mov
sbb
cltd
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
push
add
fadds
enter
add
add
add
add
add
add
pop
mov
adc
add
add
add
stos
add
add
add
add
add
add
push
add
pop
stos
add
out
add
add
add
in
stos
add
and
inc
add
add
add
add
add
add
add
sbb
stos
add
add
add
push
add
int3
pop
cmp
add
add
xchg
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
and
insl
add
add
add
add
mov
xchg
add
xchg
push
add
add
add
add
add
insb
add
fadds
insl
add
sbb
insb
add
fadds
add
cltd
add
add
add
add
add
add
add
add
add
add
in
add
inc
add
push
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
push
repz
das
inc
sbb
mov
imul
fwait
pop
fcoml
dec
sub
rorb
or
adc
mov
xor
stos
cmp
in
stos
fs
test
insb
xchg
movsl
xlat
jne
inc
mov
pop
mov
mov
push
shrl
out
cmp
sahf
sub
or
mov
sbb
ja
es
mov
call
jo
icebp
fimull
and
mov
adc
imul
outsb
jbe
inc
divl
pop
stos
jle
mov
push
insb
mov
push
loope
pop
daa
call
je
fwait
lret
adc
cmp
mov
popf
test
int3
popa
test
icebp
cli
lock
xchg
pop
or
std
push
inc
mov
mov
inc
jne
call
mov
and
xchg
call
sub
adc
push
mov
pop
pop
popa
pop
adcb
or
fdivl
aas
cmpsb
mov
lds
scas
pop
lret
add
jae
repz
rolb
xor
jge
push
jp
xchg
push
sbb
aaa
cmpsl
iret
sbb
loop
push
xchg
mov
divl
push
mov
xchg
dec
jecxz
je
mov
les
mov
jle
addr16
or
push
shlb
leave
addr16
stos
cmp
loope
aad
xor
les
pop
xchg
clc
nop
cmpsb
loopne
sarl
lods
gs
pop
bound
repnz
repnz
mov
test
out
push
fiaddl
out
mov
or
cmp
and
stos
inc
movzwl
push
push
xchg
aam
lea
inc
push
jge
dec
lret
repnz
hlt
pop
mov
inc
movsl
xlat
fmuls
int
sti
lock
push
outsb
movsl
ja
xchg
cmp
andl
ret
jge
mov
pop
shrb
je
mov
hlt
sbb
pop
cmp
xchg
or
add
jae
jb
scas
dec
mov
add
xchg
stc
and
or
in
dec
inc
scas
or
inc
lcall
jg
addr16
lret
test
cmp
sub
pop
mov
pop
shlb
fnstsw
test
scas
jns
xor
pop
push
push
inc
movsb
cwtl
dec
mov
ja
dec
mov
ja
addr16
jbe
in
cmpsb
inc
jno
repnz
fisttpl
pop
pop
iret
xchg
cltd
lcall
stos
push
nop
or
fcmovbe
hlt
cwtl
cmpsb
jle
adc
cmp
scas
fucom
cwtl
nop
pop
mov
push
test
adc
loopne
scas
orb
out
stc
dec
mov
aam
test
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
cmp
stos
rcll
aas
push
lcall
ljmp
ljmp
sbb
imul
dec
jp
push
stos
lcall
jmp
sti
lret
fucomi
sub
sbb
imul
dec
xchg
pop
jb
inc
mov
mov
inc
dec
dec
jg
insl
pop
shll
mov
ljmp
push
mov
xchg
mov
jle
pop
xchg
push
je
sarl
sub
mov
push
mov
ret
sti
and
sbb
and
outsl
or
jb
fsubrl
loope
pop
jmp
fnsave
fs
push
cli
cmp
dec
cmp
sbb
sub
xchg
imul
stos
sbbl
mov
test
fistl
sarl
pop
imul
cmovnp
push
leave
into
lcall
xchg
lret
dec
jmp
adc
subl
mov
mov
popf
xchg
push
lcall
lahf
xor
je
cmp
or
jnp
dec
mov
mov
loop
idiv
xor
cli
fildl
jns
add
cs
and
ret
fmull
iret
in
inc
lahf
mov
mov
je
js
jg
push
femms
xor
and
stc
call
fdiv
int
mov
sbbl
cmp
jnp,pt
dec
jp
push
lcall
jmp
sti
lret
fucomi
sub
cmp
or
sbb
imul
dec
jp
push
lcall
jmp
sti
lret
fucomi
sub
fldl
ret
setle
jl
leave
mov
test
jb
dec
or
rcr
push
lret
shlb
ss
cmc
int
mov
pop
and
cmp
imul
lods
pop
push
sub
fistl
loope
dec
icebp
jae
mov
rcrb
pop
cmp
mov
mov
push
cli
mov
jns
movsb
push
jle
test
dec
out
sbb
mov
dec
insl
jmp
pop
adc
pushf
inc
repnz
xlat
daa
pop
xor
lods
jnp
jp
jns
push
out
or
fistps
pop
inc
fisttpl
sbb
out
cmp
cmp
xchg
ss
flds
aas
ja
orb
xchg
lds
sti
dec
jns
repz
mov
dec
mov
pushf
mov
sub
and
es
icebp
add
imull
mov
les
in
int
sub
or
shl
cmp
mov
mov
pop
scas
fmul
jecxz
pop
inc
arpl
in
sbb
inc
test
mov
sti
loope
pop
insb
sub
fisubl
rol
jo
mov
sub
cmpsl
lods
lret
jmp
sub
ss
inc
fwait
testb
shlb
xchg
ret
outsb
cmp
sti
movsb
hlt
mov
imul
mov
jo
hlt
add
sti
mov
push
movsb
jne
std
cmp
cmp
popf
dec
aaa
fs
test
dec
pop
lcall
mov
jns
ljmp
nop
adc
lahf
aaa
mov
pop
inc
nop
jp
mov
and
loope
add
lar
adc
ljmp
int3
call
movsb
cmp
dec
popf
cmc
and
inc
sub
lcall
adc
xchg
imulb
sbb
inc
out
mov
out
xchg
popf
xchg
adc
jbe
xor
loope
push
repnz
std
push
cmpsb
js
xchg
test
cmpsl
call
cltd
les
sti
pop
cld
add
push
jo
lcall
imul
bound
adc
xchg
les
or
inc
or
fdivs
repnz
adc
add
push
les
inc
leave
arpl
jge
test
push
mov
dec
sub
sar
mov
cmpsb
sarl
pop
int
pop
js
testl
mov
lds
push
arpl
arpl
loopne
sub
cmc
out
cmp
push
pop
ljmp
ss
pop
cmpb
call
fs
inc
xor
inc
test
enter
push
arpl
cmp
lock
mov
lock
mov
out
out
jnp
mov
rorb
jp
adc
shlb
nop
and
jp
out
negb
in
shl
sbb
shl
fs
fwait
dec
imul
js
loopne
inc
in
nop
bound
pop
andl
hlt
adc
outsb
and
xchg
push
fmul
add
and
dec
pop
stos
xor
or
mov
jmp
sub
rorl
je
sub
test
addl
sub
jnp
xchg
jno
je
push
pusha
cmp
jb
pop
scas
xchg
and
loop
leave
adc
je
aad
cltd
in
dec
cmp
sub
add
mov
sbb
fstpl
inc
mov
sbb
jne
xchg
pop
pop
xchg
or
aas
mov
cld
pushf
inc
lock
cs
js
data16
ret
jne
sbb
xlat
fisubrl
arpl
lcall
mov
and
and
or
in
pop
jb
in
addr16
das
scas
dec
call
mov
add
push
repnz
inc
add
jb
push
subl
pop
cmp
pop
cmc
mov
push
inc
pop
pop
fistpll
cs
mov
pop
mov
or
xchg
call
inc
negl
es
xor
flds
mov
outsb
test
daa
ss
mov
pop
jg
arpl
cmp
add
jp
ss
mov
push
jne
xlat
pop
divl
pop
loopne
sub
ret
mov
xor
mov
xchg
ja
or
or
gs
xchg
outsb
cmc
add
aaa
inc
daa
jle
dec
add
jmp
scas
mov
faddl
lock
sub
outsl
int3
shr
notb
pop
cli
enter
stos
scas
sbb
fildll
mov
mov
insl
add
lds
jnp
cltd
adc
and
in
cmp
mov
jp
out
les
loopne
lcall
and
fsub
loope
xchg
icebp
sub
movsb
pop
outsl
push
icebp
pop
jge
in
js
rol
imul
fdivl
dec
adc
and
fdivr
aaa
in
xchg
mov
jl
enter
mov
ss
adc
sub
lods
xchg
jle
push
pop
inc
nop
xorb
sbb
push
ffreep
insb
add
jl
movswl
mov
adc
std
add
push
mov
popf
and
push
sbb
roll
imul
outsb
cmp
cli
sbb
mov
mov
inc
pop
xor
add
xchg
pushf
lds
sti
jnp
jbe
lods
xchg
push
jno
add
pop
mov
test
lret
rcrb
inc
xchg
pop
mov
or
shl
cmpsb
std
ljmp
mov
inc
sbbb
in
mov
mov
push
insb
pusha
imul
clc
adc
pop
push
or
loop
or
pop
fdivp
sbb
jnp
fcmovbe
cwtl
mov
imul
sbb
ret
repz
cli
outsb
adc
xor
fstps
adc
pop
stos
mov
bound
icebp
jae
das
mov
shrb
pop
fcoml
daa
addb
shll
and
lret
mov
sbb
xor
xor
or
repnz
dec
inc
in
dec
call
inc
test
andl
out
test
fcompl
sub
js
xor
push
sbb
shl
cmp
mov
stos
test
cmp
movl
sti
jmp
cli
sti
xchg
out
mov
test
scas
mov
out
inc
mov
inc
icebp
mov
and
fbstp
sbb
dec
dec
stos
inc
mov
mov
mov
push
fiaddl
in
into
inc
test
aas
out
mov
test
lea
mov
lock
jb
cmp
add
inc
imul
int3
in
sbb
cmp
xchg
cmpsb
pop
lret
pop
adc
sbb
enter
add
cltd
cwtl
jge
fwait
aaa
dec
movsl
adcb
stc
xchg
push
repz
sub
rorb
ss
repnz
and
sbb
pop
leave
ret
movsl
xchg
test
xchg
fcmovnb
loope
dec
rorl
dec
pop
imul
stos
sbb
xchg
push
ja
ss
mov
push
into
mov
mov
jge
mov
add
aas
pop
sbb
lret
insb
inc
stos
push
sub
stc
shlb
sbb
xchg
lahf
pop
call
imul
das
loop
inc
ror
std
test
push
jbe
loopne
pop
nop
cli
mov
sbb
jae
mov
ret
jp
xor
ja
inc
div
or
sub
fs
sbb
mov
fmul
jle
fs
inc
frstor
xor
push
cli
cld
dec
xchg
push
push
push
jbe
out
mov
fsubrl
cli
xchg
repz
out
outsb
mov
xchg
xchg
xchg
imull
pop
jbe
dec
mov
lcallw
xchg
mov
jb
les
add
pusha
push
outsb
mov
int3
dec
fildl
outsb
fldcw
arpl
negl
in
xor
sub
out
xor
mov
inc
pop
leave
cld
add
xchg
sub
xchg
xor
and
loopne
ja
cs
lds
lock
dec
jl
fcomi
imul
dec
cmpsl
ret
gs
lret
jno
mov
push
jge
in
das
shrb
push
sbb
sahf
daa
dec
dec
roll
sub
mov
lret
fists
sub
xlat
sub
add
fs
pop
ja
mov
les
jg
movsl
arpl
gs
adc
and
test
cmp
mov
mov
nop
mov
arpl
test
ret
cltd
jle
cmp
sahf
cld
mov
jle
fbld
or
xor
lock
adc
js
mov
inc
add
pop
aaa
out
dec
scas
mov
push
jo
cmp
or
imul
cwtl
movsb
imul
xor
pop
cmp
paddsb
cltd
or
sarl
dec
mov
dec
adc
mov
loope
ds
jl
pop
leavew
rorb
mov
or
cld
and
je
ds
jmp
and
xor
lds
cltd
movsl
ljmp
or
jg
ljmp
inc
movl
lds
es
scas
lcall
mov
mov
pop
lahf
mov
mov
pop
push
sahf
pop
sub
adc
cli
and
loopne
mov
repnz
adc
pop
mov
push
add
data16
call
pop
ror
xchg
in
xor
std
js
dec
or
and
loop
mov
xchg
fs
cs
test
cmc
cld
xchg
mov
xchg
jl
jnp
add
fisttps
mov
push
ljmp
pop
pop
lcall
mov
addb
xor
shlb
inc
je
cwtl
xchg
pop
leave
cwtl
sub
jge
push
push
mov
adc
fwait
or
push
arpl
cwtl
lds
add
test
jbe
outsl
int3
pop
iret
pop
movsb
xor
aas
aad
test
fs
stc
addr16
pop
notl
sbb
sub
mov
cmpsb
mov
cmp
ss
or
or
into
mov
push
mov
icebp
pusha
cmc
or
imul
push
add
inc
cmp
push
ss
cmp
sarb
push
sub
fistpll
jg
mov
mov
fidivrl
fiadds
jecxz
sbb
sub
push
mov
jp,pt
push
cmp
fcom
out
xchg
in
andb
scas
and
mov
push
jno
loop
in
cmp
jp
jmp
mov
ret
push
xor
hlt
and
cld
and
pop
cmpsl
dec
rcrl
pop
divb
add
mov
pop
xchg
divl
loop
jo
stc
jb
add
cmp
xor
insl
scas
jmp
push
push
mov
in
adc
mov
cmp
add
into
pop
out
rcl
jmp
test
roll
mov
imul
les
dec
xchg
xchg
insl
mov
in
call
adc
fdivrl
xchg
pop
lds
insl
fwait
and
mov
subl
in
lret
lock
add
add
je
or
ret
shl
pop
sbb
mov
imul
and
dec
cmp
inc
jmp
xor
pop
add
addl
rclb
cmp
pop
insl
mov
sbb
dec
lods
push
out
mov
inc
pop
aam
repnz
mov
into
pop
shr
fnstcw
xchg
adc
js
dec
lahf
pmaxub
repz
add
dec
outsl
mov
and
dec
dec
jp
sbbl
cmp
stos
mov
outsb
cmp
adc
jno
inc
cmpsl
rorl
xlat
lcall
add
into
jnp
cmp
les
pop
xor
cmp
aaa
popa
add
mov
jno
fbld
push
or
sub
cld
push
push
push
nop
lods
mov
mov
sub
lret
xor
pop
inc
mov
sbb
pop
jmp
mulb
pop
js
or
inc
jnp
mov
lret
sti
stos
sbb
add
rclb
icebp
or
scas
pop
jne
repz
and
leave
gs
sbb
add
or
push
jbe
sti
pop
fs
repz
out
ljmp
and
xor
add
and
out
push
adc
ss
gs
sbb
and
sbb
or
cmc
test
pop
orb
pop
and
adc
dec
pop
lods
loope
dec
js
cmp
push
mov
pop
ret
jmp
pusha
sub
cmp
mov
pop
imul
inc
ret
out
sub
gs
fldl
xchg
outsb
sub
inc
sbb
dec
mov
mov
pop
lds
gs
scas
cmpb
mov
cmp
xor
ret
shrb
loopne
test
mov
inc
jmp
add
push
push
push
cmc
pop
cld
adc
int3
mov
dec
arpl
push
cmp
dec
insb
daa
mov
mov
jle
scas
push
out
shrl
jo
dec
add
push
xchg
sub
cs
js
sbb
sbb
js
sbbl
cld
pushf
shll
xor
lods
xchg
repnz
jle
scas
dec
jle
ret
sti
in
xor
js
popf
shl
push
sub
xchg
and
inc
mov
ja
sarl
cmc
outsb
push
or
jnp
roll
mov
push
pop
cmp
jp
adc
test
xorb
mov
inc
int
jbe
addr16
or
movb
pop
mov
xchg
and
cmp
daa
inc
aas
aaa
jo
jae
out
mov
shrl
out
xchg
or
sub
loopne
pop
inc
out
xchg
add
mov
sub
xlat
inc
lret
sahf
mov
ror
xor
sub
jp
sahf
or
sar
data16
mov
scas
sub
sub
iret
pop
jne
inc
mov
push
fmull
xor
test
pop
fs
jnp
test
mov
xchg
mov
call
inc
insl
mov
jae
jns
pcmpgtd
push
inc
repz
mov
pop
stc
ss
xchg
insl
lods
cli
ret
movsb
inc
sbbb
fs
add
les
add
test
or
push
pop
mov
inc
adc
lds
cmp
subb
sub
mov
adc
push
xor
shll
mov
movsb
ljmp
hlt
pop
jb
xor
ret
inc
lret
fstps
push
or
out
jp
mov
pop
xchg
hlt
and
rcrb
xchg
dec
or
mov
bound
aad
stos
xor
lods
cli
cmpsl
or
out
xor
push
sti
mulb
nop
sbb
inc
pop
sti
lcall
inc
push
fisubl
or
lds
lds
push
jnp
and
idiv
cmp
int3
cmp
addr16
cmp
push
jns
fnstenv
outsb
loop
mov
insl
test
xchg
adc
and
ss
rcrl
inc
dec
rcr
mov
les
pop
xchg
int
fstl
mov
mov
xchg
stos
cmc
jo
jge
mov
fcompl
in
cmpsb
jle
inc
dec
int3
jmp
add
mov
sahf
and
cmpsb
xor
add
in
pop
sbb
or
addr16
cmp
adc
int3
push
jo
fisubs
pushf
cmpsb
cmpsb
add
into
or
xor
adc
mov
cmp
stos
ds
and
cmc
xchg
movsl
push
xor
lret
jp
out
fstps
pushf
mov
mov
cltd
movsl
in
dec
in
inc
and
add
jo
rcr
or
push
and
mov
push
dec
lret
inc
sub
xchg
add
adc
popf
movsb
sarb
cmpsb
mov
in
pop
push
mov
jecxz
test
mov
add
xchg
or
dec
leave
repnz
js
mov
sub
into
xor
test
and
inc
cmpsl
inc
push
divb
insl
xchg
mov
dec
les
adc
enter
popf
push
in
lcall
stos
lcall
push
jle
jbe
dec
push
jne
jmp
sbb
lahf
add
mov
shrl
test
enter
and
xlat
inc
fbstp
adc
xor
ret
in
mov
inc
lods
jmp
adc
mov
imul
inc
jmp
rol
or
xchg
jnp
int3
cmpb
repnz
iret
jle
test
push
inc
mov
scas
xchg
sub
rcr
cmp
add
push
jno
mov
xchg
jle
outsb
mov
aas
test
lret
out
clc
jmp
pop
push
mov
lods
inc
out
in
icebp
loopw
jg
lock
mov
insl
mov
adc
cli
adc
mov
cld
mov
dec
cwtl
lea
fcmovb
stos
popa
cmp
dec
mov
dec
out
orl
test
pop
popf
mull
xor
mov
jge
fcmove
mov
mov
ficoms
ljmp
sbb
xchg
enter
mov
jae
pop
xlat
call
aam
push
xchg
mov
push
loop
mov
mov
or
cmp
xchg
fcmovnu
call
mov
bound
sarl
mov
ja
or
inc
mov
xor
pop
int3
push
shr
sub
stc
pop
cli
ja
fs
push
lahf
out
push
jne
cmp
jb
shll
out
in
ds
jg
adcb
and
push
jns
aam
pop
and
or
mov
aas
mov
sahf
dec
inc
pop
fsubr
cmc
aam
mov
jp
ljmp
stc
or
adc
mov
mov
pop
fidivs
fwait
cwtl
or
jb
out
dec
lods
xchg
outsl
insb
call
mov
call
or
mov
je
mov
dec
dec
mov
sub
mov
jge
in
aaa
mov
and
fistl
sahf
dec
xor
xor
xor
cltd
pushf
imul
roll
push
gs
fcmovu
or
and
aas
dec
sub
mov
xchg
cld
dec
outsl
push
xor
test
sub
jae
out
xlat
ret
pop
sub
dec
icebp
idivl
lcall
into
fiadds
jae
rorl
sub
addl
jp
inc
cli
pop
pop
fs
dec
sbb
lret
lret
mov
addr16
stos
mov
xchg
data16
imul
inc
in
sub
sub
clc
push
out
std
dec
nop
mov
rcr
mov
jl
loop,pn
jmp
pop
mov
add
mov
xlat
rcr
aas
and
addl
popa
jge
sub
outsb
enter
mov
inc
inc
es
subl
ret
jge
adc
dec
int3
mov
in
ret
add
sbb
mov
lods
inc
mov
aaa
lods
ret
mov
dec
xor
xchg
fnsave
lods
cmp
inc
fcomps
test
inc
test
xlat
or
cmp
aaa
xor
cmp
lods
push
xchg
test
out
xchg
cli
icebp
push
inc
push
mov
jmp
stos
out
sub
iret
ret
jae
ss
insb
repz
dec
ret
mov
clc
push
cmp
dec
xchg
pop
orb
push
std
sti
insb
sub
sbb
mov
mov
das
mov
dec
enter
mov
or
and
dec
gs
jle
inc
and
inc
push
and
dec
push
mov
and
mov
pop
and
dec
jno
cmp
push
aad
ret
xchg
lret
adc
inc
or
stos
mul
xor
sar
adcb
andb
mov
push
sbb
add
je
mov
inc
mov
mov
xorb
lahf
xchg
mov
pushf
push
xlat
scas
sbb
sbb
cltd
int
imul
test
dec
inc
call
push
enter
fs
pop
ds
adc
xchg
dec
imul
stc
lods
ds
dec
dec
sbb
loope
in
and
popf
into
and
iret
iret
jecxz
cwtl
adc
fsqrt
dec
cmpsl
and
int
cmpsl
adc
push
loop
rorl
mov
cmp
shlb
outsl
push
adc
sub
iret
or
iret
and
pop
iret
sahf
loopne
scas
addb
sbb
shlb
es
cmp
xrelease
and
imul
fs
push
cmc
mov
je
in
push
movsl
fisubs
xor
imul
fdivrs
negl
jle
imul
jecxz
jno
mov
push
mov
lea
repz
push
jne
adc
adc
inc
jne
push
imul
out
and
sub
cmp
cld
cltd
xchg
nop
jp
pop
mov
or
hlt
sbb
or
push
and
sti
add
mov
movsb
and
push
loope
ljmp
mov
addr16
popf
mov
and
or
sub
jnp
dec
jp
push
lcall
jmp
sti
lret
fucomi
sub
cmp
or
sbb
imul
dec
jp
push
lcall
jmp
sti
lret
fucomi
sub
cmp
inc
sbb
imul
dec
jp
push
inc
mov
stos
jmp
sti
lret
sub
cmp
or
sbb
imul
dec
cli
pop
push
gs
fstpl
and
aam
les
popa
in
pop
and
jg
outsb
scas
xor
fnsave
repz
add
xor
and
aam
les
popa
in
xchg
add
push
ret
inc
shll
icebp
aam
add
xor
and
aam
les
jns
push
mov
movsb
sub
jmp
xchg
fs
adc
imul
testl
hlt
adc
bswap
mov
dec
mov
in
cmpsl
push
push
lods
gs
and
pushf
sbb
adc
mov
test
icebp
fwait
icebp
jmp
add
cld
test
xchg
adc
aas
push
cli
fstl
adc
je
xchg
jns
push
pop
and
aam
les
popa
in
mov
xchg
shll
jns
into
fsts
push
push
jmp
inc
outsb
mov
adc
sub
mov
sahf
sbb
aaa
jno
xor
sbb
inc
jmp
and
mov
popa
outsl
mov
cmp
movsb
mov
mov
dec
loope
rorb
mov
hlt
jno
imul
sub
leave
je
fs
xor
and
xchg
and
push
popf
pusha
lea
push
idivb
dec
cmpsb
pop
push
test
test
adc
mov
mov
je
jb
and
inc
negb
mov
fs
repz
pop
int
aam
add
xor
add
adc
inc
shll
icebp
adc
add
xor
and
aam
les
popa
in
xchg
add
push
roll
fs
adc
add
xor
and
aam
loope
imul
daa
add
ds
pop
pop
jo
stos
xchg
xchg
mov
addr16
mov
add
xor
mov
adc
test
push
dec
testl
cwtl
push
inc
mov
not
test
fnstenv
in
inc
fsubs
add
aaa
or
aaa
out
xchg
or
dec
test
cwtl
jne
add
sub
push
push
mov
movsb
bound
out
fs
or
jge
dec
push
rclb
xorl
adc
addr16
pop
fdivrp
sahf
aad
pop
sub
movsb
xchg
dec
icebp
xchg
adc
dec
bound
outsb
xchg
jo
jecxz
in
adc
out
push
xor
pop
mov
and
sahf
adc
mov
test
pushf
lods
add
sub
mov
push
cmp
pushf
test
xor
jge
mov
dec
push
inc
xor
fdivl
pop
push
repnz
mov
in
insb
leave
add
popl
gs
cmc
pop
shll
xor
add
cmp
cmp
dec
jae
out
ss
xor
stc
into
stc
shrl
dec
cmp
sbb
arpl
scas
or
adc
outsb
mov
cmp
jle
push
mov
rclb
push
pusha
mov
sbb
pusha
add
pmaxsw
xor
fcmovb
jge
cmc
push
push
adc
mov
js
and
inc
xor
cmp
aaa
xor
shlb
pop
cmp
inc
pop
add
inc
sbb
fsts
hlt
ja
cmc
dec
jb
xchg
dec
clc
adc
push
jl
and
in
inc
fcomp
popa
or
int3
not
and
stos
add
adc
lcall
dec
adc
out
add
pop
mov
out
adc
add
enter
pop
push
mov
mov
jl
mov
xchg
je
add
dec
jge
or
ficompl
in
pop
mov
xor
mov
cltd
pop
hlt
fwait
cli
leave
adc
or
pop
sbb
int
out
scas
cmp
test
or
test
and
mov
leave
lret
push
ficomps
adc
shr
cld
leave
push
dec
in
xchg
dec
sub
xor
ficoms
push
fistps
fldl
push
jnp
sbb
lret
jnp
shll
jl
pop
imul
fs
pop
stos
dec
mov
shlb
fnstenv
mov
lret
mov
inc
or
xchg
mov
and
das
and
test
std
fnstsw
push
fcompl
cmp
lods
mov
rorb
mov
pop
fs
jmp
fildll
cs
push
test
imull
pop
pop
out
cmp
inc
mov
stc
lods
jl
inc
sbb
inc
inc
cmpsl
mov
test
das
outsl
in
cmp
cli
sub
jbe
in
mov
popa
lret
aaa
in
into
and
mov
lods
ret
loop
sti
negl
sub
dec
cld
cs
test
dec
mov
sbb
out
call
ret
pop
scas
mov
aas
pop
test
dec
xchg
div
mov
fists
xchg
scas
inc
push
out
roll
inc
dec
pop
in
cmp
int
pusha
jns
jae
repz
fidivs
dec
movsb
sbb
cmpsl
cmp
mov
jp
clc
fimuls
add
inc
stos
pop
inc
xor
rep
or
adc
xchg
push
nop
mov
movsl
inc
mov
in
push
test
lock
mov
mov
popa
movsb
pop
int3
bound
or
xor
stc
or
add
fisubrs
adc
dec
mov
loopne
pop
movsb
mov
xchg
shl
notb
je
push
ja
or
push
mov
mov
dec
adc
sub
repnz
ss
pop
cwtl
cmp
in
lcall
shll
mov
and
push
jl
dec
rcll
push
mov
fistps
mov
push
push
mov
or
lock
and
fmuls
jbe
enter
in
pop
ud1
xor
jecxz
push
and
xchg
jmp
fwait
pushf
cmp
xchg
int
dec
stos
arpl
sarl
cld
xchg
adc
ret
dec
push
out
mov
mov
or
insb
ja
stos
stc
mov
lea
jno
das
pop
bound
mov
sar
push
fucom
and
or
fsubs
mov
add
pop
lds
adc
aas
pop
pop
das
push
cmpb
repnz
popf
bound
cmpsb
xor
mov
out
xchg
stos
les
xor
in
dec
cmp
xchg
push
or
add
push
sbb
aaa
test
xchg
ret
scas
fldt
sbb
mov
loop
jno
or
jbe
int3
adc
lods
mov
loope
mov
cmp
pop
xchg
xchg
mov
jle
sub
mov
sub
and
repnz
les
jge
add
push
dec
fisubrs
pop
aam
aam
aad
test
pop
xchg
jns
adc
test
dec
sub
xchg
jb
cwtd
movsl
pushf
jne
jl
and
int3
imul
shr
fwait
shll
cld
cmp
lock
mov
inc
shl
and
push
sbb
mov
mov
scas
jae
dec
imul
rcl
ss
insl
jp
xchg
lock
mov
shl
sub
mov
sub
incl
movsl
jne
test
hlt
movsb
mov
adc
test
or
jno
cmp
xchg
mov
pop
ds
xlat
jmp
out
sti
push
testb
rep
and
cwtl
push
mov
ror
ret
fcom
in
testb
out
dec
ja
call
fwait
clc
xchg
data16
xor
adc
lods
ret
add
lods
scas
jmp
mov
add
adcb
xor
cld
iret
lods
cmp
lea
aas
imulb
icebp
sub
gs
fwait
lock
mov
aam
push
mov
insb
xchg
or
add
enter
movl
cs
mov
stc
push
in
sbb
sub
ret
ss
and
push
andl
sub
lock
cwtl
pop
and
adc
loopne,pn
sub
xlat
lea
mull
cmp
jle
faddl
sbb
idivb
leave
jns
pop
jl
mov
in
mov
or
cmp
loope
jle
and
test
cmp
inc
dec
sub
jg
pop
pop
xchg
stos
in
jl
sarl
or
imul
mov
rorl
loopne
push
cwtl
dec
es
daa
sti
out
adc
stos
push
in
xchg
mov
xor
fwait
and
pop
loop
insb
aas
hlt
je
lcall
inc
mov
aas
repz
ja
jecxz
out
mov
or
pop
shrl
sub
imul
in
lahf
popf
cmc
test
das
iret
xchg
mov
into
inc
mov
mov
xchg
test
sti
popf
fneni(8087
std
push
je
outsl
mov
shlb
add
inc
inc
add
rol
xchg
gs
lret
inc
scas
loope
inc
out
inc
lea
loope
add
insl
lock
add
jo
out
leave
cmp
lret
adc
test
add
sti
inc
fcomps
and
movsl
cmp
add
daa
nop
sbb
add
mov
push
adc
out
and
icebp
insb
into
and
clc
pop
inc
dec
mov
lret
jg
sub
mov
mov
sbb
je
insl
jno
outsb
pop
add
push
cmp
les
ja
or
arpl
in
jp
add
jns
test
cld
addl
notl
push
cld
mov
or
in
mov
ss
movsb
xchg
enter
pusha
dec
xchg
stos
repz
arpl
cmp
loope
xchg
sub
aas
out
cmp
pop
mov
xor
outsl
xchg
imul
loop
push
mov
add
das
cmp
add
mov
pop
dec
adc
dec
lods
xlat
enter
daa
call
cmp
dec
fldt
jge
and
out
mov
dec
cmp
push
daa
test
lcall
jmp
or
cltd
inc
iret
xchg
xor
rclb
push
pop
outsb
test
dec
ja
imul
mov
pop
call
ror
sub
bound
shl
cmp
push
cmp
jge
mov
mov
je
adc
js
int
mov
lods
or
loope
jno
rcll
nop
inc
or
mov
xchg
insw
mov
aam
lret
jb
dec
shlb
sbbb
inc
and
sub
rep
jnp
xchg
push
lods
xchg
xchg
push
pop
cmpsb
xor
jne
ss
xor
out
je
or
and
pop
jecxz
xchg
lock
pop
aam
mov
insb
out
mov
roll
push
xlat
jle
or
mov
xor
sub
test
nop
xor
sub
jns
lcall
adc
xchg
dec
mov
cld
es
sub
int
jne
out
xor
aam
rolb
dec
push
popa
divl
xchg
lahf
adc
test
push
test
aad
mov
lcall
jmp
sub
push
cwtl
add
push
dec
decb
popl
fld
mov
dec
int
test
cmp
xchg
jbe
inc
insb
les
fldt
mov
stc
sbb
popa
or
cmp
jno
pop
push
mov
mov
lret
gs
add
add
sahf
aad
or
or
xor
pop
jns
lock
adc
movsl
icebp
pusha
xchg
lret
sbb
outsb
mov
xchg
pop
mov
dec
cmc
sub
shrb
ss
mov
rcr
aad
lods
pop
mov
jle
jae
cli
shrl
test
movsb
rol
push
fs
loopne
mov
or
sub
sbb
pop
push
rolb
or
fsubs
cmp
push
int
scas
fwait
pusha
push
stos
mov
mov
imul
push
dec
cmp
mov
jb
mov
outsb
and
loop,pn
inc
xchg
cld
jmp
and
test
into
mov
adc
enter
inc
ljmp
push
nop
jae
adc
out
ret
cmp
add
and
sbb
push
and
scas
jg
mov
andb
inc
fnsave
mov
clc
enter
arpl
fdivrs
xchg
arpl
scas
jb
dec
jecxz
sarl
sub
jno
sbb
xchg
xchg
xor
data16
push
sti
xor
xor
movl
dec
adc
lahf
bound
aam
push
das
call
das
je
adc
pop
jno
aaa
xchg
aam
jb
addb
dec
test
mov
aaa
xchg
adc
push
cmp
lock
jbe
inc
lret
add
xor
scas
jp
jge
xor
mov
rclb
pop
dec
sbb
aam
stos
cmpsl
mov
or
sub
jge
mov
xor
xchg
sahf
lcall
das
lret
mov
test
and
sub
pop
shlb
add
sub
push
mov
xor
int3
dec
pop
stc
movsl
test
sub
or
insl
sub
mov
daa
int
ds
popf
sbb
outsl
pop
fcoms
dec
pop
mov
mov
in
pop
sub
arpl
int
aad
or
pusha
jp
dec
loope
mov
fisttpll
js
cwtl
sub
test
pop
dec
sti
push
iret
loop
lret
adc
out
mov
add
movsb
das
fstpt
pop
push
dec
pop
icebp
pop
sahf
push
xchg
mov
mov
dec
and
dec
jge
test
jp
push
add
adc
cwtl
hlt
es
cmp
stos
pop
insb
aas
ret
xor
shlb
mov
shrb
sub
incl
pop
mov
stos
add
insl
shrl
mov
dec
sbb
xchg
iret
push
enter
cmpl
sar
jmp
movsl
stos
in
leave
pop
xor
push
cmp
mov
pop
xorb
push
push
xor
adc
adc
insb
cli
shrb
mov
mov
cmp
push
mov
cmpsb
in
mov
data16
cld
ss
arpl
es
sbbl
sbb
inc
push
mov
sub
in
test
dec
and
ror
jns
mov
incl
daa
loope
sbb
or
fildl
fcompl
mov
je
hlt
ficoms
mov
stos
mov
jecxz
jns
push
jge
fisttps
cmp
add
xor
push
mov
fadds
test
movsb
fdivrs
gs
movsb
dec
pop
adc
pusha
mov
stc
rcr
pop
push
ds
pop
mov
xchg
in
push
adcl
daa
ficoms
inc
mov
popf
ret
nop
inc
xchg
es
jp
inc
push
dec
dec
enter
in
xor
mov
lret
leave
test
decl
dec
push
fs
mull
in
xchg
js
cs
cmp
sahf
sti
add
lcall
sbb
or
mov
sub
jl
in
mov
fdiv
push
sbb
pop
popf
add
sbb
xor
les
adc
or
pusha
xchg
mov
add
sbb
lahf
aad
xchg
pop
insl
in
xlat
loop
xchg
fs
mov
dec
jae
lock
gs
push
int3
jb
ret
inc
dec
sbb
repz
inc
inc
andb
push
inc
mov
cmpl
xchg
int3
repnz
ror
add
scas
clc
xchg
adc
enter
fcomps
addr16
sbb
ljmp
loopne
sub
push
add
push
loop
fisttps
clc
jecxz
xor
jl
push
pop
jns
jnp
ja
insl
addb
dec
lods
mov
cmp
xchg
repz
xchg
js
dec
jno
sub
jmp
gs
jbe
or
xor
idivl
inc
ljmp
ret
xchg
cltd
sbb
mov
bound
sti
sub
xchg
ret
insl
popa
pop
std
inc
out
lea
jle
loope
mov
mov
pop
jno
fs
xlat
les
pop
xor
push
cmp
stos
ja
jecxz
andb
inc
lret
gs
scas
out
sbb
cmp
int3
arpl
mov
mov
imul
cmp
cmpsb
into
stos
and
mov
ljmp
jmp
into
ja
cwtl
pop
xchg
mov
stc
jb
out
jg
push
xchg
fwait
cmc
fs
mov
scas
test
pop
mov
ret
imul
xor
rcrl
push
pop
mov
mulb
in
push
dec
mov
mov
mov
cmp
int3
cmpsl
inc
leave
iret
xchg
cld
mov
daa
jg
xor
das
adc
xlat
cmp
scas
bswap
xchg
sbb
mov
mov
mov
scas
outsl
scas
out
andl
and
mov
es
mov
stos
or
clc
lret
and
fadd
add
mov
fistps
icebp
xchg
xchg
adc
dec
in
shlb
pushw
push
repnz
repz
arpl
int
pop
shrb
and
xchg
jg
cmp
lods
pusha
xchg
push
sarb
cs
shlb
jne
and
test
out
adc
fstps
add
notl
ljmp
data16
andl
lret
xchg
xchg
test
sbb
jl
adc
gs
je
fcom
jnp
jp
lock
push
ja
adc
lret
mov
or
fcompl
aas
push
adc
insb
jb
sarl
out
xor
sbb
push
aam
jge
cmp
and
xlat
rorl
add
add
stos
cmp
mov
into
rorl
sub
mov
mov
inc
push
dec
push
test
dec
add
repz
mov
pushf
retw
cmpsl
rcll
loope
xchg
inc
out
jae
jae
and
movntq
out
adc
or
push
lds
sub
hlt
mov
in
test
mov
fistps
push
mov
in
cmp
inc
inc
mov
ja
sub
test
bound
leave
cmp
push
or
int3
pop
xchg
aam
xchg
push
fs
cmpsb
aaa
mov
test
nop
fs
popa
decb
jge
int
push
fwait
jecxz
out
lea
repnz
test
lods
lahf
mov
adc
test
ret
testl
cmp
hlt
stc
add
sbb
pop
test
cld
or
ret
jp
and
popf
movsl
xor
push
stos
xor
movsl
shlb
mov
sub
stos
sub
filds
clc
out
inc
xchg
xor
push
mov
out
pop
or
mov
loop
adc
or
push
adc
addr16
jg
add
inc
scas
repz
stos
es
mov
sbb
xchg
or
or
dec
das
sbbb
push
jp
xor
in
mov
outsl
xor
mov
rcll
aad
test
cmpl
sbb
cmp
pop
fs
insl
ljmp
js
xchg
inc
xor
cmp
nop
and
addr16
ret
push
jbe
sub
je
movsb
hlt
inc
movsl
leave
dec
insb
das
sub
or
outsl
mov
inc
notl
cmp
inc
inc
xchg
mov
and
push
adc
aad
call
and
aaa
jecxz
dec
addr16
and
sbb
add
mov
xchg
pop
out
cmp
sub
in
xchg
sbbl
mov
lahf
mov
in
push
das
mov
sti
mov
sahf
sub
dec
mov
mov
mov
mov
cmp
out
out
out
out
xor
fstps
add
jp
mov
mov
cmp
pop
dec
jnp
ret
insb
aad
add
pushf
sub
ficompl
arpl
mov
in
les
loop
mov
cmpsl
dec
cmpsl
pop
sar
leave
insl
inc
xchg
mov
movsl
out
ud2
or
je
sub
push
mov
dec
pop
adc
fdivr
loope
jmp
shlb
add
call
fisttpll
in
mov
mov
test
xchg
push
fsubr
pop
cltd
xchg
test
sub
lret
mov
outsb
lcall
adc
cmp
cmp
mov
lea
out
sub
sbb
sub
js
xor
mov
pop
xlat
mov
cli
dec
idivl
dec
inc
dec
ss
mov
shl
xor
lret
syscall
das
xchg
inc
sbb
inc
rcrl
add
outsb
inc
divps
sbb
insb
jo
inc
push
sbb
add
in
cld
lcall
cli
jbe
xchg
and
sbb
dec
scas
mov
xchg
ljmp
dec
add
jle
mov
cmpsb
cmpsl
xor
and
scas
adc
shll
adcb
pop
test
push
test
adc
stos
mov
out
xchg
sub
outsl
fs
fimuls
out
inc
mov
mov
lods
sub
mov
loope
shrb
adc
or
adc
adc
cltd
movsb
sub
pop
jge
push
jbe
stos
shlb
push
push
lret
mov
sub
inc
adc
adc
push
and
xor
ds
pop
cmp
sysenter
int
das
pop
jg
xor
inc
xor
cmp
test
sbb
and
and
fcoml
lret
mov
lea
loop
pop
jbe
arpl
jmp
sub
adc
enter
jl
fs
in
out
addr16
xlat
and
dec
sahf
and
jge,pt
adc
mov
adc
mov
xchg
movsb
mov
push
adc
stc
sbb
cmp
adc
mov
shrl
je
sbbb
dec
push
xchg
in
loopne
and
sahf
sub
mov
daa
mov
xor
stc
push
fs
sahf
cmpsb
or
or
push
mov
cltd
bound
mov
cmpsb
mov
insl
cmpsb
push
mov
fcomp
sub
cld
insl
test
push
adc
lret
enter
mov
inc
aaa
xchg
jg
mov
add
xor
or
bnd
jecxz
ds
add
cmpl
lret
popf
int
xchg
mov
push
push
push
jnp
add
push
nop
adc
insl
or
push
jge
xchg
outsb
or
sbb
rcr
popa
xor
pop
ficoml
push
jp
jge
xchg
dec
mov
es
fwait
mov
jge
fisubrl
pop
cmc
scas
jb
fimuls
mov
mov
jno
add
push
roll
fs
adc
add
xor
and
aam
les
popa
in
xchg
add
push
roll
fs
adc
add
xor
and
aam
inc
push
je
in
adc
test
mov
and
push
roll
fs
add
xor
and
aam
les
popa
in
xchg
add
push
roll
xchg
outsb
inc
pop
push
dec
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
andl
clc
cwtl
fwait
lods
aad
adc
jns
dec
add
cmp
push
int3
movsl
lret
mov
test
xchg
fwait
in
in
lds
xor
sbb
or
inc
sub
mov
repz
fnstsw
pop
jl
pusha
xor
inc
add
inc
cmp
loopne
repnz
sub
push
cmp
add
xor
inc
aas
sti
mov
lds
push
dec
cmp
xchg
fidivl
cmpsl
add
cmpsb
lods
push
cmp
fidivs
outsb
mov
test
and
xchg
ljmp
in
adc
sti
fisttpl
jp
mov
mov
push
outsl
lds
lret
jnp
aaa
cwtl
sahf
pop
pop
lock
ret
and
mov
and
mov
lret
imul
rcl
cmp
shll
push
pop
les
pop
test
push
fisttpl
xchg
fildl
push
sbb
cld
xchg
mov
xchg
cmc
mov
and
jb
add
insl
cmp
push
test
scas
sahf
loopne
lock
out
mov
dec
dec
xor
ja
outsl
ja
sub
fcmovne
lret
fcompl
in
mov
pop
push
dec
push
ds
push
pop
jle
js
dec
and
and
loope
shl
mov
mov
and
imul
inc
sub
movsl
lret
mov
test
xchg
fwait
in
cmc
mov
and
imul
inc
sub
movsl
or
mov
xchg
cmp
test
test
push
cmp
mov
pop
add
ds
xchg
outsl
imul
sbb
push
call
push
test
mov
iret
shll
fwait
inc
xchg
pop
mov
ss
out
cmp
mov
fists
mov
push
xor
sub
mov
lahf
repz
sbb
sub
push
add
stc
and
fmul
ss
and
push
test
and
out
mov
xor
not
inc
jae
aas
xorb
scas
mov
test
mov
pushf
hlt
iret
push
ljmp
pop
xchg
push
insb
add
mov
xchg
fstpl
cli
out
pop
lahf
push
rorl
icebp
xchg
in
xor
push
add
ss
mov
daa
hlt
xchg
mov
flds
clc
xchg
pusha
cmp
xor
cmp
dec
insl
mov
pop
xchg
mov
jo
hlt
cmp
dec
mov
push
and
repnz
xlat
and
jnp,pn
les
sub
mulb
insb
or
cs
mov
iret
lcall
sbb
adc
ljmp
lds
pop
mov
xor
push
daa
repnz
sub
jge
mov
movzbl
adc
in
das
dec
arpl
jge
push
dec
lret
lahf
out
and
ja
movb
lcall
in
dec
add
addr16
loop
stos
test
xor
pusha
adc
push
dec
inc
jno
dec
mov
xchg
jo
dec
dec
and
repnz
ret
xchg
es
jl
cwtl
mov
inc
shlb
inc
push
out
and
add
cmp
out
cmp
inc
xchg
filds
mov
cmp
stos
aam
pop
mov
outsl
pop
sbb
sahf
adc
nop
subb
dec
and
jg
js
call
stos
jle
sub
jne
jno
and
aad
push
aam
mov
out
cwtl
cmp
or
xor
xchg
popf
and
jp
bound
cmp
add
enterw
test
lods
inc
xchg
in
fldenv
rorb
jp
or
and
add
push
daa
fwait
push
scas
enter
ret
je
ret
push
stos
adc
cltd
or
or
int3
adc
cmc
sub
mov
aad
aaa
push
pop
sbb
cmp
sbb
xchg
mov
test
jb
hlt
pop
dec
scas
pop
adc
call
pop
and
les
mov
jecxz
pop
nop
push
aam
std
in
pusha
xor
lret
add
cmpl
add
dec
imul
lcall
lea
and
ja
in
add
jl
push
out
sub
into
mov
sbb
data16
mov
xchg
das
cmp
jb
sarl
ljmp
imulb
adc
shll
shl
cli
mov
xchg
repnz
fs
sbb
rclb
cmc
mov
jp
hlt
push
dec
xchg
xor
aam
gs
push
test
jl
jnp
or
mov
aaa
pop
ljmp
or
xchg
add
xor
xchg
mov
cli
add
loop
clc
mov
scas
popa
in
loop
cld
inc
xlat
stc
cmp
mov
sub
cmp
or
sub
hlt
idiv
pop
fwait
jno
push
xchg
andb
sub
icebp
cmpsl
enter
sub
pop
mov
inc
loop
or
push
mov
int
fsubl
cmpsl
dec
dec
or
mov
add
jle
rorb
out
sbb
push
mov
jo
test
jnp
cmp
or
outsl
cltd
mov
rol
aaa
cmp
inc
jno
push
pop
cld
push
rcrb
inc
xchg
push
pop
test
or
fwait
cmp
faddl
xchg
sub
push
scas
jne
in
pop
inc
hlt
jns
mov
lea
adc
test
xlat
dec
sub
or
jne
dec
rcrb
cmpsl
scas
sbb
jmp
imul
or
mov
std
gs
pop
and
or
rorl
xor
insb
int3
stc
fidivl
fmuls
lods
xor
jmp
adc
add
inc
inc
mov
and
jbe
push
icebp
cli
sbb
cmp
pop
xor
fwait
cwtl
xchg
push
mov
sar
scas
dec
xchg
mov
mov
loope
mov
lea
xor
sahf
jg
out
xor
ret
movsb
inc
lret
jg
or
pop
dec
or
clc
jae
mov
mov
push
cmpsl
and
test
sub
sub
fstl
push
sbb
shrl
add
sbb
in
sub
jg
and
mov
push
push
sub
mov
mov
pop
lds
imul
int
adc
lahf
xchg
lds
orl
nop
lret
lahf
fcomi
sbb
fwait
jge
xor
cmp
hlt
or
jmp
test
cmp
add
shrl
jp
add
pop
mov
jne
les
fmulp
dec
xor
loop
xchg
out
enter
push
daa
push
adc
int3
mov
xchg
adc
test
push
outsl
shrb
in
movsb
lret
lods
movsb
dec
xor
cli
int3
outsl
adcl
lds
cmp
shrb
pop
and
adc
fisubs
xchg
sbb
xchg
and
pop
push
xor
ficoml
jne
xor
test
sbb
cmp
inc
test
adc
and
cmp
sub
or
push
mov
xchg
add
and
mov
lcall
mov
stc
fs
icebp
jnp
mov
mov
xlat
and
mulb
movsb
or
rcrl
cs
mov
push
lds
fiadds
adcl
or
test
xor
shlb
adc
xlat
scas
adcl
nop
std
repnz
mov
movsb
rolb
enter
int
and
add
rolb
es
pop
imul
inc
aam
and
sub
cli
iret
jmp
sti
sub
dec
pusha
faddl
jns
adc
mov
lods
out
ret
int
repz
jnp
lods
test
ss
add
xor
sub
pop
mov
mov
xor
cmpsl
pop
fcmovnb
lods
and
fimuls
inc
mov
aaa
mov
mov
dec
nop
cmp
jmp
jg
pushf
push
and
fldcw
xchg
push
cwtl
jb
fidivs
sahf
lods
mov
jge
mov
mov
popf
pop
fnstcw
add
ds
dec
scas
repnz
jo
mov
mov
popa
mov
ret
xlat
enter
and
ret
loop
sbb
mov
xchg
add
scas
lock
outsl
add
fcmovb
or
aaa
call
loop
loop
std
loope
daa
or
lret
or
lods
lock
pop
subb
stos
fistl
lea
jp
vcvtss2sd
jnp
dec
mov
pop
bound
fcomps
adc
push
pop
adc
pop
and
push
or
cmpsl
ljmp
xorl
test
pop
bound
inc
cltd
dec
movsl
imul
jecxz
sbb
sub
xlat
cld
xchg
mov
dec
test
push
sbb
cmpsb
dec
jno
stos
je
xor
aaa
pop
lock
add
adc
adc
adc
sbb
rcrl
inc
fsubp
xchg
cli
lcall
sbb
cwtl
enter
push
and
add
dec
jbe
das
mov
out
lods
push
shr
mov
test
movsb
xchg
and
mov
jl
mov
add
popf
add
and
push
clc
jmp
hlt
sub
bound
push
xchg
push
or
loop
mov
add
and
adc
add
sbb
cmpsl
out
pusha
daa
stos
sahf
lret
xchg
ret
std
cmc
imul
mov
xor
inc
lcall
add
xlat
mov
ja
test
mov
inc
imul
adc
lds
adc
push
fadds
pop
lock
roll
pop
jnp
or
popf
push
push
pop
inc
or
push
dec
inc
and
cmpb
imul
aas
push
filds
jo
repz
loopne
xchg
pop
cmp
movsb
xor
fwait
in
int3
lock
xchg
inc
and
or
fs
mov
or
cmp
xchg
iret
mov
nop
movsb
imul
enter
xor
jmp
or
insb
shrl
ror
lea
jp
sbb
sarb
jl
pop
cmp
movsl
jo
sti
mov
movsl
sarb
xchg
fsts
inc
pop
call
into
pop
sbb
add
pop
sbb
fisttpl
add
fstl
shll
or
add
inc
popf
lods
shl
mov
pop
sbbb
jg
je
push
jne
jnp
xor
adc
in
jecxz
mov
mov
pushf
xchg
in
lock
insb
icebp
imul
aad
jne
arpl
push
cli
or
and
in
xchg
pop
decl
lret
fadds
xchg
fadds
stos
jl
cmp
sub
dec
xlat
mov
cmpsb
mov
lret
stos
pop
nop
push
mov
xchg
pushf
out
add
xorb
lods
pop
pusha
call
stos
ljmp
fs
mov
mov
fldl
outsl
cld
out
sti
incb
lea
or
stc
popa
jl
mov
out
adc
das
mov
cmp
and
les
imul
rcll
cmp
lahf
xor
mov
pop
pop
out
push
test
push
jmp
xor
xor
shll
arpl
movsb
dec
ret
stos
lret
cmpps
scas
int
scas
cmp
insl
sub
pop
sahf
push
sub
rcll
mov
adc
ror
adc
inc
adc
sarb
sbb
inc
add
pusha
loopne
sub
movsl
mov
push
dec
jp
icebp
fsubrl
fldenv
add
or
shrb
adc
mov
test
mov
outsb
sti
fcomp
imull
loopne
pusha
shl
jge
sti
xchg
xchg
inc
cmp
xchg
insb
cmp
repz
sub
xchg
enter
mov
movsb
iret
dec
mov
es
add
cmp
xor
mov
and
mov
test
out
lods
sbb
outsl
adc
stos
push
push
fdivr
jno
or
call
and
cmpb
rclb
push
into
subb
mov
je
loop
inc
movsl
es
jecxz
test
dec
shrb
mov
loope
jno
mov
adc
roll
and
jne
mov
add
cmp
cmp
pop
jge
push
mov
push
sub
push
int
out
mov
inc
add
mov
inc
inc
sbb
ss
pop
jmp
or
lods
mov
repz
cmp
orb
test
xlat
rolb
icebp
mov
push
insl
out
ljmp
adc
in
pop
mov
mov
adc
xchg
push
add
jp
daa
xor
test
pop
inc
dec
cmpl
push
pop
xor
repnz
loopne
mov
add
jae
fwait
add
cmp
or
popa
cltd
mov
mov
movsb
adc
mov
std
xlat
call
cwtl
test
sub
lcall
jp
cli
xchg
loope
cmp
push
sub
cmpb
or
scas
push
xor
aad
add
insb
out
iret
mov
subl
mov
pop
jmp
cmp
ret
inc
in
push
push
out
adc
jo
mov
xor
mov
pop
fisttpl
xorb
ds
xchg
pop
das
shrb
lea
mov
scas
iret
pusha
adc
jl
test
aaa
jge
jecxz
jg
sub
stos
add
pop
fisubl
cmp
xchg
pop
add
mov
cld
pop
jne
jp
sub
dec
pop
test
fcmove
xchg
pop
pop
adc
movsl
jge
push
sbb
inc
fcompl
jno
iret
jnp
jb
decl
sbb
std
inc
stc
jmp
clc
je
mov
into
add
push
movsb
loope
aad
pop
enter
test
lret
xor
insl
mov
mov
stos
cmp
adc
sub
push
cs
rolb
or
mov
jp
mov
inc
pop
sub
ja
jnp
insl
shlb
loop
nop
adcl
sub
pop
add
xchg
and
mov
lahf
out
ret
mov
xor
mov
ret
cltd
ret
sbb
cmp
pop
pop
jmp
or
in
sbb
push
xor
int
mov
sbb
call
sbb
inc
xor
mov
or
inc
rcll
dec
xchg
sub
arpl
fimuls
bound
jmp
je
mov
scas
ret
pop
data16
hlt
jecxz
dec
mulb
jne
cmp
and
mov
pushf
mov
iret
dec
leave
and
movsl
push
mov
subl
xlat
lahf
mov
pop
shlb
jle
jle
sbb
lock
dec
adc
pushf
outsl
insl
int
aam
inc
mov
decl
add
sub
imul
jge
cmp
pop
bound
rcrl
xchg
pop
sub
mov
sub
sahf
aaa
adc
sbb
pop
mov
lods
dec
push
xchg
sub
sub
xchg
rorl
and
cli
test
cmp
div
stc
insl
pop
out
sbb
xchg
int
jne
popf
mov
inc
out
add
rorl
push
cmp
mov
xchg
out
jb
cs
mov
xchg
outsl
pop
jp
repz
sbbl
dec
sbb
mov
and
push
lret
xchg
test
imul
ds
xchg
call
inc
adc
aaa
xlat
inc
mov
lods
pushf
pusha
ret
mov
sarb
dec
dec
bsr
imul
mov
pop
sub
fcomip
lds
das
je
xchg
jl
ret
aas
sbb
jne
movsl
jae
cld
cmp
lods
jg
scas
lret
fisttpl
or
sbb
bound
lods
xchg
cltd
dec
imul
xor
int3
jne
xchg
scas
push
ss
add
iret
sbb
test
and
adc
xor
lds
or
ret
nop
xchg
iret
imul
xchg
push
inc
sbb
mov
aas
push
out
mov
or
push
adc
aad
push
sub
fcomps
xor
push
sub
dec
scas
subb
mov
cltd
pop
jmp
xchg
sahf
out
dec
pop
in
mul
sub
mov
outsl
leave
push
mov
pusha
pop
aaa
sub
jp
lret
xchg
mov
and
repz
jne
movsb
sub
pop
sbb
imul
jns
popa
imul
mov
adc
pop
sub
push
js
daa
lods
jns
adc
pop
inc
test
pop
inc
cmp
dec
dec
push
jb
bound
or
les
push
mov
push
inc
sub
xlat
mov
ds
push
mov
int3
mov
popf
add
mov
add
aad
dec
jbe,pt
int
pop
jmp
rorl
int
inc
insb
pop
jo
cmovns
lahf
xorl
lret
jno
mov
jno
push
push
mov
repnz
jb
dec
jp
stos
inc
xchg
xor
mov
dec
sbb
fldenv
aam
sahf
lret
inc
cltd
dec
les
mov
pop
adc
outsl
push
int
cmp
fwait
sub
mov
add
ds
mov
jecxz
push
push
jne
xchg
mov
push
shl
mov
mov
pop
les
xchg
jmp
xchg
sti
repz
sub
sub
mov
xchg
xchg
adc
shrl
in
inc
dec
xchg
inc
cmp
int3
into
and
mov
clc
jnp
outsl
int
push
inc
movsb
xchg
cmpsb
inc
cltd
mov
add
or
dec
decl
mov
jbe
mov
mov
xor
sbb
lock
jae
cmpsl
dec
mov
pop
xlat
out
jmp
fildll
push
mov
or
mov
daa
les
push
push
adc
or
stc
xchg
jae
mov
cmp
and
or
mov
pop
leave
jl
ljmp
mov
lock
ret
cmp
push
mov
test
add
dec
cli
pop
mov
fisubs
add
imul
push
ja
sbb
xor
inc
pop
aaa
and
push
roll
dec
pop
lret
push
or
fsub
or
push
adc
in
mov
or
js
jb
in
or
js
test
sub
filds
repnz
pop
mov
nop
addr16
lcall
jmp
ds
pop
cmp
pop
add
ffree
push
es
inc
sar
mov
adc
jno
dec
inc
ret
notl
mov
lret
xchg
adc
lret
popf
je
ret
mov
xchg
sub
sub
adc
jl
push
xor
jbe
les
lret
stos
or
call
sahf
lods
mov
push
movsl
add
stos
or
xlat
lods
xor
negl
aaa
push
pop
negl
jne
xchg
mov
push
pop
cmp
mov
push
ret
jp
shll
cltd
ljmp
jno
pop
dec
add
lock
fisubl
lock
inc
cs
and
jge
push
inc
xchg
fistpll
and
pusha
or
push
mov
enter
gs
sub
rclb
mov
insb
push
xor
aaa
iret
cmp
and
sbb
insl
fnstsw
mov
fcompl
notb
int3
dec
inc
arpl
adc
xchg
rcrb
ljmp
loop
stc
mov
jne
jae
pop
fildll
and
or
push
mov
mov
scas
inc
push
lods
jb
fists
cmpb
and
jecxz
out
sbb
sub
fbld
out
cmp
int
cwtl
addr16
jnp
fstp
enter
js
mov
icebp
push
nop
xchg
lahf
fnstenv
push
and
lahf
mov
leave
cli
stos
push
clc
pop
scas
scas
push
add
ss
cmp
mov
cmp
fistl
lahf
or
mov
pop
popf
loopne
call
in
out
xchg
and
lea
inc
pop
in
pop
lahf
jae
pop
fistpl
inc
or
fisttpl
ficomps
int3
dec
aad
xchg
or
iret
fidivl
mov
pop
pushfw
push
jle
dec
mov
mov
mov
movsl
pop
jg
cmp
insb
lds
fs
sub
jae,pn
loop
es
mov
dec
pushf
adc
push
xchg
sub
add
inc
inc
clc
inc
inc
pop
jnp
mov
push
fdivrs
mov
push
pop
fisubrl
cmp
xchg
sbb
or
lret
jo
inc
fadd
out
cmpsb
mov
jge
iret
sbb
mov
xchg
dec
cmp
sub
dec
jnp
cmpsb
movsb
jmp
sbb
add
sub
xlat
mov
pop
adc
sbb
cmp
jbe
dec
loopne
insb
inc
push
outsl
cmp
cmp
dec
mov
or
xchg
cmpsl
in
jg
jle
je
adc
aaa
lods
jmp
inc
or
cmp
imul
imul
das
fdivrs
out
iret
inc
sbb
add
out
out
xchg
sahf
xchg
sbb
je
mov
imul
repnz
test
int3
push
popf
enter
les
xchg
aaa
gs
jmp
sub
add
stos
add
outsl
lods
jns
dec
stos
or
test
xor
xchg
repnz
lret
leave
outsl
popf
pop
in
into
test
je
mov
loope
adc
cmp
add
mov
cmp
stc
jmp
cmc
dec
cli
pusha
bound
jo
test
shrb
rcrl
call
xchg
lock
in
pop
jmp
sbb
sub
nop
and
add
dec
push
xchg
xlat
xorl
xor
iret
in
push
inc
mov
push
icebp
movlps
sbb
ror
mov
mov
adc
mov
sar
inc
lahf
mov
adc
fnstcw
das
mov
sub
mov
in
xor
sbb
mov
lret
dec
adc
inc
pop
loope
es
ss
je
mov
xchg
or
lahf
mov
push
lret
xchg
scas
mov
pushf
sarb
jns
or
mov
aaa
pop
sbb
hlt
lock
rol
lret
cmp
and
sub
mov
test
xchg
fwait
in
cmc
mov
and
imul
inc
sub
movsl
lret
mov
test
xchg
fwait
in
cmc
mov
and
imul
inc
sub
movsl
lret
mov
test
xchg
fwait
in
cmc
mov
and
imul
pcmpeqw
inc
sbb
mov
jmp
fwait
in
cmc
cmp
sub
roll
orl
cmp
sub
das
insl
pop
dec
cmp
sub
mov
popf
iret
int
mov
cmovge
das
insl
pop
sbb
outsl
sub
fdivrp
scas
in
lahf
popf
iret
mov
std
dec
lods
jge
insl
inc
sbb
outsl
sub
xlat
lret
iret
mov
lods
jno
inc
cmp
sbb
pop
fisttpl
movsl
ds
into
fadd
mov
mov
sti
ss
repz
repz
jno
iret
repnz
and
cmp
push
in
and
push
mov
dec
fwait
dec
mov
add
cmp
sbb
scas
sub
aaa
inc
shrl
jl
jns
sbb
sbb
sahf
out
fdivrs
add
and
iret
inc
out
mov
rolb
pop
stos
mov
mov
ret
mov
add
ficomps
mov
xchg
mov
jl
sbb
negb
lods
and
in
push
bound
inc
pop
pop
dec
aas
jge
insl
mov
cmp
adc
in
xchg
popf
lds
jbe
jge
dec
cmp
xor
dec
or
pop
lahf
mov
movsb
ficoml
mov
enter
pop
dec
jge
cmp
js
and
cwtl
frstor
cmpsb
repnz
ret
jae
arpl
pop
or
jno
or
lahf
fisttpll
in
fistps
out
lods
pop
pop
cmovge
jge
insl
pop
sbb
outsl
sub
mov
popf
iret
mov
test
mov
xchg
test
aaa
js
mov
mov
push
leave
cs
dec
sub
cmpsl
imul
icebp
jo
leave
arpl
test
fstps
add
leave
mov
insb
icebp
call
or
pop
stc
andl
dec
enter
cmp
mov
inc
adcb
add
je
das
xchg
aaa
or
ret
and
adc
ljmp
adc
inc
out
insb
pushf
das
loope
scas
leave
flds
cwtl
mov
loop
mov
mov
cmp
jg
sub
je
nop
in
icebp
cmp
or
movsb
inc
sbb
rorb
sub
test
xchg
lea
xor
mov
repnz
pop
aas
into
push
loope
loope
movsb
outsb
push
lea
setge
jb
sub
push
icebp
mov
jmp
add
and
pushf
enter
push
mov
and
and
rcrb
xlat
scas
dec
ja
andl
mov
aas
lods
in
fiaddl
outsl
aaa
inc
mov
sub
jl
movsb
fldt
jp
pop
push
data16
jo
cmp
mov
pop
fwait
and
rcrb
pop
xlat
cmp
pop
xchg
lds
in
inc
pop
add
push
mov
rcrl
leave
jle
and
fimuls
addl
dec
ljmp
and
sarb
aad
aam
in
fildl
ds
in
mov
addb
push
sbb
fnstsw
xor
lahf
out
rcrl
xchg
sub
lcall
shrb
mov
dec
push
dec
aaa
xor
arpl
fwait
mov
mov
int
or
lds
aas
sub
lret
ja
ret
subl
xchg
mov
ret
hlt
push
jg
dec
mov
xor
mov
mov
loope
jbe
ror
sbb
cmp
stc
push
pop
jno
nop
xchg
cmp
mov
and
mov
pop
shlb
fdivs
dec
sub
inc
testl
xchg
pop
cmp
arpl
enter
scas
xchg
mov
packssdw
jl
sar
rclb
jecxz
out
mov
lahf
sahf
stos
repnz
sbb
cmp
nop
jl
aas
add
cmpl
add
jb
js
das
sti
pop
sbbb
nop
int3
xor
repz
loop
sbb
ljmp
mov
out
jnp
fs
cmp
roll
add
lods
xchg
and
mov
or
mov
mov
jl
jbe
cld
xchg
cmp
xorps
insb
pop
inc
shrl
push
mov
out
imul
lock
lods
int3
mov
scas
sbb
test
insl
mov
call
lcall
mov
in
movsb
je
push
lea
loope
inc
fildll
loop
mov
push
push
out
xchg
mov
aaa
push
push
rcrb
sbb
sub
adc
push
cmpsl
push
mov
in
aam
movsl
lret
push
iret
jno
sar
ljmp
jne
out
mov
dec
jg
fdivl
cs
or
and
jle
or
pusha
outsl
adc
mov
adc
mov
jmp
andb
xchg
jmp
push
jbe
cltd
stc
mov
xchg
shrl
shll
inc
movl
fiaddl
les
orl
push
mov
mov
mov
xor
sub
lahf
adc
push
inc
loop
enter
jae
stos
or
arpl
iret
movsb
enter
fcomi
or
or
gs
jae
out
dec
mov
popf
mov
sub
push
jmp
mov
cmpsl
push
jge
daa
loop
int3
ds
mov
push
xlat
sub
scas
xchg
jns
fdivr
pop
adc
inc
dec
jo
addr16
jbe
sbb
in
jae
inc
pop
int3
outsl
lahf
cmpsl
or
push
jo
push
cwtl
adc
arpl
mov
pop
movsl
xor
sub
and
add
xor
jo
arpl
add
jb
add
movsb
shl
xlat
daa
xor
jbe
or
ss
pop
add
cmpsl
dec
mov
lcall
gs
fwait
in
insb
ja
or
int
in
push
inc
mov
mov
scas
pop
add
push
pop
cmp
fsubrs
xor
xchg
fdivrs
enter
leave
in
lods
pushf
xchg
sub
pop
or
stos
sub
cmc
rol
inc
cmp
mov
and
mov
pop
rclb
lcall
inc
orl
aam
imul
popf
lods
sarb
push
jg
push
sub
push
outsl
mov
nop
test
mov
fs
and
clc
addr16
xchg
push
push
pusha
or
push
test
jnp
xor
imul
sub
mov
scas
shll
lock
loope
lahf
sahf
adc
jmp
jecxz
push
inc
arpl
in
mov
xor
fldl
jmp
lods
mov
cmc
jbe
loopne
push
addb
pop
mov
jecxz
or
sbb
and
scas
jo
or
mov
adc
push
test
push
push
lods
mov
ds
je
mov
dec
sbb
pop
mov
xlat
test
lds
negl
add
sub
and
push
fwait
enter
dec
sbb
jg
mov
insb
or
and
aaa
pop
into
sub
jmp
std
cmp
xor
insb
xchg
mov
mov
cli
in
lret
push
push
sub
pop
mov
lret
sub
test
rolb
in
negl
lcall
aaa
sbb
mov
pop
add
ss
mov
push
ret
rcrl
inc
lock
xor
adc
fsubl
movsb
jp
movsl
mov
sub
movsb
imul
xor
push
push
pop
inc
inc
mov
inc
enter
push
test
pop
pop
and
jns
fidivl
pop
aad
pop
push
mov
or
cmp
cwtl
sub
das
addr16
sbb
dec
sub
cltd
mov
addb
xor
lcall
mov
fstpt
add
xor
inc
out
out
push
inc
popl
hlt
push
cmp
dec
in
jbe
push
sbb
or
mov
cmp
jbe
inc
popa
inc
enter
pop
xchg
and
lret
mov
ja
xor
imul
inc
insl
mov
push
popf
aad
xor
mov
inc
add
test
fcomp
xchg
rcl
aas
andb
add
ljmp
imulb
in
add
push
cmp
sbb
subl
pop
pushf
rolb
aad
mov
icebp
mov
cmp
int
xchg
add
imul
add
add
aam
sub
jno
out
jge
clc
icebp
mov
dec
ret
xchg
cmp
sbb
pop
pop
andl
loopne
mov
mov
push
or
jae
shl
adcb
sbb
push
jp
and
aaa
mov
adc
sub
xchg
aaa
hlt
add
mov
das
sbb
inc
aad
lcall
enter
les
mov
push
cli
inc
add
dec
xlat
ret
fmull
jne
std
adc
int3
ja
sub
stos
add
xchg
roll
mov
icebp
loope
std
movsb
test
je
jb
orb
dec
call
leave
bnd
sbb
jle
sub
xor
jnp
xchg
popa
mov
iret
jnp
rcrl
sbb
stos
lods
or
mov
ds
addr16
dec
push
pushf
mov
sahf
ljmp
bound
jns
lea
jbe
ja
sub
and
inc
xchg
fwait
incb
push
jb,pn
imul
inc
or
dec
lds
ret
add
push
jae
aam
add
imul
outsb
scas
push
in
ret
mov
and
dec
xchg
popf
xchg
push
lods
ss
sbb
movsl
sub
shl
lods
mov
or
cmpsl
mov
or
dec
add
imul
enter
stos
aad
cld
add
xchg
rcrl
fwait
rol
in
shll
dec
scas
dec
mov
mov
mov
es
add
cmp
int3
ja
or
sbb
jp
push
mov
push
insl
orb
cwtl
leave
and
dec
pop
fstl
mov
cmc
xor
insb
mov
mov
jbe
push
xlat
push
or
xor
fs
xor
mov
int
stos
shl
inc
push
cli
aaa
dec
add
sbb
lret
rorl
xor
xchg
loop
fcmovnu
jbe
test
adc
mov
inc
jg
xor
pop
aad
cmpsb
lret
and
jnp
cld
push
add
orb
bound
cmpsl
adc
insb
sti
push
aaa
jmp
dec
nop
aas
xor
xor
jge
pop
movsb
sbb
xor
decl
and
cmpl
push
loopne,pt
xor
lcall
xor
fisubl
or
mov
in
popa
stos
adc
add
test
mov
mov
mov
mov
pop
pop
outsl
jmp
jmp
dec
cmp
and
push
sti
and
iret
loop
pop
popa
loope
sub
or
push
aad
test
repz
imul
rcrb
xor
mov
push
into
jns
pinsrw
mov
gs
ret
aaa
es
popf
xchg
push
or
ljmp
mov
sub
dec
sbb
aaa
jbe
bound
gs
movsl
jae
sbb
fbstp
aaa
and
rcll
movl
sbb
int
lcall
mov
jp
icebp
push
dec
lea
fisubl
ds
jmp
iret
jmp
push
orl
sub
jl
jnp
push
pop
movsb
fimull
and
sub
jns
fimull
sub
cmpsb
xor
addr16
xchg
mov
mov
pop
push
scas
dec
loop
or
enter
addr16
push
push
mov
scas
les
ljmp
sub
idivb
pop
iret
mov
sbb
xlat
aad
xchg
xchg
lods
xchg
outsl
lea
jnp
addr16
xchg
clc
push
push
in
ljmp
adc
pop
sub
mov
dec
movsl
sbb
rcrb
pushf
dec
arpl
mov
cmp
mov
mov
or
sub
sub
pop
daa
mov
das
fistps
jb
mov
lds
dec
cwtl
sub
cmpb
arpl
or
sbb
adc
je
fs
hlt
adc
jg
pusha
incl
in
inc
or
jno
shll
mov
rol
sbb
fwait
cmp
imul
adc
push
in
mov
clc
fsub
adc
aad
lret
js
cmp
leave
lods
push
jp
jne
xchg
mov
clc
imulb
push
jo
nop
insl
jo
movsl
or
adc
mov
jns
enter
mov
inc
pusha
mov
dec
xor
pushf
push
and
int
sbb
inc
sbb
inc
pop
mov
xchg
mov
scas
inc
ror
inc
sub
or
lahf
sub
push
pushf
jae
xchg
add
dec
jle
inc
push
mov
cmp
into
mov
aam
sub
lods
xor
bound
pop
ljmp
push
sbbb
xor
andl
cmp
xor
dec
pusha
and
aas
adcb
jbe
into
jno
mov
dec
test
mov
in
xchg
xchg
iret
stos
adc
fimuls
fxam
adc
test
test
or
cld
jno
out
sub
sub
xchg
gs
or
pop
and
pop
mov
int
xchg
aad
stos
lds
push
xor
add
roll
jns
adc
mov
std
pop
xchg
add
arpl
xchg
cmp
jecxz
aas
les
and
jl
xchg
pop
xlat
jb
shr
mov
jp
jmp
aas
ret
and
pop
jmp
andb
movsb
inc
xor
adc
sub
cmp
daa
jne
sahf
jnp
mov
test
or
fwait
ljmp
or
inc
enter
mov
push
jecxz
push
js
in
lock
inc
push
jle
cmc
cmpsl
cmp
in
test
shlb
push
outsl
sub
mov
mov
inc
ljmp
jo
cli
mov
je
call
das
mov
out
push
dec
jnp
inc
gs
jecxz
aas
push
sahf
xor
adc
dec
or
js
outsl
xor
rorl
pusha
and
int
xchg
mov
push
jb
adcb
jg
mov
add
pop
aas
das
mov
mov
out
les
imul
xor
mov
inc
shrb
in
dec
gs
outsl
movsb
movsl
pop
mov
dec
inc
add
mov
sbb
jge
imul
mov
iret
cmp
out
das
add
sarb
jp
jmp
xor
test
push
mov
les
push
mov
sbb
sub
dec
xchg
mov
xchg
inc
fsub
push
xchg
ljmp
adc
sub
mov
mov
xchg
pop
cmp
cmp
shll
mov
or
cmp
les
ja
ret
hlt
int
repz
pop
scas
loop
dec
jecxz
lea
jo
sub
jmp
or
pop
or
mov
pushf
xor
lods
imulb
mov
sbb
pop
jle
enter
push
xchg
adc
repz
lret
lods
call
xor
fmul
mov
mov
into
je
sbb
mov
dec
mov
xchg
mov
add
cli
mov
out
aad
in
sub
sub
cmp
cmp
dec
paddsb
mov
imul
jno
outsb
notb
ljmp
shll
dec
lods
pop
popf
iret
cmp
or
pop
xlat
dec
dec
arpl
inc
mov
imul
arpl
aad
cmp
add
dec
ljmp
sbb
dec
sub
nop
pop
or
jecxz
push
fiaddl
aam
insb
jb
into
pop
fcomps
icebp
movsb
shll
int3
or
ds
inc
sub
cmp
loop
xchg
add
movsl
in
fmul
pop
push
xor
lock
push
push
jmp
add
jbe
mov
rorl
jle
sti
or
xor
in
pop
stc
jg
and
sti
cwtl
mov
cmp
mov
mov
sub
sbb
mov
ror
lods
push
shr
pop
sub
dec
adc
adc
lock
fldl
fcoml
jo
data16
movl
mov
or
cmpps
jl
push
sbb
dec
aam
sbb
imul
sahf
sbbl
cmpsl
cwtl
lret
jecxz
arpl
add
loope
cmp
scas
pop
movl
jbe
or
or
into
andb
and
add
mov
jmp
inc
mov
and
das
cltd
push
and
dec
mov
pop
pop
repz
mov
imul
mov
pop
divb
xor
mov
stc
push
mov
push
jecxz
cmp
xchg
js
daa
cmp
jno
stos
aas
mov
fnstsw
sbb
popf
mov
inc
add
ret
out
xor
adc
sbb
inc
das
sahf
js
push
in
mov
fwait
loope
out
push
lods
or
mov
mov
hlt
aam
jbe
pushf
dec
xor
sbbl
push
jecxz
cmpsl
mov
push
in
imul
loopne
push
inc
fildl
mov
call
in
stos
pop
mov
and
push
add
cmp
popf
lea
out
ret
mov
mov
pop
mov
in
push
mov
fstp
xchg
and
dec
mov
xchg
aad
adc
scas
dec
mov
jmp
pop
pop
int
xor
fmull
adc
clc
dec
adc
test
xor
lock
out
mov
repz
lods
stos
jle
scas
jb
jae
push
mov
or
and
lods
pop
cli
jbe
xor
cmp
push
or
jne
push
dec
add
std
mov
mov
and
cld
push
jp
dec
int3
sub
daa
test
pushf
cmpsb
sbb
jne
xchg
lahf
sbb
stos
sahf
stos
mov
or
outsl
cmp
pop
xor
nop
fidivrs
and
xor
bound
mov
shll
sahf
and
out
ljmp
mov
xor
lds
mov
scas
cmc
adc
aad
xchg
clc
aad
repz
cmp
or
lcall
aam
inc
mov
pop
pop
jbe
popf
lret
addr16
cmp
aam
in
arpl
orl
sub
out
pop
inc
popa
insl
imul
dec
lret
xchg
test
ret
cwtl
xchg
and
gs
icebp
ret
xchg
insl
mov
fsts
repz
or
push
dec
or
mov
sbb
leave
orl
sub
cmp
dec
mov
inc
fdivrs
int
mov
push
sub
lea
xchg
mov
dec
or
lahf
jp
and
or
stos
add
popa
mov
pop
jns
and
int
sub
je
sbb
pop
dec
inc
pushf
adc
mov
xor
imul
mov
inc
pop
das
inc
mov
mov
adc
fdivs
jle
inc
push
push
mov
cmp
sahf
add
xor
fistpll
lea
push
mov
push
jbe
mov
add
into
mov
mov
lock
push
call
shrl
jmp
mov
daa
dec
stos
hlt
xor
fistps
outsl
addr16
arpl
pop
out
repnz
ja
cli
cmc
and
push
mov
clc
and
inc
pop
mov
fildl
mov
or
jge
das
pop
pop
ljmp
dec
pop
in
jp
imulb
add
je
out
sbb
push
add
aad
nop
push
rclb
jb
mov
push
inc
mov
nop
fcmovbe
rorb
sti
inc
dec
mov
mov
lcall
or
out
orl
fs
jmp
out
popa
xchg
ret
sti
mov
mov
sahf
das
sub
stc
orl
stos
jle
xor
xor
mov
push
xchg
xor
out
not
movsb
inc
stc
cltd
mov
int
and
leave
mov
ret
imul
and
cld
dec
push
into
negl
pop
sbb
clc
enter
inc
test
pop
and
bound
push
pusha
lret
sbb
loop
xor
mov
xchg
xchg
sbb
fwait
shll
mov
sub
or
adc
add
dec
pop
jle
xchg
shl
and
inc
in
sub
sbb
sarl
inc
mov
aam
testl
std
xchg
into
mov
mov
adc
test
int
mov
xchg
mov
push
push
xor
mov
jne
lret
mov
sbb
out
sub
push
insl
insb
xor
in
and
jno
jge
movsl
fwait
loope
sahf
xor
pushf
ret
cmp
test
mov
mov
ja
xchg
jnp
mov
loopne
xchg
mov
dec
xchg
int
or
filds
fdivl
repz
out
test
mov
mov
popa
out
sbb
fiadds
daa
aam
jne
cs
into
jle
sbb
cmp
and
lcall
ja
xchg
mov
cmp
lret
aam
pop
inc
push
jle
dec
add
cs
jns
xlat
push
xchg
je
dec
stos
xchg
sbb
push
sbb
pop
sarb
in
xlat
xchg
jnp
xor
int3
sbb
xchg
lods
xchg
xchg
pop
inc
test
lds
test
jns
mov
jp
sub
xchg
call
paddusw
add
xchg
jmp
into
insb
pop
xorb
adc
mov
sti
cmpsl
push
mov
fs
cmp
fdivr
xchg
aam
imul
mov
sbb
dec
ljmp
push
pop
mov
push
fsts
xchg
or
in
gs
int
orb
popa
fsubs
or
pushf
jno
mov
and
sahf
mov
leave
or
gs
inc
or
js
das
insl
pop
sbb
outsl
sub
mov
popf
iret
mov
cmovge
jge
insl
pop
sbb
outsl
sub
mov
popf
iret
mov
aas
dec
pop
jge
insb
iret
sbb
scas
sub
dec
std
scas
in
fistps
lods
or
dec
gs
imul
out
rcrb
std
scas
lcall
adc
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
cmp
insb
daa
sbb
or
pop
xor
test
cmpsl
cmpsl
lods
mov
stc
xlat
add
fdiv
int3
pop
cmp
sub
sbb
or
jl
insb
addr16
ja
xchg
mov
rcl
in
out
test
daa
xchg
jp
dec
push
and
push
ja
xchg
inc
scas
movsb
mov
jbe
daa
dec
pop
imul
cld
lea
mov
addr16
and
loopne
and
out
fsubrs
repz
imul
cmp
push
pop
arpl
nop
jmp
cmpsb
cmp
inc
jle
adc
sub
cmp
xor
subps
fs
or
cmp
sub
sbb
or
push
ja
ja
sbb
dec
lea
and
ljmp
mov
popf
cld
mov
lahf
lahf
sti
sub
xchg
xchg
push
stc
sbb
out
rcrl
xor
lahf
ret
sub
dec
shr
cld
push
dec
fucom
and
cmpsb
les
aaa
or
jl
insb
addr16
ja
xchg
mov
rcl
out
idiv
bound
inc
popa
jo
pusha
and
cmp
or
repz
push
cmp
out
inc
mov
xchg
inc
outsl
jbe
and
sbb
and
lock
into
mov
xor
popf
mov
popa
jo
pusha
add
push
insb
addr16
ja
xchg
mov
cld
xlat
in
out
test
daa
sbb
or
jl
insb
addr16
ja
xchg
mov
cld
xlat
in
out
test
mov
sbb
test
xor
test
xor
mov
mov
or
pop
fs
rcll
inc
push
sbb
punpcklbw
push
bound
dec
enterw
jmp
cmp
mov
enter
mov
and
popa
cli
lods
jp
push
and
and
mulb
test
in
add
sti
std
gs
pop
fucomip
daa
cmp
and
adc
add
and
in
mov
push
aas
enter
out
xor
jmp
stos
add
out
push
jnp
mov
ficomps
ja
xor
out
sbb
ret
stos
test
pop
xchg
xchg
lods
sarb
outsb
iret
test
das
lret
test
in
ljmp
loopne
xlat
lahf
cltd
sub
xchg
shr
es
and
je
push
arpl
int3
sbb
je
pop
xchg
fldt
insl
idiv
or
loopne
std
scas
imul
mov
add
dec
mov
dec
andb
or
fmul
jbe
aaa
xor
cmp
cltd
cmp
lea
cltd
sub
outsb
mov
mov
mov
xor
cltd
mov
adc
scas
aas
inc
or
pushf
mov
cmp
push
lea
add
arpl
sub
inc
lods
or
adc
pop
scas
pop
push
jle
mov
cmp
pop
xor
cmp
rorb
cli
ds
mov
loope
jg
push
jp
pop
jnp
pusha
add
ds
lds
mov
cmp
dec
je
outsb
ds
xchg
aas
and
les
add
stos
daa
mov
mov
xchg
jno
outsb
push
sti
leave
mov
les
push
stc
sarb
insb
push
daa
scas
pusha
repz
das
mov
out
xchg
ret
fsts
enter
imul
xchg
cmc
and
aam
add
jl
jno
mov
sub
cmp
test
jne
fcoms
rorl
imul
mov
into
and
mov
lock
sub
bound
push
lds
filds
mov
jmp
mov
adc
sbb
push
fstpl
mov
jge
pop
mov
enter
sub
gs
or
inc
mov
subl
jle
popf
mov
pop
mov
call
jmp
fimuls
out
lods
mov
pop
push
inc
mov
inc
mov
mov
shl
inc
pusha
jge
pop
dec
mov
push
in
pop
xor
rcr
xor
push
xchg
cli
sub
scas
daa
pusha
push
sbb
insl
dec
xor
es
dec
enter
dec
fbld
mov
repz
mov
je
ljmp
outsb
mov
and
adc
xchg
fisttpl
add
cwtl
js
ss
sbb
lret
xlat
push
xchg
das
mov
lret
nop
sahf
fldenv
imul
pop
sbb
sahf
mov
jne
fwait
add
cld
into
lret
xchg
rol
notl
jl
andl
shll
int3
jns
jg
jmp
dec
or
int3
insb
or
or
mov
sub
inc
std
mov
call
jae
inc
sub
cwtl
xchg
test
mov
lahf
lods
push
gs
mov
lock
add
test
dec
scas
mov
fnstenv
test
adc
rolb
xor
inc
andb
mov
add
adc
stc
mov
and
mov
insl
fwait
test
jne
and
mov
jle
mov
or
dec
ret
and
stc
imul
add
insl
sbb
sbb
xchg
xchg
jns
jnp
insb
pushf
mov
add
repnz
leave
add
add
mov
push
xchg
loop
fisttpll
or
sahf
jne
and
rorb
sahf
aad
rorb
dec
test
push
adc
out
mov
lods
push
mov
pop
add
mov
out
stc
xor
inc
pop
scas
pop
xor
xor
fucom
ljmp
ds
dec
lret
xchg
outsb
test
and
jmp
xchg
fs
pusha
push
sub
fstpl
mov
or
pop
xchg
mov
inc
js
adc
xchg
cmpsl
xchg
int
mov
call
movsl
int
sbb
mov
add
lods
push
dec
ficoml
xchg
int3
js
stos
mov
outsb
mov
sub
lcall
dec
daa
cld
xor
lret
mov
push
xor
outsl
inc
push
adc
and
mov
or
cmc
mov
decb
es
mov
cli
js
adcb
fcmovnbe
sti
sahf
jecxz
mov
fwait
out
mov
and
and
jo
xchg
stos
imul
lahf
push
push
add
and
nop
rcl
mov
pop
push
sbb
xor
add
jge
pop
mov
leave
mov
sbb
push
test
frstor
cmp
cmp
sub
aad
fisubrs
clc
ja
lods
and
mov
jecxz
cmp
imul
pushw
mov
daa
jp
inc
sarl
prefetch
or
mov
xchg
in
push
mov
aad
lods
test
jmp
sub
sbb
xchg
jp
mov
xchg
cmp
dec
scas
fucomi
sbb
xlat
dec
or
int3
das
loope
push
adc
xorl
sub
je
cmp
cmp
sbbl
mov
jecxz
mov
inc
cmp
ljmp
clc
call
rcrb
mov
dec
test
lods
jb
and
add
stos
shrl
sub
in
popa
cmp
bound
mov
jnp
xchg
scas
popf
in
bound
cmp
in
pop
dec
lahf
jbe
cmp
fadds
outsb
adc
xchg
test
adc
loop
imulb
loopne
in
cltd
push
cli
insb
jbe
ss
mov
sbb
mov
sub
inc
or
cmp
xchg
daa
stos
adc
xchg
inc
insb
popf
xchg
dec
adc
rorb
dec
outsl
das
mov
or
sub
push
mov
jge
or
xchg
xchg
testb
cmp
stos
jle
mov
sbb
icebp
sbb
sbb
test
mov
sbb
orb
ret
outsb
cmp
leave
sub
mov
int
dec
stc
pop
loop
insb
mov
hlt
push
or
in
pop
xor
imul
inc
or
outsl
shr
call
sbb
cmp
pop
stos
ficoml
and
lahf
aaa
add
in
push
cli
xchg
jle
ds
jl
pusha
andl
mov
jnp
jnp
pop
frstor
out
fwait
xchg
sarb
sub
ja
xor
addb
clc
jmp
push
pop
sbb
fdivl
and
jg
push
enter
inc
jecxz
jge
call
lahf
adc
jmp
ss
mov
hlt
into
jns
mov
movsl
sarl
ljmp
xor
adc
sbb
clc
mov
lea
mov
lock
adcl
shll
outsl
lea
aam
stc
enter
cmpsb
mov
imul
pop
xchg
in
xchg
add
push
xorl
lret
outsl
outsb
rorb
dec
sti
jl
jb
lods
xor
dec
es
aaa
jb
fisubl
sarb
pop
mov
mov
inc
sub
test
jg
mov
push
insb
iret
incb
jb
push
dec
mov
pop
add
call
and
into
pop
push
shlb
loopne
or
inc
pop
lds
bound
xchg
and
jo
mov
xor
push
cmp
aad
push
aas
das
pop
cld
push
and
test
jecxz
fwait
lret
or
loope
xchg
js
outsl
shrl
sub
mov
in
cmp
add
movsl
sti
dec
mov
aas
cmp
xchg
xchg
mov
icebp
test
inc
lods
ds
add
add
insb
iret
orb
pop
fcompl
adc
out
in
jge
sbb
inc
xor
mov
ss
cmp
pop
ds
jno
stos
mov
and
xchg
icebp
cmp
outsb
jnp
in
mov
cltd
scas
mov
fstp
xchg
add
cmp
xor
xor
dec
mulb
stos
mov
imul
inc
add
enter
pusha
mul
or
or
pop
mov
stos
aas
aas
ja
push
in
inc
popf
cmp
lcall
sub
add
pop
insb
jp
jnp
pusha
pushf
push
or
int3
dec
push
call
xchg
fwait
dec
daa
and
cmp
cs
and
aas
mov
test
cltd
mov
xchg
xchg
xchg
cmp
movsb
mov
push
pop
int3
sub
pop
xlat
push
movsl
jl
inc
mov
test
inc
mov
rclb
loope
mov
jno
add
and
mov
jmp
lods
xlat
imul
pop
cmp
jle
jo
jns
xchg
js
jg
pusha
push
dec
stos
push
jge
mov
dec
and
movsb
mov
and
mov
dec
adc
jle
pop
adc
sub
fistps
ja
or
fcoml
outsb
xchg
cltd
icebp
movsl
add
pop
push
or
aad
jo
roll
sub
or
mov
push
stos
dec
adc
xor
fdivs
pop
push
cmpsb
addr16
aad
cmp
sub
icebp
cmpsl
sub
jmp
mov
mov
dec
pop
daa
pop
fs
mov
aaa
sub
clc
or
push
loopne
lods
shl
mov
dec
jne
lods
pop
call
sbb
xor
mov
dec
out
pushf
cmp
je
inc
dec
pop
cli
push
xchg
lock
add
stos
mov
inc
adc
js
iret
or
inc
jge
push
xchg
stos
aas
addb
das
push
int
rclb
bound
std
push
sbb
add
mov
or
stc
test
dec
orb
jae
mov
jle
lods
fisttpl
je
repnz
cmpsl
aaa
pop
orb
shrb
jl
adcl
js
lret
cwtl
je
mov
fwait
xor
negb
sar
push
fsubs
xor
iret
xchg
mov
ljmp
jp
or
fistpll
mov
aad
pop
inc
adc
jle
ljmp
push
xchg
mov
mov
mov
sti
sub
mov
mov
cmp
popa
add
es
subb
jg
ds
fmull
out
daa
hlt
cmc
adc
push
dec
pop
add
fwait
jge
mov
xor
subl
repz
adc
loope
inc
xchg
es
aad
push
pop
push
dec
jp
testl
mov
gs
int3
insl
aaa
mov
dec
outsb
daa
add
sub
fs
dec
repz
lcall
das
mov
sub
in
sahf
sbb
mov
ret
insl
nop
shll
mov
das
loop
mov
jmp
sti
add
sub
test
pushf
pushf
push
mov
add
cmp
std
pop
btc
sbb
push
jge
sub
mov
fcmovbe
push
repz
mov
fldl
jecxz,pn
mov
outsl
mov
je
xor
mov
inc
fimuls
imul
adc
jbe
leave
ljmp
shrl
jl
jp
inc
shr
iret
aad
push
xchg
mov
pop
sub
test
push
jl
sub
popa
dec
inc
lock
xchg
and
jnp
xorb
aaa
notl
adc
mov
lds
pop
sbb
mov
and
mov
gs
fdivrs
or
lea
push
pop
mov
out
cmpsb
sbb
repnz
mov
mov
sbb
stc
pop
push
inc
ja
cli
data16
ret
xchg
addb
mov
ss
insl
enterw
and
repz
fcoms
mov
mov
push
in
repnz
xchg
mov
add
andl
ret
lcall
pop
and
fcmovne
jl
lea
mov
and
cmpsb
in
inc
out
mov
sub
push
lahf
imul
into
push
adc
xor
mov
scas
jb
outsb
inc
sahf
push
in
into
loop
loopne
jae
xor
pop
push
insl
push
mov
shrl
repnz
fistl
jb
dec
imull
sub
cmpsl
mov
fs
sbb
jnp
add
lds
cmp
jp
test
mov
imul
mov
sub
push
test
xor
bound
xchg
mov
hlt
in
sti
add
sbb
push
cs
adc
loop
jle
aaa
mov
andl
jb
jmp
aam
out
movsl
dec
lock
daa
ffreep
loop
jmp
cmc
push
mov
jmp
mov
out
lods
imul
push
ret
fistl
pop
pop
aam
fcompl
scas
mov
cld
xchg
pushw
repnz
popf
push
popa
shrb
ret
mul
xor
xor
pop
out
push
ret
dec
pop
shl
out
fimuls
adc
cmp
xor
sbb
mov
pop
mov
loop
xchg
aad
mov
lcall
lahf
push
sub
cmpb
mov
in
cwtl
repnz
popa
or
adc
loope
inc
push
add
cmp
inc
pop
fcoml
mov
inc
shlb
and
mov
mov
cmp
jnp
in
movsl
in
xlat
dec
inc
jne
out
ret
test
dec
inc
testl
int3
cmp
mov
mov
cmp
lods
jecxz
push
loopne
cs
out
scas
push
xor
or
lret
stos
cmpb
inc
and
or
out
ds
mov
popfw
xchg
loope
cmp
clc
sub
adc
xchg
or
jl
jmp
std
mov
mov
ret
fimuls
xchg
out
mov
addl
out
and
jne
mov
repnz
inc
dec
lods
imul
jns
sbb
mov
fistl
js
adc
repz
cli
xchg
pop
pop
ja
pop
mov
call
test
loopne
mov
jmp
incb
in
daa
imul
icebp
pop
test
or
clc
stc
add
and
mov
clc
mov
shrb
push
shrl
mov
flds
lods
cli
je
pusha
lahf
mov
add
sub
dec
sub
push
push
test
icebp
xchg
dec
xchg
es
sub
push
lahf
dec
adc
cwtl
call
pop
or
in
movsl
lds
das
popa
cmp
jae
loop
mov
stos
jb
mov
cmp
enter
lahf
popf
call
mov
std
add
jns
cmp
mov
aaa
cs
mov
int3
mov
inc
adc
je
inc
add
int3
dec
std
xchg
mov
jg
lcall
sub
je
xor
adc
sbb
or
les
inc
test
flds
add
pop
and
cmp
adc
sahf
dec
mov
pop
mov
sub
pop
jb
pop
jmp
sbb
mov
in
lahf
orb
shlb
call
ds
and
inc
stos
or
sbb
push
and
sbb
iret
cmp
sbb
stos
sti
lock
pop
aad
movsl
dec
loop
mov
push
lahf
mov
mov
std
loope
cmp
sub
cmp
fdivs
cld
out
or
dec
es
xor
in
add
lods
jmp
sub
xchg
cwtl
inc
das
mov
push
cli
or
pop
cs
cmp
jo
cltd
adc
inc
xor
inc
stc
cwtl
jns
xor
dec
sbbb
dec
xchg
mov
push
mov
inc
es
adcl
sti
lret
call
in
into
and
mov
xchg
fbstp
xchg
aam
cmp
fs
jp
dec
icebp
xor
cli
addb
lods
jg
in
sbb
std
lret
xchg
push
dec
pop
cmp
mov
dec
leave
call
jbe
addr16
push
sbb
orl
xchg
rolb
ljmp
ret
cmpsl
repnz
shll
outsl
pop
and
hlt
sbb
push
jb
dec
cmpsb
sub
out
imul
clc
push
insl
inc
mov
rcl
test
pop
inc
sahf
cmpsl
daa
jge
jbe
js
int
or
into
xchg
flds
fincstp
call
sbb
add
xor
mov
mov
notb
push
and
int3
into
or
lret
fsubrp
pop
push
push
and
push
imul
je
test
das
or
push
outsb
aaa
into
aad
xchg
stos
dec
pop
pop
call
fisubl
int3
jp
push
out
xchg
and
xlat
jno
mov
stos
mov
dec
xchg
xchg
jne
lret
sarb
inc
cwtl
gs
scas
dec
loopne
mov
daa
push
inc
push
mov
mov
add
sub
xor
test
subb
call
add
mov
dec
add
lret
cmp
add
adc
cmp
mov
mov
push
xor
cmp
aas
inc
jno
push
push
rolb
test
std
pop
lret
daa
pop
lods
xor
add
and
inc
daa
adc
mov
or
xlat
into
inc
mov
jge
pop
aam
push
imul
fimuls
xchg
or
push
pop
cmpsb
outsb
push
or
shll
push
pop
pop
ljmp
les
cmp
test
mov
push
inc
mov
cmp
add
inc
cwtl
sbb
popl
push
inc
popf
bound
mov
dec
adc
mov
dec
add
lahf
pop
cmp
mov
push
loop
pop
add
push
arpl
and
pop
push
pop
xlat
insb
or
in
or
pop
jns
jae
add
push
mov
std
mov
xor
in
leave
jge
roll
lds
lds
pop
jbe
xor
loope
roll
popa
fwait
push
sbb
or
test
mov
fldenv
icebp
push
or
inc
push
jl
test
ffreep
adc
sahf
mov
loopne
lret
mov
and
negl
or
mov
lret
int
aas
dec
mov
repz
fisubs
inc
sub
add
xor
mov
mov
cmp
iret
dec
out
fwait
jecxz
add
push
push
jno
xchg
imul
xchg
lods
jnp
jle
iret
adc
dec
mov
adc
mov
test
and
mov
jmp
jno
and
shlb
adc
adc
mov
mov
adc
daa
cmpsb
xor
js
dec
jge
clc
inc
adc
dec
fcoms
jg
pushf
pop
aad
stc
jmp
push
jbe
dec
popf
scas
mov
loop
in
jp
aam
pop
mov
mov
or
std
pushf
sub
sub
faddl
lods
mov
xchg
mov
jle
subl
mov
cmp
dec
cli
jae
fwait
xorl
lcall
icebp
mov
sub
lds
push
sub
out
pop
cmc
push
pop
push
fs
mov
iret
loopne
inc
insb
sahf
and
out
mov
xor
ja
dec
pop
sti
add
shrb
or
stos
hlt
sub
add
cmp
push
cltd
stos
es
inc
add
dec
lahf
scas
pop
xor
call
adc
mov
sub
push
mov
jb
fisubs
mov
in
sub
mov
pop
mov
cmp
daa
xchg
lods
sbb
js
push
mov
adc
lret
add
sbbl
adc
add
cmp
cld
jle
mov
out
adc
xor
dec
cmp
rclb
repnz
and
fnstsw
and
icebp
mov
pop
hlt
push
xchg
push
add
int3
push
or
xchg
fistpl
les
ss
cmp
sahf
xor
mov
xchg
cli
gs
ret
jmp
in
pop
mov
enter
test
and
jnp
stos
adc
adcb
in
pop
push
outsb
in
or
or
movsl
fcompl
fdivrp
out
mov
cs
enter
inc
push
fdiv
inc
ret
jl
scas
and
arpl
xchg
sarb
movsl
mov
ficompl
mov
push
sarb
addr16
mov
inc
ds
test
jns
and
mov
lock
mov
push
or
and
xchg
adc
pop
push
hlt
rcrl
add
mov
add
add
gs
sbb
or
jl
insb
addr16
ja
xchg
mov
cld
xlat
in
out
test
daa
sbb
or
jl
insb
addr16
ja
xchg
mov
cld
xlat
in
out
test
daa
add
or
push
pop
addr16
ja
xchg
mov
xbegin
imull
pop
fcoms
enter
dec
inc
jl
insb
out
testl
test
pop
movsb
lfs
mov
repz
mov
sbb
inc
jge
dec
jae
jae
cmpl
in
ret
std
ror
jecxz
xchg
sub
and
push
dec
arpl
lods
cmpl
in
ret
std
ror
jecxz
repz
inc
xor
add
xor
iret
mov
lods
jns
cmp
loopne
imul
and
lds
js
lret
rcrb
js
adc
sarl
imul
fistl
adc
sbb
es
push
push
and
ss
inc
jno
je
mov
sbb
sub
and
hlt
outsl
sub
popf
mov
sti
mov
in
ret
xor
mov
sub
in
mov
push
adc
jae
inc
leave
insb
out
movsl
mov
int3
mov
repz
fcoml
lods
or
push
fiaddl
mov
xor
jp
add
cmc
push
pop
int3
push
push
jl
dec
arpl
xchg
lea
std
ror
jecxz
repz
and
push
dec
arpl
jmp
aam
call
test
insb
jae
or
jno
or
adc
or
or
scas
out
iret
fucomp
clc
shrb
mov
fisttpll
aas
popa
dec
inc
pop
popa
or
sub
aas
push
pop
daa
in
pushf
lret
in
icebp
std
ror
jecxz
repz
and
push
dec
arpl
lods
cmpl
in
ret
std
ror
jecxz
repz
and
push
dec
arpl
lods
sbbl
ss
mov
sbb
adc
dec
mov
fs
inc
fimull
or
sbb
popa
cld
jg
jl
daa
fnsave
pop
adc
out
sub
shrb
add
testl
xor
lea
icebp
mov
pusha
ds
in
ret
das
cmc
test
mov
aam
or
mov
inc
add
imul
cmp
sbb
cltd
lods
in
in
mov
stos
push
out
test
dec
mov
add
or
jns
jl
push
cmc
lcall
jo
in
xlat
test
movsl
loopne
lods
cmp
jne
cmp
jl
sub
pushf
rcrb
pusha
lock
test
push
push
xchg
aas
push
sbb
push
dec
dec
mov
inc
addb
fists
mov
fwait
xor
test
shlb
hlt
cmp
insb
cmp
mov
and
mov
mov
jno
sbb
mov
adc
ds
xor
and
cmc
jb
bound
pusha
cltd
jg
or
test
fs
dec
inc
negl
out
in
add
out
push
adc
cmp
std
fs
outsl
mov
jp
xorl
jge
mov
aas
int3
sbb
int3
movl
xor
movsb
inc
xchg
dec
pop
add
push
es
xchg
mov
rclb
mov
popa
ljmp
adc
and
repz
or
das
dec
xchg
dec
leave
cmp
cmp
mov
jns
inc
pop
sbb
inc
or
fs
mov
test
inc
and
mov
mov
mov
mov
mov
fwait
lret
popl
cmp
mov
jno
hlt
mov
push
mov
ja
int
xlat
pop
stos
test
popa
xchg
inc
pushf
or
leave
dec
sub
push
leave
repnz
iret
shufps
xor
rcrb
cmc
icebp
xchg
aad
add
cltd
or
decb
shrl
fldcw
xchg
jle
push
mov
out
sub
mov
nop
sbb
adc
adc
xchg
adc
sub
popa
add
sbb
jge
xchg
shll
imul
bound
loop
push
xor
sbb
push
fwait
inc
mov
in
ds
sub
fs
or
lcall
hlt
cltd
lret
add
xchg
repz
int3
leave
insl
cmc
mov
mov
mov
pushf
pushf
xchg
xchg
mov
call
adc
inc
subl
orb
xor
mov
jmp
mov
imul
inc
lea
sub
mov
sub
xorb
push
orb
out
std
jp
jnp
std
sbb
cs
mov
pop
ss
sbb
cmp
mov
pop
data16
lret
lock
fs
aas
das
loope
cmpsl
sub
popa
sbb
inc
pop
xchg
fs
pop
cwtl
movb
adc
mov
xor
je
test
fadds
je
pop
loopne
sbb
add
xchg
inc
cld
testl
pusha
xor
cmpsl
out
xchg
dec
sbb
pop
flds
fbstp
inc
pop
fistpl
mov
or
cmp
aaa
cmp
aaa
outsb
aam
arpl
mov
mov
jle
cmp
inc
jns
and
lahf
ds
adc
ret
and
fcmovu
daa
enter
dec
enter
jo
push
xchg
sbb
add
cli
and
jl
add
cmc
cs
int3
push
in
lock
cld
add
stc
mov
clc
call
je
push
cwtl
or
clc
clc
notl
imul
cmc
mov
xchg
iret
add
xchg
jns
mov
imul
push
pop
int
int3
hlt
mov
mov
sti
imul
ret
aaa
pop
into
das
jnp
and
lret
mov
iret
shrb
aaa
iret
ds
repnz
jg
add
push
into
shlb
pop
dec
xlat
mov
mov
push
sarb
mov
jae
xor
jp
xlat
das
int3
out
lods
movsb
sbb
fistpll
movsb
mov
push
nop
gs
sarl
push
loopne
push
xchg
stos
es
or
xchg
cmpsb
clc
mov
push
dec
icebp
scas
loopne
or
jp
jp
xor
popf
int3
test
inc
xchg
jmp
mov
dec
frstor
adc
push
or
lock
add
sbb
call
xor
xor
fidivl
pop
mov
rcrl
jmp
push
popf
scas
xchg
mov
dec
jns
stc
mov
ret
mov
addr16
nop
jg
push
mov
cmpl
pop
xchg
ss
inc
fldl
mov
dec
shll
push
dec
fisttps
and
mov
fcoms
fwait
icebp
add
xor
mov
or
cli
into
fwait
inc
insb
mov
inc
jle
mov
movntps
or
dec
popa
inc
adc
cwtl
addr16
out
jno
add
int
and
mov
mov
cmp
aad
push
aad
aam
sub
das
mov
jbe
mov
repnz
inc
fidivrs
jae
shl
in
loopne
push
add
mov
leave
lds
rcrl
popf
dec
mov
mov
xchg
insb
scas
mov
cli
mov
repnz
mov
push
inc
push
ret
pushf
ds
add
push
bound
mov
loop
ret
repz
shlb
cmp
bsr
push
xor
add
addl
xchg
ret
test
out
mov
xchg
sahf
mov
mov
xchg
xor
push
loope
ljmp
push
adc
jl
dec
mov
das
mov
jge
pop
push
push
xor
sub
repz
mov
test
xchg
xchg
mov
xor
cmp
mov
repnz
cmp
andb
mov
xchg
test
testl
inc
out
clc
fcomps
lods
cmp
sbb
add
insl
cmpsl
push
xlat
sbb
pushf
shrb
mov
xchg
lock
arpl
pop
movsb
out
sahf
xlat
dec
pop
adc
add
or
mov
std
cwtl
pushf
or
and
push
push
stos
popa
imul
aad
or
lock
push
fisttps
cs
xchg
dec
cmp
jg
push
xchg
aaa
inc
dec
sub
movsl
enter
icebp
and
gs
outsl
mov
out
push
aad
xchg
mov
xor
addb
faddl
out
add
inc
pop
cmpsl
movsb
cmpsb
popa
aas
pop
data16
andb
jge
rclb
fst
lods
cltd
aam
jbe
out
cmovle
orb
rclb
shrl
and
fstpl
enter
mov
push
pop
pop
and
cmc
out
adc
lret
ja
std
insb
sarl
add
xchg
cmp
xchg
xor
int
sbb
jmp
fistpll
mov
jo
xchg
ds
xchg
outsb
xchg
dec
shlb
add
in
cmp
int
fsubl
mov
mov
orb
sbb
cmc
outsb
pop
inc
adc
fbld
sar
repnz
sub
pop
push
add
rcr
xchg
jo
cs
xor
mov
ja
pop
imul
leave
stc
xchg
push
sbb
lods
sahf
iret
jae
push
xchg
jg
pop
xor
xorb
cmp
mov
addr16
and
cmp
call
stos
iret
loop
push
push
repz
lret
xchg
repz
aam
out
dec
shrb
jg
inc
icebp
fiaddl
pop
cmpsb
ljmp
jecxz
mov
inc
xorl
out
into
adc
push
call
pop
mov
test
cmpsl
xor
call
in
xchg
mov
adc
push
int
fwait
or
sub
test
and
fadds
data16
sbb
outsb
insb
pop
and
repz
dec
push
and
cli
inc
bound
cli
lcall
test
insw
dec
movb
roll
popa
inc
xor
imul
dec
jb
fiaddl
imull
jbe
fdiv
dec
js
dec
pop
repnz
ret
lahf
and
leave
fs
lret
dec
push
sub
push
movl
add
pop
pop
mov
into
pop
lock
dec
stos
adc
lret
jo
dec
sub
mov
or
xchg
fdivrl
pop
inc
aaa
jecxz
xchg
in
fcoms
or
push
ss
je
xchg
movsb
xchg
lret
adc
inc
in
cli
and
iret
add
in
jnp
outsl
mov
inc
icebp
pushf
daa
or
mov
push
rcl
inc
jl
ret
leave
jne
push
std
jl
xchg
frstor
bnd
ret
test
int3
pop
arpl
adc
movsb
ljmp
xchg
scas
and
pop
sbb
xor
cmp
inc
mov
cld
jp
cmp
pop
ds
sub
scas
lods
mov
stos
out
mov
push
shlb
addr16
ret
movsb
push
jnp
xchg
lea
ja
div
adc
pop
mov
imul
jge
cli
int
aas
fcoms
lods
mov
pop
add
loope
add
es
shl
pop
pop
lea
cmpsb
push
sbb
cmp
push
scas
push
jg
xor
xchg
or
mov
mov
inc
xchg
stc
xor
gs
cmovnp
push
sbb
jne
add
push
inc
jge
sbb
add
mov
pop
jnp
mov
xor
gs
ja
sbb
jo
pop
rcrl
or
movb
pop
das
mov
sahf
movsl
jnp
inc
mov
sub
dec
add
pop
mov
lds
mov
sbb
jp
orl
or
ficompl
repz
lret
int
sbb
test
aaa
sub
daa
into
sub
insb
jge,pt
mov
add
ljmp
add
push
andb
mov
push
mov
mov
jns
std
cmpsl
scas
adc
paddd
lcall
stc
mov
jl
adc
add
cwtl
xchg
inc
das
loope
xor
adc
jo
push
popf
shl
stos
cmp
sbb
aad
lea
mov
push
pusha
fcmovne
adcb
in
xchg
nop
xor
cs
lods
dec
imulb
pop
pushf
faddl
cmp
hlt
shr
jmp
in
pop
jge
xor
jmp
add
out
inc
mov
rcrl
loop
jecxz
subb
inc
cmc
cs
sti
xchg
repz
out
leave
stos
popa
out
mov
add
fldl
inc
addr16
dec
stos
pop
dec
pop
outsl
mov
mov
sbb
or
push
mov
mov
xor
pop
cmp
mov
or
int
mov
les
sub
inc
xchg
push
movsl
gs
and
aam
and
push
adc
ds
adc
ret
outsb
sbb
inc
push
add
adc
sbbl
hlt
sbb
imul
cmpsb
sub
notl
inc
inc
ficoms
dec
xchg
sahf
iret
and
adc
pusha
xchg
sub
push
push
xchg
jo
mov
sub
pop
sub
popa
fmul
movnti
lea
popa
std
sbb
cmp
pop
mov
jbe
cld
cmc
loopne
jecxz,pn
pushf
sbb
fcomps
std
xor
mov
stos
dec
dec
dec
scas
leave
cld
imul
sbbl
jg
xchg
and
adc
xor
gs
mov
cli
xor
popl
mov
int
add
jge,pn
stc
in
cmpb
test
test
xor
dec
push
stos
negl
ljmp
xor
scas
pop
ret
sti
jne
push
sahf
out
xor
dec
mov
mov
sub
pop
stos
mov
inc
xchg
fstpl
dec
aas
jle
in
push
cmp
push
fildl
mov
push
inc
bound
add
mov
lret
scas
ss
sbb
das
outsb
jge
das
sbb
jae
push
dec
cli
loop
shll
lret
jmp
adc
lods
cmc
call
inc
sbb
mov
mov
mov
imul
aaa
scas
and
xor
add
movsl
mov
out
jecxz
repz
inc
add
sbb
test
cmp
pop
aad
cmc
sub
fnstenv
pop
adc
mov
pop
nop
and
fisubrl
cmp
scas
jno
fdivrl
push
xchg
call
scas
nop
and
push
sub
mov
xchg
jle
orl
stos
mov
xor
lahf
outsl
and
pop
aas
imul
test
shll
out
sub
push
mov
xchg
enter
shll
cld
lock
clc
test
cwtl
punpckldq
xlat
sub
jmp
pushf
adc
pop
into
mov
popf
insl
iret
adc
jmp
sahf
dec
mov
mov
mov
nop
subb
stos
adc
lret
lods
dec
cpuid
xchg
repz
mov
jne
pop
pop
lds
push
mov
insl
leave
adc
pop
cmpsl
sub
jns
push
mov
ficoml
ss
repnz
mov
div
aaa
xor
sbb
lods
in
pop
sti
xchg
inc
xor
and
mov
jbe
and
xor
adc
cmc
cmp
and
and
rorl
stos
pop
test
cmp
js
jae
pop
pop
call
mov
adc
fidivrs
or
xchg
mov
shr
popf
int3
dec
lds
and
std
pop
movsl
jo
or
mov
inc
mov
mov
aad
mov
shll
pop
out
test
sbb
pop
out
push
arpl
iret
dec
mov
push
and
enter
sub
in
rcll
add
push
inc
mov
in
cwtl
push
cli
dec
andl
mov
andl
add
ljmp
dec
int
cmp
pop
xor
adc
cmpsl
sub
fnstsw
lods
jns
push
mov
cmpsb
pusha
mov
mov
daa
stos
das
or
or
bound
aaa
scas
leave
popa
test
daa
mov
cs
cmp
lock
sbb
insb
jno
in
cmpsb
ds
dec
cwtl
insl
in
xchg
sti
into
inc
ljmp
das
jo
sahf
cmp
into
mov
mov
add
fists
aam
lret
xchg
and
pop
pushf
pop
pop
gs
mov
addr16
xchg
add
fdivl
in
xchg
fisubrs
fsubl
cmp
dec
add
nop
cltd
mov
outsl
xchg
dec
mov
lds
sub
mov
pop
mov
push
inc
lcall
int3
test
dec
fbld
mov
fidivl
xchg
iret
jle
adcl
das
jns
loop
inc
push
test
cmpsl
inc
dec
and
mov
push
popf
mov
mov
push
shl
jle
sahf
xchg
lods
in
ret
xor
stos
pop
fmuls
call
sar
push
inc
aaa
lretw
sub
lret
pusha
inc
pop
xor
inc
mov
inc
cmc
push
jne
ljmp
jb
aaa
gs
sub
aaa
out
es
mov
dec
daa
mov
test
xchg
sbb
inc
outsl
add
shlb
and
push
and
push
test
sub
out
jmp
dec
jo
add
and
adc
pop
xor
bound
mov
xchg
push
sahf
out
rcrb
mov
push
test
flds
mov
popa
xor
lock
mov
insb
in
lcall
sbb
sub
mov
call
aaa
ret
or
ljmp
int3
mov
mov
sub
xor
mov
rolb
movsb
xchg
pmaddwd
dec
mov
and
pusha
iret
fs
out
mov
aad
push
imull
scas
jge
orb
cmc
sub
stc
sub
cmp
xor
sbbb
imul
icebp
mov
ljmp
push
cmp
mov
pop
jb
fst
sbb
setp
js
mov
or
pop
pop
xchg
push
repnz
dec
sbb
mov
pop
in
jnp
sbb
xlat
pop
shlb
jmp
jp
or
lea
or
mov
mov
lcall
sahf
mov
leave
push
jle
ss
cmpsb
mov
cld
test
mov
ss
jg
daa
sbb
xchg
push
pop
jle
gs
xchg
pusha
inc
push
push
mov
das
loopne
jg
and
inc
adc
in
loopw
jbe
push
ss
xor
stos
icebp
movsl
sub
out
sarb
shll
jo
sub
cwtl
jae
add
out
addr16
dec
in
push
mov
push
sbb
jmp
test
jne
jne
mov
push
in
sub
xchg
sbb
sbb
mov
mov
pop
cwtl
or
pop
sbb
or
dec
sub
outsb
mov
dec
les
icebp
loope
dec
fs
pop
mov
and
mov
lods
imul
sarl
cmpsb
sub
sub
dec
cmp
adc
sub
dec
dec
adc
rclb
add
cmp
adc
decl
aaa
xchg
pop
test
incb
mov
push
sarb
pop
sti
pusha
and
test
or
ret
jns
or
or
sub
pop
bound
cltd
mov
mov
xor
popa
adc
jnp
call
bound
pop
mov
nop
outsb
cmpsl
cs
xchg
xchg
mov
jp
dec
pop
pop
push
lea
lahf
pop
xor
cmp
xor
out
cmp
sbb
mov
leave
dec
insl
jle
es
inc
hlt
js
int3
aam
out
mov
or
inc
lds
adc
aam
mov
loopne
or
or
ljmp
xchg
enter
test
std
jmp
xchg
inc
int3
std
mov
and
rcrl
push
lcall
fnsave
pop
xchg
sahf
push
push
jb
xor
add
test
fs
mov
cmp
sysret
push
je
push
dec
sub
inc
mov
stc
lcall
and
repnz
aad
and
mov
out
or
cmp
xor
popf
loop
mov
or
leavew
cmpsl
dec
adc
cmp
inc
and
xchg
outsb
aad
mov
lods
pop
loopne
adc
push
imul
mov
pop
iret
dec
mov
lcall
fcmovnb
stc
ud2
roll
adc
adc
sub
sbb
xor
and
dec
mov
mov
dec
ror
adc
outsb
jmp
int
sbb
sahf
jl
add
mov
cmpsb
insl
adc
xchg
xchg
shl
inc
add
shrb
pushf
shl
inc
test
mov
lahf
ret
push
arpl
mov
fs
pop
jne
popa
jbe
mov
xchg
cvttps2pi
cltd
stc
mov
testl
scas
fildl
hlt
stc
cmovb
leave
arpl
fldpi
pop
cmp
insb
out
xchg
sarb
in
movsb
inc
into
push
stos
loop
and
mov
add
ljmp
pop
sahf
outsl
sub
add
lea
lods
mov
arpl
sbbb
hlt
xchg
cwtl
mov
sbb
pop
cmpb
xchg
iret
or
push
cmp
jnp
enter
in
mov
mov
xor
ficompl
mov
mov
jnp
dec
iret
mov
or
test
bound
or
pop
xchg
loop
pushf
pushf
xchg
fstpl
xor
sbb
mov
mov
or
or
push
mov
xchg
add
fmull
sti
lea
jae
into
sub
hlt
cltd
jns
sti
mov
dec
stos
cmc
xor
es
jae
push
cmpsb
xor
mov
insb
or
add
mov
fcmovne
cltd
in
test
cltd
addl
sub
std
xchg
dec
xchg
or
push
gs
lret
push
mov
pop
mov
mov
lods
mov
mov
xchg
mov
inc
push
pop
adc
lret
jmp
xor
xor
repnz
add
jo
pop
in
jns
and
xchg
sub
ret
movl
or
jb
mov
aad
shr
sbb
sti
cli
cmp
sub
fwait
or
adc
addr16
xor
lahf
xchg
and
jp
jmp
sbbb
add
lods
call
sub
call
aad
push
ljmp
adc
movsb
dec
push
in
lahf
push
mov
arpl
rsm
out
mov
mov
xchg
inc
popa
mov
cmpsl
push
mov
xchg
cmc
xchg
or
cmp
or
sub
cmp
in
ret
std
ror
jecxz
repz
and
push
dec
arpl
lods
cmpl
in
ret
std
ror
jecxz
repz
and
push
dec
arpl
lods
cmpl
in
ret
std
ror
jecxz
repz
and
push
dec
arpl
lods
cmpl
in
ret
std
ror
jecxz
xor
and
lods
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
sub
or
add
pop
push
pop
int
fdivrl
mov
sahf
jg
lret
dec
sub
or
push
jp
dec
cmp
fsubrl
repnz
mov
cmp
sbb
dec
cmp
aad
mov
mov
jmp
and
or
lods
sbb
in
nop
sti
pop
dec
xor
mov
fbld
je
lea
int
mov
in
jmp
test
inc
adc
mov
lods
lcall
lahf
std
cmp
out
stos
cmpsl
or
mov
push
and
dec
jno
mov
pusha
cmp
dec
mov
repz
inc
jno
fnstenv
lret
pushf
add
sbb
rol
loope
pushf
in
imul
pop
int3
fxch
push
sbb
in
jne
pop
je
pushf
push
push
xor
mov
jecxz
pop
push
neg
aas
xor
xor
push
mov
leave
dec
cmp
test
inc
cmp
sbb
push
jp
dec
and
mov
xchg
ljmp
and
cmp
arpl
jae
push
jp
popa
add
or
iret
mov
lahf
loop
fmull
rcrl
add
or
pusha
and
sub
outsl
pop
sarb
cmc
mov
fmuls
add
jg
push
jp
dec
cmp
int3
stos
fdivrl
mov
pushf
cli
lods
lret
dec
sub
or
push
jp
dec
cmp
int3
stos
fdivrl
mov
pushf
cli
lods
lret
dec
sub
sarl
push
repz
jl
mov
dec
movsl
cld
dec
aas
mov
loop
pop
add
inc
cwtl
pop
sub
or
jmp
mov
pop
rcl
add
xor
pop
push
push
in
adc
fsubrl
test
or
and
xor
dec
mov
cmpb
push
or
inc
jbe
jge
and
pop
add
repz
and
mov
sti
ret
xor
xor
in
and
shlb
jbe
shr
insb
std
xchg
dec
fsts
sub
and
adcb
jb
outsl
fbld
push
mov
xor
inc
movsl
pop
sbb
stos
lahf
data16
mov
sahf
mov
pop
xchg
daa
js
pop
adc
outsl
jb
mov
fwait
jmp
lcall
cmpb
sbb
cmpsl
iret
lods
ds
lods
mov
out
pop
or
into
popl
gs
add
dec
or
lret
mov
xor
xchg
fsubrp
mov
lcall
push
fs
call
sbb
mov
or
and
push
add
sub
scas
arpl
xor
add
mov
in
dec
insb
stos
shlb
imul
or
movsl
lret
and
leave
pop
filds
out
repnz
pop
mov
sub
inc
mov
dec
sub
repz
popf
adc
mul
mov
call
mov
and
mov
gs
fdivrp
iret
xchg
mov
stos
dec
pop
adc
jns
subb
movsl
ret
xor
or
cwtl
sbb
fisubl
lock
push
lock
inc
push
nop
in
fsubrl
sbb
cs
ljmp
jo
mov
or
mov
jo
rcr
mov
push
mov
test
jp
mov
call
inc
adc
shll
jns
aas
mov
lcall
mov
sbb
repnz
loope
clc
movl
push
fdivrl
movb
stos
mov
pop
cmp
dec
lea
jnp
movsl
mov
ljmp
mov
jg
mov
dec
sbb
cmpl
icebp
leave
cmp
sti
add
ficomps
subb
dec
and
ret
lret
fsubl
jmp
shrb
xor
cwtl
add
mov
xchg
add
xor
push
mov
add
pop
popf
inc
repz
push
sub
jp
push
or
inc
fwait
adc
pop
test
adc
ficomps
movsl
mov
xchg
stos
sbb
fisttpll
sti
sahf
jg
call
pop
je
push
cs
xchg
mov
xor
mov
mov
out
push
outsl
inc
push
xor
pop
adc
fnstcw
scas
and
mov
out
arpl
loope
shrb
or
jmp
loope
test
lds
xchg
fisubl
movb
mov
xchg
loopne
dec
rcr
mov
jb
test
repnz
xor
cltd
adc
pop
test
stos
jb
jle
adc
jl
rorl
push
mov
faddl
leave
rcl
pop
sbb
fcmove
nop
filds
push
inc
sbb
jb
mov
xchg
inc
mov
cmp
incl
push
adc
mov
sbb
fcomip
cmp
in
in
adc
in
dec
jg
sbb
mov
shlb
test
adc
jle
fs
clc
sarb
into
std
loop
inc
fildl
notb
push
mov
lds
xlat
daa
mov
mov
sub
cmp
loopne
gs
pop
std
aam
add
push
and
out
pop
sub
les
call
popf
mov
mov
testb
fnstcw
xchg
shr
mov
mov
gs
mov
js
aas
push
adc
sbb
jnp
std
scas
pop
sbb
sbb
mov
int3
sbb
lcall
push
mov
mov
shl
lea
insb
jnp
cli
daa
in
pop
outsb
mov
call
adc
and
or
push
sub
ret
lret
mov
cmc
imul
sbb
xchg
xor
cmc
lods
mov
out
shrb
movsl
dec
mov
pop
fs
push
fcmovb
dec
test
xchg
test
mov
fstpl
je
cld
aaa
jns
stos
and
pop
aas
je
ds
xchg
jg
xor
je
aam
sub
adc
inc
xchg
loope
ljmp
das
and
jnp
je
lea
ja
ja
movsl
xchg
mov
sahf
push
sbb
repz
insb
pop
movl
jle
into
insb
sahf
cltd
cmp
cltd
loope
sbb
push
in
push
and
fs
pop
cmpsb
add
mov
adc
pop
loopne
ss
stos
in
jo
inc
scas
mov
roll
out
and
adc
fimuls
imul
dec
dec
ret
je
dec
fsub
shlb
iret
inc
lret
pop
into
loope
mov
mov
dec
sub
test
pop
jmpw
movsl
xchg
and
cmp
lods
mov
adc
xor
sti
loope
je
pop
fimuls
out
dec
pop
push
mov
or
bound
aaa
imul
pop
mov
push
int
bound
sarl
shlb
gs
notl
repnz
or
add
or
inc
xor
lds
adcl
movlps
es
pop
jp
pop
enter
rcrb
inc
cltd
loope
ret
daa
out
vmovsd
inc
std
test
jne
aaa
xchg
mov
mov
mov
push
jb
mov
or
or
adc
mov
mov
push
nop
es
rcrl
std
loop
add
aas
call
dec
rclb
mov
pop
cmp
pop
dec
push
adc
xchg
test
test
mov
xor
orl
jno,pt
fildl
xlat
in
sub
jp
jmp
subl
add
jno
in
sub
lds
and
jl
mov
bound
mov
mov
adc
xor
pop
clc
jl
popf
xchg
das
test
loope
jecxz
xchg
ja
shl
std
pop
jg
movsl
add
lds
test
or
adc
lret
pop
and
pop
dec
test
inc
adc
mov
sub
das
add
push
orl
shll
fildll
jne
pusha
stc
dec
pop
cmpsb
sub
out
rorb
out
sbb
in
int
gs
dec
push
int3
sbb
std
dec
repz
or
add
loope
je
jecxz
stos
lea
adc
insl
jecxz
test
icebp
fsub
inc
lcall
dec
pusha
in
xchg
faddl
pop
setg
cwtl
rclb
xchg
mov
shll
or
lahf
push
push
push
sbb
popf
in
in
enter
js
fidivl
cmpsl
push
ret
ja
push
mov
inc
push
xchg
jmp
pop
sti
xchg
mov
sbb
inc
or
mov
into
xchg
sbb
mov
cmpsb
xor
aam
repnz
arpl
fldenv
sub
sub
add
pop
or
ss
push
pop
insl
cmpsb
outsl
sbb
out
cmpsl
jo
orb
lds
cmp
sub
mov
adc
cmp
loop
scas
mov
daa
jo
out
and
dec
pop
pop
arpl
adc
je
lcall
and
je
popf
jmp
pop
in
cmpsl
loopne
cmp
inc
mov
fcmovnbe
ret
and
push
sbb
cmp
mov
pop
add
cltd
xchg
insl
fdivrp
push
dec
xor
fadd
xor
fs
or
in
into
xchg
sbb
sbb
pop
xor
sbb
js
push
lcall
pop
cmp
test
jo
or
cltd
fnstcw
loope
roll
and
mov
sbb
shlb
cmpsl
iret
in
sahf
sahf
lahf
jmp
ljmp
xchg
and
rcrb
nop
mov
mov
lret
test
pop
mov
xorl
out
mov
pop
sbb
cs
jns
outsb
out
cmpsb
dec
icebp
cmc
push
insb
jne
adc
or
mov
or
inc
int3
fs
ss
cmc
push
jecxz
sarl
scas
aas
adc
cmpsb
xchg
push
xrelease
and
mov
dec
mov
sub
dec
jmp
cli
repnz
dec
daa
xchg
das
mov
in
xchg
and
add
sti
xchg
xchg
add
fldl
push
pop
rorl
and
in
xor
adc
push
fdivl
push
push
aam
imul
jp
add
insl
mov
mov
mov
insl
jo
imul
pop
push
mov
dec
rcll
sbb
xchg
icebp
jo
shrb
add
mov
or
movsl
rcrl
cmc
adc
push
push
mov
icebp
push
cmp
stc
mov
arpl
movsl
cmp
in
push
scas
mov
stc
rcll
lods
mov
sub
shll
mov
xlat
movsl
xchg
pop
shll
sub
notb
mov
pusha
mov
sub
xor
and
scas
and
inc
jge
jge
mov
icebp
stos
xor
lcall
jge
repnz
jne
push
lret
and
jns
xchg
movsl
mov
jb
shll
es
addr16
jg
stos
sub
cmpsl
and
in
or
fwait
movsb
es
mov
push
ss
fsts
or
jecxz
push
inc
icebp
push
sbb
xchg
rorb
xchg
xor
aaa
pop
or
cmp
jnp
ret
int3
cmc
push
mov
or
and
roll
mov
pop
push
add
lds
loopne
mov
std
fnstsw
leave
xchg
sbb
xchg
cmp
jb
pop
pop
or
add
or
test
xor
push
mov
les
cs
aaa
je
jne
mov
mov
jnp
scas
iret
addr16
fildl
and
fcoms
xchg
adc
inc
ds
pop
jecxz
push
adc
ror
cmpxchg
mov
cmp
fisubrl
cs
frstor
mov
xchg
jbe
add
dec
cltd
lcall
inc
fdiv
mov
fstpt
fwait
xor
test
or
cmc
out
call
add
cmp
rolb
aad
jl
jmp
and
cltd
sbb
xchg
add
mov
sub
lds
xchg
add
push
pop
pop
fnstcw
xor
add
add
lods
dec
xor
imul
psraw
inc
dec
xorb
call
in
mov
insb
fistpll
inc
insb
or
sbb
dec
adc
pop
mov
mov
ret
pusha
popf
sbbb
and
imul
sti
dec
sbb
inc
out
cmp
push
pushf
add
adc
lret
arpl
push
xchg
stos
pcmpeqw
stos
ss
insb
xchg
out
jle
lcall
or
jnp
mov
in
inc
insb
inc
repnz
inc
out
adc
lcall
stos
adc
in
mov
adc
xchg
jo
jl
or
call
sbb
jnp
mov
fidivrl
dec
js
sub
repnz
rolb
test
and
mov
ja
rol
test
cld
es
and
fdivrp
xchg
jae
jecxz
jno
clc
mov
sarl
add
jo
stc
fsubp
scas
inc
test
std
sub
jno
push
mov
mov
dec
jecxz
cmc
xchg
xor
push
inc
dec
mov
sub
push
pop
shlb
subl
mov
add
sbb
adc
ret
lods
sub
xchg
mov
loop
out
out
pusha
lahf
mov
mov
adc
adc
test
enter
inc
and
lcall
xlat
add
xchg
pop
sbb
dec
push
inc
push
fmuls
cltd
push
add
pop
fdivrp
and
idivb
mov
dec
ror
mov
pop
dec
sbb
cmp
mov
fdivrs
pop
and
mov
jp
add
dec
cmp
aas
lea
ljmp
mov
xor
jl
push
lret
pusha
xchg
outsl
pusha
mov
xchg
sbb
mov
inc
lahf
pop
pop
and
pop
lret
stos
les
sbb
mov
es
inc
jg
daa
pop
and
and
jnp
sarb
add
into
aaa
cld
pop
rcrl
repnz
frstor
add
push
adc
loop
pop
adc
rcll
sbb
out
pop
aam
rcll
lds
stos
sbb
dec
je
cltd
jns
push
fwait
mov
fcmovne
imul
mov
hlt
and
fs
dec
pushf
insb
and
leave
lahf
daa
mov
xchg
cmp
mov
jp
cmc
popa
imul
or
cli
stc
scas
and
pop
cli
cmc
pop
add
mov
jp
movsl
scas
cmp
cmpsl
icebp
sub
pop
addr16
stos
scas
jle
cmp
cmp
xchg
mov
es
pushf
cs
sbb
cmp
movb
adcl
pop
call
mov
pop
addr16
push
loopne
js
in
mov
sub
add
les
and
adc
push
arpl
sub
mov
fwait
imul
and
xor
jg
mov
adc
jns
push
and
xchg
mov
in
push
daa
mov
xchg
dec
lret
out
pop
shl
mov
mov
sahf
shrd
shll
adc
cmpsb
loope
xor
sub
inc
xor
sub
lea
rclb
jno
lret
inc
xlat
mov
das
sub
or
cmp
sbb
cmp
push
pop
mov
inc
pushf
idivl
ja
jne
add
inc
mov
cmp
lds
into
mov
add
jbe
cmp
addr16
mov
movsb
test
lods
roll
lret
push
scas
dec
insl
call
mov
pop
rcll
int
adc
lock
jb
mov
mov
cwtl
mov
dec
sub
dec
lds
cli
pop
dec
mov
jns
clc
nop
mov
dec
fldl
out
je
mov
xchg
mov
es
decl
mov
push
fadd
mov
cmp
mov
xchg
shlb
mov
mov
mov
fstl
popa
inc
mov
xchg
leave
mov
mov
mov
lcall
cmc
rolb
mov
cmp
loope
jle
clc
and
xchg
dec
in
insb
xor
jnp
mov
jne
lret
jno
inc
test
fisttpll
jge
ret
push
repz
xchg
sub
sbb
adc
inc
inc
push
out
clc
shlb
dec
nop
mov
add
jmp
ficompl
shlb
push
xchg
pop
dec
xor
mov
cmpsl
lods
into
sub
push
jno
shll
lods
adc
loopw
nop
lret
pop
cli
cltd
xchg
imul
dec
fcmovnu
insl
flds
sub
jne
adc
fistpl
mov
ret
sti
sbb
shll
das
lret
lcall
out
ljmp
pop
lret
inc
repz
inc
orb
in
mov
sub
dec
xor
mov
cmpsl
pop
fs
sbb
sbb
xchg
leave
and
int3
xlat
push
movb
sbb
cmpsb
add
jle
in
lods
sbb
mov
pop
sbb
cmp
fiaddl
push
dec
inc
push
iret
dec
push
fbld
pop
xchg
bndldx
lods
push
xor
lcall
or
cmp
enter
in
mov
sbb
ss
cwtl
mov
outsb
aaa
jl
cs
inc
lock
mov
fbstp
cmpsb
fwait
adc
mov
push
es
mov
or
testl
push
jns
adc
adc
cmp
ret
rcrl
push
add
aaa
je
gs
push
or
fs
mov
add
clc
sarb
lods
xor
cmp
or
sub
rclb
inc
aaa
xchg
insl
pop
ljmp
jp
out
stc
rolb
lret
mov
jmp
fildl
das
xor
add
or
push
das
or
stos
mov
das
mov
stos
or
test
mov
test
lahf
scas
sub
jbe
or
cltd
les
push
jmp
insb
push
shlb
ret
cmp
or
ucomiss
shlb
inc
xchg
sub
mov
test
sbb
shll
repnz
loop
xchg
mov
fwait
cli
iret
cmp
mov
xchg
roll
cmp
xchg
shrl
adc
cmpsb
mov
orb
not
out
in
mov
pop
xchg
jb
aad
cs
jmp
add
mov
inc
xor
fs
lcall
inc
xchg
and
push
xchg
lods
push
push
mov
pop
sub
jle
lods
dec
sbb
fisubrl
outsb
or
cltd
dec
enter
test
mov
xchg
subb
dec
fs
nop
mov
jne
imul
and
xor
xor
xchg
xchg
imul
mov
xlat
outsl
xchg
mov
mov
fcoml
cli
dec
jne
fxch
insl
mov
test
inc
cmp
pop
in
sbb
ss
inc
fs
push
int3
mov
jae
pushf
call
or
xor
subb
aam
imul
jle
xor
fsubs
pop
jmp
xchg
inc
orl
xchg
jns
movl
ja
cmpb
pop
push
xchg
out
and
dec
jo
inc
push
js
lods
push
cmp
loope
fwait
or
mov
add
call
cmp
popf
idivl
fwait
push
shrl
in
mov
bound
scas
or
mov
hlt
cmc
repnz
popf
sbb
mov
mov
out
test
inc
pusha
das
xor
hlt
fsubs
jecxz
pushf
push
in
call
cmp
adc
clc
and
xchg
mov
add
icebp
enter
imul
pushf
adc
sbb
in
andl
in
stos
popf
xor
loopne
fsubr
sub
mov
jb
mov
jecxz
repnz
das
out
hlt
push
jle
sub
les
retw
jno
push
arpl
les
dec
sub
pusha
dec
mov
es
jnp
shll
gs
fistpl
cs
and
int3
or
ds
lods
mov
dec
and
stc
test
jns
aad
cmp
sbbl
sub
or
cmpsb
clc
add
sbb
seto
sbb
fnsave
and
cmp
and
cmp
jns
mov
and
xchg
popf
shlb
fildl
in
ja
jle
lahf
push
loop
add
sbb
sbb
pop
jne
add
xor
lods
xchg
inc
call
jge
iret
sbb
or
inc
mov
mov
dec
inc
jmp
in
cli
mov
add
ljmp
test
xorl
call
mov
popf
idivb
mov
mov
mov
xchg
ja
popf
fwait
sub
imul
shrl
jno
stc
jg
push
jb
in
dec
das
inc
dec
xor
mov
pop
lea
lret
add
push
add
shrb
ja
call
and
cld
xchg
popf
add
jl
int3
loop
jle
push
bound
jns
bound
aam
jno
mov
fdivs
jb
int
cwtl
adc
test
andb
ds
inc
lahf
hlt
rorl
push
iret
push
sub
and
sub
jb
fnstcw
lret
xor
adc
cmc
mov
mov
lcall
dec
mov
js
pop
and
push
jb
push
jo
fistps
sbb
push
pusha
out
add
jns
mov
pop
aaa
std
push
push
jb
bound
call
push
mov
repnz
mov
cmp
push
xchg
data16
fwait
repnz
or
rcrl
aas
ret
sar
fcompl
xor
cmp
cmpsl
lret
push
pop
dec
fisttpl
test
adc
xlat
adc
adc
jno
mov
inc
imulb
rcll
pushf
jg
push
leave
push
ret
aaa
hlt
orl
push
push
jmp
xor
pop
cmpsb
add
adc
cmp
jl
or
sbb
sub
cmp
int3
stos
fdivrl
mov
pushf
cli
lods
lret
dec
sub
or
push
jp
dec
cmp
int3
stos
fdivrl
mov
pushf
cli
lods
lret
dec
sub
mov
push
cli
sub
cmp
int3
sub
mov
mov
popf
cli
lods
lret
dec
sub
insl
or
push
jp
dec
mov
adc
cld
in
sti
bound
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
fwait
stos
mov
mov
cmp
rclb
or
pop
rorb
jnp
imul
adc
inc
fistl
sti
jb
rcrb
xchg
or
mov
loop
repnz
xchg
mov
sbb
dec
sti
mov
sbbb
sub
dec
rorl
jle
sbb
xor
rolw
leave
sti
pop
into
data16
pusha
mov
xchg
jle
repnz
push
xchg
pop
cmpsl
lock
xor
enter
out
cs
lods
dec
dec
repz
push
outsl
outsl
hlt
pop
cs
dec
inc
pop
inc
andb
cmp
add
lret
dec
push
or
ret
xchg
dec
jnp
dec
pop
dec
adc
lods
roll
push
pop
xchg
addr16
inc
js
lret
jo
xchg
in
hlt
mov
dec
lret
dec
pop
shlb
xchg
out
fcmovnu
jmp
es
xchg
cmp
inc
in
inc
pop
les
dec
mov
xchg
stos
add
repz
mov
pop
rcrb
cmpsl
jnp
jle
fwait
adc
inc
fistl
lret
sti
lret
sbb
or
lods
sub
jnp
add
fs
pop
stos
sub
daa
mov
jecxz
rorl
repnz
rcrl
sbb
add
lcall
mov
xchg
xchg
add
push
mov
xchg
sub
and
push
leave
jae
pop
cmc
push
lret
sti
jb
sbbb
or
pop
rorb
jnp
imul
adc
inc
fistl
sti
jb
sbbb
or
pop
rorb
jnp
imul
jecxz
push
insl
imul
add
xchg
cli
adcl
sahf
dec
adc
pop
enter
dec
jo
mov
loop
jg
aaa
push
aad
adc
sbb
das
test
fdivs
lahf
repz
mov
and
in
xchg
add
daa
cmp
cld
pop
imull
xor
sbb
xchg
cld
addr16
adc
out
push
sti
repnz
roll
aad
xor
pop
gs
fimuls
pop
xchg
aad
ljmp
xor
outsl
add
jo
jb
es
add
sbb
mov
dec
mov
sti
pop
xor
movsb
xor
xlat
pop
inc
test
scas
pop
add
inc
push
rorl
aad
mov
stos
fnstcw
or
xor
out
push
mov
movsb
ret
fnstsw
hlt
lock
mov
xlat
adc
fstps
data16
add
ss
lock
pop
ffree
jmp
cmp
jecxz
out
add
inc
pop
lret
or
mov
jbe
or
fsub
jno
pop
adc
hlt
loop
jmp
mov
and
mov
mov
popa
mov
and
and
xlat
cltd
popf
pop
xchg
mulb
lock
mov
dec
push
inc
pop
or
lock
cmp
stc
das
iret
push
stos
pop
xlat
xchg
and
and
mov
mov
cli
jb
loop
mov
jbe
iret
push
jmp
out
mov
pop
sbb
cmpsb
pop
imul
cwtl
push
cld
sub
fistps
xor
mov
pop
xchg
insl
imul
sub
inc
or
je
mov
jmp
pop
into
arpl
and
or
sbb
xchg
stc
xor
cs
mov
pop
xchg
pop
sahf
idiv
and
jo
flds
pop
pop
push
gs
xchg
fnstsw
les
cmp
outsb
outsl
das
lods
clc
dec
fsubs
in
sar
divb
addb
and
aas
pushf
hlt
cmp
cld
loopne
hlt
or
mov
add
std
dec
jae
xor
gs
mov
pop
daa
inc
ljmp
cmp
pusha
gs
mov
divb
mov
mov
pop
cmp
std
or
mov
mov
test
scas
and
scas
sub
jno
cmc
inc
cmp
pop
popa
push
and
adc
push
or
lods
mov
mov
sub
adc
popa
adc
pop
inc
mov
movsb
inc
sub
push
aas
push
in
add
aad
xchg
xor
mov
dec
inc
imul
add
arpl
jno
or
jge
je
xchg
cmp
in
loop
push
cltd
jmp
cmp
fildll
pop
rolb
in
jbe
movsl
cmpsl
cmp
fstpl
les
pop
mov
xorl
and
fmulp
mov
inc
jecxz
mov
ret
and
sub
and
lods
jecxz
into
aam
dec
and
pushf
notl
movups
mov
xchg
sub
mov
xchg
mov
dec
cmpl
out
aam
and
inc
mov
ficoms
repnz
push
and
dec
fwait
mov
ret
or
mov
ja
mov
mov
add
clc
xchg
sbb
mov
cli
add
cld
out
rol
pop
ret
dec
fdivs
fstl
out
sbb
das
sbb
adc
jmp
push
cmpsb
cli
test
pop
adc
cmc
cli
and
insl
sub
jno
mov
ds
lea
leave
add
orb
xchg
add
pushf
jb
cmp
lret
xchg
cwtl
mov
mov
mov
clc
repz
testl
jecxz
add
faddp
fwait
sbbb
or
fstpt
cmpsb
insl
pusha
addr16
pop
add
dec
mov
mov
push
xchg
or
cmp
iret
stos
cmpsb
hlt
addr16
jg
out
xchg
je
pushf
dec
add
jns
xor
pop
sahf
fcompl
cmp
ljmp
inc
cmp
push
mov
fwait
test
clc
mov
shrb
jecxz
xchg
inc
sbb
xchg
or
lods
pop
dec
test
scas
xchg
lar
inc
lods
ret
aaa
inc
es
push
inc
scas
clc
mov
jg
jo
sbb
sbb
stos
push
fiadds
mov
fistpl
mov
js
std
fs
jne
mov
mov
out
xchg
lods
sbb
mov
aaa
pop
push
sub
dec
or
lea
subb
push
subl
cmpsl
movsb
loope
lret
adc
pop
fwait
dec
icebp
mov
ds
dec
push
stos
push
xchg
mov
mov
jne
outsb
mov
fs
data16
xor
bnd
pop
test
xor
cs
bound
in
das
jg
rorb
aam
fldenv
out
repnz
cmpsb
push
xor
daa
fcomip
das
mov
pop
pop
idivl
adc
jle
lea
outsl
pop
fbstp
ljmp
repz
call
or
outsl
in
es
sub
sbb
shrl
mov
push
cwtl
in
jno
call
adc
fs
out
pop
xchg
movl
sti
mov
mov
shll
cmp
and
aad
jb
mov
sub
xor
aam
insb
push
cmp
fcmovbe
lods
bound
dec
mov
mov
std
ds
scas
mov
int
jecxz
jle
sbb
lea
in
sbb
mov
in
and
ljmp
jo
cmpsb
lret
in
inc
div
icebp
out
pop
add
push
lea
aaa
ret
jmp
mov
push
les
loopne
cmc
push
mov
test
add
xlat
stc
adc
add
and
sub
rclb
and
jecxz
fstpt
xchg
sbb
int
mov
xchg
cli
mov
into
inc
ss
xlat
bound
pusha
psubq
sub
adc
mov
and
adc
push
sti
or
or
xor
and
fisubl
mov
pop
mov
push
cmp
movsb
insl
imul
in
fcoml
xchg
scas
cmp
out
std
adc
and
push
mov
std
mov
in
or
sub
cmp
inc
push
scas
xchg
imul
push
add
out
js
fcompl
fs
push
jne
frstor
movb
in
test
jno
jmp
push
fstl
push
aas
jmp
lcall
rorb
lods
sahf
adc
cld
int3
roll
pop
mov
jae
sub
mov
pop
gs
loope
fidivl
push
insb
das
mov
jge
push
jns
ficoml
sub
cmp
push
call
sub
xor
cltd
out
inc
push
pop
sbb
rcl
push
pop
jnp
push
jle
bnd
in
das
xor
pop
and
dec
pop
pop
jecxz
outsl
dec
hlt
push
push
xor
fldenv
inc
xchg
mov
mov
xor
arpl
outsb
push
jne
sub
jg
jle
stos
jnp
mov
cmpl
xlat
hlt
inc
les
push
mul
mov
jmp
cmpsl
jae
stos
mov
mov
jmp
add
or
mov
push
xor
scas
xchg
scas
push
cmpsb
lahf
rorb
cld
jl
rolb
mov
mov
xchg
call
psllq
ficoms
ljmp
xchg
lea
ret
orl
jp
dec
bound
jns
ficomps
xchg
dec
aas
sbb
insb
lea
jge
sub
arpl
sub
icebp
pop
shrl
mov
push
fldl2t
fcomip
outsb
pusha
xor
cmp
add
and
popa
push
ret
jb
cmp
push
adc
lret
mov
les
aas
inc
mov
pop
jnp
out
out
jo
jnp
cmp
dec
outsb
rol
mov
or
dec
sbb
jl
push
xchg
xlat
repnz
push
fld1
jge
pop
dec
mov
lahf
lcall
testl
popa
sub
test
stc
repz
je
mov
jb
jg
test
inc
adc
ret
ret
adc
fcmovu
mov
mov
push
and
or
ja
sbb
xorb
add
mov
hlt
insl
mov
out
cmp
push
enter
and
aaa
and
fxam
push
popa
or
lret
movsb
daa
sahf
cmp
ret
xchg
push
in
aas
clc
mov
cltd
movsb
or
mov
xor
in
push
xor
xor
xor
ret
or
das
icebp
or
pop
ja
mull
add
pop
cmp
mov
mov
jne
jl
lods
push
xchg
cmp
push
mov
xor
mov
inc
xchg
daa
inc
xor
xchg
das
jge
add
mov
push
repz
inc
or
adc
adc
sbb
dec
arpl
test
and
cli
loopne
sub
mov
and
leave
jno
add
lock
das
or
movsl
push
add
or
lds
es
imul
pop
aad
or
sbbb
pop
xchg
dec
mov
mov
mov
int3
jnp
add
push
imul
addr16
jae
in
sub
dec
int
jne
adc
push
stos
lods
test
repnz
sub
inc
arpl
pop
push
cli
lock
push
repz
push
lcall
mov
mov
dec
push
rolb
sub
movsl
cmpb
xchg
mov
ja
mov
bound
xchg
push
inc
les
xor
mov
jle
jb
jno
sbb
push
pusha
fmuls
lock
repz
sbb
jb
ds
mov
xor
repnz
jbe
mov
ja
repnz
stos
loopne
add
adc
sub
adc
mov
daa
xchg
pop
inc
or
inc
fistl
rorb
sub
mov
sbb
mov
aas
pushf
jae
adc
jbe
mov
pop
lds
pop
ret
jns
ret
insl
stos
loop
push
mov
sub
push
das
xchg
xor
jbe
adc
xchg
mov
and
xchg
insl
mov
pop
cmp
roll
das
sub
cmp
mov
push
mov
pop
out
bound
lea
pop
fiaddl
lods
in
test
in
filds
add
sar
or
cmpsl
cmp
lods
cmpsb
test
xorb
dec
cltd
jbe,pn
je
xchg
sti
dec
mov
sub
or
ret
data16
push
clc
xchg
lods
les
std
sub
push
jo
lret
sub
xchg
dec
dec
jbe
fistps
dec
fstl
pop
cmp
add
int
in
mov
movsb
scas
shl
stos
cmp
mov
dec
mov
out
xor
in
ja
aaa
and
ret
fs
in
xchg
mov
add
call
cmp
outsb
jmp
cld
sub
xor
push
add
xchg
inc
jg
push
data16
pop
jmp
das
mov
push
xor
rcll
mov
cltd
lock
repz
jl
addb
add
jo
mov
inc
mov
sub
sub
push
lea
xlat
repz
cmp
sbb
addb
test
xlat
in
loope
jns
xorl
imul
lds
insl
mov
push
hlt
in
jecxz
jb
mov
daa
scas
out
cmpsb
adc
fildl
mov
mov
inc
test
cli
test
mov
adc
movl
decb
mov
mov
shlb
cmp
aad
aam
hlt
jp
sub
xor
jbe
in
xchg
push
adc
dec
lret
sbb
adc
lret
mov
add
xchg
addr16
mov
insl
sti
cmpsl
inc
dec
xchg
add
lret
sti
movsl
and
jmp
movsb
das
push
mov
pop
lret
out
push
fsubs
cs
fwait
lret
sbb
add
sahf
loopne
test
mov
leave
outsl
fs
insl
cmp
es
loope
out
fildll
push
jbe
mov
dec
fldl
ss
mov
mov
es
and
rclb
mov
jg
ss
dec
inc
adc
in
ds
sbb
jne
imulb
cmp
jmp
adc
adc
test
ret
dec
push
in
popa
popa
or
pusha
sbb
pushf
cmp
add
xor
std
jl
rorb
sbb
cmp
cmp
or
xlat
adc
jmp
sbb
fmull
xor
cmpsb
daa
test
ja
loopne
shrl
and
leave
or
push
call
xchg
adc
loope
cmc
dec
and
dec
pop
int3
pop
lea
stos
cltd
hlt
out
sti
cmp
mov
sbb
lahf
mov
jnp
lea
or
loope
outsl
scas
inc
sub
mov
jp
adc
mov
jns,pt
xor
js
xchg
hlt
xchg
mov
jno
fwait
rcrl
xchg
adc
pop
push
data16
jnp
pop
mov
mov
mov
fmull
mov
mov
test
xchg
pop
jmp
mov
bound
loopne
nop
jle
pop
stos
jne
aad
leave
mov
int
fistpll
mov
pop
inc
dec
dec
xlat
cld
jge
adc
or
add
dec
fistps
in
addb
sahf
pop
pusha
inc
jae
pop
sahf
adc
ljmp
sub
push
cmp
movsl
loope
lods
out
imulb
lret
ficoms
lcall
pusha
js
push
mov
in
add
xchg
mov
mov
repz
mov
inc
out
scas
mov
loope
dec
aad
cmpsl
xchg
mov
hlt
shll
push
cli
enter
inc
mov
pop
mov
jo
fisttpll
and
dec
out
cmpsl
mov
mov
mov
js
fs
xchg
mov
cmp
push
ljmp
flds
mov
subb
mov
xchg
out
aas
cwtl
ret
push
fldt
jae
push
test
gs
lock
cmp
xchg
xchg
ss
or
pushf
xchg
popf
mov
pop
mov
les
dec
adc
pop
daa
mov
mov
popf
fistpll
sbb
bound
loope
mov
mov
add
out
outsb
in
shl
lock
rcrb
aaa
push
or
mov
dec
out
inc
xchg
les
pushf
push
inc
in
push
mov
adc
xchg
pop
push
dec
inc
push
add
add
pushl
jo
jecxz
cmc
push
adc
notb
out
add
mov
jl
gs
imul
push
in
pop
pop
jbe
outsb
or
stos
testb
movsl
fucom
je
add
lret
in
arpl
lds
mov
cmp
out
lods
mov
or
clc
sbb
add
jb
insl
xchg
or
inc
mov
lcall
adc
and
mov
xor
cwtl
mov
cmp
push
or
lahf
sbb
inc
xchg
and
mul
push
add
mov
out
aad
lock
subb
aad
notl
jecxz
fidivrl
and
add
cli
testb
xlat
mov
dec
mov
imul
testl
inc
pushf
lods
inc
mov
pop
and
loope
aam
in
leave
fcomps
lret
sub
pop
fsubl
sub
popf
mov
lods
inc
mov
mov
jecxz
scas
insb
dec
dec
mov
jg
gs
jecxz
test
imul
iret
loopne
pop
xchg
xchg
mov
adc
pusha
cmp
cld
sub
test
pop
sbb
jl
push
pop
xor
add
daa
sbb
fs
xchg
loopne
arpl
mov
xchg
mov
hlt
mov
fisubs
cld
popa
sbb
lret
je
xor
adc
daa
fdivr
mov
cmp
jp
icebp
xchg
fbstp
dec
inc
jnp
add
cmp
mov
xor
jl
clc
cmp
pop
stos
ja
pusha
fidivl
mov
xor
cmp
int
sarb
cltd
pop
cltd
frstor
sbb
mov
push
fwait
mov
repnz
shlb
and
movb
in
push
add
xchg
push
jle
adc
mov
sbb
popa
sub
arpl
and
rorl
cmp
subl
push
push
adc
mov
clc
pop
mov
ret
icebp
loop
xlat
mov
js
pop
stos
and
out
jno
mov
or
nop
loop
cld
fsubs
push
dec
dec
mov
xlat
jo
mov
push
aas
insl
and
xor
add
sbb
jl
sahf
adc
sti
xchg
xor
and
dec
in
scas
test
aaa
inc
sbb
pop
cld
push
or
loop
pop
mov
mov
scas
dec
pop
ficomps
jle
lret
jb
insl
or
sub
push
or
sub
out
cld
inc
shl
jnp
sbb
rcrb
loope
repnz
pop
xor
push
jno
inc
cmp
jmp
inc
xor
ljmp
cli
or
mov
lcall
iret
sub
pop
mov
adc
pop
sub
mov
ja
or
es
dec
cmp
repz
fsts
scas
add
insb
pop
sub
insb
or
inc
xchg
lcall
aam
cmp
aaa
test
or
xchg
repnz
es
dec
shll
mov
rcll
cli
rclb
mov
pop
lock
add
push
pop
mov
dec
clc
movsb
mov
push
xor
test
or
je
mov
sti
sbb
push
jg
or
sbb
xor
in
sub
mov
or
jmp
push
dec
sbb
mov
orl
hlt
aad
popa
jno
into
inc
xor
pop
mov
popf
rolb
xor
xchg
pop
mov
jl
insb
in
adc
jbe
data16
jg
nop
jb
xchg
jge
jno
or
outsl
ret
jne
in
jl
xchg
sub
inc
cmc
jl
aas
inc
jle
mov
xor
pop
dec
jg
das
into
or
push
fwait
into
movsb
stos
call
adc
and
xchg
jg
je
mov
jge
out
insl
mov
cmpsb
inc
mov
js
scas
and
in
inc
fidivl
push
flds
imul
daa
in
cmpsb
icebp
dec
pop
xor
xchg
mov
dec
inc
std
call
ds
inc
jne
or
xchg
lds
repnz
scas
push
rcrb
dec
sarl
mov
mov
ss
mov
ficoml
mov
and
or
xchg
push
sbb
cwtl
cmpsb
sbb
push
jno
js
fld
movsl
xchg
in
dec
icebp
cmp
in
jne
in
lds
push
hlt
pushl
dec
lock
or
in
lret
mov
pop
imul
cmc
jle
cmp
push
push
xchg
cmpsb
je
stc
add
pop
shll
shrl
rcrl
fwait
xor
sub
mov
adc
arpl
and
xchg
add
inc
lds
addr16
sbb
roll
mov
xchg
or
stos
int
outsl
arpl
and
ds
inc
int3
xchg
and
lcall
jb
pop
in
inc
xor
sbb
es
mov
dec
icebp
cmc
fsubrs
pop
addr16
jle
loop
bound
icebp
inc
addr16
mov
sahf
or
fisubrl
dec
les
outsl
xchg
ret
pusha
mov
fldcw
pop
divb
aam
and
xchg
pop
cmpl
xor
stos
shlb
adc
cmp
mov
imul
xchg
mov
movsl
pop
sarl
mov
mov
hlt
clc
adc
or
icebp
jnp
idivb
cmpsl
les
mov
mov
jp
pop
push
int3
es
jb
icebp
mov
xchg
mov
ret
xchg
cmc
xchg
push
in
orb
outsl
sub
or
sub
push
sbb
push
negl
in
popa
pop
andl
inc
clc
je
std
cltd
dec
mov
rorl
dec
jo
fimuls
push
loop
iret
cmp
jnp
adc
mov
push
lret
sti
jb
sbbb
or
pop
rorb
jnp
imul
adc
inc
fistl
sti
jb
sbbb
or
pop
rorb
jnp
imul
adc
inc
fistl
sti
jae
xchg
xchg
or
pop
lret
dec
out
ret
fwait
mov
fildl
sti
bnd
sbb
or
mov
mov
pop
mov
test
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
