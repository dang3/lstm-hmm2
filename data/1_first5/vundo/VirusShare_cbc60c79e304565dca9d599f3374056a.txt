pusha
in
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
orl
mov
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
dec
cmp
jge
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
push
and
push
push
mov
push
pushl
call
mov
push
call
mov
shr
push
not
and
push
push
push
pushl
call
push
call
mov
push
push
push
mov
push
pushl
call
push
xor
pop
mov
cmp
jb
mov
dec
add
in
sub
movl
movl
movl
movl
push
lea
push
push
call
add
cmpl
jne
push
push
push
push
call
leave
ret
mov
sbb
add
pop
jae
mov
add
add
add
add
mov
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
xchg
add
add
add
sub
or
add
add
add
and
add
dec
add
add
mov
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
add
add
dec
add
add
ltr
add
add
movsl
add
cwtl
add
dec
add
add
add
add
add
add
add
add
arpl
sub
xchg
add
push
add
add
add
outsl
add
add
add
stc
add
add
roll
push
add
add
pop
add
sub
jo
xlat
add
pop
add
add
add
inc
add
add
add
addl
dec
add
push
add
add
or
xchg
add
add
and
movsb
add
add
lock
arpl
cmp
sub
sub
lock
add
add
les
aaa
add
insl
add
add
popl
inc
add
add
add
dec
add
add
sub
push
add
add
add
add
add
jo
nop
push
pop
add
add
add
scas
add
add
jno
inc
add
jb
xchg
add
add
cwtl
add
add
add
inc
add
add
add
add
sbb
pop
add
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
mov
cmpsb
add
mov
insl
add
sub
jno
ja
imul
add
data16
add
add
add
add
add
dec
add
add
movsb
add
add
inc
add
add
add
add
add
add
mov
jo
dec
add
add
add
rolb
add
add
add
insb
add
add
add
add
xchg
add
push
add
add
mov
aad
jo
mov
add
sti
add
add
add
add
add
sbb
mov
pop
add
popa
add
add
add
add
add
movsl
add
jno
popf
add
inc
add
add
add
mov
push
add
movb
add
roll
add
add
add
add
add
adc
add
dec
add
add
add
add
add
add
add
imul
add
add
movb
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
cltd
add
add
add
xchg
add
adc
dec
add
sbb
add
bound
add
inc
add
add
mov
sbb
cwtl
add
mov
add
add
and
gs
add
add
add
add
or
add
jbe
movsb
add
movsl
add
xchg
add
lea
js
pop
push
data16
scas
mov
cmp
push
ficoms
jp
pusha
lock
mov
inc
ret
fistps
out
fistps
enter
sbb
es
call
sbb
std
push
or
movsb
adc
cld
adc
imul
mov
adc
sti
lret
loope
and
push
cmp
push
mov
sahf
pop
pop
sbb
lds
push
push
mov
cmc
jl
xchg
mov
sub
out
sub
sub
mov
repz
push
fiadds
stos
mov
stc
out
cmc
jns
lods
cmc
jl
lods
jecxz
repnz
mov
sub
ja
dec
lods
jns
add
mov
xor
lcall
cmp
sub
add
push
pop
jb
xchg
xor
push
notb
xor
scas
flds
cmc
out
sti
sub
and
stos
test
mov
jmp
lock
mov
cmp
sbb
lock
fcmovnbe
pop
jle
pop
jp
pop
push
jb
out
push
outsl
xor
mov
sbb
sbb
mov
jo
inc
inc
in
sbb
xchg
push
sub
jbe
cmc
insl
test
mov
or
xor
jmp
pop
and
addb
popa
sbb
arpl
ret
dec
int3
mov
call
and
pop
cmp
cmc
outsb
push
mov
mov
push
xchg
out
in
jecxz
or
stos
adc
enter
pop
out
stc
fisttps
andl
ja
jmp
ret
fwait
adc
cwtl
sub
rcr
les
or
inc
test
lds
sti
sbb
and
addr16
mov
dec
or
push
bound
cli
xchg
push
rep
or
add
jge
pop
mov
dec
dec
xlat
dec
stos
int3
dec
xchg
lcall
into
xchg
push
mov
cmp
sub
popa
dec
rclb
lret
shld
pop
adc
repz
pop
pusha
dec
dec
inc
int3
push
push
and
std
pop
mov
outsb
lahf
xor
fidivl
push
scas
dec
dec
fwait
xchg
int
mov
and
push
mov
jne
sti
or
mov
or
in
popa
mov
stos
inc
jmp
inc
pusha
jno
jle
mov
int3
loopne
int3
push
ffree
addr16
jecxz
sbb
scas
fdivrl
fmuls
fwait
sbb
add
mov
mov
xor
mov
loopne
pushf
push
rcr
mov
cmp
lods
cwtl
and
orl
add
add
add
add
add
add
push
mov
push
push
push
mov
movb
mov
mov
movb
mov
add
push
mov
xor
mov
movb
add
movl
mov
mov
add
mov
mov
add
mov
mov
mov
movb
mov
mov
mov
cmp
je
mov
cmpl
mov
jle
pushl
push
call
mov
pop
pop
movzbl
sub
incl
test
jne
call
mov
mov
mov
movzbl
sub
je
pushl
incl
push
call
pop
pop
jmp
pushl
call
push
push
call
push
push
push
mov
pushl
call
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
jmp
lea
push
pushl
call
pushl
pushl
pushl
pushl
push
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
movl
call
push
mov
call
pop
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
lods
push
inc
es
jecxz
fisubs
and
rcll
jecxz
xchg
xchg
and
push
push
inc
push
jae
arpl
push
xor
mov
xchg
jecxz
repz
cld
xlat
and
mulb
fldt
popa
pop
das
dec
aas
jle
popa
cmp
lods
ret
les
mov
push
pop
ss
and
mov
sti
jge
outsb
jns
xor
mov
sub
out
idiv
std
push
fcomps
filds
jae
popa
dec
imulb
pop
fwait
mov
inc
or
push
inc
outsl
imul
cmp
test
pop
imul
mov
orl
xchg
push
push
arpl
imul
xchg
cmpsb
ljmp
pop
pop
lock
jmp
out
aaa
xchg
inc
jbe
and
xor
jecxz
rcl
imul
imul
addb
imul
push
mov
daa
push
push
mov
mull
imul
outsl
mov
mov
mov
out
int
add
inc
xor
and
insb
fs
sbb
xchg
xchg
xchg
xchg
mov
repnz
ret
push
add
xor
xor
or
dec
test
ret
test
shl
enter
add
and
add
ja
add
jbe
xchg
xchg
ret
cmpsb
repz
xchg
and
mulb
es
arpl
push
add
jbe
xchg
xchg
ret
cmpsb
repz
xchg
and
mulb
jg
pop
dec
imul
in
and
pop
push
push
out
int3
pushf
and
pop
jp
mov
stc
xor
mov
add
pop
cs
mov
shlb
adc
sbb
lock
dec
daa
leave
push
push
les
lea
enter
push
xchg
cmc
mov
or
std
cli
or
pop
pop
xchg
psubusb
xchg
mov
int
repz
push
testl
lcall
adc
dec
fistpll
dec
sbb
cmpsl
add
mov
mov
test
push
ret
adc
addr16
cli
cmp
sbb
leave
icebp
sbb
xor
pop
add
push
xchg
loop
mov
negl
test
mov
stos
aad
in
mov
popa
mov
or
cli
pop
insb
test
das
gs
jg
or
ds
shll
std
shll
orl
mov
mov
insl
mov
push
int
call
sti
lret
xor
insl
push
fadd
into
int
loop
adc
cmpsl
lret
sbbl
pop
xor
jmp
and
jb
repnz
pop
out
jge
cmp
mov
fdivl
rolb
inc
jg
testl
push
out
pusha
lods
cmp
xor
enter
mov
lods
test
dec
cmp
clc
movb
dec
adc
sbb
xor
sub
cmc
push
inc
adc
pop
loopne
loope
push
popa
adc
clc
inc
sbb
popf
aaa
cltd
and
subb
and
jno
or
xor
xlat
add
mov
stos
mov
and
dec
shlb
jp
fwait
lods
mov
cld
repz
divl
adc
shrb
stc
or
pop
xchg
mov
or
les
cwtl
jmp
push
mov
call
dec
xchg
xor
out
clc
adc
jg
dec
pusha
sub
imul
ficomps
sub
pop
cmp
icebp
das
ss
jl
sub
inc
iret
cmpsl
xor
sub
and
sbb
cmp
sub
mov
test
outsb
fnstcw
test
ss
test
pop
cltd
jnp
cmc
cmp
aad
xchg
outsl
or
push
test
xchg
lods
and
pop
push
push
xor
jg
sbb
cmpb
cmpb
push
imul
push
adc
mov
rolb
shll
dec
mov
clc
push
jmp
aad
mov
pslld
cmp
mov
or
push
and
andb
sar
xor
add
xchg
mov
std
xor
mov
pop
mov
aad
xor
je
sahf
mov
insb
aad
cli
cmp
mov
cli
cmp
xchg
sub
ret
loop
fcoml
hlt
adc
or
rcrl
push
ficomps
pop
repz
es
shrl
ja
imul
adc
pop
ds
adc
popf
das
popa
cmc
xor
shl
dec
std
test
mov
cmp
sub
std
mov
ja
mov
outsb
pop
xchg
aad
mov
mov
add
jmp
adc
mov
or
cmp
das
xor
push
fwait
out
mov
mov
repz
imul
cmp
push
xchg
pushl
fwait
xor
cmp
jg
xor
jl
mov
bound
or
cmp
decb
jp
lret
pop
or
rolb
and
fimuls
mov
xchg
es
test
cs
mov
gs
cmp
sbb
push
shlb
adc
inc
movsb
jb
loop
pushw
imul
fldl
dec
jbe
fcmove
or
jecxz
dec
data16
imul
pop
lret
jp
dec
into
mov
pop
ja
jne
pop
pusha
sbb
punpckhbw
in
push
sub
out
lock
pop
aam
add
adc
fsubl
push
fwait
fcmovbe
pop
mov
xor
pop
mov
xor
lea
mov
fcoms
add
mov
insb
mov
ja
push
inc
mov
cmpsb
xchg
and
push
popf
cmp
lds
or
ja
cmp
pop
aaa
xchg
dec
je
xlat
sbb
xchg
jle
or
fs
jl
ficoms
repz
add
sarl
inc
pusha
pop
addb
xor
xor
jbe
push
test
mov
inc
jmp
out
inc
jnp
xor
les
jnp
leave
dec
ss
or
dec
cmovp
push
jno
arpl
repz
gs
jp
ljmp
into
clc
jo
movsl
mov
je
mov
dec
daa
pusha
push
or
inc
or
or
xchg
ss
cld
push
ret
es
sub
push
cmpsl
lods
mov
pop
out
out
and
arpl
sbb
and
cltd
subb
xor
jge
pushl
scas
into
or
cmp
inc
pcmpeqw
jl
pusha
cmp
mov
test
pushf
cld
or
push
pop
jp
sub
dec
pop
pcmpgtb
fcom
jmp
popa
loop
lret
fisttpl
sahf
xor
lea
and
insl
xchg
inc
and
sub
xchg
push
sbb
mov
negb
push
lds
mov
dec
lret
mov
sbb
jno
jg
call
outsl
dec
roll
and
adc
or
push
sub
pop
dec
and
mov
sub
lea
lret
icebp
fistpll
mov
icebp
adc
adc
pop
lods
dec
xchg
jle
adc
jno
cmc
popf
push
mov
ss
fsubrl
xchg
test
clc
hlt
xchg
jb
mov
fdivs
inc
stos
fiaddl
es
test
outsl
sti
test
jne
data16
test
or
jmp
lret
push
sbb
pusha
pop
in
xor
out
outsb
int
cmp
fbld
sarl
fsts
cmp
hlt
push
mov
stc
sbb
addr16
sub
mov
insl
xchg
clc
add
mov
not
aam
xor
outsl
mov
xor
cmp
cld
mov
cltd
mov
push
and
pop
fwait
push
stc
int3
loope
dec
xchg
xchg
out
lods
pop
mov
mov
fsts
mov
insl
xor
stos
fists
add
stc
outsb
push
xlat
ja
mov
ror
and
popa
cltd
xchg
popa
xor
dec
test
daa
imul
test
xbegin
outsb
and
and
std
shrb
push
outsb
xor
aas
dec
cltd
xchg
int3
jne
js
lret
out
dec
mov
xor
arpl
dec
jecxz
push
or
cwtl
shl
pop
dec
aas
cmp
leave
adc
in
dec
adc
xor
ret
xor
jmp
mov
sbb
push
jge
aaa
lods
pusha
test
lods
notl
dec
mov
and
fsubrl
mov
cmp
scas
xchg
mov
popf
adc
insl
pop
mov
outsb
xchg
sarb
lods
mov
ds
xchg
popa
sub
cmpsl
loope
mov
hlt
ja
push
xchg
sub
int
adc
clc
mov
mov
mov
cmp
lea
mov
sub
and
lret
in
and
xor
dec
jnp
inc
sbb
test
jg
loope
aas
inc
mov
xchg
mov
dec
lcall
lock
cmpsl
adc
in
into
ss
mov
inc
add
jb
test
and
divb
loope
shll
jnp
and
es
jmp
jne
and
push
cltd
cmpsl
inc
adc
mov
and
mov
mov
cmc
cmp
add
sub
push
sbb
mov
sub
ja
adc
pop
xchg
xor
mov
sub
rorl
popf
adc
mov
mov
jge
sbb
push
dec
cltd
jo
cmc
adc
cmp
mov
mov
pusha
cmc
add
xchg
xor
xchg
xchg
xchg
cwtl
xor
or
and
pop
xchg
xchg
popa
dec
adcl
fwait
xchg
loope
cmpsl
cmp
sbb
xor
sbb
add
in
in
sbb
cmp
adc
mov
outsb
mov
or
shrl
sub
repz
mov
nop
push
out
adc
lods
pop
mov
mov
aaa
inc
test
jecxz
fdivl
shlb
mov
or
mov
push
xor
adc
mov
int3
jb
adc
mov
cmp
cwtl
ss
and
pop
cld
loope
cld
test
stos
loope
loop
arpl
lahf
rcrl
and
mov
lods
fsubrs
pop
or
inc
lret
xchg
movsl
aam
xor
sbb
testl
mov
mov
cmp
ret
cmp
sbb
add
nop
scas
mov
arpl
xlat
push
sti
imul
and
xchg
add
jl
dec
mov
push
jmp
ds
jle
xchg
pop
les
xorl
out
dec
xchg
push
mov
inc
jmp
xor
or
rcr
add
and
addr16
test
xchg
pop
adc
inc
push
pop
ds
lds
sub
fcomp
inc
add
sbb
mov
addr16
xor
fimull
iret
push
lcall
push
xor
dec
sbb
mov
imul
sti
lds
xor
jecxz
lods
test
insl
mov
inc
std
mov
add
ret
and
add
outsl
and
adcl
xchg
add
scas
pop
sbb
mov
out
push
jg
fldcw
jge
cmp
add
mov
dec
lods
mov
addb
xlat
pop
jns
sbb
dec
sti
jl
enter
and
stos
or
mov
push
js
or
inc
adc
cs
out
adc
sti
es
mov
pop
xchg
lret
shl
xchg
mov
mov
imul
fstps
fisubl
mov
sbbb
jecxz
call
outsb
loopne
sbb
jecxz
dec
repz
aas
inc
or
add
ror
lahf
xchg
xor
insb
outsb
adc
xor
mov
hlt
pop
sarl
clc
push
jae
fisubs
pop
imul
ja
xor
mov
stos
mov
hlt
es
and
cmp
pop
add
mov
xchg
xor
jp
pop
mov
or
pop
and
stos
mov
sahf
ja
cmp
mov
addb
push
and
test
repnz
es
sbb
push
in
loope
out
cltd
aad
mov
cld
pop
mov
mov
inc
add
fucom
pop
into
mov
gs
push
dec
lahf
ret
or
mov
sbb
stc
sbb
cmp
ret
ja
incb
fiadds
or
fstl
jo
or
add
mov
nop
fnstcw
sbb
rdmsr
loopne
mov
sub
push
jns
jb
int
xor
cmp
aas
test
sti
or
lods
mov
gs
rcpps
ffree
cwtl
loope
add
pop
int
popa
out
mov
mov
cltd
mov
sbb
xorl
fs
xor
fcoml
push
xorb
imul
bound
fucomip
xchg
jae
jno
dec
ja
jbe
in
pop
test
cmp
aam
in
mov
lret
cltd
xchg
lock
xchg
popl
ss
lods
fcoml
push
xchg
test
adc
jecxz
fmulp
rcrl
inc
mov
jmp
popa
jmp
adc
jl
pop
push
pop
loop
mov
push
push
int3
std
cli
jno
xchg
hlt
xor
cs
sti
add
dec
xchg
sbb
ds
pop
inc
inc
sub
and
adc
jnp
and
ret
cmpsb
mov
cli
mov
test
adc
lret
orl
pop
jge
inc
popa
sub
jae
mov
lret
jne
add
and
ret
test
cwtl
xor
out
xchg
push
mov
daa
mov
std
pop
rcll
dec
jae
and
aaa
lods
ss
pop
adc
push
add
inc
stc
jb
pop
dec
mov
push
xchg
jg
shlb
repz
sbb
jnp
andb
add
es
xorb
fimuls
adc
aas
push
std
mov
sahf
push
or
adc
lea
xor
movsl
stos
push
pop
jno
add
fnstsw
cmp
pushf
push
lahf
jge
fistps
jecxz
jmp
pop
pop
in
bound
mov
in
mov
cmpb
xchg
mov
dec
cltd
cmp
std
push
sbb
ja
dec
sub
iret
hlt
popa
in
mov
outsl
xor
push
cld
fdivs
aaa
pop
mov
add
out
push
rolb
xor
or
inc
push
hlt
push
inc
jecxz
lock
inc
add
pushf
inc
and
sti
loopne
imul
jecxz
lret
sbb
lock
adcl
iret
sub
jno
test
stc
adcb
cmp
mov
xchg
aam
into
sbb
mov
mov
add
loope
repz
shr
pop
sub
xorb
inc
movsl
mov
push
xchg
sub
inc
es
neg
rolb
pop
jle
aas
sbb
cmpsb
int
pop
mov
ret
ret
adc
pop
mov
xor
or
ret
stos
js
lock
popf
das
scas
imul
sbb
xchg
lahf
add
jo
lret
jbe
pop
push
fnstsw
out
sti
das
jmp
shlb
mov
xor
out
cmp
mov
jae
mov
in
fs
popf
es
push
push
stos
imul
jp
ds
mov
xchg
push
lock
jnp
movsl
lahf
cmp
sbb
push
pop
movsb
bound
lcall
gs
sbb
push
push
sahf
mov
push
or
std
sbb
repnz
mov
inc
mov
and
imul
repnz
cmpsb
mov
xor
jno
arpl
dec
ficompl
push
sarb
pushf
lods
out
push
leave
lods
or
pop
cs
fiaddl
xchg
inc
clc
clc
stc
jp
call
push
sti
inc
ret
imul
cmpsb
adc
fildll
mov
clc
iret
movsb
adc
dec
cmp
jecxz
sub
cmc
xchg
cmpsl
std
cs
ret
push
xchg
insb
stos
mov
je
cwtl
ds
popa
xor
mov
or
sbb
out
clc
pop
and
pop
cmp
neg
ss
xchg
imull
mov
dec
sti
mov
xchg
sub
movsb
and
test
xchg
rcrb
push
loopne
imul
cmc
orl
jl
push
inc
clc
xchg
xchg
push
arpl
leave
mov
or
push
sub
mov
in
je
clc
pushf
pop
sbb
rolb
lock
sbb
je
lcall
sub
movsb
or
mov
movsb
aad
push
enter
lock
pushf
cmp
out
mov
enter
stos
test
or
lret
aas
and
test
and
jno
xchg
xchg
mov
mov
inc
add
mov
add
sub
loop
outsl
mov
mov
and
mov
jae
ret
roll
into
or
or
push
mov
aad
aas
mov
bnd
hlt
out
mov
outsl
adc
ficompl
adc
mov
ret
movsb
adc
fs
in
jbe
out
mov
pop
sbb
into
sbb
push
in
outsl
push
mov
adc
cmpsb
sub
sbb
mov
inc
mov
dec
mov
sbb
push
adc
sub
into
mov
mov
sub
test
shlb
outsl
or
jmp
cmp
in
jnp
adc
cld
cmpsl
dec
sarb
clc
ret
xchg
xchg
in
mov
pop
cmp
dec
cmpsl
sbb
lret
leave
insb
push
sti
push
jp
jl
fistps
imul
inc
add
lods
or
inc
inc
cltd
pop
push
xor
mov
pop
pop
test
mov
jae
insl
add
jmp
cld
and
sub
sub
clc
jbe
imul
sbb
scas
fsubrs
ret
xor
xor
mov
dec
add
mov
subl
popa
sbb
in
insb
xchg
popa
movsl
adcl
cli
shlb
jne
sarb
push
out
sbb
fnstenv
ficoml
mov
cld
and
pushf
and
mov
xchg
add
sub
push
cmp
aaa
cmpsl
or
stc
add
sbb
ljmp
lret
loopne
loop
inc
xchg
mov
jecxz
mov
push
inc
nop
and
jmp
ret
xchg
lods
mov
addb
ljmp
scas
push
fdivp
sbb
add
mov
repnz
popa
inc
lahf
adc
or
xchg
inc
gs
sbb
lret
lret
pop
cmpb
gs
adc
je
icebp
cmp
and
icebp
sbb
shrb
inc
xchg
sub
mov
lahf
mov
pop
sbb
dec
push
cmp
mov
or
hlt
pop
cmp
pop
and
inc
fs
inc
sti
cli
mov
adc
outsb
adc
les
pop
mov
pusha
jae
cmc
fstps
ret
insl
xchg
test
cli
push
fucomi
std
push
sub
xlat
sbb
jmp
test
repz
mov
aam
movsb
push
jp
repz
pop
sub
fs
stos
sbb
std
ror
cmp
ret
cmpsb
lcall
mov
in
mov
movsl
mov
add
jmp
cmp
iret
cmp
and
adc
stc
jmp
add
xor
mov
ret
bound
je
nop
lret
sub
jp
mov
push
stos
xchg
jb
fwait
out
in
mov
dec
lret
sub
data16
lret
lcall
add
sub
les
mov
pop
inc
fmuls
push
bsr
sub
inc
sub
inc
xchg
push
jp
cmpsb
jp
add
fistpl
scas
push
stos
mov
inc
cld
js
pop
mov
sbb
imul
jg
mov
jae
imul
lods
or
lods
inc
push
out
fidivl
stos
mov
testb
mov
hlt
add
push
cmp
mov
and
cltd
orl
aas
lcall
adc
xchg
and
loop
pop
leave
jl
adc
sbb
out
xchg
inc
stc
cmpl
cmp
pop
push
sbb
push
scas
mov
push
sti
js
aad
pop
xor
lahf
mov
mov
mov
mov
sbb
jae
adc
jno
stc
mov
cmp
out
insl
xor
loopne
cmpsl
sub
repnz
loopne
and
sub
js
lret
push
sti
rcrb
outsl
lcall
and
jp
movsl
add
scas
jo
mov
jo
inc
push
cwtl
lret
lock
cmpl
mov
sarl
xchg
loop
mov
lahf
sbb
add
dec
fsubs
xor
stos
xor
inc
xchg
cs
popa
and
adc
loopnew
inc
test
lock
xchg
sbb
push
arpl
fsubs
mov
sub
ds
pop
push
lcall
add
mov
push
mov
insb
pop
test
dec
aaa
cwtl
lcall
das
xorb
cmp
inc
fwait
or
je
lret
adc
js
scas
mov
jg
dec
out
loope
rorb
fs
aad
jne
mov
cmc
iret
jle
repz
lret
dec
fwait
cmpsl
insb
subb
mov
add
lcall
negb
repz
iret
cwtl
or
sub
cmp
xchg
in
dec
fst
or
stos
or
inc
mov
push
pop
inc
dec
add
mov
ficoml
or
scas
lahf
test
nop
sbb
addb
mov
stc
scas
pushf
js
scas
xchg
lahf
daa
das
sub
sbb
cltd
or
out
aam
lods
jo
dec
in
fs
fmull
push
push
mov
fs
add
cmovp
ret
cld
add
push
fs
xchg
xchg
push
loop
aad
dec
mov
lods
jecxz
mov
mov
out
and
mov
push
loop
mov
add
je
mov
cs
lahf
mov
jecxz
xchg
jno
dec
cwtl
outsb
xor
pop
mov
xchg
es
mov
imul
ret
out
rorl
cmp
in
cmpsb
dec
inc
rcl
and
xchg
inc
sub
inc
jno
sbbb
push
pop
xchg
xor
js
dec
test
int3
mov
ja
cmp
cld
jge
rol
sub
scas
movsb
pop
mov
out
mov
fs
sub
cltd
push
ds
mov
mov
movsl
push
dec
xchg
pop
outsb
insb
xchg
and
lret
outsl
fidivl
lsl
xchg
lds
add
stc
adc
jge
jbe
aad
adc
xor
lea
and
cmp
icebp
xchg
mov
cs
pop
sbb
sbb
mov
mov
push
push
adc
not
cmc
std
jno
scas
push
pushf
adc
jnp
out
hlt
repz
js
sbb
add
fadds
adc
cmp
imul
ja
push
xor
pushf
repz
push
inc
sahf
lcall
jo
sbb
inc
xchg
mov
call
adc
dec
lock
leave
adc
shll
stos
andl
clc
test
adc
or
loop
sbb
mov
sahf
push
xchg
testl
cmp
jecxz
in
int3
lea
cmp
and
dec
adc
repz
sbb
int3
lcall
add
cmp
mov
ror
out
fs
repnz
test
mov
add
push
pop
in
popa
pusha
adc
nop
mul
pop
loope
add
or
and
push
and
sbb
aam
inc
mov
fwait
push
mov
sti
aaa
jge
ror
adc
addl
inc
icebp
out
push
mov
push
jmp
aas
pop
sbb
cwtl
jo
nop
mov
daa
and
lcall
mov
enter
cmp
loope
or
pop
arpl
push
add
jbe
xchg
xchg
ret
cmpsb
repz
xchg
and
mulb
es
arpl
push
add
jbe
xchg
xchg
ret
cmpsb
repz
xchg
and
mulb
or
arpl
push
stos
xor
xchg
xchg
ret
mov
xchg
rolb
xor
inc
adc
bound
push
add
mov
and
imul
sbb
sbb
int3
int3
int3
int3
int3
push
ficomps
into
cs
ds
inc
shrb
in
or
sahf
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
fidivrl
outsb
into
jb
push
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
insl
fisttpll
xsha1
cmpsb
dec
mov
pop
inc
lods
push
xchg
dec
out
push
mov
test
data16
push
inc
pop
into
push
arpl
mov
imul
gs
movsb
js
mov
and
or
push
lret
out
add
ficoms
call
adc
sti
mov
hlt
ret
push
daa
aam
outsb
or
mov
pop
ljmp
dec
nop
aam
push
mov
cwtl
mov
push
mov
out
xor
das
icebp
stos
push
inc
scas
push
arpl
push
push
pop
outsl
aam
mov
xorl
push
push
ds
icebp
pop
es
imul
lahf
inc
xchg
mov
jmp
dec
hlt
sbb
repnz
fistps
ds
cmp
push
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
incb
fidivl
dec
pop
out
and
pop
out
clc
aas
cli
iret
daa
lcall
pop
mov
stos
inc
stos
pusha
or
fwait
pop
out
or
xor
outsb
xlat
jle
jmp
pushf
aaa
out
sub
mov
pushf
push
jp
inc
mov
mov
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
fidivrs
sub
ljmp
out
jmp
hlt
adc
insl
jecxz
add
pop
aaa
daa
jecxz
mov
or
adc
jo
cwtl
sbb
in
daa
adc
push
dec
inc
out
mov
mov
jne
es
sbb
std
imul
fildl
sahf
mov
cwtl
movsl
stc
int3
pushf
sbb
dec
outsb
dec
push
popa
mov
sub
cmpsl
cmpsb
jl
jmp
adc
nop
loop
sbb
mov
pop
push
mov
cltd
faddl
cmc
fidivrs
divb
sub
inc
mov
clc
imul
orb
fsubl
add
sub
sub
sbb
test
mov
adc
dec
push
imul
pop
xor
loopne
and
fisubl
fsubl
push
lahf
outsb
or
add
dec
fldl
jl
mov
test
push
jmp
sub
and
ret
add
and
pop
xlat
in
sbb
lea
xchg
popf
dec
xor
test
jge
or
mov
aam
loope
test
loop
std
xchg
adc
and
div
add
jne
sbb
sub
aaa
test
jno
cltd
sbb
or
cmovp
pop
mov
adc
out
dec
fsubl
fwait
cli
icebp
dec
nop
mov
mov
icebp
or
dec
clc
cmp
jecxz
das
repnz
xchg
mov
int
sub
mov
mov
lock
outsb
push
je
movsb
push
add
inc
mov
les
cli
xor
adc
inc
mov
into
sbb
mov
rcl
jbe
inc
xor
or
lret
das
fnstsw
xor
nop
popa
leave
adc
xor
dec
gs
je
sub
pop
sub
adc
add
repnz
int
xchg
sahf
mov
xor
adc
testb
rclb
add
xchg
dec
mov
pushf
mov
loope
lret
push
fisubl
out
ljmp
jmp
and
icebp
cli
xchg
or
jp
cmp
xor
in
sbb
jl
out
sub
mov
stos
lea
push
hlt
or
out
jo
insb
outsb
xchg
icebp
sub
pop
inc
inc
add
je
outsb
jmp
dec
inc
fidivrl
bound
popf
inc
mov
lcall
add
shrl
mov
push
stc
add
rcl
out
pop
test
xchg
outsl
cmc
rcrb
mov
mov
mov
inc
adc
nop
outsb
and
xchg
adc
into
hlt
mov
fildl
fistpll
filds
add
jne
sub
add
mov
lret
adc
mov
int
mov
dec
pop
mov
sub
test
jge
fwait
jl
adc
sub
xlat
xor
add
mov
shl
bound
stos
lea
mov
or
push
mov
and
and
cli
pop
jb
xchg
imul
loop
jno
sbbb
aaa
adc
adc
and
cmpsl
adc
cmpb
loope
pop
pop
testl
and
in
cmp
jns
xchg
gs
lret
push
xchg
xchg
cmp
test
dec
jmp
das
jbe
test
add
repnz
pushf
mov
xchg
addr16
jne
sbb
mov
pop
lret
ss
ds
add
sbb
and
jle
or
lods
insl
add
ret
sbb
or
sub
add
mov
jo
dec
rorl
jp
mov
push
cmc
out
aad
or
js
fcoml
push
sbb
arpl
sbb
gs
xor
jmp
jo
cmc
cmc
xchg
push
and
push
arpl
adc
push
mov
mov
jle
outsl
mov
stc
ds
jb
idiv
push
mov
pop
cwtl
gs
adc
clc
or
js
inc
xchg
jge
das
out
fmuls
xchg
inc
hlt
addl
or
cs
lods
jl
dec
test
repnz
leave
iret
pop
stos
and
pop
movsb
jo
dec
or
pop
out
lcall
dec
xlat
and
loopne
mov
mov
push
push
xor
test
movsl
mov
adc
and
adcb
ret
mov
dec
xlat
xor
ljmp
enter
fcompl
cmp
and
sahf
movsb
es
shr
out
js
call
mov
and
pop
nop
and
stos
push
sbb
cs
int
push
sub
shll
or
or
lds
in
jge
loop
rclb
mov
inc
out
sbbb
or
push
les
add
dec
sbb
xadd
adc
pop
fwait
add
xor
js
les
sub
add
lods
lock
sub
mov
aas
mov
cmpsb
decl
aas
test
and
inc
dec
fs
lcall
xchg
cmpsl
jp
and
pop
out
mov
jne
mov
cwtl
outsb
adc
mov
sbb
xor
jbe
xchg
aas
push
addl
push
imul
test
mov
fdivrl
sti
xlat
les
adcl
mov
push
xchg
xor
sub
jge
pop
mov
jo
mov
sub
inc
test
rcl
arpl
adc
adc
ljmp
add
dec
test
mov
jp
xor
inc
adcl
test
lret
dec
mov
insb
shll
xor
jae
test
aad
cwtl
scas
jge
mov
test
jmp
jbe
and
xchg
mov
out
insl
ja
mov
cwtl
je
pop
fsubl
mov
lcall
pop
xor
sub
and
cli
pop
dec
pop
enter
popf
es
movsb
xchg
ljmp
inc
loopne
fdivrl
repnz
push
or
pushf
add
pop
les
pop
jmp
stc
pushf
xlat
shrb
dec
out
push
mov
xor
and
xor
in
rol
jle
lahf
inc
mov
aas
fcom
jb
mov
or
push
loopne
mov
repnz
mov
dec
sbb
ljmp
mov
ljmp
lods
sbb
sub
lcall
sbb
outsb
xor
out
fadds
add
or
std
push
int3
xor
and
mov
adc
push
sbb
fldenv
addps
jle
loop
ret
inc
cmpsl
hlt
cmp
inc
out
ret
xchg
lock
sbb
ret
xor
in
clc
mov
xorl
dec
jbe
add
mov
mov
outsl
pop
mulb
shrl
movsb
mov
fiadds
mov
jecxz
movsb
mov
cmp
mov
xchg
clts
ret
icebp
dec
fucomi
xchg
dec
shlb
inc
xchg
xor
scas
aaa
xchg
lods
inc
xchg
addr16
dec
xchg
inc
xor
test
lea
fwait
insb
bound
cmp
mov
imull
mov
into
mov
gs
shr
mov
fadds
push
cli
loope
popa
sbb
stos
mov
mov
lods
out
call
js
jmp
or
in
mov
pop
add
push
lods
out
loop
adc
inc
clc
mov
fcoms
enter
pop
cmp
fidivl
pop
mov
push
cwtl
sub
jecxz
iret
lods
jne
fs
push
pop
shrd
sbb
pop
dec
roll
adc
mov
rcrb
out
movd
push
inc
push
cmp
xor
out
xchg
nop
les
xchg
shlb
mov
jae
lret
pushf
xor
or
mov
lret
fildll
popa
cmp
mov
insb
inc
add
mov
sahf
aas
push
mov
or
bound
cmp
jp
inc
in
lahf
add
cs
add
pop
shlb
outsl
repnz
push
sub
xchg
or
inc
adc
jne
sbb
push
jmp
mov
scas
ret
xchg
inc
mov
test
outsb
loop
ss
or
call
cmp
sti
daa
ficoml
adc
sub
repnz
lcall
into
or
pop
mov
and
in
inc
shlb
xor
ss
divb
iret
stos
mov
mov
sub
adc
inc
or
in
push
sub
int
jle
nop
xchg
adc
fwait
ret
mov
into
loopne
cmp
iret
xor
movsb
lret
jae
fcoml
xlat
mov
pop
lret
pop
mov
xlat
lds
fwait
pop
jg
filds
clc
xchg
pop
jne
inc
pmulhuw
hlt
les
insb
xor
mov
or
mov
fcomp
std
push
aad
fldenv
popa
xor
addr16
inc
jecxz
lods
fs
dec
les
mov
shl
add
lahf
int
fcoms
das
xlat
shl
mov
dec
ss
pop
xor
or
push
sbb
scas
mov
xchg
or
jp
sbb
sub
rcrl
jle
mov
mov
cmp
std
fs
je
pop
nop
nop
xchg
adc
cmp
aam
mov
lret
dec
ja
lock
adc
cmpb
lahf
rclb
cmp
test
or
add
ret
pop
test
xlat
in
pop
cmpsb
xchg
sarb
fwait
sbb
xchg
xor
cmp
pusha
mov
fwait
aaa
pop
xor
mull
dec
lret
fldl
inc
fcomps
mov
aas
negb
sbbb
sub
testb
popf
pop
pop
test
xor
xor
pop
cmc
pop
or
aam
or
mov
paddb
and
dec
ljmp
das
cmp
ror
je
cmp
jecxz
cmpsl
stc
ret
fisubrl
jle
adc
sbb
lds
addr16
adc
lods
ret
mov
sbb
push
mov
or
pop
sub
mov
mov
xchg
std
lock
mov
insb
dec
cmpsb
lahf
lds
sub
and
inc
cli
inc
mov
mov
aad
sub
cmp
popa
jp
ret
in
fcmovnu
mov
push
sub
js
mov
pop
int3
and
xchg
js
loop
ds
out
push
pop
sub
lods
jno
std
adcb
lods
inc
pop
ret
in
out
into
xor
pop
adc
je
add
and
fwait
and
inc
inc
cmp
add
cmp
je
pushf
xchg
sti
push
into
pop
fistl
xchg
mov
cmc
push
lods
movsb
lds
mov
icebp
setl
insl
add
pop
xchg
pop
fstpt
lcall
sub
inc
jbe
mov
push
sub
mov
jnp
fdivl
scas
stc
dec
sti
outsl
mov
in
xor
les
cmpsb
je
insl
cmp
adc
push
hlt
sbb
sahf
cmc
sbb
cmovae
pop
pop
lret
jns
cmp
add
or
mov
scas
pop
mov
and
in
mov
jl
test
push
xchg
sub
xor
aaa
dec
lea
xchg
and
jg
pop
aad
mov
loopne
sub
mov
mov
xchg
push
jmp
fdivl
and
mov
pushf
mov
adc
pusha
jle
inc
pop
adc
dec
sbb
lock
lods
push
dec
test
sahf
cmpsl
adc
mov
test
xchg
loope
jnp
aas
ss
sub
adc
pop
data16
and
push
inc
jns
inc
js
lret
sub
cltd
mov
movsb
fidivrs
leave
js
pop
and
aad
leave
hlt
sub
mov
inc
test
out
les
or
iret
jmp
lcall
lahf
mov
add
cmp
dec
cmp
or
push
cmp
push
inc
fdivrs
leave
inc
mov
sub
cli
or
mov
or
mov
sbb
sub
dec
rorb
or
dec
mov
cltd
xchg
movsb
fnstcw
mov
ljmp
mov
cmp
cmc
mov
cmp
adc
push
aam
cwtl
das
pop
xchg
lds
pop
sbb
sbb
and
cmp
mov
mov
cmpsb
sarl
adcb
jno
jmp
jmp
push
fldcw
mov
repz
pop
movsb
fbstp
fwait
pop
imul
cmp
iret
sarl
out
outsb
negl
aas
lcall
jb
fidivl
mov
sub
and
in
dec
test
cmpl
movsl
pop
fdivr
xor
jb
jge
jge
pop
cmp
enter
mov
jno
pusha
lods
sub
lods
sub
aam
fs
cmc
and
cwtl
xchg
and
fbld
mov
mov
js
je
add
incb
scas
rcrb
lcall
jne
shlb
push
scas
dec
fs
popa
lahf
sbb
testl
mov
out
sbb
xchg
jecxz
or
test
stos
fstl
mov
and
add
mov
dec
xchg
shlb
ret
sarb
jb
int3
dec
cmp
aad
iret
xchg
push
fwait
cltd
xchg
imul
jnp
fsub
js
es
das
mov
pop
add
hlt
fldt
rcrb
pusha
mov
ss
fwait
insb
push
xchg
ffree
or
jge
mov
cs
ds
loopne
inc
pop
push
sbb
pop
or
cld
xchg
sub
mov
or
xchg
into
ret
repz
imul
mov
pusha
ss
repnz
xor
loop
push
test
idivl
outsb
sbb
mov
ficoms
decb
loopne
xchg
mov
mov
jg
rcll
push
jns
sti
inc
add
pop
lea
sbb
mov
fimuls
call
mov
outsl
or
out
xlat
inc
xor
adc
jmp
cmpsl
int3
cmp
sbb
mov
packsswb
imul
lds
or
push
nop
mov
outsl
aad
cltd
cwtl
lds
stc
mov
repz
and
jl
int
mov
jbe
inc
jnp
scas
rol
xor
sbb
jl
sub
sub
aaa
jle
lret
shrl
faddp
je
and
sahf
insb
fidivl
inc
pop
sbb
inc
sbb
and
pop
sbb
pop
xor
test
in
into
push
movsb
inc
repz
inc
cld
fnstenv
lds
popa
pop
adc
and
xchg
leave
cs
into
hlt
ja
cwtl
sub
test
ljmp
lahf
or
arpl
loope
stos
std
pop
push
dec
push
outsl
pop
and
sti
dec
loope
xor
outsb
mov
dec
xchg
push
cld
ja
inc
mov
push
fidivs
ret
arpl
or
push
lahf
pop
pop
mov
rcll
out
loopne
push
xor
lods
movsb
push
ljmp
insl
fwait
and
repz
movsb
fldt
dec
jmp
or
pop
mov
xchg
nop
scas
cmp
dec
pusha
inc
mov
jns
xor
mov
pop
mov
idivb
lds
subl
repnz
addb
nop
fimuls
pop
sbb
out
add
inc
and
loopne
mov
sub
clc
in
in
xor
stos
fdivr
pop
inc
push
adcl
jb
orl
mov
arpl
mov
pop
jmp
or
mov
cmp
cmpsb
test
jmp
pop
scas
aaa
arpl
adc
adc
and
and
into
loop
mov
pop
fs
cli
jge
jbe
mov
ror
cmc
inc
mov
fidivl
or
push
fisubrl
jb
xor
xor
divl
je
adc
int
and
mov
inc
stos
lods
arpl
das
repz
xrelease
out
mov
test
fdivrs
sub
add
push
popa
mov
in
sbb
cltd
dec
sti
or
adc
stos
jns
lods
int
iret
or
ja
sub
addb
xchg
out
lcall
insl
addb
or
xchg
stc
mov
jo
mov
lea
xchg
fmuls
jne
iret
cltd
pushf
cld
pusha
pop
mul
imul
test
out
inc
lock
shll
or
mov
xor
inc
xchg
jp
pop
cmpsl
and
std
in
mov
xlat
xchg
js
mov
jl
sti
push
xor
cli
std
insb
stos
lret
cwtl
pop
cmpb
out
test
mov
das
rolb
pop
sahf
sbb
dec
adc
testl
jno
lds
nop
out
or
jo
rclb
arpl
add
mov
push
and
mov
test
sub
out
mov
sbb
inc
imul
xor
xchg
fdivrs
stos
sbb
mov
ret
jns
and
push
cltd
les
mov
aaa
scas
inc
decl
scas
xchg
sbb
insl
jmp
je
adc
aam
jle
sarl
sar
mov
mov
sub
xchg
sub
jb
stos
je
outsl
bound
pop
enter
imul
xor
xor
lods
pop
sub
xor
dec
xor
pop
pushf
stc
jge
jl
adc
push
jb
data16
pop
xchg
and
cli
push
sarl
add
stos
out
push
mov
sahf
fwait
shr
dec
xchg
lret
pop
faddl
icebp
jbe
addr16
xchg
dec
mov
dec
pop
jnp
pop
neg
sub
jl
idivb
loope
sarl
fs
mov
ljmp
pusha
dec
aam
and
mov
dec
pop
inc
enter
and
mov
rorb
gs
imul
mov
popa
cmp
test
cmp
clc
inc
inc
sahf
cld
jb
std
adc
in
mov
cs
adc
movsb
mov
enter
jle
aas
cli
mov
sarl
std
jg
push
dec
ljmp
xor
adc
adc
jnp
inc
leave
cmp
lea
rcl
outsl
mov
not
insl
add
jl
xchg
mov
dec
xchg
fnstsw
das
rorb
adc
aad
sbb
mov
sbb
repnz
stos
adc
xor
push
pop
or
jb
add
in
jns,pn
pushl
gs
out
outsb
and
xchg
mov
sbb
shrb
xor
into
mov
in
jl
test
testl
imul
fldl
test
adc
ror
push
in
jl
sbb
xor
dec
or
aam
inc
xor
and
mov
ljmp
insl
inc
xor
push
pop
dec
fdiv
arpl
cmp
xorl
in
loopne
mov
mov
or
cli
jg
insb
bound
ficomps
inc
ja
mov
mov
pop
insb
dec
cmc
xchg
inc
iret
adc
fdivrl
stos
add
je
iret
or
jecxz
inc
adc
mov
movswl
xor
cmpsl
mov
adc
bound
inc
nop
jbe
pop
ss
mov
add
aas
cmpsl
mov
xchg
inc
lret
mov
adc
push
or
icebp
mov
sbb
aam
cmp
inc
lock
cli
inc
lock
xchg
xchg
or
cmpsl
stos
mov
rolb
cmpsl
ficomps
adc
dec
dec
js
or
mov
mov
lea
mov
cs
xchg
push
test
mov
adc
les
lods
rolb
pop
cmpsb
mov
cmpsl
jae
pop
mov
xlat
mov
pop
fdivr
sub
or
loopne
pop
push
fmull
jl
out
sub
push
pop
das
arpl
fbstp
and
mov
sbb
sub
sub
test
jne
jg
jbe
xchg
jno
repz
cmp
scas
push
xchg
inc
lret
jg
scas
inc
ss
je
inc
adc
xor
mov
mov
cwtl
into
cmp
jo
mov
jnp
mov
sbb
jb
add
xorl
fcmovnu
lock
xor
adc
push
lret
mov
cmp
lds
mov
notb
out
test
scas
enter
imul
nop
mov
int
std
cmc
inc
and
cli
jbe
movsl
jmp
adc
stos
or
jne
fidivrs
jne
xchg
adc
adc
jo
xchg
out
sbb
jle
insl
xor
sbb
adc
fdivrs
push
outsb
adcl
aad
test
jns
fstpl
adc
sar
push
mov
sub
scas
add
adc
lds
adcl
cld
addr16
mov
outsb
dec
enter
ja
adc
mov
push
addr16
mov
test
sarl
out
sbb
ret
add
cs
sti
icebp
dec
fnsave
pop
inc
xor
in
arpl
dec
stos
or
call
aas
je
jmp
cli
test
jo
pop
sahf
xor
popa
repnz
sbb
aas
lock
test
xlat
cltd
js
xlat
out
je
mov
jo
jmp
mov
andb
dec
sub
cmp
out
out
jge
or
dec
jno
outsl
and
jnp
mov
sub
lods
dec
push
sbb
shrl
xchg
cmpsl
sub
sbb
mov
mov
stc
es
mov
sub
lods
inc
and
shlb
sbb
iret
mov
popf
inc
fwait
ja
cmpsl
xchg
or
les
jb
or
and
mov
aaa
cmc
call
add
mov
jno
ror
pop
xchg
and
inc
mov
mov
test
xor
push
popl
sbb
xor
aad
mov
jb,pn
adc
jbe
cmc
push
dec
and
and
sahf
pushf
pop
mov
ret
mov
cmp
sahf
mov
adc
in
insb
jmp
es
repz
mov
in
add
sti
adc
hlt
inc
bound
and
mov
mov
es
in
and
sbb
sbb
test
pop
jecxz
add
out
movsl
enter
rol
ja
mov
js
xor
mov
ret
add
dec
aam
or
inc
shr
call
fstpt
add
movsl
out
sub
scas
mov
add
jne
cmc
in
sub
int
xchg
mov
nop
xchg
movsl
ss
fucomp
frstor
into
jg
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
in
jle
sbb
roll
int3
int3
int3
int3
int3
nop
push
sbbl
mov
jle
add
jle
xor
xchg
xor
inc
fbstp
jae
testl
mov
pop
rep
jecxz
adc
and
jae
arpl
sub
jno
and
jnp
int
mov
jle
mov
mov
cmp
aas
mov
inc
iret
outsb
mov
lret
hlt
ret
mov
insl
enter
xor
cmc
scas
cmc
push
inc
inc
stos
ja
cmp
jg
xor
std
pop
inc
sarl
outsb
hlt
in
ja
mov
fildll
jae
pushf
scas
insl
push
faddp
cld
mov
sbb
adcb
mov
lahf
es
inc
inc
xor
loop
arpl
dec
sub
push
cmp
sub
ret
pop
or
jecxz
adc
popa
mov
fnstsw
lods
fiadds
jb
arpl
insb
into
mov
xchg
sarl
xor
lds
js
push
mov
push
mov
inc
into
mov
push
or
add
aad
in
mull
mov
lcall
adc
enter
mov
mov
pop
rep
inc
jle
mov
mov
inc
out
arpl
outsl
fstpt
or
or
push
xchg
inc
into
and
push
fisubs
jb
retw
or
mov
je
push
in
xor
pop
in
sub
and
rorb
inc
cmpb
outsb
jecxz
adc
and
jae
arpl
xchg
push
sbbl
mov
pop
rep
jecxz
adc
and
jae
arpl
xchg
push
and
stc
sbb
sub
popf
cmp
jp
lock
hlt
mov
andb
xlat
in
ja
ret
fsubrs
and
pop
js
cmc
pop
stos
cltd
std
and
aad
sub
ret
sub
pusha
mov
out
cmpsb
clc
ret
mov
pop
movsl
sub
shrb
sahf
lret
aad
lret
outsl
or
outsb
sbb
xor
int
loope
lcall
loope
push
incw
mov
pop
xlat
aad
enter
insb
gs
inc
fcoms
es
or
sub
vaddsd
lds
outsl
add
mov
inc
xor
adc
lods
pushf
daa
inc
jae
xor
jb
mov
outsl
and
or
dec
push
push
mull
out
clc
out
in
dec
dec
testl
shrl
or
or
xchg
lcall
adc
pop
rclb
xchg
mov
push
dec
pop
mov
push
sarb
lea
or
or
loope
add
pop
aaa
add
insb
mov
adc
jg
push
or
jno
add
rolb
xor
push
xchg
subb
jno
sub
push
fiadds
aam
mov
faddl
xchg
fistpl
cmp
and
pop
xor
gs
aaa
loope
jo
popf
nop
stc
daa
lret
push
frstor
pop
inc
lcall
paddq
mov
popf
pop
push
lods
jle
aaa
jge
xchg
fmul
fistps
test
add
rorl
pushf
jne
push
sbb
imul
daa
mov
andl
imull
adc
xor
xchg
test
jae
adc
or
js
roll
mov
dec
xor
into
xchg
push
jmp
add
out
jno
lcall
stc
adc
sbb
roll
in
xor
stos
dec
cld
dec
cmp
sbb
aad
imul
adc
aaa
mov
outsl
dec
adc
jmp
clc
cmp
mov
pop
les
mov
inc
int
cmp
mov
jge
mov
rcll
and
mov
imul
dec
pop
push
popa
dec
mov
ret
fwait
add
ret
cwtl
jns
testb
and
adc
pop
es
lods
gs
js
popa
inc
lods
and
xor
test
dec
or
mov
lock
sarb
mov
test
jnp
stos
cmc
loope
or
adc
scas
cmp
iret
mov
aam
stos
sub
into
popf
xchg
xchg
and
pop
das
mov
mov
pop
add
push
xchg
lods
jecxz
pop
sub
cmp
mov
ljmp
mov
add
stos
std
cs
xor
jns
push
xor
and
stos
adc
pop
das
push
ljmp
test
test
mov
jns
adc
xacquire
in
or
push
outsb
cmpsb
in
mov
cmc
mov
dec
jb
jns
insb
ret
cmc
mov
mov
pop
ja
add
dec
icebp
imul
or
sbb
inc
pop
arpl
in
mull
dec
jns
jns
js
inc
cmp
sbbb
and
adc
lods
xor
pushf
fsubrs
mov
cmc
add
dec
stos
mov
sub
add
hlt
iret
int
lds
fnsave
mov
in
scas
fldt
out
insb
ds
mov
sbb
xchg
push
cli
sbb
inc
mov
mov
ret
out
inc
adcl
lcall
cmp
fsincos
xchg
adc
mov
add
aaa
add
out
cmc
sarl
out
jge
stos
icebp
out
mov
xor
or
jbe
test
rclb
mov
pop
adc
xchg
sti
jns
mov
mull
mov
jle
jle
sarb
int3
lods
dec
test
ja
inc
xor
das
es
jp
pop
icebp
dec
es
jb
sbb
inc
or
sub
lds
paddw
jle
push
iret
sti
test
inc
sub
cmc
jmp
dec
mov
cli
out
and
push
add
sbb
adc
aam
mov
sbb
imul
push
xor
cmc
inc
mov
bound
pop
push
pop
in
mov
subl
or
jb
sbb
insl
push
jge
mov
push
cmpsb
insb
movsl
cli
int3
mov
sub
aas
das
cld
cwtl
mov
call
push
insb
mov
insl
imul
lret
and
sub
js
push
add
cmp
fs
loope
cmp
jbe
pop
cld
fcmovu
jl
cmp
jbe
stos
lods
loopne
mov
push
inc
cli
das
cltd
aaa
repnz
shll
adc
jmp
mov
int3
jge
add
mulb
repz
es
nop
js
or
or
outsl
push
cmpsl
push
xchg
pop
xor
mov
sti
xchg
iret
fists
jo
sbbb
or
push
pop
pusha
scas
rcl
and
sbb
rcrl
dec
subl
mov
aas
pop
jmp
mov
lcall
push
sahf
and
cmpsl
mov
aad
out
and
mov
iret
daa
mov
xor
cmp
movsb
push
imul
push
movl
jmp
push
repz
bound
cld
sahf
aad
stos
mov
inc
jge
mov
mov
jle
add
sbb
call
mov
dec
adc
sub
enter
loopne
xor
inc
imul
mov
pop
mov
or
push
pusha
outsb
aas
sub
mov
sub
aas
pop
cwtl
out
jmp
add
jecxz
or
fsubl
mov
push
mov
das
xchg
lods
out
lds
cwtl
jecxz
scas
mov
cmp
mov
xor
push
test
inc
scas
mov
js
xchg
xor
mov
ja
pop
icebp
sahf
cmpsb
dec
nop
orb
cmp
jnp
mov
stc
inc
pop
cli
push
xchg
sbb
callw
imulb
jl
fcompl
pop
sub
add
cs
outsl
cwtl
ret
scas
icebp
lea
mov
xchg
das
sub
xlat
mov
xlat
mov
pop
sub
test
ficompl
pop
into
mov
mov
cmp
pop
lret
dec
mov
or
inc
rorb
sub
loopne
jl
jecxz
in
sbb
inc
sub
inc
mov
out
mov
fsubr
mov
incb
lods
xchg
push
add
mov
je
ret
scas
cmp
add
mov
int
sbb
shr
xor
adc
sub
daa
arpl
cmpsl
adc
daa
push
insl
mov
pop
aas
in
cmp
push
outsb
xchg
insb
jb
inc
cmp
jge
add
decb
inc
call
mov
test
dec
rorb
and
mov
lret
dec
daa
xchg
add
sti
xor
cmp
scas
into
add
cld
in
in
adc
xor
push
test
dec
cmp
pop
gs
lret
popa
in
push
addl
pop
dec
inc
push
dec
ds
shll
adc
adc
loop
sbb
lods
sub
pop
mov
fwait
inc
mov
push
lcall
inc
xor
mov
cmc
int
xchg
dec
inc
xor
mov
in
rcrl
xchg
lret
fsubl
outsl
dec
lret
scas
nop
pop
pop
xchg
or
or
fdiv
ret
rorl
cld
pop
and
sub
push
out
sub
pop
mov
hlt
push
pop
cmp
int3
adc
addr16
sbb
cmp
out
shrb
push
or
pushf
fimull
mov
inc
cltd
les
cmp
loopne
shrb
mov
fcoml
mov
movb
mov
call
xor
xchg
and
repnz
xor
mov
push
mov
icebp
enter
mov
lock
adc
pop
and
jno
pop
clc
lcall
mov
pop
jb
sbb
scas
popf
inc
fistl
adc
loop
mov
gs
mov
aad
xor
jno
or
stos
aad
or
hlt
pop
mov
popa
in
data16
js
sbb
mov
cs
jg
mov
imul
mov
mov
xlat
xlat
push
popa
iret
xchg
dec
pop
mov
cmp
rclb
push
push
in
xchg
jecxz
xor
mov
sub
mov
xchg
daa
insb
scas
int
lea
xchg
jp
dec
icebp
sbb
adc
test
in
xchg
push
jae
int3
jmp
dec
adc
mov
add
mov
outsb
fldt
loop
inc
loop
adc
sbb
out
mov
and
test
sbb
test
cmp
insb
jmp
test
ficoms
cltd
push
pop
dec
sti
popa
outsb
jp
mov
ss
fidivl
shll
cmpsl
leave
loop
adc
cld
pop
adc
scas
cli
push
enter
jp
addr16
jo
adc
xor
outsb
fcoml
dec
call
push
sbb
icebp
lods
mov
es
xlat
xchg
std
into
or
or
adc
in
adcl
pushf
push
jp
cmpsb
popf
jp
mov
leave
cld
sbb
int
mov
imul
sub
sub
adc
dec
test
mov
pop
repnz
mov
insl
shrl
aaa
test
test
or
test
leave
ficompl
mov
lock
mov
ror
repz
rorl
setge
xchg
repz
sbb
in
scas
ljmp
outsl
std
fildl
xlat
xchg
cs
aam
pop
cmp
mov
out
test
mov
xor
pop
push
xor
repz
fdivl
bound
into
adc
push
mov
pop
insl
mov
negl
call
add
lahf
notl
pop
fidivs
imul
sub
out
or
rcll
sbb
ja
jne
sbb
mov
mov
jnp
pop
gs
xchg
pushf
xchg
inc
add
orl
ret
sub
scas
adc
and
cmpsl
adc
test
jb
pop
jae
xor
sub
sub
mov
insb
xor
cmp
jns
jecxz
sbb
mov
nop
sub
call
push
dec
cmpsb
into
or
stos
jge
pop
sub
xchg
push
arpl
sarl
jmp
pmullw
jb
mov
stc
leave
adc
dec
pop
push
xor
shll
mov
dec
icebp
in
insl
fs
lahf
sub
jecxz
inc
cmp
pop
fbld
mov
cltd
ljmp
sbb
call
lock
jp
jp
fimuls
enter
xchg
dec
pop
jne
les
ja
cli
mov
push
mov
out
xor
roll
enter
aam
in
jne
xchg
cmp
lcall
push
xor
jae
cmp
and
inc
push
add
inc
adcb
out
adc
enter
adc
xlat
test
repz
inc
into
jp
je
xchg
adc
jo
fisubrs
enter
and
pop
or
test
push
dec
cmc
add
ljmp
lret
adc
mov
xor
pop
arpl
fisttpl
add
iret
hlt
cmpsl
or
mov
xor
rorl
or
aad
sahf
push
xor
out
push
shrl
mov
movsb
dec
mov
pushf
mov
or
cwtl
dec
or
cmpsl
in
shl
out
testl
sbb
sub
stos
add
in
sub
iret
out
addr16
aas
mov
xchg
pop
aas
cmpsl
dec
lock
adc
mov
sub
and
stc
cmp
rclb
or
mov
ljmp
ss
clc
inc
xlat
xor
push
outsb
add
lahf
fistps
or
das
outsb
mov
sbb
sbb
mov
mov
repnz
stc
and
jg
insl
mov
movzwl
cmp
out
out
aaa
pop
sub
cmp
data16
and
sub
xlat
push
mov
jae
jnp
xor
imul
out
icebp
stos
or
push
adc
stos
jo
inc
mul
and
or
arpl
fucom
xchg
jle
and
dec
xor
adc
icebp
popa
arpl
cltd
jno
sbb
adc
rcll
sub
mov
repz
sahf
movntq
and
fwait
jae
insb
repz
std
adc
xchg
and
pop
push
sahf
mov
fistpll
push
cs
lds
pop
xchg
adc
adc
divb
xchg
popa
pusha
stos
aas
out
xchg
jne
out
or
mov
sbb
sbb
push
xchg
imul
and
or
outsb
in
or
loop
andl
mov
insl
inc
rorl
jge
stc
arpl
out
or
ljmp
add
pop
aaa
movsb
dec
jl
jg
fistl
jbe
lret
jae
dec
jae
cld
adc
aas
cld
mov
es
mov
rorl
jno
movsl
enter
and
inc
jecxz
adc
rorl
xchg
in
movsl
imul
pop
jo
dec
xor
adc
jno
mov
in
aaa
test
divl
jmp
and
insl
fildll
jle
and
lds
movsl
movsb
lret
sahf
aas
test
std
pop
jns
je
ret
sub
xchg
movsb
es
aas
je
jle
inc
mov
push
xchg
xchg
imulb
call
jmp
cmp
and
dec
push
pop
enter
lahf
cltd
cli
mov
xchg
mov
sbb
ss
mov
dec
ss
cli
xor
jg
test
pop
cmp
in
sahf
and
mov
imul
inc
xor
inc
xchg
add
inc
xor
out
movl
lcall
cmp
movsl
clc
stos
fs
stc
repnz
add
adc
les
subl
xor
fimuls
xchg
adc
jnp
shlb
pop
or
test
push
fistpll
int
adc
adcb
ret
mull
push
stc
mov
sbb
dec
std
leave
jp
inc
push
push
sbb
mov
fcmovu
lock
sub
cmp
jg
inc
mov
pop
jle
and
xchg
mov
test
notb
or
ds
push
and
arpl
popa
push
repnz
push
pop
jg
mov
pop
repnz
scas
rorb
sub
inc
fmull
movsb
shll
jb
in
cmovle
fwait
test
sub
add
push
loop
jp
nop
push
mov
les
fmuls
pop
push
subl
gs
nop
fwait
jnp,pt
xchg
xchg
inc
cmp
push
repnz
jne
jge
int
into
ja
les
out
lds
and
andb
and
mov
fsubrl
dec
scas
add
es
movsl
mov
js
xor
or
pop
adcl
jno
cmc
inc
pop
aas
push
xchg
cmpsb
and
inc
inc
xor
sar
sbb
jp
gs
idivl
mov
inc
lods
xchg
stos
jne
aad
sbb
push
test
mov
neg
pop
and
xchg
mov
inc
push
rcrl
pop
mov
outsb
mov
sbb
test
sahf
dec
dec
test
jns
inc
popf
jl
lcall
sub
das
data16
das
mov
and
leave
mov
repz
arpl
pop
jbe
inc
out
lcall
mov
push
xor
std
mov
iret
fcoml
insl
jl
xor
aam
orb
sub
iret
push
test
test
outsb
mov
push
xchg
hlt
jp
xchg
std
or
mov
jmp
out
mov
mov
test
mov
mov
jl
and
movsl
into
jle
mov
fistpll
shl
enter
popa
push
inc
jle
add
and
shll
loope
ret
das
mov
daa
in
push
lds
mov
std
test
jecxz
sbb
lret
popf
pusha
xchg
loopne
jge
ss
mov
jge
lods
sti
insl
mov
daa
push
stos
pushf
add
xchg
mov
pop
mov
mov
iret
mov
ja
lea
pop
jp
cmpsb
popf
cmp
int3
sub
dec
sbb
jmp
mov
sarb
dec
stos
lea
sbb
ss
fs
cmp
jl
dec
fnstsw
cltd
sbb
mov
sbb
insl
mov
add
sub
xchg
fildl
popf
mov
hlt
push
aam
adc
ljmp
enter
stc
xchg
jl
mov
jmp
pop
in
data16
loope
sub
dec
or
add
fistl
lret
test
sub
lea
inc
leave
mov
pop
es
ret
popa
or
scas
addr16
je
out
dec
cmp
pop
mov
stc
mov
mov
and
cltd
pop
xor
xor
mov
dec
xchg
xchg
push
or
xor
mov
fisubs
fisttps
dec
test
insb
out
sahf
or
dec
cmp
cwtl
mov
outsl
call
clc
arpl
out
mov
sub
fxch
pop
fmulp
jp
and
xor
sbb
fidivrl
pop
jbe
orb
pop
mov
push
jmp
das
out
or
lret
lds
mov
cmc
lret
movsb
int
mov
xchg
inc
sub
and
cli
out
xor
and
ret
sbb
pop
pop
mov
ffreep
jmp
mov
test
or
imul
add
add
inc
fcomip
pusha
fiaddl
xchg
mov
fcoml
and
cmp
shrl
mov
mov
out
faddl
cmp
sbb
push
enter
cmp
into
aas
adc
test
mov
fdivrs
stos
mov
rcrl
aam
inc
les
jnp
aam
pop
sub
mov
out
das
or
pop
dec
stc
lret
mov
clc
cmp
fs
ljmp
vcvtpd2dqx
cli
add
scas
cmp
add
cmp
adc
push
sub
push
push
inc
sub
in
jae
sbb
sahf
and
fs
jmp
ja
sahf
sub
pop
cwtl
pop
popf
insl
cmp
out
lods
mov
aas
mov
sbb
adc
jno
jl
ds
loopne
scas
push
mov
mov
mov
pop
test
inc
addr16
mov
jo
xchg
inc
pop
sbb
fwait
mov
xor
das
pop
fdivl
mov
shlb
ucomiss
pop
dec
rolb
mov
clc
outsl
adc
fcmovb
sbb
fwait
cmp
mov
xor
push
cwtl
std
or
test
sub
call
outsb
xor
leave
loope
mov
cltd
inc
jp
jge
cmpsl
popa
loope
fistl
mov
in
push
cld
pop
popf
sub
and
nop
add
mov
fistps
call
sbb
push
sahf
pop
jle
test
out
pushf
and
stos
lds
jmp
ds
push
mov
lods
dec
test
add
movsb
xor
lods
pop
xor
jns
jle
imull
cld
xchg
push
lret
dec
pop
push
rcr
inc
jae
jl
inc
pop
mov
and
into
dec
mov
ljmp
imul
cltd
les
pop
mov
call
mov
out
cwtl
daa
or
jl
sbb
outsl
add
int3
out
ret
jg
sbb
add
mov
test
xor
outsb
fwait
js
mov
add
xor
dec
shrb
push
out
xchg
in
mov
outsl
rcl
push
insb
out
out
mov
push
dec
rorl
xor
jle
xor
jp
test
push
jb
sub
inc
loopne
rcr
aad
inc
pop
jno
and
jno
jae
rorb
cmp
push
add
rol
push
cmpsb
or
cli
sub
aam
adc
jecxz
mov
shll
jl
fnstenv
aam
test
ret
ficoml
sbb
push
jge
mov
sub
lret
shlb
push
jmp
cmp
push
popf
adc
xchg
imul
mov
fidivl
fsubl
lret
push
push
fimull
and
xor
jo
mov
shlb
jecxz
mov
mov
and
mov
fs
mov
dec
insl
outsl
inc
idivl
outsl
sahf
mov
rorl
and
sarl
lods
and
xchg
adc
or
stos
int3
out
in
and
movsl
lock
dec
out
and
fadds
jge
mov
pop
xchg
push
sub
mov
xchg
nopl
jecxz
test
loopne,pn
jae
idivl
mov
ja
mov
bound
dec
mov
and
mov
pop
jp
add
movsb
aad
loop
inc
sti
mov
sbb
fisubrl
adc
sub
lret
cmp
xchg
aaa
xor
mov
dec
dec
ss
call
std
mov
scas
xchg
sbb
add
clc
xchg
push
aas
or
push
push
and
cmp
sbb
inc
xchg
movsl
mov
aaa
cmp
mov
cmp
push
pushf
imul
scas
jmp
arpl
in
sarl
dec
das
jp
mov
fcomps
test
test
cli
aam
push
and
popf
insl
cli
rcl
or
mov
lods
adc
lret
xchg
push
push
inc
adc
add
je
or
scas
or
sbbb
pusha
xor
ficoms
ljmp
xchg
xchg
mov
xorl
in
mov
mov
pop
cmp
inc
push
test
cwtl
in
jb
xorl
xchg
pop
out
je
je
mov
rcrl
fwait
push
push
add
xchg
mov
and
sbb
shr
push
outsb
push
mov
push
jnp
mov
insb
and
mov
jle
js
mov
faddp
cmp
xor
xorl
fwait
jp
fucomp
std
sub
adc
jo
push
push
stos
fmuls
fcmovnu
dec
sbb
icebp
jecxz
add
and
mov
mov
push
dec
adc
jno
into
dec
popf
cld
and
daa
jnp
xorl
mov
xlat
push
rcl
cmpb
jo
lcall
pop
inc
das
frndint
mov
adc
adc
repz
stc
dec
fs
loop
enter
ss
sar
push
cmc
push
hlt
mov
pop
rep
jecxz
adc
and
jae
arpl
xchg
push
sbbl
mov
pop
rep
jecxz
adc
and
jae
arpl
xchg
push
mov
shrl
mov
pop
rep
and
mov
sahf
ret
scas
and
jae
mov
xchg
fistps
jmp
dec
rcrl
outsb
arpl
cltd
scas
and
and
lret
and
int3
int3
int3
mov
push
mov
cltd
inc
mov
shll
xor
out
sbb
or
jnp
imul
dec
test
push
mov
jmp
fistl
sub
hlt
sub
sbb
or
mov
xchg
dec
test
into
mov
sti
add
insb
fistpl
lret
ss
or
ja
or
cs
loopne
xor
and
xor
pusha
fst
xchg
xor
pop
jg
sbb
insb
cs
imul
ja
cmpsl
and
and
scas
and
or
xchg
test
leave
jmp
mov
mov
fcomps
pop
cmp
jg
sbb
lret
cmp
inc
push
pop
ds
dec
inc
mov
push
mov
adc
aam
mov
sub
test
jle
inc
mov
je
mov
aad
clc
rcl
jge
sahf
xor
xor
ficoms
inc
mov
and
xchg
cmp
xlat
push
fs
add
in
and
push
js
out
ja
stos
inc
fwait
and
and
adc
xchg
cmp
sub
or
jnp
imul
dec
mov
je
or
cmp
sub
xchg
cltd
dec
mov
mov
xchg
sbb
cmpsl
jp
imul
loopne
in
fidivs
into
and
daa
out
sti
data16
jbe
jge
aaa
pop
xchg
jp
sbb
add
neg
pop
stos
test
cmp
sub
adc
add
hlt
sub
sbb
or
jnp
imul
stos
fs
push
mov
jmp
fistl
add
hlt
sub
sbb
or
jnp
imul
mov
push
sub
xor
sbb
fwait
sbb
mov
xchg
imul
push
pop
mov
aad
inc
lds
aas
mov
push
out
dec
sub
je
pop
bound
pop
xchg
cmp
push
mov
xchg
je
push
stos
lcall
popa
ficompl
outsl
shr
pop
aam
push
inc
jns
add
es
pop
adc
inc
rorl
mov
imul
and
xor
xor
bound
and
inc
lea
cld
insb
imul
inc
test
pop
sub
rclb
test
push
fsub
loopne
xchg
mov
shrl
out
js
pop
js
or
sbb
jecxz
out
dec
sbb
jae
fwait
fs
dec
jmp
pushf
jae
les
scas
push
ja
rcrb
cmp
xor
fsubl
mov
xchg
vpcmpgtd
push
test
roll
in
aaa
sarb
cwtl
xchg
xchg
lcall
mov
clc
pop
test
lea
inc
xchg
hlt
incb
pop
push
mov
leave
push
mov
shl
xchg
push
xchg
gs
sbb
mov
cmc
lret
idiv
sbb
xor
xchg
repz
les
js
jo
push
and
dec
mov
sbb
sbb
jmp
jmp
or
dec
mov
adcb
pop
stc
pop
imul
mov
push
outsb
outsl
inc
aad
mov
mov
adc
ror
xchg
sub
push
or
sbb
out
in
adc
jo
push
lods
aaa
imul
movsl
jp
int
imul
mov
pslld
leave
adc
adc
adc
pop
movsb
loop
call
cwtl
push
xchg
adc
xchg
comiss
rclb
jl
add
cmp
inc
or
fs
or
adc
and
scas
dec
sub
cmp
adc
aaa
dec
xor
xchg
popa
mov
lods
cld
adc
mov
mov
aad
push
call
cmpsb
enter
jecxz
es
sbb
push
mov
call
lock
cmp
int3
sub
enter
lods
mov
in
push
sbb
lock
mov
add
dec
das
test
jge
rep
inc
outsl
dec
mov
mov
mov
out
or
cmpsl
or
pop
lods
mov
test
imul
mov
stc
pop
cld
sarl
scas
mov
leave
idivb
push
sub
ds
sbb
jb
gs
cltd
xor
mov
je
push
jge
mov
aad
sbb
jne
insb
xor
daa
mov
call
dec
push
js
jmp
cmp
push
filds
jne
insb
inc
xlat
repnz
mov
push
or
inc
nop
repnz
sub
mov
ja
pushf
xchg
cltd
or
sub
xchg
pusha
mov
and
es
or
pop
push
xlat
aad
mov
repnz
icebp
adc
mulb
sahf
adc
pop
push
mov
ret
pop
mov
negl
mov
adc
mov
mov
aaa
push
out
mov
mov
dec
insl
cmp
xchg
jmp
movsb
jns
sub
es
xor
pop
imul
mov
jae
popa
sbbb
daa
sbb
jg
bound
loop
dec
dec
je
jne
or
inc
adcb
fwait
jbe
mov
hlt
mov
cld
mov
mov
push
xchg
ret
pop
dec
mov
sahf
pop
fldcw
out
sar
dec
jno
sub
lods
xchg
dec
lahf
xchg
jb
dec
loopne
cmp
mov
xor
addr16
mov
push
stos
or
repnz
cli
mov
loop
mov
inc
add
rcrl
imul
pop
jb
stos
out
jp
inc
fwait
test
mov
out
pushf
sbb
aaa
icebp
inc
andb
xor
pop
add
jbe
or
adc
sub
les
push
adc
test
dec
enter
cmpsb
sub
inc
or
push
movsl
popa
cs
iret
mov
mov
je
add
cmp
sbb
out
sbb
movsl
sub
je
movsb
cmp
into
in
mov
dec
pop
fwait
xor
push
push
popa
cmp
pop
aas
in
ljmp
pop
add
shlb
mov
or
rclb
xor
insl
sbb
stc
and
lret
out
testl
icebp
add
xchg
xlat
in
push
or
out
stos
inc
dec
sbb
pop
cltd
arpl
mov
ret
adc
sub
stos
xchg
mov
lcall
rcll
cmp
pop
in
aam
out
mov
xor
in
xorb
outsl
repnz
sub
mov
call
xor
push
push
mov
leave
mov
clc
dec
mov
mov
outsb
lret
jecxz
add
xchg
std
xchg
or
ficomps
mov
sbb
movsl
js
mov
sub
sub
mov
jb
out
enter
cmpb
xor
xor
jge
test
jbe
lods
xor
xchg
aaa
lds
in
subb
out
fimuls
or
lock
ret
ja
in
and
cld
idivl
and
in
into
mov
adc
sub
loopne
in
insl
scas
shrl
xorb
xchg
daa
pop
push
xor
jns
and
movsl
xor
cmp
sub
sbb
inc
repnz
pop
jne
das
push
sahf
inc
mov
fs
mov
aad
lret
inc
push
or
add
mov
xlat
xchg
mov
lock
loope
and
mov
or
cmc
push
pop
pop
mov
in
jb
enter
xchg
lahf
xor
push
xor
mov
fisubrl
xchg
lea
adcl
pop
add
mov
mov
pop
daa
jno
jmp
lcall
stc
jge
dec
add
add
fdivrl
mull
bound
cwtl
lea
in
rorl
sbb
out
sub
negl
xlat
push
sub
aam
mov
mov
mov
das
int3
fdivs
add
pusha
push
xor
fs
xor
mov
or
test
ret
ss
es
push
notb
adc
push
fmuls
repz
xchg
dec
iret
push
test
or
sbb
push
mov
xor
lcall
ret
and
daa
popf
icebp
push
pop
add
int
out
popf
sahf
inc
stos
test
mov
imul
pop
sub
iret
push
xchg
aaa
adc
movsl
out
fstp
jne
dec
jns
in
xchg
cmpl
and
mov
sbb
sbb
sbb
popf
mov
sub
pushf
out
and
mov
jmp
adc
xchg
push
ror
xchg
xchg
lret
filds
or
sbb
setp
cltd
adc
jp
scas
push
hlt
mov
call
pop
mov
loopne
inc
push
push
ret
sbb
divb
inc
xlat
push
jmp
pop
cmp
mov
lret
arpl
ljmp
xor
test
xchg
mov
in
sub
add
or
xor
pop
std
mov
mov
sub
dec
xchg
fcoms
xchg
mov
push
mulb
mov
pop
jno
jmp
shlb
ud2
ret
aas
jmp
mov
lods
or
test
shl
scas
xor
push
and
add
mov
xchg
mov
add
xor
int3
pop
rcl
fcomi
movsl
jge
or
or
cmpsb
jecxz
cwtl
sti
cwtl
cmpsl
xor
lret
shll
push
andl
ret
add
lock
jle
and
aas
dec
test
inc
and
mul
ja
cld
in
pusha
dec
leave
jp
popf
xor
jle
nop
cmpsl
push
pop
jle
add
pop
push
popw
dec
test
inc
adc
hlt
test
mov
mov
scas
xor
push
fdivp
inc
sbb
jb
bnd
sarl
and
movsl
and
cwtl
cli
ficompl
sub
fdivs
test
or
in
inc
test
mov
inc
add
mov
lods
dec
out
shrb
imul
pop
lods
or
fstps
lock
insl
xor
or
inc
xchg
and
sub
cmp
std
in
test
lods
movsl
popf
push
out
jp
lds
les
mov
mov
push
fs
into
fldenv
push
cli
insb
mov
imul
fisttpl
xor
sbb
xchg
dec
mov
mov
fldcw
xor
adc
cmp
jmp
jb
and
mov
call
xchg
mov
rorb
sub
inc
imul
ret
cs
cmp
std
mov
mov
mov
idivb
mov
ja
imul
je
test
divl
subl
push
ficompl
push
iret
shr
nop
fxch
jmp
mov
fsts
cmp
cmp
daa
or
pop
and
jl
test
imul
jg
xor
in
das
cmp
out
cli
test
icebp
cmpl
adc
mov
jle
cmc
fs
mov
jae
push
mov
scas
mov
adc
int3
incl
pop
mov
out
dec
fisubs
mov
and
xchg
jg
fildll
insl
rorb
outsb
sub
int3
xchg
scas
mov
jp
sub
lret
xchg
sbb
mov
in
sti
in
pop
push
loopne
mov
xor
fldcw
in
stos
add
stos
imul
push
lds
ja
dec
scas
mov
sbb
mov
jae
dec
cld
add
std
lret
sub
push
bound
dec
add
xchg
inc
cmpsl
lock
xor
mov
lret
or
pop
mov
mov
push
sub
data16
in
push
movsb
sbb
mov
pop
adc
adc
sahf
or
daa
mov
or
sbb
les
inc
adc
enter
or
and
mov
sbb
adc
push
nop
xchg
xor
popa
ja
inc
cld
imul
loope
sbb
xor
xor
sarb
push
dec
scas
incl
loop
sub
aaa
repz
sub
push
mov
out
lock
shl
mov
cmp
std
push
push
ds
xlat
or
jl
aam
mov
out
lea
cmp
sub
mulb
lret
js
push
int
sub
ja
xchg
xor
sbb
push
mov
cmpsl
popf
subl
movsb
in
jbe
xor
mov
movsl
mov
sarl
repz
push
aam
fnstenv
dec
mov
fsubrs
mov
sub
mov
mov
div
push
xchg
insl
movsb
add
add
stos
lret
loope
sbb
pop
imul
cmp
lock
aad
adc
ucomiss
std
pop
jb
stc
hlt
inc
push
inc
mov
test
or
shl
add
push
stc
repz
ffreep
cmp
test
pop
arpl
cmp
ja
sub
pop
pop
dec
lea
push
cld
stos
jp
and
icebp
mov
inc
daa
frstor
ja
add
jo
mov
dec
adc
js
bound
fidivrl
sub
mov
pop
int
pop
lock
frstor
push
xchg
mov
or
push
loopne
mov
or
ror
out
jecxz
loopne
jl
jecxz
jmp
test
push
outsb
xlat
mov
jbe
dec
adc
mov
mov
adc
sub
jg
mov
rcr
jnp
bound
cmpsl
cli
dec
jbe
jl
push
cmp
ret
arpl
push
in
cmp
and
or
les
lock
push
jno
xchg
sahf
insl
stc
loope
push
mov
das
mov
or
ret
mov
pusha
int3
dec
jae
lods
or
push
pushf
sahf
hlt
add
and
mov
mov
mov
mov
mov
nop
and
call
js
jnp
cmp
dec
fdivrs
pushf
cwtl
nop
pushf
mov
mov
sub
test
int3
jp
jle
cmp
push
sbbb
lods
loopne
out
and
cmp
andb
lahf
dec
nop
addr16
stos
lods
adc
pop
rclb
adc
xchg
pop
int
ror
out
fwait
cmp
sahf
lock
cmp
andl
fwait
daa
xor
rcrl
inc
adc
orb
ja
xchg
aaa
scas
dec
je
lods
into
jecxz
adc
jmp
dec
stos
leave
push
popf
fldt
mov
pop
leave
inc
mov
icebp
dec
pop
sbb
mov
xor
popa
enter
jbe
pop
loope
adc
int
mov
sub
xchg
xor
inc
ljmp
jnp
shrl
pop
xor
xor
adc
adcl
test
clc
pop
xchg
sub
aam
cwtl
or
pusha
and
push
lock
in
popa
lods
add
add
inc
loope
lea
add
rcrl
pop
mov
dec
adc
add
cwtl
or
inc
mov
and
mov
pop
lock
cmp
xor
or
jns
clc
pop
push
lret
sub
test
in
aas
dec
adc
xor
scas
in
mov
mov
fnstenv
add
cmp
push
mov
mov
and
inc
jecxz
lods
jle
jecxz
sbb
ja
mov
in
fsubr
adcb
mov
cmp
lds
fbstp
inc
ljmp
cmp
lds
pusha
cmp
dec
das
dec
sub
and
push
popa
xchg
jle
mov
mov
icebp
cmp
adc
stos
mov
aaa
dec
cmp
sti
dec
cmc
cmp
int
shll
adc
inc
lcall
movsl
jno
movsl
inc
adc
ss
shll
push
loop
pushf
cli
jl
mov
mov
ljmp
iret
push
shlb
leave
cmp
call
inc
or
or
ja
push
push
jno
int3
andb
mov
in
ss
addb
mov
add
push
inc
add
mov
adc
in
xchg
xchg
pop
inc
sarb
push
loopne
into
jno
and
clc
inc
in
aas
push
cmc
xchg
orb
jbe
js
push
mov
or
xor
lret
sarb
addr16
xor
pop
cld
adc
inc
clc
mov
popa
shlb
mov
mov
sub
mov
mov
xchg
inc
sahf
xor
loop
incb
sarb
inc
repnz
sahf
loopne
outsl
cmp
pop
xor
stos
std
dec
orb
cmp
jmp
mov
sbb
lret
scas
lret
and
mov
in
fisttpl
out
adc
clc
jb
stos
je
push
cwtl
dec
cwtl
cmp
or
ss
subb
mov
and
jne
sar
push
ljmp
inc
test
notl
push
jmp
pop
add
inc
cmp
pop
cmp
mov
out
or
cmc
fucomp
cwtl
rcl
scas
xor
xchg
out
gs
or
sub
jns
mov
loope
std
jg
jge
cmpsb
push
sbb
mov
push
leave
out
repz
pop
xchg
roll
mov
sub
mov
clc
sbb
push
push
pop
in
icebp
sub
mov
push
call
add
push
mov
pop
and
push
mov
or
aaa
js
gs
aam
fidivl
ret
sub
xchg
or
sbb
inc
repz
loop
aaa
sti
pop
fstpt
push
jmp
cmpsb
sub
jns
or
cltd
les
push
inc
sub
cmpsl
outsl
cwtl
in
jl
mov
inc
cmp
es
and
xchg
mov
mov
int
ret
dec
lea
in
in
sub
xor
or
dec
jo
inc
adcl
xchg
dec
cmc
or
adcb
inc
test
test
jbe
pop
lcall
pop
mov
bound
mov
aam
mov
imul
inc
in
mov
dec
sbb
xor
sbb
mov
hlt
push
cmp
addb
sub
ret
rol
inc
sbb
mov
ds
xor
mov
inc
jge
imul
jge
and
aam
lret
jle
pop
sbb
gs
mov
push
jne
movsb
ret
popf
dec
mov
sbb
clc
data16
mov
mov
popa
lcall
test
mov
divl
mov
in
sbb
sub
lret
ficoml
mov
jg
in
cmp
cmp
add
cmp
push
xchg
arpl
or
inc
dec
lea
sbb
cmp
mov
xor
mov
xor
fcmovbe
test
add
roll
or
fcom
scas
add
mov
pop
and
push
jmp
mov
push
inc
popf
filds
cmp
push
xchg
cmp
fdivl
je
mov
push
in
jecxz
in
and
sub
mov
lds
or
sbb
pop
dec
fildl
lret
popf
add
loop
xchg
fbld
xchg
push
sti
daa
and
sbbl
stos
add
test
and
aas
out
test
sbb
inc
jle
mov
fcmovb
lahf
cmp
xchg
push
rorl
inc
xor
lahf
jnp
or
enter
movsl
or
test
and
and
aaa
xor
lds
mov
aad
cltd
mov
repnz
jg
loop
jno
xor
or
lret
movsl
ss
test
iret
push
mov
xchg
mov
ret
xchg
push
xor
jge
or
outsb
pop
mov
xor
aam
int3
loop
and
xlat
mov
and
xchg
jmp
xlat
mov
add
lds
sbb
xchg
mov
fwait
push
mov
lods
jle
scas
test
push
jle
jne
inc
andb
push
cmc
jmp
pop
pop
mov
dec
pop
jp
adcb
or
outsb
sub
in
add
xchg
rclb
cmp
les
sbb
call
xor
scas
cmpsl
fidivs
adc
xor
gs
ss
call
es
cmp
cmpsl
pop
popa
lods
mov
loopne
scas
inc
mov
fcmovu
xchg
pop
add
mov
cmp
lcall
sub
add
repnz
mov
push
mov
dec
movsl
mov
dec
sti
pop
dec
data16
adc
sbb
xchg
and
add
push
or
add
xor
out
ljmp
fisubs
leave
clc
xchg
cmp
xlat
cmp
mov
jl
imul
push
cmp
cwtl
fnstenv
cli
inc
mov
int
sub
sbb
fldl
das
iret
lret
flds
jb
test
daa
popf
inc
mov
add
out
inc
xchg
adc
xchg
testb
cmpsl
out
pushf
cmp
pop
lods
mov
int3
data16
push
int3
sahf
mov
adc
popa
ss
xlat
and
xchg
xchg
loopne
jo
jo
sbb
in
js
cltd
dec
pop
mov
sub
mov
lods
repz
mov
jge
xor
add
sarl
jge
xchg
add
jnp
jmp
sub
sbb
mov
in
or
or
sbb
inc
subl
or
and
cmp
in
loop
dec
or
mov
xchg
xchg
or
sub
or
mov
fcoms
cld
iret
fs
push
cwtl
test
adc
int3
in
mov
jae
ss
icebp
cltd
popf
cltd
mov
rcll
ret
test
data16
lahf
inc
inc
jg
cmp
inc
jmp
aad
sbb
adcb
cmp
add
imul
and
ja
lret
popf
xchg
or
stc
jns
cmpsl
inc
cmp
int
or
movsb
lea
dec
adc
or
mov
cmp
dec
movl
xchg
daa
jnp
or
ret
das
ret
in
cs
dec
xor
mov
call
pop
aad
lock
push
iret
pop
out
sbb
push
add
sahf
ljmp
dec
test
or
int3
jle
mov
int3
xor
sbb
lock
das
iret
mov
mov
cmp
xor
adc
aam
int3
xor
test
mov
int3
scas
jmp
mov
pop
xor
push
sub
cmpsb
cmp
or
jo
andb
outsb
int
repz
xchg
sti
es
push
lea
mov
push
jb
jecxz
inc
idivb
push
inc
movsb
sbb
fimuls
sub
xchg
ja
pop
rcrl
lret
aaa
xor
fst
stos
sbb
loope
fmuls
xchg
dec
iret
mov
int
xchg
dec
fdivs
imul
dec
xchg
pop
jae
arpl
jp
mov
dec
daa
test
xor
dec
loop
jb
lret
and
shlb
rorb
sub
push
cmpsb
lcall
push
jp
dec
iret
xor
jmp
xor
lcall
adc
push
adc
xchg
loop
lds
lds
aad
sbb
mov
inc
scas
lock
out
dec
dec
mov
scas
pop
mov
mov
insb
inc
pop
push
dec
loop
in
rcl
icebp
std
push
xchg
call
and
dec
cmp
lahf
iret
push
jnp
and
test
test
scas
cmp
add
sub
cld
test
xor
cmpsl
mov
cmpsl
push
inc
xchg
pop
int3
ss
daa
scas
cs
sub
jo
mov
cmp
push
mov
imul
push
cmp
out
pusha
add
xor
or
shrl
cli
lea
pop
pop
dec
inc
pop
in
clc
xchg
sub
fidivrl
ss
lret
loopne
in
loope
xchg
mov
cmp
jno
test
out
jmp
sub
inc
aam
mov
les
mov
pop
pop
jo
nop
scas
mov
shll
push
mov
jmp
fistl
add
hlt
sub
sbb
or
jnp
imul
stos
fs
push
mov
jmp
fistl
add
hlt
sub
sbb
or
jnp
imul
sub
dec
mov
xor
dec
fistl
dec
add
cmc
sub
sbb
or
jnp
imul
stos
sbbb
jmp
fistl
dec
mov
or
sub
cmp
int3
int3
int3
int3
int3
adc
and
pop
daa
inc
add
incb
int3
sarb
loopne
adc
outsb
xor
dec
push
ds
jo,pn
pusha
push
nop
cld
sub
mov
dec
lock
loopne
adc
outsb
xor
push
push
daa
inc
ss
pusha
adc
sbb
pushl
mov
pop
xor
dec
lds
pop
negl
jne
gs
push
dec
xchg
sbb
aad
and
das
iret
fnsave
mov
push
dec
into
pop
into
xchg
sar
sahf
mov
out
subl
add
push
loop
jnp
mov
scas
dec
scas
jae
loopne
adc
daa
outsb
repz
daa
jle
push
mov
icebp
pusha
scas
or
xor
adc
in
inc
test
scas
push
pusha
rorb
mov
cmp
inc
and
sahf
loopne
sub
clc
mov
pop
filds
aam
jo
xlat
inc
cli
inc
lret
lret
in
xchg
popa
loop
sarl
jns
dec
and
inc
jo,pn
pusha
pop
nop
out
divb
cmpsb
sarb
sbb
jbe
dec
xor
jb
arpl
xchg
in
ret
mov
mov
xchg
sahf
nop
jecxz
push
je
push
cs
dec
xor
jp
int
mov
rcrl
add
jbe
inc
cmp
push
pusha
push
nop
incb
into
sarb
loopne
adc
outsb
xor
dec
push
ds
jo,pn
pusha
push
nop
incb
into
sarb
loopne
adc
jmp
addb
dec
and
push
lods
rcrl
imul
out
lds
fcmovnb
loope
pop
lret
cmpl
int
xchg
inc
dec
jne
mov
cs
in
mov
adc
or
jg
repnz
push
sbb
pop
xor
mov
stos
and
int3
jae
in
hlt
inc
insb
pop
daa
out
cwtl
jno
and
ja
mov
add
mov
into
mov
add
jne
mov
lea
out
sbb
pop
dec
pop
out
in
in
in
into
add
xor
daa
dec
xor
xor
out
out
mov
addr16
lea
daa
lea
cs
push
fisubl
mov
jl
pop
mov
fbstp
mov
push
out
fdivl
loope
clc
lds
negl
ffree
adc
and
mov
mov
sbb
xchg
or
cmp
imul
xchg
out
stos
adc
inc
fldenv
mov
xor
nop
jns
jnp
jno
lock
inc
adc
out
out
sub
adc
mov
jmp
pop
xor
paddd
mov
je
sub
movsl
pop
xchg
push
cmpl
clc
lods
inc
aas
fisubrl
les
pusha
inc
fnstenv
subb
mov
dec
sbb
push
hlt
js
pop
add
jnp
std
outsl
jae
fcoml
enter
jo
push
mov
or
mov
jbe
mov
dec
pop
loope
jno
mov
bound
mov
jecxz
mov
ret
test
mov
mov
cs
popf
jecxz
xchg
add
jmp
push
mov
loopne
jne
cmp
push
bound
jae
inc
add
add
jne
fadds
adc
sbb
int3
jecxz
inc
iret
xchg
ljmp
and
xchg
or
push
loop
push
mov
rclb
daa
daa
add
lods
mov
lods
cli
leave
mov
out
hlt
inc
xchg
decb
mov
dec
ss
pusha
cmc
add
arpl
test
leave
das
add
in
jb
xchg
xlat
pop
pop
pop
cmp
mov
mov
mov
shr
pop
sbb
push
pop
clc
orl
rcr
sub
mov
adc
sarl
push
aaa
je
mov
loopne
inc
mov
jecxz
mov
out
and
call
movsb
mov
ret
lret
daa
rcll
leave
inc
push
pop
movsb
or
andb
arpl
fcom
into
push
cmp
pop
cmp
lds
leave
inc
jmp
xchg
sbb
and
fwait
sbb
pushf
dec
jle
mov
and
dec
cmc
jb
int3
jl
das
lods
or
xor
in
lret
imul
fcompl
cmp
dec
scas
gs
and
dec
jne
shll
inc
cmp
aas
jo
data16
mov
mov
sbb
add
sbb
out
mov
add
shrb
cltd
ror
lds
fidivl
sbb
xchg
sbb
in
pop
push
mov
mov
mov
leave
or
xchg
leave
cmp
jle
int3
add
lds
mov
lods
pop
popf
xchg
cmpsl
xor
cmc
dec
sbb
std
leave
cld
push
sbb
bound
push
xchg
push
rcr
push
out
jno
pushf
mov
xchg
inc
jg
clc
in
enter
testb
lcall
sbb
dec
cli
push
pop
lahf
out
mov
arpl
les
inc
jle
lea
inc
xchg
outsb
cmp
out
lods
jae
mov
push
mov
popf
ljmp
fdivl
int3
lret
push
xchg
add
mov
pusha
movsb
notl
insb
xorl
or
cmp
cwtl
mov
mov
push
jmp
dec
es
test
pusha
movsb
inc
or
sbb
add
movsl
jne
xor
inc
js
jae
lret
xor
jno
jb
ficompl
scas
sub
pop
loop
dec
mov
fcomi
or
jg
xor
or
xor
xchg
fildl
push
adc
icebp
inc
call
mov
mov
and
outsb
mov
pushf
dec
and
sub
es
adc
fsubrl
and
popa
dec
faddp
test
pop
js
jae
mov
mov
aas
test
sti
in
pusha
and
mov
cmpsl
in
mov
add
inc
mov
orl
popa
sub
ljmp
cmp
sbb
les
stc
insl
test
push
not
mulb
hlt
in
mov
push
xchg
push
repz
push
sbb
lret
jnp
into
mov
je
push
jo
inc
test
outsl
or
insl
lret
push
mov
gs
adc
add
xchg
dec
mov
ficomps
cltd
ds
mov
inc
dec
cmpsb
sub
lret
mov
call
jnp
daa
aas
pop
mov
inc
and
mov
or
insb
mov
inc
sbb
push
inc
xchg
dec
in
sti
in
cmpsl
jecxz
adc
out
clc
push
pushf
add
popa
lahf
sub
je
rcl
jbe
in
scas
push
xor
test
sub
into
push
aaa
insl
stos
int3
push
scas
mov
inc
jg
dec
ret
aam
sbb
xchg
loopne
mov
mov
inc
insb
rol
dec
add
cli
mov
cmpsb
and
ds
mov
lret
jmp
pop
or
dec
xchg
aad
inc
lock
jle
xchg
mov
jg
mov
stos
mov
dec
movsl
push
loop
sub
iret
shlb
in
push
int
and
movsb
pop
xor
mov
inc
jbe
in
stc
sbb
mov
in
push
scas
sub
cmp
addl
cmp
lret
mov
xchg
outsb
dec
sti
jmp
ljmp
and
test
push
xchg
push
mov
cmpsb
push
shrb
mov
jae
into
cmp
pop
mov
ss
push
popf
fst
pop
and
adc
xchg
out
fisubrs
leave
ficomps
dec
test
sub
pushf
mov
sbb
mov
movsb
sahf
mov
imul
pop
jecxz,pt
std
xor
cmp
lahf
inc
fldl
mov
ret
or
mov
pop
jb
movsl
daa
decl
test
cltd
cmp
enter
inc
xor
hlt
sarb
sbb
jbe
adcl
or
or
mov
in
lahf
jecxz
das
xor
rorb
fwait
pop
jmp
cmp
push
mov
lock
xchg
or
xchg
mov
adc
jle
int
and
mov
pop
shlb
jmp
cld
jmp
cmp
stc
inc
xchg
pop
stos
negl
add
or
mov
cmp
cwtl
and
mov
call
xor
mov
inc
divb
or
movb
sbb
sbb
xchg
pop
rclb
mov
mov
aam
lret
push
arpl
pop
mov
add
pop
enter
sbb
aaa
pop
popf
inc
jae
sti
push
mov
aam
jnp
mov
mov
out
aaa
je
sbb
jecxz
dec
sbb
daa
mov
and
jle
das
cmp
imul
sbb
loop
xor
sbb
gs
push
popa
stos
mov
fdivl
lret
or
jp
lret
fmuls
add
cmpsl
test
push
and
push
pop
arpl
decw
add
ret
js
gs
into
inc
fnstsw
dec
int
sub
push
or
dec
cmp
loope
into
push
mov
pop
pop
push
add
aam
hlt
mov
insb
cmp
adc
xchg
test
icebp
fldcw
and
mov
mov
sub
mov
adc
insl
out
and
test
inc
cmp
push
sarb
dec
dec
xchg
sub
jne
sbb
sbb
mov
jmp
out
mov
add
cmc
frstor
outsl
jns
jmp
sbb
or
jp
inc
lods
mov
jne
les
dec
jle
aam
fisttps
mov
sub
mov
icebp
mov
pusha
mov
addr16
dec
cmp
sbb
add
idivl
cld
xchg
mov
outsl
sbb
push
in
adc
mov
sub
sub
loope
les
nop
repnz
xchg
mov
jp
out
mov
popf
addr16
jo
add
and
jecxz
inc
scas
and
mov
lock
scas
adc
je
test
push
lds
dec
pop
stc
repnz
repnz
or
lahf
or
jae
subl
adcl
mov
loopne
sbb
popa
mov
sub
dec
adc
icebp
imul
sbb
cmp
call
push
ss
pop
push
mov
dec
lds
cld
fld
mov
push
push
xchg
insb
cld
push
adc
dec
arpl
xchg
or
in
out
fcmovnu
jge
mov
out
inc
jae
insl
pop
rcl
pop
fsubl
imul
out
jg
out
mov
nop
pop
push
test
pop
fimull
lock
loop
pop
icebp
imul
enter
hlt
inc
xchg
mov
jns
int
sub
idivl
incb
int3
push
out
cmp
cs
pop
sub
push
sub
ja
inc
mov
daa
mov
xchg
cmp
mov
xor
cld
outsb
and
xchg
mov
mov
push
cmpsl
ljmp
jg
pop
xchg
mov
inc
loopne
rcrl
imul
pop
pop
mov
nop
sti
xor
xchg
jecxz
cwtl
or
inc
mov
pop
and
or
mov
fildll
jne
cmp
sub
push
and
jo
pushf
lods
mov
fimuls
pop
push
arpl
jae
adc
shrl
fmull
dec
push
popa
hlt
mov
or
and
loop
inc
test
into
sbb
mov
shl
ret
add
popf
jne
jae
cwtl
inc
adc
and
repz
sub
add
or
mov
jg
cmc
jl
adc
sbb
or
scas
into
sub
pusha
or
out
std
je
in
adc
imul
add
sbb
pop
xchg
sub
insl
sub
addb
adc
dec
pop
iret
mov
repnz
inc
xchg
mov
xor
sbb
data16
dec
xlat
lcall
outsb
lds
fdivl
mov
in
lcall
aaa
mov
mov
fs
jno
sbb
adc
add
addb
jne
mov
lea
sbb
jle
sub
fsubr
pop
imul
sbb
add
and
xchg
sbb
outsl
test
in
repnz
mov
stos
mov
out
bound
arpl
adc
loope
cmp
cltd
in
jg
dec
mov
cmp
es
push
out
popa
xchg
and
jmp
sub
jns
ficomps
inc
pop
rorb
stc
mov
lret
test
callw
sub
sti
mov
jg
pop
and
mov
xor
int
push
test
and
and
cltd
fs
push
xchg
cmp
cmc
xor
dec
add
popf
and
cmp
mov
mov
push
call
xor
and
test
add
jbe
repnz
pop
xor
dec
xor
lcall
mov
and
xchg
mov
sbb
mov
subl
dec
add
dec
addr16
fcompl
and
loop
xchg
add
sub
adc
pop
jmp
mov
pop
push
loop
popa
sar
lds
xchg
mov
adc
xor
xor
mov
mov
fcmovnb
fstpt
out
ss
push
out
mov
or
mov
adc
inc
sub
ss
sub
std
iret
mov
lods
xchg
inc
mov
xor
ficoms
stc
jge
adc
mov
cmp
pop
push
cli
data16
adc
push
sub
cmp
ficoml
push
movsl
imul
sub
fwait
mov
pop
xchg
loope
xchg
inc
imul
bound
mov
fldt
push
les
xchg
rcl
adc
inc
inc
outsl
dec
test
sub
scas
pusha
orb
dec
mov
mov
sbb
add
data16
push
ret
cwtl
sbb
inc
cmp
pop
jae
ret
jns
xor
lods
push
inc
in
and
xchg
cwtl
sbb
mov
lea
sbbb
repnz
mov
and
cmp
and
jge
repz
mov
cmpsb
mov
xor
idivl
mov
outsl
shlb
push
jl
sbb
into
call
and
push
in
jge
xchg
pmullw
and
loop
dec
movsl
daa
push
sahf
rcll
js
mov
sti
insl
cld
pop
cmp
push
mov
scas
push
test
outsl
pusha
dec
pop
mov
push
dec
je
push
scas
in
mov
adcl
jle
jecxz
loope
cmc
jo
push
out
movsb
ret
lock
or
imul
shrb
adc
pop
in
cmc
call
xchg
add
inc
js
fcmovnb
in
push
divl
sbb
add
jnp
loop
call
into
mov
cmpsb
int
mov
cmp
popa
inc
push
sub
inc
or
jmp
sub
sub
mov
inc
inc
mov
adc
adc
mov
xchg
inc
lea
cmpw
sahf
jo
movsb
adc
je
pop
pushf
push
sbb
jmp
iret
sub
sub
mov
sbb
insl
xor
xchg
stos
arpl
aaa
jecxz
leave
adc
inc
jl
sub
dec
add
cltd
cmp
cmc
jae
xor
sti
inc
mov
adc
cmp
pop
pop
lds
lahf
inc
out
mov
mov
mov
pop
push
and
movsl
mov
in
pop
add
xchg
add
cmp
cmp
ss
in
test
xlat
jge
xchg
or
add
and
mov
inc
or
cs
test
lret
popf
jns
cmp
frstor
xchg
pop
neg
xchg
mov
sub
and
rorl
int
mov
pop
mov
inc
aad
mov
pop
xor
sub
add
xlat
sbb
and
xchg
pop
into
mov
and
push
dec
imulb
scas
mov
xor
dec
cmp
imul
fidivs
push
cmp
cmp
lcall
shll
sbb
lahf
dec
sbb
xor
gs
or
cld
dec
sarb
cmpsb
push
push
xor
insb
or
cmp
fldt
mov
jmp
out
xlat
sub
dec
adc
xchg
sub
adc
add
stc
pop
xchg
xchg
inc
xor
pop
mov
fwait
or
pop
xor
mov
test
lods
insb
dec
sbb
or
cmp
xchg
js
add
cltd
sbb
arpl
add
lahf
outsb
repz
inc
dec
and
mov
pop
push
shl
sbb
mulb
sub
mov
xchg
push
lret
adc
aaa
outsb
or
fdivl
scas
loope
or
in
cltd
fstp
mov
insb
dec
add
inc
mov
xchg
punpckhdq
out
push
xchg
popf
fnstsw
ffreep
and
dec
xchg
mov
jnp
fisttpll
add
add
mov
aaa
jb
iret
dec
jg
das
sbb
inc
sbb
int3
fs
jns
rorb
call
adc
push
jecxz
mov
dec
add
fwait
cmp
lcall
lret
sbb
sbb
popf
into
icebp
repz
and
jns
pusha
sbb
sbb
add
jo
push
mov
in
add
lea
mov
js
popa
lret
insl
movsl
mov
stc
int3
cmp
imul
push
dec
dec
xchg
inc
pop
pop
and
scas
es
rorl
stos
movsb
out
xor
jge
jge
xchg
int
adc
ds
int
call
scas
dec
jp
jmp
in
sahf
faddl
inc
or
imul
jl
stc
xor
data16
dec
pop
aam
xchg
or
sbb
daa
xchg
pop
negl
push
movsb
adc
bound
dec
rorb
in
cvtpi2ps
add
sub
leave
aas
popa
movsb
dec
mov
inc
addr16
or
adc
sub
fisubs
sub
or
dec
dec
add
xchg
inc
dec
adc
cli
ret
clc
andl
gs
or
movsl
aad
mov
cmp
xchg
notb
or
loopne
in
cmc
mov
inc
ljmp
push
mov
dec
push
xchg
lea
cs
enter
adc
cli
cmpl
mov
mov
outsl
shll
sub
stos
adc
mov
xor
or
lock
aas
dec
lock
sbb
insb
insl
xor
cltd
or
loope
mov
push
call
cmp
orb
xchg
pushl
push
incb
movsb
adc
mov
lret
mov
repnz
fstps
mov
call
cmc
enter
nop
std
xchg
mov
adc
insl
or
sub
sub
les
popa
scas
push
fnstcw
or
movsl
mov
nop
clc
xlat
mov
dec
jo
fsubrs
pop
fadd
sbb
lds
and
ja
jns
pop
std
inc
or
hlt
mov
lods
ja
stc
cld
out
pop
mov
aaa
lret
stos
mov
push
loope
cmp
push
test
out
fimull
packssdw
push
add
push
mov
int
loope
stc
lcall
mov
rcr
pop
push
sbb
mov
jae
push
mov
cld
sbb
out
push
pop
or
inc
stc
out
dec
lods
lea
hlt
push
cmp
jo
add
jae
mov
pop
dec
jno
mov
subl
mov
leave
xor
inc
std
inc
and
aaa
hlt
push
push
shl
dec
iret
inc
lock
and
shr
xchg
fnstsw
or
dec
sar
sti
and
sbb
sti
or
xchg
adc
push
inc
inc
inc
dec
aas
and
ljmp
mov
lahf
cltd
movsl
mov
cmp
mov
shr
sti
adc
mov
pop
or
mov
shrl
fdivp
cwtl
cli
cli
repnz
mov
les
jecxz
mov
push
test
push
mov
mov
jns
cmpsb
cmp
mov
jnp
cld
mov
and
sahf
mov
xchg
mov
icebp
popa
push
jp
jle
jge
cs
and
scas
jbe
mov
lods
jp
sbb
mov
gs
faddl
sbb
shll
sbb
mov
in
cmp
aaa
mov
aaa
stc
dec
jmp
and
ja
push
pusha
dec
cltd
mov
das
es
gs
xchg
mov
xchg
hlt
es
shlb
popa
movsl
or
pop
insl
or
in
repnz
fisubrs
icebp
cld
push
add
pop
in
ret
popf
lds
push
mov
movsl
daa
push
xchg
xchg
daa
cmp
cltd
jne
push
das
mov
dec
adc
pop
or
sbb
ljmp
xchg
xorl
lahf
push
lcall
test
repnz
notl
dec
mov
mov
je
mov
subl
push
lcall
push
loopne
xlat
lds
fsub
jbe
push
andl
push
popa
push
push
and
repnz
or
inc
sarl
jns
lea
push
pop
jmp
jecxz
mov
fcmovnb
push
int
jle
mov
pop
fsubrl
sbb
push
mov
cmpsl
cld
fidivrl
addr16
xchg
push
lcall
outsl
mov
adcb
push
xchg
adc
sarl
and
call
xchg
cli
rorb
or
push
test
cld
mov
outsl
or
mov
xchg
divb
fsts
pop
sahf
dec
fstpl
add
sub
mov
xor
sbb
std
mov
loopne
stos
and
pop
adc
sub
inc
mov
dec
lock
xor
sti
pop
movb
repnz
add
gs
xor
push
ror
imul
xchg
mov
sub
sarl
adcb
lcall
sbb
sub
mov
cmp
pop
sbb
fs
pop
or
lds
or
in
push
mov
push
popf
ficomps
stos
mov
popa
fidivrs
push
add
shr
insl
subb
repnz
outsb
mov
sbb
mov
cmp
clc
rclb
icebp
fidivs
cs
outsl
mov
cmp
shll
mov
sbb
fidivl
arpl
dec
push
push
inc
adc
mov
testb
mov
pop
fwait
pusha
loope
pop
or
gs
cmp
fsubs
jne
xor
or
adc
dec
xor
in
in
pushf
pop
push
pop
iret
ret
addr16
lea
dec
ss
mov
mov
enter
xchg
pop
inc
inc
adc
rorl
adc
fnstenv
outsb
add
and
ret
ret
pop
dec
mulb
cmp
push
add
jge
in
fsubrs
test
aaa
cltd
dec
out
aas
cmp
sahf
add
lret
jnp
cmc
pop
lret
imul
das
cs
test
enter
orb
xor
inc
sbb
jl
out
fsubs
in
adc
enter
fcoms
mov
dec
mov
inc
jmp
pop
or
or
pop
inc
inc
fs
loop,pt
push
pop
mov
int
in
data16
test
sbb
or
add
dec
pop
int
mov
mov
xor
daa
mov
push
xor
fs
fldenv
inc
arpl
cwtl
xchg
lea
mov
or
adc
test
mov
mov
xorb
and
arpl
movsb
mov
jg
dec
mov
add
or
cmc
pop
jl
inc
btr
mov
test
pop
arpl
cmp
jge
inc
out
cmc
push
jno
sbb
clc
adc
mov
sbb
xchg
ret
cs
or
add
icebp
pop
cmpxchg
dec
or
js
je
fcoml
aad
mov
sub
je
ret
cmp
mov
lds
aad
gs
pop
in
fwait
stos
push
gs
popf
adc
repz
movsb
in
lock
fstpl
cld
nop
outsb
cmpxchg
dec
push
ds
jo,pn
pusha
push
nop
incb
into
sarb
loopne
adc
outsb
xor
dec
push
ds
jo,pn
pusha
push
nop
incb
into
sarb
loopne
adc
outsb
xor
dec
push
ds
jo,pn
pusha
push
xchg
incb
iret
sarb
loopne
adc
outsb
xor
dec
push
ds
cs
loopne
outsl
jg
sbb
mov
push
or
jno
int3
int3
int3
int3
repnz
pop
mov
icebp
xchg
fildll
das
aas
pop
nopl
outsl
cli
pop
dec
dec
pop
mov
scas
mov
out
out
iret
fildll
das
pop
xor
nopl
or
or
das
mov
out
out
cmpsl
push
iret
aaa
fistpll
xchg
jns
outsb
pop
pop
sub
adc
cmp
loopne
loopne
into
je
stos
sbb
adc
sub
adc
lcall
jle
mov
clc
aas
cmpsl
jmp
adc
hlt
leave
dec
lahf
mov
push
in
cli
sbb
xchg
ficomps
ret
idivl
repz
sahf
cs
divl
jg
rol
loopne
icebp
loop
outsb
loop
lods
mov
cli
mov
ficompl
fiadds
and
hlt
jl
lock
repnz
mov
cmp
inc
pusha
or
add
insb
ljmp
jg
loopne
or
mov
orl
cmp
cmp
scas
inc
pusha
jmp
pop
jb
mov
xlat
aas
push
pop
nop
jp
mov
mov
jecxz
out
stos
ja
int
mov
pop
pop
outsl
jno
pop
dec
sub
int
fnstcw
xchg
sbbl
pop
dec
outsb
dec
dec
outsb
pop
push
push
add
dec
or
mov
popl
cmpsl
mov
pop
push
outsb
dec
jp
arpl
or
adc
sub
bswap
out
in
out
out
cli
mov
iret
iret
fistpll
das
das
aas
pop
nopl
outsl
jg
dec
dec
pop
mov
lahf
out
out
iret
fistpll
das
das
aas
pop
nopl
outsl
jg
dec
dec
pop
mov
cmp
addb
stos
sbb
and
inc
cmpsl
mov
sbb
movsb
bound
cli
mov
sbb
cs
sahf
int3
or
xor
mov
jmp
outsl
insl
xchg
insb
cld
sti
inc
adc
into
sbb
sub
push
adc
imul
xchg
mov
daa
jnp
fwait
aam
cmp
lea
cwtl
js
xchg
pop
call
mov
cmp
jae
aas
and
test
in
mov
out
outsl
cmp
pop
sub
xchg
lock
adc
mov
push
movsl
ret
dec
adc
inc
pop
xor
add
mov
push
mov
sbb
push
sub
lods
or
cmp
jno
subl
fnstenv
jecxz
ss
icebp
jae
mov
lods
mov
popf
cmpsl
push
jno
int
lcall
cmc
mov
fbld
je
sub
scas
adc
ja
adc
inc
and
gs
fwait
sub
mov
pop
test
jmp
xchg
andl
xor
jg
movsl
lahf
push
out
lret
dec
pop
inc
adc
aas
js
in
shrl
sbb
shrb
push
cmpsl
sub
insl
out
out
out
int3
repz
xchg
push
or
xor
xchg
lahf
ret
loop
shrl
push
mov
and
add
fwait
sub
sub
jl
jb
adc
lock
clc
mov
jmp
mov
adcb
push
mov
mov
jecxz
xchg
pop
push
cmp
rclb
inc
push
in
and
xchg
push
adc
ficoms
push
cmp
mov
jl
jns
cmpsb
gs
sbb
sbb
jmp
jno
lret
cwtl
scas
sub
adc
dec
adc
push
sbb
push
ror
adc
xchg
xor
dec
rcll
inc
xor
dec
nop
or
ds
and
adc
xor
sbb
popf
adc
or
pop
and
sbb
adc
sbb
push
out
stc
mov
fs
pushl
test
mov
xor
cmpsb
bound
cs
mov
xlat
mov
out
xchg
and
popa
cmc
mov
stos
sbb
aad
pushf
pop
fnstenv
pop
xchg
loop
dec
jge
data16
inc
lcall
jg
fdivs
data16
imul
mov
les
jbe
dec
mov
sub
test
clc
pushf
addr16
inc
inc
mov
adc
and
fisubrl
pop
pop
and
push
cs
jle
xor
cmpsl
inc
push
loope
adc
mov
rorl
mov
dec
mov
push
push
ret
dec
scas
mov
pop
mov
push
xchg
or
js
test
mov
or
cmp
mov
push
xlat
and
in
and
lea
xchg
std
mulb
add
cltd
mov
and
mov
jg
arpl
pop
shll
pop
icebp
call
lea
xor
stc
fistpl
and
mov
and
sti
xchg
xorl
sti
hlt
dec
and
pop
mov
cmpsb
icebp
fs
bound
push
push
dec
adc
sar
data16
and
inc
cmp
iret
sbb
enter
fldcw
cmpsl
cmp
xchg
add
jo
mov
sbb
push
and
icebp
cmp
sub
xchg
jo
mov
add
push
push
mov
fistpl
xchg
dec
test
xlat
in
mov
jae
in
jnp
xchg
lea
or
imul
sti
lods
add
insl
in
into
ficompl
dec
mov
loopne
insb
add
test
iret
mov
xchg
jp
mov
sub
xor
xchg
sahf
scas
jbe
mov
xor
ss
ret
fcomps
es
scas
cmp
pop
xchg
xchg
aad
mov
inc
aas
pop
and
insb
mov
xchg
cmpb
popf
push
das
std
adc
pop
jbe
or
fbld
inc
mov
and
lods
flds
or
mov
push
and
cmpsb
in
insb
mov
mov
mov
push
xchg
xchg
dec
mov
jb
sub
cmp
loop
or
cs
ljmp
imul
push
mov
xchg
and
xchg
inc
pop
or
pusha
test
nop
aad
xor
jge
sbb
addl
das
cld
dec
xor
cmp
xchg
jle
jle
inc
sub
inc
push
iret
loope
clc
push
push
adc
stos
pop
fidivs
jp
aas
bound
lahf
clc
out
push
test
pop
insl
mul
and
mov
mov
imul
adc
mov
neg
dec
pop
addr16
dec
daa
sbb
out
lret
add
jbe
jbe
mov
jecxz
xor
in
andb
fmuls
and
adc
orb
sbb
add
inc
testb
iret
shl
dec
subb
mov
loope
sbb
sbb
inc
add
mov
push
sahf
fdivl
sub
mov
mov
insb
sub
leave
out
or
mov
mov
sbb
and
sub
or
aaa
push
je
aam
adc
jp
std
inc
mov
dec
sub
push
pop
adc
outsl
mov
scas
fimuls
pop
xor
jbe
cli
loopne
jae
xor
xchg
jno
mov
sahf
icebp
and
ljmp
mov
shll
imul
dec
fdivrl
leave
sbb
idiv
mov
ja
and
dec
dec
cmpsb
fcompl
jl
push
mov
cli
or
popa
xor
xchg
and
stos
lcall
fwait
in
mov
lcall
mov
and
lock
inc
out
test
gs
sbb
jecxz
movsl
push
xor
jg
pop
mov
xchg
dec
daa
test
cmpsl
sarb
adc
xor
cmpsb
jne
cli
mov
insl
sbb
cli
dec
xchg
sub
loop
and
push
repnz
mov
int
loop
xorl
mov
jne
inc
xchg
xchg
popf
aas
sub
mov
pushf
dec
fiadds
pop
xor
inc
movl
pop
mov
push
adc
imul
sbb
repz
or
or
mov
das
sub
sarl
test
jae
mov
daa
sub
test
inc
adc
outsl
mov
pop
arpl
lds
dec
sub
mov
sbb
add
push
inc
sbb
cli
mov
xchg
sub
jle
xor
lds
mov
das
push
orl
mov
add
mov
lods
call
push
mov
jbe
cmpl
mov
xchg
and
cld
jle
out
fnsave
pop
nop
mov
inc
ret
push
nop
cmp
or
sbb
or
and
mov
imul
jl
ljmp
mov
mov
mov
fisttpll
sub
loope
jne
hlt
mov
cmp
mov
or
jmp
or
cld
sub
or
xor
xlat
and
or
popf
inc
icebp
pop
loope
scas
mov
adcl
mov
push
mov
nop
lds
push
xor
inc
std
sub
data16
stos
mov
out
pushf
jae
inc
and
cmp
lods
loop
js
enter
int3
dec
push
sub
mov
push
push
cmp
mov
push
jg
loopne
fwait
int
shll
std
push
pop
inc
sbb
popf
pop
scas
adc
inc
sbb
bnd
jno
mov
shl
and
xchg
jge
cwtl
xchg
push
jnp
push
dec
or
lahf
add
pop
lcall
or
stos
lods
test
icebp
mov
outsl
hlt
out
mov
ret
xchg
xor
mov
mov
fnstcw
movsb
shrb
sub
cltd
jns
or
mov
pop
aad
lret
pop
outsb
push
jecxz
sbb
imul
cld
sbb
fistpll
cltd
lret
lds
scas
push
pop
jo
mov
dec
mov
xchg
mov
mov
mov
arpl
xor
sbb
xor
in
fiaddl
mov
scas
call
pop
sub
pop
fbld
in
jge
and
sbb
or
jl
jecxz
aam
xor
xlat
jmp
sar
inc
nop
cmp
dec
push
sub
inc
orb
lahf
daa
sbb
icebp
xchg
pop
fwait
and
xor
fwait
and
dec
test
xlat
mov
dec
fwait
xor
xchg
lret
xchg
testb
mov
lcall
push
and
lret
icebp
and
sbb
int
or
stos
sbb
rclb
adc
enter
jae
gs
sub
fbstp
mov
dec
sahf
sbb
dec
into
ret
jl,pn
nop
ret
pop
repnz
xchg
sti
push
dec
jnp
pop
cmp
jne
xchg
repz
and
mov
icebp
and
mov
mov
jle
or
pop
stos
insl
ds
sahf
mov
push
dec
loop
mov
mov
out
lods
out
into
popf
push
sbb
cmc
sub
in
idivl
or
aam
aas
in
in
push
mov
imul
outsb
shll
adc
sub
inc
mov
ror
hlt
rorl
add
mov
mov
xchg
or
lods
push
fucom
cmp
hlt
inc
mov
adc
imull
ja
lock
in
movsl
aas
cli
inc
push
std
in
cmp
cli
xchg
jg
in
xor
fdivs
pop
mov
mov
insb
sub
pop
cmp
and
inc
add
pop
repz
cmp
jp
loopne
mov
jle
mov
sbbl
adc
std
fs
loope
push
push
and
dec
lods
ss
sbb
and
fcompl
dec
cmp
sub
cmpsl
call
stos
push
xchg
test
jge
jmp
inc
mov
mov
jns
jae
mov
add
cmp
es
adc
loop
push
stos
xchg
inc
fsubrs
mov
dec
mov
jle
xchg
cmp
cmpsb
push
pop
sbb
xchg
das
arpl
dec
sarb
inc
sub
pusha
bound
dec
mov
sbb
jb
or
cs
push
lock
mull
stc
or
jb
push
addl
jno
scas
pop
add
mov
sub
cld
gs
push
xchg
push
idivb
testl
sub
dec
fs
dec
imul
in
out
mov
lods
sub
icebp
mov
aam
mov
pop
jno
leave
movsl
jle
add
cmp
in
add
mov
hlt
mov
pop
fbld
sub
stos
out
sbb
fldcw
jb
loope
inc
cmp
sub
pop
pusha
inc
sub
call
mov
loop
dec
adc
imul
xor
test
inc
mov
jecxz
mov
push
pop
cmp
ret
repz
mov
adc
xchg
imul
mov
out
sbb
sarb
and
cld
cmp
push
adc
enter
int
in
inc
ret
pop
test
dec
mov
mov
jo
inc
fdivp
stos
xchg
out
mov
and
mov
add
push
jl
into
in
stos
inc
es
icebp
popf
cmp
cmp
in
jb
fsubs
in
sahf
les
dec
push
mov
je
pop
lea
and
adc
insb
icebp
icebp
loop
popa
add
add
cld
sbb
fistpll
pop
push
xor
repz
int
adc
cld
iret
mov
and
jo
in
push
push
mov
sbb
push
push
sub
cli
push
xor
sysret
insl
adc
push
shl
dec
clc
in
mov
sub
push
or
test
int
lret
xchg
cmpsb
out
test
xor
pushf
adc
repnz
cmpsb
loope
ds
push
mov
mov
adc
push
scas
into
add
dec
std
fsubrl
mov
aam
aaa
cli
pop
sbb
test
mov
adc
fdivrs
mov
jle
push
cmc
cmp
cmp
leave
or
mov
sbb
add
jno
enter
test
xchg
repnz
and
in
ficoml
adcb
or
sub
stos
push
or
adc
mov
fs
pop
mov
loope
sub
jbe
push
mov
sbb
dec
in
aaa
dec
scas
int3
pusha
jae
testl
sarb
addr16
sbb
out
mov
outsl
push
jns
cmpsl
add
xchg
outsl
pop
andb
mov
aad
fucomip
push
inc
mov
decl
push
pushf
xchg
into
sbb
jle
jno
fstpl
mov
inc
iret
xchg
loop
dec
ret
sbb
out
imul
adc
push
and
out
loopne
adc
sti
in
dec
ja
lcall
ja
sub
adc
pop
sbb
mov
push
cmp
ss
pop
test
push
xor
out
mov
lds
sub
je
xchg
call
in
mov
xor
mov
out
in
ja
outsb
scas
sahf
push
or
xchg
das
push
adc
out
mov
xor
jne
test
clc
out
mov
jne
lcall
cmp
rcrl
cmp
ds
jbe
test
leave
xchg
imul
sbbb
shl
mov
divb
pop
sahf
jl
jbe
jmp
lods
movsb
and
sbb
outsb
mov
fstpl
pop
ret
and
lcall
aas
and
mov
sbb
lcall
repz
aas
repnz
leave
mov
cmp
inc
and
mov
sub
ja
mov
cmp
mov
pop
andl
fdivp
add
inc
adc
mov
and
pop
pop
dec
mov
es
subb
inc
pop
pop
mov
xlat
and
push
and
dec
test
xchg
jo
int3
mov
aas
cs
movsl
inc
lret
div
mov
or
xchg
sub
or
test
fs
jmp
out
nop
shrl
cmpsl
pop
das
pop
test
mov
shl
fistpll
nop
or
stos
mov
daa
fsubrs
iret
rcll
roll
inc
jae
jl
pop
pop
xor
push
shll
add
call
dec
popa
sbbl
out
mov
sub
lods
add
lods
in
lods
fsubp
dec
pop
stos
sbb
movsl
mov
mov
inc
xlat
cmove
xchg
clc
bnd
mov
xor
sar
add
xchg
pushf
jmp
rclb
sub
mov
enter
xchg
les
addr16
lcall
and
pop
roll
inc
xchg
imul
jmp
inc
inc
sarl
rolb
inc
arpl
movsl
shl
sbb
loop
lock
in
and
push
rol
mov
divl
icebp
inc
jg
inc
push
pop
test
mov
jg
enter
testl
pop
cltd
sbb
fidivs
or
push
pusha
jge
cs
jp
cmp
and
jnp
inc
out
hlt
inc
inc
ds
testl
or
sbb
pushf
mov
adc
inc
xor
push
repz
int
xor
push
and
sbb
popa
fsubrp
gs
incl
xor
icebp
fsubl
pop
ficoms
xor
add
faddl
icebp
xchg
cmp
mov
pop
push
aam
push
inc
inc
shlb
insl
not
lods
jnp
mov
mov
nop
int3
sbb
sbb
adc
outsl
loopne
cmp
andl
insl
je
fsubr
movsl
dec
mov
scas
dec
std
stc
xchg
mov
lds
cmp
pop
mov
xchg
cmp
xchg
cwtl
ret
cmp
lret
push
rorb
push
push
sbb
fwait
mov
pop
aaa
rclb
push
lea
icebp
mov
lahf
out
aaa
lock
daa
jg
adc
jge
out
sub
xchg
mov
sub
dec
mov
push
mov
lock
pop
adc
adc
icebp
sub
jo
xor
stc
lock
arpl
dec
stos
push
pop
cmp
fisttps
lahf
lcall
addb
and
push
cs
xlat
imul
push
mov
out
pop
xor
ja
lea
ret
xor
insb
aaa
aad
pop
push
ffree
into
ja
cmpsl
dec
mov
jne
movsl
shl
pop
fildl
mov
jo
sbb
mov
cmp
lods
push
fstpt
add
pop
jno
daa
pop
inc
test
xor
popa
adc
rcrl
sub
das
cs
pop
sbb
clc
cmpsl
pop
cld
xchg
mov
add
ljmp
sahf
movb
mov
sbb
and
cmp
jge
fucom
xchg
dec
or
cli
xor
sub
incb
rorl
xchg
jmp
daa
lock
add
bound
stc
ds
outsb
jno
in
cwtl
jns
imul
call
lock
inc
lods
pop
clc
xor
movsl
decl
mov
imul
xchg
sub
mov
cwtl
dec
mov
jbe
push
addr16
add
cmp
ja
mov
lock
lea
inc
loopne
sub
mov
push
das
stc
pop
mov
scas
xchg
push
cltd
push
movsl
xor
lods
rcrl
cmp
arpl
test
movsl
js
push
movsl
fwait
cmp
inc
orl
cmp
cwtl
or
add
pop
and
repz
mov
data16
xor
inc
xor
call
in
nop
cmp
and
cmp
std
sbb
enter
sub
and
inc
push
add
pop
xchg
xor
aad
je
add
dec
in
xchg
popa
mov
jno
add
jne
push
sbb
push
mov
pusha
arpl
shll
mov
dec
sahf
xorb
subl
jne
jo
sub
aaa
xor
ror
jne
loop
adc
in
fcomip
gs
sub
bound
mov
mov
ja
pushf
adc
sbb
pop
adc
dec
mov
fwait
ja
pop
aam
mov
pop
scas
lahf
ds
lods
sti
dec
repz
les
loopne
add
inc
adc
jecxz
dec
mov
outsl
push
jb
outsl
cli
in
fsubr
pop
je
mov
push
cmp
or
push
pop
mov
icebp
adc
xchg
xor
mov
mov
pushf
fsubrs
mov
mov
pop
and
cwtl
mov
lods
mov
inc
shll
pop
pop
sbb
scas
adc
dec
into
sub
mov
push
add
or
add
cld
mov
and
lds
shl
mov
lret
dec
loop
stos
push
ds
out
mov
and
cmp
jbe
movsl
dec
dec
push
stos
mov
cli
push
in
jmp
push
lahf
mov
pop
sub
mov
int
jg
push
jbe
test
and
lcall
filds
sti
adc
stos
mov
jae
movsb
adc
aad
mov
imulb
fnstenv
lock
cwtl
movsl
xor
je
pushf
ss
gs
jae
in
adc
test
sbb
arpl
mov
dec
mov
fisttpll
inc
jno
ja
enter
addl
or
das
lds
fs
xchg
les
test
loopne
stos
outsb
jo
mov
mov
fcoms
jle
les
sahf
or
mov
repz
mov
lds
test
or
les
dec
std
cmp
adc
popa
xlat
pop
adcb
adc
shrl
xchg
or
arpl
imulb
cmp
subb
lret
xchg
jo
cmp
into
inc
mov
jne
jecxz
cmovo
mov
or
psubsw
push
cmp
out
sbb
or
lret
stc
dec
mov
scas
and
add
bound
sub
mov
aad
test
inc
ljmp
mov
and
outsl
add
shrl
not
push
cmpsl
or
cltd
lods
sbb
mov
and
pop
xchg
and
push
imul
push
fdivl
sbb
lcall
cld
movsl
xchg
lods
aam
dec
sti
adcb
in
or
je
sbb
or
adc
mov
outsl
mov
add
imul
iret
outsl
sbb
lret
and
dec
dec
inc
or
mov
test
inc
mov
iret
mull
mov
ss
adc
inc
mov
inc
push
je
adc
xchg
mov
adc
xchg
sub
or
jns
loope
or
mov
mov
dec
enter
les
add
lea
mov
aas
pop
pop
ds
mov
test
sub
inc
push
sub
pop
iret
push
inc
cmpsl
sub
or
dec
out
cmp
jae
sti
clc
cmp
xor
jl
mov
loopne
mov
sub
sub
push
shrb
or
cs
mov
xchg
mov
clc
xchg
mov
pop
push
jmp
dec
std
das
xor
add
xchg
mov
mov
sbb
shlb
mov
dec
mov
xor
testb
scas
dec
aaa
sub
out
sbb
popf
daa
pop
mov
lret
adc
jnp
psubusw
ja
jge
jl
mov
or
pop
push
or
pop
fistpl
add
pop
pop
and
dec
cmp
or
out
and
shll
pusha
jbe
pop
sti
rol
int
push
rcl
jp
jo
jp
add
inc
mov
movsl
mov
mov
dec
cmp
xchg
aam
xor
xor
pop
outsb
je
push
daa
lea
sbb
xor
mov
out
mov
stc
sub
ds
or
xlat
push
xchg
cmp
es
jl
dec
mov
push
mov
fcmovnbe
inc
ret
rcrb
inc
sbb
js
test
out
adc
push
jb
dec
cs
fcomps
inc
scas
lods
push
pushf
and
popf
push
and
xor
ret
fwait
jl
xchg
outsl
adc
and
adc
das
fidivrl
out
out
iret
fistpll
das
das
aas
pop
nopl
outsl
jg
dec
dec
pop
mov
lahf
out
out
iret
fistpll
das
das
aas
pop
nopl
outsl
jg
dec
dec
pop
mov
jg
jg
iret
into
fistpll
scas
das
aas
push
ud2
pop
jg
jbe
pop
dec
jg
cmpsl
scas
cmpl
out
dec
fistpll
das
rclb
or
out
mov
int3
int3
int3
int3
sbb
or
cmp
sub
in
es
or
add
cltd
mov
mov
fdiv
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
mov
fdiv
clc
loop
shr
ret
adc
and
xor
inc
jb
bound
push
out
rolb
movsb
mov
ret
addr16
cmp
out
or
mov
xor
leave
cmp
pop
cltd
cmp
bound
xchg
std
jb
dec
popf
std
pop
std
dec
sbb
xchg
push
orl
pop
ds
hlt
hlt
lret
in
outsb
fwait
and
test
iret
jb
pop
adcb
sar
sub
sbb
icebp
adc
cmpsl
jae
jb
mov
mov
daa
mov
call
fidivs
jb
popf
xor
testl
and
enter
clc
xchg
lock
fidivrl
xlat
ja
mov
pusha
addr16
add
sbbb
call
and
adc
add
pop
bound
jno
xorl
shl
loop
call
icebp
pop
push
pop
inc
sub
push
lret
lret
cld
int3
in
fcomps
test
push
adc
xor
dec
dec
js
cmp
imul
into
mov
popf
mov
lods
jge
fs
push
inc
jbe
push
dec
bound
push
mov
fdiv
enter
call
and
adc
add
dec
bound
push
mov
fdiv
enter
call
aaa
xchg
pop
shll
sub
lods
cmp
stos
enter
jle
in
in
ja
inc
mov
jmp
inc
in
xor
add
addr16
stc
stos
pushf
fnstcw
inc
std
mov
mov
inc
jno
test
dec
pop
sar
mov
xchg
and
mov
movsl
push
mov
mov
hlt
ss
xchg
mov
pusha
adc
aam
arpl
jae
testb
jge
and
sbb
mov
or
sbb
pop
push
adc
mov
lds
call
ret
mov
js
ss
cmp
jb
push
add
outsb
hlt
xor
fbstp
es
jae
sbbl
mov
dec
aam
loopne
inc
dec
add
cmp
or
xchg
into
jmp
int
jmp
negb
popf
aaa
pop
stos
dec
xchg
xlat
in
add
cmpsl
dec
fcmovne
xchg
ret
jmp
cld
and
das
mov
cld
es
shlb
xchg
enter
xchg
inc
shlb
xor
xchg
push
xor
jae
test
scas
mov
dec
insl
mov
out
mov
repnz
aaa
push
outsl
imul
fwait
icebp
shll
scas
mov
dec
stos
pop
mov
and
data16
jnp
hlt
in
in
jge
insb
rorl
ja
pusha
mov
mov
jmp
popf
cmp
cwtl
pop
movsl
test
sbb
mov
add
pop
fdivl
mov
mov
gs
jg
sbb
popf
inc
shlb
pushf
adc
call
arpl
add
push
adc
pop
xchg
add
loopne
mov
xor
and
push
pop
pop
xchg
mov
push
pop
sbb
cmp
cmp
es
call
mov
adc
push
outsb
pop
mov
xor
push
xchg
push
cmp
xchg
shlb
sbb
repnz
add
xor
in
aas
push
daa
pop
or
inc
adc
xchg
cmp
out
out
jbe
sar
fldt
mov
lcall
enter
fs
and
push
pop
cs
mov
fildl
push
popa
int3
lds
pop
mov
or
aas
mov
aam
insb
imul
sbb
mov
sarl
adc
outsl
notb
jns
mov
sbb
adc
fnstenv
or
inc
cli
jmp
leave
pushf
scas
and
xorb
inc
xchg
les
lea
pop
leave
pop
outsl
loop
mov
push
lcall
insl
jp
bound
xchg
sbb
pop
stos
scas
clc
cmc
pushf
lret
mov
aas
cmp
mov
jae
cmc
shr
fcomps
ret
mov
into
and
cld
or
insb
pop
ficoml
shl
cmp
or
enter
add
filds
jae
push
pusha
or
push
hlt
sub
in
pop
dec
xchg
lea
lods
mov
add
idiv
fsubrl
sbb
pop
jnp
add
pop
and
enter
in
or
mov
shlb
xor
call
aad
aad
lret
ja
out
ss
hlt
inc
adc
jle
mov
repz
lds
and
mov
pusha
sub
mov
fsts
add
mov
int
ljmp
ret
jo
aas
imul
pop
pop
aaa
lea
sub
or
sbb
popl
bound
incl
mov
mov
pusha
outsb
jmp
xchg
mov
popf
scas
stos
xor
inc
cmp
xchg
cli
cmp
loopne
pushf
add
sahf
enter
test
imulb
cmp
dec
mov
dec
xor
sar
push
fwait
pop
in
test
xor
push
cmp
jg
inc
jmp
inc
mov
mov
pop
loope
loope
pop
int
aas
popa
adc
jge
push
addb
inc
mov
cmpsb
jmp
leave
and
push
push
mov
push
mov
push
push
or
or
jp
mov
pop
sub
jb
mov
fdivs
or
cmpsl
hlt
xchg
es
lods
inc
push
lds
fdiv
pop
inc
stos
loop
les
xor
inc
add
in
lret
cs
mov
cli
test
sub
pop
mov
sar
mov
stc
mov
mov
push
es
jle
mov
loope
mov
enter
fcmovnbe
sti
mov
cmc
mov
sub
les
ror
inc
fdivrl
dec
pop
arpl
repz
daa
inc
imulb
xor
mov
inc
push
sub
outsl
hlt
jl
ret
xchg
loope
orb
rorl
shlb
in
xlat
mov
insl
and
xchg
loopne
bound
shll
mov
decb
xchg
sub
mov
inc
fstl
inc
test
mov
icebp
jnp
out
lahf
repnz
dec
inc
loop
adc
push
andl
cltd
pushf
sarl
sub
dec
jp
mov
inc
push
cltd
add
mov
aad
push
jl
mov
and
outsb
xchg
push
aam
pop
pop
nop
and
hlt
xchg
iret
dec
out
sub
mov
ljmp
xchg
dec
in
or
add
push
or
lock
jl
adc
sub
dec
fnsave
pop
bound
je
mull
mov
fs
pushl
mov
jge
fistpl
pusha
lahf
mov
mov
pusha
ljmp
sti
mov
mov
subl
daa
mov
mov
or
ret
movsl
sub
xor
cs
mov
inc
loope
xchg
in
out
inc
add
xchg
cmp
add
jb
cld
mov
dec
pop
dec
inc
aad
daa
daa
stc
in
aas
xor
jbe
mov
mov
add
mov
jmp
dec
mov
push
out
test
popa
jno
movsl
xlat
dec
inc
push
push
es
rcrb
cmp
mov
subb
daa
cmp
dec
pop
xchg
and
fisubrl
iret
enter
test
xor
iret
mov
flds
iret
stos
dec
imul
mov
in
push
repz
mov
push
mov
lret
push
adc
dec
mov
dec
pop
jle
inc
scas
negl
mov
cmp
cmp
jne
scas
out
pop
xchg
dec
sub
stc
jbe
push
test
fwait
jae
sbb
pushf
jo
and
add
imul
scas
and
test
call
je
mov
jnp
addb
adc
add
cmp
mov
cmp
bound
add
or
mov
inc
xlat
push
rclb
stos
inc
std
xchg
inc
rol
xchg
jbe
jecxz
sti
daa
push
loopne
sbb
or
pop
popa
mov
adc
std
int
fidivl
inc
stos
mov
subl
daa
lock
movsb
and
pop
jno
test
stos
or
std
test
sbbl
cli
out
dec
mov
cli
xor
insl
notb
jge
loop
int3
pop
imul
repnz
add
jecxz
shlb
stos
mov
inc
hlt
mov
xor
dec
xchg
fbstp
stos
ja
cli
inc
mov
jbe
call
jbe
push
rcrb
cltd
jg
sbb
hlt
shr
xchg
pop
in
or
cmp
jge
push
sub
jae
dec
sbb
mov
aas
jg
cmpsb
in
in
cmp
or
xchg
dec
stc
jo
ss
addr16
enter
xor
pushf
push
ss
cmpsb
adc
ljmp
or
inc
add
dec
pusha
sbb
sub
xor
mov
inc
stc
mov
bound
jno
push
fnstenv
pop
jecxz
loopne
sub
stos
sbb
testl
js
pop
ds
adc
add
dec
cmp
int3
mov
lahf
in
outsb
sbb
cltd
in
push
xchg
inc
into
adc
scas
fnsave
push
mov
push
push
xchg
add
xchg
inc
jae
jge
std
fwait
xchg
cld
and
add
xchg
jecxz
in
into
fsts
das
cmp
jg
icebp
movsb
add
dec
aam
test
jne
pop
sar
icebp
pop
push
xchg
dec
xor
lret
sbb
ret
jg
stc
out
pop
push
popf
or
push
sbb
out
cmp
push
lea
mov
push
mov
fistpl
shlb
push
xor
push
ljmp
shrb
das
mov
repz
fdiv
out
nop
xchg
repnz
xor
pop
fldenv
jnp
data16
imull
or
sti
and
jmp
fcompl
push
push
jmp
popf
into
inc
movsl
mov
add
mov
fisttpll
mov
out
out
inc
fs
js
push
mov
scas
testl
mov
cmpsl
sub
or
dec
mov
xor
push
out
xor
add
dec
fwait
cltd
stos
data16
pop
jge
pop
lahf
pushf
inc
pop
cmpsl
push
pop
dec
or
and
outsb
mov
aam
adc
daa
xchg
xchg
lret
testb
mov
cli
add
push
adc
xchg
xlat
jbe
les
or
std
sbb
arpl
xlat
dec
and
add
shlb
sbb
nop
jns
bswap
xchg
or
jnp
lods
push
inc
adc
loop
dec
pusha
push
hlt
push
mov
mov
mov
xor
and
adc
inc
lcall
ljmp
xchg
shlb
inc
sbb
dec
aas
sub
jl,pn
dec
sti
das
in
or
imul
xor
jno
scas
inc
leave
jp
adcl
fidivs
pop
xor
lahf
add
jge
sti
out
add
lcall
sbb
rolb
xchg
adc
cmp
jb
mov
enter
adc
and
mov
aad
dec
cld
ss
test
adc
mov
pop
icebp
sub
push
dec
ljmp
push
ljmp
lock
mov
xorl
jge
fisubrs
test
mov
test
call
leave
adc
sub
subl
xchg
adc
mov
xchg
fyl2xp1
pop
or
mov
out
mov
mov
push
lahf
pop
adc
ror
mov
aad
or
xor
or
lahf
pop
push
outsl
lods
dec
lahf
mov
dec
mov
js
sbb
inc
or
ljmp
rolb
daa
stos
arpl
fistps
and
lret
push
gs
ret
xlat
xchg
push
and
rcrb
iret
int
in
cs
out
mov
add
int3
jmp
cwtl
pop
sbb
in
dec
mov
xor
imul
repz
jo
mov
xchg
add
sahf
push
pop
sbb
bound
jnp
xchg
pop
jp
or
add
sub
cltd
mov
cmp
or
pop
and
divl
imul
add
or
loope
cli
fsubr
addb
imul
addr16
jno
aaa
hlt
and
adc
lods
lock
push
icebp
fsubl
mov
sub
int3
aas
cmpsb
aaa
sub
adcb
sub
xchg
popl
insb
stos
mov
sub
dec
pop
fs
lods
jne
dec
xor
push
pop
jle
cmp
xor
mov
ret
rorb
out
mov
mov
cwtl
mov
push
loop
fwait
xchg
dec
or
inc
and
shll
mov
add
jmp
cmpsb
scas
cmpsl
pop
fidivrs
fidivl
and
xchg
nop
movsb
fxch
outsb
inc
add
test
mov
fs
push
test
xor
cmp
cmpsb
jae
pop
mov
jne
dec
mov
mov
je
out
movsl
or
ss
aam
andb
xor
mov
mov
and
call
int
add
popa
push
pop
or
pop
cli
ja
sbb
lcall
cmp
repz
jno
lcall
rcll
or
addl
mov
or
scas
cmp
in
out
out
rclb
sbb
out
insb
aas
jge
mov
outsl
xlat
mov
faddp
clc
xchg
cmpsl
sub
dec
lcall
adc
fisubl
xchg
or
mov
scas
lods
mov
idivl
nop
aaa
sbb
sbb
mov
push
mov
xchg
push
mov
lds
or
iret
subb
inc
jbe
push
and
fsubl
mov
rorb
xchg
adc
out
mov
adc
in
mov
lret
outsl
jne
stc
popf
xor
adc
pop
jecxz
fwait
xchg
add
fs
push
call
ret
lods
xchg
cltd
add
pop
cltd
mov
sbb
mov
mov
clc
push
mov
ss
jnp
and
loope
mov
mov
arpl
sbb
cld
mov
mov
xchg
push
sub
fs
cli
jp
decl
jnp
lcall
mov
mov
pushf
push
inc
int
in
adc
cmp
hlt
mov
cmp
xchg
and
pop
push
movsl
rcrl
fldenv
adc
lret
fildll
xor
mov
mov
xchg
fs
outsb
insb
iret
imul
pop
sub
outsl
scas
jns
cmp
scas
cwtl
into
shl
pop
xchg
lret
fcoml
cmp
xlat
xor
mov
dec
inc
sub
pushf
push
jmp
and
call
xchg
xor
mov
js
in
jl
arpl
jo
cmpsl
scas
push
cmp
inc
cmpsb
arpl
addr16
dec
push
jae
shlb
movsl
nop
leave
lea
outsb
iret
mov
push
mov
subb
cmpsb
inc
leave
jnp
scas
mov
push
xchg
rcrb
repnz
xor
mov
call
ficompl
cmpsl
rolb
xchg
je
loopne
popaw
and
cli
aam
mov
cmp
and
cwtl
out
adc
cmc
fcomi
rorb
jo
mov
cltd
push
jne
icebp
les
xchg
inc
add
cmp
decb
or
push
add
pop
jno
aaa
ficoml
nop
push
sti
rcll
adcb
stc
in
pop
cmp
dec
jbe
mov
or
push
mov
inc
loope
stos
cmp
mov
in
fxam
inc
pusha
adcl
pop
js
cmp
fstpl
push
stos
jl
mov
ret
sub
inc
adc
cmpsb
shll
gs
fldl
loop
adc
mov
popf
loopne
loope
jne
sarl
mov
fildl
cmp
xor
loop
add
sbb
stos
js
or
outsl
mov
lret
bound
push
adc
sarl
mov
movsl
ret
mov
xchg
aam
aaa
test
inc
pop
sbb
nop
popa
fxtract
or
push
lret
pop
dec
fwait
jmp
jne
push
in
dec
loopne
ret
and
mov
xchg
test
shlb
push
maskmovq
divl
or
adc
enter
ss
adc
jg
add
dec
mov
mov
rol
mov
cltd
divl
mov
sahf
inc
test
insb
js
or
jp
add
fwait
jge
mov
in
in
mov
mov
jae
rorb
push
add
jge
in
jo
aad
xchg
iret
mov
rcll
cli
fnsave
movsl
les
dec
fsubrs
cmpl
pushl
add
cwtl
clc
dec
add
mov
adc
mov
addb
int
lcall
or
xchg
insl
popa
dec
inc
or
cmp
sahf
popa
call
das
or
mov
andb
das
lret
jae
insl
sub
mov
das
xchg
cmpsl
sbb
jg
sbb
loopne
shlb
mov
bound
mov
mov
jbe
call
sub
xor
inc
jl
aam
mov
mov
and
adc
mov
fdivs
fidivl
mov
push
sbb
xor
insl
xchg
adc
mov
sbb
xchg
lea
shrb
movsl
test
jle
pop
xlat
movsb
test
int3
in
pop
mov
jle
pop
enter
xchg
leave
sbb
add
sbb
xlat
adc
shll
xor
into
cmp
jnp
ret
stc
mov
scas
xchg
lcall
jnp
mov
adcl
mov
mov
or
jmp
sbb
push
xor
movsb
jbe
xor
mov
shll
sbb
lock
push
ja
inc
fcmovb
push
sahf
daa
mov
fbld
xchg
test
adc
and
xchg
mov
call
mov
pop
lahf
leave
or
int3
dec
cmp
js
dec
sbb
inc
pop
push
addr16
into
adc
dec
add
push
mov
imul
movsb
and
in
out
xor
inc
inc
shlb
jmp
and
fs
std
inc
mov
int
sub
cmpsb
add
out
cld
int3
shrb
jl
cmp
or
jae
fildl
or
xor
into
lods
inc
gs
mov
test
dec
push
xchg
dec
xor
jle
jecxz
push
cltd
adc
into
int3
je
pusha
adcl
into
mov
cmp
sub
push
sbb
ljmp
jge
inc
mov
movsl
enter
xchg
cmp
or
fnsave
cld
sub
jl
les
inc
rcll
rcr
xor
data16
push
movsb
add
xchg
cld
dec
stos
loopne
mov
shl
mov
imul
jnp
call
dec
jb
lcall
mov
add
in
inc
xchg
push
bound
pop
hlt
fs
mov
call
mov
add
rolb
xor
in
mov
or
daa
stos
mov
push
or
popf
push
sbb
xor
adc
xchg
xchg
xor
or
cmp
clc
inc
enter
or
push
push
lock
xor
movsl
repz
aam
adc
leave
cmp
jg
sub
xchg
jp
cmp
nop
or
stc
lea
push
imul
sahf
sbb
mov
xchg
sbb
rcrb
mov
dec
pop
cli
subb
imul
jnp
pop
movsb
stc
add
jbe
out
lcall
add
or
insl
movsb
cmpsb
xor
movsl
lds
roll
popf
es
rorl
aad
test
xor
outsl
pop
inc
ss
sbb
push
xlat
pop
xchg
test
adc
ror
data16
adc
mov
mov
in
sub
mov
lahf
arpl
add
add
ja
inc
in
mov
jb
mov
sub
push
ret
mov
xor
or
mov
pop
fsubl
dec
sub
lock
lahf
pop
adc
fwait
cmova
xchg
mov
int3
dec
dec
inc
int
push
push
cmp
xchg
pop
ljmp
js
sbb
pop
mov
push
daa
pop
std
test
mov
mov
push
sub
cs
mov
mov
mov
orl
aas
imul
inc
ret
scas
aaa
sahf
mov
std
out
imul
mov
pusha
or
popa
test
jbe
adc
mov
add
scas
fs
jmp
jnp
mov
int3
in
mov
mov
imul
lods
add
faddl
pop
and
enter
or
push
xlat
shlb
adc
into
js
rcrl
dec
sub
mov
clc
pop
clc
imul
hlt
shll
nop
add
mov
push
jge
inc
xchg
icebp
cmc
and
adc
cmp
in
mov
vpaddd
lahf
ficoms
out
int3
dec
inc
fs
adc
inc
fcmovbe
loop
ss
pop
fwait
xor
or
repnz
jno
cmp
mov
mov
pop
add
popa
and
ss
pop
jmp
imul
out
xchg
fwait
rolb
mov
paddsb
mov
and
cmp
xchg
movsl
or
fwait
or
xor
xchg
dec
pop
mov
add
adc
lds
aas
int
in
pop
xor
ret
lds
jecxz
ljmp
cmp
dec
pop
jl
call
inc
sbbb
mov
add
cltd
dec
mov
out
iret
js
sbb
ret
inc
repz
and
jnp
add
mov
jge
ss
stos
dec
out
push
cmp
adc
adcb
aam
sbb
push
lods
fwait
sub
lea
ss
imul
xor
shl
mov
xchg
pop
mov
setno
sti
fistpll
adc
out
inc
sbb
sbb
sub
mov
cli
push
xlat
stos
push
xchg
or
sahf
cmp
pop
repz
call
out
into
cld
test
mov
aam
xchg
inc
cwtl
js
pop
adc
fs
out
sahf
popf
adc
inc
iret
dec
xchg
push
add
pop
mov
clc
sbb
ja
push
xor
mov
jo
outsb
je
mov
int3
dec
in
push
in
dec
jmp
movb
insb
insl
mov
test
mov
sbb
cmp
jl
mov
std
or
cltd
sbb
nop
cmp
in
int
pop
dec
call
shrb
and
pushf
add
lret
mov
int
loope
cli
jnp
xchg
mov
xor
adc
mov
into
lea
fstl
dec
push
rorb
imul
and
push
jb
ffree
stc
popa
dec
push
xchg
repz
xchg
add
adc
stos
je
leave
jle
push
xchg
sub
ret
shl
xchg
cmp
add
std
push
imul
adc
divl
lret
in
jge
aam
ja
sub
pop
jb
xor
movsl
out
jns
fstl
lcall
sub
xor
std
insl
mov
in
pusha
cs
enter
push
pop
shll
js
fistl
push
inc
dec
adc
mov
xchg
add
cmp
adc
inc
jle
shll
cwtl
test
push
pop
sbb
mov
inc
or
movsl
push
loopne
mov
jno
mov
loopne
jecxz
fcomip
hlt
push
das
movsl
sbb
and
and
mov
lds
mov
inc
sub
mov
icebp
lcall
lahf
imul
inc
mov
xor
sub
pop
jb
bound
push
mov
fdiv
enter
call
and
adc
add
dec
bound
push
mov
fdiv
enter
call
and
adc
add
dec
bound
push
mov
fdiv
leave
loop
shr
ret
or
cmp
sub
pop
jb
loop
shr
mov
adc
inc
sbb
int3
int3
int3
int3
int3
and
dec
add
xchg
fstps
sbb
sub
out
xchg
mov
xchg
fiadds
sahf
rcrl
dec
add
cs
ds
push
inc
push
and
scas
sbb
repz
sahf
shrl
jle
dec
sbb
js,pn
imul
mov
mov
test
insl
jle
add
movsl
test
sub
cld
roll
jp
ds
mov
das
adc
addb
dec
xchg
rcll
push
addl
jmp
jg
inc
xor
dec
sub
mov
test
or
mov
and
inc
jle
or
jg
into
outsb
mov
cs
adc
xor
cmp
jle
sbb
fucomp
je
ds
rcll
dec
gs
mov
push
cmp
jns
sub
jecxz
loope
xchg
popa
push
xchg
fidivrs
stc
fistpl
testb
adc
sub
mov
leave
mov
xlat
xor
jle
dec
sbb
cs
jno,pt
inc
push
dec
out
mov
fimuls
mov
sahf
rcrb
and
inc
and
insl
arpl
dec
sub
dec
mov
test
repz
ljmp
jb
jle
popa
pop
aas
push
xor
xchg
aam
in
xchg
in
int
fisubs
push
xor
push
jno,pt
inc
push
push
out
mov
ficoms
mov
sahf
shrl
jle
dec
add
cs
jno,pt
inc
push
push
out
mov
ficoms
mov
sahf
shrl
jnp
ret
xchg
pop
ljmp
stc
cmp
or
jne
cmpsb
xchg
fwait
inc
shrb
insl
clc
inc
sbb
xchg
add
sbb
adc
xor
add
scas
mov
repz
ds
aas
fnstsw
scas
add
add
ficoms
jo
lods
lahf
mov
imul
dec
cmpsb
mov
ja
adc
mov
adc
test
mov
lds
mov
jle
movsl
inc
ss
push
mov
xchg
mov
mov
sub
je
call
push
dec
mov
mov
mov
cmpsl
loop
or
xchg
adc
insl
and
addb
mov
xor
mov
mov
push
mov
and
mov
xor
mov
ja
rcrb
adc
pop
dec
and
into
pop
add
rorl
cmp
js
pusha
cmp
lds
scas
cld
ret
out
push
lods
fnstenv
fildll
or
scas
and
cmp
push
fstl
out
mov
addr16
pop
pop
lahf
and
jmp
data16
mov
jg
and
ret
and
xchg
mov
jmp
mov
in
enter
push
and
xor
cli
dec
je
and
inc
stos
inc
into
xchg
fisubrs
movsl
mov
std
test
pop
sahf
loope
xor
jmp
lea
xor
and
scas
lods
into
jp
push
incl
loopne
pop
adc
inc
cmp
push
shlb
pop
outsb
cmp
adc
mov
test
sahf
nop
clc
hlt
pop
icebp
or
adc
out
dec
inc
pop
xor
fistpl
xchg
dec
das
add
push
ss
imul
cmp
push
stc
pop
or
scas
daa
int
xchg
ficomps
gs
push
push
ja
xor
adc
mov
mov
xchg
movsl
pop
fcoml
sbb
xor
repz
sbb
arpl
mov
inc
lret
loop
pushf
jle
push
add
in
or
cwtl
jmp
pop
pop
outsb
iret
add
xor
jge
daa
pop
adc
pop
xlat
xchg
push
xchg
out
loopne
jecxz
dec
mov
sbb
stc
daa
cwtl
push
lahf
sbb
pushf
push
mov
gs
mov
cmp
cmp
testb
mov
sbb
stos
xchg
inc
mov
leave
xor
jl
or
int
dec
xchg
lahf
pop
pop
cmp
and
jo
pop
xor
test
jne
pop
xchg
cmp
je
push
pop
mov
loopne
add
pop
js
pushf
movsl
dec
adc
jmp
jb
cld
mov
push
pop
jecxz
sub
adc
je
mov
dec
scas
dec
inc
insb
gs
aam
cmpb
fisttps
or
xlat
dec
pop
stos
xchg
push
mov
dec
test
dec
mov
lock
pop
cld
jae
pop
ret
enter
loop
push
sub
sub
sbb
rorl
inc
sub
stos
jbe
imul
fisttps
icebp
cmp
setp
or
outsl
popa
bound
pop
dec
stos
xchg
insl
rorb
fcmovnu
daa
xor
jp
mov
inc
int
adc
or
cwtl
cwtl
xor
cs
adcl
cli
push
aad
int3
cmp
add
pop
std
sub
fcompl
decb
mov
push
xor
cmpsl
pusha
orb
xchg
ret
ja
sub
adc
cmp
sti
clc
sbb
aam
inc
aas
pop
xor
addr16
pop
pop
shlb
mov
in
and
lock
or
push
mov
lods
cmc
adc
jb
mov
stos
push
std
push
sbb
adc
cli
jne
and
jno
fadds
push
cmpsl
xchg
aas
pop
pop
sbb
movq
repnz
add
mov
or
push
pop
sbb
mov
arpl
enter
jo
fsubl
icebp
pop
fimuls
sub
mov
and
add
add
inc
dec
sub
roll
push
aam
pop
pop
mov
jns
movsl
popf
sti
add
nop
mov
xchg
lock
rcrb
sbb
in
xor
in
ret
dec
pop
je
imul
inc
jbe
adc
subb
lcall
adc
cmpsb
xor
fsubrs
cmp
int
cmp
roll
cmp
mov
xchg
cwtl
fidivl
pop
sub
scas
inc
rol
pop
dec
outsl
fidivs
std
and
inc
mov
fdivs
test
pop
pop
aaa
insb
push
xor
pop
shll
xchg
mov
mov
cmc
cmpsb
mov
sub
sub
rorl
jp
jmp
and
pusha
out
mov
cmp
aad
mov
test
data16
adc
ja,pt
jae
inc
pop
xchg
xchg
sbb
add
xor
push
fbld
leave
arpl
fistpl
or
jbe
jmp
fld
lock
daa
sbb
dec
and
push
dec
sbb
cmp
cwtl
push
sub
jecxz
lret
loop
mov
arpl
addr16
or
xor
dec
icebp
and
mull
outsl
inc
and
rcrb
sub
dec
in
mov
lret
push
call
mov
insb
ucomiss
sbb
in
xchg
sbb
loop
test
sbb
jp
cmp
ja
fisubs
sti
jb
pusha
pop
pop
mov
cmp
cmpsb
out
cmp
pop
cld
sbb
pop
lea
cmpsb
and
lcall
push
ficompl
clc
xchg
adc
inc
jecxz
repz
test
shlb
mov
push
dec
push
xchg
mov
or
cwtl
xchg
add
inc
fs
add
add
pop
aaa
add
xor
lods
fnstsw
cltd
movsb
in
pop
call
fmuls
mov
sbb
sbb
outsl
stc
jmp
push
in
bound
adc
pop
insl
popf
xor
mov
fsubr
imul
stc
mov
scas
imul
jb
lock
nop
or
sub
jns
mov
xlat
rorl
les
inc
lock
mov
inc
push
xor
dec
adc
mov
inc
lret
jg
pop
ja
test
push
add
mov
pop
lods
and
cmp
hlt
lds
add
sahf
add
cmp
xor
mov
aas
cmpsl
into
fistl
idivb
scas
js
bound
cmp
jp
pop
mulb
dec
enter
sub
pop
aaa
sbb
ja
dec
mov
ljmp
stos
cmp
enter
and
push
or
icebp
cmpsb
sbb
mov
and
push
adc
sub
out
jp
or
xor
in
rcr
push
sub
int3
out
fcmovnb
arpl
cmp
sub
mov
repz
shl
push
xchg
mov
or
movsl
mov
cmp
fs
lods
sub
push
pop
jae
adc
jge
jae
mov
out
test
lock
imul
dec
mov
gs
out
sub
clc
lahf
cmp
and
dec
lahf
loopne
in
fidivl
bound
sub
push
fstpt
int3
aas
stc
mov
adc
out
test
cmp
cmp
lods
push
xor
dec
sub
popa
jo
pusha
inc
roll
fs
cs
fcoml
push
adc
out
or
sbb
popf
into
nop
xchg
push
xchg
hlt
test
jmp
fs
lret
ret
cli
jmp
fsts
push
mov
lea
or
inc
cli
scas
mov
sub
prefetch
and
mov
cwtl
push
xchg
push
xchg
mov
add
inc
pop
jne
fdivrs
sub
mov
adc
or
scas
or
repz
js
pop
lock
adc
jg
or
mov
sub
and
xlat
das
or
mov
clc
mov
mov
push
rclb
xchg
ret
mov
popa
mov
rcll
daa
dec
jb
mov
mov
repz
or
std
not
insl
cld
cltd
pop
int3
adc
pop
pusha
in
enter
inc
shrl
and
inc
imul
hlt
jb
pslld
cmp
fdivrl
xor
inc
push
jmp
test
sarb
repnz
ljmp
insl
push
add
add
sub
inc
fnstcw
and
cmp
dec
mov
das
fwait
push
pop
imulb
lcall
les
rolb
xchg
mov
pop
insb
mov
cli
pop
sub
mov
xor
pop
mov
add
sbb
and
push
outsl
outsb
shl
pop
push
and
imul
inc
testb
fcoml
jae
lea
outsl
dec
mov
sub
dec
popf
int
push
test
pop
mov
aad
sub
cmp
mov
pop
gs
nop
mov
bound
xor
cmp
iret
pop
in
negb
int3
pop
and
xchg
jmp
shll
xchg
fninit
xor
fcmovbe
sub
frstor
outsb
movsb
fstps
jb
cmpsb
ss
pop
xor
fwait
add
sub
test
mov
add
and
les
scas
add
cltd
leave
jae
add
icebp
clc
dec
or
cmp
or
sub
call
test
xor
sub
adcl
fsubrl
movsb
cmp
sub
jge
sbb
aad
cld
ljmp
je
cmp
scas
and
push
sub
repz
mov
addr16
or
sub
fcom
adc
std
cmp
mov
movsb
aam
jl
sub
push
scas
xchg
sbb
into
xor
js
sub
inc
data16
jo
cmp
dec
inc
mov
and
push
push
rep
or
and
shrl
push
mov
jbe
outsl
in
sbb
shlb
mov
les
out
hlt
idivl
cmpsl
inc
stc
scas
mov
fwait
aam
das
xchg
push
jbe
ret
daa
loopne
inc
mov
cmpl
mov
add
loopne
dec
dec
es
outsl
or
or
div
lods
adc
incb
jo
cmpsl
mov
in
ds
stc
fsubs
ret
cmp
arpl
xchg
repz
inc
fcoml
leave
mov
ficomps
adc
mov
add
jg
xchg
popa
or
loope
iret
in
xlat
mov
fadd
jmp
stos
xor
repnz
push
mov
std
fldcw
cmp
imul
dec
xor
faddl
sub
inc
js
rorl
ds
frstor
addr16
mov
add
mov
test
sahf
sub
lock
mov
enter
int
inc
in
xchg
xchg
std
lods
fimull
lods
and
cwtl
cld
mov
loope
fdivr
inc
fmuls
lcall
scas
cli
pop
mov
iret
mov
push
adc
pop
outsl
pop
mov
mov
sub
fcmovb
inc
xor
aaa
mov
push
inc
or
jnp
xor
mov
test
add
xor
cmp
insb
es
push
or
icebp
imul
pop
dec
pop
inc
inc
jne
push
cld
cs
ljmp
sar
inc
dec
fcmovnu
icebp
aas
jb
and
xchg
add
adc
mov
pop
ds
shll
les
mov
dec
fdiv
mov
cmpsb
sbb
mov
aam
scas
add
sub
pusha
sbb
inc
dec
jl
adc
stos
les
pushf
dec
cmpsb
adcb
or
ja
cmc
neg
mov
js
adc
insb
mov
mov
addr16
in
lods
jmp
add
jne
scas
dec
xchg
pushf
or
repnz
arpl
arpl
or
xlat
cs
rorl
ret
cld
aad
mov
ret
ja
cmp
jmp
cmp
jge
pop
and
fildll
xchg
inc
push
fidivl
scas
xor
int
cltd
andps
pop
push
pop
and
data16
dec
push
jle
add
in
cmp
dec
and
and
rcl
fmul
sahf
testb
cmpsb
rorl
stc
pop
sbb
push
sbb
fnstenv
daa
lock
out
push
movsl
mov
imul
dec
xlat
dec
push
mov
mov
mov
mov
lock
jae
loope
adc
pop
leave
mov
push
adc
add
test
addr16
inc
sbbb
jb
adc
mulb
lahf
subb
xchg
aaa
cmp
rcrl
loopne
pop
xor
sbb
xchg
pop
add
lds
xchg
jae
xchg
inc
inc
mov
or
jle
mov
ds
into
adc
mov
js
andb
daa
dec
jecxz
cmpsb
push
mov
test
cmp
repnz
nop
cmc
mov
push
jp
xor
adc
pop
adc
nop
popa
mov
push
sarl
stc
fs
jo
jl
mov
cs
nop
lds
and
adc
jae
cmp
sahf
rclb
push
mov
pop
ficomps
insb
daa
fcmovb
es
sbb
loope
sbb
inc
or
push
movsl
out
xchg
sbb
and
dec
sbb
fs
call
js
shr
data16
sbb
fsubrl
inc
lea
xchg
xor
pop
insl
cmp
dec
and
ja
adc
fidivrl
orb
inc
mov
out
iret
mov
xchg
sbb
xchg
aas
xchg
xor
les
int3
test
push
mov
mov
push
dec
movsl
leave
scas
cmpsb
nop
sbb
sub
jno
jle
xor
fildl
stos
call
add
imul
jbe
jns
push
icebp
xchg
push
pop
inc
sub
std
adc
push
pop
jno
push
cltd
stos
jae
xor
mov
sbb
jge
lds
mov
daa
or
into
out
xchg
push
fs
jne
pop
dec
stc
xchg
nop
push
pop
je
inc
cmc
push
sbb
jnp
mov
loop
push
arpl
lods
dec
jno
adc
and
dec
ja
clc
ss
movsl
push
cmpsl
or
sbb
mov
xchg
stos
lds
mov
jp
cmp
sub
cmp
cltd
ret
or
popf
movsl
push
ds
loope
rorl
and
pop
inc
call
jg
faddl
ret
xchg
add
std
mov
pop
dec
dec
mov
outsl
push
pop
jecxz
movl
push
fwait
mov
mov
jmp
cmpb
mov
movsb
inc
xlat
inc
pushf
js
rolb
mov
inc
popa
jnp
inc
scas
inc
popf
mov
inc
mov
inc
sub
mov
mov
or
repz
push
std
movsb
mov
xor
aad
mov
shll
mov
dec
add
das
in
or
and
mov
das
or
or
dec
call
xor
lret
pop
push
mov
adc
pushf
or
jecxz
dec
mov
mov
push
or
icebp
and
into
pop
add
repz
ja
ja
push
enter
push
push
and
shlb
sbb
mov
mov
and
adc
leave
enter
xor
lods
fsubr
jb
push
push
jg
adc
xlat
cmp
cmpsl
outsl
dec
repnz
pop
xchg
ss
fisttpll
cmc
xchg
xchg
daa
shlb
push
pop
fstps
roll
imul
dec
movsl
test
sbb
fistpl
sbb
dec
dec
jo
lods
testb
mov
in
cmp
adcb
mov
mov
stos
aad
je
scas
mov
test
or
adc
sub
xor
pop
shlb
loopne
xchg
shrl
pop
js
int
ljmp
sti
xchg
fucom
call
adc
gs
fcoms
xor
pop
mov
into
fdivl
jno
or
imul
mov
push
notl
or
pop
mov
pop
dec
or
dec
into
mov
sub
or
mov
loopne
pushf
cmp
arpl
cltd
int3
sbbb
jg
mov
rol
mov
sbb
cmpsb
or
add
mov
out
add
imul
ret
lahf
ss
clts
mov
clc
adc
jbe
and
test
inc
out
aaa
dec
rorl
mov
xorb
pop
inc
cmp
adc
aad
enter
dec
lahf
ret
xchg
leave
pop
test
xchg
pop
or
cmc
cmpsb
shlb
andl
xor
pop
mov
stc
pop
sbb
cmc
loopne
loopne
or
inc
dec
lcall
loope
jle
xor
stos
sbb
sbb
cwtl
add
sub
ds
mov
loop
loopne
lea
stos
rol
and
or
xchg
decb
xchg
jl
test
inc
jl
mov
sub
addr16
add
pop
stos
mov
je
clc
jecxz
xor
push
or
dec
xlat
sub
iret
xchg
frstor
xchg
and
mov
add
mov
stos
scas
jle
dec
push
jmp
mov
int3
add
je
xlat
mov
cld
jno
sub
fldcw
push
out
sti
outsl
hlt
lret
arpl
add
leave
inc
ss
std
push
sarb
pop
out
int
push
dec
push
repz
aas
and
loop
lcall
jo
ret
dec
mov
movsb
sti
in
jp
cmpl
rcrl
dec
std
mov
or
pop
cld
jmp
mov
xchg
jbe
roll
lahf
das
cmc
mov
push
jg
push
inc
cltd
mov
or
aam
pop
push
popf
and
push
cmc
dec
nop
inc
add
sti
popw
mov
hlt
mov
push
jle
das
cld
pop
mov
cmp
rcrl
xchg
pop
fisubrs
ret
mov
add
push
lds
lds
in
cmp
dec
push
cmp
andb
sbb
int
outsb
cmp
push
mov
sbb
mov
inc
leave
popa
sti
outsl
int3
or
outsb
cmp
ficoms
test
scas
cmp
or
negl
sub
and
pop
shll
push
movsl
jns
push
icebp
ret
mov
out
xchg
xchg
mov
mov
mov
lds
lret
xchg
daa
cs
ljmp
lock
push
xchg
addb
sahf
push
or
cmp
pop
out
sbb
dec
enter
jg
movsl
cmpl
js
add
inc
adcl
pop
sbb
pop
rolb
push
shll
mov
xlat
stos
fbstp
xchg
popf
jnp
xor
mull
xchg
ret
inc
sbb
or
adc
scas
cmpb
mov
add
inc
int
int3
or
inc
push
ljmp
imul
or
cli
test
ja
push
sub
xchg
mov
lret
inc
push
loopne
enter
push
icebp
icebp
mov
jno
out
adc
add
in
adc
leave
cmpsl
pop
insl
repz
lret
outsl
pushf
arpl
jnp
jae
xchg
enter
push
and
es
movsb
test
mov
cmpl
daa
add
push
adc
push
hlt
mov
jg
andb
ret
inc
xchg
and
xchg
cmp
daa
jmp
xchg
stc
or
and
or
out
adc
out
in
push
xor
loopne
and
cmp
mov
dec
adc
cmpsl
push
fimull
mov
fildll
aas
push
lods
sub
dec
in
pop
or
aam
push
xchg
mov
sbb
cmc
mov
idiv
int3
adc
aaa
jmp
mov
ftst
scas
in
mov
cmpsb
add
mov
xchg
jbe
outsb
mov
or
out
inc
es
in
fbld
dec
mov
insl
or
xor
movsb
add
insl
xor
inc
daa
cmp
fsubs
and
ret
test
jge
jb
rcl
mov
sub
nop
and
ds
mov
inc
push
fmull
mov
sub
orb
in
pop
movsl
mov
mov
scas
push
and
cld
cli
daa
arpl
pop
mov
test
fstp
dec
in
sub
cmpsl
testb
fcoms
in
fwait
mov
mov
nop
sbb
sub
pop
mov
lods
out
mov
jne
or
and
dec
loope
mov
pop
fstpl
scas
mov
rep
add
aad
add
leave
cmp
pop
mov
mov
shrb
shl
xchg
jecxz
mov
mov
hlt
pop
shrb
xchg
ret
xor
out
or
mov
es
lea
mov
fwait
add
sub
not
mov
add
ficompl
ret
mov
popf
jne
sti
add
pop
jmp
jb
or
pop
mov
ret
fimull
outsb
add
push
adc
test
cmp
inc
movsl
mov
fwait
ss
xchg
ds
leave
loopne
mov
subb
push
jle
adc
mov
loope
adc
cmp
or
aad
outsb
push
or
mov
shrl
mov
jns
push
movl
ss
push
mov
ja
dec
or
pop
clc
aas
aaa
mov
or
push
bound
inc
sub
fnsave
sbb
stos
ljmp
test
cmp
pop
orb
mov
pusha
or
xor
cmc
mov
ret
sbb
dec
test
and
ss
dec
das
mov
sahf
xor
inc
pop
or
xchg
push
adc
xchg
insl
rorb
in
dec
scas
lcall
adc
cmpsl
stc
cmp
jg
adc
cmp
lods
inc
or
push
outsl
xor
push
out
repnz
fnstsw
mov
dec
lock
xor
pop
xchg
push
pop
and
push
lret
add
je
stc
and
mov
clc
add
leave
lret
mov
dec
push
push
data16
cmc
add
adc
addr16
cwtl
or
hlt
sub
mov
imul
cmpsl
decl
mov
clc
lds
push
mov
push
xchg
xor
jno
xchg
dec
push
inc
sub
or
test
push
xor
dec
gs
mov
ret
iret
stos
cmp
jae
lods
pop
jne
cltd
and
adc
aas
sbb
mov
roll
insb
popa
mov
mov
int
cmp
insb
xchg
call
xchg
mov
xchg
and
shll
ficompl
pop
lods
add
jp
inc
aad
scas
int3
inc
stos
dec
xor
adc
popa
jno,pt
inc
push
push
out
mov
ficoms
mov
sahf
shrl
jle
dec
add
cs
jno,pt
inc
push
push
out
mov
ficoms
mov
sahf
shrl
jle
dec
add
cs
jno,pt
inc
push
push
out
mov
ficoms
mov
lahf
aad
and
pop
adc
popa
jno,pt
inc
push
xchg
out
mov
fsubp
fldcw
mov
popa
scas
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
push
call
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
push
push
call
add
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
add
add
push
add
add
inc
add
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
pushf
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
push
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
les
add
int3
push
add
aam
add
faddl
add
in
add
in
push
add
hlt
push
add
pop
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
or
add
add
mov
add
test
add
jl
add
je
add
insb
or
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rorb
add
fmull
add
lock
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
or
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
