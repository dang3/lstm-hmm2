jmp
test
dec
sub
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
int
mov
dec
test
xor
mov
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
jmp
rcll
aaa
dec
pop
cmp
cmp
xor
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
and
inc
rorl
push
pop
movsbl
jmp
fbstp
sbb
mov
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
dec
pop
cmp
cmp
xor
and
repz
jecxz
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
int
mov
sbb
orps
and
xor
in
jmp
adc
subl
jns
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
cmp
and
addr16
jmp
in
xchg
sti
jmp
sbb
out
add
stc
inc
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
jmp
xchg
scas
shrl
mov
sbb
pop
lret
lods
jmp
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
push
dec
pop
push
jmp
cmp
jmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
aad
in
daa
fldenv
push
mov
xchg
scas
shr
imul
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
push
xor
sub
pop
mov
jmp
inc
jmp
pop
cmp
mov
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
leave
mov
dec
push
xchg
scas
shrl
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
push
ror
xor
dec
pop
push
jmp
cmpsl
pop
and
cmp
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
jmp
lds
jno
std
imull
mov
loope
in
daa
push
not
pop
mov
jmp
mov
sbb
inc
mov
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
jmp
shr
aas
adc
pop
cmp
icebp
fwait
jmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
int
fstl
push
xchg
scas
shrl
mov
lret
imul
cmp
out
jmp
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
jmp
cmp
jmp
and
addr16
in
xchg
jmp
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
mov
push
jmp
cltd
arpl
adc
cmp
outsl
sub
jns
jmp
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
cmp
and
rorl
addr16
in
xchg
sti
sbb
out
add
and
inc
out
pop
mov
jne
push
mov
push
mov
push
mov
test
push
mov
jne
jmp
in
daa
fldenv
push
mov
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
leave
ja
aas
jmp
mov
pop
and
aas
sarl
pop
xlat
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
pop
jno
std
imull
mov
loope
in
daa
fsts
pop
jmp
push
xchg
scas
shrl
inc
xchg
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
jmp
pop
and
xlat
leave
rcll
or
xor
sub
pop
pop
jmp
cmp
jmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
pop
jmp
inc
lahf
icebp
fstpt
jmp
jmp
mov
pop
and
aas
sarl
pop
xlat
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
pop
jno
std
imul
cmp
mov
loope
in
jmp
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
and
shr
pop
pop
jmp
pop
and
dec
pop
xlat
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
lds
in
daa
fldenv
push
mov
xchg
scas
shr
imul
int
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
jmp
mov
pop
and
xlat
leave
rcll
lock
inc
cmp
jmp
test
dec
sub
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
int
mov
dec
test
xor
mov
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
jmp
rcll
aaa
dec
pop
cmp
cmp
xor
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
pop
xor
jmp
mov
sbb
dec
mov
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
jmp
pop
cmp
mov
cmp
and
icebp
dec
jmp
sub
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shr
imul
mov
sbb
push
not
add
pop
mov
jmp
sub
jmp
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
cmp
and
addr16
in
jmp
xchg
sti
sbb
out
add
push
ror
dec
add
pop
cmp
je
jmp
mov
fucomp
inc
push
dec
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
jmp
iret
popa
mov
pop
and
cmp
leave
rcll
jmp
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jmp
jno
std
imull
mov
loope
in
daa
fldenv
push
inc
pop
mov
jmp
imul
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
jmp
leave
rcll
pop
cmp
cmp
shr
pop
push
push
mov
jmp
mov
fdivl
mov
sbb
pop
sbb
mov
xchg
add
dec
stos
mov
pop
jmp
imul
jmp
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
leave
ret
jmp
inc
lahf
icebp
fstpt
jmp
jmp
mov
aas
insl
cmpsl
pop
and
xlat
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
int
or
pop
jno
std
imull
mov
dec
rol
pop
pop
jmp
fstl
push
xchg
scas
jmp
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
leave
cmpsl
pop
and
xlat
leave
rcll
add
pop
push
push
push
jmp
mov
pop
jmp
fwait
jmp
cmp
add
add
cmp
test
add
jmp
sbb
in
xchg
sti
jmp
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
cmp
mov
mov
pop
lret
lods
out
jmp
arpl
adc
aas
popf
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
jmp
rcll
pop
cmp
cmp
and
addr16
in
dec
sub
pop
pop
jmp
inc
lds
jno
std
jmp
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
jmp
or
push
outsl
subl
inc
lahf
icebp
fistl
xchg
and
lcall
mov
add
jmp
sarl
pop
xlat
leave
shr
cmp
dec
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
jmp
imull
mov
loope
jmp
in
daa
fldenv
push
mov
xchg
scas
shrl
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
jmp
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
push
pop
cmp
jne
jmp
and
addr16
dec
jecxz
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
mov
pop
jmp
lret
lods
out
arpl
adc
pop
jmp
or
cmp
sub
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
jmp
cmp
cmp
and
addr16
in
push
pop
mov
jmp
stc
inc
lds
jno
dec
pop
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
jmp
subl
aas
ret
inc
lahf
icebp
fstpt
jmp
icebp
popa
mov
pop
and
cmp
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
jmp
add
lds
jno
std
imull
mov
loope
in
daa
fsts
mov
lcall
xor
cmp
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
lret
and
cmp
leave
rcll
repz
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
push
sub
rol
or
pop
pop
jmp
push
xchg
scas
shrl
dec
xchg
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
cmp
leave
rcll
pop
cmp
push
add
sub
and
pop
sub
jmp
sbb
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
jmp
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
jmp
lret
lods
out
arpl
aas
gs
adc
pop
or
push
outsl
subl
inc
lahf
icebp
jmp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
cmp
and
push
ror
sub
pop
push
jmp
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
jmp
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
loope
jmp
popf
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
cmp
leave
shr
aas
adc
pop
cmp
cmp
and
jmp
jecxz
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
xchg
and
jmp
xchg
and
lcall
add
cmp
mov
inc
sub
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
jmp
pop
cmp
cmp
push
shr
pop
add
jmp
sti
sbb
jmp
out
add
lds
jno
std
imull
mov
jmp
loope
in
jmp
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
jmp
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fistl
pop
add
jmp
pop
and
inc
pop
xlat
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
leave
repz
mov
loope
in
daa
fldenv
icebp
mov
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
sub
pop
dec
jne
jmp
sarl
pop
xlat
leave
shr
cmp
dec
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
jmp
imull
mov
loope
jmp
in
daa
fldenv
push
mov
xchg
scas
shrl
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
jmp
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
push
pop
ret
jmp
and
addr16
dec
jecxz
mov
mov
or
pop
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
mov
pop
jmp
lret
lods
out
arpl
adc
pop
jmp
or
cmp
sub
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
jmp
cmp
cmp
and
addr16
in
push
and
pop
add
jmp
stc
inc
lds
jno
dec
pop
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
jmp
subl
aas
ret
inc
lahf
icebp
fstpt
jmp
icebp
popa
mov
pop
and
cmp
leave
rcll
pop
cmp
cmp
and
addr16
in
xchg
sti
sbb
out
jmp
add
lds
jno
std
imull
push
ror
ror
pop
pop
jmp
scas
shrl
mov
fbstp
sbb
pop
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
pop
xlat
leave
rcll
jmp
pop
cmp
jmp
cmp
xor
and
addr16
in
xchg
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
jmp
fstl
push
xchg
scas
shrl
mov
xor
pop
mov
jmp
lret
lods
out
arpl
adc
pop
or
push
outsl
subl
inc
jmp
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
cmp
aad
and
jmp
addr16
in
xchg
sti
sbb
icebp
aad
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
leave
pop
ret
jmp
cltd
arpl
adc
inc
popf
pop
or
push
outsl
subl
inc
lahf
icebp
fstpt
jmp
mov
pop
and
xlat
leave
rcll
pop
cmp
cmp
xor
aas
cmc
and
addr16
in
xchg
jmp
sti
sbb
out
add
lds
jno
std
imull
mov
loope
in
daa
fldenv
fstl
push
xchg
scas
shrl
mov
sbb
mov
push
mov
sub
sub
jmp
and
movsb
pop
lea
inc
push
inc
ljmp
cmp
rcrl
mov
push
xor
mov
mov
mov
sub
add
add
sub
add
and
and
and
lea
sub
xor
dec
xor
xor
or
rol
ror
add
dec
jne
mov
mov
push
jmp
das
mov
jmp
jmp
or
jmp
dec
jae
movsl
pop
xchg
sub
rol
subl
add
add
jmp
add
adc
mov
out
dec
les
jmp
cmp
add
or
add
jne
leave
ret
push
mov
sub
push
sub
jmp
mov
and
or
add
movsl
pushf
pop
dec
jg
gs
sub
xor
mov
mov
mov
sub
shr
or
add
dec
jne
mov
mov
pop
mov
jmp
dec
push
sahf
aas
and
jmp
push
pop
or
jmp
xchg
ljmp
xor
leave
ret
push
mov
sub
sub
jmp
and
cmp
dec
cmp
dec
sub
and
add
add
addr16
xchg
pop
sub
push
xor
mov
mov
mov
add
and
sub
shl
add
and
or
sub
sub
sub
and
and
xor
ror
sub
add
or
dec
jne
mov
mov
push
jmp
imul
cmp
pop
jmp
loope
xor
adc
jmp
or
push
les
add
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
or
shl
and
dec
jne
mov
mov
pop
mov
jmp
adc
xor
jnp
dec
les
add
sldt
add
test
or
xlat
adc
mov
add
leave
ret
call
lcall
jecxz
clc
pop
pop
out
xor
mov
daa
push
adc
pop
inc
sbb
in
test
mov
cmp
dec
add
iret
push
in
cmp
xchg
mov
cmp
push
add
inc
cmp
loope
jecxz
mov
adc
out
push
xor
adc
mov
sub
mov
push
push
lock
pop
xor
push
sbb
mov
mov
mov
add
inc
sbb
xor
cmp
mov
xchg
push
jle
sbb
mov
enter
or
lods
adc
ficompl
add
xor
xchg
push
sub
shlb
sti
xor
out
inc
and
sub
aas
sti
xor
sub
bound
mov
push
sti
xor
mov
call
ds
xor
xor
mov
loopne
popa
xchg
lret
cmp
stc
xor
int
xor
call
push
mov
jno
mov
push
insb
pusha
push
sbb
and
or
pop
pop
mov
pop
or
loopne
in
adc
and
mov
ds
or
push
mov
test
lret
mov
xchg
pop
addr16
adc
loopne
xchg
sbb
insb
stos
add
imulb
lret
mov
lds
ja
fbstp
add
mov
fdivl
add
repz
leave
jl
es
inc
and
dec
push
dec
test
mov
ljmp
xor
ret
dec
xor
xor
movsb
add
or
lock
insl
dec
orl
insb
pop
push
fwait
decl
inc
mov
sti
insb
sbb
fcoms
and
aas
out
popl
xor
inc
fldl
push
testl
lock
in
inc
call
aaa
cmp
lods
adc
fistps
or
in
xor
in
cmp
incl
push
cmpsb
aas
cmc
lds
das
fists
test
xchg
dec
addr16
xor
jns
sbb
push
jmp
push
pop
ja
mov
ljmp
clc
inc
mov
xchg
mov
cmp
ja
stos
pop
xor
xchg
jns
popf
jecxz
lods
mov
icebp
xor
inc
out
js
ss
mov
cmp
add
jmp
in
xor
scas
jmp
es
xor
dec
inc
mov
mov
push
ret
add
lahf
mov
jmp
shlb
out
add
lcall
clc
out
inc
sbb
adc
pop
cltd
in
adc
adc
insl
pop
adc
sbb
es
ret
push
sbb
mov
pusha
ret
scas
inc
sbb
notb
repnz
xor
inc
cmp
call
dec
pop
cmc
adc
xor
lcall
aaa
jns
mov
shl
xor
dec
fsincos
pop
xor
jmp
jecxz
add
sub
int3
cmp
neg
xchg
pop
mov
call
popa
pop
incb
jecxz
lock
or
out
add
pop
mov
sbb
pop
fs
add
add
add
mov
add
cmp
das
ljmp
lock
es
xor
xchg
xor
push
fiadds
popa
repz
ret
mov
mov
pop
xor
cmp
mov
add
jp
and
mov
push
pop
ja
dec
rorl
cmp
into
xor
sub
jmp
or
inc
xchg
ret
sahf
add
fildl
pop
inc
xor
dec
sbb
xchg
fs
add
flds
loopne
xlat
add
cmc
sbbl
shl
and
inc
ljmp
adc
fidivs
add
daa
std
jp
mov
pop
mov
push
std
aad
inc
sbb
jae
cmpsl
stos
mov
inc
push
daa
sbbl
scas
mov
xor
testl
sbb
flds
addr16
mov
mov
dec
fsin
and
fildl
push
adc
repnz
and
popa
test
xlat
cmp
pop
mov
insb
dec
jb
mov
mov
add
das
mov
add
rcll
push
or
dec
mov
in
ljmp
sub
addr16
mov
stc
pop
fisubs
mov
xchg
pop
pop
and
xor
adc
inc
jmp
ljmp
jge
sbb
outsl
repz
pop
int3
lds
push
mov
sub
or
mov
mov
jle
rcll
cwtl
inc
or
cld
pop
jle
cli
jg
or
aad
xor
sub
and
dec
xchg
cmp
mov
rol
es
int3
xor
jp
sub
adc
loope
inc
or
lahf
dec
cli
cli
js
xor
push
pop
cmc
in
daa
mov
clc
sbb
add
hlt
dec
stos
push
stos
push
jg
cs
lds
aaa
idiv
and
bound
xchg
xchg
mov
add
xchg
dec
sub
shr
cmp
xor
fidivs
xchg
mov
mov
mov
inc
sbb
faddl
add
ffreep
mov
jae
lea
push
sbb
aas
not
xor
in
sub
pop
push
dec
ret
mov
adc
pop
or
popa
mov
rcrl
push
jge
add
pop
and
pop
mov
pop
cld
negb
xchg
jnp
ja
xchg
in
mov
add
adc
inc
jb
fmul
inc
push
jmp
rorb
test
ss
lea
roll
movsl
xchg
js
fwait
outsl
inc
pop
sbb
or
fcoml
movsb
xor
rclb
add
in
add
inc
clc
loope
bound
iret
dec
in
stos
iret
push
dec
rorb
or
sub
pushf
jno
lea
sub
fcmovb
mov
stos
sbb
jbe
into
dec
and
mov
xor
test
sub
xor
pop
mov
mov
mov
pusha
adc
test
pusha
cmp
out
cltd
scas
lock
roll
dec
sti
out
into
inc
pop
jge
aaa
shll
push
cs
push
pop
inc
adc
adc
aad
mov
jnp
pop
inc
mov
xor
leave
dec
jecxz
lret
push
cmc
xor
icebp
mov
dec
out
push
aas
adc
xor
les
addr16
xor
outsl
sbb
pusha
pop
enter
outsl
jne
enter
mov
xchg
jns
xchg
movsb
mov
pop
std
cmc
mov
les
movsl
adc
dec
xchg
shll
std
ja
sbb
clc
jmp
in
pop
ja
mov
mov
outsb
pop
sub
mov
push
dec
aas
int
jno
out
push
mov
bound
inc
mov
inc
mov
add
inc
ret
sbb
cmp
push
mov
push
push
push
xor
ret
dec
jno
mov
or
fsubr
adc
fidivrl
and
add
lock
lods
xor
test
jmp
mov
loop
xor
cmp
lea
mov
hlt
xor
cli
sbb
xor
mov
xor
adc
or
rcll
jno
ds
xchg
or
aaa
orl
push
inc
outsl
pusha
inc
bound
enter
mov
xor
add
test
mov
push
lret
and
fwait
jge
and
inc
xchg
aaa
add
lods
lcall
lods
xor
int3
fildll
mov
mov
push
std
lock
and
test
xchg
mov
xchg
lret
add
mov
adc
pop
sub
lahf
xor
stos
sub
lret
jb
or
int3
shl
stos
xor
cmpsb
xor
scas
sub
mov
loop
test
loop
mov
mov
push
enter
ss
inc
add
pushf
insl
adc
rcrl
call
pop
dec
stos
adc
push
inc
es
lods
xor
out
inc
push
xchg
cli
test
xchg
add
inc
cmpsb
mov
ljmp
mov
mov
mov
dec
repnz
stc
in
dec
ljmp
add
mov
lea
nop
cmp
or
in
testl
je
rolb
lcall
insl
jp
sub
lahf
std
les
and
movsl
mov
add
mov
lods
sub
mov
or
sub
cmp
mov
mov
sbb
add
mov
add
fnsaves
test
push
in
rcr
lahf
xor
fwait
xor
jbe
xlat
fiadds
arpl
xor
rcrl
add
sub
pop
mov
in
sub
gs
fsubr
fs
mov
imul
pop
psubd
dec
repz
add
mov
into
pushf
xor
cmp
cmp
int
add
ss
out
cmpsb
inc
es
xorb
cmp
fnstcw
clc
push
sub
inc
add
cmp
xor
icebp
cmp
add
mov
xor
scas
int3
dec
xor
add
cwtl
pop
ja
testb
in
mov
pop
iret
test
jmp
cwtl
xor
fwait
loopne
mov
mov
xor
dec
std
push
pop
cmpsl
cmpl
cld
xchg
data16
pop
or
mov
mov
xor
sbb
cmp
clc
xchg
xor
xlat
or
mov
xchg
mov
push
xchg
sub
or
inc
mov
mov
mov
icebp
jle
ss
xor
cmp
sub
mov
mov
add
sahf
clc
pop
mov
mov
add
std
sub
shll
xor
dec
insl
cmpsl
cmc
imul
sbb
pop
dec
bound
es
xor
out
inc
or
push
inc
loop
push
les
sbbl
mov
sbb
jnp
dec
jnp
jns
mov
push
jne
jecxz
push
jbe
test
pop
mov
add
js
push
pop
or
xor
out
inc
cmpb
or
or
test
ret
repnz
jbe
add
mov
xchg
outsb
cmp
push
or
fucomp
icebp
sub
popa
jmp
mov
add
call
mov
pop
cmp
pop
xchg
push
movsl
xor
cmp
adc
jecxz
and
das
mov
in
inc
lods
divps
cltd
dec
stos
pop
sub
fbstp
cmp
xor
fildl
outsl
sub
das
mov
cmpsl
test
mov
leave
jmp
xor
in
lds
xchg
pop
ret
cmp
push
xchg
mov
pusha
adc
cltd
out
inc
push
rep
popf
movsb
mov
push
or
xchg
jg
jno
std
test
mov
mov
je
inc
push
in
sbb
jnp
js
loope
adc
adc
outsl
or
or
test
cwtl
mov
insl
cmp
jbe
sub
in
pushf
inc
xor
xchg
jmp
xorb
rcll
jae
dec
rolb
cmc
imul
addb
rorl
lods
loopne
push
out
in
jmp
aas
add
orl
jg
fmuls
fstps
addb
push
mov
mov
lret
sbb
in
mov
mov
mov
out
in
sbbb
jle
mov
imul
ficomps
ss
insl
pop
mov
mov
aam
stc
xlat
in
jo
test
add
ss
hlt
xorb
mov
in
xchg
outsb
insl
jmp
jl
add
mull
adcl
inc
insl
mov
jnp
sub
fidivs
or
aaa
pop
test
rcll
bound
ds
pop
xor
popf
fdivrs
push
push
xor
dec
bound
add
js
daa
push
mov
iret
imul
stc
sti
cs
mov
fwait
aaa
pop
sarb
add
adc
push
xchg
test
call
jg
add
daa
pusha
test
jp
pop
sub
pop
shll
xchg
add
ficomps
or
ret
sbb
mov
jae
inc
mov
pop
outsl
mov
adcb
pop
js
adc
dec
mov
das
pop
call
je
cmp
mov
or
xchg
iret
push
sub
inc
addps
jb
pop
imul
push
mov
inc
push
sbb
aaa
es
or
jp
mov
sbbl
lea
jo
insb
mov
shlb
cmp
pop
or
fldenv
xor
inc
push
sbb
outsl
xor
pop
imul
sub
mov
gs
cmp
rorl
insl
push
inc
add
insl
xor
pop
aad
jg
jle
jle
rorl
ret
and
in
pop
push
call
pop
lcall
pop
mov
mov
pop
xlat
daa
das
mov
mov
sub
add
push
add
push
orb
push
or
pop
push
repz
rcll
mov
push
xor
sbb
pop
outsl
test
lea
push
icebp
pop
in
xchg
jnp
sub
jmp
dec
in
add
xor
sub
cltd
aam
push
daa
cmpsl
lret
adcl
in
cmp
jle
push
stc
cmpl
mov
pop
mov
mov
mov
xlat
jae
add
push
dec
mov
jne
jecxz
cmpb
jae
add
dec
or
xchg
mov
adc
in
shrl
xchg
imul
test
add
scas
xor
push
iret
in
mov
xor
pop
push
shl
sub
mov
push
add
mov
xchg
in
cmp
popf
rorb
ljmp
in
pop
sbb
mov
jbe
mov
or
pop
sarb
mov
rep
adc
pop
pop
xor
arpl
and
adcl
test
test
arpl
add
inc
mov
xor
add
out
mov
popa
lea
mov
xor
arpl
std
mov
sbb
add
adc
adc
mov
mov
inc
xor
mov
jne
mov
aaa
xchg
lret
xchg
pop
and
ljmp
es
imul
and
cmp
and
mov
jge
add
pop
cmc
ret
fwait
mov
add
pop
xor
sar
xchg
mov
cmc
pop
jg
repz
mov
add
fidivrl
adc
sbb
pushf
inc
aaa
fisttps
jne
add
xor
add
sbb
sub
cmpsl
hlt
ret
jnp
mov
test
xor
xchg
outsl
jmp
push
xor
inc
jno
mov
push
adc
sub
inc
push
popa
loopne
dec
addr16
fistpll
inc
outsl
jb
jg
test
push
sub
mov
jge
ljmp
push
jno
adc
les
xor
xchg
test
mov
cmpsl
cmp
es
xor
lock
mov
jns
retw
sub
pop
jle
ret
mov
xchg
jg
mov
add
inc
xchg
pop
out
es
dec
xor
rcl
sti
adc
cmp
mov
pop
mov
mov
push
xchg
popa
rcll
ss
das
dec
pop
mov
iret
lsl
inc
testb
dec
mov
popa
xor
sub
xor
shrl
mov
mov
iret
sub
cmp
dec
add
dec
xchg
pop
xor
scas
popf
hlt
int3
popf
int3
sbb
pop
sbb
xor
push
mov
sub
mov
orl
das
jle
es
xor
ds
add
jge
les
inc
jmp
dec
xor
pusha
lret
xchg
inc
adc
sub
lahf
int
add
inc
push
xor
je
adc
or
mov
inc
xor
jns
subb
xor
in
push
dec
jecxz
dec
xor
cwtl
cltd
hlt
int
push
iret
es
xor
jne
pusha
add
inc
inc
sbb
mov
inc
xor
jnp
add
inc
aas
mov
and
add
inc
xor
data16
adc
lock
and
push
push
ret
lret
ficompl
push
shlb
test
in
movl
xchg
inc
pop
out
movb
push
dec
mov
rclb
lds
add
dec
push
or
or
cmp
add
ret
pop
mov
or
adc
or
push
test
mov
add
movw
mov
sbb
add
mov
ds
mov
jmp
dec
flds
dec
jge
xchg
pop
adc
adc
or
out
xor
aaa
es
je
jnp
dec
sbb
out
cmp
in
rolb
push
push
xchg
fisttpll
adc
sub
inc
arpl
add
xor
dec
mov
xchg
cmp
jg
jle
ds
adc
aad
adcb
movsl
cmp
adc
retw
push
repnz
push
cmp
add
mov
repz
dec
xor
out
sub
jp
mov
adc
in
push
aaa
mov
push
push
mov
aaa
pop
cltd
and
push
mov
inc
sti
pop
imul
add
inc
push
icebp
xor
popf
les
xor
xor
push
xchg
in
in
rcrb
xchg
mov
add
ds
gs
add
pop
mov
cmc
sbb
es
push
xor
and
mov
dec
add
dec
mov
cmp
xor
push
dec
push
addr16
insb
adc
xchg
shll
pop
lret
and
clc
int3
mov
pop
add
lret
inc
cli
aas
push
dec
rcrb
ret
cwtl
imulb
sbb
push
xor
ret
xchg
inc
insl
xchg
sbb
js
mov
inc
lds
or
aaa
sub
mov
push
cmp
movsb
cs
mov
fs
push
jl
mov
fdivs
add
xor
adc
mov
les
shl
dec
xchg
cmp
xchg
imul
adc
jb
sub
cmp
xchg
jno
and
mov
lods
and
stos
jmp
xor
mov
sti
add
xchg
movsl
jge
dec
xor
mov
sbb
adc
repnz
sti
push
xchg
mov
push
inc
sti
lea
sbbb
xchg
sub
add
xchg
adc
bound
je
je
mov
in
sti
mov
aaa
adc
sbb
inc
daa
xor
ja
push
push
and
push
add
jl
repz
inc
xor
ljmp
and
or
repnz
sbb
jmp
movsb
bound
push
cmp
add
adc
xor
xchg
adc
xchg
adc
mov
mov
fs
pop
shl
push
shlb
xor
aas
stos
sbb
sub
je
in
mov
xor
cmp
mov
mov
hlt
ror
inc
das
out
and
mov
sbb
push
fbld
pop
out
inc
out
mov
add
push
leave
test
lret
sub
in
js
ret
sbb
xor
pop
pop
stos
jae
mov
inc
sbb
dec
or
aam
loope
fwait
adc
mov
sub
pop
pop
cmp
or
push
sub
stos
rorb
pop
ja
cmp
loope
lea
dec
sbb
pop
fldcw
lea
mov
add
daa
xchg
push
adc
mov
adc
pop
jmp
sub
push
clc
jne
xor
fdivrs
out
and
aas
mov
xor
int
rclb
push
rcl
movsb
inc
adc
cmp
inc
rcll
cli
jnp
aam
mov
sbb
push
cmp
xchg
xor
pop
fpatan
or
xor
cmpsb
or
add
push
push
add
push
vorpd
scas
push
cmc
int3
shll
pop
and
xor
jno
inc
ljmp
adc
std
cmp
push
cmpsb
sbb
xchg
mov
sbb
inc
mov
xchg
xor
flds
push
and
add
and
imul
test
pop
ret
roll
mov
insb
mov
imul
std
les
movsl
popf
push
lds
xor
test
insb
inc
sbb
inc
mov
fimull
add
mov
movswl
sub
xchg
decb
inc
and
push
lea
mov
xor
and
sub
enter
cld
popa
mov
mov
gs
sbb
bound
mov
cltd
test
add
and
add
xchg
lea
mov
push
sahf
sarb
testb
es
xchg
xor
cmpsb
ljmp
or
pop
hlt
push
push
pop
and
hlt
xor
inc
mov
loope
int
testl
in
fwait
lock
cltd
je
fidivl
add
mov
push
push
push
inc
sbb
lock
test
sbb
lock
aas
or
pop
pop
add
or
mov
add
xor
sbb
push
add
gs
movb
dec
mov
fidivrl
inc
int
fdivl
inc
lahf
cld
mov
push
imul
leave
jns
sbb
dec
in
leave
jmp
add
push
xchg
dec
jge
scas
dec
das
pop
pop
lret
js
rolb
xor
mov
nop
mov
pop
aas
adc
mov
ret
cmp
or
xchg
push
jl
pop
les
mov
push
andb
iret
popl
xor
loope
dec
push
sbb
jg
adc
xor
cld
xor
or
push
add
mov
sbb
xchg
xor
or
divps
jg
xchg
xor
addr16
es
xor
cmp
jmp
add
xor
add
or
mov
rorl
imul
in
jb
pop
sbb
cs
test
or
xor
loop
in
out
or
scas
sbb
sahf
sti
xor
std
ja
push
test
or
fwait
xchg
jno
push
jecxz
mov
cmp
rcrl
test
inc
push
mov
add
mov
xor
clc
inc
and
sub
xchg
sub
adc
mov
sub
xor
pop
push
aaa
add
add
das
adc
push
dec
mov
or
dec
add
jecxz
sbb
inc
test
shll
push
shll
fdivs
decb
subb
inc
jno
jp
push
jb
ret
push
xchg
jg
sbb
jmp
cli
mov
lock
add
fnsave
inc
repz
and
es
pop
enter
je
jp
xor
add
xchg
popa
jno
das
les
fnsave
add
dec
pop
lret
cwtl
cld
mov
leave
lock
pop
jne
enter
pop
std
xor
jns
push
int
je
in
xor
inc
hlt
inc
pop
stos
fmuls
jns
inc
and
or
lea
sti
inc
sbb
add
cmpsl
xlat
push
call
inc
sbb
sbb
mov
or
mov
jp
lret
or
cmp
mov
repnz
or
push
dec
lea
dec
in
inc
hlt
enter
push
sti
dec
mov
iret
xor
xchg
inc
xchg
inc
test
jnp
mov
into
gs
push
xor
out
fyl2xp1
adc
test
xor
sub
pop
push
cmc
add
mov
hlt
icebp
insl
clc
dec
movsl
lret
jb
inc
dec
adc
movsb
ss
movsl
add
ret
add
mov
hlt
in
notb
icebp
sbb
jns
push
mov
out
pop
cmc
rolb
sbb
adc
xchg
push
push
cmc
dec
mov
sub
inc
pop
iret
adc
push
ljmp
es
in
add
sub
aam
push
pop
imul
pop
inc
inc
adc
ss
jns
mov
es
movsl
push
pop
std
inc
lea
ds
aam
push
cs
outsl
push
cmp
rcrb
icebp
push
dec
rcll
outsl
sub
jae
push
es
pop
add
xchg
xor
mov
jns
cmp
mov
popa
sub
add
push
mov
adc
pushf
mov
fwait
push
call
fbstp
push
inc
cmp
hlt
leave
loope
xchg
pop
jne
push
in
fidivs
popa
fbstp
hlt
lds
mov
fldt
push
stc
lea
xor
lock
ffree
jmp
mov
mov
fs
pop
sub
stc
adc
push
test
pop
aad
push
push
pop
divb
ja
mov
xor
leave
pusha
into
ja
stc
pop
ljmp
popa
fwait
inc
xchg
xor
loope
lds
aas
imul
icebp
rorb
popa
mov
cmp
leave
xor
lea
cld
jecxz
sub
hlt
inc
push
mov
pop
sub
in
inc
mov
test
inc
hlt
xlat
cltd
mov
out
and
push
xor
into
test
dec
decb
cli
out
loope
ljmp
iret
es
aad
add
in
mov
jnp
sbb
insb
cli
mov
add
test
fldl
scas
shll
add
lock
es
xor
les
inc
and
inc
pop
aad
lods
push
pushf
inc
sbb
stc
sbb
xchg
dec
add
push
es
stos
ss
jno
pop
test
cli
xor
enter
sahf
rcrl
add
mov
rcrb
adc
shlb
cmpsl
jns
out
xchg
add
xlat
mov
jecxz
xor
shrb
pop
scas
lds
mov
aas
sub
sarb
sub
push
ja
add
repnz
xor
mov
and
lds
add
sbb
sub
out
cmpsl
repnz
mov
xor
xor
inc
xchg
sbb
mov
fmuls
add
std
add
mov
pop
mov
mov
lea
add
out
xor
adc
xor
out
sbb
mov
fnstcw
jle
mov
inc
mov
add
leave
mov
push
out
add
in
sarb
dec
inc
das
or
mov
cmc
jnp
seta
icebp
mov
xor
jns
sub
dec
adc
repz
mov
push
or
xor
jbe
cmp
dec
cmc
ds
mov
xor
movsb
mov
add
push
lds
fnstsw
inc
testl
jl
cmp
jmp
imul
push
les
add
hlt
xchg
inc
jnp
ds
cmpsb
lods
cmp
pop
ret
xchg
into
cmc
mov
aaa
add
ret
test
cmc
or
scas
aas
push
mov
add
pop
mov
mov
fnsave
add
inc
and
ret
push
fs
out
mov
xor
mov
and
xor
mov
cmpsl
in
pop
das
add
mov
jo
jmp
sbb
add
imul
cli
mov
test
cmp
add
dec
decl
inc
xor
pop
in
stc
push
in
add
loope
sub
inc
jb
pop
push
pop
cmp
xor
mov
xor
mov
cmpsb
cmp
out
fiadds
jecxz
xor
rcl
mov
dec
inc
push
mov
in
mov
jg
popf
jl
add
inc
pop
xchg
push
mov
test
lea
aas
sub
out
cmpl
add
mov
orb
mov
and
ja
inc
fnstsw
pop
jmp
cmp
pushl
gs
imul
testl
or
mov
cmp
mov
loop
fldenv
and
rcrb
or
mov
out
pop
ja
add
mov
es
pop
mov
jg
ja
xchg
lret
pushf
in
cmp
mov
das
and
fildll
jae
and
fildll
jae
and
fildll
jae
icebp
xchg
sub
icebp
adc
xor
cwtd
les
aam
adc
leave
sbb
xchg
outsb
mov
jle
rclb
negb
fucom
inc
dec
inc
cmp
dec
cmp
out
cmp
cmc
cmp
push
or
cmp
push
out
scas
cmp
pop
push
ret
pushf
pop
int
ret
jl
lods
test
mov
mov
pop
cmp
test
rcrl
push
decl
cmpsb
inc
cld
cltd
ret
inc
cli
inc
outsl
add
xchg
test
out
and
sbb
dec
sub
push
sti
das
mov
insl
mov
push
sub
das
and
fildll
jae
lods
mov
xchg
dec
negb
adc
adc
aas
add
inc
mov
and
jge
cmc
or
jo
sbb
mov
mov
rcr
dec
movss
inc
jbe
jmp
dec
push
stc
stos
lret
hlt
and
divl
stos
lret
hlt
and
divl
xchg
jbe
dec
xchg
std
pusha
orb
gs
push
sbb
dec
push
sbb
and
ja
inc
jmp
inc
sahf
leave
insl
fisubrl
adc
enter
and
fildll
jae
and
fildll
jae
and
fildll
jae
mov
test
das
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
mov
pusha
ret
in
insb
pop
lods
mov
out
loope
sub
jmp
das
and
fildll
jae
xor
xchg
repz
dec
cmpsb
enter
and
mov
dec
add
cltd
das
and
fildll
jae
inc
mov
out
mov
or
leave
mov
dec
lcall
and
fildll
jae
sbb
jno
das
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
and
fildll
jae
mov
push
sub
sbb
push
mov
lock
lock
ljmp
pushf
dec
jg
dec
xor
dec
mov
push
mov
daa
pop
imul
test
xor
mov
pop
sarl
addl
xchg
in
test
add
call
loop
lock
std
inc
loope
push
cmp
sub
cmp
jno
rcl
mov
nop
inc
loop
inc
sbb
pop
add
mov
jge
outsb
int
sahf
and
mov
cmp
es
imul
adc
nop
pushf
call
rcll
jbe
jno
fstp
call
scas
into
call
push
dec
push
es
and
daa
and
add
adc
xchg
mov
lock
in
mov
hlt
cltd
mov
sub
or
mov
jp
cwtl
scas
jecxz
popa
rolb
cmp
aaa
or
dec
dec
sbb
lds
adc
stos
pop
add
xor
mov
jo
adc
jno
inc
div
fsts
addl
fadds
shrb
out
fimull
sbb
pop
ss
fwait
dec
ss
mov
movsl
enter
lcall
pop
mov
les
pop
negb
push
xchg
xchg
dec
int3
jp
ret
or
add
xchg
out
dec
mov
es
mov
mov
mov
in
lods
hlt
lcall
add
int3
inc
lcall
ss
js
fcoml
jmp
test
fldt
iret
dec
int3
xchg
inc
inc
mov
into
fwait
enter
inc
ret
mov
cmp
or
dec
mov
dec
lret
inc
push
int3
cmp
cltd
icebp
pop
jmp
mov
lahf
jno
ret
or
cmp
andb
dec
mov
jbe
cli
cltd
in
mov
stos
insl
pop
pop
lods
sbb
stos
pop
jae
fsubr
jne
shll
popf
xchg
dec
fsubs
es
mov
scas
jne
mov
xchg
push
negb
inc
pop
cli
mov
push
adc
icebp
jae
cmp
inc
lods
inc
mov
pop
incl
push
dec
imul
pusha
jl
js
in
mov
into
sarb
and
push
xor
fwait
fs
stos
jnp
inc
in
pop
push
imul
aad
xor
inc
sbb
shl
inc
pop
sahf
and
mov
popa
std
mov
pop
jecxz
rolb
or
pop
popa
and
lock
add
popa
pop
lods
into
dec
in
sub
mov
jl
lahf
push
lea
adc
ja
inc
mov
push
xchg
push
mov
cmpb
xlat
cli
add
dec
in
enter
es
insl
push
xor
imul
imul
sub
lods
adc
sahf
sbb
jnp
aad
and
mov
push
push
xor
adc
mov
sub
sbb
push
pop
repz
in
jp
push
fsubr
sbb
movsb
idivl
xor
push
cmpsb
jecxz
lea
dec
pusha
fidivrl
insl
add
shr
das
cmp
push
aas
mov
ds
lock
lea
sysret
aas
mov
icebp
jle
xlat
xchg
sub
lds
xchg
pop
mov
enter
leave
cmovo
out
adc
fisubs
test
pop
push
in
xlat
cltd
pop
js
jo
pop
in
test
or
rcl
imul
stc
cwtl
and
in
push
sub
xchg
push
out
and
mov
stc
dec
in
mov
and
inc
push
add
mov
xor
lods
xor
and
jb
pushf
inc
xchg
jmp
ja
cmpsl
cmp
pop
shlb
rcl
adc
sbb
push
or
cmc
add
pop
mov
icebp
jo
jnp
xchg
cmp
sti
mov
xor
mov
icebp
inc
pop
push
rcrl
mov
pop
aas
movsb
dec
shlb
je
adc
dec
cmp
pop
out
stos
stos
adc
push
pop
sub
shlb
push
enter
stc
inc
push
or
and
mov
xor
cwtl
lea
sbb
jmp
sub
nop
jmp
jbe
into
dec
and
mov
fisubl
stc
sub
clc
daa
test
lcall
mov
inc
mov
ret
and
out
cmp
sahf
jle
xchg
cmp
daa
jno
mov
lods
adc
push
xor
push
push
lock
int
mov
hlt
push
sub
js
add
test
jae
inc
inc
ret
push
movl
es
sbb
addr16
fcomi
pop
jmp
pop
jo
mov
xchg
xlat
mov
xchg
xor
mov
imul
pop
outsl
and
push
mov
test
xchg
mov
imul
out
adc
in
mov
push
fidivl
xchg
out
in
icebp
push
mov
lds
xlat
vpsubw
push
xchg
clc
fildl
add
nop
mov
in
lea
pop
dec
ficoms
imul
add
xchg
add
cwtl
test
pushf
xchg
clc
inc
pop
outsb
jns
and
test
ret
inc
jecxz
ret
xchg
jns
mov
adc
insb
mov
adc
out
insl
out
aaa
idivb
or
adc
xchg
addr16
inc
jge
popa
lock
int3
daa
mov
cmp
or
inc
jae
dec
pushf
push
add
lcall
hlt
pop
push
mov
sbb
leave
mov
mov
mov
addl
xor
mov
jo
mov
xorl
stos
xor
mov
iret
subl
cmpsl
test
pushf
gs
and
push
mov
push
call
movb
inc
or
sub
fldt
ss
int
and
xchg
ret
dec
add
sti
xlat
shrb
mov
cmp
sbb
adc
loopne
aas
mov
mov
push
mov
push
mov
fdivs
inc
xchg
icebp
popa
mov
mov
imul
add
pop
subb
mov
fisubrl
gs
aam
mov
imul
inc
mov
inc
in
adc
shll
test
imulb
push
dec
adc
push
xor
sbb
ja
mov
cmp
push
and
lea
ret
cmpsl
mov
jns
and
and
imul
lods
sti
cmc
push
mov
inc
jmp
int3
sbbb
aad
cmp
mov
outsl
pop
pop
sahf
js
fsub
gs
fisubs
jmp
imul
shrl
popa
dec
mov
lods
pop
faddp
ja
rcll
int
sbb
and
jno
clc
cwtl
dec
add
jge
mov
hlt
xchg
int
lods
outsl
jp
mov
or
xchg
les
cmc
mov
pop
subb
loop
lock
test
lret
xlat
mov
cltd
js
leave
popa
or
or
pop
bound
imul
sub
sbb
mov
dec
lret
scas
fsubs
xchg
out
xchg
mov
lahf
push
sbb
roll
pop
xchg
add
lret
or
add
xchg
loope
in
dec
sub
cld
sbb
out
and
or
pop
shlb
mov
ss
add
mov
cld
test
sub
enter
stos
push
pop
mov
jl
adc
inc
mov
mov
jbe
jns
push
js
and
push
sbb
cmp
xchg
enter
wrmsr
dec
push
inc
pop
or
ret
dec
cmp
ja
lahf
cmp
test
cmp
sub
xor
pop
dec
or
int
rcr
sub
sbb
adc
jne
or
cli
ret
out
mov
xor
pop
jmp
jns
lcall
pop
fsubs
jge
and
add
mov
and
hlt
and
shll
imul
lock
cmp
in
das
push
push
out
mov
rclb
xchg
push
inc
dec
fmull
push
push
insb
push
push
fidivl
fadd
mov
push
mov
mov
data16
sub
or
sahf
adc
clc
in
mov
daa
lahf
push
loopne
mov
ja
sbb
lea
push
inc
jl
mov
fildll
cmc
je
lea
cmp
inc
mov
xor
push
push
pop
cs
aaa
sbb
mov
outsl
push
call
sub
pusha
aad
psrad
je
inc
mov
test
int3
aas
stos
mov
add
adc
fdivr
jae
sbb
sbb
int3
cmpl
mov
nop
fs
pop
mov
xchg
int3
inc
xchg
cmpsb
pop
or
lods
sub
and
adc
out
insb
rcrl
add
pop
mov
addr16
int3
outsb
add
push
mov
push
daa
int3
sbb
pop
push
dec
mov
dec
dec
int
je
dec
idivl
adc
xchg
leave
push
adc
stos
je
and
js
pop
leave
mov
add
or
into
ss
mov
mov
arpl
jno
in
mov
aas
outsb
lahf
lret
mov
shr
add
sub
sarl
int3
dec
xorl
xor
in
push
fwait
sbb
xor
testb
xor
pop
lock
sbb
notb
popa
lods
ss
xor
add
jg
or
lret
enter
xor
and
jp
mov
popa
ljmp
push
jo
push
shrb
push
gs
cmp
sub
xor
add
pusha
sub
sbb
xorl
leave
jnp
int3
and
pop
push
mov
aam
jns
in
mov
lods
inc
fprem1
pop
sub
aam
iret
pop
js
mov
enter
fistl
loop
inc
jns
push
mov
imul
cmp
lods
int
inc
sbb
cmp
jg
fidivrl
in
xlat
fmull
hlt
cmp
jmp
dec
mov
xor
sub
or
sub
inc
or
and
cltd
jo
das
decb
dec
xor
xor
jo
add
mov
sbb
scas
cmc
pop
lret
insb
cmpsl
pop
push
or
push
sbb
push
add
and
mov
xchg
jg
lea
jnp
push
jne
sbb
test
cmpb
outsl
mov
pop
pop
mov
mov
and
xor
ret
das
test
jmp
xchg
add
movsl
mov
in
xchg
xor
cmpsb
sbb
cmp
sub
sub
movsb
imul
lds
add
mov
out
in
add
dec
jge
shr
push
icebp
mov
adc
adc
push
push
daa
int
xor
bound
jge
test
push
push
lcall
sbb
xchg
inc
cmpsl
std
mov
or
xchg
jb
push
ja
push
cmp
lock
fwait
push
jp
add
fisubrs
inc
rol
xchg
movsb
outsb
pop
dec
xor
fcompl
hlt
jnp
jns
cld
ss
std
mov
dec
xorl
movsb
or
call
ss
enter
arpl
out
inc
subl
pop
sub
lock
test
std
and
cmpsb
or
cmp
mov
sti
sub
pop
loopne
int3
lea
mov
xchg
sbb
andb
adc
push
sbb
arpl
je
and
ja
xor
fcomi
scas
les
adc
mov
loope
mov
ficoml
xchg
call
mov
std
lods
pop
in
mov
mov
fistl
cmp
dec
fcmovb
loop
pushf
imul
mov
scas
sub
mov
ret
ret
dec
in
xlat
cmpsb
or
mov
push
movb
dec
add
movsb
fists
cs
fisubl
fld
movsl
test
fisubs
nop
mov
adc
iret
insb
xchg
mov
xchg
lret
mov
pop
sub
and
jmp
dec
test
lret
pusha
js
frstor
xlat
in
mov
mov
inc
pop
or
or
pop
adc
inc
cs
lods
out
jae
add
mov
mov
lds
stos
and
fisubs
xchg
sti
jl
dec
jns
in
je
fistpl
or
out
fs
pushl
std
mov
jmp
xchg
loope
mov
inc
mov
mulb
xchg
fdivrs
xor
movsl
push
cwtl
or
jg
mov
xchg
jae
xchg
dec
push
jo
jge
fwait
and
imul
outsb
fs
repz
xchg
mov
jg
dec
mov
inc
je
sub
loopne
int3
ret
dec
push
ljmp
adc
fxch
jo
sti
and
or
adc
stos
out
movb
xor
push
fdivs
mov
dec
xor
inc
std
or
pop
mov
xor
inc
jle
std
and
pop
aaa
daa
loopne
pop
mov
jle
rcll
mov
cmpsl
mov
push
or
push
mov
scas
dec
xor
cmp
mov
adc
bound
sub
xor
pop
int
adc
or
mov
inc
gs
into
jb
mov
xchg
test
sub
jbe
imul
scas
add
lret
fnstenv
ljmp
xor
int3
jp
xchg
rol
and
pop
mov
ds
lea
jae
add
sub
mov
mov
cmc
mov
ljmp
or
pop
arpl
jp
aam
aaa
sbb
adc
mov
add
insl
addb
jo
mov
jae
fldcw
mov
cs
lret
and
or
dec
or
xchg
push
in
leave
xor
rcll
xchg
push
sbb
xor
jl
and
mov
rolb
mov
insl
inc
shrl
ret
sbb
cmp
lock
negl
xchg
push
jg
mov
sbb
jns
pop
daa
jo
xchg
xchg
fiaddl
mov
add
cmp
scas
ss
mov
pop
ljmp
fs
and
imul
xchg
sub
loopne
cmp
push
outsb
inc
ret
loopne
shlb
dec
sub
dec
cwtl
mov
scas
test
sbb
jp
ret
jno
add
xlat
scas
adc
inc
cwtl
fisubrl
jge
dec
sbb
pushf
in
inc
jp
repnz
push
cli
aaa
orb
bnd
insb
xor
scas
fildll
or
jmp
ret
sub
push
cmp
sbbb
pop
push
mov
testb
pop
andl
sub
sub
fildl
cmp
inc
clc
stc
repnz
fs
test
fcmovb
int3
pop
mov
jle
ret
popa
out
popa
data16
dec
out
jnp
jbe
fnstsw
pusha
dec
mov
popa
cwtl
movsb
xor
fistl
mov
mov
xchg
stc
idivl
cs
rcrb
out
rolb
lock
out
lahf
or
sbb
test
inc
sub
dec
sti
mov
aam
std
faddl
or
jmp
jbe
mov
cltd
outsb
outsb
push
testl
ret
sub
out
mov
pop
ret
jecxz
aas
ds
cmp
or
sub
cmp
mov
pop
add
cmp
clc
or
xchg
and
cmp
add
adc
mov
movsl
pop
mov
cli
pop
test
enter
ss
imul
loope
popa
rcrl
aaa
enter
out
rcl
or
add
cmp
adc
and
arpl
test
mov
mov
mov
add
lcall
cmp
push
aam
testb
in
lret
and
and
cmc
es
test
mulb
lea
movsl
decb
dec
sbb
xchg
stos
lea
arpl
mov
shlb
outsb
mov
jbe
sbb
iret
cmp
mov
test
cmpsb
pusha
xor
jp
dec
sbb
push
cmpsb
pop
inc
lret
lods
lret
jmp
shlb
or
mov
jg
add
stos
mov
leave
ja
sub
pop
pop
sub
cwtl
pop
outsb
out
mov
xchg
test
push
loop
in
xchg
xor
jge
mov
xchg
cmp
aad
inc
jg
pop
movsl
cmp
cmpsb
clc
adc
sti
out
cmpsb
push
in
mov
pop
jnp
adc
rep
pop
xor
push
pop
adc
pop
pop
or
jae
push
jae
mov
inc
cmc
pop
push
ret
and
xchg
push
clc
or
inc
add
push
bound
stos
sbb
mov
pushf
nop
ret
pop
insl
push
jns
sub
out
outsb
dec
jecxz
mov
out
hlt
leave
rcrl
mov
int3
jae
xchg
cmpsb
call
insl
or
outsl
loope
mov
mov
clc
xchg
js
inc
outsb
dec
psadbw
sub
xchg
fdivs
stos
movsb
xchg
rcll
ja
fmul
shll
cmp
jecxz
mov
mov
dec
sub
jle
std
push
push
cmp
jae
popf
gs
push
loop
pop
fmull
aam
sbb
shl
cli
xchg
bound
mov
iret
cmp
inc
adcb
icebp
sbb
pop
enter
adc
push
aad
jbe
mov
dec
sahf
cmpsl
dec
daa
inc
int
lcall
ret
call
outsl
test
lea
addr16
xor
int3
cmp
xchg
push
popf
popf
push
mov
sahf
jmp
push
rclb
lea
lods
fisubl
xor
push
shrb
dec
lret
pop
dec
mov
xor
fcoml
repz
or
xor
mov
pop
js
push
imul
repnz
or
push
mov
push
dec
jb
cmpsl
pop
adc
adc
dec
roll
push
lock
sbb
or
or
in
jmp
push
sub
scas
mov
dec
push
and
mov
dec
mov
push
add
sbb
jl
cmpsb
or
pop
cli
popf
lods
cmp
repz
sub
jecxz
jbe
cld
mov
cmp
adcb
mov
cltd
add
mov
test
fisttps
mov
push
mov
stc
int
dec
insl
cltd
mov
jae
into
or
gs
lahf
scas
mov
xchg
addr16
cmp
pop
leave
push
rcrb
and
lahf
aad
xchg
xchg
adc
jnp
outsb
enter
or
leave
lock
gs
mov
test
mov
mov
leave
mov
mov
mov
fldl
mov
out
push
xor
inc
inc
addl
or
aam
andl
and
push
stos
jmp
stos
ljmp
clc
xchg
lret
jbe
lock
push
incb
jecxz
and
pop
sarb
xchg
sub
push
aaa
xchg
enter
jbe
mov
mov
cmp
aad
add
fdivrs
lods
inc
pop
cmp
lea
test
loopne
pusha
xchg
mov
xchg
stos
dec
adc
fildll
xor
jmp
jl
inc
jno
sbb
add
add
add
and
mov
sub
imul
outsl
ja
mov
adc
gs
sahf
xchg
adc
jb
or
cmpb
cmp
push
fimuls
add
clc
popa
cmp
ss
mov
push
add
mov
cltd
pop
pop
lcall
dec
shr
sub
stos
outsb
sub
push
out
adcl
xor
test
fildll
stos
pop
pop
int3
jecxz
xor
dec
movsb
mov
jnp
jg
mov
cmp
imul
stos
repnz
push
fstps
lock
leave
loopne
ret
push
sbb
cmp
int3
hlt
and
sub
pop
inc
mov
stc
cmpsl
xor
mov
into
dec
fstpt
inc
add
ret
mov
mov
mov
xor
sti
in
and
movl
cmp
popa
pop
test
call
outsb
pop
jne
cmpsb
fs
jae
int
cwtl
cmc
movsl
outsl
push
gs
fldl
addr16
movsb
daa
loopne
call
push
mov
aaa
cmp
ja
fisttpl
mov
xchg
mov
pop
lods
lahf
lahf
mulb
adc
iret
add
clc
stc
fstpt
in
jns
xor
xchg
popf
fcoms
cltd
inc
shlb
movsb
xchg
fcoms
dec
ljmp
fwait
imul
sbb
mov
inc
add
sub
cmp
mov
into
cld
notl
lods
xchg
mov
cmp
call
xorl
adc
jmp
movsl
mov
sbb
sub
sbb
mov
ret
pop
int
mov
clc
dec
cld
shlb
jecxz
pop
cmp
stc
push
or
cli
and
fcomp
fisttps
bound
and
xor
pop
pop
lcall
sbbb
mov
sbb
push
cmp
nop
int3
jp
hlt
pop
outsb
push
xor
jnp
rclb
mull
pop
stos
cmc
mov
xchg
push
cmp
sub
rorl
in
xlat
dec
fdivr
movb
mov
lret
jnp
inc
sbb
pop
cmp
pop
or
rcl
out
rol
adc
and
imul
std
pop
rol
xchg
cmp
add
adc
push
movsl
add
std
cmp
icebp
and
lea
mov
mov
daa
dec
push
dec
add
mov
adc
test
and
rcrl
mov
sub
pop
mov
jbe
jecxz
push
xchg
into
sub
loopne
adc
cmp
mov
sub
repz
mov
shlb
aas
sbb
sub
pusha
inc
loop
jp
pop
sub
mov
bound
int
adc
push
push
pop
push
int3
bound
mov
xor
call
cli
pop
stos
lret
sbb
shl
push
cmp
lds
pshufw
dec
sub
insb
add
rcl
aas
movl
sub
sbbl
xchg
pop
call
scas
xor
push
xchg
dec
movups
xchg
mov
in
and
insl
insb
jg
in
push
mov
aaa
aaa
xor
sbb
std
dec
inc
cs
jnp
inc
in
ror
pop
sub
sbb
filds
adc
mov
aaa
pop
push
in
fsubl
dec
add
cmp
jbe
xor
mov
lods
fwait
movsb
pop
sbb
inc
aam
stc
adc
and
das
je
sbb
fistps
jns
nop
jne
dec
jno
or
mov
es
mov
add
ds
bound
fldenv
dec
pop
adc
dec
gs
mov
out
jnp
aam
pop
lcall
aas
mov
js
addr16
out
xchg
inc
push
cwtl
data16
mov
jns
loope
in
xchg
dec
push
rorl
push
cwtl
cmpsb
jb
xor
jbe
sbb
outsb
mov
jmp
pop
push
rclb
xlat
dec
cmp
adc
inc
jecxz
adc
shrb
push
push
mov
dec
fldl
add
mov
sub
daa
inc
xor
orl
je
leave
out
inc
aad
gs
inc
adc
rcr
pushf
imul
aas
idivb
imul
insl
ret
lcall
xor
mov
jge
sub
add
fwait
test
fcompl
or
imul
add
xchg
inc
inc
shrl
xchg
in
xchg
cmp
inc
xchg
fsubrl
jno
cltd
loop
orl
xchg
pop
inc
in
xor
jecxz
xchg
inc
mov
movsl
hlt
rorb
or
inc
xchg
ds
xor
xchg
out
sub
lret
ss
ja
or
int
adc
es
cmpsb
repnz
ret
mov
inc
cs
add
mov
dec
mov
ss
icebp
xor
or
pushf
scas
push
jne
andps
mov
fs
inc
and
dec
fadds
pop
sub
popa
out
mov
mov
inc
in
mov
inc
addr16
sbbl
xchg
loope
les
fsubrs
std
mov
pop
dec
xchg
push
cmpsl
xchg
cmpl
cmc
add
fistpl
clc
push
cmc
outsl
repz
push
test
loopne
xchg
add
mov
mov
and
pusha
push
test
mov
addr16
out
addr16
dec
jmp
jnp
push
test
sbb
add
jbe
mov
push
rorl
pop
adc
icebp
sbb
in
negb
and
scas
push
inc
pop
push
icebp
sub
xchg
jns
in
test
jae
mov
sub
or
adc
data16
mov
xchg
bound
call
sub
inc
aas
cmpb
repz
or
aaa
mov
and
adc
int
jo
subb
push
jp
mov
das
cltd
inc
aam
leave
shrb
hlt
dec
int
sbb
lods
test
adcb
push
dec
pushf
jae
imul
iret
enter
leave
jl
cmc
xchg
mov
enter
xchg
xor
shlb
push
cs
jb
or
mov
cmpb
int3
or
cmp
fmull
insb
in
dec
pop
inc
xchg
out
mov
mov
inc
jae
jne
xchg
js
add
mov
fnstenv
inc
in
popa
and
and
arpl
popf
and
movsb
jbe
mov
out
in
mov
lds
aas
mov
sahf
xchg
push
xchg
inc
lret
mov
leave
xlat
adc
mov
lock
rorb
pop
out
lods
add
push
mov
dec
rolb
xchg
mov
push
pop
add
lret
in
and
xor
sarl
cmpb
enter
fsub
sub
jb
lret
sbb
dec
fisttps
repz
or
addl
mov
int
sub
jo
fcoms
sbb
pop
sub
inc
pusha
push
imul
mov
xchg
sbb
and
daa
xor
jb
popa
push
test
insb
lcall
xchg
cmc
xor
mov
sub
lds
and
sub
outsl
mov
inc
jl
test
mov
fs
xor
in
outsb
jp
sub
mov
icebp
add
ljmp
ljmp
int3
movsl
lret
inc
stos
mov
sbb
out
jl
inc
icebp
jg
test
inc
daa
jp
mov
mov
jo
pop
imul
testb
in
hlt
xchg
out
mov
jne
lret
xor
test
repz
ljmp
mov
xorl
loop
outsw
enter
add
pop
xor
sub
movsb
aaa
mov
mov
adc
out
mov
lds
addr16
cmp
sbb
adc
add
hlt
mov
std
cmp
loope
andl
mov
mov
or
mov
push
iret
mov
cli
pusha
addr16
jmp
cmp
jnp
push
cmp
cmp
fs
addr16
jecxz
nop
outsb
lds
sub
aam
ljmp
stos
stos
scas
and
mov
insl
add
fimuls
xor
dec
in
in
jle
out
in
lcall
jecxz
sub
std
popf
fmuls
jbe
lods
xor
jno
xor
mov
mov
cmp
mov
push
clc
loopne
push
xor
out
popa
and
imul
push
push
fisttpl
rcll
addr16
inc
aam
pop
inc
test
call
jnp
adc
and
sbb
adc
push
push
in
sub
sahf
scas
aaa
mov
mov
pusha
inc
cmp
pop
sbb
or
xchg
and
test
or
pop
popf
popa
outsl
inc
sti
cmp
int3
pop
imul
and
shl
mov
fcomip
adc
sub
dec
out
sbb
inc
int
fwait
sub
mov
sbb
bound
lcall
int
cld
cmp
add
inc
pop
add
in
mov
cld
mov
xor
fsub
bound
dec
imul
jecxz
mov
retw
add
push
dec
add
out
in
lea
or
mov
adc
pop
push
push
push
xor
lret
xchg
loop
enter
rolb
jge
and
ret
fldenv
and
jmp
test
sbb
out
out
jnp
push
movsb
fwait
sub
dec
sub
pop
nop
inc
push
or
pop
mov
cs
mov
adc
adc
fsts
pop
and
cmpsb
cld
dec
outsl
mov
leave
mov
mov
fcomps
int3
stc
adc
inc
mov
cs
test
into
xchg
movb
cmp
cwtl
arpl
adc
mov
divb
in
pop
inc
or
cs
jmp
xchg
add
mov
mov
iret
dec
and
push
add
dec
sbb
mov
cmp
mov
inc
rorb
test
popf
jbe
jmp
push
xchg
insl
js
pop
mov
sbb
inc
stc
push
push
xchg
stos
lret
and
and
frstor
xlat
mov
lcall
dec
push
jmp
and
lds
xor
les
movsl
jle
xchg
cmpl
int
and
aas
dec
mov
xor
xchg
adcb
push
or
xchg
xchg
xor
rcrb
push
pop
push
adc
fildl
movsl
mov
clc
popf
add
std
int3
ss
dec
mov
mov
aam
push
fisubrl
imul
sbb
mov
int
pop
insl
add
add
mov
dec
in
lods
xor
or
sub
mov
movsl
adc
fucom
das
pop
and
insb
pop
pop
out
mov
jge
imul
adc
xor
mov
cmp
xchg
fstpl
mov
cmpsb
cmc
mov
loope
xchg
out
ret
or
ror
adc
lcall
out
in
push
and
cmpsb
fistpl
inc
pop
push
sbb
aad
push
lcall
mov
jp
popf
push
dec
push
ja
cs
pop
stos
mov
adc
fs
stc
adc
aas
push
xchg
or
popf
fists
cli
test
filds
push
sub
fidivs
xchg
push
mov
pop
dec
pop
push
sub
mov
push
push
adc
sbbl
dec
out
sub
xor
std
je
inc
les
inc
ss
pop
mov
out
cmpsl
push
push
gs
mov
pop
lea
add
data16
or
fcom
movsb
push
fnstcw
inc
cmpsb
ljmp
popf
mov
cmpsb
cmp
xchg
adc
mov
enter
ljmp
phaddd
xor
mov
xchg
push
push
pop
jb
inc
sub
sbb
lret
pop
inc
nop
out
add
dec
int
fcomi
and
xchg
hlt
in
jp
push
adc
mov
mov
lods
aad
sub
sbb
daa
leave
shrb
mov
aas
xchg
outsb
sbb
loop
mov
pop
or
cmp
sub
xlat
cmpl
loop
push
fidivrs
out
mov
imul
aaa
fldenv
adc
cmp
roll
cmp
cld
shr
and
or
adc
movsl
jae
test
xor
and
das
test
cmp
inc
sti
fidivl
stos
cli
and
or
ja
mov
sbb
les
mov
clc
insb
cmp
inc
insl
jp
fsubrl
mov
cwtl
add
inc
push
test
adc
addr16
jne
rcll
ret
dec
push
add
pop
sbb
add
cmpsl
rcrb
imul
dec
enter
jmp
xchg
inc
pop
jne
and
fldl
jne
push
sbb
adc
lods
shrb
pop
arpl
push
sub
addl
add
clc
add
fsubrs
push
jge
test
lods
test
sub
test
xchg
in
xchg
jle
addr16
out
in
fwait
mov
int
jbe,pn
inc
and
push
std
adc
jo
mov
push
movswl
xor
nop
test
dec
inc
xchg
fidivrs
xlat
or
lret
xor
insl
add
cmpsb
in
in
fimull
push
arpl
aam
cli
or
push
imul
iret
mov
lret
mov
or
cmp
ja
inc
stc
fwait
loop
cmp
test
pop
test
fisubrs
imulb
iret
jmp
push
ss
jmp
cmp
lcall
cmpsb
jbe
stos
fstpt
sbb
in
pop
pop
fisubl
push
enter
xor
stos
xchg
stos
mov
inc
aaa
orl
xchg
pop
fsts
js
or
sub
ret
jbe
rol
pop
add
cli
icebp
shlb
cmpsb
cmp
lret
loope
xchg
loop
dec
add
ret
nop
pop
rorl
enter
loop
sahf
adc
mov
pop
dec
cmp
cmpxchg
xor
mov
sbb
push
adc
jb
test
sahf
adcb
test
je
pop
pop
stos
dec
add
js
lea
or
jb
or
xchg
and
push
cwtl
shr
push
mov
xor
dec
aaa
outsb
cmpb
xchg
mov
add
push
or
hlt
loopne
in
arpl
push
jge
dec
cmpsb
stos
lret
ficoml
imul
xorb
or
out
cmp
lret
xchg
or
lret
push
mov
scas
xchg
imul
paddq
je
cmp
push
cmp
cmp
push
mov
enter
mov
jns
fcoms
and
out
ffree
dec
in
push
mov
and
mov
jne
inc
call
sbb
add
lods
repz
mov
pop
pop
dec
pop
icebp
dec
push
addr16
aaa
jnp
xchg
cmp
mull
popf
and
mov
xchg
movsl
dec
mov
jl
cmp
outsl
movsb
outsb
pop
lock
mov
and
xor
mov
je
adc
out
xchg
test
cmp
gs
jo
push
pop
outsl
dec
pusha
dec
mov
fsubl
test
jae
jo
das
rcrl
pushf
sub
xor
icebp
xlat
mov
mov
aam
repnz
and
mov
push
sbb
jge
push
ljmp
outsb
ret
iret
mov
inc
mov
sub
cmpsb
hlt
fcmovne
dec
repnz
pusha
pusha
cmp
pop
loopne
xor
shll
dec
xor
pop
sbb
xchg
and
mov
inc
sbb
sub
call
fdivrl
xchg
cli
mov
mov
imul
cltd
loopne
pusha
xchg
call
cmp
lock
ds
cltd
jno
add
iret
stos
jne
cli
daa
sbb
dec
fs
xor
fucompp
mov
pop
sbb
or
adc
jae
fs
dec
imul
mov
rol
iret
jb
inc
cmp
std
xchg
add
and
insl
fcomip
into
cs
mov
mov
jns
mov
stos
inc
xchg
dec
or
cmp
xchg
xor
test
xor
jns
fwait
cmp
push
cmp
push
sti
icebp
arpl
xorb
ret
mov
loop
mov
out
dec
in
in
inc
xor
dec
dec
xlat
push
in
stos
adc
pusha
loopne
imul
xlat
sbb
gs
mov
sahf
cmp
mov
insl
int
and
cmp
xor
cli
je
popa
jo
lret
sub
fcoml
jmp
mov
sti
arpl
adc
insl
addr16
lcall
or
or
cmpsb
cmpsl
fstl
xor
dec
fdivrl
fdiv
pop
pushf
mov
xchg
mov
pop
cvtps2pi
pop
outsb
fucom
dec
or
leave
add
fists
loop
and
loop
imul
aas
dec
popf
pop
dec
dec
out
dec
jnp
sahf
mov
xor
xor
sbb
mov
sbb
and
jmp
pop
or
mov
cmpsl
cmpsl
shrl
adc
mov
insb
mov
shlb
jmp
pushf
sbb
sbb
cli
inc
mov
aas
ljmp
jge
in
adc
fmuls
push
testb
mov
mov
movsb
pop
shr
xchg
scas
fs
inc
pop
dec
rorb
outsb
hlt
sbb
xor
push
fidivs
das
in
adc
stc
pop
in
jle
cmp
jne
mov
out
pop
lods
jb
lock
add
fwait
jb
push
test
lret
mov
push
das
or
push
int3
ja,pn
mov
and
sub
popf
push
xor
hlt
adc
inc
pushf
sub
not
loope
enter
sti
fldenv
mov
cmpsb
mov
mov
jge
and
xchg
and
mov
mov
addl
leave
mov
push
xor
jl
sub
leave
mov
push
pop
test
xorb
cwtl
or
sub
push
dec
sbb
popf
push
push
hlt
scas
mov
add
or
add
lret
int
sbb
lock
stc
fistl
sbb
mov
outsb
imul
fcmovbe
sub
mul
sar
idivb
jmp
mov
sub
dec
jno
rorb
push
xlat
ds
mov
sbb
mov
and
mov
in
mov
jl
adc
xchg
repz
mov
or
add
ljmp
push
lret
out
js
int3
into
adcl
push
mov
lcall
adc
aam
out
push
mov
jbe
fbld
mulb
cmp
arpl
fcoms
rcr
fdivr
pop
cmp
dec
mov
cs
rclb
out
adc
adc
mov
add
pop
fcoml
mov
in
in
sbb
hlt
jp
jne
daa
mov
xchg
mov
mov
pop
in
insb
xchg
dec
outsb
adc
lcall
arpl
les
cmp
inc
loope
repz
lock
xchg
jno
fstpl
mov
das
in
stos
ja
sub
test
jno
aas
ret
aam
out
inc
xlat
and
scas
add
pop
or
iret
pop
sub
dec
lahf
jne
iret
roll
mov
int3
mov
xor
xor
inc
arpl
hlt
pop
aam
enter
add
mov
scas
pop
pop
or
out
mov
sar
cmpsb
movsb
or
aad
add
mov
cwtl
pop
xchg
cmp
sbb
stc
leave
icebp
pop
loopne
bound
adc
cmp
fcmovnbe
and
mov
in
ljmp
fs
out
clc
fadd
pop
jp
shrl
test
push
mov
roll
mov
adc
cmp
dec
push
call
jbe
add
std
adc
mov
sub
jnp
and
dec
in
dec
and
pop
mov
jmp
jmp
cwtl
outsl
jg
and
mov
ljmp
lret
mov
sbb
pop
sub
fwait
xchg
movsb
sub
or
loop
adc
popa
repnz
push
in
mov
dec
daa
aas
jno
loope
inc
pusha
cmp
cmp
ss
mov
push
dec
push
cmp
popa
xchg
jge
dec
sti
add
jp
jl
mov
test
sbb
jo
sbb
nop
addr16
imul
addb
push
cld
and
jl
ss
sub
jl,pt
xchg
addb
xor
adc
sbb
pusha
mov
loope
lods
fwait
pop
mov
out
xchg
xor
lcall
pop
cld
mov
mov
insb
lret
xchg
xor
mov
rcrb
insl
inc
ret
push
xor
fisubl
out
icebp
push
aam
mov
aaa
pushf
pop
outsb
mov
add
sub
dec
mov
xchg
int
stos
mov
fldcw
std
inc
mov
push
aas
cld
out
sub
cmpsl
push
xchg
push
cmp
lds
inc
dec
mov
pop
outsl
sbb
sub
in
outsb
arpl
pop
pop
add
sahf
rorb
adc
mov
cmc
xlat
movsl
push
fs
sub
in
sub
cmp
testl
loopne
mov
lds
adc
inc
add
push
mov
pop
outsl
loopne
jbe
pop
and
cld
push
xchg
test
