je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
xor
daa
in
test
lods
int
cmp
xor
inc
or
add
add
add
movb
add
add
pop
add
add
add
add
cmp
js
test
add
add
add
add
add
add
add
and
mov
inc
add
int
int
push
add
add
add
and
js
data16
add
add
add
add
and
xchg
add
add
out
add
data16
add
add
add
xchg
add
add
xor
add
add
jbe
add
add
push
add
add
and
inc
add
add
add
push
add
add
add
or
and
data16
and
xor
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
jae
xor
add
add
push
add
add
inc
add
add
add
add
add
add
add
inc
add
loopne
xor
adc
add
add
and
js
pop
add
add
add
and
popf
add
sub
and
js
mov
testl
mov
imul
add
add
add
outsl
add
add
out
add
add
add
xchg
add
add
add
add
add
and
add
add
js
data16
data16
add
add
add
addb
add
add
and
faddl
or
add
add
and
and
mov
add
mov
and
mov
filds
jo
outsl
add
add
add
add
mov
add
push
add
inc
add
sub
add
lret
add
data16
add
add
add
inc
add
ret
add
add
add
add
add
add
add
and
dec
add
add
add
add
and
loope
jecxz
adc
add
jbe
loope
movb
add
and
pop
add
add
data16
add
add
cmp
loope
and
and
mov
add
add
add
jecxz
adc
jmp
ret
add
add
popa
add
roll
add
and
add
add
add
add
add
add
add
add
aad
test
mov
add
add
data16
add
add
add
pop
add
faddl
add
sbb
jl
cmp
or
ret
add
add
data16
add
add
add
dec
add
push
add
add
jmp
push
add
popa
add
add
data16
add
add
ret
add
and
pop
add
add
add
pop
add
add
and
add
adc
ret
add
add
and
loope
add
js
mov
add
add
add
and
push
add
add
data16
add
or
and
push
add
add
and
addb
add
add
push
and
add
and
addb
add
push
add
add
cmp
ret
add
inc
add
add
add
add
add
add
add
sub
or
pop
add
add
pop
add
add
das
add
add
add
add
dec
add
pop
add
add
add
leave
gs
sahf
out
leave
int3
movsb
mov
stos
dec
xor
shlb
das
shll
push
adc
push
jo
pop
jnp
repz
pop
push
inc
fimull
adc
cmpsb
pop
push
cmp
insb
mov
xchg
push
cli
rclb
cmp
gs
xchg
mov
sbbl
dec
fbstp
push
aad
mov
mov
scas
fimull
push
mov
cmp
mov
out
mov
xor
pop
cld
jmp
mov
cmp
repnz
pop
xor
and
and
ljmp
mov
sub
out
lcall
adc
and
les
pop
mov
mov
and
adc
push
mov
lret
popa
stc
hlt
mov
sbb
divl
or
cli
js
and
and
mov
out
loop
insl
push
lret
out
xor
mov
lea
out
inc
mov
push
mov
fwait
adc
shll
jb
cltd
cmpsb
or
or
xor
adc
outsl
mov
in
lods
and
cmp
in
jmp
dec
pop
outsl
dec
test
stos
cmp
and
jno
adc
push
subb
pop
jae
pop
mov
jne
repnz
fcoms
adc
push
mov
pop
aad
add
pushf
jge
bound
add
or
ljmp
fnsave
adc
ljmp
lds
xor
sbb
jb
sbb
mov
mov
fprem1
or
jb
inc
movsb
or
call
cltd
test
jns
adc
imull
data16
pop
cmp
iret
mov
mov
xchg
add
xchg
pop
js
push
xor
dec
shrl
lret
fstps
out
dec
adcl
mov
mov
or
rcl
ret
sbb
cmpl
mov
pushf
add
sub
imul
sbb
movb
add
push
insb
dec
cmp
cmpsb
jb
mov
cmp
in
pushf
xchg
push
inc
loope
dec
shl
jbe
sbb
ret
adc
negl
cmpsl
jnp
xchg
cmp
lods
shrb
push
jno
inc
pushf
jo
test
data16
mov
sub
inc
cs
lods
mov
add
rol
jns
adc
inc
xor
les
pop
in
jmp
in
cs
movsb
jp
push
xchg
and
mov
inc
sti
xchg
jbe
pop
mov
mov
sahf
xor
mov
andb
push
das
mov
int
inc
cmpsb
shll
mov
stos
imul
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
xor
scas
fbld
mov
movsl
sub
aas
in
hlt
rcl
aad
and
mov
jne
inc
call
movsl
adc
das
in
cmc
dec
lds
outsl
and
cmpsl
adc
xlat
inc
out
cmc
movsl
pop
mov
in
lock
xchg
pushf
cmp
or
xor
enter
push
mov
lds
sub
cmpsl
popa
les
lahf
mov
jmp
cmp
add
adc
loopne
icebp
fsubrl
rcrb
aas
or
int
sub
in
mov
push
jmp
into
int3
and
rcll
rcrb
xor
sub
shll
fistps
movsl
mov
mov
jae
test
jge
add
sbb
fcomps
lret
inc
add
lea
jge
inc
notl
int
shl
xchg
xchg
mov
popf
pop
inc
sub
ljmp
nop
and
mov
ja
lock
xchg
ja
scas
les
imul
adc
iret
inc
call
movsl
pop
mov
test
xchg
ss
cmc
push
lds
outsb
push
lahf
jno
imul
adc
int
pop
pminsw
icebp
dec
xchg
cmp
add
jbe
jno
pop
rolb
adc
imull
push
pop
lock
xchg
sbb
sbb
sbb
and
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
cmp
push
push
add
sbb
inc
mov
mov
or
fadd
pop
popf
push
jno
mov
repnz
mov
dec
test
mov
arpl
cmp
mull
mov
add
popf
out
mov
pop
cmp
mov
lods
insl
push
mov
push
cltd
mov
mov
lahf
data16
jmp
mov
mov
sbb
push
pop
ja
loope
lds
lcall
js
fnstcw
xchg
push
cmpsl
or
scas
xlat
or
dec
clc
aam
in
into
mov
push
aam
cmp
repz
xchg
inc
push
outsl
lahf
scas
xchg
scas
and
push
push
adc
cmp
shll
popa
cltd
popa
mov
mov
inc
mov
in
push
jno
dec
mov
aad
xchg
insl
mov
cmc
stos
mov
push
and
fcom
scas
std
ret
scas
ret
roll
mov
sub
insb
cld
sub
jle
xchg
mov
inc
mov
xchg
dec
je
stos
or
pushf
mov
nop
test
sbb
inc
xchg
out
mov
xchg
shlb
cmp
stos
fsin
fdivr
lea
sbb
filds
test
cmc
xor
std
js
xchg
cmp
pop
and
loop
repz
negb
mov
mov
dec
arpl
pop
sbb
mov
ss
lcall
xchg
jle
stc
in
xchg
xchg
ret
std
add
mov
mov
mov
ret
mull
xchg
mov
mov
add
mov
adc
repz
insb
mov
lods
add
into
into
outsb
or
mov
push
fbstp
mov
jle
dec
sub
jne
adc
and
mov
sahf
mov
mov
mov
shlb
pop
test
mov
push
sbb
jle
aad
jmp
faddl
pop
icebp
stos
test
mov
pop
ret
ss
push
inc
std
jle
fwait
adc
jae
jecxz
fwait
in
divl
sub
sbb
or
sbb
jae
push
imul
jge,pt
ss
dec
int3
daa
rcl
scas
mov
jbe
push
test
icebp
and
dec
and
xor
arpl
cmp
adcl
cmp
ffreep
fndisi(8087
adc
sbb
sub
cwtl
mov
fdivrl
or
mov
cmpb
mov
adcb
sbb
das
add
mov
mov
pop
mov
js
jecxz
movsl
ficompl
sbb
loop
xchg
jae
add
stc
push
cmove
cs
bound
sub
mov
xor
cltd
mov
je
dec
sub
cmp
subl
dec
cmpsb
fistl
or
xor
xchg
mov
xchg
shr
stos
lret
aaa
loope
xor
insl
and
loop
mov
push
mov
push
inc
ja
and
mov
pop
lods
fs
call
roll
push
outsb
roll
outsb
fisttpl
cld
push
mov
xchg
and
push
dec
adc
ss
fimuls
pop
pop
pop
jno
add
in
lods
hlt
xlat
jp
dec
in
addb
jg
jne
xor
mov
aad
test
mov
cmpsl
scas
daa
leave
divl
jbe
inc
ret
inc
cmp
push
xor
int3
outsl
mov
xchg
int
loopw
clc
mov
mov
push
lahf
push
aad
sbb
sahf
lret
sub
mov
scas
stos
xchg
jns
aam
lods
xchg
mov
mov
dec
std
lods
jmp
add
rcrb
and
cmpsl
or
jge
decb
mov
or
fisttpll
cmp
adc
pop
les
pop
inc
call
push
push
xor
xchg
faddl
scas
or
enter
xchg
scas
loopne
les
shrb
inc
cmpsl
cwtl
mov
mov
jp
clc
add
into
adc
cli
mov
jg
pop
cmp
enter
sbb
sbb
adc
pop
jbe
mov
mov
sbb
int3
in
lcall
and
lock
mov
push
test
sbb
mov
adc
std
push
int3
fmuls
xor
into
jp
mov
sub
mov
test
lahf
lret
movsb
jb
cmp
ljmp
shll
cmp
stc
dec
mov
lods
jb
sbb
push
cltd
test
dec
out
dec
mov
in
push
mov
ja
stos
cmp
inc
mov
or
mov
repz
xcrypt-ctr
cmpsl
sahf
sarb
fildl
ret
lcall
inc
cli
adc
ljmp
sbb
dec
ds
mov
subb
mov
cld
test
out
sbb
outsl
int
int
aaa
jne
fstpt
je
aad
sub
push
add
call
fildll
test
sbb
lods
pop
xor
pop
shrb
sahf
jp
mov
jo
scas
and
xchg
cmp
lds
mov
stos
ljmp
insb
sbb
xor
call
push
out
in
into
in
cmp
jp
or
cmp
imul
dec
pop
and
sub
repnz
mov
ljmp
jne
adc
dec
ds
mov
mov
movsl
inc
jnp
and
popa
mov
arpl
fidivl
add
into
xchg
aas
mov
jmp
cltd
insb
mov
fs
aaa
pop
lock
cwtl
dec
jge
pop
adc
nop
jle
jp
adc
insl
sarb
stos
adc
pavgb
cmpsb
mov
rorl
mov
mov
and
ljmp
subb
jecxz
dec
in
mov
or
mov
jmp
out
jp
pop
outsl
inc
icebp
xor
loope
sbb
sub
subl
insb
mov
cmp
or
or
imul
sub
add
movntps
dec
mov
loope
or
pop
ret
cltd
repnz
xlat
cmp
stc
fs
les
lret
mov
inc
xchg
mov
and
cmp
sbb
iret
sbb
stc
xchg
mov
mov
gs
iret
jge
push
jmp
int3
push
cmp
shll
outsl
mov
xchg
punpcklbw
cmp
insb
ss
sub
pusha
mov
dec
bound
push
pop
addl
inc
adcl
lret
repnz
mov
sub
jns
cmpsb
ja
das
fs
sti
cmp
or
and
pop
pop
nop
mov
dec
scas
pop
and
loop
pop
loopne
or
rep
lds
imul
pop
or
sub
mov
sub
sbb
dec
pop
fwait
mov
mov
xchg
push
jmp
into
mov
movsl
lods
lret
inc
and
cld
or
push
rorl
xor
xor
into
jp
pop
cmp
mov
repz
mov
xchg
cltd
jns
inc
dec
pop
jns
rcl
pop
ja
inc
in
pop
push
imul
adc
mov
out
mov
mov
imul
stos
data16
and
lret
lret
imul
lds
fistpl
ljmp
loop
jo
addr16
jbe
adc
in
fildl
pop
outsb
jno
leave
test
je
rcr
lods
into
aas
sub
push
ret
add
movsl
lds
mov
insl
aas
pop
jle
mov
call
lret
xchg
pop
sub
push
add
add
xchg
fnsave
arpl
test
es
jb
popl
push
je
popf
js
and
jno
inc
out
ss
inc
test
stos
faddl
push
ror
jne
nop
in
imul
mov
aas
lahf
mov
jmp
cmpsb
movsl
inc
adcl
fucomp
lret
pop
mov
xchg
fldcw
mov
mov
xor
push
into
jnp
pop
hlt
sub
and
jae
lods
sbb
shll
cwtl
in
push
sbb
lret
adc
pop
lds
or
mov
out
repz
imul
xchg
fwait
xchg
ljmp
xchg
data16
nop
pop
inc
xor
in
int3
sub
imul
ljmp
mov
jl
iret
adc
adc
pop
cmp
pop
ret
sbb
lahf
jno
int
dec
xlat
sti
sbb
out
mov
mov
test
lds
ffreep
jle
stos
adc
fs
add
or
repnz
aas
sub
out
addr16
push
ror
xchg
loopne
js
mov
cmp
push
xchg
pop
leave
fs
lods
cmp
loop
adc
push
push
dec
dec
sub
and
xor
xorl
lds
xchg
xchg
imul
pushf
cwtl
in
push
jb
stc
inc
push
jae
aad
out
sub
pop
inc
mov
or
fdivrl
clc
inc
pop
and
pop
cmp
fimull
cmp
repz
orl
inc
or
iret
arpl
adc
cmp
loope
pop
mov
mov
xchg
cmp
fisubrs
mov
adc
stc
jg
xchg
adc
dec
in
mov
leave
xor
call
inc
cmp
sbb
ret
in
je
xlat
mov
sbb
lods
sub
dec
out
add
stc
xchg
xor
xchg
gs
cmp
dec
fdivl
roll
fnstsw
movsl
mov
imull
lret
and
push
mov
cmc
sub
aaa
push
icebp
sahf
jmp
sub
cs
xchg
xchg
cmpsb
lods
lds
rcrl
rol
pop
jnp
aad
dec
jno
out
test
dec
cmpb
mov
or
sti
arpl
loopne
mov
stos
adc
gs
sbb
out
test
push
or
and
mov
jno
lods
addr16
loop
dec
xchg
pop
push
sub
aam
xor
cmp
ret
jbe
mov
or
mov
inc
jbe
sub
stc
ficomps
mov
addl
cmp
movsl
gs
popf
sbb
insl
xchg
mov
addr16
dec
mov
mov
push
aad
sbb
sbb
xlat
inc
and
sbb
negb
sahf
cltd
sti
mov
shll
cmp
sbb
stc
xor
xlat
xchg
xchg
push
mov
sbb
lcall
fnstsw
out
adc
xor
and
inc
fnstsw
dec
in
jno
aad
and
pop
fistl
jo
inc
loope
ljmp
jne
aam
mov
or
rorb
das
cmp
mov
inc
mov
dec
cmc
xor
xchg
stc
and
andb
loope
aaa
in
mov
popf
jns
mov
sub
es
fcmovu
adc
mov
mov
dec
mov
pop
mov
ficomps
dec
mov
in
pop
ficoms
push
imul
xor
pop
mov
cld
into
push
fidivrl
out
inc
xchg
outsl
mov
jb
out
jg
cwtl
stos
push
fmul
das
lea
or
sahf
xchg
dec
sbb
loopne
adc
dec
cmp
mov
mov
sub
test
adc
xchg
sub
dec
xor
mov
push
jbe
mov
dec
push
push
les
jns
addl
and
jo
mov
inc
addl
int
in
out
push
lcall
pop
lcall
cmp
stos
mov
push
sub
sub
inc
in
mov
xlat
and
add
sub
push
in
cs
sbb
sbb
lret
and
push
test
pop
mov
int
addl
cmpsb
mov
mov
mov
xor
mov
mov
mov
divb
inc
push
outsl
adc
cld
imull
fisttpll
test
gs
mov
sbb
sub
mov
xor
aas
add
imul
add
pop
ja
sarl
add
mov
test
les
out
ret
repnz
xchg
jne
sub
adc
pop
loopne
xchg
push
lret
negb
clc
insb
jbe
push
es
sarl
and
and
sti
jle
js
inc
daa
icebp
les
cmp
mov
ret
mov
sbb
out
push
movsl
sbb
icebp
mov
imul
mov
not
cmp
mov
xor
jns
push
push
in
dec
push
or
pop
jle
pop
push
jg
inc
rcrl
les
in
dec
mov
mov
and
cmp
xchg
mov
repnz
dec
cltd
dec
scas
lret
adc
mov
pop
test
in
sub
cli
loope
and
cltd
arpl
adc
scas
dec
cmp
nop
jno
and
and
or
dec
adc
out
sub
inc
pusha
in
loop
shrb
inc
cli
ljmp
dec
addr16
icebp
jae
lods
cwtl
dec
adc
ret
dec
cmpsl
mov
cltd
sub
jmp
loop
fwait
jnp
mov
test
in
popa
mov
ret
imul
pop
dec
test
sbb
jbe
or
or
mov
jecxz
push
mov
clc
pop
rclb
jg
roll
ss
aam
xchg
pop
xchg
and
fwait
in
pop
push
sub
and
add
popa
adc
lea
in
pop
cs
xor
sbb
ret
cli
cwtl
inc
mull
lock
cld
fs
mov
shrl
daa
mov
inc
shr
int3
dec
jmp
mov
fstpl
std
dec
faddp
mov
mov
mov
popf
mov
mov
pop
mov
xchg
test
ja
les
inc
pop
sbb
mov
sahf
mov
sub
or
and
add
out
add
push
add
aas
mov
popf
pop
aad
movsb
xchg
jge
mov
mov
les
stos
mov
test
aad
cld
jb
fucom
sub
inc
sbb
sbb
mov
sub
push
lret
cmc
loopne
ja
lret
and
or
or
jno
in
pusha
and
add
test
pop
lcall
pop
call
mov
dec
and
arpl
ds
dec
out
stos
lds
nop
jne
mul
and
mov
xor
xchg
inc
adc
orl
pop
push
sarb
mov
cmp
xorl
push
arpl
xchg
xor
add
dec
adc
ficomps
sahf
je
jge
mov
je
es
sbb
sti
sub
jo
ja
inc
dec
xor
cmp
or
mov
cltd
pop
data16
rolb
cs
int3
mov
cmpsl
call
popa
cmpsb
popa
in
inc
and
stc
push
pop
mov
xchg
test
sub
lods
inc
into
add
mov
push
ss
push
call
cmp
pusha
ret
daa
push
out
out
inc
mov
mull
arpl
dec
mov
push
cltd
and
inc
pop
pop
daa
mov
xlat
push
aam
lock
arpl
js
mov
cmpsb
addr16
mov
aam
and
inc
and
ljmp
aaa
sub
jge
cltd
stc
scas
sbb
sbb
jb
adc
in
add
loope
xchg
dec
adc
mov
xchg
mov
xor
jmp
loope
lcall
sbb
mov
or
sbb
prefetcht0
fistpl
insb
push
out
imul
ss
lock
shl
gs
and
pop
add
loop
fdivrl
inc
xchg
inc
frstor
inc
fildl
imul
rcrb
js
sbb
ret
aad
mov
push
push
xchg
push
lcall
gs
push
jl
std
stc
sbb
mov
stos
scas
inc
addr16
nop
xchg
outsb
lret
xchg
pop
mov
out
sbb
xchg
mov
scas
cmp
mov
inc
mov
jl
xor
in
rcll
dec
adc
stos
dec
or
pop
jb
and
mov
shll
adc
leave
fdivrs
dec
cmp
mov
sub
cld
push
cmpsb
test
add
or
movsb
lods
idivl
test
pop
push
sub
jg
in
cltd
inc
jns
loop
dec
aaa
out
sti
sahf
xor
dec
imul
movsb
inc
push
push
test
bswap
pop
lea
mov
scas
outsb
das
outsl
insb
cmpsl
mov
icebp
add
mov
repnz
repz
into
push
jecxz
adc
inc
xchg
cmp
adc
dec
sub
gs
in
shlb
push
dec
dec
lcall
sti
les
push
and
ja
xor
pop
je
jl
or
pusha
imul
sub
cmp
js
stc
jb
xchg
jo
std
and
fildl
addb
or
pop
dec
jnp
cmpb
fldcw
ret
sub
mov
bnd
test
push
imul
and
std
aaa
subl
movsb
rolb
dec
jecxz
movsb
out
test
jl
sbb
cmp
adc
inc
call
mov
data16
aas
mov
mov
loop
cmp
addr16
jae
jmp
int
cmp
jo
adc
pop
push
mov
jb
ret
je
imul
cmp
out
sahf
and
popa
cmc
ret
pop
pop
cmp
cmp
cmp
sbb
pop
mov
dec
cmp
mov
jne
jl
aaa
sarb
call
cltd
mov
popf
orb
sbb
insl
testb
out
xor
mov
xor
cmp
aas
xchg
fdivp
repnz
jnp
arpl
push
icebp
shlb
es
cld
pop
std
mov
stc
les
shl
leave
jecxz
push
sub
sbb
lret
test
dec
mov
add
in
cli
mov
push
rcll
stc
xchg
scas
sub
fnstsw
push
sub
xor
nop
out
std
stc
add
jp
sub
into
outsb
mov
cmp
and
sbb
mov
add
add
add
lret
in
subl
jge
jmp
xor
fcompl
scas
cmp
add
dec
sbb
or
jle
cmc
mov
add
mov
xor
das
xchg
mov
mov
hlt
insl
lods
dec
rcr
mov
push
bnd
cmc
or
std
call
fcoms
jg
adc
sub
cltd
adc
hlt
popa
inc
ret
aad
push
adc
ljmp
fs
jle
sti
aaa
cmp
push
lcall
rol
xor
mov
jl
sbb
aam
dec
sbb
push
imul
mov
or
pop
scas
mov
out
inc
ffreep
popa
xchg
or
fdivrs
mov
and
mov
bound
ud1
pop
pop
test
sbb
int
sbb
icebp
inc
cmp
mov
loopne
loope
dec
add
cmc
daa
sti
fs
sbb
mov
jp
ja
inc
mov
fiadds
jl
pop
les
add
leave
loop
int
icebp
aam
sti
mov
jno
mov
pop
data16
stc
aas
xor
mov
push
xor
divl
xchg
stc
cmpl
scas
popf
cltd
lret
cld
popa
imul
psubsb
sub
or
mov
scas
xchg
loope
cmp
jns
ret
mov
std
lods
cs
repnz
lds
lret
sbb
lcall
sub
cmp
cmc
fmull
das
incb
insl
dec
sub
jmp
adc
xor
mov
loope
add
test
cmc
jnp
sahf
inc
add
pop
aam
sub
dec
push
push
mov
ss
xor
ljmp
lret
xor
push
mov
repz
dec
sti
xchg
in
aas
mov
adc
add
xchg
xchg
ret
stc
cmpsl
icebp
inc
push
jmp
jbe
subb
test
inc
mov
in
outsl
fiaddl
in
data16
pop
les
mov
gs
repz
push
or
mov
xchg
insl
jno
inc
aad
sub
add
pop
call
cmpsb
mov
pop
sbb
leave
xor
cwtl
dec
sub
mov
cld
cmp
xor
adc
ffreep
xor
push
ss
cltd
inc
stos
push
lods
iret
mov
pop
in
int
or
sti
popa
push
cmpsl
cmpsb
add
ds
nop
fcomps
and
pop
xor
add
push
ja
cmp
cltd
int3
fistps
outsb
add
js
push
lret
data16
cmovle
hlt
outsb
mov
fdivl
dec
icebp
dec
jns
fmul
lahf
xlat
repnz
int3
sbb
int3
pop
jp
orb
xchg
inc
jge
outsb
loopne
jmp
arpl
enter
mov
scas
rcll
lock
sahf
inc
enter
sbb
fs
ja
dec
mov
sahf
test
repnz
hlt
out
or
pop
mov
adcl
add
jne
cmp
icebp
xchg
scas
xor
cld
or
cltd
jne
xchg
sbb
xor
mov
jmp
xchg
daa
inc
jno
scas
cli
std
sbb
mul
imul
mov
jb
push
cmp
movsl
in
adc
in
mov
arpl
filds
dec
mov
leave
icebp
fwait
dec
push
outsb
fdivrl
xchg
mov
add
xor
sbb
mov
pop
lods
xor
cs
cs
mov
sti
xchg
arpl
cmp
out
xchg
push
and
xchg
lock
popa
movb
xchg
xchg
clc
xchg
mov
fs
jb
ficomps
outsb
or
ja
and
repz
pop
movsl
les
leave
adc
fwait
out
sbb
hlt
repz
xor
and
cmpsb
jae
daa
out
sbb
xor
adc
dec
sbb
ret
aaa
sbb
shr
pop
sub
and
popa
leave
cmpsb
adc
mov
jb
mov
dec
icebp
push
mov
mov
fwait
sbb
mov
dec
repnz
adc
into
push
mov
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
test
xchg
sub
pop
cmc
dec
lds
imul
mov
adc
iret
inc
call
movsl
pop
mov
das
aas
xchg
pop
xchg
xlat
jge
cmp
sub
int3
int3
int3
int3
int3
adc
imul
cmp
jmp
lds
dec
add
jns
or
jne
cmp
jmp
les
adc
imul
cmp
sar
int3
mov
mov
mov
xor
into
adc
sahf
repz
cmp
mov
dec
dec
adc
pop
cli
fxch
psubusb
mov
lea
and
es
call
lds
stc
mov
ljmp
adc
mov
xor
movsl
sub
add
mov
jbe
in
adc
movsl
and
or
adc
mov
push
pop
test
or
test
fadds
mov
mov
cmp
cmp
push
in
sub
std
cmpsb
pminub
rcrl
sarb
clc
xor
mov
xor
or
jne
cmp
jmp
lds
jo
pop
jae
arpl
xor
sbb
loopew
in
loopne
movb
ljmp
jno
push
imul
pop
and
out
loop
enter
and
mov
jmp
jae
inc
sbb
or
jne
cmp
jmp
lds
adc
imul
cmp
jmp
lds
adc
fistpl
test
js
xchg
sub
nop
mov
dec
adc
jle
adc
sti
mov
add
loopne
xchg
fldt
inc
arpl
push
xor
rep
addb
cmc
pop
cmpsl
sbb
cld
sbb
sub
mov
les
mov
lods
push
add
xchg
aad
insl
jb
mov
jecxz
jbe
add
adc
mulb
add
outsl
cmpsb
xchg
or
jb
xchg
push
jae
pushl
jl
js
push
jo
dec
popl
aaa
stc
inc
dec
inc
stos
in
pop
cmp
cmp
xor
push
mov
ud2
pop
ss
xor
insb
das
pop
pop
mov
pop
popa
push
rcr
fldenv
cmp
iret
clc
aas
incb
pop
fcmovbe
aas
sub
pushl
jg
fnstsw
test
pop
ljmp
jecxz
test
pop
dec
mov
in
jbe
pop
test
shrb
jbe
adc
inc
cmovp
adc
sahf
push
sbb
mov
mov
pop
xchg
les
pop
adc
aas
les
mov
xor
jmp
aas
xchg
sbb
nop
incl
scas
mov
add
int
ss
loope
xchg
dec
and
call
imul
pop
push
sub
div
scas
das
jecxz
loop
test
mov
add
aaa
test
push
sub
lods
fadd
lods
roll
rcl
xchg
xor
call
xchg
rcll
js
jmp
pushl
scas
mov
mov
add
push
sahf
aad
xor
loope
cmp
arpl
push
enter
mov
mov
imul
mov
pop
dec
jbe
mov
filds
andb
lods
xor
in
or
cli
fisttps
aas
ret
pop
lret
test
and
fcoms
aaa
dec
dec
mov
xor
adc
fidivs
inc
mov
cmp
pop
pusha
jmp
jge
in
inc
xor
lock
test
addb
or
idivb
int
sub
push
pop
aad
cmp
dec
adc
push
into
gs
ret
insl
xor
imul
lret
sbb
push
fmuls
sub
enter
test
adc
pop
in
cmp
mov
shl
sarb
cmp
pop
xor
daa
cli
fstl
push
cwtl
insl
sbb
cs
xchg
sarl
fiadds
lret
sbb
pop
push
adc
xor
add
je
inc
xchg
cmp
jmp
push
jne
xchg
cltd
mov
fdivl
out
xlat
jbe
stos
fnstenv
fcmovbe
movsl
push
aas
testl
nop
int
imulb
mov
fdiv
leave
les
jmp
mov
out
sub
out
scas
int
jle
and
jo
fwait
lock
xor
mov
out
les
mov
cli
das
cmpl
or
js
loope
pop
sub
call
pop
and
xor
int3
add
or
cs
sti
popl
les
cltd
rcrl
pop
aaa
loop
push
xchg
adc
xchg
mov
and
mov
dec
test
pop
cmp
add
and
push
leave
mov
outsl
mov
jp
xchg
or
cld
stos
sub
aas
inc
sbb
fs
dec
dec
in
outsb
lock
sbb
jmp
outsb
or
xchg
loop
fadd
dec
sti
xchg
xchg
mov
test
cmp
xchg
or
cmp
shl
cmpsl
push
mov
push
popf
aad
and
pop
call
cli
jbe
sbb
mov
mov
cltd
cmp
cwtl
jne
repnz
mov
mov
inc
mov
mov
into
in
pop
scas
add
inc
sbb
push
and
xchg
cmpsb
jl
ds
pop
insl
cmpsb
push
mov
jb
inc
out
mov
in
mov
sahf
cmp
inc
cmp
xor
dec
ds
pop
xor
sub
pop
out
inc
test
scas
lock
xchg
mov
dec
outsb
popf
testl
js
iret
addl
aaa
shl
testl
push
lds
jg
push
and
mov
dec
jns
nop
stos
inc
xor
mov
xor
loopne
shrl
jg
push
dec
clc
adc
sbb
hlt
inc
add
cmp
inc
push
iret
dec
or
cmp
push
stos
in
jo
cmp
xchg
lahf
pusha
popf
ljmp
adc
sbb
ljmp
stc
fildll
jmp
xchg
sarb
dec
andb
dec
shrl
movsl
outsb
cmpsl
sti
xchg
gs
dec
lahf
fildll
add
adc
xchg
jp
xchg
or
pop
cmp
sbb
in
xchg
push
mov
mov
cwtl
sbb
bound
in
dec
mov
dec
das
lods
das
xor
ja
mov
insb
loopne
cmp
sbb
stc
xchg
fwait
pop
adc
mov
inc
push
cli
jmp
jge
pusha
cmp
ds
fdivrp
jo
insl
and
icebp
call
xchg
cld
pop
cltd
dec
mov
sub
sti
pop
push
adc
add
mov
xor
sub
sub
dec
mov
aam
lahf
int
mov
pop
in
push
push
test
std
mov
push
addl
or
es
mov
repnz
leave
aad
xor
icebp
add
sbb
in
in
xchg
dec
push
jbe
mov
mov
push
lock
inc
pop
out
jmp
pop
inc
jg
cs
adcl
xlat
mov
js
ja
shll
sub
adc
imul
pushf
arpl
mov
ficoms
xchg
divb
mov
popf
pop
xchg
mov
out
mov
push
cmp
pop
inc
sbb
cmp
pushf
int3
ficompl
ljmp
add
adc
notl
iret
das
dec
shll
sarb
cld
fwait
jb
dec
in
jnp
jp
pushf
loopne
clc
js
das
adc
inc
leave
in
xchg
icebp
push
inc
pop
mov
cltd
ja
lods
and
pop
add
add
mov
popf
and
fnstcw
add
mov
fidivl
out
aad
push
notb
xlat
add
cmp
jmp
jne
hlt
in
add
icebp
push
add
jp
pop
inc
sbbl
out
mov
cs
jno
mov
lods
test
shlb
sub
loope
push
xchg
mov
or
insb
sub
iret
jp
arpl
sbb
mov
mov
sbb
pop
sub
decl
cmp
sub
les
insb
and
lds
sbb
pushf
push
xchg
fcmovnb
in
shrb
subl
dec
sub
xchg
les
add
and
loop
jmp
and
adc
rcrb
fnsave
dec
scas
jg
xchg
ljmp
sbb
add
shll
aam
mov
adc
mov
jecxz
push
in
inc
push
bnd
daa
mov
mov
mov
jg
jle
lods
pop
add
push
xor
enter
shll
push
sahf
adc
mov
pop
xor
jmp
repnz
jecxz
mov
adc
mov
mov
aam
sub
lods
dec
or
icebp
popf
xchg
lahf
fimull
inc
stos
sahf
outsl
mov
mov
dec
and
mov
mov
dec
rcr
xchg
or
in
cmp
jle
jle
in
jle
inc
in
push
popf
push
pop
addl
mov
in
fsubrs
sub
jo
pop
pop
push
pop
mov
sbb
mov
outsl
loop
mov
xchg
jno
repz
movsb
lea
dec
mov
dec
pop
icebp
mov
jns
inc
dec
mov
xor
ret
xchg
lcall
int3
leave
sub
aaa
and
push
mov
ja
adc
xor
inc
mov
dec
adc
addb
clc
sub
imul
imul
adc
je
mov
lea
enter
xchg
jae
push
lods
sar
int
push
imul
and
jl
inc
test
cmp
jg
testb
outsb
mov
sahf
lcall
leave
loopne
adc
pop
sbb
out
mov
xor
cmp
adc
jmp
icebp
push
movsb
sbbl
aas
ljmp
or
fbld
dec
jnp
sbb
dec
or
hlt
pop
jmp
inc
aas
cmp
jle
pop
stos
arpl
and
stc
mov
mov
pop
in
cld
cli
sub
shlb
cmc
lret
mov
repz
sbb
aad
gs
push
testl
shlb
out
jp
in
mov
cmp
aas
fxch
dec
sub
sbbb
fsubrl
dec
xchg
imul
aam
inc
movsl
mov
shrl
out
mov
push
cwtl
xchg
sbb
cld
test
pop
orb
lret
jmp
sbb
sub
imul
sbb
sbb
push
mov
shlb
mov
lret
or
or
jb
mov
adc
mov
xchg
adc
and
dec
dec
int3
xchg
mov
insb
mov
xor
nop
mov
lret
cmp
mov
add
sub
mov
add
rclb
add
sbbl
mov
sti
jp
cs
lcall
aaa
cmpsb
mov
mov
push
cltd
dec
inc
dec
in
jecxz
fst
lock
shlb
push
cld
out
out
mov
cltd
xchg
add
or
mov
insl
mov
fisubrs
and
xchg
mov
add
xor
pusha
sub
popf
pop
mov
dec
jbe
xchg
sub
dec
sbb
jno
xor
xor
cli
jge
adc
adcb
cld
xchg
inc
push
xchg
mov
frstor
inc
xor
sub
ficomps
dec
jp
ljmp
cmpb
std
in
pop
add
out
repnz
dec
popf
dec
fsubs
into
dec
popf
in
jno
js
stc
xor
xchg
sti
js
test
std
inc
xor
push
or
enter
xor
adc
adc
pop
scas
test
cmp
push
pop
lock
fcomi
std
xor
adc
jg
mov
addr16
adc
clc
je
jle
mov
cmp
js
fcompl
adc
incb
jbe
pop
cli
jl
and
mov
push
mov
and
push
std
dec
adc
jmp
mov
insl
dec
cmpsb
cld
or
pop
scas
dec
lods
test
mov
in
daa
and
hlt
ljmp
cmpsb
clc
loop
idivb
push
notb
sub
xlat
bound
not
insb
das
xchg
jge
mov
sbb
inc
cwtl
popa
lret
mov
nop
outsl
push
test
xchg
dec
jns
jae
mov
out
mov
loope
jbe
dec
shrl
lret
out
cmpsl
and
std
xor
jge
adcl
bound
mov
rcr
int
arpl
int3
sub
xor
adc
push
xor
mov
testb
add
bnd
pop
mov
inc
xor
setbe
cmp
push
test
mov
pop
cmp
clc
mov
jo
jmp
inc
xchg
pop
dec
fcoml
aaa
xor
cld
pop
inc
push
outsb
cmp
out
scas
outsb
nop
loope
js
fsubl
fidivrs
push
es
aam
pusha
orb
inc
xor
jo
imul
jecxz
iret
test
push
cmpsb
stos
addb
adc
shll
out
jg
cmp
mov
leave
int
mov
inc
lret
lret
mov
js
cmc
repz
scas
sbbb
shr
sbb
std
push
mov
nop
cmp
fdivrl
mov
dec
mov
jg
sbb
push
jp
ljmp
pusha
sub
inc
ror
js
mov
dec
xchg
ret
cmp
fisttpl
add
stc
insl
mov
arpl
push
and
xor
call
pop
call
subb
sub
push
cmp
mov
or
std
scas
cli
jg
outsl
cmp
cltd
outsl
push
mov
in
imul
or
lahf
in
out
test
stc
push
mov
lret
movsb
add
sub
dec
insb
or
repnz
mov
fbstp
in
sbb
pop
pop
add
pop
andl
lcall
stc
stos
and
stos
hlt
mov
fstps
and
aas
cmp
test
cmpsb
les
jle
fidivrl
or
ss
inc
adc
gs
push
mov
shll
testl
cmp
scas
cmc
push
lods
int3
mov
adc
jo
fistpll
fbstp
aam
insl
lcall
sbb
mov
push
hlt
sub
jg
icebp
out
insl
xor
test
lcall
fidivl
test
js
mov
adc
mov
lret
lahf
mov
cs
push
inc
fstps
xchg
xlat
and
shl
adc
cmpsl
in
push
xchg
mov
xchg
and
fldenv
push
inc
pop
outsl
popa
jg
cmp
sub
cltd
in
jge
pop
pop
push
push
xchg
or
enter
sub
sbb
into
xor
mov
test
fildll
mov
rolb
sub
or
insb
inc
add
sbb
dec
std
cmp
pop
in
lods
out
ficompl
mov
xchg
faddl
pop
inc
lods
int3
fimull
xor
or
mov
or
xchg
add
ss
bound
out
lods
or
sarb
mov
jne
test
add
frstor
mov
cmc
sbb
mov
or
call
adc
add
sub
leave
cmp
lock
xchg
lds
iret
sahf
pop
add
or
out
and
adc
mov
cmpb
orl
pop
or
cmp
icebp
imul
scas
sbb
imulb
test
and
fmull
data16
pop
cmp
add
xor
cli
push
xchg
or
or
xor
icebp
jnp
fstpt
arpl
test
mov
pop
bound
fisttpl
call
adc
pop
xor
in
push
xor
and
insl
xor
mov
cltd
ret
or
jno
or
pop
nop
inc
jge
test
mov
add
and
int3
sub
xchg
loop
xor
in
push
fdivrl
out
sarb
cmp
cltd
aas
pop
cmp
sahf
sub
jae
insb
out
je
js
jmp
ficoml
adc
fsts
test
jb
nop
and
aam
mov
pop
enter
out
sub
inc
shll
cmpsl
lods
inc
cmp
jmp
xor
fwait
cli
jl
lahf
lcall
in
jmp
xchg
adc
stos
in
push
mov
imul
into
fsubrl
or
sub
dec
push
xchg
movsb
mov
sub
les
xchg
sarb
lret
xor
lcall
testl
mov
int3
dec
mov
sub
sub
addr16
shrb
cmp
mov
or
aam
push
mov
mov
adc
repz
mov
sbb
rclb
push
push
and
and
popf
sub
mov
icebp
cwtl
rcll
dec
cmp
fs
adc
mov
push
mov
sub
insl
xchg
lret
daa
negl
push
mov
jno
and
std
adc
lock
adc
or
fsubrs
xor
inc
pop
rcrb
pop
fiaddl
mov
dec
daa
mov
and
pop
js
xchg
and
ja
outsl
ljmpw
mov
adc
imulb
add
or
push
mov
sbb
and
fsubrs
or
roll
xor
mov
aas
jmp
orl
cld
aaa
movsl
adc
pop
xor
fldcw
lcall
mov
leave
push
inc
ljmp
stos
in
cmpsl
jne
xor
test
cmc
test
out
call
int
pop
cmpsl
lods
mov
push
jl
pop
cmp
mov
insl
pop
cmp
mov
js
jg
lcall
std
punpcklwd
ss
lock
fmull
imul
and
es
jns
ret
push
mov
test
pusha
mov
test
xchg
push
mov
push
pushf
test
jno
jmp
in
cmc
in
or
jp
sbb
sbb
dec
lahf
xlat
xchg
jmp
mov
cmpsb
sub
loope
mov
or
add
das
fnsave
jo
xchg
sub
stos
cltd
loopne
daa
mov
test
bound
push
call
inc
les
cld
push
adc
mov
push
jae
mov
arpl
out
and
mov
xor
sub
xchg
or
add
inc
xchg
jne
flds
fs
jae
inc
mov
sahf
add
into
add
mov
mov
inc
jbe
lds
fdivl
cmp
xchg
insl
jo
ja
xchg
faddl
mov
cmp
and
mov
dec
cwtl
scas
cmp
sahf
dec
lock
dec
test
mov
sub
mov
add
mov
xchg
imul
push
imul
test
lret
dec
imul
sbb
gs
repz
lds
sbbl
mov
jmp
jmp
and
leave
insl
mov
pushf
mov
les
xor
push
and
sub
movb
mov
hlt
cmpsl
mov
js
addb
pop
adc
xlat
sub
sub
push
loope
fs
mov
repnz
les
nop
imul
cmp
fcoms
pop
shrl
cmp
test
rcrb
in
lret
enter
inc
mov
cs
lods
fnstcw
clc
cmp
push
add
mov
cld
add
ljmp
add
aas
rcrb
sarb
aad
and
cmp
aaa
out
repz
mov
push
inc
ljmp
jns
xor
inc
add
jle
adc
in
mov
pop
mov
leave
mov
out
jb
xor
add
cs
adc
fidivl
dec
loop
mull
into
shlb
pop
and
push
test
and
add
mov
mov
std
jns
xchg
xchg
sbb
push
shll
sbb
adc
xlat
mov
cmp
stos
jbe
orb
adc
jno
cmpsb
pop
test
xchg
jg
and
mov
adc
in
jnp
call
pop
sub
cmp
mov
fcmovnb
mov
sub
and
test
gs
rorb
dec
stos
inc
outsl
pop
es
xor
mov
enter
aad
fisttpl
les
xchg
push
cli
mov
out
insb
inc
cmpsl
insb
add
adc
cmp
mov
out
mov
roll
push
push
mov
add
icebp
mov
pusha
data16
and
daa
into
out
dec
pushf
or
add
or
enter
pop
mov
mov
mov
scas
mov
aad
jge
pop
pop
xchg
aad
inc
sahf
dec
jne
or
lcall
jo
icebp
and
cmp
orl
cmc
stos
test
stos
push
fists
and
jge
sub
in
mov
push
cwtl
mov
pop
sbbl
push
push
aam
mov
mov
pop
outsl
das
cwtl
pop
or
stos
sbb
rorl
sbb
out
aaa
and
or
adc
outsb
mov
test
lock
mov
cmp
lds
add
fld
pop
or
lret
lret
in
sbb
in
lcall
repz
scas
or
outsb
iret
mov
insb
sbb
into
pop
out
rorb
movsl
aam
cmp
xchg
ljmp
lret
mov
jnp
in
jne
aaa
jge
sbb
jge
push
int
xor
inc
loop
push
mov
outsl
andb
fnsave
les
call
arpl
sub
icebp
mov
out
or
mov
dec
cltd
cli
lock
mov
rorb
pop
sbb
sub
inc
fstps
movsl
lock
jl
jb
mov
mov
pop
mov
sbb
adc
jmp
mov
sub
or
add
cmc
not
xchg
mov
mov
xchg
fisttpl
leave
rcrb
pop
push
jno
fbld
cs
push
adc
mov
test
jge
sbb
inc
mov
xor
sbb
cmovae
or
fimuls
sub
mov
shr
xchg
jne
sbb
sarb
lods
and
inc
sbb
popf
shll
jns
inc
insl
mov
jb
or
add
push
or
out
pop
mov
sbb
shl
sbbl
movsl
in
fcompl
outsl
pop
jge
fwait
into
sub
sub
adc
repz
jp
xor
jns
and
out
das
xchg
aas
nop
stos
add
test
or
mov
incb
adcb
cmp
pop
push
xchg
test
add
inc
arpl
imul
xchg
and
or
aad
lods
or
xor
sub
push
xor
loopne
push
push
push
push
arpl
or
adc
mull
rcrb
aam
xchg
lods
xor
loop
pop
loop
popa
roll
inc
xor
mov
fmuls
add
mov
mov
mov
dec
lcall
push
push
pop
adc
ficompl
sub
aaa
ljmp
jae
stc
cmpsb
pushf
enter
int3
mov
sbb
jmp
icebp
lret
jecxz
adc
test
in
in
sbb
cli
loope
scas
rcll
test
xor
jl
mov
push
test
sbb
popa
sbb
stos
mov
sub
popa
std
fdivr
out
jge
fisubl
test
cmpl
xchg
scas
enter
adc
pop
popa
loop
xchg
dec
mov
jge
jo
loopne
int3
and
sub
jmp
sub
mov
sbb
pop
dec
sub
push
sbb
xor
sub
ljmp
imul
outsl
adc
push
popa
lret
pop
or
jns
or
jne
cmp
jmp
lds
adc
imul
cmp
jmp
lds
adc
jmp
inc
cltd
jne
cmp
movsb
stc
aad
lds
adc
imul
cmp
jp
pop
jmp
dec
or
inc
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
push
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
mov
lea
movl
push
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
out
idiv
lret
test
aam
fpatan
lcall
push
pop
sub
jp
or
sbb
ljmp
cmpsb
stos
mov
xchg
jbe
xor
pop
sub
cmp
or
sbb
ljmp
cmpsb
stos
mov
xchg
jbe
xor
js
pop
dec
outsl
js
scas
ljmp
out
mov
or
jbe
das
mov
or
mov
dec
mov
mov
inc
lea
pop
sbb
dec
rcrl
ljmp
push
jge
push
cmp
cmpsl
xor
lea
data16
sbb
mov
sub
sbb
lret
push
into
cmpsb
stos
cmpsb
stos
js
dec
pop
outsw
lret
mov
movsl
fdivrs
push
hlt
adc
sbb
push
lods
sbb
daa
sbb
jne
int3
jbe
mov
mov
imul
outsl
into
add
popa
ja
jns
sbb
imul
aaa
into
push
pop
jle
mov
lret
cmpsb
stos
mov
xchg
jbe
inc
dec
push
pop
sub
cmp
or
pop
mov
mov
sti
jecxz
xlat
ljmp
cmp
inc
pop
inc
inc
mov
in
test
loopne
ficoml
das
je
pop
sbb
ss
inc
bound
jg
je
mov
xlat
scas
cmpsb
mov
xchg
jbe
inc
dec
push
pop
sub
cmp
or
sbb
ljmp
cmpsb
stos
mov
xchg
jbe
inc
dec
push
pop
sub
cmp
or
sbb
ljmp
jl
cs
mov
xor
xor
in
inc
loopne
pusha
pop
pop
lock
std
jb
in
pop
out
loopne
mov
das
mov
xchg
fidivrl
xor
lods
mov
pop
cmp
popf
test
loope
pop
popa
int3
mov
sub
or
fstl
sub
dec
frstor
mov
sbb
shll
xchg
xchg
mov
notb
ret
shrl
mov
int
jecxz
push
inc
cltd
movsb
out
rolb
jae
push
into
ja
ja
mov
mov
mov
rolb
cmpb
rcrl
loopne
mov
mov
lods
sub
mov
aas
adc
jnp
int3
xchg
test
add
and
and
cmc
mov
negl
push
loop
mov
je
cwtl
stos
and
sub
lock
in
cld
adc
hlt
cmp
sbb
or
decl
popa
lock
aam
add
xchg
cmpsl
mov
push
mov
cmp
cltd
mov
fiaddl
repnz
nop
lods
cmp
and
adc
scas
fs
inc
pop
rcrl
imul
push
stos
or
jae
fsts
jne
jb
xor
int3
xchg
adc
movntq
adc
int
js
inc
cli
mov
jae
and
push
mov
int
xor
int3
adc
lods
mov
andl
mov
int
sbb
add
jbe
orl
outsb
dec
pusha
cmp
popf
mov
push
cmpsl
dec
push
jne
cmp
sub
cmp
mov
dec
lods
xchg
mov
leave
lds
dec
enter
mov
lds
adc
pusha
popa
fidivl
inc
test
pop
add
movsb
xor
xchg
fldenv
adc
or
sub
adc
xchg
adc
adc
pushf
in
sbb
jne
cld
test
aam
adc
add
pop
push
test
out
adc
aam
cmp
dec
jge
movsb
aam
pop
lret
scas
adc
dec
out
in
gs
cmp
std
repnz
cmp
mov
sbb
or
jg
lret
add
dec
push
dec
test
enter
push
ficoml
call
scas
xchg
mov
loope
nop
mov
sub
mov
insb
lret
sub
shll
fnstcw
push
jg
xor
out
bound
rorl
xor
cltd
mov
or
adc
mov
dec
adc
add
xor
ljmp
xchg
addr16
movsb
xchg
nop
mov
sub
fsubrs
cmp
push
xor
adc
stos
shll
jmp
and
int
jnp
pop
in
jo
and
roll
sub
jne
dec
push
into
jno
cmp
jns
jp
fldenv
gs
xor
cli
inc
and
movsb
outsl
in
or
lss
dec
lds
shl
pop
stc
xchg
mov
push
inc
jns
xchg
mov
aas
mov
jae
in
cmpsb
andb
add
hlt
sub
push
jnp
sub
scas
or
decb
push
mov
aam
or
mov
cs
or
jnp
movsl
pop
push
fsubl
push
dec
repz
fisttps
js
xor
mov
pop
ljmp
add
push
sub
sub
adc
xor
xchg
push
scas
rcrl
push
mov
mov
outsl
shlb
lods
data16
mov
out
pop
ljmp
jns
sub
pop
jnp
dec
lods
loopne
incl
into
cmp
fsts
pop
add
fidivl
mov
cli
push
mov
sahf
mov
les
or
jnp
fsubs
call
pushf
subb
ljmp
test
ret
dec
push
aaa
push
xor
mov
mov
push
push
sbb
sbb
fwait
cmp
filds
mov
mov
add
cmp
inc
and
in
orb
or
lock
aad
jb
pop
lret
in
test
sbb
sbb
jge
cmc
arpl
adc
fdivrl
sbb
jnp
pop
js
icebp
jns
iret
push
int3
js
xchg
icebp
jle
les
sti
dec
icebp
lock
scas
push
outsl
push
imul
in
in
fcomps
inc
push
sbb
sbbb
fs
jns
and
and
arpl
inc
and
mov
jnp
popa
push
pop
jecxz
xchg
roll
sbb
enter
sbb
ret
scas
pop
or
xor
push
push
inc
lock
add
je
repz
cwtd
aam
bound
jb
and
sbb
jbe
sarb
sub
in
jnp
mov
cli
inc
jecxz
pop
daa
jecxz
add
add
jp
outsb
clc
push
into
fbstp
idivl
dec
and
mov
xor
orb
ja
sub
mov
jne
int3
xchg
adc
dec
add
aas
aad
push
adc
ret
inc
mov
pusha
mov
pushf
leave
pop
out
mov
fsubs
and
push
sub
ret
cmp
sbb
push
push
stc
test
or
enter
bound
adcb
push
cmp
into
cld
sub
mov
dec
pop
xor
in
adc
dec
je
xchg
addl
loop
add
jl
or
punpckhwd
ds
dec
mov
out
in
or
jne
inc
or
xchg
or
jbe
mov
pop
xor
shlb
push
sub
stos
int3
add
icebp
fsubp
cmpsb
sub
xcrypt-ecb
cmpsl
dec
xchg
xchg
addl
out
test
push
nop
xor
push
xor
arpl
xchg
test
adc
mov
mov
cmc
jae
sti
scas
std
flds
lcall
sub
inc
cmp
in
and
dec
mov
sarl
pop
xor
test
cmp
int3
movsb
inc
ss
mov
js
popa
fisttps
sahf
mov
in
adc
mov
cmpsl
dec
mov
jl
push
testb
cmp
mov
xor
insl
pop
or
push
mov
pop
xor
push
hlt
inc
pop
mov
lret
imul
sbb
sbb
addl
or
xchg
and
jmp
aas
movsl
aam
test
ret
clc
mov
adc
test
iret
push
stos
lock
mov
mov
je
out
and
xchg
or
das
loop
lock
push
stc
sti
inc
fs
sub
faddp
or
jg
add
inc
data16
jmp
sbb
add
add
jge
or
fcomi
dec
clc
xchg
jae
sahf
add
daa
mov
iret
idivl
and
test
xchg
mov
jmp
and
cwtl
lret
adc
mov
mov
mov
adc
lock
in
push
es
iret
xlat
pop
cmp
nop
pop
mov
leave
adc
repz
xchg
cmpsl
adc
cltd
xor
std
push
repz
ss
je
sub
dec
lret
rep
mov
fidivrl
and
popf
lahf
adc
mov
andb
shll
das
or
xchg
test
push
int3
sub
outsl
mov
and
in
mov
imul
sbb
into
mov
xchg
add
mov
test
les
inc
scas
lock
mov
movsl
push
mov
lds
jnp
xchg
cmp
xchg
cwtl
push
bound
shrl
outsb
imul
aam
mov
sbb
ss
adc
rcrb
lock
dec
scas
popa
int
and
int3
movl
lock
and
arpl
push
sub
mov
dec
xlat
in
cli
jge
inc
inc
js
sbb
or
shrb
cmc
or
aad
dec
imul
pop
fdivp
pushf
cmp
dec
push
mov
xchg
inc
adc
xlat
and
out
subl
push
loopne
test
or
pop
adc
xchg
inc
stos
notl
or
nop
rcrl
stc
jae
xor
mov
orb
lret
jnp
fsubrl
or
sub
lret
mov
pop
mov
sub
fnsave
add
mov
dec
and
sbb
or
into
mov
mov
xchg
add
xchg
out
repnz
push
aad
out
pop
icebp
mov
mov
mov
cwtl
mov
fldenv
mov
mov
mov
sbb
mov
pop
mov
mov
sbb
outsb
and
xchg
jg
add
and
sbbl
into
mulb
and
xchg
stos
in
adc
jmp
jne
jne
leave
xor
mov
rolb
outsb
dec
dec
out
sub
cli
loop
faddl
aaa
cmpsb
xor
shl
add
je
mov
pop
mov
jl
push
push
ss
lahf
jge
xor
push
adc
movsb
add
call
adc
icebp
popf
out
inc
lock
and
xlat
out
inc
sbb
insl
daa
inc
or
mov
push
jle
arpl
out
fisubl
jns
insl
push
fcomps
inc
stc
cmp
or
adc
inc
jg
mov
push
rorl
ret
mov
ror
push
shlb
push
pushf
cmp
push
inc
jle
mov
mov
lret
cmpsb
xchg
or
clc
mov
cmp
mov
inc
mov
mov
clc
cld
mov
and
cmpsl
outsb
mov
pop
pop
or
ja
sub
cmp
and
push
in
xchg
aad
lods
pop
movsb
and
cld
daa
push
imul
jecxz
jae
mov
in
inc
nop
dec
inc
shll
sbb
push
or
pop
mov
pusha
loope
lds
fstl
mov
out
decl
bound
lods
ss
adc
in
fdivr
mov
mov
or
popf
ss
jg
call
mov
adc
pop
inc
inc
add
clc
in
jnp
pushf
lea
add
stc
or
test
xchg
jns
lahf
mov
and
mov
popf
mov
mov
mov
and
jl
cli
fsubrs
lds
add
jo
cmpsl
ret
mov
out
push
out
pop
jbe
fwait
cmp
inc
stc
and
xor
fadds
mov
jecxz
pop
push
pop
lcall
xchg
imul
and
sti
adc
mov
les
xorb
cwtl
sahf
adcl
push
push
shlb
mov
inc
sub
add
imul
xchg
mov
mov
in
adc
data16
nop
mov
sahf
inc
int
mov
cmp
cmp
pop
mov
test
jp
add
xor
and
mov
ret
leave
mov
popf
fucomp
andb
int
sarb
xchg
pop
inc
lcall
pop
pop
das
fistl
sub
pop
int3
xor
mov
out
adc
lret
jg
pop
jg
ss
adc
std
stos
and
xchg
mov
rolb
or
xchg
iret
adc
std
mov
les
shrb
sbb
in
adc
ret
mov
outsl
test
lahf
sahf
mov
mov
ss
lds
sarb
and
push
orb
rorl
subl
add
or
push
mov
bound
sbb
push
mov
cmp
inc
loope
push
pop
inc
lret
pop
adc
xorl
call
pop
ds
add
or
adc
pop
insb
test
and
cmc
scas
fs
mov
pop
jae
push
pop
xchg
dec
call
pop
icebp
outsb
push
stos
push
push
add
nop
out
fdivrs
xor
or
sbb
lea
jg
xor
outsl
decl
in
test
aam
loopne
push
sbb
jmp
repz
mov
std
dec
pop
xor
xor
add
pusha
jl
ljmp
das
shll
pop
push
cmc
test
pop
addr16
or
mov
mov
lahf
movl
xor
sbbl
xchg
ds
add
jne
cmc
sub
insl
shll
mov
imul
push
orl
mov
sub
rolb
out
jo
sbb
and
stc
inc
lahf
mov
jg
out
and
mov
inc
add
or
jo
icebp
loopne,pt
mov
fidivs
inc
in
push
sahf
xchg
out
test
repz
or
int3
jns
add
inc
mov
jecxz
sbb
call
ja
mov
imul
js
fwait
arpl
adc
hlt
adc
adc
or
decl
lcall
and
cmp
js
adc
lret
xchg
push
push
or
or
test
xchg
pop
fsubrl
cmp
xchg
pop
ret
shr
shrb
fbstp
inc
sbb
sti
stos
dec
sarb
inc
out
loopne
je
loopne
loop
jb
idiv
fldenv
gs
pushl
mov
pop
pop
adc
repz
jl
and
ljmp
xlat
xchg
mov
add
mov
cmp
inc
enter
shlb
add
jg
cltd
push
popl
add
movsl
stos
jns
pop
outsl
rcrb
loop
lret
push
or
popf
lock
push
jae
mov
addr16
test
sub
push
into
in
sub
scas
cs
adc
sub
jne
incb
lea
xchg
mov
jae
push
inc
adc
inc
jns
pop
aad
cmp
adc
rcll
sbb
popf
je
mov
adc
xlat
mov
dec
shrl
pop
daa
imul
push
stc
mov
and
xchg
nop
jle
dec
sahf
test
test
cld
sub
cmc
arpl
mov
pop
push
jns
sub
inc
push
add
ror
cmp
hlt
fisttps
in
clc
repnz
or
or
xchg
jmp
mov
lods
and
jno
fnstcw
xchg
xor
popf
add
push
mov
cmp
push
bts
cmpsb
mov
lret
icebp
push
pop
add
sahf
cltd
sub
adc
cmp
js
mov
mov
add
cmp
stc
lods
jns
out
into
lods
mov
ret
movsb
sub
aad
and
mov
adc
ret
and
sub
fwait
and
xor
jg
pusha
and
leave
adc
mov
orb
out
movl
icebp
scas
or
pop
push
jbe
cmp
push
insl
cmp
add
xor
push
dec
mov
or
ljmp
testb
fmuls
jne
bound
pop
out
addr16
push
in
adc
xor
cld
repz
or
stos
inc
jmp
mov
lods
push
push
push
mov
sub
push
xchg
and
inc
es
push
sub
imul
js
sub
push
mov
repnz
loop
rcll
lcall
fcompl
ret
mov
sub
xchg
mov
lcall
add
adc
mov
scas
jns
sbb
inc
pushf
fisttpl
pop
push
inc
jne
cltd
test
les
cmpsl
inc
inc
dec
pop
sbb
out
inc
mov
es
or
dec
mov
or
das
add
and
mov
and
inc
xchg
aas
xor
dec
lods
jmp
int
je
cmp
or
aad
add
pop
inc
cmpsl
cmpsb
lock
mov
and
icebp
inc
sbb
lret
stc
fisttpl
fildl
rcl
xor
inc
mov
push
aam
lret
or
sub
aad
add
outsb
dec
loop
inc
and
fimull
ja
xchg
inc
rcll
xor
jo
cmp
sbb
rcrb
sub
std
add
mov
data16
insb
and
js
aaa
inc
mov
sub
cmpsb
mov
pushf
adc
sub
or
inc
jmp
dec
mov
lock
sub
in
xor
push
jecxz
fdivrl
add
jmp
aas
adc
push
adc
leave
out
test
ret
ss
pop
lods
mov
pop
jl
fildll
ret
sbb
movsl
and
in
fidivrs
dec
mov
icebp
movsl
data16
test
add
cmp
out
mov
loopne
push
mov
leave
jnp
xor
sbb
test
lods
jno
lret
adc
push
out
je
cmp
jp
sub
xchg
xor
adc
dec
mov
mov
je
or
ret
sbb
push
nop
adc
hlt
jbe
xchg
mov
jp
mov
jmp
sub
push
outsl
insl
ret
jne
push
stc
stos
xchg
mov
inc
push
out
jno
sbb
jnp
es
xlat
mov
mov
lret
mov
lods
in
stc
in
or
in
out
sbb
cmp
ss
out
outsl
xlat
lret
test
jbe
cltd
or
sahf
mov
fimull
gs
or
cmp
test
and
and
orl
mov
push
inc
sbb
push
cmc
jno
fs
xor
addb
pop
out
push
lock
arpl
shll
xor
aaa
orb
jl
pop
gs
loope
repnz
xor
leave
sub
mov
rcll
pop
out
mov
pop
das
ret
mov
push
fs
repz
dec
sbb
insb
lds
sub
xchg
fstps
cmpsl
push
outsb
cs
dec
dec
pop
mov
sbb
addb
addr16
inc
add
xor
xchg
jns
in
fnstcw
pop
leave
movsl
add
pop
aam
sbb
cmp
pop
pop
add
loop
inc
jno
out
sub
imul
adc
xchg
adc
jns
nop
mov
cmp
inc
pop
dec
sahf
in
into
test
lret
sbb
jl
and
push
stos
pop
outsl
mov
cli
xor
loope
lahf
iret
outsl
pop
out
xchg
mov
out
pop
lcall
push
sub
loopne
jno
push
mov
mov
je
addr16
addr16
outsl
xorl
movsl
loope
icebp
sbbl
test
outsb
frstor
sti
fadds
add
add
xor
or
cmpsb
xchg
adc
dec
movsb
dec
mov
fstl
inc
lock
ss
lods
repz
pop
mov
test
pop
push
push
or
add
jne
in
mov
ret
add
sbb
sbb
adc
les
push
mov
mov
push
lds
adc
add
xor
popa
push
pusha
dec
mov
fnstcw
mov
jp
inc
mov
jg
loop
leave
or
lret
or
xchg
jmp
shrl
pop
dec
test
sbb
and
mov
dec
and
mov
push
dec
lret
xchg
outsl
insb
xlat
xchg
stc
cld
jp
mov
xchg
pop
fdivl
sub
add
pop
add
mov
dec
mov
xor
sti
aam
testl
mov
fs
loop
mov
sub
adc
push
vrcpps
jge
jecxz
out
sbb
jae
mov
leave
mov
aam
and
xchg
stos
arpl
or
pop
mov
jns
mov
or
sbb
mov
push
add
cltd
jge
lahf
popa
mov
mov
ret
dec
cli
cmp
mov
mov
out
push
mov
dec
sbb
adc
repz
push
xlat
xor
stos
loope
cmc
xchg
dec
sti
mov
sub
sub
aad
lods
add
sub
mov
add
adc
in
add
jnp
scas
or
ja
js
js
push
out
cwtl
sub
scas
mov
pop
push
icebp
ljmp
imulb
fsubs
aaa
fldt
dec
das
int
divb
popf
int3
insl
les
sub
cmp
lret
movsl
mov
mov
pop
jns
js
mov
xor
jnp
in
fcom
inc
xchg
mov
scas
and
bound
and
jne
add
sti
popa
sbb
into
fdivp
mov
rcrl
das
test
xchg
push
int3
cs
push
cld
xchg
push
xchg
lds
and
dec
push
call
in
incb
test
push
dec
adc
out
sbb
cmp
lahf
repnz
aad
les
cmc
mov
scas
and
adc
je
bswap
pop
mov
lret
inc
rol
sub
cmpsb
xchg
pop
mov
ret
mov
aam
addb
or
icebp
sti
pop
xor
repnz
fwait
jae
fsubl
dec
in
push
mov
mov
stos
aam
dec
xchg
xor
shrl
pop
cmpsb
push
pusha
xchg
push
pop
adc
and
es
xchg
lods
cld
pop
and
inc
cmp
xchg
inc
ja
sbb
pop
push
mov
rclb
push
push
mov
mov
xchg
out
movsb
test
sarl
adc
mov
mov
jo
lahf
fistpll
sub
inc
scas
inc
mov
aam
repnz
je
clc
cwtl
push
insl
sub
pop
addb
mov
fwait
adc
sub
in
xchg
inc
cmp
dec
test
fimull
out
mov
push
push
ror
jmp
lods
mov
lods
pop
int
dec
imul
or
push
dec
cmp
dec
imul
cmpsb
test
mov
cmp
sbbb
cmpsl
dec
sbb
sub
sahf
rcll
cmp
jg
push
mov
push
and
add
test
dec
sub
in
and
pop
xchg
aad
push
gs
mov
pop
dec
xor
ret
jmp
pop
inc
ljmp
pop
stos
mov
mov
lods
add
cs
mov
cmp
in
cli
mov
cmp
mov
dec
pop
test
es
in
and
or
imul
movsb
insl
fs
sbb
cmc
pop
mov
int
std
scas
in
pop
repnz
sub
inc
or
cmp
mov
stos
mov
xchg
jbe
inc
dec
push
pop
sub
cmp
or
sbb
ljmp
cmpsb
stos
mov
xchg
jbe
inc
dec
push
pop
sub
cmp
or
sbb
out
idiv
lret
cmpsb
stos
mov
xchg
jbe
inc
dec
push
pop
sub
cmp
or
sbb
ljmp
cmpsb
stos
mov
xchg
xchg
gs
jbe
in
dec
push
sub
stc
cmc
jmp
int3
int3
stos
sarl
daa
movsb
mov
movsb
test
xchg
sub
sbb
add
dec
and
mov
cmc
ljmp
fwait
sub
push
or
jne
sub
dec
and
mov
sub
cli
scas
fiaddl
data16
pop
push
adc
push
cmc
sbb
nop
and
and
cmc
stos
andl
sahf
fnstsw
sbb
ficompl
loop
xor
xchg
or
pop
daa
dec
xlat
mov
in
xchg
adc
sbb
lods
mov
lea
insb
inc
push
test
sub
or
cmp
pop
jmp
stos
lds
cmc
int
out
movsl
dec
fidivrl
cmpsl
sarb
xchg
adc
cwtl
leave
fisubrl
push
adc
push
or
fs
dec
ret
add
outsl
test
sbb
mov
dec
nop
adc
inc
aad
mov
push
lret
mov
pop
cmp
push
bswap
ficompl
dec
mov
cmc
ljmp
daa
sub
std
or
dec
push
jp
dec
cmp
into
mov
ljmp
repnz
pop
and
imul
sub
pop
iret
sbb
out
xchg
negb
mov
mov
or
sbb
dec
adc
es
das
inc
iret
mov
xor
cmpsb
leave
cli
xchg
lret
mov
inc
cmp
sbb
add
pop
xor
mov
lcall
movsl
fidivl
or
jne
add
pop
xor
pop
cwtl
mov
adc
mov
gs
xchg
icebp
cs
popf
adc
std
mov
decb
ret
leave
push
cs
call
xchg
out
xchg
mov
aam
or
mov
sti
pop
jb
arpl
push
pop
xchg
mov
jo
ss
push
mov
xor
adc
pop
out
ds
jge
jno
mov
out
repz
xchg
inc
adc
cmp
pusha
mov
inc
jns
out
mov
jge
loope
pusha
in
leave
or
mov
adc
daa
xchg
push
sbb
icebp
mov
aas
pop
lret
test
dec
inc
or
lahf
push
jp
sub
cltd
stc
mov
cmpl
or
test
cli
pushf
cmp
fmull
test
test
cmp
call
sub
aam
repz
divb
sub
repnz
aam
mov
pop
clc
sub
aad
and
insb
cwtl
inc
lea
sub
and
std
xor
ss
sub
adc
fstps
add
xchg
xchg
negb
fcompl
jae
stc
sbb
or
mov
out
pop
out
dec
pop
lcall
push
or
sub
jns
or
sub
xlat
imul
xchg
aam
pop
add
fidivl
mov
inc
push
in
inc
mov
fldl
sub
js
pop
xchg
rclb
pop
nop
daa
pop
inc
mov
mov
jge
pop
cmc
mov
add
push
mov
inc
or
mov
in
adc
in
mov
ret
test
aam
jge
clc
test
fwait
mov
push
push
xchg
cwtl
mov
testb
mov
scas
dec
out
push
inc
dec
scas
outsb
mov
fcmovu
and
push
testl
cmp
xor
sub
scas
int
jecxz
add
call
lock
cs
test
popl
pop
sahf
insl
jb
inc
pushf
fs
add
sbb
loop
shr
arpl
repnz
sub
movsb
sbb
and
rorb
clc
sbb
stos
push
mov
inc
imul
test
and
push
and
dec
pop
leave
out
movlps
push
jno
imul
adc
lods
js
cmp
shlb
inc
and
call
ret
xor
push
int3
inc
pushf
inc
jecxz
inc
scas
sub
cmp
in
stc
leave
mov
fistl
mov
imulb
out
xlat
xor
xorb
and
jnp
mov
push
outsb
test
les
dec
sbb
movsl
pop
adcb
jae
cmp
sbbb
mov
test
bound
test
cmp
test
outsb
push
stc
inc
sbb
hlt
mov
stc
pop
jmp
loop
push
hlt
adc
adc
dec
outsb
push
movsb
loopne
push
inc
push
xor
imul
mov
and
mov
pushf
xchg
out
lods
push
dec
scas
dec
cwtl
cli
fidivrs
push
fnsave
pop
cmp
sub
lret
insl
mov
sarb
insl
cmp
and
sti
mov
lret
aas
std
dec
dec
enter
out
hlt
je
loopne
cmp
mov
aaa
hlt
mov
sbb
cmp
ficoml
pop
repz
inc
jecxz
fisubrs
jnp
jp
cs
mov
xchg
pop
and
jae
fmulp
add
fwait
pushf
push
mov
inc
push
movsb
inc
hlt
inc
lcall
sbb
sbb
fsubl
movsb
pop
jbe
pop
pop
add
cmp
addl
add
dec
or
and
ds
mov
les
mov
sub
cmp
xchg
cs
out
ret
mov
inc
out
and
rcl
mov
mov
loope
add
mov
cltd
add
push
mov
jecxz
or
loop
data16
dec
mov
sbb
inc
mov
ss
jge
mov
xchg
rorl
add
shl
hlt
and
lret
lret
and
push
icebp
imul
pop
add
push
out
sub
sub
xchg
icebp
sbb
stos
test
rol
sub
jmp
rol
lret
dec
call
xchg
adc
stos
pop
std
inc
push
arpl
mov
loope
cwtl
xor
dec
arpl
outsb
pop
mov
icebp
mov
mov
mov
js
inc
sarb
clc
mov
data16
scas
outsl
cmp
nop
out
cmp
cmc
cli
mov
outsb
inc
mov
xor
hlt
add
jbe
pop
inc
sbb
mov
daa
lods
daa
mov
mov
jmp
dec
add
lahf
fcoms
iret
jl
sbbl
fbstp
incl
xchg
stos
stos
mov
pushf
ficoms
movsb
fisubl
mov
arpl
loopne
cli
shll
add
sub
popa
mov
fldl2e
mov
xchg
ja
lods
sti
shrb
fadd
test
pop
sub
mov
shll
ret
add
inc
jle
clc
push
insb
and
unpckhps
iret
and
cmp
xchg
sub
enter
in
xchg
xor
addr16
sti
fdivl
or
cmp
sti
dec
push
jg
lahf
pop
mov
cli
jbe
push
ss
jmp
sbb
pop
xchg
inc
mov
sti
push
mov
dec
or
xchg
dec
inc
std
and
imul
xor
xchg
mov
pop
jb
jecxz
ret
inc
ljmp
xlat
mov
outsl
jg
gs
pusha
in
add
aas
sub
pushf
stos
push
push
push
pop
gs
mov
stos
dec
in
shlb
jne
les
push
lahf
pop
mov
cpuid
mov
cmp
scas
clc
and
or
and
mov
enter
and
inc
fistpll
add
lods
arpl
push
stos
xchg
jo
xor
pop
popa
das
mov
dec
movsb
shll
push
iret
scas
and
repz
xchg
mov
outsb
mov
jl
out
int3
fwait
les
add
sahf
mov
push
jge
ljmp
in
cmp
inc
fisttpl
mov
cld
push
mov
adc
in
mov
dec
ss
out
ds
dec
inc
jnp
rcrl
xchg
pop
or
lahf
rorl
adc
clc
and
dec
outsb
pop
sub
mov
lret
pop
in
jb
inc
sti
clc
dec
lods
or
mov
push
mov
in
aam
inc
and
dec
or
sub
cmp
loopne
mov
js
xchg
sbb
xchg
inc
in
sahf
rcll
nop
leave
or
cmp
push
inc
sbb
cmp
xor
daa
shlb
cmpl
inc
popf
push
movsb
lret
fimuls
adc
xorb
fcmovbe
add
add
mov
jle
outsb
lock
xlat
push
stos
xchg
out
sbb
mov
mov
cmp
pop
nop
xor
movsl
xor
jecxz
ret
sub
stc
roll
pop
or
daa
or
mov
daa
pop
rcl
sub
ds
jle
mov
lret
push
test
add
jp
jne
jne
adc
jecxz
cmpsb
loope,pn
testb
sub
pop
pop
xchg
pop
daa
es
aaa
daa
pop
cmp
repnz
xchg
mov
loopne
xor
or
lret
push
jge
outsb
sub
inc
adc
sahf
mov
xor
imul
mov
fstps
stc
adc
pop
jecxz
jecxz
push
call
cmp
sahf
pop
rcll
iret
test
sahf
pop
test
lret
insb
mov
jl
or
adc
jecxz
adc
jg
addr16
pop
sbb
dec
outsl
mov
push
daa
inc
call
cmp
das
out
test
mov
mov
dec
pop
or
sbb
aas
sar
fwait
das
test
in
or
mov
mov
jb
test
fisubrs
lret
mov
imul
mov
cmp
jo
cli
cltd
push
rcrl
push
stc
sub
in
dec
add
bound
sbb
stc
push
cltd
sti
fldcw
cmpsb
jae
jecxz
daa
add
hlt
sub
jo
pop
lds
rcrl
hlt
xor
mov
out
imul
ljmp
mov
mov
cmp
xchg
or
push
inc
movb
subl
and
dec
push
pop
pop
mov
sub
fsubrl
add
cltd
push
inc
pop
mov
aam
cwtl
pushf
sub
or
sub
inc
add
std
fsubrs
pusha
mov
push
sub
push
std
or
insl
dec
sarl
push
sbb
cmp
mov
cmpxchg
xchg
sti
test
sbb
adc
push
je
mov
call
add
adc
imul
inc
in
mov
mov
outsl
pop
daa
dec
mov
xchg
sub
xchg
into
cmp
sbb
ret
fmuls
sti
popa
iret
mov
inc
sbb
fldl
jle
test
lea
or
adc
push
xorb
inc
test
rorl
in
inc
ja
jp
push
js
or
adc
movsb
bound
or
mov
jne
pop
jg
addl
cmp
mov
movsl
mov
sahf
rclb
jbe
iret
mov
mov
jmp
and
roll
sub
cmp
in
or
mov
loop
ljmp
sub
sahf
pop
pop
jmp
in
mov
imul
adc
ficoml
jge
sahf
pop
pop
mov
cmpl
sub
in
into
cltd
les
mov
jge
and
je
filds
in
pop
jp
mov
out
or
mov
xchg
cli
cli
lret
popa
sub
xor
mov
dec
repnz
xlat
pop
imul
nop
ret
push
inc
fwait
hlt
movsl
mov
dec
and
lock
in
repnz
pop
shlb
test
outsl
cltd
nop
push
test
loopne
frstor
jmp
int
pop
xchg
or
ror
jle
push
pop
into
pop
int3
fcompl
ret
add
lea
in
jb
lret
pusha
sbb
ret
data16
dec
add
icebp
pop
sbb
adc
in
jbe
push
or
arpl
mov
sbb
rcrl
mov
push
in
aad
imull
gs
hlt
leave
pop
ljmp
cwtl
hlt
fdivs
add
sub
fcoms
xchg
or
in
aaa
xchg
sub
cld
and
mov
addr16
pushf
iret
xchg
xor
movl
cli
rcrl
aas
jo
popf
scas
push
pushf
pop
mov
mov
pusha
fwait
mov
out
shll
push
push
out
mov
out
inc
rorb
jnp
cli
fsubr
cmp
xchg
dec
sbb
or
sub
pop
push
or
cmp
fldenv
add
arpl
sbb
inc
push
iret
decl
out
push
test
cmpsl
test
mov
rolb
jmp
sbb
clc
mov
mov
jecxz
fisubrl
shrb
adc
push
nop
sbb
out
lcall
sbb
ficoms
fcom
jp
stos
bound
jle
xchg
xchg
arpl
cmpsb
loop
stc
data16
je
inc
faddp
dec
jmp
out
fsubs
pop
sub
test
sbb
mov
lods
jno
ss
lock
sub
jge
jne
mov
shl
clc
inc
xchg
dec
or
cwtl
xchg
jae
nop
sbb
add
scas
sub
mov
in
adc
loopne
aaa
shl
add
hlt
jb
cli
cmp
outsb
outsb
dec
stos
mov
push
stos
ja
xchg
jl
mov
fwait
jmp
test
cmp
icebp
jnp
out
test
into
jle
xor
inc
bound
sub
jmp
mov
jp
roll
test
movsb
xchg
daa
pop
mov
mov
popa
mov
push
aam
idiv
sbb
adc
xchg
lcall
arpl
std
aaa
scas
ljmp
daa
sbb
icebp
mov
daa
aaa
icebp
arpl
push
clc
and
mov
lea
ficoms
push
lahf
imul
jecxz
dec
push
insb
fldcw
mov
lret
mov
stos
mov
mov
xor
mov
stos
mov
out
pop
and
int
sbb
add
rcll
xchg
imul
js
xor
ficoml
pop
cwtl
enter
pop
test
into
adc
les
jbe
cltd
pop
and
xlat
shl
out
ljmp
sbb
and
pushf
hlt
loop
sbb
cmp
clc
or
jl
testl
cmpsl
pop
in
loope
icebp
jae
add
sbb
jmp
aaa
add
sbb
pushf
mov
push
into
std
push
pop
jge
cmc
cmp
sbb
ss
or
andl
push
push
repz
mov
pusha
jl
jbe
fs
xchg
lods
mov
aas
stos
into
imul
pop
movsl
bound
mov
cld
arpl
and
popf
ja
xor
outsl
lock
fwait
mov
in
xor
stos
xchg
and
jmp
mov
mov
add
inc
cmp
jecxz
inc
lret
inc
adc
or
inc
test
mov
jb
pushl
cs
aam
ret
mov
icebp
push
mov
andl
inc
iret
xchg
sub
cmp
jae
aam
lcall
pop
xchg
leave
stos
dec
dec
jns
sbb
push
mov
mov
repz
inc
push
or
push
jae
pop
pop
mov
xchg
dec
inc
jl
mov
lret
mov
xchg
outsb
pop
jb
pop
mov
aaa
sbb
mov
shl
add
mov
jmp
js
sbb
inc
adc
jmp
in
in
xchg
out
push
repnz
iret
push
push
sti
lcall
sub
in
lds
pop
loop
leave
fbld
xor
jno
in
movsb
jne
lods
imul
push
outsl
xor
cmpsl
aaa
das
out
aam
or
stc
push
sbb
sbb
sub
ja
hlt
scas
sahf
push
mov
adc
shll
pop
in
fistpl
push
jle
test
cmp
dec
xor
inc
push
lahf
dec
ficompl
add
inc
jae
sub
arpl
lcall
mov
in
in
xor
lods
and
imul
mov
iret
scas
pop
lods
pop
pop
int3
fistpll
fmuls
pop
jge
mov
or
push
nop
mov
add
shll
test
lahf
sarb
mov
inc
push
jae
dec
jg
push
mov
js
inc
mov
ja
dec
or
dec
dec
outsl
jo
push
movsl
jp
repz
mov
xchg
lret
pop
xor
pop
dec
test
cmp
sub
popa
mov
imul
jo
jnp
imul
rcl
xor
pop
not
enter
popa
hlt
cmp
popf
xor
scas
popf
je
adc
pop
sub
rol
call
andl
sahf
out
xorl
push
push
jl
shrl
mov
xchg
mov
push
jge
or
hlt
xor
mov
push
aaa
pop
sbb
dec
jmp
push
shl
xor
in
rolb
and
sbb
test
or
sub
ja
mov
fimull
dec
push
xchg
xchg
lds
sti
push
repnz
jbe
cmp
push
xlat
lock
cmpsb
lods
jle
xchg
pusha
or
pop
add
cmp
out
shll
shl
mov
jae
cs
push
jecxz
fdivs
cld
inc
arpl
xor
cmp
adc
inc
movsl
mov
sub
xchg
fidivs
imulb
mov
mov
popf
xor
jmp
mov
mov
cmpsb
xchg
mov
dec
mov
daa
jne
push
out
out
or
mov
pushf
cmp
push
jecxz
cltd
mov
sahf
adc
sbb
xor
mov
dec
dec
jnp
je
movsb
jno
imul
dec
fiaddl
dec
pop
or
mov
arpl
pop
scas
sbb
imul
cmp
jp
mov
popf
pop
mov
dec
push
ds
imul
lea
sub
inc
mov
mov
lcall
hlt
scas
loop
aam
fidivrs
lods
scas
test
cmpsl
leave
scas
mov
into
mov
fldcw
xor
inc
or
addb
mov
lds
mov
loopne
mov
into
add
cmp
rcrb
sbb
mov
xchg
mov
mov
mov
jbe
sahf
adc
clc
filds
add
aaa
dec
dec
or
pop
fdivs
fwait
pushf
aaa
mov
call
mov
rep
loopne
test
fisubs
or
lods
sahf
gs
dec
pushf
pop
mov
and
cmp
faddl
ss
inc
rorl
insb
dec
fwait
adc
daa
cmp
in
pop
mov
mov
or
enter
dec
loopne
dec
cld
sub
cld
mov
pop
cmp
lods
out
push
ja
gs
mov
cmp
push
adcb
mov
sbb
adc
and
test
rorb
jge
xorl
stos
xchg
sbb
and
mov
sarl
hlt
mov
andl
mov
sbb
inc
loop
icebp
sub
adc
rcrb
rcl
xor
repnz
fisttps
idivb
inc
and
pop
lods
popa
mov
jns
jno
mov
iret
or
jmp
pop
outsl
mov
je
lret
fs
dec
lock
fsubrl
push
jae
lcall
cld
add
neg
push
in
out
push
mov
add
cmc
sti
xor
dec
pop
pop
ret
add
xchg
push
jg
add
push
rclb
aas
jno
inc
inc
mov
arpl
es
xchg
mov
adc
insb
inc
cmp
mov
xchg
in
arpl
mov
and
pop
inc
mov
std
movsb
fildll
push
jge
fwait
adc
insb
repz
mov
mov
mov
dec
repnz
mov
ja
adc
pop
mov
lcall
inc
flds
aas
repnz
or
sub
stos
stc
fs
cmp
test
icebp
inc
out
jbe
lret
jo
fcomps
sub
inc
pop
int
ret
or
repnz
or
shll
lcall
pop
fs
xchg
shl
fdivrl
dec
pop
cmpb
jne
int3
xchg
inc
mov
clc
xchg
and
xchg
dec
push
cltd
test
gs
jecxz
mov
in
lock
sarl
and
fildll
cmp
mov
out
push
pop
arpl
jbe
aad
xor
xchg
ss
notl
pop
scas
lahf
push
insb
inc
jb
and
test
ret
sub
cmpsb
out
jnp
push
lds
fnstcw
pop
jp
pop
xor
outsl
and
sahf
mov
xor
in
fildl
std
mulb
push
cs
or
aas
shll
jle
mov
mov
ja
es
repnz
aaa
test
rolb
das
jns
les
xor
lcall
fcoml
clc
jo
sti
add
mov
jb
pop
mov
jns
sbb
sbb
mov
push
mov
push
out
cmpsl
xchg
dec
subl
mov
mov
cmp
loope
sti
lss
bound
insb
mov
movsl
iret
or
ljmp
xor
mov
dec
fimuls
fwait
xlat
mov
adc
rep
jae
fstl
xchg
out
enter
push
inc
xchg
adc
or
fbld
dec
pop
fwait
dec
xchg
mov
jge
clc
pop
sbb
or
push
inc
sub
dec
cmpsb
ret
xor
jae
sub
pop
inc
jns
sbb
mov
fidivl
sbb
mov
inc
repnz
mov
test
or
stos
call
cwtl
in
push
dec
mov
ss
and
out
repz
adc
sub
mov
mov
xchg
loope
mov
adcb
popf
pop
aad
fistps
fmulp
inc
jnp
xchg
dec
pop
roll
jge
popf
stc
testb
xor
push
daa
cmp
sahf
andl
dec
int
pop
jp
fcmovb
pop
pushf
insb
shll
add
sub
dec
sub
sti
insb
sbb
lret
outsb
mov
xchg
push
add
add
test
inc
sti
inc
sub
xor
repz
adc
push
sub
loope
mov
fisubrs
or
popf
mov
jp
push
ja
push
inc
sbb
sub
mov
aam
sub
popa
enter
and
mov
dec
imul
call
mov
imul
aaa
inc
push
mov
cmp
sub
mov
push
lret
xchg
push
pop
popa
add
lods
fs
sbb
jg
sti
pop
in
pop
jg
jns
xor
sbb
in
xor
or
xor
jns
cmp
stos
pop
lahf
and
out
lret
pop
stc
xor
mov
or
inc
mov
jno
mov
notl
js
test
lcall
xchg
in
dec
sub
repnz
loop
adc
adc
jmp
ljmp
jno
add
xlat
ret
bnd
sbb
pop
lock
sbb
push
xor
cmp
aad
xor
add
add
je
setg
and
ss
mov
mov
popa
test
and
push
insb
cmp
js
mov
xchg
scas
arpl
out
cmp
insl
push
mov
fisttps
jmp
adc
jmp
sub
push
aas
or
adc
sbb
pusha
jl
mov
out
hlt
add
out
cmpb
ds
mov
cwtl
add
push
mov
movsl
mov
leave
aas
adc
daa
or
push
cmp
daa
mov
adc
ret
xor
insl
scas
mov
lock
jo
jg
fildll
xchg
rcrb
sbb
xor
cmp
scas
adc
adc
inc
jl
jecxz
lret
xor
or
pop
imul
test
lahf
ds
mov
out
push
rcrl
xchg
aad
loopne
cmc
ljmp
mov
inc
cmp
sbb
add
pop
xor
mov
lcall
movsl
fidivl
or
jne
add
pop
xor
or
lcall
mov
cmp
sbb
jp
dec
sub
shrl
add
xchg
lret
jne
mov
sbb
sbb
insl
cmp
dec
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
ret
aas
repz
pop
mov
lock
outsl
int3
pop
push
loope
mov
adc
inc
pushl
iret
and
les
ret
aas
ret
pavgw
xchg
outsl
cmpl
mov
mov
adc
and
lret
aas
jmp
sti
pop
mov
jg
dec
mov
push
scas
dec
pushf
pop
std
pop
cmp
dec
test
mov
ret
jbe
lea
fwait
dec
jg
add
aam
dec
mov
out
stos
out
cmp
sarl
repz
repz
push
lcall
sti
scas
out
push
ss
scas
mov
ret
xor
addr16
mov
mov
iret
in
cli
inc
lcall
push
sbb
daa
push
jle
and
sub
or
jg
out
push
add
lret
pop
cmp
stos
pop
xchg
xchg
ret
out
mulb
push
mov
fwait
mov
iret
xor
outsb
pop
outsb
or
lods
mov
bound
ror
and
adc
ret
aas
repz
pop
subl
mov
mov
mov
or
sbb
xor
cmp
xchg
ja
push
mov
into
or
inc
mov
jg
addr16
ret
pop
xchg
push
pop
out
in
xor
es
push
in
fcoml
cli
jbe
jo
inc
cltd
and
xchg
jge
jp
inc
cmpl
mov
mov
adc
add
xor
and
shrl
ret
aas
repz
pop
xchg
outsl
cmpl
mov
mov
adc
add
xor
and
shrl
add
loop
fnstsw
lea
push
dec
add
xor
push
inc
mov
lods
fidivrl
sub
test
xorl
cmp
pop
sbb
and
mov
push
call
mov
fcomip
in
xchg
jnp
add
enter
lret
mov
xchg
stos
adc
add
dec
dec
pop
push
stc
xor
add
add
pop
pop
je
or
fcmovne
repz
sbb
jl
push
mov
mov
mov
xchg
jg
sahf
das
mov
outsl
sub
adc
dec
out
sbbl
xor
fnclex
sub
jbe
jle
fs
pop
inc
andb
jae
outsb
mull
in
mov
push
subb
or
dec
into
pop
cwtl
sbb
scas
ucomiss
sub
push
cs
or
sbb
mov
push
addr16
xchg
cmp
mov
and
cmc
or
cld
mov
jno
or
fidivl
or
cs
xchg
sbb
adc
stc
dec
hlt
test
xchg
mov
pop
lcall
imul
mov
mov
add
and
loopne
dec
push
adc
mov
or
or
cli
loope
mov
inc
int
push
fwait
pushf
out
outsl
adc
clc
or
out
enter
xchg
dec
push
in
jne
divl
fsubrs
out
int
or
inc
movsl
xchg
mov
xor
iret
aam
int3
cli
int
xchg
lds
add
aad
movb
dec
push
mov
xor
je
mov
inc
scas
in
sub
sbb
imul
stc
sub
sbb
add
jmp
add
and
sub
mov
and
sbb
testl
add
jns
add
jp
adc
jp
push
inc
jge
add
stos
imulb
mov
sub
daa
cmp
mov
or
icebp
xchg
pop
in
jl
fidivl
xchg
jmp
pop
bound
sub
ret
int
mov
jecxz
out
fsubp
or
test
out
xor
insl
in
test
lret
iret
push
adc
in
dec
sub
pop
lods
lret
imulb
cltd
jl
outsb
or
fmuls
stos
xchg
inc
sarb
cli
sbbb
insl
testl
mov
mov
mov
enter
add
inc
addb
lcall
inc
jmp
inc
push
cmpl
cli
mov
add
scas
gs
subw
xchg
rclb
rolb
dec
aad
fs
bound
push
mov
lret
push
xchg
inc
push
add
jb
sub
xor
push
adc
jecxz
sbb
push
das
and
inc
xor
and
and
xchg
mov
test
sbb
in
test
jecxz
and
inc
mov
pop
cmp
lods
push
or
jg
js
add
inc
xchg
mov
shll
jp
into
add
ss
les
xchg
add
jo
repnz
push
mov
lods
scas
or
rcl
out
mov
and
sbb
punpckhbw
xor
sub
push
inc
pop
arpl
shll
jg
jnp
cmp
pop
iret
mov
inc
push
pop
repnz
sbb
mov
mov
jno
adc
mov
mov
loop
out
das
in
xchg
push
pusha
adc
call
test
test
and
adc
ret
push
pop
js
pusha
sub
aad
xor
xcrypt-ctr
cmpsl
sbb
lea
jae
loop
movsb
push
je
cmp
in
jo
jmp
vpunpckhdq
add
dec
pop
mov
xor
rolb
xchg
sbbb
stc
push
roll
xor
cs
xchg
stc
and
cli
insl
in
jb
pop
xor
fisttpll
loop
inc
dec
in
int3
cmpxchg
sbb
inc
lods
fimull
pop
jmp
or
enter
push
and
mov
call
adc
dec
xchg
pop
xchg
lret
cli
js
lcall
dec
push
jne
lcall
cmc
cmp
sbb
aaa
add
jge
xchg
jle
jae
ja
loope
pop
aad
mov
arpl
and
pop
sbb
or
mov
cmc
jo
imul
jae
mov
enter
mov
imul
pop
decl
cmp
lea
or
aad
push
stc
cltd
out
inc
int
aas
scas
sub
addr16
aad
sahf
cs
inc
sbb
into
stc
ret
cmp
call
inc
cmpsl
inc
in
pop
lret
push
test
push
scas
lahf
dec
dec
xchg
loopne
mov
jecxz
mov
ret
dec
mov
iret
push
or
fsts
lods
scas
pop
movsl
sub
fwait
fwait
inc
repz
shll
jb
out
add
loopne
int
mov
adc
lret
call
std
mov
rcrb
jae
aam
iret
add
xor
test
stos
mov
push
mov
out
cwtl
xchg
in
mov
push
sbb
add
cmp
idivb
xchg
inc
dec
repnz
stc
cwtl
mov
pop
xor
mov
pop
or
inc
add
lret
shrd
xchg
pop
cwtl
push
fmul
xlat
push
or
jne
gs
stos
sub
cs
xchg
in
fistl
in
sarb
cs
sub
mov
outsb
fidivrs
mov
inc
fnstcw
imul
arpl
mov
push
cli
sub
jle
push
inc
push
mov
xor
dec
pop
imul
test
js
loop
bound
or
stos
jne
mov
push
mov
add
adc
pushf
mov
dec
loope
sub
pop
dec
fisttps
push
ret
sbbb
pop
mov
mov
push
fdivl
int
or
and
movsb
mov
jmp
pop
imul
dec
lods
mov
mov
js
jg
cwtl
jb
or
mov
sbb
addr16
add
pop
dec
dec
insl
mov
or
push
dec
inc
loop
aad
mov
les
or
add
push
mov
test
repnz
jg
xlat
and
fwait
xor
dec
fists
inc
out
xor
scas
cld
dec
iret
shrl
adcl
and
push
fisubrl
aaa
data16
mov
pop
sarl
negl
dec
adc
pop
inc
adc
adc
lods
adc
adc
dec
push
add
imul
out
jg
push
xchg
mov
movsl
notb
jp
bound
negb
mov
lahf
stos
loopne
idivb
xor
and
ljmp
xlat
lret
xchg
pop
mov
and
ret
outsb
pop
pop
cmp
jecxz
ret
lret
xorl
aam
fs
xchg
bound
cmp
mov
scas
test
sbb
or
inc
xchg
enter
popa
lret
pop
or
mov
mov
mov
movsl
lcall
xor
dec
add
push
mov
pop
ret
in
pop
repnz
pop
enter
add
push
sbb
push
sbb
cli
ja
adc
hlt
pushf
sar
dec
or
or
mov
rorl
push
lahf
mov
lcall
loope
test
jno
sub
aas
sub
xchg
cli
popf
inc
ljmp
cmp
dec
mov
scas
js
inc
and
lahf
addr16
cmpl
outsl
fld
sbb
add
mov
arpl
jecxz
bound
in
cmp
lahf
lock
dec
mov
loope
pop
dec
icebp
enter
aaa
test
sub
xchg
mov
xchg
mov
scas
out
mov
mov
jecxz
rorb
push
push
stc
mov
hlt
fidivl
fs
mov
xchg
pop
loope
setb
cmc
sub
stc
rolb
scas
jle
cs
nop
and
jbe
sbb
mov
xlat
adc
cmp
xchg
sub
mov
add
dec
bnd
or
mov
adc
jg
xchg
dec
push
outsl
imul
in
out
repnz
into
test
mov
mov
mov
inc
into
sbb
arpl
mov
in
jecxz
scas
testb
ret
mov
cmp
dec
sahf
imul
inc
fstpt
je
push
cmpsl
incl
test
sub
leave
sub
repnz
repz
sbb
aam
mov
and
push
rol
push
and
or
int3
mov
popf
sar
clc
mov
adc
mov
add
add
or
jecxz
sti
scas
test
mov
push
cmp
imul
inc
aaa
mov
ret
mov
push
cwtl
sbb
push
pop
cmp
movsb
adc
jmp
ret
hlt
mov
das
iret
sbb
jmp
je
sub
hlt
push
pop
out
adc
xchg
test
lock
cmc
jo
pushf
pop
push
mov
xchg
mov
pop
dec
xchg
xor
popf
jo
in
ss
add
mov
inc
in
and
lret
ret
xchg
mov
cwtl
adcl
sub
fsts
push
mov
call
pop
lcall
cltd
cmp
ss
sub
std
jne
fldt
lock
aas
icebp
cmp
imul
iret
pop
int
dec
scas
and
inc
lock
dec
loopne
popf
and
xchg
enter
adcl
xchg
in
loopne
mov
xor
dec
fsubrs
or
out
inc
push
ror
xchg
stos
sub
jle
cmp
jge
pop
pop
call
lock
mov
mov
adc
cmp
push
sub
out
cld
add
adc
inc
call
xor
xchg
xchg
lcall
pop
cli
push
add
mov
mov
mov
call
push
clc
call
push
negl
pop
pop
cmp
sti
jecxz
jp
ljmp
leave
loop
les
add
lcall
fisttpll
pop
and
iret
ja
lea
data16
sti
pusha
sti
jecxz
mov
adc
jecxz
pop
rcr
inc
or
shrb
sti
imul
jmp
loop
mov
pop
or
sub
xchg
mov
popa
cmp
outsb
loop
push
lcall
dec
xor
in
ret
in
cmp
and
shrl
ret
clc
and
loopne
xchg
mov
push
lods
jmp
mov
cmp
movsl
sbb
xor
je
inc
sbb
aas
cmp
ds
xor
in
data16
out
cwtl
fs
and
mov
imul
sbb
jo
add
jp
cmp
dec
scas
sbb
sub
data16
xchg
dec
inc
sub
xchg
xor
adc
sbb
aas
fsubl
push
faddl
jecxz
sahf
or
inc
push
jmp
outsl
pop
fisubrl
test
and
sti
adc
xchg
mov
push
cs
xor
dec
pusha
jb
adc
adc
xor
mov
mov
repnz
js
je
dec
xchg
scas
jbe
enter
sbb
lds
inc
mov
pop
loop
push
adc
les
clc
and
pop
repz
pusha
insl
dec
xchg
push
sub
jecxz
cmc
adc
hlt
cmpb
inc
push
aam
das
dec
ja
idivl
test
cmp
rcr
adc
fisubs
sub
mov
sbb
les
xor
pop
sbb
mov
aas
sbb
jbe
mov
out
roll
inc
xor
cld
cmp
or
mov
incb
inc
clc
cmp
aaa
push
pop
and
gs
ja
mov
cli
cmp
push
subb
sbb
mov
push
in
fmul
aaa
adc
push
test
ds
je
sub
jbe
adc
push
lahf
sub
mov
divb
mov
push
mov
aam
sub
les
fcoms
jecxz
into
lea
sbb
dec
cmpsb
stc
fistpl
mov
cmp
cmp
jb
cmc
pushf
inc
imulb
cmp
popf
adc
and
xor
push
pop
fwait
sub
and
add
dec
scas
mov
sbb
mov
push
loopne
cwtl
jae
pop
lahf
or
enter
ret
jbe
inc
push
mov
out
jl
shrb
mov
mov
mov
mov
test
cmpsl
xchg
shll
inc
mov
loopne
mov
lret
icebp
add
jecxz
jl
xchg
test
cld
push
aad
adc
sub
sub
xor
mov
ja
int3
int3
push
mov
and
sbb
scas
lods
inc
adc
fmull
pop
xchg
mov
out
push
pop
mov
mov
das
dec
in
scas
mov
push
xchg
ljmp
dec
pop
pop
push
xchg
jle
xchg
sub
pop
addr16
inc
popf
cli
out
xchg
aad
jg
pop
sbbb
jns
rcll
push
jb
cmpsb
or
xor
jbe
xor
pop
dec
gs
negb
int3
or
sbbb
push
out
aad
pushf
enter
cmp
addr16
pop
mov
dec
add
jge
cmp
outsb
in
insl
clc
add
sub
mov
push
loop
xor
xchg
push
jne
hlt
xor
inc
stc
lret
xlat
cld
mov
inc
inc
xor
mulb
repnz
pop
sub
leave
sarb
jns
lret
rcrb
cmp
orl
push
stos
xor
ljmp
iret
ja
or
cwtl
add
push
mov
push
jp
adc
cmp
dec
pop
addr16
jnp
or
xchg
cmp
adc
sub
mov
aad
push
in
dec
mov
loope
xor
mov
cmp
push
cmp
pop
inc
and
sub
jbe
cli
and
addl
mov
in
inc
cmpsl
pop
imul
dec
scas
std
pusha
or
orb
add
sbb
push
fstpl
ljmp
adc
shrl
and
movsl
lcall
bound
sbb
inc
ljmp
shr
push
mov
adc
adc
adc
call
cmp
jecxz
lret
and
lcall
ret
cmpsl
or
dec
lea
mov
dec
lea
daa
repnz
jmp
mov
test
lcall
scas
jae
imul
sub
xor
fistps
sbb
mov
das
pop
dec
cmp
dec
in
push
stos
into
or
or
jecxz
repz
fisubrl
sub
push
lret
dec
push
icebp
sub
addb
ja
arpl
mov
pop
jb
aaa
leave
adc
jl
push
dec
adc
pop
lahf
divb
mov
cmc
sub
cmp
stos
lcall
popa
cmc
pop
aam
dec
jg
xlat
inc
pop
mov
cmp
cli
jmp
mov
mov
loop
addr16
sbb
mov
and
and
stc
es
add
imul
inc
jns
ss
sub
in
and
jmp
lret
jmp
xchg
dec
jbe
lock
cmp
cltd
test
xor
jmp
shll
add
sub
faddl
jne
test
inc
rorb
sti
jbe
outsl
pop
clc
mov
mov
pushf
cmpl
or
cld
aas
dec
adc
mov
jp
shlb
imul
jo
int3
sbb
add
movsb
jns
insl
add
mov
xor
sti
inc
cli
pop
push
or
fistpll
jecxz
in
enter
or
imul
add
leave
jns
punpcklwd
dec
jg
xchg
mov
lods
fs
test
out
and
fs
fwait
mov
add
sbb
pop
jne
int
jle
cmp
jmp
mov
hlt
push
pop
xor
push
lret
inc
lea
stos
pusha
in
xor
loop
mov
sbb
cli
das
push
outsb
and
leave
rorl
popl
repz
jns
stos
or
pop
fcmovnbe
lods
mov
pop
inc
popf
fcompl
and
roll
dec
inc
sbb
rcll
scas
sub
mov
shl
adcb
imul
inc
int3
scas
cld
xor
push
ljmp
lea
xor
sbb
xor
mov
mov
add
xchg
gs
xor
jmp
and
push
mov
imul
inc
jecxz
and
sbb
mov
push
out
mov
imul
sub
cmp
mov
roll
jnp
das
pop
jns
pop
mov
xchg
cmc
fcomps
repz
add
xor
inc
xlat
negb
fisttpl
mov
stos
aaa
xchg
pop
rcrl
stc
inc
sub
addr16
mov
std
pop
xchg
ret
sbb
mov
pop
sbb
pop
dec
sbb
outsl
xchg
xor
pop
out
in
fdivs
ficoms
aas
repnz
leave
sub
jb
ficoml
sub
dec
enter
loope
dec
mov
pushf
sub
jle
cmp
xchg
ljmp
jnp
jge
pusha
iret
lret
stos
btc
lret
cwtl
xchg
dec
mov
xchg
mov
dec
hlt
mov
subb
int3
push
inc
idivl
or
cmp
ret
pop
ds
das
ljmp
and
movsl
popf
ret
push
push
mov
sbb
and
fsubrs
pop
dec
or
adc
push
pop
dec
push
in
es
pushf
loop
subb
mov
mov
ret
pop
in
xlat
fisttpl
sbb
xchg
aas
shr
xchg
adc
add
cmp
adc
push
data16
insb
subl
dec
scas
lods
hlt
aam
hlt
ljmp
cmc
repz
sub
sbb
jg
icebp
or
outsb
fcomps
orl
jns
xchg
aaa
jb
and
ja
outsb
lret
mov
js
jp
rcll
push
test
jae
add
repz
iret
ja
jns
mov
xor
jle
push
icebp
jb
inc
mov
push
popa
add
push
mov
xor
insb
repnz
ret
sbb
pop
jl
aam
jp
adc
jp
rcr
push
mov
in
in
push
mov
dec
or
cmpsl
leave
flds
jnp
insl
push
or
inc
sbb
jecxz
in
mov
out
xchg
adc
movsb
inc
scas
and
mov
and
adc
mov
sahf
mov
xchg
adc
testb
pop
push
popf
xor
ja
sub
add
xchg
pop
pop
scas
mov
xchg
popa
out
push
popa
xchg
dec
icebp
pop
insb
pop
cmp
push
iret
fldt
jne
hlt
push
stos
scas
cmp
pop
call
sub
sub
movsl
dec
lahf
adc
add
jb
and
and
adc
cmp
fmull
mov
scas
ret
sti
mov
cmp
cmp
aas
imul
fists
mov
into
pop
adc
ret
dec
mov
ja
xchg
mov
test
cmp
push
dec
rorl
lods
cwtl
jl
pop
push
sbb
or
sub
xor
push
pop
mov
aam
xchg
or
addr16
sub
add
jl
pop
ja
sbb
scas
lret
imul
out
adc
mov
ss
jmp
fwait
int3
mov
mov
and
mov
mov
enter
push
dec
pop
fdivrs
xor
movsl
mov
pop
jbe
inc
test
push
shlb
sbb
in
jl
or
xor
push
jmp
mov
dec
and
inc
andb
and
mov
inc
fwait
roll
jg
scas
out
mov
ss
adc
mov
sub
mov
xor
mov
les
sarb
push
xchg
stos
dec
loopne
rcrl
mov
inc
rcr
pop
jp
js
call
inc
xchg
push
cltd
adc
inc
xor
xor
stc
aaa
mov
int
mov
inc
and
dec
adc
mov
mov
xor
je
fnstsw
or
jp
inc
and
inc
mov
nop
add
loope
mov
stos
insb
cmpl
or
hlt
orl
add
lock
dec
inc
pusha
push
push
sub
mov
and
call
pop
adc
dec
icebp
hlt
ljmp
push
iret
outsl
repnz
fwait
mov
inc
das
arpl
push
aas
bts
jae
repz
cltd
es
lahf
mov
fwait
push
push
in
mov
sti
sub
xchg
push
in
mov
dec
cmc
or
pop
insb
sub
std
lods
adc
lock
aad
mov
mov
pushf
sub
or
mov
push
jmp
lret
fs
and
gs
mov
gs
lods
sub
add
jmp
jne
es
scas
mov
sbb
leave
enter
inc
mov
xchg
dec
dec
add
jle
inc
sbb
sub
or
cmp
call
xor
outsb
test
xor
xchg
adc
dec
fisubrs
out
mov
loop
dec
ret
cmpsl
addl
jno
sti
sbb
dec
cli
ficoml
dec
and
enter
xchg
adc
inc
out
clc
mov
test
out
fwait
sub
popa
jp
jbe
enter
push
push
rclb
xchg
fwait
pop
fnstsw
dec
movsl
sbb
sub
mov
adc
shll
jae
push
rcr
or
ljmp
mov
mov
inc
fidivl
dec
adc
sti
cmp
cld
jge
scas
mov
sub
inc
push
and
filds
lahf
fisttpl
sub
fmuls
jno
adc
fisttpll
jp
mov
fcompl
pop
hlt
popa
out
shl
fisubs
test
mov
pop
sub
mov
inc
adc
push
sbb
in
mov
aas
stos
idivb
mull
bound
mov
cmp
inc
fs
jno
cmpsb
xchg
into
or
inc
dec
cli
jo
jne
imull
push
and
pushf
jbe
fimuls
jle
lahf
pop
mov
or
mov
push
movsb
gs
jb
scas
mov
pusha
mov
loop
mov
dec
sbb
daa
ret
js
lods
repz
nop
sub
aas
rorb
pop
xchg
outsl
cmpl
mov
mov
adc
add
xor
and
shrl
ret
aas
repz
pop
xchg
outsl
cmpl
mov
mov
adc
add
xor
and
shrl
ret
aas
repz
pop
xchg
outsl
cmpl
mov
mov
adc
pop
pushl
iret
adc
out
idivl
lds
jecxz
xchg
outsl
cmpl
and
scas
mov
call
int3
xor
and
int3
int3
int3
int3
and
xor
add
adc
popa
pop
add
popa
adc
in
mov
xchg
loope
icebp
out
ror
iret
inc
aas
xor
insl
pop
adc
popa
jg
outsl
inc
pop
push
dec
mov
mov
icebp
xadd
ror
cltd
es
das
xchg
pop
leave
push
jg
adc
inc
push
push
lds
jmp
mov
iret
dec
aas
jge
add
test
jno
fwait
sarl
xor
and
fwait
sbb
movsb
adc
rol
and
xchg
int
int
adcl
fadd
push
aas
lds
insl
push
jp
mov
ffreep
je
je
pop
imul
bound
xchg
and
out
or
in
iret
std
outsl
pop
das
in
std
aas
sahf
pop
jno
mov
out
mov
add
lods
icebp
adc
push
shll
and
mov
popf
pop
stc
xchg
lret
dec
xorl
aam
movsb
xchg
icebp
bound
xor
xor
sahf
inc
cwtl
mov
mov
gs
insb
lods
mov
fistpll
cmp
movups
inc
inc
notl
cmpsl
sub
test
stos
dec
pop
inc
das
jne
imul
xor
loop
in
hlt
loopne
xchg
lahf
mov
insb
inc
push
das
jae
jo
or
pop
mov
add
mov
into
sub
sahf
subb
pop
dec
pusha
jle
jp
adc
inc
pop
push
dec
mov
lahf
xchg
loope
icebp
out
rcr
iret
and
xor
add
adc
popa
jg
outsl
inc
pop
push
dec
mov
lahf
xchg
loope
icebp
out
rcr
iret
and
xchg
test
rcrl
inc
push
pop
mov
inc
mov
cwtl
pop
xor
sbb
mull
in
sarl
dec
or
adc
aas
dec
imul
push
mov
sarb
lods
xlat
adc
repz
gs
cltd
inc
andl
lods
lret
xor
dec
xchg
sub
cmp
pop
jl
fdivs
or
fiaddl
mov
sub
or
rolb
loope
imul
hlt
or
fnstenv
mov
jo
mov
xor
and
mov
imul
cmc
push
mov
dec
push
inc
or
dec
call
push
lea
inc
adc
adc
test
lret
xor
jno
mov
cmp
pop
dec
mov
ret
add
es
xorl
jg
xchg
je
and
lcall
jp
loopne
mov
dec
mov
pop
movsb
fs
or
in
mov
xor
pop
xor
lds
xchg
in
mov
repz
dec
in
icebp
in
pop
jne
mov
dec
fbstp
push
inc
cmp
mov
add
neg
xchg
rcrl
ret
jge
xchg
js
mov
sbb
das
lods
test
cmp
arpl
jle
mov
cmp
jae
jnp
add
jnp
les
les
mov
inc
jb
or
jae
sti
int3
jle
outsl
aaa
pop
lods
xchg
jge
xlat
xchg
test
scas
jnp
ret
lcall
std
js
cmp
jae
jmp
out
iret
in
or
jmp
xchg
mov
sbb
stos
loop
or
push
mov
call
mov
sub
test
push
mov
or
lock
inc
jecxz
out
cltd
jg
shrb
imul
lods
leave
mov
leave
inc
loope
icebp
mov
pop
mov
scas
sti
mov
cmpsl
in
jo
jno
push
push
jl
sub
inc
pop
shll
add
movb
testb
ficoms
mov
lahf
and
hlt
ja
bswap
xor
movsl
adc
mov
and
mov
divl
xchg
adc
jg
shrl
cmp
pop
sub
mov
idivb
lcall
push
lcall
aam
adc
adc
jle
mov
orl
xchg
dec
lods
dec
pop
ds
pop
icebp
add
adc
add
inc
out
xor
jg
jmp
dec
mov
lret
xchg
iret
fcom
ret
pusha
out
ret
add
sub
push
insl
push
cld
sub
daa
xor
ja
je
xor
shrb
mov
mov
int
mov
js
mov
sarl
cltd
sahf
lret
lret
loope
out
sbb
cmp
jl
xchg
in
pop
sbb
cmp
shll
popf
movsb
jnp
dec
lea
out
jmp
loopne
add
pop
push
xor
jmp
scas
cli
xor
jb
enter
dec
sbb
das
and
and
jae
jne
out
jb
cld
gs
or
sub
loope
pop
ds
jmp
mov
mov
add
or
push
dec
cltd
pop
adcb
insl
in
lcall
mov
sbb
popa
call
fwait
adc
mov
xchg
mov
pop
leave
cwtl
mov
lahf
inc
adc
mov
push
inc
xor
mov
inc
or
fwait
xchg
xor
mov
mov
lods
lret
jbe
jbe
sti
pop
dec
cmp
or
repz
mov
jnp
loop
idivl
jne
mov
push
pusha
jnp
cmp
loopne
mov
and
inc
xchg
push
pop
hlt
loope
fcoms
aas
fidivrs
jae
xchg
nop
std
xlat
subb
rcr
push
inc
pusha
lret
mov
addb
and
fmuls
lret
mov
cmp
jno
adc
pop
dec
pushf
inc
stos
mov
dec
faddl
aam
push
xor
pop
rolb
fcmovne
push
mov
cli
cmp
add
stc
or
sub
int
xorb
or
jnp
jg
enter
popa
lret
inc
pop
push
add
pop
adc
movsb
push
or
lret
sbb
mov
stos
or
pop
jg
xchg
cs
nop
cmp
sbb
mov
in
xchg
pusha
xlat
inc
je
add
test
jg
pop
push
fisubs
push
or
fmuls
xchg
sbb
aaa
adc
mov
sbb
adc
gs
les
or
lahf
sub
push
mull
ret
leave
xchg
cmc
pop
inc
iret
push
jge
add
outsl
fnsave
jmp
mov
dec
and
imul
in
push
pop
mov
in
sub
in
sbbl
adc
repnz
jb
addr16
jbe
push
jno
bound
daa
jnp
xor
js
inc
sub
xchg
daa
stos
in
xchg
loop
arpl
and
xchg
rcrb
cmc
int
clc
push
sub
pop
fsts
sahf
pop
dec
mov
jne
leave
jae
xchg
xrelease
call
jb
mov
iret
outsb
imul
in
rolb
in
gs
int
mov
aas
rorb
lods
loope
fbstp
aam
fists
mov
sarl
outsb
mov
inc
les
outsl
mov
pop
cmp
enter
mov
out
aad
jl
sbb
xchg
cmpb
mov
int
mov
pop
cmp
pop
imul
fwait
jmp
fs
or
cmp
stc
jl
cmp
push
sub
lods
mov
cli
out
bound
mov
adc
arpl
int3
int3
inc
mov
cmp
pop
push
and
mov
int3
pop
mov
decl
icebp
mov
adc
call
inc
repz
rol
dec
fmuls
inc
aaa
sbb
ja
cmpl
inc
and
jmp
in
adcb
movsl
fs
daa
mov
dec
xor
sbbl
movsl
scas
cmpsl
xchg
jns
int3
ljmp
bound
stos
sub
nop
bound
test
andb
shlb
stos
sbb
pop
inc
sub
test
add
or
in
mov
pop
fistpll
jle
es
lcall
lcall
push
mov
jnp
out
push
xlat
std
ret
cmp
push
js
jle
adc
cwtl
repz
ss
out
es
mov
mov
cmp
aad
xchg
jo
int
out
out
xorb
xchg
jns
mov
xchg
movsb
sbb
jecxz
and
divl
adc
pop
mov
xchg
test
vmulpd
sub
dec
das
in
or
jae
minps
sub
enter
add
adc
sub
iret
inc
movsl
stos
in
add
mov
xchg
dec
push
test
or
jmp
mov
sahf
pop
sub
xor
popa
out
pop
adc
jnp
push
std
fcomi
jl
addr16
or
mov
in
cmc
mov
ss
mov
push
fiadds
test
push
lock
das
sbb
add
xchg
pop
je
add
inc
fildll
pop
lret
xor
sahf
bound
adc
lret
loop
dec
shlb
divl
jg
mov
fisubl
lds
loope
in
sbb
push
shl
ret
rorl
out
cmp
xchg
out
and
scas
cli
clc
mov
roll
jg
push
and
lret
pop
push
mov
ljmp
jo
xor
push
pop
leave
sti
sti
js
jns
mov
mov
xor
cmp
and
out
and
mov
cmpsl
mov
jecxz
test
mov
faddl
ret
add
lea
mov
pop
arpl
mov
push
or
push
das
cmpb
inc
pop
push
mov
iret
fnsave
ss
xor
dec
lahf
xchg
lcall
dec
stc
ficoml
dec
loop
dec
inc
nop
ljmp
mov
mov
bound
cmp
mov
fdivs
mov
xchg
scas
popf
mov
jo
push
out
scas
outsl
insl
mov
dec
push
int
testb
lds
jg
jle
or
stc
dec
ja
mov
inc
in
not
js
mov
mov
jnp
rcr
mov
js
xchg
enter
mulb
imul
repz
add
xchg
mov
out
addr16
xchg
add
out
andl
pusha
xchg
shlb
dec
mov
mov
add
leave
jge
fidivs
imul
pop
out
bound
popa
dec
cltd
int3
pop
sbb
or
and
movsl
cmpsb
dec
or
dec
jae
sbb
aam
sbb
sbb
cs
push
aam
xor
aam
data16
mov
mov
repnz
xor
jecxz
adc
mov
das
dec
loop
jmp
dec
jp
test
cltd
pop
inc
push
adc
push
test
mov
or
or
cmpsb
and
in
sbb
xor
decl
lock
push
fdivl
andl
cmpsl
pop
mov
xchg
hlt
pushf
lock
mov
xor
inc
loopne
push
xor
test
mov
mov
or
jmp
and
fbstp
stos
mov
mov
int3
push
adc
popf
cmc
cmp
test
and
add
es
pop
mov
hlt
imul
stos
push
jb
subl
sbb
jp
push
jge
mov
leave
out
xor
push
push
addr16
popf
mov
cld
inc
mov
inc
lea
add
movsb
xchg
pop
xor
xor
lods
lea
lods
lock
xor
sbb
jae
lds
outsl
into
rolb
in
pop
test
bound
ret
cltd
adc
gs
xchg
and
mov
bnd
xchg
sub
mov
cmpl
add
mov
or
cltd
sub
mov
enter
sub
sub
pop
clc
cmpsl
int
xchg
mov
popf
mov
push
aas
jg
cmpsb
repz
mov
in
pop
xor
fisubl
fldenv
mov
xor
outsl
int3
mov
cli
inc
test
add
out
sub
pop
and
out
pop
movsb
dec
jp
test
cmp
ficomps
loope
dec
js
add
cld
push
aaa
out
xchg
jae
sbb
xchg
cmp
fisubs
roll
rorb
ficoms
scas
push
push
add
add
hlt
inc
fdiv
iret
out
rcrb
push
sarl
das
inc
mov
fisubrl
das
pop
and
pop
test
andl
jmp
out
jno
fldenv
daa
add
push
call
mov
mov
cmpsb
int3
add
fucompp
add
rorb
mov
adc
ja
pop
arpl
movsl
adc
sahf
dec
dec
adc
sub
mov
mov
daa
dec
jge
clc
mov
iret
sub
cmc
add
mov
popa
shlb
or
sbb
roll
jmp
aaa
mov
xchg
movsl
xchg
push
cmp
cmp
and
dec
pop
ret
push
lock
xchg
adc
push
inc
lea
repz
adc
mov
xor
inc
test
mov
cmpsl
jo
pop
lods
or
sbb
decl
testl
xor
in
xchg
xor
nop
mov
mov
je
dec
cmp
and
rorb
andl
int
pop
int3
xchg
adcb
flds
sub
sbb
or
xor
cmc
sub
scas
xor
ret
adc
jmp
mov
aas
pop
negb
or
sbb
repz
or
cmp
xchg
aad
ljmp
pop
mul
push
cmpsb
mov
jp
movsl
int
inc
pop
fsts
sarl
adc
enter
dec
mov
rol
stos
and
pop
inc
sahf
loopne
pop
xchg
rol
inc
ret
mov
rclb
dec
inc
out
jp
mov
dec
and
or
aam
mov
cltd
mov
mov
or
add
xchg
out
fisubs
repz
and
jge
and
add
test
push
lods
cmp
xor
into
jmp
in
fimull
iret
lahf
imul
jne
add
lret
notl
out
inc
and
sbb
sbb
dec
enter
faddl
icebp
aad
xor
test
hlt
mov
imull
data16
sbb
stos
fstps
je
add
pop
icebp
or
push
mov
xor
test
test
rcrb
iret
bound
or
ds
sti
adc
sub
call
addl
xor
mov
fldt
repnz
movb
mov
movsl
jmp
jns
ret
into
lret
cltd
sbb
shl
int
insb
je
inc
xchg
pop
inc
xor
xor
jle
bound
ljmp
dec
inc
loop
pop
enter
cmc
mov
out
or
hlt
and
pop
mov
xorb
add
cld
or
outsl
popa
lcall
pop
jae
dec
aad
or
je
shufps
inc
ret
add
mov
es
xchg
push
repnz
gs
pop
mov
mov
clc
cld
cmp
cmp
jne
jne
inc
xor
into
jg
sbb
loope
test
jnp
add
push
insl
ret
scas
mov
aam
dec
loop
fnstenv
xchg
sub
shll
fcomps
mov
sub
and
icebp
or
imul
jns
jnp
xor
shl
cltd
movsl
sahf
jle
fwait
daa
sbb
jmp
lahf
or
jbe
mov
cmc
stos
in
cwtl
lahf
jp
mov
sbb
jle
jg
inc
pusha
cmpsb
loopne
and
out
imul
inc
mov
jecxz
mov
jae
mov
dec
fsubs
mov
jnp
ret
pushf
loope
sub
add
cmpsb
jbe
cmpsl
insb
dec
sub
lahf
add
xchg
das
push
mov
aad
or
mov
jg
xlat
call
pop
pop
mov
cmc
push
xor
mov
in
sbb
lods
cltd
push
pop
negl
mov
pop
mov
sbb
je
mov
test
ja
loope
call
pop
sub
mov
lods
outsl
sbb
or
push
xchg
inc
pushf
add
xchg
rcr
sbb
pop
ret
add
bound
es
add
aam
aas
or
pushf
sub
icebp
push
movsb
sub
push
xor
push
push
mov
mov
iret
stc
loopne
push
mov
lock
sub
dec
jno
mov
cmpsb
xchg
fwait
pop
mov
cs
rorb
into
jb
inc
push
xchg
call
adc
xchg
gs
arpl
and
popf
push
pusha
out
scas
fadds
arpl
mov
push
pop
rcr
sub
mov
dec
popa
push
lea
icebp
jmp
adc
lock
mov
sbb
inc
popf
pop
cmp
mov
outsb
mov
popf
loop
mov
add
mov
popf
mov
mov
shlb
mov
into
jp
mov
mov
ret
mov
push
push
push
cmpsb
stos
repz
jo
jne
adc
outsb
je,pn
inc
dec
out
lcall
jno
push
aas
orl
pmaxub
mov
pop
ficomps
aam
xchg
imul
pop
cli
sub
sub
movsb
fwait
lcall
inc
mov
add
shlb
dec
push
push
jne
test
mov
push
mov
push
imul
push
neg
leave
imul
bnd
sub
mov
test
sub
add
dec
sbb
cmc
sub
scas
push
das
cmpsl
movsl
push
pop
xor
mov
xchg
mov
lods
stos
xor
pop
sub
add
pop
insl
nop
jecxz
mov
jnp
shr
pushf
and
movsl
dec
cmpsl
mov
pop
arpl
or
xor
out
test
mov
add
push
push
mov
fndisi(8087
cmp
popa
xor
mov
ljmp
inc
mov
push
das
inc
or
sbbl
gs
dec
pop
add
sbb
mov
mov
mov
movsb
js
add
cmp
insl
cmpsl
push
ret
enter
adc
sbb
movsb
inc
pop
out
jnp
push
adc
inc
jl
outsl
add
lcall
in
sub
mov
xor
mov
rep
or
cmp
in
add
inc
lods
add
add
mov
icebp
adc
mov
das
pushf
push
jne
sbb
mov
or
in
push
or
push
sbb
inc
test
push
insb
cmp
inc
outsb
scas
fldl
xor
lret
iret
jbe
ret
or
cmpsb
xchg
dec
adc
mov
cmpsl
pop
or
and
outsl
or
and
dec
pop
insb
pop
daa
jecxz
test
loop
insb
adc
and
daa
loopne
push
jnp
lea
je
mov
repnz
ret
daa
push
push
loope
mov
jmp
xchg
cs
jno
or
orb
jns
mov
popa
xchg
push
jne
xchg
and
movb
bound
in
rep
lahf
mov
ja
mov
gs
in
jp
dec
in
inc
lods
notl
mov
jge
inc
pusha
jne,pn
jns
inc
fcmovnb
lds
mov
xor
sbb
clc
push
dec
add
test
push
mov
push
cld
rcll
dec
dec
or
int
inc
sbb
mov
test
pop
cmpsl
shlb
push
cmp
jp
jnp
out
aad
inc
das
mov
scas
shlb
mov
inc
push
gs
mov
pop
test
xor
lret
xchg
jecxz
sbb
popa
fmul
xor
xchg
mov
aad
add
sub
inc
out
dec
fidivrl
dec
lock
popa
enter
and
icebp
sub
repz
insb
ljmp
in
jl
and
xor
sub
out
mov
inc
cmp
punpckhdq
hlt
dec
bound
push
pop
pusha
jl
adc
mov
mov
pop
test
or
scas
pop
ret
sti
jno
xchg
fucomi
xor
imul
sbb
es
das
sbbl
fwait
bound
addr16
xchg
sbbb
das
xor
pop
lods
adc
inc
add
push
jnp
push
xacquire
lret
mov
fwait
je
fs
mov
in
fs
fcmovbe
cmp
pop
mov
or
dec
fidivrl
cli
sbb
iret
lods
jmp
sub
fs
call
popa
push
cmp
sub
adc
mov
test
mov
mov
xchg
inc
cmpsb
push
arpl
bound
push
int3
lds
dec
xor
pop
dec
imul
js
mov
cltd
stc
push
test
test
cmp
nop
fimuls
fwait
or
push
dec
inc
push
sar
lret
pushf
std
outsb
pushl
jge
cmpsl
mov
fwait
jle
fnsave
dec
shlb
and
push
test
xlat
fcomps
ret
fdiv
dec
and
xor
pusha
cmpsl
dec
push
int
arpl
dec
jne
sub
sbb
push
mov
and
xor
leave
out
ret
jge
mov
out
jl
push
mov
call
in
inc
cmp
inc
loope
push
dec
add
fldenv
pop
shll
or
out
aad
xchg
adc
test
xor
ret
push
ret
out
pop
push
adc
sbb
mov
jge,pn
cmp
push
jo
adc
mov
repnz
cli
inc
xchg
mov
pop
pop
sub
pushf
xor
mov
sub
xor
das
les
repz
mov
repnz
ret
shll
daa
mov
outsl
mov
pop
adc
test
adc
jb
sbb
movd
je
leave
mov
std
or
ljmp
xor
rolb
shlb
out
pop
clc
adc
and
fnstenv
cmpsl
jecxz
leave
xchg
sbb
nop
pop
stc
ljmp
lds
stos
xor
pop
ret
mov
xchg
fistl
pop
lret
and
fmul
das
jae
repz
loope
in
dec
cmp
xor
sbb
sbb
inc
aas
nop
mov
inc
push
ret
and
xchg
and
xor
test
sbb
clc
fidivl
fisubl
test
js
and
cld
add
mov
mov
cltd
cli
xchg
pop
bound
dec
ret
xorl
or
jb
clc
insb
stos
jle
arpl
push
xlat
jae
and
fs
pop
push
cwtl
mov
push
mov
inc
mov
in
inc
in
mov
mov
jp
movsb
and
movsl
fldcw
cmc
dec
loop
inc
xchg
dec
cmp
mov
fimull
je
dec
and
mov
insb
add
ljmp
insb
ss
xchg
test
ljmp
add
arpl
pop
or
int
and
inc
rcrl
test
std
loop
jp
aaa
dec
out
shlb
xor
sub
add
dec
mov
into
xor
bound
stc
mov
in
jns
sub
insb
leave
arpl
movsl
fists
mov
test
xchg
lahf
es
mov
push
ret
sbb
mov
mov
into
cmp
scas
cltd
fadds
movsl
jp
adc
adc
lahf
int3
mov
mov
loope
lock
mov
sub
stc
movsb
subb
ds
mov
and
mov
outsl
and
push
in
pop
push
add
mov
imul
inc
cmp
adc
sbb
test
mov
ret
ljmp
pop
loope
fwait
mov
fimuls
aas
cmc
jge
push
inc
jb
movsl
fldcw
jle
jg
dec
lods
sub
lahf
div
add
lock
fnstcw
pop
stc
cs
push
imulb
dec
pop
or
fsubrs
btc
sbb
mov
pushf
cmp
pop
push
cltd
dec
sbb
leave
repz
test
lock
pop
dec
mov
jg
dec
lods
push
fstp
dec
dec
insl
stos
rcrb
push
or
lods
mov
add
dec
cwtl
adc
ret
inc
adc
jecxz
pop
popa
shlb
cmpsb
iret
js
nop
arpl
add
ja
push
shrl
inc
lock
popa
jg
outsl
inc
pop
push
dec
mov
lahf
xchg
loope
icebp
out
rcr
iret
and
xor
add
adc
popa
jg
outsl
inc
pop
push
dec
mov
lahf
xchg
loope
icebp
out
rcr
iret
and
add
popa
pop
adc
icebp
jg
outsl
inc
pop
xchg
dec
mov
lahf
xchg
mov
jmp
out
rcr
iret
xor
pop
xor
popa
jg
outsl
inc
pop
rorl
mov
xchg
clc
xchg
ja
adc
and
xor
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
mov
push
push
pushl
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
cmpl
ss
mov
testb
adc
and
xor
inc
inc
push
push
jno
jno
addl
rcrl
out
adcb
adc
and
aas
ss
sub
popa
es
cwtl
adc
xchg
mov
cli
leave
ljmp
xor
jns
inc
inc
adc
aas
cmp
xchg
clc
mov
icebp
rcrl
cli
ss
imul
and
add
or
sub
mov
and
inc
fisttpll
adc
xchg
popa
addr16
jle
insl
xchg
push
mov
push
out
push
xor
mov
xchg
sbb
lods
push
popa
cmpsb
jno
addb
push
sarb
mov
adc
adc
lret
push
test
rcll
push
xor
loop
xchg
lods
out
add
add
push
and
shll
adc
popa
mov
jno
out
dec
mov
adc
or
push
pushf
jle
fldenv
add
add
dec
xchg
mov
loope
call
sarb
sub
push
scas
jnp
jno
in
aam
xchg
in
cwtl
mov
mov
lods
icebp
xchg
add
push
push
push
push
pop
inc
sub
adc
sbb
out
ret
lock
into
mov
in
mov
inc
and
push
inc
push
cmp
pop
pop
adc
ror
neg
aad
mov
icebp
testb
adc
and
xor
inc
inc
push
push
popa
data16
addl
rcl
loope
icebp
testb
adc
and
xor
inc
inc
push
push
popa
data16
addl
movsl
add
mov
add
syscall
push
xchg
or
mov
sarb
insb
push
adc
imul
cmp
es
jecxz
dec
mov
sub
test
pop
mov
jl
lock
fs
jle
push
and
arpl
sbb
sub
call
cmp
jecxz
dec
mov
and
stos
sbb
sub
in
jle
iret
push
pop
adc
shl
push
fstpt
jns
fwait
les
and
dec
jnp
fmuls
loopne
push
mov
adc
sti
jne
popa
mov
mulb
mov
lea
adc
xlat
mov
stc
sbb
push
lods
sub
jno
sbb
fnstenv
add
jmp
push
ljmp
sub
sar
adc
sub
sub
dec
in
test
and
enter
mov
push
xchg
sub
jno
pop
lock
push
xchg
xchg
push
cwtl
mov
ret
scas
jo
orb
xchg
out
mov
in
movsb
cmp
arpl
mov
iret
pop
mov
aam
sub
and
fwait
dec
incl
mov
mov
push
jecxz
je
dec
nop
dec
push
roll
addr16
jge
jecxz
xchg
sub
and
lea
sub
jge
sub
jo
add
push
add
fdivs
popa
sub
mov
inc
and
rorl
push
stos
gs
ljmp
jmp
or
xchg
inc
sahf
stos
jecxz
cmp
mov
inc
mov
adc
pop
ret
pop
bound
sbb
mov
rcrl
jmp
sub
hlt
stos
ljmp
mov
mov
mov
sub
loope
sub
xchg
xchg
pusha
and
mov
dec
jns
cmpsb
sbb
sarb
jg
lods
xor
dec
test
pop
or
xchg
dec
rcll
sub
insb
out
cmp
cmpsb
lea
jnp
push
cli
out
scas
imul
xchg
clc
inc
test
ss
adc
mov
mov
stc
outsb
mov
jecxz
pop
adc
mov
jl
and
cmp
insb
sbb
movsb
jns
jne
repz
int3
xorb
mov
cltd
test
sbb
lods
jecxz
xor
mov
mov
in
jo
gs
cmp
shl
das
es
in
sbb
imul
push
or
mov
push
pop
daa
jne
or
adc
iret
xchg
popf
and
mov
outsl
cmp
add
movsl
push
or
pop
fs
add
sti
clc
sub
inc
fwait
sub
fucomip
jne
lret
leave
repnz
dec
xchg
popa
int3
dec
fisubs
rcl
rcl
test
enter
sbb
inc
call
cwtl
sti
or
sbb
out
fdivrl
pop
and
imul
fs
inc
mov
sti
push
lahf
ja
push
int
fidivl
cltd
stos
or
lahf
decb
arpl
sub
jnp
pop
jl
cltd
ffreep
mov
ss
cmp
sub
shrl
inc
cld
push
sbb
sbb
scas
leave
out
pop
ja
icebp
ds
cmp
pop
loope
in
gs
cmpb
jne
shrl
pop
nop
or
mov
mov
add
cmpsb
int
push
inc
add
push
mov
push
repz
cmp
cmp
sbb
inc
outsb
icebp
dec
jl
loope
mov
cwtl
std
roll
jge
cmc
push
and
ss
sub
imul
imul
adc
movsl
test
jl
bound
mov
or
lds
nop
xor
jbe
sarb
repz
test
dec
fistl
shrb
mov
inc
mov
mov
push
or
sti
pop
test
shl
ficomps
cmovae
push
out
mov
fwait
pushf
mov
push
shlb
inc
sub
xchg
mov
dec
jbe
add
test
popa
js
jecxz
add
mov
lods
dec
push
mov
add
loope
pusha
out
mov
loope
shlb
lret
mov
jmp
out
ret
arpl
addr16
mov
mov
mov
xlat
sahf
movsb
jge
cmpsl
stos
bound
dec
outsb
mov
out
out
repz
xchg
movsl
xlat
leave
mov
inc
mov
jl
add
std
inc
xchg
sub
xchg
jge
dec
xor
es
mov
ja
icebp
and
or
adc
mov
cltd
iret
pop
jo
std
pop
popl
test
mov
cmp
pop
ljmp
pop
jge
mov
mov
rcll
mov
mov
lret
adc
dec
xor
pop
fdiv
call
mov
iret
xchg
std
leave
mov
loope
mov
add
js
mov
mov
test
in
push
cmp
jbe
lock
lcall
ljmp
pop
add
stc
in
out
mov
bound
leave
push
push
inc
cmp
pop
dec
and
push
pop
int3
iret
adc
cwtl
pop
dec
push
jmp
ljmp
int
test
js
ret
cmp
outsb
repz
ret
mov
jbe
arpl
push
icebp
lea
lret
lea
fwait
xor
das
gs
cli
shll
test
sub
xchg
les
dec
mov
push
adc
rcr
sbb
test
bound
add
jmp
lods
ret
insb
scas
mov
flds
adc
mov
jecxz
pop
rcll
stos
mov
push
enter
sub
mov
push
pop
inc
nop
dec
and
lcall
push
mov
frstor
adc
dec
stos
icebp
cmp
ret
jns
outsl
call
add
loopne
int3
mov
mov
cmp
sub
fildl
push
push
divb
out
outsl
add
ljmp
les
lcall
je
inc
test
repz
or
or
mov
jle
push
sub
mov
std
mov
or
fs
jmp
aad
or
push
cmpsl
push
enter
push
cltd
adc
ss
xchg
and
lock
sbb
mov
cld
or
adc
cmp
push
pop
cmpsb
push
xor
jg
js
aad
cmpsb
mov
push
cld
inc
loopne
sbb
daa
push
idivb
pushf
mov
ficoml
sub
in
adc
dec
pop
sarl
movsl
idivb
mov
loope
or
xor
mov
cli
int3
mov
or
addl
pushl
xchg
lahf
fsub
xor
lods
push
pusha
fidivl
or
adc
or
fldl
adc
les
daa
xchg
mov
xchg
jg
adc
ljmp
mov
mov
loop
subl
push
loop
push
mov
push
fisubrs
mov
jg
cs
mov
adc
jae
ret
xchg
push
addr16
iret
inc
adc
enter
in
or
add
mov
fistpl
mov
jbe
sub
mov
mov
movsl
adc
sbb
jo
adc
jbe
mov
lahf
sub
push
cmpsl
out
cmp
sbb
dec
xor
xor
sbbl
repnz
cmp
cmp
mov
cs
mov
mov
out
xchg
je
mov
pop
push
jb
mov
inc
cmp
lds
jmp
xchg
bsr
jae
cmp
lock
cmp
xor
pop
int
xor
andl
int3
pop
inc
lret
outsl
jge
shlb
xchg
pusha
jl
push
push
jp
notb
repnz
inc
and
jmp
popa
mov
push
test
popf
jae
gs
mov
lea
fxch
xchg
fisubs
pop
fs
ds
loopne
push
pop
add
dec
movsb
sub
jl
test
fiadds
pusha
dec
xchg
stc
popa
jle
out
pusha
std
sti
or
out
cmpsl
popa
push
pop
stos
call
xchg
ds
mov
ss
mov
aas
pop
push
mov
fwait
ja
mov
jae
pop
push
or
adc
call
mov
sub
iret
in
mov
adc
pop
mov
pop
mov
ja
inc
dec
lods
sbb
jbe
dec
fiadds
mov
jae
cmpsl
out
and
gs
pop
outsb
push
mov
mov
inc
pop
or
int3
mov
jns
adc
sbb
dec
hlt
dec
cs
lcall
imul
push
cmp
aas
movsl
cwtl
cmp
dec
mov
xor
testl
jg
mov
pop
es
jns
sahf
mov
xchg
push
icebp
dec
mov
push
adc
jo
subl
pop
lock
out
xchg
bound
cmp
hlt
sbb
imul
sbb
adc
add
in
dec
jnp
inc
xor
push
inc
mov
adc
push
cltd
mov
into
add
jmp
movsl
cli
clc
mov
dec
ror
ljmp
adc
leave
cli
outsb
subb
mov
in
push
fists
dec
mov
cs
inc
hlt
loop
pop
add
pop
xchg
mov
dec
mov
lods
icebp
pop
inc
jg
aas
sbbl
push
push
mov
outsl
xor
xchg
test
push
cltd
dec
scas
test
test
cmc
push
movsb
in
daa
xchg
jmp
pop
int3
std
xchg
das
insb
pop
in
xchg
aaa
pop
call
in
outsb
cwtl
adc
mov
ror
mov
cli
loope
jb
sti
sbb
outsb
jmp
fdivrl
movsl
sub
sub
ret
lock
fnstcw
push
sub
stos
push
push
mov
inc
orb
xor
rol
push
sar
adc
movsb
out
push
fstpt
add
adcb
lcall
inc
lock
mov
xor
or
mov
lock
mov
add
subb
cs
rorl
sub
sahf
lret
ret
jns
dec
sti
sub
fcoml
ret
arpl
ret
pop
or
enter
outsb
xchg
fisubrs
dec
inc
dec
jecxz
daa
pop
xorb
inc
inc
add
xchg
cmp
into
sub
notl
out
sbb
sub
mov
pop
fdivrl
mov
outsl
imul
imul
test
sub
filds
adc
sarb
inc
mov
jp
and
and
pop
mov
imul
mov
cmpsl
jo
or
std
push
push
sub
cs
mov
adc
adc
arpl
sbb
adc
push
inc
jle
dec
cmp
dec
xor
jae
or
incb
and
or
add
ljmp
or
movsb
inc
cmp
xor
mov
mov
sbb
push
test
inc
or
inc
cmp
jg
push
aad
jle
and
add
dec
mov
jnp
out
jnp
mov
cwtl
dec
jae
dec
rcrb
jns
flds
fisttpl
pushf
mov
mov
fnstsw
addb
ljmp
popf
mov
mov
dec
lock
fdiv
ficoml
adc
aam
cmpsb
cwtl
pop
mov
daa
adc
or
jmp
inc
fwait
add
adc
add
jmp
mov
sbb
mov
dec
adc
mov
pop
xchg
cli
nop
test
inc
inc
lods
cmp
insl
xchg
sub
fnsave
cmpsb
add
test
mov
mov
xchg
in
nop
mov
mov
push
pop
pop
arpl
and
push
jo
nop
add
fwait
sbb
outsb
mov
push
adc
and
scas
push
iret
fbld
addr16
push
sub
xor
sbbb
lods
mov
dec
dec
push
aad
ja
xorl
in
adc
stc
jbe
seto
outsl
outsb
pop
repz
cmc
pop
pop
imul
xlat
xchg
gs
xchg
hlt
sub
out
mov
into
inc
rclb
jle
jo
mov
mov
aad
xor
int
lcall
push
sbb
add
dec
cmp
fcmovb
or
shl
andl
imul
sti
push
xor
fcompl
pop
repz
shr
push
xor
cld
mov
adc
mov
adc
xor
push
sbb
daa
outsl
shl
and
test
and
scas
cmp
daa
out
jbe
ror
jnp
mov
in
mov
rolb
push
jae
pusha
and
xlat
xor
jo
and
mov
lods
dec
bound
fldl
sbb
pop
repnz
repz
sub
notl
mov
jnp
push
mov
sbb
push
test
pop
jns
adc
push
or
push
rcrb
test
add
movsb
ret
mov
cwtl
dec
cmpsl
in
dec
inc
dec
fadd
push
popa
jge
jl
sub
lods
cmp
rcl
popa
inc
mov
xchg
imul
cmp
shll
jl
sub
jae
dec
xchg
mov
lcall
sub
or
ja
sarb
fidivrs
inc
pop
outsl
ljmp
ds
push
cld
dec
gs
jno
push
test
js
adc
js
pop
mov
xlat
stc
mov
sbb
cld
adc
and
sbb
sbb
shll
lcall
sbb
out
jecxz
push
push
fs
dec
push
inc
mov
inc
and
and
pop
ficoml
lcall
xchg
shll
jns
les
mov
aad
fwait
mov
pop
mov
sbb
fwait
and
cs
in
push
adc
mov
les
ficoml
out
das
jmp
je
jo
push
loopne
inc
inc
mov
repz
int3
add
mov
xchg
push
jge
out
fisttpl
cwtl
sbb
or
sub
sahf
mov
imul
inc
mov
sahf
jo
in
mov
int
push
in
add
pop
xchg
jb
mov
sub
dec
sti
pop
adc
lods
fs
mov
ret
push
outsl
or
outsl
mov
imul
cs
add
add
cmpsb
xchg
popf
fdivp
or
push
jmp
fwait
xor
aam
ja
popf
pop
mov
mov
sub
or
lcall
aaa
pop
cltd
aas
pop
movsl
sti
jbe,pn
stos
mov
xchg
push
pop
inc
sahf
push
sbb
sub
mov
cs
ficoms
stos
xchg
push
cmpsb
pop
dec
pushf
insl
dec
divb
stos
sub
mov
mov
pop
test
inc
dec
cmp
jg
or
xor
test
clc
out
xchg
and
mov
sub
mov
in
jnp
mov
call
xchg
loop
pop
out
jns
or
sbb
mov
xchg
inc
je
out
mov
jg
push
cltd
cmp
xor
inc
lcall
sbb
clc
movsl
cli
mov
lock
or
shlb
or
sbb
js
fisubrs
dec
scas
pop
in
mov
int
add
mov
or
dec
ljmp
outsb
xor
aad
clc
test
ss
repnz
fwait
leave
ret
stos
out
popa
int
mov
lods
fwait
dec
pushf
cmpsb
ficompl
push
sub
cmc
mov
dec
mov
jno
push
mov
and
stos
mov
imul
mov
repz
mov
add
pusha
pop
mov
ficompl
into
push
scas
push
mov
sbb
cmp
mov
sti
pop
lods
cld
pop
jmp
ror
fmuls
xchg
das
and
int3
or
xchg
mov
jnp
add
inc
xlat
mov
jae
fistpll
movq
xchg
fistpll
jne
xor
pop
sbb
outsb
js
aas
jnp
jo
jecxz
cmp
xchg
nop
mov
clc
loopne
sbb
mov
aad
push
and
scas
push
xchg
cmp
stos
and
fsubrs
mov
xchg
jp
sbb
adc
int
mov
les
add
jbe
adc
cli
mov
int
fldenv
jecxz
adcb
adc
push
sbb
sub
adc
lods
pop
insl
xchg
jp
rolb
outsb
mov
jl
push
test
sbb
inc
test
push
cmp
push
inc
and
out
sahf
sub
pop
inc
lret
sti
sarl
jecxz
mov
imul
inc
dec
sbbb
test
jg
pusha
orb
subb
cmc
mov
adc
daa
dec
mov
cmpsl
push
fdivrl
fwait
andb
xchg
iret
ret
jns
mov
push
mov
fistpll
popa
sbb
lods
mov
movsb
addl
repnz
add
iret
ds
ud1
and
pop
sub
sbbb
les
dec
inc
sti
dec
mov
stc
jb
lds
stos
pop
cmp
je
sbb
fwait
sub
cmpb
sub
stc
outsb
dec
lock
dec
cmp
mov
or
adc
or
je
push
dec
xchg
jno
jae
xchg
dec
push
insl
pusha
hlt
and
sub
dec
jle
inc
or
xor
xchg
adc
cld
shlb
scas
inc
movsb
lods
mov
aad
cmc
dec
push
loopne
inc
push
stos
xor
ret
push
inc
lret
cmpsb
xchg
cmpsl
mov
test
mov
loopne
cmpsb
imul
fldcw
push
dec
ja
xchg
xchg
mov
sbb
xor
hlt
xchg
inc
mov
mov
jecxz
inc
pop
cwtl
pop
jge
mov
pusha
mov
dec
mov
mov
jp
out
pop
mov
mov
lods
mov
lcall
mov
aad
cs
sarb
sbb
cmp
outsl
inc
push
icebp
push
insb
mov
arpl
jg
adc
aam
add
cmp
add
xchg
jns
das
cmpsb
mov
dec
cmpsl
xchg
xchg
into
sbb
inc
sub
and
test
shlb
bound
in
mov
xchg
ljmp
movsl
ss
daa
xchg
jb
push
mulb
ret
in
pop
and
cld
std
inc
repnz
sti
leave
cmp
lods
pop
mov
xor
xchg
xchg
jbe
mov
cmp
out
xchg
mov
mov
movsb
pop
aad
pop
mov
cmpb
dec
and
fdivr
cltd
pop
adc
adc
mov
mov
inc
fildll
push
sbb
lahf
push
repz
out
ret
mov
jmp
sarl
adc
callw
dec
adc
cmp
fsubrl
mov
or
cmp
insb
sub
or
add
mov
xchg
daa
nop
add
shl
dec
in
sbb
daa
out
out
inc
mov
push
sbb
data16
xor
pushf
addb
shlb
cmpsb
mov
inc
sbb
push
jge
cmp
mov
je
cmp
addr16
and
movsb
adc
xor
repz
stc
rorb
cmc
into
mov
sahf
add
mov
mov
jecxz
fs
inc
cltd
mov
pop
xchg
mov
pop
mov
sbb
or
daa
sub
mov
sbb
inc
xchg
mov
cmp
push
aad
pop
cmp
adc
xor
aaa
or
mov
and
inc
dec
loope
aaa
jo
fs
int
jns
push
ds
inc
xor
daa
adcb
imul
pop
lret
jns
stc
jno
push
stos
mov
inc
sbbb
cmp
mov
and
adc
out
movsl
cmpsb
push
dec
sbb
fbstp
idiv
sbbl
into
sub
mov
inc
js
in
loopne
xchg
push
stos
icebp
inc
dec
jnp
pop
cmp
mov
in
mov
lock
adc
inc
push
lea
jmp
in
add
cld
mov
pushf
sub
adc
xchg
stos
xor
pop
fstpl
and
popa
pop
lret
nop
inc
mov
jno
test
ljmp
push
dec
dec
ja
test
stc
mov
jg
frstor
mov
aam
jno
stc
fs
nop
addr16
pop
xor
cmc
pop
mov
outsl
iret
fidivs
ss
and
and
fistpll
sahf
fdivr
pushf
ja
mov
enter
jns
mov
loopne
or
pop
imul
dec
orb
push
outsb
fldenv
icebp
insl
jl
xor
xor
pop
loope
inc
lcall
push
daa
mov
xchg
stc
cli
sub
push
aam
mov
outsb
inc
jle
add
out
movsl
pop
pop
xor
stos
pop
scas
jmp
gs
inc
nop
push
sbb
dec
outsl
ret
sbb
and
inc
aam
shll
lcall
xchg
cmpl
test
mov
sbbb
add
cmpsl
int
std
ja
cmpsl
fcmovbe
imull
xchg
cltd
ret
jae
cmp
je
cmp
bound
loopne
dec
xorl
cli
dec
adc
sbb
pushf
jle
aad
xlat
loopne
fdivrp
jbe
pop
daa
sub
jge
adc
push
fisttps
mov
das
outsl
and
mov
sbb
popa
test
xchg
es
xlat
push
and
push
xor
out
cmpsl
jbe
imull
or
or
iret
mov
adc
out
negl
mov
incb
and
int3
cmp
mov
insl
shlb
mov
ja
adc
pusha
pop
sbb
icebp
mov
mov
test
dec
xor
xchg
mov
inc
into
mov
add
jg
fucomp
movsl
and
enter
repnz
pushf
xchg
arpl
test
or
mov
in
fistpl
scas
test
add
in
push
push
sbb
xor
out
mov
mov
stos
and
out
push
imul
sbb
mov
and
rcrb
sahf
mov
cmpsb
cmp
aad
mov
and
or
sub
push
stos
sub
xchg
fisttpl
daa
test
sti
mov
pop
cmp
xor
call
filds
mov
fs
loopne
icebp
lahf
pop
mov
loope
inc
pop
int
push
xlat
outsb
lods
dec
mov
adc
jns
push
mov
shl
sbbl
lret
gs
ljmp
mov
add
sub
mov
repz
xchg
out
mov
xchg
or
sub
cltd
adc
sti
dec
bound
inc
std
pop
inc
push
or
jae
xchg
stos
lret
rol
loope
icebp
testb
adc
and
xor
inc
inc
push
push
popa
data16
addl
rcl
loope
icebp
testb
adc
and
xor
inc
inc
push
push
popa
data16
addl
sarl
out
testb
adc
and
xor
inc
inc
push
push
popa
inc
jae
addl
rcl
popa
data16
stc
out
mov
ss
fldcw
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jg
lcall
jb
inc
es
mov
xor
loop
rol
ret
xor
and
adc
add
bound
push
inc
es
mov
xor
xchg
rcl
ret
xor
add
sub
push
mov
xor
jecxz
shlb
mov
jae
add
inc
jne
stc
leave
daa
mov
inc
inc
xorl
or
sub
xchg
xchg
sub
pop
xor
sub
mov
arpl
leave
mov
imul
bound
xor
adc
add
adc
repnz
mov
or
pop
popf
emms
mov
push
push
jae
popf
arpl
inc
mov
adcb
jg
loopne
cmpsb
cmp
fsubr
in
ret
clc
loope
push
add
inc
jb
repnz
insb
addl
mov
and
cmp
call
dec
mov
cmpsl
xchg
out
jl
loop
mov
rcl
cmp
xor
and
adc
jb
arpl
cli
inc
inc
mov
mov
xchg
repz
jecxz
shll
pop
push
push
insb
inc
sbb
pop
pop
inc
and
rol
jecxz
ret
repz
xchg
xor
dec
push
pop
leave
pusha
sbb
add
ds
insl
mov
jecxz
div
out
roll
mov
xchg
inc
jb
jo
jbe
jnp
inc
bound
push
inc
inc
mov
mov
xor
loop
rcl
ret
xor
and
adc
add
bound
push
inc
inc
mov
mov
xor
loop
rcl
ret
xor
or
xchg
jbe
sbb
clc
sbb
inc
sbb
cmp
jno
insb
jo
flds
in
inc
adc
lahf
enter
push
imul
popa
pextrw
shll
movsl
cmpsb
mov
push
sti
push
je
xchg
mov
mov
and
and
inc
stos
sub
repnz
push
sbb
aaa
addr16
dec
mov
push
add
cmp
enter
mov
inc
pop
orl
insb
jge
mov
pop
push
xor
push
add
fsubrl
mov
push
jae
adc
leave
mov
sub
iret
out
int3
mov
jno
jp
sbb
lods
and
repnz
mov
mov
cmp
and
xorl
pop
std
aaa
and
and
inc
push
movsl
subb
hlt
popf
mov
mov
imulb
lahf
repz
leave
mov
pop
pop
or
cld
arpl
stos
push
mov
push
dec
adcb
jle
pop
jmp
adc
and
or
hlt
add
mov
jp
fdiv
lods
lahf
inc
push
jmp
pop
mov
ljmp
mov
mov
lret
pop
pushf
push
cltd
scas
std
insb
pusha
js
xchg
bound
enter
sub
jle
add
xor
stc
lret
push
dec
es
xor
mov
or
out
loope
js
xor
jge
repnz
out
dec
push
sub
and
add
sbb
mov
sub
push
ljmp
jnp
roll
xlat
cltd
pushf
lahf
les
or
jns
push
mov
jp
or
cmp
pop
and
mov
ljmp
pop
mov
xchg
mov
push
jl
sahf
xor
popf
adcl
arpl
aam
cltd
je
pop
shlb
fs
jge
mov
push
sub
scas
filds
or
pop
xchg
aaa
or
cmp
out
fldl2t
mov
xchg
dec
pushf
iret
rsqrtps
adc
xlat
repnz
mov
add
push
cmc
ficomps
push
dec
pop
call
and
mov
adc
sub
xor
mov
clc
addr16
out
sbb
push
dec
add
xor
movsb
inc
sbb
shll
add
imul
test
inc
dec
sahf
div
dec
arpl
cmp
jns
and
jmp
add
mov
aam
clc
adcb
shlb
lret
jo
jmp
into
jae
js
adc
xchg
fiaddl
push
stc
xor
pop
out
xor
repz
dec
push
jecxz
jnp
jl
xorb
pusha
mov
mov
xor
jmp
shl
jge
sub
xor
mov
lds
das
add
or
shl
dec
xchg
xchg
inc
into
cmp
rcll
sbb
icebp
sub
lea
cmp
push
insl
xor
ror
mov
xchg
mov
or
pop
clc
ja
xor
xchg
pop
popa
hlt
int3
push
mulb
and
imul
les
cld
mov
sbb
clc
xchg
cmpsl
loope
pop
xchg
and
negl
leave
and
sti
lret
fcmovnbe
fisubs
int
mov
les
test
cmpsl
adc
xchg
rolb
xchg
in
std
gs
dec
ret
mov
jl
jb
mov
dec
xchg
loope
xor
cmp
add
and
int3
rep
sub
inc
fnstsw
flds
add
mov
push
mov
inc
or
insl
repz
arpl
dec
cmpsl
movsb
loop
add
jp
xchg
or
fcomps
mov
xor
pop
push
orb
std
push
nop
mov
int3
mov
dec
pop
aad
ss
mov
sti
fmull
das
jle
mov
dec
in
cs
lret
push
bound
add
cltd
mov
int3
out
enter
push
add
jg
or
rcrl
or
xchg
cli
dec
std
in
jo,pt
add
sub
cmp
cmpsl
arpl
pop
sub
add
inc
or
sahf
cltd
int
hlt
jmp
push
cmpsl
loopne
cmp
mov
popf
push
ljmp
nop
test
jecxz
inc
push
movsl
test
fs
cs
cmpsl
jne
gs
adc
hlt
cmpsb
sahf
into
adc
mov
stc
dec
inc
cmpsl
xchg
mov
sub
inc
rcrb
xor
cmpsl
ds
cmp
jmp
sub
push
mov
mov
cmp
pop
add
out
push
xorb
pop
loop
mov
or
out
or
imull
mov
xor
cmpsl
call
sahf
or
shlb
adc
add
xor
push
push
sarl
mov
adc
popf
mov
in
incl
nop
mov
xor
into
pusha
sub
outsb
bound
sub
mov
fnclex
into
out
sahf
ret
mov
clc
leave
sbb
adc
add
dec
mov
dec
sbb
adc
or
pop
cld
rorb
dec
ljmp
and
or
ja
cmp
adc
mulb
fucomip
pop
mov
push
pop
push
daa
cli
repnz
into
inc
ret
data16
movsl
inc
out
and
push
pop
scas
pop
adc
mov
sub
fdivr
mov
pop
ljmp
sarb
jb
bound
dec
insl
fnstenv
inc
mov
sbb
xor
lahf
push
gs
jge
mov
mov
lds
lods
test
shlb
call
scas
aas
outsb
jge
fistpll
lahf
jo
pushf
cmpsl
lods
inc
push
cmpsl
cmpsl
movsl
jae
movsl
jnp
cmp
and
ljmp
sub
xorb
mov
jle
pop
xchg
pop
and
outsb
lea
cmp
xlat
cmp
jae
notl
testl
inc
xchg
leave
push
imul
inc
mov
xchg
mov
jl
lcall
leave
cmpsl
cs
dec
inc
xor
cmpl
and
gs
test
inc
test
adc
scas
scas
mov
cltd
and
stos
jno
mov
fcomps
nopl
fistps
push
out
es
or
pop
into
in
cmp
or
adc
sub
push
pop
rcl
mov
jmp
cmp
dec
mov
jbe
lea
sub
iret
mov
mov
std
pop
cmp
pushf
fldcw
scas
loope
insl
clc
outsl
iret
fadds
ja
pop
subb
xchg
jmp
fnstsw
sbb
test
add
flds
add
add
mov
pop
test
fcmove
sbb
jnp
sub
lcall
fsts
xor
fwait
xchg
adc
or
iret
aad
fs
loopne
push
dec
ret
pop
in
xor
ret
adc
xor
in
push
mov
xchg
mov
xor
xchg
or
cmp
lock
shll
jne
pop
or
popa
xlat
and
dec
repnz
and
xor
out
xchg
jecxz
pop
hlt
sahf
add
mov
cmp
repnz
push
sar
mov
into
aaa
sub
lcall
gs
imul
or
mov
shll
cmp
cmp
stc
adc
scas
out
dec
push
pop
in
dec
mov
add
sub
and
inc
adc
or
pop
inc
cmp
push
mov
out
jl
addr16
sbb
xchg
push
dec
jge
add
lret
cmp
movsl
xchg
xchg
or
daa
repnz
aas
data16
jge
cmp
sub
sti
jmp
out
pop
sub
adc
jo
xchg
mov
dec
cmp
dec
push
jg
jo
add
pop
pop
inc
cmp
add
push
push
js
out
es
enter
dec
jle
cwtl
fdivp
and
pusha
in
dec
add
repz
push
push
je
outsb
sti
in
pop
adcb
cmpsb
xchg
mov
sbb
pop
cmp
fcoms
cli
sub
xchg
dec
rorl
push
stos
movsl
and
stos
cltd
stc
jno
mov
lahf
insb
mov
adc
imul
cmp
mov
cld
inc
gs
insb
clc
dec
dec
leave
cmp
pusha
inc
hlt
insb
pop
mov
bound
nop
lock
pop
lahf
xor
cmp
mov
mov
leave
pop
mov
stos
inc
loope
test
mov
push
and
add
mov
jo
pop
mov
cmp
ret
insb
out
or
in
mov
daa
leave
ret
mov
test
lret
mov
jbe
mov
outsb
les
mov
cmp
push
sub
andb
inc
cmp
add
loopne
or
shrb
sub
sbb
inc
cmpsl
ret
mov
dec
push
and
sub
test
push
sbb
mov
enter
dec
testl
and
test
dec
jp
out
mov
fs
fwait
int
sbb
mov
xchg
mov
dec
mov
cmp
xchg
mov
adc
cmpsl
pushf
shl
subl
cmc
jns
jmp
std
pop
test
cmp
cmp
lahf
scas
ljmp
sub
movsl
cmp
inc
adc
jle
fs
int
push
aaa
lahf
call
nop
cmc
fldl
mov
cmc
adc
adc
pop
shll
and
pusha
cmc
jp
inc
xor
icebp
mov
adc
and
fnstsw
jg
push
sbb
cmp
and
inc
fucomp
jl
lock
or
or
cmp
shrb
lods
insb
sti
or
movsl
and
mov
int
mov
xchg
cs
cmp
sarb
mov
lods
push
out
jg
and
js
dec
push
pop
test
xor
mov
mov
mov
mov
dec
xor
sbb
call
and
lock
cmp
incl
push
push
mov
fidivrs
inc
push
mov
mov
mov
xor
jns
and
mov
ljmp
repnz
scas
push
enter
dec
pusha
jno
xor
add
mov
test
lods
or
xor
mov
insl
sbb
les
push
lret
jae
add
xchg
or
adcl
mov
add
mov
loop
cmp
jb
jbe
mov
dec
and
mov
addr16
sbb
aad
enter
bound
test
adc
dec
and
repnz
mov
ret
hlt
cmp
cmp
popf
cmp
push
mov
test
jb
aaa
popf
movsb
lods
and
daa
enter
mov
ret
ljmp
mov
adc
adc
inc
xchg
or
mov
popa
sub
push
or
xor
jp
ljmp
out
sbb
pop
ret
sub
jmp
stc
into
aam
aas
xor
cmp
mov
adc
pop
cld
push
loopne
sbb
pop
push
pop
gs
push
stos
adc
jns
push
xlat
jmp
iret
loop
or
insl
pusha
clc
sti
dec
sub
pcmpeqd
cmp
dec
inc
inc
pop
sub
sub
popf
notb
push
add
lods
inc
mov
dec
jb
cmc
in
sarl
add
out
mov
mul
subl
dec
and
enter
sahf
test
push
sbb
jo
cltd
push
mov
aas
ljmp
ret
jl
push
or
repz
sbb
scas
outsb
cli
or
mov
shlb
mov
fwait
jge
clc
fiadds
popa
cmpsl
push
mov
fmuls
arpl
mov
hlt
outsb
mov
loop
aad
outsb
rol
cmpsl
rcr
rol
or
lods
pushf
cltd
aaa
lods
and
fnstenv
push
andl
xor
xor
or
mov
scas
push
inc
push
jl
and
fstps
push
or
dec
jmp
cmp
mov
adc
add
fdivs
jnp
or
mov
sbb
fildll
je
mov
ja
je
iret
add
adc
and
push
jmp
jle
cmp
xor
xchg
jae
mov
xor
push
imull
repnz
jne
divl
cmp
xlat
xchg
mov
filds
cmp
rorb
hlt
push
push
dec
and
inc
and
mov
inc
xchg
adc
int3
fistpl
flds
push
dec
xchg
ss
dec
inc
push
sbb
out
into
mov
mov
sbb
shlb
mov
ret
and
stos
ret
mov
loopne
ret
sbb
inc
int
pop
jne
orb
adc
xchg
jg
fmuls
xor
out
jns
sti
sub
fmull
pop
call
dec
add
lret
mov
dec
icebp
popa
push
inc
jne
jne
and
cmp
rclb
dec
lds
in
adc
inc
mov
push
fldenvs
or
arpl
rcrb
sbb
addr16
mov
cmpsb
mov
leave
xor
roll
push
ret
stc
mov
in
mov
sub
out
cmp
and
cmp
mov
mov
repz
ret
dec
hlt
add
inc
jne
outsb
cmc
inc
in
mov
mov
push
pop
movsb
xchg
in
testb
cmp
icebp
dec
arpl
mov
add
popf
push
sarl
cmpsb
ret
and
sub
fldenv
adc
mov
push
mov
push
sbb
xorb
push
pop
outsb
psraw
sbb
cwtl
xchg
mov
push
mov
jnp
cltd
movl
nop
sbb
ficompl
pop
out
push
and
cmp
inc
je
je
test
mov
jl
mov
pushf
push
insb
jg
push
pop
enter
iret
mov
outsl
incb
fildl
mov
rcl
xchg
push
fnsave
mov
test
popa
cs
sti
xor
jmp
add
rorb
popa
stos
dec
adc
test
sub
test
or
lcall
aad
test
inc
and
xchg
in
push
lods
push
ror
movlps
mov
push
jns
aam
mov
inc
mov
rorb
pusha
mov
xchg
shrl
jl
mov
xchg
jmp
test
xchg
xchg
xor
fsubl
popa
cmp
test
and
push
mov
xchg
inc
movsb
test
clc
and
cmpsb
ljmp
add
or
test
inc
push
inc
scas
nop
jbe
sub
push
jne
sbb
cli
pop
imul
aad
fidivl
data16
add
mov
pop
out
fs
ja
and
leave
pop
movsb
out
call
add
pusha
adc
lret
shl
ret
add
sub
mov
shll
ja
add
sub
into
imul
cmp
test
mov
je
adc
pop
out
add
jb
add
and
pop
cmp
rcrb
nop
rcr
lock
test
sahf
xchg
or
jg
adc
jne
cmp
stos
fsubl
sbbb
mov
fcom
pop
mov
test
adc
push
imul
jbe
xor
and
lods
xor
push
xchg
adc
xchg
dec
xor
orb
js
pop
out
jno
push
add
lret
xchg
loop
mov
in
inc
sbb
push
push
and
loop
scas
addr16
mov
xchg
faddl
and
ffree
ffree
inc
arpl
jmp
movsb
movsl
ss
cmp
dec
int3
shr
xor
mov
fmull
add
and
push
cmp
shr
es
fnsave
sbb
cmp
je
dec
xor
cmp
mov
mov
imul
jge
xchg
push
or
mov
repnz
loopne
in
nop
mov
and
cmp
lcall
dec
inc
ljmp
mov
jbe
dec
mov
imul
inc
push
and
scas
push
xchg
push
and
and
popf
dec
in
rclb
dec
int3
dec
jmp
cmp
adc
je
loope
sbb
je
inc
mov
sti
mov
xor
add
add
sbb
insl
fidivrs
fcoms
out
lock
ss
aad
inc
mov
leave
ret
test
sbb
mov
inc
sbb
dec
inc
mov
int
lahf
inc
adc
addr16
movsb
sbb
lret
hlt
add
test
in
int
or
dec
pop
inc
sti
push
std
stos
inc
xchg
decl
out
push
aaa
mov
aad
addr16
popa
inc
xor
out
div
or
outsl
xor
jecxz
push
call
ds
or
fbstp
movsb
ja
loopne
xor
and
ds
subb
or
inc
mov
lret
imul
mov
push
push
lahf
cmpsl
sub
mov
xor
adc
and
int
jno
and
or
inc
xlat
add
dec
push
push
mov
popa
decl
ljmp
inc
ret
sbb
or
je
rorl
sub
in
xchg
push
and
xchg
xchg
mov
insb
ret
sbb
cltd
adc
loopne
pushf
daa
push
pop
jnp
mov
inc
mov
dec
sbb
std
data16
rcl
orl
push
inc
pop
xchg
insl
imul
test
sti
xchg
mov
inc
push
mov
add
and
xor
push
mov
cld
pop
sarb
xchg
rcl
mov
push
pop
mull
loope
cmpsb
into
and
pop
ds
scas
push
lock
insb
inc
outsl
xchg
lea
ja
lret
push
add
lcall
loopne
push
jl
pop
sub
fldenv
xor
push
lcall
dec
inc
push
jmp
call
and
cwtl
out
xchg
rorl
aam
xchg
std
xchg
das
insb
rorl
fnsave
jae
sbb
jns
jae
mov
and
mov
fsqrt
das
and
filds
pop
ret
imul
xchg
loope
xchg
xlat
jecxz
add
das
movsb
xchg
lods
pop
lcall
jl
ret
pop
scas
mov
lock
mov
testl
pop
xchg
aam
test
inc
movsl
sub
cmp
stc
jne
pop
inc
adc
sub
ss
lock
lahf
sub
adc
adc
or
call
clc
mov
sahf
outsl
pop
jo
jnp
dec
andb
fildl
loopne
lcall
in
xchg
jmp
lret
ret
gs
pusha
pop
mov
and
cmpsb
add
daa
fwait
je
and
jbe
popf
adc
mov
leave
mov
cltd
fs
jmp
adc
jl
sbb
sub
pop
mov
inc
ljmp
out
push
test
mov
sub
shll
cmp
ret
ret
cmp
lock
lahf
fistpl
mov
aaa
mov
inc
xchg
loope
and
test
neg
in
fcomi
cmpps
jns
outsb
fildl
adc
dec
lds
test
fsts
dec
jmp
pop
lret
add
adc
xlat
insb
clc
enter
out
inc
jnp
inc
or
fcompl
or
mov
xchg
and
jmp
cmpsl
cmp
addr16
push
xor
dec
or
fs
and
push
daa
adc
xor
mov
cmpsb
adc
or
jnp
jg
sub
int3
dec
cmp
outsb
lds
push
jno
jl
mov
fdivs
std
fs
repnz
enter
fdivr
or
jnp
in
add
sub
std
test
xchg
xchg
ds
movsl
out
add
outsl
mov
or
or
dec
repz
mov
fisttpll
push
scas
lods
dec
dec
adc
lods
sub
lock
popa
ss
bound
lfs
add
sbb
and
mov
lods
cs
aaa
shlb
mov
lahf
mov
push
enter
mov
lds
sub
outsl
fcompl
js
dec
ds
gs
ret
inc
or
sbb
in
adc
imul
mov
jno
sahf
pop
jb
add
or
xor
lret
dec
ret
mov
jno
push
in
xor
inc
cmp
leave
lods
movsl
xchg
adc
push
and
adc
or
fistpl
xchg
scas
push
lcall
dec
sbb
scas
inc
data16
fimuls
nop
push
inc
outsb
push
and
cmpl
mov
sarl
and
lea
jecxz
lret
leave
adc
bound
ja
or
imul
lret
jae
scas
lds
fcmovnu
xchg
stc
xlat
addb
pusha
aad
sbb
push
cmpsb
call
int3
sbb
sub
jbe
push
jp
mov
fimull
daa
scas
stos
nop
adc
lods
and
push
ret
decl
in
pusha
mov
scas
cmp
cli
rorl
arpl
lahf
push
repz
adc
lahf
lea
xor
adc
pop
and
cmc
cmc
mov
dec
pop
add
adc
mov
mov
xchg
repz
xchg
sahf
lea
xor
xor
lcall
or
js
test
pop
ret
add
mov
xor
and
insb
cs
sbb
inc
insb
in
xor
test
bswap
sahf
dec
fistpll
test
repnz
fucomip
clc
fwait
push
int
popa
cmc
jbe
jg
cmp
dec
adc
mov
mov
or
sbb
mov
sub
data16
in
enter
test
inc
stos
roll
mov
cmp
push
add
sarb
xor
les
mov
lock
stos
dec
movsl
cmpsb
add
sbb
pop
popa
adc
pusha
test
fs
loop
pushf
mov
pop
dec
mov
popa
in
sbb
shl
loope
sub
adc
pop
ss
test
lods
mov
lret
ss
mov
fildl
xlat
data16
incb
adc
mov
adc
or
pop
adc
enter
int3
sbb
test
ljmp
lods
shl
aam
cltd
mov
pop
xchg
arpl
pop
pop
jb
in
enter
lods
jnp
add
add
pop
mov
xchg
pop
sbb
fcomps
cmp
sbb
std
fimuls
or
mov
sahf
inc
pop
fmull
push
hlt
jae
mov
lret
fwait
orl
adc
add
bound
push
inc
inc
mov
mov
xor
loop
rcl
ret
xor
and
adc
add
bound
push
inc
inc
mov
mov
xor
loop
rcl
ret
xor
and
adc
add
data16
inc
inc
mov
mov
xor
sti
jecxz
shl
ret
sub
push
and
jae
arpl
ret
mov
or
xchg
xor
jnp
sbb
sub
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
add
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
test
add
je
add
insb
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
push
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
push
add
cld
push
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
pop
pop
add
push
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fmull
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
or
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
or
add
or
add
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
