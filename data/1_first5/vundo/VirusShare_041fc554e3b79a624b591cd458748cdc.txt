add
pushl
call
mov
push
call
mov
shr
push
not
and
push
push
push
pushl
call
push
call
mov
push
push
push
mov
push
pushl
call
push
xor
pop
mov
cmp
jb
mov
dec
jns
inc
push
push
push
push
pushl
call
mov
call
pop
xor
pop
inc
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
push
push
mov
push
mov
push
pushl
mov
call
cmp
jl
cmp
jle
xor
inc
mov
cltd
mov
idiv
push
pop
mov
mov
cltd
idiv
push
pushl
lea
push
push
call
add
push
lea
push
push
lea
push
push
push
call
lea
push
push
pushl
call
mov
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
push
mov
jne
push
call
xor
push
push
push
push
pushl
call
push
call
test
je
orl
jmp
andl
push
push
push
push
pushl
call
mov
push
push
push
mov
mov
mov
mov
in
sbb
dec
call
add
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
push
push
mov
movb
mov
movb
movb
mov
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
add
mov
mov
pop
cmp
je
cmp
jle
push
mov
call
pop
mov
jmp
mov
mov
mov
movzbl
sub
inc
test
jne
call
mov
movb
mov
movzbl
sub
je
pushl
incl
push
call
pop
pop
jmp
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pushl
call
push
mov
call
xor
cmp
setne
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pop
pop
pop
jmp
lea
push
pushl
call
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
cmpl
mov
push
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
dec
add
add
dec
cltd
arpl
add
add
add
add
add
add
dec
or
sarb
cmp
add
add
add
insb
add
add
add
subb
add
sub
clc
add
add
push
pop
push
ja
jae
inc
jae
dec
les
mov
mov
mov
jecxz
jne
leave
fwait
js
aas
inc
adc
xor
push
push
mov
pop
mov
sub
test
test
call
loope
sbbl
or
mov
jno
mov
cmp
lcall
push
call
inc
js
jge
push
push
add
add
xor
test
loopne
add
adc
je
push
dec
rorb
push
and
call
incl
push
repz
add
push
add
test
xor
enter
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
repnz
add
push
add
and
jbe
inc
add
outsb
gs
adc
push
popa
inc
inc
add
popa
je
inc
outsb
gs
inc
dec
mov
gs
add
popa
dec
insb
imul
gs
insb
gs
add
inc
outsl
jb
xor
jb
out
inc
add
add
adc
add
add
add
ljmp
jo
add
add
add
push
dec
je
adc
pusha
mov
jg
mov
int3
jne
ret
or
add
mov
push
data16
xchg
fldt
sbb
pop
push
test
jo
adc
mov
jl
mov
lock
test
daa
mov
ljmp
mov
and
jp
idivb
or
ss
inc
jmp
orl
dec
mov
xor
and
outsb
test
mov
mov
sbb
cmpsb
pop
mov
mov
stc
and
enter
sbb
pop
pop
repnz
cltd
pop
inc
pop
mov
loop
scas
and
cwtl
jnp
xchg
and
mov
lea
ficompl
call
arpl
pop
in
out
cld
aas
rol
pop
cmc
sub
lcall
jge
mov
jmp
ljmp
icebp
in
mov
inc
pop
mov
sbb
js
push
lock
cmp
push
mov
inc
mov
aas
andb
lahf
push
mov
sahf
sti
aaa
push
lods
js
pop
ret
jle
adc
mov
ja
leave
lds
cmp
jns
or
jl
test
mov
sub
leave
out
lods
sahf
cmp
pop
lret
adc
or
inc
enter
lods
aaa
pop
cld
mov
imul
mov
inc
stc
and
sbb
inc
and
int
dec
and
lcall
mov
dec
sti
sub
mov
cld
out
gs
push
mov
push
es
adc
cmp
dec
jg
cmp
int3
loope
int3
nop
adc
or
push
fdivp
lcall
cmpsl
dec
push
cmp
fwait
stos
push
xlat
in
clc
add
sub
jns
sti
sub
lea
cmp
dec
lret
cmpsl
fwait
dec
xor
or
xchg
push
jnp
push
xor
push
push
cltd
and
jb
aas
sbb
std
inc
mov
fcmovnu
pop
je
jmp
pop
imul
call
mov
and
pushf
les
popa
push
dec
xor
out
test
dec
ja
std
mov
js
dec
jle
push
mov
inc
or
orl
adc
movb
add
push
dec
imul
jo
cs
addr16
push
or
jg
mov
mov
popf
ffree
rorb
jae
xchg
push
popa
pop
sarl
rcrl
data16
push
testb
into
adc
xor
test
mov
aam
out
mov
lahf
popf
stos
mov
mov
clc
mov
pop
rcrb
xor
int3
xchg
fists
repnz
fwait
jmp
pop
pop
jl
lock
sub
repnz
push
fisubrl
aas
sub
test
sbb
daa
lds
mov
push
xor
adc
cli
push
xor
aas
pop
pop
fwait
mov
mov
jmp
inc
repnz
jne
add
add
popf
mov
insb
cli
rclb
adc
jae
roll
jnp
orl
cmc
out
mov
cmp
fadd
cmpb
add
lret
or
stos
in
and
loopne
mov
push
push
test
cmpsl
inc
inc
testl
test
daa
mov
and
fsubrs
adc
sbb
fmull
mov
dec
loop
mov
add
or
and
stos
test
sarl
out
push
pop
jns
xchg
je
or
or
push
push
cmp
lock
shr
mov
aaa
cli
fdivrs
inc
xchg
adc
add
out
and
das
aam
mov
arpl
add
je
test
fwait
dec
cld
out
lods
ljmp
stos
pop
test
mov
outsb
and
test
insl
xorb
xlat
dec
pop
lret
hlt
adc
jae
mov
jle
sub
or
cmp
inc
pop
add
lret
dec
push
adc
jle
adc
test
xchg
xchg
mov
fcmovb
add
rcrb
rcll
push
ret
jg
mov
movl
add
enter
inc
popf
outsb
mov
mov
shrb
mov
mov
pop
mov
and
push
inc
fstpl
fcoms
jp
cli
xor
jmp
push
daa
fnstsw
adc
cmpsl
xor
xchg
xor
mov
adc
sbb
iret
mov
sub
add
mov
mov
mov
jg
inc
imul
cmp
in
or
loope
subb
ljmp
add
mov
enter
aas
bound
out
ret
popf
inc
movzbl
and
lea
ffreep
sub
push
addb
cmc
icebp
inc
mov
mov
push
push
ret
popa
out
lcall
and
out
mov
mov
push
cli
jge
das
mov
and
or
inc
pop
jb
and
les
daa
jns
imul
mov
push
out
mov
rol
test
fdivl
and
pop
insl
jae
fisttpll
xchg
jp
hlt
stos
mov
xor
sbb
sbb
lods
mov
push
adc
xchg
add
bnd
inc
jbe
jo
or
adcb
in
es
push
out
call
add
hlt
out
scas
push
push
xor
pop
je
rol
add
nop
push
ds
je
ficoms
repz
mov
cmp
add
mov
add
outsl
shll
xor
or
lods
inc
sbb
es
mov
or
jae
sbb
popa
push
shlb
test
movsb
xor
xor
scas
pushf
or
cwtl
mov
mov
js
mov
call
cmp
mov
pop
clc
cld
pop
insb
or
rol
push
cmp
fiaddl
ljmp
push
sub
mov
xchg
outsb
cmpsl
pop
sub
inc
les
repnz
xchg
jle
test
adc
pop
add
xchg
dec
add
lret
xchg
jecxz
add
jecxz
andb
out
cli
cmpsb
jl
inc
jne
mov
inc
stos
mov
out
pop
cmp
popa
repnz
imul
cs
sub
pushf
fidivrl
gs
jle
mov
sbb
in
sbb
inc
xor
sbb
popf
mov
mov
int3
mov
xor
mov
mov
xor
adc
test
lods
add
xor
fdivrl
jg
or
and
and
cld
mov
dec
add
cli
fldcw
out
incl
cmpsb
hlt
mov
and
jnp
filds
sub
mov
lahf
arpl
je
jge
loope
mov
xchg
dec
popf
fcoml
mov
mov
js
push
pushl
repnz
movsl
xchg
pop
test
push
and
sub
imul
sar
roll
pop
inc
popa
int3
cmp
popa
movsb
sbb
nop
inc
mov
or
xor
aaa
sti
mov
and
jp
insl
xchg
scas
out
aad
lret
sahf
inc
push
jb
cltd
scas
call
inc
dec
idivb
xchg
mov
xor
xchg
mov
das
dec
das
imul
and
cld
insb
push
mov
cmp
dec
lods
int
sbb
sbb
fdivl
add
jp
ds
aam
popl
insl
xchg
movsl
mov
shll
call
sbb
int
ret
jae
stos
imul
sbb
les
call
shrb
xchg
pusha
stos
icebp
push
xor
adc
pushf
aaa
sbb
xor
push
mov
not
popf
out
mov
xchg
outsb
xchg
loop
and
jge
lea
cmp
pusha
roll
add
jmp
jnp
adc
loope
lret
pop
or
sti
xor
dec
dec
adc
imul
push
cmpsb
mov
pop
add
xor
mov
bnd
pusha
clc
cmp
xchg
or
sub
and
pop
fsubrl
cmc
sub
pop
and
xor
sub
xor
aam
cmp
sahf
push
dec
lods
loop
mov
les
pop
lahf
add
mov
fimuls
cs
jne
gs
dec
pop
xchg
rcr
imul
fld
cwtl
xchg
pop
jae
jnp
mov
adc
mov
sar
mov
xchg
dec
ffreep
fbld
and
data16
ja
hlt
std
add
adc
addl
lds
pop
mov
dec
inc
adc
xchg
pop
mov
xor
inc
stos
je
xor
mov
lahf
xchg
xchg
push
ret
jmp
xor
push
push
ret
or
mov
cmpsb
rcl
cmp
cmpsb
les
in
cmpb
inc
std
lahf
inc
inc
sub
subb
xchg
push
cmpsl
or
nop
out
pop
sti
rclb
push
orl
ja
clc
loop
je
in
pop
popa
psubsb
adc
push
sbb
fs
xchg
icebp
adc
xchg
cmp
inc
mov
xlat
fiaddl
and
jb
les
xchg
test
in
jmp
insb
cmpsb
mov
scas
mov
inc
loope
rcl
or
rcl
sbb
icebp
test
and
jb
add
mov
outsb
add
inc
loopne
jge
sub
xchg
fldenv
inc
push
data16
lods
mov
sbb
or
pop
fs
cmc
mov
int
lock
xor
cmp
into
mov
and
sbb
lods
cmp
cmp
addl
enter
cmp
adc
add
xchg
xchg
sub
fldcw
in
mov
test
inc
aam
outsb
pop
loope
adc
lods
sub
sub
jl
dec
and
sub
in
or
test
ss
test
sub
fldcw
aam
cmpsb
filds
mov
xor
movsb
aam
loope
scas
xchg
add
cmp
subl
dec
adc
mov
sub
mov
ljmp
jae
int3
add
enter
leave
popf
fistpll
push
add
mov
mov
sub
mov
pop
movsb
nop
jge
or
jle
fadds
dec
fsubp
insl
inc
in
pop
xchg
lea
xchg
cmp
std
inc
or
xchg
adc
lahf
push
or
adc
push
adc
sbb
jb,pn
arpl
inc
adc
cltd
daa
adc
and
ret
mov
cmp
inc
xchg
scas
add
jne
adc
movb
imulb
das
mov
loope
ljmp
arpl
and
jecxz
xchg
shlb
xchg
mov
dec
mov
addr16
mov
mov
and
fidivrs
push
sbb
mov
pop
adc
lea
sbb
mov
push
outsl
ljmp
push
jbe
test
popf
sbb
and
mov
push
mov
repnz
or
popf
xor
mov
xchg
adc
test
push
test
mov
pop
sbb
mov
loopne
xor
arpl
adcb
push
aas
fs
xor
bound
shrl
loopne
aas
pusha
sub
sub
rorl
bound
jecxz
call
xchg
daa
fcomp
ljmp
jl
mov
xchg
inc
mov
dec
je
in
jnp
xor
mov
repnz
ljmp
mov
add
mov
sbb
ffree
bound
cmp
sbb
jle
adc
jb
cmpsl
in
nop
test
imulb
lahf
mov
ss
les
push
push
pushf
jmp
movsl
jl
add
pop
ds
and
cmp
or
lods
insb
adc
jmp
out
lock
imul
push
add
neg
sub
cmp
mov
xor
push
int
ljmp
es
fcmovu
in
mov
pop
lret
loop
jo
lret
xchg
fldt
mov
sarb
arpl
push
mov
sub
adc
fs
pop
out
les
jge,pn
cmp
sbb
xchg
stos
scas
cmpsl
outsb
xor
fcmovb
jno
and
fiadds
shl
cmc
pop
pop
pop
rep
jmp
pop
jb
mov
or
fwait
pop
mov
stc
jp
rcr
mov
cmp
fwait
xchg
enter
cwtl
repz
incl
xor
ret
cmp
or
cmpsl
imul
es
ja
or
sbb
and
shrb
xchg
fcomps
lahf
out
or
sbb
cmp
movsb
movsl
scas
xchg
imul
adc
jge
movsb
sbbb
push
inc
ret
ja
or
enter
sub
xchg
in
add
xor
and
push
push
daa
in
adc
inc
push
or
js
mov
negl
lods
sub
sbb
mov
lcall
das
mov
cmp
push
popf
xor
movsl
lret
incl
in
movsb
popa
pop
mov
pop
aad
fsubl
mov
or
push
jae
dec
fsubrl
or
lcall
jb
push
ret
shr
adc
leave
shll
xlat
add
mov
lret
jg
pop
inc
nop
xor
or
pop
jle
cmp
roll
xchg
lock
rclb
daa
inc
testb
sbb
add
mov
fisttpll
dec
lock
bound
mov
add
xor
testb
aaa
daa
inc
js
pop
ljmp
add
sub
scas
cmp
incb
out
mov
dec
test
push
fsubr
aad
arpl
add
xchg
or
mov
insl
mov
inc
inc
xchg
aas
fistpl
or
sti
and
test
adc
movsl
rcrb
add
xchg
mov
jg
jnp
aas
rcll
cwtl
dec
sti
mov
je
cmp
cli
imul
imul
test
lret
loop
fmuls
xchg
repz
fistpl
decl
mov
push
xor
ja
test
fisttps
shrl
mov
mov
sbb
cltd
lods
rclb
scas
call
mov
lahf
sub
push
add
push
adc
or
ljmp
fld
ljmp
dec
adc
xor
mov
les
outsl
popa
mov
cs
sbb
js
push
add
pop
out
sbb
push
push
cmc
xchg
lods
fidivl
pop
adcb
pop
or
clc
sub
rorb
mov
dec
daa
nop
and
sub
jl
fisttpl
mov
imul
or
or
iret
push
and
stc
aaa
stos
pop
cld
push
mov
cmp
imul
aas
dec
into
negl
adc
cmp
mov
mov
or
xchg
xor
mov
mov
adc
push
push
test
adc
arpl
clc
xor
xor
mov
adc
jo
pushf
ljmp
adc
jbe
mov
out
push
loopne
xchg
push
inc
cmc
sbbl
inc
rcr
inc
xchg
xor
mov
mov
mov
push
adc
mov
mov
lock
out
cmp
cltd
mov
or
frstor
iret
and
fadds
mov
or
inc
leave
jecxz
lret
inc
popa
popf
jl
repz
add
rcrl
loopne
repz
fcmovnu
or
mov
cltd
lock
xchg
sub
lea
js
xor
sub
jns
ret
mov
mov
pop
mov
imul
lcall
push
add
orl
sbb
pop
add
mov
xchg
mov
test
push
jb
xor
add
inc
add
insl
xchg
pop
movsl
jl
data16
sub
sbb
icebp
adc
jbe
or
sbb
test
orb
or
sub
mov
roll
xchg
pop
cld
sbbl
nop
cmp
iret
scas
aaa
xor
sbb
adcb
lret
cmpsb
push
cmp
dec
add
xchg
jmp
fbstp
add
test
clc
inc
xlat
mov
mov
jmp
or
test
push
cmp
adc
jno
mov
pop
stc
push
mov
rolb
push
mov
cld
pop
es
push
fmuls
rolb
xor
ret
add
xchg
mov
jmp
divb
jg
shlb
xor
add
xchg
lea
cmp
or
mov
xor
cmp
lods
lods
or
scas
mov
ret
stc
aam
daa
rcl
mov
mov
pop
rol
dec
dec
add
lock
loopne
cwtl
shlb
repz
shlb
pop
push
outsb
cs
adc
push
mov
sbb
shlb
sub
or
addr16
loop
leave
icebp
xchg
mov
insl
adc
data16
jae
into
mov
jb
shlb
cmc
cwtl
xor
pop
outsb
loop
push
out
mov
cli
dec
mov
inc
or
mov
movsl
jns
mov
mov
loopne
insl
mov
cmpsb
std
mov
scas
xchg
mov
outsl
in
test
out
imul
dec
bswap
xor
ja
sbbb
or
and
and
jb
xlat
adc
das
xchg
sti
arpl
pop
mull
push
shll
out
fdivrs
xchg
data16
out
mov
xor
push
mov
lahf
push
nop
test
int
stos
cmp
leave
repz
movl
pop
fstps
dec
pop
pop
insl
aas
ret
cmpsb
and
iret
mov
xor
mov
mov
pop
popa
fs
sbb
fcomps
dec
js
daa
rsqrtps
mov
cmove
ret
loop
lods
arpl
inc
insl
roll
xchg
hlt
push
mov
fs
outsb
std
cmp
insb
jb
test
jmp
adc
ljmp
or
xor
sbb
xchg
cmpsl
xchg
test
cld
aad
xor
sub
xor
pop
outsb
int3
cmovne
bound
fidivrs
push
xchg
pop
xor
mov
data16
push
add
mov
lcall
sub
daa
add
push
adc
xor
or
and
sub
in
data16
and
adc
or
in
mov
xorl
adc
or
out
out
and
push
sahf
push
andb
out
mov
sbb
sahf
dec
mov
ds
scas
mov
pusha
dec
dec
or
dec
xor
jb
push
and
and
inc
push
xchg
into
jge
jle
cs
jl
imul
xchg
insb
movsl
and
movsb
xor
pop
inc
popf
jmp
pop
jle
xchg
and
push
xchg
pop
push
paddusw
and
cs
pop
mov
jb
movsl
or
push
loop
movsl
pop
cwtl
mov
lret
out
subl
test
aaa
push
sahf
scas
scas
fistps
jae
sbb
adc
jmp
xor
nop
dec
fisubs
adc
cmpb
out
and
adc
aaa
lret
or
lret
jecxz
push
sbb
in
push
fmull
enter
xlat
popf
daa
pop
ljmp
jo
jmp
sahf
mov
mov
aaa
xchg
jno
lods
push
fnsetpm(287
loopne
jbe
in
call
sbb
add
bound
mov
mov
cmp
sbb
inc
test
pop
push
insb
mov
lcall
sub
push
lahf
loop
movsb
xor
aad
dec
shrl
nop
push
testb
lea
xor
push
push
inc
pusha
mov
cmp
leave
loopne
out
shll
adc
and
push
imul
cwtl
xor
mov
mov
dec
icebp
or
sub
dec
mov
add
and
pop
mov
mov
adc
add
mov
jns
mov
lahf
push
fistpll
hlt
stc
jle
xchg
adc
push
dec
or
mov
stos
xchg
adc
cmp
sub
dec
mov
or
ljmp
and
jb
jl
add
mov
out
cmc
test
shll
jecxz
xchg
inc
int
pushf
or
cmp
mov
sbb
inc
shlb
ss
fstps
scas
pop
rclb
popf
fiaddl
test
ljmp
xchg
or
cmpsl
je
pop
out
pop
dec
sub
mov
es
pop
sub
repnz
sti
push
and
cmp
pop
addr16
ljmp
hlt
pop
fcmovb
adc
mov
push
movsb
popf
aas
andl
clc
fsubrs
xor
mov
xchg
stc
je
lock
and
mov
and
mov
inc
daa
xchg
dec
aam
and
xchg
fildll
mov
dec
shrb
mov
sbb
jae
add
cli
add
pusha
add
push
add
add
fiaddl
add
add
add
add
add
add
add
add
roll
add
add
or
add
add
sbb
add
xor
mov
add
add
add
add
add
stos
stos
sbb
ja
mov
incl
add
add
add
add
push
or
test
add
add
add
lcall
add
sub
add
add
add
inc
mov
add
add
add
add
outsl
inc
jb
add
pop
add
push
cmpxchg8b
leave
cmp
fimull
or
push
pop
test
bound
in
push
incl
add
push
mov
incb
decl
push
push
push
push
xor
push
push
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
push
push
clc
decl
incl
lret
and
add
or
decl
cmpsb
incl
lea
clc
cmp
stc
sub
lea
lahf
adc
inc
jne
add
adc
in
push
mov
add
add
add
outsl
mov
imul
test
gs
inc
inc
inc
xchg
jae
add
jbe
je
arpl
mov
fs
ja
add
addr16
popa
add
sub
imul
push
inc
push
sahf
fiaddl
add
add
push
add
add
add
mov
popf
mov
inc
ror
xor
push
rol
push
cmp
loop
jbe
or
cmpsb
mov
lods
jo
ja
push
je
lret
dec
ficompl
cmp
jo
stos
sti
test
lret
cwtl
adc
xor
fs
jbe
in
ret
fcmovb
xor
cwtl
cltd
dec
push
add
jo
push
pop
adc
icebp
or
out
push
lret
jne
outsl
scas
cmc
cwtl
cmp
sahf
mov
xchg
adc
and
notb
arpl
iret
imul
popf
jg
lret
add
pop
adc
mov
jae
xchg
das
mov
cltd
sub
cmp
aam
xchg
cld
scas
iret
mov
push
imul
sub
daa
cmp
and
movsl
sbb
jge
aas
pop
xor
sub
mov
push
out
push
inc
data16
in
xlat
pop
arpl
stos
addr16
rcll
bound
adc
call
xchg
dec
adc
popa
pop
xor
lret
es
in
lret
lcall
fldcw
sbb
fstpt
std
in
xchg
xchg
mov
scas
hlt
nop
mov
add
xchg
pop
ret
add
xor
push
or
push
jp
std
lods
xchg
or
dec
icebp
mov
out
and
pop
mov
push
aas
xor
inc
aas
fnsave
into
aad
cmpsl
mov
sbb
movsl
jle
xchg
xchg
aas
xchg
fsubr
mov
iret
dec
lea
into
shr
fdivrp
jle
cmpsl
or
fistps
push
cmp
mov
aam
xor
fs
inc
outsb
inc
cmp
jle
mov
test
push
inc
pop
xor
rolb
and
cld
jp
call
sub
subl
inc
dec
and
rolb
clc
pop
add
pop
loop
xlat
rcrl
outsb
lea
cwtl
lahf
imul
sbb
push
mov
jnp
fnstcw
fwait
sbb
cmp
pop
popa
mov
xor
fcompl
lahf
test
popa
pop
xor
push
xchg
or
lret
ret
pop
pusha
or
push
sarb
jb
xlat
shrl
push
push
jmpw
xorl
outsl
stc
inc
lahf
xor
data16
repnz
std
cmpb
decb
xor
stos
add
push
dec
push
inc
js
out
inc
fstpl
cmp
push
lock
or
mov
push
icebp
sbb
sub
jae
lock
mov
sbb
fidivrs
mov
call
aad
vpshaw
jl
mov
js
js
xchg
rclb
into
xor
inc
imul
xchg
lcall
pop
stc
adc
push
inc
movsb
jle
sub
mov
mov
cltd
fmull
pop
fisubrs
roll
ficompl
pop
xchg
mov
cmp
outsl
cld
push
inc
es
sbb
mov
cmp
sbb
sub
sub
lds
iret
xchg
adc
pop
aas
push
fadd
fisubrs
jns
out
add
std
jne
out
pusha
mov
sub
popa
push
out
fwait
pop
scas
outsb
pop
adc
int3
jmp
add
aad
jmp
in
pop
lods
jo
push
mov
fdivs
xchg
add
mov
pop
pop
call
out
stc
xchg
sub
inc
out
or
ja
mov
ret
mov
xchg
leave
sbb
int
adc
xor
movsb
imul
xlat
push
test
mov
add
sbb
mov
cmpsl
mov
jb
adc
dec
mov
and
xchg
inc
add
roll
sahf
adc
in
aam
into
cmpsb
sub
addr16
cmp
mov
pop
data16
xor
leave
ret
hlt
test
in
mov
pcmpgtw
cmp
fbld
and
cmc
popf
popa
xchg
push
aaa
jge
loop
push
mov
jl
mov
test
pushf
enter
fmuls
hlt
mov
nop
jl
push
fisubrl
and
test
sahf
jmp
aas
leave
fisubrs
outsl
std
mov
aaa
dec
loope
mov
jbe
jb
jno
sbb
jns
ror
xlat
lret
lods
rorb
jno
loopne
pop
sti
adc
fwait
inc
jne
pop
pop
dec
scas
and
rolb
pop
sbb
mov
das
hlt
jg
cli
xor
loopne
add
jb
or
xchg
adc
and
out
cmp
jecxz
cmp
shrb
jbe
outsb
push
movsl
popf
mov
push
inc
and
mov
push
cld
jb
insb
pop
out
insb
sbb
add
sub
mov
pop
dec
jo
js
repz
lds
in
and
clc
push
repz
icebp
mov
cmp
addr16
xchg
xchg
enter
pop
ret
clc
icebp
outsl
addr16
cltd
clc
adc
outsl
adc
xchg
outsl
cwtl
iret
in
cmp
push
rclb
mov
cld
mov
shll
aaa
popa
adc
mov
fistps
sub
sub
negb
icebp
mov
jns
mov
push
int
stos
div
and
mov
loope
test
les
or
fimuls
xor
ja
lds
mov
or
arpl
mov
cmp
and
js
in
int
rorl
mov
mov
mov
xchg
add
leave
and
add
or
sub
aad
jne
pop
mov
lock
int
mov
movsl
out
jb
cmp
mov
inc
and
or
mov
cwtl
adc
call
or
scas
dec
pop
mov
push
mov
insb
push
mov
mov
pop
cwtl
push
or
leave
push
repz
ret
mov
sbb
fidivrl
xor
lds
mov
adc
jl
and
dec
xchg
push
or
jb
add
in
popf
lods
loop
pop
pop
sub
xchg
les
out
sahf
and
mov
adc
xor
add
cli
dec
mov
pop
fsubrl
jno
dec
push
outsl
mov
xlat
pop
add
test
cmpsb
shl
addb
in
into
push
in
cwtl
outsl
insl
inc
dec
stos
cltd
int3
push
pushf
and
mov
lods
mov
imul
push
push
scas
sbb
scas
pop
sub
dec
dec
jns
lret
xlat
ss
xlat
cmc
mov
push
jns
lock
push
ds
js
cmc
or
lods
and
mov
xlat
pop
fwait
pop
loopne
push
mov
adc
jmp
push
xchg
out
xlat
ficoms
loop
ja
xorb
fnstsw
lods
inc
push
out
daa
inc
out
sub
mov
sti
addr16
daa
in
add
add
insl
aaa
jno
ja
mov
test
or
xchg
in
testb
mov
les
cmpsl
iret
push
jge
dec
or
jg
addr16
arpl
jo
push
cwtl
and
in
push
add
dec
movl
andnps
enter
and
stos
pop
hlt
in
test
xchg
ljmp
adcb
outsl
js
xor
dec
ret
das
mov
jecxz
mov
mov
test
mov
xchg
pop
scas
mov
int3
pop
cltd
cmpsl
jo
daa
lods
mov
xor
sbbb
xchg
mov
dec
jae
lds
jle
stos
ret
popfw
fiaddl
and
xchg
xor
xchg
insb
mov
test
sbb
adc
scas
ja
push
push
cmp
xchg
rcll
shl
test
icebp
sbb
scas
fs
xchg
imul
jp
insl
jae
xchg
loopne
aas
nop
pop
cmp
lret
test
pop
out
xchg
repnz
out
les
jnp
cltd
add
movsb
fists
xor
jno
scas
out
outsb
push
jecxz
sbb
pop
sub
stos
push
andb
sub
outsl
daa
int3
dec
addb
outsb
into
fmuls
shll
int
xchg
inc
lret
scas
add
in
arpl
xchg
mov
push
xor
mov
ja
or
add
xchg
dec
cmp
push
adc
sbb
sub
outsl
xchg
dec
push
xor
dec
sahf
adc
iret
cmp
aaa
xchg
outsl
xchg
mov
jg
cmp
sbb
pop
js
or
pusha
rol
dec
cmp
loop
pop
scas
bound
leave
push
pop
stos
scas
mov
and
testb
fs
or
pop
mulb
inc
lret
in
jnp
jecxz
test
pop
hlt
pop
pop
dec
push
xchg
movsb
cld
fprem1
pop
mov
out
pop
ror
dec
call
xorb
xor
add
or
es
sbb
jae
lahf
cmp
out
mov
jnp
lret
int
aam
pop
pop
popf
mov
push
lock
addl
mov
sub
fadds
inc
sub
cltd
dec
insb
xchg
and
push
sti
pop
pop
rcl
mov
xor
cmp
in
aas
mov
jg
sub
incl
imul
negl
add
fisubs
push
dec
ja
data16
or
ds
sub
adc
in
iret
aam
jb
pop
push
stc
fdivr
jg
push
xlat
inc
sub
mov
mov
pop
sub
insl
or
repz
addl
repnz
dec
add
movsl
add
fwait
in
jmp
insl
push
sbb
jb
sbb
push
mul
movsb
or
data16
test
jle
fisubl
or
and
out
sub
jp
or
sbb
xchg
push
sub
xor
jnp
sarl
mov
pop
push
jb
mov
mov
xor
movsb
xor
push
jbe
adc
arpl
scas
hlt
sub
push
and
cmp
push
cwtl
repz
div
jno
jge
es
orb
lds
insb
pop
imull
cwtl
inc
hlt
and
shrb
jge
xlat
scas
repnz
mov
movsl
movsb
mov
mov
sti
jl
mov
sub
pop
sti
add
clc
sbb
jne
adc
insb
es
lret
cli
negl
and
xor
lods
mov
jb
outsl
pop
add
ds
imul
mov
pop
notb
sub
cwtl
sbb
sbb
rcrb
and
push
mov
mov
out
lcall
pop
or
into
fistl
mov
dec
js
sbb
add
inc
lcall
or
adc
mov
add
mov
xor
mov
pop
cmpsl
repz
subb
iret
pop
sub
and
inc
ficompl
fwait
mov
pop
push
and
adc
cmp
push
subl
ffreep
xchg
or
aas
cltd
xorb
subb
or
stos
and
insb
not
test
dec
xlat
pop
scas
sbb
outsl
sub
ret
sti
sbb
inc
stc
mov
sbb
in
sub
inc
in
fwait
mov
push
fwait
enter
pusha
movsb
push
lods
push
adc
push
push
sgdtl
cmp
xor
js
pop
jmp
movsl
push
je
push
mov
data16
sahf
xchg
or
lahf
sub
aaa
stc
or
shl
add
ret
gs
xchg
mov
dec
push
insl
scas
xchg
aam
mov
jle
scas
add
xorb
fcmovbe
xchg
mov
adc
mov
mov
xlat
and
pop
repnz
push
or
daa
push
dec
jb
gs
jns
xchg
add
xorb
imul
or
addr16
negb
add
in
fld
push
jb
xchg
dec
mov
jmp
inc
mov
sahf
clc
repnz
bound
scas
in
lds
mov
dec
xchg
mov
push
dec
fidivl
bnd
add
or
call
shr
movsl
push
fldl
in
pop
push
push
xchg
pop
push
mov
stc
mov
mov
inc
adc
push
test
jnp
mov
test
std
pop
push
mov
inc
pop
aam
repz
push
dec
les
pop
sbb
and
xchg
insl
dec
cmp
push
fstpl
xchg
lret
notb
cmp
mov
popf
aaa
jp
gs
hlt
xchg
adc
cmpb
sub
adc
iret
jne
and
test
jbe
mov
in
dec
jb
sbb
ds
sub
lock
bound
in
push
pop
loop
xchg
cmp
add
out
ret
cmp
imul
loop
push
dec
std
stos
nop
pop
mov
aam
cmpsb
int3
xchg
dec
mov
lret
adc
sub
iret
add
les
or
ficompl
rep
or
jge
mov
xchg
cmp
loop
lea
sarl
out
push
in
pop
je,pn
adc
adc
cmp
push
prefetchnta
xchg
je
jp
inc
std
sub
adcb
test
es
jns
lods
inc
push
daa
data16
out
shlb
mov
lret
lods
shrl
pop
jns
inc
add
mov
pop
jp
mov
and
hlt
std
cltd
push
outsb
mov
cmpb
jmp
add
pop
js
xchg
mov
jns
jne
inc
lock
dec
fstps
das
dec
pop
cmp
jle
xchg
pop
popa
adc
inc
inc
mov
jl
imul
cmpsb
adc
and
sbb
nop
fisubs
adc
cmp
out
inc
repz
ss
push
test
adcb
and
sti
mov
dec
je
hlt
clc
ja
in
imul
mov
fstpt
adc
xor
xor
fdivs
mov
or
inc
xlat
outsl
jl
xchg
cmp
jp
repz
sub
mov
imul
jg
shll
mov
lcall
inc
lods
push
rcrl
inc
mov
jmp
arpl
pop
pop
pop
jmp
and
pop
adc
and
js
jb
dec
inc
mov
iret
mov
inc
scas
neg
inc
ret
mov
mov
sbb
mov
std
fnstcw
add
adc
xchg
sub
mov
pop
dec
cmpsl
mov
fsubrs
cli
repnz
mov
and
shrb
inc
push
and
lahf
bound
js
mov
or
int3
icebp
rorl
push
test
psllq
push
xlat
push
jbe
pusha
jecxz
pusha
jb
enter
push
pop
pop
dec
adc
in
out
lds
mov
addb
add
pop
adcb
dec
ja
mov
xchg
mov
adc
ja
jae
xchg
pop
push
mov
out
gs
dec
sub
cli
cltd
dec
outsb
sub
or
adc
xor
pop
inc
inc
xchg
mov
and
push
mov
test
comiss
dec
dec
je
sub
jle
cmp
dec
fnstenv
pop
xchg
jecxz
das
and
in
push
adc
testb
lds
adc
mov
add
ja
xor
mov
imul
mov
rcrb
sbb
cmp
sbb
dec
or
lcall
scas
test
pop
cs
inc
loope
or
jg
cmp
fdiv
xor
call
jle
movsl
pop
aas
and
das
lds
js
or
out
sti
js
stos
iret
sbb
xchg
and
push
sbb
jp
sub
shlb
aaa
bound
out
cltd
xchg
or
cmpsl
ret
or
enter
xchg
jecxz
mov
test
jnp
or
fucomip
iret
xor
jbe
decl
std
sti
adc
dec
sbb
cld
mov
xor
and
and
or
mov
arpl
sbb
add
loop
rorb
mov
pop
add
in
mov
dec
jnp
fwait
sti
mov
scas
insb
sub
scas
inc
fcmovbe
xor
and
neg
out
dec
data16
push
xlat
add
fsubrl
sarl
dec
rcl
xchg
scas
sbb
sub
xchg
pop
lcall
cmp
jo
lea
imul
outsb
xchg
in
shlb
mov
lds
lahf
lea
pop
mov
leave
pop
xchg
rep
or
mov
sbb
repnz
xchg
mov
dec
ljmp
icebp
pusha
clc
sbb
mov
mov
idiv
push
add
aas
or
pop
mov
test
push
jmp
mov
cmp
or
xchg
test
int3
mov
or
into
clc
ss
adc
pop
mov
inc
jge
mov
in
sub
es
inc
rcl
and
xchg
lds
push
add
sti
mov
add
roll
dec
xchg
bound
fsubrs
dec
iret
int
mov
stc
inc
mov
std
jbe
add
sbb
push
cmc
sbb
jns
inc
push
aad
lock
add
je
incb
mov
sub
mov
rcl
repnz
push
push
ds
add
inc
jmp
cmpsb
cltd
inc
test
pop
sbb
test
out
jbe
mov
inc
dec
in
mov
mov
mov
inc
cmc
jmp
test
push
jne
or
adc
pop
ja
pop
jl
cmp
clc
or
jg
and
jae
scas
mov
push
inc
stc
xchg
stos
mov
inc
sbb
sbb
pop
test
fwait
scas
bnd
out
call
lods
sbb
cwtl
push
cmpsl
fwait
adc
adc
sbb
mov
adc
in
int3
or
je
out
js
xchg
jecxz,pt
mulb
mov
inc
sub
clc
pop
rolb
pop
loopne,pt
bound
in
test
add
add
pop
push
loope
arpl
fldcw
mov
in
mov
jl
je
sub
in
jae
scas
mov
mov
jmp
cmp
cmp
cltd
pop
nop
je
mov
lea
lahf
gs
popf
cmc
js
push
add
fwait
test
xchg
lahf
das
stos
loopne
enter
js
mov
or
scas
cmp
cmpb
mov
cwtl
push
loope
push
inc
mov
or
mov
inc
cmp
sub
push
dec
cwtl
adc
inc
jns
inc
or
pop
pop
cmp
jp
subl
icebp
jecxz
mov
xlat
test
hlt
pop
adc
gs
dec
jge
mov
cwtl
data16
mov
dec
test
adc
xor
cmpl
lock
imul
popa
iret
ss
sti
int
dec
cmpsb
push
xchg
push
xbegin
mov
or
dec
aas
sbb
clc
lahf
mov
stc
int
add
add
das
pop
gs
push
sbb
or
shl
xchg
xor
lods
subb
pusha
xchg
pop
cmp
ja
and
sub
scas
push
repnz
dec
test
or
repnz
adc
mov
int3
mov
push
mov
sub
xor
fcomip
test
add
cld
mov
lret
mov
popa
scas
lret
js
mov
dec
and
popf
repnz
fisubrs
in
mov
xorb
pushf
and
and
inc
jo
fidivl
mov
jne,pt
cmp
mov
aas
xor
aas
lret
mov
scas
xchg
cmp
mov
int3
mov
dec
xchg
jno
add
pop
movl
pop
sahf
daa
das
int3
orb
jp
out
test
mov
outsb
and
inc
pop
pusha
and
popf
add
pop
jno
sbb
inc
pop
jo
notl
xchg
inc
in
push
rorb
ljmp
sti
mov
test
and
or
sbb
sbb
ja
or
popf
push
mov
add
xchg
scas
imul
insb
lcall
sub
negb
leave
js
in
cmp
mov
xchg
push
or
jl
outsl
mov
jge
adc
push
shl
cmp
sahf
int
xor
and
fsubs
pop
push
dec
bound
call
cwtl
xchg
int3
filds
lods
hlt
push
adc
mov
jo
add
mov
lock
jb
jg
aaa
mov
jbe
push
mov
adc
add
mov
dec
cmpsl
dec
mov
out
fimuls
out
mov
mov
mov
mov
mov
enter
js
xlat
xor
cld
imul
mov
les
add
lock
jnp
dec
and
clc
ror
xor
xchg
adc
sbbl
fs
push
leave
pop
icebp
and
adc
add
inc
pusha
sub
sub
out
inc
fsts
jbe
mov
call
lcall
fcmovnu
mov
inc
imul
pop
fldenv
fldcw
fucomi
xor
in
insl
add
inc
ds
test
repz
xchg
jl
and
xor
sub
add
add
add
add
scas
ljmp
add
jp,pt
add
add
ficomps
add
add
add
add
add
add
add
mov
addb
add
add
stos
stos
add
ja
ret
clc
clc
incl
incl
add
add
add
and
outsb
dec
or
add
or
adc
add
add
add
sbb
add
add
add
add
mov
and
add
arpl
rolb
add
add
and
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
test
jne
outsb
add
push
imul
mov
sahf
clc
shll
mov
rcll
inc
cmc
push
cld
add
dec
pop
mov
mov
repz
mov
addb
pop
test
push
push
add
xchg
pop
jne
mov
add
sbb
rolb
rolb
incb
add
push
add
push
add
daa
and
decl
pop
push
call
incl
cmp
loope
dec
pop
and
cld
adcl
call
inc
jge
push
mov
lea
add
std
ud0
addl
repnz
cmp
lea
lock
adc
lea
push
adcb
add
pop
add
add
and
add
add
add
sbb
sbb
sbb
sbb
sbb
fs
jl
add
imul
data16
add
imul
add
push
arpl
aam
gs
add
insb
add
js
push
insb
xchg
popa
add
add
outsl
insb
insb
jne
gs
jb
outsl
popa
insb
jne
xor
add
add
add
ret
add
add
leave
add
push
add
add
add
jns
add
add
jmp
popf
and
adc
cmp
int
sub
mov
sub
mov
lcall
add
imul
xor
aaa
cmp
mov
loope
push
dec
into
mov
bound
or
scas
cmp
cmpsl
sysret
je
jns
cwtl
sub
mov
xchg
or
adc
fdivs
popf
lods
mov
xorb
insl
mov
repnz
roll
fcompl
iret
insb
sub
pushf
xor
sub
ficoml
mov
popa
loopne
shrd
in
mov
iret
sub
cmp
rcl
sub
je
jnp
in
add
pop
jl
into
stc
mov
bound
cmp
in
sub
jmp
cwtl
xchg
in
dec
add
mov
rorb
aas
fldt
or
or
pop
pop
pop
icebp
cmpl
das
in
ret
test
inc
mov
je
arpl
call
testl
or
das
adc
testb
xchg
in
xor
fst
jnp
aaa
nop
inc
mov
mov
and
je
xchg
adc
xchg
mov
mov
repnz
int
pop
adc
cmp
or
out
mov
mov
jno
xor
aas
outsl
xchg
cwtl
sub
in
out
incb
mov
jg
mov
add
or
mov
cltd
jl
shlb
mov
loop
cld
subb
mov
and
fisubrl
data16
outsb
push
popa
jmp
or
movsl
sbb
mov
outsb
enter
pop
sub
dec
sub
out
fcompl
ret
xchg
out
sbb
fisubrs
jno
cmc
pop
in
ljmp
cmc
xchg
sub
lcall
addr16
cmp
lea
das
cltd
adc
sub
lcall
pop
sahf
inc
sub
in
jp
jb
shrb
push
add
fstpl
mov
lock
shlb
js
sub
fs
inc
adc
xor
hlt
push
or
sahf
lods
jp
fisttpl
lds
mov
jmp
dec
out
test
cmp
popf
outsl
sbb
jecxz
scas
movsl
out
cmp
cli
xor
and
jmp
popf
jge
out
stos
lcall
repnz
push
and
ljmp
shlb
shlb
fisubrs
stos
bnd
pop
repz
scas
fistpll
jnp
sbb
push
inc
outsl
pop
mov
les
push
std
lea
inc
std
sti
js
sbb
shll
or
int
js
insl
xor
dec
aas
mov
mov
and
dec
mov
push
sti
ds
pop
cmpsb
pushl
lods
dec
jae
adc
push
jecxz
mov
call
sub
pop
lods
popf
or
mov
sbb
mov
out
enter
daa
push
jnp
or
dec
rorb
jns
dec
dec
xor
dec
stos
idivb
ret
pusha
sbb
cmc
rcrl
arpl
adc
cmp
test
mov
fwait
in
repnz
push
lods
jmp
and
mov
xchg
scas
int
mov
add
cmp
inc
sbb
fwait
cltd
sbb
and
out
or
inc
xchg
sbb
dec
fmull
je
je
mov
xor
in
pusha
push
shlb
sbb
cltd
push
insl
and
or
or
jb
pop
out
inc
or
pop
pop
pop
dec
jb
int3
mov
jae
jmp
fldt
ficoms
mov
pop
jge
and
dec
aas
and
movsl
stc
push
sub
mov
out
mov
stos
pushf
mov
jle
push
int
insb
jo
test
popa
cmp
inc
call
cmpsb
push
ds
add
sbb
pop
int3
sar
mov
xor
sbb
rcll
push
mov
xchg
dec
xor
mov
fmull
and
jge
xchg
mov
fwait
xor
dec
hlt
mov
pop
lock
data16
push
sub
test
sbb
jmp
frstor
lock
rorb
shll
inc
fstl
dec
dec
or
in
jno
movsb
mov
dec
add
jne
jg
cli
cld
jl
jne
and
hlt
shlb
imul
sbb
inc
cmp
mov
popf
xchg
jae
sti
mov
sbb
pusha
loop
jg
sbb
cmp
aam
cmp
call
mov
push
std
and
enter
in
es
lods
mov
push
sub
jmp
xlat
adc
movsl
hlt
pop
call
sbb
pop
cwtl
andl
cmp
dec
sbb
fcmove
cmp
inc
jo
mov
push
lret
cmc
or
xchg
dec
out
push
mov
and
fisubrl
mov
fwait
arpl
pop
mov
dec
push
adc
mov
dec
add
ror
lods
fimuls
cs
call
mov
jns
ss
and
imul
inc
and
scas
lock
mov
ljmp
into
das
sbb
adc
popf
loopne
cmp
scas
inc
call
jbe
dec
ss
pop
insb
xchg
scas
add
movsb
mov
js
out
cld
cld
imul
adc
dec
aas
out
in
ret
xchg
and
add
inc
test
lret
and
mov
cltd
ja
nop
jge
mov
in
out
clc
movsb
cmp
jns
mov
test
inc
addr16
ret
jb
xorl
ss
leave
outsb
xchg
aas
xor
cmc
xchg
cltd
inc
addr16
scas
sub
aas
fisttpll
sbb
leave
scas
gs
lea
ljmp
out
stos
mov
stos
out
cmpsb
cmp
cltd
and
xchg
inc
fidivs
dec
rcl
add
ret
orl
xor
sub
jae
sub
inc
dec
inc
dec
je
mov
in
insb
sti
data16
mov
jle
filds
pop
sbb
cmp
sbb
sahf
cmpsl
imul
jns
ret
inc
fldt
mov
ret
stos
mov
enter
push
mov
addr16
daa
ror
sub
add
cmc
cmp
fmul
int3
jno
dec
cs
pop
sbb
loope
mov
and
and
xchg
push
add
int3
test
shr
fadds
test
cmp
call
xor
imul
pop
mov
mov
mov
cwtl
call
shrl
les
jl
pop
outsl
scas
mov
sub
mov
rcrb
cmp
jno
out
sub
fdivrp
adc
mov
pop
ror
iret
ficoml
mov
fstpt
cmpsb
sub
jecxz
cmc
lea
in
sub
jg
daa
loopne
dec
sbb
in
mov
sub
jge
jno
and
jle
ja
cmpl
push
xor
idivl
cmp
rcll
cmpsb
add
sahf
notl
stos
test
or
lret
lods
sahf
inc
xor
inc
pop
pop
ljmp
push
adc
lret
pop
stos
mov
popa
cmpsl
lret
add
mov
xor
nop
mov
fnstcw
inc
fsub
es
rcl
xor
xchg
xlat
aaa
xor
sar
push
sbb
enter
adc
gs
popf
inc
add
cmp
movsb
xchg
ret
insl
mov
lcall
ficomps
mov
mov
rorl
pop
jno
icebp
rol
test
cmpsl
mov
fmul
andl
js
add
ret
or
imul
sahf
push
adc
test
and
cmp
fistl
or
aas
in
inc
jle
mov
lods
jnp
jl
lea
out
or
aam
or
lds
stos
push
mov
mov
call
add
daa
or
dec
adcb
push
mov
fsubrl
jge
adc
test
popf
xchg
pop
mov
dec
pop
lods
clc
cli
scas
ss
pop
adc
xchg
sub
stos
inc
mov
mov
xor
arpl
je
in
ret
add
push
aad
dec
int
xlat
mov
adc
jnp
push
fdivrl
adc
movl
push
movsl
gs
mov
sti
push
adc
shl
pop
dec
jnp
mov
inc
add
popa
mov
mov
fisttps
jne
out
divb
sbb
and
mov
dec
mov
mov
nopl
mov
cmp
adc
xchg
test
add
cltd
mov
dec
xchg
or
ljmp
or
test
xchg
jl
and
je
dec
pop
rorb
repnz
mov
loopne
dec
xor
insl
and
pushf
rcr
or
mov
add
and
adc
push
pop
mov
pusha
xor
push
ljmp
inc
jle
or
add
sti
jle
inc
inc
insl
or
mov
xor
push
jbe
inc
dec
or
call
into
insb
push
rorl
jne
xlat
xor
inc
in
insb
out
f2xm1
sub
add
xor
ljmp
xchg
aas
mov
mov
jmp
cmp
dec
rcl
xchg
xchg
out
arpl
jl
sahf
xchg
sbb
lret
xor
enter
push
daa
int
cwtl
cmc
push
mov
add
sbb
pop
jle
or
std
bound
pop
push
add
aaa
test
mov
scas
fsubp
add
fidivl
pop
insb
xor
pop
cmpb
sarl
add
gs
insb
add
sbb
xor
jnp
push
dec
insl
sbb
mov
iret
cmp
negb
sbb
movsl
inc
orl
clc
bound
cmp
stos
jns
and
adc
js
cmp
lods
mov
addr16
mov
pop
mov
or
jne
inc
push
mov
rcll
jmp
iret
mov
imul
ja
mov
ja
out
lcall
popa
inc
mov
xor
fdivs
rcl
cmp
xlat
mov
sub
inc
shrb
cmpsl
rcl
icebp
sbb
cmp
jmp
addr16
mov
mov
mov
mov
dec
or
mov
or
fildl
es
lret
ja
cmp
sub
and
mov
and
pushf
fstp
cs
cmp
mov
leave
and
jecxz
aam
daa
ret
sbb
in
add
lahf
mov
fs
push
clc
mov
in
mov
sub
ret
orl
sar
cmpl
int
cmovno
adc
in
push
mov
jns
push
orb
xor
jg
mov
ss
adc
dec
inc
cltd
sub
test
jg
out
mov
int3
cmove
jne
int3
fidivl
lock
rcl
xor
or
arpl
lods
dec
aad
scas
jns
js
rcll
mov
mov
cmpsb
add
cli
mov
pop
adc
ret
and
mov
daa
lahf
pop
mov
outsl
cmc
test
inc
pop
mov
out
test
or
pushf
and
fidivrs
popf
lahf
repz
push
popf
out
mov
xchg
xchg
mov
adc
or
cld
dec
sub
imul
jl
stc
rclb
xchg
sub
sahf
and
sbb
sbb
mov
pop
ds
adc
ja
gs
add
fdivrl
and
into
scas
adc
scas
xchg
or
push
int3
data16
xor
nop
sti
scas
mov
dec
loopne
or
mov
jo,pn
iret
jb
ljmp
popa
movsb
rcl
inc
xchg
inc
inc
sti
call
mov
shl
punpckhwd
iret
inc
hlt
adc
aaa
jae
orl
add
adc
jne
xchg
lcall
inc
mov
aam
andl
adc
mov
popf
nop
cmp
shrb
push
in
dec
mov
dec
mov
popa
pop
aam
cwtl
xchg
xchg
std
xor
and
int3
push
pusha
sub
loopne
cs
imul
shl
loop
pop
inc
sub
or
out
std
loop
fcomps
aad
xor
or
das
rorb
mov
sub
sub
call
movsl
pop
xchg
pop
xchg
inc
xchg
out
cs
filds
jne
pop
imul
lods
pop
inc
loopne
xor
xchg
xchg
iret
or
adc
mov
insb
stos
cs
bound
cmpsb
shl
aad
loop
out
daa
mov
int
test
imul
nop
push
repz
mov
arpl
pusha
scas
jbe
fstpl
jp
fwait
dec
or
jp
jns
sahf
and
push
xchg
sti
imul
xchg
push
bound
sahf
lods
dec
pop
dec
add
add
lods
push
outsb
and
in
inc
enter
out
mov
add
jnp
addr16
in
xchg
mov
mov
mov
ret
inc
shlb
cmp
xchg
in
daa
lret
pop
ret
add
iret
leave
in
mov
xor
sub
mov
dec
aam
lods
mov
sub
cmpsl
pop
dec
inc
jecxz
rcrl
call
sbb
lods
xchg
pop
sbb
lret
or
lret
unpcklps
test
push
mov
in
sbb
cs
cmpsb
mov
jb
inc
cmpl
adc
nop
lret
cmc
in
nop
mov
xchg
dec
inc
popf
pop
out
test
clc
arpl
popf
clc
leave
sti
shlb
test
xchg
nop
add
dec
xchg
test
or
pop
outsb
sub
mov
inc
adc
fsubrl
lahf
dec
dec
testl
icebp
mov
cmp
mov
jno
mov
enter
lcall
aad
mov
loop
shr
push
and
ret
cmpsl
xlat
or
jle
sbb
push
xchg
dec
jnp
inc
push
push
xor
ret
push
xchg
sub
pop
or
je
jno
pop
nop
cltd
out
adc
nop
push
insl
aad
hlt
jecxz
mov
mov
dec
push
test
pop
xor
cmpb
pop
cmc
jg
adc
dec
lds
dec
push
ja
loope
stc
or
xor
rcrl
es
repz
jecxz
and
adc
or
mov
arpl
fstpt
mov
pop
xchg
lahf
test
add
sub
sub
pop
lods
add
pusha
outsl
iret
insb
push
adc
mov
push
mov
push
std
add
rorl
aaa
push
jmp
xchg
jbe
push
or
jo
adc
mov
xchg
in
test
adc
aas
mov
sbb
bound
fldcw
cmp
insb
pop
mov
sub
rclb
ds
add
sub
adc
nop
pushf
xchg
push
mov
xor
xchg
push
clc
xchg
xchg
adc
cmp
xchg
mov
adc
adc
pop
and
sbb
jo
roll
sbb
cld
cmp
jne
inc
cmp
cmpsb
mov
and
int3
imul
aas
fstps
mov
cli
adc
fcmovbe
out
data16
or
imul
pusha
mov
and
cmp
aas
outsl
es
scas
andb
and
pushf
sub
add
push
xor
xchg
orb
addl
mul
cmp
shrb
mov
lods
mov
push
xor
aas
mov
rolb
dec
ficompl
jae
andl
jecxz
add
pop
adc
push
jg
mov
pop
xor
inc
ja
js
lds
push
jae
cmp
xchg
in
mov
imul
sbb
inc
adc
jbe
sahf
rcrb
imul
jg
jle
pop
out
sbbl
xchg
xchg
aas
and
leave
adc
mov
cmpl
movsb
lret
mov
test
jmp
sbb
sub
and
mov
or
jo
sub
test
dec
loop
pop
mov
xor
out
ljmp
aam
or
mov
in
sti
pop
xor
mov
out
cmpsb
mov
lock
ljmp
jl
sahf
add
jae
add
or
adc
ret
jae
sahf
out
cld
les
jp
pop
jge
inc
notl
push
pop
add
jo
fcomps
inc
and
jle
daa
mov
sbb
aad
inc
xor
mov
push
add
imul
or
rcrl
stc
call
jne
adc
or
scas
imul
int
cld
insb
or
insl
sbb
test
dec
and
lods
ja
cmp
inc
js
sbb
pop
or
lret
mov
stc
ficompl
pop
xchg
ja
xor
pop
imul
adc
and
push
sub
arpl
out
mov
cmp
test
addr16
sahf
fisubl
mov
push
adc
aaa
or
stos
loope
mov
xor
jnp
pop
iret
test
cmpsl
push
or
pop
aas
jb
mov
or
rol
inc
mov
xchg
fisubrs
lock
daa
pushf
shrl
jg
add
mov
pop
rcrb
sbb
push
popf
and
mov
sub
inc
push
push
push
iret
test
cmp
xchg
jmp
movsl
shl
adc
outsb
xchg
std
or
fiadds
scas
idivb
lcall
dec
and
and
scas
cmp
scas
xor
xchg
push
pop
aam
inc
insb
cmp
mov
cli
mov
and
jl
ret
mov
pop
lods
popl
jo
movsb
mov
test
out
mov
mov
imul
jnp
or
adc
imul
mov
mov
cmp
or
sbb
mov
xor
cmc
mov
jle
lods
fsubrs
in
jbe
out
pop
pop
lret
test
jp
push
sub
or
subb
xchg
lods
inc
sbb
cmp
push
and
les
inc
cmpsl
dec
dec
clc
fwait
xchg
pop
sbb
pop
int
je
and
add
pop
xor
mov
mov
lret
xor
movsl
add
sub
jecxz
xor
fistpll
call
int3
cmp
call
add
fildl
in
imul
cmc
sub
mov
movsb
sbb
std
cmp
inc
addr16
or
sub
push
mov
sub
xchg
std
push
aaa
inc
sbb
push
and
out
lcall
iret
xchg
test
adc
out
jno
pop
scas
jns
add
mov
loopne
cmp
xlat
js
cmpsl
rcrb
fstl
inc
roll
lds
and
into
lods
in
cmc
test
aam
lcall
push
jo
into
dec
add
es
xchg
or
pusha
enter
mov
or
sub
push
dec
mov
in
jp
adc
cmp
adc
jmp
adc
enter
adc
xchg
mov
iret
xorl
and
std
aaa
int3
xchg
push
jns
loopne
out
dec
jmp
ljmp
mov
orl
mov
mov
stc
scas
jno
cs
outsl
scas
mov
inc
add
rcrl
push
jl
mov
je
mov
pop
pushf
cltd
mov
rclb
hlt
xor
out
xorl
daa
pop
mov
out
cmpsl
cmp
loopne
test
divb
int3
ret
dec
enter
push
insb
fnstenv
int
mov
sbb
mov
mov
cmp
fdivrs
cli
jp
fwait
sbb
and
aam
push
sahf
frstor
pop
inc
test
aam
pop
fs
mov
mov
mov
jecxz
xchg
inc
jcxz
mov
insb
adc
test
xchg
repz
test
inc
flds
or
stos
dec
gs
dec
push
ljmp
jp
adc
mov
cmp
jno
stos
sbb
loop
mov
jecxz
pop
mov
mov
inc
dec
lds
pop
pop
xor
dec
add
mov
mov
xchg
pushf
dec
mov
movb
push
jno
or
mov
adc
fwait
jae
mov
cmc
rorb
cmpsb
orl
sub
sahf
adc
pop
lods
add
addr16
daa
push
mov
popa
stc
sahf
jmp
loopne
cmpl
ret
push
mov
mov
loope
shrl
aam
dec
test
ret
adc
shll
div
mov
mulb
shr
stc
inc
rcll
push
xchg
xor
mov
push
int3
loopne
ljmp
dec
cmp
rclb
fisubrs
enter
icebp
adcb
fcomps
mov
filds
ja
cmp
stos
cmp
test
sub
lahf
in
xor
movsb
jge
cmpsb
xchg
ss
and
mov
sub
in
add
add
add
dec
add
rolb
add
add
add
add
and
add
add
add
add
add
sbb
add
add
mov
add
add
add
add
add
add
cmp
add
add
stos
stos
add
fidivs
jo
jo
jo
nop
incl
add
test
and
inc
add
add
add
add
cmp
add
add
add
add
add
add
add
add
leave
add
add
and
add
add
pop
add
add
xchg
out
add
add
pop
add
add
add
pop
gs
push
imul
add
outsb
dec
jne
push
mov
and
orl
push
inc
cmp
xchg
lea
mov
mov
mov
mov
inc
jne
call
inc
lea
std
add
ret
push
add
lea
sbb
add
mov
mov
push
test
decl
add
adc
rolb
and
in
mov
loopne
add
adc
mov
cld
loopne
push
call
orl
call
call
or
stc
push
movl
test
clc
dec
add
push
inc
enter
cld
incl
jno
decl
incl
add
test
add
add
add
xchg
fiaddl
addb
add
add
add
sub
clc
add
push
outsb
je
inc
add
cs
mov
gs
inc
mov
outsl
je
imul
popa
pop
inc
movsl
inc
je
dec
and
add
insl
push
cs
push
jae
push
popa
pop
adc
cs
arpl
arpl
add
add
add
add
add
add
add
add
cltd
add
add
add
cmpsb
add
sub
add
add
add
add
add
add
xchg
jae
lahf
mulb
add
aad
inc
test
movsl
sub
or
sbb
das
adc
test
ja
push
imul
xchg
pop
or
mov
xchg
out
pop
lock
or
aad
xor
je
rorb
clc
mov
inc
sbb
scas
xchg
jmp
outsb
pop
jg
test
xchg
or
cmp
push
xor
in
sub
lods
andl
into
nop
push
or
nop
iret
pop
xor
lret
dec
mov
hlt
in
and
sbb
cld
fucompp
lea
icebp
aaa
lret
pop
or
xchg
in
jnp
sbb
out
into
orl
popa
loop
cmp
xchg
lret
sub
mov
push
cli
jmp
cmp
inc
cmp
push
fdivs
int3
jmp
sub
bnd
outsl
movsl
arpl
in
jno
call
and
ja
ss
jmp
das
lods
shr
pushf
lock
adc
xor
jns
xchg
ds
stc
lods
sar
imul
inc
data16
fs
cld
mov
fs
jecxz
mov
pop
iret
mov
xchg
jnp
cmc
cli
loopne
xlat
stos
jmp
cmpsb
fdivl
push
stc
dec
mov
add
fisttpl
shrb
leave
dec
pop
add
jae
sub
cmp
fwait
loop
xchg
jmp
mov
fimuls
pop
subb
add
sbb
scas
and
mov
ret
insb
dec
int
jl
lods
adc
std
mov
cmc
popf
in
out
push
jno
icebp
sub
sarl
jo
repz
jnp
xor
xor
es
mov
push
mov
cs
aam
inc
dec
or
pop
ljmp
dec
push
out
mov
xchg
mov
repz
mov
clc
test
pop
fs
or
rorl
mov
cmpsl
mov
cmp
inc
sbbb
rolb
pop
fcoml
adc
xor
xor
stos
iret
cmp
out
xchg
mov
scas
sarb
fidivl
sbb
loop,pt
inc
shll
out
xchg
test
xor
mov
in
insb
jne
mov
test
or
fsubrs
jmp
aam
and
ja
sbb
shl
cwtl
inc
sti
mov
ss
xchg
leave
cmp
xchg
adc
and
je,pn
cmp
and
inc
pop
push
lgs
or
cltd
or
or
sti
and
aas
daa
je
adc
out
sbbl
shlb
adc
jae
dec
mov
lock
jbe
pop
enter
dec
jns
dec
cli
mov
cmpsb
pop
and
insb
rcll
lret
test
jg
push
adc
add
fadds
lea
lcall
mov
xor
lea
je
outsl
shrb
imul
adc
movsb
sub
xchg
js
mov
push
mov
cmc
jb
xchg
daa
cwtl
mov
cmp
std
adc
testb
test
stos
cmpsl
jecxz
add
mov
pop
ja
pusha
mov
push
sbb
dec
stos
xchg
out
dec
xchg
cwtl
xsavec
jne
or
jb
stos
dec
das
jmp
lds
jnp
pcmpgtd
ss
xor
nop
pop
clc
cmp
imul
mov
mov
cmp
cmpb
jecxz
dec
cmp
add
add
ret
xorb
and
ljmp
fnsave
mov
add
data16
mov
jge
pop
jnp
sar
incl
dec
sub
inc
and
inc
testb
sub
repnz
or
adc
cld
or
xchg
aam
dec
jg
rorl
xor
ss
fbstp
cmc
xchg
cltd
in
outsb
sbb
fnstcw
pop
jb
sub
cld
pop
inc
cwtl
lahf
outsb
jle
fists
push
dec
xchg
daa
adc
jecxz
mov
mov
stc
gs
cs
jg
xor
jnp
cmpsb
test
sbbl
imulb
jo
push
jae
push
loop
lret
or
pop
arpl
test
or
icebp
fwait
sub
es
loop
add
sbb
push
cmpsl
push
mov
pop
fwait
jp
int
xor
sahf
fs
mov
mov
ret
insl
mov
xorl
ss
xchg
out
stos
int3
cmp
push
iret
jbe
xor
cld
xchg
dec
xor
mov
xor
jl
outsl
ljmp
cmp
loopw
and
jg
mov
dec
ret
jge
iret
jne
imul
jl
mov
test
in
mov
enter
mov
daa
pop
jp
imul
je
jnp
insb
pop
adc
inc
loopne,pn
xorl
xor
push
sub
testb
addr16
mov
loop
dec
push
mov
xor
pop
xor
cmp
outsl
jbe
and
xor
dec
mov
pushf
cmc
cmc
enter
mov
lret
lods
clc
loop
imulb
cld
negb
cld
and
jecxz
mull
push
outsb
jnp
xchg
mov
stos
dec
jmp
push
pushf
das
clc
shlb
stc
sar
pusha
stos
cld
daa
push
xorl
ja
add
add
mov
sub
lock
cs
jo
jle
mov
mov
pushf
cmpsl
dec
das
sub
jae
add
xchg
dec
or
jnp
sub
das
fwait
cs
test
sub
jnp
lahf
mov
stc
sti
jnp
sbb
pop
inc
sbb
fcoms
xlat
cmp
lods
pop
and
popf
stc
or
mov
adc
fmull
mov
cmp
adc
pop
cmpl
inc
repz
dec
cs
jns
dec
jno
xchg
fisttps
mov
scas
out
inc
inc
pop
inc
ss
enter
les
ficoml
mov
lods
push
pop
xchg
inc
inc
pop
inc
rorl
mov
insb
out
pop
sahf
push
lea
icebp
fldl
out
xchg
iret
mov
or
dec
out
dec
cltd
das
push
shll
fcompl
adc
lret
sub
xchg
sahf
push
mov
or
lea
dec
sarl
and
jb
adc
stos
mov
test
lods
mov
dec
mov
pop
std
add
and
cmp
push
cmp
pop
and
push
mov
add
mov
stc
xchg
adcl
mov
push
andb
add
rolb
or
inc
adc
stc
xchg
in
and
inc
xlat
push
cmc
xlat
gs
dec
test
xor
or
jmp
or
lea
mov
mov
mov
fs
jo
mov
cmp
mov
pop
sbb
fs
dec
cmpb
inc
jmp
lock
test
xor
insb
jle
inc
xor
cmpsb
out
shrl
jno
scas
and
popf
cmc
in
pushf
xchg
adc
inc
js
sbb
imul
es
push
cmp
jge
push
mov
lods
insb
jae
popa
repnz
mov
fdivr
testl
mov
xor
icebp
inc
cmp
mov
mov
pushf
les
sub
and
scas
jg
jno
loope
cltd
fcompl
jno
in
repz
mov
and
fstpl
mov
and
and
ja
enter
addr16
push
jbe
dec
aad
and
pop
jge
xchg
imul
and
shl
dec
cwtl
pop
aam
nop
xchg
xchg
inc
or
jb
sbb
les
movsl
xor
jp
xor
repz
outsb
xor
lea
hlt
pop
loop
scas
stos
imul
jae
add
ds
cwtl
es
icebp
adc
insb
test
mov
xchg
iret
lds
inc
xchg
cmpsb
outsl
add
flds
inc
jle
leave
add
lea
sti
cmpsl
divb
in
xchg
out
lea
add
or
xor
imul
push
cmp
test
outsb
inc
push
aad
jbe
dec
ds
mov
fistpl
sbbb
pop
push
mov
into
ret
cs
fcoms
or
xchg
pop
gs
mov
stos
outsl
mov
or
push
jb
dec
in
adc
lret
sub
jbe
xchg
and
in
jns
stos
and
jg
jle
roll
push
test
addr16
sub
or
sbb
inc
shl
sbb
repz
mov
sbb
push
dec
dec
es
sbb
sub
stos
xchg
adc
cltd
pushf
test
lea
cmp
pop
add
xchg
mov
mov
jp
stc
mov
push
pop
mov
lods
lahf
inc
jp
sbb
inc
and
je
sahf
push
push
sub
mov
inc
and
sub
push
mov
sahf
xchg
outsl
inc
mov
jg
push
es
orl
push
data16
dec
jl
pop
cmpsl
aas
dec
mov
lods
outsl
push
mov
data16
jg
mov
xchg
add
pop
das
sbb
pushf
in
stos
mov
daa
call
fnsave
into
sbb
inc
enter
add
or
pusha
cs
int
ja
and
sbb
mov
mov
push
sbb
repz
mov
rorb
sub
cmp
movsl
hlt
mov
inc
mov
pop
je
and
xchg
dec
addl
mov
jo
xchg
loopne
fimull
jbe
hlt
jmp
xor
and
mov
shr
adc
push
jno
cli
inc
repz
mov
mov
dec
adc
push
mov
push
sahf
xchg
arpl
push
mov
inc
mov
xor
cli
jmp
stos
out
add
jp
out
clc
lret
orb
dec
add
pop
sbb
adc
sub
outsl
fwait
cmp
add
int
es
mov
in
mov
lret
sahf
mov
je
adc
add
mov
jp
cli
es
inc
call
push
adc
push
add
inc
pop
push
fpatan
mov
repz
popa
xor
adc
cmp
aas
mov
pop
es
push
sub
and
fldt
mov
pop
aas
shr
mov
push
pop
adc
fidivl
fwait
pop
jno
mov
pushf
jmp
ljmp
sbb
cld
test
pop
pop
push
popa
nop
cli
dec
ss
aad
cmp
sub
dec
jo
sub
inc
scas
shrl
or
or
test
jb
out
and
cli
icebp
mov
and
jns
push
sub
ret
pop
negl
mov
mov
mov
rcrl
add
test
into
mov
scas
pop
lret
push
dec
dec
mov
adc
ss
xchg
ficomps
cld
fdivrl
xor
insl
or
lahf
sbb
or
add
mov
ss
mov
data16
fisttpll
mov
cmp
and
nop
sti
sbb
ret
inc
test
pop
faddl
fs
xchg
fsubrl
lods
sub
sti
and
dec
pushf
sti
or
stos
inc
jmp
push
test
call
sub
push
popf
out
adc
data16
xchg
ficoml
mov
mov
outsb
push
leave
jmp
repnz
inc
xchg
popf
inc
stc
jge
inc
clc
lret
cmp
jno
jnp
bound
xchg
imul
cmpsl
adcl
scas
lock
sbb
lea
inc
inc
and
arpl
xchg
jo
jle
sbb
dec
push
sub
push
cld
sahf
icebp
or
xlat
and
outsl
out
and
push
in
insl
popa
bound
push
and
cltd
ja
or
js
aaa
faddp
fsubr
push
mov
dec
int3
cmp
or
xor
bound
push
and
mov
mov
jl
icebp
insl
mov
jp
aas
cmp
sub
mov
insl
call
and
ds
mov
xor
cmp
dec
lock
sbb
add
cmp
dec
icebp
fsubr
add
inc
inc
clc
sub
mull
jge
movsb
xor
movl
pop
sbb
call
jmp
dec
orb
in
aaa
lods
jo
arpl
das
cwtl
mov
adc
ret
or
divl
sbb
jle
popf
out
or
mov
fs
inc
lea
pushf
mov
xor
out
test
testl
mov
adc
sub
sbb
mov
mov
test
das
sbb
dec
sub
fstps
rolb
decb
mov
and
and
push
sub
scas
call
xchg
mov
ret
cs
ret
jns
ret
dec
mov
stos
or
push
sbbb
sub
and
add
aas
pop
jne
pop
popf
test
mov
rcrl
inc
insb
lret
sub
enter
in
shll
data16
add
mov
imulb
outsb
jb
adcl
cmpsb
shl
jno
xchg
shlb
mov
xchg
aad
adc
inc
dec
stos
fdiv
je
mov
inc
gs
and
add
or
inc
imul
jb
push
xor
mov
push
pop
in
lock
mov
lods
mov
cmp
shll
and
js
push
adc
pop
pop
and
inc
imul
and
mov
xchg
push
ss
in
inc
and
mov
inc
adcl
and
call
xor
repnz
std
sbb
xchg
jmp
pushf
lea
mov
jecxz
push
jg
adc
mov
pop
mov
or
or
push
pop
mov
pop
cld
cmp
dec
push
test
mov
imul
je
shrb
negb
xor
mov
dec
mov
and
pop
mov
fcoml
xchg
imul
pop
ret
pushf
cmpsb
and
add
stos
sbb
cmp
insb
bswap
and
stos
fwait
cli
push
nop
cmp
out
pop
sti
sbb
mov
jp
sub
inc
in
sbb
pop
jecxz
loop
pop
sbb
jge
pop
mov
pop
imul
adc
mov
inc
out
daa
or
shlb
xlat
xor
or
stc
or
ret
orl
dec
push
call
stos
out
pop
call
jle
xor
pop
pop
mov
push
jns
lahf
mov
sub
movsb
add
jge
int
mov
or
orb
mov
fdivr
mov
add
rolb
mov
push
cmc
in
dec
sbb
add
jno
cmp
je
cltd
dec
leave
sbb
mov
xchg
mov
lahf
mov
add
les
in
jb
insb
inc
sbb
push
les
cs
mov
jmp
in
stos
lock
jns
loop
imul
loopne
loop
sub
in
ffreep
icebp
rcrb
push
pop
fsubrs
cmpsl
jp
daa
inc
testb
daa
stos
cs
cwtl
addb
pop
mov
test
mov
scas
sub
shlb
add
mov
mov
int3
add
mov
inc
outsl
fidivl
jns
mov
inc
bound
loopne
shl
add
pop
mov
mov
adc
fucomi
orb
push
addb
fs
mov
pop
out
into
out
xor
or
mov
ljmp
sarb
cmp
jle
pushf
cmp
jne
rorl
jo
xchg
data16
adc
ljmp
ljmp
data16
dec
daa
mov
inc
mov
test
sub
mov
inc
stc
sbb
int3
lds
fucomip
sub
scas
sub
cmp
jp
loopne
sub
lods
dec
inc
mov
push
jmp
jae
xchg
mov
mov
stc
arpl
or
xchg
or
outsb
int3
mov
lds
mov
xchg
aam
ljmp
loopne
in
cwtl
sar
loopne
xor
dec
stc
xlat
into
outsl
push
stc
jbe
mov
mov
cmpsl
test
mov
adc
divb
nop
xchg
test
jmp
xchg
arpl
stos
lahf
andb
ja
ds
jbe
and
mov
cmc
sahf
xchg
jno
pop
inc
xchg
inc
xchg
sbb
out
adc
push
popa
pop
outsl
mov
out
dec
das
mov
jge
cmpsl
sbb
inc
push
xor
leave
inc
mov
cmp
cmpsl
push
lret
test
out
sbb
xor
dec
cmc
test
mov
adc
into
pop
repz
dec
mov
out
dec
test
enter
dec
in
leave
insb
cmp
fisubrl
stos
cmp
add
mov
sbb
aaa
mov
sbb
fs
mov
out
add
jecxz
push
dec
mov
pushf
movsl
out
pop
inc
pop
movntq
inc
or
pop
mov
fistpl
push
inc
stos
pop
in
std
and
add
fwait
cmp
xor
dec
shrl
in
ds
ss
cmc
pop
mov
mov
inc
cmp
lds
jo
rol
lahf
std
push
jno
arpl
push
dec
cmp
dec
adc
push
fwait
mov
ret
mov
jle
pop
mov
and
popl
sbb
mov
cmp
inc
scas
pop
arpl
addr16
cmp
cltd
div
mov
int
push
push
fdiv
fmul
sub
stos
in
pop
push
xor
fcoms
mov
xor
aaa
fcomps
xorl
and
dec
push
jae
cs
ds
pop
cmc
push
push
imul
clc
popf
cmp
and
lock
jmp
or
ret
in
std
cmp
mov
call
push
jbe
mov
roll
adc
lock
lea
test
mov
cltd
stos
inc
push
leave
mov
andb
jno
add
mov
lock
lret
popf
pop
jecxz
shrb
imul
insb
inc
jge
jecxz
mov
mov
push
xchg
xchg
add
jbe
andl
mov
mov
fsubrs
jg
jecxz
sub
jne
fwait
mov
pop
cmpsb
cmp
cmpl
fnstcw
cmp
jb
jne
mov
push
xor
inc
xchg
mov
pop
or
dec
es
cmp
and
sbb
jle
ja
push
mov
insb
pop
pop
bound
lahf
std
int
stc
cmpsl
push
adc
push
popl
sub
scas
jp
movsl
cmp
xchg
cmp
leave
movsl
nop
movsl
mov
inc
inc
clc
xor
cmp
ret
jmp
clc
push
sbb
popf
add
out
mov
mov
and
xchg
outsb
in
hlt
in
mov
sub
sub
jbe
and
dec
mov
hlt
in
popf
jno
mov
and
std
sub
adc
add
shll
jle
cmp
or
les
xchg
lods
inc
test
push
leave
or
inc
fdivrl
mov
shll
iret
add
int
adc
mov
mov
fstl
adc
roll
mov
lea
stos
repnz
pop
loop
fdivrl
adc
mov
and
adc
dec
ja
cld
lret
or
cmpsb
stc
inc
les
iret
addr16
xchg
mov
mov
adc
frstor
pusha
sbb
jb
inc
mov
inc
es
xchg
jg
cmp
movsb
cmpsl
in
test
fidivrs
dec
push
cmp
int3
jmp
xor
push
repnz
sarb
inc
add
sarl
sub
lahf
notl
xor
in
adc
cmp
ffreep
repnz
addl
mov
xor
push
test
das
fxch
inc
add
lds
mov
and
and
out
loope
repz
movsl
pop
testb
adc
orl
adc
cmp
mov
sbb
push
jge
lcall
hlt
lds
push
mov
imul
js
shll
movsl
cmpsl
or
out
int3
pop
adc
cltd
test
adc
cmpsb
xchg
ror
aas
shrb
add
sub
xor
or
push
dec
in
add
lock
repnz
jae
sub
inc
push
cmp
mov
cmp
or
sti
jp
xor
pop
cltd
inc
cmpb
movsb
gs
shrb
fidivrs
pop
movsl
ljmp
sbb
cwtl
add
test
je
ss
arpl
clc
pop
add
and
mov
insl
sub
lods
sbb
jno
adc
push
xchg
push
dec
xor
lds
jns,pn
jae
and
int3
sbb
xchg
mov
out
cmp
lret
cmpb
rorb
movsb
pop
outsl
sbb
push
sbb
js
jno
jp
mov
shr
and
into
inc
mov
addl
stc
push
jecxz
hlt
addr16
imul
fiadds
jo
aaa
xchg
xor
push
mov
sbb
mov
test
pop
iret
cmpsl
cmp
push
cltd
lods
and
dec
adc
js
mov
jae
imul
sbb
cld
iret
mov
jecxz
cli
insb
add
mov
add
add
add
add
add
test
add
xchg
add
cmp
add
add
add
add
add
dec
add
add
leave
add
jbe
add
and
add
add
add
add
add
add
add
imul
stos
cld
add
ja
mov
xchg
pusha
ljmp
jae
and
add
add
rcrb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
sbb
pop
add
add
and
outsb
das
inc
dec
pop
jecxz
imul
push
outsb
or
stc
sti
cmp
leave
pop
in
dec
je
cld
jne
decl
les
lea
add
adc
lock
mov
adc
xchg
decl
pop
in
mov
add
sbb
ret
dec
add
adc
sbb
add
incl
push
push
aas
mov
incl
stos
int3
rorb
mov
mov
add
xor
push
test
jne
add
sar
pop
pushl
mov
out
add
adc
or
call
stos
push
add
lea
ljmp
lea
mov
mov
mov
jp
add
jne
inc
adc
push
loopne
add
rolb
ljmp
sbb
add
sbb
sbb
sbb
enter
sbb
sbb
add
sbb
add
gs
and
fs
insl
je
gs
je
jo
sbb
outsb
jo
dec
fs
gs
add
gs
add
inc
dec
out
insb
push
inc
add
jb
addr16
gs
loopne
add
xor
add
xor
add
add
mov
add
add
loopne
add
ret
sub
mov
das
cmc
and
testl
ljmp
adc
out
cs
sbb
inc
inc
ftst
outsb
lahf
lret
xchg
mov
cli
inc
jmp
push
and
xor
and
sahf
add
out
std
push
aas
xchg
mov
jns
ljmp
roll
mov
fmull
inc
dec
aas
enter
pusha
movsb
imul
std
cmp
xor
je,pn
test
sub
mov
mov
pop
andb
or
lea
jecxz
fildl
outsb
push
or
xchg
xor
test
cli
or
adc
cmp
cwtl
fcoms
mov
std
cmpsl
push
sub
xchg
lret
dec
jae
sbb
inc
loopne
popa
dec
insb
adc
iret
aad
xlat
fstps
jns
mulb
sarl
cmp
test
or
inc
adc
push
loope
mov
xchg
xchg
xlat
and
push
xchg
push
add
cmc
jecxz
jbe
add
icebp
bound
mov
jnp
jb
and
jb
and
lock
cmpb
mov
aaa
or
aam
or
jl
daa
paddsb
push
lcall
shlb
adc
bound
lcall
jle
push
int3
aas
inc
push
lock
sbb
adc
xlat
sub
in
dec
mov
nop
push
mov
sbb
in
jne
jbe
popa
add
cmp
mov
pop
pusha
mov
xchg
mov
xchg
dec
enter
xor
lcall
dec
ret
je
enter
enter
add
hlt
mov
jb
or
insb
aad
jle
or
cmp
out
push
enter
in
fisubrs
and
rol
jg
shl
or
icebp
inc
test
mov
jne
into
int
or
pushf
adc
jns
iret
pop
data16
push
mov
cltd
shll
test
xchg
sub
ret
ss
movsl
jecxz
fnstsw
lods
out
repz
xchg
lret
xchg
xchg
das
aam
imul
pop
movb
push
push
pop
inc
inc
sarb
fucom
sbb
aaa
rcr
icebp
bswap
jne
out
sbb
push
in
pop
or
adc
sub
fstpt
inc
enter
cmpsb
pop
cld
xor
out
xor
lods
test
outsb
sub
push
je
ret
or
movsb
mov
jp
push
adc
in
out
aas
cltd
adc
in
push
outsl
cli
add
fs
pop
lock
mov
mov
push
popa
jo
mov
test
inc
fldenv
cmp
popf
jbe
in
sub
mov
add
jns
xchg
mov
mov
xor
xchg
cltd
mov
xlat
jbe
jecxz
sarb
xchg
xor
movsb
icebp
mov
lock
mov
dec
dec
bound
stos
rcrl
inc
adc
mov
push
mov
jae
lea
iret
push
jmp
xlat
mov
pop
pushl
test
stos
lcall
jo
mov
push
daa
xor
mov
pop
mov
fstps
or
out
pop
sbb
pop
inc
xor
mov
mov
jne
enter
imul
cmp
dec
dec
sbb
sub
roll
push
xlat
jp
std
das
or
xor
xor
dec
mov
cwtl
cmp
and
push
mov
ds
testl
push
stc
mov
xchg
das
jno
ss
sbb
lahf
mov
dec
dec
xchg
or
fs
xchg
dec
dec
or
in
data16
or
xchg
or
nop
add
es
pop
mov
push
iret
orl
add
daa
shlb
jg
icebp
loope
test
pop
xlat
ftst
aad
pushf
fxch
aad
cmc
mov
lret
mov
jno
sub
scas
lea
jno
xchg
push
insb
inc
cmc
sub
and
in
jb
jae
cmp
dec
fwait
mov
pop
xchg
cmpb
or
cmpsl
jbe
inc
fstpt
xor
repnz
xor
dec
lret
lcall
push
int
les
jmp
scas
into
xchg
inc
xchg
mov
xchg
cmpsl
sub
and
inc
or
popa
or
push
hlt
sti
repnz
cli
sti
stos
popf
pop
popa
pop
frstor
adc
sub
out
xchg
lahf
pop
pop
push
add
es
xor
sbb
push
lods
imul
cmp
shlb
sbb
int3
push
fsubr
push
and
fisubs
mov
movb
push
lahf
in
mov
cld
dec
adc
leave
pop
enter
add
jle
out
hlt
cmpsl
xor
inc
and
jle
popa
test
mov
testl
mov
dec
shr
int3
fidivs
fiadds
xor
jecxz
cld
mov
loop
jp
jne
popa
mov
pusha
push
xor
in
mov
push
cmpsl
aaa
adc
inc
jecxz
mov
push
test
clc
dec
cmp
mov
insl
fistps
jl
lea
push
jbe
icebp
fsubl
stc
xchg
xchg
mov
fldt
loopne
loopne
fwait
dec
or
sbb
xor
mov
or
and
fisttps
or
adc
icebp
push
sbb
and
inc
and
scas
dec
dec
inc
sub
je,pt
into
movsb
lcall
jg
inc
int3
clc
fcmovne
shl
pop
jb
test
xchg
loope
shl
cmp
repz
pop
dec
lods
daa
mov
jns
or
bswap
mov
fcom
xor
jne
sub
add
jne
sub
push
into
sub
cmc
sbb
or
sbb
jno
dec
fsts
pop
xchg
nop
xor
call
cs
sbb
and
leave
ja
mov
out
dec
out
pushf
iret
addr16
jg
adc
aaa
adc
das
or
imulb
sti
sbb
add
outsb
adc
add
inc
loope
js
sbb
xor
negb
int
in
leave
xchg
mov
or
ss
fsubrl
xchg
jbe
and
lods
or
sub
push
dec
je
xor
repz
jo
sbb
in
out
enter
dec
cltd
iret
pusha
fcoms
outsb
stos
ljmp
daa
push
push
loope
and
push
xor
mov
inc
ret
push
stos
xchg
pop
imul
hlt
lcall
imul
movsb
mov
loop
xchg
stc
push
push
sbb
stc
sbb
cmp
xchg
pop
movsb
jnp
jnp
dec
mov
movsl
cmp
movsl
ljmp
and
cmp
repnz
lret
push
ss
aad
sub
add
mov
test
ds
mull
cltd
ret
pop
cli
out
jo
and
fwait
push
cs
or
insl
fcomi
jb
or
aad
das
movsb
std
inc
leave
push
subl
test
cmpsl
test
loope
scas
leave
mov
mov
mov
es
push
mov
movsl
gs
xor
std
push
stos
stc
jns
push
movsl
repz
sub
repz
cmpb
inc
mov
in
sub
jne
adc
jo
mov
cwtl
or
push
adc
enter
iret
mov
dec
adc
xor
pop
nop
cs
mov
test
insl
pop
pop
mov
rcrb
mov
imul
out
jbe
movsb
es
pushf
push
sub
pusha
shlb
mov
xchg
dec
inc
or
pop
lods
jns
push
push
mov
movl
sbb
lods
pop
test
xor
and
dec
xchg
outsl
mov
dec
adcl
xchg
shlb
and
adc
xlat
jae
pop
mov
sahf
push
or
andb
ret
cmp
xlat
mov
push
ja
addr16
add
insl
fcmovnbe
add
mov
adc
mov
pop
mov
leave
pop
cli
je
scas
fs
inc
test
and
aas
jl
jecxz
bnd
dec
fstpt
outsl
mov
mov
mov
mov
sbb
pop
test
test
dec
push
adc
test
fdivp
cmc
loope,pt
xchg
sub
lret
adc
lcall
push
cs
push
dec
jnp
fldpi
push
xor
sbb
fwait
mov
out
stos
imul
in
mov
add
icebp
pop
inc
dec
jmp
fdivs
xor
ret
inc
jle
shlb
jbe
or
fcomps
icebp
dec
cmpsb
push
jo
mov
pop
fwait
jmp
push
adc
es
enter
jae
mov
lock
rorl
xchg
dec
arpl
sbbb
inc
pop
out
aad
ret
call
inc
sbb
xchg
mov
mov
mov
js
mov
es
xchg
push
and
push
jae
pop
test
fstp
loope
mov
push
pop
sub
dec
into
sarb
test
popf
ja
inc
arpl
rcrb
sbb
in
aaa
in
lret
loop
aad
mov
lods
mov
xor
das
push
data16
dec
pop
lahf
mov
outsl
shlb
insb
negb
addr16
mov
cltd
jo
xlat
stc
mov
jbe
adc
jg
push
repnz
js
scas
es
mov
and
or
imul
scas
sahf
ds
xor
mov
sbb
inc
lods
repnz
mov
inc
xor
dec
setb
inc
mov
popa
sti
adc
sarl
loopne
xchg
jns
adc
adc
cmp
xlat
mov
inc
pop
or
data16
lcall
xchg
cmp
mov
mov
or
dec
dec
push
fnstcw
push
push
movsl
cwtd
dec
dec
xchg
sbb
or
mov
dec
pop
cmp
xchg
pop
inc
mov
lds
jo
jg
push
mov
inc
stos
ss
jbe
insl
pop
fidivrl
adc
jbe
into
xor
push
xchg
popa
insl
aam
xor
daa
xlat
pop
cmp
mov
loopne
or
les
xchg
pop
mov
mov
jmp
mov
push
pop
sub
mov
cwtl
inc
dec
test
adc
sub
jno
mov
push
and
add
arpl
mov
mov
icebp
loopne
test
dec
add
cmc
arpl
aam
and
jb
adc
dec
mov
out
bound
outsl
hlt
fisttps
xchg
push
mov
mov
lahf
dec
or
inc
lds
mov
or
out
jae
xor
cmp
xlat
decl
fstpl
imul
lds
ret
std
xchg
add
leave
or
fisttps
mov
lret
sti
stos
cmpsb
lods
adc
jbe
mov
xchg
test
jo
je
push
and
push
stos
subb
aam
adcl
out
xor
stos
ja
lock
inc
loop
icebp
mov
jnp
rolb
jb
mov
cmpsl
mov
decb
testb
xchg
daa
sahf
test
mov
mov
addr16
pop
dec
loopne
imul
les
mov
clc
xor
shlb
smsw
insb
pop
popf
add
es
cwtl
adc
mov
mov
jecxz
aas
lret
mov
dec
stos
std
mov
adc
pop
pushf
test
jnp
pop
out
in
notb
mov
dec
jp
push
into
outsb
js
lods
mov
mov
leave
inc
jle
fs
mov
push
mov
mov
ficoms
xchg
sub
sbb
mov
jno
dec
test
xor
jecxz
negb
lahf
jle
mov
mov
je
test
add
pop
cmp
rcl
stc
pop
repz
cltd
xchg
xchg
pop
sub
jg
aaa
aaa
rcrl
and
sbb
adc
aaa
mov
cmc
fdivrs
sub
mov
out
mov
adc
lods
mov
mov
sub
cmpsb
jno
pop
mov
sub
pop
in
jnp
pusha
in
pop
xchg
pop
testl
cmc
dec
dec
arpl
out
fsts
gs
mov
mov
add
lods
mov
cmp
orb
icebp
jp
imul
jb
ljmp
adc
jnp
lret
aaa
in
pop
outsb
loop
cmpb
pop
mov
mov
jle
andb
mov
lret
xor
lds
scas
and
aam
popa
test
mov
icebp
mov
fidivrs
xor
ds
inc
mov
add
xor
ficomps
or
cld
xchg
or
xchg
loop
xlat
mov
rorl
lret
and
mov
inc
data16
scas
mov
jbe
lahf
ret
lret
out
cmp
mov
movsb
pop
xlat
xor
pop
and
xchg
cmp
jl
in
push
sbb
mov
test
ja
dec
subl
cmp
pop
fadd
cli
outsb
stos
push
pop
out
cmp
test
cmpsb
rol
dec
push
mov
and
hlt
loopne
aam
mov
sahf
mov
pop
push
cmp
cmpsl
ficoml
test
or
jle
ret
jmp
dec
decb
rcrb
jns
cmp
add
adc
addr16
int
and
dec
clc
fisubrs
add
imul
aas
movsb
ret
sub
add
lret
add
mov
or
js
ret
idivl
lahf
mov
or
xor
push
fwait
int3
cli
add
pushf
and
sbb
mov
xchg
sub
push
mov
test
mov
mov
lgs
mov
mov
mov
outsl
clc
jbe
xchg
pop
movsb
test
ja
rclb
or
arpl
add
fistl
fwait
mov
and
loop
sub
jl
adc
test
sarl
or
int3
add
adc
movsl
or
paddw
jb
push
nop
es
inc
gs
sbb
sbb
out
leave
fsubrl
test
xchg
arpl
add
push
aas
je
sub
shl
shlb
push
mov
jb
in
inc
ficomps
movsb
push
jb
int
sub
xor
pop
inc
adcb
stc
fs
lea
adc
xchg
xchg
loopne
sub
jle
dec
jmp
in
ja
ja
jge
sub
xor
ja
test
fistps
inc
mov
andl
rcrl
insl
cmp
or
das
nop
xchg
in
inc
push
cmpsb
push
fiaddl
sub
ljmp
cmc
push
rorb
push
imul
sbb
push
jmp
jne
iret
lret
lea
lahf
dec
jp
cmpsb
jno
stos
fwait
push
aas
mov
sti
ret
pop
and
mov
cmp
mov
cli
cmp
inc
inc
test
dec
add
bound
mov
jns
jmp
mov
mov
dec
enter
hlt
mov
lret
lea
lret
jp
addb
jae
ror
movsl
pop
mov
shrl
cli
xchg
push
repnz
and
mov
inc
icebp
aad
es
mov
in
das
rcll
mov
xor
fisttpll
lret
push
repnz
xchg
in
push
movsl
add
scas
sahf
insb
and
adc
addr16
adc
pop
shlb
and
call
call
cmp
imul
or
ret
and
jmp
mov
daa
and
and
popa
inc
mov
mov
lcall
jne
and
outsl
fwait
push
inc
mov
adc
sub
out
xchg
sub
ffree
loop
mov
xor
xchg
inc
jge
cli
jle
push
call
mov
xor
pop
stos
icebp
ja
sub
or
inc
push
in
loope
xor
cmp
push
rcll
jae
dec
out
test
stos
jle
daa
in
mov
daa
mov
pusha
adc
dec
bound
cmp
inc
lds
or
push
xor
test
mov
sbb
xor
das
xor
xchg
mov
pop
push
sahf
jg
mov
dec
adc
adc
sbb
xor
aaa
cmp
dec
lods
sub
push
mov
fldcw
aaa
cmpsb
mov
sbb
jle
pop
fstpt
stc
mov
je
mov
cmpsb
sub
dec
ret
call
inc
movsl
xchg
inc
scas
scas
mov
cmpsl
mov
iret
xchg
mov
insb
dec
loope
jg
iret
mov
popa
lods
icebp
scas
jb
outsl
sub
adc
jne
push
sbb
imul
orl
adc
jecxz
lock
xchg
mov
sub
call
in
jge
sahf
push
cmc
and
out
jge
stos
test
jnp
cmp
add
cwtl
stc
xor
adc
xor
push
and
sub
and
les
dec
lahf
xor
mov
das
and
add
cmp
mov
nop
sarb
push
enter
jmp
push
ja
int3
mov
push
bound
xor
xchg
add
int
or
push
adc
in
int
cmp
sub
and
or
fs
arpl
das
clc
rolb
sbb
lea
or
or
push
cmp
sahf
fs
dec
xchg
sbb
test
xchg
mov
push
mov
cs
sbb
jb
mov
pusha
inc
xchg
xor
inc
sbb
inc
ficomps
ja
sbb
aaa
mov
lock
add
xor
insl
aam
add
mov
cmpsl
xchg
cld
mov
sti
adc
shll
mov
sub
sbb
pop
adc
and
test
cmp
xor
imul
add
sbb
xlat
mov
dec
mov
pop
lods
test
mov
je
jp
jne
bound
push
in
stos
js
mov
or
cmp
or
into
lss
xchg
push
shr
inc
mov
enter
loope
pusha
adcl
lock
movsl
movsb
rorl
mov
inc
pusha
lods
sar
sub
js
inc
pop
outsb
jno
shll
lods
mov
pusha
insl
mov
cltd
lret
dec
inc
stos
pop
loope
inc
jae
cltd
xlat
jnp
inc
pop
xchg
aam
adc
test
cmp
jno
add
pop
nop
shlb
sbbb
repz
fdivl
push
mov
xlat
movb
sbb
xchg
fsubr
lea
lret
pop
in
sub
flds
xor
popf
pop
lret
cli
ret
cmp
jns
scas
mov
iret
mov
add
cs
int
or
ja
add
pop
test
xchg
frstor
jo
cmp
sbbb
insb
dec
sti
and
jp
enter
mov
sbb
mov
fwait
leave
or
push
stc
gs
lods
ret
jae
adc
cmpsl
push
popa
and
pop
inc
inc
add
mov
stc
dec
push
mov
repnz
stc
mov
ss
loop
adc
int
xchg
das
jb
xchg
movsb
decb
push
pop
es
movsb
inc
or
shll
mov
jns
inc
movsb
cmovl
push
das
pop
inc
in
ja
fwait
dec
push
jns
cmpsb
shl
sarl
and
jle
xor
jns
mov
movsb
jmp
subb
ret
hlt
mov
inc
xchg
gs
inc
in
cmp
idiv
jle
or
cmp
jmp
xorl
mov
orb
inc
xor
xchg
gs
cmpsb
push
xchg
xchg
mov
out
inc
push
mov
adc
js
loope
inc
xor
mov
loop
sbb
out
sarb
test
aaa
ja
popf
xchg
les
mov
xchg
sub
int3
jnp
jne
push
rcrl
pop
push
sahf
dec
dec
mov
ljmp
je
mov
jle
sbb
div
popf
test
add
sub
push
sub
stos
les
cmpsb
inc
cwtl
test
xchg
xor
push
out
push
sub
test
xor
dec
stc
xchg
push
pop
lock
les
push
rcll
jg
sti
mov
mov
xlat
outsl
test
dec
push
inc
mov
adc
inc
or
push
inc
push
jne
inc
clc
mov
mov
test
sub
icebp
aas
bound
mov
bound
aaa
loop
mov
jae
fisttps
icebp
into
sub
arpl
gs
rcll
or
mov
aad
into
lret
or
dec
sub
cltd
xchg
xor
inc
jno
add
daa
les
pop
mov
mov
jmp
cltd
xchg
mov
pop
scas
aam
inc
mov
mov
lods
cltd
bound
mov
jbe
jmp
adc
enter
pop
adc
cmp
sub
pop
push
fisttpl
and
mov
mov
aaa
into
cli
mov
adc
jmp
lods
pop
rcll
mov
inc
mov
lds
je
adc
out
data16
mov
add
add
jp
add
add
rcrb
add
add
add
add
mov
add
add
xor
xor
xor
add
add
add
stos
addb
sar
ljmp
ja
mov
outsl
in
incl
jns
inc
add
arpl
mov
outsl
popa
jb
or
out
xor
add
pop
add
add
add
add
add
adc
add
add
push
int
xor
mov
add
sbb
sbb
or
and
sbb
and
pop
popa
js
add
lret
pop
jb
cmp
add
gs
stc
rcrl
decl
fadds
or
pushl
movb
mov
mov
add
cld
cld
lcall
pop
add
cld
xor
pop
inc
lock
test
mov
rcrb
call
cmp
incb
repz
add
add
add
adc
leave
add
dec
call
xor
rolb
mov
incl
ljmp
mov
std
std
loopne
pushl
sbb
and
push
add
lock
push
adc
call
jne
sar
dec
add
repz
or
push
lea
push
push
push
add
icebp
sbb
add
pop
add
add
add
xchg
sbb
sbb
add
cmp
cmp
out
sbb
add
insb
add
xor
movsl
gs
dec
jne
inc
add
jo
movsl
fs
add
outsl
shll
inc
popa
inc
outsl
jae
insb
insb
outsl
add
imul
add
xor
dec
imul
jae
loopne
insb
push
add
sbb
ret
lea
add
add
add
add
add
add
jecxz
add
das
cmp
xlat
sbb
cmp
int3
ja
in
cld
ds
or
xchg
lret
xchg
push
pop
xor
dec
rclb
call
mov
adc
mov
in
cmp
cs
into
lds
ss
mov
jno
repnz
xchg
push
sti
xor
push
int3
jb
rol
out
clc
xor
fstl
xor
mov
insl
decb
sub
enter
xchg
sub
mov
int3
adc
xor
pop
repnz
ret
pop
add
cltd
sbb
icebp
js
les
cs
testl
int
ja
xchg
jecxz
lods
aad
rcrb
sbb
xchg
scas
lods
or
pop
shll
xchg
adc
notb
cli
imul
mov
jbe
daa
out
leave
std
adc
fildll
sub
xchg
cmpsl
shll
subb
sbb
xchg
mov
arpl
aam
adc
out
fdivs
dec
xlat
or
aam
add
xor
xor
dec
stc
cmp
inc
fsubs
inc
xor
lds
lods
and
popf
mov
push
stos
enter
pushf
add
fldl
pushf
insb
flds
mov
cmp
or
adc
test
lock
icebp
xchg
cmpsl
jp
cmpsb
sub
addl
int3
loope
xchg
pop
mov
mov
outsl
rcl
scas
push
mov
pop
dec
inc
es
jl
mov
cld
jbe
loop
pop
imul
lock
mov
adc
aas
imul
or
call
xlat
push
outsl
in
fsubrp
decb
mov
das
fldcw
les
sbb
dec
jmp
repz
xlat
cmp
aaa
lods
pop
ficompl
clc
xchg
push
test
rclb
das
enter
out
lret
dec
popa
rcll
pop
cli
shll
in
or
jo
cld
lret
popl
fwait
jnp
push
pusha
dec
dec
sub
out
mov
xchg
xchg
fs
xor
test
div
adc
push
pop
enter
mov
lahf
popa
das
cli
jmp
test
in
data16
sbb
pop
insb
lds
mull
stos
lahf
lods
fistps
out
js
test
push
sub
mov
and
outsb
mov
mov
jecxz
mov
push
int3
pop
mov
insb
mov
dec
outsl
std
jecxz
out
stos
mov
lret
pop
movsl
lahf
pusha
jge
jmp
into
sub
pop
adcb
jl
dec
and
xchg
jecxz
cmpsl
xchg
movsl
push
in
jle
xchg
add
inc
dec
jle
add
imul
mov
lret
lret
insb
sbb
into
ds
push
mov
dec
insl
mov
scas
push
mov
sub
mov
scas
pushf
aam
jmp
lret
xor
sarb
fstpt
icebp
call
movsl
loopne
push
pushf
testl
stc
fdivl
imull
fistpll
decb
adc
pop
aad
bound
movl
xchg
lock
adc
pop
xchg
lret
in
adc
pop
dec
dec
xchg
and
repnz
test
rorl
adc
ja
inc
sub
sbb
inc
loope
cmc
pop
or
sub
mov
mov
lock
lahf
inc
lahf
dec
dec
dec
pop
mov
xchg
dec
test
ret
popf
pusha
fidivrs
xchg
mov
stos
or
sahf
push
lods
cmovp
adc
dec
and
in
inc
lret
mov
mov
ss
inc
arpl
or
xchg
scas
fs
lods
dec
cmpb
movsb
xor
jle
sbb
aas
mov
into
jecxz
ret
mov
cmp
gs
int3
xlat
arpl
jg
xchg
subb
push
jno
pop
mov
xor
scas
inc
xor
movsl
pop
stos
or
add
andl
lods
mov
inc
mov
mov
add
scas
push
lods
jp
xchg
es
stos
push
or
lods
mov
add
mov
int3
inc
xchg
daa
inc
xchg
dec
andl
pxor
sbb
out
repz
outsl
js
jbe
push
jge
push
mov
push
add
dec
xchg
cltd
xor
push
scas
inc
xchg
pop
aam
add
cmc
cmc
xor
xor
daa
lods
mov
sbb
loopne,pt
and
insl
add
pop
cli
jb
dec
movsl
sbb
inc
fcomp
repnz
pop
xchg
test
adcl
cmp
and
jl
popf
mov
mov
adc
cli
je
test
js
enter
sub
cmp
mov
jmp
sbb
sahf
mov
sub
and
sbb
das
aad
and
add
inc
decb
aaa
inc
fnstcw
or
or
mov
xchg
dec
sahf
inc
aas
dec
xor
mov
sti
pop
cmpsl
mov
loope
cmp
daa
enter
leave
xor
loope
push
arpl
add
cmc
subl
push
dec
addr16
daa
or
jo
jle
and
lods
sahf
mov
inc
cmp
cltd
fbstp
push
popa
pop
icebp
mov
jecxz
test
sbb
jno
int
mov
leave
lcall
sub
rcl
les
loop
push
inc
rcrb
movsb
and
dec
and
or
sbb
outsb
lret
mov
loope
fisubs
mov
pop
add
sarb
call
jl
dec
test
addr16
jno
lds
int
cli
les
or
adc
insl
fisubrs
out
or
dec
pushf
pop
icebp
xchg
mov
cmpsl
xor
js
inc
test
imul
cld
hlt
cmp
add
xchg
cmpsb
fistl
flds
sbb
fs
xchg
push
sahf
imul
inc
fdecstp
data16
daa
lahf
jl
and
xor
addr16
sub
push
in
mov
xchg
out
in
cs
mov
jmp
inc
cmc
sarb
mov
dec
mov
movsb
jl
out
pop
call
es
rcrb
mov
cwtl
xchg
fdivl
rorl
jns
sbb
sub
push
mov
jns
mov
call
adc
stc
fistpl
in
jmp
mov
test
or
aas
adc
enter
xchg
out
xchg
pop
loope
jne
stc
repnz
shl
xor
mov
sub
and
inc
lea
nop
int3
push
push
loope
stc
xchg
outsl
pop
adc
and
and
repz
jae
push
xchg
adc
or
scas
pop
arpl
not
jo
stc
xor
fsubrs
jl
xchg
cmp
enter
lcall
push
mov
push
repnz
rcr
jmp
jmp
or
mov
push
sbb
dec
lods
mov
cmp
leave
test
cmp
or
ja
push
pop
fiaddl
sahf
jbe
inc
mov
int3
inc
jns
or
and
ja
mov
jmp
in
or
push
or
jge
sub
pop
call
mov
xchg
xchg
outsl
lods
add
jle
pop
and
std
and
insb
jp
sbb
out
out
mov
dec
sbb
fcom
icebp
mov
int3
or
dec
popa
push
cmp
xor
add
mov
call
xchg
add
push
aas
ficoml
xchg
test
loop
and
pop
xor
fadd
xchg
cmpsb
in
test
shll
push
add
cmp
stos
push
push
mov
adc
addb
and
push
fcmovu
jp
lods
jg
fucom
test
and
jle
iret
add
fistpll
lcall
or
js
mull
jmp
pop
mov
cmc
scas
test
jle
cs
flds
xor
cmp
fdivr
xor
daa
bnd
jnp
xorl
cmpsb
adc
mov
pop
cld
je,pt
pop
fists
ljmp
sbb
mov
pop
mov
inc
arpl
outsb
fstpl
out
or
insl
push
data16
ds
stc
in
add
aaa
imul
dec
inc
pop
lods
mov
in
dec
lods
jne
xor
in
fsubrp
jmp
jae
sbb
jecxz
jl
mov
push
daa
xlat
cli
stos
mov
addr16
jnp
xchg
test
lahf
inc
fsubs
clc
dec
std
dec
jecxz
jbe
stos
and
in
outsl
addl
pop
push
mov
push
cmp
fwait
pop
js
cmp
scas
sahf
inc
mov
ror
gs
ljmp
in
enter
pop
add
adc
sub
jo
arpl
lods
cmp
daa
xchg
jns
xor
inc
jge
cmp
pop
stc
mov
out
pop
lock
fistpl
dec
stc
fs
mov
cld
pop
adc
rcl
jmp
lret
xchg
sbb
aad
in
sbb
or
mov
cmc
sub
addr16
pushf
add
mov
lahf
push
pop
and
mov
loop
adc
sahf
push
add
push
cmpsl
mov
or
stos
xchg
or
test
pop
pop
cmp
mov
leave
mov
inc
mov
and
out
imul
mov
add
pop
sahf
test
ljmp
cmp
xchg
fsubrs
shll
pop
add
push
pop
gs
hlt
xor
mov
js
sub
or
insb
and
js
and
cmpsb
sbb
in
jl
mov
stos
fdivr
mov
jmp
xchg
sbbb
jo
jnp
dec
add
jp
push
es
pop
xchg
stos
popf
fs
in
mov
into
into
mov
arpl
ret
sub
sbb
pop
gs
stc
pop
in
rorl
fsubr
jp
pop
jbe
xor
jbe
loope
dec
pushf
xor
bound
js
jmp
icebp
add
les
cmp
jb
adc
xor
xor
aad
adc
push
ret
arpl
sub
xchg
int
call
jbe
inc
addb
xchg
mov
into
pop
pop
mov
push
fwait
lahf
jp
pop
mov
cld
or
clc
movsl
mov
lock
add
scas
sbb
cwtl
adcb
push
lds
sub
push
mov
dec
fmul
out
pop
icebp
cltd
and
or
mov
shll
sub
adc
je
fidivl
cmpsl
fcoms
cmp
sahf
sbb
btc
lcall
pop
movsl
je
add
decl
outsl
push
add
pop
cs
inc
mov
pushf
lods
out
out
xor
inc
imul
ficoms
jnp
xchg
inc
xor
push
fnstcw
pop
sub
pop
xor
xchg
xor
lcall
mov
es
pop
idivl
push
or
pop
mov
test
and
push
pusha
add
ljmp
stos
cmp
mov
out
ljmp
and
xor
xor
push
rcll
inc
mov
cmp
xor
pop
loop
xchg
ret
mov
lcall
mov
ficompl
subb
popa
ret
das
add
out
negl
adc
mov
shrb
xor
imul
push
sti
xor
mov
inc
lcall
xchg
adc
int3
idivl
ss
movsb
mov
xchg
sub
je
push
cs
fs
in
mov
sbb
pusha
ds
std
sbb
inc
add
cld
jns
std
push
push
fidivs
mov
cld
pop
cmpsb
aad
push
mov
lret
xor
out
clc
outsl
fldl
xor
add
xor
xor
pop
inc
push
aam
sti
fstpt
fmulp
sbb
ss
lahf
push
add
dec
frstor
orb
sbb
lret
ds
xchg
inc
mov
pushf
ljmp
fsub
adcb
cltd
xchg
push
sub
inc
pop
or
arpl
mov
bound
les
roll
inc
je
pop
daa
jnp
xor
mov
fldcw
mov
xor
dec
cmp
out
and
leave
daa
sbb
add
out
xchg
stc
or
pop
call
push
inc
imul
jecxz
int
and
xchg
icebp
xchg
mov
sahf
add
dec
pop
stos
sbb
pop
push
fs
out
iret
or
pcmpeqd
popa
cmp
mov
cmovne
xchg
js
cwtl
out
into
mov
lret
js
cmp
mov
imul
xchg
clc
test
jp
mov
pop
jmp
mov
or
xchg
loop
xchg
and
xchg
fimuls
scas
mov
jnp
inc
xchg
jne
xchg
popa
xchg
push
dec
test
dec
fs
mov
mov
rcrb
cmc
add
sub
xor
fsubr
or
jecxz
daa
and
xor
loop
cmp
xchg
push
insl
dec
mov
push
mov
int
scas
lock
mov
test
out
mov
scas
sub
stos
incl
dec
adc
jns
mov
pop
lret
stos
mov
sbb
iret
xchg
lret
mov
shll
hlt
and
int3
cmp
jge
gs
or
imul
jae
cld
jno
das
mov
jne
arpl
arpl
or
lcall
or
push
insl
cmp
and
inc
jo
pop
lods
dec
jge
sub
push
pop
cs
stos
inc
adc
xor
popf
jae
dec
gs
movntq
popa
inc
in
sbb
mov
sub
movsb
test
sub
addr16
into
lcall
cwtl
dec
jmp
xchg
cmp
xchg
dec
jnp
mov
shrl
jno
int3
lods
popf
out
xchg
jle
push
push
jg
test
pop
ret
fisttpll
cmc
out
aad
outsb
ret
cmpsb
and
cmp
popa
cli
push
imul
mov
stc
pop
sbb
and
jle
mov
je
lahf
or
loopne
xor
sarb
jbe
jmp
mov
pop
pop
out
hlt
xor
sub
push
repnz
push
xchg
int3
or
cltd
dec
insl
aam
dec
or
ret
cmpsl
jecxz
aaa
imul
repz
xchg
pop
mov
add
pop
clc
add
movsb
inc
sbb
lods
lret
xchg
mov
aaa
scas
and
or
mov
mov
mov
mov
repnz
rorl
xor
mov
push
dec
dec
out
xor
andb
das
loope
xchg
pop
push
popf
mov
fcmovu
pop
mov
lcall
mov
inc
cmp
loope
inc
clc
scas
movsb
jbe
lods
stos
bound
mov
in
sbb
hlt
xchg
cvtps2pd
mov
out
test
shl
mov
xor
sbb
xor
pop
sbb
incb
scas
aad
adc
pop
mov
cmpsb
xchg
inc
out
sbb
testb
fsubr
orb
js
jmp
cmpl
add
dec
lods
aas
inc
sbb
adc
cmpsb
xor
mov
rcrl
mov
xorl
sbb
mov
arpl
inc
mov
repnz
hlt
gs
jecxz
mov
jp,pn
into
push
mov
pop
ds
mov
lods
push
loop
mov
push
mov
cmp
rcr
fmull
aam
mov
cmpsb
dec
sbb
cwtl
or
sti
inc
mov
xor
incl
cmp
sbb
cwtl
cmc
mull
jae
push
fisttpll
mov
clc
sub
mov
cmpsb
mov
es
insl
push
xchg
sbb
push
mov
pop
rcll
and
repnz
sub
sbb
push
gs
sub
lcall
fisttpl
and
loop
popf
and
pop
xor
jne
mov
mov
rcll
or
cmpsl
mov
mov
mov
scas
mov
ds
dec
rorl
xor
and
test
add
pop
fwait
or
push
sub
loope
out
outsl
cmp
push
fneni(8087
mov
inc
sub
pop
mov
cmc
push
loopne
sub
leave
mov
mov
lea
aaa
add
ljmp
sub
mov
adc
sti
out
adc
repz
sub
mov
push
out
cmpsl
cmp
testl
inc
jmp
adc
sub
loop
loopne
scas
pusha
jbe
adc
jl
notl
stc
xchg
ret
fcoms
inc
sahf
lds
push
pop
push
pop
cmp
fucomp
inc
gs
lea
rorb
mov
add
xchg
hlt
sahf
xor
push
addb
movsl
clc
scas
cmp
stos
pop
jmp
push
shlb
mov
clc
jge
jmp
mov
ljmp
daa
mov
jo
popa
in
fstpl
stos
jne
icebp
aad
aam
lds
xor
inc
aas
cmpsb
popf
js
call
loop
jmp
les
cmp
adc
dec
xor
imul
incl
jle
loopne
notb
push
jmp
cld
test
jg
scas
push
std
pop
stc
cmp
sahf
loop
repz
into
mov
out
lods
sub
lea
jle
movsl
cmpsl
lret
inc
scas
mov
cmp
add
cmc
xor
addb
cmp
test
int
mov
mov
or
rcrl
js
popf
jbe
les
cmp
cmc
xchg
loopne
popa
jecxz
sbb
hlt
mov
add
lea
jle
nop
inc
xchg
and
push
aad
popf
bound
arpl
and
popf
sbb
dec
jns
cmp
aaa
shll
push
push
lret
push
stos
imul
dec
mov
lods
shll
loop
mov
inc
cmp
call
enter
outsb
adc
add
outsb
test
push
push
jg
xor
sub
push
iret
add
mov
ds
sub
add
inc
out
and
jmp
cmc
adc
xor
ret
pop
mov
in
xor
sbb
xor
lret
and
lods
dec
into
into
ja
mov
dec
data16
or
into
mov
jmp
aas
je
add
jnp
pop
jecxz
mov
mov
repz
call
push
scas
cmp
push
push
stc
sub
push
push
iret
inc
add
cltd
push
jg
add
pop
xor
in
mov
push
and
add
dec
mov
out
mov
cli
loope
minps
ret
jmp
mov
aad
cmp
in
or
addr16
add
or
sbb
add
sbb
in
jb
cmp
xlat
stc
cmpsl
std
dec
cltd
enter
das
test
inc
push
xor
in
in
add
or
daa
test
nop
shlb
sub
xchg
aam
pop
outsb
scas
adc
inc
test
mov
sahf
pop
sbbb
sbb
pop
lock
ss
out
push
std
repz
or
push
xchg
in
cmp
dec
inc
pop
sbb
pop
out
cmpsb
stos
faddl
stc
cwtl
mov
and
enter
adc
xor
inc
mov
or
frstor
fidivl
pop
lea
mov
and
in
mov
sub
pop
jbe
mov
mov
push
adc
pop
pop
cmp
test
or
imul
aad
push
add
aad
adc
jge
mov
test
mov
cs
mov
mov
sub
subb
enter
out
jbe
xchg
out
sbb
push
sbb
ja
xchg
jns
repnz
dec
jl
jbe
das
fildl
mov
pop
xor
call
cmp
mov
dec
jne
push
in
lods
xor
cmpsb
in
outsb
dec
pop
mov
mov
cli
sahf
loop
xchg
mov
and
int
xchg
cltd
add
add
outsb
xchg
filds
pop
ror
fwait
jmp
bound
push
lahf
and
ja
out
or
pop
and
lret
push
lods
in
hlt
dec
cmp
not
jp
pop
pop
inc
sbb
in
sbb
pop
lods
not
push
mov
jecxz
jae
push
pop
add
ljmp
pop
pop
or
stos
repz
xor
or
lcall
cltd
lods
fldcw
pop
outsb
insb
icebp
sti
shll
xchg
jl
jp
cwtl
sbb
mov
ja
lret
and
or
sbb
lahf
lret
scas
fstl
push
popf
notb
aas
mov
cwtl
push
mov
shlb
shr
lds
adc
int
ret
mov
or
mov
sbb
pop
lahf
cltd
int3
ds
and
sub
nop
adc
lods
inc
jecxz
mov
daa
cli
imul
out
push
adc
bound
xorb
hlt
sub
cmp
loopne
gs
add
in
mov
ja
pusha
movsl
add
add
add
add
add
repz
add
jge
add
add
add
add
add
add
xchg
add
push
add
add
add
imul
add
add
add
add
les
add
add
in
in
in
inc
add
mov
stos
stos
add
ja
js
aad
js
js
add
add
add
aad
push
jb
and
add
add
add
add
and
adc
push
add
add
add
add
mov
add
add
add
add
add
add
repnz
add
push
add
xchg
fs
in
imul
push
gs
add
dec
je
fs
fiaddl
sub
inc
sbb
and
lea
pop
loopne
add
add
in
or
inc
adc
ljmp
clc
cmp
or
or
mov
cld
push
inc
pop
mov
add
cld
adc
push
insb
leave
repnz
mov
pop
xor
adc
add
enter
fdivr
dec
add
add
adc
add
adc
insb
add
xor
adc
call
push
add
add
popf
or
std
cld
add
push
and
addl
cld
inc
xor
add
incl
jne
lret
mov
dec
xor
adc
call
rclb
push
add
add
aad
add
add
out
movb
add
xor
dec
and
add
insl
jb
je
js
outsl
outsl
outsb
hlt
je
add
insb
repz
outsb
jns
xchg
dec
inc
gs
bound
popa
push
imul
xchg
addr16
push
insb
add
insb
jns
outsl
outsl
imul
je
je
je
insb
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
add
ror
pusha
adc
data16
stos
xor
leave
js
jbe,pt
stos
sbb
dec
pop
and
push
fmull
dec
aad
data16
sbb
scas
add
and
aad
popf
push
or
push
jmp
jle
push
scas
dec
jg
clc
popf
or
pop
mov
cmpsl
js
dec
bound
loope
mov
jb
ficompl
mov
ds
dec
lret
jae
xor
inc
stos
or
push
fstl
ret
mov
jg
imul
mov
insl
rolb
scas
mov
in
in
idivl
cli
hlt
jecxz
jae
xor
popf
pop
enter
inc
cmp
xorl
jp
and
adc
sub
push
xlat
cmp
xor
jae
out
hlt
jg
xchg
or
adc
mov
lods
xor
or
cmp
loope
inc
adc
int3
popf
stos
ret
add
xchg
xor
pop
sbbb
insb
xor
dec
and
or
push
addb
mov
xchg
ret
negb
cmp
adc
mov
lock
int
inc
and
dec
lahf
xchg
stos
sbb
imul
or
mov
jb
push
popa
add
fiadds
cli
in
and
xchg
mov
jle
and
sub
int
rcll
xor
out
int3
loope
popl
adc
int3
mov
lret
dec
push
jg
loopne
mov
cmpsl
popf
jmp
pushl
repnz
dec
int3
cmpb
pop
insb
mov
push
shl
mov
jns
pop
dec
inc
mov
jbe
xorb
testb
xchg
inc
rcrb
mov
pop
jg
cmp
dec
mov
push
fldl
xchg
out
pushf
and
add
mov
nop
fpatan
inc
cmp
out
jb
sbb
frstor
jnp
cmp
mov
loopne
jbe
sbb
ss
and
sbb
ds
mov
mov
or
mov
adc
inc
aas
push
dec
jl
and
icebp
test
hlt
fadds
aas
and
les
incb
and
daa
push
rol
loop
jne
icebp
mov
addl
ds
adc
es
mov
and
xchg
lcall
shll
decl
in
lods
or
mov
jnp
lret
xlat
cli
or
and
jns
and
and
push
or
inc
push
dec
dec
inc
test
add
mov
mov
ss
stos
jge
imul
fistpll
mov
pop
jp
lahf
inc
xchg
jbe
in
shl
sbb
repnz
mov
daa
push
lahf
add
or
mov
or
mov
lods
sbb
lcall
imul
outsl
arpl
jp
adc
arpl
mov
push
cmp
pop
push
mov
shll
inc
arpl
and
xor
jmp
mov
xchg
sar
out
cmp
repz
les
rolb
pop
imul
aam
int3
push
sbb
jbe
jae
mov
stc
push
rolb
dec
lock
fwait
cmpsb
out
loop
push
jmp
cltd
lcall
pusha
jne
dec
add
cld
outsb
out
not
stc
pusha
xlat
arpl
lahf
in
lods
int
dec
dec
popl
xor
push
lret
mov
shrl
cmp
xor
pop
mov
das
fs
xlat
pop
pop
lods
mov
in
subl
lret
mov
lret
push
cmc
and
xchg
xor
push
dec
add
idiv
pop
aaa
jae
negl
pop
or
iret
mov
arpl
lds
lahf
xchg
je
push
jmp
lret
scas
fildl
loopne
pop
pop
sub
xor
stos
push
scas
xchg
insl
mov
outsl
inc
pop
xchg
in
xchg
out
insb
rol
mov
pop
add
mov
or
es
pop
shufps
aaa
push
test
scas
std
inc
rclb
icebp
xchg
cs
gs
lds
ljmp
cli
mov
and
add
pop
xor
adc
fucomi
outsl
stc
fbld
imul
fnstcw
mov
outsb
xlat
dec
clc
inc
mov
inc
test
push
dec
inc
stos
ror
hlt
inc
push
leave
push
cmp
int
icebp
push
or
add
leave
pop
jmp
push
adc
push
in
ljmp
dec
out
push
xchg
add
adc
cs
clc
sub
lods
add
loopne
adc
add
cmp
inc
push
sub
mov
push
aad
scas
xor
bound
rorb
fildll
adc
loop
adc
es
push
test
int
mov
jae
mov
cmp
pop
in
jo
clc
pop
cld
push
sahf
cmc
cmovo
xchg
inc
leave
popa
mov
xchg
fs
mov
ljmp
jle
into
lods
into
sub
push
ret
sahf
pushf
in
sbb
cwtl
shlb
test
das
imul
mov
data16
fdivl
rolb
inc
enter
daa
and
mov
dec
xchg
gs
mov
jmp
or
pop
add
dec
or
sbb
filds
pushf
aad
cmp
mov
push
bound
adc
aaa
or
mov
mov
xor
movaps
add
hlt
scas
loope
pop
shll
test
pop
cmp
sbb
lret
push
gs
mov
lahf
aam
pop
mov
les
repz
mov
cmpsl
stos
or
loopne
push
imulb
jmp
test
mov
pop
sarl
push
jg
lret
adc
mov
xor
lahf
add
mov
sub
fmul
mov
cmp
mov
sub
jg
or
cmp
mov
jp
jge
or
dec
lahf
fcmovne
mov
pop
notb
jns
orl
sbb
shrb
mov
push
mov
or
pushf
popa
push
push
inc
jge
mov
pop
shr
sbb
jecxz
dec
fistps
daa
pop
mov
sbb
scas
sti
xchg
test
xlat
sbb
stos
cmpl
pop
xchg
icebp
repz
jge
pusha
jns
cld
push
lock
out
add
mov
inc
test
test
cwtl
pop
add
jb
daa
inc
andb
movsl
mov
mov
fwait
lock
gs
stos
jo
or
jl
pop
inc
add
inc
mov
in
adc
movsb
sarl
mov
xchg
nop
adc
push
adc
or
fucom
mov
out
in
enter
movsb
popf
test
das
ret
xchg
mov
push
outsb
cmp
sub
add
arpl
subl
xchg
jge
push
scas
imul
jp
push
add
mov
call
pop
adc
mov
push
jbe
push
pop
pop
ljmp
lods
mov
pop
xor
sub
movsl
ds
inc
push
loope
scas
jl
mov
and
sbb
cltd
in
xchg
pusha
add
pushf
mov
mov
sbb
test
mov
fisubl
sbb
rclb
add
cmp
dec
sti
jp
pop
xor
xor
outsb
push
out
cmpsb
xor
xchg
mov
imul
loop
lcall
adc
sub
mov
mov
stos
push
ror
or
insl
pop
lret
scas
push
xchg
lock
inc
sbb
mov
out
in
mov
mov
js
mov
movsl
push
pop
and
cmp
es
repnz
rol
inc
push
bound
sbb
mov
sbb
pop
outsb
sti
int3
pop
hlt
dec
mov
push
mov
fdivr
clc
xor
cltd
mov
adc
push
int3
jmp
jmp
xchg
ljmp
cmc
data16
xorb
std
packuswb
inc
xchg
sub
adc
jae
add
push
sbb
dec
lods
pop
inc
adc
push
xchg
lods
push
mov
cmp
loope
daa
addr16
dec
push
ljmp
inc
cmp
push
loop
aaa
mov
inc
jecxz
jb
insb
leave
loope
pusha
pop
imul
mov
scas
sbb
out
loope
mov
and
int3
jge
xor
mov
leave
sub
lea
mov
mov
sbb
lret
repnz
cmp
cmpsb
mov
add
adc
pop
cmpsb
push
push
xlat
or
add
push
adc
jl
and
jo
xchg
and
lcall
dec
and
sub
xchg
cmpsl
pop
std
xorb
mov
jne
jbe
iret
test
enter
push
in
es
pop
or
dec
jl
jle
loope
add
pop
cmc
xchg
cwtl
jg
adc
aas
sbb
mov
dec
rcrl
pop
cvtdq2ps
shll
xchg
xor
add
add
arpl
mov
cmc
jmp
jle
iret
repnz
cld
push
sbb
fstpt
mov
mov
ret
popa
jmp
cmp
mov
and
cmp
pop
pop
inc
arpl
int
pop
dec
and
pop
inc
fnstsw
lock
jbe
lods
jge
add
popf
repz
dec
sti
loop
orl
and
mov
rolb
dec
out
and
imul
clc
test
xor
pop
xor
xchg
xor
cltd
pop
pop
mov
mov
test
aad
or
mov
into
inc
cmp
js
je
cmpsl
in
nop
xor
fisttpll
test
push
arpl
and
adc
into
mov
test
scas
rcr
push
add
fs
or
loope
in
iret
vpsubd
sbb
mov
push
xor
cmp
push
cmp
daa
adc
les
lods
mov
lea
repz
add
sub
push
xor
lds
add
inc
pop
inc
out
jge
pop
ss
add
movsb
mov
xchg
sahf
add
push
fdivs
aam
js
sub
jl
dec
dec
fidivs
imul
push
iret
inc
mov
test
mov
inc
int
insb
mov
and
xor
pop
fisubl
pop
pop
mov
pop
nop
jmp
push
mov
dec
adc
push
iret
jae
outsl
pop
mov
out
fs
push
dec
sti
and
mov
pop
mov
imul
pop
jp
jo
jno
inc
cld
js
sub
mov
sti
adc
jle
leave
pop
stos
fsubr
enter
and
jle
pop
insl
jo
enter
loopne
roll
or
inc
xchg
mov
lahf
pop
leave
jns
add
aaa
mov
or
push
pop
mov
ljmp
jle
push
mov
int3
mov
cmp
xor
and
lods
das
adc
fdiv
cltd
in
pop
rcrl
int3
jmp
mov
dec
mov
inc
cmc
adc
mov
insb
loop
or
lret
sahf
dec
xchg
sub
inc
notl
mov
sti
and
dec
sahf
or
daa
xchg
fnsave
in
ljmp
sub
mov
repz
ret
lcall
mul
outsb
jb
ljmp
jecxz
popa
fcomi
and
and
loope
xor
inc
xchg
or
fldl2e
insb
into
mov
adc
mov
jnp
mov
loope
inc
adc
in
pop
lret
bound
xor
and
invd
xor
mov
arpl
mov
xchg
jnp
lds
stos
push
push
xor
push
and
dec
or
loope
loop
mov
mov
push
and
lock
fs
xor
push
pop
ss
stos
xchg
jns
je
jg
pop
push
mov
sub
inc
push
clc
data16
xchg
stos
dec
mov
imul
mov
sbb
stos
push
sub
fwait
and
dec
push
out
add
addr16
int3
push
enter
popf
ljmp
mov
push
push
mov
push
inc
les
into
dec
test
rorl
mov
paddd
das
inc
xor
lock
rclb
dec
loopne
inc
cli
pop
popf
orb
pop
pushf
or
jmp
mov
push
stos
ja
mov
jmp
rolb
and
and
xor
jnp
dec
xchg
jno
aad
out
fdivl
sbbl
cmp
insb
xor
push
sbb
int3
cmp
pushf
aam
pcmpgtw
bound
inc
mov
adc
sbb
xchg
out
mov
mov
push
js
inc
xor
push
dec
imul
add
inc
cmp
scas
pop
in
push
ljmp
xor
scas
xchg
scas
pop
lods
rcl
stc
out
add
fnsave
inc
push
mov
adc
scas
or
int
push
out
lcall
mov
lcall
fists
or
or
idivl
test
add
sub
icebp
out
adc
arpl
inc
add
pop
adc
rcrb
mov
pop
inc
fiaddl
mov
inc
pop
xorl
out
punpckhdq
sub
lcall
cmp
mov
mov
sub
add
sbbb
lret
add
lahf
push
stc
aas
aaa
cwtl
sbbb
aas
test
in
mov
cmp
lods
add
jmp
andl
push
loop
xchg
xor
push
shlb
lods
iret
ja
dec
test
pop
xchg
in
mov
pop
daa
fxch
or
pop
inc
or
bound
cmpsl
sub
mov
nop
sti
xchg
call
pop
aad
inc
repz
hlt
xchg
mov
popf
xlat
mov
add
sub
shr
and
xchg
iret
adc
rcrl
movsl
and
addr16
mov
push
sub
mov
stos
out
push
push
xor
push
loop
xor
dec
repnz
mov
cs
flds
sbb
cmpsb
mov
mov
out
and
out
xlat
addr16
or
inc
inc
cs
inc
cmp
test
sub
jp
test
les
pop
mov
cld
add
xchg
mov
inc
movsl
fmull
mov
movsl
inc
int
ljmp
data16
scas
ljmp
adc
aam
jae
mov
adc
xchg
pop
mov
cmp
or
push
mov
rclb
xchg
sub
xchg
adc
js
push
test
divb
in
or
xchg
out
ja
push
inc
xor
and
inc
pop
scas
and
mov
xchg
pop
mov
cmpsb
push
cld
sbb
cmp
push
or
cld
cmp
or
lea
xor
xchg
inc
mov
shlb
sbb
pop
ficomps
inc
pop
fdivs
in
cmp
dec
cmp
xlat
test
cld
fsub
xchg
pop
gs
or
xchg
jo
xchg
or
lahf
cltd
pusha
enter
ds
jne,pn
dec
mov
fsubl
cmp
inc
out
lods
enter
lahf
mov
xor
repnz
inc
mov
mov
xor
mov
cmp
mov
lock
inc
rcr
int
mov
push
mov
jbe
test
add
inc
and
xorb
sub
loopne
mov
inc
shr
cld
xor
jns
mov
inc
ss
stos
dec
bound
in
ds
nop
pop
js
mov
fdivrl
scas
jg
adc
xor
test
lds
jnp
enter
aas
addr16
cld
orl
jmp
cmpsb
js
arpl
out
mov
dec
cmpsl
fsubl
jg
std
repnz
jae
push
sub
imul
xor
loope
push
pop
loopne
cltd
and
xchg
fiaddl
adc
push
repz
mov
inc
adc
cmpsl
mov
push
dec
mov
inc
in
stos
mov
js
outsb
push
mov
sbb
and
into
jns
or
mov
int3
cmpsb
iret
mov
leave
insb
mov
sbb
jne
gs
push
js
xlat
daa
pop
xor
push
mov
jle
push
jb
inc
mov
jo
fstl
mov
xor
les
cmp
int
aad
repz
adc
and
add
and
mov
stos
cmp
repz
mov
jmp
cmp
dec
pushf
mov
inc
int
push
insl
or
movsb
andb
jp,pn
or
mov
test
in
cmp
sahf
fcomp
scas
ds
lcall
popf
cmp
aas
clc
inc
pop
sbb
aam
xchg
das
mov
inc
lahf
in
lock
stc
dec
cs
ret
jmp
into
push
lea
mov
jnp
cmp
out
pop
in
mov
inc
stos
pop
cwtl
rclb
cmpsb
js
in
push
add
js
mov
dec
push
dec
adc
mov
jns
imul
xor
mov
sub
cmpsl
and
and
int3
cmp
jne
sbb
fimull
cmp
je
pop
aas
hlt
pop
sbb
cltd
scas
jmp
and
dec
mov
jmp
pop
xchg
push
cmpsl
xchg
gs
fidivl
pop
bound
push
mov
scas
int
leave
jns
push
btc
cmp
push
xchg
jge
pop
jle
push
cmp
mov
andl
fdivrl
test
pop
lret
jns
xchg
mov
sbb
jmp
or
push
jb
adc
and
imul
and
ret
lds
mov
and
dec
jne
gs
mov
sub
lods
add
xor
pop
fsubs
sub
mov
aad
fildl
mov
imul
lock
add
in
out
push
jne
loopne
fucomi
aas
pop
clc
sbb
jge
lcall
idivb
mov
mov
outsb
pop
test
bound
cmpsb
scas
hlt
aam
repz
popa
adc
xorb
or
stos
mov
inc
nop
repnz
in
inc
mov
xor
outsb
adc
sbb
pushf
int3
add
jno
jnp
lcall
xlat
lahf
repz
inc
loope
out
enter
fs
sbb
adc
add
push
out
out
loopne
dec
inc
dec
nop
fidivs
mov
stos
xor
inc
mov
xchg
loop
shrd
addb
sarb
xor
std
cmp
in
loop
xchg
aad
push
push
adc
sub
pushf
cmp
xor
out
mov
std
cmp
push
mov
jg
push
cmpsb
push
jl
dec
addr16
mov
leave
scas
sub
cmp
fcmove
in
aam
fstps
mull
add
call
push
adc
add
test
cmp
shrb
inc
js
mov
and
sti
mov
mov
shrl
sbb
adc
std
aas
cmp
push
shll
cmp
das
or
mov
xchg
xchg
insb
fildll
or
lret
sbb
adc
mov
shl
jbe
mov
cmpsb
inc
and
push
loope
sbb
inc
and
xor
scas
es
mov
ds
cld
test
movsl
mov
lret
sbb
push
or
loop
ret
mov
aaa
rclb
sbb
ret
loope
add
jle
xor
inc
in
cmpsb
pop
jge
push
fiadds
sbb
pop
push
arpl
daa
jp
inc
dec
out
mov
and
sbb
es
sub
push
out
sbbl
ffree
dec
ljmp
int3
and
ret
insl
stc
jb
jmp
pop
xchg
shll
mov
shrl
scas
js
mov
fucomp
js
sti
into
adc
clc
loopne
adc
and
in
add
les
loope
hlt
xor
push
sarb
loopne
outsb
xchg
test
mov
inc
pop
out
or
xorl
mov
pop
jg
and
jo
add
mov
lret
push
hlt
xor
sbb
lahf
loop
jle
cli
nop
ja
and
jg
sub
in
mov
ljmp
jle
pop
dec
mov
or
movsb
push
mov
pop
fwait
sarl
add
loopne
push
mov
pop
ljmp
pop
cmp
daa
mov
pop
add
mov
jmp
inc
sbb
test
loop
xchg
ret
icebp
je
mov
rcl
mov
fcom
and
inc
jle
mov
push
cmpsl
mov
dec
jle
lock
hlt
sub
pop
jbe
ss
repz
inc
aaa
mov
jl
stos
and
out
test
jmp
notb
jae
inc
outsb
mov
mov
sar
popf
adc
pushl
out
add
les
or
add
repnz
mov
jp
ror
cmpsb
xchg
lcall
adcl
test
cmc
sub
sub
aam
push
rcrb
xchg
cwtl
inc
mov
loopne
or
icebp
jmp
ljmp
inc
add
add
add
add
add
add
add
add
aad
add
add
add
add
add
xor
add
add
nop
add
mov
add
add
add
add
add
add
add
pop
add
and
add
addb
subb
ljmp
ja
mov
incl
add
add
add
push
mov
add
xor
stc
adc
add
popl
pusha
add
or
add
add
add
add
add
jb
add
add
add
cltd
add
add
add
add
add
sub
add
add
add
jae
jne,pn
dec
arpl
xlat
outsl
dec
dec
add
lds
inc
enter
jecxz
out
or
fimull
add
xor
incl
mov
in
cmc
or
repz
idiv
idiv
cs
fs
test
jmp
push
add
clc
clc
pushf
mov
xor
pop
pop
mov
sub
out
pop
add
push
ljmp
ljmp
movsl
mov
inc
pop
add
jbe
adcl
je
test
loopne
decb
cmp
test
test
cmp
or
or
push
adc
mov
loopne
adc
je
clc
loopne
clc
mov
movsl
incl
mov
push
inc
cmp
add
add
push
adc
add
add
add
add
add
add
add
add
stc
sbb
sbb
sbb
jp
add
imul
add
gs
inc
xchg
inc
outsl
add
arpl
gs
insb
add
jb
push
jae
outsl
inc
add
je
xor
add
gs
add
push
add
mov
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
jmp
add
push
add
add
add
movsl
adc
mov
movsb
push
mov
cmp
adc
popf
xchg
pop
mov
mov
xchg
inc
in
pop
fsts
cmp
pop
sbb
adc
xchg
sbb
mov
imul
dec
leave
fldcw
out
rorb
mov
jg
out
ja
xchg
cmpl
dec
mov
jne
pop
imul
icebp
ds
mov
jmp
xchg
cmp
sbb
cmp
pushf
push
leave
adc
mov
push
cmp
push
sub
cld
dec
mov
push
movsb
or
shr
xchg
push
add
stos
adc
sub
sahf
nop
repz
fldcw
add
mov
fwait
dec
lds
sub
lods
daa
mov
inc
pop
insb
jae
xor
ljmp
push
and
pop
inc
mov
jg
lcall
pop
jecxz
cwtl
lods
lds
inc
cwtl
and
stc
loopne
sbb
rep
loop
fcmovnbe
xor
mov
push
add
mov
jp
pop
mov
and
push
orb
mov
mov
add
push
cmp
movsl
mov
test
mov
outsl
lret
repnz
or
les
jo
pushf
test
sub
mov
jo
aas
adc
fidivs
inc
xor
jg
xchg
mov
aaa
sti
xchg
cmpsb
and
movsl
idivb
cmp
shlb
jp
inc
addb
fisttps
data16
fisttpll
clc
xorb
fdivrp
scas
sbb
or
sub
subw
xchg
js
movsb
orl
sahf
fstpt
imul
or
insb
out
inc
dec
inc
adc
jo
dec
jns
push
popa
aad
add
aaa
movsl
lods
pop
nop
sahf
cmp
mov
ljmp
jno
push
xchg
rorb
repz
xorb
dec
dec
mov
dec
push
insb
inc
jae
jp
jne
ret
and
stc
xlat
push
icebp
addr16
mov
adc
mov
adc
add
mov
jmp
pop
mov
cmp
mov
cmpsb
sub
xchg
inc
int
push
es
std
dec
shrl
fsubs
or
sbbb
fistps
jb
add
hlt
addr16
lea
test
push
ja
and
scas
xchg
sbbl
divb
rcrb
adc
nop
std
jbe
inc
cmpsb
aad
sub
stos
push
inc
mov
fnstenv
test
je
fstl
mov
hlt
sbb
or
jae
jmp
pop
icebp
adc
sbb
cs
lret
mov
add
pushf
int3
push
push
and
cmp
add
dec
rolb
loop
mov
in
into
push
push
push
sahf
insl
int
cmp
fisubs
mov
iret
mov
and
xchg
out
xchg
push
cmp
nop
lahf
bound
adc
pop
jae
or
shrl
jb
push
jp
pop
andnps
out
or
lahf
mov
sbb
mov
insl
fstpt
jmp
mov
cmc
aas
out
aad
xchg
je
add
aad
push
leave
mov
mov
aas
cmp
inc
cmp
lods
gs
cmp
push
jp
adc
imul
mov
pop
loop
push
cmp
loopne
popa
bound
mov
xchg
shr
inc
sbb
cmp
push
inc
les
imul
or
mov
lahf
mov
add
cltd
jge
inc
pop
cmc
pusha
inc
es
rcl
push
insl
inc
pop
imulb
cld
fisubs
jo
push
fcmovbe
loop
lcall
pop
sub
or
mov
rorl
lsl
mov
pop
out
ss
jmp
scas
sub
mov
mov
int3
das
xchg
sub
or
xchg
sahf
and
mov
sti
jl
dec
sub
addr16
test
es
or
adc
pop
and
out
xchg
and
les
lock
inc
aaa
jo
imul
pushf
and
xchg
sub
addr16
inc
fldcw
pusha
xchg
arpl
ja
pop
jns
xor
pop
sbb
iret
and
adc
insb
sub
add
add
fdivrs
dec
ffree
notb
pusha
mov
out
aas
jb
aaa
loope
lcall
pop
mov
iret
in
int3
add
add
lret
mov
xlat
lods
jnp
add
push
push
mov
mov
add
jle
testl
jo
adc
loopne
scas
int3
rcll
jl
or
into
push
mov
cmp
int
adc
pop
mov
add
dec
insl
fsubrp
adc
bound
mov
xchg
and
mov
mov
inc
int
sub
ret
stos
pop
inc
mov
jmp
dec
hlt
mov
inc
dec
fimull
fildl
jecxz
mov
cmp
pusha
sbb
pop
fldt
add
das
cld
daa
mov
pushf
dec
sub
add
stos
imul
aaa
adc
mov
mov
dec
push
ficomps
push
adc
jle
popa
fucomp
add
inc
les
dec
inc
mov
repz
push
mov
jle
or
jno
and
lret
cmp
in
push
mov
inc
testl
ljmp
lods
lahf
add
mov
mov
loope
jmp
mov
lods
push
mov
testb
cs
scas
fsubrl
push
aad
scas
pop
jl
inc
and
push
scas
out
push
dec
adc
popa
push
push
mov
and
ss
pop
aaa
data16
ret
repnz
insl
inc
jo
sub
jo
sub
int3
out
pushf
sti
lret
stos
dec
fidivl
add
push
and
or
inc
daa
dec
into
ds
clc
push
arpl
stos
ds
stc
cmp
insb
and
mov
test
and
cmp
add
jo
stc
fstpl
xchg
loope
or
jno
jb
jp
push
arpl
dec
jns
push
mov
in
mov
test
xchg
ja
jns
fstpl
lahf
lods
push
mov
pop
pop
xor
pop
push
int
jge
jnp
mov
mov
je
mov
mov
repz
hlt
inc
dec
mov
repz
xchg
dec
shlb
mov
rclb
xchg
cmpsb
data16
fbld
ficoml
mov
repz
lea
xor
cmp
ret
pop
sbb
outsb
shr
mov
or
inc
pop
sahf
test
lods
orl
loope
inc
stc
lock
repnz
sub
fwait
and
cltd
shl
nop
cltd
aas
inc
popf
mov
cmp
notb
aad
jmp
and
aaa
or
jg
aaa
xchg
push
popf
add
inc
push
ja
add
outsb
jecxz
mov
inc
dec
mov
loop
lock
cmpl
mov
out
push
or
rclb
rdtsc
push
push
leave
xor
mov
and
sbb
xchg
mov
inc
mov
sub
or
imul
nop
aas
cld
adc
jl
pop
mov
xor
pop
sti
sbb
iret
lock
inc
mov
ljmp
cmc
fsubrs
sbb
sub
adcb
cmp
cs
mov
out
leave
out
lret
lcall
repz
aas
add
aas
lods
aad
popf
mov
cmpsb
dec
gs
lea
inc
add
adc
in
popf
jmp
js
fdivr
inc
in
insb
dec
and
sbb
lret
lods
add
cltd
xchg
pop
fcom
cmp
in
test
sbb
inc
inc
aaa
mov
subb
adc
jmp
or
mov
push
std
jg
aam
dec
mov
jmp
xchg
or
push
or
arpl
mov
xchg
je
je
dec
imul
dec
fyl2x
repz
xchg
jmp
leave
dec
repnz
jbe
sub
or
cld
mov
adc
mov
leave
out
out
lods
jecxz
gs
and
pop
adcb
jae
subl
out
add
or
int3
or
call
add
pop
mov
into
adc
std
xchg
fnstcw
jne
xchg
mov
nop
loope
jnp
arpl
jecxz
sbb
push
stos
cmpsb
stos
sub
call
adc
xchg
repnz
scas
lahf
lcall
test
sti
adc
roll
cltd
jmp
insb
clc
xor
inc
mov
push
arpl
inc
cli
push
add
ret
push
cmp
clc
add
stos
push
rcll
mov
jne
jp
pop
faddl
cwtl
shrb
jmp
stc
dec
push
leave
xor
cmp
pop
xor
les
and
xchg
stos
je
mov
add
dec
mov
fisttpl
clc
ret
ds
cltd
movsl
int
sub
scas
hlt
out
sub
xor
jge
out
stc
xchg
sbb
and
daa
jge
pop
imul
and
enter
or
aam
pop
adc
pushw
cwtl
fsub
mov
insl
cmp
inc
jp
es
sbb
lahf
xor
jo
enter
lret
mov
mov
xchg
cmpb
pop
pusha
jecxz
pop
sbb
je
pop
push
mov
xchg
and
ret
std
pushf
movsl
rcrl
sarb
jge
test
popf
xchg
mov
sub
add
xorl
adc
loopne
add
xor
push
xor
dec
pop
fdivp
cmpsl
dec
push
sahf
mov
insb
cmpsb
push
or
adc
jno
sar
lahf
stos
push
mov
shlb
cmp
push
shll
or
mov
mov
or
jbe
fsubr
loopne
insl
push
out
jae,pn
nop
cmp
ljmp
jbe
ret
movsl
cmp
in
xchg
inc
loope
mov
mov
std
mov
lods
or
test
or
xchg
sahf
shrl
data16
ds
adc
add
call
popa
fucomi
xchg
dec
cmp
pop
xchg
movsb
sahf
cmc
aad
ret
lods
cmp
and
addr16
mov
cltd
repz
push
dec
orl
shrl
fdivs
fdiv
insl
aam
ljmp
je
xlat
int3
stos
mov
leave
data16
or
adc
out
push
call
cltd
lods
inc
sbb
cltd
je
sub
and
test
cmp
adc
xchg
call
mov
fldl
adc
mov
test
notl
mov
icebp
cmpsb
push
imul
dec
fcompl
mov
dec
arpl
or
or
loopne
or
stos
enter
insl
mov
shlb
js
mov
cmp
jae
jle
push
dec
pop
xor
xchg
enter
leave
repz
xor
pop
test
fmuls
or
lret
mov
cmpsb
fidivs
mov
mov
pop
lods
sahf
pop
push
pop
nop
daa
icebp
repz
push
iret
fstl
or
fbld
cld
rcrl
mov
push
adc
ja
mov
lret
mov
test
sbb
xchg
lcall
adc
sbb
je
dec
push
and
out
inc
xchg
arpl
cmp
and
nop
pop
jp
xchg
or
mov
and
add
dec
xchg
and
or
sahf
adc
xchg
xor
pusha
in
cld
out
add
sbb
xchg
fdivr
jbe
fwait
cmp
je
mov
add
mov
mov
lods
insb
and
xchg
pop
lods
jae
push
mov
std
movl
xchg
imul
in
fmuls
cmc
push
jmp
lods
mov
lret
popf
mov
test
inc
push
pop
jo
adc
rcl
xor
or
dec
sub
enter
shrw
cmpsl
fidivrs
jae
int3
mov
aas
lcall
or
sti
lods
sub
add
pop
jbe
add
ret
sbb
cwtl
js
sub
test
sbb
cltd
repz
push
ret
mov
pop
bound
cltd
and
inc
pop
and
lock
test
jo
xchg
test
cmp
jmp
sbb
add
das
lock
outsb
mov
inc
leave
ret
imul
cmpsb
pushf
movsl
out
nop
adc
or
or
daa
orb
movsl
xlat
pop
pop
movsl
cmp
cmp
mov
jbe
dec
icebp
sbb
sbb
mov
xchg
adc
sub
mov
ss
in
xchg
cmp
aad
js
jmp
cmp
push
sar
lods
sti
and
add
add
out
pop
add
mov
bnd
int
inc
mov
jp
ljmp
outsl
aas
sub
xchg
popa
movsb
pop
dec
cmp
push
add
push
sub
sbbb
cmp
inc
push
jnp
in
cmp
push
push
cmpsb
cmpsl
daa
push
mov
push
shlb
adc
jno
inc
fists
int3
xchg
adc
jp
xlat
inc
push
nop
shll
movsl
pop
adc
lods
mov
lahf
mov
mov
inc
test
jg
and
lods
movsb
leave
sahf
ret
push
imul
sub
int3
xlat
pop
andl
movsl
xchg
push
scas
push
dec
dec
shll
jle
out
sti
mov
sbb
fiadds
jg
adc
call
cld
jecxz
pop
mov
adc
cmpsb
xor
fldenv
inc
mov
int
xchg
inc
adc
imul
cmp
mov
xor
jmp
xor
stos
mov
pop
and
jnp
push
jns
jl
jo
pop
push
nop
cmpsb
bound
out
jo
add
leave
repz
lcall
jno
xor
pop
stos
aaa
push
fwait
rcr
jmp
or
gs
cwtl
push
add
mov
sbb
sub
fistl
shl
cltd
sahf
mov
repnz
gs
xchg
movl
sbb
adc
mov
pop
fistps
add
leave
xlat
or
sarb
cwtl
adc
lahf
mov
mov
xorb
sub
andb
mov
sub
aam
outsl
cmp
cmpb
push
mov
xor
cmp
xchg
pop
mov
imul
cmc
push
popf
jecxz
xchg
stc
mov
or
fwait
sub
sbb
sub
fwait
pushf
sti
jo
ret
cltd
in
push
mov
and
add
jl
sub
xor
inc
sub
fists
out
xchg
nop
dec
fstps
jl
inc
int3
lock
leave
pop
or
pushf
jmp
stos
cli
xor
inc
sbb
dec
rol
test
jp
fimuls
push
popa
sbb
pop
idivb
movsb
pop
add
adc
inc
and
cmp
mull
mov
add
mov
frstor
sub
in
sbb
sbb
cli
push
add
sbb
testb
mov
or
or
xor
xor
adc
fisubrl
cltd
ret
popf
jnp
and
xchg
or
call
sarl
dec
int
outsb
fcom
je
mov
push
push
cmpsl
xlat
leave
test
cmp
mov
push
sbb
cmp
or
xlat
jbe
jecxz
push
mov
lret
xor
jg
ret
push
sbb
push
sbb
fs
nop
mov
lcall
movsl
fwait
sub
dec
enter
mov
and
xchg
pop
fstp
fldl
mov
mov
jo
jg
sti
mov
dec
mov
imul
xor
sub
loop
cmp
das
cld
into
lea
sbb
inc
fnstsw
sub
mov
jg
cmp
add
cld
lock
xchg
ror
push
fsts
mov
mov
cmp
ja
and
xchg
jns
add
sub
inc
outsb
mov
out
sbb
lahf
mov
pop
imulb
sub
icebp
fistps
dec
hlt
inc
add
inc
aaa
mov
sbb
in
loopne
jp
xchg
mov
mov
cmpsb
loope
pop
push
cmp
out
xor
insb
leave
dec
sti
in
repz
mov
int
insb
je
std
mov
push
or
adc
or
pushl
jl
xor
cmp
sti
dec
mov
lahf
mov
jmp
shlb
add
adc
fstpt
mov
jbe
scas
aas
mov
daa
aaa
pop
mov
dec
pop
push
testl
mov
sub
nop
push
mov
in
leave
cmp
stos
int
loopne
push
ja
add
jmp
outsl
sub
je
or
jo
aad
pop
dec
rclb
outsb
jg
pop
pop
mov
push
jbe
and
sub
test
pop
inc
dec
jae
cmpsb
jle
lahf
xchg
mov
lahf
rol
sti
imull
jbe
leave
xor
popa
adc
in
sbb
out
xchg
aas
ljmp
xor
add
inc
das
int
push
xlat
les
pushf
faddp
movb
jmp
mov
rolb
nop
and
xor
mov
lahf
push
in
xchg
dec
rorb
shl
or
fcomp
dec
inc
loopne
mov
mov
andl
in
push
sub
jl
insl
faddl
popf
ds
jge
mov
cmp
sbb
sub
addr16
cmp
adc
pop
mov
scas
dec
push
mov
int3
scas
outsl
or
jns
fucomip
fwait
loope
insl
cmpsb
dec
sbb
andb
cld
lea
mov
das
sub
pop
arpl
movsl
dec
xchg
mov
mulb
cmp
sub
push
mov
adc
pop
jecxz
mov
mov
lea
ficoml
inc
push
sub
add
js
pusha
jg
dec
mov
aaa
xchg
jns
push
fsts
mov
inc
cmpsb
mov
sub
mov
xchg
repnz
out
sub
dec
mov
sbb
sbb
inc
dec
sub
dec
sub
out
cmp
fldenv
jle
xchg
dec
imul
fs
pop
or
jg
push
pop
mov
adc
jne
sbb
fildl
in
pushf
lods
popa
jle
mov
movsb
insl
adc
out
addr16
outsb
or
fdivrl
aas
shll
jns
popa
pop
shlb
dec
push
aas
jns
movsl
xchg
xlat
pop
ja
push
xchg
stos
gs
sti
lret
out
push
fisttpl
loopne
fs
lds
maxps
jle
cltd
fisttpll
arpl
ror
inc
push
mov
lea
iret
mov
ret
cmp
pop
mov
jl
mov
gs
xlat
shrl
adc
push
pop
outsb
shrb
sbb
movsb
push
mov
imul
xchg
mov
mov
test
insl
in
lock
sbbl
xor
shll
cli
insb
jmp
jp
and
push
adc
and
xchg
jne
enter
push
das
es
pushf
and
inc
inc
or
sahf
mov
jne
stc
pop
std
jecxz
sub
bound
fstps
push
scas
sar
addl
adc
aad
jo
insl
aaa
scas
getsec
pop
ss
iret
cmp
into
jno
cli
xor
inc
inc
and
xchg
and
in
test
adc
sbb
xchg
jno
je
fsubl
pop
and
dec
out
push
add
sbb
enter
fs
xchg
das
adc
lods
sbb
inc
push
stos
shlb
mov
fisttpl
dec
fildll
scas
pop
mov
and
mov
mov
jecxz
fistps
pop
jg
xor
jo
jmp
cmpsb
sub
sub
lret
sub
or
pop
pop
cwtl
sti
lea
out
ret
jo
and
bound
into
roll
cltd
inc
test
rcrl
add
sub
jae
mov
push
jns
aam
stos
jecxz
push
movsb
mov
mov
jecxz
dec
into
inc
in
imul
outsb
adcl
popf
movsl
or
out
xor
stos
shrl
out
add
cmp
and
jns
ficoml
mov
sti
fwait
in
cmp
lods
adc
mov
and
aad
mov
mov
cld
adc
repz
mov
push
push
int3
out
sbb
dec
or
cltd
add
cli
leave
test
ret
cmp
mov
aad
je
ret
roll
test
jns
jnp
jmp
add
mov
jne
jge
outsl
dec
mov
dec
jp
jp
adc
cmp
pop
cmpsl
popf
test
jo
cmp
fstp
sbb
inc
xor
sub
es
jl
push
jl
xchg
mov
xor
or
jb
clc
xchg
jno
leave
push
rcrb
adcb
mov
sti
popa
push
mov
ret
pop
mov
or
aaa
fincstp
push
fmuls
out
pop
outsl
out
cs
inc
inc
orb
pop
mov
rorl
dec
adc
and
or
sbb
ret
sahf
add
add
add
add
add
flds
add
add
add
add
add
add
add
add
stc
add
add
add
pusha
add
or
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
rolb
add
ja
mov
jg
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
in
add
sub
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
in
add
in
in
add
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
in
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
in
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
jl
add
test
add
xchg
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
out
add
fsubr
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
out
add
mov
out
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
lock
dec
lock
inc
lock
cmp
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
xor
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
icebp
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
icebp
add
int3
icebp
add
aam
add
fdiv
add
in
add
div
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
