jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
jns
xor
icebp
aas
stc
int
xchg
mov
pop
or
add
or
add
add
in
add
addb
add
addl
clc
add
cmp
pusha
add
add
add
in
add
add
add
add
add
and
add
outsl
add
clc
add
add
add
add
add
add
rolb
xor
in
test
add
add
add
add
add
add
add
add
add
and
add
add
add
scas
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
lcall
add
add
call
add
add
mov
dec
add
add
add
add
mov
xor
lret
add
add
incl
clc
add
add
add
add
add
add
add
add
add
add
cmp
xchg
int
out
add
add
add
movsl
add
add
lret
add
clc
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
lret
add
add
fs
add
inc
add
add
add
add
movsl
add
add
add
add
add
out
add
add
movsb
add
add
add
push
mov
add
add
add
add
add
jo
sbb
add
add
or
faddl
aad
clc
add
add
add
add
fldl
repz
add
add
add
add
add
add
add
add
lret
add
add
add
add
cmp
gs
add
add
add
add
add
add
jb
pop
add
add
xchg
add
add
fldl
repz
add
daa
add
mov
pop
add
add
add
pushf
add
add
add
add
add
add
add
add
add
stos
add
add
fldl
add
add
add
add
add
add
push
add
add
add
add
add
add
add
and
loop
push
add
add
lret
add
add
add
add
add
push
add
add
add
add
add
mov
lcall
add
add
add
add
clc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
mov
mov
push
add
add
add
add
nop
add
add
add
add
add
add
add
faddl
sub
ficompl
std
xchg
test
xchg
lahf
test
iret
cltd
mov
push
mov
hlt
dec
xchg
test
jle
jle
popf
dec
pop
mov
xor
jle
cmp
test
mov
fst
aaa
mov
push
or
negl
shrb
iret
xor
xchg
imul
ret
mov
arpl
cs
dec
int
sbb
mov
mov
xchg
add
xchg
testb
pop
imul
sbb
mov
filds
jne
mov
pop
xchg
sbb
push
mov
std
xor
xor
jg
add
and
push
jnp
insl
xor
in
jno
clc
fs
clc
pop
jecxz
sub
lods
in
pushf
dec
inc
push
sbb
popa
adc
ljmp
rcrb
cmc
xchg
enter
jno
push
push
fcompl
repnz
outsb
mov
mov
cmp
push
xor
lods
jbe
pop
int3
shrl
cmc
jbe
int3
inc
scas
sar
sbb
adc
subl
addl
inc
mov
jle
jns
xor
cmp
call
js
cmpsb
mov
clc
lahf
fsubrs
fdivs
movsb
pop
adc
cwtl
sub
mov
mov
rcll
shl
push
xchg
rol
mov
outsb
inc
sbb
mov
dec
std
push
xlat
dec
inc
mov
into
xor
lods
pop
aas
imul
push
sbb
mov
les
dec
add
add
stc
jg
sti
sub
icebp
lods
dec
push
inc
dec
rcll
mov
cmp
sbb
mov
xchg
jae
pushf
push
scas
pop
nop
add
mov
dec
arpl
push
mov
ja
sbb
aaa
ret
fiadds
les
je
gs
sbb
sub
mov
shlb
das
mov
das
pusha
mov
adc
jbe
int3
idiv
push
fisubrl
sbb
out
cmp
push
scas
dec
jmp
and
fninit
sub
popf
xchg
push
push
cmc
cmp
xor
out
js
jmp
push
cmp
pop
mov
loope
cwtl
or
pushf
jns
imul
fsub
stos
xchg
push
sub
mov
sbb
aas
out
adc
cmpsl
fisubrl
push
xchg
sbb
add
sub
mov
or
mov
and
jnp
loop
repnz
fwait
daa
in
cs
or
pop
iret
js
in
push
or
sbb
and
pop
push
jbe
inc
lea
pop
insl
sub
dec
data16
or
gs
push
xor
sub
sbb
jg
jne
push
push
and
sub
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sahf
les
hlt
sarb
stc
fwait
int
mov
jno
push
jo,pt
fs
add
fwait
jle
outsb
xor
les
hlt
fiadds
rcrb
push
push
dec
fs
jbe
push
jle
outsb
xor
fisttpll
in
ficomps
out
scas
push
inc
push
ja
sbb
sub
pop
xlat
mov
xchg
sahf
dec
into
push
jne
adc
sbb
pusha
jge
aad
pop
lahf
repz
dec
adc
in
and
pop
sbb
mov
stos
mov
aam
int3
pop
add
stos
orb
mov
push
inc
fs
rorl
mov
mov
scas
jno
lcall
fiadds
xor
movsb
push
stos
mov
or
mov
fldt
inc
cli
sub
sbb
loope
lods
out
fmull
mov
cmpsl
int
push
dec
add
ja
mov
cmp
jle
push
rdtsc
add
fs
fwait
imul
es
xor
rorl
hlt
fiadds
lods
push
inc
push
dec
jge,pt
insl
pop
sbb
or
outsb
xor
fildl
xchg
fwait
enter
sub
push
pop
pusha
inc
adc
popa
daa
push
cmp
pop
popf
lods
cld
mov
cwtl
test
xchg
or
jg
imul
sbb
inc
outsb
inc
test
scas
mov
mov
xchg
movsb
out
mov
inc
push
push
ds
add
adc
and
xor
les
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
xor
les
movl
and
jno
sub
out
dec
dec
mov
incl
jae
testb
sub
pushf
insb
icebp
inc
adc
adc
aaa
pop
pop
jnp
out
cmp
pop
popf
sub
pop
mov
jge
popa
sub
mov
and
daa
mov
add
add
dec
mov
cmp
scas
fsubr
hlt
scas
pop
rcl
imul
int
repz
mov
sbb
xor
dec
les
jl
pop
add
inc
cmp
pop
lock
mov
and
out
loopne
pop
movsb
ret
cli
adc
pop
mov
into
ds
xor
pop
sahf
add
std
std
sbb
sbb
sbb
mov
mov
out
rorb
ds
inc
fbstp
jb
into
out
in
pop
int
pop
in
pop
outsl
addb
nop
pop
push
add
test
or
in
or
ret
aad
out
mov
mul
int3
sbb
sbb
loope
mov
mov
arpl
subl
in
xchg
inc
cmp
or
stos
xchg
mov
fcomps
std
push
fnstcw
gs
cltd
mov
jns
in
adc
shrb
jle
pop
mov
or
int3
lret
or
mov
in
pushw
cld
movb
sub
cli
mov
xchg
cmpsb
cs
sub
in
xchg
sarb
xchg
jb
shr
daa
shr
dec
pop
or
outsb
push
cmpsb
enter
push
push
mov
test
mov
mov
lret
jnp
and
test
fisttps
cmp
push
mov
inc
mov
or
sti
aas
scas
inc
aas
fs
mov
mov
sahf
push
inc
loop
iret
jmp
bound
mov
cmpsl
pop
les
lret
mov
test
ficompl
inc
cmp
cwtl
xor
je
jle
pushf
fs
push
test
cs
mov
jbe
ret
mov
mov
outsb
jb
dec
inc
xor
sahf
out
sbb
fsubrl
stos
mov
jae
mov
call
call
mov
lahf
icebp
sub
dec
out
mov
js
adc
movsl
cmp
rcrl
dec
cwtl
mov
lods
mov
and
pusha
jmp
popf
pop
jbe
or
addr16
shlb
bswap
pop
sbb
call
cwtl
dec
sbb
clc
push
mov
lock
dec
mov
pusha
sub
fwait
outsb
push
and
dec
mov
iret
popf
ljmp
mov
setnp
lock
adc
shrb
ja
dec
stos
inc
call
fisubl
loopne
cmpsb
dec
push
js
addr16
stos
push
jne
jae
dec
adc
into
push
sahf
scas
and
ror
cwtl
pop
ljmp
lds
dec
leave
lret
loopne
imul
push
icebp
dec
mull
icebp
xor
lock
and
sbb
mov
mov
in
repnz
pop
fcmovne
mov
inc
out
jmp
sub
cltd
or
xor
mov
cs
jp
pusha
pop
stc
inc
loope
add
in
xor
mov
clc
cmp
xor
or
xor
scas
inc
push
mov
pop
arpl
jbe
and
insl
call
mov
cltd
inc
aam
repnz
test
and
add
out
call
fdivs
dec
xor
int
outsl
xorb
call
rcll
rorb
jnp
int3
mull
enter
pop
cld
leave
xor
pop
sbb
push
cmp
sti
adc
cmp
pop
clc
decl
aas
movl
inc
cmp
addb
jae
ret
mov
mov
les
inc
pop
fldt
in
xor
dec
add
cmp
cwtl
in
scas
add
push
cld
rcrl
leave
or
xchg
mov
ja
gs
xchg
addl
pop
pop
hlt
xor
xchg
mov
xchg
or
cmp
sbb
pop
scas
mov
and
xor
inc
jo
or
cmp
push
cwtl
daa
mov
int
pop
popf
ds
inc
sbb
pop
stos
fadds
leave
ss
jg
mov
dec
test
jl
sti
mov
cwtl
pop
movsb
gs
push
ror
cltd
leave
cltd
in
out
dec
fnstenv
sar
dec
fsts
mov
jae
mov
sbb
cmp
jmp
cmc
lds
in
in
mov
ss
push
jle
jecxz
shlb
mov
jmp
push
pop
mov
jne
xchg
sbb
int3
sarl
fisttpll
movsb
icebp
dec
and
aam
out
cli
adcb
and
std
add
xor
pusha
mov
fucom
adc
sbb
lret
mov
imul
rclb
push
addb
cwtl
jo
xor
jae
mov
dec
int3
pushf
xchg
aad
mov
xchg
push
lret
cld
xchg
sbb
test
pop
arpl
mov
cltd
mov
mov
cld
or
data16
xor
mov
xor
sbb
subb
scas
pushf
jecxz
out
clc
mov
outsl
sbb
cmp
cmp
mov
or
lcall
and
mov
js
inc
pop
push
out
adc
movsl
out
cmp
ret
jb
adc
repnz
push
jge
mov
jge
out
loope
dec
push
in
mov
dec
and
xchg
iret
gs
je
adc
jle
push
pop
mov
inc
push
mov
push
test
mov
fdivs
xchg
cmp
dec
cltd
mov
dec
sub
sahf
lods
adc
into
int3
xor
cmp
jl
addr16
incl
dec
xor
movsb
xchg
stos
xchg
das
jbe
xchg
sbb
push
jmp
addr16
adc
xchg
mov
add
sub
xchg
inc
and
and
mov
inc
call
add
inc
gs
popa
or
notb
out
sub
add
push
insb
add
sti
shl
lret
test
stos
popa
mov
cmp
mov
ljmp
mov
outsb
pop
add
dec
push
shlb
leave
out
shlb
push
jge
pop
jl
push
add
pop
imul
push
ljmp
adc
clc
mov
shll
negl
jo
adc
dec
cmc
mov
outsb
fsub
and
cmp
psubq
insb
pop
ret
inc
or
jns
jne
push
orl
adc
push
enter
mov
iret
hlt
pop
rcr
mov
pop
out
data16
subl
pop
cmp
mov
mov
leave
push
cmp
push
in
sahf
cmp
in
adc
aaa
jb
sub
inc
jecxz
test
pop
xlat
sbb
movsb
push
xchg
subl
jecxz
arpl
mov
mov
sbb
mov
dec
ds
sub
jl
mov
mov
dec
mov
xchg
lret
sbbl
enter
sub
mov
enter
mov
cmp
pop
xor
jmp
xchg
jno
add
addr16
mov
add
outsl
mov
aam
add
jmp
mov
in
jge
lret
sbb
and
aad
mov
push
push
imul
test
icebp
sub
mov
push
mov
es
sti
out
stc
pop
and
decb
mov
repnz
xchg
pop
xchg
pop
idiv
sub
pop
push
sbb
dec
lret
sub
cltd
or
test
jmp
in
or
mov
daa
filds
push
mov
add
inc
jo
pushf
push
sbb
out
movsb
in
xchg
and
cmp
enter
and
adc
xor
xbegin
sbbb
pop
push
jno
jnp
gs
sbb
or
inc
cmp
cli
inc
xchg
mov
xor
push
sub
push
icebp
iret
daa
mulb
fidivs
inc
xor
mov
std
adcb
fidivl
loope
jl
jne
jae
loope
mov
incl
xor
mov
push
mov
mov
or
test
stos
arpl
add
add
out
push
ds
jno
or
add
jo
dec
add
xor
and
adcb
hlt
xchg
jnp
inc
and
fwait
pushf
daa
cwtl
aad
jbe
aaa
in
fstpt
hlt
pop
pop
mov
inc
or
loop
lret
xchg
lret
pop
dec
xor
cs
pop
pushf
fisubrl
mov
sbb
outsl
sub
daa
pop
sbb
pop
stos
sub
fiaddl
jne
cli
mov
je
cld
xchg
mov
test
test
inc
test
pusha
dec
scas
pusha
std
cmp
ret
shr
shl
or
movsb
lcall
sbb
xchg
imul
adc
push
xchg
add
jecxz
imul
les
fdivrs
sarb
mov
mov
xchg
stos
lock
adc
je
mov
mov
push
icebp
sbb
ljmp
out
jo
rorl
int3
push
cmp
repnz
dec
push
xlat
sub
push
mov
jp
test
and
notb
data16
js
cld
or
push
out
or
dec
mov
shl
inc
fwait
aas
lret
shrl
adc
mov
mov
pusha
pushf
test
lds
in
jecxz
xchg
and
lods
jno
pop
pop
jl
push
std
insl
mov
jne,pt
imul
test
sbb
loop
add
or
jle
mov
movb
jns
pop
mov
rolb
and
sbb
stos
orb
xchg
push
popf
jnp
mov
dec
je
cwtl
dec
xchg
subl
sub
and
mov
pop
and
stc
scas
aas
ror
and
int3
mov
xor
pop
jmp
and
in
inc
add
mov
jp
or
push
fistps
push
outsb
jb
add
sub
cmp
add
cmp
inc
aaa
inc
mov
mov
insl
mov
ret
fnstsw
inc
cvtps2pd
sub
sub
cmp
adc
lods
rcrb
push
loopne
or
outsl
popl
test
test
inc
inc
mov
cmc
add
stc
int
out
inc
sub
dec
add
jmp
aas
sbb
mov
xchg
xchg
repnz
stos
test
cwtl
inc
push
adc
popf
ss
out
fs
jecxz
jne
jns
pop
jb
dec
shrl
adc
icebp
jb
add
or
stc
sub
add
andb
and
jle
stc
lea
jmp
aam
xchg
inc
jnp
mov
scas
out
rcll
jmp
sti
lret
add
sbb
insl
cmc
xor
cli
ret
movnti
mov
pop
adc
das
sbbl
xchg
sbb
and
arpl
fildll
sbb
pop
mov
imul
dec
daa
sub
dec
dec
cs
sub
stc
lahf
push
add
sbb
std
insb
sub
test
sbb
movsl
sbb
xchg
mov
imul
flds
out
repz
add
or
stos
cmpsl
int3
xchg
inc
mov
lds
push
lods
lock
xchg
aaa
es
sub
cmp
test
sarl
mov
xchg
frstor
xchg
jecxz
sbb
adc
es
cwtl
xor
cld
outsb
or
or
pop
loope
pop
adc
jecxz
mov
repz
int3
sarb
sbb
mov
add
mov
das
test
shrl
call
jl
pusha
or
fs
mov
push
jb
xlat
mov
xchg
sub
xchg
cs
push
cmp
scas
adc
clc
cwtl
and
pop
or
jnp
and
mov
sbb
mov
hlt
in
mov
pop
mov
jecxz
inc
icebp
push
jae
ret
cmp
xchg
sbb
add
xchg
push
xor
sub
int3
mov
lret
jns
dec
sbb
cmp
loopne
push
imul
mull
in
sub
cli
outsb
xor
mov
dec
cltd
std
sahf
sub
scas
jnp
insb
stos
leave
fildll
mov
es
push
cmp
repz
adc
dec
mov
aam
inc
add
mov
lret
push
mov
cmp
out
mov
push
ds
mov
std
sar
mov
fld1
test
je
divps
repnz
mov
aaa
ds
cmpl
add
and
loopne
nop
into
push
xchg
push
push
mov
xor
imul
push
mov
adc
pop
xor
fists
leave
les
inc
mov
inc
rclb
mov
cs
cli
icebp
popa
xor
ret
push
or
movsb
mov
mov
xor
mov
leave
xor
and
into
pop
scas
push
rcrb
mov
mov
xchg
aam
pop
repz
mov
add
sub
xchg
mov
sub
dec
addr16
mov
xchg
pop
sbb
les
fimuls
sbb
ljmp
pop
mov
xor
dec
aaa
scas
and
inc
clc
lahf
bound
insl
outsl
addr16
je
imul
int3
aam
unpcklps
add
xchg
sti
mov
push
jge
xchg
cmp
das
dec
pop
nop
sub
sahf
hlt
scas
loop
xor
cmc
imul
lcall
sub
fsubl
scas
fdivrl
dec
xchg
and
sti
cmpsb
jmp
and
inc
cmp
in
in
mov
cmp
mov
or
dec
popa
faddp
loope
jb
push
cld
or
and
jp
and
sub
lds
jmp
xchg
rclb
sahf
inc
nop
lcall
add
sub
rorb
aas
xchg
pop
cwtl
and
jbe
mov
les
sti
mov
cmp
pop
inc
push
sbb
pop
jns
push
out
adc
sub
bound
loop
into
pop
cltd
aaa
cmc
xor
sbb
sbb
int
and
pop
lahf
xchg
and
iret
push
lods
xchg
or
leave
aad
jo
daa
test
mov
arpl
cmpsl
ret
mov
and
adc
push
fs
cmp
sub
popf
fadds
jbe
int3
data16
into
push
mov
sub
adc
xchg
sbb
aas
daa
mov
leave
repnz
inc
out
add
push
mov
lret
pop
push
sbb
sub
jmp
mov
js
imul
mov
sbb
and
je
sbbl
add
jno
sub
fsubrl
adc
cld
repz
movsl
mov
out
out
xor
jnp
dec
jo
jp
imul
mov
std
mov
loop
xchg
jmp
mov
fidivrl
dec
lods
xchg
adcl
mov
gs
or
cs
push
pop
jge
and
inc
dec
push
pop
push
mov
pushf
ret
ret
cli
xchg
inc
xchg
les
inc
inc
and
mov
popf
notl
shll
dec
insb
or
ja
rcr
mov
cmpsl
mov
sbb
loop
mov
push
xlat
inc
scas
popf
mov
in
mov
jmp
test
cmp
add
dec
lods
test
js
sbbb
inc
add
xor
lods
jmp
push
loope
stos
call
mov
ficoml
and
test
or
cmp
daa
nop
xorl
loopne
push
fstpl
mov
xor
lret
cli
outsb
cli
ja
aas
pop
jo
add
das
bound
aaa
inc
pop
ds
imul
or
dec
inc
cmp
jne
aam
dec
inc
shld
loope
push
xor
out
insb
popf
and
shrb
aam
xchg
pop
call
scas
dec
sbb
fcomps
addr16
jge
cmpsl
jge
jo
mov
aas
jle
loope
and
inc
fbld
inc
cmp
pushf
mov
jmp
mov
incl
jo
push
push
mov
inc
insl
cmpsb
arpl
js
cmpsb
fisttps
pop
lcall
push
jns
push
lcall
jecxz
imull
mov
jns
out
mov
movsl
dec
cmp
loop
cmpsb
leave
xor
xlat
push
repz
js
pop
sub
and
addl
cs
addr16
and
jle
lock
pop
cld
jns
inc
cmp
inc
pusha
ret
pop
cli
xor
jg
lcall
jmp
movsb
inc
test
add
xlat
xor
mov
sar
lea
std
aaa
cld
adc
dec
or
icebp
and
test
mov
shll
xchg
cmpsb
ja
push
mov
cmp
cmpsb
dec
jecxz
clc
or
and
lahf
rorl
xchg
mov
pushf
jo
inc
dec
enter
mov
stc
and
jmp
pop
or
push
pop
push
pop
fwait
and
fdivl
sahf
test
xchg
fimuls
cwtl
out
inc
cwtl
jae
pop
jp
push
jne
mov
mov
daa
gs
jno
cmp
fnsave
dec
lds
sar
adc
mov
mov
ffree
outsb
adc
or
std
test
ret
inc
les
in
mov
outsl
enter
cmp
push
mov
dec
iret
push
inc
je
cs
js
out
subb
cmp
xchg
pop
xor
mov
out
or
in
jg,pn
push
xchg
movsb
repz
mov
aam
lcall
sbb
movsl
sub
clc
popa
loop
ja
mov
arpl
adc
dec
rcrl
and
lret
lods
mov
ss
pop
jge
sbb
add
testb
pop
mov
inc
and
test
aad
pop
xchg
enter
in
adc
push
push
inc
jae
test
ffreep
sub
sub
cmpl
scas
xchg
mov
mov
xor
imull
and
jnp
mov
mov
out
leave
xchg
test
adc
pop
sub
mov
stos
sarl
lret
xchg
xor
cmpsl
sub
lods
mov
and
mov
inc
pop
inc
stos
lret
pop
dec
pop
js
sbb
rcrl
lret
pusha
icebp
adc
pop
int3
adc
mov
fld
cmp
jecxz
pop
or
mov
mov
cmp
push
data16
mov
loop
in
push
pop
sahf
cmc
ljmp
push
ret
inc
test
daa
sbb
mov
addr16
xchg
pop
lret
mov
sub
out
sbb
adc
adc
xlat
stos
sub
pop
cmp
fucomp
ljmp
ljmp
push
jo
add
les
adc
sub
dec
cld
sub
mov
stc
addl
insb
call
repnz
lahf
outsl
jb
mov
adc
push
mov
out
orb
pop
xchg
loopne
push
inc
jge
dec
das
cld
dec
xchg
lds
inc
push
ficomps
jno
fsts
aam
sahf
jl
inc
repz
jo
dec
mov
dec
loopne
sbb
xor
push
rorb
mov
sub
enter
cmp
pop
and
jno
data16
aam
cltd
dec
pop
into
mov
mull
sbb
lret
pushf
xchg
mov
push
inc
cmpb
push
hlt
in
cmpsl
and
aaa
jecxz
xchg
mov
outsl
outsl
add
push
or
enter
adc
frstor
icebp
stc
cmp
popf
cmp
cmp
rcll
xchg
sub
sub
loopne
cli
pop
mov
dec
pop
dec
in
cmp
push
hlt
mov
xor
ljmp
shrb
mov
pop
in
repnz
roll
pop
mov
sahf
ret
sub
push
xchg
movsl
xlat
push
xchg
aad
mov
sub
dec
data16
fiadds
xor
mov
mov
mov
out
pop
loope
nop
xchg
popf
inc
jge
into
dec
cmpsb
sbb
data16
jle
addr16
int3
test
jl
daa
xchg
pop
movsb
add
out
mov
out
add
addr16
or
clc
imul
pop
mov
inc
stc
mov
pop
in
or
cmpl
xchg
pop
mov
lcall
push
push
cmp
rcrl
mov
push
cwtl
mov
lock
int
divl
frstor
jns
xchg
inc
dec
xor
cltd
xlat
and
xchg
adc
mov
rcrb
cmp
mov
xchg
dec
ja
add
test
aad
daa
psraw
jo
daa
insb
popf
lea
jecxz
xor
mov
je
aaa
ret
shll
xchg
js
xchg
xorl
jo
push
pushf
js
ret
outsb
dec
icebp
in
xor
popf
inc
mov
or
xlat
ja,pt
and
or
mov
fwait
jo
gs
outsl
and
cmp
push
mov
xor
call
mov
dec
mov
and
lcall
jmp
xor
and
inc
fsubs
push
dec
adc
mov
mov
pop
dec
xchg
xchg
in
insb
xchg
popa
and
xor
push
lcall
in
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
xor
les
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
xor
les
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
sahf
rorb
fiadds
je
inc
push
xchg
fs
mov
imul
sub
mov
sbb
mov
or
std
fmuls
pop
cmp
or
pop
enter
sub
sbb
push
enter
sub
js
push
fdivrs
insb
mov
clc
sub
cmpsb
pop
addr16
out
out
leave
mov
jecxz
push
adc
xor
pop
dec
popf
mov
inc
int3
lcall
mull
imul
into
mov
inc
shrb
pop
sbb
inc
or
and
repz
xor
aad
cwtl
enter
imul
cmp
or
fldl
daa
xor
mul
dec
pop
add
aad
dec
enter
mull
jmp
or
outsl
sbb
js
test
xlat
inc
fucomi
andl
lcall
pop
pop
cmp
mov
mov
hlt
test
mov
js
push
fdivrs
or
js
dec
enter
pop
mov
js
sbb
cmp
dec
mov
pusha
lock
stc
or
or
test
mov
js
sub
fcomp
push
stc
dec
lcall
adc
sub
ja
fs
xor
push
fdivrs
or
js
dec
enter
sub
js
push
fdivrs
or
js
dec
enter
or
filds
inc
data16
jg
in
and
aam
dec
mov
aaa
cmp
out
inc
outsb
xor
jns
out
adc
fdiv
push
mov
rclb
call
jno
loope
pop
mov
enterw
pop
sbb
shll
push
sti
in
leave
and
sarb
sarb
mov
cmc
jnp
mov
xchg
enter
sbb
arpl
jl
dec
cmc
sarb
cmp
mov
fimull
pop
and
xlat
sti
cld
add
mov
in
ja
popf
xchg
add
xlat
iret
sti
inc
fnstcw
fwait
nop
cmp
rclb
jno
add
mov
ret
and
aaa
mov
dec
sarb
push
out
dec
jae
inc
rcl
jbe
pop
push
nop
add
pop
xchg
jno
popa
mov
mov
std
cmp
fisubrs
lcall
mov
xorb
dec
test
icebp
lcall
cltd
sbb
fstpl
out
mov
inc
pop
add
pusha
dec
xchg
out
adc
mov
and
movl
push
sbb
pop
outsl
jle
mov
inc
mov
mov
xor
xorb
and
jecxz
in
in
pop
in
cmp
sbb
jns
icebp
jb
jp
xor
pop
inc
xor
fisttps
sbb
or
imul
stc
mov
sbb
lods
sahf
leave
pop
repz
push
sbb
js
cli
outsb
aam
scas
test
fimuls
repz
sub
sbb
mov
xchg
xchg
mov
add
sub
add
fdivrs
in
xor
js
xor
mov
mov
mov
pop
mov
cmp
mov
mov
sti
mov
pop
nop
mov
out
mov
mov
dec
adcb
cmp
xchg
push
dec
push
popa
sbb
dec
imul
add
cmp
iret
mov
add
nop
out
cmp
inc
jmp
cmp
jle
dec
aad
jns
ss
mov
jge
xchg
mov
pushf
scas
or
add
pop
dec
add
scas
lahf
sarb
jnp
or
pop
xchg
adc
mov
test
push
setge
xchg
stos
xorb
push
or
test
cmp
cltd
outsl
or
in
jnp
inc
lods
xchg
rcr
inc
jle
stos
in
sbb
rorb
adc
cmpsb
ja
xor
mov
xor
lret
stc
cmpsb
lret
cmp
jmp
xchg
in
xor
sub
cmpb
fwait
xor
mov
negl
loopne
cmpsb
jb
xor
lret
jecxz
lret
fadds
addr16
jbe
sub
jnp
mov
repnz
fcoml
pop
repnz
xor
jno
or
mov
cmc
out
pop
pop
test
ljmp
push
mov
xlat
fistpll
cmp
mov
out
leave
or
sub
xor
imul
stc
fsubl
je
mov
add
cmpsb
aaa
std
mov
nop
es
movsb
pop
orb
dec
cmc
imulb
insl
pop
lods
int3
xchg
test
repz
nop
das
nop
pop
cmp
sbb
sbb
outsb
or
add
loopne
xor
cmp
rorl
sbb
jno
shll
mov
jecxz
push
sti
movsl
or
jmp
lods
bound
loop
ss
ds
push
ja
dec
jno
pop
pop
je
sub
mov
dec
mov
jb
cmp
mov
pop
pop
cmp
push
xchg
jo
sti
lahf
jge
sbb
das
push
je
xor
adc
or
in
inc
in
push
sti
push
pop
xor
iret
adc
cmp
cmpsb
dec
xchg
or
adc
inc
dec
jmp
loop
outsl
xor
clc
lahf
mov
aas
sbb
push
sub
pop
ja
cmp
cmp
stc
mov
adc
pop
push
sub
cmp
fwait
dec
aam
out
inc
into
xchg
addr16
push
sub
add
lods
inc
xchg
aam
inc
jo
mov
cli
pop
bound
lock
fnsave
imul
sub
dec
pop
fisttps
popa
out
aam
push
mov
bound
mov
das
jne
and
inc
xchg
mov
test
imul
jl
cli
movsb
add
or
scas
or
test
pop
sbb
popa
in
cs
pop
shll
add
dec
je
add
hlt
rcrl
jbe
scas
ds
dec
call
inc
enter
fldenv
mov
rcrl
das
or
ljmp
mov
je
xchg
xor
ud2
out
mov
adc
sub
pop
cmp
jmp
pop
loop
jl
out
adc
adc
pushf
xor
push
dec
rcr
hlt
rolb
cli
repnz
and
push
pop
das
cmpsl
icebp
imul
test
sarb
cmp
js
mov
cmp
xchg
or
pop
hlt
pop
mov
out
xchg
push
gs
cltd
push
test
jbe
test
movsb
lret
push
aad
lret
xorb
adcb
cmpsl
aaa
test
inc
jnp
mov
aaa
or
mov
aad
popf
xchg
aaa
sbb
and
je
into
xor
mov
add
xadd
enter
cltd
stos
shlb
stos
push
or
out
xchg
push
icebp
inc
adc
mov
push
sbb
or
arpl
xchg
mov
sub
out
and
imul
push
pop
loope
mov
inc
ficompl
mov
pop
cmp
push
mov
jl
adc
push
inc
sbb
fmuls
dec
add
add
xchg
call
xor
lds
daa
loope
push
cmp
push
push
stc
cwtl
mov
cli
push
test
mov
and
mov
cmpsb
hlt
jo
cmp
mov
pop
sbb
sbb
sbb
mov
xchg
mov
fmuls
imul
sarb
aad
and
mov
call
mov
jmp
or
dec
jp
inc
lret
or
mov
jecxz
lods
pop
lahf
insb
mov
add
xor
jle
dec
sub
fcoms
jle
clc
or
das
sub
pop
scas
lock
cmc
scas
xchg
mov
fdivs
lods
jp
out
xchg
xor
int3
jle
dec
stc
sarb
and
mov
nop
lds
jns
cltd
scas
out
inc
cltd
push
lahf
aam
and
nop
jno
inc
cmp
out
dec
fcompl
lea
or
and
and
inc
inc
scas
aas
jmp
insl
sbb
out
pop
popf
lcall
push
negb
xlat
fimull
leave
fwait
pushf
imul
cld
arpl
xor
push
push
mov
negb
and
or
dec
movsl
pop
pop
xchg
test
push
push
cmp
or
inc
in
xchg
xchg
repz
popf
xorb
int
or
xchg
aad
push
push
push
dec
xchg
mov
lds
pop
aaa
inc
ja
shrb
or
loopne
cmp
push
hlt
jl
cmpsl
jnp
mov
enter
mov
iret
push
cmp
sbb
inc
dec
hlt
xchg
insb
xchg
dec
adc
jp
int3
xchg
xchg
and
push
lea
popa
mov
jno
test
mov
inc
add
sbb
repz
push
shl
xor
ds
icebp
lods
jo
test
lods
dec
shl
in
or
mov
daa
mov
ret
popf
sub
daa
fisttpl
pop
orb
jns
in
enter
inc
add
fwait
lahf
out
jnp
fnstcw
sub
out
sbb
inc
dec
mov
sbb
es
add
fwait
mov
aad
das
jae
out
lods
mov
add
or
jno
pop
shl
das
sahf
idivl
inc
xorl
aas
aam
mov
inc
and
jecxz
jge
dec
mov
mov
cli
loope
insl
sub
lcall
aaa
and
shrl
mov
scas
es
aas
aam
push
jne
leave
adc
pop
ljmp
lods
push
arpl
iret
scas
cmp
repnz
cli
mov
mov
add
add
sarl
wrmsr
mov
out
stos
pop
jne
popa
mov
stos
mov
shlb
add
fidivl
cwtl
shl
xchg
lods
adc
push
cmpsb
xor
and
and
bound
pop
scas
mov
iret
pop
sbbl
imul
cmp
lods
jmp
mov
mov
imulb
mul
sub
sahf
mov
cmp
das
idivb
andb
inc
mov
andl
inc
xorl
sahf
sbb
sub
in
xorb
fbld
xor
cmp
xchg
shll
ror
push
mov
add
js
sub
mov
les
mov
test
push
cwtl
dec
adc
leave
ja
mov
fadd
mov
imul
inc
mov
dec
dec
les
leave
js
and
test
hlt
cmp
hlt
loope
inc
loop
lret
bts
add
popa
cmc
adc
mov
fbld
or
jns
ss
jae
jg
xor
cmp
mov
adc
mov
loopne
pop
sbb
sbb
inc
pop
cmpb
or
mull
pop
loope
in
roll
outsl
in
mov
call
or
cs
adc
jbe
ror
notb
loopne
sahf
mov
mov
enter
int3
orl
inc
out
cs
aam
mov
sbb
js
and
mov
xchg
stc
push
cli
jnp
pop
adc
faddl
in
pop
jnp
in
and
adc
xchg
cmp
jmp
dec
xor
movsl
js
sti
pop
imul
ficoml
ss
icebp
dec
les
lret
add
jmp
pop
inc
or
sub
cltd
outsl
loope
mov
shll
mov
and
pop
adc
aad
jno
mov
cs
fwait
in
mov
xchg
mov
jnp
mov
icebp
mov
es
adc
jmp
mov
dec
add
and
sbb
push
inc
pushf
and
xor
sub
mov
negb
sbb
stc
enter
movsl
or
ja
sbb
dec
xor
xchg
xor
pop
push
cltd
test
out
pop
push
pop
xchg
mov
pop
nop
push
sub
inc
dec
fs
adc
xor
test
aas
cmp
sbb
push
cmp
push
xchg
pop
add
std
push
dec
pop
cmp
mov
pushf
aad
mov
inc
addr16
outsb
mov
adc
leave
jle
inc
out
fmul
cmc
mov
lcall
sbbl
fisubs
call
subb
outsb
or
jnp
sbb
leave
or
pop
insb
jae
add
popf
jle
push
inc
mov
cmpsb
pop
cmp
xor
sbb
cmc
pop
cmpsb
sbb
aad
xchg
js
sbb
adc
xor
jne
xor
dec
idiv
daa
cmp
mov
or
push
loopne
daa
adc
popl
jbe
mulb
and
rorb
cmp
ljmp
fsubrs
mov
fwait
insb
and
inc
inc
pop
test
jecxz
pop
adc
pop
dec
pop
mov
jmp
jae
insl
add
add
test
sub
enter
xlat
cltd
dec
addr16
inc
shl
int3
cmp
fs
hlt
popa
xor
out
sub
adc
mov
mov
outsb
test
lock
mov
negb
add
mulb
push
pop
xor
push
jecxz
inc
pusha
sub
clc
pop
cmp
aad
test
outsl
pop
cld
jp
ret
addl
popf
xchg
cmp
shll
jns
aas
mov
lret
adc
scas
dec
or
in
call
pop
xor
movsl
insb
insb
test
and
xor
mov
cmp
pusha
push
cld
cs
roll
adcb
dec
rcr
xor
mov
sub
ja
popf
pop
arpl
test
stos
loope
shll
leave
fsubr
outsl
es
shll
mov
dec
pop
dec
int3
out
mov
scas
sbb
shl
adc
imul
mov
xchg
stos
jle
icebp
lock
outsb
mov
jae
fisubs
jo
mov
xchg
icebp
cli
lcall
rcl
and
mov
jae
sarb
lcall
daa
mov
imul
divl
mov
sti
push
rcll
cltd
les
mov
pop
cmp
jecxz
jmp
jle
jns
mull
jbe,pn
loopne
sti
adc
hlt
in
movb
mov
sbb
cld
adc
in
pushf
pop
popl
or
pusha
pusha
sbb
mov
lock
rol
jle
inc
pusha
ja
imul
push
inc
insl
cmp
sub
adc
aaa
and
push
inc
test
sub
cmp
inc
or
adc
hlt
hlt
mov
sbb
nop
sub
ret
or
cmpsl
cli
pop
movl
test
inc
cmp
out
int3
popa
iret
jo
sub
shr
mov
push
pop
repz
jno
inc
mov
jne
and
sbbb
sub
push
shll
adc
popa
mov
sbb
xchg
mov
stos
sub
dec
fwait
sbb
lret
push
or
adc
inc
mul
outsl
jns
ds
jg
cmpsl
adc
or
scas
out
cmp
sarl
jp
loopne
inc
sbb
xor
xchg
mov
jae
mov
cwtl
cli
sahf
mov
mov
lcall
pushf
in
inc
mov
push
or
rclb
jae
mov
imul
xlat
jp
int3
sub
sarl
ja
enter
pop
mov
jo
xchg
inc
mov
dec
les
sarl
xor
add
inc
popa
fadd
cmp
adc
pop
pop
inc
pop
sbb
inc
lock
lods
jp
orl
pushf
mov
sbb
scas
imul
adc
cwtl
cli
pop
adcl
xchg
imul
repnz
pusha
cmpsb
fcmovnu
movsb
xlat
pop
stos
movsl
fsubrl
or
or
xchg
mov
js
call
mov
in
clc
jae
ret
in
scas
pop
mov
mov
sahf
fwait
in
in
mov
lods
pop
mov
idivb
pop
dec
adc
ds
cltd
inc
std
ficompl
in
pop
sahf
adc
data16
imul
xchg
lock
mov
pop
insb
js
fs
pop
bound
daa
push
xchg
or
mov
lock
dec
jecxz
adc
dec
xor
push
ljmp
xor
addr16
add
xor
addr16
sti
imul
or
jmp
shll
sub
mov
shlb
dec
pop
jnp
xchg
cmp
xor
push
mov
mov
cmp
out
xchg
and
cs
call
adcl
hlt
cmc
pop
dec
pop
xlat
push
in
inc
mov
sub
je
arpl
push
ja
jo
pop
loopne
sbb
sbb
in
add
mov
push
ljmp
insb
sti
out
mov
jb
ret
add
push
push
outsb
mov
repz
xor
fnsave
adcl
mov
push
cmp
ret
les
sti
inc
adc
push
sbb
push
inc
fxch
push
lea
jg
push
sub
pushf
lret
xor
add
repz
mov
mov
dec
je
lods
mov
pushf
call
push
pop
jae
xchg
xor
shr
mov
sbb
mov
sub
sbbl
pop
mov
roll
pop
push
or
hlt
add
mov
inc
scas
sbb
xchg
dec
jg
cmc
pop
add
orl
xor
stos
outsb
pop
sbb
nop
jne
inc
mov
pop
fiadds
ja
ret
and
cmp
adc
sub
and
lods
mov
xchg
xorb
push
sbb
lcall
ret
adc
jecxz
out
mov
mov
mov
pop
stos
mov
lcall
pop
dec
adc
hlt
leave
inc
and
int3
sub
stc
add
sub
add
mov
out
or
sbb
clc
roll
call
sahf
pop
neg
ret
es
cmp
lret
dec
cmpsb
adc
pop
sbb
xlat
or
sub
fcmovne
fwait
in
push
pop
mov
add
pop
xchg
idivb
ret
mov
scas
aam
orl
stos
xor
pop
test
fcomps
das
pop
mov
in
addr16
inc
jge
or
inc
add
lea
or
xchg
mov
hlt
lods
mov
mov
icebp
daa
mov
xor
lods
cmpsl
add
mov
mov
leave
fwait
test
and
mov
icebp
push
add
push
dec
test
sahf
and
mov
fs
jno
pcmpeqw
mov
daa
and
xchg
out
dec
mov
inc
mov
scas
xchg
inc
mov
inc
cmp
xor
addr16
cmp
inc
test
int
sbb
xchg
pushf
sub
out
int3
jle
sarb
jb
les
mov
ljmp
and
push
mov
xchg
push
call
shlb
cmpsl
movsl
mov
inc
popf
sbbl
xor
aas
inc
xor
sbb
pop
stos
cmc
fisttpl
mov
jp
cmp
adc
push
add
rcrb
pop
pop
xor
sub
jns
cli
insb
jmp
pop
cld
inc
std
push
out
xchg
ljmp
lods
jnp
pop
out
mov
xor
pop
cmp
imul
inc
mov
dec
adc
sbb
mov
and
pop
or
inc
incl
test
int
jns
cld
mov
xchg
repnz
loopne
js
icebp
and
lds
adc
pop
jmp
test
cmp
mov
dec
pop
fs
das
fs
push
out
ss
mov
fldl
inc
les
or
insb
xor
pop
stc
xor
dec
sub
mov
in
imulb
and
mov
xor
xchg
pop
push
xor
in
jae
mov
mov
popl
mov
std
outsb
dec
lea
push
cmc
inc
lods
or
cmp
enter
rcr
fdivl
push
test
sahf
leave
jp
out
divb
dec
out
xchg
test
popf
shl
cmp
fcmovnu
xchg
lods
test
je
sub
fimuls
mov
jno
and
push
cmc
xchg
popf
sbb
mov
outsl
popa
and
sub
push
xchg
ret
jl
push
xchg
or
dec
dec
stc
stos
adc
cmpsl
push
fildll
xchg
xor
arpl
and
std
lahf
mov
rcrl
lret
ljmp
mov
iret
mov
xlat
push
cmpsb
std
cli
xor
loope
enter
out
xchg
xor
or
xchg
das
pusha
daa
and
arpl
adc
jbe
repnz
outsb
rclb
xchg
movsl
cwtl
pop
and
mov
cmp
leave
je
in
scas
jl
lods
lahf
add
mov
arpl
or
ficoml
lcall
xchg
repnz
dec
jl
in
ljmp
jno
popa
fsubs
inc
movsb
es
mov
lea
into
inc
mov
mov
decl
push
sub
test
out
or
lods
cmp
lret
cmp
fcmovnb
arpl
push
mov
push
aas
inc
dec
out
rcrb
xor
sarb
out
jge
inc
adc
jecxz
mov
add
adc
pop
push
popf
jns
inc
pop
and
scas
adc
pop
loope
leave
xorb
mov
mov
bound
push
jle
lret
and
cmovbe
jbe
and
add
xor
pop
loope
sbb
add
mov
idivl
pop
addr16
xor
inc
push
cmp
imul
sti
sbb
xchg
aam
pop
imul
js
insb
inc
jmp
popf
stos
dec
jo
push
addb
ret
mov
xchg
lods
xor
push
and
inc
iret
mov
xadd
jecxz
mov
lcall
mov
cwtl
js
push
fdivrs
or
js
dec
enter
sub
js
push
fdivrs
or
js
dec
enter
test
cwtl
or
cwtl
clc
call
enter
test
cwtl
or
js
dec
enter
sub
js
push
fdivrs
or
xchg
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
or
sbb
sub
cmp
dec
xchg
sub
in
jnp
stos
jb
lret
adc
add
and
and
sbb
inc
repnz
dec
xchg
pop
subb
mov
inc
lret
bound
xor
and
repnz
push
xchg
cmp
out
push
mov
or
push
test
push
gs
push
mov
mov
pop
insl
mov
push
cmpsl
int3
shrl
sub
int
out
shl
shrb
sbb
out
imulb
jge
out
mov
xor
xchg
mov
cmc
ret
pop
and
dec
arpl
popa
fstl
inc
mov
in
sahf
and
jae
into
out
mov
xchg
pop
adcb
mov
xor
fnclex
ljmp
cmp
mov
shrl
jecxz
mov
stos
bound
pop
test
sub
mov
mov
xchg
cmp
mov
pop
dec
popf
inc
add
fstl
dec
ret
cmp
scas
xchg
and
dec
push
add
jb
bound
xor
fs
imul
pop
xlat
jnp
mov
enter
ficoms
mov
inc
sahf
inc
inc
mov
pop
andl
in
mov
aaa
leave
xor
ja
xchg
adcb
addr16
ja
dec
xchg
push
subb
mov
stos
jb
lret
adc
add
xor
and
rcrb
ret
cmp
dec
xchg
pop
subb
mov
stos
jb
lret
adc
add
xor
and
sarb
and
loop
call
adc
popf
arpl
cmp
jae
hlt
ds
sbb
jecxz
fucomi
jbe
pusha
push
in
jp
add
mov
in
fsubs
xchg
daa
adc
in
sbb
out
and
rcll
popa
mov
push
push
notb
inc
jg
repz
pop
mov
adc
imul
adc
insb
imul
adc
shll
mov
les
mov
fs
adc
icebp
scas
and
imul
push
pop
adc
jnp
mul
or
push
mov
call
stos
push
aaa
sahf
xchg
mov
addr16
push
in
push
push
dec
push
add
pop
jno
jp
pop
xor
sahf
fwait
cmp
lahf
pop
aad
rcr
mulb
jecxz
pop
and
imul
daa
jo
cmp
pushf
and
cmp
ds
push
and
addl
mov
xor
inc
and
test
mov
and
or
jl
xor
ret
loopne
cmp
and
outsl
adc
aas
mov
fcmovnb
in
addr16
rorl
adc
xor
or
jp
lds
lcall
mov
xchg
mov
mov
adc
xor
je
adc
lds
jne
or
out
ja
add
pop
cmc
push
repz
cmp
aam
mov
ds
jge
fdivrl
dec
arpl
xchg
lahf
fstpl
mov
andb
and
arpl
aad
push
push
aam
fnstcw
sbb
adc
mov
shrb
pop
xchg
mov
jb
fldt
cld
inc
push
or
xor
iret
mov
dec
call
or
fstpl
lahf
sbb
ljmp
mov
fsts
jnp
aaa
dec
and
xorb
pushf
cmp
leave
mov
int
fdivl
movq
mov
imul
cmp
leave
and
arpl
cmp
lahf
jle
stc
sbb
mov
test
mov
mov
fildl
or
data16
ret
xor
push
bound
test
pop
pop
ljmp
or
pop
fcmovne
out
lods
push
out
scas
stc
inc
pop
lret
cmp
cs
in
gs
out
and
adc
fs
adc
adc
add
cltd
dec
mulb
adc
lret
mov
jmp
pop
cmpsl
int3
jmp
mov
dec
ss
pop
sub
dec
fstpl
std
fwait
or
or
gs
out
xchg
pop
aas
fcmovnb
das
data16
push
decb
sub
xor
sub
push
and
jb
in
inc
pop
adc
in
inc
sbb
mov
lods
nop
ret
orl
cltd
imul
mov
cmp
pusha
push
jp
lcall
icebp
inc
cmpsl
push
filds
cltd
idiv
call
fisubs
ret
shrb
movsl
add
cmc
std
cli
aam
scas
jecxz
push
aaa
movsl
sub
daa
adc
pop
stos
outsb
add
testb
mov
sbb
xchg
lock
stos
cbtw
push
add
jno
sbb
mov
mov
cwtl
jne
je
sahf
push
sbb
mov
adc
cmpsl
aaa
enter
xchg
and
sbb
or
mov
sbb
push
xchg
jb
scas
test
or
addl
mov
push
cmp
pop
cmp
ja
ret
jmp
mov
pushf
pop
mov
jbe
fwait
mov
and
jne
dec
mov
push
bound
pop
ja
adc
cmpsl
add
cmp
pushf
out
fidivs
mov
cld
add
mov
xchg
sub
sbb
aam
clc
pop
pusha
mov
repz
shl
xchg
fs
mov
dec
orb
cmpsl
xor
jecxz
and
sbb
ret
dec
jg
jne
pop
imul
lods
movsl
ds
lcall
jl
add
pop
addb
jb
and
rorb
push
push
mov
mov
jle
push
xchg
fldl
test
rcrl
into
xchg
ss
enter
shlb
xchg
xor
inc
dec
int3
xchg
pop
mov
add
scas
mov
popa
xchg
cld
call
js
or
mov
cmp
push
xor
dec
mov
mov
push
xchg
jecxz
inc
or
xchg
xchg
push
add
pop
movsb
test
pop
or
mov
adc
mov
jne
adc
dec
xchg
iret
push
lock
testb
mov
ret
arpl
inc
addb
cmp
dec
icebp
out
xchg
sbb
mov
fdivp
dec
add
add
push
mov
and
mov
fs
mov
pop
pop
jle
in
std
in
mov
lods
dec
push
jmp
bound
mov
pop
xor
je
jo
cld
mov
xchg
aaa
inc
inc
jo
in
jo
push
int3
jns
jne
outsb
jno
je
addr16
movsb
mov
rcl
inc
dec
cmpsb
mov
cmc
push
movsb
mov
mov
push
push
outsl
jp
adc
xchg
adc
outsb
push
add
sub
push
das
pushf
fs
inc
xor
aas
pop
shlb
fisubs
and
lret
addr16
sbb
fidivrs
insb
jge
fidivrl
in
or
jl
cs
push
and
xlat
out
pop
adc
jne
popf
ja
loopne
mov
cmp
sub
mov
mov
mov
data16
sahf
jmp
add
daa
mov
dec
jno
pop
je
mov
push
loop
aas
xchg
sbb
xchg
or
std
lret
and
jnp
cli
movsl
xchg
in
mov
add
mov
sti
xor
test
out
mov
mov
insl
mov
das
mov
data16
clc
add
and
shrb
fwait
mov
push
mov
sub
scas
push
test
jb
mov
shll
scas
xor
clc
lcall
inc
loope
inc
ds
jns
mov
dec
xchg
inc
and
ds
jne
xchg
push
inc
icebp
js
popf
icebp
hlt
mov
jp
and
mov
xchg
dec
icebp
insb
ror
gs
ret
rcll
cmc
xor
stos
roll
pop
lcall
sbb
add
jge
incl
mov
rolb
cltd
pop
movsl
nop
clc
sub
pop
mov
pushf
les
push
sub
xor
pop
dec
pop
lret
lret
sahf
lahf
fwait
stos
les
jmp
push
rorl
pmullw
lcall
sarb
lcall
mov
fwait
jnp
sbb
or
xchg
xchg
inc
hlt
xchg
mov
hlt
pop
jno
pop
mov
cs
lods
push
notl
mov
insb
sub
cs
jecxz
data16
dec
sbbl
inc
xchg
rorb
xlat
out
dec
test
xchg
sbb
sbb
jl
scas
imul
iret
repz
sbb
or
jl
lret
xchg
mov
mov
cmpb
sti
cmove
jge
sub
cwtl
mov
mov
mov
or
pop
dec
lods
bnd
test
mov
pop
fwait
aas
leave
mov
dec
rcrl
movsb
daa
cmp
and
inc
cltd
dec
stos
dec
sbb
or
jno
nop
add
gs
mov
jecxz
pop
xor
cmpsb
popf
inc
std
ja
lock
adc
lahf
or
mov
cmpsb
dec
cmpsb
sbb
add
ret
pushf
mov
mov
std
push
add
incl
sbb
popf
jmp
push
push
sahf
ss
cs
imul
icebp
ljmp
insl
aas
pop
sbb
mov
cltd
ret
gs
fldl
pop
cmpsl
lods
pop
xor
lods
mov
jns
and
cmc
test
inc
cmp
inc
and
cmp
xor
push
adcl
ds
pop
scas
lock
rolb
rorl
nop
dec
ja
pop
inc
test
lds
push
sbb
cld
or
mov
lods
push
in
push
xor
int3
cltd
fs
fidivrl
sbb
insl
pop
subl
data16
dec
rcll
mov
aaa
je
idivl
in
or
repnz
fidivrs
loopne
mov
add
sarb
xchg
sub
jns
mov
imul
roll
movsb
dec
mov
jl
dec
jnp
mov
adc
lret
mov
push
test
int3
sub
push
mov
stc
lahf
add
mov
rcr
mov
nop
sbb
insl
shll
roll
add
cmpsl
imul
mov
mov
pushf
and
sub
add
jne
mov
iret
inc
lcall
mov
sub
lret
pop
cmp
mov
sub
mov
add
fwait
pop
or
inc
out
lods
sub
sub
lods
cmp
mov
and
loopne
mov
inc
xor
fbld
jmp
sti
jne
movsb
lods
lea
mov
dec
sbb
mov
clc
push
push
or
jle
loop
inc
mov
ja
stos
cmp
inc
push
jmp
mov
insl
pop
aaa
xchg
stos
lock
and
stos
cmc
add
add
xor
ret
notb
hlt
mov
sub
push
mov
mov
xor
loop
test
enter
fidivrl
test
jns
xchg
aam
sub
mov
popf
push
xor
add
sub
pop
hlt
dec
cmpsl
mov
xor
jbe
scas
lods
jp
cs
adc
mov
bound
jmp
insb
push
imul
outsl
fwait
movsb
mov
adc
lods
mov
inc
xchg
jne
jecxz
pop
pop
pop
push
les
adc
dec
add
push
pop
and
cmc
jne
jae
lahf
jge
lods
enter
mov
stc
lods
push
stc
xchg
and
mov
mov
js
pop
jp
outsl
ret
pop
mov
fiadds
xor
dec
scas
mov
sub
inc
iret
jl
lds
mov
sti
fdivl
and
adc
mov
icebp
jmp
add
xchg
mov
or
mov
inc
fimull
sbb
dec
mov
lock
mov
ret
mov
imul
push
xchg
mov
loopne
sbb
fisttpl
and
inc
lea
shlb
cmpsb
test
cmpsb
imul
ljmp
jmp
insl
dec
sub
sbb
jbe
std
jmp
or
das
adc
pop
dec
mov
xor
clc
ss
out
xor
dec
nop
mov
ret
adc
cmp
xor
adc
movsl
xchg
xor
inc
jp
xlat
movsb
out
add
mov
ret
mov
and
push
add
test
cld
push
push
lods
ds
frstor
jne
or
sbb
mov
lret
fnstcw
mov
xchg
in
or
mov
hlt
ret
xchg
lcall
sbb
xchg
movsb
shl
sub
movsb
sub
lock
sub
movsb
mov
xor
pop
nop
hlt
cltd
leave
cmpb
push
dec
mov
dec
jbe
call
mov
xor
test
pop
jle
sbb
cmpsb
xchg
cmc
lods
mov
lret
int3
push
imul
add
mov
mov
xchg
xchg
je
mov
xor
aas
push
imul
xor
cmp
mov
xchg
and
psllq
jae
dec
push
test
jp
scas
mov
xor
cmp
stc
insb
pop
fs
jmp
jns
inc
mov
out
sub
rclb
cltd
imul
jns
push
aas
adc
mov
mov
stc
pop
mov
push
jle
test
inc
fstps
movsl
icebp
inc
cld
cmpsb
frstor
nop
mov
dec
mov
add
sbb
sub
aam
sbb
aad
and
mov
nop
test
mov
cwtl
div
std
int3
mov
orl
insb
stc
shlb
std
inc
push
cltd
addb
fidivl
mov
and
lock
mov
jne
fists
data16
call
mov
je
loope
push
cli
adc
fmul
mov
and
es
outsb
nop
pop
lods
sarb
pop
and
mov
dec
out
pushf
fisubl
xchg
jmp
pop
testl
add
mov
push
scas
test
stc
ficoms
outsb
popa
mov
or
lods
ret
aaa
dec
xchg
fsts
adc
cmpsl
or
enter
test
mov
ret
inc
imul
daa
sbb
mov
fmuls
movsb
sahf
and
into
jb
dec
jns
and
xchg
ret
xor
pop
into
int
cmp
lahf
rolb
neg
in
sbb
fs
or
sub
aas
cmpsb
sub
bound
mov
inc
xorl
out
js
data16
cltd
and
lock
das
sub
push
adc
cmp
pusha
repz
jns
mov
xchg
mov
in
test
mov
mov
or
jb
imul
mov
sbb
cmp
mov
repnz
fs
stc
ss
jecxz
pop
or
or
mov
dec
int3
loopne
adc
sbb
je
cmp
adc
repnz
jecxz
outsb
and
sub
insb
xor
cmp
sub
pop
and
and
add
test
loop
repnz
mov
aas
dec
add
add
sbb
jb
mov
inc
loop
lret
ljmp
pop
push
pusha
xchg
inc
imul
cmp
pop
jl
cmp
dec
add
into
rorb
push
movsl
aad
adc
jno
insl
sbb
fistpl
scas
cs
inc
lcall
inc
or
add
out
sbbb
popa
in
xor
lods
xor
outsb
in
subb
movsl
notb
imul
orb
in
out
xchg
jns
sub
sbb
je
int
add
loop
inc
in
mov
andb
pop
insl
xor
in
push
sbb
jns
jnp
lods
mov
enter
xchg
xor
call
xlat
jmp
ljmp
pushf
iret
dec
sbb
cwtl
icebp
sti
and
ljmp
dec
mov
es
sti
scas
clc
lock
cmc
les
mov
xor
jg
jmp
mov
jge
sub
pop
mull
mov
mov
inc
cli
insb
jmp
mov
imul
iret
jmp
insb
dec
push
jge
outsl
push
xor
sub
cs
lods
std
lea
shrl
push
fdivp
outsb
insb
loopne
jno
mov
icebp
jae
jo
into
mov
mov
test
xchg
push
inc
xchg
call
mov
das
sub
mov
repz
lods
out
clc
in
nop
imul
fsubr
pop
popa
sbb
jle
leave
pusha
adc
scas
adc
rcr
inc
and
jns
loop
cs
mov
cs
into
sbb
adc
add
sbb
lret
mov
aam
ret
cmc
idivb
hlt
cmc
xor
mov
cwtl
jo
loopne
sar
pop
jo
test
push
and
je
mov
add
loop
testb
and
fbstp
and
xchg
lcall
push
jns
ret
pop
mov
sbb
cltd
mov
cmp
js
in
sub
or
outsb
xchg
out
leave
ja
jg
sbb
push
int3
push
bound
jecxz
arpl
fmul
clc
inc
cld
rcrb
lods
fisttpl
lret
sub
lods
sub
push
sbb
mov
dec
std
imul
loop
sub
sub
xor
rorb
jge
and
jge
mov
adc
mov
xor
lods
push
ret
and
jmp
adcl
lds
fwait
orb
enter
pop
lahf
fstpl
and
scas
sub
push
mov
jecxz
leave
mov
repz
test
pop
sbb
ljmp
ret
aad
pop
inc
add
in
addb
mov
xchg
call
leave
daa
in
in
and
mov
xor
adcl
rcr
push
js
outsl
enter
fcoml
mov
pop
ret
pop
push
in
dec
repz
fists
and
mov
mov
dec
mov
fnsave
sbb
jbe
xor
jbe
lods
push
cwtl
push
mov
in
xchg
jmp
repnz
fists
ljmp
xor
xchg
pop
or
shrl
scas
xor
test
push
xchg
fildll
mov
imul
addr16
addr16
push
sbb
daa
mov
test
out
loop
push
mov
jo
enter
ds
xchg
or
push
fbstp
sub
das
test
movsb
push
dec
sub
xor
rcrb
jge
mov
subl
mov
out
pop
xchg
dec
jl
ss
push
and
cmc
inc
add
sub
or
popf
and
mov
mov
inc
loopne
push
mov
dec
push
ja
sbb
int3
mov
pop
mov
adc
sbb
into
add
cmpsl
inc
roll
dec
mov
and
bound
jb
das
jae
cld
sub
dec
mov
sub
clc
aad
push
push
mov
push
pop
popaw
cs
cmp
mov
xor
outsb
sbb
mov
shlb
xor
dec
push
dec
cmp
aaa
test
cmp
gs
shll
and
lea
add
add
sub
sahf
mov
jge
jmp
pop
rcll
filds
cmpsb
cmp
aad
fdivs
loopne
inc
cmp
pop
sbb
cmp
pop
int3
xchg
fimull
and
stos
stos
insb
nop
push
outsl
test
xchg
dec
sbb
aam
loop
and
mov
into
or
faddl
cmp
daa
in
imul
sti
mov
in
sbb
movsl
add
das
jbe
and
movsl
daa
xchg
add
and
nop
xorl
cld
jp
xchg
lock
xchg
jl
cmp
and
mov
dec
add
ret
pop
push
mov
int3
sbb
inc
push
xor
push
mov
pop
sub
xor
out
push
mov
scas
inc
xor
pop
jmp
sub
and
push
xchg
push
push
popa
cmp
inc
imul
stos
loop
sub
movsl
jp
lea
xchg
push
scas
nop
fldl
xor
fldl
scas
mov
and
addr16
xor
pop
pop
and
dec
sarb
push
clc
sbb
mov
lock
int3
inc
add
xorb
xchg
scas
inc
test
push
incl
mov
add
jge
mov
movsb
call
sub
stos
sbb
cmp
lahf
test
pop
push
adcl
je
subl
lock
sbb
pop
add
lcall
cmpsl
cmp
cmp
jl
dec
rep
jmp
outsb
repz
push
pop
fldt
js
into
pop
enter
movsl
push
dec
enter
dec
pop
pop
pusha
mov
sahf
sbb
push
inc
adc
and
jne
fcompl
cs
lcall
mov
fidivl
in
popa
xor
and
mov
add
pop
mov
lods
ficoml
gs
xor
cmpsl
sub
xlat
pusha
and
add
pop
xchg
cmpsb
test
lret
adc
daa
movsb
test
cmpsb
ret
lods
inc
lret
mov
mov
jmp
insb
lcall
cs
sbb
pop
enter
xor
sarb
ret
pop
mov
jle
sbb
mov
lahf
sub
and
xchg
add
xchg
mov
inc
cmc
jge
sbb
mov
mov
cmp
mov
jmp
xchg
push
add
outsl
sub
and
movsl
mov
cmp
fidivs
mov
or
movsb
xchg
xor
iret
aam
fs
sbb
pop
mov
femms
call
out
pop
sahf
push
add
pop
mov
clc
add
pop
adc
mulb
mov
ss
lcall
mov
icebp
mov
adc
imull
push
inc
jns
mov
lret
pop
scas
mov
loop
jb
insl
bound
mov
xor
cmpsl
pop
or
rorb
outsl
inc
icebp
lcall
out
mov
in
dec
pusha
pop
sub
xor
enter
mov
add
faddl
inc
lahf
lahf
mul
jb
lret
sub
enter
sub
in
daa
cmp
xor
mov
das
push
cld
sbb
xor
mov
adc
lea
dec
stc
or
notb
inc
lret
or
ret
cmp
dec
xchg
pop
subb
mov
stos
jb
lret
adc
add
xor
and
rcrb
ret
cmp
dec
xchg
pop
subb
mov
stos
jb
lret
adc
add
xor
and
shrb
ret
cmp
fistl
mov
inc
pop
jb
lret
adc
add
xor
and
rolb
jno
sbb
dec
xchg
dec
subb
bound
jb
adc
adc
add
mov
rorl
shrb
sub
inc
jge
outsl
int3
dec
adc
mov
rorl
mov
sub
pop
add
pop
pop
and
dec
add
xchg
mov
xor
mov
jno
inc
inc
xor
jge
add
arpl
gs
ret
cmp
scas
mov
or
cli
sahf
xchg
adc
jne
insb
sub
cmp
push
and
movsl
xor
xlat
movsb
in
sub
pop
jle
mov
sub
lcall
outsb
mov
xor
pop
imul
jo
jno
push
cmpb
lds
mov
aad
roll
in
xchg
and
or
hlt
sub
sub
insl
lods
out
dec
jge
daa
and
sub
add
cmp
ss
std
mov
pop
insl
xor
inc
pop
mov
dec
push
fisubl
push
loope,pn
add
mov
sub
pop
ds
std
dec
imul
popf
movsl
shr
std
mov
and
xor
jge
or
dec
xor
icebp
enter
stc
lods
mov
int3
nop
in
cmp
hlt
imul
das
and
mov
cmpsl
repnz
in
repz
sahf
mov
adc
sbb
jle
and
je
jb
add
icebp
mov
in
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
lods
das
xchg
jmp
in
or
adc
cmp
mov
out
iret
mov
xlat
popa
mov
sub
mov
mov
mov
int
loop
repnz
push
mov
xchg
mov
xor
out
sahf
rorb
pop
mov
jmp
testb
nop
fisubrs
in
insl
jle
sub
jmp
or
aam
inc
add
pop
ret
and
shll
fmuls
subl
dec
sub
aaa
int
test
cmp
jl
repz
push
or
daa
sarl
into
nop
fildll
aad
mov
sahf
and
icebp
cld
cmpsb
dec
outsl
ds
test
pop
lahf
push
enter
xchg
aad
pop
stc
mov
jg
notl
pop
add
sub
nop
mov
adc
xchg
scas
xor
cmpsl
sti
arpl
es
dec
cmpsb
pusha
adc
and
insb
mov
add
fwait
movsb
dec
push
mov
mov
xchg
add
mov
push
or
gs
rep
sbb
mov
lcall
adcb
mov
es
movsb
add
scas
ficoms
jnp
js
outsb
jle
mov
jae
jmp
mov
mov
cmpsl
ja
push
stos
out
mov
jge
out
fwait
dec
popf
or
inc
sub
inc
dec
xchg
dec
mov
shlb
xor
sbb
mov
jno
sub
fwait
xchg
in
inc
sub
clc
and
test
cmpsl
je
gs
fsin
add
fdivr
add
cmpb
mov
in
and
je
adc
mov
js
xchg
fmul
dec
shl
push
aaa
rcrb
fiadds
adcl
js
movsl
inc
les
aas
enter
outsb
dec
and
mov
push
fsubr
or
call
xor
sub
cmpsb
cmp
mov
xchg
mov
lcall
dec
das
popf
pop
mov
pop
push
pop
icebp
fs
and
sbb
bound
sub
in
and
or
dec
sahf
sbb
dec
jo
shll
push
in
mov
and
test
aas
mov
subb
xchg
test
adc
push
shll
cs
pop
sbb
lret
in
xchg
sbb
and
cmp
idivb
sbb
test
imul
cmp
mov
push
dec
or
das
repnz
xlat
and
push
je
inc
mov
jne
jmp
fidivrl
mov
mov
ja
std
push
pop
adc
in
xchg
cmp
and
push
sbb
mov
out
aam
cmp
sbb
fadds
or
push
inc
jns
mov
mov
jbe
sbb
out
sbb
int
outsb
jae
mov
sub
xchg
fs
test
in
jl
ret
mov
inc
sbb
push
pop
sbb
cmp
pop
movsl
leave
dec
xchg
cmp
push
testb
jg
cld
xchg
stos
out
inc
mov
sub
mov
sbb
and
rcrb
mov
hlt
inc
add
pusha
add
adc
in
jle
lcall
cltd
sbb
fmull
and
xor
test
in
test
dec
ds
pop
jg
es
cmp
imul
xlat
and
addr16
push
outsb
pop
dec
negb
cmp
mov
pop
loop
mov
fdivs
push
mov
push
fucomp
mov
xchg
repnz
es
mov
sarb
mov
inc
lahf
popf
adc
enter
sti
or
sub
out
lock
jge
sti
cmc
push
dec
jle
jnp
pop
fsub
sub
test
mov
arpl
lods
lahf
xchg
jb
cmp
mov
xor
xchg
jbe
add
scas
mov
inc
fidivl
imul
dec
lret
sbb
test
cltd
ret
sbb
out
cmp
dec
fnstsw
cmp
mov
mov
jb
xchg
jle
add
mov
xor
mov
test
mov
cmp
xor
and
out
pop
icebp
xchg
jmp
mov
add
cmp
sti
and
cmp
sahf
add
sub
ss
ficoml
fisubrl
adc
jle
int
adc
popf
or
mov
in
out
mov
mov
push
test
adc
insl
push
inc
inc
orl
xor
cli
repnz
lcall
pop
fcoml
addr16
pop
lret
mov
mov
aaa
xor
inc
jnp
jne
test
dec
arpl
lret
xchg
adc
or
mov
pop
pop
and
pop
cmp
outsb
js
enter
repz
sbb
push
xor
add
xchg
out
xlat
and
movsb
in
pop
out
enter
cmp
ss
je
loope
pop
out
jae
cli
push
pusha
mov
out
fwait
lea
dec
out
leave
sbb
push
icebp
sahf
dec
push
adc
les
push
jg
push
jo
dec
jns
loope
xchg
repz
or
imul
filds
xchg
push
in
cmc
jl
pop
ss
ficoml
call
mov
mov
jae
cmp
test
repnz
cltd
push
mov
cmpsb
int
out
enter
mov
cmc
nop
andb
sub
xor
xchg
es
imul
sub
test
sbb
insl
js
add
add
dec
in
jmp
scas
lret
je
int
mov
pop
popf
fisttpl
or
sarb
xor
xor
xchg
mov
in
aaa
scas
sbb
shrl
movsb
out
xchg
inc
lds
pop
sub
push
lds
stos
mov
dec
fwait
sbb
mov
xor
repnz
push
mov
sub
pusha
bnd
adc
mov
push
adc
jb
pop
lods
push
cmp
jbe
xchg
push
dec
dec
push
enter
aam
movsl
add
movsl
sbb
sti
mov
lahf
sbb
fdivs
or
dec
cmp
in
cmp
test
lds
out
mov
push
and
mov
arpl
aaa
lret
add
cmp
mov
jl
jecxz
jp
adc
jmp
mov
sub
fprem1
jecxz
lcall
test
dec
lods
aam
pop
into
mov
mov
mov
stos
ss
sbb
data16
pop
push
jne
addl
stos
push
push
inc
fldl
pop
jmp
sti
fmul
daa
sarl
inc
xchg
push
xchg
data16
xlat
in
aaa
adc
push
repnz
cvtps2pd
push
sar
cs
lahf
pop
sub
pusha
gs
lods
xchg
loop
jae
lret
jmp
pop
mov
push
xchg
and
inc
test
icebp
pop
fnstsw
test
mov
sbbb
push
sub
pop
mov
xor
or
sbb
push
sub
frstor
cmpsb
push
and
mov
mov
mov
sub
xchg
mov
cmp
sub
shr
lcall
xchg
shll
dec
jne
stos
mov
cmp
pop
mov
dec
jcxz
adc
adc
xor
test
cmp
mov
pop
xor
popf
stos
out
cmc
jecxz
jecxz
mov
sub
scas
lret
mov
xchg
add
imul
pusha
push
cmp
ficoml
xor
daa
sub
inc
mov
lahf
mov
cmp
mov
sub
cmp
stos
outsl
in
jno
ljmp
cmc
xchg
xchg
lds
xchg
mov
dec
jae
pop
inc
jns
insl
jne
loopne
mov
add
in
dec
xchg
imul
xlat
cwtl
in
sbb
test
mov
lahf
fcomip
enter
sub
sbb
mov
sub
arpl
les
loopne
fmuls
cmc
jno
sbb
in
xchg
ret
or
or
jno
xor
cmp
sub
push
aas
aaa
out
cmp
sbb
enter
ficoml
test
mov
mov
ss
dec
movd
insl
cmc
push
cmpsl
xchg
cmp
ds
lahf
jp
xchg
cmp
xchg
inc
mov
test
and
cmp
aad
xor
fisttpll
sbb
ljmp
test
xchg
sbbb
stos
rorl
pushf
push
sbb
roll
cwtl
xchg
fcom
add
sbb
shrl
hlt
sbb
xchg
imul
das
mov
gs
jbe
aaa
repz
pop
outsb
jns
loope
push
aas
push
sbb
pushf
mov
ds
sub
pop
fs
bound
out
adc
sbbb
faddl
fistpl
fisttpll
iret
daa
xchg
lods
push
ret
pop
test
jg
int
xor
jae
cmp
cs
push
stos
jo
inc
aaa
xlat
xchg
mov
xor
add
fstps
adc
mov
push
popf
lcall
xlat
fidivrs
push
test
andl
add
aad
pop
std
jbe
cmpsb
test
push
cltd
lret
sarl
xor
loop
pop
push
xchg
dec
and
leave
std
les
sub
rcrb
xchg
js
jecxz
push
mov
xchg
push
push
insb
xchg
es
cmpsl
cld
adc
dec
aas
xchg
test
stos
and
mov
xor
shrl
push
aam
mov
scas
jmp
outsb
rol
scas
es
cmpsl
imul
loope
daa
mov
out
fiadds
mov
add
inc
jle
sub
xchg
cmc
sbbl
pushf
adc
inc
cmpsb
push
mov
cltd
xor
std
cmpsl
fnstsw
into
adc
xor
mov
pop
stos
lcall
lods
ret
lea
jp
cs
cli
cmpsb
jmp
sub
jle
jnp
icebp
add
jbe
jecxz
test
sub
and
pop
and
inc
add
add
inc
aaa
cmp
jg
and
jb
mov
insb
xor
shl
jbe
fstpt
dec
sub
jb
rorb
sub
loope
stos
add
pusha
cmp
stos
mov
inc
test
xor
pop
inc
mov
or
sbb
lahf
vandpd
int3
adc
ss
jle
and
mov
sub
in
loope
int
inc
sub
jno
inc
mov
cmp
repnz
addr16
in
xor
xchg
sbb
addb
adc
mov
leave
lret
je
movsb
in
sahf
sbb
into
xor
loopne
inc
sub
jg
xor
sbb
mov
xchg
das
cmp
or
mov
aam
push
repz
inc
call
pusha
xchg
pop
loope
test
lock
les
or
jnp
imul
fisttpl
add
rorb
and
popf
xchg
out
sub
fidivrs
nop
dec
shlb
and
and
outsl
scas
push
jae
loopne
push
sub
push
and
nop
js
testb
scas
xchg
mov
pop
jl
adc
gs
out
clc
ljmp
negb
mov
push
in
pushf
pusha
cmp
dec
mov
jle
xchg
mull
mov
xchg
cld
test
call
ror
jno
cmp
out
push
adcb
and
adc
jnp
out
jecxz
ja
shr
aad
lods
lahf
bound
shll
mov
fidivrs
push
pop
mov
pop
cs
mov
push
ret
stos
mov
aam
jne
shl
jl
fbstp
sub
stos
in
data16
gs
or
sbb
das
mov
push
pop
std
mov
lods
and
sbb
lock
stc
cltd
push
sub
pop
mov
jae
cld
pop
in
sahf
pop
dec
inc
sub
sti
mov
dec
fiaddl
iret
jp
jmp
ror
ljmp
fimull
sub
jne
cwtl
jg
repnz
int
rcl
andl
push
mov
fldl
inc
cs
or
ret
adc
cmpb
jne
xchg
mov
mov
movl
mov
inc
and
mov
xor
cmp
or
dec
sub
popa
sti
clc
adc
or
out
lods
add
push
mov
out
popa
lahf
cs
data16
cltd
or
fildl
nop
mov
fs
push
push
lds
inc
xor
cmp
lsl
sub
cli
mov
loop
test
xchg
mov
shl
sub
sub
adc
mov
push
and
add
sub
lahf
ja
stos
aaa
mov
mov
jge
lods
fldl2t
add
rclb
add
pushf
in
cs
cmp
xor
inc
in
bound
call
mov
sarl
xorb
cmp
or
xchg
or
or
test
into
sub
push
stos
inc
mov
dec
sbb
push
pop
cli
pushf
and
fstps
inc
ja
pop
or
mov
sub
mov
xchg
sbb
bound
xor
std
ja
push
adc
push
dec
adc
cs
scas
xchg
fnsave
jge
fwait
into
add
out
into
fisttpll
repz
cmp
jmp
sub
push
sbb
insb
push
in
ret
out
xor
out
jp
xchg
jns
cmpsb
push
sub
xorl
nop
enter
cli
dec
fs
shl
pop
push
inc
mov
jne
lea
sbb
sub
sub
movl
push
pop
repnz
pop
jle
fstl
inc
or
sub
xor
adc
and
pop
add
imul
fcompl
aam
pop
mov
xchg
rorl
data16
xchg
out
lods
fdivrl
inc
insb
aaa
mov
push
cmp
inc
mov
fwait
inc
mov
es
dec
add
mov
mov
aaa
lock
mov
movsb
add
dec
mov
cltd
sbb
cli
cmp
or
jp
xchg
add
iret
pop
push
call
clc
test
iret
cmc
pop
in
mov
cltd
jge
mov
xchg
call
pop
mov
fldcw
xor
testb
call
and
pop
out
mov
fs
sbb
shl
adc
aaa
dec
js
out
xchg
or
xchg
push
aas
daa
movb
and
jbe
enter
jg
fmul
loopne
mov
sti
cmp
mov
fidivs
mov
clc
fidivrl
mov
repnz
incl
mov
push
jp
arpl
movsl
cmp
dec
and
rorb
out
mov
mov
pop
fs
jmp
sti
adc
add
out
aad
mov
sub
outsb
xor
mov
mov
xchg
jp
aaa
shrl
jo
shrb
adc
inc
jo
add
in
xor
adc
mov
stos
cmp
adc
sbb
scas
mov
mov
push
aad
movsl
mov
test
sub
or
cs
adc
leave
lock
inc
ja
in
mov
inc
arpl
outsl
jno
ret
fs
mov
cwtl
jge
ss
dec
xor
repz
adc
bound
cmp
and
test
lock
arpl
aam
mov
test
push
inc
pushf
sbb
jecxz
add
dec
push
adc
insb
dec
mov
call
cs
insl
inc
call
leave
test
inc
cmp
ja
sub
push
adc
adc
jg
jmp
movsb
notl
jp
or
aaa
adc
cmpsb
mov
push
lea
push
pop
std
or
dec
fldl
adc
sbb
sub
dec
cvtps2pi
out
mov
int
mov
fwait
outsb
mov
jl
gs
add
imul
lret
int
ljmp
sbb
subl
cmpsl
jecxz
sti
clc
popa
stc
mov
repz
xchg
sti
xchg
xorl
xor
push
pop
aam
xchg
gs
pop
sbb
jne
mov
int3
outsb
cmp
scas
ret
inc
outsb
aaa
scas
imul
fwait
xor
jne
mov
xchg
mov
test
inc
test
sti
add
lcall
loope
ret
mov
jnp
push
out
push
push
les
daa
cwtl
or
add
mov
xchg
in
lcall
inc
loop
mov
adc
lret
sub
and
aaa
pop
in
jg
inc
and
test
jge
insl
xchg
repz
insl
iret
leave
in
roll
sbb
scas
out
int3
sbb
movsl
iret
in
sub
movsl
pop
insb
cmp
cs
dec
stc
repnz
and
pop
jmp
jecxz
nop
lret
idivl
xchg
push
inc
fisubrl
lcall
outsb
xchg
mov
xchg
iret
sahf
outsb
sbb
xor
les
dec
dec
pop
int3
fnsetpm(287
jns
sbb
inc
inc
out
enter
inc
xchg
cmp
mov
jb
xchg
mov
outsl
imul
clc
adc
sbbb
mov
lret
mov
xor
pushf
loopne
leave
and
mov
jmp
dec
cltd
loop
jnp
mov
mov
or
repz
xchg
mov
out
orb
test
mov
orl
orl
add
in
add
stc
mov
pop
lret
adc
or
ja
int3
andb
cmpsb
rcrb
not
xchg
xchg
repz
fdivr
jne
stc
repz
cmpsl
inc
or
aam
sarl
ja
lods
mov
sahf
cmp
lcall
push
fsubs
out
or
and
inc
mov
or
daa
and
dec
or
ds
xor
xorps
xchg
mov
sub
push
ror
xor
sbb
pushf
xlat
aad
adc
outsb
adc
mov
add
aaa
idivb
hlt
lock
imul
dec
or
dec
out
loop
popf
inc
sub
dec
xor
inc
pop
fisttpll
or
mov
roll
ret
xchg
scas
test
dec
test
cmp
xchg
jge
in
dec
sub
lahf
lret
popf
pop
or
fmuls
hlt
pop
or
mov
sarl
cmp
aas
repz
daa
jl
dec
xor
lea
fdivrl
fldl
imul
jae
mov
inc
push
cs
jle
dec
add
enter
std
orb
mov
data16
flds
adc
ret
xlat
insb
pop
inc
ds
cmp
int3
dec
mov
jne
lahf
mov
xchg
lret
jecxz
jb
push
mov
push
js
jecxz
std
ljmp
stos
dec
popf
movsl
cmp
add
dec
icebp
rclb
mov
mov
mov
adc
jno
popa
fcomps
push
add
les
fs
aam
push
sbb
pop
xchg
out
push
daa
mov
mov
mov
jge
nop
sbb
inc
fadd
push
in
sub
cmc
leave
icebp
es
mov
jnp
or
xchg
movsl
add
adc
push
xor
dec
in
ds
xor
mov
cmp
mov
inc
cli
xchg
jge
lods
scas
sub
cmpsb
or
lcall
pusha
or
add
push
cmp
or
arpl
mov
jg
popf
shrl
ret
or
adc
addr16
pusha
imul
mov
lahf
dec
jnp
lock
faddl
adc
dec
jl
push
push
je
gs
je
sub
cli
mov
clc
jb
xor
sub
jo
rorb
clc
rcrb
out
ss
push
leave
ret
sti
fisttpll
pop
xchg
cmp
and
std
mov
mov
test
pop
mov
and
xchg
dec
dec
divb
sbb
sbbl
lods
push
jmp
inc
nop
ret
int3
jnp
or
xorl
bound
or
mov
add
gs
xchg
lock
xor
jg
add
and
mov
or
mov
mov
lcall
mov
movsb
xor
rcrl
std
mov
aas
addr16
jecxz
sub
lods
loopne
jmp
mov
xor
arpl
adc
cs
sub
stos
inc
dec
in
sub
dec
jne
xor
decl
and
push
dec
loop
mov
inc
sub
imull
push
xchg
cld
js
mov
cmp
jmp
jmp
aad
int3
data16
pop
sahf
push
dec
int
add
dec
shll
push
cmp
or
mov
rcll
cmpl
test
push
mov
inc
loop
cmc
xchg
aam
mov
mov
das
cwtl
jmp
adc
xlat
mov
cmp
push
fcmovb
insb
mov
insb
sti
jmp
std
out
cmp
push
das
scas
dec
in
mov
ss
lods
pop
mov
xor
lahf
push
push
fcoml
daa
xchg
mov
lods
out
lock
insl
and
aam
sar
in
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
leave
in
lret
int
cmp
push
or
and
dec
in
adc
lea
pop
adc
ret
lret
mov
or
pop
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
testl
mov
xchg
mov
je
and
inc
add
jae
popa
pop
push
pop
inc
divl
movl
ja
add
inc
add
sbb
arpl
adc
inc
mull
out
xlat
cmp
xorl
in
inc
inc
daa
dec
and
and
or
inc
xorl
mov
iret
or
mov
roll
mov
push
inc
sbb
sub
cmp
mov
cmpsl
pop
imul
jae
jnp
adc
daa
mov
or
mov
pop
jne
dec
leave
mov
ret
push
lods
arpl
shlb
repz
mov
sub
jae
es
pushf
out
mov
bound
sarb
dec
xlat
xchg
jbe
outsl
xor
aam
add
cmpsl
call
jae
push
in
cmpb
pushf
mov
pusha
xor
and
in
sub
pushf
rclb
xor
out
xlat
pop
mov
or
in
add
aaa
pop
daa
fwait
pop
push
pop
sub
xchg
rolb
mov
mov
add
add
sbb
pop
jb
ja
xor
xchg
sarb
add
jbe
shlb
das
jle
insl
sub
ret
mov
jecxz
roll
and
inc
add
jae
arpl
push
pop
inc
divl
movl
ja
and
inc
add
jae
arpl
push
pop
inc
divl
mov
lock
push
addb
into
popa
pop
mov
in
xchg
test
lock
inc
test
adc
or
addr16
nop
inc
mov
jl
or
push
inc
xchg
ret
mov
sub
jle
dec
xor
push
sbb
cmc
lret
xchg
loopne
inc
mov
add
daa
add
shll
mov
mulb
scas
call
loope
iret
dec
mov
jge
jb
jno
pop
lea
push
test
mov
pop
add
jnp
sbb
xchg
adc
adc
js,pn
push
sbb
das
fldenv
jmp
fwait
jns
pop
jg
xor
mov
insl
pushf
dec
shl
xchg
aaa
mov
pop
movsl
mov
std
jbe
xchg
rorb
daa
or
js
adc
sub
ljmp
add
icebp
fldl
pop
mov
popf
push
add
sbb
mov
ljmp
push
inc
jl
sbb
xchg
sbb
mov
xchg
sub
lret
lea
push
xchg
lret
xor
jl
pop
sub
cli
pop
cmp
adc
leave
lahf
fldcw
insl
dec
pop
fistl
dec
roll
mov
jae
add
add
mov
mov
mov
cmp
fs
inc
sbb
aam
xchg
and
cltd
or
xchg
mov
adc
test
or
in
push
loop
jp
mov
mov
push
aas
daa
jb
mov
xor
icebp
mov
repnz
inc
aam
cpuid
out
and
gs
outsb
cmp
jns
or
stc
ss
movsl
shl
stc
adc
jp
stos
arpl
fwait
jo
dec
mov
movsl
cli
push
out
lret
cmp
mov
push
das
pop
mov
cltd
or
or
repnz
pop
sbb
dec
stos
add
lret
mov
sbb
mov
and
mov
es
les
ret
xchg
pop
dec
or
pop
outsb
sbb
dec
js
in
adc
cmp
je
ljmp
mov
cli
sub
fdivrs
rcrb
mov
xor
mov
idivb
fs
push
jb
mov
lds
dec
js
mov
outsl
imul
or
push
out
ss
lahf
and
add
xchg
xchg
movsl
jmp
scas
inc
cltd
insl
mov
mul
jno
adc
jg
es
hlt
loop
das
repz
ss
xor
jmp
push
adc
adc
stos
clc
xchg
adcb
dec
mov
je
mov
add
cmpsl
mov
xor
loopne
xor
xor
out
popa
jne
push
mov
je
push
sub
std
loop
aad
pop
mov
or
adc
inc
pop
cmp
ret
xlat
push
cmc
mov
gs
xor
sub
adc
pop
arpl
jg
fcmovbe
jo
sbb
dec
and
sbb
cmc
int3
and
addr16
test
and
pop
add
andb
js
xor
repz
mov
dec
and
pause
jl
mov
addr16
mov
pop
xor
je
in
test
xor
cmp
and
adc
ljmp
mov
dec
mov
and
sub
icebp
movsb
loopne
shlb
insb
adc
pusha
pop
push
push
leave
rorb
mov
in
pop
or
push
pop
sbb
and
jo
nop
xor
mov
mov
in
dec
js
inc
push
subb
and
xchg
pop
les
cltd
inc
mov
sub
xchg
push
fs
stc
mov
into
xchg
jecxz
fimull
repnz
cwtl
mov
or
negl
xchg
mov
std
data16
fsubrl
iret
sbb
dec
pop
pop
ret
or
iret
popf
mov
inc
push
mov
fwait
jle
add
pop
test
movb
adc
gs
addr16
inc
out
scas
mov
sub
mov
dec
adcl
jo
aam
in
ret
fadds
rorb
xor
adc
mov
and
xor
xor
cs
xchg
xchg
inc
fs
cld
cmpsl
sub
inc
sub
movsb
loopne
faddl
lock
and
mov
inc
arpl
aas
xchg
imul
ret
inc
xor
mov
fnstenv
lock
mov
xor
inc
mov
movsl
call
jle
xor
das
mov
pusha
gs
push
dec
dec
dec
packuswb
test
in
cmp
addb
adc
adc
shl
ja
mov
mov
lahf
pop
dec
pop
addb
popf
xor
aas
push
add
rolb
mov
xchg
xorl
in
pop
push
dec
imull
pushf
lods
xchg
rcrl
repz
mov
shrl
fs
fwait
pop
cmp
mov
cmovno
pop
cmp
dec
push
sub
in
fstl
imul
inc
decl
or
dec
aaa
dec
ljmp
fisttps
sub
jl
xchg
into
rolb
pop
and
aam
outsl
jg
lods
sub
mov
xor
mov
repnz
dec
push
adc
rolb
push
push
pop
mov
xchg
pop
or
and
xchg
rolb
mov
popf
dec
mov
sub
int
std
sub
mov
sbb
add
sarl
mov
mov
push
mov
cmp
xchg
xchg
in
adc
js
push
sbb
and
ficomps
loope
add
jg
sub
mull
pop
jl
rcr
xchg
mov
insl
and
add
sub
iret
pop
adc
fs
leave
movsl
dec
sahf
mov
std
cmp
cli
push
test
cmpsl
and
mov
aad
add
xchg
rorl
and
test
fidivrs
push
dec
xor
jno
or
out
mov
inc
in
mov
xor
sbb
outsb
mov
sbb
movsl
mov
dec
into
loopne
test
pop
aas
pop
fisubs
shll
fld
mov
xchg
rcr
pop
pushf
insl
cmp
add
pop
push
mul
pop
jb
lret
int
rcrb
mov
rolb
sub
insl
pop
pop
out
pop
or
int
cwtl
sub
add
mov
gs
movsb
push
xor
cmp
xor
sbb
shlb
scas
sub
loope
xchg
test
call
sub
pushf
loop
xor
aam
push
push
lahf
cs
inc
mov
mov
call
shlb
push
lock
fwait
mov
lret
ljmp
fdivs
mov
xor
imul
add
imul
repnz
ret
outsb
enter
sbb
add
jns
xchg
jge
cmp
jmp
dec
fcompl
call
scas
jo
loop
fistl
cmp
stos
mov
stos
mov
ret
xor
mov
jle
mov
add
ds
imul
outsl
js
jbe
xchg
fwait
insb
jg
adc
stos
clc
clc
popa
jbe
addr16
fsubrl
add
std
mov
aam
aam
sbb
fwait
cvttps2pi
arpl
movsl
dec
inc
add
pusha
add
add
shr
add
out
cs
dec
pop
pop
add
shrb
outsb
mov
fcoms
cli
cmp
fs
push
stos
adc
es
insl
adc
jmp
mov
mov
xor
shrl
pop
mov
mov
sahf
add
mov
cltd
push
push
into
inc
lods
and
push
gs
xor
push
jmp
mov
fisttps
inc
js
sub
addr16
mov
repz
imul
stc
push
negb
dec
pop
ljmp
xchg
pop
in
insl
lods
bound
add
call
stos
add
jne
enter
lock
outsb
stos
iret
movsl
dec
add
pop
push
mov
sub
sub
dec
and
add
add
xor
sub
lods
jo
loop
fcomps
jne
xor
pusha
clc
xlat
call
imul
sarl
and
movsb
push
cmp
fs
sbb
dec
inc
call
cmpsb
in
sbb
mov
inc
lods
hlt
jnp
sub
dec
bound
mov
sub
cmp
movsl
xchg
sub
mov
out
stc
repz
mov
cli
sub
lret
rol
lds
fmulp
fcoml
rcr
dec
mov
fcomp
pop
icebp
test
push
or
mov
sub
or
nop
xlat
sub
outsb
in
testl
call
jo
imul
test
xchg
pop
pop
add
mov
movsb
lahf
pop
pusha
repz
mov
outsl
int3
call
sub
inc
in
mov
in
test
das
rolb
loop
ja
neg
imul
sbbl
mov
ret
sub
daa
and
pushf
sbbb
jl
fiaddl
mov
repz
mov
adc
stos
pop
outsl
dec
cwtl
data16
push
pop
paddusb
mov
dec
dec
mov
cltd
js
int
mov
cmpsl
sbb
jg
fisttpl
pop
cmp
mov
cmp
add
push
add
jge
aad
xchg
loopne
hlt
and
inc
xchg
cli
imul
inc
sbb
gs
adc
mov
push
push
add
out
add
flds
dec
test
pop
jns
cs
into
cmc
ja
jmp
push
push
jmp
mov
rolb
ret
into
sahf
js
mov
sbb
mov
mov
cmp
sub
push
in
int
dec
jecxz
xor
sti
mov
ljmp
sbb
cmpsb
pop
or
pop
push
push
or
hlt
shll
xor
jbe
inc
cmp
fldt
lea
rorb
cwtl
mov
and
mov
add
sub
add
adcl
and
push
adc
leave
dec
call
mov
adc
cmp
dec
push
out
pop
jns
push
in
shrb
fisttps
mov
lock
fimuls
loop
jmp
lods
call
cmpsb
aam
xchg
out
rcll
jp
rclb
test
and
dec
adc
jg
adc
in
pop
dec
adc
adc
cli
aam
xor
pop
into
or
sbbl
imul
lret
dec
push
out
daa
or
pop
push
xchg
rcr
mov
mul
aam
test
out
cmp
fmul
or
ret
sbb
aaa
ret
out
stc
sub
fchs
ror
push
mov
test
dec
and
sbb
pop
nop
pusha
jb
lods
push
nop
jge
aad
ret
fwait
sub
mov
movsl
inc
lock
push
inc
xchg
mov
inc
xchg
bswap
pop
adc
jmp
pushf
fiaddl
loope
js
jnp
das
sarb
pop
xorl
inc
sub
out
and
and
push
xchg
out
and
pop
mov
push
test
dec
jns
jl
jb
lods
inc
int3
out
adcb
loopne
jmp
es
dec
and
inc
ret
and
jge
mov
xchg
int3
fisubl
xchg
mov
jle
int3
mov
je
outsb
xor
outsb
stc
sub
and
shll
adc
test
xorb
mov
in
xor
cmp
add
mov
aas
cli
dec
outsl
sub
sbb
add
dec
inc
dec
push
jg
mov
fistl
add
stos
xchg
dec
jp
sub
pushf
push
bnd
or
jmp
mov
xlat
inc
push
or
cmp
push
shlb
lea
xor
pop
push
sub
push
aam
jmp
ret
adc
outsb
cwtl
adc
mov
sbb
mov
cs
inc
mov
lods
add
cltd
js
idiv
cltd
mov
mov
pop
adc
out
iret
inc
sbb
mov
add
lea
sbb
cwtl
cmp
movsb
mov
int3
push
or
mov
push
arpl
sbb
jns
mov
jbe
pop
xchg
loope
cmc
mov
out
adc
test
dec
pop
in
test
adc
fistl
loope
sub
fadd
pop
xorb
outsb
sbb
mov
mov
movsb
adc
and
and
and
ret
cli
push
dec
sub
or
fiadds
lret
lods
mov
ja
test
and
dec
dec
sub
mov
add
jge
shlb
pushf
fnstsw
aam
loope
popf
insb
cmp
clc
adc
cmpsb
jmp
test
enter
cmpsl
inc
mov
lret
repz
inc
outsb
and
mov
jg
inc
pop
loope
push
mov
incl
mul
push
mull
bound
negb
dec
fisubrl
lds
jb
add
imul
les
xchg
xor
je
out
lods
int
and
in
inc
test
xor
ret
cs
jp
lahf
jnp
xor
or
xor
xchg
push
shl
mov
cs
aaa
cmp
push
pop
imulb
cmc
mov
sbb
push
sub
sub
daa
push
int
fnclex
in
and
adc
fisubrs
push
dec
xchg
adc
cwtl
push
mov
sbb
int
jno
roll
fs
jle
cmc
cli
mov
enter
psubb
icebp
mov
jmp
mov
xchg
es
and
adc
scas
xchg
lea
inc
in
aaa
sarl
std
mov
inc
gs
daa
stc
mov
fcoms
and
sub
or
xor
mov
xor
dec
daa
jecxz
sbb
nop
mov
outsl
mov
pop
fidivrl
lods
push
fbstp
mov
cwtl
dec
mov
icebp
out
dec
mov
hlt
pop
dec
stos
cmpsb
cmc
in
mov
jmp
dec
ja
add
repz
jne
test
and
in
sbb
cltd
in
xchg
testb
pop
push
imul
scas
dec
and
icebp
cmc
fstpt
push
pusha
pop
fidivrl
imul
xchg
jp
and
loopne
inc
addr16
sbb
push
xchg
icebp
sub
mov
cbtw
xchg
inc
idivb
mov
hlt
ret
cmpsl
pop
add
adc
aaa
add
lret
sbb
add
pop
jbe
sbb
pop
mov
add
fsubrs
inc
mov
fwait
jecxz
bound
inc
xchg
aas
shlb
mov
sub
std
mov
mov
cltd
repz
mov
shr
xchg
loop
fsubs
daa
xchg
jo
xor
addr16
mov
stc
xchg
mov
pop
out
cmp
mov
pop
dec
loopne
fcmovnbe
aas
mov
adcl
test
add
out
push
and
movsl
mov
in
mov
push
or
mov
dec
icebp
jmp
push
push
stos
call
or
mov
lahf
mov
or
in
cmp
shr
clc
cmp
and
cmp
sysenter
pusha
pusha
aad
in
push
xchg
addr16
dec
xor
mov
and
push
dec
addl
fucomp
mov
shl
sbb
mov
push
mov
add
js
pop
lahf
push
or
popf
mov
sub
or
inc
mov
movsb
dec
faddl
lret
cld
adc
jp
jle
ja
mov
mov
xchg
sbb
in
jns
adc
xorb
or
xor
insb
xchg
mov
test
or
xchg
mov
fwait
movsl
push
rcll
add
mov
add
dec
xchg
rorb
rcll
mov
mov
inc
and
les
jp
mov
or
fsubrl
jmp
mov
jae
xchg
push
dec
out
push
adc
xchg
pop
ret
shl
cmp
lcall
mov
inc
movsl
mov
push
mov
sub
jmp
popf
outsb
out
cmpsb
mov
push
cmp
lods
lock
mov
es
fwait
test
fadds
sbb
push
push
add
jle
test
movsl
push
push
cmp
or
jne
test
pop
scas
xchg
adc
jb
mov
cmp
dec
cmp
mov
movsl
and
push
push
push
ja
push
adc
jmp
movsl
test
iret
outsl
loop
pushf
mov
xor
dec
std
pop
pop
out
xchg
xlat
pop
in
dec
stos
call
hlt
cmp
outsb
call
ds
lcall
out
rcl
xor
clc
stos
mov
arpl
sbbb
push
pop
sbb
push
insb
popf
ret
mov
jo
je
cwtl
iret
and
sbb
mov
mov
mov
stc
dec
and
andnps
mov
cmp
push
mov
sti
jns
stos
sub
jmp
adc
adc
andl
mov
xchg
push
repz
pop
xchg
or
movsl
xor
inc
push
out
pop
lret
cmc
out
sahf
xlat
aaa
or
loopne
and
jge
test
stos
or
pop
les
adc
push
dec
out
fistpl
jle
sbb
jo
jno
add
enter
sahf
cmp
mov
pop
aad
jbe
sub
adc
das
push
xchg
jnp
out
sub
pop
and
movsl
fistl
inc
lds
popa
xchg
mov
jp
push
pop
or
inc
test
aas
lret
js
ficoms
dec
lcall
enter
jg
push
xor
nop
aas
or
mulb
sub
jl
rol
adc
mov
dec
or
and
dec
jg
push
mov
cmp
mov
mov
jnp
inc
sbb
pop
cmp
xchg
incl
mov
jae
xchg
fwait
sahf
mov
fs
subl
clc
and
mov
adc
dec
cmp
enter
clc
sti
sbb
loope
mov
push
sub
and
or
adc
iret
mov
lock
mov
movsl
hlt
cmp
xchg
add
pushw
xchg
xchg
jns
arpl
xchg
jb
sub
loopne
jnp
or
sbb
add
arpl
ret
cmpb
fcoml
sub
sub
pop
jp
sbb
ret
popf
enter
into
ss
sti
loop
les
jb
cmpsl
sbb
into
xchg
int
fsts
xchg
aad
shl
pop
aam
or
int3
mov
or
adc
pusha
mov
push
push
lcall
lds
xchg
stos
out
sub
loop
adc
out
repz
sahf
hlt
cmpsl
outsl
into
add
cmpb
imul
popa
or
and
jg
aas
or
cmpsl
and
jae
sub
stos
ja
subl
std
dec
push
fimull
lds
pop
or
or
xchg
loop
push
gs
std
rcl
lret
or
inc
test
adc
pop
pop
pop
loop
sub
stos
jno
cmp
mov
cmp
sbb
jp
mov
sti
push
sub
add
stos
jnp
cmp
mov
jge
xor
scas
icebp
xor
mov
pop
and
testb
pop
mov
idivb
stos
test
push
or
inc
das
in
push
cmp
mov
insl
pslld
je
xchg
aas
cltd
scas
sub
icebp
push
pusha
ljmp
mov
aaa
push
andb
imul
xor
test
mov
sub
add
xchg
adc
jge
adc
push
mov
insb
imul
sbb
scas
adc
inc
xor
sbb
das
mov
jo
inc
ja
mov
bound
xlat
inc
faddl
adcl
cltd
xor
sbb
gs
dec
js
gs
jne
cltd
das
fdivrp
push
add
xor
shrb
adc
insl
lahf
pop
cmpsl
and
sub
xchg
jecxz
movsb
call
pop
adc
or
cltd
repnz
insb
and
jnp
dec
insb
or
sub
xchg
mov
out
jge
pusha
lds
or
xor
ljmp
in
sub
and
daa
inc
push
inc
lods
mov
and
mov
pop
mov
xor
scas
or
out
add
push
sbb
loope
std
xchg
xchg
sub
cmp
mov
test
mov
mov
sub
mov
push
cmc
pop
stos
jg
push
repnz
dec
pop
xchg
jo
mov
jnp
adc
test
adc
push
jg
cltd
dec
scas
xor
in
decb
inc
pop
inc
aas
lret
out
cmp
stos
outsl
mov
push
cmp
outsl
add
imul
call
repz
jecxz
roll
and
inc
add
jae
arpl
push
pop
inc
divl
movl
ja
and
inc
add
jae
arpl
push
pop
inc
divl
movl
jbe
and
inc
add
jae
arpl
jae
inc
divl
movl
mov
cwtl
mov
adc
inc
sti
scas
pushf
out
lods
mov
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
ror
pop
decl
aaa
lret
inc
loope
in
fs
test
jg
outsl
mov
aas
mov
jno
imul
cmp
or
idivl
outsl
mov
aas
mov
mov
decl
xor
popa
test
mov
dec
cmc
imul
cli
das
cmp
dec
mov
mov
insb
dec
sbb
inc
ljmp
sbb
xlat
fdivl
popa
out
rclb
addr16
jo
mov
cmpsl
jge
adc
es
outsb
cmp
cmp
lret
pop
or
xorl
xor
mov
jp
scas
inc
pop
and
push
cs
adc
and
sbb
cmp
or
in
insb
mov
nop
xor
stos
pop
mov
jbe
cld
inc
xchg
xor
lahf
stos
jo
inc
inc
stc
cmp
mov
pop
dec
xlat
test
jg
pop
imul
mov
rorl
mov
leave
outsl
cmp
test
das
dec
fildll
pop
jmp
sbb
jnp
add
outsl
fstps
mov
cltd
aas
in
imul
mov
pop
into
or
push
mov
test
shlb
jbe
mov
loope
push
incl
mov
rcrl
and
int3
pusha
in
dec
enter
pop
mov
jl
sub
stc
pop
jmp
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
lods
or
dec
inc
shll
adc
lcall
mov
xchg
and
xchg
mov
and
pop
rolb
repnz
push
pop
add
out
lock
adc
mov
and
aaa
xor
fadds
dec
inc
dec
adc
cmp
fwait
sti
mov
enter
push
xchg
stc
aad
push
xor
mov
ret
fcompl
jecxz
mov
xchg
xorl
stos
xchg
in
push
sub
or
mov
scas
cmp
movsl
mov
sub
pop
fdivrs
xchg
ss
add
xchg
ja
push
pop
imulb
fwait
andl
ss
mov
je
jae
push
xchg
and
fisttpll
xor
pop
add
sub
ja
dec
dec
jbe
jmp
push
pusha
xchg
in
or
notb
ljmp
mov
mov
es
mov
stos
clc
mov
sbb
test
imul
xor
mov
repnz
les
mov
mov
sbb
fninit
test
mov
cmpsb
mov
mov
lahf
and
add
js
mov
loope
ss
cmc
aas
movsl
cwtl
or
loopne
mov
into
dec
enter
push
lret
push
es
jnp
jl
inc
lea
fcomps
jns
mov
mov
adc
sub
outsl
movsl
or
xchg
mov
test
inc
pusha
pop
jg
fstpt
je
js
cmpsl
add
fcomp
xor
xor
aaa
jge
mov
mov
aam
xchg
mov
push
or
movsl
mov
sahf
xchg
and
jns
sbb
dec
mov
ret
push
popf
xchg
or
push
xor
mov
jno
adc
mov
jno
mov
xor
adc
mull
and
out
xchg
iret
mov
dec
test
add
mov
dec
mov
cmp
arpl
lock
outsl
popa
mov
jae
daa
ret
cltd
push
or
add
rclb
lahf
mov
and
and
fldt
cmp
jo
pop
out
in
in
ficoml
outsl
and
sub
xchg
adc
mov
sar
adc
scas
jp
jbe
fildl
mov
les
lcall
test
loopne
mov
fnstsw
lods
in
jae
in
test
push
testb
push
mov
adc
in
gs
cld
mov
and
pop
mov
ljmp
inc
and
fdiv
ljmp
movsb
xor
insl
pop
adc
cmp
jmp
mul
shlb
jg
or
pushf
mov
mov
mov
mov
ffreep
scas
push
sarl
pop
nop
clc
ficoml
out
sub
jae
repnz
enter
jne
xchg
cwtl
test
mov
insb
inc
test
aam
push
mov
outsb
dec
lea
stos
enter
mov
es
scas
stos
jmp
pop
fsubrs
push
clc
pop
add
or
mov
out
inc
cwtl
mov
stos
ss
xor
xchg
andl
lretw
xchg
aad
bound
repnz
in
outsl
ret
stc
adc
xchg
jns
rcrb
push
adc
mov
xchg
pop
mov
cmp
jnp
xor
mov
push
sahf
adc
sar
mov
popa
adc
ds
mov
sub
jl
jno
popf
mov
xor
push
and
dec
inc
xchg
repnz
lods
mov
xorb
push
clc
add
jne
inc
dec
xchg
jp
xchg
sub
adc
fisubs
sub
mov
and
mov
popf
xor
mov
adc
lds
fidivl
add
sbb
lock
mov
xsaveopt
call
lret
jnp
push
sbb
aam
xchg
inc
orl
addr16
xchg
sbb
insb
mov
hlt
xchg
and
stos
push
push
loope
rcll
repz
push
subb
call
mov
inc
add
xchg
popa
popf
rclb
xchg
lods
hlt
out
fnstenv
ret
mov
fcoms
push
lds
imul
repz
lock
lock
pop
mov
sub
push
rorl
xchg
xor
push
mov
subl
arpl
cmp
out
test
arpl
jg
push
orb
cmpsb
dec
repz
jnp,pn
pop
lcall
lcall
mov
jle
lahf
cmpsl
filds
and
mov
and
cmp
inc
fwait
mov
fstpl
loop
ds
imul
fcomps
test
inc
xchg
and
lcall
enter
fcomp
mov
dec
sahf
mov
in
pcmpgtb
pop
cmp
test
or
add
in
push
sub
adc
test
iret
mov
cmp
es
pop
outsb
out
push
lret
out
inc
inc
hlt
ret
xlat
negb
dec
les
test
add
mov
data16
push
jae
jns
lahf
dec
mov
xor
jo
pushf
cwtl
rcr
push
dec
rcrb
xor
dec
or
jp
out
inc
xor
mov
ja
lds
cld
lea
xor
stos
fiadds
sub
inc
cmc
hlt
add
jb
scas
mov
mov
cmp
mov
lods
and
push
outsl
scas
jb
ljmp
and
inc
mov
daa
jle
bound
call
push
jo
xchg
mov
dec
test
call
jmp
add
popa
push
xchg
xchg
in
sarl
pop
pop
push
aam
shrb
ret
lods
fldl
pushf
mov
jle
jo
xchg
sbb
cs
jnp
es
mov
xchg
cmp
xlat
jbe
xchg
rorl
outsb
cld
jle
icebp
ret
lock
xchg
aas
inc
call
icebp
outsl
mov
punpckldq
dec
out
push
imul
scas
xlat
mov
mov
cmp
out
and
ljmp
mov
pop
iret
xor
test
jb
push
pop
mov
pop
nop
cld
aaa
fidivrl
testl
shr
inc
dec
es
xchg
xchg
ja
fcmovb
mov
and
jo
test
xchg
mov
outsb
lds
mov
mov
mov
fnstenv
nop
in
inc
cmpsl
or
insl
sbb
lods
fwait
mulb
adc
mov
daa
or
decb
fsubp
aaa
cmp
jp
idivb
adc
xchg
out
into
sbb
outsb
loopne
pop
xor
push
jp
fsubrl
adc
test
out
out
popf
je
test
lahf
mov
mov
insb
enter
in
or
push
sub
xchg
les
mov
xchg
ljmp
xchg
cmpsl
mov
enter
cmc
adc
cltd
es
and
lea
leave
jno
dec
add
sub
add
cwtl
sbb
test
xchg
loopne
dec
xchg
clc
dec
mov
push
out
xchg
insl
jl
into
push
add
loopne
mov
ss
inc
das
mov
je
lds
lods
iret
out
les
sbb
sub
push
out
aam
mov
js
call
gs
or
shll
or
sub
add
dec
rorb
push
jle
ss
dec
mov
cmp
add
adc
adc
push
in
fcompl
mov
lods
push
adc
loop
out
add
in
mov
and
cmp
dec
mov
shrb
lods
inc
inc
cmp
mov
fcmovu
aaa
jno
ljmp
cmp
fistpl
mov
push
mov
loop
arpl
shlb
cmp
repz
stos
jns
mov
fs
pushf
xor
inc
mov
movsb
add
jecxz
clc
mov
jecxz
fcomip
jno
jge
sub
pop
mov
enter
mov
dec
or
rol
lods
dec
repz
andl
pop
xchg
mov
shr
mov
imul
pop
roll
cbtw
and
push
dec
dec
sub
dec
out
es
adc
mov
jnp
popf
jb
pop
in
roll
imul
xchg
lcall
inc
pop
insb
fbstp
popf
hlt
cmp
jmp
dec
shl
xor
aad
pop
leave
mov
xchg
stc
push
hlt
ret
dec
fldl
xchg
fs
shrb
mov
arpl
lock
jnp
scas
lea
mov
push
push
div
aad
ds
push
ficomps
push
addl
pop
push
xorl
jae
dec
and
adc
stc
mov
jns
pop
out
add
push
dec
xchg
dec
int
push
inc
test
inc
fstpt
ljmp
push
and
loope
in
orps
out
push
add
cmpsb
into
inc
hlt
dec
inc
int
aad
pop
cmp
adc
xor
test
jp
push
cmp
adc
sbb
cmp
rcll
es
jge
mov
pop
cmp
and
and
cmp
pop
xor
daa
cwtl
and
aad
dec
jmp
ljmp
cmp
push
sbb
mov
mov
popf
adc
lea
sbb
popa
daa
rcrb
ss
lret
in
xor
xor
cltd
fnsetpm(287
xchg
insl
sub
cmpsl
jns
mov
lds
or
fmuls
pop
nop
sub
inc
fdivrp
adcl
ret
mov
les
or
out
aam
mov
xchg
outsl
or
dec
dec
lock
movsb
and
leave
pop
cmp
mov
push
add
or
imul
arpl
add
inc
or
dec
sahf
movsl
aam
dec
mov
fildl
or
jmp
or
out
popa
mov
je
or
or
xor
out
sbb
sub
mov
jge
std
dec
or
lcall
inc
sub
jo
sub
mov
pop
or
inc
mov
repnz
inc
sbb
icebp
add
mov
cmp
pop
fldenv
aad
xor
out
sub
add
testb
insb
in
dec
lods
std
jle
fwait
movsl
cmp
daa
inc
mov
in
jne
mov
icebp
mov
mov
aad
fwait
xor
pop
out
mov
pusha
mov
inc
mov
fsubl
lcall
push
xchg
and
xor
fisubrl
dec
iret
cld
imul
and
cld
outsl
fyl2x
add
pop
push
cmp
mov
adcl
mov
movsl
sti
mov
mov
jecxz
sub
jmp
pop
xlat
loop
daa
sbb
mov
xchg
test
or
push
sub
arpl
add
mov
test
push
mov
adc
adcl
push
jp
imul
fisttps
xor
repz
mov
adc
cmp
mov
movsl
imul
mov
int
mov
dec
notl
or
cmp
aaa
mov
dec
es
out
sub
in
cmp
lock
xchg
xchg
lret
mov
aaa
jmp
mov
cwtl
jle
loop
lods
pop
and
push
test
lods
and
ljmp
lods
and
lcall
insl
mov
add
ja
nop
pusha
cmp
mov
or
inc
pop
jbe
or
das
cmp
jecxz
xchg
fmull
icebp
jns
adc
inc
stos
sub
test
js
pop
aas
jge
push
loope
cld
inc
outsb
fs
sub
mov
mov
fdivl
or
jl
orb
mov
add
data16
ss
push
mov
pop
int
xchg
mov
dec
cld
sub
leave
mov
mov
push
inc
xchg
ds
jmp
psubusw
dec
cs
xor
mov
xchg
cmpsb
add
test
inc
mov
cltd
push
into
xor
in
repnz
cmp
shrl
les
out
outsl
xchg
adc
cmp
add
std
sbb
pop
enter
pop
xor
push
pop
iret
jl
clc
repz
xor
pop
call
adc
pusha
sub
dec
mov
cmpsl
or
sub
mov
ja
insb
cli
aaa
mov
pop
das
rorl
push
icebp
cld
pop
mov
pop
xchg
inc
sti
or
xchg
inc
std
mov
fldenv
dec
stos
filds
aas
and
movsl
mov
lods
dec
insl
dec
in
sarb
push
mov
stc
push
push
mull
out
add
cmp
push
negb
sub
and
and
dec
shlb
lock
mov
jne
xchg
in
out
cmpsb
xchg
and
jg
fisubs
pop
repnz
int3
xor
arpl
mov
iret
in
je
mov
subb
imul
mov
fnstenv
pusha
and
pop
mov
sbb
mov
sbb
adc
gs
sbb
in
call
lds
ljmp
push
loopne
daa
in
jecxz,pt
add
jmp
ljmp
xchg
sbb
jle
pushf
cs
mov
movb
mov
push
jp
push
loopne
loopne
outsb
adc
fsub
fwait
jge
xlat
add
jmp
dec
mov
add
mov
adc
push
cli
adcb
pop
hlt
ds
sarl
and
daa
pop
push
les
mov
mov
pop
sahf
sbb
push
dec
into
and
in
xlat
loopne
in
sub
adc
dec
push
sub
fisttps
ret
xchg
lcall
inc
sub
jmp
pop
mov
jno
fucomp
and
xchg
icebp
mov
mov
jle
daa
aad
sbb
push
inc
mov
mov
lds
push
sub
mov
sahf
push
cmp
sbb
sub
in
or
add
and
shll
outsl
daa
out
sub
jo
stos
scas
popf
lods
add
and
enter
testl
adc
insl
xchg
fstpl
andb
jg
push
mov
aaa
out
pop
pop
das
ljmp
stos
mov
clc
addr16
jmp
cmp
clc
outsb
xchg
xchg
pop
dec
pop
scas
mov
cmp
mov
aad
cmp
jmp
jns
outsl
dec
adc
add
adc
std
arpl
ffreep
in
in
aaa
xor
jb
mov
pop
lret
js
adc
adc
push
push
cmp
inc
push
sbb
stos
cld
aaa
ret
mov
notb
cmp
imul
inc
mov
or
insb
pop
cmc
adc
rclb
aad
push
pushf
push
mov
push
bound
cli
shll
outsl
mov
int
cwtl
adc
outsl
mov
xchg
and
jmp
xor
outsl
pusha
pop
add
and
pop
cmc
sub
les
push
xor
loope
push
enter
pop
cmp
data16
jb
sub
mov
loopne
mov
pushf
mov
fcmovnbe
movsb
mov
xor
data16
xor
shr
lods
loopne
jnp
pop
out
add
stc
and
leave
jmp
dec
jl
pop
outsl
out
mov
xor
in
jp
test
or
jb
sub
add
mov
push
addb
xchg
pop
shlb
stos
cmp
xor
xor
cld
fwait
cld
xchg
mov
mov
xor
cmp
pop
orl
ss
or
arpl
pop
sahf
repnz
mov
sub
insb
dec
fwait
sbb
cmp
lcall
push
cld
cmp
pop
imul
pop
enter
pop
imul
and
push
imul
fimull
xlat
fisttpll
xchg
sub
cmpsb
xchg
add
xor
jle
fdiv
aad
out
mov
es
cmp
adc
adc
jle
xor
popa
cmpsb
jle
inc
aad
jnp
in
xchg
mov
nop
mov
and
lcall
adc
jg
sbb
mov
leave
xor
mov
sarl
push
js
sbb
lods
ja
in
aad
mov
in
ljmp
mul
test
fdivs
test
cltd
in
xchg
sub
push
scas
cmc
popa
cmp
adc
mov
jecxz
dec
push
mov
pop
rorl
rclb
push
mov
clc
xchg
aaa
push
add
inc
jge
fbld
popf
mov
fsubr
mov
push
or
xchg
xor
and
push
mull
and
cld
outsb
xchg
out
xchg
cltd
push
stos
and
xchg
pop
mov
cmp
adc
lds
adc
fsubr
imul
jno
aad
jl
push
imul
push
push
dec
and
or
arpl
outsb
sub
sahf
xchg
adc
out
push
shll
jno
leave
xor
xor
pushf
test
iret
idivl
jno
xor
inc
fisubrl
hlt
in
repz
out
inc
jp
jecxz
dec
inc
push
shl
nop
and
lret
push
rcl
adc
addr16
jb
add
xchg
lret
push
adc
jmp
in
jns
aam
push
dec
lret
cli
rcr
add
enter
daa
neg
xor
aam
xchg
add
movsl
jmp
shll
xchg
in
cmp
cmc
push
xor
sar
xchg
inc
call
repnz
cmp
mov
je
jb
push
pop
mov
pop
cmp
push
cmpsl
jge
pop
sar
push
add
bound
cwtl
inc
fidivrs
std
pop
xor
roll
imul
arpl
addl
fs
or
test
daa
cmp
subb
dec
sti
dec
repnz
inc
loopne
mov
inc
adc
mov
add
iret
push
outsb
push
mov
scas
xor
ror
cmp
loope
sub
push
cmpsb
adc
notl
mov
sbb
test
cmp
stos
adcb
shlb
inc
ljmp
or
xchg
out
aas
adc
lcall
pop
pop
mov
popf
sbb
jl
jl
movsl
jecxz
shlb
out
lahf
jge
movsb
data16
pop
lahf
cld
out
std
insb
ret
pop
ljmp
mov
test
xor
daa
loope
mov
mov
dec
mov
mov
xchg
mov
repnz
bound
cmp
cld
mull
cmpsb
fst
jne
mov
ret
test
pop
xor
loop
jl
dec
aaa
pop
push
sbb
push
pop
in
cli
dec
rcrl
adc
pop
ja
sub
gs
sbb
jmp
mov
mov
loop
and
fldlg2
push
bound
dec
pop
jno
and
movsl
mov
jno
out
push
stos
mov
jmp
mov
iret
hlt
subl
loop
pushf
hlt
jne
je,pn
ret
pop
xchg
in
pop
shl
jo
adc
incb
sarb
dec
cmpb
mov
aam
mov
mov
sub
xchg
test
jo
dec
std
out
xlat
xchg
addr16
jle
shlb
int3
repz
and
xor
add
jb
or
aas
add
and
iret
mov
iret
or
push
adc
mov
xchg
cwtl
mov
sbb
jmp
cmpsb
add
clc
rclb
dec
lret
lret
push
xor
xchg
and
hlt
sbb
sarb
pop
popf
or
scas
add
in
xchg
or
fldl
aaa
push
fcoms
cmc
rcl
gs
sbb
lods
in
scas
and
sbb
out
cmp
jle
lods
sub
push
or
cmpsl
xchg
sbb
push
sarl
adc
je
lods
aad
lret
lcall
loop
dec
roll
mov
mov
lea
push
sahf
enter
sti
pusha
test
inc
add
jge
stos
ret
push
negb
mov
jne
dec
push
adc
jle
iret
or
fistpll
clc
adc
cmc
loop
cmp
xchg
data16
lods
jge
sub
addr16
xor
mov
or
sbb
daa
fidivrl
sub
and
and
mov
pushf
lahf
aam
xor
cmp
shl
dec
stos
lret
cmpsl
popa
cld
aad
aam
add
dec
xchg
pop
sbbb
adc
cmpsb
rcrl
cmpsb
data16
or
mov
mov
ja
mov
cmp
fidivrl
mov
inc
mov
outsb
int3
mov
mov
push
pop
push
insb
lods
xchg
xchg
xchg
js
cmp
adc
or
add
test
cmc
cmp
aam
ss
cmc
call
push
out
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
push
dec
decl
cmp
or
sarb
outsl
mov
aas
mov
iret
sar
popa
jmp
lahf
cmp
sbb
mov
mov
leave
sbb
xchg
and
data16
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
shrb
cwtl
shrb
stos
out
enter
dec
push
sbb
sbb
adc
add
js
lahf
rcrb
loopne
nop
fadds
add
inc
dec
push
cli
pusha
dec
jae
shrb
js
xchg
leave
add
rorl
out
mov
inc
add
adc
and
rcrb
imul
and
fldt
add
fneni(8087
lret
loope
aam
cmp
movsb
cmp
int3
ja
mov
test
bndstx
jle
cmp
sub
shl
test
pusha
xor
push
test
cmc
insl
add
scas
jp
xchg
flds
or
out
js
in
add
and
mov
dec
lock
in
mov
inc
add
clc
pop
cmp
jo
sub
or
sub
addr16
bswap
add
loopne
mov
cmp
js
in
sbb
fistps
sub
push
popa
or
out
xlat
cmp
inc
dec
jne
iret
js
dec
rcrb
cli
fcoms
loope
adc
pop
xor
jns
or
push
mov
ror
fsub
lods
mov
ljmp
cmp
push
jge
push
or
test
ror
mov
mov
aam
int3
or
sbb
insl
add
and
pop
js
loope
stos
movsl
int
mov
sub
clc
mov
sub
pusha
dec
adc
push
rcrb
loopne
nop
fadds
or
inc
sub
pusha
dec
adc
push
rcrb
icebp
rcl
repz
dec
or
mov
les
xchg
or
lock
icebp
sub
or
add
mov
repz
ret
lods
and
sbb
mov
jne
mov
push
rolb
inc
push
cmp
fmuls
cmp
mov
adc
je
nop
jb
inc
enter
xlat
hlt
sub
push
fwait
lret
sarl
cmp
test
dec
inc
inc
mov
sar
rol
jbe
xor
xor
mov
out
push
stc
enter
imul
xchg
and
mov
xorl
mov
arpl
scas
xlat
repz
push
sbb
call
pop
sub
cli
je
outsl
push
and
hlt
add
mov
xor
mov
xchg
outsb
std
out
mov
sub
imul
add
inc
gs
sbb
inc
xor
movsb
jns
add
sub
pop
fucomi
hlt
jne
lock
mov
movsb
add
mov
inc
mov
test
mov
jbe
ss
pop
test
sbb
cmp
mov
pop
pop
ret
push
inc
pushf
inc
popa
out
pop
ret
scas
jo
test
inc
nop
dec
negl
je
jmp
flds
lea
mov
pop
cmp
test
push
jecxz
mov
notb
lods
mov
loopne
fnstenv
mov
xor
or
call
xchg
into
sti
push
jmp
xor
hlt
pop
jge
add
mov
imul
jg
test
negl
shrb
push
xchg
decb
jno
jne
loop
adc
ss
sub
loope
shlb
mov
cmp
das
push
push
flds
lds
push
or
xlat
pop
out
mov
xor
je
sub
cli
nop
sub
arpl
lock
mov
push
adcb
jecxz
cmp
dec
ja
jle
push
sub
inc
cmp
loope
push
mov
adc
mov
sbb
jecxz
jnp
shl
xor
ret
sahf
stos
cmpb
loope
dec
addr16
shlb
xchg
jmp
mov
fucomp
mov
int3
and
shl
and
mov
jb
jb
call
les
or
fldt
jl
out
inc
xchg
push
cmp
add
jl
add
xor
jmp
sarb
cmp
bound
push
mov
and
or
scas
jbe
rclw
test
pop
aad
or
mov
and
in
jmp
jl
push
test
pop
shl
jl
movsl
and
mov
pop
inc
enter
inc
ja
icebp
cmp
dec
pop
sbb
xchg
repz
sti
lods
call
cwtl
pop
pop
xchg
popa
sbbl
jmp
inc
and
mov
mov
sbb
xor
in
cmp
cmpsb
in
movsb
and
movsb
mov
test
xchg
ljmp
lahf
push
aaa
bound
push
sbb
fnstenv
loope
mov
je
ret
sub
daa
sub
cmp
fwait
xchg
jecxz
push
sbb
ljmp
dec
rorb
aam
sub
jne
out
xor
and
mov
xchg
adc
xor
nop
xchg
repnz
lods
loop
mov
push
push
pop
ret
es
mov
mov
mov
add
sbb
add
in
push
push
adc
xor
add
add
out
iret
popf
xchg
sub
jp
sub
cld
pop
inc
dec
and
imul
pushf
daa
mov
iret
add
and
pop
or
push
xchg
insl
imul
xchg
aad
shl
pop
push
cld
mov
jp
in
js
mov
sbb
or
push
jmp
sub
xchg
cmpsl
jmp
jb
mov
lock
dec
inc
cli
inc
adc
daa
fs
stos
dec
mov
jne
out
out
or
fsub
mov
jo
out
aad
sub
cmp
into
mov
mov
outsl
fidivl
test
mov
std
out
cmpsb
cmpsb
mov
and
fsubl
ficompl
lds
out
fsubrs
into
push
cmp
sbb
sbbb
adc
scas
or
push
push
call
insb
jecxz
jb
cmpsb
adc
jle
fdivrs
subl
roll
int3
push
mov
mov
mov
mov
mov
call
test
lret
fidivrl
aaa
sub
les
fsubl
dec
idivl
pop
mov
push
mov
stos
adc
clflush
mov
mov
fcmovbe
mov
inc
cmp
xchg
cmpsl
sbb
cmp
les
aad
push
add
push
ret
lods
es
pop
cmpsl
or
xor
and
stos
pop
stos
in
data16
pop
cmp
nop
xchg
adc
sub
rcrb
ljmp
addb
inc
push
out
dec
xchg
cmp
cltd
iret
fwait
adc
mov
xchg
and
inc
push
stos
jle
pop
aaa
scas
mov
lret
jo
cmpsl
cs
mov
aad
sub
jge
ss
mov
fcmovnu
insb
mov
or
int3
fsubr
dec
cmpsb
and
ja
lods
out
int3
cmp
ret
push
mov
jns
and
in
pop
ret
fnsave
xor
push
pop
inc
clc
adc
sbb
xchg
ret
call
rorl
mov
mov
sub
mov
mov
xlat
pop
jp
dec
cmp
push
test
ja
mov
cltd
mov
in
jne
pop
outsl
cmpsb
mov
sub
inc
mov
int
sub
and
jecxz
pop
push
test
insb
sbb
ror
xchg
repnz
enter
insb
hlt
xchg
loop
roll
addr16
add
movmskps
aam
stos
mov
sbb
mov
push
pusha
adc
dec
in
mov
fldl
mov
and
movzbl
sub
mov
lds
into
js
mov
dec
fstpt
xchg
push
add
mov
sahf
mov
pop
in
ss
xchg
cmp
push
or
ljmp
rclb
push
or
int
jnp
pop
add
lds
sbb
xchg
jmp
scas
push
xchg
mov
push
rcll
inc
push
arpl
loope
data16
xor
adc
mull
sub
push
mov
mov
push
test
aam
adc
mov
inc
add
pop
aas
std
xor
icebp
inc
xchg
push
sub
mov
repz
in
xor
or
insl
jecxz
rol
and
sub
mov
xchg
mov
mov
jne
loop
jecxz
and
xor
cmp
scas
ljmp
adc
mov
mov
cmp
fistpl
shl
xchg
insl
pop
bsr
push
jge
dec
lahf
add
mov
inc
inc
adc
movsb
mov
pop
iret
xchg
pop
mov
jo
je
nop
push
in
ss
sub
rcl
mov
imull
push
inc
sbb
xor
enter
sti
incl
sbb
or
cs
jnp
dec
rcrl
mov
movsl
xchg
jbe
stos
xor
inc
push
xor
xchg
sub
dec
jecxz
lods
in
frstor
pop
sub
mov
push
nopl
sub
ds
cld
mov
cmp
gs
sbb
xor
and
or
add
and
jg
fcmovnu
imul
loope
xchg
int3
mov
pop
sub
xchg
mov
adc
imul
dec
and
cmpsb
popa
adcb
push
lds
jp
sti
sbb
int3
xor
adc
sub
sbb
je
mov
cmp
call
movsb
popf
sub
jge
popf
popf
ror
outsb
cmp
xchg
mov
in
xchg
xchg
push
mov
ljmp
rcl
cmpsl
pop
cli
mov
pop
loopne
fwait
jns
push
or
sbb
mov
xchg
push
hlt
popf
adc
sbb
hlt
or
and
inc
movsb
push
add
pushl
test
pop
fbld
sbb
push
das
adc
jb
loop
iret
fdivrs
add
int3
xchg
loop
jbe
inc
and
pop
mov
and
and
movsb
sbb
mov
je
mov
mov
insl
mov
pop
and
movsb
rclb
rcrl
outsb
sub
push
imul
mov
lcall
push
addr16
je
sub
fistl
and
ds
mov
pop
jno,pt
cli
out
jge
dec
and
out
cmovge
mov
jnp
clc
sti
out
or
cmpsb
lcall
lods
pop
sbb
inc
pop
ds
in
arpl
xor
lcall
pop
adc
pop
mov
cmp
sti
push
add
cli
inc
and
sub
rolb
fs
insl
sbb
mov
adc
push
repz
ds
xor
ret
xor
rol
xchg
aam
popa
rcrb
jl
mov
into
iret
imul
fimuls
test
mov
loopne
test
div
pop
push
sub
adc
jp
pusha
adc
sarb
icebp
sub
jnp
cmp
fwait
mov
xchg
push
clc
mov
es
fsubr
mov
loop
add
in
fdivs
cli
movsl
or
lret
inc
imul
adc
test
or
dec
xchg
shl
imul
sbbb
push
cmp
xchg
call
pop
mov
or
jle
dec
std
or
jne
cmpb
outsb
insl
hlt
fucomi
jno
jne
mov
clc
scas
gs
je
lea
lock
cmp
ret
dec
inc
out
dec
jne
and
and
sbb
mov
scas
or
sub
adc
dec
cmc
das
push
fisttps
dec
sub
inc
mov
mov
inc
mov
inc
rorb
dec
push
and
aad
and
push
int
sbb
aad
fmull
call
and
or
ljmp
or
sbb
push
fsub
mov
fs
arpl
stos
call
and
frstor
pushf
idivl
lret
cltd
push
stc
cmp
mov
out
test
push
mov
xchg
nop
data16
notb
dec
loope
and
xlat
mov
xor
je
sbb
test
push
mov
and
insl
mov
push
add
test
shrb
or
cwtl
pop
mov
fdivrl
mov
mov
xchg
dec
cmp
dec
inc
fwait
mov
sbb
sub
scas
mov
cmp
push
addr16
idiv
lahf
test
popa
fwait
pop
cmp
push
shr
test
xchg
out
divb
lds
mov
fwait
sbb
insl
cltd
jmp
mov
arpl
dec
imul
or
jge
add
inc
pusha
aam
outsl
sti
push
push
xchg
iret
lret
sub
fsubs
std
cmc
insb
adc
pop
ret
sbb
xchg
sti
stc
pop
or
xchg
adc
jle
or
push
dec
xor
dec
js
repnz
xor
mov
icebp
sub
in
scas
jg
sbb
loopne
dec
adc
sub
inc
cmc
pop
das
fldenv
insb
inc
xor
and
loope
rcl
xor
movups
mov
inc
inc
pop
adc
lret
mov
mov
xor
mov
movsb
loop
push
ljmp
lret
in
xchg
dec
mulb
decl
fidivs
scas
jne
rcl
or
js
sti
jno
sbb
leave
fs
hlt
aam
je
mov
mov
ljmp
jbe
xchg
out
mov
inc
cmp
lcall
and
das
loope
pop
ja
jo
sub
ss
shll
xchg
cmp
adc
push
mov
cmp
pop
push
stos
bound
jge
pushf
sti
js
push
xlat
cmp
shll
in
stc
loop
inc
stos
mov
mov
arpl
stos
cwtl
iret
cltd
pusha
jbe
mov
inc
imul
pop
jg
imul
mov
dec
jmp
enter
in
fdivrs
pop
rep
addr16
sarb
leave
jb
addr16
nop
cmp
pop
lret
inc
mov
add
lret
out
loope
xor
arpl
xor
shll
in
test
push
jae
into
jb
shll
ljmp
jecxz
stos
lods
xor
cwtl
sbb
mov
dec
imul
sub
aad
outsb
iret
mov
or
pusha
adc
outsl
dec
cmp
stos
fwait
rorl
jecxz
pop
add
sub
push
pop
or
int
sub
cltd
sub
inc
out
test
pop
es
xchg
jmp
sub
jno
call
xor
inc
jp
xadd
stos
insl
inc
lds
xlat
add
cmp
dec
jo
sub
popa
and
mov
push
jecxz
xor
mov
xor
stos
test
int
jmp
adc
adc
cmp
mov
pop
lods
lret
mov
daa
dec
push
fnsetpm(287
pop
mov
xlat
lret
shr
pusha
mov
mov
daa
xchg
pop
iret
and
pop
mov
sti
dec
jle
negl
scas
rorl
mov
in
or
call
arpl
add
inc
int3
ja
adc
js
push
sbb
scas
cmc
aam
push
les
sbb
nop
stos
in
orb
leave
and
movsb
xchg
jmp
mov
mov
pop
xor
cmp
pop
ss
scas
cs
sbb
dec
scas
xchg
das
jmp
adc
into
xor
iret
adc
testb
mov
add
sub
jbe
movsbl
jo
push
mov
es
popf
sbb
or
stos
pop
add
gs
insb
dec
cmpb
push
aad
adc
mov
jecxz
outsb
inc
jecxz
ret
sub
xor
cld
lahf
pop
xor
jo
ret
mov
hlt
or
mov
or
movsl
pop
in
jb
leave
lock
dec
popf
sbb
and
sub
insl
lret
and
jae
cltd
es
push
mov
add
cmp
icebp
mov
shll
inc
mov
scas
dec
shr
imul
push
inc
movsb
out
dec
test
addb
imul
xlat
xlat
xchg
pop
and
fs
cld
or
inc
inc
stc
push
aaa
outsl
or
mov
aas
add
data16
lock
pop
repnz
scas
push
mov
arpl
or
out
rorb
or
sbb
dec
sub
and
fstl
andb
hlt
mov
sbb
jae
ret
lods
rcrl
js
inc
clc
and
pusha
push
inc
jno
pop
push
xchg
push
mov
cmp
mov
std
mov
in
mov
mov
insb
pop
jns
sahf
scas
inc
ss
lods
nop
mov
mov
adcb
xchg
xor
adc
sti
add
dec
dec
inc
or
fwait
sti
cmp
jo
jnp
cltd
popf
lock
insl
mov
repnz
adc
cmp
dec
std
mov
repz
lcall
frstor
mov
mov
or
fs
xchg
in
cmp
in
xor
lret
mov
test
shll
test
jno
push
scas
sbb
ficoml
push
roll
shrb
fcmovne
ror
mov
ljmp
inc
js
adc
mov
push
cs
and
mov
jnp
scas
fchs
sbb
pushf
xchg
ja
sti
sub
push
xor
sahf
mov
rorl
add
icebp
mov
movsb
or
insb
sub
orl
add
xchg
lahf
rcrb
lret
cmc
pop
sub
sub
mov
aam
xor
aaa
cmp
shlb
loope
fdivrs
jp
adc
in
cmp
int3
les
std
cs
popf
jecxz
lods
and
in
cli
inc
fnstsw
push
cmpsl
movsb
sahf
lret
pop
ljmp
lret
cmc
jl
pop
aaa
lods
jg
andb
jno
add
push
addr16
pop
outsb
outsl
adc
inc
ja
fwait
jle
jne
out
repz
sarb
mov
rolb
cmp
push
mov
fidivrs
push
pop
aaa
sbb
push
push
test
insb
cmc
test
call
cmp
sub
mov
shlb
sub
jno
aam
mov
sbb
imul
test
mov
mov
lea
add
sbb
in
push
dec
add
inc
pop
movsb
loop
jo
adcl
xchg
fs
daa
dec
dec
inc
sbb
xor
je
enter
cmc
inc
adc
dec
insl
fnstenv
cld
xor
mov
cmp
and
dec
subl
sahf
test
add
pop
jp
cmp
pop
mov
and
and
jnp
adc
mov
inc
movl
pop
cmpsl
adc
inc
adc
xor
aam
pop
pop
fidivs
fs
mov
sub
leave
pop
adc
or
mov
pop
decl
ljmp
xchg
js
out
add
xlat
ret
inc
es
lahf
mov
rsqrtps
xchg
adc
mov
pop
cmp
push
mov
repnz
mov
and
and
imul
push
inc
gs
enter
insl
in
fsubrl
dec
xchg
pop
enter
adc
adc
pop
pop
out
aad
adc
repnz
xor
mov
push
dec
jecxz
out
rolb
je
ss
cmp
add
out
sahf
or
int
add
inc
mov
arpl
xor
ljmp
pop
iret
push
incl
dec
and
xchg
pop
jle
outsl
js
out
xchg
xor
push
addr16
dec
shl
inc
push
les
sbb
pop
test
push
lret
fcoms
adc
push
sub
loopne
sar
idivl
xchg
pop
xor
and
jg
loopne
das
lds
xor
jp
ljmp
or
xchg
or
aas
pusha
ret
loope
inc
sub
gs
pop
ljmp
mov
dec
lahf
out
in
or
sbb
mov
and
movb
lret
movsl
mov
cmp
xchg
dec
xchg
imul
stos
adc
jl
mov
push
mov
insl
sub
xor
pusha
add
cmp
sbbl
dec
xor
pop
mov
repz
push
adc
pop
jnp
popf
pop
jo
mov
ljmp
mov
shlb
in
or
inc
cmpsb
loop
inc
jbe
lahf
stos
movsl
jl
jae
and
cmpsl
insl
pushf
jmp
inc
push
ret
add
clc
movsl
call
aad
and
sbb
jl
mov
pop
imul
in
pop
jg
movsl
push
add
sub
pop
pop
inc
fstl
mov
jmp
cltd
dec
jns
xchg
jno
cli
and
scas
mov
mov
test
movsl
or
mov
sbb
ret
sub
rclb
xchg
shr
test
mov
pop
das
jge
shr
mov
pop
bound
scas
inc
sub
insb
sub
aad
mov
adc
and
jle
jle
push
and
scas
outsl
adc
jmp
cs
push
int
hlt
dec
sbb
mov
repz
mov
hlt
jno
add
lahf
lds
xchg
icebp
dec
sbb
fisubl
fs
loopne
loop
shlb
pop
sbb
fldz
cmp
mov
mov
sub
mov
jl
pop
mov
or
fwait
jo
dec
arpl
clc
movsl
xchg
lock
push
push
std
and
push
jbe
subl
xchg
mov
jge
jb
pushf
test
or
dec
repnz
stc
mov
test
cwtl
out
out
js
pcmpeqb
outsb
mov
xchg
fs
mov
bnd
pop
enter
test
jno
and
push
push
fmull
pop
xchg
cmp
mov
in
mov
mov
sbb
ss
or
ds
push
mov
scas
push
jb
test
inc
ljmp
jmp
pushf
pop
pop
inc
lret
cli
xor
shlb
into
and
or
sub
sub
shl
pop
orl
mov
push
lods
jns
mov
xor
andb
ja
sbb
enter
add
outsb
dec
xchg
cmp
inc
or
xor
movsb
fsubs
jb
fadd
frstor
mov
xchg
push
imul
fwait
mov
ja
je
pop
jge
mov
mov
add
jne
stos
js
mov
cmp
mov
mov
fsub
div
sbb
icebp
popa
repnz
movb
and
jo
push
inc
aam
scas
les
dec
xor
inc
and
or
cli
pop
mov
mov
mov
hlt
daa
push
ret
ret
in
enter
adc
lcall
pop
add
mov
movsl
iret
dec
stos
cld
test
shlb
mov
sub
clc
mov
sub
pusha
dec
adc
push
rcrb
loopne
nop
fadds
or
inc
sub
pusha
dec
adc
push
rcrb
loopne
nop
fadds
or
inc
sub
cmp
adc
xor
mov
lock
subb
mov
xorb
aas
cwtl
sar
xchg
iret
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmpsb
cltd
mov
mov
inc
stos
xor
and
mov
cmpsb
or
pop
out
jns
imul
mov
leavew
push
stc
inc
xchg
mov
cmpsb
or
cmp
dec
jns
imul
mov
leavew
push
stc
inc
jmp
testl
push
notb
test
rcrb
test
lods
jb
bound
cli
movsl
jl
lock
push
cli
sbb
pop
xor
stos
add
inc
sub
fldcw
fdiv
xor
ret
insl
pop
test
or
pop
sbb
mov
daa
test
shll
jb
in
dec
fisttpll
xor
pusha
jns
dec
dec
es
push
cld
adc
fsubl
lods
ss
ljmp
xchg
inc
pop
cmpsb
out
notb
pop
mov
jae
push
inc
jmp
outsb
inc
push
xchg
inc
leave
fsubp
roll
movb
push
jns
xchg
into
sbb
add
test
scas
add
or
jecxz
or
pop
out
xlat
jns
jl
cltd
mov
mov
leavew
push
stc
inc
jmp
xchg
cmp
dec
jns
add
enter
test
adc
adc
stc
pop
loop
sbbb
sub
add
in
fmull
adc
ds
in
lret
jo
push
dec
mov
das
flds
inc
fisttpll
shll
int3
aaa
mull
push
stc
inc
jmp
xchg
cmp
dec
jns
imul
mov
leavew
push
stc
inc
jmp
xchg
cmp
dec
jns
imul
push
push
imul
test
int
xchg
ljmp
ss
dec
xlat
fwait
insb
sub
and
or
xchg
in
sbb
int3
aaa
shl
mov
mov
popf
out
aam
push
inc
xchg
lea
cmp
loope
inc
xor
cmpsb
inc
adc
jmp
addb
sbb
out
lahf
jnp
or
pop
xor
pop
push
shlb
mov
jb
int
scas
es
test
sbb
scas
pop
xchg
aaa
push
lret
loope
fwait
inc
fxch
loop
fildll
and
ret
mov
xchg
sbb
and
xor
jmp
add
mov
mov
push
nop
in
enter
fnstcw
aad
cmpl
xchg
stos
inc
mov
push
loop
pop
pop
dec
fdivs
aad
dec
inc
cmp
and
bound
pop
into
xor
cmovl
stos
mov
loop
mov
orb
fidivrl
arpl
ja
mov
sbb
imul
decl
pop
ja
fistpl
imul
add
int3
clc
inc
jns
xor
and
enter
bound
nop
jae
cld
xorb
jo
popa
testl
mov
out
jno
ret
inc
out
dec
movsl
push
lahf
cmp
mov
or
fldcw
xchg
and
jmp
cld
mov
insl
mov
fldcw
mov
pop
jl
rcll
stc
fsubl
cmpsb
cmp
push
andb
add
xchg
pop
fcomps
sub
xlat
shlb
pop
in
call
je
je
adc
and
rcll
repnz
xchg
int3
mov
test
and
loop
rclb
mov
and
push
xor
popa
inc
jne
ljmp
ret
jl
divb
sbb
cmp
js
lock
ja
jmp
cmp
incb
mov
lods
pop
rcll
data16
flds
pusha
push
pop
lea
repnz
or
clc
jecxz
pop
mov
jns
cmc
cli
hlt
stc
mov
aas
mov
xchg
cmpb
pop
adc
push
mov
test
and
mov
pop
mov
sbb
cli
pop
hlt
in
cmp
insb
int
adc
fimuls
jne
or
xor
mov
push
es
sbb
pop
outsl
popf
in
cmp
pshufw
cmpsb
dec
sbb
push
lret
ret
mov
inc
pop
or
xchg
int
scas
cmp
pop
jp
inc
mov
mov
jno
outsl
xchg
bound
neg
aas
leave
add
xor
imulb
xchg
push
or
inc
mov
pop
hlt
jg
in
inc
sub
mov
xor
lods
test
aas
inc
push
add
out
outsb
push
push
andb
lret
in
mov
in
outsb
or
out
rol
pop
vpaddsb
dec
push
aas
cmp
xchg
pop
mov
xor
cli
xor
adc
inc
sbb
inc
ljmp
mov
pop
int
mov
test
lods
mov
adc
ret
mov
pop
jae
xchg
sub
mov
jno
lods
jne
sti
rcrb
shlb
test
seto
and
push
aad
xchg
push
ret
aas
fwait
dec
adc
insb
aam
je
lret
xchg
decl
mov
popf
mov
xchg
das
xor
es
or
push
ffreep
enter
xor
shrl
pop
pop
call
xor
sbb
imul
inc
stos
cmp
mov
mov
imul
lds
dec
mov
xchg
or
add
mov
adc
movsl
insl
jo
bound
aam
repz
or
movl
out
push
aaa
ret
xor
mov
in
movsb
mov
outsl
dec
data16
xchg
add
jo
hlt
xchg
pushf
pop
cmp
test
dec
push
gs
stos
dec
stc
lret
lahf
dec
mov
and
push
xchg
loop
rcrb
mov
mov
xor
push
mov
xor
in
cmp
insb
fs
mov
fmuls
pop
lret
push
push
in
and
dec
adc
enter
mov
inc
lret
ret
jnp
loopne
cmp
dec
jo
sub
adc
pop
add
sub
xlat
push
push
or
out
mov
mov
mov
in
rcr
pop
leave
jg
xchg
or
fnstenv
xor
in
or
inc
dec
push
xlat
shlb
pop
clc
xor
xor
repnz
mov
decb
outsb
iret
fldenv
dec
test
aam
shll
cld
fstpt
outsb
push
and
push
leave
sub
inc
sub
xchg
jo
sbb
icebp
inc
popf
dec
mov
add
mov
int3
mov
bound
cmp
ljmp
stos
dec
ret
stos
insl
jl
sbb
push
and
gs
leave
adc
hlt
push
mov
test
es
xchg
js
lock
adc
test
add
nop
add
outsl
cld
js
imul
pusha
sub
jp
pop
add
jecxz
stc
or
push
or
mov
inc
pop
les
test
sbbl
add
arpl
lds
sub
xlat
adc
jns
add
cmp
scas
js
push
mov
int3
xchg
sbb
mov
mov
sbbl
xchg
jmp
xor
inc
and
aaa
jg
jnp
in
xor
scas
daa
aaa
fmull
sarl
stos
xor
loopne
mov
sub
cwtl
push
push
mov
popf
sub
jg
mov
sbb
ja
mov
or
mov
mov
stos
sub
jno
pop
js
sbb
cs
inc
xchg
ss
popa
into
dec
add
xor
cwtl
sbb
lret
inc
lock
shr
stc
xchg
mov
xor
sbb
fnstsw
addr16
pushf
gs
pop
jecxz
clc
xor
xchg
movb
pop
xchg
xchg
mov
push
pushf
ja
jmp
push
addr16
subl
fcmovu
cs
push
or
jmp
cmp
sub
jmp
hlt
les
pop
pop
repz
dec
cmp
nop
push
int3
cmpb
sbb
cmp
jle
xchg
cmc
add
lods
dec
push
push
pop
mov
imul
test
dec
mov
inc
inc
fstl
insb
movsl
mov
mov
and
xlat
aad
es
mov
jle
enter
incl
jg
mov
sbb
inc
mov
mov
cmp
jl
inc
mov
int
lcall
cmpsl
jge
scas
shrb
lods
add
ds
repz
movsb
adc
cmpsb
sub
add
insb
mov
in
xor
hlt
xlat
bound
imul
cmp
pop
addb
mov
in
jecxz
fwait
inc
int3
add
test
cmp
movsl
or
push
mov
clc
inc
xchg
fdivr
movsl
repz
fnstsw
es
xor
movsl
xor
movsb
mov
sub
add
sbb
mov
dec
push
cmc
mov
sbb
adc
les
insl
js
enter
movsl
mov
jecxz
mov
mov
aaa
push
dec
stos
out
loop
or
xor
add
shr
out
scas
enter
sub
cli
and
jbe
xchg
add
sub
out
jmp
sub
mov
lcall
mov
sbbb
int3
cmpsb
dec
jnp
jne
inc
dec
fists
repz
out
or
push
inc
out
push
pop
adc
int
dec
sbbl
jg
sub
ret
jecxz
add
addr16
rcrl
sbb
xor
jne
sbb
sbb
sarb
clc
cwtl
mov
jp
rol
mov
jmp
add
lcall
mov
div
jg
aaa
imulb
jg
pop
push
jg
and
mov
fisubl
pop
pop
mov
pop
scas
arpl
leave
cmp
ret
mov
icebp
inc
push
pop
jo
pop
ret
sub
sbb
pop
jne
rcrb
xchg
out
insl
dec
jg
ljmp
xchg
cmp
out
pop
stos
jmp
pop
fistl
fdivs
insl
pop
push
test
outsb
add
jb
movsl
inc
xchg
and
rclb
jge
nop
pop
pop
or
insb
or
sbb
push
jns
or
popf
jae
inc
mov
inc
push
or
call
pop
jge
inc
in
jmp
fisttpl
sbb
testl
and
cltd
cmpl
mov
pop
xor
in
ret
test
test
negl
push
mov
xlat
call
cmpsb
loopne
cmp
scas
ss
xchg
leave
jmp
jg
je
jmp
xor
push
sti
or
jle
movsl
xlat
dec
cmp
enter
fisubl
rcrl
xchg
ret
or
lret
mov
sub
outsb
push
aad
inc
call
fs
adc
push
jmp
mov
push
dec
mov
test
mov
xchg
dec
in
xor
outsl
pop
cmp
add
pop
lret
out
dec
dec
pusha
notl
sbb
inc
imul
movsl
aas
mov
xchg
push
mov
mov
mov
pop
sub
nop
cmpsb
rcll
in
aas
mov
pop
lret
jle
inc
ret
ret
mov
dec
test
mov
cmpl
mov
jmp
push
fdivp
pop
xchg
adc
imul
sti
pop
aad
sarb
gs
inc
call
cmp
imul
sbb
rolb
pop
push
xor
sub
mov
rcrb
cwtl
test
push
inc
cmp
cli
mov
push
dec
lods
subl
fistpl
insb
adc
adc
les
aaa
sbb
xorl
shlb
and
push
adc
pop
mov
sbb
mov
fnsave
lcall
out
cmpb
cmpsb
pusha
and
loope
aam
rolb
pop
addl
or
into
dec
aas
and
jge
dec
and
ffree
movsl
or
push
les
lods
add
dec
adc
lds
lods
dec
lods
outsl
rclb
imul
cmp
add
or
repnz
push
lret
jb
pop
jl
ret
xor
or
xchg
xor
xor
lret
xor
mov
mov
jno
loopne
idivb
imul
jnp
push
icebp
std
sbb
sbb
lcall
xlat
imul
orps
mov
dec
push
fisubrs
out
add
dec
icebp
fadd
cld
imul
mov
sub
pop
push
cmpsl
xchg
adcb
inc
pop
push
mov
cs
fisubs
mov
aaa
add
or
sub
mov
nop
cmp
ja
sub
pop
fsubp
xor
pop
or
clc
mov
push
lret
sbb
mov
rolb
lea
pop
daa
lods
mov
mov
outsl
std
in
jge
in
aam
sbb
sub
aad
xchg
jae
dec
test
bnd
xchg
inc
dec
and
lret
dec
jmp
rorb
xchg
popf
data16
cmpsl
push
popw
cwtl
add
daa
jne
dec
sbb
in
clc
adc
cli
dec
xchg
adc
popa
dec
fbstp
out
sub
fstl
loop
jae
or
sbb
mov
lret
xchg
dec
gs
pop
testb
mov
loop
pop
xor
adc
inc
inc
xchg
jns
fldenv
fmuls
test
inc
fildl
popf
and
mull
mov
pop
aaa
pop
inc
push
lods
pushf
data16
push
push
push
mov
fs
pop
in
xchg
es
and
jb
movsb
rorb
fucomi
xchg
push
jnp
push
push
push
push
push
leave
jne
into
in
xchg
and
inc
lret
cwtl
cmp
add
das
xor
repnz
popf
sbb
push
or
roll
push
aad
sahf
ret
mov
pop
out
int
ljmp
aam
pop
ljmp
dec
sahf
clc
or
rcrb
jmp
sbb
fbld
fs
addr16
xlat
jle
hlt
xor
sub
cltd
hlt
sbb
pushf
jmp
adc
aad
push
insl
xchg
loop
nop
cwtl
je
out
xor
xor
pop
adc
cmp
cli
movsb
pop
clc
push
leave
dec
inc
pop
jmp
pop
sbb
rcrb
pop
inc
cmp
push
fiaddl
mov
mov
into
jge
int3
sbb
and
cli
aad
pop
xchg
push
in
fstpt
and
ds
mov
sub
clc
fwait
add
push
mov
bound
xchg
in
je
cltd
imulb
pop
aam
ror
out
jnp
neg
das
xor
and
xchg
inc
and
ds
sbb
sub
je
lods
dec
inc
pop
sub
daa
lods
dec
push
or
jne
xchg
test
and
add
sub
popf
pushf
push
mov
outsb
lret
sti
clc
dec
jo
faddl
loopne
nop
cltd
xor
cld
imul
or
into
adc
add
xchg
shll
in
or
dec
popf
mov
pop
sbbl
lea
out
sahf
out
cs
push
lcall
pop
pushf
aaa
cltd
jbe
jp
lret
sarb
clc
es
das
dec
arpl
push
push
rol
inc
and
ja
lret
mov
xchg
icebp
stc
add
add
sub
inc
pop
pop
or
inc
ret
mov
jae
xchg
xchg
jb
pusha
testb
es
in
dec
imul
jne
push
pop
mov
push
xchg
jbe
and
repz
xor
dec
push
dec
jnp
cmp
mov
lods
jp
pop
rcl
push
fiadds
lock
out
js
enter
jp
stos
sbb
mov
mov
cmpsb
outsb
push
mul
aas
aas
jb
inc
ds
fstl
aad
pop
xor
push
adc
ljmp
mov
xor
fists
or
aaa
sbb
into
mov
cs
push
lods
dec
das
outsl
sahf
adc
push
mov
xor
clc
mov
cmp
adc
shll
stc
fisubs
test
or
xchg
jge
pop
dec
fs
xlat
hlt
arpl
and
in
icebp
aam
cwtl
inc
call
push
into
mov
shll
push
add
in
stc
xor
xchg
cmp
push
mov
ss
xor
push
sbb
repnz
gs
sbb
dec
jl
xor
scas
std
ljmp
movsl
dec
xchg
push
imul
ljmp
inc
stos
and
xchg
add
iret
sbb
ja
loop
pop
xor
xchg
dec
inc
inc
dec
mov
aam
dec
sub
mov
imul
test
xor
mov
sub
aad
mov
pop
push
rorl
in
xchg
cmp
icebp
subl
dec
mov
addb
mov
mov
adc
test
andb
dec
hlt
stc
stos
sbb
mov
xor
int3
movsl
add
xor
push
push
pop
and
test
scas
jnp
cld
pop
test
mov
in
xor
loop
inc
fdivrs
repnz
dec
mov
sub
ja
insb
cli
outsl
xchg
jmp
add
push
pop
out
xor
jbe
aam
popf
ret
testl
xchg
xchg
aaa
bound
outsb
shl
test
mov
adc
les
or
outsl
and
outsl
std
lock
inc
push
pop
int
inc
int3
dec
mov
rcrb
addr16
out
pop
fwait
pushf
xchg
int
sbb
xor
fs
mov
push
int3
icebp
out
mov
dec
jae
hlt
sub
clc
mov
sub
mov
cmp
hlt
je
out
fisubs
fxch
or
push
pop
jecxz
into
pop
scas
add
sub
stos
cmp
in
flds
jmp
rcrl
sub
mov
fisubrs
lock
jae
and
mov
adc
jp
sbb
cmp
push
dec
mov
dec
lods
cmp
out
xchg
sarl
iret
dec
iret
lods
pushf
or
sub
aaa
dec
inc
pop
lea
cwtl
jb
inc
sbb
gs
shrl
incb
adc
inc
push
ljmp
sub
xchg
data16
xorl
adc
push
mov
hlt
sbb
mov
mov
rorl
lcall
pop
push
jno
popa
mov
rolb
inc
adc
sarb
outsb
fimull
icebp
movsb
fs
lock
mov
xchg
dec
dec
test
lds
rcl
dec
mov
scas
js
dec
adc
fwait
out
sbbb
mov
xchg
ja
adc
arpl
test
push
lahf
inc
mov
push
cmpsb
in
cmp
add
inc
scas
ret
in
inc
cmpsb
nop
cltd
dec
pushf
in
xchg
testl
adc
clc
mov
jp
sub
aad
arpl
sbb
push
sbb
xlat
pushl
dec
adc
icebp
push
xchg
std
inc
dec
sbb
icebp
fcmovne
cmpsl
aam
push
jge
cmpsl
mov
push
mov
dec
mov
pusha
outsl
sbb
aas
jmp
mov
mov
sub
or
jmp
scas
adc
pop
rcrl
ja
frstor
and
dec
sti
das
fistl
mov
cwtl
lods
mov
test
sub
dec
sub
push
xlat
scas
push
jge
in
dec
adc
filds
mov
sub
insl
and
jp
add
ja
add
push
jge
push
inc
aas
inc
js
push
mov
adc
cmpsl
fisttpll
pusha
pop
sbb
push
rcrl
sti
loop
fwait
iret
sub
lods
sbb
das
cs
aas
fwait
pop
lret
sub
jge
stos
push
mov
out
or
mov
es
sub
clc
or
or
mov
and
adc
push
pusha
sub
lea
adc
jo
pop
aas
xor
and
mov
out
ret
loopne
call
fwait
add
repz
daa
push
xor
les
out
dec
aaa
andl
mov
leave
arpl
xchg
movsb
mov
lea
ljmp
adc
pop
mov
pop
mov
inc
mov
shrl
subl
xchg
pop
mov
jns
sub
scas
xor
cmp
add
test
dec
dec
mov
jne
adc
stc
and
pop
fisttpl
or
mov
test
test
sub
fidivs
and
iret
cmpl
pusha
lods
inc
xor
pusha
lea
jo
fsubrs
hlt
lret
ret
ja,pt
cmp
and
test
mov
sahf
dec
sbb
leave
dec
xchg
out
sahf
mov
pop
mov
jl
or
and
scas
push
xor
cld
adc
mov
shrl
fistps
inc
leave
and
jmp
cltd
test
test
loop
hlt
or
push
test
pop
or
mov
cmp
fmuls
fs
imul
push
lea
test
movsb
and
mov
movaps
cmp
test
mov
outsl
mov
add
or
subl
in
cmpb
fidivrl
ficomps
dec
shrb
test
adc
push
test
enter
cwtl
stc
aaa
xor
mov
cld
dec
pop
jp
int
cmp
dec
aad
push
repnz
jo
dec
in
cld
push
loop
gs
mov
inc
dec
and
cs
fcoml
sbb
push
pop
into
in
loop
sub
and
pop
sub
scas
mov
mov
sarb
or
test
jecxz
sub
cmp
cmp
test
pop
rcrb
pop
and
jnp
xor
movsb
mov
adc
incb
cmc
lods
dec
or
push
call
addr16
test
sbb
xchg
jno
mov
inc
mov
xchg
fwait
in
pop
ljmp
stc
pop
test
ja
gs
loop
sub
popf
xchg
inc
outsl
sub
leave
aad
mov
fimull
and
and
ds
out
xor
stos
lods
cmp
arpl
xchg
lcall
fisttps
add
push
inc
sub
loope
insl
fstpt
or
jmp
js
add
mov
cld
jmp
insl
and
jg
aaa
push
sbb
bsr
dec
inc
test
sar
in
jp
lods
mov
cld
pop
xor
jp
mov
faddl
xchg
sub
cltd
push
push
lahf
gs
icebp
jo
fdivrp
jg
inc
or
xor
pop
and
mov
outsb
push
movsb
in
shll
stos
jmp
mov
jne
or
jbe
leavew
push
stc
inc
jmp
xchg
cmp
dec
jns
imul
mov
leavew
push
stc
inc
jmp
xchg
cmp
dec
jns
imul
mov
leavew
push
stc
inc
jmp
xchg
cmp
dec
jns
imul
mov
leavew
push
stc
inc
jmp
cmp
xchg
shrl
sub
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
