xor
add
sub
mov
jmp
push
push
call
call
xor
inc
mov
xor
mov
rol
add
mov
cmp
jmp
sub
test
jne
and
add
shr
mov
jmp
shr
jmp
add
add
lds
in
shr
xor
mov
and
sub
mov
rol
sub
mov
jmp
push
jmp
jmp
jmp
call
call
leave
addl
lea
push
push
jmp
ret
push
jmp
push
inc
push
ret
push
pop
xorl
push
jmp
pop
jmp
call
xorl
movb
call
cmpb
jne
jmp
mov
add
rol
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
test
add
xor
decl
addl
subl
xorl
movl
xorl
ret
add
add
add
jmp
push
jmp
ret
call
subl
jmp
push
jmp
push
subl
push
push
jmp
push
call
nop
push
subl
call
mov
add
mov
movzwl
movzwl
add
jmp
cmpl
je
push
jmp
rep
aad
adc
push
push
mov
xor
test
push
jmp
movb
call
addb
movb
movb
movb
movb
jmp
out
mov
add
push
jmp
push
push
lea
add
ror
mov
add
push
call
shr
or
shr
mov
jmp
shll
jbe
add
pop
movb
movl
call
lea
call
mov
or
or
ror
mov
jmp
call
add
pusha
mov
call
popa
jmp
ret
add
add
add
pop
or
add
lock
jne
rorb
add
add
and
mov
jmp
add
push
nop
nop
nop
nop
nop
ror
sub
mov
sub
test
jne
jmp
add
rol
ror
inc
mov
mov
push
lea
ror
mov
jmp
add
ret
mov
inc
mov
sub
add
mov
pop
ret
add
add
add
mov
add
mov
lea
sub
dec
or
mov
shr
and
lea
xor
and
rol
or
mov
jmp
mov
add
or
add
push
rol
mov
sub
mov
push
push
push
jmp
jne
xor
ret
ret
add
add
add
pop
and
jmp
call
mov
inc
and
add
mov
push
push
mov
mov
mov
add
jmp
add
sub
test
jne
xor
sub
mov
mov
or
mov
movzbl
jmp
push
add
and
mov
sub
shr
test
lea
jmp
add
ret
rol
xor
or
mov
test
jne
pushl
ret
mov
mov
sub
mov
jmp
mov
test
jne
add
ret
shl
xor
mov
add
mov
jmp
dec
mov
shl
mov
sub
jmp
add
add
add
add
add
xor
cs
leave
dec
subl
jmp
xor
shl
mov
lea
sub
test
mov
mov
mov
movl
jle
jmp
xchg
sti
dec
mov
mov
mov
jne
jmp
mov
mov
mov
shr
inc
and
xor
add
mov
sub
test
jne
movzbl
add
jmp
add
jmp
xor
out
inc
lcall
add
push
add
jmp
add
mov
or
mov
jmp
mov
adc
push
add
add
adc
testl
out
add
gs
mov
add
jmp
jle
mov
or
mov
jmp
lea
nop
movzwl
jmp
add
add
xor
jmp
test
jmp
add
cmc
inc
dec
push
pop
mov
jmp
push
push
or
mov
mov
xor
mov
jmp
mov
ror
xor
shr
ror
or
mov
lea
or
rol
mov
add
test
je
jmp
test
jne
add
ret
shr
dec
add
mov
push
jmp
push
pop
call
push
call
subl
call
and
inc
sub
inc
mov
add
jmp
lea
lea
cltd
and
add
sar
test
jmp
push
and
add
add
ror
and
mov
jmp
sub
jmp
mov
jmp
add
jmp
mov
lea
and
mov
or
mov
mov
shr
and
add
test
je
jmp
jns
movzwl
push
jmp
mov
lea
push
push
jmp
lea
push
sub
shr
add
or
mov
mov
mov
push
jmp
call
pop
call
nop
call
call
addl
push
push
call
jmp
mov
lea
sub
mov
sub
mov
shr
and
add
test
jmp
cmp
mov
mov
jle
jmp
mov
shr
or
xor
mov
mov
add
jne
jmp
or
inc
mov
mov
and
cmp
jne
and
add
add
jmp
add
add
push
dec
sub
add
rol
mov
mov
sub
jmp
nop
sub
cmpw
jne
jmp
mov
add
add
jmp
add
push
jmp
dec
push
push
push
xorl
call
test
jmp
add
push
jmp
push
inc
call
push
ret
xorl
call
test
jne
call
mov
and
cmpw
je
jmp
mov
add
jmp
add
add
add
add
add
les
xchg
add
sub
push
push
push
movb
movb
jmp
nop
nop
mov
mov
nop
push
nop
jmp
pushl
jmp
add
addl
sub
decl
incl
push
call
int3
int3
int3
int3
int3
int3
int3
int3
test
je
push
push
mov
shr
or
mov
sub
cmpl
jmp
adc
incl
adc
jne
cmpb
jne
jmp
lea
jmp
add
enter
mov
in
dec
mov
sub
or
mov
xor
mov
jmp
stc
mov
and
jne
jmp
add
ret
jmp
rep
movzwl
jmp
add
mov
add
sub
jne
add
jmp
call
add
jmp
jle
jmp
push
jmp
call
nop
call
subl
mov
call
push
jmp
inc
push
pop
call
leave
pop
subl
jmp
jne
mov
mov
pop
ret
add
add
add
mov
add
shl
inc
mov
mov
mov
jmp
mov
xor
test
jmp
sub
mov
add
add
sub
add
cmp
jmp
cmpl
jne
pop
pop
pop
jmp
mov
or
or
xor
mov
add
test
jmp
mov
xor
rol
or
xor
mov
mov
jmp
mov
call
push
jmp
pop
call
call
call
leave
xorl
jmp
xor
xor
and
add
mov
shr
jmp
je
movsbl
rol
jmp
mov
mov
jl
rol
ror
sub
shr
or
mov
mov
add
inc
and
add
mov
jmp
mov
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
test
ret
adc
fiadds
add
test
jle
mov
rol
xor
mov
lea
sub
sub
sub
jne
jmp
mov
call
push
jmp
push
call
push
dec
addl
mov
call
add
jmp
and
add
test
mov
je
mov
shl
mov
jmp
add
xor
mov
test
jne
cmp
je
jmp
call
shr
mov
or
mov
call
push
jmp
int3
ret
int3
call
nop
push
call
int3
push
xorl
push
jmp
int3
call
call
push
push
inc
int3
xorl
jmp
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
subl
jne
test
mov
jmp
push
jmp
call
pop
addl
lea
push
push
jmp
push
push
inc
push
pop
subl
push
jmp
leave
push
dec
call
pop
push
push
addl
mov
movb
call
jmp
adc
add
cmp
jl
pop
xor
pop
jmp
lret
push
call
xor
mov
shl
xor
mov
call
mov
mov
jmp
sub
into
jle
jmp
push
xchg
xor
ljmp
add
add
ret
jmp
lds
test
jne
movzbl
add
jmp
xor
dec
mov
pop
ret
add
sub
add
and
mov
movzwl
jmp
call
movl
lea
jmp
sub
mov
nop
add
add
sub
jmp
push
jmp
call
ret
addl
nop
nop
nop
nop
nop
push
jmp
jmp
inc
pop
int3
inc
addl
push
jmp
jmp
push
subl
call
jmp
mov
lea
shl
inc
xor
mov
jmp
cmp
add
inc
and
xor
shl
mov
xor
mov
mov
pop
add
pop
and
xor
add
mov
pop
ret
add
add
add
rorb
and
mov
mov
mov
or
shl
dec
mov
jmp
into
cltd
es
mov
test
mov
jle
jmp
mov
pop
and
add
jmp
ror
mov
mov
mov
cmp
jne
jmp
or
shr
mov
rol
rol
mov
push
xor
sub
add
and
mov
ror
mov
pop
sub
or
and
add
mov
xor
add
jmp
mov
lahf
test
je
add
ret
pop
pop
mov
jmp
lods
je
sub
jne
pop
pop
pop
shr
inc
mov
pop
ret
add
add
add
int3
shl
or
mov
pop
ret
add
add
add
add
add
sbb
pop
sub
fstps
sbb
mov
pop
mov
jmp
and
adc
inc
inc
and
add
add
and
mov
xor
mov
sub
test
jmp
jmp
sub
in
jmp
in
in
mov
in
les
lods
sub
add
add
jne
movzbl
add
lea
rol
shl
and
sub
mov
nop
nop
nop
nop
nop
shr
and
add
subl
lea
jne
jmp
mov
nop
nop
nop
nop
nop
je
sub
dec
mov
sub
mov
mov
add
jmp
movb
add
nop
nop
nop
nop
nop
jmp
movzbl
add
rol
shl
mov
and
add
add
shr
mov
nop
nop
nop
nop
nop
mov
je
test
je
jmp
lea
add
rol
and
mov
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
nop
nop
nop
nop
nop
jne
and
or
add
or
mov
mov
mov
movl
jmp
movl
mov
movl
nop
nop
nop
nop
nop
jmp
lea
call
cmpl
jne
cmp
nop
nop
nop
nop
nop
jne
call
test
mov
je
jmp
lea
ror
xor
mov
nop
nop
nop
nop
nop
sub
add
sub
mov
nop
nop
nop
nop
nop
mov
jne
mov
jmp
sub
jmp
nop
nop
nop
nop
nop
sub
or
or
shl
mov
or
mov
movzbl
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
add
add
nop
nop
nop
nop
nop
lea
mov
dec
sub
or
mov
mov
call
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jb
nop
nop
nop
nop
nop
add
cmp
jae
add
test
mov
je
or
inc
mov
nop
nop
nop
nop
nop
sub
mov
mov
add
nop
nop
nop
nop
nop
sub
jne
mov
mov
mov
xor
shl
dec
add
mov
nop
nop
nop
nop
nop
or
sub
ror
mov
inc
inc
shl
mov
mov
movl
jmp
mov
mov
add
add
mov
nop
nop
nop
nop
nop
movl
mov
cmpl
je
nop
nop
nop
nop
nop
pop
add
add
add
shr
mov
sub
pop
pop
and
ror
or
mov
pop
ret
add
add
add
add
add
add
add
adc
add
add
add
jno
add
add
add
jo
add
jo
add
add
add
add
add
add
add
add
add
adc
add
add
add
jno
add
add
add
jo
add
jo
add
add
add
add
add
add
add
outsl
jae
inc
jb
jbe
jb
sub
push
jns
gs
gs
jae
inc
popa
jo
jne
add
add
je
jb
arpl
jae
push
add
gs
je
inc
imul
add
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
jb
push
outsl
add
add
add
imul
js
add
adc
adc
add
add
add
add
add
add
pop
and
add
sbb
add
pop
pop
scas
insb
int3
push
test
sub
add
test
add
shll
add
fnstenv
stos
aaa
cmp
sub
cmp
cmp
xor
cmp
cmp
cmp
ss
cmp
cmp
push
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
iret
ds
aas
inc
xor
je
cmpl
xor
cmp
xor
xor
cmp
cmp
cmp
adc
jae
mov
xor
xor
pop
add
adc
add
pusha
xor
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
fadds
mov
popa
cli
inc
dec
cli
addr16
hlt
cltd
jmp
lret
push
loop
scas
dec
push
push
loope
push
mov
jmp
sbb
imul
push
fcomip
cs
xlat
mov
out
mov
outsb
stc
xor
mov
lods
xor
lds
in
ret
add
outsb
inc
inc
jno
pop
add
sbb
pop
ss
testl
adc
lock
push
or
push
clc
into
out
out
mov
stos
cmp
mov
ret
lret
call
stos
pop
mov
inc
mov
push
xchg
xchg
add
mov
xor
and
bound
test
mov
shlb
sbb
sub
test
mov
.byte
.byte
.byte
